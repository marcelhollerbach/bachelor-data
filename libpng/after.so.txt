
libpng/after.so:     file format elf64-x86-64


Disassembly of section .init:

0000000000005000 <_init>:
    5000:	endbr64 
    5004:	sub    $0x8,%rsp
    5008:	mov    0x2cfc9(%rip),%rax        # 31fd8 <__gmon_start__>
    500f:	test   %rax,%rax
    5012:	je     5016 <_init+0x16>
    5014:	callq  *%rax
    5016:	add    $0x8,%rsp
    501a:	retq   

Disassembly of section .plt:

0000000000005020 <.plt>:
    5020:	pushq  0x2cfe2(%rip)        # 32008 <_GLOBAL_OFFSET_TABLE_+0x8>
    5026:	jmpq   *0x2cfe4(%rip)        # 32010 <_GLOBAL_OFFSET_TABLE_+0x10>
    502c:	nopl   0x0(%rax)

0000000000005030 <png_get_y_offset_microns@plt>:
    5030:	jmpq   *0x2cfe2(%rip)        # 32018 <png_get_y_offset_microns@@PNG16_0+0x266f8>
    5036:	pushq  $0x0
    503b:	jmpq   5020 <.plt>

0000000000005040 <png_image_free@plt>:
    5040:	jmpq   *0x2cfda(%rip)        # 32020 <png_image_free@@PNG16_0+0x2b7c0>
    5046:	pushq  $0x1
    504b:	jmpq   5020 <.plt>

0000000000005050 <png_set_benign_errors@plt>:
    5050:	jmpq   *0x2cfd2(%rip)        # 32028 <png_set_benign_errors@@PNG16_0+0x11128>
    5056:	pushq  $0x2
    505b:	jmpq   5020 <.plt>

0000000000005060 <png_chunk_error@plt>:
    5060:	jmpq   *0x2cfca(%rip)        # 32030 <png_chunk_error@@PNG16_0+0x275a0>
    5066:	pushq  $0x3
    506b:	jmpq   5020 <.plt>

0000000000005070 <free@plt>:
    5070:	jmpq   *0x2cfc2(%rip)        # 32038 <free@GLIBC_2.2.5>
    5076:	pushq  $0x4
    507b:	jmpq   5020 <.plt>

0000000000005080 <png_read_update_info@plt>:
    5080:	jmpq   *0x2cfba(%rip)        # 32040 <png_read_update_info@@PNG16_0+0x231e0>
    5086:	pushq  $0x5
    508b:	jmpq   5020 <.plt>

0000000000005090 <abort@plt>:
    5090:	jmpq   *0x2cfb2(%rip)        # 32048 <abort@GLIBC_2.2.5>
    5096:	pushq  $0x6
    509b:	jmpq   5020 <.plt>

00000000000050a0 <__errno_location@plt>:
    50a0:	jmpq   *0x2cfaa(%rip)        # 32050 <__errno_location@GLIBC_2.2.5>
    50a6:	pushq  $0x7
    50ab:	jmpq   5020 <.plt>

00000000000050b0 <remove@plt>:
    50b0:	jmpq   *0x2cfa2(%rip)        # 32058 <remove@GLIBC_2.2.5>
    50b6:	pushq  $0x8
    50bb:	jmpq   5020 <.plt>

00000000000050c0 <png_get_rowbytes@plt>:
    50c0:	jmpq   *0x2cf9a(%rip)        # 32060 <png_get_rowbytes@@PNG16_0+0x26ad0>
    50c6:	pushq  $0x9
    50cb:	jmpq   5020 <.plt>

00000000000050d0 <png_set_swap_alpha@plt>:
    50d0:	jmpq   *0x2cf92(%rip)        # 32068 <png_set_swap_alpha@@PNG16_0+0xeb28>
    50d6:	pushq  $0xa
    50db:	jmpq   5020 <.plt>

00000000000050e0 <png_set_sRGB@plt>:
    50e0:	jmpq   *0x2cf8a(%rip)        # 32070 <png_set_sRGB@@PNG16_0+0x10350>
    50e6:	pushq  $0xb
    50eb:	jmpq   5020 <.plt>

00000000000050f0 <png_create_write_struct@plt>:
    50f0:	jmpq   *0x2cf82(%rip)        # 32078 <png_create_write_struct@@PNG16_0+0xe1e8>
    50f6:	pushq  $0xc
    50fb:	jmpq   5020 <.plt>

0000000000005100 <png_write_chunk_data@plt>:
    5100:	jmpq   *0x2cf7a(%rip)        # 32080 <png_write_chunk_data@@PNG16_0+0xa9f0>
    5106:	pushq  $0xd
    510b:	jmpq   5020 <.plt>

0000000000005110 <png_set_bKGD@plt>:
    5110:	jmpq   *0x2cf72(%rip)        # 32088 <png_set_bKGD@@PNG16_0+0x110d8>
    5116:	pushq  $0xe
    511b:	jmpq   5020 <.plt>

0000000000005120 <inflate@plt>:
    5120:	jmpq   *0x2cf6a(%rip)        # 32090 <inflate>
    5126:	pushq  $0xf
    512b:	jmpq   5020 <.plt>

0000000000005130 <ferror@plt>:
    5130:	jmpq   *0x2cf62(%rip)        # 32098 <ferror@GLIBC_2.2.5>
    5136:	pushq  $0x10
    513b:	jmpq   5020 <.plt>

0000000000005140 <png_write_sig@plt>:
    5140:	jmpq   *0x2cf5a(%rip)        # 320a0 <png_write_sig@@PNG16_0+0xaae0>
    5146:	pushq  $0x11
    514b:	jmpq   5020 <.plt>

0000000000005150 <png_malloc_warn@plt>:
    5150:	jmpq   *0x2cf52(%rip)        # 320a8 <png_malloc_warn@@PNG16_0+0x25828>
    5156:	pushq  $0x12
    515b:	jmpq   5020 <.plt>

0000000000005160 <fread@plt>:
    5160:	jmpq   *0x2cf4a(%rip)        # 320b0 <fread@GLIBC_2.2.5>
    5166:	pushq  $0x13
    516b:	jmpq   5020 <.plt>

0000000000005170 <png_read_end@plt>:
    5170:	jmpq   *0x2cf42(%rip)        # 320b8 <png_read_end@@PNG16_0+0x229d8>
    5176:	pushq  $0x14
    517b:	jmpq   5020 <.plt>

0000000000005180 <inflateReset2@plt>:
    5180:	jmpq   *0x2cf3a(%rip)        # 320c0 <inflateReset2@ZLIB_1.2.3.4>
    5186:	pushq  $0x15
    518b:	jmpq   5020 <.plt>

0000000000005190 <png_set_hIST@plt>:
    5190:	jmpq   *0x2cf32(%rip)        # 320c8 <png_set_hIST@@PNG16_0+0x10af8>
    5196:	pushq  $0x16
    519b:	jmpq   5020 <.plt>

00000000000051a0 <atof@plt>:
    51a0:	jmpq   *0x2cf2a(%rip)        # 320d0 <atof@GLIBC_2.2.5>
    51a6:	pushq  $0x17
    51ab:	jmpq   5020 <.plt>

00000000000051b0 <png_set_pCAL@plt>:
    51b0:	jmpq   *0x2cf22(%rip)        # 320d8 <png_set_pCAL@@PNG16_0+0x108e8>
    51b6:	pushq  $0x18
    51bb:	jmpq   5020 <.plt>

00000000000051c0 <crc32@plt>:
    51c0:	jmpq   *0x2cf1a(%rip)        # 320e0 <crc32>
    51c6:	pushq  $0x19
    51cb:	jmpq   5020 <.plt>

00000000000051d0 <png_set_sBIT@plt>:
    51d0:	jmpq   *0x2cf12(%rip)        # 320e8 <png_set_sBIT@@PNG16_0+0x10408>
    51d6:	pushq  $0x1a
    51db:	jmpq   5020 <.plt>

00000000000051e0 <png_set_swap@plt>:
    51e0:	jmpq   *0x2cf0a(%rip)        # 320f0 <png_set_swap@@PNG16_0+0xea70>
    51e6:	pushq  $0x1b
    51eb:	jmpq   5020 <.plt>

00000000000051f0 <png_convert_from_struct_tm@plt>:
    51f0:	jmpq   *0x2cf02(%rip)        # 320f8 <png_convert_from_struct_tm@@PNG16_0+0xdb78>
    51f6:	pushq  $0x1c
    51fb:	jmpq   5020 <.plt>

0000000000005200 <png_set_filler@plt>:
    5200:	jmpq   *0x2cefa(%rip)        # 32100 <png_set_filler@@PNG16_0+0xeb80>
    5206:	pushq  $0x1d
    520b:	jmpq   5020 <.plt>

0000000000005210 <png_get_x_pixels_per_meter@plt>:
    5210:	jmpq   *0x2cef2(%rip)        # 32108 <png_get_x_pixels_per_meter@@PNG16_0+0x269e8>
    5216:	pushq  $0x1e
    521b:	jmpq   5020 <.plt>

0000000000005220 <inflateValidate@plt>:
    5220:	jmpq   *0x2ceea(%rip)        # 32110 <inflateValidate@ZLIB_1.2.9>
    5226:	pushq  $0x1f
    522b:	jmpq   5020 <.plt>

0000000000005230 <png_chunk_benign_error@plt>:
    5230:	jmpq   *0x2cee2(%rip)        # 32118 <png_chunk_benign_error@@PNG16_0+0x27538>
    5236:	pushq  $0x20
    523b:	jmpq   5020 <.plt>

0000000000005240 <fclose@plt>:
    5240:	jmpq   *0x2ceda(%rip)        # 32120 <fclose@GLIBC_2.2.5>
    5246:	pushq  $0x21
    524b:	jmpq   5020 <.plt>

0000000000005250 <png_set_cHRM_fixed@plt>:
    5250:	jmpq   *0x2ced2(%rip)        # 32128 <png_set_cHRM_fixed@@PNG16_0+0x10e48>
    5256:	pushq  $0x22
    525b:	jmpq   5020 <.plt>

0000000000005260 <strlen@plt>:
    5260:	jmpq   *0x2ceca(%rip)        # 32130 <strlen@GLIBC_2.2.5>
    5266:	pushq  $0x23
    526b:	jmpq   5020 <.plt>

0000000000005270 <png_set_shift@plt>:
    5270:	jmpq   *0x2cec2(%rip)        # 32138 <png_set_shift@@PNG16_0+0xea28>
    5276:	pushq  $0x24
    527b:	jmpq   5020 <.plt>

0000000000005280 <png_create_info_struct@plt>:
    5280:	jmpq   *0x2ceba(%rip)        # 32140 <png_create_info_struct@@PNG16_0+0x2c6b0>
    5286:	pushq  $0x25
    528b:	jmpq   5020 <.plt>

0000000000005290 <png_set_gAMA_fixed@plt>:
    5290:	jmpq   *0x2ceb2(%rip)        # 32148 <png_set_gAMA_fixed@@PNG16_0+0x10bc8>
    5296:	pushq  $0x26
    529b:	jmpq   5020 <.plt>

00000000000052a0 <png_set_sPLT@plt>:
    52a0:	jmpq   *0x2ceaa(%rip)        # 32150 <png_set_sPLT@@PNG16_0+0x10170>
    52a6:	pushq  $0x27
    52ab:	jmpq   5020 <.plt>

00000000000052b0 <png_read_image@plt>:
    52b0:	jmpq   *0x2cea2(%rip)        # 32158 <png_read_image@@PNG16_0+0x22bf8>
    52b6:	pushq  $0x28
    52bb:	jmpq   5020 <.plt>

00000000000052c0 <png_set_gamma_fixed@plt>:
    52c0:	jmpq   *0x2ce9a(%rip)        # 32160 <png_set_gamma_fixed@@PNG16_0+0x1c620>
    52c6:	pushq  $0x29
    52cb:	jmpq   5020 <.plt>

00000000000052d0 <modf@plt>:
    52d0:	jmpq   *0x2ce92(%rip)        # 32168 <modf@GLIBC_2.2.5>
    52d6:	pushq  $0x2a
    52db:	jmpq   5020 <.plt>

00000000000052e0 <deflateReset@plt>:
    52e0:	jmpq   *0x2ce8a(%rip)        # 32170 <deflateReset>
    52e6:	pushq  $0x2b
    52eb:	jmpq   5020 <.plt>

00000000000052f0 <png_get_x_offset_microns@plt>:
    52f0:	jmpq   *0x2ce82(%rip)        # 32178 <png_get_x_offset_microns@@PNG16_0+0x26898>
    52f6:	pushq  $0x2c
    52fb:	jmpq   5020 <.plt>

0000000000005300 <png_set_write_fn@plt>:
    5300:	jmpq   *0x2ce7a(%rip)        # 32180 <png_set_write_fn@@PNG16_0+0xe430>
    5306:	pushq  $0x2d
    530b:	jmpq   5020 <.plt>

0000000000005310 <png_handle_as_unknown@plt>:
    5310:	jmpq   *0x2ce72(%rip)        # 32188 <png_handle_as_unknown@@PNG16_0+0x2ba28>
    5316:	pushq  $0x2e
    531b:	jmpq   5020 <.plt>

0000000000005320 <png_set_background_fixed@plt>:
    5320:	jmpq   *0x2ce6a(%rip)        # 32190 <png_set_background_fixed@@PNG16_0+0x1d2c0>
    5326:	pushq  $0x2f
    532b:	jmpq   5020 <.plt>

0000000000005330 <deflate@plt>:
    5330:	jmpq   *0x2ce62(%rip)        # 32198 <deflate>
    5336:	pushq  $0x30
    533b:	jmpq   5020 <.plt>

0000000000005340 <png_write_info@plt>:
    5340:	jmpq   *0x2ce5a(%rip)        # 321a0 <png_write_info@@PNG16_0+0xe010>
    5346:	pushq  $0x31
    534b:	jmpq   5020 <.plt>

0000000000005350 <memset@plt>:
    5350:	jmpq   *0x2ce52(%rip)        # 321a8 <memset@GLIBC_2.2.5>
    5356:	pushq  $0x32
    535b:	jmpq   5020 <.plt>

0000000000005360 <pow@plt>:
    5360:	jmpq   *0x2ce4a(%rip)        # 321b0 <pow@GLIBC_2.2.5>
    5366:	pushq  $0x33
    536b:	jmpq   5020 <.plt>

0000000000005370 <png_start_read_image@plt>:
    5370:	jmpq   *0x2ce42(%rip)        # 321b8 <png_start_read_image@@PNG16_0+0x23388>
    5376:	pushq  $0x34
    537b:	jmpq   5020 <.plt>

0000000000005380 <png_write_row@plt>:
    5380:	jmpq   *0x2ce3a(%rip)        # 321c0 <png_write_row@@PNG16_0+0xdb50>
    5386:	pushq  $0x35
    538b:	jmpq   5020 <.plt>

0000000000005390 <png_warning@plt>:
    5390:	jmpq   *0x2ce32(%rip)        # 321c8 <png_warning@@PNG16_0+0x276f8>
    5396:	pushq  $0x36
    539b:	jmpq   5020 <.plt>

00000000000053a0 <png_get_y_pixels_per_meter@plt>:
    53a0:	jmpq   *0x2ce2a(%rip)        # 321d0 <png_get_y_pixels_per_meter@@PNG16_0+0x26a70>
    53a6:	pushq  $0x37
    53ab:	jmpq   5020 <.plt>

00000000000053b0 <deflateInit2_@plt>:
    53b0:	jmpq   *0x2ce22(%rip)        # 321d8 <deflateInit2_>
    53b6:	pushq  $0x38
    53bb:	jmpq   5020 <.plt>

00000000000053c0 <png_write_end@plt>:
    53c0:	jmpq   *0x2ce1a(%rip)        # 321e0 <png_write_end@@PNG16_0+0xd6f0>
    53c6:	pushq  $0x39
    53cb:	jmpq   5020 <.plt>

00000000000053d0 <memcmp@plt>:
    53d0:	jmpq   *0x2ce12(%rip)        # 321e8 <memcmp@GLIBC_2.2.5>
    53d6:	pushq  $0x3a
    53db:	jmpq   5020 <.plt>

00000000000053e0 <png_set_filter@plt>:
    53e0:	jmpq   *0x2ce0a(%rip)        # 321f0 <png_set_filter@@PNG16_0+0xd430>
    53e6:	pushq  $0x3b
    53eb:	jmpq   5020 <.plt>

00000000000053f0 <png_set_interlace_handling@plt>:
    53f0:	jmpq   *0x2ce02(%rip)        # 321f8 <png_set_interlace_handling@@PNG16_0+0xeab8>
    53f6:	pushq  $0x3c
    53fb:	jmpq   5020 <.plt>

0000000000005400 <png_write_chunk@plt>:
    5400:	jmpq   *0x2cdfa(%rip)        # 32200 <png_write_chunk@@PNG16_0+0xabd0>
    5406:	pushq  $0x3d
    540b:	jmpq   5020 <.plt>

0000000000005410 <frexp@plt>:
    5410:	jmpq   *0x2cdf2(%rip)        # 32208 <frexp@GLIBC_2.2.5>
    5416:	pushq  $0x3e
    541b:	jmpq   5020 <.plt>

0000000000005420 <_setjmp@plt>:
    5420:	jmpq   *0x2cdea(%rip)        # 32210 <_setjmp@GLIBC_2.2.5>
    5426:	pushq  $0x3f
    542b:	jmpq   5020 <.plt>

0000000000005430 <png_set_eXIf_1@plt>:
    5430:	jmpq   *0x2cde2(%rip)        # 32218 <png_set_eXIf_1@@PNG16_0+0x10de8>
    5436:	pushq  $0x40
    543b:	jmpq   5020 <.plt>

0000000000005440 <png_set_expand_gray_1_2_4_to_8@plt>:
    5440:	jmpq   *0x2cdda(%rip)        # 32220 <png_set_expand_gray_1_2_4_to_8@@PNG16_0+0x1d990>
    5446:	pushq  $0x41
    544b:	jmpq   5020 <.plt>

0000000000005450 <png_write_info_before_PLTE@plt>:
    5450:	jmpq   *0x2cdd2(%rip)        # 32228 <png_write_info_before_PLTE@@PNG16_0+0xe2b8>
    5456:	pushq  $0x42
    545b:	jmpq   5020 <.plt>

0000000000005460 <png_set_IHDR@plt>:
    5460:	jmpq   *0x2cdca(%rip)        # 32230 <png_set_IHDR@@PNG16_0+0x10b80>
    5466:	pushq  $0x43
    546b:	jmpq   5020 <.plt>

0000000000005470 <png_error@plt>:
    5470:	jmpq   *0x2cdc2(%rip)        # 32238 <png_error@@PNG16_0+0x277d8>
    5476:	pushq  $0x44
    547b:	jmpq   5020 <.plt>

0000000000005480 <png_write_chunk_end@plt>:
    5480:	jmpq   *0x2cdba(%rip)        # 32240 <png_write_chunk_end@@PNG16_0+0xab40>
    5486:	pushq  $0x45
    548b:	jmpq   5020 <.plt>

0000000000005490 <fprintf@plt>:
    5490:	jmpq   *0x2cdb2(%rip)        # 32248 <fprintf@GLIBC_2.2.5>
    5496:	pushq  $0x46
    549b:	jmpq   5020 <.plt>

00000000000054a0 <png_create_read_struct_2@plt>:
    54a0:	jmpq   *0x2cdaa(%rip)        # 32250 <png_create_read_struct_2@@PNG16_0+0x238d0>
    54a6:	pushq  $0x47
    54ab:	jmpq   5020 <.plt>

00000000000054b0 <png_destroy_read_struct@plt>:
    54b0:	jmpq   *0x2cda2(%rip)        # 32258 <png_destroy_read_struct@@PNG16_0+0x226c8>
    54b6:	pushq  $0x48
    54bb:	jmpq   5020 <.plt>

00000000000054c0 <memcpy@plt>:
    54c0:	jmpq   *0x2cd9a(%rip)        # 32260 <memcpy@GLIBC_2.14>
    54c6:	pushq  $0x49
    54cb:	jmpq   5020 <.plt>

00000000000054d0 <png_set_mem_fn@plt>:
    54d0:	jmpq   *0x2cd92(%rip)        # 32268 <png_set_mem_fn@@PNG16_0+0x25ab8>
    54d6:	pushq  $0x4a
    54db:	jmpq   5020 <.plt>

00000000000054e0 <png_set_tIME@plt>:
    54e0:	jmpq   *0x2cd8a(%rip)        # 32270 <png_set_tIME@@PNG16_0+0x10040>
    54e6:	pushq  $0x4b
    54eb:	jmpq   5020 <.plt>

00000000000054f0 <png_set_tRNS@plt>:
    54f0:	jmpq   *0x2cd82(%rip)        # 32278 <png_set_tRNS@@PNG16_0+0xffc8>
    54f6:	pushq  $0x4c
    54fb:	jmpq   5020 <.plt>

0000000000005500 <png_save_uint_32@plt>:
    5500:	jmpq   *0x2cd7a(%rip)        # 32280 <png_save_uint_32@@PNG16_0+0xab30>
    5506:	pushq  $0x4d
    550b:	jmpq   5020 <.plt>

0000000000005510 <inflateEnd@plt>:
    5510:	jmpq   *0x2cd72(%rip)        # 32288 <inflateEnd>
    5516:	pushq  $0x4e
    551b:	jmpq   5020 <.plt>

0000000000005520 <png_save_int_32@plt>:
    5520:	jmpq   *0x2cd6a(%rip)        # 32290 <png_save_int_32@@PNG16_0+0x2ba40>
    5526:	pushq  $0x4f
    552b:	jmpq   5020 <.plt>

0000000000005530 <png_set_PLTE@plt>:
    5530:	jmpq   *0x2cd62(%rip)        # 32298 <png_set_PLTE@@PNG16_0+0x10708>
    5536:	pushq  $0x50
    553b:	jmpq   5020 <.plt>

0000000000005540 <png_get_channels@plt>:
    5540:	jmpq   *0x2cd5a(%rip)        # 322a0 <png_get_channels@@PNG16_0+0x26cd0>
    5546:	pushq  $0x51
    554b:	jmpq   5020 <.plt>

0000000000005550 <adler32@plt>:
    5550:	jmpq   *0x2cd52(%rip)        # 322a8 <adler32>
    5556:	pushq  $0x52
    555b:	jmpq   5020 <.plt>

0000000000005560 <png_set_read_fn@plt>:
    5560:	jmpq   *0x2cd4a(%rip)        # 322b0 <png_set_read_fn@@PNG16_0+0x1db60>
    5566:	pushq  $0x53
    556b:	jmpq   5020 <.plt>

0000000000005570 <png_write_image@plt>:
    5570:	jmpq   *0x2cd42(%rip)        # 322b8 <png_write_image@@PNG16_0+0xd868>
    5576:	pushq  $0x54
    557b:	jmpq   5020 <.plt>

0000000000005580 <png_set_packing@plt>:
    5580:	jmpq   *0x2cd3a(%rip)        # 322c0 <png_set_packing@@PNG16_0+0xec10>
    5586:	pushq  $0x55
    558b:	jmpq   5020 <.plt>

0000000000005590 <png_benign_error@plt>:
    5590:	jmpq   *0x2cd32(%rip)        # 322c8 <png_benign_error@@PNG16_0+0x27748>
    5596:	pushq  $0x56
    559b:	jmpq   5020 <.plt>

00000000000055a0 <png_destroy_info_struct@plt>:
    55a0:	jmpq   *0x2cd2a(%rip)        # 322d0 <png_destroy_info_struct@@PNG16_0+0x2c490>
    55a6:	pushq  $0x57
    55ab:	jmpq   5020 <.plt>

00000000000055b0 <png_set_rgb_to_gray_fixed@plt>:
    55b0:	jmpq   *0x2cd22(%rip)        # 322d8 <png_set_rgb_to_gray_fixed@@PNG16_0+0x1d888>
    55b6:	pushq  $0x58
    55bb:	jmpq   5020 <.plt>

00000000000055c0 <malloc@plt>:
    55c0:	jmpq   *0x2cd1a(%rip)        # 322e0 <malloc@GLIBC_2.2.5>
    55c6:	pushq  $0x59
    55cb:	jmpq   5020 <.plt>

00000000000055d0 <fflush@plt>:
    55d0:	jmpq   *0x2cd12(%rip)        # 322e8 <fflush@GLIBC_2.2.5>
    55d6:	pushq  $0x5a
    55db:	jmpq   5020 <.plt>

00000000000055e0 <png_set_oFFs@plt>:
    55e0:	jmpq   *0x2cd0a(%rip)        # 322f0 <png_set_oFFs@@PNG16_0+0x10b40>
    55e6:	pushq  $0x5b
    55eb:	jmpq   5020 <.plt>

00000000000055f0 <png_get_header_ver@plt>:
    55f0:	jmpq   *0x2cd02(%rip)        # 322f8 <png_get_header_ver@@PNG16_0+0x2bad8>
    55f6:	pushq  $0x5c
    55fb:	jmpq   5020 <.plt>

0000000000005600 <png_read_row@plt>:
    5600:	jmpq   *0x2ccfa(%rip)        # 32300 <png_read_row@@PNG16_0+0x232f0>
    5606:	pushq  $0x5d
    560b:	jmpq   5020 <.plt>

0000000000005610 <png_set_pHYs@plt>:
    5610:	jmpq   *0x2ccf2(%rip)        # 32308 <png_set_pHYs@@PNG16_0+0x107b8>
    5616:	pushq  $0x5e
    561b:	jmpq   5020 <.plt>

0000000000005620 <png_set_invert_alpha@plt>:
    5620:	jmpq   *0x2ccea(%rip)        # 32310 <png_set_invert_alpha@@PNG16_0+0xedb0>
    5626:	pushq  $0x5f
    562b:	jmpq   5020 <.plt>

0000000000005630 <png_set_add_alpha@plt>:
    5630:	jmpq   *0x2cce2(%rip)        # 32318 <png_set_add_alpha@@PNG16_0+0xece8>
    5636:	pushq  $0x60
    563b:	jmpq   5020 <.plt>

0000000000005640 <png_set_alpha_mode_fixed@plt>:
    5640:	jmpq   *0x2ccda(%rip)        # 32320 <png_set_alpha_mode_fixed@@PNG16_0+0x1d710>
    5646:	pushq  $0x61
    564b:	jmpq   5020 <.plt>

0000000000005650 <png_set_compression_level@plt>:
    5650:	jmpq   *0x2ccd2(%rip)        # 32328 <png_set_compression_level@@PNG16_0+0xd2e8>
    5656:	pushq  $0x62
    565b:	jmpq   5020 <.plt>

0000000000005660 <png_set_sCAL_s@plt>:
    5660:	jmpq   *0x2ccca(%rip)        # 32330 <png_set_sCAL_s@@PNG16_0+0xfd40>
    5666:	pushq  $0x63
    566b:	jmpq   5020 <.plt>

0000000000005670 <deflateEnd@plt>:
    5670:	jmpq   *0x2ccc2(%rip)        # 32338 <deflateEnd>
    5676:	pushq  $0x64
    567b:	jmpq   5020 <.plt>

0000000000005680 <png_set_error_fn@plt>:
    5680:	jmpq   *0x2ccba(%rip)        # 32340 <png_set_error_fn@@PNG16_0+0x27930>
    5686:	pushq  $0x65
    568b:	jmpq   5020 <.plt>

0000000000005690 <png_set_keep_unknown_chunks@plt>:
    5690:	jmpq   *0x2ccb2(%rip)        # 32348 <png_set_keep_unknown_chunks@@PNG16_0+0xfb78>
    5696:	pushq  $0x66
    569b:	jmpq   5020 <.plt>

00000000000056a0 <png_chunk_warning@plt>:
    56a0:	jmpq   *0x2ccaa(%rip)        # 32350 <png_chunk_warning@@PNG16_0+0x27820>
    56a6:	pushq  $0x67
    56ab:	jmpq   5020 <.plt>

00000000000056b0 <png_set_expand@plt>:
    56b0:	jmpq   *0x2cca2(%rip)        # 32358 <png_set_expand@@PNG16_0+0x1db08>
    56b6:	pushq  $0x68
    56bb:	jmpq   5020 <.plt>

00000000000056c0 <png_create_write_struct_2@plt>:
    56c0:	jmpq   *0x2cc9a(%rip)        # 32360 <png_create_write_struct_2@@PNG16_0+0xe4b0>
    56c6:	pushq  $0x69
    56cb:	jmpq   5020 <.plt>

00000000000056d0 <png_set_strip_16@plt>:
    56d0:	jmpq   *0x2cc92(%rip)        # 32368 <png_set_strip_16@@PNG16_0+0x1d378>
    56d6:	pushq  $0x6a
    56db:	jmpq   5020 <.plt>

00000000000056e0 <png_create_read_struct@plt>:
    56e0:	jmpq   *0x2cc8a(%rip)        # 32370 <png_create_read_struct@@PNG16_0+0x23a10>
    56e6:	pushq  $0x6b
    56eb:	jmpq   5020 <.plt>

00000000000056f0 <png_destroy_write_struct@plt>:
    56f0:	jmpq   *0x2cc82(%rip)        # 32378 <png_destroy_write_struct@@PNG16_0+0xd618>
    56f6:	pushq  $0x6c
    56fb:	jmpq   5020 <.plt>

0000000000005700 <png_free_default@plt>:
    5700:	jmpq   *0x2cc7a(%rip)        # 32380 <png_free_default@@PNG16_0+0x25a50>
    5706:	pushq  $0x6d
    570b:	jmpq   5020 <.plt>

0000000000005710 <png_get_pixels_per_meter@plt>:
    5710:	jmpq   *0x2cc72(%rip)        # 32388 <png_get_pixels_per_meter@@PNG16_0+0x26cb8>
    5716:	pushq  $0x6e
    571b:	jmpq   5020 <.plt>

0000000000005720 <png_free_data@plt>:
    5720:	jmpq   *0x2cc6a(%rip)        # 32390 <png_free_data@@PNG16_0+0x2c490>
    5726:	pushq  $0x6f
    572b:	jmpq   5020 <.plt>

0000000000005730 <png_get_uint_31@plt>:
    5730:	jmpq   *0x2cc62(%rip)        # 32398 <png_get_uint_31@@PNG16_0+0x17368>
    5736:	pushq  $0x70
    573b:	jmpq   5020 <.plt>

0000000000005740 <png_set_strip_alpha@plt>:
    5740:	jmpq   *0x2cc5a(%rip)        # 323a0 <png_set_strip_alpha@@PNG16_0+0x1d570>
    5746:	pushq  $0x71
    574b:	jmpq   5020 <.plt>

0000000000005750 <png_set_unknown_chunks@plt>:
    5750:	jmpq   *0x2cc52(%rip)        # 323a8 <png_set_unknown_chunks@@PNG16_0+0xf918>
    5756:	pushq  $0x72
    575b:	jmpq   5020 <.plt>

0000000000005760 <fopen@plt>:
    5760:	jmpq   *0x2cc4a(%rip)        # 323b0 <fopen@GLIBC_2.2.5>
    5766:	pushq  $0x73
    576b:	jmpq   5020 <.plt>

0000000000005770 <inflateInit2_@plt>:
    5770:	jmpq   *0x2cc42(%rip)        # 323b8 <inflateInit2_>
    5776:	pushq  $0x74
    577b:	jmpq   5020 <.plt>

0000000000005780 <png_calloc@plt>:
    5780:	jmpq   *0x2cc3a(%rip)        # 323c0 <png_calloc@@PNG16_0+0x25b80>
    5786:	pushq  $0x75
    578b:	jmpq   5020 <.plt>

0000000000005790 <png_free@plt>:
    5790:	jmpq   *0x2cc32(%rip)        # 323c8 <png_free@@PNG16_0+0x25b08>
    5796:	pushq  $0x76
    579b:	jmpq   5020 <.plt>

00000000000057a0 <png_save_uint_16@plt>:
    57a0:	jmpq   *0x2cc2a(%rip)        # 323d0 <png_save_uint_16@@PNG16_0+0xac50>
    57a6:	pushq  $0x77
    57ab:	jmpq   5020 <.plt>

00000000000057b0 <png_read_info@plt>:
    57b0:	jmpq   *0x2cc22(%rip)        # 323d8 <png_read_info@@PNG16_0+0x239f8>
    57b6:	pushq  $0x78
    57bb:	jmpq   5020 <.plt>

00000000000057c0 <gmtime@plt>:
    57c0:	jmpq   *0x2cc1a(%rip)        # 323e0 <gmtime@GLIBC_2.2.5>
    57c6:	pushq  $0x79
    57cb:	jmpq   5020 <.plt>

00000000000057d0 <png_sig_cmp@plt>:
    57d0:	jmpq   *0x2cc12(%rip)        # 323e8 <png_sig_cmp@@PNG16_0+0x2c9d8>
    57d6:	pushq  $0x7a
    57db:	jmpq   5020 <.plt>

00000000000057e0 <floor@plt>:
    57e0:	jmpq   *0x2cc0a(%rip)        # 323f0 <floor@GLIBC_2.2.5>
    57e6:	pushq  $0x7b
    57eb:	jmpq   5020 <.plt>

00000000000057f0 <inflateReset@plt>:
    57f0:	jmpq   *0x2cc02(%rip)        # 323f8 <inflateReset>
    57f6:	pushq  $0x7c
    57fb:	jmpq   5020 <.plt>

0000000000005800 <png_malloc@plt>:
    5800:	jmpq   *0x2cbfa(%rip)        # 32400 <png_malloc@@PNG16_0+0x25c00>
    5806:	pushq  $0x7d
    580b:	jmpq   5020 <.plt>

0000000000005810 <png_set_gray_to_rgb@plt>:
    5810:	jmpq   *0x2cbf2(%rip)        # 32408 <png_set_gray_to_rgb@@PNG16_0+0x1da78>
    5816:	pushq  $0x7e
    581b:	jmpq   5020 <.plt>

0000000000005820 <png_set_packswap@plt>:
    5820:	jmpq   *0x2cbea(%rip)        # 32410 <png_set_packswap@@PNG16_0+0xed30>
    5826:	pushq  $0x7f
    582b:	jmpq   5020 <.plt>

0000000000005830 <png_set_expand_16@plt>:
    5830:	jmpq   *0x2cbe2(%rip)        # 32418 <png_set_expand_16@@PNG16_0+0x1dac8>
    5836:	pushq  $0x80
    583b:	jmpq   5020 <.plt>

0000000000005840 <fwrite@plt>:
    5840:	jmpq   *0x2cbda(%rip)        # 32420 <fwrite@GLIBC_2.2.5>
    5846:	pushq  $0x81
    584b:	jmpq   5020 <.plt>

0000000000005850 <png_convert_to_rfc1123_buffer@plt>:
    5850:	jmpq   *0x2cbd2(%rip)        # 32428 <png_convert_to_rfc1123_buffer@@PNG16_0+0x2c888>
    5856:	pushq  $0x82
    585b:	jmpq   5020 <.plt>

0000000000005860 <png_set_bgr@plt>:
    5860:	jmpq   *0x2cbca(%rip)        # 32430 <png_set_bgr@@PNG16_0+0xef10>
    5866:	pushq  $0x83
    586b:	jmpq   5020 <.plt>

0000000000005870 <png_longjmp@plt>:
    5870:	jmpq   *0x2cbc2(%rip)        # 32438 <png_longjmp@@PNG16_0+0x27a58>
    5876:	pushq  $0x84
    587b:	jmpq   5020 <.plt>

0000000000005880 <png_image_write_to_stdio@plt>:
    5880:	jmpq   *0x2cbba(%rip)        # 32440 <png_image_write_to_stdio@@PNG16_0+0xce20>
    5886:	pushq  $0x85
    588b:	jmpq   5020 <.plt>

0000000000005890 <strerror@plt>:
    5890:	jmpq   *0x2cbb2(%rip)        # 32448 <strerror@GLIBC_2.2.5>
    5896:	pushq  $0x86
    589b:	jmpq   5020 <.plt>

00000000000058a0 <png_set_cHRM_XYZ_fixed@plt>:
    58a0:	jmpq   *0x2cbaa(%rip)        # 32450 <png_set_cHRM_XYZ_fixed@@PNG16_0+0x110e0>
    58a6:	pushq  $0x87
    58ab:	jmpq   5020 <.plt>

00000000000058b0 <png_set_tRNS_to_alpha@plt>:
    58b0:	jmpq   *0x2cba2(%rip)        # 32458 <png_set_tRNS_to_alpha@@PNG16_0+0x1db48>
    58b6:	pushq  $0x88
    58bb:	jmpq   5020 <.plt>

00000000000058c0 <png_write_flush@plt>:
    58c0:	jmpq   *0x2cb9a(%rip)        # 32460 <png_write_flush@@PNG16_0+0xde50>
    58c6:	pushq  $0x89
    58cb:	jmpq   5020 <.plt>

00000000000058d0 <png_set_scale_16@plt>:
    58d0:	jmpq   *0x2cb92(%rip)        # 32468 <png_set_scale_16@@PNG16_0+0x1d4b8>
    58d6:	pushq  $0x8a
    58db:	jmpq   5020 <.plt>

00000000000058e0 <png_set_invert_mono@plt>:
    58e0:	jmpq   *0x2cb8a(%rip)        # 32470 <png_set_invert_mono@@PNG16_0+0xecf0>
    58e6:	pushq  $0x8b
    58eb:	jmpq   5020 <.plt>

Disassembly of section .plt.got:

00000000000058f0 <longjmp@plt>:
    58f0:	jmpq   *0x2c6ea(%rip)        # 31fe0 <longjmp@GLIBC_2.2.5>
    58f6:	xchg   %ax,%ax

Disassembly of section .text:

0000000000005900 <deregister_tm_clones>:
    5900:	lea    0x2cb79(%rip),%rdi        # 32480 <__TMC_END__>
    5907:	lea    0x2cb72(%rip),%rax        # 32480 <__TMC_END__>
    590e:	cmp    %rdi,%rax
    5911:	je     5928 <deregister_tm_clones+0x28>
    5913:	mov    0x2c6b6(%rip),%rax        # 31fd0 <_ITM_deregisterTMCloneTable>
    591a:	test   %rax,%rax
    591d:	je     5928 <deregister_tm_clones+0x28>
    591f:	jmpq   *%rax
    5921:	nopl   0x0(%rax)
    5928:	retq   
    5929:	nopl   0x0(%rax)

0000000000005930 <register_tm_clones>:
    5930:	lea    0x2cb49(%rip),%rdi        # 32480 <__TMC_END__>
    5937:	lea    0x2cb42(%rip),%rsi        # 32480 <__TMC_END__>
    593e:	sub    %rdi,%rsi
    5941:	sar    $0x3,%rsi
    5945:	mov    %rsi,%rax
    5948:	shr    $0x3f,%rax
    594c:	add    %rax,%rsi
    594f:	sar    %rsi
    5952:	je     5968 <register_tm_clones+0x38>
    5954:	mov    0x2c68d(%rip),%rax        # 31fe8 <_ITM_registerTMCloneTable>
    595b:	test   %rax,%rax
    595e:	je     5968 <register_tm_clones+0x38>
    5960:	jmpq   *%rax
    5962:	nopw   0x0(%rax,%rax,1)
    5968:	retq   
    5969:	nopl   0x0(%rax)

0000000000005970 <__do_global_dtors_aux>:
    5970:	endbr64 
    5974:	cmpb   $0x0,0x2cb05(%rip)        # 32480 <__TMC_END__>
    597b:	jne    59b0 <__do_global_dtors_aux+0x40>
    597d:	push   %rbp
    597e:	cmpq   $0x0,0x2c66a(%rip)        # 31ff0 <__cxa_finalize@GLIBC_2.2.5>
    5986:	mov    %rsp,%rbp
    5989:	je     5998 <__do_global_dtors_aux+0x28>
    598b:	mov    0x2cae6(%rip),%rdi        # 32478 <__dso_handle>
    5992:	callq  *0x2c658(%rip)        # 31ff0 <__cxa_finalize@GLIBC_2.2.5>
    5998:	callq  5900 <deregister_tm_clones>
    599d:	movb   $0x1,0x2cadc(%rip)        # 32480 <__TMC_END__>
    59a4:	pop    %rbp
    59a5:	retq   
    59a6:	nopw   %cs:0x0(%rax,%rax,1)
    59b0:	retq   
    59b1:	data16 nopw %cs:0x0(%rax,%rax,1)
    59bc:	nopl   0x0(%rax)

00000000000059c0 <frame_dummy>:
    59c0:	endbr64 
    59c4:	jmpq   5930 <register_tm_clones>
    59c9:	nopl   0x0(%rax)

00000000000059d0 <png_access_version_number>:
    59d0:	push   %rbp
    59d1:	mov    %rsp,%rbp
    59d4:	mov    $0x298a,%eax
    59d9:	leaveq 
    59da:	retq   
    59db:	nopl   0x0(%rax,%rax,1)

00000000000059e0 <png_set_sig_bytes>:
    59e0:	push   %rbp
    59e1:	mov    %rsp,%rbp
    59e4:	test   %rdi,%rdi
    59e7:	jne    59eb <png_set_sig_bytes+0xb>
    59e9:	leaveq 
    59ea:	retq   
    59eb:	test   %esi,%esi
    59ed:	jns    59f1 <png_set_sig_bytes+0x11>
    59ef:	xor    %esi,%esi
    59f1:	cmp    $0x8,%esi
    59f4:	ja     59ff <png_set_sig_bytes+0x1f>
    59f6:	mov    %sil,0x26d(%rdi)
    59fd:	leaveq 
    59fe:	retq   
    59ff:	lea    0x27092(%rip),%rsi        # 2ca98 <png_sRGB_checks+0xe0>
    5a06:	callq  5470 <png_error@plt>
    5a0b:	nopl   0x0(%rax,%rax,1)

0000000000005a10 <png_sig_cmp>:
    5a10:	push   %rbp
    5a11:	mov    %rsp,%rbp
    5a14:	sub    $0x10,%rsp
    5a18:	movabs $0xa1a0a0d474e5089,%rax
    5a22:	mov    %rax,-0x8(%rbp)
    5a26:	mov    $0xffffffffffffffff,%rax
    5a2d:	mov    $0x8,%ecx
    5a32:	cmp    $0x8,%rdx
    5a36:	jbe    5a43 <png_sig_cmp+0x33>
    5a38:	mov    %rcx,%rdx
    5a3b:	cmp    $0x7,%rsi
    5a3f:	jbe    5a4a <png_sig_cmp+0x3a>
    5a41:	leaveq 
    5a42:	retq   
    5a43:	test   %rdx,%rdx
    5a46:	jne    5a3b <png_sig_cmp+0x2b>
    5a48:	leaveq 
    5a49:	retq   
    5a4a:	lea    (%rsi,%rdx,1),%rax
    5a4e:	cmp    $0x8,%rax
    5a52:	jbe    5a5a <png_sig_cmp+0x4a>
    5a54:	sub    %rsi,%rcx
    5a57:	mov    %rcx,%rdx
    5a5a:	add    %rsi,%rdi
    5a5d:	lea    -0x8(%rbp,%rsi,1),%rsi
    5a62:	callq  53d0 <memcmp@plt>
    5a67:	leaveq 
    5a68:	retq   
    5a69:	nopl   0x0(%rax)

0000000000005a70 <png_reset_zstream>:
    5a70:	push   %rbp
    5a71:	mov    %rsp,%rbp
    5a74:	test   %rdi,%rdi
    5a77:	jne    5a82 <png_reset_zstream+0x12>
    5a79:	mov    $0xfffffffffffffffe,%rax
    5a80:	leaveq 
    5a81:	retq   
    5a82:	add    $0x140,%rdi
    5a89:	callq  57f0 <inflateReset@plt>
    5a8e:	leaveq 
    5a8f:	retq   

0000000000005a90 <png_create_info_struct>:
    5a90:	push   %rbp
    5a91:	mov    %rsp,%rbp
    5a94:	sub    $0x10,%rsp
    5a98:	xor    %eax,%eax
    5a9a:	test   %rdi,%rdi
    5a9d:	jne    5aa1 <png_create_info_struct+0x11>
    5a9f:	leaveq 
    5aa0:	retq   
    5aa1:	mov    $0x168,%esi
    5aa6:	callq  c950 <png_malloc_base>
    5aab:	test   %rax,%rax
    5aae:	jne    5ab4 <png_create_info_struct+0x24>
    5ab0:	xor    %eax,%eax
    5ab2:	leaveq 
    5ab3:	retq   
    5ab4:	mov    %rax,%rdi
    5ab7:	mov    %rax,-0x8(%rbp)
    5abb:	mov    $0x168,%edx
    5ac0:	xor    %esi,%esi
    5ac2:	callq  5350 <memset@plt>
    5ac7:	mov    -0x8(%rbp),%rax
    5acb:	leaveq 
    5acc:	retq   
    5acd:	nopl   (%rax)

0000000000005ad0 <png_info_init_3>:
    5ad0:	push   %rbp
    5ad1:	mov    %rsp,%rbp
    5ad4:	sub    $0x10,%rsp
    5ad8:	mov    (%rdi),%rax
    5adb:	test   %rax,%rax
    5ade:	jne    5ae2 <png_info_init_3+0x12>
    5ae0:	leaveq 
    5ae1:	retq   
    5ae2:	xor    %ecx,%ecx
    5ae4:	mov    $0x168,%edx
    5ae9:	cmp    $0x167,%rsi
    5af0:	jbe    5aff <png_info_init_3+0x2f>
    5af2:	mov    %rcx,%rsi
    5af5:	mov    %rax,%rdi
    5af8:	callq  5350 <memset@plt>
    5afd:	leaveq 
    5afe:	retq   
    5aff:	movq   $0x0,(%rdi)
    5b06:	mov    %r15,-0x8(%rbp)
    5b0a:	mov    %rdi,%r15
    5b0d:	mov    %rax,%rdi
    5b10:	callq  5070 <free@plt>
    5b15:	xor    %edi,%edi
    5b17:	mov    $0x168,%esi
    5b1c:	callq  c950 <png_malloc_base>
    5b21:	test   %rax,%rax
    5b24:	jne    5b2c <png_info_init_3+0x5c>
    5b26:	mov    -0x8(%rbp),%r15
    5b2a:	leaveq 
    5b2b:	retq   
    5b2c:	mov    %rax,(%r15)
    5b2f:	mov    %rax,%rdi
    5b32:	mov    $0x168,%edx
    5b37:	xor    %esi,%esi
    5b39:	mov    -0x8(%rbp),%r15
    5b3d:	jmp    5af8 <png_info_init_3+0x28>
    5b3f:	nop

0000000000005b40 <png_convert_to_rfc1123>:
    5b40:	push   %rbp
    5b41:	mov    %rsp,%rbp
    5b44:	sub    $0x10,%rsp
    5b48:	xor    %eax,%eax
    5b4a:	test   %rdi,%rdi
    5b4d:	jne    5b51 <png_convert_to_rfc1123+0x11>
    5b4f:	leaveq 
    5b50:	retq   
    5b51:	lea    0x38c(%rdi),%rax
    5b58:	mov    %rax,%rcx
    5b5b:	mov    %r15,-0x10(%rbp)
    5b5f:	mov    %rdi,-0x8(%rbp)
    5b63:	mov    %rcx,%rdi
    5b66:	mov    %rax,%r15
    5b69:	callq  5850 <png_convert_to_rfc1123_buffer@plt>
    5b6e:	test   %eax,%eax
    5b70:	je     5b7b <png_convert_to_rfc1123+0x3b>
    5b72:	mov    %r15,%rax
    5b75:	mov    -0x10(%rbp),%r15
    5b79:	leaveq 
    5b7a:	retq   
    5b7b:	lea    0x26f37(%rip),%rsi        # 2cab9 <png_sRGB_checks+0x101>
    5b82:	mov    -0x8(%rbp),%rdi
    5b86:	callq  5390 <png_warning@plt>
    5b8b:	xor    %eax,%eax
    5b8d:	mov    -0x10(%rbp),%r15
    5b91:	leaveq 
    5b92:	retq   
    5b93:	data16 nopw %cs:0x0(%rax,%rax,1)
    5b9e:	xchg   %ax,%ax

0000000000005ba0 <png_convert_to_rfc1123_buffer>:
    5ba0:	push   %rbp
    5ba1:	mov    %rsp,%rbp
    5ba4:	sub    $0x30,%rsp
    5ba8:	xor    %eax,%eax
    5baa:	test   %rdi,%rdi
    5bad:	jne    5bb1 <png_convert_to_rfc1123_buffer+0x11>
    5baf:	leaveq 
    5bb0:	retq   
    5bb1:	movzwl (%rsi),%ecx
    5bb4:	cmp    $0x270f,%cx
    5bb9:	jbe    5bbd <png_convert_to_rfc1123_buffer+0x1d>
    5bbb:	leaveq 
    5bbc:	retq   
    5bbd:	movzbl 0x2(%rsi),%ecx
    5bc1:	test   %cl,%cl
    5bc3:	jne    5bc7 <png_convert_to_rfc1123_buffer+0x27>
    5bc5:	leaveq 
    5bc6:	retq   
    5bc7:	cmp    $0xc,%cl
    5bca:	jbe    5bce <png_convert_to_rfc1123_buffer+0x2e>
    5bcc:	leaveq 
    5bcd:	retq   
    5bce:	movzbl 0x3(%rsi),%ecx
    5bd2:	test   %cl,%cl
    5bd4:	jne    5bd8 <png_convert_to_rfc1123_buffer+0x38>
    5bd6:	leaveq 
    5bd7:	retq   
    5bd8:	cmp    $0x1f,%cl
    5bdb:	jbe    5bdf <png_convert_to_rfc1123_buffer+0x3f>
    5bdd:	leaveq 
    5bde:	retq   
    5bdf:	movzbl 0x4(%rsi),%edx
    5be3:	cmp    $0x17,%dl
    5be6:	jbe    5bea <png_convert_to_rfc1123_buffer+0x4a>
    5be8:	leaveq 
    5be9:	retq   
    5bea:	movzbl 0x5(%rsi),%edx
    5bee:	cmp    $0x3b,%dl
    5bf1:	jbe    5bf5 <png_convert_to_rfc1123_buffer+0x55>
    5bf3:	leaveq 
    5bf4:	retq   
    5bf5:	movzbl 0x6(%rsi),%edx
    5bf9:	cmp    $0x3c,%dl
    5bfc:	jbe    5c00 <png_convert_to_rfc1123_buffer+0x60>
    5bfe:	leaveq 
    5bff:	retq   
    5c00:	lea    -0x2d(%rbp),%r10
    5c04:	lea    -0x28(%rbp),%r11
    5c08:	mov    $0x1,%edx
    5c0d:	mov    %r10,%r9
    5c10:	mov    %r11,%r8
    5c13:	mov    %r15,-0x28(%rbp)
    5c17:	mov    %rbx,-0x8(%rbp)
    5c1b:	mov    %r12,-0x10(%rbp)
    5c1f:	mov    %r13,-0x18(%rbp)
    5c23:	mov    %r14,-0x20(%rbp)
    5c27:	mov    %rdi,%rbx
    5c2a:	mov    %r9,%rdi
    5c2d:	mov    %rax,%r12
    5c30:	mov    %r10,%r13
    5c33:	mov    %rsi,%r14
    5c36:	mov    %r8,%rsi
    5c39:	mov    %r11,%r15
    5c3c:	callq  ad80 <png_format_number>
    5c41:	mov    %rax,%rcx
    5c44:	mov    %r12,%rdx
    5c47:	mov    $0x1d,%r12d
    5c4d:	mov    %rbx,%rdi
    5c50:	mov    %r12,%rsi
    5c53:	callq  ad30 <png_safecat>
    5c58:	cmp    $0x1b,%rax
    5c5c:	jbe    5c63 <png_convert_to_rfc1123_buffer+0xc3>
    5c5e:	mov    %rax,%rdx
    5c61:	jmp    5c6b <png_convert_to_rfc1123_buffer+0xcb>
    5c63:	movb   $0x20,(%rbx,%rax,1)
    5c67:	lea    0x1(%rax),%rdx
    5c6b:	lea    0x26e63(%rip),%rcx        # 2cad5 <short_months.6>
    5c72:	movzbl 0x2(%r14),%eax
    5c77:	add    $0xffffffff,%eax
    5c7a:	movslq %eax,%rax
    5c7d:	lea    (%rcx,%rax,4),%rcx
    5c81:	mov    %rbx,%rdi
    5c84:	mov    %r12,%rsi
    5c87:	callq  ad30 <png_safecat>
    5c8c:	cmp    $0x1b,%rax
    5c90:	ja     5c9a <png_convert_to_rfc1123_buffer+0xfa>
    5c92:	movb   $0x20,(%rbx,%rax,1)
    5c96:	add    $0x1,%rax
    5c9a:	mov    %r15,%rsi
    5c9d:	mov    %rax,%r15
    5ca0:	movzwl (%r14),%ecx
    5ca4:	mov    %r13,%rdi
    5ca7:	mov    $0x1,%edx
    5cac:	callq  ad80 <png_format_number>
    5cb1:	mov    %rax,%rcx
    5cb4:	mov    %r15,%rdx
    5cb7:	mov    %rbx,%rdi
    5cba:	mov    %r12,%rsi
    5cbd:	callq  ad30 <png_safecat>
    5cc2:	cmp    $0x1b,%rax
    5cc6:	jbe    5ccd <png_convert_to_rfc1123_buffer+0x12d>
    5cc8:	mov    %rax,%r15
    5ccb:	jmp    5cd5 <png_convert_to_rfc1123_buffer+0x135>
    5ccd:	movb   $0x20,(%rbx,%rax,1)
    5cd1:	lea    0x1(%rax),%r15
    5cd5:	mov    $0x2,%edx
    5cda:	movzbl 0x4(%r14),%ecx
    5cdf:	mov    %r13,%rdi
    5ce2:	lea    -0x28(%rbp),%rsi
    5ce6:	callq  ad80 <png_format_number>
    5ceb:	mov    %rax,%rcx
    5cee:	mov    %r15,%rdx
    5cf1:	mov    %rbx,%rdi
    5cf4:	mov    %r12,%rsi
    5cf7:	callq  ad30 <png_safecat>
    5cfc:	cmp    $0x1b,%rax
    5d00:	jbe    5d07 <png_convert_to_rfc1123_buffer+0x167>
    5d02:	mov    %rax,%r15
    5d05:	jmp    5d0f <png_convert_to_rfc1123_buffer+0x16f>
    5d07:	movb   $0x3a,(%rbx,%rax,1)
    5d0b:	lea    0x1(%rax),%r15
    5d0f:	movzbl 0x5(%r14),%ecx
    5d14:	mov    %r13,%rdi
    5d17:	lea    -0x28(%rbp),%rsi
    5d1b:	mov    $0x2,%edx
    5d20:	callq  ad80 <png_format_number>
    5d25:	mov    %rax,%rcx
    5d28:	mov    %r15,%rdx
    5d2b:	mov    %rbx,%rdi
    5d2e:	mov    %r12,%rsi
    5d31:	callq  ad30 <png_safecat>
    5d36:	cmp    $0x1b,%rax
    5d3a:	jbe    5d41 <png_convert_to_rfc1123_buffer+0x1a1>
    5d3c:	mov    %rax,%r15
    5d3f:	jmp    5d49 <png_convert_to_rfc1123_buffer+0x1a9>
    5d41:	movb   $0x3a,(%rbx,%rax,1)
    5d45:	lea    0x1(%rax),%r15
    5d49:	movzbl 0x6(%r14),%ecx
    5d4e:	mov    %r13,%rdi
    5d51:	mov    $0x2,%edx
    5d56:	lea    -0x28(%rbp),%rsi
    5d5a:	callq  ad80 <png_format_number>
    5d5f:	mov    %rax,%rcx
    5d62:	mov    %r15,%rdx
    5d65:	mov    %rbx,%rdi
    5d68:	mov    %r12,%rsi
    5d6b:	callq  ad30 <png_safecat>
    5d70:	mov    %rax,%rdx
    5d73:	mov    %r12,%rsi
    5d76:	mov    %rbx,%rdi
    5d79:	lea    0x26d85(%rip),%rcx        # 2cb05 <short_months.6+0x30>
    5d80:	callq  ad30 <png_safecat>
    5d85:	mov    -0x20(%rbp),%r14
    5d89:	mov    -0x18(%rbp),%r13
    5d8d:	mov    -0x10(%rbp),%r12
    5d91:	mov    -0x8(%rbp),%rbx
    5d95:	mov    $0x1,%eax
    5d9a:	mov    -0x28(%rbp),%r15
    5d9e:	leaveq 
    5d9f:	retq   

0000000000005da0 <png_build_grayscale_palette>:
    5da0:	push   %rbp
    5da1:	mov    %rsp,%rbp
    5da4:	test   %rsi,%rsi
    5da7:	jne    5dab <png_build_grayscale_palette+0xb>
    5da9:	leaveq 
    5daa:	retq   
    5dab:	xor    %eax,%eax
    5dad:	cmp    $0x3,%edi
    5db0:	jle    5dc6 <png_build_grayscale_palette+0x26>
    5db2:	cmp    $0x4,%edi
    5db5:	jne    5dda <png_build_grayscale_palette+0x3a>
    5db7:	mov    $0x10,%edi
    5dbc:	mov    $0x11,%edx
    5dc1:	mov    %rax,%rcx
    5dc4:	jmp    5e04 <png_build_grayscale_palette+0x64>
    5dc6:	cmp    $0x1,%edi
    5dc9:	jne    5e0a <png_build_grayscale_palette+0x6a>
    5dcb:	mov    $0x2,%edi
    5dd0:	mov    $0xff,%edx
    5dd5:	mov    %rax,%rcx
    5dd8:	jmp    5e04 <png_build_grayscale_palette+0x64>
    5dda:	cmp    $0x8,%edi
    5ddd:	je     5e1a <png_build_grayscale_palette+0x7a>
    5ddf:	mov    %rax,%rcx
    5de2:	mov    %rcx,%rdx
    5de5:	mov    %rdx,%rdi
    5de8:	jmp    5e04 <png_build_grayscale_palette+0x64>
    5dea:	movslq %ecx,%r8
    5ded:	lea    (%r8,%r8,2),%r8
    5df1:	mov    %al,(%rsi,%r8,1)
    5df5:	mov    %al,0x1(%rsi,%r8,1)
    5dfa:	mov    %al,0x2(%rsi,%r8,1)
    5dff:	add    $0x1,%ecx
    5e02:	add    %edx,%eax
    5e04:	cmp    %ecx,%edi
    5e06:	jg     5dea <png_build_grayscale_palette+0x4a>
    5e08:	leaveq 
    5e09:	retq   
    5e0a:	cmp    $0x2,%edi
    5e0d:	je     5e29 <png_build_grayscale_palette+0x89>
    5e0f:	mov    %rax,%rcx
    5e12:	mov    %rcx,%rdx
    5e15:	mov    %rdx,%rdi
    5e18:	jmp    5e04 <png_build_grayscale_palette+0x64>
    5e1a:	mov    $0x100,%edi
    5e1f:	mov    $0x1,%edx
    5e24:	mov    %rax,%rcx
    5e27:	jmp    5e04 <png_build_grayscale_palette+0x64>
    5e29:	mov    $0x4,%edi
    5e2e:	mov    $0x55,%edx
    5e33:	mov    %rax,%rcx
    5e36:	jmp    5e04 <png_build_grayscale_palette+0x64>
    5e38:	nopl   0x0(%rax,%rax,1)

0000000000005e40 <png_destroy_info_struct>:
    5e40:	push   %rbp
    5e41:	mov    %rsp,%rbp
    5e44:	sub    $0x10,%rsp
    5e48:	test   %rdi,%rdi
    5e4b:	jne    5e4f <png_destroy_info_struct+0xf>
    5e4d:	leaveq 
    5e4e:	retq   
    5e4f:	xor    %eax,%eax
    5e51:	test   %rsi,%rsi
    5e54:	je     5e59 <png_destroy_info_struct+0x19>
    5e56:	mov    (%rsi),%rax
    5e59:	test   %rax,%rax
    5e5c:	jne    5e60 <png_destroy_info_struct+0x20>
    5e5e:	leaveq 
    5e5f:	retq   
    5e60:	movq   $0x0,(%rsi)
    5e67:	mov    $0xffff,%edx
    5e6c:	mov    $0xffffffffffffffff,%rcx
    5e73:	mov    %rdi,%r8
    5e76:	mov    %rax,%rsi
    5e79:	mov    %r14,-0x8(%rbp)
    5e7d:	mov    %r15,-0x10(%rbp)
    5e81:	mov    %rdi,%r14
    5e84:	mov    %r8,%rdi
    5e87:	mov    %rax,%r15
    5e8a:	callq  5720 <png_free_data@plt>
    5e8f:	mov    $0x168,%edx
    5e94:	mov    %r15,%rdi
    5e97:	xor    %esi,%esi
    5e99:	callq  5350 <memset@plt>
    5e9e:	mov    %r15,%rsi
    5ea1:	mov    %r14,%rdi
    5ea4:	callq  5790 <png_free@plt>
    5ea9:	mov    -0x10(%rbp),%r15
    5ead:	mov    -0x8(%rbp),%r14
    5eb1:	leaveq 
    5eb2:	retq   
    5eb3:	data16 nopw %cs:0x0(%rax,%rax,1)
    5ebe:	xchg   %ax,%ax

0000000000005ec0 <png_init_io>:
    5ec0:	push   %rbp
    5ec1:	mov    %rsp,%rbp
    5ec4:	test   %rdi,%rdi
    5ec7:	jne    5ecb <png_init_io+0xb>
    5ec9:	leaveq 
    5eca:	retq   
    5ecb:	mov    %rsi,0x108(%rdi)
    5ed2:	leaveq 
    5ed3:	retq   
    5ed4:	data16 nopw %cs:0x0(%rax,%rax,1)
    5edf:	nop

0000000000005ee0 <png_get_io_ptr>:
    5ee0:	push   %rbp
    5ee1:	mov    %rsp,%rbp
    5ee4:	test   %rdi,%rdi
    5ee7:	jne    5eed <png_get_io_ptr+0xd>
    5ee9:	xor    %eax,%eax
    5eeb:	leaveq 
    5eec:	retq   
    5eed:	mov    0x108(%rdi),%rax
    5ef4:	leaveq 
    5ef5:	retq   
    5ef6:	nopw   %cs:0x0(%rax,%rax,1)

0000000000005f00 <png_free_data>:
    5f00:	push   %rbp
    5f01:	mov    %rsp,%rbp
    5f04:	sub    $0x50,%rsp
    5f08:	mov    %r13,-0x20(%rbp)
    5f0c:	mov    %r14,-0x28(%rbp)
    5f10:	mov    %r15,-0x30(%rbp)
    5f14:	test   %rdi,%rdi
    5f17:	jne    5f1b <png_free_data+0x1b>
    5f19:	leaveq 
    5f1a:	retq   
    5f1b:	test   %rsi,%rsi
    5f1e:	jne    5f22 <png_free_data+0x22>
    5f20:	leaveq 
    5f21:	retq   
    5f22:	xor    %r8d,%r8d
    5f25:	mov    0xa0(%rsi),%r9
    5f2c:	test   %r9,%r9
    5f2f:	jne    60eb <png_free_data+0x1eb>
    5f35:	mov    %r13,%rax
    5f38:	mov    %rbx,%r13
    5f3b:	mov    %rsi,%rbx
    5f3e:	mov    %r15,%r9
    5f41:	mov    %r12,%r15
    5f44:	mov    %rdi,%r12
    5f47:	mov    %r14,%rsi
    5f4a:	mov    %r8,%r14
    5f4d:	mov    %rsi,%r8
    5f50:	mov    %rdx,%rsi
    5f53:	and    0x12c(%rbx),%esi
    5f59:	and    $0x2000,%esi
    5f5f:	test   %esi,%esi
    5f61:	je     5faf <png_free_data+0xaf>
    5f63:	mov    0x8(%rbx),%eax
    5f66:	and    $0xffffffef,%eax
    5f69:	mov    %eax,0x8(%rbx)
    5f6c:	mov    0xb8(%rbx),%rsi
    5f73:	mov    %r12,%rdi
    5f76:	mov    %r15,-0x48(%rbp)
    5f7a:	mov    %rcx,%r14
    5f7d:	mov    %rdx,%r15
    5f80:	callq  5790 <png_free@plt>
    5f85:	movq   $0x0,0xb8(%rbx)
    5f90:	movw   $0x0,0x22(%rbx)
    5f96:	mov    %r14,%rcx
    5f99:	mov    %r15,%rdx
    5f9c:	xor    %r14d,%r14d
    5f9f:	mov    -0x30(%rbp),%r9
    5fa3:	mov    -0x28(%rbp),%r8
    5fa7:	mov    -0x20(%rbp),%rax
    5fab:	mov    -0x48(%rbp),%r15
    5faf:	mov    %rdx,%rsi
    5fb2:	and    0x12c(%rbx),%esi
    5fb8:	and    $0x100,%esi
    5fbe:	test   %esi,%esi
    5fc0:	je     6024 <png_free_data+0x124>
    5fc2:	mov    0x150(%rbx),%rsi
    5fc9:	mov    %r12,%rdi
    5fcc:	mov    %r15,-0x48(%rbp)
    5fd0:	mov    %rdx,%r14
    5fd3:	mov    %rcx,%r15
    5fd6:	callq  5790 <png_free@plt>
    5fdb:	mov    0x158(%rbx),%rsi
    5fe2:	mov    %r12,%rdi
    5fe5:	callq  5790 <png_free@plt>
    5fea:	movq   $0x0,0x150(%rbx)
    5ff5:	movq   $0x0,0x158(%rbx)
    6000:	mov    0x8(%rbx),%eax
    6003:	and    $0xffffbfff,%eax
    6008:	mov    %eax,0x8(%rbx)
    600b:	mov    %r15,%rcx
    600e:	mov    %r14,%rdx
    6011:	xor    %r14d,%r14d
    6014:	mov    -0x30(%rbp),%r9
    6018:	mov    -0x28(%rbp),%r8
    601c:	mov    -0x20(%rbp),%rax
    6020:	mov    -0x48(%rbp),%r15
    6024:	mov    %rdx,%rsi
    6027:	and    0x12c(%rbx),%esi
    602d:	and    $0x80,%esi
    6033:	test   %esi,%esi
    6035:	jne    6121 <png_free_data+0x221>
    603b:	mov    %rdx,%rsi
    603e:	and    0x12c(%rbx),%esi
    6044:	and    $0x10,%esi
    6047:	test   %esi,%esi
    6049:	je     60ad <png_free_data+0x1ad>
    604b:	mov    0x80(%rbx),%rsi
    6052:	mov    %r12,%rdi
    6055:	mov    %r15,-0x48(%rbp)
    6059:	mov    %rdx,%r14
    605c:	mov    %rcx,%r15
    605f:	callq  5790 <png_free@plt>
    6064:	mov    0x88(%rbx),%rsi
    606b:	mov    %r12,%rdi
    606e:	callq  5790 <png_free@plt>
    6073:	movq   $0x0,0x80(%rbx)
    607e:	movq   $0x0,0x88(%rbx)
    6089:	mov    0x8(%rbx),%eax
    608c:	and    $0xffffefff,%eax
    6091:	mov    %eax,0x8(%rbx)
    6094:	mov    %r15,%rcx
    6097:	mov    %r14,%rdx
    609a:	xor    %r14d,%r14d
    609d:	mov    -0x30(%rbp),%r9
    60a1:	mov    -0x28(%rbp),%r8
    60a5:	mov    -0x20(%rbp),%rax
    60a9:	mov    -0x48(%rbp),%r15
    60ad:	mov    0x140(%rbx),%rdi
    60b4:	test   %rdi,%rdi
    60b7:	je     6217 <png_free_data+0x317>
    60bd:	mov    %rdx,%rsi
    60c0:	and    0x12c(%rbx),%esi
    60c6:	and    $0x20,%esi
    60c9:	test   %esi,%esi
    60cb:	je     6217 <png_free_data+0x317>
    60d1:	cmp    $0xffffffff,%ecx
    60d4:	jne    619d <png_free_data+0x29d>
    60da:	mov    %r15,-0x38(%rbp)
    60de:	mov    %rdx,-0x48(%rbp)
    60e2:	mov    %rcx,-0x40(%rbp)
    60e6:	jmpq   6286 <png_free_data+0x386>
    60eb:	mov    %rdx,%rax
    60ee:	and    0x12c(%rsi),%eax
    60f4:	and    $0x4000,%eax
    60f9:	test   %eax,%eax
    60fb:	jne    62e1 <png_free_data+0x3e1>
    6101:	mov    %r13,%rax
    6104:	mov    %rbx,%r13
    6107:	mov    %rsi,%rbx
    610a:	mov    %r15,%r9
    610d:	mov    %r12,%r15
    6110:	mov    %rdi,%r12
    6113:	mov    %r14,%rsi
    6116:	mov    %r8,%r14
    6119:	mov    %rsi,%r8
    611c:	jmpq   5f50 <png_free_data+0x50>
    6121:	mov    0x108(%rbx),%rsi
    6128:	mov    %r12,%rdi
    612b:	mov    %r13,-0x18(%rbp)
    612f:	mov    %r15,-0x48(%rbp)
    6133:	mov    %rdx,%r13
    6136:	mov    %rcx,%r15
    6139:	callq  5790 <png_free@plt>
    613e:	mov    0x118(%rbx),%rsi
    6145:	mov    %r12,%rdi
    6148:	callq  5790 <png_free@plt>
    614d:	movq   $0x0,0x108(%rbx)
    6158:	movq   $0x0,0x118(%rbx)
    6163:	mov    0x120(%rbx),%rax
    616a:	test   %rax,%rax
    616d:	jne    6320 <png_free_data+0x420>
    6173:	mov    %r15,%rcx
    6176:	mov    %r13,%rdx
    6179:	mov    0x8(%rbx),%eax
    617c:	and    $0xfffffbff,%eax
    6181:	mov    %eax,0x8(%rbx)
    6184:	mov    -0x30(%rbp),%r9
    6188:	mov    -0x28(%rbp),%r8
    618c:	mov    -0x20(%rbp),%rax
    6190:	mov    -0x48(%rbp),%r15
    6194:	mov    -0x18(%rbp),%r13
    6198:	jmpq   603b <png_free_data+0x13b>
    619d:	movslq %ecx,%r14
    61a0:	shl    $0x5,%r14
    61a4:	mov    (%rdi,%r14,1),%rsi
    61a8:	mov    %r12,%rdi
    61ab:	mov    %r13,-0x10(%rbp)
    61af:	mov    %r15,-0x48(%rbp)
    61b3:	mov    %rcx,%r13
    61b6:	mov    %rdx,%r15
    61b9:	callq  5790 <png_free@plt>
    61be:	mov    0x140(%rbx),%rax
    61c5:	mov    0x10(%rax,%r14,1),%rsi
    61ca:	mov    %r14,%rax
    61cd:	mov    %r13,%r14
    61d0:	mov    %rax,%r13
    61d3:	mov    %r12,%rdi
    61d6:	callq  5790 <png_free@plt>
    61db:	mov    0x140(%rbx),%rax
    61e2:	movq   $0x0,(%rax,%r13,1)
    61ea:	mov    0x140(%rbx),%rax
    61f1:	movq   $0x0,0x10(%rax,%r13,1)
    61fa:	mov    %r14,%rcx
    61fd:	mov    %r15,%rdx
    6200:	xor    %r14d,%r14d
    6203:	mov    -0x30(%rbp),%r9
    6207:	mov    -0x28(%rbp),%r8
    620b:	mov    -0x20(%rbp),%rax
    620f:	mov    -0x48(%rbp),%r15
    6213:	mov    -0x10(%rbp),%r13
    6217:	mov    0x130(%rbx),%rdi
    621e:	test   %rdi,%rdi
    6221:	je     63a6 <png_free_data+0x4a6>
    6227:	mov    %rdx,%rsi
    622a:	and    0x12c(%rbx),%esi
    6230:	and    $0x200,%esi
    6236:	test   %esi,%esi
    6238:	je     63a6 <png_free_data+0x4a6>
    623e:	cmp    $0xffffffff,%ecx
    6241:	jne    6354 <png_free_data+0x454>
    6247:	mov    %rdx,-0x48(%rbp)
    624b:	mov    %rcx,-0x38(%rbp)
    624f:	jmpq   654c <png_free_data+0x64c>
    6254:	mov    0x140(%rbx),%rax
    625b:	movslq %r14d,%r15
    625e:	shl    $0x5,%r15
    6262:	mov    (%rax,%r15,1),%rsi
    6266:	mov    %r12,%rdi
    6269:	callq  5790 <png_free@plt>
    626e:	mov    0x140(%rbx),%rax
    6275:	mov    0x10(%rax,%r15,1),%rsi
    627a:	mov    %r12,%rdi
    627d:	callq  5790 <png_free@plt>
    6282:	add    $0x1,%r14d
    6286:	movslq 0x148(%rbx),%rax
    628d:	cmp    %r14d,%eax
    6290:	jg     6254 <png_free_data+0x354>
    6292:	mov    0x140(%rbx),%rsi
    6299:	mov    %r12,%rdi
    629c:	callq  5790 <png_free@plt>
    62a1:	movq   $0x0,0x140(%rbx)
    62ac:	movl   $0x0,0x148(%rbx)
    62b6:	mov    0x8(%rbx),%eax
    62b9:	and    $0xffffdfff,%eax
    62be:	mov    %eax,0x8(%rbx)
    62c1:	mov    -0x40(%rbp),%rcx
    62c5:	mov    -0x48(%rbp),%rdx
    62c9:	xor    %r14d,%r14d
    62cc:	mov    -0x30(%rbp),%r9
    62d0:	mov    -0x28(%rbp),%r8
    62d4:	mov    -0x20(%rbp),%rax
    62d8:	mov    -0x38(%rbp),%r15
    62dc:	jmpq   6217 <png_free_data+0x317>
    62e1:	cmp    $0xffffffff,%ecx
    62e4:	jne    6598 <png_free_data+0x698>
    62ea:	mov    %rdx,-0x48(%rbp)
    62ee:	mov    %rcx,-0x40(%rbp)
    62f2:	mov    %rbx,%r13
    62f5:	mov    %rsi,%rbx
    62f8:	mov    %r8,%r14
    62fb:	mov    %r12,%r15
    62fe:	mov    %rdi,%r12
    6301:	jmpq   6627 <png_free_data+0x727>
    6306:	mov    0x120(%rbx),%rcx
    630d:	movslq %r14d,%rax
    6310:	mov    (%rcx,%rax,8),%rsi
    6314:	mov    %r12,%rdi
    6317:	callq  5790 <png_free@plt>
    631c:	add    $0x1,%r14d
    6320:	movzbl 0x129(%rbx),%eax
    6327:	cmp    %r14d,%eax
    632a:	jg     6306 <png_free_data+0x406>
    632c:	mov    0x120(%rbx),%rsi
    6333:	mov    %r12,%rdi
    6336:	callq  5790 <png_free@plt>
    633b:	movq   $0x0,0x120(%rbx)
    6346:	mov    %r15,%rcx
    6349:	mov    %r13,%rdx
    634c:	xor    %r14d,%r14d
    634f:	jmpq   6179 <png_free_data+0x279>
    6354:	movslq %ecx,%r14
    6357:	shl    $0x5,%r14
    635b:	mov    0x8(%rdi,%r14,1),%rsi
    6360:	mov    %r12,%rdi
    6363:	mov    %r13,-0x10(%rbp)
    6367:	mov    %r15,-0x48(%rbp)
    636b:	mov    %r14,%r13
    636e:	mov    %rdx,%r14
    6371:	mov    %rcx,%r15
    6374:	callq  5790 <png_free@plt>
    6379:	mov    0x130(%rbx),%rax
    6380:	movq   $0x0,0x8(%rax,%r13,1)
    6389:	mov    %r15,%rcx
    638c:	mov    %r14,%rdx
    638f:	xor    %r14d,%r14d
    6392:	mov    -0x30(%rbp),%r9
    6396:	mov    -0x28(%rbp),%r8
    639a:	mov    -0x20(%rbp),%rax
    639e:	mov    -0x48(%rbp),%r15
    63a2:	mov    -0x10(%rbp),%r13
    63a6:	mov    %rdx,%rsi
    63a9:	and    0x12c(%rbx),%esi
    63af:	and    $0x8000,%esi
    63b5:	test   %esi,%esi
    63b7:	je     644d <png_free_data+0x54d>
    63bd:	mov    0xf8(%rbx),%rsi
    63c4:	test   %rsi,%rsi
    63c7:	je     63ff <png_free_data+0x4ff>
    63c9:	mov    %r12,%rdi
    63cc:	mov    %r15,-0x48(%rbp)
    63d0:	mov    %rcx,%r14
    63d3:	mov    %rdx,%r15
    63d6:	callq  5790 <png_free@plt>
    63db:	movq   $0x0,0xf8(%rbx)
    63e6:	mov    %r14,%rcx
    63e9:	mov    %r15,%rdx
    63ec:	xor    %r14d,%r14d
    63ef:	mov    -0x30(%rbp),%r9
    63f3:	mov    -0x28(%rbp),%r8
    63f7:	mov    -0x20(%rbp),%rax
    63fb:	mov    -0x48(%rbp),%r15
    63ff:	mov    0xf0(%rbx),%rsi
    6406:	test   %rsi,%rsi
    6409:	je     6441 <png_free_data+0x541>
    640b:	mov    %r12,%rdi
    640e:	mov    %r15,-0x48(%rbp)
    6412:	mov    %rcx,%r14
    6415:	mov    %rdx,%r15
    6418:	callq  5790 <png_free@plt>
    641d:	movq   $0x0,0xf0(%rbx)
    6428:	mov    %r14,%rcx
    642b:	mov    %r15,%rdx
    642e:	xor    %r14d,%r14d
    6431:	mov    -0x30(%rbp),%r9
    6435:	mov    -0x28(%rbp),%r8
    6439:	mov    -0x20(%rbp),%rax
    643d:	mov    -0x48(%rbp),%r15
    6441:	mov    0x8(%rbx),%esi
    6444:	and    $0xfffeffff,%esi
    644a:	mov    %esi,0x8(%rbx)
    644d:	mov    %rdx,%rsi
    6450:	and    0x12c(%rbx),%esi
    6456:	and    $0x8,%esi
    6459:	test   %esi,%esi
    645b:	je     64a3 <png_free_data+0x5a3>
    645d:	mov    0x100(%rbx),%rsi
    6464:	mov    %r12,%rdi
    6467:	mov    %r15,-0x48(%rbp)
    646b:	mov    %rdx,%r14
    646e:	mov    %rcx,%r15
    6471:	callq  5790 <png_free@plt>
    6476:	movq   $0x0,0x100(%rbx)
    6481:	mov    0x8(%rbx),%eax
    6484:	and    $0xffffffbf,%eax
    6487:	mov    %eax,0x8(%rbx)
    648a:	mov    %r15,%rcx
    648d:	mov    %r14,%rdx
    6490:	xor    %r14d,%r14d
    6493:	mov    -0x30(%rbp),%r9
    6497:	mov    -0x28(%rbp),%r8
    649b:	mov    -0x20(%rbp),%rax
    649f:	mov    -0x48(%rbp),%r15
    64a3:	mov    %rdx,%rsi
    64a6:	and    0x12c(%rbx),%esi
    64ac:	and    $0x1000,%esi
    64b2:	test   %esi,%esi
    64b4:	je     64fc <png_free_data+0x5fc>
    64b6:	mov    0x18(%rbx),%rsi
    64ba:	mov    %r12,%rdi
    64bd:	mov    %r12,-0x48(%rbp)
    64c1:	mov    %rcx,%r12
    64c4:	mov    %rdx,%r14
    64c7:	callq  5790 <png_free@plt>
    64cc:	movq   $0x0,0x18(%rbx)
    64d4:	mov    0x8(%rbx),%eax
    64d7:	and    $0xfffffff7,%eax
    64da:	mov    %eax,0x8(%rbx)
    64dd:	movw   $0x0,0x20(%rbx)
    64e3:	mov    %r12,%rcx
    64e6:	mov    %r14,%rdx
    64e9:	mov    -0x48(%rbp),%r12
    64ed:	xor    %r14d,%r14d
    64f0:	mov    -0x30(%rbp),%r9
    64f4:	mov    -0x28(%rbp),%r8
    64f8:	mov    -0x20(%rbp),%rax
    64fc:	mov    %rdx,%rsi
    64ff:	and    0x12c(%rbx),%esi
    6505:	and    $0x40,%esi
    6508:	test   %esi,%esi
    650a:	je     66d9 <png_free_data+0x7d9>
    6510:	mov    0x160(%rbx),%rsi
    6517:	test   %rsi,%rsi
    651a:	je     66cd <png_free_data+0x7cd>
    6520:	mov    %rdx,-0x8(%rbp)
    6524:	mov    %rcx,-0x48(%rbp)
    6528:	jmpq   6697 <png_free_data+0x797>
    652d:	mov    0x130(%rbx),%rcx
    6534:	movslq %r14d,%rax
    6537:	shl    $0x5,%rax
    653b:	mov    0x8(%rcx,%rax,1),%rsi
    6540:	mov    %r12,%rdi
    6543:	callq  5790 <png_free@plt>
    6548:	add    $0x1,%r14d
    654c:	movslq 0x138(%rbx),%rax
    6553:	cmp    %r14d,%eax
    6556:	jg     652d <png_free_data+0x62d>
    6558:	mov    0x130(%rbx),%rsi
    655f:	mov    %r12,%rdi
    6562:	callq  5790 <png_free@plt>
    6567:	movq   $0x0,0x130(%rbx)
    6572:	movl   $0x0,0x138(%rbx)
    657c:	mov    -0x38(%rbp),%rcx
    6580:	mov    -0x48(%rbp),%rdx
    6584:	xor    %r14d,%r14d
    6587:	mov    -0x30(%rbp),%r9
    658b:	mov    -0x28(%rbp),%r8
    658f:	mov    -0x20(%rbp),%rax
    6593:	jmpq   63a6 <png_free_data+0x4a6>
    6598:	movslq %ecx,%r8
    659b:	lea    (%r8,%r8,2),%rax
    659f:	shl    $0x4,%rax
    65a3:	lea    (%rax,%r8,8),%r13
    65a7:	mov    0x8(%r9,%r13,1),%r8
    65ac:	mov    %rdi,%rax
    65af:	mov    %rbx,-0x18(%rbp)
    65b3:	mov    %r12,-0x48(%rbp)
    65b7:	mov    %rsi,%rbx
    65ba:	mov    %r8,%rsi
    65bd:	mov    %rdi,%r12
    65c0:	mov    %rax,%rdi
    65c3:	mov    %rcx,%r14
    65c6:	mov    %rdx,%r15
    65c9:	callq  5790 <png_free@plt>
    65ce:	mov    0xa0(%rbx),%rax
    65d5:	movq   $0x0,0x8(%rax,%r13,1)
    65de:	mov    %r14,%rcx
    65e1:	mov    %r15,%rdx
    65e4:	xor    %r14d,%r14d
    65e7:	mov    -0x30(%rbp),%r9
    65eb:	mov    -0x28(%rbp),%r8
    65ef:	mov    -0x20(%rbp),%rax
    65f3:	mov    -0x48(%rbp),%r15
    65f7:	mov    -0x18(%rbp),%r13
    65fb:	jmpq   5f50 <png_free_data+0x50>
    6600:	movslq %r14d,%rcx
    6603:	lea    (%rcx,%rcx,2),%rax
    6607:	shl    $0x4,%rax
    660b:	lea    (%rax,%rcx,8),%rax
    660f:	mov    0xa0(%rbx),%rcx
    6616:	mov    0x8(%rcx,%rax,1),%rsi
    661b:	mov    %r12,%rdi
    661e:	callq  5790 <png_free@plt>
    6623:	add    $0x1,%r14d
    6627:	movslq 0x94(%rbx),%rax
    662e:	cmp    %r14d,%eax
    6631:	jg     6600 <png_free_data+0x700>
    6633:	mov    0xa0(%rbx),%rsi
    663a:	mov    %r12,%rdi
    663d:	callq  5790 <png_free@plt>
    6642:	movq   $0x0,0xa0(%rbx)
    664d:	movl   $0x0,0x94(%rbx)
    6657:	movl   $0x0,0x98(%rbx)
    6661:	mov    -0x40(%rbp),%rcx
    6665:	mov    -0x48(%rbp),%rdx
    6669:	xor    %r14d,%r14d
    666c:	mov    -0x30(%rbp),%r9
    6670:	mov    -0x28(%rbp),%r8
    6674:	mov    -0x20(%rbp),%rax
    6678:	jmpq   5f50 <png_free_data+0x50>
    667d:	mov    0x160(%rbx),%rcx
    6684:	mov    %r14d,%eax
    6687:	mov    (%rcx,%rax,8),%rsi
    668b:	mov    %r12,%rdi
    668e:	callq  5790 <png_free@plt>
    6693:	add    $0x1,%r14d
    6697:	mov    0x4(%rbx),%eax
    669a:	cmp    %r14d,%eax
    669d:	ja     667d <png_free_data+0x77d>
    669f:	mov    %r12,%rdi
    66a2:	mov    0x160(%rbx),%rsi
    66a9:	callq  5790 <png_free@plt>
    66ae:	movq   $0x0,0x160(%rbx)
    66b9:	mov    -0x48(%rbp),%rcx
    66bd:	mov    -0x8(%rbp),%rdx
    66c1:	mov    -0x30(%rbp),%r9
    66c5:	mov    -0x28(%rbp),%r8
    66c9:	mov    -0x20(%rbp),%rax
    66cd:	mov    0x8(%rbx),%esi
    66d0:	and    $0xffff7fff,%esi
    66d6:	mov    %esi,0x8(%rbx)
    66d9:	cmp    $0xffffffff,%ecx
    66dc:	je     66e4 <png_free_data+0x7e4>
    66de:	and    $0xffffbddf,%edx
    66e4:	not    %edx
    66e6:	and    0x12c(%rbx),%edx
    66ec:	mov    %edx,0x12c(%rbx)
    66f2:	mov    %r13,%rbx
    66f5:	mov    %rax,%r13
    66f8:	mov    %r15,%r12
    66fb:	mov    %r9,%r15
    66fe:	mov    %r8,%r14
    6701:	leaveq 
    6702:	retq   
    6703:	data16 nopw %cs:0x0(%rax,%rax,1)
    670e:	xchg   %ax,%ax

0000000000006710 <png_data_freer>:
    6710:	push   %rbp
    6711:	mov    %rsp,%rbp
    6714:	test   %rdi,%rdi
    6717:	jne    671b <png_data_freer+0xb>
    6719:	leaveq 
    671a:	retq   
    671b:	test   %rsi,%rsi
    671e:	jne    6722 <png_data_freer+0x12>
    6720:	leaveq 
    6721:	retq   
    6722:	cmp    $0x1,%edx
    6725:	je     6738 <png_data_freer+0x28>
    6727:	cmp    $0x2,%edx
    672a:	je     6746 <png_data_freer+0x36>
    672c:	lea    0x263d9(%rip),%rsi        # 2cb0c <short_months.6+0x37>
    6733:	callq  5470 <png_error@plt>
    6738:	or     0x12c(%rsi),%ecx
    673e:	mov    %ecx,0x12c(%rsi)
    6744:	leaveq 
    6745:	retq   
    6746:	not    %ecx
    6748:	and    0x12c(%rsi),%ecx
    674e:	mov    %ecx,0x12c(%rsi)
    6754:	leaveq 
    6755:	retq   
    6756:	nopw   %cs:0x0(%rax,%rax,1)

0000000000006760 <png_handle_as_unknown>:
    6760:	push   %rbp
    6761:	mov    %rsp,%rbp
    6764:	sub    $0x30,%rsp
    6768:	xor    %eax,%eax
    676a:	test   %rdi,%rdi
    676d:	jne    6771 <png_handle_as_unknown+0x11>
    676f:	leaveq 
    6770:	retq   
    6771:	test   %rsi,%rsi
    6774:	jne    6778 <png_handle_as_unknown+0x18>
    6776:	leaveq 
    6777:	retq   
    6778:	mov    0x3c4(%rdi),%ecx
    677e:	test   %ecx,%ecx
    6780:	jne    6784 <png_handle_as_unknown+0x24>
    6782:	leaveq 
    6783:	retq   
    6784:	mov    $0x4,%edx
    6789:	lea    (%rcx,%rcx,4),%eax
    678c:	mov    %eax,%eax
    678e:	mov    0x3c8(%rdi),%rcx
    6795:	add    %rcx,%rax
    6798:	mov    %rbx,-0x8(%rbp)
    679c:	mov    %r12,-0x10(%rbp)
    67a0:	mov    %r13,-0x18(%rbp)
    67a4:	mov    %r14,-0x20(%rbp)
    67a8:	mov    %r15,-0x28(%rbp)
    67ac:	mov    %rsi,%rbx
    67af:	mov    %rdx,%r12
    67b2:	mov    %rcx,%r13
    67b5:	mov    %rax,%r14
    67b8:	jmp    67c2 <png_handle_as_unknown+0x62>
    67ba:	cmp    %r13,%r15
    67bd:	jbe    67f3 <png_handle_as_unknown+0x93>
    67bf:	mov    %r15,%r14
    67c2:	lea    -0x5(%r14),%r15
    67c6:	mov    %rbx,%rdi
    67c9:	mov    %r15,%rsi
    67cc:	mov    %r12,%rdx
    67cf:	callq  53d0 <memcmp@plt>
    67d4:	test   %eax,%eax
    67d6:	jne    67ba <png_handle_as_unknown+0x5a>
    67d8:	movzbl -0x1(%r14),%eax
    67dd:	mov    -0x28(%rbp),%r15
    67e1:	mov    -0x20(%rbp),%r14
    67e5:	mov    -0x18(%rbp),%r13
    67e9:	mov    -0x10(%rbp),%r12
    67ed:	mov    -0x8(%rbp),%rbx
    67f1:	leaveq 
    67f2:	retq   
    67f3:	mov    -0x28(%rbp),%r15
    67f7:	mov    -0x20(%rbp),%r14
    67fb:	mov    -0x18(%rbp),%r13
    67ff:	mov    -0x10(%rbp),%r12
    6803:	mov    -0x8(%rbp),%rbx
    6807:	xor    %eax,%eax
    6809:	leaveq 
    680a:	retq   
    680b:	nopl   0x0(%rax,%rax,1)

0000000000006810 <png_get_copyright>:
    6810:	push   %rbp
    6811:	mov    %rsp,%rbp
    6814:	lea    0x2631b(%rip),%rax        # 2cb36 <short_months.6+0x61>
    681b:	leaveq 
    681c:	retq   
    681d:	nopl   (%rax)

0000000000006820 <png_get_header_ver>:
    6820:	push   %rbp
    6821:	mov    %rsp,%rbp
    6824:	lea    0x263d6(%rip),%rax        # 2cc01 <short_months.6+0x12c>
    682b:	leaveq 
    682c:	retq   
    682d:	nopl   (%rax)

0000000000006830 <png_get_header_version>:
    6830:	push   %rbp
    6831:	mov    %rsp,%rbp
    6834:	lea    0x263cd(%rip),%rax        # 2cc08 <short_months.6+0x133>
    683b:	leaveq 
    683c:	retq   
    683d:	nopl   (%rax)

0000000000006840 <png_get_libpng_ver>:
    6840:	push   %rbp
    6841:	mov    %rsp,%rbp
    6844:	callq  55f0 <png_get_header_ver@plt>
    6849:	leaveq 
    684a:	retq   
    684b:	nopl   0x0(%rax,%rax,1)

0000000000006850 <png_save_int_32>:
    6850:	push   %rbp
    6851:	mov    %rsp,%rbp
    6854:	callq  5500 <png_save_uint_32@plt>
    6859:	leaveq 
    685a:	retq   
    685b:	nopl   0x0(%rax,%rax,1)

0000000000006860 <png_image_free>:
    6860:	push   %rbp
    6861:	mov    %rsp,%rbp
    6864:	sub    $0x10,%rsp
    6868:	test   %rdi,%rdi
    686b:	jne    686f <png_image_free+0xf>
    686d:	leaveq 
    686e:	retq   
    686f:	mov    (%rdi),%rax
    6872:	test   %rax,%rax
    6875:	jne    6879 <png_image_free+0x19>
    6877:	leaveq 
    6878:	retq   
    6879:	mov    0x10(%rax),%rax
    687d:	test   %rax,%rax
    6880:	je     6884 <png_image_free+0x24>
    6882:	leaveq 
    6883:	retq   
    6884:	lea    0x3fa5(%rip),%rsi        # a830 <png_image_free_function>
    688b:	mov    %rdi,%rdx
    688e:	mov    %rdi,%rax
    6891:	mov    %r15,-0x8(%rbp)
    6895:	mov    %rdi,%r15
    6898:	mov    %rax,%rdi
    689b:	callq  b260 <png_safe_execute>
    68a0:	movq   $0x0,(%r15)
    68a7:	mov    -0x8(%rbp),%r15
    68ab:	leaveq 
    68ac:	retq   
    68ad:	nopl   (%rax)

00000000000068b0 <png_set_option>:
    68b0:	push   %rbp
    68b1:	mov    %rsp,%rbp
    68b4:	mov    $0x1,%eax
    68b9:	test   %rdi,%rdi
    68bc:	jne    68c0 <png_set_option+0x10>
    68be:	leaveq 
    68bf:	retq   
    68c0:	test   %esi,%esi
    68c2:	jns    68c6 <png_set_option+0x16>
    68c4:	leaveq 
    68c5:	retq   
    68c6:	cmp    $0xb,%esi
    68c9:	jle    68cd <png_set_option+0x1d>
    68cb:	leaveq 
    68cc:	retq   
    68cd:	mov    %rsi,%rcx
    68d0:	and    $0x1,%ecx
    68d3:	test   %ecx,%ecx
    68d5:	je     68d9 <png_set_option+0x29>
    68d7:	leaveq 
    68d8:	retq   
    68d9:	mov    $0x3,%r8d
    68df:	test   %edx,%edx
    68e1:	jne    68ea <png_set_option+0x3a>
    68e3:	mov    $0x2,%edx
    68e8:	jmp    68ed <png_set_option+0x3d>
    68ea:	mov    %r8,%rdx
    68ed:	mov    %rsi,%rcx
    68f0:	shl    %cl,%r8d
    68f3:	mov    %r8,%rsi
    68f6:	not    %esi
    68f8:	mov    0x388(%rdi),%eax
    68fe:	and    %eax,%esi
    6900:	shl    %cl,%edx
    6902:	or     %edx,%esi
    6904:	movzbl %sil,%edx
    6908:	mov    %edx,0x388(%rdi)
    690e:	and    %r8d,%eax
    6911:	sar    %cl,%eax
    6913:	leaveq 
    6914:	retq   
    6915:	data16 nopw %cs:0x0(%rax,%rax,1)

0000000000006920 <png_zstream_error>:
    6920:	push   %rbp
    6921:	mov    %rsp,%rbp
    6924:	mov    0x170(%rdi),%rax
    692b:	test   %rax,%rax
    692e:	je     6932 <png_zstream_error+0x12>
    6930:	leaveq 
    6931:	retq   
    6932:	lea    0x7(%rsi),%eax
    6935:	cmp    $0x9,%eax
    6938:	ja     695a <png_zstream_error+0x3a>
    693a:	lea    0x256bf(%rip),%rcx        # 2c000 <_fini+0xf3c>
    6941:	movslq (%rcx,%rax,4),%rax
    6945:	add    %rcx,%rax
    6948:	jmpq   *%rax
    694a:	lea    0x263a1(%rip),%rax        # 2ccf2 <short_months.6+0x21d>
    6951:	mov    %rax,0x170(%rdi)
    6958:	leaveq 
    6959:	retq   
    695a:	lea    0x262d5(%rip),%rax        # 2cc36 <short_months.6+0x161>
    6961:	mov    %rax,0x170(%rdi)
    6968:	leaveq 
    6969:	retq   
    696a:	lea    0x262e1(%rip),%rax        # 2cc52 <short_months.6+0x17d>
    6971:	mov    %rax,0x170(%rdi)
    6978:	leaveq 
    6979:	retq   
    697a:	lea    0x262ed(%rip),%rax        # 2cc6e <short_months.6+0x199>
    6981:	mov    %rax,0x170(%rdi)
    6988:	leaveq 
    6989:	retq   
    698a:	lea    0x262f3(%rip),%rax        # 2cc84 <short_months.6+0x1af>
    6991:	mov    %rax,0x170(%rdi)
    6998:	leaveq 
    6999:	retq   
    699a:	lea    0x262f1(%rip),%rax        # 2cc92 <short_months.6+0x1bd>
    69a1:	mov    %rax,0x170(%rdi)
    69a8:	leaveq 
    69a9:	retq   
    69aa:	lea    0x262f8(%rip),%rax        # 2cca9 <short_months.6+0x1d4>
    69b1:	mov    %rax,0x170(%rdi)
    69b8:	leaveq 
    69b9:	retq   
    69ba:	lea    0x262fa(%rip),%rax        # 2ccbb <short_months.6+0x1e6>
    69c1:	mov    %rax,0x170(%rdi)
    69c8:	leaveq 
    69c9:	retq   
    69ca:	lea    0x262fe(%rip),%rax        # 2cccf <short_months.6+0x1fa>
    69d1:	mov    %rax,0x170(%rdi)
    69d8:	leaveq 
    69d9:	retq   
    69da:	lea    0x262f8(%rip),%rax        # 2ccd9 <short_months.6+0x204>
    69e1:	mov    %rax,0x170(%rdi)
    69e8:	leaveq 
    69e9:	retq   
    69ea:	nopw   0x0(%rax,%rax,1)

00000000000069f0 <png_fixed>:
    69f0:	push   %rbp
    69f1:	mov    %rsp,%rbp
    69f4:	sub    $0x10,%rsp
    69f8:	mov    %r14,-0x8(%rbp)
    69fc:	mov    %r15,-0x10(%rbp)
    6a00:	mov    %rsi,%r14
    6a03:	mov    %rdi,%r15
    6a06:	movsd  0x26a42(%rip),%xmm1        # 2d450 <short_months.6+0x97b>
    6a0e:	mulsd  %xmm1,%xmm0
    6a12:	movsd  0x26a3e(%rip),%xmm1        # 2d458 <short_months.6+0x983>
    6a1a:	addsd  %xmm1,%xmm0
    6a1e:	callq  57e0 <floor@plt>
    6a23:	movsd  0x26a3d(%rip),%xmm1        # 2d468 <short_months.6+0x993>
    6a2b:	ucomisd %xmm1,%xmm0
    6a2f:	ja     6a4f <png_fixed+0x5f>
    6a31:	movsd  0x26a27(%rip),%xmm1        # 2d460 <short_months.6+0x98b>
    6a39:	ucomisd %xmm1,%xmm0
    6a3d:	jp     6a41 <png_fixed+0x51>
    6a3f:	jb     6a4f <png_fixed+0x5f>
    6a41:	cvttsd2si %xmm0,%eax
    6a45:	mov    -0x10(%rbp),%r15
    6a49:	mov    -0x8(%rbp),%r14
    6a4d:	leaveq 
    6a4e:	retq   
    6a4f:	mov    %r14,%rsi
    6a52:	mov    %r15,%rdi
    6a55:	callq  acc0 <png_fixed_error>
    6a5a:	nopw   0x0(%rax,%rax,1)

0000000000006a60 <png_user_version_check>:
    6a60:	push   %rbp
    6a61:	mov    %rsp,%rbp
    6a64:	sub    $0x90,%rsp
    6a6b:	xor    %edx,%edx
    6a6d:	lea    0x2618d(%rip),%r11        # 2cc01 <short_months.6+0x12c>
    6a74:	test   %rsi,%rsi
    6a77:	je     6a85 <png_user_version_check+0x25>
    6a79:	mov    $0xffffffffffffffff,%r8
    6a80:	mov    %rdx,%rax
    6a83:	jmp    6ae0 <png_user_version_check+0x80>
    6a85:	mov    0x130(%rdi),%eax
    6a8b:	or     $0x20000,%eax
    6a90:	mov    %eax,0x130(%rdi)
    6a96:	mov    0x130(%rdi),%eax
    6a9c:	and    $0x20000,%eax
    6aa1:	test   %eax,%eax
    6aa3:	jne    6af8 <png_user_version_check+0x98>
    6aa5:	mov    $0x1,%eax
    6aaa:	leaveq 
    6aab:	retq   
    6aac:	mov    0x130(%rdi),%r9d
    6ab3:	or     $0x20000,%r9d
    6aba:	mov    %r9d,0x130(%rdi)
    6ac1:	movsbq (%rsi,%r10,1),%rcx
    6ac6:	cmp    $0x2e,%cl
    6ac9:	jne    6ace <png_user_version_check+0x6e>
    6acb:	add    $0x1,%eax
    6ace:	cmp    $0x1,%eax
    6ad1:	jg     6a96 <png_user_version_check+0x36>
    6ad3:	test   %cl,%cl
    6ad5:	je     6a96 <png_user_version_check+0x36>
    6ad7:	movsbq (%r10,%r11,1),%rcx
    6adc:	test   %cl,%cl
    6ade:	je     6a96 <png_user_version_check+0x36>
    6ae0:	add    $0x1,%r8d
    6ae4:	movslq %r8d,%r10
    6ae7:	movsbq (%r10,%r11,1),%r9
    6aec:	movsbq (%rsi,%r10,1),%rcx
    6af1:	cmp    %cl,%r9b
    6af4:	jne    6aac <png_user_version_check+0x4c>
    6af6:	jmp    6ac1 <png_user_version_check+0x61>
    6af8:	lea    -0x90(%rbp),%r8
    6aff:	mov    $0x80,%eax
    6b04:	lea    0x261fe(%rip),%rcx        # 2cd09 <short_months.6+0x234>
    6b0b:	mov    %r14,-0x8(%rbp)
    6b0f:	mov    %r15,-0x10(%rbp)
    6b13:	mov    %rdi,%r14
    6b16:	mov    %r8,%rdi
    6b19:	mov    %rsi,%r15
    6b1c:	mov    %rax,%rsi
    6b1f:	callq  ad30 <png_safecat>
    6b24:	mov    %r15,%rcx
    6b27:	mov    %rax,%rdx
    6b2a:	lea    -0x90(%rbp),%r15
    6b31:	mov    %r15,%rdi
    6b34:	mov    $0x80,%esi
    6b39:	callq  ad30 <png_safecat>
    6b3e:	mov    %rax,%rdx
    6b41:	lea    0x261e0(%rip),%rcx        # 2cd28 <short_months.6+0x253>
    6b48:	mov    %r15,%rdi
    6b4b:	mov    $0x80,%esi
    6b50:	callq  ad30 <png_safecat>
    6b55:	mov    %rax,%rdx
    6b58:	mov    %r15,%rdi
    6b5b:	lea    0x2609f(%rip),%rcx        # 2cc01 <short_months.6+0x12c>
    6b62:	mov    $0x80,%esi
    6b67:	callq  ad30 <png_safecat>
    6b6c:	mov    %r15,%rsi
    6b6f:	mov    %r14,%rdi
    6b72:	callq  5390 <png_warning@plt>
    6b77:	mov    -0x10(%rbp),%r15
    6b7b:	mov    -0x8(%rbp),%r14
    6b7f:	xor    %eax,%eax
    6b81:	leaveq 
    6b82:	retq   
    6b83:	data16 nopw %cs:0x0(%rax,%rax,1)
    6b8e:	xchg   %ax,%ax

0000000000006b90 <png_create_png_struct>:
    6b90:	push   %rbp
    6b91:	mov    %rsp,%rbp
    6b94:	sub    $0x5e0,%rsp
    6b9b:	mov    %rbx,-0x10(%rbp)
    6b9f:	mov    %r12,-0x18(%rbp)
    6ba3:	mov    %r13,-0x20(%rbp)
    6ba7:	mov    %r14,-0x28(%rbp)
    6bab:	mov    %r15,-0x30(%rbp)
    6baf:	mov    %rdi,-0x8(%rbp)
    6bb3:	mov    %r9,%rbx
    6bb6:	mov    %rsi,%r12
    6bb9:	mov    %rdx,%r13
    6bbc:	mov    %rcx,%r14
    6bbf:	mov    %r8,%r15
    6bc2:	lea    -0x5e0(%rbp),%rdi
    6bc9:	xor    %esi,%esi
    6bcb:	mov    $0x4e8,%edx
    6bd0:	callq  5350 <memset@plt>
    6bd5:	mov    %rbx,%rdx
    6bd8:	mov    %r15,%rsi
    6bdb:	movl   $0xf4240,-0x1c4(%rbp)
    6be5:	movl   $0xf4240,-0x1c0(%rbp)
    6bef:	movl   $0x3e8,-0x1bc(%rbp)
    6bf9:	movq   $0x7a1200,-0x1b8(%rbp)
    6c04:	mov    0x10(%rbp),%rcx
    6c08:	lea    -0x5e0(%rbp),%rbx
    6c0f:	mov    %rbx,%rdi
    6c12:	callq  54d0 <png_set_mem_fn@plt>
    6c17:	mov    %r14,%rcx
    6c1a:	mov    %r13,%rdx
    6c1d:	mov    %r12,%rsi
    6c20:	mov    %rbx,%rdi
    6c23:	callq  5680 <png_set_error_fn@plt>
    6c28:	lea    -0xf8(%rbp),%r12
    6c2f:	mov    %r12,%rdi
    6c32:	callq  5420 <_setjmp@plt>
    6c37:	test   %eax,%eax
    6c39:	je     6c53 <png_create_png_struct+0xc3>
    6c3b:	mov    -0x30(%rbp),%r15
    6c3f:	mov    -0x28(%rbp),%r14
    6c43:	mov    -0x20(%rbp),%r13
    6c47:	mov    -0x18(%rbp),%r12
    6c4b:	mov    -0x10(%rbp),%rbx
    6c4f:	xor    %eax,%eax
    6c51:	leaveq 
    6c52:	retq   
    6c53:	mov    %r12,-0x510(%rbp)
    6c5a:	movq   $0x0,-0x508(%rbp)
    6c65:	mov    0x2b374(%rip),%rax        # 31fe0 <longjmp@GLIBC_2.2.5>
    6c6c:	mov    %rax,-0x518(%rbp)
    6c73:	mov    %rbx,%rdi
    6c76:	mov    -0x8(%rbp),%rsi
    6c7a:	callq  6a60 <png_user_version_check>
    6c7f:	test   %eax,%eax
    6c81:	jne    6c9b <png_create_png_struct+0x10b>
    6c83:	mov    -0x30(%rbp),%r15
    6c87:	mov    -0x28(%rbp),%r14
    6c8b:	mov    -0x20(%rbp),%r13
    6c8f:	mov    -0x18(%rbp),%r12
    6c93:	mov    -0x10(%rbp),%rbx
    6c97:	xor    %eax,%eax
    6c99:	leaveq 
    6c9a:	retq   
    6c9b:	mov    %rbx,%rdi
    6c9e:	mov    $0x4e8,%r12d
    6ca4:	mov    %r12,%rsi
    6ca7:	callq  5150 <png_malloc_warn@plt>
    6cac:	test   %rax,%rax
    6caf:	jne    6cc9 <png_create_png_struct+0x139>
    6cb1:	mov    -0x30(%rbp),%r15
    6cb5:	mov    -0x28(%rbp),%r14
    6cb9:	mov    -0x20(%rbp),%r13
    6cbd:	mov    -0x18(%rbp),%r12
    6cc1:	mov    -0x10(%rbp),%rbx
    6cc5:	xor    %eax,%eax
    6cc7:	leaveq 
    6cc8:	retq   
    6cc9:	lea    0x70(%rip),%rcx        # 6d40 <png_zalloc>
    6cd0:	mov    %rcx,-0x460(%rbp)
    6cd7:	lea    0xa2(%rip),%rcx        # 6d80 <png_zfree>
    6cde:	mov    %rcx,-0x458(%rbp)
    6ce5:	mov    %r12,%rdx
    6ce8:	mov    %rax,%r12
    6ceb:	mov    %rbx,%rsi
    6cee:	mov    %r12,-0x450(%rbp)
    6cf5:	movq   $0x0,-0x510(%rbp)
    6d00:	movq   $0x0,-0x508(%rbp)
    6d0b:	movq   $0x0,-0x518(%rbp)
    6d16:	mov    %r12,%rdi
    6d19:	callq  54c0 <memcpy@plt>
    6d1e:	mov    %r12,%rax
    6d21:	mov    -0x30(%rbp),%r15
    6d25:	mov    -0x28(%rbp),%r14
    6d29:	mov    -0x20(%rbp),%r13
    6d2d:	mov    -0x18(%rbp),%r12
    6d31:	mov    -0x10(%rbp),%rbx
    6d35:	leaveq 
    6d36:	retq   
    6d37:	nopw   0x0(%rax,%rax,1)

0000000000006d40 <png_zalloc>:
    6d40:	push   %rbp
    6d41:	mov    %rsp,%rbp
    6d44:	xor    %eax,%eax
    6d46:	test   %rdi,%rdi
    6d49:	jne    6d4d <png_zalloc+0xd>
    6d4b:	leaveq 
    6d4c:	retq   
    6d4d:	mov    %edx,%ecx
    6d4f:	mov    $0xffffffffffffffff,%rax
    6d56:	xor    %edx,%edx
    6d58:	div    %rcx
    6d5b:	mov    %esi,%edx
    6d5d:	cmp    %rdx,%rax
    6d60:	jbe    6d70 <png_zalloc+0x30>
    6d62:	imul   %rdx,%rcx
    6d66:	mov    %rcx,%rsi
    6d69:	callq  5150 <png_malloc_warn@plt>
    6d6e:	leaveq 
    6d6f:	retq   
    6d70:	lea    0x25fc4(%rip),%rsi        # 2cd3b <short_months.6+0x266>
    6d77:	callq  5390 <png_warning@plt>
    6d7c:	xor    %eax,%eax
    6d7e:	leaveq 
    6d7f:	retq   

0000000000006d80 <png_zfree>:
    6d80:	push   %rbp
    6d81:	mov    %rsp,%rbp
    6d84:	callq  5790 <png_free@plt>
    6d89:	leaveq 
    6d8a:	retq   
    6d8b:	nopl   0x0(%rax,%rax,1)

0000000000006d90 <png_reset_crc>:
    6d90:	push   %rbp
    6d91:	mov    %rsp,%rbp
    6d94:	sub    $0x10,%rsp
    6d98:	mov    %r15,-0x8(%rbp)
    6d9c:	mov    %rdi,%r15
    6d9f:	xor    %edi,%edi
    6da1:	mov    %rdi,%rsi
    6da4:	mov    %rdi,%rdx
    6da7:	callq  51c0 <crc32@plt>
    6dac:	mov    %eax,0x24c(%r15)
    6db3:	mov    -0x8(%rbp),%r15
    6db7:	leaveq 
    6db8:	retq   
    6db9:	nopl   0x0(%rax)

0000000000006dc0 <png_calculate_crc>:
    6dc0:	push   %rbp
    6dc1:	mov    %rsp,%rbp
    6dc4:	sub    $0x30,%rsp
    6dc8:	xor    %r8d,%r8d
    6dcb:	mov    $0x1,%ecx
    6dd0:	mov    0x218(%rdi),%eax
    6dd6:	and    $0x20000000,%eax
    6ddb:	test   %eax,%eax
    6ddd:	jne    6df3 <png_calculate_crc+0x33>
    6ddf:	mov    0x130(%rdi),%eax
    6de5:	and    $0x800,%eax
    6dea:	test   %eax,%eax
    6dec:	je     6e08 <png_calculate_crc+0x48>
    6dee:	mov    %r8,%rcx
    6df1:	jmp    6e08 <png_calculate_crc+0x48>
    6df3:	mov    0x130(%rdi),%eax
    6df9:	and    $0x300,%eax
    6dfe:	cmp    $0x300,%eax
    6e03:	jne    6e08 <png_calculate_crc+0x48>
    6e05:	mov    %r8,%rcx
    6e08:	test   %ecx,%ecx
    6e0a:	jg     6e0e <png_calculate_crc+0x4e>
    6e0c:	leaveq 
    6e0d:	retq   
    6e0e:	test   %rdx,%rdx
    6e11:	jne    6e15 <png_calculate_crc+0x55>
    6e13:	leaveq 
    6e14:	retq   
    6e15:	mov    0x24c(%rdi),%eax
    6e1b:	mov    $0xffffffff,%ecx
    6e20:	mov    %rbx,-0x8(%rbp)
    6e24:	mov    %r12,-0x10(%rbp)
    6e28:	mov    %r13,-0x18(%rbp)
    6e2c:	mov    %r14,-0x20(%rbp)
    6e30:	mov    %r15,-0x28(%rbp)
    6e34:	mov    %rdx,%rbx
    6e37:	mov    %rsi,%r12
    6e3a:	mov    %rdi,%r13
    6e3d:	mov    %rcx,%r14
    6e40:	jmp    6e4b <png_calculate_crc+0x8b>
    6e42:	sub    %rcx,%rbx
    6e45:	mov    %r15d,%ecx
    6e48:	add    %rcx,%r12
    6e4b:	test   %rbx,%rbx
    6e4e:	jne    6e86 <png_calculate_crc+0xc6>
    6e50:	mov    %r14,%r15
    6e53:	mov    %rax,%rdi
    6e56:	mov    %r12,%rsi
    6e59:	mov    %r15,%rdx
    6e5c:	callq  51c0 <crc32@plt>
    6e61:	mov    %r15d,%ecx
    6e64:	cmp    %rbx,%rcx
    6e67:	jne    6e42 <png_calculate_crc+0x82>
    6e69:	mov    %eax,0x24c(%r13)
    6e70:	mov    -0x28(%rbp),%r15
    6e74:	mov    -0x20(%rbp),%r14
    6e78:	mov    -0x18(%rbp),%r13
    6e7c:	mov    -0x10(%rbp),%r12
    6e80:	mov    -0x8(%rbp),%rbx
    6e84:	leaveq 
    6e85:	retq   
    6e86:	mov    %rbx,%r15
    6e89:	jmp    6e53 <png_calculate_crc+0x93>
    6e8b:	nopl   0x0(%rax,%rax,1)

0000000000006e90 <png_chunk_unknown_handling>:
    6e90:	push   %rbp
    6e91:	mov    %rsp,%rbp
    6e94:	sub    $0x10,%rsp
    6e98:	mov    %rsi,%rax
    6e9b:	shr    $0x18,%eax
    6e9e:	mov    %al,-0x5(%rbp)
    6ea1:	mov    %rsi,%rax
    6ea4:	shr    $0x10,%eax
    6ea7:	mov    %al,-0x4(%rbp)
    6eaa:	mov    %rsi,%rax
    6ead:	shr    $0x8,%eax
    6eb0:	mov    %al,-0x3(%rbp)
    6eb3:	mov    %sil,-0x2(%rbp)
    6eb7:	movb   $0x0,-0x1(%rbp)
    6ebb:	lea    -0x5(%rbp),%rsi
    6ebf:	callq  5310 <png_handle_as_unknown@plt>
    6ec4:	leaveq 
    6ec5:	retq   
    6ec6:	nopw   %cs:0x0(%rax,%rax,1)

0000000000006ed0 <png_colorspace_set_gamma>:
    6ed0:	push   %rbp
    6ed1:	mov    %rsp,%rbp
    6ed4:	sub    $0x10,%rsp
    6ed8:	mov    $0x1,%ecx
    6edd:	lea    0x25e7a(%rip),%rax        # 2cd5e <short_months.6+0x289>
    6ee4:	cmp    $0xf,%edx
    6ee7:	jg     6f03 <png_colorspace_set_gamma+0x33>
    6ee9:	movzwl 0x4a(%rsi),%edx
    6eed:	or     $0x8000,%dx
    6ef2:	mov    %dx,0x4a(%rsi)
    6ef6:	mov    %rcx,%rdx
    6ef9:	mov    %rax,%rsi
    6efc:	callq  b140 <png_chunk_report>
    6f01:	leaveq 
    6f02:	retq   
    6f03:	cmp    $0x2540be40,%edx
    6f09:	jg     6ee9 <png_colorspace_set_gamma+0x19>
    6f0b:	mov    0x12c(%rdi),%eax
    6f11:	and    $0x8000,%eax
    6f16:	test   %eax,%eax
    6f18:	jne    6f29 <png_colorspace_set_gamma+0x59>
    6f1a:	movzwl 0x4a(%rsi),%eax
    6f1e:	and    $0x8000,%eax
    6f23:	test   %eax,%eax
    6f25:	jle    6f3d <png_colorspace_set_gamma+0x6d>
    6f27:	leaveq 
    6f28:	retq   
    6f29:	movzwl 0x4a(%rsi),%eax
    6f2d:	and    $0x8,%eax
    6f30:	test   %eax,%eax
    6f32:	jle    6f1a <png_colorspace_set_gamma+0x4a>
    6f34:	lea    0x25e3c(%rip),%rax        # 2cd77 <short_months.6+0x2a2>
    6f3b:	jmp    6ee9 <png_colorspace_set_gamma+0x19>
    6f3d:	mov    %rsi,%r8
    6f40:	mov    %rdx,%rax
    6f43:	mov    %r15,-0x10(%rbp)
    6f47:	mov    %rdx,-0x8(%rbp)
    6f4b:	mov    %rax,%rdx
    6f4e:	mov    %rsi,%r15
    6f51:	mov    %r8,%rsi
    6f54:	callq  9120 <png_colorspace_check_gamma>
    6f59:	test   %eax,%eax
    6f5b:	jne    6f63 <png_colorspace_set_gamma+0x93>
    6f5d:	mov    -0x10(%rbp),%r15
    6f61:	leaveq 
    6f62:	retq   
    6f63:	mov    -0x8(%rbp),%rax
    6f67:	mov    %eax,(%r15)
    6f6a:	movzwl 0x4a(%r15),%eax
    6f6f:	or     $0x9,%ax
    6f73:	mov    %ax,0x4a(%r15)
    6f78:	mov    -0x10(%rbp),%r15
    6f7c:	leaveq 
    6f7d:	retq   
    6f7e:	xchg   %ax,%ax

0000000000006f80 <png_colorspace_sync_info>:
    6f80:	push   %rbp
    6f81:	mov    %rsp,%rbp
    6f84:	movzwl 0x7e(%rsi),%eax
    6f88:	mov    %rax,%rcx
    6f8b:	and    $0x8000,%ecx
    6f91:	test   %ecx,%ecx
    6f93:	jg     6fab <png_colorspace_sync_info+0x2b>
    6f95:	and    $0x80,%eax
    6f9a:	test   %eax,%eax
    6f9c:	jg     6fc9 <png_colorspace_sync_info+0x49>
    6f9e:	mov    0x8(%rsi),%eax
    6fa1:	and    $0xfffff7ff,%eax
    6fa6:	mov    %eax,0x8(%rsi)
    6fa9:	jmp    6fd4 <png_colorspace_sync_info+0x54>
    6fab:	mov    0x8(%rsi),%eax
    6fae:	and    $0xffffe7fa,%eax
    6fb3:	mov    %eax,0x8(%rsi)
    6fb6:	mov    $0x10,%edx
    6fbb:	mov    $0xffffffffffffffff,%rcx
    6fc2:	callq  5720 <png_free_data@plt>
    6fc7:	leaveq 
    6fc8:	retq   
    6fc9:	mov    0x8(%rsi),%eax
    6fcc:	or     $0x800,%eax
    6fd1:	mov    %eax,0x8(%rsi)
    6fd4:	movzwl 0x7e(%rsi),%eax
    6fd8:	and    $0x2,%eax
    6fdb:	test   %eax,%eax
    6fdd:	jg     6fea <png_colorspace_sync_info+0x6a>
    6fdf:	mov    0x8(%rsi),%eax
    6fe2:	and    $0xfffffffb,%eax
    6fe5:	mov    %eax,0x8(%rsi)
    6fe8:	jmp    6ff3 <png_colorspace_sync_info+0x73>
    6fea:	mov    0x8(%rsi),%eax
    6fed:	or     $0x4,%eax
    6ff0:	mov    %eax,0x8(%rsi)
    6ff3:	movzwl 0x7e(%rsi),%eax
    6ff7:	and    $0x1,%eax
    6ffa:	test   %eax,%eax
    6ffc:	jg     7009 <png_colorspace_sync_info+0x89>
    6ffe:	mov    0x8(%rsi),%eax
    7001:	and    $0xfffffffe,%eax
    7004:	mov    %eax,0x8(%rsi)
    7007:	leaveq 
    7008:	retq   
    7009:	mov    0x8(%rsi),%eax
    700c:	or     $0x1,%eax
    700f:	mov    %eax,0x8(%rsi)
    7012:	leaveq 
    7013:	retq   
    7014:	data16 nopw %cs:0x0(%rax,%rax,1)
    701f:	nop

0000000000007020 <png_colorspace_sync>:
    7020:	push   %rbp
    7021:	mov    %rsp,%rbp
    7024:	sub    $0x10,%rsp
    7028:	test   %rsi,%rsi
    702b:	jne    702f <png_colorspace_sync+0xf>
    702d:	leaveq 
    702e:	retq   
    702f:	lea    0x34(%rsi),%rcx
    7033:	lea    0x498(%rdi),%rax
    703a:	mov    $0x4c,%edx
    703f:	mov    %r14,-0x8(%rbp)
    7043:	mov    %r15,-0x10(%rbp)
    7047:	mov    %rsi,%r14
    704a:	mov    %rax,%rsi
    704d:	mov    %rdi,%r15
    7050:	mov    %rcx,%rdi
    7053:	callq  54c0 <memcpy@plt>
    7058:	mov    %r14,%rsi
    705b:	mov    %r15,%rdi
    705e:	callq  6f80 <png_colorspace_sync_info>
    7063:	mov    -0x10(%rbp),%r15
    7067:	mov    -0x8(%rbp),%r14
    706b:	leaveq 
    706c:	retq   
    706d:	nopl   (%rax)

0000000000007070 <png_colorspace_set_chromaticities>:
    7070:	push   %rbp
    7071:	mov    %rsp,%rbp
    7074:	sub    $0x50,%rsp
    7078:	mov    %r12,-0x8(%rbp)
    707c:	mov    %r13,-0x10(%rbp)
    7080:	mov    %r14,-0x18(%rbp)
    7084:	mov    %r15,-0x20(%rbp)
    7088:	mov    %rdx,%r12
    708b:	mov    %rsi,%r13
    708e:	mov    %rcx,%r14
    7091:	mov    %rdi,%r15
    7094:	lea    -0x44(%rbp),%rdi
    7098:	mov    %r12,%rsi
    709b:	callq  9b30 <png_colorspace_check_xy>
    70a0:	test   %eax,%eax
    70a2:	je     70c6 <png_colorspace_set_chromaticities+0x56>
    70a4:	cmp    $0x1,%eax
    70a7:	je     70ed <png_colorspace_set_chromaticities+0x7d>
    70a9:	movzwl 0x4a(%r13),%eax
    70ae:	or     $0x8000,%ax
    70b2:	mov    %ax,0x4a(%r13)
    70b7:	mov    %r15,%rdi
    70ba:	lea    0x25cd7(%rip),%rsi        # 2cd98 <short_months.6+0x2c3>
    70c1:	callq  5470 <png_error@plt>
    70c6:	mov    %r12,%rdx
    70c9:	mov    %r13,%rsi
    70cc:	mov    %r15,%rdi
    70cf:	mov    %r14,%r8
    70d2:	lea    -0x44(%rbp),%rcx
    70d6:	callq  9c00 <png_colorspace_set_xy_and_XYZ>
    70db:	mov    -0x20(%rbp),%r15
    70df:	mov    -0x18(%rbp),%r14
    70e3:	mov    -0x10(%rbp),%r13
    70e7:	mov    -0x8(%rbp),%r12
    70eb:	leaveq 
    70ec:	retq   
    70ed:	movzwl 0x4a(%r13),%eax
    70f2:	or     $0x8000,%ax
    70f6:	mov    %ax,0x4a(%r13)
    70fb:	mov    %r15,%rdi
    70fe:	lea    0x25c7c(%rip),%rsi        # 2cd81 <short_months.6+0x2ac>
    7105:	callq  5590 <png_benign_error@plt>
    710a:	xor    %eax,%eax
    710c:	mov    -0x20(%rbp),%r15
    7110:	mov    -0x18(%rbp),%r14
    7114:	mov    -0x10(%rbp),%r13
    7118:	mov    -0x8(%rbp),%r12
    711c:	leaveq 
    711d:	retq   
    711e:	xchg   %ax,%ax

0000000000007120 <png_colorspace_set_endpoints>:
    7120:	push   %rbp
    7121:	mov    %rsp,%rbp
    7124:	sub    $0x60,%rsp
    7128:	mov    %r13,-0x8(%rbp)
    712c:	mov    %r14,-0x10(%rbp)
    7130:	mov    %r15,-0x18(%rbp)
    7134:	mov    (%rdx),%rax
    7137:	mov    %rax,-0x5c(%rbp)
    713b:	mov    0x8(%rdx),%rax
    713f:	mov    %rax,-0x54(%rbp)
    7143:	mov    0x10(%rdx),%rax
    7147:	mov    %rax,-0x4c(%rbp)
    714b:	mov    0x18(%rdx),%rax
    714f:	mov    %rax,-0x44(%rbp)
    7153:	mov    0x20(%rdx),%eax
    7156:	mov    %eax,-0x3c(%rbp)
    7159:	mov    %rsi,%r13
    715c:	mov    %rdi,%r14
    715f:	mov    %rcx,%r15
    7162:	lea    -0x38(%rbp),%rdi
    7166:	lea    -0x5c(%rbp),%rsi
    716a:	callq  9b80 <png_colorspace_check_XYZ>
    716f:	test   %eax,%eax
    7171:	je     7195 <png_colorspace_set_endpoints+0x75>
    7173:	cmp    $0x1,%eax
    7176:	je     71b9 <png_colorspace_set_endpoints+0x99>
    7178:	movzwl 0x4a(%r13),%eax
    717d:	or     $0x8000,%ax
    7181:	mov    %ax,0x4a(%r13)
    7186:	mov    %r14,%rdi
    7189:	lea    0x25c08(%rip),%rsi        # 2cd98 <short_months.6+0x2c3>
    7190:	callq  5470 <png_error@plt>
    7195:	mov    %r13,%rsi
    7198:	mov    %r14,%rdi
    719b:	mov    %r15,%r8
    719e:	lea    -0x5c(%rbp),%rcx
    71a2:	lea    -0x38(%rbp),%rdx
    71a6:	callq  9c00 <png_colorspace_set_xy_and_XYZ>
    71ab:	mov    -0x18(%rbp),%r15
    71af:	mov    -0x10(%rbp),%r14
    71b3:	mov    -0x8(%rbp),%r13
    71b7:	leaveq 
    71b8:	retq   
    71b9:	movzwl 0x4a(%r13),%eax
    71be:	or     $0x8000,%ax
    71c2:	mov    %ax,0x4a(%r13)
    71c7:	mov    %r14,%rdi
    71ca:	lea    0x25bee(%rip),%rsi        # 2cdbf <short_months.6+0x2ea>
    71d1:	callq  5590 <png_benign_error@plt>
    71d6:	xor    %eax,%eax
    71d8:	mov    -0x18(%rbp),%r15
    71dc:	mov    -0x10(%rbp),%r14
    71e0:	mov    -0x8(%rbp),%r13
    71e4:	leaveq 
    71e5:	retq   
    71e6:	nopw   %cs:0x0(%rax,%rax,1)

00000000000071f0 <png_colorspace_set_sRGB>:
    71f0:	push   %rbp
    71f1:	mov    %rsp,%rbp
    71f4:	sub    $0x20,%rsp
    71f8:	xor    %eax,%eax
    71fa:	movzwl 0x4a(%rsi),%ecx
    71fe:	mov    %rcx,%r8
    7201:	and    $0x8000,%r8d
    7208:	test   %r8d,%r8d
    720b:	jle    720f <png_colorspace_set_sRGB+0x1f>
    720d:	leaveq 
    720e:	retq   
    720f:	lea    0x25bbc(%rip),%r9        # 2cdd2 <short_months.6+0x2fd>
    7216:	test   %edx,%edx
    7218:	js     7316 <png_colorspace_set_sRGB+0x126>
    721e:	cmp    $0x3,%edx
    7221:	jg     7316 <png_colorspace_set_sRGB+0x126>
    7227:	and    $0x4,%ecx
    722a:	test   %ecx,%ecx
    722c:	jg     732a <png_colorspace_set_sRGB+0x13a>
    7232:	movzwl 0x4a(%rsi),%eax
    7236:	mov    %rax,%rcx
    7239:	and    $0x20,%ecx
    723c:	test   %ecx,%ecx
    723e:	jg     734a <png_colorspace_set_sRGB+0x15a>
    7244:	mov    $0x2,%ecx
    7249:	and    $0x2,%eax
    724c:	test   %eax,%eax
    724e:	jg     735a <png_colorspace_set_sRGB+0x16a>
    7254:	mov    $0xb18f,%eax
    7259:	mov    %rsi,%r8
    725c:	mov    %r14,-0x10(%rbp)
    7260:	mov    %r15,-0x18(%rbp)
    7264:	mov    %rsi,%r14
    7267:	mov    %r8,%rsi
    726a:	mov    %rdx,%r15
    726d:	mov    %rax,%rdx
    7270:	callq  9120 <png_colorspace_check_gamma>
    7275:	mov    %r15w,0x48(%r14)
    727a:	movl   $0xb18f,(%r14)
    7281:	movzwl 0x4a(%r14),%eax
    7286:	or     $0xe7,%ax
    728a:	mov    %ax,0x4a(%r14)
    728f:	movabs $0x80e80000fa00,%rax
    7299:	mov    %rax,0x4(%r14)
    729d:	movabs $0xea6000007530,%rax
    72a7:	mov    %rax,0xc(%r14)
    72ab:	movabs $0x177000003a98,%rax
    72b5:	mov    %rax,0x14(%r14)
    72b9:	movabs $0x808400007a26,%rax
    72c3:	mov    %rax,0x1c(%r14)
    72c7:	movabs $0x53100000a117,%rax
    72d1:	mov    %rax,0x24(%r14)
    72d5:	movabs $0x8bae0000078d,%rax
    72df:	mov    %rax,0x2c(%r14)
    72e3:	movabs $0x2e8f0001175d,%rax
    72ed:	mov    %rax,0x34(%r14)
    72f1:	movabs $0x1c3300004680,%rax
    72fb:	mov    %rax,0x3c(%r14)
    72ff:	movl   $0x1734d,0x44(%r14)
    7307:	mov    $0x1,%eax
    730c:	mov    -0x18(%rbp),%r15
    7310:	mov    -0x10(%rbp),%r14
    7314:	leaveq 
    7315:	retq   
    7316:	movslq %edx,%rcx
    7319:	mov    %r9,%rdx
    731c:	lea    0x25ab4(%rip),%r8        # 2cdd7 <short_months.6+0x302>
    7323:	callq  9f10 <png_icc_profile_error>
    7328:	leaveq 
    7329:	retq   
    732a:	movzwl 0x48(%rsi),%eax
    732e:	cmp    %eax,%edx
    7330:	je     7232 <png_colorspace_set_sRGB+0x42>
    7336:	movslq %edx,%rcx
    7339:	mov    %r9,%rdx
    733c:	lea    0x25ab2(%rip),%r8        # 2cdf5 <short_months.6+0x320>
    7343:	callq  9f10 <png_icc_profile_error>
    7348:	leaveq 
    7349:	retq   
    734a:	lea    0x25ac3(%rip),%rsi        # 2ce14 <short_months.6+0x33f>
    7351:	callq  5590 <png_benign_error@plt>
    7356:	xor    %eax,%eax
    7358:	leaveq 
    7359:	retq   
    735a:	lea    0x2562b(%rip),%r8        # 2c98c <sRGB_xy>
    7361:	lea    0x4(%rsi),%rax
    7365:	mov    $0x64,%ecx
    736a:	mov    %r13,-0x8(%rbp)
    736e:	mov    %r14,-0x10(%rbp)
    7372:	mov    %r15,-0x18(%rbp)
    7376:	mov    %rsi,%r13
    7379:	mov    %rax,%rsi
    737c:	mov    %rdx,%r14
    737f:	mov    %rcx,%rdx
    7382:	mov    %rdi,%r15
    7385:	mov    %r8,%rdi
    7388:	callq  9a20 <png_colorspace_endpoints_match>
    738d:	test   %eax,%eax
    738f:	je     73b0 <png_colorspace_set_sRGB+0x1c0>
    7391:	mov    %r14,%rdx
    7394:	mov    %r13,%rsi
    7397:	mov    %r15,%rdi
    739a:	mov    $0x2,%ecx
    739f:	mov    -0x18(%rbp),%r15
    73a3:	mov    -0x10(%rbp),%r14
    73a7:	mov    -0x8(%rbp),%r13
    73ab:	jmpq   7254 <png_colorspace_set_sRGB+0x64>
    73b0:	lea    0x25a80(%rip),%rsi        # 2ce37 <short_months.6+0x362>
    73b7:	mov    %r15,%rdi
    73ba:	mov    $0x2,%edx
    73bf:	callq  b140 <png_chunk_report>
    73c4:	mov    %r14,%rdx
    73c7:	mov    %r13,%rsi
    73ca:	mov    %r15,%rdi
    73cd:	mov    $0x2,%ecx
    73d2:	mov    -0x18(%rbp),%r15
    73d6:	mov    -0x10(%rbp),%r14
    73da:	mov    -0x8(%rbp),%r13
    73de:	jmpq   7254 <png_colorspace_set_sRGB+0x64>
    73e3:	data16 nopw %cs:0x0(%rax,%rax,1)
    73ee:	xchg   %ax,%ax

00000000000073f0 <png_colorspace_set_ICC>:
    73f0:	push   %rbp
    73f1:	mov    %rsp,%rbp
    73f4:	sub    $0x30,%rsp
    73f8:	xor    %eax,%eax
    73fa:	movzwl 0x4a(%rsi),%r10d
    73ff:	and    $0x8000,%r10d
    7406:	test   %r10d,%r10d
    7409:	jle    740d <png_colorspace_set_ICC+0x1d>
    740b:	leaveq 
    740c:	retq   
    740d:	mov    %rdi,%r10
    7410:	mov    %rsi,%r11
    7413:	mov    %rdx,%rax
    7416:	mov    %r9,-0x30(%rbp)
    741a:	mov    %rcx,%r9
    741d:	mov    %rdi,-0x8(%rbp)
    7421:	mov    %rsi,-0x10(%rbp)
    7425:	mov    %rdx,-0x18(%rbp)
    7429:	mov    %rcx,-0x20(%rbp)
    742d:	mov    %r8,-0x28(%rbp)
    7431:	mov    %r9,%rcx
    7434:	mov    %rax,%rdx
    7437:	mov    %r11,%rsi
    743a:	mov    %r10,%rdi
    743d:	callq  a070 <icc_check_length>
    7442:	test   %eax,%eax
    7444:	jne    744a <png_colorspace_set_ICC+0x5a>
    7446:	xor    %eax,%eax
    7448:	leaveq 
    7449:	retq   
    744a:	mov    -0x8(%rbp),%rdi
    744e:	mov    -0x10(%rbp),%rsi
    7452:	mov    -0x18(%rbp),%rdx
    7456:	mov    -0x20(%rbp),%rcx
    745a:	mov    -0x28(%rbp),%r8
    745e:	mov    -0x30(%rbp),%r9
    7462:	callq  7530 <png_icc_check_header>
    7467:	test   %eax,%eax
    7469:	jne    746f <png_colorspace_set_ICC+0x7f>
    746b:	xor    %eax,%eax
    746d:	leaveq 
    746e:	retq   
    746f:	mov    -0x8(%rbp),%rdi
    7473:	mov    -0x10(%rbp),%rsi
    7477:	mov    -0x28(%rbp),%r8
    747b:	mov    -0x20(%rbp),%rcx
    747f:	mov    -0x18(%rbp),%rdx
    7483:	callq  79d0 <png_icc_check_tag_table>
    7488:	test   %eax,%eax
    748a:	jne    7490 <png_colorspace_set_ICC+0xa0>
    748c:	xor    %eax,%eax
    748e:	leaveq 
    748f:	retq   
    7490:	mov    -0x28(%rbp),%rdx
    7494:	mov    -0x10(%rbp),%rsi
    7498:	mov    -0x8(%rbp),%rdi
    749c:	xor    %ecx,%ecx
    749e:	callq  7b40 <png_icc_set_sRGB>
    74a3:	mov    $0x1,%eax
    74a8:	leaveq 
    74a9:	retq   
    74aa:	nopw   0x0(%rax,%rax,1)

00000000000074b0 <png_icc_check_length>:
    74b0:	push   %rbp
    74b1:	mov    %rsp,%rbp
    74b4:	sub    $0x20,%rsp
    74b8:	mov    %r15,-0x18(%rbp)
    74bc:	mov    %rcx,-0x20(%rbp)
    74c0:	mov    %rsi,-0x8(%rbp)
    74c4:	mov    %rdx,-0x10(%rbp)
    74c8:	mov    %rdi,%r15
    74cb:	callq  a070 <icc_check_length>
    74d0:	test   %eax,%eax
    74d2:	jne    74dc <png_icc_check_length+0x2c>
    74d4:	xor    %eax,%eax
    74d6:	mov    -0x18(%rbp),%r15
    74da:	leaveq 
    74db:	retq   
    74dc:	mov    $0x1,%eax
    74e1:	mov    0x428(%r15),%rdx
    74e8:	test   %rdx,%rdx
    74eb:	jne    74f3 <png_icc_check_length+0x43>
    74ed:	mov    -0x18(%rbp),%r15
    74f1:	leaveq 
    74f2:	retq   
    74f3:	mov    -0x20(%rbp),%rcx
    74f7:	mov    %ecx,%ecx
    74f9:	cmp    %rcx,%rdx
    74fc:	jb     7504 <png_icc_check_length+0x54>
    74fe:	mov    -0x18(%rbp),%r15
    7502:	leaveq 
    7503:	retq   
    7504:	mov    %r15,%rdi
    7507:	lea    0x25948(%rip),%r8        # 2ce56 <short_months.6+0x381>
    750e:	mov    -0x10(%rbp),%rdx
    7512:	mov    -0x8(%rbp),%rsi
    7516:	callq  9f10 <png_icc_profile_error>
    751b:	mov    -0x18(%rbp),%r15
    751f:	leaveq 
    7520:	retq   
    7521:	data16 nopw %cs:0x0(%rax,%rax,1)
    752c:	nopl   0x0(%rax)

0000000000007530 <png_icc_check_header>:
    7530:	push   %rbp
    7531:	mov    %rsp,%rbp
    7534:	sub    $0x30,%rsp
    7538:	movzbl (%r8),%eax
    753c:	shl    $0x18,%eax
    753f:	movzbl 0x1(%r8),%r10d
    7544:	shl    $0x10,%r10d
    7548:	add    %eax,%r10d
    754b:	movzbl 0x2(%r8),%eax
    7550:	shl    $0x8,%eax
    7553:	add    %r10d,%eax
    7556:	movzbl 0x3(%r8),%r10d
    755b:	add    %r10d,%eax
    755e:	cmp    %ecx,%eax
    7560:	jne    7746 <png_icc_check_header+0x216>
    7566:	movzbl 0x8(%r8),%eax
    756b:	cmp    $0x3,%al
    756d:	ja     7756 <png_icc_check_header+0x226>
    7573:	movzbl 0x80(%r8),%eax
    757b:	shl    $0x18,%eax
    757e:	movzbl 0x81(%r8),%r10d
    7586:	shl    $0x10,%r10d
    758a:	add    %eax,%r10d
    758d:	movzbl 0x82(%r8),%eax
    7595:	shl    $0x8,%eax
    7598:	add    %r10d,%eax
    759b:	movzbl 0x83(%r8),%r10d
    75a3:	add    %eax,%r10d
    75a6:	cmp    $0x1555554a,%r10d
    75ad:	ja     7774 <png_icc_check_header+0x244>
    75b3:	lea    (%r10,%r10,2),%eax
    75b7:	lea    0x84(,%rax,4),%eax
    75be:	cmp    %eax,%ecx
    75c0:	jb     7774 <png_icc_check_header+0x244>
    75c6:	movzbl 0x40(%r8),%eax
    75cb:	shl    $0x18,%eax
    75ce:	movzbl 0x41(%r8),%ecx
    75d3:	shl    $0x10,%ecx
    75d6:	add    %eax,%ecx
    75d8:	movzbl 0x42(%r8),%eax
    75dd:	shl    $0x8,%eax
    75e0:	add    %ecx,%eax
    75e2:	movzbl 0x43(%r8),%ecx
    75e7:	add    %eax,%ecx
    75e9:	cmp    $0xfffe,%ecx
    75ef:	ja     7785 <png_icc_check_header+0x255>
    75f5:	xor    %eax,%eax
    75f7:	cmp    $0x3,%ecx
    75fa:	jbe    7659 <png_icc_check_header+0x129>
    75fc:	mov    %ecx,%ecx
    75fe:	mov    %rdi,%r10
    7601:	mov    %rdx,%r11
    7604:	mov    %r9,-0x28(%rbp)
    7608:	mov    %r12,-0x8(%rbp)
    760c:	mov    %r13,-0x10(%rbp)
    7610:	mov    %r14,-0x18(%rbp)
    7614:	mov    %r15,-0x20(%rbp)
    7618:	mov    %r8,%r12
    761b:	mov    %rdi,%r13
    761e:	mov    %r10,%rdi
    7621:	mov    %rdx,%r14
    7624:	mov    %r11,%rdx
    7627:	mov    %rsi,%r15
    762a:	mov    %rax,%rsi
    762d:	lea    0x25897(%rip),%r8        # 2cecb <short_months.6+0x3f6>
    7634:	callq  9f10 <png_icc_profile_error>
    7639:	mov    %r14,%rdx
    763c:	mov    %r15,%rsi
    763f:	mov    %r13,%rdi
    7642:	mov    %r12,%r8
    7645:	mov    -0x20(%rbp),%r15
    7649:	mov    -0x18(%rbp),%r14
    764d:	mov    -0x10(%rbp),%r13
    7651:	mov    -0x8(%rbp),%r12
    7655:	mov    -0x28(%rbp),%r9
    7659:	movzbl 0x24(%r8),%eax
    765e:	shl    $0x18,%eax
    7661:	movzbl 0x25(%r8),%ecx
    7666:	shl    $0x10,%ecx
    7669:	add    %eax,%ecx
    766b:	movzbl 0x26(%r8),%eax
    7670:	shl    $0x8,%eax
    7673:	add    %ecx,%eax
    7675:	movzbl 0x27(%r8),%ecx
    767a:	add    %ecx,%eax
    767c:	cmp    $0x61637370,%eax
    7681:	jne    7795 <png_icc_check_header+0x265>
    7687:	lea    0x44(%r8),%rax
    768b:	lea    0x2531a(%rip),%rcx        # 2c9ac <D50_nCIEXYZ>
    7692:	mov    $0xc,%r10d
    7698:	mov    %r12,-0x10(%rbp)
    769c:	mov    %r13,-0x18(%rbp)
    76a0:	mov    %r14,-0x20(%rbp)
    76a4:	mov    %r15,-0x28(%rbp)
    76a8:	mov    %rbx,-0x8(%rbp)
    76ac:	mov    %r8,%rbx
    76af:	mov    %r9,%r12
    76b2:	mov    %rsi,%r13
    76b5:	mov    %rcx,%rsi
    76b8:	mov    %rdx,%r14
    76bb:	mov    %r10,%rdx
    76be:	mov    %rdi,%r15
    76c1:	mov    %rax,%rdi
    76c4:	callq  53d0 <memcmp@plt>
    76c9:	test   %eax,%eax
    76cb:	je     76e4 <png_icc_check_header+0x1b4>
    76cd:	lea    0x25826(%rip),%r8        # 2cefa <short_months.6+0x425>
    76d4:	xor    %esi,%esi
    76d6:	mov    %rsi,%rcx
    76d9:	mov    %r15,%rdi
    76dc:	mov    %r14,%rdx
    76df:	callq  9f10 <png_icc_profile_error>
    76e4:	movzbl 0x10(%rbx),%ecx
    76e8:	shl    $0x18,%ecx
    76eb:	movzbl 0x11(%rbx),%eax
    76ef:	shl    $0x10,%eax
    76f2:	add    %eax,%ecx
    76f4:	movzbl 0x12(%rbx),%eax
    76f8:	shl    $0x8,%eax
    76fb:	add    %eax,%ecx
    76fd:	movzbl 0x13(%rbx),%eax
    7701:	add    %ecx,%eax
    7703:	cmp    $0x47524159,%eax
    7708:	je     77a5 <png_icc_check_header+0x275>
    770e:	cmp    $0x52474220,%eax
    7713:	je     7802 <png_icc_check_header+0x2d2>
    7719:	mov    %eax,%ecx
    771b:	mov    %r14,%rdx
    771e:	mov    %r13,%rsi
    7721:	mov    %r15,%rdi
    7724:	lea    0x25842(%rip),%r8        # 2cf6d <short_months.6+0x498>
    772b:	callq  9f10 <png_icc_profile_error>
    7730:	mov    -0x8(%rbp),%rbx
    7734:	mov    -0x28(%rbp),%r15
    7738:	mov    -0x20(%rbp),%r14
    773c:	mov    -0x18(%rbp),%r13
    7740:	mov    -0x10(%rbp),%r12
    7744:	leaveq 
    7745:	retq   
    7746:	mov    %eax,%ecx
    7748:	lea    0x25722(%rip),%r8        # 2ce71 <short_months.6+0x39c>
    774f:	callq  9f10 <png_icc_profile_error>
    7754:	leaveq 
    7755:	retq   
    7756:	mov    %rcx,%rax
    7759:	and    $0x3,%eax
    775c:	test   %eax,%eax
    775e:	je     7573 <png_icc_check_header+0x43>
    7764:	mov    %ecx,%ecx
    7766:	lea    0x25722(%rip),%r8        # 2ce8f <short_months.6+0x3ba>
    776d:	callq  9f10 <png_icc_profile_error>
    7772:	leaveq 
    7773:	retq   
    7774:	mov    %r10d,%ecx
    7777:	lea    0x25720(%rip),%r8        # 2ce9e <short_months.6+0x3c9>
    777e:	callq  9f10 <png_icc_profile_error>
    7783:	leaveq 
    7784:	retq   
    7785:	mov    %ecx,%ecx
    7787:	lea    0x25724(%rip),%r8        # 2ceb2 <short_months.6+0x3dd>
    778e:	callq  9f10 <png_icc_profile_error>
    7793:	leaveq 
    7794:	retq   
    7795:	mov    %eax,%ecx
    7797:	lea    0x2574a(%rip),%r8        # 2cee8 <short_months.6+0x413>
    779e:	callq  9f10 <png_icc_profile_error>
    77a3:	leaveq 
    77a4:	retq   
    77a5:	and    $0x2,%r12d
    77a9:	test   %r12d,%r12d
    77ac:	jg     783b <png_icc_check_header+0x30b>
    77b2:	movzbl 0xc(%rbx),%eax
    77b6:	shl    $0x18,%eax
    77b9:	movzbl 0xd(%rbx),%ecx
    77bd:	shl    $0x10,%ecx
    77c0:	add    %eax,%ecx
    77c2:	movzbl 0xe(%rbx),%eax
    77c6:	shl    $0x8,%eax
    77c9:	add    %ecx,%eax
    77cb:	movzbl 0xf(%rbx),%ecx
    77cf:	add    %ecx,%eax
    77d1:	cmp    $0x6e6d636b,%eax
    77d6:	jbe    786b <png_icc_check_header+0x33b>
    77dc:	cmp    $0x73636e71,%eax
    77e1:	jbe    7886 <png_icc_check_header+0x356>
    77e7:	cmp    $0x73636e72,%eax
    77ec:	je     78bb <png_icc_check_header+0x38b>
    77f2:	cmp    $0x73706163,%eax
    77f7:	je     78bb <png_icc_check_header+0x38b>
    77fd:	jmpq   78a5 <png_icc_check_header+0x375>
    7802:	and    $0x2,%r12d
    7806:	test   %r12d,%r12d
    7809:	jne    77b2 <png_icc_check_header+0x282>
    780b:	mov    %r14,%rdx
    780e:	mov    %r13,%rsi
    7811:	mov    %r15,%rdi
    7814:	mov    $0x52474220,%ecx
    7819:	lea    0x256f4(%rip),%r8        # 2cf14 <short_months.6+0x43f>
    7820:	callq  9f10 <png_icc_profile_error>
    7825:	mov    -0x8(%rbp),%rbx
    7829:	mov    -0x28(%rbp),%r15
    782d:	mov    -0x20(%rbp),%r14
    7831:	mov    -0x18(%rbp),%r13
    7835:	mov    -0x10(%rbp),%r12
    7839:	leaveq 
    783a:	retq   
    783b:	mov    %r14,%rdx
    783e:	mov    %r13,%rsi
    7841:	mov    %r15,%rdi
    7844:	mov    $0x47524159,%ecx
    7849:	lea    0x256f3(%rip),%r8        # 2cf43 <short_months.6+0x46e>
    7850:	callq  9f10 <png_icc_profile_error>
    7855:	mov    -0x8(%rbp),%rbx
    7859:	mov    -0x28(%rbp),%r15
    785d:	mov    -0x20(%rbp),%r14
    7861:	mov    -0x18(%rbp),%r13
    7865:	mov    -0x10(%rbp),%r12
    7869:	leaveq 
    786a:	retq   
    786b:	cmp    $0x6c696e6a,%eax
    7870:	jbe    789a <png_icc_check_header+0x36a>
    7872:	cmp    $0x6c696e6b,%eax
    7877:	je     7901 <png_icc_check_header+0x3d1>
    787d:	cmp    $0x6d6e7472,%eax
    7882:	je     78bb <png_icc_check_header+0x38b>
    7884:	jmp    78a5 <png_icc_check_header+0x375>
    7886:	cmp    $0x6e6d636c,%eax
    788b:	je     7931 <png_icc_check_header+0x401>
    7891:	cmp    $0x70727472,%eax
    7896:	je     78bb <png_icc_check_header+0x38b>
    7898:	jmp    78a5 <png_icc_check_header+0x375>
    789a:	cmp    $0x61627374,%eax
    789f:	je     794f <png_icc_check_header+0x41f>
    78a5:	mov    %eax,%ecx
    78a7:	lea    0x25755(%rip),%r8        # 2d003 <short_months.6+0x52e>
    78ae:	mov    %r15,%rdi
    78b1:	mov    %r14,%rdx
    78b4:	xor    %esi,%esi
    78b6:	callq  9f10 <png_icc_profile_error>
    78bb:	mov    $0x1,%eax
    78c0:	movzbl 0x14(%rbx),%edx
    78c4:	shl    $0x18,%edx
    78c7:	movzbl 0x15(%rbx),%ecx
    78cb:	shl    $0x10,%ecx
    78ce:	add    %ecx,%edx
    78d0:	movzbl 0x16(%rbx),%ecx
    78d4:	shl    $0x8,%ecx
    78d7:	add    %edx,%ecx
    78d9:	movzbl 0x17(%rbx),%edx
    78dd:	add    %edx,%ecx
    78df:	cmp    $0x4c616220,%ecx
    78e5:	jne    797f <png_icc_check_header+0x44f>
    78eb:	mov    -0x8(%rbp),%rbx
    78ef:	mov    -0x28(%rbp),%r15
    78f3:	mov    -0x20(%rbp),%r14
    78f7:	mov    -0x18(%rbp),%r13
    78fb:	mov    -0x10(%rbp),%r12
    78ff:	leaveq 
    7900:	retq   
    7901:	mov    %r14,%rdx
    7904:	mov    %r13,%rsi
    7907:	mov    %r15,%rdi
    790a:	mov    $0x6c696e6b,%ecx
    790f:	lea    0x2569d(%rip),%r8        # 2cfb3 <short_months.6+0x4de>
    7916:	callq  9f10 <png_icc_profile_error>
    791b:	mov    -0x8(%rbp),%rbx
    791f:	mov    -0x28(%rbp),%r15
    7923:	mov    -0x20(%rbp),%r14
    7927:	mov    -0x18(%rbp),%r13
    792b:	mov    -0x10(%rbp),%r12
    792f:	leaveq 
    7930:	retq   
    7931:	mov    $0x6e6d636c,%ecx
    7936:	lea    0x2569e(%rip),%r8        # 2cfdb <short_months.6+0x506>
    793d:	mov    %r15,%rdi
    7940:	mov    %r14,%rdx
    7943:	xor    %esi,%esi
    7945:	callq  9f10 <png_icc_profile_error>
    794a:	jmpq   78bb <png_icc_check_header+0x38b>
    794f:	mov    %r14,%rdx
    7952:	mov    %r13,%rsi
    7955:	mov    %r15,%rdi
    7958:	mov    $0x61627374,%ecx
    795d:	lea    0x25629(%rip),%r8        # 2cf8d <short_months.6+0x4b8>
    7964:	callq  9f10 <png_icc_profile_error>
    7969:	mov    -0x8(%rbp),%rbx
    796d:	mov    -0x28(%rbp),%r15
    7971:	mov    -0x20(%rbp),%r14
    7975:	mov    -0x18(%rbp),%r13
    7979:	mov    -0x10(%rbp),%r12
    797d:	leaveq 
    797e:	retq   
    797f:	cmp    $0x58595a20,%ecx
    7985:	jne    799d <png_icc_check_header+0x46d>
    7987:	mov    -0x8(%rbp),%rbx
    798b:	mov    -0x28(%rbp),%r15
    798f:	mov    -0x20(%rbp),%r14
    7993:	mov    -0x18(%rbp),%r13
    7997:	mov    -0x10(%rbp),%r12
    799b:	leaveq 
    799c:	retq   
    799d:	mov    %ecx,%ecx
    799f:	mov    %r14,%rdx
    79a2:	mov    %r13,%rsi
    79a5:	mov    %r15,%rdi
    79a8:	lea    0x25673(%rip),%r8        # 2d022 <short_months.6+0x54d>
    79af:	callq  9f10 <png_icc_profile_error>
    79b4:	mov    -0x8(%rbp),%rbx
    79b8:	mov    -0x28(%rbp),%r15
    79bc:	mov    -0x20(%rbp),%r14
    79c0:	mov    -0x18(%rbp),%r13
    79c4:	mov    -0x10(%rbp),%r12
    79c8:	leaveq 
    79c9:	retq   
    79ca:	nopw   0x0(%rax,%rax,1)

00000000000079d0 <png_icc_check_tag_table>:
    79d0:	push   %rbp
    79d1:	mov    %rsp,%rbp
    79d4:	sub    $0x40,%rsp
    79d8:	mov    %rdx,-0x38(%rbp)
    79dc:	mov    %rsi,-0x8(%rbp)
    79e0:	mov    %rbx,-0x10(%rbp)
    79e4:	mov    %r12,-0x18(%rbp)
    79e8:	mov    %r13,-0x20(%rbp)
    79ec:	mov    %r14,-0x28(%rbp)
    79f0:	mov    %r15,-0x30(%rbp)
    79f4:	movzbl 0x80(%r8),%esi
    79fc:	shl    $0x18,%esi
    79ff:	movzbl 0x81(%r8),%eax
    7a07:	shl    $0x10,%eax
    7a0a:	add    %eax,%esi
    7a0c:	movzbl 0x82(%r8),%eax
    7a14:	shl    $0x8,%eax
    7a17:	add    %esi,%eax
    7a19:	movzbl 0x83(%r8),%esi
    7a21:	lea    (%rsi,%rax,1),%r13d
    7a25:	lea    0x84(%r8),%r12
    7a2c:	mov    %rdi,%rbx
    7a2f:	mov    %rcx,%r14
    7a32:	xor    %esi,%esi
    7a34:	mov    %rsi,%r15
    7a37:	jmpq   7aec <png_icc_check_tag_table+0x11c>
    7a3c:	movzbl 0x8(%r12),%edi
    7a42:	movzbl 0x9(%r12),%r8d
    7a48:	movzbl 0xa(%r12),%r9d
    7a4e:	movzbl 0xb(%r12),%r11d
    7a54:	movzbl (%r12),%eax
    7a59:	shl    $0x18,%eax
    7a5c:	movzbl 0x1(%r12),%ecx
    7a62:	shl    $0x10,%ecx
    7a65:	add    %eax,%ecx
    7a67:	movzbl 0x2(%r12),%eax
    7a6d:	shl    $0x8,%eax
    7a70:	add    %ecx,%eax
    7a72:	movzbl 0x3(%r12),%ecx
    7a78:	lea    (%rcx,%rax,1),%r10d
    7a7c:	movzbl 0x4(%r12),%eax
    7a82:	shl    $0x18,%eax
    7a85:	movzbl 0x5(%r12),%ecx
    7a8b:	shl    $0x10,%ecx
    7a8e:	add    %eax,%ecx
    7a90:	movzbl 0x6(%r12),%eax
    7a96:	shl    $0x8,%eax
    7a99:	add    %eax,%ecx
    7a9b:	movzbl 0x7(%r12),%eax
    7aa1:	add    %ecx,%eax
    7aa3:	cmp    %r14d,%eax
    7aa6:	ja     7b10 <png_icc_check_tag_table+0x140>
    7aa8:	mov    %r14,%rcx
    7aab:	sub    %eax,%ecx
    7aad:	shl    $0x18,%edi
    7ab0:	shl    $0x10,%r8d
    7ab4:	add    %r8d,%edi
    7ab7:	shl    $0x8,%r9d
    7abb:	add    %r9d,%edi
    7abe:	add    %r11d,%edi
    7ac1:	cmp    %edi,%ecx
    7ac3:	jb     7b10 <png_icc_check_tag_table+0x140>
    7ac5:	and    $0x3,%eax
    7ac8:	test   %eax,%eax
    7aca:	je     7ae4 <png_icc_check_tag_table+0x114>
    7acc:	mov    %r10d,%ecx
    7acf:	mov    %rbx,%rdi
    7ad2:	lea    0x25585(%rip),%r8        # 2d05e <short_months.6+0x589>
    7ad9:	callq  9f10 <png_icc_profile_error>
    7ade:	xor    %esi,%esi
    7ae0:	mov    -0x38(%rbp),%rdx
    7ae4:	add    $0xc,%r12
    7ae8:	add    $0x1,%r15d
    7aec:	cmp    %r13d,%r15d
    7aef:	jb     7a3c <png_icc_check_tag_table+0x6c>
    7af5:	mov    $0x1,%eax
    7afa:	mov    -0x30(%rbp),%r15
    7afe:	mov    -0x28(%rbp),%r14
    7b02:	mov    -0x20(%rbp),%r13
    7b06:	mov    -0x18(%rbp),%r12
    7b0a:	mov    -0x10(%rbp),%rbx
    7b0e:	leaveq 
    7b0f:	retq   
    7b10:	mov    %r10d,%ecx
    7b13:	mov    %rbx,%rdi
    7b16:	lea    0x25521(%rip),%r8        # 2d03e <short_months.6+0x569>
    7b1d:	mov    -0x8(%rbp),%rsi
    7b21:	callq  9f10 <png_icc_profile_error>
    7b26:	mov    -0x30(%rbp),%r15
    7b2a:	mov    -0x28(%rbp),%r14
    7b2e:	mov    -0x20(%rbp),%r13
    7b32:	mov    -0x18(%rbp),%r12
    7b36:	mov    -0x10(%rbp),%rbx
    7b3a:	leaveq 
    7b3b:	retq   
    7b3c:	nopl   0x0(%rax)

0000000000007b40 <png_icc_set_sRGB>:
    7b40:	push   %rbp
    7b41:	mov    %rsp,%rbp
    7b44:	sub    $0x20,%rsp
    7b48:	mov    %rdx,-0x18(%rbp)
    7b4c:	mov    %rdi,-0x8(%rbp)
    7b50:	mov    %rsi,-0x10(%rbp)
    7b54:	mov    %rdx,%rsi
    7b57:	mov    %rcx,%rdx
    7b5a:	callq  a0a0 <png_compare_ICC_profile_with_sRGB>
    7b5f:	test   %eax,%eax
    7b61:	jne    7b65 <png_icc_set_sRGB+0x25>
    7b63:	leaveq 
    7b64:	retq   
    7b65:	mov    -0x18(%rbp),%rdx
    7b69:	movzbl 0x40(%rdx),%eax
    7b6d:	shl    $0x18,%eax
    7b70:	movzbl 0x41(%rdx),%ecx
    7b74:	shl    $0x10,%ecx
    7b77:	add    %eax,%ecx
    7b79:	movzbl 0x42(%rdx),%eax
    7b7d:	shl    $0x8,%eax
    7b80:	add    %ecx,%eax
    7b82:	movzbl 0x43(%rdx),%ecx
    7b86:	lea    (%rcx,%rax,1),%edx
    7b89:	mov    -0x10(%rbp),%rsi
    7b8d:	mov    -0x8(%rbp),%rdi
    7b91:	callq  71f0 <png_colorspace_set_sRGB>
    7b96:	leaveq 
    7b97:	retq   
    7b98:	nopl   0x0(%rax,%rax,1)

0000000000007ba0 <png_colorspace_set_rgb_coefficients>:
    7ba0:	push   %rbp
    7ba1:	mov    %rsp,%rbp
    7ba4:	sub    $0x30,%rsp
    7ba8:	movzbl 0x3d1(%rdi),%eax
    7baf:	test   %al,%al
    7bb1:	je     7bb5 <png_colorspace_set_rgb_coefficients+0x15>
    7bb3:	leaveq 
    7bb4:	retq   
    7bb5:	movzwl 0x4e2(%rdi),%eax
    7bbc:	and    $0x2,%eax
    7bbf:	test   %eax,%eax
    7bc1:	jg     7bc5 <png_colorspace_set_rgb_coefficients+0x25>
    7bc3:	leaveq 
    7bc4:	retq   
    7bc5:	movslq 0x4c0(%rdi),%rsi
    7bcc:	mov    %esi,-0x24(%rbp)
    7bcf:	movslq 0x4cc(%rdi),%rax
    7bd6:	mov    %eax,-0x20(%rbp)
    7bd9:	movslq 0x4d8(%rdi),%rcx
    7be0:	mov    %ecx,-0x1c(%rbp)
    7be3:	add    %esi,%eax
    7be5:	add    %ecx,%eax
    7be7:	test   %eax,%eax
    7be9:	jg     7bf7 <png_colorspace_set_rgb_coefficients+0x57>
    7beb:	lea    0x254c0(%rip),%rsi        # 2d0b2 <short_months.6+0x5dd>
    7bf2:	callq  5470 <png_error@plt>
    7bf7:	test   %esi,%esi
    7bf9:	js     7beb <png_colorspace_set_rgb_coefficients+0x4b>
    7bfb:	lea    -0x24(%rbp),%r9
    7bff:	mov    $0x8000,%r8d
    7c05:	mov    %r8,%rdx
    7c08:	mov    %rax,%rcx
    7c0b:	mov    %r13,-0x8(%rbp)
    7c0f:	mov    %r14,-0x10(%rbp)
    7c13:	mov    %r15,-0x18(%rbp)
    7c17:	mov    %rax,%r13
    7c1a:	mov    %r8,%r14
    7c1d:	mov    %rdi,%r15
    7c20:	mov    %r9,%rdi
    7c23:	callq  8980 <png_muldiv>
    7c28:	test   %eax,%eax
    7c2a:	jne    7c31 <png_colorspace_set_rgb_coefficients+0x91>
    7c2c:	mov    %r15,%rdi
    7c2f:	jmp    7beb <png_colorspace_set_rgb_coefficients+0x4b>
    7c31:	movslq -0x24(%rbp),%rax
    7c35:	test   %eax,%eax
    7c37:	jns    7c3e <png_colorspace_set_rgb_coefficients+0x9e>
    7c39:	mov    %r15,%rdi
    7c3c:	jmp    7beb <png_colorspace_set_rgb_coefficients+0x4b>
    7c3e:	cmp    $0x8000,%eax
    7c43:	jle    7c4a <png_colorspace_set_rgb_coefficients+0xaa>
    7c45:	mov    %r15,%rdi
    7c48:	jmp    7beb <png_colorspace_set_rgb_coefficients+0x4b>
    7c4a:	movslq -0x20(%rbp),%rsi
    7c4e:	test   %esi,%esi
    7c50:	jns    7c57 <png_colorspace_set_rgb_coefficients+0xb7>
    7c52:	mov    %r15,%rdi
    7c55:	jmp    7beb <png_colorspace_set_rgb_coefficients+0x4b>
    7c57:	lea    -0x20(%rbp),%rdi
    7c5b:	mov    %r14,%rdx
    7c5e:	mov    %r13,%rcx
    7c61:	callq  8980 <png_muldiv>
    7c66:	test   %eax,%eax
    7c68:	jne    7c72 <png_colorspace_set_rgb_coefficients+0xd2>
    7c6a:	mov    %r15,%rdi
    7c6d:	jmpq   7beb <png_colorspace_set_rgb_coefficients+0x4b>
    7c72:	movslq -0x20(%rbp),%rax
    7c76:	test   %eax,%eax
    7c78:	jns    7c82 <png_colorspace_set_rgb_coefficients+0xe2>
    7c7a:	mov    %r15,%rdi
    7c7d:	jmpq   7beb <png_colorspace_set_rgb_coefficients+0x4b>
    7c82:	cmp    $0x8000,%eax
    7c87:	jle    7c91 <png_colorspace_set_rgb_coefficients+0xf1>
    7c89:	mov    %r15,%rdi
    7c8c:	jmpq   7beb <png_colorspace_set_rgb_coefficients+0x4b>
    7c91:	movslq -0x1c(%rbp),%rsi
    7c95:	test   %esi,%esi
    7c97:	jns    7ca1 <png_colorspace_set_rgb_coefficients+0x101>
    7c99:	mov    %r15,%rdi
    7c9c:	jmpq   7beb <png_colorspace_set_rgb_coefficients+0x4b>
    7ca1:	mov    %r13,%rcx
    7ca4:	mov    %r14,%rdx
    7ca7:	lea    -0x1c(%rbp),%rdi
    7cab:	callq  8980 <png_muldiv>
    7cb0:	test   %eax,%eax
    7cb2:	jne    7cbc <png_colorspace_set_rgb_coefficients+0x11c>
    7cb4:	mov    %r15,%rdi
    7cb7:	jmpq   7beb <png_colorspace_set_rgb_coefficients+0x4b>
    7cbc:	movslq -0x1c(%rbp),%rdx
    7cc0:	test   %edx,%edx
    7cc2:	jns    7ccc <png_colorspace_set_rgb_coefficients+0x12c>
    7cc4:	mov    %r15,%rdi
    7cc7:	jmpq   7beb <png_colorspace_set_rgb_coefficients+0x4b>
    7ccc:	cmp    $0x8000,%edx
    7cd2:	jle    7cdc <png_colorspace_set_rgb_coefficients+0x13c>
    7cd4:	mov    %r15,%rdi
    7cd7:	jmpq   7beb <png_colorspace_set_rgb_coefficients+0x4b>
    7cdc:	movslq -0x20(%rbp),%rsi
    7ce0:	movslq -0x24(%rbp),%rcx
    7ce4:	lea    (%rsi,%rcx,1),%eax
    7ce7:	add    %edx,%eax
    7ce9:	cmp    $0x8001,%eax
    7cee:	jle    7cf8 <png_colorspace_set_rgb_coefficients+0x158>
    7cf0:	mov    %r15,%rdi
    7cf3:	jmpq   7beb <png_colorspace_set_rgb_coefficients+0x4b>
    7cf8:	cmp    $0x8000,%eax
    7cfd:	jle    7d3d <png_colorspace_set_rgb_coefficients+0x19d>
    7cff:	mov    $0xffffffffffffffff,%rax
    7d06:	test   %eax,%eax
    7d08:	jne    7d48 <png_colorspace_set_rgb_coefficients+0x1a8>
    7d0a:	movslq -0x24(%rbp),%rdx
    7d0e:	movslq -0x20(%rbp),%rcx
    7d12:	lea    (%rcx,%rdx,1),%eax
    7d15:	add    -0x1c(%rbp),%eax
    7d18:	cmp    $0x8000,%eax
    7d1d:	jne    7d60 <png_colorspace_set_rgb_coefficients+0x1c0>
    7d1f:	mov    %dx,0x3d2(%r15)
    7d27:	mov    %cx,0x3d4(%r15)
    7d2f:	mov    -0x18(%rbp),%r15
    7d33:	mov    -0x10(%rbp),%r14
    7d37:	mov    -0x8(%rbp),%r13
    7d3b:	leaveq 
    7d3c:	retq   
    7d3d:	cmp    $0x7fff,%eax
    7d42:	jle    7d6f <png_colorspace_set_rgb_coefficients+0x1cf>
    7d44:	xor    %eax,%eax
    7d46:	jmp    7d06 <png_colorspace_set_rgb_coefficients+0x166>
    7d48:	cmp    %ecx,%esi
    7d4a:	jge    7d76 <png_colorspace_set_rgb_coefficients+0x1d6>
    7d4c:	movslq -0x24(%rbp),%rdx
    7d50:	movslq -0x20(%rbp),%rcx
    7d54:	cmp    %edx,%ecx
    7d56:	jle    7d81 <png_colorspace_set_rgb_coefficients+0x1e1>
    7d58:	add    -0x1c(%rbp),%eax
    7d5b:	mov    %eax,-0x1c(%rbp)
    7d5e:	jmp    7d0a <png_colorspace_set_rgb_coefficients+0x16a>
    7d60:	mov    %r15,%rdi
    7d63:	lea    0x2531e(%rip),%rsi        # 2d088 <short_months.6+0x5b3>
    7d6a:	callq  5470 <png_error@plt>
    7d6f:	mov    $0x1,%eax
    7d74:	jmp    7d06 <png_colorspace_set_rgb_coefficients+0x166>
    7d76:	cmp    %esi,%edx
    7d78:	jg     7d4c <png_colorspace_set_rgb_coefficients+0x1ac>
    7d7a:	add    %esi,%eax
    7d7c:	mov    %eax,-0x20(%rbp)
    7d7f:	jmp    7d0a <png_colorspace_set_rgb_coefficients+0x16a>
    7d81:	cmp    -0x1c(%rbp),%edx
    7d84:	jl     7d58 <png_colorspace_set_rgb_coefficients+0x1b8>
    7d86:	add    %edx,%eax
    7d88:	mov    %eax,-0x24(%rbp)
    7d8b:	jmpq   7d0a <png_colorspace_set_rgb_coefficients+0x16a>

0000000000007d90 <png_check_IHDR>:
    7d90:	push   %rbp
    7d91:	mov    %rsp,%rbp
    7d94:	sub    $0x40,%rsp
    7d98:	mov    %r9,-0x30(%rbp)
    7d9c:	mov    %rbx,-0x8(%rbp)
    7da0:	mov    %r12,-0x10(%rbp)
    7da4:	mov    %r13,-0x18(%rbp)
    7da8:	mov    %r14,-0x20(%rbp)
    7dac:	mov    %r15,-0x28(%rbp)
    7db0:	mov    %r8,-0x38(%rbp)
    7db4:	test   %esi,%esi
    7db6:	je     7dc9 <png_check_IHDR+0x39>
    7db8:	mov    %rdi,%rbx
    7dbb:	mov    %rcx,%r13
    7dbe:	mov    %rdx,%r14
    7dc1:	mov    %rsi,%r15
    7dc4:	xor    %r12d,%r12d
    7dc7:	jmp    7de7 <png_check_IHDR+0x57>
    7dc9:	mov    %rcx,%r13
    7dcc:	mov    %rdx,%r14
    7dcf:	mov    %rsi,%r15
    7dd2:	lea    0x252fb(%rip),%rsi        # 2d0d4 <short_months.6+0x5ff>
    7dd9:	mov    %rdi,%rbx
    7ddc:	callq  5390 <png_warning@plt>
    7de1:	mov    $0x1,%r12d
    7de7:	cmp    $0x7fffffff,%r15d
    7dee:	jbe    7e05 <png_check_IHDR+0x75>
    7df0:	lea    0x252f9(%rip),%rsi        # 2d0f0 <short_months.6+0x61b>
    7df7:	mov    %rbx,%rdi
    7dfa:	callq  5390 <png_warning@plt>
    7dff:	mov    $0x1,%r12d
    7e05:	lea    0x7(%r15),%eax
    7e09:	and    $0xfffffff8,%eax
    7e0c:	mov    %eax,%edi
    7e0e:	movabs $0x1ffffffffffffff8,%rsi
    7e18:	callq  a350 <png_gt>
    7e1d:	test   %eax,%eax
    7e1f:	je     7e36 <png_check_IHDR+0xa6>
    7e21:	lea    0x252e4(%rip),%rsi        # 2d10c <short_months.6+0x637>
    7e28:	mov    %rbx,%rdi
    7e2b:	callq  5390 <png_warning@plt>
    7e30:	mov    $0x1,%r12d
    7e36:	cmp    0x41c(%rbx),%r15d
    7e3d:	jbe    7e54 <png_check_IHDR+0xc4>
    7e3f:	lea    0x252f5(%rip),%rsi        # 2d13b <short_months.6+0x666>
    7e46:	mov    %rbx,%rdi
    7e49:	callq  5390 <png_warning@plt>
    7e4e:	mov    $0x1,%r12d
    7e54:	test   %r14d,%r14d
    7e57:	jne    7e6e <png_check_IHDR+0xde>
    7e59:	lea    0x25302(%rip),%rsi        # 2d162 <short_months.6+0x68d>
    7e60:	mov    %rbx,%rdi
    7e63:	callq  5390 <png_warning@plt>
    7e68:	mov    $0x1,%r12d
    7e6e:	cmp    $0x7fffffff,%r14d
    7e75:	jbe    7e8c <png_check_IHDR+0xfc>
    7e77:	lea    0x25301(%rip),%rsi        # 2d17f <short_months.6+0x6aa>
    7e7e:	mov    %rbx,%rdi
    7e81:	callq  5390 <png_warning@plt>
    7e86:	mov    $0x1,%r12d
    7e8c:	cmp    0x420(%rbx),%r14d
    7e93:	jbe    7eaa <png_check_IHDR+0x11a>
    7e95:	lea    0x25300(%rip),%rsi        # 2d19c <short_months.6+0x6c7>
    7e9c:	mov    %rbx,%rdi
    7e9f:	callq  5390 <png_warning@plt>
    7ea4:	mov    $0x1,%r12d
    7eaa:	cmp    $0x1,%r13d
    7eae:	jne    7f91 <png_check_IHDR+0x201>
    7eb4:	mov    -0x38(%rbp),%r14
    7eb8:	test   %r14d,%r14d
    7ebb:	js     7ecf <png_check_IHDR+0x13f>
    7ebd:	cmp    $0x1,%r14d
    7ec1:	je     7ecf <png_check_IHDR+0x13f>
    7ec3:	cmp    $0x5,%r14d
    7ec7:	je     7ecf <png_check_IHDR+0x13f>
    7ec9:	cmp    $0x6,%r14d
    7ecd:	jle    7ee4 <png_check_IHDR+0x154>
    7ecf:	lea    0x25308(%rip),%rsi        # 2d1de <short_months.6+0x709>
    7ed6:	mov    %rbx,%rdi
    7ed9:	callq  5390 <png_warning@plt>
    7ede:	mov    $0x1,%r12d
    7ee4:	cmp    $0x3,%r14d
    7ee8:	je     7fd3 <png_check_IHDR+0x243>
    7eee:	cmp    $0x2,%r14d
    7ef2:	je     7f00 <png_check_IHDR+0x170>
    7ef4:	cmp    $0x4,%r14d
    7ef8:	je     7f00 <png_check_IHDR+0x170>
    7efa:	cmp    $0x6,%r14d
    7efe:	jne    7f1b <png_check_IHDR+0x18b>
    7f00:	cmp    $0x7,%r13d
    7f04:	jg     7f1b <png_check_IHDR+0x18b>
    7f06:	lea    0x252ec(%rip),%rsi        # 2d1f9 <short_months.6+0x724>
    7f0d:	mov    %rbx,%rdi
    7f10:	callq  5390 <png_warning@plt>
    7f15:	mov    $0x1,%r12d
    7f1b:	mov    -0x30(%rbp),%rax
    7f1f:	cmp    $0x1,%eax
    7f22:	jle    7f39 <png_check_IHDR+0x1a9>
    7f24:	lea    0x252ff(%rip),%rsi        # 2d22a <short_months.6+0x755>
    7f2b:	mov    %rbx,%rdi
    7f2e:	callq  5390 <png_warning@plt>
    7f33:	mov    $0x1,%r12d
    7f39:	movslq 0x10(%rbp),%rax
    7f3d:	test   %eax,%eax
    7f3f:	je     7f56 <png_check_IHDR+0x1c6>
    7f41:	lea    0x25303(%rip),%rsi        # 2d24b <short_months.6+0x776>
    7f48:	mov    %rbx,%rdi
    7f4b:	callq  5390 <png_warning@plt>
    7f50:	mov    $0x1,%r12d
    7f56:	mov    0x12c(%rbx),%eax
    7f5c:	and    $0x1000,%eax
    7f61:	test   %eax,%eax
    7f63:	jne    7fe2 <png_check_IHDR+0x252>
    7f65:	movslq 0x18(%rbp),%rcx
    7f69:	test   %ecx,%ecx
    7f6b:	jne    8004 <png_check_IHDR+0x274>
    7f71:	cmp    $0x1,%r12d
    7f75:	je     8053 <png_check_IHDR+0x2c3>
    7f7b:	mov    -0x28(%rbp),%r15
    7f7f:	mov    -0x20(%rbp),%r14
    7f83:	mov    -0x18(%rbp),%r13
    7f87:	mov    -0x10(%rbp),%r12
    7f8b:	mov    -0x8(%rbp),%rbx
    7f8f:	leaveq 
    7f90:	retq   
    7f91:	cmp    $0x2,%r13d
    7f95:	je     7eb4 <png_check_IHDR+0x124>
    7f9b:	cmp    $0x4,%r13d
    7f9f:	je     7eb4 <png_check_IHDR+0x124>
    7fa5:	cmp    $0x8,%r13d
    7fa9:	je     7eb4 <png_check_IHDR+0x124>
    7faf:	cmp    $0x10,%r13d
    7fb3:	je     7eb4 <png_check_IHDR+0x124>
    7fb9:	lea    0x25204(%rip),%rsi        # 2d1c4 <short_months.6+0x6ef>
    7fc0:	mov    %rbx,%rdi
    7fc3:	callq  5390 <png_warning@plt>
    7fc8:	mov    $0x1,%r12d
    7fce:	jmpq   7eb4 <png_check_IHDR+0x124>
    7fd3:	cmp    $0x8,%r13d
    7fd7:	jg     7f06 <png_check_IHDR+0x176>
    7fdd:	jmpq   7eee <png_check_IHDR+0x15e>
    7fe2:	mov    0x3d8(%rbx),%eax
    7fe8:	test   %eax,%eax
    7fea:	je     7f65 <png_check_IHDR+0x1d5>
    7ff0:	lea    0x25277(%rip),%rsi        # 2d26e <short_months.6+0x799>
    7ff7:	mov    %rbx,%rdi
    7ffa:	callq  5390 <png_warning@plt>
    7fff:	jmpq   7f65 <png_check_IHDR+0x1d5>
    8004:	mov    0x3d8(%rbx),%eax
    800a:	and    $0x4,%eax
    800d:	test   %eax,%eax
    800f:	jne    8062 <png_check_IHDR+0x2d2>
    8011:	lea    0x25287(%rip),%rsi        # 2d29f <short_months.6+0x7ca>
    8018:	mov    %rbx,%rdi
    801b:	callq  5390 <png_warning@plt>
    8020:	mov    $0x1,%r12d
    8026:	mov    0x12c(%rbx),%eax
    802c:	and    $0x1000,%eax
    8031:	test   %eax,%eax
    8033:	je     7f71 <png_check_IHDR+0x1e1>
    8039:	lea    0x2527d(%rip),%rsi        # 2d2bd <short_months.6+0x7e8>
    8040:	mov    %rbx,%rdi
    8043:	callq  5390 <png_warning@plt>
    8048:	mov    $0x1,%r12d
    804e:	jmpq   7f71 <png_check_IHDR+0x1e1>
    8053:	mov    %rbx,%rdi
    8056:	lea    0x2527e(%rip),%rsi        # 2d2db <short_months.6+0x806>
    805d:	callq  5470 <png_error@plt>
    8062:	cmp    $0x40,%ecx
    8065:	jne    8011 <png_check_IHDR+0x281>
    8067:	mov    0x12c(%rbx),%eax
    806d:	and    $0x1000,%eax
    8072:	test   %eax,%eax
    8074:	jne    8011 <png_check_IHDR+0x281>
    8076:	cmp    $0x2,%r14d
    807a:	je     8026 <png_check_IHDR+0x296>
    807c:	cmp    $0x6,%r14d
    8080:	je     8026 <png_check_IHDR+0x296>
    8082:	jmp    8011 <png_check_IHDR+0x281>
    8084:	data16 nopw %cs:0x0(%rax,%rax,1)
    808f:	nop

0000000000008090 <png_ascii_from_fp>:
    8090:	push   %rbp
    8091:	mov    %rsp,%rbp
    8094:	sub    $0x80,%rsp
    809b:	test   %ecx,%ecx
    809d:	jne    80a4 <png_ascii_from_fp+0x14>
    809f:	mov    $0xf,%ecx
    80a4:	cmp    $0x10,%ecx
    80a7:	jbe    80ae <png_ascii_from_fp+0x1e>
    80a9:	mov    $0x10,%ecx
    80ae:	lea    0x5(%rcx),%eax
    80b1:	mov    %eax,%eax
    80b3:	cmp    %rdx,%rax
    80b6:	jbe    80c4 <png_ascii_from_fp+0x34>
    80b8:	lea    0x2522e(%rip),%rsi        # 2d2ed <short_months.6+0x818>
    80bf:	callq  5470 <png_error@plt>
    80c4:	xorpd  %xmm1,%xmm1
    80c8:	ucomisd %xmm1,%xmm0
    80cc:	jp     80e7 <png_ascii_from_fp+0x57>
    80ce:	jae    80e7 <png_ascii_from_fp+0x57>
    80d0:	movsd  0x253b0(%rip),%xmm1        # 2d488 <short_months.6+0x9b3>
    80d8:	xorpd  %xmm1,%xmm0
    80dc:	movb   $0x2d,(%rsi)
    80df:	add    $0x1,%rsi
    80e3:	add    $0xffffffffffffffff,%rdx
    80e7:	xor    %eax,%eax
    80e9:	movsd  0x2539f(%rip),%xmm1        # 2d490 <short_months.6+0x9bb>
    80f1:	ucomisd %xmm1,%xmm0
    80f5:	jae    8105 <png_ascii_from_fp+0x75>
    80f7:	test   %rax,%rax
    80fa:	jne    811c <png_ascii_from_fp+0x8c>
    80fc:	movb   $0x30,(%rsi)
    80ff:	movb   $0x0,0x1(%rsi)
    8103:	leaveq 
    8104:	retq   
    8105:	movsd  0x25373(%rip),%xmm1        # 2d480 <short_months.6+0x9ab>
    810d:	ucomisd %xmm1,%xmm0
    8111:	jp     8115 <png_ascii_from_fp+0x85>
    8113:	jbe    812d <png_ascii_from_fp+0x9d>
    8115:	mov    $0x1,%eax
    811a:	jmp    80f7 <png_ascii_from_fp+0x67>
    811c:	movb   $0x69,(%rsi)
    811f:	movb   $0x6e,0x1(%rsi)
    8123:	movb   $0x66,0x2(%rsi)
    8127:	movb   $0x0,0x3(%rsi)
    812b:	leaveq 
    812c:	retq   
    812d:	lea    -0x78(%rbp),%r8
    8131:	movapd %xmm0,%xmm1
    8135:	mov    %r12,-0x18(%rbp)
    8139:	mov    %r13,-0x20(%rbp)
    813d:	mov    %r14,-0x28(%rbp)
    8141:	mov    %r15,-0x30(%rbp)
    8145:	mov    %rdi,-0x8(%rbp)
    8149:	mov    %r8,%rdi
    814c:	mov    %rsi,%r12
    814f:	mov    %rax,%r13
    8152:	mov    %rcx,%r14
    8155:	mov    %rbx,%r15
    8158:	mov    %rdx,%rbx
    815b:	movdqu %xmm0,-0x60(%rbp)
    8160:	movapd %xmm1,%xmm0
    8164:	callq  5410 <frexp@plt>
    8169:	movslq -0x78(%rbp),%rdx
    816d:	mov    %rdx,%rcx
    8170:	shl    $0x2,%ecx
    8173:	lea    (%rdx,%rdx,8),%eax
    8176:	lea    (%rcx,%rax,8),%eax
    8179:	lea    (%rdx,%rax,1),%edi
    817c:	sar    $0x8,%edi
    817f:	mov    %edi,-0x78(%rbp)
    8182:	callq  a370 <png_pow10>
    8187:	movapd %xmm0,%xmm2
    818b:	movsd  0x252fd(%rip),%xmm1        # 2d490 <short_months.6+0x9bb>
    8193:	movdqu -0x60(%rbp),%xmm0
    8198:	jmp    81b5 <png_ascii_from_fp+0x125>
    819a:	movapd %xmm0,%xmm2
    819e:	movslq -0x78(%rbp),%rax
    81a2:	add    $0x1,%eax
    81a5:	mov    %eax,-0x78(%rbp)
    81a8:	movsd  0x252e0(%rip),%xmm1        # 2d490 <short_months.6+0x9bb>
    81b0:	movdqu -0x60(%rbp),%xmm0
    81b5:	ucomisd %xmm1,%xmm2
    81b9:	jp     81bd <png_ascii_from_fp+0x12d>
    81bb:	jb     81c3 <png_ascii_from_fp+0x133>
    81bd:	ucomisd %xmm2,%xmm0
    81c1:	jbe    81ee <png_ascii_from_fp+0x15e>
    81c3:	movslq -0x78(%rbp),%rdi
    81c7:	add    $0x1,%edi
    81ca:	movdqu %xmm2,-0x50(%rbp)
    81cf:	callq  a370 <png_pow10>
    81d4:	movsd  0x252a4(%rip),%xmm1        # 2d480 <short_months.6+0x9ab>
    81dc:	ucomisd %xmm1,%xmm0
    81e0:	jp     81e4 <png_ascii_from_fp+0x154>
    81e2:	jbe    819a <png_ascii_from_fp+0x10a>
    81e4:	movdqu -0x50(%rbp),%xmm2
    81e9:	movdqu -0x60(%rbp),%xmm0
    81ee:	movsd  0x2527a(%rip),%xmm1        # 2d470 <short_months.6+0x99b>
    81f6:	movsd  0x2527a(%rip),%xmm3        # 2d478 <short_months.6+0x9a3>
    81fe:	divsd  %xmm2,%xmm0
    8202:	jmp    8212 <png_ascii_from_fp+0x182>
    8204:	divsd  %xmm1,%xmm0
    8208:	movslq -0x78(%rbp),%rax
    820c:	add    $0x1,%eax
    820f:	mov    %eax,-0x78(%rbp)
    8212:	ucomisd %xmm3,%xmm0
    8216:	jae    8204 <png_ascii_from_fp+0x174>
    8218:	movsd  0x25238(%rip),%xmm2        # 2d458 <short_months.6+0x983>
    8220:	lea    -0x68(%rbp),%rdi
    8224:	movslq -0x78(%rbp),%rcx
    8228:	test   %ecx,%ecx
    822a:	js     823b <png_ascii_from_fp+0x1ab>
    822c:	mov    %r15,-0x10(%rbp)
    8230:	mov    %r13,%rcx
    8233:	mov    %rcx,%r15
    8236:	jmpq   82f3 <png_ascii_from_fp+0x263>
    823b:	cmp    $0xfffffffe,%ecx
    823e:	jge    834c <png_ascii_from_fp+0x2bc>
    8244:	mov    %r15,-0x10(%rbp)
    8248:	mov    %r13,%rcx
    824b:	mov    %rcx,%r15
    824e:	jmpq   82f3 <png_ascii_from_fp+0x263>
    8253:	cmp    $0xffffffff,%edx
    8256:	je     8273 <png_ascii_from_fp+0x1e3>
    8258:	test   %edx,%edx
    825a:	jne    8269 <png_ascii_from_fp+0x1d9>
    825c:	movb   $0x2e,(%r12)
    8261:	add    $0x1,%r12
    8265:	add    $0xffffffffffffffff,%rbx
    8269:	movslq -0x78(%rbp),%rdx
    826d:	add    $0xffffffff,%edx
    8270:	mov    %edx,-0x78(%rbp)
    8273:	movb   $0x30,(%r12)
    8278:	add    $0x1,%r12
    827c:	add    $0xffffffff,%eax
    827f:	movslq -0x78(%rbp),%rdx
    8283:	test   %eax,%eax
    8285:	jne    8253 <png_ascii_from_fp+0x1c3>
    8287:	cmp    $0xffffffff,%edx
    828a:	je     82a7 <png_ascii_from_fp+0x217>
    828c:	test   %edx,%edx
    828e:	jne    829d <png_ascii_from_fp+0x20d>
    8290:	movb   $0x2e,(%r12)
    8295:	add    $0x1,%r12
    8299:	add    $0xffffffffffffffff,%rbx
    829d:	movslq -0x78(%rbp),%rax
    82a1:	add    $0xffffffff,%eax
    82a4:	mov    %eax,-0x78(%rbp)
    82a7:	movsd  -0x68(%rbp),%xmm2
    82ac:	cvttsd2si %xmm2,%eax
    82b0:	add    $0x30,%eax
    82b3:	mov    %al,(%r12)
    82b7:	add    $0x1,%r12
    82bb:	sub    %ecx,%r15d
    82be:	lea    0x1(%r15,%r13,1),%r13d
    82c3:	xor    %r15d,%r15d
    82c6:	mov    %r15,%rcx
    82c9:	lea    (%r14,%rcx,1),%edx
    82cd:	lea    (%r15,%r13,1),%eax
    82d1:	cmp    %eax,%edx
    82d3:	jbe    835e <png_ascii_from_fp+0x2ce>
    82d9:	movsd  0x251af(%rip),%xmm2        # 2d490 <short_months.6+0x9bb>
    82e1:	ucomisd %xmm2,%xmm0
    82e5:	jbe    835e <png_ascii_from_fp+0x2ce>
    82e7:	lea    -0x68(%rbp),%rdi
    82eb:	movsd  0x25165(%rip),%xmm2        # 2d458 <short_months.6+0x983>
    82f3:	mulsd  %xmm1,%xmm0
    82f7:	lea    (%r14,%rcx,1),%edx
    82fb:	lea    0x1(%r15,%r13,1),%eax
    8300:	cmp    %eax,%edx
    8302:	ja     839d <png_ascii_from_fp+0x30d>
    8308:	addsd  %xmm2,%xmm0
    830c:	mov    %r14,-0x50(%rbp)
    8310:	mov    %r15,%r14
    8313:	mov    %rcx,%r15
    8316:	movdqu %xmm1,-0x60(%rbp)
    831b:	callq  57e0 <floor@plt>
    8320:	movsd  %xmm0,-0x68(%rbp)
    8325:	movsd  0x2516b(%rip),%xmm2        # 2d498 <short_months.6+0x9c3>
    832d:	ucomisd %xmm2,%xmm0
    8331:	ja     83d7 <png_ascii_from_fp+0x347>
    8337:	mov    %r15,%rcx
    833a:	mov    %r14,%r15
    833d:	mov    -0x50(%rbp),%r14
    8341:	movdqu -0x60(%rbp),%xmm1
    8346:	xorpd  %xmm0,%xmm0
    834a:	jmp    83ba <png_ascii_from_fp+0x32a>
    834c:	neg    %ecx
    834e:	movl   $0x0,-0x78(%rbp)
    8355:	mov    %r15,-0x10(%rbp)
    8359:	mov    %rcx,%r15
    835c:	jmp    82f3 <png_ascii_from_fp+0x263>
    835e:	movslq -0x78(%rbp),%rax
    8362:	cmp    $0xffffffff,%eax
    8365:	jl     8370 <png_ascii_from_fp+0x2e0>
    8367:	cmp    $0x2,%eax
    836a:	jle    83f7 <png_ascii_from_fp+0x367>
    8370:	movb   $0x45,(%r12)
    8375:	mov    %r13d,%eax
    8378:	sub    %rax,%rbx
    837b:	lea    0x1(%r12),%rcx
    8380:	mov    $0xcccccccd,%r8d
    8386:	movslq -0x78(%rbp),%rdi
    838a:	test   %edi,%edi
    838c:	js     8420 <png_ascii_from_fp+0x390>
    8392:	add    $0xffffffffffffffff,%rbx
    8396:	xor    %esi,%esi
    8398:	jmpq   8454 <png_ascii_from_fp+0x3c4>
    839d:	mov    %r14,-0x60(%rbp)
    83a1:	mov    %rcx,%r14
    83a4:	movdqu %xmm1,-0x40(%rbp)
    83a9:	callq  52d0 <modf@plt>
    83ae:	mov    %r14,%rcx
    83b1:	mov    -0x60(%rbp),%r14
    83b5:	movdqu -0x40(%rbp),%xmm1
    83ba:	movsd  -0x68(%rbp),%xmm3
    83bf:	xorpd  %xmm2,%xmm2
    83c3:	ucomisd %xmm2,%xmm3
    83c7:	jp     83cf <png_ascii_from_fp+0x33f>
    83c9:	je     846c <png_ascii_from_fp+0x3dc>
    83cf:	mov    %r15,%rax
    83d2:	jmpq   827f <png_ascii_from_fp+0x1ef>
    83d7:	test   %r14d,%r14d
    83da:	jne    8484 <png_ascii_from_fp+0x3f4>
    83e0:	mov    -0x50(%rbp),%r14
    83e4:	movdqu -0x60(%rbp),%xmm1
    83e9:	jmpq   84cf <png_ascii_from_fp+0x43f>
    83ee:	movb   $0x30,(%r12)
    83f3:	add    $0x1,%r12
    83f7:	movslq -0x78(%rbp),%rcx
    83fb:	lea    -0x1(%rcx),%eax
    83fe:	mov    %eax,-0x78(%rbp)
    8401:	test   %ecx,%ecx
    8403:	jg     83ee <png_ascii_from_fp+0x35e>
    8405:	movb   $0x0,(%r12)
    840a:	mov    -0x10(%rbp),%rbx
    840e:	mov    -0x30(%rbp),%r15
    8412:	mov    -0x28(%rbp),%r14
    8416:	mov    -0x20(%rbp),%r13
    841a:	mov    -0x18(%rbp),%r12
    841e:	leaveq 
    841f:	retq   
    8420:	movb   $0x2d,(%rcx)
    8423:	mov    -0x78(%rbp),%edi
    8426:	neg    %edi
    8428:	lea    0x2(%r12),%rcx
    842d:	add    $0xfffffffffffffffe,%rbx
    8431:	xor    %esi,%esi
    8433:	jmp    8454 <png_ascii_from_fp+0x3c4>
    8435:	mov    %r8,%rax
    8438:	mul    %edi
    843a:	shr    $0x3,%edx
    843d:	lea    (%rdx,%rdx,4),%eax
    8440:	add    %eax,%eax
    8442:	sub    %eax,%edi
    8444:	add    $0x30,%edi
    8447:	mov    %esi,%eax
    8449:	mov    %dil,-0x72(%rbp,%rax,1)
    844e:	add    $0x1,%esi
    8451:	mov    %rdx,%rdi
    8454:	test   %edi,%edi
    8456:	jne    8435 <png_ascii_from_fp+0x3a5>
    8458:	mov    %esi,%eax
    845a:	cmp    %rax,%rbx
    845d:	ja     850b <png_ascii_from_fp+0x47b>
    8463:	mov    -0x8(%rbp),%rdi
    8467:	jmpq   80b8 <png_ascii_from_fp+0x28>
    846c:	add    $0x1,%r15d
    8470:	test   %r13d,%r13d
    8473:	jne    82c9 <png_ascii_from_fp+0x239>
    8479:	add    $0x1,%ecx
    847c:	xor    %r13d,%r13d
    847f:	jmpq   82c9 <png_ascii_from_fp+0x239>
    8484:	movsd  0x24fec(%rip),%xmm0        # 2d478 <short_months.6+0x9a3>
    848c:	movsd  %xmm0,-0x68(%rbp)
    8491:	lea    -0x1(%r14),%eax
    8495:	test   %r13d,%r13d
    8498:	je     8528 <png_ascii_from_fp+0x498>
    849e:	mov    %r15,%rcx
    84a1:	mov    %rax,%r15
    84a4:	mov    -0x50(%rbp),%r14
    84a8:	movdqu -0x60(%rbp),%xmm1
    84ad:	xorpd  %xmm0,%xmm0
    84b1:	jmpq   83ba <png_ascii_from_fp+0x32a>
    84b6:	add    $0x1,%edx
    84b9:	mov    %edx,-0x78(%rbp)
    84bc:	mov    %rcx,%r12
    84bf:	add    $0xffffffd1,%eax
    84c2:	cvtsi2sd %eax,%xmm0
    84c6:	movsd  %xmm0,-0x68(%rbp)
    84cb:	add    $0xffffffff,%r13d
    84cf:	test   %r13d,%r13d
    84d2:	je     8544 <png_ascii_from_fp+0x4b4>
    84d4:	movsd  -0x68(%rbp),%xmm0
    84d9:	ucomisd %xmm2,%xmm0
    84dd:	jbe    8544 <png_ascii_from_fp+0x4b4>
    84df:	lea    -0x1(%r12),%rcx
    84e4:	movsbq (%rcx),%rax
    84e8:	movslq -0x78(%rbp),%rdx
    84ec:	cmp    $0xffffffff,%edx
    84ef:	jne    84b6 <png_ascii_from_fp+0x426>
    84f1:	cmp    $0x2e,%al
    84f3:	je     855e <png_ascii_from_fp+0x4ce>
    84f5:	mov    %rcx,%r12
    84f8:	jmp    84bf <png_ascii_from_fp+0x42f>
    84fa:	add    $0xffffffff,%esi
    84fd:	mov    %esi,%eax
    84ff:	movsbq -0x72(%rbp,%rax,1),%rax
    8505:	mov    %al,(%rcx)
    8507:	add    $0x1,%rcx
    850b:	test   %esi,%esi
    850d:	jne    84fa <png_ascii_from_fp+0x46a>
    850f:	movb   $0x0,(%rcx)
    8512:	mov    -0x10(%rbp),%rbx
    8516:	mov    -0x30(%rbp),%r15
    851a:	mov    -0x28(%rbp),%r14
    851e:	mov    -0x20(%rbp),%r13
    8522:	mov    -0x18(%rbp),%r12
    8526:	leaveq 
    8527:	retq   
    8528:	lea    -0x1(%r15),%ecx
    852c:	mov    %rax,%r15
    852f:	xor    %r13d,%r13d
    8532:	mov    -0x50(%rbp),%r14
    8536:	movdqu -0x60(%rbp),%xmm1
    853b:	xorpd  %xmm0,%xmm0
    853f:	jmpq   83ba <png_ascii_from_fp+0x32a>
    8544:	movsd  -0x68(%rbp),%xmm0
    8549:	ucomisd %xmm2,%xmm0
    854d:	ja     8577 <png_ascii_from_fp+0x4e7>
    854f:	mov    %r15,%rcx
    8552:	xor    %r15d,%r15d
    8555:	xorpd  %xmm0,%xmm0
    8559:	jmpq   83ba <png_ascii_from_fp+0x32a>
    855e:	add    $0xfffffffffffffffe,%r12
    8562:	movsbq (%r12),%rax
    8567:	movl   $0x1,-0x78(%rbp)
    856e:	add    $0x1,%rbx
    8572:	jmpq   84bf <png_ascii_from_fp+0x42f>
    8577:	movslq -0x78(%rbp),%rax
    857b:	cmp    $0xffffffff,%eax
    857e:	je     85a2 <png_ascii_from_fp+0x512>
    8580:	add    $0x1,%eax
    8583:	mov    %eax,-0x78(%rbp)
    8586:	mov    %r15,%rcx
    8589:	movsd  0x24ee7(%rip),%xmm0        # 2d478 <short_months.6+0x9a3>
    8591:	movsd  %xmm0,-0x68(%rbp)
    8596:	xor    %r15d,%r15d
    8599:	xorpd  %xmm0,%xmm0
    859d:	jmpq   83ba <png_ascii_from_fp+0x32a>
    85a2:	add    $0xffffffffffffffff,%r12
    85a6:	movsbq (%r12),%rax
    85ab:	cmp    $0x2e,%al
    85ad:	jne    8586 <png_ascii_from_fp+0x4f6>
    85af:	movl   $0x1,-0x78(%rbp)
    85b6:	add    $0x1,%rbx
    85ba:	jmp    8586 <png_ascii_from_fp+0x4f6>
    85bc:	nopl   0x0(%rax)

00000000000085c0 <png_ascii_from_fixed>:
    85c0:	push   %rbp
    85c1:	mov    %rsp,%rbp
    85c4:	sub    $0x20,%rsp
    85c8:	cmp    $0xc,%rdx
    85cc:	ja     85da <png_ascii_from_fixed+0x1a>
    85ce:	lea    0x24d18(%rip),%rsi        # 2d2ed <short_months.6+0x818>
    85d5:	callq  5470 <png_error@plt>
    85da:	test   %ecx,%ecx
    85dc:	jns    85e7 <png_ascii_from_fixed+0x27>
    85de:	neg    %ecx
    85e0:	movb   $0x2d,(%rsi)
    85e3:	add    $0x1,%rsi
    85e7:	cmp    $0x80000000,%ecx
    85ed:	ja     85ce <png_ascii_from_fixed+0xe>
    85ef:	mov    $0xcccccccd,%r9d
    85f5:	xor    %edi,%edi
    85f7:	mov    $0x10,%r8d
    85fd:	mov    %rsi,-0x8(%rbp)
    8601:	mov    %r8,%rsi
    8604:	jmp    8631 <png_ascii_from_fixed+0x71>
    8606:	mov    %r9,%rax
    8609:	mul    %ecx
    860b:	shr    $0x3,%edx
    860e:	lea    (%rdx,%rdx,4),%eax
    8611:	lea    (%rax,%rax,1),%r11d
    8615:	mov    %rcx,%rax
    8618:	sub    %r11d,%eax
    861b:	lea    0x30(%rax),%r10d
    861f:	mov    %edi,%eax
    8621:	mov    %r10b,-0x12(%rbp,%rax,1)
    8626:	add    $0x1,%edi
    8629:	cmp    $0x10,%esi
    862c:	je     863f <png_ascii_from_fixed+0x7f>
    862e:	mov    %rdx,%rcx
    8631:	test   %ecx,%ecx
    8633:	jne    8606 <png_ascii_from_fixed+0x46>
    8635:	test   %edi,%edi
    8637:	je     864c <png_ascii_from_fixed+0x8c>
    8639:	mov    -0x8(%rbp),%rax
    863d:	jmp    866d <png_ascii_from_fixed+0xad>
    863f:	cmp    %r11d,%ecx
    8642:	jne    8685 <png_ascii_from_fixed+0xc5>
    8644:	mov    %rdx,%rcx
    8647:	mov    %r8,%rsi
    864a:	jmp    8631 <png_ascii_from_fixed+0x71>
    864c:	mov    -0x8(%rbp),%rax
    8650:	movb   $0x30,(%rax)
    8653:	add    $0x1,%rax
    8657:	movb   $0x0,(%rax)
    865a:	leaveq 
    865b:	retq   
    865c:	add    $0xffffffff,%edi
    865f:	mov    %edi,%ecx
    8661:	movsbq -0x12(%rbp,%rcx,1),%rcx
    8667:	mov    %cl,(%rax)
    8669:	add    $0x1,%rax
    866d:	cmp    $0x5,%edi
    8670:	ja     865c <png_ascii_from_fixed+0x9c>
    8672:	cmp    $0x5,%esi
    8675:	ja     8657 <png_ascii_from_fixed+0x97>
    8677:	movb   $0x2e,(%rax)
    867a:	add    $0x1,%rax
    867e:	mov    $0x5,%ecx
    8683:	jmp    8697 <png_ascii_from_fixed+0xd7>
    8685:	mov    %rdx,%rcx
    8688:	mov    %rdi,%rsi
    868b:	jmp    8631 <png_ascii_from_fixed+0x71>
    868d:	movb   $0x30,(%rax)
    8690:	add    $0x1,%rax
    8694:	add    $0xffffffff,%ecx
    8697:	cmp    %ecx,%edi
    8699:	jb     868d <png_ascii_from_fixed+0xcd>
    869b:	jmp    86ae <png_ascii_from_fixed+0xee>
    869d:	add    $0xffffffff,%edi
    86a0:	mov    %edi,%ecx
    86a2:	movsbq -0x12(%rbp,%rcx,1),%rcx
    86a8:	mov    %cl,(%rax)
    86aa:	add    $0x1,%rax
    86ae:	cmp    %edi,%esi
    86b0:	jbe    869d <png_ascii_from_fixed+0xdd>
    86b2:	jmp    8657 <png_ascii_from_fixed+0x97>
    86b4:	data16 nopw %cs:0x0(%rax,%rax,1)
    86bf:	nop

00000000000086c0 <png_check_fp_number>:
    86c0:	push   %rbp
    86c1:	mov    %rsp,%rbp
    86c4:	sub    $0x70,%rsp
    86c8:	mov    %r15,-0x38(%rbp)
    86cc:	mov    %r14,-0x30(%rbp)
    86d0:	mov    %r13,-0x28(%rbp)
    86d4:	mov    %r12,-0x20(%rbp)
    86d8:	mov    %rbx,-0x18(%rbp)
    86dc:	mov    %rcx,-0x8(%rbp)
    86e0:	mov    %rdx,-0x10(%rbp)
    86e4:	mov    (%rcx),%rbx
    86e7:	movslq (%rdx),%rax
    86ea:	mov    $0x4,%r15d
    86f0:	mov    $0x10,%r14d
    86f6:	mov    $0x8,%r13d
    86fc:	mov    $0x20,%r11d
    8702:	mov    $0x84,%r12d
    8708:	mov    $0x108,%edx
    870d:	mov    $0x5,%ecx
    8712:	mov    $0x44,%r8d
    8718:	mov    %r8,-0x68(%rbp)
    871c:	mov    $0xc4,%r8d
    8722:	mov    %r8,-0x60(%rbp)
    8726:	mov    $0x50,%r8d
    872c:	mov    %r8,-0x58(%rbp)
    8730:	mov    $0x48,%r8d
    8736:	mov    %r8,-0x50(%rbp)
    873a:	mov    $0x148,%r8d
    8740:	mov    %r8,-0x48(%rbp)
    8744:	mov    $0x60,%r8d
    874a:	mov    %r8,-0x40(%rbp)
    874e:	jmp    876c <png_check_fp_number+0xac>
    8750:	and    $0x1c0,%eax
    8755:	lea    0x11(%rax),%ecx
    8758:	mov    -0x70(%rbp),%rax
    875c:	or     %ecx,%eax
    875e:	add    $0x1,%rbx
    8762:	mov    $0x5,%ecx
    8767:	mov    $0x108,%edx
    876c:	mov    %rax,%r10
    876f:	and    $0x8,%r10d
    8773:	cmp    %rsi,%rbx
    8776:	jae    87ab <png_check_fp_number+0xeb>
    8778:	movsbq (%rdi,%rbx,1),%r8
    877d:	add    $0xffffffd5,%r8d
    8781:	cmp    $0x3a,%r8d
    8785:	ja     87ab <png_check_fp_number+0xeb>
    8787:	lea    0x2389a(%rip),%r9        # 2c028 <_fini+0xf64>
    878e:	movslq (%r9,%r8,4),%r8
    8792:	add    %r9,%r8
    8795:	jmpq   *%r8
    8798:	mov    $0x21,%ecx
    879d:	mov    %r11,%rdx
    87a0:	mov    %rdx,%r9
    87a3:	pushq  -0x40(%rbp)
    87a6:	popq   -0x70(%rbp)
    87a9:	jmp    87e8 <png_check_fp_number+0x128>
    87ab:	test   %r10d,%r10d
    87ae:	mov    -0x10(%rbp),%rcx
    87b2:	mov    %eax,(%rcx)
    87b4:	mov    -0x8(%rbp),%rax
    87b8:	mov    %rbx,(%rax)
    87bb:	jle    885c <png_check_fp_number+0x19c>
    87c1:	mov    $0x1,%eax
    87c6:	mov    -0x18(%rbp),%rbx
    87ca:	mov    -0x20(%rbp),%r12
    87ce:	mov    -0x28(%rbp),%r13
    87d2:	mov    -0x30(%rbp),%r14
    87d6:	mov    -0x38(%rbp),%r15
    87da:	leaveq 
    87db:	retq   
    87dc:	mov    %r15,%rdx
    87df:	mov    %rdx,%r9
    87e2:	pushq  -0x68(%rbp)
    87e5:	popq   -0x70(%rbp)
    87e8:	mov    %rax,%r8
    87eb:	and    $0x3,%r8d
    87ef:	lea    -0x4(%r9,%r8,1),%r8d
    87f4:	cmp    $0x1d,%r8d
    87f8:	ja     87ab <png_check_fp_number+0xeb>
    87fa:	lea    0x23913(%rip),%r9        # 2c114 <_fini+0x1050>
    8801:	movslq (%r9,%r8,4),%r8
    8805:	add    %r9,%r8
    8808:	jmpq   *%r8
    880b:	or     $0x48,%eax
    880e:	jmpq   875e <png_check_fp_number+0x9e>
    8813:	mov    $0x85,%ecx
    8818:	mov    %r12,%rdx
    881b:	mov    %r15,%r9
    881e:	pushq  -0x60(%rbp)
    8821:	popq   -0x70(%rbp)
    8824:	jmp    87e8 <png_check_fp_number+0x128>
    8826:	mov    $0x11,%ecx
    882b:	mov    %r14,%rdx
    882e:	mov    %rdx,%r9
    8831:	pushq  -0x58(%rbp)
    8834:	popq   -0x70(%rbp)
    8837:	jmp    87e8 <png_check_fp_number+0x128>
    8839:	mov    $0x9,%ecx
    883e:	mov    %r13,%rdx
    8841:	mov    %rdx,%r9
    8844:	pushq  -0x50(%rbp)
    8847:	popq   -0x70(%rbp)
    884a:	jmp    87e8 <png_check_fp_number+0x128>
    884c:	mov    $0x109,%ecx
    8851:	mov    %r13,%r9
    8854:	pushq  -0x48(%rbp)
    8857:	popq   -0x70(%rbp)
    885a:	jmp    87e8 <png_check_fp_number+0x128>
    885c:	xor    %eax,%eax
    885e:	mov    -0x18(%rbp),%rbx
    8862:	mov    -0x20(%rbp),%r12
    8866:	mov    -0x28(%rbp),%r13
    886a:	mov    -0x30(%rbp),%r14
    886e:	mov    -0x38(%rbp),%r15
    8872:	leaveq 
    8873:	retq   
    8874:	mov    %rax,%rcx
    8877:	and    $0x3c,%ecx
    887a:	test   %ecx,%ecx
    887c:	jg     87ab <png_check_fp_number+0xeb>
    8882:	or     %edx,%eax
    8884:	jmpq   875e <png_check_fp_number+0x9e>
    8889:	mov    %rax,%r8
    888c:	and    $0x10,%r8d
    8890:	test   %r8d,%r8d
    8893:	jg     87ab <png_check_fp_number+0xeb>
    8899:	test   %r10d,%r10d
    889c:	jg     890d <png_check_fp_number+0x24d>
    889e:	and    $0x1c0,%eax
    88a3:	or     %ecx,%eax
    88a5:	jmpq   875e <png_check_fp_number+0x9e>
    88aa:	mov    %rax,%rcx
    88ad:	and    $0x10,%ecx
    88b0:	test   %ecx,%ecx
    88b2:	jg     8750 <png_check_fp_number+0x90>
    88b8:	mov    %rax,%rcx
    88bb:	jmpq   8758 <png_check_fp_number+0x98>
    88c0:	test   %r10d,%r10d
    88c3:	je     87ab <png_check_fp_number+0xeb>
    88c9:	and    $0x1c0,%eax
    88ce:	add    $0x2,%eax
    88d1:	jmpq   875e <png_check_fp_number+0x9e>
    88d6:	mov    -0x70(%rbp),%rcx
    88da:	or     %ecx,%eax
    88dc:	jmpq   875e <png_check_fp_number+0x9e>
    88e1:	test   %r10d,%r10d
    88e4:	je     87ab <png_check_fp_number+0xeb>
    88ea:	and    $0x1c0,%eax
    88ef:	add    $0x2,%eax
    88f2:	jmpq   875e <png_check_fp_number+0x9e>
    88f7:	mov    %rax,%rcx
    88fa:	and    $0x3c,%ecx
    88fd:	test   %ecx,%ecx
    88ff:	jg     87ab <png_check_fp_number+0xeb>
    8905:	or     $0x4,%eax
    8908:	jmpq   875e <png_check_fp_number+0x9e>
    890d:	or     %edx,%eax
    890f:	jmpq   875e <png_check_fp_number+0x9e>
    8914:	data16 nopw %cs:0x0(%rax,%rax,1)
    891f:	nop

0000000000008920 <png_check_fp_string>:
    8920:	push   %rbp
    8921:	mov    %rsp,%rbp
    8924:	sub    $0x20,%rsp
    8928:	mov    %rsi,-0x10(%rbp)
    892c:	mov    %rdi,-0x8(%rbp)
    8930:	movl   $0x0,-0x1c(%rbp)
    8937:	movq   $0x0,-0x18(%rbp)
    893f:	lea    -0x1c(%rbp),%rdx
    8943:	lea    -0x18(%rbp),%rcx
    8947:	callq  86c0 <png_check_fp_number>
    894c:	test   %eax,%eax
    894e:	jne    8954 <png_check_fp_string+0x34>
    8950:	xor    %eax,%eax
    8952:	leaveq 
    8953:	retq   
    8954:	mov    -0x18(%rbp),%rax
    8958:	mov    -0x10(%rbp),%rcx
    895c:	cmp    %rax,%rcx
    895f:	je     8972 <png_check_fp_string+0x52>
    8961:	mov    -0x8(%rbp),%rcx
    8965:	movsbq (%rcx,%rax,1),%rax
    896a:	test   %al,%al
    896c:	je     8972 <png_check_fp_string+0x52>
    896e:	xor    %eax,%eax
    8970:	leaveq 
    8971:	retq   
    8972:	movslq -0x1c(%rbp),%rax
    8976:	leaveq 
    8977:	retq   
    8978:	nopl   0x0(%rax,%rax,1)

0000000000008980 <png_muldiv>:
    8980:	push   %rbp
    8981:	mov    %rsp,%rbp
    8984:	sub    $0x10,%rsp
    8988:	xor    %eax,%eax
    898a:	test   %ecx,%ecx
    898c:	jne    8990 <png_muldiv+0x10>
    898e:	leaveq 
    898f:	retq   
    8990:	mov    $0x1,%eax
    8995:	test   %esi,%esi
    8997:	je     89da <png_muldiv+0x5a>
    8999:	test   %edx,%edx
    899b:	je     89da <png_muldiv+0x5a>
    899d:	cvtsi2sd %edx,%xmm0
    89a1:	cvtsi2sd %esi,%xmm1
    89a5:	mulsd  %xmm1,%xmm0
    89a9:	cvtsi2sd %ecx,%xmm1
    89ad:	divsd  %xmm1,%xmm0
    89b1:	movsd  0x24a9f(%rip),%xmm1        # 2d458 <short_months.6+0x983>
    89b9:	addsd  %xmm1,%xmm0
    89bd:	mov    %rdi,-0x8(%rbp)
    89c1:	callq  57e0 <floor@plt>
    89c6:	movsd  0x24a9a(%rip),%xmm1        # 2d468 <short_months.6+0x993>
    89ce:	ucomisd %xmm1,%xmm0
    89d2:	jp     89d6 <png_muldiv+0x56>
    89d4:	jbe    89e2 <png_muldiv+0x62>
    89d6:	xor    %eax,%eax
    89d8:	leaveq 
    89d9:	retq   
    89da:	movl   $0x0,(%rdi)
    89e0:	leaveq 
    89e1:	retq   
    89e2:	movsd  0x24a76(%rip),%xmm1        # 2d460 <short_months.6+0x98b>
    89ea:	ucomisd %xmm1,%xmm0
    89ee:	jae    89f4 <png_muldiv+0x74>
    89f0:	xor    %eax,%eax
    89f2:	leaveq 
    89f3:	retq   
    89f4:	cvttsd2si %xmm0,%eax
    89f8:	mov    -0x8(%rbp),%rcx
    89fc:	mov    %eax,(%rcx)
    89fe:	mov    $0x1,%eax
    8a03:	leaveq 
    8a04:	retq   
    8a05:	data16 nopw %cs:0x0(%rax,%rax,1)

0000000000008a10 <png_muldiv_warn>:
    8a10:	push   %rbp
    8a11:	mov    %rsp,%rbp
    8a14:	sub    $0x10,%rsp
    8a18:	mov    %rdi,-0x8(%rbp)
    8a1c:	lea    -0xc(%rbp),%rdi
    8a20:	callq  8980 <png_muldiv>
    8a25:	test   %eax,%eax
    8a27:	jne    8a3d <png_muldiv_warn+0x2d>
    8a29:	lea    0x248df(%rip),%rsi        # 2d30f <short_months.6+0x83a>
    8a30:	mov    -0x8(%rbp),%rdi
    8a34:	callq  5390 <png_warning@plt>
    8a39:	xor    %eax,%eax
    8a3b:	leaveq 
    8a3c:	retq   
    8a3d:	movslq -0xc(%rbp),%rax
    8a41:	leaveq 
    8a42:	retq   
    8a43:	data16 nopw %cs:0x0(%rax,%rax,1)
    8a4e:	xchg   %ax,%ax

0000000000008a50 <png_reciprocal>:
    8a50:	push   %rbp
    8a51:	mov    %rsp,%rbp
    8a54:	movsd  0x24a44(%rip),%xmm0        # 2d4a0 <short_months.6+0x9cb>
    8a5c:	cvtsi2sd %edi,%xmm1
    8a60:	divsd  %xmm1,%xmm0
    8a64:	movsd  0x249ec(%rip),%xmm1        # 2d458 <short_months.6+0x983>
    8a6c:	addsd  %xmm1,%xmm0
    8a70:	callq  57e0 <floor@plt>
    8a75:	movsd  0x249eb(%rip),%xmm1        # 2d468 <short_months.6+0x993>
    8a7d:	ucomisd %xmm1,%xmm0
    8a81:	jp     8a85 <png_reciprocal+0x35>
    8a83:	jbe    8a89 <png_reciprocal+0x39>
    8a85:	xor    %eax,%eax
    8a87:	leaveq 
    8a88:	retq   
    8a89:	movsd  0x249cf(%rip),%xmm1        # 2d460 <short_months.6+0x98b>
    8a91:	ucomisd %xmm1,%xmm0
    8a95:	jae    8a9b <png_reciprocal+0x4b>
    8a97:	xor    %eax,%eax
    8a99:	leaveq 
    8a9a:	retq   
    8a9b:	cvttsd2si %xmm0,%eax
    8a9f:	leaveq 
    8aa0:	retq   
    8aa1:	data16 nopw %cs:0x0(%rax,%rax,1)
    8aac:	nopl   0x0(%rax)

0000000000008ab0 <png_reciprocal2>:
    8ab0:	push   %rbp
    8ab1:	mov    %rsp,%rbp
    8ab4:	xor    %eax,%eax
    8ab6:	test   %edi,%edi
    8ab8:	jne    8abc <png_reciprocal2+0xc>
    8aba:	leaveq 
    8abb:	retq   
    8abc:	test   %esi,%esi
    8abe:	jne    8ac2 <png_reciprocal2+0x12>
    8ac0:	leaveq 
    8ac1:	retq   
    8ac2:	movsd  0x249de(%rip),%xmm0        # 2d4a8 <short_months.6+0x9d3>
    8aca:	cvtsi2sd %edi,%xmm1
    8ace:	divsd  %xmm1,%xmm0
    8ad2:	cvtsi2sd %esi,%xmm1
    8ad6:	divsd  %xmm1,%xmm0
    8ada:	movsd  0x24976(%rip),%xmm1        # 2d458 <short_months.6+0x983>
    8ae2:	addsd  %xmm1,%xmm0
    8ae6:	callq  57e0 <floor@plt>
    8aeb:	movsd  0x24975(%rip),%xmm1        # 2d468 <short_months.6+0x993>
    8af3:	ucomisd %xmm1,%xmm0
    8af7:	jp     8afb <png_reciprocal2+0x4b>
    8af9:	jbe    8aff <png_reciprocal2+0x4f>
    8afb:	xor    %eax,%eax
    8afd:	leaveq 
    8afe:	retq   
    8aff:	movsd  0x24959(%rip),%xmm1        # 2d460 <short_months.6+0x98b>
    8b07:	ucomisd %xmm1,%xmm0
    8b0b:	jae    8b11 <png_reciprocal2+0x61>
    8b0d:	xor    %eax,%eax
    8b0f:	leaveq 
    8b10:	retq   
    8b11:	cvttsd2si %xmm0,%eax
    8b15:	leaveq 
    8b16:	retq   
    8b17:	nopw   0x0(%rax,%rax,1)

0000000000008b20 <png_gamma_significant>:
    8b20:	push   %rbp
    8b21:	mov    %rsp,%rbp
    8b24:	mov    $0x1,%eax
    8b29:	cmp    $0x17317,%edi
    8b2f:	jg     8b33 <png_gamma_significant+0x13>
    8b31:	leaveq 
    8b32:	retq   
    8b33:	cmp    $0x19a28,%edi
    8b39:	jle    8b3d <png_gamma_significant+0x1d>
    8b3b:	leaveq 
    8b3c:	retq   
    8b3d:	xor    %eax,%eax
    8b3f:	leaveq 
    8b40:	retq   
    8b41:	data16 nopw %cs:0x0(%rax,%rax,1)
    8b4c:	nopl   0x0(%rax)

0000000000008b50 <png_gamma_correct>:
    8b50:	push   %rbp
    8b51:	mov    %rsp,%rbp
    8b54:	movzbl 0x268(%rdi),%eax
    8b5b:	cmp    $0x8,%al
    8b5d:	je     8b6c <png_gamma_correct+0x1c>
    8b5f:	mov    %rsi,%rdi
    8b62:	mov    %rdx,%rsi
    8b65:	callq  8b80 <png_gamma_16bit_correct>
    8b6a:	leaveq 
    8b6b:	retq   
    8b6c:	mov    %rsi,%rdi
    8b6f:	mov    %rdx,%rsi
    8b72:	callq  8bf0 <png_gamma_8bit_correct>
    8b77:	movzbl %al,%eax
    8b7a:	leaveq 
    8b7b:	retq   
    8b7c:	nopl   0x0(%rax)

0000000000008b80 <png_gamma_16bit_correct>:
    8b80:	push   %rbp
    8b81:	mov    %rsp,%rbp
    8b84:	sub    $0x10,%rsp
    8b88:	test   %edi,%edi
    8b8a:	jne    8b91 <png_gamma_16bit_correct+0x11>
    8b8c:	mov    %rdi,%rax
    8b8f:	leaveq 
    8b90:	retq   
    8b91:	cmp    $0xfffe,%edi
    8b97:	jbe    8b9e <png_gamma_16bit_correct+0x1e>
    8b99:	mov    %rdi,%rax
    8b9c:	leaveq 
    8b9d:	retq   
    8b9e:	cvtsi2sd %edi,%xmm0
    8ba2:	movsd  0x24906(%rip),%xmm1        # 2d4b0 <short_months.6+0x9db>
    8baa:	divsd  %xmm1,%xmm0
    8bae:	movdqu %xmm1,-0x10(%rbp)
    8bb3:	cvtsi2sd %esi,%xmm1
    8bb7:	movsd  0x248f9(%rip),%xmm2        # 2d4b8 <short_months.6+0x9e3>
    8bbf:	mulsd  %xmm2,%xmm1
    8bc3:	callq  5360 <pow@plt>
    8bc8:	movdqu -0x10(%rbp),%xmm1
    8bcd:	mulsd  %xmm1,%xmm0
    8bd1:	movsd  0x2487f(%rip),%xmm1        # 2d458 <short_months.6+0x983>
    8bd9:	addsd  %xmm1,%xmm0
    8bdd:	callq  57e0 <floor@plt>
    8be2:	cvttsd2si %xmm0,%rax
    8be7:	leaveq 
    8be8:	retq   
    8be9:	nopl   0x0(%rax)

0000000000008bf0 <png_gamma_8bit_correct>:
    8bf0:	push   %rbp
    8bf1:	mov    %rsp,%rbp
    8bf4:	sub    $0x10,%rsp
    8bf8:	test   %edi,%edi
    8bfa:	jne    8c01 <png_gamma_8bit_correct+0x11>
    8bfc:	mov    %rdi,%rax
    8bff:	leaveq 
    8c00:	retq   
    8c01:	cmp    $0xfe,%edi
    8c07:	jbe    8c0e <png_gamma_8bit_correct+0x1e>
    8c09:	mov    %rdi,%rax
    8c0c:	leaveq 
    8c0d:	retq   
    8c0e:	cvtsi2sd %edi,%xmm0
    8c12:	movsd  0x248a6(%rip),%xmm1        # 2d4c0 <short_months.6+0x9eb>
    8c1a:	divsd  %xmm1,%xmm0
    8c1e:	movdqu %xmm1,-0x10(%rbp)
    8c23:	cvtsi2sd %esi,%xmm1
    8c27:	movsd  0x24889(%rip),%xmm2        # 2d4b8 <short_months.6+0x9e3>
    8c2f:	mulsd  %xmm2,%xmm1
    8c33:	callq  5360 <pow@plt>
    8c38:	movdqu -0x10(%rbp),%xmm1
    8c3d:	mulsd  %xmm1,%xmm0
    8c41:	movsd  0x2480f(%rip),%xmm1        # 2d458 <short_months.6+0x983>
    8c49:	addsd  %xmm1,%xmm0
    8c4d:	callq  57e0 <floor@plt>
    8c52:	cvttsd2si %xmm0,%rax
    8c57:	leaveq 
    8c58:	retq   
    8c59:	nopl   0x0(%rax)

0000000000008c60 <png_destroy_gamma_table>:
    8c60:	push   %rbp
    8c61:	mov    %rsp,%rbp
    8c64:	sub    $0x20,%rsp
    8c68:	mov    %r15,-0x18(%rbp)
    8c6c:	mov    %r13,%r15
    8c6f:	mov    %r15,-0x8(%rbp)
    8c73:	mov    %r14,-0x10(%rbp)
    8c77:	mov    0x2a8(%rdi),%rsi
    8c7e:	mov    %rdi,%r13
    8c81:	callq  5790 <png_free@plt>
    8c86:	movq   $0x0,0x2a8(%r13)
    8c91:	mov    $0x1,%edx
    8c96:	mov    $0x8,%ecx
    8c9b:	xor    %esi,%esi
    8c9d:	mov    0x2b0(%r13),%rax
    8ca4:	test   %rax,%rax
    8ca7:	jne    8d05 <png_destroy_gamma_table+0xa5>
    8ca9:	mov    0x2b8(%r13),%rsi
    8cb0:	mov    %r13,%rdi
    8cb3:	callq  5790 <png_free@plt>
    8cb8:	movq   $0x0,0x2b8(%r13)
    8cc3:	mov    0x2c0(%r13),%rsi
    8cca:	mov    %r13,%rdi
    8ccd:	callq  5790 <png_free@plt>
    8cd2:	movq   $0x0,0x2c0(%r13)
    8cdd:	mov    0x2c8(%r13),%rax
    8ce4:	test   %rax,%rax
    8ce7:	je     8d5a <png_destroy_gamma_table+0xfa>
    8ce9:	mov    0x2a0(%r13),%eax
    8cf0:	mov    $0x8,%ecx
    8cf5:	sub    %eax,%ecx
    8cf7:	mov    $0x1,%r14d
    8cfd:	shl    %cl,%r14d
    8d00:	xor    %r15d,%r15d
    8d03:	jmp    8d33 <png_destroy_gamma_table+0xd3>
    8d05:	mov    0x2a0(%r13),%eax
    8d0c:	sub    %eax,%ecx
    8d0e:	mov    %rsi,%r14
    8d11:	mov    %rdx,%r15
    8d14:	shl    %cl,%r15d
    8d17:	jmp    8d89 <png_destroy_gamma_table+0x129>
    8d19:	mov    0x2c8(%r13),%rcx
    8d20:	movslq %r15d,%rax
    8d23:	mov    (%rcx,%rax,8),%rsi
    8d27:	mov    %r13,%rdi
    8d2a:	callq  5790 <png_free@plt>
    8d2f:	add    $0x1,%r15d
    8d33:	cmp    %r14d,%r15d
    8d36:	jl     8d19 <png_destroy_gamma_table+0xb9>
    8d38:	mov    0x2c8(%r13),%rsi
    8d3f:	mov    %r13,%rdi
    8d42:	callq  5790 <png_free@plt>
    8d47:	movq   $0x0,0x2c8(%r13)
    8d52:	mov    -0x10(%rbp),%r14
    8d56:	mov    -0x8(%rbp),%r15
    8d5a:	mov    0x2d0(%r13),%rax
    8d61:	test   %rax,%rax
    8d64:	jne    8db5 <png_destroy_gamma_table+0x155>
    8d66:	mov    %r15,%r13
    8d69:	mov    -0x18(%rbp),%r15
    8d6d:	leaveq 
    8d6e:	retq   
    8d6f:	mov    0x2b0(%r13),%rcx
    8d76:	movslq %r14d,%rax
    8d79:	mov    (%rcx,%rax,8),%rsi
    8d7d:	mov    %r13,%rdi
    8d80:	callq  5790 <png_free@plt>
    8d85:	add    $0x1,%r14d
    8d89:	cmp    %r15d,%r14d
    8d8c:	jl     8d6f <png_destroy_gamma_table+0x10f>
    8d8e:	mov    0x2b0(%r13),%rsi
    8d95:	mov    %r13,%rdi
    8d98:	callq  5790 <png_free@plt>
    8d9d:	movq   $0x0,0x2b0(%r13)
    8da8:	mov    -0x10(%rbp),%r14
    8dac:	mov    -0x8(%rbp),%r15
    8db0:	jmpq   8ca9 <png_destroy_gamma_table+0x49>
    8db5:	mov    0x2a0(%r13),%eax
    8dbc:	mov    $0x8,%ecx
    8dc1:	sub    %eax,%ecx
    8dc3:	mov    $0x1,%r14d
    8dc9:	shl    %cl,%r14d
    8dcc:	xor    %r15d,%r15d
    8dcf:	jmp    8deb <png_destroy_gamma_table+0x18b>
    8dd1:	mov    0x2d0(%r13),%rcx
    8dd8:	movslq %r15d,%rax
    8ddb:	mov    (%rcx,%rax,8),%rsi
    8ddf:	mov    %r13,%rdi
    8de2:	callq  5790 <png_free@plt>
    8de7:	add    $0x1,%r15d
    8deb:	cmp    %r14d,%r15d
    8dee:	jl     8dd1 <png_destroy_gamma_table+0x171>
    8df0:	mov    0x2d0(%r13),%rsi
    8df7:	mov    %r13,%rdi
    8dfa:	callq  5790 <png_free@plt>
    8dff:	movq   $0x0,0x2d0(%r13)
    8e0a:	mov    -0x10(%rbp),%r14
    8e0e:	mov    -0x8(%rbp),%r13
    8e12:	mov    -0x18(%rbp),%r15
    8e16:	leaveq 
    8e17:	retq   
    8e18:	nopl   0x0(%rax,%rax,1)

0000000000008e20 <png_build_gamma_table>:
    8e20:	push   %rbp
    8e21:	mov    %rsp,%rbp
    8e24:	sub    $0x20,%rsp
    8e28:	mov    %r14,-0x10(%rbp)
    8e2c:	mov    %r15,-0x18(%rbp)
    8e30:	lea    0x2a8(%rdi),%r15
    8e37:	mov    (%r15),%rax
    8e3a:	test   %rax,%rax
    8e3d:	jne    8e5c <png_build_gamma_table+0x3c>
    8e3f:	mov    0x2b0(%rdi),%rax
    8e46:	test   %rax,%rax
    8e49:	jne    8e5c <png_build_gamma_table+0x3c>
    8e4b:	mov    %rsi,%rcx
    8e4e:	mov    %r15,%rsi
    8e51:	mov    %r14,%r15
    8e54:	mov    %r13,%r14
    8e57:	mov    %rdi,%r13
    8e5a:	jmp    8e91 <png_build_gamma_table+0x71>
    8e5c:	lea    0x244c9(%rip),%rax        # 2d32c <short_months.6+0x857>
    8e63:	mov    %rdi,%rcx
    8e66:	mov    %r13,-0x8(%rbp)
    8e6a:	mov    %rdi,%r13
    8e6d:	mov    %rcx,%rdi
    8e70:	mov    %rsi,%r14
    8e73:	mov    %rax,%rsi
    8e76:	callq  5390 <png_warning@plt>
    8e7b:	mov    %r13,%rdi
    8e7e:	callq  8c60 <png_destroy_gamma_table>
    8e83:	mov    %r14,%rcx
    8e86:	mov    %r15,%rsi
    8e89:	mov    -0x10(%rbp),%r15
    8e8d:	mov    -0x8(%rbp),%r14
    8e91:	mov    $0x186a0,%eax
    8e96:	cmp    $0x8,%ecx
    8e99:	jle    8f31 <png_build_gamma_table+0x111>
    8e9f:	movzbl 0x267(%r13),%ecx
    8ea7:	and    $0x2,%ecx
    8eaa:	test   %ecx,%ecx
    8eac:	jg     8f80 <png_build_gamma_table+0x160>
    8eb2:	movzbl 0x2db(%r13),%edx
    8eba:	xor    %ecx,%ecx
    8ebc:	test   %dl,%dl
    8ebe:	jne    8faf <png_build_gamma_table+0x18f>
    8ec4:	mov    0x134(%r13),%edx
    8ecb:	and    $0x4000400,%edx
    8ed1:	test   %edx,%edx
    8ed3:	jne    8fc4 <png_build_gamma_table+0x1a4>
    8ed9:	cmp    $0x8,%cl
    8edc:	jbe    8ee3 <png_build_gamma_table+0xc3>
    8ede:	mov    $0x8,%ecx
    8ee3:	test   %edx,%edx
    8ee5:	movzbl %cl,%edx
    8ee8:	mov    %rdx,-0x8(%rbp)
    8eec:	mov    %edx,0x2a0(%r13)
    8ef3:	jne    8fd7 <png_build_gamma_table+0x1b7>
    8ef9:	movslq 0x2a4(%r13),%rsi
    8f00:	test   %esi,%esi
    8f02:	jle    8f1a <png_build_gamma_table+0xfa>
    8f04:	mov    %rdx,%r15
    8f07:	movslq 0x498(%r13),%rdi
    8f0e:	callq  8ab0 <png_reciprocal2>
    8f13:	mov    %r15,%rdx
    8f16:	mov    -0x10(%rbp),%r15
    8f1a:	mov    %rax,%rcx
    8f1d:	lea    0x2b0(%r13),%rsi
    8f24:	mov    %r13,%rdi
    8f27:	callq  a440 <png_build_16bit_table>
    8f2c:	jmpq   900a <png_build_gamma_table+0x1ea>
    8f31:	movslq 0x2a4(%r13),%rcx
    8f38:	test   %ecx,%ecx
    8f3a:	jle    8f55 <png_build_gamma_table+0x135>
    8f3c:	mov    %rsi,%r15
    8f3f:	mov    %rcx,%rsi
    8f42:	movslq 0x498(%r13),%rdi
    8f49:	callq  8ab0 <png_reciprocal2>
    8f4e:	mov    %r15,%rsi
    8f51:	mov    -0x10(%rbp),%r15
    8f55:	mov    %rax,%rdx
    8f58:	mov    %r13,%rdi
    8f5b:	callq  a790 <png_build_8bit_table>
    8f60:	mov    0x134(%r13),%eax
    8f67:	and    $0x600080,%eax
    8f6c:	test   %eax,%eax
    8f6e:	jne    9026 <png_build_gamma_table+0x206>
    8f74:	mov    %r14,%r13
    8f77:	mov    %r15,%r14
    8f7a:	mov    -0x18(%rbp),%r15
    8f7e:	leaveq 
    8f7f:	retq   
    8f80:	movzbl 0x2d9(%r13),%edx
    8f88:	movzbl 0x2d8(%r13),%ecx
    8f90:	cmp    %cl,%dl
    8f92:	jbe    8f97 <png_build_gamma_table+0x177>
    8f94:	mov    %rdx,%rcx
    8f97:	movzbl 0x2da(%r13),%edx
    8f9f:	cmp    %dl,%cl
    8fa1:	jb     8eba <png_build_gamma_table+0x9a>
    8fa7:	mov    %rcx,%rdx
    8faa:	jmpq   8eba <png_build_gamma_table+0x9a>
    8faf:	cmp    $0xf,%dl
    8fb2:	ja     8ec4 <png_build_gamma_table+0xa4>
    8fb8:	mov    $0x10,%ecx
    8fbd:	sub    %dl,%cl
    8fbf:	jmpq   8ec4 <png_build_gamma_table+0xa4>
    8fc4:	cmp    $0x4,%cl
    8fc7:	ja     8ed9 <png_build_gamma_table+0xb9>
    8fcd:	mov    $0x5,%ecx
    8fd2:	jmpq   8ed9 <png_build_gamma_table+0xb9>
    8fd7:	movslq 0x2a4(%r13),%rsi
    8fde:	test   %esi,%esi
    8fe0:	jle    8ff8 <png_build_gamma_table+0x1d8>
    8fe2:	mov    %rdx,%r15
    8fe5:	movslq 0x498(%r13),%rdi
    8fec:	callq  a3e0 <png_product2>
    8ff1:	mov    %r15,%rdx
    8ff4:	mov    -0x10(%rbp),%r15
    8ff8:	mov    %rax,%rcx
    8ffb:	lea    0x2b0(%r13),%rsi
    9002:	mov    %r13,%rdi
    9005:	callq  a620 <png_build_16to8_table>
    900a:	mov    0x134(%r13),%eax
    9011:	and    $0x600080,%eax
    9016:	test   %eax,%eax
    9018:	jne    9058 <png_build_gamma_table+0x238>
    901a:	mov    %r14,%r13
    901d:	mov    %r15,%r14
    9020:	mov    -0x18(%rbp),%r15
    9024:	leaveq 
    9025:	retq   
    9026:	movslq 0x498(%r13),%rdi
    902d:	callq  8a50 <png_reciprocal>
    9032:	mov    %rax,%rdx
    9035:	lea    0x2c0(%r13),%rsi
    903c:	mov    %r13,%rdi
    903f:	callq  a790 <png_build_8bit_table>
    9044:	movslq 0x2a4(%r13),%rdi
    904b:	test   %edi,%edi
    904d:	jg     9091 <png_build_gamma_table+0x271>
    904f:	movslq 0x498(%r13),%rdx
    9056:	jmp    9099 <png_build_gamma_table+0x279>
    9058:	movslq 0x498(%r13),%rdi
    905f:	callq  8a50 <png_reciprocal>
    9064:	mov    %rax,%rcx
    9067:	lea    0x2d0(%r13),%rsi
    906e:	mov    %r13,%rdi
    9071:	mov    -0x8(%rbp),%r15
    9075:	mov    %r15,%rdx
    9078:	callq  a440 <png_build_16bit_table>
    907d:	movslq 0x2a4(%r13),%rdi
    9084:	test   %edi,%edi
    9086:	jg     90b4 <png_build_gamma_table+0x294>
    9088:	movslq 0x498(%r13),%rcx
    908f:	jmp    90bc <png_build_gamma_table+0x29c>
    9091:	callq  8a50 <png_reciprocal>
    9096:	mov    %rax,%rdx
    9099:	mov    %r13,%rdi
    909c:	lea    0x2b8(%rdi),%rsi
    90a3:	callq  a790 <png_build_8bit_table>
    90a8:	mov    %r14,%r13
    90ab:	mov    %r15,%r14
    90ae:	mov    -0x18(%rbp),%r15
    90b2:	leaveq 
    90b3:	retq   
    90b4:	callq  8a50 <png_reciprocal>
    90b9:	mov    %rax,%rcx
    90bc:	mov    %r15,%rdx
    90bf:	mov    %r13,%rdi
    90c2:	lea    0x2c8(%rdi),%rsi
    90c9:	callq  a440 <png_build_16bit_table>
    90ce:	mov    %r14,%r13
    90d1:	mov    -0x18(%rbp),%r15
    90d5:	mov    -0x10(%rbp),%r14
    90d9:	leaveq 
    90da:	retq   
    90db:	nopl   0x0(%rax,%rax,1)

00000000000090e0 <png_image_error>:
    90e0:	push   %rbp
    90e1:	mov    %rsp,%rbp
    90e4:	sub    $0x10,%rsp
    90e8:	mov    %r15,-0x8(%rbp)
    90ec:	mov    %rsi,%rcx
    90ef:	mov    %rdi,%r15
    90f2:	lea    0x24(%r15),%rdi
    90f6:	mov    $0x40,%esi
    90fb:	xor    %edx,%edx
    90fd:	callq  ad30 <png_safecat>
    9102:	mov    0x20(%r15),%eax
    9106:	or     $0x2,%eax
    9109:	mov    %eax,0x20(%r15)
    910d:	mov    %r15,%rdi
    9110:	callq  5040 <png_image_free@plt>
    9115:	xor    %eax,%eax
    9117:	mov    -0x8(%rbp),%r15
    911b:	leaveq 
    911c:	retq   
    911d:	nopl   (%rax)

0000000000009120 <png_colorspace_check_gamma>:
    9120:	push   %rbp
    9121:	mov    %rsp,%rbp
    9124:	sub    $0x20,%rsp
    9128:	mov    $0x1,%eax
    912d:	movzwl 0x4a(%rsi),%r8d
    9132:	and    $0x1,%r8d
    9136:	test   %r8d,%r8d
    9139:	jg     913d <png_colorspace_check_gamma+0x1d>
    913b:	leaveq 
    913c:	retq   
    913d:	lea    -0x1c(%rbp),%rax
    9141:	movslq (%rsi),%r8
    9144:	mov    $0x186a0,%r9d
    914a:	mov    %r15,-0x18(%rbp)
    914e:	mov    %rcx,-0x10(%rbp)
    9152:	mov    %rdi,-0x8(%rbp)
    9156:	mov    %rdx,%rcx
    9159:	mov    %r9,%rdx
    915c:	mov    %rax,%rdi
    915f:	mov    %rsi,%r15
    9162:	mov    %r8,%rsi
    9165:	callq  8980 <png_muldiv>
    916a:	test   %eax,%eax
    916c:	je     9186 <png_colorspace_check_gamma+0x66>
    916e:	movslq -0x1c(%rbp),%rdi
    9172:	callq  8b20 <png_gamma_significant>
    9177:	test   %eax,%eax
    9179:	jne    9186 <png_colorspace_check_gamma+0x66>
    917b:	mov    $0x1,%eax
    9180:	mov    -0x18(%rbp),%r15
    9184:	leaveq 
    9185:	retq   
    9186:	xor    %edx,%edx
    9188:	movzwl 0x4a(%r15),%eax
    918d:	and    $0x20,%eax
    9190:	test   %eax,%eax
    9192:	jle    91be <png_colorspace_check_gamma+0x9e>
    9194:	mov    -0x10(%rbp),%r15
    9198:	lea    0x241a7(%rip),%rsi        # 2d346 <short_months.6+0x871>
    919f:	mov    $0x2,%edx
    91a4:	mov    -0x8(%rbp),%rdi
    91a8:	callq  b140 <png_chunk_report>
    91ad:	cmp    $0x2,%r15d
    91b1:	jne    91e9 <png_colorspace_check_gamma+0xc9>
    91b3:	mov    $0x1,%eax
    91b8:	mov    -0x18(%rbp),%r15
    91bc:	leaveq 
    91bd:	retq   
    91be:	mov    -0x10(%rbp),%r15
    91c2:	cmp    $0x2,%r15d
    91c6:	je     9198 <png_colorspace_check_gamma+0x78>
    91c8:	lea    0x24197(%rip),%rsi        # 2d366 <short_months.6+0x891>
    91cf:	mov    -0x8(%rbp),%rdi
    91d3:	callq  b140 <png_chunk_report>
    91d8:	cmp    $0x1,%r15d
    91dc:	jne    91f1 <png_colorspace_check_gamma+0xd1>
    91de:	mov    $0x1,%eax
    91e3:	mov    -0x18(%rbp),%r15
    91e7:	leaveq 
    91e8:	retq   
    91e9:	xor    %eax,%eax
    91eb:	mov    -0x18(%rbp),%r15
    91ef:	leaveq 
    91f0:	retq   
    91f1:	xor    %eax,%eax
    91f3:	mov    -0x18(%rbp),%r15
    91f7:	leaveq 
    91f8:	retq   
    91f9:	nopl   0x0(%rax)

0000000000009200 <png_xy_from_XYZ>:
    9200:	push   %rbp
    9201:	mov    %rsp,%rbp
    9204:	sub    $0x50,%rsp
    9208:	mov    %rdi,-0x40(%rbp)
    920c:	mov    %rsi,-0x50(%rbp)
    9210:	movslq (%rsi),%rax
    9213:	mov    %rax,%rcx
    9216:	add    0x4(%rsi),%ecx
    9219:	add    0x8(%rsi),%ecx
    921c:	mov    %rax,%rsi
    921f:	mov    %rcx,-0x48(%rbp)
    9223:	mov    $0x186a0,%edx
    9228:	callq  8980 <png_muldiv>
    922d:	test   %eax,%eax
    922f:	jne    9238 <png_xy_from_XYZ+0x38>
    9231:	mov    $0x1,%eax
    9236:	leaveq 
    9237:	retq   
    9238:	mov    -0x40(%rbp),%rax
    923c:	lea    0x4(%rax),%rdi
    9240:	mov    -0x50(%rbp),%rax
    9244:	movslq 0x4(%rax),%rsi
    9248:	mov    $0x186a0,%edx
    924d:	mov    -0x48(%rbp),%rcx
    9251:	mov    %r15,-0x8(%rbp)
    9255:	mov    %rax,%r15
    9258:	callq  8980 <png_muldiv>
    925d:	test   %eax,%eax
    925f:	jne    926c <png_xy_from_XYZ+0x6c>
    9261:	mov    -0x8(%rbp),%r15
    9265:	mov    $0x1,%eax
    926a:	leaveq 
    926b:	retq   
    926c:	movslq (%r15),%rax
    926f:	mov    %rax,-0x28(%rbp)
    9273:	movslq 0x4(%r15),%rax
    9277:	mov    %rax,-0x18(%rbp)
    927b:	movslq 0xc(%r15),%rsi
    927f:	mov    %rsi,%rcx
    9282:	add    0x10(%r15),%ecx
    9286:	add    0x14(%r15),%ecx
    928a:	mov    %rcx,-0x38(%rbp)
    928e:	mov    -0x40(%rbp),%r15
    9292:	lea    0x8(%r15),%rdi
    9296:	mov    $0x186a0,%edx
    929b:	callq  8980 <png_muldiv>
    92a0:	test   %eax,%eax
    92a2:	jne    92af <png_xy_from_XYZ+0xaf>
    92a4:	mov    -0x8(%rbp),%r15
    92a8:	mov    $0x1,%eax
    92ad:	leaveq 
    92ae:	retq   
    92af:	lea    0xc(%r15),%rdi
    92b3:	mov    -0x50(%rbp),%r15
    92b7:	movslq 0x10(%r15),%rsi
    92bb:	mov    $0x186a0,%edx
    92c0:	mov    -0x38(%rbp),%rcx
    92c4:	callq  8980 <png_muldiv>
    92c9:	test   %eax,%eax
    92cb:	jne    92d8 <png_xy_from_XYZ+0xd8>
    92cd:	mov    -0x8(%rbp),%r15
    92d1:	mov    $0x1,%eax
    92d6:	leaveq 
    92d7:	retq   
    92d8:	movslq 0xc(%r15),%rax
    92dc:	mov    %rax,-0x20(%rbp)
    92e0:	movslq 0x10(%r15),%rax
    92e4:	mov    %rax,-0x10(%rbp)
    92e8:	movslq 0x18(%r15),%rsi
    92ec:	mov    %rsi,%rcx
    92ef:	add    0x1c(%r15),%ecx
    92f3:	add    0x20(%r15),%ecx
    92f7:	mov    %rcx,-0x30(%rbp)
    92fb:	mov    -0x40(%rbp),%r15
    92ff:	lea    0x10(%r15),%rdi
    9303:	mov    $0x186a0,%edx
    9308:	callq  8980 <png_muldiv>
    930d:	test   %eax,%eax
    930f:	jne    931c <png_xy_from_XYZ+0x11c>
    9311:	mov    -0x8(%rbp),%r15
    9315:	mov    $0x1,%eax
    931a:	leaveq 
    931b:	retq   
    931c:	lea    0x14(%r15),%rdi
    9320:	mov    -0x50(%rbp),%r15
    9324:	movslq 0x1c(%r15),%rsi
    9328:	mov    $0x186a0,%edx
    932d:	mov    -0x30(%rbp),%rcx
    9331:	callq  8980 <png_muldiv>
    9336:	test   %eax,%eax
    9338:	jne    9345 <png_xy_from_XYZ+0x145>
    933a:	mov    -0x8(%rbp),%r15
    933e:	mov    $0x1,%eax
    9343:	leaveq 
    9344:	retq   
    9345:	movslq 0x1c(%r15),%r8
    9349:	mov    -0x20(%rbp),%rcx
    934d:	mov    -0x28(%rbp),%rax
    9351:	lea    (%rcx,%rax,1),%esi
    9354:	add    0x18(%r15),%esi
    9358:	mov    -0x38(%rbp),%rcx
    935c:	mov    -0x48(%rbp),%rax
    9360:	add    %ecx,%eax
    9362:	mov    -0x30(%rbp),%rcx
    9366:	add    %eax,%ecx
    9368:	mov    %rcx,-0x50(%rbp)
    936c:	mov    -0x40(%rbp),%rax
    9370:	lea    0x18(%rax),%rdi
    9374:	mov    %r8,%r15
    9377:	mov    $0x186a0,%edx
    937c:	callq  8980 <png_muldiv>
    9381:	test   %eax,%eax
    9383:	jne    9390 <png_xy_from_XYZ+0x190>
    9385:	mov    -0x8(%rbp),%r15
    9389:	mov    $0x1,%eax
    938e:	leaveq 
    938f:	retq   
    9390:	mov    -0x10(%rbp),%rcx
    9394:	mov    -0x18(%rbp),%rax
    9398:	add    %ecx,%eax
    939a:	lea    (%r15,%rax,1),%esi
    939e:	mov    -0x40(%rbp),%rax
    93a2:	lea    0x1c(%rax),%rdi
    93a6:	mov    -0x50(%rbp),%rcx
    93aa:	mov    $0x186a0,%edx
    93af:	callq  8980 <png_muldiv>
    93b4:	test   %eax,%eax
    93b6:	jne    93c3 <png_xy_from_XYZ+0x1c3>
    93b8:	mov    -0x8(%rbp),%r15
    93bc:	mov    $0x1,%eax
    93c1:	leaveq 
    93c2:	retq   
    93c3:	xor    %eax,%eax
    93c5:	mov    -0x8(%rbp),%r15
    93c9:	leaveq 
    93ca:	retq   
    93cb:	nopl   0x0(%rax,%rax,1)

00000000000093d0 <png_XYZ_from_xy>:
    93d0:	push   %rbp
    93d1:	mov    %rsp,%rbp
    93d4:	sub    $0x40,%rsp
    93d8:	mov    $0x1,%eax
    93dd:	movslq (%rsi),%r8
    93e0:	test   %r8d,%r8d
    93e3:	jns    93e7 <png_XYZ_from_xy+0x17>
    93e5:	leaveq 
    93e6:	retq   
    93e7:	cmp    $0x186a0,%r8d
    93ee:	jle    93f2 <png_XYZ_from_xy+0x22>
    93f0:	leaveq 
    93f1:	retq   
    93f2:	movslq 0x4(%rsi),%rdx
    93f6:	test   %edx,%edx
    93f8:	jns    93fc <png_XYZ_from_xy+0x2c>
    93fa:	leaveq 
    93fb:	retq   
    93fc:	mov    $0x186a0,%ecx
    9401:	neg    %r8d
    9404:	add    %ecx,%r8d
    9407:	cmp    %r8d,%edx
    940a:	jle    940e <png_XYZ_from_xy+0x3e>
    940c:	leaveq 
    940d:	retq   
    940e:	movslq 0x8(%rsi),%r8
    9412:	test   %r8d,%r8d
    9415:	jns    9419 <png_XYZ_from_xy+0x49>
    9417:	leaveq 
    9418:	retq   
    9419:	cmp    $0x186a0,%r8d
    9420:	jle    9424 <png_XYZ_from_xy+0x54>
    9422:	leaveq 
    9423:	retq   
    9424:	movslq 0xc(%rsi),%r10
    9428:	test   %r10d,%r10d
    942b:	jns    942f <png_XYZ_from_xy+0x5f>
    942d:	leaveq 
    942e:	retq   
    942f:	mov    %rcx,%r9
    9432:	sub    %r8d,%r9d
    9435:	cmp    %r9d,%r10d
    9438:	jle    943c <png_XYZ_from_xy+0x6c>
    943a:	leaveq 
    943b:	retq   
    943c:	movslq 0x10(%rsi),%r11
    9440:	test   %r11d,%r11d
    9443:	jns    9447 <png_XYZ_from_xy+0x77>
    9445:	leaveq 
    9446:	retq   
    9447:	cmp    $0x186a0,%r11d
    944e:	jle    9452 <png_XYZ_from_xy+0x82>
    9450:	leaveq 
    9451:	retq   
    9452:	movslq 0x14(%rsi),%r10
    9456:	test   %r10d,%r10d
    9459:	jns    945d <png_XYZ_from_xy+0x8d>
    945b:	leaveq 
    945c:	retq   
    945d:	mov    %rcx,%r9
    9460:	sub    %r11d,%r9d
    9463:	cmp    %r9d,%r10d
    9466:	jle    946a <png_XYZ_from_xy+0x9a>
    9468:	leaveq 
    9469:	retq   
    946a:	movslq 0x18(%rsi),%r9
    946e:	test   %r9d,%r9d
    9471:	jns    9475 <png_XYZ_from_xy+0xa5>
    9473:	leaveq 
    9474:	retq   
    9475:	cmp    $0x186a0,%r9d
    947c:	jle    9480 <png_XYZ_from_xy+0xb0>
    947e:	leaveq 
    947f:	retq   
    9480:	mov    %rdi,-0x10(%rbp)
    9484:	movslq 0x1c(%rsi),%rdi
    9488:	cmp    $0x4,%edi
    948b:	jg     948f <png_XYZ_from_xy+0xbf>
    948d:	leaveq 
    948e:	retq   
    948f:	sub    %r9d,%ecx
    9492:	cmp    %ecx,%edi
    9494:	jle    9498 <png_XYZ_from_xy+0xc8>
    9496:	leaveq 
    9497:	retq   
    9498:	sub    %r11d,%r8d
    949b:	sub    %r10d,%edx
    949e:	lea    -0x30(%rbp),%rdi
    94a2:	mov    $0x7,%ecx
    94a7:	mov    %rsi,-0x28(%rbp)
    94ab:	mov    %r8,%rsi
    94ae:	callq  8980 <png_muldiv>
    94b3:	test   %eax,%eax
    94b5:	jne    94be <png_XYZ_from_xy+0xee>
    94b7:	mov    $0x2,%eax
    94bc:	leaveq 
    94bd:	retq   
    94be:	mov    -0x28(%rbp),%rcx
    94c2:	movslq 0xc(%rcx),%rsi
    94c6:	movslq 0x14(%rcx),%rax
    94ca:	sub    %eax,%esi
    94cc:	movslq (%rcx),%rdx
    94cf:	movslq 0x10(%rcx),%rax
    94d3:	sub    %eax,%edx
    94d5:	lea    -0x2c(%rbp),%rdi
    94d9:	mov    $0x7,%ecx
    94de:	callq  8980 <png_muldiv>
    94e3:	test   %eax,%eax
    94e5:	jne    94ee <png_XYZ_from_xy+0x11e>
    94e7:	mov    $0x2,%eax
    94ec:	leaveq 
    94ed:	retq   
    94ee:	movslq -0x30(%rbp),%rax
    94f2:	mov    %rax,-0x18(%rbp)
    94f6:	movslq -0x2c(%rbp),%rax
    94fa:	mov    %rax,-0x20(%rbp)
    94fe:	mov    -0x28(%rbp),%rcx
    9502:	movslq 0x8(%rcx),%rsi
    9506:	movslq 0x10(%rcx),%rax
    950a:	sub    %eax,%esi
    950c:	movslq 0x1c(%rcx),%rdx
    9510:	movslq 0x14(%rcx),%rax
    9514:	sub    %eax,%edx
    9516:	lea    -0x30(%rbp),%rdi
    951a:	mov    $0x7,%ecx
    951f:	callq  8980 <png_muldiv>
    9524:	test   %eax,%eax
    9526:	jne    952f <png_XYZ_from_xy+0x15f>
    9528:	mov    $0x2,%eax
    952d:	leaveq 
    952e:	retq   
    952f:	mov    -0x28(%rbp),%rcx
    9533:	movslq 0xc(%rcx),%rsi
    9537:	movslq 0x14(%rcx),%rax
    953b:	sub    %eax,%esi
    953d:	movslq 0x18(%rcx),%rdx
    9541:	movslq 0x10(%rcx),%rax
    9545:	sub    %eax,%edx
    9547:	lea    -0x2c(%rbp),%rdi
    954b:	mov    $0x7,%ecx
    9550:	callq  8980 <png_muldiv>
    9555:	test   %eax,%eax
    9557:	jne    9560 <png_XYZ_from_xy+0x190>
    9559:	mov    $0x2,%eax
    955e:	leaveq 
    955f:	retq   
    9560:	mov    -0x20(%rbp),%rax
    9564:	mov    -0x18(%rbp),%rdx
    9568:	sub    %eax,%edx
    956a:	mov    %rdx,-0x20(%rbp)
    956e:	movslq -0x30(%rbp),%rcx
    9572:	movslq -0x2c(%rbp),%rax
    9576:	sub    %eax,%ecx
    9578:	lea    -0x38(%rbp),%rdi
    957c:	mov    -0x28(%rbp),%rax
    9580:	movslq 0x1c(%rax),%rsi
    9584:	mov    %r15,-0x18(%rbp)
    9588:	mov    %rax,%r15
    958b:	callq  8980 <png_muldiv>
    9590:	test   %eax,%eax
    9592:	jne    959f <png_XYZ_from_xy+0x1cf>
    9594:	mov    -0x18(%rbp),%r15
    9598:	mov    $0x1,%eax
    959d:	leaveq 
    959e:	retq   
    959f:	movslq 0x1c(%r15),%rax
    95a3:	cmp    -0x38(%rbp),%eax
    95a6:	jl     95b3 <png_XYZ_from_xy+0x1e3>
    95a8:	mov    -0x18(%rbp),%r15
    95ac:	mov    $0x1,%eax
    95b1:	leaveq 
    95b2:	retq   
    95b3:	movslq 0x4(%r15),%rsi
    95b7:	movslq 0x14(%r15),%rax
    95bb:	sub    %eax,%esi
    95bd:	movslq 0x18(%r15),%rdx
    95c1:	movslq 0x10(%r15),%rax
    95c5:	sub    %eax,%edx
    95c7:	mov    $0x7,%ecx
    95cc:	lea    -0x30(%rbp),%rdi
    95d0:	callq  8980 <png_muldiv>
    95d5:	test   %eax,%eax
    95d7:	jne    95e4 <png_XYZ_from_xy+0x214>
    95d9:	mov    -0x18(%rbp),%r15
    95dd:	mov    $0x2,%eax
    95e2:	leaveq 
    95e3:	retq   
    95e4:	movslq (%r15),%rsi
    95e7:	movslq 0x10(%r15),%rax
    95eb:	sub    %eax,%esi
    95ed:	movslq 0x1c(%r15),%rdx
    95f1:	movslq 0x14(%r15),%rax
    95f5:	sub    %eax,%edx
    95f7:	lea    -0x2c(%rbp),%rdi
    95fb:	mov    $0x7,%ecx
    9600:	callq  8980 <png_muldiv>
    9605:	test   %eax,%eax
    9607:	jne    9614 <png_XYZ_from_xy+0x244>
    9609:	mov    -0x18(%rbp),%r15
    960d:	mov    $0x2,%eax
    9612:	leaveq 
    9613:	retq   
    9614:	movslq -0x30(%rbp),%rcx
    9618:	movslq -0x2c(%rbp),%rax
    961c:	sub    %eax,%ecx
    961e:	lea    -0x34(%rbp),%rdi
    9622:	movslq 0x1c(%r15),%rsi
    9626:	mov    -0x20(%rbp),%rdx
    962a:	callq  8980 <png_muldiv>
    962f:	test   %eax,%eax
    9631:	jne    963e <png_XYZ_from_xy+0x26e>
    9633:	mov    -0x18(%rbp),%r15
    9637:	mov    $0x1,%eax
    963c:	leaveq 
    963d:	retq   
    963e:	movslq 0x1c(%r15),%rdi
    9642:	cmp    -0x34(%rbp),%edi
    9645:	jl     9652 <png_XYZ_from_xy+0x282>
    9647:	mov    -0x18(%rbp),%r15
    964b:	mov    $0x1,%eax
    9650:	leaveq 
    9651:	retq   
    9652:	callq  8a50 <png_reciprocal>
    9657:	mov    %rax,%r15
    965a:	movslq -0x38(%rbp),%rdi
    965e:	callq  8a50 <png_reciprocal>
    9663:	movslq -0x34(%rbp),%rdi
    9667:	mov    %r14,-0x8(%rbp)
    966b:	mov    %rax,%r14
    966e:	callq  8a50 <png_reciprocal>
    9673:	add    %r14d,%eax
    9676:	neg    %eax
    9678:	add    %r15d,%eax
    967b:	test   %eax,%eax
    967d:	jg     968e <png_XYZ_from_xy+0x2be>
    967f:	mov    -0x8(%rbp),%r14
    9683:	mov    -0x18(%rbp),%r15
    9687:	mov    $0x1,%eax
    968c:	leaveq 
    968d:	retq   
    968e:	mov    -0x28(%rbp),%r14
    9692:	movslq (%r14),%rsi
    9695:	movslq -0x38(%rbp),%rcx
    9699:	mov    -0x10(%rbp),%r15
    969d:	mov    %r15,%rdi
    96a0:	mov    $0x186a0,%edx
    96a5:	mov    %rax,-0x28(%rbp)
    96a9:	callq  8980 <png_muldiv>
    96ae:	test   %eax,%eax
    96b0:	jne    96c1 <png_XYZ_from_xy+0x2f1>
    96b2:	mov    -0x8(%rbp),%r14
    96b6:	mov    -0x18(%rbp),%r15
    96ba:	mov    $0x1,%eax
    96bf:	leaveq 
    96c0:	retq   
    96c1:	lea    0x4(%r15),%rdi
    96c5:	movslq 0x4(%r14),%rsi
    96c9:	movslq -0x38(%rbp),%rcx
    96cd:	mov    $0x186a0,%edx
    96d2:	callq  8980 <png_muldiv>
    96d7:	test   %eax,%eax
    96d9:	jne    96ea <png_XYZ_from_xy+0x31a>
    96db:	mov    -0x8(%rbp),%r14
    96df:	mov    -0x18(%rbp),%r15
    96e3:	mov    $0x1,%eax
    96e8:	leaveq 
    96e9:	retq   
    96ea:	movslq 0x4(%r14),%rax
    96ee:	add    (%r14),%eax
    96f1:	mov    $0x186a0,%edx
    96f6:	mov    %rdx,%rsi
    96f9:	sub    %eax,%esi
    96fb:	lea    0x8(%r15),%rdi
    96ff:	movslq -0x38(%rbp),%rcx
    9703:	callq  8980 <png_muldiv>
    9708:	test   %eax,%eax
    970a:	jne    971b <png_XYZ_from_xy+0x34b>
    970c:	mov    -0x8(%rbp),%r14
    9710:	mov    -0x18(%rbp),%r15
    9714:	mov    $0x1,%eax
    9719:	leaveq 
    971a:	retq   
    971b:	lea    0xc(%r15),%rdi
    971f:	movslq 0x8(%r14),%rsi
    9723:	movslq -0x34(%rbp),%rcx
    9727:	mov    $0x186a0,%edx
    972c:	callq  8980 <png_muldiv>
    9731:	test   %eax,%eax
    9733:	jne    9744 <png_XYZ_from_xy+0x374>
    9735:	mov    -0x8(%rbp),%r14
    9739:	mov    -0x18(%rbp),%r15
    973d:	mov    $0x1,%eax
    9742:	leaveq 
    9743:	retq   
    9744:	lea    0x10(%r15),%rdi
    9748:	movslq 0xc(%r14),%rsi
    974c:	movslq -0x34(%rbp),%rcx
    9750:	mov    $0x186a0,%edx
    9755:	callq  8980 <png_muldiv>
    975a:	test   %eax,%eax
    975c:	jne    976d <png_XYZ_from_xy+0x39d>
    975e:	mov    -0x8(%rbp),%r14
    9762:	mov    -0x18(%rbp),%r15
    9766:	mov    $0x1,%eax
    976b:	leaveq 
    976c:	retq   
    976d:	movslq 0xc(%r14),%rax
    9771:	add    0x8(%r14),%eax
    9775:	mov    $0x186a0,%edx
    977a:	mov    %rdx,%rsi
    977d:	sub    %eax,%esi
    977f:	lea    0x14(%r15),%rdi
    9783:	movslq -0x34(%rbp),%rcx
    9787:	callq  8980 <png_muldiv>
    978c:	test   %eax,%eax
    978e:	jne    979f <png_XYZ_from_xy+0x3cf>
    9790:	mov    -0x8(%rbp),%r14
    9794:	mov    -0x18(%rbp),%r15
    9798:	mov    $0x1,%eax
    979d:	leaveq 
    979e:	retq   
    979f:	lea    0x18(%r15),%rdi
    97a3:	movslq 0x10(%r14),%rsi
    97a7:	mov    -0x28(%rbp),%rdx
    97ab:	mov    $0x186a0,%ecx
    97b0:	callq  8980 <png_muldiv>
    97b5:	test   %eax,%eax
    97b7:	jne    97c8 <png_XYZ_from_xy+0x3f8>
    97b9:	mov    -0x8(%rbp),%r14
    97bd:	mov    -0x18(%rbp),%r15
    97c1:	mov    $0x1,%eax
    97c6:	leaveq 
    97c7:	retq   
    97c8:	lea    0x1c(%r15),%rdi
    97cc:	movslq 0x14(%r14),%rsi
    97d0:	mov    -0x28(%rbp),%rdx
    97d4:	mov    $0x186a0,%ecx
    97d9:	callq  8980 <png_muldiv>
    97de:	test   %eax,%eax
    97e0:	jne    97f1 <png_XYZ_from_xy+0x421>
    97e2:	mov    -0x8(%rbp),%r14
    97e6:	mov    -0x18(%rbp),%r15
    97ea:	mov    $0x1,%eax
    97ef:	leaveq 
    97f0:	retq   
    97f1:	movslq 0x14(%r14),%rax
    97f5:	add    0x10(%r14),%eax
    97f9:	mov    $0x186a0,%ecx
    97fe:	mov    %rcx,%rsi
    9801:	sub    %eax,%esi
    9803:	lea    0x20(%r15),%rdi
    9807:	mov    -0x28(%rbp),%rdx
    980b:	callq  8980 <png_muldiv>
    9810:	test   %eax,%eax
    9812:	jne    9823 <png_XYZ_from_xy+0x453>
    9814:	mov    -0x8(%rbp),%r14
    9818:	mov    -0x18(%rbp),%r15
    981c:	mov    $0x1,%eax
    9821:	leaveq 
    9822:	retq   
    9823:	xor    %eax,%eax
    9825:	mov    -0x8(%rbp),%r14
    9829:	mov    -0x18(%rbp),%r15
    982d:	leaveq 
    982e:	retq   
    982f:	nop

0000000000009830 <png_XYZ_normalize>:
    9830:	push   %rbp
    9831:	mov    %rsp,%rbp
    9834:	sub    $0x10,%rsp
    9838:	mov    $0x1,%eax
    983d:	movslq 0x4(%rdi),%r10
    9841:	test   %r10d,%r10d
    9844:	jns    9848 <png_XYZ_normalize+0x18>
    9846:	leaveq 
    9847:	retq   
    9848:	movslq 0x10(%rdi),%r9
    984c:	test   %r9d,%r9d
    984f:	jns    9853 <png_XYZ_normalize+0x23>
    9851:	leaveq 
    9852:	retq   
    9853:	movslq 0x1c(%rdi),%r11
    9857:	test   %r11d,%r11d
    985a:	jns    985e <png_XYZ_normalize+0x2e>
    985c:	leaveq 
    985d:	retq   
    985e:	movslq (%rdi),%rsi
    9861:	test   %esi,%esi
    9863:	jns    9867 <png_XYZ_normalize+0x37>
    9865:	leaveq 
    9866:	retq   
    9867:	movslq 0xc(%rdi),%r8
    986b:	test   %r8d,%r8d
    986e:	jns    9872 <png_XYZ_normalize+0x42>
    9870:	leaveq 
    9871:	retq   
    9872:	movslq 0x18(%rdi),%rdx
    9876:	test   %edx,%edx
    9878:	jns    987c <png_XYZ_normalize+0x4c>
    987a:	leaveq 
    987b:	retq   
    987c:	movslq 0x8(%rdi),%rcx
    9880:	test   %ecx,%ecx
    9882:	jns    9886 <png_XYZ_normalize+0x56>
    9884:	leaveq 
    9885:	retq   
    9886:	movslq 0x14(%rdi),%rcx
    988a:	test   %ecx,%ecx
    988c:	jns    9890 <png_XYZ_normalize+0x60>
    988e:	leaveq 
    988f:	retq   
    9890:	movslq 0x20(%rdi),%rcx
    9894:	test   %ecx,%ecx
    9896:	jns    989a <png_XYZ_normalize+0x6a>
    9898:	leaveq 
    9899:	retq   
    989a:	mov    %r10,%rcx
    989d:	xor    $0x7fffffff,%ecx
    98a3:	cmp    %ecx,%r8d
    98a6:	jle    98aa <png_XYZ_normalize+0x7a>
    98a8:	leaveq 
    98a9:	retq   
    98aa:	lea    (%r10,%r9,1),%r8d
    98ae:	mov    %r8,%rcx
    98b1:	xor    $0x7fffffff,%ecx
    98b7:	cmp    %ecx,%edx
    98b9:	jle    98bd <png_XYZ_normalize+0x8d>
    98bb:	leaveq 
    98bc:	retq   
    98bd:	xor    %eax,%eax
    98bf:	add    %r11d,%r8d
    98c2:	cmp    $0x186a0,%r8d
    98c9:	jne    98cd <png_XYZ_normalize+0x9d>
    98cb:	leaveq 
    98cc:	retq   
    98cd:	mov    $0x186a0,%edx
    98d2:	mov    %rdi,%rax
    98d5:	mov    %r8,%rcx
    98d8:	mov    %rdi,-0x10(%rbp)
    98dc:	mov    %r8,-0x8(%rbp)
    98e0:	mov    %rax,%rdi
    98e3:	callq  8980 <png_muldiv>
    98e8:	test   %eax,%eax
    98ea:	jne    98f3 <png_XYZ_normalize+0xc3>
    98ec:	mov    $0x1,%eax
    98f1:	leaveq 
    98f2:	retq   
    98f3:	mov    -0x10(%rbp),%rax
    98f7:	lea    0x4(%rax),%rdi
    98fb:	movslq 0x4(%rax),%rsi
    98ff:	mov    $0x186a0,%edx
    9904:	mov    -0x8(%rbp),%rcx
    9908:	callq  8980 <png_muldiv>
    990d:	test   %eax,%eax
    990f:	jne    9918 <png_XYZ_normalize+0xe8>
    9911:	mov    $0x1,%eax
    9916:	leaveq 
    9917:	retq   
    9918:	mov    -0x10(%rbp),%rax
    991c:	lea    0x8(%rax),%rdi
    9920:	movslq 0x8(%rax),%rsi
    9924:	mov    $0x186a0,%edx
    9929:	mov    -0x8(%rbp),%rcx
    992d:	callq  8980 <png_muldiv>
    9932:	test   %eax,%eax
    9934:	jne    993d <png_XYZ_normalize+0x10d>
    9936:	mov    $0x1,%eax
    993b:	leaveq 
    993c:	retq   
    993d:	mov    -0x10(%rbp),%rax
    9941:	lea    0xc(%rax),%rdi
    9945:	movslq 0xc(%rax),%rsi
    9949:	mov    $0x186a0,%edx
    994e:	mov    -0x8(%rbp),%rcx
    9952:	callq  8980 <png_muldiv>
    9957:	test   %eax,%eax
    9959:	jne    9962 <png_XYZ_normalize+0x132>
    995b:	mov    $0x1,%eax
    9960:	leaveq 
    9961:	retq   
    9962:	mov    -0x10(%rbp),%rax
    9966:	lea    0x10(%rax),%rdi
    996a:	movslq 0x10(%rax),%rsi
    996e:	mov    $0x186a0,%edx
    9973:	mov    -0x8(%rbp),%rcx
    9977:	callq  8980 <png_muldiv>
    997c:	test   %eax,%eax
    997e:	jne    9987 <png_XYZ_normalize+0x157>
    9980:	mov    $0x1,%eax
    9985:	leaveq 
    9986:	retq   
    9987:	mov    -0x10(%rbp),%rax
    998b:	lea    0x14(%rax),%rdi
    998f:	movslq 0x14(%rax),%rsi
    9993:	mov    $0x186a0,%edx
    9998:	mov    -0x8(%rbp),%rcx
    999c:	callq  8980 <png_muldiv>
    99a1:	test   %eax,%eax
    99a3:	jne    99ac <png_XYZ_normalize+0x17c>
    99a5:	mov    $0x1,%eax
    99aa:	leaveq 
    99ab:	retq   
    99ac:	mov    -0x10(%rbp),%rax
    99b0:	lea    0x18(%rax),%rdi
    99b4:	movslq 0x18(%rax),%rsi
    99b8:	mov    $0x186a0,%edx
    99bd:	mov    -0x8(%rbp),%rcx
    99c1:	callq  8980 <png_muldiv>
    99c6:	test   %eax,%eax
    99c8:	jne    99d1 <png_XYZ_normalize+0x1a1>
    99ca:	mov    $0x1,%eax
    99cf:	leaveq 
    99d0:	retq   
    99d1:	mov    -0x10(%rbp),%rax
    99d5:	lea    0x1c(%rax),%rdi
    99d9:	movslq 0x1c(%rax),%rsi
    99dd:	mov    $0x186a0,%edx
    99e2:	mov    -0x8(%rbp),%rcx
    99e6:	callq  8980 <png_muldiv>
    99eb:	test   %eax,%eax
    99ed:	jne    99f6 <png_XYZ_normalize+0x1c6>
    99ef:	mov    $0x1,%eax
    99f4:	leaveq 
    99f5:	retq   
    99f6:	mov    -0x10(%rbp),%rax
    99fa:	lea    0x20(%rax),%rdi
    99fe:	movslq 0x20(%rax),%rsi
    9a02:	mov    $0x186a0,%edx
    9a07:	mov    -0x8(%rbp),%rcx
    9a0b:	callq  8980 <png_muldiv>
    9a10:	test   %eax,%eax
    9a12:	jne    9a1b <png_XYZ_normalize+0x1eb>
    9a14:	mov    $0x1,%eax
    9a19:	leaveq 
    9a1a:	retq   
    9a1b:	xor    %eax,%eax
    9a1d:	leaveq 
    9a1e:	retq   
    9a1f:	nop

0000000000009a20 <png_colorspace_endpoints_match>:
    9a20:	push   %rbp
    9a21:	mov    %rsp,%rbp
    9a24:	xor    %eax,%eax
    9a26:	movslq 0x18(%rsi),%r9
    9a2a:	mov    %r9,%rcx
    9a2d:	sub    %edx,%ecx
    9a2f:	movslq 0x18(%rdi),%r8
    9a33:	cmp    %r8d,%ecx
    9a36:	jle    9a3a <png_colorspace_endpoints_match+0x1a>
    9a38:	leaveq 
    9a39:	retq   
    9a3a:	lea    (%rdx,%r9,1),%ecx
    9a3e:	cmp    %ecx,%r8d
    9a41:	jle    9a45 <png_colorspace_endpoints_match+0x25>
    9a43:	leaveq 
    9a44:	retq   
    9a45:	movslq 0x1c(%rsi),%r9
    9a49:	mov    %r9,%rcx
    9a4c:	sub    %edx,%ecx
    9a4e:	movslq 0x1c(%rdi),%r8
    9a52:	cmp    %r8d,%ecx
    9a55:	jle    9a59 <png_colorspace_endpoints_match+0x39>
    9a57:	leaveq 
    9a58:	retq   
    9a59:	lea    (%rdx,%r9,1),%ecx
    9a5d:	cmp    %ecx,%r8d
    9a60:	jle    9a64 <png_colorspace_endpoints_match+0x44>
    9a62:	leaveq 
    9a63:	retq   
    9a64:	movslq (%rsi),%r9
    9a67:	mov    %r9,%rcx
    9a6a:	sub    %edx,%ecx
    9a6c:	movslq (%rdi),%r8
    9a6f:	cmp    %r8d,%ecx
    9a72:	jle    9a76 <png_colorspace_endpoints_match+0x56>
    9a74:	leaveq 
    9a75:	retq   
    9a76:	lea    (%rdx,%r9,1),%ecx
    9a7a:	cmp    %ecx,%r8d
    9a7d:	jle    9a81 <png_colorspace_endpoints_match+0x61>
    9a7f:	leaveq 
    9a80:	retq   
    9a81:	movslq 0x4(%rsi),%r9
    9a85:	mov    %r9,%rcx
    9a88:	sub    %edx,%ecx
    9a8a:	movslq 0x4(%rdi),%r8
    9a8e:	cmp    %r8d,%ecx
    9a91:	jle    9a95 <png_colorspace_endpoints_match+0x75>
    9a93:	leaveq 
    9a94:	retq   
    9a95:	lea    (%rdx,%r9,1),%ecx
    9a99:	cmp    %ecx,%r8d
    9a9c:	jle    9aa0 <png_colorspace_endpoints_match+0x80>
    9a9e:	leaveq 
    9a9f:	retq   
    9aa0:	movslq 0x8(%rsi),%r9
    9aa4:	mov    %r9,%rcx
    9aa7:	sub    %edx,%ecx
    9aa9:	movslq 0x8(%rdi),%r8
    9aad:	cmp    %r8d,%ecx
    9ab0:	jle    9ab4 <png_colorspace_endpoints_match+0x94>
    9ab2:	leaveq 
    9ab3:	retq   
    9ab4:	lea    (%rdx,%r9,1),%ecx
    9ab8:	cmp    %ecx,%r8d
    9abb:	jle    9abf <png_colorspace_endpoints_match+0x9f>
    9abd:	leaveq 
    9abe:	retq   
    9abf:	movslq 0xc(%rsi),%r9
    9ac3:	mov    %r9,%rcx
    9ac6:	sub    %edx,%ecx
    9ac8:	movslq 0xc(%rdi),%r8
    9acc:	cmp    %r8d,%ecx
    9acf:	jle    9ad3 <png_colorspace_endpoints_match+0xb3>
    9ad1:	leaveq 
    9ad2:	retq   
    9ad3:	lea    (%rdx,%r9,1),%ecx
    9ad7:	cmp    %ecx,%r8d
    9ada:	jle    9ade <png_colorspace_endpoints_match+0xbe>
    9adc:	leaveq 
    9add:	retq   
    9ade:	movslq 0x10(%rsi),%r8
    9ae2:	mov    %r8,%rcx
    9ae5:	sub    %edx,%ecx
    9ae7:	movslq 0x10(%rdi),%r9
    9aeb:	cmp    %r9d,%ecx
    9aee:	jle    9af2 <png_colorspace_endpoints_match+0xd2>
    9af0:	leaveq 
    9af1:	retq   
    9af2:	lea    (%rdx,%r8,1),%ecx
    9af6:	cmp    %ecx,%r9d
    9af9:	jle    9afd <png_colorspace_endpoints_match+0xdd>
    9afb:	leaveq 
    9afc:	retq   
    9afd:	movslq 0x14(%rsi),%r8
    9b01:	mov    %r8,%rcx
    9b04:	sub    %edx,%ecx
    9b06:	movslq 0x14(%rdi),%rsi
    9b0a:	cmp    %esi,%ecx
    9b0c:	jle    9b10 <png_colorspace_endpoints_match+0xf0>
    9b0e:	leaveq 
    9b0f:	retq   
    9b10:	lea    (%rdx,%r8,1),%ecx
    9b14:	cmp    %ecx,%esi
    9b16:	jle    9b1a <png_colorspace_endpoints_match+0xfa>
    9b18:	leaveq 
    9b19:	retq   
    9b1a:	mov    $0x1,%eax
    9b1f:	leaveq 
    9b20:	retq   
    9b21:	data16 nopw %cs:0x0(%rax,%rax,1)
    9b2c:	nopl   0x0(%rax)

0000000000009b30 <png_colorspace_check_xy>:
    9b30:	push   %rbp
    9b31:	mov    %rsp,%rbp
    9b34:	sub    $0x30,%rsp
    9b38:	mov    %rdi,-0x10(%rbp)
    9b3c:	mov    %rsi,-0x8(%rbp)
    9b40:	callq  93d0 <png_XYZ_from_xy>
    9b45:	test   %eax,%eax
    9b47:	je     9b4b <png_colorspace_check_xy+0x1b>
    9b49:	leaveq 
    9b4a:	retq   
    9b4b:	lea    -0x30(%rbp),%rdi
    9b4f:	mov    -0x10(%rbp),%rsi
    9b53:	callq  9200 <png_xy_from_XYZ>
    9b58:	test   %eax,%eax
    9b5a:	je     9b5e <png_colorspace_check_xy+0x2e>
    9b5c:	leaveq 
    9b5d:	retq   
    9b5e:	mov    $0x5,%edx
    9b63:	lea    -0x30(%rbp),%rsi
    9b67:	mov    -0x8(%rbp),%rdi
    9b6b:	callq  9a20 <png_colorspace_endpoints_match>
    9b70:	test   %eax,%eax
    9b72:	je     9b78 <png_colorspace_check_xy+0x48>
    9b74:	xor    %eax,%eax
    9b76:	leaveq 
    9b77:	retq   
    9b78:	mov    $0x1,%eax
    9b7d:	leaveq 
    9b7e:	retq   
    9b7f:	nop

0000000000009b80 <png_colorspace_check_XYZ>:
    9b80:	push   %rbp
    9b81:	mov    %rsp,%rbp
    9b84:	sub    $0x40,%rsp
    9b88:	mov    %rdi,-0x8(%rbp)
    9b8c:	mov    %rsi,%rdi
    9b8f:	mov    %rdi,-0x10(%rbp)
    9b93:	callq  9830 <png_XYZ_normalize>
    9b98:	test   %eax,%eax
    9b9a:	je     9b9e <png_colorspace_check_XYZ+0x1e>
    9b9c:	leaveq 
    9b9d:	retq   
    9b9e:	mov    -0x8(%rbp),%rdi
    9ba2:	mov    -0x10(%rbp),%rax
    9ba6:	mov    %rax,%rsi
    9ba9:	mov    %r15,-0x10(%rbp)
    9bad:	mov    %rax,%r15
    9bb0:	callq  9200 <png_xy_from_XYZ>
    9bb5:	test   %eax,%eax
    9bb7:	je     9bbf <png_colorspace_check_XYZ+0x3f>
    9bb9:	mov    -0x10(%rbp),%r15
    9bbd:	leaveq 
    9bbe:	retq   
    9bbf:	mov    (%r15),%rax
    9bc2:	mov    %rax,-0x34(%rbp)
    9bc6:	mov    0x8(%r15),%rax
    9bca:	mov    %rax,-0x2c(%rbp)
    9bce:	mov    0x10(%r15),%rax
    9bd2:	mov    %rax,-0x24(%rbp)
    9bd6:	mov    0x18(%r15),%rax
    9bda:	mov    %rax,-0x1c(%rbp)
    9bde:	mov    0x20(%r15),%eax
    9be2:	mov    %eax,-0x14(%rbp)
    9be5:	lea    -0x34(%rbp),%rdi
    9be9:	mov    -0x8(%rbp),%rsi
    9bed:	callq  9b30 <png_colorspace_check_xy>
    9bf2:	mov    -0x10(%rbp),%r15
    9bf6:	leaveq 
    9bf7:	retq   
    9bf8:	nopl   0x0(%rax,%rax,1)

0000000000009c00 <png_colorspace_set_xy_and_XYZ>:
    9c00:	push   %rbp
    9c01:	mov    %rsp,%rbp
    9c04:	sub    $0x30,%rsp
    9c08:	xor    %eax,%eax
    9c0a:	movzwl 0x4a(%rsi),%r10d
    9c0f:	mov    %r10,%r9
    9c12:	and    $0x8000,%r9d
    9c19:	test   %r9d,%r9d
    9c1c:	jle    9c20 <png_colorspace_set_xy_and_XYZ+0x20>
    9c1e:	leaveq 
    9c1f:	retq   
    9c20:	cmp    $0x1,%r8d
    9c24:	jle    9cc6 <png_colorspace_set_xy_and_XYZ+0xc6>
    9c2a:	mov    %r14,%rax
    9c2d:	mov    %rsi,%r14
    9c30:	mov    %rdx,%rdi
    9c33:	mov    (%rdi),%rdx
    9c36:	mov    %rdx,0x4(%r14)
    9c3a:	mov    0x8(%rdi),%rdx
    9c3e:	mov    %rdx,0xc(%r14)
    9c42:	mov    0x10(%rdi),%rdx
    9c46:	mov    %rdx,0x14(%r14)
    9c4a:	mov    0x18(%rdi),%rdx
    9c4e:	mov    %rdx,0x1c(%r14)
    9c52:	mov    (%rcx),%rdx
    9c55:	mov    %rdx,0x24(%r14)
    9c59:	mov    0x8(%rcx),%rdx
    9c5d:	mov    %rdx,0x2c(%r14)
    9c61:	mov    0x10(%rcx),%rdx
    9c65:	mov    %rdx,0x34(%r14)
    9c69:	mov    0x18(%rcx),%rdx
    9c6d:	mov    %rdx,0x3c(%r14)
    9c71:	movzwl 0x4a(%r14),%r8d
    9c76:	mov    %r8,%rdx
    9c79:	or     $0x2,%dx
    9c7d:	mov    0x20(%rcx),%ecx
    9c80:	mov    %dx,0x4a(%r14)
    9c85:	mov    %ecx,0x44(%r14)
    9c89:	lea    0x22cfc(%rip),%rsi        # 2c98c <sRGB_xy>
    9c90:	mov    $0x3e8,%edx
    9c95:	mov    %rax,-0x28(%rbp)
    9c99:	mov    %r15,-0x30(%rbp)
    9c9d:	mov    %r8,%r15
    9ca0:	callq  9a20 <png_colorspace_endpoints_match>
    9ca5:	test   %eax,%eax
    9ca7:	jne    9cde <png_colorspace_set_xy_and_XYZ+0xde>
    9ca9:	and    $0xffbd,%r15w
    9cae:	lea    0x2(%r15),%eax
    9cb2:	mov    %ax,0x4a(%r14)
    9cb7:	mov    $0x2,%eax
    9cbc:	mov    -0x30(%rbp),%r15
    9cc0:	mov    -0x28(%rbp),%r14
    9cc4:	leaveq 
    9cc5:	retq   
    9cc6:	mov    %r10,%rax
    9cc9:	and    $0x2,%eax
    9ccc:	test   %eax,%eax
    9cce:	jg     9cf7 <png_colorspace_set_xy_and_XYZ+0xf7>
    9cd0:	mov    %r14,%rax
    9cd3:	mov    %rsi,%r14
    9cd6:	mov    %rdx,%rdi
    9cd9:	jmpq   9c33 <png_colorspace_set_xy_and_XYZ+0x33>
    9cde:	or     $0x42,%r15w
    9ce3:	mov    %r15w,0x4a(%r14)
    9ce8:	mov    $0x2,%eax
    9ced:	mov    -0x30(%rbp),%r15
    9cf1:	mov    -0x28(%rbp),%r14
    9cf5:	leaveq 
    9cf6:	retq   
    9cf7:	lea    0x4(%rsi),%rax
    9cfb:	mov    $0x64,%r9d
    9d01:	mov    %rdx,%r11
    9d04:	mov    %r13,-0x10(%rbp)
    9d08:	mov    %r14,-0x18(%rbp)
    9d0c:	mov    %r15,-0x20(%rbp)
    9d10:	mov    %rdx,-0x30(%rbp)
    9d14:	mov    %rdi,-0x8(%rbp)
    9d18:	mov    %rcx,-0x28(%rbp)
    9d1c:	mov    %r9,%rdx
    9d1f:	mov    %r11,%rdi
    9d22:	mov    %r10,%r13
    9d25:	mov    %rsi,%r14
    9d28:	mov    %rax,%rsi
    9d2b:	mov    %r8,%r15
    9d2e:	callq  9a20 <png_colorspace_endpoints_match>
    9d33:	test   %eax,%eax
    9d35:	je     9d55 <png_colorspace_set_xy_and_XYZ+0x155>
    9d37:	test   %r15d,%r15d
    9d3a:	je     9d80 <png_colorspace_set_xy_and_XYZ+0x180>
    9d3c:	mov    -0x28(%rbp),%rcx
    9d40:	mov    -0x30(%rbp),%rdi
    9d44:	mov    -0x20(%rbp),%r15
    9d48:	mov    -0x18(%rbp),%rax
    9d4c:	mov    -0x10(%rbp),%r13
    9d50:	jmpq   9c33 <png_colorspace_set_xy_and_XYZ+0x33>
    9d55:	or     $0x8000,%r13w
    9d5b:	mov    %r13w,0x4a(%r14)
    9d60:	lea    0x2362a(%rip),%rsi        # 2d391 <short_months.6+0x8bc>
    9d67:	mov    -0x8(%rbp),%rdi
    9d6b:	callq  5590 <png_benign_error@plt>
    9d70:	mov    -0x20(%rbp),%r15
    9d74:	mov    -0x18(%rbp),%r14
    9d78:	mov    -0x10(%rbp),%r13
    9d7c:	xor    %eax,%eax
    9d7e:	leaveq 
    9d7f:	retq   
    9d80:	mov    $0x1,%eax
    9d85:	mov    -0x20(%rbp),%r15
    9d89:	mov    -0x18(%rbp),%r14
    9d8d:	mov    -0x10(%rbp),%r13
    9d91:	leaveq 
    9d92:	retq   
    9d93:	data16 nopw %cs:0x0(%rax,%rax,1)
    9d9e:	xchg   %ax,%ax

0000000000009da0 <png_icc_tag_char>:
    9da0:	push   %rbp
    9da1:	mov    %rsp,%rbp
    9da4:	mov    $0x3f,%eax
    9da9:	movzbl %dil,%ecx
    9dad:	cmp    $0x1f,%ecx
    9db0:	ja     9db4 <png_icc_tag_char+0x14>
    9db2:	leaveq 
    9db3:	retq   
    9db4:	cmp    $0x7e,%ecx
    9db7:	jbe    9dbb <png_icc_tag_char+0x1b>
    9db9:	leaveq 
    9dba:	retq   
    9dbb:	mov    %rcx,%rax
    9dbe:	leaveq 
    9dbf:	retq   

0000000000009dc0 <png_icc_tag_name>:
    9dc0:	push   %rbp
    9dc1:	mov    %rsp,%rbp
    9dc4:	sub    $0x20,%rsp
    9dc8:	mov    %r14,-0x18(%rbp)
    9dcc:	mov    %r15,-0x20(%rbp)
    9dd0:	mov    %r13,-0x10(%rbp)
    9dd4:	mov    %r12,-0x8(%rbp)
    9dd8:	mov    %rbx,%r12
    9ddb:	mov    %rsi,%rbx
    9dde:	mov    %rdi,%r13
    9de1:	mov    %rbx,%rdi
    9de4:	callq  9da0 <png_icc_tag_char>
    9de9:	mov    %rax,%r14
    9dec:	mov    %rbx,%rdi
    9def:	shr    $0x8,%edi
    9df2:	callq  9da0 <png_icc_tag_char>
    9df7:	mov    %rax,%r15
    9dfa:	mov    %rbx,%rdi
    9dfd:	shr    $0x10,%edi
    9e00:	callq  9da0 <png_icc_tag_char>
    9e05:	movb   $0x27,0x0(%r13)
    9e0a:	shr    $0x18,%ebx
    9e0d:	mov    %rbx,%rdi
    9e10:	mov    %rax,%rbx
    9e13:	callq  9da0 <png_icc_tag_char>
    9e18:	mov    %al,0x1(%r13)
    9e1c:	mov    %bl,0x2(%r13)
    9e20:	mov    %r15b,0x3(%r13)
    9e24:	mov    %r14b,0x4(%r13)
    9e28:	movb   $0x27,0x5(%r13)
    9e2d:	mov    %r12,%rbx
    9e30:	mov    -0x8(%rbp),%r12
    9e34:	mov    -0x10(%rbp),%r13
    9e38:	mov    -0x20(%rbp),%r15
    9e3c:	mov    -0x18(%rbp),%r14
    9e40:	leaveq 
    9e41:	retq   
    9e42:	data16 nopw %cs:0x0(%rax,%rax,1)
    9e4d:	nopl   (%rax)

0000000000009e50 <is_ICC_signature_char>:
    9e50:	push   %rbp
    9e51:	mov    %rsp,%rbp
    9e54:	mov    $0x1,%eax
    9e59:	cmp    $0x20,%rdi
    9e5d:	jne    9e61 <is_ICC_signature_char+0x11>
    9e5f:	leaveq 
    9e60:	retq   
    9e61:	cmp    $0x2f,%rdi
    9e65:	ja     9e7a <is_ICC_signature_char+0x2a>
    9e67:	cmp    $0x40,%rdi
    9e6b:	ja     9e82 <is_ICC_signature_char+0x32>
    9e6d:	xor    %ecx,%ecx
    9e6f:	cmp    $0x60,%rdi
    9e73:	ja     9e8a <is_ICC_signature_char+0x3a>
    9e75:	mov    %rcx,%rax
    9e78:	leaveq 
    9e79:	retq   
    9e7a:	cmp    $0x39,%rdi
    9e7e:	ja     9e67 <is_ICC_signature_char+0x17>
    9e80:	leaveq 
    9e81:	retq   
    9e82:	cmp    $0x5a,%rdi
    9e86:	ja     9e6d <is_ICC_signature_char+0x1d>
    9e88:	leaveq 
    9e89:	retq   
    9e8a:	cmp    $0x7a,%rdi
    9e8e:	ja     9e92 <is_ICC_signature_char+0x42>
    9e90:	leaveq 
    9e91:	retq   
    9e92:	mov    %rcx,%rax
    9e95:	leaveq 
    9e96:	retq   
    9e97:	nopw   0x0(%rax,%rax,1)

0000000000009ea0 <is_ICC_signature>:
    9ea0:	push   %rbp
    9ea1:	mov    %rsp,%rbp
    9ea4:	sub    $0x10,%rsp
    9ea8:	mov    %rdi,-0x8(%rbp)
    9eac:	shr    $0x18,%rdi
    9eb0:	callq  9e50 <is_ICC_signature_char>
    9eb5:	test   %eax,%eax
    9eb7:	jne    9ebd <is_ICC_signature+0x1d>
    9eb9:	xor    %eax,%eax
    9ebb:	leaveq 
    9ebc:	retq   
    9ebd:	mov    -0x8(%rbp),%rdi
    9ec1:	and    $0xff0000,%rdi
    9ec8:	shr    $0x10,%rdi
    9ecc:	callq  9e50 <is_ICC_signature_char>
    9ed1:	test   %eax,%eax
    9ed3:	jne    9ed9 <is_ICC_signature+0x39>
    9ed5:	xor    %eax,%eax
    9ed7:	leaveq 
    9ed8:	retq   
    9ed9:	mov    -0x8(%rbp),%rdi
    9edd:	and    $0xff00,%rdi
    9ee4:	shr    $0x8,%rdi
    9ee8:	callq  9e50 <is_ICC_signature_char>
    9eed:	test   %eax,%eax
    9eef:	jne    9ef5 <is_ICC_signature+0x55>
    9ef1:	xor    %eax,%eax
    9ef3:	leaveq 
    9ef4:	retq   
    9ef5:	mov    -0x8(%rbp),%rax
    9ef9:	movzbl %al,%edi
    9efc:	callq  9e50 <is_ICC_signature_char>
    9f01:	test   %eax,%eax
    9f03:	je     9f0c <is_ICC_signature+0x6c>
    9f05:	mov    $0x1,%eax
    9f0a:	leaveq 
    9f0b:	retq   
    9f0c:	xor    %eax,%eax
    9f0e:	leaveq 
    9f0f:	retq   

0000000000009f10 <png_icc_profile_error>:
    9f10:	push   %rbp
    9f11:	mov    %rsp,%rbp
    9f14:	sub    $0x110,%rsp
    9f1b:	mov    %rbx,-0x10(%rbp)
    9f1f:	mov    %r12,-0x18(%rbp)
    9f23:	mov    %r13,-0x20(%rbp)
    9f27:	mov    %r14,-0x28(%rbp)
    9f2b:	mov    %r15,-0x30(%rbp)
    9f2f:	mov    %rdi,-0x8(%rbp)
    9f33:	test   %rsi,%rsi
    9f36:	je     9f44 <png_icc_profile_error+0x34>
    9f38:	movzwl 0x4a(%rsi),%eax
    9f3c:	or     $0x8000,%ax
    9f40:	mov    %ax,0x4a(%rsi)
    9f44:	mov    %r8,%rbx
    9f47:	mov    %rsi,%r12
    9f4a:	mov    %rdx,%r13
    9f4d:	mov    %rcx,%r14
    9f50:	lea    -0x10c(%rbp),%rdi
    9f57:	mov    $0xc4,%esi
    9f5c:	xor    %edx,%edx
    9f5e:	lea    0x23448(%rip),%rcx        # 2d3ad <short_months.6+0x8d8>
    9f65:	callq  ad30 <png_safecat>
    9f6a:	mov    %rax,%r15
    9f6d:	mov    %r14,%rdi
    9f70:	callq  9ea0 <is_ICC_signature>
    9f75:	mov    %r13,%rcx
    9f78:	mov    %r15,%rdx
    9f7b:	mov    %rax,%r15
    9f7e:	lea    0x4f(%rdx),%rsi
    9f82:	lea    -0x10c(%rbp),%r13
    9f89:	mov    %r13,%rdi
    9f8c:	callq  ad30 <png_safecat>
    9f91:	mov    %rax,%rdx
    9f94:	lea    0x2341c(%rip),%rcx        # 2d3b7 <short_months.6+0x8e2>
    9f9b:	mov    %r13,%rdi
    9f9e:	mov    $0xc4,%esi
    9fa3:	callq  ad30 <png_safecat>
    9fa8:	test   %r15d,%r15d
    9fab:	jne    9ff6 <png_icc_profile_error+0xe6>
    9fad:	mov    %r14,%rcx
    9fb0:	mov    %rax,%r15
    9fb3:	lea    -0x48(%rbp),%rdi
    9fb7:	lea    -0x30(%rbp),%rsi
    9fbb:	mov    $0x3,%edx
    9fc0:	callq  ad80 <png_format_number>
    9fc5:	mov    %rax,%rcx
    9fc8:	mov    %r15,%rdx
    9fcb:	mov    %r13,%rdi
    9fce:	mov    $0xc4,%r14d
    9fd4:	mov    %r14,%rsi
    9fd7:	callq  ad30 <png_safecat>
    9fdc:	mov    %rax,%rdx
    9fdf:	lea    0x233d5(%rip),%rcx        # 2d3bb <short_months.6+0x8e6>
    9fe6:	mov    %r13,%rdi
    9fe9:	mov    %r14,%rsi
    9fec:	callq  ad30 <png_safecat>
    9ff1:	mov    %rax,%rdx
    9ff4:	jmp    a024 <png_icc_profile_error+0x114>
    9ff6:	mov    %r14,%rsi
    9ff9:	mov    %rax,%r14
    9ffc:	lea    -0x10c(%rbp,%r14,1),%r15
    a004:	mov    %r15,%rdi
    a007:	callq  9dc0 <png_icc_tag_name>
    a00c:	movb   $0x3a,-0x106(%rbp,%r14,1)
    a015:	movb   $0x20,0x7(%r15)
    a01a:	lea    0x8(%r14),%rdx
    a01e:	mov    $0xc4,%r14d
    a024:	mov    %rbx,%rcx
    a027:	mov    %r14,%rsi
    a02a:	mov    %r13,%rdi
    a02d:	callq  ad30 <png_safecat>
    a032:	test   %r12,%r12
    a035:	jne    a03e <png_icc_profile_error+0x12e>
    a037:	mov    $0x1,%edx
    a03c:	jmp    a043 <png_icc_profile_error+0x133>
    a03e:	mov    $0x2,%edx
    a043:	mov    %r13,%rsi
    a046:	mov    -0x8(%rbp),%rdi
    a04a:	callq  b140 <png_chunk_report>
    a04f:	mov    -0x30(%rbp),%r15
    a053:	mov    -0x28(%rbp),%r14
    a057:	mov    -0x20(%rbp),%r13
    a05b:	mov    -0x18(%rbp),%r12
    a05f:	mov    -0x10(%rbp),%rbx
    a063:	xor    %eax,%eax
    a065:	leaveq 
    a066:	retq   
    a067:	nopw   0x0(%rax,%rax,1)

000000000000a070 <icc_check_length>:
    a070:	push   %rbp
    a071:	mov    %rsp,%rbp
    a074:	cmp    $0x83,%ecx
    a07a:	jbe    a083 <icc_check_length+0x13>
    a07c:	mov    $0x1,%eax
    a081:	leaveq 
    a082:	retq   
    a083:	mov    %ecx,%ecx
    a085:	lea    0x23333(%rip),%r8        # 2d3bf <short_months.6+0x8ea>
    a08c:	callq  9f10 <png_icc_profile_error>
    a091:	leaveq 
    a092:	retq   
    a093:	data16 nopw %cs:0x0(%rax,%rax,1)
    a09e:	xchg   %ax,%ax

000000000000a0a0 <png_compare_ICC_profile_with_sRGB>:
    a0a0:	push   %rbp
    a0a1:	mov    %rsp,%rbp
    a0a4:	sub    $0x20,%rsp
    a0a8:	xor    %eax,%eax
    a0aa:	mov    0x388(%rdi),%ecx
    a0b0:	and    $0x30,%ecx
    a0b3:	cmp    $0x30,%ecx
    a0b6:	jne    a0ba <png_compare_ICC_profile_with_sRGB+0x1a>
    a0b8:	leaveq 
    a0b9:	retq   
    a0ba:	lea    0x228f7(%rip),%r11        # 2c9b8 <png_sRGB_checks>
    a0c1:	mov    $0x10000,%ecx
    a0c6:	mov    %rdx,-0x20(%rbp)
    a0ca:	mov    %r14,-0x10(%rbp)
    a0ce:	mov    %r15,-0x18(%rbp)
    a0d2:	mov    %rax,%r8
    a0d5:	mov    %r8,%r10
    a0d8:	jmp    a114 <png_compare_ICC_profile_with_sRGB+0x74>
    a0da:	mov    %r10d,%r14d
    a0dd:	shl    $0x5,%r14
    a0e1:	mov    0xc(%r11,%r14,1),%r15d
    a0e6:	movzbl 0x54(%rsi),%r9d
    a0eb:	shl    $0x18,%r9d
    a0ef:	movzbl 0x55(%rsi),%edx
    a0f3:	shl    $0x10,%edx
    a0f6:	add    %edx,%r9d
    a0f9:	movzbl 0x56(%rsi),%edx
    a0fd:	shl    $0x8,%edx
    a100:	add    %r9d,%edx
    a103:	movzbl 0x57(%rsi),%r9d
    a108:	add    %r9d,%edx
    a10b:	cmp    %edx,%r15d
    a10e:	je     a124 <png_compare_ICC_profile_with_sRGB+0x84>
    a110:	add    $0x1,%r10d
    a114:	cmp    $0x6,%r10d
    a118:	jbe    a0da <png_compare_ICC_profile_with_sRGB+0x3a>
    a11a:	mov    -0x18(%rbp),%r15
    a11e:	mov    -0x10(%rbp),%r14
    a122:	leaveq 
    a123:	retq   
    a124:	mov    0x10(%r11,%r14,1),%r15d
    a129:	movzbl 0x58(%rsi),%edx
    a12d:	shl    $0x18,%edx
    a130:	movzbl 0x59(%rsi),%r9d
    a135:	shl    $0x10,%r9d
    a139:	add    %edx,%r9d
    a13c:	movzbl 0x5a(%rsi),%edx
    a140:	shl    $0x8,%edx
    a143:	add    %r9d,%edx
    a146:	movzbl 0x5b(%rsi),%r9d
    a14b:	add    %r9d,%edx
    a14e:	cmp    %edx,%r15d
    a151:	jne    a110 <png_compare_ICC_profile_with_sRGB+0x70>
    a153:	mov    0x14(%r11,%r14,1),%r15d
    a158:	movzbl 0x5c(%rsi),%r9d
    a15d:	shl    $0x18,%r9d
    a161:	movzbl 0x5d(%rsi),%edx
    a165:	shl    $0x10,%edx
    a168:	add    %edx,%r9d
    a16b:	movzbl 0x5e(%rsi),%edx
    a16f:	shl    $0x8,%edx
    a172:	add    %r9d,%edx
    a175:	movzbl 0x5f(%rsi),%r9d
    a17a:	add    %r9d,%edx
    a17d:	cmp    %edx,%r15d
    a180:	jne    a110 <png_compare_ICC_profile_with_sRGB+0x70>
    a182:	mov    0x18(%r11,%r14,1),%r15d
    a187:	movzbl 0x60(%rsi),%r9d
    a18c:	shl    $0x18,%r9d
    a190:	movzbl 0x61(%rsi),%edx
    a194:	shl    $0x10,%edx
    a197:	add    %edx,%r9d
    a19a:	movzbl 0x62(%rsi),%edx
    a19e:	shl    $0x8,%edx
    a1a1:	add    %r9d,%edx
    a1a4:	movzbl 0x63(%rsi),%r9d
    a1a9:	add    %r9d,%edx
    a1ac:	cmp    %edx,%r15d
    a1af:	jne    a110 <png_compare_ICC_profile_with_sRGB+0x70>
    a1b5:	test   %r8d,%r8d
    a1b8:	jne    a1f9 <png_compare_ICC_profile_with_sRGB+0x159>
    a1ba:	movzbl 0x1(%rsi),%ecx
    a1be:	shl    $0x10,%ecx
    a1c1:	movzbl 0x2(%rsi),%edx
    a1c5:	shl    $0x8,%edx
    a1c8:	add    %ecx,%edx
    a1ca:	movzbl (%rsi),%ecx
    a1cd:	shl    $0x18,%ecx
    a1d0:	add    %ecx,%edx
    a1d2:	movzbl 0x3(%rsi),%ecx
    a1d6:	lea    (%rdx,%rcx,1),%r8d
    a1da:	movzbl 0x40(%rsi),%edx
    a1de:	shl    $0x18,%edx
    a1e1:	movzbl 0x41(%rsi),%ecx
    a1e5:	shl    $0x10,%ecx
    a1e8:	add    %ecx,%edx
    a1ea:	movzbl 0x42(%rsi),%ecx
    a1ee:	shl    $0x8,%ecx
    a1f1:	add    %edx,%ecx
    a1f3:	movzbl 0x43(%rsi),%edx
    a1f7:	add    %edx,%ecx
    a1f9:	mov    0x8(%r11,%r14,1),%edx
    a1fe:	cmp    %r8d,%edx
    a201:	jne    a110 <png_compare_ICC_profile_with_sRGB+0x70>
    a207:	movzwl 0x1e(%r11,%r14,1),%r8d
    a20d:	cmp    %ecx,%r8d
    a210:	je     a21a <png_compare_ICC_profile_with_sRGB+0x17a>
    a212:	mov    %rdx,%r8
    a215:	jmpq   a110 <png_compare_ICC_profile_with_sRGB+0x70>
    a21a:	mov    -0x20(%rbp),%rcx
    a21e:	test   %rcx,%rcx
    a221:	je     a228 <png_compare_ICC_profile_with_sRGB+0x188>
    a223:	mov    %rdi,%r15
    a226:	jmp    a275 <png_compare_ICC_profile_with_sRGB+0x1d5>
    a228:	mov    %rax,%r8
    a22b:	mov    %rax,%rcx
    a22e:	mov    %r12,-0x8(%rbp)
    a232:	mov    %r13,-0x20(%rbp)
    a236:	mov    %rdx,%r12
    a239:	mov    %rcx,%rdx
    a23c:	mov    %rsi,%r13
    a23f:	mov    %r8,%rsi
    a242:	mov    %rdi,%r15
    a245:	mov    %rax,%rdi
    a248:	callq  5550 <adler32@plt>
    a24d:	mov    %rax,%rdi
    a250:	mov    %r13,%rsi
    a253:	mov    %r12,%rdx
    a256:	callq  5550 <adler32@plt>
    a25b:	mov    %rax,%rcx
    a25e:	mov    %r12,%rdx
    a261:	mov    %r13,%rsi
    a264:	xor    %eax,%eax
    a266:	lea    0x2274b(%rip),%r11        # 2c9b8 <png_sRGB_checks>
    a26d:	mov    -0x20(%rbp),%r13
    a271:	mov    -0x8(%rbp),%r12
    a275:	mov    (%r14,%r11,1),%edi
    a279:	cmp    %rcx,%rdi
    a27c:	je     a2a0 <png_compare_ICC_profile_with_sRGB+0x200>
    a27e:	mov    %r15,%rdi
    a281:	mov    %rax,%r14
    a284:	lea    0x23186(%rip),%rsi        # 2d411 <short_months.6+0x93c>
    a28b:	mov    %r14,%rdx
    a28e:	callq  b140 <png_chunk_report>
    a293:	mov    %r14,%rax
    a296:	mov    -0x18(%rbp),%r15
    a29a:	mov    -0x10(%rbp),%r14
    a29e:	leaveq 
    a29f:	retq   
    a2a0:	mov    %rax,%rdi
    a2a3:	mov    %rax,%rcx
    a2a6:	mov    %r12,-0x8(%rbp)
    a2aa:	mov    %r13,-0x20(%rbp)
    a2ae:	mov    %rdx,%r12
    a2b1:	mov    %rcx,%rdx
    a2b4:	mov    %rsi,%r13
    a2b7:	mov    %rdi,%rsi
    a2ba:	mov    %rax,%rdi
    a2bd:	callq  51c0 <crc32@plt>
    a2c2:	mov    %r12,%rdx
    a2c5:	mov    %r13,%rsi
    a2c8:	mov    %rax,%rdi
    a2cb:	callq  51c0 <crc32@plt>
    a2d0:	lea    0x226e1(%rip),%r12        # 2c9b8 <png_sRGB_checks>
    a2d7:	mov    0x4(%r12,%r14,1),%ecx
    a2dc:	cmp    %rax,%rcx
    a2df:	je     a2ed <png_compare_ICC_profile_with_sRGB+0x24d>
    a2e1:	xor    %eax,%eax
    a2e3:	mov    -0x20(%rbp),%r13
    a2e7:	mov    -0x8(%rbp),%r12
    a2eb:	jmp    a27e <png_compare_ICC_profile_with_sRGB+0x1de>
    a2ed:	movzbl 0x1d(%r12,%r14,1),%eax
    a2f3:	test   %al,%al
    a2f5:	jne    a314 <png_compare_ICC_profile_with_sRGB+0x274>
    a2f7:	movzbl 0x1c(%r12,%r14,1),%eax
    a2fd:	test   %al,%al
    a2ff:	jne    a328 <png_compare_ICC_profile_with_sRGB+0x288>
    a301:	mov    %r15,%rdi
    a304:	lea    0x230db(%rip),%rsi        # 2d3e6 <short_months.6+0x911>
    a30b:	xor    %edx,%edx
    a30d:	callq  b140 <png_chunk_report>
    a312:	jmp    a328 <png_compare_ICC_profile_with_sRGB+0x288>
    a314:	mov    %r15,%rdi
    a317:	lea    0x230ab(%rip),%rsi        # 2d3c9 <short_months.6+0x8f4>
    a31e:	mov    $0x2,%edx
    a323:	callq  b140 <png_chunk_report>
    a328:	movzbl 0x1d(%r12,%r14,1),%eax
    a32e:	add    $0x1,%eax
    a331:	mov    -0x18(%rbp),%r15
    a335:	mov    -0x10(%rbp),%r14
    a339:	mov    -0x20(%rbp),%r13
    a33d:	mov    -0x8(%rbp),%r12
    a341:	leaveq 
    a342:	retq   
    a343:	data16 nopw %cs:0x0(%rax,%rax,1)
    a34e:	xchg   %ax,%ax

000000000000a350 <png_gt>:
    a350:	push   %rbp
    a351:	mov    %rsp,%rbp
    a354:	cmp    %rdi,%rsi
    a357:	jae    a360 <png_gt+0x10>
    a359:	mov    $0x1,%eax
    a35e:	leaveq 
    a35f:	retq   
    a360:	xor    %eax,%eax
    a362:	leaveq 
    a363:	retq   
    a364:	data16 nopw %cs:0x0(%rax,%rax,1)
    a36f:	nop

000000000000a370 <png_pow10>:
    a370:	push   %rbp
    a371:	mov    %rsp,%rbp
    a374:	test   %edi,%edi
    a376:	js     a394 <png_pow10+0x24>
    a378:	xor    %eax,%eax
    a37a:	movsd  0x230f6(%rip),%xmm2        # 2d478 <short_months.6+0x9a3>
    a382:	test   %edi,%edi
    a384:	jle    a3a2 <png_pow10+0x32>
    a386:	movsd  0x230e2(%rip),%xmm1        # 2d470 <short_months.6+0x99b>
    a38e:	movapd %xmm2,%xmm0
    a392:	jmp    a3ac <png_pow10+0x3c>
    a394:	cmp    $0xfffffecd,%edi
    a39a:	jge    a3c6 <png_pow10+0x56>
    a39c:	xorpd  %xmm0,%xmm0
    a3a0:	leaveq 
    a3a1:	retq   
    a3a2:	movapd %xmm2,%xmm0
    a3a6:	leaveq 
    a3a7:	retq   
    a3a8:	mulsd  %xmm1,%xmm1
    a3ac:	mov    %rdi,%rcx
    a3af:	and    $0x1,%ecx
    a3b2:	test   %ecx,%ecx
    a3b4:	jle    a3ba <png_pow10+0x4a>
    a3b6:	mulsd  %xmm1,%xmm0
    a3ba:	sar    %edi
    a3bc:	test   %edi,%edi
    a3be:	jg     a3a8 <png_pow10+0x38>
    a3c0:	test   %eax,%eax
    a3c2:	jg     a3cf <png_pow10+0x5f>
    a3c4:	leaveq 
    a3c5:	retq   
    a3c6:	neg    %edi
    a3c8:	mov    $0x1,%eax
    a3cd:	jmp    a37a <png_pow10+0xa>
    a3cf:	divsd  %xmm0,%xmm2
    a3d3:	movapd %xmm2,%xmm0
    a3d7:	leaveq 
    a3d8:	retq   
    a3d9:	nopl   0x0(%rax)

000000000000a3e0 <png_product2>:
    a3e0:	push   %rbp
    a3e1:	mov    %rsp,%rbp
    a3e4:	cvtsi2sd %edi,%xmm1
    a3e8:	movsd  0x230c8(%rip),%xmm0        # 2d4b8 <short_months.6+0x9e3>
    a3f0:	mulsd  %xmm0,%xmm1
    a3f4:	cvtsi2sd %esi,%xmm0
    a3f8:	mulsd  %xmm1,%xmm0
    a3fc:	movsd  0x23054(%rip),%xmm1        # 2d458 <short_months.6+0x983>
    a404:	addsd  %xmm1,%xmm0
    a408:	callq  57e0 <floor@plt>
    a40d:	movsd  0x23053(%rip),%xmm1        # 2d468 <short_months.6+0x993>
    a415:	ucomisd %xmm1,%xmm0
    a419:	jp     a41d <png_product2+0x3d>
    a41b:	jbe    a421 <png_product2+0x41>
    a41d:	xor    %eax,%eax
    a41f:	leaveq 
    a420:	retq   
    a421:	movsd  0x23037(%rip),%xmm1        # 2d460 <short_months.6+0x98b>
    a429:	ucomisd %xmm1,%xmm0
    a42d:	jae    a433 <png_product2+0x53>
    a42f:	xor    %eax,%eax
    a431:	leaveq 
    a432:	retq   
    a433:	cvttsd2si %xmm0,%eax
    a437:	leaveq 
    a438:	retq   
    a439:	nopl   0x0(%rax)

000000000000a440 <png_build_16bit_table>:
    a440:	push   %rbp
    a441:	mov    %rsp,%rbp
    a444:	sub    $0x80,%rsp
    a44b:	mov    %r12,-0x50(%rbp)
    a44f:	mov    %r13,-0x58(%rbp)
    a453:	mov    %r14,-0x60(%rbp)
    a457:	mov    %r15,-0x68(%rbp)
    a45b:	mov    %rdx,-0x70(%rbp)
    a45f:	mov    %rbx,-0x48(%rbp)
    a463:	mov    %rsi,%rbx
    a466:	mov    %rdi,%r12
    a469:	mov    %rcx,%r13
    a46c:	mov    %rdx,%r14
    a46f:	mov    %r12,-0x40(%rbp)
    a473:	mov    %r13,%rdi
    a476:	callq  8b20 <png_gamma_significant>
    a47b:	mov    %rax,-0x78(%rbp)
    a47f:	mov    $0x10,%ecx
    a484:	sub    %r14d,%ecx
    a487:	mov    %r13,%rdx
    a48a:	mov    %rax,%r13
    a48d:	mov    $0x1,%r15d
    a493:	mov    %r15,%rax
    a496:	shl    %cl,%eax
    a498:	add    $0xffffffff,%eax
    a49b:	mov    %rax,-0x30(%rbp)
    a49f:	cvtsi2sd %eax,%xmm1
    a4a3:	movsd  0x22fcd(%rip),%xmm0        # 2d478 <short_months.6+0x9a3>
    a4ab:	divsd  %xmm1,%xmm0
    a4af:	movdqu %xmm0,-0x10(%rbp)
    a4b4:	cvtsi2sd %edx,%xmm0
    a4b8:	movsd  0x22ff8(%rip),%xmm1        # 2d4b8 <short_months.6+0x9e3>
    a4c0:	mulsd  %xmm1,%xmm0
    a4c4:	movdqu %xmm0,-0x20(%rbp)
    a4c9:	mov    $0xf,%ecx
    a4ce:	sub    %r14d,%ecx
    a4d1:	mov    %r15,%rax
    a4d4:	shl    %cl,%eax
    a4d6:	mov    %rax,-0x38(%rbp)
    a4da:	mov    $0x8,%ecx
    a4df:	sub    %r14d,%ecx
    a4e2:	shl    %cl,%r15d
    a4e5:	mov    %r15,-0x80(%rbp)
    a4e9:	mov    %r15d,%esi
    a4ec:	shl    $0x3,%rsi
    a4f0:	mov    %rcx,%r14
    a4f3:	mov    %r12,%rdi
    a4f6:	callq  5780 <png_calloc@plt>
    a4fb:	mov    %rax,-0x28(%rbp)
    a4ff:	mov    %rax,(%rbx)
    a502:	mov    %r14,%rcx
    a505:	mov    %rax,%r14
    a508:	mov    %r12,%rdi
    a50b:	mov    $0x200,%esi
    a510:	xor    %ebx,%ebx
    a512:	mov    -0x70(%rbp),%r12
    a516:	jmp    a58f <png_build_16bit_table+0x14f>
    a518:	mov    %r14,%rax
    a51b:	shl    %cl,%eax
    a51d:	add    %ebx,%eax
    a51f:	mov    %eax,%eax
    a521:	cvtsi2sd %rax,%xmm0
    a526:	mov    %rcx,%r15
    a529:	mulsd  %xmm2,%xmm0
    a52d:	callq  5360 <pow@plt>
    a532:	movsd  0x22f76(%rip),%xmm1        # 2d4b0 <short_months.6+0x9db>
    a53a:	mulsd  %xmm1,%xmm0
    a53e:	movsd  0x22f12(%rip),%xmm1        # 2d458 <short_months.6+0x983>
    a546:	addsd  %xmm1,%xmm0
    a54a:	callq  57e0 <floor@plt>
    a54f:	cvttsd2si %xmm0,%rcx
    a554:	mov    %r14d,%eax
    a557:	mov    %cx,0x0(%r13,%rax,2)
    a55d:	add    $0x1,%r14d
    a561:	mov    %r15,%rcx
    a564:	movdqu -0x20(%rbp),%xmm1
    a569:	movdqu -0x10(%rbp),%xmm2
    a56e:	cmp    $0xff,%r14d
    a575:	jbe    a518 <png_build_16bit_table+0xd8>
    a577:	mov    -0x28(%rbp),%r14
    a57b:	mov    -0x78(%rbp),%r13
    a57f:	add    $0x1,%ebx
    a582:	mov    $0x200,%esi
    a587:	mov    -0x40(%rbp),%rdi
    a58b:	mov    -0x80(%rbp),%r15
    a58f:	cmp    %r15d,%ebx
    a592:	jb     a5aa <png_build_16bit_table+0x16a>
    a594:	mov    -0x48(%rbp),%rbx
    a598:	mov    -0x68(%rbp),%r15
    a59c:	mov    -0x60(%rbp),%r14
    a5a0:	mov    -0x58(%rbp),%r13
    a5a4:	mov    -0x50(%rbp),%r12
    a5a8:	leaveq 
    a5a9:	retq   
    a5aa:	mov    %rcx,%r15
    a5ad:	callq  5800 <png_malloc@plt>
    a5b2:	test   %r13d,%r13d
    a5b5:	mov    %ebx,%ecx
    a5b7:	mov    %rax,(%r14,%rcx,8)
    a5bb:	je     a5d2 <png_build_16bit_table+0x192>
    a5bd:	mov    %r15,%rcx
    a5c0:	mov    %rax,%r13
    a5c3:	xor    %r14d,%r14d
    a5c6:	movdqu -0x20(%rbp),%xmm1
    a5cb:	movdqu -0x10(%rbp),%xmm2
    a5d0:	jmp    a56e <png_build_16bit_table+0x12e>
    a5d2:	mov    %r15,%rcx
    a5d5:	mov    %rax,%r15
    a5d8:	xor    %esi,%esi
    a5da:	mov    -0x30(%rbp),%rdi
    a5de:	mov    -0x38(%rbp),%r8
    a5e2:	jmp    a60b <png_build_16bit_table+0x1cb>
    a5e4:	mov    %rsi,%rax
    a5e7:	shl    %cl,%eax
    a5e9:	test   %r12d,%r12d
    a5ec:	lea    (%rbx,%rax,1),%eax
    a5ef:	je     a601 <png_build_16bit_table+0x1c1>
    a5f1:	mov    %rax,%rdx
    a5f4:	shl    $0x10,%edx
    a5f7:	sub    %eax,%edx
    a5f9:	lea    (%r8,%rdx,1),%eax
    a5fd:	xor    %edx,%edx
    a5ff:	div    %edi
    a601:	mov    %esi,%edx
    a603:	mov    %ax,(%r15,%rdx,2)
    a608:	add    $0x1,%esi
    a60b:	cmp    $0xff,%esi
    a611:	jbe    a5e4 <png_build_16bit_table+0x1a4>
    a613:	jmpq   a57f <png_build_16bit_table+0x13f>
    a618:	nopl   0x0(%rax,%rax,1)

000000000000a620 <png_build_16to8_table>:
    a620:	push   %rbp
    a621:	mov    %rsp,%rbp
    a624:	sub    $0x40,%rsp
    a628:	mov    %rcx,-0x30(%rbp)
    a62c:	mov    %rbx,-0x8(%rbp)
    a630:	mov    %r12,-0x10(%rbp)
    a634:	mov    %r13,-0x18(%rbp)
    a638:	mov    %r14,-0x20(%rbp)
    a63c:	mov    %r15,-0x28(%rbp)
    a640:	mov    %rdx,-0x40(%rbp)
    a644:	mov    $0x8,%ecx
    a649:	sub    %edx,%ecx
    a64b:	mov    %rsi,%rbx
    a64e:	mov    %rdi,%r13
    a651:	mov    $0x1,%r12d
    a657:	shl    %cl,%r12d
    a65a:	mov    %rcx,-0x38(%rbp)
    a65e:	mov    %r12d,%esi
    a661:	shl    $0x3,%rsi
    a665:	mov    %r13,%rdi
    a668:	callq  5780 <png_calloc@plt>
    a66d:	mov    %rax,(%rbx)
    a670:	mov    %rax,%rbx
    a673:	mov    $0x200,%r15d
    a679:	xor    %r14d,%r14d
    a67c:	jmp    a694 <png_build_16to8_table+0x74>
    a67e:	mov    %r13,%rdi
    a681:	mov    %r15,%rsi
    a684:	callq  5800 <png_malloc@plt>
    a689:	mov    %r14d,%ecx
    a68c:	mov    %rax,(%rbx,%rcx,8)
    a690:	add    $0x1,%r14d
    a694:	cmp    %r12d,%r14d
    a697:	jb     a67e <png_build_16to8_table+0x5e>
    a699:	mov    $0xff,%r12d
    a69f:	mov    -0x40(%rbp),%rcx
    a6a3:	shr    %cl,%r12d
    a6a6:	mov    %rcx,%rax
    a6a9:	mov    $0x10,%ecx
    a6ae:	sub    %eax,%ecx
    a6b0:	mov    $0x1,%eax
    a6b5:	shl    %cl,%eax
    a6b7:	lea    -0x1(%rax),%r14d
    a6bb:	mov    -0x38(%rbp),%rcx
    a6bf:	xor    %r13d,%r13d
    a6c2:	mov    -0x30(%rbp),%rsi
    a6c6:	mov    %r13,%rax
    a6c9:	jmp    a6f5 <png_build_16to8_table+0xd5>
    a6cb:	mov    %r13,%rdi
    a6ce:	and    %r12d,%edi
    a6d1:	mov    %edi,%edi
    a6d3:	mov    (%rbx,%rdi,8),%rdi
    a6d7:	mov    %r13,%r8
    a6da:	shr    %cl,%r8d
    a6dd:	mov    %r8d,%r8d
    a6e0:	mov    %dx,(%rdi,%r8,2)
    a6e5:	add    $0x1,%r13d
    a6e9:	cmp    %esi,%r13d
    a6ec:	jb     a6cb <png_build_16to8_table+0xab>
    a6ee:	add    $0x1,%eax
    a6f1:	mov    -0x30(%rbp),%rsi
    a6f5:	cmp    $0xfe,%eax
    a6fa:	jbe    a705 <png_build_16to8_table+0xe5>
    a6fc:	mov    $0x100,%eax
    a701:	shl    %cl,%eax
    a703:	jmp    a76a <png_build_16to8_table+0x14a>
    a705:	mov    %rax,%rdx
    a708:	shl    $0x8,%edx
    a70b:	add    %eax,%edx
    a70d:	mov    %rdx,-0x38(%rbp)
    a711:	movzwl %dx,%edx
    a714:	lea    0x80(%rdx),%edi
    a71a:	mov    %rax,-0x40(%rbp)
    a71e:	mov    %rcx,%r15
    a721:	callq  8b80 <png_gamma_16bit_correct>
    a726:	movzwl %ax,%eax
    a729:	imul   %r14d,%eax
    a72d:	lea    0x8000(%rax),%edx
    a733:	mov    %r15,%rcx
    a736:	mov    $0x80008001,%eax
    a73b:	mul    %edx
    a73d:	shr    $0xf,%edx
    a740:	lea    0x1(%rdx),%esi
    a743:	mov    -0x40(%rbp),%rax
    a747:	mov    -0x38(%rbp),%rdx
    a74b:	jmp    a6e9 <png_build_16to8_table+0xc9>
    a74d:	mov    %r12,%rdx
    a750:	and    %r13d,%edx
    a753:	mov    %edx,%edx
    a755:	mov    (%rbx,%rdx,8),%rdx
    a759:	mov    %r13,%rsi
    a75c:	shr    %cl,%esi
    a75e:	mov    %esi,%esi
    a760:	movw   $0xffff,(%rdx,%rsi,2)
    a766:	add    $0x1,%r13d
    a76a:	cmp    %r13d,%eax
    a76d:	ja     a74d <png_build_16to8_table+0x12d>
    a76f:	mov    -0x28(%rbp),%r15
    a773:	mov    -0x20(%rbp),%r14
    a777:	mov    -0x18(%rbp),%r13
    a77b:	mov    -0x10(%rbp),%r12
    a77f:	mov    -0x8(%rbp),%rbx
    a783:	leaveq 
    a784:	retq   
    a785:	data16 nopw %cs:0x0(%rax,%rax,1)

000000000000a790 <png_build_8bit_table>:
    a790:	push   %rbp
    a791:	mov    %rsp,%rbp
    a794:	sub    $0x20,%rsp
    a798:	mov    %r13,-0x8(%rbp)
    a79c:	mov    %r14,-0x10(%rbp)
    a7a0:	mov    %r15,-0x18(%rbp)
    a7a4:	mov    %rsi,%r13
    a7a7:	mov    %rdx,%r14
    a7aa:	mov    %rdi,%r15
    a7ad:	mov    %r14,%rdi
    a7b0:	callq  8b20 <png_gamma_significant>
    a7b5:	mov    %r15,%rdi
    a7b8:	mov    %rax,%r15
    a7bb:	mov    $0x100,%esi
    a7c0:	callq  5800 <png_malloc@plt>
    a7c5:	mov    %rax,0x0(%r13)
    a7c9:	xor    %r13d,%r13d
    a7cc:	test   %r15d,%r15d
    a7cf:	je     a7e1 <png_build_8bit_table+0x51>
    a7d1:	mov    %rax,%r15
    a7d4:	jmp    a80e <png_build_8bit_table+0x7e>
    a7d6:	mov    %r13d,%ecx
    a7d9:	mov    %r13b,(%rax,%rcx,1)
    a7dd:	add    $0x1,%r13d
    a7e1:	cmp    $0xff,%r13d
    a7e8:	jbe    a7d6 <png_build_8bit_table+0x46>
    a7ea:	mov    -0x18(%rbp),%r15
    a7ee:	mov    -0x10(%rbp),%r14
    a7f2:	mov    -0x8(%rbp),%r13
    a7f6:	leaveq 
    a7f7:	retq   
    a7f8:	mov    %r13,%rdi
    a7fb:	mov    %r14,%rsi
    a7fe:	callq  8bf0 <png_gamma_8bit_correct>
    a803:	mov    %r13d,%ecx
    a806:	mov    %al,(%r15,%rcx,1)
    a80a:	add    $0x1,%r13d
    a80e:	cmp    $0xff,%r13d
    a815:	jbe    a7f8 <png_build_8bit_table+0x68>
    a817:	mov    -0x18(%rbp),%r15
    a81b:	mov    -0x10(%rbp),%r14
    a81f:	mov    -0x8(%rbp),%r13
    a823:	leaveq 
    a824:	retq   
    a825:	data16 nopw %cs:0x0(%rax,%rax,1)

000000000000a830 <png_image_free_function>:
    a830:	push   %rbp
    a831:	mov    %rsp,%rbp
    a834:	sub    $0x40,%rsp
    a838:	xor    %eax,%eax
    a83a:	mov    (%rdi),%rsi
    a83d:	mov    (%rsi),%rdx
    a840:	test   %rdx,%rdx
    a843:	jne    a847 <png_image_free_function+0x17>
    a845:	leaveq 
    a846:	retq   
    a847:	mov    0x28(%rsi),%eax
    a84a:	mov    %rax,%rcx
    a84d:	and    $0x2,%ecx
    a850:	test   %ecx,%ecx
    a852:	jg     a8b2 <png_image_free_function+0x82>
    a854:	lea    -0x40(%rbp),%rcx
    a858:	mov    (%rsi),%rax
    a85b:	mov    %rax,(%rcx)
    a85e:	mov    0x8(%rsi),%rax
    a862:	mov    %rax,0x8(%rcx)
    a866:	mov    0x10(%rsi),%rax
    a86a:	mov    %rax,0x10(%rcx)
    a86e:	mov    0x18(%rsi),%rax
    a872:	mov    %rax,0x18(%rcx)
    a876:	mov    0x20(%rsi),%rax
    a87a:	mov    %rax,0x20(%rcx)
    a87e:	mov    0x28(%rsi),%rax
    a882:	mov    %rax,0x28(%rcx)
    a886:	mov    %rcx,(%rdi)
    a889:	mov    (%rcx),%rdi
    a88c:	callq  5790 <png_free@plt>
    a891:	lea    -0x40(%rbp),%rdi
    a895:	lea    0x8(%rdi),%rsi
    a899:	movslq 0x28(%rdi),%rax
    a89d:	and    $0x1,%eax
    a8a0:	test   %eax,%eax
    a8a2:	jg     a8f8 <png_image_free_function+0xc8>
    a8a4:	xor    %edx,%edx
    a8a6:	callq  54b0 <png_destroy_read_struct@plt>
    a8ab:	mov    $0x1,%eax
    a8b0:	leaveq 
    a8b1:	retq   
    a8b2:	and    $0xfffffffd,%eax
    a8b5:	mov    0x108(%rdx),%rcx
    a8bc:	mov    %eax,0x28(%rsi)
    a8bf:	test   %rcx,%rcx
    a8c2:	je     a854 <png_image_free_function+0x24>
    a8c4:	movq   $0x0,0x108(%rdx)
    a8cf:	mov    %r14,-0x8(%rbp)
    a8d3:	mov    %r15,-0x10(%rbp)
    a8d7:	mov    %rdi,%r14
    a8da:	mov    %rcx,%rdi
    a8dd:	mov    %rsi,%r15
    a8e0:	callq  5240 <fclose@plt>
    a8e5:	mov    %r15,%rsi
    a8e8:	mov    %r14,%rdi
    a8eb:	mov    -0x10(%rbp),%r15
    a8ef:	mov    -0x8(%rbp),%r14
    a8f3:	jmpq   a854 <png_image_free_function+0x24>
    a8f8:	callq  56f0 <png_destroy_write_struct@plt>
    a8fd:	mov    $0x1,%eax
    a902:	leaveq 
    a903:	retq   
    a904:	nopw   %cs:0x0(%rax,%rax,1)
    a90e:	xchg   %ax,%ax

000000000000a910 <png_set_longjmp_fn>:
    a910:	push   %rbp
    a911:	mov    %rsp,%rbp
    a914:	sub    $0x20,%rsp
    a918:	xor    %eax,%eax
    a91a:	test   %rdi,%rdi
    a91d:	jne    a921 <png_set_longjmp_fn+0x11>
    a91f:	leaveq 
    a920:	retq   
    a921:	mov    0xd0(%rdi),%rcx
    a928:	test   %rcx,%rcx
    a92b:	je     a94e <png_set_longjmp_fn+0x3e>
    a92d:	mov    0xd8(%rdi),%rax
    a934:	test   %rax,%rax
    a937:	je     a996 <png_set_longjmp_fn+0x86>
    a939:	cmp    %rax,%rdx
    a93c:	je     a9a9 <png_set_longjmp_fn+0x99>
    a93e:	lea    0x22bc6(%rip),%rsi        # 2d50b <png_digit+0x2f>
    a945:	callq  5390 <png_warning@plt>
    a94a:	xor    %eax,%eax
    a94c:	leaveq 
    a94d:	retq   
    a94e:	movq   $0x0,0xd8(%rdi)
    a959:	cmp    $0xc8,%rdx
    a960:	jbe    a9a2 <png_set_longjmp_fn+0x92>
    a962:	mov    %rdi,%rax
    a965:	mov    %rdx,%rcx
    a968:	mov    %r15,-0x18(%rbp)
    a96c:	mov    %rdx,-0x10(%rbp)
    a970:	mov    %rsi,-0x8(%rbp)
    a974:	mov    %rcx,%rsi
    a977:	mov    %rdi,%r15
    a97a:	mov    %rax,%rdi
    a97d:	callq  5150 <png_malloc_warn@plt>
    a982:	mov    %rax,0xd0(%r15)
    a989:	test   %rax,%rax
    a98c:	jne    a9b9 <png_set_longjmp_fn+0xa9>
    a98e:	mov    -0x18(%rbp),%r15
    a992:	xor    %eax,%eax
    a994:	leaveq 
    a995:	retq   
    a996:	cmp    %rcx,%rdi
    a999:	jne    a9d1 <png_set_longjmp_fn+0xc1>
    a99b:	mov    $0xc8,%eax
    a9a0:	jmp    a939 <png_set_longjmp_fn+0x29>
    a9a2:	mov    %rdi,0xd0(%rdi)
    a9a9:	mov    %rsi,0xc8(%rdi)
    a9b0:	mov    0xd0(%rdi),%rax
    a9b7:	leaveq 
    a9b8:	retq   
    a9b9:	mov    -0x10(%rbp),%rax
    a9bd:	mov    %rax,0xd8(%r15)
    a9c4:	mov    %r15,%rdi
    a9c7:	mov    -0x8(%rbp),%rsi
    a9cb:	mov    -0x18(%rbp),%r15
    a9cf:	jmp    a9a9 <png_set_longjmp_fn+0x99>
    a9d1:	lea    0x22b14(%rip),%rsi        # 2d4ec <png_digit+0x10>
    a9d8:	callq  5470 <png_error@plt>
    a9dd:	nopl   (%rax)

000000000000a9e0 <png_longjmp>:
    a9e0:	push   %rbp
    a9e1:	mov    %rsp,%rbp
    a9e4:	test   %rdi,%rdi
    a9e7:	jne    a9ee <png_longjmp+0xe>
    a9e9:	callq  5090 <abort@plt>
    a9ee:	mov    0xc8(%rdi),%rax
    a9f5:	test   %rax,%rax
    a9f8:	je     a9e9 <png_longjmp+0x9>
    a9fa:	mov    0xd0(%rdi),%rdi
    aa01:	test   %rdi,%rdi
    aa04:	je     a9e9 <png_longjmp+0x9>
    aa06:	callq  *%rax
    aa08:	jmp    a9e9 <png_longjmp+0x9>
    aa0a:	nopw   0x0(%rax,%rax,1)

000000000000aa10 <png_set_error_fn>:
    aa10:	push   %rbp
    aa11:	mov    %rsp,%rbp
    aa14:	test   %rdi,%rdi
    aa17:	jne    aa1b <png_set_error_fn+0xb>
    aa19:	leaveq 
    aa1a:	retq   
    aa1b:	mov    %rsi,0xf0(%rdi)
    aa22:	mov    %rdx,0xe0(%rdi)
    aa29:	mov    %rcx,0xe8(%rdi)
    aa30:	leaveq 
    aa31:	retq   
    aa32:	data16 nopw %cs:0x0(%rax,%rax,1)
    aa3d:	nopl   (%rax)

000000000000aa40 <png_get_error_ptr>:
    aa40:	push   %rbp
    aa41:	mov    %rsp,%rbp
    aa44:	test   %rdi,%rdi
    aa47:	jne    aa4d <png_get_error_ptr+0xd>
    aa49:	xor    %eax,%eax
    aa4b:	leaveq 
    aa4c:	retq   
    aa4d:	mov    0xf0(%rdi),%rax
    aa54:	leaveq 
    aa55:	retq   
    aa56:	nopw   %cs:0x0(%rax,%rax,1)

000000000000aa60 <png_error>:
    aa60:	push   %rbp
    aa61:	mov    %rsp,%rbp
    aa64:	test   %rdi,%rdi
    aa67:	jne    aa6e <png_error+0xe>
    aa69:	callq  b320 <png_default_error>
    aa6e:	mov    0xe0(%rdi),%rax
    aa75:	test   %rax,%rax
    aa78:	je     aa69 <png_error+0x9>
    aa7a:	mov    %rdi,%r12
    aa7d:	mov    %rsi,%rbx
    aa80:	callq  *%rax
    aa82:	mov    %rbx,%rsi
    aa85:	mov    %r12,%rdi
    aa88:	jmp    aa69 <png_error+0x9>
    aa8a:	nopw   0x0(%rax,%rax,1)

000000000000aa90 <png_chunk_error>:
    aa90:	push   %rbp
    aa91:	mov    %rsp,%rbp
    aa94:	sub    $0xe0,%rsp
    aa9b:	test   %rdi,%rdi
    aa9e:	je     aac0 <png_chunk_error+0x30>
    aaa0:	mov    %rsi,%rdx
    aaa3:	lea    -0xd6(%rbp),%rbx
    aaaa:	mov    %rdi,%r12
    aaad:	mov    %rbx,%rsi
    aab0:	callq  b3c0 <png_format_buffer>
    aab5:	mov    %rbx,%rsi
    aab8:	mov    %r12,%rdi
    aabb:	callq  5470 <png_error@plt>
    aac0:	xor    %edi,%edi
    aac2:	callq  5470 <png_error@plt>
    aac7:	nopw   0x0(%rax,%rax,1)

000000000000aad0 <png_warning>:
    aad0:	push   %rbp
    aad1:	mov    %rsp,%rbp
    aad4:	xor    %eax,%eax
    aad6:	test   %rdi,%rdi
    aad9:	jne    aaf0 <png_warning+0x20>
    aadb:	mov    %rax,%rcx
    aade:	movslq %eax,%rdx
    aae1:	test   %rcx,%rcx
    aae4:	jne    ab03 <png_warning+0x33>
    aae6:	add    %rdx,%rsi
    aae9:	callq  b380 <png_default_warning>
    aaee:	leaveq 
    aaef:	retq   
    aaf0:	mov    $0x1,%ecx
    aaf5:	movsbq (%rsi),%rdx
    aaf9:	cmp    $0x23,%dl
    aafc:	jne    aade <png_warning+0xe>
    aafe:	mov    %rcx,%rax
    ab01:	jmp    ab26 <png_warning+0x56>
    ab03:	mov    0xe8(%rdi),%rax
    ab0a:	test   %rax,%rax
    ab0d:	je     aae6 <png_warning+0x16>
    ab0f:	add    %rdx,%rsi
    ab12:	callq  *%rax
    ab14:	leaveq 
    ab15:	retq   
    ab16:	movslq %eax,%rdx
    ab19:	movsbq (%rsi,%rdx,1),%rdx
    ab1e:	cmp    $0x20,%dl
    ab21:	je     aade <png_warning+0xe>
    ab23:	add    $0x1,%eax
    ab26:	cmp    $0xe,%eax
    ab29:	jle    ab16 <png_warning+0x46>
    ab2b:	jmp    aade <png_warning+0xe>
    ab2d:	nopl   (%rax)

000000000000ab30 <png_chunk_warning>:
    ab30:	push   %rbp
    ab31:	mov    %rsp,%rbp
    ab34:	sub    $0xe0,%rsp
    ab3b:	test   %rdi,%rdi
    ab3e:	je     ab74 <png_chunk_warning+0x44>
    ab40:	lea    -0xde(%rbp),%rax
    ab47:	mov    %rdi,%rcx
    ab4a:	mov    %r15,-0x8(%rbp)
    ab4e:	mov    %rsi,%rdx
    ab51:	mov    %rax,%rsi
    ab54:	mov    %rdi,%r15
    ab57:	mov    %rcx,%rdi
    ab5a:	callq  b3c0 <png_format_buffer>
    ab5f:	mov    %r15,%rdi
    ab62:	lea    -0xde(%rbp),%rsi
    ab69:	callq  5390 <png_warning@plt>
    ab6e:	mov    -0x8(%rbp),%r15
    ab72:	leaveq 
    ab73:	retq   
    ab74:	xor    %edi,%edi
    ab76:	callq  5390 <png_warning@plt>
    ab7b:	leaveq 
    ab7c:	retq   
    ab7d:	nopl   (%rax)

000000000000ab80 <png_benign_error>:
    ab80:	push   %rbp
    ab81:	mov    %rsp,%rbp
    ab84:	mov    0x130(%rdi),%eax
    ab8a:	and    $0x100000,%eax
    ab8f:	test   %eax,%eax
    ab91:	jne    aba7 <png_benign_error+0x27>
    ab93:	mov    0x12c(%rdi),%eax
    ab99:	and    $0x8000,%eax
    ab9e:	test   %eax,%eax
    aba0:	jne    abbd <png_benign_error+0x3d>
    aba2:	callq  5470 <png_error@plt>
    aba7:	mov    0x12c(%rdi),%eax
    abad:	and    $0x8000,%eax
    abb2:	test   %eax,%eax
    abb4:	jne    abcc <png_benign_error+0x4c>
    abb6:	callq  5390 <png_warning@plt>
    abbb:	leaveq 
    abbc:	retq   
    abbd:	mov    0x218(%rdi),%eax
    abc3:	test   %eax,%eax
    abc5:	je     aba2 <png_benign_error+0x22>
    abc7:	callq  5060 <png_chunk_error@plt>
    abcc:	mov    0x218(%rdi),%eax
    abd2:	test   %eax,%eax
    abd4:	je     abb6 <png_benign_error+0x36>
    abd6:	callq  56a0 <png_chunk_warning@plt>
    abdb:	leaveq 
    abdc:	retq   
    abdd:	nopl   (%rax)

000000000000abe0 <png_chunk_benign_error>:
    abe0:	push   %rbp
    abe1:	mov    %rsp,%rbp
    abe4:	mov    0x130(%rdi),%eax
    abea:	and    $0x100000,%eax
    abef:	test   %eax,%eax
    abf1:	jne    abf8 <png_chunk_benign_error+0x18>
    abf3:	callq  5060 <png_chunk_error@plt>
    abf8:	callq  56a0 <png_chunk_warning@plt>
    abfd:	leaveq 
    abfe:	retq   
    abff:	nop

000000000000ac00 <png_free_jmpbuf>:
    ac00:	push   %rbp
    ac01:	mov    %rsp,%rbp
    ac04:	sub    $0xe0,%rsp
    ac0b:	test   %rdi,%rdi
    ac0e:	jne    ac12 <png_free_jmpbuf+0x12>
    ac10:	leaveq 
    ac11:	retq   
    ac12:	mov    0xd0(%rdi),%rcx
    ac19:	test   %rcx,%rcx
    ac1c:	jne    ac41 <png_free_jmpbuf+0x41>
    ac1e:	movq   $0x0,0xd8(%rdi)
    ac29:	movq   $0x0,0xd0(%rdi)
    ac34:	movq   $0x0,0xc8(%rdi)
    ac3f:	leaveq 
    ac40:	retq   
    ac41:	mov    0xd8(%rdi),%rax
    ac48:	test   %rax,%rax
    ac4b:	je     ac1e <png_free_jmpbuf+0x1e>
    ac4d:	cmp    %rcx,%rdi
    ac50:	je     ac1e <png_free_jmpbuf+0x1e>
    ac52:	lea    -0xd8(%rbp),%rax
    ac59:	mov    %r15,-0x10(%rbp)
    ac5d:	mov    %rcx,-0x8(%rbp)
    ac61:	mov    %rdi,%r15
    ac64:	mov    %rax,%rdi
    ac67:	callq  5420 <_setjmp@plt>
    ac6c:	test   %eax,%eax
    ac6e:	je     ac79 <png_free_jmpbuf+0x79>
    ac70:	mov    %r15,%rdi
    ac73:	mov    -0x10(%rbp),%r15
    ac77:	jmp    ac1e <png_free_jmpbuf+0x1e>
    ac79:	lea    -0xd8(%rbp),%rax
    ac80:	mov    %rax,0xd0(%r15)
    ac87:	movq   $0x0,0xd8(%r15)
    ac92:	mov    0x27347(%rip),%rax        # 31fe0 <longjmp@GLIBC_2.2.5>
    ac99:	mov    %rax,0xc8(%r15)
    aca0:	mov    %r15,%rdi
    aca3:	mov    -0x8(%rbp),%rsi
    aca7:	callq  5790 <png_free@plt>
    acac:	mov    %r15,%rdi
    acaf:	mov    -0x10(%rbp),%r15
    acb3:	jmpq   ac1e <png_free_jmpbuf+0x1e>
    acb8:	nopl   0x0(%rax,%rax,1)

000000000000acc0 <png_fixed_error>:
    acc0:	push   %rbp
    acc1:	mov    %rsp,%rbp
    acc4:	sub    $0xe0,%rsp
    accb:	mov    %rdi,%r12
    acce:	mov    %rsi,%r13
    acd1:	lea    -0xdc(%rbp),%rbx
    acd8:	lea    0x2284d(%rip),%rsi        # 2d52c <png_digit+0x50>
    acdf:	mov    $0x18,%edx
    ace4:	mov    %rbx,%rdi
    ace7:	callq  54c0 <memcpy@plt>
    acec:	xor    %eax,%eax
    acee:	test   %r13,%r13
    acf1:	jne    ad1e <png_fixed_error+0x5e>
    acf3:	mov    %eax,%eax
    acf5:	movb   $0x0,-0xc4(%rbp,%rax,1)
    acfd:	mov    %rbx,%rsi
    ad00:	mov    %r12,%rdi
    ad03:	callq  5470 <png_error@plt>
    ad08:	mov    %eax,%edx
    ad0a:	movsbq 0x0(%r13,%rdx,1),%rcx
    ad10:	test   %cl,%cl
    ad12:	je     acf3 <png_fixed_error+0x33>
    ad14:	mov    %cl,-0xc4(%rbp,%rdx,1)
    ad1b:	add    $0x1,%eax
    ad1e:	cmp    $0xc2,%eax
    ad23:	jbe    ad08 <png_fixed_error+0x48>
    ad25:	jmp    acf3 <png_fixed_error+0x33>
    ad27:	nopw   0x0(%rax,%rax,1)

000000000000ad30 <png_safecat>:
    ad30:	push   %rbp
    ad31:	mov    %rsp,%rbp
    ad34:	test   %rdi,%rdi
    ad37:	jne    ad3e <png_safecat+0xe>
    ad39:	mov    %rdx,%rax
    ad3c:	leaveq 
    ad3d:	retq   
    ad3e:	cmp    %rsi,%rdx
    ad41:	jb     ad48 <png_safecat+0x18>
    ad43:	mov    %rdx,%rax
    ad46:	leaveq 
    ad47:	retq   
    ad48:	test   %rcx,%rcx
    ad4b:	jne    ad56 <png_safecat+0x26>
    ad4d:	mov    %rdx,%rax
    ad50:	movb   $0x0,(%rdi,%rax,1)
    ad54:	leaveq 
    ad55:	retq   
    ad56:	add    $0xffffffffffffffff,%rsi
    ad5a:	mov    %rdx,%rax
    ad5d:	jmp    ad6f <png_safecat+0x3f>
    ad5f:	cmp    %rax,%rsi
    ad62:	jbe    ad50 <png_safecat+0x20>
    ad64:	mov    %dl,(%rdi,%rax,1)
    ad67:	add    $0x1,%rax
    ad6b:	add    $0x1,%rcx
    ad6f:	movsbq (%rcx),%rdx
    ad73:	test   %dl,%dl
    ad75:	jne    ad5f <png_safecat+0x2f>
    ad77:	jmp    ad50 <png_safecat+0x20>
    ad79:	nopl   0x0(%rax)

000000000000ad80 <png_format_number>:
    ad80:	push   %rbp
    ad81:	mov    %rsp,%rbp
    ad84:	sub    $0x30,%rsp
    ad88:	mov    %r15,-0x28(%rbp)
    ad8c:	mov    %r14,-0x20(%rbp)
    ad90:	mov    %rbx,-0x8(%rbp)
    ad94:	mov    %r12,-0x10(%rbp)
    ad98:	mov    %r13,-0x18(%rbp)
    ad9c:	lea    -0x1(%rdx),%r11d
    ada0:	add    $0xffffffffffffffff,%rsi
    ada4:	movb   $0x0,(%rsi)
    ada7:	mov    %rdx,%r9
    adaa:	mov    $0xa,%ebx
    adaf:	lea    0x2278f(%rip),%r8        # 2d545 <digits.5>
    adb6:	mov    $0x1,%r12d
    adbc:	xor    %r10d,%r10d
    adbf:	mov    $0x5,%edx
    adc4:	mov    $0x2,%r14d
    adca:	mov    %r10,%r13
    adcd:	mov    %r13,%r15
    add0:	jmp    adf0 <png_format_number+0x70>
    add2:	test   %rcx,%rcx
    add5:	je     ae0e <png_format_number+0x8e>
    add7:	cmp    $0x4,%r11d
    addb:	jbe    ae2c <png_format_number+0xac>
    addd:	mov    %r10,%rcx
    ade0:	cmp    $0x5,%r9d
    ade4:	lea    0x1(%r15),%r15d
    ade8:	jne    adf0 <png_format_number+0x70>
    adea:	cmp    $0x5,%r15d
    adee:	je     ae46 <png_format_number+0xc6>
    adf0:	cmp    %rdi,%rsi
    adf3:	ja     add2 <png_format_number+0x52>
    adf5:	mov    %rsi,%rax
    adf8:	mov    -0x18(%rbp),%r13
    adfc:	mov    -0x10(%rbp),%r12
    ae00:	mov    -0x8(%rbp),%rbx
    ae04:	mov    -0x20(%rbp),%r14
    ae08:	mov    -0x28(%rbp),%r15
    ae0c:	leaveq 
    ae0d:	retq   
    ae0e:	cmp    %r15d,%r12d
    ae11:	jg     add7 <png_format_number+0x57>
    ae13:	mov    %rsi,%rax
    ae16:	mov    -0x18(%rbp),%r13
    ae1a:	mov    -0x10(%rbp),%r12
    ae1e:	mov    -0x8(%rbp),%rbx
    ae22:	mov    -0x20(%rbp),%r14
    ae26:	mov    -0x28(%rbp),%r15
    ae2a:	leaveq 
    ae2b:	retq   
    ae2c:	lea    0x22695(%rip),%rdx        # 2d4c8 <short_months.6+0x9f3>
    ae33:	movslq (%rdx,%r11,4),%rax
    ae37:	add    %rdx,%rax
    ae3a:	jmpq   *%rax
    ae3c:	mov    $0x5,%edx
    ae41:	mov    %r10,%rcx
    ae44:	jmp    ade0 <png_format_number+0x60>
    ae46:	cmp    %rdi,%rsi
    ae49:	ja     aee3 <png_format_number+0x163>
    ae4f:	mov    %rdx,%r15
    ae52:	jmp    adf0 <png_format_number+0x70>
    ae54:	mov    %r14,%r12
    ae57:	mov    %rcx,%rax
    ae5a:	and    $0xf,%rax
    ae5e:	movsbq (%rax,%r8,1),%rax
    ae63:	add    $0xffffffffffffffff,%rsi
    ae67:	mov    %al,(%rsi)
    ae69:	shr    $0x4,%rcx
    ae6d:	mov    $0x5,%edx
    ae72:	jmpq   ade0 <png_format_number+0x60>
    ae77:	mov    %r14,%r12
    ae7a:	xor    %r14d,%r14d
    ae7d:	mov    %rcx,%rax
    ae80:	mov    %r14,%rdx
    ae83:	div    %rbx
    ae86:	movsbq (%rdx,%r8,1),%rax
    ae8b:	add    $0xffffffffffffffff,%rsi
    ae8f:	mov    %al,(%rsi)
    ae91:	mov    %rcx,%rax
    ae94:	mov    %r14,%rdx
    ae97:	div    %rbx
    ae9a:	mov    %rax,%rcx
    ae9d:	mov    $0x2,%r14d
    aea3:	mov    $0x5,%edx
    aea8:	jmpq   ade0 <png_format_number+0x60>
    aead:	test   %r13d,%r13d
    aeb0:	jle    aef8 <png_format_number+0x178>
    aeb2:	xor    %edx,%edx
    aeb4:	mov    %rcx,%rax
    aeb7:	div    %rbx
    aeba:	movsbq (%rdx,%r8,1),%rax
    aebf:	add    $0xffffffffffffffff,%rsi
    aec3:	mov    %al,(%rsi)
    aec5:	mov    $0x1,%r13d
    aecb:	mov    %rcx,%rax
    aece:	xor    %edx,%edx
    aed0:	div    %rbx
    aed3:	mov    %rax,%rcx
    aed6:	mov    $0x5,%edx
    aedb:	mov    %rdx,%r12
    aede:	jmpq   ade0 <png_format_number+0x60>
    aee3:	test   %r13d,%r13d
    aee6:	jg     af0a <png_format_number+0x18a>
    aee8:	test   %rcx,%rcx
    aeeb:	je     af19 <png_format_number+0x199>
    aeed:	mov    %rdx,%r15
    aef0:	mov    %r10,%r13
    aef3:	jmpq   adf0 <png_format_number+0x70>
    aef8:	xor    %edx,%edx
    aefa:	mov    %rcx,%rax
    aefd:	div    %rbx
    af00:	test   %rdx,%rdx
    af03:	jne    aeb2 <png_format_number+0x132>
    af05:	mov    %r10,%r13
    af08:	jmp    aecb <png_format_number+0x14b>
    af0a:	add    $0xffffffffffffffff,%rsi
    af0e:	movb   $0x2e,(%rsi)
    af11:	mov    %rdx,%r15
    af14:	jmpq   adf0 <png_format_number+0x70>
    af19:	add    $0xffffffffffffffff,%rsi
    af1d:	movb   $0x30,(%rsi)
    af20:	mov    %rdx,%r15
    af23:	mov    %r10,%rcx
    af26:	mov    %rcx,%r13
    af29:	jmpq   adf0 <png_format_number+0x70>
    af2e:	xchg   %ax,%ax

000000000000af30 <png_warning_parameter>:
    af30:	push   %rbp
    af31:	mov    %rsp,%rbp
    af34:	test   %esi,%esi
    af36:	jg     af3a <png_warning_parameter+0xa>
    af38:	leaveq 
    af39:	retq   
    af3a:	cmp    $0x8,%esi
    af3d:	jle    af41 <png_warning_parameter+0x11>
    af3f:	leaveq 
    af40:	retq   
    af41:	lea    -0x1(%rsi),%eax
    af44:	movslq %eax,%rax
    af47:	shl    $0x5,%rax
    af4b:	add    %rax,%rdi
    af4e:	mov    %rdx,%rcx
    af51:	mov    $0x20,%esi
    af56:	xor    %edx,%edx
    af58:	callq  ad30 <png_safecat>
    af5d:	leaveq 
    af5e:	retq   
    af5f:	nop

000000000000af60 <png_warning_parameter_unsigned>:
    af60:	push   %rbp
    af61:	mov    %rsp,%rbp
    af64:	sub    $0x30,%rsp
    af68:	mov    %r14,-0x8(%rbp)
    af6c:	mov    %r15,-0x10(%rbp)
    af70:	mov    %rdi,%r14
    af73:	mov    %rsi,%r15
    af76:	lea    -0x28(%rbp),%rdi
    af7a:	lea    -0x10(%rbp),%rsi
    af7e:	callq  ad80 <png_format_number>
    af83:	mov    %rax,%rdx
    af86:	mov    %r15,%rsi
    af89:	mov    %r14,%rdi
    af8c:	callq  af30 <png_warning_parameter>
    af91:	mov    -0x10(%rbp),%r15
    af95:	mov    -0x8(%rbp),%r14
    af99:	leaveq 
    af9a:	retq   
    af9b:	nopl   0x0(%rax,%rax,1)

000000000000afa0 <png_warning_parameter_signed>:
    afa0:	push   %rbp
    afa1:	mov    %rsp,%rbp
    afa4:	sub    $0x30,%rsp
    afa8:	mov    %r13,-0x8(%rbp)
    afac:	mov    %r14,-0x10(%rbp)
    afb0:	mov    %r15,-0x18(%rbp)
    afb4:	movslq %ecx,%rax
    afb7:	test   %ecx,%ecx
    afb9:	js     afc3 <png_warning_parameter_signed+0x23>
    afbb:	mov    %rax,%rcx
    afbe:	xor    %r13d,%r13d
    afc1:	jmp    afcf <png_warning_parameter_signed+0x2f>
    afc3:	mov    %rax,%rcx
    afc6:	neg    %rcx
    afc9:	mov    $0x1,%r13d
    afcf:	mov    %rsi,%r14
    afd2:	mov    %rdi,%r15
    afd5:	lea    -0x30(%rbp),%rdi
    afd9:	lea    0x18(%rdi),%rsi
    afdd:	callq  ad80 <png_format_number>
    afe2:	test   %r13,%r13
    afe5:	jne    b003 <png_warning_parameter_signed+0x63>
    afe7:	mov    %rax,%rdx
    afea:	mov    %r14,%rsi
    afed:	mov    %r15,%rdi
    aff0:	callq  af30 <png_warning_parameter>
    aff5:	mov    -0x18(%rbp),%r15
    aff9:	mov    -0x10(%rbp),%r14
    affd:	mov    -0x8(%rbp),%r13
    b001:	leaveq 
    b002:	retq   
    b003:	lea    -0x30(%rbp),%rcx
    b007:	cmp    %rax,%rcx
    b00a:	jb     b011 <png_warning_parameter_signed+0x71>
    b00c:	mov    %rax,%rdx
    b00f:	jmp    afea <png_warning_parameter_signed+0x4a>
    b011:	lea    -0x1(%rax),%rdx
    b015:	movb   $0x2d,(%rdx)
    b018:	jmp    afea <png_warning_parameter_signed+0x4a>
    b01a:	nopw   0x0(%rax,%rax,1)

000000000000b020 <png_formatted_warning>:
    b020:	push   %rbp
    b021:	mov    %rsp,%rbp
    b024:	sub    $0xd0,%rsp
    b02b:	mov    %r14,-0x8(%rbp)
    b02f:	mov    %r15,-0x10(%rbp)
    b033:	xor    %r15d,%r15d
    b036:	lea    0x22519(%rip),%r11        # 2d556 <valid_parameters.6>
    b03d:	mov    %r15,%rax
    b040:	jmp    b062 <png_formatted_warning+0x42>
    b042:	movsbq (%rdx),%rcx
    b046:	test   %cl,%cl
    b048:	je     b06a <png_formatted_warning+0x4a>
    b04a:	test   %rsi,%rsi
    b04d:	jne    b088 <png_formatted_warning+0x68>
    b04f:	movsbq (%rdx),%rcx
    b053:	mov    %cl,-0xd0(%rbp,%rax,1)
    b05a:	add    $0x1,%rax
    b05e:	add    $0x1,%rdx
    b062:	cmp    $0xbe,%rax
    b068:	jbe    b042 <png_formatted_warning+0x22>
    b06a:	movb   $0x0,-0xd0(%rbp,%rax,1)
    b072:	lea    -0xd0(%rbp),%rsi
    b079:	callq  5390 <png_warning@plt>
    b07e:	mov    -0x10(%rbp),%r15
    b082:	mov    -0x8(%rbp),%r14
    b086:	leaveq 
    b087:	retq   
    b088:	cmp    $0x40,%cl
    b08b:	jne    b04f <png_formatted_warning+0x2f>
    b08d:	lea    0x1(%rdx),%r14
    b091:	movsbq (%r14),%r10
    b095:	test   %r10b,%r10b
    b098:	je     b04f <png_formatted_warning+0x2f>
    b09a:	mov    %r15,%rcx
    b09d:	jmp    b0a7 <png_formatted_warning+0x87>
    b09f:	test   %r9b,%r9b
    b0a2:	je     b0b4 <png_formatted_warning+0x94>
    b0a4:	add    $0x1,%ecx
    b0a7:	movslq %ecx,%r8
    b0aa:	movsbq (%r8,%r11,1),%r9
    b0af:	cmp    %r10b,%r9b
    b0b2:	jne    b09f <png_formatted_warning+0x7f>
    b0b4:	cmp    $0x7,%ecx
    b0b7:	jle    b0be <png_formatted_warning+0x9e>
    b0b9:	mov    %r14,%rdx
    b0bc:	jmp    b04f <png_formatted_warning+0x2f>
    b0be:	shl    $0x5,%r8
    b0c2:	lea    (%rsi,%r8,1),%rcx
    b0c6:	lea    0x20(%rcx),%r9
    b0ca:	jmp    b0ea <png_formatted_warning+0xca>
    b0cc:	movsbq (%rcx),%r8
    b0d0:	test   %r8b,%r8b
    b0d3:	je     b0f2 <png_formatted_warning+0xd2>
    b0d5:	cmp    %r9,%rcx
    b0d8:	jae    b0f2 <png_formatted_warning+0xd2>
    b0da:	mov    %r8b,-0xd0(%rbp,%rax,1)
    b0e2:	add    $0x1,%rax
    b0e6:	add    $0x1,%rcx
    b0ea:	cmp    $0xbe,%rax
    b0f0:	jbe    b0cc <png_formatted_warning+0xac>
    b0f2:	add    $0x2,%rdx
    b0f6:	jmpq   b062 <png_formatted_warning+0x42>
    b0fb:	nopl   0x0(%rax,%rax,1)

000000000000b100 <png_app_warning>:
    b100:	push   %rbp
    b101:	mov    %rsp,%rbp
    b104:	mov    0x130(%rdi),%eax
    b10a:	and    $0x200000,%eax
    b10f:	test   %eax,%eax
    b111:	jne    b118 <png_app_warning+0x18>
    b113:	callq  5470 <png_error@plt>
    b118:	callq  5390 <png_warning@plt>
    b11d:	leaveq 
    b11e:	retq   
    b11f:	nop

000000000000b120 <png_app_error>:
    b120:	push   %rbp
    b121:	mov    %rsp,%rbp
    b124:	mov    0x130(%rdi),%eax
    b12a:	and    $0x400000,%eax
    b12f:	test   %eax,%eax
    b131:	jne    b138 <png_app_error+0x18>
    b133:	callq  5470 <png_error@plt>
    b138:	callq  5390 <png_warning@plt>
    b13d:	leaveq 
    b13e:	retq   
    b13f:	nop

000000000000b140 <png_chunk_report>:
    b140:	push   %rbp
    b141:	mov    %rsp,%rbp
    b144:	mov    0x12c(%rdi),%eax
    b14a:	and    $0x8000,%eax
    b14f:	test   %eax,%eax
    b151:	jne    b15e <png_chunk_report+0x1e>
    b153:	test   %edx,%edx
    b155:	jle    b16a <png_chunk_report+0x2a>
    b157:	callq  b120 <png_app_error>
    b15c:	leaveq 
    b15d:	retq   
    b15e:	cmp    $0x1,%edx
    b161:	jle    b171 <png_chunk_report+0x31>
    b163:	callq  5230 <png_chunk_benign_error@plt>
    b168:	leaveq 
    b169:	retq   
    b16a:	callq  b100 <png_app_warning>
    b16f:	leaveq 
    b170:	retq   
    b171:	callq  56a0 <png_chunk_warning@plt>
    b176:	leaveq 
    b177:	retq   
    b178:	nopl   0x0(%rax,%rax,1)

000000000000b180 <png_safe_error>:
    b180:	push   %rbp
    b181:	mov    %rsp,%rbp
    b184:	mov    0xf0(%rdi),%r15
    b18b:	test   %r15,%r15
    b18e:	jne    b195 <png_safe_error+0x15>
    b190:	callq  5090 <abort@plt>
    b195:	mov    %rsi,%r13
    b198:	lea    0x24(%r15),%rbx
    b19c:	mov    $0x40,%r12d
    b1a2:	xor    %r14d,%r14d
    b1a5:	mov    %rbx,%rdi
    b1a8:	mov    %r12,%rsi
    b1ab:	mov    %r14,%rdx
    b1ae:	mov    %r13,%rcx
    b1b1:	callq  ad30 <png_safecat>
    b1b6:	mov    0x20(%r15),%eax
    b1ba:	or     $0x2,%eax
    b1bd:	mov    %eax,0x20(%r15)
    b1c1:	mov    (%r15),%rax
    b1c4:	test   %rax,%rax
    b1c7:	jne    b1f1 <png_safe_error+0x71>
    b1c9:	mov    %r14,%rdx
    b1cc:	lea    0x2238d(%rip),%rcx        # 2d560 <valid_parameters.6+0xa>
    b1d3:	mov    %rbx,%rdi
    b1d6:	mov    %r12,%rsi
    b1d9:	callq  ad30 <png_safecat>
    b1de:	mov    %r13,%rcx
    b1e1:	mov    %rax,%rdx
    b1e4:	mov    %r12,%rsi
    b1e7:	mov    %rbx,%rdi
    b1ea:	callq  ad30 <png_safecat>
    b1ef:	jmp    b190 <png_safe_error+0x10>
    b1f1:	mov    0x10(%rax),%rdi
    b1f5:	test   %rdi,%rdi
    b1f8:	je     b1c9 <png_safe_error+0x49>
    b1fa:	mov    $0x1,%esi
    b1ff:	callq  58f0 <longjmp@plt>
    b204:	data16 nopw %cs:0x0(%rax,%rax,1)
    b20f:	nop

000000000000b210 <png_safe_warning>:
    b210:	push   %rbp
    b211:	mov    %rsp,%rbp
    b214:	sub    $0x10,%rsp
    b218:	mov    0xf0(%rdi),%rcx
    b21f:	mov    0x20(%rcx),%eax
    b222:	test   %eax,%eax
    b224:	je     b228 <png_safe_warning+0x18>
    b226:	leaveq 
    b227:	retq   
    b228:	lea    0x24(%rcx),%rdi
    b22c:	mov    $0x40,%eax
    b231:	xor    %edx,%edx
    b233:	mov    %r15,-0x8(%rbp)
    b237:	mov    %rcx,%r15
    b23a:	mov    %rsi,%rcx
    b23d:	mov    %rax,%rsi
    b240:	callq  ad30 <png_safecat>
    b245:	mov    0x20(%r15),%eax
    b249:	or     $0x1,%eax
    b24c:	mov    %eax,0x20(%r15)
    b250:	mov    -0x8(%rbp),%r15
    b254:	leaveq 
    b255:	retq   
    b256:	nopw   %cs:0x0(%rax,%rax,1)

000000000000b260 <png_safe_execute>:
    b260:	push   %rbp
    b261:	mov    %rsp,%rbp
    b264:	sub    $0xf0,%rsp
    b26b:	mov    %r14,-0x8(%rbp)
    b26f:	mov    %r15,-0x10(%rbp)
    b273:	mov    %rdi,-0xf0(%rbp)
    b27a:	mov    -0xf0(%rbp),%rax
    b281:	mov    (%rax),%rax
    b284:	mov    0x10(%rax),%rax
    b288:	mov    %rax,-0xe0(%rbp)
    b28f:	mov    %rsi,%r14
    b292:	mov    %rdx,%r15
    b295:	lea    -0xd8(%rbp),%rdi
    b29c:	callq  5420 <_setjmp@plt>
    b2a1:	test   %eax,%eax
    b2a3:	je     b2a9 <png_safe_execute+0x49>
    b2a5:	xor    %eax,%eax
    b2a7:	jmp    b2ae <png_safe_execute+0x4e>
    b2a9:	mov    $0x1,%eax
    b2ae:	mov    %eax,-0xe4(%rbp)
    b2b4:	movslq -0xe4(%rbp),%rax
    b2bb:	test   %eax,%eax
    b2bd:	je     b2e0 <png_safe_execute+0x80>
    b2bf:	mov    -0xf0(%rbp),%rax
    b2c6:	mov    (%rax),%rax
    b2c9:	lea    -0xd8(%rbp),%rcx
    b2d0:	mov    %rcx,0x10(%rax)
    b2d4:	mov    %r15,%rdi
    b2d7:	callq  *%r14
    b2da:	mov    %eax,-0xe4(%rbp)
    b2e0:	mov    -0xf0(%rbp),%rax
    b2e7:	mov    (%rax),%rax
    b2ea:	mov    -0xe0(%rbp),%rcx
    b2f1:	mov    %rcx,0x10(%rax)
    b2f5:	movslq -0xe4(%rbp),%rax
    b2fc:	test   %eax,%eax
    b2fe:	jne    b30c <png_safe_execute+0xac>
    b300:	mov    -0xf0(%rbp),%rdi
    b307:	callq  5040 <png_image_free@plt>
    b30c:	movslq -0xe4(%rbp),%rax
    b313:	mov    -0x10(%rbp),%r15
    b317:	mov    -0x8(%rbp),%r14
    b31b:	leaveq 
    b31c:	retq   
    b31d:	nopl   (%rax)

000000000000b320 <png_default_error>:
    b320:	push   %rbp
    b321:	mov    %rsp,%rbp
    b324:	test   %rsi,%rsi
    b327:	jne    b332 <png_default_error+0x12>
    b329:	lea    0x2224f(%rip),%rdx        # 2d57f <valid_parameters.6+0x29>
    b330:	jmp    b335 <png_default_error+0x15>
    b332:	mov    %rsi,%rdx
    b335:	mov    %rdi,%rbx
    b338:	xor    %r12d,%r12d
    b33b:	mov    0x26cb6(%rip),%r13        # 31ff8 <stderr@GLIBC_2.2.5>
    b342:	mov    0x0(%r13),%rdi
    b346:	lea    0x22221(%rip),%rsi        # 2d56e <valid_parameters.6+0x18>
    b34d:	mov    %r12,%rax
    b350:	callq  5490 <fprintf@plt>
    b355:	mov    0x0(%r13),%rdi
    b359:	mov    %r12,%rax
    b35c:	lea    0x22226(%rip),%rsi        # 2d589 <valid_parameters.6+0x33>
    b363:	callq  5490 <fprintf@plt>
    b368:	mov    %rbx,%rdi
    b36b:	mov    $0x1,%esi
    b370:	callq  5870 <png_longjmp@plt>
    b375:	data16 nopw %cs:0x0(%rax,%rax,1)

000000000000b380 <png_default_warning>:
    b380:	push   %rbp
    b381:	mov    %rsp,%rbp
    b384:	sub    $0x10,%rsp
    b388:	mov    %r15,-0x8(%rbp)
    b38c:	mov    %rsi,%rdx
    b38f:	xor    %eax,%eax
    b391:	mov    0x26c60(%rip),%r15        # 31ff8 <stderr@GLIBC_2.2.5>
    b398:	mov    (%r15),%rdi
    b39b:	lea    0x221e9(%rip),%rsi        # 2d58b <valid_parameters.6+0x35>
    b3a2:	callq  5490 <fprintf@plt>
    b3a7:	mov    (%r15),%rdi
    b3aa:	lea    0x221d8(%rip),%rsi        # 2d589 <valid_parameters.6+0x33>
    b3b1:	xor    %eax,%eax
    b3b3:	callq  5490 <fprintf@plt>
    b3b8:	mov    -0x8(%rbp),%r15
    b3bc:	leaveq 
    b3bd:	retq   
    b3be:	xchg   %ax,%ax

000000000000b3c0 <png_format_buffer>:
    b3c0:	push   %rbp
    b3c1:	mov    %rsp,%rbp
    b3c4:	sub    $0x20,%rsp
    b3c8:	mov    %rdx,-0x18(%rbp)
    b3cc:	mov    %r14,-0x8(%rbp)
    b3d0:	mov    %r15,-0x10(%rbp)
    b3d4:	movslq 0x218(%rdi),%r8
    b3db:	xor    %eax,%eax
    b3dd:	lea    0x220f8(%rip),%rdx        # 2d4dc <png_digit>
    b3e4:	mov    $0x18,%ecx
    b3e9:	mov    $0x1,%edi
    b3ee:	mov    %rax,%r9
    b3f1:	jmp    b440 <png_format_buffer+0x80>
    b3f3:	movb   $0x5b,(%rsi,%r10,1)
    b3f8:	mov    %r11,%r10
    b3fb:	and    $0xf0,%r10d
    b402:	shr    $0x4,%r10d
    b406:	movslq %r10d,%r10
    b409:	movsbq (%r10,%rdx,1),%r14
    b40e:	lea    0x1(%r9),%r10d
    b412:	movslq %r10d,%r10
    b415:	mov    %r14b,(%rsi,%r10,1)
    b419:	and    $0xf,%r11d
    b41d:	movslq %r11d,%r10
    b420:	movsbq (%r10,%rdx,1),%r11
    b425:	lea    0x2(%r9),%r10d
    b429:	movslq %r10d,%r10
    b42c:	mov    %r11b,(%rsi,%r10,1)
    b430:	lea    0x3(%r9),%r10d
    b434:	movslq %r10d,%r10
    b437:	movb   $0x5d,(%rsi,%r10,1)
    b43c:	add    $0x4,%r9d
    b440:	movslq %r9d,%r10
    b443:	test   %ecx,%ecx
    b445:	jns    b466 <png_format_buffer+0xa6>
    b447:	mov    -0x18(%rbp),%r8
    b44b:	test   %r8,%r8
    b44e:	je     b48f <png_format_buffer+0xcf>
    b450:	movb   $0x3a,(%rsi,%r10,1)
    b455:	lea    0x1(%r9),%ecx
    b459:	movslq %ecx,%rcx
    b45c:	movb   $0x20,(%rsi,%rcx,1)
    b460:	lea    0x2(%r9),%ecx
    b464:	jmp    b4b5 <png_format_buffer+0xf5>
    b466:	mov    %r8,%r11
    b469:	shr    %cl,%r11d
    b46c:	movzbl %r11b,%r15d
    b470:	cmp    $0x40,%r15d
    b474:	jg     b4cd <png_format_buffer+0x10d>
    b476:	mov    %rdi,%r14
    b479:	add    $0xfffffff8,%ecx
    b47c:	test   %r14d,%r14d
    b47f:	jg     b3f3 <png_format_buffer+0x33>
    b485:	mov    %r15b,(%rsi,%r10,1)
    b489:	add    $0x1,%r9d
    b48d:	jmp    b440 <png_format_buffer+0x80>
    b48f:	movb   $0x0,(%rsi,%r10,1)
    b494:	mov    -0x10(%rbp),%r15
    b498:	mov    -0x8(%rbp),%r14
    b49c:	leaveq 
    b49d:	retq   
    b49e:	movslq %eax,%rdi
    b4a1:	movsbq (%r8,%rdi,1),%rdi
    b4a6:	test   %dil,%dil
    b4a9:	je     b4bf <png_format_buffer+0xff>
    b4ab:	mov    %dil,(%rdx,%rsi,1)
    b4af:	add    $0x1,%ecx
    b4b2:	add    $0x1,%eax
    b4b5:	movslq %ecx,%rdx
    b4b8:	cmp    $0xc2,%eax
    b4bd:	jle    b49e <png_format_buffer+0xde>
    b4bf:	movb   $0x0,(%rdx,%rsi,1)
    b4c3:	mov    -0x10(%rbp),%r15
    b4c7:	mov    -0x8(%rbp),%r14
    b4cb:	leaveq 
    b4cc:	retq   
    b4cd:	cmp    $0x7a,%r15d
    b4d1:	jle    b4d8 <png_format_buffer+0x118>
    b4d3:	mov    %rdi,%r14
    b4d6:	jmp    b479 <png_format_buffer+0xb9>
    b4d8:	cmp    $0x5a,%r15d
    b4dc:	jg     b4e3 <png_format_buffer+0x123>
    b4de:	mov    %rax,%r14
    b4e1:	jmp    b479 <png_format_buffer+0xb9>
    b4e3:	cmp    $0x60,%r15d
    b4e7:	jle    b4ee <png_format_buffer+0x12e>
    b4e9:	mov    %rax,%r14
    b4ec:	jmp    b479 <png_format_buffer+0xb9>
    b4ee:	mov    %rdi,%r14
    b4f1:	jmp    b479 <png_format_buffer+0xb9>
    b4f3:	nopw   %cs:0x0(%rax,%rax,1)
    b4fd:	nopl   (%rax)

000000000000b500 <png_get_compression_buffer_size>:
    b500:	push   %rbp
    b501:	mov    %rsp,%rbp
    b504:	test   %rdi,%rdi
    b507:	jne    b50d <png_get_compression_buffer_size+0xd>
    b509:	xor    %eax,%eax
    b50b:	leaveq 
    b50c:	retq   
    b50d:	mov    0x12c(%rdi),%eax
    b513:	and    $0x8000,%eax
    b518:	test   %eax,%eax
    b51a:	jne    b524 <png_get_compression_buffer_size+0x24>
    b51c:	mov    0x1b8(%rdi),%eax
    b522:	leaveq 
    b523:	retq   
    b524:	mov    0x468(%rdi),%eax
    b52a:	leaveq 
    b52b:	retq   
    b52c:	nopl   0x0(%rax)

000000000000b530 <png_get_rgb_to_gray_status>:
    b530:	push   %rbp
    b531:	mov    %rsp,%rbp
    b534:	test   %rdi,%rdi
    b537:	jne    b53d <png_get_rgb_to_gray_status+0xd>
    b539:	xor    %eax,%eax
    b53b:	leaveq 
    b53c:	retq   
    b53d:	movzbl 0x3d0(%rdi),%eax
    b544:	leaveq 
    b545:	retq   
    b546:	nopw   %cs:0x0(%rax,%rax,1)

000000000000b550 <png_get_user_chunk_ptr>:
    b550:	push   %rbp
    b551:	mov    %rsp,%rbp
    b554:	test   %rdi,%rdi
    b557:	jne    b55d <png_get_user_chunk_ptr+0xd>
    b559:	xor    %eax,%eax
    b55b:	leaveq 
    b55c:	retq   
    b55d:	mov    0x3b0(%rdi),%rax
    b564:	leaveq 
    b565:	retq   
    b566:	nopw   %cs:0x0(%rax,%rax,1)

000000000000b570 <png_get_valid>:
    b570:	push   %rbp
    b571:	mov    %rsp,%rbp
    b574:	xor    %eax,%eax
    b576:	test   %rdi,%rdi
    b579:	jne    b57d <png_get_valid+0xd>
    b57b:	leaveq 
    b57c:	retq   
    b57d:	test   %rsi,%rsi
    b580:	jne    b584 <png_get_valid+0x14>
    b582:	leaveq 
    b583:	retq   
    b584:	mov    %rdx,%rax
    b587:	and    0x8(%rsi),%eax
    b58a:	leaveq 
    b58b:	retq   
    b58c:	nopl   0x0(%rax)

000000000000b590 <png_get_rowbytes>:
    b590:	push   %rbp
    b591:	mov    %rsp,%rbp
    b594:	xor    %eax,%eax
    b596:	test   %rdi,%rdi
    b599:	jne    b59d <png_get_rowbytes+0xd>
    b59b:	leaveq 
    b59c:	retq   
    b59d:	test   %rsi,%rsi
    b5a0:	jne    b5a4 <png_get_rowbytes+0x14>
    b5a2:	leaveq 
    b5a3:	retq   
    b5a4:	mov    0x10(%rsi),%rax
    b5a8:	leaveq 
    b5a9:	retq   
    b5aa:	nopw   0x0(%rax,%rax,1)

000000000000b5b0 <png_get_rows>:
    b5b0:	push   %rbp
    b5b1:	mov    %rsp,%rbp
    b5b4:	xor    %eax,%eax
    b5b6:	test   %rdi,%rdi
    b5b9:	jne    b5bd <png_get_rows+0xd>
    b5bb:	leaveq 
    b5bc:	retq   
    b5bd:	test   %rsi,%rsi
    b5c0:	jne    b5c4 <png_get_rows+0x14>
    b5c2:	leaveq 
    b5c3:	retq   
    b5c4:	mov    0x160(%rsi),%rax
    b5cb:	leaveq 
    b5cc:	retq   
    b5cd:	nopl   (%rax)

000000000000b5d0 <png_get_channels>:
    b5d0:	push   %rbp
    b5d1:	mov    %rsp,%rbp
    b5d4:	xor    %eax,%eax
    b5d6:	test   %rdi,%rdi
    b5d9:	jne    b5dd <png_get_channels+0xd>
    b5db:	leaveq 
    b5dc:	retq   
    b5dd:	test   %rsi,%rsi
    b5e0:	jne    b5e4 <png_get_channels+0x14>
    b5e2:	leaveq 
    b5e3:	retq   
    b5e4:	movzbl 0x29(%rsi),%eax
    b5e8:	leaveq 
    b5e9:	retq   
    b5ea:	nopw   0x0(%rax,%rax,1)

000000000000b5f0 <png_get_image_width>:
    b5f0:	push   %rbp
    b5f1:	mov    %rsp,%rbp
    b5f4:	xor    %eax,%eax
    b5f6:	test   %rdi,%rdi
    b5f9:	jne    b5fd <png_get_image_width+0xd>
    b5fb:	leaveq 
    b5fc:	retq   
    b5fd:	test   %rsi,%rsi
    b600:	jne    b604 <png_get_image_width+0x14>
    b602:	leaveq 
    b603:	retq   
    b604:	mov    (%rsi),%eax
    b606:	leaveq 
    b607:	retq   
    b608:	nopl   0x0(%rax,%rax,1)

000000000000b610 <png_get_image_height>:
    b610:	push   %rbp
    b611:	mov    %rsp,%rbp
    b614:	xor    %eax,%eax
    b616:	test   %rdi,%rdi
    b619:	jne    b61d <png_get_image_height+0xd>
    b61b:	leaveq 
    b61c:	retq   
    b61d:	test   %rsi,%rsi
    b620:	jne    b624 <png_get_image_height+0x14>
    b622:	leaveq 
    b623:	retq   
    b624:	mov    0x4(%rsi),%eax
    b627:	leaveq 
    b628:	retq   
    b629:	nopl   0x0(%rax)

000000000000b630 <png_get_bit_depth>:
    b630:	push   %rbp
    b631:	mov    %rsp,%rbp
    b634:	xor    %eax,%eax
    b636:	test   %rdi,%rdi
    b639:	jne    b63d <png_get_bit_depth+0xd>
    b63b:	leaveq 
    b63c:	retq   
    b63d:	test   %rsi,%rsi
    b640:	jne    b644 <png_get_bit_depth+0x14>
    b642:	leaveq 
    b643:	retq   
    b644:	movzbl 0x24(%rsi),%eax
    b648:	leaveq 
    b649:	retq   
    b64a:	nopw   0x0(%rax,%rax,1)

000000000000b650 <png_get_color_type>:
    b650:	push   %rbp
    b651:	mov    %rsp,%rbp
    b654:	xor    %eax,%eax
    b656:	test   %rdi,%rdi
    b659:	jne    b65d <png_get_color_type+0xd>
    b65b:	leaveq 
    b65c:	retq   
    b65d:	test   %rsi,%rsi
    b660:	jne    b664 <png_get_color_type+0x14>
    b662:	leaveq 
    b663:	retq   
    b664:	movzbl 0x25(%rsi),%eax
    b668:	leaveq 
    b669:	retq   
    b66a:	nopw   0x0(%rax,%rax,1)

000000000000b670 <png_get_filter_type>:
    b670:	push   %rbp
    b671:	mov    %rsp,%rbp
    b674:	xor    %eax,%eax
    b676:	test   %rdi,%rdi
    b679:	jne    b67d <png_get_filter_type+0xd>
    b67b:	leaveq 
    b67c:	retq   
    b67d:	test   %rsi,%rsi
    b680:	jne    b684 <png_get_filter_type+0x14>
    b682:	leaveq 
    b683:	retq   
    b684:	movzbl 0x27(%rsi),%eax
    b688:	leaveq 
    b689:	retq   
    b68a:	nopw   0x0(%rax,%rax,1)

000000000000b690 <png_get_interlace_type>:
    b690:	push   %rbp
    b691:	mov    %rsp,%rbp
    b694:	xor    %eax,%eax
    b696:	test   %rdi,%rdi
    b699:	jne    b69d <png_get_interlace_type+0xd>
    b69b:	leaveq 
    b69c:	retq   
    b69d:	test   %rsi,%rsi
    b6a0:	jne    b6a4 <png_get_interlace_type+0x14>
    b6a2:	leaveq 
    b6a3:	retq   
    b6a4:	movzbl 0x28(%rsi),%eax
    b6a8:	leaveq 
    b6a9:	retq   
    b6aa:	nopw   0x0(%rax,%rax,1)

000000000000b6b0 <png_get_compression_type>:
    b6b0:	push   %rbp
    b6b1:	mov    %rsp,%rbp
    b6b4:	xor    %eax,%eax
    b6b6:	test   %rdi,%rdi
    b6b9:	jne    b6bd <png_get_compression_type+0xd>
    b6bb:	leaveq 
    b6bc:	retq   
    b6bd:	test   %rsi,%rsi
    b6c0:	jne    b6c4 <png_get_compression_type+0x14>
    b6c2:	leaveq 
    b6c3:	retq   
    b6c4:	movzbl 0x26(%rsi),%eax
    b6c8:	leaveq 
    b6c9:	retq   
    b6ca:	nopw   0x0(%rax,%rax,1)

000000000000b6d0 <png_get_pixels_per_meter>:
    b6d0:	push   %rbp
    b6d1:	mov    %rsp,%rbp
    b6d4:	xor    %eax,%eax
    b6d6:	test   %rdi,%rdi
    b6d9:	jne    b6dd <png_get_pixels_per_meter+0xd>
    b6db:	leaveq 
    b6dc:	retq   
    b6dd:	test   %rsi,%rsi
    b6e0:	jne    b6e4 <png_get_pixels_per_meter+0x14>
    b6e2:	leaveq 
    b6e3:	retq   
    b6e4:	mov    0x8(%rsi),%ecx
    b6e7:	and    $0x80,%ecx
    b6ed:	test   %ecx,%ecx
    b6ef:	jne    b6f3 <png_get_pixels_per_meter+0x23>
    b6f1:	leaveq 
    b6f2:	retq   
    b6f3:	movzbl 0xe8(%rsi),%ecx
    b6fa:	cmp    $0x1,%cl
    b6fd:	je     b701 <png_get_pixels_per_meter+0x31>
    b6ff:	leaveq 
    b700:	retq   
    b701:	mov    0xe0(%rsi),%ecx
    b707:	mov    0xe4(%rsi),%edx
    b70d:	cmp    %ecx,%edx
    b70f:	jne    b716 <png_get_pixels_per_meter+0x46>
    b711:	mov    %rcx,%rax
    b714:	leaveq 
    b715:	retq   
    b716:	leaveq 
    b717:	retq   
    b718:	nopl   0x0(%rax,%rax,1)

000000000000b720 <png_get_x_pixels_per_meter>:
    b720:	push   %rbp
    b721:	mov    %rsp,%rbp
    b724:	xor    %eax,%eax
    b726:	test   %rdi,%rdi
    b729:	jne    b72d <png_get_x_pixels_per_meter+0xd>
    b72b:	leaveq 
    b72c:	retq   
    b72d:	test   %rsi,%rsi
    b730:	jne    b734 <png_get_x_pixels_per_meter+0x14>
    b732:	leaveq 
    b733:	retq   
    b734:	mov    0x8(%rsi),%ecx
    b737:	and    $0x80,%ecx
    b73d:	test   %ecx,%ecx
    b73f:	jne    b743 <png_get_x_pixels_per_meter+0x23>
    b741:	leaveq 
    b742:	retq   
    b743:	movzbl 0xe8(%rsi),%ecx
    b74a:	cmp    $0x1,%cl
    b74d:	je     b751 <png_get_x_pixels_per_meter+0x31>
    b74f:	leaveq 
    b750:	retq   
    b751:	mov    0xe0(%rsi),%eax
    b757:	leaveq 
    b758:	retq   
    b759:	nopl   0x0(%rax)

000000000000b760 <png_get_y_pixels_per_meter>:
    b760:	push   %rbp
    b761:	mov    %rsp,%rbp
    b764:	xor    %eax,%eax
    b766:	test   %rdi,%rdi
    b769:	jne    b76d <png_get_y_pixels_per_meter+0xd>
    b76b:	leaveq 
    b76c:	retq   
    b76d:	test   %rsi,%rsi
    b770:	jne    b774 <png_get_y_pixels_per_meter+0x14>
    b772:	leaveq 
    b773:	retq   
    b774:	mov    0x8(%rsi),%ecx
    b777:	and    $0x80,%ecx
    b77d:	test   %ecx,%ecx
    b77f:	jne    b783 <png_get_y_pixels_per_meter+0x23>
    b781:	leaveq 
    b782:	retq   
    b783:	movzbl 0xe8(%rsi),%ecx
    b78a:	cmp    $0x1,%cl
    b78d:	je     b791 <png_get_y_pixels_per_meter+0x31>
    b78f:	leaveq 
    b790:	retq   
    b791:	mov    0xe4(%rsi),%eax
    b797:	leaveq 
    b798:	retq   
    b799:	nopl   0x0(%rax)

000000000000b7a0 <png_get_pixel_aspect_ratio>:
    b7a0:	push   %rbp
    b7a1:	mov    %rsp,%rbp
    b7a4:	xorpd  %xmm0,%xmm0
    b7a8:	test   %rdi,%rdi
    b7ab:	jne    b7af <png_get_pixel_aspect_ratio+0xf>
    b7ad:	leaveq 
    b7ae:	retq   
    b7af:	test   %rsi,%rsi
    b7b2:	jne    b7b6 <png_get_pixel_aspect_ratio+0x16>
    b7b4:	leaveq 
    b7b5:	retq   
    b7b6:	mov    0x8(%rsi),%eax
    b7b9:	and    $0x80,%eax
    b7be:	test   %eax,%eax
    b7c0:	jne    b7c4 <png_get_pixel_aspect_ratio+0x24>
    b7c2:	leaveq 
    b7c3:	retq   
    b7c4:	mov    0xe0(%rsi),%eax
    b7ca:	test   %eax,%eax
    b7cc:	jne    b7d0 <png_get_pixel_aspect_ratio+0x30>
    b7ce:	leaveq 
    b7cf:	retq   
    b7d0:	mov    0xe4(%rsi),%ecx
    b7d6:	mov    %ecx,%ecx
    b7d8:	cvtsi2ss %rcx,%xmm0
    b7dd:	mov    %eax,%eax
    b7df:	cvtsi2ss %rax,%xmm1
    b7e4:	divss  %xmm1,%xmm0
    b7e8:	leaveq 
    b7e9:	retq   
    b7ea:	nopw   0x0(%rax,%rax,1)

000000000000b7f0 <png_get_pixel_aspect_ratio_fixed>:
    b7f0:	push   %rbp
    b7f1:	mov    %rsp,%rbp
    b7f4:	sub    $0x10,%rsp
    b7f8:	xor    %eax,%eax
    b7fa:	test   %rdi,%rdi
    b7fd:	jne    b801 <png_get_pixel_aspect_ratio_fixed+0x11>
    b7ff:	leaveq 
    b800:	retq   
    b801:	test   %rsi,%rsi
    b804:	jne    b808 <png_get_pixel_aspect_ratio_fixed+0x18>
    b806:	leaveq 
    b807:	retq   
    b808:	mov    0x8(%rsi),%ecx
    b80b:	and    $0x80,%ecx
    b811:	test   %ecx,%ecx
    b813:	jne    b817 <png_get_pixel_aspect_ratio_fixed+0x27>
    b815:	leaveq 
    b816:	retq   
    b817:	mov    0xe0(%rsi),%ecx
    b81d:	test   %ecx,%ecx
    b81f:	jne    b823 <png_get_pixel_aspect_ratio_fixed+0x33>
    b821:	leaveq 
    b822:	retq   
    b823:	mov    0xe4(%rsi),%esi
    b829:	test   %esi,%esi
    b82b:	jne    b82f <png_get_pixel_aspect_ratio_fixed+0x3f>
    b82d:	leaveq 
    b82e:	retq   
    b82f:	cmp    $0x7fffffff,%ecx
    b835:	jbe    b839 <png_get_pixel_aspect_ratio_fixed+0x49>
    b837:	leaveq 
    b838:	retq   
    b839:	cmp    $0x7fffffff,%esi
    b83f:	jbe    b843 <png_get_pixel_aspect_ratio_fixed+0x53>
    b841:	leaveq 
    b842:	retq   
    b843:	lea    -0x4(%rbp),%rdi
    b847:	mov    $0x186a0,%edx
    b84c:	callq  8980 <png_muldiv>
    b851:	test   %eax,%eax
    b853:	jne    b859 <png_get_pixel_aspect_ratio_fixed+0x69>
    b855:	xor    %eax,%eax
    b857:	leaveq 
    b858:	retq   
    b859:	movslq -0x4(%rbp),%rax
    b85d:	leaveq 
    b85e:	retq   
    b85f:	nop

000000000000b860 <png_get_x_offset_pixels>:
    b860:	push   %rbp
    b861:	mov    %rsp,%rbp
    b864:	xor    %eax,%eax
    b866:	test   %rdi,%rdi
    b869:	jne    b86d <png_get_x_offset_pixels+0xd>
    b86b:	leaveq 
    b86c:	retq   
    b86d:	test   %rsi,%rsi
    b870:	jne    b874 <png_get_x_offset_pixels+0x14>
    b872:	leaveq 
    b873:	retq   
    b874:	mov    0x8(%rsi),%ecx
    b877:	and    $0x100,%ecx
    b87d:	test   %ecx,%ecx
    b87f:	jne    b883 <png_get_x_offset_pixels+0x23>
    b881:	leaveq 
    b882:	retq   
    b883:	movzbl 0xdc(%rsi),%ecx
    b88a:	test   %cl,%cl
    b88c:	je     b890 <png_get_x_offset_pixels+0x30>
    b88e:	leaveq 
    b88f:	retq   
    b890:	movslq 0xd4(%rsi),%rax
    b897:	leaveq 
    b898:	retq   
    b899:	nopl   0x0(%rax)

000000000000b8a0 <png_get_y_offset_pixels>:
    b8a0:	push   %rbp
    b8a1:	mov    %rsp,%rbp
    b8a4:	xor    %eax,%eax
    b8a6:	test   %rdi,%rdi
    b8a9:	jne    b8ad <png_get_y_offset_pixels+0xd>
    b8ab:	leaveq 
    b8ac:	retq   
    b8ad:	test   %rsi,%rsi
    b8b0:	jne    b8b4 <png_get_y_offset_pixels+0x14>
    b8b2:	leaveq 
    b8b3:	retq   
    b8b4:	mov    0x8(%rsi),%ecx
    b8b7:	and    $0x100,%ecx
    b8bd:	test   %ecx,%ecx
    b8bf:	jne    b8c3 <png_get_y_offset_pixels+0x23>
    b8c1:	leaveq 
    b8c2:	retq   
    b8c3:	movzbl 0xdc(%rsi),%ecx
    b8ca:	test   %cl,%cl
    b8cc:	je     b8d0 <png_get_y_offset_pixels+0x30>
    b8ce:	leaveq 
    b8cf:	retq   
    b8d0:	movslq 0xd8(%rsi),%rax
    b8d7:	leaveq 
    b8d8:	retq   
    b8d9:	nopl   0x0(%rax)

000000000000b8e0 <png_get_x_offset_microns>:
    b8e0:	push   %rbp
    b8e1:	mov    %rsp,%rbp
    b8e4:	xor    %eax,%eax
    b8e6:	test   %rdi,%rdi
    b8e9:	jne    b8ed <png_get_x_offset_microns+0xd>
    b8eb:	leaveq 
    b8ec:	retq   
    b8ed:	test   %rsi,%rsi
    b8f0:	jne    b8f4 <png_get_x_offset_microns+0x14>
    b8f2:	leaveq 
    b8f3:	retq   
    b8f4:	mov    0x8(%rsi),%ecx
    b8f7:	and    $0x100,%ecx
    b8fd:	test   %ecx,%ecx
    b8ff:	jne    b903 <png_get_x_offset_microns+0x23>
    b901:	leaveq 
    b902:	retq   
    b903:	movzbl 0xdc(%rsi),%ecx
    b90a:	cmp    $0x1,%cl
    b90d:	je     b911 <png_get_x_offset_microns+0x31>
    b90f:	leaveq 
    b910:	retq   
    b911:	movslq 0xd4(%rsi),%rax
    b918:	leaveq 
    b919:	retq   
    b91a:	nopw   0x0(%rax,%rax,1)

000000000000b920 <png_get_y_offset_microns>:
    b920:	push   %rbp
    b921:	mov    %rsp,%rbp
    b924:	xor    %eax,%eax
    b926:	test   %rdi,%rdi
    b929:	jne    b92d <png_get_y_offset_microns+0xd>
    b92b:	leaveq 
    b92c:	retq   
    b92d:	test   %rsi,%rsi
    b930:	jne    b934 <png_get_y_offset_microns+0x14>
    b932:	leaveq 
    b933:	retq   
    b934:	mov    0x8(%rsi),%ecx
    b937:	and    $0x100,%ecx
    b93d:	test   %ecx,%ecx
    b93f:	jne    b943 <png_get_y_offset_microns+0x23>
    b941:	leaveq 
    b942:	retq   
    b943:	movzbl 0xdc(%rsi),%ecx
    b94a:	cmp    $0x1,%cl
    b94d:	je     b951 <png_get_y_offset_microns+0x31>
    b94f:	leaveq 
    b950:	retq   
    b951:	movslq 0xd8(%rsi),%rax
    b958:	leaveq 
    b959:	retq   
    b95a:	nopw   0x0(%rax,%rax,1)

000000000000b960 <png_get_signature>:
    b960:	push   %rbp
    b961:	mov    %rsp,%rbp
    b964:	xor    %eax,%eax
    b966:	test   %rdi,%rdi
    b969:	jne    b96d <png_get_signature+0xd>
    b96b:	leaveq 
    b96c:	retq   
    b96d:	test   %rsi,%rsi
    b970:	jne    b974 <png_get_signature+0x14>
    b972:	leaveq 
    b973:	retq   
    b974:	lea    0x2c(%rsi),%rax
    b978:	leaveq 
    b979:	retq   
    b97a:	nopw   0x0(%rax,%rax,1)

000000000000b980 <png_get_bKGD>:
    b980:	push   %rbp
    b981:	mov    %rsp,%rbp
    b984:	xor    %eax,%eax
    b986:	test   %rdi,%rdi
    b989:	jne    b98d <png_get_bKGD+0xd>
    b98b:	leaveq 
    b98c:	retq   
    b98d:	test   %rsi,%rsi
    b990:	jne    b994 <png_get_bKGD+0x14>
    b992:	leaveq 
    b993:	retq   
    b994:	mov    0x8(%rsi),%ecx
    b997:	and    $0x20,%ecx
    b99a:	test   %ecx,%ecx
    b99c:	jne    b9a0 <png_get_bKGD+0x20>
    b99e:	leaveq 
    b99f:	retq   
    b9a0:	test   %rdx,%rdx
    b9a3:	jne    b9a7 <png_get_bKGD+0x27>
    b9a5:	leaveq 
    b9a6:	retq   
    b9a7:	lea    0xca(%rsi),%rax
    b9ae:	mov    %rax,(%rdx)
    b9b1:	mov    $0x20,%eax
    b9b6:	leaveq 
    b9b7:	retq   
    b9b8:	nopl   0x0(%rax,%rax,1)

000000000000b9c0 <png_get_cHRM>:
    b9c0:	push   %rbp
    b9c1:	mov    %rsp,%rbp
    b9c4:	xor    %eax,%eax
    b9c6:	test   %rdi,%rdi
    b9c9:	jne    b9cd <png_get_cHRM+0xd>
    b9cb:	leaveq 
    b9cc:	retq   
    b9cd:	test   %rsi,%rsi
    b9d0:	jne    b9d4 <png_get_cHRM+0x14>
    b9d2:	leaveq 
    b9d3:	retq   
    b9d4:	movzwl 0x7e(%rsi),%edi
    b9d8:	and    $0x2,%edi
    b9db:	test   %edi,%edi
    b9dd:	jg     b9e1 <png_get_cHRM+0x21>
    b9df:	leaveq 
    b9e0:	retq   
    b9e1:	movsd  0x21bff(%rip),%xmm1        # 2d5e8 <valid_parameters.6+0x92>
    b9e9:	test   %rdx,%rdx
    b9ec:	je     b9fe <png_get_cHRM+0x3e>
    b9ee:	movslq 0x50(%rsi),%rax
    b9f2:	cvtsi2sd %eax,%xmm0
    b9f6:	mulsd  %xmm1,%xmm0
    b9fa:	movsd  %xmm0,(%rdx)
    b9fe:	test   %rcx,%rcx
    ba01:	je     ba13 <png_get_cHRM+0x53>
    ba03:	movslq 0x54(%rsi),%rax
    ba07:	cvtsi2sd %eax,%xmm0
    ba0b:	mulsd  %xmm1,%xmm0
    ba0f:	movsd  %xmm0,(%rcx)
    ba13:	test   %r8,%r8
    ba16:	je     ba29 <png_get_cHRM+0x69>
    ba18:	movslq 0x38(%rsi),%rax
    ba1c:	cvtsi2sd %eax,%xmm0
    ba20:	mulsd  %xmm1,%xmm0
    ba24:	movsd  %xmm0,(%r8)
    ba29:	test   %r9,%r9
    ba2c:	je     ba3f <png_get_cHRM+0x7f>
    ba2e:	movslq 0x3c(%rsi),%rax
    ba32:	cvtsi2sd %eax,%xmm0
    ba36:	mulsd  %xmm1,%xmm0
    ba3a:	movsd  %xmm0,(%r9)
    ba3f:	mov    0x10(%rbp),%rax
    ba43:	test   %rax,%rax
    ba46:	je     ba58 <png_get_cHRM+0x98>
    ba48:	movslq 0x40(%rsi),%rcx
    ba4c:	cvtsi2sd %ecx,%xmm0
    ba50:	mulsd  %xmm1,%xmm0
    ba54:	movsd  %xmm0,(%rax)
    ba58:	mov    0x18(%rbp),%rax
    ba5c:	test   %rax,%rax
    ba5f:	je     ba71 <png_get_cHRM+0xb1>
    ba61:	movslq 0x44(%rsi),%rcx
    ba65:	cvtsi2sd %ecx,%xmm0
    ba69:	mulsd  %xmm1,%xmm0
    ba6d:	movsd  %xmm0,(%rax)
    ba71:	mov    0x20(%rbp),%rax
    ba75:	test   %rax,%rax
    ba78:	je     ba8a <png_get_cHRM+0xca>
    ba7a:	movslq 0x48(%rsi),%rcx
    ba7e:	cvtsi2sd %ecx,%xmm0
    ba82:	mulsd  %xmm1,%xmm0
    ba86:	movsd  %xmm0,(%rax)
    ba8a:	mov    $0x4,%eax
    ba8f:	mov    0x28(%rbp),%rcx
    ba93:	test   %rcx,%rcx
    ba96:	jne    ba9a <png_get_cHRM+0xda>
    ba98:	leaveq 
    ba99:	retq   
    ba9a:	movslq 0x4c(%rsi),%rdx
    ba9e:	cvtsi2sd %edx,%xmm0
    baa2:	mulsd  %xmm1,%xmm0
    baa6:	movsd  %xmm0,(%rcx)
    baaa:	leaveq 
    baab:	retq   
    baac:	nopl   0x0(%rax)

000000000000bab0 <png_get_cHRM_XYZ>:
    bab0:	push   %rbp
    bab1:	mov    %rsp,%rbp
    bab4:	xor    %eax,%eax
    bab6:	test   %rdi,%rdi
    bab9:	jne    babd <png_get_cHRM_XYZ+0xd>
    babb:	leaveq 
    babc:	retq   
    babd:	test   %rsi,%rsi
    bac0:	jne    bac4 <png_get_cHRM_XYZ+0x14>
    bac2:	leaveq 
    bac3:	retq   
    bac4:	movzwl 0x7e(%rsi),%edi
    bac8:	and    $0x2,%edi
    bacb:	test   %edi,%edi
    bacd:	jg     bad1 <png_get_cHRM_XYZ+0x21>
    bacf:	leaveq 
    bad0:	retq   
    bad1:	movsd  0x21b0f(%rip),%xmm1        # 2d5e8 <valid_parameters.6+0x92>
    bad9:	test   %rdx,%rdx
    badc:	je     baee <png_get_cHRM_XYZ+0x3e>
    bade:	movslq 0x58(%rsi),%rax
    bae2:	cvtsi2sd %eax,%xmm0
    bae6:	mulsd  %xmm1,%xmm0
    baea:	movsd  %xmm0,(%rdx)
    baee:	test   %rcx,%rcx
    baf1:	je     bb03 <png_get_cHRM_XYZ+0x53>
    baf3:	movslq 0x5c(%rsi),%rax
    baf7:	cvtsi2sd %eax,%xmm0
    bafb:	mulsd  %xmm1,%xmm0
    baff:	movsd  %xmm0,(%rcx)
    bb03:	test   %r8,%r8
    bb06:	je     bb19 <png_get_cHRM_XYZ+0x69>
    bb08:	movslq 0x60(%rsi),%rax
    bb0c:	cvtsi2sd %eax,%xmm0
    bb10:	mulsd  %xmm1,%xmm0
    bb14:	movsd  %xmm0,(%r8)
    bb19:	test   %r9,%r9
    bb1c:	je     bb2f <png_get_cHRM_XYZ+0x7f>
    bb1e:	movslq 0x64(%rsi),%rax
    bb22:	cvtsi2sd %eax,%xmm0
    bb26:	mulsd  %xmm1,%xmm0
    bb2a:	movsd  %xmm0,(%r9)
    bb2f:	mov    0x10(%rbp),%rax
    bb33:	test   %rax,%rax
    bb36:	je     bb48 <png_get_cHRM_XYZ+0x98>
    bb38:	movslq 0x68(%rsi),%rcx
    bb3c:	cvtsi2sd %ecx,%xmm0
    bb40:	mulsd  %xmm1,%xmm0
    bb44:	movsd  %xmm0,(%rax)
    bb48:	mov    0x18(%rbp),%rax
    bb4c:	test   %rax,%rax
    bb4f:	je     bb61 <png_get_cHRM_XYZ+0xb1>
    bb51:	movslq 0x6c(%rsi),%rcx
    bb55:	cvtsi2sd %ecx,%xmm0
    bb59:	mulsd  %xmm1,%xmm0
    bb5d:	movsd  %xmm0,(%rax)
    bb61:	mov    0x20(%rbp),%rax
    bb65:	test   %rax,%rax
    bb68:	je     bb7a <png_get_cHRM_XYZ+0xca>
    bb6a:	movslq 0x70(%rsi),%rcx
    bb6e:	cvtsi2sd %ecx,%xmm0
    bb72:	mulsd  %xmm1,%xmm0
    bb76:	movsd  %xmm0,(%rax)
    bb7a:	mov    0x28(%rbp),%rax
    bb7e:	test   %rax,%rax
    bb81:	je     bb93 <png_get_cHRM_XYZ+0xe3>
    bb83:	movslq 0x74(%rsi),%rcx
    bb87:	cvtsi2sd %ecx,%xmm0
    bb8b:	mulsd  %xmm1,%xmm0
    bb8f:	movsd  %xmm0,(%rax)
    bb93:	mov    $0x4,%eax
    bb98:	mov    0x30(%rbp),%rcx
    bb9c:	test   %rcx,%rcx
    bb9f:	jne    bba3 <png_get_cHRM_XYZ+0xf3>
    bba1:	leaveq 
    bba2:	retq   
    bba3:	movslq 0x78(%rsi),%rdx
    bba7:	cvtsi2sd %edx,%xmm0
    bbab:	mulsd  %xmm1,%xmm0
    bbaf:	movsd  %xmm0,(%rcx)
    bbb3:	leaveq 
    bbb4:	retq   
    bbb5:	data16 nopw %cs:0x0(%rax,%rax,1)

000000000000bbc0 <png_get_cHRM_fixed>:
    bbc0:	push   %rbp
    bbc1:	mov    %rsp,%rbp
    bbc4:	xor    %eax,%eax
    bbc6:	test   %rdi,%rdi
    bbc9:	jne    bbcd <png_get_cHRM_fixed+0xd>
    bbcb:	leaveq 
    bbcc:	retq   
    bbcd:	test   %rsi,%rsi
    bbd0:	jne    bbd4 <png_get_cHRM_fixed+0x14>
    bbd2:	leaveq 
    bbd3:	retq   
    bbd4:	movzwl 0x7e(%rsi),%edi
    bbd8:	and    $0x2,%edi
    bbdb:	test   %edi,%edi
    bbdd:	jg     bbe1 <png_get_cHRM_fixed+0x21>
    bbdf:	leaveq 
    bbe0:	retq   
    bbe1:	test   %rdx,%rdx
    bbe4:	je     bbec <png_get_cHRM_fixed+0x2c>
    bbe6:	movslq 0x50(%rsi),%rax
    bbea:	mov    %eax,(%rdx)
    bbec:	test   %rcx,%rcx
    bbef:	je     bbf7 <png_get_cHRM_fixed+0x37>
    bbf1:	movslq 0x54(%rsi),%rax
    bbf5:	mov    %eax,(%rcx)
    bbf7:	test   %r8,%r8
    bbfa:	je     bc03 <png_get_cHRM_fixed+0x43>
    bbfc:	movslq 0x38(%rsi),%rax
    bc00:	mov    %eax,(%r8)
    bc03:	test   %r9,%r9
    bc06:	je     bc0f <png_get_cHRM_fixed+0x4f>
    bc08:	movslq 0x3c(%rsi),%rax
    bc0c:	mov    %eax,(%r9)
    bc0f:	mov    0x10(%rbp),%rax
    bc13:	test   %rax,%rax
    bc16:	je     bc1e <png_get_cHRM_fixed+0x5e>
    bc18:	movslq 0x40(%rsi),%rcx
    bc1c:	mov    %ecx,(%rax)
    bc1e:	mov    0x18(%rbp),%rax
    bc22:	test   %rax,%rax
    bc25:	je     bc2d <png_get_cHRM_fixed+0x6d>
    bc27:	movslq 0x44(%rsi),%rcx
    bc2b:	mov    %ecx,(%rax)
    bc2d:	mov    0x20(%rbp),%rax
    bc31:	test   %rax,%rax
    bc34:	je     bc3c <png_get_cHRM_fixed+0x7c>
    bc36:	movslq 0x48(%rsi),%rcx
    bc3a:	mov    %ecx,(%rax)
    bc3c:	mov    $0x4,%eax
    bc41:	mov    0x28(%rbp),%rcx
    bc45:	test   %rcx,%rcx
    bc48:	jne    bc4c <png_get_cHRM_fixed+0x8c>
    bc4a:	leaveq 
    bc4b:	retq   
    bc4c:	movslq 0x4c(%rsi),%rdx
    bc50:	mov    %edx,(%rcx)
    bc52:	leaveq 
    bc53:	retq   
    bc54:	data16 nopw %cs:0x0(%rax,%rax,1)
    bc5f:	nop

000000000000bc60 <png_get_cHRM_XYZ_fixed>:
    bc60:	push   %rbp
    bc61:	mov    %rsp,%rbp
    bc64:	xor    %eax,%eax
    bc66:	test   %rdi,%rdi
    bc69:	jne    bc6d <png_get_cHRM_XYZ_fixed+0xd>
    bc6b:	leaveq 
    bc6c:	retq   
    bc6d:	test   %rsi,%rsi
    bc70:	jne    bc74 <png_get_cHRM_XYZ_fixed+0x14>
    bc72:	leaveq 
    bc73:	retq   
    bc74:	movzwl 0x7e(%rsi),%edi
    bc78:	and    $0x2,%edi
    bc7b:	test   %edi,%edi
    bc7d:	jg     bc81 <png_get_cHRM_XYZ_fixed+0x21>
    bc7f:	leaveq 
    bc80:	retq   
    bc81:	test   %rdx,%rdx
    bc84:	je     bc8c <png_get_cHRM_XYZ_fixed+0x2c>
    bc86:	movslq 0x58(%rsi),%rax
    bc8a:	mov    %eax,(%rdx)
    bc8c:	test   %rcx,%rcx
    bc8f:	je     bc97 <png_get_cHRM_XYZ_fixed+0x37>
    bc91:	movslq 0x5c(%rsi),%rax
    bc95:	mov    %eax,(%rcx)
    bc97:	test   %r8,%r8
    bc9a:	je     bca3 <png_get_cHRM_XYZ_fixed+0x43>
    bc9c:	movslq 0x60(%rsi),%rax
    bca0:	mov    %eax,(%r8)
    bca3:	test   %r9,%r9
    bca6:	je     bcaf <png_get_cHRM_XYZ_fixed+0x4f>
    bca8:	movslq 0x64(%rsi),%rax
    bcac:	mov    %eax,(%r9)
    bcaf:	mov    0x10(%rbp),%rax
    bcb3:	test   %rax,%rax
    bcb6:	je     bcbe <png_get_cHRM_XYZ_fixed+0x5e>
    bcb8:	movslq 0x68(%rsi),%rcx
    bcbc:	mov    %ecx,(%rax)
    bcbe:	mov    0x18(%rbp),%rax
    bcc2:	test   %rax,%rax
    bcc5:	je     bccd <png_get_cHRM_XYZ_fixed+0x6d>
    bcc7:	movslq 0x6c(%rsi),%rcx
    bccb:	mov    %ecx,(%rax)
    bccd:	mov    0x20(%rbp),%rax
    bcd1:	test   %rax,%rax
    bcd4:	je     bcdc <png_get_cHRM_XYZ_fixed+0x7c>
    bcd6:	movslq 0x70(%rsi),%rcx
    bcda:	mov    %ecx,(%rax)
    bcdc:	mov    0x28(%rbp),%rax
    bce0:	test   %rax,%rax
    bce3:	je     bceb <png_get_cHRM_XYZ_fixed+0x8b>
    bce5:	movslq 0x74(%rsi),%rcx
    bce9:	mov    %ecx,(%rax)
    bceb:	mov    $0x4,%eax
    bcf0:	mov    0x30(%rbp),%rcx
    bcf4:	test   %rcx,%rcx
    bcf7:	jne    bcfb <png_get_cHRM_XYZ_fixed+0x9b>
    bcf9:	leaveq 
    bcfa:	retq   
    bcfb:	movslq 0x78(%rsi),%rdx
    bcff:	mov    %edx,(%rcx)
    bd01:	leaveq 
    bd02:	retq   
    bd03:	data16 nopw %cs:0x0(%rax,%rax,1)
    bd0e:	xchg   %ax,%ax

000000000000bd10 <png_get_eXIf>:
    bd10:	push   %rbp
    bd11:	mov    %rsp,%rbp
    bd14:	lea    0x21885(%rip),%rsi        # 2d5a0 <valid_parameters.6+0x4a>
    bd1b:	callq  5390 <png_warning@plt>
    bd20:	xor    %eax,%eax
    bd22:	leaveq 
    bd23:	retq   
    bd24:	data16 nopw %cs:0x0(%rax,%rax,1)
    bd2f:	nop

000000000000bd30 <png_get_eXIf_1>:
    bd30:	push   %rbp
    bd31:	mov    %rsp,%rbp
    bd34:	xor    %eax,%eax
    bd36:	test   %rdi,%rdi
    bd39:	jne    bd3d <png_get_eXIf_1+0xd>
    bd3b:	leaveq 
    bd3c:	retq   
    bd3d:	test   %rsi,%rsi
    bd40:	jne    bd44 <png_get_eXIf_1+0x14>
    bd42:	leaveq 
    bd43:	retq   
    bd44:	mov    0x8(%rsi),%edi
    bd47:	and    $0x10000,%edi
    bd4d:	test   %edi,%edi
    bd4f:	jne    bd53 <png_get_eXIf_1+0x23>
    bd51:	leaveq 
    bd52:	retq   
    bd53:	test   %rcx,%rcx
    bd56:	jne    bd5a <png_get_eXIf_1+0x2a>
    bd58:	leaveq 
    bd59:	retq   
    bd5a:	mov    0xec(%rsi),%eax
    bd60:	mov    %eax,(%rdx)
    bd62:	mov    0xf0(%rsi),%rax
    bd69:	mov    %rax,(%rcx)
    bd6c:	mov    $0x10000,%eax
    bd71:	leaveq 
    bd72:	retq   
    bd73:	data16 nopw %cs:0x0(%rax,%rax,1)
    bd7e:	xchg   %ax,%ax

000000000000bd80 <png_get_gAMA>:
    bd80:	push   %rbp
    bd81:	mov    %rsp,%rbp
    bd84:	xor    %eax,%eax
    bd86:	test   %rdi,%rdi
    bd89:	jne    bd8d <png_get_gAMA+0xd>
    bd8b:	leaveq 
    bd8c:	retq   
    bd8d:	test   %rsi,%rsi
    bd90:	jne    bd94 <png_get_gAMA+0x14>
    bd92:	leaveq 
    bd93:	retq   
    bd94:	movzwl 0x7e(%rsi),%ecx
    bd98:	and    $0x1,%ecx
    bd9b:	test   %ecx,%ecx
    bd9d:	jg     bda1 <png_get_gAMA+0x21>
    bd9f:	leaveq 
    bda0:	retq   
    bda1:	test   %rdx,%rdx
    bda4:	jne    bda8 <png_get_gAMA+0x28>
    bda6:	leaveq 
    bda7:	retq   
    bda8:	movslq 0x34(%rsi),%rax
    bdac:	cvtsi2sd %eax,%xmm0
    bdb0:	movsd  0x21830(%rip),%xmm1        # 2d5e8 <valid_parameters.6+0x92>
    bdb8:	mulsd  %xmm1,%xmm0
    bdbc:	movsd  %xmm0,(%rdx)
    bdc0:	mov    $0x1,%eax
    bdc5:	leaveq 
    bdc6:	retq   
    bdc7:	nopw   0x0(%rax,%rax,1)

000000000000bdd0 <png_get_gAMA_fixed>:
    bdd0:	push   %rbp
    bdd1:	mov    %rsp,%rbp
    bdd4:	xor    %eax,%eax
    bdd6:	test   %rdi,%rdi
    bdd9:	jne    bddd <png_get_gAMA_fixed+0xd>
    bddb:	leaveq 
    bddc:	retq   
    bddd:	test   %rsi,%rsi
    bde0:	jne    bde4 <png_get_gAMA_fixed+0x14>
    bde2:	leaveq 
    bde3:	retq   
    bde4:	movzwl 0x7e(%rsi),%ecx
    bde8:	and    $0x1,%ecx
    bdeb:	test   %ecx,%ecx
    bded:	jg     bdf1 <png_get_gAMA_fixed+0x21>
    bdef:	leaveq 
    bdf0:	retq   
    bdf1:	test   %rdx,%rdx
    bdf4:	jne    bdf8 <png_get_gAMA_fixed+0x28>
    bdf6:	leaveq 
    bdf7:	retq   
    bdf8:	movslq 0x34(%rsi),%rax
    bdfc:	mov    %eax,(%rdx)
    bdfe:	mov    $0x1,%eax
    be03:	leaveq 
    be04:	retq   
    be05:	data16 nopw %cs:0x0(%rax,%rax,1)

000000000000be10 <png_get_hIST>:
    be10:	push   %rbp
    be11:	mov    %rsp,%rbp
    be14:	xor    %eax,%eax
    be16:	test   %rdi,%rdi
    be19:	jne    be1d <png_get_hIST+0xd>
    be1b:	leaveq 
    be1c:	retq   
    be1d:	test   %rsi,%rsi
    be20:	jne    be24 <png_get_hIST+0x14>
    be22:	leaveq 
    be23:	retq   
    be24:	mov    0x8(%rsi),%ecx
    be27:	and    $0x40,%ecx
    be2a:	test   %ecx,%ecx
    be2c:	jne    be30 <png_get_hIST+0x20>
    be2e:	leaveq 
    be2f:	retq   
    be30:	test   %rdx,%rdx
    be33:	jne    be37 <png_get_hIST+0x27>
    be35:	leaveq 
    be36:	retq   
    be37:	mov    0x100(%rsi),%rax
    be3e:	mov    %rax,(%rdx)
    be41:	mov    $0x40,%eax
    be46:	leaveq 
    be47:	retq   
    be48:	nopl   0x0(%rax,%rax,1)

000000000000be50 <png_get_IHDR>:
    be50:	push   %rbp
    be51:	mov    %rsp,%rbp
    be54:	sub    $0x10,%rsp
    be58:	xor    %eax,%eax
    be5a:	test   %rdi,%rdi
    be5d:	jne    be61 <png_get_IHDR+0x11>
    be5f:	leaveq 
    be60:	retq   
    be61:	test   %rsi,%rsi
    be64:	jne    be68 <png_get_IHDR+0x18>
    be66:	leaveq 
    be67:	retq   
    be68:	test   %rdx,%rdx
    be6b:	je     be71 <png_get_IHDR+0x21>
    be6d:	mov    (%rsi),%eax
    be6f:	mov    %eax,(%rdx)
    be71:	test   %rcx,%rcx
    be74:	je     be7b <png_get_IHDR+0x2b>
    be76:	mov    0x4(%rsi),%eax
    be79:	mov    %eax,(%rcx)
    be7b:	test   %r8,%r8
    be7e:	je     be87 <png_get_IHDR+0x37>
    be80:	movzbl 0x24(%rsi),%eax
    be84:	mov    %eax,(%r8)
    be87:	test   %r9,%r9
    be8a:	je     be93 <png_get_IHDR+0x43>
    be8c:	movzbl 0x25(%rsi),%eax
    be90:	mov    %eax,(%r9)
    be93:	mov    0x18(%rbp),%rax
    be97:	test   %rax,%rax
    be9a:	je     bea2 <png_get_IHDR+0x52>
    be9c:	movzbl 0x26(%rsi),%ecx
    bea0:	mov    %ecx,(%rax)
    bea2:	mov    0x20(%rbp),%rax
    bea6:	test   %rax,%rax
    bea9:	je     beb1 <png_get_IHDR+0x61>
    beab:	movzbl 0x27(%rsi),%ecx
    beaf:	mov    %ecx,(%rax)
    beb1:	mov    0x10(%rbp),%rax
    beb5:	test   %rax,%rax
    beb8:	je     bec0 <png_get_IHDR+0x70>
    beba:	movzbl 0x28(%rsi),%ecx
    bebe:	mov    %ecx,(%rax)
    bec0:	movzbl 0x26(%rsi),%r10d
    bec5:	movzbl 0x27(%rsi),%eax
    bec9:	mov    (%rsi),%r11d
    becc:	mov    0x4(%rsi),%edx
    becf:	movzbl 0x24(%rsi),%ecx
    bed3:	movzbl 0x25(%rsi),%r8d
    bed8:	movzbl 0x28(%rsi),%r9d
    bedd:	mov    %r10d,(%rsp)
    bee1:	mov    %eax,0x8(%rsp)
    bee5:	mov    %r11,%rsi
    bee8:	callq  7d90 <png_check_IHDR>
    beed:	mov    $0x1,%eax
    bef2:	leaveq 
    bef3:	retq   
    bef4:	data16 nopw %cs:0x0(%rax,%rax,1)
    beff:	nop

000000000000bf00 <png_get_oFFs>:
    bf00:	push   %rbp
    bf01:	mov    %rsp,%rbp
    bf04:	xor    %eax,%eax
    bf06:	test   %rdi,%rdi
    bf09:	jne    bf0d <png_get_oFFs+0xd>
    bf0b:	leaveq 
    bf0c:	retq   
    bf0d:	test   %rsi,%rsi
    bf10:	jne    bf14 <png_get_oFFs+0x14>
    bf12:	leaveq 
    bf13:	retq   
    bf14:	mov    0x8(%rsi),%edi
    bf17:	and    $0x100,%edi
    bf1d:	test   %edi,%edi
    bf1f:	jne    bf23 <png_get_oFFs+0x23>
    bf21:	leaveq 
    bf22:	retq   
    bf23:	test   %rdx,%rdx
    bf26:	jne    bf2a <png_get_oFFs+0x2a>
    bf28:	leaveq 
    bf29:	retq   
    bf2a:	test   %rcx,%rcx
    bf2d:	jne    bf31 <png_get_oFFs+0x31>
    bf2f:	leaveq 
    bf30:	retq   
    bf31:	test   %r8,%r8
    bf34:	jne    bf38 <png_get_oFFs+0x38>
    bf36:	leaveq 
    bf37:	retq   
    bf38:	movslq 0xd4(%rsi),%rax
    bf3f:	mov    %eax,(%rdx)
    bf41:	movslq 0xd8(%rsi),%rax
    bf48:	mov    %eax,(%rcx)
    bf4a:	movzbl 0xdc(%rsi),%eax
    bf51:	mov    %eax,(%r8)
    bf54:	mov    $0x100,%eax
    bf59:	leaveq 
    bf5a:	retq   
    bf5b:	nopl   0x0(%rax,%rax,1)

000000000000bf60 <png_get_pCAL>:
    bf60:	push   %rbp
    bf61:	mov    %rsp,%rbp
    bf64:	xor    %eax,%eax
    bf66:	test   %rdi,%rdi
    bf69:	jne    bf6d <png_get_pCAL+0xd>
    bf6b:	leaveq 
    bf6c:	retq   
    bf6d:	test   %rsi,%rsi
    bf70:	jne    bf74 <png_get_pCAL+0x14>
    bf72:	leaveq 
    bf73:	retq   
    bf74:	mov    0x8(%rsi),%edi
    bf77:	and    $0x400,%edi
    bf7d:	test   %edi,%edi
    bf7f:	jne    bf83 <png_get_pCAL+0x23>
    bf81:	leaveq 
    bf82:	retq   
    bf83:	test   %rdx,%rdx
    bf86:	jne    bf8a <png_get_pCAL+0x2a>
    bf88:	leaveq 
    bf89:	retq   
    bf8a:	test   %rcx,%rcx
    bf8d:	jne    bf91 <png_get_pCAL+0x31>
    bf8f:	leaveq 
    bf90:	retq   
    bf91:	test   %r8,%r8
    bf94:	jne    bf98 <png_get_pCAL+0x38>
    bf96:	leaveq 
    bf97:	retq   
    bf98:	test   %r9,%r9
    bf9b:	jne    bf9f <png_get_pCAL+0x3f>
    bf9d:	leaveq 
    bf9e:	retq   
    bf9f:	mov    0x10(%rbp),%r11
    bfa3:	test   %r11,%r11
    bfa6:	jne    bfaa <png_get_pCAL+0x4a>
    bfa8:	leaveq 
    bfa9:	retq   
    bfaa:	mov    0x18(%rbp),%rdi
    bfae:	test   %rdi,%rdi
    bfb1:	jne    bfb5 <png_get_pCAL+0x55>
    bfb3:	leaveq 
    bfb4:	retq   
    bfb5:	mov    0x20(%rbp),%r10
    bfb9:	test   %r10,%r10
    bfbc:	jne    bfc0 <png_get_pCAL+0x60>
    bfbe:	leaveq 
    bfbf:	retq   
    bfc0:	mov    0x108(%rsi),%rax
    bfc7:	mov    %rax,(%rdx)
    bfca:	movslq 0x110(%rsi),%rax
    bfd1:	mov    %eax,(%rcx)
    bfd3:	movslq 0x114(%rsi),%rax
    bfda:	mov    %eax,(%r8)
    bfdd:	movzbl 0x128(%rsi),%eax
    bfe4:	mov    %eax,(%r9)
    bfe7:	movzbl 0x129(%rsi),%eax
    bfee:	mov    %eax,(%r11)
    bff1:	mov    0x118(%rsi),%rax
    bff8:	mov    %rax,(%rdi)
    bffb:	mov    0x120(%rsi),%rax
    c002:	mov    %rax,(%r10)
    c005:	mov    $0x400,%eax
    c00a:	leaveq 
    c00b:	retq   
    c00c:	nopl   0x0(%rax)

000000000000c010 <png_get_pHYs>:
    c010:	push   %rbp
    c011:	mov    %rsp,%rbp
    c014:	xor    %eax,%eax
    c016:	test   %rdi,%rdi
    c019:	jne    c01d <png_get_pHYs+0xd>
    c01b:	leaveq 
    c01c:	retq   
    c01d:	test   %rsi,%rsi
    c020:	jne    c024 <png_get_pHYs+0x14>
    c022:	leaveq 
    c023:	retq   
    c024:	mov    0x8(%rsi),%edi
    c027:	and    $0x80,%edi
    c02d:	test   %edi,%edi
    c02f:	jne    c033 <png_get_pHYs+0x23>
    c031:	leaveq 
    c032:	retq   
    c033:	mov    $0x80,%edi
    c038:	test   %rdx,%rdx
    c03b:	je     c048 <png_get_pHYs+0x38>
    c03d:	mov    0xe0(%rsi),%eax
    c043:	mov    %eax,(%rdx)
    c045:	mov    %rdi,%rax
    c048:	test   %rcx,%rcx
    c04b:	je     c058 <png_get_pHYs+0x48>
    c04d:	mov    0xe4(%rsi),%eax
    c053:	mov    %eax,(%rcx)
    c055:	mov    %rdi,%rax
    c058:	test   %r8,%r8
    c05b:	jne    c05f <png_get_pHYs+0x4f>
    c05d:	leaveq 
    c05e:	retq   
    c05f:	movzbl 0xe8(%rsi),%eax
    c066:	mov    %eax,(%r8)
    c069:	mov    %rdi,%rax
    c06c:	leaveq 
    c06d:	retq   
    c06e:	xchg   %ax,%ax

000000000000c070 <png_get_PLTE>:
    c070:	push   %rbp
    c071:	mov    %rsp,%rbp
    c074:	xor    %eax,%eax
    c076:	test   %rdi,%rdi
    c079:	jne    c07d <png_get_PLTE+0xd>
    c07b:	leaveq 
    c07c:	retq   
    c07d:	test   %rsi,%rsi
    c080:	jne    c084 <png_get_PLTE+0x14>
    c082:	leaveq 
    c083:	retq   
    c084:	mov    0x8(%rsi),%edi
    c087:	and    $0x8,%edi
    c08a:	test   %edi,%edi
    c08c:	jne    c090 <png_get_PLTE+0x20>
    c08e:	leaveq 
    c08f:	retq   
    c090:	test   %rdx,%rdx
    c093:	jne    c097 <png_get_PLTE+0x27>
    c095:	leaveq 
    c096:	retq   
    c097:	mov    0x18(%rsi),%rax
    c09b:	mov    %rax,(%rdx)
    c09e:	movzwl 0x20(%rsi),%eax
    c0a2:	mov    %eax,(%rcx)
    c0a4:	mov    $0x8,%eax
    c0a9:	leaveq 
    c0aa:	retq   
    c0ab:	nopl   0x0(%rax,%rax,1)

000000000000c0b0 <png_get_sBIT>:
    c0b0:	push   %rbp
    c0b1:	mov    %rsp,%rbp
    c0b4:	xor    %eax,%eax
    c0b6:	test   %rdi,%rdi
    c0b9:	jne    c0bd <png_get_sBIT+0xd>
    c0bb:	leaveq 
    c0bc:	retq   
    c0bd:	test   %rsi,%rsi
    c0c0:	jne    c0c4 <png_get_sBIT+0x14>
    c0c2:	leaveq 
    c0c3:	retq   
    c0c4:	mov    0x8(%rsi),%ecx
    c0c7:	and    $0x2,%ecx
    c0ca:	test   %ecx,%ecx
    c0cc:	jne    c0d0 <png_get_sBIT+0x20>
    c0ce:	leaveq 
    c0cf:	retq   
    c0d0:	test   %rdx,%rdx
    c0d3:	jne    c0d7 <png_get_sBIT+0x27>
    c0d5:	leaveq 
    c0d6:	retq   
    c0d7:	lea    0xb0(%rsi),%rax
    c0de:	mov    %rax,(%rdx)
    c0e1:	mov    $0x2,%eax
    c0e6:	leaveq 
    c0e7:	retq   
    c0e8:	nopl   0x0(%rax,%rax,1)

000000000000c0f0 <png_get_sRGB>:
    c0f0:	push   %rbp
    c0f1:	mov    %rsp,%rbp
    c0f4:	xor    %eax,%eax
    c0f6:	test   %rdi,%rdi
    c0f9:	jne    c0fd <png_get_sRGB+0xd>
    c0fb:	leaveq 
    c0fc:	retq   
    c0fd:	test   %rsi,%rsi
    c100:	jne    c104 <png_get_sRGB+0x14>
    c102:	leaveq 
    c103:	retq   
    c104:	mov    0x8(%rsi),%ecx
    c107:	and    $0x800,%ecx
    c10d:	test   %ecx,%ecx
    c10f:	jne    c113 <png_get_sRGB+0x23>
    c111:	leaveq 
    c112:	retq   
    c113:	test   %rdx,%rdx
    c116:	jne    c11a <png_get_sRGB+0x2a>
    c118:	leaveq 
    c119:	retq   
    c11a:	movzwl 0x7c(%rsi),%eax
    c11e:	mov    %eax,(%rdx)
    c120:	mov    $0x800,%eax
    c125:	leaveq 
    c126:	retq   
    c127:	nopw   0x0(%rax,%rax,1)

000000000000c130 <png_get_iCCP>:
    c130:	push   %rbp
    c131:	mov    %rsp,%rbp
    c134:	xor    %eax,%eax
    c136:	test   %rdi,%rdi
    c139:	jne    c13d <png_get_iCCP+0xd>
    c13b:	leaveq 
    c13c:	retq   
    c13d:	test   %rsi,%rsi
    c140:	jne    c144 <png_get_iCCP+0x14>
    c142:	leaveq 
    c143:	retq   
    c144:	mov    0x8(%rsi),%edi
    c147:	and    $0x1000,%edi
    c14d:	test   %edi,%edi
    c14f:	jne    c153 <png_get_iCCP+0x23>
    c151:	leaveq 
    c152:	retq   
    c153:	test   %rdx,%rdx
    c156:	jne    c15a <png_get_iCCP+0x2a>
    c158:	leaveq 
    c159:	retq   
    c15a:	test   %rcx,%rcx
    c15d:	jne    c161 <png_get_iCCP+0x31>
    c15f:	leaveq 
    c160:	retq   
    c161:	test   %r8,%r8
    c164:	jne    c168 <png_get_iCCP+0x38>
    c166:	leaveq 
    c167:	retq   
    c168:	test   %r9,%r9
    c16b:	jne    c16f <png_get_iCCP+0x3f>
    c16d:	leaveq 
    c16e:	retq   
    c16f:	mov    0x80(%rsi),%rax
    c176:	mov    %rax,(%rdx)
    c179:	mov    0x88(%rsi),%rax
    c180:	mov    %rax,(%r8)
    c183:	mov    0x88(%rsi),%rsi
    c18a:	movzbl (%rsi),%eax
    c18d:	shl    $0x18,%eax
    c190:	movzbl 0x1(%rsi),%edx
    c194:	shl    $0x10,%edx
    c197:	add    %eax,%edx
    c199:	movzbl 0x2(%rsi),%eax
    c19d:	shl    $0x8,%eax
    c1a0:	add    %edx,%eax
    c1a2:	movzbl 0x3(%rsi),%edx
    c1a6:	add    %edx,%eax
    c1a8:	mov    %eax,(%r9)
    c1ab:	movl   $0x0,(%rcx)
    c1b1:	mov    $0x1000,%eax
    c1b6:	leaveq 
    c1b7:	retq   
    c1b8:	nopl   0x0(%rax,%rax,1)

000000000000c1c0 <png_get_sPLT>:
    c1c0:	push   %rbp
    c1c1:	mov    %rsp,%rbp
    c1c4:	xor    %eax,%eax
    c1c6:	test   %rdi,%rdi
    c1c9:	jne    c1cd <png_get_sPLT+0xd>
    c1cb:	leaveq 
    c1cc:	retq   
    c1cd:	test   %rsi,%rsi
    c1d0:	jne    c1d4 <png_get_sPLT+0x14>
    c1d2:	leaveq 
    c1d3:	retq   
    c1d4:	test   %rdx,%rdx
    c1d7:	jne    c1db <png_get_sPLT+0x1b>
    c1d9:	leaveq 
    c1da:	retq   
    c1db:	mov    0x140(%rsi),%rax
    c1e2:	mov    %rax,(%rdx)
    c1e5:	movslq 0x148(%rsi),%rax
    c1ec:	leaveq 
    c1ed:	retq   
    c1ee:	xchg   %ax,%ax

000000000000c1f0 <png_get_text>:
    c1f0:	push   %rbp
    c1f1:	mov    %rsp,%rbp
    c1f4:	test   %rdi,%rdi
    c1f7:	jne    c202 <png_get_text+0x12>
    c1f9:	xor    %eax,%eax
    c1fb:	test   %rcx,%rcx
    c1fe:	jne    c238 <png_get_text+0x48>
    c200:	leaveq 
    c201:	retq   
    c202:	test   %rsi,%rsi
    c205:	je     c1f9 <png_get_text+0x9>
    c207:	movslq 0x94(%rsi),%rax
    c20e:	test   %eax,%eax
    c210:	jle    c1f9 <png_get_text+0x9>
    c212:	test   %rdx,%rdx
    c215:	je     c221 <png_get_text+0x31>
    c217:	mov    0xa0(%rsi),%rax
    c21e:	mov    %rax,(%rdx)
    c221:	test   %rcx,%rcx
    c224:	je     c22f <png_get_text+0x3f>
    c226:	movslq 0x94(%rsi),%rax
    c22d:	mov    %eax,(%rcx)
    c22f:	movslq 0x94(%rsi),%rax
    c236:	leaveq 
    c237:	retq   
    c238:	movl   $0x0,(%rcx)
    c23e:	leaveq 
    c23f:	retq   

000000000000c240 <png_get_tIME>:
    c240:	push   %rbp
    c241:	mov    %rsp,%rbp
    c244:	xor    %eax,%eax
    c246:	test   %rdi,%rdi
    c249:	jne    c24d <png_get_tIME+0xd>
    c24b:	leaveq 
    c24c:	retq   
    c24d:	test   %rsi,%rsi
    c250:	jne    c254 <png_get_tIME+0x14>
    c252:	leaveq 
    c253:	retq   
    c254:	mov    0x8(%rsi),%ecx
    c257:	and    $0x200,%ecx
    c25d:	test   %ecx,%ecx
    c25f:	jne    c263 <png_get_tIME+0x23>
    c261:	leaveq 
    c262:	retq   
    c263:	test   %rdx,%rdx
    c266:	jne    c26a <png_get_tIME+0x2a>
    c268:	leaveq 
    c269:	retq   
    c26a:	lea    0xa8(%rsi),%rax
    c271:	mov    %rax,(%rdx)
    c274:	mov    $0x200,%eax
    c279:	leaveq 
    c27a:	retq   
    c27b:	nopl   0x0(%rax,%rax,1)

000000000000c280 <png_get_tRNS>:
    c280:	push   %rbp
    c281:	mov    %rsp,%rbp
    c284:	xor    %eax,%eax
    c286:	test   %rdi,%rdi
    c289:	jne    c28d <png_get_tRNS+0xd>
    c28b:	leaveq 
    c28c:	retq   
    c28d:	test   %rsi,%rsi
    c290:	jne    c294 <png_get_tRNS+0x14>
    c292:	leaveq 
    c293:	retq   
    c294:	mov    0x8(%rsi),%edi
    c297:	and    $0x10,%edi
    c29a:	test   %edi,%edi
    c29c:	jne    c2a0 <png_get_tRNS+0x20>
    c29e:	leaveq 
    c29f:	retq   
    c2a0:	mov    $0x10,%edi
    c2a5:	movzbl 0x25(%rsi),%r9d
    c2aa:	cmp    $0x3,%r9b
    c2ae:	je     c2d0 <png_get_tRNS+0x50>
    c2b0:	test   %r8,%r8
    c2b3:	je     c2c2 <png_get_tRNS+0x42>
    c2b5:	lea    0xc0(%rsi),%rax
    c2bc:	mov    %rax,(%r8)
    c2bf:	mov    %rdi,%rax
    c2c2:	test   %rdx,%rdx
    c2c5:	je     c2f1 <png_get_tRNS+0x71>
    c2c7:	movq   $0x0,(%rdx)
    c2ce:	jmp    c2f1 <png_get_tRNS+0x71>
    c2d0:	test   %rdx,%rdx
    c2d3:	je     c2e2 <png_get_tRNS+0x62>
    c2d5:	mov    0xb8(%rsi),%rax
    c2dc:	mov    %rax,(%rdx)
    c2df:	mov    %rdi,%rax
    c2e2:	test   %r8,%r8
    c2e5:	je     c2f1 <png_get_tRNS+0x71>
    c2e7:	lea    0xc0(%rsi),%rdx
    c2ee:	mov    %rdx,(%r8)
    c2f1:	test   %rcx,%rcx
    c2f4:	jne    c2f8 <png_get_tRNS+0x78>
    c2f6:	leaveq 
    c2f7:	retq   
    c2f8:	movzwl 0x22(%rsi),%eax
    c2fc:	mov    %eax,(%rcx)
    c2fe:	mov    %rdi,%rax
    c301:	leaveq 
    c302:	retq   
    c303:	data16 nopw %cs:0x0(%rax,%rax,1)
    c30e:	xchg   %ax,%ax

000000000000c310 <png_get_sCAL>:
    c310:	push   %rbp
    c311:	mov    %rsp,%rbp
    c314:	sub    $0x20,%rsp
    c318:	xor    %eax,%eax
    c31a:	test   %rdi,%rdi
    c31d:	jne    c321 <png_get_sCAL+0x11>
    c31f:	leaveq 
    c320:	retq   
    c321:	test   %rsi,%rsi
    c324:	jne    c328 <png_get_sCAL+0x18>
    c326:	leaveq 
    c327:	retq   
    c328:	mov    0x8(%rsi),%edi
    c32b:	and    $0x4000,%edi
    c331:	test   %edi,%edi
    c333:	jne    c337 <png_get_sCAL+0x27>
    c335:	leaveq 
    c336:	retq   
    c337:	movzbl 0x14c(%rsi),%eax
    c33e:	mov    %eax,(%rdx)
    c340:	mov    0x150(%rsi),%rdi
    c347:	mov    %r13,-0x8(%rbp)
    c34b:	mov    %r14,-0x10(%rbp)
    c34f:	mov    %r15,-0x18(%rbp)
    c353:	mov    %r8,%r13
    c356:	mov    %rcx,%r14
    c359:	mov    %rsi,%r15
    c35c:	callq  51a0 <atof@plt>
    c361:	movsd  %xmm0,(%r14)
    c366:	mov    0x158(%r15),%rdi
    c36d:	callq  51a0 <atof@plt>
    c372:	movsd  %xmm0,0x0(%r13)
    c378:	mov    $0x4000,%eax
    c37d:	mov    -0x18(%rbp),%r15
    c381:	mov    -0x10(%rbp),%r14
    c385:	mov    -0x8(%rbp),%r13
    c389:	leaveq 
    c38a:	retq   
    c38b:	nopl   0x0(%rax,%rax,1)

000000000000c390 <png_get_sCAL_fixed>:
    c390:	push   %rbp
    c391:	mov    %rsp,%rbp
    c394:	sub    $0x20,%rsp
    c398:	xor    %eax,%eax
    c39a:	test   %rdi,%rdi
    c39d:	jne    c3a1 <png_get_sCAL_fixed+0x11>
    c39f:	leaveq 
    c3a0:	retq   
    c3a1:	test   %rsi,%rsi
    c3a4:	jne    c3a8 <png_get_sCAL_fixed+0x18>
    c3a6:	leaveq 
    c3a7:	retq   
    c3a8:	mov    0x8(%rsi),%r9d
    c3ac:	and    $0x4000,%r9d
    c3b3:	test   %r9d,%r9d
    c3b6:	jne    c3ba <png_get_sCAL_fixed+0x2a>
    c3b8:	leaveq 
    c3b9:	retq   
    c3ba:	movzbl 0x14c(%rsi),%eax
    c3c1:	mov    %eax,(%rdx)
    c3c3:	mov    0x150(%rsi),%rax
    c3ca:	mov    %r12,-0x8(%rbp)
    c3ce:	mov    %r13,-0x10(%rbp)
    c3d2:	mov    %r14,-0x18(%rbp)
    c3d6:	mov    %r15,-0x20(%rbp)
    c3da:	mov    %rdi,%r12
    c3dd:	mov    %rax,%rdi
    c3e0:	mov    %r8,%r13
    c3e3:	mov    %rcx,%r14
    c3e6:	mov    %rsi,%r15
    c3e9:	callq  51a0 <atof@plt>
    c3ee:	lea    0x211da(%rip),%rsi        # 2d5cf <valid_parameters.6+0x79>
    c3f5:	mov    %r12,%rdi
    c3f8:	callq  69f0 <png_fixed>
    c3fd:	mov    %eax,(%r14)
    c400:	mov    0x158(%r15),%rdi
    c407:	callq  51a0 <atof@plt>
    c40c:	mov    %r12,%rdi
    c40f:	lea    0x211c4(%rip),%rsi        # 2d5da <valid_parameters.6+0x84>
    c416:	callq  69f0 <png_fixed>
    c41b:	mov    %eax,0x0(%r13)
    c41f:	mov    $0x4000,%eax
    c424:	mov    -0x20(%rbp),%r15
    c428:	mov    -0x18(%rbp),%r14
    c42c:	mov    -0x10(%rbp),%r13
    c430:	mov    -0x8(%rbp),%r12
    c434:	leaveq 
    c435:	retq   
    c436:	nopw   %cs:0x0(%rax,%rax,1)

000000000000c440 <png_get_sCAL_s>:
    c440:	push   %rbp
    c441:	mov    %rsp,%rbp
    c444:	xor    %eax,%eax
    c446:	test   %rdi,%rdi
    c449:	jne    c44d <png_get_sCAL_s+0xd>
    c44b:	leaveq 
    c44c:	retq   
    c44d:	test   %rsi,%rsi
    c450:	jne    c454 <png_get_sCAL_s+0x14>
    c452:	leaveq 
    c453:	retq   
    c454:	mov    0x8(%rsi),%edi
    c457:	and    $0x4000,%edi
    c45d:	test   %edi,%edi
    c45f:	jne    c463 <png_get_sCAL_s+0x23>
    c461:	leaveq 
    c462:	retq   
    c463:	movzbl 0x14c(%rsi),%eax
    c46a:	mov    %eax,(%rdx)
    c46c:	mov    0x150(%rsi),%rax
    c473:	mov    %rax,(%rcx)
    c476:	mov    0x158(%rsi),%rax
    c47d:	mov    %rax,(%r8)
    c480:	mov    $0x4000,%eax
    c485:	leaveq 
    c486:	retq   
    c487:	nopw   0x0(%rax,%rax,1)

000000000000c490 <png_get_unknown_chunks>:
    c490:	push   %rbp
    c491:	mov    %rsp,%rbp
    c494:	xor    %eax,%eax
    c496:	test   %rdi,%rdi
    c499:	jne    c49d <png_get_unknown_chunks+0xd>
    c49b:	leaveq 
    c49c:	retq   
    c49d:	test   %rsi,%rsi
    c4a0:	jne    c4a4 <png_get_unknown_chunks+0x14>
    c4a2:	leaveq 
    c4a3:	retq   
    c4a4:	test   %rdx,%rdx
    c4a7:	jne    c4ab <png_get_unknown_chunks+0x1b>
    c4a9:	leaveq 
    c4aa:	retq   
    c4ab:	mov    0x130(%rsi),%rax
    c4b2:	mov    %rax,(%rdx)
    c4b5:	movslq 0x138(%rsi),%rax
    c4bc:	leaveq 
    c4bd:	retq   
    c4be:	xchg   %ax,%ax

000000000000c4c0 <png_get_user_width_max>:
    c4c0:	push   %rbp
    c4c1:	mov    %rsp,%rbp
    c4c4:	test   %rdi,%rdi
    c4c7:	jne    c4cd <png_get_user_width_max+0xd>
    c4c9:	xor    %eax,%eax
    c4cb:	leaveq 
    c4cc:	retq   
    c4cd:	mov    0x41c(%rdi),%eax
    c4d3:	leaveq 
    c4d4:	retq   
    c4d5:	data16 nopw %cs:0x0(%rax,%rax,1)

000000000000c4e0 <png_get_user_height_max>:
    c4e0:	push   %rbp
    c4e1:	mov    %rsp,%rbp
    c4e4:	test   %rdi,%rdi
    c4e7:	jne    c4ed <png_get_user_height_max+0xd>
    c4e9:	xor    %eax,%eax
    c4eb:	leaveq 
    c4ec:	retq   
    c4ed:	mov    0x420(%rdi),%eax
    c4f3:	leaveq 
    c4f4:	retq   
    c4f5:	data16 nopw %cs:0x0(%rax,%rax,1)

000000000000c500 <png_get_chunk_cache_max>:
    c500:	push   %rbp
    c501:	mov    %rsp,%rbp
    c504:	test   %rdi,%rdi
    c507:	jne    c50d <png_get_chunk_cache_max+0xd>
    c509:	xor    %eax,%eax
    c50b:	leaveq 
    c50c:	retq   
    c50d:	mov    0x424(%rdi),%eax
    c513:	leaveq 
    c514:	retq   
    c515:	data16 nopw %cs:0x0(%rax,%rax,1)

000000000000c520 <png_get_chunk_malloc_max>:
    c520:	push   %rbp
    c521:	mov    %rsp,%rbp
    c524:	test   %rdi,%rdi
    c527:	jne    c52d <png_get_chunk_malloc_max+0xd>
    c529:	xor    %eax,%eax
    c52b:	leaveq 
    c52c:	retq   
    c52d:	mov    0x428(%rdi),%rax
    c534:	leaveq 
    c535:	retq   
    c536:	nopw   %cs:0x0(%rax,%rax,1)

000000000000c540 <png_get_pixels_per_inch>:
    c540:	push   %rbp
    c541:	mov    %rsp,%rbp
    c544:	callq  5710 <png_get_pixels_per_meter@plt>
    c549:	mov    %rax,%rdi
    c54c:	callq  c750 <ppi_from_ppm>
    c551:	leaveq 
    c552:	retq   
    c553:	data16 nopw %cs:0x0(%rax,%rax,1)
    c55e:	xchg   %ax,%ax

000000000000c560 <png_get_x_pixels_per_inch>:
    c560:	push   %rbp
    c561:	mov    %rsp,%rbp
    c564:	callq  5210 <png_get_x_pixels_per_meter@plt>
    c569:	mov    %rax,%rdi
    c56c:	callq  c750 <ppi_from_ppm>
    c571:	leaveq 
    c572:	retq   
    c573:	data16 nopw %cs:0x0(%rax,%rax,1)
    c57e:	xchg   %ax,%ax

000000000000c580 <png_get_y_pixels_per_inch>:
    c580:	push   %rbp
    c581:	mov    %rsp,%rbp
    c584:	callq  53a0 <png_get_y_pixels_per_meter@plt>
    c589:	mov    %rax,%rdi
    c58c:	callq  c750 <ppi_from_ppm>
    c591:	leaveq 
    c592:	retq   
    c593:	data16 nopw %cs:0x0(%rax,%rax,1)
    c59e:	xchg   %ax,%ax

000000000000c5a0 <png_get_x_offset_inches>:
    c5a0:	push   %rbp
    c5a1:	mov    %rsp,%rbp
    c5a4:	callq  52f0 <png_get_x_offset_microns@plt>
    c5a9:	cvtsi2sd %eax,%xmm0
    c5ad:	movsd  0x2103b(%rip),%xmm1        # 2d5f0 <valid_parameters.6+0x9a>
    c5b5:	mulsd  %xmm1,%xmm0
    c5b9:	cvtsd2ss %xmm0,%xmm0
    c5bd:	leaveq 
    c5be:	retq   
    c5bf:	nop

000000000000c5c0 <png_get_x_offset_inches_fixed>:
    c5c0:	push   %rbp
    c5c1:	mov    %rsp,%rbp
    c5c4:	sub    $0x10,%rsp
    c5c8:	mov    %r15,-0x8(%rbp)
    c5cc:	mov    %rdi,%r15
    c5cf:	callq  52f0 <png_get_x_offset_microns@plt>
    c5d4:	mov    %rax,%rsi
    c5d7:	mov    %r15,%rdi
    c5da:	callq  c790 <png_fixed_inches_from_microns>
    c5df:	mov    -0x8(%rbp),%r15
    c5e3:	leaveq 
    c5e4:	retq   
    c5e5:	data16 nopw %cs:0x0(%rax,%rax,1)

000000000000c5f0 <png_get_y_offset_inches>:
    c5f0:	push   %rbp
    c5f1:	mov    %rsp,%rbp
    c5f4:	callq  5030 <png_get_y_offset_microns@plt>
    c5f9:	cvtsi2sd %eax,%xmm0
    c5fd:	movsd  0x20feb(%rip),%xmm1        # 2d5f0 <valid_parameters.6+0x9a>
    c605:	mulsd  %xmm1,%xmm0
    c609:	cvtsd2ss %xmm0,%xmm0
    c60d:	leaveq 
    c60e:	retq   
    c60f:	nop

000000000000c610 <png_get_y_offset_inches_fixed>:
    c610:	push   %rbp
    c611:	mov    %rsp,%rbp
    c614:	sub    $0x10,%rsp
    c618:	mov    %r15,-0x8(%rbp)
    c61c:	mov    %rdi,%r15
    c61f:	callq  5030 <png_get_y_offset_microns@plt>
    c624:	mov    %rax,%rsi
    c627:	mov    %r15,%rdi
    c62a:	callq  c790 <png_fixed_inches_from_microns>
    c62f:	mov    -0x8(%rbp),%r15
    c633:	leaveq 
    c634:	retq   
    c635:	data16 nopw %cs:0x0(%rax,%rax,1)

000000000000c640 <png_get_pHYs_dpi>:
    c640:	push   %rbp
    c641:	mov    %rsp,%rbp
    c644:	xor    %eax,%eax
    c646:	test   %rdi,%rdi
    c649:	jne    c64d <png_get_pHYs_dpi+0xd>
    c64b:	leaveq 
    c64c:	retq   
    c64d:	test   %rsi,%rsi
    c650:	jne    c654 <png_get_pHYs_dpi+0x14>
    c652:	leaveq 
    c653:	retq   
    c654:	mov    0x8(%rsi),%edi
    c657:	and    $0x80,%edi
    c65d:	test   %edi,%edi
    c65f:	jne    c663 <png_get_pHYs_dpi+0x23>
    c661:	leaveq 
    c662:	retq   
    c663:	mov    $0x80,%edi
    c668:	test   %rdx,%rdx
    c66b:	je     c678 <png_get_pHYs_dpi+0x38>
    c66d:	mov    0xe0(%rsi),%eax
    c673:	mov    %eax,(%rdx)
    c675:	mov    %rdi,%rax
    c678:	test   %rcx,%rcx
    c67b:	je     c688 <png_get_pHYs_dpi+0x48>
    c67d:	mov    0xe4(%rsi),%eax
    c683:	mov    %eax,(%rcx)
    c685:	mov    %rdi,%rax
    c688:	test   %r8,%r8
    c68b:	jne    c68f <png_get_pHYs_dpi+0x4f>
    c68d:	leaveq 
    c68e:	retq   
    c68f:	movzbl 0xe8(%rsi),%eax
    c696:	mov    %eax,(%r8)
    c699:	cmp    $0x1,%al
    c69b:	je     c6a2 <png_get_pHYs_dpi+0x62>
    c69d:	mov    %rdi,%rax
    c6a0:	leaveq 
    c6a1:	retq   
    c6a2:	test   %rdx,%rdx
    c6a5:	movsd  0x20f4b(%rip),%xmm1        # 2d5f8 <valid_parameters.6+0xa2>
    c6ad:	movsd  0x20f4b(%rip),%xmm2        # 2d600 <valid_parameters.6+0xaa>
    c6b5:	je     c6cf <png_get_pHYs_dpi+0x8f>
    c6b7:	mov    (%rdx),%eax
    c6b9:	mov    %eax,%eax
    c6bb:	cvtsi2sd %rax,%xmm0
    c6c0:	mulsd  %xmm1,%xmm0
    c6c4:	addsd  %xmm2,%xmm0
    c6c8:	cvttsd2si %xmm0,%rax
    c6cd:	mov    %eax,(%rdx)
    c6cf:	test   %rcx,%rcx
    c6d2:	jne    c6d9 <png_get_pHYs_dpi+0x99>
    c6d4:	mov    %rdi,%rax
    c6d7:	leaveq 
    c6d8:	retq   
    c6d9:	mov    (%rcx),%eax
    c6db:	mov    %eax,%eax
    c6dd:	cvtsi2sd %rax,%xmm0
    c6e2:	mulsd  %xmm1,%xmm0
    c6e6:	addsd  %xmm2,%xmm0
    c6ea:	cvttsd2si %xmm0,%rax
    c6ef:	mov    %eax,(%rcx)
    c6f1:	mov    %rdi,%rax
    c6f4:	leaveq 
    c6f5:	retq   
    c6f6:	nopw   %cs:0x0(%rax,%rax,1)

000000000000c700 <png_get_io_state>:
    c700:	push   %rbp
    c701:	mov    %rsp,%rbp
    c704:	mov    0x46c(%rdi),%eax
    c70a:	leaveq 
    c70b:	retq   
    c70c:	nopl   0x0(%rax)

000000000000c710 <png_get_io_chunk_type>:
    c710:	push   %rbp
    c711:	mov    %rsp,%rbp
    c714:	mov    0x218(%rdi),%eax
    c71a:	leaveq 
    c71b:	retq   
    c71c:	nopl   0x0(%rax)

000000000000c720 <png_get_palette_max>:
    c720:	push   %rbp
    c721:	mov    %rsp,%rbp
    c724:	mov    $0xffffffffffffffff,%rax
    c72b:	test   %rdi,%rdi
    c72e:	jne    c732 <png_get_palette_max+0x12>
    c730:	leaveq 
    c731:	retq   
    c732:	test   %rsi,%rsi
    c735:	jne    c739 <png_get_palette_max+0x19>
    c737:	leaveq 
    c738:	retq   
    c739:	movslq 0x25c(%rdi),%rax
    c740:	leaveq 
    c741:	retq   
    c742:	data16 nopw %cs:0x0(%rax,%rax,1)
    c74d:	nopl   (%rax)

000000000000c750 <ppi_from_ppm>:
    c750:	push   %rbp
    c751:	mov    %rsp,%rbp
    c754:	sub    $0x10,%rsp
    c758:	xor    %eax,%eax
    c75a:	cmp    $0x7fffffff,%edi
    c760:	jbe    c764 <ppi_from_ppm+0x14>
    c762:	leaveq 
    c763:	retq   
    c764:	mov    %rdi,%rsi
    c767:	lea    -0x4(%rbp),%rdi
    c76b:	mov    $0x7f,%edx
    c770:	mov    $0x1388,%ecx
    c775:	callq  8980 <png_muldiv>
    c77a:	test   %eax,%eax
    c77c:	jne    c782 <ppi_from_ppm+0x32>
    c77e:	xor    %eax,%eax
    c780:	leaveq 
    c781:	retq   
    c782:	mov    -0x4(%rbp),%eax
    c785:	leaveq 
    c786:	retq   
    c787:	nopw   0x0(%rax,%rax,1)

000000000000c790 <png_fixed_inches_from_microns>:
    c790:	push   %rbp
    c791:	mov    %rsp,%rbp
    c794:	mov    $0x1f4,%edx
    c799:	mov    $0x7f,%ecx
    c79e:	callq  8a10 <png_muldiv_warn>
    c7a3:	leaveq 
    c7a4:	retq   
    c7a5:	nopw   %cs:0x0(%rax,%rax,1)
    c7af:	nop

000000000000c7b0 <png_set_mem_fn>:
    c7b0:	push   %rbp
    c7b1:	mov    %rsp,%rbp
    c7b4:	test   %rdi,%rdi
    c7b7:	jne    c7bb <png_set_mem_fn+0xb>
    c7b9:	leaveq 
    c7ba:	retq   
    c7bb:	mov    %rsi,0x3e0(%rdi)
    c7c2:	mov    %rdx,0x3e8(%rdi)
    c7c9:	mov    %rcx,0x3f0(%rdi)
    c7d0:	leaveq 
    c7d1:	retq   
    c7d2:	data16 nopw %cs:0x0(%rax,%rax,1)
    c7dd:	nopl   (%rax)

000000000000c7e0 <png_get_mem_ptr>:
    c7e0:	push   %rbp
    c7e1:	mov    %rsp,%rbp
    c7e4:	test   %rdi,%rdi
    c7e7:	jne    c7ed <png_get_mem_ptr+0xd>
    c7e9:	xor    %eax,%eax
    c7eb:	leaveq 
    c7ec:	retq   
    c7ed:	mov    0x3e0(%rdi),%rax
    c7f4:	leaveq 
    c7f5:	retq   
    c7f6:	nopw   %cs:0x0(%rax,%rax,1)

000000000000c800 <png_malloc>:
    c800:	push   %rbp
    c801:	mov    %rsp,%rbp
    c804:	sub    $0x10,%rsp
    c808:	test   %rdi,%rdi
    c80b:	jne    c811 <png_malloc+0x11>
    c80d:	xor    %eax,%eax
    c80f:	leaveq 
    c810:	retq   
    c811:	mov    %rdi,%rax
    c814:	mov    %rdi,-0x8(%rbp)
    c818:	mov    %rax,%rdi
    c81b:	callq  c950 <png_malloc_base>
    c820:	test   %rax,%rax
    c823:	je     c827 <png_malloc+0x27>
    c825:	leaveq 
    c826:	retq   
    c827:	lea    0x20dda(%rip),%rsi        # 2d608 <valid_parameters.6+0xb2>
    c82e:	mov    -0x8(%rbp),%rdi
    c832:	callq  5470 <png_error@plt>
    c837:	nopw   0x0(%rax,%rax,1)

000000000000c840 <png_calloc>:
    c840:	push   %rbp
    c841:	mov    %rsp,%rbp
    c844:	sub    $0x10,%rsp
    c848:	mov    %rsi,-0x8(%rbp)
    c84c:	callq  5800 <png_malloc@plt>
    c851:	test   %rax,%rax
    c854:	jne    c858 <png_calloc+0x18>
    c856:	leaveq 
    c857:	retq   
    c858:	xor    %esi,%esi
    c85a:	mov    %rax,%rdi
    c85d:	mov    %r15,-0x10(%rbp)
    c861:	mov    %rax,%r15
    c864:	mov    -0x8(%rbp),%rdx
    c868:	callq  5350 <memset@plt>
    c86d:	mov    %r15,%rax
    c870:	mov    -0x10(%rbp),%r15
    c874:	leaveq 
    c875:	retq   
    c876:	nopw   %cs:0x0(%rax,%rax,1)

000000000000c880 <png_malloc_warn>:
    c880:	push   %rbp
    c881:	mov    %rsp,%rbp
    c884:	sub    $0x10,%rsp
    c888:	xor    %eax,%eax
    c88a:	test   %rdi,%rdi
    c88d:	jne    c891 <png_malloc_warn+0x11>
    c88f:	leaveq 
    c890:	retq   
    c891:	mov    %rdi,%rax
    c894:	mov    %rdi,-0x8(%rbp)
    c898:	mov    %rax,%rdi
    c89b:	callq  c950 <png_malloc_base>
    c8a0:	test   %rax,%rax
    c8a3:	je     c8a7 <png_malloc_warn+0x27>
    c8a5:	leaveq 
    c8a6:	retq   
    c8a7:	lea    0x20d5a(%rip),%rsi        # 2d608 <valid_parameters.6+0xb2>
    c8ae:	mov    -0x8(%rbp),%rdi
    c8b2:	callq  5390 <png_warning@plt>
    c8b7:	xor    %eax,%eax
    c8b9:	leaveq 
    c8ba:	retq   
    c8bb:	nopl   0x0(%rax,%rax,1)

000000000000c8c0 <png_free>:
    c8c0:	push   %rbp
    c8c1:	mov    %rsp,%rbp
    c8c4:	test   %rdi,%rdi
    c8c7:	jne    c8cb <png_free+0xb>
    c8c9:	leaveq 
    c8ca:	retq   
    c8cb:	test   %rsi,%rsi
    c8ce:	jne    c8d2 <png_free+0x12>
    c8d0:	leaveq 
    c8d1:	retq   
    c8d2:	mov    0x3f0(%rdi),%rax
    c8d9:	test   %rax,%rax
    c8dc:	jne    c8e5 <png_free+0x25>
    c8de:	callq  5700 <png_free_default@plt>
    c8e3:	leaveq 
    c8e4:	retq   
    c8e5:	callq  *%rax
    c8e7:	leaveq 
    c8e8:	retq   
    c8e9:	nopl   0x0(%rax)

000000000000c8f0 <png_malloc_default>:
    c8f0:	push   %rbp
    c8f1:	mov    %rsp,%rbp
    c8f4:	sub    $0x10,%rsp
    c8f8:	xor    %eax,%eax
    c8fa:	test   %rdi,%rdi
    c8fd:	jne    c901 <png_malloc_default+0x11>
    c8ff:	leaveq 
    c900:	retq   
    c901:	mov    %rdi,-0x8(%rbp)
    c905:	mov    %rax,%rdi
    c908:	callq  c950 <png_malloc_base>
    c90d:	test   %rax,%rax
    c910:	je     c914 <png_malloc_default+0x24>
    c912:	leaveq 
    c913:	retq   
    c914:	lea    0x20cfb(%rip),%rsi        # 2d616 <valid_parameters.6+0xc0>
    c91b:	mov    -0x8(%rbp),%rdi
    c91f:	callq  5470 <png_error@plt>
    c924:	data16 nopw %cs:0x0(%rax,%rax,1)
    c92f:	nop

000000000000c930 <png_free_default>:
    c930:	push   %rbp
    c931:	mov    %rsp,%rbp
    c934:	test   %rdi,%rdi
    c937:	jne    c93b <png_free_default+0xb>
    c939:	leaveq 
    c93a:	retq   
    c93b:	test   %rsi,%rsi
    c93e:	jne    c942 <png_free_default+0x12>
    c940:	leaveq 
    c941:	retq   
    c942:	mov    %rsi,%rdi
    c945:	callq  5070 <free@plt>
    c94a:	leaveq 
    c94b:	retq   
    c94c:	nopl   0x0(%rax)

000000000000c950 <png_malloc_base>:
    c950:	push   %rbp
    c951:	mov    %rsp,%rbp
    c954:	test   %rsi,%rsi
    c957:	jne    c95d <png_malloc_base+0xd>
    c959:	xor    %eax,%eax
    c95b:	leaveq 
    c95c:	retq   
    c95d:	test   %rdi,%rdi
    c960:	jne    c96c <png_malloc_base+0x1c>
    c962:	mov    %rsi,%rdi
    c965:	callq  55c0 <malloc@plt>
    c96a:	leaveq 
    c96b:	retq   
    c96c:	mov    0x3e8(%rdi),%rax
    c973:	test   %rax,%rax
    c976:	je     c962 <png_malloc_base+0x12>
    c978:	callq  *%rax
    c97a:	leaveq 
    c97b:	retq   
    c97c:	nopl   0x0(%rax)

000000000000c980 <png_malloc_array>:
    c980:	push   %rbp
    c981:	mov    %rsp,%rbp
    c984:	test   %esi,%esi
    c986:	jle    c994 <png_malloc_array+0x14>
    c988:	test   %rdx,%rdx
    c98b:	je     c994 <png_malloc_array+0x14>
    c98d:	callq  cae0 <png_malloc_array_checked>
    c992:	leaveq 
    c993:	retq   
    c994:	lea    0x20c89(%rip),%rsi        # 2d624 <valid_parameters.6+0xce>
    c99b:	callq  5470 <png_error@plt>

000000000000c9a0 <png_realloc_array>:
    c9a0:	push   %rbp
    c9a1:	mov    %rsp,%rbp
    c9a4:	sub    $0x30,%rsp
    c9a8:	test   %ecx,%ecx
    c9aa:	jle    c9d1 <png_realloc_array+0x31>
    c9ac:	test   %r8,%r8
    c9af:	je     c9d1 <png_realloc_array+0x31>
    c9b1:	test   %edx,%edx
    c9b3:	js     c9d1 <png_realloc_array+0x31>
    c9b5:	test   %rsi,%rsi
    c9b8:	je     c9cd <png_realloc_array+0x2d>
    c9ba:	xor    %eax,%eax
    c9bc:	mov    %rdx,%r9
    c9bf:	xor    $0x7fffffff,%r9d
    c9c6:	cmp    %r9d,%ecx
    c9c9:	jle    c9dd <png_realloc_array+0x3d>
    c9cb:	leaveq 
    c9cc:	retq   
    c9cd:	test   %edx,%edx
    c9cf:	jle    c9ba <png_realloc_array+0x1a>
    c9d1:	lea    0x20c68(%rip),%rsi        # 2d640 <valid_parameters.6+0xea>
    c9d8:	callq  5470 <png_error@plt>
    c9dd:	lea    (%rcx,%rdx,1),%r9d
    c9e1:	mov    %r8,%rax
    c9e4:	mov    %r15,-0x28(%rbp)
    c9e8:	mov    %r8,-0x20(%rbp)
    c9ec:	mov    %rcx,-0x8(%rbp)
    c9f0:	mov    %rsi,-0x10(%rbp)
    c9f4:	mov    %r9,%rsi
    c9f7:	mov    %rdx,%r15
    c9fa:	mov    %rax,%rdx
    c9fd:	callq  cae0 <png_malloc_array_checked>
    ca02:	test   %rax,%rax
    ca05:	jne    ca0f <png_realloc_array+0x6f>
    ca07:	xor    %eax,%eax
    ca09:	mov    -0x28(%rbp),%r15
    ca0d:	leaveq 
    ca0e:	retq   
    ca0f:	mov    %r15d,%ecx
    ca12:	mov    -0x20(%rbp),%rdx
    ca16:	imul   %rdx,%rcx
    ca1a:	test   %r15d,%r15d
    ca1d:	jg     ca24 <png_realloc_array+0x84>
    ca1f:	mov    %rax,%r15
    ca22:	jmp    ca55 <png_realloc_array+0xb5>
    ca24:	mov    %rax,%rdi
    ca27:	mov    %rcx,%r8
    ca2a:	mov    %r13,-0x18(%rbp)
    ca2e:	mov    %r14,-0x20(%rbp)
    ca32:	mov    %rdx,%r13
    ca35:	mov    %r8,%rdx
    ca38:	mov    %rcx,%r14
    ca3b:	mov    %rax,%r15
    ca3e:	mov    -0x10(%rbp),%rsi
    ca42:	callq  54c0 <memcpy@plt>
    ca47:	mov    %r14,%rcx
    ca4a:	mov    %r13,%rdx
    ca4d:	mov    -0x20(%rbp),%r14
    ca51:	mov    -0x18(%rbp),%r13
    ca55:	lea    (%r15,%rcx,1),%rdi
    ca59:	mov    -0x8(%rbp),%rax
    ca5d:	mov    %eax,%eax
    ca5f:	imul   %rax,%rdx
    ca63:	xor    %esi,%esi
    ca65:	callq  5350 <memset@plt>
    ca6a:	mov    %r15,%rax
    ca6d:	mov    -0x28(%rbp),%r15
    ca71:	leaveq 
    ca72:	retq   
    ca73:	data16 nopw %cs:0x0(%rax,%rax,1)
    ca7e:	xchg   %ax,%ax

000000000000ca80 <png_destroy_png_struct>:
    ca80:	push   %rbp
    ca81:	mov    %rsp,%rbp
    ca84:	sub    $0x4f0,%rsp
    ca8b:	test   %rdi,%rdi
    ca8e:	jne    ca92 <png_destroy_png_struct+0x12>
    ca90:	leaveq 
    ca91:	retq   
    ca92:	lea    -0x4f0(%rbp),%rax
    ca99:	mov    $0x4e8,%edx
    ca9e:	mov    %rdi,%rsi
    caa1:	mov    %r15,-0x8(%rbp)
    caa5:	mov    %rdi,%r15
    caa8:	mov    %rax,%rdi
    caab:	callq  54c0 <memcpy@plt>
    cab0:	xor    %esi,%esi
    cab2:	mov    %r15,%rdi
    cab5:	mov    $0x4e8,%edx
    caba:	callq  5350 <memset@plt>
    cabf:	mov    %r15,%rsi
    cac2:	lea    -0x4f0(%rbp),%rdi
    cac9:	mov    %rdi,%r15
    cacc:	callq  5790 <png_free@plt>
    cad1:	mov    %r15,%rdi
    cad4:	callq  ac00 <png_free_jmpbuf>
    cad9:	mov    -0x8(%rbp),%r15
    cadd:	leaveq 
    cade:	retq   
    cadf:	nop

000000000000cae0 <png_malloc_array_checked>:
    cae0:	push   %rbp
    cae1:	mov    %rsp,%rbp
    cae4:	mov    %rsi,%r8
    cae7:	mov    %rdx,%rsi
    caea:	xor    %ecx,%ecx
    caec:	mov    $0xffffffffffffffff,%rax
    caf3:	mov    %rcx,%rdx
    caf6:	div    %rsi
    caf9:	movslq %r8d,%rdx
    cafc:	cmp    %rdx,%rax
    caff:	jae    cb06 <png_malloc_array_checked+0x26>
    cb01:	mov    %rcx,%rax
    cb04:	leaveq 
    cb05:	retq   
    cb06:	imul   %rdx,%rsi
    cb0a:	callq  c950 <png_malloc_base>
    cb0f:	leaveq 
    cb10:	retq   
    cb11:	nopw   %cs:0x0(%rax,%rax,1)
    cb1b:	nopl   0x0(%rax,%rax,1)

000000000000cb20 <png_set_progressive_read_fn>:
    cb20:	push   %rbp
    cb21:	mov    %rsp,%rbp
    cb24:	test   %rdi,%rdi
    cb27:	jne    cb2b <png_set_progressive_read_fn+0xb>
    cb29:	leaveq 
    cb2a:	retq   
    cb2b:	mov    %rdx,0x310(%rdi)
    cb32:	mov    %rcx,0x318(%rdi)
    cb39:	mov    %r8,0x320(%rdi)
    cb40:	lea    0x119(%rip),%rdx        # cc60 <png_push_fill_buffer>
    cb47:	callq  5560 <png_set_read_fn@plt>
    cb4c:	leaveq 
    cb4d:	retq   
    cb4e:	xchg   %ax,%ax

000000000000cb50 <png_get_progressive_ptr>:
    cb50:	push   %rbp
    cb51:	mov    %rsp,%rbp
    cb54:	test   %rdi,%rdi
    cb57:	jne    cb5d <png_get_progressive_ptr+0xd>
    cb59:	xor    %eax,%eax
    cb5b:	leaveq 
    cb5c:	retq   
    cb5d:	mov    0x108(%rdi),%rax
    cb64:	leaveq 
    cb65:	retq   
    cb66:	nopw   %cs:0x0(%rax,%rax,1)

000000000000cb70 <png_process_data>:
    cb70:	push   %rbp
    cb71:	mov    %rsp,%rbp
    cb74:	sub    $0x10,%rsp
    cb78:	test   %rdi,%rdi
    cb7b:	jne    cb7f <png_process_data+0xf>
    cb7d:	leaveq 
    cb7e:	retq   
    cb7f:	test   %rsi,%rsi
    cb82:	jne    cb86 <png_process_data+0x16>
    cb84:	leaveq 
    cb85:	retq   
    cb86:	mov    %rdi,%rax
    cb89:	mov    %r14,-0x8(%rbp)
    cb8d:	mov    %r15,-0x10(%rbp)
    cb91:	mov    %rdi,%r14
    cb94:	mov    %rax,%rdi
    cb97:	mov    %rsi,%r15
    cb9a:	mov    %rdx,%rsi
    cb9d:	mov    %rcx,%rdx
    cba0:	callq  daf0 <png_push_restore_buffer>
    cba5:	jmp    cbb2 <png_process_data+0x42>
    cba7:	mov    %r14,%rdi
    cbaa:	mov    %r15,%rsi
    cbad:	callq  e780 <png_process_some_data>
    cbb2:	mov    0x360(%r14),%rax
    cbb9:	test   %rax,%rax
    cbbc:	jne    cba7 <png_process_data+0x37>
    cbbe:	mov    -0x10(%rbp),%r15
    cbc2:	mov    -0x8(%rbp),%r14
    cbc6:	leaveq 
    cbc7:	retq   
    cbc8:	nopl   0x0(%rax,%rax,1)

000000000000cbd0 <png_process_data_pause>:
    cbd0:	push   %rbp
    cbd1:	mov    %rsp,%rbp
    cbd4:	xor    %eax,%eax
    cbd6:	test   %rdi,%rdi
    cbd9:	jne    cbdd <png_process_data_pause+0xd>
    cbdb:	leaveq 
    cbdc:	retq   
    cbdd:	test   %esi,%esi
    cbdf:	jne    cc01 <png_process_data_pause+0x31>
    cbe1:	mov    0x360(%rdi),%rcx
    cbe8:	movq   $0x0,0x360(%rdi)
    cbf3:	mov    0x350(%rdi),%rdx
    cbfa:	cmp    %rcx,%rdx
    cbfd:	jb     cc0a <png_process_data_pause+0x3a>
    cbff:	leaveq 
    cc00:	retq   
    cc01:	callq  d930 <png_push_save_buffer>
    cc06:	xor    %eax,%eax
    cc08:	leaveq 
    cc09:	retq   
    cc0a:	mov    %rcx,%rax
    cc0d:	sub    %rdx,%rax
    cc10:	leaveq 
    cc11:	retq   
    cc12:	data16 nopw %cs:0x0(%rax,%rax,1)
    cc1d:	nopl   (%rax)

000000000000cc20 <png_process_data_skip>:
    cc20:	push   %rbp
    cc21:	mov    %rsp,%rbp
    cc24:	lea    0x20a4d(%rip),%rsi        # 2d678 <valid_parameters.6+0x122>
    cc2b:	callq  b100 <png_app_warning>
    cc30:	xor    %eax,%eax
    cc32:	leaveq 
    cc33:	retq   
    cc34:	data16 nopw %cs:0x0(%rax,%rax,1)
    cc3f:	nop

000000000000cc40 <png_progressive_combine_row>:
    cc40:	push   %rbp
    cc41:	mov    %rsp,%rbp
    cc44:	test   %rdi,%rdi
    cc47:	jne    cc4b <png_progressive_combine_row+0xb>
    cc49:	leaveq 
    cc4a:	retq   
    cc4b:	test   %rdx,%rdx
    cc4e:	jne    cc52 <png_progressive_combine_row+0x12>
    cc50:	leaveq 
    cc51:	retq   
    cc52:	mov    $0x1,%edx
    cc57:	callq  1b440 <png_combine_row>
    cc5c:	leaveq 
    cc5d:	retq   
    cc5e:	xchg   %ax,%ax

000000000000cc60 <png_push_fill_buffer>:
    cc60:	push   %rbp
    cc61:	mov    %rsp,%rbp
    cc64:	sub    $0x20,%rsp
    cc68:	test   %rdi,%rdi
    cc6b:	jne    cc6f <png_push_fill_buffer+0xf>
    cc6d:	leaveq 
    cc6e:	retq   
    cc6f:	mov    0x350(%rdi),%rax
    cc76:	test   %rax,%rax
    cc79:	je     cd0e <png_push_fill_buffer+0xae>
    cc7f:	cmp    %rdx,%rax
    cc82:	jbe    cc87 <png_push_fill_buffer+0x27>
    cc84:	mov    %rdx,%rax
    cc87:	mov    0x328(%rdi),%rcx
    cc8e:	mov    %rsi,%r8
    cc91:	mov    %rax,%r9
    cc94:	mov    %r12,-0x8(%rbp)
    cc98:	mov    %r13,-0x10(%rbp)
    cc9c:	mov    %r14,-0x18(%rbp)
    cca0:	mov    %r15,-0x20(%rbp)
    cca4:	mov    %rdx,%r12
    cca7:	mov    %r9,%rdx
    ccaa:	mov    %rax,%r13
    ccad:	mov    %rsi,%r14
    ccb0:	mov    %rcx,%rsi
    ccb3:	mov    %rdi,%r15
    ccb6:	mov    %r8,%rdi
    ccb9:	callq  54c0 <memcpy@plt>
    ccbe:	mov    0x360(%r15),%rax
    ccc5:	sub    %r13,%rax
    ccc8:	mov    %rax,0x360(%r15)
    cccf:	mov    0x350(%r15),%rax
    ccd6:	sub    %r13,%rax
    ccd9:	mov    %rax,0x350(%r15)
    cce0:	mov    %r13,%rax
    cce3:	add    0x328(%r15),%rax
    ccea:	mov    %rax,0x328(%r15)
    ccf1:	mov    %r12,%rdx
    ccf4:	sub    %r13,%rdx
    ccf7:	lea    (%r14,%r13,1),%rsi
    ccfb:	mov    %r15,%rdi
    ccfe:	mov    -0x20(%rbp),%r15
    cd02:	mov    -0x18(%rbp),%r14
    cd06:	mov    -0x10(%rbp),%r13
    cd0a:	mov    -0x8(%rbp),%r12
    cd0e:	test   %rdx,%rdx
    cd11:	jne    cd15 <png_push_fill_buffer+0xb5>
    cd13:	leaveq 
    cd14:	retq   
    cd15:	mov    0x368(%rdi),%rax
    cd1c:	test   %rax,%rax
    cd1f:	jne    cd23 <png_push_fill_buffer+0xc3>
    cd21:	leaveq 
    cd22:	retq   
    cd23:	cmp    %rax,%rdx
    cd26:	jae    cd2b <png_push_fill_buffer+0xcb>
    cd28:	mov    %rdx,%rax
    cd2b:	mov    0x338(%rdi),%rcx
    cd32:	mov    %rax,%rdx
    cd35:	mov    %r14,-0x18(%rbp)
    cd39:	mov    %r15,-0x20(%rbp)
    cd3d:	mov    %rax,%r14
    cd40:	mov    %rdi,%r15
    cd43:	mov    %rsi,%rdi
    cd46:	mov    %rcx,%rsi
    cd49:	callq  54c0 <memcpy@plt>
    cd4e:	mov    0x360(%r15),%rax
    cd55:	sub    %r14,%rax
    cd58:	mov    %rax,0x360(%r15)
    cd5f:	mov    0x368(%r15),%rax
    cd66:	sub    %r14,%rax
    cd69:	mov    %rax,0x368(%r15)
    cd70:	add    0x338(%r15),%r14
    cd77:	mov    %r14,0x338(%r15)
    cd7e:	mov    -0x20(%rbp),%r15
    cd82:	mov    -0x18(%rbp),%r14
    cd86:	leaveq 
    cd87:	retq   
    cd88:	nopl   0x0(%rax,%rax,1)

000000000000cd90 <png_push_read_chunk>:
    cd90:	push   %rbp
    cd91:	mov    %rsp,%rbp
    cd94:	sub    $0x30,%rsp
    cd98:	mov    0x12c(%rdi),%eax
    cd9e:	and    $0x100,%eax
    cda3:	test   %eax,%eax
    cda5:	je     cf39 <png_push_read_chunk+0x1a9>
    cdab:	mov    %r15,%rax
    cdae:	mov    %r14,%r15
    cdb1:	mov    %r13,%r14
    cdb4:	mov    %rdi,%r13
    cdb7:	mov    0x218(%r13),%r8d
    cdbe:	cmp    $0x49444154,%r8d
    cdc5:	je     d010 <png_push_read_chunk+0x280>
    cdcb:	cmp    $0x49484452,%r8d
    cdd2:	je     d0c1 <png_push_read_chunk+0x331>
    cdd8:	cmp    $0x49454e44,%r8d
    cddf:	je     d112 <png_push_read_chunk+0x382>
    cde5:	mov    %r13,%rdi
    cde8:	mov    %r8,%rcx
    cdeb:	mov    %r14,-0x10(%rbp)
    cdef:	mov    %r15,-0x18(%rbp)
    cdf3:	mov    %rax,-0x28(%rbp)
    cdf7:	mov    %r8,%r14
    cdfa:	mov    %rsi,%r15
    cdfd:	mov    %rcx,%rsi
    ce00:	callq  6e90 <png_chunk_unknown_handling>
    ce05:	test   %eax,%eax
    ce07:	jne    d163 <png_push_read_chunk+0x3d3>
    ce0d:	cmp    $0x504c5445,%r14d
    ce14:	je     d1a7 <png_push_read_chunk+0x417>
    ce1a:	cmp    $0x49444154,%r14d
    ce21:	je     d1db <png_push_read_chunk+0x44b>
    ce27:	mov    0x218(%r13),%eax
    ce2e:	cmp    $0x67414d41,%eax
    ce33:	je     d227 <png_push_read_chunk+0x497>
    ce39:	cmp    $0x73424954,%eax
    ce3e:	je     d25b <png_push_read_chunk+0x4cb>
    ce44:	cmp    $0x6348524d,%eax
    ce49:	je     d28f <png_push_read_chunk+0x4ff>
    ce4f:	cmp    $0x73524742,%r14d
    ce56:	je     d2c3 <png_push_read_chunk+0x533>
    ce5c:	cmp    $0x69434350,%eax
    ce61:	je     d2f7 <png_push_read_chunk+0x567>
    ce67:	cmp    $0x73504c54,%r14d
    ce6e:	je     d32b <png_push_read_chunk+0x59b>
    ce74:	cmp    $0x74524e53,%r14d
    ce7b:	je     d35f <png_push_read_chunk+0x5cf>
    ce81:	cmp    $0x624b4744,%r14d
    ce88:	je     d393 <png_push_read_chunk+0x603>
    ce8e:	cmp    $0x68495354,%r14d
    ce95:	je     d3c7 <png_push_read_chunk+0x637>
    ce9b:	cmp    $0x70485973,%r14d
    cea2:	je     d3fb <png_push_read_chunk+0x66b>
    cea8:	cmp    $0x6f464673,%r14d
    ceaf:	je     d42f <png_push_read_chunk+0x69f>
    ceb5:	cmp    $0x7043414c,%r14d
    cebc:	je     d463 <png_push_read_chunk+0x6d3>
    cec2:	cmp    $0x7343414c,%r14d
    cec9:	je     d497 <png_push_read_chunk+0x707>
    cecf:	cmp    $0x74494d45,%r14d
    ced6:	je     d4cb <png_push_read_chunk+0x73b>
    cedc:	cmp    $0x74455874,%r14d
    cee3:	je     d4ff <png_push_read_chunk+0x76f>
    cee9:	cmp    $0x7a545874,%r14d
    cef0:	je     d533 <png_push_read_chunk+0x7a3>
    cef6:	cmp    $0x69545874,%r14d
    cefd:	je     d567 <png_push_read_chunk+0x7d7>
    cf03:	mov    0x360(%r13),%rcx
    cf0a:	mov    0x348(%r13),%edx
    cf11:	lea    0x4(%rdx),%eax
    cf14:	mov    %eax,%eax
    cf16:	cmp    %rax,%rcx
    cf19:	jb     d59b <png_push_read_chunk+0x80b>
    cf1f:	mov    %r15,%rsi
    cf22:	xor    %ecx,%ecx
    cf24:	mov    %r13,%rdi
    cf27:	callq  1fe10 <png_handle_unknown>
    cf2c:	mov    -0x18(%rbp),%r15
    cf30:	mov    -0x10(%rbp),%r14
    cf34:	jmpq   d0f3 <png_push_read_chunk+0x363>
    cf39:	mov    0x360(%rdi),%rax
    cf40:	cmp    $0x7,%rax
    cf44:	jbe    d5b1 <png_push_read_chunk+0x821>
    cf4a:	lea    -0x30(%rbp),%r9
    cf4e:	mov    $0x4,%r8d
    cf54:	mov    %rdi,%rax
    cf57:	mov    %r9,%rcx
    cf5a:	mov    %r8,%rdx
    cf5d:	mov    %r13,-0x10(%rbp)
    cf61:	mov    %r14,-0x20(%rbp)
    cf65:	mov    %r15,-0x28(%rbp)
    cf69:	mov    %rsi,-0x8(%rbp)
    cf6d:	mov    %rcx,%rsi
    cf70:	mov    %rdi,%r13
    cf73:	mov    %rax,%rdi
    cf76:	mov    %r8,%r14
    cf79:	mov    %r9,%r15
    cf7c:	callq  cc60 <png_push_fill_buffer>
    cf81:	mov    %r15,%rsi
    cf84:	mov    %r13,%rdi
    cf87:	callq  5730 <png_get_uint_31@plt>
    cf8c:	mov    %eax,0x348(%r13)
    cf93:	mov    %r13,%rdi
    cf96:	callq  6d90 <png_reset_crc>
    cf9b:	mov    %r14,%rdx
    cf9e:	lea    -0x2c(%rbp),%rsi
    cfa2:	mov    %r13,%rdi
    cfa5:	callq  1b220 <png_crc_read>
    cfaa:	movzbl -0x2c(%rbp),%eax
    cfae:	shl    $0x18,%eax
    cfb1:	movzbl -0x2b(%rbp),%ecx
    cfb5:	shl    $0x10,%ecx
    cfb8:	add    %eax,%ecx
    cfba:	movzbl -0x2a(%rbp),%eax
    cfbe:	shl    $0x8,%eax
    cfc1:	add    %eax,%ecx
    cfc3:	movzbl -0x29(%rbp),%eax
    cfc7:	lea    (%rcx,%rax,1),%esi
    cfca:	mov    %esi,0x218(%r13)
    cfd1:	mov    %r13,%rdi
    cfd4:	callq  1fcd0 <png_check_chunk_name>
    cfd9:	mov    0x348(%r13),%esi
    cfe0:	mov    %r13,%rdi
    cfe3:	callq  1fd10 <png_check_chunk_length>
    cfe8:	mov    0x12c(%r13),%eax
    cfef:	or     $0x100,%eax
    cff4:	mov    %eax,0x12c(%r13)
    cffb:	mov    -0x8(%rbp),%rsi
    cfff:	mov    -0x28(%rbp),%rax
    d003:	mov    -0x20(%rbp),%r15
    d007:	mov    -0x10(%rbp),%r14
    d00b:	jmpq   cdb7 <png_push_read_chunk+0x27>
    d010:	mov    0x12c(%r13),%ecx
    d017:	mov    %rcx,%rdx
    d01a:	and    $0x8,%edx
    d01d:	test   %edx,%edx
    d01f:	je     d02e <png_push_read_chunk+0x29e>
    d021:	or     $0x2000,%ecx
    d027:	mov    %ecx,0x12c(%r13)
    d02e:	mov    0x12c(%r13),%ecx
    d035:	mov    %rcx,%rdx
    d038:	and    $0x1,%edx
    d03b:	test   %edx,%edx
    d03d:	je     d5b8 <png_push_read_chunk+0x828>
    d043:	movzbl 0x267(%r13),%edx
    d04b:	cmp    $0x3,%dl
    d04e:	je     d5c7 <png_push_read_chunk+0x837>
    d054:	movl   $0x2,0x370(%r13)
    d05f:	mov    %rcx,%rdx
    d062:	and    $0x4,%edx
    d065:	test   %edx,%edx
    d067:	jne    d5e4 <png_push_read_chunk+0x854>
    d06d:	mov    0x12c(%r13),%ecx
    d074:	mov    %rcx,%rdx
    d077:	or     $0x4,%edx
    d07a:	mov    %edx,0x12c(%r13)
    d081:	and    $0x8,%ecx
    d084:	test   %ecx,%ecx
    d086:	je     cdcb <png_push_read_chunk+0x3b>
    d08c:	lea    0x20661(%rip),%rcx        # 2d6f4 <valid_parameters.6+0x19e>
    d093:	mov    %r13,%rdi
    d096:	mov    %r15,-0x20(%rbp)
    d09a:	mov    %rax,-0x28(%rbp)
    d09e:	mov    %rsi,-0x8(%rbp)
    d0a2:	mov    %rcx,%rsi
    d0a5:	mov    %r8,%r15
    d0a8:	callq  5590 <png_benign_error@plt>
    d0ad:	mov    %r15,%r8
    d0b0:	mov    -0x8(%rbp),%rsi
    d0b4:	mov    -0x28(%rbp),%rax
    d0b8:	mov    -0x20(%rbp),%r15
    d0bc:	jmpq   cdcb <png_push_read_chunk+0x3b>
    d0c1:	mov    0x348(%r13),%ecx
    d0c8:	cmp    $0xd,%ecx
    d0cb:	jne    d60c <png_push_read_chunk+0x87c>
    d0d1:	mov    0x360(%r13),%rcx
    d0d8:	cmp    $0x10,%rcx
    d0dc:	jbe    d61b <png_push_read_chunk+0x88b>
    d0e2:	mov    $0xd,%edx
    d0e7:	mov    %r13,%rdi
    d0ea:	mov    %rax,-0x28(%rbp)
    d0ee:	callq  1caf0 <png_handle_IHDR>
    d0f3:	mov    0x12c(%r13),%eax
    d0fa:	and    $0xfffffeff,%eax
    d0ff:	mov    %eax,0x12c(%r13)
    d106:	mov    %r14,%r13
    d109:	mov    %r15,%r14
    d10c:	mov    -0x28(%rbp),%r15
    d110:	leaveq 
    d111:	retq   
    d112:	mov    0x360(%r13),%rdi
    d119:	mov    0x348(%r13),%edx
    d120:	lea    0x4(%rdx),%ecx
    d123:	mov    %ecx,%ecx
    d125:	cmp    %rcx,%rdi
    d128:	jb     d634 <png_push_read_chunk+0x8a4>
    d12e:	mov    %r13,%rdi
    d131:	mov    %rsi,%rcx
    d134:	mov    %r15,-0x18(%rbp)
    d138:	mov    %rax,-0x28(%rbp)
    d13c:	mov    %rsi,%r15
    d13f:	mov    %rcx,%rsi
    d142:	callq  1cf60 <png_handle_IEND>
    d147:	mov    %r15,%rsi
    d14a:	movl   $0x6,0x370(%r13)
    d155:	mov    %r13,%rdi
    d158:	callq  e730 <png_push_have_end>
    d15d:	mov    -0x18(%rbp),%r15
    d161:	jmp    d0f3 <png_push_read_chunk+0x363>
    d163:	mov    0x360(%r13),%rsi
    d16a:	mov    0x348(%r13),%edx
    d171:	lea    0x4(%rdx),%ecx
    d174:	mov    %ecx,%ecx
    d176:	cmp    %rcx,%rsi
    d179:	jb     d64d <png_push_read_chunk+0x8bd>
    d17f:	mov    %rax,%rcx
    d182:	mov    %r15,%rsi
    d185:	mov    %r13,%rdi
    d188:	callq  1fe10 <png_handle_unknown>
    d18d:	cmp    $0x504c5445,%r14d
    d194:	je     d663 <png_push_read_chunk+0x8d3>
    d19a:	mov    -0x18(%rbp),%r15
    d19e:	mov    -0x10(%rbp),%r14
    d1a2:	jmpq   d0f3 <png_push_read_chunk+0x363>
    d1a7:	mov    0x360(%r13),%rcx
    d1ae:	mov    0x348(%r13),%edx
    d1b5:	lea    0x4(%rdx),%eax
    d1b8:	mov    %eax,%eax
    d1ba:	cmp    %rax,%rcx
    d1bd:	jb     d681 <png_push_read_chunk+0x8f1>
    d1c3:	mov    %r15,%rsi
    d1c6:	mov    %r13,%rdi
    d1c9:	callq  1cc80 <png_handle_PLTE>
    d1ce:	mov    -0x18(%rbp),%r15
    d1d2:	mov    -0x10(%rbp),%r14
    d1d6:	jmpq   d0f3 <png_push_read_chunk+0x363>
    d1db:	mov    0x348(%r13),%eax
    d1e2:	mov    %eax,0x248(%r13)
    d1e9:	mov    %r15,%rsi
    d1ec:	movl   $0x2,0x370(%r13)
    d1f7:	mov    %r13,%rdi
    d1fa:	callq  e710 <png_push_have_info>
    d1ff:	movzbl 0x26a(%r13),%eax
    d207:	cmp    $0x7,%al
    d209:	ja     d697 <png_push_read_chunk+0x907>
    d20f:	mov    0x210(%r13),%ecx
    d216:	imul   %rcx,%rax
    d21a:	add    $0x7,%rax
    d21e:	shr    $0x3,%rax
    d222:	jmpq   d6a3 <png_push_read_chunk+0x913>
    d227:	mov    0x360(%r13),%rcx
    d22e:	mov    0x348(%r13),%edx
    d235:	lea    0x4(%rdx),%eax
    d238:	mov    %eax,%eax
    d23a:	cmp    %rax,%rcx
    d23d:	jb     d6c9 <png_push_read_chunk+0x939>
    d243:	mov    %r15,%rsi
    d246:	mov    %r13,%rdi
    d249:	callq  1d6a0 <png_handle_gAMA>
    d24e:	mov    -0x18(%rbp),%r15
    d252:	mov    -0x10(%rbp),%r14
    d256:	jmpq   d0f3 <png_push_read_chunk+0x363>
    d25b:	mov    0x360(%r13),%rcx
    d262:	mov    0x348(%r13),%edx
    d269:	lea    0x4(%rdx),%eax
    d26c:	mov    %eax,%eax
    d26e:	cmp    %rax,%rcx
    d271:	jb     d6df <png_push_read_chunk+0x94f>
    d277:	mov    %r15,%rsi
    d27a:	mov    %r13,%rdi
    d27d:	callq  1eaf0 <png_handle_sBIT>
    d282:	mov    -0x18(%rbp),%r15
    d286:	mov    -0x10(%rbp),%r14
    d28a:	jmpq   d0f3 <png_push_read_chunk+0x363>
    d28f:	mov    0x360(%r13),%rcx
    d296:	mov    0x348(%r13),%edx
    d29d:	lea    0x4(%rdx),%eax
    d2a0:	mov    %eax,%eax
    d2a2:	cmp    %rax,%rcx
    d2a5:	jb     d6f5 <png_push_read_chunk+0x965>
    d2ab:	mov    %r15,%rsi
    d2ae:	mov    %r13,%rdi
    d2b1:	callq  1d240 <png_handle_cHRM>
    d2b6:	mov    -0x18(%rbp),%r15
    d2ba:	mov    -0x10(%rbp),%r14
    d2be:	jmpq   d0f3 <png_push_read_chunk+0x363>
    d2c3:	mov    0x360(%r13),%rcx
    d2ca:	mov    0x348(%r13),%edx
    d2d1:	lea    0x4(%rdx),%eax
    d2d4:	mov    %eax,%eax
    d2d6:	cmp    %rax,%rcx
    d2d9:	jb     d70b <png_push_read_chunk+0x97b>
    d2df:	mov    %r15,%rsi
    d2e2:	mov    %r13,%rdi
    d2e5:	callq  1f330 <png_handle_sRGB>
    d2ea:	mov    -0x18(%rbp),%r15
    d2ee:	mov    -0x10(%rbp),%r14
    d2f2:	jmpq   d0f3 <png_push_read_chunk+0x363>
    d2f7:	mov    0x360(%r13),%rcx
    d2fe:	mov    0x348(%r13),%edx
    d305:	lea    0x4(%rdx),%eax
    d308:	mov    %eax,%eax
    d30a:	cmp    %rax,%rcx
    d30d:	jb     d721 <png_push_read_chunk+0x991>
    d313:	mov    %r15,%rsi
    d316:	mov    %r13,%rdi
    d319:	callq  1d930 <png_handle_iCCP>
    d31e:	mov    -0x18(%rbp),%r15
    d322:	mov    -0x10(%rbp),%r14
    d326:	jmpq   d0f3 <png_push_read_chunk+0x363>
    d32b:	mov    0x360(%r13),%rax
    d332:	mov    0x348(%r13),%edx
    d339:	lea    0x4(%rdx),%ecx
    d33c:	mov    %ecx,%ecx
    d33e:	cmp    %rcx,%rax
    d341:	jb     d737 <png_push_read_chunk+0x9a7>
    d347:	mov    %r15,%rsi
    d34a:	mov    %r13,%rdi
    d34d:	callq  1f020 <png_handle_sPLT>
    d352:	mov    -0x18(%rbp),%r15
    d356:	mov    -0x10(%rbp),%r14
    d35a:	jmpq   d0f3 <png_push_read_chunk+0x363>
    d35f:	mov    0x360(%r13),%rcx
    d366:	mov    0x348(%r13),%edx
    d36d:	lea    0x4(%rdx),%eax
    d370:	mov    %eax,%eax
    d372:	cmp    %rax,%rcx
    d375:	jb     d74d <png_push_read_chunk+0x9bd>
    d37b:	mov    %r15,%rsi
    d37e:	mov    %r13,%rdi
    d381:	callq  1f740 <png_handle_tRNS>
    d386:	mov    -0x18(%rbp),%r15
    d38a:	mov    -0x10(%rbp),%r14
    d38e:	jmpq   d0f3 <png_push_read_chunk+0x363>
    d393:	mov    0x360(%r13),%rcx
    d39a:	mov    0x348(%r13),%edx
    d3a1:	lea    0x4(%rdx),%eax
    d3a4:	mov    %eax,%eax
    d3a6:	cmp    %rax,%rcx
    d3a9:	jb     d763 <png_push_read_chunk+0x9d3>
    d3af:	mov    %r15,%rsi
    d3b2:	mov    %r13,%rdi
    d3b5:	callq  1cfe0 <png_handle_bKGD>
    d3ba:	mov    -0x18(%rbp),%r15
    d3be:	mov    -0x10(%rbp),%r14
    d3c2:	jmpq   d0f3 <png_push_read_chunk+0x363>
    d3c7:	mov    0x360(%r13),%rcx
    d3ce:	mov    0x348(%r13),%edx
    d3d5:	lea    0x4(%rdx),%eax
    d3d8:	mov    %eax,%eax
    d3da:	cmp    %rax,%rcx
    d3dd:	jb     d779 <png_push_read_chunk+0x9e9>
    d3e3:	mov    %r15,%rsi
    d3e6:	mov    %r13,%rdi
    d3e9:	callq  1d790 <png_handle_hIST>
    d3ee:	mov    -0x18(%rbp),%r15
    d3f2:	mov    -0x10(%rbp),%r14
    d3f6:	jmpq   d0f3 <png_push_read_chunk+0x363>
    d3fb:	mov    0x360(%r13),%rcx
    d402:	mov    0x348(%r13),%edx
    d409:	lea    0x4(%rdx),%eax
    d40c:	mov    %eax,%eax
    d40e:	cmp    %rax,%rcx
    d411:	jb     d78f <png_push_read_chunk+0x9ff>
    d417:	mov    %r15,%rsi
    d41a:	mov    %r13,%rdi
    d41d:	callq  1e990 <png_handle_pHYs>
    d422:	mov    -0x18(%rbp),%r15
    d426:	mov    -0x10(%rbp),%r14
    d42a:	jmpq   d0f3 <png_push_read_chunk+0x363>
    d42f:	mov    0x360(%r13),%rcx
    d436:	mov    0x348(%r13),%edx
    d43d:	lea    0x4(%rdx),%eax
    d440:	mov    %eax,%eax
    d442:	cmp    %rax,%rcx
    d445:	jb     d7a5 <png_push_read_chunk+0xa15>
    d44b:	mov    %r15,%rsi
    d44e:	mov    %r13,%rdi
    d451:	callq  1e420 <png_handle_oFFs>
    d456:	mov    -0x18(%rbp),%r15
    d45a:	mov    -0x10(%rbp),%r14
    d45e:	jmpq   d0f3 <png_push_read_chunk+0x363>
    d463:	mov    0x360(%r13),%rcx
    d46a:	mov    0x348(%r13),%edx
    d471:	lea    0x4(%rdx),%eax
    d474:	mov    %eax,%eax
    d476:	cmp    %rax,%rcx
    d479:	jb     d7bb <png_push_read_chunk+0xa2b>
    d47f:	mov    %r15,%rsi
    d482:	mov    %r13,%rdi
    d485:	callq  1e5e0 <png_handle_pCAL>
    d48a:	mov    -0x18(%rbp),%r15
    d48e:	mov    -0x10(%rbp),%r14
    d492:	jmpq   d0f3 <png_push_read_chunk+0x363>
    d497:	mov    0x360(%r13),%rcx
    d49e:	mov    0x348(%r13),%edx
    d4a5:	lea    0x4(%rdx),%eax
    d4a8:	mov    %eax,%eax
    d4aa:	cmp    %rax,%rcx
    d4ad:	jb     d7d1 <png_push_read_chunk+0xa41>
    d4b3:	mov    %r15,%rsi
    d4b6:	mov    %r13,%rdi
    d4b9:	callq  1ed10 <png_handle_sCAL>
    d4be:	mov    -0x18(%rbp),%r15
    d4c2:	mov    -0x10(%rbp),%r14
    d4c6:	jmpq   d0f3 <png_push_read_chunk+0x363>
    d4cb:	mov    0x360(%r13),%rcx
    d4d2:	mov    0x348(%r13),%edx
    d4d9:	lea    0x4(%rdx),%eax
    d4dc:	mov    %eax,%eax
    d4de:	cmp    %rax,%rcx
    d4e1:	jb     d7e7 <png_push_read_chunk+0xa57>
    d4e7:	mov    %r15,%rsi
    d4ea:	mov    %r13,%rdi
    d4ed:	callq  1f610 <png_handle_tIME>
    d4f2:	mov    -0x18(%rbp),%r15
    d4f6:	mov    -0x10(%rbp),%r14
    d4fa:	jmpq   d0f3 <png_push_read_chunk+0x363>
    d4ff:	mov    0x360(%r13),%rcx
    d506:	mov    0x348(%r13),%edx
    d50d:	lea    0x4(%rdx),%eax
    d510:	mov    %eax,%eax
    d512:	cmp    %rax,%rcx
    d515:	jb     d7fd <png_push_read_chunk+0xa6d>
    d51b:	mov    %r15,%rsi
    d51e:	mov    %r13,%rdi
    d521:	callq  1f470 <png_handle_tEXt>
    d526:	mov    -0x18(%rbp),%r15
    d52a:	mov    -0x10(%rbp),%r14
    d52e:	jmpq   d0f3 <png_push_read_chunk+0x363>
    d533:	mov    0x360(%r13),%rcx
    d53a:	mov    0x348(%r13),%edx
    d541:	lea    0x4(%rdx),%eax
    d544:	mov    %eax,%eax
    d546:	cmp    %rax,%rcx
    d549:	jb     d813 <png_push_read_chunk+0xa83>
    d54f:	mov    %r15,%rsi
    d552:	mov    %r13,%rdi
    d555:	callq  1fa50 <png_handle_zTXt>
    d55a:	mov    -0x18(%rbp),%r15
    d55e:	mov    -0x10(%rbp),%r14
    d562:	jmpq   d0f3 <png_push_read_chunk+0x363>
    d567:	mov    0x360(%r13),%rcx
    d56e:	mov    0x348(%r13),%edx
    d575:	lea    0x4(%rdx),%eax
    d578:	mov    %eax,%eax
    d57a:	cmp    %rax,%rcx
    d57d:	jb     d829 <png_push_read_chunk+0xa99>
    d583:	mov    %r15,%rsi
    d586:	mov    %r13,%rdi
    d589:	callq  1e090 <png_handle_iTXt>
    d58e:	mov    -0x18(%rbp),%r15
    d592:	mov    -0x10(%rbp),%r14
    d596:	jmpq   d0f3 <png_push_read_chunk+0x363>
    d59b:	mov    %r13,%rdi
    d59e:	callq  d930 <png_push_save_buffer>
    d5a3:	mov    -0x28(%rbp),%r15
    d5a7:	mov    -0x18(%rbp),%r14
    d5ab:	mov    -0x10(%rbp),%r13
    d5af:	leaveq 
    d5b0:	retq   
    d5b1:	callq  d930 <png_push_save_buffer>
    d5b6:	leaveq 
    d5b7:	retq   
    d5b8:	mov    %r13,%rdi
    d5bb:	lea    0x20100(%rip),%rsi        # 2d6c2 <valid_parameters.6+0x16c>
    d5c2:	callq  5470 <png_error@plt>
    d5c7:	mov    %rcx,%rdx
    d5ca:	and    $0x2,%edx
    d5cd:	test   %edx,%edx
    d5cf:	jne    d054 <png_push_read_chunk+0x2c4>
    d5d5:	mov    %r13,%rdi
    d5d8:	lea    0x200fc(%rip),%rsi        # 2d6db <valid_parameters.6+0x185>
    d5df:	callq  5470 <png_error@plt>
    d5e4:	and    $0x2000,%ecx
    d5ea:	test   %ecx,%ecx
    d5ec:	jne    d06d <png_push_read_chunk+0x2dd>
    d5f2:	mov    0x348(%r13),%ecx
    d5f9:	test   %ecx,%ecx
    d5fb:	jne    d06d <png_push_read_chunk+0x2dd>
    d601:	mov    %r14,%r13
    d604:	mov    %r15,%r14
    d607:	mov    %rax,%r15
    d60a:	leaveq 
    d60b:	retq   
    d60c:	mov    %r13,%rdi
    d60f:	lea    0x200f3(%rip),%rsi        # 2d709 <valid_parameters.6+0x1b3>
    d616:	callq  5470 <png_error@plt>
    d61b:	mov    %r13,%rdi
    d61e:	mov    %rax,%r13
    d621:	callq  d930 <png_push_save_buffer>
    d626:	mov    %r14,%rax
    d629:	mov    %r15,%r14
    d62c:	mov    %r13,%r15
    d62f:	mov    %rax,%r13
    d632:	leaveq 
    d633:	retq   
    d634:	mov    %r13,%rdi
    d637:	mov    %rax,%r13
    d63a:	callq  d930 <png_push_save_buffer>
    d63f:	mov    %r14,%rax
    d642:	mov    %r15,%r14
    d645:	mov    %r13,%r15
    d648:	mov    %rax,%r13
    d64b:	leaveq 
    d64c:	retq   
    d64d:	mov    %r13,%rdi
    d650:	callq  d930 <png_push_save_buffer>
    d655:	mov    -0x28(%rbp),%r15
    d659:	mov    -0x18(%rbp),%r14
    d65d:	mov    -0x10(%rbp),%r13
    d661:	leaveq 
    d662:	retq   
    d663:	mov    0x12c(%r13),%eax
    d66a:	or     $0x2,%eax
    d66d:	mov    %eax,0x12c(%r13)
    d674:	mov    -0x18(%rbp),%r15
    d678:	mov    -0x10(%rbp),%r14
    d67c:	jmpq   d0f3 <png_push_read_chunk+0x363>
    d681:	mov    %r13,%rdi
    d684:	callq  d930 <png_push_save_buffer>
    d689:	mov    -0x28(%rbp),%r15
    d68d:	mov    -0x18(%rbp),%r14
    d691:	mov    -0x10(%rbp),%r13
    d695:	leaveq 
    d696:	retq   
    d697:	shr    $0x3,%rax
    d69b:	imul   0x210(%r13),%eax
    d6a3:	add    $0x1,%eax
    d6a6:	mov    %eax,0x160(%r13)
    d6ad:	mov    0x228(%r13),%rax
    d6b4:	mov    %rax,0x158(%r13)
    d6bb:	mov    -0x28(%rbp),%r15
    d6bf:	mov    -0x18(%rbp),%r14
    d6c3:	mov    -0x10(%rbp),%r13
    d6c7:	leaveq 
    d6c8:	retq   
    d6c9:	mov    %r13,%rdi
    d6cc:	callq  d930 <png_push_save_buffer>
    d6d1:	mov    -0x28(%rbp),%r15
    d6d5:	mov    -0x18(%rbp),%r14
    d6d9:	mov    -0x10(%rbp),%r13
    d6dd:	leaveq 
    d6de:	retq   
    d6df:	mov    %r13,%rdi
    d6e2:	callq  d930 <png_push_save_buffer>
    d6e7:	mov    -0x28(%rbp),%r15
    d6eb:	mov    -0x18(%rbp),%r14
    d6ef:	mov    -0x10(%rbp),%r13
    d6f3:	leaveq 
    d6f4:	retq   
    d6f5:	mov    %r13,%rdi
    d6f8:	callq  d930 <png_push_save_buffer>
    d6fd:	mov    -0x28(%rbp),%r15
    d701:	mov    -0x18(%rbp),%r14
    d705:	mov    -0x10(%rbp),%r13
    d709:	leaveq 
    d70a:	retq   
    d70b:	mov    %r13,%rdi
    d70e:	callq  d930 <png_push_save_buffer>
    d713:	mov    -0x28(%rbp),%r15
    d717:	mov    -0x18(%rbp),%r14
    d71b:	mov    -0x10(%rbp),%r13
    d71f:	leaveq 
    d720:	retq   
    d721:	mov    %r13,%rdi
    d724:	callq  d930 <png_push_save_buffer>
    d729:	mov    -0x28(%rbp),%r15
    d72d:	mov    -0x18(%rbp),%r14
    d731:	mov    -0x10(%rbp),%r13
    d735:	leaveq 
    d736:	retq   
    d737:	mov    %r13,%rdi
    d73a:	callq  d930 <png_push_save_buffer>
    d73f:	mov    -0x28(%rbp),%r15
    d743:	mov    -0x18(%rbp),%r14
    d747:	mov    -0x10(%rbp),%r13
    d74b:	leaveq 
    d74c:	retq   
    d74d:	mov    %r13,%rdi
    d750:	callq  d930 <png_push_save_buffer>
    d755:	mov    -0x28(%rbp),%r15
    d759:	mov    -0x18(%rbp),%r14
    d75d:	mov    -0x10(%rbp),%r13
    d761:	leaveq 
    d762:	retq   
    d763:	mov    %r13,%rdi
    d766:	callq  d930 <png_push_save_buffer>
    d76b:	mov    -0x28(%rbp),%r15
    d76f:	mov    -0x18(%rbp),%r14
    d773:	mov    -0x10(%rbp),%r13
    d777:	leaveq 
    d778:	retq   
    d779:	mov    %r13,%rdi
    d77c:	callq  d930 <png_push_save_buffer>
    d781:	mov    -0x28(%rbp),%r15
    d785:	mov    -0x18(%rbp),%r14
    d789:	mov    -0x10(%rbp),%r13
    d78d:	leaveq 
    d78e:	retq   
    d78f:	mov    %r13,%rdi
    d792:	callq  d930 <png_push_save_buffer>
    d797:	mov    -0x28(%rbp),%r15
    d79b:	mov    -0x18(%rbp),%r14
    d79f:	mov    -0x10(%rbp),%r13
    d7a3:	leaveq 
    d7a4:	retq   
    d7a5:	mov    %r13,%rdi
    d7a8:	callq  d930 <png_push_save_buffer>
    d7ad:	mov    -0x28(%rbp),%r15
    d7b1:	mov    -0x18(%rbp),%r14
    d7b5:	mov    -0x10(%rbp),%r13
    d7b9:	leaveq 
    d7ba:	retq   
    d7bb:	mov    %r13,%rdi
    d7be:	callq  d930 <png_push_save_buffer>
    d7c3:	mov    -0x28(%rbp),%r15
    d7c7:	mov    -0x18(%rbp),%r14
    d7cb:	mov    -0x10(%rbp),%r13
    d7cf:	leaveq 
    d7d0:	retq   
    d7d1:	mov    %r13,%rdi
    d7d4:	callq  d930 <png_push_save_buffer>
    d7d9:	mov    -0x28(%rbp),%r15
    d7dd:	mov    -0x18(%rbp),%r14
    d7e1:	mov    -0x10(%rbp),%r13
    d7e5:	leaveq 
    d7e6:	retq   
    d7e7:	mov    %r13,%rdi
    d7ea:	callq  d930 <png_push_save_buffer>
    d7ef:	mov    -0x28(%rbp),%r15
    d7f3:	mov    -0x18(%rbp),%r14
    d7f7:	mov    -0x10(%rbp),%r13
    d7fb:	leaveq 
    d7fc:	retq   
    d7fd:	mov    %r13,%rdi
    d800:	callq  d930 <png_push_save_buffer>
    d805:	mov    -0x28(%rbp),%r15
    d809:	mov    -0x18(%rbp),%r14
    d80d:	mov    -0x10(%rbp),%r13
    d811:	leaveq 
    d812:	retq   
    d813:	mov    %r13,%rdi
    d816:	callq  d930 <png_push_save_buffer>
    d81b:	mov    -0x28(%rbp),%r15
    d81f:	mov    -0x18(%rbp),%r14
    d823:	mov    -0x10(%rbp),%r13
    d827:	leaveq 
    d828:	retq   
    d829:	mov    %r13,%rdi
    d82c:	callq  d930 <png_push_save_buffer>
    d831:	mov    -0x28(%rbp),%r15
    d835:	mov    -0x18(%rbp),%r14
    d839:	mov    -0x10(%rbp),%r13
    d83d:	leaveq 
    d83e:	retq   
    d83f:	nop

000000000000d840 <png_push_read_sig>:
    d840:	push   %rbp
    d841:	mov    %rsp,%rbp
    d844:	sub    $0x20,%rsp
    d848:	mov    %r12,-0x8(%rbp)
    d84c:	mov    %r13,-0x10(%rbp)
    d850:	mov    %r14,-0x18(%rbp)
    d854:	mov    %r15,-0x20(%rbp)
    d858:	movzbl 0x26d(%rdi),%r14d
    d860:	mov    $0x8,%r12d
    d866:	sub    %r14,%r12
    d869:	mov    0x360(%rdi),%rax
    d870:	cmp    %r12,%rax
    d873:	jae    d878 <png_push_read_sig+0x38>
    d875:	mov    %rax,%r12
    d878:	mov    %rbx,%r13
    d87b:	mov    %rsi,%r15
    d87e:	lea    0x2c(%r15,%r14,1),%rsi
    d883:	mov    %rdi,%rbx
    d886:	mov    %r12,%rdx
    d889:	callq  cc60 <png_push_fill_buffer>
    d88e:	movzbl 0x26d(%rbx),%eax
    d895:	add    %r12d,%eax
    d898:	mov    %al,0x26d(%rbx)
    d89e:	add    $0x2c,%r15
    d8a2:	mov    %r15,%rdi
    d8a5:	mov    %r14,%rsi
    d8a8:	mov    %r12,%rdx
    d8ab:	callq  57d0 <png_sig_cmp@plt>
    d8b0:	test   %eax,%eax
    d8b2:	jne    d8d4 <png_push_read_sig+0x94>
    d8b4:	movzbl 0x26d(%rbx),%eax
    d8bb:	cmp    $0x7,%al
    d8bd:	ja     d8e9 <png_push_read_sig+0xa9>
    d8bf:	mov    %r13,%rbx
    d8c2:	mov    -0x20(%rbp),%r15
    d8c6:	mov    -0x18(%rbp),%r14
    d8ca:	mov    -0x10(%rbp),%r13
    d8ce:	mov    -0x8(%rbp),%r12
    d8d2:	leaveq 
    d8d3:	retq   
    d8d4:	cmp    $0x3,%r14b
    d8d8:	jbe    d908 <png_push_read_sig+0xc8>
    d8da:	mov    %rbx,%rdi
    d8dd:	lea    0x1fe48(%rip),%rsi        # 2d72c <valid_parameters.6+0x1d6>
    d8e4:	callq  5470 <png_error@plt>
    d8e9:	movl   $0x1,0x370(%rbx)
    d8f3:	mov    %r13,%rbx
    d8f6:	mov    -0x20(%rbp),%r15
    d8fa:	mov    -0x18(%rbp),%r14
    d8fe:	mov    -0x10(%rbp),%r13
    d902:	mov    -0x8(%rbp),%r12
    d906:	leaveq 
    d907:	retq   
    d908:	lea    -0x4(%r12),%rdx
    d90d:	mov    %r14,%rsi
    d910:	mov    %r15,%rdi
    d913:	callq  57d0 <png_sig_cmp@plt>
    d918:	test   %eax,%eax
    d91a:	je     d8da <png_push_read_sig+0x9a>
    d91c:	mov    %rbx,%rdi
    d91f:	lea    0x1fdf7(%rip),%rsi        # 2d71d <valid_parameters.6+0x1c7>
    d926:	callq  5470 <png_error@plt>
    d92b:	nopl   0x0(%rax,%rax,1)

000000000000d930 <png_push_save_buffer>:
    d930:	push   %rbp
    d931:	mov    %rsp,%rbp
    d934:	sub    $0x20,%rsp
    d938:	mov    0x350(%rdi),%rsi
    d93f:	test   %rsi,%rsi
    d942:	jne    d9e8 <png_push_save_buffer+0xb8>
    d948:	mov    0x368(%rdi),%rsi
    d94f:	mov    0x350(%rdi),%rdx
    d956:	lea    (%rsi,%rdx,1),%rcx
    d95a:	mov    0x358(%rdi),%rax
    d961:	cmp    %rcx,%rax
    d964:	jb     da03 <png_push_save_buffer+0xd3>
    d96a:	mov    %r15,%rax
    d96d:	mov    %r14,%r15
    d970:	mov    %r13,%r14
    d973:	mov    %rdi,%r13
    d976:	mov    0x368(%r13),%rdx
    d97d:	test   %rdx,%rdx
    d980:	je     d9c4 <png_push_save_buffer+0x94>
    d982:	mov    0x350(%r13),%rdi
    d989:	add    0x330(%r13),%rdi
    d990:	mov    0x338(%r13),%rsi
    d997:	mov    %rax,-0x18(%rbp)
    d99b:	callq  54c0 <memcpy@plt>
    d9a0:	mov    0x350(%r13),%rax
    d9a7:	add    0x368(%r13),%rax
    d9ae:	mov    %rax,0x350(%r13)
    d9b5:	movq   $0x0,0x368(%r13)
    d9c0:	mov    -0x18(%rbp),%rax
    d9c4:	mov    0x330(%r13),%rcx
    d9cb:	mov    %rcx,0x328(%r13)
    d9d2:	movq   $0x0,0x360(%r13)
    d9dd:	mov    %r14,%r13
    d9e0:	mov    %r15,%r14
    d9e3:	mov    %rax,%r15
    d9e6:	leaveq 
    d9e7:	retq   
    d9e8:	mov    0x330(%rdi),%rcx
    d9ef:	mov    0x328(%rdi),%rax
    d9f6:	cmp    %rax,%rcx
    d9f9:	je     d948 <png_push_save_buffer+0x18>
    d9ff:	xor    %edx,%edx
    da01:	jmp    da82 <png_push_save_buffer+0x152>
    da03:	mov    $0xfffffffffffffeff,%rax
    da0a:	sub    %rsi,%rax
    da0d:	cmp    %rax,%rdx
    da10:	ja     da8c <png_push_save_buffer+0x15c>
    da12:	mov    0x330(%rdi),%rax
    da19:	add    $0x100,%rcx
    da20:	mov    %rdi,%rdx
    da23:	mov    %rcx,%rsi
    da26:	mov    %r13,-0x8(%rbp)
    da2a:	mov    %r14,-0x10(%rbp)
    da2e:	mov    %r15,-0x18(%rbp)
    da32:	mov    %rdi,%r13
    da35:	mov    %rdx,%rdi
    da38:	mov    %rax,%r14
    da3b:	mov    %rcx,%r15
    da3e:	callq  5150 <png_malloc_warn@plt>
    da43:	mov    %rax,0x330(%r13)
    da4a:	test   %rax,%rax
    da4d:	je     da98 <png_push_save_buffer+0x168>
    da4f:	test   %r14,%r14
    da52:	jne    dab2 <png_push_save_buffer+0x182>
    da54:	mov    0x350(%r13),%rax
    da5b:	test   %rax,%rax
    da5e:	je     dac4 <png_push_save_buffer+0x194>
    da60:	mov    %r13,%rdi
    da63:	lea    0x1fd2f(%rip),%rsi        # 2d799 <valid_parameters.6+0x243>
    da6a:	callq  5470 <png_error@plt>
    da6f:	movzbl (%rax),%r8d
    da73:	mov    %r8b,(%rcx)
    da76:	add    $0x1,%rax
    da7a:	add    $0x1,%rcx
    da7e:	add    $0x1,%rdx
    da82:	cmp    %rdx,%rsi
    da85:	ja     da6f <png_push_save_buffer+0x13f>
    da87:	jmpq   d948 <png_push_save_buffer+0x18>
    da8c:	lea    0x1fcc0(%rip),%rsi        # 2d753 <valid_parameters.6+0x1fd>
    da93:	callq  5470 <png_error@plt>
    da98:	mov    %r14,%rsi
    da9b:	mov    %r13,%rdi
    da9e:	callq  5790 <png_free@plt>
    daa3:	mov    %r13,%rdi
    daa6:	lea    0x1fcc8(%rip),%rsi        # 2d775 <valid_parameters.6+0x21f>
    daad:	callq  5470 <png_error@plt>
    dab2:	mov    %rax,%rdi
    dab5:	mov    0x350(%r13),%rdx
    dabc:	mov    %r14,%rsi
    dabf:	callq  54c0 <memcpy@plt>
    dac4:	mov    %r14,%rsi
    dac7:	mov    %r13,%rdi
    daca:	callq  5790 <png_free@plt>
    dacf:	mov    %r15,0x358(%r13)
    dad6:	mov    -0x18(%rbp),%rax
    dada:	mov    -0x10(%rbp),%r15
    dade:	mov    -0x8(%rbp),%r14
    dae2:	jmpq   d976 <png_push_save_buffer+0x46>
    dae7:	nopw   0x0(%rax,%rax,1)

000000000000daf0 <png_push_restore_buffer>:
    daf0:	push   %rbp
    daf1:	mov    %rsp,%rbp
    daf4:	mov    %rsi,0x340(%rdi)
    dafb:	mov    %rdx,0x368(%rdi)
    db02:	add    0x350(%rdi),%rdx
    db09:	mov    %rdx,0x360(%rdi)
    db10:	mov    %rsi,0x338(%rdi)
    db17:	leaveq 
    db18:	retq   
    db19:	nopl   0x0(%rax)

000000000000db20 <png_push_read_IDAT>:
    db20:	push   %rbp
    db21:	mov    %rsp,%rbp
    db24:	sub    $0x20,%rsp
    db28:	mov    0x12c(%rdi),%eax
    db2e:	and    $0x100,%eax
    db33:	test   %eax,%eax
    db35:	je     db6f <png_push_read_IDAT+0x4f>
    db37:	mov    %r15,%rax
    db3a:	mov    %rdi,%r15
    db3d:	mov    0x248(%r15),%edx
    db44:	test   %edx,%edx
    db46:	jne    dc23 <png_push_read_IDAT+0x103>
    db4c:	mov    0x248(%r15),%edx
    db53:	test   %edx,%edx
    db55:	jne    dcb8 <png_push_read_IDAT+0x198>
    db5b:	mov    0x248(%r15),%ecx
    db62:	test   %ecx,%ecx
    db64:	je     dd4d <png_push_read_IDAT+0x22d>
    db6a:	mov    %rax,%r15
    db6d:	leaveq 
    db6e:	retq   
    db6f:	mov    0x360(%rdi),%rax
    db76:	cmp    $0x7,%rax
    db7a:	jbe    dd8f <png_push_read_IDAT+0x26f>
    db80:	lea    -0x18(%rbp),%rsi
    db84:	mov    $0x4,%edx
    db89:	mov    %rdi,%rax
    db8c:	mov    %r15,-0x10(%rbp)
    db90:	mov    %rdi,%r15
    db93:	mov    %rax,%rdi
    db96:	callq  cc60 <png_push_fill_buffer>
    db9b:	mov    %r15,%rdi
    db9e:	lea    -0x18(%rbp),%rsi
    dba2:	callq  5730 <png_get_uint_31@plt>
    dba7:	mov    %eax,0x348(%r15)
    dbae:	mov    %r15,%rdi
    dbb1:	callq  6d90 <png_reset_crc>
    dbb6:	lea    -0x14(%rbp),%rsi
    dbba:	mov    %r15,%rdi
    dbbd:	mov    $0x4,%edx
    dbc2:	callq  1b220 <png_crc_read>
    dbc7:	movzbl -0x14(%rbp),%eax
    dbcb:	shl    $0x18,%eax
    dbce:	movzbl -0x13(%rbp),%ecx
    dbd2:	shl    $0x10,%ecx
    dbd5:	add    %eax,%ecx
    dbd7:	movzbl -0x12(%rbp),%eax
    dbdb:	shl    $0x8,%eax
    dbde:	add    %eax,%ecx
    dbe0:	movzbl -0x11(%rbp),%eax
    dbe4:	add    %eax,%ecx
    dbe6:	mov    %ecx,0x218(%r15)
    dbed:	mov    0x12c(%r15),%eax
    dbf4:	or     $0x100,%eax
    dbf9:	mov    %eax,0x12c(%r15)
    dc00:	cmp    $0x49444154,%ecx
    dc06:	jne    dd96 <png_push_read_IDAT+0x276>
    dc0c:	mov    0x348(%r15),%eax
    dc13:	mov    %eax,0x248(%r15)
    dc1a:	mov    -0x10(%rbp),%rax
    dc1e:	jmpq   db3d <png_push_read_IDAT+0x1d>
    dc23:	mov    0x350(%r15),%rcx
    dc2a:	test   %rcx,%rcx
    dc2d:	je     db4c <png_push_read_IDAT+0x2c>
    dc33:	cmp    %rdx,%rcx
    dc36:	jbe    dc3b <png_push_read_IDAT+0x11b>
    dc38:	mov    %rdx,%rcx
    dc3b:	mov    0x328(%r15),%rsi
    dc42:	mov    %r15,%rdi
    dc45:	mov    %rcx,%rdx
    dc48:	mov    %rax,-0x10(%rbp)
    dc4c:	mov    %r14,-0x8(%rbp)
    dc50:	mov    %rcx,%r14
    dc53:	callq  6dc0 <png_calculate_crc>
    dc58:	mov    0x328(%r15),%rsi
    dc5f:	mov    %r15,%rdi
    dc62:	mov    %r14,%rdx
    dc65:	callq  dde0 <png_process_IDAT_data>
    dc6a:	mov    0x248(%r15),%eax
    dc71:	sub    %r14d,%eax
    dc74:	mov    %eax,0x248(%r15)
    dc7b:	mov    0x360(%r15),%rax
    dc82:	sub    %r14,%rax
    dc85:	mov    %rax,0x360(%r15)
    dc8c:	mov    0x350(%r15),%rax
    dc93:	sub    %r14,%rax
    dc96:	mov    %rax,0x350(%r15)
    dc9d:	add    0x328(%r15),%r14
    dca4:	mov    %r14,0x328(%r15)
    dcab:	mov    -0x8(%rbp),%r14
    dcaf:	mov    -0x10(%rbp),%rax
    dcb3:	jmpq   db4c <png_push_read_IDAT+0x2c>
    dcb8:	mov    0x368(%r15),%rcx
    dcbf:	test   %rcx,%rcx
    dcc2:	je     db5b <png_push_read_IDAT+0x3b>
    dcc8:	cmp    %rdx,%rcx
    dccb:	jbe    dcd0 <png_push_read_IDAT+0x1b0>
    dccd:	mov    %rdx,%rcx
    dcd0:	mov    0x338(%r15),%rsi
    dcd7:	mov    %r15,%rdi
    dcda:	mov    %rcx,%rdx
    dcdd:	mov    %rax,-0x10(%rbp)
    dce1:	mov    %r14,-0x8(%rbp)
    dce5:	mov    %rcx,%r14
    dce8:	callq  6dc0 <png_calculate_crc>
    dced:	mov    0x338(%r15),%rsi
    dcf4:	mov    %r15,%rdi
    dcf7:	mov    %r14,%rdx
    dcfa:	callq  dde0 <png_process_IDAT_data>
    dcff:	mov    0x248(%r15),%eax
    dd06:	sub    %r14d,%eax
    dd09:	mov    %eax,0x248(%r15)
    dd10:	mov    0x360(%r15),%rax
    dd17:	sub    %r14,%rax
    dd1a:	mov    %rax,0x360(%r15)
    dd21:	mov    0x368(%r15),%rax
    dd28:	sub    %r14,%rax
    dd2b:	mov    %rax,0x368(%r15)
    dd32:	add    0x338(%r15),%r14
    dd39:	mov    %r14,0x338(%r15)
    dd40:	mov    -0x8(%rbp),%r14
    dd44:	mov    -0x10(%rbp),%rax
    dd48:	jmpq   db5b <png_push_read_IDAT+0x3b>
    dd4d:	mov    0x360(%r15),%rcx
    dd54:	cmp    $0x3,%rcx
    dd58:	jbe    ddb5 <png_push_read_IDAT+0x295>
    dd5a:	xor    %esi,%esi
    dd5c:	mov    %r15,%rdi
    dd5f:	mov    %rax,-0x10(%rbp)
    dd63:	callq  1b280 <png_crc_finish>
    dd68:	mov    0x12c(%r15),%eax
    dd6f:	and    $0xfffffef7,%eax
    dd74:	add    $0x8,%eax
    dd77:	mov    %eax,0x12c(%r15)
    dd7e:	movl   $0x0,0x138(%r15)
    dd89:	mov    -0x10(%rbp),%r15
    dd8d:	leaveq 
    dd8e:	retq   
    dd8f:	callq  d930 <png_push_save_buffer>
    dd94:	leaveq 
    dd95:	retq   
    dd96:	movl   $0x1,0x370(%r15)
    dda1:	mov    0x130(%r15),%eax
    dda8:	and    $0x8,%eax
    ddab:	test   %eax,%eax
    ddad:	je     ddc2 <png_push_read_IDAT+0x2a2>
    ddaf:	mov    -0x10(%rbp),%r15
    ddb3:	leaveq 
    ddb4:	retq   
    ddb5:	mov    %r15,%rdi
    ddb8:	mov    %rax,%r15
    ddbb:	callq  d930 <png_push_save_buffer>
    ddc0:	leaveq 
    ddc1:	retq   
    ddc2:	mov    %r15,%rdi
    ddc5:	lea    0x1f9df(%rip),%rsi        # 2d7ab <valid_parameters.6+0x255>
    ddcc:	callq  5470 <png_error@plt>
    ddd1:	data16 nopw %cs:0x0(%rax,%rax,1)
    dddc:	nopl   0x0(%rax)

000000000000dde0 <png_process_IDAT_data>:
    dde0:	push   %rbp
    dde1:	mov    %rsp,%rbp
    dde4:	sub    $0x20,%rsp
    dde8:	test   %rdx,%rdx
    ddeb:	jne    ddf9 <png_process_IDAT_data+0x19>
    dded:	lea    0x1f9d2(%rip),%rsi        # 2d7c6 <valid_parameters.6+0x270>
    ddf4:	callq  5470 <png_error@plt>
    ddf9:	test   %rsi,%rsi
    ddfc:	je     dded <png_process_IDAT_data+0xd>
    ddfe:	mov    %rsi,0x140(%rdi)
    de05:	mov    %edx,0x148(%rdi)
    de0b:	mov    $0x2,%eax
    de10:	mov    %r13,-0x8(%rbp)
    de14:	mov    %r14,-0x10(%rbp)
    de18:	mov    %r15,-0x18(%rbp)
    de1c:	mov    %r12,%r13
    de1f:	mov    %rbx,%r12
    de22:	mov    %rdi,%rbx
    de25:	mov    %rax,%r14
    de28:	jmp    de83 <png_process_IDAT_data+0xa3>
    de2a:	shr    $0x3,%rax
    de2e:	imul   0x210(%rbx),%eax
    de35:	add    $0x1,%eax
    de38:	mov    %eax,0x160(%rbx)
    de3e:	mov    0x228(%rbx),%rax
    de45:	mov    %rax,0x158(%rbx)
    de4c:	mov    %rbx,%rdi
    de4f:	mov    %r14,%rsi
    de52:	callq  1ca90 <png_zlib_inflate>
    de57:	test   %eax,%eax
    de59:	jne    ded2 <png_process_IDAT_data+0xf2>
    de5b:	mov    0x228(%rbx),%rcx
    de62:	cmp    0x158(%rbx),%rcx
    de69:	jne    df26 <png_process_IDAT_data+0x146>
    de6f:	cmp    $0x1,%eax
    de72:	jne    de83 <png_process_IDAT_data+0xa3>
    de74:	mov    0x130(%rbx),%eax
    de7a:	or     $0x8,%eax
    de7d:	mov    %eax,0x130(%rbx)
    de83:	mov    0x148(%rbx),%eax
    de89:	test   %eax,%eax
    de8b:	je     df69 <png_process_IDAT_data+0x189>
    de91:	mov    0x130(%rbx),%eax
    de97:	and    $0x8,%eax
    de9a:	test   %eax,%eax
    de9c:	jne    df69 <png_process_IDAT_data+0x189>
    dea2:	mov    0x160(%rbx),%eax
    dea8:	test   %eax,%eax
    deaa:	jne    de4c <png_process_IDAT_data+0x6c>
    deac:	movzbl 0x26a(%rbx),%eax
    deb3:	cmp    $0x7,%al
    deb5:	ja     de2a <png_process_IDAT_data+0x4a>
    debb:	mov    0x210(%rbx),%ecx
    dec1:	imul   %rcx,%rax
    dec5:	add    $0x7,%rax
    dec9:	shr    $0x3,%rax
    decd:	jmpq   de35 <png_process_IDAT_data+0x55>
    ded2:	cmp    $0x1,%eax
    ded5:	je     de5b <png_process_IDAT_data+0x7b>
    ded7:	mov    0x130(%rbx),%ecx
    dedd:	or     $0x8,%ecx
    dee0:	mov    %ecx,0x130(%rbx)
    dee6:	movl   $0x0,0x138(%rbx)
    def0:	mov    0x200(%rbx),%ecx
    def6:	cmp    0x214(%rbx),%ecx
    defc:	jbe    df8b <png_process_IDAT_data+0x1ab>
    df02:	movzbl 0x265(%rbx),%ecx
    df09:	cmp    $0x6,%cl
    df0c:	ja     df8b <png_process_IDAT_data+0x1ab>
    df0e:	cmp    $0xfffffffd,%eax
    df11:	je     dfae <png_process_IDAT_data+0x1ce>
    df17:	mov    %rbx,%rdi
    df1a:	lea    0x1f905(%rip),%rsi        # 2d826 <valid_parameters.6+0x2d0>
    df21:	callq  5470 <png_error@plt>
    df26:	mov    0x200(%rbx),%ecx
    df2c:	cmp    0x214(%rbx),%ecx
    df32:	jbe    dfd1 <png_process_IDAT_data+0x1f1>
    df38:	movzbl 0x265(%rbx),%ecx
    df3f:	cmp    $0x6,%cl
    df42:	ja     dfd1 <png_process_IDAT_data+0x1f1>
    df48:	mov    0x160(%rbx),%ecx
    df4e:	test   %ecx,%ecx
    df50:	jne    de6f <png_process_IDAT_data+0x8f>
    df56:	mov    %rax,%r15
    df59:	mov    %rbx,%rdi
    df5c:	callq  e030 <png_push_process_row>
    df61:	mov    %r15,%rax
    df64:	jmpq   de6f <png_process_IDAT_data+0x8f>
    df69:	mov    0x148(%rbx),%eax
    df6f:	test   %eax,%eax
    df71:	jne    e00d <png_process_IDAT_data+0x22d>
    df77:	mov    %r12,%rbx
    df7a:	mov    %r13,%r12
    df7d:	mov    -0x18(%rbp),%r15
    df81:	mov    -0x10(%rbp),%r14
    df85:	mov    -0x8(%rbp),%r13
    df89:	leaveq 
    df8a:	retq   
    df8b:	mov    %rbx,%rdi
    df8e:	lea    0x1f84f(%rip),%rsi        # 2d7e4 <valid_parameters.6+0x28e>
    df95:	callq  5390 <png_warning@plt>
    df9a:	mov    %r12,%rbx
    df9d:	mov    %r13,%r12
    dfa0:	mov    -0x18(%rbp),%r15
    dfa4:	mov    -0x10(%rbp),%r14
    dfa8:	mov    -0x8(%rbp),%r13
    dfac:	leaveq 
    dfad:	retq   
    dfae:	mov    %rbx,%rdi
    dfb1:	lea    0x1f84e(%rip),%rsi        # 2d806 <valid_parameters.6+0x2b0>
    dfb8:	callq  5590 <png_benign_error@plt>
    dfbd:	mov    %r12,%rbx
    dfc0:	mov    %r13,%r12
    dfc3:	mov    -0x18(%rbp),%r15
    dfc7:	mov    -0x10(%rbp),%r14
    dfcb:	mov    -0x8(%rbp),%r13
    dfcf:	leaveq 
    dfd0:	retq   
    dfd1:	lea    0x1f86a(%rip),%rsi        # 2d842 <valid_parameters.6+0x2ec>
    dfd8:	mov    %rbx,%rdi
    dfdb:	callq  5390 <png_warning@plt>
    dfe0:	mov    0x130(%rbx),%eax
    dfe6:	or     $0x8,%eax
    dfe9:	mov    %eax,0x130(%rbx)
    dfef:	movl   $0x0,0x138(%rbx)
    dff9:	mov    %r12,%rbx
    dffc:	mov    %r13,%r12
    dfff:	mov    -0x18(%rbp),%r15
    e003:	mov    -0x10(%rbp),%r14
    e007:	mov    -0x8(%rbp),%r13
    e00b:	leaveq 
    e00c:	retq   
    e00d:	mov    %rbx,%rdi
    e010:	lea    0x1f849(%rip),%rsi        # 2d860 <valid_parameters.6+0x30a>
    e017:	callq  5390 <png_warning@plt>
    e01c:	mov    %r12,%rbx
    e01f:	mov    %r13,%r12
    e022:	mov    -0x18(%rbp),%r15
    e026:	mov    -0x10(%rbp),%r14
    e02a:	mov    -0x8(%rbp),%r13
    e02e:	leaveq 
    e02f:	retq   

000000000000e030 <png_push_process_row>:
    e030:	push   %rbp
    e031:	mov    %rsp,%rbp
    e034:	sub    $0x50,%rsp
    e038:	mov    %r15,-0x38(%rbp)
    e03c:	mov    0x210(%rdi),%edx
    e042:	mov    %edx,-0x50(%rbp)
    e045:	movzbl 0x267(%rdi),%eax
    e04c:	mov    %al,-0x40(%rbp)
    e04f:	movzbl 0x268(%rdi),%eax
    e056:	mov    %al,-0x3f(%rbp)
    e059:	movzbl 0x26b(%rdi),%eax
    e060:	mov    %al,-0x3e(%rbp)
    e063:	movzbl 0x26a(%rdi),%ecx
    e06a:	cmp    $0x7,%cl
    e06d:	ja     e080 <png_push_process_row+0x50>
    e06f:	mov    %rcx,%rax
    e072:	imul   %rdx,%rax
    e076:	add    $0x7,%rax
    e07a:	shr    $0x3,%rax
    e07e:	jmp    e08b <png_push_process_row+0x5b>
    e080:	mov    %rcx,%rax
    e083:	shr    $0x3,%rax
    e087:	imul   %rdx,%rax
    e08b:	mov    %cl,-0x3d(%rbp)
    e08e:	mov    %rax,-0x48(%rbp)
    e092:	lea    -0x50(%rbp),%rsi
    e096:	mov    0x228(%rdi),%rax
    e09d:	movzbl (%rax),%r8d
    e0a1:	test   %r8b,%r8b
    e0a4:	jne    e12c <png_push_process_row+0xfc>
    e0aa:	mov    %r14,%r15
    e0ad:	mov    %r13,%r14
    e0b0:	mov    %rdi,%r13
    e0b3:	mov    0x220(%r13),%rdi
    e0ba:	mov    0x228(%r13),%rsi
    e0c1:	mov    -0x48(%rbp),%rdx
    e0c5:	add    $0x1,%rdx
    e0c9:	callq  54c0 <memcpy@plt>
    e0ce:	mov    0x134(%r13),%eax
    e0d5:	test   %eax,%eax
    e0d7:	je     e0e5 <png_push_process_row+0xb5>
    e0d9:	mov    %r13,%rdi
    e0dc:	lea    -0x50(%rbp),%rsi
    e0e0:	callq  16040 <png_do_read_transformations>
    e0e5:	movzbl 0x26f(%r13),%ecx
    e0ed:	test   %cl,%cl
    e0ef:	je     e142 <png_push_process_row+0x112>
    e0f1:	movzbl -0x3d(%rbp),%eax
    e0f5:	cmp    %al,%cl
    e0f7:	jne    e16c <png_push_process_row+0x13c>
    e0f9:	movzbl 0x264(%r13),%eax
    e101:	test   %al,%al
    e103:	jne    e17b <png_push_process_row+0x14b>
    e105:	mov    0x228(%r13),%rsi
    e10c:	add    $0x1,%rsi
    e110:	mov    %r13,%rdi
    e113:	callq  e750 <png_push_have_row>
    e118:	mov    %r13,%rdi
    e11b:	callq  e7d0 <png_read_push_finish_row>
    e120:	mov    %r14,%r13
    e123:	mov    %r15,%r14
    e126:	mov    -0x38(%rbp),%r15
    e12a:	leaveq 
    e12b:	retq   
    e12c:	cmp    $0x4,%r8b
    e130:	jbe    e1e2 <png_push_process_row+0x1b2>
    e136:	lea    0x1f742(%rip),%rsi        # 2d87f <valid_parameters.6+0x329>
    e13d:	callq  5470 <png_error@plt>
    e142:	movzbl -0x3d(%rbp),%eax
    e146:	mov    %al,0x26f(%r13)
    e14d:	movzbl 0x26e(%r13),%ecx
    e155:	movzbl -0x3d(%rbp),%eax
    e159:	cmp    %al,%cl
    e15b:	jae    e0f9 <png_push_process_row+0xc9>
    e15d:	mov    %r13,%rdi
    e160:	lea    0x1f732(%rip),%rsi        # 2d899 <valid_parameters.6+0x343>
    e167:	callq  5470 <png_error@plt>
    e16c:	mov    %r13,%rdi
    e16f:	lea    0x1f73c(%rip),%rsi        # 2d8b2 <valid_parameters.6+0x35c>
    e176:	callq  5470 <png_error@plt>
    e17b:	mov    0x134(%r13),%ecx
    e182:	mov    %rcx,%rax
    e185:	and    $0x2,%eax
    e188:	test   %eax,%eax
    e18a:	je     e105 <png_push_process_row+0xd5>
    e190:	movzbl 0x265(%r13),%edx
    e198:	cmp    $0x5,%dl
    e19b:	ja     e1b1 <png_push_process_row+0x181>
    e19d:	mov    0x228(%r13),%rsi
    e1a4:	add    $0x1,%rsi
    e1a8:	lea    -0x50(%rbp),%rdi
    e1ac:	callq  1bb30 <png_do_read_interlace>
    e1b1:	xor    %edx,%edx
    e1b3:	movzbl 0x265(%r13),%eax
    e1bb:	cmp    $0x5,%al
    e1bd:	ja     e204 <png_push_process_row+0x1d4>
    e1bf:	lea    0x1f49a(%rip),%rcx        # 2d660 <valid_parameters.6+0x10a>
    e1c6:	movslq (%rcx,%rax,4),%rax
    e1ca:	add    %rcx,%rax
    e1cd:	jmpq   *%rax
    e1cf:	mov    %r14,-0x8(%rbp)
    e1d3:	mov    %r15,-0x10(%rbp)
    e1d7:	mov    %rdx,%r15
    e1da:	mov    %r15,%r14
    e1dd:	jmpq   e2c5 <png_push_process_row+0x295>
    e1e2:	lea    0x1(%rax),%rdx
    e1e6:	mov    0x220(%rdi),%rcx
    e1ed:	add    $0x1,%rcx
    e1f1:	mov    %r14,%r15
    e1f4:	mov    %r13,%r14
    e1f7:	mov    %rdi,%r13
    e1fa:	callq  1c060 <png_read_filter_row>
    e1ff:	jmpq   e0b3 <png_push_process_row+0x83>
    e204:	mov    0x228(%r13),%rsi
    e20b:	add    $0x1,%rsi
    e20f:	mov    %r13,%rdi
    e212:	callq  e750 <png_push_have_row>
    e217:	mov    %r13,%rdi
    e21a:	callq  e7d0 <png_read_push_finish_row>
    e21f:	movzbl 0x265(%r13),%eax
    e227:	cmp    $0x6,%al
    e229:	je     e2e3 <png_push_process_row+0x2b3>
    e22f:	mov    %r14,%r13
    e232:	mov    %r15,%r14
    e235:	mov    -0x38(%rbp),%r15
    e239:	leaveq 
    e23a:	retq   
    e23b:	mov    %r14,-0x8(%rbp)
    e23f:	mov    %r15,-0x10(%rbp)
    e243:	mov    %rdx,%r15
    e246:	mov    %r15,%r14
    e249:	jmpq   e32c <png_push_process_row+0x2fc>
    e24e:	mov    %r14,-0x18(%rbp)
    e252:	mov    %r15,-0x20(%rbp)
    e256:	mov    %rdx,%r15
    e259:	mov    %r15,%r14
    e25c:	jmpq   e379 <png_push_process_row+0x349>
    e261:	mov    %r14,-0x18(%rbp)
    e265:	mov    %r15,-0x20(%rbp)
    e269:	mov    %rdx,%r15
    e26c:	mov    %r15,%r14
    e26f:	jmpq   e3b2 <png_push_process_row+0x382>
    e274:	mov    %r14,-0x28(%rbp)
    e278:	mov    %r15,-0x30(%rbp)
    e27c:	mov    %rdx,%r15
    e27f:	mov    %r15,%r14
    e282:	jmpq   e3ff <png_push_process_row+0x3cf>
    e287:	mov    %r14,-0x28(%rbp)
    e28b:	mov    %r15,-0x30(%rbp)
    e28f:	mov    %rdx,%r15
    e292:	mov    %r15,%r14
    e295:	jmpq   e438 <png_push_process_row+0x408>
    e29a:	movzbl 0x265(%r13),%eax
    e2a2:	test   %al,%al
    e2a4:	jne    e2cb <png_push_process_row+0x29b>
    e2a6:	mov    0x228(%r13),%rsi
    e2ad:	add    $0x1,%rsi
    e2b1:	mov    %r13,%rdi
    e2b4:	callq  e750 <png_push_have_row>
    e2b9:	mov    %r13,%rdi
    e2bc:	callq  e7d0 <png_read_push_finish_row>
    e2c1:	add    $0x1,%r15d
    e2c5:	cmp    $0x7,%r15d
    e2c9:	jle    e29a <png_push_process_row+0x26a>
    e2cb:	movzbl 0x265(%r13),%eax
    e2d3:	cmp    $0x2,%al
    e2d5:	jne    e45c <png_push_process_row+0x42c>
    e2db:	mov    %r14,%r15
    e2de:	jmpq   e4a7 <png_push_process_row+0x477>
    e2e3:	mov    %r13,%rdi
    e2e6:	xor    %esi,%esi
    e2e8:	callq  e750 <png_push_have_row>
    e2ed:	mov    %r13,%rdi
    e2f0:	callq  e7d0 <png_read_push_finish_row>
    e2f5:	mov    %r14,%r13
    e2f8:	mov    %r15,%r14
    e2fb:	mov    -0x38(%rbp),%r15
    e2ff:	leaveq 
    e300:	retq   
    e301:	movzbl 0x265(%r13),%eax
    e309:	cmp    $0x1,%al
    e30b:	jne    e332 <png_push_process_row+0x302>
    e30d:	mov    0x228(%r13),%rsi
    e314:	add    $0x1,%rsi
    e318:	mov    %r13,%rdi
    e31b:	callq  e750 <png_push_have_row>
    e320:	mov    %r13,%rdi
    e323:	callq  e7d0 <png_read_push_finish_row>
    e328:	add    $0x1,%r15d
    e32c:	cmp    $0x7,%r15d
    e330:	jle    e301 <png_push_process_row+0x2d1>
    e332:	movzbl 0x265(%r13),%eax
    e33a:	cmp    $0x2,%al
    e33c:	jne    e4af <png_push_process_row+0x47f>
    e342:	mov    %r14,%r15
    e345:	jmpq   e4e4 <png_push_process_row+0x4b4>
    e34a:	movzbl 0x265(%r13),%eax
    e352:	cmp    $0x2,%al
    e354:	jne    e4f8 <png_push_process_row+0x4c8>
    e35a:	mov    0x228(%r13),%rsi
    e361:	add    $0x1,%rsi
    e365:	mov    %r13,%rdi
    e368:	callq  e750 <png_push_have_row>
    e36d:	mov    %r13,%rdi
    e370:	callq  e7d0 <png_read_push_finish_row>
    e375:	add    $0x1,%r15d
    e379:	cmp    $0x3,%r15d
    e37d:	jle    e34a <png_push_process_row+0x31a>
    e37f:	mov    %r14,%r15
    e382:	jmpq   e520 <png_push_process_row+0x4f0>
    e387:	movzbl 0x265(%r13),%eax
    e38f:	cmp    $0x3,%al
    e391:	jne    e3b8 <png_push_process_row+0x388>
    e393:	mov    0x228(%r13),%rsi
    e39a:	add    $0x1,%rsi
    e39e:	mov    %r13,%rdi
    e3a1:	callq  e750 <png_push_have_row>
    e3a6:	mov    %r13,%rdi
    e3a9:	callq  e7d0 <png_read_push_finish_row>
    e3ae:	add    $0x1,%r15d
    e3b2:	cmp    $0x3,%r15d
    e3b6:	jle    e387 <png_push_process_row+0x357>
    e3b8:	movzbl 0x265(%r13),%eax
    e3c0:	cmp    $0x4,%al
    e3c2:	jne    e53e <png_push_process_row+0x50e>
    e3c8:	mov    %r14,%r15
    e3cb:	jmpq   e573 <png_push_process_row+0x543>
    e3d0:	movzbl 0x265(%r13),%eax
    e3d8:	cmp    $0x4,%al
    e3da:	jne    e587 <png_push_process_row+0x557>
    e3e0:	mov    0x228(%r13),%rsi
    e3e7:	add    $0x1,%rsi
    e3eb:	mov    %r13,%rdi
    e3ee:	callq  e750 <png_push_have_row>
    e3f3:	mov    %r13,%rdi
    e3f6:	callq  e7d0 <png_read_push_finish_row>
    e3fb:	add    $0x1,%r15d
    e3ff:	cmp    $0x1,%r15d
    e403:	jle    e3d0 <png_push_process_row+0x3a0>
    e405:	mov    %r14,%r15
    e408:	jmpq   e5af <png_push_process_row+0x57f>
    e40d:	movzbl 0x265(%r13),%eax
    e415:	cmp    $0x5,%al
    e417:	jne    e43e <png_push_process_row+0x40e>
    e419:	mov    0x228(%r13),%rsi
    e420:	add    $0x1,%rsi
    e424:	mov    %r13,%rdi
    e427:	callq  e750 <png_push_have_row>
    e42c:	mov    %r13,%rdi
    e42f:	callq  e7d0 <png_read_push_finish_row>
    e434:	add    $0x1,%r15d
    e438:	cmp    $0x1,%r15d
    e43c:	jle    e40d <png_push_process_row+0x3dd>
    e43e:	movzbl 0x265(%r13),%eax
    e446:	cmp    $0x6,%al
    e448:	je     e5d3 <png_push_process_row+0x5a3>
    e44e:	mov    -0x30(%rbp),%r14
    e452:	mov    -0x28(%rbp),%r13
    e456:	mov    -0x38(%rbp),%r15
    e45a:	leaveq 
    e45b:	retq   
    e45c:	movzbl 0x265(%r13),%eax
    e464:	cmp    $0x4,%al
    e466:	jne    e5f4 <png_push_process_row+0x5c4>
    e46c:	mov    0x1fc(%r13),%eax
    e473:	cmp    $0x4,%eax
    e476:	ja     e5f4 <png_push_process_row+0x5c4>
    e47c:	mov    %r14,%r15
    e47f:	jmpq   e635 <png_push_process_row+0x605>
    e484:	movzbl 0x265(%r13),%eax
    e48c:	cmp    $0x2,%al
    e48e:	jne    e45c <png_push_process_row+0x42c>
    e490:	mov    %r13,%rdi
    e493:	mov    %r14,%rsi
    e496:	callq  e750 <png_push_have_row>
    e49b:	mov    %r13,%rdi
    e49e:	callq  e7d0 <png_read_push_finish_row>
    e4a3:	add    $0x1,%r15d
    e4a7:	cmp    $0x3,%r15d
    e4ab:	jle    e484 <png_push_process_row+0x454>
    e4ad:	jmp    e45c <png_push_process_row+0x42c>
    e4af:	mov    -0x10(%rbp),%r14
    e4b3:	mov    -0x8(%rbp),%r13
    e4b7:	mov    -0x38(%rbp),%r15
    e4bb:	leaveq 
    e4bc:	retq   
    e4bd:	movzbl 0x265(%r13),%eax
    e4c5:	cmp    $0x2,%al
    e4c7:	jne    e63d <png_push_process_row+0x60d>
    e4cd:	mov    %r13,%rdi
    e4d0:	mov    %r14,%rsi
    e4d3:	callq  e750 <png_push_have_row>
    e4d8:	mov    %r13,%rdi
    e4db:	callq  e7d0 <png_read_push_finish_row>
    e4e0:	add    $0x1,%r15d
    e4e4:	cmp    $0x3,%r15d
    e4e8:	jle    e4bd <png_push_process_row+0x48d>
    e4ea:	mov    -0x10(%rbp),%r14
    e4ee:	mov    -0x8(%rbp),%r13
    e4f2:	mov    -0x38(%rbp),%r15
    e4f6:	leaveq 
    e4f7:	retq   
    e4f8:	mov    %r14,%r15
    e4fb:	jmp    e520 <png_push_process_row+0x4f0>
    e4fd:	movzbl 0x265(%r13),%eax
    e505:	cmp    $0x2,%al
    e507:	jne    e526 <png_push_process_row+0x4f6>
    e509:	mov    %r13,%rdi
    e50c:	mov    %r14,%rsi
    e50f:	callq  e750 <png_push_have_row>
    e514:	mov    %r13,%rdi
    e517:	callq  e7d0 <png_read_push_finish_row>
    e51c:	add    $0x1,%r15d
    e520:	cmp    $0x3,%r15d
    e524:	jle    e4fd <png_push_process_row+0x4cd>
    e526:	movzbl 0x265(%r13),%eax
    e52e:	cmp    $0x4,%al
    e530:	jne    e64b <png_push_process_row+0x61b>
    e536:	mov    %r14,%r15
    e539:	jmpq   e67c <png_push_process_row+0x64c>
    e53e:	mov    -0x20(%rbp),%r14
    e542:	mov    -0x18(%rbp),%r13
    e546:	mov    -0x38(%rbp),%r15
    e54a:	leaveq 
    e54b:	retq   
    e54c:	movzbl 0x265(%r13),%eax
    e554:	cmp    $0x4,%al
    e556:	jne    e690 <png_push_process_row+0x660>
    e55c:	mov    %r13,%rdi
    e55f:	mov    %r14,%rsi
    e562:	callq  e750 <png_push_have_row>
    e567:	mov    %r13,%rdi
    e56a:	callq  e7d0 <png_read_push_finish_row>
    e56f:	add    $0x1,%r15d
    e573:	cmp    $0x1,%r15d
    e577:	jle    e54c <png_push_process_row+0x51c>
    e579:	mov    -0x20(%rbp),%r14
    e57d:	mov    -0x18(%rbp),%r13
    e581:	mov    -0x38(%rbp),%r15
    e585:	leaveq 
    e586:	retq   
    e587:	mov    %r14,%r15
    e58a:	jmp    e5af <png_push_process_row+0x57f>
    e58c:	movzbl 0x265(%r13),%eax
    e594:	cmp    $0x4,%al
    e596:	jne    e5b5 <png_push_process_row+0x585>
    e598:	mov    %r13,%rdi
    e59b:	mov    %r14,%rsi
    e59e:	callq  e750 <png_push_have_row>
    e5a3:	mov    %r13,%rdi
    e5a6:	callq  e7d0 <png_read_push_finish_row>
    e5ab:	add    $0x1,%r15d
    e5af:	cmp    $0x1,%r15d
    e5b3:	jle    e58c <png_push_process_row+0x55c>
    e5b5:	movzbl 0x265(%r13),%eax
    e5bd:	cmp    $0x6,%al
    e5bf:	je     e69e <png_push_process_row+0x66e>
    e5c5:	mov    -0x30(%rbp),%r14
    e5c9:	mov    -0x28(%rbp),%r13
    e5cd:	mov    -0x38(%rbp),%r15
    e5d1:	leaveq 
    e5d2:	retq   
    e5d3:	mov    %r14,%rsi
    e5d6:	mov    %r13,%rdi
    e5d9:	callq  e750 <png_push_have_row>
    e5de:	mov    %r13,%rdi
    e5e1:	callq  e7d0 <png_read_push_finish_row>
    e5e6:	mov    -0x30(%rbp),%r14
    e5ea:	mov    -0x28(%rbp),%r13
    e5ee:	mov    -0x38(%rbp),%r15
    e5f2:	leaveq 
    e5f3:	retq   
    e5f4:	movzbl 0x265(%r13),%eax
    e5fc:	cmp    $0x6,%al
    e5fe:	je     e6bf <png_push_process_row+0x68f>
    e604:	mov    -0x10(%rbp),%r14
    e608:	mov    -0x8(%rbp),%r13
    e60c:	mov    -0x38(%rbp),%r15
    e610:	leaveq 
    e611:	retq   
    e612:	movzbl 0x265(%r13),%eax
    e61a:	cmp    $0x4,%al
    e61c:	jne    e5f4 <png_push_process_row+0x5c4>
    e61e:	mov    %r13,%rdi
    e621:	mov    %r14,%rsi
    e624:	callq  e750 <png_push_have_row>
    e629:	mov    %r13,%rdi
    e62c:	callq  e7d0 <png_read_push_finish_row>
    e631:	add    $0x1,%r15d
    e635:	cmp    $0x1,%r15d
    e639:	jle    e612 <png_push_process_row+0x5e2>
    e63b:	jmp    e5f4 <png_push_process_row+0x5c4>
    e63d:	mov    -0x10(%rbp),%r14
    e641:	mov    -0x8(%rbp),%r13
    e645:	mov    -0x38(%rbp),%r15
    e649:	leaveq 
    e64a:	retq   
    e64b:	mov    -0x20(%rbp),%r14
    e64f:	mov    -0x18(%rbp),%r13
    e653:	mov    -0x38(%rbp),%r15
    e657:	leaveq 
    e658:	retq   
    e659:	movzbl 0x265(%r13),%eax
    e661:	cmp    $0x4,%al
    e663:	jne    e6d9 <png_push_process_row+0x6a9>
    e665:	mov    %r13,%rdi
    e668:	mov    %r14,%rsi
    e66b:	callq  e750 <png_push_have_row>
    e670:	mov    %r13,%rdi
    e673:	callq  e7d0 <png_read_push_finish_row>
    e678:	add    $0x1,%r15d
    e67c:	cmp    $0x1,%r15d
    e680:	jle    e659 <png_push_process_row+0x629>
    e682:	mov    -0x20(%rbp),%r14
    e686:	mov    -0x18(%rbp),%r13
    e68a:	mov    -0x38(%rbp),%r15
    e68e:	leaveq 
    e68f:	retq   
    e690:	mov    -0x20(%rbp),%r14
    e694:	mov    -0x18(%rbp),%r13
    e698:	mov    -0x38(%rbp),%r15
    e69c:	leaveq 
    e69d:	retq   
    e69e:	mov    %r14,%rsi
    e6a1:	mov    %r13,%rdi
    e6a4:	callq  e750 <png_push_have_row>
    e6a9:	mov    %r13,%rdi
    e6ac:	callq  e7d0 <png_read_push_finish_row>
    e6b1:	mov    -0x30(%rbp),%r14
    e6b5:	mov    -0x28(%rbp),%r13
    e6b9:	mov    -0x38(%rbp),%r15
    e6bd:	leaveq 
    e6be:	retq   
    e6bf:	mov    0x1fc(%r13),%eax
    e6c6:	cmp    $0x4,%eax
    e6c9:	jbe    e6e7 <png_push_process_row+0x6b7>
    e6cb:	mov    -0x10(%rbp),%r14
    e6cf:	mov    -0x8(%rbp),%r13
    e6d3:	mov    -0x38(%rbp),%r15
    e6d7:	leaveq 
    e6d8:	retq   
    e6d9:	mov    -0x20(%rbp),%r14
    e6dd:	mov    -0x18(%rbp),%r13
    e6e1:	mov    -0x38(%rbp),%r15
    e6e5:	leaveq 
    e6e6:	retq   
    e6e7:	mov    %r14,%rsi
    e6ea:	mov    %r13,%rdi
    e6ed:	callq  e750 <png_push_have_row>
    e6f2:	mov    %r13,%rdi
    e6f5:	callq  e7d0 <png_read_push_finish_row>
    e6fa:	mov    -0x10(%rbp),%r14
    e6fe:	mov    -0x8(%rbp),%r13
    e702:	mov    -0x38(%rbp),%r15
    e706:	leaveq 
    e707:	retq   
    e708:	nopl   0x0(%rax,%rax,1)

000000000000e710 <png_push_have_info>:
    e710:	push   %rbp
    e711:	mov    %rsp,%rbp
    e714:	mov    0x310(%rdi),%rax
    e71b:	test   %rax,%rax
    e71e:	jne    e722 <png_push_have_info+0x12>
    e720:	leaveq 
    e721:	retq   
    e722:	callq  *%rax
    e724:	leaveq 
    e725:	retq   
    e726:	nopw   %cs:0x0(%rax,%rax,1)

000000000000e730 <png_push_have_end>:
    e730:	push   %rbp
    e731:	mov    %rsp,%rbp
    e734:	mov    0x320(%rdi),%rax
    e73b:	test   %rax,%rax
    e73e:	jne    e742 <png_push_have_end+0x12>
    e740:	leaveq 
    e741:	retq   
    e742:	callq  *%rax
    e744:	leaveq 
    e745:	retq   
    e746:	nopw   %cs:0x0(%rax,%rax,1)

000000000000e750 <png_push_have_row>:
    e750:	push   %rbp
    e751:	mov    %rsp,%rbp
    e754:	mov    0x318(%rdi),%rax
    e75b:	test   %rax,%rax
    e75e:	jne    e762 <png_push_have_row+0x12>
    e760:	leaveq 
    e761:	retq   
    e762:	mov    0x214(%rdi),%edx
    e768:	movzbl 0x265(%rdi),%ecx
    e76f:	callq  *%rax
    e771:	leaveq 
    e772:	retq   
    e773:	data16 nopw %cs:0x0(%rax,%rax,1)
    e77e:	xchg   %ax,%ax

000000000000e780 <png_process_some_data>:
    e780:	push   %rbp
    e781:	mov    %rsp,%rbp
    e784:	test   %rdi,%rdi
    e787:	jne    e78b <png_process_some_data+0xb>
    e789:	leaveq 
    e78a:	retq   
    e78b:	movslq 0x370(%rdi),%rax
    e792:	test   %eax,%eax
    e794:	jle    e7a7 <png_process_some_data+0x27>
    e796:	cmp    $0x1,%eax
    e799:	je     e7b8 <png_process_some_data+0x38>
    e79b:	cmp    $0x2,%eax
    e79e:	jne    e7ab <png_process_some_data+0x2b>
    e7a0:	callq  db20 <png_push_read_IDAT>
    e7a5:	leaveq 
    e7a6:	retq   
    e7a7:	test   %eax,%eax
    e7a9:	je     e7bf <png_process_some_data+0x3f>
    e7ab:	movq   $0x0,0x360(%rdi)
    e7b6:	leaveq 
    e7b7:	retq   
    e7b8:	callq  cd90 <png_push_read_chunk>
    e7bd:	leaveq 
    e7be:	retq   
    e7bf:	callq  d840 <png_push_read_sig>
    e7c4:	leaveq 
    e7c5:	retq   
    e7c6:	nopw   %cs:0x0(%rax,%rax,1)

000000000000e7d0 <png_read_push_finish_row>:
    e7d0:	push   %rbp
    e7d1:	mov    %rsp,%rbp
    e7d4:	sub    $0x10,%rsp
    e7d8:	mov    0x214(%rdi),%eax
    e7de:	add    $0x1,%eax
    e7e1:	mov    %eax,0x214(%rdi)
    e7e7:	mov    0x200(%rdi),%ecx
    e7ed:	cmp    %eax,%ecx
    e7ef:	jbe    e7f3 <png_read_push_finish_row+0x23>
    e7f1:	leaveq 
    e7f2:	retq   
    e7f3:	movzbl 0x264(%rdi),%eax
    e7fa:	test   %al,%al
    e7fc:	jne    e800 <png_read_push_finish_row+0x30>
    e7fe:	leaveq 
    e7ff:	retq   
    e800:	movl   $0x0,0x214(%rdi)
    e80a:	mov    0x220(%rdi),%rax
    e811:	xor    %esi,%esi
    e813:	mov    0x208(%rdi),%rdx
    e81a:	add    $0x1,%rdx
    e81e:	mov    %r15,-0x8(%rbp)
    e822:	mov    %rdi,%r15
    e825:	mov    %rax,%rdi
    e828:	callq  5350 <memset@plt>
    e82d:	lea    0x1f0b5(%rip),%rcx        # 2d8e9 <png_pass_inc.22>
    e834:	lea    0x1f0a7(%rip),%rdi        # 2d8e2 <png_pass_start.21>
    e83b:	lea    0x1f0b5(%rip),%rsi        # 2d8f7 <png_pass_yinc.24>
    e842:	lea    0x1f0a7(%rip),%r8        # 2d8f0 <png_pass_ystart.23>
    e849:	jmp    e8bb <png_read_push_finish_row+0xeb>
    e84b:	movzbl (%rdx,%rcx,1),%r9d
    e850:	mov    0x1f8(%r15),%eax
    e857:	lea    -0x1(%r9,%rax,1),%eax
    e85c:	movzbl (%rdx,%rdi,1),%edx
    e860:	sub    %edx,%eax
    e862:	xor    %edx,%edx
    e864:	div    %r9d
    e867:	mov    %eax,0x210(%r15)
    e86e:	mov    0x134(%r15),%eax
    e875:	and    $0x2,%eax
    e878:	test   %eax,%eax
    e87a:	jne    e903 <png_read_push_finish_row+0x133>
    e880:	movzbl 0x265(%r15),%edx
    e888:	movzbl (%rdx,%rsi,1),%r9d
    e88d:	mov    0x1fc(%r15),%eax
    e894:	lea    -0x1(%r9,%rax,1),%eax
    e899:	movzbl (%rdx,%r8,1),%edx
    e89e:	sub    %edx,%eax
    e8a0:	xor    %edx,%edx
    e8a2:	div    %r9d
    e8a5:	mov    %eax,0x200(%r15)
    e8ac:	mov    0x210(%r15),%edx
    e8b3:	test   %edx,%edx
    e8b5:	je     e8bb <png_read_push_finish_row+0xeb>
    e8b7:	test   %eax,%eax
    e8b9:	jne    e909 <png_read_push_finish_row+0x139>
    e8bb:	movzbl 0x265(%r15),%edx
    e8c3:	lea    0x1(%rdx),%eax
    e8c6:	mov    %al,0x265(%r15)
    e8cd:	test   %dl,%dl
    e8cf:	je     e90f <png_read_push_finish_row+0x13f>
    e8d1:	movzbl 0x265(%r15),%eax
    e8d9:	cmp    $0x3,%al
    e8db:	jne    e8e9 <png_read_push_finish_row+0x119>
    e8dd:	mov    0x1f8(%r15),%eax
    e8e4:	cmp    $0x2,%eax
    e8e7:	jbe    e91b <png_read_push_finish_row+0x14b>
    e8e9:	movzbl 0x265(%r15),%eax
    e8f1:	cmp    $0x5,%al
    e8f3:	jne    e92d <png_read_push_finish_row+0x15d>
    e8f5:	mov    0x1f8(%r15),%eax
    e8fc:	cmp    $0x1,%eax
    e8ff:	jbe    e91b <png_read_push_finish_row+0x14b>
    e901:	jmp    e92d <png_read_push_finish_row+0x15d>
    e903:	mov    -0x8(%rbp),%r15
    e907:	leaveq 
    e908:	retq   
    e909:	mov    -0x8(%rbp),%r15
    e90d:	leaveq 
    e90e:	retq   
    e90f:	mov    0x1f8(%r15),%eax
    e916:	cmp    $0x4,%eax
    e919:	ja     e8d1 <png_read_push_finish_row+0x101>
    e91b:	movzbl 0x265(%r15),%eax
    e923:	add    $0x1,%eax
    e926:	mov    %al,0x265(%r15)
    e92d:	movzbl 0x265(%r15),%eax
    e935:	cmp    $0x7,%al
    e937:	jbe    e945 <png_read_push_finish_row+0x175>
    e939:	add    $0xff,%eax
    e93e:	mov    %al,0x265(%r15)
    e945:	movzbl 0x265(%r15),%edx
    e94d:	cmp    $0x6,%dl
    e950:	jbe    e84b <png_read_push_finish_row+0x7b>
    e956:	mov    -0x8(%rbp),%r15
    e95a:	leaveq 
    e95b:	retq   
    e95c:	nopl   0x0(%rax)

000000000000e960 <png_create_read_struct>:
    e960:	push   %rbp
    e961:	mov    %rsp,%rbp
    e964:	sub    $0x10,%rsp
    e968:	movq   $0x0,(%rsp)
    e970:	xor    %r8d,%r8d
    e973:	mov    %r8,%r9
    e976:	callq  54a0 <png_create_read_struct_2@plt>
    e97b:	leaveq 
    e97c:	retq   
    e97d:	nopl   (%rax)

000000000000e980 <png_create_read_struct_2>:
    e980:	push   %rbp
    e981:	mov    %rsp,%rbp
    e984:	sub    $0x10,%rsp
    e988:	mov    0x10(%rbp),%rax
    e98c:	mov    %rax,(%rsp)
    e990:	callq  6b90 <png_create_png_struct>
    e995:	test   %rax,%rax
    e998:	jne    e99c <png_create_read_struct_2+0x1c>
    e99a:	leaveq 
    e99b:	retq   
    e99c:	movl   $0x8000,0x12c(%rax)
    e9a6:	movl   $0x2000,0x468(%rax)
    e9b0:	mov    0x130(%rax),%ecx
    e9b6:	or     $0x300000,%ecx
    e9bc:	mov    %ecx,0x130(%rax)
    e9c2:	xor    %esi,%esi
    e9c4:	mov    %rsi,%rdx
    e9c7:	mov    %rax,%rdi
    e9ca:	mov    %r15,-0x8(%rbp)
    e9ce:	mov    %rax,%r15
    e9d1:	callq  5560 <png_set_read_fn@plt>
    e9d6:	mov    %r15,%rax
    e9d9:	mov    -0x8(%rbp),%r15
    e9dd:	leaveq 
    e9de:	retq   
    e9df:	nop

000000000000e9e0 <png_read_info>:
    e9e0:	push   %rbp
    e9e1:	mov    %rsp,%rbp
    e9e4:	sub    $0x30,%rsp
    e9e8:	test   %rdi,%rdi
    e9eb:	jne    e9ef <png_read_info+0xf>
    e9ed:	leaveq 
    e9ee:	retq   
    e9ef:	test   %rsi,%rsi
    e9f2:	jne    e9f6 <png_read_info+0x16>
    e9f4:	leaveq 
    e9f5:	retq   
    e9f6:	mov    %rdi,%rax
    e9f9:	mov    %rsi,%rcx
    e9fc:	mov    %r14,-0x20(%rbp)
    ea00:	mov    %r15,-0x28(%rbp)
    ea04:	mov    %rbx,%r14
    ea07:	mov    %rdi,%rbx
    ea0a:	mov    %rax,%rdi
    ea0d:	mov    %r12,%r15
    ea10:	mov    %rsi,%r12
    ea13:	mov    %rcx,%rsi
    ea16:	callq  1b070 <png_read_sig>
    ea1b:	lea    0x1ef6c(%rip),%rax        # 2d98e <png_pass_yinc.24+0x97>
    ea22:	mov    %r14,-0x8(%rbp)
    ea26:	mov    %r15,-0x10(%rbp)
    ea2a:	mov    %r13,-0x18(%rbp)
    ea2e:	mov    %rax,%r14
    ea31:	jmp    ea41 <png_read_info+0x61>
    ea33:	mov    %rax,%rdx
    ea36:	mov    %rbx,%rdi
    ea39:	mov    %r12,%rsi
    ea3c:	callq  1caf0 <png_handle_IHDR>
    ea41:	mov    %rbx,%rdi
    ea44:	callq  1b170 <png_read_chunk_header>
    ea49:	mov    0x218(%rbx),%r13d
    ea50:	cmp    $0x49444154,%r13d
    ea57:	je     ea77 <png_read_info+0x97>
    ea59:	mov    0x12c(%rbx),%ecx
    ea5f:	mov    %rcx,%rdx
    ea62:	and    $0x4,%edx
    ea65:	test   %edx,%edx
    ea67:	je     ead7 <png_read_info+0xf7>
    ea69:	or     $0x2008,%ecx
    ea6f:	mov    %ecx,0x12c(%rbx)
    ea75:	jmp    ead7 <png_read_info+0xf7>
    ea77:	mov    0x12c(%rbx),%ecx
    ea7d:	mov    %rcx,%rdx
    ea80:	and    $0x1,%edx
    ea83:	test   %edx,%edx
    ea85:	jne    ea96 <png_read_info+0xb6>
    ea87:	mov    %rbx,%rdi
    ea8a:	lea    0x1eecb(%rip),%rsi        # 2d95c <png_pass_yinc.24+0x65>
    ea91:	callq  5060 <png_chunk_error@plt>
    ea96:	movzbl 0x267(%rbx),%edx
    ea9d:	cmp    $0x3,%dl
    eaa0:	jne    eab0 <png_read_info+0xd0>
    eaa2:	mov    %rcx,%rdx
    eaa5:	and    $0x2,%edx
    eaa8:	test   %edx,%edx
    eaaa:	je     ec20 <png_read_info+0x240>
    eab0:	and    $0x8,%ecx
    eab3:	test   %ecx,%ecx
    eab5:	je     eac8 <png_read_info+0xe8>
    eab7:	mov    %rax,%r15
    eaba:	mov    %rbx,%rdi
    eabd:	mov    %r14,%rsi
    eac0:	callq  5230 <png_chunk_benign_error@plt>
    eac5:	mov    %r15,%rax
    eac8:	mov    0x12c(%rbx),%ecx
    eace:	or     $0x4,%ecx
    ead1:	mov    %ecx,0x12c(%rbx)
    ead7:	cmp    $0x49484452,%r13d
    eade:	je     ea33 <png_read_info+0x53>
    eae4:	cmp    $0x49454e44,%r13d
    eaeb:	je     ec2f <png_read_info+0x24f>
    eaf1:	mov    %rax,%r15
    eaf4:	mov    %rbx,%rdi
    eaf7:	mov    %r13,%rsi
    eafa:	callq  6e90 <png_chunk_unknown_handling>
    eaff:	test   %eax,%eax
    eb01:	jne    ec42 <png_read_info+0x262>
    eb07:	cmp    $0x504c5445,%r13d
    eb0e:	je     ec8d <png_read_info+0x2ad>
    eb14:	cmp    $0x49444154,%r13d
    eb1b:	je     eca0 <png_read_info+0x2c0>
    eb21:	cmp    $0x624b4744,%r13d
    eb28:	je     ecbd <png_read_info+0x2dd>
    eb2e:	cmp    $0x6348524d,%r13d
    eb35:	je     ecd0 <png_read_info+0x2f0>
    eb3b:	cmp    $0x65584966,%r13d
    eb42:	je     ece3 <png_read_info+0x303>
    eb48:	cmp    $0x67414d41,%r13d
    eb4f:	je     ecf6 <png_read_info+0x316>
    eb55:	cmp    $0x68495354,%r13d
    eb5c:	je     ed09 <png_read_info+0x329>
    eb62:	cmp    $0x6f464673,%r13d
    eb69:	je     ed1c <png_read_info+0x33c>
    eb6f:	cmp    $0x7043414c,%r13d
    eb76:	je     ed2f <png_read_info+0x34f>
    eb7c:	cmp    $0x7343414c,%r13d
    eb83:	je     ed42 <png_read_info+0x362>
    eb89:	cmp    $0x70485973,%r13d
    eb90:	je     ed55 <png_read_info+0x375>
    eb96:	cmp    $0x73424954,%r13d
    eb9d:	je     ed68 <png_read_info+0x388>
    eba3:	cmp    $0x73524742,%r13d
    ebaa:	je     ed7b <png_read_info+0x39b>
    ebb0:	cmp    $0x69434350,%r13d
    ebb7:	je     ed8e <png_read_info+0x3ae>
    ebbd:	cmp    $0x73504c54,%r13d
    ebc4:	je     eda1 <png_read_info+0x3c1>
    ebca:	cmp    $0x74455874,%r13d
    ebd1:	je     edb4 <png_read_info+0x3d4>
    ebd7:	cmp    $0x74494d45,%r13d
    ebde:	je     edc7 <png_read_info+0x3e7>
    ebe4:	cmp    $0x74524e53,%r13d
    ebeb:	je     edda <png_read_info+0x3fa>
    ebf1:	cmp    $0x7a545874,%r13d
    ebf8:	je     eded <png_read_info+0x40d>
    ebfe:	cmp    $0x69545874,%r13d
    ec05:	je     ee00 <png_read_info+0x420>
    ec0b:	mov    %r15,%rdx
    ec0e:	mov    %rbx,%rdi
    ec11:	mov    %r12,%rsi
    ec14:	xor    %ecx,%ecx
    ec16:	callq  1fe10 <png_handle_unknown>
    ec1b:	jmpq   ea41 <png_read_info+0x61>
    ec20:	mov    %rbx,%rdi
    ec23:	lea    0x1ed4b(%rip),%rsi        # 2d975 <png_pass_yinc.24+0x7e>
    ec2a:	callq  5060 <png_chunk_error@plt>
    ec2f:	mov    %rax,%rdx
    ec32:	mov    %rbx,%rdi
    ec35:	mov    %r12,%rsi
    ec38:	callq  1cf60 <png_handle_IEND>
    ec3d:	jmpq   ea41 <png_read_info+0x61>
    ec42:	mov    %rax,%rcx
    ec45:	mov    %r15,%rdx
    ec48:	mov    %rbx,%rdi
    ec4b:	mov    %r12,%rsi
    ec4e:	callq  1fe10 <png_handle_unknown>
    ec53:	cmp    $0x504c5445,%r13d
    ec5a:	je     ee13 <png_read_info+0x433>
    ec60:	cmp    $0x49444154,%r13d
    ec67:	jne    ea41 <png_read_info+0x61>
    ec6d:	movl   $0x0,0x248(%rbx)
    ec77:	mov    -0x18(%rbp),%r13
    ec7b:	mov    -0x10(%rbp),%r12
    ec7f:	mov    -0x8(%rbp),%rbx
    ec83:	mov    -0x28(%rbp),%r15
    ec87:	mov    -0x20(%rbp),%r14
    ec8b:	leaveq 
    ec8c:	retq   
    ec8d:	mov    %r15,%rdx
    ec90:	mov    %rbx,%rdi
    ec93:	mov    %r12,%rsi
    ec96:	callq  1cc80 <png_handle_PLTE>
    ec9b:	jmpq   ea41 <png_read_info+0x61>
    eca0:	mov    %r15d,0x248(%rbx)
    eca7:	mov    -0x18(%rbp),%r13
    ecab:	mov    -0x10(%rbp),%r12
    ecaf:	mov    -0x8(%rbp),%rbx
    ecb3:	mov    -0x28(%rbp),%r15
    ecb7:	mov    -0x20(%rbp),%r14
    ecbb:	leaveq 
    ecbc:	retq   
    ecbd:	mov    %r15,%rdx
    ecc0:	mov    %rbx,%rdi
    ecc3:	mov    %r12,%rsi
    ecc6:	callq  1cfe0 <png_handle_bKGD>
    eccb:	jmpq   ea41 <png_read_info+0x61>
    ecd0:	mov    %r15,%rdx
    ecd3:	mov    %rbx,%rdi
    ecd6:	mov    %r12,%rsi
    ecd9:	callq  1d240 <png_handle_cHRM>
    ecde:	jmpq   ea41 <png_read_info+0x61>
    ece3:	mov    %r15,%rdx
    ece6:	mov    %rbx,%rdi
    ece9:	mov    %r12,%rsi
    ecec:	callq  1d470 <png_handle_eXIf>
    ecf1:	jmpq   ea41 <png_read_info+0x61>
    ecf6:	mov    %r15,%rdx
    ecf9:	mov    %rbx,%rdi
    ecfc:	mov    %r12,%rsi
    ecff:	callq  1d6a0 <png_handle_gAMA>
    ed04:	jmpq   ea41 <png_read_info+0x61>
    ed09:	mov    %r15,%rdx
    ed0c:	mov    %rbx,%rdi
    ed0f:	mov    %r12,%rsi
    ed12:	callq  1d790 <png_handle_hIST>
    ed17:	jmpq   ea41 <png_read_info+0x61>
    ed1c:	mov    %r15,%rdx
    ed1f:	mov    %rbx,%rdi
    ed22:	mov    %r12,%rsi
    ed25:	callq  1e420 <png_handle_oFFs>
    ed2a:	jmpq   ea41 <png_read_info+0x61>
    ed2f:	mov    %r15,%rdx
    ed32:	mov    %rbx,%rdi
    ed35:	mov    %r12,%rsi
    ed38:	callq  1e5e0 <png_handle_pCAL>
    ed3d:	jmpq   ea41 <png_read_info+0x61>
    ed42:	mov    %r15,%rdx
    ed45:	mov    %rbx,%rdi
    ed48:	mov    %r12,%rsi
    ed4b:	callq  1ed10 <png_handle_sCAL>
    ed50:	jmpq   ea41 <png_read_info+0x61>
    ed55:	mov    %r15,%rdx
    ed58:	mov    %rbx,%rdi
    ed5b:	mov    %r12,%rsi
    ed5e:	callq  1e990 <png_handle_pHYs>
    ed63:	jmpq   ea41 <png_read_info+0x61>
    ed68:	mov    %r15,%rdx
    ed6b:	mov    %rbx,%rdi
    ed6e:	mov    %r12,%rsi
    ed71:	callq  1eaf0 <png_handle_sBIT>
    ed76:	jmpq   ea41 <png_read_info+0x61>
    ed7b:	mov    %r15,%rdx
    ed7e:	mov    %rbx,%rdi
    ed81:	mov    %r12,%rsi
    ed84:	callq  1f330 <png_handle_sRGB>
    ed89:	jmpq   ea41 <png_read_info+0x61>
    ed8e:	mov    %r15,%rdx
    ed91:	mov    %rbx,%rdi
    ed94:	mov    %r12,%rsi
    ed97:	callq  1d930 <png_handle_iCCP>
    ed9c:	jmpq   ea41 <png_read_info+0x61>
    eda1:	mov    %r15,%rdx
    eda4:	mov    %rbx,%rdi
    eda7:	mov    %r12,%rsi
    edaa:	callq  1f020 <png_handle_sPLT>
    edaf:	jmpq   ea41 <png_read_info+0x61>
    edb4:	mov    %r15,%rdx
    edb7:	mov    %rbx,%rdi
    edba:	mov    %r12,%rsi
    edbd:	callq  1f470 <png_handle_tEXt>
    edc2:	jmpq   ea41 <png_read_info+0x61>
    edc7:	mov    %r15,%rdx
    edca:	mov    %rbx,%rdi
    edcd:	mov    %r12,%rsi
    edd0:	callq  1f610 <png_handle_tIME>
    edd5:	jmpq   ea41 <png_read_info+0x61>
    edda:	mov    %r15,%rdx
    eddd:	mov    %rbx,%rdi
    ede0:	mov    %r12,%rsi
    ede3:	callq  1f740 <png_handle_tRNS>
    ede8:	jmpq   ea41 <png_read_info+0x61>
    eded:	mov    %r15,%rdx
    edf0:	mov    %rbx,%rdi
    edf3:	mov    %r12,%rsi
    edf6:	callq  1fa50 <png_handle_zTXt>
    edfb:	jmpq   ea41 <png_read_info+0x61>
    ee00:	mov    %r15,%rdx
    ee03:	mov    %rbx,%rdi
    ee06:	mov    %r12,%rsi
    ee09:	callq  1e090 <png_handle_iTXt>
    ee0e:	jmpq   ea41 <png_read_info+0x61>
    ee13:	mov    0x12c(%rbx),%eax
    ee19:	or     $0x2,%eax
    ee1c:	mov    %eax,0x12c(%rbx)
    ee22:	jmpq   ea41 <png_read_info+0x61>
    ee27:	nopw   0x0(%rax,%rax,1)

000000000000ee30 <png_start_read_image>:
    ee30:	push   %rbp
    ee31:	mov    %rsp,%rbp
    ee34:	test   %rdi,%rdi
    ee37:	jne    ee3b <png_start_read_image+0xb>
    ee39:	leaveq 
    ee3a:	retq   
    ee3b:	mov    0x130(%rdi),%eax
    ee41:	and    $0x40,%eax
    ee44:	test   %eax,%eax
    ee46:	je     ee56 <png_start_read_image+0x26>
    ee48:	lea    0x1eb54(%rip),%rsi        # 2d9a3 <png_pass_yinc.24+0xac>
    ee4f:	callq  b120 <png_app_error>
    ee54:	leaveq 
    ee55:	retq   
    ee56:	callq  1c5d0 <png_read_start_row>
    ee5b:	leaveq 
    ee5c:	retq   
    ee5d:	nopl   (%rax)

000000000000ee60 <png_read_update_info>:
    ee60:	push   %rbp
    ee61:	mov    %rsp,%rbp
    ee64:	sub    $0x10,%rsp
    ee68:	test   %rdi,%rdi
    ee6b:	jne    ee6f <png_read_update_info+0xf>
    ee6d:	leaveq 
    ee6e:	retq   
    ee6f:	mov    0x130(%rdi),%eax
    ee75:	and    $0x40,%eax
    ee78:	test   %eax,%eax
    ee7a:	je     ee8a <png_read_update_info+0x2a>
    ee7c:	lea    0x1eb5a(%rip),%rsi        # 2d9dd <png_pass_yinc.24+0xe6>
    ee83:	callq  b120 <png_app_error>
    ee88:	leaveq 
    ee89:	retq   
    ee8a:	mov    %rdi,%rax
    ee8d:	mov    %r14,-0x8(%rbp)
    ee91:	mov    %r15,-0x10(%rbp)
    ee95:	mov    %rdi,%r14
    ee98:	mov    %rax,%rdi
    ee9b:	mov    %rsi,%r15
    ee9e:	callq  1c5d0 <png_read_start_row>
    eea3:	mov    %r15,%rsi
    eea6:	mov    %r14,%rdi
    eea9:	callq  15d20 <png_read_transform_info>
    eeae:	mov    -0x10(%rbp),%r15
    eeb2:	mov    -0x8(%rbp),%r14
    eeb6:	leaveq 
    eeb7:	retq   
    eeb8:	nopl   0x0(%rax,%rax,1)

000000000000eec0 <png_read_rows>:
    eec0:	push   %rbp
    eec1:	mov    %rsp,%rbp
    eec4:	sub    $0x50,%rsp
    eec8:	test   %rdi,%rdi
    eecb:	jne    eecf <png_read_rows+0xf>
    eecd:	leaveq 
    eece:	retq   
    eecf:	xor    %r8d,%r8d
    eed2:	test   %rsi,%rsi
    eed5:	jne    ef04 <png_read_rows+0x44>
    eed7:	mov    %r8,%rax
    eeda:	test   %rax,%rax
    eedd:	je     ef35 <png_read_rows+0x75>
    eedf:	mov    %rbx,-0x28(%rbp)
    eee3:	mov    %r12,-0x30(%rbp)
    eee7:	mov    %r13,-0x38(%rbp)
    eeeb:	mov    %r14,-0x40(%rbp)
    eeef:	mov    %r15,-0x48(%rbp)
    eef3:	mov    %rdi,%r12
    eef6:	mov    %rcx,%r13
    eef9:	mov    %rsi,%r14
    eefc:	mov    %r8,%r15
    eeff:	mov    %r15,%rbx
    ef02:	jmp    ef7c <png_read_rows+0xbc>
    ef04:	test   %rdx,%rdx
    ef07:	je     ef97 <png_read_rows+0xd7>
    ef0d:	mov    %rbx,-0x8(%rbp)
    ef11:	mov    %r12,-0x10(%rbp)
    ef15:	mov    %r13,-0x18(%rbp)
    ef19:	mov    %r14,-0x20(%rbp)
    ef1d:	mov    %r15,-0x48(%rbp)
    ef21:	mov    %rdx,%rbx
    ef24:	mov    %r8,%r12
    ef27:	mov    %rdi,%r13
    ef2a:	mov    %rcx,%r14
    ef2d:	mov    %rsi,%r15
    ef30:	jmpq   efbb <png_read_rows+0xfb>
    ef35:	test   %rdx,%rdx
    ef38:	je     efd6 <png_read_rows+0x116>
    ef3e:	mov    %rbx,-0x28(%rbp)
    ef42:	mov    %r12,-0x30(%rbp)
    ef46:	mov    %r13,-0x38(%rbp)
    ef4a:	mov    %r14,-0x40(%rbp)
    ef4e:	mov    %r15,-0x48(%rbp)
    ef52:	mov    %rdx,%rbx
    ef55:	mov    %rdi,%r13
    ef58:	mov    %rcx,%r14
    ef5b:	mov    %r8,%r15
    ef5e:	mov    %r15,%r12
    ef61:	jmpq   efee <png_read_rows+0x12e>
    ef66:	mov    (%r14),%rsi
    ef69:	mov    %r12,%rdi
    ef6c:	mov    %rbx,%rdx
    ef6f:	callq  5600 <png_read_row@plt>
    ef74:	add    $0x1,%r15d
    ef78:	add    $0x8,%r14
    ef7c:	cmp    %r15d,%r13d
    ef7f:	ja     ef66 <png_read_rows+0xa6>
    ef81:	mov    -0x48(%rbp),%r15
    ef85:	mov    -0x40(%rbp),%r14
    ef89:	mov    -0x38(%rbp),%r13
    ef8d:	mov    -0x30(%rbp),%r12
    ef91:	mov    -0x28(%rbp),%rbx
    ef95:	leaveq 
    ef96:	retq   
    ef97:	mov    $0x1,%eax
    ef9c:	jmpq   eeda <png_read_rows+0x1a>
    efa1:	mov    (%r15),%rsi
    efa4:	mov    (%rbx),%rdx
    efa7:	mov    %r13,%rdi
    efaa:	callq  5600 <png_read_row@plt>
    efaf:	add    $0x1,%r12d
    efb3:	add    $0x8,%r15
    efb7:	add    $0x8,%rbx
    efbb:	cmp    %r14d,%r12d
    efbe:	jb     efa1 <png_read_rows+0xe1>
    efc0:	mov    -0x48(%rbp),%r15
    efc4:	mov    -0x20(%rbp),%r14
    efc8:	mov    -0x18(%rbp),%r13
    efcc:	mov    -0x10(%rbp),%r12
    efd0:	mov    -0x8(%rbp),%rbx
    efd4:	leaveq 
    efd5:	retq   
    efd6:	leaveq 
    efd7:	retq   
    efd8:	mov    (%rbx),%rdx
    efdb:	mov    %r13,%rdi
    efde:	mov    %r12,%rsi
    efe1:	callq  5600 <png_read_row@plt>
    efe6:	add    $0x1,%r15d
    efea:	add    $0x8,%rbx
    efee:	cmp    %r15d,%r14d
    eff1:	ja     efd8 <png_read_rows+0x118>
    eff3:	mov    -0x48(%rbp),%r15
    eff7:	mov    -0x40(%rbp),%r14
    effb:	mov    -0x38(%rbp),%r13
    efff:	mov    -0x30(%rbp),%r12
    f003:	mov    -0x28(%rbp),%rbx
    f007:	leaveq 
    f008:	retq   
    f009:	nopl   0x0(%rax)

000000000000f010 <png_read_row>:
    f010:	push   %rbp
    f011:	mov    %rsp,%rbp
    f014:	sub    $0x30,%rsp
    f018:	test   %rdi,%rdi
    f01b:	jne    f01f <png_read_row+0xf>
    f01d:	leaveq 
    f01e:	retq   
    f01f:	mov    0x130(%rdi),%eax
    f025:	and    $0x40,%eax
    f028:	test   %eax,%eax
    f02a:	je     f040 <png_read_row+0x30>
    f02c:	mov    %r15,%rcx
    f02f:	mov    %rsi,%r15
    f032:	mov    %r13,%r8
    f035:	mov    %rdi,%r13
    f038:	mov    %r14,%r9
    f03b:	mov    %rdx,%r14
    f03e:	jmp    f06f <png_read_row+0x5f>
    f040:	mov    %rdi,%rax
    f043:	mov    %r15,-0x8(%rbp)
    f047:	mov    %rdx,-0x10(%rbp)
    f04b:	mov    %rsi,-0x18(%rbp)
    f04f:	mov    %r13,%r15
    f052:	mov    %rdi,%r13
    f055:	mov    %rax,%rdi
    f058:	callq  1c5d0 <png_read_start_row>
    f05d:	mov    %r15,%r8
    f060:	mov    %r14,%r9
    f063:	mov    -0x18(%rbp),%r15
    f067:	mov    -0x10(%rbp),%r14
    f06b:	mov    -0x8(%rbp),%rcx
    f06f:	mov    0x210(%r13),%esi
    f076:	mov    %esi,-0x30(%rbp)
    f079:	movzbl 0x267(%r13),%eax
    f081:	mov    %al,-0x20(%rbp)
    f084:	movzbl 0x268(%r13),%eax
    f08c:	mov    %al,-0x1f(%rbp)
    f08f:	movzbl 0x26b(%r13),%eax
    f097:	mov    %al,-0x1e(%rbp)
    f09a:	movzbl 0x26a(%r13),%edx
    f0a2:	cmp    $0x7,%dl
    f0a5:	ja     f0b8 <png_read_row+0xa8>
    f0a7:	mov    %rdx,%rax
    f0aa:	imul   %rsi,%rax
    f0ae:	add    $0x7,%rax
    f0b2:	shr    $0x3,%rax
    f0b6:	jmp    f0c3 <png_read_row+0xb3>
    f0b8:	mov    %rdx,%rax
    f0bb:	shr    $0x3,%rax
    f0bf:	imul   %rsi,%rax
    f0c3:	mov    %dl,-0x1d(%rbp)
    f0c6:	mov    %rax,-0x28(%rbp)
    f0ca:	mov    $0x1,%edx
    f0cf:	movzbl 0x264(%r13),%eax
    f0d7:	test   %al,%al
    f0d9:	jne    f1c1 <png_read_row+0x1b1>
    f0df:	mov    0x12c(%r13),%eax
    f0e6:	and    $0x4,%eax
    f0e9:	test   %eax,%eax
    f0eb:	je     f248 <png_read_row+0x238>
    f0f1:	mov    0x228(%r13),%rax
    f0f8:	movb   $0xff,(%rax)
    f0fb:	mov    0x228(%r13),%rsi
    f102:	mov    -0x28(%rbp),%rdx
    f106:	add    $0x1,%rdx
    f10a:	mov    %r13,%rdi
    f10d:	mov    %rcx,-0x18(%rbp)
    f111:	mov    %r8,-0x8(%rbp)
    f115:	mov    %r9,-0x10(%rbp)
    f119:	callq  1c100 <png_read_IDAT_data>
    f11e:	lea    -0x30(%rbp),%rsi
    f122:	mov    0x228(%r13),%rax
    f129:	movzbl (%rax),%r8d
    f12d:	test   %r8b,%r8b
    f130:	jne    f257 <png_read_row+0x247>
    f136:	mov    0x220(%r13),%rdi
    f13d:	mov    0x228(%r13),%rsi
    f144:	mov    -0x28(%rbp),%rdx
    f148:	add    $0x1,%rdx
    f14c:	callq  54c0 <memcpy@plt>
    f151:	mov    0x3d8(%r13),%eax
    f158:	and    $0x4,%eax
    f15b:	test   %eax,%eax
    f15d:	je     f17f <png_read_row+0x16f>
    f15f:	movzbl 0x3dc(%r13),%eax
    f167:	cmp    $0x40,%al
    f169:	jne    f17f <png_read_row+0x16f>
    f16b:	mov    0x228(%r13),%rsi
    f172:	add    $0x1,%rsi
    f176:	lea    -0x30(%rbp),%rdi
    f17a:	callq  102f0 <png_do_read_intrapixel>
    f17f:	mov    0x134(%r13),%eax
    f186:	test   %eax,%eax
    f188:	je     f196 <png_read_row+0x186>
    f18a:	mov    %r13,%rdi
    f18d:	lea    -0x30(%rbp),%rsi
    f191:	callq  16040 <png_do_read_transformations>
    f196:	movzbl 0x26f(%r13),%ecx
    f19e:	test   %cl,%cl
    f1a0:	je     f270 <png_read_row+0x260>
    f1a6:	movzbl -0x1d(%rbp),%eax
    f1aa:	cmp    %al,%cl
    f1ac:	je     f29a <png_read_row+0x28a>
    f1b2:	mov    %r13,%rdi
    f1b5:	lea    0x1e8ae(%rip),%rsi        # 2da6a <png_pass_yinc.24+0x173>
    f1bc:	callq  5470 <png_error@plt>
    f1c1:	mov    0x134(%r13),%eax
    f1c8:	and    $0x2,%eax
    f1cb:	test   %eax,%eax
    f1cd:	je     f0df <png_read_row+0xcf>
    f1d3:	movzbl 0x265(%r13),%eax
    f1db:	cmp    $0x5,%al
    f1dd:	ja     f310 <png_read_row+0x300>
    f1e3:	lea    0x1e716(%rip),%rsi        # 2d900 <png_pass_yinc.24+0x9>
    f1ea:	movslq (%rsi,%rax,4),%rax
    f1ee:	add    %rsi,%rax
    f1f1:	jmpq   *%rax
    f1f3:	mov    0x214(%r13),%eax
    f1fa:	and    $0x1,%eax
    f1fd:	test   %eax,%eax
    f1ff:	jne    f211 <png_read_row+0x201>
    f201:	mov    0x1f8(%r13),%eax
    f208:	cmp    $0x1,%eax
    f20b:	ja     f0df <png_read_row+0xcf>
    f211:	test   %r14,%r14
    f214:	je     f235 <png_read_row+0x225>
    f216:	mov    %r13,%rdi
    f219:	mov    %rcx,-0x18(%rbp)
    f21d:	mov    %r14,%rsi
    f220:	mov    %r8,%r14
    f223:	mov    %r9,%r15
    f226:	callq  1b440 <png_combine_row>
    f22b:	mov    %r14,%r8
    f22e:	mov    %r15,%r9
    f231:	mov    -0x18(%rbp),%rcx
    f235:	mov    %r13,%rdi
    f238:	mov    %r8,%r13
    f23b:	mov    %r9,%r14
    f23e:	mov    %rcx,%r15
    f241:	callq  1c4b0 <png_read_finish_row>
    f246:	leaveq 
    f247:	retq   
    f248:	mov    %r13,%rdi
    f24b:	lea    0x1e7c5(%rip),%rsi        # 2da17 <png_pass_yinc.24+0x120>
    f252:	callq  5470 <png_error@plt>
    f257:	cmp    $0x4,%r8b
    f25b:	jbe    f4d0 <png_read_row+0x4c0>
    f261:	mov    %r13,%rdi
    f264:	lea    0x1e7cd(%rip),%rsi        # 2da38 <png_pass_yinc.24+0x141>
    f26b:	callq  5470 <png_error@plt>
    f270:	movzbl -0x1d(%rbp),%eax
    f274:	mov    %al,0x26f(%r13)
    f27b:	movzbl 0x26e(%r13),%ecx
    f283:	movzbl -0x1d(%rbp),%eax
    f287:	cmp    %al,%cl
    f289:	jae    f29a <png_read_row+0x28a>
    f28b:	mov    %r13,%rdi
    f28e:	lea    0x1e7bd(%rip),%rsi        # 2da52 <png_pass_yinc.24+0x15b>
    f295:	callq  5470 <png_error@plt>
    f29a:	movzbl 0x264(%r13),%eax
    f2a2:	test   %al,%al
    f2a4:	je     f4ec <png_read_row+0x4dc>
    f2aa:	mov    0x134(%r13),%ecx
    f2b1:	mov    %rcx,%rax
    f2b4:	and    $0x2,%eax
    f2b7:	test   %eax,%eax
    f2b9:	je     f4ec <png_read_row+0x4dc>
    f2bf:	movzbl 0x265(%r13),%edx
    f2c7:	cmp    $0x5,%dl
    f2ca:	ja     f2e0 <png_read_row+0x2d0>
    f2cc:	mov    0x228(%r13),%rsi
    f2d3:	add    $0x1,%rsi
    f2d7:	lea    -0x30(%rbp),%rdi
    f2db:	callq  1bb30 <png_do_read_interlace>
    f2e0:	test   %r14,%r14
    f2e3:	je     f2f5 <png_read_row+0x2e5>
    f2e5:	mov    %r14,%rsi
    f2e8:	mov    %r13,%rdi
    f2eb:	mov    $0x1,%edx
    f2f0:	callq  1b440 <png_combine_row>
    f2f5:	test   %r15,%r15
    f2f8:	je     f519 <png_read_row+0x509>
    f2fe:	mov    %r15,%rsi
    f301:	xor    %edx,%edx
    f303:	mov    %r13,%rdi
    f306:	callq  1b440 <png_combine_row>
    f30b:	jmpq   f519 <png_read_row+0x509>
    f310:	mov    0x214(%r13),%eax
    f317:	and    $0x1,%eax
    f31a:	test   %eax,%eax
    f31c:	jne    f0df <png_read_row+0xcf>
    f322:	mov    %r13,%rdi
    f325:	mov    %r8,%r13
    f328:	mov    %r9,%r14
    f32b:	mov    %rcx,%r15
    f32e:	callq  1c4b0 <png_read_finish_row>
    f333:	leaveq 
    f334:	retq   
    f335:	mov    0x214(%r13),%eax
    f33c:	and    $0x7,%eax
    f33f:	test   %eax,%eax
    f341:	je     f0df <png_read_row+0xcf>
    f347:	test   %r14,%r14
    f34a:	je     f36b <png_read_row+0x35b>
    f34c:	mov    %r13,%rdi
    f34f:	mov    %rcx,-0x18(%rbp)
    f353:	mov    %r14,%rsi
    f356:	mov    %r9,%r14
    f359:	mov    %r8,%r15
    f35c:	callq  1b440 <png_combine_row>
    f361:	mov    %r15,%r8
    f364:	mov    %r14,%r9
    f367:	mov    -0x18(%rbp),%rcx
    f36b:	mov    %r13,%rdi
    f36e:	mov    %r8,%r13
    f371:	mov    %r9,%r14
    f374:	mov    %rcx,%r15
    f377:	callq  1c4b0 <png_read_finish_row>
    f37c:	leaveq 
    f37d:	retq   
    f37e:	mov    0x214(%r13),%eax
    f385:	and    $0x7,%eax
    f388:	test   %eax,%eax
    f38a:	jne    f39c <png_read_row+0x38c>
    f38c:	mov    0x1f8(%r13),%eax
    f393:	cmp    $0x4,%eax
    f396:	ja     f0df <png_read_row+0xcf>
    f39c:	test   %r14,%r14
    f39f:	je     f3c0 <png_read_row+0x3b0>
    f3a1:	mov    %r13,%rdi
    f3a4:	mov    %rcx,-0x18(%rbp)
    f3a8:	mov    %r14,%rsi
    f3ab:	mov    %r9,%r14
    f3ae:	mov    %r8,%r15
    f3b1:	callq  1b440 <png_combine_row>
    f3b6:	mov    %r15,%r8
    f3b9:	mov    %r14,%r9
    f3bc:	mov    -0x18(%rbp),%rcx
    f3c0:	mov    %r13,%rdi
    f3c3:	mov    %r8,%r13
    f3c6:	mov    %r9,%r14
    f3c9:	mov    %rcx,%r15
    f3cc:	callq  1c4b0 <png_read_finish_row>
    f3d1:	leaveq 
    f3d2:	retq   
    f3d3:	mov    0x214(%r13),%eax
    f3da:	mov    %rax,%rsi
    f3dd:	and    $0x7,%esi
    f3e0:	cmp    $0x4,%esi
    f3e3:	je     f0df <png_read_row+0xcf>
    f3e9:	test   %r14,%r14
    f3ec:	je     f414 <png_read_row+0x404>
    f3ee:	and    $0x4,%eax
    f3f1:	test   %eax,%eax
    f3f3:	je     f414 <png_read_row+0x404>
    f3f5:	mov    %r13,%rdi
    f3f8:	mov    %rcx,-0x18(%rbp)
    f3fc:	mov    %r14,%rsi
    f3ff:	mov    %r8,%r14
    f402:	mov    %r9,%r15
    f405:	callq  1b440 <png_combine_row>
    f40a:	mov    %r14,%r8
    f40d:	mov    %r15,%r9
    f410:	mov    -0x18(%rbp),%rcx
    f414:	mov    %r13,%rdi
    f417:	mov    %r8,%r13
    f41a:	mov    %r9,%r14
    f41d:	mov    %rcx,%r15
    f420:	callq  1c4b0 <png_read_finish_row>
    f425:	leaveq 
    f426:	retq   
    f427:	mov    0x214(%r13),%eax
    f42e:	and    $0x3,%eax
    f431:	test   %eax,%eax
    f433:	jne    f445 <png_read_row+0x435>
    f435:	mov    0x1f8(%r13),%eax
    f43c:	cmp    $0x2,%eax
    f43f:	ja     f0df <png_read_row+0xcf>
    f445:	test   %r14,%r14
    f448:	je     f469 <png_read_row+0x459>
    f44a:	mov    %r13,%rdi
    f44d:	mov    %rcx,-0x18(%rbp)
    f451:	mov    %r14,%rsi
    f454:	mov    %r9,%r14
    f457:	mov    %r8,%r15
    f45a:	callq  1b440 <png_combine_row>
    f45f:	mov    %r15,%r8
    f462:	mov    %r14,%r9
    f465:	mov    -0x18(%rbp),%rcx
    f469:	mov    %r13,%rdi
    f46c:	mov    %r8,%r13
    f46f:	mov    %r9,%r14
    f472:	mov    %rcx,%r15
    f475:	callq  1c4b0 <png_read_finish_row>
    f47a:	leaveq 
    f47b:	retq   
    f47c:	mov    0x214(%r13),%eax
    f483:	mov    %rax,%rsi
    f486:	and    $0x3,%esi
    f489:	cmp    $0x2,%esi
    f48c:	je     f0df <png_read_row+0xcf>
    f492:	test   %r14,%r14
    f495:	je     f4bd <png_read_row+0x4ad>
    f497:	and    $0x2,%eax
    f49a:	test   %eax,%eax
    f49c:	je     f4bd <png_read_row+0x4ad>
    f49e:	mov    %r13,%rdi
    f4a1:	mov    %rcx,-0x18(%rbp)
    f4a5:	mov    %r14,%rsi
    f4a8:	mov    %r8,%r14
    f4ab:	mov    %r9,%r15
    f4ae:	callq  1b440 <png_combine_row>
    f4b3:	mov    %r14,%r8
    f4b6:	mov    %r15,%r9
    f4b9:	mov    -0x18(%rbp),%rcx
    f4bd:	mov    %r13,%rdi
    f4c0:	mov    %r8,%r13
    f4c3:	mov    %r9,%r14
    f4c6:	mov    %rcx,%r15
    f4c9:	callq  1c4b0 <png_read_finish_row>
    f4ce:	leaveq 
    f4cf:	retq   
    f4d0:	lea    0x1(%rax),%rdx
    f4d4:	mov    0x220(%r13),%rcx
    f4db:	add    $0x1,%rcx
    f4df:	mov    %r13,%rdi
    f4e2:	callq  1c060 <png_read_filter_row>
    f4e7:	jmpq   f136 <png_read_row+0x126>
    f4ec:	mov    $0xffffffffffffffff,%rdx
    f4f3:	test   %r15,%r15
    f4f6:	je     f509 <png_read_row+0x4f9>
    f4f8:	mov    %r15,%rsi
    f4fb:	mov    %r13,%rdi
    f4fe:	mov    %rdx,%r15
    f501:	callq  1b440 <png_combine_row>
    f506:	mov    %r15,%rdx
    f509:	test   %r14,%r14
    f50c:	je     f519 <png_read_row+0x509>
    f50e:	mov    %r14,%rsi
    f511:	mov    %r13,%rdi
    f514:	callq  1b440 <png_combine_row>
    f519:	mov    %r13,%rdi
    f51c:	callq  1c4b0 <png_read_finish_row>
    f521:	mov    0x300(%r13),%rax
    f528:	test   %rax,%rax
    f52b:	jne    f53b <png_read_row+0x52b>
    f52d:	mov    -0x10(%rbp),%r14
    f531:	mov    -0x8(%rbp),%r13
    f535:	mov    -0x18(%rbp),%r15
    f539:	leaveq 
    f53a:	retq   
    f53b:	mov    %r13,%rdi
    f53e:	mov    0x214(%rdi),%esi
    f544:	movzbl 0x265(%rdi),%edx
    f54b:	callq  *%rax
    f54d:	mov    -0x10(%rbp),%r14
    f551:	mov    -0x8(%rbp),%r13
    f555:	mov    -0x18(%rbp),%r15
    f559:	leaveq 
    f55a:	retq   
    f55b:	nopl   0x0(%rax,%rax,1)

000000000000f560 <png_read_image>:
    f560:	push   %rbp
    f561:	mov    %rsp,%rbp
    f564:	sub    $0x40,%rsp
    f568:	mov    %rsi,-0x8(%rbp)
    f56c:	test   %rdi,%rdi
    f56f:	jne    f573 <png_read_image+0x13>
    f571:	leaveq 
    f572:	retq   
    f573:	mov    0x130(%rdi),%eax
    f579:	and    $0x40,%eax
    f57c:	test   %eax,%eax
    f57e:	je     f5bc <png_read_image+0x5c>
    f580:	movzbl 0x264(%rdi),%eax
    f587:	test   %al,%al
    f589:	jne    f617 <png_read_image+0xb7>
    f58f:	mov    %r14,%rax
    f592:	mov    %r12,%r14
    f595:	mov    %rdi,%r12
    f598:	mov    %r15,%rcx
    f59b:	mov    %r13,%r15
    f59e:	mov    %rbx,%r13
    f5a1:	mov    %rsi,%rbx
    f5a4:	mov    %r12,%rdi
    f5a7:	mov    %rax,-0x28(%rbp)
    f5ab:	mov    %rcx,-0x30(%rbp)
    f5af:	callq  53f0 <png_set_interlace_handling@plt>
    f5b4:	mov    %r15,%rcx
    f5b7:	mov    %r14,%rdx
    f5ba:	jmp    f5f7 <png_read_image+0x97>
    f5bc:	mov    %rdi,%rax
    f5bf:	mov    %r14,-0x28(%rbp)
    f5c3:	mov    %r15,-0x30(%rbp)
    f5c7:	mov    %r12,%r14
    f5ca:	mov    %rdi,%r12
    f5cd:	mov    %rax,%rdi
    f5d0:	mov    %r13,%r15
    f5d3:	mov    %rbx,%r13
    f5d6:	mov    %rsi,%rbx
    f5d9:	callq  53f0 <png_set_interlace_handling@plt>
    f5de:	mov    %r12,%rdi
    f5e1:	mov    %r15,-0x40(%rbp)
    f5e5:	mov    %rax,%r15
    f5e8:	callq  5370 <png_start_read_image@plt>
    f5ed:	mov    %r15,%rax
    f5f0:	mov    %r14,%rdx
    f5f3:	mov    -0x40(%rbp),%rcx
    f5f7:	mov    %rax,-0x38(%rbp)
    f5fb:	mov    0x1fc(%r12),%r15d
    f603:	xor    %r14d,%r14d
    f606:	mov    %rcx,-0x20(%rbp)
    f60a:	mov    %r13,-0x10(%rbp)
    f60e:	mov    %rdx,-0x18(%rbp)
    f612:	mov    %r14,%rcx
    f615:	jmp    f668 <png_read_image+0x108>
    f617:	mov    0x134(%rdi),%eax
    f61d:	and    $0x2,%eax
    f620:	test   %eax,%eax
    f622:	je     f682 <png_read_image+0x122>
    f624:	mov    %r14,%rax
    f627:	mov    %r12,%r14
    f62a:	mov    %rdi,%r12
    f62d:	mov    %r15,%rcx
    f630:	mov    %r13,%r15
    f633:	mov    %rbx,%r13
    f636:	mov    %rsi,%rbx
    f639:	jmpq   f5a4 <png_read_image+0x44>
    f63e:	mov    (%rbx),%rsi
    f641:	mov    %r12,%rdi
    f644:	mov    %r14,%rdx
    f647:	callq  5600 <png_read_row@plt>
    f64c:	add    $0x8,%rbx
    f650:	add    $0x1,%r13d
    f654:	cmp    %r15d,%r13d
    f657:	jb     f63e <png_read_image+0xde>
    f659:	mov    -0x40(%rbp),%rax
    f65d:	lea    0x1(%rax),%ecx
    f660:	mov    -0x8(%rbp),%rbx
    f664:	mov    -0x38(%rbp),%rax
    f668:	cmp    %ecx,%eax
    f66a:	jg     f6cb <png_read_image+0x16b>
    f66c:	mov    -0x18(%rbp),%r12
    f670:	mov    -0x10(%rbp),%rbx
    f674:	mov    -0x20(%rbp),%r13
    f678:	mov    -0x30(%rbp),%r15
    f67c:	mov    -0x28(%rbp),%r14
    f680:	leaveq 
    f681:	retq   
    f682:	lea    0x1e410(%rip),%rax        # 2da99 <png_pass_yinc.24+0x1a2>
    f689:	mov    %rdi,%rcx
    f68c:	mov    %r14,-0x38(%rbp)
    f690:	mov    %r15,-0x40(%rbp)
    f694:	mov    %r12,%r14
    f697:	mov    %rdi,%r12
    f69a:	mov    %rcx,%rdi
    f69d:	mov    %r13,%r15
    f6a0:	mov    %rbx,%r13
    f6a3:	mov    %rsi,%rbx
    f6a6:	mov    %rax,%rsi
    f6a9:	callq  5390 <png_warning@plt>
    f6ae:	mov    0x1fc(%r12),%eax
    f6b6:	mov    %eax,0x200(%r12)
    f6be:	mov    -0x40(%rbp),%rcx
    f6c2:	mov    -0x38(%rbp),%rax
    f6c6:	jmpq   f5a4 <png_read_image+0x44>
    f6cb:	mov    %rcx,-0x40(%rbp)
    f6cf:	mov    %r14,%r13
    f6d2:	jmp    f654 <png_read_image+0xf4>
    f6d4:	data16 nopw %cs:0x0(%rax,%rax,1)
    f6df:	nop

000000000000f6e0 <png_read_end>:
    f6e0:	push   %rbp
    f6e1:	mov    %rsp,%rbp
    f6e4:	sub    $0x30,%rsp
    f6e8:	test   %rdi,%rdi
    f6eb:	jne    f6ef <png_read_end+0xf>
    f6ed:	leaveq 
    f6ee:	retq   
    f6ef:	mov    $0x49444154,%ecx
    f6f4:	mov    %rdi,%rax
    f6f7:	mov    %r14,-0x20(%rbp)
    f6fb:	mov    %r15,-0x28(%rbp)
    f6ff:	mov    %r13,%r14
    f702:	mov    %rbx,%r13
    f705:	mov    %rdi,%rbx
    f708:	mov    %rax,%rdi
    f70b:	mov    %r12,%r15
    f70e:	mov    %rsi,%r12
    f711:	mov    %rcx,%rsi
    f714:	callq  6e90 <png_chunk_unknown_handling>
    f719:	test   %eax,%eax
    f71b:	je     f722 <png_read_end+0x42>
    f71d:	mov    %r14,%rcx
    f720:	jmp    f72d <png_read_end+0x4d>
    f722:	mov    %rbx,%rdi
    f725:	callq  1c3f0 <png_read_finish_IDAT>
    f72a:	mov    %r14,%rcx
    f72d:	lea    0x1e3cf(%rip),%r14        # 2db03 <png_pass_yinc.24+0x20c>
    f734:	movzbl 0x267(%rbx),%eax
    f73b:	cmp    $0x3,%al
    f73d:	je     f8c8 <png_read_end+0x1e8>
    f743:	mov    %r13,-0x8(%rbp)
    f747:	mov    %r15,-0x10(%rbp)
    f74b:	mov    %rcx,-0x18(%rbp)
    f74f:	mov    %rbx,%rdi
    f752:	callq  1b170 <png_read_chunk_header>
    f757:	mov    0x218(%rbx),%r15d
    f75e:	cmp    $0x49444154,%r15d
    f765:	je     f779 <png_read_end+0x99>
    f767:	mov    0x12c(%rbx),%ecx
    f76d:	or     $0x2000,%ecx
    f773:	mov    %ecx,0x12c(%rbx)
    f779:	cmp    $0x49454e44,%r15d
    f780:	je     f8ec <png_read_end+0x20c>
    f786:	cmp    $0x49484452,%r15d
    f78d:	je     f921 <png_read_end+0x241>
    f793:	test   %r12,%r12
    f796:	je     f931 <png_read_end+0x251>
    f79c:	mov    %rax,%r13
    f79f:	mov    %rbx,%rdi
    f7a2:	mov    %r15,%rsi
    f7a5:	callq  6e90 <png_chunk_unknown_handling>
    f7aa:	test   %eax,%eax
    f7ac:	jne    f93e <png_read_end+0x25e>
    f7b2:	cmp    $0x49444154,%r15d
    f7b9:	je     f976 <png_read_end+0x296>
    f7bf:	cmp    $0x504c5445,%r15d
    f7c6:	je     f9b6 <png_read_end+0x2d6>
    f7cc:	cmp    $0x624b4744,%r15d
    f7d3:	je     f9c9 <png_read_end+0x2e9>
    f7d9:	cmp    $0x6348524d,%r15d
    f7e0:	je     f9dc <png_read_end+0x2fc>
    f7e6:	cmp    $0x65584966,%r15d
    f7ed:	je     f9ef <png_read_end+0x30f>
    f7f3:	cmp    $0x67414d41,%r15d
    f7fa:	je     fa02 <png_read_end+0x322>
    f800:	cmp    $0x68495354,%r15d
    f807:	je     fa15 <png_read_end+0x335>
    f80d:	cmp    $0x6f464673,%r15d
    f814:	je     fa28 <png_read_end+0x348>
    f81a:	cmp    $0x7043414c,%r15d
    f821:	je     fa3b <png_read_end+0x35b>
    f827:	cmp    $0x7343414c,%r15d
    f82e:	je     fa4e <png_read_end+0x36e>
    f834:	cmp    $0x70485973,%r15d
    f83b:	je     fa61 <png_read_end+0x381>
    f841:	cmp    $0x73424954,%r15d
    f848:	je     fa74 <png_read_end+0x394>
    f84e:	cmp    $0x73524742,%r15d
    f855:	je     fa87 <png_read_end+0x3a7>
    f85b:	cmp    $0x69434350,%r15d
    f862:	je     fa9a <png_read_end+0x3ba>
    f868:	cmp    $0x73504c54,%r15d
    f86f:	je     faad <png_read_end+0x3cd>
    f875:	cmp    $0x74455874,%r15d
    f87c:	je     fac0 <png_read_end+0x3e0>
    f882:	cmp    $0x74494d45,%r15d
    f889:	je     fad3 <png_read_end+0x3f3>
    f88f:	cmp    $0x74524e53,%r15d
    f896:	je     fae6 <png_read_end+0x406>
    f89c:	cmp    $0x7a545874,%r15d
    f8a3:	je     faf9 <png_read_end+0x419>
    f8a9:	cmp    $0x69545874,%r15d
    f8b0:	je     fb0c <png_read_end+0x42c>
    f8b6:	mov    %r13,%rdx
    f8b9:	mov    %rbx,%rdi
    f8bc:	mov    %r12,%rsi
    f8bf:	xor    %ecx,%ecx
    f8c1:	callq  1fe10 <png_handle_unknown>
    f8c6:	jmp    f8fa <png_read_end+0x21a>
    f8c8:	movzwl 0x258(%rbx),%eax
    f8cf:	cmp    0x25c(%rbx),%eax
    f8d5:	jl     fb1f <png_read_end+0x43f>
    f8db:	mov    %r13,-0x8(%rbp)
    f8df:	mov    %r15,-0x10(%rbp)
    f8e3:	mov    %rcx,-0x18(%rbp)
    f8e7:	jmpq   f74f <png_read_end+0x6f>
    f8ec:	mov    %rax,%rdx
    f8ef:	mov    %rbx,%rdi
    f8f2:	mov    %r12,%rsi
    f8f5:	callq  1cf60 <png_handle_IEND>
    f8fa:	mov    0x12c(%rbx),%eax
    f900:	and    $0x10,%eax
    f903:	test   %eax,%eax
    f905:	je     f74f <png_read_end+0x6f>
    f90b:	mov    -0x18(%rbp),%r13
    f90f:	mov    -0x10(%rbp),%r12
    f913:	mov    -0x8(%rbp),%rbx
    f917:	mov    -0x28(%rbp),%r15
    f91b:	mov    -0x20(%rbp),%r14
    f91f:	leaveq 
    f920:	retq   
    f921:	mov    %rax,%rdx
    f924:	mov    %rbx,%rdi
    f927:	mov    %r12,%rsi
    f92a:	callq  1caf0 <png_handle_IHDR>
    f92f:	jmp    f8fa <png_read_end+0x21a>
    f931:	mov    %rax,%rsi
    f934:	mov    %rbx,%rdi
    f937:	callq  1b280 <png_crc_finish>
    f93c:	jmp    f8fa <png_read_end+0x21a>
    f93e:	cmp    $0x49444154,%r15d
    f945:	je     fb3f <png_read_end+0x45f>
    f94b:	mov    %rax,%rcx
    f94e:	mov    %r13,%rdx
    f951:	mov    %rbx,%rdi
    f954:	mov    %r12,%rsi
    f957:	callq  1fe10 <png_handle_unknown>
    f95c:	cmp    $0x504c5445,%r15d
    f963:	jne    f8fa <png_read_end+0x21a>
    f965:	mov    0x12c(%rbx),%eax
    f96b:	or     $0x2,%eax
    f96e:	mov    %eax,0x12c(%rbx)
    f974:	jmp    f8fa <png_read_end+0x21a>
    f976:	test   %r13d,%r13d
    f979:	je     f988 <png_read_end+0x2a8>
    f97b:	mov    0x130(%rbx),%eax
    f981:	and    $0x8,%eax
    f984:	test   %eax,%eax
    f986:	je     f997 <png_read_end+0x2b7>
    f988:	mov    0x12c(%rbx),%eax
    f98e:	and    $0x2000,%eax
    f993:	test   %eax,%eax
    f995:	je     f9a6 <png_read_end+0x2c6>
    f997:	mov    %rbx,%rdi
    f99a:	lea    0x1e178(%rip),%rsi        # 2db19 <png_pass_yinc.24+0x222>
    f9a1:	callq  5590 <png_benign_error@plt>
    f9a6:	mov    %r13,%rsi
    f9a9:	mov    %rbx,%rdi
    f9ac:	callq  1b280 <png_crc_finish>
    f9b1:	jmpq   f8fa <png_read_end+0x21a>
    f9b6:	mov    %r13,%rdx
    f9b9:	mov    %rbx,%rdi
    f9bc:	mov    %r12,%rsi
    f9bf:	callq  1cc80 <png_handle_PLTE>
    f9c4:	jmpq   f8fa <png_read_end+0x21a>
    f9c9:	mov    %r13,%rdx
    f9cc:	mov    %rbx,%rdi
    f9cf:	mov    %r12,%rsi
    f9d2:	callq  1cfe0 <png_handle_bKGD>
    f9d7:	jmpq   f8fa <png_read_end+0x21a>
    f9dc:	mov    %r13,%rdx
    f9df:	mov    %rbx,%rdi
    f9e2:	mov    %r12,%rsi
    f9e5:	callq  1d240 <png_handle_cHRM>
    f9ea:	jmpq   f8fa <png_read_end+0x21a>
    f9ef:	mov    %r13,%rdx
    f9f2:	mov    %rbx,%rdi
    f9f5:	mov    %r12,%rsi
    f9f8:	callq  1d470 <png_handle_eXIf>
    f9fd:	jmpq   f8fa <png_read_end+0x21a>
    fa02:	mov    %r13,%rdx
    fa05:	mov    %rbx,%rdi
    fa08:	mov    %r12,%rsi
    fa0b:	callq  1d6a0 <png_handle_gAMA>
    fa10:	jmpq   f8fa <png_read_end+0x21a>
    fa15:	mov    %r13,%rdx
    fa18:	mov    %rbx,%rdi
    fa1b:	mov    %r12,%rsi
    fa1e:	callq  1d790 <png_handle_hIST>
    fa23:	jmpq   f8fa <png_read_end+0x21a>
    fa28:	mov    %r13,%rdx
    fa2b:	mov    %rbx,%rdi
    fa2e:	mov    %r12,%rsi
    fa31:	callq  1e420 <png_handle_oFFs>
    fa36:	jmpq   f8fa <png_read_end+0x21a>
    fa3b:	mov    %r13,%rdx
    fa3e:	mov    %rbx,%rdi
    fa41:	mov    %r12,%rsi
    fa44:	callq  1e5e0 <png_handle_pCAL>
    fa49:	jmpq   f8fa <png_read_end+0x21a>
    fa4e:	mov    %r13,%rdx
    fa51:	mov    %rbx,%rdi
    fa54:	mov    %r12,%rsi
    fa57:	callq  1ed10 <png_handle_sCAL>
    fa5c:	jmpq   f8fa <png_read_end+0x21a>
    fa61:	mov    %r13,%rdx
    fa64:	mov    %rbx,%rdi
    fa67:	mov    %r12,%rsi
    fa6a:	callq  1e990 <png_handle_pHYs>
    fa6f:	jmpq   f8fa <png_read_end+0x21a>
    fa74:	mov    %r13,%rdx
    fa77:	mov    %rbx,%rdi
    fa7a:	mov    %r12,%rsi
    fa7d:	callq  1eaf0 <png_handle_sBIT>
    fa82:	jmpq   f8fa <png_read_end+0x21a>
    fa87:	mov    %r13,%rdx
    fa8a:	mov    %rbx,%rdi
    fa8d:	mov    %r12,%rsi
    fa90:	callq  1f330 <png_handle_sRGB>
    fa95:	jmpq   f8fa <png_read_end+0x21a>
    fa9a:	mov    %r13,%rdx
    fa9d:	mov    %rbx,%rdi
    faa0:	mov    %r12,%rsi
    faa3:	callq  1d930 <png_handle_iCCP>
    faa8:	jmpq   f8fa <png_read_end+0x21a>
    faad:	mov    %r13,%rdx
    fab0:	mov    %rbx,%rdi
    fab3:	mov    %r12,%rsi
    fab6:	callq  1f020 <png_handle_sPLT>
    fabb:	jmpq   f8fa <png_read_end+0x21a>
    fac0:	mov    %r13,%rdx
    fac3:	mov    %rbx,%rdi
    fac6:	mov    %r12,%rsi
    fac9:	callq  1f470 <png_handle_tEXt>
    face:	jmpq   f8fa <png_read_end+0x21a>
    fad3:	mov    %r13,%rdx
    fad6:	mov    %rbx,%rdi
    fad9:	mov    %r12,%rsi
    fadc:	callq  1f610 <png_handle_tIME>
    fae1:	jmpq   f8fa <png_read_end+0x21a>
    fae6:	mov    %r13,%rdx
    fae9:	mov    %rbx,%rdi
    faec:	mov    %r12,%rsi
    faef:	callq  1f740 <png_handle_tRNS>
    faf4:	jmpq   f8fa <png_read_end+0x21a>
    faf9:	mov    %r13,%rdx
    fafc:	mov    %rbx,%rdi
    faff:	mov    %r12,%rsi
    fb02:	callq  1fa50 <png_handle_zTXt>
    fb07:	jmpq   f8fa <png_read_end+0x21a>
    fb0c:	mov    %r13,%rdx
    fb0f:	mov    %rbx,%rdi
    fb12:	mov    %r12,%rsi
    fb15:	callq  1e090 <png_handle_iTXt>
    fb1a:	jmpq   f8fa <png_read_end+0x21a>
    fb1f:	lea    0x1dfb4(%rip),%rsi        # 2dada <png_pass_yinc.24+0x1e3>
    fb26:	mov    %rbx,%rdi
    fb29:	mov    %r13,-0x8(%rbp)
    fb2d:	mov    %r15,-0x10(%rbp)
    fb31:	mov    %rcx,-0x18(%rbp)
    fb35:	callq  5590 <png_benign_error@plt>
    fb3a:	jmpq   f74f <png_read_end+0x6f>
    fb3f:	test   %r13d,%r13d
    fb42:	je     fb6e <png_read_end+0x48e>
    fb44:	mov    0x130(%rbx),%ecx
    fb4a:	and    $0x8,%ecx
    fb4d:	test   %ecx,%ecx
    fb4f:	jne    fb6e <png_read_end+0x48e>
    fb51:	mov    %r14,%rsi
    fb54:	mov    %rax,%r14
    fb57:	mov    %rbx,%rdi
    fb5a:	callq  5590 <png_benign_error@plt>
    fb5f:	mov    %r14,%rcx
    fb62:	lea    0x1df9a(%rip),%r14        # 2db03 <png_pass_yinc.24+0x20c>
    fb69:	jmpq   f94e <png_read_end+0x26e>
    fb6e:	mov    0x12c(%rbx),%ecx
    fb74:	and    $0x2000,%ecx
    fb7a:	test   %ecx,%ecx
    fb7c:	jne    fb51 <png_read_end+0x471>
    fb7e:	mov    %rax,%rcx
    fb81:	jmpq   f94e <png_read_end+0x26e>
    fb86:	nopw   %cs:0x0(%rax,%rax,1)

000000000000fb90 <png_destroy_read_struct>:
    fb90:	push   %rbp
    fb91:	mov    %rsp,%rbp
    fb94:	sub    $0x20,%rsp
    fb98:	test   %rdi,%rdi
    fb9b:	jne    fba1 <png_destroy_read_struct+0x11>
    fb9d:	xor    %eax,%eax
    fb9f:	jmp    fba4 <png_destroy_read_struct+0x14>
    fba1:	mov    (%rdi),%rax
    fba4:	test   %rax,%rax
    fba7:	jne    fbab <png_destroy_read_struct+0x1b>
    fba9:	leaveq 
    fbaa:	retq   
    fbab:	mov    %rax,%rcx
    fbae:	mov    %r13,-0x8(%rbp)
    fbb2:	mov    %r14,-0x10(%rbp)
    fbb6:	mov    %r15,-0x18(%rbp)
    fbba:	mov    %r12,%r13
    fbbd:	mov    %rbx,%r12
    fbc0:	mov    %rax,%rbx
    fbc3:	mov    %rdi,%r14
    fbc6:	mov    %rcx,%rdi
    fbc9:	mov    %rsi,%r15
    fbcc:	mov    %rdx,%rsi
    fbcf:	callq  55a0 <png_destroy_info_struct@plt>
    fbd4:	mov    %r15,%rsi
    fbd7:	mov    %rbx,%rdi
    fbda:	callq  55a0 <png_destroy_info_struct@plt>
    fbdf:	movq   $0x0,(%r14)
    fbe6:	mov    %rbx,%rdi
    fbe9:	callq  103e0 <png_read_destroy>
    fbee:	mov    %rbx,%rdi
    fbf1:	callq  ca80 <png_destroy_png_struct>
    fbf6:	mov    %r12,%rbx
    fbf9:	mov    %r13,%r12
    fbfc:	mov    -0x18(%rbp),%r15
    fc00:	mov    -0x10(%rbp),%r14
    fc04:	mov    -0x8(%rbp),%r13
    fc08:	leaveq 
    fc09:	retq   
    fc0a:	nopw   0x0(%rax,%rax,1)

000000000000fc10 <png_set_read_status_fn>:
    fc10:	push   %rbp
    fc11:	mov    %rsp,%rbp
    fc14:	test   %rdi,%rdi
    fc17:	jne    fc1b <png_set_read_status_fn+0xb>
    fc19:	leaveq 
    fc1a:	retq   
    fc1b:	mov    %rsi,0x300(%rdi)
    fc22:	leaveq 
    fc23:	retq   
    fc24:	data16 nopw %cs:0x0(%rax,%rax,1)
    fc2f:	nop

000000000000fc30 <png_read_png>:
    fc30:	push   %rbp
    fc31:	mov    %rsp,%rbp
    fc34:	sub    $0x20,%rsp
    fc38:	test   %rdi,%rdi
    fc3b:	jne    fc3f <png_read_png+0xf>
    fc3d:	leaveq 
    fc3e:	retq   
    fc3f:	test   %rsi,%rsi
    fc42:	jne    fc46 <png_read_png+0x16>
    fc44:	leaveq 
    fc45:	retq   
    fc46:	mov    %rdi,%rax
    fc49:	mov    %rsi,%rcx
    fc4c:	mov    %r13,-0x10(%rbp)
    fc50:	mov    %r14,-0x18(%rbp)
    fc54:	mov    %r15,-0x20(%rbp)
    fc58:	mov    %rsi,%r13
    fc5b:	mov    %rcx,%rsi
    fc5e:	mov    %r12,%r14
    fc61:	mov    %rdi,%r12
    fc64:	mov    %rax,%rdi
    fc67:	mov    %rdx,%r15
    fc6a:	callq  57b0 <png_read_info@plt>
    fc6f:	mov    0x4(%r13),%eax
    fc73:	cmp    $0x1fffffff,%eax
    fc78:	ja     fdf1 <png_read_png+0x1c1>
    fc7e:	mov    %r15,%rax
    fc81:	and    $0x8000,%eax
    fc86:	test   %eax,%eax
    fc88:	jle    fc92 <png_read_png+0x62>
    fc8a:	mov    %r12,%rdi
    fc8d:	callq  58d0 <png_set_scale_16@plt>
    fc92:	mov    %r15,%rax
    fc95:	and    $0x1,%eax
    fc98:	test   %eax,%eax
    fc9a:	jle    fca4 <png_read_png+0x74>
    fc9c:	mov    %r12,%rdi
    fc9f:	callq  56d0 <png_set_strip_16@plt>
    fca4:	mov    %r15,%rax
    fca7:	and    $0x2,%eax
    fcaa:	test   %eax,%eax
    fcac:	jle    fcb6 <png_read_png+0x86>
    fcae:	mov    %r12,%rdi
    fcb1:	callq  5740 <png_set_strip_alpha@plt>
    fcb6:	mov    %r15,%rax
    fcb9:	and    $0x4,%eax
    fcbc:	test   %eax,%eax
    fcbe:	jle    fcc8 <png_read_png+0x98>
    fcc0:	mov    %r12,%rdi
    fcc3:	callq  5580 <png_set_packing@plt>
    fcc8:	mov    %r15,%rax
    fccb:	and    $0x8,%eax
    fcce:	test   %eax,%eax
    fcd0:	jle    fcda <png_read_png+0xaa>
    fcd2:	mov    %r12,%rdi
    fcd5:	callq  5820 <png_set_packswap@plt>
    fcda:	mov    %r15,%rax
    fcdd:	and    $0x10,%eax
    fce0:	test   %eax,%eax
    fce2:	jle    fcec <png_read_png+0xbc>
    fce4:	mov    %r12,%rdi
    fce7:	callq  56b0 <png_set_expand@plt>
    fcec:	mov    %r15,%rax
    fcef:	and    $0x20,%eax
    fcf2:	test   %eax,%eax
    fcf4:	jle    fcfe <png_read_png+0xce>
    fcf6:	mov    %r12,%rdi
    fcf9:	callq  58e0 <png_set_invert_mono@plt>
    fcfe:	mov    %r15,%rax
    fd01:	and    $0x40,%eax
    fd04:	test   %eax,%eax
    fd06:	jg     fe00 <png_read_png+0x1d0>
    fd0c:	mov    %r15,%rax
    fd0f:	and    $0x80,%eax
    fd14:	test   %eax,%eax
    fd16:	jle    fd20 <png_read_png+0xf0>
    fd18:	mov    %r12,%rdi
    fd1b:	callq  5860 <png_set_bgr@plt>
    fd20:	mov    %r15,%rax
    fd23:	and    $0x100,%eax
    fd28:	test   %eax,%eax
    fd2a:	jle    fd34 <png_read_png+0x104>
    fd2c:	mov    %r12,%rdi
    fd2f:	callq  50d0 <png_set_swap_alpha@plt>
    fd34:	mov    %r15,%rax
    fd37:	and    $0x200,%eax
    fd3c:	test   %eax,%eax
    fd3e:	jle    fd48 <png_read_png+0x118>
    fd40:	mov    %r12,%rdi
    fd43:	callq  51e0 <png_set_swap@plt>
    fd48:	mov    %r15,%rax
    fd4b:	and    $0x400,%eax
    fd50:	test   %eax,%eax
    fd52:	jle    fd5c <png_read_png+0x12c>
    fd54:	mov    %r12,%rdi
    fd57:	callq  5620 <png_set_invert_alpha@plt>
    fd5c:	mov    %r15,%rax
    fd5f:	and    $0x2000,%eax
    fd64:	test   %eax,%eax
    fd66:	jle    fd70 <png_read_png+0x140>
    fd68:	mov    %r12,%rdi
    fd6b:	callq  5810 <png_set_gray_to_rgb@plt>
    fd70:	and    $0x4000,%r15d
    fd77:	test   %r15d,%r15d
    fd7a:	jle    fd84 <png_read_png+0x154>
    fd7c:	mov    %r12,%rdi
    fd7f:	callq  5830 <png_set_expand_16@plt>
    fd84:	mov    %r12,%rdi
    fd87:	callq  53f0 <png_set_interlace_handling@plt>
    fd8c:	mov    %r12,%rdi
    fd8f:	mov    %r13,%rsi
    fd92:	callq  5080 <png_read_update_info@plt>
    fd97:	mov    $0x40,%edx
    fd9c:	xor    %r15d,%r15d
    fd9f:	mov    %r12,%rdi
    fda2:	mov    %r13,%rsi
    fda5:	mov    %r15,%rcx
    fda8:	callq  5720 <png_free_data@plt>
    fdad:	mov    0x160(%r13),%rax
    fdb4:	test   %rax,%rax
    fdb7:	je     fe23 <png_read_png+0x1f3>
    fdb9:	mov    0x160(%r13),%rsi
    fdc0:	mov    %r12,%rdi
    fdc3:	callq  52b0 <png_read_image@plt>
    fdc8:	mov    0x8(%r13),%eax
    fdcc:	or     $0x8000,%eax
    fdd1:	mov    %eax,0x8(%r13)
    fdd5:	mov    %r13,%rsi
    fdd8:	mov    %r12,%rdi
    fddb:	callq  5170 <png_read_end@plt>
    fde0:	mov    %r14,%r12
    fde3:	mov    -0x20(%rbp),%r15
    fde7:	mov    -0x18(%rbp),%r14
    fdeb:	mov    -0x10(%rbp),%r13
    fdef:	leaveq 
    fdf0:	retq   
    fdf1:	mov    %r12,%rdi
    fdf4:	lea    0x1dd35(%rip),%rsi        # 2db30 <png_pass_yinc.24+0x239>
    fdfb:	callq  5470 <png_error@plt>
    fe00:	mov    0x8(%r13),%eax
    fe04:	and    $0x2,%eax
    fe07:	test   %eax,%eax
    fe09:	je     fd0c <png_read_png+0xdc>
    fe0f:	lea    0xb0(%r13),%rsi
    fe16:	mov    %r12,%rdi
    fe19:	callq  5270 <png_set_shift@plt>
    fe1e:	jmpq   fd0c <png_read_png+0xdc>
    fe23:	mov    0x4(%r13),%esi
    fe27:	shl    $0x3,%rsi
    fe2b:	mov    %r12,%rdi
    fe2e:	callq  5800 <png_malloc@plt>
    fe33:	mov    %rax,0x160(%r13)
    fe3a:	mov    %r15,%rax
    fe3d:	jmp    fe53 <png_read_png+0x223>
    fe3f:	mov    0x160(%r13),%rdx
    fe46:	mov    %eax,%ecx
    fe48:	movq   $0x0,(%rdx,%rcx,8)
    fe50:	add    $0x1,%eax
    fe53:	mov    0x4(%r13),%ecx
    fe57:	cmp    %eax,%ecx
    fe59:	ja     fe3f <png_read_png+0x20f>
    fe5b:	mov    0x12c(%r13),%eax
    fe62:	or     $0x40,%eax
    fe65:	mov    %eax,0x12c(%r13)
    fe6c:	mov    %r14,-0x8(%rbp)
    fe70:	jmp    fe90 <png_read_png+0x260>
    fe72:	mov    0x10(%r13),%rsi
    fe76:	mov    0x160(%r13),%r14
    fe7d:	mov    %r12,%rdi
    fe80:	callq  5800 <png_malloc@plt>
    fe85:	mov    %r15d,%ecx
    fe88:	mov    %rax,(%r14,%rcx,8)
    fe8c:	add    $0x1,%r15d
    fe90:	mov    0x4(%r13),%eax
    fe94:	cmp    %r15d,%eax
    fe97:	ja     fe72 <png_read_png+0x242>
    fe99:	mov    -0x8(%rbp),%r14
    fe9d:	jmpq   fdb9 <png_read_png+0x189>
    fea2:	data16 nopw %cs:0x0(%rax,%rax,1)
    fead:	nopl   (%rax)

000000000000feb0 <png_image_begin_read_from_file>:
    feb0:	push   %rbp
    feb1:	mov    %rsp,%rbp
    feb4:	sub    $0x10,%rsp
    feb8:	xor    %eax,%eax
    feba:	test   %rdi,%rdi
    febd:	jne    fec9 <png_image_begin_read_from_file+0x19>
    febf:	mov    %rax,%rcx
    fec2:	test   %rcx,%rcx
    fec5:	jne    fed8 <png_image_begin_read_from_file+0x28>
    fec7:	leaveq 
    fec8:	retq   
    fec9:	mov    0x8(%rdi),%ecx
    fecc:	cmp    $0x1,%ecx
    fecf:	je     fee6 <png_image_begin_read_from_file+0x36>
    fed1:	mov    $0x1,%ecx
    fed6:	jmp    fec2 <png_image_begin_read_from_file+0x12>
    fed8:	lea    0x1dcb6(%rip),%rsi        # 2db95 <png_pass_yinc.24+0x29e>
    fedf:	callq  90e0 <png_image_error>
    fee4:	leaveq 
    fee5:	retq   
    fee6:	test   %rsi,%rsi
    fee9:	jne    fef9 <png_image_begin_read_from_file+0x49>
    feeb:	lea    0x1dc72(%rip),%rsi        # 2db64 <png_pass_yinc.24+0x26d>
    fef2:	callq  90e0 <png_image_error>
    fef7:	leaveq 
    fef8:	retq   
    fef9:	lea    0x1dc61(%rip),%rax        # 2db61 <png_pass_yinc.24+0x26a>
    ff00:	mov    %r15,-0x10(%rbp)
    ff04:	mov    %rdi,%r15
    ff07:	mov    %rsi,%rdi
    ff0a:	mov    %rax,%rsi
    ff0d:	callq  5760 <fopen@plt>
    ff12:	test   %rax,%rax
    ff15:	jne    ff35 <png_image_begin_read_from_file+0x85>
    ff17:	callq  50a0 <__errno_location@plt>
    ff1c:	movslq (%rax),%rdi
    ff1f:	callq  5890 <strerror@plt>
    ff24:	mov    %rax,%rsi
    ff27:	mov    %r15,%rdi
    ff2a:	callq  90e0 <png_image_error>
    ff2f:	mov    -0x10(%rbp),%r15
    ff33:	leaveq 
    ff34:	retq   
    ff35:	mov    %r15,%rdi
    ff38:	mov    %r14,-0x8(%rbp)
    ff3c:	mov    %rax,%r14
    ff3f:	callq  10550 <png_image_read_init>
    ff44:	test   %eax,%eax
    ff46:	jne    ff5c <png_image_begin_read_from_file+0xac>
    ff48:	mov    %r14,%rdi
    ff4b:	callq  5240 <fclose@plt>
    ff50:	mov    -0x8(%rbp),%r14
    ff54:	xor    %eax,%eax
    ff56:	mov    -0x10(%rbp),%r15
    ff5a:	leaveq 
    ff5b:	retq   
    ff5c:	mov    (%r15),%rax
    ff5f:	mov    (%rax),%rax
    ff62:	mov    %r14,0x108(%rax)
    ff69:	mov    (%r15),%rcx
    ff6c:	mov    0x28(%rcx),%eax
    ff6f:	or     $0x2,%eax
    ff72:	mov    %eax,0x28(%rcx)
    ff75:	mov    %r15,%rdi
    ff78:	lea    0x781(%rip),%rsi        # 10700 <png_image_read_header>
    ff7f:	mov    %rdi,%rdx
    ff82:	callq  b260 <png_safe_execute>
    ff87:	mov    -0x8(%rbp),%r14
    ff8b:	mov    -0x10(%rbp),%r15
    ff8f:	leaveq 
    ff90:	retq   
    ff91:	data16 nopw %cs:0x0(%rax,%rax,1)
    ff9c:	nopl   0x0(%rax)

000000000000ffa0 <png_image_begin_read_from_stdio>:
    ffa0:	push   %rbp
    ffa1:	mov    %rsp,%rbp
    ffa4:	sub    $0x10,%rsp
    ffa8:	xor    %eax,%eax
    ffaa:	test   %rdi,%rdi
    ffad:	jne    ffb9 <png_image_begin_read_from_stdio+0x19>
    ffaf:	mov    %rax,%rcx
    ffb2:	test   %rcx,%rcx
    ffb5:	jne    ffc8 <png_image_begin_read_from_stdio+0x28>
    ffb7:	leaveq 
    ffb8:	retq   
    ffb9:	mov    0x8(%rdi),%ecx
    ffbc:	cmp    $0x1,%ecx
    ffbf:	je     ffd6 <png_image_begin_read_from_stdio+0x36>
    ffc1:	mov    $0x1,%ecx
    ffc6:	jmp    ffb2 <png_image_begin_read_from_stdio+0x12>
    ffc8:	lea    0x1dc34(%rip),%rsi        # 2dc03 <png_pass_yinc.24+0x30c>
    ffcf:	callq  90e0 <png_image_error>
    ffd4:	leaveq 
    ffd5:	retq   
    ffd6:	test   %rsi,%rsi
    ffd9:	jne    ffe9 <png_image_begin_read_from_stdio+0x49>
    ffdb:	lea    0x1dbef(%rip),%rsi        # 2dbd1 <png_pass_yinc.24+0x2da>
    ffe2:	callq  90e0 <png_image_error>
    ffe7:	leaveq 
    ffe8:	retq   
    ffe9:	mov    %rdi,%rax
    ffec:	mov    %rdi,-0x10(%rbp)
    fff0:	mov    %rsi,-0x8(%rbp)
    fff4:	mov    %rax,%rdi
    fff7:	callq  10550 <png_image_read_init>
    fffc:	test   %eax,%eax
    fffe:	jne    10004 <png_image_begin_read_from_stdio+0x64>
   10000:	xor    %eax,%eax
   10002:	leaveq 
   10003:	retq   
   10004:	mov    -0x10(%rbp),%rdi
   10008:	mov    (%rdi),%rax
   1000b:	mov    (%rax),%rax
   1000e:	mov    -0x8(%rbp),%rcx
   10012:	mov    %rcx,0x108(%rax)
   10019:	lea    0x6e0(%rip),%rsi        # 10700 <png_image_read_header>
   10020:	mov    %rdi,%rdx
   10023:	callq  b260 <png_safe_execute>
   10028:	leaveq 
   10029:	retq   
   1002a:	nopw   0x0(%rax,%rax,1)

0000000000010030 <png_image_begin_read_from_memory>:
   10030:	push   %rbp
   10031:	mov    %rsp,%rbp
   10034:	sub    $0x20,%rsp
   10038:	xor    %eax,%eax
   1003a:	test   %rdi,%rdi
   1003d:	jne    10049 <png_image_begin_read_from_memory+0x19>
   1003f:	mov    %rax,%rcx
   10042:	test   %rcx,%rcx
   10045:	jne    10058 <png_image_begin_read_from_memory+0x28>
   10047:	leaveq 
   10048:	retq   
   10049:	mov    0x8(%rdi),%ecx
   1004c:	cmp    $0x1,%ecx
   1004f:	je     10066 <png_image_begin_read_from_memory+0x36>
   10051:	mov    $0x1,%ecx
   10056:	jmp    10042 <png_image_begin_read_from_memory+0x12>
   10058:	lea    0x1dc14(%rip),%rsi        # 2dc73 <png_pass_yinc.24+0x37c>
   1005f:	callq  90e0 <png_image_error>
   10064:	leaveq 
   10065:	retq   
   10066:	test   %rsi,%rsi
   10069:	jne    10079 <png_image_begin_read_from_memory+0x49>
   1006b:	lea    0x1dbce(%rip),%rsi        # 2dc40 <png_pass_yinc.24+0x349>
   10072:	callq  90e0 <png_image_error>
   10077:	leaveq 
   10078:	retq   
   10079:	test   %rdx,%rdx
   1007c:	je     1006b <png_image_begin_read_from_memory+0x3b>
   1007e:	mov    %rdi,%rax
   10081:	mov    %r15,-0x18(%rbp)
   10085:	mov    %rsi,-0x10(%rbp)
   10089:	mov    %rdx,-0x8(%rbp)
   1008d:	mov    %rdi,%r15
   10090:	mov    %rax,%rdi
   10093:	callq  10550 <png_image_read_init>
   10098:	test   %eax,%eax
   1009a:	jne    100a4 <png_image_begin_read_from_memory+0x74>
   1009c:	xor    %eax,%eax
   1009e:	mov    -0x18(%rbp),%r15
   100a2:	leaveq 
   100a3:	retq   
   100a4:	mov    (%r15),%rax
   100a7:	mov    -0x10(%rbp),%rcx
   100ab:	mov    %rcx,0x18(%rax)
   100af:	mov    (%r15),%rcx
   100b2:	mov    -0x8(%rbp),%rax
   100b6:	mov    %rax,0x20(%rcx)
   100ba:	mov    (%r15),%rax
   100bd:	mov    (%rax),%rax
   100c0:	mov    %r15,0x108(%rax)
   100c7:	lea    0x712(%rip),%rcx        # 107e0 <png_image_memory_read>
   100ce:	mov    (%r15),%rax
   100d1:	mov    (%rax),%rax
   100d4:	mov    %rcx,0x100(%rax)
   100db:	mov    %r15,%rdi
   100de:	lea    0x61b(%rip),%rsi        # 10700 <png_image_read_header>
   100e5:	mov    %rdi,%rdx
   100e8:	callq  b260 <png_safe_execute>
   100ed:	mov    -0x18(%rbp),%r15
   100f1:	leaveq 
   100f2:	retq   
   100f3:	data16 nopw %cs:0x0(%rax,%rax,1)
   100fe:	xchg   %ax,%ax

0000000000010100 <png_image_finish_read>:
   10100:	push   %rbp
   10101:	mov    %rsp,%rbp
   10104:	sub    $0x80,%rsp
   1010b:	xor    %eax,%eax
   1010d:	test   %rdi,%rdi
   10110:	jne    1011c <png_image_finish_read+0x1c>
   10112:	mov    %rax,%r9
   10115:	test   %r9,%r9
   10118:	jne    10166 <png_image_finish_read+0x66>
   1011a:	leaveq 
   1011b:	retq   
   1011c:	mov    $0x1,%r9d
   10122:	mov    0x8(%rdi),%r10d
   10126:	cmp    $0x1,%r10d
   1012a:	jne    10115 <png_image_finish_read+0x15>
   1012c:	mov    0x14(%rdi),%eax
   1012f:	mov    %rax,%r10
   10132:	and    $0x8,%r10d
   10136:	test   %r10d,%r10d
   10139:	jne    10142 <png_image_finish_read+0x42>
   1013b:	and    $0x3,%eax
   1013e:	lea    0x1(%rax),%r9d
   10142:	mov    %rdx,%r10
   10145:	mov    $0x7fffffff,%eax
   1014a:	xor    %edx,%edx
   1014c:	mov    0xc(%rdi),%r11d
   10150:	div    %r9d
   10153:	cmp    %r11d,%eax
   10156:	jae    10174 <png_image_finish_read+0x74>
   10158:	lea    0x1dbd0(%rip),%rsi        # 2dd2f <png_pass_yinc.24+0x438>
   1015f:	callq  90e0 <png_image_error>
   10164:	leaveq 
   10165:	retq   
   10166:	lea    0x1dbee(%rip),%rsi        # 2dd5b <png_pass_yinc.24+0x464>
   1016d:	callq  90e0 <png_image_error>
   10172:	leaveq 
   10173:	retq   
   10174:	imul   0xc(%rdi),%r9d
   10179:	test   %ecx,%ecx
   1017b:	jne    10180 <png_image_finish_read+0x80>
   1017d:	mov    %r9,%rcx
   10180:	test   %ecx,%ecx
   10182:	js     10189 <png_image_finish_read+0x89>
   10184:	mov    %rcx,%r11
   10187:	jmp    1018f <png_image_finish_read+0x8f>
   10189:	mov    %rcx,%r11
   1018c:	neg    %r11d
   1018f:	mov    (%rdi),%rax
   10192:	test   %rax,%rax
   10195:	jne    101a5 <png_image_finish_read+0xa5>
   10197:	lea    0x1db69(%rip),%rsi        # 2dd07 <png_pass_yinc.24+0x410>
   1019e:	callq  90e0 <png_image_error>
   101a3:	leaveq 
   101a4:	retq   
   101a5:	test   %r10,%r10
   101a8:	je     10197 <png_image_finish_read+0x97>
   101aa:	cmp    %r11d,%r9d
   101ad:	ja     10197 <png_image_finish_read+0x97>
   101af:	mov    0x10(%rdi),%r9d
   101b3:	mov    0x14(%rdi),%eax
   101b6:	mov    %rax,%rdx
   101b9:	and    $0x8,%edx
   101bc:	test   %edx,%edx
   101be:	je     101ed <png_image_finish_read+0xed>
   101c0:	mov    $0x1,%eax
   101c5:	xor    %edx,%edx
   101c7:	mov    %rsi,-0x28(%rbp)
   101cb:	mov    %rax,%rsi
   101ce:	mov    $0xffffffff,%eax
   101d3:	div    %esi
   101d5:	xor    %edx,%edx
   101d7:	div    %r11d
   101da:	cmp    %r9d,%eax
   101dd:	jae    101f8 <png_image_finish_read+0xf8>
   101df:	lea    0x1dafa(%rip),%rsi        # 2dce0 <png_pass_yinc.24+0x3e9>
   101e6:	callq  90e0 <png_image_error>
   101eb:	leaveq 
   101ec:	retq   
   101ed:	and    $0x4,%eax
   101f0:	shr    $0x2,%eax
   101f3:	add    $0x1,%eax
   101f6:	jmp    101c5 <png_image_finish_read+0xc5>
   101f8:	mov    0x14(%rdi),%eax
   101fb:	and    $0x8,%eax
   101fe:	test   %eax,%eax
   10200:	je     1021c <png_image_finish_read+0x11c>
   10202:	mov    0x1c(%rdi),%eax
   10205:	test   %eax,%eax
   10207:	jne    10217 <png_image_finish_read+0x117>
   10209:	lea    0x1daa1(%rip),%rsi        # 2dcb1 <png_pass_yinc.24+0x3ba>
   10210:	callq  90e0 <png_image_error>
   10215:	leaveq 
   10216:	retq   
   10217:	test   %r8,%r8
   1021a:	je     10209 <png_image_finish_read+0x109>
   1021c:	lea    -0x78(%rbp),%rax
   10220:	mov    $0x50,%edx
   10225:	xor    %esi,%esi
   10227:	mov    %r12,-0x8(%rbp)
   1022b:	mov    %r13,-0x10(%rbp)
   1022f:	mov    %r14,-0x18(%rbp)
   10233:	mov    %r15,-0x20(%rbp)
   10237:	mov    %rdi,%r12
   1023a:	mov    %rax,%rdi
   1023d:	mov    %rcx,%r13
   10240:	mov    %r8,%r14
   10243:	mov    %r10,%r15
   10246:	callq  5350 <memset@plt>
   1024b:	mov    %r12,-0x78(%rbp)
   1024f:	mov    %r15,-0x70(%rbp)
   10253:	mov    %r13d,-0x68(%rbp)
   10257:	mov    %r14,-0x60(%rbp)
   1025b:	mov    -0x28(%rbp),%rax
   1025f:	mov    %rax,-0x58(%rbp)
   10263:	movq   $0x0,-0x50(%rbp)
   1026b:	mov    0x14(%r12),%eax
   10270:	and    $0x8,%eax
   10273:	test   %eax,%eax
   10275:	jne    102aa <png_image_finish_read+0x1aa>
   10277:	lea    0x3db2(%rip),%rsi        # 14030 <png_image_read_direct>
   1027e:	mov    %r12,%rdi
   10281:	lea    -0x78(%rbp),%rdx
   10285:	callq  b260 <png_safe_execute>
   1028a:	mov    %rax,%r13
   1028d:	mov    %r12,%rdi
   10290:	callq  5040 <png_image_free@plt>
   10295:	mov    %r13,%rax
   10298:	mov    -0x20(%rbp),%r15
   1029c:	mov    -0x18(%rbp),%r14
   102a0:	mov    -0x10(%rbp),%r13
   102a4:	mov    -0x8(%rbp),%r12
   102a8:	leaveq 
   102a9:	retq   
   102aa:	lea    0x12cf(%rip),%rsi        # 11580 <png_image_read_colormap>
   102b1:	mov    %r12,%rdi
   102b4:	lea    -0x78(%rbp),%r13
   102b8:	mov    %r13,%rdx
   102bb:	callq  b260 <png_safe_execute>
   102c0:	test   %eax,%eax
   102c2:	jne    102c9 <png_image_finish_read+0x1c9>
   102c4:	xor    %r13d,%r13d
   102c7:	jmp    1028d <png_image_finish_read+0x18d>
   102c9:	mov    %r13,%rdx
   102cc:	lea    0x2f1d(%rip),%rsi        # 131f0 <png_image_read_colormapped>
   102d3:	mov    %r12,%rdi
   102d6:	callq  b260 <png_safe_execute>
   102db:	test   %eax,%eax
   102dd:	jne    102e4 <png_image_finish_read+0x1e4>
   102df:	xor    %r13d,%r13d
   102e2:	jmp    1028d <png_image_finish_read+0x18d>
   102e4:	mov    $0x1,%r13d
   102ea:	jmp    1028d <png_image_finish_read+0x18d>
   102ec:	nopl   0x0(%rax)

00000000000102f0 <png_do_read_intrapixel>:
   102f0:	push   %rbp
   102f1:	mov    %rsp,%rbp
   102f4:	movzbl 0x10(%rdi),%ecx
   102f8:	mov    %rcx,%rax
   102fb:	and    $0x2,%eax
   102fe:	test   %eax,%eax
   10300:	jg     10304 <png_do_read_intrapixel+0x14>
   10302:	leaveq 
   10303:	retq   
   10304:	mov    (%rdi),%r8d
   10307:	xor    %eax,%eax
   10309:	movzbl 0x11(%rdi),%edx
   1030d:	cmp    $0x8,%dl
   10310:	je     10319 <png_do_read_intrapixel+0x29>
   10312:	cmp    $0x10,%dl
   10315:	je     10325 <png_do_read_intrapixel+0x35>
   10317:	leaveq 
   10318:	retq   
   10319:	cmp    $0x2,%cl
   1031c:	jne    10334 <png_do_read_intrapixel+0x44>
   1031e:	mov    $0x3,%ecx
   10323:	jmp    1035e <png_do_read_intrapixel+0x6e>
   10325:	cmp    $0x2,%cl
   10328:	jne    10365 <png_do_read_intrapixel+0x75>
   1032a:	mov    $0x6,%edx
   1032f:	jmpq   103c8 <png_do_read_intrapixel+0xd8>
   10334:	cmp    $0x6,%cl
   10337:	jne    103cf <png_do_read_intrapixel+0xdf>
   1033d:	mov    $0x4,%ecx
   10342:	jmp    1035e <png_do_read_intrapixel+0x6e>
   10344:	movzbl 0x1(%rsi),%edi
   10348:	movzbl (%rsi),%edx
   1034b:	add    %edi,%edx
   1034d:	mov    %dl,(%rsi)
   1034f:	movzbl 0x2(%rsi),%edx
   10353:	add    %edi,%edx
   10355:	mov    %dl,0x2(%rsi)
   10358:	add    $0x1,%eax
   1035b:	add    %rcx,%rsi
   1035e:	cmp    %r8d,%eax
   10361:	jb     10344 <png_do_read_intrapixel+0x54>
   10363:	leaveq 
   10364:	retq   
   10365:	cmp    $0x6,%cl
   10368:	jne    103d1 <png_do_read_intrapixel+0xe1>
   1036a:	mov    $0x8,%edx
   1036f:	jmp    103c8 <png_do_read_intrapixel+0xd8>
   10371:	movzbl 0x3(%rsi),%edi
   10375:	movzbl 0x2(%rsi),%ecx
   10379:	shl    $0x8,%ecx
   1037c:	lea    (%rdi,%rcx,1),%r9d
   10380:	movzbl 0x1(%rsi),%edi
   10384:	movzbl (%rsi),%ecx
   10387:	shl    $0x8,%ecx
   1038a:	add    %edi,%ecx
   1038c:	lea    0x10000(%r9,%rcx,1),%edi
   10394:	mov    %rdi,%rcx
   10397:	shr    $0x8,%ecx
   1039a:	mov    %cl,(%rsi)
   1039c:	mov    %dil,0x1(%rsi)
   103a0:	movzbl 0x5(%rsi),%edi
   103a4:	movzbl 0x4(%rsi),%ecx
   103a8:	shl    $0x8,%ecx
   103ab:	add    %edi,%ecx
   103ad:	lea    0x10000(%r9,%rcx,1),%edi
   103b5:	mov    %rdi,%rcx
   103b8:	shr    $0x8,%ecx
   103bb:	mov    %cl,0x4(%rsi)
   103be:	mov    %dil,0x5(%rsi)
   103c2:	add    $0x1,%eax
   103c5:	add    %rdx,%rsi
   103c8:	cmp    %eax,%r8d
   103cb:	ja     10371 <png_do_read_intrapixel+0x81>
   103cd:	leaveq 
   103ce:	retq   
   103cf:	leaveq 
   103d0:	retq   
   103d1:	leaveq 
   103d2:	retq   
   103d3:	data16 nopw %cs:0x0(%rax,%rax,1)
   103de:	xchg   %ax,%ax

00000000000103e0 <png_read_destroy>:
   103e0:	push   %rbp
   103e1:	mov    %rsp,%rbp
   103e4:	sub    $0x10,%rsp
   103e8:	mov    %r15,-0x8(%rbp)
   103ec:	mov    %rdi,%r15
   103ef:	callq  8c60 <png_destroy_gamma_table>
   103f4:	mov    0x3f8(%r15),%rsi
   103fb:	mov    %r15,%rdi
   103fe:	callq  5790 <png_free@plt>
   10403:	movq   $0x0,0x3f8(%r15)
   1040e:	mov    0x470(%r15),%rsi
   10415:	mov    %r15,%rdi
   10418:	callq  5790 <png_free@plt>
   1041d:	movq   $0x0,0x470(%r15)
   10428:	mov    0x458(%r15),%rsi
   1042f:	mov    %r15,%rdi
   10432:	callq  5790 <png_free@plt>
   10437:	movq   $0x0,0x458(%r15)
   10442:	mov    0x378(%r15),%rsi
   10449:	mov    %r15,%rdi
   1044c:	callq  5790 <png_free@plt>
   10451:	movq   $0x0,0x378(%r15)
   1045c:	mov    0x380(%r15),%rsi
   10463:	mov    %r15,%rdi
   10466:	callq  5790 <png_free@plt>
   1046b:	movq   $0x0,0x380(%r15)
   10476:	mov    0x3ac(%r15),%eax
   1047d:	and    $0x1000,%eax
   10482:	test   %eax,%eax
   10484:	je     104a0 <png_read_destroy+0xc0>
   10486:	mov    0x250(%r15),%rsi
   1048d:	mov    %r15,%rdi
   10490:	callq  6d80 <png_zfree>
   10495:	movq   $0x0,0x250(%r15)
   104a0:	mov    0x3ac(%r15),%eax
   104a7:	mov    %rax,%rcx
   104aa:	and    $0xffffefff,%ecx
   104b0:	mov    %ecx,0x3ac(%r15)
   104b7:	and    $0x2000,%eax
   104bc:	test   %eax,%eax
   104be:	je     104da <png_read_destroy+0xfa>
   104c0:	mov    0x2e8(%r15),%rsi
   104c7:	mov    %r15,%rdi
   104ca:	callq  5790 <png_free@plt>
   104cf:	movq   $0x0,0x2e8(%r15)
   104da:	mov    0x3ac(%r15),%eax
   104e1:	and    $0xffffdfff,%eax
   104e6:	mov    %eax,0x3ac(%r15)
   104ed:	lea    0x140(%r15),%rdi
   104f4:	callq  5510 <inflateEnd@plt>
   104f9:	mov    0x330(%r15),%rsi
   10500:	mov    %r15,%rdi
   10503:	callq  5790 <png_free@plt>
   10508:	movq   $0x0,0x330(%r15)
   10513:	mov    0x438(%r15),%rsi
   1051a:	mov    %r15,%rdi
   1051d:	callq  5790 <png_free@plt>
   10522:	movq   $0x0,0x438(%r15)
   1052d:	mov    0x3c8(%r15),%rsi
   10534:	mov    %r15,%rdi
   10537:	callq  5790 <png_free@plt>
   1053c:	movq   $0x0,0x3c8(%r15)
   10547:	mov    -0x8(%rbp),%r15
   1054b:	leaveq 
   1054c:	retq   
   1054d:	nopl   (%rax)

0000000000010550 <png_image_read_init>:
   10550:	push   %rbp
   10551:	mov    %rsp,%rbp
   10554:	sub    $0x20,%rsp
   10558:	mov    (%rdi),%rax
   1055b:	test   %rax,%rax
   1055e:	je     1056e <png_image_read_init+0x1e>
   10560:	lea    0x1d84a(%rip),%rsi        # 2ddb1 <png_pass_yinc.24+0x4ba>
   10567:	callq  90e0 <png_image_error>
   1056c:	leaveq 
   1056d:	retq   
   1056e:	lea    0x1d817(%rip),%rax        # 2dd8c <png_pass_yinc.24+0x495>
   10575:	lea    -0x53fc(%rip),%rdx        # b180 <png_safe_error>
   1057c:	lea    -0x5373(%rip),%rcx        # b210 <png_safe_warning>
   10583:	mov    %rdi,%rsi
   10586:	mov    %r15,-0x10(%rbp)
   1058a:	mov    %rdi,%r15
   1058d:	mov    %rax,%rdi
   10590:	callq  56e0 <png_create_read_struct@plt>
   10595:	mov    %rax,-0x20(%rbp)
   10599:	xor    %esi,%esi
   1059b:	mov    $0x68,%edx
   105a0:	mov    %r15,%rdi
   105a3:	callq  5350 <memset@plt>
   105a8:	movl   $0x1,0x8(%r15)
   105b0:	mov    -0x20(%rbp),%rdi
   105b4:	test   %rdi,%rdi
   105b7:	jne    105ce <png_image_read_init+0x7e>
   105b9:	mov    %r15,%rdi
   105bc:	lea    0x1d7d0(%rip),%rsi        # 2dd93 <png_pass_yinc.24+0x49c>
   105c3:	callq  90e0 <png_image_error>
   105c8:	mov    -0x10(%rbp),%r15
   105cc:	leaveq 
   105cd:	retq   
   105ce:	callq  5280 <png_create_info_struct@plt>
   105d3:	mov    %rax,-0x18(%rbp)
   105d7:	test   %rax,%rax
   105da:	jne    105ec <png_image_read_init+0x9c>
   105dc:	lea    -0x20(%rbp),%rdi
   105e0:	xor    %esi,%esi
   105e2:	mov    %rsi,%rdx
   105e5:	callq  54b0 <png_destroy_read_struct@plt>
   105ea:	jmp    105b9 <png_image_read_init+0x69>
   105ec:	mov    -0x20(%rbp),%rdi
   105f0:	mov    $0x30,%esi
   105f5:	callq  5150 <png_malloc_warn@plt>
   105fa:	test   %rax,%rax
   105fd:	jne    1060e <png_image_read_init+0xbe>
   105ff:	mov    -0x20(%rbp),%rdi
   10603:	lea    -0x18(%rbp),%rsi
   10607:	callq  55a0 <png_destroy_info_struct@plt>
   1060c:	jmp    105dc <png_image_read_init+0x8c>
   1060e:	mov    %rax,%rdi
   10611:	mov    %r14,-0x8(%rbp)
   10615:	mov    %rax,%r14
   10618:	mov    $0x30,%edx
   1061d:	xor    %esi,%esi
   1061f:	callq  5350 <memset@plt>
   10624:	mov    -0x20(%rbp),%rax
   10628:	mov    %rax,(%r14)
   1062b:	mov    -0x18(%rbp),%rax
   1062f:	mov    %rax,0x8(%r14)
   10633:	mov    0x28(%r14),%eax
   10637:	and    $0xfffffffe,%eax
   1063a:	mov    %eax,0x28(%r14)
   1063e:	mov    %r14,(%r15)
   10641:	mov    $0x1,%eax
   10646:	mov    -0x8(%rbp),%r14
   1064a:	mov    -0x10(%rbp),%r15
   1064e:	leaveq 
   1064f:	retq   

0000000000010650 <png_image_format>:
   10650:	push   %rbp
   10651:	mov    %rsp,%rbp
   10654:	movzbl 0x267(%rdi),%ecx
   1065b:	mov    %rcx,%rax
   1065e:	and    $0x2,%eax
   10661:	test   %eax,%eax
   10663:	jg     1066e <png_image_format+0x1e>
   10665:	mov    $0x1,%eax
   1066a:	xor    %edx,%edx
   1066c:	jmp    10678 <png_image_format+0x28>
   1066e:	mov    $0x3,%eax
   10673:	mov    $0x2,%edx
   10678:	and    $0x4,%ecx
   1067b:	test   %ecx,%ecx
   1067d:	jle    1069e <png_image_format+0x4e>
   1067f:	movzbl 0x268(%rdi),%ecx
   10686:	cmp    $0x10,%cl
   10689:	jne    1068e <png_image_format+0x3e>
   1068b:	add    $0x4,%eax
   1068e:	movzbl 0x267(%rdi),%ecx
   10695:	and    $0x1,%ecx
   10698:	test   %ecx,%ecx
   1069a:	jg     106af <png_image_format+0x5f>
   1069c:	leaveq 
   1069d:	retq   
   1069e:	movzwl 0x260(%rdi),%ecx
   106a5:	test   %cx,%cx
   106a8:	jne    1067f <png_image_format+0x2f>
   106aa:	mov    %rdx,%rax
   106ad:	jmp    1067f <png_image_format+0x2f>
   106af:	add    $0x8,%eax
   106b2:	leaveq 
   106b3:	retq   
   106b4:	data16 nopw %cs:0x0(%rax,%rax,1)
   106bf:	nop

00000000000106c0 <png_gamma_not_sRGB>:
   106c0:	push   %rbp
   106c1:	mov    %rsp,%rbp
   106c4:	cmp    $0x1869f,%edi
   106ca:	jle    106d3 <png_gamma_not_sRGB+0x13>
   106cc:	mov    $0x1,%eax
   106d1:	leaveq 
   106d2:	retq   
   106d3:	test   %edi,%edi
   106d5:	jne    106db <png_gamma_not_sRGB+0x1b>
   106d7:	xor    %eax,%eax
   106d9:	leaveq 
   106da:	retq   
   106db:	lea    (%rdi,%rdi,4),%eax
   106de:	lea    0x2(%rdi,%rax,2),%ecx
   106e2:	mov    $0x66666667,%eax
   106e7:	imul   %ecx
   106e9:	mov    %rdx,%rax
   106ec:	sar    %eax
   106ee:	shr    $0x1f,%edx
   106f1:	lea    (%rax,%rdx,1),%edi
   106f4:	callq  8b20 <png_gamma_significant>
   106f9:	leaveq 
   106fa:	retq   
   106fb:	nopl   0x0(%rax,%rax,1)

0000000000010700 <png_image_read_header>:
   10700:	push   %rbp
   10701:	mov    %rsp,%rbp
   10704:	sub    $0x20,%rsp
   10708:	mov    %r13,-0x8(%rbp)
   1070c:	mov    %r14,-0x10(%rbp)
   10710:	mov    %r15,-0x18(%rbp)
   10714:	mov    $0x1,%esi
   10719:	mov    (%rdi),%rax
   1071c:	mov    (%rax),%r14
   1071f:	mov    0x8(%rax),%r15
   10723:	mov    %rdi,%r13
   10726:	mov    %r14,%rdi
   10729:	callq  5050 <png_set_benign_errors@plt>
   1072e:	mov    %r15,%rsi
   10731:	mov    %r14,%rdi
   10734:	callq  57b0 <png_read_info@plt>
   10739:	mov    0x1f8(%r14),%eax
   10740:	mov    %eax,0xc(%r13)
   10744:	mov    0x1fc(%r14),%eax
   1074b:	mov    %eax,0x10(%r13)
   1074f:	mov    %r14,%rdi
   10752:	callq  10650 <png_image_format>
   10757:	mov    %eax,0x14(%r13)
   1075b:	and    $0x2,%eax
   1075e:	test   %eax,%eax
   10760:	jne    10781 <png_image_read_header+0x81>
   10762:	mov    $0x100,%edx
   10767:	movzbl 0x267(%r14),%eax
   1076f:	test   %al,%al
   10771:	je     107a0 <png_image_read_header+0xa0>
   10773:	cmp    $0x3,%al
   10775:	je     107cf <png_image_read_header+0xcf>
   10777:	mov    $0x1,%eax
   1077c:	mov    %rdx,%rsi
   1077f:	jmp    107b2 <png_image_read_header+0xb2>
   10781:	movzwl 0x4e2(%r14),%eax
   10789:	and    $0x8042,%eax
   1078e:	cmp    $0x2,%eax
   10791:	jne    10762 <png_image_read_header+0x62>
   10793:	mov    0x18(%r13),%eax
   10797:	or     $0x1,%eax
   1079a:	mov    %eax,0x18(%r13)
   1079e:	jmp    10762 <png_image_read_header+0x62>
   107a0:	movzbl 0x268(%r14),%ecx
   107a8:	mov    $0x1,%eax
   107ad:	mov    %rax,%rsi
   107b0:	shl    %cl,%esi
   107b2:	cmp    $0x100,%esi
   107b8:	ja     107bd <png_image_read_header+0xbd>
   107ba:	mov    %rsi,%rdx
   107bd:	mov    %edx,0x1c(%r13)
   107c1:	mov    -0x18(%rbp),%r15
   107c5:	mov    -0x10(%rbp),%r14
   107c9:	mov    -0x8(%rbp),%r13
   107cd:	leaveq 
   107ce:	retq   
   107cf:	movzwl 0x258(%r14),%esi
   107d7:	mov    $0x1,%eax
   107dc:	jmp    107b2 <png_image_read_header+0xb2>
   107de:	xchg   %ax,%ax

00000000000107e0 <png_image_memory_read>:
   107e0:	push   %rbp
   107e1:	mov    %rsp,%rbp
   107e4:	sub    $0x20,%rsp
   107e8:	test   %rdi,%rdi
   107eb:	jne    107ef <png_image_memory_read+0xf>
   107ed:	leaveq 
   107ee:	retq   
   107ef:	mov    0x108(%rdi),%rax
   107f6:	test   %rax,%rax
   107f9:	jne    10807 <png_image_memory_read+0x27>
   107fb:	lea    0x1d5ef(%rip),%rsi        # 2ddf1 <png_pass_yinc.24+0x4fa>
   10802:	callq  5470 <png_error@plt>
   10807:	mov    (%rax),%rax
   1080a:	test   %rax,%rax
   1080d:	je     107fb <png_image_memory_read+0x1b>
   1080f:	mov    0x20(%rax),%r8
   10813:	mov    0x18(%rax),%rcx
   10817:	test   %rcx,%rcx
   1081a:	jne    10828 <png_image_memory_read+0x48>
   1081c:	lea    0x1d5b6(%rip),%rsi        # 2ddd9 <png_pass_yinc.24+0x4e2>
   10823:	callq  5470 <png_error@plt>
   10828:	cmp    %rdx,%r8
   1082b:	jb     1081c <png_image_memory_read+0x3c>
   1082d:	mov    %rcx,%rdi
   10830:	mov    %rdx,%r9
   10833:	mov    %r12,-0x8(%rbp)
   10837:	mov    %r13,-0x10(%rbp)
   1083b:	mov    %r14,-0x18(%rbp)
   1083f:	mov    %r15,-0x20(%rbp)
   10843:	mov    %r8,%r12
   10846:	mov    %rax,%r13
   10849:	mov    %rcx,%r14
   1084c:	mov    %rdx,%r15
   1084f:	mov    %r9,%rdx
   10852:	mov    %rdi,%r8
   10855:	mov    %rsi,%rdi
   10858:	mov    %r8,%rsi
   1085b:	callq  54c0 <memcpy@plt>
   10860:	lea    (%r14,%r15,1),%rax
   10864:	mov    %rax,0x18(%r13)
   10868:	sub    %r15,%r12
   1086b:	mov    %r12,0x20(%r13)
   1086f:	mov    -0x20(%rbp),%r15
   10873:	mov    -0x18(%rbp),%r14
   10877:	mov    -0x10(%rbp),%r13
   1087b:	mov    -0x8(%rbp),%r12
   1087f:	leaveq 
   10880:	retq   
   10881:	data16 nopw %cs:0x0(%rax,%rax,1)
   1088c:	nopl   0x0(%rax)

0000000000010890 <png_image_skip_unused_chunks>:
   10890:	push   %rbp
   10891:	mov    %rsp,%rbp
   10894:	sub    $0x10,%rsp
   10898:	mov    %r15,-0x8(%rbp)
   1089c:	mov    $0x1,%esi
   108a1:	xor    %edx,%edx
   108a3:	mov    $0xffffffffffffffff,%rcx
   108aa:	mov    %rdi,%r15
   108ad:	callq  5690 <png_set_keep_unknown_chunks@plt>
   108b2:	mov    %r15,%rdi
   108b5:	lea    0x1d549(%rip),%rdx        # 2de05 <chunks_to_process.34>
   108bc:	mov    $0x6,%ecx
   108c1:	xor    %esi,%esi
   108c3:	callq  5690 <png_set_keep_unknown_chunks@plt>
   108c8:	mov    -0x8(%rbp),%r15
   108cc:	leaveq 
   108cd:	retq   
   108ce:	xchg   %ax,%ax

00000000000108d0 <set_file_encoding>:
   108d0:	push   %rbp
   108d1:	mov    %rsp,%rbp
   108d4:	sub    $0x10,%rsp
   108d8:	mov    %r14,-0x8(%rbp)
   108dc:	mov    %r15,-0x10(%rbp)
   108e0:	mov    (%rdi),%rax
   108e3:	mov    (%rax),%rax
   108e6:	mov    (%rax),%rax
   108e9:	movslq 0x498(%rax),%r15
   108f0:	mov    %rdi,%r14
   108f3:	mov    %r15,%rdi
   108f6:	callq  8b20 <png_gamma_significant>
   108fb:	test   %eax,%eax
   108fd:	jne    10911 <set_file_encoding+0x41>
   108ff:	movl   $0x4,0x40(%r14)
   10907:	mov    -0x10(%rbp),%r15
   1090b:	mov    -0x8(%rbp),%r14
   1090f:	leaveq 
   10910:	retq   
   10911:	mov    %r15,%rdi
   10914:	callq  106c0 <png_gamma_not_sRGB>
   10919:	test   %eax,%eax
   1091b:	jne    1092f <set_file_encoding+0x5f>
   1091d:	movl   $0x1,0x40(%r14)
   10925:	mov    -0x10(%rbp),%r15
   10929:	mov    -0x8(%rbp),%r14
   1092d:	leaveq 
   1092e:	retq   
   1092f:	mov    %r15,%rdi
   10932:	movl   $0x3,0x40(%r14)
   1093a:	callq  8a50 <png_reciprocal>
   1093f:	mov    %eax,0x44(%r14)
   10943:	mov    -0x10(%rbp),%r15
   10947:	mov    -0x8(%rbp),%r14
   1094b:	leaveq 
   1094c:	retq   
   1094d:	nopl   (%rax)

0000000000010950 <decode_gamma>:
   10950:	push   %rbp
   10951:	mov    %rsp,%rbp
   10954:	sub    $0x10,%rsp
   10958:	cmp    $0x3,%edx
   1095b:	jne    10961 <decode_gamma+0x11>
   1095d:	movslq 0x40(%rdi),%rdx
   10961:	test   %edx,%edx
   10963:	jne    10990 <decode_gamma+0x40>
   10965:	mov    %rdi,%rax
   10968:	mov    %r14,-0x8(%rbp)
   1096c:	mov    %r15,-0x10(%rbp)
   10970:	mov    %rsi,%r14
   10973:	mov    %rdi,%r15
   10976:	mov    %rax,%rdi
   10979:	callq  108d0 <set_file_encoding>
   1097e:	mov    %r14,%rsi
   10981:	mov    %r15,%rdi
   10984:	movslq 0x40(%rdi),%rdx
   10988:	mov    -0x10(%rbp),%r15
   1098c:	mov    -0x8(%rbp),%r14
   10990:	cmp    $0x2,%edx
   10993:	jle    109b4 <decode_gamma+0x64>
   10995:	cmp    $0x3,%edx
   10998:	je     109c3 <decode_gamma+0x73>
   1099a:	cmp    $0x4,%edx
   1099d:	je     109dc <decode_gamma+0x8c>
   1099f:	mov    (%rdi),%rax
   109a2:	mov    (%rax),%rax
   109a5:	mov    (%rax),%rdi
   109a8:	lea    0x1d474(%rip),%rsi        # 2de23 <chunks_to_process.34+0x1e>
   109af:	callq  5470 <png_error@plt>
   109b4:	cmp    $0x1,%edx
   109b7:	je     109e6 <decode_gamma+0x96>
   109b9:	cmp    $0x2,%edx
   109bc:	jne    1099f <decode_gamma+0x4f>
   109be:	mov    %rsi,%rax
   109c1:	leaveq 
   109c2:	retq   
   109c3:	mov    %rsi,%rax
   109c6:	shl    $0x8,%eax
   109c9:	add    %esi,%eax
   109cb:	movslq 0x44(%rdi),%rsi
   109cf:	mov    %rax,%rdi
   109d2:	callq  8b80 <png_gamma_16bit_correct>
   109d7:	movzwl %ax,%eax
   109da:	leaveq 
   109db:	retq   
   109dc:	mov    %rsi,%rax
   109df:	shl    $0x8,%eax
   109e2:	add    %esi,%eax
   109e4:	leaveq 
   109e5:	retq   
   109e6:	lea    0x1b79f(%rip),%rcx        # 2c18c <png_sRGB_table>
   109ed:	mov    %esi,%eax
   109ef:	movzwl (%rcx,%rax,2),%eax
   109f3:	leaveq 
   109f4:	retq   
   109f5:	data16 nopw %cs:0x0(%rax,%rax,1)

0000000000010a00 <png_colormap_compose>:
   10a00:	push   %rbp
   10a01:	mov    %rsp,%rbp
   10a04:	sub    $0x20,%rsp
   10a08:	mov    %r12,-0x8(%rbp)
   10a0c:	mov    %r13,-0x10(%rbp)
   10a10:	mov    %r14,-0x18(%rbp)
   10a14:	mov    %r15,-0x20(%rbp)
   10a18:	mov    %rbx,%r12
   10a1b:	mov    %rcx,%rbx
   10a1e:	mov    %r9,%r13
   10a21:	mov    %r8,%r14
   10a24:	mov    %rdi,%r15
   10a27:	callq  10950 <decode_gamma>
   10a2c:	mov    %r14,%rsi
   10a2f:	mov    %rax,%r14
   10a32:	mov    %r15,%rdi
   10a35:	mov    %r13,%rdx
   10a38:	callq  10950 <decode_gamma>
   10a3d:	mov    $0xff,%ecx
   10a42:	sub    %ebx,%ecx
   10a44:	imul   %eax,%ecx
   10a47:	imul   %r14d,%ebx
   10a4b:	add    %ebx,%ecx
   10a4d:	cmp    $0x2,%r13d
   10a51:	je     10a9c <png_colormap_compose+0x9c>
   10a53:	mov    %rcx,%rax
   10a56:	shr    $0xf,%eax
   10a59:	mov    %eax,%edx
   10a5b:	lea    0x1bd2a(%rip),%rax        # 2c78c <png_sRGB_delta>
   10a62:	movzbl (%rdx,%rax,1),%eax
   10a66:	and    $0x7fff,%ecx
   10a6c:	imul   %ecx,%eax
   10a6f:	shr    $0xc,%eax
   10a72:	lea    0x1b913(%rip),%rcx        # 2c38c <png_sRGB_base>
   10a79:	movzwl (%rcx,%rdx,2),%ecx
   10a7d:	add    %ecx,%eax
   10a7f:	and    $0xff00,%eax
   10a84:	shr    $0x8,%eax
   10a87:	mov    %r12,%rbx
   10a8a:	mov    -0x20(%rbp),%r15
   10a8e:	mov    -0x18(%rbp),%r14
   10a92:	mov    -0x10(%rbp),%r13
   10a96:	mov    -0x8(%rbp),%r12
   10a9a:	leaveq 
   10a9b:	retq   
   10a9c:	mov    %rcx,%rax
   10a9f:	shl    $0x8,%eax
   10aa2:	add    %ecx,%eax
   10aa4:	mov    %rax,%rcx
   10aa7:	shr    $0x10,%ecx
   10aaa:	lea    0x8000(%rcx,%rax,1),%eax
   10ab1:	shr    $0x10,%eax
   10ab4:	mov    %r12,%rbx
   10ab7:	mov    -0x20(%rbp),%r15
   10abb:	mov    -0x18(%rbp),%r14
   10abf:	mov    -0x10(%rbp),%r13
   10ac3:	mov    -0x8(%rbp),%r12
   10ac7:	leaveq 
   10ac8:	retq   
   10ac9:	nopl   0x0(%rax)

0000000000010ad0 <png_create_colormap_entry>:
   10ad0:	push   %rbp
   10ad1:	mov    %rsp,%rbp
   10ad4:	sub    $0x80,%rsp
   10adb:	mov    %r15,-0x60(%rbp)
   10adf:	mov    %r14,-0x58(%rbp)
   10ae3:	mov    $0x1,%r10d
   10ae9:	mov    %r10,-0x20(%rbp)
   10aed:	mov    $0x2,%r15d
   10af3:	mov    %r15,-0x10(%rbp)
   10af7:	mov    (%rdi),%r11
   10afa:	mov    0x14(%r11),%eax
   10afe:	mov    %rax,%r14
   10b01:	and    $0x4,%r14d
   10b05:	test   %r14d,%r14d
   10b08:	jne    10b0d <png_create_colormap_entry+0x3d>
   10b0a:	mov    %r10,%r15
   10b0d:	xor    %r14d,%r14d
   10b10:	mov    %r14,-0x28(%rbp)
   10b14:	and    $0x2,%eax
   10b17:	test   %eax,%eax
   10b19:	je     10b3d <png_create_colormap_entry+0x6d>
   10b1b:	cmp    $0xff,%esi
   10b21:	ja     10b4a <png_create_colormap_entry+0x7a>
   10b23:	movslq 0x10(%rbp),%rax
   10b27:	cmp    $0x3,%eax
   10b2a:	je     10b5c <png_create_colormap_entry+0x8c>
   10b2c:	mov    %rbx,%r10
   10b2f:	mov    %rcx,%rbx
   10b32:	mov    %r13,%rcx
   10b35:	mov    %r8,%r13
   10b38:	jmpq   10bcb <png_create_colormap_entry+0xfb>
   10b3d:	cmp    %edx,%ecx
   10b3f:	je     10c11 <png_create_colormap_entry+0x141>
   10b45:	mov    %r10,%r14
   10b48:	jmp    10b1b <png_create_colormap_entry+0x4b>
   10b4a:	mov    (%r11),%rax
   10b4d:	mov    (%rax),%rdi
   10b50:	lea    0x1d2f1(%rip),%rsi        # 2de48 <chunks_to_process.34+0x43>
   10b57:	callq  5470 <png_error@plt>
   10b5c:	movslq 0x40(%rdi),%rax
   10b60:	test   %eax,%eax
   10b62:	je     10b72 <png_create_colormap_entry+0xa2>
   10b64:	mov    %rbx,%r10
   10b67:	mov    %rcx,%rbx
   10b6a:	mov    %r13,%rcx
   10b6d:	mov    %r8,%r13
   10b70:	jmp    10bc7 <png_create_colormap_entry+0xf7>
   10b72:	mov    %rdi,%rax
   10b75:	mov    %r9,-0x38(%rbp)
   10b79:	mov    %r15,-0x78(%rbp)
   10b7d:	mov    %r11,-0x70(%rbp)
   10b81:	mov    %rsi,-0x40(%rbp)
   10b85:	mov    %rbx,-0x48(%rbp)
   10b89:	mov    %r12,-0x50(%rbp)
   10b8d:	mov    %r13,-0x68(%rbp)
   10b91:	mov    %rcx,%rbx
   10b94:	mov    %rdx,%r12
   10b97:	mov    %r8,%r13
   10b9a:	mov    %rdi,%r15
   10b9d:	mov    %rax,%rdi
   10ba0:	callq  108d0 <set_file_encoding>
   10ba5:	mov    %r12,%rdx
   10ba8:	mov    %r15,%rdi
   10bab:	mov    -0x68(%rbp),%rcx
   10baf:	mov    -0x50(%rbp),%r12
   10bb3:	mov    -0x48(%rbp),%r10
   10bb7:	mov    -0x40(%rbp),%rsi
   10bbb:	mov    -0x70(%rbp),%r11
   10bbf:	mov    -0x78(%rbp),%r15
   10bc3:	mov    -0x38(%rbp),%r9
   10bc7:	movslq 0x40(%rdi),%rax
   10bcb:	lea    0x1b7ba(%rip),%r8        # 2c38c <png_sRGB_base>
   10bd2:	mov    %rcx,-0x50(%rbp)
   10bd6:	lea    0x1bbaf(%rip),%rcx        # 2c78c <png_sRGB_delta>
   10bdd:	cmp    $0x3,%eax
   10be0:	je     10c22 <png_create_colormap_entry+0x152>
   10be2:	cmp    $0x4,%eax
   10be5:	je     10d61 <png_create_colormap_entry+0x291>
   10beb:	cmp    $0x1,%eax
   10bee:	jne    10dbc <png_create_colormap_entry+0x2ec>
   10bf4:	test   %r14d,%r14d
   10bf7:	jg     10e75 <png_create_colormap_entry+0x3a5>
   10bfd:	cmp    $0x2,%r15d
   10c01:	je     10e75 <png_create_colormap_entry+0x3a5>
   10c07:	mov    $0x1,%eax
   10c0c:	jmpq   10dbc <png_create_colormap_entry+0x2ec>
   10c11:	cmp    %r8d,%ecx
   10c14:	je     10b1b <png_create_colormap_entry+0x4b>
   10c1a:	mov    %r10,%r14
   10c1d:	jmpq   10b1b <png_create_colormap_entry+0x4b>
   10c22:	mov    %rdx,%rax
   10c25:	shl    $0x8,%eax
   10c28:	add    %eax,%edx
   10c2a:	movslq 0x44(%rdi),%rax
   10c2e:	mov    %r12,-0x48(%rbp)
   10c32:	mov    %rax,%r12
   10c35:	mov    %r9,-0x18(%rbp)
   10c39:	mov    %r11,-0x68(%rbp)
   10c3d:	mov    %rsi,-0x30(%rbp)
   10c41:	mov    %r10,-0x40(%rbp)
   10c45:	mov    %rcx,-0x78(%rbp)
   10c49:	mov    %r8,-0x70(%rbp)
   10c4d:	mov    %rdi,-0x38(%rbp)
   10c51:	mov    %r12,%rsi
   10c54:	mov    %rax,%r12
   10c57:	mov    %rdx,%rdi
   10c5a:	callq  8b80 <png_gamma_16bit_correct>
   10c5f:	mov    %rbx,%rcx
   10c62:	shl    $0x8,%ecx
   10c65:	lea    (%rbx,%rcx,1),%edi
   10c68:	mov    %rax,%rbx
   10c6b:	mov    %r12,%rsi
   10c6e:	callq  8b80 <png_gamma_16bit_correct>
   10c73:	movzwl %bx,%ecx
   10c76:	movzwl %ax,%ebx
   10c79:	mov    %r13,%rax
   10c7c:	shl    $0x8,%eax
   10c7f:	lea    0x0(%r13,%rax,1),%edi
   10c84:	mov    %r12,%rsi
   10c87:	mov    %rcx,%r12
   10c8a:	callq  8b80 <png_gamma_16bit_correct>
   10c8f:	movzwl %ax,%r13d
   10c93:	test   %r14d,%r14d
   10c96:	jg     10d8a <png_create_colormap_entry+0x2ba>
   10c9c:	cmp    $0x2,%r15d
   10ca0:	je     10d8a <png_create_colormap_entry+0x2ba>
   10ca6:	mov    %r12,%rax
   10ca9:	shl    $0x8,%eax
   10cac:	sub    %r12d,%eax
   10caf:	mov    %rax,%rcx
   10cb2:	shr    $0xf,%ecx
   10cb5:	mov    %ecx,%esi
   10cb7:	mov    -0x78(%rbp),%rcx
   10cbb:	movzbl (%rsi,%rcx,1),%edx
   10cbf:	and    $0x7fff,%eax
   10cc4:	imul   %eax,%edx
   10cc7:	shr    $0xc,%edx
   10cca:	mov    -0x70(%rbp),%r8
   10cce:	movzwl (%r8,%rsi,2),%eax
   10cd3:	add    %eax,%edx
   10cd5:	and    $0xff00,%edx
   10cdb:	shr    $0x8,%edx
   10cde:	mov    %rbx,%rax
   10ce1:	shl    $0x8,%eax
   10ce4:	sub    %ebx,%eax
   10ce6:	mov    %rax,%rsi
   10ce9:	shr    $0xf,%esi
   10cec:	mov    %esi,%edi
   10cee:	movzbl (%rdi,%rcx,1),%esi
   10cf2:	and    $0x7fff,%eax
   10cf7:	imul   %eax,%esi
   10cfa:	shr    $0xc,%esi
   10cfd:	movzwl (%r8,%rdi,2),%eax
   10d02:	lea    (%rsi,%rax,1),%ebx
   10d05:	and    $0xff00,%ebx
   10d0b:	shr    $0x8,%ebx
   10d0e:	mov    %r13,%rax
   10d11:	shl    $0x8,%eax
   10d14:	sub    %r13d,%eax
   10d17:	mov    %rax,%rsi
   10d1a:	shr    $0xf,%esi
   10d1d:	mov    %esi,%edi
   10d1f:	movzbl (%rdi,%rcx,1),%esi
   10d23:	and    $0x7fff,%eax
   10d28:	imul   %eax,%esi
   10d2b:	shr    $0xc,%esi
   10d2e:	movzwl (%r8,%rdi,2),%eax
   10d33:	lea    (%rsi,%rax,1),%r13d
   10d37:	and    $0xff00,%r13d
   10d3e:	shr    $0x8,%r13d
   10d42:	mov    -0x38(%rbp),%rdi
   10d46:	mov    $0x1,%eax
   10d4b:	mov    -0x48(%rbp),%r12
   10d4f:	mov    -0x40(%rbp),%r10
   10d53:	mov    -0x30(%rbp),%rsi
   10d57:	mov    -0x68(%rbp),%r11
   10d5b:	mov    -0x18(%rbp),%r9
   10d5f:	jmp    10dbc <png_create_colormap_entry+0x2ec>
   10d61:	mov    %rdx,%rax
   10d64:	shl    $0x8,%eax
   10d67:	add    %eax,%edx
   10d69:	mov    %rbx,%rax
   10d6c:	shl    $0x8,%eax
   10d6f:	add    %eax,%ebx
   10d71:	mov    %r13,%rax
   10d74:	shl    $0x8,%eax
   10d77:	add    %eax,%r13d
   10d7a:	mov    %r9,%rax
   10d7d:	shl    $0x8,%eax
   10d80:	add    %eax,%r9d
   10d83:	mov    $0x2,%eax
   10d88:	jmp    10dbc <png_create_colormap_entry+0x2ec>
   10d8a:	mov    -0x18(%rbp),%rcx
   10d8e:	mov    %rcx,%rax
   10d91:	shl    $0x8,%eax
   10d94:	lea    (%rcx,%rax,1),%r9d
   10d98:	mov    %r12,%rdx
   10d9b:	mov    -0x38(%rbp),%rdi
   10d9f:	mov    -0x70(%rbp),%r8
   10da3:	mov    -0x78(%rbp),%rcx
   10da7:	mov    -0x48(%rbp),%r12
   10dab:	mov    -0x40(%rbp),%r10
   10daf:	mov    -0x30(%rbp),%rsi
   10db3:	mov    -0x68(%rbp),%r11
   10db7:	mov    $0x2,%eax
   10dbc:	cmp    $0x2,%eax
   10dbf:	je     10ea3 <png_create_colormap_entry+0x3d3>
   10dc5:	cmp    %eax,%r15d
   10dc8:	jne    10ec0 <png_create_colormap_entry+0x3f0>
   10dce:	mov    0x14(%r11),%r8d
   10dd2:	mov    %r8,%rax
   10dd5:	and    $0x20,%eax
   10dd8:	test   %eax,%eax
   10dda:	jne    10ed2 <png_create_colormap_entry+0x402>
   10de0:	mov    $0x2,%ecx
   10de5:	pushq  -0x28(%rbp)
   10de8:	pushq  -0x10(%rbp)
   10deb:	pushq  -0x28(%rbp)
   10dee:	pushq  -0x20(%rbp)
   10df1:	popq   -0x78(%rbp)
   10df4:	popq   -0x30(%rbp)
   10df7:	popq   -0x18(%rbp)
   10dfa:	popq   -0x8(%rbp)
   10dfd:	mov    %r8,%rax
   10e00:	and    $0x10,%eax
   10e03:	test   %eax,%eax
   10e05:	jne    10e13 <png_create_colormap_entry+0x343>
   10e07:	pushq  -0x28(%rbp)
   10e0a:	pushq  -0x10(%rbp)
   10e0d:	popq   -0x28(%rbp)
   10e10:	popq   -0x10(%rbp)
   10e13:	cmp    $0x2,%r15d
   10e17:	je     10f02 <png_create_colormap_entry+0x432>
   10e1d:	and    $0x3,%r8d
   10e21:	lea    0x1(%r8),%ecx
   10e25:	imul   %ecx,%esi
   10e28:	mov    %esi,%eax
   10e2a:	add    0x18(%rdi),%rax
   10e2e:	cmp    $0x2,%ecx
   10e31:	jbe    10f73 <png_create_colormap_entry+0x4a3>
   10e37:	cmp    $0x3,%ecx
   10e3a:	jne    10f96 <png_create_colormap_entry+0x4c6>
   10e40:	mov    -0x30(%rbp),%rcx
   10e44:	mov    -0x28(%rbp),%rsi
   10e48:	add    %ecx,%esi
   10e4a:	movslq %esi,%rsi
   10e4d:	mov    %r13b,(%rax,%rsi,1)
   10e51:	mov    -0x20(%rbp),%rsi
   10e55:	mov    %bl,(%rax,%rsi,1)
   10e58:	mov    -0x10(%rbp),%rsi
   10e5c:	add    %esi,%ecx
   10e5e:	movslq %ecx,%rcx
   10e61:	mov    %dl,(%rcx,%rax,1)
   10e64:	mov    %r10,%rbx
   10e67:	mov    -0x50(%rbp),%r13
   10e6b:	mov    -0x58(%rbp),%r14
   10e6f:	mov    -0x60(%rbp),%r15
   10e73:	leaveq 
   10e74:	retq   
   10e75:	lea    0x1b310(%rip),%rax        # 2c18c <png_sRGB_table>
   10e7c:	mov    %edx,%edx
   10e7e:	movzwl (%rax,%rdx,2),%edx
   10e82:	mov    %ebx,%ebx
   10e84:	movzwl (%rax,%rbx,2),%ebx
   10e88:	mov    %r13d,%r13d
   10e8b:	movzwl (%rax,%r13,2),%r13d
   10e90:	mov    %r9,%rax
   10e93:	shl    $0x8,%eax
   10e96:	add    %eax,%r9d
   10e99:	mov    $0x2,%eax
   10e9e:	jmpq   10dbc <png_create_colormap_entry+0x2ec>
   10ea3:	test   %r14d,%r14d
   10ea6:	jg     10fb0 <png_create_colormap_entry+0x4e0>
   10eac:	cmp    $0x1,%r15d
   10eb0:	je     1106b <png_create_colormap_entry+0x59b>
   10eb6:	mov    $0x2,%eax
   10ebb:	jmpq   10dc5 <png_create_colormap_entry+0x2f5>
   10ec0:	mov    (%r11),%rax
   10ec3:	mov    (%rax),%rdi
   10ec6:	lea    0x1cf98(%rip),%rsi        # 2de65 <chunks_to_process.34+0x60>
   10ecd:	callq  5470 <png_error@plt>
   10ed2:	mov    %r8,%rax
   10ed5:	and    $0x1,%eax
   10ed8:	test   %eax,%eax
   10eda:	jne    11129 <png_create_colormap_entry+0x659>
   10ee0:	mov    $0x2,%ecx
   10ee5:	pushq  -0x28(%rbp)
   10ee8:	pushq  -0x10(%rbp)
   10eeb:	pushq  -0x28(%rbp)
   10eee:	pushq  -0x20(%rbp)
   10ef1:	popq   -0x78(%rbp)
   10ef4:	popq   -0x30(%rbp)
   10ef7:	popq   -0x18(%rbp)
   10efa:	popq   -0x8(%rbp)
   10efd:	jmpq   10dfd <png_create_colormap_entry+0x32d>
   10f02:	and    $0x3,%r8d
   10f06:	lea    0x1(%r8),%r14d
   10f0a:	imul   %r14d,%esi
   10f0e:	mov    %esi,%eax
   10f10:	lea    (%rax,%rax,1),%rsi
   10f14:	add    0x18(%rdi),%rsi
   10f18:	mov    $0x80008001,%r11d
   10f1e:	cmp    $0x2,%r14d
   10f22:	jbe    11151 <png_create_colormap_entry+0x681>
   10f28:	cmp    $0x3,%r14d
   10f2c:	jne    11175 <png_create_colormap_entry+0x6a5>
   10f32:	mov    -0x30(%rbp),%rdi
   10f36:	cmp    $0xfffe,%r9d
   10f3d:	jbe    11190 <png_create_colormap_entry+0x6c0>
   10f43:	mov    -0x28(%rbp),%rax
   10f47:	add    %edi,%eax
   10f49:	movslq %eax,%rax
   10f4c:	mov    %r13w,(%rsi,%rax,2)
   10f51:	mov    %bx,(%rsi,%rcx,1)
   10f55:	mov    -0x10(%rbp),%rax
   10f59:	add    %edi,%eax
   10f5b:	movslq %eax,%rax
   10f5e:	mov    %dx,(%rsi,%rax,2)
   10f62:	mov    %r10,%rbx
   10f65:	mov    -0x50(%rbp),%r13
   10f69:	mov    -0x58(%rbp),%r14
   10f6d:	mov    -0x60(%rbp),%r15
   10f71:	leaveq 
   10f72:	retq   
   10f73:	test   %r8d,%r8d
   10f76:	je     111af <png_create_colormap_entry+0x6df>
   10f7c:	cmp    $0x2,%ecx
   10f7f:	je     111a7 <png_create_colormap_entry+0x6d7>
   10f85:	mov    %r10,%rbx
   10f88:	mov    -0x50(%rbp),%r13
   10f8c:	mov    -0x58(%rbp),%r14
   10f90:	mov    -0x60(%rbp),%r15
   10f94:	leaveq 
   10f95:	retq   
   10f96:	cmp    $0x4,%ecx
   10f99:	je     111c7 <png_create_colormap_entry+0x6f7>
   10f9f:	mov    %r10,%rbx
   10fa2:	mov    -0x50(%rbp),%r13
   10fa6:	mov    -0x58(%rbp),%r14
   10faa:	mov    -0x60(%rbp),%r15
   10fae:	leaveq 
   10faf:	retq   
   10fb0:	lea    (%rdx,%rdx,2),%eax
   10fb3:	shl    $0x3,%eax
   10fb6:	lea    (%rax,%rdx,2),%eax
   10fb9:	add    %edx,%eax
   10fbb:	shl    $0x4,%eax
   10fbe:	lea    (%rax,%rdx,2),%eax
   10fc1:	add    %edx,%eax
   10fc3:	shl    $0x4,%eax
   10fc6:	lea    (%rax,%rdx,8),%r14d
   10fca:	lea    (%rbx,%rbx,2),%eax
   10fcd:	shl    $0x6,%eax
   10fd0:	lea    (%rbx,%rbx,8),%edx
   10fd3:	sub    %edx,%eax
   10fd5:	shl    $0x7,%eax
   10fd8:	lea    (%rax,%rbx,8),%eax
   10fdb:	lea    (%rax,%rbx,2),%eax
   10fde:	lea    (%r14,%rax,1),%ebx
   10fe2:	lea    0x0(%r13,%r13,8),%eax
   10fe7:	lea    0x0(%r13,%rax,4),%eax
   10fec:	shl    $0x6,%eax
   10fef:	lea    0x0(%r13,%r13,1),%edx
   10ff4:	sub    %edx,%eax
   10ff6:	add    %ebx,%eax
   10ff8:	cmp    $0x2,%r15d
   10ffc:	je     111dd <png_create_colormap_entry+0x70d>
   11002:	add    $0x80,%eax
   11007:	mov    %rax,%rdx
   1100a:	and    $0xffffff00,%edx
   11010:	shr    $0x8,%eax
   11013:	sub    %eax,%edx
   11015:	add    $0x40,%edx
   11018:	mov    %rdx,%rax
   1101b:	shr    $0x16,%eax
   1101e:	mov    %eax,%ebx
   11020:	movzbl (%rbx,%rcx,1),%eax
   11024:	and    $0x3fff80,%edx
   1102a:	shr    $0x7,%edx
   1102d:	imul   %edx,%eax
   11030:	shr    $0xc,%eax
   11033:	movzwl (%r8,%rbx,2),%ecx
   11038:	lea    (%rax,%rcx,1),%r13d
   1103c:	and    $0xff00,%r13d
   11043:	shr    $0x8,%r13d
   11047:	mov    %r9,%rax
   1104a:	shl    $0x8,%eax
   1104d:	sub    %r9d,%eax
   11050:	lea    0x807f(%rax),%r9d
   11057:	shr    $0x10,%r9d
   1105b:	mov    $0x1,%eax
   11060:	mov    %r13,%rdx
   11063:	mov    %rdx,%rbx
   11066:	jmpq   10dc5 <png_create_colormap_entry+0x2f5>
   1106b:	mov    %rdx,%rax
   1106e:	shl    $0x8,%eax
   11071:	neg    %edx
   11073:	add    %eax,%edx
   11075:	mov    %rdx,%rax
   11078:	shr    $0xf,%eax
   1107b:	mov    %eax,%r14d
   1107e:	movzbl (%r14,%rcx,1),%eax
   11083:	and    $0x7fff,%edx
   11089:	imul   %edx,%eax
   1108c:	shr    $0xc,%eax
   1108f:	movzwl (%r8,%r14,2),%edx
   11094:	add    %eax,%edx
   11096:	and    $0xff00,%edx
   1109c:	shr    $0x8,%edx
   1109f:	mov    %rbx,%rax
   110a2:	shl    $0x8,%eax
   110a5:	neg    %ebx
   110a7:	add    %eax,%ebx
   110a9:	mov    %rbx,%rax
   110ac:	shr    $0xf,%eax
   110af:	mov    %eax,%r14d
   110b2:	movzbl (%r14,%rcx,1),%eax
   110b7:	and    $0x7fff,%ebx
   110bd:	imul   %ebx,%eax
   110c0:	shr    $0xc,%eax
   110c3:	movzwl (%r8,%r14,2),%ebx
   110c8:	add    %eax,%ebx
   110ca:	and    $0xff00,%ebx
   110d0:	shr    $0x8,%ebx
   110d3:	mov    %r13,%rax
   110d6:	shl    $0x8,%eax
   110d9:	sub    %r13d,%eax
   110dc:	mov    %rax,%r13
   110df:	shr    $0xf,%r13d
   110e3:	mov    %r13d,%r13d
   110e6:	movzbl 0x0(%r13,%rcx,1),%ecx
   110ec:	and    $0x7fff,%eax
   110f1:	imul   %eax,%ecx
   110f4:	shr    $0xc,%ecx
   110f7:	movzwl (%r8,%r13,2),%eax
   110fc:	lea    (%rcx,%rax,1),%r13d
   11100:	and    $0xff00,%r13d
   11107:	shr    $0x8,%r13d
   1110b:	mov    %r9,%rax
   1110e:	shl    $0x8,%eax
   11111:	sub    %r9d,%eax
   11114:	lea    0x807f(%rax),%r9d
   1111b:	shr    $0x10,%r9d
   1111f:	mov    $0x1,%eax
   11124:	jmpq   10dc5 <png_create_colormap_entry+0x2f5>
   11129:	mov    $0x4,%ecx
   1112e:	pushq  -0x10(%rbp)
   11131:	pushq  -0x28(%rbp)
   11134:	pushq  -0x10(%rbp)
   11137:	pushq  -0x20(%rbp)
   1113a:	pushq  -0x28(%rbp)
   1113d:	popq   -0x78(%rbp)
   11140:	popq   -0x30(%rbp)
   11143:	popq   -0x20(%rbp)
   11146:	popq   -0x18(%rbp)
   11149:	popq   -0x8(%rbp)
   1114c:	jmpq   10dfd <png_create_colormap_entry+0x32d>
   11151:	test   %r8d,%r8d
   11154:	je     11201 <png_create_colormap_entry+0x731>
   1115a:	cmp    $0x2,%r14d
   1115e:	je     111f8 <png_create_colormap_entry+0x728>
   11164:	mov    %r10,%rbx
   11167:	mov    -0x50(%rbp),%r13
   1116b:	mov    -0x58(%rbp),%r14
   1116f:	mov    -0x60(%rbp),%r15
   11173:	leaveq 
   11174:	retq   
   11175:	cmp    $0x4,%r14d
   11179:	je     11227 <png_create_colormap_entry+0x757>
   1117f:	mov    %r10,%rbx
   11182:	mov    -0x50(%rbp),%r13
   11186:	mov    -0x58(%rbp),%r14
   1118a:	mov    -0x60(%rbp),%r15
   1118e:	leaveq 
   1118f:	retq   
   11190:	test   %r9d,%r9d
   11193:	jne    11236 <png_create_colormap_entry+0x766>
   11199:	xor    %r13d,%r13d
   1119c:	mov    %r13,%rdx
   1119f:	mov    %rdx,%rbx
   111a2:	jmpq   10f43 <png_create_colormap_entry+0x473>
   111a7:	mov    -0x78(%rbp),%rcx
   111ab:	mov    %r9b,(%rax,%rcx,1)
   111af:	mov    -0x30(%rbp),%rcx
   111b3:	mov    %bl,(%rax,%rcx,1)
   111b6:	mov    %r10,%rbx
   111b9:	mov    -0x50(%rbp),%r13
   111bd:	mov    -0x58(%rbp),%r14
   111c1:	mov    -0x60(%rbp),%r15
   111c5:	leaveq 
   111c6:	retq   
   111c7:	mov    -0x30(%rbp),%rcx
   111cb:	test   %ecx,%ecx
   111cd:	jg     11284 <png_create_colormap_entry+0x7b4>
   111d3:	mov    $0x3,%esi
   111d8:	jmpq   11286 <png_create_colormap_entry+0x7b6>
   111dd:	lea    0x4000(%rax),%r13d
   111e4:	shr    $0xf,%r13d
   111e8:	mov    $0x2,%eax
   111ed:	mov    %r13,%rdx
   111f0:	mov    %rdx,%rbx
   111f3:	jmpq   10dc5 <png_create_colormap_entry+0x2f5>
   111f8:	mov    -0x18(%rbp),%rax
   111fc:	mov    %r9w,(%rsi,%rax,1)
   11201:	cmp    $0xfffe,%r9d
   11208:	jbe    1128f <png_create_colormap_entry+0x7bf>
   1120e:	mov    -0x8(%rbp),%rax
   11212:	mov    %bx,(%rsi,%rax,1)
   11216:	mov    %r10,%rbx
   11219:	mov    -0x50(%rbp),%r13
   1121d:	mov    -0x58(%rbp),%r14
   11221:	mov    -0x60(%rbp),%r15
   11225:	leaveq 
   11226:	retq   
   11227:	mov    -0x30(%rbp),%rdi
   1122b:	test   %edi,%edi
   1122d:	jg     1129b <png_create_colormap_entry+0x7cb>
   1122f:	mov    $0x6,%eax
   11234:	jmp    1129d <png_create_colormap_entry+0x7cd>
   11236:	mov    %r9,%rax
   11239:	imul   %edx,%eax
   1123c:	lea    0x7fff(%rax),%edx
   11242:	mov    %r11,%rax
   11245:	mul    %edx
   11247:	mov    %rdx,%r8
   1124a:	shr    $0xf,%r8d
   1124e:	mov    %r9,%rax
   11251:	imul   %ebx,%eax
   11254:	lea    0x7fff(%rax),%edx
   1125a:	mov    %r11,%rax
   1125d:	mul    %edx
   1125f:	mov    %rdx,%rbx
   11262:	shr    $0xf,%ebx
   11265:	imul   %r13d,%r9d
   11269:	lea    0x7fff(%r9),%edx
   11270:	mov    %r11,%rax
   11273:	mul    %edx
   11275:	mov    %rdx,%r13
   11278:	shr    $0xf,%r13d
   1127c:	mov    %r8,%rdx
   1127f:	jmpq   10f43 <png_create_colormap_entry+0x473>
   11284:	xor    %esi,%esi
   11286:	mov    %r9b,(%rax,%rsi,1)
   1128a:	jmpq   10e44 <png_create_colormap_entry+0x374>
   1128f:	test   %r9d,%r9d
   11292:	jne    112a7 <png_create_colormap_entry+0x7d7>
   11294:	xor    %ebx,%ebx
   11296:	jmpq   1120e <png_create_colormap_entry+0x73e>
   1129b:	xor    %eax,%eax
   1129d:	mov    %r9w,(%rax,%rsi,1)
   112a2:	jmpq   10f36 <png_create_colormap_entry+0x466>
   112a7:	imul   %ebx,%r9d
   112ab:	lea    0x7fff(%r9),%ecx
   112b2:	mov    %r11,%rax
   112b5:	mul    %ecx
   112b7:	mov    %rdx,%rbx
   112ba:	shr    $0xf,%ebx
   112bd:	jmpq   1120e <png_create_colormap_entry+0x73e>
   112c2:	data16 nopw %cs:0x0(%rax,%rax,1)
   112cd:	nopl   (%rax)

00000000000112d0 <make_gray_file_colormap>:
   112d0:	push   %rbp
   112d1:	mov    %rsp,%rbp
   112d4:	sub    $0x20,%rsp
   112d8:	mov    %r13,-0x8(%rbp)
   112dc:	mov    %r14,-0x10(%rbp)
   112e0:	mov    %r15,-0x18(%rbp)
   112e4:	mov    %rdi,%r14
   112e7:	mov    $0xff,%r15d
   112ed:	xor    %r13d,%r13d
   112f0:	jmp    11314 <make_gray_file_colormap+0x44>
   112f2:	movl   $0x3,(%rsp)
   112f9:	mov    %r13,%rdx
   112fc:	mov    %r13,%rcx
   112ff:	mov    %r13,%r8
   11302:	mov    %r14,%rdi
   11305:	mov    %r13,%rsi
   11308:	mov    %r15,%r9
   1130b:	callq  10ad0 <png_create_colormap_entry>
   11310:	add    $0x1,%r13d
   11314:	cmp    $0xff,%r13d
   1131b:	jbe    112f2 <make_gray_file_colormap+0x22>
   1131d:	mov    %r13,%rax
   11320:	mov    -0x18(%rbp),%r15
   11324:	mov    -0x10(%rbp),%r14
   11328:	mov    -0x8(%rbp),%r13
   1132c:	leaveq 
   1132d:	retq   
   1132e:	xchg   %ax,%ax

0000000000011330 <make_gray_colormap>:
   11330:	push   %rbp
   11331:	mov    %rsp,%rbp
   11334:	sub    $0x20,%rsp
   11338:	mov    %r13,-0x8(%rbp)
   1133c:	mov    %r14,-0x10(%rbp)
   11340:	mov    %r15,-0x18(%rbp)
   11344:	mov    %rdi,%r14
   11347:	mov    $0xff,%r15d
   1134d:	xor    %r13d,%r13d
   11350:	jmp    11374 <make_gray_colormap+0x44>
   11352:	movl   $0x1,(%rsp)
   11359:	mov    %r13,%rdx
   1135c:	mov    %r13,%rcx
   1135f:	mov    %r13,%r8
   11362:	mov    %r14,%rdi
   11365:	mov    %r13,%rsi
   11368:	mov    %r15,%r9
   1136b:	callq  10ad0 <png_create_colormap_entry>
   11370:	add    $0x1,%r13d
   11374:	cmp    $0xff,%r13d
   1137b:	jbe    11352 <make_gray_colormap+0x22>
   1137d:	mov    %r13,%rax
   11380:	mov    -0x18(%rbp),%r15
   11384:	mov    -0x10(%rbp),%r14
   11388:	mov    -0x8(%rbp),%r13
   1138c:	leaveq 
   1138d:	retq   
   1138e:	xchg   %ax,%ax

0000000000011390 <make_ga_colormap>:
   11390:	push   %rbp
   11391:	mov    %rsp,%rbp
   11394:	sub    $0x30,%rsp
   11398:	mov    %r12,-0x10(%rbp)
   1139c:	mov    %r13,-0x18(%rbp)
   113a0:	mov    %r14,-0x20(%rbp)
   113a4:	mov    %r15,-0x28(%rbp)
   113a8:	mov    %rbx,%r15
   113ab:	mov    %rdi,%rbx
   113ae:	mov    $0xff,%r14d
   113b4:	xor    %esi,%esi
   113b6:	mov    $0x46ed2901,%r13d
   113bc:	jmp    113f2 <make_ga_colormap+0x62>
   113be:	sub    $0x10,%rsp
   113c2:	movl   $0x1,(%rsp)
   113c9:	mov    %rsi,%rax
   113cc:	shl    $0x8,%eax
   113cf:	lea    0x74(%rax),%ecx
   113d2:	mov    %r13,%rax
   113d5:	mul    %ecx
   113d7:	shr    $0x6,%edx
   113da:	mov    %rdx,%rcx
   113dd:	mov    %rdx,%r8
   113e0:	mov    %rbx,%rdi
   113e3:	mov    %r14,%r9
   113e6:	callq  10ad0 <png_create_colormap_entry>
   113eb:	add    $0x10,%rsp
   113ef:	mov    %r12,%rsi
   113f2:	lea    0x1(%rsi),%r12d
   113f6:	cmp    $0xe6,%esi
   113fc:	jbe    113be <make_ga_colormap+0x2e>
   113fe:	mov    %r14,%rdx
   11401:	sub    $0x10,%rsp
   11405:	movl   $0x1,(%rsp)
   1140c:	mov    %rdx,%rcx
   1140f:	mov    %rdx,%r8
   11412:	mov    %rbx,%rdi
   11415:	xor    %r13d,%r13d
   11418:	mov    %r13,%r9
   1141b:	callq  10ad0 <png_create_colormap_entry>
   11420:	add    $0x10,%rsp
   11424:	mov    $0x1,%eax
   11429:	mov    $0x33,%r14d
   1142f:	mov    %r15,-0x8(%rbp)
   11433:	jmp    1147b <make_ga_colormap+0xeb>
   11435:	sub    $0x10,%rsp
   11439:	movl   $0x1,(%rsp)
   11440:	mov    %r15,%rcx
   11443:	mov    %r15,%r8
   11446:	mov    %rbx,%rdi
   11449:	mov    %r12,%rsi
   1144c:	mov    %r15,%rdx
   1144f:	mov    %r14,%r9
   11452:	callq  10ad0 <png_create_colormap_entry>
   11457:	add    $0x10,%rsp
   1145b:	add    $0x1,%r12d
   1145f:	add    $0x33,%r15d
   11463:	add    $0x1,%r13d
   11467:	cmp    $0x5,%r13d
   1146b:	jbe    11435 <make_ga_colormap+0xa5>
   1146d:	mov    -0x30(%rbp),%rax
   11471:	add    $0x1,%eax
   11474:	add    $0x33,%r14d
   11478:	xor    %r13d,%r13d
   1147b:	cmp    $0x4,%eax
   1147e:	jbe    11499 <make_ga_colormap+0x109>
   11480:	mov    %r12,%rax
   11483:	mov    -0x28(%rbp),%r15
   11487:	mov    -0x20(%rbp),%r14
   1148b:	mov    -0x18(%rbp),%r13
   1148f:	mov    -0x10(%rbp),%r12
   11493:	mov    -0x8(%rbp),%rbx
   11497:	leaveq 
   11498:	retq   
   11499:	mov    %rax,-0x30(%rbp)
   1149d:	mov    %r13,%r15
   114a0:	jmp    11467 <make_ga_colormap+0xd7>
   114a2:	data16 nopw %cs:0x0(%rax,%rax,1)
   114ad:	nopl   (%rax)

00000000000114b0 <make_rgb_colormap>:
   114b0:	push   %rbp
   114b1:	mov    %rsp,%rbp
   114b4:	sub    $0x40,%rsp
   114b8:	mov    %rbx,-0x10(%rbp)
   114bc:	mov    %r12,-0x18(%rbp)
   114c0:	mov    %r13,-0x20(%rbp)
   114c4:	mov    %r14,-0x28(%rbp)
   114c8:	mov    %r15,-0x30(%rbp)
   114cc:	mov    %rdi,%rbx
   114cf:	xor    %r13d,%r13d
   114d2:	mov    $0xff,%r9d
   114d8:	mov    %r13,%rax
   114db:	mov    %rax,%r12
   114de:	mov    %r12,%r14
   114e1:	jmp    11540 <make_rgb_colormap+0x90>
   114e3:	sub    $0x10,%rsp
   114e7:	movl   $0x1,(%rsp)
   114ee:	mov    %rbx,%rdi
   114f1:	mov    %r12,%rsi
   114f4:	mov    %r14,%rdx
   114f7:	mov    %r15,%r8
   114fa:	callq  10ad0 <png_create_colormap_entry>
   114ff:	add    $0x10,%rsp
   11503:	add    $0x1,%r12d
   11507:	add    $0x33,%r15d
   1150b:	add    $0x1,%r13d
   1150f:	mov    $0xff,%r9d
   11515:	mov    -0x8(%rbp),%rcx
   11519:	cmp    $0x5,%r13d
   1151d:	jbe    114e3 <make_rgb_colormap+0x33>
   1151f:	add    $0x33,%ecx
   11522:	mov    -0x40(%rbp),%rax
   11526:	add    $0x1,%eax
   11529:	xor    %r13d,%r13d
   1152c:	mov    %rcx,-0x8(%rbp)
   11530:	cmp    $0x5,%eax
   11533:	jbe    1155e <make_rgb_colormap+0xae>
   11535:	mov    -0x38(%rbp),%rax
   11539:	add    $0x1,%eax
   1153c:	add    $0x33,%r14d
   11540:	cmp    $0x5,%eax
   11543:	jbe    11567 <make_rgb_colormap+0xb7>
   11545:	mov    %r12,%rax
   11548:	mov    -0x30(%rbp),%r15
   1154c:	mov    -0x28(%rbp),%r14
   11550:	mov    -0x20(%rbp),%r13
   11554:	mov    -0x18(%rbp),%r12
   11558:	mov    -0x10(%rbp),%rbx
   1155c:	leaveq 
   1155d:	retq   
   1155e:	mov    %rax,-0x40(%rbp)
   11562:	mov    %r13,%r15
   11565:	jmp    11519 <make_rgb_colormap+0x69>
   11567:	mov    %rax,-0x38(%rbp)
   1156b:	mov    %r13,%rax
   1156e:	mov    %rax,%rcx
   11571:	jmp    1152c <make_rgb_colormap+0x7c>
   11573:	data16 nopw %cs:0x0(%rax,%rax,1)
   1157e:	xchg   %ax,%ax

0000000000011580 <png_image_read_colormap>:
   11580:	push   %rbp
   11581:	mov    %rsp,%rbp
   11584:	sub    $0x130,%rsp
   1158b:	mov    (%rdi),%rdx
   1158e:	mov    (%rdx),%rax
   11591:	mov    (%rax),%rsi
   11594:	mov    $0x1,%r8d
   1159a:	mov    %r8,-0x100(%rbp)
   115a1:	mov    $0x2,%r10d
   115a7:	mov    0x14(%rdx),%eax
   115aa:	mov    %rax,%rcx
   115ad:	and    $0x4,%ecx
   115b0:	test   %ecx,%ecx
   115b2:	jne    115b7 <png_image_read_colormap+0x37>
   115b4:	mov    %r8,%r10
   115b7:	xor    %r9d,%r9d
   115ba:	mov    %r9,-0xb8(%rbp)
   115c1:	mov    $0xff,%r11d
   115c7:	mov    %r11,-0x88(%rbp)
   115ce:	mov    $0xffff,%r8d
   115d4:	mov    %r8,-0x80(%rbp)
   115d8:	movzbl 0x267(%rsi),%ecx
   115df:	and    $0x4,%ecx
   115e2:	test   %ecx,%ecx
   115e4:	jg     11608 <png_image_read_colormap+0x88>
   115e6:	movzwl 0x260(%rsi),%ecx
   115ed:	test   %cx,%cx
   115f0:	jne    11608 <png_image_read_colormap+0x88>
   115f2:	cmp    $0x2,%r10d
   115f6:	je     1162c <png_image_read_colormap+0xac>
   115f8:	mov    %r14,-0x30(%rbp)
   115fc:	mov    %r15,-0x38(%rbp)
   11600:	mov    %r11,%r8
   11603:	mov    %r8,%r9
   11606:	jmp    1163a <png_image_read_colormap+0xba>
   11608:	mov    %rax,%rcx
   1160b:	and    $0x1,%ecx
   1160e:	test   %ecx,%ecx
   11610:	jne    115f2 <png_image_read_colormap+0x72>
   11612:	cmp    $0x2,%r10d
   11616:	jne    1170c <png_image_read_colormap+0x18c>
   1161c:	mov    %r14,-0x30(%rbp)
   11620:	mov    %r15,-0x38(%rbp)
   11624:	mov    %r9,%r8
   11627:	mov    %r8,%r11
   1162a:	jmp    1163a <png_image_read_colormap+0xba>
   1162c:	mov    %r14,-0x30(%rbp)
   11630:	mov    %r15,-0x38(%rbp)
   11634:	mov    %r8,%r9
   11637:	mov    %r9,%r11
   1163a:	mov    %r9,-0xe0(%rbp)
   11641:	mov    %r11,-0xd8(%rbp)
   11648:	mov    %r8,-0xd0(%rbp)
   1164f:	movzwl 0x4e2(%rsi),%ecx
   11656:	and    $0x1,%ecx
   11659:	test   %ecx,%ecx
   1165b:	jne    1168c <png_image_read_colormap+0x10c>
   1165d:	mov    $0xb18f,%r14d
   11663:	movzbl 0x268(%rsi),%ecx
   1166a:	cmp    $0x10,%cl
   1166d:	je     1173f <png_image_read_colormap+0x1bf>
   11673:	movzwl 0x4e2(%rsi),%ecx
   1167a:	or     $0x1,%cx
   1167e:	mov    %cx,0x4e2(%rsi)
   11685:	mov    %r14d,0x498(%rsi)
   1168c:	movzbl 0x267(%rsi),%r14d
   11694:	cmp    $0x6,%r14b
   11698:	ja     11758 <png_image_read_colormap+0x1d8>
   1169e:	lea    0x1ace7(%rip),%rcx        # 2c38c <png_sRGB_base>
   116a5:	lea    0x1b0e0(%rip),%r15        # 2c78c <png_sRGB_delta>
   116ac:	mov    %r13,-0x28(%rbp)
   116b0:	lea    0x1aad5(%rip),%r13        # 2c18c <png_sRGB_table>
   116b7:	mov    %r13,-0x90(%rbp)
   116be:	mov    %r11d,%r13d
   116c1:	mov    %r13,-0x98(%rbp)
   116c8:	mov    $0x3,%r13d
   116ce:	mov    %r13,-0xb0(%rbp)
   116d5:	lea    0x1c23c(%rip),%r13        # 2d918 <png_pass_yinc.24+0x21>
   116dc:	movslq 0x0(%r13,%r14,4),%r13
   116e1:	mov    %r12,-0x20(%rbp)
   116e5:	lea    0x1c22c(%rip),%r12        # 2d918 <png_pass_yinc.24+0x21>
   116ec:	add    %r13,%r12
   116ef:	jmpq   *%r12
   116f2:	movzwl 0x260(%rsi),%r15d
   116fa:	test   %r15w,%r15w
   116fe:	jne    118d4 <png_image_read_colormap+0x354>
   11704:	xor    %r14d,%r14d
   11707:	jmpq   118db <png_image_read_colormap+0x35b>
   1170c:	mov    0x20(%rdi),%r8
   11710:	test   %r8,%r8
   11713:	je     11955 <png_image_read_colormap+0x3d5>
   11719:	movzbl 0x1(%r8),%r11d
   1171e:	mov    %rax,%rcx
   11721:	and    $0x2,%ecx
   11724:	test   %ecx,%ecx
   11726:	jne    11964 <png_image_read_colormap+0x3e4>
   1172c:	mov    %r14,-0x30(%rbp)
   11730:	mov    %r15,-0x38(%rbp)
   11734:	mov    %r11,%r8
   11737:	mov    %r8,%r9
   1173a:	jmpq   1163a <png_image_read_colormap+0xba>
   1173f:	mov    0x18(%rdx),%ecx
   11742:	and    $0x4,%ecx
   11745:	test   %ecx,%ecx
   11747:	jne    11673 <png_image_read_colormap+0xf3>
   1174d:	mov    $0x186a0,%r14d
   11753:	jmpq   11673 <png_image_read_colormap+0xf3>
   11758:	mov    %rsi,%rdi
   1175b:	lea    0x1c8eb(%rip),%rsi        # 2e04d <chunks_to_process.34+0x248>
   11762:	callq  5470 <png_error@plt>
   11767:	movzbl 0x268(%rsi),%r12d
   1176f:	cmp    $0x8,%r12b
   11773:	jbe    1197a <png_image_read_colormap+0x3fa>
   11779:	mov    0x1c(%rdx),%r8d
   1177d:	cmp    $0xff,%r8d
   11784:	jbe    119e5 <png_image_read_colormap+0x465>
   1178a:	mov    %rdi,%r8
   1178d:	mov    %rdi,-0x58(%rbp)
   11791:	mov    %r15,-0x100(%rbp)
   11798:	mov    %rcx,-0x78(%rbp)
   1179c:	mov    %rdx,-0x50(%rbp)
   117a0:	mov    %rbx,-0x8(%rbp)
   117a4:	mov    %r8,%rdi
   117a7:	mov    %rax,%rbx
   117aa:	mov    %r11,%r12
   117ad:	mov    %r9,%r13
   117b0:	mov    %rsi,%r14
   117b3:	mov    %r10,%r15
   117b6:	callq  11330 <make_gray_colormap>
   117bb:	movzwl 0x260(%r14),%ecx
   117c3:	test   %cx,%cx
   117c6:	jne    119f4 <png_image_read_colormap+0x474>
   117cc:	mov    %rax,%r13
   117cf:	mov    -0x8(%rbp),%r11
   117d3:	mov    -0x50(%rbp),%r15
   117d7:	mov    -0x58(%rbp),%rbx
   117db:	mov    $0x100,%r10d
   117e1:	xor    %r12d,%r12d
   117e4:	mov    $0x1,%edx
   117e9:	mov    %rdx,%rsi
   117ec:	mov    %r12,%rax
   117ef:	mov    %rax,%rcx
   117f2:	jmpq   11a9b <png_image_read_colormap+0x51b>
   117f7:	mov    %rax,%r12
   117fa:	and    $0x1,%r12d
   117fe:	test   %r12d,%r12d
   11801:	jne    11a5b <png_image_read_colormap+0x4db>
   11807:	and    $0x2,%eax
   1180a:	test   %eax,%eax
   1180c:	je     11b12 <png_image_read_colormap+0x592>
   11812:	cmp    %r9d,%r11d
   11815:	jne    11820 <png_image_read_colormap+0x2a0>
   11817:	cmp    %r9d,%r8d
   1181a:	je     11b12 <png_image_read_colormap+0x592>
   11820:	mov    0x1c(%rdx),%eax
   11823:	cmp    $0xff,%eax
   11828:	jbe    11b5f <png_image_read_colormap+0x5df>
   1182e:	mov    $0x46ed2901,%r14d
   11834:	mov    %r10,-0x100(%rbp)
   1183b:	mov    %rsi,-0x50(%rbp)
   1183f:	mov    %r15,-0x88(%rbp)
   11846:	mov    %rcx,-0x80(%rbp)
   1184a:	mov    %rbx,-0x10(%rbp)
   1184e:	mov    %rdx,%rbx
   11851:	mov    %rdi,%r15
   11854:	xor    %esi,%esi
   11856:	mov    $0xff,%r12d
   1185c:	jmpq   11b9a <png_image_read_colormap+0x61a>
   11861:	mov    %rax,%r12
   11864:	and    $0x2,%r12d
   11868:	test   %r12d,%r12d
   1186b:	je     11c3a <png_image_read_colormap+0x6ba>
   11871:	cmp    $0x6,%r14b
   11875:	je     11d1d <png_image_read_colormap+0x79d>
   1187b:	movzwl 0x260(%rsi),%r12d
   11883:	test   %r12w,%r12w
   11887:	jne    11d1d <png_image_read_colormap+0x79d>
   1188d:	mov    0x1c(%rdx),%eax
   11890:	cmp    $0xd7,%eax
   11895:	jbe    11dbc <png_image_read_colormap+0x83c>
   1189b:	mov    %rbx,%r13
   1189e:	mov    %rsi,%r14
   118a1:	mov    %rdx,%r15
   118a4:	mov    %rdi,%rbx
   118a7:	callq  114b0 <make_rgb_colormap>
   118ac:	mov    %rbx,-0x58(%rbp)
   118b0:	mov    %r13,%r11
   118b3:	mov    %rax,%r13
   118b6:	mov    $0x100,%r10d
   118bc:	mov    $0x3,%ecx
   118c1:	xor    %r12d,%r12d
   118c4:	mov    $0x1,%edx
   118c9:	mov    %rdx,%rsi
   118cc:	mov    %r12,%rax
   118cf:	jmpq   11a9b <png_image_read_colormap+0x51b>
   118d4:	mov    0x2e8(%rsi),%r14
   118db:	mov    0x250(%rsi),%rcx
   118e2:	mov    %rcx,-0xf8(%rbp)
   118e9:	test   %r14,%r14
   118ec:	je     11901 <png_image_read_colormap+0x381>
   118ee:	and    $0x1,%eax
   118f1:	test   %eax,%eax
   118f3:	jne    11901 <png_image_read_colormap+0x381>
   118f5:	pushq  -0x100(%rbp)
   118fb:	popq   -0xb8(%rbp)
   11901:	test   %r14,%r14
   11904:	jne    11909 <png_image_read_colormap+0x389>
   11906:	xor    %r15d,%r15d
   11909:	movzwl 0x258(%rsi),%r13d
   11911:	cmp    $0x100,%r13w
   11917:	jbe    1191f <png_image_read_colormap+0x39f>
   11919:	mov    $0x100,%r13d
   1191f:	cmp    0x1c(%rdx),%r13d
   11923:	ja     11dcb <png_image_read_colormap+0x84b>
   11929:	mov    %rsi,-0xb0(%rbp)
   11930:	mov    %rdx,-0x70(%rbp)
   11934:	mov    %rbx,-0x88(%rbp)
   1193b:	mov    %rdi,%rbx
   1193e:	mov    -0xb8(%rbp),%rax
   11945:	mov    $0x3,%esi
   1194a:	xor    %r12d,%r12d
   1194d:	mov    %r12,%rdx
   11950:	jmpq   11e45 <png_image_read_colormap+0x8c5>
   11955:	mov    %rsi,%rdi
   11958:	lea    0x1c524(%rip),%rsi        # 2de83 <chunks_to_process.34+0x7e>
   1195f:	callq  5470 <png_error@plt>
   11964:	movzbl (%r8),%r9d
   11968:	movzbl 0x2(%r8),%r8d
   1196d:	mov    %r14,-0x30(%rbp)
   11971:	mov    %r15,-0x38(%rbp)
   11975:	jmpq   1163a <png_image_read_colormap+0xba>
   1197a:	mov    %r12,%rcx
   1197d:	mov    %rbx,%r14
   11980:	mov    %rdi,%rbx
   11983:	mov    $0x1,%r13d
   11989:	shl    %cl,%r13d
   1198c:	cmp    0x1c(%rdx),%r13d
   11990:	ja     11e8a <png_image_read_colormap+0x90a>
   11996:	mov    %rax,%rdi
   11999:	mov    %rdx,%r15
   1199c:	lea    -0x1(%r13),%ecx
   119a0:	xor    %edx,%edx
   119a2:	mov    $0xff,%r12d
   119a8:	mov    %r12,%rax
   119ab:	div    %ecx
   119ad:	movzwl 0x260(%rsi),%ecx
   119b4:	test   %cx,%cx
   119b7:	jne    11e99 <png_image_read_colormap+0x919>
   119bd:	mov    %rsi,-0x98(%rbp)
   119c4:	mov    %r15,-0x88(%rbp)
   119cb:	mov    %r14,-0x8(%rbp)
   119cf:	mov    %rax,%r14
   119d2:	mov    $0x100,%ecx
   119d7:	xor    %r12d,%r12d
   119da:	mov    %r12,%rax
   119dd:	mov    %rax,%r15
   119e0:	jmpq   11f37 <png_image_read_colormap+0x9b7>
   119e5:	mov    %rsi,%rdi
   119e8:	lea    0x1c4f6(%rip),%rsi        # 2dee5 <chunks_to_process.34+0xe0>
   119ef:	callq  5470 <png_error@plt>
   119f4:	and    $0x1,%ebx
   119f7:	test   %ebx,%ebx
   119f9:	je     11f84 <png_image_read_colormap+0xa04>
   119ff:	mov    -0xd0(%rbp),%r8
   11a06:	pushq  -0xb8(%rbp)
   11a0c:	popq   -0x88(%rbp)
   11a12:	mov    %r15d,(%rsp)
   11a16:	mov    %r12,%rcx
   11a19:	mov    %r13,%rdx
   11a1c:	mov    %rax,%r13
   11a1f:	mov    $0xfe,%r15d
   11a25:	mov    -0x58(%rbp),%rbx
   11a29:	mov    %rbx,%rdi
   11a2c:	mov    %r15,%rsi
   11a2f:	mov    -0x88(%rbp),%r9
   11a36:	callq  10ad0 <png_create_colormap_entry>
   11a3b:	mov    %r15,%r10
   11a3e:	mov    -0x8(%rbp),%r11
   11a42:	mov    -0x50(%rbp),%r15
   11a46:	xor    %r12d,%r12d
   11a49:	mov    $0x1,%edx
   11a4e:	mov    $0x2,%ecx
   11a53:	mov    %rdx,%rax
   11a56:	mov    %rax,%rsi
   11a59:	jmp    11a9b <png_image_read_colormap+0x51b>
   11a5b:	mov    0x1c(%rdx),%eax
   11a5e:	cmp    $0xff,%eax
   11a63:	jbe    11fac <png_image_read_colormap+0xa2c>
   11a69:	mov    %rbx,%r13
   11a6c:	mov    %rsi,%r14
   11a6f:	mov    %rdx,%r15
   11a72:	mov    %rdi,%rbx
   11a75:	callq  11390 <make_ga_colormap>
   11a7a:	mov    %rbx,-0x58(%rbp)
   11a7e:	mov    %r13,%r11
   11a81:	mov    %rax,%r13
   11a84:	mov    $0xe7,%r10d
   11a8a:	xor    %r12d,%r12d
   11a8d:	mov    $0x1,%edx
   11a92:	mov    %rdx,%rcx
   11a95:	mov    %rcx,%rsi
   11a98:	mov    %r12,%rax
   11a9b:	test   %eax,%eax
   11a9d:	jle    11af1 <png_image_read_colormap+0x571>
   11a9f:	movzwl 0x260(%r14),%eax
   11aa7:	test   %ax,%ax
   11aaa:	je     11af1 <png_image_read_colormap+0x571>
   11aac:	movzbl 0x267(%r14),%eax
   11ab4:	and    $0x4,%eax
   11ab7:	test   %eax,%eax
   11ab9:	jne    11af1 <png_image_read_colormap+0x571>
   11abb:	mov    %r14,%rdi
   11abe:	mov    %r11,-0x8(%rbp)
   11ac2:	mov    %r10,-0x100(%rbp)
   11ac9:	mov    %rcx,%rbx
   11acc:	mov    %rsi,%r12
   11acf:	callq  58b0 <png_set_tRNS_to_alpha@plt>
   11ad4:	mov    %rbx,%rcx
   11ad7:	mov    %r12,%rsi
   11ada:	mov    -0x100(%rbp),%r10
   11ae1:	mov    -0x8(%rbp),%r11
   11ae5:	mov    -0x58(%rbp),%rbx
   11ae9:	xor    %r12d,%r12d
   11aec:	mov    $0x1,%edx
   11af1:	cmp    $0x1,%esi
   11af4:	je     11fbb <png_image_read_colormap+0xa3b>
   11afa:	cmp    $0x3,%esi
   11afd:	je     11fee <png_image_read_colormap+0xa6e>
   11b03:	mov    %r14,%rdi
   11b06:	lea    0x1c557(%rip),%rsi        # 2e064 <chunks_to_process.34+0x25f>
   11b0d:	callq  5470 <png_error@plt>
   11b12:	mov    0x1c(%rdx),%eax
   11b15:	cmp    $0xff,%eax
   11b1a:	jbe    12041 <png_image_read_colormap+0xac1>
   11b20:	mov    %rdi,%rax
   11b23:	mov    %rdi,-0x58(%rbp)
   11b27:	mov    %rdx,-0x100(%rbp)
   11b2e:	mov    %rbx,-0x10(%rbp)
   11b32:	mov    %rax,%rdi
   11b35:	mov    %rcx,%rbx
   11b38:	mov    %r10,%r12
   11b3b:	mov    %r11,%r13
   11b3e:	mov    %rsi,%r14
   11b41:	callq  11330 <make_gray_colormap>
   11b46:	cmp    $0x2,%r12d
   11b4a:	je     12050 <png_image_read_colormap+0xad0>
   11b50:	mov    %r13,%r12
   11b53:	mov    %rax,%r13
   11b56:	mov    -0x58(%rbp),%rbx
   11b5a:	jmpq   120ad <png_image_read_colormap+0xb2d>
   11b5f:	mov    %rsi,%rdi
   11b62:	lea    0x1c3ec(%rip),%rsi        # 2df55 <chunks_to_process.34+0x150>
   11b69:	callq  5470 <png_error@plt>
   11b6e:	movl   $0x1,(%rsp)
   11b75:	mov    %rsi,%rax
   11b78:	shl    $0x8,%eax
   11b7b:	lea    0x74(%rax),%ecx
   11b7e:	mov    %r14,%rax
   11b81:	mul    %ecx
   11b83:	shr    $0x6,%edx
   11b86:	mov    %rdx,%rcx
   11b89:	mov    %rdx,%r8
   11b8c:	mov    %r15,%rdi
   11b8f:	mov    %r12,%r9
   11b92:	callq  10ad0 <png_create_colormap_entry>
   11b97:	mov    %r13,%rsi
   11b9a:	lea    0x1(%rsi),%r13d
   11b9e:	cmp    $0xe6,%esi
   11ba4:	jbe    11b6e <png_image_read_colormap+0x5ee>
   11ba6:	mov    -0x100(%rbp),%rax
   11bad:	cmp    $0x2,%eax
   11bb0:	jne    11bb8 <png_image_read_colormap+0x638>
   11bb2:	mov    $0xffff,%r12d
   11bb8:	mov    %eax,(%rsp)
   11bbb:	mov    %r15,%rdi
   11bbe:	mov    %rsi,%r9
   11bc1:	mov    -0xe0(%rbp),%r14
   11bc8:	mov    %r14,%rdx
   11bcb:	mov    -0xd8(%rbp),%r10
   11bd2:	mov    %r10,%rcx
   11bd5:	mov    %rbx,-0x48(%rbp)
   11bd9:	mov    -0xd0(%rbp),%rbx
   11be0:	mov    %rbx,%r8
   11be3:	mov    %r15,-0x58(%rbp)
   11be7:	mov    %rsi,-0x40(%rbp)
   11beb:	mov    %r9,%rsi
   11bee:	mov    %r12,%r9
   11bf1:	mov    %r10,%r12
   11bf4:	mov    %rbx,%r15
   11bf7:	mov    %rax,%rbx
   11bfa:	callq  10ad0 <png_create_colormap_entry>
   11bff:	cmp    $0x1,%ebx
   11c02:	je     12117 <png_image_read_colormap+0xb97>
   11c08:	mov    %r15,%rax
   11c0b:	mov    %r12,%r9
   11c0e:	mov    %r14,%r10
   11c11:	mov    -0x80(%rbp),%rdi
   11c15:	mov    -0x88(%rbp),%rsi
   11c1c:	mov    -0x58(%rbp),%rbx
   11c20:	mov    -0x90(%rbp),%r14
   11c27:	xor    %r12d,%r12d
   11c2a:	mov    $0xff,%ecx
   11c2f:	mov    $0x1,%r11d
   11c35:	jmpq   12268 <png_image_read_colormap+0xce8>
   11c3a:	mov    $0xffffffffffffffff,%r12
   11c41:	mov    %r12,%r9
   11c44:	mov    %rsi,%r11
   11c47:	mov    $0x1,%r8d
   11c4d:	mov    %r15,-0xe0(%rbp)
   11c54:	mov    %rcx,-0xd0(%rbp)
   11c5b:	mov    %rbx,-0x18(%rbp)
   11c5f:	mov    %r9,%rcx
   11c62:	mov    %rdi,%rbx
   11c65:	mov    %r11,%rdi
   11c68:	mov    %rax,%r13
   11c6b:	mov    %rsi,%r14
   11c6e:	mov    %r8,%rsi
   11c71:	mov    %rdx,%r15
   11c74:	mov    %r12,%rdx
   11c77:	mov    %r10,%r12
   11c7a:	callq  55b0 <png_set_rgb_to_gray_fixed@plt>
   11c7f:	movzbl 0x267(%r14),%eax
   11c87:	cmp    $0x6,%al
   11c89:	je     11c98 <png_image_read_colormap+0x718>
   11c8b:	movzwl 0x260(%r14),%eax
   11c93:	test   %ax,%ax
   11c96:	je     11ca5 <png_image_read_colormap+0x725>
   11c98:	and    $0x1,%r13d
   11c9c:	test   %r13d,%r13d
   11c9f:	jne    12295 <png_image_read_colormap+0xd15>
   11ca5:	mov    0x1c(%r15),%eax
   11ca9:	cmp    $0xff,%eax
   11cae:	jbe    122d3 <png_image_read_colormap+0xd53>
   11cb4:	movzbl 0x267(%r14),%eax
   11cbc:	cmp    $0x6,%al
   11cbe:	jne    122e2 <png_image_read_colormap+0xd62>
   11cc4:	movslq 0x498(%r14),%rdi
   11ccb:	callq  106c0 <png_gamma_not_sRGB>
   11cd0:	test   %eax,%eax
   11cd2:	jne    122f8 <png_image_read_colormap+0xd78>
   11cd8:	mov    %rbx,%rdi
   11cdb:	callq  11330 <make_gray_colormap>
   11ce0:	mov    %rax,%r13
   11ce3:	movzbl 0x267(%r14),%eax
   11ceb:	cmp    $0x6,%al
   11ced:	jne    12314 <png_image_read_colormap+0xd94>
   11cf3:	mov    -0x100(%rbp),%r10
   11cfa:	cmp    $0x3,%r10d
   11cfe:	je     1234d <png_image_read_colormap+0xdcd>
   11d04:	cmp    $0x2,%r12d
   11d08:	je     12363 <png_image_read_colormap+0xde3>
   11d0e:	mov    %r10,%r12
   11d11:	mov    -0xd8(%rbp),%rax
   11d18:	jmpq   1244e <png_image_read_colormap+0xece>
   11d1d:	mov    $0x80,%r14d
   11d23:	mov    %rax,%r12
   11d26:	and    $0x1,%r12d
   11d2a:	test   %r12d,%r12d
   11d2d:	jne    124ae <png_image_read_colormap+0xf2e>
   11d33:	mov    0x1c(%rdx),%r12d
   11d37:	cmp    $0xf3,%r12d
   11d3e:	jbe    12518 <png_image_read_colormap+0xf98>
   11d44:	mov    %rdi,%r12
   11d47:	mov    %rsi,-0xa8(%rbp)
   11d4e:	mov    %rax,-0xc8(%rbp)
   11d55:	mov    %r15,-0x100(%rbp)
   11d5c:	mov    %rcx,-0xf8(%rbp)
   11d63:	mov    %rdx,-0x68(%rbp)
   11d67:	mov    %rbx,-0x40(%rbp)
   11d6b:	mov    %rdi,%rbx
   11d6e:	mov    %r12,%rdi
   11d71:	mov    %r8,%r12
   11d74:	mov    %r10,%r13
   11d77:	mov    %r11,%r14
   11d7a:	mov    %r9,%r15
   11d7d:	callq  114b0 <make_rgb_colormap>
   11d82:	mov    %rax,%rsi
   11d85:	mov    %rsi,-0xc0(%rbp)
   11d8c:	mov    %r13d,(%rsp)
   11d90:	mov    %rbx,%rdi
   11d93:	mov    %r15,%rdx
   11d96:	mov    %r14,%rcx
   11d99:	mov    %r12,%r8
   11d9c:	xor    %r9d,%r9d
   11d9f:	callq  10ad0 <png_create_colormap_entry>
   11da4:	cmp    $0x2,%r13d
   11da8:	je     12527 <png_image_read_colormap+0xfa7>
   11dae:	mov    %r14,%rax
   11db1:	mov    %rax,%rcx
   11db4:	mov    %r15,%rdx
   11db7:	jmpq   125c8 <png_image_read_colormap+0x1048>
   11dbc:	mov    %rsi,%rdi
   11dbf:	lea    0x1c245(%rip),%rsi        # 2e00b <chunks_to_process.34+0x206>
   11dc6:	callq  5470 <png_error@plt>
   11dcb:	mov    %rsi,%rdi
   11dce:	lea    0x1c255(%rip),%rsi        # 2e02a <chunks_to_process.34+0x225>
   11dd5:	callq  5470 <png_error@plt>
   11dda:	movzbl (%r14,%rdi,1),%r9d
   11ddf:	movl   $0x3,(%rsp)
   11de6:	mov    %rbx,%rdi
   11de9:	mov    %rdx,%rsi
   11dec:	mov    %r10,-0xf0(%rbp)
   11df3:	mov    %rbx,-0x100(%rbp)
   11dfa:	mov    %r12,%rcx
   11dfd:	mov    %rdx,%r12
   11e00:	mov    %r11,%rdx
   11e03:	mov    %rax,%rbx
   11e06:	callq  10ad0 <png_create_colormap_entry>
   11e0b:	mov    %rbx,%rax
   11e0e:	mov    -0x100(%rbp),%rbx
   11e15:	mov    -0xf0(%rbp),%r10
   11e1c:	lea    0x1(%r12),%edx
   11e21:	mov    -0xf8(%rbp),%rcx
   11e28:	mov    -0xd0(%rbp),%r8
   11e2f:	mov    -0xd8(%rbp),%r11
   11e36:	mov    -0xe0(%rbp),%r9
   11e3d:	mov    $0x3,%esi
   11e42:	xor    %r12d,%r12d
   11e45:	cmp    %r13d,%edx
   11e48:	jb     126c3 <png_image_read_colormap+0x1143>
   11e4e:	mov    -0xb0(%rbp),%r14
   11e55:	movzbl 0x268(%r14),%eax
   11e5d:	cmp    $0x7,%al
   11e5f:	jbe    127a5 <png_image_read_colormap+0x1225>
   11e65:	mov    %rbx,-0x58(%rbp)
   11e69:	mov    -0x88(%rbp),%r11
   11e70:	mov    -0x70(%rbp),%r15
   11e74:	mov    $0x100,%r10d
   11e7a:	mov    $0x1,%edx
   11e7f:	mov    %r12,%rax
   11e82:	mov    %rax,%rcx
   11e85:	jmpq   11a9b <png_image_read_colormap+0x51b>
   11e8a:	mov    %rsi,%rdi
   11e8d:	lea    0x1c02e(%rip),%rsi        # 2dec2 <chunks_to_process.34+0xbd>
   11e94:	callq  5470 <png_error@plt>
   11e99:	movzwl 0x2f8(%rsi),%ecx
   11ea0:	and    $0x1,%edi
   11ea3:	test   %edi,%edi
   11ea5:	je     127d8 <png_image_read_colormap+0x1258>
   11eab:	mov    %rsi,-0x98(%rbp)
   11eb2:	mov    %r15,-0x88(%rbp)
   11eb9:	mov    %r14,-0x8(%rbp)
   11ebd:	mov    %rax,%r14
   11ec0:	xor    %r12d,%r12d
   11ec3:	mov    %r12,%rax
   11ec6:	mov    %rax,%r15
   11ec9:	jmp    11f37 <png_image_read_colormap+0x9b7>
   11ecb:	movl   $0x3,(%rsp)
   11ed2:	mov    %r15,%r11
   11ed5:	mov    %r15,%r8
   11ed8:	mov    %rbx,%rdi
   11edb:	mov    %rax,%rsi
   11ede:	mov    %r15,%rdx
   11ee1:	mov    $0xff,%r9d
   11ee7:	mov    %r10,-0xa8(%rbp)
   11eee:	mov    %rbx,-0xa0(%rbp)
   11ef5:	mov    %rcx,-0x100(%rbp)
   11efc:	mov    %r11,%rcx
   11eff:	mov    %rax,%rbx
   11f02:	callq  10ad0 <png_create_colormap_entry>
   11f07:	lea    0x1(%rbx),%eax
   11f0a:	add    %r14d,%r15d
   11f0d:	mov    -0x100(%rbp),%rcx
   11f14:	mov    -0xa0(%rbp),%rbx
   11f1b:	mov    -0xd0(%rbp),%r8
   11f22:	mov    -0xa8(%rbp),%r10
   11f29:	mov    -0xd8(%rbp),%r11
   11f30:	mov    -0xe0(%rbp),%r9
   11f37:	cmp    %r13d,%eax
   11f3a:	jb     12802 <png_image_read_colormap+0x1282>
   11f40:	mov    -0x98(%rbp),%r14
   11f47:	movzbl 0x268(%r14),%eax
   11f4f:	cmp    $0x7,%al
   11f51:	jbe    12845 <png_image_read_colormap+0x12c5>
   11f57:	mov    %rbx,-0x58(%rbp)
   11f5b:	mov    -0x8(%rbp),%r11
   11f5f:	mov    -0x88(%rbp),%r15
   11f66:	mov    $0x100,%r10d
   11f6c:	mov    $0x3,%esi
   11f71:	xor    %r12d,%r12d
   11f74:	mov    $0x1,%edx
   11f79:	mov    %r12,%rax
   11f7c:	mov    %rax,%rcx
   11f7f:	jmpq   11a9b <png_image_read_colormap+0x51b>
   11f84:	cmp    %r13d,%r12d
   11f87:	je     1287a <png_image_read_colormap+0x12fa>
   11f8d:	mov    -0xd0(%rbp),%r8
   11f94:	cmp    $0x2,%r15d
   11f98:	jne    11a12 <png_image_read_colormap+0x492>
   11f9e:	pushq  -0x80(%rbp)
   11fa1:	popq   -0x88(%rbp)
   11fa7:	jmpq   11a12 <png_image_read_colormap+0x492>
   11fac:	mov    %rsi,%rdi
   11faf:	lea    0x1bf53(%rip),%rsi        # 2df09 <chunks_to_process.34+0x104>
   11fb6:	callq  5470 <png_error@plt>
   11fbb:	mov    $0x35b60,%edx
   11fc0:	mov    %r14,%rdi
   11fc3:	mov    %r11,-0x100(%rbp)
   11fca:	mov    %r12,%rsi
   11fcd:	mov    %rcx,%r12
   11fd0:	mov    %r10,%rbx
   11fd3:	callq  5640 <png_set_alpha_mode_fixed@plt>
   11fd8:	mov    %r12,%rcx
   11fdb:	mov    %rbx,%r10
   11fde:	mov    -0x100(%rbp),%r11
   11fe5:	mov    -0x58(%rbp),%rbx
   11fe9:	mov    $0x1,%edx
   11fee:	movzbl 0x268(%r14),%eax
   11ff6:	cmp    $0x8,%al
   11ff8:	jbe    12025 <png_image_read_colormap+0xaa5>
   11ffa:	mov    %r14,%rdi
   11ffd:	mov    %r11,-0x100(%rbp)
   12004:	mov    %rcx,%rbx
   12007:	mov    %r10,%r12
   1200a:	callq  58d0 <png_set_scale_16@plt>
   1200f:	mov    %rbx,%rcx
   12012:	mov    %r12,%r10
   12015:	mov    -0x100(%rbp),%r11
   1201c:	mov    -0x58(%rbp),%rbx
   12020:	mov    $0x1,%edx
   12025:	cmp    $0x100,%r13d
   1202c:	jbe    128a3 <png_image_read_colormap+0x1323>
   12032:	mov    %r14,%rdi
   12035:	lea    0x1c049(%rip),%rsi        # 2e085 <chunks_to_process.34+0x280>
   1203c:	callq  5470 <png_error@plt>
   12041:	mov    %rsi,%rdi
   12044:	lea    0x1bee4(%rip),%rsi        # 2df2f <chunks_to_process.34+0x12a>
   1204b:	callq  5470 <png_error@plt>
   12050:	mov    %r13,%rsi
   12053:	shl    $0x8,%esi
   12056:	sub    %r13d,%esi
   12059:	mov    %rsi,%rcx
   1205c:	shr    $0xf,%ecx
   1205f:	mov    %ecx,%edx
   12061:	movzbl (%rdx,%r15,1),%ecx
   12066:	and    $0x7fff,%esi
   1206c:	imul   %esi,%ecx
   1206f:	shr    $0xc,%ecx
   12072:	movzwl (%rbx,%rdx,2),%edx
   12076:	movl   $0x2,(%rsp)
   1207d:	lea    (%rcx,%rdx,1),%r12d
   12081:	and    $0xff00,%r12d
   12088:	shr    $0x8,%r12d
   1208c:	mov    %r13,%rdx
   1208f:	mov    %rax,%r13
   12092:	mov    %rdx,%rcx
   12095:	mov    %rdx,%r8
   12098:	mov    -0x58(%rbp),%rbx
   1209c:	mov    %rbx,%rdi
   1209f:	mov    %r12,%rsi
   120a2:	mov    $0xffff,%r9d
   120a8:	callq  10ad0 <png_create_colormap_entry>
   120ad:	movb   $0x0,-0x11e(%rbp)
   120b4:	mov    %r12w,-0x118(%rbp)
   120bc:	mov    %r12w,-0x11a(%rbp)
   120c4:	mov    %r12w,-0x11c(%rbp)
   120cc:	mov    %r12w,-0x116(%rbp)
   120d4:	lea    -0x11e(%rbp),%rsi
   120db:	xor    %r12d,%r12d
   120de:	mov    %r12,%r8
   120e1:	mov    %r14,%rdi
   120e4:	mov    $0x1,%r15d
   120ea:	mov    %r15,%rdx
   120ed:	mov    %r12,%rcx
   120f0:	callq  5320 <png_set_background_fixed@plt>
   120f5:	mov    %r15,%rsi
   120f8:	mov    -0x10(%rbp),%r11
   120fc:	mov    -0x100(%rbp),%r15
   12103:	mov    $0x100,%r10d
   12109:	mov    %rsi,%rdx
   1210c:	mov    %r12,%rax
   1210f:	mov    %rax,%rcx
   12112:	jmpq   11a9b <png_image_read_colormap+0x51b>
   12117:	mov    %r14d,%eax
   1211a:	mov    -0x90(%rbp),%r14
   12121:	movzwl (%r14,%rax,2),%r10d
   12126:	mov    -0x98(%rbp),%rax
   1212d:	movzwl (%r14,%rax,2),%r9d
   12132:	mov    %r15d,%eax
   12135:	movzwl (%r14,%rax,2),%eax
   1213a:	mov    -0x80(%rbp),%rdi
   1213e:	mov    -0x88(%rbp),%rsi
   12145:	mov    -0x58(%rbp),%rbx
   12149:	xor    %r12d,%r12d
   1214c:	mov    $0xff,%ecx
   12151:	mov    $0x1,%r11d
   12157:	jmpq   12268 <png_image_read_colormap+0xce8>
   1215c:	mov    %eax,%ecx
   1215e:	movzwl (%r14,%rcx,2),%r10d
   12163:	imul   %r15d,%r10d
   12167:	add    %r10d,%edx
   1216a:	mov    %rdx,%rcx
   1216d:	shr    $0xf,%ecx
   12170:	mov    %ecx,%r11d
   12173:	movzbl (%r11,%rsi,1),%ecx
   12178:	and    $0x7fff,%edx
   1217e:	imul   %edx,%ecx
   12181:	shr    $0xc,%ecx
   12184:	movzwl (%rdi,%r11,2),%edx
   12189:	add    %ecx,%edx
   1218b:	and    $0xff00,%edx
   12191:	shr    $0x8,%edx
   12194:	add    %r10d,%r9d
   12197:	mov    %r9,%rcx
   1219a:	shr    $0xf,%ecx
   1219d:	mov    %ecx,%r11d
   121a0:	movzbl (%r11,%rsi,1),%ecx
   121a5:	and    $0x7fff,%r9d
   121ac:	imul   %r9d,%ecx
   121b0:	shr    $0xc,%ecx
   121b3:	movzwl (%rdi,%r11,2),%r9d
   121b8:	add    %r9d,%ecx
   121bb:	and    $0xff00,%ecx
   121c1:	shr    $0x8,%ecx
   121c4:	add    %r10d,%r8d
   121c7:	mov    %r8,%r9
   121ca:	shr    $0xf,%r9d
   121ce:	mov    %r9d,%r9d
   121d1:	movzbl (%r9,%rsi,1),%esi
   121d6:	and    $0x7fff,%r8d
   121dd:	imul   %r8d,%esi
   121e1:	shr    $0xc,%esi
   121e4:	movzwl (%rdi,%r9,2),%edi
   121e9:	movl   $0x1,(%rsp)
   121f0:	lea    (%rsi,%rdi,1),%r8d
   121f4:	and    $0xff00,%r8d
   121fb:	shr    $0x8,%r8d
   121ff:	mov    %rbx,%rdi
   12202:	mov    %rax,%rbx
   12205:	mov    %r13,%rsi
   12208:	mov    $0xff,%r9d
   1220e:	callq  10ad0 <png_create_colormap_entry>
   12213:	lea    0x33(%rbx),%eax
   12216:	add    $0x1,%r13d
   1221a:	add    $0x1,%r12d
   1221e:	mov    -0x90(%rbp),%r8
   12225:	mov    -0x70(%rbp),%r9
   12229:	mov    -0x60(%rbp),%rdx
   1222d:	mov    -0x80(%rbp),%rdi
   12231:	mov    -0x88(%rbp),%rsi
   12238:	mov    -0x58(%rbp),%rbx
   1223c:	mov    $0xff,%ecx
   12241:	cmp    $0x5,%r12d
   12245:	jbe    1215c <png_image_read_colormap+0xbdc>
   1224b:	mov    -0x100(%rbp),%rax
   12252:	lea    0x1(%rax),%r11d
   12256:	mov    -0xd8(%rbp),%rax
   1225d:	mov    -0x68(%rbp),%r10
   12261:	mov    -0x78(%rbp),%r9
   12265:	xor    %r12d,%r12d
   12268:	cmp    $0x4,%r11d
   1226c:	jbe    128c9 <png_image_read_colormap+0x1349>
   12272:	mov    -0x40(%rbp),%r10
   12276:	mov    -0x10(%rbp),%r11
   1227a:	mov    -0x48(%rbp),%r15
   1227e:	mov    -0x50(%rbp),%r14
   12282:	mov    $0x1,%edx
   12287:	mov    %rdx,%rcx
   1228a:	mov    %rcx,%rsi
   1228d:	mov    %r12,%rax
   12290:	jmpq   11a9b <png_image_read_colormap+0x51b>
   12295:	mov    0x1c(%r15),%eax
   12299:	cmp    $0xff,%eax
   1229e:	jbe    12918 <png_image_read_colormap+0x1398>
   122a4:	mov    %rbx,%rdi
   122a7:	callq  11390 <make_ga_colormap>
   122ac:	mov    %rbx,-0x58(%rbp)
   122b0:	mov    %rax,%r13
   122b3:	mov    -0x18(%rbp),%r11
   122b7:	mov    $0xe7,%r10d
   122bd:	xor    %r12d,%r12d
   122c0:	mov    $0x1,%edx
   122c5:	mov    %rdx,%rax
   122c8:	mov    %rax,%rcx
   122cb:	mov    %rcx,%rsi
   122ce:	jmpq   11a9b <png_image_read_colormap+0x51b>
   122d3:	mov    %r14,%rdi
   122d6:	lea    0x1bcbf(%rip),%rsi        # 2df9c <chunks_to_process.34+0x197>
   122dd:	callq  5470 <png_error@plt>
   122e2:	movzwl 0x260(%r14),%eax
   122ea:	test   %ax,%ax
   122ed:	jne    11cc4 <png_image_read_colormap+0x744>
   122f3:	jmpq   11cd8 <png_image_read_colormap+0x758>
   122f8:	mov    %rbx,%rdi
   122fb:	callq  112d0 <make_gray_file_colormap>
   12300:	mov    %rax,%r13
   12303:	pushq  -0xb0(%rbp)
   12309:	popq   -0x100(%rbp)
   1230f:	jmpq   11ce3 <png_image_read_colormap+0x763>
   12314:	movzwl 0x260(%r14),%eax
   1231c:	test   %ax,%ax
   1231f:	jne    11cf3 <png_image_read_colormap+0x773>
   12325:	mov    %rbx,-0x58(%rbp)
   12329:	mov    -0x100(%rbp),%rsi
   12330:	mov    -0x18(%rbp),%r11
   12334:	mov    $0x100,%r10d
   1233a:	xor    %r12d,%r12d
   1233d:	mov    $0x1,%edx
   12342:	mov    %r12,%rax
   12345:	mov    %rax,%rcx
   12348:	jmpq   11a9b <png_image_read_colormap+0x51b>
   1234d:	cmp    $0x1,%r12d
   12351:	je     123de <png_image_read_colormap+0xe5e>
   12357:	mov    -0xd8(%rbp),%rdi
   1235e:	jmpq   123f0 <png_image_read_colormap+0xe70>
   12363:	mov    -0xd8(%rbp),%rdx
   1236a:	mov    %rdx,%rax
   1236d:	shl    $0x8,%eax
   12370:	sub    %edx,%eax
   12372:	mov    %rax,%rcx
   12375:	shr    $0xf,%ecx
   12378:	mov    %ecx,%esi
   1237a:	mov    -0xe0(%rbp),%rcx
   12381:	movzbl (%rsi,%rcx,1),%ecx
   12385:	and    $0x7fff,%eax
   1238a:	imul   %eax,%ecx
   1238d:	shr    $0xc,%ecx
   12390:	mov    -0xd0(%rbp),%rax
   12397:	movzwl (%rax,%rsi,2),%eax
   1239b:	movl   $0x2,(%rsp)
   123a2:	lea    (%rcx,%rax,1),%r12d
   123a6:	and    $0xff00,%r12d
   123ad:	shr    $0x8,%r12d
   123b1:	mov    %rdx,%rcx
   123b4:	mov    %rdx,%r8
   123b7:	mov    %rbx,%rdi
   123ba:	mov    %r12,%rsi
   123bd:	xor    %r9d,%r9d
   123c0:	mov    %rbx,-0x100(%rbp)
   123c7:	mov    %r12,%rbx
   123ca:	mov    %r10,%r12
   123cd:	callq  10ad0 <png_create_colormap_entry>
   123d2:	mov    %rbx,%rax
   123d5:	mov    -0x100(%rbp),%rbx
   123dc:	jmp    1244e <png_image_read_colormap+0xece>
   123de:	mov    -0x98(%rbp),%rcx
   123e5:	mov    -0x90(%rbp),%rax
   123ec:	movzwl (%rax,%rcx,2),%edi
   123f0:	movslq 0x498(%r14),%rsi
   123f7:	mov    %r15,-0x100(%rbp)
   123fe:	mov    %r10,%r15
   12401:	callq  8b80 <png_gamma_16bit_correct>
   12406:	mov    %r12d,(%rsp)
   1240a:	movzwl %ax,%ecx
   1240d:	mov    %rcx,%rax
   12410:	shl    $0x8,%eax
   12413:	sub    %ecx,%eax
   12415:	lea    0x807f(%rax),%r12d
   1241c:	shr    $0x10,%r12d
   12420:	mov    %r15,%rax
   12423:	mov    %r12,%r15
   12426:	mov    %rax,%r12
   12429:	mov    -0xd8(%rbp),%rdx
   12430:	mov    %rdx,%rcx
   12433:	mov    %rdx,%r8
   12436:	mov    %rbx,%rdi
   12439:	mov    %r15,%rsi
   1243c:	xor    %r9d,%r9d
   1243f:	callq  10ad0 <png_create_colormap_entry>
   12444:	mov    %r15,%rax
   12447:	mov    -0x100(%rbp),%r15
   1244e:	movb   $0x0,-0x114(%rbp)
   12455:	mov    %ax,-0x10e(%rbp)
   1245c:	mov    %ax,-0x110(%rbp)
   12463:	mov    %ax,-0x112(%rbp)
   1246a:	mov    %ax,-0x10c(%rbp)
   12471:	lea    -0x114(%rbp),%rsi
   12478:	xor    %ecx,%ecx
   1247a:	mov    %rcx,%r8
   1247d:	mov    %r14,%rdi
   12480:	mov    $0x1,%edx
   12485:	callq  5320 <png_set_background_fixed@plt>
   1248a:	mov    %rbx,-0x58(%rbp)
   1248e:	mov    %r12,%rsi
   12491:	mov    -0x18(%rbp),%r11
   12495:	mov    $0x100,%r10d
   1249b:	xor    %r12d,%r12d
   1249e:	mov    $0x1,%edx
   124a3:	mov    %rdx,%rax
   124a6:	mov    %r12,%rcx
   124a9:	jmpq   11a9b <png_image_read_colormap+0x51b>
   124ae:	mov    0x1c(%rdx),%eax
   124b1:	cmp    $0xf3,%eax
   124b6:	jbe    12927 <png_image_read_colormap+0x13a7>
   124bc:	mov    %rdx,%r12
   124bf:	mov    %rbx,%r13
   124c2:	mov    %rsi,%r15
   124c5:	mov    %rdi,%rbx
   124c8:	callq  114b0 <make_rgb_colormap>
   124cd:	mov    %rax,-0x48(%rbp)
   124d1:	movl   $0x1,(%rsp)
   124d8:	mov    $0xff,%edx
   124dd:	mov    %rdx,%rcx
   124e0:	mov    %rdx,%r8
   124e3:	mov    %rbx,%rdi
   124e6:	mov    %rax,%rsi
   124e9:	xor    %r10d,%r10d
   124ec:	mov    %r10,%r9
   124ef:	mov    %r12,-0x60(%rbp)
   124f3:	mov    %r13,-0x18(%rbp)
   124f7:	mov    %r10,%r12
   124fa:	mov    %rax,%r13
   124fd:	callq  10ad0 <png_create_colormap_entry>
   12502:	add    $0x1,%r13d
   12506:	mov    %r15,-0x100(%rbp)
   1250d:	mov    %r14,%r9
   12510:	mov    %r12,%r15
   12513:	jmpq   12985 <png_image_read_colormap+0x1405>
   12518:	mov    %rsi,%rdi
   1251b:	lea    0x1bac4(%rip),%rsi        # 2dfe6 <chunks_to_process.34+0x1e1>
   12522:	callq  5470 <png_error@plt>
   12527:	mov    %r12,%rax
   1252a:	shl    $0x8,%eax
   1252d:	sub    %r12d,%eax
   12530:	mov    %rax,%rcx
   12533:	shr    $0xf,%ecx
   12536:	mov    %ecx,%edx
   12538:	mov    -0x100(%rbp),%r9
   1253f:	movzbl (%rdx,%r9,1),%ecx
   12544:	and    $0x7fff,%eax
   12549:	imul   %eax,%ecx
   1254c:	shr    $0xc,%ecx
   1254f:	mov    -0xf8(%rbp),%rdi
   12556:	movzwl (%rdi,%rdx,2),%eax
   1255a:	add    %eax,%ecx
   1255c:	and    $0xff00,%ecx
   12562:	shr    $0x8,%ecx
   12565:	mov    %r14,%rdx
   12568:	shl    $0x8,%edx
   1256b:	sub    %r14d,%edx
   1256e:	mov    %rdx,%rax
   12571:	shr    $0xf,%eax
   12574:	mov    %eax,%esi
   12576:	movzbl (%rsi,%r9,1),%eax
   1257b:	and    $0x7fff,%edx
   12581:	imul   %edx,%eax
   12584:	shr    $0xc,%eax
   12587:	movzwl (%rdi,%rsi,2),%edx
   1258b:	add    %edx,%eax
   1258d:	and    $0xff00,%eax
   12592:	shr    $0x8,%eax
   12595:	mov    %r15,%rsi
   12598:	shl    $0x8,%esi
   1259b:	sub    %r15d,%esi
   1259e:	mov    %rsi,%rdx
   125a1:	shr    $0xf,%edx
   125a4:	mov    %edx,%r8d
   125a7:	movzbl (%r8,%r9,1),%edx
   125ac:	and    $0x7fff,%esi
   125b2:	imul   %esi,%edx
   125b5:	shr    $0xc,%edx
   125b8:	movzwl (%rdi,%r8,2),%esi
   125bd:	add    %esi,%edx
   125bf:	and    $0xff00,%edx
   125c5:	shr    $0x8,%edx
   125c8:	mov    -0xc8(%rbp),%rdi
   125cf:	mov    %rdi,%rsi
   125d2:	and    $0x4,%esi
   125d5:	shr    $0x2,%esi
   125d8:	lea    0x1(%rsi),%r8d
   125dc:	and    $0x3,%edi
   125df:	lea    0x1(%rdi),%esi
   125e2:	imul   %esi,%r8d
   125e6:	lea    0x82(%rax,%rax,4),%eax
   125ed:	shr    $0x8,%eax
   125f0:	lea    0x82(%rdx,%rdx,4),%edx
   125f7:	shr    $0x8,%edx
   125fa:	lea    (%rdx,%rdx,2),%edx
   125fd:	lea    (%rax,%rdx,2),%eax
   12600:	lea    (%rax,%rax,2),%edx
   12603:	lea    0x82(%rcx,%rcx,4),%eax
   1260a:	shr    $0x8,%eax
   1260d:	lea    (%rax,%rdx,2),%eax
   12610:	movzbl %al,%eax
   12613:	imul   %r8d,%eax
   12617:	mov    %eax,%eax
   12619:	mov    0x18(%rbx),%rcx
   1261d:	lea    (%rax,%rcx,1),%rsi
   12621:	mov    -0xc0(%rbp),%r9
   12628:	mov    %r8,%rax
   1262b:	imul   %r9d,%eax
   1262f:	mov    %eax,%eax
   12631:	lea    (%rcx,%rax,1),%rdi
   12635:	mov    %r8d,%edx
   12638:	mov    %r13,-0x100(%rbp)
   1263f:	mov    %r9,%r13
   12642:	callq  53d0 <memcmp@plt>
   12647:	test   %eax,%eax
   12649:	jne    129be <png_image_read_colormap+0x143e>
   1264f:	movb   $0x0,-0x10a(%rbp)
   12656:	mov    %r15w,-0x108(%rbp)
   1265e:	mov    %r14w,-0x106(%rbp)
   12666:	mov    %r14w,-0x102(%rbp)
   1266e:	mov    %r12w,-0x104(%rbp)
   12676:	lea    -0x10a(%rbp),%rsi
   1267d:	xor    %r12d,%r12d
   12680:	mov    %r12,%r8
   12683:	mov    -0xa8(%rbp),%r14
   1268a:	mov    %r14,%rdi
   1268d:	mov    $0x1,%r15d
   12693:	mov    %r15,%rdx
   12696:	mov    %r12,%rcx
   12699:	callq  5320 <png_set_background_fixed@plt>
   1269e:	mov    %rbx,-0x58(%rbp)
   126a2:	mov    %r15,%rsi
   126a5:	mov    -0x40(%rbp),%r11
   126a9:	mov    -0x68(%rbp),%r15
   126ad:	mov    $0x100,%r10d
   126b3:	mov    $0x3,%ecx
   126b8:	mov    %rsi,%rdx
   126bb:	mov    %r12,%rax
   126be:	jmpq   11a9b <png_image_read_colormap+0x51b>
   126c3:	test   %eax,%eax
   126c5:	mov    %edx,%edi
   126c7:	jle    129e5 <png_image_read_colormap+0x1465>
   126cd:	cmp    %r15d,%edx
   126d0:	jae    129e5 <png_image_read_colormap+0x1465>
   126d6:	movzbl (%r14,%rdi,1),%r12d
   126db:	cmp    $0xfe,%r12b
   126df:	ja     129e5 <png_image_read_colormap+0x1465>
   126e5:	test   %r12b,%r12b
   126e8:	je     12a0e <png_image_read_colormap+0x148e>
   126ee:	mov    %r15,-0xf0(%rbp)
   126f5:	lea    (%rdi,%rdi,2),%r15
   126f9:	movzbl (%rcx,%r15,1),%esi
   126fe:	mov    %rbx,%r8
   12701:	mov    %r13,-0xc0(%rbp)
   12708:	mov    $0x3,%eax
   1270d:	mov    %rdx,-0x100(%rbp)
   12714:	mov    %r10,%rdx
   12717:	mov    %r10,-0xe8(%rbp)
   1271e:	mov    %rcx,%r13
   12721:	mov    %r12,%rcx
   12724:	mov    %rdi,%r12
   12727:	mov    %r8,%rdi
   1272a:	mov    %r9,%r8
   1272d:	mov    %rdx,%r9
   12730:	mov    %rax,%rdx
   12733:	callq  10a00 <png_colormap_compose>
   12738:	mov    %rax,-0xc8(%rbp)
   1273f:	movzbl 0x1(%r13,%r15,1),%esi
   12745:	movzbl (%r14,%r12,1),%ecx
   1274a:	mov    %rbx,%rdi
   1274d:	mov    $0x3,%edx
   12752:	mov    -0xd8(%rbp),%r8
   12759:	mov    -0xe8(%rbp),%r9
   12760:	callq  10a00 <png_colormap_compose>
   12765:	movzbl 0x2(%r13,%r15,1),%esi
   1276b:	mov    %rax,%r13
   1276e:	movzbl (%r14,%r12,1),%ecx
   12773:	mov    %rbx,%rdi
   12776:	mov    $0x3,%edx
   1277b:	mov    -0xd0(%rbp),%r8
   12782:	mov    -0xe8(%rbp),%r15
   12789:	mov    %r15,%r9
   1278c:	callq  10a00 <png_colormap_compose>
   12791:	cmp    $0x2,%r15d
   12795:	je     12a56 <png_image_read_colormap+0x14d6>
   1279b:	movzbl (%r14,%r12,1),%r9d
   127a0:	jmpq   12a65 <png_image_read_colormap+0x14e5>
   127a5:	mov    %rsi,%r15
   127a8:	mov    %r14,%rdi
   127ab:	callq  5580 <png_set_packing@plt>
   127b0:	mov    %rbx,-0x58(%rbp)
   127b4:	mov    %r15,%rsi
   127b7:	mov    -0x88(%rbp),%r11
   127be:	mov    -0x70(%rbp),%r15
   127c2:	mov    $0x100,%r10d
   127c8:	mov    $0x1,%edx
   127cd:	mov    %r12,%rax
   127d0:	mov    %rax,%rcx
   127d3:	jmpq   11a9b <png_image_read_colormap+0x51b>
   127d8:	cmp    $0x2,%r10d
   127dc:	je     12aa5 <png_image_read_colormap+0x1525>
   127e2:	mov    %rsi,-0x98(%rbp)
   127e9:	mov    %r15,-0x88(%rbp)
   127f0:	mov    %r14,-0x8(%rbp)
   127f4:	mov    %rax,%r14
   127f7:	xor    %r15d,%r15d
   127fa:	mov    %r15,%rax
   127fd:	jmpq   11f37 <png_image_read_colormap+0x9b7>
   12802:	cmp    %ecx,%eax
   12804:	jne    11ecb <png_image_read_colormap+0x94b>
   1280a:	mov    %r10d,(%rsp)
   1280e:	mov    %rbx,%rdi
   12811:	mov    %rax,%rsi
   12814:	mov    %r12,%rdx
   12817:	mov    %r10,-0xa8(%rbp)
   1281e:	mov    %rbx,-0xa0(%rbp)
   12825:	mov    %rcx,-0x100(%rbp)
   1282c:	mov    %r11,%rcx
   1282f:	mov    %rax,%rbx
   12832:	mov    %r9,%r11
   12835:	mov    %rdx,%r9
   12838:	mov    %r11,%rdx
   1283b:	callq  10ad0 <png_create_colormap_entry>
   12840:	jmpq   11f07 <png_image_read_colormap+0x987>
   12845:	mov    %r14,%rdi
   12848:	callq  5580 <png_set_packing@plt>
   1284d:	mov    %rbx,-0x58(%rbp)
   12851:	mov    -0x8(%rbp),%r11
   12855:	mov    -0x88(%rbp),%r15
   1285c:	mov    $0x100,%r10d
   12862:	mov    $0x3,%esi
   12867:	xor    %r12d,%r12d
   1286a:	mov    $0x1,%edx
   1286f:	mov    %r12,%rax
   12872:	mov    %rax,%rcx
   12875:	jmpq   11a9b <png_image_read_colormap+0x51b>
   1287a:	mov    -0xd0(%rbp),%r8
   12881:	cmp    %r13d,%r8d
   12884:	jne    11f94 <png_image_read_colormap+0xa14>
   1288a:	cmp    $0x2,%r15d
   1288e:	je     12acb <png_image_read_colormap+0x154b>
   12894:	mov    %r13,%r12
   12897:	mov    %rax,%r13
   1289a:	mov    -0x58(%rbp),%rbx
   1289e:	jmpq   12b32 <png_image_read_colormap+0x15b2>
   128a3:	cmp    0x1c(%r15),%r13d
   128a7:	ja     12032 <png_image_read_colormap+0xab2>
   128ad:	mov    %r13d,0x1c(%r15)
   128b1:	cmp    $0x4,%ecx
   128b4:	jbe    12b99 <png_image_read_colormap+0x1619>
   128ba:	mov    %r14,%rdi
   128bd:	lea    0x1b7e9(%rip),%rsi        # 2e0ad <chunks_to_process.34+0x2a8>
   128c4:	callq  5470 <png_error@plt>
   128c9:	mov    %r11,%rdx
   128cc:	shl    $0x4,%edx
   128cf:	add    %r11d,%edx
   128d2:	lea    (%rdx,%rdx,2),%r15d
   128d6:	mov    %rcx,%r8
   128d9:	sub    %r15d,%r8d
   128dc:	mov    %r8,%rdx
   128df:	imul   %r10d,%edx
   128e3:	mov    %r9,-0x78(%rbp)
   128e7:	mov    %rdx,-0x60(%rbp)
   128eb:	imul   %r8d,%r9d
   128ef:	mov    %r9,-0x70(%rbp)
   128f3:	imul   %eax,%r8d
   128f7:	mov    %r8,-0x90(%rbp)
   128fe:	mov    %r11,-0x100(%rbp)
   12905:	mov    %r10,-0x68(%rbp)
   12909:	mov    %rax,-0xd8(%rbp)
   12910:	mov    %r12,%rax
   12913:	jmpq   12241 <png_image_read_colormap+0xcc1>
   12918:	mov    %r14,%rdi
   1291b:	lea    0x1b657(%rip),%rsi        # 2df79 <chunks_to_process.34+0x174>
   12922:	callq  5470 <png_error@plt>
   12927:	mov    %rsi,%rdi
   1292a:	lea    0x1b690(%rip),%rsi        # 2dfc1 <chunks_to_process.34+0x1bc>
   12931:	callq  5470 <png_error@plt>
   12936:	movl   $0x1,(%rsp)
   1293d:	mov    %rbx,%rdi
   12940:	mov    %r13,%rsi
   12943:	mov    %r15,%rdx
   12946:	mov    %r14,%rcx
   12949:	mov    %r12,%r8
   1294c:	callq  10ad0 <png_create_colormap_entry>
   12951:	add    %r12d,%r12d
   12954:	or     $0x7f,%r12d
   12958:	add    $0x1,%r13d
   1295c:	mov    $0x80,%r9d
   12962:	cmp    $0xff,%r12d
   12969:	jbe    12936 <png_image_read_colormap+0x13b6>
   1296b:	add    %r14d,%r14d
   1296e:	or     $0x7f,%r14d
   12972:	xor    %r12d,%r12d
   12975:	cmp    $0xff,%r14d
   1297c:	jbe    12962 <png_image_read_colormap+0x13e2>
   1297e:	add    %r15d,%r15d
   12981:	or     $0x7f,%r15d
   12985:	cmp    $0xff,%r15d
   1298c:	jbe    12bc5 <png_image_read_colormap+0x1645>
   12992:	mov    %rbx,-0x58(%rbp)
   12996:	mov    -0x48(%rbp),%r10
   1299a:	mov    $0x4,%ecx
   1299f:	mov    -0x18(%rbp),%r11
   129a3:	mov    -0x60(%rbp),%r15
   129a7:	mov    -0x100(%rbp),%r14
   129ae:	mov    $0x1,%edx
   129b3:	mov    %rdx,%rax
   129b6:	mov    %rax,%rsi
   129b9:	jmpq   11a9b <png_image_read_colormap+0x51b>
   129be:	add    $0x1,%r13d
   129c2:	mov    %r14,%rcx
   129c5:	mov    %r15,%r8
   129c8:	mov    $0x80,%r10d
   129ce:	mov    -0x100(%rbp),%r15
   129d5:	xor    %r12d,%r12d
   129d8:	mov    $0x1,%edx
   129dd:	mov    %r12,%rax
   129e0:	jmpq   12cac <png_image_read_colormap+0x172c>
   129e5:	lea    (%rdi,%rdi,2),%rsi
   129e9:	movzbl (%rcx,%rsi,1),%r11d
   129ee:	movzbl 0x1(%rcx,%rsi,1),%r12d
   129f4:	movzbl 0x2(%rcx,%rsi,1),%r8d
   129fa:	cmp    %r15d,%edx
   129fd:	jb     11dda <png_image_read_colormap+0x85a>
   12a03:	mov    $0xff,%r9d
   12a09:	jmpq   11ddf <png_image_read_colormap+0x85f>
   12a0e:	mov    %r10d,(%rsp)
   12a12:	mov    %rbx,%rdi
   12a15:	mov    %rdx,%rsi
   12a18:	xor    %r12d,%r12d
   12a1b:	mov    %r10,-0xe8(%rbp)
   12a22:	mov    %rbx,-0x100(%rbp)
   12a29:	mov    %r11,%rcx
   12a2c:	mov    %rax,%rbx
   12a2f:	mov    %r9,%r11
   12a32:	mov    %r12,%r9
   12a35:	mov    %rdx,%r12
   12a38:	mov    %r11,%rdx
   12a3b:	callq  10ad0 <png_create_colormap_entry>
   12a40:	mov    %rbx,%rax
   12a43:	mov    -0x100(%rbp),%rbx
   12a4a:	mov    -0xe8(%rbp),%r10
   12a51:	jmpq   11e1c <png_image_read_colormap+0x89c>
   12a56:	movzbl (%r14,%r12,1),%edx
   12a5b:	mov    %rdx,%rcx
   12a5e:	shl    $0x8,%ecx
   12a61:	lea    (%rdx,%rcx,1),%r9d
   12a65:	mov    %r13,%rcx
   12a68:	mov    %rax,%r8
   12a6b:	mov    %r15d,(%rsp)
   12a6f:	mov    %rbx,%rdi
   12a72:	mov    -0x100(%rbp),%r12
   12a79:	mov    %r12,%rsi
   12a7c:	mov    -0xc8(%rbp),%rdx
   12a83:	callq  10ad0 <png_create_colormap_entry>
   12a88:	mov    %r15,%r10
   12a8b:	mov    -0xc0(%rbp),%r13
   12a92:	mov    -0xf0(%rbp),%r15
   12a99:	mov    -0xb8(%rbp),%rax
   12aa0:	jmpq   11e1c <png_image_read_colormap+0x89c>
   12aa5:	mov    %rsi,-0x98(%rbp)
   12aac:	mov    %r15,-0x88(%rbp)
   12ab3:	mov    %r14,-0x8(%rbp)
   12ab7:	mov    %rax,%r14
   12aba:	xor    %r15d,%r15d
   12abd:	mov    $0xffff,%r12d
   12ac3:	mov    %r15,%rax
   12ac6:	jmpq   11f37 <png_image_read_colormap+0x9b7>
   12acb:	mov    %r13,%rcx
   12ace:	shl    $0x8,%ecx
   12ad1:	sub    %r13d,%ecx
   12ad4:	mov    %rcx,%rdx
   12ad7:	shr    $0xf,%edx
   12ada:	mov    %edx,%esi
   12adc:	mov    -0x100(%rbp),%rdx
   12ae3:	movzbl (%rsi,%rdx,1),%edx
   12ae7:	and    $0x7fff,%ecx
   12aed:	imul   %ecx,%edx
   12af0:	shr    $0xc,%edx
   12af3:	mov    -0x78(%rbp),%rcx
   12af7:	movzwl (%rcx,%rsi,2),%ecx
   12afb:	movl   $0x2,(%rsp)
   12b02:	lea    (%rdx,%rcx,1),%r12d
   12b06:	and    $0xff00,%r12d
   12b0d:	shr    $0x8,%r12d
   12b11:	mov    %r13,%rdx
   12b14:	mov    %rax,%r13
   12b17:	mov    %rdx,%rcx
   12b1a:	mov    %rdx,%r8
   12b1d:	mov    -0x58(%rbp),%rbx
   12b21:	mov    %rbx,%rdi
   12b24:	mov    %r12,%rsi
   12b27:	mov    $0xffff,%r9d
   12b2d:	callq  10ad0 <png_create_colormap_entry>
   12b32:	movb   $0x0,-0x128(%rbp)
   12b39:	mov    %r12w,-0x122(%rbp)
   12b41:	mov    %r12w,-0x124(%rbp)
   12b49:	mov    %r12w,-0x126(%rbp)
   12b51:	mov    %r12w,-0x120(%rbp)
   12b59:	lea    -0x128(%rbp),%rsi
   12b60:	xor    %r12d,%r12d
   12b63:	mov    %r12,%r8
   12b66:	mov    %r14,%rdi
   12b69:	mov    $0x1,%r15d
   12b6f:	mov    %r15,%rdx
   12b72:	mov    %r12,%rcx
   12b75:	callq  5320 <png_set_background_fixed@plt>
   12b7a:	mov    %r15,%rsi
   12b7d:	mov    -0x8(%rbp),%r11
   12b81:	mov    -0x50(%rbp),%r15
   12b85:	mov    $0x100,%r10d
   12b8b:	mov    %rsi,%rdx
   12b8e:	mov    %r12,%rax
   12b91:	mov    %rax,%rcx
   12b94:	jmpq   11a9b <png_image_read_colormap+0x51b>
   12b99:	lea    0x1ad94(%rip),%rsi        # 2d934 <png_pass_yinc.24+0x3d>
   12ba0:	movslq (%rsi,%rcx,4),%rax
   12ba4:	add    %rsi,%rax
   12ba7:	jmpq   *%rax
   12ba9:	cmp    $0xd8,%r10d
   12bb0:	je     12d2b <png_image_read_colormap+0x17ab>
   12bb6:	mov    %r14,%rdi
   12bb9:	lea    0x1b514(%rip),%rsi        # 2e0d4 <chunks_to_process.34+0x2cf>
   12bc0:	callq  5470 <png_error@plt>
   12bc5:	mov    %r12,%r14
   12bc8:	jmpq   12975 <png_image_read_colormap+0x13f5>
   12bcd:	mov    %rbx,%rdi
   12bd0:	mov    %r15,%r9
   12bd3:	mov    %r13,-0xa0(%rbp)
   12bda:	mov    %rcx,%r12
   12bdd:	mov    %r10,%rcx
   12be0:	mov    %rsi,%r13
   12be3:	mov    %rax,%rsi
   12be6:	callq  10a00 <png_colormap_compose>
   12beb:	mov    %rbx,%rdi
   12bee:	mov    %r13,%rsi
   12bf1:	mov    $0x1,%edx
   12bf6:	mov    $0x80,%ecx
   12bfb:	mov    %r12,%r8
   12bfe:	mov    %rax,%r12
   12c01:	mov    %r15,%r9
   12c04:	callq  10a00 <png_colormap_compose>
   12c09:	mov    %rax,%r13
   12c0c:	mov    %rbx,%rdi
   12c0f:	mov    %r14,%rsi
   12c12:	mov    $0x1,%edx
   12c17:	mov    $0x80,%ecx
   12c1c:	mov    -0xd0(%rbp),%r8
   12c23:	mov    %r15,%r9
   12c26:	callq  10a00 <png_colormap_compose>
   12c2b:	mov    %r13,%rcx
   12c2e:	mov    %r12,%rdx
   12c31:	mov    %rax,%r8
   12c34:	mov    %r15d,(%rsp)
   12c38:	mov    %rbx,%rdi
   12c3b:	mov    -0xa0(%rbp),%r13
   12c42:	mov    %r13,%rsi
   12c45:	xor    %r12d,%r12d
   12c48:	mov    %r12,%r9
   12c4b:	callq  10ad0 <png_create_colormap_entry>
   12c50:	add    %r14d,%r14d
   12c53:	or     $0x7f,%r14d
   12c57:	add    $0x1,%r13d
   12c5b:	mov    -0x100(%rbp),%rsi
   12c62:	mov    -0xb8(%rbp),%rax
   12c69:	mov    $0x80,%r10d
   12c6f:	mov    -0xd8(%rbp),%rcx
   12c76:	mov    -0xe0(%rbp),%r8
   12c7d:	mov    $0x1,%edx
   12c82:	cmp    $0xff,%r14d
   12c89:	jbe    12bcd <png_image_read_colormap+0x164d>
   12c8f:	add    %esi,%esi
   12c91:	or     $0x7f,%esi
   12c94:	mov    %rsi,-0x100(%rbp)
   12c9b:	cmp    $0xff,%esi
   12ca1:	jbe    12d46 <png_image_read_colormap+0x17c6>
   12ca7:	add    %eax,%eax
   12ca9:	or     $0x7f,%eax
   12cac:	mov    %rax,-0xb8(%rbp)
   12cb3:	cmp    $0xff,%eax
   12cb8:	jbe    12d4e <png_image_read_colormap+0x17ce>
   12cbe:	mov    %rbx,-0x58(%rbp)
   12cc2:	mov    -0xc0(%rbp),%r10
   12cc9:	mov    $0x4,%ecx
   12cce:	mov    -0x40(%rbp),%r11
   12cd2:	mov    -0x68(%rbp),%r15
   12cd6:	mov    -0xa8(%rbp),%r14
   12cdd:	mov    %rdx,%rax
   12ce0:	mov    %rax,%rsi
   12ce3:	jmpq   11a9b <png_image_read_colormap+0x51b>
   12ce8:	cmp    $0x100,%r10d
   12cef:	jne    12bb6 <png_image_read_colormap+0x1636>
   12cf5:	jmp    12d2b <png_image_read_colormap+0x17ab>
   12cf7:	cmp    $0xe7,%r10d
   12cfe:	jne    12bb6 <png_image_read_colormap+0x1636>
   12d04:	jmp    12d2b <png_image_read_colormap+0x17ab>
   12d06:	cmp    %r10d,%r13d
   12d09:	jbe    12bb6 <png_image_read_colormap+0x1636>
   12d0f:	cmp    $0xfe,%r10d
   12d16:	jne    12bb6 <png_image_read_colormap+0x1636>
   12d1c:	jmp    12d2b <png_image_read_colormap+0x17ab>
   12d1e:	cmp    $0x100,%r10d
   12d25:	jne    12bb6 <png_image_read_colormap+0x1636>
   12d2b:	mov    %ecx,0x48(%rbx)
   12d2e:	mov    %rdx,%rax
   12d31:	mov    %r11,%rbx
   12d34:	mov    -0x38(%rbp),%r15
   12d38:	mov    -0x30(%rbp),%r14
   12d3c:	mov    -0x20(%rbp),%r12
   12d40:	mov    -0x28(%rbp),%r13
   12d44:	leaveq 
   12d45:	retq   
   12d46:	mov    %r12,%r14
   12d49:	jmpq   12c82 <png_image_read_colormap+0x1702>
   12d4e:	mov    %r12,%rsi
   12d51:	jmpq   12c94 <png_image_read_colormap+0x1714>
   12d56:	nopw   %cs:0x0(%rax,%rax,1)

0000000000012d60 <png_image_read_and_map>:
   12d60:	push   %rbp
   12d61:	mov    %rsp,%rbp
   12d64:	sub    $0xa0,%rsp
   12d6b:	mov    %rdi,-0x90(%rbp)
   12d72:	mov    $0x1,%eax
   12d77:	mov    $0x7,%r11d
   12d7d:	mov    (%rdi),%r8
   12d80:	mov    (%r8),%rcx
   12d83:	mov    (%rcx),%rcx
   12d86:	mov    %rcx,-0x88(%rbp)
   12d8d:	movzbl 0x264(%rcx),%edx
   12d94:	test   %dl,%dl
   12d96:	jne    12df8 <png_image_read_and_map+0x98>
   12d98:	mov    %rax,%r10
   12d9b:	mov    %r10,-0x30(%rbp)
   12d9f:	mov    0x10(%r8),%esi
   12da3:	mov    %rsi,-0x98(%rbp)
   12daa:	mov    0xc(%r8),%r9d
   12dae:	mov    %r9,-0x80(%rbp)
   12db2:	mov    0x30(%rdi),%rdx
   12db6:	mov    %rdx,-0x78(%rbp)
   12dba:	mov    0x38(%rdi),%r8
   12dbe:	mov    %r15,-0x28(%rbp)
   12dc2:	mov    %r8,-0x58(%rbp)
   12dc6:	movslq 0x48(%rdi),%r15
   12dca:	mov    %r14,-0x20(%rbp)
   12dce:	mov    %r15,-0x68(%rbp)
   12dd2:	xor    %r14d,%r14d
   12dd5:	mov    %r13,-0x18(%rbp)
   12dd9:	mov    %r12,-0x10(%rbp)
   12ddd:	mov    %rbx,-0x8(%rbp)
   12de1:	mov    %r8,%rbx
   12de4:	mov    %rdx,%r12
   12de7:	mov    %rdi,%rdx
   12dea:	mov    %rcx,%rdi
   12ded:	mov    %r14,%r13
   12df0:	mov    %r10,%r14
   12df3:	mov    %r13,%r10
   12df6:	jmp    12e66 <png_image_read_and_map+0x106>
   12df8:	cmp    $0x1,%dl
   12dfb:	jne    12e85 <png_image_read_and_map+0x125>
   12e01:	mov    %r11,%r10
   12e04:	jmp    12d9b <png_image_read_and_map+0x3b>
   12e06:	lea    (%rdi,%rdi,2),%ecx
   12e09:	lea    (%rdi,%rcx,2),%ecx
   12e0c:	shl    $0x5,%ecx
   12e0f:	lea    (%rcx,%rdi,8),%ecx
   12e12:	sub    %edi,%ecx
   12e14:	add    $0x80,%ecx
   12e1a:	shr    $0x8,%ecx
   12e1d:	mov    %cl,(%rax)
   12e1f:	add    %r11,%rax
   12e22:	add    $0x2,%rdx
   12e26:	cmp    %rax,%r10
   12e29:	ja     12e94 <png_image_read_and_map+0x134>
   12e2b:	mov    -0x50(%rbp),%r14
   12e2f:	mov    -0x70(%rbp),%rax
   12e33:	add    %eax,%r13d
   12e36:	mov    -0x90(%rbp),%rdx
   12e3d:	mov    -0x98(%rbp),%rsi
   12e44:	mov    -0x88(%rbp),%rdi
   12e4b:	xor    %r10d,%r10d
   12e4e:	cmp    %esi,%r13d
   12e51:	jb     12eb3 <png_image_read_and_map+0x153>
   12e53:	mov    -0x38(%rbp),%r13
   12e57:	mov    -0x30(%rbp),%r14
   12e5b:	mov    $0x1,%eax
   12e60:	mov    $0x7,%r11d
   12e66:	cmp    %r13d,%r14d
   12e69:	jg     12f00 <png_image_read_and_map+0x1a0>
   12e6f:	mov    -0x8(%rbp),%rbx
   12e73:	mov    -0x10(%rbp),%r12
   12e77:	mov    -0x18(%rbp),%r13
   12e7b:	mov    -0x20(%rbp),%r14
   12e7f:	mov    -0x28(%rbp),%r15
   12e83:	leaveq 
   12e84:	retq   
   12e85:	mov    %rcx,%rdi
   12e88:	lea    0x1b26b(%rip),%rsi        # 2e0fa <chunks_to_process.34+0x2f5>
   12e8f:	callq  5470 <png_error@plt>
   12e94:	movzbl (%rdx),%edi
   12e97:	movzbl 0x1(%rdx),%esi
   12e9b:	cmp    $0xe5,%sil
   12e9f:	ja     12e06 <png_image_read_and_map+0xa6>
   12ea5:	cmp    $0x19,%sil
   12ea9:	ja     12f26 <png_image_read_and_map+0x1c6>
   12eab:	mov    %r14,%rcx
   12eae:	jmpq   12e1d <png_image_read_and_map+0xbd>
   12eb3:	mov    0x28(%rdx),%rsi
   12eb7:	mov    %rsi,-0x40(%rbp)
   12ebb:	xor    %edx,%edx
   12ebd:	mov    %r8,-0x48(%rbp)
   12ec1:	mov    %rax,-0x70(%rbp)
   12ec5:	callq  5600 <png_read_row@plt>
   12eca:	mov    %r14d,%r11d
   12ecd:	mov    %r13d,%eax
   12ed0:	imul   %rbx,%rax
   12ed4:	cmp    $0x2,%r15d
   12ed8:	lea    (%rax,%r12,1),%rcx
   12edc:	mov    -0x48(%rbp),%r8
   12ee0:	mov    %r8d,%eax
   12ee3:	lea    (%rcx,%rax,1),%rax
   12ee7:	mov    -0x80(%rbp),%r9
   12eeb:	lea    (%rcx,%r9,1),%r10
   12eef:	jle    12f49 <png_image_read_and_map+0x1e9>
   12ef1:	cmp    $0x3,%r15d
   12ef5:	jne    12f66 <png_image_read_and_map+0x206>
   12ef7:	mov    -0x40(%rbp),%rcx
   12efb:	jmpq   12fd5 <png_image_read_and_map+0x275>
   12f00:	lea    0x1(%r13),%r8d
   12f04:	movzbl 0x264(%rdi),%ecx
   12f0b:	cmp    $0x1,%cl
   12f0e:	je     12fdf <png_image_read_and_map+0x27f>
   12f14:	mov    %r8,-0x38(%rbp)
   12f18:	mov    %rax,%r14
   12f1b:	mov    %r10,%r8
   12f1e:	mov    %r8,%r13
   12f21:	jmpq   12e4e <png_image_read_and_map+0xee>
   12f26:	lea    0x82(%rdi,%rdi,4),%ecx
   12f2d:	shr    $0x8,%ecx
   12f30:	lea    0x82(%rsi,%rsi,4),%esi
   12f37:	shr    $0x8,%esi
   12f3a:	lea    (%rsi,%rsi,2),%esi
   12f3d:	lea    0xe2(%rcx,%rsi,2),%ecx
   12f44:	jmpq   12e1d <png_image_read_and_map+0xbd>
   12f49:	cmp    $0x1,%r15d
   12f4d:	jne    12ff3 <png_image_read_and_map+0x293>
   12f53:	mov    %r14,-0x50(%rbp)
   12f57:	mov    -0x40(%rbp),%rdx
   12f5b:	mov    $0xe7,%r14d
   12f61:	jmpq   12e26 <png_image_read_and_map+0xc6>
   12f66:	cmp    $0x4,%r15d
   12f6a:	jne    12e2f <png_image_read_and_map+0xcf>
   12f70:	mov    %r14,-0x50(%rbp)
   12f74:	mov    %r13,-0x60(%rbp)
   12f78:	mov    $0xd9,%edi
   12f7d:	mov    -0x40(%rbp),%rdx
   12f81:	mov    $0xe2,%r8d
   12f87:	mov    $0xeb,%r14d
   12f8d:	mov    $0xd8,%ebx
   12f92:	jmpq   13052 <png_image_read_and_map+0x2f2>
   12f97:	movzbl 0x1(%rcx),%edx
   12f9b:	lea    0x82(%rdx,%rdx,4),%edx
   12fa2:	shr    $0x8,%edx
   12fa5:	movzbl (%rcx),%esi
   12fa8:	lea    0x82(%rsi,%rsi,4),%esi
   12faf:	shr    $0x8,%esi
   12fb2:	lea    (%rsi,%rsi,2),%esi
   12fb5:	lea    (%rdx,%rsi,2),%edx
   12fb8:	lea    (%rdx,%rdx,2),%esi
   12fbb:	movzbl 0x2(%rcx),%edx
   12fbf:	lea    0x82(%rdx,%rdx,4),%edx
   12fc6:	shr    $0x8,%edx
   12fc9:	lea    (%rdx,%rsi,2),%edx
   12fcc:	mov    %dl,(%rax)
   12fce:	add    $0x3,%rcx
   12fd2:	add    %r11,%rax
   12fd5:	cmp    %rax,%r10
   12fd8:	ja     12f97 <png_image_read_and_map+0x237>
   12fda:	jmpq   12e2f <png_image_read_and_map+0xcf>
   12fdf:	cmp    $0x1,%r13d
   12fe3:	jg     13074 <png_image_read_and_map+0x314>
   12fe9:	mov    $0x3,%ecx
   12fee:	jmpq   1307f <png_image_read_and_map+0x31f>
   12ff3:	cmp    $0x2,%r15d
   12ff7:	jne    12e2f <png_image_read_and_map+0xcf>
   12ffd:	mov    %r14,-0x60(%rbp)
   13001:	mov    -0x40(%rbp),%rcx
   13005:	mov    $0xff,%edi
   1300a:	mov    $0xfe,%esi
   1300f:	jmpq   130a9 <png_image_read_and_map+0x349>
   13014:	movzbl 0x1(%rdx),%ecx
   13018:	lea    0x82(%rcx,%rcx,4),%ecx
   1301f:	shr    $0x8,%ecx
   13022:	movzbl (%rdx),%esi
   13025:	lea    0x82(%rsi,%rsi,4),%esi
   1302c:	shr    $0x8,%esi
   1302f:	lea    (%rsi,%rsi,2),%esi
   13032:	lea    (%rcx,%rsi,2),%ecx
   13035:	lea    (%rcx,%rcx,2),%esi
   13038:	movzbl 0x2(%rdx),%ecx
   1303c:	lea    0x82(%rcx,%rcx,4),%ecx
   13043:	shr    $0x8,%ecx
   13046:	lea    (%rcx,%rsi,2),%ecx
   13049:	mov    %cl,(%rax)
   1304b:	add    $0x4,%rdx
   1304f:	add    %r11,%rax
   13052:	cmp    %r10,%rax
   13055:	jb     130bb <png_image_read_and_map+0x35b>
   13057:	mov    -0x68(%rbp),%r15
   1305b:	mov    -0x58(%rbp),%rbx
   1305f:	mov    -0x60(%rbp),%r13
   13063:	mov    -0x50(%rbp),%r14
   13067:	mov    -0x78(%rbp),%r12
   1306b:	mov    -0x48(%rbp),%r8
   1306f:	jmpq   12e2f <png_image_read_and_map+0xcf>
   13074:	mov    %r11,%rcx
   13077:	sub    %r13d,%ecx
   1307a:	sar    %ecx
   1307c:	mov    %rax,%r10
   1307f:	test   %r10,%r10
   13082:	jne    130d5 <png_image_read_and_map+0x375>
   13084:	mov    $0x3,%r11d
   1308a:	jmp    130db <png_image_read_and_map+0x37b>
   1308c:	movzbl (%rcx),%edx
   1308f:	movzbl 0x1(%rcx),%r8d
   13094:	test   %r8b,%r8b
   13097:	jne    1312d <png_image_read_and_map+0x3cd>
   1309d:	mov    %rsi,%rdx
   130a0:	mov    %dl,(%rax)
   130a2:	add    %r11,%rax
   130a5:	add    $0x2,%rcx
   130a9:	cmp    %rax,%r10
   130ac:	ja     1308c <png_image_read_and_map+0x32c>
   130ae:	mov    -0x60(%rbp),%r14
   130b2:	mov    -0x48(%rbp),%r8
   130b6:	jmpq   12e2f <png_image_read_and_map+0xcf>
   130bb:	movzbl 0x3(%rdx),%ecx
   130bf:	cmp    $0xc3,%cl
   130c2:	ja     13014 <png_image_read_and_map+0x2b4>
   130c8:	cmp    $0x3f,%cl
   130cb:	ja     1313e <png_image_read_and_map+0x3de>
   130cd:	mov    %rbx,%rcx
   130d0:	jmpq   13049 <png_image_read_and_map+0x2e9>
   130d5:	sub    %r13d,%r11d
   130d8:	sar    %r11d
   130db:	mov    %r8,%r10
   130de:	shl    %cl,%eax
   130e0:	add    $0xffffffff,%eax
   130e3:	mov    %r10,%rcx
   130e6:	sar    %ecx
   130e8:	mov    $0x3,%r12d
   130ee:	neg    %ecx
   130f0:	add    %r12d,%ecx
   130f3:	mov    %r13,%r8
   130f6:	and    $0x1,%r8d
   130fa:	shl    %cl,%r8d
   130fd:	and    $0x7,%r8d
   13101:	sub    %r8d,%eax
   13104:	add    %r9d,%eax
   13107:	mov    %r11,%rcx
   1310a:	mov    %r13,%r11
   1310d:	mov    %r10,%r13
   13110:	shr    %cl,%eax
   13112:	test   %eax,%eax
   13114:	jne    13158 <png_image_read_and_map+0x3f8>
   13116:	mov    -0x78(%rbp),%r12
   1311a:	mov    $0x1,%eax
   1311f:	xor    %r10d,%r10d
   13122:	mov    $0x7,%r11d
   13128:	jmpq   12e66 <png_image_read_and_map+0x106>
   1312d:	cmp    $0xfe,%dl
   13130:	jne    130a0 <png_image_read_and_map+0x340>
   13136:	mov    %rdi,%rdx
   13139:	jmpq   130a0 <png_image_read_and_map+0x340>
   1313e:	movzbl (%rdx),%esi
   13141:	mov    %rsi,%r13
   13144:	and    $0x80,%r13d
   1314b:	test   %r13d,%r13d
   1314e:	jg     13168 <png_image_read_and_map+0x408>
   13150:	mov    %rdi,%rcx
   13153:	mov    %r8,%r12
   13156:	jmp    1316e <png_image_read_and_map+0x40e>
   13158:	cmp    $0x2,%r11d
   1315c:	jg     1319b <png_image_read_and_map+0x43b>
   1315e:	mov    %r13,%r10
   13161:	mov    $0x8,%eax
   13166:	jmp    131ab <png_image_read_and_map+0x44b>
   13168:	mov    %r8,%rcx
   1316b:	mov    %r14,%r12
   1316e:	and    $0x40,%esi
   13171:	test   %esi,%esi
   13173:	jle    13178 <png_image_read_and_map+0x418>
   13175:	mov    %r12,%rcx
   13178:	test   %r13d,%r13d
   1317b:	jle    13180 <png_image_read_and_map+0x420>
   1317d:	add    $0x3,%ecx
   13180:	test   %esi,%esi
   13182:	jle    13187 <png_image_read_and_map+0x427>
   13184:	add    $0x3,%ecx
   13187:	test   %r13d,%r13d
   1318a:	jle    1318f <png_image_read_and_map+0x42f>
   1318c:	add    $0x1,%ecx
   1318f:	test   %esi,%esi
   13191:	jle    13196 <png_image_read_and_map+0x436>
   13193:	add    $0x1,%ecx
   13196:	jmpq   13049 <png_image_read_and_map+0x2e9>
   1319b:	lea    -0x1(%r11),%ecx
   1319f:	sar    %ecx
   131a1:	mov    %r13,%r10
   131a4:	mov    $0x8,%eax
   131a9:	shr    %cl,%eax
   131ab:	mov    %r11,%rcx
   131ae:	sar    %ecx
   131b0:	sub    %ecx,%r12d
   131b3:	mov    %r11,%r13
   131b6:	not    %r13d
   131b9:	and    $0x1,%r13d
   131bd:	mov    %r12,%rcx
   131c0:	shl    %cl,%r13d
   131c3:	and    $0x7,%r13d
   131c7:	mov    $0x7,%ecx
   131cc:	sub    %r11d,%ecx
   131cf:	sar    %ecx
   131d1:	mov    $0x1,%r14d
   131d7:	shl    %cl,%r14d
   131da:	mov    %r10,-0x38(%rbp)
   131de:	mov    -0x78(%rbp),%r12
   131e2:	xor    %r10d,%r10d
   131e5:	jmpq   12e4e <png_image_read_and_map+0xee>
   131ea:	nopw   0x0(%rax,%rax,1)

00000000000131f0 <png_image_read_colormapped>:
   131f0:	push   %rbp
   131f1:	mov    %rsp,%rbp
   131f4:	sub    $0x40,%rsp
   131f8:	mov    %r12,-0x10(%rbp)
   131fc:	mov    %r13,-0x18(%rbp)
   13200:	mov    %r14,-0x20(%rbp)
   13204:	mov    %r15,-0x28(%rbp)
   13208:	mov    %rbx,-0x8(%rbp)
   1320c:	mov    (%rdi),%r14
   1320f:	mov    (%r14),%rax
   13212:	mov    0x8(%rax),%r13
   13216:	mov    (%rax),%rbx
   13219:	mov    %rdi,%r12
   1321c:	mov    %rbx,%rdi
   1321f:	callq  10890 <png_image_skip_unused_chunks>
   13224:	xor    %r15d,%r15d
   13227:	movslq 0x48(%r12),%rax
   1322c:	test   %eax,%eax
   1322e:	jne    1323b <png_image_read_colormapped+0x4b>
   13230:	mov    %rbx,%rdi
   13233:	callq  53f0 <png_set_interlace_handling@plt>
   13238:	mov    %rax,%r15
   1323b:	mov    %rbx,%rdi
   1323e:	mov    %r13,%rsi
   13241:	callq  5080 <png_read_update_info@plt>
   13246:	mov    0x48(%r12),%eax
   1324b:	cmp    $0x4,%eax
   1324e:	ja     1329e <png_image_read_colormapped+0xae>
   13250:	lea    0x1a6f1(%rip),%rcx        # 2d948 <png_pass_yinc.24+0x51>
   13257:	movslq (%rcx,%rax,4),%rax
   1325b:	add    %rcx,%rax
   1325e:	jmpq   *%rax
   13260:	movzbl 0x25(%r13),%eax
   13265:	cmp    $0x6,%al
   13267:	jne    1329e <png_image_read_colormapped+0xae>
   13269:	movzbl 0x24(%r13),%eax
   1326e:	cmp    $0x8,%al
   13270:	jne    1329e <png_image_read_colormapped+0xae>
   13272:	movslq 0x2a4(%rbx),%rax
   13279:	cmp    $0x35b60,%eax
   1327e:	jne    1329e <png_image_read_colormapped+0xae>
   13280:	mov    0x1c(%r14),%eax
   13284:	cmp    $0xf4,%eax
   13289:	je     13310 <png_image_read_colormapped+0x120>
   1328f:	jmp    1329e <png_image_read_colormapped+0xae>
   13291:	movzbl 0x25(%r13),%eax
   13296:	cmp    $0x3,%al
   13298:	je     13307 <png_image_read_colormapped+0x117>
   1329a:	test   %al,%al
   1329c:	je     13307 <png_image_read_colormapped+0x117>
   1329e:	mov    %rbx,%rdi
   132a1:	lea    0x1ae69(%rip),%rsi        # 2e111 <chunks_to_process.34+0x30c>
   132a8:	callq  5470 <png_error@plt>
   132ad:	movzbl 0x25(%r13),%eax
   132b2:	cmp    $0x4,%al
   132b4:	jne    1329e <png_image_read_colormapped+0xae>
   132b6:	movzbl 0x24(%r13),%eax
   132bb:	cmp    $0x8,%al
   132bd:	jne    1329e <png_image_read_colormapped+0xae>
   132bf:	movslq 0x2a4(%rbx),%rax
   132c6:	cmp    $0x35b60,%eax
   132cb:	jne    1329e <png_image_read_colormapped+0xae>
   132cd:	mov    0x1c(%r14),%eax
   132d1:	cmp    $0x100,%eax
   132d6:	je     13310 <png_image_read_colormapped+0x120>
   132d8:	jmp    1329e <png_image_read_colormapped+0xae>
   132da:	movzbl 0x25(%r13),%eax
   132df:	cmp    $0x2,%al
   132e1:	jne    1329e <png_image_read_colormapped+0xae>
   132e3:	movzbl 0x24(%r13),%eax
   132e8:	cmp    $0x8,%al
   132ea:	jne    1329e <png_image_read_colormapped+0xae>
   132ec:	movslq 0x2a4(%rbx),%rax
   132f3:	cmp    $0x35b60,%eax
   132f8:	jne    1329e <png_image_read_colormapped+0xae>
   132fa:	mov    0x1c(%r14),%eax
   132fe:	cmp    $0xd8,%eax
   13303:	je     13310 <png_image_read_colormapped+0x120>
   13305:	jmp    1329e <png_image_read_colormapped+0xae>
   13307:	movzbl 0x24(%r13),%eax
   1330c:	cmp    $0x8,%al
   1330e:	jne    1329e <png_image_read_colormapped+0xae>
   13310:	mov    0x8(%r12),%rax
   13315:	movslq 0x10(%r12),%rsi
   1331a:	test   %esi,%esi
   1331c:	jns    13334 <png_image_read_colormapped+0x144>
   1331e:	mov    %rsi,%rcx
   13321:	neg    %rcx
   13324:	mov    0x10(%r14),%edx
   13328:	add    $0xffffffff,%edx
   1332b:	mov    %edx,%edx
   1332d:	imul   %rdx,%rcx
   13331:	add    %rcx,%rax
   13334:	mov    %rax,0x30(%r12)
   13339:	mov    %rsi,0x38(%r12)
   1333e:	test   %r15d,%r15d
   13341:	je     13354 <png_image_read_colormapped+0x164>
   13343:	mov    %r12,%rax
   13346:	mov    %rsi,%r12
   13349:	mov    %r14,%rcx
   1334c:	xor    %r13d,%r13d
   1334f:	jmpq   133da <png_image_read_colormapped+0x1ea>
   13354:	mov    %r13,%rsi
   13357:	mov    %rbx,%rdi
   1335a:	callq  50c0 <png_get_rowbytes@plt>
   1335f:	mov    %rax,%rsi
   13362:	mov    %rbx,%rdi
   13365:	callq  5800 <png_malloc@plt>
   1336a:	mov    %r14,%rdi
   1336d:	mov    %rax,%r13
   13370:	mov    %r13,0x28(%r12)
   13375:	lea    -0x61c(%rip),%rsi        # 12d60 <png_image_read_and_map>
   1337c:	mov    %r12,%rdx
   1337f:	callq  b260 <png_safe_execute>
   13384:	movq   $0x0,0x28(%r12)
   1338d:	mov    %r13,%rsi
   13390:	mov    %rax,%r13
   13393:	mov    %rbx,%rdi
   13396:	callq  5790 <png_free@plt>
   1339b:	mov    %r13,%rax
   1339e:	mov    -0x8(%rbp),%rbx
   133a2:	mov    -0x28(%rbp),%r15
   133a6:	mov    -0x20(%rbp),%r14
   133aa:	mov    -0x18(%rbp),%r13
   133ae:	mov    -0x10(%rbp),%r12
   133b2:	leaveq 
   133b3:	retq   
   133b4:	mov    %rbx,%rdi
   133b7:	mov    %r14,%rsi
   133ba:	mov    %r13,%rdx
   133bd:	callq  5600 <png_read_row@plt>
   133c2:	add    %r12,%r14
   133c5:	add    $0xffffffff,%r15d
   133c9:	test   %r15d,%r15d
   133cc:	jne    133b4 <png_image_read_colormapped+0x1c4>
   133ce:	mov    -0x38(%rbp),%rax
   133d2:	mov    -0x30(%rbp),%rcx
   133d6:	mov    -0x40(%rbp),%r15
   133da:	lea    -0x1(%r15),%edx
   133de:	test   %edx,%edx
   133e0:	jns    133fd <png_image_read_colormapped+0x20d>
   133e2:	mov    $0x1,%eax
   133e7:	mov    -0x8(%rbp),%rbx
   133eb:	mov    -0x28(%rbp),%r15
   133ef:	mov    -0x20(%rbp),%r14
   133f3:	mov    -0x18(%rbp),%r13
   133f7:	mov    -0x10(%rbp),%r12
   133fb:	leaveq 
   133fc:	retq   
   133fd:	mov    0x10(%rcx),%r15d
   13401:	mov    0x30(%rax),%r14
   13405:	mov    %rdx,-0x40(%rbp)
   13409:	mov    %rcx,-0x30(%rbp)
   1340d:	mov    %rax,-0x38(%rbp)
   13411:	jmp    133c9 <png_image_read_colormapped+0x1d9>
   13413:	data16 nopw %cs:0x0(%rax,%rax,1)
   1341e:	xchg   %ax,%ax

0000000000013420 <png_image_read_composite>:
   13420:	push   %rbp
   13421:	mov    %rsp,%rbp
   13424:	sub    $0xe0,%rsp
   1342b:	mov    %rdi,-0xc8(%rbp)
   13432:	mov    $0x1,%r10d
   13438:	mov    %r10,-0x78(%rbp)
   1343c:	mov    $0x7,%r11d
   13442:	mov    (%rdi),%rcx
   13445:	mov    (%rcx),%rax
   13448:	mov    (%rax),%r9
   1344b:	mov    %r9,-0x88(%rbp)
   13452:	movzbl 0x264(%r9),%eax
   1345a:	test   %al,%al
   1345c:	jne    134f2 <png_image_read_composite+0xd2>
   13462:	mov    %r10,%r11
   13465:	mov    %r11,-0x48(%rbp)
   13469:	mov    0x10(%rcx),%r8d
   1346d:	mov    %r8,-0xd8(%rbp)
   13474:	mov    0xc(%rcx),%eax
   13477:	mov    %rax,-0x90(%rbp)
   1347e:	mov    0x38(%rdi),%rsi
   13482:	mov    %r15,-0x28(%rbp)
   13486:	mov    %rsi,-0x68(%rbp)
   1348a:	lea    0x18cfb(%rip),%rdx        # 2c18c <png_sRGB_table>
   13491:	mov    %r14,-0x20(%rbp)
   13495:	mov    %rdx,-0x60(%rbp)
   13499:	lea    0x18eec(%rip),%rdx        # 2c38c <png_sRGB_base>
   134a0:	mov    %r13,-0x18(%rbp)
   134a4:	mov    %rdx,-0x58(%rbp)
   134a8:	lea    0x192dd(%rip),%rdx        # 2c78c <png_sRGB_delta>
   134af:	mov    %r12,-0x10(%rbp)
   134b3:	mov    %rdx,-0xb0(%rbp)
   134ba:	mov    %rbx,-0x8(%rbp)
   134be:	xor    %edx,%edx
   134c0:	mov    $0x3,%ebx
   134c5:	mov    0x14(%rcx),%ecx
   134c8:	and    $0x2,%ecx
   134cb:	test   %ecx,%ecx
   134cd:	jne    13509 <png_image_read_composite+0xe9>
   134cf:	mov    $0x2,%ecx
   134d4:	mov    %rcx,-0xd0(%rbp)
   134db:	mov    %rsi,%rbx
   134de:	mov    %rdi,%r12
   134e1:	mov    %r9,%rdi
   134e4:	mov    %rdx,%r9
   134e7:	mov    %r10,%rsi
   134ea:	mov    %rsi,%r13
   134ed:	jmpq   135ff <png_image_read_composite+0x1df>
   134f2:	cmp    $0x1,%al
   134f4:	je     13465 <png_image_read_composite+0x45>
   134fa:	mov    %r9,%rdi
   134fd:	lea    0x1abf6(%rip),%rsi        # 2e0fa <chunks_to_process.34+0x2f5>
   13504:	callq  5470 <png_error@plt>
   13509:	mov    $0x4,%ecx
   1350e:	mov    %rcx,-0xd0(%rbp)
   13515:	mov    %rdi,%r12
   13518:	mov    %r9,%rdi
   1351b:	mov    %r10,%r13
   1351e:	mov    %rbx,%r10
   13521:	mov    %rsi,%rbx
   13524:	mov    %rdx,%r9
   13527:	mov    %r10,%rsi
   1352a:	jmpq   135ff <png_image_read_composite+0x1df>
   1352f:	cmp    $0xfe,%r11b
   13533:	mov    %edx,%r8d
   13536:	movzbl (%rbx,%r8,1),%eax
   1353b:	ja     13577 <png_image_read_composite+0x157>
   1353d:	movzbl (%r9,%r8,1),%esi
   13542:	movzwl (%r14,%rsi,2),%edi
   13547:	imul   %ecx,%edi
   1354a:	mov    %rax,%rsi
   1354d:	shl    $0x10,%esi
   13550:	sub    %eax,%esi
   13552:	add    %edi,%esi
   13554:	mov    %rsi,%rax
   13557:	shr    $0xf,%eax
   1355a:	mov    %eax,%edi
   1355c:	movzbl (%rdi,%r13,1),%eax
   13561:	and    $0x7fff,%esi
   13567:	imul   %esi,%eax
   1356a:	shr    $0xc,%eax
   1356d:	movzwl (%r12,%rdi,2),%esi
   13572:	add    %esi,%eax
   13574:	shr    $0x8,%eax
   13577:	mov    %al,(%r9,%r8,1)
   1357b:	add    $0x1,%edx
   1357e:	cmp    %r10d,%edx
   13581:	jb     1352f <png_image_read_composite+0x10f>
   13583:	mov    -0x30(%rbp),%rax
   13587:	mov    -0xa0(%rbp),%r8
   1358e:	mov    -0xb8(%rbp),%rsi
   13595:	xor    %edx,%edx
   13597:	mov    -0xd0(%rbp),%rdi
   1359e:	mov    $0xff,%ecx
   135a3:	add    %r8,%r9
   135a6:	add    %rdi,%rbx
   135a9:	cmp    %rax,%r9
   135ac:	jb     1362c <png_image_read_composite+0x20c>
   135ae:	mov    -0x70(%rbp),%rcx
   135b2:	mov    -0x80(%rbp),%rax
   135b6:	lea    (%rcx,%rax,1),%r13d
   135ba:	mov    -0xa8(%rbp),%r15
   135c1:	mov    -0xc8(%rbp),%r12
   135c8:	mov    -0x38(%rbp),%r14
   135cc:	mov    -0x68(%rbp),%rbx
   135d0:	mov    -0x98(%rbp),%rax
   135d7:	mov    -0x88(%rbp),%rdi
   135de:	mov    -0xd8(%rbp),%r8
   135e5:	cmp    %r8d,%r13d
   135e8:	jb     13642 <png_image_read_composite+0x222>
   135ea:	mov    -0x90(%rbp),%rax
   135f1:	mov    -0x50(%rbp),%r9
   135f5:	mov    -0x48(%rbp),%r11
   135f9:	mov    $0x1,%r13d
   135ff:	mov    %rsi,-0xb8(%rbp)
   13606:	mov    %r10,-0x40(%rbp)
   1360a:	cmp    %r9d,%r11d
   1360d:	jg     136cb <png_image_read_composite+0x2ab>
   13613:	mov    %r13,%rax
   13616:	mov    -0x8(%rbp),%rbx
   1361a:	mov    -0x10(%rbp),%r12
   1361e:	mov    -0x18(%rbp),%r13
   13622:	mov    -0x20(%rbp),%r14
   13626:	mov    -0x28(%rbp),%r15
   1362a:	leaveq 
   1362b:	retq   
   1362c:	movzbl (%rsi,%rbx,1),%r11d
   13631:	test   %r11b,%r11b
   13634:	je     135a3 <png_image_read_composite+0x183>
   1363a:	sub    %r11d,%ecx
   1363d:	jmpq   1357e <png_image_read_composite+0x15e>
   13642:	mov    0x28(%r12),%rsi
   13647:	mov    %rsi,-0xc0(%rbp)
   1364e:	mov    %rax,-0x98(%rbp)
   13655:	callq  5600 <png_read_row@plt>
   1365a:	mov    %r15d,%r8d
   1365d:	mov    %r8,-0xa0(%rbp)
   13664:	mov    %r13d,%eax
   13667:	imul   %rax,%rbx
   1366b:	mov    0x30(%r12),%rcx
   13670:	lea    (%rcx,%r14,1),%rax
   13674:	add    %rbx,%rax
   13677:	mov    %rax,-0x30(%rbp)
   1367b:	lea    (%rbx,%rcx,1),%rdx
   1367f:	mov    -0x98(%rbp),%rcx
   13686:	mov    %ecx,%ecx
   13688:	lea    (%rdx,%rcx,1),%r9
   1368c:	mov    %r13,-0x70(%rbp)
   13690:	mov    %r15,-0xa8(%rbp)
   13697:	mov    -0xb0(%rbp),%r13
   1369e:	mov    -0x60(%rbp),%r14
   136a2:	mov    -0x40(%rbp),%r10
   136a6:	mov    -0xb8(%rbp),%rsi
   136ad:	mov    -0xc0(%rbp),%rbx
   136b4:	xor    %edx,%edx
   136b6:	mov    -0xd0(%rbp),%rdi
   136bd:	mov    -0x58(%rbp),%r12
   136c1:	mov    $0xff,%ecx
   136c6:	jmpq   135a9 <png_image_read_composite+0x189>
   136cb:	mov    %r10,%rcx
   136ce:	imul   %eax,%ecx
   136d1:	mov    %ecx,%r14d
   136d4:	mov    %r14,-0x38(%rbp)
   136d8:	lea    0x1(%r9),%r15d
   136dc:	movzbl 0x264(%rdi),%ecx
   136e3:	cmp    $0x1,%cl
   136e6:	je     13700 <png_image_read_composite+0x2e0>
   136e8:	mov    %r15,-0x50(%rbp)
   136ec:	mov    %rdx,%rax
   136ef:	mov    %rax,%r13
   136f2:	mov    %r10,%r15
   136f5:	pushq  -0x78(%rbp)
   136f8:	popq   -0x80(%rbp)
   136fb:	jmpq   135e5 <png_image_read_composite+0x1c5>
   13700:	cmp    $0x1,%r9d
   13704:	jg     13712 <png_image_read_composite+0x2f2>
   13706:	mov    $0x7,%ebx
   1370b:	mov    $0x3,%ecx
   13710:	jmp    13722 <png_image_read_composite+0x302>
   13712:	mov    $0x7,%ebx
   13717:	mov    %rbx,%rcx
   1371a:	sub    %r9d,%ecx
   1371d:	sar    %ecx
   1371f:	mov    %r13,%rdx
   13722:	test   %rdx,%rdx
   13725:	jne    1372e <png_image_read_composite+0x30e>
   13727:	mov    $0x3,%ebx
   1372c:	jmp    13733 <png_image_read_composite+0x313>
   1372e:	sub    %r9d,%ebx
   13731:	sar    %ebx
   13733:	shl    %cl,%r13d
   13736:	add    $0xffffffff,%r13d
   1373a:	mov    %r15,%rcx
   1373d:	sar    %ecx
   1373f:	mov    $0x3,%r14d
   13745:	neg    %ecx
   13747:	add    %r14d,%ecx
   1374a:	mov    %r9,%rdx
   1374d:	and    $0x1,%edx
   13750:	shl    %cl,%edx
   13752:	and    $0x7,%edx
   13755:	sub    %edx,%r13d
   13758:	add    %eax,%r13d
   1375b:	mov    %rbx,%rcx
   1375e:	shr    %cl,%r13d
   13761:	test   %r13d,%r13d
   13764:	jne    1377a <png_image_read_composite+0x35a>
   13766:	mov    %r15,%r9
   13769:	mov    -0x68(%rbp),%rbx
   1376d:	mov    $0x1,%r13d
   13773:	xor    %edx,%edx
   13775:	jmpq   135ff <png_image_read_composite+0x1df>
   1377a:	cmp    $0x2,%r9d
   1377e:	jg     13787 <png_image_read_composite+0x367>
   13780:	mov    $0x8,%eax
   13785:	jmp    13794 <png_image_read_composite+0x374>
   13787:	lea    -0x1(%r9),%ecx
   1378b:	sar    %ecx
   1378d:	mov    $0x8,%eax
   13792:	shr    %cl,%eax
   13794:	mov    %rax,-0x80(%rbp)
   13798:	mov    %r9,%rax
   1379b:	sar    %eax
   1379d:	sub    %eax,%r14d
   137a0:	mov    %r9,%r13
   137a3:	not    %r13d
   137a6:	and    $0x1,%r13d
   137aa:	mov    %r14,%rcx
   137ad:	shl    %cl,%r13d
   137b0:	and    $0x7,%r13d
   137b4:	mov    %r10,%rax
   137b7:	imul   %edx,%eax
   137ba:	mov    $0x7,%ecx
   137bf:	sub    %r9d,%ecx
   137c2:	sar    %ecx
   137c4:	mov    %r15,%rdx
   137c7:	mov    %r10,%r15
   137ca:	shl    %cl,%r15d
   137cd:	mov    %rdx,-0x50(%rbp)
   137d1:	mov    -0x38(%rbp),%r14
   137d5:	mov    -0x68(%rbp),%rbx
   137d9:	xor    %edx,%edx
   137db:	jmpq   135e5 <png_image_read_composite+0x1c5>

00000000000137e0 <png_image_read_background>:
   137e0:	push   %rbp
   137e1:	mov    %rsp,%rbp
   137e4:	sub    $0xd0,%rsp
   137eb:	mov    %rdi,-0xc0(%rbp)
   137f2:	mov    (%rdi),%rcx
   137f5:	mov    (%rcx),%rax
   137f8:	mov    0x8(%rax),%rdx
   137fc:	mov    0x10(%rcx),%r8d
   13800:	mov    0xc(%rcx),%r9d
   13804:	mov    %r9,-0xd0(%rbp)
   1380b:	mov    (%rax),%r10
   1380e:	mov    %r10,-0xc8(%rbp)
   13815:	mov    0x134(%r10),%eax
   1381c:	mov    %rax,%rsi
   1381f:	and    $0x600000,%esi
   13825:	test   %esi,%esi
   13827:	je     138cf <png_image_read_background+0xef>
   1382d:	and    $0x80,%eax
   13832:	test   %eax,%eax
   13834:	jne    138de <png_image_read_background+0xfe>
   1383a:	mov    %r10,%rax
   1383d:	mov    %rdx,%rsi
   13840:	mov    %r8,-0x58(%rbp)
   13844:	mov    %rbx,-0x28(%rbp)
   13848:	mov    %r12,-0x30(%rbp)
   1384c:	mov    %r13,-0x38(%rbp)
   13850:	mov    %r14,-0x40(%rbp)
   13854:	mov    %r15,-0x48(%rbp)
   13858:	mov    %rdi,%rbx
   1385b:	mov    %rax,%rdi
   1385e:	mov    %r10,%r12
   13861:	mov    %rcx,%r13
   13864:	mov    %r9,%r14
   13867:	mov    %rdx,%r15
   1386a:	callq  5540 <png_get_channels@plt>
   1386f:	cmp    $0x2,%al
   13871:	jne    138ed <png_image_read_background+0x10d>
   13873:	mov    0x14(%r13),%eax
   13877:	mov    %rax,%rcx
   1387a:	and    $0x4,%ecx
   1387d:	test   %ecx,%ecx
   1387f:	je     138fc <png_image_read_background+0x11c>
   13881:	mov    $0x1,%eax
   13886:	mov    %rax,-0x68(%rbp)
   1388a:	mov    $0x7,%edi
   1388f:	movzbl 0x264(%r12),%ecx
   13898:	test   %cl,%cl
   1389a:	jne    13916 <png_image_read_background+0x136>
   1389c:	mov    %rax,%r10
   1389f:	mov    %r10,-0x78(%rbp)
   138a3:	xor    %r8d,%r8d
   138a6:	mov    %r8,-0xb8(%rbp)
   138ad:	movzbl 0x24(%r15),%ecx
   138b2:	cmp    $0x8,%cl
   138b5:	je     13927 <png_image_read_background+0x147>
   138b7:	cmp    $0x10,%cl
   138ba:	je     1396a <png_image_read_background+0x18a>
   138c0:	mov    %r12,%rdi
   138c3:	lea    0x1a8ca(%rip),%rsi        # 2e194 <chunks_to_process.34+0x38f>
   138ca:	callq  5470 <png_error@plt>
   138cf:	mov    %r10,%rdi
   138d2:	lea    0x1a862(%rip),%rsi        # 2e13b <chunks_to_process.34+0x336>
   138d9:	callq  5470 <png_error@plt>
   138de:	mov    %r10,%rdi
   138e1:	lea    0x1a864(%rip),%rsi        # 2e14c <chunks_to_process.34+0x347>
   138e8:	callq  5470 <png_error@plt>
   138ed:	mov    %r12,%rdi
   138f0:	lea    0x1a868(%rip),%rsi        # 2e15f <chunks_to_process.34+0x35a>
   138f7:	callq  5470 <png_error@plt>
   138fc:	and    $0x1,%eax
   138ff:	test   %eax,%eax
   13901:	je     13881 <png_image_read_background+0xa1>
   13907:	mov    %r12,%rdi
   1390a:	lea    0x1a863(%rip),%rsi        # 2e174 <chunks_to_process.34+0x36f>
   13911:	callq  5470 <png_error@plt>
   13916:	cmp    $0x1,%cl
   13919:	jne    139a3 <png_image_read_background+0x1c3>
   1391f:	mov    %rdi,%r10
   13922:	jmpq   1389f <png_image_read_background+0xbf>
   13927:	mov    0x30(%rbx),%r9
   1392b:	mov    %r9,-0xa0(%rbp)
   13932:	mov    0x38(%rbx),%r13
   13936:	mov    %r13,-0x98(%rbp)
   1393d:	lea    0x18848(%rip),%rsi        # 2c18c <png_sRGB_table>
   13944:	mov    %rsi,-0x70(%rbp)
   13948:	lea    0x18a3d(%rip),%rcx        # 2c38c <png_sRGB_base>
   1394f:	mov    %rcx,-0x60(%rbp)
   13953:	lea    0x18e32(%rip),%rcx        # 2c78c <png_sRGB_delta>
   1395a:	mov    %rcx,-0x80(%rbp)
   1395e:	mov    -0x58(%rbp),%rdx
   13962:	mov    %r8,%r15
   13965:	jmpq   13a6b <png_image_read_background+0x28b>
   1396a:	mov    0x30(%rbx),%rcx
   1396e:	mov    %rcx,-0x90(%rbp)
   13975:	mov    0x38(%rbx),%rdi
   13979:	mov    $0x2,%r15d
   1397f:	mov    %r15,-0xc0(%rbp)
   13986:	mov    0x14(%r13),%edx
   1398a:	mov    %rdx,%rsi
   1398d:	and    $0x1,%esi
   13990:	test   %esi,%esi
   13992:	jne    13a8a <png_image_read_background+0x2aa>
   13998:	mov    %rax,%r15
   1399b:	mov    %r8,%r9
   1399e:	jmpq   13a8d <png_image_read_background+0x2ad>
   139a3:	mov    %r12,%rdi
   139a6:	lea    0x1a74d(%rip),%rsi        # 2e0fa <chunks_to_process.34+0x2f5>
   139ad:	callq  5470 <png_error@plt>
   139b2:	movzbl 0x1(%rax),%r9d
   139b7:	test   %r9b,%r9b
   139ba:	je     13a08 <png_image_read_background+0x228>
   139bc:	movzbl (%rax),%edx
   139bf:	cmp    $0xfe,%r9b
   139c3:	ja     13a06 <png_image_read_background+0x226>
   139c5:	mov    %r13,%rdi
   139c8:	sub    %r9d,%edi
   139cb:	movzbl (%rcx),%r8d
   139cf:	movzwl (%rsi,%r8,2),%r8d
   139d4:	imul   %r8d,%edi
   139d8:	movzwl (%rsi,%rdx,2),%edx
   139dc:	imul   %r9d,%edx
   139e0:	add    %edx,%edi
   139e2:	mov    %rdi,%rdx
   139e5:	shr    $0xf,%edx
   139e8:	mov    %edx,%r8d
   139eb:	movzbl (%r8,%r11,1),%edx
   139f0:	and    $0x7fff,%edi
   139f6:	imul   %edi,%edx
   139f9:	shr    $0xc,%edx
   139fc:	movzwl (%r12,%r8,2),%edi
   13a01:	add    %edi,%edx
   13a03:	shr    $0x8,%edx
   13a06:	mov    %dl,(%rcx)
   13a08:	add    $0x2,%rax
   13a0c:	add    %r10,%rcx
   13a0f:	cmp    %rbx,%rcx
   13a12:	jb     139b2 <png_image_read_background+0x1d2>
   13a14:	mov    -0xb0(%rbp),%rcx
   13a1b:	mov    -0xa8(%rbp),%rax
   13a22:	lea    (%rax,%rcx,1),%r15d
   13a26:	mov    -0x88(%rbp),%rcx
   13a2d:	mov    -0x98(%rbp),%r13
   13a34:	mov    -0xa0(%rbp),%r9
   13a3b:	mov    -0xc0(%rbp),%rbx
   13a42:	mov    -0xc8(%rbp),%r12
   13a49:	xor    %r8d,%r8d
   13a4c:	mov    -0x58(%rbp),%rdx
   13a50:	cmp    %r15d,%edx
   13a53:	ja     13aea <png_image_read_background+0x30a>
   13a59:	mov    -0x78(%rbp),%r10
   13a5d:	mov    -0x20(%rbp),%r15
   13a61:	mov    $0x1,%eax
   13a66:	mov    $0x7,%edi
   13a6b:	cmp    %r15d,%r10d
   13a6e:	jg     13b46 <png_image_read_background+0x366>
   13a74:	mov    -0x48(%rbp),%r15
   13a78:	mov    -0x40(%rbp),%r14
   13a7c:	mov    -0x38(%rbp),%r13
   13a80:	mov    -0x30(%rbp),%r12
   13a84:	mov    -0x28(%rbp),%rbx
   13a88:	leaveq 
   13a89:	retq   
   13a8a:	mov    %rax,%r9
   13a8d:	mov    %r9,-0x88(%rbp)
   13a94:	mov    %r15,-0xa8(%rbp)
   13a9b:	mov    %rdi,%rsi
   13a9e:	shr    $0x3f,%rsi
   13aa2:	lea    (%rdi,%rsi,1),%r13
   13aa6:	sar    %r13
   13aa9:	mov    %r13,-0x98(%rbp)
   13ab0:	mov    %r14,%rsi
   13ab3:	imul   %r15d,%esi
   13ab7:	mov    %esi,%esi
   13ab9:	mov    %rsi,-0x50(%rbp)
   13abd:	test   %r9d,%r9d
   13ac0:	jne    13b93 <png_image_read_background+0x3b3>
   13ac6:	mov    -0x58(%rbp),%rdx
   13aca:	mov    %r8,%rdi
   13acd:	pushq  -0xc0(%rbp)
   13ad3:	pushq  -0xb8(%rbp)
   13ad9:	popq   -0xc0(%rbp)
   13adf:	popq   -0xb8(%rbp)
   13ae5:	jmpq   13c4a <png_image_read_background+0x46a>
   13aea:	mov    0x28(%rbx),%rsi
   13aee:	mov    %r8,%rdx
   13af1:	mov    %r12,%rdi
   13af4:	mov    %rcx,%r12
   13af7:	mov    %r9,%rbx
   13afa:	mov    %rsi,-0xb8(%rbp)
   13b01:	callq  5600 <png_read_row@plt>
   13b06:	mov    %r15d,%eax
   13b09:	imul   %rax,%r13
   13b0d:	lea    0x0(%r13,%rbx,1),%rax
   13b12:	lea    (%rax,%r14,1),%rbx
   13b16:	lea    (%r12,%rax,1),%rcx
   13b1a:	mov    %r15,-0xb0(%rbp)
   13b21:	mov    -0x60(%rbp),%r12
   13b25:	mov    -0x80(%rbp),%r11
   13b29:	mov    -0xb8(%rbp),%rax
   13b30:	mov    $0xff,%r13d
   13b36:	mov    -0x90(%rbp),%r10
   13b3d:	mov    -0x70(%rbp),%rsi
   13b41:	jmpq   13a0f <png_image_read_background+0x22f>
   13b46:	lea    0x1(%r15),%r11d
   13b4a:	movzbl 0x264(%r12),%ecx
   13b53:	cmp    $0x1,%cl
   13b56:	je     13c69 <png_image_read_background+0x489>
   13b5c:	mov    %r8,%rdi
   13b5f:	mov    %rdi,%r15
   13b62:	pushq  -0x68(%rbp)
   13b65:	popq   -0xa8(%rbp)
   13b6b:	mov    %edi,%ecx
   13b6d:	mov    %rcx,-0x88(%rbp)
   13b74:	mov    %eax,%eax
   13b76:	mov    %rax,-0x90(%rbp)
   13b7d:	mov    0x20(%rbx),%rax
   13b81:	test   %rax,%rax
   13b84:	jne    13c7d <png_image_read_background+0x49d>
   13b8a:	mov    %r11,-0x20(%rbp)
   13b8e:	jmpq   13a50 <png_image_read_background+0x270>
   13b93:	and    $0x20,%edx
   13b96:	test   %edx,%edx
   13b98:	jne    13c96 <png_image_read_background+0x4b6>
   13b9e:	mov    -0x58(%rbp),%rdx
   13ba2:	mov    %r8,%rdi
   13ba5:	pushq  -0xc0(%rbp)
   13bab:	pushq  -0xb8(%rbp)
   13bb1:	popq   -0xc0(%rbp)
   13bb7:	popq   -0xb8(%rbp)
   13bbd:	jmpq   13c4a <png_image_read_background+0x46a>
   13bc2:	movzwl (%rcx),%edx
   13bc5:	movzwl 0x2(%rcx),%r14d
   13bca:	test   %r14w,%r14w
   13bce:	jne    13c9f <png_image_read_background+0x4bf>
   13bd4:	mov    %r8,%rdx
   13bd7:	test   %r10d,%r10d
   13bda:	mov    %dx,(%rsi,%r12,1)
   13bdf:	je     13be6 <png_image_read_background+0x406>
   13be1:	mov    %r14w,(%rsi,%r13,1)
   13be6:	add    $0x4,%rcx
   13bea:	lea    (%rsi,%r9,2),%rsi
   13bee:	cmp    %rdi,%rsi
   13bf1:	jb     13bc2 <png_image_read_background+0x3e2>
   13bf3:	mov    -0x60(%rbp),%rcx
   13bf7:	mov    -0x70(%rbp),%rax
   13bfb:	lea    (%rcx,%rax,1),%r14d
   13bff:	mov    -0x98(%rbp),%r13
   13c06:	mov    -0xb0(%rbp),%r15
   13c0d:	mov    -0x90(%rbp),%rcx
   13c14:	mov    -0xa0(%rbp),%rax
   13c1b:	mov    -0xc8(%rbp),%r12
   13c22:	mov    -0x58(%rbp),%rdx
   13c26:	cmp    %r14d,%edx
   13c29:	ja     13cc3 <png_image_read_background+0x4e3>
   13c2f:	mov    -0xd0(%rbp),%r14
   13c36:	mov    -0xa8(%rbp),%r15
   13c3d:	mov    -0x80(%rbp),%rdi
   13c41:	mov    -0x78(%rbp),%r10
   13c45:	mov    $0x1,%eax
   13c4a:	cmp    %edi,%r10d
   13c4d:	jg     13d31 <png_image_read_background+0x551>
   13c53:	mov    -0x48(%rbp),%r15
   13c57:	mov    -0x40(%rbp),%r14
   13c5b:	mov    -0x38(%rbp),%r13
   13c5f:	mov    -0x30(%rbp),%r12
   13c63:	mov    -0x28(%rbp),%rbx
   13c67:	leaveq 
   13c68:	retq   
   13c69:	cmp    $0x1,%r15d
   13c6d:	jg     13d5d <png_image_read_background+0x57d>
   13c73:	mov    $0x3,%ecx
   13c78:	jmpq   13d68 <png_image_read_background+0x588>
   13c7d:	movzbl 0x1(%rax),%eax
   13c81:	mov    %r11,-0x8(%rbp)
   13c85:	mov    %rax,-0x10(%rbp)
   13c89:	movzwl (%rsi,%rax,2),%eax
   13c8d:	mov    %rax,-0x20(%rbp)
   13c91:	jmpq   13dda <png_image_read_background+0x5fa>
   13c96:	mov    -0x58(%rbp),%rdx
   13c9a:	mov    %r8,%rdi
   13c9d:	jmp    13c4a <png_image_read_background+0x46a>
   13c9f:	cmp    $0xfffe,%r14w
   13ca4:	ja     13bd7 <png_image_read_background+0x3f7>
   13caa:	mov    %r14,%rax
   13cad:	imul   %edx,%eax
   13cb0:	lea    0x7fff(%rax),%edx
   13cb6:	mov    %r11,%rax
   13cb9:	mul    %edx
   13cbb:	shr    $0xf,%edx
   13cbe:	jmpq   13bd7 <png_image_read_background+0x3f7>
   13cc3:	mov    0x28(%rbx),%rsi
   13cc7:	mov    %rax,-0xa0(%rbp)
   13cce:	mov    %r8,%rdx
   13cd1:	mov    %r12,%rdi
   13cd4:	mov    %rcx,%r12
   13cd7:	callq  5600 <png_read_row@plt>
   13cdc:	mov    0x28(%rbx),%rcx
   13ce0:	mov    %r15d,%r9d
   13ce3:	mov    %r14d,%eax
   13ce6:	imul   %rax,%r13
   13cea:	lea    (%r12,%r13,2),%rdx
   13cee:	mov    -0x50(%rbp),%rax
   13cf2:	lea    (%rdx,%rax,2),%rdi
   13cf6:	mov    -0xa0(%rbp),%rax
   13cfd:	mov    %eax,%eax
   13cff:	lea    (%rdx,%rax,2),%rsi
   13d03:	mov    %r14,-0x60(%rbp)
   13d07:	mov    %r15,-0xb0(%rbp)
   13d0e:	mov    -0x88(%rbp),%r10
   13d15:	mov    $0x80008001,%r11d
   13d1b:	mov    -0xc0(%rbp),%r12
   13d22:	xor    %r8d,%r8d
   13d25:	mov    -0xb8(%rbp),%r13
   13d2c:	jmpq   13bee <png_image_read_background+0x40e>
   13d31:	lea    0x1(%rdi),%r9d
   13d35:	movzbl 0x264(%r12),%esi
   13d3e:	cmp    $0x1,%sil
   13d42:	je     13dfa <png_image_read_background+0x61a>
   13d48:	mov    %r9,-0x80(%rbp)
   13d4c:	mov    %r8,%rax
   13d4f:	mov    %rax,%r14
   13d52:	pushq  -0x68(%rbp)
   13d55:	popq   -0x70(%rbp)
   13d58:	jmpq   13c26 <png_image_read_background+0x446>
   13d5d:	mov    %rdi,%rcx
   13d60:	sub    %r15d,%ecx
   13d63:	sar    %ecx
   13d65:	mov    %rax,%r8
   13d68:	test   %r8,%r8
   13d6b:	jne    13e12 <png_image_read_background+0x632>
   13d71:	mov    $0x3,%r9d
   13d77:	jmpq   13e1b <png_image_read_background+0x63b>
   13d7c:	movzbl 0x1(%rax),%edi
   13d80:	test   %dil,%dil
   13d83:	jne    13e66 <png_image_read_background+0x686>
   13d89:	mov    %r9,%rdx
   13d8c:	mov    %dl,(%rcx)
   13d8e:	add    $0x2,%rax
   13d92:	add    %r10,%rcx
   13d95:	cmp    %rbx,%rcx
   13d98:	jb     13d7c <png_image_read_background+0x59c>
   13d9a:	mov    -0x18(%rbp),%rcx
   13d9e:	mov    -0xa8(%rbp),%rax
   13da5:	lea    (%rcx,%rax,1),%r15d
   13da9:	mov    -0x88(%rbp),%rcx
   13db0:	mov    -0x98(%rbp),%r13
   13db7:	mov    -0xa0(%rbp),%r9
   13dbe:	mov    -0xd0(%rbp),%r14
   13dc5:	mov    -0xc0(%rbp),%rbx
   13dcc:	mov    -0xc8(%rbp),%r12
   13dd3:	xor    %r8d,%r8d
   13dd6:	mov    -0x58(%rbp),%rdx
   13dda:	cmp    %edx,%r15d
   13ddd:	jb     13eae <png_image_read_background+0x6ce>
   13de3:	mov    -0x78(%rbp),%r10
   13de7:	mov    -0x8(%rbp),%r15
   13deb:	mov    $0x1,%eax
   13df0:	mov    $0x7,%edi
   13df5:	jmpq   13a6b <png_image_read_background+0x28b>
   13dfa:	cmp    $0x1,%edi
   13dfd:	jg     13f08 <png_image_read_background+0x728>
   13e03:	mov    $0x7,%esi
   13e08:	mov    $0x3,%ecx
   13e0d:	jmpq   13f17 <png_image_read_background+0x737>
   13e12:	mov    %rdi,%r9
   13e15:	sub    %r15d,%r9d
   13e18:	sar    %r9d
   13e1b:	shl    %cl,%eax
   13e1d:	add    $0xffffffff,%eax
   13e20:	mov    %r11,%r8
   13e23:	sar    %r8d
   13e26:	mov    $0x3,%ecx
   13e2b:	sub    %r8d,%ecx
   13e2e:	mov    %r15,%r8
   13e31:	and    $0x1,%r8d
   13e35:	shl    %cl,%r8d
   13e38:	and    $0x7,%r8d
   13e3c:	sub    %r8d,%eax
   13e3f:	add    %r14d,%eax
   13e42:	mov    %r9,%rcx
   13e45:	shr    %cl,%eax
   13e47:	test   %eax,%eax
   13e49:	jne    13f23 <png_image_read_background+0x743>
   13e4f:	mov    %r11,%r15
   13e52:	mov    -0xa0(%rbp),%r9
   13e59:	mov    $0x1,%eax
   13e5e:	xor    %r8d,%r8d
   13e61:	jmpq   13a6b <png_image_read_background+0x28b>
   13e66:	movzbl (%rax),%edx
   13e69:	cmp    $0xfe,%dil
   13e6d:	ja     13d8c <png_image_read_background+0x5ac>
   13e73:	movzwl (%rsi,%rdx,2),%edx
   13e77:	imul   %edi,%edx
   13e7a:	neg    %edi
   13e7c:	add    %r14d,%edi
   13e7f:	imul   %r13d,%edi
   13e83:	add    %edx,%edi
   13e85:	mov    %rdi,%rdx
   13e88:	shr    $0xf,%edx
   13e8b:	mov    %edx,%r8d
   13e8e:	movzbl (%r8,%r12,1),%edx
   13e93:	and    $0x7fff,%edi
   13e99:	imul   %edi,%edx
   13e9c:	shr    $0xc,%edx
   13e9f:	movzwl (%r11,%r8,2),%edi
   13ea4:	add    %edi,%edx
   13ea6:	shr    $0x8,%edx
   13ea9:	jmpq   13d8c <png_image_read_background+0x5ac>
   13eae:	mov    0x28(%rbx),%rsi
   13eb2:	mov    %r8,%rdx
   13eb5:	mov    %r12,%rdi
   13eb8:	mov    %rcx,%r12
   13ebb:	mov    %r9,%rbx
   13ebe:	mov    %rsi,-0x50(%rbp)
   13ec2:	callq  5600 <png_read_row@plt>
   13ec7:	mov    %r15d,%eax
   13eca:	imul   %rax,%r13
   13ece:	lea    (%rbx,%r13,1),%rax
   13ed2:	lea    (%r14,%rax,1),%rbx
   13ed6:	lea    (%r12,%rax,1),%rcx
   13eda:	mov    %r15,-0x18(%rbp)
   13ede:	mov    -0x60(%rbp),%r11
   13ee2:	mov    -0x80(%rbp),%r12
   13ee6:	mov    $0xff,%r14d
   13eec:	mov    -0x20(%rbp),%r13
   13ef0:	mov    -0x90(%rbp),%r10
   13ef7:	mov    -0x70(%rbp),%rsi
   13efb:	mov    -0x10(%rbp),%r9
   13eff:	mov    -0x50(%rbp),%rax
   13f03:	jmpq   13d95 <png_image_read_background+0x5b5>
   13f08:	mov    $0x7,%esi
   13f0d:	mov    %rsi,%rcx
   13f10:	sub    %edi,%ecx
   13f12:	sar    %ecx
   13f14:	mov    %rax,%r8
   13f17:	test   %r8,%r8
   13f1a:	jne    13f30 <png_image_read_background+0x750>
   13f1c:	mov    $0x3,%esi
   13f21:	jmp    13f34 <png_image_read_background+0x754>
   13f23:	cmp    $0x2,%r15d
   13f27:	jg     13f7d <png_image_read_background+0x79d>
   13f29:	mov    $0x8,%eax
   13f2e:	jmp    13f8a <png_image_read_background+0x7aa>
   13f30:	sub    %edi,%esi
   13f32:	sar    %esi
   13f34:	shl    %cl,%eax
   13f36:	lea    -0x1(%rax),%r11d
   13f3a:	mov    %r9,%rax
   13f3d:	sar    %eax
   13f3f:	mov    $0x3,%r8d
   13f45:	mov    %r8,%rcx
   13f48:	sub    %eax,%ecx
   13f4a:	mov    %rdi,%rax
   13f4d:	and    $0x1,%eax
   13f50:	shl    %cl,%eax
   13f52:	and    $0x7,%eax
   13f55:	sub    %eax,%r11d
   13f58:	add    %r14d,%r11d
   13f5b:	mov    %rsi,%rcx
   13f5e:	shr    %cl,%r11d
   13f61:	test   %r11d,%r11d
   13f64:	jne    13fcc <png_image_read_background+0x7ec>
   13f66:	mov    %r9,%rdi
   13f69:	mov    -0x90(%rbp),%rcx
   13f70:	mov    $0x1,%eax
   13f75:	xor    %r8d,%r8d
   13f78:	jmpq   13c4a <png_image_read_background+0x46a>
   13f7d:	lea    -0x1(%r15),%ecx
   13f81:	sar    %ecx
   13f83:	mov    $0x8,%eax
   13f88:	shr    %cl,%eax
   13f8a:	mov    %rax,-0xa8(%rbp)
   13f91:	sub    %r15d,%edi
   13f94:	sar    %edi
   13f96:	mov    %rdi,%rcx
   13f99:	mov    $0x1,%eax
   13f9e:	shl    %cl,%eax
   13fa0:	mov    %r15,%rdi
   13fa3:	sar    %edi
   13fa5:	mov    $0x3,%ecx
   13faa:	sub    %edi,%ecx
   13fac:	not    %r15d
   13faf:	and    $0x1,%r15d
   13fb3:	mov    %r8,%rdi
   13fb6:	shl    %cl,%r15d
   13fb9:	and    $0x7,%r15d
   13fbd:	mov    -0xa0(%rbp),%r9
   13fc4:	xor    %r8d,%r8d
   13fc7:	jmpq   13b6b <png_image_read_background+0x38b>
   13fcc:	cmp    $0x2,%edi
   13fcf:	jg     13fd8 <png_image_read_background+0x7f8>
   13fd1:	mov    $0x8,%esi
   13fd6:	jmp    13fe4 <png_image_read_background+0x804>
   13fd8:	lea    -0x1(%rdi),%ecx
   13fdb:	sar    %ecx
   13fdd:	mov    $0x8,%esi
   13fe2:	shr    %cl,%esi
   13fe4:	mov    %rsi,-0x70(%rbp)
   13fe8:	mov    %rdi,%rcx
   13feb:	sar    %ecx
   13fed:	sub    %ecx,%r8d
   13ff0:	mov    %rdi,%r14
   13ff3:	not    %r14d
   13ff6:	and    $0x1,%r14d
   13ffa:	mov    %r8,%rcx
   13ffd:	shl    %cl,%r14d
   14000:	and    $0x7,%r14d
   14004:	imul   %r15d,%eax
   14008:	mov    $0x7,%ecx
   1400d:	sub    %edi,%ecx
   1400f:	sar    %ecx
   14011:	shl    %cl,%r15d
   14014:	mov    %r9,-0x80(%rbp)
   14018:	mov    -0x90(%rbp),%rcx
   1401f:	xor    %r8d,%r8d
   14022:	jmpq   13c26 <png_image_read_background+0x446>
   14027:	nopw   0x0(%rax,%rax,1)

0000000000014030 <png_image_read_direct>:
   14030:	push   %rbp
   14031:	mov    %rsp,%rbp
   14034:	sub    $0x90,%rsp
   1403b:	mov    %rbx,-0x8(%rbp)
   1403f:	mov    %r12,-0x10(%rbp)
   14043:	mov    %r13,-0x18(%rbp)
   14047:	mov    %r14,-0x20(%rbp)
   1404b:	mov    %r15,-0x28(%rbp)
   1404f:	mov    %rdi,-0x48(%rbp)
   14053:	mov    (%rdi),%r12
   14056:	mov    %r12,-0x30(%rbp)
   1405a:	mov    (%r12),%rax
   1405e:	mov    (%rax),%rbx
   14061:	mov    0x8(%rax),%rax
   14065:	mov    %rax,-0x40(%rbp)
   14069:	mov    $0x1,%ecx
   1406e:	mov    %rcx,-0x70(%rbp)
   14072:	xor    %r13d,%r13d
   14075:	mov    %r13,-0x78(%rbp)
   14079:	mov    0x14(%r12),%r15d
   1407e:	mov    %r15,-0x50(%rbp)
   14082:	mov    %r15,%rax
   14085:	and    $0x4,%eax
   14088:	test   %eax,%eax
   1408a:	je     1408f <png_image_read_direct+0x5f>
   1408c:	mov    %rcx,%r13
   1408f:	mov    %rdi,%r14
   14092:	mov    %r13,-0x58(%rbp)
   14096:	mov    %rbx,%rdi
   14099:	callq  56b0 <png_set_expand@plt>
   1409e:	mov    $0xffffffffffffffff,%rax
   140a5:	mov    %rax,-0x68(%rbp)
   140a9:	mov    %rbx,%rdi
   140ac:	callq  10650 <png_image_format>
   140b1:	mov    %rax,%rcx
   140b4:	and    $0xfffffff7,%ecx
   140b7:	mov    %r15,%r8
   140ba:	xor    %ecx,%r8d
   140bd:	mov    %r8,%rcx
   140c0:	and    $0x2,%ecx
   140c3:	test   %ecx,%ecx
   140c5:	jne    140d8 <png_image_read_direct+0xa8>
   140c7:	mov    %rax,%r15
   140ca:	mov    %r12,%rax
   140cd:	mov    %r8,%r12
   140d0:	pushq  -0x78(%rbp)
   140d3:	popq   -0x80(%rbp)
   140d6:	jmp    14115 <png_image_read_direct+0xe5>
   140d8:	and    $0x2,%r15d
   140dc:	test   %r15d,%r15d
   140df:	jne    140f3 <png_image_read_direct+0xc3>
   140e1:	mov    %rax,%rcx
   140e4:	and    $0x1,%ecx
   140e7:	test   %ecx,%ecx
   140e9:	jne    1415d <png_image_read_direct+0x12d>
   140eb:	pushq  -0x78(%rbp)
   140ee:	popq   -0x80(%rbp)
   140f1:	jmp    14163 <png_image_read_direct+0x133>
   140f3:	mov    %r12,%r14
   140f6:	mov    %r8,%r12
   140f9:	mov    %rax,%r15
   140fc:	mov    %rbx,%rdi
   140ff:	callq  5810 <png_set_gray_to_rgb@plt>
   14104:	mov    %r14,%rax
   14107:	pushq  -0x78(%rbp)
   1410a:	popq   -0x80(%rbp)
   1410d:	and    $0xfffffffd,%r12d
   14111:	mov    -0x48(%rbp),%r14
   14115:	mov    $0x186a0,%edx
   1411a:	mov    %rdx,-0x60(%rbp)
   1411e:	mov    %r15,%rcx
   14121:	and    $0x4,%ecx
   14124:	test   %ecx,%ecx
   14126:	jne    14188 <png_image_read_direct+0x158>
   14128:	mov    $0xffffffffffffffff,%rdx
   1412f:	mov    %rbx,%rdi
   14132:	xor    %esi,%esi
   14134:	callq  5640 <png_set_alpha_mode_fixed@plt>
   14139:	test   %r13d,%r13d
   1413c:	jg     1419b <png_image_read_direct+0x16b>
   1413e:	pushq  -0x78(%rbp)
   14141:	popq   -0x60(%rbp)
   14144:	mov    $0x2,%eax
   14149:	mov    %rax,-0x38(%rbp)
   1414d:	mov    %r12,%rcx
   14150:	and    $0x40,%ecx
   14153:	test   %ecx,%ecx
   14155:	jne    141b3 <png_image_read_direct+0x183>
   14157:	mov    -0x60(%rbp),%rsi
   1415b:	jmp    141ba <png_image_read_direct+0x18a>
   1415d:	pushq  -0x70(%rbp)
   14160:	popq   -0x80(%rbp)
   14163:	mov    %r12,%r14
   14166:	mov    %r8,%r12
   14169:	mov    %rax,%r15
   1416c:	mov    $0xffffffffffffffff,%rdx
   14173:	mov    %rdx,%rcx
   14176:	mov    %rbx,%rdi
   14179:	mov    $0x1,%esi
   1417e:	callq  55b0 <png_set_rgb_to_gray_fixed@plt>
   14183:	mov    %r14,%rax
   14186:	jmp    1410d <png_image_read_direct+0xdd>
   14188:	mov    0x18(%rax),%eax
   1418b:	and    $0x4,%eax
   1418e:	test   %eax,%eax
   14190:	je     1412f <png_image_read_direct+0xff>
   14192:	mov    $0xffffffffffffffff,%rdx
   14199:	jmp    1412f <png_image_read_direct+0xff>
   1419b:	mov    %r15,%rax
   1419e:	and    $0x1,%eax
   141a1:	test   %eax,%eax
   141a3:	jne    141ec <png_image_read_direct+0x1bc>
   141a5:	pushq  -0x78(%rbp)
   141a8:	pushq  -0x60(%rbp)
   141ab:	popq   -0x68(%rbp)
   141ae:	popq   -0x60(%rbp)
   141b1:	jmp    14144 <png_image_read_direct+0x114>
   141b3:	and    $0xffffffbf,%r12d
   141b7:	mov    %rax,%rsi
   141ba:	mov    -0x80(%rbp),%r8
   141be:	test   %r8d,%r8d
   141c1:	jg     141fd <png_image_read_direct+0x1cd>
   141c3:	mov    %r14,%rcx
   141c6:	xor    %r14d,%r14d
   141c9:	mov    %r12,%rdx
   141cc:	and    $0x4,%edx
   141cf:	test   %edx,%edx
   141d1:	je     14260 <png_image_read_direct+0x230>
   141d7:	test   %r13d,%r13d
   141da:	jg     14241 <png_image_read_direct+0x211>
   141dc:	mov    %rsi,%r13
   141df:	mov    %rbx,%rdi
   141e2:	callq  58d0 <png_set_scale_16@plt>
   141e7:	mov    %r13,%rsi
   141ea:	jmp    1424f <png_image_read_direct+0x21f>
   141ec:	pushq  -0x70(%rbp)
   141ef:	pushq  -0x60(%rbp)
   141f2:	popq   -0x68(%rbp)
   141f5:	popq   -0x60(%rbp)
   141f8:	jmpq   14144 <png_image_read_direct+0x114>
   141fd:	lea    -0x90(%rbp),%rdi
   14204:	movslq 0x498(%rbx),%rdx
   1420b:	mov    -0x68(%rbp),%rax
   1420f:	mov    %r15,-0x80(%rbp)
   14213:	mov    %r8,%r14
   14216:	mov    %rsi,%r15
   14219:	mov    %rax,%rsi
   1421c:	mov    $0x186a0,%ecx
   14221:	callq  8980 <png_muldiv>
   14226:	test   %eax,%eax
   14228:	jne    14275 <png_image_read_direct+0x245>
   1422a:	mov    %r15,%rsi
   1422d:	cmp    $0x1,%esi
   14230:	je     142a1 <png_image_read_direct+0x271>
   14232:	mov    $0x2,%eax
   14237:	mov    -0x80(%rbp),%r15
   1423b:	mov    -0x48(%rbp),%rcx
   1423f:	jmp    141c9 <png_image_read_direct+0x199>
   14241:	mov    %rsi,%r13
   14244:	mov    %rbx,%rdi
   14247:	callq  5830 <png_set_expand_16@plt>
   1424c:	mov    %r13,%rsi
   1424f:	and    $0xfffffffb,%r12d
   14253:	mov    -0x58(%rbp),%r13
   14257:	mov    $0x2,%eax
   1425c:	mov    -0x48(%rbp),%rcx
   14260:	mov    %r12,%rdx
   14263:	and    $0x1,%edx
   14266:	test   %edx,%edx
   14268:	jne    142b8 <png_image_read_direct+0x288>
   1426a:	mov    -0x50(%rbp),%r15
   1426e:	xor    %ecx,%ecx
   14270:	jmpq   14309 <png_image_read_direct+0x2d9>
   14275:	movslq -0x90(%rbp),%rdi
   1427c:	callq  8b20 <png_gamma_significant>
   14281:	test   %eax,%eax
   14283:	jne    14333 <png_image_read_direct+0x303>
   14289:	mov    %r15,%rsi
   1428c:	mov    $0x2,%eax
   14291:	mov    -0x80(%rbp),%r15
   14295:	mov    -0x48(%rbp),%rcx
   14299:	xor    %r14d,%r14d
   1429c:	jmpq   141c9 <png_image_read_direct+0x199>
   142a1:	mov    $0x2,%eax
   142a6:	mov    -0x80(%rbp),%r15
   142aa:	mov    -0x48(%rbp),%rcx
   142ae:	xor    %esi,%esi
   142b0:	mov    %rax,%r14
   142b3:	jmpq   141c9 <png_image_read_direct+0x199>
   142b8:	and    $0x1,%r15d
   142bc:	test   %r15d,%r15d
   142bf:	jne    1433b <png_image_read_direct+0x30b>
   142c1:	test   %r13d,%r13d
   142c4:	jg     142cd <png_image_read_direct+0x29d>
   142c6:	mov    $0xff,%eax
   142cb:	jmp    142d2 <png_image_read_direct+0x2a2>
   142cd:	mov    $0xffff,%eax
   142d2:	mov    -0x50(%rbp),%r15
   142d6:	mov    %r15,%rcx
   142d9:	and    $0x20,%ecx
   142dc:	test   %ecx,%ecx
   142de:	je     142ea <png_image_read_direct+0x2ba>
   142e0:	and    $0xffffffdf,%r12d
   142e4:	pushq  -0x78(%rbp)
   142e7:	popq   -0x70(%rbp)
   142ea:	mov    %rsi,%r13
   142ed:	mov    %rax,%rsi
   142f0:	mov    %rbx,%rdi
   142f3:	mov    -0x70(%rbp),%rdx
   142f7:	callq  5630 <png_set_add_alpha@plt>
   142fc:	mov    %r13,%rsi
   142ff:	mov    -0x58(%rbp),%r13
   14303:	xor    %ecx,%ecx
   14305:	and    $0xfffffffe,%r12d
   14309:	mov    %rcx,-0x50(%rbp)
   1430d:	mov    %rbx,%rdi
   14310:	mov    -0x68(%rbp),%rdx
   14314:	callq  5640 <png_set_alpha_mode_fixed@plt>
   14319:	mov    %r12,%rax
   1431c:	and    $0x10,%eax
   1431f:	test   %eax,%eax
   14321:	je     1435b <png_image_read_direct+0x32b>
   14323:	mov    %r15,%rax
   14326:	and    $0x2,%eax
   14329:	test   %eax,%eax
   1432b:	jne    1434f <png_image_read_direct+0x31f>
   1432d:	and    $0xffffffef,%r15d
   14331:	jmp    14357 <png_image_read_direct+0x327>
   14333:	mov    %r15,%rsi
   14336:	jmpq   1422d <png_image_read_direct+0x1fd>
   1433b:	test   %r14d,%r14d
   1433e:	jle    143cf <png_image_read_direct+0x39f>
   14344:	mov    %rax,%r14
   14347:	mov    -0x50(%rbp),%r15
   1434b:	xor    %ecx,%ecx
   1434d:	jmp    14305 <png_image_read_direct+0x2d5>
   1434f:	mov    %rbx,%rdi
   14352:	callq  5860 <png_set_bgr@plt>
   14357:	and    $0xffffffef,%r12d
   1435b:	mov    %r12,%rax
   1435e:	and    $0x20,%eax
   14361:	test   %eax,%eax
   14363:	je     1437b <png_image_read_direct+0x34b>
   14365:	mov    %r15,%rax
   14368:	and    $0x1,%eax
   1436b:	test   %eax,%eax
   1436d:	jne    143f5 <png_image_read_direct+0x3c5>
   14373:	and    $0xffffffdf,%r15d
   14377:	and    $0xffffffdf,%r12d
   1437b:	test   %r13d,%r13d
   1437e:	jle    14388 <png_image_read_direct+0x358>
   14380:	mov    %rbx,%rdi
   14383:	callq  51e0 <png_set_swap@plt>
   14388:	test   %r12d,%r12d
   1438b:	jne    1440c <png_image_read_direct+0x3dc>
   1438d:	mov    %rbx,%rdi
   14390:	callq  10890 <png_image_skip_unused_chunks>
   14395:	mov    -0x50(%rbp),%r12
   14399:	test   %r12d,%r12d
   1439c:	je     1441b <png_image_read_direct+0x3eb>
   1439e:	xor    %eax,%eax
   143a0:	mov    %rax,-0x68(%rbp)
   143a4:	mov    %rbx,%rdi
   143a7:	mov    -0x40(%rbp),%r13
   143ab:	mov    %r13,%rsi
   143ae:	callq  5080 <png_read_update_info@plt>
   143b3:	movzbl 0x25(%r13),%ecx
   143b8:	mov    %rcx,%rax
   143bb:	and    $0x2,%eax
   143be:	test   %eax,%eax
   143c0:	jg     1442c <png_image_read_direct+0x3fc>
   143c2:	mov    $0x1,%eax
   143c7:	pushq  -0x78(%rbp)
   143ca:	popq   -0x38(%rbp)
   143cd:	jmp    14431 <png_image_read_direct+0x401>
   143cf:	test   %r13d,%r13d
   143d2:	jg     1444e <png_image_read_direct+0x41e>
   143d4:	mov    0x20(%rcx),%rdx
   143d8:	test   %rdx,%rdx
   143db:	jne    1446b <png_image_read_direct+0x43b>
   143e1:	mov    %rax,%rsi
   143e4:	mov    -0x50(%rbp),%r15
   143e8:	mov    $0x1,%ecx
   143ed:	xor    %r14d,%r14d
   143f0:	jmpq   14305 <png_image_read_direct+0x2d5>
   143f5:	cmp    $0x2,%r14d
   143f9:	je     14377 <png_image_read_direct+0x347>
   143ff:	mov    %rbx,%rdi
   14402:	callq  50d0 <png_set_swap_alpha@plt>
   14407:	jmpq   14377 <png_image_read_direct+0x347>
   1440c:	mov    %rbx,%rdi
   1440f:	lea    0x19d93(%rip),%rsi        # 2e1a9 <chunks_to_process.34+0x3a4>
   14416:	callq  5470 <png_error@plt>
   1441b:	cmp    $0x2,%r14d
   1441f:	jne    144dc <png_image_read_direct+0x4ac>
   14425:	xor    %eax,%eax
   14427:	jmpq   143a0 <png_image_read_direct+0x370>
   1442c:	mov    $0x3,%eax
   14431:	and    $0x4,%ecx
   14434:	test   %ecx,%ecx
   14436:	jg     144e9 <png_image_read_direct+0x4b9>
   1443c:	test   %r12d,%r12d
   1443f:	jg     14584 <png_image_read_direct+0x554>
   14445:	mov    -0x38(%rbp),%rax
   14449:	jmpq   144f6 <png_image_read_direct+0x4c6>
   1444e:	mov    %rsi,%r15
   14451:	mov    %rbx,%rdi
   14454:	callq  5740 <png_set_strip_alpha@plt>
   14459:	mov    %r15,%rsi
   1445c:	mov    -0x50(%rbp),%r15
   14460:	xor    %r14d,%r14d
   14463:	mov    %r14,%rcx
   14466:	jmpq   14305 <png_image_read_direct+0x2d5>
   1446b:	movb   $0x0,-0x8a(%rbp)
   14472:	mov    0x20(%rcx),%rax
   14476:	movzbl (%rax),%eax
   14479:	mov    %ax,-0x88(%rbp)
   14480:	mov    0x20(%rcx),%rax
   14484:	movzbl 0x1(%rax),%eax
   14488:	mov    %ax,-0x86(%rbp)
   1448f:	mov    0x20(%rcx),%rax
   14493:	movzbl 0x2(%rax),%eax
   14497:	mov    %ax,-0x84(%rbp)
   1449e:	mov    0x20(%rcx),%rax
   144a2:	movzbl 0x1(%rax),%eax
   144a6:	mov    %ax,-0x82(%rbp)
   144ad:	mov    %rsi,%r15
   144b0:	lea    -0x8a(%rbp),%rsi
   144b7:	xor    %r14d,%r14d
   144ba:	mov    %r14,%r8
   144bd:	mov    %rbx,%rdi
   144c0:	mov    $0x1,%edx
   144c5:	mov    %r14,%rcx
   144c8:	callq  5320 <png_set_background_fixed@plt>
   144cd:	mov    %r15,%rsi
   144d0:	mov    -0x50(%rbp),%r15
   144d4:	mov    %r14,%rcx
   144d7:	jmpq   14305 <png_image_read_direct+0x2d5>
   144dc:	mov    %rbx,%rdi
   144df:	callq  53f0 <png_set_interlace_handling@plt>
   144e4:	jmpq   143a0 <png_image_read_direct+0x370>
   144e9:	test   %r12d,%r12d
   144ec:	je     14593 <png_image_read_direct+0x563>
   144f2:	mov    -0x38(%rbp),%rax
   144f6:	mov    %r15,%rcx
   144f9:	and    $0x40,%ecx
   144fc:	test   %ecx,%ecx
   144fe:	je     14503 <png_image_read_direct+0x4d3>
   14500:	add    $0x40,%eax
   14503:	movzbl 0x24(%r13),%ecx
   14508:	cmp    $0x10,%cl
   1450b:	jne    14510 <png_image_read_direct+0x4e0>
   1450d:	add    $0x4,%eax
   14510:	mov    0x134(%rbx),%ecx
   14516:	mov    %rcx,%rdx
   14519:	and    $0x1,%edx
   1451c:	test   %edx,%edx
   1451e:	je     14523 <png_image_read_direct+0x4f3>
   14520:	add    $0x10,%eax
   14523:	cmp    $0x2,%r14d
   14527:	je     145b4 <png_image_read_direct+0x584>
   1452d:	mov    %rcx,%rdx
   14530:	and    $0x20000,%edx
   14536:	test   %edx,%edx
   14538:	jne    14554 <png_image_read_direct+0x524>
   1453a:	and    $0x1000000,%ecx
   14540:	test   %ecx,%ecx
   14542:	je     1455d <png_image_read_direct+0x52d>
   14544:	mov    0x130(%rbx),%ecx
   1454a:	and    $0x80,%ecx
   14550:	test   %ecx,%ecx
   14552:	jne    1455d <png_image_read_direct+0x52d>
   14554:	cmp    $0x2,%r14d
   14558:	je     145ca <png_image_read_direct+0x59a>
   1455a:	or     $0x20,%eax
   1455d:	cmp    %eax,%r15d
   14560:	jne    145d9 <png_image_read_direct+0x5a9>
   14562:	mov    -0x58(%rbp),%rax
   14566:	test   %eax,%eax
   14568:	mov    -0x48(%rbp),%rax
   1456c:	mov    0x8(%rax),%rcx
   14570:	movslq 0x10(%rax),%r15
   14574:	jle    14579 <png_image_read_direct+0x549>
   14576:	add    %r15,%r15
   14579:	test   %r15,%r15
   1457c:	js     145e8 <png_image_read_direct+0x5b8>
   1457e:	mov    -0x30(%rbp),%rdi
   14582:	jmp    14601 <png_image_read_direct+0x5d1>
   14584:	mov    %rbx,%rdi
   14587:	lea    0x19c46(%rip),%rsi        # 2e1d4 <chunks_to_process.34+0x3cf>
   1458e:	callq  5470 <png_error@plt>
   14593:	cmp    $0x2,%r14d
   14597:	jne    144f6 <png_image_read_direct+0x4c6>
   1459d:	mov    %r15,%rcx
   145a0:	and    $0x1,%ecx
   145a3:	test   %ecx,%ecx
   145a5:	jne    144f6 <png_image_read_direct+0x4c6>
   145ab:	mov    -0x38(%rbp),%rax
   145af:	jmpq   144f6 <png_image_read_direct+0x4c6>
   145b4:	mov    %r15,%rdx
   145b7:	and    $0x20,%edx
   145ba:	test   %edx,%edx
   145bc:	je     1452d <png_image_read_direct+0x4fd>
   145c2:	add    $0x20,%eax
   145c5:	jmpq   1452d <png_image_read_direct+0x4fd>
   145ca:	mov    %rbx,%rdi
   145cd:	lea    0x19c23(%rip),%rsi        # 2e1f7 <chunks_to_process.34+0x3f2>
   145d4:	callq  5470 <png_error@plt>
   145d9:	mov    %rbx,%rdi
   145dc:	lea    0x19c39(%rip),%rsi        # 2e21c <chunks_to_process.34+0x417>
   145e3:	callq  5470 <png_error@plt>
   145e8:	mov    %r15,%rdx
   145eb:	neg    %rdx
   145ee:	mov    -0x30(%rbp),%rdi
   145f2:	mov    0x10(%rdi),%esi
   145f5:	add    $0xffffffff,%esi
   145f8:	mov    %esi,%esi
   145fa:	imul   %rsi,%rdx
   145fe:	add    %rdx,%rcx
   14601:	mov    %rcx,0x30(%rax)
   14605:	mov    %r15,0x38(%rax)
   14609:	test   %r12d,%r12d
   1460c:	jg     14620 <png_image_read_direct+0x5f0>
   1460e:	cmp    $0x2,%r14d
   14612:	je     14686 <png_image_read_direct+0x656>
   14614:	mov    -0x68(%rbp),%rcx
   14618:	xor    %r12d,%r12d
   1461b:	jmpq   14712 <png_image_read_direct+0x6e2>
   14620:	mov    %r13,%rsi
   14623:	mov    %rdi,%r13
   14626:	mov    %rax,%r12
   14629:	mov    %rbx,%rdi
   1462c:	callq  50c0 <png_get_rowbytes@plt>
   14631:	mov    %rax,%rsi
   14634:	mov    %rbx,%rdi
   14637:	callq  5800 <png_malloc@plt>
   1463c:	mov    %r13,%rdi
   1463f:	mov    %rax,%r13
   14642:	mov    %r13,0x28(%r12)
   14647:	lea    -0x122e(%rip),%rsi        # 13420 <png_image_read_composite>
   1464e:	mov    %r12,%rdx
   14651:	callq  b260 <png_safe_execute>
   14656:	movq   $0x0,0x28(%r12)
   1465f:	mov    %r13,%rsi
   14662:	mov    %rbx,%rdi
   14665:	mov    %rax,%r12
   14668:	callq  5790 <png_free@plt>
   1466d:	mov    %r12,%rax
   14670:	mov    -0x28(%rbp),%r15
   14674:	mov    -0x20(%rbp),%r14
   14678:	mov    -0x18(%rbp),%r13
   1467c:	mov    -0x10(%rbp),%r12
   14680:	mov    -0x8(%rbp),%rbx
   14684:	leaveq 
   14685:	retq   
   14686:	mov    %r13,%rsi
   14689:	mov    %rdi,%r13
   1468c:	mov    %rax,%r12
   1468f:	mov    %rbx,%rdi
   14692:	callq  50c0 <png_get_rowbytes@plt>
   14697:	mov    %rax,%rsi
   1469a:	mov    %rbx,%rdi
   1469d:	callq  5800 <png_malloc@plt>
   146a2:	mov    %r13,%rdi
   146a5:	mov    %rax,%r13
   146a8:	mov    %r13,0x28(%r12)
   146ad:	lea    -0xed4(%rip),%rsi        # 137e0 <png_image_read_background>
   146b4:	mov    %r12,%rdx
   146b7:	callq  b260 <png_safe_execute>
   146bc:	movq   $0x0,0x28(%r12)
   146c5:	mov    %r13,%rsi
   146c8:	mov    %rax,%r13
   146cb:	mov    %rbx,%rdi
   146ce:	callq  5790 <png_free@plt>
   146d3:	mov    %r13,%rax
   146d6:	mov    -0x28(%rbp),%r15
   146da:	mov    -0x20(%rbp),%r14
   146de:	mov    -0x18(%rbp),%r13
   146e2:	mov    -0x10(%rbp),%r12
   146e6:	mov    -0x8(%rbp),%rbx
   146ea:	leaveq 
   146eb:	retq   
   146ec:	mov    %rbx,%rdi
   146ef:	mov    %r13,%rsi
   146f2:	mov    %r12,%rdx
   146f5:	callq  5600 <png_read_row@plt>
   146fa:	add    %r15,%r13
   146fd:	add    $0xffffffff,%r14d
   14701:	test   %r14d,%r14d
   14704:	jne    146ec <png_image_read_direct+0x6bc>
   14706:	mov    -0x80(%rbp),%rcx
   1470a:	mov    -0x30(%rbp),%rdi
   1470e:	mov    -0x48(%rbp),%rax
   14712:	add    $0xffffffff,%ecx
   14715:	test   %ecx,%ecx
   14717:	jns    14734 <png_image_read_direct+0x704>
   14719:	mov    -0x28(%rbp),%r15
   1471d:	mov    -0x20(%rbp),%r14
   14721:	mov    -0x18(%rbp),%r13
   14725:	mov    -0x10(%rbp),%r12
   14729:	mov    -0x8(%rbp),%rbx
   1472d:	mov    $0x1,%eax
   14732:	leaveq 
   14733:	retq   
   14734:	mov    0x10(%rdi),%r14d
   14738:	mov    0x30(%rax),%r13
   1473c:	mov    %rcx,-0x80(%rbp)
   14740:	jmp    14701 <png_image_read_direct+0x6d1>
   14742:	nopw   %cs:0x0(%rax,%rax,1)
   1474c:	nopl   0x0(%rax)

0000000000014750 <png_set_read_fn>:
   14750:	push   %rbp
   14751:	mov    %rsp,%rbp
   14754:	sub    $0x10,%rsp
   14758:	test   %rdi,%rdi
   1475b:	jne    1475f <png_set_read_fn+0xf>
   1475d:	leaveq 
   1475e:	retq   
   1475f:	mov    %rsi,0x108(%rdi)
   14766:	test   %rdx,%rdx
   14769:	jne    1477b <png_set_read_fn+0x2b>
   1476b:	lea    0x5e(%rip),%rax        # 147d0 <png_default_read_data>
   14772:	mov    %rax,0x100(%rdi)
   14779:	jmp    14782 <png_set_read_fn+0x32>
   1477b:	mov    %rdx,0x100(%rdi)
   14782:	mov    0xf8(%rdi),%rax
   14789:	test   %rax,%rax
   1478c:	je     147b9 <png_set_read_fn+0x69>
   1478e:	movq   $0x0,0xf8(%rdi)
   14799:	lea    0x19aa4(%rip),%rsi        # 2e244 <chunks_to_process.34+0x43f>
   147a0:	mov    %rdi,%rax
   147a3:	mov    %r15,-0x8(%rbp)
   147a7:	mov    %rdi,%r15
   147aa:	mov    %rax,%rdi
   147ad:	callq  5390 <png_warning@plt>
   147b2:	mov    %r15,%rdi
   147b5:	mov    -0x8(%rbp),%r15
   147b9:	movq   $0x0,0x290(%rdi)
   147c4:	leaveq 
   147c5:	retq   
   147c6:	nopw   %cs:0x0(%rax,%rax,1)

00000000000147d0 <png_default_read_data>:
   147d0:	push   %rbp
   147d1:	mov    %rsp,%rbp
   147d4:	sub    $0x10,%rsp
   147d8:	test   %rdi,%rdi
   147db:	jne    147df <png_default_read_data+0xf>
   147dd:	leaveq 
   147de:	retq   
   147df:	mov    $0x1,%eax
   147e4:	mov    0x108(%rdi),%rcx
   147eb:	mov    %rdx,%r8
   147ee:	mov    %r15,-0x10(%rbp)
   147f2:	mov    %rdi,-0x8(%rbp)
   147f6:	mov    %rsi,%rdi
   147f9:	mov    %rax,%rsi
   147fc:	mov    %rdx,%r15
   147ff:	mov    %r8,%rdx
   14802:	callq  5160 <fread@plt>
   14807:	cmp    %r15,%rax
   1480a:	jne    14812 <png_default_read_data+0x42>
   1480c:	mov    -0x10(%rbp),%r15
   14810:	leaveq 
   14811:	retq   
   14812:	lea    0x19a6f(%rip),%rsi        # 2e288 <chunks_to_process.34+0x483>
   14819:	mov    -0x8(%rbp),%rdi
   1481d:	callq  5470 <png_error@plt>
   14822:	data16 nopw %cs:0x0(%rax,%rax,1)
   1482d:	nopl   (%rax)

0000000000014830 <png_read_data>:
   14830:	push   %rbp
   14831:	mov    %rsp,%rbp
   14834:	mov    0x100(%rdi),%rax
   1483b:	test   %rax,%rax
   1483e:	jne    1484c <png_read_data+0x1c>
   14840:	lea    0x19a4c(%rip),%rsi        # 2e293 <chunks_to_process.34+0x48e>
   14847:	callq  5470 <png_error@plt>
   1484c:	callq  *%rax
   1484e:	leaveq 
   1484f:	retq   

0000000000014850 <png_set_expand>:
   14850:	push   %rbp
   14851:	mov    %rsp,%rbp
   14854:	sub    $0x10,%rsp
   14858:	mov    %r15,-0x8(%rbp)
   1485c:	xor    %esi,%esi
   1485e:	mov    %rdi,%r15
   14861:	callq  17790 <png_rtran_ok>
   14866:	test   %eax,%eax
   14868:	jne    14870 <png_set_expand+0x20>
   1486a:	mov    -0x8(%rbp),%r15
   1486e:	leaveq 
   1486f:	retq   
   14870:	mov    0x134(%r15),%eax
   14877:	or     $0x2001000,%eax
   1487c:	mov    %eax,0x134(%r15)
   14883:	mov    -0x8(%rbp),%r15
   14887:	leaveq 
   14888:	retq   
   14889:	nopl   0x0(%rax)

0000000000014890 <png_set_expand_gray_1_2_4_to_8>:
   14890:	push   %rbp
   14891:	mov    %rsp,%rbp
   14894:	sub    $0x10,%rsp
   14898:	mov    %r15,-0x8(%rbp)
   1489c:	xor    %esi,%esi
   1489e:	mov    %rdi,%r15
   148a1:	callq  17790 <png_rtran_ok>
   148a6:	test   %eax,%eax
   148a8:	jne    148b0 <png_set_expand_gray_1_2_4_to_8+0x20>
   148aa:	mov    -0x8(%rbp),%r15
   148ae:	leaveq 
   148af:	retq   
   148b0:	mov    0x134(%r15),%eax
   148b7:	or     $0x1000,%eax
   148bc:	mov    %eax,0x134(%r15)
   148c3:	mov    -0x8(%rbp),%r15
   148c7:	leaveq 
   148c8:	retq   
   148c9:	nopl   0x0(%rax)

00000000000148d0 <png_set_palette_to_rgb>:
   148d0:	push   %rbp
   148d1:	mov    %rsp,%rbp
   148d4:	sub    $0x10,%rsp
   148d8:	mov    %r15,-0x8(%rbp)
   148dc:	xor    %esi,%esi
   148de:	mov    %rdi,%r15
   148e1:	callq  17790 <png_rtran_ok>
   148e6:	test   %eax,%eax
   148e8:	jne    148f0 <png_set_palette_to_rgb+0x20>
   148ea:	mov    -0x8(%rbp),%r15
   148ee:	leaveq 
   148ef:	retq   
   148f0:	mov    0x134(%r15),%eax
   148f7:	or     $0x2001000,%eax
   148fc:	mov    %eax,0x134(%r15)
   14903:	mov    -0x8(%rbp),%r15
   14907:	leaveq 
   14908:	retq   
   14909:	nopl   0x0(%rax)

0000000000014910 <png_set_tRNS_to_alpha>:
   14910:	push   %rbp
   14911:	mov    %rsp,%rbp
   14914:	sub    $0x10,%rsp
   14918:	mov    %r15,-0x8(%rbp)
   1491c:	xor    %esi,%esi
   1491e:	mov    %rdi,%r15
   14921:	callq  17790 <png_rtran_ok>
   14926:	test   %eax,%eax
   14928:	jne    14930 <png_set_tRNS_to_alpha+0x20>
   1492a:	mov    -0x8(%rbp),%r15
   1492e:	leaveq 
   1492f:	retq   
   14930:	mov    0x134(%r15),%eax
   14937:	or     $0x2001000,%eax
   1493c:	mov    %eax,0x134(%r15)
   14943:	mov    -0x8(%rbp),%r15
   14947:	leaveq 
   14948:	retq   
   14949:	nopl   0x0(%rax)

0000000000014950 <png_set_expand_16>:
   14950:	push   %rbp
   14951:	mov    %rsp,%rbp
   14954:	sub    $0x10,%rsp
   14958:	mov    %r15,-0x8(%rbp)
   1495c:	xor    %esi,%esi
   1495e:	mov    %rdi,%r15
   14961:	callq  17790 <png_rtran_ok>
   14966:	test   %eax,%eax
   14968:	jne    14970 <png_set_expand_16+0x20>
   1496a:	mov    -0x8(%rbp),%r15
   1496e:	leaveq 
   1496f:	retq   
   14970:	mov    0x134(%r15),%eax
   14977:	or     $0x2001200,%eax
   1497c:	mov    %eax,0x134(%r15)
   14983:	mov    -0x8(%rbp),%r15
   14987:	leaveq 
   14988:	retq   
   14989:	nopl   0x0(%rax)

0000000000014990 <png_set_gray_to_rgb>:
   14990:	push   %rbp
   14991:	mov    %rsp,%rbp
   14994:	sub    $0x10,%rsp
   14998:	mov    %rdi,-0x8(%rbp)
   1499c:	xor    %esi,%esi
   1499e:	callq  17790 <png_rtran_ok>
   149a3:	test   %eax,%eax
   149a5:	jne    149a9 <png_set_gray_to_rgb+0x19>
   149a7:	leaveq 
   149a8:	retq   
   149a9:	mov    -0x8(%rbp),%rax
   149ad:	mov    %rax,%rdi
   149b0:	mov    %r15,-0x8(%rbp)
   149b4:	mov    %rax,%r15
   149b7:	callq  5440 <png_set_expand_gray_1_2_4_to_8@plt>
   149bc:	mov    0x134(%r15),%eax
   149c3:	or     $0x4000,%eax
   149c8:	mov    %eax,0x134(%r15)
   149cf:	mov    -0x8(%rbp),%r15
   149d3:	leaveq 
   149d4:	retq   
   149d5:	data16 nopw %cs:0x0(%rax,%rax,1)

00000000000149e0 <png_set_rgb_to_gray>:
   149e0:	push   %rbp
   149e1:	mov    %rsp,%rbp
   149e4:	sub    $0x30,%rsp
   149e8:	movdqu %xmm1,-0x10(%rbp)
   149ed:	mov    %r14,-0x20(%rbp)
   149f1:	mov    %r15,-0x28(%rbp)
   149f5:	mov    %r13,-0x18(%rbp)
   149f9:	mov    %rsi,%r13
   149fc:	lea    0x198ed(%rip),%rsi        # 2e2f0 <chunks_to_process.34+0x4eb>
   14a03:	mov    %rdi,%r14
   14a06:	callq  69f0 <png_fixed>
   14a0b:	mov    %rax,%r15
   14a0e:	lea    0x198f7(%rip),%rsi        # 2e30c <chunks_to_process.34+0x507>
   14a15:	mov    %r14,%rdi
   14a18:	movdqu -0x10(%rbp),%xmm0
   14a1d:	callq  69f0 <png_fixed>
   14a22:	mov    %rax,%rcx
   14a25:	mov    %r15,%rdx
   14a28:	mov    %r13,%rsi
   14a2b:	mov    %r14,%rdi
   14a2e:	callq  55b0 <png_set_rgb_to_gray_fixed@plt>
   14a33:	mov    -0x18(%rbp),%r13
   14a37:	mov    -0x28(%rbp),%r15
   14a3b:	mov    -0x20(%rbp),%r14
   14a3f:	leaveq 
   14a40:	retq   
   14a41:	data16 nopw %cs:0x0(%rax,%rax,1)
   14a4c:	nopl   0x0(%rax)

0000000000014a50 <png_set_rgb_to_gray_fixed>:
   14a50:	push   %rbp
   14a51:	mov    %rsp,%rbp
   14a54:	sub    $0x20,%rsp
   14a58:	mov    %rsi,-0x20(%rbp)
   14a5c:	mov    %rdi,-0x18(%rbp)
   14a60:	mov    %rdx,-0x10(%rbp)
   14a64:	mov    %rcx,-0x8(%rbp)
   14a68:	mov    $0x1,%esi
   14a6d:	callq  17790 <png_rtran_ok>
   14a72:	test   %eax,%eax
   14a74:	jne    14a78 <png_set_rgb_to_gray_fixed+0x28>
   14a76:	leaveq 
   14a77:	retq   
   14a78:	mov    -0x20(%rbp),%rax
   14a7c:	cmp    $0x1,%eax
   14a7f:	jle    14aa2 <png_set_rgb_to_gray_fixed+0x52>
   14a81:	cmp    $0x2,%eax
   14a84:	je     14ab7 <png_set_rgb_to_gray_fixed+0x67>
   14a86:	cmp    $0x3,%eax
   14a89:	jne    14aa7 <png_set_rgb_to_gray_fixed+0x57>
   14a8b:	mov    -0x18(%rbp),%rcx
   14a8f:	mov    0x134(%rcx),%eax
   14a95:	or     $0x200000,%eax
   14a9a:	mov    %eax,0x134(%rcx)
   14aa0:	jmp    14ae3 <png_set_rgb_to_gray_fixed+0x93>
   14aa2:	cmp    $0x1,%eax
   14aa5:	je     14ace <png_set_rgb_to_gray_fixed+0x7e>
   14aa7:	lea    0x1987c(%rip),%rsi        # 2e32a <chunks_to_process.34+0x525>
   14aae:	mov    -0x18(%rbp),%rdi
   14ab2:	callq  5470 <png_error@plt>
   14ab7:	mov    -0x18(%rbp),%rcx
   14abb:	mov    0x134(%rcx),%eax
   14ac1:	or     $0x400000,%eax
   14ac6:	mov    %eax,0x134(%rcx)
   14acc:	jmp    14ae3 <png_set_rgb_to_gray_fixed+0x93>
   14ace:	mov    -0x18(%rbp),%rcx
   14ad2:	mov    0x134(%rcx),%eax
   14ad8:	or     $0x600000,%eax
   14add:	mov    %eax,0x134(%rcx)
   14ae3:	movzbl 0x267(%rcx),%eax
   14aea:	cmp    $0x3,%al
   14aec:	jne    14aff <png_set_rgb_to_gray_fixed+0xaf>
   14aee:	mov    0x134(%rcx),%eax
   14af4:	or     $0x1000,%eax
   14af9:	mov    %eax,0x134(%rcx)
   14aff:	mov    -0x10(%rbp),%rdx
   14b03:	test   %edx,%edx
   14b05:	jns    14b20 <png_set_rgb_to_gray_fixed+0xd0>
   14b07:	xor    %eax,%eax
   14b09:	mov    -0x8(%rbp),%rsi
   14b0d:	test   %rax,%rax
   14b10:	jne    14b2f <png_set_rgb_to_gray_fixed+0xdf>
   14b12:	movzwl 0x3d2(%rcx),%eax
   14b19:	test   %ax,%ax
   14b1c:	je     14b52 <png_set_rgb_to_gray_fixed+0x102>
   14b1e:	leaveq 
   14b1f:	retq   
   14b20:	mov    -0x8(%rbp),%rsi
   14b24:	test   %esi,%esi
   14b26:	jns    14b60 <png_set_rgb_to_gray_fixed+0x110>
   14b28:	mov    $0x1,%eax
   14b2d:	jmp    14b0d <png_set_rgb_to_gray_fixed+0xbd>
   14b2f:	test   %esi,%esi
   14b31:	js     14b12 <png_set_rgb_to_gray_fixed+0xc2>
   14b33:	lea    0x19814(%rip),%rsi        # 2e34e <chunks_to_process.34+0x549>
   14b3a:	mov    %rcx,%rdi
   14b3d:	mov    %r15,-0x20(%rbp)
   14b41:	mov    %rcx,%r15
   14b44:	callq  b100 <png_app_warning>
   14b49:	mov    %r15,%rcx
   14b4c:	mov    -0x20(%rbp),%r15
   14b50:	jmp    14b12 <png_set_rgb_to_gray_fixed+0xc2>
   14b52:	movzwl 0x3d4(%rcx),%eax
   14b59:	test   %ax,%ax
   14b5c:	je     14b71 <png_set_rgb_to_gray_fixed+0x121>
   14b5e:	leaveq 
   14b5f:	retq   
   14b60:	lea    (%rdx,%rsi,1),%eax
   14b63:	cmp    $0x186a0,%eax
   14b68:	jle    14b85 <png_set_rgb_to_gray_fixed+0x135>
   14b6a:	mov    $0x1,%eax
   14b6f:	jmp    14b0d <png_set_rgb_to_gray_fixed+0xbd>
   14b71:	movw   $0x1b38,0x3d2(%rcx)
   14b7a:	movw   $0x5b8a,0x3d4(%rcx)
   14b83:	leaveq 
   14b84:	retq   
   14b85:	and    $0x1ffff,%edx
   14b8b:	shl    $0xa,%edx
   14b8e:	mov    $0xa7c5ac5,%edi
   14b93:	mov    %rdi,%rax
   14b96:	mul    %edx
   14b98:	shr    $0x7,%edx
   14b9b:	mov    %dx,0x3d2(%rcx)
   14ba2:	and    $0x1ffff,%esi
   14ba8:	shl    $0xa,%esi
   14bab:	mov    %rdi,%rax
   14bae:	mul    %esi
   14bb0:	shr    $0x7,%edx
   14bb3:	mov    %dx,0x3d4(%rcx)
   14bba:	movb   $0x1,0x3d1(%rcx)
   14bc1:	leaveq 
   14bc2:	retq   
   14bc3:	data16 nopw %cs:0x0(%rax,%rax,1)
   14bce:	xchg   %ax,%ax

0000000000014bd0 <png_set_alpha_mode>:
   14bd0:	push   %rbp
   14bd1:	mov    %rsp,%rbp
   14bd4:	sub    $0x10,%rsp
   14bd8:	mov    %r14,-0x8(%rbp)
   14bdc:	mov    %r15,-0x10(%rbp)
   14be0:	mov    %rsi,%r15
   14be3:	mov    %rdi,%r14
   14be6:	callq  17860 <convert_gamma_value>
   14beb:	mov    %rax,%rdx
   14bee:	mov    %r15,%rsi
   14bf1:	mov    %r14,%rdi
   14bf4:	callq  5640 <png_set_alpha_mode_fixed@plt>
   14bf9:	mov    -0x10(%rbp),%r15
   14bfd:	mov    -0x8(%rbp),%r14
   14c01:	leaveq 
   14c02:	retq   
   14c03:	data16 nopw %cs:0x0(%rax,%rax,1)
   14c0e:	xchg   %ax,%ax

0000000000014c10 <png_set_alpha_mode_fixed>:
   14c10:	push   %rbp
   14c11:	mov    %rsp,%rbp
   14c14:	sub    $0x30,%rsp
   14c18:	mov    %rdi,-0x20(%rbp)
   14c1c:	mov    %rdx,-0x28(%rbp)
   14c20:	mov    %rsi,-0x18(%rbp)
   14c24:	xor    %esi,%esi
   14c26:	mov    %rsi,-0x10(%rbp)
   14c2a:	callq  17790 <png_rtran_ok>
   14c2f:	test   %eax,%eax
   14c31:	jne    14c35 <png_set_alpha_mode_fixed+0x25>
   14c33:	leaveq 
   14c34:	retq   
   14c35:	mov    $0x1,%edx
   14c3a:	mov    %rdx,-0x8(%rbp)
   14c3e:	mov    -0x20(%rbp),%rax
   14c42:	mov    %rax,%rdi
   14c45:	mov    %r15,-0x20(%rbp)
   14c49:	mov    %rax,%r15
   14c4c:	mov    -0x28(%rbp),%rsi
   14c50:	callq  17800 <translate_gamma_flags>
   14c55:	cmp    $0x3e7,%eax
   14c5a:	jle    14c98 <png_set_alpha_mode_fixed+0x88>
   14c5c:	cmp    $0x989680,%eax
   14c61:	jg     14c98 <png_set_alpha_mode_fixed+0x88>
   14c63:	mov    %rax,%rdi
   14c66:	mov    %r14,-0x28(%rbp)
   14c6a:	mov    %rax,%r14
   14c6d:	callq  8a50 <png_reciprocal>
   14c72:	mov    -0x18(%rbp),%rcx
   14c76:	cmp    $0x1,%ecx
   14c79:	jle    14ca7 <png_set_alpha_mode_fixed+0x97>
   14c7b:	cmp    $0x2,%ecx
   14c7e:	je     14ced <png_set_alpha_mode_fixed+0xdd>
   14c80:	cmp    $0x3,%ecx
   14c83:	je     14d1d <png_set_alpha_mode_fixed+0x10d>
   14c89:	mov    %r15,%rdi
   14c8c:	lea    0x1970d(%rip),%rsi        # 2e3a0 <chunks_to_process.34+0x59b>
   14c93:	callq  5470 <png_error@plt>
   14c98:	mov    %r15,%rdi
   14c9b:	lea    0x196db(%rip),%rsi        # 2e37d <chunks_to_process.34+0x578>
   14ca2:	callq  5470 <png_error@plt>
   14ca7:	test   %ecx,%ecx
   14ca9:	je     14d4d <png_set_alpha_mode_fixed+0x13d>
   14caf:	cmp    $0x1,%ecx
   14cb2:	jne    14c89 <png_set_alpha_mode_fixed+0x79>
   14cb4:	mov    0x134(%r15),%ecx
   14cbb:	and    $0xff7fffff,%ecx
   14cc1:	mov    %ecx,0x134(%r15)
   14cc8:	mov    0x130(%r15),%ecx
   14ccf:	and    $0xffffdfff,%ecx
   14cd5:	mov    %ecx,0x130(%r15)
   14cdc:	mov    $0x186a0,%r14d
   14ce2:	pushq  -0x8(%rbp)
   14ce5:	popq   -0x10(%rbp)
   14ce8:	jmpq   14d75 <png_set_alpha_mode_fixed+0x165>
   14ced:	mov    0x134(%r15),%ecx
   14cf4:	and    $0xff7fffff,%ecx
   14cfa:	mov    %ecx,0x134(%r15)
   14d01:	mov    0x130(%r15),%ecx
   14d08:	or     $0x2000,%ecx
   14d0e:	mov    %ecx,0x130(%r15)
   14d15:	pushq  -0x8(%rbp)
   14d18:	popq   -0x10(%rbp)
   14d1b:	jmp    14d75 <png_set_alpha_mode_fixed+0x165>
   14d1d:	mov    0x134(%r15),%ecx
   14d24:	or     $0x800000,%ecx
   14d2a:	mov    %ecx,0x134(%r15)
   14d31:	mov    0x130(%r15),%ecx
   14d38:	and    $0xffffdfff,%ecx
   14d3e:	mov    %ecx,0x130(%r15)
   14d45:	pushq  -0x8(%rbp)
   14d48:	popq   -0x10(%rbp)
   14d4b:	jmp    14d75 <png_set_alpha_mode_fixed+0x165>
   14d4d:	mov    0x134(%r15),%ecx
   14d54:	and    $0xff7fffff,%ecx
   14d5a:	mov    %ecx,0x134(%r15)
   14d61:	mov    0x130(%r15),%ecx
   14d68:	and    $0xffffdfff,%ecx
   14d6e:	mov    %ecx,0x130(%r15)
   14d75:	movslq 0x498(%r15),%rcx
   14d7c:	test   %ecx,%ecx
   14d7e:	jne    14d9b <png_set_alpha_mode_fixed+0x18b>
   14d80:	mov    %eax,0x498(%r15)
   14d87:	movzwl 0x4e2(%r15),%eax
   14d8f:	or     $0x1,%ax
   14d93:	mov    %ax,0x4e2(%r15)
   14d9b:	mov    %r14d,0x2a4(%r15)
   14da2:	mov    -0x10(%rbp),%rax
   14da6:	test   %eax,%eax
   14da8:	jg     14db4 <png_set_alpha_mode_fixed+0x1a4>
   14daa:	mov    -0x28(%rbp),%r14
   14dae:	mov    -0x20(%rbp),%r15
   14db2:	leaveq 
   14db3:	retq   
   14db4:	lea    0x27c(%r15),%rdi
   14dbb:	mov    $0xa,%edx
   14dc0:	xor    %esi,%esi
   14dc2:	callq  5350 <memset@plt>
   14dc7:	movslq 0x498(%r15),%rax
   14dce:	mov    %eax,0x278(%r15)
   14dd5:	movb   $0x2,0x274(%r15)
   14ddd:	mov    0x134(%r15),%eax
   14de4:	mov    %rax,%rcx
   14de7:	and    $0xfffffeff,%ecx
   14ded:	mov    %ecx,0x134(%r15)
   14df4:	mov    %rax,%rcx
   14df7:	and    $0x80,%ecx
   14dfd:	test   %ecx,%ecx
   14dff:	jne    14e1c <png_set_alpha_mode_fixed+0x20c>
   14e01:	and    $0xfffffe7f,%eax
   14e06:	add    $0x80,%eax
   14e0b:	mov    %eax,0x134(%r15)
   14e12:	mov    -0x28(%rbp),%r14
   14e16:	mov    -0x20(%rbp),%r15
   14e1a:	leaveq 
   14e1b:	retq   
   14e1c:	mov    %r15,%rdi
   14e1f:	lea    0x1958d(%rip),%rsi        # 2e3b3 <chunks_to_process.34+0x5ae>
   14e26:	callq  5470 <png_error@plt>
   14e2b:	nopl   0x0(%rax,%rax,1)

0000000000014e30 <png_set_strip_alpha>:
   14e30:	push   %rbp
   14e31:	mov    %rsp,%rbp
   14e34:	sub    $0x10,%rsp
   14e38:	mov    %r15,-0x8(%rbp)
   14e3c:	xor    %esi,%esi
   14e3e:	mov    %rdi,%r15
   14e41:	callq  17790 <png_rtran_ok>
   14e46:	test   %eax,%eax
   14e48:	jne    14e50 <png_set_strip_alpha+0x20>
   14e4a:	mov    -0x8(%rbp),%r15
   14e4e:	leaveq 
   14e4f:	retq   
   14e50:	mov    0x134(%r15),%eax
   14e57:	or     $0x40000,%eax
   14e5c:	mov    %eax,0x134(%r15)
   14e63:	mov    -0x8(%rbp),%r15
   14e67:	leaveq 
   14e68:	retq   
   14e69:	nopl   0x0(%rax)

0000000000014e70 <png_set_background>:
   14e70:	push   %rbp
   14e71:	mov    %rsp,%rbp
   14e74:	sub    $0x20,%rsp
   14e78:	mov    %r12,-0x8(%rbp)
   14e7c:	mov    %r13,-0x10(%rbp)
   14e80:	mov    %r14,-0x18(%rbp)
   14e84:	mov    %r15,-0x20(%rbp)
   14e88:	mov    %rdx,%r13
   14e8b:	mov    %rsi,%r14
   14e8e:	mov    %rcx,%r15
   14e91:	lea    0x1954e(%rip),%rsi        # 2e3e6 <chunks_to_process.34+0x5e1>
   14e98:	mov    %rdi,%r12
   14e9b:	callq  69f0 <png_fixed>
   14ea0:	mov    %r15,%rcx
   14ea3:	mov    %r13,%rdx
   14ea6:	mov    %r14,%rsi
   14ea9:	mov    %r12,%rdi
   14eac:	mov    %rax,%r8
   14eaf:	callq  5320 <png_set_background_fixed@plt>
   14eb4:	mov    -0x20(%rbp),%r15
   14eb8:	mov    -0x18(%rbp),%r14
   14ebc:	mov    -0x10(%rbp),%r13
   14ec0:	mov    -0x8(%rbp),%r12
   14ec4:	leaveq 
   14ec5:	retq   
   14ec6:	nopw   %cs:0x0(%rax,%rax,1)

0000000000014ed0 <png_set_background_fixed>:
   14ed0:	push   %rbp
   14ed1:	mov    %rsp,%rbp
   14ed4:	sub    $0x30,%rsp
   14ed8:	mov    %rsi,-0x28(%rbp)
   14edc:	mov    %rdx,-0x20(%rbp)
   14ee0:	mov    %rdi,-0x10(%rbp)
   14ee4:	mov    %r8,-0x8(%rbp)
   14ee8:	mov    %rcx,-0x18(%rbp)
   14eec:	xor    %esi,%esi
   14eee:	callq  17790 <png_rtran_ok>
   14ef3:	test   %eax,%eax
   14ef5:	jne    14ef9 <png_set_background_fixed+0x29>
   14ef7:	leaveq 
   14ef8:	retq   
   14ef9:	mov    -0x28(%rbp),%rsi
   14efd:	test   %rsi,%rsi
   14f00:	jne    14f04 <png_set_background_fixed+0x34>
   14f02:	leaveq 
   14f03:	retq   
   14f04:	mov    -0x20(%rbp),%rdx
   14f08:	test   %edx,%edx
   14f0a:	je     14f7b <png_set_background_fixed+0xab>
   14f0c:	mov    -0x10(%rbp),%rdi
   14f10:	mov    0x134(%rdi),%ecx
   14f16:	mov    %rcx,%rax
   14f19:	and    $0xff7bff7f,%eax
   14f1e:	add    $0x40080,%eax
   14f23:	mov    %eax,0x134(%rdi)
   14f29:	mov    0x130(%rdi),%eax
   14f2f:	and    $0xffffdfff,%eax
   14f34:	mov    %eax,0x130(%rdi)
   14f3a:	mov    (%rsi),%rax
   14f3d:	mov    %rax,0x27c(%rdi)
   14f44:	movzwl 0x8(%rsi),%eax
   14f48:	mov    -0x8(%rbp),%rsi
   14f4c:	mov    %esi,0x278(%rdi)
   14f52:	mov    %dl,0x274(%rdi)
   14f58:	mov    %ax,0x284(%rdi)
   14f5f:	mov    -0x18(%rbp),%rax
   14f63:	test   %eax,%eax
   14f65:	jne    14f8d <png_set_background_fixed+0xbd>
   14f67:	and    $0xff7bfe7f,%ecx
   14f6d:	lea    0x40080(%rcx),%eax
   14f73:	mov    %eax,0x134(%rdi)
   14f79:	leaveq 
   14f7a:	retq   
   14f7b:	lea    0x19477(%rip),%rsi        # 2e3f9 <chunks_to_process.34+0x5f4>
   14f82:	mov    -0x10(%rbp),%rdi
   14f86:	callq  5390 <png_warning@plt>
   14f8b:	leaveq 
   14f8c:	retq   
   14f8d:	and    $0xff7bfe7f,%ecx
   14f93:	lea    0x40180(%rcx),%eax
   14f99:	mov    %eax,0x134(%rdi)
   14f9f:	leaveq 
   14fa0:	retq   
   14fa1:	data16 nopw %cs:0x0(%rax,%rax,1)
   14fac:	nopl   0x0(%rax)

0000000000014fb0 <png_set_scale_16>:
   14fb0:	push   %rbp
   14fb1:	mov    %rsp,%rbp
   14fb4:	sub    $0x10,%rsp
   14fb8:	mov    %r15,-0x8(%rbp)
   14fbc:	xor    %esi,%esi
   14fbe:	mov    %rdi,%r15
   14fc1:	callq  17790 <png_rtran_ok>
   14fc6:	test   %eax,%eax
   14fc8:	jne    14fd0 <png_set_scale_16+0x20>
   14fca:	mov    -0x8(%rbp),%r15
   14fce:	leaveq 
   14fcf:	retq   
   14fd0:	mov    0x134(%r15),%eax
   14fd7:	or     $0x4000000,%eax
   14fdc:	mov    %eax,0x134(%r15)
   14fe3:	mov    -0x8(%rbp),%r15
   14fe7:	leaveq 
   14fe8:	retq   
   14fe9:	nopl   0x0(%rax)

0000000000014ff0 <png_set_strip_16>:
   14ff0:	push   %rbp
   14ff1:	mov    %rsp,%rbp
   14ff4:	sub    $0x10,%rsp
   14ff8:	mov    %r15,-0x8(%rbp)
   14ffc:	xor    %esi,%esi
   14ffe:	mov    %rdi,%r15
   15001:	callq  17790 <png_rtran_ok>
   15006:	test   %eax,%eax
   15008:	jne    15010 <png_set_strip_16+0x20>
   1500a:	mov    -0x8(%rbp),%r15
   1500e:	leaveq 
   1500f:	retq   
   15010:	mov    0x134(%r15),%eax
   15017:	or     $0x400,%eax
   1501c:	mov    %eax,0x134(%r15)
   15023:	mov    -0x8(%rbp),%r15
   15027:	leaveq 
   15028:	retq   
   15029:	nopl   0x0(%rax)

0000000000015030 <png_set_quantize>:
   15030:	push   %rbp
   15031:	mov    %rsp,%rbp
   15034:	sub    $0xd0,%rsp
   1503b:	mov    %r15,-0x60(%rbp)
   1503f:	mov    %r9,-0xc8(%rbp)
   15046:	mov    %rcx,-0xb8(%rbp)
   1504d:	mov    %rdx,-0xc0(%rbp)
   15054:	mov    %r8,-0xa8(%rbp)
   1505b:	mov    %rsi,-0x98(%rbp)
   15062:	mov    %r14,%r15
   15065:	mov    %r12,%r14
   15068:	mov    %rdi,-0xb0(%rbp)
   1506f:	xor    %esi,%esi
   15071:	mov    %rdi,%r12
   15074:	callq  17790 <png_rtran_ok>
   15079:	test   %eax,%eax
   1507b:	jne    15089 <png_set_quantize+0x59>
   1507d:	mov    %r14,%r12
   15080:	mov    %r15,%r14
   15083:	mov    -0x60(%rbp),%r15
   15087:	leaveq 
   15088:	retq   
   15089:	mov    0x134(%r12),%eax
   15091:	or     $0x40,%eax
   15094:	mov    %eax,0x134(%r12)
   1509c:	mov    -0xc8(%rbp),%rcx
   150a3:	test   %ecx,%ecx
   150a5:	je     150b9 <png_set_quantize+0x89>
   150a7:	mov    %r15,%rax
   150aa:	mov    %rbx,%rdx
   150ad:	mov    %r13,%r8
   150b0:	mov    -0xc0(%rbp),%r15
   150b7:	jmp    1510e <png_set_quantize+0xde>
   150b9:	mov    -0xc0(%rbp),%rax
   150c0:	mov    %eax,%esi
   150c2:	mov    %r12,%rdi
   150c5:	mov    %r13,-0x78(%rbp)
   150c9:	mov    %r15,-0xa0(%rbp)
   150d0:	mov    %rcx,%r13
   150d3:	mov    %rax,%r15
   150d6:	callq  5800 <png_malloc@plt>
   150db:	mov    %rax,0x380(%r12)
   150e3:	xor    %eax,%eax
   150e5:	jmp    150f8 <png_set_quantize+0xc8>
   150e7:	mov    0x380(%r12),%rdx
   150ef:	movslq %eax,%rcx
   150f2:	mov    %al,(%rdx,%rcx,1)
   150f5:	add    $0x1,%eax
   150f8:	cmp    %r15d,%eax
   150fb:	jl     150e7 <png_set_quantize+0xb7>
   150fd:	mov    %r13,%rcx
   15100:	mov    %rbx,%rdx
   15103:	mov    -0xa0(%rbp),%rax
   1510a:	mov    -0x78(%rbp),%r8
   1510e:	mov    -0xb8(%rbp),%r9
   15115:	cmp    %r9d,%r15d
   15118:	jg     1515c <png_set_quantize+0x12c>
   1511a:	xor    %r13d,%r13d
   1511d:	mov    -0x98(%rbp),%rbx
   15124:	mov    %r15,-0x48(%rbp)
   15128:	mov    0x250(%r12),%rsi
   15130:	test   %rsi,%rsi
   15133:	jne    1513d <png_set_quantize+0x10d>
   15135:	mov    %rbx,0x250(%r12)
   1513d:	test   %ecx,%ecx
   1513f:	mov    %r15w,0x258(%r12)
   15148:	jne    151af <png_set_quantize+0x17f>
   1514a:	mov    %rdx,%rbx
   1514d:	mov    %r14,%r12
   15150:	mov    %rax,%r14
   15153:	mov    %r8,%r13
   15156:	mov    -0x60(%rbp),%r15
   1515a:	leaveq 
   1515b:	retq   
   1515c:	mov    -0xa8(%rbp),%rbx
   15163:	test   %rbx,%rbx
   15166:	jne    15200 <png_set_quantize+0x1d0>
   1516c:	mov    %r15d,%ebx
   1516f:	mov    %r12,%rdi
   15172:	mov    %rbx,%rsi
   15175:	mov    %r8,-0x50(%rbp)
   15179:	mov    %rax,-0x58(%rbp)
   1517d:	mov    %rdx,-0x40(%rbp)
   15181:	mov    %r14,-0x48(%rbp)
   15185:	mov    %r9,%r14
   15188:	callq  5800 <png_malloc@plt>
   1518d:	mov    %rax,0x408(%r12)
   15195:	mov    %rbx,%rsi
   15198:	mov    %r12,%rdi
   1519b:	callq  5800 <png_malloc@plt>
   151a0:	mov    %rax,0x410(%r12)
   151a8:	xor    %eax,%eax
   151aa:	jmpq   1524f <png_set_quantize+0x21f>
   151af:	mov    $0x8000,%ecx
   151b4:	mov    %r12,%rdi
   151b7:	mov    %rcx,%rsi
   151ba:	mov    %r8,-0x18(%rbp)
   151be:	mov    %rax,-0x20(%rbp)
   151c2:	mov    %rdx,-0x8(%rbp)
   151c6:	mov    %r14,-0x10(%rbp)
   151ca:	mov    %rcx,%r14
   151cd:	callq  5780 <png_calloc@plt>
   151d2:	mov    %rax,0x378(%r12)
   151da:	mov    %r12,%rdi
   151dd:	mov    %r14,%rsi
   151e0:	callq  5800 <png_malloc@plt>
   151e5:	mov    %r14,%rdx
   151e8:	mov    %rax,%r14
   151eb:	mov    $0xff,%esi
   151f0:	mov    %r14,%rdi
   151f3:	callq  5350 <memset@plt>
   151f8:	mov    %r13,%r8
   151fb:	jmpq   152f6 <png_set_quantize+0x2c6>
   15200:	mov    %r15d,%esi
   15203:	mov    %r12,%rdi
   15206:	mov    %r8,-0xb0(%rbp)
   1520d:	mov    %rax,-0xb8(%rbp)
   15214:	mov    %rdx,-0x58(%rbp)
   15218:	mov    %r14,-0x68(%rbp)
   1521c:	mov    %r9,%r14
   1521f:	callq  5800 <png_malloc@plt>
   15224:	mov    %rax,0x400(%r12)
   1522c:	xor    %eax,%eax
   1522e:	jmpq   15331 <png_set_quantize+0x301>
   15233:	mov    0x408(%r12),%rcx
   1523b:	movslq %eax,%rdx
   1523e:	mov    %al,(%rcx,%rdx,1)
   15241:	mov    0x410(%r12),%rcx
   15249:	mov    %al,(%rcx,%rdx,1)
   1524c:	add    $0x1,%eax
   1524f:	cmp    %eax,%r15d
   15252:	jg     15233 <png_set_quantize+0x203>
   15254:	mov    $0x1808,%esi
   15259:	mov    %r12,%rdi
   1525c:	callq  5780 <png_calloc@plt>
   15261:	mov    %rax,%rbx
   15264:	mov    %rbx,-0x78(%rbp)
   15268:	mov    $0x60,%ecx
   1526d:	xor    %r13d,%r13d
   15270:	mov    -0x98(%rbp),%r8
   15277:	mov    %r13,%rax
   1527a:	jmpq   153aa <png_set_quantize+0x37a>
   1527f:	mov    %rax,%rsi
   15282:	add    %r10d,%esi
   15285:	add    %edx,%esi
   15287:	mov    %rcx,%rdx
   1528a:	or     %ebx,%edx
   1528c:	movslq %edx,%rdi
   1528f:	movzbl (%rdi,%r14,1),%edx
   15294:	cmp    %esi,%edx
   15296:	jle    152a8 <png_set_quantize+0x278>
   15298:	mov    %sil,(%rdi,%r14,1)
   1529c:	mov    0x378(%r12),%rdx
   152a4:	mov    %r8b,(%rdi,%rdx,1)
   152a8:	add    $0x1,%ecx
   152ab:	cmp    $0x1f,%ecx
   152ae:	jle    1541f <png_set_quantize+0x3ef>
   152b4:	mov    -0xc8(%rbp),%rax
   152bb:	lea    0x1(%rax),%edi
   152be:	mov    -0x40(%rbp),%rbx
   152c2:	mov    -0x38(%rbp),%rdx
   152c6:	mov    -0x30(%rbp),%rcx
   152ca:	cmp    $0x1f,%edi
   152cd:	jle    15432 <png_set_quantize+0x402>
   152d3:	mov    -0x50(%rbp),%rax
   152d7:	lea    0x1(%rax),%edi
   152da:	mov    -0x28(%rbp),%rdx
   152de:	cmp    $0x1f,%edi
   152e1:	jle    15441 <png_set_quantize+0x411>
   152e7:	add    $0x1,%r8d
   152eb:	mov    -0x48(%rbp),%r15
   152ef:	mov    -0x98(%rbp),%rbx
   152f6:	cmp    %r15d,%r8d
   152f9:	jl     15450 <png_set_quantize+0x420>
   152ff:	mov    %r14,%rsi
   15302:	mov    %r12,%rdi
   15305:	callq  5790 <png_free@plt>
   1530a:	mov    -0x10(%rbp),%r12
   1530e:	mov    -0x8(%rbp),%rbx
   15312:	mov    -0x20(%rbp),%r14
   15316:	mov    -0x18(%rbp),%r13
   1531a:	mov    -0x60(%rbp),%r15
   1531e:	leaveq 
   1531f:	retq   
   15320:	mov    0x400(%r12),%rdx
   15328:	movslq %eax,%rcx
   1532b:	mov    %al,(%rdx,%rcx,1)
   1532e:	add    $0x1,%eax
   15331:	cmp    %eax,%r15d
   15334:	jg     15320 <png_set_quantize+0x2f0>
   15336:	mov    $0x1,%eax
   1533b:	lea    -0x1(%r15),%ecx
   1533f:	xor    %r13d,%r13d
   15342:	jmpq   15488 <png_set_quantize+0x458>
   15347:	mov    (%rsi),%r15
   1534a:	mov    %r15,-0xa8(%rbp)
   15351:	mov    %r12,%rdi
   15354:	callq  5790 <png_free@plt>
   15359:	mov    %r15,%rsi
   1535c:	test   %rsi,%rsi
   1535f:	jne    15347 <png_set_quantize+0x317>
   15361:	mov    -0x90(%rbp),%r15
   15368:	mov    -0xa8(%rbp),%rax
   1536f:	movq   $0x0,(%rbx,%r14,8)
   15377:	add    $0x1,%r13d
   1537b:	mov    %rax,-0xa8(%rbp)
   15382:	cmp    $0x300,%r13d
   15389:	jle    15499 <png_set_quantize+0x469>
   1538f:	mov    -0xa0(%rbp),%rcx
   15396:	add    $0x60,%ecx
   15399:	xor    %r13d,%r13d
   1539c:	mov    -0x98(%rbp),%r8
   153a3:	mov    -0xb8(%rbp),%r14
   153aa:	mov    %rcx,-0xa0(%rbp)
   153b1:	cmp    %r15d,%r14d
   153b4:	jl     154b5 <png_set_quantize+0x485>
   153ba:	mov    %rbx,%rsi
   153bd:	mov    %r8,%rbx
   153c0:	mov    %r12,%rdi
   153c3:	callq  5790 <png_free@plt>
   153c8:	mov    0x410(%r12),%rsi
   153d0:	mov    %r12,%rdi
   153d3:	callq  5790 <png_free@plt>
   153d8:	mov    %r14,%r15
   153db:	mov    0x408(%r12),%rsi
   153e3:	mov    %r12,%rdi
   153e6:	callq  5790 <png_free@plt>
   153eb:	movq   $0x0,0x410(%r12)
   153f7:	movq   $0x0,0x408(%r12)
   15403:	mov    -0x48(%rbp),%r14
   15407:	mov    -0x40(%rbp),%rdx
   1540b:	mov    -0x58(%rbp),%rax
   1540f:	mov    -0x50(%rbp),%r8
   15413:	mov    -0xc8(%rbp),%rcx
   1541a:	jmpq   15124 <png_set_quantize+0xf4>
   1541f:	cmp    %r9d,%ecx
   15422:	jg     154c5 <png_set_quantize+0x495>
   15428:	mov    %r9,%rdx
   1542b:	sub    %ecx,%edx
   1542d:	jmpq   154cb <png_set_quantize+0x49b>
   15432:	cmp    %ecx,%edi
   15434:	jg     154db <png_set_quantize+0x4ab>
   1543a:	sub    %edi,%ecx
   1543c:	jmpq   154df <png_set_quantize+0x4af>
   15441:	cmp    %edx,%edi
   15443:	jg     154ef <png_set_quantize+0x4bf>
   15449:	sub    %edi,%edx
   1544b:	jmpq   154f3 <png_set_quantize+0x4c3>
   15450:	movslq %r8d,%rax
   15453:	lea    (%rax,%rax,2),%rax
   15457:	movzbl 0x1(%rbx,%rax,1),%ecx
   1545c:	shr    $0x3,%ecx
   1545f:	mov    %rcx,-0x30(%rbp)
   15463:	movzbl (%rbx,%rax,1),%edx
   15467:	shr    $0x3,%edx
   1546a:	mov    %rdx,-0x28(%rbp)
   1546e:	movzbl 0x2(%rbx,%rax,1),%r9d
   15474:	shr    $0x3,%r9d
   15478:	mov    %r13,%rdi
   1547b:	jmpq   152de <png_set_quantize+0x2ae>
   15480:	add    $0xffffffff,%ecx
   15483:	mov    $0x1,%eax
   15488:	cmp    %ecx,%r14d
   1548b:	jg     15534 <png_set_quantize+0x504>
   15491:	mov    %r13,%rdx
   15494:	jmpq   15523 <png_set_quantize+0x4f3>
   15499:	movslq %r13d,%r14
   1549c:	mov    (%rbx,%r14,8),%rsi
   154a0:	test   %rsi,%rsi
   154a3:	je     1536f <png_set_quantize+0x33f>
   154a9:	mov    %r15,-0x90(%rbp)
   154b0:	jmpq   1535c <png_set_quantize+0x32c>
   154b5:	lea    -0x1(%r15),%edx
   154b9:	mov    %rdx,-0x88(%rbp)
   154c0:	jmpq   1555e <png_set_quantize+0x52e>
   154c5:	mov    %rcx,%rdx
   154c8:	sub    %r9d,%edx
   154cb:	cmp    %eax,%edx
   154cd:	jl     1527f <png_set_quantize+0x24f>
   154d3:	mov    %rdx,%rsi
   154d6:	jmpq   15282 <png_set_quantize+0x252>
   154db:	neg    %ecx
   154dd:	add    %edi,%ecx
   154df:	cmp    %edx,%ecx
   154e1:	jl     1557f <png_set_quantize+0x54f>
   154e7:	mov    %rcx,%rax
   154ea:	jmpq   15582 <png_set_quantize+0x552>
   154ef:	neg    %edx
   154f1:	add    %edi,%edx
   154f3:	mov    %rdx,-0x38(%rbp)
   154f7:	mov    %rdi,%rbx
   154fa:	shl    $0xa,%ebx
   154fd:	mov    %rdi,-0x50(%rbp)
   15501:	mov    %rbx,-0x40(%rbp)
   15505:	mov    %r13,%rdi
   15508:	jmpq   152ca <png_set_quantize+0x29a>
   1550d:	mov    %dil,(%r15,%r11,1)
   15511:	mov    0x400(%r12),%rax
   15519:	mov    %r10b,(%r8,%rax,1)
   1551d:	mov    %r9,%rdx
   15520:	mov    %r13,%rax
   15523:	cmp    %ecx,%edx
   15525:	jl     1559d <png_set_quantize+0x56d>
   15527:	test   %eax,%eax
   15529:	jle    15480 <png_set_quantize+0x450>
   1552f:	mov    $0x1,%eax
   15534:	mov    -0xc8(%rbp),%r15
   1553b:	test   %r15d,%r15d
   1553e:	je     155d3 <png_set_quantize+0x5a3>
   15544:	mov    -0xc0(%rbp),%rax
   1554b:	mov    %r13,%rcx
   1554e:	jmpq   155fd <png_set_quantize+0x5cd>
   15553:	mov    -0x80(%rbp),%r13
   15557:	mov    -0x88(%rbp),%rdx
   1555e:	cmp    %edx,%r13d
   15561:	jge    15722 <png_set_quantize+0x6f2>
   15567:	movslq %r13d,%rdx
   1556a:	lea    (%rdx,%rdx,2),%rdx
   1556e:	mov    %rdx,-0x70(%rbp)
   15572:	lea    0x1(%r13),%r14d
   15576:	mov    %r14,-0x80(%rbp)
   1557a:	jmpq   15679 <png_set_quantize+0x649>
   1557f:	mov    %rdx,%rax
   15582:	mov    %rdi,%rsi
   15585:	shl    $0x5,%esi
   15588:	or     %esi,%ebx
   1558a:	lea    (%rcx,%rdx,1),%r10d
   1558e:	mov    %rdi,-0xc8(%rbp)
   15595:	mov    %r13,%rcx
   15598:	jmpq   152ab <png_set_quantize+0x27b>
   1559d:	mov    0x400(%r12),%r15
   155a5:	lea    0x1(%rdx),%r9d
   155a9:	movslq %r9d,%r8
   155ac:	movzbl (%r8,%r15,1),%edi
   155b1:	movzwl (%rbx,%rdi,2),%esi
   155b5:	movslq %edx,%r11
   155b8:	movzbl (%r15,%r11,1),%r10d
   155bd:	movzwl (%rbx,%r10,2),%edx
   155c2:	cmp    %dx,%si
   155c5:	ja     1550d <png_set_quantize+0x4dd>
   155cb:	mov    %r9,%rdx
   155ce:	jmpq   15523 <png_set_quantize+0x4f3>
   155d3:	mov    -0xc0(%rbp),%rcx
   155da:	mov    %r13,%rdx
   155dd:	jmpq   15751 <png_set_quantize+0x721>
   155e2:	mov    0x400(%r12),%rdx
   155ea:	movslq %ecx,%rbx
   155ed:	movzbl (%rdx,%rbx,1),%edx
   155f1:	cmp    %edx,%r14d
   155f4:	jle    1576c <png_set_quantize+0x73c>
   155fa:	add    $0x1,%ecx
   155fd:	cmp    %ecx,%r14d
   15600:	jg     155e2 <png_set_quantize+0x5b2>
   15602:	mov    -0x98(%rbp),%rbx
   15609:	mov    0x400(%r12),%rsi
   15611:	mov    %r12,%rdi
   15614:	callq  5790 <png_free@plt>
   15619:	movq   $0x0,0x400(%r12)
   15625:	mov    %r15,%rcx
   15628:	mov    %r14,%r15
   1562b:	mov    -0x68(%rbp),%r14
   1562f:	mov    -0x58(%rbp),%rdx
   15633:	mov    -0xb8(%rbp),%rax
   1563a:	mov    -0xb0(%rbp),%r8
   15641:	jmpq   15124 <png_set_quantize+0xf4>
   15646:	movslq %r12d,%rdx
   15649:	mov    (%rbx,%rdx,8),%rcx
   1564d:	mov    %rcx,(%rax)
   15650:	mov    %r13b,0x8(%rax)
   15654:	mov    %r14b,0x9(%rax)
   15658:	mov    %rax,(%rbx,%rdx,8)
   1565c:	mov    -0xb0(%rbp),%r12
   15663:	mov    -0xa0(%rbp),%rcx
   1566a:	mov    -0x70(%rbp),%rdx
   1566e:	mov    -0x98(%rbp),%r8
   15675:	add    $0x1,%r14d
   15679:	cmp    %r15d,%r14d
   1567c:	jge    15717 <png_set_quantize+0x6e7>
   15682:	movzbl (%r8,%rdx,1),%esi
   15687:	movslq %r14d,%rdi
   1568a:	lea    (%rdi,%rdi,2),%rdi
   1568e:	movzbl (%r8,%rdi,1),%r9d
   15693:	sub    %r9d,%esi
   15696:	mov    %rsi,%r11
   15699:	sar    $0x1f,%r11d
   1569d:	mov    %r11,%r9
   156a0:	xor    %esi,%r9d
   156a3:	movzbl 0x1(%r8,%rdx,1),%esi
   156a9:	movzbl 0x1(%r8,%rdi,1),%r10d
   156af:	sub    %r10d,%esi
   156b2:	mov    %rsi,%r10
   156b5:	sar    $0x1f,%r10d
   156b9:	xor    %r10d,%esi
   156bc:	add    %esi,%r9d
   156bf:	movzbl 0x2(%r8,%rdx,1),%esi
   156c5:	movzbl 0x2(%r8,%rdi,1),%edi
   156cb:	sub    %edi,%esi
   156cd:	mov    %rsi,%rdi
   156d0:	sar    $0x1f,%edi
   156d3:	xor    %edi,%esi
   156d5:	add    %esi,%r9d
   156d8:	lea    (%rdi,%r11,1),%esi
   156dc:	add    %r10d,%esi
   156df:	sub    %esi,%r9d
   156e2:	cmp    %r9d,%ecx
   156e5:	jl     15675 <png_set_quantize+0x645>
   156e7:	mov    %r12,%rdi
   156ea:	mov    %r9,%r12
   156ed:	mov    $0x10,%esi
   156f2:	callq  5150 <png_malloc_warn@plt>
   156f7:	test   %rax,%rax
   156fa:	jne    15646 <png_set_quantize+0x616>
   15700:	mov    -0xb0(%rbp),%r12
   15707:	mov    -0xa0(%rbp),%rcx
   1570e:	xor    %eax,%eax
   15710:	mov    -0x98(%rbp),%r8
   15717:	test   %rax,%rax
   1571a:	jne    15553 <png_set_quantize+0x523>
   15720:	xor    %eax,%eax
   15722:	test   %rax,%rax
   15725:	jne    157ac <png_set_quantize+0x77c>
   1572b:	xor    %eax,%eax
   1572d:	mov    %rax,%r13
   15730:	jmpq   1537b <png_set_quantize+0x34b>
   15735:	mov    0x400(%r12),%rsi
   1573d:	movslq %edx,%r11
   15740:	movzbl (%rsi,%r11,1),%esi
   15745:	cmp    %esi,%r14d
   15748:	jle    157d0 <png_set_quantize+0x7a0>
   1574e:	add    $0x1,%edx
   15751:	cmp    %edx,%r14d
   15754:	jg     15735 <png_set_quantize+0x705>
   15756:	mov    -0x98(%rbp),%rbx
   1575d:	mov    -0xc0(%rbp),%r15
   15764:	mov    %r13,%r8
   15767:	jmpq   15856 <png_set_quantize+0x826>
   1576c:	add    $0xffffffff,%eax
   1576f:	movslq %eax,%rsi
   15772:	mov    0x400(%r12),%rdx
   1577a:	movzbl (%rsi,%rdx,1),%edx
   1577e:	cmp    %edx,%r14d
   15781:	jle    1576c <png_set_quantize+0x73c>
   15783:	lea    (%rsi,%rsi,2),%rdi
   15787:	mov    -0x98(%rbp),%r8
   1578e:	movzwl (%r8,%rdi,1),%edx
   15793:	lea    (%rbx,%rbx,2),%rsi
   15797:	mov    %dx,(%r8,%rsi,1)
   1579c:	movzbl 0x2(%r8,%rdi,1),%edx
   157a2:	mov    %dl,0x2(%r8,%rsi,1)
   157a7:	jmpq   155fa <png_set_quantize+0x5ca>
   157ac:	mov    %rax,-0x68(%rbp)
   157b0:	xor    %r13d,%r13d
   157b3:	mov    -0xc0(%rbp),%r14
   157ba:	mov    -0xb8(%rbp),%r11
   157c1:	mov    -0xc8(%rbp),%r10
   157c8:	mov    %r13,%rdx
   157cb:	jmpq   1587e <png_set_quantize+0x84e>
   157d0:	add    $0xffffffff,%ecx
   157d3:	movslq %ecx,%r10
   157d6:	mov    0x400(%r12),%rsi
   157de:	movzbl (%r10,%rsi,1),%esi
   157e3:	cmp    %esi,%r14d
   157e6:	jle    157d0 <png_set_quantize+0x7a0>
   157e8:	lea    (%r11,%r11,2),%rbx
   157ec:	mov    -0x98(%rbp),%r15
   157f3:	movzwl (%r15,%rbx,1),%esi
   157f8:	lea    (%r10,%r10,2),%r9
   157fc:	movzwl (%r15,%r9,1),%r8d
   15801:	mov    %si,(%r15,%r9,1)
   15806:	movzbl 0x2(%r15,%rbx,1),%edi
   1580c:	movzbl 0x2(%r15,%r9,1),%esi
   15812:	mov    %dil,0x2(%r15,%r9,1)
   15817:	mov    %r8w,(%r15,%rbx,1)
   1581c:	mov    %sil,0x2(%r15,%rbx,1)
   15821:	mov    0x380(%r12),%rsi
   15829:	mov    %dl,(%r10,%rsi,1)
   1582d:	mov    0x380(%r12),%rsi
   15835:	mov    %cl,(%rsi,%r11,1)
   15839:	jmpq   1574e <png_set_quantize+0x71e>
   1583e:	mov    0x380(%r12),%rcx
   15846:	movslq %r8d,%rdi
   15849:	movzbl (%rcx,%rdi,1),%ecx
   1584d:	cmp    %ecx,%r14d
   15850:	jle    1588b <png_set_quantize+0x85b>
   15852:	add    $0x1,%r8d
   15856:	cmp    %r8d,%r15d
   15859:	jg     1583e <png_set_quantize+0x80e>
   1585b:	mov    -0xc8(%rbp),%r15
   15862:	jmpq   15609 <png_set_quantize+0x5d9>
   15867:	cmp    %r15d,%r11d
   1586a:	jge    158e2 <png_set_quantize+0x8b2>
   1586c:	mov    -0x70(%rbp),%rdx
   15870:	mov    -0x78(%rbp),%rbx
   15874:	mov    -0xa0(%rbp),%rcx
   1587b:	add    $0x1,%edx
   1587e:	cmp    %ecx,%edx
   15880:	jle    158ef <png_set_quantize+0x8bf>
   15882:	mov    -0x68(%rbp),%rax
   15886:	jmpq   1537b <png_set_quantize+0x34b>
   1588b:	lea    (%rcx,%rcx,2),%r11
   1588f:	movzbl (%rbx,%r11,1),%ecx
   15894:	movzbl (%rbx),%edx
   15897:	sub    %edx,%ecx
   15899:	mov    %rcx,%rdx
   1589c:	sar    $0x1f,%edx
   1589f:	xor    %edx,%ecx
   158a1:	sub    %edx,%ecx
   158a3:	movzbl 0x1(%rbx,%r11,1),%edx
   158a9:	movzbl 0x1(%rbx),%esi
   158ad:	sub    %esi,%edx
   158af:	mov    %rdx,%rsi
   158b2:	sar    $0x1f,%esi
   158b5:	xor    %esi,%edx
   158b7:	sub    %esi,%edx
   158b9:	add    %ecx,%edx
   158bb:	movzbl 0x2(%rbx,%r11,1),%ecx
   158c1:	movzbl 0x2(%rbx),%esi
   158c5:	sub    %esi,%ecx
   158c7:	mov    %rcx,%rsi
   158ca:	sar    $0x1f,%esi
   158cd:	xor    %esi,%ecx
   158cf:	sub    %esi,%ecx
   158d1:	add    %edx,%ecx
   158d3:	mov    %rdi,-0xc0(%rbp)
   158da:	mov    %r13,%rdx
   158dd:	jmpq   1596f <png_set_quantize+0x93f>
   158e2:	mov    -0x78(%rbp),%rbx
   158e6:	mov    -0x68(%rbp),%rax
   158ea:	jmpq   1537b <png_set_quantize+0x34b>
   158ef:	movslq %edx,%rax
   158f2:	mov    (%rbx,%rax,8),%rax
   158f6:	test   %rax,%rax
   158f9:	je     1587b <png_set_quantize+0x84b>
   158fb:	mov    %rdx,-0x70(%rbp)
   158ff:	jmpq   15a57 <png_set_quantize+0xa27>
   15904:	movzbl (%rbx,%r11,1),%esi
   15909:	movslq %eax,%rdi
   1590c:	lea    (%rdi,%rdi,2),%r10
   15910:	movzbl (%rbx,%r10,1),%edi
   15915:	sub    %edi,%esi
   15917:	mov    %rsi,%r9
   1591a:	sar    $0x1f,%r9d
   1591e:	mov    %r9,%rdi
   15921:	xor    %esi,%edi
   15923:	sub    %r9d,%edi
   15926:	movzbl 0x1(%rbx,%r11,1),%esi
   1592c:	movzbl 0x1(%rbx,%r10,1),%r9d
   15932:	sub    %r9d,%esi
   15935:	mov    %rsi,%r9
   15938:	sar    $0x1f,%r9d
   1593c:	xor    %r9d,%esi
   1593f:	sub    %r9d,%esi
   15942:	add    %esi,%edi
   15944:	movzbl 0x2(%rbx,%r11,1),%esi
   1594a:	movzbl 0x2(%rbx,%r10,1),%r9d
   15950:	sub    %r9d,%esi
   15953:	mov    %rsi,%r9
   15956:	sar    $0x1f,%r9d
   1595a:	xor    %r9d,%esi
   1595d:	sub    %r9d,%esi
   15960:	add    %edi,%esi
   15962:	cmp    %esi,%ecx
   15964:	jle    1596c <png_set_quantize+0x93c>
   15966:	mov    %rsi,%rcx
   15969:	mov    %rax,%rdx
   1596c:	add    $0x1,%eax
   1596f:	cmp    %eax,%r14d
   15972:	jg     15904 <png_set_quantize+0x8d4>
   15974:	mov    0x380(%r12),%rax
   1597c:	mov    -0xc0(%rbp),%rcx
   15983:	mov    %dl,(%rax,%rcx,1)
   15986:	mov    $0x1,%eax
   1598b:	jmpq   15852 <png_set_quantize+0x822>
   15990:	mov    0x408(%r12),%r9
   15998:	movzbl 0x0(%r13,%r9,1),%esi
   1599e:	mov    0x380(%r12),%rdi
   159a6:	movslq %eax,%rcx
   159a9:	movzbl (%rdi,%rcx,1),%edx
   159ad:	cmp    %dl,%sil
   159b0:	jne    159ba <png_set_quantize+0x98a>
   159b2:	movzbl (%r9,%rbx,1),%edx
   159b7:	mov    %dl,(%rdi,%rcx,1)
   159ba:	add    0x380(%r12),%rcx
   159c2:	movzbl (%rcx),%edx
   159c5:	cmp    %r15d,%edx
   159c8:	jne    159da <png_set_quantize+0x9aa>
   159ca:	mov    0x408(%r12),%rdx
   159d2:	movzbl 0x0(%r13,%rdx,1),%edx
   159d8:	mov    %dl,(%rcx)
   159da:	add    $0x1,%eax
   159dd:	cmp    %eax,%r14d
   159e0:	jg     15990 <png_set_quantize+0x960>
   159e2:	mov    -0x90(%rbp),%rax
   159e9:	mov    -0x80(%rbp),%rcx
   159ed:	mov    -0x88(%rbp),%rdx
   159f4:	mov    0x408(%r12),%rbx
   159fc:	movzbl 0x0(%r13,%rbx,1),%edi
   15a02:	mov    0x410(%r12),%rsi
   15a0a:	movzbl (%rdx,%rsi,1),%esi
   15a0e:	mov    %dil,(%rbx,%rsi,1)
   15a12:	mov    0x410(%r12),%rbx
   15a1a:	movzbl (%rdx,%rbx,1),%edi
   15a1e:	mov    0x408(%r12),%rsi
   15a26:	movzbl 0x0(%r13,%rsi,1),%esi
   15a2c:	mov    %dil,(%rbx,%rsi,1)
   15a30:	mov    0x408(%r12),%rsi
   15a38:	mov    %r15b,0x0(%r13,%rsi,1)
   15a3d:	mov    0x410(%r12),%rsi
   15a45:	mov    %cl,(%rdx,%rsi,1)
   15a48:	xor    %r13d,%r13d
   15a4b:	cmp    %r15d,%r11d
   15a4e:	jge    15867 <png_set_quantize+0x837>
   15a54:	mov    (%rax),%rax
   15a57:	test   %rax,%rax
   15a5a:	je     15867 <png_set_quantize+0x837>
   15a60:	movzbl 0x8(%rax),%esi
   15a64:	mov    0x408(%r12),%rbx
   15a6c:	movzbl (%rsi,%rbx,1),%ecx
   15a70:	cmp    %ecx,%r15d
   15a73:	jle    15a4b <png_set_quantize+0xa1b>
   15a75:	movzbl 0x9(%rax),%ecx
   15a79:	movzbl (%rcx,%rbx,1),%edx
   15a7d:	cmp    %edx,%r15d
   15a80:	jle    15a4b <png_set_quantize+0xa1b>
   15a82:	mov    %r15,%rdx
   15a85:	and    $0x1,%edx
   15a88:	test   %edx,%edx
   15a8a:	jle    15a95 <png_set_quantize+0xa65>
   15a8c:	mov    %rsi,%rdx
   15a8f:	mov    %rcx,%rsi
   15a92:	mov    %rdx,%rcx
   15a95:	test   %r10d,%r10d
   15a98:	lea    -0x1(%r15),%r15d
   15a9c:	movslq %r15d,%rdx
   15a9f:	lea    (%rdx,%rdx,2),%r9
   15aa3:	movzwl (%r8,%r9,1),%edi
   15aa8:	movslq %ecx,%r13
   15aab:	movzbl (%rbx,%r13,1),%ebx
   15ab0:	lea    (%rbx,%rbx,2),%rbx
   15ab4:	mov    %di,(%r8,%rbx,1)
   15ab9:	movzbl 0x2(%r8,%r9,1),%edi
   15abf:	mov    %dil,0x2(%r8,%rbx,1)
   15ac4:	jne    159f4 <png_set_quantize+0x9c4>
   15aca:	movslq %esi,%rbx
   15acd:	mov    %rdx,-0x88(%rbp)
   15ad4:	mov    %rcx,-0x80(%rbp)
   15ad8:	mov    %rax,-0x90(%rbp)
   15adf:	xor    %eax,%eax
   15ae1:	jmpq   159dd <png_set_quantize+0x9ad>
   15ae6:	nopw   %cs:0x0(%rax,%rax,1)

0000000000015af0 <png_set_gamma>:
   15af0:	push   %rbp
   15af1:	mov    %rsp,%rbp
   15af4:	sub    $0x20,%rsp
   15af8:	movdqu %xmm1,-0x10(%rbp)
   15afd:	mov    %r15,-0x20(%rbp)
   15b01:	mov    %r14,-0x18(%rbp)
   15b05:	mov    %rdi,%r14
   15b08:	callq  17860 <convert_gamma_value>
   15b0d:	mov    %rax,%r15
   15b10:	mov    %r14,%rdi
   15b13:	movdqu -0x10(%rbp),%xmm0
   15b18:	callq  17860 <convert_gamma_value>
   15b1d:	mov    %rax,%rdx
   15b20:	mov    %r15,%rsi
   15b23:	mov    %r14,%rdi
   15b26:	callq  52c0 <png_set_gamma_fixed@plt>
   15b2b:	mov    -0x18(%rbp),%r14
   15b2f:	mov    -0x20(%rbp),%r15
   15b33:	leaveq 
   15b34:	retq   
   15b35:	data16 nopw %cs:0x0(%rax,%rax,1)

0000000000015b40 <png_set_gamma_fixed>:
   15b40:	push   %rbp
   15b41:	mov    %rsp,%rbp
   15b44:	sub    $0x20,%rsp
   15b48:	mov    %rdi,-0x10(%rbp)
   15b4c:	mov    %rsi,-0x18(%rbp)
   15b50:	mov    %rdx,-0x8(%rbp)
   15b54:	xor    %esi,%esi
   15b56:	callq  17790 <png_rtran_ok>
   15b5b:	test   %eax,%eax
   15b5d:	jne    15b61 <png_set_gamma_fixed+0x21>
   15b5f:	leaveq 
   15b60:	retq   
   15b61:	mov    $0x1,%edx
   15b66:	mov    -0x10(%rbp),%rax
   15b6a:	mov    %rax,%rdi
   15b6d:	mov    %r15,-0x10(%rbp)
   15b71:	mov    %rax,%r15
   15b74:	mov    -0x18(%rbp),%rsi
   15b78:	callq  17800 <translate_gamma_flags>
   15b7d:	mov    %r15,%rdi
   15b80:	mov    %r14,-0x18(%rbp)
   15b84:	mov    %rax,%r14
   15b87:	xor    %edx,%edx
   15b89:	mov    -0x8(%rbp),%rsi
   15b8d:	callq  17800 <translate_gamma_flags>
   15b92:	test   %eax,%eax
   15b94:	jle    15bc7 <png_set_gamma_fixed+0x87>
   15b96:	test   %r14d,%r14d
   15b99:	jle    15bd6 <png_set_gamma_fixed+0x96>
   15b9b:	mov    %eax,0x498(%r15)
   15ba2:	movzwl 0x4e2(%r15),%eax
   15baa:	or     $0x1,%ax
   15bae:	mov    %ax,0x4e2(%r15)
   15bb6:	mov    %r14d,0x2a4(%r15)
   15bbd:	mov    -0x18(%rbp),%r14
   15bc1:	mov    -0x10(%rbp),%r15
   15bc5:	leaveq 
   15bc6:	retq   
   15bc7:	mov    %r15,%rdi
   15bca:	lea    0x18859(%rip),%rsi        # 2e42a <chunks_to_process.34+0x625>
   15bd1:	callq  5470 <png_error@plt>
   15bd6:	mov    %r15,%rdi
   15bd9:	lea    0x1886e(%rip),%rsi        # 2e44e <chunks_to_process.34+0x649>
   15be0:	callq  5470 <png_error@plt>
   15be5:	data16 nopw %cs:0x0(%rax,%rax,1)

0000000000015bf0 <png_set_crc_action>:
   15bf0:	push   %rbp
   15bf1:	mov    %rsp,%rbp
   15bf4:	sub    $0x10,%rsp
   15bf8:	test   %rdi,%rdi
   15bfb:	jne    15bff <png_set_crc_action+0xf>
   15bfd:	leaveq 
   15bfe:	retq   
   15bff:	cmp    $0x3,%esi
   15c02:	jle    15c10 <png_set_crc_action+0x20>
   15c04:	cmp    $0x4,%esi
   15c07:	je     15c32 <png_set_crc_action+0x42>
   15c09:	cmp    $0x5,%esi
   15c0c:	je     15c84 <png_set_crc_action+0x94>
   15c0e:	jmp    15c73 <png_set_crc_action+0x83>
   15c10:	cmp    $0x2,%esi
   15c13:	je     15c45 <png_set_crc_action+0x55>
   15c15:	cmp    $0x3,%esi
   15c18:	jne    15c73 <png_set_crc_action+0x83>
   15c1a:	mov    0x130(%rdi),%eax
   15c20:	and    $0xfffff3ff,%eax
   15c25:	add    $0x400,%eax
   15c2a:	mov    %eax,0x130(%rdi)
   15c30:	jmp    15c84 <png_set_crc_action+0x94>
   15c32:	mov    0x130(%rdi),%eax
   15c38:	or     $0xc00,%eax
   15c3d:	mov    %eax,0x130(%rdi)
   15c43:	jmp    15c84 <png_set_crc_action+0x94>
   15c45:	lea    0x18828(%rip),%rsi        # 2e474 <chunks_to_process.34+0x66f>
   15c4c:	mov    %rdi,%rax
   15c4f:	mov    %r14,-0x8(%rbp)
   15c53:	mov    %r15,-0x10(%rbp)
   15c57:	mov    %rdi,%r14
   15c5a:	mov    %rax,%rdi
   15c5d:	mov    %rdx,%r15
   15c60:	callq  5390 <png_warning@plt>
   15c65:	mov    %r15,%rdx
   15c68:	mov    %r14,%rdi
   15c6b:	mov    -0x10(%rbp),%r15
   15c6f:	mov    -0x8(%rbp),%r14
   15c73:	mov    0x130(%rdi),%eax
   15c79:	and    $0xfffff3ff,%eax
   15c7e:	mov    %eax,0x130(%rdi)
   15c84:	cmp    $0x3,%edx
   15c87:	jle    15c95 <png_set_crc_action+0xa5>
   15c89:	cmp    $0x4,%edx
   15c8c:	je     15cb2 <png_set_crc_action+0xc2>
   15c8e:	cmp    $0x5,%edx
   15c91:	jne    15c9f <png_set_crc_action+0xaf>
   15c93:	leaveq 
   15c94:	retq   
   15c95:	cmp    $0x1,%edx
   15c98:	je     15cc5 <png_set_crc_action+0xd5>
   15c9a:	cmp    $0x3,%edx
   15c9d:	je     15cdd <png_set_crc_action+0xed>
   15c9f:	mov    0x130(%rdi),%eax
   15ca5:	and    $0xfffffcff,%eax
   15caa:	mov    %eax,0x130(%rdi)
   15cb0:	leaveq 
   15cb1:	retq   
   15cb2:	mov    0x130(%rdi),%eax
   15cb8:	or     $0x300,%eax
   15cbd:	mov    %eax,0x130(%rdi)
   15cc3:	leaveq 
   15cc4:	retq   
   15cc5:	mov    0x130(%rdi),%eax
   15ccb:	and    $0xfffffcff,%eax
   15cd0:	add    $0x200,%eax
   15cd5:	mov    %eax,0x130(%rdi)
   15cdb:	leaveq 
   15cdc:	retq   
   15cdd:	mov    0x130(%rdi),%eax
   15ce3:	and    $0xfffffcff,%eax
   15ce8:	add    $0x100,%eax
   15ced:	mov    %eax,0x130(%rdi)
   15cf3:	leaveq 
   15cf4:	retq   
   15cf5:	data16 nopw %cs:0x0(%rax,%rax,1)

0000000000015d00 <png_set_read_user_transform_fn>:
   15d00:	push   %rbp
   15d01:	mov    %rsp,%rbp
   15d04:	mov    0x134(%rdi),%eax
   15d0a:	or     $0x100000,%eax
   15d0f:	mov    %eax,0x134(%rdi)
   15d15:	mov    %rsi,0x110(%rdi)
   15d1c:	leaveq 
   15d1d:	retq   
   15d1e:	xchg   %ax,%ax

0000000000015d20 <png_read_transform_info>:
   15d20:	push   %rbp
   15d21:	mov    %rsp,%rbp
   15d24:	mov    0x134(%rdi),%eax
   15d2a:	mov    %rax,%rcx
   15d2d:	and    $0x1000,%ecx
   15d33:	test   %ecx,%ecx
   15d35:	jne    15e01 <png_read_transform_info+0xe1>
   15d3b:	mov    0x134(%rdi),%eax
   15d41:	and    $0x80,%eax
   15d46:	test   %eax,%eax
   15d48:	je     15d66 <png_read_transform_info+0x46>
   15d4a:	mov    0x27c(%rdi),%rax
   15d51:	mov    %rax,0xca(%rsi)
   15d58:	movzwl 0x284(%rdi),%eax
   15d5f:	mov    %ax,0xd2(%rsi)
   15d66:	movslq 0x498(%rdi),%rax
   15d6d:	mov    %eax,0x34(%rsi)
   15d70:	movzbl 0x24(%rsi),%eax
   15d74:	cmp    $0x10,%al
   15d76:	je     15e35 <png_read_transform_info+0x115>
   15d7c:	mov    0x134(%rdi),%eax
   15d82:	and    $0x4000,%eax
   15d87:	test   %eax,%eax
   15d89:	je     15d94 <png_read_transform_info+0x74>
   15d8b:	movzbl 0x25(%rsi),%eax
   15d8f:	or     $0x2,%al
   15d91:	mov    %al,0x25(%rsi)
   15d94:	mov    0x134(%rdi),%eax
   15d9a:	and    $0x600000,%eax
   15d9f:	test   %eax,%eax
   15da1:	je     15dac <png_read_transform_info+0x8c>
   15da3:	movzbl 0x25(%rsi),%eax
   15da7:	and    $0xfd,%al
   15da9:	mov    %al,0x25(%rsi)
   15dac:	mov    0x134(%rdi),%eax
   15db2:	and    $0x40,%eax
   15db5:	test   %eax,%eax
   15db7:	jne    15e64 <png_read_transform_info+0x144>
   15dbd:	mov    0x134(%rdi),%eax
   15dc3:	and    $0x200,%eax
   15dc8:	test   %eax,%eax
   15dca:	jne    15e99 <png_read_transform_info+0x179>
   15dd0:	mov    0x134(%rdi),%eax
   15dd6:	and    $0x4,%eax
   15dd9:	test   %eax,%eax
   15ddb:	jne    15eba <png_read_transform_info+0x19a>
   15de1:	movzbl 0x25(%rsi),%eax
   15de5:	cmp    $0x3,%al
   15de7:	je     15ecf <png_read_transform_info+0x1af>
   15ded:	and    $0x2,%eax
   15df0:	test   %eax,%eax
   15df2:	jg     15f53 <png_read_transform_info+0x233>
   15df8:	movb   $0x1,0x29(%rsi)
   15dfc:	jmpq   15ed3 <png_read_transform_info+0x1b3>
   15e01:	movzbl 0x25(%rsi),%ecx
   15e05:	cmp    $0x3,%cl
   15e08:	je     15f5c <png_read_transform_info+0x23c>
   15e0e:	movzwl 0x260(%rdi),%edx
   15e15:	test   %dx,%dx
   15e18:	jne    15f76 <png_read_transform_info+0x256>
   15e1e:	movzbl 0x24(%rsi),%eax
   15e22:	cmp    $0x7,%al
   15e24:	ja     15e2a <png_read_transform_info+0x10a>
   15e26:	movb   $0x8,0x24(%rsi)
   15e2a:	movw   $0x0,0x22(%rsi)
   15e30:	jmpq   15d3b <png_read_transform_info+0x1b>
   15e35:	mov    0x134(%rdi),%eax
   15e3b:	and    $0x4000000,%eax
   15e40:	test   %eax,%eax
   15e42:	je     15e48 <png_read_transform_info+0x128>
   15e44:	movb   $0x8,0x24(%rsi)
   15e48:	mov    0x134(%rdi),%eax
   15e4e:	and    $0x400,%eax
   15e53:	test   %eax,%eax
   15e55:	je     15d7c <png_read_transform_info+0x5c>
   15e5b:	movb   $0x8,0x24(%rsi)
   15e5f:	jmpq   15d7c <png_read_transform_info+0x5c>
   15e64:	movzbl 0x25(%rsi),%eax
   15e68:	cmp    $0x2,%al
   15e6a:	je     15e74 <png_read_transform_info+0x154>
   15e6c:	cmp    $0x6,%al
   15e6e:	jne    15dbd <png_read_transform_info+0x9d>
   15e74:	mov    0x378(%rdi),%rax
   15e7b:	test   %rax,%rax
   15e7e:	je     15dbd <png_read_transform_info+0x9d>
   15e84:	movzbl 0x24(%rsi),%eax
   15e88:	cmp    $0x8,%al
   15e8a:	jne    15dbd <png_read_transform_info+0x9d>
   15e90:	movb   $0x3,0x25(%rsi)
   15e94:	jmpq   15dbd <png_read_transform_info+0x9d>
   15e99:	movzbl 0x24(%rsi),%eax
   15e9d:	cmp    $0x8,%al
   15e9f:	jne    15dd0 <png_read_transform_info+0xb0>
   15ea5:	movzbl 0x25(%rsi),%eax
   15ea9:	cmp    $0x3,%al
   15eab:	je     15dd0 <png_read_transform_info+0xb0>
   15eb1:	movb   $0x10,0x24(%rsi)
   15eb5:	jmpq   15dd0 <png_read_transform_info+0xb0>
   15eba:	movzbl 0x24(%rsi),%eax
   15ebe:	cmp    $0x7,%al
   15ec0:	ja     15de1 <png_read_transform_info+0xc1>
   15ec6:	movb   $0x8,0x24(%rsi)
   15eca:	jmpq   15de1 <png_read_transform_info+0xc1>
   15ecf:	movb   $0x1,0x29(%rsi)
   15ed3:	mov    0x134(%rdi),%eax
   15ed9:	and    $0x40000,%eax
   15ede:	test   %eax,%eax
   15ee0:	je     15ef1 <png_read_transform_info+0x1d1>
   15ee2:	movzbl 0x25(%rsi),%eax
   15ee6:	and    $0xfb,%al
   15ee8:	mov    %al,0x25(%rsi)
   15eeb:	movw   $0x0,0x22(%rsi)
   15ef1:	movzbl 0x25(%rsi),%eax
   15ef5:	and    $0x4,%eax
   15ef8:	test   %eax,%eax
   15efa:	jle    15f06 <png_read_transform_info+0x1e6>
   15efc:	movzbl 0x29(%rsi),%eax
   15f00:	add    $0x1,%eax
   15f03:	mov    %al,0x29(%rsi)
   15f06:	mov    0x134(%rdi),%eax
   15f0c:	and    $0x8000,%eax
   15f11:	test   %eax,%eax
   15f13:	jne    15f8e <png_read_transform_info+0x26e>
   15f15:	mov    0x134(%rdi),%eax
   15f1b:	and    $0x100000,%eax
   15f20:	test   %eax,%eax
   15f22:	jne    15fc7 <png_read_transform_info+0x2a7>
   15f28:	movzbl 0x24(%rsi),%ecx
   15f2c:	movzbl 0x29(%rsi),%eax
   15f30:	imul   %cl
   15f32:	mov    %al,0x2a(%rsi)
   15f35:	cmp    $0x7,%al
   15f37:	ja     15fec <png_read_transform_info+0x2cc>
   15f3d:	movzbl %al,%eax
   15f40:	mov    (%rsi),%ecx
   15f42:	imul   %rcx,%rax
   15f46:	add    $0x7,%rax
   15f4a:	shr    $0x3,%rax
   15f4e:	jmpq   15ff9 <png_read_transform_info+0x2d9>
   15f53:	movb   $0x3,0x29(%rsi)
   15f57:	jmpq   15ed3 <png_read_transform_info+0x1b3>
   15f5c:	movzwl 0x260(%rdi),%eax
   15f63:	test   %ax,%ax
   15f66:	jne    16006 <png_read_transform_info+0x2e6>
   15f6c:	mov    $0x2,%eax
   15f71:	jmpq   1600b <png_read_transform_info+0x2eb>
   15f76:	and    $0x2000000,%eax
   15f7b:	test   %eax,%eax
   15f7d:	je     15e1e <png_read_transform_info+0xfe>
   15f83:	or     $0x4,%cl
   15f86:	mov    %cl,0x25(%rsi)
   15f89:	jmpq   15e1e <png_read_transform_info+0xfe>
   15f8e:	movzbl 0x25(%rsi),%ecx
   15f92:	cmp    $0x2,%cl
   15f95:	je     15f9f <png_read_transform_info+0x27f>
   15f97:	test   %cl,%cl
   15f99:	jne    15f15 <png_read_transform_info+0x1f5>
   15f9f:	movzbl 0x29(%rsi),%eax
   15fa3:	add    $0x1,%eax
   15fa6:	mov    %al,0x29(%rsi)
   15fa9:	mov    0x134(%rdi),%eax
   15faf:	and    $0x1000000,%eax
   15fb4:	test   %eax,%eax
   15fb6:	je     15f15 <png_read_transform_info+0x1f5>
   15fbc:	or     $0x4,%cl
   15fbf:	mov    %cl,0x25(%rsi)
   15fc2:	jmpq   15f15 <png_read_transform_info+0x1f5>
   15fc7:	movzbl 0x128(%rdi),%eax
   15fce:	test   %al,%al
   15fd0:	je     15fd5 <png_read_transform_info+0x2b5>
   15fd2:	mov    %al,0x24(%rsi)
   15fd5:	movzbl 0x129(%rdi),%eax
   15fdc:	test   %al,%al
   15fde:	je     15f28 <png_read_transform_info+0x208>
   15fe4:	mov    %al,0x29(%rsi)
   15fe7:	jmpq   15f28 <png_read_transform_info+0x208>
   15fec:	movzbl %al,%eax
   15fef:	shr    $0x3,%rax
   15ff3:	mov    (%rsi),%ecx
   15ff5:	imul   %rcx,%rax
   15ff9:	mov    %rax,0x10(%rsi)
   15ffd:	mov    %rax,0x240(%rdi)
   16004:	leaveq 
   16005:	retq   
   16006:	mov    $0x6,%eax
   1600b:	movb   $0x8,0x24(%rsi)
   1600f:	movw   $0x0,0x22(%rsi)
   16015:	mov    %al,0x25(%rsi)
   16018:	mov    0x250(%rdi),%rax
   1601f:	test   %rax,%rax
   16022:	jne    15d3b <png_read_transform_info+0x1b>
   16028:	lea    0x1846e(%rip),%rsi        # 2e49d <chunks_to_process.34+0x698>
   1602f:	callq  5470 <png_error@plt>
   16034:	data16 nopw %cs:0x0(%rax,%rax,1)
   1603f:	nop

0000000000016040 <png_do_read_transformations>:
   16040:	push   %rbp
   16041:	mov    %rsp,%rbp
   16044:	sub    $0x40,%rsp
   16048:	mov    %r14,-0x30(%rbp)
   1604c:	mov    %r15,-0x38(%rbp)
   16050:	mov    0x228(%rdi),%r8
   16057:	test   %r8,%r8
   1605a:	je     163c2 <png_do_read_transformations+0x382>
   16060:	mov    0x130(%rdi),%eax
   16066:	mov    %rax,%rcx
   16069:	and    $0x4000,%ecx
   1606f:	test   %ecx,%ecx
   16071:	jne    163ce <png_do_read_transformations+0x38e>
   16077:	xor    %edx,%edx
   16079:	mov    0x134(%rdi),%eax
   1607f:	mov    %rax,%rcx
   16082:	and    $0x1000,%ecx
   16088:	test   %ecx,%ecx
   1608a:	jne    163e5 <png_do_read_transformations+0x3a5>
   16090:	mov    %r14,%rcx
   16093:	mov    %rsi,%r14
   16096:	mov    %r15,%r8
   16099:	mov    %r13,%r15
   1609c:	mov    %r12,%r13
   1609f:	mov    %rbx,%r12
   160a2:	mov    %rdi,%rbx
   160a5:	mov    0x134(%rbx),%eax
   160ab:	mov    %rax,%rsi
   160ae:	and    $0x40000,%esi
   160b4:	test   %esi,%esi
   160b6:	jne    16441 <png_do_read_transformations+0x401>
   160bc:	mov    0x134(%rbx),%eax
   160c2:	and    $0x600000,%eax
   160c7:	test   %eax,%eax
   160c9:	jne    16493 <png_do_read_transformations+0x453>
   160cf:	mov    0x134(%rbx),%eax
   160d5:	and    $0x4000,%eax
   160da:	test   %eax,%eax
   160dc:	jne    164cf <png_do_read_transformations+0x48f>
   160e2:	mov    0x134(%rbx),%eax
   160e8:	and    $0x80,%eax
   160ed:	test   %eax,%eax
   160ef:	je     16120 <png_do_read_transformations+0xe0>
   160f1:	mov    0x228(%rbx),%rsi
   160f8:	add    $0x1,%rsi
   160fc:	mov    %r14,%rdi
   160ff:	mov    %rbx,%rax
   16102:	mov    %r15,-0x10(%rbp)
   16106:	mov    %rdx,%r15
   16109:	mov    %rax,%rdx
   1610c:	callq  18b40 <png_do_compose>
   16111:	mov    %r15,%rdx
   16114:	mov    -0x38(%rbp),%r8
   16118:	mov    -0x30(%rbp),%rcx
   1611c:	mov    -0x10(%rbp),%r15
   16120:	mov    0x134(%rbx),%eax
   16126:	mov    %rax,%rsi
   16129:	and    $0x2000,%esi
   1612f:	test   %esi,%esi
   16131:	jne    16510 <png_do_read_transformations+0x4d0>
   16137:	mov    0x134(%rbx),%eax
   1613d:	mov    %rax,%rsi
   16140:	and    $0x40000,%esi
   16146:	test   %esi,%esi
   16148:	jne    16571 <png_do_read_transformations+0x531>
   1614e:	mov    0x134(%rbx),%eax
   16154:	and    $0x800000,%eax
   16159:	test   %eax,%eax
   1615b:	jne    165af <png_do_read_transformations+0x56f>
   16161:	mov    0x134(%rbx),%eax
   16167:	and    $0x4000000,%eax
   1616c:	test   %eax,%eax
   1616e:	je     1618b <png_do_read_transformations+0x14b>
   16170:	mov    0x228(%rbx),%rsi
   16177:	add    $0x1,%rsi
   1617b:	mov    %r14,%rdi
   1617e:	callq  17ed0 <png_do_scale_16_to_8>
   16183:	mov    -0x38(%rbp),%r8
   16187:	mov    -0x30(%rbp),%rcx
   1618b:	mov    0x134(%rbx),%eax
   16191:	and    $0x400,%eax
   16196:	test   %eax,%eax
   16198:	je     161b5 <png_do_read_transformations+0x175>
   1619a:	mov    0x228(%rbx),%rsi
   161a1:	add    $0x1,%rsi
   161a5:	mov    %r14,%rdi
   161a8:	callq  17f40 <png_do_chop>
   161ad:	mov    -0x38(%rbp),%r8
   161b1:	mov    -0x30(%rbp),%rcx
   161b5:	mov    0x134(%rbx),%eax
   161bb:	and    $0x40,%eax
   161be:	test   %eax,%eax
   161c0:	jne    165e2 <png_do_read_transformations+0x5a2>
   161c6:	mov    0x134(%rbx),%eax
   161cc:	and    $0x200,%eax
   161d1:	test   %eax,%eax
   161d3:	je     161f0 <png_do_read_transformations+0x1b0>
   161d5:	mov    0x228(%rbx),%rsi
   161dc:	add    $0x1,%rsi
   161e0:	mov    %r14,%rdi
   161e3:	callq  1ade0 <png_do_expand_16>
   161e8:	mov    -0x38(%rbp),%r8
   161ec:	mov    -0x30(%rbp),%rcx
   161f0:	mov    0x134(%rbx),%eax
   161f6:	and    $0x4000,%eax
   161fb:	test   %eax,%eax
   161fd:	jne    1661d <png_do_read_transformations+0x5dd>
   16203:	mov    0x134(%rbx),%eax
   16209:	and    $0x20,%eax
   1620c:	test   %eax,%eax
   1620e:	je     1622b <png_do_read_transformations+0x1eb>
   16210:	mov    0x228(%rbx),%rsi
   16217:	add    $0x1,%rsi
   1621b:	mov    %r14,%rdi
   1621e:	callq  23a60 <png_do_invert>
   16223:	mov    -0x38(%rbp),%r8
   16227:	mov    -0x30(%rbp),%rcx
   1622b:	mov    0x134(%rbx),%eax
   16231:	and    $0x80000,%eax
   16236:	test   %eax,%eax
   16238:	je     16255 <png_do_read_transformations+0x215>
   1623a:	mov    0x228(%rbx),%rsi
   16241:	add    $0x1,%rsi
   16245:	mov    %r14,%rdi
   16248:	callq  180a0 <png_do_read_invert_alpha>
   1624d:	mov    -0x38(%rbp),%r8
   16251:	mov    -0x30(%rbp),%rcx
   16255:	mov    0x134(%rbx),%eax
   1625b:	and    $0x8,%eax
   1625e:	test   %eax,%eax
   16260:	je     16284 <png_do_read_transformations+0x244>
   16262:	mov    0x228(%rbx),%rsi
   16269:	add    $0x1,%rsi
   1626d:	lea    0x2dd(%rbx),%rdx
   16274:	mov    %r14,%rdi
   16277:	callq  17cf0 <png_do_unshift>
   1627c:	mov    -0x38(%rbp),%r8
   16280:	mov    -0x30(%rbp),%rcx
   16284:	mov    0x134(%rbx),%eax
   1628a:	and    $0x4,%eax
   1628d:	test   %eax,%eax
   1628f:	je     162ac <png_do_read_transformations+0x26c>
   16291:	mov    0x228(%rbx),%rsi
   16298:	add    $0x1,%rsi
   1629c:	mov    %r14,%rdi
   1629f:	callq  17bb0 <png_do_unpack>
   162a4:	mov    -0x38(%rbp),%r8
   162a8:	mov    -0x30(%rbp),%rcx
   162ac:	movzbl 0x10(%r14),%eax
   162b1:	cmp    $0x3,%al
   162b3:	je     16650 <png_do_read_transformations+0x610>
   162b9:	mov    0x134(%rbx),%eax
   162bf:	and    $0x1,%eax
   162c2:	test   %eax,%eax
   162c4:	je     162e1 <png_do_read_transformations+0x2a1>
   162c6:	mov    0x228(%rbx),%rsi
   162cd:	add    $0x1,%rsi
   162d1:	mov    %r14,%rdi
   162d4:	callq  23af0 <png_do_bgr>
   162d9:	mov    -0x38(%rbp),%r8
   162dd:	mov    -0x30(%rbp),%rcx
   162e1:	mov    0x134(%rbx),%eax
   162e7:	and    $0x10000,%eax
   162ec:	test   %eax,%eax
   162ee:	je     1630b <png_do_read_transformations+0x2cb>
   162f0:	mov    0x228(%rbx),%rsi
   162f7:	add    $0x1,%rsi
   162fb:	mov    %r14,%rdi
   162fe:	callq  23a00 <png_do_packswap>
   16303:	mov    -0x38(%rbp),%r8
   16307:	mov    -0x30(%rbp),%rcx
   1630b:	mov    0x134(%rbx),%eax
   16311:	and    $0x8000,%eax
   16316:	test   %eax,%eax
   16318:	je     16342 <png_do_read_transformations+0x302>
   1631a:	mov    0x228(%rbx),%rsi
   16321:	add    $0x1,%rsi
   16325:	movzwl 0x272(%rbx),%edx
   1632c:	mov    0x130(%rbx),%ecx
   16332:	mov    %r14,%rdi
   16335:	callq  18160 <png_do_read_filler>
   1633a:	mov    -0x38(%rbp),%r8
   1633e:	mov    -0x30(%rbp),%rcx
   16342:	mov    0x134(%rbx),%eax
   16348:	and    $0x20000,%eax
   1634d:	test   %eax,%eax
   1634f:	je     1636c <png_do_read_transformations+0x32c>
   16351:	mov    0x228(%rbx),%rsi
   16358:	add    $0x1,%rsi
   1635c:	mov    %r14,%rdi
   1635f:	callq  17f90 <png_do_read_swap_alpha>
   16364:	mov    -0x38(%rbp),%r8
   16368:	mov    -0x30(%rbp),%rcx
   1636c:	mov    0x134(%rbx),%eax
   16372:	and    $0x10,%eax
   16375:	test   %eax,%eax
   16377:	je     1639e <png_do_read_transformations+0x35e>
   16379:	mov    0x228(%rbx),%rsi
   16380:	add    $0x1,%rsi
   16384:	mov    %r14,%rdi
   16387:	mov    %r14,-0x8(%rbp)
   1638b:	mov    %rcx,%r14
   1638e:	callq  239c0 <png_do_swap>
   16393:	mov    %r14,%rcx
   16396:	mov    -0x8(%rbp),%r14
   1639a:	mov    -0x38(%rbp),%r8
   1639e:	mov    0x134(%rbx),%eax
   163a4:	and    $0x100000,%eax
   163a9:	test   %eax,%eax
   163ab:	jne    16677 <png_do_read_transformations+0x637>
   163b1:	mov    %r12,%rbx
   163b4:	mov    %r13,%r12
   163b7:	mov    %r15,%r13
   163ba:	mov    %r8,%r15
   163bd:	mov    %rcx,%r14
   163c0:	leaveq 
   163c1:	retq   
   163c2:	lea    0x180f5(%rip),%rsi        # 2e4be <chunks_to_process.34+0x6b9>
   163c9:	callq  5470 <png_error@plt>
   163ce:	and    $0x40,%eax
   163d1:	test   %eax,%eax
   163d3:	jne    16077 <png_do_read_transformations+0x37>
   163d9:	lea    0x180ee(%rip),%rsi        # 2e4ce <chunks_to_process.34+0x6c9>
   163e0:	callq  5470 <png_error@plt>
   163e5:	movzbl 0x10(%rsi),%ecx
   163e9:	cmp    $0x3,%cl
   163ec:	je     166eb <png_do_read_transformations+0x6ab>
   163f2:	movzwl 0x260(%rdi),%ecx
   163f9:	test   %cx,%cx
   163fc:	jne    1673d <png_do_read_transformations+0x6fd>
   16402:	add    $0x1,%r8
   16406:	mov    %rsi,%rax
   16409:	mov    %rdx,%rcx
   1640c:	mov    %r13,-0x28(%rbp)
   16410:	mov    %r12,%r13
   16413:	mov    %rbx,%r12
   16416:	mov    %rdi,%rbx
   16419:	mov    %rax,%rdi
   1641c:	mov    %rsi,%r14
   1641f:	mov    %r8,%rsi
   16422:	mov    %rdx,%r15
   16425:	mov    %rcx,%rdx
   16428:	callq  1a880 <png_do_expand>
   1642d:	mov    %r15,%rdx
   16430:	mov    -0x38(%rbp),%r8
   16434:	mov    -0x30(%rbp),%rcx
   16438:	mov    -0x28(%rbp),%r15
   1643c:	jmpq   160a5 <png_do_read_transformations+0x65>
   16441:	and    $0x80,%eax
   16446:	test   %eax,%eax
   16448:	jne    160bc <png_do_read_transformations+0x7c>
   1644e:	movzbl 0x10(%r14),%eax
   16453:	cmp    $0x6,%al
   16455:	je     1645f <png_do_read_transformations+0x41f>
   16457:	cmp    $0x4,%al
   16459:	jne    160bc <png_do_read_transformations+0x7c>
   1645f:	mov    0x228(%rbx),%rsi
   16466:	add    $0x1,%rsi
   1646a:	mov    %r14,%rdi
   1646d:	mov    %rdx,%rax
   16470:	mov    %r15,-0x20(%rbp)
   16474:	mov    %rdx,%r15
   16477:	mov    %rax,%rdx
   1647a:	callq  23850 <png_do_strip_channel>
   1647f:	mov    %r15,%rdx
   16482:	mov    -0x38(%rbp),%r8
   16486:	mov    -0x30(%rbp),%rcx
   1648a:	mov    -0x20(%rbp),%r15
   1648e:	jmpq   160bc <png_do_read_transformations+0x7c>
   16493:	mov    0x228(%rbx),%rax
   1649a:	add    $0x1,%rax
   1649e:	mov    %rbx,%rdi
   164a1:	mov    %r14,%rsi
   164a4:	mov    %r15,-0x18(%rbp)
   164a8:	mov    %rdx,%r15
   164ab:	mov    %rax,%rdx
   164ae:	callq  18630 <png_do_rgb_to_gray>
   164b3:	test   %eax,%eax
   164b5:	jne    1678d <png_do_read_transformations+0x74d>
   164bb:	mov    %r15,%rdx
   164be:	mov    -0x38(%rbp),%r8
   164c2:	mov    -0x30(%rbp),%rcx
   164c6:	mov    -0x18(%rbp),%r15
   164ca:	jmpq   160cf <png_do_read_transformations+0x8f>
   164cf:	mov    0x12c(%rbx),%eax
   164d5:	and    $0x800,%eax
   164da:	test   %eax,%eax
   164dc:	jne    160e2 <png_do_read_transformations+0xa2>
   164e2:	mov    0x228(%rbx),%rsi
   164e9:	add    $0x1,%rsi
   164ed:	mov    %r14,%rdi
   164f0:	mov    %r15,-0x18(%rbp)
   164f4:	mov    %rdx,%r15
   164f7:	callq  18480 <png_do_gray_to_rgb>
   164fc:	mov    %r15,%rdx
   164ff:	mov    -0x38(%rbp),%r8
   16503:	mov    -0x30(%rbp),%rcx
   16507:	mov    -0x18(%rbp),%r15
   1650b:	jmpq   160e2 <png_do_read_transformations+0xa2>
   16510:	mov    %rax,%rsi
   16513:	and    $0x600000,%esi
   16519:	test   %esi,%esi
   1651b:	jne    16137 <png_do_read_transformations+0xf7>
   16521:	and    $0x80,%eax
   16526:	test   %eax,%eax
   16528:	jne    167b2 <png_do_read_transformations+0x772>
   1652e:	movzbl 0x267(%rbx),%eax
   16535:	cmp    $0x3,%al
   16537:	je     16137 <png_do_read_transformations+0xf7>
   1653d:	mov    0x228(%rbx),%rsi
   16544:	add    $0x1,%rsi
   16548:	mov    %r14,%rdi
   1654b:	mov    %rbx,%rax
   1654e:	mov    %r15,-0x10(%rbp)
   16552:	mov    %rdx,%r15
   16555:	mov    %rax,%rdx
   16558:	callq  1a0c0 <png_do_gamma>
   1655d:	mov    %r15,%rdx
   16560:	mov    -0x38(%rbp),%r8
   16564:	mov    -0x30(%rbp),%rcx
   16568:	mov    -0x10(%rbp),%r15
   1656c:	jmpq   16137 <png_do_read_transformations+0xf7>
   16571:	and    $0x80,%eax
   16576:	test   %eax,%eax
   16578:	je     1614e <png_do_read_transformations+0x10e>
   1657e:	movzbl 0x10(%r14),%eax
   16583:	cmp    $0x6,%al
   16585:	je     1658f <png_do_read_transformations+0x54f>
   16587:	cmp    $0x4,%al
   16589:	jne    1614e <png_do_read_transformations+0x10e>
   1658f:	mov    0x228(%rbx),%rsi
   16596:	add    $0x1,%rsi
   1659a:	mov    %r14,%rdi
   1659d:	callq  23850 <png_do_strip_channel>
   165a2:	mov    -0x38(%rbp),%r8
   165a6:	mov    -0x30(%rbp),%rcx
   165aa:	jmpq   1614e <png_do_read_transformations+0x10e>
   165af:	movzbl 0x10(%r14),%eax
   165b4:	and    $0x4,%eax
   165b7:	test   %eax,%eax
   165b9:	jle    16161 <png_do_read_transformations+0x121>
   165bf:	mov    0x228(%rbx),%rsi
   165c6:	add    $0x1,%rsi
   165ca:	mov    %r14,%rdi
   165cd:	mov    %rbx,%rdx
   165d0:	callq  1a480 <png_do_encode_alpha>
   165d5:	mov    -0x38(%rbp),%r8
   165d9:	mov    -0x30(%rbp),%rcx
   165dd:	jmpq   16161 <png_do_read_transformations+0x121>
   165e2:	mov    0x228(%rbx),%rsi
   165e9:	add    $0x1,%rsi
   165ed:	mov    0x378(%rbx),%rdx
   165f4:	mov    0x380(%rbx),%rcx
   165fb:	mov    %r14,%rdi
   165fe:	callq  1ae40 <png_do_quantize>
   16603:	mov    0x8(%r14),%rax
   16607:	test   %rax,%rax
   1660a:	je     167d9 <png_do_read_transformations+0x799>
   16610:	mov    -0x38(%rbp),%r8
   16614:	mov    -0x30(%rbp),%rcx
   16618:	jmpq   161c6 <png_do_read_transformations+0x186>
   1661d:	mov    0x12c(%rbx),%eax
   16623:	and    $0x800,%eax
   16628:	test   %eax,%eax
   1662a:	je     16203 <png_do_read_transformations+0x1c3>
   16630:	mov    0x228(%rbx),%rsi
   16637:	add    $0x1,%rsi
   1663b:	mov    %r14,%rdi
   1663e:	callq  18480 <png_do_gray_to_rgb>
   16643:	mov    -0x38(%rbp),%r8
   16647:	mov    -0x30(%rbp),%rcx
   1664b:	jmpq   16203 <png_do_read_transformations+0x1c3>
   16650:	movslq 0x25c(%rbx),%rax
   16657:	test   %eax,%eax
   16659:	js     162b9 <png_do_read_transformations+0x279>
   1665f:	mov    %rbx,%rdi
   16662:	mov    %r14,%rsi
   16665:	callq  23bc0 <png_do_check_palette_indexes>
   1666a:	mov    -0x38(%rbp),%r8
   1666e:	mov    -0x30(%rbp),%rcx
   16672:	jmpq   162b9 <png_do_read_transformations+0x279>
   16677:	mov    0x110(%rbx),%rax
   1667e:	test   %rax,%rax
   16681:	je     1669e <png_do_read_transformations+0x65e>
   16683:	mov    0x228(%rbx),%rdx
   1668a:	add    $0x1,%rdx
   1668e:	mov    %rbx,%rdi
   16691:	mov    %r14,%rsi
   16694:	callq  *%rax
   16696:	mov    -0x38(%rbp),%r8
   1669a:	mov    -0x30(%rbp),%rcx
   1669e:	movzbl 0x128(%rbx),%eax
   166a5:	test   %al,%al
   166a7:	je     166ad <png_do_read_transformations+0x66d>
   166a9:	mov    %al,0x11(%r14)
   166ad:	movzbl 0x129(%rbx),%eax
   166b4:	test   %al,%al
   166b6:	je     166bc <png_do_read_transformations+0x67c>
   166b8:	mov    %al,0x12(%r14)
   166bc:	movzbl 0x12(%r14),%edx
   166c1:	movzbl 0x11(%r14),%eax
   166c6:	imul   %dl
   166c8:	mov    %al,0x13(%r14)
   166cc:	cmp    $0x7,%al
   166ce:	ja     167e8 <png_do_read_transformations+0x7a8>
   166d4:	movzbl %al,%eax
   166d7:	mov    (%r14),%edx
   166da:	imul   %rdx,%rax
   166de:	add    $0x7,%rax
   166e2:	shr    $0x3,%rax
   166e6:	jmpq   167f6 <png_do_read_transformations+0x7b6>
   166eb:	lea    0x1(%r8),%rax
   166ef:	mov    0x250(%rdi),%r9
   166f6:	mov    0x2e8(%rdi),%rcx
   166fd:	movzwl 0x260(%rdi),%r8d
   16705:	mov    %rsi,%r10
   16708:	mov    %r13,-0x20(%rbp)
   1670c:	mov    %r12,%r13
   1670f:	mov    %rbx,%r12
   16712:	mov    %rdi,%rbx
   16715:	mov    %r10,%rdi
   16718:	mov    %rsi,%r14
   1671b:	mov    %rax,%rsi
   1671e:	mov    %rdx,%r15
   16721:	mov    %r9,%rdx
   16724:	callq  1a560 <png_do_expand_palette>
   16729:	mov    %r15,%rdx
   1672c:	mov    -0x38(%rbp),%r8
   16730:	mov    -0x30(%rbp),%rcx
   16734:	mov    -0x20(%rbp),%r15
   16738:	jmpq   160a5 <png_do_read_transformations+0x65>
   1673d:	and    $0x2000000,%eax
   16742:	test   %eax,%eax
   16744:	je     16402 <png_do_read_transformations+0x3c2>
   1674a:	lea    0x1(%r8),%rcx
   1674e:	lea    0x2f0(%rdi),%r8
   16755:	mov    %rsi,%rax
   16758:	mov    %r13,-0x28(%rbp)
   1675c:	mov    %r12,%r13
   1675f:	mov    %rbx,%r12
   16762:	mov    %rdi,%rbx
   16765:	mov    %rax,%rdi
   16768:	mov    %rsi,%r14
   1676b:	mov    %rcx,%rsi
   1676e:	mov    %rdx,%r15
   16771:	mov    %r8,%rdx
   16774:	callq  1a880 <png_do_expand>
   16779:	mov    %r15,%rdx
   1677c:	mov    -0x38(%rbp),%r8
   16780:	mov    -0x30(%rbp),%rcx
   16784:	mov    -0x28(%rbp),%r15
   16788:	jmpq   160a5 <png_do_read_transformations+0x65>
   1678d:	movb   $0x1,0x3d0(%rbx)
   16794:	lea    0x17d45(%rip),%rsi        # 2e4e0 <chunks_to_process.34+0x6db>
   1679b:	mov    0x134(%rbx),%eax
   167a1:	and    $0x600000,%eax
   167a6:	cmp    $0x400000,%eax
   167ab:	je     1680b <png_do_read_transformations+0x7cb>
   167ad:	mov    %r15,%rdx
   167b0:	jmp    1682a <png_do_read_transformations+0x7ea>
   167b2:	movzwl 0x260(%rbx),%eax
   167b9:	test   %ax,%ax
   167bc:	jne    16137 <png_do_read_transformations+0xf7>
   167c2:	movzbl 0x267(%rbx),%eax
   167c9:	and    $0x4,%eax
   167cc:	test   %eax,%eax
   167ce:	jg     16137 <png_do_read_transformations+0xf7>
   167d4:	jmpq   1652e <png_do_read_transformations+0x4ee>
   167d9:	mov    %rbx,%rdi
   167dc:	lea    0x17d24(%rip),%rsi        # 2e507 <chunks_to_process.34+0x702>
   167e3:	callq  5470 <png_error@plt>
   167e8:	movzbl %al,%eax
   167eb:	shr    $0x3,%rax
   167ef:	mov    (%r14),%edx
   167f2:	imul   %rdx,%rax
   167f6:	mov    %rax,0x8(%r14)
   167fa:	mov    %r12,%rbx
   167fd:	mov    %r13,%r12
   16800:	mov    %r15,%r13
   16803:	mov    %r8,%r15
   16806:	mov    %rcx,%r14
   16809:	leaveq 
   1680a:	retq   
   1680b:	mov    %rbx,%rdi
   1680e:	mov    %rsi,%rax
   16811:	mov    %r13,-0x8(%rbp)
   16815:	mov    %rsi,%r13
   16818:	mov    %rax,%rsi
   1681b:	callq  5390 <png_warning@plt>
   16820:	mov    %r15,%rdx
   16823:	mov    %r13,%rsi
   16826:	mov    -0x8(%rbp),%r13
   1682a:	mov    0x134(%rbx),%eax
   16830:	and    $0x600000,%eax
   16835:	cmp    $0x200000,%eax
   1683a:	je     1684d <png_do_read_transformations+0x80d>
   1683c:	mov    -0x38(%rbp),%r8
   16840:	mov    -0x30(%rbp),%rcx
   16844:	mov    -0x18(%rbp),%r15
   16848:	jmpq   160cf <png_do_read_transformations+0x8f>
   1684d:	mov    %rbx,%rdi
   16850:	callq  5470 <png_error@plt>
   16855:	data16 nopw %cs:0x0(%rax,%rax,1)

0000000000016860 <png_init_read_transformations>:
   16860:	push   %rbp
   16861:	mov    %rsp,%rbp
   16864:	sub    $0x60,%rsp
   16868:	mov    %r15,-0x50(%rbp)
   1686c:	xor    %eax,%eax
   1686e:	movslq 0x498(%rdi),%rcx
   16875:	test   %ecx,%ecx
   16877:	jne    168a9 <png_init_read_transformations+0x49>
   16879:	movslq 0x2a4(%rdi),%rcx
   16880:	test   %ecx,%ecx
   16882:	jne    168de <png_init_read_transformations+0x7e>
   16884:	mov    %r14,%r15
   16887:	mov    %r13,%r14
   1688a:	mov    %r12,%r13
   1688d:	mov    %rbx,%r12
   16890:	mov    %rdi,%rbx
   16893:	movl   $0x186a0,0x498(%rbx)
   1689d:	movl   $0x186a0,0x2a4(%rbx)
   168a7:	jmp    1691f <png_init_read_transformations+0xbf>
   168a9:	movslq 0x2a4(%rdi),%rsi
   168b0:	test   %esi,%esi
   168b2:	jne    16908 <png_init_read_transformations+0xa8>
   168b4:	mov    %r14,-0x48(%rbp)
   168b8:	mov    %r13,%r14
   168bb:	mov    %r12,%r13
   168be:	mov    %rbx,%r12
   168c1:	mov    %rdi,%rbx
   168c4:	mov    %rcx,%rdi
   168c7:	mov    %rax,%r15
   168ca:	callq  8a50 <png_reciprocal>
   168cf:	mov    %eax,0x2a4(%rbx)
   168d5:	mov    %r15,%rax
   168d8:	mov    -0x48(%rbp),%r15
   168dc:	jmp    1691f <png_init_read_transformations+0xbf>
   168de:	mov    %r14,-0x48(%rbp)
   168e2:	mov    %r13,%r14
   168e5:	mov    %r12,%r13
   168e8:	mov    %rbx,%r12
   168eb:	mov    %rdi,%rbx
   168ee:	mov    %rcx,%rdi
   168f1:	mov    %rax,%r15
   168f4:	callq  8a50 <png_reciprocal>
   168f9:	mov    %eax,0x498(%rbx)
   168ff:	mov    %r15,%rax
   16902:	mov    -0x48(%rbp),%r15
   16906:	jmp    1691f <png_init_read_transformations+0xbf>
   16908:	mov    %r14,%r15
   1690b:	mov    %r13,%r14
   1690e:	mov    %r12,%r13
   16911:	mov    %rbx,%r12
   16914:	mov    %rdi,%rbx
   16917:	mov    %rcx,%rdi
   1691a:	callq  178e0 <png_gamma_threshold>
   1691f:	movzwl 0x4e2(%rbx),%ecx
   16926:	or     $0x1,%cx
   1692a:	mov    %cx,0x4e2(%rbx)
   16931:	test   %eax,%eax
   16933:	jne    16942 <png_init_read_transformations+0xe2>
   16935:	mov    0x134(%rbx),%eax
   1693b:	and    $0xffffdfff,%eax
   16940:	jmp    1694d <png_init_read_transformations+0xed>
   16942:	mov    0x134(%rbx),%eax
   16948:	or     $0x2000,%eax
   1694d:	mov    %eax,0x134(%rbx)
   16953:	mov    %rax,%rcx
   16956:	and    $0x40000,%ecx
   1695c:	test   %ecx,%ecx
   1695e:	jne    16a1f <png_init_read_transformations+0x1bf>
   16964:	movslq 0x2a4(%rbx),%rdi
   1696b:	callq  8b20 <png_gamma_significant>
   16970:	test   %eax,%eax
   16972:	jne    16996 <png_init_read_transformations+0x136>
   16974:	mov    0x134(%rbx),%eax
   1697a:	and    $0xff7fffff,%eax
   1697f:	mov    %eax,0x134(%rbx)
   16985:	mov    0x130(%rbx),%eax
   1698b:	and    $0xffffdfff,%eax
   16990:	mov    %eax,0x130(%rbx)
   16996:	mov    0x134(%rbx),%eax
   1699c:	and    $0x600000,%eax
   169a1:	test   %eax,%eax
   169a3:	je     169ad <png_init_read_transformations+0x14d>
   169a5:	mov    %rbx,%rdi
   169a8:	callq  7ba0 <png_colorspace_set_rgb_coefficients>
   169ad:	mov    0x134(%rbx),%eax
   169b3:	mov    %rax,%rcx
   169b6:	and    $0x100,%ecx
   169bc:	test   %ecx,%ecx
   169be:	jne    16a5a <png_init_read_transformations+0x1fa>
   169c4:	mov    %rax,%rcx
   169c7:	and    $0x80,%ecx
   169cd:	test   %ecx,%ecx
   169cf:	je     16a79 <png_init_read_transformations+0x219>
   169d5:	and    $0x4000,%eax
   169da:	test   %eax,%eax
   169dc:	je     16a79 <png_init_read_transformations+0x219>
   169e2:	movzwl 0x27e(%rbx),%ecx
   169e9:	movzwl 0x280(%rbx),%eax
   169f0:	cmp    %cx,%ax
   169f3:	jne    16a79 <png_init_read_transformations+0x219>
   169f9:	movzwl 0x282(%rbx),%eax
   16a00:	cmp    %ax,%cx
   16a03:	jne    16a79 <png_init_read_transformations+0x219>
   16a05:	mov    0x12c(%rbx),%eax
   16a0b:	or     $0x800,%eax
   16a10:	mov    %eax,0x12c(%rbx)
   16a16:	mov    %cx,0x284(%rbx)
   16a1d:	jmp    16a79 <png_init_read_transformations+0x219>
   16a1f:	mov    %rax,%rcx
   16a22:	and    $0x80,%ecx
   16a28:	test   %ecx,%ecx
   16a2a:	jne    16964 <png_init_read_transformations+0x104>
   16a30:	and    $0xfd7ffeff,%eax
   16a35:	mov    %eax,0x134(%rbx)
   16a3b:	mov    0x130(%rbx),%eax
   16a41:	and    $0xffffdfff,%eax
   16a46:	mov    %eax,0x130(%rbx)
   16a4c:	movw   $0x0,0x260(%rbx)
   16a55:	jmpq   16964 <png_init_read_transformations+0x104>
   16a5a:	movzbl 0x267(%rbx),%eax
   16a61:	and    $0x2,%eax
   16a64:	test   %eax,%eax
   16a66:	jne    16a79 <png_init_read_transformations+0x219>
   16a68:	mov    0x12c(%rbx),%eax
   16a6e:	or     $0x800,%eax
   16a73:	mov    %eax,0x12c(%rbx)
   16a79:	movzbl 0x267(%rbx),%eax
   16a80:	cmp    $0x3,%al
   16a82:	je     16a8e <png_init_read_transformations+0x22e>
   16a84:	mov    %rbx,%rdi
   16a87:	callq  17a60 <png_init_rgb_transformations>
   16a8c:	jmp    16a96 <png_init_read_transformations+0x236>
   16a8e:	mov    %rbx,%rdi
   16a91:	callq  17920 <png_init_palette_transformations>
   16a96:	mov    0x134(%rbx),%eax
   16a9c:	mov    %rax,%rcx
   16a9f:	and    $0x200,%ecx
   16aa5:	test   %ecx,%ecx
   16aa7:	jne    16b8a <png_init_read_transformations+0x32a>
   16aad:	mov    0x134(%rbx),%eax
   16ab3:	mov    %rax,%rcx
   16ab6:	and    $0x4000400,%ecx
   16abc:	test   %ecx,%ecx
   16abe:	jne    16c34 <png_init_read_transformations+0x3d4>
   16ac4:	mov    0x27c(%rbx),%rax
   16acb:	mov    %rax,0x286(%rbx)
   16ad2:	movzwl 0x284(%rbx),%eax
   16ad9:	mov    %ax,0x28e(%rbx)
   16ae0:	mov    $0xff,%eax
   16ae5:	mov    0x134(%rbx),%ecx
   16aeb:	mov    %rcx,%rdx
   16aee:	and    $0x2000,%edx
   16af4:	test   %edx,%edx
   16af6:	jne    16cbe <png_init_read_transformations+0x45e>
   16afc:	and    $0x600000,%ecx
   16b02:	test   %ecx,%ecx
   16b04:	jne    16d1a <png_init_read_transformations+0x4ba>
   16b0a:	mov    0x134(%rbx),%ecx
   16b10:	and    $0x80,%ecx
   16b16:	test   %ecx,%ecx
   16b18:	jne    16d44 <png_init_read_transformations+0x4e4>
   16b1e:	mov    0x134(%rbx),%ecx
   16b24:	and    $0x800000,%ecx
   16b2a:	test   %ecx,%ecx
   16b2c:	jne    16d85 <png_init_read_transformations+0x525>
   16b32:	mov    0x134(%rbx),%ecx
   16b38:	and    $0x80,%ecx
   16b3e:	test   %ecx,%ecx
   16b40:	je     16cf4 <png_init_read_transformations+0x494>
   16b46:	movzbl 0x267(%rbx),%ecx
   16b4d:	cmp    $0x3,%cl
   16b50:	jne    16cf4 <png_init_read_transformations+0x494>
   16b56:	mov    0x250(%rbx),%r8
   16b5d:	movzwl 0x260(%rbx),%r9d
   16b65:	movzbl 0x27e(%rbx),%ecx
   16b6c:	mov    %cl,-0x53(%rbp)
   16b6f:	movzbl 0x280(%rbx),%ecx
   16b76:	mov    %cl,-0x52(%rbp)
   16b79:	movzbl 0x282(%rbx),%ecx
   16b80:	mov    %cl,-0x51(%rbp)
   16b83:	xor    %ecx,%ecx
   16b85:	jmpq   16dbc <png_init_read_transformations+0x55c>
   16b8a:	mov    %rax,%rcx
   16b8d:	and    $0x80,%ecx
   16b93:	test   %ecx,%ecx
   16b95:	je     16aad <png_init_read_transformations+0x24d>
   16b9b:	and    $0x100,%eax
   16ba0:	test   %eax,%eax
   16ba2:	jne    16aad <png_init_read_transformations+0x24d>
   16ba8:	movzbl 0x268(%rbx),%eax
   16baf:	cmp    $0x10,%al
   16bb1:	je     16aad <png_init_read_transformations+0x24d>
   16bb7:	movzwl 0x27e(%rbx),%ecx
   16bbe:	mov    %rcx,%rax
   16bc1:	shl    $0x8,%eax
   16bc4:	sub    %ecx,%eax
   16bc6:	add    $0x807f,%eax
   16bcb:	shr    $0x10,%eax
   16bce:	mov    %ax,0x27e(%rbx)
   16bd5:	movzwl 0x280(%rbx),%ecx
   16bdc:	mov    %rcx,%rax
   16bdf:	shl    $0x8,%eax
   16be2:	sub    %ecx,%eax
   16be4:	add    $0x807f,%eax
   16be9:	shr    $0x10,%eax
   16bec:	mov    %ax,0x280(%rbx)
   16bf3:	movzwl 0x282(%rbx),%ecx
   16bfa:	mov    %rcx,%rax
   16bfd:	shl    $0x8,%eax
   16c00:	sub    %ecx,%eax
   16c02:	add    $0x807f,%eax
   16c07:	shr    $0x10,%eax
   16c0a:	mov    %ax,0x282(%rbx)
   16c11:	movzwl 0x284(%rbx),%ecx
   16c18:	mov    %rcx,%rax
   16c1b:	shl    $0x8,%eax
   16c1e:	sub    %ecx,%eax
   16c20:	add    $0x807f,%eax
   16c25:	shr    $0x10,%eax
   16c28:	mov    %ax,0x284(%rbx)
   16c2f:	jmpq   16aad <png_init_read_transformations+0x24d>
   16c34:	mov    %rax,%rcx
   16c37:	and    $0x80,%ecx
   16c3d:	test   %ecx,%ecx
   16c3f:	je     16ac4 <png_init_read_transformations+0x264>
   16c45:	and    $0x100,%eax
   16c4a:	test   %eax,%eax
   16c4c:	jne    16ac4 <png_init_read_transformations+0x264>
   16c52:	movzbl 0x268(%rbx),%eax
   16c59:	cmp    $0x10,%al
   16c5b:	jne    16ac4 <png_init_read_transformations+0x264>
   16c61:	movzwl 0x27e(%rbx),%ecx
   16c68:	mov    %rcx,%rax
   16c6b:	shl    $0x8,%eax
   16c6e:	add    %ecx,%eax
   16c70:	mov    %ax,0x27e(%rbx)
   16c77:	movzwl 0x280(%rbx),%ecx
   16c7e:	mov    %rcx,%rax
   16c81:	shl    $0x8,%eax
   16c84:	add    %ecx,%eax
   16c86:	mov    %ax,0x280(%rbx)
   16c8d:	movzwl 0x282(%rbx),%ecx
   16c94:	mov    %rcx,%rax
   16c97:	shl    $0x8,%eax
   16c9a:	add    %ecx,%eax
   16c9c:	mov    %ax,0x282(%rbx)
   16ca3:	movzwl 0x284(%rbx),%ecx
   16caa:	mov    %rcx,%rax
   16cad:	shl    $0x8,%eax
   16cb0:	add    %ecx,%eax
   16cb2:	mov    %ax,0x284(%rbx)
   16cb9:	jmpq   16ac4 <png_init_read_transformations+0x264>
   16cbe:	movzbl 0x268(%rbx),%esi
   16cc5:	mov    %rbx,%rdi
   16cc8:	callq  8e20 <png_build_gamma_table>
   16ccd:	mov    0x134(%rbx),%eax
   16cd3:	mov    %rax,%rcx
   16cd6:	and    $0x80,%ecx
   16cdc:	test   %ecx,%ecx
   16cde:	jne    16ddb <png_init_read_transformations+0x57b>
   16ce4:	movzbl 0x267(%rbx),%ecx
   16ceb:	cmp    $0x3,%cl
   16cee:	je     16e09 <png_init_read_transformations+0x5a9>
   16cf4:	mov    0x134(%rbx),%eax
   16cfa:	mov    %rax,%rcx
   16cfd:	and    $0x8,%ecx
   16d00:	test   %ecx,%ecx
   16d02:	jne    16e38 <png_init_read_transformations+0x5d8>
   16d08:	mov    %r12,%rbx
   16d0b:	mov    %r13,%r12
   16d0e:	mov    %r14,%r13
   16d11:	mov    %r15,%r14
   16d14:	mov    -0x50(%rbp),%r15
   16d18:	leaveq 
   16d19:	retq   
   16d1a:	movslq 0x498(%rbx),%rdi
   16d21:	callq  8b20 <png_gamma_significant>
   16d26:	test   %eax,%eax
   16d28:	jne    16cbe <png_init_read_transformations+0x45e>
   16d2a:	movslq 0x2a4(%rbx),%rdi
   16d31:	callq  8b20 <png_gamma_significant>
   16d36:	test   %eax,%eax
   16d38:	jne    16cbe <png_init_read_transformations+0x45e>
   16d3a:	mov    $0xff,%eax
   16d3f:	jmpq   16b0a <png_init_read_transformations+0x2aa>
   16d44:	movslq 0x498(%rbx),%rdi
   16d4b:	callq  8b20 <png_gamma_significant>
   16d50:	test   %eax,%eax
   16d52:	jne    16cbe <png_init_read_transformations+0x45e>
   16d58:	movslq 0x2a4(%rbx),%rdi
   16d5f:	callq  8b20 <png_gamma_significant>
   16d64:	test   %eax,%eax
   16d66:	jne    16cbe <png_init_read_transformations+0x45e>
   16d6c:	movzbl 0x274(%rbx),%eax
   16d73:	cmp    $0x3,%al
   16d75:	je     16e5b <png_init_read_transformations+0x5fb>
   16d7b:	mov    $0xff,%eax
   16d80:	jmpq   16b1e <png_init_read_transformations+0x2be>
   16d85:	movslq 0x2a4(%rbx),%rdi
   16d8c:	callq  8b20 <png_gamma_significant>
   16d91:	test   %eax,%eax
   16d93:	jne    16cbe <png_init_read_transformations+0x45e>
   16d99:	mov    $0xff,%eax
   16d9e:	jmpq   16b32 <png_init_read_transformations+0x2d2>
   16da3:	movzwl -0x53(%rbp),%edx
   16da7:	lea    (%r10,%r10,2),%rsi
   16dab:	mov    %dx,(%r8,%rsi,1)
   16db0:	movzbl -0x51(%rbp),%edx
   16db4:	mov    %dl,0x2(%r8,%rsi,1)
   16db9:	add    $0x1,%ecx
   16dbc:	cmp    %r9d,%ecx
   16dbf:	jl     16e79 <png_init_read_transformations+0x619>
   16dc5:	mov    0x134(%rbx),%eax
   16dcb:	and    $0xffffff7f,%eax
   16dd0:	mov    %eax,0x134(%rbx)
   16dd6:	jmpq   16cf4 <png_init_read_transformations+0x494>
   16ddb:	and    $0x600000,%eax
   16de0:	test   %eax,%eax
   16de2:	je     16df3 <png_init_read_transformations+0x593>
   16de4:	lea    0x17740(%rip),%rsi        # 2e52b <chunks_to_process.34+0x726>
   16deb:	mov    %rbx,%rdi
   16dee:	callq  5390 <png_warning@plt>
   16df3:	movzbl 0x267(%rbx),%eax
   16dfa:	cmp    $0x3,%al
   16dfc:	je     16f54 <png_init_read_transformations+0x6f4>
   16e02:	xor    %ecx,%ecx
   16e04:	jmpq   16f59 <png_init_read_transformations+0x6f9>
   16e09:	mov    %rax,%rcx
   16e0c:	and    $0x1000,%ecx
   16e12:	test   %ecx,%ecx
   16e14:	je     16e23 <png_init_read_transformations+0x5c3>
   16e16:	and    $0x600000,%eax
   16e1b:	test   %eax,%eax
   16e1d:	jne    16cf4 <png_init_read_transformations+0x494>
   16e23:	mov    0x250(%rbx),%r8
   16e2a:	movzwl 0x258(%rbx),%ecx
   16e31:	xor    %eax,%eax
   16e33:	jmpq   17004 <png_init_read_transformations+0x7a4>
   16e38:	mov    %rax,%rcx
   16e3b:	and    $0x1000,%ecx
   16e41:	test   %ecx,%ecx
   16e43:	je     1701e <png_init_read_transformations+0x7be>
   16e49:	mov    %r12,%rbx
   16e4c:	mov    %r13,%r12
   16e4f:	mov    %r14,%r13
   16e52:	mov    %r15,%r14
   16e55:	mov    -0x50(%rbp),%r15
   16e59:	leaveq 
   16e5a:	retq   
   16e5b:	movslq 0x278(%rbx),%rdi
   16e62:	callq  8b20 <png_gamma_significant>
   16e67:	test   %eax,%eax
   16e69:	jne    16cbe <png_init_read_transformations+0x45e>
   16e6f:	mov    $0xff,%eax
   16e74:	jmpq   16b1e <png_init_read_transformations+0x2be>
   16e79:	mov    0x2e8(%rbx),%rdx
   16e80:	movslq %ecx,%r10
   16e83:	movzbl (%rdx,%r10,1),%edx
   16e88:	test   %dl,%dl
   16e8a:	je     16da3 <png_init_read_transformations+0x543>
   16e90:	cmp    $0xfe,%dl
   16e93:	ja     16db9 <png_init_read_transformations+0x559>
   16e99:	mov    %rax,%rsi
   16e9c:	sub    %dx,%si
   16e9f:	movzbl -0x53(%rbp),%edi
   16ea3:	imul   %di,%si
   16ea7:	lea    (%r10,%r10,2),%r11
   16eab:	movzbl (%r8,%r11,1),%edi
   16eb0:	imul   %di,%dx
   16eb4:	lea    0x80(%rsi,%rdx,1),%edx
   16ebb:	movzwl %dx,%esi
   16ebe:	mov    %rsi,%rdx
   16ec1:	shr    $0x8,%edx
   16ec4:	add    %esi,%edx
   16ec6:	shr    $0x8,%edx
   16ec9:	mov    %dl,(%r8,%r11,1)
   16ecd:	mov    0x2e8(%rbx),%rdx
   16ed4:	movzbl (%rdx,%r10,1),%edi
   16ed9:	movzbl 0x1(%r8,%r11,1),%edx
   16edf:	mov    %rdi,%rsi
   16ee2:	imul   %dx,%si
   16ee6:	mov    %rax,%rdx
   16ee9:	sub    %di,%dx
   16eec:	movzbl -0x52(%rbp),%edi
   16ef0:	imul   %di,%dx
   16ef4:	lea    0x80(%rdx,%rsi,1),%edx
   16efb:	movzwl %dx,%edx
   16efe:	mov    %rdx,%rsi
   16f01:	shr    $0x8,%esi
   16f04:	add    %esi,%edx
   16f06:	shr    $0x8,%edx
   16f09:	mov    %dl,0x1(%r8,%r11,1)
   16f0e:	mov    0x2e8(%rbx),%rdx
   16f15:	movzbl (%rdx,%r10,1),%edi
   16f1a:	movzbl 0x2(%r8,%r11,1),%edx
   16f20:	mov    %rdi,%rsi
   16f23:	imul   %dx,%si
   16f27:	mov    %rax,%rdx
   16f2a:	sub    %di,%dx
   16f2d:	movzbl -0x51(%rbp),%edi
   16f31:	imul   %di,%dx
   16f35:	lea    0x80(%rdx,%rsi,1),%edx
   16f3c:	movzwl %dx,%esi
   16f3f:	mov    %rsi,%rdx
   16f42:	shr    $0x8,%edx
   16f45:	add    %esi,%edx
   16f47:	shr    $0x8,%edx
   16f4a:	mov    %dl,0x2(%r8,%r11,1)
   16f4f:	jmpq   16db9 <png_init_read_transformations+0x559>
   16f54:	mov    $0x1,%ecx
   16f59:	mov    $0x186a0,%eax
   16f5e:	test   %ecx,%ecx
   16f60:	jg     17040 <png_init_read_transformations+0x7e0>
   16f66:	movzbl 0x274(%rbx),%ecx
   16f6d:	cmp    $0x1,%cl
   16f70:	jbe    17082 <png_init_read_transformations+0x822>
   16f76:	cmp    $0x2,%cl
   16f79:	je     17096 <png_init_read_transformations+0x836>
   16f7f:	cmp    $0x3,%cl
   16f82:	jne    17087 <png_init_read_transformations+0x827>
   16f88:	movslq 0x278(%rbx),%rdi
   16f8f:	callq  8a50 <png_reciprocal>
   16f94:	movslq 0x278(%rbx),%rdi
   16f9b:	movslq 0x2a4(%rbx),%rsi
   16fa2:	mov    %r15,-0x40(%rbp)
   16fa6:	mov    %rax,%r15
   16fa9:	callq  8ab0 <png_reciprocal2>
   16fae:	mov    %r15,%rcx
   16fb1:	mov    -0x40(%rbp),%r15
   16fb5:	jmpq   170cc <png_init_read_transformations+0x86c>
   16fba:	movslq %eax,%rdx
   16fbd:	lea    (%rdx,%rdx,2),%rdi
   16fc1:	movzbl (%r8,%rdi,1),%esi
   16fc6:	mov    0x2a8(%rbx),%rdx
   16fcd:	movzbl (%rsi,%rdx,1),%edx
   16fd1:	mov    %dl,(%r8,%rdi,1)
   16fd5:	movzbl 0x1(%r8,%rdi,1),%esi
   16fdb:	mov    0x2a8(%rbx),%rdx
   16fe2:	movzbl (%rsi,%rdx,1),%edx
   16fe6:	mov    %dl,0x1(%r8,%rdi,1)
   16feb:	movzbl 0x2(%r8,%rdi,1),%esi
   16ff1:	mov    0x2a8(%rbx),%rdx
   16ff8:	movzbl (%rsi,%rdx,1),%edx
   16ffc:	mov    %dl,0x2(%r8,%rdi,1)
   17001:	add    $0x1,%eax
   17004:	cmp    %ecx,%eax
   17006:	jl     16fba <png_init_read_transformations+0x75a>
   17008:	mov    0x134(%rbx),%eax
   1700e:	and    $0xffffdfff,%eax
   17013:	mov    %eax,0x134(%rbx)
   17019:	jmpq   16cf4 <png_init_read_transformations+0x494>
   1701e:	movzbl 0x267(%rbx),%ecx
   17025:	cmp    $0x3,%cl
   17028:	je     17108 <png_init_read_transformations+0x8a8>
   1702e:	mov    %r12,%rbx
   17031:	mov    %r13,%r12
   17034:	mov    %r14,%r13
   17037:	mov    %r15,%r14
   1703a:	mov    -0x50(%rbp),%r15
   1703e:	leaveq 
   1703f:	retq   
   17040:	mov    0x250(%rbx),%rdx
   17047:	movzwl 0x258(%rbx),%r10d
   1704f:	movzbl 0x274(%rbx),%ecx
   17056:	cmp    $0x2,%cl
   17059:	je     17140 <png_init_read_transformations+0x8e0>
   1705f:	cmp    $0x1,%cl
   17062:	jbe    171af <png_init_read_transformations+0x94f>
   17068:	cmp    $0x2,%cl
   1706b:	je     171c0 <png_init_read_transformations+0x960>
   17071:	cmp    $0x3,%cl
   17074:	je     1720b <png_init_read_transformations+0x9ab>
   1707a:	mov    %rax,%rcx
   1707d:	jmpq   1725d <png_init_read_transformations+0x9fd>
   17082:	cmp    $0x1,%cl
   17085:	je     170c5 <png_init_read_transformations+0x865>
   17087:	mov    %rbx,%rdi
   1708a:	lea    0x174cf(%rip),%rsi        # 2e560 <chunks_to_process.34+0x75b>
   17091:	callq  5470 <png_error@plt>
   17096:	movslq 0x498(%rbx),%rdi
   1709d:	callq  8a50 <png_reciprocal>
   170a2:	movslq 0x498(%rbx),%rdi
   170a9:	movslq 0x2a4(%rbx),%rsi
   170b0:	mov    %r15,-0x40(%rbp)
   170b4:	mov    %rax,%r15
   170b7:	callq  8ab0 <png_reciprocal2>
   170bc:	mov    %r15,%rcx
   170bf:	mov    -0x40(%rbp),%r15
   170c3:	jmp    170cc <png_init_read_transformations+0x86c>
   170c5:	movslq 0x2a4(%rbx),%rcx
   170cc:	mov    %rcx,%rdi
   170cf:	mov    %r15,-0x38(%rbp)
   170d3:	mov    %r14,-0x30(%rbp)
   170d7:	mov    %rax,%r14
   170da:	mov    %rcx,%r15
   170dd:	callq  8b20 <png_gamma_significant>
   170e2:	mov    %r14,%rdi
   170e5:	mov    %r13,-0x20(%rbp)
   170e9:	mov    %rax,%r13
   170ec:	callq  8b20 <png_gamma_significant>
   170f1:	test   %r13d,%r13d
   170f4:	jne    172ac <png_init_read_transformations+0xa4c>
   170fa:	mov    %r13,%rcx
   170fd:	mov    %rax,%r13
   17100:	mov    %rcx,%rax
   17103:	jmpq   172d6 <png_init_read_transformations+0xa76>
   17108:	movzwl 0x258(%rbx),%edx
   1710f:	and    $0xfffffff7,%eax
   17112:	mov    %eax,0x134(%rbx)
   17118:	mov    $0x8,%eax
   1711d:	movzbl 0x2d8(%rbx),%ecx
   17124:	neg    %ecx
   17126:	add    %eax,%ecx
   17128:	test   %ecx,%ecx
   1712a:	jle    1736f <png_init_read_transformations+0xb0f>
   17130:	cmp    $0x7,%ecx
   17133:	jg     1736f <png_init_read_transformations+0xb0f>
   17139:	xor    %esi,%esi
   1713b:	jmpq   173ad <png_init_read_transformations+0xb4d>
   17140:	movzwl 0x27e(%rbx),%r11d
   17148:	mov    0x2c0(%rbx),%rcx
   1714f:	movzbl (%r11,%rcx,1),%eax
   17154:	movzwl 0x280(%rbx),%r9d
   1715c:	movzbl (%rcx,%r9,1),%r8d
   17161:	movzwl 0x282(%rbx),%esi
   17168:	movzbl (%rcx,%rsi,1),%edi
   1716c:	mov    0x2a8(%rbx),%rcx
   17173:	movzbl (%r11,%rcx,1),%r11d
   17178:	mov    %r11b,-0x56(%rbp)
   1717c:	movzbl (%r9,%rcx,1),%r9d
   17181:	mov    %r9b,-0x55(%rbp)
   17185:	movzbl (%rsi,%rcx,1),%ecx
   17189:	mov    %cl,-0x54(%rbp)
   1718c:	mov    %r15,-0x30(%rbp)
   17190:	mov    %r14,-0x20(%rbp)
   17194:	mov    %r13,-0x10(%rbp)
   17198:	mov    %r12,-0x8(%rbp)
   1719c:	mov    %rdx,%r12
   1719f:	mov    %r10,%r13
   171a2:	mov    $0xff,%r9d
   171a8:	xor    %ecx,%ecx
   171aa:	jmpq   173fa <png_init_read_transformations+0xb9a>
   171af:	cmp    $0x1,%cl
   171b2:	je     17256 <png_init_read_transformations+0x9f6>
   171b8:	mov    %rax,%rcx
   171bb:	jmpq   1725d <png_init_read_transformations+0x9fd>
   171c0:	movslq 0x498(%rbx),%rdi
   171c7:	mov    %r15,-0x30(%rbp)
   171cb:	mov    %r14,-0x28(%rbp)
   171cf:	mov    %rdx,%r14
   171d2:	mov    %r10,%r15
   171d5:	callq  8a50 <png_reciprocal>
   171da:	movslq 0x498(%rbx),%rdi
   171e1:	movslq 0x2a4(%rbx),%rsi
   171e8:	mov    %r13,-0x18(%rbp)
   171ec:	mov    %rax,%r13
   171ef:	callq  8ab0 <png_reciprocal2>
   171f4:	mov    %r13,%rcx
   171f7:	mov    %r14,%rdx
   171fa:	mov    %r15,%r10
   171fd:	mov    -0x18(%rbp),%r13
   17201:	mov    -0x28(%rbp),%r14
   17205:	mov    -0x30(%rbp),%r15
   17209:	jmp    1725d <png_init_read_transformations+0x9fd>
   1720b:	movslq 0x278(%rbx),%rdi
   17212:	mov    %r15,-0x38(%rbp)
   17216:	mov    %r14,-0x28(%rbp)
   1721a:	mov    %r10,%r14
   1721d:	mov    %rdx,%r15
   17220:	callq  8a50 <png_reciprocal>
   17225:	movslq 0x278(%rbx),%rdi
   1722c:	movslq 0x2a4(%rbx),%rsi
   17233:	mov    %r13,-0x18(%rbp)
   17237:	mov    %rax,%r13
   1723a:	callq  8ab0 <png_reciprocal2>
   1723f:	mov    %r13,%rcx
   17242:	mov    %r15,%rdx
   17245:	mov    %r14,%r10
   17248:	mov    -0x18(%rbp),%r13
   1724c:	mov    -0x28(%rbp),%r14
   17250:	mov    -0x38(%rbp),%r15
   17254:	jmp    1725d <png_init_read_transformations+0x9fd>
   17256:	movslq 0x2a4(%rbx),%rcx
   1725d:	mov    %rax,%rdi
   17260:	mov    %r15,-0x30(%rbp)
   17264:	mov    %r14,-0x20(%rbp)
   17268:	mov    %r13,-0x10(%rbp)
   1726c:	mov    %r12,-0x8(%rbp)
   17270:	mov    %rdx,%r12
   17273:	mov    %r10,%r13
   17276:	mov    %rcx,%r14
   17279:	mov    %rax,%r15
   1727c:	callq  8b20 <png_gamma_significant>
   17281:	test   %eax,%eax
   17283:	jne    17429 <png_init_read_transformations+0xbc9>
   17289:	movzbl 0x27e(%rbx),%eax
   17290:	mov    %al,-0x56(%rbp)
   17293:	movzbl 0x280(%rbx),%eax
   1729a:	mov    %al,-0x55(%rbp)
   1729d:	movzbl 0x282(%rbx),%eax
   172a4:	mov    %al,-0x54(%rbp)
   172a7:	jmpq   1745f <png_init_read_transformations+0xbff>
   172ac:	movzwl 0x284(%rbx),%esi
   172b3:	mov    %rbx,%rdi
   172b6:	mov    %r15,%rdx
   172b9:	mov    %r12,-0x10(%rbp)
   172bd:	mov    %r13,%r12
   172c0:	mov    %rax,%r13
   172c3:	callq  8b50 <png_gamma_correct>
   172c8:	mov    %ax,0x28e(%rbx)
   172cf:	mov    %r12,%rax
   172d2:	mov    -0x10(%rbp),%r12
   172d6:	test   %r13d,%r13d
   172d9:	je     17302 <png_init_read_transformations+0xaa2>
   172db:	movzwl 0x284(%rbx),%esi
   172e2:	mov    %rbx,%rdi
   172e5:	mov    %r14,%rdx
   172e8:	mov    %r12,-0x8(%rbp)
   172ec:	mov    %rax,%r12
   172ef:	callq  8b50 <png_gamma_correct>
   172f4:	mov    %ax,0x284(%rbx)
   172fb:	mov    %r12,%rax
   172fe:	mov    -0x8(%rbp),%r12
   17302:	movzwl 0x280(%rbx),%ecx
   17309:	movzwl 0x27e(%rbx),%edx
   17310:	cmp    %dx,%cx
   17313:	jne    17492 <png_init_read_transformations+0xc32>
   17319:	movzwl 0x282(%rbx),%ecx
   17320:	cmp    %cx,%dx
   17323:	jne    17492 <png_init_read_transformations+0xc32>
   17329:	movzwl 0x284(%rbx),%ecx
   17330:	cmp    %cx,%dx
   17333:	jne    17492 <png_init_read_transformations+0xc32>
   17339:	movzwl 0x28e(%rbx),%eax
   17340:	mov    %ax,0x28c(%rbx)
   17347:	mov    %ax,0x28a(%rbx)
   1734e:	mov    %ax,0x288(%rbx)
   17355:	mov    %cx,0x282(%rbx)
   1735c:	mov    %cx,0x280(%rbx)
   17363:	mov    %cx,0x27e(%rbx)
   1736a:	jmpq   17531 <png_init_read_transformations+0xcd1>
   1736f:	movzbl 0x2d9(%rbx),%ecx
   17376:	neg    %ecx
   17378:	add    %eax,%ecx
   1737a:	test   %ecx,%ecx
   1737c:	jle    17549 <png_init_read_transformations+0xce9>
   17382:	cmp    $0x7,%ecx
   17385:	jg     17549 <png_init_read_transformations+0xce9>
   1738b:	xor    %esi,%esi
   1738d:	jmpq   1758a <png_init_read_transformations+0xd2a>
   17392:	movslq %esi,%rdi
   17395:	lea    (%rdi,%rdi,2),%rdi
   17399:	add    0x250(%rbx),%rdi
   173a0:	movzbl (%rdi),%r8d
   173a4:	shr    %cl,%r8d
   173a7:	mov    %r8b,(%rdi)
   173aa:	add    $0x1,%esi
   173ad:	cmp    %esi,%edx
   173af:	jg     17392 <png_init_read_transformations+0xb32>
   173b1:	jmp    1736f <png_init_read_transformations+0xb0f>
   173b3:	lea    (%r15,%r15,2),%r10
   173b7:	movzbl (%r12,%r10,1),%esi
   173bc:	mov    0x2a8(%rbx),%rdx
   173c3:	movzbl (%rsi,%rdx,1),%edx
   173c7:	mov    %dl,(%r12,%r10,1)
   173cb:	movzbl 0x1(%r12,%r10,1),%esi
   173d1:	mov    0x2a8(%rbx),%rdx
   173d8:	movzbl (%rsi,%rdx,1),%edx
   173dc:	mov    %dl,0x1(%r12,%r10,1)
   173e1:	movzbl 0x2(%r12,%r10,1),%esi
   173e7:	mov    0x2a8(%rbx),%rdx
   173ee:	movzbl (%rsi,%rdx,1),%edx
   173f2:	mov    %dl,0x2(%r12,%r10,1)
   173f7:	add    $0x1,%ecx
   173fa:	cmp    %r13d,%ecx
   173fd:	jl     17590 <png_init_read_transformations+0xd30>
   17403:	mov    0x134(%rbx),%eax
   17409:	and    $0xffffdf7f,%eax
   1740e:	mov    %eax,0x134(%rbx)
   17414:	mov    -0x8(%rbp),%r12
   17418:	mov    -0x10(%rbp),%r13
   1741c:	mov    -0x20(%rbp),%r14
   17420:	mov    -0x30(%rbp),%r15
   17424:	jmpq   16cf4 <png_init_read_transformations+0x494>
   17429:	movzwl 0x27e(%rbx),%edi
   17430:	mov    %r15,%rsi
   17433:	callq  8bf0 <png_gamma_8bit_correct>
   17438:	mov    %al,-0x56(%rbp)
   1743b:	movzwl 0x280(%rbx),%edi
   17442:	mov    %r15,%rsi
   17445:	callq  8bf0 <png_gamma_8bit_correct>
   1744a:	mov    %al,-0x55(%rbp)
   1744d:	mov    %r15,%rsi
   17450:	movzwl 0x282(%rbx),%edi
   17457:	callq  8bf0 <png_gamma_8bit_correct>
   1745c:	mov    %al,-0x54(%rbp)
   1745f:	mov    %r14,%rdi
   17462:	callq  8b20 <png_gamma_significant>
   17467:	test   %eax,%eax
   17469:	jne    176cc <png_init_read_transformations+0xe6c>
   1746f:	movzbl 0x27e(%rbx),%eax
   17476:	movzbl 0x280(%rbx),%r8d
   1747e:	movzbl 0x282(%rbx),%edi
   17485:	mov    $0xff,%r9d
   1748b:	xor    %ecx,%ecx
   1748d:	jmpq   173fa <png_init_read_transformations+0xb9a>
   17492:	test   %eax,%eax
   17494:	je     174e1 <png_init_read_transformations+0xc81>
   17496:	movzwl 0x27e(%rbx),%esi
   1749d:	mov    %rbx,%rdi
   174a0:	mov    %r15,%rdx
   174a3:	callq  8b50 <png_gamma_correct>
   174a8:	mov    %ax,0x288(%rbx)
   174af:	movzwl 0x280(%rbx),%esi
   174b6:	mov    %rbx,%rdi
   174b9:	mov    %r15,%rdx
   174bc:	callq  8b50 <png_gamma_correct>
   174c1:	mov    %ax,0x28a(%rbx)
   174c8:	mov    %r15,%rdx
   174cb:	movzwl 0x282(%rbx),%esi
   174d2:	mov    %rbx,%rdi
   174d5:	callq  8b50 <png_gamma_correct>
   174da:	mov    %ax,0x28c(%rbx)
   174e1:	test   %r13d,%r13d
   174e4:	je     17531 <png_init_read_transformations+0xcd1>
   174e6:	movzwl 0x27e(%rbx),%esi
   174ed:	mov    %rbx,%rdi
   174f0:	mov    %r14,%rdx
   174f3:	callq  8b50 <png_gamma_correct>
   174f8:	mov    %ax,0x27e(%rbx)
   174ff:	movzwl 0x280(%rbx),%esi
   17506:	mov    %rbx,%rdi
   17509:	mov    %r14,%rdx
   1750c:	callq  8b50 <png_gamma_correct>
   17511:	mov    %ax,0x280(%rbx)
   17518:	mov    %r14,%rdx
   1751b:	movzwl 0x282(%rbx),%esi
   17522:	mov    %rbx,%rdi
   17525:	callq  8b50 <png_gamma_correct>
   1752a:	mov    %ax,0x282(%rbx)
   17531:	movb   $0x1,0x274(%rbx)
   17538:	mov    -0x20(%rbp),%r13
   1753c:	mov    -0x30(%rbp),%r14
   17540:	mov    -0x38(%rbp),%r15
   17544:	jmpq   16cf4 <png_init_read_transformations+0x494>
   17549:	movzbl 0x2da(%rbx),%ecx
   17550:	sub    %ecx,%eax
   17552:	test   %eax,%eax
   17554:	jg     17715 <png_init_read_transformations+0xeb5>
   1755a:	mov    %r12,%rbx
   1755d:	mov    %r13,%r12
   17560:	mov    %r14,%r13
   17563:	mov    %r15,%r14
   17566:	mov    -0x50(%rbp),%r15
   1756a:	leaveq 
   1756b:	retq   
   1756c:	mov    0x250(%rbx),%r8
   17573:	movslq %esi,%rdi
   17576:	lea    (%rdi,%rdi,2),%r9
   1757a:	movzbl 0x1(%r8,%r9,1),%edi
   17580:	shr    %cl,%edi
   17582:	mov    %dil,0x1(%r8,%r9,1)
   17587:	add    $0x1,%esi
   1758a:	cmp    %esi,%edx
   1758c:	jg     1756c <png_init_read_transformations+0xd0c>
   1758e:	jmp    17549 <png_init_read_transformations+0xce9>
   17590:	movslq %ecx,%r15
   17593:	movzwl 0x260(%rbx),%edx
   1759a:	cmp    %edx,%ecx
   1759c:	jge    173b3 <png_init_read_transformations+0xb53>
   175a2:	mov    0x2e8(%rbx),%rdx
   175a9:	movzbl (%rdx,%r15,1),%edx
   175ae:	cmp    $0xfe,%dl
   175b1:	ja     173b3 <png_init_read_transformations+0xb53>
   175b7:	test   %dl,%dl
   175b9:	je     1772c <png_init_read_transformations+0xecc>
   175bf:	mov    %r9,%rsi
   175c2:	sub    %dx,%si
   175c5:	movzbl %al,%r10d
   175c9:	imul   %r10w,%si
   175ce:	lea    (%r15,%r15,2),%r14
   175d2:	movzbl (%r12,%r14,1),%r11d
   175d7:	mov    0x2c0(%rbx),%r10
   175de:	movzbl (%r11,%r10,1),%r10d
   175e3:	imul   %r10w,%dx
   175e8:	lea    0x80(%rsi,%rdx,1),%edx
   175ef:	movzwl %dx,%esi
   175f2:	mov    %rsi,%rdx
   175f5:	shr    $0x8,%edx
   175f8:	add    %esi,%edx
   175fa:	shr    $0x8,%edx
   175fd:	movzbl %dl,%esi
   17600:	mov    0x2b8(%rbx),%rdx
   17607:	movzbl (%rsi,%rdx,1),%edx
   1760b:	mov    %dl,(%r12,%r14,1)
   1760f:	mov    0x2e8(%rbx),%rdx
   17616:	movzbl (%rdx,%r15,1),%r10d
   1761b:	movzbl 0x1(%r12,%r14,1),%esi
   17621:	mov    0x2c0(%rbx),%rdx
   17628:	movzbl (%rsi,%rdx,1),%edx
   1762c:	mov    %r10,%rsi
   1762f:	imul   %dx,%si
   17633:	mov    %r9,%rdx
   17636:	sub    %r10w,%dx
   1763a:	movzbl %r8b,%r10d
   1763e:	imul   %r10w,%dx
   17643:	lea    0x80(%rdx,%rsi,1),%edx
   1764a:	movzwl %dx,%esi
   1764d:	mov    %rsi,%rdx
   17650:	shr    $0x8,%edx
   17653:	add    %esi,%edx
   17655:	shr    $0x8,%edx
   17658:	movzbl %dl,%esi
   1765b:	mov    0x2b8(%rbx),%rdx
   17662:	movzbl (%rsi,%rdx,1),%edx
   17666:	mov    %dl,0x1(%r12,%r14,1)
   1766b:	mov    0x2e8(%rbx),%rdx
   17672:	movzbl (%rdx,%r15,1),%r10d
   17677:	movzbl 0x2(%r12,%r14,1),%esi
   1767d:	mov    0x2c0(%rbx),%rdx
   17684:	movzbl (%rsi,%rdx,1),%edx
   17688:	mov    %r10,%rsi
   1768b:	imul   %dx,%si
   1768f:	mov    %r9,%rdx
   17692:	sub    %r10w,%dx
   17696:	movzbl %dil,%r10d
   1769a:	imul   %r10w,%dx
   1769f:	lea    0x80(%rdx,%rsi,1),%edx
   176a6:	movzwl %dx,%esi
   176a9:	mov    %rsi,%rdx
   176ac:	shr    $0x8,%edx
   176af:	add    %esi,%edx
   176b1:	shr    $0x8,%edx
   176b4:	movzbl %dl,%esi
   176b7:	mov    0x2b8(%rbx),%rdx
   176be:	movzbl (%rsi,%rdx,1),%edx
   176c2:	mov    %dl,0x2(%r12,%r14,1)
   176c7:	jmpq   173f7 <png_init_read_transformations+0xb97>
   176cc:	movzwl 0x27e(%rbx),%edi
   176d3:	mov    %r14,%rsi
   176d6:	callq  8bf0 <png_gamma_8bit_correct>
   176db:	mov    %rax,%r15
   176de:	movzwl 0x280(%rbx),%edi
   176e5:	mov    %r14,%rsi
   176e8:	callq  8bf0 <png_gamma_8bit_correct>
   176ed:	mov    %r14,%rsi
   176f0:	mov    %rax,%r14
   176f3:	movzwl 0x282(%rbx),%edi
   176fa:	callq  8bf0 <png_gamma_8bit_correct>
   176ff:	mov    %rax,%rdi
   17702:	mov    %r15,%rax
   17705:	mov    %r14,%r8
   17708:	mov    $0xff,%r9d
   1770e:	xor    %ecx,%ecx
   17710:	jmpq   173fa <png_init_read_transformations+0xb9a>
   17715:	cmp    $0x7,%eax
   17718:	jle    17747 <png_init_read_transformations+0xee7>
   1771a:	mov    %r12,%rbx
   1771d:	mov    %r13,%r12
   17720:	mov    %r14,%r13
   17723:	mov    %r15,%r14
   17726:	mov    -0x50(%rbp),%r15
   1772a:	leaveq 
   1772b:	retq   
   1772c:	movzwl -0x56(%rbp),%edx
   17730:	lea    (%r15,%r15,2),%rsi
   17734:	mov    %dx,(%r12,%rsi,1)
   17739:	movzbl -0x54(%rbp),%edx
   1773d:	mov    %dl,0x2(%r12,%rsi,1)
   17742:	jmpq   173f7 <png_init_read_transformations+0xb97>
   17747:	xor    %esi,%esi
   17749:	jmp    1776f <png_init_read_transformations+0xf0f>
   1774b:	mov    0x250(%rbx),%r9
   17752:	movslq %esi,%rcx
   17755:	lea    (%rcx,%rcx,2),%r8
   17759:	mov    %rax,%rcx
   1775c:	movzbl 0x2(%r9,%r8,1),%edi
   17762:	shr    %cl,%edi
   17764:	mov    %rcx,%rax
   17767:	mov    %dil,0x2(%r9,%r8,1)
   1776c:	add    $0x1,%esi
   1776f:	cmp    %edx,%esi
   17771:	jl     1774b <png_init_read_transformations+0xeeb>
   17773:	mov    %r12,%rbx
   17776:	mov    %r13,%r12
   17779:	mov    %r14,%r13
   1777c:	mov    %r15,%r14
   1777f:	mov    -0x50(%rbp),%r15
   17783:	leaveq 
   17784:	retq   
   17785:	data16 nopw %cs:0x0(%rax,%rax,1)

0000000000017790 <png_rtran_ok>:
   17790:	push   %rbp
   17791:	mov    %rsp,%rbp
   17794:	xor    %eax,%eax
   17796:	test   %rdi,%rdi
   17799:	jne    1779d <png_rtran_ok+0xd>
   1779b:	leaveq 
   1779c:	retq   
   1779d:	mov    0x130(%rdi),%eax
   177a3:	and    $0x40,%eax
   177a6:	test   %eax,%eax
   177a8:	jne    177c6 <png_rtran_ok+0x36>
   177aa:	test   %esi,%esi
   177ac:	jne    177d6 <png_rtran_ok+0x46>
   177ae:	mov    0x130(%rdi),%eax
   177b4:	or     $0x4000,%eax
   177b9:	mov    %eax,0x130(%rdi)
   177bf:	mov    $0x1,%eax
   177c4:	leaveq 
   177c5:	retq   
   177c6:	lea    0x16db1(%rip),%rsi        # 2e57e <chunks_to_process.34+0x779>
   177cd:	callq  b120 <png_app_error>
   177d2:	xor    %eax,%eax
   177d4:	leaveq 
   177d5:	retq   
   177d6:	mov    0x12c(%rdi),%eax
   177dc:	and    $0x1,%eax
   177df:	test   %eax,%eax
   177e1:	jne    177ae <png_rtran_ok+0x1e>
   177e3:	lea    0x16dcf(%rip),%rsi        # 2e5b9 <chunks_to_process.34+0x7b4>
   177ea:	callq  b120 <png_app_error>
   177ef:	xor    %eax,%eax
   177f1:	leaveq 
   177f2:	retq   
   177f3:	data16 nopw %cs:0x0(%rax,%rax,1)
   177fe:	xchg   %ax,%ax

0000000000017800 <translate_gamma_flags>:
   17800:	push   %rbp
   17801:	mov    %rsp,%rbp
   17804:	cmp    $0xffffffff,%esi
   17807:	je     17823 <translate_gamma_flags+0x23>
   17809:	cmp    $0xfffe7960,%esi
   1780f:	je     17823 <translate_gamma_flags+0x23>
   17811:	cmp    $0xfffffffe,%esi
   17814:	je     1783f <translate_gamma_flags+0x3f>
   17816:	cmp    $0xffff3cb0,%esi
   1781c:	je     1783f <translate_gamma_flags+0x3f>
   1781e:	mov    %rsi,%rax
   17821:	leaveq 
   17822:	retq   
   17823:	mov    0x130(%rdi),%eax
   17829:	or     $0x1000,%eax
   1782e:	mov    %eax,0x130(%rdi)
   17834:	test   %edx,%edx
   17836:	je     1784a <translate_gamma_flags+0x4a>
   17838:	mov    $0x35b60,%eax
   1783d:	leaveq 
   1783e:	retq   
   1783f:	test   %edx,%edx
   17841:	je     17851 <translate_gamma_flags+0x51>
   17843:	mov    $0x250ac,%eax
   17848:	leaveq 
   17849:	retq   
   1784a:	mov    $0xb18f,%eax
   1784f:	leaveq 
   17850:	retq   
   17851:	mov    $0x10175,%eax
   17856:	leaveq 
   17857:	retq   
   17858:	nopl   0x0(%rax,%rax,1)

0000000000017860 <convert_gamma_value>:
   17860:	push   %rbp
   17861:	mov    %rsp,%rbp
   17864:	sub    $0x10,%rsp
   17868:	mov    %r15,-0x8(%rbp)
   1786c:	xorpd  %xmm1,%xmm1
   17870:	ucomisd %xmm1,%xmm0
   17874:	ja     178b2 <convert_gamma_value+0x52>
   17876:	mov    %rdi,%r15
   17879:	movsd  0x16d97(%rip),%xmm1        # 2e618 <chunks_to_process.34+0x813>
   17881:	addsd  %xmm1,%xmm0
   17885:	callq  57e0 <floor@plt>
   1788a:	movsd  0x16d9e(%rip),%xmm1        # 2e630 <chunks_to_process.34+0x82b>
   17892:	ucomisd %xmm1,%xmm0
   17896:	ja     178d0 <convert_gamma_value+0x70>
   17898:	movsd  0x16d80(%rip),%xmm1        # 2e620 <chunks_to_process.34+0x81b>
   178a0:	ucomisd %xmm1,%xmm0
   178a4:	jp     178a8 <convert_gamma_value+0x48>
   178a6:	jb     178d0 <convert_gamma_value+0x70>
   178a8:	cvttsd2si %xmm0,%eax
   178ac:	mov    -0x8(%rbp),%r15
   178b0:	leaveq 
   178b1:	retq   
   178b2:	movsd  0x16d7e(%rip),%xmm1        # 2e638 <chunks_to_process.34+0x833>
   178ba:	ucomisd %xmm1,%xmm0
   178be:	jp     17876 <convert_gamma_value+0x16>
   178c0:	jae    17876 <convert_gamma_value+0x16>
   178c2:	movsd  0x16d5e(%rip),%xmm1        # 2e628 <chunks_to_process.34+0x823>
   178ca:	mulsd  %xmm1,%xmm0
   178ce:	jmp    17876 <convert_gamma_value+0x16>
   178d0:	mov    %r15,%rdi
   178d3:	lea    0x16d0b(%rip),%rsi        # 2e5e5 <chunks_to_process.34+0x7e0>
   178da:	callq  acc0 <png_fixed_error>
   178df:	nop

00000000000178e0 <png_gamma_threshold>:
   178e0:	push   %rbp
   178e1:	mov    %rsp,%rbp
   178e4:	sub    $0x10,%rsp
   178e8:	mov    %rsi,%rdx
   178eb:	mov    %rdi,%rsi
   178ee:	lea    -0x4(%rbp),%rdi
   178f2:	mov    $0x186a0,%ecx
   178f7:	callq  8980 <png_muldiv>
   178fc:	test   %eax,%eax
   178fe:	jne    17907 <png_gamma_threshold+0x27>
   17900:	mov    $0x1,%eax
   17905:	leaveq 
   17906:	retq   
   17907:	movslq -0x4(%rbp),%rdi
   1790b:	callq  8b20 <png_gamma_significant>
   17910:	test   %eax,%eax
   17912:	je     1791b <png_gamma_threshold+0x3b>
   17914:	mov    $0x1,%eax
   17919:	leaveq 
   1791a:	retq   
   1791b:	xor    %eax,%eax
   1791d:	leaveq 
   1791e:	retq   
   1791f:	nop

0000000000017920 <png_init_palette_transformations>:
   17920:	push   %rbp
   17921:	mov    %rsp,%rbp
   17924:	xor    %edx,%edx
   17926:	movzwl 0x260(%rdi),%eax
   1792d:	test   %ax,%ax
   17930:	jne    17950 <png_init_palette_transformations+0x30>
   17932:	mov    %rdx,%rax
   17935:	mov    %rax,%rsi
   17938:	test   %esi,%esi
   1793a:	je     1795d <png_init_palette_transformations+0x3d>
   1793c:	mov    0x134(%rdi),%ecx
   17942:	mov    %rcx,%rax
   17945:	and    $0x100,%eax
   1794a:	test   %eax,%eax
   1794c:	jne    17996 <png_init_palette_transformations+0x76>
   1794e:	leaveq 
   1794f:	retq   
   17950:	mov    $0x1,%esi
   17955:	mov    %rdx,%rax
   17958:	mov    %rax,%rcx
   1795b:	jmp    179bc <png_init_palette_transformations+0x9c>
   1795d:	mov    0x134(%rdi),%esi
   17963:	mov    %rsi,%rcx
   17966:	and    $0xff7fffff,%ecx
   1796c:	mov    %ecx,0x134(%rdi)
   17972:	mov    0x130(%rdi),%ecx
   17978:	and    $0xffffdfff,%ecx
   1797e:	mov    %ecx,0x130(%rdi)
   17984:	test   %eax,%eax
   17986:	jne    1793c <png_init_palette_transformations+0x1c>
   17988:	and    $0xff7ffe7f,%esi
   1798e:	mov    %esi,0x134(%rdi)
   17994:	jmp    1793c <png_init_palette_transformations+0x1c>
   17996:	mov    %rcx,%rax
   17999:	and    $0x1000,%eax
   1799e:	test   %eax,%eax
   179a0:	jne    179d1 <png_init_palette_transformations+0xb1>
   179a2:	leaveq 
   179a3:	retq   
   179a4:	mov    0x2e8(%rdi),%r8
   179ab:	movslq %ecx,%r9
   179ae:	movzbl (%r8,%r9,1),%r8d
   179b3:	cmp    $0xff,%r8b
   179b7:	jne    17a11 <png_init_palette_transformations+0xf1>
   179b9:	add    $0x1,%ecx
   179bc:	movzwl 0x260(%rdi),%r8d
   179c4:	cmp    %r8d,%ecx
   179c7:	jl     179a4 <png_init_palette_transformations+0x84>
   179c9:	mov    %rdx,%rsi
   179cc:	jmpq   17938 <png_init_palette_transformations+0x18>
   179d1:	movzbl 0x27c(%rdi),%eax
   179d8:	lea    (%rax,%rax,2),%rax
   179dc:	add    0x250(%rdi),%rax
   179e3:	movzbl (%rax),%esi
   179e6:	mov    %si,0x27e(%rdi)
   179ed:	movzbl 0x1(%rax),%esi
   179f1:	mov    %si,0x280(%rdi)
   179f8:	movzbl 0x2(%rax),%eax
   179fc:	mov    %ax,0x282(%rdi)
   17a03:	mov    %rcx,%rax
   17a06:	and    $0x80000,%eax
   17a0b:	test   %eax,%eax
   17a0d:	jne    17a1b <png_init_palette_transformations+0xfb>
   17a0f:	leaveq 
   17a10:	retq   
   17a11:	test   %r8b,%r8b
   17a14:	jne    17a27 <png_init_palette_transformations+0x107>
   17a16:	mov    %rsi,%rax
   17a19:	jmp    179b9 <png_init_palette_transformations+0x99>
   17a1b:	and    $0x2000000,%ecx
   17a21:	test   %ecx,%ecx
   17a23:	je     17a2f <png_init_palette_transformations+0x10f>
   17a25:	leaveq 
   17a26:	retq   
   17a27:	mov    %rsi,%rax
   17a2a:	jmpq   17938 <png_init_palette_transformations+0x18>
   17a2f:	movzwl 0x260(%rdi),%esi
   17a36:	jmp    17a4c <png_init_palette_transformations+0x12c>
   17a38:	movslq %edx,%rax
   17a3b:	add    0x2e8(%rdi),%rax
   17a42:	movzbl (%rax),%ecx
   17a45:	not    %ecx
   17a47:	mov    %cl,(%rax)
   17a49:	add    $0x1,%edx
   17a4c:	cmp    %esi,%edx
   17a4e:	jl     17a38 <png_init_palette_transformations+0x118>
   17a50:	leaveq 
   17a51:	retq   
   17a52:	data16 nopw %cs:0x0(%rax,%rax,1)
   17a5d:	nopl   (%rax)

0000000000017a60 <png_init_rgb_transformations>:
   17a60:	push   %rbp
   17a61:	mov    %rsp,%rbp
   17a64:	mov    $0x1,%edx
   17a69:	xor    %ecx,%ecx
   17a6b:	movzbl 0x267(%rdi),%eax
   17a72:	and    $0x4,%eax
   17a75:	test   %eax,%eax
   17a77:	jg     17a7e <png_init_rgb_transformations+0x1e>
   17a79:	mov    %rcx,%rsi
   17a7c:	jmp    17a81 <png_init_rgb_transformations+0x21>
   17a7e:	mov    %rdx,%rsi
   17a81:	movzwl 0x260(%rdi),%eax
   17a88:	test   %ax,%ax
   17a8b:	je     17a90 <png_init_rgb_transformations+0x30>
   17a8d:	mov    %rdx,%rcx
   17a90:	test   %esi,%esi
   17a92:	je     17aa8 <png_init_rgb_transformations+0x48>
   17a94:	mov    0x134(%rdi),%ecx
   17a9a:	mov    %rcx,%rax
   17a9d:	and    $0x100,%eax
   17aa2:	test   %eax,%eax
   17aa4:	jne    17adf <png_init_rgb_transformations+0x7f>
   17aa6:	leaveq 
   17aa7:	retq   
   17aa8:	mov    0x134(%rdi),%edx
   17aae:	mov    %rdx,%rax
   17ab1:	and    $0xff7fffff,%eax
   17ab6:	mov    %eax,0x134(%rdi)
   17abc:	mov    0x130(%rdi),%eax
   17ac2:	and    $0xffffdfff,%eax
   17ac7:	mov    %eax,0x130(%rdi)
   17acd:	test   %ecx,%ecx
   17acf:	jne    17a94 <png_init_rgb_transformations+0x34>
   17ad1:	and    $0xff7ffe7f,%edx
   17ad7:	mov    %edx,0x134(%rdi)
   17add:	jmp    17a94 <png_init_rgb_transformations+0x34>
   17adf:	mov    %rcx,%rax
   17ae2:	and    $0x1000,%eax
   17ae7:	test   %eax,%eax
   17ae9:	jne    17aed <png_init_rgb_transformations+0x8d>
   17aeb:	leaveq 
   17aec:	retq   
   17aed:	movzbl 0x267(%rdi),%eax
   17af4:	and    $0x2,%eax
   17af7:	test   %eax,%eax
   17af9:	je     17afd <png_init_rgb_transformations+0x9d>
   17afb:	leaveq 
   17afc:	retq   
   17afd:	movzwl 0x284(%rdi),%edx
   17b04:	movzwl 0x2f8(%rdi),%eax
   17b0b:	movzbl 0x268(%rdi),%esi
   17b12:	cmp    $0x1,%sil
   17b16:	jbe    17b36 <png_init_rgb_transformations+0xd6>
   17b18:	cmp    $0x2,%sil
   17b1c:	je     17b75 <png_init_rgb_transformations+0x115>
   17b1e:	cmp    $0x4,%sil
   17b22:	jne    17b54 <png_init_rgb_transformations+0xf4>
   17b24:	mov    %rax,%rsi
   17b27:	shl    $0x4,%esi
   17b2a:	add    %esi,%eax
   17b2c:	mov    %rdx,%rsi
   17b2f:	shl    $0x4,%esi
   17b32:	add    %esi,%edx
   17b34:	jmp    17b54 <png_init_rgb_transformations+0xf4>
   17b36:	cmp    $0x1,%sil
   17b3a:	jne    17b54 <png_init_rgb_transformations+0xf4>
   17b3c:	mov    %rax,%rsi
   17b3f:	shl    $0x8,%esi
   17b42:	sub    %ax,%si
   17b45:	mov    %rdx,%rax
   17b48:	shl    $0x8,%eax
   17b4b:	sub    %dx,%ax
   17b4e:	mov    %rax,%rdx
   17b51:	mov    %rsi,%rax
   17b54:	mov    %dx,0x282(%rdi)
   17b5b:	mov    %dx,0x280(%rdi)
   17b62:	mov    %dx,0x27e(%rdi)
   17b69:	and    $0x2000000,%ecx
   17b6f:	test   %ecx,%ecx
   17b71:	je     17b8d <png_init_rgb_transformations+0x12d>
   17b73:	leaveq 
   17b74:	retq   
   17b75:	mov    %rax,%rsi
   17b78:	shl    $0x4,%esi
   17b7b:	add    %esi,%eax
   17b7d:	lea    (%rax,%rax,4),%eax
   17b80:	mov    %rdx,%rsi
   17b83:	shl    $0x4,%esi
   17b86:	add    %esi,%edx
   17b88:	lea    (%rdx,%rdx,4),%edx
   17b8b:	jmp    17b54 <png_init_rgb_transformations+0xf4>
   17b8d:	mov    %ax,0x2f6(%rdi)
   17b94:	mov    %ax,0x2f4(%rdi)
   17b9b:	mov    %ax,0x2f2(%rdi)
   17ba2:	leaveq 
   17ba3:	retq   
   17ba4:	data16 nopw %cs:0x0(%rax,%rax,1)
   17baf:	nop

0000000000017bb0 <png_do_unpack>:
   17bb0:	push   %rbp
   17bb1:	mov    %rsp,%rbp
   17bb4:	movzbl 0x11(%rdi),%ecx
   17bb8:	cmp    $0x7,%cl
   17bbb:	jbe    17bbf <png_do_unpack+0xf>
   17bbd:	leaveq 
   17bbe:	retq   
   17bbf:	mov    (%rdi),%eax
   17bc1:	xor    %edx,%edx
   17bc3:	cmp    $0x1,%cl
   17bc6:	jbe    17bfe <png_do_unpack+0x4e>
   17bc8:	cmp    $0x2,%cl
   17bcb:	je     17c25 <png_do_unpack+0x75>
   17bcd:	cmp    $0x4,%cl
   17bd0:	jne    17c4a <png_do_unpack+0x9a>
   17bd2:	mov    $0xfffffffe,%ecx
   17bd7:	sub    %eax,%ecx
   17bd9:	and    $0x1,%ecx
   17bdc:	neg    %ecx
   17bde:	and    $0x4,%ecx
   17be1:	lea    -0x1(%rax),%r8d
   17be5:	shr    %r8d
   17be8:	mov    %r8d,%r8d
   17beb:	add    %rsi,%r8
   17bee:	lea    -0x1(%rsi,%rax,1),%r10
   17bf3:	mov    $0x4,%r9d
   17bf9:	mov    %rdx,%r11
   17bfc:	jmp    17c75 <png_do_unpack+0xc5>
   17bfe:	cmp    $0x1,%cl
   17c01:	jne    17c4a <png_do_unpack+0x9a>
   17c03:	mov    $0xfffffff8,%ecx
   17c08:	sub    %eax,%ecx
   17c0a:	and    $0x7,%ecx
   17c0d:	lea    -0x1(%rax),%r8d
   17c11:	shr    $0x3,%r8d
   17c15:	mov    %r8d,%r8d
   17c18:	add    %rsi,%r8
   17c1b:	lea    -0x1(%rsi,%rax,1),%r9
   17c20:	mov    %rdx,%r10
   17c23:	jmp    17ca0 <png_do_unpack+0xf0>
   17c25:	lea    -0x1(%rax),%ecx
   17c28:	shr    $0x2,%ecx
   17c2b:	mov    %ecx,%ecx
   17c2d:	lea    (%rsi,%rcx,1),%r8
   17c31:	mov    $0xfffffffc,%ecx
   17c36:	sub    %eax,%ecx
   17c38:	and    $0x3,%ecx
   17c3b:	add    %ecx,%ecx
   17c3d:	lea    -0x1(%rsi,%rax,1),%r9
   17c42:	mov    %rdx,%r10
   17c45:	jmpq   17ccb <png_do_unpack+0x11b>
   17c4a:	movb   $0x8,0x11(%rdi)
   17c4e:	movzbl 0x12(%rdi),%edx
   17c52:	mov    %rdx,%rcx
   17c55:	shl    $0x3,%ecx
   17c58:	mov    %cl,0x13(%rdi)
   17c5b:	imul   %edx,%eax
   17c5e:	mov    %eax,%eax
   17c60:	mov    %rax,0x8(%rdi)
   17c64:	leaveq 
   17c65:	retq   
   17c66:	add    $0xffffffffffffffff,%r8
   17c6a:	mov    %rdx,%rcx
   17c6d:	add    $0xffffffffffffffff,%r10
   17c71:	add    $0x1,%r11d
   17c75:	cmp    %eax,%r11d
   17c78:	jae    17c4a <png_do_unpack+0x9a>
   17c7a:	movzbl (%r8),%esi
   17c7e:	shr    %cl,%esi
   17c80:	and    $0xf,%sil
   17c84:	mov    %sil,(%r10)
   17c87:	cmp    $0x4,%ecx
   17c8a:	je     17c66 <png_do_unpack+0xb6>
   17c8c:	mov    %r9,%rcx
   17c8f:	jmp    17c6d <png_do_unpack+0xbd>
   17c91:	add    $0xffffffffffffffff,%r8
   17c95:	mov    %rdx,%rcx
   17c98:	add    $0xffffffffffffffff,%r9
   17c9c:	add    $0x1,%r10d
   17ca0:	cmp    %r10d,%eax
   17ca3:	jbe    17c4a <png_do_unpack+0x9a>
   17ca5:	movzbl (%r8),%esi
   17ca9:	shr    %cl,%esi
   17cab:	and    $0x1,%sil
   17caf:	mov    %sil,(%r9)
   17cb2:	cmp    $0x7,%ecx
   17cb5:	je     17c91 <png_do_unpack+0xe1>
   17cb7:	add    $0x1,%ecx
   17cba:	jmp    17c98 <png_do_unpack+0xe8>
   17cbc:	add    $0xffffffffffffffff,%r8
   17cc0:	mov    %rdx,%rcx
   17cc3:	add    $0xffffffffffffffff,%r9
   17cc7:	add    $0x1,%r10d
   17ccb:	cmp    %r10d,%eax
   17cce:	jbe    17c4a <png_do_unpack+0x9a>
   17cd4:	movzbl (%r8),%esi
   17cd8:	shr    %cl,%esi
   17cda:	and    $0x3,%sil
   17cde:	mov    %sil,(%r9)
   17ce1:	cmp    $0x6,%ecx
   17ce4:	je     17cbc <png_do_unpack+0x10c>
   17ce6:	add    $0x2,%ecx
   17ce9:	jmp    17cc3 <png_do_unpack+0x113>
   17ceb:	nopl   0x0(%rax,%rax,1)

0000000000017cf0 <png_do_unshift>:
   17cf0:	push   %rbp
   17cf1:	mov    %rsp,%rbp
   17cf4:	sub    $0x20,%rsp
   17cf8:	movzbl 0x10(%rdi),%eax
   17cfc:	cmp    $0x3,%al
   17cfe:	jne    17d02 <png_do_unshift+0x12>
   17d00:	leaveq 
   17d01:	retq   
   17d02:	movzbl 0x11(%rdi),%r11d
   17d07:	mov    $0x4,%ecx
   17d0c:	mov    $0x1,%r10d
   17d12:	mov    %rax,%r8
   17d15:	and    $0x2,%r8d
   17d19:	test   %r8d,%r8d
   17d1c:	jg     17d38 <png_do_unshift+0x48>
   17d1e:	movzbl 0x3(%rdx),%r8d
   17d23:	neg    %r8d
   17d26:	add    %r11d,%r8d
   17d29:	mov    %r8d,-0x18(%rbp)
   17d2d:	mov    $0x2,%r9d
   17d33:	mov    %r10,%r8
   17d36:	jmp    17d72 <png_do_unshift+0x82>
   17d38:	movzbl (%rdx),%r8d
   17d3c:	neg    %r8d
   17d3f:	add    %r11d,%r8d
   17d42:	mov    %r8d,-0x18(%rbp)
   17d46:	movzbl 0x1(%rdx),%r8d
   17d4b:	neg    %r8d
   17d4e:	add    %r11d,%r8d
   17d51:	mov    %r8d,-0x14(%rbp)
   17d55:	movzbl 0x2(%rdx),%r8d
   17d5a:	neg    %r8d
   17d5d:	add    %r11d,%r8d
   17d60:	mov    %r8d,-0x10(%rbp)
   17d64:	mov    %rcx,%r9
   17d67:	mov    $0xc,%ecx
   17d6c:	mov    $0x3,%r8d
   17d72:	mov    %rsi,-0x8(%rbp)
   17d76:	xor    %esi,%esi
   17d78:	and    $0x4,%eax
   17d7b:	test   %eax,%eax
   17d7d:	jg     17d87 <png_do_unshift+0x97>
   17d7f:	mov    %rsi,%rax
   17d82:	mov    %rax,%rcx
   17d85:	jmp    17dab <png_do_unshift+0xbb>
   17d87:	movzbl 0x4(%rdx),%eax
   17d8b:	neg    %eax
   17d8d:	add    %r11d,%eax
   17d90:	mov    %eax,-0x18(%rbp,%rcx,1)
   17d94:	mov    %r9,%r8
   17d97:	mov    %rsi,%rax
   17d9a:	mov    %rax,%rcx
   17d9d:	jmp    17dab <png_do_unshift+0xbb>
   17d9f:	movl   $0x0,-0x18(%rbp,%r9,4)
   17da8:	add    $0x1,%ecx
   17dab:	cmp    %ecx,%r8d
   17dae:	jg     17db6 <png_do_unshift+0xc6>
   17db0:	test   %eax,%eax
   17db2:	jne    17dcc <png_do_unshift+0xdc>
   17db4:	leaveq 
   17db5:	retq   
   17db6:	movslq %ecx,%r9
   17db9:	movslq -0x18(%rbp,%r9,4),%rdx
   17dbe:	test   %edx,%edx
   17dc0:	jle    17d9f <png_do_unshift+0xaf>
   17dc2:	cmp    %r11d,%edx
   17dc5:	jge    17d9f <png_do_unshift+0xaf>
   17dc7:	mov    %r10,%rax
   17dca:	jmp    17da8 <png_do_unshift+0xb8>
   17dcc:	cmp    $0x7,%r11b
   17dd0:	jbe    17de0 <png_do_unshift+0xf0>
   17dd2:	cmp    $0x8,%r11b
   17dd6:	je     17dee <png_do_unshift+0xfe>
   17dd8:	cmp    $0x10,%r11b
   17ddc:	je     17dfe <png_do_unshift+0x10e>
   17dde:	leaveq 
   17ddf:	retq   
   17de0:	cmp    $0x2,%r11b
   17de4:	je     17e11 <png_do_unshift+0x121>
   17de6:	cmp    $0x4,%r11b
   17dea:	je     17e21 <png_do_unshift+0x131>
   17dec:	leaveq 
   17ded:	retq   
   17dee:	mov    -0x8(%rbp),%rdx
   17df2:	mov    0x8(%rdi),%rdi
   17df6:	add    %rdx,%rdi
   17df9:	mov    %rsi,%rax
   17dfc:	jmp    17e63 <png_do_unshift+0x173>
   17dfe:	mov    -0x8(%rbp),%r9
   17e02:	mov    %r9,%rdx
   17e05:	add    0x8(%rdi),%rdx
   17e09:	mov    %rsi,%rax
   17e0c:	jmpq   17e9e <png_do_unshift+0x1ae>
   17e11:	mov    -0x8(%rbp),%rcx
   17e15:	mov    %rcx,%rdx
   17e18:	add    0x8(%rdi),%rdx
   17e1c:	jmpq   17eb2 <png_do_unshift+0x1c2>
   17e21:	mov    -0x8(%rbp),%rdx
   17e25:	mov    %rdx,%rsi
   17e28:	add    0x8(%rdi),%rsi
   17e2c:	mov    -0x18(%rbp),%ecx
   17e2f:	mov    $0xf,%eax
   17e34:	shr    %cl,%eax
   17e36:	mov    %rax,%rdi
   17e39:	shl    $0x4,%edi
   17e3c:	add    %eax,%edi
   17e3e:	jmpq   17ec6 <png_do_unshift+0x1d6>
   17e43:	movzbl (%rdx),%r9d
   17e47:	movslq %eax,%rcx
   17e4a:	mov    -0x18(%rbp,%rcx,4),%ecx
   17e4e:	add    $0x1,%eax
   17e51:	cmp    %eax,%r8d
   17e54:	jg     17e59 <png_do_unshift+0x169>
   17e56:	mov    %rsi,%rax
   17e59:	shr    %cl,%r9d
   17e5c:	mov    %r9b,(%rdx)
   17e5f:	add    $0x1,%rdx
   17e63:	cmp    %rdi,%rdx
   17e66:	jb     17e43 <png_do_unshift+0x153>
   17e68:	leaveq 
   17e69:	retq   
   17e6a:	movzbl 0x1(%r9),%r10d
   17e6f:	movzbl (%r9),%edi
   17e73:	movslq %eax,%rcx
   17e76:	mov    -0x18(%rbp,%rcx,4),%ecx
   17e7a:	add    $0x1,%eax
   17e7d:	cmp    %eax,%r8d
   17e80:	jg     17e85 <png_do_unshift+0x195>
   17e82:	mov    %rsi,%rax
   17e85:	shl    $0x8,%edi
   17e88:	add    %r10d,%edi
   17e8b:	shr    %cl,%edi
   17e8d:	mov    %rdi,%rcx
   17e90:	shr    $0x8,%ecx
   17e93:	mov    %cl,(%r9)
   17e96:	mov    %dil,0x1(%r9)
   17e9a:	add    $0x2,%r9
   17e9e:	cmp    %rdx,%r9
   17ea1:	jb     17e6a <png_do_unshift+0x17a>
   17ea3:	leaveq 
   17ea4:	retq   
   17ea5:	movzbl (%rcx),%eax
   17ea8:	shr    %eax
   17eaa:	and    $0x55,%al
   17eac:	mov    %al,(%rcx)
   17eae:	add    $0x1,%rcx
   17eb2:	cmp    %rdx,%rcx
   17eb5:	jb     17ea5 <png_do_unshift+0x1b5>
   17eb7:	leaveq 
   17eb8:	retq   
   17eb9:	movzbl (%rdx),%eax
   17ebc:	shr    %cl,%eax
   17ebe:	and    %edi,%eax
   17ec0:	mov    %al,(%rdx)
   17ec2:	add    $0x1,%rdx
   17ec6:	cmp    %rsi,%rdx
   17ec9:	jb     17eb9 <png_do_unshift+0x1c9>
   17ecb:	leaveq 
   17ecc:	retq   
   17ecd:	nopl   (%rax)

0000000000017ed0 <png_do_scale_16_to_8>:
   17ed0:	push   %rbp
   17ed1:	mov    %rsp,%rbp
   17ed4:	movzbl 0x11(%rdi),%eax
   17ed8:	cmp    $0x10,%al
   17eda:	je     17ede <png_do_scale_16_to_8+0xe>
   17edc:	leaveq 
   17edd:	retq   
   17ede:	mov    %rsi,%rdx
   17ee1:	add    0x8(%rdi),%rdx
   17ee5:	mov    %rsi,%rax
   17ee8:	jmp    17f1a <png_do_scale_16_to_8+0x4a>
   17eea:	movzbl 0x1(%rax),%r8d
   17eef:	movzbl (%rax),%r9d
   17ef3:	mov    %r8,%rcx
   17ef6:	sub    %r9d,%ecx
   17ef9:	shl    $0x10,%ecx
   17efc:	neg    %r8d
   17eff:	add    %r9d,%r8d
   17f02:	lea    0x7fff80(%rcx,%r8,1),%ecx
   17f0a:	sar    $0x18,%ecx
   17f0d:	add    %r9d,%ecx
   17f10:	mov    %cl,(%rsi)
   17f12:	add    $0x2,%rax
   17f16:	add    $0x1,%rsi
   17f1a:	cmp    %rdx,%rax
   17f1d:	jb     17eea <png_do_scale_16_to_8+0x1a>
   17f1f:	movb   $0x8,0x11(%rdi)
   17f23:	movzbl 0x12(%rdi),%eax
   17f27:	mov    %rax,%rcx
   17f2a:	shl    $0x3,%ecx
   17f2d:	mov    %cl,0x13(%rdi)
   17f30:	imul   (%rdi),%eax
   17f33:	mov    %eax,%eax
   17f35:	mov    %rax,0x8(%rdi)
   17f39:	leaveq 
   17f3a:	retq   
   17f3b:	nopl   0x0(%rax,%rax,1)

0000000000017f40 <png_do_chop>:
   17f40:	push   %rbp
   17f41:	mov    %rsp,%rbp
   17f44:	movzbl 0x11(%rdi),%eax
   17f48:	cmp    $0x10,%al
   17f4a:	je     17f4e <png_do_chop+0xe>
   17f4c:	leaveq 
   17f4d:	retq   
   17f4e:	mov    %rsi,%rcx
   17f51:	add    0x8(%rdi),%rcx
   17f55:	mov    %rsi,%rax
   17f58:	jmp    17f67 <png_do_chop+0x27>
   17f5a:	movzbl (%rax),%edx
   17f5d:	mov    %dl,(%rsi)
   17f5f:	add    $0x2,%rax
   17f63:	add    $0x1,%rsi
   17f67:	cmp    %rcx,%rax
   17f6a:	jb     17f5a <png_do_chop+0x1a>
   17f6c:	movb   $0x8,0x11(%rdi)
   17f70:	movzbl 0x12(%rdi),%eax
   17f74:	mov    %rax,%rcx
   17f77:	shl    $0x3,%ecx
   17f7a:	mov    %cl,0x13(%rdi)
   17f7d:	imul   (%rdi),%eax
   17f80:	mov    %eax,%eax
   17f82:	mov    %rax,0x8(%rdi)
   17f86:	leaveq 
   17f87:	retq   
   17f88:	nopl   0x0(%rax,%rax,1)

0000000000017f90 <png_do_read_swap_alpha>:
   17f90:	push   %rbp
   17f91:	mov    %rsp,%rbp
   17f94:	mov    (%rdi),%r9d
   17f97:	xor    %eax,%eax
   17f99:	movzbl 0x10(%rdi),%ecx
   17f9d:	cmp    $0x6,%cl
   17fa0:	je     17fa9 <png_do_read_swap_alpha+0x19>
   17fa2:	cmp    $0x4,%cl
   17fa5:	je     17fb8 <png_do_read_swap_alpha+0x28>
   17fa7:	leaveq 
   17fa8:	retq   
   17fa9:	movzbl 0x11(%rdi),%ecx
   17fad:	cmp    $0x8,%cl
   17fb0:	je     17fca <png_do_read_swap_alpha+0x3a>
   17fb2:	add    0x8(%rdi),%rsi
   17fb6:	jmp    18016 <png_do_read_swap_alpha+0x86>
   17fb8:	movzbl 0x11(%rdi),%ecx
   17fbc:	cmp    $0x8,%cl
   17fbf:	je     1801d <png_do_read_swap_alpha+0x8d>
   17fc1:	add    0x8(%rdi),%rsi
   17fc5:	jmpq   1804a <png_do_read_swap_alpha+0xba>
   17fca:	add    0x8(%rdi),%rsi
   17fce:	jmpq   18076 <png_do_read_swap_alpha+0xe6>
   17fd3:	movzbl -0x3(%rsi),%r8d
   17fd8:	movzbl -0x4(%rsi),%edi
   17fdc:	movzbl -0x5(%rsi),%ecx
   17fe0:	mov    %cl,-0x3(%rsi)
   17fe3:	movzbl -0x6(%rsi),%ecx
   17fe7:	mov    %cl,-0x4(%rsi)
   17fea:	movzbl -0x7(%rsi),%ecx
   17fee:	mov    %cl,-0x5(%rsi)
   17ff1:	lea    -0x8(%rsi),%rdx
   17ff5:	movzbl (%rdx),%ecx
   17ff8:	mov    %cl,-0x6(%rsi)
   17ffb:	movzbl -0x1(%rsi),%ecx
   17fff:	mov    %r8b,-0x1(%rsi)
   18003:	mov    %cl,-0x7(%rsi)
   18006:	movzbl -0x2(%rsi),%ecx
   1800a:	mov    %dil,-0x2(%rsi)
   1800e:	mov    %cl,(%rdx)
   18010:	add    $0x1,%eax
   18013:	mov    %rdx,%rsi
   18016:	cmp    %eax,%r9d
   18019:	ja     17fd3 <png_do_read_swap_alpha+0x43>
   1801b:	leaveq 
   1801c:	retq   
   1801d:	add    0x8(%rdi),%rsi
   18021:	jmp    18093 <png_do_read_swap_alpha+0x103>
   18023:	movzbl -0x3(%rsi),%edx
   18027:	lea    -0x4(%rsi),%rcx
   1802b:	movzbl (%rcx),%r8d
   1802f:	movzbl -0x1(%rsi),%edi
   18033:	mov    %dl,-0x1(%rsi)
   18036:	mov    %dil,-0x3(%rsi)
   1803a:	movzbl -0x2(%rsi),%edx
   1803e:	mov    %r8b,-0x2(%rsi)
   18042:	mov    %dl,(%rcx)
   18044:	add    $0x1,%eax
   18047:	mov    %rcx,%rsi
   1804a:	cmp    %eax,%r9d
   1804d:	ja     18023 <png_do_read_swap_alpha+0x93>
   1804f:	leaveq 
   18050:	retq   
   18051:	movzbl -0x2(%rsi),%edi
   18055:	movzbl -0x3(%rsi),%ecx
   18059:	mov    %cl,-0x2(%rsi)
   1805c:	lea    -0x4(%rsi),%rdx
   18060:	movzbl (%rdx),%ecx
   18063:	mov    %cl,-0x3(%rsi)
   18066:	movzbl -0x1(%rsi),%ecx
   1806a:	mov    %dil,-0x1(%rsi)
   1806e:	mov    %cl,(%rdx)
   18070:	add    $0x1,%eax
   18073:	mov    %rdx,%rsi
   18076:	cmp    %r9d,%eax
   18079:	jb     18051 <png_do_read_swap_alpha+0xc1>
   1807b:	leaveq 
   1807c:	retq   
   1807d:	lea    -0x2(%rsi),%rdi
   18081:	movzbl (%rdi),%edx
   18084:	movzbl -0x1(%rsi),%ecx
   18088:	mov    %dl,-0x1(%rsi)
   1808b:	mov    %cl,(%rdi)
   1808d:	add    $0x1,%eax
   18090:	mov    %rdi,%rsi
   18093:	cmp    %eax,%r9d
   18096:	ja     1807d <png_do_read_swap_alpha+0xed>
   18098:	leaveq 
   18099:	retq   
   1809a:	nopw   0x0(%rax,%rax,1)

00000000000180a0 <png_do_read_invert_alpha>:
   180a0:	push   %rbp
   180a1:	mov    %rsp,%rbp
   180a4:	mov    (%rdi),%r8d
   180a7:	xor    %eax,%eax
   180a9:	movzbl 0x10(%rdi),%ecx
   180ad:	cmp    $0x6,%cl
   180b0:	je     180b9 <png_do_read_invert_alpha+0x19>
   180b2:	cmp    $0x4,%cl
   180b5:	je     180c8 <png_do_read_invert_alpha+0x28>
   180b7:	leaveq 
   180b8:	retq   
   180b9:	movzbl 0x11(%rdi),%ecx
   180bd:	cmp    $0x8,%cl
   180c0:	je     180d7 <png_do_read_invert_alpha+0x37>
   180c2:	add    0x8(%rdi),%rsi
   180c6:	jmp    180fb <png_do_read_invert_alpha+0x5b>
   180c8:	movzbl 0x11(%rdi),%ecx
   180cc:	cmp    $0x8,%cl
   180cf:	je     18102 <png_do_read_invert_alpha+0x62>
   180d1:	add    0x8(%rdi),%rsi
   180d5:	jmp    18126 <png_do_read_invert_alpha+0x86>
   180d7:	mov    0x8(%rdi),%rcx
   180db:	lea    -0x1(%rcx,%rsi,1),%rcx
   180e0:	jmp    1813b <png_do_read_invert_alpha+0x9b>
   180e2:	movzbl -0x1(%rsi),%ecx
   180e6:	not    %ecx
   180e8:	mov    %cl,-0x1(%rsi)
   180eb:	movzbl -0x2(%rsi),%ecx
   180ef:	not    %ecx
   180f1:	mov    %cl,-0x2(%rsi)
   180f4:	add    $0x1,%eax
   180f7:	add    $0xfffffffffffffff8,%rsi
   180fb:	cmp    %eax,%r8d
   180fe:	ja     180e2 <png_do_read_invert_alpha+0x42>
   18100:	leaveq 
   18101:	retq   
   18102:	mov    0x8(%rdi),%rcx
   18106:	lea    -0x1(%rsi,%rcx,1),%rcx
   1810b:	jmp    18150 <png_do_read_invert_alpha+0xb0>
   1810d:	movzbl -0x1(%rsi),%ecx
   18111:	not    %ecx
   18113:	mov    %cl,-0x1(%rsi)
   18116:	movzbl -0x2(%rsi),%ecx
   1811a:	not    %ecx
   1811c:	mov    %cl,-0x2(%rsi)
   1811f:	add    $0x1,%eax
   18122:	add    $0xfffffffffffffffc,%rsi
   18126:	cmp    %eax,%r8d
   18129:	ja     1810d <png_do_read_invert_alpha+0x6d>
   1812b:	leaveq 
   1812c:	retq   
   1812d:	movzbl (%rcx),%edx
   18130:	not    %edx
   18132:	mov    %dl,(%rcx)
   18134:	add    $0x1,%eax
   18137:	add    $0xfffffffffffffffc,%rcx
   1813b:	cmp    %r8d,%eax
   1813e:	jb     1812d <png_do_read_invert_alpha+0x8d>
   18140:	leaveq 
   18141:	retq   
   18142:	movzbl (%rcx),%edx
   18145:	not    %edx
   18147:	mov    %dl,(%rcx)
   18149:	add    $0x1,%eax
   1814c:	add    $0xfffffffffffffffe,%rcx
   18150:	cmp    %eax,%r8d
   18153:	ja     18142 <png_do_read_invert_alpha+0xa2>
   18155:	leaveq 
   18156:	retq   
   18157:	nopw   0x0(%rax,%rax,1)

0000000000018160 <png_do_read_filler>:
   18160:	push   %rbp
   18161:	mov    %rsp,%rbp
   18164:	mov    (%rdi),%r9d
   18167:	mov    %rdx,%r11
   1816a:	shr    $0x8,%r11d
   1816e:	mov    $0x1,%r8d
   18174:	xor    %eax,%eax
   18176:	movzbl 0x10(%rdi),%r10d
   1817b:	test   %r10b,%r10b
   1817e:	je     18188 <png_do_read_filler+0x28>
   18180:	cmp    $0x2,%r10b
   18184:	je     1819b <png_do_read_filler+0x3b>
   18186:	leaveq 
   18187:	retq   
   18188:	movzbl 0x11(%rdi),%r10d
   1818d:	cmp    $0x8,%r10b
   18191:	je     181ae <png_do_read_filler+0x4e>
   18193:	cmp    $0x10,%r10b
   18197:	je     181c2 <png_do_read_filler+0x62>
   18199:	leaveq 
   1819a:	retq   
   1819b:	movzbl 0x11(%rdi),%r10d
   181a0:	cmp    $0x8,%r10b
   181a4:	je     181dd <png_do_read_filler+0x7d>
   181a6:	cmp    $0x10,%r10b
   181aa:	je     181fb <png_do_read_filler+0x9b>
   181ac:	leaveq 
   181ad:	retq   
   181ae:	and    $0x80,%ecx
   181b4:	test   %ecx,%ecx
   181b6:	jne    1821a <png_do_read_filler+0xba>
   181b8:	lea    (%r9,%rsi,1),%rcx
   181bc:	lea    (%rsi,%r9,2),%rsi
   181c0:	jmp    1823c <png_do_read_filler+0xdc>
   181c2:	and    $0x80,%ecx
   181c8:	test   %ecx,%ecx
   181ca:	jne    18255 <png_do_read_filler+0xf5>
   181d0:	lea    (%rsi,%r9,2),%rcx
   181d4:	lea    (%rsi,%r9,4),%rsi
   181d8:	jmpq   18284 <png_do_read_filler+0x124>
   181dd:	and    $0x80,%ecx
   181e3:	test   %ecx,%ecx
   181e5:	jne    1829e <png_do_read_filler+0x13e>
   181eb:	lea    (%r9,%r9,2),%rcx
   181ef:	add    %rsi,%rcx
   181f2:	lea    (%r9,%rcx,1),%rsi
   181f6:	jmpq   182d5 <png_do_read_filler+0x175>
   181fb:	and    $0x80,%ecx
   18201:	test   %ecx,%ecx
   18203:	jne    182ef <png_do_read_filler+0x18f>
   18209:	lea    (%r9,%r9,2),%rcx
   1820d:	lea    (%rsi,%rcx,2),%rcx
   18211:	lea    (%rcx,%r9,2),%rsi
   18215:	jmpq   18346 <png_do_read_filler+0x1e6>
   1821a:	lea    (%rsi,%r9,2),%rax
   1821e:	lea    (%r9,%rsi,1),%rcx
   18222:	jmpq   18375 <png_do_read_filler+0x215>
   18227:	add    $0xffffffffffffffff,%rcx
   1822b:	movzbl (%rcx),%r8d
   1822f:	mov    %r8b,-0x1(%rsi)
   18233:	add    $0xfffffffffffffffe,%rsi
   18237:	mov    %dl,(%rsi)
   18239:	add    $0x1,%eax
   1823c:	cmp    %eax,%r9d
   1823f:	ja     18227 <png_do_read_filler+0xc7>
   18241:	movb   $0x2,0x12(%rdi)
   18245:	movb   $0x10,0x13(%rdi)
   18249:	lea    (%r9,%r9,1),%eax
   1824d:	mov    %eax,%eax
   1824f:	mov    %rax,0x8(%rdi)
   18253:	leaveq 
   18254:	retq   
   18255:	lea    (%rsi,%r9,4),%rax
   18259:	lea    (%rsi,%r9,2),%rcx
   1825d:	jmpq   183b2 <png_do_read_filler+0x252>
   18262:	movzbl -0x1(%rcx),%r8d
   18267:	mov    %r8b,-0x1(%rsi)
   1826b:	add    $0xfffffffffffffffe,%rcx
   1826f:	movzbl (%rcx),%r8d
   18273:	mov    %r8b,-0x2(%rsi)
   18277:	mov    %dl,-0x3(%rsi)
   1827a:	add    $0xfffffffffffffffc,%rsi
   1827e:	mov    %r11b,(%rsi)
   18281:	add    $0x1,%eax
   18284:	cmp    %eax,%r9d
   18287:	ja     18262 <png_do_read_filler+0x102>
   18289:	movb   $0x2,0x12(%rdi)
   1828d:	movb   $0x20,0x13(%rdi)
   18291:	shl    $0x2,%r9d
   18295:	mov    %r9d,%eax
   18298:	mov    %rax,0x8(%rdi)
   1829c:	leaveq 
   1829d:	retq   
   1829e:	lea    (%r9,%r9,2),%rax
   182a2:	add    %rsi,%rax
   182a5:	lea    (%r9,%rax,1),%rcx
   182a9:	jmpq   183f8 <png_do_read_filler+0x298>
   182ae:	movzbl -0x1(%rcx),%r8d
   182b3:	mov    %r8b,-0x1(%rsi)
   182b7:	movzbl -0x2(%rcx),%r8d
   182bc:	mov    %r8b,-0x2(%rsi)
   182c0:	add    $0xfffffffffffffffd,%rcx
   182c4:	movzbl (%rcx),%r8d
   182c8:	mov    %r8b,-0x3(%rsi)
   182cc:	add    $0xfffffffffffffffc,%rsi
   182d0:	mov    %dl,(%rsi)
   182d2:	add    $0x1,%eax
   182d5:	cmp    %eax,%r9d
   182d8:	ja     182ae <png_do_read_filler+0x14e>
   182da:	movb   $0x4,0x12(%rdi)
   182de:	movb   $0x20,0x13(%rdi)
   182e2:	shl    $0x2,%r9d
   182e6:	mov    %r9d,%eax
   182e9:	mov    %rax,0x8(%rdi)
   182ed:	leaveq 
   182ee:	retq   
   182ef:	lea    (%r9,%r9,2),%rax
   182f3:	lea    (%rsi,%rax,2),%rax
   182f7:	lea    (%rax,%r9,2),%rcx
   182fb:	jmpq   18456 <png_do_read_filler+0x2f6>
   18300:	movzbl -0x1(%rcx),%r8d
   18305:	mov    %r8b,-0x1(%rsi)
   18309:	movzbl -0x2(%rcx),%r8d
   1830e:	mov    %r8b,-0x2(%rsi)
   18312:	movzbl -0x3(%rcx),%r8d
   18317:	mov    %r8b,-0x3(%rsi)
   1831b:	movzbl -0x4(%rcx),%r8d
   18320:	mov    %r8b,-0x4(%rsi)
   18324:	movzbl -0x5(%rcx),%r8d
   18329:	mov    %r8b,-0x5(%rsi)
   1832d:	add    $0xfffffffffffffffa,%rcx
   18331:	movzbl (%rcx),%r8d
   18335:	mov    %r8b,-0x6(%rsi)
   18339:	mov    %dl,-0x7(%rsi)
   1833c:	add    $0xfffffffffffffff8,%rsi
   18340:	mov    %r11b,(%rsi)
   18343:	add    $0x1,%eax
   18346:	cmp    %eax,%r9d
   18349:	ja     18300 <png_do_read_filler+0x1a0>
   1834b:	movb   $0x4,0x12(%rdi)
   1834f:	movb   $0x40,0x13(%rdi)
   18353:	shl    $0x3,%r9d
   18357:	mov    %r9d,%eax
   1835a:	mov    %rax,0x8(%rdi)
   1835e:	leaveq 
   1835f:	retq   
   18360:	mov    %dl,-0x1(%rax)
   18363:	add    $0xfffffffffffffffe,%rax
   18367:	add    $0xffffffffffffffff,%rcx
   1836b:	movzbl (%rcx),%esi
   1836e:	mov    %sil,(%rax)
   18371:	add    $0x1,%r8d
   18375:	cmp    %r9d,%r8d
   18378:	jb     18360 <png_do_read_filler+0x200>
   1837a:	mov    %dl,-0x1(%rax)
   1837d:	movb   $0x2,0x12(%rdi)
   18381:	movb   $0x10,0x13(%rdi)
   18385:	lea    (%r9,%r9,1),%eax
   18389:	mov    %eax,%eax
   1838b:	mov    %rax,0x8(%rdi)
   1838f:	leaveq 
   18390:	retq   
   18391:	mov    %dl,-0x1(%rax)
   18394:	mov    %r11b,-0x2(%rax)
   18398:	movzbl -0x1(%rcx),%esi
   1839c:	mov    %sil,-0x3(%rax)
   183a0:	add    $0xfffffffffffffffc,%rax
   183a4:	add    $0xfffffffffffffffe,%rcx
   183a8:	movzbl (%rcx),%esi
   183ab:	mov    %sil,(%rax)
   183ae:	add    $0x1,%r8d
   183b2:	cmp    %r8d,%r9d
   183b5:	ja     18391 <png_do_read_filler+0x231>
   183b7:	mov    %dl,-0x1(%rax)
   183ba:	mov    %r11b,-0x2(%rax)
   183be:	movb   $0x2,0x12(%rdi)
   183c2:	movb   $0x20,0x13(%rdi)
   183c6:	shl    $0x2,%r9d
   183ca:	mov    %r9d,%eax
   183cd:	mov    %rax,0x8(%rdi)
   183d1:	leaveq 
   183d2:	retq   
   183d3:	mov    %dl,-0x1(%rcx)
   183d6:	movzbl -0x1(%rax),%esi
   183da:	mov    %sil,-0x2(%rcx)
   183de:	movzbl -0x2(%rax),%esi
   183e2:	mov    %sil,-0x3(%rcx)
   183e6:	add    $0xfffffffffffffffc,%rcx
   183ea:	add    $0xfffffffffffffffd,%rax
   183ee:	movzbl (%rax),%esi
   183f1:	mov    %sil,(%rcx)
   183f4:	add    $0x1,%r8d
   183f8:	cmp    %r8d,%r9d
   183fb:	ja     183d3 <png_do_read_filler+0x273>
   183fd:	mov    %dl,-0x1(%rcx)
   18400:	movb   $0x4,0x12(%rdi)
   18404:	movb   $0x20,0x13(%rdi)
   18408:	shl    $0x2,%r9d
   1840c:	mov    %r9d,%eax
   1840f:	mov    %rax,0x8(%rdi)
   18413:	leaveq 
   18414:	retq   
   18415:	mov    %dl,-0x1(%rcx)
   18418:	mov    %r11b,-0x2(%rcx)
   1841c:	movzbl -0x1(%rax),%esi
   18420:	mov    %sil,-0x3(%rcx)
   18424:	movzbl -0x2(%rax),%esi
   18428:	mov    %sil,-0x4(%rcx)
   1842c:	movzbl -0x3(%rax),%esi
   18430:	mov    %sil,-0x5(%rcx)
   18434:	movzbl -0x4(%rax),%esi
   18438:	mov    %sil,-0x6(%rcx)
   1843c:	movzbl -0x5(%rax),%esi
   18440:	mov    %sil,-0x7(%rcx)
   18444:	add    $0xfffffffffffffff8,%rcx
   18448:	add    $0xfffffffffffffffa,%rax
   1844c:	movzbl (%rax),%esi
   1844f:	mov    %sil,(%rcx)
   18452:	add    $0x1,%r8d
   18456:	cmp    %r8d,%r9d
   18459:	ja     18415 <png_do_read_filler+0x2b5>
   1845b:	mov    %dl,-0x1(%rcx)
   1845e:	mov    %r11b,-0x2(%rcx)
   18462:	movb   $0x4,0x12(%rdi)
   18466:	movb   $0x40,0x13(%rdi)
   1846a:	shl    $0x3,%r9d
   1846e:	mov    %r9d,%eax
   18471:	mov    %rax,0x8(%rdi)
   18475:	leaveq 
   18476:	retq   
   18477:	nopw   0x0(%rax,%rax,1)

0000000000018480 <png_do_gray_to_rgb>:
   18480:	push   %rbp
   18481:	mov    %rsp,%rbp
   18484:	mov    (%rdi),%r8d
   18487:	movzbl 0x11(%rdi),%edx
   1848b:	cmp    $0x7,%dl
   1848e:	ja     18492 <png_do_gray_to_rgb+0x12>
   18490:	leaveq 
   18491:	retq   
   18492:	movzbl 0x10(%rdi),%ecx
   18496:	mov    %rcx,%rax
   18499:	and    $0x2,%eax
   1849c:	test   %eax,%eax
   1849e:	je     184a2 <png_do_gray_to_rgb+0x22>
   184a0:	leaveq 
   184a1:	retq   
   184a2:	xor    %eax,%eax
   184a4:	test   %cl,%cl
   184a6:	je     184de <png_do_gray_to_rgb+0x5e>
   184a8:	cmp    $0x4,%cl
   184ab:	je     184f2 <png_do_gray_to_rgb+0x72>
   184ad:	movzbl 0x12(%rdi),%eax
   184b1:	lea    0x2(%rax),%ecx
   184b4:	mov    %cl,0x12(%rdi)
   184b7:	movzbl 0x10(%rdi),%eax
   184bb:	or     $0x2,%al
   184bd:	mov    %al,0x10(%rdi)
   184c0:	movzbl 0x11(%rdi),%eax
   184c4:	imul   %cl
   184c6:	mov    %al,0x13(%rdi)
   184c9:	cmp    $0x7,%al
   184cb:	ja     18506 <png_do_gray_to_rgb+0x86>
   184cd:	movzbl %al,%eax
   184d0:	imul   %r8,%rax
   184d4:	add    $0x7,%rax
   184d8:	shr    $0x3,%rax
   184dc:	jmp    18511 <png_do_gray_to_rgb+0x91>
   184de:	cmp    $0x8,%dl
   184e1:	je     18517 <png_do_gray_to_rgb+0x97>
   184e3:	lea    (%rsi,%r8,2),%rdx
   184e7:	lea    -0x1(%rdx),%rcx
   184eb:	lea    -0x1(%rdx,%r8,4),%rdx
   184f0:	jmp    18561 <png_do_gray_to_rgb+0xe1>
   184f2:	cmp    $0x8,%dl
   184f5:	je     1856b <png_do_gray_to_rgb+0xeb>
   184f7:	lea    -0x1(%rsi,%r8,4),%rcx
   184fc:	lea    -0x1(%rsi,%r8,8),%rdx
   18501:	jmpq   185c3 <png_do_gray_to_rgb+0x143>
   18506:	movzbl %al,%eax
   18509:	shr    $0x3,%rax
   1850d:	imul   %r8,%rax
   18511:	mov    %rax,0x8(%rdi)
   18515:	leaveq 
   18516:	retq   
   18517:	lea    -0x1(%r8,%rsi,1),%rcx
   1851c:	lea    (%r8,%rsi,1),%rdx
   18520:	lea    -0x1(%rdx,%r8,2),%rdx
   18525:	jmpq   185ec <png_do_gray_to_rgb+0x16c>
   1852a:	movzbl (%rcx),%esi
   1852d:	mov    %sil,(%rdx)
   18530:	movzbl -0x1(%rcx),%esi
   18534:	mov    %sil,-0x1(%rdx)
   18538:	movzbl (%rcx),%esi
   1853b:	mov    %sil,-0x2(%rdx)
   1853f:	movzbl -0x1(%rcx),%esi
   18543:	mov    %sil,-0x3(%rdx)
   18547:	movzbl (%rcx),%esi
   1854a:	mov    %sil,-0x4(%rdx)
   1854e:	movzbl -0x1(%rcx),%esi
   18552:	mov    %sil,-0x5(%rdx)
   18556:	add    $0xfffffffffffffffe,%rcx
   1855a:	add    $0xfffffffffffffffa,%rdx
   1855e:	add    $0x1,%eax
   18561:	cmp    %eax,%r8d
   18564:	ja     1852a <png_do_gray_to_rgb+0xaa>
   18566:	jmpq   184ad <png_do_gray_to_rgb+0x2d>
   1856b:	lea    -0x1(%rsi,%r8,2),%rcx
   18570:	lea    -0x1(%rsi,%r8,4),%rdx
   18575:	jmpq   1861f <png_do_gray_to_rgb+0x19f>
   1857a:	movzbl (%rcx),%esi
   1857d:	mov    %sil,(%rdx)
   18580:	movzbl -0x1(%rcx),%esi
   18584:	mov    %sil,-0x1(%rdx)
   18588:	movzbl -0x2(%rcx),%esi
   1858c:	mov    %sil,-0x2(%rdx)
   18590:	movzbl -0x3(%rcx),%esi
   18594:	mov    %sil,-0x3(%rdx)
   18598:	movzbl -0x2(%rcx),%esi
   1859c:	mov    %sil,-0x4(%rdx)
   185a0:	movzbl -0x3(%rcx),%esi
   185a4:	mov    %sil,-0x5(%rdx)
   185a8:	movzbl -0x2(%rcx),%esi
   185ac:	mov    %sil,-0x6(%rdx)
   185b0:	movzbl -0x3(%rcx),%esi
   185b4:	mov    %sil,-0x7(%rdx)
   185b8:	add    $0xfffffffffffffffc,%rcx
   185bc:	add    $0xfffffffffffffff8,%rdx
   185c0:	add    $0x1,%eax
   185c3:	cmp    %r8d,%eax
   185c6:	jb     1857a <png_do_gray_to_rgb+0xfa>
   185c8:	jmpq   184ad <png_do_gray_to_rgb+0x2d>
   185cd:	movzbl (%rcx),%esi
   185d0:	mov    %sil,(%rdx)
   185d3:	movzbl (%rcx),%esi
   185d6:	mov    %sil,-0x1(%rdx)
   185da:	movzbl (%rcx),%esi
   185dd:	mov    %sil,-0x2(%rdx)
   185e1:	add    $0xffffffffffffffff,%rcx
   185e5:	add    $0xfffffffffffffffd,%rdx
   185e9:	add    $0x1,%eax
   185ec:	cmp    %eax,%r8d
   185ef:	ja     185cd <png_do_gray_to_rgb+0x14d>
   185f1:	jmpq   184ad <png_do_gray_to_rgb+0x2d>
   185f6:	movzbl (%rcx),%esi
   185f9:	mov    %sil,(%rdx)
   185fc:	movzbl -0x1(%rcx),%esi
   18600:	mov    %sil,-0x1(%rdx)
   18604:	movzbl -0x1(%rcx),%esi
   18608:	mov    %sil,-0x2(%rdx)
   1860c:	movzbl -0x1(%rcx),%esi
   18610:	mov    %sil,-0x3(%rdx)
   18614:	add    $0xfffffffffffffffe,%rcx
   18618:	add    $0xfffffffffffffffc,%rdx
   1861c:	add    $0x1,%eax
   1861f:	cmp    %eax,%r8d
   18622:	ja     185f6 <png_do_gray_to_rgb+0x176>
   18624:	jmpq   184ad <png_do_gray_to_rgb+0x2d>
   18629:	nopl   0x0(%rax)

0000000000018630 <png_do_rgb_to_gray>:
   18630:	push   %rbp
   18631:	mov    %rsp,%rbp
   18634:	sub    $0x40,%rsp
   18638:	xor    %eax,%eax
   1863a:	movzbl 0x10(%rsi),%r10d
   1863f:	mov    %r10,%rcx
   18642:	and    $0x1,%ecx
   18645:	test   %ecx,%ecx
   18647:	je     1864b <png_do_rgb_to_gray+0x1b>
   18649:	leaveq 
   1864a:	retq   
   1864b:	mov    %r10,%rcx
   1864e:	and    $0x2,%ecx
   18651:	test   %ecx,%ecx
   18653:	jg     18657 <png_do_rgb_to_gray+0x27>
   18655:	leaveq 
   18656:	retq   
   18657:	mov    (%rsi),%r11d
   1865a:	movzwl 0x3d4(%rdi),%r8d
   18662:	movzwl 0x3d2(%rdi),%r9d
   1866a:	mov    $0x1,%ecx
   1866f:	and    $0x4,%r10d
   18673:	test   %r10d,%r10d
   18676:	jg     1867d <png_do_rgb_to_gray+0x4d>
   18678:	mov    %rax,%r10
   1867b:	jmp    18680 <png_do_rgb_to_gray+0x50>
   1867d:	mov    %rcx,%r10
   18680:	mov    %r15,-0x28(%rbp)
   18684:	lea    (%r8,%r9,1),%r15d
   18688:	mov    %r14,-0x20(%rbp)
   1868c:	mov    $0x8000,%r14d
   18692:	sub    %r15d,%r14d
   18695:	movzbl 0x11(%rsi),%r15d
   1869a:	cmp    $0x8,%r15b
   1869e:	je     186c4 <png_do_rgb_to_gray+0x94>
   186a0:	mov    0x2d0(%rdi),%r15
   186a7:	test   %r15,%r15
   186aa:	jne    186eb <png_do_rgb_to_gray+0xbb>
   186ac:	mov    %rbx,-0x8(%rbp)
   186b0:	mov    %r12,-0x10(%rbp)
   186b4:	mov    %r13,-0x18(%rbp)
   186b8:	mov    %rsi,-0x38(%rbp)
   186bc:	mov    %rax,%rbx
   186bf:	mov    %rdx,%rsi
   186c2:	jmp    1872e <png_do_rgb_to_gray+0xfe>
   186c4:	mov    0x2b8(%rdi),%r15
   186cb:	test   %r15,%r15
   186ce:	jne    18776 <png_do_rgb_to_gray+0x146>
   186d4:	mov    %rbx,-0x8(%rbp)
   186d8:	mov    %r12,-0x10(%rbp)
   186dc:	mov    %r13,-0x18(%rbp)
   186e0:	mov    %rax,%rbx
   186e3:	mov    %rdx,%r12
   186e6:	jmpq   187ac <png_do_rgb_to_gray+0x17c>
   186eb:	mov    0x2c8(%rdi),%r15
   186f2:	test   %r15,%r15
   186f5:	jne    187dd <png_do_rgb_to_gray+0x1ad>
   186fb:	mov    %rbx,-0x8(%rbp)
   186ff:	mov    %r12,-0x10(%rbp)
   18703:	mov    %r13,-0x18(%rbp)
   18707:	mov    %rsi,-0x38(%rbp)
   1870b:	mov    %rax,%rbx
   1870e:	mov    %rdx,%rsi
   18711:	jmp    1872e <png_do_rgb_to_gray+0xfe>
   18713:	movzbl (%r12),%r12d
   18718:	mov    %r12b,(%rdi)
   1871b:	movzbl 0x7(%rsi),%edi
   1871f:	mov    %dil,0x3(%rdx)
   18723:	add    $0x8,%rsi
   18727:	add    $0x4,%rdx
   1872b:	add    $0x1,%eax
   1872e:	cmp    %r11d,%eax
   18731:	jb     187f8 <png_do_rgb_to_gray+0x1c8>
   18737:	mov    -0x38(%rbp),%rsi
   1873b:	movzbl 0x12(%rsi),%eax
   1873f:	lea    0xfe(%rax),%ecx
   18745:	mov    %cl,0x12(%rsi)
   18748:	movzbl 0x10(%rsi),%eax
   1874c:	and    $0xfd,%al
   1874e:	mov    %al,0x10(%rsi)
   18751:	movzbl 0x11(%rsi),%eax
   18755:	imul   %cl
   18757:	mov    %al,0x13(%rsi)
   1875a:	cmp    $0x7,%al
   1875c:	ja     18883 <png_do_rgb_to_gray+0x253>
   18762:	movzbl %al,%eax
   18765:	imul   %r11,%rax
   18769:	add    $0x7,%rax
   1876d:	shr    $0x3,%rax
   18771:	jmpq   1888e <png_do_rgb_to_gray+0x25e>
   18776:	mov    0x2c0(%rdi),%r15
   1877d:	test   %r15,%r15
   18780:	jne    188ab <png_do_rgb_to_gray+0x27b>
   18786:	mov    %rbx,-0x8(%rbp)
   1878a:	mov    %r12,-0x10(%rbp)
   1878e:	mov    %r13,-0x18(%rbp)
   18792:	mov    %rax,%rbx
   18795:	mov    %rdx,%r12
   18798:	jmp    187ac <png_do_rgb_to_gray+0x17c>
   1879a:	movzbl (%rdx),%edx
   1879d:	mov    %dl,0x0(%r13)
   187a1:	add    $0x4,%r12
   187a5:	lea    0x1(%r13),%rdx
   187a9:	add    $0x1,%eax
   187ac:	cmp    %eax,%r11d
   187af:	jbe    1873b <png_do_rgb_to_gray+0x10b>
   187b1:	movzbl 0x2(%r12),%r13d
   187b7:	movzbl 0x1(%r12),%r15d
   187bd:	movzbl (%r12),%edi
   187c2:	cmp    %dil,%r15b
   187c5:	jne    188c6 <png_do_rgb_to_gray+0x296>
   187cb:	cmp    %r13b,%dil
   187ce:	jne    188c6 <png_do_rgb_to_gray+0x296>
   187d4:	lea    0x1(%rdx),%r13
   187d8:	jmpq   188e6 <png_do_rgb_to_gray+0x2b6>
   187dd:	mov    %rbx,-0x8(%rbp)
   187e1:	mov    %r12,-0x10(%rbp)
   187e5:	mov    %r13,-0x18(%rbp)
   187e9:	mov    %rsi,-0x30(%rbp)
   187ed:	mov    %rax,%rbx
   187f0:	mov    %rdx,%rsi
   187f3:	jmpq   1891b <png_do_rgb_to_gray+0x2eb>
   187f8:	movzbl 0x5(%rsi),%r12d
   187fd:	movzbl 0x4(%rsi),%edi
   18801:	shl    $0x8,%edi
   18804:	lea    (%r12,%rdi,1),%r15d
   18808:	movzbl 0x3(%rsi),%r12d
   1880d:	movzbl 0x2(%rsi),%edi
   18811:	shl    $0x8,%edi
   18814:	lea    (%r12,%rdi,1),%r13d
   18818:	movzbl 0x1(%rsi),%r12d
   1881d:	movzbl (%rsi),%edi
   18820:	shl    $0x8,%edi
   18823:	add    %r12d,%edi
   18826:	cmp    %di,%r13w
   1882a:	je     18929 <png_do_rgb_to_gray+0x2f9>
   18830:	mov    %rcx,%rbx
   18833:	movzwl %r13w,%r12d
   18837:	imul   %r8d,%r12d
   1883b:	movzwl %di,%edi
   1883e:	imul   %r9d,%edi
   18842:	add    %edi,%r12d
   18845:	movzwl %r15w,%edi
   18849:	imul   %r14d,%edi
   1884d:	lea    0x4000(%rdi,%r12,1),%edi
   18855:	shr    $0xf,%edi
   18858:	movzwl %di,%r12d
   1885c:	shr    $0x8,%r12d
   18860:	test   %r10d,%r10d
   18863:	mov    %r12b,(%rdx)
   18866:	mov    %dil,0x1(%rdx)
   1886a:	lea    0x6(%rsi),%r12
   1886e:	lea    0x2(%rdx),%rdi
   18872:	jg     18713 <png_do_rgb_to_gray+0xe3>
   18878:	mov    %rdi,%rdx
   1887b:	mov    %r12,%rsi
   1887e:	jmpq   1872b <png_do_rgb_to_gray+0xfb>
   18883:	movzbl %al,%eax
   18886:	shr    $0x3,%rax
   1888a:	imul   %r11,%rax
   1888e:	mov    %rax,0x8(%rsi)
   18892:	mov    %rbx,%rax
   18895:	mov    -0x18(%rbp),%r13
   18899:	mov    -0x10(%rbp),%r12
   1889d:	mov    -0x8(%rbp),%rbx
   188a1:	mov    -0x20(%rbp),%r14
   188a5:	mov    -0x28(%rbp),%r15
   188a9:	leaveq 
   188aa:	retq   
   188ab:	mov    %rbx,-0x8(%rbp)
   188af:	mov    %r12,-0x10(%rbp)
   188b3:	mov    %r13,-0x18(%rbp)
   188b7:	mov    %rsi,-0x38(%rbp)
   188bb:	mov    %rax,%rbx
   188be:	mov    %rdx,%rsi
   188c1:	jmpq   1894d <png_do_rgb_to_gray+0x31d>
   188c6:	mov    %r8,%rbx
   188c9:	imul   %r15d,%ebx
   188cd:	imul   %r9d,%edi
   188d1:	add    %edi,%ebx
   188d3:	mov    %r14,%rdi
   188d6:	imul   %r13d,%edi
   188da:	add    %ebx,%edi
   188dc:	shr    $0xf,%edi
   188df:	lea    0x1(%rdx),%r13
   188e3:	mov    %rcx,%rbx
   188e6:	test   %r10d,%r10d
   188e9:	mov    %dil,(%rdx)
   188ec:	lea    0x3(%r12),%rdx
   188f1:	jg     1879a <png_do_rgb_to_gray+0x16a>
   188f7:	mov    %rdx,%r12
   188fa:	mov    %r13,%rdx
   188fd:	jmpq   187a9 <png_do_rgb_to_gray+0x179>
   18902:	movzbl (%rcx),%ecx
   18905:	mov    %cl,(%r12)
   18909:	movzbl 0x7(%rsi),%ecx
   1890d:	mov    %cl,0x3(%rdx)
   18910:	add    $0x8,%rsi
   18914:	add    $0x4,%rdx
   18918:	add    $0x1,%eax
   1891b:	cmp    %eax,%r11d
   1891e:	ja     1895b <png_do_rgb_to_gray+0x32b>
   18920:	mov    -0x30(%rbp),%rsi
   18924:	jmpq   1873b <png_do_rgb_to_gray+0x10b>
   18929:	cmp    %di,%r15w
   1892d:	je     18833 <png_do_rgb_to_gray+0x203>
   18933:	mov    %rcx,%rbx
   18936:	jmpq   18833 <png_do_rgb_to_gray+0x203>
   1893b:	movzbl (%rdx),%edx
   1893e:	mov    %dl,0x0(%r13)
   18942:	add    $0x4,%rsi
   18946:	lea    0x1(%r13),%rdx
   1894a:	add    $0x1,%eax
   1894d:	cmp    %eax,%r11d
   18950:	ja     189c8 <png_do_rgb_to_gray+0x398>
   18952:	mov    -0x38(%rbp),%rsi
   18956:	jmpq   1873b <png_do_rgb_to_gray+0x10b>
   1895b:	movzbl 0x5(%rsi),%r12d
   18960:	movzbl 0x4(%rsi),%ecx
   18964:	shl    $0x8,%ecx
   18967:	add    %ecx,%r12d
   1896a:	movzbl 0x1(%rsi),%r13d
   1896f:	movzbl (%rsi),%ecx
   18972:	shl    $0x8,%ecx
   18975:	add    %ecx,%r13d
   18978:	movzbl 0x3(%rsi),%r15d
   1897d:	movzbl 0x2(%rsi),%ecx
   18981:	shl    $0x8,%ecx
   18984:	add    %ecx,%r15d
   18987:	cmp    %r13w,%r15w
   1898b:	jne    18a03 <png_do_rgb_to_gray+0x3d3>
   1898d:	cmp    %r12w,%r15w
   18991:	jne    18a03 <png_do_rgb_to_gray+0x3d3>
   18993:	mov    0x2b0(%rdi),%r15
   1899a:	test   %r15,%r15
   1899d:	je     18aa9 <png_do_rgb_to_gray+0x479>
   189a3:	movzbl %r13b,%r12d
   189a7:	mov    0x2a0(%rdi),%ecx
   189ad:	shr    %cl,%r12d
   189b0:	movslq %r12d,%rcx
   189b3:	mov    (%r15,%rcx,8),%r12
   189b7:	shr    $0x8,%r13d
   189bb:	movslq %r13d,%rcx
   189be:	movzwl (%r12,%rcx,2),%r12d
   189c3:	jmpq   18aa9 <png_do_rgb_to_gray+0x479>
   189c8:	movzbl 0x2(%rsi),%r15d
   189cd:	movzbl (%rsi),%r12d
   189d1:	movzbl 0x1(%rsi),%r13d
   189d6:	cmp    %r12b,%r13b
   189d9:	jne    18ad2 <png_do_rgb_to_gray+0x4a2>
   189df:	cmp    %r15b,%r12b
   189e2:	jne    18ad2 <png_do_rgb_to_gray+0x4a2>
   189e8:	mov    0x2a8(%rdi),%r13
   189ef:	test   %r13,%r13
   189f2:	je     189fa <png_do_rgb_to_gray+0x3ca>
   189f4:	movzbl 0x0(%r13,%r12,1),%r12d
   189fa:	lea    0x1(%rdx),%r13
   189fe:	jmpq   18b17 <png_do_rgb_to_gray+0x4e7>
   18a03:	mov    0x2a0(%rdi),%ecx
   18a09:	movzbl %r15b,%ebx
   18a0d:	shr    %cl,%ebx
   18a0f:	movslq %ebx,%rbx
   18a12:	mov    %r11,-0x38(%rbp)
   18a16:	mov    0x2d0(%rdi),%r11
   18a1d:	mov    (%r11,%rbx,8),%rbx
   18a21:	shr    $0x8,%r15d
   18a25:	movslq %r15d,%r15
   18a28:	movzwl (%rbx,%r15,2),%ebx
   18a2d:	mov    %r8,%r15
   18a30:	imul   %ebx,%r15d
   18a34:	movzbl %r13b,%ebx
   18a38:	shr    %cl,%ebx
   18a3a:	movslq %ebx,%rbx
   18a3d:	mov    (%r11,%rbx,8),%rbx
   18a41:	shr    $0x8,%r13d
   18a45:	movslq %r13d,%r13
   18a48:	movzwl (%rbx,%r13,2),%ebx
   18a4d:	imul   %r9d,%ebx
   18a51:	lea    (%r15,%rbx,1),%r13d
   18a55:	movzbl %r12b,%ebx
   18a59:	shr    %cl,%ebx
   18a5b:	movslq %ebx,%rbx
   18a5e:	mov    (%r11,%rbx,8),%rbx
   18a62:	shr    $0x8,%r12d
   18a66:	movslq %r12d,%r11
   18a69:	movzwl (%rbx,%r11,2),%ebx
   18a6e:	imul   %r14d,%ebx
   18a72:	lea    0x4000(%rbx,%r13,1),%ebx
   18a7a:	shr    $0xf,%ebx
   18a7d:	movzwl %bx,%ebx
   18a80:	movzbl %bl,%r11d
   18a84:	shr    %cl,%r11d
   18a87:	movslq %r11d,%rcx
   18a8a:	mov    0x2c8(%rdi),%r11
   18a91:	mov    (%r11,%rcx,8),%r11
   18a95:	shr    $0x8,%ebx
   18a98:	movslq %ebx,%rcx
   18a9b:	movzwl (%r11,%rcx,2),%r12d
   18aa0:	mov    -0x38(%rbp),%r11
   18aa4:	mov    $0x1,%ebx
   18aa9:	movzwl %r12w,%ecx
   18aad:	shr    $0x8,%ecx
   18ab0:	test   %r10d,%r10d
   18ab3:	mov    %cl,(%rdx)
   18ab5:	mov    %r12b,0x1(%rdx)
   18ab9:	lea    0x6(%rsi),%rcx
   18abd:	lea    0x2(%rdx),%r12
   18ac1:	jg     18902 <png_do_rgb_to_gray+0x2d2>
   18ac7:	mov    %r12,%rdx
   18aca:	mov    %rcx,%rsi
   18acd:	jmpq   18918 <png_do_rgb_to_gray+0x2e8>
   18ad2:	mov    0x2c0(%rdi),%rbx
   18ad9:	movzbl (%rbx,%r13,1),%r13d
   18ade:	imul   %r8d,%r13d
   18ae2:	movzbl (%rbx,%r12,1),%r12d
   18ae7:	imul   %r9d,%r12d
   18aeb:	add    %r13d,%r12d
   18aee:	movzbl (%r15,%rbx,1),%ebx
   18af3:	imul   %r14d,%ebx
   18af7:	lea    0x4000(%rbx,%r12,1),%ebx
   18aff:	shr    $0xf,%ebx
   18b02:	mov    %ebx,%ebx
   18b04:	mov    0x2b8(%rdi),%r12
   18b0b:	movzbl (%rbx,%r12,1),%r12d
   18b10:	lea    0x1(%rdx),%r13
   18b14:	mov    %rcx,%rbx
   18b17:	test   %r10d,%r10d
   18b1a:	mov    %r12b,(%rdx)
   18b1d:	lea    0x3(%rsi),%rdx
   18b21:	jg     1893b <png_do_rgb_to_gray+0x30b>
   18b27:	mov    %rdx,%rsi
   18b2a:	mov    %r13,%rdx
   18b2d:	jmpq   1894a <png_do_rgb_to_gray+0x31a>
   18b32:	data16 nopw %cs:0x0(%rax,%rax,1)
   18b3d:	nopl   (%rax)

0000000000018b40 <png_do_compose>:
   18b40:	push   %rbp
   18b41:	mov    %rsp,%rbp
   18b44:	sub    $0xb0,%rsp
   18b4b:	mov    %rsi,-0xa8(%rbp)
   18b52:	mov    %rdx,-0xa0(%rbp)
   18b59:	mov    0x2a8(%rdx),%r8
   18b60:	mov    0x2b8(%rdx),%r10
   18b67:	mov    0x2c0(%rdx),%r11
   18b6e:	mov    0x2b0(%rdx),%rsi
   18b75:	mov    0x2c8(%rdx),%r9
   18b7c:	mov    0x2d0(%rdx),%rax
   18b83:	mov    %rax,-0xb0(%rbp)
   18b8a:	mov    0x2a0(%rdx),%ecx
   18b90:	xor    %eax,%eax
   18b92:	mov    %rax,-0x98(%rbp)
   18b99:	mov    $0x1,%eax
   18b9e:	mov    %rax,-0x90(%rbp)
   18ba5:	mov    0x130(%rdx),%eax
   18bab:	and    $0x2000,%eax
   18bb0:	test   %eax,%eax
   18bb2:	je     18bc0 <png_do_compose+0x80>
   18bb4:	pushq  -0x90(%rbp)
   18bba:	popq   -0x98(%rbp)
   18bc0:	mov    (%rdi),%eax
   18bc2:	movzbl 0x10(%rdi),%edx
   18bc6:	cmp    $0x3,%dl
   18bc9:	jbe    18be3 <png_do_compose+0xa3>
   18bcb:	mov    %rcx,-0x90(%rbp)
   18bd2:	mov    $0xff,%ecx
   18bd7:	cmp    $0x4,%dl
   18bda:	je     18bee <png_do_compose+0xae>
   18bdc:	cmp    $0x6,%dl
   18bdf:	je     18c1f <png_do_compose+0xdf>
   18be1:	leaveq 
   18be2:	retq   
   18be3:	test   %dl,%dl
   18be5:	je     18c57 <png_do_compose+0x117>
   18be7:	cmp    $0x2,%dl
   18bea:	je     18c69 <png_do_compose+0x129>
   18bec:	leaveq 
   18bed:	retq   
   18bee:	movzbl 0x11(%rdi),%edx
   18bf2:	cmp    $0x8,%dl
   18bf5:	je     18c9b <png_do_compose+0x15b>
   18bfb:	test   %rsi,%rsi
   18bfe:	jne    18cb9 <png_do_compose+0x179>
   18c04:	mov    $0xffff,%r9d
   18c0a:	mov    -0xa0(%rbp),%r10
   18c11:	xor    %ecx,%ecx
   18c13:	mov    -0xa8(%rbp),%rdx
   18c1a:	jmpq   18cfb <png_do_compose+0x1bb>
   18c1f:	movzbl 0x11(%rdi),%edx
   18c23:	cmp    $0x8,%dl
   18c26:	je     18d05 <png_do_compose+0x1c5>
   18c2c:	test   %rsi,%rsi
   18c2f:	jne    18d23 <png_do_compose+0x1e3>
   18c35:	mov    %r15,-0xb0(%rbp)
   18c3c:	mov    $0xffff,%r9d
   18c42:	mov    -0xa0(%rbp),%r10
   18c49:	xor    %ecx,%ecx
   18c4b:	mov    -0xa8(%rbp),%rdx
   18c52:	jmpq   18da2 <png_do_compose+0x262>
   18c57:	movzbl 0x11(%rdi),%edx
   18c5b:	add    $0xffffffff,%edx
   18c5e:	cmp    $0xf,%edx
   18c61:	jbe    18db3 <png_do_compose+0x273>
   18c67:	leaveq 
   18c68:	retq   
   18c69:	movzbl 0x11(%rdi),%edx
   18c6d:	cmp    $0x8,%dl
   18c70:	je     18dc5 <png_do_compose+0x285>
   18c76:	test   %rsi,%rsi
   18c79:	jne    18de3 <png_do_compose+0x2a3>
   18c7f:	mov    %r15,-0x98(%rbp)
   18c86:	mov    -0xa0(%rbp),%r9
   18c8d:	xor    %ecx,%ecx
   18c8f:	mov    -0xa8(%rbp),%rdx
   18c96:	jmpq   18eb2 <png_do_compose+0x372>
   18c9b:	test   %r11,%r11
   18c9e:	jne    18ec3 <png_do_compose+0x383>
   18ca4:	mov    -0xa0(%rbp),%r9
   18cab:	xor    %edx,%edx
   18cad:	mov    -0xa8(%rbp),%rsi
   18cb4:	jmpq   18ef0 <png_do_compose+0x3b0>
   18cb9:	test   %r9,%r9
   18cbc:	jne    18efa <png_do_compose+0x3ba>
   18cc2:	mov    $0xffff,%r9d
   18cc8:	mov    -0xa0(%rbp),%r10
   18ccf:	xor    %ecx,%ecx
   18cd1:	mov    -0xa8(%rbp),%rdx
   18cd8:	jmp    18cfb <png_do_compose+0x1bb>
   18cda:	movzwl 0x284(%r10),%esi
   18ce2:	shr    $0x8,%esi
   18ce5:	mov    %sil,(%rdx)
   18ce8:	movzbl 0x284(%r10),%esi
   18cf0:	mov    %sil,0x1(%rdx)
   18cf4:	add    $0x1,%ecx
   18cf7:	add    $0x4,%rdx
   18cfb:	cmp    %ecx,%eax
   18cfd:	ja     18f25 <png_do_compose+0x3e5>
   18d03:	leaveq 
   18d04:	retq   
   18d05:	test   %r11,%r11
   18d08:	jne    18f98 <png_do_compose+0x458>
   18d0e:	mov    -0xa0(%rbp),%r9
   18d15:	xor    %edx,%edx
   18d17:	mov    -0xa8(%rbp),%rsi
   18d1e:	jmpq   18fdd <png_do_compose+0x49d>
   18d23:	test   %r9,%r9
   18d26:	jne    18fe7 <png_do_compose+0x4a7>
   18d2c:	mov    %r15,-0xb0(%rbp)
   18d33:	mov    $0xffff,%r9d
   18d39:	mov    -0xa0(%rbp),%r10
   18d40:	xor    %ecx,%ecx
   18d42:	mov    -0xa8(%rbp),%rdx
   18d49:	jmp    18da2 <png_do_compose+0x262>
   18d4b:	movzwl 0x27e(%r10),%esi
   18d53:	shr    $0x8,%esi
   18d56:	mov    %sil,(%rdx)
   18d59:	movzbl 0x27e(%r10),%esi
   18d61:	mov    %sil,0x1(%rdx)
   18d65:	movzwl 0x280(%r10),%esi
   18d6d:	shr    $0x8,%esi
   18d70:	mov    %sil,0x2(%rdx)
   18d74:	movzbl 0x280(%r10),%esi
   18d7c:	mov    %sil,0x3(%rdx)
   18d80:	movzwl 0x282(%r10),%esi
   18d88:	shr    $0x8,%esi
   18d8b:	mov    %sil,0x4(%rdx)
   18d8f:	movzbl 0x282(%r10),%esi
   18d97:	mov    %sil,0x5(%rdx)
   18d9b:	add    $0x1,%ecx
   18d9e:	add    $0x8,%rdx
   18da2:	cmp    %ecx,%eax
   18da4:	ja     19019 <png_do_compose+0x4d9>
   18daa:	mov    -0xb0(%rbp),%r15
   18db1:	leaveq 
   18db2:	retq   
   18db3:	lea    0x154f6(%rip),%rdi        # 2e2b0 <chunks_to_process.34+0x4ab>
   18dba:	movslq (%rdi,%rdx,4),%rdx
   18dbe:	add    %rdi,%rdx
   18dc1:	jmpq   *%rdx
   18dc3:	leaveq 
   18dc4:	retq   
   18dc5:	test   %r8,%r8
   18dc8:	jne    191f6 <png_do_compose+0x6b6>
   18dce:	mov    -0xa0(%rbp),%rsi
   18dd5:	xor    %ecx,%ecx
   18dd7:	mov    -0xa8(%rbp),%rdx
   18dde:	jmpq   19267 <png_do_compose+0x727>
   18de3:	mov    %r15,-0x48(%rbp)
   18de7:	mov    %r13,-0x38(%rbp)
   18deb:	mov    %r14,-0x40(%rbp)
   18def:	mov    -0xa0(%rbp),%r8
   18df6:	xor    %edx,%edx
   18df8:	mov    -0xa8(%rbp),%rdi
   18dff:	jmpq   192ea <png_do_compose+0x7aa>
   18e04:	movzbl 0x2(%rdx),%edi
   18e08:	movzbl 0x3(%rdx),%r15d
   18e0d:	movzbl 0x4(%rdx),%r8d
   18e12:	movzbl 0x5(%rdx),%r10d
   18e17:	movzbl 0x1(%rdx),%r11d
   18e1c:	movzbl (%rdx),%esi
   18e1f:	shl    $0x8,%esi
   18e22:	add    %esi,%r11d
   18e25:	movzwl 0x2f2(%r9),%esi
   18e2d:	cmp    %si,%r11w
   18e31:	jne    18eab <png_do_compose+0x36b>
   18e33:	shl    $0x8,%edi
   18e36:	add    %r15d,%edi
   18e39:	movzwl 0x2f4(%r9),%esi
   18e41:	cmp    %si,%di
   18e44:	jne    18eab <png_do_compose+0x36b>
   18e46:	shl    $0x8,%r8d
   18e4a:	lea    (%r10,%r8,1),%edi
   18e4e:	movzwl 0x2f6(%r9),%esi
   18e56:	cmp    %si,%di
   18e59:	jne    18eab <png_do_compose+0x36b>
   18e5b:	movzwl 0x27e(%r9),%esi
   18e63:	shr    $0x8,%esi
   18e66:	mov    %sil,(%rdx)
   18e69:	movzbl 0x27e(%r9),%esi
   18e71:	mov    %sil,0x1(%rdx)
   18e75:	movzwl 0x280(%r9),%esi
   18e7d:	shr    $0x8,%esi
   18e80:	mov    %sil,0x2(%rdx)
   18e84:	movzbl 0x280(%r9),%esi
   18e8c:	mov    %sil,0x3(%rdx)
   18e90:	movzwl 0x282(%r9),%esi
   18e98:	shr    $0x8,%esi
   18e9b:	mov    %sil,0x4(%rdx)
   18e9f:	movzbl 0x282(%r9),%esi
   18ea7:	mov    %sil,0x5(%rdx)
   18eab:	add    $0x1,%ecx
   18eae:	add    $0x6,%rdx
   18eb2:	cmp    %ecx,%eax
   18eb4:	ja     18e04 <png_do_compose+0x2c4>
   18eba:	mov    -0x98(%rbp),%r15
   18ec1:	leaveq 
   18ec2:	retq   
   18ec3:	test   %r10,%r10
   18ec6:	jne    19300 <png_do_compose+0x7c0>
   18ecc:	mov    -0xa0(%rbp),%r9
   18ed3:	xor    %edx,%edx
   18ed5:	mov    -0xa8(%rbp),%rsi
   18edc:	jmp    18ef0 <png_do_compose+0x3b0>
   18ede:	movzbl 0x284(%r9),%edi
   18ee6:	mov    %dil,(%rsi)
   18ee9:	add    $0x1,%edx
   18eec:	add    $0x2,%rsi
   18ef0:	cmp    %edx,%eax
   18ef2:	ja     1931e <png_do_compose+0x7de>
   18ef8:	leaveq 
   18ef9:	retq   
   18efa:	mov    -0xb0(%rbp),%r8
   18f01:	test   %r8,%r8
   18f04:	jne    19372 <png_do_compose+0x832>
   18f0a:	mov    $0xffff,%r9d
   18f10:	mov    -0xa0(%rbp),%r10
   18f17:	xor    %ecx,%ecx
   18f19:	mov    -0xa8(%rbp),%rdx
   18f20:	jmpq   18cfb <png_do_compose+0x1bb>
   18f25:	movzbl 0x3(%rdx),%edi
   18f29:	movzbl 0x2(%rdx),%esi
   18f2d:	shl    $0x8,%esi
   18f30:	cmp    %si,%di
   18f33:	je     18cda <png_do_compose+0x19a>
   18f39:	add    %edi,%esi
   18f3b:	cmp    $0xfffe,%si
   18f3f:	ja     18cf4 <png_do_compose+0x1b4>
   18f45:	movzwl %si,%esi
   18f48:	mov    %r9,%rdi
   18f4b:	sub    %esi,%edi
   18f4d:	movzwl 0x284(%r10),%r8d
   18f55:	imul   %r8d,%edi
   18f59:	movzbl 0x1(%rdx),%r11d
   18f5e:	movzbl (%rdx),%r8d
   18f62:	shl    $0x8,%r8d
   18f66:	add    %r11d,%r8d
   18f69:	movzwl %r8w,%r8d
   18f6d:	imul   %r8d,%esi
   18f71:	add    %esi,%edi
   18f73:	lea    0x8000(%rdi),%esi
   18f79:	shr    $0x10,%esi
   18f7c:	lea    0x8000(%rsi,%rdi,1),%esi
   18f83:	shr    $0x10,%esi
   18f86:	movzwl %si,%edi
   18f89:	shr    $0x8,%edi
   18f8c:	mov    %dil,(%rdx)
   18f8f:	mov    %sil,0x1(%rdx)
   18f93:	jmpq   18cf4 <png_do_compose+0x1b4>
   18f98:	test   %r10,%r10
   18f9b:	jne    193af <png_do_compose+0x86f>
   18fa1:	mov    -0xa0(%rbp),%r9
   18fa8:	xor    %edx,%edx
   18faa:	mov    -0xa8(%rbp),%rsi
   18fb1:	jmp    18fdd <png_do_compose+0x49d>
   18fb3:	movzbl 0x27e(%r9),%edi
   18fbb:	mov    %dil,(%rsi)
   18fbe:	movzbl 0x280(%r9),%edi
   18fc6:	mov    %dil,0x1(%rsi)
   18fca:	movzbl 0x282(%r9),%edi
   18fd2:	mov    %dil,0x2(%rsi)
   18fd6:	add    $0x1,%edx
   18fd9:	add    $0x4,%rsi
   18fdd:	cmp    %edx,%eax
   18fdf:	ja     193cd <png_do_compose+0x88d>
   18fe5:	leaveq 
   18fe6:	retq   
   18fe7:	mov    -0xb0(%rbp),%r10
   18fee:	test   %r10,%r10
   18ff1:	jne    19488 <png_do_compose+0x948>
   18ff7:	mov    %r15,-0xb0(%rbp)
   18ffe:	mov    $0xffff,%r9d
   19004:	mov    -0xa0(%rbp),%r10
   1900b:	xor    %ecx,%ecx
   1900d:	mov    -0xa8(%rbp),%rdx
   19014:	jmpq   18da2 <png_do_compose+0x262>
   19019:	movzbl 0x7(%rdx),%edi
   1901d:	movzbl 0x6(%rdx),%esi
   19021:	shl    $0x8,%esi
   19024:	cmp    %si,%di
   19027:	je     18d4b <png_do_compose+0x20b>
   1902d:	add    %edi,%esi
   1902f:	cmp    $0xfffe,%si
   19033:	ja     18d9b <png_do_compose+0x25b>
   19039:	movzwl %si,%esi
   1903c:	mov    %r9,%r11
   1903f:	sub    %esi,%r11d
   19042:	movzwl 0x27e(%r10),%edi
   1904a:	mov    %r11,%r15
   1904d:	imul   %edi,%r15d
   19051:	movzbl 0x1(%rdx),%r8d
   19056:	movzbl (%rdx),%edi
   19059:	shl    $0x8,%edi
   1905c:	add    %r8d,%edi
   1905f:	movzwl %di,%edi
   19062:	imul   %esi,%edi
   19065:	lea    (%r15,%rdi,1),%r8d
   19069:	lea    0x8000(%r8),%edi
   19070:	shr    $0x10,%edi
   19073:	lea    0x8000(%rdi,%r8,1),%edi
   1907b:	shr    $0x10,%edi
   1907e:	movzwl %di,%r8d
   19082:	shr    $0x8,%r8d
   19086:	mov    %r8b,(%rdx)
   19089:	mov    %dil,0x1(%rdx)
   1908d:	movzwl 0x280(%r10),%edi
   19095:	imul   %r11d,%edi
   19099:	movzbl 0x3(%rdx),%r15d
   1909e:	movzbl 0x2(%rdx),%r8d
   190a3:	shl    $0x8,%r8d
   190a7:	add    %r15d,%r8d
   190aa:	movzwl %r8w,%r8d
   190ae:	imul   %esi,%r8d
   190b2:	add    %edi,%r8d
   190b5:	lea    0x8000(%r8),%edi
   190bc:	shr    $0x10,%edi
   190bf:	lea    0x8000(%rdi,%r8,1),%edi
   190c7:	shr    $0x10,%edi
   190ca:	movzwl %di,%r8d
   190ce:	shr    $0x8,%r8d
   190d2:	mov    %r8b,0x2(%rdx)
   190d6:	mov    %dil,0x3(%rdx)
   190da:	movzwl 0x282(%r10),%edi
   190e2:	imul   %r11d,%edi
   190e6:	movzbl 0x5(%rdx),%r11d
   190eb:	movzbl 0x4(%rdx),%r8d
   190f0:	shl    $0x8,%r8d
   190f4:	add    %r11d,%r8d
   190f7:	movzwl %r8w,%r8d
   190fb:	imul   %r8d,%esi
   190ff:	add    %esi,%edi
   19101:	lea    0x8000(%rdi),%esi
   19107:	shr    $0x10,%esi
   1910a:	lea    0x8000(%rsi,%rdi,1),%esi
   19111:	shr    $0x10,%esi
   19114:	movzwl %si,%edi
   19117:	shr    $0x8,%edi
   1911a:	mov    %dil,0x4(%rdx)
   1911e:	mov    %sil,0x5(%rdx)
   19122:	jmpq   18d9b <png_do_compose+0x25b>
   19127:	mov    $0x7f7f,%edi
   1912c:	mov    $0x7,%r8d
   19132:	mov    %r15,-0x18(%rbp)
   19136:	mov    %r14,-0x10(%rbp)
   1913a:	mov    -0xa0(%rbp),%r9
   19141:	xor    %esi,%esi
   19143:	mov    -0xa8(%rbp),%rdx
   1914a:	mov    %r8,%rcx
   1914d:	jmpq   194d8 <png_do_compose+0x998>
   19152:	mov    $0x3f3f,%edx
   19157:	mov    $0x6,%esi
   1915c:	test   %r8,%r8
   1915f:	jne    194ea <png_do_compose+0x9aa>
   19165:	mov    %r15,-0x28(%rbp)
   19169:	mov    %r14,-0x20(%rbp)
   1916d:	mov    -0xa0(%rbp),%r9
   19174:	xor    %r8d,%r8d
   19177:	mov    -0xa8(%rbp),%rdi
   1917e:	mov    %rsi,%rcx
   19181:	jmpq   1951a <png_do_compose+0x9da>
   19186:	mov    $0xf0f,%edx
   1918b:	mov    $0x4,%esi
   19190:	test   %r8,%r8
   19193:	jne    1952d <png_do_compose+0x9ed>
   19199:	mov    %r15,-0x38(%rbp)
   1919d:	mov    %r14,-0x30(%rbp)
   191a1:	mov    -0xa0(%rbp),%r9
   191a8:	xor    %r8d,%r8d
   191ab:	mov    -0xa8(%rbp),%rdi
   191b2:	mov    %rsi,%rcx
   191b5:	jmpq   1955d <png_do_compose+0xa1d>
   191ba:	test   %r8,%r8
   191bd:	jne    19570 <png_do_compose+0xa30>
   191c3:	mov    -0xa0(%rbp),%rdi
   191ca:	xor    %ecx,%ecx
   191cc:	mov    -0xa8(%rbp),%rdx
   191d3:	jmpq   195a7 <png_do_compose+0xa67>
   191d8:	test   %rsi,%rsi
   191db:	jne    195ad <png_do_compose+0xa6d>
   191e1:	mov    -0xa0(%rbp),%rdi
   191e8:	xor    %ecx,%ecx
   191ea:	mov    -0xa8(%rbp),%rdx
   191f1:	jmpq   19600 <png_do_compose+0xac0>
   191f6:	mov    -0xa0(%rbp),%rdi
   191fd:	xor    %ecx,%ecx
   191ff:	mov    -0xa8(%rbp),%rdx
   19206:	jmpq   19632 <png_do_compose+0xaf2>
   1920b:	movzbl (%rdx),%r8d
   1920f:	movzwl 0x2f2(%rsi),%edi
   19216:	cmp    %di,%r8w
   1921a:	jne    19260 <png_do_compose+0x720>
   1921c:	movzbl 0x1(%rdx),%edi
   19220:	movzwl 0x2f4(%rsi),%r8d
   19228:	cmp    %r8w,%di
   1922c:	jne    19260 <png_do_compose+0x720>
   1922e:	movzbl 0x2(%rdx),%edi
   19232:	movzwl 0x2f6(%rsi),%r8d
   1923a:	cmp    %r8w,%di
   1923e:	jne    19260 <png_do_compose+0x720>
   19240:	movzbl 0x27e(%rsi),%edi
   19247:	mov    %dil,(%rdx)
   1924a:	movzbl 0x280(%rsi),%edi
   19251:	mov    %dil,0x1(%rdx)
   19255:	movzbl 0x282(%rsi),%edi
   1925c:	mov    %dil,0x2(%rdx)
   19260:	add    $0x1,%ecx
   19263:	add    $0x3,%rdx
   19267:	cmp    %ecx,%eax
   19269:	ja     1920b <png_do_compose+0x6cb>
   1926b:	leaveq 
   1926c:	retq   
   1926d:	movzbl 0x1(%rdi),%r9d
   19272:	shr    %cl,%r9d
   19275:	movslq %r9d,%r9
   19278:	mov    (%rsi,%r9,8),%r10
   1927c:	movzbl (%rdi),%r9d
   19280:	movzwl (%r10,%r9,2),%r10d
   19285:	mov    %r10,%r9
   19288:	shr    $0x8,%r9d
   1928c:	mov    %r9b,(%rdi)
   1928f:	mov    %r10b,0x1(%rdi)
   19293:	movzbl 0x3(%rdi),%r9d
   19298:	shr    %cl,%r9d
   1929b:	movslq %r9d,%r9
   1929e:	mov    (%rsi,%r9,8),%r10
   192a2:	movzbl 0x2(%rdi),%r9d
   192a7:	movzwl (%r10,%r9,2),%r10d
   192ac:	mov    %r10,%r9
   192af:	shr    $0x8,%r9d
   192b3:	mov    %r9b,0x2(%rdi)
   192b7:	mov    %r10b,0x3(%rdi)
   192bb:	movzbl 0x5(%rdi),%r9d
   192c0:	shr    %cl,%r9d
   192c3:	movslq %r9d,%r9
   192c6:	mov    (%rsi,%r9,8),%r10
   192ca:	movzbl 0x4(%rdi),%r9d
   192cf:	movzwl (%r10,%r9,2),%r9d
   192d4:	mov    %r9,%r10
   192d7:	shr    $0x8,%r10d
   192db:	mov    %r10b,0x4(%rdi)
   192df:	mov    %r9b,0x5(%rdi)
   192e3:	add    $0x1,%edx
   192e6:	add    $0x6,%rdi
   192ea:	cmp    %edx,%eax
   192ec:	ja     1963c <png_do_compose+0xafc>
   192f2:	mov    -0x40(%rbp),%r14
   192f6:	mov    -0x38(%rbp),%r13
   192fa:	mov    -0x48(%rbp),%r15
   192fe:	leaveq 
   192ff:	retq   
   19300:	test   %r8,%r8
   19303:	jne    196f9 <png_do_compose+0xbb9>
   19309:	mov    -0xa0(%rbp),%r9
   19310:	xor    %edx,%edx
   19312:	mov    -0xa8(%rbp),%rsi
   19319:	jmpq   18ef0 <png_do_compose+0x3b0>
   1931e:	movzbl 0x1(%rsi),%edi
   19322:	test   %dil,%dil
   19325:	je     18ede <png_do_compose+0x39e>
   1932b:	cmp    $0xfe,%dil
   1932f:	ja     18ee9 <png_do_compose+0x3a9>
   19335:	mov    %rcx,%r8
   19338:	sub    %di,%r8w
   1933c:	movzwl 0x284(%r9),%r10d
   19344:	imul   %r10w,%r8w
   19349:	movzbl (%rsi),%r10d
   1934d:	imul   %r10w,%di
   19352:	lea    0x80(%r8,%rdi,1),%edi
   1935a:	movzwl %di,%r8d
   1935e:	mov    %r8,%rdi
   19361:	shr    $0x8,%edi
   19364:	add    %r8d,%edi
   19367:	shr    $0x8,%edi
   1936a:	mov    %dil,(%rsi)
   1936d:	jmpq   18ee9 <png_do_compose+0x3a9>
   19372:	mov    %r15,-0x68(%rbp)
   19376:	mov    %r13,-0x58(%rbp)
   1937a:	mov    %r14,-0x60(%rbp)
   1937e:	mov    %rbx,-0x48(%rbp)
   19382:	mov    %r12,-0x50(%rbp)
   19386:	mov    $0xffff,%r11d
   1938c:	mov    -0x90(%rbp),%rcx
   19393:	mov    -0xa0(%rbp),%r10
   1939a:	mov    -0x98(%rbp),%rbx
   193a1:	xor    %edx,%edx
   193a3:	mov    -0xa8(%rbp),%rdi
   193aa:	jmpq   1974f <png_do_compose+0xc0f>
   193af:	test   %r8,%r8
   193b2:	jne    1976d <png_do_compose+0xc2d>
   193b8:	mov    -0xa0(%rbp),%r9
   193bf:	xor    %edx,%edx
   193c1:	mov    -0xa8(%rbp),%rsi
   193c8:	jmpq   18fdd <png_do_compose+0x49d>
   193cd:	movzbl 0x3(%rsi),%r8d
   193d2:	test   %r8b,%r8b
   193d5:	je     18fb3 <png_do_compose+0x473>
   193db:	cmp    $0xfe,%r8b
   193df:	ja     18fd6 <png_do_compose+0x496>
   193e5:	mov    %rcx,%r10
   193e8:	sub    %r8w,%r10w
   193ec:	movzwl 0x27e(%r9),%edi
   193f4:	imul   %r10w,%di
   193f9:	movzbl (%rsi),%r11d
   193fd:	imul   %r8w,%r11w
   19402:	lea    0x80(%rdi,%r11,1),%edi
   1940a:	movzwl %di,%r11d
   1940e:	mov    %r11,%rdi
   19411:	shr    $0x8,%edi
   19414:	add    %r11d,%edi
   19417:	shr    $0x8,%edi
   1941a:	mov    %dil,(%rsi)
   1941d:	movzwl 0x280(%r9),%edi
   19425:	imul   %r10w,%di
   1942a:	movzbl 0x1(%rsi),%r11d
   1942f:	imul   %r8w,%r11w
   19434:	lea    0x80(%rdi,%r11,1),%edi
   1943c:	movzwl %di,%edi
   1943f:	mov    %rdi,%r11
   19442:	shr    $0x8,%r11d
   19446:	add    %r11d,%edi
   19449:	shr    $0x8,%edi
   1944c:	mov    %dil,0x1(%rsi)
   19450:	movzwl 0x282(%r9),%edi
   19458:	imul   %r10w,%di
   1945d:	movzbl 0x2(%rsi),%r10d
   19462:	imul   %r10w,%r8w
   19467:	lea    0x80(%rdi,%r8,1),%edi
   1946f:	movzwl %di,%r8d
   19473:	mov    %r8,%rdi
   19476:	shr    $0x8,%edi
   19479:	add    %r8d,%edi
   1947c:	shr    $0x8,%edi
   1947f:	mov    %dil,0x2(%rsi)
   19483:	jmpq   18fd6 <png_do_compose+0x496>
   19488:	mov    %r15,-0xb0(%rbp)
   1948f:	mov    %r13,-0x80(%rbp)
   19493:	mov    %r14,-0x88(%rbp)
   1949a:	mov    %rbx,-0x70(%rbp)
   1949e:	mov    %r12,-0x78(%rbp)
   194a2:	mov    $0xffff,%edx
   194a7:	mov    -0x90(%rbp),%rcx
   194ae:	mov    -0xa0(%rbp),%rdi
   194b5:	mov    -0x98(%rbp),%r12
   194bc:	xor    %r8d,%r8d
   194bf:	mov    -0xa8(%rbp),%rbx
   194c6:	mov    %r8,%r11
   194c9:	jmpq   19829 <png_do_compose+0xce9>
   194ce:	add    $0x1,%rdx
   194d2:	mov    %r8,%rcx
   194d5:	add    $0x1,%esi
   194d8:	cmp    %eax,%esi
   194da:	jb     1984e <png_do_compose+0xd0e>
   194e0:	mov    -0x10(%rbp),%r14
   194e4:	mov    -0x18(%rbp),%r15
   194e8:	leaveq 
   194e9:	retq   
   194ea:	mov    %r15,-0x18(%rbp)
   194ee:	mov    %r13,-0x8(%rbp)
   194f2:	mov    %r14,-0x10(%rbp)
   194f6:	mov    -0xa0(%rbp),%r10
   194fd:	xor    %r9d,%r9d
   19500:	mov    -0xa8(%rbp),%rdi
   19507:	mov    %rsi,%rcx
   1950a:	jmpq   198ac <png_do_compose+0xd6c>
   1950f:	add    $0x1,%rdi
   19513:	mov    %rsi,%rcx
   19516:	add    $0x1,%r8d
   1951a:	cmp    %r8d,%eax
   1951d:	ja     198c3 <png_do_compose+0xd83>
   19523:	mov    -0x20(%rbp),%r14
   19527:	mov    -0x28(%rbp),%r15
   1952b:	leaveq 
   1952c:	retq   
   1952d:	mov    %r15,-0x30(%rbp)
   19531:	mov    %r13,-0x20(%rbp)
   19535:	mov    %r14,-0x28(%rbp)
   19539:	mov    -0xa0(%rbp),%r10
   19540:	xor    %r9d,%r9d
   19543:	mov    -0xa8(%rbp),%rdi
   1954a:	mov    %rsi,%rcx
   1954d:	jmpq   19921 <png_do_compose+0xde1>
   19552:	add    $0x1,%rdi
   19556:	mov    %rsi,%rcx
   19559:	add    $0x1,%r8d
   1955d:	cmp    %r8d,%eax
   19560:	ja     19938 <png_do_compose+0xdf8>
   19566:	mov    -0x30(%rbp),%r14
   1956a:	mov    -0x38(%rbp),%r15
   1956e:	leaveq 
   1956f:	retq   
   19570:	mov    -0xa0(%rbp),%rdi
   19577:	xor    %edx,%edx
   19579:	mov    -0xa8(%rbp),%rcx
   19580:	jmpq   1999c <png_do_compose+0xe5c>
   19585:	movzbl (%rdx),%r8d
   19589:	movzwl 0x2f8(%rdi),%esi
   19590:	cmp    %si,%r8w
   19594:	jne    195a0 <png_do_compose+0xa60>
   19596:	movzbl 0x284(%rdi),%esi
   1959d:	mov    %sil,(%rdx)
   195a0:	add    $0x1,%ecx
   195a3:	add    $0x1,%rdx
   195a7:	cmp    %ecx,%eax
   195a9:	ja     19585 <png_do_compose+0xa45>
   195ab:	leaveq 
   195ac:	retq   
   195ad:	mov    %r15,-0x40(%rbp)
   195b1:	mov    -0xa0(%rbp),%r8
   195b8:	xor    %edx,%edx
   195ba:	mov    -0xa8(%rbp),%rdi
   195c1:	jmpq   199c8 <png_do_compose+0xe88>
   195c6:	movzbl 0x1(%rdx),%r8d
   195cb:	movzbl (%rdx),%esi
   195ce:	shl    $0x8,%esi
   195d1:	add    %esi,%r8d
   195d4:	movzwl 0x2f8(%rdi),%esi
   195db:	cmp    %si,%r8w
   195df:	jne    195f9 <png_do_compose+0xab9>
   195e1:	movzwl 0x284(%rdi),%esi
   195e8:	shr    $0x8,%esi
   195eb:	mov    %sil,(%rdx)
   195ee:	movzbl 0x284(%rdi),%esi
   195f5:	mov    %sil,0x1(%rdx)
   195f9:	add    $0x1,%ecx
   195fc:	add    $0x2,%rdx
   19600:	cmp    %ecx,%eax
   19602:	ja     195c6 <png_do_compose+0xa86>
   19604:	leaveq 
   19605:	retq   
   19606:	movzbl (%rdx),%esi
   19609:	movzbl (%r8,%rsi,1),%esi
   1960e:	mov    %sil,(%rdx)
   19611:	movzbl 0x1(%rdx),%esi
   19615:	movzbl (%r8,%rsi,1),%esi
   1961a:	mov    %sil,0x1(%rdx)
   1961e:	movzbl 0x2(%rdx),%esi
   19622:	movzbl (%r8,%rsi,1),%esi
   19627:	mov    %sil,0x2(%rdx)
   1962b:	add    $0x1,%ecx
   1962e:	add    $0x3,%rdx
   19632:	cmp    %ecx,%eax
   19634:	ja     199d6 <png_do_compose+0xe96>
   1963a:	leaveq 
   1963b:	retq   
   1963c:	movzbl 0x2(%rdi),%r10d
   19641:	movzbl 0x3(%rdi),%r13d
   19646:	movzbl 0x4(%rdi),%r11d
   1964b:	movzbl 0x5(%rdi),%r15d
   19650:	movzbl 0x1(%rdi),%r14d
   19655:	movzbl (%rdi),%r9d
   19659:	shl    $0x8,%r9d
   1965d:	add    %r9d,%r14d
   19660:	movzwl 0x2f2(%r8),%r9d
   19668:	cmp    %r9w,%r14w
   1966c:	jne    1926d <png_do_compose+0x72d>
   19672:	shl    $0x8,%r10d
   19676:	add    %r13d,%r10d
   19679:	movzwl 0x2f4(%r8),%r9d
   19681:	cmp    %r9w,%r10w
   19685:	jne    1926d <png_do_compose+0x72d>
   1968b:	shl    $0x8,%r11d
   1968f:	lea    (%r15,%r11,1),%r10d
   19693:	movzwl 0x2f6(%r8),%r9d
   1969b:	cmp    %r9w,%r10w
   1969f:	jne    1926d <png_do_compose+0x72d>
   196a5:	movzwl 0x27e(%r8),%r9d
   196ad:	shr    $0x8,%r9d
   196b1:	mov    %r9b,(%rdi)
   196b4:	movzbl 0x27e(%r8),%r9d
   196bc:	mov    %r9b,0x1(%rdi)
   196c0:	movzwl 0x280(%r8),%r9d
   196c8:	shr    $0x8,%r9d
   196cc:	mov    %r9b,0x2(%rdi)
   196d0:	movzbl 0x280(%r8),%r9d
   196d8:	mov    %r9b,0x3(%rdi)
   196dc:	movzwl 0x282(%r8),%r9d
   196e4:	shr    $0x8,%r9d
   196e8:	mov    %r9b,0x4(%rdi)
   196ec:	movzbl 0x282(%r8),%r9d
   196f4:	jmpq   192df <png_do_compose+0x79f>
   196f9:	mov    %r15,-0x60(%rbp)
   196fd:	mov    %r13,-0x50(%rbp)
   19701:	mov    %r14,-0x58(%rbp)
   19705:	mov    -0xa0(%rbp),%r14
   1970c:	mov    -0x98(%rbp),%r13
   19713:	xor    %esi,%esi
   19715:	mov    -0xa8(%rbp),%rdi
   1971c:	jmpq   19a4d <png_do_compose+0xf0d>
   19721:	movzbl 0x1(%rdi),%r12d
   19726:	shr    %cl,%r12d
   19729:	movslq %r12d,%r12
   1972c:	mov    (%rsi,%r12,8),%r13
   19730:	movzbl (%rdi),%r12d
   19734:	movzwl 0x0(%r13,%r12,2),%r13d
   1973a:	mov    %r13,%r12
   1973d:	shr    $0x8,%r12d
   19741:	mov    %r12b,(%rdi)
   19744:	mov    %r13b,0x1(%rdi)
   19748:	add    $0x1,%edx
   1974b:	add    $0x4,%rdi
   1974f:	cmp    %edx,%eax
   19751:	ja     19a63 <png_do_compose+0xf23>
   19757:	mov    -0x50(%rbp),%r12
   1975b:	mov    -0x48(%rbp),%rbx
   1975f:	mov    -0x60(%rbp),%r14
   19763:	mov    -0x58(%rbp),%r13
   19767:	mov    -0x68(%rbp),%r15
   1976b:	leaveq 
   1976c:	retq   
   1976d:	mov    %r15,-0x88(%rbp)
   19774:	mov    %r13,-0x78(%rbp)
   19778:	mov    %r14,-0x80(%rbp)
   1977c:	mov    %rbx,-0x68(%rbp)
   19780:	mov    %r12,-0x70(%rbp)
   19784:	mov    -0xa0(%rbp),%r15
   1978b:	mov    -0x98(%rbp),%r14
   19792:	mov    $0x1,%edx
   19797:	xor    %r13d,%r13d
   1979a:	mov    -0xa8(%rbp),%rsi
   197a1:	mov    %r13,%rdi
   197a4:	jmpq   19b35 <png_do_compose+0xff5>
   197a9:	movzbl 0x1(%rbx),%r13d
   197ae:	shr    %cl,%r13d
   197b1:	movslq %r13d,%r13
   197b4:	mov    (%rsi,%r13,8),%r14
   197b8:	movzbl (%rbx),%r13d
   197bc:	movzwl (%r14,%r13,2),%r14d
   197c1:	mov    %r14,%r13
   197c4:	shr    $0x8,%r13d
   197c8:	mov    %r13b,(%rbx)
   197cb:	mov    %r14b,0x1(%rbx)
   197cf:	movzbl 0x3(%rbx),%r13d
   197d4:	shr    %cl,%r13d
   197d7:	movslq %r13d,%r13
   197da:	mov    (%rsi,%r13,8),%r13
   197de:	movzbl 0x2(%rbx),%r14d
   197e3:	movzwl 0x0(%r13,%r14,2),%r13d
   197e9:	mov    %r13,%r14
   197ec:	shr    $0x8,%r14d
   197f0:	mov    %r14b,0x2(%rbx)
   197f4:	mov    %r13b,0x3(%rbx)
   197f8:	movzbl 0x5(%rbx),%r13d
   197fd:	shr    %cl,%r13d
   19800:	movslq %r13d,%r13
   19803:	mov    (%rsi,%r13,8),%r13
   19807:	movzbl 0x4(%rbx),%r14d
   1980c:	movzwl 0x0(%r13,%r14,2),%r14d
   19812:	mov    %r14,%r13
   19815:	shr    $0x8,%r13d
   19819:	mov    %r13b,0x4(%rbx)
   1981d:	mov    %r14b,0x5(%rbx)
   19821:	add    $0x1,%r11d
   19825:	add    $0x8,%rbx
   19829:	cmp    %r11d,%eax
   1982c:	ja     19b56 <png_do_compose+0x1016>
   19832:	mov    -0x78(%rbp),%r12
   19836:	mov    -0x70(%rbp),%rbx
   1983a:	mov    -0x88(%rbp),%r14
   19841:	mov    -0x80(%rbp),%r13
   19845:	mov    -0xb0(%rbp),%r15
   1984c:	leaveq 
   1984d:	retq   
   1984e:	movzbl (%rdx),%r10d
   19852:	mov    %r10,%r11
   19855:	shr    %cl,%r11d
   19858:	and    $0x1,%r11w
   1985d:	movzwl 0x2f8(%r9),%r14d
   19865:	cmp    %r14w,%r11w
   19869:	jne    19891 <png_do_compose+0xd51>
   1986b:	movzbl 0x284(%r9),%r11d
   19873:	shl    %cl,%r11d
   19876:	mov    %rcx,%r15
   19879:	mov    %r8,%rcx
   1987c:	sub    %r15d,%ecx
   1987f:	mov    %rdi,%r14
   19882:	shr    %cl,%r14d
   19885:	and    %r14b,%r10b
   19888:	or     %r10b,%r11b
   1988b:	mov    %r11b,(%rdx)
   1988e:	mov    %r15,%rcx
   19891:	test   %ecx,%ecx
   19893:	je     194ce <png_do_compose+0x98e>
   19899:	add    $0xffffffff,%ecx
   1989c:	jmpq   194d5 <png_do_compose+0x995>
   198a1:	add    $0x1,%rdi
   198a5:	mov    %rsi,%rcx
   198a8:	add    $0x1,%r9d
   198ac:	cmp    %r9d,%eax
   198af:	ja     19bdf <png_do_compose+0x109f>
   198b5:	mov    -0x10(%rbp),%r14
   198b9:	mov    -0x8(%rbp),%r13
   198bd:	mov    -0x18(%rbp),%r15
   198c1:	leaveq 
   198c2:	retq   
   198c3:	movzbl (%rdi),%r10d
   198c7:	mov    %r10,%r11
   198ca:	shr    %cl,%r11d
   198cd:	and    $0x3,%r11w
   198d2:	movzwl 0x2f8(%r9),%r14d
   198da:	cmp    %r14w,%r11w
   198de:	jne    19906 <png_do_compose+0xdc6>
   198e0:	movzbl 0x284(%r9),%r11d
   198e8:	shl    %cl,%r11d
   198eb:	mov    %rcx,%r15
   198ee:	mov    %rsi,%rcx
   198f1:	sub    %r15d,%ecx
   198f4:	mov    %rdx,%r14
   198f7:	shr    %cl,%r14d
   198fa:	and    %r14b,%r10b
   198fd:	or     %r10b,%r11b
   19900:	mov    %r11b,(%rdi)
   19903:	mov    %r15,%rcx
   19906:	test   %ecx,%ecx
   19908:	je     1950f <png_do_compose+0x9cf>
   1990e:	add    $0xfffffffe,%ecx
   19911:	jmpq   19516 <png_do_compose+0x9d6>
   19916:	add    $0x1,%rdi
   1991a:	mov    %rsi,%rcx
   1991d:	add    $0x1,%r9d
   19921:	cmp    %r9d,%eax
   19924:	ja     19c41 <png_do_compose+0x1101>
   1992a:	mov    -0x28(%rbp),%r14
   1992e:	mov    -0x20(%rbp),%r13
   19932:	mov    -0x30(%rbp),%r15
   19936:	leaveq 
   19937:	retq   
   19938:	movzbl (%rdi),%r10d
   1993c:	mov    %r10,%r11
   1993f:	shr    %cl,%r11d
   19942:	and    $0xf,%r11w
   19947:	movzwl 0x2f8(%r9),%r14d
   1994f:	cmp    %r14w,%r11w
   19953:	jne    1997b <png_do_compose+0xe3b>
   19955:	movzbl 0x284(%r9),%r11d
   1995d:	shl    %cl,%r11d
   19960:	mov    %rcx,%r15
   19963:	mov    %rsi,%rcx
   19966:	sub    %r15d,%ecx
   19969:	mov    %rdx,%r14
   1996c:	shr    %cl,%r14d
   1996f:	and    %r14b,%r10b
   19972:	or     %r10b,%r11b
   19975:	mov    %r11b,(%rdi)
   19978:	mov    %r15,%rcx
   1997b:	test   %ecx,%ecx
   1997d:	je     19552 <png_do_compose+0xa12>
   19983:	add    $0xfffffffc,%ecx
   19986:	jmpq   19559 <png_do_compose+0xa19>
   1998b:	movzbl 0x284(%rdi),%esi
   19992:	mov    %sil,(%rcx)
   19995:	add    $0x1,%edx
   19998:	add    $0x1,%rcx
   1999c:	cmp    %edx,%eax
   1999e:	ja     19c9f <png_do_compose+0x115f>
   199a4:	leaveq 
   199a5:	retq   
   199a6:	movzwl 0x284(%r8),%r9d
   199ae:	shr    $0x8,%r9d
   199b2:	mov    %r9b,(%rdi)
   199b5:	movzbl 0x284(%r8),%r9d
   199bd:	mov    %r9b,0x1(%rdi)
   199c1:	add    $0x1,%edx
   199c4:	add    $0x2,%rdi
   199c8:	cmp    %edx,%eax
   199ca:	ja     19cbe <png_do_compose+0x117e>
   199d0:	mov    -0x40(%rbp),%r15
   199d4:	leaveq 
   199d5:	retq   
   199d6:	movzbl (%rdx),%r9d
   199da:	movzwl 0x2f2(%rdi),%esi
   199e1:	cmp    %si,%r9w
   199e5:	jne    19606 <png_do_compose+0xac6>
   199eb:	movzbl 0x1(%rdx),%r9d
   199f0:	movzwl 0x2f4(%rdi),%esi
   199f7:	cmp    %si,%r9w
   199fb:	jne    19606 <png_do_compose+0xac6>
   19a01:	movzbl 0x2(%rdx),%esi
   19a05:	movzwl 0x2f6(%rdi),%r9d
   19a0d:	cmp    %r9w,%si
   19a11:	jne    19606 <png_do_compose+0xac6>
   19a17:	movzbl 0x27e(%rdi),%esi
   19a1e:	mov    %sil,(%rdx)
   19a21:	movzbl 0x280(%rdi),%esi
   19a28:	mov    %sil,0x1(%rdx)
   19a2c:	movzbl 0x282(%rdi),%esi
   19a33:	mov    %sil,0x2(%rdx)
   19a37:	jmpq   1962b <png_do_compose+0xaeb>
   19a3c:	movzbl (%rdi),%edx
   19a3f:	movzbl (%r8,%rdx,1),%edx
   19a44:	mov    %dl,(%rdi)
   19a46:	add    $0x1,%esi
   19a49:	add    $0x2,%rdi
   19a4d:	cmp    %esi,%eax
   19a4f:	ja     19d02 <png_do_compose+0x11c2>
   19a55:	mov    -0x58(%rbp),%r14
   19a59:	mov    -0x50(%rbp),%r13
   19a5d:	mov    -0x60(%rbp),%r15
   19a61:	leaveq 
   19a62:	retq   
   19a63:	movzbl 0x3(%rdi),%r14d
   19a68:	movzbl 0x2(%rdi),%r12d
   19a6d:	shl    $0x8,%r12d
   19a71:	lea    (%r14,%r12,1),%r13d
   19a75:	cmp    $0xffff,%r13w
   19a7a:	je     19721 <png_do_compose+0xbe1>
   19a80:	cmp    %r12w,%r14w
   19a84:	je     19d67 <png_do_compose+0x1227>
   19a8a:	movzwl %r13w,%r14d
   19a8e:	mov    %r11,%r13
   19a91:	sub    %r14d,%r13d
   19a94:	movzwl 0x28e(%r10),%r12d
   19a9c:	imul   %r12d,%r13d
   19aa0:	movzbl 0x1(%rdi),%r12d
   19aa5:	shr    %cl,%r12d
   19aa8:	movslq %r12d,%r12
   19aab:	mov    (%r8,%r12,8),%r15
   19aaf:	movzbl (%rdi),%r12d
   19ab3:	movzwl (%r15,%r12,2),%r12d
   19ab8:	imul   %r12d,%r14d
   19abc:	add    %r14d,%r13d
   19abf:	lea    0x8000(%r13),%r12d
   19ac6:	shr    $0x10,%r12d
   19aca:	lea    0x8000(%r12,%r13,1),%r12d
   19ad2:	shr    $0x10,%r12d
   19ad6:	test   %ebx,%ebx
   19ad8:	jg     19af8 <png_do_compose+0xfb8>
   19ada:	movzwl %r12w,%r13d
   19ade:	movzbl %r13b,%r12d
   19ae2:	shr    %cl,%r12d
   19ae5:	movslq %r12d,%r12
   19ae8:	mov    (%r9,%r12,8),%r12
   19aec:	shr    $0x8,%r13d
   19af0:	movslq %r13d,%r13
   19af3:	movzwl (%r12,%r13,2),%r12d
   19af8:	movzwl %r12w,%r13d
   19afc:	shr    $0x8,%r13d
   19b00:	mov    %r13b,(%rdi)
   19b03:	mov    %r12b,0x1(%rdi)
   19b07:	jmpq   19748 <png_do_compose+0xc08>
   19b0c:	movzbl (%rsi),%ebx
   19b0f:	movzbl (%r8,%rbx,1),%ebx
   19b14:	mov    %bl,(%rsi)
   19b16:	movzbl 0x1(%rsi),%ebx
   19b1a:	movzbl (%r8,%rbx,1),%ebx
   19b1f:	mov    %bl,0x1(%rsi)
   19b22:	movzbl 0x2(%rsi),%ebx
   19b26:	movzbl (%r8,%rbx,1),%ebx
   19b2b:	mov    %bl,0x2(%rsi)
   19b2e:	add    $0x1,%edi
   19b31:	add    $0x4,%rsi
   19b35:	cmp    %edi,%eax
   19b37:	ja     19d87 <png_do_compose+0x1247>
   19b3d:	mov    -0x70(%rbp),%r12
   19b41:	mov    -0x68(%rbp),%rbx
   19b45:	mov    -0x80(%rbp),%r14
   19b49:	mov    -0x78(%rbp),%r13
   19b4d:	mov    -0x88(%rbp),%r15
   19b54:	leaveq 
   19b55:	retq   
   19b56:	movzbl 0x7(%rbx),%r15d
   19b5b:	movzbl 0x6(%rbx),%r13d
   19b60:	shl    $0x8,%r13d
   19b64:	lea    (%r15,%r13,1),%r14d
   19b68:	cmp    $0xffff,%r14w
   19b6d:	je     197a9 <png_do_compose+0xc69>
   19b73:	cmp    %r13w,%r15w
   19b77:	je     19de6 <png_do_compose+0x12a6>
   19b7d:	movzwl %r14w,%r13d
   19b81:	sub    %r13d,%edx
   19b84:	movzwl 0x288(%rdi),%r14d
   19b8c:	mov    %rdx,%r15
   19b8f:	imul   %r14d,%r15d
   19b93:	movzbl 0x1(%rbx),%r14d
   19b98:	shr    %cl,%r14d
   19b9b:	movslq %r14d,%r14
   19b9e:	mov    (%r10,%r14,8),%r14
   19ba2:	mov    %rsi,-0xa8(%rbp)
   19ba9:	movzbl (%rbx),%esi
   19bac:	movzwl (%r14,%rsi,2),%esi
   19bb1:	imul   %r13d,%esi
   19bb5:	lea    (%r15,%rsi,1),%r14d
   19bb9:	lea    0x8000(%r14),%esi
   19bc0:	shr    $0x10,%esi
   19bc3:	lea    0x8000(%rsi,%r14,1),%esi
   19bcb:	shr    $0x10,%esi
   19bce:	test   %r12d,%r12d
   19bd1:	je     19e3e <png_do_compose+0x12fe>
   19bd7:	mov    %r8,%r12
   19bda:	jmpq   19e60 <png_do_compose+0x1320>
   19bdf:	movzbl (%rdi),%r13d
   19be3:	mov    %r13,%r11
   19be6:	shr    %cl,%r11d
   19be9:	and    $0x3,%r11w
   19bee:	movzwl 0x2f8(%r10),%r14d
   19bf6:	cmp    %r14w,%r11w
   19bfa:	je     19ec1 <png_do_compose+0x1381>
   19c00:	mov    %r13,%r11
   19c03:	shr    %cl,%r11d
   19c06:	and    $0x3,%r11d
   19c0a:	mov    %r11,%r14
   19c0d:	shl    $0x4,%r14d
   19c11:	add    %r14d,%r11d
   19c14:	lea    (%r11,%r11,4),%r11d
   19c18:	mov    %r11d,%r11d
   19c1b:	movzbl (%r11,%r8,1),%r11d
   19c20:	shr    $0x6,%r11d
   19c24:	shl    %cl,%r11d
   19c27:	mov    %rcx,%r14
   19c2a:	mov    %rsi,%rcx
   19c2d:	sub    %r14d,%ecx
   19c30:	mov    %rdx,%r15
   19c33:	shr    %cl,%r15d
   19c36:	and    %r15b,%r13b
   19c39:	or     %r13b,%r11b
   19c3c:	jmpq   19ee1 <png_do_compose+0x13a1>
   19c41:	movzbl (%rdi),%r13d
   19c45:	mov    %r13,%r11
   19c48:	shr    %cl,%r11d
   19c4b:	and    $0xf,%r11w
   19c50:	movzwl 0x2f8(%r10),%r14d
   19c58:	cmp    %r14w,%r11w
   19c5c:	je     19ef6 <png_do_compose+0x13b6>
   19c62:	mov    %r13,%r11
   19c65:	shr    %cl,%r11d
   19c68:	and    $0xf,%r11d
   19c6c:	mov    %r11,%r14
   19c6f:	shl    $0x4,%r14d
   19c73:	add    %r14d,%r11d
   19c76:	mov    %r11d,%r11d
   19c79:	movzbl (%r8,%r11,1),%r11d
   19c7e:	shr    $0x4,%r11d
   19c82:	shl    %cl,%r11d
   19c85:	mov    %rcx,%r14
   19c88:	mov    %rsi,%rcx
   19c8b:	sub    %r14d,%ecx
   19c8e:	mov    %rdx,%r15
   19c91:	shr    %cl,%r15d
   19c94:	and    %r15b,%r13b
   19c97:	or     %r13b,%r11b
   19c9a:	jmpq   19f16 <png_do_compose+0x13d6>
   19c9f:	movzbl (%rcx),%esi
   19ca2:	movzwl 0x2f8(%rdi),%r9d
   19caa:	cmp    %r9w,%si
   19cae:	je     1998b <png_do_compose+0xe4b>
   19cb4:	movzbl (%r8,%rsi,1),%esi
   19cb9:	jmpq   19992 <png_do_compose+0xe52>
   19cbe:	movzbl 0x1(%rdi),%r9d
   19cc3:	movzbl (%rdi),%r10d
   19cc7:	mov    %r10,%r11
   19cca:	shl    $0x8,%r11d
   19cce:	lea    (%r9,%r11,1),%r15d
   19cd2:	movzwl 0x2f8(%r8),%r11d
   19cda:	cmp    %r11w,%r15w
   19cde:	je     199a6 <png_do_compose+0xe66>
   19ce4:	shr    %cl,%r9d
   19ce7:	movslq %r9d,%r9
   19cea:	mov    (%rsi,%r9,8),%r9
   19cee:	movzwl (%r9,%r10,2),%r9d
   19cf3:	mov    %r9,%r10
   19cf6:	shr    $0x8,%r10d
   19cfa:	mov    %r10b,(%rdi)
   19cfd:	jmpq   199bd <png_do_compose+0xe7d>
   19d02:	movzbl 0x1(%rdi),%edx
   19d06:	cmp    $0xff,%dl
   19d09:	je     19a3c <png_do_compose+0xefc>
   19d0f:	test   %dl,%dl
   19d11:	je     19f2b <png_do_compose+0x13eb>
   19d17:	mov    %rcx,%r9
   19d1a:	sub    %dx,%r9w
   19d1e:	movzwl 0x28e(%r14),%r15d
   19d26:	imul   %r15w,%r9w
   19d2b:	movzbl (%rdi),%r15d
   19d2f:	movzbl (%r11,%r15,1),%r15d
   19d34:	imul   %r15w,%dx
   19d39:	lea    0x80(%r9,%rdx,1),%edx
   19d41:	movzwl %dx,%edx
   19d44:	mov    %rdx,%r9
   19d47:	shr    $0x8,%r9d
   19d4b:	add    %r9d,%edx
   19d4e:	shr    $0x8,%edx
   19d51:	test   %r13d,%r13d
   19d54:	jne    19a44 <png_do_compose+0xf04>
   19d5a:	movzbl %dl,%edx
   19d5d:	movzbl (%r10,%rdx,1),%edx
   19d62:	jmpq   19a44 <png_do_compose+0xf04>
   19d67:	movzwl 0x284(%r10),%r12d
   19d6f:	shr    $0x8,%r12d
   19d73:	mov    %r12b,(%rdi)
   19d76:	movzbl 0x284(%r10),%r12d
   19d7e:	mov    %r12b,0x1(%rdi)
   19d82:	jmpq   19748 <png_do_compose+0xc08>
   19d87:	movzbl 0x3(%rsi),%r9d
   19d8c:	cmp    $0xff,%r9b
   19d90:	je     19b0c <png_do_compose+0xfcc>
   19d96:	test   %r9b,%r9b
   19d99:	je     19f38 <png_do_compose+0x13f8>
   19d9f:	sub    %r9w,%cx
   19da3:	movzwl 0x288(%r15),%ebx
   19dab:	imul   %cx,%bx
   19daf:	movzbl (%rsi),%r12d
   19db3:	movzbl (%r11,%r12,1),%r12d
   19db8:	imul   %r9w,%r12w
   19dbd:	lea    0x80(%rbx,%r12,1),%ebx
   19dc5:	movzwl %bx,%r12d
   19dc9:	mov    %r12,%rbx
   19dcc:	shr    $0x8,%ebx
   19dcf:	add    %r12d,%ebx
   19dd2:	shr    $0x8,%ebx
   19dd5:	test   %r14d,%r14d
   19dd8:	je     19f5d <png_do_compose+0x141d>
   19dde:	mov    %r13,%rdx
   19de1:	jmpq   19f65 <png_do_compose+0x1425>
   19de6:	movzwl 0x27e(%rdi),%r13d
   19dee:	shr    $0x8,%r13d
   19df2:	mov    %r13b,(%rbx)
   19df5:	movzbl 0x27e(%rdi),%r13d
   19dfd:	mov    %r13b,0x1(%rbx)
   19e01:	movzwl 0x280(%rdi),%r13d
   19e09:	shr    $0x8,%r13d
   19e0d:	mov    %r13b,0x2(%rbx)
   19e11:	movzbl 0x280(%rdi),%r13d
   19e19:	mov    %r13b,0x3(%rbx)
   19e1d:	movzwl 0x282(%rdi),%r13d
   19e25:	shr    $0x8,%r13d
   19e29:	mov    %r13b,0x4(%rbx)
   19e2d:	movzbl 0x282(%rdi),%r13d
   19e35:	mov    %r13b,0x5(%rbx)
   19e39:	jmpq   19821 <png_do_compose+0xce1>
   19e3e:	movzwl %si,%esi
   19e41:	movzbl %sil,%r12d
   19e45:	shr    %cl,%r12d
   19e48:	movslq %r12d,%r12
   19e4b:	mov    (%r9,%r12,8),%r12
   19e4f:	shr    $0x8,%esi
   19e52:	movslq %esi,%rsi
   19e55:	movzwl (%r12,%rsi,2),%esi
   19e5a:	mov    $0x1,%r12d
   19e60:	movzwl %si,%r14d
   19e64:	shr    $0x8,%r14d
   19e68:	mov    %r14b,(%rbx)
   19e6b:	mov    %sil,0x1(%rbx)
   19e6f:	movzwl 0x28a(%rdi),%esi
   19e76:	mov    %rdx,%r14
   19e79:	imul   %esi,%r14d
   19e7d:	movzbl 0x3(%rbx),%esi
   19e81:	shr    %cl,%esi
   19e83:	movslq %esi,%rsi
   19e86:	mov    (%r10,%rsi,8),%rsi
   19e8a:	movzbl 0x2(%rbx),%r15d
   19e8f:	movzwl (%rsi,%r15,2),%esi
   19e94:	imul   %r13d,%esi
   19e98:	add    %esi,%r14d
   19e9b:	lea    0x8000(%r14),%esi
   19ea2:	shr    $0x10,%esi
   19ea5:	lea    0x8000(%rsi,%r14,1),%esi
   19ead:	shr    $0x10,%esi
   19eb0:	test   %r12,%r12
   19eb3:	jne    19fab <png_do_compose+0x146b>
   19eb9:	mov    %r8,%r12
   19ebc:	jmpq   19fce <png_do_compose+0x148e>
   19ec1:	movzbl 0x284(%r10),%r11d
   19ec9:	shl    %cl,%r11d
   19ecc:	mov    %rcx,%r14
   19ecf:	mov    %rsi,%rcx
   19ed2:	sub    %r14d,%ecx
   19ed5:	mov    %rdx,%r15
   19ed8:	shr    %cl,%r15d
   19edb:	and    %r15b,%r13b
   19ede:	or     %r13b,%r11b
   19ee1:	mov    %r11b,(%rdi)
   19ee4:	test   %r14d,%r14d
   19ee7:	je     198a1 <png_do_compose+0xd61>
   19eed:	lea    -0x2(%r14),%ecx
   19ef1:	jmpq   198a8 <png_do_compose+0xd68>
   19ef6:	movzbl 0x284(%r10),%r11d
   19efe:	shl    %cl,%r11d
   19f01:	mov    %rcx,%r14
   19f04:	mov    %rsi,%rcx
   19f07:	sub    %r14d,%ecx
   19f0a:	mov    %rdx,%r15
   19f0d:	shr    %cl,%r15d
   19f10:	and    %r15b,%r13b
   19f13:	or     %r13b,%r11b
   19f16:	mov    %r11b,(%rdi)
   19f19:	test   %r14d,%r14d
   19f1c:	je     19916 <png_do_compose+0xdd6>
   19f22:	lea    -0x4(%r14),%ecx
   19f26:	jmpq   1991d <png_do_compose+0xddd>
   19f2b:	movzbl 0x284(%r14),%edx
   19f33:	jmpq   19a44 <png_do_compose+0xf04>
   19f38:	movzbl 0x27e(%r15),%ebx
   19f40:	mov    %bl,(%rsi)
   19f42:	movzbl 0x280(%r15),%ebx
   19f4a:	mov    %bl,0x1(%rsi)
   19f4d:	movzbl 0x282(%r15),%ebx
   19f55:	mov    %bl,0x2(%rsi)
   19f58:	jmpq   19b2e <png_do_compose+0xfee>
   19f5d:	movzbl %bl,%ebx
   19f60:	movzbl (%r10,%rbx,1),%ebx
   19f65:	mov    %bl,(%rsi)
   19f67:	movzwl 0x28a(%r15),%ebx
   19f6f:	imul   %cx,%bx
   19f73:	movzbl 0x1(%rsi),%r12d
   19f78:	movzbl (%r11,%r12,1),%r12d
   19f7d:	imul   %r9w,%r12w
   19f82:	lea    0x80(%rbx,%r12,1),%ebx
   19f8a:	movzwl %bx,%ebx
   19f8d:	mov    %rbx,%r12
   19f90:	shr    $0x8,%r12d
   19f94:	add    %r12d,%ebx
   19f97:	shr    $0x8,%ebx
   19f9a:	test   %rdx,%rdx
   19f9d:	jne    1a05e <png_do_compose+0x151e>
   19fa3:	mov    %r13,%r12
   19fa6:	jmpq   1a06c <png_do_compose+0x152c>
   19fab:	movzwl %si,%r12d
   19faf:	movzbl %r12b,%esi
   19fb3:	shr    %cl,%esi
   19fb5:	movslq %esi,%rsi
   19fb8:	mov    (%r9,%rsi,8),%r14
   19fbc:	shr    $0x8,%r12d
   19fc0:	movslq %r12d,%rsi
   19fc3:	movzwl (%r14,%rsi,2),%esi
   19fc8:	mov    $0x1,%r12d
   19fce:	movzwl %si,%r14d
   19fd2:	shr    $0x8,%r14d
   19fd6:	mov    %r14b,0x2(%rbx)
   19fda:	mov    %sil,0x3(%rbx)
   19fde:	movzwl 0x28c(%rdi),%esi
   19fe5:	imul   %esi,%edx
   19fe8:	movzbl 0x5(%rbx),%esi
   19fec:	shr    %cl,%esi
   19fee:	movslq %esi,%rsi
   19ff1:	mov    (%r10,%rsi,8),%r14
   19ff5:	movzbl 0x4(%rbx),%esi
   19ff9:	movzwl (%r14,%rsi,2),%esi
   19ffe:	imul   %esi,%r13d
   1a002:	lea    (%rdx,%r13,1),%esi
   1a006:	lea    0x8000(%rsi),%edx
   1a00c:	shr    $0x10,%edx
   1a00f:	lea    0x8000(%rdx,%rsi,1),%edx
   1a016:	shr    $0x10,%edx
   1a019:	test   %r12,%r12
   1a01c:	je     1a039 <png_do_compose+0x14f9>
   1a01e:	movzwl %dx,%esi
   1a021:	movzbl %sil,%edx
   1a025:	shr    %cl,%edx
   1a027:	movslq %edx,%rdx
   1a02a:	mov    (%r9,%rdx,8),%r12
   1a02e:	shr    $0x8,%esi
   1a031:	movslq %esi,%rdx
   1a034:	movzwl (%r12,%rdx,2),%edx
   1a039:	movzwl %dx,%esi
   1a03c:	shr    $0x8,%esi
   1a03f:	mov    %sil,0x4(%rbx)
   1a043:	mov    %dl,0x5(%rbx)
   1a046:	mov    -0xa8(%rbp),%rsi
   1a04d:	mov    $0xffff,%edx
   1a052:	mov    -0x98(%rbp),%r12
   1a059:	jmpq   19821 <png_do_compose+0xce1>
   1a05e:	movzbl %bl,%edx
   1a061:	movzbl (%r10,%rdx,1),%ebx
   1a066:	mov    $0x1,%r12d
   1a06c:	mov    %bl,0x1(%rsi)
   1a06f:	movzwl 0x28c(%r15),%edx
   1a077:	imul   %cx,%dx
   1a07b:	movzbl 0x2(%rsi),%ecx
   1a07f:	movzbl (%r11,%rcx,1),%ecx
   1a084:	imul   %cx,%r9w
   1a089:	lea    0x80(%rdx,%r9,1),%ecx
   1a091:	movzwl %cx,%edx
   1a094:	mov    %rdx,%rcx
   1a097:	shr    $0x8,%ecx
   1a09a:	add    %edx,%ecx
   1a09c:	shr    $0x8,%ecx
   1a09f:	test   %r12,%r12
   1a0a2:	je     1a0ac <png_do_compose+0x156c>
   1a0a4:	movzbl %cl,%ecx
   1a0a7:	movzbl (%r10,%rcx,1),%ecx
   1a0ac:	mov    %cl,0x2(%rsi)
   1a0af:	mov    $0xff,%ecx
   1a0b4:	mov    $0x1,%edx
   1a0b9:	jmpq   19b2e <png_do_compose+0xfee>
   1a0be:	xchg   %ax,%ax

000000000001a0c0 <png_do_gamma>:
   1a0c0:	push   %rbp
   1a0c1:	mov    %rsp,%rbp
   1a0c4:	sub    $0x20,%rsp
   1a0c8:	mov    0x2a8(%rdx),%r9
   1a0cf:	mov    0x2b0(%rdx),%r8
   1a0d6:	mov    0x2a0(%rdx),%ecx
   1a0dc:	mov    (%rdi),%edx
   1a0de:	movzbl 0x11(%rdi),%r10d
   1a0e3:	cmp    $0x8,%r10b
   1a0e7:	jbe    1a0f1 <png_do_gamma+0x31>
   1a0e9:	cmp    $0x10,%r10b
   1a0ed:	je     1a111 <png_do_gamma+0x51>
   1a0ef:	leaveq 
   1a0f0:	retq   
   1a0f1:	test   %r9,%r9
   1a0f4:	je     1a0e9 <png_do_gamma+0x29>
   1a0f6:	xor    %eax,%eax
   1a0f8:	movzbl 0x10(%rdi),%r11d
   1a0fd:	cmp    $0x3,%r11b
   1a101:	jbe    1a118 <png_do_gamma+0x58>
   1a103:	cmp    $0x4,%r11b
   1a107:	je     1a125 <png_do_gamma+0x65>
   1a109:	cmp    $0x6,%r11b
   1a10d:	je     1a12d <png_do_gamma+0x6d>
   1a10f:	leaveq 
   1a110:	retq   
   1a111:	test   %r8,%r8
   1a114:	jne    1a0f6 <png_do_gamma+0x36>
   1a116:	leaveq 
   1a117:	retq   
   1a118:	test   %r11b,%r11b
   1a11b:	je     1a13c <png_do_gamma+0x7c>
   1a11d:	cmp    $0x2,%r11b
   1a121:	je     1a15b <png_do_gamma+0x9b>
   1a123:	leaveq 
   1a124:	retq   
   1a125:	cmp    $0x8,%r10b
   1a129:	je     1a1aa <png_do_gamma+0xea>
   1a12b:	jmp    1a193 <png_do_gamma+0xd3>
   1a12d:	cmp    $0x8,%r10b
   1a131:	je     1a250 <png_do_gamma+0x190>
   1a137:	jmpq   1a221 <png_do_gamma+0x161>
   1a13c:	cmp    $0x2,%r10b
   1a140:	jne    1a31f <png_do_gamma+0x25f>
   1a146:	mov    %rdi,-0x20(%rbp)
   1a14a:	mov    %rsi,-0x18(%rbp)
   1a14e:	mov    %rcx,-0x10(%rbp)
   1a152:	mov    %r8,-0x8(%rbp)
   1a156:	jmpq   1a305 <png_do_gamma+0x245>
   1a15b:	cmp    $0x8,%r10b
   1a15f:	je     1a3e3 <png_do_gamma+0x323>
   1a165:	jmpq   1a3b4 <png_do_gamma+0x2f4>
   1a16a:	movzbl 0x1(%rsi),%edi
   1a16e:	shr    %cl,%edi
   1a170:	movslq %edi,%rdi
   1a173:	mov    (%r8,%rdi,8),%r9
   1a177:	movzbl (%rsi),%edi
   1a17a:	movzwl (%r9,%rdi,2),%r9d
   1a17f:	mov    %r9,%rdi
   1a182:	shr    $0x8,%edi
   1a185:	mov    %dil,(%rsi)
   1a188:	mov    %r9b,0x1(%rsi)
   1a18c:	add    $0x1,%eax
   1a18f:	add    $0x4,%rsi
   1a193:	cmp    %eax,%edx
   1a195:	ja     1a16a <png_do_gamma+0xaa>
   1a197:	leaveq 
   1a198:	retq   
   1a199:	movzbl (%rsi),%ecx
   1a19c:	movzbl (%r9,%rcx,1),%ecx
   1a1a1:	mov    %cl,(%rsi)
   1a1a3:	add    $0x1,%eax
   1a1a6:	add    $0x2,%rsi
   1a1aa:	cmp    %eax,%edx
   1a1ac:	ja     1a199 <png_do_gamma+0xd9>
   1a1ae:	leaveq 
   1a1af:	retq   
   1a1b0:	movzbl 0x1(%rsi),%edi
   1a1b4:	shr    %cl,%edi
   1a1b6:	movslq %edi,%rdi
   1a1b9:	mov    (%r8,%rdi,8),%r9
   1a1bd:	movzbl (%rsi),%edi
   1a1c0:	movzwl (%r9,%rdi,2),%r9d
   1a1c5:	mov    %r9,%rdi
   1a1c8:	shr    $0x8,%edi
   1a1cb:	mov    %dil,(%rsi)
   1a1ce:	mov    %r9b,0x1(%rsi)
   1a1d2:	movzbl 0x3(%rsi),%edi
   1a1d6:	shr    %cl,%edi
   1a1d8:	movslq %edi,%rdi
   1a1db:	mov    (%r8,%rdi,8),%r9
   1a1df:	movzbl 0x2(%rsi),%edi
   1a1e3:	movzwl (%r9,%rdi,2),%r9d
   1a1e8:	mov    %r9,%rdi
   1a1eb:	shr    $0x8,%edi
   1a1ee:	mov    %dil,0x2(%rsi)
   1a1f2:	mov    %r9b,0x3(%rsi)
   1a1f6:	movzbl 0x5(%rsi),%edi
   1a1fa:	shr    %cl,%edi
   1a1fc:	movslq %edi,%rdi
   1a1ff:	mov    (%r8,%rdi,8),%r9
   1a203:	movzbl 0x4(%rsi),%edi
   1a207:	movzwl (%r9,%rdi,2),%r9d
   1a20c:	mov    %r9,%rdi
   1a20f:	shr    $0x8,%edi
   1a212:	mov    %dil,0x4(%rsi)
   1a216:	mov    %r9b,0x5(%rsi)
   1a21a:	add    $0x1,%eax
   1a21d:	add    $0x8,%rsi
   1a221:	cmp    %eax,%edx
   1a223:	ja     1a1b0 <png_do_gamma+0xf0>
   1a225:	leaveq 
   1a226:	retq   
   1a227:	movzbl (%rsi),%ecx
   1a22a:	movzbl (%r9,%rcx,1),%ecx
   1a22f:	mov    %cl,(%rsi)
   1a231:	movzbl 0x1(%rsi),%ecx
   1a235:	movzbl (%r9,%rcx,1),%ecx
   1a23a:	mov    %cl,0x1(%rsi)
   1a23d:	movzbl 0x2(%rsi),%ecx
   1a241:	movzbl (%r9,%rcx,1),%ecx
   1a246:	mov    %cl,0x2(%rsi)
   1a249:	add    $0x1,%eax
   1a24c:	add    $0x4,%rsi
   1a250:	cmp    %eax,%edx
   1a252:	ja     1a227 <png_do_gamma+0x167>
   1a254:	leaveq 
   1a255:	retq   
   1a256:	movzbl (%rsi),%edi
   1a259:	mov    %rdi,%rcx
   1a25c:	and    $0xc0,%ecx
   1a262:	mov    %rcx,%r8
   1a265:	shr    $0x2,%r8d
   1a269:	add    %ecx,%r8d
   1a26c:	shr    $0x4,%ecx
   1a26f:	add    %ecx,%r8d
   1a272:	mov    %rdi,%rcx
   1a275:	shr    $0x6,%ecx
   1a278:	add    %r8d,%ecx
   1a27b:	movslq %ecx,%rcx
   1a27e:	movzbl (%r9,%rcx,1),%r8d
   1a283:	and    $0xc0,%r8d
   1a28a:	mov    %rdi,%rcx
   1a28d:	and    $0x30,%ecx
   1a290:	lea    (%rcx,%rcx,4),%r10d
   1a294:	mov    %rcx,%r11
   1a297:	shr    $0x2,%r11d
   1a29b:	add    %r11d,%r10d
   1a29e:	shr    $0x4,%ecx
   1a2a1:	add    %r10d,%ecx
   1a2a4:	movslq %ecx,%rcx
   1a2a7:	movzbl (%r9,%rcx,1),%ecx
   1a2ac:	and    $0xc0,%ecx
   1a2b2:	shr    $0x2,%ecx
   1a2b5:	add    %ecx,%r8d
   1a2b8:	mov    %rdi,%rcx
   1a2bb:	and    $0xc,%ecx
   1a2be:	lea    (%rcx,%rcx,4),%r10d
   1a2c2:	lea    (%rcx,%r10,4),%r10d
   1a2c6:	shr    $0x2,%ecx
   1a2c9:	add    %r10d,%ecx
   1a2cc:	movslq %ecx,%rcx
   1a2cf:	movzbl (%r9,%rcx,1),%ecx
   1a2d4:	and    $0xc0,%ecx
   1a2da:	shr    $0x4,%ecx
   1a2dd:	add    %ecx,%r8d
   1a2e0:	and    $0x3,%edi
   1a2e3:	mov    %rdi,%rcx
   1a2e6:	shl    $0x4,%ecx
   1a2e9:	add    %edi,%ecx
   1a2eb:	lea    (%rcx,%rcx,4),%ecx
   1a2ee:	movslq %ecx,%rcx
   1a2f1:	movzbl (%r9,%rcx,1),%ecx
   1a2f6:	shr    $0x6,%ecx
   1a2f9:	add    %r8d,%ecx
   1a2fc:	mov    %cl,(%rsi)
   1a2fe:	add    $0x1,%rsi
   1a302:	add    $0x4,%eax
   1a305:	cmp    %eax,%edx
   1a307:	ja     1a256 <png_do_gamma+0x196>
   1a30d:	mov    -0x8(%rbp),%r8
   1a311:	mov    -0x10(%rbp),%rcx
   1a315:	mov    -0x18(%rbp),%rsi
   1a319:	xor    %eax,%eax
   1a31b:	mov    -0x20(%rbp),%rdi
   1a31f:	movzbl 0x11(%rdi),%edi
   1a323:	cmp    $0x4,%dil
   1a327:	je     1a42d <png_do_gamma+0x36d>
   1a32d:	cmp    $0x8,%dil
   1a331:	je     1a444 <png_do_gamma+0x384>
   1a337:	cmp    $0x10,%dil
   1a33b:	je     1a473 <png_do_gamma+0x3b3>
   1a341:	leaveq 
   1a342:	retq   
   1a343:	movzbl 0x1(%rsi),%edi
   1a347:	shr    %cl,%edi
   1a349:	movslq %edi,%rdi
   1a34c:	mov    (%r8,%rdi,8),%r9
   1a350:	movzbl (%rsi),%edi
   1a353:	movzwl (%r9,%rdi,2),%r9d
   1a358:	mov    %r9,%rdi
   1a35b:	shr    $0x8,%edi
   1a35e:	mov    %dil,(%rsi)
   1a361:	mov    %r9b,0x1(%rsi)
   1a365:	movzbl 0x3(%rsi),%edi
   1a369:	shr    %cl,%edi
   1a36b:	movslq %edi,%rdi
   1a36e:	mov    (%r8,%rdi,8),%r9
   1a372:	movzbl 0x2(%rsi),%edi
   1a376:	movzwl (%r9,%rdi,2),%r9d
   1a37b:	mov    %r9,%rdi
   1a37e:	shr    $0x8,%edi
   1a381:	mov    %dil,0x2(%rsi)
   1a385:	mov    %r9b,0x3(%rsi)
   1a389:	movzbl 0x5(%rsi),%edi
   1a38d:	shr    %cl,%edi
   1a38f:	movslq %edi,%rdi
   1a392:	mov    (%r8,%rdi,8),%r9
   1a396:	movzbl 0x4(%rsi),%edi
   1a39a:	movzwl (%r9,%rdi,2),%r9d
   1a39f:	mov    %r9,%rdi
   1a3a2:	shr    $0x8,%edi
   1a3a5:	mov    %dil,0x4(%rsi)
   1a3a9:	mov    %r9b,0x5(%rsi)
   1a3ad:	add    $0x1,%eax
   1a3b0:	add    $0x6,%rsi
   1a3b4:	cmp    %eax,%edx
   1a3b6:	ja     1a343 <png_do_gamma+0x283>
   1a3b8:	leaveq 
   1a3b9:	retq   
   1a3ba:	movzbl (%rsi),%ecx
   1a3bd:	movzbl (%r9,%rcx,1),%ecx
   1a3c2:	mov    %cl,(%rsi)
   1a3c4:	movzbl 0x1(%rsi),%ecx
   1a3c8:	movzbl (%r9,%rcx,1),%ecx
   1a3cd:	mov    %cl,0x1(%rsi)
   1a3d0:	movzbl 0x2(%rsi),%ecx
   1a3d4:	movzbl (%r9,%rcx,1),%ecx
   1a3d9:	mov    %cl,0x2(%rsi)
   1a3dc:	add    $0x1,%eax
   1a3df:	add    $0x3,%rsi
   1a3e3:	cmp    %edx,%eax
   1a3e5:	jb     1a3ba <png_do_gamma+0x2fa>
   1a3e7:	leaveq 
   1a3e8:	retq   
   1a3e9:	movzbl (%rsi),%ecx
   1a3ec:	mov    %rcx,%r8
   1a3ef:	and    $0xf,%r8d
   1a3f3:	mov    %r8,%rdi
   1a3f6:	shl    $0x4,%edi
   1a3f9:	add    %r8d,%edi
   1a3fc:	movslq %edi,%rdi
   1a3ff:	movzbl (%r9,%rdi,1),%edi
   1a404:	shr    $0x4,%edi
   1a407:	mov    %rcx,%r8
   1a40a:	shr    $0x4,%r8d
   1a40e:	and    $0xf0,%ecx
   1a414:	add    %r8d,%ecx
   1a417:	movslq %ecx,%rcx
   1a41a:	movzbl (%r9,%rcx,1),%ecx
   1a41f:	and    $0xf0,%cl
   1a422:	add    %edi,%ecx
   1a424:	mov    %cl,(%rsi)
   1a426:	add    $0x2,%eax
   1a429:	add    $0x1,%rsi
   1a42d:	cmp    %eax,%edx
   1a42f:	ja     1a3e9 <png_do_gamma+0x329>
   1a431:	leaveq 
   1a432:	retq   
   1a433:	movzbl (%rsi),%ecx
   1a436:	movzbl (%r9,%rcx,1),%ecx
   1a43b:	mov    %cl,(%rsi)
   1a43d:	add    $0x1,%eax
   1a440:	add    $0x1,%rsi
   1a444:	cmp    %eax,%edx
   1a446:	ja     1a433 <png_do_gamma+0x373>
   1a448:	leaveq 
   1a449:	retq   
   1a44a:	movzbl 0x1(%rsi),%edi
   1a44e:	shr    %cl,%edi
   1a450:	movslq %edi,%rdi
   1a453:	mov    (%r8,%rdi,8),%r9
   1a457:	movzbl (%rsi),%edi
   1a45a:	movzwl (%r9,%rdi,2),%r9d
   1a45f:	mov    %r9,%rdi
   1a462:	shr    $0x8,%edi
   1a465:	mov    %dil,(%rsi)
   1a468:	mov    %r9b,0x1(%rsi)
   1a46c:	add    $0x1,%eax
   1a46f:	add    $0x2,%rsi
   1a473:	cmp    %eax,%edx
   1a475:	ja     1a44a <png_do_gamma+0x38a>
   1a477:	leaveq 
   1a478:	retq   
   1a479:	nopl   0x0(%rax)

000000000001a480 <png_do_encode_alpha>:
   1a480:	push   %rbp
   1a481:	mov    %rsp,%rbp
   1a484:	mov    (%rdi),%eax
   1a486:	movzbl 0x10(%rdi),%r10d
   1a48b:	mov    %r10,%rcx
   1a48e:	and    $0x4,%ecx
   1a491:	test   %ecx,%ecx
   1a493:	jg     1a4a6 <png_do_encode_alpha+0x26>
   1a495:	mov    %rdx,%rdi
   1a498:	lea    0x14152(%rip),%rsi        # 2e5f1 <chunks_to_process.34+0x7ec>
   1a49f:	callq  5390 <png_warning@plt>
   1a4a4:	leaveq 
   1a4a5:	retq   
   1a4a6:	mov    $0x4,%r8d
   1a4ac:	mov    $0x2,%r11d
   1a4b2:	movzbl 0x11(%rdi),%ecx
   1a4b6:	cmp    $0x8,%cl
   1a4b9:	je     1a4ed <png_do_encode_alpha+0x6d>
   1a4bb:	cmp    $0x10,%cl
   1a4be:	jne    1a495 <png_do_encode_alpha+0x15>
   1a4c0:	mov    0x2a0(%rdx),%ecx
   1a4c6:	mov    0x2c8(%rdx),%r9
   1a4cd:	test   %r9,%r9
   1a4d0:	je     1a495 <png_do_encode_alpha+0x15>
   1a4d2:	and    $0x2,%r10d
   1a4d6:	test   %r10d,%r10d
   1a4d9:	jle    1a4e7 <png_do_encode_alpha+0x67>
   1a4db:	mov    $0x6,%r11d
   1a4e1:	mov    $0x8,%r8d
   1a4e7:	lea    (%rsi,%r11,1),%rdx
   1a4eb:	jmp    1a530 <png_do_encode_alpha+0xb0>
   1a4ed:	mov    0x2b8(%rdx),%rdi
   1a4f4:	test   %rdi,%rdi
   1a4f7:	je     1a495 <png_do_encode_alpha+0x15>
   1a4f9:	and    $0x2,%r10d
   1a4fd:	test   %r10d,%r10d
   1a500:	jg     1a536 <png_do_encode_alpha+0xb6>
   1a502:	mov    $0x1,%ecx
   1a507:	jmp    1a53e <png_do_encode_alpha+0xbe>
   1a509:	movzbl 0x1(%rdx),%esi
   1a50d:	shr    %cl,%esi
   1a50f:	movslq %esi,%rsi
   1a512:	mov    (%r9,%rsi,8),%rsi
   1a516:	movzbl (%rdx),%edi
   1a519:	movzwl (%rsi,%rdi,2),%edi
   1a51d:	mov    %rdi,%rsi
   1a520:	shr    $0x8,%esi
   1a523:	mov    %sil,(%rdx)
   1a526:	mov    %dil,0x1(%rdx)
   1a52a:	add    $0xffffffff,%eax
   1a52d:	add    %r8,%rdx
   1a530:	test   %eax,%eax
   1a532:	jne    1a509 <png_do_encode_alpha+0x89>
   1a534:	leaveq 
   1a535:	retq   
   1a536:	mov    %r8,%r11
   1a539:	mov    $0x3,%ecx
   1a53e:	add    %rsi,%rcx
   1a541:	jmp    1a552 <png_do_encode_alpha+0xd2>
   1a543:	movzbl (%rcx),%edx
   1a546:	movzbl (%rdi,%rdx,1),%edx
   1a54a:	mov    %dl,(%rcx)
   1a54c:	add    $0xffffffff,%eax
   1a54f:	add    %r11,%rcx
   1a552:	test   %eax,%eax
   1a554:	jne    1a543 <png_do_encode_alpha+0xc3>
   1a556:	leaveq 
   1a557:	retq   
   1a558:	nopl   0x0(%rax,%rax,1)

000000000001a560 <png_do_expand_palette>:
   1a560:	push   %rbp
   1a561:	mov    %rsp,%rbp
   1a564:	sub    $0x30,%rsp
   1a568:	mov    (%rdi),%r9d
   1a56b:	movzbl 0x10(%rdi),%eax
   1a56f:	cmp    $0x3,%al
   1a571:	je     1a575 <png_do_expand_palette+0x15>
   1a573:	leaveq 
   1a574:	retq   
   1a575:	xor    %eax,%eax
   1a577:	movzbl 0x11(%rdi),%r10d
   1a57c:	cmp    $0x7,%r10b
   1a580:	ja     1a60a <png_do_expand_palette+0xaa>
   1a586:	cmp    $0x1,%r10b
   1a58a:	jbe    1a61b <png_do_expand_palette+0xbb>
   1a590:	cmp    $0x2,%r10b
   1a594:	je     1a667 <png_do_expand_palette+0x107>
   1a59a:	cmp    $0x4,%r10b
   1a59e:	jne    1a5fe <png_do_expand_palette+0x9e>
   1a5a0:	mov    %r9,%r11
   1a5a3:	and    $0x1,%r11d
   1a5a7:	neg    %r11d
   1a5aa:	and    $0x4,%r11d
   1a5ae:	lea    -0x1(%r9),%r10d
   1a5b2:	shr    %r10d
   1a5b5:	mov    %r10d,%r10d
   1a5b8:	add    %rsi,%r10
   1a5bb:	mov    %rcx,-0x18(%rbp)
   1a5bf:	lea    -0x1(%rsi,%r9,1),%rcx
   1a5c4:	mov    %r8,-0x28(%rbp)
   1a5c8:	mov    %rsi,-0x20(%rbp)
   1a5cc:	mov    %rcx,%r8
   1a5cf:	mov    %r11,%rcx
   1a5d2:	mov    %rax,%r11
   1a5d5:	jmpq   1a6b7 <png_do_expand_palette+0x157>
   1a5da:	add    $0xffffffffffffffff,%r10
   1a5de:	mov    %rax,%rcx
   1a5e1:	add    $0xffffffffffffffff,%r11
   1a5e5:	add    $0x1,%r8d
   1a5e9:	cmp    %r8d,%r9d
   1a5ec:	ja     1a6cd <png_do_expand_palette+0x16d>
   1a5f2:	mov    -0x20(%rbp),%rsi
   1a5f6:	mov    -0x28(%rbp),%r8
   1a5fa:	mov    -0x10(%rbp),%rcx
   1a5fe:	movb   $0x8,0x11(%rdi)
   1a602:	movb   $0x8,0x13(%rdi)
   1a606:	mov    %r9,0x8(%rdi)
   1a60a:	movzbl 0x11(%rdi),%r10d
   1a60f:	cmp    $0x8,%r10b
   1a613:	je     1a6eb <png_do_expand_palette+0x18b>
   1a619:	leaveq 
   1a61a:	retq   
   1a61b:	cmp    $0x1,%r10b
   1a61f:	jne    1a5fe <png_do_expand_palette+0x9e>
   1a621:	mov    $0xfffffffffffffff8,%r10
   1a628:	sub    %r9d,%r10d
   1a62b:	and    $0x7,%r10d
   1a62f:	mov    $0x1,%r11d
   1a635:	mov    %rcx,-0x8(%rbp)
   1a639:	lea    -0x1(%rsi,%r9,1),%rcx
   1a63e:	mov    %rdx,-0x10(%rbp)
   1a642:	lea    -0x1(%r9),%edx
   1a646:	shr    $0x3,%edx
   1a649:	mov    %edx,%edx
   1a64b:	add    %rsi,%rdx
   1a64e:	mov    %r8,-0x28(%rbp)
   1a652:	mov    %rsi,-0x18(%rbp)
   1a656:	mov    %r10,%rsi
   1a659:	mov    %rcx,%r10
   1a65c:	mov    %rsi,%rcx
   1a65f:	mov    %rax,%r8
   1a662:	jmpq   1a715 <png_do_expand_palette+0x1b5>
   1a667:	lea    -0x1(%r9),%r10d
   1a66b:	shr    $0x2,%r10d
   1a66f:	mov    %r10d,%r10d
   1a672:	add    %rsi,%r10
   1a675:	mov    $0xfffffffffffffffc,%r11
   1a67c:	sub    %r9d,%r11d
   1a67f:	and    $0x3,%r11d
   1a683:	add    %r11d,%r11d
   1a686:	mov    %rcx,-0x10(%rbp)
   1a68a:	lea    -0x1(%rsi,%r9,1),%rcx
   1a68f:	mov    %r8,-0x28(%rbp)
   1a693:	mov    %rsi,-0x20(%rbp)
   1a697:	mov    %r11,%rsi
   1a69a:	mov    %rcx,%r11
   1a69d:	mov    %rsi,%rcx
   1a6a0:	mov    %rax,%r8
   1a6a3:	jmpq   1a5e9 <png_do_expand_palette+0x89>
   1a6a8:	add    $0xffffffffffffffff,%r10
   1a6ac:	mov    %rax,%rcx
   1a6af:	add    $0xffffffffffffffff,%r8
   1a6b3:	add    $0x1,%r11d
   1a6b7:	cmp    %r11d,%r9d
   1a6ba:	ja     1a733 <png_do_expand_palette+0x1d3>
   1a6bc:	mov    -0x20(%rbp),%rsi
   1a6c0:	mov    -0x28(%rbp),%r8
   1a6c4:	mov    -0x18(%rbp),%rcx
   1a6c8:	jmpq   1a5fe <png_do_expand_palette+0x9e>
   1a6cd:	movzbl (%r10),%esi
   1a6d1:	shr    %cl,%esi
   1a6d3:	and    $0x3,%sil
   1a6d7:	mov    %sil,(%r11)
   1a6da:	cmp    $0x6,%ecx
   1a6dd:	je     1a5da <png_do_expand_palette+0x7a>
   1a6e3:	add    $0x2,%ecx
   1a6e6:	jmpq   1a5e1 <png_do_expand_palette+0x81>
   1a6eb:	test   %r8d,%r8d
   1a6ee:	jg     1a751 <png_do_expand_palette+0x1f1>
   1a6f0:	lea    -0x1(%rsi,%r9,1),%rcx
   1a6f5:	lea    (%r9,%r9,2),%r10d
   1a6f9:	mov    %r10d,%r8d
   1a6fc:	lea    -0x1(%rsi,%r8,1),%rsi
   1a701:	jmpq   1a7ad <png_do_expand_palette+0x24d>
   1a706:	add    $0xffffffffffffffff,%rdx
   1a70a:	mov    %rax,%rcx
   1a70d:	add    $0xffffffffffffffff,%r10
   1a711:	add    $0x1,%r8d
   1a715:	cmp    %r8d,%r9d
   1a718:	ja     1a7cb <png_do_expand_palette+0x26b>
   1a71e:	mov    -0x18(%rbp),%rsi
   1a722:	mov    -0x28(%rbp),%r8
   1a726:	mov    -0x10(%rbp),%rdx
   1a72a:	mov    -0x8(%rbp),%rcx
   1a72e:	jmpq   1a5fe <png_do_expand_palette+0x9e>
   1a733:	movzbl (%r10),%esi
   1a737:	shr    %cl,%esi
   1a739:	and    $0xf,%sil
   1a73d:	mov    %sil,(%r8)
   1a740:	cmp    $0x4,%ecx
   1a743:	je     1a6a8 <png_do_expand_palette+0x148>
   1a749:	add    $0x4,%ecx
   1a74c:	jmpq   1a6af <png_do_expand_palette+0x14f>
   1a751:	lea    -0x1(%rsi,%r9,1),%r10
   1a756:	mov    $0xff,%r11d
   1a75c:	lea    -0x1(%rsi,%r9,4),%rsi
   1a761:	mov    %r14,-0x8(%rbp)
   1a765:	mov    %r15,-0x28(%rbp)
   1a769:	jmpq   1a822 <png_do_expand_palette+0x2c2>
   1a76e:	movzbl (%rcx),%r8d
   1a772:	lea    (%r8,%r8,2),%r8
   1a776:	movzbl 0x2(%rdx,%r8,1),%r8d
   1a77c:	mov    %r8b,(%rsi)
   1a77f:	movzbl (%rcx),%r8d
   1a783:	lea    (%r8,%r8,2),%r8
   1a787:	movzbl 0x1(%rdx,%r8,1),%r8d
   1a78d:	mov    %r8b,-0x1(%rsi)
   1a791:	movzbl (%rcx),%r8d
   1a795:	lea    (%r8,%r8,2),%r8
   1a799:	movzbl (%rdx,%r8,1),%r8d
   1a79e:	mov    %r8b,-0x2(%rsi)
   1a7a2:	add    $0x1,%eax
   1a7a5:	add    $0xffffffffffffffff,%rcx
   1a7a9:	add    $0xfffffffffffffffd,%rsi
   1a7ad:	cmp    %eax,%r9d
   1a7b0:	ja     1a76e <png_do_expand_palette+0x20e>
   1a7b2:	movb   $0x8,0x11(%rdi)
   1a7b6:	movb   $0x18,0x13(%rdi)
   1a7ba:	mov    %r10d,%eax
   1a7bd:	mov    %rax,0x8(%rdi)
   1a7c1:	movb   $0x2,0x10(%rdi)
   1a7c5:	movb   $0x3,0x12(%rdi)
   1a7c9:	leaveq 
   1a7ca:	retq   
   1a7cb:	movzbl (%rdx),%esi
   1a7ce:	shr    %cl,%esi
   1a7d0:	and    $0x1,%esi
   1a7d3:	test   %esi,%esi
   1a7d5:	jg     1a84c <png_do_expand_palette+0x2ec>
   1a7d7:	mov    %rax,%rsi
   1a7da:	jmp    1a84f <png_do_expand_palette+0x2ef>
   1a7dc:	lea    -0x1(%rsi),%r14
   1a7e0:	mov    %r11,%r15
   1a7e3:	mov    %r15b,(%rsi)
   1a7e6:	movzbl (%r10),%esi
   1a7ea:	lea    (%rsi,%rsi,2),%rsi
   1a7ee:	movzbl 0x2(%rdx,%rsi,1),%esi
   1a7f3:	mov    %sil,(%r14)
   1a7f6:	movzbl (%r10),%esi
   1a7fa:	lea    (%rsi,%rsi,2),%rsi
   1a7fe:	movzbl 0x1(%rdx,%rsi,1),%esi
   1a803:	mov    %sil,-0x1(%r14)
   1a807:	movzbl (%r10),%esi
   1a80b:	lea    (%rsi,%rsi,2),%rsi
   1a80f:	movzbl (%rdx,%rsi,1),%esi
   1a813:	mov    %sil,-0x2(%r14)
   1a817:	add    $0x1,%eax
   1a81a:	add    $0xffffffffffffffff,%r10
   1a81e:	lea    -0x3(%r14),%rsi
   1a822:	cmp    %r9d,%eax
   1a825:	jb     1a863 <png_do_expand_palette+0x303>
   1a827:	movb   $0x8,0x11(%rdi)
   1a82b:	movb   $0x20,0x13(%rdi)
   1a82f:	shl    $0x2,%r9d
   1a833:	mov    %r9d,%eax
   1a836:	mov    %rax,0x8(%rdi)
   1a83a:	movb   $0x6,0x10(%rdi)
   1a83e:	movb   $0x4,0x12(%rdi)
   1a842:	mov    -0x28(%rbp),%r15
   1a846:	mov    -0x8(%rbp),%r14
   1a84a:	leaveq 
   1a84b:	retq   
   1a84c:	mov    %r11,%rsi
   1a84f:	mov    %sil,(%r10)
   1a852:	cmp    $0x7,%ecx
   1a855:	je     1a706 <png_do_expand_palette+0x1a6>
   1a85b:	add    $0x1,%ecx
   1a85e:	jmpq   1a70d <png_do_expand_palette+0x1ad>
   1a863:	movzbl (%r10),%r14d
   1a867:	cmp    %r8d,%r14d
   1a86a:	jge    1a7dc <png_do_expand_palette+0x27c>
   1a870:	movzbl (%r14,%rcx,1),%r15d
   1a875:	lea    -0x1(%rsi),%r14
   1a879:	jmpq   1a7e3 <png_do_expand_palette+0x283>
   1a87e:	xchg   %ax,%ax

000000000001a880 <png_do_expand>:
   1a880:	push   %rbp
   1a881:	mov    %rsp,%rbp
   1a884:	sub    $0x40,%rsp
   1a888:	mov    (%rdi),%r8d
   1a88b:	mov    $0xff,%r9d
   1a891:	xor    %eax,%eax
   1a893:	movzbl 0x10(%rdi),%ecx
   1a897:	test   %cl,%cl
   1a899:	je     1a8a2 <png_do_expand+0x22>
   1a89b:	cmp    $0x2,%cl
   1a89e:	je     1a8ac <png_do_expand+0x2c>
   1a8a0:	leaveq 
   1a8a1:	retq   
   1a8a2:	test   %rdx,%rdx
   1a8a5:	jne    1a8b3 <png_do_expand+0x33>
   1a8a7:	mov    %rax,%r11
   1a8aa:	jmp    1a8b8 <png_do_expand+0x38>
   1a8ac:	test   %rdx,%rdx
   1a8af:	jne    1a8cc <png_do_expand+0x4c>
   1a8b1:	leaveq 
   1a8b2:	retq   
   1a8b3:	movzwl 0x8(%rdx),%r11d
   1a8b8:	movzbl 0x11(%rdi),%ecx
   1a8bc:	cmp    $0x7,%cl
   1a8bf:	jbe    1a923 <png_do_expand+0xa3>
   1a8c1:	test   %rdx,%rdx
   1a8c4:	jne    1a97f <png_do_expand+0xff>
   1a8ca:	leaveq 
   1a8cb:	retq   
   1a8cc:	movzbl 0x11(%rdi),%ecx
   1a8d0:	cmp    $0x8,%cl
   1a8d3:	je     1a9b3 <png_do_expand+0x133>
   1a8d9:	cmp    $0x10,%cl
   1a8dc:	jne    1aa21 <png_do_expand+0x1a1>
   1a8e2:	movzwl 0x2(%rdx),%ecx
   1a8e6:	mov    %rcx,%r11
   1a8e9:	shr    $0x8,%r11d
   1a8ed:	movzwl 0x4(%rdx),%r10d
   1a8f2:	mov    %r10,%r9
   1a8f5:	shr    $0x8,%r9d
   1a8f9:	movzwl 0x6(%rdx),%edx
   1a8fd:	mov    %r15,-0x38(%rbp)
   1a901:	mov    %rdx,%r15
   1a904:	shr    $0x8,%r15d
   1a908:	mov    %r14,-0x30(%rbp)
   1a90c:	mov    0x8(%rdi),%r14
   1a910:	lea    -0x1(%rsi,%r14,1),%r14
   1a915:	lea    -0x1(%rsi,%r8,8),%rsi
   1a91a:	mov    %r13,-0x28(%rbp)
   1a91e:	jmpq   1aa99 <png_do_expand+0x219>
   1a923:	cmp    $0x1,%cl
   1a926:	jbe    1aab3 <png_do_expand+0x233>
   1a92c:	cmp    $0x2,%cl
   1a92f:	je     1aacd <png_do_expand+0x24d>
   1a935:	cmp    $0x4,%cl
   1a938:	jne    1aabc <png_do_expand+0x23c>
   1a93e:	mov    $0xfffffffffffffffe,%rcx
   1a945:	sub    %r8d,%ecx
   1a948:	and    $0x1,%ecx
   1a94b:	neg    %ecx
   1a94d:	and    $0x4,%ecx
   1a950:	lea    -0x1(%r8),%r9d
   1a954:	shr    %r9d
   1a957:	mov    %r9d,%r9d
   1a95a:	add    %rsi,%r9
   1a95d:	lea    -0x1(%rsi,%r8,1),%r10
   1a962:	mov    %rsi,-0x10(%rbp)
   1a966:	mov    $0x4,%esi
   1a96b:	mov    %r15,-0x20(%rbp)
   1a96f:	mov    %r11,-0x18(%rbp)
   1a973:	mov    %rdx,-0x38(%rbp)
   1a977:	mov    %rax,%r11
   1a97a:	jmpq   1ab11 <png_do_expand+0x291>
   1a97f:	movzbl 0x11(%rdi),%ecx
   1a983:	cmp    $0x8,%cl
   1a986:	je     1ab42 <png_do_expand+0x2c2>
   1a98c:	cmp    $0x10,%cl
   1a98f:	jne    1ab81 <png_do_expand+0x301>
   1a995:	mov    %r11,%r9
   1a998:	shr    $0x8,%r9d
   1a99c:	movzbl %r11b,%r10d
   1a9a0:	mov    0x8(%rdi),%rdx
   1a9a4:	lea    -0x1(%rsi,%rdx,1),%rcx
   1a9a9:	lea    -0x1(%rsi,%rdx,2),%rdx
   1a9ae:	jmpq   1abd2 <png_do_expand+0x352>
   1a9b3:	movzbl 0x2(%rdx),%r11d
   1a9b8:	movzbl 0x4(%rdx),%r10d
   1a9bd:	movzbl 0x6(%rdx),%edx
   1a9c1:	mov    0x8(%rdi),%rcx
   1a9c5:	lea    -0x1(%rsi,%rcx,1),%rcx
   1a9ca:	lea    -0x1(%rsi,%r8,4),%rsi
   1a9cf:	mov    %r15,-0x38(%rbp)
   1a9d3:	mov    %r14,-0x30(%rbp)
   1a9d7:	mov    %r13,-0x28(%rbp)
   1a9db:	mov    %rax,%r13
   1a9de:	jmp    1aa0c <png_do_expand+0x18c>
   1a9e0:	lea    -0x1(%rsi),%r14
   1a9e4:	mov    %r9,%r15
   1a9e7:	mov    %r15b,(%rsi)
   1a9ea:	movzbl (%rcx),%esi
   1a9ed:	mov    %sil,(%r14)
   1a9f0:	movzbl -0x1(%rcx),%esi
   1a9f4:	mov    %sil,-0x1(%r14)
   1a9f8:	movzbl -0x2(%rcx),%esi
   1a9fc:	mov    %sil,-0x2(%r14)
   1aa00:	add    $0xfffffffffffffffd,%rcx
   1aa04:	lea    -0x3(%r14),%rsi
   1aa08:	add    $0x1,%r13d
   1aa0c:	cmp    %r13d,%r8d
   1aa0f:	ja     1abf5 <png_do_expand+0x375>
   1aa15:	mov    -0x28(%rbp),%r13
   1aa19:	mov    -0x30(%rbp),%r14
   1aa1d:	mov    -0x38(%rbp),%r15
   1aa21:	movb   $0x6,0x10(%rdi)
   1aa25:	movb   $0x4,0x12(%rdi)
   1aa29:	movzbl 0x11(%rdi),%eax
   1aa2d:	shl    $0x2,%eax
   1aa30:	mov    %al,0x13(%rdi)
   1aa33:	cmp    $0x7,%al
   1aa35:	ja     1ac2a <png_do_expand+0x3aa>
   1aa3b:	movzbl %al,%eax
   1aa3e:	imul   %r8,%rax
   1aa42:	add    $0x7,%rax
   1aa46:	shr    $0x3,%rax
   1aa4a:	jmpq   1ac35 <png_do_expand+0x3b5>
   1aa4f:	movb   $0xff,(%rsi)
   1aa52:	movb   $0xff,-0x1(%rsi)
   1aa56:	add    $0xfffffffffffffffe,%rsi
   1aa5a:	movzbl (%r14),%r13d
   1aa5e:	mov    %r13b,(%rsi)
   1aa61:	movzbl -0x1(%r14),%r13d
   1aa66:	mov    %r13b,-0x1(%rsi)
   1aa6a:	movzbl -0x2(%r14),%r13d
   1aa6f:	mov    %r13b,-0x2(%rsi)
   1aa73:	movzbl -0x3(%r14),%r13d
   1aa78:	mov    %r13b,-0x3(%rsi)
   1aa7c:	movzbl -0x4(%r14),%r13d
   1aa81:	mov    %r13b,-0x4(%rsi)
   1aa85:	movzbl -0x5(%r14),%r13d
   1aa8a:	mov    %r13b,-0x5(%rsi)
   1aa8e:	add    $0xfffffffffffffffa,%r14
   1aa92:	add    $0xfffffffffffffffa,%rsi
   1aa96:	add    $0x1,%eax
   1aa99:	cmp    %eax,%r8d
   1aa9c:	ja     1ac3b <png_do_expand+0x3bb>
   1aaa2:	mov    -0x28(%rbp),%r13
   1aaa6:	mov    -0x30(%rbp),%r14
   1aaaa:	mov    -0x38(%rbp),%r15
   1aaae:	jmpq   1aa21 <png_do_expand+0x1a1>
   1aab3:	cmp    $0x1,%cl
   1aab6:	je     1ac9e <png_do_expand+0x41e>
   1aabc:	movb   $0x8,0x11(%rdi)
   1aac0:	movb   $0x8,0x13(%rdi)
   1aac4:	mov    %r8,0x8(%rdi)
   1aac8:	jmpq   1a8c1 <png_do_expand+0x41>
   1aacd:	lea    -0x1(%r8),%ecx
   1aad1:	shr    $0x2,%ecx
   1aad4:	mov    %ecx,%ecx
   1aad6:	lea    (%rsi,%rcx,1),%r9
   1aada:	mov    $0xfffffffffffffffc,%rcx
   1aae1:	sub    %r8d,%ecx
   1aae4:	and    $0x3,%ecx
   1aae7:	add    %ecx,%ecx
   1aae9:	lea    -0x1(%rsi,%r8,1),%r10
   1aaee:	mov    %rsi,-0x10(%rbp)
   1aaf2:	mov    %r11,-0x20(%rbp)
   1aaf6:	mov    %rdx,-0x38(%rbp)
   1aafa:	mov    %rax,%rsi
   1aafd:	jmpq   1ace0 <png_do_expand+0x460>
   1ab02:	add    $0xffffffffffffffff,%r9
   1ab06:	mov    %rax,%rcx
   1ab09:	add    $0xffffffffffffffff,%r10
   1ab0d:	add    $0x1,%r11d
   1ab11:	cmp    %r8d,%r11d
   1ab14:	jb     1ad0f <png_do_expand+0x48f>
   1ab1a:	mov    -0x18(%rbp),%rcx
   1ab1e:	and    $0xf,%ecx
   1ab21:	mov    %rcx,%rdx
   1ab24:	shl    $0x4,%edx
   1ab27:	lea    (%rcx,%rdx,1),%r11d
   1ab2b:	mov    -0x38(%rbp),%rdx
   1ab2f:	mov    -0x10(%rbp),%rsi
   1ab33:	mov    $0xff,%r9d
   1ab39:	mov    -0x20(%rbp),%r15
   1ab3d:	jmpq   1aabc <png_do_expand+0x23c>
   1ab42:	movzbl %r11b,%r11d
   1ab46:	lea    -0x1(%rsi,%r8,1),%rcx
   1ab4b:	lea    -0x1(%rsi,%r8,2),%rdx
   1ab50:	mov    %r15,-0x38(%rbp)
   1ab54:	mov    %rax,%r10
   1ab57:	jmp    1ab74 <png_do_expand+0x2f4>
   1ab59:	lea    -0x1(%rdx),%rsi
   1ab5d:	mov    %rax,%r15
   1ab60:	mov    %r15b,(%rdx)
   1ab63:	movzbl (%rcx),%edx
   1ab66:	mov    %dl,(%rsi)
   1ab68:	add    $0xffffffffffffffff,%rcx
   1ab6c:	lea    -0x1(%rsi),%rdx
   1ab70:	add    $0x1,%r10d
   1ab74:	cmp    %r10d,%r8d
   1ab77:	ja     1ad36 <png_do_expand+0x4b6>
   1ab7d:	mov    -0x38(%rbp),%r15
   1ab81:	movb   $0x4,0x10(%rdi)
   1ab85:	movb   $0x2,0x12(%rdi)
   1ab89:	movzbl 0x11(%rdi),%eax
   1ab8d:	add    %eax,%eax
   1ab8f:	mov    %al,0x13(%rdi)
   1ab92:	cmp    $0x7,%al
   1ab94:	ja     1ad4e <png_do_expand+0x4ce>
   1ab9a:	movzbl %al,%eax
   1ab9d:	imul   %r8,%rax
   1aba1:	add    $0x7,%rax
   1aba5:	shr    $0x3,%rax
   1aba9:	jmpq   1ad59 <png_do_expand+0x4d9>
   1abae:	movb   $0xff,(%rdx)
   1abb1:	movb   $0xff,-0x1(%rdx)
   1abb5:	add    $0xfffffffffffffffe,%rdx
   1abb9:	movzbl (%rcx),%esi
   1abbc:	mov    %sil,(%rdx)
   1abbf:	movzbl -0x1(%rcx),%esi
   1abc3:	mov    %sil,-0x1(%rdx)
   1abc7:	add    $0xfffffffffffffffe,%rcx
   1abcb:	add    $0xfffffffffffffffe,%rdx
   1abcf:	add    $0x1,%eax
   1abd2:	cmp    %eax,%r8d
   1abd5:	jbe    1ab81 <png_do_expand+0x301>
   1abd7:	movzbl -0x1(%rcx),%esi
   1abdb:	cmp    %r9d,%esi
   1abde:	jne    1abae <png_do_expand+0x32e>
   1abe0:	movzbl (%rcx),%esi
   1abe3:	cmp    %r10d,%esi
   1abe6:	jne    1abae <png_do_expand+0x32e>
   1abe8:	movb   $0x0,(%rdx)
   1abeb:	movb   $0x0,-0x1(%rdx)
   1abef:	add    $0xfffffffffffffffe,%rdx
   1abf3:	jmp    1abb9 <png_do_expand+0x339>
   1abf5:	movzbl -0x2(%rcx),%r14d
   1abfa:	cmp    %r14b,%r11b
   1abfd:	jne    1a9e0 <png_do_expand+0x160>
   1ac03:	movzbl -0x1(%rcx),%r14d
   1ac08:	cmp    %r14b,%r10b
   1ac0b:	jne    1a9e0 <png_do_expand+0x160>
   1ac11:	movzbl (%rcx),%r14d
   1ac15:	cmp    %r14b,%dl
   1ac18:	jne    1a9e0 <png_do_expand+0x160>
   1ac1e:	lea    -0x1(%rsi),%r14
   1ac22:	mov    %rax,%r15
   1ac25:	jmpq   1a9e7 <png_do_expand+0x167>
   1ac2a:	movzbl %al,%eax
   1ac2d:	shr    $0x3,%rax
   1ac31:	imul   %r8,%rax
   1ac35:	mov    %rax,0x8(%rdi)
   1ac39:	leaveq 
   1ac3a:	retq   
   1ac3b:	movzbl -0x5(%r14),%r13d
   1ac40:	cmp    %r11b,%r13b
   1ac43:	jne    1aa4f <png_do_expand+0x1cf>
   1ac49:	movzbl -0x4(%r14),%r13d
   1ac4e:	cmp    %r13b,%cl
   1ac51:	jne    1aa4f <png_do_expand+0x1cf>
   1ac57:	movzbl -0x3(%r14),%r13d
   1ac5c:	cmp    %r9b,%r13b
   1ac5f:	jne    1aa4f <png_do_expand+0x1cf>
   1ac65:	movzbl -0x2(%r14),%r13d
   1ac6a:	cmp    %r13b,%r10b
   1ac6d:	jne    1aa4f <png_do_expand+0x1cf>
   1ac73:	movzbl -0x1(%r14),%r13d
   1ac78:	cmp    %r15b,%r13b
   1ac7b:	jne    1aa4f <png_do_expand+0x1cf>
   1ac81:	movzbl (%r14),%r13d
   1ac85:	cmp    %r13b,%dl
   1ac88:	jne    1aa4f <png_do_expand+0x1cf>
   1ac8e:	movb   $0x0,(%rsi)
   1ac91:	movb   $0x0,-0x1(%rsi)
   1ac95:	add    $0xfffffffffffffffe,%rsi
   1ac99:	jmpq   1aa5a <png_do_expand+0x1da>
   1ac9e:	mov    $0xfffffffffffffff8,%rcx
   1aca5:	sub    %r8d,%ecx
   1aca8:	and    $0x7,%ecx
   1acab:	lea    -0x1(%rsi,%r8,1),%r10
   1acb0:	mov    %r15,-0x38(%rbp)
   1acb4:	lea    -0x1(%r8),%r15d
   1acb8:	shr    $0x3,%r15d
   1acbc:	mov    %r15d,%r15d
   1acbf:	add    %rsi,%r15
   1acc2:	mov    %rsi,-0x8(%rbp)
   1acc6:	mov    %r11,-0x18(%rbp)
   1acca:	mov    %rax,%r11
   1accd:	jmpq   1ad6e <png_do_expand+0x4ee>
   1acd2:	add    $0xffffffffffffffff,%r9
   1acd6:	mov    %rax,%rcx
   1acd9:	add    $0xffffffffffffffff,%r10
   1acdd:	add    $0x1,%esi
   1ace0:	cmp    %esi,%r8d
   1ace3:	ja     1ad8d <png_do_expand+0x50d>
   1ace9:	mov    -0x20(%rbp),%rcx
   1aced:	and    $0x3,%ecx
   1acf0:	mov    %rcx,%rdx
   1acf3:	shl    $0x4,%edx
   1acf6:	add    %edx,%ecx
   1acf8:	lea    (%rcx,%rcx,4),%r11d
   1acfc:	mov    -0x38(%rbp),%rdx
   1ad00:	mov    -0x10(%rbp),%rsi
   1ad04:	mov    $0xff,%r9d
   1ad0a:	jmpq   1aabc <png_do_expand+0x23c>
   1ad0f:	movzbl (%r9),%edx
   1ad13:	shr    %cl,%edx
   1ad15:	mov    %rdx,%r15
   1ad18:	and    $0xf,%r15b
   1ad1c:	shl    $0x4,%edx
   1ad1f:	add    %r15d,%edx
   1ad22:	mov    %dl,(%r10)
   1ad25:	cmp    $0x4,%ecx
   1ad28:	je     1ab02 <png_do_expand+0x282>
   1ad2e:	mov    %rsi,%rcx
   1ad31:	jmpq   1ab09 <png_do_expand+0x289>
   1ad36:	movzbl (%rcx),%esi
   1ad39:	cmp    %r11d,%esi
   1ad3c:	je     1ab59 <png_do_expand+0x2d9>
   1ad42:	lea    -0x1(%rdx),%rsi
   1ad46:	mov    %r9,%r15
   1ad49:	jmpq   1ab60 <png_do_expand+0x2e0>
   1ad4e:	movzbl %al,%eax
   1ad51:	shr    $0x3,%rax
   1ad55:	imul   %r8,%rax
   1ad59:	mov    %rax,0x8(%rdi)
   1ad5d:	leaveq 
   1ad5e:	retq   
   1ad5f:	add    $0xffffffffffffffff,%r15
   1ad63:	mov    %rax,%rcx
   1ad66:	add    $0xffffffffffffffff,%r10
   1ad6a:	add    $0x1,%r11d
   1ad6e:	cmp    %r11d,%r8d
   1ad71:	ja     1adb7 <png_do_expand+0x537>
   1ad73:	mov    -0x18(%rbp),%rcx
   1ad77:	and    $0x1,%ecx
   1ad7a:	neg    %ecx
   1ad7c:	movzbl %cl,%r11d
   1ad80:	mov    -0x8(%rbp),%rsi
   1ad84:	mov    -0x38(%rbp),%r15
   1ad88:	jmpq   1aabc <png_do_expand+0x23c>
   1ad8d:	movzbl (%r9),%edx
   1ad91:	shr    %cl,%edx
   1ad93:	and    $0x3,%dl
   1ad96:	mov    %rdx,%r11
   1ad99:	shl    $0x4,%r11d
   1ad9d:	add    %r11d,%edx
   1ada0:	lea    (%rdx,%rdx,4),%edx
   1ada3:	mov    %dl,(%r10)
   1ada6:	cmp    $0x6,%ecx
   1ada9:	je     1acd2 <png_do_expand+0x452>
   1adaf:	add    $0x2,%ecx
   1adb2:	jmpq   1acd9 <png_do_expand+0x459>
   1adb7:	movzbl (%r15),%esi
   1adbb:	shr    %cl,%esi
   1adbd:	and    $0x1,%esi
   1adc0:	test   %esi,%esi
   1adc2:	jg     1adc9 <png_do_expand+0x549>
   1adc4:	mov    %rax,%rsi
   1adc7:	jmp    1adcc <png_do_expand+0x54c>
   1adc9:	mov    %r9,%rsi
   1adcc:	mov    %sil,(%r10)
   1adcf:	cmp    $0x7,%ecx
   1add2:	je     1ad5f <png_do_expand+0x4df>
   1add4:	add    $0x1,%ecx
   1add7:	jmp    1ad66 <png_do_expand+0x4e6>
   1add9:	nopl   0x0(%rax)

000000000001ade0 <png_do_expand_16>:
   1ade0:	push   %rbp
   1ade1:	mov    %rsp,%rbp
   1ade4:	movzbl 0x11(%rdi),%eax
   1ade8:	cmp    $0x8,%al
   1adea:	je     1adee <png_do_expand_16+0xe>
   1adec:	leaveq 
   1aded:	retq   
   1adee:	movzbl 0x10(%rdi),%eax
   1adf2:	cmp    $0x3,%al
   1adf4:	jne    1adf8 <png_do_expand_16+0x18>
   1adf6:	leaveq 
   1adf7:	retq   
   1adf8:	mov    0x8(%rdi),%rcx
   1adfc:	lea    (%rcx,%rsi,1),%rax
   1ae00:	lea    (%rsi,%rcx,2),%rcx
   1ae04:	jmp    1ae16 <png_do_expand_16+0x36>
   1ae06:	add    $0xffffffffffffffff,%rax
   1ae0a:	movzbl (%rax),%edx
   1ae0d:	mov    %dl,-0x1(%rcx)
   1ae10:	add    $0xfffffffffffffffe,%rcx
   1ae14:	mov    %dl,(%rcx)
   1ae16:	cmp    %rcx,%rax
   1ae19:	jb     1ae06 <png_do_expand_16+0x26>
   1ae1b:	mov    0x8(%rdi),%rax
   1ae1f:	add    %rax,%rax
   1ae22:	mov    %rax,0x8(%rdi)
   1ae26:	movb   $0x10,0x11(%rdi)
   1ae2a:	movzbl 0x12(%rdi),%eax
   1ae2e:	shl    $0x4,%eax
   1ae31:	mov    %al,0x13(%rdi)
   1ae34:	leaveq 
   1ae35:	retq   
   1ae36:	nopw   %cs:0x0(%rax,%rax,1)

000000000001ae40 <png_do_quantize>:
   1ae40:	push   %rbp
   1ae41:	mov    %rsp,%rbp
   1ae44:	mov    (%rdi),%r10d
   1ae47:	movzbl 0x11(%rdi),%eax
   1ae4b:	cmp    $0x8,%al
   1ae4d:	je     1ae51 <png_do_quantize+0x11>
   1ae4f:	leaveq 
   1ae50:	retq   
   1ae51:	xor    %eax,%eax
   1ae53:	movzbl 0x10(%rdi),%r8d
   1ae58:	cmp    $0x2,%r8b
   1ae5c:	je     1ae6c <png_do_quantize+0x2c>
   1ae5e:	cmp    $0x6,%r8b
   1ae62:	je     1ae76 <png_do_quantize+0x36>
   1ae64:	cmp    $0x3,%r8b
   1ae68:	je     1ae83 <png_do_quantize+0x43>
   1ae6a:	leaveq 
   1ae6b:	retq   
   1ae6c:	test   %rdx,%rdx
   1ae6f:	je     1ae5e <png_do_quantize+0x1e>
   1ae71:	mov    %rsi,%r8
   1ae74:	jmp    1aeca <png_do_quantize+0x8a>
   1ae76:	test   %rdx,%rdx
   1ae79:	je     1ae64 <png_do_quantize+0x24>
   1ae7b:	mov    %rsi,%r8
   1ae7e:	jmpq   1af33 <png_do_quantize+0xf3>
   1ae83:	test   %rcx,%rcx
   1ae86:	jne    1af69 <png_do_quantize+0x129>
   1ae8c:	leaveq 
   1ae8d:	retq   
   1ae8e:	movzbl (%r8),%ecx
   1ae92:	and    $0x1fffff8,%ecx
   1ae98:	shl    $0x7,%ecx
   1ae9b:	movzbl 0x1(%r8),%r9d
   1aea0:	and    $0x3ffffff8,%r9d
   1aea7:	lea    (%rcx,%r9,4),%r9d
   1aeab:	movzbl 0x2(%r8),%ecx
   1aeb0:	shr    $0x3,%ecx
   1aeb3:	add    %r9d,%ecx
   1aeb6:	movslq %ecx,%rcx
   1aeb9:	movzbl (%rdx,%rcx,1),%ecx
   1aebd:	mov    %cl,(%rsi)
   1aebf:	add    $0x1,%eax
   1aec2:	add    $0x3,%r8
   1aec6:	add    $0x1,%rsi
   1aeca:	cmp    %r10d,%eax
   1aecd:	jb     1ae8e <png_do_quantize+0x4e>
   1aecf:	movb   $0x3,0x10(%rdi)
   1aed3:	movb   $0x1,0x12(%rdi)
   1aed7:	movzbl 0x11(%rdi),%eax
   1aedb:	mov    %al,0x13(%rdi)
   1aede:	cmp    $0x7,%al
   1aee0:	ja     1af70 <png_do_quantize+0x130>
   1aee6:	imul   %r10,%rax
   1aeea:	add    $0x7,%rax
   1aeee:	shr    $0x3,%rax
   1aef2:	jmpq   1af78 <png_do_quantize+0x138>
   1aef7:	movzbl (%r8),%ecx
   1aefb:	and    $0x1fffff8,%ecx
   1af01:	shl    $0x7,%ecx
   1af04:	movzbl 0x1(%r8),%r9d
   1af09:	and    $0x3ffffff8,%r9d
   1af10:	lea    (%rcx,%r9,4),%r9d
   1af14:	movzbl 0x2(%r8),%ecx
   1af19:	shr    $0x3,%ecx
   1af1c:	add    %r9d,%ecx
   1af1f:	movslq %ecx,%rcx
   1af22:	movzbl (%rdx,%rcx,1),%ecx
   1af26:	mov    %cl,(%rsi)
   1af28:	add    $0x1,%eax
   1af2b:	add    $0x4,%r8
   1af2f:	add    $0x1,%rsi
   1af33:	cmp    %eax,%r10d
   1af36:	ja     1aef7 <png_do_quantize+0xb7>
   1af38:	movb   $0x3,0x10(%rdi)
   1af3c:	movb   $0x1,0x12(%rdi)
   1af40:	movzbl 0x11(%rdi),%eax
   1af44:	mov    %al,0x13(%rdi)
   1af47:	cmp    $0x7,%al
   1af49:	ja     1af7e <png_do_quantize+0x13e>
   1af4b:	imul   %r10,%rax
   1af4f:	add    $0x7,%rax
   1af53:	shr    $0x3,%rax
   1af57:	jmp    1af86 <png_do_quantize+0x146>
   1af59:	movzbl (%rsi),%edx
   1af5c:	movzbl (%rcx,%rdx,1),%edx
   1af60:	mov    %dl,(%rsi)
   1af62:	add    $0x1,%eax
   1af65:	add    $0x1,%rsi
   1af69:	cmp    %eax,%r10d
   1af6c:	ja     1af59 <png_do_quantize+0x119>
   1af6e:	leaveq 
   1af6f:	retq   
   1af70:	shr    $0x3,%rax
   1af74:	imul   %r10,%rax
   1af78:	mov    %rax,0x8(%rdi)
   1af7c:	leaveq 
   1af7d:	retq   
   1af7e:	shr    $0x3,%rax
   1af82:	imul   %r10,%rax
   1af86:	mov    %rax,0x8(%rdi)
   1af8a:	leaveq 
   1af8b:	retq   
   1af8c:	nopl   0x0(%rax)

000000000001af90 <png_get_uint_32>:
   1af90:	push   %rbp
   1af91:	mov    %rsp,%rbp
   1af94:	movzbl (%rdi),%eax
   1af97:	shl    $0x18,%eax
   1af9a:	movzbl 0x1(%rdi),%ecx
   1af9e:	shl    $0x10,%ecx
   1afa1:	add    %eax,%ecx
   1afa3:	movzbl 0x2(%rdi),%eax
   1afa7:	shl    $0x8,%eax
   1afaa:	add    %ecx,%eax
   1afac:	movzbl 0x3(%rdi),%ecx
   1afb0:	add    %ecx,%eax
   1afb2:	leaveq 
   1afb3:	retq   
   1afb4:	data16 nopw %cs:0x0(%rax,%rax,1)
   1afbf:	nop

000000000001afc0 <png_get_uint_16>:
   1afc0:	push   %rbp
   1afc1:	mov    %rsp,%rbp
   1afc4:	movzbl 0x1(%rdi),%ecx
   1afc8:	movzbl (%rdi),%eax
   1afcb:	shl    $0x8,%eax
   1afce:	add    %ecx,%eax
   1afd0:	leaveq 
   1afd1:	retq   
   1afd2:	data16 nopw %cs:0x0(%rax,%rax,1)
   1afdd:	nopl   (%rax)

000000000001afe0 <png_get_int_32>:
   1afe0:	push   %rbp
   1afe1:	mov    %rsp,%rbp
   1afe4:	movzbl (%rdi),%ecx
   1afe7:	shl    $0x18,%ecx
   1afea:	movzbl 0x1(%rdi),%eax
   1afee:	shl    $0x10,%eax
   1aff1:	add    %eax,%ecx
   1aff3:	movzbl 0x2(%rdi),%eax
   1aff7:	shl    $0x8,%eax
   1affa:	add    %eax,%ecx
   1affc:	movzbl 0x3(%rdi),%eax
   1b000:	add    %ecx,%eax
   1b002:	mov    %rax,%rcx
   1b005:	and    $0x80000000,%ecx
   1b00b:	test   %ecx,%ecx
   1b00d:	jne    1b011 <png_get_int_32+0x31>
   1b00f:	leaveq 
   1b010:	retq   
   1b011:	neg    %eax
   1b013:	mov    %rax,%rcx
   1b016:	and    $0x80000000,%ecx
   1b01c:	test   %ecx,%ecx
   1b01e:	je     1b024 <png_get_int_32+0x44>
   1b020:	xor    %eax,%eax
   1b022:	leaveq 
   1b023:	retq   
   1b024:	neg    %eax
   1b026:	leaveq 
   1b027:	retq   
   1b028:	nopl   0x0(%rax,%rax,1)

000000000001b030 <png_get_uint_31>:
   1b030:	push   %rbp
   1b031:	mov    %rsp,%rbp
   1b034:	movzbl (%rsi),%eax
   1b037:	shl    $0x18,%eax
   1b03a:	movzbl 0x1(%rsi),%ecx
   1b03e:	shl    $0x10,%ecx
   1b041:	add    %eax,%ecx
   1b043:	movzbl 0x2(%rsi),%eax
   1b047:	shl    $0x8,%eax
   1b04a:	add    %eax,%ecx
   1b04c:	movzbl 0x3(%rsi),%eax
   1b050:	add    %ecx,%eax
   1b052:	cmp    $0x7fffffff,%eax
   1b057:	ja     1b05b <png_get_uint_31+0x2b>
   1b059:	leaveq 
   1b05a:	retq   
   1b05b:	lea    0x135de(%rip),%rsi        # 2e640 <chunks_to_process.34+0x83b>
   1b062:	callq  5470 <png_error@plt>
   1b067:	nopw   0x0(%rax,%rax,1)

000000000001b070 <png_read_sig>:
   1b070:	push   %rbp
   1b071:	mov    %rsp,%rbp
   1b074:	sub    $0x20,%rsp
   1b078:	movzbl 0x26d(%rdi),%r8d
   1b080:	cmp    $0x7,%r8b
   1b084:	jbe    1b088 <png_read_sig+0x18>
   1b086:	leaveq 
   1b087:	retq   
   1b088:	movl   $0x11,0x46c(%rdi)
   1b092:	lea    0x2c(%rsi,%r8,1),%rax
   1b097:	mov    $0x8,%edx
   1b09c:	sub    %r8,%rdx
   1b09f:	mov    %rdi,%rcx
   1b0a2:	mov    %rdx,%r9
   1b0a5:	mov    %r12,-0x8(%rbp)
   1b0a9:	mov    %r13,-0x10(%rbp)
   1b0ad:	mov    %r14,-0x18(%rbp)
   1b0b1:	mov    %r15,-0x20(%rbp)
   1b0b5:	mov    %rdi,%r12
   1b0b8:	mov    %rcx,%rdi
   1b0bb:	mov    %r8,%r13
   1b0be:	mov    %rsi,%r14
   1b0c1:	mov    %rax,%rsi
   1b0c4:	mov    %rdx,%r15
   1b0c7:	mov    %r9,%rdx
   1b0ca:	callq  14830 <png_read_data>
   1b0cf:	movb   $0x8,0x26d(%r12)
   1b0d8:	add    $0x2c,%r14
   1b0dc:	mov    %r15,%rdx
   1b0df:	mov    %r14,%rdi
   1b0e2:	mov    %r13,%rsi
   1b0e5:	callq  57d0 <png_sig_cmp@plt>
   1b0ea:	test   %eax,%eax
   1b0ec:	jne    1b106 <png_read_sig+0x96>
   1b0ee:	cmp    $0x2,%r13b
   1b0f2:	jbe    1b11b <png_read_sig+0xab>
   1b0f4:	mov    -0x20(%rbp),%r15
   1b0f8:	mov    -0x18(%rbp),%r14
   1b0fc:	mov    -0x10(%rbp),%r13
   1b100:	mov    -0x8(%rbp),%r12
   1b104:	leaveq 
   1b105:	retq   
   1b106:	cmp    $0x3,%r13b
   1b10a:	jbe    1b142 <png_read_sig+0xd2>
   1b10c:	mov    %r12,%rdi
   1b10f:	lea    0x1355b(%rip),%rsi        # 2e671 <chunks_to_process.34+0x86c>
   1b116:	callq  5470 <png_error@plt>
   1b11b:	mov    0x12c(%r12),%eax
   1b123:	or     $0x1000,%eax
   1b128:	mov    %eax,0x12c(%r12)
   1b130:	mov    -0x20(%rbp),%r15
   1b134:	mov    -0x18(%rbp),%r14
   1b138:	mov    -0x10(%rbp),%r13
   1b13c:	mov    -0x8(%rbp),%r12
   1b140:	leaveq 
   1b141:	retq   
   1b142:	mov    $0x4,%edx
   1b147:	sub    %r13,%rdx
   1b14a:	mov    %r13,%rsi
   1b14d:	mov    %r14,%rdi
   1b150:	callq  57d0 <png_sig_cmp@plt>
   1b155:	test   %eax,%eax
   1b157:	je     1b10c <png_read_sig+0x9c>
   1b159:	mov    %r12,%rdi
   1b15c:	lea    0x134ff(%rip),%rsi        # 2e662 <chunks_to_process.34+0x85d>
   1b163:	callq  5470 <png_error@plt>
   1b168:	nopl   0x0(%rax,%rax,1)

000000000001b170 <png_read_chunk_header>:
   1b170:	push   %rbp
   1b171:	mov    %rsp,%rbp
   1b174:	sub    $0x20,%rsp
   1b178:	mov    %r15,-0x10(%rbp)
   1b17c:	mov    %r14,-0x8(%rbp)
   1b180:	movl   $0x21,0x46c(%rdi)
   1b18a:	lea    -0x18(%rbp),%rsi
   1b18e:	mov    $0x8,%edx
   1b193:	mov    %rdi,%r14
   1b196:	callq  14830 <png_read_data>
   1b19b:	mov    %r14,%rdi
   1b19e:	lea    -0x18(%rbp),%rsi
   1b1a2:	callq  5730 <png_get_uint_31@plt>
   1b1a7:	movzbl -0x14(%rbp),%ecx
   1b1ab:	shl    $0x18,%ecx
   1b1ae:	movzbl -0x13(%rbp),%edx
   1b1b2:	shl    $0x10,%edx
   1b1b5:	add    %ecx,%edx
   1b1b7:	movzbl -0x12(%rbp),%ecx
   1b1bb:	shl    $0x8,%ecx
   1b1be:	add    %ecx,%edx
   1b1c0:	movzbl -0x11(%rbp),%ecx
   1b1c4:	add    %edx,%ecx
   1b1c6:	mov    %ecx,0x218(%r14)
   1b1cd:	mov    %rax,%r15
   1b1d0:	mov    %r14,%rdi
   1b1d3:	callq  6d90 <png_reset_crc>
   1b1d8:	lea    -0x14(%rbp),%rsi
   1b1dc:	mov    $0x4,%edx
   1b1e1:	mov    %r14,%rdi
   1b1e4:	callq  6dc0 <png_calculate_crc>
   1b1e9:	mov    0x218(%r14),%esi
   1b1f0:	mov    %r14,%rdi
   1b1f3:	callq  1fcd0 <png_check_chunk_name>
   1b1f8:	mov    %r14,%rdi
   1b1fb:	mov    %r15,%rsi
   1b1fe:	callq  1fd10 <png_check_chunk_length>
   1b203:	movl   $0x41,0x46c(%r14)
   1b20e:	mov    %r15,%rax
   1b211:	mov    -0x8(%rbp),%r14
   1b215:	mov    -0x10(%rbp),%r15
   1b219:	leaveq 
   1b21a:	retq   
   1b21b:	nopl   0x0(%rax,%rax,1)

000000000001b220 <png_crc_read>:
   1b220:	push   %rbp
   1b221:	mov    %rsp,%rbp
   1b224:	sub    $0x20,%rsp
   1b228:	test   %rdi,%rdi
   1b22b:	jne    1b22f <png_crc_read+0xf>
   1b22d:	leaveq 
   1b22e:	retq   
   1b22f:	mov    %edx,%edx
   1b231:	mov    %rdi,%r8
   1b234:	mov    %rsi,%rcx
   1b237:	mov    %rdx,%rax
   1b23a:	mov    %r13,-0x8(%rbp)
   1b23e:	mov    %r14,-0x10(%rbp)
   1b242:	mov    %r15,-0x18(%rbp)
   1b246:	mov    %rdx,%r13
   1b249:	mov    %rax,%rdx
   1b24c:	mov    %rsi,%r14
   1b24f:	mov    %rcx,%rsi
   1b252:	mov    %rdi,%r15
   1b255:	mov    %r8,%rdi
   1b258:	callq  14830 <png_read_data>
   1b25d:	mov    %r13,%rdx
   1b260:	mov    %r14,%rsi
   1b263:	mov    %r15,%rdi
   1b266:	callq  6dc0 <png_calculate_crc>
   1b26b:	mov    -0x18(%rbp),%r15
   1b26f:	mov    -0x10(%rbp),%r14
   1b273:	mov    -0x8(%rbp),%r13
   1b277:	leaveq 
   1b278:	retq   
   1b279:	nopl   0x0(%rax)

000000000001b280 <png_crc_finish>:
   1b280:	push   %rbp
   1b281:	mov    %rsp,%rbp
   1b284:	sub    $0x430,%rsp
   1b28b:	mov    %rbx,-0x8(%rbp)
   1b28f:	mov    %r12,-0x10(%rbp)
   1b293:	mov    %r13,-0x18(%rbp)
   1b297:	mov    %r14,-0x20(%rbp)
   1b29b:	mov    %r15,-0x28(%rbp)
   1b29f:	mov    %rsi,%rbx
   1b2a2:	mov    %rdi,%r12
   1b2a5:	lea    -0x428(%rbp),%r13
   1b2ac:	mov    $0x400,%r14d
   1b2b2:	jmp    1b2c8 <png_crc_finish+0x48>
   1b2b4:	mov    %rbx,%r15
   1b2b7:	mov    %r12,%rdi
   1b2ba:	mov    %r13,%rsi
   1b2bd:	mov    %r15,%rdx
   1b2c0:	callq  1b220 <png_crc_read>
   1b2c5:	sub    %r15d,%ebx
   1b2c8:	test   %ebx,%ebx
   1b2ca:	jne    1b2f3 <png_crc_finish+0x73>
   1b2cc:	xor    %ebx,%ebx
   1b2ce:	mov    %r12,%rdi
   1b2d1:	callq  1b380 <png_crc_error>
   1b2d6:	test   %eax,%eax
   1b2d8:	jne    1b300 <png_crc_finish+0x80>
   1b2da:	mov    %rbx,%rax
   1b2dd:	mov    -0x28(%rbp),%r15
   1b2e1:	mov    -0x20(%rbp),%r14
   1b2e5:	mov    -0x18(%rbp),%r13
   1b2e9:	mov    -0x10(%rbp),%r12
   1b2ed:	mov    -0x8(%rbp),%rbx
   1b2f1:	leaveq 
   1b2f2:	retq   
   1b2f3:	cmp    $0x3ff,%ebx
   1b2f9:	jbe    1b2b4 <png_crc_finish+0x34>
   1b2fb:	mov    %r14,%r15
   1b2fe:	jmp    1b2b7 <png_crc_finish+0x37>
   1b300:	mov    $0x1,%r13d
   1b306:	mov    0x218(%r12),%ecx
   1b30e:	and    $0x20000000,%ecx
   1b314:	test   %ecx,%ecx
   1b316:	jne    1b32e <png_crc_finish+0xae>
   1b318:	mov    0x130(%r12),%eax
   1b320:	and    $0x400,%eax
   1b325:	test   %eax,%eax
   1b327:	je     1b342 <png_crc_finish+0xc2>
   1b329:	mov    %r13,%rbx
   1b32c:	jmp    1b342 <png_crc_finish+0xc2>
   1b32e:	mov    0x130(%r12),%eax
   1b336:	and    $0x200,%eax
   1b33b:	test   %eax,%eax
   1b33d:	jne    1b342 <png_crc_finish+0xc2>
   1b33f:	mov    %r13,%rbx
   1b342:	lea    0x1334f(%rip),%rsi        # 2e698 <chunks_to_process.34+0x893>
   1b349:	test   %ebx,%ebx
   1b34b:	jg     1b355 <png_crc_finish+0xd5>
   1b34d:	mov    %r12,%rdi
   1b350:	callq  5060 <png_chunk_error@plt>
   1b355:	mov    %r12,%rdi
   1b358:	callq  56a0 <png_chunk_warning@plt>
   1b35d:	mov    %r13,%rax
   1b360:	mov    -0x28(%rbp),%r15
   1b364:	mov    -0x20(%rbp),%r14
   1b368:	mov    -0x18(%rbp),%r13
   1b36c:	mov    -0x10(%rbp),%r12
   1b370:	mov    -0x8(%rbp),%rbx
   1b374:	leaveq 
   1b375:	retq   
   1b376:	nopw   %cs:0x0(%rax,%rax,1)

000000000001b380 <png_crc_error>:
   1b380:	push   %rbp
   1b381:	mov    %rsp,%rbp
   1b384:	sub    $0x20,%rsp
   1b388:	mov    %r15,-0x10(%rbp)
   1b38c:	mov    %rdi,-0x8(%rbp)
   1b390:	mov    $0x1,%ecx
   1b395:	xor    %r15d,%r15d
   1b398:	mov    0x218(%rdi),%eax
   1b39e:	and    $0x20000000,%eax
   1b3a3:	test   %eax,%eax
   1b3a5:	jne    1b3de <png_crc_error+0x5e>
   1b3a7:	mov    0x130(%rdi),%eax
   1b3ad:	and    $0x800,%eax
   1b3b2:	test   %eax,%eax
   1b3b4:	jne    1b3b9 <png_crc_error+0x39>
   1b3b6:	mov    %rcx,%r15
   1b3b9:	movl   $0x81,0x46c(%rdi)
   1b3c3:	lea    -0x14(%rbp),%rsi
   1b3c7:	mov    $0x4,%edx
   1b3cc:	callq  14830 <png_read_data>
   1b3d1:	test   %r15d,%r15d
   1b3d4:	jg     1b3f5 <png_crc_error+0x75>
   1b3d6:	xor    %eax,%eax
   1b3d8:	mov    -0x10(%rbp),%r15
   1b3dc:	leaveq 
   1b3dd:	retq   
   1b3de:	mov    0x130(%rdi),%eax
   1b3e4:	and    $0x300,%eax
   1b3e9:	cmp    $0x300,%eax
   1b3ee:	je     1b3b9 <png_crc_error+0x39>
   1b3f0:	mov    %rcx,%r15
   1b3f3:	jmp    1b3b9 <png_crc_error+0x39>
   1b3f5:	movzbl -0x14(%rbp),%ecx
   1b3f9:	shl    $0x18,%ecx
   1b3fc:	movzbl -0x13(%rbp),%eax
   1b400:	shl    $0x10,%eax
   1b403:	add    %eax,%ecx
   1b405:	movzbl -0x12(%rbp),%eax
   1b409:	shl    $0x8,%eax
   1b40c:	add    %ecx,%eax
   1b40e:	movzbl -0x11(%rbp),%ecx
   1b412:	add    %ecx,%eax
   1b414:	mov    -0x8(%rbp),%rcx
   1b418:	mov    0x24c(%rcx),%ecx
   1b41e:	cmp    %eax,%ecx
   1b420:	je     1b42d <png_crc_error+0xad>
   1b422:	mov    $0x1,%eax
   1b427:	mov    -0x10(%rbp),%r15
   1b42b:	leaveq 
   1b42c:	retq   
   1b42d:	xor    %eax,%eax
   1b42f:	mov    -0x10(%rbp),%r15
   1b433:	leaveq 
   1b434:	retq   
   1b435:	data16 nopw %cs:0x0(%rax,%rax,1)

000000000001b440 <png_combine_row>:
   1b440:	push   %rbp
   1b441:	mov    %rsp,%rbp
   1b444:	sub    $0x50,%rsp
   1b448:	movzbl 0x265(%rdi),%r10d
   1b450:	mov    0x228(%rdi),%r11
   1b457:	mov    0x1f8(%rdi),%r8d
   1b45e:	movzbl 0x26f(%rdi),%r9d
   1b466:	test   %r9b,%r9b
   1b469:	je     1b4cd <png_combine_row+0x8d>
   1b46b:	mov    0x240(%rdi),%rcx
   1b472:	test   %rcx,%rcx
   1b475:	jne    1b4d9 <png_combine_row+0x99>
   1b477:	test   %r8d,%r8d
   1b47a:	je     1b4f7 <png_combine_row+0xb7>
   1b47c:	xor    %eax,%eax
   1b47e:	mov    %rax,-0x18(%rbp)
   1b482:	mov    %r8,%rax
   1b485:	imul   %r9,%rax
   1b489:	mov    %rax,%rcx
   1b48c:	and    $0x7,%ecx
   1b48f:	test   %ecx,%ecx
   1b491:	jne    1b503 <png_combine_row+0xc3>
   1b493:	mov    %r15,%rcx
   1b496:	xor    %r15d,%r15d
   1b499:	pushq  -0x18(%rbp)
   1b49c:	popq   -0x20(%rbp)
   1b49f:	mov    %r11,-0x30(%rbp)
   1b4a3:	add    $0x1,%r11
   1b4a7:	mov    %rcx,-0x48(%rbp)
   1b4ab:	movzbl 0x264(%rdi),%ecx
   1b4b2:	test   %cl,%cl
   1b4b4:	jne    1b51e <png_combine_row+0xde>
   1b4b6:	cmp    $0x7,%r9b
   1b4ba:	ja     1b573 <png_combine_row+0x133>
   1b4c0:	lea    0x7(%rax),%r8
   1b4c4:	shr    $0x3,%r8
   1b4c8:	jmpq   1b57b <png_combine_row+0x13b>
   1b4cd:	lea    0x131ce(%rip),%rsi        # 2e6a2 <chunks_to_process.34+0x89d>
   1b4d4:	callq  5470 <png_error@plt>
   1b4d9:	cmp    $0x7,%r9b
   1b4dd:	ja     1b5a0 <png_combine_row+0x160>
   1b4e3:	mov    %r9,%rax
   1b4e6:	imul   %r8,%rax
   1b4ea:	add    $0x7,%rax
   1b4ee:	shr    $0x3,%rax
   1b4f2:	jmpq   1b5ab <png_combine_row+0x16b>
   1b4f7:	lea    0x131e1(%rip),%rsi        # 2e6df <chunks_to_process.34+0x8da>
   1b4fe:	callq  5470 <png_error@plt>
   1b503:	cmp    $0x7,%r9b
   1b507:	ja     1b5c0 <png_combine_row+0x180>
   1b50d:	mov    %r15,-0x48(%rbp)
   1b511:	lea    0x7(%rax),%r15
   1b515:	shr    $0x3,%r15
   1b519:	jmpq   1b5cf <png_combine_row+0x18f>
   1b51e:	mov    0x134(%rdi),%ecx
   1b524:	and    $0x2,%ecx
   1b527:	test   %ecx,%ecx
   1b529:	je     1b4b6 <png_combine_row+0x76>
   1b52b:	cmp    $0x5,%r10b
   1b52f:	ja     1b4b6 <png_combine_row+0x76>
   1b531:	test   %edx,%edx
   1b533:	je     1b54c <png_combine_row+0x10c>
   1b535:	cmp    $0x1,%edx
   1b538:	jne    1b4b6 <png_combine_row+0x76>
   1b53e:	mov    %r10,%rcx
   1b541:	and    $0x1,%ecx
   1b544:	test   %ecx,%ecx
   1b546:	je     1b4b6 <png_combine_row+0x76>
   1b54c:	mov    $0x3,%ecx
   1b551:	lea    0x1(%r10),%eax
   1b555:	shr    %eax
   1b557:	sub    %eax,%ecx
   1b559:	mov    %r10,%rax
   1b55c:	and    $0x1,%eax
   1b55f:	shl    %cl,%eax
   1b561:	and    $0x7,%eax
   1b564:	cmp    %eax,%r8d
   1b567:	ja     1b619 <png_combine_row+0x1d9>
   1b56d:	mov    -0x48(%rbp),%r15
   1b571:	leaveq 
   1b572:	retq   
   1b573:	shr    $0x3,%r9
   1b577:	imul   %r9,%r8
   1b57b:	mov    %r8,%rdx
   1b57e:	mov    %rsi,%rdi
   1b581:	mov    %r11,%rsi
   1b584:	callq  54c0 <memcpy@plt>
   1b589:	mov    -0x18(%rbp),%rax
   1b58d:	mov    -0x20(%rbp),%rcx
   1b591:	test   %r15,%r15
   1b594:	jne    1b68e <png_combine_row+0x24e>
   1b59a:	mov    -0x48(%rbp),%r15
   1b59e:	leaveq 
   1b59f:	retq   
   1b5a0:	mov    %r9,%rax
   1b5a3:	shr    $0x3,%rax
   1b5a7:	imul   %r8,%rax
   1b5ab:	cmp    %rax,%rcx
   1b5ae:	je     1b477 <png_combine_row+0x37>
   1b5b4:	lea    0x13100(%rip),%rsi        # 2e6bb <chunks_to_process.34+0x8b6>
   1b5bb:	callq  5470 <png_error@plt>
   1b5c0:	mov    %r15,-0x48(%rbp)
   1b5c4:	mov    %r9,%r15
   1b5c7:	shr    $0x3,%r15
   1b5cb:	imul   %r8,%r15
   1b5cf:	lea    -0x1(%r15,%rsi,1),%r15
   1b5d4:	mov    %r14,-0x40(%rbp)
   1b5d8:	movzbl (%r15),%r14d
   1b5dc:	mov    %r13,-0x38(%rbp)
   1b5e0:	mov    %r14,-0x18(%rbp)
   1b5e4:	mov    0x134(%rdi),%r13d
   1b5eb:	and    $0x10000,%r13d
   1b5f2:	test   %r13d,%r13d
   1b5f5:	jne    1b6a7 <png_combine_row+0x267>
   1b5fb:	mov    $0xff,%r13d
   1b601:	shr    %cl,%r13d
   1b604:	mov    %r13,-0x20(%rbp)
   1b608:	mov    -0x38(%rbp),%r13
   1b60c:	mov    -0x40(%rbp),%r14
   1b610:	mov    -0x48(%rbp),%rcx
   1b614:	jmpq   1b49f <png_combine_row+0x5f>
   1b619:	cmp    $0x7,%r9b
   1b61d:	jbe    1b6c5 <png_combine_row+0x285>
   1b623:	mov    %r9,%rcx
   1b626:	and    $0x7,%ecx
   1b629:	test   %ecx,%ecx
   1b62b:	jne    1b744 <png_combine_row+0x304>
   1b631:	shr    $0x3,%r9d
   1b635:	mov    %r9d,%ecx
   1b638:	imul   %rcx,%r8
   1b63c:	imul   %r9d,%eax
   1b640:	mov    %eax,%ecx
   1b642:	sub    %rcx,%r8
   1b645:	test   %edx,%edx
   1b647:	jne    1b750 <png_combine_row+0x310>
   1b64d:	mov    %r9,%rdx
   1b650:	mov    $0x7,%ecx
   1b655:	sub    %r10d,%ecx
   1b658:	shr    %ecx
   1b65a:	shl    %cl,%r9d
   1b65d:	mov    %eax,%eax
   1b65f:	mov    -0x30(%rbp),%rcx
   1b663:	lea    0x1(%rax,%rcx,1),%r15
   1b668:	add    %rsi,%rax
   1b66b:	cmp    $0x1,%edx
   1b66e:	jbe    1b772 <png_combine_row+0x332>
   1b674:	cmp    $0x2,%edx
   1b677:	je     1b77f <png_combine_row+0x33f>
   1b67d:	cmp    $0x3,%edx
   1b680:	jne    1b787 <png_combine_row+0x347>
   1b686:	mov    %r9d,%ecx
   1b689:	jmpq   1b7b4 <png_combine_row+0x374>
   1b68e:	mov    %rcx,%rdx
   1b691:	not    %edx
   1b693:	movzbl (%r15),%esi
   1b697:	and    %sil,%dl
   1b69a:	and    %cl,%al
   1b69c:	or     %al,%dl
   1b69e:	mov    %dl,(%r15)
   1b6a1:	mov    -0x48(%rbp),%r15
   1b6a5:	leaveq 
   1b6a6:	retq   
   1b6a7:	mov    $0xff,%r13d
   1b6ad:	shl    %cl,%r13d
   1b6b0:	mov    %r13,-0x20(%rbp)
   1b6b4:	mov    -0x38(%rbp),%r13
   1b6b8:	mov    -0x40(%rbp),%r14
   1b6bc:	mov    -0x48(%rbp),%rcx
   1b6c0:	jmpq   1b49f <png_combine_row+0x5f>
   1b6c5:	mov    %rbx,%rcx
   1b6c8:	mov    %rdx,%rbx
   1b6cb:	mov    $0x8,%eax
   1b6d0:	xor    %edx,%edx
   1b6d2:	div    %r9d
   1b6d5:	mov    %eax,%edx
   1b6d7:	lea    0x130aa(%rip),%rax        # 2e788 <display_mask.9>
   1b6de:	mov    %r14,-0x40(%rbp)
   1b6e2:	lea    0x1300f(%rip),%r14        # 2e6f8 <row_mask.8>
   1b6e9:	mov    %r13,-0x38(%rbp)
   1b6ed:	mov    $0xc,%r13d
   1b6f3:	mov    %r12,-0x30(%rbp)
   1b6f7:	mov    $0x18,%r12d
   1b6fd:	mov    %rcx,-0x28(%rbp)
   1b701:	mov    $0x30,%ecx
   1b706:	mov    0x134(%rdi),%edi
   1b70c:	and    $0x10000,%edi
   1b712:	test   %edi,%edi
   1b714:	jne    1b7d5 <png_combine_row+0x395>
   1b71a:	test   %ebx,%ebx
   1b71c:	jne    1b7fb <png_combine_row+0x3bb>
   1b722:	cmp    $0x1,%r9b
   1b726:	jne    1b820 <png_combine_row+0x3e0>
   1b72c:	xor    %ecx,%ecx
   1b72e:	lea    (%rcx,%r10,4),%rax
   1b732:	mov    0x48(%rax,%r14,1),%edi
   1b737:	mov    -0x18(%rbp),%rax
   1b73b:	mov    -0x20(%rbp),%rcx
   1b73f:	jmpq   1b848 <png_combine_row+0x408>
   1b744:	lea    0x13085(%rip),%rsi        # 2e7d0 <display_mask.9+0x48>
   1b74b:	callq  5470 <png_error@plt>
   1b750:	mov    $0x6,%ecx
   1b755:	sub    %r10d,%ecx
   1b758:	shr    %ecx
   1b75a:	mov    %r9,%rdx
   1b75d:	shl    %cl,%edx
   1b75f:	mov    %edx,%ecx
   1b761:	cmp    %r8,%rcx
   1b764:	jbe    1b650 <png_combine_row+0x210>
   1b76a:	mov    %r8,%rdx
   1b76d:	jmpq   1b650 <png_combine_row+0x210>
   1b772:	cmp    $0x1,%edx
   1b775:	jne    1b787 <png_combine_row+0x347>
   1b777:	mov    %r9d,%ecx
   1b77a:	jmpq   1b887 <png_combine_row+0x447>
   1b77f:	mov    %r9d,%ecx
   1b782:	jmpq   1b8ab <png_combine_row+0x46b>
   1b787:	mov    %r9d,%r10d
   1b78a:	cmp    $0xf,%edx
   1b78d:	jbe    1b8c4 <png_combine_row+0x484>
   1b793:	mov    %r14,-0x20(%rbp)
   1b797:	mov    %r13,-0x18(%rbp)
   1b79b:	mov    %r12,-0x10(%rbp)
   1b79f:	mov    %rbx,-0x8(%rbp)
   1b7a3:	mov    %r10,%rbx
   1b7a6:	jmpq   1b8ea <png_combine_row+0x4aa>
   1b7ab:	sub    %rcx,%r8
   1b7ae:	add    %rcx,%r15
   1b7b1:	add    %rcx,%rax
   1b7b4:	movzbl (%r15),%edx
   1b7b8:	mov    %dl,(%rax)
   1b7ba:	movzbl 0x1(%r15),%edx
   1b7bf:	mov    %dl,0x1(%rax)
   1b7c2:	movzbl 0x2(%r15),%edx
   1b7c7:	mov    %dl,0x2(%rax)
   1b7ca:	cmp    %r8,%rcx
   1b7cd:	jb     1b7ab <png_combine_row+0x36b>
   1b7cf:	mov    -0x48(%rbp),%r15
   1b7d3:	leaveq 
   1b7d4:	retq   
   1b7d5:	test   %ebx,%ebx
   1b7d7:	jne    1b924 <png_combine_row+0x4e4>
   1b7dd:	cmp    $0x1,%r9b
   1b7e1:	jne    1b94b <png_combine_row+0x50b>
   1b7e7:	xor    %ecx,%ecx
   1b7e9:	lea    (%rcx,%r10,4),%rax
   1b7ed:	mov    (%rax,%r14,1),%edi
   1b7f1:	mov    -0x18(%rbp),%rax
   1b7f5:	mov    -0x20(%rbp),%rcx
   1b7f9:	jmp    1b848 <png_combine_row+0x408>
   1b7fb:	cmp    $0x1,%r9b
   1b7ff:	jne    1b95d <png_combine_row+0x51d>
   1b805:	xor    %r12d,%r12d
   1b808:	shr    %r10d
   1b80b:	mov    %r10d,%ecx
   1b80e:	lea    (%r12,%rcx,4),%rcx
   1b812:	mov    0x24(%rcx,%rax,1),%edi
   1b816:	mov    -0x18(%rbp),%rax
   1b81a:	mov    -0x20(%rbp),%rcx
   1b81e:	jmp    1b848 <png_combine_row+0x408>
   1b820:	cmp    $0x2,%r9b
   1b824:	jne    1b72e <png_combine_row+0x2ee>
   1b82a:	mov    %r12,%rcx
   1b82d:	jmpq   1b72e <png_combine_row+0x2ee>
   1b832:	sub    %rdx,%r8
   1b835:	add    $0x1,%r11
   1b839:	mov    %rdi,%rbx
   1b83c:	shr    $0x8,%ebx
   1b83f:	shl    $0x18,%edi
   1b842:	add    %ebx,%edi
   1b844:	add    $0x1,%rsi
   1b848:	movzbl %dil,%r9d
   1b84c:	test   %r9d,%r9d
   1b84f:	je     1b864 <png_combine_row+0x424>
   1b851:	cmp    $0xfe,%r9d
   1b858:	jbe    1b96f <png_combine_row+0x52f>
   1b85e:	movzbl (%r11),%ebx
   1b862:	mov    %bl,(%rsi)
   1b864:	cmp    %r8,%rdx
   1b867:	jb     1b832 <png_combine_row+0x3f2>
   1b869:	mov    -0x28(%rbp),%rbx
   1b86d:	mov    -0x30(%rbp),%r12
   1b871:	mov    -0x38(%rbp),%r13
   1b875:	mov    -0x40(%rbp),%r14
   1b879:	jmpq   1b591 <png_combine_row+0x151>
   1b87e:	sub    %rcx,%r8
   1b881:	add    %rcx,%r15
   1b884:	add    %rcx,%rax
   1b887:	movzbl (%r15),%edx
   1b88b:	mov    %dl,(%rax)
   1b88d:	cmp    %r8,%rcx
   1b890:	jb     1b87e <png_combine_row+0x43e>
   1b892:	mov    -0x48(%rbp),%r15
   1b896:	leaveq 
   1b897:	retq   
   1b898:	add    %rcx,%r15
   1b89b:	add    %rcx,%rax
   1b89e:	sub    %rcx,%r8
   1b8a1:	cmp    $0x1,%r8
   1b8a5:	jbe    1b98a <png_combine_row+0x54a>
   1b8ab:	movzbl (%r15),%edx
   1b8af:	mov    %dl,(%rax)
   1b8b1:	movzbl 0x1(%r15),%edx
   1b8b6:	mov    %dl,0x1(%rax)
   1b8b9:	cmp    %r8,%rcx
   1b8bc:	jb     1b898 <png_combine_row+0x458>
   1b8be:	mov    -0x48(%rbp),%r15
   1b8c2:	leaveq 
   1b8c3:	retq   
   1b8c4:	movzwl %ax,%ecx
   1b8c7:	and    $0x1,%ecx
   1b8ca:	test   %ecx,%ecx
   1b8cc:	je     1b996 <png_combine_row+0x556>
   1b8d2:	mov    %r14,-0x20(%rbp)
   1b8d6:	mov    %r13,-0x18(%rbp)
   1b8da:	mov    %r12,-0x10(%rbp)
   1b8de:	mov    %rbx,-0x8(%rbp)
   1b8e2:	mov    %r10,%rbx
   1b8e5:	jmp    1b8ea <png_combine_row+0x4aa>
   1b8e7:	mov    %r8,%rdx
   1b8ea:	mov    %rdx,-0x28(%rbp)
   1b8ee:	mov    %edx,%r12d
   1b8f1:	mov    %r8,%r13
   1b8f4:	mov    %rax,%r14
   1b8f7:	mov    %r14,%rdi
   1b8fa:	mov    %r15,%rsi
   1b8fd:	mov    %r12,%rdx
   1b900:	callq  54c0 <memcpy@plt>
   1b905:	cmp    %r13,%rbx
   1b908:	jb     1b9b9 <png_combine_row+0x579>
   1b90e:	mov    -0x8(%rbp),%rbx
   1b912:	mov    -0x10(%rbp),%r12
   1b916:	mov    -0x18(%rbp),%r13
   1b91a:	mov    -0x20(%rbp),%r14
   1b91e:	mov    -0x48(%rbp),%r15
   1b922:	leaveq 
   1b923:	retq   
   1b924:	cmp    $0x1,%r9b
   1b928:	jne    1b9d8 <png_combine_row+0x598>
   1b92e:	xor    %r12d,%r12d
   1b931:	shr    %r10d
   1b934:	mov    %r10d,%ecx
   1b937:	lea    (%r12,%rcx,4),%rcx
   1b93b:	mov    (%rcx,%rax,1),%edi
   1b93e:	mov    -0x18(%rbp),%rax
   1b942:	mov    -0x20(%rbp),%rcx
   1b946:	jmpq   1b848 <png_combine_row+0x408>
   1b94b:	cmp    $0x2,%r9b
   1b94f:	jne    1b7e9 <png_combine_row+0x3a9>
   1b955:	mov    %r12,%rcx
   1b958:	jmpq   1b7e9 <png_combine_row+0x3a9>
   1b95d:	cmp    $0x2,%r9b
   1b961:	jne    1b808 <png_combine_row+0x3c8>
   1b967:	mov    %r13,%r12
   1b96a:	jmpq   1b808 <png_combine_row+0x3c8>
   1b96f:	movzbl (%r11),%ebx
   1b973:	and    %r9b,%bl
   1b976:	not    %r9d
   1b979:	movzbl (%rsi),%r10d
   1b97d:	and    %r10b,%r9b
   1b980:	or     %r9b,%bl
   1b983:	mov    %bl,(%rsi)
   1b985:	jmpq   1b864 <png_combine_row+0x424>
   1b98a:	movzbl (%r15),%ecx
   1b98e:	mov    %cl,(%rax)
   1b990:	mov    -0x48(%rbp),%r15
   1b994:	leaveq 
   1b995:	retq   
   1b996:	movzwl %r15w,%ecx
   1b99a:	and    $0x1,%ecx
   1b99d:	test   %ecx,%ecx
   1b99f:	je     1b9ea <png_combine_row+0x5aa>
   1b9a1:	mov    %r14,-0x20(%rbp)
   1b9a5:	mov    %r13,-0x18(%rbp)
   1b9a9:	mov    %r12,-0x10(%rbp)
   1b9ad:	mov    %rbx,-0x8(%rbp)
   1b9b1:	mov    %r10,%rbx
   1b9b4:	jmpq   1b8ea <png_combine_row+0x4aa>
   1b9b9:	lea    (%rbx,%r14,1),%rax
   1b9bd:	add    %rbx,%r15
   1b9c0:	mov    %r13,%r8
   1b9c3:	sub    %rbx,%r8
   1b9c6:	cmp    %r12,%r8
   1b9c9:	jb     1b8e7 <png_combine_row+0x4a7>
   1b9cf:	mov    -0x28(%rbp),%rdx
   1b9d3:	jmpq   1b8ea <png_combine_row+0x4aa>
   1b9d8:	cmp    $0x2,%r9b
   1b9dc:	jne    1b931 <png_combine_row+0x4f1>
   1b9e2:	mov    %r13,%r12
   1b9e5:	jmpq   1b931 <png_combine_row+0x4f1>
   1b9ea:	mov    %edx,%esi
   1b9ec:	mov    %rsi,%rcx
   1b9ef:	and    $0x1,%rcx
   1b9f3:	test   %rcx,%rcx
   1b9f6:	je     1ba10 <png_combine_row+0x5d0>
   1b9f8:	mov    %r14,-0x20(%rbp)
   1b9fc:	mov    %r13,-0x18(%rbp)
   1ba00:	mov    %r12,-0x10(%rbp)
   1ba04:	mov    %rbx,-0x8(%rbp)
   1ba08:	mov    %r10,%rbx
   1ba0b:	jmpq   1b8ea <png_combine_row+0x4aa>
   1ba10:	mov    %r10,%rcx
   1ba13:	and    $0x1,%rcx
   1ba17:	test   %rcx,%rcx
   1ba1a:	je     1ba34 <png_combine_row+0x5f4>
   1ba1c:	mov    %r14,-0x20(%rbp)
   1ba20:	mov    %r13,-0x18(%rbp)
   1ba24:	mov    %r12,-0x10(%rbp)
   1ba28:	mov    %rbx,-0x8(%rbp)
   1ba2c:	mov    %r10,%rbx
   1ba2f:	jmpq   1b8ea <png_combine_row+0x4aa>
   1ba34:	mov    %rax,%rcx
   1ba37:	and    $0x3,%ecx
   1ba3a:	test   %ecx,%ecx
   1ba3c:	je     1ba4d <png_combine_row+0x60d>
   1ba3e:	sub    %edx,%r9d
   1ba41:	mov    %r9d,%edx
   1ba44:	and    $0xfffffffffffffffe,%rdx
   1ba48:	mov    %rsi,%rcx
   1ba4b:	jmp    1ba86 <png_combine_row+0x646>
   1ba4d:	mov    %r15,%rcx
   1ba50:	and    $0x3,%ecx
   1ba53:	test   %ecx,%ecx
   1ba55:	jne    1ba3e <png_combine_row+0x5fe>
   1ba57:	mov    %rsi,%rcx
   1ba5a:	and    $0x3,%rcx
   1ba5e:	test   %rcx,%rcx
   1ba61:	jne    1ba3e <png_combine_row+0x5fe>
   1ba63:	mov    %r10,%rcx
   1ba66:	and    $0x3,%rcx
   1ba6a:	test   %rcx,%rcx
   1ba6d:	jne    1ba3e <png_combine_row+0x5fe>
   1ba6f:	sub    %edx,%r9d
   1ba72:	mov    %r9d,%ecx
   1ba75:	and    $0xfffffffffffffffc,%rcx
   1ba79:	mov    %rsi,%rdx
   1ba7c:	jmp    1baa9 <png_combine_row+0x669>
   1ba7e:	add    $0x2,%r15
   1ba82:	add    $0x2,%rax
   1ba86:	movzwl (%r15),%edi
   1ba8a:	mov    %di,(%rax)
   1ba8d:	add    $0xfffffffffffffffe,%rcx
   1ba91:	test   %rcx,%rcx
   1ba94:	jne    1ba7e <png_combine_row+0x63e>
   1ba96:	cmp    %r8,%r10
   1ba99:	jb     1bac2 <png_combine_row+0x682>
   1ba9b:	mov    -0x48(%rbp),%r15
   1ba9f:	leaveq 
   1baa0:	retq   
   1baa1:	add    $0x4,%r15
   1baa5:	add    $0x4,%rax
   1baa9:	mov    (%r15),%edi
   1baac:	mov    %edi,(%rax)
   1baae:	add    $0xfffffffffffffffc,%rdx
   1bab2:	test   %rdx,%rdx
   1bab5:	jne    1baa1 <png_combine_row+0x661>
   1bab7:	cmp    %r8,%r10
   1baba:	jb     1bad9 <png_combine_row+0x699>
   1babc:	mov    -0x48(%rbp),%r15
   1bac0:	leaveq 
   1bac1:	retq   
   1bac2:	lea    0x2(%r15,%rdx,1),%r15
   1bac7:	lea    0x2(%rax,%rdx,1),%rax
   1bacc:	sub    %r10,%r8
   1bacf:	cmp    %rsi,%r8
   1bad2:	jb     1baf8 <png_combine_row+0x6b8>
   1bad4:	mov    %rsi,%rcx
   1bad7:	jmp    1ba86 <png_combine_row+0x646>
   1bad9:	lea    0x4(%r15,%rcx,1),%r15
   1bade:	lea    0x4(%rax,%rcx,1),%rax
   1bae3:	sub    %r10,%r8
   1bae6:	cmp    %rsi,%r8
   1bae9:	jb     1bb15 <png_combine_row+0x6d5>
   1baeb:	mov    %rsi,%rdx
   1baee:	jmp    1baa9 <png_combine_row+0x669>
   1baf0:	add    $0x1,%r15
   1baf4:	add    $0x1,%rax
   1baf8:	movzbl (%r15),%ecx
   1bafc:	mov    %cl,(%rax)
   1bafe:	add    $0xffffffffffffffff,%r8
   1bb02:	test   %r8,%r8
   1bb05:	jne    1baf0 <png_combine_row+0x6b0>
   1bb07:	mov    -0x48(%rbp),%r15
   1bb0b:	leaveq 
   1bb0c:	retq   
   1bb0d:	add    $0x1,%r15
   1bb11:	add    $0x1,%rax
   1bb15:	movzbl (%r15),%ecx
   1bb19:	mov    %cl,(%rax)
   1bb1b:	add    $0xffffffffffffffff,%r8
   1bb1f:	test   %r8,%r8
   1bb22:	jne    1bb0d <png_combine_row+0x6cd>
   1bb24:	mov    -0x48(%rbp),%r15
   1bb28:	leaveq 
   1bb29:	retq   
   1bb2a:	nopw   0x0(%rax,%rax,1)

000000000001bb30 <png_do_read_interlace>:
   1bb30:	push   %rbp
   1bb31:	mov    %rsp,%rbp
   1bb34:	sub    $0x60,%rsp
   1bb38:	test   %rsi,%rsi
   1bb3b:	jne    1bb3f <png_do_read_interlace+0xf>
   1bb3d:	leaveq 
   1bb3e:	retq   
   1bb3f:	test   %rdi,%rdi
   1bb42:	jne    1bb46 <png_do_read_interlace+0x16>
   1bb44:	leaveq 
   1bb45:	retq   
   1bb46:	lea    0x12ca7(%rip),%r8        # 2e7f4 <png_pass_inc.11>
   1bb4d:	movslq %edx,%rax
   1bb50:	mov    (%r8,%rax,4),%r8d
   1bb54:	mov    (%rdi),%edx
   1bb56:	mov    %r8,%r11
   1bb59:	imul   %edx,%r11d
   1bb5d:	mov    %r11,-0x8(%rbp)
   1bb61:	xor    %eax,%eax
   1bb63:	movzbl 0x13(%rdi),%r9d
   1bb68:	cmp    $0x1,%r9b
   1bb6c:	jbe    1bc00 <png_do_read_interlace+0xd0>
   1bb72:	cmp    $0x2,%r9b
   1bb76:	je     1bc53 <png_do_read_interlace+0x123>
   1bb7c:	cmp    $0x4,%r9b
   1bb80:	jne    1bc0a <png_do_read_interlace+0xda>
   1bb86:	mov    $0xf0f,%r9d
   1bb8c:	mov    $0x4,%r10d
   1bb92:	mov    %r15,-0x30(%rbp)
   1bb96:	lea    -0x1(%rdx),%r15d
   1bb9a:	shr    %r15d
   1bb9d:	mov    %r15d,%r15d
   1bba0:	add    %rsi,%r15
   1bba3:	mov    %r14,-0x28(%rbp)
   1bba7:	lea    -0x1(%r11),%r14d
   1bbab:	shr    %r14d
   1bbae:	mov    %r14d,%r14d
   1bbb1:	add    %r14,%rsi
   1bbb4:	and    $0x10000,%ecx
   1bbba:	test   %ecx,%ecx
   1bbbc:	jne    1bcc9 <png_do_read_interlace+0x199>
   1bbc2:	mov    $0xfffffffe,%ecx
   1bbc7:	mov    %rcx,%r14
   1bbca:	sub    %edx,%r14d
   1bbcd:	and    $0x1,%r14d
   1bbd1:	neg    %r14d
   1bbd4:	and    $0x4,%r14d
   1bbd8:	sub    %r11d,%ecx
   1bbdb:	and    $0x1,%ecx
   1bbde:	neg    %ecx
   1bbe0:	and    $0x4,%ecx
   1bbe3:	mov    %rbx,-0x10(%rbp)
   1bbe7:	mov    %r12,-0x18(%rbp)
   1bbeb:	mov    %r13,-0x20(%rbp)
   1bbef:	mov    %rax,%r12
   1bbf2:	mov    %r12,%r13
   1bbf5:	mov    %r10,%rbx
   1bbf8:	mov    %rbx,%r11
   1bbfb:	jmpq   1bd17 <png_do_read_interlace+0x1e7>
   1bc00:	cmp    $0x1,%r9b
   1bc04:	je     1bd42 <png_do_read_interlace+0x212>
   1bc0a:	lea    -0x60(%rbp),%r10
   1bc0e:	shr    $0x3,%r9d
   1bc12:	movslq %r9d,%r9
   1bc15:	lea    -0x1(%rdx),%ecx
   1bc18:	mov    %ecx,%ecx
   1bc1a:	imul   %r9,%rcx
   1bc1e:	add    %rsi,%rcx
   1bc21:	lea    -0x1(%r11),%edx
   1bc25:	mov    %edx,%edx
   1bc27:	imul   %r9,%rdx
   1bc2b:	add    %rsi,%rdx
   1bc2e:	mov    %r15,-0x30(%rbp)
   1bc32:	mov    %r14,-0x28(%rbp)
   1bc36:	mov    %rbx,-0x10(%rbp)
   1bc3a:	mov    %r12,-0x18(%rbp)
   1bc3e:	mov    %r13,-0x20(%rbp)
   1bc42:	mov    %rdx,%rbx
   1bc45:	mov    %r10,%r12
   1bc48:	mov    %r9,%r13
   1bc4b:	mov    %rax,%r9
   1bc4e:	jmpq   1bdea <png_do_read_interlace+0x2ba>
   1bc53:	mov    $0x3f3f,%r9d
   1bc59:	mov    $0x6,%r10d
   1bc5f:	mov    %r15,-0x30(%rbp)
   1bc63:	lea    -0x1(%rdx),%r15d
   1bc67:	shr    $0x2,%r15d
   1bc6b:	mov    %r15d,%r15d
   1bc6e:	add    %rsi,%r15
   1bc71:	mov    %r14,-0x28(%rbp)
   1bc75:	lea    -0x1(%r11),%r14d
   1bc79:	shr    $0x2,%r14d
   1bc7d:	mov    %r14d,%r14d
   1bc80:	add    %r14,%rsi
   1bc83:	and    $0x10000,%ecx
   1bc89:	test   %ecx,%ecx
   1bc8b:	jne    1be1d <png_do_read_interlace+0x2ed>
   1bc91:	mov    $0xfffffffc,%ecx
   1bc96:	neg    %edx
   1bc98:	add    %ecx,%edx
   1bc9a:	and    $0x3,%edx
   1bc9d:	lea    (%rdx,%rdx,1),%r14d
   1bca1:	sub    %r11d,%ecx
   1bca4:	and    $0x3,%ecx
   1bca7:	add    %ecx,%ecx
   1bca9:	mov    $0x2,%r11d
   1bcaf:	mov    %rbx,-0x10(%rbp)
   1bcb3:	mov    %r12,-0x18(%rbp)
   1bcb7:	mov    %r13,-0x20(%rbp)
   1bcbb:	mov    %rax,%rbx
   1bcbe:	mov    %rbx,%r13
   1bcc1:	mov    %r10,%r12
   1bcc4:	jmpq   1be63 <png_do_read_interlace+0x333>
   1bcc9:	lea    0x1(%rdx),%r14d
   1bccd:	and    $0x1,%r14d
   1bcd1:	neg    %r14d
   1bcd4:	and    $0x4,%r14d
   1bcd8:	lea    0x1(%r11),%ecx
   1bcdc:	and    $0x1,%ecx
   1bcdf:	neg    %ecx
   1bce1:	and    $0x4,%ecx
   1bce4:	mov    $0xfffffffffffffffc,%r11
   1bceb:	mov    %rbx,-0x10(%rbp)
   1bcef:	mov    %r12,-0x18(%rbp)
   1bcf3:	mov    %r13,-0x20(%rbp)
   1bcf7:	mov    %rax,%rbx
   1bcfa:	mov    %rbx,%r13
   1bcfd:	mov    %r10,%r12
   1bd00:	jmp    1bd17 <png_do_read_interlace+0x1e7>
   1bd02:	mov    -0x50(%rbp),%rax
   1bd06:	lea    -0x1(%rax),%r15
   1bd0a:	mov    %r12,%r14
   1bd0d:	mov    -0x58(%rbp),%rax
   1bd11:	lea    0x1(%rax),%r13d
   1bd15:	xor    %eax,%eax
   1bd17:	mov    (%rdi),%edx
   1bd19:	cmp    %r13d,%edx
   1bd1c:	jbe    1be8a <png_do_read_interlace+0x35a>
   1bd22:	xchg   %rcx,%r14
   1bd25:	movzbl (%r15),%edx
   1bd29:	shr    %cl,%edx
   1bd2b:	mov    %rcx,-0x48(%rbp)
   1bd2f:	and    $0xf,%dl
   1bd32:	mov    %r15,-0x50(%rbp)
   1bd36:	mov    %r13,-0x58(%rbp)
   1bd3a:	mov    %r14,%rcx
   1bd3d:	jmpq   1beb9 <png_do_read_interlace+0x389>
   1bd42:	mov    $0x7f7f,%r9d
   1bd48:	mov    $0x7,%r10d
   1bd4e:	mov    %r15,-0x30(%rbp)
   1bd52:	lea    -0x1(%rdx),%r15d
   1bd56:	shr    $0x3,%r15d
   1bd5a:	mov    %r15d,%r15d
   1bd5d:	add    %rsi,%r15
   1bd60:	mov    %r14,-0x28(%rbp)
   1bd64:	lea    -0x1(%r11),%r14d
   1bd68:	shr    $0x3,%r14d
   1bd6c:	mov    %r14d,%r14d
   1bd6f:	add    %r14,%rsi
   1bd72:	and    $0x10000,%ecx
   1bd78:	test   %ecx,%ecx
   1bd7a:	jne    1bedb <png_do_read_interlace+0x3ab>
   1bd80:	mov    $0xfffffff8,%ecx
   1bd85:	mov    %rcx,%r14
   1bd88:	sub    %edx,%r14d
   1bd8b:	and    $0x7,%r14d
   1bd8f:	sub    %r11d,%ecx
   1bd92:	and    $0x7,%ecx
   1bd95:	mov    $0x1,%r11d
   1bd9b:	mov    %rbx,-0x10(%rbp)
   1bd9f:	mov    %r12,-0x18(%rbp)
   1bda3:	mov    %r13,-0x20(%rbp)
   1bda7:	mov    %rax,%r12
   1bdaa:	mov    %r12,%r13
   1bdad:	mov    %r10,%rbx
   1bdb0:	jmpq   1bf1d <png_do_read_interlace+0x3ed>
   1bdb5:	mov    %r8,%r15
   1bdb8:	mov    %rbx,%rdi
   1bdbb:	mov    %r12,%rsi
   1bdbe:	mov    %r13,%rdx
   1bdc1:	callq  54c0 <memcpy@plt>
   1bdc6:	sub    %r13,%rbx
   1bdc9:	add    $0x1,%r14d
   1bdcd:	mov    %r15,%r8
   1bdd0:	cmp    %r14d,%r8d
   1bdd3:	jg     1bdb5 <png_do_read_interlace+0x285>
   1bdd5:	mov    -0x50(%rbp),%rcx
   1bdd9:	sub    %r13,%rcx
   1bddc:	mov    -0x58(%rbp),%rax
   1bde0:	lea    0x1(%rax),%r9d
   1bde4:	xor    %eax,%eax
   1bde6:	mov    -0x48(%rbp),%rdi
   1bdea:	mov    (%rdi),%edx
   1bdec:	cmp    %r9d,%edx
   1bdef:	jbe    1be8a <png_do_read_interlace+0x35a>
   1bdf5:	mov    %r12,%r10
   1bdf8:	mov    %rcx,%rsi
   1bdfb:	mov    %r13,%rdx
   1bdfe:	mov    %rcx,-0x50(%rbp)
   1be02:	mov    %r9,-0x58(%rbp)
   1be06:	mov    %rdi,-0x48(%rbp)
   1be0a:	mov    %r10,%rdi
   1be0d:	mov    %rax,%r14
   1be10:	mov    %r8,%r15
   1be13:	callq  54c0 <memcpy@plt>
   1be18:	mov    %r15,%r8
   1be1b:	jmp    1bdd0 <png_do_read_interlace+0x2a0>
   1be1d:	lea    0x3(%rdx),%ecx
   1be20:	and    $0x3,%ecx
   1be23:	lea    (%rcx,%rcx,1),%r14d
   1be27:	lea    0x3(%r11),%ecx
   1be2b:	and    $0x3,%ecx
   1be2e:	add    %ecx,%ecx
   1be30:	mov    $0xfffffffffffffffe,%r11
   1be37:	mov    %rbx,-0x10(%rbp)
   1be3b:	mov    %r12,-0x18(%rbp)
   1be3f:	mov    %r13,-0x20(%rbp)
   1be43:	mov    %rax,%r12
   1be46:	mov    %r12,%r13
   1be49:	mov    %r10,%rbx
   1be4c:	jmp    1be63 <png_do_read_interlace+0x333>
   1be4e:	mov    -0x40(%rbp),%rax
   1be52:	lea    -0x1(%rax),%r15
   1be56:	mov    %rbx,%r14
   1be59:	mov    -0x58(%rbp),%rax
   1be5d:	lea    0x1(%rax),%r13d
   1be61:	xor    %eax,%eax
   1be63:	mov    (%rdi),%edx
   1be65:	cmp    %r13d,%edx
   1be68:	jbe    1be8a <png_do_read_interlace+0x35a>
   1be6a:	xchg   %rcx,%r14
   1be6d:	movzbl (%r15),%edx
   1be71:	shr    %cl,%edx
   1be73:	mov    %rcx,-0x38(%rbp)
   1be77:	and    $0x3,%dl
   1be7a:	mov    %r15,-0x40(%rbp)
   1be7e:	mov    %r13,-0x58(%rbp)
   1be82:	mov    %r14,%rcx
   1be85:	jmpq   1bf52 <png_do_read_interlace+0x422>
   1be8a:	mov    -0x8(%rbp),%rcx
   1be8e:	mov    %ecx,(%rdi)
   1be90:	movzbl 0x13(%rdi),%eax
   1be94:	cmp    $0x7,%al
   1be96:	ja     1bf75 <png_do_read_interlace+0x445>
   1be9c:	mov    %ecx,%ecx
   1be9e:	imul   %rcx,%rax
   1bea2:	add    $0x7,%rax
   1bea6:	shr    $0x3,%rax
   1beaa:	jmpq   1bf7f <png_do_read_interlace+0x44f>
   1beaf:	add    $0xffffffffffffffff,%rsi
   1beb3:	mov    %r12,%rcx
   1beb6:	add    $0x1,%eax
   1beb9:	cmp    %eax,%r8d
   1bebc:	jg     1bf99 <png_do_read_interlace+0x469>
   1bec2:	mov    -0x48(%rbp),%rax
   1bec6:	cmp    %eax,%ebx
   1bec8:	je     1bd02 <png_do_read_interlace+0x1d2>
   1bece:	lea    (%rax,%r11,1),%r14d
   1bed2:	mov    -0x50(%rbp),%r15
   1bed6:	jmpq   1bd0d <png_do_read_interlace+0x1dd>
   1bedb:	lea    0x7(%rdx),%r14d
   1bedf:	and    $0x7,%r14d
   1bee3:	lea    0x7(%r11),%ecx
   1bee7:	and    $0x7,%ecx
   1beea:	mov    $0xffffffffffffffff,%r11
   1bef1:	mov    %rbx,-0x10(%rbp)
   1bef5:	mov    %r12,-0x18(%rbp)
   1bef9:	mov    %r13,-0x20(%rbp)
   1befd:	mov    %rax,%rbx
   1bf00:	mov    %rbx,%r13
   1bf03:	mov    %r10,%r12
   1bf06:	jmp    1bf1d <png_do_read_interlace+0x3ed>
   1bf08:	mov    -0x40(%rbp),%rax
   1bf0c:	lea    -0x1(%rax),%r15
   1bf10:	mov    %r12,%r14
   1bf13:	mov    -0x58(%rbp),%rax
   1bf17:	lea    0x1(%rax),%r13d
   1bf1b:	xor    %eax,%eax
   1bf1d:	mov    (%rdi),%edx
   1bf1f:	cmp    %r13d,%edx
   1bf22:	jbe    1be8a <png_do_read_interlace+0x35a>
   1bf28:	xchg   %rcx,%r14
   1bf2b:	movzbl (%r15),%edx
   1bf2f:	shr    %cl,%edx
   1bf31:	mov    %rcx,-0x38(%rbp)
   1bf35:	and    $0x1,%dl
   1bf38:	mov    %r15,-0x40(%rbp)
   1bf3c:	mov    %r13,-0x58(%rbp)
   1bf40:	mov    %r14,%rcx
   1bf43:	jmpq   1bfd6 <png_do_read_interlace+0x4a6>
   1bf48:	add    $0xffffffffffffffff,%rsi
   1bf4c:	mov    %rbx,%rcx
   1bf4f:	add    $0x1,%eax
   1bf52:	cmp    %eax,%r8d
   1bf55:	jg     1bff4 <png_do_read_interlace+0x4c4>
   1bf5b:	mov    -0x38(%rbp),%rax
   1bf5f:	cmp    %eax,%r12d
   1bf62:	je     1be4e <png_do_read_interlace+0x31e>
   1bf68:	lea    (%rax,%r11,1),%r14d
   1bf6c:	mov    -0x40(%rbp),%r15
   1bf70:	jmpq   1be59 <png_do_read_interlace+0x329>
   1bf75:	shr    $0x3,%rax
   1bf79:	mov    %ecx,%ecx
   1bf7b:	imul   %rcx,%rax
   1bf7f:	mov    %rax,0x8(%rdi)
   1bf83:	mov    -0x20(%rbp),%r13
   1bf87:	mov    -0x18(%rbp),%r12
   1bf8b:	mov    -0x10(%rbp),%rbx
   1bf8f:	mov    -0x28(%rbp),%r14
   1bf93:	mov    -0x30(%rbp),%r15
   1bf97:	leaveq 
   1bf98:	retq   
   1bf99:	mov    %rdx,%r14
   1bf9c:	shl    %cl,%r14d
   1bf9f:	mov    %rcx,%r15
   1bfa2:	mov    %r10,%rcx
   1bfa5:	sub    %r15d,%ecx
   1bfa8:	mov    %r9,%r13
   1bfab:	shr    %cl,%r13d
   1bfae:	movzbl (%rsi),%ecx
   1bfb1:	and    %cl,%r13b
   1bfb4:	or     %r13b,%r14b
   1bfb7:	mov    %r14b,(%rsi)
   1bfba:	cmp    %r15d,%ebx
   1bfbd:	je     1beaf <png_do_read_interlace+0x37f>
   1bfc3:	lea    (%r15,%r11,1),%ecx
   1bfc7:	jmpq   1beb6 <png_do_read_interlace+0x386>
   1bfcc:	add    $0xffffffffffffffff,%rsi
   1bfd0:	mov    %r12,%rcx
   1bfd3:	add    $0x1,%eax
   1bfd6:	cmp    %eax,%r8d
   1bfd9:	jg     1c027 <png_do_read_interlace+0x4f7>
   1bfdb:	mov    -0x38(%rbp),%rax
   1bfdf:	cmp    %eax,%ebx
   1bfe1:	je     1bf08 <png_do_read_interlace+0x3d8>
   1bfe7:	lea    (%rax,%r11,1),%r14d
   1bfeb:	mov    -0x40(%rbp),%r15
   1bfef:	jmpq   1bf13 <png_do_read_interlace+0x3e3>
   1bff4:	mov    %rdx,%r13
   1bff7:	shl    %cl,%r13d
   1bffa:	mov    %rcx,%r15
   1bffd:	mov    %r10,%rcx
   1c000:	sub    %r15d,%ecx
   1c003:	mov    %r9,%r14
   1c006:	shr    %cl,%r14d
   1c009:	movzbl (%rsi),%ecx
   1c00c:	and    %cl,%r14b
   1c00f:	or     %r14b,%r13b
   1c012:	mov    %r13b,(%rsi)
   1c015:	cmp    %r15d,%r12d
   1c018:	je     1bf48 <png_do_read_interlace+0x418>
   1c01e:	lea    (%r15,%r11,1),%ecx
   1c022:	jmpq   1bf4f <png_do_read_interlace+0x41f>
   1c027:	mov    %rdx,%r13
   1c02a:	shl    %cl,%r13d
   1c02d:	mov    %rcx,%r15
   1c030:	mov    %r10,%rcx
   1c033:	sub    %r15d,%ecx
   1c036:	mov    %r9,%r14
   1c039:	shr    %cl,%r14d
   1c03c:	movzbl (%rsi),%ecx
   1c03f:	and    %cl,%r14b
   1c042:	or     %r14b,%r13b
   1c045:	mov    %r13b,(%rsi)
   1c048:	cmp    %r15d,%ebx
   1c04b:	je     1bfcc <png_do_read_interlace+0x49c>
   1c051:	lea    (%r15,%r11,1),%ecx
   1c055:	jmpq   1bfd3 <png_do_read_interlace+0x4a3>
   1c05a:	nopw   0x0(%rax,%rax,1)

000000000001c060 <png_read_filter_row>:
   1c060:	push   %rbp
   1c061:	mov    %rsp,%rbp
   1c064:	sub    $0x30,%rsp
   1c068:	test   %r8d,%r8d
   1c06b:	jg     1c06f <png_read_filter_row+0xf>
   1c06d:	leaveq 
   1c06e:	retq   
   1c06f:	cmp    $0x4,%r8d
   1c073:	jle    1c077 <png_read_filter_row+0x17>
   1c075:	leaveq 
   1c076:	retq   
   1c077:	mov    0x478(%rdi),%rax
   1c07e:	test   %rax,%rax
   1c081:	je     1c091 <png_read_filter_row+0x31>
   1c083:	mov    %rdi,%rax
   1c086:	mov    %rsi,%rdi
   1c089:	mov    %rdx,%rsi
   1c08c:	mov    %rcx,%rdx
   1c08f:	jmp    1c0e2 <png_read_filter_row+0x82>
   1c091:	mov    %rdi,%rax
   1c094:	mov    %rbx,-0x8(%rbp)
   1c098:	mov    %r12,-0x10(%rbp)
   1c09c:	mov    %r13,-0x18(%rbp)
   1c0a0:	mov    %r14,-0x20(%rbp)
   1c0a4:	mov    %r15,-0x28(%rbp)
   1c0a8:	mov    %rdi,%rbx
   1c0ab:	mov    %rax,%rdi
   1c0ae:	mov    %rdx,%r12
   1c0b1:	mov    %rcx,%r13
   1c0b4:	mov    %r8,%r14
   1c0b7:	mov    %rsi,%r15
   1c0ba:	callq  20dd0 <png_init_filter_functions>
   1c0bf:	mov    %rbx,%rax
   1c0c2:	mov    %r13,%rdx
   1c0c5:	mov    %r12,%rsi
   1c0c8:	mov    %r15,%rdi
   1c0cb:	mov    %r14,%r8
   1c0ce:	mov    -0x28(%rbp),%r15
   1c0d2:	mov    -0x20(%rbp),%r14
   1c0d6:	mov    -0x18(%rbp),%r13
   1c0da:	mov    -0x10(%rbp),%r12
   1c0de:	mov    -0x8(%rbp),%rbx
   1c0e2:	lea    -0x1(%r8),%ecx
   1c0e6:	movslq %ecx,%rcx
   1c0e9:	callq  *0x478(%rax,%rcx,8)
   1c0f0:	leaveq 
   1c0f1:	retq   
   1c0f2:	data16 nopw %cs:0x0(%rax,%rax,1)
   1c0fd:	nopl   (%rax)

000000000001c100 <png_read_IDAT_data>:
   1c100:	push   %rbp
   1c101:	mov    %rsp,%rbp
   1c104:	sub    $0x430,%rsp
   1c10b:	mov    %rbx,-0x8(%rbp)
   1c10f:	mov    %r12,-0x10(%rbp)
   1c113:	mov    %r13,-0x18(%rbp)
   1c117:	mov    %r14,-0x20(%rbp)
   1c11b:	mov    %r15,-0x28(%rbp)
   1c11f:	mov    %rsi,0x158(%rdi)
   1c126:	movl   $0x0,0x160(%rdi)
   1c130:	xor    %ebx,%ebx
   1c132:	mov    $0x400,%r15d
   1c138:	lea    -0x430(%rbp),%r14
   1c13f:	mov    $0xffffffff,%ecx
   1c144:	mov    $0x1,%eax
   1c149:	mov    $0xfffffffe,%r8d
   1c14f:	test   %rsi,%rsi
   1c152:	je     1c15c <png_read_IDAT_data+0x5c>
   1c154:	mov    %rdi,%r12
   1c157:	mov    %rsi,%r13
   1c15a:	jmp    1c18d <png_read_IDAT_data+0x8d>
   1c15c:	mov    %rdi,%r12
   1c15f:	mov    %rsi,%r13
   1c162:	mov    %rbx,%rdx
   1c165:	jmp    1c18d <png_read_IDAT_data+0x8d>
   1c167:	test   %eax,%eax
   1c169:	jne    1c1b9 <png_read_IDAT_data+0xb9>
   1c16b:	test   %rdx,%rdx
   1c16e:	je     1c272 <png_read_IDAT_data+0x172>
   1c174:	mov    $0x1,%eax
   1c179:	mov    $0xffffffff,%ecx
   1c17e:	mov    $0xfffffffe,%r8d
   1c184:	lea    -0x430(%rbp),%r14
   1c18b:	xor    %ebx,%ebx
   1c18d:	mov    0x148(%r12),%esi
   1c195:	test   %esi,%esi
   1c197:	je     1c28d <png_read_IDAT_data+0x18d>
   1c19d:	test   %r13,%r13
   1c1a0:	jne    1c296 <png_read_IDAT_data+0x196>
   1c1a6:	mov    %r14,0x158(%r12)
   1c1ae:	mov    %rbx,%rax
   1c1b1:	mov    %r15,%rcx
   1c1b4:	jmpq   1c2a3 <png_read_IDAT_data+0x1a3>
   1c1b9:	mov    %rax,%rsi
   1c1bc:	mov    %r12,%rdi
   1c1bf:	callq  6920 <png_zstream_error>
   1c1c4:	test   %r13,%r13
   1c1c7:	jne    1c2dc <png_read_IDAT_data+0x1dc>
   1c1cd:	mov    %r12,%rdi
   1c1d0:	mov    0x170(%rdi),%rsi
   1c1d7:	callq  5230 <png_chunk_benign_error@plt>
   1c1dc:	mov    -0x28(%rbp),%r15
   1c1e0:	mov    -0x20(%rbp),%r14
   1c1e4:	mov    -0x18(%rbp),%r13
   1c1e8:	mov    -0x10(%rbp),%r12
   1c1ec:	mov    -0x8(%rbp),%rbx
   1c1f0:	leaveq 
   1c1f1:	retq   
   1c1f2:	mov    0x160(%r12),%ecx
   1c1fa:	lea    (%rbx,%rcx,1),%rdx
   1c1fe:	movl   $0x0,0x160(%r12)
   1c20a:	cmp    $0x1,%eax
   1c20d:	jne    1c167 <png_read_IDAT_data+0x67>
   1c213:	movq   $0x0,0x158(%r12)
   1c21f:	mov    0x12c(%r12),%eax
   1c227:	or     $0x8,%eax
   1c22a:	mov    %eax,0x12c(%r12)
   1c232:	mov    0x130(%r12),%eax
   1c23a:	or     $0x8,%eax
   1c23d:	mov    %eax,0x130(%r12)
   1c245:	mov    0x148(%r12),%eax
   1c24d:	test   %eax,%eax
   1c24f:	jne    1c25d <png_read_IDAT_data+0x15d>
   1c251:	mov    0x248(%r12),%eax
   1c259:	test   %eax,%eax
   1c25b:	je     1c272 <png_read_IDAT_data+0x172>
   1c25d:	mov    %rdx,%rbx
   1c260:	lea    0x125bf(%rip),%rsi        # 2e826 <png_pass_inc.11+0x32>
   1c267:	mov    %r12,%rdi
   1c26a:	callq  5230 <png_chunk_benign_error@plt>
   1c26f:	mov    %rbx,%rdx
   1c272:	test   %rdx,%rdx
   1c275:	jne    1c2eb <png_read_IDAT_data+0x1eb>
   1c277:	mov    -0x28(%rbp),%r15
   1c27b:	mov    -0x20(%rbp),%r14
   1c27f:	mov    -0x18(%rbp),%r13
   1c283:	mov    -0x10(%rbp),%r12
   1c287:	mov    -0x8(%rbp),%rbx
   1c28b:	leaveq 
   1c28c:	retq   
   1c28d:	mov    %rdx,-0x30(%rbp)
   1c291:	jmpq   1c347 <png_read_IDAT_data+0x247>
   1c296:	cmp    %r8,%rdx
   1c299:	ja     1c29e <png_read_IDAT_data+0x19e>
   1c29b:	mov    %rdx,%rcx
   1c29e:	mov    %ecx,%esi
   1c2a0:	sub    %rsi,%rdx
   1c2a3:	mov    %ecx,0x160(%r12)
   1c2ab:	mov    %rbx,%rsi
   1c2ae:	mov    %rdx,%rbx
   1c2b1:	mov    %rax,%r14
   1c2b4:	mov    %r12,%rdi
   1c2b7:	callq  1ca90 <png_zlib_inflate>
   1c2bc:	test   %r14,%r14
   1c2bf:	jne    1c1f2 <png_read_IDAT_data+0xf2>
   1c2c5:	mov    0x160(%r12),%ecx
   1c2cd:	neg    %rcx
   1c2d0:	add    %r15,%rcx
   1c2d3:	lea    (%rcx,%rbx,1),%rdx
   1c2d7:	jmpq   1c1fe <png_read_IDAT_data+0xfe>
   1c2dc:	mov    %r12,%rdi
   1c2df:	mov    0x170(%rdi),%rsi
   1c2e6:	callq  5060 <png_chunk_error@plt>
   1c2eb:	test   %r13,%r13
   1c2ee:	jne    1c3c6 <png_read_IDAT_data+0x2c6>
   1c2f4:	mov    %r12,%rdi
   1c2f7:	lea    0x1253e(%rip),%rsi        # 2e83c <png_pass_inc.11+0x48>
   1c2fe:	callq  5230 <png_chunk_benign_error@plt>
   1c303:	mov    -0x28(%rbp),%r15
   1c307:	mov    -0x20(%rbp),%r14
   1c30b:	mov    -0x18(%rbp),%r13
   1c30f:	mov    -0x10(%rbp),%r12
   1c313:	mov    -0x8(%rbp),%rbx
   1c317:	leaveq 
   1c318:	retq   
   1c319:	mov    %r12,%rdi
   1c31c:	mov    %rbx,%rsi
   1c31f:	callq  1b280 <png_crc_finish>
   1c324:	mov    %r12,%rdi
   1c327:	callq  1b170 <png_read_chunk_header>
   1c32c:	mov    %eax,0x248(%r12)
   1c334:	mov    0x218(%r12),%eax
   1c33c:	cmp    $0x49444154,%eax
   1c341:	jne    1c3d5 <png_read_IDAT_data+0x2d5>
   1c347:	mov    0x248(%r12),%eax
   1c34f:	test   %eax,%eax
   1c351:	je     1c319 <png_read_IDAT_data+0x219>
   1c353:	mov    0x468(%r12),%r15d
   1c35b:	cmp    %r15d,%eax
   1c35e:	jae    1c363 <png_read_IDAT_data+0x263>
   1c360:	mov    %rax,%r15
   1c363:	mov    %rbx,%rdx
   1c366:	mov    %r15d,%esi
   1c369:	mov    %r12,%rdi
   1c36c:	callq  200b0 <png_read_buffer>
   1c371:	mov    %rax,%rbx
   1c374:	mov    %r12,%rdi
   1c377:	mov    %rbx,%rsi
   1c37a:	mov    %r15,%rdx
   1c37d:	callq  1b220 <png_crc_read>
   1c382:	mov    0x248(%r12),%eax
   1c38a:	sub    %r15d,%eax
   1c38d:	mov    %eax,0x248(%r12)
   1c395:	mov    %rbx,0x140(%r12)
   1c39d:	mov    %r15d,0x148(%r12)
   1c3a5:	mov    -0x30(%rbp),%rdx
   1c3a9:	mov    $0x1,%eax
   1c3ae:	mov    $0xffffffff,%ecx
   1c3b3:	mov    $0xfffffffe,%r8d
   1c3b9:	xor    %ebx,%ebx
   1c3bb:	mov    $0x400,%r15d
   1c3c1:	jmpq   1c19d <png_read_IDAT_data+0x9d>
   1c3c6:	mov    %r12,%rdi
   1c3c9:	lea    0x12440(%rip),%rsi        # 2e810 <png_pass_inc.11+0x1c>
   1c3d0:	callq  5470 <png_error@plt>
   1c3d5:	mov    %r12,%rdi
   1c3d8:	lea    0x12431(%rip),%rsi        # 2e810 <png_pass_inc.11+0x1c>
   1c3df:	callq  5470 <png_error@plt>
   1c3e4:	data16 nopw %cs:0x0(%rax,%rax,1)
   1c3ef:	nop

000000000001c3f0 <png_read_finish_IDAT>:
   1c3f0:	push   %rbp
   1c3f1:	mov    %rsp,%rbp
   1c3f4:	sub    $0x10,%rsp
   1c3f8:	mov    0x130(%rdi),%eax
   1c3fe:	and    $0x8,%eax
   1c401:	test   %eax,%eax
   1c403:	je     1c414 <png_read_finish_IDAT+0x24>
   1c405:	mov    0x138(%rdi),%eax
   1c40b:	cmp    $0x49444154,%eax
   1c410:	je     1c450 <png_read_finish_IDAT+0x60>
   1c412:	leaveq 
   1c413:	retq   
   1c414:	xor    %esi,%esi
   1c416:	mov    %rsi,%rdx
   1c419:	mov    %rdi,%rax
   1c41c:	mov    %r15,-0x8(%rbp)
   1c420:	mov    %rdi,%r15
   1c423:	mov    %rax,%rdi
   1c426:	callq  1c100 <png_read_IDAT_data>
   1c42b:	movq   $0x0,0x158(%r15)
   1c436:	mov    0x130(%r15),%eax
   1c43d:	mov    %rax,%rcx
   1c440:	and    $0x8,%ecx
   1c443:	test   %ecx,%ecx
   1c445:	je     1c47c <png_read_finish_IDAT+0x8c>
   1c447:	mov    %r15,%rdi
   1c44a:	mov    -0x8(%rbp),%r15
   1c44e:	jmp    1c405 <png_read_finish_IDAT+0x15>
   1c450:	movq   $0x0,0x140(%rdi)
   1c45b:	movl   $0x0,0x148(%rdi)
   1c465:	movl   $0x0,0x138(%rdi)
   1c46f:	mov    0x248(%rdi),%esi
   1c475:	callq  1b280 <png_crc_finish>
   1c47a:	leaveq 
   1c47b:	retq   
   1c47c:	mov    0x12c(%r15),%ecx
   1c483:	or     $0x8,%ecx
   1c486:	mov    %ecx,0x12c(%r15)
   1c48d:	or     $0x8,%eax
   1c490:	mov    %eax,0x130(%r15)
   1c497:	mov    %r15,%rdi
   1c49a:	mov    -0x8(%rbp),%r15
   1c49e:	jmpq   1c405 <png_read_finish_IDAT+0x15>
   1c4a3:	data16 nopw %cs:0x0(%rax,%rax,1)
   1c4ae:	xchg   %ax,%ax

000000000001c4b0 <png_read_finish_row>:
   1c4b0:	push   %rbp
   1c4b1:	mov    %rsp,%rbp
   1c4b4:	sub    $0x10,%rsp
   1c4b8:	mov    0x214(%rdi),%eax
   1c4be:	add    $0x1,%eax
   1c4c1:	mov    %eax,0x214(%rdi)
   1c4c7:	mov    0x200(%rdi),%ecx
   1c4cd:	cmp    %eax,%ecx
   1c4cf:	jbe    1c4d3 <png_read_finish_row+0x23>
   1c4d1:	leaveq 
   1c4d2:	retq   
   1c4d3:	movzbl 0x264(%rdi),%eax
   1c4da:	test   %al,%al
   1c4dc:	jne    1c4e5 <png_read_finish_row+0x35>
   1c4de:	callq  1c3f0 <png_read_finish_IDAT>
   1c4e3:	leaveq 
   1c4e4:	retq   
   1c4e5:	movl   $0x0,0x214(%rdi)
   1c4ef:	mov    0x220(%rdi),%rax
   1c4f6:	xor    %esi,%esi
   1c4f8:	mov    0x208(%rdi),%rdx
   1c4ff:	add    $0x1,%rdx
   1c503:	mov    %r15,-0x8(%rbp)
   1c507:	mov    %rdi,%r15
   1c50a:	mov    %rax,%rdi
   1c50d:	callq  5350 <memset@plt>
   1c512:	mov    %r15,%rdi
   1c515:	lea    0x1233b(%rip),%rcx        # 2e857 <png_pass_inc.16>
   1c51c:	lea    0x1232d(%rip),%rsi        # 2e850 <png_pass_start.15>
   1c523:	lea    0x1233b(%rip),%r8        # 2e865 <png_pass_yinc.18>
   1c52a:	lea    0x1232d(%rip),%r9        # 2e85e <png_pass_ystart.17>
   1c531:	jmp    1c59b <png_read_finish_row+0xeb>
   1c533:	movzbl %al,%edx
   1c536:	movzbl (%rdx,%rcx,1),%r10d
   1c53b:	mov    0x1f8(%rdi),%eax
   1c541:	lea    -0x1(%r10,%rax,1),%eax
   1c546:	movzbl (%rdx,%rsi,1),%edx
   1c54a:	sub    %edx,%eax
   1c54c:	xor    %edx,%edx
   1c54e:	div    %r10d
   1c551:	mov    %eax,0x210(%rdi)
   1c557:	mov    0x134(%rdi),%eax
   1c55d:	and    $0x2,%eax
   1c560:	test   %eax,%eax
   1c562:	jne    1c5af <png_read_finish_row+0xff>
   1c564:	movzbl 0x265(%rdi),%edx
   1c56b:	movzbl (%rdx,%r8,1),%r10d
   1c570:	mov    0x1fc(%rdi),%eax
   1c576:	lea    -0x1(%r10,%rax,1),%eax
   1c57b:	movzbl (%rdx,%r9,1),%edx
   1c580:	sub    %edx,%eax
   1c582:	xor    %edx,%edx
   1c584:	div    %r10d
   1c587:	mov    %eax,0x200(%rdi)
   1c58d:	test   %eax,%eax
   1c58f:	je     1c59b <png_read_finish_row+0xeb>
   1c591:	mov    0x210(%rdi),%eax
   1c597:	test   %eax,%eax
   1c599:	jne    1c5af <png_read_finish_row+0xff>
   1c59b:	movzbl 0x265(%rdi),%eax
   1c5a2:	add    $0x1,%eax
   1c5a5:	mov    %al,0x265(%rdi)
   1c5ab:	cmp    $0x6,%al
   1c5ad:	jbe    1c533 <png_read_finish_row+0x83>
   1c5af:	movzbl 0x265(%rdi),%eax
   1c5b6:	cmp    $0x6,%al
   1c5b8:	jbe    1c5c3 <png_read_finish_row+0x113>
   1c5ba:	mov    -0x8(%rbp),%r15
   1c5be:	jmpq   1c4de <png_read_finish_row+0x2e>
   1c5c3:	mov    -0x8(%rbp),%r15
   1c5c7:	leaveq 
   1c5c8:	retq   
   1c5c9:	nopl   0x0(%rax)

000000000001c5d0 <png_read_start_row>:
   1c5d0:	push   %rbp
   1c5d1:	mov    %rsp,%rbp
   1c5d4:	sub    $0x10,%rsp
   1c5d8:	mov    %r15,-0x10(%rbp)
   1c5dc:	mov    %r14,%r15
   1c5df:	mov    %r13,%r14
   1c5e2:	mov    %r12,%r13
   1c5e5:	mov    %rbx,%r12
   1c5e8:	mov    %rdi,%rbx
   1c5eb:	callq  16860 <png_init_read_transformations>
   1c5f0:	movzbl 0x264(%rbx),%eax
   1c5f7:	test   %al,%al
   1c5f9:	jne    1c615 <png_read_start_row+0x45>
   1c5fb:	mov    0x1fc(%rbx),%eax
   1c601:	mov    %eax,0x200(%rbx)
   1c607:	mov    0x1f8(%rbx),%eax
   1c60d:	mov    %eax,0x210(%rbx)
   1c613:	jmp    1c675 <png_read_start_row+0xa5>
   1c615:	mov    0x134(%rbx),%eax
   1c61b:	and    $0x2,%eax
   1c61e:	test   %eax,%eax
   1c620:	je     1c630 <png_read_start_row+0x60>
   1c622:	mov    0x1fc(%rbx),%eax
   1c628:	mov    %eax,0x200(%rbx)
   1c62e:	jmp    1c642 <png_read_start_row+0x72>
   1c630:	mov    0x1fc(%rbx),%eax
   1c636:	add    $0x7,%eax
   1c639:	shr    $0x3,%eax
   1c63c:	mov    %eax,0x200(%rbx)
   1c642:	movzbl 0x265(%rbx),%esi
   1c649:	lea    0x12223(%rip),%rax        # 2e873 <png_pass_inc.20>
   1c650:	movzbl (%rsi,%rax,1),%ecx
   1c654:	mov    0x1f8(%rbx),%eax
   1c65a:	lea    -0x1(%rcx,%rax,1),%eax
   1c65e:	lea    0x12207(%rip),%rdx        # 2e86c <png_pass_start.19>
   1c665:	movzbl (%rsi,%rdx,1),%edx
   1c669:	sub    %edx,%eax
   1c66b:	xor    %edx,%edx
   1c66d:	div    %ecx
   1c66f:	mov    %eax,0x210(%rbx)
   1c675:	movzbl 0x26a(%rbx),%edx
   1c67c:	mov    $0x8,%edi
   1c681:	mov    0x134(%rbx),%eax
   1c687:	and    $0x4,%eax
   1c68a:	test   %eax,%eax
   1c68c:	jne    1c740 <png_read_start_row+0x170>
   1c692:	mov    $0x20,%ecx
   1c697:	mov    $0x18,%esi
   1c69c:	mov    0x134(%rbx),%eax
   1c6a2:	and    $0x1000,%eax
   1c6a7:	test   %eax,%eax
   1c6a9:	jne    1c757 <png_read_start_row+0x187>
   1c6af:	mov    0x134(%rbx),%eax
   1c6b5:	mov    %rax,%rdi
   1c6b8:	and    $0x200,%edi
   1c6be:	test   %edi,%edi
   1c6c0:	jne    1c797 <png_read_start_row+0x1c7>
   1c6c6:	mov    $0x40,%r8d
   1c6cc:	mov    0x134(%rbx),%eax
   1c6d2:	and    $0x8000,%eax
   1c6d7:	test   %eax,%eax
   1c6d9:	jne    1c7b8 <png_read_start_row+0x1e8>
   1c6df:	mov    0x134(%rbx),%eax
   1c6e5:	mov    %rax,%rdi
   1c6e8:	and    $0x4000,%edi
   1c6ee:	test   %edi,%edi
   1c6f0:	jne    1c7e4 <png_read_start_row+0x214>
   1c6f6:	mov    0x134(%rbx),%eax
   1c6fc:	and    $0x100000,%eax
   1c701:	test   %eax,%eax
   1c703:	jne    1c82b <png_read_start_row+0x25b>
   1c709:	mov    0x1f8(%rbx),%eax
   1c70f:	add    $0x7,%eax
   1c712:	and    $0xfffffff8,%eax
   1c715:	mov    %eax,%eax
   1c717:	mov    %edx,%ecx
   1c719:	mov    %dl,0x26e(%rbx)
   1c71f:	movb   $0x0,0x26f(%rbx)
   1c726:	cmp    $0x7,%edx
   1c729:	ja     1c84c <png_read_start_row+0x27c>
   1c72f:	imul   %rax,%rcx
   1c733:	lea    0x7(%rcx),%rax
   1c737:	shr    $0x3,%rax
   1c73b:	jmpq   1c854 <png_read_start_row+0x284>
   1c740:	movzbl 0x268(%rbx),%eax
   1c747:	cmp    $0x7,%al
   1c749:	ja     1c692 <png_read_start_row+0xc2>
   1c74f:	mov    %rdi,%rdx
   1c752:	jmpq   1c692 <png_read_start_row+0xc2>
   1c757:	movzbl 0x267(%rbx),%eax
   1c75e:	cmp    $0x3,%al
   1c760:	je     1c8b2 <png_read_start_row+0x2e2>
   1c766:	test   %al,%al
   1c768:	je     1c8ca <png_read_start_row+0x2fa>
   1c76e:	cmp    $0x2,%al
   1c770:	jne    1c6af <png_read_start_row+0xdf>
   1c776:	movzwl 0x260(%rbx),%eax
   1c77d:	test   %ax,%ax
   1c780:	je     1c6af <png_read_start_row+0xdf>
   1c786:	shl    $0x2,%edx
   1c789:	mov    $0xaaaaaaab,%eax
   1c78e:	mul    %edx
   1c790:	shr    %edx
   1c792:	jmpq   1c6af <png_read_start_row+0xdf>
   1c797:	mov    %rax,%rdi
   1c79a:	and    $0x1000,%edi
   1c7a0:	test   %edi,%edi
   1c7a2:	jne    1c8ea <png_read_start_row+0x31a>
   1c7a8:	and    $0xfffffdff,%eax
   1c7ad:	mov    %eax,0x134(%rbx)
   1c7b3:	jmpq   1c6c6 <png_read_start_row+0xf6>
   1c7b8:	movzbl 0x267(%rbx),%eax
   1c7bf:	test   %al,%al
   1c7c1:	je     1c900 <png_read_start_row+0x330>
   1c7c7:	cmp    $0x2,%al
   1c7c9:	je     1c7d3 <png_read_start_row+0x203>
   1c7cb:	cmp    $0x3,%al
   1c7cd:	jne    1c6df <png_read_start_row+0x10f>
   1c7d3:	cmp    $0x20,%edx
   1c7d6:	jbe    1c911 <png_read_start_row+0x341>
   1c7dc:	mov    %r8,%rdx
   1c7df:	jmpq   1c6df <png_read_start_row+0x10f>
   1c7e4:	movzwl 0x260(%rbx),%edi
   1c7eb:	test   %di,%di
   1c7ee:	jne    1c919 <png_read_start_row+0x349>
   1c7f4:	and    $0x8000,%eax
   1c7f9:	test   %eax,%eax
   1c7fb:	jne    1c92a <png_read_start_row+0x35a>
   1c801:	movzbl 0x267(%rbx),%eax
   1c808:	cmp    $0x4,%al
   1c80a:	je     1c92a <png_read_start_row+0x35a>
   1c810:	cmp    $0x8,%edx
   1c813:	jbe    1c93b <png_read_start_row+0x36b>
   1c819:	cmp    $0x6,%al
   1c81b:	je     1c94b <png_read_start_row+0x37b>
   1c821:	mov    $0x30,%edx
   1c826:	jmpq   1c6f6 <png_read_start_row+0x126>
   1c82b:	movzbl 0x129(%rbx),%eax
   1c832:	movzbl 0x128(%rbx),%ecx
   1c839:	imul   %ecx,%eax
   1c83c:	cmp    %edx,%eax
   1c83e:	jbe    1c709 <png_read_start_row+0x139>
   1c844:	mov    %rax,%rdx
   1c847:	jmpq   1c709 <png_read_start_row+0x139>
   1c84c:	shr    $0x3,%rcx
   1c850:	imul   %rcx,%rax
   1c854:	lea    0x7(%rdx),%ecx
   1c857:	shr    $0x3,%ecx
   1c85a:	mov    %ecx,%ecx
   1c85c:	lea    0x31(%rcx,%rax,1),%rax
   1c861:	cmp    0x450(%rbx),%rax
   1c868:	jbe    1c9bb <png_read_start_row+0x3eb>
   1c86e:	mov    0x3f8(%rbx),%rsi
   1c875:	mov    %rbx,%rdi
   1c878:	mov    %r15,-0x8(%rbp)
   1c87c:	mov    %rax,%r15
   1c87f:	callq  5790 <png_free@plt>
   1c884:	mov    0x470(%rbx),%rsi
   1c88b:	mov    %rbx,%rdi
   1c88e:	callq  5790 <png_free@plt>
   1c893:	movzbl 0x264(%rbx),%eax
   1c89a:	test   %al,%al
   1c89c:	jne    1c953 <png_read_start_row+0x383>
   1c8a2:	mov    %rbx,%rdi
   1c8a5:	mov    %r15,%rsi
   1c8a8:	callq  5800 <png_malloc@plt>
   1c8ad:	jmpq   1c95e <png_read_start_row+0x38e>
   1c8b2:	movzwl 0x260(%rbx),%eax
   1c8b9:	test   %ax,%ax
   1c8bc:	jne    1ca3a <png_read_start_row+0x46a>
   1c8c2:	mov    %rsi,%rdx
   1c8c5:	jmpq   1c6af <png_read_start_row+0xdf>
   1c8ca:	cmp    $0x7,%edx
   1c8cd:	jbe    1c8d2 <png_read_start_row+0x302>
   1c8cf:	mov    %rdx,%rdi
   1c8d2:	movzwl 0x260(%rbx),%eax
   1c8d9:	test   %ax,%ax
   1c8dc:	jne    1ca42 <png_read_start_row+0x472>
   1c8e2:	mov    %rdi,%rdx
   1c8e5:	jmpq   1c6af <png_read_start_row+0xdf>
   1c8ea:	movzbl 0x268(%rbx),%eax
   1c8f1:	cmp    $0xf,%al
   1c8f3:	ja     1c6c6 <png_read_start_row+0xf6>
   1c8f9:	add    %edx,%edx
   1c8fb:	jmpq   1c6c6 <png_read_start_row+0xf6>
   1c900:	cmp    $0x8,%edx
   1c903:	jbe    1ca4a <png_read_start_row+0x47a>
   1c909:	mov    %rcx,%rdx
   1c90c:	jmpq   1c6df <png_read_start_row+0x10f>
   1c911:	mov    %rcx,%rdx
   1c914:	jmpq   1c6df <png_read_start_row+0x10f>
   1c919:	mov    %rax,%rdi
   1c91c:	and    $0x1000,%edi
   1c922:	test   %edi,%edi
   1c924:	je     1c7f4 <png_read_start_row+0x224>
   1c92a:	cmp    $0x10,%edx
   1c92d:	jbe    1ca54 <png_read_start_row+0x484>
   1c933:	mov    %r8,%rdx
   1c936:	jmpq   1c6f6 <png_read_start_row+0x126>
   1c93b:	cmp    $0x6,%al
   1c93d:	je     1ca5c <png_read_start_row+0x48c>
   1c943:	mov    %rsi,%rdx
   1c946:	jmpq   1c6f6 <png_read_start_row+0x126>
   1c94b:	mov    %r8,%rdx
   1c94e:	jmpq   1c6f6 <png_read_start_row+0x126>
   1c953:	mov    %rbx,%rdi
   1c956:	mov    %r15,%rsi
   1c959:	callq  5780 <png_calloc@plt>
   1c95e:	mov    %rax,0x3f8(%rbx)
   1c965:	mov    %rbx,%rdi
   1c968:	mov    %r15,%rsi
   1c96b:	callq  5800 <png_malloc@plt>
   1c970:	mov    %rax,0x470(%rbx)
   1c977:	mov    0x3f8(%rbx),%rcx
   1c97e:	add    $0x20,%rcx
   1c982:	mov    %rcx,%rdx
   1c985:	and    $0xf,%rdx
   1c989:	sub    %rdx,%rcx
   1c98c:	add    $0xffffffffffffffff,%rcx
   1c990:	mov    %rcx,0x228(%rbx)
   1c997:	add    $0x20,%rax
   1c99b:	mov    %rax,%rcx
   1c99e:	and    $0xf,%rcx
   1c9a2:	sub    %rcx,%rax
   1c9a5:	add    $0xffffffffffffffff,%rax
   1c9a9:	mov    %rax,0x220(%rbx)
   1c9b0:	mov    %r15,0x450(%rbx)
   1c9b7:	mov    -0x8(%rbp),%r15
   1c9bb:	mov    0x208(%rbx),%rax
   1c9c2:	cmp    $0xfffffffffffffffe,%rax
   1c9c6:	ja     1ca64 <png_read_start_row+0x494>
   1c9cc:	mov    0x220(%rbx),%rdi
   1c9d3:	xor    %esi,%esi
   1c9d5:	lea    0x1(%rax),%rdx
   1c9d9:	callq  5350 <memset@plt>
   1c9de:	mov    0x458(%rbx),%rsi
   1c9e5:	test   %rsi,%rsi
   1c9e8:	je     1ca08 <png_read_start_row+0x438>
   1c9ea:	movq   $0x0,0x460(%rbx)
   1c9f5:	movq   $0x0,0x458(%rbx)
   1ca00:	mov    %rbx,%rdi
   1ca03:	callq  5790 <png_free@plt>
   1ca08:	mov    $0x49444154,%esi
   1ca0d:	mov    %rbx,%rdi
   1ca10:	callq  201c0 <png_inflate_claim>
   1ca15:	test   %eax,%eax
   1ca17:	jne    1ca73 <png_read_start_row+0x4a3>
   1ca19:	mov    0x130(%rbx),%eax
   1ca1f:	or     $0x40,%eax
   1ca22:	mov    %eax,0x130(%rbx)
   1ca28:	mov    %r12,%rbx
   1ca2b:	mov    %r13,%r12
   1ca2e:	mov    %r14,%r13
   1ca31:	mov    %r15,%r14
   1ca34:	mov    -0x10(%rbp),%r15
   1ca38:	leaveq 
   1ca39:	retq   
   1ca3a:	mov    %rcx,%rdx
   1ca3d:	jmpq   1c6af <png_read_start_row+0xdf>
   1ca42:	lea    (%rdi,%rdi,1),%edx
   1ca45:	jmpq   1c6af <png_read_start_row+0xdf>
   1ca4a:	mov    $0x10,%edx
   1ca4f:	jmpq   1c6df <png_read_start_row+0x10f>
   1ca54:	mov    %rcx,%rdx
   1ca57:	jmpq   1c6f6 <png_read_start_row+0x126>
   1ca5c:	mov    %rcx,%rdx
   1ca5f:	jmpq   1c6f6 <png_read_start_row+0x126>
   1ca64:	mov    %rbx,%rdi
   1ca67:	lea    0x11e0c(%rip),%rsi        # 2e87a <png_pass_inc.20+0x7>
   1ca6e:	callq  5470 <png_error@plt>
   1ca73:	mov    %rbx,%rdi
   1ca76:	mov    0x170(%rdi),%rsi
   1ca7d:	callq  5470 <png_error@plt>
   1ca82:	data16 nopw %cs:0x0(%rax,%rax,1)
   1ca8d:	nopl   (%rax)

000000000001ca90 <png_zlib_inflate>:
   1ca90:	push   %rbp
   1ca91:	mov    %rsp,%rbp
   1ca94:	movzbl 0x270(%rdi),%eax
   1ca9b:	test   %al,%al
   1ca9d:	jne    1caad <png_zlib_inflate+0x1d>
   1ca9f:	add    $0x140,%rdi
   1caa6:	callq  5120 <inflate@plt>
   1caab:	leaveq 
   1caac:	retq   
   1caad:	mov    0x148(%rdi),%eax
   1cab3:	test   %eax,%eax
   1cab5:	je     1ca9f <png_zlib_inflate+0xf>
   1cab7:	mov    0x140(%rdi),%rax
   1cabe:	movzbl (%rax),%eax
   1cac1:	shr    $0x4,%eax
   1cac4:	cmp    $0x7,%eax
   1cac7:	jg     1cad2 <png_zlib_inflate+0x42>
   1cac9:	movb   $0x0,0x270(%rdi)
   1cad0:	jmp    1ca9f <png_zlib_inflate+0xf>
   1cad2:	lea    0x11dce(%rip),%rax        # 2e8a7 <png_pass_inc.20+0x34>
   1cad9:	mov    %rax,0x170(%rdi)
   1cae0:	mov    $0xfffffffffffffffd,%rax
   1cae7:	leaveq 
   1cae8:	retq   
   1cae9:	nopl   0x0(%rax)

000000000001caf0 <png_handle_IHDR>:
   1caf0:	push   %rbp
   1caf1:	mov    %rsp,%rbp
   1caf4:	sub    $0x30,%rsp
   1caf8:	mov    0x12c(%rdi),%eax
   1cafe:	mov    %rax,%rcx
   1cb01:	and    $0x1,%ecx
   1cb04:	test   %ecx,%ecx
   1cb06:	jne    1cc03 <png_handle_IHDR+0x113>
   1cb0c:	cmp    $0xd,%edx
   1cb0f:	jne    1cc0f <png_handle_IHDR+0x11f>
   1cb15:	or     $0x1,%eax
   1cb18:	mov    %eax,0x12c(%rdi)
   1cb1e:	lea    -0x25(%rbp),%rax
   1cb22:	mov    $0xd,%edx
   1cb27:	mov    %rdi,%rcx
   1cb2a:	mov    %rax,%r8
   1cb2d:	mov    %r13,-0x8(%rbp)
   1cb31:	mov    %r14,-0x10(%rbp)
   1cb35:	mov    %r15,-0x18(%rbp)
   1cb39:	mov    %r12,%r13
   1cb3c:	mov    %rbx,%r12
   1cb3f:	mov    %rdi,%rbx
   1cb42:	mov    %rcx,%rdi
   1cb45:	mov    %rsi,%r14
   1cb48:	mov    %r8,%rsi
   1cb4b:	mov    %rax,%r15
   1cb4e:	callq  1b220 <png_crc_read>
   1cb53:	xor    %esi,%esi
   1cb55:	mov    %rbx,%rdi
   1cb58:	callq  1b280 <png_crc_finish>
   1cb5d:	mov    %r15,%rsi
   1cb60:	mov    %rbx,%rdi
   1cb63:	callq  5730 <png_get_uint_31@plt>
   1cb68:	mov    %rax,%r15
   1cb6b:	lea    -0x21(%rbp),%rsi
   1cb6f:	mov    %rbx,%rdi
   1cb72:	callq  5730 <png_get_uint_31@plt>
   1cb77:	movzbl -0x1d(%rbp),%r8d
   1cb7c:	movzbl -0x19(%rbp),%r11d
   1cb81:	movzbl -0x1c(%rbp),%r9d
   1cb86:	movzbl -0x1a(%rbp),%edi
   1cb8a:	movzbl -0x1b(%rbp),%r10d
   1cb8f:	mov    %r15d,0x1f8(%rbx)
   1cb96:	mov    %eax,0x1fc(%rbx)
   1cb9c:	mov    %r8b,0x268(%rbx)
   1cba3:	mov    %r11b,0x264(%rbx)
   1cbaa:	mov    %r9b,0x267(%rbx)
   1cbb1:	mov    %dil,0x3dc(%rbx)
   1cbb8:	mov    %r10b,0x418(%rbx)
   1cbbf:	mov    $0x1,%esi
   1cbc4:	cmp    $0x3,%r9b
   1cbc8:	jbe    1cc1b <png_handle_IHDR+0x12b>
   1cbca:	cmp    $0x4,%r9b
   1cbce:	jne    1cc28 <png_handle_IHDR+0x138>
   1cbd0:	mov    $0x2,%esi
   1cbd5:	mov    %rax,%rcx
   1cbd8:	mov    %r8,%rax
   1cbdb:	imul   %sil
   1cbde:	mov    %al,0x26a(%rbx)
   1cbe4:	mov    %sil,0x26b(%rbx)
   1cbeb:	cmp    $0x7,%al
   1cbed:	ja     1cc35 <png_handle_IHDR+0x145>
   1cbef:	movzbl %al,%eax
   1cbf2:	mov    %r15d,%edx
   1cbf5:	imul   %rdx,%rax
   1cbf9:	lea    0x7(%rax),%rdx
   1cbfd:	shr    $0x3,%rdx
   1cc01:	jmp    1cc43 <png_handle_IHDR+0x153>
   1cc03:	lea    0x11cba(%rip),%rsi        # 2e8c4 <png_pass_inc.20+0x51>
   1cc0a:	callq  5060 <png_chunk_error@plt>
   1cc0f:	lea    0x11cbb(%rip),%rsi        # 2e8d1 <png_pass_inc.20+0x5e>
   1cc16:	callq  5060 <png_chunk_error@plt>
   1cc1b:	cmp    $0x2,%r9b
   1cc1f:	jne    1cbd5 <png_handle_IHDR+0xe5>
   1cc21:	mov    $0x3,%esi
   1cc26:	jmp    1cbd5 <png_handle_IHDR+0xe5>
   1cc28:	cmp    $0x6,%r9b
   1cc2c:	jne    1cbd5 <png_handle_IHDR+0xe5>
   1cc2e:	mov    $0x4,%esi
   1cc33:	jmp    1cbd5 <png_handle_IHDR+0xe5>
   1cc35:	movzbl %al,%edx
   1cc38:	shr    $0x3,%rdx
   1cc3c:	mov    %r15d,%eax
   1cc3f:	imul   %rax,%rdx
   1cc43:	sub    $0x10,%rsp
   1cc47:	mov    %rdx,0x208(%rbx)
   1cc4e:	mov    %r11d,(%rsp)
   1cc52:	mov    %r10d,0x8(%rsp)
   1cc57:	mov    %edi,0x10(%rsp)
   1cc5b:	mov    %r15,%rdx
   1cc5e:	mov    %r14,%rsi
   1cc61:	mov    %rbx,%rdi
   1cc64:	callq  5460 <png_set_IHDR@plt>
   1cc69:	mov    %r12,%rbx
   1cc6c:	mov    %r13,%r12
   1cc6f:	mov    -0x18(%rbp),%r15
   1cc73:	mov    -0x10(%rbp),%r14
   1cc77:	mov    -0x8(%rbp),%r13
   1cc7b:	leaveq 
   1cc7c:	retq   
   1cc7d:	nopl   (%rax)

000000000001cc80 <png_handle_PLTE>:
   1cc80:	push   %rbp
   1cc81:	mov    %rsp,%rbp
   1cc84:	sub    $0x350,%rsp
   1cc8b:	mov    0x12c(%rdi),%eax
   1cc91:	mov    %rax,%rcx
   1cc94:	and    $0x1,%ecx
   1cc97:	test   %ecx,%ecx
   1cc99:	je     1cd0d <png_handle_PLTE+0x8d>
   1cc9b:	mov    %rax,%rcx
   1cc9e:	and    $0x2,%ecx
   1cca1:	test   %ecx,%ecx
   1cca3:	jne    1cd19 <png_handle_PLTE+0x99>
   1cca5:	mov    %rax,%rcx
   1cca8:	and    $0x4,%ecx
   1ccab:	test   %ecx,%ecx
   1ccad:	jne    1cd25 <png_handle_PLTE+0xa5>
   1ccaf:	or     $0x2,%eax
   1ccb2:	mov    %eax,0x12c(%rdi)
   1ccb8:	movzbl 0x267(%rdi),%eax
   1ccbf:	and    $0x2,%eax
   1ccc2:	test   %eax,%eax
   1ccc4:	je     1cd4f <png_handle_PLTE+0xcf>
   1ccca:	cmp    $0x300,%edx
   1ccd0:	jbe    1cd79 <png_handle_PLTE+0xf9>
   1ccd6:	mov    %rdx,%rsi
   1ccd9:	mov    %r15,%r8
   1ccdc:	mov    %rdi,%rax
   1ccdf:	mov    %r8,-0x48(%rbp)
   1cce3:	mov    %rdi,%r15
   1cce6:	mov    %rax,%rdi
   1cce9:	callq  1b280 <png_crc_finish>
   1ccee:	lea    0x11bdc(%rip),%rsi        # 2e8d1 <png_pass_inc.20+0x5e>
   1ccf5:	movzbl 0x267(%r15),%eax
   1ccfd:	cmp    $0x3,%al
   1ccff:	jne    1cdb3 <png_handle_PLTE+0x133>
   1cd05:	mov    %r15,%rdi
   1cd08:	callq  5060 <png_chunk_error@plt>
   1cd0d:	lea    0x11bc5(%rip),%rsi        # 2e8d9 <png_pass_inc.20+0x66>
   1cd14:	callq  5060 <png_chunk_error@plt>
   1cd19:	lea    0x11bc6(%rip),%rsi        # 2e8e6 <png_pass_inc.20+0x73>
   1cd20:	callq  5060 <png_chunk_error@plt>
   1cd25:	mov    %rdi,%rax
   1cd28:	mov    %r15,-0x48(%rbp)
   1cd2c:	mov    %rdx,%rsi
   1cd2f:	mov    %rdi,%r15
   1cd32:	mov    %rax,%rdi
   1cd35:	callq  1b280 <png_crc_finish>
   1cd3a:	mov    %r15,%rdi
   1cd3d:	lea    0x11b80(%rip),%rsi        # 2e8c4 <png_pass_inc.20+0x51>
   1cd44:	callq  5230 <png_chunk_benign_error@plt>
   1cd49:	mov    -0x48(%rbp),%r15
   1cd4d:	leaveq 
   1cd4e:	retq   
   1cd4f:	mov    %rdi,%rax
   1cd52:	mov    %r15,-0x48(%rbp)
   1cd56:	mov    %rdx,%rsi
   1cd59:	mov    %rdi,%r15
   1cd5c:	mov    %rax,%rdi
   1cd5f:	callq  1b280 <png_crc_finish>
   1cd64:	mov    %r15,%rdi
   1cd67:	lea    0x11b82(%rip),%rsi        # 2e8f0 <png_pass_inc.20+0x7d>
   1cd6e:	callq  5230 <png_chunk_benign_error@plt>
   1cd73:	mov    -0x48(%rbp),%r15
   1cd77:	leaveq 
   1cd78:	retq   
   1cd79:	mov    %r15,%r8
   1cd7c:	mov    %rsi,%r9
   1cd7f:	mov    %rdx,%rsi
   1cd82:	mov    $0xaaaaaaab,%eax
   1cd87:	mul    %esi
   1cd89:	shr    %edx
   1cd8b:	lea    (%rdx,%rdx,2),%eax
   1cd8e:	cmp    %eax,%esi
   1cd90:	jne    1ccdc <png_handle_PLTE+0x5c>
   1cd96:	mov    $0x1,%r15d
   1cd9c:	mov    %r15,-0x30(%rbp)
   1cda0:	movzbl 0x267(%rdi),%eax
   1cda7:	cmp    $0x3,%al
   1cda9:	je     1cdc1 <png_handle_PLTE+0x141>
   1cdab:	mov    $0x100,%r15d
   1cdb1:	jmp    1cdcb <png_handle_PLTE+0x14b>
   1cdb3:	mov    %r15,%rdi
   1cdb6:	callq  5230 <png_chunk_benign_error@plt>
   1cdbb:	mov    -0x48(%rbp),%r15
   1cdbf:	leaveq 
   1cdc0:	retq   
   1cdc1:	movzbl 0x268(%rdi),%ecx
   1cdc8:	shl    %cl,%r15d
   1cdcb:	mov    $0x55555556,%eax
   1cdd0:	imul   %esi
   1cdd2:	mov    %rdx,%rax
   1cdd5:	shr    $0x1f,%eax
   1cdd8:	add    %edx,%eax
   1cdda:	cmp    %eax,%r15d
   1cddd:	jl     1cde2 <png_handle_PLTE+0x162>
   1cddf:	mov    %rax,%r15
   1cde2:	lea    -0x34b(%rbp),%rcx
   1cde9:	lea    -0x4b(%rbp),%r10
   1cded:	mov    $0x3,%edx
   1cdf2:	xor    %eax,%eax
   1cdf4:	mov    %rsi,-0x48(%rbp)
   1cdf8:	mov    %r9,-0x40(%rbp)
   1cdfc:	mov    %rbx,-0x8(%rbp)
   1ce00:	mov    %r12,-0x10(%rbp)
   1ce04:	mov    %r13,-0x18(%rbp)
   1ce08:	mov    %r14,-0x20(%rbp)
   1ce0c:	mov    %r8,-0x28(%rbp)
   1ce10:	mov    %rcx,%rbx
   1ce13:	mov    %rax,%r12
   1ce16:	mov    %r10,%r13
   1ce19:	mov    %r12,-0x38(%rbp)
   1ce1d:	jmp    1ce4e <png_handle_PLTE+0x1ce>
   1ce1f:	mov    %rdi,%r14
   1ce22:	mov    %r13,%rsi
   1ce25:	callq  1b220 <png_crc_read>
   1ce2a:	movzbl -0x4b(%rbp),%eax
   1ce2e:	mov    %al,(%rbx)
   1ce30:	movzbl -0x4a(%rbp),%eax
   1ce34:	mov    %al,0x1(%rbx)
   1ce37:	movzbl -0x49(%rbp),%eax
   1ce3b:	mov    %al,0x2(%rbx)
   1ce3e:	add    $0x3,%rbx
   1ce42:	add    $0x1,%r12d
   1ce46:	mov    %r14,%rdi
   1ce49:	mov    $0x3,%edx
   1ce4e:	cmp    %r12d,%r15d
   1ce51:	jg     1ce1f <png_handle_PLTE+0x19f>
   1ce53:	lea    (%r15,%r15,2),%eax
   1ce57:	mov    -0x48(%rbp),%rsi
   1ce5b:	sub    %eax,%esi
   1ce5d:	mov    %rdi,%rbx
   1ce60:	callq  1b280 <png_crc_finish>
   1ce65:	mov    %r15,%rcx
   1ce68:	mov    %rbx,%rdi
   1ce6b:	mov    -0x40(%rbp),%r12
   1ce6f:	mov    %r12,%rsi
   1ce72:	lea    -0x34b(%rbp),%rdx
   1ce79:	callq  5530 <png_set_PLTE@plt>
   1ce7e:	movzwl 0x260(%rbx),%eax
   1ce85:	test   %ax,%ax
   1ce88:	jne    1ce9b <png_handle_PLTE+0x21b>
   1ce8a:	test   %r12,%r12
   1ce8d:	je     1cec0 <png_handle_PLTE+0x240>
   1ce8f:	mov    0x8(%r12),%eax
   1ce94:	and    $0x10,%eax
   1ce97:	test   %eax,%eax
   1ce99:	je     1cec0 <png_handle_PLTE+0x240>
   1ce9b:	test   %r12,%r12
   1ce9e:	movw   $0x0,0x260(%rbx)
   1cea7:	je     1ceb1 <png_handle_PLTE+0x231>
   1cea9:	movw   $0x0,0x22(%r12)
   1ceb1:	lea    0x11a51(%rip),%rsi        # 2e909 <png_pass_inc.20+0x96>
   1ceb8:	mov    %rbx,%rdi
   1cebb:	callq  5230 <png_chunk_benign_error@plt>
   1cec0:	test   %r12,%r12
   1cec3:	je     1ced7 <png_handle_PLTE+0x257>
   1cec5:	mov    0x8(%r12),%eax
   1ceca:	and    $0x40,%eax
   1cecd:	test   %eax,%eax
   1cecf:	jne    1cef6 <png_handle_PLTE+0x276>
   1ced1:	pushq  -0x30(%rbp)
   1ced4:	popq   -0x38(%rbp)
   1ced7:	mov    -0x38(%rbp),%rax
   1cedb:	test   %rax,%rax
   1cede:	jne    1cf0d <png_handle_PLTE+0x28d>
   1cee0:	mov    -0x28(%rbp),%r15
   1cee4:	mov    -0x20(%rbp),%r14
   1cee8:	mov    -0x18(%rbp),%r13
   1ceec:	mov    -0x10(%rbp),%r12
   1cef0:	mov    -0x8(%rbp),%rbx
   1cef4:	leaveq 
   1cef5:	retq   
   1cef6:	lea    0x11a1f(%rip),%rsi        # 2e91c <png_pass_inc.20+0xa9>
   1cefd:	mov    %rbx,%rdi
   1cf00:	callq  5230 <png_chunk_benign_error@plt>
   1cf05:	pushq  -0x30(%rbp)
   1cf08:	popq   -0x38(%rbp)
   1cf0b:	jmp    1ced7 <png_handle_PLTE+0x257>
   1cf0d:	mov    0x8(%r12),%eax
   1cf12:	and    $0x20,%eax
   1cf15:	test   %eax,%eax
   1cf17:	jne    1cf2f <png_handle_PLTE+0x2af>
   1cf19:	mov    -0x28(%rbp),%r15
   1cf1d:	mov    -0x20(%rbp),%r14
   1cf21:	mov    -0x18(%rbp),%r13
   1cf25:	mov    -0x10(%rbp),%r12
   1cf29:	mov    -0x8(%rbp),%rbx
   1cf2d:	leaveq 
   1cf2e:	retq   
   1cf2f:	mov    %rbx,%rdi
   1cf32:	lea    0x119f6(%rip),%rsi        # 2e92f <png_pass_inc.20+0xbc>
   1cf39:	callq  5230 <png_chunk_benign_error@plt>
   1cf3e:	mov    -0x28(%rbp),%r15
   1cf42:	mov    -0x20(%rbp),%r14
   1cf46:	mov    -0x18(%rbp),%r13
   1cf4a:	mov    -0x10(%rbp),%r12
   1cf4e:	mov    -0x8(%rbp),%rbx
   1cf52:	leaveq 
   1cf53:	retq   
   1cf54:	data16 nopw %cs:0x0(%rax,%rax,1)
   1cf5f:	nop

000000000001cf60 <png_handle_IEND>:
   1cf60:	push   %rbp
   1cf61:	mov    %rsp,%rbp
   1cf64:	sub    $0x10,%rsp
   1cf68:	mov    0x12c(%rdi),%eax
   1cf6e:	mov    %rax,%rcx
   1cf71:	and    $0x1,%ecx
   1cf74:	test   %ecx,%ecx
   1cf76:	je     1cfaf <png_handle_IEND+0x4f>
   1cf78:	mov    %rax,%rcx
   1cf7b:	and    $0x4,%ecx
   1cf7e:	test   %ecx,%ecx
   1cf80:	je     1cfaf <png_handle_IEND+0x4f>
   1cf82:	or     $0x18,%eax
   1cf85:	mov    %eax,0x12c(%rdi)
   1cf8b:	mov    %rdi,%rax
   1cf8e:	mov    %rdx,%rsi
   1cf91:	mov    %r15,-0x10(%rbp)
   1cf95:	mov    %rdi,-0x8(%rbp)
   1cf99:	mov    %rax,%rdi
   1cf9c:	mov    %rdx,%r15
   1cf9f:	callq  1b280 <png_crc_finish>
   1cfa4:	test   %r15d,%r15d
   1cfa7:	jne    1cfbb <png_handle_IEND+0x5b>
   1cfa9:	mov    -0x10(%rbp),%r15
   1cfad:	leaveq 
   1cfae:	retq   
   1cfaf:	lea    0x1190e(%rip),%rsi        # 2e8c4 <png_pass_inc.20+0x51>
   1cfb6:	callq  5060 <png_chunk_error@plt>
   1cfbb:	lea    0x1190f(%rip),%rsi        # 2e8d1 <png_pass_inc.20+0x5e>
   1cfc2:	mov    -0x8(%rbp),%rdi
   1cfc6:	callq  5230 <png_chunk_benign_error@plt>
   1cfcb:	mov    -0x10(%rbp),%r15
   1cfcf:	leaveq 
   1cfd0:	retq   
   1cfd1:	data16 nopw %cs:0x0(%rax,%rax,1)
   1cfdc:	nopl   0x0(%rax)

000000000001cfe0 <png_handle_bKGD>:
   1cfe0:	push   %rbp
   1cfe1:	mov    %rsp,%rbp
   1cfe4:	sub    $0x20,%rsp
   1cfe8:	mov    0x12c(%rdi),%eax
   1cfee:	mov    %rax,%rcx
   1cff1:	and    $0x1,%ecx
   1cff4:	test   %ecx,%ecx
   1cff6:	je     1d06b <png_handle_bKGD+0x8b>
   1cff8:	mov    %rax,%rcx
   1cffb:	and    $0x4,%ecx
   1cffe:	test   %ecx,%ecx
   1d000:	jne    1d07e <png_handle_bKGD+0x9e>
   1d002:	movzbl 0x267(%rdi),%ecx
   1d009:	cmp    $0x3,%cl
   1d00c:	je     1d077 <png_handle_bKGD+0x97>
   1d00e:	test   %rsi,%rsi
   1d011:	jne    1d0a8 <png_handle_bKGD+0xc8>
   1d017:	movzbl 0x267(%rdi),%eax
   1d01e:	cmp    $0x3,%al
   1d020:	jne    1d0e0 <png_handle_bKGD+0x100>
   1d026:	mov    $0x1,%eax
   1d02b:	cmp    %edx,%eax
   1d02d:	jne    1d0f5 <png_handle_bKGD+0x115>
   1d033:	lea    -0x20(%rbp),%rdx
   1d037:	mov    %rdi,%rcx
   1d03a:	mov    %r15,-0x8(%rbp)
   1d03e:	mov    %rsi,-0x10(%rbp)
   1d042:	mov    %rdx,%rsi
   1d045:	mov    %rax,%rdx
   1d048:	mov    %rdi,%r15
   1d04b:	mov    %rcx,%rdi
   1d04e:	callq  1b220 <png_crc_read>
   1d053:	xor    %esi,%esi
   1d055:	mov    %r15,%rdi
   1d058:	callq  1b280 <png_crc_finish>
   1d05d:	test   %eax,%eax
   1d05f:	je     1d11f <png_handle_bKGD+0x13f>
   1d065:	mov    -0x8(%rbp),%r15
   1d069:	leaveq 
   1d06a:	retq   
   1d06b:	lea    0x11867(%rip),%rsi        # 2e8d9 <png_pass_inc.20+0x66>
   1d072:	callq  5060 <png_chunk_error@plt>
   1d077:	and    $0x2,%eax
   1d07a:	test   %eax,%eax
   1d07c:	jne    1d00e <png_handle_bKGD+0x2e>
   1d07e:	mov    %rdi,%rax
   1d081:	mov    %r15,-0x10(%rbp)
   1d085:	mov    %rdx,%rsi
   1d088:	mov    %rdi,%r15
   1d08b:	mov    %rax,%rdi
   1d08e:	callq  1b280 <png_crc_finish>
   1d093:	mov    %r15,%rdi
   1d096:	lea    0x11827(%rip),%rsi        # 2e8c4 <png_pass_inc.20+0x51>
   1d09d:	callq  5230 <png_chunk_benign_error@plt>
   1d0a2:	mov    -0x10(%rbp),%r15
   1d0a6:	leaveq 
   1d0a7:	retq   
   1d0a8:	mov    0x8(%rsi),%eax
   1d0ab:	and    $0x20,%eax
   1d0ae:	test   %eax,%eax
   1d0b0:	je     1d017 <png_handle_bKGD+0x37>
   1d0b6:	mov    %rdi,%rax
   1d0b9:	mov    %r15,-0x10(%rbp)
   1d0bd:	mov    %rdx,%rsi
   1d0c0:	mov    %rdi,%r15
   1d0c3:	mov    %rax,%rdi
   1d0c6:	callq  1b280 <png_crc_finish>
   1d0cb:	mov    %r15,%rdi
   1d0ce:	lea    0x11811(%rip),%rsi        # 2e8e6 <png_pass_inc.20+0x73>
   1d0d5:	callq  5230 <png_chunk_benign_error@plt>
   1d0da:	mov    -0x10(%rbp),%r15
   1d0de:	leaveq 
   1d0df:	retq   
   1d0e0:	and    $0x2,%eax
   1d0e3:	test   %eax,%eax
   1d0e5:	jg     1d179 <png_handle_bKGD+0x199>
   1d0eb:	mov    $0x2,%eax
   1d0f0:	jmpq   1d02b <png_handle_bKGD+0x4b>
   1d0f5:	mov    %rdi,%rax
   1d0f8:	mov    %r15,-0x10(%rbp)
   1d0fc:	mov    %rdx,%rsi
   1d0ff:	mov    %rdi,%r15
   1d102:	mov    %rax,%rdi
   1d105:	callq  1b280 <png_crc_finish>
   1d10a:	mov    %r15,%rdi
   1d10d:	lea    0x117bd(%rip),%rsi        # 2e8d1 <png_pass_inc.20+0x5e>
   1d114:	callq  5230 <png_chunk_benign_error@plt>
   1d119:	mov    -0x10(%rbp),%r15
   1d11d:	leaveq 
   1d11e:	retq   
   1d11f:	movzbl 0x267(%r15),%eax
   1d127:	cmp    $0x3,%al
   1d129:	je     1d183 <png_handle_bKGD+0x1a3>
   1d12b:	and    $0x2,%eax
   1d12e:	test   %eax,%eax
   1d130:	je     1d1bd <png_handle_bKGD+0x1dd>
   1d136:	movb   $0x0,-0x1a(%rbp)
   1d13a:	movzbl -0x1f(%rbp),%ecx
   1d13e:	movzbl -0x20(%rbp),%eax
   1d142:	shl    $0x8,%eax
   1d145:	add    %ecx,%eax
   1d147:	mov    %ax,-0x18(%rbp)
   1d14b:	movzbl -0x1d(%rbp),%ecx
   1d14f:	movzbl -0x1e(%rbp),%eax
   1d153:	shl    $0x8,%eax
   1d156:	add    %ecx,%eax
   1d158:	mov    %ax,-0x16(%rbp)
   1d15c:	movzbl -0x1b(%rbp),%ecx
   1d160:	movzbl -0x1c(%rbp),%eax
   1d164:	shl    $0x8,%eax
   1d167:	add    %ecx,%eax
   1d169:	mov    %ax,-0x14(%rbp)
   1d16d:	movw   $0x0,-0x12(%rbp)
   1d173:	mov    -0x10(%rbp),%rsi
   1d177:	jmp    1d1ab <png_handle_bKGD+0x1cb>
   1d179:	mov    $0x6,%eax
   1d17e:	jmpq   1d02b <png_handle_bKGD+0x4b>
   1d183:	mov    -0x10(%rbp),%rsi
   1d187:	test   %rsi,%rsi
   1d18a:	movzbl -0x20(%rbp),%ecx
   1d18e:	mov    %cl,-0x1a(%rbp)
   1d191:	jne    1d1e4 <png_handle_bKGD+0x204>
   1d193:	movw   $0x0,-0x14(%rbp)
   1d199:	movw   $0x0,-0x16(%rbp)
   1d19f:	movw   $0x0,-0x18(%rbp)
   1d1a5:	movw   $0x0,-0x12(%rbp)
   1d1ab:	mov    %r15,%rdi
   1d1ae:	lea    -0x1a(%rbp),%rdx
   1d1b2:	callq  5110 <png_set_bKGD@plt>
   1d1b7:	mov    -0x8(%rbp),%r15
   1d1bb:	leaveq 
   1d1bc:	retq   
   1d1bd:	movb   $0x0,-0x1a(%rbp)
   1d1c1:	movzbl -0x1f(%rbp),%ecx
   1d1c5:	movzbl -0x20(%rbp),%eax
   1d1c9:	shl    $0x8,%eax
   1d1cc:	add    %ecx,%eax
   1d1ce:	mov    %ax,-0x12(%rbp)
   1d1d2:	mov    %ax,-0x14(%rbp)
   1d1d6:	mov    %ax,-0x16(%rbp)
   1d1da:	mov    %ax,-0x18(%rbp)
   1d1de:	mov    -0x10(%rbp),%rsi
   1d1e2:	jmp    1d1ab <png_handle_bKGD+0x1cb>
   1d1e4:	movzwl 0x20(%rsi),%eax
   1d1e8:	test   %ax,%ax
   1d1eb:	je     1d193 <png_handle_bKGD+0x1b3>
   1d1ed:	cmp    %cx,%ax
   1d1f0:	jbe    1d22a <png_handle_bKGD+0x24a>
   1d1f2:	mov    0x250(%r15),%rax
   1d1f9:	lea    (%rcx,%rcx,2),%rcx
   1d1fd:	movzbl (%rax,%rcx,1),%eax
   1d201:	mov    %ax,-0x18(%rbp)
   1d205:	mov    0x250(%r15),%rax
   1d20c:	movzbl 0x1(%rax,%rcx,1),%eax
   1d211:	mov    %ax,-0x16(%rbp)
   1d215:	mov    0x250(%r15),%rax
   1d21c:	movzbl 0x2(%rax,%rcx,1),%eax
   1d221:	mov    %ax,-0x14(%rbp)
   1d225:	jmpq   1d1a5 <png_handle_bKGD+0x1c5>
   1d22a:	mov    %r15,%rdi
   1d22d:	lea    0x1170e(%rip),%rsi        # 2e942 <png_pass_inc.20+0xcf>
   1d234:	callq  5230 <png_chunk_benign_error@plt>
   1d239:	mov    -0x8(%rbp),%r15
   1d23d:	leaveq 
   1d23e:	retq   
   1d23f:	nop

000000000001d240 <png_handle_cHRM>:
   1d240:	push   %rbp
   1d241:	mov    %rsp,%rbp
   1d244:	sub    $0x60,%rsp
   1d248:	mov    0x12c(%rdi),%eax
   1d24e:	mov    %rax,%rcx
   1d251:	and    $0x1,%ecx
   1d254:	test   %ecx,%ecx
   1d256:	je     1d2a4 <png_handle_cHRM+0x64>
   1d258:	and    $0x6,%eax
   1d25b:	test   %eax,%eax
   1d25d:	jne    1d2b0 <png_handle_cHRM+0x70>
   1d25f:	cmp    $0x20,%edx
   1d262:	jne    1d2da <png_handle_cHRM+0x9a>
   1d264:	lea    -0x58(%rbp),%rax
   1d268:	mov    $0x20,%edx
   1d26d:	mov    %rdi,%rcx
   1d270:	mov    %r15,-0x10(%rbp)
   1d274:	mov    %rsi,-0x8(%rbp)
   1d278:	mov    %rax,%rsi
   1d27b:	mov    %rdi,%r15
   1d27e:	mov    %rcx,%rdi
   1d281:	callq  1b220 <png_crc_read>
   1d286:	xor    %eax,%eax
   1d288:	mov    %r15,%rdi
   1d28b:	mov    %rax,%rsi
   1d28e:	mov    %r15,-0x18(%rbp)
   1d292:	mov    %rax,%r15
   1d295:	callq  1b280 <png_crc_finish>
   1d29a:	test   %eax,%eax
   1d29c:	je     1d304 <png_handle_cHRM+0xc4>
   1d29e:	mov    -0x10(%rbp),%r15
   1d2a2:	leaveq 
   1d2a3:	retq   
   1d2a4:	lea    0x1162e(%rip),%rsi        # 2e8d9 <png_pass_inc.20+0x66>
   1d2ab:	callq  5060 <png_chunk_error@plt>
   1d2b0:	mov    %rdi,%rax
   1d2b3:	mov    %r15,-0x18(%rbp)
   1d2b7:	mov    %rdx,%rsi
   1d2ba:	mov    %rdi,%r15
   1d2bd:	mov    %rax,%rdi
   1d2c0:	callq  1b280 <png_crc_finish>
   1d2c5:	mov    %r15,%rdi
   1d2c8:	lea    0x115f5(%rip),%rsi        # 2e8c4 <png_pass_inc.20+0x51>
   1d2cf:	callq  5230 <png_chunk_benign_error@plt>
   1d2d4:	mov    -0x18(%rbp),%r15
   1d2d8:	leaveq 
   1d2d9:	retq   
   1d2da:	mov    %rdi,%rax
   1d2dd:	mov    %r15,-0x18(%rbp)
   1d2e1:	mov    %rdx,%rsi
   1d2e4:	mov    %rdi,%r15
   1d2e7:	mov    %rax,%rdi
   1d2ea:	callq  1b280 <png_crc_finish>
   1d2ef:	mov    %r15,%rdi
   1d2f2:	lea    0x115d8(%rip),%rsi        # 2e8d1 <png_pass_inc.20+0x5e>
   1d2f9:	callq  5230 <png_chunk_benign_error@plt>
   1d2fe:	mov    -0x18(%rbp),%r15
   1d302:	leaveq 
   1d303:	retq   
   1d304:	mov    %r15,%rdi
   1d307:	lea    -0x58(%rbp),%rsi
   1d30b:	callq  20060 <png_get_fixed_point>
   1d310:	mov    %eax,-0x20(%rbp)
   1d313:	lea    -0x54(%rbp),%rsi
   1d317:	mov    %r15,%rdi
   1d31a:	callq  20060 <png_get_fixed_point>
   1d31f:	mov    %eax,-0x1c(%rbp)
   1d322:	lea    -0x50(%rbp),%rsi
   1d326:	mov    %r15,%rdi
   1d329:	callq  20060 <png_get_fixed_point>
   1d32e:	mov    %eax,-0x38(%rbp)
   1d331:	lea    -0x4c(%rbp),%rsi
   1d335:	mov    %r15,%rdi
   1d338:	callq  20060 <png_get_fixed_point>
   1d33d:	mov    %eax,-0x34(%rbp)
   1d340:	lea    -0x48(%rbp),%rsi
   1d344:	mov    %r15,%rdi
   1d347:	callq  20060 <png_get_fixed_point>
   1d34c:	mov    %eax,-0x30(%rbp)
   1d34f:	lea    -0x44(%rbp),%rsi
   1d353:	mov    %r15,%rdi
   1d356:	callq  20060 <png_get_fixed_point>
   1d35b:	mov    %eax,-0x2c(%rbp)
   1d35e:	lea    -0x40(%rbp),%rsi
   1d362:	mov    %r15,%rdi
   1d365:	callq  20060 <png_get_fixed_point>
   1d36a:	mov    %eax,-0x28(%rbp)
   1d36d:	mov    %r15,%rdi
   1d370:	lea    -0x3c(%rbp),%rsi
   1d374:	callq  20060 <png_get_fixed_point>
   1d379:	mov    %eax,-0x24(%rbp)
   1d37c:	movslq -0x20(%rbp),%rcx
   1d380:	cmp    $0xffffffff,%ecx
   1d383:	je     1d3df <png_handle_cHRM+0x19f>
   1d385:	movslq -0x1c(%rbp),%rcx
   1d389:	cmp    $0xffffffff,%ecx
   1d38c:	je     1d3df <png_handle_cHRM+0x19f>
   1d38e:	movslq -0x38(%rbp),%rcx
   1d392:	cmp    $0xffffffff,%ecx
   1d395:	je     1d3df <png_handle_cHRM+0x19f>
   1d397:	movslq -0x34(%rbp),%rcx
   1d39b:	cmp    $0xffffffff,%ecx
   1d39e:	je     1d3df <png_handle_cHRM+0x19f>
   1d3a0:	movslq -0x30(%rbp),%rcx
   1d3a4:	cmp    $0xffffffff,%ecx
   1d3a7:	je     1d3df <png_handle_cHRM+0x19f>
   1d3a9:	movslq -0x2c(%rbp),%rcx
   1d3ad:	cmp    $0xffffffff,%ecx
   1d3b0:	je     1d3df <png_handle_cHRM+0x19f>
   1d3b2:	movslq -0x28(%rbp),%rcx
   1d3b6:	cmp    $0xffffffff,%ecx
   1d3b9:	je     1d3df <png_handle_cHRM+0x19f>
   1d3bb:	cmp    $0xffffffff,%eax
   1d3be:	je     1d3df <png_handle_cHRM+0x19f>
   1d3c0:	mov    -0x18(%rbp),%r15
   1d3c4:	movzwl 0x4e2(%r15),%eax
   1d3cc:	mov    %rax,%rcx
   1d3cf:	and    $0x8000,%ecx
   1d3d5:	test   %ecx,%ecx
   1d3d7:	jle    1d3f5 <png_handle_cHRM+0x1b5>
   1d3d9:	mov    -0x10(%rbp),%r15
   1d3dd:	leaveq 
   1d3de:	retq   
   1d3df:	lea    0x1156a(%rip),%rsi        # 2e950 <png_pass_inc.20+0xdd>
   1d3e6:	mov    -0x18(%rbp),%rdi
   1d3ea:	callq  5230 <png_chunk_benign_error@plt>
   1d3ef:	mov    -0x10(%rbp),%r15
   1d3f3:	leaveq 
   1d3f4:	retq   
   1d3f5:	mov    %rax,%rcx
   1d3f8:	and    $0x10,%ecx
   1d3fb:	test   %ecx,%ecx
   1d3fd:	jg     1d435 <png_handle_cHRM+0x1f5>
   1d3ff:	or     $0x10,%ax
   1d403:	mov    %ax,0x4e2(%r15)
   1d40b:	lea    0x498(%r15),%rsi
   1d412:	lea    -0x38(%rbp),%rdx
   1d416:	mov    $0x1,%ecx
   1d41b:	mov    %r15,%rdi
   1d41e:	callq  7070 <png_colorspace_set_chromaticities>
   1d423:	mov    %r15,%rdi
   1d426:	mov    -0x8(%rbp),%rsi
   1d42a:	callq  7020 <png_colorspace_sync>
   1d42f:	mov    -0x10(%rbp),%r15
   1d433:	leaveq 
   1d434:	retq   
   1d435:	or     $0x8000,%ax
   1d439:	mov    %ax,0x4e2(%r15)
   1d441:	mov    %r15,%rdi
   1d444:	mov    -0x8(%rbp),%rsi
   1d448:	callq  7020 <png_colorspace_sync>
   1d44d:	mov    %r15,%rdi
   1d450:	lea    0x1148f(%rip),%rsi        # 2e8e6 <png_pass_inc.20+0x73>
   1d457:	callq  5230 <png_chunk_benign_error@plt>
   1d45c:	mov    -0x10(%rbp),%r15
   1d460:	leaveq 
   1d461:	retq   
   1d462:	data16 nopw %cs:0x0(%rax,%rax,1)
   1d46d:	nopl   (%rax)

000000000001d470 <png_handle_eXIf>:
   1d470:	push   %rbp
   1d471:	mov    %rsp,%rbp
   1d474:	sub    $0x30,%rsp
   1d478:	mov    0x12c(%rdi),%eax
   1d47e:	and    $0x1,%eax
   1d481:	test   %eax,%eax
   1d483:	je     1d50e <png_handle_eXIf+0x9e>
   1d489:	cmp    $0x1,%edx
   1d48c:	jbe    1d51a <png_handle_eXIf+0xaa>
   1d492:	test   %rsi,%rsi
   1d495:	je     1d544 <png_handle_eXIf+0xd4>
   1d49b:	mov    0x8(%rsi),%eax
   1d49e:	and    $0x10000,%eax
   1d4a3:	test   %eax,%eax
   1d4a5:	jne    1d544 <png_handle_eXIf+0xd4>
   1d4ab:	mov    0x12c(%rsi),%eax
   1d4b1:	or     $0x8000,%eax
   1d4b6:	mov    %eax,0x12c(%rsi)
   1d4bc:	mov    %edx,%ecx
   1d4be:	mov    %rdi,%rax
   1d4c1:	mov    %r13,-0x18(%rbp)
   1d4c5:	mov    %r14,-0x20(%rbp)
   1d4c9:	mov    %r15,-0x28(%rbp)
   1d4cd:	mov    %rdx,%r13
   1d4d0:	mov    %rsi,%r14
   1d4d3:	mov    %rcx,%rsi
   1d4d6:	mov    %rbx,%r15
   1d4d9:	mov    %rdi,%rbx
   1d4dc:	mov    %rax,%rdi
   1d4df:	callq  5150 <png_malloc_warn@plt>
   1d4e4:	mov    %rax,0xf8(%r14)
   1d4eb:	test   %rax,%rax
   1d4ee:	je     1d56e <png_handle_eXIf+0xfe>
   1d4f0:	lea    -0x29(%rbp),%rax
   1d4f4:	mov    $0x1,%edx
   1d4f9:	xor    %ecx,%ecx
   1d4fb:	mov    %r15,-0x8(%rbp)
   1d4ff:	mov    %r12,-0x10(%rbp)
   1d503:	mov    %rcx,%r12
   1d506:	mov    %rax,%r15
   1d509:	jmpq   1d5c4 <png_handle_eXIf+0x154>
   1d50e:	lea    0x113c4(%rip),%rsi        # 2e8d9 <png_pass_inc.20+0x66>
   1d515:	callq  5060 <png_chunk_error@plt>
   1d51a:	mov    %rdi,%rax
   1d51d:	mov    %r15,-0x28(%rbp)
   1d521:	mov    %rdx,%rsi
   1d524:	mov    %rdi,%r15
   1d527:	mov    %rax,%rdi
   1d52a:	callq  1b280 <png_crc_finish>
   1d52f:	mov    %r15,%rdi
   1d532:	lea    0x11426(%rip),%rsi        # 2e95f <png_pass_inc.20+0xec>
   1d539:	callq  5230 <png_chunk_benign_error@plt>
   1d53e:	mov    -0x28(%rbp),%r15
   1d542:	leaveq 
   1d543:	retq   
   1d544:	mov    %rdi,%rax
   1d547:	mov    %r15,-0x28(%rbp)
   1d54b:	mov    %rdx,%rsi
   1d54e:	mov    %rdi,%r15
   1d551:	mov    %rax,%rdi
   1d554:	callq  1b280 <png_crc_finish>
   1d559:	mov    %r15,%rdi
   1d55c:	lea    0x11383(%rip),%rsi        # 2e8e6 <png_pass_inc.20+0x73>
   1d563:	callq  5230 <png_chunk_benign_error@plt>
   1d568:	mov    -0x28(%rbp),%r15
   1d56c:	leaveq 
   1d56d:	retq   
   1d56e:	mov    %r13,%rsi
   1d571:	mov    %rbx,%rdi
   1d574:	callq  1b280 <png_crc_finish>
   1d579:	mov    %rbx,%rdi
   1d57c:	lea    0x113e6(%rip),%rsi        # 2e969 <png_pass_inc.20+0xf6>
   1d583:	callq  5230 <png_chunk_benign_error@plt>
   1d588:	mov    %r15,%rbx
   1d58b:	mov    -0x28(%rbp),%r15
   1d58f:	mov    -0x20(%rbp),%r14
   1d593:	mov    -0x18(%rbp),%r13
   1d597:	leaveq 
   1d598:	retq   
   1d599:	mov    %rbx,%rdi
   1d59c:	mov    %r15,%rsi
   1d59f:	callq  1b220 <png_crc_read>
   1d5a4:	movzbl -0x29(%rbp),%edx
   1d5a8:	mov    0xf8(%r14),%rcx
   1d5af:	mov    %r12d,%eax
   1d5b2:	mov    %dl,(%rcx,%rax,1)
   1d5b5:	cmp    $0x1,%r12d
   1d5b9:	je     1d5ed <png_handle_eXIf+0x17d>
   1d5bb:	add    $0x1,%r12d
   1d5bf:	mov    $0x1,%edx
   1d5c4:	cmp    %r12d,%r13d
   1d5c7:	ja     1d599 <png_handle_eXIf+0x129>
   1d5c9:	mov    %rbx,%rdi
   1d5cc:	xor    %esi,%esi
   1d5ce:	callq  1b280 <png_crc_finish>
   1d5d3:	test   %eax,%eax
   1d5d5:	je     1d653 <png_handle_eXIf+0x1e3>
   1d5d7:	mov    -0x10(%rbp),%r12
   1d5db:	mov    -0x8(%rbp),%rbx
   1d5df:	mov    -0x28(%rbp),%r15
   1d5e3:	mov    -0x20(%rbp),%r14
   1d5e7:	mov    -0x18(%rbp),%r13
   1d5eb:	leaveq 
   1d5ec:	retq   
   1d5ed:	movzbl -0x29(%rbp),%ecx
   1d5f1:	cmp    $0x4d,%cl
   1d5f4:	je     1d5bb <png_handle_eXIf+0x14b>
   1d5f6:	cmp    $0x49,%cl
   1d5f9:	je     1d5bb <png_handle_eXIf+0x14b>
   1d5fb:	mov    0xf8(%r14),%rax
   1d602:	movzbl (%rax),%eax
   1d605:	cmp    %al,%cl
   1d607:	je     1d5bb <png_handle_eXIf+0x14b>
   1d609:	mov    %r13,%rsi
   1d60c:	mov    %rbx,%rdi
   1d60f:	callq  1b280 <png_crc_finish>
   1d614:	lea    0x1135c(%rip),%rsi        # 2e977 <png_pass_inc.20+0x104>
   1d61b:	mov    %rbx,%rdi
   1d61e:	callq  5230 <png_chunk_benign_error@plt>
   1d623:	mov    %rbx,%rdi
   1d626:	mov    0xf8(%r14),%rsi
   1d62d:	callq  5790 <png_free@plt>
   1d632:	movq   $0x0,0xf8(%r14)
   1d63d:	mov    -0x10(%rbp),%r12
   1d641:	mov    -0x8(%rbp),%rbx
   1d645:	mov    -0x28(%rbp),%r15
   1d649:	mov    -0x20(%rbp),%r14
   1d64d:	mov    -0x18(%rbp),%r13
   1d651:	leaveq 
   1d652:	retq   
   1d653:	mov    %r13,%rdx
   1d656:	mov    0xf8(%r14),%rcx
   1d65d:	mov    %rbx,%rdi
   1d660:	mov    %r14,%rsi
   1d663:	callq  5430 <png_set_eXIf_1@plt>
   1d668:	mov    %rbx,%rdi
   1d66b:	mov    0xf8(%r14),%rsi
   1d672:	callq  5790 <png_free@plt>
   1d677:	movq   $0x0,0xf8(%r14)
   1d682:	mov    -0x10(%rbp),%r12
   1d686:	mov    -0x8(%rbp),%rbx
   1d68a:	mov    -0x28(%rbp),%r15
   1d68e:	mov    -0x20(%rbp),%r14
   1d692:	mov    -0x18(%rbp),%r13
   1d696:	leaveq 
   1d697:	retq   
   1d698:	nopl   0x0(%rax,%rax,1)

000000000001d6a0 <png_handle_gAMA>:
   1d6a0:	push   %rbp
   1d6a1:	mov    %rsp,%rbp
   1d6a4:	sub    $0x20,%rsp
   1d6a8:	mov    0x12c(%rdi),%eax
   1d6ae:	mov    %rax,%rcx
   1d6b1:	and    $0x1,%ecx
   1d6b4:	test   %ecx,%ecx
   1d6b6:	je     1d6fa <png_handle_gAMA+0x5a>
   1d6b8:	and    $0x6,%eax
   1d6bb:	test   %eax,%eax
   1d6bd:	jne    1d706 <png_handle_gAMA+0x66>
   1d6bf:	cmp    $0x4,%edx
   1d6c2:	jne    1d730 <png_handle_gAMA+0x90>
   1d6c4:	lea    -0x14(%rbp),%rax
   1d6c8:	mov    $0x4,%edx
   1d6cd:	mov    %rdi,%rcx
   1d6d0:	mov    %r15,-0x10(%rbp)
   1d6d4:	mov    %rsi,-0x8(%rbp)
   1d6d8:	mov    %rax,%rsi
   1d6db:	mov    %rdi,%r15
   1d6de:	mov    %rcx,%rdi
   1d6e1:	callq  1b220 <png_crc_read>
   1d6e6:	xor    %esi,%esi
   1d6e8:	mov    %r15,%rdi
   1d6eb:	callq  1b280 <png_crc_finish>
   1d6f0:	test   %eax,%eax
   1d6f2:	je     1d75a <png_handle_gAMA+0xba>
   1d6f4:	mov    -0x10(%rbp),%r15
   1d6f8:	leaveq 
   1d6f9:	retq   
   1d6fa:	lea    0x111d8(%rip),%rsi        # 2e8d9 <png_pass_inc.20+0x66>
   1d701:	callq  5060 <png_chunk_error@plt>
   1d706:	mov    %rdi,%rax
   1d709:	mov    %r15,-0x10(%rbp)
   1d70d:	mov    %rdx,%rsi
   1d710:	mov    %rdi,%r15
   1d713:	mov    %rax,%rdi
   1d716:	callq  1b280 <png_crc_finish>
   1d71b:	mov    %r15,%rdi
   1d71e:	lea    0x1119f(%rip),%rsi        # 2e8c4 <png_pass_inc.20+0x51>
   1d725:	callq  5230 <png_chunk_benign_error@plt>
   1d72a:	mov    -0x10(%rbp),%r15
   1d72e:	leaveq 
   1d72f:	retq   
   1d730:	mov    %rdi,%rax
   1d733:	mov    %r15,-0x10(%rbp)
   1d737:	mov    %rdx,%rsi
   1d73a:	mov    %rdi,%r15
   1d73d:	mov    %rax,%rdi
   1d740:	callq  1b280 <png_crc_finish>
   1d745:	mov    %r15,%rdi
   1d748:	lea    0x11182(%rip),%rsi        # 2e8d1 <png_pass_inc.20+0x5e>
   1d74f:	callq  5230 <png_chunk_benign_error@plt>
   1d754:	mov    -0x10(%rbp),%r15
   1d758:	leaveq 
   1d759:	retq   
   1d75a:	xor    %edi,%edi
   1d75c:	lea    -0x14(%rbp),%rsi
   1d760:	callq  20060 <png_get_fixed_point>
   1d765:	mov    %rax,%rdx
   1d768:	lea    0x498(%r15),%rsi
   1d76f:	mov    %r15,%rdi
   1d772:	callq  6ed0 <png_colorspace_set_gamma>
   1d777:	mov    %r15,%rdi
   1d77a:	mov    -0x8(%rbp),%rsi
   1d77e:	callq  7020 <png_colorspace_sync>
   1d783:	mov    -0x10(%rbp),%r15
   1d787:	leaveq 
   1d788:	retq   
   1d789:	nopl   0x0(%rax)

000000000001d790 <png_handle_hIST>:
   1d790:	push   %rbp
   1d791:	mov    %rsp,%rbp
   1d794:	sub    $0x240,%rsp
   1d79b:	mov    0x12c(%rdi),%eax
   1d7a1:	mov    %rax,%rcx
   1d7a4:	and    $0x1,%ecx
   1d7a7:	test   %ecx,%ecx
   1d7a9:	je     1d81a <png_handle_hIST+0x8a>
   1d7ab:	mov    %rax,%rcx
   1d7ae:	and    $0x4,%ecx
   1d7b1:	test   %ecx,%ecx
   1d7b3:	jne    1d826 <png_handle_hIST+0x96>
   1d7b5:	and    $0x2,%eax
   1d7b8:	test   %eax,%eax
   1d7ba:	je     1d826 <png_handle_hIST+0x96>
   1d7bc:	test   %rsi,%rsi
   1d7bf:	jne    1d850 <png_handle_hIST+0xc0>
   1d7c5:	mov    %rdx,%rcx
   1d7c8:	shr    %ecx
   1d7ca:	movzwl 0x258(%rdi),%eax
   1d7d1:	cmp    %ecx,%eax
   1d7d3:	jne    1d888 <png_handle_hIST+0xf8>
   1d7d9:	cmp    $0x100,%ecx
   1d7df:	ja     1d888 <png_handle_hIST+0xf8>
   1d7e5:	xor    %r8d,%r8d
   1d7e8:	lea    -0x32(%rbp),%rdx
   1d7ec:	mov    $0x2,%eax
   1d7f1:	mov    %r15,-0x30(%rbp)
   1d7f5:	mov    %rsi,-0x8(%rbp)
   1d7f9:	mov    %rbx,-0x10(%rbp)
   1d7fd:	mov    %r12,-0x18(%rbp)
   1d801:	mov    %r13,-0x20(%rbp)
   1d805:	mov    %r14,-0x28(%rbp)
   1d809:	mov    %r8,%rbx
   1d80c:	mov    %rcx,%r12
   1d80f:	mov    %rax,%r13
   1d812:	mov    %rdx,%r14
   1d815:	jmpq   1d8dd <png_handle_hIST+0x14d>
   1d81a:	lea    0x110b8(%rip),%rsi        # 2e8d9 <png_pass_inc.20+0x66>
   1d821:	callq  5060 <png_chunk_error@plt>
   1d826:	mov    %rdi,%rax
   1d829:	mov    %r15,-0x30(%rbp)
   1d82d:	mov    %rdx,%rsi
   1d830:	mov    %rdi,%r15
   1d833:	mov    %rax,%rdi
   1d836:	callq  1b280 <png_crc_finish>
   1d83b:	mov    %r15,%rdi
   1d83e:	lea    0x1107f(%rip),%rsi        # 2e8c4 <png_pass_inc.20+0x51>
   1d845:	callq  5230 <png_chunk_benign_error@plt>
   1d84a:	mov    -0x30(%rbp),%r15
   1d84e:	leaveq 
   1d84f:	retq   
   1d850:	mov    0x8(%rsi),%eax
   1d853:	and    $0x40,%eax
   1d856:	test   %eax,%eax
   1d858:	je     1d7c5 <png_handle_hIST+0x35>
   1d85e:	mov    %rdi,%rax
   1d861:	mov    %r15,-0x30(%rbp)
   1d865:	mov    %rdx,%rsi
   1d868:	mov    %rdi,%r15
   1d86b:	mov    %rax,%rdi
   1d86e:	callq  1b280 <png_crc_finish>
   1d873:	mov    %r15,%rdi
   1d876:	lea    0x11069(%rip),%rsi        # 2e8e6 <png_pass_inc.20+0x73>
   1d87d:	callq  5230 <png_chunk_benign_error@plt>
   1d882:	mov    -0x30(%rbp),%r15
   1d886:	leaveq 
   1d887:	retq   
   1d888:	mov    %rdi,%rax
   1d88b:	mov    %r15,-0x30(%rbp)
   1d88f:	mov    %rdx,%rsi
   1d892:	mov    %rdi,%r15
   1d895:	mov    %rax,%rdi
   1d898:	callq  1b280 <png_crc_finish>
   1d89d:	mov    %r15,%rdi
   1d8a0:	lea    0x1102a(%rip),%rsi        # 2e8d1 <png_pass_inc.20+0x5e>
   1d8a7:	callq  5230 <png_chunk_benign_error@plt>
   1d8ac:	mov    -0x30(%rbp),%r15
   1d8b0:	leaveq 
   1d8b1:	retq   
   1d8b2:	mov    %rdi,%r15
   1d8b5:	mov    %r14,%rsi
   1d8b8:	mov    %r13,%rdx
   1d8bb:	callq  1b220 <png_crc_read>
   1d8c0:	movzbl -0x31(%rbp),%ecx
   1d8c4:	movzbl -0x32(%rbp),%eax
   1d8c8:	shl    $0x8,%eax
   1d8cb:	add    %eax,%ecx
   1d8cd:	mov    %ebx,%eax
   1d8cf:	mov    %cx,-0x232(%rbp,%rax,2)
   1d8d7:	add    $0x1,%ebx
   1d8da:	mov    %r15,%rdi
   1d8dd:	cmp    %r12d,%ebx
   1d8e0:	jb     1d8b2 <png_handle_hIST+0x122>
   1d8e2:	mov    %rdi,%rbx
   1d8e5:	xor    %esi,%esi
   1d8e7:	callq  1b280 <png_crc_finish>
   1d8ec:	test   %eax,%eax
   1d8ee:	je     1d906 <png_handle_hIST+0x176>
   1d8f0:	mov    -0x28(%rbp),%r14
   1d8f4:	mov    -0x20(%rbp),%r13
   1d8f8:	mov    -0x18(%rbp),%r12
   1d8fc:	mov    -0x10(%rbp),%rbx
   1d900:	mov    -0x30(%rbp),%r15
   1d904:	leaveq 
   1d905:	retq   
   1d906:	mov    %rbx,%rdi
   1d909:	lea    -0x232(%rbp),%rdx
   1d910:	mov    -0x8(%rbp),%rsi
   1d914:	callq  5190 <png_set_hIST@plt>
   1d919:	mov    -0x28(%rbp),%r14
   1d91d:	mov    -0x20(%rbp),%r13
   1d921:	mov    -0x18(%rbp),%r12
   1d925:	mov    -0x10(%rbp),%rbx
   1d929:	mov    -0x30(%rbp),%r15
   1d92d:	leaveq 
   1d92e:	retq   
   1d92f:	nop

000000000001d930 <png_handle_iCCP>:
   1d930:	push   %rbp
   1d931:	mov    %rsp,%rbp
   1d934:	sub    $0x550,%rsp
   1d93b:	mov    %edx,-0x54c(%rbp)
   1d941:	mov    0x12c(%rdi),%eax
   1d947:	mov    %rax,%rcx
   1d94a:	and    $0x1,%ecx
   1d94d:	test   %ecx,%ecx
   1d94f:	je     1da1a <png_handle_iCCP+0xea>
   1d955:	and    $0x6,%eax
   1d958:	test   %eax,%eax
   1d95a:	jne    1da26 <png_handle_iCCP+0xf6>
   1d960:	mov    -0x54c(%rbp),%eax
   1d966:	cmp    $0xd,%eax
   1d969:	jbe    1da53 <png_handle_iCCP+0x123>
   1d96f:	movzwl 0x4e2(%rdi),%ecx
   1d976:	mov    %rcx,%rdx
   1d979:	and    $0x8000,%edx
   1d97f:	test   %edx,%edx
   1d981:	jg     1da7d <png_handle_iCCP+0x14d>
   1d987:	xor    %r8d,%r8d
   1d98a:	mov    %r8,-0x38(%rbp)
   1d98e:	and    $0x4,%ecx
   1d991:	test   %ecx,%ecx
   1d993:	je     1da87 <png_handle_iCCP+0x157>
   1d999:	lea    0x110b3(%rip),%rcx        # 2ea53 <png_pass_inc.20+0x1e0>
   1d9a0:	test   %r8d,%r8d
   1d9a3:	jne    1d9e3 <png_handle_iCCP+0xb3>
   1d9a5:	mov    -0x54c(%rbp),%edx
   1d9ab:	mov    %rdi,%rax
   1d9ae:	mov    %r14,-0x60(%rbp)
   1d9b2:	mov    %r15,-0x68(%rbp)
   1d9b6:	mov    %r13,-0x58(%rbp)
   1d9ba:	mov    %rdi,%r13
   1d9bd:	mov    %rax,%rdi
   1d9c0:	mov    %rcx,%r14
   1d9c3:	mov    %rsi,%r15
   1d9c6:	mov    %rdx,%rsi
   1d9c9:	callq  1b280 <png_crc_finish>
   1d9ce:	mov    %r14,%rcx
   1d9d1:	mov    %r15,%rsi
   1d9d4:	mov    %r13,%rdi
   1d9d7:	mov    -0x58(%rbp),%r13
   1d9db:	mov    -0x68(%rbp),%r15
   1d9df:	mov    -0x60(%rbp),%r14
   1d9e3:	movzwl 0x4e2(%rdi),%eax
   1d9ea:	or     $0x8000,%ax
   1d9ee:	mov    %ax,0x4e2(%rdi)
   1d9f5:	mov    %rdi,%rax
   1d9f8:	mov    %r15,-0x68(%rbp)
   1d9fc:	mov    %rdi,-0x50(%rbp)
   1da00:	mov    %rax,%rdi
   1da03:	mov    %rcx,%r15
   1da06:	callq  7020 <png_colorspace_sync>
   1da0b:	test   %r15,%r15
   1da0e:	jne    1dad3 <png_handle_iCCP+0x1a3>
   1da14:	mov    -0x68(%rbp),%r15
   1da18:	leaveq 
   1da19:	retq   
   1da1a:	lea    0x10eb8(%rip),%rsi        # 2e8d9 <png_pass_inc.20+0x66>
   1da21:	callq  5060 <png_chunk_error@plt>
   1da26:	mov    -0x54c(%rbp),%esi
   1da2c:	mov    %rdi,%rax
   1da2f:	mov    %r15,-0x68(%rbp)
   1da33:	mov    %rdi,%r15
   1da36:	mov    %rax,%rdi
   1da39:	callq  1b280 <png_crc_finish>
   1da3e:	mov    %r15,%rdi
   1da41:	lea    0x10e7c(%rip),%rsi        # 2e8c4 <png_pass_inc.20+0x51>
   1da48:	callq  5230 <png_chunk_benign_error@plt>
   1da4d:	mov    -0x68(%rbp),%r15
   1da51:	leaveq 
   1da52:	retq   
   1da53:	mov    %rdi,%rcx
   1da56:	mov    %r15,-0x68(%rbp)
   1da5a:	mov    %rax,%rsi
   1da5d:	mov    %rdi,%r15
   1da60:	mov    %rcx,%rdi
   1da63:	callq  1b280 <png_crc_finish>
   1da68:	mov    %r15,%rdi
   1da6b:	lea    0x10eed(%rip),%rsi        # 2e95f <png_pass_inc.20+0xec>
   1da72:	callq  5230 <png_chunk_benign_error@plt>
   1da77:	mov    -0x68(%rbp),%r15
   1da7b:	leaveq 
   1da7c:	retq   
   1da7d:	mov    %rax,%rsi
   1da80:	callq  1b280 <png_crc_finish>
   1da85:	leaveq 
   1da86:	retq   
   1da87:	cmp    $0x50,%eax
   1da8a:	jbe    1da91 <png_handle_iCCP+0x161>
   1da8c:	mov    $0x51,%eax
   1da91:	lea    -0x545(%rbp),%rcx
   1da98:	mov    %rdi,%r8
   1da9b:	mov    %rax,%rdx
   1da9e:	mov    %r14,-0x20(%rbp)
   1daa2:	mov    %r15,-0x28(%rbp)
   1daa6:	mov    %rsi,-0x48(%rbp)
   1daaa:	mov    %rcx,%rsi
   1daad:	mov    %rax,%r14
   1dab0:	mov    %rdi,%r15
   1dab3:	mov    %r8,%rdi
   1dab6:	callq  1b220 <png_crc_read>
   1dabb:	mov    -0x54c(%rbp),%esi
   1dac1:	sub    %r14d,%esi
   1dac4:	mov    %esi,-0x54c(%rbp)
   1daca:	cmp    $0xa,%esi
   1dacd:	jbe    1dae5 <png_handle_iCCP+0x1b5>
   1dacf:	xor    %eax,%eax
   1dad1:	jmp    1db1d <png_handle_iCCP+0x1ed>
   1dad3:	mov    %r15,%rsi
   1dad6:	mov    -0x50(%rbp),%rdi
   1dada:	callq  5230 <png_chunk_benign_error@plt>
   1dadf:	mov    -0x68(%rbp),%r15
   1dae3:	leaveq 
   1dae4:	retq   
   1dae5:	mov    %r15,%rdi
   1dae8:	callq  1b280 <png_crc_finish>
   1daed:	mov    %r15,%rdi
   1daf0:	lea    0x10e68(%rip),%rsi        # 2e95f <png_pass_inc.20+0xec>
   1daf7:	callq  5230 <png_chunk_benign_error@plt>
   1dafc:	mov    -0x28(%rbp),%r15
   1db00:	mov    -0x20(%rbp),%r14
   1db04:	leaveq 
   1db05:	retq   
   1db06:	cmp    %eax,%r14d
   1db09:	jbe    1db22 <png_handle_iCCP+0x1f2>
   1db0b:	mov    %eax,%ecx
   1db0d:	movsbq -0x545(%rbp,%rcx,1),%rcx
   1db16:	test   %cl,%cl
   1db18:	je     1db22 <png_handle_iCCP+0x1f2>
   1db1a:	add    $0x1,%eax
   1db1d:	cmp    $0x4f,%eax
   1db20:	jbe    1db06 <png_handle_iCCP+0x1d6>
   1db22:	lea    0x10f1e(%rip),%rcx        # 2ea47 <png_pass_inc.20+0x1d4>
   1db29:	test   %eax,%eax
   1db2b:	jne    1db44 <png_handle_iCCP+0x214>
   1db2d:	mov    %r15,%rdi
   1db30:	mov    -0x48(%rbp),%rsi
   1db34:	xor    %r8d,%r8d
   1db37:	mov    -0x28(%rbp),%r15
   1db3b:	mov    -0x20(%rbp),%r14
   1db3f:	jmpq   1d9a0 <png_handle_iCCP+0x70>
   1db44:	cmp    $0x4f,%eax
   1db47:	jbe    1db60 <png_handle_iCCP+0x230>
   1db49:	mov    %r15,%rdi
   1db4c:	mov    -0x48(%rbp),%rsi
   1db50:	xor    %r8d,%r8d
   1db53:	mov    -0x28(%rbp),%r15
   1db57:	mov    -0x20(%rbp),%r14
   1db5b:	jmpq   1d9a0 <png_handle_iCCP+0x70>
   1db60:	lea    0x10ec9(%rip),%rcx        # 2ea30 <png_pass_inc.20+0x1bd>
   1db67:	lea    0x1(%rax),%r8d
   1db6b:	cmp    %r8d,%r14d
   1db6e:	ja     1db87 <png_handle_iCCP+0x257>
   1db70:	mov    %r15,%rdi
   1db73:	mov    -0x48(%rbp),%rsi
   1db77:	xor    %r8d,%r8d
   1db7a:	mov    -0x28(%rbp),%r15
   1db7e:	mov    -0x20(%rbp),%r14
   1db82:	jmpq   1d9a0 <png_handle_iCCP+0x70>
   1db87:	mov    %r8d,%edx
   1db8a:	movsbq -0x545(%rbp,%rdx,1),%rdx
   1db93:	test   %dl,%dl
   1db95:	je     1dbae <png_handle_iCCP+0x27e>
   1db97:	mov    %r15,%rdi
   1db9a:	mov    -0x48(%rbp),%rsi
   1db9e:	xor    %r8d,%r8d
   1dba1:	mov    -0x28(%rbp),%r15
   1dba5:	mov    -0x20(%rbp),%r14
   1dba9:	jmpq   1d9a0 <png_handle_iCCP+0x70>
   1dbae:	mov    $0x69434350,%esi
   1dbb3:	mov    %r15,%rdi
   1dbb6:	mov    %r13,-0x18(%rbp)
   1dbba:	mov    %r8,-0x40(%rbp)
   1dbbe:	mov    %rax,%r13
   1dbc1:	callq  201c0 <png_inflate_claim>
   1dbc6:	test   %eax,%eax
   1dbc8:	je     1dbec <png_handle_iCCP+0x2bc>
   1dbca:	mov    %r15,%rdi
   1dbcd:	mov    0x170(%rdi),%rcx
   1dbd4:	mov    -0x18(%rbp),%r13
   1dbd8:	mov    -0x48(%rbp),%rsi
   1dbdc:	xor    %r8d,%r8d
   1dbdf:	mov    -0x28(%rbp),%r15
   1dbe3:	mov    -0x20(%rbp),%r14
   1dbe7:	jmpq   1d9a0 <png_handle_iCCP+0x70>
   1dbec:	lea    -0x4f4(%rbp),%rdi
   1dbf3:	lea    0x10d9c(%rip),%rsi        # 2e996 <png_pass_inc.20+0x123>
   1dbfa:	mov    $0x84,%edx
   1dbff:	callq  54c0 <memcpy@plt>
   1dc04:	movq   $0x84,-0x70(%rbp)
   1dc0c:	lea    0x2(%r13),%ecx
   1dc10:	mov    %ecx,%eax
   1dc12:	lea    -0x545(%rbp,%rax,1),%rax
   1dc1a:	mov    %rax,0x140(%r15)
   1dc21:	sub    %ecx,%r14d
   1dc24:	mov    %r14d,0x148(%r15)
   1dc2b:	sub    $0x10,%rsp
   1dc2f:	movl   $0x0,(%rsp)
   1dc36:	lea    -0x470(%rbp),%rsi
   1dc3d:	mov    $0x400,%edx
   1dc42:	lea    -0x54c(%rbp),%rcx
   1dc49:	lea    -0x70(%rbp),%r9
   1dc4d:	mov    %r15,%rdi
   1dc50:	lea    -0x4f4(%rbp),%r8
   1dc57:	callq  207f0 <png_inflate_read>
   1dc5c:	add    $0x10,%rsp
   1dc60:	mov    -0x70(%rbp),%rax
   1dc64:	test   %rax,%rax
   1dc67:	je     1dc95 <png_handle_iCCP+0x365>
   1dc69:	mov    %r15,%rdi
   1dc6c:	mov    0x170(%rdi),%rcx
   1dc73:	mov    -0x48(%rbp),%rsi
   1dc77:	xor    %r8d,%r8d
   1dc7a:	movl   $0x0,0x138(%rdi)
   1dc84:	mov    -0x18(%rbp),%r13
   1dc88:	mov    -0x28(%rbp),%r15
   1dc8c:	mov    -0x20(%rbp),%r14
   1dc90:	jmpq   1d9a0 <png_handle_iCCP+0x70>
   1dc95:	movzbl -0x4f4(%rbp),%eax
   1dc9c:	shl    $0x18,%eax
   1dc9f:	movzbl -0x4f3(%rbp),%ecx
   1dca6:	shl    $0x10,%ecx
   1dca9:	add    %eax,%ecx
   1dcab:	movzbl -0x4f2(%rbp),%eax
   1dcb2:	shl    $0x8,%eax
   1dcb5:	add    %ecx,%eax
   1dcb7:	movzbl -0x4f1(%rbp),%ecx
   1dcbe:	lea    (%rcx,%rax,1),%r13d
   1dcc2:	lea    0x498(%r15),%r14
   1dcc9:	mov    %r15,%rdi
   1dccc:	mov    %r14,%rsi
   1dccf:	lea    -0x545(%rbp),%rdx
   1dcd6:	mov    %r13,%rcx
   1dcd9:	callq  74b0 <png_icc_check_length>
   1dcde:	test   %eax,%eax
   1dce0:	jne    1dcf1 <png_handle_iCCP+0x3c1>
   1dce2:	mov    %r15,%rdi
   1dce5:	mov    -0x48(%rbp),%rsi
   1dce9:	xor    %r8d,%r8d
   1dcec:	mov    %r8,%rcx
   1dcef:	jmp    1dc7a <png_handle_iCCP+0x34a>
   1dcf1:	movzbl 0x267(%r15),%r9d
   1dcf9:	mov    %r15,%rdi
   1dcfc:	mov    %r14,%rsi
   1dcff:	lea    -0x545(%rbp),%rdx
   1dd06:	mov    %r13,%rcx
   1dd09:	lea    -0x4f4(%rbp),%r8
   1dd10:	callq  7530 <png_icc_check_header>
   1dd15:	test   %eax,%eax
   1dd17:	jne    1dd2b <png_handle_iCCP+0x3fb>
   1dd19:	mov    %r15,%rdi
   1dd1c:	mov    -0x48(%rbp),%rsi
   1dd20:	xor    %r8d,%r8d
   1dd23:	mov    %r8,%rcx
   1dd26:	jmpq   1dc7a <png_handle_iCCP+0x34a>
   1dd2b:	movzbl -0x471(%rbp),%r10d
   1dd33:	movzbl -0x474(%rbp),%ecx
   1dd3a:	movzbl -0x473(%rbp),%r9d
   1dd42:	movzbl -0x472(%rbp),%r8d
   1dd4a:	lea    0x10c18(%rip),%rax        # 2e969 <png_pass_inc.20+0xf6>
   1dd51:	mov    %rax,-0x30(%rbp)
   1dd55:	mov    %r13d,%esi
   1dd58:	mov    %rsi,-0x50(%rbp)
   1dd5c:	mov    $0x2,%edx
   1dd61:	mov    %r15,%rdi
   1dd64:	mov    %rbx,-0x8(%rbp)
   1dd68:	mov    %r12,-0x10(%rbp)
   1dd6c:	mov    %r14,-0x58(%rbp)
   1dd70:	mov    %r13,-0x60(%rbp)
   1dd74:	mov    %r10,%rbx
   1dd77:	mov    %rcx,%r12
   1dd7a:	mov    %r8,%r13
   1dd7d:	mov    %r9,%r14
   1dd80:	callq  200b0 <png_read_buffer>
   1dd85:	test   %rax,%rax
   1dd88:	jne    1dda8 <png_handle_iCCP+0x478>
   1dd8a:	mov    %r15,%rdi
   1dd8d:	lea    0x10bd5(%rip),%rcx        # 2e969 <png_pass_inc.20+0xf6>
   1dd94:	mov    -0x10(%rbp),%r12
   1dd98:	mov    -0x8(%rbp),%rbx
   1dd9c:	mov    -0x48(%rbp),%rsi
   1dda0:	xor    %r8d,%r8d
   1dda3:	jmpq   1dc7a <png_handle_iCCP+0x34a>
   1dda8:	mov    %rax,%rdi
   1ddab:	mov    %r15,-0x68(%rbp)
   1ddaf:	mov    %rbx,%r15
   1ddb2:	mov    %rax,%rbx
   1ddb5:	mov    $0x84,%edx
   1ddba:	lea    -0x4f4(%rbp),%rsi
   1ddc1:	callq  54c0 <memcpy@plt>
   1ddc6:	sub    $0x10,%rsp
   1ddca:	shl    $0x18,%r12d
   1ddce:	shl    $0x10,%r14d
   1ddd2:	lea    (%r12,%r14,1),%eax
   1ddd6:	shl    $0x8,%r13d
   1ddda:	add    %r13d,%eax
   1dddd:	add    %r15d,%eax
   1dde0:	lea    (%rax,%rax,2),%r14d
   1dde4:	shl    $0x2,%r14d
   1dde8:	mov    %r14d,%r15d
   1ddeb:	mov    %r15,-0x70(%rbp)
   1ddef:	movl   $0x0,(%rsp)
   1ddf6:	lea    0x84(%rbx),%r8
   1ddfd:	mov    -0x68(%rbp),%r13
   1de01:	mov    %r13,%rdi
   1de04:	lea    -0x470(%rbp),%rsi
   1de0b:	mov    $0x400,%edx
   1de10:	lea    -0x54c(%rbp),%rcx
   1de17:	lea    -0x70(%rbp),%r9
   1de1b:	callq  207f0 <png_inflate_read>
   1de20:	add    $0x10,%rsp
   1de24:	mov    -0x70(%rbp),%rax
   1de28:	test   %rax,%rax
   1de2b:	je     1de4b <png_handle_iCCP+0x51b>
   1de2d:	mov    %r13,%rdi
   1de30:	mov    0x170(%rdi),%rcx
   1de37:	mov    -0x10(%rbp),%r12
   1de3b:	mov    -0x8(%rbp),%rbx
   1de3f:	mov    -0x48(%rbp),%rsi
   1de43:	xor    %r8d,%r8d
   1de46:	jmpq   1dc7a <png_handle_iCCP+0x34a>
   1de4b:	mov    %r13,%rdi
   1de4e:	mov    -0x58(%rbp),%r12
   1de52:	mov    %r12,%rsi
   1de55:	lea    -0x545(%rbp),%rdx
   1de5c:	mov    -0x60(%rbp),%rcx
   1de60:	mov    %rbx,%r8
   1de63:	callq  79d0 <png_icc_check_tag_table>
   1de68:	test   %eax,%eax
   1de6a:	jne    1de86 <png_handle_iCCP+0x556>
   1de6c:	mov    %r13,%rdi
   1de6f:	mov    -0x10(%rbp),%r12
   1de73:	mov    -0x8(%rbp),%rbx
   1de77:	mov    -0x48(%rbp),%rsi
   1de7b:	xor    %r8d,%r8d
   1de7e:	mov    %r8,%rcx
   1de81:	jmpq   1dc7a <png_handle_iCCP+0x34a>
   1de86:	sub    $0x10,%rsp
   1de8a:	mov    -0x50(%rbp),%rax
   1de8e:	add    $0xffffffffffffff7c,%rax
   1de94:	sub    %r15,%rax
   1de97:	mov    %rax,-0x70(%rbp)
   1de9b:	movl   $0x1,(%rsp)
   1dea2:	mov    %r14d,%eax
   1dea5:	lea    0x84(%rbx,%rax,1),%r8
   1dead:	mov    %r13,%rdi
   1deb0:	lea    -0x470(%rbp),%rsi
   1deb7:	lea    -0x70(%rbp),%r9
   1debb:	lea    -0x54c(%rbp),%rcx
   1dec2:	mov    $0x400,%edx
   1dec7:	callq  207f0 <png_inflate_read>
   1decc:	add    $0x10,%rsp
   1ded0:	lea    0x10b43(%rip),%rcx        # 2ea1a <png_pass_inc.20+0x1a7>
   1ded7:	mov    -0x54c(%rbp),%eax
   1dedd:	test   %eax,%eax
   1dedf:	je     1defd <png_handle_iCCP+0x5cd>
   1dee1:	mov    0x130(%r13),%eax
   1dee8:	and    $0x100000,%eax
   1deed:	test   %eax,%eax
   1deef:	jne    1defd <png_handle_iCCP+0x5cd>
   1def1:	mov    %r13,%rdi
   1def4:	mov    -0x48(%rbp),%rsi
   1def8:	xor    %r8d,%r8d
   1defb:	jmp    1df13 <png_handle_iCCP+0x5e3>
   1defd:	mov    -0x70(%rbp),%rax
   1df01:	test   %rax,%rax
   1df04:	je     1df29 <png_handle_iCCP+0x5f9>
   1df06:	mov    %r13,%rdi
   1df09:	mov    -0x48(%rbp),%rsi
   1df0d:	xor    %r8d,%r8d
   1df10:	mov    %r8,%rcx
   1df13:	test   %rcx,%rcx
   1df16:	je     1dfbe <png_handle_iCCP+0x68e>
   1df1c:	mov    -0x10(%rbp),%r12
   1df20:	mov    -0x8(%rbp),%rbx
   1df24:	jmpq   1dc7a <png_handle_iCCP+0x34a>
   1df29:	mov    -0x54c(%rbp),%eax
   1df2f:	test   %eax,%eax
   1df31:	je     1df3e <png_handle_iCCP+0x60e>
   1df33:	mov    %rcx,%rsi
   1df36:	mov    %r13,%rdi
   1df39:	callq  56a0 <png_chunk_warning@plt>
   1df3e:	mov    -0x54c(%rbp),%esi
   1df44:	mov    %r13,%rdi
   1df47:	callq  1b280 <png_crc_finish>
   1df4c:	mov    %r12,%rsi
   1df4f:	mov    0x1a0(%r13),%rcx
   1df56:	mov    %r13,%rdi
   1df59:	mov    %rbx,%rdx
   1df5c:	callq  7b40 <png_icc_set_sRGB>
   1df61:	mov    $0x1,%r8d
   1df67:	mov    -0x48(%rbp),%rsi
   1df6b:	test   %rsi,%rsi
   1df6e:	jne    1dfd2 <png_handle_iCCP+0x6a2>
   1df70:	mov    %r13,%rdi
   1df73:	xor    %eax,%eax
   1df75:	test   %rax,%rax
   1df78:	je     1df91 <png_handle_iCCP+0x661>
   1df7a:	mov    %r8,%rbx
   1df7d:	mov    %rdi,%r12
   1df80:	mov    %rsi,%r13
   1df83:	callq  7020 <png_colorspace_sync>
   1df88:	mov    %r13,%rsi
   1df8b:	mov    %r12,%rdi
   1df8e:	mov    %rbx,%r8
   1df91:	mov    -0x38(%rbp),%rcx
   1df95:	test   %rcx,%rcx
   1df98:	jne    1df13 <png_handle_iCCP+0x5e3>
   1df9e:	movl   $0x0,0x138(%rdi)
   1dfa8:	mov    -0x10(%rbp),%r12
   1dfac:	mov    -0x8(%rbp),%rbx
   1dfb0:	mov    -0x18(%rbp),%r13
   1dfb4:	mov    -0x28(%rbp),%r15
   1dfb8:	mov    -0x20(%rbp),%r14
   1dfbc:	leaveq 
   1dfbd:	retq   
   1dfbe:	mov    0x170(%rdi),%rcx
   1dfc5:	mov    -0x10(%rbp),%r12
   1dfc9:	mov    -0x8(%rbp),%rbx
   1dfcd:	jmpq   1dc7a <png_handle_iCCP+0x34a>
   1dfd2:	mov    %r8,%r15
   1dfd5:	mov    $0x10,%edx
   1dfda:	mov    %r13,%rdi
   1dfdd:	mov    %rsi,%r14
   1dfe0:	xor    %ecx,%ecx
   1dfe2:	callq  5720 <png_free_data@plt>
   1dfe7:	mov    -0x40(%rbp),%rax
   1dfeb:	mov    %eax,%r12d
   1dfee:	mov    %r13,%rdi
   1dff1:	mov    %r12,%rsi
   1dff4:	callq  c950 <png_malloc_base>
   1dff9:	mov    %rax,0x80(%r14)
   1e000:	test   %rax,%rax
   1e003:	jne    1e030 <png_handle_iCCP+0x700>
   1e005:	movzwl 0x4e2(%r13),%eax
   1e00d:	or     $0x8000,%ax
   1e011:	mov    %ax,0x4e2(%r13)
   1e019:	mov    %r14,%rsi
   1e01c:	mov    %r13,%rdi
   1e01f:	mov    %r15,%r8
   1e022:	mov    %r8,%rax
   1e025:	pushq  -0x30(%rbp)
   1e028:	popq   -0x38(%rbp)
   1e02b:	jmpq   1df75 <png_handle_iCCP+0x645>
   1e030:	mov    %r12,%rdx
   1e033:	mov    %rax,%rdi
   1e036:	lea    -0x545(%rbp),%rsi
   1e03d:	callq  54c0 <memcpy@plt>
   1e042:	mov    -0x60(%rbp),%rax
   1e046:	mov    %eax,0x90(%r14)
   1e04d:	mov    %rbx,0x88(%r14)
   1e054:	movq   $0x0,0x458(%r13)
   1e05f:	mov    0x12c(%r14),%eax
   1e066:	or     $0x10,%eax
   1e069:	mov    %eax,0x12c(%r14)
   1e070:	mov    0x8(%r14),%eax
   1e074:	or     $0x1000,%eax
   1e079:	mov    %eax,0x8(%r14)
   1e07d:	mov    %r14,%rsi
   1e080:	mov    %r13,%rdi
   1e083:	mov    %r15,%r8
   1e086:	mov    %r8,%rax
   1e089:	jmpq   1df75 <png_handle_iCCP+0x645>
   1e08e:	xchg   %ax,%ax

000000000001e090 <png_handle_iTXt>:
   1e090:	push   %rbp
   1e091:	mov    %rsp,%rbp
   1e094:	sub    $0x80,%rsp
   1e09b:	mov    0x424(%rdi),%eax
   1e0a1:	test   %eax,%eax
   1e0a3:	jne    1e140 <png_handle_iTXt+0xb0>
   1e0a9:	mov    0x12c(%rdi),%eax
   1e0af:	mov    %rax,%rcx
   1e0b2:	and    $0x1,%ecx
   1e0b5:	test   %ecx,%ecx
   1e0b7:	je     1e185 <png_handle_iTXt+0xf5>
   1e0bd:	mov    %rax,%rcx
   1e0c0:	and    $0x4,%ecx
   1e0c3:	test   %ecx,%ecx
   1e0c5:	je     1e0d0 <png_handle_iTXt+0x40>
   1e0c7:	or     $0x8,%eax
   1e0ca:	mov    %eax,0x12c(%rdi)
   1e0d0:	lea    0x1(%rdx),%eax
   1e0d3:	mov    %eax,%ecx
   1e0d5:	mov    $0x1,%eax
   1e0da:	mov    %rdi,%r8
   1e0dd:	mov    %r14,-0x18(%rbp)
   1e0e1:	mov    %r15,-0x20(%rbp)
   1e0e5:	mov    %rsi,-0x28(%rbp)
   1e0e9:	mov    %rcx,%rsi
   1e0ec:	mov    %rdx,%r14
   1e0ef:	mov    %rax,%rdx
   1e0f2:	mov    %rdi,%r15
   1e0f5:	mov    %r8,%rdi
   1e0f8:	callq  200b0 <png_read_buffer>
   1e0fd:	test   %rax,%rax
   1e100:	je     1e191 <png_handle_iTXt+0x101>
   1e106:	mov    %r15,%rdi
   1e109:	mov    %rax,%rsi
   1e10c:	mov    %r14,%rdx
   1e10f:	mov    %rax,-0x38(%rbp)
   1e113:	callq  1b220 <png_crc_read>
   1e118:	xor    %eax,%eax
   1e11a:	mov    %r15,%rdi
   1e11d:	mov    %rax,%rsi
   1e120:	mov    %r15,-0x30(%rbp)
   1e124:	mov    %rax,%r15
   1e127:	callq  1b280 <png_crc_finish>
   1e12c:	test   %eax,%eax
   1e12e:	jne    1e1b5 <png_handle_iTXt+0x125>
   1e134:	mov    -0x38(%rbp),%r10
   1e138:	mov    %r15,%rax
   1e13b:	jmpq   1e1cd <png_handle_iTXt+0x13d>
   1e140:	cmp    $0x1,%eax
   1e143:	je     1e1f1 <png_handle_iTXt+0x161>
   1e149:	add    $0xffffffff,%eax
   1e14c:	mov    %eax,0x424(%rdi)
   1e152:	cmp    $0x1,%eax
   1e155:	jne    1e0a9 <png_handle_iTXt+0x19>
   1e15b:	mov    %rdi,%rax
   1e15e:	mov    %r15,-0x38(%rbp)
   1e162:	mov    %rdx,%rsi
   1e165:	mov    %rdi,%r15
   1e168:	mov    %rax,%rdi
   1e16b:	callq  1b280 <png_crc_finish>
   1e170:	mov    %r15,%rdi
   1e173:	lea    0x108eb(%rip),%rsi        # 2ea65 <png_pass_inc.20+0x1f2>
   1e17a:	callq  5230 <png_chunk_benign_error@plt>
   1e17f:	mov    -0x38(%rbp),%r15
   1e183:	leaveq 
   1e184:	retq   
   1e185:	lea    0x1074d(%rip),%rsi        # 2e8d9 <png_pass_inc.20+0x66>
   1e18c:	callq  5060 <png_chunk_error@plt>
   1e191:	mov    %r14,%rsi
   1e194:	mov    %r15,%rdi
   1e197:	callq  1b280 <png_crc_finish>
   1e19c:	mov    %r15,%rdi
   1e19f:	lea    0x107c3(%rip),%rsi        # 2e969 <png_pass_inc.20+0xf6>
   1e1a6:	callq  5230 <png_chunk_benign_error@plt>
   1e1ab:	mov    -0x20(%rbp),%r15
   1e1af:	mov    -0x18(%rbp),%r14
   1e1b3:	leaveq 
   1e1b4:	retq   
   1e1b5:	mov    -0x20(%rbp),%r15
   1e1b9:	mov    -0x18(%rbp),%r14
   1e1bd:	leaveq 
   1e1be:	retq   
   1e1bf:	mov    %eax,%ecx
   1e1c1:	movzbl (%r10,%rcx,1),%ecx
   1e1c6:	test   %cl,%cl
   1e1c8:	je     1e1d2 <png_handle_iTXt+0x142>
   1e1ca:	add    $0x1,%eax
   1e1cd:	cmp    %eax,%r14d
   1e1d0:	ja     1e1bf <png_handle_iTXt+0x12f>
   1e1d2:	lea    0x1086e(%rip),%rsi        # 2ea47 <png_pass_inc.20+0x1d4>
   1e1d9:	cmp    $0x4f,%eax
   1e1dc:	jbe    1e1fb <png_handle_iTXt+0x16b>
   1e1de:	mov    -0x30(%rbp),%rdi
   1e1e2:	test   %rsi,%rsi
   1e1e5:	jne    1e205 <png_handle_iTXt+0x175>
   1e1e7:	mov    -0x20(%rbp),%r15
   1e1eb:	mov    -0x18(%rbp),%r14
   1e1ef:	leaveq 
   1e1f0:	retq   
   1e1f1:	mov    %rdx,%rsi
   1e1f4:	callq  1b280 <png_crc_finish>
   1e1f9:	leaveq 
   1e1fa:	retq   
   1e1fb:	test   %eax,%eax
   1e1fd:	jne    1e214 <png_handle_iTXt+0x184>
   1e1ff:	mov    -0x30(%rbp),%rdi
   1e203:	jmp    1e1e2 <png_handle_iTXt+0x152>
   1e205:	callq  5230 <png_chunk_benign_error@plt>
   1e20a:	mov    -0x20(%rbp),%r15
   1e20e:	mov    -0x18(%rbp),%r14
   1e212:	leaveq 
   1e213:	retq   
   1e214:	lea    0x10862(%rip),%rsi        # 2ea7d <png_pass_inc.20+0x20a>
   1e21b:	lea    0x5(%rax),%ecx
   1e21e:	cmp    %ecx,%r14d
   1e221:	jae    1e229 <png_handle_iTXt+0x199>
   1e223:	mov    -0x30(%rbp),%rdi
   1e227:	jmp    1e1e2 <png_handle_iTXt+0x152>
   1e229:	lea    0x1(%rax),%ecx
   1e22c:	mov    %ecx,%edi
   1e22e:	movzbl (%r10,%rdi,1),%ecx
   1e233:	test   %cl,%cl
   1e235:	je     1e24c <png_handle_iTXt+0x1bc>
   1e237:	lea    0x1085d(%rip),%rdx        # 2ea9b <png_pass_inc.20+0x228>
   1e23e:	cmp    $0x1,%cl
   1e241:	je     1e25a <png_handle_iTXt+0x1ca>
   1e243:	mov    %rdx,%rsi
   1e246:	mov    -0x30(%rbp),%rdi
   1e24a:	jmp    1e1e2 <png_handle_iTXt+0x152>
   1e24c:	movzbl (%r10,%rdi,1),%ecx
   1e251:	test   %cl,%cl
   1e253:	jne    1e274 <png_handle_iTXt+0x1e4>
   1e255:	mov    %r15,%r9
   1e258:	jmp    1e27a <png_handle_iTXt+0x1ea>
   1e25a:	lea    0x2(%rax),%ecx
   1e25d:	mov    %ecx,%ecx
   1e25f:	movzbl (%r10,%rcx,1),%ecx
   1e264:	test   %cl,%cl
   1e266:	je     1e24c <png_handle_iTXt+0x1bc>
   1e268:	mov    %rdx,%rsi
   1e26b:	mov    -0x30(%rbp),%rdi
   1e26f:	jmpq   1e1e2 <png_handle_iTXt+0x152>
   1e274:	mov    $0x1,%r9d
   1e27a:	movq   $0x0,-0x78(%rbp)
   1e282:	lea    0x3(%rax),%r8d
   1e286:	mov    %r8,%rax
   1e289:	jmp    1e299 <png_handle_iTXt+0x209>
   1e28b:	mov    %eax,%eax
   1e28d:	movzbl (%r10,%rax,1),%eax
   1e292:	test   %al,%al
   1e294:	je     1e2a7 <png_handle_iTXt+0x217>
   1e296:	mov    %r11,%rax
   1e299:	lea    0x1(%rax),%r11d
   1e29d:	cmp    %eax,%r14d
   1e2a0:	ja     1e28b <png_handle_iTXt+0x1fb>
   1e2a2:	mov    %r11,%rcx
   1e2a5:	jmp    1e2ba <png_handle_iTXt+0x22a>
   1e2a7:	mov    %r11,%rcx
   1e2aa:	jmp    1e2ba <png_handle_iTXt+0x22a>
   1e2ac:	mov    %ecx,%ecx
   1e2ae:	movzbl (%r10,%rcx,1),%ecx
   1e2b3:	test   %cl,%cl
   1e2b5:	je     1e2c2 <png_handle_iTXt+0x232>
   1e2b7:	mov    %rax,%rcx
   1e2ba:	lea    0x1(%rcx),%eax
   1e2bd:	cmp    %ecx,%r14d
   1e2c0:	ja     1e2ac <png_handle_iTXt+0x21c>
   1e2c2:	test   %r9d,%r9d
   1e2c5:	jne    1e2df <png_handle_iTXt+0x24f>
   1e2c7:	cmp    %eax,%r14d
   1e2ca:	jb     1e2df <png_handle_iTXt+0x24f>
   1e2cc:	sub    %eax,%r14d
   1e2cf:	mov    %r14d,%ecx
   1e2d2:	mov    %rcx,-0x78(%rbp)
   1e2d6:	mov    -0x30(%rbp),%rdi
   1e2da:	mov    %r15,%rsi
   1e2dd:	jmp    1e2e8 <png_handle_iTXt+0x258>
   1e2df:	test   %r9d,%r9d
   1e2e2:	jg     1e30b <png_handle_iTXt+0x27b>
   1e2e4:	mov    -0x30(%rbp),%rdi
   1e2e8:	test   %rsi,%rsi
   1e2eb:	jne    1e1e2 <png_handle_iTXt+0x152>
   1e2f1:	mov    %eax,%edx
   1e2f3:	mov    %rdx,%rax
   1e2f6:	add    -0x78(%rbp),%rax
   1e2fa:	test   %r9d,%r9d
   1e2fd:	movb   $0x0,(%r10,%rax,1)
   1e302:	je     1e316 <png_handle_iTXt+0x286>
   1e304:	mov    $0x2,%eax
   1e309:	jmp    1e31b <png_handle_iTXt+0x28b>
   1e30b:	cmp    %eax,%r14d
   1e30e:	ja     1e372 <png_handle_iTXt+0x2e2>
   1e310:	mov    -0x30(%rbp),%rdi
   1e314:	jmp    1e2e8 <png_handle_iTXt+0x258>
   1e316:	mov    $0x1,%eax
   1e31b:	mov    %r10,-0x68(%rbp)
   1e31f:	mov    %r8d,%ecx
   1e322:	add    %r10,%rcx
   1e325:	mov    %rcx,-0x48(%rbp)
   1e329:	mov    %r11d,%ecx
   1e32c:	add    %r10,%rcx
   1e32f:	mov    %rcx,-0x40(%rbp)
   1e333:	lea    (%rdx,%r10,1),%rcx
   1e337:	mov    %rcx,-0x60(%rbp)
   1e33b:	movq   $0x0,-0x58(%rbp)
   1e343:	mov    -0x78(%rbp),%rcx
   1e347:	mov    %rcx,-0x50(%rbp)
   1e34b:	mov    %eax,-0x70(%rbp)
   1e34e:	lea    -0x70(%rbp),%rdx
   1e352:	mov    %rdi,%r14
   1e355:	mov    -0x28(%rbp),%rsi
   1e359:	mov    $0x1,%ecx
   1e35e:	callq  22df0 <png_set_text_2>
   1e363:	test   %eax,%eax
   1e365:	jne    1e3e5 <png_handle_iTXt+0x355>
   1e367:	mov    %r15,%rsi
   1e36a:	mov    %r14,%rdi
   1e36d:	jmpq   1e1e2 <png_handle_iTXt+0x152>
   1e372:	movq   $0xffffffffffffffff,-0x78(%rbp)
   1e37a:	lea    -0x78(%rbp),%rcx
   1e37e:	mov    -0x30(%rbp),%rsi
   1e382:	mov    %rsi,%rdi
   1e385:	mov    %rax,%rdx
   1e388:	mov    $0x1,%r15d
   1e38e:	mov    %r12,-0x8(%rbp)
   1e392:	mov    %r13,-0x10(%rbp)
   1e396:	mov    %r8,-0x30(%rbp)
   1e39a:	mov    %r11,-0x38(%rbp)
   1e39e:	mov    %r15,%r8
   1e3a1:	mov    %rax,%r15
   1e3a4:	mov    %r10,%r12
   1e3a7:	mov    %rsi,%r13
   1e3aa:	mov    %r14,%rsi
   1e3ad:	mov    %r9,%r14
   1e3b0:	callq  20510 <png_decompress_chunk>
   1e3b5:	cmp    $0x1,%eax
   1e3b8:	je     1e3f4 <png_handle_iTXt+0x364>
   1e3ba:	mov    %r15,%rax
   1e3bd:	mov    %r13,%rdi
   1e3c0:	mov    %r14,%r9
   1e3c3:	mov    %r12,%r10
   1e3c6:	mov    0x170(%rdi),%rsi
   1e3cd:	mov    -0x38(%rbp),%r11
   1e3d1:	mov    -0x30(%rbp),%r8
   1e3d5:	mov    -0x10(%rbp),%r13
   1e3d9:	mov    -0x8(%rbp),%r12
   1e3dd:	xor    %r15d,%r15d
   1e3e0:	jmpq   1e2e8 <png_handle_iTXt+0x258>
   1e3e5:	mov    %r14,%rdi
   1e3e8:	lea    0x10698(%rip),%rsi        # 2ea87 <png_pass_inc.20+0x214>
   1e3ef:	jmpq   1e1e2 <png_handle_iTXt+0x152>
   1e3f4:	mov    %r15,%rax
   1e3f7:	mov    %r13,%rdi
   1e3fa:	mov    %r14,%r9
   1e3fd:	mov    0x458(%rdi),%r10
   1e404:	mov    -0x38(%rbp),%r11
   1e408:	mov    -0x30(%rbp),%r8
   1e40c:	mov    -0x10(%rbp),%r13
   1e410:	mov    -0x8(%rbp),%r12
   1e414:	xor    %r15d,%r15d
   1e417:	mov    %r15,%rsi
   1e41a:	jmpq   1e2e8 <png_handle_iTXt+0x258>
   1e41f:	nop

000000000001e420 <png_handle_oFFs>:
   1e420:	push   %rbp
   1e421:	mov    %rsp,%rbp
   1e424:	sub    $0x20,%rsp
   1e428:	mov    0x12c(%rdi),%eax
   1e42e:	mov    %rax,%rcx
   1e431:	and    $0x1,%ecx
   1e434:	test   %ecx,%ecx
   1e436:	je     1e487 <png_handle_oFFs+0x67>
   1e438:	and    $0x4,%eax
   1e43b:	test   %eax,%eax
   1e43d:	jne    1e493 <png_handle_oFFs+0x73>
   1e43f:	test   %rsi,%rsi
   1e442:	jne    1e4bd <png_handle_oFFs+0x9d>
   1e444:	cmp    $0x9,%edx
   1e447:	jne    1e4f7 <png_handle_oFFs+0xd7>
   1e44d:	lea    -0x19(%rbp),%rax
   1e451:	mov    $0x9,%edx
   1e456:	mov    %rdi,%rcx
   1e459:	mov    %r15,-0x10(%rbp)
   1e45d:	mov    %rsi,-0x8(%rbp)
   1e461:	mov    %rax,%rsi
   1e464:	mov    %rdi,%r15
   1e467:	mov    %rcx,%rdi
   1e46a:	callq  1b220 <png_crc_read>
   1e46f:	xor    %esi,%esi
   1e471:	mov    %r15,%rdi
   1e474:	callq  1b280 <png_crc_finish>
   1e479:	test   %eax,%eax
   1e47b:	je     1e521 <png_handle_oFFs+0x101>
   1e481:	mov    -0x10(%rbp),%r15
   1e485:	leaveq 
   1e486:	retq   
   1e487:	lea    0x1044b(%rip),%rsi        # 2e8d9 <png_pass_inc.20+0x66>
   1e48e:	callq  5060 <png_chunk_error@plt>
   1e493:	mov    %rdi,%rax
   1e496:	mov    %r15,-0x10(%rbp)
   1e49a:	mov    %rdx,%rsi
   1e49d:	mov    %rdi,%r15
   1e4a0:	mov    %rax,%rdi
   1e4a3:	callq  1b280 <png_crc_finish>
   1e4a8:	mov    %r15,%rdi
   1e4ab:	lea    0x10412(%rip),%rsi        # 2e8c4 <png_pass_inc.20+0x51>
   1e4b2:	callq  5230 <png_chunk_benign_error@plt>
   1e4b7:	mov    -0x10(%rbp),%r15
   1e4bb:	leaveq 
   1e4bc:	retq   
   1e4bd:	mov    0x8(%rsi),%eax
   1e4c0:	and    $0x100,%eax
   1e4c5:	test   %eax,%eax
   1e4c7:	je     1e444 <png_handle_oFFs+0x24>
   1e4cd:	mov    %rdi,%rax
   1e4d0:	mov    %r15,-0x10(%rbp)
   1e4d4:	mov    %rdx,%rsi
   1e4d7:	mov    %rdi,%r15
   1e4da:	mov    %rax,%rdi
   1e4dd:	callq  1b280 <png_crc_finish>
   1e4e2:	mov    %r15,%rdi
   1e4e5:	lea    0x103fa(%rip),%rsi        # 2e8e6 <png_pass_inc.20+0x73>
   1e4ec:	callq  5230 <png_chunk_benign_error@plt>
   1e4f1:	mov    -0x10(%rbp),%r15
   1e4f5:	leaveq 
   1e4f6:	retq   
   1e4f7:	mov    %rdi,%rax
   1e4fa:	mov    %r15,-0x10(%rbp)
   1e4fe:	mov    %rdx,%rsi
   1e501:	mov    %rdi,%r15
   1e504:	mov    %rax,%rdi
   1e507:	callq  1b280 <png_crc_finish>
   1e50c:	mov    %r15,%rdi
   1e50f:	lea    0x103bb(%rip),%rsi        # 2e8d1 <png_pass_inc.20+0x5e>
   1e516:	callq  5230 <png_chunk_benign_error@plt>
   1e51b:	mov    -0x10(%rbp),%r15
   1e51f:	leaveq 
   1e520:	retq   
   1e521:	movzbl -0x19(%rbp),%eax
   1e525:	mov    %rax,%rcx
   1e528:	and    $0x80,%ecx
   1e52e:	test   %ecx,%ecx
   1e530:	jg     1e550 <png_handle_oFFs+0x130>
   1e532:	shl    $0x18,%eax
   1e535:	movzbl -0x18(%rbp),%ecx
   1e539:	shl    $0x10,%ecx
   1e53c:	add    %eax,%ecx
   1e53e:	movzbl -0x17(%rbp),%eax
   1e542:	shl    $0x8,%eax
   1e545:	add    %ecx,%eax
   1e547:	movzbl -0x16(%rbp),%ecx
   1e54b:	lea    (%rcx,%rax,1),%edx
   1e54e:	jmp    1e576 <png_handle_oFFs+0x156>
   1e550:	shl    $0x18,%eax
   1e553:	movzbl -0x18(%rbp),%ecx
   1e557:	shl    $0x10,%ecx
   1e55a:	add    %eax,%ecx
   1e55c:	movzbl -0x17(%rbp),%eax
   1e560:	shl    $0x8,%eax
   1e563:	add    %ecx,%eax
   1e565:	movzbl -0x16(%rbp),%ecx
   1e569:	lea    (%rcx,%rax,1),%edx
   1e56c:	neg    %edx
   1e56e:	and    $0x7fffffff,%edx
   1e574:	neg    %edx
   1e576:	movzbl -0x15(%rbp),%eax
   1e57a:	mov    %rax,%rcx
   1e57d:	and    $0x80,%ecx
   1e583:	test   %ecx,%ecx
   1e585:	jg     1e5a4 <png_handle_oFFs+0x184>
   1e587:	shl    $0x18,%eax
   1e58a:	movzbl -0x14(%rbp),%ecx
   1e58e:	shl    $0x10,%ecx
   1e591:	add    %eax,%ecx
   1e593:	movzbl -0x13(%rbp),%eax
   1e597:	shl    $0x8,%eax
   1e59a:	add    %ecx,%eax
   1e59c:	movzbl -0x12(%rbp),%ecx
   1e5a0:	add    %eax,%ecx
   1e5a2:	jmp    1e5c9 <png_handle_oFFs+0x1a9>
   1e5a4:	shl    $0x18,%eax
   1e5a7:	movzbl -0x14(%rbp),%ecx
   1e5ab:	shl    $0x10,%ecx
   1e5ae:	add    %eax,%ecx
   1e5b0:	movzbl -0x13(%rbp),%eax
   1e5b4:	shl    $0x8,%eax
   1e5b7:	add    %ecx,%eax
   1e5b9:	movzbl -0x12(%rbp),%ecx
   1e5bd:	add    %eax,%ecx
   1e5bf:	neg    %ecx
   1e5c1:	and    $0x7fffffff,%ecx
   1e5c7:	neg    %ecx
   1e5c9:	mov    %r15,%rdi
   1e5cc:	movzbl -0x11(%rbp),%r8d
   1e5d1:	mov    -0x8(%rbp),%rsi
   1e5d5:	callq  55e0 <png_set_oFFs@plt>
   1e5da:	mov    -0x10(%rbp),%r15
   1e5de:	leaveq 
   1e5df:	retq   

000000000001e5e0 <png_handle_pCAL>:
   1e5e0:	push   %rbp
   1e5e1:	mov    %rsp,%rbp
   1e5e4:	sub    $0x50,%rsp
   1e5e8:	mov    0x12c(%rdi),%eax
   1e5ee:	mov    %rax,%rcx
   1e5f1:	and    $0x1,%ecx
   1e5f4:	test   %ecx,%ecx
   1e5f6:	je     1e66c <png_handle_pCAL+0x8c>
   1e5f8:	and    $0x4,%eax
   1e5fb:	test   %eax,%eax
   1e5fd:	jne    1e678 <png_handle_pCAL+0x98>
   1e5ff:	test   %rsi,%rsi
   1e602:	jne    1e6a2 <png_handle_pCAL+0xc2>
   1e608:	lea    0x1(%rdx),%eax
   1e60b:	mov    %eax,%eax
   1e60d:	mov    $0x2,%ecx
   1e612:	mov    %rdi,%r8
   1e615:	mov    %r15,-0x40(%rbp)
   1e619:	mov    %r14,-0x38(%rbp)
   1e61d:	mov    %rsi,-0x8(%rbp)
   1e621:	mov    %rax,%rsi
   1e624:	mov    %rdx,%r14
   1e627:	mov    %rcx,%rdx
   1e62a:	mov    %rdi,%r15
   1e62d:	mov    %r8,%rdi
   1e630:	callq  200b0 <png_read_buffer>
   1e635:	test   %rax,%rax
   1e638:	je     1e6dc <png_handle_pCAL+0xfc>
   1e63e:	mov    %r15,%rdi
   1e641:	mov    %rax,%rsi
   1e644:	mov    %r14,%rdx
   1e647:	mov    %rax,-0x50(%rbp)
   1e64b:	callq  1b220 <png_crc_read>
   1e650:	xor    %esi,%esi
   1e652:	mov    %r15,%rdi
   1e655:	callq  1b280 <png_crc_finish>
   1e65a:	test   %eax,%eax
   1e65c:	je     1e700 <png_handle_pCAL+0x120>
   1e662:	mov    -0x38(%rbp),%r14
   1e666:	mov    -0x40(%rbp),%r15
   1e66a:	leaveq 
   1e66b:	retq   
   1e66c:	lea    0x10266(%rip),%rsi        # 2e8d9 <png_pass_inc.20+0x66>
   1e673:	callq  5060 <png_chunk_error@plt>
   1e678:	mov    %rdi,%rax
   1e67b:	mov    %r15,-0x50(%rbp)
   1e67f:	mov    %rdx,%rsi
   1e682:	mov    %rdi,%r15
   1e685:	mov    %rax,%rdi
   1e688:	callq  1b280 <png_crc_finish>
   1e68d:	mov    %r15,%rdi
   1e690:	lea    0x1022d(%rip),%rsi        # 2e8c4 <png_pass_inc.20+0x51>
   1e697:	callq  5230 <png_chunk_benign_error@plt>
   1e69c:	mov    -0x50(%rbp),%r15
   1e6a0:	leaveq 
   1e6a1:	retq   
   1e6a2:	mov    0x8(%rsi),%eax
   1e6a5:	and    $0x400,%eax
   1e6aa:	test   %eax,%eax
   1e6ac:	je     1e608 <png_handle_pCAL+0x28>
   1e6b2:	mov    %rdi,%rax
   1e6b5:	mov    %r15,-0x50(%rbp)
   1e6b9:	mov    %rdx,%rsi
   1e6bc:	mov    %rdi,%r15
   1e6bf:	mov    %rax,%rdi
   1e6c2:	callq  1b280 <png_crc_finish>
   1e6c7:	mov    %r15,%rdi
   1e6ca:	lea    0x10215(%rip),%rsi        # 2e8e6 <png_pass_inc.20+0x73>
   1e6d1:	callq  5230 <png_chunk_benign_error@plt>
   1e6d6:	mov    -0x50(%rbp),%r15
   1e6da:	leaveq 
   1e6db:	retq   
   1e6dc:	mov    %r14,%rsi
   1e6df:	mov    %r15,%rdi
   1e6e2:	callq  1b280 <png_crc_finish>
   1e6e7:	mov    %r15,%rdi
   1e6ea:	lea    0x10278(%rip),%rsi        # 2e969 <png_pass_inc.20+0xf6>
   1e6f1:	callq  5230 <png_chunk_benign_error@plt>
   1e6f6:	mov    -0x38(%rbp),%r14
   1e6fa:	mov    -0x40(%rbp),%r15
   1e6fe:	leaveq 
   1e6ff:	retq   
   1e700:	mov    %r14d,%ecx
   1e703:	mov    -0x50(%rbp),%rax
   1e707:	lea    (%rax,%rcx,1),%r8
   1e70b:	movb   $0x0,(%r8)
   1e70f:	jmp    1e715 <png_handle_pCAL+0x135>
   1e711:	add    $0x1,%rax
   1e715:	movzbl (%rax),%ecx
   1e718:	test   %cl,%cl
   1e71a:	jne    1e711 <png_handle_pCAL+0x131>
   1e71c:	mov    %r8,%rcx
   1e71f:	sub    %rax,%rcx
   1e722:	cmp    $0xc,%rcx
   1e726:	jle    1e756 <png_handle_pCAL+0x176>
   1e728:	movzbl 0x1(%rax),%ecx
   1e72c:	mov    %rcx,%rdx
   1e72f:	and    $0x80,%edx
   1e735:	test   %edx,%edx
   1e737:	jg     1e76f <png_handle_pCAL+0x18f>
   1e739:	shl    $0x18,%ecx
   1e73c:	movzbl 0x2(%rax),%edx
   1e740:	shl    $0x10,%edx
   1e743:	add    %ecx,%edx
   1e745:	movzbl 0x3(%rax),%ecx
   1e749:	shl    $0x8,%ecx
   1e74c:	add    %edx,%ecx
   1e74e:	movzbl 0x4(%rax),%edx
   1e752:	add    %edx,%ecx
   1e754:	jmp    1e794 <png_handle_pCAL+0x1b4>
   1e756:	mov    %r15,%rdi
   1e759:	lea    0x10171(%rip),%rsi        # 2e8d1 <png_pass_inc.20+0x5e>
   1e760:	callq  5230 <png_chunk_benign_error@plt>
   1e765:	mov    -0x38(%rbp),%r14
   1e769:	mov    -0x40(%rbp),%r15
   1e76d:	leaveq 
   1e76e:	retq   
   1e76f:	shl    $0x18,%ecx
   1e772:	movzbl 0x2(%rax),%edx
   1e776:	shl    $0x10,%edx
   1e779:	add    %ecx,%edx
   1e77b:	movzbl 0x3(%rax),%ecx
   1e77f:	shl    $0x8,%ecx
   1e782:	add    %edx,%ecx
   1e784:	movzbl 0x4(%rax),%edx
   1e788:	add    %edx,%ecx
   1e78a:	neg    %ecx
   1e78c:	and    $0x7fffffff,%ecx
   1e792:	neg    %ecx
   1e794:	movzbl 0x5(%rax),%edx
   1e798:	mov    %rdx,%rsi
   1e79b:	and    $0x80,%esi
   1e7a1:	test   %esi,%esi
   1e7a3:	jg     1e7c2 <png_handle_pCAL+0x1e2>
   1e7a5:	shl    $0x18,%edx
   1e7a8:	movzbl 0x6(%rax),%esi
   1e7ac:	shl    $0x10,%esi
   1e7af:	add    %edx,%esi
   1e7b1:	movzbl 0x7(%rax),%edx
   1e7b5:	shl    $0x8,%edx
   1e7b8:	add    %esi,%edx
   1e7ba:	movzbl 0x8(%rax),%esi
   1e7be:	add    %esi,%edx
   1e7c0:	jmp    1e7e7 <png_handle_pCAL+0x207>
   1e7c2:	shl    $0x18,%edx
   1e7c5:	movzbl 0x6(%rax),%esi
   1e7c9:	shl    $0x10,%esi
   1e7cc:	add    %edx,%esi
   1e7ce:	movzbl 0x7(%rax),%edx
   1e7d2:	shl    $0x8,%edx
   1e7d5:	add    %esi,%edx
   1e7d7:	movzbl 0x8(%rax),%esi
   1e7db:	add    %esi,%edx
   1e7dd:	neg    %edx
   1e7df:	and    $0x7fffffff,%edx
   1e7e5:	neg    %edx
   1e7e7:	movzbl 0xa(%rax),%r14d
   1e7ec:	movzbl 0x9(%rax),%r9d
   1e7f1:	test   %r9b,%r9b
   1e7f4:	jne    1e815 <png_handle_pCAL+0x235>
   1e7f6:	cmp    $0x2,%r14b
   1e7fa:	je     1e815 <png_handle_pCAL+0x235>
   1e7fc:	mov    %r15,%rdi
   1e7ff:	lea    0x102aa(%rip),%rsi        # 2eab0 <png_pass_inc.20+0x23d>
   1e806:	callq  5230 <png_chunk_benign_error@plt>
   1e80b:	mov    -0x38(%rbp),%r14
   1e80f:	mov    -0x40(%rbp),%r15
   1e813:	leaveq 
   1e814:	retq   
   1e815:	cmp    $0x1,%r9b
   1e819:	jne    1e821 <png_handle_pCAL+0x241>
   1e81b:	cmp    $0x3,%r14b
   1e81f:	jne    1e7fc <png_handle_pCAL+0x21c>
   1e821:	cmp    $0x2,%r9b
   1e825:	jne    1e82d <png_handle_pCAL+0x24d>
   1e827:	cmp    $0x3,%r14b
   1e82b:	jne    1e7fc <png_handle_pCAL+0x21c>
   1e82d:	cmp    $0x3,%r9b
   1e831:	jne    1e839 <png_handle_pCAL+0x259>
   1e833:	cmp    $0x4,%r14b
   1e837:	jne    1e7fc <png_handle_pCAL+0x21c>
   1e839:	add    $0xb,%rax
   1e83d:	cmp    $0x3,%r9b
   1e841:	ja     1e854 <png_handle_pCAL+0x274>
   1e843:	mov    %r13,-0x30(%rbp)
   1e847:	mov    %r8,-0x48(%rbp)
   1e84b:	mov    %r9,-0x20(%rbp)
   1e84f:	mov    %rax,%r13
   1e852:	jmp    1e88b <png_handle_pCAL+0x2ab>
   1e854:	lea    0x1026d(%rip),%rsi        # 2eac8 <png_pass_inc.20+0x255>
   1e85b:	mov    %r15,%rdi
   1e85e:	mov    %r13,-0x30(%rbp)
   1e862:	mov    %r8,-0x48(%rbp)
   1e866:	mov    %rcx,-0x18(%rbp)
   1e86a:	mov    %rdx,-0x28(%rbp)
   1e86e:	mov    %r9,-0x20(%rbp)
   1e872:	mov    %rax,%r13
   1e875:	callq  5230 <png_chunk_benign_error@plt>
   1e87a:	mov    -0x28(%rbp),%rdx
   1e87e:	mov    -0x18(%rbp),%rcx
   1e882:	mov    %r13,%rax
   1e885:	jmp    1e88b <png_handle_pCAL+0x2ab>
   1e887:	add    $0x1,%r13
   1e88b:	movzbl 0x0(%r13),%esi
   1e890:	test   %sil,%sil
   1e893:	jne    1e887 <png_handle_pCAL+0x2a7>
   1e895:	mov    %r14,%rsi
   1e898:	shl    $0x3,%rsi
   1e89c:	mov    %r15,%rdi
   1e89f:	mov    %rcx,-0x10(%rbp)
   1e8a3:	mov    %rdx,-0x18(%rbp)
   1e8a7:	mov    %rax,-0x28(%rbp)
   1e8ab:	callq  5150 <png_malloc_warn@plt>
   1e8b0:	test   %rax,%rax
   1e8b3:	je     1e8c5 <png_handle_pCAL+0x2e5>
   1e8b5:	mov    -0x18(%rbp),%r8
   1e8b9:	mov    -0x10(%rbp),%rcx
   1e8bd:	mov    -0x48(%rbp),%rdi
   1e8c1:	xor    %edx,%edx
   1e8c3:	jmp    1e8ea <png_handle_pCAL+0x30a>
   1e8c5:	mov    %r15,%rdi
   1e8c8:	lea    0x1009a(%rip),%rsi        # 2e969 <png_pass_inc.20+0xf6>
   1e8cf:	callq  5230 <png_chunk_benign_error@plt>
   1e8d4:	mov    -0x30(%rbp),%r13
   1e8d8:	mov    -0x38(%rbp),%r14
   1e8dc:	mov    -0x40(%rbp),%r15
   1e8e0:	leaveq 
   1e8e1:	retq   
   1e8e2:	cmp    %r13,%rdi
   1e8e5:	jb     1e939 <png_handle_pCAL+0x359>
   1e8e7:	add    $0x1,%edx
   1e8ea:	cmp    %edx,%r14d
   1e8ed:	jg     1e961 <png_handle_pCAL+0x381>
   1e8ef:	sub    $0x20,%rsp
   1e8f3:	mov    %r14d,(%rsp)
   1e8f7:	mov    -0x28(%rbp),%rdx
   1e8fb:	mov    %rdx,0x8(%rsp)
   1e900:	mov    %rax,%r13
   1e903:	mov    %r13,0x10(%rsp)
   1e908:	mov    %r15,%rdi
   1e90b:	mov    -0x20(%rbp),%r9
   1e90f:	mov    -0x50(%rbp),%rdx
   1e913:	mov    -0x8(%rbp),%rsi
   1e917:	callq  51b0 <png_set_pCAL@plt>
   1e91c:	mov    %r13,%rsi
   1e91f:	mov    %r15,%rdi
   1e922:	add    $0x20,%rsp
   1e926:	callq  5790 <png_free@plt>
   1e92b:	mov    -0x30(%rbp),%r13
   1e92f:	mov    -0x38(%rbp),%r14
   1e933:	mov    -0x40(%rbp),%r15
   1e937:	leaveq 
   1e938:	retq   
   1e939:	mov    %rax,%rsi
   1e93c:	mov    %r15,%rdi
   1e93f:	callq  5790 <png_free@plt>
   1e944:	mov    %r15,%rdi
   1e947:	lea    0x10195(%rip),%rsi        # 2eae3 <png_pass_inc.20+0x270>
   1e94e:	callq  5230 <png_chunk_benign_error@plt>
   1e953:	mov    -0x30(%rbp),%r13
   1e957:	mov    -0x38(%rbp),%r14
   1e95b:	mov    -0x40(%rbp),%r15
   1e95f:	leaveq 
   1e960:	retq   
   1e961:	add    $0x1,%r13
   1e965:	movslq %edx,%rsi
   1e968:	mov    %r13,(%rax,%rsi,8)
   1e96c:	jmp    1e980 <png_handle_pCAL+0x3a0>
   1e96e:	movzbl 0x0(%r13),%esi
   1e973:	test   %sil,%sil
   1e976:	je     1e8e2 <png_handle_pCAL+0x302>
   1e97c:	add    $0x1,%r13
   1e980:	cmp    %r13,%rdi
   1e983:	jae    1e96e <png_handle_pCAL+0x38e>
   1e985:	jmpq   1e8e2 <png_handle_pCAL+0x302>
   1e98a:	nopw   0x0(%rax,%rax,1)

000000000001e990 <png_handle_pHYs>:
   1e990:	push   %rbp
   1e991:	mov    %rsp,%rbp
   1e994:	sub    $0x20,%rsp
   1e998:	mov    0x12c(%rdi),%eax
   1e99e:	mov    %rax,%rcx
   1e9a1:	and    $0x1,%ecx
   1e9a4:	test   %ecx,%ecx
   1e9a6:	je     1e9f7 <png_handle_pHYs+0x67>
   1e9a8:	and    $0x4,%eax
   1e9ab:	test   %eax,%eax
   1e9ad:	jne    1ea03 <png_handle_pHYs+0x73>
   1e9af:	test   %rsi,%rsi
   1e9b2:	jne    1ea2d <png_handle_pHYs+0x9d>
   1e9b4:	cmp    $0x9,%edx
   1e9b7:	jne    1ea67 <png_handle_pHYs+0xd7>
   1e9bd:	lea    -0x19(%rbp),%rax
   1e9c1:	mov    $0x9,%edx
   1e9c6:	mov    %rdi,%rcx
   1e9c9:	mov    %r15,-0x10(%rbp)
   1e9cd:	mov    %rsi,-0x8(%rbp)
   1e9d1:	mov    %rax,%rsi
   1e9d4:	mov    %rdi,%r15
   1e9d7:	mov    %rcx,%rdi
   1e9da:	callq  1b220 <png_crc_read>
   1e9df:	xor    %esi,%esi
   1e9e1:	mov    %r15,%rdi
   1e9e4:	callq  1b280 <png_crc_finish>
   1e9e9:	test   %eax,%eax
   1e9eb:	je     1ea91 <png_handle_pHYs+0x101>
   1e9f1:	mov    -0x10(%rbp),%r15
   1e9f5:	leaveq 
   1e9f6:	retq   
   1e9f7:	lea    0xfedb(%rip),%rsi        # 2e8d9 <png_pass_inc.20+0x66>
   1e9fe:	callq  5060 <png_chunk_error@plt>
   1ea03:	mov    %rdi,%rax
   1ea06:	mov    %r15,-0x10(%rbp)
   1ea0a:	mov    %rdx,%rsi
   1ea0d:	mov    %rdi,%r15
   1ea10:	mov    %rax,%rdi
   1ea13:	callq  1b280 <png_crc_finish>
   1ea18:	mov    %r15,%rdi
   1ea1b:	lea    0xfea2(%rip),%rsi        # 2e8c4 <png_pass_inc.20+0x51>
   1ea22:	callq  5230 <png_chunk_benign_error@plt>
   1ea27:	mov    -0x10(%rbp),%r15
   1ea2b:	leaveq 
   1ea2c:	retq   
   1ea2d:	mov    0x8(%rsi),%eax
   1ea30:	and    $0x80,%eax
   1ea35:	test   %eax,%eax
   1ea37:	je     1e9b4 <png_handle_pHYs+0x24>
   1ea3d:	mov    %rdi,%rax
   1ea40:	mov    %r15,-0x10(%rbp)
   1ea44:	mov    %rdx,%rsi
   1ea47:	mov    %rdi,%r15
   1ea4a:	mov    %rax,%rdi
   1ea4d:	callq  1b280 <png_crc_finish>
   1ea52:	mov    %r15,%rdi
   1ea55:	lea    0xfe8a(%rip),%rsi        # 2e8e6 <png_pass_inc.20+0x73>
   1ea5c:	callq  5230 <png_chunk_benign_error@plt>
   1ea61:	mov    -0x10(%rbp),%r15
   1ea65:	leaveq 
   1ea66:	retq   
   1ea67:	mov    %rdi,%rax
   1ea6a:	mov    %r15,-0x10(%rbp)
   1ea6e:	mov    %rdx,%rsi
   1ea71:	mov    %rdi,%r15
   1ea74:	mov    %rax,%rdi
   1ea77:	callq  1b280 <png_crc_finish>
   1ea7c:	mov    %r15,%rdi
   1ea7f:	lea    0xfe4b(%rip),%rsi        # 2e8d1 <png_pass_inc.20+0x5e>
   1ea86:	callq  5230 <png_chunk_benign_error@plt>
   1ea8b:	mov    -0x10(%rbp),%r15
   1ea8f:	leaveq 
   1ea90:	retq   
   1ea91:	movzbl -0x19(%rbp),%ecx
   1ea95:	shl    $0x18,%ecx
   1ea98:	movzbl -0x18(%rbp),%eax
   1ea9c:	shl    $0x10,%eax
   1ea9f:	add    %eax,%ecx
   1eaa1:	movzbl -0x17(%rbp),%eax
   1eaa5:	shl    $0x8,%eax
   1eaa8:	add    %ecx,%eax
   1eaaa:	movzbl -0x16(%rbp),%ecx
   1eaae:	lea    (%rcx,%rax,1),%edx
   1eab1:	movzbl -0x15(%rbp),%eax
   1eab5:	shl    $0x18,%eax
   1eab8:	movzbl -0x14(%rbp),%ecx
   1eabc:	shl    $0x10,%ecx
   1eabf:	add    %eax,%ecx
   1eac1:	movzbl -0x13(%rbp),%eax
   1eac5:	shl    $0x8,%eax
   1eac8:	add    %ecx,%eax
   1eaca:	movzbl -0x12(%rbp),%ecx
   1eace:	add    %eax,%ecx
   1ead0:	mov    %r15,%rdi
   1ead3:	movzbl -0x11(%rbp),%r8d
   1ead8:	mov    -0x8(%rbp),%rsi
   1eadc:	callq  5610 <png_set_pHYs@plt>
   1eae1:	mov    -0x10(%rbp),%r15
   1eae5:	leaveq 
   1eae6:	retq   
   1eae7:	nopw   0x0(%rax,%rax,1)

000000000001eaf0 <png_handle_sBIT>:
   1eaf0:	push   %rbp
   1eaf1:	mov    %rsp,%rbp
   1eaf4:	sub    $0x30,%rsp
   1eaf8:	mov    0x12c(%rdi),%eax
   1eafe:	mov    %rax,%rcx
   1eb01:	and    $0x1,%ecx
   1eb04:	test   %ecx,%ecx
   1eb06:	je     1ebae <png_handle_sBIT+0xbe>
   1eb0c:	and    $0x6,%eax
   1eb0f:	test   %eax,%eax
   1eb11:	jne    1ebba <png_handle_sBIT+0xca>
   1eb17:	test   %rsi,%rsi
   1eb1a:	jne    1ebe4 <png_handle_sBIT+0xf4>
   1eb20:	movzbl 0x267(%rdi),%eax
   1eb27:	cmp    $0x3,%al
   1eb29:	jne    1ec1c <png_handle_sBIT+0x12c>
   1eb2f:	mov    $0x8,%eax
   1eb34:	mov    $0x3,%ecx
   1eb39:	lea    0xfd91(%rip),%r8        # 2e8d1 <png_pass_inc.20+0x5e>
   1eb40:	cmp    %edx,%ecx
   1eb42:	jne    1ec2f <png_handle_sBIT+0x13f>
   1eb48:	cmp    $0x4,%edx
   1eb4b:	ja     1ec2f <png_handle_sBIT+0x13f>
   1eb51:	mov    %al,-0x29(%rbp)
   1eb54:	mov    %al,-0x2a(%rbp)
   1eb57:	mov    %al,-0x2b(%rbp)
   1eb5a:	mov    %al,-0x2c(%rbp)
   1eb5d:	lea    -0x2c(%rbp),%r8
   1eb61:	mov    %rdi,%r9
   1eb64:	mov    %rcx,%rdx
   1eb67:	mov    %r15,-0x10(%rbp)
   1eb6b:	mov    %rcx,-0x28(%rbp)
   1eb6f:	mov    %rax,-0x20(%rbp)
   1eb73:	mov    %rsi,-0x8(%rbp)
   1eb77:	mov    %r8,%rsi
   1eb7a:	mov    %rdi,%r15
   1eb7d:	mov    %r9,%rdi
   1eb80:	callq  1b220 <png_crc_read>
   1eb85:	xor    %eax,%eax
   1eb87:	mov    %r15,%rdi
   1eb8a:	mov    %rax,%rsi
   1eb8d:	mov    %r15,-0x18(%rbp)
   1eb91:	mov    %rax,%r15
   1eb94:	callq  1b280 <png_crc_finish>
   1eb99:	test   %eax,%eax
   1eb9b:	jne    1ec60 <png_handle_sBIT+0x170>
   1eba1:	mov    -0x20(%rbp),%rcx
   1eba5:	mov    -0x28(%rbp),%rdx
   1eba9:	jmpq   1ec7a <png_handle_sBIT+0x18a>
   1ebae:	lea    0xfd24(%rip),%rsi        # 2e8d9 <png_pass_inc.20+0x66>
   1ebb5:	callq  5060 <png_chunk_error@plt>
   1ebba:	mov    %rdi,%rax
   1ebbd:	mov    %r15,-0x28(%rbp)
   1ebc1:	mov    %rdx,%rsi
   1ebc4:	mov    %rdi,%r15
   1ebc7:	mov    %rax,%rdi
   1ebca:	callq  1b280 <png_crc_finish>
   1ebcf:	mov    %r15,%rdi
   1ebd2:	lea    0xfceb(%rip),%rsi        # 2e8c4 <png_pass_inc.20+0x51>
   1ebd9:	callq  5230 <png_chunk_benign_error@plt>
   1ebde:	mov    -0x28(%rbp),%r15
   1ebe2:	leaveq 
   1ebe3:	retq   
   1ebe4:	mov    0x8(%rsi),%eax
   1ebe7:	and    $0x2,%eax
   1ebea:	test   %eax,%eax
   1ebec:	je     1eb20 <png_handle_sBIT+0x30>
   1ebf2:	mov    %rdi,%rax
   1ebf5:	mov    %r15,-0x28(%rbp)
   1ebf9:	mov    %rdx,%rsi
   1ebfc:	mov    %rdi,%r15
   1ebff:	mov    %rax,%rdi
   1ec02:	callq  1b280 <png_crc_finish>
   1ec07:	mov    %r15,%rdi
   1ec0a:	lea    0xfcd5(%rip),%rsi        # 2e8e6 <png_pass_inc.20+0x73>
   1ec11:	callq  5230 <png_chunk_benign_error@plt>
   1ec16:	mov    -0x28(%rbp),%r15
   1ec1a:	leaveq 
   1ec1b:	retq   
   1ec1c:	movzbl 0x26b(%rdi),%ecx
   1ec23:	movzbl 0x268(%rdi),%eax
   1ec2a:	jmpq   1eb39 <png_handle_sBIT+0x49>
   1ec2f:	mov    %rdi,%rax
   1ec32:	mov    %r15,-0x28(%rbp)
   1ec36:	mov    %r14,-0x20(%rbp)
   1ec3a:	mov    %r8,%rsi
   1ec3d:	mov    %rdx,%r14
   1ec40:	mov    %rdi,%r15
   1ec43:	mov    %rax,%rdi
   1ec46:	callq  5230 <png_chunk_benign_error@plt>
   1ec4b:	mov    %r14,%rsi
   1ec4e:	mov    %r15,%rdi
   1ec51:	callq  1b280 <png_crc_finish>
   1ec56:	mov    -0x20(%rbp),%r14
   1ec5a:	mov    -0x28(%rbp),%r15
   1ec5e:	leaveq 
   1ec5f:	retq   
   1ec60:	mov    -0x10(%rbp),%r15
   1ec64:	leaveq 
   1ec65:	retq   
   1ec66:	mov    %r15d,%eax
   1ec69:	movzbl -0x2c(%rbp,%rax,1),%eax
   1ec6e:	test   %al,%al
   1ec70:	je     1ecbc <png_handle_sBIT+0x1cc>
   1ec72:	cmp    %al,%cl
   1ec74:	jb     1ecbc <png_handle_sBIT+0x1cc>
   1ec76:	add    $0x1,%r15d
   1ec7a:	cmp    %r15d,%edx
   1ec7d:	ja     1ec66 <png_handle_sBIT+0x176>
   1ec7f:	mov    -0x18(%rbp),%rdi
   1ec83:	lea    0x2d8(%rdi),%rdx
   1ec8a:	movzbl 0x267(%rdi),%eax
   1ec91:	and    $0x2,%eax
   1ec94:	test   %eax,%eax
   1ec96:	jg     1ecd2 <png_handle_sBIT+0x1e2>
   1ec98:	movzbl -0x2c(%rbp),%eax
   1ec9c:	mov    %al,0x2db(%rdi)
   1eca2:	mov    %al,(%rdx)
   1eca4:	mov    %al,0x2d9(%rdi)
   1ecaa:	mov    %al,0x2da(%rdi)
   1ecb0:	movzbl -0x2b(%rbp),%eax
   1ecb4:	mov    %al,0x2dc(%rdi)
   1ecba:	jmp    1ecf6 <png_handle_sBIT+0x206>
   1ecbc:	mov    -0x18(%rbp),%rdi
   1ecc0:	lea    0xfc0a(%rip),%rsi        # 2e8d1 <png_pass_inc.20+0x5e>
   1ecc7:	callq  5230 <png_chunk_benign_error@plt>
   1eccc:	mov    -0x10(%rbp),%r15
   1ecd0:	leaveq 
   1ecd1:	retq   
   1ecd2:	movzbl -0x2c(%rbp),%eax
   1ecd6:	mov    %al,(%rdx)
   1ecd8:	movzbl -0x2b(%rbp),%eax
   1ecdc:	mov    %al,0x2d9(%rdi)
   1ece2:	movzbl -0x2a(%rbp),%eax
   1ece6:	mov    %al,0x2da(%rdi)
   1ecec:	movzbl -0x29(%rbp),%eax
   1ecf0:	mov    %al,0x2dc(%rdi)
   1ecf6:	mov    -0x8(%rbp),%rsi
   1ecfa:	callq  51d0 <png_set_sBIT@plt>
   1ecff:	mov    -0x10(%rbp),%r15
   1ed03:	leaveq 
   1ed04:	retq   
   1ed05:	data16 nopw %cs:0x0(%rax,%rax,1)

000000000001ed10 <png_handle_sCAL>:
   1ed10:	push   %rbp
   1ed11:	mov    %rsp,%rbp
   1ed14:	sub    $0x50,%rsp
   1ed18:	mov    0x12c(%rdi),%eax
   1ed1e:	mov    %rax,%rcx
   1ed21:	and    $0x1,%ecx
   1ed24:	test   %ecx,%ecx
   1ed26:	je     1edc2 <png_handle_sCAL+0xb2>
   1ed2c:	and    $0x4,%eax
   1ed2f:	test   %eax,%eax
   1ed31:	jne    1edce <png_handle_sCAL+0xbe>
   1ed37:	test   %rsi,%rsi
   1ed3a:	jne    1edf8 <png_handle_sCAL+0xe8>
   1ed40:	cmp    $0x3,%edx
   1ed43:	jbe    1ee32 <png_handle_sCAL+0x122>
   1ed49:	lea    0x1(%rdx),%eax
   1ed4c:	mov    %eax,%r8d
   1ed4f:	mov    $0x2,%eax
   1ed54:	mov    %rdi,%rcx
   1ed57:	mov    %r15,-0x28(%rbp)
   1ed5b:	mov    %r14,-0x20(%rbp)
   1ed5f:	mov    %rsi,-0x8(%rbp)
   1ed63:	mov    %r8,%rsi
   1ed66:	mov    %rdx,%r14
   1ed69:	mov    %rax,%rdx
   1ed6c:	mov    %rdi,%r15
   1ed6f:	mov    %rcx,%rdi
   1ed72:	callq  200b0 <png_read_buffer>
   1ed77:	test   %rax,%rax
   1ed7a:	je     1ee5c <png_handle_sCAL+0x14c>
   1ed80:	mov    %r15,%rdi
   1ed83:	mov    %rax,%rsi
   1ed86:	mov    %r14,%rdx
   1ed89:	mov    %r13,-0x18(%rbp)
   1ed8d:	mov    %rax,%r13
   1ed90:	callq  1b220 <png_crc_read>
   1ed95:	mov    %r14d,%eax
   1ed98:	movb   $0x0,0x0(%r13,%rax,1)
   1ed9e:	xor    %esi,%esi
   1eda0:	mov    %rsi,-0x38(%rbp)
   1eda4:	mov    %r15,%rdi
   1eda7:	callq  1b280 <png_crc_finish>
   1edac:	test   %eax,%eax
   1edae:	je     1ee80 <png_handle_sCAL+0x170>
   1edb4:	mov    -0x18(%rbp),%r13
   1edb8:	mov    -0x20(%rbp),%r14
   1edbc:	mov    -0x28(%rbp),%r15
   1edc0:	leaveq 
   1edc1:	retq   
   1edc2:	lea    0xfb10(%rip),%rsi        # 2e8d9 <png_pass_inc.20+0x66>
   1edc9:	callq  5060 <png_chunk_error@plt>
   1edce:	mov    %rdi,%rax
   1edd1:	mov    %r15,-0x38(%rbp)
   1edd5:	mov    %rdx,%rsi
   1edd8:	mov    %rdi,%r15
   1eddb:	mov    %rax,%rdi
   1edde:	callq  1b280 <png_crc_finish>
   1ede3:	mov    %r15,%rdi
   1ede6:	lea    0xfad7(%rip),%rsi        # 2e8c4 <png_pass_inc.20+0x51>
   1eded:	callq  5230 <png_chunk_benign_error@plt>
   1edf2:	mov    -0x38(%rbp),%r15
   1edf6:	leaveq 
   1edf7:	retq   
   1edf8:	mov    0x8(%rsi),%eax
   1edfb:	and    $0x4000,%eax
   1ee00:	test   %eax,%eax
   1ee02:	je     1ed40 <png_handle_sCAL+0x30>
   1ee08:	mov    %rdi,%rax
   1ee0b:	mov    %r15,-0x38(%rbp)
   1ee0f:	mov    %rdx,%rsi
   1ee12:	mov    %rdi,%r15
   1ee15:	mov    %rax,%rdi
   1ee18:	callq  1b280 <png_crc_finish>
   1ee1d:	mov    %r15,%rdi
   1ee20:	lea    0xfabf(%rip),%rsi        # 2e8e6 <png_pass_inc.20+0x73>
   1ee27:	callq  5230 <png_chunk_benign_error@plt>
   1ee2c:	mov    -0x38(%rbp),%r15
   1ee30:	leaveq 
   1ee31:	retq   
   1ee32:	mov    %rdi,%rax
   1ee35:	mov    %r15,-0x38(%rbp)
   1ee39:	mov    %rdx,%rsi
   1ee3c:	mov    %rdi,%r15
   1ee3f:	mov    %rax,%rdi
   1ee42:	callq  1b280 <png_crc_finish>
   1ee47:	mov    %r15,%rdi
   1ee4a:	lea    0xfa80(%rip),%rsi        # 2e8d1 <png_pass_inc.20+0x5e>
   1ee51:	callq  5230 <png_chunk_benign_error@plt>
   1ee56:	mov    -0x38(%rbp),%r15
   1ee5a:	leaveq 
   1ee5b:	retq   
   1ee5c:	lea    0xfb06(%rip),%rsi        # 2e969 <png_pass_inc.20+0xf6>
   1ee63:	mov    %r15,%rdi
   1ee66:	callq  5230 <png_chunk_benign_error@plt>
   1ee6b:	mov    %r14,%rsi
   1ee6e:	mov    %r15,%rdi
   1ee71:	callq  1b280 <png_crc_finish>
   1ee76:	mov    -0x20(%rbp),%r14
   1ee7a:	mov    -0x28(%rbp),%r15
   1ee7e:	leaveq 
   1ee7f:	retq   
   1ee80:	movzbl 0x0(%r13),%eax
   1ee85:	cmp    $0x1,%al
   1ee87:	jne    1ef7e <png_handle_sCAL+0x26e>
   1ee8d:	movq   $0x1,-0x48(%rbp)
   1ee95:	movl   $0x0,-0x3c(%rbp)
   1ee9c:	mov    %r14d,%r14d
   1ee9f:	lea    -0x3c(%rbp),%rdx
   1eea3:	lea    -0x48(%rbp),%rcx
   1eea7:	mov    %r13,%rdi
   1eeaa:	mov    %r14,%rsi
   1eead:	callq  86c0 <png_check_fp_number>
   1eeb2:	test   %eax,%eax
   1eeb4:	je     1efa3 <png_handle_sCAL+0x293>
   1eeba:	mov    -0x48(%rbp),%rdx
   1eebe:	cmp    %rdx,%r14
   1eec1:	jbe    1efa3 <png_handle_sCAL+0x293>
   1eec7:	lea    0x1(%rdx),%rax
   1eecb:	mov    %rax,-0x48(%rbp)
   1eecf:	movzbl 0x0(%r13,%rdx,1),%eax
   1eed5:	test   %al,%al
   1eed7:	jne    1efa3 <png_handle_sCAL+0x293>
   1eedd:	mov    $0x1,%ecx
   1eee2:	mov    %rcx,-0x30(%rbp)
   1eee6:	movslq -0x3c(%rbp),%rax
   1eeea:	and    $0x188,%eax
   1eeef:	cmp    $0x108,%eax
   1eef4:	je     1eef8 <png_handle_sCAL+0x1e8>
   1eef6:	xor    %ecx,%ecx
   1eef8:	test   %ecx,%ecx
   1eefa:	je     1efc0 <png_handle_sCAL+0x2b0>
   1ef00:	movl   $0x0,-0x3c(%rbp)
   1ef07:	mov    %r13,%rdi
   1ef0a:	mov    %r14,%rsi
   1ef0d:	mov    %rdx,-0x10(%rbp)
   1ef11:	lea    -0x48(%rbp),%rcx
   1ef15:	lea    -0x3c(%rbp),%rdx
   1ef19:	callq  86c0 <png_check_fp_number>
   1ef1e:	test   %eax,%eax
   1ef20:	je     1efdd <png_handle_sCAL+0x2cd>
   1ef26:	cmp    -0x48(%rbp),%r14
   1ef2a:	jne    1efdd <png_handle_sCAL+0x2cd>
   1ef30:	movslq -0x3c(%rbp),%rax
   1ef34:	and    $0x188,%eax
   1ef39:	cmp    $0x108,%eax
   1ef3e:	jne    1ef46 <png_handle_sCAL+0x236>
   1ef40:	pushq  -0x30(%rbp)
   1ef43:	popq   -0x38(%rbp)
   1ef46:	mov    -0x38(%rbp),%rax
   1ef4a:	test   %eax,%eax
   1ef4c:	je     1effa <png_handle_sCAL+0x2ea>
   1ef52:	mov    -0x10(%rbp),%rax
   1ef56:	lea    0x1(%r13,%rax,1),%r8
   1ef5b:	movzbl 0x0(%r13),%edx
   1ef60:	lea    0x1(%r13),%rcx
   1ef64:	mov    %r15,%rdi
   1ef67:	mov    -0x8(%rbp),%rsi
   1ef6b:	callq  5660 <png_set_sCAL_s@plt>
   1ef70:	mov    -0x18(%rbp),%r13
   1ef74:	mov    -0x20(%rbp),%r14
   1ef78:	mov    -0x28(%rbp),%r15
   1ef7c:	leaveq 
   1ef7d:	retq   
   1ef7e:	cmp    $0x2,%al
   1ef80:	je     1ee8d <png_handle_sCAL+0x17d>
   1ef86:	mov    %r15,%rdi
   1ef89:	lea    0xfb60(%rip),%rsi        # 2eaf0 <png_pass_inc.20+0x27d>
   1ef90:	callq  5230 <png_chunk_benign_error@plt>
   1ef95:	mov    -0x18(%rbp),%r13
   1ef99:	mov    -0x20(%rbp),%r14
   1ef9d:	mov    -0x28(%rbp),%r15
   1efa1:	leaveq 
   1efa2:	retq   
   1efa3:	mov    %r15,%rdi
   1efa6:	lea    0xfb50(%rip),%rsi        # 2eafd <png_pass_inc.20+0x28a>
   1efad:	callq  5230 <png_chunk_benign_error@plt>
   1efb2:	mov    -0x18(%rbp),%r13
   1efb6:	mov    -0x20(%rbp),%r14
   1efba:	mov    -0x28(%rbp),%r15
   1efbe:	leaveq 
   1efbf:	retq   
   1efc0:	mov    %r15,%rdi
   1efc3:	lea    0xfb44(%rip),%rsi        # 2eb0e <png_pass_inc.20+0x29b>
   1efca:	callq  5230 <png_chunk_benign_error@plt>
   1efcf:	mov    -0x18(%rbp),%r13
   1efd3:	mov    -0x20(%rbp),%r14
   1efd7:	mov    -0x28(%rbp),%r15
   1efdb:	leaveq 
   1efdc:	retq   
   1efdd:	mov    %r15,%rdi
   1efe0:	lea    0xfb3a(%rip),%rsi        # 2eb21 <png_pass_inc.20+0x2ae>
   1efe7:	callq  5230 <png_chunk_benign_error@plt>
   1efec:	mov    -0x18(%rbp),%r13
   1eff0:	mov    -0x20(%rbp),%r14
   1eff4:	mov    -0x28(%rbp),%r15
   1eff8:	leaveq 
   1eff9:	retq   
   1effa:	mov    %r15,%rdi
   1effd:	lea    0xfb2f(%rip),%rsi        # 2eb33 <png_pass_inc.20+0x2c0>
   1f004:	callq  5230 <png_chunk_benign_error@plt>
   1f009:	mov    -0x18(%rbp),%r13
   1f00d:	mov    -0x20(%rbp),%r14
   1f011:	mov    -0x28(%rbp),%r15
   1f015:	leaveq 
   1f016:	retq   
   1f017:	nopw   0x0(%rax,%rax,1)

000000000001f020 <png_handle_sPLT>:
   1f020:	push   %rbp
   1f021:	mov    %rsp,%rbp
   1f024:	sub    $0x40,%rsp
   1f028:	mov    0x424(%rdi),%eax
   1f02e:	test   %eax,%eax
   1f030:	jne    1f0ba <png_handle_sPLT+0x9a>
   1f036:	mov    0x12c(%rdi),%eax
   1f03c:	mov    %rax,%rcx
   1f03f:	and    $0x1,%ecx
   1f042:	test   %ecx,%ecx
   1f044:	je     1f10a <png_handle_sPLT+0xea>
   1f04a:	and    $0x4,%eax
   1f04d:	test   %eax,%eax
   1f04f:	jne    1f116 <png_handle_sPLT+0xf6>
   1f055:	lea    0x1(%rdx),%eax
   1f058:	mov    %eax,%ecx
   1f05a:	mov    $0x2,%r8d
   1f060:	mov    %rdi,%rax
   1f063:	mov    %r14,-0x10(%rbp)
   1f067:	mov    %r15,-0x18(%rbp)
   1f06b:	mov    %rsi,-0x8(%rbp)
   1f06f:	mov    %rcx,%rsi
   1f072:	mov    %rdx,%r14
   1f075:	mov    %r8,%rdx
   1f078:	mov    %rdi,%r15
   1f07b:	mov    %rax,%rdi
   1f07e:	callq  200b0 <png_read_buffer>
   1f083:	test   %rax,%rax
   1f086:	je     1f140 <png_handle_sPLT+0x120>
   1f08c:	mov    %r15,%rdi
   1f08f:	mov    %rax,%rsi
   1f092:	mov    %r14,%rdx
   1f095:	mov    %rax,-0x20(%rbp)
   1f099:	callq  1b220 <png_crc_read>
   1f09e:	xor    %esi,%esi
   1f0a0:	mov    %r15,%rdi
   1f0a3:	callq  1b280 <png_crc_finish>
   1f0a8:	test   %eax,%eax
   1f0aa:	je     1f164 <png_handle_sPLT+0x144>
   1f0b0:	mov    -0x18(%rbp),%r15
   1f0b4:	mov    -0x10(%rbp),%r14
   1f0b8:	leaveq 
   1f0b9:	retq   
   1f0ba:	cmp    $0x1,%eax
   1f0bd:	je     1f174 <png_handle_sPLT+0x154>
   1f0c3:	add    $0xffffffff,%eax
   1f0c6:	mov    %eax,0x424(%rdi)
   1f0cc:	cmp    $0x1,%eax
   1f0cf:	jne    1f036 <png_handle_sPLT+0x16>
   1f0d5:	lea    0xfa6b(%rip),%rsi        # 2eb47 <png_pass_inc.20+0x2d4>
   1f0dc:	mov    %rdi,%rax
   1f0df:	mov    %r14,-0x18(%rbp)
   1f0e3:	mov    %r15,-0x20(%rbp)
   1f0e7:	mov    %rdx,%r14
   1f0ea:	mov    %rdi,%r15
   1f0ed:	mov    %rax,%rdi
   1f0f0:	callq  5390 <png_warning@plt>
   1f0f5:	mov    %r14,%rsi
   1f0f8:	mov    %r15,%rdi
   1f0fb:	callq  1b280 <png_crc_finish>
   1f100:	mov    -0x20(%rbp),%r15
   1f104:	mov    -0x18(%rbp),%r14
   1f108:	leaveq 
   1f109:	retq   
   1f10a:	lea    0xf7c8(%rip),%rsi        # 2e8d9 <png_pass_inc.20+0x66>
   1f111:	callq  5060 <png_chunk_error@plt>
   1f116:	mov    %rdi,%rax
   1f119:	mov    %r15,-0x20(%rbp)
   1f11d:	mov    %rdx,%rsi
   1f120:	mov    %rdi,%r15
   1f123:	mov    %rax,%rdi
   1f126:	callq  1b280 <png_crc_finish>
   1f12b:	mov    %r15,%rdi
   1f12e:	lea    0xf78f(%rip),%rsi        # 2e8c4 <png_pass_inc.20+0x51>
   1f135:	callq  5230 <png_chunk_benign_error@plt>
   1f13a:	mov    -0x20(%rbp),%r15
   1f13e:	leaveq 
   1f13f:	retq   
   1f140:	mov    %r14,%rsi
   1f143:	mov    %r15,%rdi
   1f146:	callq  1b280 <png_crc_finish>
   1f14b:	mov    %r15,%rdi
   1f14e:	lea    0xf814(%rip),%rsi        # 2e969 <png_pass_inc.20+0xf6>
   1f155:	callq  5230 <png_chunk_benign_error@plt>
   1f15a:	mov    -0x18(%rbp),%r15
   1f15e:	mov    -0x10(%rbp),%r14
   1f162:	leaveq 
   1f163:	retq   
   1f164:	mov    %r14d,%eax
   1f167:	mov    -0x20(%rbp),%rdi
   1f16b:	movb   $0x0,(%rdi,%rax,1)
   1f16f:	mov    %rdi,%rdx
   1f172:	jmp    1f181 <png_handle_sPLT+0x161>
   1f174:	mov    %rdx,%rsi
   1f177:	callq  1b280 <png_crc_finish>
   1f17c:	leaveq 
   1f17d:	retq   
   1f17e:	mov    %rcx,%rdx
   1f181:	lea    0x1(%rdx),%rcx
   1f185:	movzbl (%rdx),%eax
   1f188:	test   %al,%al
   1f18a:	jne    1f17e <png_handle_sPLT+0x15e>
   1f18c:	cmp    $0x1,%r14d
   1f190:	jbe    1f1ae <png_handle_sPLT+0x18e>
   1f192:	lea    -0x2(%r14),%eax
   1f196:	mov    %eax,%eax
   1f198:	add    %rdi,%rax
   1f19b:	cmp    %rax,%rcx
   1f19e:	ja     1f1ae <png_handle_sPLT+0x18e>
   1f1a0:	movzbl (%rcx),%eax
   1f1a3:	cmp    $0x8,%al
   1f1a5:	je     1f1c7 <png_handle_sPLT+0x1a7>
   1f1a7:	mov    $0xa,%ecx
   1f1ac:	jmp    1f1cc <png_handle_sPLT+0x1ac>
   1f1ae:	mov    %r15,%rdi
   1f1b1:	lea    0xf9b0(%rip),%rsi        # 2eb68 <png_pass_inc.20+0x2f5>
   1f1b8:	callq  5390 <png_warning@plt>
   1f1bd:	mov    -0x18(%rbp),%r15
   1f1c1:	mov    -0x10(%rbp),%r14
   1f1c5:	leaveq 
   1f1c6:	retq   
   1f1c7:	mov    $0x6,%ecx
   1f1cc:	mov    %al,-0x38(%rbp)
   1f1cf:	lea    0x2(%rdx),%rsi
   1f1d3:	mov    %rsi,%rax
   1f1d6:	sub    %rdi,%rax
   1f1d9:	sub    %eax,%r14d
   1f1dc:	xor    %edx,%edx
   1f1de:	mov    %r14,%rax
   1f1e1:	div    %ecx
   1f1e3:	test   %edx,%edx
   1f1e5:	jne    1f214 <png_handle_sPLT+0x1f4>
   1f1e7:	mov    %r14,%rax
   1f1ea:	mov    %rsi,%r14
   1f1ed:	xor    %edx,%edx
   1f1ef:	div    %ecx
   1f1f1:	mov    %eax,-0x28(%rbp)
   1f1f4:	movslq %eax,%rax
   1f1f7:	lea    (%rax,%rax,4),%rax
   1f1fb:	lea    (%rax,%rax,1),%rsi
   1f1ff:	mov    %r15,%rdi
   1f202:	callq  5150 <png_malloc_warn@plt>
   1f207:	mov    %rax,-0x30(%rbp)
   1f20b:	test   %rax,%rax
   1f20e:	je     1f22d <png_handle_sPLT+0x20d>
   1f210:	xor    %eax,%eax
   1f212:	jmp    1f283 <png_handle_sPLT+0x263>
   1f214:	mov    %r15,%rdi
   1f217:	lea    0xf95f(%rip),%rsi        # 2eb7d <png_pass_inc.20+0x30a>
   1f21e:	callq  5390 <png_warning@plt>
   1f223:	mov    -0x18(%rbp),%r15
   1f227:	mov    -0x10(%rbp),%r14
   1f22b:	leaveq 
   1f22c:	retq   
   1f22d:	mov    %r15,%rdi
   1f230:	lea    0xf960(%rip),%rsi        # 2eb97 <png_pass_inc.20+0x324>
   1f237:	callq  5390 <png_warning@plt>
   1f23c:	mov    -0x18(%rbp),%r15
   1f240:	mov    -0x10(%rbp),%r14
   1f244:	leaveq 
   1f245:	retq   
   1f246:	movzbl (%r14),%ecx
   1f24a:	mov    %cx,(%rsi)
   1f24d:	movzbl 0x1(%r14),%ecx
   1f252:	mov    %cx,0x2(%rsi)
   1f256:	movzbl 0x2(%r14),%ecx
   1f25b:	mov    %cx,0x4(%rsi)
   1f25f:	movzbl 0x3(%r14),%ecx
   1f264:	mov    %cx,0x6(%rsi)
   1f268:	lea    0x4(%r14),%rcx
   1f26c:	movzbl 0x1(%rcx),%edi
   1f270:	movzbl (%rcx),%edx
   1f273:	shl    $0x8,%edx
   1f276:	add    %edi,%edx
   1f278:	mov    %dx,0x8(%rsi)
   1f27c:	add    $0x1,%eax
   1f27f:	lea    0x2(%rcx),%r14
   1f283:	movslq -0x28(%rbp),%rcx
   1f287:	cmp    %eax,%ecx
   1f289:	jg     1f2be <png_handle_sPLT+0x29e>
   1f28b:	mov    -0x20(%rbp),%rax
   1f28f:	mov    %rax,-0x40(%rbp)
   1f293:	lea    -0x40(%rbp),%rdx
   1f297:	mov    $0x1,%ecx
   1f29c:	mov    %r15,%rdi
   1f29f:	mov    -0x8(%rbp),%rsi
   1f2a3:	callq  52a0 <png_set_sPLT@plt>
   1f2a8:	mov    %r15,%rdi
   1f2ab:	mov    -0x30(%rbp),%rsi
   1f2af:	callq  5790 <png_free@plt>
   1f2b4:	mov    -0x18(%rbp),%r15
   1f2b8:	mov    -0x10(%rbp),%r14
   1f2bc:	leaveq 
   1f2bd:	retq   
   1f2be:	movslq %eax,%rcx
   1f2c1:	lea    (%rcx,%rcx,4),%rcx
   1f2c5:	lea    (%rcx,%rcx,1),%rsi
   1f2c9:	add    -0x30(%rbp),%rsi
   1f2cd:	movzbl -0x38(%rbp),%ecx
   1f2d1:	cmp    $0x8,%cl
   1f2d4:	je     1f246 <png_handle_sPLT+0x226>
   1f2da:	movzbl 0x1(%r14),%edx
   1f2df:	movzbl (%r14),%ecx
   1f2e3:	shl    $0x8,%ecx
   1f2e6:	add    %edx,%ecx
   1f2e8:	mov    %cx,(%rsi)
   1f2eb:	movzbl 0x3(%r14),%edx
   1f2f0:	movzbl 0x2(%r14),%ecx
   1f2f5:	shl    $0x8,%ecx
   1f2f8:	add    %edx,%ecx
   1f2fa:	mov    %cx,0x2(%rsi)
   1f2fe:	movzbl 0x5(%r14),%edx
   1f303:	movzbl 0x4(%r14),%ecx
   1f308:	shl    $0x8,%ecx
   1f30b:	add    %edx,%ecx
   1f30d:	mov    %cx,0x4(%rsi)
   1f311:	movzbl 0x7(%r14),%edx
   1f316:	movzbl 0x6(%r14),%ecx
   1f31b:	shl    $0x8,%ecx
   1f31e:	add    %edx,%ecx
   1f320:	mov    %cx,0x6(%rsi)
   1f324:	lea    0x8(%r14),%rcx
   1f328:	jmpq   1f26c <png_handle_sPLT+0x24c>
   1f32d:	nopl   (%rax)

000000000001f330 <png_handle_sRGB>:
   1f330:	push   %rbp
   1f331:	mov    %rsp,%rbp
   1f334:	sub    $0x20,%rsp
   1f338:	mov    0x12c(%rdi),%eax
   1f33e:	mov    %rax,%rcx
   1f341:	and    $0x1,%ecx
   1f344:	test   %ecx,%ecx
   1f346:	je     1f38a <png_handle_sRGB+0x5a>
   1f348:	and    $0x6,%eax
   1f34b:	test   %eax,%eax
   1f34d:	jne    1f396 <png_handle_sRGB+0x66>
   1f34f:	cmp    $0x1,%edx
   1f352:	jne    1f3c0 <png_handle_sRGB+0x90>
   1f354:	lea    -0x11(%rbp),%rcx
   1f358:	mov    $0x1,%edx
   1f35d:	mov    %rdi,%rax
   1f360:	mov    %r15,-0x10(%rbp)
   1f364:	mov    %rsi,-0x8(%rbp)
   1f368:	mov    %rcx,%rsi
   1f36b:	mov    %rdi,%r15
   1f36e:	mov    %rax,%rdi
   1f371:	callq  1b220 <png_crc_read>
   1f376:	xor    %esi,%esi
   1f378:	mov    %r15,%rdi
   1f37b:	callq  1b280 <png_crc_finish>
   1f380:	test   %eax,%eax
   1f382:	je     1f3ea <png_handle_sRGB+0xba>
   1f384:	mov    -0x10(%rbp),%r15
   1f388:	leaveq 
   1f389:	retq   
   1f38a:	lea    0xf548(%rip),%rsi        # 2e8d9 <png_pass_inc.20+0x66>
   1f391:	callq  5060 <png_chunk_error@plt>
   1f396:	mov    %rdi,%rax
   1f399:	mov    %r15,-0x10(%rbp)
   1f39d:	mov    %rdx,%rsi
   1f3a0:	mov    %rdi,%r15
   1f3a3:	mov    %rax,%rdi
   1f3a6:	callq  1b280 <png_crc_finish>
   1f3ab:	mov    %r15,%rdi
   1f3ae:	lea    0xf50f(%rip),%rsi        # 2e8c4 <png_pass_inc.20+0x51>
   1f3b5:	callq  5230 <png_chunk_benign_error@plt>
   1f3ba:	mov    -0x10(%rbp),%r15
   1f3be:	leaveq 
   1f3bf:	retq   
   1f3c0:	mov    %rdi,%rax
   1f3c3:	mov    %r15,-0x10(%rbp)
   1f3c7:	mov    %rdx,%rsi
   1f3ca:	mov    %rdi,%r15
   1f3cd:	mov    %rax,%rdi
   1f3d0:	callq  1b280 <png_crc_finish>
   1f3d5:	mov    %r15,%rdi
   1f3d8:	lea    0xf4f2(%rip),%rsi        # 2e8d1 <png_pass_inc.20+0x5e>
   1f3df:	callq  5230 <png_chunk_benign_error@plt>
   1f3e4:	mov    -0x10(%rbp),%r15
   1f3e8:	leaveq 
   1f3e9:	retq   
   1f3ea:	movzwl 0x4e2(%r15),%eax
   1f3f2:	mov    %rax,%rcx
   1f3f5:	and    $0x8000,%ecx
   1f3fb:	test   %ecx,%ecx
   1f3fd:	jle    1f405 <png_handle_sRGB+0xd5>
   1f3ff:	mov    -0x10(%rbp),%r15
   1f403:	leaveq 
   1f404:	retq   
   1f405:	mov    %rax,%rcx
   1f408:	and    $0x4,%ecx
   1f40b:	test   %ecx,%ecx
   1f40d:	jg     1f434 <png_handle_sRGB+0x104>
   1f40f:	lea    0x498(%r15),%rsi
   1f416:	movzbl -0x11(%rbp),%edx
   1f41a:	mov    %r15,%rdi
   1f41d:	callq  71f0 <png_colorspace_set_sRGB>
   1f422:	mov    %r15,%rdi
   1f425:	mov    -0x8(%rbp),%rsi
   1f429:	callq  7020 <png_colorspace_sync>
   1f42e:	mov    -0x10(%rbp),%r15
   1f432:	leaveq 
   1f433:	retq   
   1f434:	or     $0x8000,%ax
   1f438:	mov    %ax,0x4e2(%r15)
   1f440:	mov    %r15,%rdi
   1f443:	mov    -0x8(%rbp),%rsi
   1f447:	callq  7020 <png_colorspace_sync>
   1f44c:	mov    %r15,%rdi
   1f44f:	lea    0xf5fd(%rip),%rsi        # 2ea53 <png_pass_inc.20+0x1e0>
   1f456:	callq  5230 <png_chunk_benign_error@plt>
   1f45b:	mov    -0x10(%rbp),%r15
   1f45f:	leaveq 
   1f460:	retq   
   1f461:	data16 nopw %cs:0x0(%rax,%rax,1)
   1f46c:	nopl   0x0(%rax)

000000000001f470 <png_handle_tEXt>:
   1f470:	push   %rbp
   1f471:	mov    %rsp,%rbp
   1f474:	sub    $0x60,%rsp
   1f478:	mov    0x424(%rdi),%eax
   1f47e:	test   %eax,%eax
   1f480:	je     1f4c3 <png_handle_tEXt+0x53>
   1f482:	cmp    $0x1,%eax
   1f485:	je     1f543 <png_handle_tEXt+0xd3>
   1f48b:	add    $0xffffffff,%eax
   1f48e:	mov    %eax,0x424(%rdi)
   1f494:	cmp    $0x1,%eax
   1f497:	jne    1f4c3 <png_handle_tEXt+0x53>
   1f499:	mov    %rdi,%rax
   1f49c:	mov    %r15,-0x20(%rbp)
   1f4a0:	mov    %rdx,%rsi
   1f4a3:	mov    %rdi,%r15
   1f4a6:	mov    %rax,%rdi
   1f4a9:	callq  1b280 <png_crc_finish>
   1f4ae:	mov    %r15,%rdi
   1f4b1:	lea    0xf5ad(%rip),%rsi        # 2ea65 <png_pass_inc.20+0x1f2>
   1f4b8:	callq  5230 <png_chunk_benign_error@plt>
   1f4bd:	mov    -0x20(%rbp),%r15
   1f4c1:	leaveq 
   1f4c2:	retq   
   1f4c3:	mov    0x12c(%rdi),%eax
   1f4c9:	mov    %rax,%rcx
   1f4cc:	and    $0x1,%ecx
   1f4cf:	test   %ecx,%ecx
   1f4d1:	je     1f54d <png_handle_tEXt+0xdd>
   1f4d3:	mov    %rax,%rcx
   1f4d6:	and    $0x4,%ecx
   1f4d9:	test   %ecx,%ecx
   1f4db:	je     1f4e6 <png_handle_tEXt+0x76>
   1f4dd:	or     $0x8,%eax
   1f4e0:	mov    %eax,0x12c(%rdi)
   1f4e6:	lea    0x1(%rdx),%eax
   1f4e9:	mov    %eax,%r8d
   1f4ec:	mov    $0x1,%eax
   1f4f1:	mov    %rdi,%rcx
   1f4f4:	mov    %r14,-0x8(%rbp)
   1f4f8:	mov    %r15,-0x10(%rbp)
   1f4fc:	mov    %rsi,-0x18(%rbp)
   1f500:	mov    %r8,%rsi
   1f503:	mov    %rdx,%r14
   1f506:	mov    %rax,%rdx
   1f509:	mov    %rdi,%r15
   1f50c:	mov    %rcx,%rdi
   1f50f:	callq  200b0 <png_read_buffer>
   1f514:	test   %rax,%rax
   1f517:	je     1f559 <png_handle_tEXt+0xe9>
   1f519:	mov    %r15,%rdi
   1f51c:	mov    %rax,%rsi
   1f51f:	mov    %r14,%rdx
   1f522:	mov    %rax,-0x20(%rbp)
   1f526:	callq  1b220 <png_crc_read>
   1f52b:	xor    %esi,%esi
   1f52d:	mov    %r15,%rdi
   1f530:	callq  1b280 <png_crc_finish>
   1f535:	test   %eax,%eax
   1f537:	je     1f572 <png_handle_tEXt+0x102>
   1f539:	mov    -0x10(%rbp),%r15
   1f53d:	mov    -0x8(%rbp),%r14
   1f541:	leaveq 
   1f542:	retq   
   1f543:	mov    %rdx,%rsi
   1f546:	callq  1b280 <png_crc_finish>
   1f54b:	leaveq 
   1f54c:	retq   
   1f54d:	lea    0xf385(%rip),%rsi        # 2e8d9 <png_pass_inc.20+0x66>
   1f554:	callq  5060 <png_chunk_error@plt>
   1f559:	mov    %r15,%rdi
   1f55c:	lea    0xf406(%rip),%rsi        # 2e969 <png_pass_inc.20+0xf6>
   1f563:	callq  5230 <png_chunk_benign_error@plt>
   1f568:	mov    -0x10(%rbp),%r15
   1f56c:	mov    -0x8(%rbp),%r14
   1f570:	leaveq 
   1f571:	retq   
   1f572:	mov    %r14d,%eax
   1f575:	mov    -0x20(%rbp),%rdx
   1f579:	lea    (%rdx,%rax,1),%rcx
   1f57d:	movb   $0x0,(%rcx)
   1f580:	mov    %rdx,%rdi
   1f583:	jmp    1f589 <png_handle_tEXt+0x119>
   1f585:	add    $0x1,%rdi
   1f589:	movsbq (%rdi),%rax
   1f58d:	test   %al,%al
   1f58f:	jne    1f585 <png_handle_tEXt+0x115>
   1f591:	cmp    %rcx,%rdi
   1f594:	je     1f59a <png_handle_tEXt+0x12a>
   1f596:	add    $0x1,%rdi
   1f59a:	movl   $0xffffffff,-0x58(%rbp)
   1f5a1:	mov    %rdx,-0x50(%rbp)
   1f5a5:	movq   $0x0,-0x30(%rbp)
   1f5ad:	movq   $0x0,-0x28(%rbp)
   1f5b5:	movq   $0x0,-0x38(%rbp)
   1f5bd:	mov    %rdi,-0x48(%rbp)
   1f5c1:	callq  5260 <strlen@plt>
   1f5c6:	mov    %rax,-0x40(%rbp)
   1f5ca:	lea    -0x58(%rbp),%rdx
   1f5ce:	mov    %r15,%rdi
   1f5d1:	mov    $0x1,%ecx
   1f5d6:	mov    -0x18(%rbp),%rsi
   1f5da:	callq  22df0 <png_set_text_2>
   1f5df:	test   %eax,%eax
   1f5e1:	jne    1f5ed <png_handle_tEXt+0x17d>
   1f5e3:	mov    -0x10(%rbp),%r15
   1f5e7:	mov    -0x8(%rbp),%r14
   1f5eb:	leaveq 
   1f5ec:	retq   
   1f5ed:	mov    %r15,%rdi
   1f5f0:	lea    0xf5c4(%rip),%rsi        # 2ebbb <png_pass_inc.20+0x348>
   1f5f7:	callq  5390 <png_warning@plt>
   1f5fc:	mov    -0x10(%rbp),%r15
   1f600:	mov    -0x8(%rbp),%r14
   1f604:	leaveq 
   1f605:	retq   
   1f606:	nopw   %cs:0x0(%rax,%rax,1)

000000000001f610 <png_handle_tIME>:
   1f610:	push   %rbp
   1f611:	mov    %rsp,%rbp
   1f614:	sub    $0x20,%rsp
   1f618:	mov    0x12c(%rdi),%eax
   1f61e:	and    $0x1,%eax
   1f621:	test   %eax,%eax
   1f623:	je     1f67e <png_handle_tIME+0x6e>
   1f625:	test   %rsi,%rsi
   1f628:	jne    1f68a <png_handle_tIME+0x7a>
   1f62a:	mov    0x12c(%rdi),%eax
   1f630:	mov    %rax,%rcx
   1f633:	and    $0x4,%ecx
   1f636:	test   %ecx,%ecx
   1f638:	je     1f643 <png_handle_tIME+0x33>
   1f63a:	or     $0x8,%eax
   1f63d:	mov    %eax,0x12c(%rdi)
   1f643:	cmp    $0x7,%edx
   1f646:	jne    1f6c0 <png_handle_tIME+0xb0>
   1f648:	lea    -0x1f(%rbp),%rax
   1f64c:	mov    $0x7,%edx
   1f651:	mov    %rdi,%rcx
   1f654:	mov    %r15,-0x10(%rbp)
   1f658:	mov    %rsi,-0x8(%rbp)
   1f65c:	mov    %rax,%rsi
   1f65f:	mov    %rdi,%r15
   1f662:	mov    %rcx,%rdi
   1f665:	callq  1b220 <png_crc_read>
   1f66a:	xor    %esi,%esi
   1f66c:	mov    %r15,%rdi
   1f66f:	callq  1b280 <png_crc_finish>
   1f674:	test   %eax,%eax
   1f676:	je     1f6ea <png_handle_tIME+0xda>
   1f678:	mov    -0x10(%rbp),%r15
   1f67c:	leaveq 
   1f67d:	retq   
   1f67e:	lea    0xf254(%rip),%rsi        # 2e8d9 <png_pass_inc.20+0x66>
   1f685:	callq  5060 <png_chunk_error@plt>
   1f68a:	mov    0x8(%rsi),%eax
   1f68d:	and    $0x200,%eax
   1f692:	test   %eax,%eax
   1f694:	je     1f62a <png_handle_tIME+0x1a>
   1f696:	mov    %rdi,%rax
   1f699:	mov    %r15,-0x10(%rbp)
   1f69d:	mov    %rdx,%rsi
   1f6a0:	mov    %rdi,%r15
   1f6a3:	mov    %rax,%rdi
   1f6a6:	callq  1b280 <png_crc_finish>
   1f6ab:	mov    %r15,%rdi
   1f6ae:	lea    0xf231(%rip),%rsi        # 2e8e6 <png_pass_inc.20+0x73>
   1f6b5:	callq  5230 <png_chunk_benign_error@plt>
   1f6ba:	mov    -0x10(%rbp),%r15
   1f6be:	leaveq 
   1f6bf:	retq   
   1f6c0:	mov    %rdi,%rax
   1f6c3:	mov    %r15,-0x10(%rbp)
   1f6c7:	mov    %rdx,%rsi
   1f6ca:	mov    %rdi,%r15
   1f6cd:	mov    %rax,%rdi
   1f6d0:	callq  1b280 <png_crc_finish>
   1f6d5:	mov    %r15,%rdi
   1f6d8:	lea    0xf1f2(%rip),%rsi        # 2e8d1 <png_pass_inc.20+0x5e>
   1f6df:	callq  5230 <png_chunk_benign_error@plt>
   1f6e4:	mov    -0x10(%rbp),%r15
   1f6e8:	leaveq 
   1f6e9:	retq   
   1f6ea:	movzbl -0x19(%rbp),%eax
   1f6ee:	mov    %al,-0x12(%rbp)
   1f6f1:	movzbl -0x1a(%rbp),%eax
   1f6f5:	mov    %al,-0x13(%rbp)
   1f6f8:	movzbl -0x1b(%rbp),%eax
   1f6fc:	mov    %al,-0x14(%rbp)
   1f6ff:	movzbl -0x1c(%rbp),%eax
   1f703:	mov    %al,-0x15(%rbp)
   1f706:	movzbl -0x1d(%rbp),%eax
   1f70a:	mov    %al,-0x16(%rbp)
   1f70d:	movzbl -0x1e(%rbp),%ecx
   1f711:	movzbl -0x1f(%rbp),%eax
   1f715:	shl    $0x8,%eax
   1f718:	add    %ecx,%eax
   1f71a:	mov    %ax,-0x18(%rbp)
   1f71e:	mov    %r15,%rdi
   1f721:	lea    -0x18(%rbp),%rdx
   1f725:	mov    -0x8(%rbp),%rsi
   1f729:	callq  54e0 <png_set_tIME@plt>
   1f72e:	mov    -0x10(%rbp),%r15
   1f732:	leaveq 
   1f733:	retq   
   1f734:	data16 nopw %cs:0x0(%rax,%rax,1)
   1f73f:	nop

000000000001f740 <png_handle_tRNS>:
   1f740:	push   %rbp
   1f741:	mov    %rsp,%rbp
   1f744:	sub    $0x120,%rsp
   1f74b:	mov    0x12c(%rdi),%eax
   1f751:	mov    %rax,%rcx
   1f754:	and    $0x1,%ecx
   1f757:	test   %ecx,%ecx
   1f759:	je     1f7b0 <png_handle_tRNS+0x70>
   1f75b:	and    $0x4,%eax
   1f75e:	test   %eax,%eax
   1f760:	jne    1f7bc <png_handle_tRNS+0x7c>
   1f762:	test   %rsi,%rsi
   1f765:	jne    1f7e6 <png_handle_tRNS+0xa6>
   1f767:	movzbl 0x267(%rdi),%eax
   1f76e:	test   %al,%al
   1f770:	je     1f81e <png_handle_tRNS+0xde>
   1f776:	cmp    $0x2,%al
   1f778:	je     1f8a1 <png_handle_tRNS+0x161>
   1f77e:	cmp    $0x3,%al
   1f780:	je     1f91a <png_handle_tRNS+0x1da>
   1f786:	mov    %rdi,%rax
   1f789:	mov    %r15,-0x18(%rbp)
   1f78d:	mov    %rdx,%rsi
   1f790:	mov    %rdi,%r15
   1f793:	mov    %rax,%rdi
   1f796:	callq  1b280 <png_crc_finish>
   1f79b:	mov    %r15,%rdi
   1f79e:	lea    0xf440(%rip),%rsi        # 2ebe5 <png_pass_inc.20+0x372>
   1f7a5:	callq  5230 <png_chunk_benign_error@plt>
   1f7aa:	mov    -0x18(%rbp),%r15
   1f7ae:	leaveq 
   1f7af:	retq   
   1f7b0:	lea    0xf122(%rip),%rsi        # 2e8d9 <png_pass_inc.20+0x66>
   1f7b7:	callq  5060 <png_chunk_error@plt>
   1f7bc:	mov    %rdi,%rax
   1f7bf:	mov    %r15,-0x18(%rbp)
   1f7c3:	mov    %rdx,%rsi
   1f7c6:	mov    %rdi,%r15
   1f7c9:	mov    %rax,%rdi
   1f7cc:	callq  1b280 <png_crc_finish>
   1f7d1:	mov    %r15,%rdi
   1f7d4:	lea    0xf0e9(%rip),%rsi        # 2e8c4 <png_pass_inc.20+0x51>
   1f7db:	callq  5230 <png_chunk_benign_error@plt>
   1f7e0:	mov    -0x18(%rbp),%r15
   1f7e4:	leaveq 
   1f7e5:	retq   
   1f7e6:	mov    0x8(%rsi),%eax
   1f7e9:	and    $0x10,%eax
   1f7ec:	test   %eax,%eax
   1f7ee:	je     1f767 <png_handle_tRNS+0x27>
   1f7f4:	mov    %rdi,%rax
   1f7f7:	mov    %r15,-0x18(%rbp)
   1f7fb:	mov    %rdx,%rsi
   1f7fe:	mov    %rdi,%r15
   1f801:	mov    %rax,%rdi
   1f804:	callq  1b280 <png_crc_finish>
   1f809:	mov    %r15,%rdi
   1f80c:	lea    0xf0d3(%rip),%rsi        # 2e8e6 <png_pass_inc.20+0x73>
   1f813:	callq  5230 <png_chunk_benign_error@plt>
   1f818:	mov    -0x18(%rbp),%r15
   1f81c:	leaveq 
   1f81d:	retq   
   1f81e:	cmp    $0x2,%edx
   1f821:	jne    1f98c <png_handle_tRNS+0x24c>
   1f827:	lea    -0x20(%rbp),%rax
   1f82b:	mov    $0x2,%edx
   1f830:	mov    %rdi,%rcx
   1f833:	mov    %r15,-0x18(%rbp)
   1f837:	mov    %rsi,-0x8(%rbp)
   1f83b:	mov    %rax,%rsi
   1f83e:	mov    %rdi,%r15
   1f841:	mov    %rcx,%rdi
   1f844:	callq  1b220 <png_crc_read>
   1f849:	movw   $0x1,0x260(%r15)
   1f853:	movzbl -0x1f(%rbp),%ecx
   1f857:	movzbl -0x20(%rbp),%eax
   1f85b:	shl    $0x8,%eax
   1f85e:	add    %ecx,%eax
   1f860:	mov    %ax,0x2f8(%r15)
   1f868:	xor    %esi,%esi
   1f86a:	mov    %r15,%rdi
   1f86d:	callq  1b280 <png_crc_finish>
   1f872:	test   %eax,%eax
   1f874:	jne    1f9b6 <png_handle_tRNS+0x276>
   1f87a:	mov    %r15,%rdi
   1f87d:	lea    -0x120(%rbp),%rdx
   1f884:	movzwl 0x260(%rdi),%ecx
   1f88b:	lea    0x2f0(%rdi),%r8
   1f892:	mov    -0x8(%rbp),%rsi
   1f896:	callq  54f0 <png_set_tRNS@plt>
   1f89b:	mov    -0x18(%rbp),%r15
   1f89f:	leaveq 
   1f8a0:	retq   
   1f8a1:	cmp    $0x6,%edx
   1f8a4:	jne    1f9c6 <png_handle_tRNS+0x286>
   1f8aa:	lea    -0x1e(%rbp),%rax
   1f8ae:	mov    $0x6,%edx
   1f8b3:	mov    %rdi,%rcx
   1f8b6:	mov    %r15,-0x18(%rbp)
   1f8ba:	mov    %rsi,-0x8(%rbp)
   1f8be:	mov    %rax,%rsi
   1f8c1:	mov    %rdi,%r15
   1f8c4:	mov    %rcx,%rdi
   1f8c7:	callq  1b220 <png_crc_read>
   1f8cc:	movw   $0x1,0x260(%r15)
   1f8d6:	movzbl -0x1d(%rbp),%ecx
   1f8da:	movzbl -0x1e(%rbp),%eax
   1f8de:	shl    $0x8,%eax
   1f8e1:	add    %ecx,%eax
   1f8e3:	mov    %ax,0x2f2(%r15)
   1f8eb:	movzbl -0x1b(%rbp),%ecx
   1f8ef:	movzbl -0x1c(%rbp),%eax
   1f8f3:	shl    $0x8,%eax
   1f8f6:	add    %ecx,%eax
   1f8f8:	mov    %ax,0x2f4(%r15)
   1f900:	movzbl -0x19(%rbp),%ecx
   1f904:	movzbl -0x1a(%rbp),%eax
   1f908:	shl    $0x8,%eax
   1f90b:	add    %ecx,%eax
   1f90d:	mov    %ax,0x2f6(%r15)
   1f915:	jmpq   1f868 <png_handle_tRNS+0x128>
   1f91a:	mov    0x12c(%rdi),%eax
   1f920:	and    $0x2,%eax
   1f923:	test   %eax,%eax
   1f925:	je     1f9f0 <png_handle_tRNS+0x2b0>
   1f92b:	movzwl 0x258(%rdi),%eax
   1f932:	cmp    %eax,%edx
   1f934:	ja     1fa1a <png_handle_tRNS+0x2da>
   1f93a:	cmp    $0x100,%edx
   1f940:	ja     1fa1a <png_handle_tRNS+0x2da>
   1f946:	test   %edx,%edx
   1f948:	je     1fa1a <png_handle_tRNS+0x2da>
   1f94e:	lea    -0x120(%rbp),%rax
   1f955:	mov    %rdi,%rcx
   1f958:	mov    %rdx,%r8
   1f95b:	mov    %r15,-0x18(%rbp)
   1f95f:	mov    %r14,-0x10(%rbp)
   1f963:	mov    %rsi,-0x8(%rbp)
   1f967:	mov    %rax,%rsi
   1f96a:	mov    %rdx,%r14
   1f96d:	mov    %r8,%rdx
   1f970:	mov    %rdi,%r15
   1f973:	mov    %rcx,%rdi
   1f976:	callq  1b220 <png_crc_read>
   1f97b:	mov    %r14w,0x260(%r15)
   1f983:	mov    -0x10(%rbp),%r14
   1f987:	jmpq   1f868 <png_handle_tRNS+0x128>
   1f98c:	mov    %rdi,%rax
   1f98f:	mov    %r15,-0x18(%rbp)
   1f993:	mov    %rdx,%rsi
   1f996:	mov    %rdi,%r15
   1f999:	mov    %rax,%rdi
   1f99c:	callq  1b280 <png_crc_finish>
   1f9a1:	mov    %r15,%rdi
   1f9a4:	lea    0xef26(%rip),%rsi        # 2e8d1 <png_pass_inc.20+0x5e>
   1f9ab:	callq  5230 <png_chunk_benign_error@plt>
   1f9b0:	mov    -0x18(%rbp),%r15
   1f9b4:	leaveq 
   1f9b5:	retq   
   1f9b6:	movw   $0x0,0x260(%r15)
   1f9c0:	mov    -0x18(%rbp),%r15
   1f9c4:	leaveq 
   1f9c5:	retq   
   1f9c6:	mov    %rdi,%rax
   1f9c9:	mov    %r15,-0x18(%rbp)
   1f9cd:	mov    %rdx,%rsi
   1f9d0:	mov    %rdi,%r15
   1f9d3:	mov    %rax,%rdi
   1f9d6:	callq  1b280 <png_crc_finish>
   1f9db:	mov    %r15,%rdi
   1f9de:	lea    0xeeec(%rip),%rsi        # 2e8d1 <png_pass_inc.20+0x5e>
   1f9e5:	callq  5230 <png_chunk_benign_error@plt>
   1f9ea:	mov    -0x18(%rbp),%r15
   1f9ee:	leaveq 
   1f9ef:	retq   
   1f9f0:	mov    %rdi,%rax
   1f9f3:	mov    %r15,-0x18(%rbp)
   1f9f7:	mov    %rdx,%rsi
   1f9fa:	mov    %rdi,%r15
   1f9fd:	mov    %rax,%rdi
   1fa00:	callq  1b280 <png_crc_finish>
   1fa05:	mov    %r15,%rdi
   1fa08:	lea    0xeeb5(%rip),%rsi        # 2e8c4 <png_pass_inc.20+0x51>
   1fa0f:	callq  5230 <png_chunk_benign_error@plt>
   1fa14:	mov    -0x18(%rbp),%r15
   1fa18:	leaveq 
   1fa19:	retq   
   1fa1a:	mov    %rdi,%rax
   1fa1d:	mov    %r15,-0x18(%rbp)
   1fa21:	mov    %rdx,%rsi
   1fa24:	mov    %rdi,%r15
   1fa27:	mov    %rax,%rdi
   1fa2a:	callq  1b280 <png_crc_finish>
   1fa2f:	mov    %r15,%rdi
   1fa32:	lea    0xee98(%rip),%rsi        # 2e8d1 <png_pass_inc.20+0x5e>
   1fa39:	callq  5230 <png_chunk_benign_error@plt>
   1fa3e:	mov    -0x18(%rbp),%r15
   1fa42:	leaveq 
   1fa43:	retq   
   1fa44:	data16 nopw %cs:0x0(%rax,%rax,1)
   1fa4f:	nop

000000000001fa50 <png_handle_zTXt>:
   1fa50:	push   %rbp
   1fa51:	mov    %rsp,%rbp
   1fa54:	sub    $0x70,%rsp
   1fa58:	mov    0x424(%rdi),%eax
   1fa5e:	test   %eax,%eax
   1fa60:	jne    1faf4 <png_handle_zTXt+0xa4>
   1fa66:	mov    0x12c(%rdi),%eax
   1fa6c:	mov    %rax,%rcx
   1fa6f:	and    $0x1,%ecx
   1fa72:	test   %ecx,%ecx
   1fa74:	je     1fb39 <png_handle_zTXt+0xe9>
   1fa7a:	mov    %rax,%rcx
   1fa7d:	and    $0x4,%ecx
   1fa80:	test   %ecx,%ecx
   1fa82:	je     1fa8d <png_handle_zTXt+0x3d>
   1fa84:	or     $0x8,%eax
   1fa87:	mov    %eax,0x12c(%rdi)
   1fa8d:	mov    %edx,%eax
   1fa8f:	mov    $0x2,%r8d
   1fa95:	mov    %rdi,%rcx
   1fa98:	mov    %r14,-0x8(%rbp)
   1fa9c:	mov    %r15,-0x10(%rbp)
   1faa0:	mov    %rsi,-0x18(%rbp)
   1faa4:	mov    %rax,%rsi
   1faa7:	mov    %rdx,%r14
   1faaa:	mov    %r8,%rdx
   1faad:	mov    %rdi,%r15
   1fab0:	mov    %rcx,%rdi
   1fab3:	callq  200b0 <png_read_buffer>
   1fab8:	test   %rax,%rax
   1fabb:	je     1fb45 <png_handle_zTXt+0xf5>
   1fac1:	mov    %r15,%rdi
   1fac4:	mov    %rax,%rsi
   1fac7:	mov    %r14,%rdx
   1faca:	mov    %rax,-0x28(%rbp)
   1face:	callq  1b220 <png_crc_read>
   1fad3:	xor    %eax,%eax
   1fad5:	mov    %r15,%rdi
   1fad8:	mov    %rax,%rsi
   1fadb:	mov    %r15,-0x20(%rbp)
   1fadf:	mov    %rax,%r15
   1fae2:	callq  1b280 <png_crc_finish>
   1fae7:	test   %eax,%eax
   1fae9:	jne    1fb69 <png_handle_zTXt+0x119>
   1faeb:	mov    -0x28(%rbp),%rax
   1faef:	jmpq   1fb80 <png_handle_zTXt+0x130>
   1faf4:	cmp    $0x1,%eax
   1faf7:	je     1fba8 <png_handle_zTXt+0x158>
   1fafd:	add    $0xffffffff,%eax
   1fb00:	mov    %eax,0x424(%rdi)
   1fb06:	cmp    $0x1,%eax
   1fb09:	jne    1fa66 <png_handle_zTXt+0x16>
   1fb0f:	mov    %rdi,%rax
   1fb12:	mov    %r15,-0x28(%rbp)
   1fb16:	mov    %rdx,%rsi
   1fb19:	mov    %rdi,%r15
   1fb1c:	mov    %rax,%rdi
   1fb1f:	callq  1b280 <png_crc_finish>
   1fb24:	mov    %r15,%rdi
   1fb27:	lea    0xef37(%rip),%rsi        # 2ea65 <png_pass_inc.20+0x1f2>
   1fb2e:	callq  5230 <png_chunk_benign_error@plt>
   1fb33:	mov    -0x28(%rbp),%r15
   1fb37:	leaveq 
   1fb38:	retq   
   1fb39:	lea    0xed99(%rip),%rsi        # 2e8d9 <png_pass_inc.20+0x66>
   1fb40:	callq  5060 <png_chunk_error@plt>
   1fb45:	mov    %r14,%rsi
   1fb48:	mov    %r15,%rdi
   1fb4b:	callq  1b280 <png_crc_finish>
   1fb50:	mov    %r15,%rdi
   1fb53:	lea    0xee0f(%rip),%rsi        # 2e969 <png_pass_inc.20+0xf6>
   1fb5a:	callq  5230 <png_chunk_benign_error@plt>
   1fb5f:	mov    -0x10(%rbp),%r15
   1fb63:	mov    -0x8(%rbp),%r14
   1fb67:	leaveq 
   1fb68:	retq   
   1fb69:	mov    -0x10(%rbp),%r15
   1fb6d:	mov    -0x8(%rbp),%r14
   1fb71:	leaveq 
   1fb72:	retq   
   1fb73:	movzbl (%rax,%r9,1),%ecx
   1fb78:	test   %cl,%cl
   1fb7a:	je     1fb88 <png_handle_zTXt+0x138>
   1fb7c:	add    $0x1,%r15d
   1fb80:	mov    %r15d,%r9d
   1fb83:	cmp    %r15d,%r14d
   1fb86:	ja     1fb73 <png_handle_zTXt+0x123>
   1fb88:	lea    0xeeb8(%rip),%rsi        # 2ea47 <png_pass_inc.20+0x1d4>
   1fb8f:	cmp    $0x4f,%r15d
   1fb93:	jbe    1fbb2 <png_handle_zTXt+0x162>
   1fb95:	mov    -0x20(%rbp),%rdi
   1fb99:	test   %rsi,%rsi
   1fb9c:	jne    1fbbd <png_handle_zTXt+0x16d>
   1fb9e:	mov    -0x10(%rbp),%r15
   1fba2:	mov    -0x8(%rbp),%r14
   1fba6:	leaveq 
   1fba7:	retq   
   1fba8:	mov    %rdx,%rsi
   1fbab:	callq  1b280 <png_crc_finish>
   1fbb0:	leaveq 
   1fbb1:	retq   
   1fbb2:	test   %r15d,%r15d
   1fbb5:	jne    1fbcc <png_handle_zTXt+0x17c>
   1fbb7:	mov    -0x20(%rbp),%rdi
   1fbbb:	jmp    1fb99 <png_handle_zTXt+0x149>
   1fbbd:	callq  5230 <png_chunk_benign_error@plt>
   1fbc2:	mov    -0x10(%rbp),%r15
   1fbc6:	mov    -0x8(%rbp),%r14
   1fbca:	leaveq 
   1fbcb:	retq   
   1fbcc:	lea    0x3(%r15),%ecx
   1fbd0:	cmp    %ecx,%r14d
   1fbd3:	jae    1fbe2 <png_handle_zTXt+0x192>
   1fbd5:	lea    0xeea1(%rip),%rsi        # 2ea7d <png_pass_inc.20+0x20a>
   1fbdc:	mov    -0x20(%rbp),%rdi
   1fbe0:	jmp    1fb99 <png_handle_zTXt+0x149>
   1fbe2:	lea    0x1(%r15),%ecx
   1fbe6:	mov    %ecx,%ecx
   1fbe8:	movzbl (%rax,%rcx,1),%eax
   1fbec:	test   %al,%al
   1fbee:	je     1fbfd <png_handle_zTXt+0x1ad>
   1fbf0:	lea    0xf009(%rip),%rsi        # 2ec00 <png_pass_inc.20+0x38d>
   1fbf7:	mov    -0x20(%rbp),%rdi
   1fbfb:	jmp    1fb99 <png_handle_zTXt+0x149>
   1fbfd:	movq   $0xffffffffffffffff,-0x68(%rbp)
   1fc05:	lea    0x2(%r15),%eax
   1fc09:	lea    -0x68(%rbp),%rcx
   1fc0d:	mov    $0x1,%r8d
   1fc13:	mov    -0x20(%rbp),%r15
   1fc17:	mov    %r15,%rdi
   1fc1a:	mov    %rax,%rdx
   1fc1d:	mov    %r9,-0x28(%rbp)
   1fc21:	mov    %r14,%rsi
   1fc24:	mov    %rax,%r14
   1fc27:	callq  20510 <png_decompress_chunk>
   1fc2c:	cmp    $0x1,%eax
   1fc2f:	je     1fc40 <png_handle_zTXt+0x1f0>
   1fc31:	mov    %r15,%rdi
   1fc34:	mov    0x170(%rdi),%rsi
   1fc3b:	jmpq   1fb99 <png_handle_zTXt+0x149>
   1fc40:	mov    0x458(%r15),%rcx
   1fc47:	test   %rcx,%rcx
   1fc4a:	jne    1fc5b <png_handle_zTXt+0x20b>
   1fc4c:	mov    %r15,%rdi
   1fc4f:	lea    0xefc3(%rip),%rsi        # 2ec19 <png_pass_inc.20+0x3a6>
   1fc56:	jmpq   1fb99 <png_handle_zTXt+0x149>
   1fc5b:	mov    %r14d,%eax
   1fc5e:	add    -0x68(%rbp),%rax
   1fc62:	movb   $0x0,(%rcx,%rax,1)
   1fc66:	movl   $0x0,-0x60(%rbp)
   1fc6d:	mov    %rcx,-0x58(%rbp)
   1fc71:	mov    -0x28(%rbp),%rax
   1fc75:	lea    0x2(%rax,%rcx,1),%rax
   1fc7a:	mov    %rax,-0x50(%rbp)
   1fc7e:	mov    -0x68(%rbp),%rax
   1fc82:	mov    %rax,-0x48(%rbp)
   1fc86:	movq   $0x0,-0x40(%rbp)
   1fc8e:	movq   $0x0,-0x38(%rbp)
   1fc96:	movq   $0x0,-0x30(%rbp)
   1fc9e:	lea    -0x60(%rbp),%rdx
   1fca2:	mov    %r15,%rdi
   1fca5:	mov    $0x1,%ecx
   1fcaa:	mov    -0x18(%rbp),%rsi
   1fcae:	callq  22df0 <png_set_text_2>
   1fcb3:	test   %eax,%eax
   1fcb5:	jne    1fcc1 <png_handle_zTXt+0x271>
   1fcb7:	mov    %r15,%rdi
   1fcba:	xor    %esi,%esi
   1fcbc:	jmpq   1fb99 <png_handle_zTXt+0x149>
   1fcc1:	mov    %r15,%rdi
   1fcc4:	lea    0xedbc(%rip),%rsi        # 2ea87 <png_pass_inc.20+0x214>
   1fccb:	jmpq   1fb99 <png_handle_zTXt+0x149>

000000000001fcd0 <png_check_chunk_name>:
   1fcd0:	push   %rbp
   1fcd1:	mov    %rsp,%rbp
   1fcd4:	mov    $0x1,%eax
   1fcd9:	jmp    1fcf9 <png_check_chunk_name+0x29>
   1fcdb:	movzbl %sil,%ecx
   1fcdf:	cmp    $0x40,%ecx
   1fce2:	jle    1fd00 <png_check_chunk_name+0x30>
   1fce4:	cmp    $0x7a,%ecx
   1fce7:	jg     1fd00 <png_check_chunk_name+0x30>
   1fce9:	cmp    $0x5a,%ecx
   1fcec:	jle    1fcf3 <png_check_chunk_name+0x23>
   1fcee:	cmp    $0x60,%ecx
   1fcf1:	jle    1fd00 <png_check_chunk_name+0x30>
   1fcf3:	shr    $0x8,%esi
   1fcf6:	add    $0x1,%eax
   1fcf9:	cmp    $0x4,%eax
   1fcfc:	jle    1fcdb <png_check_chunk_name+0xb>
   1fcfe:	leaveq 
   1fcff:	retq   
   1fd00:	lea    0xef32(%rip),%rsi        # 2ec39 <png_pass_inc.20+0x3c6>
   1fd07:	callq  5060 <png_chunk_error@plt>
   1fd0c:	nopl   0x0(%rax)

000000000001fd10 <png_check_chunk_length>:
   1fd10:	push   %rbp
   1fd11:	mov    %rsp,%rbp
   1fd14:	mov    $0x7fffffff,%r8d
   1fd1a:	mov    0x428(%rdi),%rcx
   1fd21:	test   %rcx,%rcx
   1fd24:	jne    1fd3f <png_check_chunk_length+0x2f>
   1fd26:	mov    %r8,%rcx
   1fd29:	mov    0x218(%rdi),%eax
   1fd2f:	cmp    $0x49444154,%eax
   1fd34:	je     1fd4d <png_check_chunk_length+0x3d>
   1fd36:	mov    %esi,%eax
   1fd38:	cmp    %rax,%rcx
   1fd3b:	jb     1fd6d <png_check_chunk_length+0x5d>
   1fd3d:	leaveq 
   1fd3e:	retq   
   1fd3f:	cmp    $0x7ffffffe,%rcx
   1fd46:	jbe    1fd29 <png_check_chunk_length+0x19>
   1fd48:	mov    %r8,%rcx
   1fd4b:	jmp    1fd29 <png_check_chunk_length+0x19>
   1fd4d:	mov    0x1f8(%rdi),%r11d
   1fd54:	movzbl 0x26b(%rdi),%edx
   1fd5b:	movzbl 0x268(%rdi),%eax
   1fd62:	cmp    $0x8,%al
   1fd64:	ja     1fd79 <png_check_chunk_length+0x69>
   1fd66:	mov    $0x1,%eax
   1fd6b:	jmp    1fd7e <png_check_chunk_length+0x6e>
   1fd6d:	lea    0xeed8(%rip),%rsi        # 2ec4c <png_pass_inc.20+0x3d9>
   1fd74:	callq  5060 <png_chunk_error@plt>
   1fd79:	mov    $0x2,%eax
   1fd7e:	xor    %r9d,%r9d
   1fd81:	movzbl 0x264(%rdi),%r10d
   1fd89:	test   %r10b,%r10b
   1fd8c:	je     1fd94 <png_check_chunk_length+0x84>
   1fd8e:	mov    $0x6,%r9d
   1fd94:	imul   %r11d,%edx
   1fd98:	imul   %edx,%eax
   1fd9b:	lea    0x1(%r9,%rax,1),%r11d
   1fda0:	mov    %r11d,%r9d
   1fda3:	mov    $0xffffffff,%eax
   1fda8:	xor    %edx,%edx
   1fdaa:	mov    0x1fc(%rdi),%r10d
   1fdb1:	div    %r9
   1fdb4:	cmp    %r10,%rax
   1fdb7:	jae    1fdf8 <png_check_chunk_length+0xe8>
   1fdb9:	mov    %r8,%r10
   1fdbc:	cmp    $0x7f36,%r11d
   1fdc3:	jbe    1fdcb <png_check_chunk_length+0xbb>
   1fdc5:	mov    $0x7f36,%r9d
   1fdcb:	xor    %edx,%edx
   1fdcd:	mov    %r10,%rax
   1fdd0:	div    %r9
   1fdd3:	lea    (%rax,%rax,4),%rax
   1fdd7:	lea    0xb(%r10,%rax,1),%rax
   1fddc:	cmp    $0x7ffffffe,%rax
   1fde2:	ja     1fde7 <png_check_chunk_length+0xd7>
   1fde4:	xor    %r8d,%r8d
   1fde7:	cmp    %r8,%rcx
   1fdea:	jae    1fd36 <png_check_chunk_length+0x26>
   1fdf0:	mov    %r8,%rcx
   1fdf3:	jmpq   1fd36 <png_check_chunk_length+0x26>
   1fdf8:	mov    0x1fc(%rdi),%eax
   1fdfe:	mov    %r9,%r10
   1fe01:	imul   %rax,%r10
   1fe05:	jmp    1fdbc <png_check_chunk_length+0xac>
   1fe07:	nopw   0x0(%rax,%rax,1)

000000000001fe10 <png_handle_unknown>:
   1fe10:	push   %rbp
   1fe11:	mov    %rsp,%rbp
   1fe14:	sub    $0x30,%rsp
   1fe18:	mov    %r13,-0x8(%rbp)
   1fe1c:	mov    %r14,-0x10(%rbp)
   1fe20:	mov    %r15,-0x18(%rbp)
   1fe24:	mov    $0x1,%eax
   1fe29:	mov    %rax,-0x28(%rbp)
   1fe2d:	xor    %eax,%eax
   1fe2f:	mov    %rax,-0x20(%rbp)
   1fe33:	mov    0x3b8(%rdi),%rax
   1fe3a:	test   %rax,%rax
   1fe3d:	jne    1fe48 <png_handle_unknown+0x38>
   1fe3f:	test   %ecx,%ecx
   1fe41:	je     1fe7e <png_handle_unknown+0x6e>
   1fe43:	mov    %rcx,%r14
   1fe46:	jmp    1fe85 <png_handle_unknown+0x75>
   1fe48:	mov    %rcx,%r14
   1fe4b:	mov    %rsi,%r15
   1fe4e:	mov    %rdx,%rsi
   1fe51:	mov    %rdi,%r13
   1fe54:	callq  209d0 <png_cache_unknown_chunk>
   1fe59:	test   %eax,%eax
   1fe5b:	jne    1feaf <png_handle_unknown+0x9f>
   1fe5d:	mov    $0x1,%r14d
   1fe63:	pushq  -0x20(%rbp)
   1fe66:	popq   -0x28(%rbp)
   1fe69:	cmp    $0x3,%r14d
   1fe6d:	je     1fed8 <png_handle_unknown+0xc8>
   1fe6f:	cmp    $0x2,%r14d
   1fe73:	je     1feee <png_handle_unknown+0xde>
   1fe75:	mov    -0x28(%rbp),%r14
   1fe79:	jmpq   1ff32 <png_handle_unknown+0x122>
   1fe7e:	movslq 0x3c0(%rdi),%r14
   1fe85:	cmp    $0x3,%r14d
   1fe89:	je     1ff7b <png_handle_unknown+0x16b>
   1fe8f:	cmp    $0x2,%r14d
   1fe93:	je     1ff68 <png_handle_unknown+0x158>
   1fe99:	mov    %rsi,%r15
   1fe9c:	mov    %rdx,%rsi
   1fe9f:	mov    %rdi,%r13
   1fea2:	callq  1b280 <png_crc_finish>
   1fea7:	pushq  -0x20(%rbp)
   1feaa:	popq   -0x28(%rbp)
   1fead:	jmp    1fe69 <png_handle_unknown+0x59>
   1feaf:	lea    0x430(%r13),%rsi
   1feb6:	mov    %r13,%rdi
   1feb9:	callq  *0x3b8(%r13)
   1fec0:	test   %eax,%eax
   1fec2:	js     1ff98 <png_handle_unknown+0x188>
   1fec8:	test   %eax,%eax
   1feca:	je     1ffa7 <png_handle_unknown+0x197>
   1fed0:	mov    $0x1,%r14d
   1fed6:	jmp    1fe69 <png_handle_unknown+0x59>
   1fed8:	mov    0x424(%r13),%eax
   1fedf:	test   %eax,%eax
   1fee1:	je     1ff17 <png_handle_unknown+0x107>
   1fee3:	cmp    $0x1,%eax
   1fee6:	jne    1ff04 <png_handle_unknown+0xf4>
   1fee8:	mov    -0x28(%rbp),%r14
   1feec:	jmp    1ff32 <png_handle_unknown+0x122>
   1feee:	mov    0x218(%r13),%eax
   1fef5:	and    $0x20000000,%eax
   1fefa:	test   %eax,%eax
   1fefc:	jne    1fed8 <png_handle_unknown+0xc8>
   1fefe:	mov    -0x28(%rbp),%r14
   1ff02:	jmp    1ff32 <png_handle_unknown+0x122>
   1ff04:	cmp    $0x2,%eax
   1ff07:	je     1ffb8 <png_handle_unknown+0x1a8>
   1ff0d:	add    $0xffffffff,%eax
   1ff10:	mov    %eax,0x424(%r13)
   1ff17:	mov    %r15,%rsi
   1ff1a:	lea    0x430(%r13),%rdx
   1ff21:	mov    %r13,%rdi
   1ff24:	mov    $0x1,%r14d
   1ff2a:	mov    %r14,%rcx
   1ff2d:	callq  5750 <png_set_unknown_chunks@plt>
   1ff32:	mov    0x438(%r13),%rsi
   1ff39:	test   %rsi,%rsi
   1ff3c:	je     1ff46 <png_handle_unknown+0x136>
   1ff3e:	mov    %r13,%rdi
   1ff41:	callq  5790 <png_free@plt>
   1ff46:	movq   $0x0,0x438(%r13)
   1ff51:	test   %r14d,%r14d
   1ff54:	je     1ffdb <png_handle_unknown+0x1cb>
   1ff5a:	mov    -0x18(%rbp),%r15
   1ff5e:	mov    -0x10(%rbp),%r14
   1ff62:	mov    -0x8(%rbp),%r13
   1ff66:	leaveq 
   1ff67:	retq   
   1ff68:	mov    0x218(%rdi),%eax
   1ff6e:	and    $0x20000000,%eax
   1ff73:	test   %eax,%eax
   1ff75:	je     1fe99 <png_handle_unknown+0x89>
   1ff7b:	mov    %rsi,%r15
   1ff7e:	mov    %rdx,%rsi
   1ff81:	mov    %rdi,%r13
   1ff84:	callq  209d0 <png_cache_unknown_chunk>
   1ff89:	test   %eax,%eax
   1ff8b:	je     1fff9 <png_handle_unknown+0x1e9>
   1ff8d:	pushq  -0x20(%rbp)
   1ff90:	popq   -0x28(%rbp)
   1ff93:	jmpq   1fe69 <png_handle_unknown+0x59>
   1ff98:	mov    %r13,%rdi
   1ff9b:	lea    0xecc2(%rip),%rsi        # 2ec64 <png_pass_inc.20+0x3f1>
   1ffa2:	callq  5060 <png_chunk_error@plt>
   1ffa7:	cmp    $0x1,%r14d
   1ffab:	jle    2000a <png_handle_unknown+0x1fa>
   1ffad:	pushq  -0x20(%rbp)
   1ffb0:	popq   -0x28(%rbp)
   1ffb3:	jmpq   1fe69 <png_handle_unknown+0x59>
   1ffb8:	movl   $0x1,0x424(%r13)
   1ffc3:	lea    0xea9b(%rip),%rsi        # 2ea65 <png_pass_inc.20+0x1f2>
   1ffca:	mov    %r13,%rdi
   1ffcd:	callq  5230 <png_chunk_benign_error@plt>
   1ffd2:	mov    -0x28(%rbp),%r14
   1ffd6:	jmpq   1ff32 <png_handle_unknown+0x122>
   1ffdb:	mov    0x218(%r13),%eax
   1ffe2:	and    $0x20000000,%eax
   1ffe7:	test   %eax,%eax
   1ffe9:	je     20027 <png_handle_unknown+0x217>
   1ffeb:	mov    -0x18(%rbp),%r15
   1ffef:	mov    -0x10(%rbp),%r14
   1fff3:	mov    -0x8(%rbp),%r13
   1fff7:	leaveq 
   1fff8:	retq   
   1fff9:	mov    $0x1,%r14d
   1ffff:	pushq  -0x20(%rbp)
   20002:	popq   -0x28(%rbp)
   20005:	jmpq   1fe69 <png_handle_unknown+0x59>
   2000a:	mov    $0x2,%r14d
   20010:	movslq 0x3c0(%r13),%rax
   20017:	cmp    $0x1,%eax
   2001a:	jle    20036 <png_handle_unknown+0x226>
   2001c:	pushq  -0x20(%rbp)
   2001f:	popq   -0x28(%rbp)
   20022:	jmpq   1fe69 <png_handle_unknown+0x59>
   20027:	mov    %r13,%rdi
   2002a:	lea    0xeca9(%rip),%rsi        # 2ecda <png_pass_inc.20+0x467>
   20031:	callq  5060 <png_chunk_error@plt>
   20036:	lea    0xec3b(%rip),%rsi        # 2ec78 <png_pass_inc.20+0x405>
   2003d:	mov    %r13,%rdi
   20040:	callq  56a0 <png_chunk_warning@plt>
   20045:	lea    0xec42(%rip),%rsi        # 2ec8e <png_pass_inc.20+0x41b>
   2004c:	mov    %r13,%rdi
   2004f:	callq  b100 <png_app_warning>
   20054:	pushq  -0x20(%rbp)
   20057:	popq   -0x28(%rbp)
   2005a:	jmpq   1fe69 <png_handle_unknown+0x59>
   2005f:	nop

0000000000020060 <png_get_fixed_point>:
   20060:	push   %rbp
   20061:	mov    %rsp,%rbp
   20064:	movzbl (%rsi),%eax
   20067:	shl    $0x18,%eax
   2006a:	movzbl 0x1(%rsi),%ecx
   2006e:	shl    $0x10,%ecx
   20071:	add    %eax,%ecx
   20073:	movzbl 0x2(%rsi),%eax
   20077:	shl    $0x8,%eax
   2007a:	add    %ecx,%eax
   2007c:	movzbl 0x3(%rsi),%ecx
   20080:	add    %ecx,%eax
   20082:	cmp    $0x7fffffff,%eax
   20087:	ja     2008b <png_get_fixed_point+0x2b>
   20089:	leaveq 
   2008a:	retq   
   2008b:	mov    $0xffffffffffffffff,%rax
   20092:	test   %rdi,%rdi
   20095:	jne    20099 <png_get_fixed_point+0x39>
   20097:	leaveq 
   20098:	retq   
   20099:	lea    0xec53(%rip),%rsi        # 2ecf3 <png_pass_inc.20+0x480>
   200a0:	callq  5390 <png_warning@plt>
   200a5:	mov    $0xffffffffffffffff,%rax
   200ac:	leaveq 
   200ad:	retq   
   200ae:	xchg   %ax,%ax

00000000000200b0 <png_read_buffer>:
   200b0:	push   %rbp
   200b1:	mov    %rsp,%rbp
   200b4:	sub    $0x20,%rsp
   200b8:	xor    %eax,%eax
   200ba:	mov    0x458(%rdi),%rcx
   200c1:	test   %rcx,%rcx
   200c4:	jne    200cd <png_read_buffer+0x1d>
   200c6:	test   %rax,%rax
   200c9:	je     200de <png_read_buffer+0x2e>
   200cb:	leaveq 
   200cc:	retq   
   200cd:	mov    0x460(%rdi),%rax
   200d4:	cmp    %rsi,%rax
   200d7:	jb     20118 <png_read_buffer+0x68>
   200d9:	mov    %rcx,%rax
   200dc:	jmp    200c6 <png_read_buffer+0x16>
   200de:	mov    %rdi,%rcx
   200e1:	mov    %rsi,%rax
   200e4:	mov    %rdi,-0x8(%rbp)
   200e8:	mov    %r14,-0x10(%rbp)
   200ec:	mov    %r15,-0x18(%rbp)
   200f0:	mov    %rcx,%rdi
   200f3:	mov    %rsi,%r14
   200f6:	mov    %rax,%rsi
   200f9:	mov    %rdx,%r15
   200fc:	callq  c950 <png_malloc_base>
   20101:	test   %rax,%rax
   20104:	jne    2015b <png_read_buffer+0xab>
   20106:	cmp    $0x1,%r15d
   2010a:	jle    2018a <png_read_buffer+0xda>
   2010c:	mov    -0x18(%rbp),%r15
   20110:	mov    -0x10(%rbp),%r14
   20114:	xor    %eax,%eax
   20116:	leaveq 
   20117:	retq   
   20118:	movq   $0x0,0x458(%rdi)
   20123:	movq   $0x0,0x460(%rdi)
   2012e:	mov    %rdi,%rax
   20131:	mov    %rdi,-0x10(%rbp)
   20135:	mov    %rsi,-0x18(%rbp)
   20139:	mov    %rdx,-0x8(%rbp)
   2013d:	mov    %rcx,%rsi
   20140:	mov    %rax,%rdi
   20143:	callq  5790 <png_free@plt>
   20148:	xor    %eax,%eax
   2014a:	mov    -0x8(%rbp),%rdx
   2014e:	mov    -0x18(%rbp),%rsi
   20152:	mov    -0x10(%rbp),%rdi
   20156:	jmpq   200c6 <png_read_buffer+0x16>
   2015b:	mov    %rax,%r15
   2015e:	mov    %r15,%rdi
   20161:	mov    %r14,%rdx
   20164:	xor    %esi,%esi
   20166:	callq  5350 <memset@plt>
   2016b:	mov    -0x8(%rbp),%rax
   2016f:	mov    %r15,0x458(%rax)
   20176:	mov    %r14,0x460(%rax)
   2017d:	mov    %r15,%rax
   20180:	mov    -0x18(%rbp),%r15
   20184:	mov    -0x10(%rbp),%r14
   20188:	leaveq 
   20189:	retq   
   2018a:	lea    0xeb87(%rip),%rsi        # 2ed18 <png_pass_inc.20+0x4a5>
   20191:	test   %r15d,%r15d
   20194:	jne    2019f <png_read_buffer+0xef>
   20196:	mov    -0x8(%rbp),%rdi
   2019a:	callq  5060 <png_chunk_error@plt>
   2019f:	mov    -0x8(%rbp),%rdi
   201a3:	callq  56a0 <png_chunk_warning@plt>
   201a8:	mov    -0x18(%rbp),%r15
   201ac:	mov    -0x10(%rbp),%r14
   201b0:	xor    %eax,%eax
   201b2:	leaveq 
   201b3:	retq   
   201b4:	data16 nopw %cs:0x0(%rax,%rax,1)
   201bf:	nop

00000000000201c0 <png_inflate_claim>:
   201c0:	push   %rbp
   201c1:	mov    %rsp,%rbp
   201c4:	sub    $0x60,%rsp
   201c8:	mov    %r14,-0x10(%rbp)
   201cc:	mov    %r15,-0x18(%rbp)
   201d0:	mov    %r13,-0x8(%rbp)
   201d4:	mov    0x138(%rdi),%ecx
   201da:	test   %ecx,%ecx
   201dc:	jne    201e6 <png_inflate_claim+0x26>
   201de:	mov    %rdi,%r13
   201e1:	mov    %rsi,%r14
   201e4:	jmp    2023b <png_inflate_claim+0x7b>
   201e6:	mov    %rcx,%rax
   201e9:	shr    $0x18,%eax
   201ec:	mov    %al,-0x58(%rbp)
   201ef:	mov    %rcx,%rax
   201f2:	shr    $0x10,%eax
   201f5:	mov    %al,-0x57(%rbp)
   201f8:	mov    %rcx,%rax
   201fb:	shr    $0x8,%eax
   201fe:	mov    %al,-0x56(%rbp)
   20201:	mov    %cl,-0x55(%rbp)
   20204:	mov    %rdi,%r13
   20207:	mov    %rsi,%r14
   2020a:	lea    -0x58(%rbp),%rdi
   2020e:	mov    $0x40,%esi
   20213:	mov    $0x4,%edx
   20218:	lea    0xeb1b(%rip),%rcx        # 2ed3a <png_pass_inc.20+0x4c7>
   2021f:	callq  ad30 <png_safecat>
   20224:	mov    %r13,%rdi
   20227:	lea    -0x58(%rbp),%rsi
   2022b:	callq  56a0 <png_chunk_warning@plt>
   20230:	movl   $0x0,0x138(%r13)
   2023b:	xor    %esi,%esi
   2023d:	mov    0x388(%r13),%eax
   20244:	and    $0xc,%eax
   20247:	cmp    $0xc,%eax
   2024a:	je     20256 <png_inflate_claim+0x96>
   2024c:	movb   $0x1,0x270(%r13)
   20254:	jmp    20263 <png_inflate_claim+0xa3>
   20256:	movb   $0x0,0x270(%r13)
   2025e:	mov    $0xf,%esi
   20263:	lea    0x140(%r13),%r15
   2026a:	movq   $0x0,(%r15)
   20271:	movl   $0x0,0x148(%r13)
   2027c:	movq   $0x0,0x158(%r13)
   20287:	movl   $0x0,0x160(%r13)
   20292:	mov    0x130(%r13),%eax
   20299:	and    $0x2,%eax
   2029c:	test   %eax,%eax
   2029e:	jne    202cd <png_inflate_claim+0x10d>
   202a0:	lea    0xeaa2(%rip),%rdx        # 2ed49 <png_pass_inc.20+0x4d6>
   202a7:	mov    $0x70,%ecx
   202ac:	mov    %r15,%rdi
   202af:	callq  5770 <inflateInit2_@plt>
   202b4:	test   %eax,%eax
   202b6:	jne    202d5 <png_inflate_claim+0x115>
   202b8:	mov    0x130(%r13),%eax
   202bf:	or     $0x2,%eax
   202c2:	mov    %eax,0x130(%r13)
   202c9:	xor    %eax,%eax
   202cb:	jmp    202d5 <png_inflate_claim+0x115>
   202cd:	mov    %r15,%rdi
   202d0:	callq  5180 <inflateReset2@plt>
   202d5:	mov    0x388(%r13),%ecx
   202dc:	and    $0x300,%ecx
   202e2:	cmp    $0x300,%ecx
   202e8:	jne    202f4 <png_inflate_claim+0x134>
   202ea:	mov    %r15,%rdi
   202ed:	xor    %esi,%esi
   202ef:	callq  5220 <inflateValidate@plt>
   202f4:	test   %eax,%eax
   202f6:	je     20317 <png_inflate_claim+0x157>
   202f8:	mov    %r13,%rdi
   202fb:	mov    %rax,%r13
   202fe:	mov    %r13,%rsi
   20301:	callq  6920 <png_zstream_error>
   20306:	mov    %r13,%rax
   20309:	mov    -0x8(%rbp),%r13
   2030d:	mov    -0x18(%rbp),%r15
   20311:	mov    -0x10(%rbp),%r14
   20315:	leaveq 
   20316:	retq   
   20317:	mov    %r14d,0x138(%r13)
   2031e:	mov    -0x8(%rbp),%r13
   20322:	mov    -0x18(%rbp),%r15
   20326:	mov    -0x10(%rbp),%r14
   2032a:	leaveq 
   2032b:	retq   
   2032c:	nopl   0x0(%rax)

0000000000020330 <png_inflate>:
   20330:	push   %rbp
   20331:	mov    %rsp,%rbp
   20334:	sub    $0x440,%rsp
   2033b:	mov    0x138(%rdi),%eax
   20341:	cmp    %esi,%eax
   20343:	je     2035c <png_inflate+0x2c>
   20345:	lea    0xea04(%rip),%rax        # 2ed50 <png_pass_inc.20+0x4dd>
   2034c:	mov    %rax,0x170(%rdi)
   20353:	mov    $0xfffffffffffffffe,%rax
   2035a:	leaveq 
   2035b:	retq   
   2035c:	mov    0x10(%rbp),%rax
   20360:	mov    %rax,-0x10(%rbp)
   20364:	mov    (%rax),%r11
   20367:	mov    (%r8),%r10d
   2036a:	mov    %rcx,0x140(%rdi)
   20371:	movl   $0x0,0x148(%rdi)
   2037b:	movl   $0x0,0x160(%rdi)
   20385:	lea    -0x438(%rbp),%rcx
   2038c:	xor    %esi,%esi
   2038e:	mov    %r15,-0x38(%rbp)
   20392:	mov    $0x4,%r15d
   20398:	mov    %r14,-0x30(%rbp)
   2039c:	mov    $0x2,%r14d
   203a2:	mov    %r13,-0x28(%rbp)
   203a6:	mov    $0xffffffff,%eax
   203ab:	mov    %r12,-0x20(%rbp)
   203af:	mov    $0x400,%r12d
   203b5:	test   %r9,%r9
   203b8:	jne    203df <png_inflate+0xaf>
   203ba:	mov    %r8,-0x8(%rbp)
   203be:	mov    %rbx,-0x18(%rbp)
   203c2:	mov    %r10,%rbx
   203c5:	mov    %rcx,%r10
   203c8:	mov    %r12,%rcx
   203cb:	mov    %r11,%r12
   203ce:	mov    %r15,%r11
   203d1:	mov    %rdx,%r15
   203d4:	mov    %r14,%rdx
   203d7:	mov    %r9,%r14
   203da:	mov    %rdi,%r13
   203dd:	jmp    20429 <png_inflate+0xf9>
   203df:	mov    %r9,0x158(%rdi)
   203e6:	mov    %r8,-0x8(%rbp)
   203ea:	mov    %rbx,-0x18(%rbp)
   203ee:	mov    %r10,%rbx
   203f1:	mov    %rcx,%r10
   203f4:	mov    %r12,%rcx
   203f7:	mov    %r11,%r12
   203fa:	mov    %r15,%r11
   203fd:	mov    %rdx,%r15
   20400:	mov    %r14,%rdx
   20403:	mov    %r9,%r14
   20406:	mov    %rdi,%r13
   20409:	jmp    20429 <png_inflate+0xf9>
   2040b:	mov    $0x2,%edx
   20410:	mov    $0x4,%r11d
   20416:	xor    %esi,%esi
   20418:	mov    $0x400,%ecx
   2041d:	lea    -0x438(%rbp),%r10
   20424:	mov    $0xffffffff,%eax
   20429:	add    0x148(%r13),%ebx
   20430:	cmp    $0xfffffffe,%ebx
   20433:	jbe    2043a <png_inflate+0x10a>
   20435:	mov    %rax,%r8
   20438:	jmp    2043d <png_inflate+0x10d>
   2043a:	mov    %rbx,%r8
   2043d:	test   %r14,%r14
   20440:	mov    0x160(%r13),%edi
   20447:	mov    %r8d,0x148(%r13)
   2044e:	jne    2045a <png_inflate+0x12a>
   20450:	mov    %r10,0x158(%r13)
   20457:	mov    %rcx,%rax
   2045a:	add    %rdi,%r12
   2045d:	cmp    %r12,%rax
   20460:	jbe    20465 <png_inflate+0x135>
   20462:	mov    %r12,%rax
   20465:	mov    %eax,0x160(%r13)
   2046c:	mov    %eax,%eax
   2046e:	cmp    %rax,%r12
   20471:	jne    2047f <png_inflate+0x14f>
   20473:	test   %r15d,%r15d
   20476:	jne    20501 <png_inflate+0x1d1>
   2047c:	mov    %rdx,%rsi
   2047f:	sub    %r8d,%ebx
   20482:	sub    %rax,%r12
   20485:	mov    %r13,%rdi
   20488:	callq  1ca90 <png_zlib_inflate>
   2048d:	test   %eax,%eax
   2048f:	je     2040b <png_inflate+0xdb>
   20495:	test   %r14,%r14
   20498:	jne    204a5 <png_inflate+0x175>
   2049a:	movq   $0x0,0x158(%r13)
   204a5:	mov    0x148(%r13),%esi
   204ac:	mov    0x160(%r13),%ecx
   204b3:	lea    (%r12,%rcx,1),%rdx
   204b7:	test   %rdx,%rdx
   204ba:	je     204c9 <png_inflate+0x199>
   204bc:	mov    -0x10(%rbp),%rdi
   204c0:	mov    (%rdi),%rcx
   204c3:	sub    %rdx,%rcx
   204c6:	mov    %rcx,(%rdi)
   204c9:	lea    (%rbx,%rsi,1),%edx
   204cc:	test   %edx,%edx
   204ce:	je     204da <png_inflate+0x1aa>
   204d0:	mov    -0x8(%rbp),%rsi
   204d4:	mov    (%rsi),%ecx
   204d6:	sub    %edx,%ecx
   204d8:	mov    %ecx,(%rsi)
   204da:	mov    %r13,%rdi
   204dd:	mov    %rax,%r15
   204e0:	mov    %r15,%rsi
   204e3:	callq  6920 <png_zstream_error>
   204e8:	mov    %r15,%rax
   204eb:	mov    -0x18(%rbp),%rbx
   204ef:	mov    -0x20(%rbp),%r12
   204f3:	mov    -0x28(%rbp),%r13
   204f7:	mov    -0x30(%rbp),%r14
   204fb:	mov    -0x38(%rbp),%r15
   204ff:	leaveq 
   20500:	retq   
   20501:	mov    %r11,%rsi
   20504:	jmpq   2047f <png_inflate+0x14f>
   20509:	nopl   0x0(%rax)

0000000000020510 <png_decompress_chunk>:
   20510:	push   %rbp
   20511:	mov    %rsp,%rbp
   20514:	sub    $0x60,%rsp
   20518:	mov    $0xffffffffffffffff,%rax
   2051f:	mov    0x428(%rdi),%r9
   20526:	test   %r9,%r9
   20529:	jne    20567 <png_decompress_chunk+0x57>
   2052b:	mov    $0x1,%r9d
   20531:	mov    %r9,-0x20(%rbp)
   20535:	xor    %r10d,%r10d
   20538:	mov    %r10,-0x28(%rbp)
   2053c:	test   %r8d,%r8d
   2053f:	je     20544 <png_decompress_chunk+0x34>
   20541:	mov    %r9,%r10
   20544:	mov    $0xfffffffffffffffc,%r11
   2054b:	add    %edx,%r10d
   2054e:	mov    %r10d,%r10d
   20551:	cmp    %rax,%r10
   20554:	jbe    20572 <png_decompress_chunk+0x62>
   20556:	mov    %r11,%rsi
   20559:	callq  6920 <png_zstream_error>
   2055e:	mov    $0xfffffffffffffffc,%rax
   20565:	leaveq 
   20566:	retq   
   20567:	cmp    $0xfffffffffffffffe,%r9
   2056b:	ja     2052b <png_decompress_chunk+0x1b>
   2056d:	mov    %r9,%rax
   20570:	jmp    2052b <png_decompress_chunk+0x1b>
   20572:	test   %r8d,%r8d
   20575:	jne    2057a <png_decompress_chunk+0x6a>
   20577:	xor    %r9d,%r9d
   2057a:	add    %edx,%r9d
   2057d:	mov    %r9d,%r9d
   20580:	sub    %r9,%rax
   20583:	mov    (%rcx),%r9
   20586:	cmp    %rax,%r9
   20589:	jbe    2058e <png_decompress_chunk+0x7e>
   2058b:	mov    %rax,(%rcx)
   2058e:	mov    0x218(%rdi),%eax
   20594:	mov    %rdi,%r9
   20597:	mov    %r14,-0x48(%rbp)
   2059b:	mov    %r15,-0x50(%rbp)
   2059f:	mov    %rdi,-0x40(%rbp)
   205a3:	mov    %rcx,-0x38(%rbp)
   205a7:	mov    %r8,-0x30(%rbp)
   205ab:	mov    %r9,%rdi
   205ae:	mov    %rsi,%r14
   205b1:	mov    %rax,%rsi
   205b4:	mov    %rdx,%r15
   205b7:	callq  201c0 <png_inflate_claim>
   205bc:	test   %eax,%eax
   205be:	je     205d6 <png_decompress_chunk+0xc6>
   205c0:	cmp    $0x1,%eax
   205c3:	jne    2062f <png_decompress_chunk+0x11f>
   205c5:	mov    $0xfffffffffffffff9,%rax
   205cc:	mov    -0x50(%rbp),%r15
   205d0:	mov    -0x48(%rbp),%r14
   205d4:	leaveq 
   205d5:	retq   
   205d6:	sub    %r15d,%r14d
   205d9:	mov    %r14,-0x8(%rbp)
   205dd:	mov    %r14d,-0x54(%rbp)
   205e1:	mov    %r15d,%ecx
   205e4:	mov    %rcx,-0x18(%rbp)
   205e8:	mov    -0x40(%rbp),%r14
   205ec:	add    0x458(%r14),%rcx
   205f3:	mov    0x218(%r14),%esi
   205fa:	mov    -0x38(%rbp),%rax
   205fe:	mov    %rax,(%rsp)
   20602:	lea    -0x54(%rbp),%r8
   20606:	mov    %r14,%rdi
   20609:	mov    $0x1,%edx
   2060e:	xor    %r9d,%r9d
   20611:	mov    %r15,-0x40(%rbp)
   20615:	mov    %rax,%r15
   20618:	callq  20330 <png_inflate>
   2061d:	cmp    $0x1,%eax
   20620:	je     20639 <png_decompress_chunk+0x129>
   20622:	test   %eax,%eax
   20624:	jne    2065d <png_decompress_chunk+0x14d>
   20626:	mov    $0xfffffffffffffff9,%rax
   2062d:	jmp    2065d <png_decompress_chunk+0x14d>
   2062f:	mov    -0x50(%rbp),%r15
   20633:	mov    -0x48(%rbp),%r14
   20637:	leaveq 
   20638:	retq   
   20639:	lea    0x140(%r14),%rdi
   20640:	callq  57f0 <inflateReset@plt>
   20645:	test   %eax,%eax
   20647:	je     20672 <png_decompress_chunk+0x162>
   20649:	mov    %r14,%rdi
   2064c:	mov    $0x1,%esi
   20651:	callq  6920 <png_zstream_error>
   20656:	mov    $0xfffffffffffffff9,%rax
   2065d:	movl   $0x0,0x138(%r14)
   20668:	mov    -0x50(%rbp),%r15
   2066c:	mov    -0x48(%rbp),%r14
   20670:	leaveq 
   20671:	retq   
   20672:	mov    -0x30(%rbp),%rax
   20676:	test   %eax,%eax
   20678:	mov    (%r15),%rax
   2067b:	mov    %rax,-0x10(%rbp)
   2067f:	je     20687 <png_decompress_chunk+0x177>
   20681:	pushq  -0x20(%rbp)
   20684:	popq   -0x28(%rbp)
   20687:	mov    -0x40(%rbp),%rcx
   2068b:	mov    %ecx,%ecx
   2068d:	mov    %rcx,-0x20(%rbp)
   20691:	add    %rcx,%rax
   20694:	mov    -0x28(%rbp),%rcx
   20698:	lea    (%rcx,%rax,1),%r15
   2069c:	mov    %r14,%rdi
   2069f:	mov    %r15,%rsi
   206a2:	callq  c950 <png_malloc_base>
   206a7:	test   %rax,%rax
   206aa:	jne    206c3 <png_decompress_chunk+0x1b3>
   206ac:	mov    %r14,%rdi
   206af:	mov    $0xfffffffffffffffc,%r15
   206b6:	mov    %r15,%rsi
   206b9:	callq  6920 <png_zstream_error>
   206be:	mov    %r15,%rax
   206c1:	jmp    2065d <png_decompress_chunk+0x14d>
   206c3:	mov    %rax,%rdi
   206c6:	mov    %r15,%rdx
   206c9:	mov    %r15,-0x28(%rbp)
   206cd:	mov    %rax,%r15
   206d0:	xor    %esi,%esi
   206d2:	callq  5350 <memset@plt>
   206d7:	mov    -0x18(%rbp),%rax
   206db:	mov    %rax,%rcx
   206de:	add    0x458(%r14),%rcx
   206e5:	lea    (%rax,%r15,1),%r9
   206e9:	mov    0x218(%r14),%esi
   206f0:	mov    -0x38(%rbp),%rax
   206f4:	mov    %rax,(%rsp)
   206f8:	mov    %r14,%rdi
   206fb:	mov    $0x1,%edx
   20700:	mov    %r13,-0x38(%rbp)
   20704:	mov    %rax,%r13
   20707:	lea    -0x54(%rbp),%r8
   2070b:	callq  20330 <png_inflate>
   20710:	cmp    $0x1,%eax
   20713:	je     20722 <png_decompress_chunk+0x212>
   20715:	test   %eax,%eax
   20717:	jne    20768 <png_decompress_chunk+0x258>
   20719:	mov    $0xfffffffffffffff9,%rax
   20720:	jmp    20768 <png_decompress_chunk+0x258>
   20722:	mov    0x0(%r13),%rax
   20726:	mov    -0x10(%rbp),%rcx
   2072a:	cmp    %rax,%rcx
   2072d:	je     20788 <png_decompress_chunk+0x278>
   2072f:	mov    $0xfffffffffffffff9,%rax
   20736:	jmp    20768 <png_decompress_chunk+0x258>
   20738:	mov    %r15,%r13
   2073b:	mov    0x458(%r14),%rsi
   20742:	mov    %r13,%rdi
   20745:	callq  54c0 <memcpy@plt>
   2074a:	mov    0x458(%r14),%r15
   20751:	mov    %r13,0x458(%r14)
   20758:	mov    -0x28(%rbp),%rax
   2075c:	mov    %rax,0x460(%r14)
   20763:	mov    $0x1,%eax
   20768:	mov    %r15,%rsi
   2076b:	mov    %rax,%r15
   2076e:	mov    %r14,%rdi
   20771:	callq  5790 <png_free@plt>
   20776:	cmp    $0x1,%r15d
   2077a:	je     20796 <png_decompress_chunk+0x286>
   2077c:	mov    %r15,%rax
   2077f:	mov    -0x38(%rbp),%r13
   20783:	jmpq   2065d <png_decompress_chunk+0x14d>
   20788:	mov    -0x30(%rbp),%rcx
   2078c:	test   %ecx,%ecx
   2078e:	jne    207ad <png_decompress_chunk+0x29d>
   20790:	mov    -0x20(%rbp),%rdx
   20794:	jmp    207b9 <png_decompress_chunk+0x2a9>
   20796:	mov    -0x8(%rbp),%rax
   2079a:	cmp    -0x54(%rbp),%eax
   2079d:	jne    207ca <png_decompress_chunk+0x2ba>
   2079f:	mov    -0x38(%rbp),%r13
   207a3:	mov    $0x1,%eax
   207a8:	jmpq   2065d <png_decompress_chunk+0x14d>
   207ad:	mov    -0x20(%rbp),%rdx
   207b1:	add    %rdx,%rax
   207b4:	movb   $0x0,(%r15,%rax,1)
   207b9:	mov    -0x40(%rbp),%rax
   207bd:	test   %eax,%eax
   207bf:	jne    20738 <png_decompress_chunk+0x228>
   207c5:	mov    %r15,%r13
   207c8:	jmp    2074a <png_decompress_chunk+0x23a>
   207ca:	lea    0xe249(%rip),%rsi        # 2ea1a <png_pass_inc.20+0x1a7>
   207d1:	mov    %r14,%rdi
   207d4:	callq  5230 <png_chunk_benign_error@plt>
   207d9:	mov    -0x38(%rbp),%r13
   207dd:	mov    $0x1,%eax
   207e2:	jmpq   2065d <png_decompress_chunk+0x14d>
   207e7:	nopw   0x0(%rax,%rax,1)

00000000000207f0 <png_inflate_read>:
   207f0:	push   %rbp
   207f1:	mov    %rsp,%rbp
   207f4:	sub    $0x40,%rsp
   207f8:	mov    %rsi,-0x38(%rbp)
   207fc:	mov    0x218(%rdi),%eax
   20802:	cmp    0x138(%rdi),%eax
   20808:	je     20821 <png_inflate_read+0x31>
   2080a:	lea    0xe53f(%rip),%rax        # 2ed50 <png_pass_inc.20+0x4dd>
   20811:	mov    %rax,0x170(%rdi)
   20818:	mov    $0xfffffffffffffffe,%rax
   2081f:	leaveq 
   20820:	retq   
   20821:	mov    %r8,0x158(%rdi)
   20828:	movl   $0x0,0x160(%rdi)
   20832:	movslq 0x10(%rbp),%r10
   20836:	mov    %r10,-0x30(%rbp)
   2083a:	xor    %eax,%eax
   2083c:	mov    $0x4,%r8d
   20842:	mov    $0x2,%r11d
   20848:	mov    %r15,-0x28(%rbp)
   2084c:	mov    $0xffffffff,%r15d
   20852:	mov    %r14,-0x20(%rbp)
   20856:	mov    $0xfffffffe,%r14d
   2085c:	mov    %rbx,-0x8(%rbp)
   20860:	mov    %r12,-0x10(%rbp)
   20864:	mov    %r13,-0x18(%rbp)
   20868:	mov    %rdx,%rbx
   2086b:	mov    %rdi,%r12
   2086e:	mov    %r9,%r13
   20871:	mov    %r15,%rdx
   20874:	mov    %r10,%r15
   20877:	mov    %r14,%r10
   2087a:	mov    %rcx,%r14
   2087d:	mov    %rsi,%rcx
   20880:	mov    %rax,%rsi
   20883:	mov    %rdx,%rax
   20886:	jmpq   20949 <png_inflate_read+0x159>
   2088b:	mov    (%r14),%edx
   2088e:	cmp    %ebx,%edx
   20890:	jae    20895 <png_inflate_read+0xa5>
   20892:	mov    %rdx,%rbx
   20895:	sub    %ebx,%edx
   20897:	mov    %edx,(%r14)
   2089a:	test   %ebx,%ebx
   2089c:	je     208cf <png_inflate_read+0xdf>
   2089e:	mov    %rcx,%r15
   208a1:	mov    %r12,%rdi
   208a4:	mov    %r15,%rsi
   208a7:	mov    %rbx,%rdx
   208aa:	callq  1b220 <png_crc_read>
   208af:	mov    %r15,%rcx
   208b2:	mov    $0x2,%r11d
   208b8:	mov    $0x4,%r8d
   208be:	xor    %esi,%esi
   208c0:	mov    $0xffffffff,%eax
   208c5:	mov    $0xfffffffe,%r10d
   208cb:	mov    -0x30(%rbp),%r15
   208cf:	mov    %rcx,0x140(%r12)
   208d7:	mov    %ebx,0x148(%r12)
   208df:	mov    0x160(%r12),%ecx
   208e7:	test   %ecx,%ecx
   208e9:	jne    20908 <png_inflate_read+0x118>
   208eb:	mov    0x0(%r13),%rcx
   208ef:	cmp    %r10,%rcx
   208f2:	ja     208f7 <png_inflate_read+0x107>
   208f4:	mov    %rcx,%rax
   208f7:	mov    %eax,%edx
   208f9:	sub    %rdx,%rcx
   208fc:	mov    %rcx,0x0(%r13)
   20900:	mov    %eax,0x160(%r12)
   20908:	mov    (%r14),%eax
   2090b:	test   %eax,%eax
   2090d:	jne    20917 <png_inflate_read+0x127>
   2090f:	test   %r15d,%r15d
   20912:	jne    2095b <png_inflate_read+0x16b>
   20914:	mov    %r11,%rsi
   20917:	mov    %r12,%rdi
   2091a:	callq  1ca90 <png_zlib_inflate>
   2091f:	test   %eax,%eax
   20921:	jne    20960 <png_inflate_read+0x170>
   20923:	mov    0x0(%r13),%rcx
   20927:	test   %rcx,%rcx
   2092a:	je     209a1 <png_inflate_read+0x1b1>
   2092c:	mov    -0x38(%rbp),%rcx
   20930:	mov    $0x2,%r11d
   20936:	mov    $0x4,%r8d
   2093c:	xor    %esi,%esi
   2093e:	mov    $0xffffffff,%eax
   20943:	mov    $0xfffffffe,%r10d
   20949:	mov    0x148(%r12),%edx
   20951:	test   %edx,%edx
   20953:	je     2088b <png_inflate_read+0x9b>
   20959:	jmp    208df <png_inflate_read+0xef>
   2095b:	mov    %r8,%rsi
   2095e:	jmp    20917 <png_inflate_read+0x127>
   20960:	mov    0x160(%r12),%ecx
   20968:	add    0x0(%r13),%rcx
   2096c:	mov    %rcx,0x0(%r13)
   20970:	mov    %r12,%rdi
   20973:	mov    %rax,%r15
   20976:	movl   $0x0,0x160(%rdi)
   20980:	mov    %r15,%rsi
   20983:	callq  6920 <png_zstream_error>
   20988:	mov    %r15,%rax
   2098b:	mov    -0x18(%rbp),%r13
   2098f:	mov    -0x10(%rbp),%r12
   20993:	mov    -0x8(%rbp),%rbx
   20997:	mov    -0x20(%rbp),%r14
   2099b:	mov    -0x28(%rbp),%r15
   2099f:	leaveq 
   209a0:	retq   
   209a1:	mov    0x160(%r12),%ecx
   209a9:	test   %ecx,%ecx
   209ab:	je     20960 <png_inflate_read+0x170>
   209ad:	mov    -0x38(%rbp),%rcx
   209b1:	mov    $0x2,%r11d
   209b7:	mov    $0x4,%r8d
   209bd:	xor    %esi,%esi
   209bf:	mov    $0xffffffff,%eax
   209c4:	mov    $0xfffffffe,%r10d
   209ca:	jmpq   20949 <png_inflate_read+0x159>
   209cf:	nop

00000000000209d0 <png_cache_unknown_chunk>:
   209d0:	push   %rbp
   209d1:	mov    %rsp,%rbp
   209d4:	sub    $0x10,%rsp
   209d8:	mov    %r15,-0x10(%rbp)
   209dc:	mov    0x438(%rdi),%rax
   209e3:	test   %rax,%rax
   209e6:	jne    209f0 <png_cache_unknown_chunk+0x20>
   209e8:	mov    %r15,%rcx
   209eb:	mov    %rdi,%r15
   209ee:	jmp    20a1e <png_cache_unknown_chunk+0x4e>
   209f0:	mov    %rdi,%rcx
   209f3:	mov    %r14,-0x8(%rbp)
   209f7:	mov    %rsi,%r14
   209fa:	mov    %rax,%rsi
   209fd:	mov    %rdi,%r15
   20a00:	mov    %rcx,%rdi
   20a03:	callq  5790 <png_free@plt>
   20a08:	movq   $0x0,0x438(%r15)
   20a13:	mov    %r14,%rsi
   20a16:	mov    -0x10(%rbp),%rcx
   20a1a:	mov    -0x8(%rbp),%r14
   20a1e:	mov    $0xffffffffffffffff,%rax
   20a25:	mov    0x428(%r15),%rdx
   20a2c:	test   %rdx,%rdx
   20a2f:	jne    20a5a <png_cache_unknown_chunk+0x8a>
   20a31:	mov    %esi,%edx
   20a33:	cmp    %rdx,%rax
   20a36:	jae    20a65 <png_cache_unknown_chunk+0x95>
   20a38:	xor    %eax,%eax
   20a3a:	mov    0x438(%r15),%rdx
   20a41:	test   %rdx,%rdx
   20a44:	je     20ae5 <png_cache_unknown_chunk+0x115>
   20a4a:	test   %esi,%esi
   20a4c:	jne    20b0c <png_cache_unknown_chunk+0x13c>
   20a52:	mov    %rax,%rsi
   20a55:	jmpq   20b23 <png_cache_unknown_chunk+0x153>
   20a5a:	cmp    $0xfffffffffffffffe,%rdx
   20a5e:	ja     20a31 <png_cache_unknown_chunk+0x61>
   20a60:	mov    %rdx,%rax
   20a63:	jmp    20a31 <png_cache_unknown_chunk+0x61>
   20a65:	mov    0x218(%r15),%eax
   20a6c:	mov    %rax,%rdi
   20a6f:	shr    $0x18,%edi
   20a72:	mov    %dil,0x430(%r15)
   20a79:	mov    %rax,%rdi
   20a7c:	shr    $0x10,%edi
   20a7f:	mov    %dil,0x431(%r15)
   20a86:	mov    %rax,%rdi
   20a89:	shr    $0x8,%edi
   20a8c:	mov    %dil,0x432(%r15)
   20a93:	mov    %al,0x433(%r15)
   20a9a:	movb   $0x0,0x434(%r15)
   20aa2:	mov    %rdx,0x440(%r15)
   20aa9:	movzbl 0x12c(%r15),%eax
   20ab1:	mov    %al,0x448(%r15)
   20ab8:	test   %esi,%esi
   20aba:	je     20b35 <png_cache_unknown_chunk+0x165>
   20abc:	mov    %r15,%rdi
   20abf:	mov    %r14,-0x8(%rbp)
   20ac3:	mov    %rsi,%r14
   20ac6:	mov    %rdx,%rsi
   20ac9:	callq  5150 <png_malloc_warn@plt>
   20ace:	mov    %rax,0x438(%r15)
   20ad5:	mov    %r14,%rsi
   20ad8:	mov    -0x10(%rbp),%rcx
   20adc:	mov    -0x8(%rbp),%r14
   20ae0:	jmpq   20a38 <png_cache_unknown_chunk+0x68>
   20ae5:	test   %esi,%esi
   20ae7:	je     20a4a <png_cache_unknown_chunk+0x7a>
   20aed:	mov    %r15,%rdi
   20af0:	callq  1b280 <png_crc_finish>
   20af5:	mov    %r15,%rdi
   20af8:	lea    0xe263(%rip),%rsi        # 2ed62 <png_pass_inc.20+0x4ef>
   20aff:	callq  5230 <png_chunk_benign_error@plt>
   20b04:	xor    %eax,%eax
   20b06:	mov    -0x10(%rbp),%r15
   20b0a:	leaveq 
   20b0b:	retq   
   20b0c:	mov    %rsi,%rax
   20b0f:	mov    %rdx,%rsi
   20b12:	mov    %rax,%rdx
   20b15:	mov    %r15,%rdi
   20b18:	callq  1b220 <png_crc_read>
   20b1d:	xor    %esi,%esi
   20b1f:	mov    -0x10(%rbp),%rcx
   20b23:	mov    %r15,%rdi
   20b26:	mov    %rcx,%r15
   20b29:	callq  1b280 <png_crc_finish>
   20b2e:	mov    $0x1,%eax
   20b33:	leaveq 
   20b34:	retq   
   20b35:	movq   $0x0,0x438(%r15)
   20b40:	jmpq   20a38 <png_cache_unknown_chunk+0x68>
   20b45:	data16 nopw %cs:0x0(%rax,%rax,1)

0000000000020b50 <png_read_filter_row_sub>:
   20b50:	push   %rbp
   20b51:	mov    %rsp,%rbp
   20b54:	mov    0x8(%rdi),%rdx
   20b58:	movzbl 0x13(%rdi),%eax
   20b5c:	add    $0x7,%eax
   20b5f:	shr    $0x3,%eax
   20b62:	mov    %eax,%r8d
   20b65:	lea    (%r8,%rsi,1),%rax
   20b69:	mov    %r8,%rcx
   20b6c:	jmp    20b87 <png_read_filter_row_sub+0x37>
   20b6e:	mov    %rax,%rsi
   20b71:	sub    %r8,%rsi
   20b74:	movzbl (%rsi),%esi
   20b77:	movzbl (%rax),%edi
   20b7a:	add    %edi,%esi
   20b7c:	mov    %sil,(%rax)
   20b7f:	add    $0x1,%rcx
   20b83:	add    $0x1,%rax
   20b87:	cmp    %rdx,%rcx
   20b8a:	jb     20b6e <png_read_filter_row_sub+0x1e>
   20b8c:	leaveq 
   20b8d:	retq   
   20b8e:	xchg   %ax,%ax

0000000000020b90 <png_read_filter_row_up>:
   20b90:	push   %rbp
   20b91:	mov    %rsp,%rbp
   20b94:	mov    0x8(%rdi),%r8
   20b98:	xor    %eax,%eax
   20b9a:	jmp    20bb2 <png_read_filter_row_up+0x22>
   20b9c:	movzbl (%rdx),%ecx
   20b9f:	movzbl (%rsi),%edi
   20ba2:	add    %edi,%ecx
   20ba4:	mov    %cl,(%rsi)
   20ba6:	add    $0x1,%rax
   20baa:	add    $0x1,%rdx
   20bae:	add    $0x1,%rsi
   20bb2:	cmp    %r8,%rax
   20bb5:	jb     20b9c <png_read_filter_row_up+0xc>
   20bb7:	leaveq 
   20bb8:	retq   
   20bb9:	nopl   0x0(%rax)

0000000000020bc0 <png_read_filter_row_avg>:
   20bc0:	push   %rbp
   20bc1:	mov    %rsp,%rbp
   20bc4:	mov    0x8(%rdi),%r8
   20bc8:	movzbl 0x13(%rdi),%eax
   20bcc:	lea    0x7(%rax),%r9d
   20bd0:	shr    $0x3,%r9d
   20bd4:	mov    %r9d,%r11d
   20bd7:	xor    %eax,%eax
   20bd9:	mov    %rax,%rdi
   20bdc:	jmp    20bf8 <png_read_filter_row_avg+0x38>
   20bde:	movzbl (%rdx),%ecx
   20be1:	shr    %ecx
   20be3:	movzbl (%rsi),%r10d
   20be7:	add    %r10d,%ecx
   20bea:	mov    %cl,(%rsi)
   20bec:	add    $0x1,%rdx
   20bf0:	add    $0x1,%rsi
   20bf4:	add    $0x1,%rdi
   20bf8:	cmp    %r11,%rdi
   20bfb:	jb     20bde <png_read_filter_row_avg+0x1e>
   20bfd:	sub    %r11,%r8
   20c00:	mov    %r9d,%r9d
   20c03:	jmp    20c28 <png_read_filter_row_avg+0x68>
   20c05:	mov    %rsi,%rcx
   20c08:	sub    %r9,%rcx
   20c0b:	movzbl (%rcx),%edi
   20c0e:	movzbl (%rdx),%ecx
   20c11:	add    %edi,%ecx
   20c13:	shr    %ecx
   20c15:	movzbl (%rsi),%edi
   20c18:	add    %edi,%ecx
   20c1a:	mov    %cl,(%rsi)
   20c1c:	add    $0x1,%rax
   20c20:	add    $0x1,%rsi
   20c24:	add    $0x1,%rdx
   20c28:	cmp    %r8,%rax
   20c2b:	jb     20c05 <png_read_filter_row_avg+0x45>
   20c2d:	leaveq 
   20c2e:	retq   
   20c2f:	nop

0000000000020c30 <png_read_filter_row_paeth_1byte_pixel>:
   20c30:	push   %rbp
   20c31:	mov    %rsp,%rbp
   20c34:	sub    $0x20,%rsp
   20c38:	mov    %r13,-0x8(%rbp)
   20c3c:	mov    %r14,-0x10(%rbp)
   20c40:	mov    %r15,-0x18(%rbp)
   20c44:	mov    %rsi,%r15
   20c47:	add    0x8(%rdi),%r15
   20c4b:	movzbl (%rsi),%eax
   20c4e:	movzbl (%rdx),%r9d
   20c52:	lea    (%rax,%r9,1),%edi
   20c56:	mov    %dil,(%rsi)
   20c59:	lea    0x1(%rsi),%rax
   20c5d:	lea    0x1(%rdx),%rcx
   20c61:	jmp    20c98 <png_read_filter_row_paeth_1byte_pixel+0x68>
   20c63:	mov    %rdi,%r14
   20c66:	add    %r10d,%esi
   20c69:	test   %esi,%esi
   20c6b:	jns    20c71 <png_read_filter_row_paeth_1byte_pixel+0x41>
   20c6d:	lea    (%rdi,%r11,1),%esi
   20c71:	cmp    %r8d,%r14d
   20c74:	jge    20c7c <png_read_filter_row_paeth_1byte_pixel+0x4c>
   20c76:	mov    %r14,%r8
   20c79:	mov    %r13,%rdx
   20c7c:	cmp    %esi,%r8d
   20c7f:	jle    20c84 <png_read_filter_row_paeth_1byte_pixel+0x54>
   20c81:	mov    %r9,%rdx
   20c84:	movzbl (%rax),%esi
   20c87:	lea    (%rdx,%rsi,1),%edi
   20c8a:	mov    %dil,(%rax)
   20c8d:	add    $0x1,%rax
   20c91:	add    $0x1,%rcx
   20c95:	mov    %r13,%r9
   20c98:	cmp    %r15,%rax
   20c9b:	jb     20cab <png_read_filter_row_paeth_1byte_pixel+0x7b>
   20c9d:	mov    -0x18(%rbp),%r15
   20ca1:	mov    -0x10(%rbp),%r14
   20ca5:	mov    -0x8(%rbp),%r13
   20ca9:	leaveq 
   20caa:	retq   
   20cab:	movzbl (%rcx),%r13d
   20caf:	mov    %r9,%r11
   20cb2:	sub    %r13d,%r11d
   20cb5:	mov    %r13,%r10
   20cb8:	sub    %r9d,%r10d
   20cbb:	test   %r10d,%r10d
   20cbe:	js     20cc5 <png_read_filter_row_paeth_1byte_pixel+0x95>
   20cc0:	mov    %r10,%r8
   20cc3:	jmp    20cc8 <png_read_filter_row_paeth_1byte_pixel+0x98>
   20cc5:	mov    %r11,%r8
   20cc8:	movzbl %dil,%edx
   20ccc:	mov    %r9,%rdi
   20ccf:	sub    %edx,%edi
   20cd1:	mov    %rdx,%rsi
   20cd4:	sub    %r9d,%esi
   20cd7:	test   %esi,%esi
   20cd9:	js     20c63 <png_read_filter_row_paeth_1byte_pixel+0x33>
   20cdb:	mov    %rsi,%r14
   20cde:	jmp    20c66 <png_read_filter_row_paeth_1byte_pixel+0x36>

0000000000020ce0 <png_read_filter_row_paeth_multibyte_pixel>:
   20ce0:	push   %rbp
   20ce1:	mov    %rsp,%rbp
   20ce4:	sub    $0x20,%rsp
   20ce8:	movzbl 0x13(%rdi),%eax
   20cec:	add    $0x7,%eax
   20cef:	shr    $0x3,%eax
   20cf2:	mov    %eax,%r9d
   20cf5:	lea    (%r9,%rsi,1),%rcx
   20cf9:	jmp    20d0f <png_read_filter_row_paeth_multibyte_pixel+0x2f>
   20cfb:	movzbl (%rdx),%r8d
   20cff:	movzbl (%rsi),%eax
   20d02:	add    %r8d,%eax
   20d05:	mov    %al,(%rsi)
   20d07:	add    $0x1,%rdx
   20d0b:	add    $0x1,%rsi
   20d0f:	cmp    %rcx,%rsi
   20d12:	jb     20cfb <png_read_filter_row_paeth_multibyte_pixel+0x1b>
   20d14:	mov    0x8(%rdi),%rax
   20d18:	sub    %r9,%rax
   20d1b:	lea    (%rcx,%rax,1),%r8
   20d1f:	mov    %r12,-0x8(%rbp)
   20d23:	mov    %r13,-0x10(%rbp)
   20d27:	mov    %r14,-0x18(%rbp)
   20d2b:	mov    %r15,-0x20(%rbp)
   20d2f:	jmp    20d60 <png_read_filter_row_paeth_multibyte_pixel+0x80>
   20d31:	mov    %r11,%r14
   20d34:	add    %r10d,%ecx
   20d37:	test   %ecx,%ecx
   20d39:	jns    20d3f <png_read_filter_row_paeth_multibyte_pixel+0x5f>
   20d3b:	lea    (%r11,%r12,1),%ecx
   20d3f:	cmp    %edi,%r14d
   20d42:	jge    20d4a <png_read_filter_row_paeth_multibyte_pixel+0x6a>
   20d44:	mov    %r13,%rax
   20d47:	mov    %r14,%rdi
   20d4a:	cmp    %ecx,%edi
   20d4c:	jle    20d51 <png_read_filter_row_paeth_multibyte_pixel+0x71>
   20d4e:	mov    %r15,%rax
   20d51:	movzbl (%rsi),%ecx
   20d54:	add    %ecx,%eax
   20d56:	mov    %al,(%rsi)
   20d58:	add    $0x1,%rsi
   20d5c:	add    $0x1,%rdx
   20d60:	cmp    %r8,%rsi
   20d63:	jb     20d77 <png_read_filter_row_paeth_multibyte_pixel+0x97>
   20d65:	mov    -0x20(%rbp),%r15
   20d69:	mov    -0x18(%rbp),%r14
   20d6d:	mov    -0x10(%rbp),%r13
   20d71:	mov    -0x8(%rbp),%r12
   20d75:	leaveq 
   20d76:	retq   
   20d77:	mov    %rsi,%rax
   20d7a:	sub    %r9,%rax
   20d7d:	movzbl (%rax),%eax
   20d80:	mov    %rdx,%rcx
   20d83:	sub    %r9,%rcx
   20d86:	movzbl (%rcx),%r15d
   20d8a:	movzbl (%rdx),%r13d
   20d8e:	mov    %r15,%r12
   20d91:	sub    %r13d,%r12d
   20d94:	mov    %r13,%r10
   20d97:	sub    %r15d,%r10d
   20d9a:	test   %r10d,%r10d
   20d9d:	js     20da4 <png_read_filter_row_paeth_multibyte_pixel+0xc4>
   20d9f:	mov    %r10,%rdi
   20da2:	jmp    20da7 <png_read_filter_row_paeth_multibyte_pixel+0xc7>
   20da4:	mov    %r12,%rdi
   20da7:	mov    %r15,%r11
   20daa:	sub    %eax,%r11d
   20dad:	mov    %rax,%rcx
   20db0:	sub    %r15d,%ecx
   20db3:	test   %ecx,%ecx
   20db5:	js     20d31 <png_read_filter_row_paeth_multibyte_pixel+0x51>
   20dbb:	mov    %rcx,%r14
   20dbe:	jmpq   20d34 <png_read_filter_row_paeth_multibyte_pixel+0x54>
   20dc3:	data16 nopw %cs:0x0(%rax,%rax,1)
   20dce:	xchg   %ax,%ax

0000000000020dd0 <png_init_filter_functions>:
   20dd0:	push   %rbp
   20dd1:	mov    %rsp,%rbp
   20dd4:	lea    -0x28b(%rip),%rax        # 20b50 <png_read_filter_row_sub>
   20ddb:	mov    %rax,0x478(%rdi)
   20de2:	lea    -0x259(%rip),%rax        # 20b90 <png_read_filter_row_up>
   20de9:	mov    %rax,0x480(%rdi)
   20df0:	lea    -0x237(%rip),%rax        # 20bc0 <png_read_filter_row_avg>
   20df7:	mov    %rax,0x488(%rdi)
   20dfe:	movzbl 0x26a(%rdi),%eax
   20e05:	add    $0x7,%eax
   20e08:	and    $0xfffffff8,%eax
   20e0b:	cmp    $0x8,%eax
   20e0e:	je     20e20 <png_init_filter_functions+0x50>
   20e10:	lea    -0x137(%rip),%rax        # 20ce0 <png_read_filter_row_paeth_multibyte_pixel>
   20e17:	mov    %rax,0x490(%rdi)
   20e1e:	leaveq 
   20e1f:	retq   
   20e20:	lea    -0x1f7(%rip),%rax        # 20c30 <png_read_filter_row_paeth_1byte_pixel>
   20e27:	mov    %rax,0x490(%rdi)
   20e2e:	leaveq 
   20e2f:	retq   

0000000000020e30 <png_set_compression_buffer_size>:
   20e30:	push   %rbp
   20e31:	mov    %rsp,%rbp
   20e34:	sub    $0x10,%rsp
   20e38:	test   %rdi,%rdi
   20e3b:	jne    20e3f <png_set_compression_buffer_size+0xf>
   20e3d:	leaveq 
   20e3e:	retq   
   20e3f:	test   %rsi,%rsi
   20e42:	je     20e79 <png_set_compression_buffer_size+0x49>
   20e44:	cmp    $0x7fffffff,%rsi
   20e4b:	ja     20e79 <png_set_compression_buffer_size+0x49>
   20e4d:	mov    0x12c(%rdi),%eax
   20e53:	and    $0x8000,%eax
   20e58:	test   %eax,%eax
   20e5a:	jne    20e85 <png_set_compression_buffer_size+0x55>
   20e5c:	mov    0x138(%rdi),%eax
   20e62:	test   %eax,%eax
   20e64:	jne    20e8d <png_set_compression_buffer_size+0x5d>
   20e66:	cmp    $0x5,%rsi
   20e6a:	jbe    20e9b <png_set_compression_buffer_size+0x6b>
   20e6c:	mov    0x1b8(%rdi),%eax
   20e72:	cmp    %rax,%rsi
   20e75:	jne    20ea9 <png_set_compression_buffer_size+0x79>
   20e77:	leaveq 
   20e78:	retq   
   20e79:	lea    0xdf06(%rip),%rsi        # 2ed86 <png_pass_inc.20+0x513>
   20e80:	callq  5470 <png_error@plt>
   20e85:	mov    %esi,0x468(%rdi)
   20e8b:	leaveq 
   20e8c:	retq   
   20e8d:	lea    0xdf12(%rip),%rsi        # 2eda6 <png_pass_inc.20+0x533>
   20e94:	callq  5390 <png_warning@plt>
   20e99:	leaveq 
   20e9a:	retq   
   20e9b:	lea    0xdf43(%rip),%rsi        # 2ede5 <png_pass_inc.20+0x572>
   20ea2:	callq  5390 <png_warning@plt>
   20ea7:	leaveq 
   20ea8:	retq   
   20ea9:	lea    0x1b0(%rdi),%rax
   20eb0:	mov    %rdi,%rcx
   20eb3:	mov    %r14,-0x8(%rbp)
   20eb7:	mov    %r15,-0x10(%rbp)
   20ebb:	mov    %rsi,%r14
   20ebe:	mov    %rax,%rsi
   20ec1:	mov    %rdi,%r15
   20ec4:	mov    %rcx,%rdi
   20ec7:	callq  277a0 <png_free_buffer_list>
   20ecc:	mov    %r14d,0x1b8(%r15)
   20ed3:	mov    -0x10(%rbp),%r15
   20ed7:	mov    -0x8(%rbp),%r14
   20edb:	leaveq 
   20edc:	retq   
   20edd:	nopl   (%rax)

0000000000020ee0 <png_set_read_user_chunk_fn>:
   20ee0:	push   %rbp
   20ee1:	mov    %rsp,%rbp
   20ee4:	test   %rdi,%rdi
   20ee7:	jne    20eeb <png_set_read_user_chunk_fn+0xb>
   20ee9:	leaveq 
   20eea:	retq   
   20eeb:	mov    %rdx,0x3b8(%rdi)
   20ef2:	mov    %rsi,0x3b0(%rdi)
   20ef9:	leaveq 
   20efa:	retq   
   20efb:	nopl   0x0(%rax,%rax,1)

0000000000020f00 <png_set_benign_errors>:
   20f00:	push   %rbp
   20f01:	mov    %rsp,%rbp
   20f04:	test   %esi,%esi
   20f06:	jne    20f1b <png_set_benign_errors+0x1b>
   20f08:	mov    0x130(%rdi),%eax
   20f0e:	and    $0xff8fffff,%eax
   20f13:	mov    %eax,0x130(%rdi)
   20f19:	leaveq 
   20f1a:	retq   
   20f1b:	mov    0x130(%rdi),%eax
   20f21:	or     $0x700000,%eax
   20f26:	mov    %eax,0x130(%rdi)
   20f2c:	leaveq 
   20f2d:	retq   
   20f2e:	xchg   %ax,%ax

0000000000020f30 <png_set_rows>:
   20f30:	push   %rbp
   20f31:	mov    %rsp,%rbp
   20f34:	sub    $0x10,%rsp
   20f38:	test   %rdi,%rdi
   20f3b:	jne    20f3f <png_set_rows+0xf>
   20f3d:	leaveq 
   20f3e:	retq   
   20f3f:	test   %rsi,%rsi
   20f42:	jne    20f46 <png_set_rows+0x16>
   20f44:	leaveq 
   20f45:	retq   
   20f46:	mov    0x160(%rsi),%rax
   20f4d:	test   %rax,%rax
   20f50:	jne    20f60 <png_set_rows+0x30>
   20f52:	mov    %rdx,0x160(%rsi)
   20f59:	test   %rdx,%rdx
   20f5c:	jne    20f98 <png_set_rows+0x68>
   20f5e:	leaveq 
   20f5f:	retq   
   20f60:	cmp    %rdx,%rax
   20f63:	je     20f52 <png_set_rows+0x22>
   20f65:	mov    $0x40,%eax
   20f6a:	xor    %ecx,%ecx
   20f6c:	mov    %rsi,%r8
   20f6f:	mov    %r14,-0x8(%rbp)
   20f73:	mov    %r15,-0x10(%rbp)
   20f77:	mov    %rdx,%r14
   20f7a:	mov    %rax,%rdx
   20f7d:	mov    %rsi,%r15
   20f80:	mov    %r8,%rsi
   20f83:	callq  5720 <png_free_data@plt>
   20f88:	mov    %r14,%rdx
   20f8b:	mov    %r15,%rsi
   20f8e:	mov    -0x10(%rbp),%r15
   20f92:	mov    -0x8(%rbp),%r14
   20f96:	jmp    20f52 <png_set_rows+0x22>
   20f98:	mov    0x8(%rsi),%eax
   20f9b:	or     $0x8000,%eax
   20fa0:	mov    %eax,0x8(%rsi)
   20fa3:	leaveq 
   20fa4:	retq   
   20fa5:	data16 nopw %cs:0x0(%rax,%rax,1)

0000000000020fb0 <png_set_bKGD>:
   20fb0:	push   %rbp
   20fb1:	mov    %rsp,%rbp
   20fb4:	test   %rdi,%rdi
   20fb7:	jne    20fbb <png_set_bKGD+0xb>
   20fb9:	leaveq 
   20fba:	retq   
   20fbb:	test   %rsi,%rsi
   20fbe:	jne    20fc2 <png_set_bKGD+0x12>
   20fc0:	leaveq 
   20fc1:	retq   
   20fc2:	test   %rdx,%rdx
   20fc5:	jne    20fc9 <png_set_bKGD+0x19>
   20fc7:	leaveq 
   20fc8:	retq   
   20fc9:	mov    (%rdx),%rax
   20fcc:	mov    %rax,0xca(%rsi)
   20fd3:	mov    0x8(%rsi),%eax
   20fd6:	or     $0x20,%eax
   20fd9:	movzwl 0x8(%rdx),%ecx
   20fdd:	mov    %eax,0x8(%rsi)
   20fe0:	mov    %cx,0xd2(%rsi)
   20fe7:	leaveq 
   20fe8:	retq   
   20fe9:	nopl   0x0(%rax)

0000000000020ff0 <png_set_cHRM>:
   20ff0:	push   %rbp
   20ff1:	mov    %rsp,%rbp
   20ff4:	sub    $0xb0,%rsp
   20ffb:	movdqu %xmm1,-0x80(%rbp)
   21000:	movdqu %xmm2,-0x70(%rbp)
   21005:	movdqu %xmm3,-0x60(%rbp)
   2100a:	movdqu %xmm4,-0x50(%rbp)
   2100f:	movdqu %xmm5,-0x40(%rbp)
   21014:	movdqu %xmm6,-0x30(%rbp)
   21019:	movdqu %xmm7,-0x20(%rbp)
   2101e:	mov    %r14,-0xa0(%rbp)
   21025:	mov    %r15,-0xa8(%rbp)
   2102c:	mov    %r13,-0x98(%rbp)
   21033:	mov    %r12,-0x90(%rbp)
   2103a:	mov    %rbx,-0x88(%rbp)
   21041:	mov    %rsi,%r12
   21044:	lea    0xddcc(%rip),%rsi        # 2ee17 <png_pass_inc.20+0x5a4>
   2104b:	mov    %rdi,%rbx
   2104e:	callq  69f0 <png_fixed>
   21053:	mov    %rax,-0x8(%rbp)
   21057:	lea    0xddc6(%rip),%rsi        # 2ee24 <png_pass_inc.20+0x5b1>
   2105e:	mov    %rbx,%rdi
   21061:	movdqu -0x80(%rbp),%xmm0
   21066:	callq  69f0 <png_fixed>
   2106b:	mov    %rax,-0x10(%rbp)
   2106f:	lea    0xddbb(%rip),%rsi        # 2ee31 <png_pass_inc.20+0x5be>
   21076:	mov    %rbx,%rdi
   21079:	movdqu -0x70(%rbp),%xmm0
   2107e:	callq  69f0 <png_fixed>
   21083:	mov    %rax,-0x70(%rbp)
   21087:	lea    0xddae(%rip),%rsi        # 2ee3c <png_pass_inc.20+0x5c9>
   2108e:	mov    %rbx,%rdi
   21091:	movdqu -0x60(%rbp),%xmm0
   21096:	callq  69f0 <png_fixed>
   2109b:	mov    %rax,-0x80(%rbp)
   2109f:	lea    0xdda1(%rip),%rsi        # 2ee47 <png_pass_inc.20+0x5d4>
   210a6:	mov    %rbx,%rdi
   210a9:	movdqu -0x50(%rbp),%xmm0
   210ae:	callq  69f0 <png_fixed>
   210b3:	mov    %rax,%r13
   210b6:	lea    0xdd97(%rip),%rsi        # 2ee54 <png_pass_inc.20+0x5e1>
   210bd:	mov    %rbx,%rdi
   210c0:	movdqu -0x40(%rbp),%xmm0
   210c5:	callq  69f0 <png_fixed>
   210ca:	mov    %rax,%r14
   210cd:	lea    0xdd8d(%rip),%rsi        # 2ee61 <png_pass_inc.20+0x5ee>
   210d4:	mov    %rbx,%rdi
   210d7:	movdqu -0x30(%rbp),%xmm0
   210dc:	callq  69f0 <png_fixed>
   210e1:	mov    %rax,%r15
   210e4:	lea    0xdd82(%rip),%rsi        # 2ee6d <png_pass_inc.20+0x5fa>
   210eb:	mov    %rbx,%rdi
   210ee:	movdqu -0x20(%rbp),%xmm0
   210f3:	callq  69f0 <png_fixed>
   210f8:	sub    $0x20,%rsp
   210fc:	mov    %r13d,(%rsp)
   21100:	mov    %r14d,0x8(%rsp)
   21105:	mov    %r15d,0x10(%rsp)
   2110a:	mov    %eax,0x18(%rsp)
   2110e:	mov    %r12,%rsi
   21111:	mov    %rbx,%rdi
   21114:	mov    -0x8(%rbp),%rdx
   21118:	mov    -0x10(%rbp),%rcx
   2111c:	mov    -0x70(%rbp),%r8
   21120:	mov    -0x80(%rbp),%r9
   21124:	callq  5250 <png_set_cHRM_fixed@plt>
   21129:	mov    -0x88(%rbp),%rbx
   21130:	mov    -0x90(%rbp),%r12
   21137:	mov    -0x98(%rbp),%r13
   2113e:	mov    -0xa8(%rbp),%r15
   21145:	mov    -0xa0(%rbp),%r14
   2114c:	leaveq 
   2114d:	retq   
   2114e:	xchg   %ax,%ax

0000000000021150 <png_set_cHRM_XYZ>:
   21150:	push   %rbp
   21151:	mov    %rsp,%rbp
   21154:	sub    $0xc0,%rsp
   2115b:	movdqu %xmm1,-0x90(%rbp)
   21163:	movdqu %xmm2,-0x80(%rbp)
   21168:	movdqu %xmm3,-0x70(%rbp)
   2116d:	movdqu %xmm4,-0x60(%rbp)
   21172:	movdqu %xmm5,-0x50(%rbp)
   21177:	movdqu %xmm6,-0x40(%rbp)
   2117c:	movdqu %xmm7,-0x30(%rbp)
   21181:	mov    %r14,-0xb0(%rbp)
   21188:	mov    %r15,-0xb8(%rbp)
   2118f:	mov    %r13,-0xa8(%rbp)
   21196:	mov    %r12,-0xa0(%rbp)
   2119d:	mov    %rbx,-0x98(%rbp)
   211a4:	mov    %rsi,-0x8(%rbp)
   211a8:	lea    0xdc82(%rip),%rsi        # 2ee31 <png_pass_inc.20+0x5be>
   211af:	mov    %rdi,%rbx
   211b2:	callq  69f0 <png_fixed>
   211b7:	mov    %rax,-0x10(%rbp)
   211bb:	lea    0xdc7a(%rip),%rsi        # 2ee3c <png_pass_inc.20+0x5c9>
   211c2:	mov    %rbx,%rdi
   211c5:	movdqu -0x90(%rbp),%xmm0
   211cd:	callq  69f0 <png_fixed>
   211d2:	mov    %rax,-0x18(%rbp)
   211d6:	lea    0xdc9c(%rip),%rsi        # 2ee79 <png_pass_inc.20+0x606>
   211dd:	mov    %rbx,%rdi
   211e0:	movdqu -0x80(%rbp),%xmm0
   211e5:	callq  69f0 <png_fixed>
   211ea:	mov    %rax,-0x80(%rbp)
   211ee:	lea    0xdc52(%rip),%rsi        # 2ee47 <png_pass_inc.20+0x5d4>
   211f5:	mov    %rbx,%rdi
   211f8:	movdqu -0x70(%rbp),%xmm0
   211fd:	callq  69f0 <png_fixed>
   21202:	mov    %rax,-0x90(%rbp)
   21209:	lea    0xdc44(%rip),%rsi        # 2ee54 <png_pass_inc.20+0x5e1>
   21210:	mov    %rbx,%rdi
   21213:	movdqu -0x60(%rbp),%xmm0
   21218:	callq  69f0 <png_fixed>
   2121d:	mov    %rax,%r12
   21220:	lea    0xdc5d(%rip),%rsi        # 2ee84 <png_pass_inc.20+0x611>
   21227:	mov    %rbx,%rdi
   2122a:	movdqu -0x50(%rbp),%xmm0
   2122f:	callq  69f0 <png_fixed>
   21234:	mov    %rax,%r13
   21237:	lea    0xdc23(%rip),%rsi        # 2ee61 <png_pass_inc.20+0x5ee>
   2123e:	mov    %rbx,%rdi
   21241:	movdqu -0x40(%rbp),%xmm0
   21246:	callq  69f0 <png_fixed>
   2124b:	mov    %rax,%r14
   2124e:	lea    0xdc18(%rip),%rsi        # 2ee6d <png_pass_inc.20+0x5fa>
   21255:	mov    %rbx,%rdi
   21258:	movdqu -0x30(%rbp),%xmm0
   2125d:	callq  69f0 <png_fixed>
   21262:	mov    %rax,%r15
   21265:	movsd  0x10(%rbp),%xmm0
   2126a:	lea    0xdc20(%rip),%rsi        # 2ee91 <png_pass_inc.20+0x61e>
   21271:	mov    %rbx,%rdi
   21274:	callq  69f0 <png_fixed>
   21279:	sub    $0x20,%rsp
   2127d:	mov    %r12d,(%rsp)
   21281:	mov    %r13d,0x8(%rsp)
   21286:	mov    %r14d,0x10(%rsp)
   2128b:	mov    %r15d,0x18(%rsp)
   21290:	mov    %eax,0x20(%rsp)
   21294:	mov    %rbx,%rdi
   21297:	mov    -0x8(%rbp),%rsi
   2129b:	mov    -0x10(%rbp),%rdx
   2129f:	mov    -0x18(%rbp),%rcx
   212a3:	mov    -0x80(%rbp),%r8
   212a7:	mov    -0x90(%rbp),%r9
   212ae:	callq  58a0 <png_set_cHRM_XYZ_fixed@plt>
   212b3:	mov    -0x98(%rbp),%rbx
   212ba:	mov    -0xa0(%rbp),%r12
   212c1:	mov    -0xa8(%rbp),%r13
   212c8:	mov    -0xb8(%rbp),%r15
   212cf:	mov    -0xb0(%rbp),%r14
   212d6:	leaveq 
   212d7:	retq   
   212d8:	nopl   0x0(%rax,%rax,1)

00000000000212e0 <png_set_cHRM_fixed>:
   212e0:	push   %rbp
   212e1:	mov    %rsp,%rbp
   212e4:	sub    $0x30,%rsp
   212e8:	test   %rdi,%rdi
   212eb:	jne    212ef <png_set_cHRM_fixed+0xf>
   212ed:	leaveq 
   212ee:	retq   
   212ef:	test   %rsi,%rsi
   212f2:	jne    212f6 <png_set_cHRM_fixed+0x16>
   212f4:	leaveq 
   212f5:	retq   
   212f6:	mov    %r8d,-0x30(%rbp)
   212fa:	mov    %r9d,-0x2c(%rbp)
   212fe:	movslq 0x10(%rbp),%rax
   21302:	mov    %eax,-0x28(%rbp)
   21305:	movslq 0x18(%rbp),%rax
   21309:	mov    %eax,-0x24(%rbp)
   2130c:	movslq 0x20(%rbp),%rax
   21310:	mov    %eax,-0x20(%rbp)
   21313:	movslq 0x28(%rbp),%rax
   21317:	mov    %eax,-0x1c(%rbp)
   2131a:	mov    %edx,-0x18(%rbp)
   2131d:	mov    %ecx,-0x14(%rbp)
   21320:	lea    0x34(%rsi),%rax
   21324:	lea    -0x30(%rbp),%rdx
   21328:	mov    $0x2,%ecx
   2132d:	mov    %rdi,%r8
   21330:	mov    %r14,-0x8(%rbp)
   21334:	mov    %r15,-0x10(%rbp)
   21338:	mov    %rsi,%r14
   2133b:	mov    %rax,%rsi
   2133e:	mov    %rdi,%r15
   21341:	mov    %r8,%rdi
   21344:	callq  7070 <png_colorspace_set_chromaticities>
   21349:	test   %eax,%eax
   2134b:	je     2135b <png_set_cHRM_fixed+0x7b>
   2134d:	movzwl 0x7e(%r14),%eax
   21352:	or     $0x10,%ax
   21356:	mov    %ax,0x7e(%r14)
   2135b:	mov    %r14,%rsi
   2135e:	mov    %r15,%rdi
   21361:	callq  6f80 <png_colorspace_sync_info>
   21366:	mov    -0x10(%rbp),%r15
   2136a:	mov    -0x8(%rbp),%r14
   2136e:	leaveq 
   2136f:	retq   

0000000000021370 <png_set_cHRM_XYZ_fixed>:
   21370:	push   %rbp
   21371:	mov    %rsp,%rbp
   21374:	sub    $0x40,%rsp
   21378:	test   %rdi,%rdi
   2137b:	jne    2137f <png_set_cHRM_XYZ_fixed+0xf>
   2137d:	leaveq 
   2137e:	retq   
   2137f:	test   %rsi,%rsi
   21382:	jne    21386 <png_set_cHRM_XYZ_fixed+0x16>
   21384:	leaveq 
   21385:	retq   
   21386:	mov    %edx,-0x34(%rbp)
   21389:	mov    %ecx,-0x30(%rbp)
   2138c:	mov    %r8d,-0x2c(%rbp)
   21390:	mov    %r9d,-0x28(%rbp)
   21394:	movslq 0x10(%rbp),%rax
   21398:	mov    %eax,-0x24(%rbp)
   2139b:	movslq 0x18(%rbp),%rax
   2139f:	mov    %eax,-0x20(%rbp)
   213a2:	movslq 0x20(%rbp),%rax
   213a6:	mov    %eax,-0x1c(%rbp)
   213a9:	movslq 0x28(%rbp),%rax
   213ad:	mov    %eax,-0x18(%rbp)
   213b0:	movslq 0x30(%rbp),%rax
   213b4:	mov    %eax,-0x14(%rbp)
   213b7:	lea    0x34(%rsi),%rax
   213bb:	lea    -0x34(%rbp),%rdx
   213bf:	mov    $0x2,%ecx
   213c4:	mov    %rdi,%r8
   213c7:	mov    %r14,-0x8(%rbp)
   213cb:	mov    %r15,-0x10(%rbp)
   213cf:	mov    %rsi,%r14
   213d2:	mov    %rax,%rsi
   213d5:	mov    %rdi,%r15
   213d8:	mov    %r8,%rdi
   213db:	callq  7120 <png_colorspace_set_endpoints>
   213e0:	test   %eax,%eax
   213e2:	je     213f2 <png_set_cHRM_XYZ_fixed+0x82>
   213e4:	movzwl 0x7e(%r14),%eax
   213e9:	or     $0x10,%ax
   213ed:	mov    %ax,0x7e(%r14)
   213f2:	mov    %r14,%rsi
   213f5:	mov    %r15,%rdi
   213f8:	callq  6f80 <png_colorspace_sync_info>
   213fd:	mov    -0x10(%rbp),%r15
   21401:	mov    -0x8(%rbp),%r14
   21405:	leaveq 
   21406:	retq   
   21407:	nopw   0x0(%rax,%rax,1)

0000000000021410 <png_set_eXIf>:
   21410:	push   %rbp
   21411:	mov    %rsp,%rbp
   21414:	lea    0xda82(%rip),%rsi        # 2ee9d <png_pass_inc.20+0x62a>
   2141b:	callq  5390 <png_warning@plt>
   21420:	leaveq 
   21421:	retq   
   21422:	data16 nopw %cs:0x0(%rax,%rax,1)
   2142d:	nopl   (%rax)

0000000000021430 <png_set_eXIf_1>:
   21430:	push   %rbp
   21431:	mov    %rsp,%rbp
   21434:	sub    $0x20,%rsp
   21438:	test   %rdi,%rdi
   2143b:	jne    2143f <png_set_eXIf_1+0xf>
   2143d:	leaveq 
   2143e:	retq   
   2143f:	test   %rsi,%rsi
   21442:	jne    21446 <png_set_eXIf_1+0x16>
   21444:	leaveq 
   21445:	retq   
   21446:	mov    0xf0(%rsi),%rax
   2144d:	test   %rax,%rax
   21450:	je     2149d <png_set_eXIf_1+0x6d>
   21452:	mov    %rdi,%r8
   21455:	mov    %r13,-0x8(%rbp)
   21459:	mov    %r14,-0x10(%rbp)
   2145d:	mov    %r15,-0x18(%rbp)
   21461:	mov    %rcx,-0x20(%rbp)
   21465:	mov    %rdx,%r13
   21468:	mov    %rdi,%r14
   2146b:	mov    %r8,%rdi
   2146e:	mov    %rsi,%r15
   21471:	mov    %rax,%rsi
   21474:	callq  5790 <png_free@plt>
   21479:	mov    %r13,%rdx
   2147c:	mov    %r15,%rsi
   2147f:	mov    %r14,%rdi
   21482:	movq   $0x0,0xf0(%rsi)
   2148d:	mov    -0x20(%rbp),%rcx
   21491:	mov    -0x18(%rbp),%r15
   21495:	mov    -0x10(%rbp),%r14
   21499:	mov    -0x8(%rbp),%r13
   2149d:	mov    %edx,0xec(%rsi)
   214a3:	movslq %edx,%rax
   214a6:	mov    %rdi,%rdx
   214a9:	mov    %r14,-0x10(%rbp)
   214ad:	mov    %r15,-0x18(%rbp)
   214b1:	mov    %rcx,-0x20(%rbp)
   214b5:	mov    %rsi,%r14
   214b8:	mov    %rax,%rsi
   214bb:	mov    %rdi,%r15
   214be:	mov    %rdx,%rdi
   214c1:	callq  5150 <png_malloc_warn@plt>
   214c6:	mov    %rax,0xf0(%r14)
   214cd:	test   %rax,%rax
   214d0:	je     214ed <png_set_eXIf_1+0xbd>
   214d2:	mov    0x12c(%r14),%eax
   214d9:	or     $0x8000,%eax
   214de:	mov    %eax,0x12c(%r14)
   214e5:	xor    %eax,%eax
   214e7:	mov    -0x20(%rbp),%rsi
   214eb:	jmp    2151a <png_set_eXIf_1+0xea>
   214ed:	mov    %r15,%rdi
   214f0:	lea    0xd9d5(%rip),%rsi        # 2eecc <png_pass_inc.20+0x659>
   214f7:	callq  5390 <png_warning@plt>
   214fc:	mov    -0x18(%rbp),%r15
   21500:	mov    -0x10(%rbp),%r14
   21504:	leaveq 
   21505:	retq   
   21506:	movslq %eax,%rdx
   21509:	movzbl (%rsi,%rdx,1),%ecx
   2150d:	mov    0xf0(%r14),%rdi
   21514:	mov    %cl,(%rdi,%rdx,1)
   21517:	add    $0x1,%eax
   2151a:	movslq 0xec(%r14),%rcx
   21521:	cmp    %eax,%ecx
   21523:	jg     21506 <png_set_eXIf_1+0xd6>
   21525:	mov    0x8(%r14),%eax
   21529:	or     $0x10000,%eax
   2152e:	mov    %eax,0x8(%r14)
   21532:	mov    -0x18(%rbp),%r15
   21536:	mov    -0x10(%rbp),%r14
   2153a:	leaveq 
   2153b:	retq   
   2153c:	nopl   0x0(%rax)

0000000000021540 <png_set_gAMA>:
   21540:	push   %rbp
   21541:	mov    %rsp,%rbp
   21544:	sub    $0x10,%rsp
   21548:	mov    %r14,-0x8(%rbp)
   2154c:	mov    %r15,-0x10(%rbp)
   21550:	mov    %rsi,%r14
   21553:	lea    0xd99a(%rip),%rsi        # 2eef4 <png_pass_inc.20+0x681>
   2155a:	mov    %rdi,%r15
   2155d:	callq  69f0 <png_fixed>
   21562:	mov    %rax,%rdx
   21565:	mov    %r14,%rsi
   21568:	mov    %r15,%rdi
   2156b:	callq  5290 <png_set_gAMA_fixed@plt>
   21570:	mov    -0x10(%rbp),%r15
   21574:	mov    -0x8(%rbp),%r14
   21578:	leaveq 
   21579:	retq   
   2157a:	nopw   0x0(%rax,%rax,1)

0000000000021580 <png_set_gAMA_fixed>:
   21580:	push   %rbp
   21581:	mov    %rsp,%rbp
   21584:	sub    $0x10,%rsp
   21588:	test   %rdi,%rdi
   2158b:	jne    2158f <png_set_gAMA_fixed+0xf>
   2158d:	leaveq 
   2158e:	retq   
   2158f:	test   %rsi,%rsi
   21592:	jne    21596 <png_set_gAMA_fixed+0x16>
   21594:	leaveq 
   21595:	retq   
   21596:	lea    0x34(%rsi),%rax
   2159a:	mov    %rdi,%rcx
   2159d:	mov    %r14,-0x8(%rbp)
   215a1:	mov    %r15,-0x10(%rbp)
   215a5:	mov    %rsi,%r14
   215a8:	mov    %rax,%rsi
   215ab:	mov    %rdi,%r15
   215ae:	mov    %rcx,%rdi
   215b1:	callq  6ed0 <png_colorspace_set_gamma>
   215b6:	mov    %r14,%rsi
   215b9:	mov    %r15,%rdi
   215bc:	callq  6f80 <png_colorspace_sync_info>
   215c1:	mov    -0x10(%rbp),%r15
   215c5:	mov    -0x8(%rbp),%r14
   215c9:	leaveq 
   215ca:	retq   
   215cb:	nopl   0x0(%rax,%rax,1)

00000000000215d0 <png_set_hIST>:
   215d0:	push   %rbp
   215d1:	mov    %rsp,%rbp
   215d4:	sub    $0x20,%rsp
   215d8:	test   %rdi,%rdi
   215db:	jne    215df <png_set_hIST+0xf>
   215dd:	leaveq 
   215de:	retq   
   215df:	test   %rsi,%rsi
   215e2:	jne    215e6 <png_set_hIST+0x16>
   215e4:	leaveq 
   215e5:	retq   
   215e6:	movzwl 0x20(%rsi),%eax
   215ea:	test   %ax,%ax
   215ed:	je     21655 <png_set_hIST+0x85>
   215ef:	cmp    $0x100,%ax
   215f3:	ja     21655 <png_set_hIST+0x85>
   215f5:	mov    $0x8,%r9d
   215fb:	xor    %ecx,%ecx
   215fd:	mov    %rdi,%rax
   21600:	mov    %rsi,%r8
   21603:	mov    %r14,-0x8(%rbp)
   21607:	mov    %r15,-0x10(%rbp)
   2160b:	mov    %rdx,-0x18(%rbp)
   2160f:	mov    %r9,%rdx
   21612:	mov    %rsi,%r14
   21615:	mov    %r8,%rsi
   21618:	mov    %rdi,%r15
   2161b:	mov    %rax,%rdi
   2161e:	callq  5720 <png_free_data@plt>
   21623:	mov    $0x200,%esi
   21628:	mov    %r15,%rdi
   2162b:	callq  5150 <png_malloc_warn@plt>
   21630:	mov    %rax,0x100(%r14)
   21637:	test   %rax,%rax
   2163a:	je     21663 <png_set_hIST+0x93>
   2163c:	mov    0x12c(%r14),%eax
   21643:	or     $0x8,%eax
   21646:	mov    %eax,0x12c(%r14)
   2164d:	xor    %eax,%eax
   2164f:	mov    -0x18(%rbp),%rdi
   21653:	jmp    21691 <png_set_hIST+0xc1>
   21655:	lea    0xd8a5(%rip),%rsi        # 2ef01 <png_pass_inc.20+0x68e>
   2165c:	callq  5390 <png_warning@plt>
   21661:	leaveq 
   21662:	retq   
   21663:	mov    %r15,%rdi
   21666:	lea    0xd8c2(%rip),%rsi        # 2ef2f <png_pass_inc.20+0x6bc>
   2166d:	callq  5390 <png_warning@plt>
   21672:	mov    -0x10(%rbp),%r15
   21676:	mov    -0x8(%rbp),%r14
   2167a:	leaveq 
   2167b:	retq   
   2167c:	movslq %eax,%rsi
   2167f:	movzwl (%rdi,%rsi,2),%edx
   21683:	mov    0x100(%r14),%rcx
   2168a:	mov    %dx,(%rcx,%rsi,2)
   2168e:	add    $0x1,%eax
   21691:	movzwl 0x20(%r14),%ecx
   21696:	cmp    %eax,%ecx
   21698:	jg     2167c <png_set_hIST+0xac>
   2169a:	mov    0x8(%r14),%eax
   2169e:	or     $0x40,%eax
   216a1:	mov    %eax,0x8(%r14)
   216a5:	mov    -0x10(%rbp),%r15
   216a9:	mov    -0x8(%rbp),%r14
   216ad:	leaveq 
   216ae:	retq   
   216af:	nop

00000000000216b0 <png_set_IHDR>:
   216b0:	push   %rbp
   216b1:	mov    %rsp,%rbp
   216b4:	sub    $0x20,%rsp
   216b8:	test   %rdi,%rdi
   216bb:	jne    216bf <png_set_IHDR+0xf>
   216bd:	leaveq 
   216be:	retq   
   216bf:	test   %rsi,%rsi
   216c2:	jne    216c6 <png_set_IHDR+0x16>
   216c4:	leaveq 
   216c5:	retq   
   216c6:	mov    %edx,(%rsi)
   216c8:	mov    %ecx,0x4(%rsi)
   216cb:	mov    %r8b,0x24(%rsi)
   216cf:	mov    %r9b,0x25(%rsi)
   216d3:	movslq 0x18(%rbp),%rax
   216d7:	mov    %al,0x26(%rsi)
   216da:	movslq 0x20(%rbp),%r11
   216de:	mov    %r11b,0x27(%rsi)
   216e2:	movslq 0x10(%rbp),%r10
   216e6:	mov    %r10b,0x28(%rsi)
   216ea:	movzbl %al,%eax
   216ed:	mov    %eax,(%rsp)
   216f0:	movzbl %r11b,%eax
   216f4:	mov    %eax,0x8(%rsp)
   216f8:	movzbl %r8b,%r11d
   216fc:	movzbl %r9b,%r8d
   21700:	movzbl %r10b,%r9d
   21704:	mov    %rdx,%rax
   21707:	mov    %r14,-0x8(%rbp)
   2170b:	mov    %r15,-0x10(%rbp)
   2170f:	mov    %rsi,%r14
   21712:	mov    %rax,%rsi
   21715:	mov    %rdx,%r15
   21718:	mov    %rcx,%rdx
   2171b:	mov    %r11,%rcx
   2171e:	callq  7d90 <png_check_IHDR>
   21723:	add    $0x10,%rsp
   21727:	movzbl 0x25(%r14),%eax
   2172c:	cmp    $0x3,%al
   2172e:	je     2173e <png_set_IHDR+0x8e>
   21730:	and    $0x2,%eax
   21733:	test   %eax,%eax
   21735:	jg     21783 <png_set_IHDR+0xd3>
   21737:	movb   $0x1,0x29(%r14)
   2173c:	jmp    21743 <png_set_IHDR+0x93>
   2173e:	movb   $0x1,0x29(%r14)
   21743:	movzbl 0x25(%r14),%eax
   21748:	and    $0x4,%eax
   2174b:	test   %eax,%eax
   2174d:	jle    2175b <png_set_IHDR+0xab>
   2174f:	movzbl 0x29(%r14),%eax
   21754:	add    $0x1,%eax
   21757:	mov    %al,0x29(%r14)
   2175b:	movzbl 0x24(%r14),%ecx
   21760:	movzbl 0x29(%r14),%eax
   21765:	imul   %cl
   21767:	mov    %al,0x2a(%r14)
   2176b:	cmp    $0x7,%al
   2176d:	ja     2178a <png_set_IHDR+0xda>
   2176f:	movzbl %al,%eax
   21772:	mov    %r15d,%ecx
   21775:	imul   %rcx,%rax
   21779:	add    $0x7,%rax
   2177d:	shr    $0x3,%rax
   21781:	jmp    21798 <png_set_IHDR+0xe8>
   21783:	movb   $0x3,0x29(%r14)
   21788:	jmp    21743 <png_set_IHDR+0x93>
   2178a:	movzbl %al,%eax
   2178d:	shr    $0x3,%rax
   21791:	mov    %r15d,%ecx
   21794:	imul   %rcx,%rax
   21798:	mov    %rax,0x10(%r14)
   2179c:	mov    -0x10(%rbp),%r15
   217a0:	mov    -0x8(%rbp),%r14
   217a4:	leaveq 
   217a5:	retq   
   217a6:	nopw   %cs:0x0(%rax,%rax,1)

00000000000217b0 <png_set_oFFs>:
   217b0:	push   %rbp
   217b1:	mov    %rsp,%rbp
   217b4:	test   %rdi,%rdi
   217b7:	jne    217bb <png_set_oFFs+0xb>
   217b9:	leaveq 
   217ba:	retq   
   217bb:	test   %rsi,%rsi
   217be:	jne    217c2 <png_set_oFFs+0x12>
   217c0:	leaveq 
   217c1:	retq   
   217c2:	mov    %edx,0xd4(%rsi)
   217c8:	mov    %ecx,0xd8(%rsi)
   217ce:	mov    %r8b,0xdc(%rsi)
   217d5:	mov    0x8(%rsi),%eax
   217d8:	or     $0x100,%eax
   217dd:	mov    %eax,0x8(%rsi)
   217e0:	leaveq 
   217e1:	retq   
   217e2:	data16 nopw %cs:0x0(%rax,%rax,1)
   217ed:	nopl   (%rax)

00000000000217f0 <png_set_pCAL>:
   217f0:	push   %rbp
   217f1:	mov    %rsp,%rbp
   217f4:	sub    $0x70,%rsp
   217f8:	test   %rdi,%rdi
   217fb:	jne    217ff <png_set_pCAL+0xf>
   217fd:	leaveq 
   217fe:	retq   
   217ff:	test   %rsi,%rsi
   21802:	jne    21806 <png_set_pCAL+0x16>
   21804:	leaveq 
   21805:	retq   
   21806:	test   %rdx,%rdx
   21809:	jne    2180d <png_set_pCAL+0x1d>
   2180b:	leaveq 
   2180c:	retq   
   2180d:	mov    0x18(%rbp),%r10
   21811:	test   %r10,%r10
   21814:	jne    21818 <png_set_pCAL+0x28>
   21816:	leaveq 
   21817:	retq   
   21818:	mov    0x20(%rbp),%rax
   2181c:	movslq 0x10(%rbp),%r11
   21820:	test   %r11d,%r11d
   21823:	jle    2182c <png_set_pCAL+0x3c>
   21825:	test   %rax,%rax
   21828:	jne    2182c <png_set_pCAL+0x3c>
   2182a:	leaveq 
   2182b:	retq   
   2182c:	mov    %r10,-0x28(%rbp)
   21830:	mov    %rdx,%r10
   21833:	mov    %r13,-0x10(%rbp)
   21837:	mov    %r14,-0x18(%rbp)
   2183b:	mov    %r15,-0x20(%rbp)
   2183f:	mov    %rax,-0x68(%rbp)
   21843:	mov    %rsi,-0x50(%rbp)
   21847:	mov    %rdx,-0x48(%rbp)
   2184b:	mov    %rcx,-0x30(%rbp)
   2184f:	mov    %r8,-0x38(%rbp)
   21853:	mov    %r11,%r13
   21856:	mov    %r9,%r14
   21859:	mov    %rdi,%r15
   2185c:	mov    %r10,%rdi
   2185f:	callq  5260 <strlen@plt>
   21864:	mov    $0x1,%edx
   21869:	test   %r14d,%r14d
   2186c:	js     2189d <png_set_pCAL+0xad>
   2186e:	cmp    $0x3,%r14d
   21872:	jg     2189d <png_set_pCAL+0xad>
   21874:	test   %r13d,%r13d
   21877:	js     218ba <png_set_pCAL+0xca>
   21879:	cmp    $0xff,%r13d
   21880:	jg     218ba <png_set_pCAL+0xca>
   21882:	xor    %ecx,%ecx
   21884:	mov    %r15,-0x58(%rbp)
   21888:	mov    %r12,-0x8(%rbp)
   2188c:	mov    %rax,-0x60(%rbp)
   21890:	mov    %r14,-0x40(%rbp)
   21894:	mov    %rcx,%r12
   21897:	mov    -0x68(%rbp),%r14
   2189b:	jmp    21906 <png_set_pCAL+0x116>
   2189d:	mov    %r15,%rdi
   218a0:	lea    0xd6b0(%rip),%rsi        # 2ef57 <png_pass_inc.20+0x6e4>
   218a7:	callq  b140 <png_chunk_report>
   218ac:	mov    -0x20(%rbp),%r15
   218b0:	mov    -0x18(%rbp),%r14
   218b4:	mov    -0x10(%rbp),%r13
   218b8:	leaveq 
   218b9:	retq   
   218ba:	mov    %r15,%rdi
   218bd:	lea    0xd6ae(%rip),%rsi        # 2ef72 <png_pass_inc.20+0x6ff>
   218c4:	callq  b140 <png_chunk_report>
   218c9:	mov    -0x20(%rbp),%r15
   218cd:	mov    -0x18(%rbp),%r14
   218d1:	mov    -0x10(%rbp),%r13
   218d5:	leaveq 
   218d6:	retq   
   218d7:	movslq %r12d,%rax
   218da:	mov    (%r14,%rax,8),%r15
   218de:	test   %r15,%r15
   218e1:	je     219f5 <png_set_pCAL+0x205>
   218e7:	mov    %r15,%rdi
   218ea:	callq  5260 <strlen@plt>
   218ef:	mov    %rax,%rsi
   218f2:	mov    %r15,%rdi
   218f5:	callq  8920 <png_check_fp_string>
   218fa:	test   %eax,%eax
   218fc:	je     219f5 <png_set_pCAL+0x205>
   21902:	add    $0x1,%r12d
   21906:	cmp    %r12d,%r13d
   21909:	jg     218d7 <png_set_pCAL+0xe7>
   2190b:	mov    -0x60(%rbp),%rax
   2190f:	lea    0x1(%rax),%r15
   21913:	mov    -0x58(%rbp),%r12
   21917:	mov    %r12,%rdi
   2191a:	mov    %r15,%rsi
   2191d:	callq  5150 <png_malloc_warn@plt>
   21922:	mov    -0x50(%rbp),%r14
   21926:	mov    %rax,0x108(%r14)
   2192d:	test   %rax,%rax
   21930:	je     21a1c <png_set_pCAL+0x22c>
   21936:	mov    %r15,%rdx
   21939:	mov    %rax,%rdi
   2193c:	mov    -0x48(%rbp),%rsi
   21940:	callq  54c0 <memcpy@plt>
   21945:	mov    -0x30(%rbp),%rax
   21949:	mov    %eax,0x110(%r14)
   21950:	mov    -0x38(%rbp),%rax
   21954:	mov    %eax,0x114(%r14)
   2195b:	mov    -0x40(%rbp),%rax
   2195f:	mov    %al,0x128(%r14)
   21966:	mov    %r13b,0x129(%r14)
   2196d:	mov    -0x28(%rbp),%r15
   21971:	mov    %r15,%rdi
   21974:	callq  5260 <strlen@plt>
   21979:	lea    0x1(%rax),%rdx
   2197d:	mov    %r12,%rdi
   21980:	mov    %rdx,%rsi
   21983:	mov    %r13,-0x60(%rbp)
   21987:	mov    %rdx,%r13
   2198a:	callq  5150 <png_malloc_warn@plt>
   2198f:	mov    %rax,0x118(%r14)
   21996:	test   %rax,%rax
   21999:	je     21a42 <png_set_pCAL+0x252>
   2199f:	mov    %r13,%rdx
   219a2:	mov    %r15,%rsi
   219a5:	mov    %rax,%rdi
   219a8:	callq  54c0 <memcpy@plt>
   219ad:	mov    -0x60(%rbp),%r15
   219b1:	lea    0x1(%r15),%eax
   219b5:	mov    %eax,%r13d
   219b8:	shl    $0x3,%r13
   219bc:	mov    %r12,%rdi
   219bf:	mov    %r13,%rsi
   219c2:	callq  5150 <png_malloc_warn@plt>
   219c7:	mov    %rax,0x120(%r14)
   219ce:	test   %rax,%rax
   219d1:	je     21a63 <png_set_pCAL+0x273>
   219d7:	mov    %r13,%rdx
   219da:	mov    %rax,%rdi
   219dd:	xor    %r13d,%r13d
   219e0:	mov    %r13,%rsi
   219e3:	callq  5350 <memset@plt>
   219e8:	mov    %rbx,-0x50(%rbp)
   219ec:	mov    -0x68(%rbp),%rbx
   219f0:	jmpq   21ae0 <png_set_pCAL+0x2f0>
   219f5:	lea    0xd593(%rip),%rsi        # 2ef8f <png_pass_inc.20+0x71c>
   219fc:	mov    $0x1,%edx
   21a01:	mov    -0x58(%rbp),%rdi
   21a05:	callq  b140 <png_chunk_report>
   21a0a:	mov    -0x8(%rbp),%r12
   21a0e:	mov    -0x20(%rbp),%r15
   21a12:	mov    -0x18(%rbp),%r14
   21a16:	mov    -0x10(%rbp),%r13
   21a1a:	leaveq 
   21a1b:	retq   
   21a1c:	mov    %r12,%rdi
   21a1f:	lea    0xd58b(%rip),%rsi        # 2efb1 <png_pass_inc.20+0x73e>
   21a26:	mov    $0x1,%edx
   21a2b:	callq  b140 <png_chunk_report>
   21a30:	mov    -0x8(%rbp),%r12
   21a34:	mov    -0x20(%rbp),%r15
   21a38:	mov    -0x18(%rbp),%r14
   21a3c:	mov    -0x10(%rbp),%r13
   21a40:	leaveq 
   21a41:	retq   
   21a42:	mov    %r12,%rdi
   21a45:	lea    0xd58a(%rip),%rsi        # 2efd6 <png_pass_inc.20+0x763>
   21a4c:	callq  5390 <png_warning@plt>
   21a51:	mov    -0x8(%rbp),%r12
   21a55:	mov    -0x20(%rbp),%r15
   21a59:	mov    -0x18(%rbp),%r14
   21a5d:	mov    -0x10(%rbp),%r13
   21a61:	leaveq 
   21a62:	retq   
   21a63:	mov    %r12,%rdi
   21a66:	lea    0xd58c(%rip),%rsi        # 2eff9 <png_pass_inc.20+0x786>
   21a6d:	callq  5390 <png_warning@plt>
   21a72:	mov    -0x8(%rbp),%r12
   21a76:	mov    -0x20(%rbp),%r15
   21a7a:	mov    -0x18(%rbp),%r14
   21a7e:	mov    -0x10(%rbp),%r13
   21a82:	leaveq 
   21a83:	retq   
   21a84:	movslq %r13d,%r15
   21a87:	mov    (%rbx,%r15,8),%rdi
   21a8b:	callq  5260 <strlen@plt>
   21a90:	lea    0x1(%rax),%rdx
   21a94:	mov    0x120(%r14),%rax
   21a9b:	mov    %rdx,%rsi
   21a9e:	mov    %r13,-0x68(%rbp)
   21aa2:	mov    %r12,%rdi
   21aa5:	mov    %rax,%r12
   21aa8:	mov    %rdx,%r13
   21aab:	callq  5150 <png_malloc_warn@plt>
   21ab0:	mov    %rax,(%r12,%r15,8)
   21ab4:	mov    0x120(%r14),%rax
   21abb:	mov    (%rax,%r15,8),%rdi
   21abf:	test   %rdi,%rdi
   21ac2:	je     21b1b <png_set_pCAL+0x32b>
   21ac4:	mov    (%rbx,%r15,8),%rsi
   21ac8:	mov    %r13,%rdx
   21acb:	callq  54c0 <memcpy@plt>
   21ad0:	mov    -0x68(%rbp),%rax
   21ad4:	lea    0x1(%rax),%r13d
   21ad8:	mov    -0x60(%rbp),%r15
   21adc:	mov    -0x58(%rbp),%r12
   21ae0:	cmp    %r13d,%r15d
   21ae3:	jg     21a84 <png_set_pCAL+0x294>
   21ae5:	mov    0x8(%r14),%eax
   21ae9:	or     $0x400,%eax
   21aee:	mov    %eax,0x8(%r14)
   21af2:	mov    0x12c(%r14),%eax
   21af9:	or     $0x80,%eax
   21afe:	mov    %eax,0x12c(%r14)
   21b05:	mov    -0x50(%rbp),%rbx
   21b09:	mov    -0x8(%rbp),%r12
   21b0d:	mov    -0x20(%rbp),%r15
   21b11:	mov    -0x18(%rbp),%r14
   21b15:	mov    -0x10(%rbp),%r13
   21b19:	leaveq 
   21b1a:	retq   
   21b1b:	lea    0xd4fb(%rip),%rsi        # 2f01d <png_pass_inc.20+0x7aa>
   21b22:	mov    -0x58(%rbp),%rdi
   21b26:	callq  5390 <png_warning@plt>
   21b2b:	mov    -0x50(%rbp),%rbx
   21b2f:	mov    -0x8(%rbp),%r12
   21b33:	mov    -0x20(%rbp),%r15
   21b37:	mov    -0x18(%rbp),%r14
   21b3b:	mov    -0x10(%rbp),%r13
   21b3f:	leaveq 
   21b40:	retq   
   21b41:	data16 nopw %cs:0x0(%rax,%rax,1)
   21b4c:	nopl   0x0(%rax)

0000000000021b50 <png_set_pHYs>:
   21b50:	push   %rbp
   21b51:	mov    %rsp,%rbp
   21b54:	test   %rdi,%rdi
   21b57:	jne    21b5b <png_set_pHYs+0xb>
   21b59:	leaveq 
   21b5a:	retq   
   21b5b:	test   %rsi,%rsi
   21b5e:	jne    21b62 <png_set_pHYs+0x12>
   21b60:	leaveq 
   21b61:	retq   
   21b62:	mov    %edx,0xe0(%rsi)
   21b68:	mov    %ecx,0xe4(%rsi)
   21b6e:	mov    %r8b,0xe8(%rsi)
   21b75:	mov    0x8(%rsi),%eax
   21b78:	or     $0x80,%eax
   21b7d:	mov    %eax,0x8(%rsi)
   21b80:	leaveq 
   21b81:	retq   
   21b82:	data16 nopw %cs:0x0(%rax,%rax,1)
   21b8d:	nopl   (%rax)

0000000000021b90 <png_set_PLTE>:
   21b90:	push   %rbp
   21b91:	mov    %rsp,%rbp
   21b94:	sub    $0x20,%rsp
   21b98:	test   %rdi,%rdi
   21b9b:	jne    21b9f <png_set_PLTE+0xf>
   21b9d:	leaveq 
   21b9e:	retq   
   21b9f:	test   %rsi,%rsi
   21ba2:	jne    21ba6 <png_set_PLTE+0x16>
   21ba4:	leaveq 
   21ba5:	retq   
   21ba6:	movzbl 0x25(%rsi),%eax
   21baa:	cmp    $0x3,%al
   21bac:	je     21bb5 <png_set_PLTE+0x25>
   21bae:	mov    $0x100,%eax
   21bb3:	jmp    21bc6 <png_set_PLTE+0x36>
   21bb5:	mov    %rcx,%r8
   21bb8:	mov    $0x1,%eax
   21bbd:	movzbl 0x24(%rsi),%ecx
   21bc1:	shl    %cl,%eax
   21bc3:	mov    %r8,%rcx
   21bc6:	test   %ecx,%ecx
   21bc8:	js     21c97 <png_set_PLTE+0x107>
   21bce:	cmp    %eax,%ecx
   21bd0:	jg     21c97 <png_set_PLTE+0x107>
   21bd6:	test   %ecx,%ecx
   21bd8:	jg     21cb0 <png_set_PLTE+0x120>
   21bde:	test   %ecx,%ecx
   21be0:	je     21cc5 <png_set_PLTE+0x135>
   21be6:	mov    $0x1000,%eax
   21beb:	xor    %r10d,%r10d
   21bee:	mov    %rdi,%r9
   21bf1:	mov    %rsi,%r8
   21bf4:	mov    %r12,-0x8(%rbp)
   21bf8:	mov    %r13,-0x10(%rbp)
   21bfc:	mov    %r14,-0x18(%rbp)
   21c00:	mov    %r15,-0x20(%rbp)
   21c04:	mov    %rdi,%r12
   21c07:	mov    %r9,%rdi
   21c0a:	mov    %rsi,%r13
   21c0d:	mov    %r8,%rsi
   21c10:	mov    %rcx,%r14
   21c13:	mov    %r10,%rcx
   21c16:	mov    %rdx,%r15
   21c19:	mov    %rax,%rdx
   21c1c:	callq  5720 <png_free_data@plt>
   21c21:	mov    $0x300,%esi
   21c26:	mov    %r12,%rdi
   21c29:	callq  5780 <png_calloc@plt>
   21c2e:	test   %r14d,%r14d
   21c31:	mov    %rax,0x250(%r12)
   21c39:	jle    21c4d <png_set_PLTE+0xbd>
   21c3b:	mov    %r14d,%ecx
   21c3e:	lea    (%rcx,%rcx,2),%rdx
   21c42:	mov    %r15,%rsi
   21c45:	mov    %rax,%rdi
   21c48:	callq  54c0 <memcpy@plt>
   21c4d:	mov    0x250(%r12),%rax
   21c55:	mov    %rax,0x18(%r13)
   21c59:	mov    %r14w,0x258(%r12)
   21c62:	mov    %r14w,0x20(%r13)
   21c67:	mov    0x12c(%r13),%eax
   21c6e:	or     $0x1000,%eax
   21c73:	mov    %eax,0x12c(%r13)
   21c7a:	mov    0x8(%r13),%eax
   21c7e:	or     $0x8,%eax
   21c81:	mov    %eax,0x8(%r13)
   21c85:	mov    -0x20(%rbp),%r15
   21c89:	mov    -0x18(%rbp),%r14
   21c8d:	mov    -0x10(%rbp),%r13
   21c91:	mov    -0x8(%rbp),%r12
   21c95:	leaveq 
   21c96:	retq   
   21c97:	lea    0xd3a6(%rip),%rcx        # 2f044 <png_pass_inc.20+0x7d1>
   21c9e:	movzbl 0x25(%rsi),%eax
   21ca2:	cmp    $0x3,%al
   21ca4:	je     21cd7 <png_set_PLTE+0x147>
   21ca6:	mov    %rcx,%rsi
   21ca9:	callq  5390 <png_warning@plt>
   21cae:	leaveq 
   21caf:	retq   
   21cb0:	test   %rdx,%rdx
   21cb3:	jne    21bde <png_set_PLTE+0x4e>
   21cb9:	lea    0xd39b(%rip),%rsi        # 2f05b <png_pass_inc.20+0x7e8>
   21cc0:	callq  5470 <png_error@plt>
   21cc5:	mov    0x3d8(%rdi),%eax
   21ccb:	and    $0x1,%eax
   21cce:	test   %eax,%eax
   21cd0:	je     21cb9 <png_set_PLTE+0x129>
   21cd2:	jmpq   21be6 <png_set_PLTE+0x56>
   21cd7:	mov    %rcx,%rsi
   21cda:	callq  5470 <png_error@plt>
   21cdf:	nop

0000000000021ce0 <png_set_sBIT>:
   21ce0:	push   %rbp
   21ce1:	mov    %rsp,%rbp
   21ce4:	test   %rdi,%rdi
   21ce7:	jne    21ceb <png_set_sBIT+0xb>
   21ce9:	leaveq 
   21cea:	retq   
   21ceb:	test   %rsi,%rsi
   21cee:	jne    21cf2 <png_set_sBIT+0x12>
   21cf0:	leaveq 
   21cf1:	retq   
   21cf2:	test   %rdx,%rdx
   21cf5:	jne    21cf9 <png_set_sBIT+0x19>
   21cf7:	leaveq 
   21cf8:	retq   
   21cf9:	mov    (%rdx),%eax
   21cfb:	mov    %eax,0xb0(%rsi)
   21d01:	mov    0x8(%rsi),%eax
   21d04:	or     $0x2,%eax
   21d07:	movzbl 0x4(%rdx),%ecx
   21d0b:	mov    %eax,0x8(%rsi)
   21d0e:	mov    %cl,0xb4(%rsi)
   21d14:	leaveq 
   21d15:	retq   
   21d16:	nopw   %cs:0x0(%rax,%rax,1)

0000000000021d20 <png_set_sRGB>:
   21d20:	push   %rbp
   21d21:	mov    %rsp,%rbp
   21d24:	sub    $0x10,%rsp
   21d28:	test   %rdi,%rdi
   21d2b:	jne    21d2f <png_set_sRGB+0xf>
   21d2d:	leaveq 
   21d2e:	retq   
   21d2f:	test   %rsi,%rsi
   21d32:	jne    21d36 <png_set_sRGB+0x16>
   21d34:	leaveq 
   21d35:	retq   
   21d36:	lea    0x34(%rsi),%rax
   21d3a:	mov    %rdi,%rcx
   21d3d:	mov    %r14,-0x8(%rbp)
   21d41:	mov    %r15,-0x10(%rbp)
   21d45:	mov    %rsi,%r14
   21d48:	mov    %rax,%rsi
   21d4b:	mov    %rdi,%r15
   21d4e:	mov    %rcx,%rdi
   21d51:	callq  71f0 <png_colorspace_set_sRGB>
   21d56:	mov    %r14,%rsi
   21d59:	mov    %r15,%rdi
   21d5c:	callq  6f80 <png_colorspace_sync_info>
   21d61:	mov    -0x10(%rbp),%r15
   21d65:	mov    -0x8(%rbp),%r14
   21d69:	leaveq 
   21d6a:	retq   
   21d6b:	nopl   0x0(%rax,%rax,1)

0000000000021d70 <png_set_sRGB_gAMA_and_cHRM>:
   21d70:	push   %rbp
   21d71:	mov    %rsp,%rbp
   21d74:	sub    $0x10,%rsp
   21d78:	test   %rdi,%rdi
   21d7b:	jne    21d7f <png_set_sRGB_gAMA_and_cHRM+0xf>
   21d7d:	leaveq 
   21d7e:	retq   
   21d7f:	test   %rsi,%rsi
   21d82:	jne    21d86 <png_set_sRGB_gAMA_and_cHRM+0x16>
   21d84:	leaveq 
   21d85:	retq   
   21d86:	lea    0x34(%rsi),%rax
   21d8a:	mov    %rdi,%rcx
   21d8d:	mov    %r14,-0x8(%rbp)
   21d91:	mov    %r15,-0x10(%rbp)
   21d95:	mov    %rdi,%r14
   21d98:	mov    %rcx,%rdi
   21d9b:	mov    %rsi,%r15
   21d9e:	mov    %rax,%rsi
   21da1:	callq  71f0 <png_colorspace_set_sRGB>
   21da6:	test   %eax,%eax
   21da8:	je     21db8 <png_set_sRGB_gAMA_and_cHRM+0x48>
   21daa:	movzwl 0x7e(%r15),%eax
   21daf:	or     $0x18,%ax
   21db3:	mov    %ax,0x7e(%r15)
   21db8:	mov    %r15,%rsi
   21dbb:	mov    %r14,%rdi
   21dbe:	callq  6f80 <png_colorspace_sync_info>
   21dc3:	mov    -0x10(%rbp),%r15
   21dc7:	mov    -0x8(%rbp),%r14
   21dcb:	leaveq 
   21dcc:	retq   
   21dcd:	nopl   (%rax)

0000000000021dd0 <png_set_iCCP>:
   21dd0:	push   %rbp
   21dd1:	mov    %rsp,%rbp
   21dd4:	sub    $0x40,%rsp
   21dd8:	test   %rdi,%rdi
   21ddb:	jne    21ddf <png_set_iCCP+0xf>
   21ddd:	leaveq 
   21dde:	retq   
   21ddf:	test   %rsi,%rsi
   21de2:	jne    21de6 <png_set_iCCP+0x16>
   21de4:	leaveq 
   21de5:	retq   
   21de6:	test   %rdx,%rdx
   21de9:	jne    21ded <png_set_iCCP+0x1d>
   21deb:	leaveq 
   21dec:	retq   
   21ded:	test   %r8,%r8
   21df0:	jne    21df4 <png_set_iCCP+0x24>
   21df2:	leaveq 
   21df3:	retq   
   21df4:	test   %ecx,%ecx
   21df6:	jne    21dfd <png_set_iCCP+0x2d>
   21df8:	mov    %r9,%rcx
   21dfb:	jmp    21e58 <png_set_iCCP+0x88>
   21dfd:	lea    0xd267(%rip),%rcx        # 2f06b <png_pass_inc.20+0x7f8>
   21e04:	mov    %rdi,%rax
   21e07:	mov    %rbx,-0x18(%rbp)
   21e0b:	mov    %r12,-0x20(%rbp)
   21e0f:	mov    %r13,-0x28(%rbp)
   21e13:	mov    %r14,-0x30(%rbp)
   21e17:	mov    %r15,-0x38(%rbp)
   21e1b:	mov    %r8,%rbx
   21e1e:	mov    %rdx,%r12
   21e21:	mov    %rsi,%r13
   21e24:	mov    %rcx,%rsi
   21e27:	mov    %r9,%r14
   21e2a:	mov    %rdi,%r15
   21e2d:	mov    %rax,%rdi
   21e30:	callq  b120 <png_app_error>
   21e35:	mov    %r14,%rcx
   21e38:	mov    %r12,%rdx
   21e3b:	mov    %r13,%rsi
   21e3e:	mov    %r15,%rdi
   21e41:	mov    %rbx,%r8
   21e44:	mov    -0x38(%rbp),%r15
   21e48:	mov    -0x30(%rbp),%r14
   21e4c:	mov    -0x28(%rbp),%r13
   21e50:	mov    -0x20(%rbp),%r12
   21e54:	mov    -0x18(%rbp),%rbx
   21e58:	lea    0x34(%rsi),%rax
   21e5c:	movzbl 0x25(%rsi),%r9d
   21e61:	mov    %rdi,%r10
   21e64:	mov    %rdx,%r11
   21e67:	mov    %rcx,-0x28(%rbp)
   21e6b:	mov    %r8,-0x10(%rbp)
   21e6f:	mov    %r14,-0x18(%rbp)
   21e73:	mov    %r15,-0x20(%rbp)
   21e77:	mov    %rdx,-0x38(%rbp)
   21e7b:	mov    %r11,%rdx
   21e7e:	mov    %rsi,%r14
   21e81:	mov    %rax,%rsi
   21e84:	mov    %rdi,%r15
   21e87:	mov    %r10,%rdi
   21e8a:	callq  73f0 <png_colorspace_set_ICC>
   21e8f:	mov    %r15,%rdi
   21e92:	mov    %r14,%rsi
   21e95:	mov    %r15,-0x30(%rbp)
   21e99:	mov    %rax,%r15
   21e9c:	callq  6f80 <png_colorspace_sync_info>
   21ea1:	test   %r15d,%r15d
   21ea4:	jne    21eb0 <png_set_iCCP+0xe0>
   21ea6:	mov    -0x20(%rbp),%r15
   21eaa:	mov    -0x18(%rbp),%r14
   21eae:	leaveq 
   21eaf:	retq   
   21eb0:	movzwl 0x7e(%r14),%eax
   21eb5:	or     $0x18,%ax
   21eb9:	mov    %ax,0x7e(%r14)
   21ebe:	mov    -0x38(%rbp),%r15
   21ec2:	mov    %r15,%rdi
   21ec5:	callq  5260 <strlen@plt>
   21eca:	lea    0x1(%rax),%rdx
   21ece:	mov    -0x30(%rbp),%rax
   21ed2:	mov    %rax,%rdi
   21ed5:	mov    %rdx,%rsi
   21ed8:	mov    %r13,-0x38(%rbp)
   21edc:	mov    %r14,-0x8(%rbp)
   21ee0:	mov    %rax,%r13
   21ee3:	mov    %rdx,%r14
   21ee6:	callq  5150 <png_malloc_warn@plt>
   21eeb:	test   %rax,%rax
   21eee:	je     21f8d <png_set_iCCP+0x1bd>
   21ef4:	mov    %r14,%rdx
   21ef7:	mov    %rax,%r14
   21efa:	mov    %r15,%rsi
   21efd:	mov    %r14,%rdi
   21f00:	callq  54c0 <memcpy@plt>
   21f05:	mov    -0x28(%rbp),%rax
   21f09:	mov    %eax,%r15d
   21f0c:	mov    %r13,%rdi
   21f0f:	mov    %r15,%rsi
   21f12:	callq  5150 <png_malloc_warn@plt>
   21f17:	test   %rax,%rax
   21f1a:	je     21faa <png_set_iCCP+0x1da>
   21f20:	mov    %r15,%rdx
   21f23:	mov    %rax,%r15
   21f26:	mov    %r15,%rdi
   21f29:	mov    -0x10(%rbp),%rsi
   21f2d:	callq  54c0 <memcpy@plt>
   21f32:	mov    %r13,%rdi
   21f35:	mov    $0x10,%edx
   21f3a:	xor    %ecx,%ecx
   21f3c:	mov    -0x8(%rbp),%r13
   21f40:	mov    %r13,%rsi
   21f43:	callq  5720 <png_free_data@plt>
   21f48:	mov    -0x28(%rbp),%rax
   21f4c:	mov    %eax,0x90(%r13)
   21f53:	mov    %r14,0x80(%r13)
   21f5a:	mov    %r15,0x88(%r13)
   21f61:	mov    0x12c(%r13),%eax
   21f68:	or     $0x10,%eax
   21f6b:	mov    %eax,0x12c(%r13)
   21f72:	mov    0x8(%r13),%eax
   21f76:	or     $0x1000,%eax
   21f7b:	mov    %eax,0x8(%r13)
   21f7f:	mov    -0x20(%rbp),%r15
   21f83:	mov    -0x18(%rbp),%r14
   21f87:	mov    -0x38(%rbp),%r13
   21f8b:	leaveq 
   21f8c:	retq   
   21f8d:	mov    %r13,%rdi
   21f90:	lea    0xd0f4(%rip),%rsi        # 2f08b <png_pass_inc.20+0x818>
   21f97:	callq  5590 <png_benign_error@plt>
   21f9c:	mov    -0x20(%rbp),%r15
   21fa0:	mov    -0x18(%rbp),%r14
   21fa4:	mov    -0x38(%rbp),%r13
   21fa8:	leaveq 
   21fa9:	retq   
   21faa:	mov    %r14,%rsi
   21fad:	mov    %r13,%rdi
   21fb0:	callq  5790 <png_free@plt>
   21fb5:	mov    %r13,%rdi
   21fb8:	lea    0xd0f6(%rip),%rsi        # 2f0b5 <png_pass_inc.20+0x842>
   21fbf:	callq  5590 <png_benign_error@plt>
   21fc4:	mov    -0x20(%rbp),%r15
   21fc8:	mov    -0x18(%rbp),%r14
   21fcc:	mov    -0x38(%rbp),%r13
   21fd0:	leaveq 
   21fd1:	retq   
   21fd2:	data16 nopw %cs:0x0(%rax,%rax,1)
   21fdd:	nopl   (%rax)

0000000000021fe0 <png_set_sPLT>:
   21fe0:	push   %rbp
   21fe1:	mov    %rsp,%rbp
   21fe4:	sub    $0x40,%rsp
   21fe8:	test   %rdi,%rdi
   21feb:	jne    21fef <png_set_sPLT+0xf>
   21fed:	leaveq 
   21fee:	retq   
   21fef:	test   %rsi,%rsi
   21ff2:	jne    21ff6 <png_set_sPLT+0x16>
   21ff4:	leaveq 
   21ff5:	retq   
   21ff6:	test   %ecx,%ecx
   21ff8:	jg     21ffc <png_set_sPLT+0x1c>
   21ffa:	leaveq 
   21ffb:	retq   
   21ffc:	test   %rdx,%rdx
   21fff:	jne    22003 <png_set_sPLT+0x23>
   22001:	leaveq 
   22002:	retq   
   22003:	mov    0x140(%rsi),%r11
   2200a:	movslq 0x148(%rsi),%r9
   22011:	mov    $0x20,%r8d
   22017:	mov    %rdi,%rax
   2201a:	mov    %rcx,%r10
   2201d:	mov    %r14,-0x20(%rbp)
   22021:	mov    %r15,-0x28(%rbp)
   22025:	mov    %rcx,-0x38(%rbp)
   22029:	mov    %rdx,-0x30(%rbp)
   2202d:	mov    %r10,%rcx
   22030:	mov    %r9,%rdx
   22033:	mov    %rdi,%r14
   22036:	mov    %rax,%rdi
   22039:	mov    %rsi,%r15
   2203c:	mov    %r11,%rsi
   2203f:	callq  c9a0 <png_realloc_array>
   22044:	test   %rax,%rax
   22047:	je     2209e <png_set_sPLT+0xbe>
   22049:	mov    0x140(%r15),%rsi
   22050:	mov    %r14,%rdi
   22053:	mov    %r13,-0x18(%rbp)
   22057:	mov    %rax,%r13
   2205a:	callq  5790 <png_free@plt>
   2205f:	mov    %r13,0x140(%r15)
   22066:	mov    0x12c(%r15),%ecx
   2206d:	or     $0x20,%ecx
   22070:	mov    %ecx,0x12c(%r15)
   22077:	lea    0xd078(%rip),%rsi        # 2f0f6 <png_pass_inc.20+0x883>
   2207e:	movslq 0x148(%r15),%rcx
   22085:	shl    $0x5,%rcx
   22089:	add    %rcx,%r13
   2208c:	mov    %rbx,-0x8(%rbp)
   22090:	mov    %r12,-0x10(%rbp)
   22094:	mov    -0x30(%rbp),%rbx
   22098:	mov    -0x38(%rbp),%r12
   2209c:	jmp    220c3 <png_set_sPLT+0xe3>
   2209e:	mov    %r14,%rdi
   220a1:	lea    0xd039(%rip),%rsi        # 2f0e1 <png_pass_inc.20+0x86e>
   220a8:	mov    $0x1,%edx
   220ad:	callq  b140 <png_chunk_report>
   220b2:	mov    -0x28(%rbp),%r15
   220b6:	mov    -0x20(%rbp),%r14
   220ba:	leaveq 
   220bb:	retq   
   220bc:	lea    0xd033(%rip),%rsi        # 2f0f6 <png_pass_inc.20+0x883>
   220c3:	mov    (%rbx),%rdi
   220c6:	test   %rdi,%rdi
   220c9:	jne    220fc <png_set_sPLT+0x11c>
   220cb:	mov    %r14,%rdi
   220ce:	callq  b120 <png_app_error>
   220d3:	add    $0xffffffff,%r12d
   220d7:	test   %r12d,%r12d
   220da:	jne    220bc <png_set_sPLT+0xdc>
   220dc:	xor    %eax,%eax
   220de:	test   %eax,%eax
   220e0:	jg     221af <png_set_sPLT+0x1cf>
   220e6:	mov    -0x10(%rbp),%r12
   220ea:	mov    -0x8(%rbp),%rbx
   220ee:	mov    -0x18(%rbp),%r13
   220f2:	mov    -0x28(%rbp),%r15
   220f6:	mov    -0x20(%rbp),%r14
   220fa:	leaveq 
   220fb:	retq   
   220fc:	mov    0x10(%rbx),%rax
   22100:	test   %rax,%rax
   22103:	je     220cb <png_set_sPLT+0xeb>
   22105:	movzbl 0x8(%rbx),%eax
   22109:	mov    %al,0x8(%r13)
   2210d:	callq  5260 <strlen@plt>
   22112:	lea    0x1(%rax),%rdx
   22116:	mov    %r14,%rdi
   22119:	mov    %rdx,%rsi
   2211c:	mov    %r12,-0x38(%rbp)
   22120:	mov    %rdx,%r12
   22123:	callq  c950 <png_malloc_base>
   22128:	mov    %rax,0x0(%r13)
   2212c:	test   %rax,%rax
   2212f:	je     221d9 <png_set_sPLT+0x1f9>
   22135:	mov    %r12,%rdx
   22138:	mov    %rax,%rdi
   2213b:	mov    (%rbx),%rsi
   2213e:	callq  54c0 <memcpy@plt>
   22143:	movslq 0x18(%rbx),%rsi
   22147:	mov    %r14,%rdi
   2214a:	mov    $0xa,%edx
   2214f:	callq  c980 <png_malloc_array>
   22154:	mov    %rax,0x10(%r13)
   22158:	test   %rax,%rax
   2215b:	je     221e2 <png_set_sPLT+0x202>
   22161:	movslq 0x18(%rbx),%rcx
   22165:	mov    %ecx,0x18(%r13)
   22169:	mov    0x10(%rbx),%rsi
   2216d:	mov    0x18(%rbx),%ecx
   22170:	lea    (%rcx,%rcx,4),%rcx
   22174:	lea    (%rcx,%rcx,1),%rdx
   22178:	mov    %rax,%rdi
   2217b:	callq  54c0 <memcpy@plt>
   22180:	mov    0x8(%r15),%eax
   22184:	or     $0x2000,%eax
   22189:	mov    %eax,0x8(%r15)
   2218d:	movslq 0x148(%r15),%rax
   22194:	add    $0x1,%eax
   22197:	mov    %eax,0x148(%r15)
   2219e:	add    $0x20,%rbx
   221a2:	add    $0x20,%r13
   221a6:	mov    -0x38(%rbp),%r12
   221aa:	jmpq   220d3 <png_set_sPLT+0xf3>
   221af:	mov    %r14,%rdi
   221b2:	lea    0xcf58(%rip),%rsi        # 2f111 <png_pass_inc.20+0x89e>
   221b9:	mov    $0x1,%edx
   221be:	callq  b140 <png_chunk_report>
   221c3:	mov    -0x10(%rbp),%r12
   221c7:	mov    -0x8(%rbp),%rbx
   221cb:	mov    -0x18(%rbp),%r13
   221cf:	mov    -0x28(%rbp),%r15
   221d3:	mov    -0x20(%rbp),%r14
   221d7:	leaveq 
   221d8:	retq   
   221d9:	mov    -0x38(%rbp),%rax
   221dd:	jmpq   220de <png_set_sPLT+0xfe>
   221e2:	mov    0x0(%r13),%rsi
   221e6:	mov    %r14,%rdi
   221e9:	callq  5790 <png_free@plt>
   221ee:	movq   $0x0,0x0(%r13)
   221f6:	mov    -0x38(%rbp),%rax
   221fa:	jmpq   220de <png_set_sPLT+0xfe>
   221ff:	nop

0000000000022200 <png_set_text>:
   22200:	push   %rbp
   22201:	mov    %rsp,%rbp
   22204:	sub    $0x10,%rsp
   22208:	mov    %rdi,-0x8(%rbp)
   2220c:	callq  22df0 <png_set_text_2>
   22211:	test   %eax,%eax
   22213:	jne    22217 <png_set_text+0x17>
   22215:	leaveq 
   22216:	retq   
   22217:	lea    0xcf06(%rip),%rsi        # 2f124 <png_pass_inc.20+0x8b1>
   2221e:	mov    -0x8(%rbp),%rdi
   22222:	callq  5470 <png_error@plt>
   22227:	nopw   0x0(%rax,%rax,1)

0000000000022230 <png_set_tIME>:
   22230:	push   %rbp
   22231:	mov    %rsp,%rbp
   22234:	test   %rdi,%rdi
   22237:	jne    2223b <png_set_tIME+0xb>
   22239:	leaveq 
   2223a:	retq   
   2223b:	test   %rsi,%rsi
   2223e:	jne    22242 <png_set_tIME+0x12>
   22240:	leaveq 
   22241:	retq   
   22242:	test   %rdx,%rdx
   22245:	jne    22249 <png_set_tIME+0x19>
   22247:	leaveq 
   22248:	retq   
   22249:	mov    0x12c(%rdi),%eax
   2224f:	and    $0x200,%eax
   22254:	test   %eax,%eax
   22256:	je     2225a <png_set_tIME+0x2a>
   22258:	leaveq 
   22259:	retq   
   2225a:	movzbl 0x2(%rdx),%eax
   2225e:	test   %al,%al
   22260:	je     222a1 <png_set_tIME+0x71>
   22262:	cmp    $0xc,%al
   22264:	ja     222a1 <png_set_tIME+0x71>
   22266:	movzbl 0x3(%rdx),%eax
   2226a:	test   %al,%al
   2226c:	je     222a1 <png_set_tIME+0x71>
   2226e:	cmp    $0x1f,%al
   22270:	ja     222a1 <png_set_tIME+0x71>
   22272:	movzbl 0x4(%rdx),%eax
   22276:	cmp    $0x17,%al
   22278:	ja     222a1 <png_set_tIME+0x71>
   2227a:	movzbl 0x5(%rdx),%eax
   2227e:	cmp    $0x3b,%al
   22280:	ja     222a1 <png_set_tIME+0x71>
   22282:	movzbl 0x6(%rdx),%eax
   22286:	cmp    $0x3c,%al
   22288:	ja     222a1 <png_set_tIME+0x71>
   2228a:	mov    0x8(%rsi),%eax
   2228d:	or     $0x200,%eax
   22292:	mov    (%rdx),%rcx
   22295:	mov    %eax,0x8(%rsi)
   22298:	mov    %rcx,0xa8(%rsi)
   2229f:	leaveq 
   222a0:	retq   
   222a1:	lea    0xce9e(%rip),%rsi        # 2f146 <png_pass_inc.20+0x8d3>
   222a8:	callq  5390 <png_warning@plt>
   222ad:	leaveq 
   222ae:	retq   
   222af:	nop

00000000000222b0 <png_set_tRNS>:
   222b0:	push   %rbp
   222b1:	mov    %rsp,%rbp
   222b4:	sub    $0x30,%rsp
   222b8:	test   %rdi,%rdi
   222bb:	jne    222bf <png_set_tRNS+0xf>
   222bd:	leaveq 
   222be:	retq   
   222bf:	test   %rsi,%rsi
   222c2:	jne    222c6 <png_set_tRNS+0x16>
   222c4:	leaveq 
   222c5:	retq   
   222c6:	test   %rdx,%rdx
   222c9:	je     2233a <png_set_tRNS+0x8a>
   222cb:	mov    $0x2000,%r10d
   222d1:	xor    %r11d,%r11d
   222d4:	mov    %rdi,%r9
   222d7:	mov    %rsi,%rax
   222da:	mov    %r12,-0x8(%rbp)
   222de:	mov    %r13,-0x10(%rbp)
   222e2:	mov    %r14,-0x18(%rbp)
   222e6:	mov    %r15,-0x20(%rbp)
   222ea:	mov    %rdx,-0x28(%rbp)
   222ee:	mov    %r10,%rdx
   222f1:	mov    %rsi,%r12
   222f4:	mov    %rax,%rsi
   222f7:	mov    %rcx,%r13
   222fa:	mov    %r11,%rcx
   222fd:	mov    %r8,%r14
   22300:	mov    %rdi,%r15
   22303:	mov    %r9,%rdi
   22306:	callq  5720 <png_free_data@plt>
   2230b:	test   %r13d,%r13d
   2230e:	jg     22349 <png_set_tRNS+0x99>
   22310:	mov    %r13,%rcx
   22313:	mov    %r12,%rsi
   22316:	mov    %r15,%rdi
   22319:	mov    %r14,%r8
   2231c:	mov    0xb8(%rsi),%rax
   22323:	mov    %rax,0x2e8(%rdi)
   2232a:	mov    -0x20(%rbp),%r15
   2232e:	mov    -0x18(%rbp),%r14
   22332:	mov    -0x10(%rbp),%r13
   22336:	mov    -0x8(%rbp),%r12
   2233a:	test   %r8,%r8
   2233d:	jne    22360 <png_set_tRNS+0xb0>
   2233f:	mov    %cx,0x22(%rsi)
   22343:	test   %ecx,%ecx
   22345:	jne    2238d <png_set_tRNS+0xdd>
   22347:	leaveq 
   22348:	retq   
   22349:	cmp    $0x100,%r13d
   22350:	jle    223a9 <png_set_tRNS+0xf9>
   22352:	mov    %r13,%rcx
   22355:	mov    %r12,%rsi
   22358:	mov    %r15,%rdi
   2235b:	mov    %r14,%r8
   2235e:	jmp    2231c <png_set_tRNS+0x6c>
   22360:	mov    $0x1,%eax
   22365:	movzbl 0x24(%rsi),%edx
   22369:	cmp    $0xf,%dl
   2236c:	jbe    223de <png_set_tRNS+0x12e>
   2236e:	mov    (%r8),%rdx
   22371:	mov    %rdx,0xc0(%rsi)
   22378:	movzwl 0x8(%r8),%edx
   2237d:	mov    %dx,0xc8(%rsi)
   22384:	test   %ecx,%ecx
   22386:	jne    2233f <png_set_tRNS+0x8f>
   22388:	mov    %rax,%rcx
   2238b:	jmp    2233f <png_set_tRNS+0x8f>
   2238d:	mov    0x8(%rsi),%eax
   22390:	or     $0x10,%eax
   22393:	mov    %eax,0x8(%rsi)
   22396:	mov    0x12c(%rsi),%eax
   2239c:	or     $0x2000,%eax
   223a1:	mov    %eax,0x12c(%rsi)
   223a7:	leaveq 
   223a8:	retq   
   223a9:	mov    $0x100,%esi
   223ae:	mov    %r15,%rdi
   223b1:	callq  5800 <png_malloc@plt>
   223b6:	mov    %rax,%rdi
   223b9:	mov    %rdi,0xb8(%r12)
   223c1:	movslq %r13d,%rdx
   223c4:	mov    -0x28(%rbp),%rsi
   223c8:	callq  54c0 <memcpy@plt>
   223cd:	mov    %r13,%rcx
   223d0:	mov    %r12,%rsi
   223d3:	mov    %r15,%rdi
   223d6:	mov    %r14,%r8
   223d9:	jmpq   2231c <png_set_tRNS+0x6c>
   223de:	mov    %rcx,%r9
   223e1:	mov    %rdx,%rcx
   223e4:	mov    %rax,%rdx
   223e7:	shl    %cl,%edx
   223e9:	add    $0xffffffff,%edx
   223ec:	movzbl 0x25(%rsi),%ecx
   223f0:	test   %cl,%cl
   223f2:	je     22405 <png_set_tRNS+0x155>
   223f4:	movzbl 0x25(%rsi),%ecx
   223f8:	cmp    $0x2,%cl
   223fb:	je     22451 <png_set_tRNS+0x1a1>
   223fd:	mov    %r9,%rcx
   22400:	jmpq   2236e <png_set_tRNS+0xbe>
   22405:	movzwl 0x8(%r8),%ecx
   2240a:	cmp    %edx,%ecx
   2240c:	jle    223f4 <png_set_tRNS+0x144>
   2240e:	lea    0xcd4d(%rip),%rax        # 2f162 <png_pass_inc.20+0x8ef>
   22415:	mov    %r13,-0x18(%rbp)
   22419:	mov    %r14,-0x20(%rbp)
   2241d:	mov    %r15,-0x28(%rbp)
   22421:	mov    %r9,%r13
   22424:	mov    %rsi,%r14
   22427:	mov    %rax,%rsi
   2242a:	mov    %r8,%r15
   2242d:	callq  5390 <png_warning@plt>
   22432:	mov    %r13,%rcx
   22435:	mov    %r14,%rsi
   22438:	mov    %r15,%r8
   2243b:	mov    $0x1,%eax
   22440:	mov    -0x28(%rbp),%r15
   22444:	mov    -0x20(%rbp),%r14
   22448:	mov    -0x18(%rbp),%r13
   2244c:	jmpq   2236e <png_set_tRNS+0xbe>
   22451:	movzwl 0x2(%r8),%ecx
   22456:	cmp    %ecx,%edx
   22458:	jl     2240e <png_set_tRNS+0x15e>
   2245a:	movzwl 0x4(%r8),%ecx
   2245f:	cmp    %ecx,%edx
   22461:	jl     2240e <png_set_tRNS+0x15e>
   22463:	movzwl 0x6(%r8),%ecx
   22468:	cmp    %ecx,%edx
   2246a:	jl     2240e <png_set_tRNS+0x15e>
   2246c:	mov    %r9,%rcx
   2246f:	jmpq   2236e <png_set_tRNS+0xbe>
   22474:	data16 nopw %cs:0x0(%rax,%rax,1)
   2247f:	nop

0000000000022480 <png_set_sCAL>:
   22480:	push   %rbp
   22481:	mov    %rsp,%rbp
   22484:	sub    $0x50,%rsp
   22488:	xorpd  %xmm2,%xmm2
   2248c:	ucomisd %xmm2,%xmm0
   22490:	jp     22498 <png_set_sCAL+0x18>
   22492:	jbe    2251d <png_set_sCAL+0x9d>
   22498:	ucomisd %xmm2,%xmm1
   2249c:	jp     224a4 <png_set_sCAL+0x24>
   2249e:	jbe    2252b <png_set_sCAL+0xab>
   224a4:	lea    -0x4c(%rbp),%rax
   224a8:	mov    $0x12,%r8d
   224ae:	mov    $0x5,%ecx
   224b3:	mov    %rdi,%r9
   224b6:	mov    %r13,-0x18(%rbp)
   224ba:	mov    %r14,-0x20(%rbp)
   224be:	mov    %r15,-0x28(%rbp)
   224c2:	mov    %rsi,%r13
   224c5:	mov    %rax,%rsi
   224c8:	mov    %rdx,%r14
   224cb:	mov    %r8,%rdx
   224ce:	mov    %rdi,%r15
   224d1:	mov    %r9,%rdi
   224d4:	movdqu %xmm1,-0x10(%rbp)
   224d9:	callq  8090 <png_ascii_from_fp>
   224de:	lea    -0x3a(%rbp),%rsi
   224e2:	mov    %r15,%rdi
   224e5:	mov    $0x5,%ecx
   224ea:	mov    $0x12,%edx
   224ef:	movdqu -0x10(%rbp),%xmm0
   224f4:	callq  8090 <png_ascii_from_fp>
   224f9:	mov    %r14,%rdx
   224fc:	mov    %r13,%rsi
   224ff:	mov    %r15,%rdi
   22502:	lea    -0x3a(%rbp),%r8
   22506:	lea    -0x4c(%rbp),%rcx
   2250a:	callq  5660 <png_set_sCAL_s@plt>
   2250f:	mov    -0x28(%rbp),%r15
   22513:	mov    -0x20(%rbp),%r14
   22517:	mov    -0x18(%rbp),%r13
   2251b:	leaveq 
   2251c:	retq   
   2251d:	lea    0xcc70(%rip),%rsi        # 2f194 <png_pass_inc.20+0x921>
   22524:	callq  5390 <png_warning@plt>
   22529:	leaveq 
   2252a:	retq   
   2252b:	lea    0xcc7d(%rip),%rsi        # 2f1af <png_pass_inc.20+0x93c>
   22532:	callq  5390 <png_warning@plt>
   22537:	leaveq 
   22538:	retq   
   22539:	nopl   0x0(%rax)

0000000000022540 <png_set_sCAL_fixed>:
   22540:	push   %rbp
   22541:	mov    %rsp,%rbp
   22544:	sub    $0x50,%rsp
   22548:	test   %ecx,%ecx
   2254a:	jle    225ca <png_set_sCAL_fixed+0x8a>
   2254c:	test   %r8d,%r8d
   2254f:	jle    225d8 <png_set_sCAL_fixed+0x98>
   22555:	lea    -0x44(%rbp),%rax
   22559:	mov    $0x12,%r9d
   2255f:	mov    %rdi,%r10
   22562:	mov    %r12,-0x8(%rbp)
   22566:	mov    %r13,-0x10(%rbp)
   2256a:	mov    %r14,-0x18(%rbp)
   2256e:	mov    %r15,-0x20(%rbp)
   22572:	mov    %rdx,%r12
   22575:	mov    %r9,%rdx
   22578:	mov    %rsi,%r13
   2257b:	mov    %rax,%rsi
   2257e:	mov    %rdi,%r14
   22581:	mov    %r10,%rdi
   22584:	mov    %r8,%r15
   22587:	callq  85c0 <png_ascii_from_fixed>
   2258c:	mov    %r15,%rcx
   2258f:	lea    -0x32(%rbp),%r15
   22593:	mov    %r14,%rdi
   22596:	mov    %r15,%rsi
   22599:	mov    $0x12,%edx
   2259e:	callq  85c0 <png_ascii_from_fixed>
   225a3:	mov    %r12,%rdx
   225a6:	mov    %r13,%rsi
   225a9:	mov    %r14,%rdi
   225ac:	mov    %r15,%r8
   225af:	lea    -0x44(%rbp),%rcx
   225b3:	callq  5660 <png_set_sCAL_s@plt>
   225b8:	mov    -0x20(%rbp),%r15
   225bc:	mov    -0x18(%rbp),%r14
   225c0:	mov    -0x10(%rbp),%r13
   225c4:	mov    -0x8(%rbp),%r12
   225c8:	leaveq 
   225c9:	retq   
   225ca:	lea    0xcbc3(%rip),%rsi        # 2f194 <png_pass_inc.20+0x921>
   225d1:	callq  5390 <png_warning@plt>
   225d6:	leaveq 
   225d7:	retq   
   225d8:	lea    0xcbd0(%rip),%rsi        # 2f1af <png_pass_inc.20+0x93c>
   225df:	callq  5390 <png_warning@plt>
   225e4:	leaveq 
   225e5:	retq   
   225e6:	nopw   %cs:0x0(%rax,%rax,1)

00000000000225f0 <png_set_sCAL_s>:
   225f0:	push   %rbp
   225f1:	mov    %rsp,%rbp
   225f4:	sub    $0x40,%rsp
   225f8:	test   %rdi,%rdi
   225fb:	jne    225ff <png_set_sCAL_s+0xf>
   225fd:	leaveq 
   225fe:	retq   
   225ff:	test   %rsi,%rsi
   22602:	jne    22606 <png_set_sCAL_s+0x16>
   22604:	leaveq 
   22605:	retq   
   22606:	cmp    $0x1,%edx
   22609:	jne    22652 <png_set_sCAL_s+0x62>
   2260b:	test   %rcx,%rcx
   2260e:	je     22646 <png_set_sCAL_s+0x56>
   22610:	mov    %rcx,%rax
   22613:	mov    %rbx,-0x10(%rbp)
   22617:	mov    %r12,-0x18(%rbp)
   2261b:	mov    %r13,-0x20(%rbp)
   2261f:	mov    %r14,-0x28(%rbp)
   22623:	mov    %r15,-0x30(%rbp)
   22627:	mov    %rsi,%rbx
   2262a:	mov    %rdx,%r12
   2262d:	mov    %r8,%r13
   22630:	mov    %rdi,%r14
   22633:	mov    %rax,%rdi
   22636:	mov    %rcx,%r15
   22639:	callq  5260 <strlen@plt>
   2263e:	test   %rax,%rax
   22641:	jne    22663 <png_set_sCAL_s+0x73>
   22643:	mov    %r14,%rdi
   22646:	lea    0xcb90(%rip),%rsi        # 2f1dd <png_pass_inc.20+0x96a>
   2264d:	callq  5470 <png_error@plt>
   22652:	cmp    $0x2,%edx
   22655:	je     2260b <png_set_sCAL_s+0x1b>
   22657:	lea    0xcb6d(%rip),%rsi        # 2f1cb <png_pass_inc.20+0x958>
   2265e:	callq  5470 <png_error@plt>
   22663:	movsbq (%r15),%rcx
   22667:	cmp    $0x2d,%cl
   2266a:	jne    22671 <png_set_sCAL_s+0x81>
   2266c:	mov    %r14,%rdi
   2266f:	jmp    22646 <png_set_sCAL_s+0x56>
   22671:	mov    %r15,%rdi
   22674:	mov    %rax,%rsi
   22677:	mov    %r15,-0x38(%rbp)
   2267b:	mov    %rax,%r15
   2267e:	callq  8920 <png_check_fp_string>
   22683:	test   %eax,%eax
   22685:	jne    2268c <png_set_sCAL_s+0x9c>
   22687:	mov    %r14,%rdi
   2268a:	jmp    22646 <png_set_sCAL_s+0x56>
   2268c:	test   %r13,%r13
   2268f:	je     22762 <png_set_sCAL_s+0x172>
   22695:	mov    %r13,%rdi
   22698:	callq  5260 <strlen@plt>
   2269d:	test   %rax,%rax
   226a0:	je     22762 <png_set_sCAL_s+0x172>
   226a6:	movsbq 0x0(%r13),%rcx
   226ab:	cmp    $0x2d,%cl
   226ae:	je     22762 <png_set_sCAL_s+0x172>
   226b4:	mov    %r13,%rdi
   226b7:	mov    %rax,%rsi
   226ba:	mov    %r13,-0x8(%rbp)
   226be:	mov    %rax,%r13
   226c1:	callq  8920 <png_check_fp_string>
   226c6:	test   %eax,%eax
   226c8:	je     22762 <png_set_sCAL_s+0x172>
   226ce:	mov    %r12b,0x14c(%rbx)
   226d5:	add    $0x1,%r15
   226d9:	mov    %r14,%rdi
   226dc:	mov    %r15,%rsi
   226df:	callq  5150 <png_malloc_warn@plt>
   226e4:	mov    %rax,0x150(%rbx)
   226eb:	lea    0xcb12(%rip),%r12        # 2f204 <png_pass_inc.20+0x991>
   226f2:	test   %rax,%rax
   226f5:	je     22771 <png_set_sCAL_s+0x181>
   226f7:	mov    %r15,%rdx
   226fa:	mov    %rax,%rdi
   226fd:	mov    -0x38(%rbp),%rsi
   22701:	callq  54c0 <memcpy@plt>
   22706:	add    $0x1,%r13
   2270a:	mov    %r14,%rdi
   2270d:	mov    %r13,%rsi
   22710:	callq  5150 <png_malloc_warn@plt>
   22715:	mov    %rax,0x158(%rbx)
   2271c:	test   %rax,%rax
   2271f:	je     22792 <png_set_sCAL_s+0x1a2>
   22721:	mov    %r13,%rdx
   22724:	mov    %rax,%rdi
   22727:	mov    -0x8(%rbp),%rsi
   2272b:	callq  54c0 <memcpy@plt>
   22730:	mov    0x8(%rbx),%eax
   22733:	or     $0x4000,%eax
   22738:	mov    %eax,0x8(%rbx)
   2273b:	mov    0x12c(%rbx),%eax
   22741:	or     $0x100,%eax
   22746:	mov    %eax,0x12c(%rbx)
   2274c:	mov    -0x30(%rbp),%r15
   22750:	mov    -0x28(%rbp),%r14
   22754:	mov    -0x20(%rbp),%r13
   22758:	mov    -0x18(%rbp),%r12
   2275c:	mov    -0x10(%rbp),%rbx
   22760:	leaveq 
   22761:	retq   
   22762:	mov    %r14,%rdi
   22765:	lea    0xca84(%rip),%rsi        # 2f1f0 <png_pass_inc.20+0x97d>
   2276c:	callq  5470 <png_error@plt>
   22771:	mov    %r12,%rsi
   22774:	mov    %r14,%rdi
   22777:	callq  5390 <png_warning@plt>
   2277c:	mov    -0x30(%rbp),%r15
   22780:	mov    -0x28(%rbp),%r14
   22784:	mov    -0x20(%rbp),%r13
   22788:	mov    -0x18(%rbp),%r12
   2278c:	mov    -0x10(%rbp),%rbx
   22790:	leaveq 
   22791:	retq   
   22792:	mov    0x150(%rbx),%rsi
   22799:	mov    %r14,%rdi
   2279c:	callq  5790 <png_free@plt>
   227a1:	movq   $0x0,0x150(%rbx)
   227ac:	mov    %r12,%rsi
   227af:	mov    %r14,%rdi
   227b2:	callq  5390 <png_warning@plt>
   227b7:	mov    -0x30(%rbp),%r15
   227bb:	mov    -0x28(%rbp),%r14
   227bf:	mov    -0x20(%rbp),%r13
   227c3:	mov    -0x18(%rbp),%r12
   227c7:	mov    -0x10(%rbp),%rbx
   227cb:	leaveq 
   227cc:	retq   
   227cd:	nopl   (%rax)

00000000000227d0 <png_set_keep_unknown_chunks>:
   227d0:	push   %rbp
   227d1:	mov    %rsp,%rbp
   227d4:	sub    $0x40,%rsp
   227d8:	test   %rdi,%rdi
   227db:	jne    227df <png_set_keep_unknown_chunks+0xf>
   227dd:	leaveq 
   227de:	retq   
   227df:	test   %esi,%esi
   227e1:	js     22803 <png_set_keep_unknown_chunks+0x33>
   227e3:	cmp    $0x3,%esi
   227e6:	jg     22803 <png_set_keep_unknown_chunks+0x33>
   227e8:	test   %ecx,%ecx
   227ea:	jle    22811 <png_set_keep_unknown_chunks+0x41>
   227ec:	test   %ecx,%ecx
   227ee:	js     2281d <png_set_keep_unknown_chunks+0x4d>
   227f0:	test   %rdx,%rdx
   227f3:	jne    22829 <png_set_keep_unknown_chunks+0x59>
   227f5:	lea    0xcabb(%rip),%rsi        # 2f2b7 <chunks_to_ignore.46+0x5a>
   227fc:	callq  b120 <png_app_error>
   22801:	leaveq 
   22802:	retq   
   22803:	lea    0xca29(%rip),%rsi        # 2f233 <png_pass_inc.20+0x9c0>
   2280a:	callq  b120 <png_app_error>
   2280f:	leaveq 
   22810:	retq   
   22811:	mov    %esi,0x3c0(%rdi)
   22817:	test   %ecx,%ecx
   22819:	jne    227ec <png_set_keep_unknown_chunks+0x1c>
   2281b:	leaveq 
   2281c:	retq   
   2281d:	mov    $0x12,%ecx
   22822:	lea    0xca34(%rip),%rdx        # 2f25d <chunks_to_ignore.46>
   22829:	mov    0x3c4(%rdi),%eax
   2282f:	xor    %r8d,%r8d
   22832:	mov    0x3c8(%rdi),%r9
   22839:	test   %r9,%r9
   2283c:	jne    22841 <png_set_keep_unknown_chunks+0x71>
   2283e:	mov    %r8,%rax
   22841:	lea    (%rax,%rcx,1),%r9d
   22845:	cmp    $0x33333333,%r9d
   2284c:	ja     2285e <png_set_keep_unknown_chunks+0x8e>
   2284e:	test   %esi,%esi
   22850:	jne    2286c <png_set_keep_unknown_chunks+0x9c>
   22852:	test   %eax,%eax
   22854:	jne    228c8 <png_set_keep_unknown_chunks+0xf8>
   22856:	mov    %r8,%r9
   22859:	jmpq   22914 <png_set_keep_unknown_chunks+0x144>
   2285e:	lea    0xca7d(%rip),%rsi        # 2f2e2 <chunks_to_ignore.46+0x85>
   22865:	callq  b120 <png_app_error>
   2286a:	leaveq 
   2286b:	retq   
   2286c:	lea    (%r9,%r9,4),%r8d
   22870:	mov    %r8d,%r8d
   22873:	mov    %rdi,%r9
   22876:	mov    %r13,-0x18(%rbp)
   2287a:	mov    %r14,-0x20(%rbp)
   2287e:	mov    %r15,-0x28(%rbp)
   22882:	mov    %rdx,-0x30(%rbp)
   22886:	mov    %rsi,-0x38(%rbp)
   2288a:	mov    %r8,%rsi
   2288d:	mov    %rdi,%r13
   22890:	mov    %r9,%rdi
   22893:	mov    %rax,%r14
   22896:	mov    %rcx,%r15
   22899:	callq  5800 <png_malloc@plt>
   2289e:	test   %r14d,%r14d
   228a1:	jne    228d1 <png_set_keep_unknown_chunks+0x101>
   228a3:	mov    %r15,%rcx
   228a6:	mov    %r13,%rdi
   228a9:	mov    %rax,%r9
   228ac:	mov    %r14,%rax
   228af:	xor    %r8d,%r8d
   228b2:	mov    -0x38(%rbp),%rsi
   228b6:	mov    -0x30(%rbp),%rdx
   228ba:	mov    -0x28(%rbp),%r15
   228be:	mov    -0x20(%rbp),%r14
   228c2:	mov    -0x18(%rbp),%r13
   228c6:	jmp    22914 <png_set_keep_unknown_chunks+0x144>
   228c8:	mov    0x3c8(%rdi),%r9
   228cf:	jmp    22914 <png_set_keep_unknown_chunks+0x144>
   228d1:	mov    0x3c8(%r13),%rsi
   228d8:	lea    (%r14,%r14,4),%ecx
   228dc:	mov    %ecx,%edx
   228de:	mov    %rax,%rdi
   228e1:	mov    %r12,-0x10(%rbp)
   228e5:	mov    %rax,%r12
   228e8:	callq  54c0 <memcpy@plt>
   228ed:	mov    %r14,%rax
   228f0:	mov    %r15,%rcx
   228f3:	mov    %r13,%rdi
   228f6:	mov    %r12,%r9
   228f9:	mov    -0x10(%rbp),%r12
   228fd:	xor    %r8d,%r8d
   22900:	mov    -0x38(%rbp),%rsi
   22904:	mov    -0x30(%rbp),%rdx
   22908:	mov    -0x28(%rbp),%r15
   2290c:	mov    -0x20(%rbp),%r14
   22910:	mov    -0x18(%rbp),%r13
   22914:	test   %r9,%r9
   22917:	jne    22931 <png_set_keep_unknown_chunks+0x161>
   22919:	mov    %r8,%rax
   2291c:	mov    %r8d,0x3c4(%rdi)
   22923:	mov    0x3c8(%rdi),%rsi
   2292a:	cmp    %rsi,%rax
   2292d:	jne    22957 <png_set_keep_unknown_chunks+0x187>
   2292f:	leaveq 
   22930:	retq   
   22931:	mov    %r13,-0x18(%rbp)
   22935:	mov    %r14,-0x20(%rbp)
   22939:	mov    %r15,-0x28(%rbp)
   2293d:	mov    %r12,-0x10(%rbp)
   22941:	mov    %rdi,-0x30(%rbp)
   22945:	mov    %rbx,-0x8(%rbp)
   22949:	mov    %r9,%rbx
   2294c:	mov    %rcx,%r12
   2294f:	mov    %rdx,%r13
   22952:	mov    %r8,%r14
   22955:	jmp    229b5 <png_set_keep_unknown_chunks+0x1e5>
   22957:	test   %rsi,%rsi
   2295a:	je     22983 <png_set_keep_unknown_chunks+0x1b3>
   2295c:	mov    %rdi,%rcx
   2295f:	mov    %r14,-0x8(%rbp)
   22963:	mov    %r15,-0x38(%rbp)
   22967:	mov    %rdi,%r14
   2296a:	mov    %rcx,%rdi
   2296d:	mov    %rax,%r15
   22970:	callq  5790 <png_free@plt>
   22975:	mov    %r15,%rax
   22978:	mov    %r14,%rdi
   2297b:	mov    -0x38(%rbp),%r15
   2297f:	mov    -0x8(%rbp),%r14
   22983:	mov    %rax,0x3c8(%rdi)
   2298a:	leaveq 
   2298b:	retq   
   2298c:	mov    %r14d,%ecx
   2298f:	lea    0x0(%r13,%rcx,1),%rdx
   22994:	mov    %rbx,%rdi
   22997:	mov    %rsi,%rcx
   2299a:	mov    %rsi,-0x38(%rbp)
   2299e:	mov    %rax,%rsi
   229a1:	mov    %r8,%r15
   229a4:	callq  23450 <add_one_chunk>
   229a9:	add    $0x5,%r14d
   229ad:	lea    0x1(%r15),%r8d
   229b1:	mov    -0x38(%rbp),%rsi
   229b5:	cmp    %r8d,%r12d
   229b8:	ja     2298c <png_set_keep_unknown_chunks+0x1bc>
   229ba:	mov    $0x5,%edx
   229bf:	mov    %rbx,-0x38(%rbp)
   229c3:	xor    %r12d,%r12d
   229c6:	mov    %rbx,%r13
   229c9:	mov    %r12,%r8
   229cc:	jmp    22a08 <png_set_keep_unknown_chunks+0x238>
   229ce:	movzbl 0x4(%r13),%ecx
   229d3:	test   %cl,%cl
   229d5:	je     22a00 <png_set_keep_unknown_chunks+0x230>
   229d7:	cmp    %rbx,%r13
   229da:	je     229f8 <png_set_keep_unknown_chunks+0x228>
   229dc:	mov    %r8,%r14
   229df:	mov    %rax,%r15
   229e2:	mov    %rbx,%rdi
   229e5:	mov    %r13,%rsi
   229e8:	callq  54c0 <memcpy@plt>
   229ed:	mov    %r15,%rax
   229f0:	mov    %r14,%r8
   229f3:	mov    $0x5,%edx
   229f8:	add    $0x1,%r8d
   229fc:	add    $0x5,%rbx
   22a00:	add    $0x5,%r13
   22a04:	add    $0x1,%r12d
   22a08:	cmp    %eax,%r12d
   22a0b:	jb     229ce <png_set_keep_unknown_chunks+0x1fe>
   22a0d:	test   %r8d,%r8d
   22a10:	je     22a33 <png_set_keep_unknown_chunks+0x263>
   22a12:	mov    -0x8(%rbp),%rbx
   22a16:	mov    -0x30(%rbp),%rdi
   22a1a:	mov    -0x38(%rbp),%rax
   22a1e:	mov    -0x10(%rbp),%r12
   22a22:	mov    -0x28(%rbp),%r15
   22a26:	mov    -0x20(%rbp),%r14
   22a2a:	mov    -0x18(%rbp),%r13
   22a2e:	jmpq   2291c <png_set_keep_unknown_chunks+0x14c>
   22a33:	mov    -0x30(%rbp),%rdi
   22a37:	mov    -0x38(%rbp),%rsi
   22a3b:	cmp    0x3c8(%rdi),%rsi
   22a42:	jne    22a63 <png_set_keep_unknown_chunks+0x293>
   22a44:	mov    -0x8(%rbp),%rbx
   22a48:	mov    -0x10(%rbp),%r12
   22a4c:	xor    %r8d,%r8d
   22a4f:	mov    -0x28(%rbp),%r15
   22a53:	mov    -0x20(%rbp),%r14
   22a57:	mov    -0x18(%rbp),%r13
   22a5b:	mov    %r8,%rax
   22a5e:	jmpq   2291c <png_set_keep_unknown_chunks+0x14c>
   22a63:	mov    %rdi,%r15
   22a66:	callq  5790 <png_free@plt>
   22a6b:	mov    %r15,%rdi
   22a6e:	mov    -0x8(%rbp),%rbx
   22a72:	mov    -0x10(%rbp),%r12
   22a76:	xor    %r8d,%r8d
   22a79:	mov    -0x28(%rbp),%r15
   22a7d:	mov    -0x20(%rbp),%r14
   22a81:	mov    -0x18(%rbp),%r13
   22a85:	mov    %r8,%rax
   22a88:	jmpq   2291c <png_set_keep_unknown_chunks+0x14c>
   22a8d:	nopl   (%rax)

0000000000022a90 <png_set_unknown_chunks>:
   22a90:	push   %rbp
   22a91:	mov    %rsp,%rbp
   22a94:	sub    $0x40,%rsp
   22a98:	test   %rdi,%rdi
   22a9b:	jne    22a9f <png_set_unknown_chunks+0xf>
   22a9d:	leaveq 
   22a9e:	retq   
   22a9f:	test   %rsi,%rsi
   22aa2:	jne    22aa6 <png_set_unknown_chunks+0x16>
   22aa4:	leaveq 
   22aa5:	retq   
   22aa6:	test   %ecx,%ecx
   22aa8:	jg     22aac <png_set_unknown_chunks+0x1c>
   22aaa:	leaveq 
   22aab:	retq   
   22aac:	test   %rdx,%rdx
   22aaf:	jne    22ab3 <png_set_unknown_chunks+0x23>
   22ab1:	leaveq 
   22ab2:	retq   
   22ab3:	mov    0x130(%rsi),%r11
   22aba:	movslq 0x138(%rsi),%r9
   22ac1:	mov    $0x20,%r8d
   22ac7:	mov    %rdi,%r10
   22aca:	mov    %rcx,%rax
   22acd:	mov    %r14,-0x20(%rbp)
   22ad1:	mov    %r15,-0x28(%rbp)
   22ad5:	mov    %rcx,-0x38(%rbp)
   22ad9:	mov    %rdx,-0x30(%rbp)
   22add:	mov    %rax,%rcx
   22ae0:	mov    %r9,%rdx
   22ae3:	mov    %r12,%r14
   22ae6:	mov    %rsi,%r12
   22ae9:	mov    %r11,%rsi
   22aec:	mov    %rbx,%r15
   22aef:	mov    %rdi,%rbx
   22af2:	mov    %r10,%rdi
   22af5:	callq  c9a0 <png_realloc_array>
   22afa:	test   %rax,%rax
   22afd:	je     22b5c <png_set_unknown_chunks+0xcc>
   22aff:	mov    0x130(%r12),%rsi
   22b07:	mov    %rbx,%rdi
   22b0a:	mov    %r13,-0x18(%rbp)
   22b0e:	mov    %r14,%r13
   22b11:	mov    %rax,%r14
   22b14:	callq  5790 <png_free@plt>
   22b19:	mov    %r14,0x130(%r12)
   22b21:	mov    0x12c(%r12),%eax
   22b29:	or     $0x200,%eax
   22b2e:	mov    %eax,0x12c(%r12)
   22b36:	mov    $0x5,%edx
   22b3b:	movslq 0x138(%r12),%rcx
   22b43:	shl    $0x5,%rcx
   22b47:	add    %rcx,%r14
   22b4a:	mov    %r15,-0x8(%rbp)
   22b4e:	mov    %r13,-0x10(%rbp)
   22b52:	mov    -0x30(%rbp),%r15
   22b56:	mov    -0x38(%rbp),%r13
   22b5a:	jmp    22bb4 <png_set_unknown_chunks+0x124>
   22b5c:	mov    %rbx,%rdi
   22b5f:	mov    %r14,%r12
   22b62:	lea    0xc7a6(%rip),%rsi        # 2f30f <chunks_to_ignore.46+0xb2>
   22b69:	mov    $0x1,%edx
   22b6e:	callq  b140 <png_chunk_report>
   22b73:	mov    %r15,%rbx
   22b76:	mov    -0x28(%rbp),%r15
   22b7a:	mov    -0x20(%rbp),%r14
   22b7e:	leaveq 
   22b7f:	retq   
   22b80:	movq   $0x0,0x8(%r14)
   22b88:	movq   $0x0,0x10(%r14)
   22b90:	movslq 0x138(%r12),%rax
   22b98:	add    $0x1,%eax
   22b9b:	mov    %eax,0x138(%r12)
   22ba3:	add    $0x20,%r14
   22ba7:	add    $0xffffffff,%r13d
   22bab:	add    $0x20,%r15
   22baf:	mov    $0x5,%edx
   22bb4:	test   %r13d,%r13d
   22bb7:	jg     22bcf <png_set_unknown_chunks+0x13f>
   22bb9:	mov    -0x10(%rbp),%r12
   22bbd:	mov    -0x8(%rbp),%rbx
   22bc1:	mov    -0x18(%rbp),%r13
   22bc5:	mov    -0x28(%rbp),%r15
   22bc9:	mov    -0x20(%rbp),%r14
   22bcd:	leaveq 
   22bce:	retq   
   22bcf:	mov    %r14,%rdi
   22bd2:	mov    %r15,%rsi
   22bd5:	callq  54c0 <memcpy@plt>
   22bda:	movb   $0x0,0x4(%r14)
   22bdf:	movzbl 0x18(%r15),%esi
   22be4:	mov    %rbx,%rdi
   22be7:	callq  233d0 <check_location>
   22bec:	mov    %al,0x18(%r14)
   22bf0:	mov    0x10(%r15),%rsi
   22bf4:	test   %rsi,%rsi
   22bf7:	je     22b80 <png_set_unknown_chunks+0xf0>
   22bf9:	mov    %rbx,%rdi
   22bfc:	callq  c950 <png_malloc_base>
   22c01:	mov    %rax,0x8(%r14)
   22c05:	test   %rax,%rax
   22c08:	je     22c27 <png_set_unknown_chunks+0x197>
   22c0a:	mov    %rax,%rdi
   22c0d:	mov    0x8(%r15),%rsi
   22c11:	mov    0x10(%r15),%rdx
   22c15:	callq  54c0 <memcpy@plt>
   22c1a:	mov    0x10(%r15),%rax
   22c1e:	mov    %rax,0x10(%r14)
   22c22:	jmpq   22b90 <png_set_unknown_chunks+0x100>
   22c27:	mov    %rbx,%rdi
   22c2a:	lea    0xc6f6(%rip),%rsi        # 2f327 <chunks_to_ignore.46+0xca>
   22c31:	mov    $0x1,%edx
   22c36:	callq  b140 <png_chunk_report>
   22c3b:	jmpq   22ba7 <png_set_unknown_chunks+0x117>

0000000000022c40 <png_set_unknown_chunk_location>:
   22c40:	push   %rbp
   22c41:	mov    %rsp,%rbp
   22c44:	sub    $0x20,%rsp
   22c48:	test   %rdi,%rdi
   22c4b:	jne    22c4f <png_set_unknown_chunk_location+0xf>
   22c4d:	leaveq 
   22c4e:	retq   
   22c4f:	test   %rsi,%rsi
   22c52:	jne    22c56 <png_set_unknown_chunk_location+0x16>
   22c54:	leaveq 
   22c55:	retq   
   22c56:	test   %edx,%edx
   22c58:	jns    22c5c <png_set_unknown_chunk_location+0x1c>
   22c5a:	leaveq 
   22c5b:	retq   
   22c5c:	cmp    0x138(%rsi),%edx
   22c62:	jl     22c66 <png_set_unknown_chunk_location+0x26>
   22c64:	leaveq 
   22c65:	retq   
   22c66:	mov    %rcx,%rax
   22c69:	and    $0xb,%eax
   22c6c:	test   %eax,%eax
   22c6e:	je     22ca6 <png_set_unknown_chunk_location+0x66>
   22c70:	mov    %rsi,%rax
   22c73:	mov    %rcx,%rsi
   22c76:	mov    0x130(%rax),%rax
   22c7d:	mov    %r14,-0x18(%rbp)
   22c81:	mov    %r15,-0x20(%rbp)
   22c85:	mov    %rax,%r14
   22c88:	mov    %rdx,%r15
   22c8b:	callq  233d0 <check_location>
   22c90:	movslq %r15d,%rcx
   22c93:	shl    $0x5,%rcx
   22c97:	mov    %al,0x18(%r14,%rcx,1)
   22c9c:	mov    -0x20(%rbp),%r15
   22ca0:	mov    -0x18(%rbp),%r14
   22ca4:	leaveq 
   22ca5:	retq   
   22ca6:	lea    0xc697(%rip),%rax        # 2f344 <chunks_to_ignore.46+0xe7>
   22cad:	mov    %rdi,%r8
   22cb0:	mov    %r12,-0x8(%rbp)
   22cb4:	mov    %r13,-0x10(%rbp)
   22cb8:	mov    %r14,-0x18(%rbp)
   22cbc:	mov    %r15,-0x20(%rbp)
   22cc0:	mov    %rcx,%r12
   22cc3:	mov    %rsi,%r13
   22cc6:	mov    %rax,%rsi
   22cc9:	mov    %rdi,%r14
   22ccc:	mov    %r8,%rdi
   22ccf:	mov    %rdx,%r15
   22cd2:	callq  b120 <png_app_error>
   22cd7:	and    $0x4,%r12d
   22cdb:	test   %r12d,%r12d
   22cde:	jne    22d03 <png_set_unknown_chunk_location+0xc3>
   22ce0:	mov    %r13,%rax
   22ce3:	mov    %r15,%rdx
   22ce6:	mov    %r14,%rdi
   22ce9:	mov    $0x1,%esi
   22cee:	mov    -0x20(%rbp),%r15
   22cf2:	mov    -0x18(%rbp),%r14
   22cf6:	mov    -0x10(%rbp),%r13
   22cfa:	mov    -0x8(%rbp),%r12
   22cfe:	jmpq   22c76 <png_set_unknown_chunk_location+0x36>
   22d03:	mov    %r13,%rax
   22d06:	mov    %r15,%rdx
   22d09:	mov    %r14,%rdi
   22d0c:	mov    $0x8,%esi
   22d11:	mov    -0x20(%rbp),%r15
   22d15:	mov    -0x18(%rbp),%r14
   22d19:	mov    -0x10(%rbp),%r13
   22d1d:	mov    -0x8(%rbp),%r12
   22d21:	jmpq   22c76 <png_set_unknown_chunk_location+0x36>
   22d26:	nopw   %cs:0x0(%rax,%rax,1)

0000000000022d30 <png_set_invalid>:
   22d30:	push   %rbp
   22d31:	mov    %rsp,%rbp
   22d34:	test   %rdi,%rdi
   22d37:	jne    22d3b <png_set_invalid+0xb>
   22d39:	leaveq 
   22d3a:	retq   
   22d3b:	test   %rsi,%rsi
   22d3e:	jne    22d42 <png_set_invalid+0x12>
   22d40:	leaveq 
   22d41:	retq   
   22d42:	not    %edx
   22d44:	and    0x8(%rsi),%edx
   22d47:	mov    %edx,0x8(%rsi)
   22d4a:	leaveq 
   22d4b:	retq   
   22d4c:	nopl   0x0(%rax)

0000000000022d50 <png_permit_mng_features>:
   22d50:	push   %rbp
   22d51:	mov    %rsp,%rbp
   22d54:	test   %rdi,%rdi
   22d57:	jne    22d5d <png_permit_mng_features+0xd>
   22d59:	xor    %eax,%eax
   22d5b:	leaveq 
   22d5c:	retq   
   22d5d:	mov    %rsi,%rax
   22d60:	and    $0x5,%eax
   22d63:	mov    %eax,0x3d8(%rdi)
   22d69:	leaveq 
   22d6a:	retq   
   22d6b:	nopl   0x0(%rax,%rax,1)

0000000000022d70 <png_set_user_limits>:
   22d70:	push   %rbp
   22d71:	mov    %rsp,%rbp
   22d74:	test   %rdi,%rdi
   22d77:	jne    22d7b <png_set_user_limits+0xb>
   22d79:	leaveq 
   22d7a:	retq   
   22d7b:	mov    %esi,0x41c(%rdi)
   22d81:	mov    %edx,0x420(%rdi)
   22d87:	leaveq 
   22d88:	retq   
   22d89:	nopl   0x0(%rax)

0000000000022d90 <png_set_chunk_cache_max>:
   22d90:	push   %rbp
   22d91:	mov    %rsp,%rbp
   22d94:	test   %rdi,%rdi
   22d97:	jne    22d9b <png_set_chunk_cache_max+0xb>
   22d99:	leaveq 
   22d9a:	retq   
   22d9b:	mov    %esi,0x424(%rdi)
   22da1:	leaveq 
   22da2:	retq   
   22da3:	data16 nopw %cs:0x0(%rax,%rax,1)
   22dae:	xchg   %ax,%ax

0000000000022db0 <png_set_chunk_malloc_max>:
   22db0:	push   %rbp
   22db1:	mov    %rsp,%rbp
   22db4:	test   %rdi,%rdi
   22db7:	jne    22dbb <png_set_chunk_malloc_max+0xb>
   22db9:	leaveq 
   22dba:	retq   
   22dbb:	mov    %rsi,0x428(%rdi)
   22dc2:	leaveq 
   22dc3:	retq   
   22dc4:	data16 nopw %cs:0x0(%rax,%rax,1)
   22dcf:	nop

0000000000022dd0 <png_set_check_for_invalid_index>:
   22dd0:	push   %rbp
   22dd1:	mov    %rsp,%rbp
   22dd4:	test   %esi,%esi
   22dd6:	jg     22de4 <png_set_check_for_invalid_index+0x14>
   22dd8:	movl   $0xffffffff,0x25c(%rdi)
   22de2:	leaveq 
   22de3:	retq   
   22de4:	movl   $0x0,0x25c(%rdi)
   22dee:	leaveq 
   22def:	retq   

0000000000022df0 <png_set_text_2>:
   22df0:	push   %rbp
   22df1:	mov    %rsp,%rbp
   22df4:	sub    $0x60,%rsp
   22df8:	xor    %eax,%eax
   22dfa:	test   %rdi,%rdi
   22dfd:	jne    22e01 <png_set_text_2+0x11>
   22dff:	leaveq 
   22e00:	retq   
   22e01:	test   %rsi,%rsi
   22e04:	jne    22e08 <png_set_text_2+0x18>
   22e06:	leaveq 
   22e07:	retq   
   22e08:	test   %ecx,%ecx
   22e0a:	jg     22e0e <png_set_text_2+0x1e>
   22e0c:	leaveq 
   22e0d:	retq   
   22e0e:	test   %rdx,%rdx
   22e11:	jne    22e15 <png_set_text_2+0x25>
   22e13:	leaveq 
   22e14:	retq   
   22e15:	mov    $0x1,%r10d
   22e1b:	lea    0xc556(%rip),%r9        # 2f378 <chunks_to_ignore.46+0x11b>
   22e22:	movslq 0x94(%rsi),%r11
   22e29:	movslq 0x98(%rsi),%r8
   22e30:	sub    %r11d,%r8d
   22e33:	cmp    %r8d,%ecx
   22e36:	jg     22e63 <png_set_text_2+0x73>
   22e38:	mov    %r13,-0x18(%rbp)
   22e3c:	mov    %r14,-0x20(%rbp)
   22e40:	mov    %r15,-0x28(%rbp)
   22e44:	mov    %rbx,-0x8(%rbp)
   22e48:	mov    %r12,-0x10(%rbp)
   22e4c:	mov    %rdx,%rbx
   22e4f:	mov    %r10,%rdx
   22e52:	mov    %rsi,%r12
   22e55:	mov    %r9,%rsi
   22e58:	mov    %rdi,%r13
   22e5b:	mov    %rcx,%r14
   22e5e:	mov    %rax,%r15
   22e61:	jmp    22eac <png_set_text_2+0xbc>
   22e63:	mov    %r11,%r8
   22e66:	xor    $0x7fffffff,%r8d
   22e6d:	cmp    %r8d,%ecx
   22e70:	jle    22ecb <png_set_text_2+0xdb>
   22e72:	mov    %rbx,%r8
   22e75:	mov    %rdx,%rbx
   22e78:	mov    %r10,%rdx
   22e7b:	mov    %r12,%r10
   22e7e:	mov    %rsi,%r12
   22e81:	mov    %r11,%r9
   22e84:	mov    %r14,%rsi
   22e87:	mov    %rcx,%r14
   22e8a:	mov    %rsi,%rcx
   22e8d:	jmpq   22f4f <png_set_text_2+0x15f>
   22e92:	mov    %r13,%rdi
   22e95:	callq  b140 <png_chunk_report>
   22e9a:	mov    $0x1,%edx
   22e9f:	lea    0xc4d2(%rip),%rsi        # 2f378 <chunks_to_ignore.46+0x11b>
   22ea6:	add    $0x1,%r15d
   22eaa:	xor    %eax,%eax
   22eac:	cmp    %r15d,%r14d
   22eaf:	jg     22fc8 <png_set_text_2+0x1d8>
   22eb5:	mov    -0x10(%rbp),%r12
   22eb9:	mov    -0x8(%rbp),%rbx
   22ebd:	mov    -0x28(%rbp),%r15
   22ec1:	mov    -0x20(%rbp),%r14
   22ec5:	mov    -0x18(%rbp),%r13
   22ec9:	leaveq 
   22eca:	retq   
   22ecb:	lea    (%rcx,%r11,1),%eax
   22ecf:	cmp    $0x7ffffff6,%eax
   22ed4:	jle    22edd <png_set_text_2+0xed>
   22ed6:	mov    $0x7fffffff,%eax
   22edb:	jmp    22ee3 <png_set_text_2+0xf3>
   22edd:	add    $0x8,%eax
   22ee0:	and    $0xfffffff8,%eax
   22ee3:	mov    %rax,%r10
   22ee6:	sub    %r11d,%r10d
   22ee9:	mov    0xa0(%rsi),%r8
   22ef0:	mov    %rdi,%r9
   22ef3:	mov    %rdx,-0x58(%rbp)
   22ef7:	mov    %r13,-0x38(%rbp)
   22efb:	mov    %r14,-0x40(%rbp)
   22eff:	mov    %r15,-0x50(%rbp)
   22f03:	mov    %rcx,-0x60(%rbp)
   22f07:	mov    %r10,%rcx
   22f0a:	mov    %r11,%rdx
   22f0d:	mov    %r12,%r13
   22f10:	mov    %rsi,%r12
   22f13:	mov    %r8,%rsi
   22f16:	mov    %rax,%r14
   22f19:	mov    %rdi,%r15
   22f1c:	mov    %r9,%rdi
   22f1f:	mov    $0x38,%r8d
   22f25:	callq  c9a0 <png_realloc_array>
   22f2a:	mov    %r15,%rdi
   22f2d:	mov    %rbx,%r8
   22f30:	mov    %r14,%r9
   22f33:	mov    %r13,%r10
   22f36:	mov    -0x60(%rbp),%r14
   22f3a:	mov    -0x50(%rbp),%r15
   22f3e:	mov    -0x40(%rbp),%rcx
   22f42:	mov    -0x38(%rbp),%r13
   22f46:	mov    -0x58(%rbp),%rbx
   22f4a:	mov    $0x1,%edx
   22f4f:	test   %rax,%rax
   22f52:	je     23076 <png_set_text_2+0x286>
   22f58:	mov    %r15,-0x28(%rbp)
   22f5c:	mov    0xa0(%r12),%rsi
   22f64:	mov    %rcx,-0x20(%rbp)
   22f68:	mov    %rdi,%rcx
   22f6b:	mov    %r13,-0x18(%rbp)
   22f6f:	mov    %rdi,-0x60(%rbp)
   22f73:	mov    %r8,-0x8(%rbp)
   22f77:	mov    %r10,-0x10(%rbp)
   22f7b:	mov    %rcx,%rdi
   22f7e:	mov    %r9,%r13
   22f81:	mov    %rax,%r15
   22f84:	callq  5790 <png_free@plt>
   22f89:	mov    %r15,0xa0(%r12)
   22f91:	mov    0x12c(%r12),%eax
   22f99:	or     $0x4000,%eax
   22f9e:	mov    %eax,0x12c(%r12)
   22fa6:	mov    %r13d,0x98(%r12)
   22fae:	mov    -0x60(%rbp),%r13
   22fb2:	mov    $0x1,%edx
   22fb7:	xor    %eax,%eax
   22fb9:	lea    0xc3b8(%rip),%rsi        # 2f378 <chunks_to_ignore.46+0x11b>
   22fc0:	mov    %rax,%r15
   22fc3:	jmpq   22eac <png_set_text_2+0xbc>
   22fc8:	mov    0xa0(%r12),%r8
   22fd0:	movslq 0x94(%r12),%r9
   22fd8:	movslq %r15d,%rcx
   22fdb:	lea    (%rcx,%rcx,2),%rax
   22fdf:	shl    $0x4,%rax
   22fe3:	lea    (%rax,%rcx,8),%rax
   22fe7:	mov    0x8(%rbx,%rax,1),%rdi
   22fec:	test   %rdi,%rdi
   22fef:	je     22ea6 <png_set_text_2+0xb6>
   22ff5:	movslq (%rbx,%rax,1),%rcx
   22ff9:	cmp    $0xffffffff,%ecx
   22ffc:	jl     22e92 <png_set_text_2+0xa2>
   23002:	cmp    $0x2,%ecx
   23005:	jg     22e92 <png_set_text_2+0xa2>
   2300b:	mov    %r14,-0x58(%rbp)
   2300f:	mov    %r13,-0x38(%rbp)
   23013:	mov    %r12,-0x50(%rbp)
   23017:	mov    %r15,-0x60(%rbp)
   2301b:	mov    %rax,%r12
   2301e:	mov    %r8,%r13
   23021:	mov    %rcx,%r14
   23024:	mov    %r9,%r15
   23027:	callq  5260 <strlen@plt>
   2302c:	test   %r14d,%r14d
   2302f:	jg     23092 <png_set_text_2+0x2a2>
   23031:	mov    %r15,%rcx
   23034:	mov    %rax,%r15
   23037:	mov    %rcx,%rax
   2303a:	xor    %r14d,%r14d
   2303d:	mov    %r14,%rcx
   23040:	mov    %rcx,-0x40(%rbp)
   23044:	mov    0x10(%rbx,%r12,1),%rdi
   23049:	test   %rdi,%rdi
   2304c:	je     230b1 <png_set_text_2+0x2c1>
   2304e:	movsbq (%rdi),%rdx
   23052:	test   %dl,%dl
   23054:	je     230b1 <png_set_text_2+0x2c1>
   23056:	mov    %r14,-0x48(%rbp)
   2305a:	mov    %rax,%r14
   2305d:	callq  5260 <strlen@plt>
   23062:	movslq (%rbx,%r12,1),%rsi
   23066:	mov    %rax,%rdi
   23069:	mov    %r14,%rax
   2306c:	mov    -0x40(%rbp),%rcx
   23070:	mov    -0x48(%rbp),%r14
   23074:	jmp    230cb <png_set_text_2+0x2db>
   23076:	mov    %r8,%rbx
   23079:	mov    %r10,%r12
   2307c:	mov    %rcx,%r14
   2307f:	lea    0xc2dd(%rip),%rsi        # 2f363 <chunks_to_ignore.46+0x106>
   23086:	callq  b140 <png_chunk_report>
   2308b:	mov    $0x1,%eax
   23090:	leaveq 
   23091:	retq   
   23092:	mov    0x28(%rbx,%r12,1),%rdi
   23097:	test   %rdi,%rdi
   2309a:	jne    2313f <png_set_text_2+0x34f>
   230a0:	mov    %r15,%rcx
   230a3:	mov    %rax,%r15
   230a6:	mov    %rcx,%rax
   230a9:	xor    %r14d,%r14d
   230ac:	jmpq   23153 <png_set_text_2+0x363>
   230b1:	movslq (%rbx,%r12,1),%rdx
   230b5:	test   %edx,%edx
   230b7:	jg     230c4 <png_set_text_2+0x2d4>
   230b9:	xor    %edi,%edi
   230bb:	mov    $0xffffffffffffffff,%rsi
   230c2:	jmp    230cb <png_set_text_2+0x2db>
   230c4:	mov    $0x1,%esi
   230c9:	xor    %edi,%edi
   230cb:	mov    %rdi,-0x30(%rbp)
   230cf:	lea    (%rax,%rax,2),%rdx
   230d3:	shl    $0x4,%rdx
   230d7:	lea    (%rdx,%rax,8),%rax
   230db:	add    %rax,%r13
   230de:	mov    %esi,0x0(%r13)
   230e2:	lea    (%rdi,%r15,1),%rax
   230e6:	add    %r14,%rax
   230e9:	lea    0x4(%rcx,%rax,1),%rsi
   230ee:	mov    -0x38(%rbp),%rdi
   230f2:	callq  c950 <png_malloc_base>
   230f7:	mov    %rax,0x8(%r13)
   230fb:	test   %rax,%rax
   230fe:	je     23168 <png_set_text_2+0x378>
   23100:	mov    %rax,%rdi
   23103:	mov    0x8(%rbx,%r12,1),%rsi
   23108:	mov    %r15,%rdx
   2310b:	callq  54c0 <memcpy@plt>
   23110:	mov    0x8(%r13),%rax
   23114:	movb   $0x0,(%rax,%r15,1)
   23119:	movslq (%rbx,%r12,1),%rax
   2311d:	test   %eax,%eax
   2311f:	jg     23199 <png_set_text_2+0x3a9>
   23121:	movq   $0x0,0x28(%r13)
   23129:	movq   $0x0,0x30(%r13)
   23131:	mov    0x8(%r13),%rax
   23135:	lea    0x1(%rax,%r15,1),%rdi
   2313a:	jmpq   231ec <png_set_text_2+0x3fc>
   2313f:	mov    %r15,%r14
   23142:	mov    %rax,%r15
   23145:	callq  5260 <strlen@plt>
   2314a:	mov    %r14,%rcx
   2314d:	mov    %rax,%r14
   23150:	mov    %rcx,%rax
   23153:	mov    0x30(%rbx,%r12,1),%rdi
   23158:	test   %rdi,%rdi
   2315b:	jne    23225 <png_set_text_2+0x435>
   23161:	xor    %ecx,%ecx
   23163:	jmpq   23040 <png_set_text_2+0x250>
   23168:	lea    0xc22f(%rip),%rsi        # 2f39e <chunks_to_ignore.46+0x141>
   2316f:	mov    $0x1,%ebx
   23174:	mov    %rbx,%rdx
   23177:	mov    -0x38(%rbp),%rdi
   2317b:	callq  b140 <png_chunk_report>
   23180:	mov    %rbx,%rax
   23183:	mov    -0x10(%rbp),%r12
   23187:	mov    -0x8(%rbp),%rbx
   2318b:	mov    -0x28(%rbp),%r15
   2318f:	mov    -0x20(%rbp),%r14
   23193:	mov    -0x18(%rbp),%r13
   23197:	leaveq 
   23198:	retq   
   23199:	mov    0x8(%r13),%rax
   2319d:	lea    0x1(%rax,%r15,1),%rdi
   231a2:	mov    %rdi,0x28(%r13)
   231a6:	mov    0x28(%rbx,%r12,1),%rsi
   231ab:	mov    %r14,%rdx
   231ae:	callq  54c0 <memcpy@plt>
   231b3:	mov    0x28(%r13),%rax
   231b7:	movb   $0x0,(%rax,%r14,1)
   231bc:	mov    0x28(%r13),%rax
   231c0:	lea    0x1(%rax,%r14,1),%rdi
   231c5:	mov    %rdi,0x30(%r13)
   231c9:	mov    0x30(%rbx,%r12,1),%rsi
   231ce:	mov    -0x40(%rbp),%r14
   231d2:	mov    %r14,%rdx
   231d5:	callq  54c0 <memcpy@plt>
   231da:	mov    0x30(%r13),%rax
   231de:	movb   $0x0,(%rax,%r14,1)
   231e3:	mov    0x30(%r13),%rax
   231e7:	lea    0x1(%rax,%r14,1),%rdi
   231ec:	mov    %rdi,0x10(%r13)
   231f0:	mov    -0x30(%rbp),%r14
   231f4:	test   %r14,%r14
   231f7:	je     23206 <png_set_text_2+0x416>
   231f9:	mov    0x10(%rbx,%r12,1),%rsi
   231fe:	mov    %r14,%rdx
   23201:	callq  54c0 <memcpy@plt>
   23206:	mov    0x10(%r13),%rax
   2320a:	movb   $0x0,(%rax,%r14,1)
   2320f:	movslq 0x0(%r13),%rax
   23213:	test   %eax,%eax
   23215:	jg     23240 <png_set_text_2+0x450>
   23217:	mov    %r14,0x18(%r13)
   2321b:	movq   $0x0,0x20(%r13)
   23223:	jmp    2324c <png_set_text_2+0x45c>
   23225:	mov    %r15,-0x48(%rbp)
   23229:	mov    %rax,%r15
   2322c:	callq  5260 <strlen@plt>
   23231:	mov    %rax,%rcx
   23234:	mov    %r15,%rax
   23237:	mov    -0x48(%rbp),%r15
   2323b:	jmpq   23040 <png_set_text_2+0x250>
   23240:	movq   $0x0,0x18(%r13)
   23248:	mov    %r14,0x20(%r13)
   2324c:	mov    -0x50(%rbp),%r12
   23250:	movslq 0x94(%r12),%rax
   23258:	add    $0x1,%eax
   2325b:	mov    %eax,0x94(%r12)
   23263:	mov    -0x60(%rbp),%r15
   23267:	mov    -0x38(%rbp),%r13
   2326b:	mov    -0x58(%rbp),%r14
   2326f:	mov    $0x1,%edx
   23274:	lea    0xc0fd(%rip),%rsi        # 2f378 <chunks_to_ignore.46+0x11b>
   2327b:	jmpq   22ea6 <png_set_text_2+0xb6>

0000000000023280 <png_check_keyword>:
   23280:	push   %rbp
   23281:	mov    %rsp,%rbp
   23284:	sub    $0x120,%rsp
   2328b:	xor    %r9d,%r9d
   2328e:	test   %rsi,%rsi
   23291:	je     232a8 <png_check_keyword+0x28>
   23293:	mov    $0x1,%r11d
   23299:	mov    %rsi,-0x8(%rbp)
   2329d:	mov    %r9,%rax
   232a0:	mov    %rax,%rcx
   232a3:	mov    %r11,%r10
   232a6:	jmp    232d2 <png_check_keyword+0x52>
   232a8:	movb   $0x0,(%rdx)
   232ab:	mov    %r9,%rax
   232ae:	leaveq 
   232af:	retq   
   232b0:	cmp    $0x4e,%eax
   232b3:	ja     232db <png_check_keyword+0x5b>
   232b5:	add    $0x1,%rsi
   232b9:	cmp    $0x20,%r8b
   232bd:	ja     232ee <png_check_keyword+0x6e>
   232bf:	cmp    $0xa0,%r8b
   232c3:	jbe    232f6 <png_check_keyword+0x76>
   232c5:	mov    %r8b,(%rdx)
   232c8:	add    $0x1,%rdx
   232cc:	add    $0x1,%eax
   232cf:	mov    %r9,%r10
   232d2:	movsbq (%rsi),%r8
   232d6:	test   %r8b,%r8b
   232d9:	jne    232b0 <png_check_keyword+0x30>
   232db:	test   %eax,%eax
   232dd:	jne    23305 <png_check_keyword+0x85>
   232df:	mov    %r9,%rax
   232e2:	movb   $0x0,(%rdx)
   232e5:	test   %eax,%eax
   232e7:	jne    2331c <png_check_keyword+0x9c>
   232e9:	mov    %r9,%rax
   232ec:	leaveq 
   232ed:	retq   
   232ee:	cmp    $0x7e,%r8b
   232f2:	jbe    232c5 <png_check_keyword+0x45>
   232f4:	jmp    232bf <png_check_keyword+0x3f>
   232f6:	test   %r10d,%r10d
   232f9:	je     2332a <png_check_keyword+0xaa>
   232fb:	test   %ecx,%ecx
   232fd:	jne    232d2 <png_check_keyword+0x52>
   232ff:	movzbl %r8b,%ecx
   23303:	jmp    232d2 <png_check_keyword+0x52>
   23305:	test   %r10d,%r10d
   23308:	jle    232e2 <png_check_keyword+0x62>
   2330a:	add    $0xffffffffffffffff,%rdx
   2330e:	add    $0xffffffff,%eax
   23311:	test   %ecx,%ecx
   23313:	jne    232e2 <png_check_keyword+0x62>
   23315:	mov    $0x20,%ecx
   2331a:	jmp    232e2 <png_check_keyword+0x62>
   2331c:	movsbq (%rsi),%rdx
   23320:	test   %dl,%dl
   23322:	jne    2333f <png_check_keyword+0xbf>
   23324:	test   %ecx,%ecx
   23326:	jg     23355 <png_check_keyword+0xd5>
   23328:	leaveq 
   23329:	retq   
   2332a:	movb   $0x20,(%rdx)
   2332d:	add    $0x1,%rdx
   23331:	add    $0x1,%eax
   23334:	cmp    $0x20,%r8b
   23338:	jne    233b9 <png_check_keyword+0x139>
   2333a:	mov    %r11,%r10
   2333d:	jmp    232d2 <png_check_keyword+0x52>
   2333f:	lea    0xc072(%rip),%rsi        # 2f3b8 <chunks_to_ignore.46+0x15b>
   23346:	mov    %rax,-0x20(%rbp)
   2334a:	callq  5390 <png_warning@plt>
   2334f:	mov    -0x20(%rbp),%rax
   23353:	leaveq 
   23354:	retq   
   23355:	lea    -0x120(%rbp),%r8
   2335c:	mov    %r14,-0x18(%rbp)
   23360:	mov    %r15,-0x20(%rbp)
   23364:	mov    %rax,-0x10(%rbp)
   23368:	mov    %r11,%rsi
   2336b:	mov    %rdi,%r14
   2336e:	mov    %r8,%rdi
   23371:	mov    %rcx,%r15
   23374:	mov    -0x8(%rbp),%rdx
   23378:	callq  af30 <png_warning_parameter>
   2337d:	mov    %r15,%rcx
   23380:	mov    $0x2,%esi
   23385:	mov    $0x4,%edx
   2338a:	lea    -0x120(%rbp),%r15
   23391:	mov    %r15,%rdi
   23394:	callq  afa0 <png_warning_parameter_signed>
   23399:	mov    %r15,%rsi
   2339c:	mov    %r14,%rdi
   2339f:	lea    0xc024(%rip),%rdx        # 2f3ca <chunks_to_ignore.46+0x16d>
   233a6:	callq  b020 <png_formatted_warning>
   233ab:	mov    -0x10(%rbp),%rax
   233af:	mov    -0x20(%rbp),%r15
   233b3:	mov    -0x18(%rbp),%r14
   233b7:	leaveq 
   233b8:	retq   
   233b9:	movzbl %r8b,%ecx
   233bd:	mov    %r11,%r10
   233c0:	jmpq   232d2 <png_check_keyword+0x52>
   233c5:	data16 nopw %cs:0x0(%rax,%rax,1)

00000000000233d0 <check_location>:
   233d0:	push   %rbp
   233d1:	mov    %rsp,%rbp
   233d4:	sub    $0x10,%rsp
   233d8:	and    $0xb,%esi
   233db:	test   %esi,%esi
   233dd:	je     233ef <check_location+0x1f>
   233df:	test   %esi,%esi
   233e1:	jne    23407 <check_location+0x37>
   233e3:	lea    0xc037(%rip),%rsi        # 2f421 <chunks_to_ignore.46+0x1c4>
   233ea:	callq  5470 <png_error@plt>
   233ef:	mov    0x12c(%rdi),%eax
   233f5:	and    $0x8000,%eax
   233fa:	test   %eax,%eax
   233fc:	je     23417 <check_location+0x47>
   233fe:	xor    %esi,%esi
   23400:	jmp    233df <check_location+0xf>
   23402:	lea    -0x1(%rsi),%eax
   23405:	and    %eax,%esi
   23407:	mov    %rsi,%rax
   2340a:	neg    %eax
   2340c:	and    %esi,%eax
   2340e:	cmp    %esi,%eax
   23410:	jne    23402 <check_location+0x32>
   23412:	mov    %rsi,%rax
   23415:	leaveq 
   23416:	retq   
   23417:	lea    0xbfcf(%rip),%rsi        # 2f3ed <chunks_to_ignore.46+0x190>
   2341e:	mov    %rdi,%rax
   23421:	mov    %r15,-0x8(%rbp)
   23425:	mov    %rdi,%r15
   23428:	mov    %rax,%rdi
   2342b:	callq  b100 <png_app_warning>
   23430:	movzbl 0x12c(%r15),%eax
   23438:	and    $0xb,%al
   2343a:	movzbl %al,%esi
   2343d:	mov    %r15,%rdi
   23440:	mov    -0x8(%rbp),%r15
   23444:	jmp    233df <check_location+0xf>
   23446:	nopw   %cs:0x0(%rax,%rax,1)

0000000000023450 <add_one_chunk>:
   23450:	push   %rbp
   23451:	mov    %rsp,%rbp
   23454:	sub    $0x30,%rsp
   23458:	mov    %rcx,-0x30(%rbp)
   2345c:	mov    %rbx,-0x8(%rbp)
   23460:	mov    %r12,-0x10(%rbp)
   23464:	mov    %r13,-0x18(%rbp)
   23468:	mov    %r14,-0x20(%rbp)
   2346c:	mov    %r15,-0x28(%rbp)
   23470:	mov    %rsi,%rbx
   23473:	mov    %rdi,%r12
   23476:	mov    %rdx,%r13
   23479:	mov    $0x4,%r14d
   2347f:	xor    %r15d,%r15d
   23482:	jmp    2349e <add_one_chunk+0x4e>
   23484:	mov    %r12,%rdi
   23487:	mov    %r13,%rsi
   2348a:	mov    %r14,%rdx
   2348d:	callq  53d0 <memcmp@plt>
   23492:	test   %eax,%eax
   23494:	je     234c5 <add_one_chunk+0x75>
   23496:	add    $0x5,%r12
   2349a:	add    $0x1,%r15d
   2349e:	cmp    %ebx,%r15d
   234a1:	jb     23484 <add_one_chunk+0x34>
   234a3:	mov    -0x30(%rbp),%r15
   234a7:	test   %r15d,%r15d
   234aa:	jne    234e7 <add_one_chunk+0x97>
   234ac:	mov    %rbx,%rax
   234af:	mov    -0x28(%rbp),%r15
   234b3:	mov    -0x20(%rbp),%r14
   234b7:	mov    -0x18(%rbp),%r13
   234bb:	mov    -0x10(%rbp),%r12
   234bf:	mov    -0x8(%rbp),%rbx
   234c3:	leaveq 
   234c4:	retq   
   234c5:	mov    -0x30(%rbp),%rax
   234c9:	mov    %al,0x4(%r12)
   234ce:	mov    %rbx,%rax
   234d1:	mov    -0x28(%rbp),%r15
   234d5:	mov    -0x20(%rbp),%r14
   234d9:	mov    -0x18(%rbp),%r13
   234dd:	mov    -0x10(%rbp),%r12
   234e1:	mov    -0x8(%rbp),%rbx
   234e5:	leaveq 
   234e6:	retq   
   234e7:	mov    %r14,%rdx
   234ea:	mov    %r13,%rsi
   234ed:	mov    %r12,%rdi
   234f0:	callq  54c0 <memcpy@plt>
   234f5:	mov    %r15b,0x4(%r12)
   234fa:	lea    0x1(%rbx),%eax
   234fd:	mov    -0x28(%rbp),%r15
   23501:	mov    -0x20(%rbp),%r14
   23505:	mov    -0x18(%rbp),%r13
   23509:	mov    -0x10(%rbp),%r12
   2350d:	mov    -0x8(%rbp),%rbx
   23511:	leaveq 
   23512:	retq   
   23513:	nopw   %cs:0x0(%rax,%rax,1)
   2351d:	nopl   (%rax)

0000000000023520 <png_set_bgr>:
   23520:	push   %rbp
   23521:	mov    %rsp,%rbp
   23524:	test   %rdi,%rdi
   23527:	jne    2352b <png_set_bgr+0xb>
   23529:	leaveq 
   2352a:	retq   
   2352b:	mov    0x134(%rdi),%eax
   23531:	or     $0x1,%eax
   23534:	mov    %eax,0x134(%rdi)
   2353a:	leaveq 
   2353b:	retq   
   2353c:	nopl   0x0(%rax)

0000000000023540 <png_set_swap_alpha>:
   23540:	push   %rbp
   23541:	mov    %rsp,%rbp
   23544:	test   %rdi,%rdi
   23547:	jne    2354b <png_set_swap_alpha+0xb>
   23549:	leaveq 
   2354a:	retq   
   2354b:	mov    0x134(%rdi),%eax
   23551:	or     $0x20000,%eax
   23556:	mov    %eax,0x134(%rdi)
   2355c:	leaveq 
   2355d:	retq   
   2355e:	xchg   %ax,%ax

0000000000023560 <png_set_invert_alpha>:
   23560:	push   %rbp
   23561:	mov    %rsp,%rbp
   23564:	test   %rdi,%rdi
   23567:	jne    2356b <png_set_invert_alpha+0xb>
   23569:	leaveq 
   2356a:	retq   
   2356b:	mov    0x134(%rdi),%eax
   23571:	or     $0x80000,%eax
   23576:	mov    %eax,0x134(%rdi)
   2357c:	leaveq 
   2357d:	retq   
   2357e:	xchg   %ax,%ax

0000000000023580 <png_set_filler>:
   23580:	push   %rbp
   23581:	mov    %rsp,%rbp
   23584:	test   %rdi,%rdi
   23587:	jne    2358b <png_set_filler+0xb>
   23589:	leaveq 
   2358a:	retq   
   2358b:	mov    0x12c(%rdi),%eax
   23591:	and    $0x8000,%eax
   23596:	test   %eax,%eax
   23598:	jne    235b7 <png_set_filler+0x37>
   2359a:	movzbl 0x267(%rdi),%eax
   235a1:	test   %al,%al
   235a3:	je     235e7 <png_set_filler+0x67>
   235a5:	cmp    $0x2,%al
   235a7:	je     23600 <png_set_filler+0x80>
   235a9:	lea    0xc1d4(%rip),%rsi        # 2f784 <fourbppswaptable+0x138>
   235b0:	callq  b120 <png_app_error>
   235b5:	leaveq 
   235b6:	retq   
   235b7:	mov    %si,0x272(%rdi)
   235be:	mov    0x134(%rdi),%eax
   235c4:	or     $0x8000,%eax
   235c9:	mov    %eax,0x134(%rdi)
   235cf:	cmp    $0x1,%edx
   235d2:	je     23609 <png_set_filler+0x89>
   235d4:	mov    0x130(%rdi),%eax
   235da:	and    $0xffffff7f,%eax
   235df:	mov    %eax,0x130(%rdi)
   235e5:	leaveq 
   235e6:	retq   
   235e7:	movzbl 0x268(%rdi),%eax
   235ee:	cmp    $0x7,%al
   235f0:	ja     2361c <png_set_filler+0x9c>
   235f2:	lea    0xc153(%rip),%rsi        # 2f74c <fourbppswaptable+0x100>
   235f9:	callq  b120 <png_app_error>
   235fe:	leaveq 
   235ff:	retq   
   23600:	movb   $0x4,0x26c(%rdi)
   23607:	jmp    235be <png_set_filler+0x3e>
   23609:	mov    0x130(%rdi),%eax
   2360f:	or     $0x80,%eax
   23614:	mov    %eax,0x130(%rdi)
   2361a:	leaveq 
   2361b:	retq   
   2361c:	movb   $0x2,0x26c(%rdi)
   23623:	jmp    235be <png_set_filler+0x3e>
   23625:	data16 nopw %cs:0x0(%rax,%rax,1)

0000000000023630 <png_set_add_alpha>:
   23630:	push   %rbp
   23631:	mov    %rsp,%rbp
   23634:	sub    $0x10,%rsp
   23638:	test   %rdi,%rdi
   2363b:	jne    2363f <png_set_add_alpha+0xf>
   2363d:	leaveq 
   2363e:	retq   
   2363f:	mov    %rdi,%rax
   23642:	mov    %r15,-0x8(%rbp)
   23646:	mov    %rdi,%r15
   23649:	mov    %rax,%rdi
   2364c:	callq  5200 <png_set_filler@plt>
   23651:	mov    0x134(%r15),%eax
   23658:	mov    %rax,%rcx
   2365b:	and    $0x8000,%ecx
   23661:	test   %ecx,%ecx
   23663:	jne    2366b <png_set_add_alpha+0x3b>
   23665:	mov    -0x8(%rbp),%r15
   23669:	leaveq 
   2366a:	retq   
   2366b:	or     $0x1000000,%eax
   23670:	mov    %eax,0x134(%r15)
   23677:	mov    -0x8(%rbp),%r15
   2367b:	leaveq 
   2367c:	retq   
   2367d:	nopl   (%rax)

0000000000023680 <png_set_swap>:
   23680:	push   %rbp
   23681:	mov    %rsp,%rbp
   23684:	test   %rdi,%rdi
   23687:	jne    2368b <png_set_swap+0xb>
   23689:	leaveq 
   2368a:	retq   
   2368b:	movzbl 0x268(%rdi),%eax
   23692:	cmp    $0x10,%al
   23694:	je     23698 <png_set_swap+0x18>
   23696:	leaveq 
   23697:	retq   
   23698:	mov    0x134(%rdi),%eax
   2369e:	or     $0x10,%eax
   236a1:	mov    %eax,0x134(%rdi)
   236a7:	leaveq 
   236a8:	retq   
   236a9:	nopl   0x0(%rax)

00000000000236b0 <png_set_packing>:
   236b0:	push   %rbp
   236b1:	mov    %rsp,%rbp
   236b4:	test   %rdi,%rdi
   236b7:	jne    236bb <png_set_packing+0xb>
   236b9:	leaveq 
   236ba:	retq   
   236bb:	movzbl 0x268(%rdi),%eax
   236c2:	cmp    $0x7,%al
   236c4:	jbe    236c8 <png_set_packing+0x18>
   236c6:	leaveq 
   236c7:	retq   
   236c8:	mov    0x134(%rdi),%eax
   236ce:	or     $0x4,%eax
   236d1:	mov    %eax,0x134(%rdi)
   236d7:	movb   $0x8,0x269(%rdi)
   236de:	leaveq 
   236df:	retq   

00000000000236e0 <png_set_packswap>:
   236e0:	push   %rbp
   236e1:	mov    %rsp,%rbp
   236e4:	test   %rdi,%rdi
   236e7:	jne    236eb <png_set_packswap+0xb>
   236e9:	leaveq 
   236ea:	retq   
   236eb:	movzbl 0x268(%rdi),%eax
   236f2:	cmp    $0x7,%al
   236f4:	jbe    236f8 <png_set_packswap+0x18>
   236f6:	leaveq 
   236f7:	retq   
   236f8:	mov    0x134(%rdi),%eax
   236fe:	or     $0x10000,%eax
   23703:	mov    %eax,0x134(%rdi)
   23709:	leaveq 
   2370a:	retq   
   2370b:	nopl   0x0(%rax,%rax,1)

0000000000023710 <png_set_shift>:
   23710:	push   %rbp
   23711:	mov    %rsp,%rbp
   23714:	test   %rdi,%rdi
   23717:	jne    2371b <png_set_shift+0xb>
   23719:	leaveq 
   2371a:	retq   
   2371b:	mov    0x134(%rdi),%eax
   23721:	or     $0x8,%eax
   23724:	mov    %eax,0x134(%rdi)
   2372a:	mov    (%rsi),%eax
   2372c:	mov    %eax,0x2dd(%rdi)
   23732:	movzbl 0x4(%rsi),%eax
   23736:	mov    %al,0x2e1(%rdi)
   2373c:	leaveq 
   2373d:	retq   
   2373e:	xchg   %ax,%ax

0000000000023740 <png_set_interlace_handling>:
   23740:	push   %rbp
   23741:	mov    %rsp,%rbp
   23744:	mov    $0x1,%eax
   23749:	test   %rdi,%rdi
   2374c:	jne    23750 <png_set_interlace_handling+0x10>
   2374e:	leaveq 
   2374f:	retq   
   23750:	movzbl 0x264(%rdi),%ecx
   23757:	test   %cl,%cl
   23759:	jne    2375d <png_set_interlace_handling+0x1d>
   2375b:	leaveq 
   2375c:	retq   
   2375d:	mov    0x134(%rdi),%eax
   23763:	or     $0x2,%eax
   23766:	mov    %eax,0x134(%rdi)
   2376c:	mov    $0x7,%eax
   23771:	leaveq 
   23772:	retq   
   23773:	data16 nopw %cs:0x0(%rax,%rax,1)
   2377e:	xchg   %ax,%ax

0000000000023780 <png_set_invert_mono>:
   23780:	push   %rbp
   23781:	mov    %rsp,%rbp
   23784:	test   %rdi,%rdi
   23787:	jne    2378b <png_set_invert_mono+0xb>
   23789:	leaveq 
   2378a:	retq   
   2378b:	mov    0x134(%rdi),%eax
   23791:	or     $0x20,%eax
   23794:	mov    %eax,0x134(%rdi)
   2379a:	leaveq 
   2379b:	retq   
   2379c:	nopl   0x0(%rax)

00000000000237a0 <png_set_user_transform_info>:
   237a0:	push   %rbp
   237a1:	mov    %rsp,%rbp
   237a4:	test   %rdi,%rdi
   237a7:	jne    237ab <png_set_user_transform_info+0xb>
   237a9:	leaveq 
   237aa:	retq   
   237ab:	mov    0x12c(%rdi),%eax
   237b1:	and    $0x8000,%eax
   237b6:	test   %eax,%eax
   237b8:	jne    237cf <png_set_user_transform_info+0x2f>
   237ba:	mov    %rsi,0x120(%rdi)
   237c1:	mov    %dl,0x128(%rdi)
   237c7:	mov    %cl,0x129(%rdi)
   237cd:	leaveq 
   237ce:	retq   
   237cf:	mov    0x130(%rdi),%eax
   237d5:	and    $0x40,%eax
   237d8:	test   %eax,%eax
   237da:	je     237ba <png_set_user_transform_info+0x1a>
   237dc:	lea    0xbfca(%rip),%rsi        # 2f7ad <fourbppswaptable+0x161>
   237e3:	callq  b120 <png_app_error>
   237e8:	leaveq 
   237e9:	retq   
   237ea:	nopw   0x0(%rax,%rax,1)

00000000000237f0 <png_get_user_transform_ptr>:
   237f0:	push   %rbp
   237f1:	mov    %rsp,%rbp
   237f4:	test   %rdi,%rdi
   237f7:	jne    237fd <png_get_user_transform_ptr+0xd>
   237f9:	xor    %eax,%eax
   237fb:	leaveq 
   237fc:	retq   
   237fd:	mov    0x120(%rdi),%rax
   23804:	leaveq 
   23805:	retq   
   23806:	nopw   %cs:0x0(%rax,%rax,1)

0000000000023810 <png_get_current_row_number>:
   23810:	push   %rbp
   23811:	mov    %rsp,%rbp
   23814:	test   %rdi,%rdi
   23817:	jne    23820 <png_get_current_row_number+0x10>
   23819:	mov    $0xffffffff,%eax
   2381e:	leaveq 
   2381f:	retq   
   23820:	mov    0x214(%rdi),%eax
   23826:	leaveq 
   23827:	retq   
   23828:	nopl   0x0(%rax,%rax,1)

0000000000023830 <png_get_current_pass_number>:
   23830:	push   %rbp
   23831:	mov    %rsp,%rbp
   23834:	test   %rdi,%rdi
   23837:	jne    23840 <png_get_current_pass_number+0x10>
   23839:	mov    $0x8,%eax
   2383e:	leaveq 
   2383f:	retq   
   23840:	movzbl 0x265(%rdi),%eax
   23847:	leaveq 
   23848:	retq   
   23849:	nopl   0x0(%rax)

0000000000023850 <png_do_strip_channel>:
   23850:	push   %rbp
   23851:	mov    %rsp,%rbp
   23854:	mov    %rsi,%r8
   23857:	add    0x8(%rdi),%r8
   2385b:	movzbl 0x12(%rdi),%eax
   2385f:	cmp    $0x2,%al
   23861:	je     23869 <png_do_strip_channel+0x19>
   23863:	cmp    $0x4,%al
   23865:	je     23877 <png_do_strip_channel+0x27>
   23867:	leaveq 
   23868:	retq   
   23869:	movzbl 0x11(%rdi),%eax
   2386d:	cmp    $0x8,%al
   2386f:	je     23885 <png_do_strip_channel+0x35>
   23871:	cmp    $0x10,%al
   23873:	je     23893 <png_do_strip_channel+0x43>
   23875:	leaveq 
   23876:	retq   
   23877:	movzbl 0x11(%rdi),%eax
   2387b:	cmp    $0x8,%al
   2387d:	je     238a4 <png_do_strip_channel+0x54>
   2387f:	cmp    $0x10,%al
   23881:	je     238b9 <png_do_strip_channel+0x69>
   23883:	leaveq 
   23884:	retq   
   23885:	test   %edx,%edx
   23887:	jne    238ce <png_do_strip_channel+0x7e>
   23889:	lea    0x2(%rsi),%rcx
   2388d:	lea    0x1(%rsi),%rax
   23891:	jmp    238e4 <png_do_strip_channel+0x94>
   23893:	test   %edx,%edx
   23895:	jne    23907 <png_do_strip_channel+0xb7>
   23897:	lea    0x4(%rsi),%rcx
   2389b:	lea    0x2(%rsi),%rax
   2389f:	jmpq   23924 <png_do_strip_channel+0xd4>
   238a4:	test   %edx,%edx
   238a6:	jne    2392f <png_do_strip_channel+0xdf>
   238ac:	lea    0x4(%rsi),%rcx
   238b0:	lea    0x3(%rsi),%rax
   238b4:	jmpq   23953 <png_do_strip_channel+0x103>
   238b9:	test   %edx,%edx
   238bb:	jne    2396f <png_do_strip_channel+0x11f>
   238c1:	lea    0x8(%rsi),%rcx
   238c5:	lea    0x6(%rsi),%rax
   238c9:	jmpq   239a8 <png_do_strip_channel+0x158>
   238ce:	lea    0x1(%rsi),%rcx
   238d2:	mov    %rsi,%rax
   238d5:	jmp    238e4 <png_do_strip_channel+0x94>
   238d7:	movzbl (%rcx),%edx
   238da:	mov    %dl,(%rax)
   238dc:	add    $0x2,%rcx
   238e0:	add    $0x1,%rax
   238e4:	cmp    %rcx,%r8
   238e7:	ja     238d7 <png_do_strip_channel+0x87>
   238e9:	movb   $0x8,0x13(%rdi)
   238ed:	movb   $0x1,0x12(%rdi)
   238f1:	movzbl 0x10(%rdi),%ecx
   238f5:	cmp    $0x4,%cl
   238f8:	jne    238fe <png_do_strip_channel+0xae>
   238fa:	movb   $0x0,0x10(%rdi)
   238fe:	sub    %rsi,%rax
   23901:	mov    %rax,0x8(%rdi)
   23905:	leaveq 
   23906:	retq   
   23907:	lea    0x2(%rsi),%rcx
   2390b:	mov    %rsi,%rax
   2390e:	jmp    23924 <png_do_strip_channel+0xd4>
   23910:	movzbl (%rcx),%edx
   23913:	mov    %dl,(%rax)
   23915:	movzbl 0x1(%rcx),%edx
   23919:	mov    %dl,0x1(%rax)
   2391c:	add    $0x4,%rcx
   23920:	add    $0x2,%rax
   23924:	cmp    %rcx,%r8
   23927:	ja     23910 <png_do_strip_channel+0xc0>
   23929:	movb   $0x10,0x13(%rdi)
   2392d:	jmp    238ed <png_do_strip_channel+0x9d>
   2392f:	lea    0x1(%rsi),%rcx
   23933:	mov    %rsi,%rax
   23936:	jmp    23953 <png_do_strip_channel+0x103>
   23938:	movzbl (%rcx),%edx
   2393b:	mov    %dl,(%rax)
   2393d:	movzbl 0x1(%rcx),%edx
   23941:	mov    %dl,0x1(%rax)
   23944:	movzbl 0x2(%rcx),%edx
   23948:	mov    %dl,0x2(%rax)
   2394b:	add    $0x4,%rcx
   2394f:	add    $0x3,%rax
   23953:	cmp    %rcx,%r8
   23956:	ja     23938 <png_do_strip_channel+0xe8>
   23958:	movb   $0x18,0x13(%rdi)
   2395c:	movb   $0x3,0x12(%rdi)
   23960:	movzbl 0x10(%rdi),%ecx
   23964:	cmp    $0x6,%cl
   23967:	jne    238fe <png_do_strip_channel+0xae>
   23969:	movb   $0x2,0x10(%rdi)
   2396d:	jmp    238fe <png_do_strip_channel+0xae>
   2396f:	lea    0x2(%rsi),%rcx
   23973:	mov    %rsi,%rax
   23976:	jmp    239a8 <png_do_strip_channel+0x158>
   23978:	movzbl (%rcx),%edx
   2397b:	mov    %dl,(%rax)
   2397d:	movzbl 0x1(%rcx),%edx
   23981:	mov    %dl,0x1(%rax)
   23984:	movzbl 0x2(%rcx),%edx
   23988:	mov    %dl,0x2(%rax)
   2398b:	movzbl 0x3(%rcx),%edx
   2398f:	mov    %dl,0x3(%rax)
   23992:	movzbl 0x4(%rcx),%edx
   23996:	mov    %dl,0x4(%rax)
   23999:	movzbl 0x5(%rcx),%edx
   2399d:	mov    %dl,0x5(%rax)
   239a0:	add    $0x8,%rcx
   239a4:	add    $0x6,%rax
   239a8:	cmp    %r8,%rcx
   239ab:	jb     23978 <png_do_strip_channel+0x128>
   239ad:	movb   $0x30,0x13(%rdi)
   239b1:	jmp    2395c <png_do_strip_channel+0x10c>
   239b3:	data16 nopw %cs:0x0(%rax,%rax,1)
   239be:	xchg   %ax,%ax

00000000000239c0 <png_do_swap>:
   239c0:	push   %rbp
   239c1:	mov    %rsp,%rbp
   239c4:	movzbl 0x11(%rdi),%eax
   239c8:	cmp    $0x10,%al
   239ca:	je     239ce <png_do_swap+0xe>
   239cc:	leaveq 
   239cd:	retq   
   239ce:	movzbl 0x12(%rdi),%ecx
   239d2:	imul   (%rdi),%ecx
   239d5:	xor    %eax,%eax
   239d7:	jmp    239ed <png_do_swap+0x2d>
   239d9:	movzbl 0x1(%rsi),%edx
   239dd:	movzbl (%rsi),%edi
   239e0:	mov    %dl,(%rsi)
   239e2:	mov    %dil,0x1(%rsi)
   239e6:	add    $0x1,%eax
   239e9:	add    $0x2,%rsi
   239ed:	cmp    %ecx,%eax
   239ef:	jb     239d9 <png_do_swap+0x19>
   239f1:	leaveq 
   239f2:	retq   
   239f3:	data16 nopw %cs:0x0(%rax,%rax,1)
   239fe:	xchg   %ax,%ax

0000000000023a00 <png_do_packswap>:
   23a00:	push   %rbp
   23a01:	mov    %rsp,%rbp
   23a04:	movzbl 0x11(%rdi),%eax
   23a08:	cmp    $0x7,%al
   23a0a:	jbe    23a0e <png_do_packswap+0xe>
   23a0c:	leaveq 
   23a0d:	retq   
   23a0e:	mov    %rsi,%rdx
   23a11:	add    0x8(%rdi),%rdx
   23a15:	cmp    $0x1,%al
   23a17:	jne    23a22 <png_do_packswap+0x22>
   23a19:	lea    0xba2c(%rip),%rax        # 2f44c <onebppswaptable>
   23a20:	jmp    23a3c <png_do_packswap+0x3c>
   23a22:	cmp    $0x2,%al
   23a24:	jne    23a43 <png_do_packswap+0x43>
   23a26:	lea    0xbb1f(%rip),%rax        # 2f54c <twobppswaptable>
   23a2d:	jmp    23a3c <png_do_packswap+0x3c>
   23a2f:	movzbl (%rsi),%ecx
   23a32:	movzbl (%rax,%rcx,1),%ecx
   23a36:	mov    %cl,(%rsi)
   23a38:	add    $0x1,%rsi
   23a3c:	cmp    %rdx,%rsi
   23a3f:	jb     23a2f <png_do_packswap+0x2f>
   23a41:	leaveq 
   23a42:	retq   
   23a43:	cmp    $0x4,%al
   23a45:	jne    23a50 <png_do_packswap+0x50>
   23a47:	lea    0xbbfe(%rip),%rax        # 2f64c <fourbppswaptable>
   23a4e:	jmp    23a3c <png_do_packswap+0x3c>
   23a50:	leaveq 
   23a51:	retq   
   23a52:	data16 nopw %cs:0x0(%rax,%rax,1)
   23a5d:	nopl   (%rax)

0000000000023a60 <png_do_invert>:
   23a60:	push   %rbp
   23a61:	mov    %rsp,%rbp
   23a64:	xor    %eax,%eax
   23a66:	movzbl 0x10(%rdi),%ecx
   23a6a:	test   %cl,%cl
   23a6c:	je     23a7e <png_do_invert+0x1e>
   23a6e:	cmp    $0x4,%cl
   23a71:	je     23a84 <png_do_invert+0x24>
   23a73:	movzbl 0x10(%rdi),%ecx
   23a77:	cmp    $0x4,%cl
   23a7a:	je     23a93 <png_do_invert+0x33>
   23a7c:	leaveq 
   23a7d:	retq   
   23a7e:	mov    0x8(%rdi),%rdx
   23a82:	jmp    23aad <png_do_invert+0x4d>
   23a84:	movzbl 0x11(%rdi),%ecx
   23a88:	cmp    $0x8,%cl
   23a8b:	jne    23a73 <png_do_invert+0x13>
   23a8d:	mov    0x8(%rdi),%rdx
   23a91:	jmp    23ac3 <png_do_invert+0x63>
   23a93:	movzbl 0x11(%rdi),%ecx
   23a97:	cmp    $0x10,%cl
   23a9a:	je     23aca <png_do_invert+0x6a>
   23a9c:	leaveq 
   23a9d:	retq   
   23a9e:	movzbl (%rsi),%ecx
   23aa1:	not    %ecx
   23aa3:	mov    %cl,(%rsi)
   23aa5:	add    $0x1,%rax
   23aa9:	add    $0x1,%rsi
   23aad:	cmp    %rdx,%rax
   23ab0:	jb     23a9e <png_do_invert+0x3e>
   23ab2:	leaveq 
   23ab3:	retq   
   23ab4:	movzbl (%rsi),%ecx
   23ab7:	not    %ecx
   23ab9:	mov    %cl,(%rsi)
   23abb:	add    $0x2,%rax
   23abf:	add    $0x2,%rsi
   23ac3:	cmp    %rdx,%rax
   23ac6:	jb     23ab4 <png_do_invert+0x54>
   23ac8:	leaveq 
   23ac9:	retq   
   23aca:	mov    0x8(%rdi),%rdx
   23ace:	jmp    23ae8 <png_do_invert+0x88>
   23ad0:	movzbl (%rsi),%ecx
   23ad3:	not    %ecx
   23ad5:	mov    %cl,(%rsi)
   23ad7:	movzbl 0x1(%rsi),%ecx
   23adb:	not    %ecx
   23add:	mov    %cl,0x1(%rsi)
   23ae0:	add    $0x4,%rax
   23ae4:	add    $0x4,%rsi
   23ae8:	cmp    %rdx,%rax
   23aeb:	jb     23ad0 <png_do_invert+0x70>
   23aed:	leaveq 
   23aee:	retq   
   23aef:	nop

0000000000023af0 <png_do_bgr>:
   23af0:	push   %rbp
   23af1:	mov    %rsp,%rbp
   23af4:	movzbl 0x10(%rdi),%ecx
   23af8:	mov    %rcx,%rax
   23afb:	and    $0x2,%eax
   23afe:	test   %eax,%eax
   23b00:	jg     23b04 <png_do_bgr+0x14>
   23b02:	leaveq 
   23b03:	retq   
   23b04:	mov    (%rdi),%r8d
   23b07:	xor    %eax,%eax
   23b09:	movzbl 0x11(%rdi),%edx
   23b0d:	cmp    $0x8,%dl
   23b10:	je     23b19 <png_do_bgr+0x29>
   23b12:	cmp    $0x10,%dl
   23b15:	je     23b25 <png_do_bgr+0x35>
   23b17:	leaveq 
   23b18:	retq   
   23b19:	cmp    $0x2,%cl
   23b1c:	je     23b44 <png_do_bgr+0x54>
   23b1e:	cmp    $0x6,%cl
   23b21:	je     23b5e <png_do_bgr+0x6e>
   23b23:	leaveq 
   23b24:	retq   
   23b25:	cmp    $0x2,%cl
   23b28:	je     23b86 <png_do_bgr+0x96>
   23b2a:	cmp    $0x6,%cl
   23b2d:	je     23bae <png_do_bgr+0xbe>
   23b2f:	leaveq 
   23b30:	retq   
   23b31:	movzbl 0x2(%rsi),%edx
   23b35:	movzbl (%rsi),%ecx
   23b38:	mov    %dl,(%rsi)
   23b3a:	mov    %cl,0x2(%rsi)
   23b3d:	add    $0x1,%eax
   23b40:	add    $0x3,%rsi
   23b44:	cmp    %r8d,%eax
   23b47:	jb     23b31 <png_do_bgr+0x41>
   23b49:	leaveq 
   23b4a:	retq   
   23b4b:	movzbl 0x2(%rsi),%edx
   23b4f:	movzbl (%rsi),%ecx
   23b52:	mov    %dl,(%rsi)
   23b54:	mov    %cl,0x2(%rsi)
   23b57:	add    $0x1,%eax
   23b5a:	add    $0x4,%rsi
   23b5e:	cmp    %eax,%r8d
   23b61:	ja     23b4b <png_do_bgr+0x5b>
   23b63:	leaveq 
   23b64:	retq   
   23b65:	movzbl 0x4(%rsi),%edx
   23b69:	movzbl (%rsi),%ecx
   23b6c:	mov    %dl,(%rsi)
   23b6e:	mov    %cl,0x4(%rsi)
   23b71:	movzbl 0x5(%rsi),%ecx
   23b75:	movzbl 0x1(%rsi),%edx
   23b79:	mov    %cl,0x1(%rsi)
   23b7c:	mov    %dl,0x5(%rsi)
   23b7f:	add    $0x1,%eax
   23b82:	add    $0x6,%rsi
   23b86:	cmp    %eax,%r8d
   23b89:	ja     23b65 <png_do_bgr+0x75>
   23b8b:	leaveq 
   23b8c:	retq   
   23b8d:	movzbl 0x4(%rsi),%edx
   23b91:	movzbl (%rsi),%ecx
   23b94:	mov    %dl,(%rsi)
   23b96:	mov    %cl,0x4(%rsi)
   23b99:	movzbl 0x5(%rsi),%edx
   23b9d:	movzbl 0x1(%rsi),%ecx
   23ba1:	mov    %dl,0x1(%rsi)
   23ba4:	mov    %cl,0x5(%rsi)
   23ba7:	add    $0x1,%eax
   23baa:	add    $0x8,%rsi
   23bae:	cmp    %eax,%r8d
   23bb1:	ja     23b8d <png_do_bgr+0x9d>
   23bb3:	leaveq 
   23bb4:	retq   
   23bb5:	data16 nopw %cs:0x0(%rax,%rax,1)

0000000000023bc0 <png_do_check_palette_indexes>:
   23bc0:	push   %rbp
   23bc1:	mov    %rsp,%rbp
   23bc4:	mov    $0x1,%eax
   23bc9:	movzbl 0x11(%rsi),%ecx
   23bcd:	shl    %cl,%eax
   23bcf:	movzwl 0x258(%rdi),%ecx
   23bd6:	cmp    %ecx,%eax
   23bd8:	jg     23bdc <png_do_check_palette_indexes+0x1c>
   23bda:	leaveq 
   23bdb:	retq   
   23bdc:	test   %cx,%cx
   23bdf:	jne    23be3 <png_do_check_palette_indexes+0x23>
   23be1:	leaveq 
   23be2:	retq   
   23be3:	movzbl 0x13(%rsi),%eax
   23be7:	mov    (%rsi),%ecx
   23be9:	and    $0x7,%ecx
   23bec:	imul   %ecx,%eax
   23bef:	and    $0x7,%eax
   23bf2:	mov    $0x8,%ecx
   23bf7:	sub    %eax,%ecx
   23bf9:	and    $0x7,%ecx
   23bfc:	mov    0x8(%rsi),%rdx
   23c00:	mov    0x228(%rdi),%rax
   23c07:	lea    -0x1(%rdx,%rax,1),%rax
   23c0c:	xor    %edx,%edx
   23c0e:	movzbl 0x11(%rsi),%esi
   23c12:	cmp    $0x3,%sil
   23c16:	jbe    23c26 <png_do_check_palette_indexes+0x66>
   23c18:	cmp    $0x4,%sil
   23c1c:	je     23c73 <png_do_check_palette_indexes+0xb3>
   23c1e:	cmp    $0x8,%sil
   23c22:	je     23c99 <png_do_check_palette_indexes+0xd9>
   23c24:	leaveq 
   23c25:	retq   
   23c26:	cmp    $0x1,%sil
   23c2a:	je     23cc1 <png_do_check_palette_indexes+0x101>
   23c30:	cmp    $0x2,%sil
   23c34:	je     23d40 <png_do_check_palette_indexes+0x180>
   23c3a:	leaveq 
   23c3b:	retq   
   23c3c:	movzbl (%rax),%esi
   23c3f:	shr    %cl,%esi
   23c41:	and    $0xf,%esi
   23c44:	movslq 0x25c(%rdi),%r8
   23c4b:	cmp    %esi,%r8d
   23c4e:	jge    23c56 <png_do_check_palette_indexes+0x96>
   23c50:	mov    %esi,0x25c(%rdi)
   23c56:	movzbl (%rax),%esi
   23c59:	shr    %cl,%esi
   23c5b:	shr    $0x4,%esi
   23c5e:	cmp    0x25c(%rdi),%esi
   23c64:	jle    23c6c <png_do_check_palette_indexes+0xac>
   23c66:	mov    %esi,0x25c(%rdi)
   23c6c:	add    $0xffffffffffffffff,%rax
   23c70:	mov    %rdx,%rcx
   23c73:	mov    0x228(%rdi),%rsi
   23c7a:	cmp    %rax,%rsi
   23c7d:	jb     23c3c <png_do_check_palette_indexes+0x7c>
   23c7f:	leaveq 
   23c80:	retq   
   23c81:	movzbl (%rax),%ecx
   23c84:	movslq 0x25c(%rdi),%rdx
   23c8b:	cmp    %ecx,%edx
   23c8d:	jge    23c95 <png_do_check_palette_indexes+0xd5>
   23c8f:	mov    %ecx,0x25c(%rdi)
   23c95:	add    $0xffffffffffffffff,%rax
   23c99:	mov    0x228(%rdi),%rcx
   23ca0:	cmp    %rax,%rcx
   23ca3:	jb     23c81 <png_do_check_palette_indexes+0xc1>
   23ca5:	leaveq 
   23ca6:	retq   
   23ca7:	movzbl (%rax),%esi
   23caa:	shr    %cl,%esi
   23cac:	test   %esi,%esi
   23cae:	jle    23cba <png_do_check_palette_indexes+0xfa>
   23cb0:	movl   $0x1,0x25c(%rdi)
   23cba:	add    $0xffffffffffffffff,%rax
   23cbe:	mov    %rdx,%rcx
   23cc1:	mov    0x228(%rdi),%rsi
   23cc8:	cmp    %rax,%rsi
   23ccb:	jb     23ca7 <png_do_check_palette_indexes+0xe7>
   23ccd:	leaveq 
   23cce:	retq   
   23ccf:	movzbl (%rax),%esi
   23cd2:	shr    %cl,%esi
   23cd4:	and    $0x3,%esi
   23cd7:	movslq 0x25c(%rdi),%r8
   23cde:	cmp    %esi,%r8d
   23ce1:	jge    23ce9 <png_do_check_palette_indexes+0x129>
   23ce3:	mov    %esi,0x25c(%rdi)
   23ce9:	movzbl (%rax),%esi
   23cec:	shr    %cl,%esi
   23cee:	and    $0xc,%esi
   23cf1:	shr    $0x2,%esi
   23cf4:	movslq 0x25c(%rdi),%r8
   23cfb:	cmp    %esi,%r8d
   23cfe:	jge    23d06 <png_do_check_palette_indexes+0x146>
   23d00:	mov    %esi,0x25c(%rdi)
   23d06:	movzbl (%rax),%esi
   23d09:	shr    %cl,%esi
   23d0b:	and    $0x30,%esi
   23d0e:	shr    $0x4,%esi
   23d11:	movslq 0x25c(%rdi),%r8
   23d18:	cmp    %esi,%r8d
   23d1b:	jge    23d23 <png_do_check_palette_indexes+0x163>
   23d1d:	mov    %esi,0x25c(%rdi)
   23d23:	movzbl (%rax),%esi
   23d26:	shr    %cl,%esi
   23d28:	shr    $0x6,%esi
   23d2b:	cmp    0x25c(%rdi),%esi
   23d31:	jle    23d39 <png_do_check_palette_indexes+0x179>
   23d33:	mov    %esi,0x25c(%rdi)
   23d39:	add    $0xffffffffffffffff,%rax
   23d3d:	mov    %rdx,%rcx
   23d40:	mov    0x228(%rdi),%rsi
   23d47:	cmp    %rax,%rsi
   23d4a:	jb     23ccf <png_do_check_palette_indexes+0x10f>
   23d4c:	leaveq 
   23d4d:	retq   
   23d4e:	xchg   %ax,%ax

0000000000023d50 <png_set_write_fn>:
   23d50:	push   %rbp
   23d51:	mov    %rsp,%rbp
   23d54:	test   %rdi,%rdi
   23d57:	jne    23d5b <png_set_write_fn+0xb>
   23d59:	leaveq 
   23d5a:	retq   
   23d5b:	mov    %rsi,0x108(%rdi)
   23d62:	test   %rdx,%rdx
   23d65:	jne    23d77 <png_set_write_fn+0x27>
   23d67:	lea    0x62(%rip),%rax        # 23dd0 <png_default_write_data>
   23d6e:	mov    %rax,0xf8(%rdi)
   23d75:	jmp    23d7e <png_set_write_fn+0x2e>
   23d77:	mov    %rdx,0xf8(%rdi)
   23d7e:	test   %rcx,%rcx
   23d81:	jne    23d93 <png_set_write_fn+0x43>
   23d83:	lea    0xa6(%rip),%rax        # 23e30 <png_default_flush>
   23d8a:	mov    %rax,0x290(%rdi)
   23d91:	jmp    23d9a <png_set_write_fn+0x4a>
   23d93:	mov    %rcx,0x290(%rdi)
   23d9a:	mov    0x100(%rdi),%rax
   23da1:	test   %rax,%rax
   23da4:	jne    23da8 <png_set_write_fn+0x58>
   23da6:	leaveq 
   23da7:	retq   
   23da8:	movq   $0x0,0x100(%rdi)
   23db3:	lea    0xba32(%rip),%rsi        # 2f7ec <fourbppswaptable+0x1a0>
   23dba:	callq  5390 <png_warning@plt>
   23dbf:	leaveq 
   23dc0:	retq   
   23dc1:	data16 nopw %cs:0x0(%rax,%rax,1)
   23dcc:	nopl   0x0(%rax)

0000000000023dd0 <png_default_write_data>:
   23dd0:	push   %rbp
   23dd1:	mov    %rsp,%rbp
   23dd4:	sub    $0x10,%rsp
   23dd8:	test   %rdi,%rdi
   23ddb:	jne    23ddf <png_default_write_data+0xf>
   23ddd:	leaveq 
   23dde:	retq   
   23ddf:	mov    $0x1,%eax
   23de4:	mov    0x108(%rdi),%rcx
   23deb:	mov    %rdx,%r8
   23dee:	mov    %r15,-0x10(%rbp)
   23df2:	mov    %rdi,-0x8(%rbp)
   23df6:	mov    %rsi,%rdi
   23df9:	mov    %rax,%rsi
   23dfc:	mov    %rdx,%r15
   23dff:	mov    %r8,%rdx
   23e02:	callq  5840 <fwrite@plt>
   23e07:	cmp    %r15,%rax
   23e0a:	jne    23e12 <png_default_write_data+0x42>
   23e0c:	mov    -0x10(%rbp),%r15
   23e10:	leaveq 
   23e11:	retq   
   23e12:	lea    0xba17(%rip),%rsi        # 2f830 <fourbppswaptable+0x1e4>
   23e19:	mov    -0x8(%rbp),%rdi
   23e1d:	callq  5470 <png_error@plt>
   23e22:	data16 nopw %cs:0x0(%rax,%rax,1)
   23e2d:	nopl   (%rax)

0000000000023e30 <png_default_flush>:
   23e30:	push   %rbp
   23e31:	mov    %rsp,%rbp
   23e34:	test   %rdi,%rdi
   23e37:	jne    23e3b <png_default_flush+0xb>
   23e39:	leaveq 
   23e3a:	retq   
   23e3b:	mov    0x108(%rdi),%rdi
   23e42:	callq  55d0 <fflush@plt>
   23e47:	leaveq 
   23e48:	retq   
   23e49:	nopl   0x0(%rax)

0000000000023e50 <png_write_data>:
   23e50:	push   %rbp
   23e51:	mov    %rsp,%rbp
   23e54:	mov    0xf8(%rdi),%rax
   23e5b:	test   %rax,%rax
   23e5e:	jne    23e6c <png_write_data+0x1c>
   23e60:	lea    0xb9d5(%rip),%rsi        # 2f83c <fourbppswaptable+0x1f0>
   23e67:	callq  5470 <png_error@plt>
   23e6c:	callq  *%rax
   23e6e:	leaveq 
   23e6f:	retq   

0000000000023e70 <png_flush>:
   23e70:	push   %rbp
   23e71:	mov    %rsp,%rbp
   23e74:	mov    0x290(%rdi),%rax
   23e7b:	test   %rax,%rax
   23e7e:	jne    23e82 <png_flush+0x12>
   23e80:	leaveq 
   23e81:	retq   
   23e82:	callq  *%rax
   23e84:	leaveq 
   23e85:	retq   
   23e86:	nopw   %cs:0x0(%rax,%rax,1)

0000000000023e90 <png_create_write_struct>:
   23e90:	push   %rbp
   23e91:	mov    %rsp,%rbp
   23e94:	sub    $0x10,%rsp
   23e98:	movq   $0x0,(%rsp)
   23ea0:	xor    %r8d,%r8d
   23ea3:	mov    %r8,%r9
   23ea6:	callq  56c0 <png_create_write_struct_2@plt>
   23eab:	leaveq 
   23eac:	retq   
   23ead:	nopl   (%rax)

0000000000023eb0 <png_create_write_struct_2>:
   23eb0:	push   %rbp
   23eb1:	mov    %rsp,%rbp
   23eb4:	sub    $0x10,%rsp
   23eb8:	mov    0x10(%rbp),%rax
   23ebc:	mov    %rax,(%rsp)
   23ec0:	callq  6b90 <png_create_png_struct>
   23ec5:	test   %rax,%rax
   23ec8:	jne    23ecc <png_create_write_struct_2+0x1c>
   23eca:	leaveq 
   23ecb:	retq   
   23ecc:	movl   $0x2000,0x1b8(%rax)
   23ed6:	movl   $0x1,0x1cc(%rax)
   23ee0:	movl   $0xffffffff,0x1bc(%rax)
   23eea:	movl   $0x8,0x1c8(%rax)
   23ef4:	movl   $0xf,0x1c4(%rax)
   23efe:	movl   $0x8,0x1c0(%rax)
   23f08:	movl   $0x0,0x1e0(%rax)
   23f12:	movl   $0xffffffff,0x1d0(%rax)
   23f1c:	movl   $0x8,0x1dc(%rax)
   23f26:	movl   $0xf,0x1d8(%rax)
   23f30:	movl   $0x8,0x1d4(%rax)
   23f3a:	mov    0x130(%rax),%ecx
   23f40:	or     $0x200000,%ecx
   23f46:	mov    %ecx,0x130(%rax)
   23f4c:	xor    %esi,%esi
   23f4e:	mov    %rsi,%rdx
   23f51:	mov    %rsi,%rcx
   23f54:	mov    %rax,%rdi
   23f57:	mov    %r15,-0x8(%rbp)
   23f5b:	mov    %rax,%r15
   23f5e:	callq  5300 <png_set_write_fn@plt>
   23f63:	mov    %r15,%rax
   23f66:	mov    -0x8(%rbp),%r15
   23f6a:	leaveq 
   23f6b:	retq   
   23f6c:	nopl   0x0(%rax)

0000000000023f70 <png_write_info_before_PLTE>:
   23f70:	push   %rbp
   23f71:	mov    %rsp,%rbp
   23f74:	sub    $0x10,%rsp
   23f78:	test   %rdi,%rdi
   23f7b:	jne    23f7f <png_write_info_before_PLTE+0xf>
   23f7d:	leaveq 
   23f7e:	retq   
   23f7f:	test   %rsi,%rsi
   23f82:	jne    23f86 <png_write_info_before_PLTE+0x16>
   23f84:	leaveq 
   23f85:	retq   
   23f86:	mov    0x12c(%rdi),%eax
   23f8c:	and    $0x400,%eax
   23f91:	test   %eax,%eax
   23f93:	je     23f97 <png_write_info_before_PLTE+0x27>
   23f95:	leaveq 
   23f96:	retq   
   23f97:	mov    %rdi,%rax
   23f9a:	mov    %r14,-0x8(%rbp)
   23f9e:	mov    %r15,-0x10(%rbp)
   23fa2:	mov    %rdi,%r14
   23fa5:	mov    %rax,%rdi
   23fa8:	mov    %rsi,%r15
   23fab:	callq  5140 <png_write_sig@plt>
   23fb0:	mov    0x12c(%r14),%eax
   23fb7:	and    $0x1000,%eax
   23fbc:	test   %eax,%eax
   23fbe:	jne    24097 <png_write_info_before_PLTE+0x127>
   23fc4:	sub    $0x10,%rsp
   23fc8:	movzbl 0x27(%r15),%edi
   23fcd:	movzbl 0x28(%r15),%eax
   23fd2:	mov    (%r15),%esi
   23fd5:	mov    0x4(%r15),%edx
   23fd9:	movzbl 0x24(%r15),%ecx
   23fde:	movzbl 0x25(%r15),%r8d
   23fe3:	movzbl 0x26(%r15),%r9d
   23fe8:	mov    %edi,(%rsp)
   23feb:	mov    %eax,0x8(%rsp)
   23fef:	mov    %r14,%rdi
   23ff2:	callq  277f0 <png_write_IHDR>
   23ff7:	add    $0x10,%rsp
   23ffb:	movzwl 0x7e(%r15),%eax
   24000:	mov    %rax,%rcx
   24003:	and    $0x8000,%ecx
   24009:	test   %ecx,%ecx
   2400b:	je     240c5 <png_write_info_before_PLTE+0x155>
   24011:	movzwl 0x7e(%r15),%eax
   24016:	and    $0x8000,%eax
   2401b:	test   %eax,%eax
   2401d:	je     240f0 <png_write_info_before_PLTE+0x180>
   24023:	movzwl 0x7e(%r15),%eax
   24028:	and    $0x8000,%eax
   2402d:	test   %eax,%eax
   2402f:	je     24138 <png_write_info_before_PLTE+0x1c8>
   24035:	mov    0x8(%r15),%eax
   24039:	and    $0x2,%eax
   2403c:	test   %eax,%eax
   2403e:	je     24054 <png_write_info_before_PLTE+0xe4>
   24040:	lea    0xb0(%r15),%rsi
   24047:	movzbl 0x25(%r15),%edx
   2404c:	mov    %r14,%rdi
   2404f:	callq  281a0 <png_write_sBIT>
   24054:	movzwl 0x7e(%r15),%eax
   24059:	mov    %rax,%rcx
   2405c:	and    $0x8000,%ecx
   24062:	test   %ecx,%ecx
   24064:	je     2415b <png_write_info_before_PLTE+0x1eb>
   2406a:	mov    %r15,%rsi
   2406d:	mov    $0x1,%edx
   24072:	mov    %r14,%rdi
   24075:	callq  25870 <write_unknown_chunks>
   2407a:	mov    0x12c(%r14),%eax
   24081:	or     $0x400,%eax
   24086:	mov    %eax,0x12c(%r14)
   2408d:	mov    -0x10(%rbp),%r15
   24091:	mov    -0x8(%rbp),%r14
   24095:	leaveq 
   24096:	retq   
   24097:	mov    0x3d8(%r14),%eax
   2409e:	test   %eax,%eax
   240a0:	je     23fc4 <png_write_info_before_PLTE+0x54>
   240a6:	lea    0xb7e7(%rip),%rsi        # 2f894 <fourbppswaptable+0x248>
   240ad:	mov    %r14,%rdi
   240b0:	callq  5390 <png_warning@plt>
   240b5:	movl   $0x0,0x3d8(%r14)
   240c0:	jmpq   23fc4 <png_write_info_before_PLTE+0x54>
   240c5:	and    $0x8,%eax
   240c8:	test   %eax,%eax
   240ca:	jle    24011 <png_write_info_before_PLTE+0xa1>
   240d0:	mov    0x8(%r15),%eax
   240d4:	and    $0x1,%eax
   240d7:	test   %eax,%eax
   240d9:	je     24011 <png_write_info_before_PLTE+0xa1>
   240df:	movslq 0x34(%r15),%rsi
   240e3:	mov    %r14,%rdi
   240e6:	callq  28160 <png_write_gAMA_fixed>
   240eb:	jmpq   24011 <png_write_info_before_PLTE+0xa1>
   240f0:	mov    0x8(%r15),%eax
   240f4:	mov    %rax,%rcx
   240f7:	and    $0x1000,%ecx
   240fd:	test   %ecx,%ecx
   240ff:	je     24023 <png_write_info_before_PLTE+0xb3>
   24105:	and    $0x800,%eax
   2410a:	test   %eax,%eax
   2410c:	je     2411d <png_write_info_before_PLTE+0x1ad>
   2410e:	lea    0xb7b0(%rip),%rsi        # 2f8c5 <fourbppswaptable+0x279>
   24115:	mov    %r14,%rdi
   24118:	callq  b100 <png_app_warning>
   2411d:	mov    0x80(%r15),%rsi
   24124:	mov    0x88(%r15),%rdx
   2412b:	mov    %r14,%rdi
   2412e:	callq  28410 <png_write_iCCP>
   24133:	jmpq   24035 <png_write_info_before_PLTE+0xc5>
   24138:	mov    0x8(%r15),%eax
   2413c:	and    $0x800,%eax
   24141:	test   %eax,%eax
   24143:	je     24035 <png_write_info_before_PLTE+0xc5>
   24149:	movzwl 0x7c(%r15),%esi
   2414e:	mov    %r14,%rdi
   24151:	callq  28330 <png_write_sRGB>
   24156:	jmpq   24035 <png_write_info_before_PLTE+0xc5>
   2415b:	and    $0x10,%eax
   2415e:	test   %eax,%eax
   24160:	jle    2406a <png_write_info_before_PLTE+0xfa>
   24166:	mov    0x8(%r15),%eax
   2416a:	and    $0x4,%eax
   2416d:	test   %eax,%eax
   2416f:	je     2406a <png_write_info_before_PLTE+0xfa>
   24175:	lea    0x38(%r15),%rsi
   24179:	mov    %r14,%rdi
   2417c:	callq  28290 <png_write_cHRM_fixed>
   24181:	jmpq   2406a <png_write_info_before_PLTE+0xfa>
   24186:	nopw   %cs:0x0(%rax,%rax,1)

0000000000024190 <png_write_info>:
   24190:	push   %rbp
   24191:	mov    %rsp,%rbp
   24194:	sub    $0x30,%rsp
   24198:	mov    %r13,-0x18(%rbp)
   2419c:	test   %rdi,%rdi
   2419f:	jne    241a3 <png_write_info+0x13>
   241a1:	leaveq 
   241a2:	retq   
   241a3:	test   %rsi,%rsi
   241a6:	jne    241aa <png_write_info+0x1a>
   241a8:	leaveq 
   241a9:	retq   
   241aa:	mov    %rdi,%rax
   241ad:	mov    %rsi,%rcx
   241b0:	mov    %r14,-0x20(%rbp)
   241b4:	mov    %r15,-0x28(%rbp)
   241b8:	mov    %r12,%r14
   241bb:	mov    %rsi,%r12
   241be:	mov    %rcx,%rsi
   241c1:	mov    %rbx,%r15
   241c4:	mov    %rdi,%rbx
   241c7:	mov    %rax,%rdi
   241ca:	callq  5450 <png_write_info_before_PLTE@plt>
   241cf:	mov    0x8(%r12),%eax
   241d4:	and    $0x8,%eax
   241d7:	test   %eax,%eax
   241d9:	jne    241f4 <png_write_info+0x64>
   241db:	movzbl 0x25(%r12),%eax
   241e1:	cmp    $0x3,%al
   241e3:	jne    24207 <png_write_info+0x77>
   241e5:	mov    %rbx,%rdi
   241e8:	lea    0xb704(%rip),%rsi        # 2f8f3 <fourbppswaptable+0x2a7>
   241ef:	callq  5470 <png_error@plt>
   241f4:	mov    0x18(%r12),%rsi
   241f9:	movzwl 0x20(%r12),%edx
   241ff:	mov    %rbx,%rdi
   24202:	callq  27c30 <png_write_PLTE>
   24207:	xor    %r13d,%r13d
   2420a:	mov    0x8(%r12),%eax
   2420f:	and    $0x10,%eax
   24212:	test   %eax,%eax
   24214:	je     2424d <png_write_info+0xbd>
   24216:	mov    0x134(%rbx),%eax
   2421c:	and    $0x80000,%eax
   24221:	test   %eax,%eax
   24223:	jne    243ef <png_write_info+0x25f>
   24229:	mov    0xb8(%r12),%rsi
   24231:	lea    0xc0(%r12),%rdx
   24239:	movzwl 0x22(%r12),%ecx
   2423f:	movzbl 0x25(%r12),%r8d
   24245:	mov    %rbx,%rdi
   24248:	callq  28700 <png_write_tRNS>
   2424d:	mov    0x8(%r12),%eax
   24252:	and    $0x20,%eax
   24255:	test   %eax,%eax
   24257:	je     2426f <png_write_info+0xdf>
   24259:	lea    0xca(%r12),%rsi
   24261:	movzbl 0x25(%r12),%edx
   24267:	mov    %rbx,%rdi
   2426a:	callq  28860 <png_write_bKGD>
   2426f:	mov    0x8(%r12),%eax
   24274:	and    $0x10000,%eax
   24279:	test   %eax,%eax
   2427b:	je     24295 <png_write_info+0x105>
   2427d:	mov    0xf0(%r12),%rsi
   24285:	movslq 0xec(%r12),%rdx
   2428d:	mov    %rbx,%rdi
   24290:	callq  28390 <png_write_eXIf>
   24295:	mov    0x8(%r12),%eax
   2429a:	and    $0x40,%eax
   2429d:	test   %eax,%eax
   2429f:	je     242b7 <png_write_info+0x127>
   242a1:	mov    0x100(%r12),%rsi
   242a9:	movzwl 0x20(%r12),%edx
   242af:	mov    %rbx,%rdi
   242b2:	callq  289d0 <png_write_hIST>
   242b7:	mov    0x8(%r12),%eax
   242bc:	and    $0x100,%eax
   242c1:	test   %eax,%eax
   242c3:	je     242e6 <png_write_info+0x156>
   242c5:	movslq 0xd4(%r12),%rsi
   242cd:	movslq 0xd8(%r12),%rdx
   242d5:	movzbl 0xdc(%r12),%ecx
   242de:	mov    %rbx,%rdi
   242e1:	callq  28f30 <png_write_oFFs>
   242e6:	mov    0x8(%r12),%eax
   242eb:	and    $0x400,%eax
   242f0:	test   %eax,%eax
   242f2:	je     24347 <png_write_info+0x1b7>
   242f4:	sub    $0x10,%rsp
   242f8:	mov    0x118(%r12),%rdi
   24300:	mov    0x120(%r12),%rax
   24308:	mov    0x108(%r12),%rsi
   24310:	movslq 0x110(%r12),%rdx
   24318:	movslq 0x114(%r12),%rcx
   24320:	movzbl 0x128(%r12),%r8d
   24329:	movzbl 0x129(%r12),%r9d
   24332:	mov    %rdi,(%rsp)
   24336:	mov    %rax,0x8(%rsp)
   2433b:	mov    %rbx,%rdi
   2433e:	callq  28fc0 <png_write_pCAL>
   24343:	add    $0x10,%rsp
   24347:	mov    0x8(%r12),%eax
   2434c:	and    $0x4000,%eax
   24351:	test   %eax,%eax
   24353:	je     24376 <png_write_info+0x1e6>
   24355:	movzbl 0x14c(%r12),%esi
   2435e:	mov    0x150(%r12),%rdx
   24366:	mov    0x158(%r12),%rcx
   2436e:	mov    %rbx,%rdi
   24371:	callq  29310 <png_write_sCAL_s>
   24376:	mov    0x8(%r12),%eax
   2437b:	and    $0x80,%eax
   24380:	test   %eax,%eax
   24382:	je     243a5 <png_write_info+0x215>
   24384:	mov    0xe0(%r12),%esi
   2438c:	mov    0xe4(%r12),%edx
   24394:	movzbl 0xe8(%r12),%ecx
   2439d:	mov    %rbx,%rdi
   243a0:	callq  291d0 <png_write_pHYs>
   243a5:	mov    0x8(%r12),%eax
   243aa:	and    $0x200,%eax
   243af:	test   %eax,%eax
   243b1:	je     243d4 <png_write_info+0x244>
   243b3:	lea    0xa8(%r12),%rsi
   243bb:	mov    %rbx,%rdi
   243be:	callq  29260 <png_write_tIME>
   243c3:	mov    0x12c(%rbx),%eax
   243c9:	or     $0x200,%eax
   243ce:	mov    %eax,0x12c(%rbx)
   243d4:	mov    0x8(%r12),%eax
   243d9:	and    $0x2000,%eax
   243de:	test   %eax,%eax
   243e0:	jne    24436 <png_write_info+0x2a6>
   243e2:	mov    %r15,-0x8(%rbp)
   243e6:	mov    %r14,-0x10(%rbp)
   243ea:	mov    %r13,%r14
   243ed:	jmp    2445e <png_write_info+0x2ce>
   243ef:	movzbl 0x25(%r12),%eax
   243f5:	cmp    $0x3,%al
   243f7:	jne    24229 <png_write_info+0x99>
   243fd:	movzwl 0x22(%r12),%esi
   24403:	cmp    $0x100,%si
   24408:	jbe    24491 <png_write_info+0x301>
   2440e:	mov    $0x100,%esi
   24413:	mov    %r13,%rcx
   24416:	jmpq   244ab <png_write_info+0x31b>
   2441b:	movslq %r13d,%rsi
   2441e:	shl    $0x5,%rsi
   24422:	add    0x140(%r12),%rsi
   2442a:	mov    %rbx,%rdi
   2442d:	callq  28580 <png_write_sPLT>
   24432:	add    $0x1,%r13d
   24436:	movslq 0x148(%r12),%rax
   2443e:	cmp    %r13d,%eax
   24441:	jg     2441b <png_write_info+0x28b>
   24443:	mov    %r15,-0x8(%rbp)
   24447:	mov    %r14,-0x10(%rbp)
   2444b:	xor    %r13d,%r13d
   2444e:	mov    %r13,%r14
   24451:	jmp    2445e <png_write_info+0x2ce>
   24453:	movl   $0xfffffffd,(%r15)
   2445a:	add    $0x1,%r14d
   2445e:	movslq 0x94(%r12),%rax
   24466:	cmp    %r14d,%eax
   24469:	jg     244b4 <png_write_info+0x324>
   2446b:	mov    %r12,%rsi
   2446e:	mov    %rbx,%rdi
   24471:	mov    $0x2,%edx
   24476:	callq  25870 <write_unknown_chunks>
   2447b:	mov    -0x10(%rbp),%r12
   2447f:	mov    -0x8(%rbp),%rbx
   24483:	mov    -0x18(%rbp),%r13
   24487:	mov    -0x28(%rbp),%r15
   2448b:	mov    -0x20(%rbp),%r14
   2448f:	leaveq 
   24490:	retq   
   24491:	mov    %r13,%rcx
   24494:	jmp    244ab <png_write_info+0x31b>
   24496:	movslq %ecx,%rax
   24499:	add    0xb8(%r12),%rax
   244a1:	movzbl (%rax),%edx
   244a4:	not    %edx
   244a6:	mov    %dl,(%rax)
   244a8:	add    $0x1,%ecx
   244ab:	cmp    %ecx,%esi
   244ad:	jg     24496 <png_write_info+0x306>
   244af:	jmpq   24229 <png_write_info+0x99>
   244b4:	movslq %r14d,%rcx
   244b7:	lea    (%rcx,%rcx,2),%rax
   244bb:	shl    $0x4,%rax
   244bf:	lea    (%rax,%rcx,8),%r15
   244c3:	mov    0xa0(%r12),%rax
   244cb:	movslq (%rax,%r15,1),%rsi
   244cf:	test   %esi,%esi
   244d1:	jg     2450a <png_write_info+0x37a>
   244d3:	test   %esi,%esi
   244d5:	je     24546 <png_write_info+0x3b6>
   244d7:	cmp    $0xffffffff,%esi
   244da:	jne    2445a <png_write_info+0x2ca>
   244e0:	mov    0x8(%rax,%r15,1),%rsi
   244e5:	mov    0x10(%rax,%r15,1),%rdx
   244ea:	mov    %rbx,%rdi
   244ed:	mov    %r13,%rcx
   244f0:	callq  28a90 <png_write_tEXt>
   244f5:	mov    0xa0(%r12),%rax
   244fd:	movl   $0xfffffffd,(%rax,%r15,1)
   24505:	jmpq   2445a <png_write_info+0x2ca>
   2450a:	mov    0x8(%rax,%r15,1),%rdx
   2450f:	mov    0x28(%rax,%r15,1),%rcx
   24514:	mov    0x30(%rax,%r15,1),%r8
   24519:	mov    0x10(%rax,%r15,1),%r9
   2451e:	mov    %rbx,%rdi
   24521:	callq  28cd0 <png_write_iTXt>
   24526:	add    0xa0(%r12),%r15
   2452e:	movslq (%r15),%rax
   24531:	cmp    $0xffffffff,%eax
   24534:	je     24453 <png_write_info+0x2c3>
   2453a:	movl   $0xfffffffe,(%r15)
   24541:	jmpq   2445a <png_write_info+0x2ca>
   24546:	mov    0x8(%rax,%r15,1),%rsi
   2454b:	mov    0x10(%rax,%r15,1),%rdx
   24550:	movslq (%rax,%r15,1),%rcx
   24554:	mov    %rbx,%rdi
   24557:	callq  28b90 <png_write_zTXt>
   2455c:	mov    0xa0(%r12),%rax
   24564:	movl   $0xfffffffe,(%rax,%r15,1)
   2456c:	jmpq   2445a <png_write_info+0x2ca>
   24571:	data16 nopw %cs:0x0(%rax,%rax,1)
   2457c:	nopl   0x0(%rax)

0000000000024580 <png_convert_from_struct_tm>:
   24580:	push   %rbp
   24581:	mov    %rsp,%rbp
   24584:	movzwl 0x14(%rsi),%eax
   24588:	add    $0x76c,%eax
   2458d:	mov    %ax,(%rdi)
   24590:	movzbl 0x10(%rsi),%eax
   24594:	add    $0x1,%eax
   24597:	mov    %al,0x2(%rdi)
   2459a:	movzbl 0xc(%rsi),%eax
   2459e:	mov    %al,0x3(%rdi)
   245a1:	movzbl 0x8(%rsi),%eax
   245a5:	mov    %al,0x4(%rdi)
   245a8:	movzbl 0x4(%rsi),%eax
   245ac:	mov    %al,0x5(%rdi)
   245af:	movzbl (%rsi),%eax
   245b2:	mov    %al,0x6(%rdi)
   245b5:	leaveq 
   245b6:	retq   
   245b7:	nopw   0x0(%rax,%rax,1)

00000000000245c0 <png_convert_from_time_t>:
   245c0:	push   %rbp
   245c1:	mov    %rsp,%rbp
   245c4:	sub    $0x10,%rsp
   245c8:	mov    %r15,-0x8(%rbp)
   245cc:	mov    %rsi,-0x10(%rbp)
   245d0:	mov    %rdi,%r15
   245d3:	lea    -0x10(%rbp),%rdi
   245d7:	callq  57c0 <gmtime@plt>
   245dc:	mov    %rax,%rsi
   245df:	mov    %r15,%rdi
   245e2:	callq  51f0 <png_convert_from_struct_tm@plt>
   245e7:	mov    -0x8(%rbp),%r15
   245eb:	leaveq 
   245ec:	retq   
   245ed:	nopl   (%rax)

00000000000245f0 <png_set_flush>:
   245f0:	push   %rbp
   245f1:	mov    %rsp,%rbp
   245f4:	test   %rdi,%rdi
   245f7:	jne    245fb <png_set_flush+0xb>
   245f9:	leaveq 
   245fa:	retq   
   245fb:	test   %esi,%esi
   245fd:	jns    24601 <png_set_flush+0x11>
   245ff:	xor    %esi,%esi
   24601:	mov    %esi,0x298(%rdi)
   24607:	leaveq 
   24608:	retq   
   24609:	nopl   0x0(%rax)

0000000000024610 <png_write_flush>:
   24610:	push   %rbp
   24611:	mov    %rsp,%rbp
   24614:	sub    $0x10,%rsp
   24618:	test   %rdi,%rdi
   2461b:	jne    2461f <png_write_flush+0xf>
   2461d:	leaveq 
   2461e:	retq   
   2461f:	mov    0x200(%rdi),%eax
   24625:	cmp    0x214(%rdi),%eax
   2462b:	ja     2462f <png_write_flush+0x1f>
   2462d:	leaveq 
   2462e:	retq   
   2462f:	xor    %esi,%esi
   24631:	mov    $0x2,%ecx
   24636:	mov    %rsi,%rdx
   24639:	mov    %rdi,%rax
   2463c:	mov    %r15,-0x8(%rbp)
   24640:	mov    %rdi,%r15
   24643:	mov    %rax,%rdi
   24646:	callq  27dd0 <png_compress_IDAT>
   2464b:	mov    %r15,%rdi
   2464e:	movl   $0x0,0x29c(%rdi)
   24658:	callq  23e70 <png_flush>
   2465d:	mov    -0x8(%rbp),%r15
   24661:	leaveq 
   24662:	retq   
   24663:	data16 nopw %cs:0x0(%rax,%rax,1)
   2466e:	xchg   %ax,%ax

0000000000024670 <png_write_row>:
   24670:	push   %rbp
   24671:	mov    %rsp,%rbp
   24674:	sub    $0x30,%rsp
   24678:	test   %rdi,%rdi
   2467b:	jne    2467f <png_write_row+0xf>
   2467d:	leaveq 
   2467e:	retq   
   2467f:	mov    0x214(%rdi),%eax
   24685:	test   %eax,%eax
   24687:	je     246db <png_write_row+0x6b>
   24689:	mov    %r15,%rcx
   2468c:	mov    %rdi,%r15
   2468f:	movzbl 0x264(%r15),%eax
   24697:	test   %al,%al
   24699:	jne    246f2 <png_write_row+0x82>
   2469b:	movzbl 0x267(%r15),%eax
   246a3:	mov    %al,-0x18(%rbp)
   246a6:	mov    0x204(%r15),%edi
   246ad:	mov    %edi,-0x28(%rbp)
   246b0:	movzbl 0x26c(%r15),%eax
   246b8:	mov    %al,-0x16(%rbp)
   246bb:	movzbl 0x269(%r15),%r8d
   246c3:	imul   %r8b
   246c6:	cmp    $0x7,%al
   246c8:	ja     2473b <png_write_row+0xcb>
   246ca:	movzbl %al,%edx
   246cd:	imul   %rdi,%rdx
   246d1:	add    $0x7,%rdx
   246d5:	shr    $0x3,%rdx
   246d9:	jmp    24746 <png_write_row+0xd6>
   246db:	movzbl 0x265(%rdi),%eax
   246e2:	test   %al,%al
   246e4:	je     247f0 <png_write_row+0x180>
   246ea:	mov    %r15,%rcx
   246ed:	mov    %rdi,%r15
   246f0:	jmp    2468f <png_write_row+0x1f>
   246f2:	mov    0x134(%r15),%eax
   246f9:	and    $0x2,%eax
   246fc:	test   %eax,%eax
   246fe:	je     2469b <png_write_row+0x2b>
   24700:	movzbl 0x265(%r15),%eax
   24708:	cmp    $0x6,%al
   2470a:	ja     2469b <png_write_row+0x2b>
   2470c:	lea    0xb145(%rip),%rdx        # 2f858 <fourbppswaptable+0x20c>
   24713:	movslq (%rdx,%rax,4),%rax
   24717:	add    %rdx,%rax
   2471a:	jmpq   *%rax
   2471c:	mov    0x214(%r15),%eax
   24723:	and    $0x1,%eax
   24726:	test   %eax,%eax
   24728:	jne    2469b <png_write_row+0x2b>
   2472e:	mov    %r15,%rdi
   24731:	mov    %rcx,%r15
   24734:	callq  293d0 <png_write_finish_row>
   24739:	leaveq 
   2473a:	retq   
   2473b:	movzbl %al,%edx
   2473e:	shr    $0x3,%rdx
   24742:	imul   %rdi,%rdx
   24746:	mov    %r8b,-0x17(%rbp)
   2474a:	mov    %al,-0x15(%rbp)
   2474d:	mov    %rdx,-0x20(%rbp)
   24751:	mov    0x228(%r15),%rdi
   24758:	add    $0x1,%rdi
   2475c:	mov    %rcx,-0x10(%rbp)
   24760:	callq  54c0 <memcpy@plt>
   24765:	lea    -0x28(%rbp),%rsi
   24769:	movzbl 0x264(%r15),%eax
   24771:	test   %al,%al
   24773:	jne    24906 <png_write_row+0x296>
   24779:	mov    0x134(%r15),%eax
   24780:	test   %eax,%eax
   24782:	je     24790 <png_write_row+0x120>
   24784:	mov    %r15,%rdi
   24787:	callq  26d30 <png_do_write_transformations>
   2478c:	lea    -0x28(%rbp),%rsi
   24790:	movzbl 0x26a(%r15),%eax
   24798:	movzbl -0x15(%rbp),%ecx
   2479c:	cmp    %cl,%al
   2479e:	jne    24953 <png_write_row+0x2e3>
   247a4:	movzbl 0x26f(%r15),%eax
   247ac:	cmp    %al,%cl
   247ae:	jne    24953 <png_write_row+0x2e3>
   247b4:	mov    0x3d8(%r15),%eax
   247bb:	and    $0x4,%eax
   247be:	test   %eax,%eax
   247c0:	jne    24962 <png_write_row+0x2f2>
   247c6:	movzbl -0x18(%rbp),%eax
   247ca:	cmp    $0x3,%al
   247cc:	je     24991 <png_write_row+0x321>
   247d2:	mov    %r15,%rdi
   247d5:	callq  29a60 <png_write_find_filter>
   247da:	mov    0x308(%r15),%rax
   247e1:	test   %rax,%rax
   247e4:	jne    249b1 <png_write_row+0x341>
   247ea:	mov    -0x10(%rbp),%r15
   247ee:	leaveq 
   247ef:	retq   
   247f0:	mov    0x12c(%rdi),%eax
   247f6:	and    $0x400,%eax
   247fb:	test   %eax,%eax
   247fd:	je     249c9 <png_write_row+0x359>
   24803:	mov    %rdi,%rax
   24806:	mov    %r15,-0x8(%rbp)
   2480a:	mov    %rsi,-0x10(%rbp)
   2480e:	mov    %rdi,%r15
   24811:	mov    %rax,%rdi
   24814:	callq  29560 <png_write_start_row>
   24819:	mov    -0x10(%rbp),%rsi
   2481d:	mov    -0x8(%rbp),%rcx
   24821:	jmpq   2468f <png_write_row+0x1f>
   24826:	mov    0x214(%r15),%eax
   2482d:	and    $0x7,%eax
   24830:	test   %eax,%eax
   24832:	je     2469b <png_write_row+0x2b>
   24838:	mov    %r15,%rdi
   2483b:	mov    %rcx,%r15
   2483e:	callq  293d0 <png_write_finish_row>
   24843:	leaveq 
   24844:	retq   
   24845:	mov    0x214(%r15),%eax
   2484c:	and    $0x7,%eax
   2484f:	test   %eax,%eax
   24851:	jne    24863 <png_write_row+0x1f3>
   24853:	mov    0x1f8(%r15),%eax
   2485a:	cmp    $0x4,%eax
   2485d:	ja     2469b <png_write_row+0x2b>
   24863:	mov    %r15,%rdi
   24866:	mov    %rcx,%r15
   24869:	callq  293d0 <png_write_finish_row>
   2486e:	leaveq 
   2486f:	retq   
   24870:	mov    0x214(%r15),%eax
   24877:	and    $0x7,%eax
   2487a:	cmp    $0x4,%eax
   2487d:	je     2469b <png_write_row+0x2b>
   24883:	mov    %r15,%rdi
   24886:	mov    %rcx,%r15
   24889:	callq  293d0 <png_write_finish_row>
   2488e:	leaveq 
   2488f:	retq   
   24890:	mov    0x214(%r15),%eax
   24897:	and    $0x3,%eax
   2489a:	test   %eax,%eax
   2489c:	jne    248ae <png_write_row+0x23e>
   2489e:	mov    0x1f8(%r15),%eax
   248a5:	cmp    $0x2,%eax
   248a8:	ja     2469b <png_write_row+0x2b>
   248ae:	mov    %r15,%rdi
   248b1:	mov    %rcx,%r15
   248b4:	callq  293d0 <png_write_finish_row>
   248b9:	leaveq 
   248ba:	retq   
   248bb:	mov    0x214(%r15),%eax
   248c2:	and    $0x3,%eax
   248c5:	cmp    $0x2,%eax
   248c8:	je     2469b <png_write_row+0x2b>
   248ce:	mov    %r15,%rdi
   248d1:	mov    %rcx,%r15
   248d4:	callq  293d0 <png_write_finish_row>
   248d9:	leaveq 
   248da:	retq   
   248db:	mov    0x214(%r15),%eax
   248e2:	and    $0x1,%eax
   248e5:	test   %eax,%eax
   248e7:	jne    248f9 <png_write_row+0x289>
   248e9:	mov    0x1f8(%r15),%eax
   248f0:	cmp    $0x1,%eax
   248f3:	ja     2469b <png_write_row+0x2b>
   248f9:	mov    %r15,%rdi
   248fc:	mov    %rcx,%r15
   248ff:	callq  293d0 <png_write_finish_row>
   24904:	leaveq 
   24905:	retq   
   24906:	movzbl 0x265(%r15),%edx
   2490e:	cmp    $0x5,%dl
   24911:	ja     24779 <png_write_row+0x109>
   24917:	mov    0x134(%r15),%eax
   2491e:	and    $0x2,%eax
   24921:	test   %eax,%eax
   24923:	je     24779 <png_write_row+0x109>
   24929:	mov    0x228(%r15),%rax
   24930:	add    $0x1,%rax
   24934:	mov    %rsi,%rdi
   24937:	mov    %rax,%rsi
   2493a:	callq  29770 <png_do_write_interlace>
   2493f:	mov    -0x28(%rbp),%eax
   24942:	test   %eax,%eax
   24944:	je     249d5 <png_write_row+0x365>
   2494a:	lea    -0x28(%rbp),%rsi
   2494e:	jmpq   24779 <png_write_row+0x109>
   24953:	mov    %r15,%rdi
   24956:	lea    0xaff6(%rip),%rsi        # 2f953 <fourbppswaptable+0x307>
   2495d:	callq  5470 <png_error@plt>
   24962:	movzbl 0x3dc(%r15),%eax
   2496a:	cmp    $0x40,%al
   2496c:	jne    247c6 <png_write_row+0x156>
   24972:	mov    0x228(%r15),%rax
   24979:	add    $0x1,%rax
   2497d:	mov    %rsi,%rdi
   24980:	mov    %rax,%rsi
   24983:	callq  25950 <png_do_write_intrapixel>
   24988:	lea    -0x28(%rbp),%rsi
   2498c:	jmpq   247c6 <png_write_row+0x156>
   24991:	movslq 0x25c(%r15),%rax
   24998:	test   %eax,%eax
   2499a:	js     247d2 <png_write_row+0x162>
   249a0:	mov    %r15,%rdi
   249a3:	callq  23bc0 <png_do_check_palette_indexes>
   249a8:	lea    -0x28(%rbp),%rsi
   249ac:	jmpq   247d2 <png_write_row+0x162>
   249b1:	mov    %r15,%rdi
   249b4:	mov    0x214(%rdi),%esi
   249ba:	movzbl 0x265(%rdi),%edx
   249c1:	callq  *%rax
   249c3:	mov    -0x10(%rbp),%r15
   249c7:	leaveq 
   249c8:	retq   
   249c9:	lea    0xaf4e(%rip),%rsi        # 2f91e <fourbppswaptable+0x2d2>
   249d0:	callq  5470 <png_error@plt>
   249d5:	mov    %r15,%rdi
   249d8:	callq  293d0 <png_write_finish_row>
   249dd:	mov    -0x10(%rbp),%r15
   249e1:	leaveq 
   249e2:	retq   
   249e3:	data16 nopw %cs:0x0(%rax,%rax,1)
   249ee:	xchg   %ax,%ax

00000000000249f0 <png_write_rows>:
   249f0:	push   %rbp
   249f1:	mov    %rsp,%rbp
   249f4:	sub    $0x20,%rsp
   249f8:	test   %rdi,%rdi
   249fb:	je     24a1d <png_write_rows+0x2d>
   249fd:	xor    %eax,%eax
   249ff:	mov    %r12,-0x8(%rbp)
   24a03:	mov    %r13,-0x10(%rbp)
   24a07:	mov    %r14,-0x18(%rbp)
   24a0b:	mov    %r15,-0x20(%rbp)
   24a0f:	mov    %rax,%r12
   24a12:	mov    %rsi,%r13
   24a15:	mov    %rdi,%r14
   24a18:	mov    %rdx,%r15
   24a1b:	jmp    24a33 <png_write_rows+0x43>
   24a1d:	leaveq 
   24a1e:	retq   
   24a1f:	mov    0x0(%r13),%rsi
   24a23:	mov    %r14,%rdi
   24a26:	callq  5380 <png_write_row@plt>
   24a2b:	add    $0x1,%r12d
   24a2f:	add    $0x8,%r13
   24a33:	cmp    %r15d,%r12d
   24a36:	jb     24a1f <png_write_rows+0x2f>
   24a38:	mov    -0x20(%rbp),%r15
   24a3c:	mov    -0x18(%rbp),%r14
   24a40:	mov    -0x10(%rbp),%r13
   24a44:	mov    -0x8(%rbp),%r12
   24a48:	leaveq 
   24a49:	retq   
   24a4a:	nopw   0x0(%rax,%rax,1)

0000000000024a50 <png_write_image>:
   24a50:	push   %rbp
   24a51:	mov    %rsp,%rbp
   24a54:	sub    $0x30,%rsp
   24a58:	mov    %rsi,-0x30(%rbp)
   24a5c:	test   %rdi,%rdi
   24a5f:	jne    24a63 <png_write_image+0x13>
   24a61:	leaveq 
   24a62:	retq   
   24a63:	mov    %rdi,%rax
   24a66:	mov    %r14,-0x20(%rbp)
   24a6a:	mov    %r15,-0x28(%rbp)
   24a6e:	mov    %rbx,%r14
   24a71:	mov    %rsi,%rbx
   24a74:	mov    %r12,%r15
   24a77:	mov    %rdi,%r12
   24a7a:	mov    %rax,%rdi
   24a7d:	callq  53f0 <png_set_interlace_handling@plt>
   24a82:	xor    %ecx,%ecx
   24a84:	mov    %r14,-0x8(%rbp)
   24a88:	mov    %r15,-0x10(%rbp)
   24a8c:	mov    %r13,-0x18(%rbp)
   24a90:	mov    %rcx,%r14
   24a93:	mov    %rax,%r15
   24a96:	mov    %r14,%r13
   24a99:	jmp    24ac6 <png_write_image+0x76>
   24a9b:	mov    (%rbx),%rsi
   24a9e:	mov    %r12,%rdi
   24aa1:	callq  5380 <png_write_row@plt>
   24aa6:	add    $0x8,%rbx
   24aaa:	add    $0x1,%r14d
   24aae:	mov    0x1fc(%r12),%eax
   24ab6:	cmp    %r14d,%eax
   24ab9:	ja     24a9b <png_write_image+0x4b>
   24abb:	add    $0x1,%r13d
   24abf:	mov    -0x30(%rbp),%rbx
   24ac3:	xor    %r14d,%r14d
   24ac6:	cmp    %r15d,%r13d
   24ac9:	jl     24aae <png_write_image+0x5e>
   24acb:	mov    -0x18(%rbp),%r13
   24acf:	mov    -0x10(%rbp),%r12
   24ad3:	mov    -0x8(%rbp),%rbx
   24ad7:	mov    -0x28(%rbp),%r15
   24adb:	mov    -0x20(%rbp),%r14
   24adf:	leaveq 
   24ae0:	retq   
   24ae1:	data16 nopw %cs:0x0(%rax,%rax,1)
   24aec:	nopl   0x0(%rax)

0000000000024af0 <png_write_end>:
   24af0:	push   %rbp
   24af1:	mov    %rsp,%rbp
   24af4:	sub    $0x30,%rsp
   24af8:	test   %rdi,%rdi
   24afb:	jne    24aff <png_write_end+0xf>
   24afd:	leaveq 
   24afe:	retq   
   24aff:	mov    0x12c(%rdi),%eax
   24b05:	and    $0x4,%eax
   24b08:	test   %eax,%eax
   24b0a:	je     24b32 <png_write_end+0x42>
   24b0c:	movzwl 0x258(%rdi),%eax
   24b13:	cmp    0x25c(%rdi),%eax
   24b19:	jl     24b3e <png_write_end+0x4e>
   24b1b:	mov    %r15,%rax
   24b1e:	mov    %r12,%r15
   24b21:	mov    %rsi,%r12
   24b24:	mov    %r14,%rcx
   24b27:	mov    %rbx,%r14
   24b2a:	mov    %rdi,%rbx
   24b2d:	mov    %r13,%r8
   24b30:	jmp    24b72 <png_write_end+0x82>
   24b32:	lea    0xae3f(%rip),%rsi        # 2f978 <fourbppswaptable+0x32c>
   24b39:	callq  5470 <png_error@plt>
   24b3e:	lea    0xae4e(%rip),%rcx        # 2f993 <fourbppswaptable+0x347>
   24b45:	mov    %rdi,%rax
   24b48:	mov    %r14,-0x20(%rbp)
   24b4c:	mov    %r15,-0x28(%rbp)
   24b50:	mov    %rbx,%r14
   24b53:	mov    %rdi,%rbx
   24b56:	mov    %rax,%rdi
   24b59:	mov    %r12,%r15
   24b5c:	mov    %rsi,%r12
   24b5f:	mov    %rcx,%rsi
   24b62:	callq  5590 <png_benign_error@plt>
   24b67:	mov    %r13,%r8
   24b6a:	mov    -0x28(%rbp),%rax
   24b6e:	mov    -0x20(%rbp),%rcx
   24b72:	test   %r12,%r12
   24b75:	jne    24bab <png_write_end+0xbb>
   24b77:	mov    %r8,%r12
   24b7a:	mov    %rcx,%r13
   24b7d:	mov    0x12c(%rbx),%ecx
   24b83:	or     $0x8,%ecx
   24b86:	mov    %ecx,0x12c(%rbx)
   24b8c:	mov    %rbx,%rdi
   24b8f:	mov    %rax,%rbx
   24b92:	callq  28120 <png_write_IEND>
   24b97:	mov    %r14,%rax
   24b9a:	mov    %r13,%r14
   24b9d:	mov    %r12,%r13
   24ba0:	mov    %r15,%r12
   24ba3:	mov    %rbx,%r15
   24ba6:	mov    %rax,%rbx
   24ba9:	leaveq 
   24baa:	retq   
   24bab:	xor    %r13d,%r13d
   24bae:	mov    0x8(%r12),%edx
   24bb3:	and    $0x200,%edx
   24bb9:	test   %edx,%edx
   24bbb:	jne    24bd6 <png_write_end+0xe6>
   24bbd:	mov    %rcx,-0x20(%rbp)
   24bc1:	mov    %rax,-0x28(%rbp)
   24bc5:	mov    %r8,-0x18(%rbp)
   24bc9:	mov    %r14,-0x8(%rbp)
   24bcd:	mov    %r15,-0x10(%rbp)
   24bd1:	mov    %r13,%r14
   24bd4:	jmp    24c0e <png_write_end+0x11e>
   24bd6:	mov    0x12c(%rbx),%edx
   24bdc:	and    $0x200,%edx
   24be2:	test   %edx,%edx
   24be4:	je     24c6a <png_write_end+0x17a>
   24bea:	mov    %rcx,-0x20(%rbp)
   24bee:	mov    %rax,-0x28(%rbp)
   24bf2:	mov    %r8,-0x18(%rbp)
   24bf6:	mov    %r14,-0x8(%rbp)
   24bfa:	mov    %r15,-0x10(%rbp)
   24bfe:	mov    %r13,%r14
   24c01:	jmp    24c0e <png_write_end+0x11e>
   24c03:	movl   $0xfffffffd,(%r15)
   24c0a:	add    $0x1,%r14d
   24c0e:	movslq 0x94(%r12),%rax
   24c16:	cmp    %r14d,%eax
   24c19:	jg     24c96 <png_write_end+0x1a6>
   24c1b:	mov    0x8(%r12),%eax
   24c20:	and    $0x10000,%eax
   24c25:	test   %eax,%eax
   24c27:	je     24c41 <png_write_end+0x151>
   24c29:	mov    0xf0(%r12),%rsi
   24c31:	movslq 0xec(%r12),%rdx
   24c39:	mov    %rbx,%rdi
   24c3c:	callq  28390 <png_write_eXIf>
   24c41:	mov    %r12,%rsi
   24c44:	mov    $0x8,%edx
   24c49:	mov    %rbx,%rdi
   24c4c:	callq  25870 <write_unknown_chunks>
   24c51:	mov    -0x10(%rbp),%r15
   24c55:	mov    -0x8(%rbp),%r14
   24c59:	mov    -0x18(%rbp),%r12
   24c5d:	mov    -0x28(%rbp),%rax
   24c61:	mov    -0x20(%rbp),%r13
   24c65:	jmpq   24b7d <png_write_end+0x8d>
   24c6a:	lea    0xa8(%r12),%rsi
   24c72:	mov    %rbx,%rdi
   24c75:	mov    %rcx,-0x20(%rbp)
   24c79:	mov    %rax,-0x28(%rbp)
   24c7d:	mov    %r8,-0x18(%rbp)
   24c81:	callq  29260 <png_write_tIME>
   24c86:	mov    %r14,-0x8(%rbp)
   24c8a:	mov    %r15,-0x10(%rbp)
   24c8e:	mov    %r13,%r14
   24c91:	jmpq   24c0e <png_write_end+0x11e>
   24c96:	movslq %r14d,%rcx
   24c99:	lea    (%rcx,%rcx,2),%rax
   24c9d:	shl    $0x4,%rax
   24ca1:	lea    (%rax,%rcx,8),%r15
   24ca5:	mov    0xa0(%r12),%rax
   24cad:	movslq (%rax,%r15,1),%rsi
   24cb1:	test   %esi,%esi
   24cb3:	jg     24cec <png_write_end+0x1fc>
   24cb5:	test   %esi,%esi
   24cb7:	jns    24d28 <png_write_end+0x238>
   24cb9:	cmp    $0xffffffff,%esi
   24cbc:	jne    24c0a <png_write_end+0x11a>
   24cc2:	mov    0x8(%rax,%r15,1),%rsi
   24cc7:	mov    0x10(%rax,%r15,1),%rdx
   24ccc:	mov    %rbx,%rdi
   24ccf:	mov    %r13,%rcx
   24cd2:	callq  28a90 <png_write_tEXt>
   24cd7:	mov    0xa0(%r12),%rax
   24cdf:	movl   $0xfffffffd,(%rax,%r15,1)
   24ce7:	jmpq   24c0a <png_write_end+0x11a>
   24cec:	mov    0x8(%rax,%r15,1),%rdx
   24cf1:	mov    0x28(%rax,%r15,1),%rcx
   24cf6:	mov    0x30(%rax,%r15,1),%r8
   24cfb:	mov    0x10(%rax,%r15,1),%r9
   24d00:	mov    %rbx,%rdi
   24d03:	callq  28cd0 <png_write_iTXt>
   24d08:	add    0xa0(%r12),%r15
   24d10:	movslq (%r15),%rax
   24d13:	cmp    $0xffffffff,%eax
   24d16:	je     24c03 <png_write_end+0x113>
   24d1c:	movl   $0xfffffffe,(%r15)
   24d23:	jmpq   24c0a <png_write_end+0x11a>
   24d28:	mov    0x8(%rax,%r15,1),%rsi
   24d2d:	mov    0x10(%rax,%r15,1),%rdx
   24d32:	movslq (%rax,%r15,1),%rcx
   24d36:	mov    %rbx,%rdi
   24d39:	callq  28b90 <png_write_zTXt>
   24d3e:	mov    0xa0(%r12),%rax
   24d46:	movl   $0xfffffffe,(%rax,%r15,1)
   24d4e:	jmpq   24c0a <png_write_end+0x11a>
   24d53:	data16 nopw %cs:0x0(%rax,%rax,1)
   24d5e:	xchg   %ax,%ax

0000000000024d60 <png_destroy_write_struct>:
   24d60:	push   %rbp
   24d61:	mov    %rsp,%rbp
   24d64:	sub    $0x10,%rsp
   24d68:	test   %rdi,%rdi
   24d6b:	jne    24d6f <png_destroy_write_struct+0xf>
   24d6d:	leaveq 
   24d6e:	retq   
   24d6f:	mov    (%rdi),%rcx
   24d72:	test   %rcx,%rcx
   24d75:	jne    24d79 <png_destroy_write_struct+0x19>
   24d77:	leaveq 
   24d78:	retq   
   24d79:	mov    %rcx,%rax
   24d7c:	mov    %r14,-0x8(%rbp)
   24d80:	mov    %r15,-0x10(%rbp)
   24d84:	mov    %rcx,%r14
   24d87:	mov    %rdi,%r15
   24d8a:	mov    %rax,%rdi
   24d8d:	callq  55a0 <png_destroy_info_struct@plt>
   24d92:	movq   $0x0,(%r15)
   24d99:	mov    %r14,%rdi
   24d9c:	callq  25a40 <png_write_destroy>
   24da1:	mov    %r14,%rdi
   24da4:	callq  ca80 <png_destroy_png_struct>
   24da9:	mov    -0x10(%rbp),%r15
   24dad:	mov    -0x8(%rbp),%r14
   24db1:	leaveq 
   24db2:	retq   
   24db3:	data16 nopw %cs:0x0(%rax,%rax,1)
   24dbe:	xchg   %ax,%ax

0000000000024dc0 <png_set_filter>:
   24dc0:	push   %rbp
   24dc1:	mov    %rsp,%rbp
   24dc4:	sub    $0x30,%rsp
   24dc8:	test   %rdi,%rdi
   24dcb:	jne    24dcf <png_set_filter+0xf>
   24dcd:	leaveq 
   24dce:	retq   
   24dcf:	xor    %eax,%eax
   24dd1:	mov    0x3d8(%rdi),%ecx
   24dd7:	and    $0x4,%ecx
   24dda:	test   %ecx,%ecx
   24ddc:	jne    24dee <png_set_filter+0x2e>
   24dde:	test   %esi,%esi
   24de0:	je     24df8 <png_set_filter+0x38>
   24de2:	lea    0xac2d(%rip),%rsi        # 2fa16 <fourbppswaptable+0x3ca>
   24de9:	callq  5470 <png_error@plt>
   24dee:	cmp    $0x40,%esi
   24df1:	jne    24dde <png_set_filter+0x1e>
   24df3:	mov    %rax,%rsi
   24df6:	jmp    24dde <png_set_filter+0x1e>
   24df8:	movzbl %dl,%ecx
   24dfb:	cmp    $0x7,%ecx
   24dfe:	ja     24e19 <png_set_filter+0x59>
   24e00:	lea    0xaa6d(%rip),%rsi        # 2f874 <fourbppswaptable+0x228>
   24e07:	movslq (%rsi,%rcx,4),%rcx
   24e0b:	add    %rsi,%rcx
   24e0e:	jmpq   *%rcx
   24e10:	movb   $0x80,0x266(%rdi)
   24e17:	jmp    24e1f <png_set_filter+0x5f>
   24e19:	mov    %dl,0x266(%rdi)
   24e1f:	mov    0x228(%rdi),%rcx
   24e26:	test   %rcx,%rcx
   24e29:	je     25018 <png_set_filter+0x258>
   24e2f:	mov    0x1fc(%rdi),%ecx
   24e35:	cmp    $0x1,%ecx
   24e38:	jne    24e40 <png_set_filter+0x80>
   24e3a:	and    $0xffffff1f,%edx
   24e40:	mov    0x1f8(%rdi),%ecx
   24e46:	cmp    $0x1,%ecx
   24e49:	jne    24e51 <png_set_filter+0x91>
   24e4b:	and    $0xffffff2f,%edx
   24e51:	mov    %rdx,%rcx
   24e54:	and    $0xe0,%ecx
   24e5a:	test   %ecx,%ecx
   24e5c:	jle    24ea0 <png_set_filter+0xe0>
   24e5e:	mov    0x220(%rdi),%rcx
   24e65:	test   %rcx,%rcx
   24e68:	jne    24ea0 <png_set_filter+0xe0>
   24e6a:	lea    0xab6c(%rip),%rsi        # 2f9dd <fourbppswaptable+0x391>
   24e71:	mov    %rdi,%rax
   24e74:	mov    %r14,-0x20(%rbp)
   24e78:	mov    %r15,-0x28(%rbp)
   24e7c:	mov    %rdx,%r14
   24e7f:	mov    %rdi,%r15
   24e82:	mov    %rax,%rdi
   24e85:	callq  b100 <png_app_warning>
   24e8a:	mov    %r14,%rdx
   24e8d:	and    $0xffffff1f,%edx
   24e93:	mov    %r15,%rdi
   24e96:	xor    %eax,%eax
   24e98:	mov    -0x28(%rbp),%r15
   24e9c:	mov    -0x20(%rbp),%r14
   24ea0:	mov    $0x1,%ecx
   24ea5:	mov    %rdx,%rsi
   24ea8:	and    $0x10,%esi
   24eab:	test   %esi,%esi
   24ead:	jle    24eb7 <png_set_filter+0xf7>
   24eaf:	mov    %rcx,%rax
   24eb2:	mov    $0x2,%ecx
   24eb7:	mov    %rdx,%rsi
   24eba:	and    $0x20,%esi
   24ebd:	test   %esi,%esi
   24ebf:	jle    24ec4 <png_set_filter+0x104>
   24ec1:	mov    %rcx,%rax
   24ec4:	mov    %rdx,%rcx
   24ec7:	and    $0x40,%ecx
   24eca:	test   %ecx,%ecx
   24ecc:	jle    24ed1 <png_set_filter+0x111>
   24ece:	add    $0x1,%eax
   24ed1:	mov    %rdx,%rcx
   24ed4:	and    $0x80,%ecx
   24eda:	test   %ecx,%ecx
   24edc:	jle    24ee1 <png_set_filter+0x121>
   24ede:	add    $0x1,%eax
   24ee1:	movzbl 0x269(%rdi),%ecx
   24ee8:	movzbl 0x26c(%rdi),%esi
   24eef:	imul   %esi,%ecx
   24ef2:	cmp    $0x7,%ecx
   24ef5:	jg     24f6e <png_set_filter+0x1ae>
   24ef7:	movslq %ecx,%rcx
   24efa:	mov    0x1f8(%rdi),%esi
   24f00:	imul   %rsi,%rcx
   24f04:	add    $0x7,%rcx
   24f08:	shr    $0x3,%rcx
   24f0c:	jmp    24f7f <png_set_filter+0x1bf>
   24f0e:	lea    0xaaa8(%rip),%rsi        # 2f9bd <fourbppswaptable+0x371>
   24f15:	mov    %rdi,%rax
   24f18:	mov    %r14,-0x20(%rbp)
   24f1c:	mov    %r15,-0x28(%rbp)
   24f20:	mov    %rdi,%r14
   24f23:	mov    %rax,%rdi
   24f26:	mov    %rdx,%r15
   24f29:	callq  b120 <png_app_error>
   24f2e:	mov    %r15,%rdx
   24f31:	mov    %r14,%rdi
   24f34:	xor    %eax,%eax
   24f36:	mov    -0x28(%rbp),%r15
   24f3a:	mov    -0x20(%rbp),%r14
   24f3e:	movb   $0x8,0x266(%rdi)
   24f45:	jmpq   24e1f <png_set_filter+0x5f>
   24f4a:	movb   $0x10,0x266(%rdi)
   24f51:	jmpq   24e1f <png_set_filter+0x5f>
   24f56:	movb   $0x20,0x266(%rdi)
   24f5d:	jmpq   24e1f <png_set_filter+0x5f>
   24f62:	movb   $0x40,0x266(%rdi)
   24f69:	jmpq   24e1f <png_set_filter+0x5f>
   24f6e:	movslq %ecx,%rcx
   24f71:	shr    $0x3,%rcx
   24f75:	mov    0x1f8(%rdi),%esi
   24f7b:	imul   %rsi,%rcx
   24f7f:	lea    0x1(%rcx),%rsi
   24f83:	mov    0x230(%rdi),%rcx
   24f8a:	test   %rcx,%rcx
   24f8d:	jne    24fd9 <png_set_filter+0x219>
   24f8f:	mov    %rdi,%r8
   24f92:	mov    %rsi,%rcx
   24f95:	mov    %r14,-0x18(%rbp)
   24f99:	mov    %r15,-0x28(%rbp)
   24f9d:	mov    %r13,-0x10(%rbp)
   24fa1:	mov    %rsi,-0x8(%rbp)
   24fa5:	mov    %rcx,%rsi
   24fa8:	mov    %rdx,%r13
   24fab:	mov    %rax,%r14
   24fae:	mov    %rdi,%r15
   24fb1:	mov    %r8,%rdi
   24fb4:	callq  5800 <png_malloc@plt>
   24fb9:	mov    %rax,0x230(%r15)
   24fc0:	mov    %r14,%rax
   24fc3:	mov    %r13,%rdx
   24fc6:	mov    %r15,%rdi
   24fc9:	mov    -0x8(%rbp),%rsi
   24fcd:	mov    -0x10(%rbp),%r13
   24fd1:	mov    -0x28(%rbp),%r15
   24fd5:	mov    -0x18(%rbp),%r14
   24fd9:	cmp    $0x1,%eax
   24fdc:	jle    25018 <png_set_filter+0x258>
   24fde:	mov    0x238(%rdi),%rax
   24fe5:	test   %rax,%rax
   24fe8:	jne    25018 <png_set_filter+0x258>
   24fea:	mov    %rdi,%rax
   24fed:	mov    %r14,-0x18(%rbp)
   24ff1:	mov    %r15,-0x28(%rbp)
   24ff5:	mov    %rdi,%r14
   24ff8:	mov    %rax,%rdi
   24ffb:	mov    %rdx,%r15
   24ffe:	callq  5800 <png_malloc@plt>
   25003:	mov    %rax,0x238(%r14)
   2500a:	mov    %r15,%rdx
   2500d:	mov    %r14,%rdi
   25010:	mov    -0x28(%rbp),%r15
   25014:	mov    -0x18(%rbp),%r14
   25018:	mov    %dl,0x266(%rdi)
   2501e:	leaveq 
   2501f:	retq   

0000000000025020 <png_set_filter_heuristics>:
   25020:	push   %rbp
   25021:	mov    %rsp,%rbp
   25024:	leaveq 
   25025:	retq   
   25026:	nopw   %cs:0x0(%rax,%rax,1)

0000000000025030 <png_set_filter_heuristics_fixed>:
   25030:	push   %rbp
   25031:	mov    %rsp,%rbp
   25034:	leaveq 
   25035:	retq   
   25036:	nopw   %cs:0x0(%rax,%rax,1)

0000000000025040 <png_set_compression_level>:
   25040:	push   %rbp
   25041:	mov    %rsp,%rbp
   25044:	test   %rdi,%rdi
   25047:	jne    2504b <png_set_compression_level+0xb>
   25049:	leaveq 
   2504a:	retq   
   2504b:	mov    %esi,0x1bc(%rdi)
   25051:	leaveq 
   25052:	retq   
   25053:	data16 nopw %cs:0x0(%rax,%rax,1)
   2505e:	xchg   %ax,%ax

0000000000025060 <png_set_compression_mem_level>:
   25060:	push   %rbp
   25061:	mov    %rsp,%rbp
   25064:	test   %rdi,%rdi
   25067:	jne    2506b <png_set_compression_mem_level+0xb>
   25069:	leaveq 
   2506a:	retq   
   2506b:	mov    %esi,0x1c8(%rdi)
   25071:	leaveq 
   25072:	retq   
   25073:	data16 nopw %cs:0x0(%rax,%rax,1)
   2507e:	xchg   %ax,%ax

0000000000025080 <png_set_compression_strategy>:
   25080:	push   %rbp
   25081:	mov    %rsp,%rbp
   25084:	test   %rdi,%rdi
   25087:	jne    2508b <png_set_compression_strategy+0xb>
   25089:	leaveq 
   2508a:	retq   
   2508b:	mov    0x130(%rdi),%eax
   25091:	or     $0x1,%eax
   25094:	mov    %eax,0x130(%rdi)
   2509a:	mov    %esi,0x1cc(%rdi)
   250a0:	leaveq 
   250a1:	retq   
   250a2:	data16 nopw %cs:0x0(%rax,%rax,1)
   250ad:	nopl   (%rax)

00000000000250b0 <png_set_compression_window_bits>:
   250b0:	push   %rbp
   250b1:	mov    %rsp,%rbp
   250b4:	sub    $0x10,%rsp
   250b8:	test   %rdi,%rdi
   250bb:	jne    250bf <png_set_compression_window_bits+0xf>
   250bd:	leaveq 
   250be:	retq   
   250bf:	cmp    $0xf,%esi
   250c2:	jg     250f0 <png_set_compression_window_bits+0x40>
   250c4:	cmp    $0x7,%esi
   250c7:	jg     25115 <png_set_compression_window_bits+0x65>
   250c9:	lea    0xa994(%rip),%rsi        # 2fa64 <fourbppswaptable+0x418>
   250d0:	mov    %rdi,%rax
   250d3:	mov    %r15,-0x8(%rbp)
   250d7:	mov    %rdi,%r15
   250da:	mov    %rax,%rdi
   250dd:	callq  5390 <png_warning@plt>
   250e2:	mov    %r15,%rdi
   250e5:	mov    $0x8,%esi
   250ea:	mov    -0x8(%rbp),%r15
   250ee:	jmp    25115 <png_set_compression_window_bits+0x65>
   250f0:	lea    0xa93c(%rip),%rsi        # 2fa33 <fourbppswaptable+0x3e7>
   250f7:	mov    %rdi,%rax
   250fa:	mov    %r15,-0x8(%rbp)
   250fe:	mov    %rdi,%r15
   25101:	mov    %rax,%rdi
   25104:	callq  5390 <png_warning@plt>
   25109:	mov    %r15,%rdi
   2510c:	mov    $0xf,%esi
   25111:	mov    -0x8(%rbp),%r15
   25115:	mov    %esi,0x1c4(%rdi)
   2511b:	leaveq 
   2511c:	retq   
   2511d:	nopl   (%rax)

0000000000025120 <png_set_compression_method>:
   25120:	push   %rbp
   25121:	mov    %rsp,%rbp
   25124:	sub    $0x10,%rsp
   25128:	test   %rdi,%rdi
   2512b:	jne    2512f <png_set_compression_method+0xf>
   2512d:	leaveq 
   2512e:	retq   
   2512f:	cmp    $0x8,%esi
   25132:	je     25165 <png_set_compression_method+0x45>
   25134:	lea    0xa95a(%rip),%rcx        # 2fa95 <fourbppswaptable+0x449>
   2513b:	mov    %rdi,%rax
   2513e:	mov    %r14,-0x8(%rbp)
   25142:	mov    %r15,-0x10(%rbp)
   25146:	mov    %rsi,%r14
   25149:	mov    %rcx,%rsi
   2514c:	mov    %rdi,%r15
   2514f:	mov    %rax,%rdi
   25152:	callq  5390 <png_warning@plt>
   25157:	mov    %r14,%rsi
   2515a:	mov    %r15,%rdi
   2515d:	mov    -0x10(%rbp),%r15
   25161:	mov    -0x8(%rbp),%r14
   25165:	mov    %esi,0x1c0(%rdi)
   2516b:	leaveq 
   2516c:	retq   
   2516d:	nopl   (%rax)

0000000000025170 <png_set_text_compression_level>:
   25170:	push   %rbp
   25171:	mov    %rsp,%rbp
   25174:	test   %rdi,%rdi
   25177:	jne    2517b <png_set_text_compression_level+0xb>
   25179:	leaveq 
   2517a:	retq   
   2517b:	mov    %esi,0x1d0(%rdi)
   25181:	leaveq 
   25182:	retq   
   25183:	data16 nopw %cs:0x0(%rax,%rax,1)
   2518e:	xchg   %ax,%ax

0000000000025190 <png_set_text_compression_mem_level>:
   25190:	push   %rbp
   25191:	mov    %rsp,%rbp
   25194:	test   %rdi,%rdi
   25197:	jne    2519b <png_set_text_compression_mem_level+0xb>
   25199:	leaveq 
   2519a:	retq   
   2519b:	mov    %esi,0x1dc(%rdi)
   251a1:	leaveq 
   251a2:	retq   
   251a3:	data16 nopw %cs:0x0(%rax,%rax,1)
   251ae:	xchg   %ax,%ax

00000000000251b0 <png_set_text_compression_strategy>:
   251b0:	push   %rbp
   251b1:	mov    %rsp,%rbp
   251b4:	test   %rdi,%rdi
   251b7:	jne    251bb <png_set_text_compression_strategy+0xb>
   251b9:	leaveq 
   251ba:	retq   
   251bb:	mov    %esi,0x1e0(%rdi)
   251c1:	leaveq 
   251c2:	retq   
   251c3:	data16 nopw %cs:0x0(%rax,%rax,1)
   251ce:	xchg   %ax,%ax

00000000000251d0 <png_set_text_compression_window_bits>:
   251d0:	push   %rbp
   251d1:	mov    %rsp,%rbp
   251d4:	sub    $0x10,%rsp
   251d8:	test   %rdi,%rdi
   251db:	jne    251df <png_set_text_compression_window_bits+0xf>
   251dd:	leaveq 
   251de:	retq   
   251df:	cmp    $0xf,%esi
   251e2:	jg     25210 <png_set_text_compression_window_bits+0x40>
   251e4:	cmp    $0x7,%esi
   251e7:	jg     25235 <png_set_text_compression_window_bits+0x65>
   251e9:	lea    0xa874(%rip),%rsi        # 2fa64 <fourbppswaptable+0x418>
   251f0:	mov    %rdi,%rax
   251f3:	mov    %r15,-0x8(%rbp)
   251f7:	mov    %rdi,%r15
   251fa:	mov    %rax,%rdi
   251fd:	callq  5390 <png_warning@plt>
   25202:	mov    %r15,%rdi
   25205:	mov    $0x8,%esi
   2520a:	mov    -0x8(%rbp),%r15
   2520e:	jmp    25235 <png_set_text_compression_window_bits+0x65>
   25210:	lea    0xa81c(%rip),%rsi        # 2fa33 <fourbppswaptable+0x3e7>
   25217:	mov    %rdi,%rax
   2521a:	mov    %r15,-0x8(%rbp)
   2521e:	mov    %rdi,%r15
   25221:	mov    %rax,%rdi
   25224:	callq  5390 <png_warning@plt>
   25229:	mov    %r15,%rdi
   2522c:	mov    $0xf,%esi
   25231:	mov    -0x8(%rbp),%r15
   25235:	mov    %esi,0x1d8(%rdi)
   2523b:	leaveq 
   2523c:	retq   
   2523d:	nopl   (%rax)

0000000000025240 <png_set_text_compression_method>:
   25240:	push   %rbp
   25241:	mov    %rsp,%rbp
   25244:	sub    $0x10,%rsp
   25248:	test   %rdi,%rdi
   2524b:	jne    2524f <png_set_text_compression_method+0xf>
   2524d:	leaveq 
   2524e:	retq   
   2524f:	cmp    $0x8,%esi
   25252:	je     25285 <png_set_text_compression_method+0x45>
   25254:	lea    0xa83a(%rip),%rcx        # 2fa95 <fourbppswaptable+0x449>
   2525b:	mov    %rdi,%rax
   2525e:	mov    %r14,-0x8(%rbp)
   25262:	mov    %r15,-0x10(%rbp)
   25266:	mov    %rsi,%r14
   25269:	mov    %rcx,%rsi
   2526c:	mov    %rdi,%r15
   2526f:	mov    %rax,%rdi
   25272:	callq  5390 <png_warning@plt>
   25277:	mov    %r14,%rsi
   2527a:	mov    %r15,%rdi
   2527d:	mov    -0x10(%rbp),%r15
   25281:	mov    -0x8(%rbp),%r14
   25285:	mov    %esi,0x1d4(%rdi)
   2528b:	leaveq 
   2528c:	retq   
   2528d:	nopl   (%rax)

0000000000025290 <png_set_write_status_fn>:
   25290:	push   %rbp
   25291:	mov    %rsp,%rbp
   25294:	test   %rdi,%rdi
   25297:	jne    2529b <png_set_write_status_fn+0xb>
   25299:	leaveq 
   2529a:	retq   
   2529b:	mov    %rsi,0x308(%rdi)
   252a2:	leaveq 
   252a3:	retq   
   252a4:	data16 nopw %cs:0x0(%rax,%rax,1)
   252af:	nop

00000000000252b0 <png_set_write_user_transform_fn>:
   252b0:	push   %rbp
   252b1:	mov    %rsp,%rbp
   252b4:	test   %rdi,%rdi
   252b7:	jne    252bb <png_set_write_user_transform_fn+0xb>
   252b9:	leaveq 
   252ba:	retq   
   252bb:	mov    0x134(%rdi),%eax
   252c1:	or     $0x100000,%eax
   252c6:	mov    %eax,0x134(%rdi)
   252cc:	mov    %rsi,0x118(%rdi)
   252d3:	leaveq 
   252d4:	retq   
   252d5:	data16 nopw %cs:0x0(%rax,%rax,1)

00000000000252e0 <png_write_png>:
   252e0:	push   %rbp
   252e1:	mov    %rsp,%rbp
   252e4:	sub    $0x20,%rsp
   252e8:	test   %rdi,%rdi
   252eb:	jne    252ef <png_write_png+0xf>
   252ed:	leaveq 
   252ee:	retq   
   252ef:	test   %rsi,%rsi
   252f2:	jne    252f6 <png_write_png+0x16>
   252f4:	leaveq 
   252f5:	retq   
   252f6:	mov    0x8(%rsi),%eax
   252f9:	and    $0x8000,%eax
   252fe:	test   %eax,%eax
   25300:	je     253f8 <png_write_png+0x118>
   25306:	mov    %rdi,%rax
   25309:	mov    %rsi,%rcx
   2530c:	mov    %r13,-0x8(%rbp)
   25310:	mov    %r14,-0x10(%rbp)
   25314:	mov    %r15,-0x18(%rbp)
   25318:	mov    %rdi,%r13
   2531b:	mov    %rax,%rdi
   2531e:	mov    %rsi,%r14
   25321:	mov    %rcx,%rsi
   25324:	mov    %rdx,%r15
   25327:	callq  5340 <png_write_info@plt>
   2532c:	mov    %r15,%rax
   2532f:	and    $0x20,%eax
   25332:	test   %eax,%eax
   25334:	jle    2533e <png_write_png+0x5e>
   25336:	mov    %r13,%rdi
   25339:	callq  58e0 <png_set_invert_mono@plt>
   2533e:	mov    %r15,%rax
   25341:	and    $0x40,%eax
   25344:	test   %eax,%eax
   25346:	jg     25406 <png_write_png+0x126>
   2534c:	mov    %r15,%rax
   2534f:	and    $0x4,%eax
   25352:	test   %eax,%eax
   25354:	jle    2535e <png_write_png+0x7e>
   25356:	mov    %r13,%rdi
   25359:	callq  5580 <png_set_packing@plt>
   2535e:	mov    %r15,%rax
   25361:	and    $0x100,%eax
   25366:	test   %eax,%eax
   25368:	jle    25372 <png_write_png+0x92>
   2536a:	mov    %r13,%rdi
   2536d:	callq  50d0 <png_set_swap_alpha@plt>
   25372:	mov    %r15,%rax
   25375:	and    $0x1800,%eax
   2537a:	test   %eax,%eax
   2537c:	jg     25429 <png_write_png+0x149>
   25382:	mov    %r15,%rax
   25385:	and    $0x80,%eax
   2538a:	test   %eax,%eax
   2538c:	jle    25396 <png_write_png+0xb6>
   2538e:	mov    %r13,%rdi
   25391:	callq  5860 <png_set_bgr@plt>
   25396:	mov    %r15,%rax
   25399:	and    $0x200,%eax
   2539e:	test   %eax,%eax
   253a0:	jle    253aa <png_write_png+0xca>
   253a2:	mov    %r13,%rdi
   253a5:	callq  51e0 <png_set_swap@plt>
   253aa:	mov    %r15,%rax
   253ad:	and    $0x8,%eax
   253b0:	test   %eax,%eax
   253b2:	jle    253bc <png_write_png+0xdc>
   253b4:	mov    %r13,%rdi
   253b7:	callq  5820 <png_set_packswap@plt>
   253bc:	and    $0x400,%r15d
   253c3:	test   %r15d,%r15d
   253c6:	jle    253d0 <png_write_png+0xf0>
   253c8:	mov    %r13,%rdi
   253cb:	callq  5620 <png_set_invert_alpha@plt>
   253d0:	mov    0x160(%r14),%rsi
   253d7:	mov    %r13,%rdi
   253da:	callq  5570 <png_write_image@plt>
   253df:	mov    %r14,%rsi
   253e2:	mov    %r13,%rdi
   253e5:	callq  53c0 <png_write_end@plt>
   253ea:	mov    -0x18(%rbp),%r15
   253ee:	mov    -0x10(%rbp),%r14
   253f2:	mov    -0x8(%rbp),%r13
   253f6:	leaveq 
   253f7:	retq   
   253f8:	lea    0xa6c4(%rip),%rsi        # 2fac3 <fourbppswaptable+0x477>
   253ff:	callq  b120 <png_app_error>
   25404:	leaveq 
   25405:	retq   
   25406:	mov    0x8(%r14),%eax
   2540a:	and    $0x2,%eax
   2540d:	test   %eax,%eax
   2540f:	je     2534c <png_write_png+0x6c>
   25415:	lea    0xb0(%r14),%rsi
   2541c:	mov    %r13,%rdi
   2541f:	callq  5270 <png_set_shift@plt>
   25424:	jmpq   2534c <png_write_png+0x6c>
   25429:	xor    %esi,%esi
   2542b:	mov    %r15,%rax
   2542e:	and    $0x1000,%eax
   25433:	test   %eax,%eax
   25435:	jg     25457 <png_write_png+0x177>
   25437:	mov    %r15,%rax
   2543a:	and    $0x800,%eax
   2543f:	test   %eax,%eax
   25441:	jle    25382 <png_write_png+0xa2>
   25447:	mov    %rsi,%rdx
   2544a:	mov    %r13,%rdi
   2544d:	callq  5200 <png_set_filler@plt>
   25452:	jmpq   25382 <png_write_png+0xa2>
   25457:	mov    %r15,%rax
   2545a:	and    $0x800,%eax
   2545f:	test   %eax,%eax
   25461:	jle    25474 <png_write_png+0x194>
   25463:	lea    0xa67e(%rip),%rsi        # 2fae8 <fourbppswaptable+0x49c>
   2546a:	mov    %r13,%rdi
   2546d:	callq  b120 <png_app_error>
   25472:	xor    %esi,%esi
   25474:	mov    $0x1,%edx
   25479:	mov    %r13,%rdi
   2547c:	callq  5200 <png_set_filler@plt>
   25481:	jmpq   25382 <png_write_png+0xa2>
   25486:	nopw   %cs:0x0(%rax,%rax,1)

0000000000025490 <png_image_write_to_file>:
   25490:	push   %rbp
   25491:	mov    %rsp,%rbp
   25494:	sub    $0x30,%rsp
   25498:	xor    %eax,%eax
   2549a:	test   %rdi,%rdi
   2549d:	jne    254a9 <png_image_write_to_file+0x19>
   2549f:	mov    %rax,%r10
   254a2:	test   %r10,%r10
   254a5:	jne    254cc <png_image_write_to_file+0x3c>
   254a7:	leaveq 
   254a8:	retq   
   254a9:	mov    $0x1,%r10d
   254af:	mov    0x8(%rdi),%r11d
   254b3:	cmp    $0x1,%r11d
   254b7:	jne    254a2 <png_image_write_to_file+0x12>
   254b9:	test   %rsi,%rsi
   254bc:	jne    254da <png_image_write_to_file+0x4a>
   254be:	lea    0xa65d(%rip),%rsi        # 2fb22 <fourbppswaptable+0x4d6>
   254c5:	callq  90e0 <png_image_error>
   254ca:	leaveq 
   254cb:	retq   
   254cc:	lea    0xa679(%rip),%rsi        # 2fb4c <fourbppswaptable+0x500>
   254d3:	callq  90e0 <png_image_error>
   254d8:	leaveq 
   254d9:	retq   
   254da:	test   %rcx,%rcx
   254dd:	je     254be <png_image_write_to_file+0x2e>
   254df:	lea    0xa639(%rip),%rax        # 2fb1f <fourbppswaptable+0x4d3>
   254e6:	mov    %rsi,%r10
   254e9:	mov    %rbx,-0x10(%rbp)
   254ed:	mov    %r12,-0x18(%rbp)
   254f1:	mov    %r13,-0x20(%rbp)
   254f5:	mov    %r14,-0x28(%rbp)
   254f9:	mov    %r15,-0x30(%rbp)
   254fd:	mov    %rsi,-0x8(%rbp)
   25501:	mov    %rax,%rsi
   25504:	mov    %rdi,%rbx
   25507:	mov    %r10,%rdi
   2550a:	mov    %rdx,%r12
   2550d:	mov    %rcx,%r13
   25510:	mov    %r9,%r14
   25513:	mov    %r8,%r15
   25516:	callq  5760 <fopen@plt>
   2551b:	test   %rax,%rax
   2551e:	jne    2554e <png_image_write_to_file+0xbe>
   25520:	callq  50a0 <__errno_location@plt>
   25525:	movslq (%rax),%rdi
   25528:	callq  5890 <strerror@plt>
   2552d:	mov    %rax,%rsi
   25530:	mov    %rbx,%rdi
   25533:	callq  90e0 <png_image_error>
   25538:	mov    -0x30(%rbp),%r15
   2553c:	mov    -0x28(%rbp),%r14
   25540:	mov    -0x20(%rbp),%r13
   25544:	mov    -0x18(%rbp),%r12
   25548:	mov    -0x10(%rbp),%rbx
   2554c:	leaveq 
   2554d:	retq   
   2554e:	mov    %r13,%rcx
   25551:	mov    %r12,%rdx
   25554:	mov    %rax,%r12
   25557:	mov    %r15,%r8
   2555a:	mov    %r14,%r9
   2555d:	mov    %rbx,%rdi
   25560:	mov    %r12,%rsi
   25563:	callq  5880 <png_image_write_to_stdio@plt>
   25568:	test   %eax,%eax
   2556a:	jne    25595 <png_image_write_to_file+0x105>
   2556c:	mov    %r12,%rdi
   2556f:	callq  5240 <fclose@plt>
   25574:	mov    -0x8(%rbp),%rdi
   25578:	callq  50b0 <remove@plt>
   2557d:	xor    %eax,%eax
   2557f:	mov    -0x30(%rbp),%r15
   25583:	mov    -0x28(%rbp),%r14
   25587:	mov    -0x20(%rbp),%r13
   2558b:	mov    -0x18(%rbp),%r12
   2558f:	mov    -0x10(%rbp),%rbx
   25593:	leaveq 
   25594:	retq   
   25595:	mov    %r12,%rdi
   25598:	callq  55d0 <fflush@plt>
   2559d:	test   %eax,%eax
   2559f:	je     255e3 <png_image_write_to_file+0x153>
   255a1:	callq  50a0 <__errno_location@plt>
   255a6:	movslq (%rax),%r13
   255a9:	mov    %r12,%rdi
   255ac:	callq  5240 <fclose@plt>
   255b1:	mov    -0x8(%rbp),%rdi
   255b5:	callq  50b0 <remove@plt>
   255ba:	mov    %r13,%rdi
   255bd:	callq  5890 <strerror@plt>
   255c2:	mov    %rax,%rsi
   255c5:	mov    %rbx,%rdi
   255c8:	callq  90e0 <png_image_error>
   255cd:	mov    -0x30(%rbp),%r15
   255d1:	mov    -0x28(%rbp),%r14
   255d5:	mov    -0x20(%rbp),%r13
   255d9:	mov    -0x18(%rbp),%r12
   255dd:	mov    -0x10(%rbp),%rbx
   255e1:	leaveq 
   255e2:	retq   
   255e3:	mov    %r12,%rdi
   255e6:	callq  5130 <ferror@plt>
   255eb:	test   %eax,%eax
   255ed:	jne    255a1 <png_image_write_to_file+0x111>
   255ef:	mov    %r12,%rdi
   255f2:	callq  5240 <fclose@plt>
   255f7:	test   %eax,%eax
   255f9:	jne    25616 <png_image_write_to_file+0x186>
   255fb:	mov    -0x30(%rbp),%r15
   255ff:	mov    -0x28(%rbp),%r14
   25603:	mov    -0x20(%rbp),%r13
   25607:	mov    -0x18(%rbp),%r12
   2560b:	mov    -0x10(%rbp),%rbx
   2560f:	mov    $0x1,%eax
   25614:	leaveq 
   25615:	retq   
   25616:	callq  50a0 <__errno_location@plt>
   2561b:	movslq (%rax),%r13
   2561e:	jmp    255b1 <png_image_write_to_file+0x121>

0000000000025620 <png_image_write_to_stdio>:
   25620:	push   %rbp
   25621:	mov    %rsp,%rbp
   25624:	sub    $0x90,%rsp
   2562b:	xor    %eax,%eax
   2562d:	test   %rdi,%rdi
   25630:	jne    2563c <png_image_write_to_stdio+0x1c>
   25632:	mov    %rax,%rcx
   25635:	test   %rcx,%rcx
   25638:	jne    2564d <png_image_write_to_stdio+0x2d>
   2563a:	leaveq 
   2563b:	retq   
   2563c:	mov    0x8(%rdi),%r10d
   25640:	cmp    $0x1,%r10d
   25644:	je     2565b <png_image_write_to_stdio+0x3b>
   25646:	mov    $0x1,%ecx
   2564b:	jmp    25635 <png_image_write_to_stdio+0x15>
   2564d:	lea    0xa558(%rip),%rsi        # 2fbac <fourbppswaptable+0x560>
   25654:	callq  90e0 <png_image_error>
   25659:	leaveq 
   2565a:	retq   
   2565b:	test   %rsi,%rsi
   2565e:	jne    2566e <png_image_write_to_stdio+0x4e>
   25660:	lea    0xa51a(%rip),%rsi        # 2fb81 <fourbppswaptable+0x535>
   25667:	callq  90e0 <png_image_error>
   2566c:	leaveq 
   2566d:	retq   
   2566e:	test   %rcx,%rcx
   25671:	je     25660 <png_image_write_to_stdio+0x40>
   25673:	mov    %rdi,%rax
   25676:	mov    %rdi,-0x30(%rbp)
   2567a:	mov    %rsi,-0x28(%rbp)
   2567e:	mov    %rcx,-0x8(%rbp)
   25682:	mov    %r8,-0x10(%rbp)
   25686:	mov    %r9,-0x18(%rbp)
   2568a:	mov    %rdx,-0x20(%rbp)
   2568e:	mov    %rax,%rdi
   25691:	callq  25b10 <png_image_write_init>
   25696:	test   %eax,%eax
   25698:	jne    2569e <png_image_write_to_stdio+0x7e>
   2569a:	xor    %eax,%eax
   2569c:	leaveq 
   2569d:	retq   
   2569e:	mov    -0x30(%rbp),%r8
   256a2:	mov    (%r8),%rax
   256a5:	mov    (%rax),%rax
   256a8:	mov    -0x28(%rbp),%rcx
   256ac:	mov    %rcx,0x108(%rax)
   256b3:	lea    -0x88(%rbp),%rdi
   256ba:	mov    $0x58,%edx
   256bf:	mov    %r15,-0x30(%rbp)
   256c3:	mov    %r8,%r15
   256c6:	xor    %esi,%esi
   256c8:	callq  5350 <memset@plt>
   256cd:	mov    %r15,-0x88(%rbp)
   256d4:	mov    -0x8(%rbp),%rax
   256d8:	mov    %rax,-0x80(%rbp)
   256dc:	mov    -0x10(%rbp),%rax
   256e0:	mov    %eax,-0x78(%rbp)
   256e3:	mov    -0x18(%rbp),%rax
   256e7:	mov    %rax,-0x70(%rbp)
   256eb:	mov    -0x20(%rbp),%rax
   256ef:	mov    %eax,-0x68(%rbp)
   256f2:	lea    0xfb7(%rip),%rsi        # 266b0 <png_image_write_main>
   256f9:	mov    %r15,%rdi
   256fc:	lea    -0x88(%rbp),%rdx
   25703:	callq  b260 <png_safe_execute>
   25708:	mov    %r15,%rdi
   2570b:	mov    %rax,%r15
   2570e:	callq  5040 <png_image_free@plt>
   25713:	mov    %r15,%rax
   25716:	mov    -0x30(%rbp),%r15
   2571a:	leaveq 
   2571b:	retq   
   2571c:	nopl   0x0(%rax)

0000000000025720 <png_image_write_to_memory>:
   25720:	push   %rbp
   25721:	mov    %rsp,%rbp
   25724:	sub    $0x90,%rsp
   2572b:	xor    %eax,%eax
   2572d:	test   %rdi,%rdi
   25730:	jne    2573c <png_image_write_to_memory+0x1c>
   25732:	mov    %rax,%rcx
   25735:	test   %rcx,%rcx
   25738:	jne    2574d <png_image_write_to_memory+0x2d>
   2573a:	leaveq 
   2573b:	retq   
   2573c:	mov    0x8(%rdi),%r10d
   25740:	cmp    $0x1,%r10d
   25744:	je     2575b <png_image_write_to_memory+0x3b>
   25746:	mov    $0x1,%ecx
   2574b:	jmp    25735 <png_image_write_to_memory+0x15>
   2574d:	lea    0xa4ba(%rip),%rsi        # 2fc0e <fourbppswaptable+0x5c2>
   25754:	callq  90e0 <png_image_error>
   25759:	leaveq 
   2575a:	retq   
   2575b:	test   %rdx,%rdx
   2575e:	jne    2576e <png_image_write_to_memory+0x4e>
   25760:	lea    0xa47b(%rip),%rsi        # 2fbe2 <fourbppswaptable+0x596>
   25767:	callq  90e0 <png_image_error>
   2576c:	leaveq 
   2576d:	retq   
   2576e:	test   %r8,%r8
   25771:	je     25760 <png_image_write_to_memory+0x40>
   25773:	test   %rsi,%rsi
   25776:	jne    2577f <png_image_write_to_memory+0x5f>
   25778:	movq   $0x0,(%rdx)
   2577f:	mov    %rdi,%rax
   25782:	mov    %rdi,-0x10(%rbp)
   25786:	mov    %r8,-0x18(%rbp)
   2578a:	mov    %r9,-0x20(%rbp)
   2578e:	mov    %rcx,-0x28(%rbp)
   25792:	mov    %rsi,-0x30(%rbp)
   25796:	mov    %rdx,-0x8(%rbp)
   2579a:	mov    %rax,%rdi
   2579d:	callq  25b10 <png_image_write_init>
   257a2:	test   %eax,%eax
   257a4:	jne    257aa <png_image_write_to_memory+0x8a>
   257a6:	xor    %eax,%eax
   257a8:	leaveq 
   257a9:	retq   
   257aa:	lea    -0x88(%rbp),%rdi
   257b1:	mov    $0x58,%edx
   257b6:	xor    %esi,%esi
   257b8:	callq  5350 <memset@plt>
   257bd:	mov    -0x10(%rbp),%rax
   257c1:	mov    %rax,-0x88(%rbp)
   257c8:	mov    -0x18(%rbp),%rcx
   257cc:	mov    %rcx,-0x80(%rbp)
   257d0:	mov    -0x20(%rbp),%rcx
   257d4:	mov    %ecx,-0x78(%rbp)
   257d7:	mov    0x10(%rbp),%rcx
   257db:	mov    %rcx,-0x70(%rbp)
   257df:	mov    -0x28(%rbp),%rcx
   257e3:	mov    %ecx,-0x68(%rbp)
   257e6:	mov    -0x30(%rbp),%rcx
   257ea:	mov    %rcx,-0x48(%rbp)
   257ee:	mov    -0x8(%rbp),%rcx
   257f2:	mov    (%rcx),%rcx
   257f5:	mov    %rcx,-0x40(%rbp)
   257f9:	movq   $0x0,-0x38(%rbp)
   25801:	lea    0x14e8(%rip),%rsi        # 26cf0 <png_image_write_memory>
   25808:	mov    %rax,%rdi
   2580b:	mov    %r15,-0x28(%rbp)
   2580f:	mov    %rax,%r15
   25812:	lea    -0x88(%rbp),%rdx
   25819:	callq  b260 <png_safe_execute>
   2581e:	mov    %r15,%rdi
   25821:	mov    %rax,%r15
   25824:	callq  5040 <png_image_free@plt>
   25829:	test   %r15d,%r15d
   2582c:	jne    25836 <png_image_write_to_memory+0x116>
   2582e:	mov    -0x28(%rbp),%r15
   25832:	xor    %eax,%eax
   25834:	leaveq 
   25835:	retq   
   25836:	mov    -0x30(%rbp),%rax
   2583a:	test   %rax,%rax
   2583d:	jne    25853 <png_image_write_to_memory+0x133>
   2583f:	mov    %r15,%rax
   25842:	mov    -0x8(%rbp),%rcx
   25846:	mov    -0x38(%rbp),%rdx
   2584a:	mov    %rdx,(%rcx)
   2584d:	mov    -0x28(%rbp),%r15
   25851:	leaveq 
   25852:	retq   
   25853:	mov    -0x8(%rbp),%rcx
   25857:	mov    (%rcx),%rax
   2585a:	cmp    -0x38(%rbp),%rax
   2585e:	jb     25865 <png_image_write_to_memory+0x145>
   25860:	mov    %r15,%rax
   25863:	jmp    25846 <png_image_write_to_memory+0x126>
   25865:	xor    %eax,%eax
   25867:	jmp    25846 <png_image_write_to_memory+0x126>
   25869:	nopl   0x0(%rax)

0000000000025870 <write_unknown_chunks>:
   25870:	push   %rbp
   25871:	mov    %rsp,%rbp
   25874:	sub    $0x30,%rsp
   25878:	movslq 0x138(%rsi),%rax
   2587f:	test   %eax,%eax
   25881:	jne    25885 <write_unknown_chunks+0x15>
   25883:	leaveq 
   25884:	retq   
   25885:	mov    0x130(%rsi),%rax
   2588c:	lea    0xa3b2(%rip),%rcx        # 2fc45 <fourbppswaptable+0x5f9>
   25893:	mov    %rbx,-0x8(%rbp)
   25897:	mov    %r12,-0x10(%rbp)
   2589b:	mov    %r13,-0x18(%rbp)
   2589f:	mov    %r14,-0x20(%rbp)
   258a3:	mov    %r15,-0x28(%rbp)
   258a7:	mov    %rax,%rbx
   258aa:	mov    %rsi,%r12
   258ad:	mov    %rdi,%r13
   258b0:	mov    %rcx,%r14
   258b3:	mov    %rdx,%r15
   258b6:	jmp    2591e <write_unknown_chunks+0xae>
   258b8:	movzbl 0x18(%rbx),%eax
   258bc:	and    %r15d,%eax
   258bf:	test   %eax,%eax
   258c1:	je     2591a <write_unknown_chunks+0xaa>
   258c3:	mov    %r13,%rdi
   258c6:	mov    %rbx,%rsi
   258c9:	callq  5310 <png_handle_as_unknown@plt>
   258ce:	cmp    $0x1,%eax
   258d1:	je     2591a <write_unknown_chunks+0xaa>
   258d3:	movzbl 0x3(%rbx),%ecx
   258d7:	and    $0x20,%ecx
   258da:	test   %ecx,%ecx
   258dc:	jg     258f3 <write_unknown_chunks+0x83>
   258de:	cmp    $0x3,%eax
   258e1:	je     258f3 <write_unknown_chunks+0x83>
   258e3:	test   %eax,%eax
   258e5:	jne    2591a <write_unknown_chunks+0xaa>
   258e7:	movslq 0x3c0(%r13),%rax
   258ee:	cmp    $0x3,%eax
   258f1:	jne    2591a <write_unknown_chunks+0xaa>
   258f3:	mov    0x10(%rbx),%rax
   258f7:	test   %rax,%rax
   258fa:	jne    25907 <write_unknown_chunks+0x97>
   258fc:	mov    %r13,%rdi
   258ff:	mov    %r14,%rsi
   25902:	callq  5390 <png_warning@plt>
   25907:	mov    0x8(%rbx),%rdx
   2590b:	mov    0x10(%rbx),%rcx
   2590f:	mov    %r13,%rdi
   25912:	mov    %rbx,%rsi
   25915:	callq  5400 <png_write_chunk@plt>
   2591a:	add    $0x20,%rbx
   2591e:	movslq 0x138(%r12),%rax
   25926:	shl    $0x5,%rax
   2592a:	add    0x130(%r12),%rax
   25932:	cmp    %rbx,%rax
   25935:	ja     258b8 <write_unknown_chunks+0x48>
   25937:	mov    -0x28(%rbp),%r15
   2593b:	mov    -0x20(%rbp),%r14
   2593f:	mov    -0x18(%rbp),%r13
   25943:	mov    -0x10(%rbp),%r12
   25947:	mov    -0x8(%rbp),%rbx
   2594b:	leaveq 
   2594c:	retq   
   2594d:	nopl   (%rax)

0000000000025950 <png_do_write_intrapixel>:
   25950:	push   %rbp
   25951:	mov    %rsp,%rbp
   25954:	movzbl 0x10(%rdi),%edx
   25958:	mov    %rdx,%rax
   2595b:	and    $0x2,%eax
   2595e:	test   %eax,%eax
   25960:	jg     25964 <png_do_write_intrapixel+0x14>
   25962:	leaveq 
   25963:	retq   
   25964:	mov    (%rdi),%r9d
   25967:	xor    %eax,%eax
   25969:	movzbl 0x11(%rdi),%ecx
   2596d:	cmp    $0x8,%cl
   25970:	je     25979 <png_do_write_intrapixel+0x29>
   25972:	cmp    $0x10,%cl
   25975:	je     25985 <png_do_write_intrapixel+0x35>
   25977:	leaveq 
   25978:	retq   
   25979:	cmp    $0x2,%dl
   2597c:	jne    25994 <png_do_write_intrapixel+0x44>
   2597e:	mov    $0x3,%edx
   25983:	jmp    259c0 <png_do_write_intrapixel+0x70>
   25985:	cmp    $0x2,%dl
   25988:	jne    259c7 <png_do_write_intrapixel+0x77>
   2598a:	mov    $0x6,%edi
   2598f:	jmpq   25a28 <png_do_write_intrapixel+0xd8>
   25994:	cmp    $0x6,%dl
   25997:	jne    25a2f <png_do_write_intrapixel+0xdf>
   2599d:	mov    $0x4,%edx
   259a2:	jmp    259c0 <png_do_write_intrapixel+0x70>
   259a4:	movzbl (%rsi),%ecx
   259a7:	movzbl 0x1(%rsi),%edi
   259ab:	sub    %dil,%cl
   259ae:	mov    %cl,(%rsi)
   259b0:	movzbl 0x2(%rsi),%ecx
   259b4:	sub    %dil,%cl
   259b7:	mov    %cl,0x2(%rsi)
   259ba:	add    $0x1,%eax
   259bd:	add    %rdx,%rsi
   259c0:	cmp    %r9d,%eax
   259c3:	jb     259a4 <png_do_write_intrapixel+0x54>
   259c5:	leaveq 
   259c6:	retq   
   259c7:	cmp    $0x6,%dl
   259ca:	jne    25a31 <png_do_write_intrapixel+0xe1>
   259cc:	mov    $0x8,%edi
   259d1:	jmp    25a28 <png_do_write_intrapixel+0xd8>
   259d3:	movzbl 0x1(%rsi),%edx
   259d7:	movzbl (%rsi),%ecx
   259da:	shl    $0x8,%ecx
   259dd:	add    %edx,%ecx
   259df:	movzbl 0x3(%rsi),%r8d
   259e4:	movzbl 0x2(%rsi),%edx
   259e8:	shl    $0x8,%edx
   259eb:	add    %edx,%r8d
   259ee:	sub    %r8d,%ecx
   259f1:	mov    %ecx,%ecx
   259f3:	movzwl %cx,%ecx
   259f6:	mov    %rcx,%rdx
   259f9:	shr    $0x8,%edx
   259fc:	mov    %dl,(%rsi)
   259fe:	mov    %cl,0x1(%rsi)
   25a01:	movzbl 0x5(%rsi),%edx
   25a05:	movzbl 0x4(%rsi),%ecx
   25a09:	shl    $0x8,%ecx
   25a0c:	add    %edx,%ecx
   25a0e:	sub    %r8d,%ecx
   25a11:	mov    %ecx,%ecx
   25a13:	movzwl %cx,%edx
   25a16:	mov    %rdx,%rcx
   25a19:	shr    $0x8,%ecx
   25a1c:	mov    %cl,0x4(%rsi)
   25a1f:	mov    %dl,0x5(%rsi)
   25a22:	add    $0x1,%eax
   25a25:	add    %rdi,%rsi
   25a28:	cmp    %eax,%r9d
   25a2b:	ja     259d3 <png_do_write_intrapixel+0x83>
   25a2d:	leaveq 
   25a2e:	retq   
   25a2f:	leaveq 
   25a30:	retq   
   25a31:	leaveq 
   25a32:	retq   
   25a33:	data16 nopw %cs:0x0(%rax,%rax,1)
   25a3e:	xchg   %ax,%ax

0000000000025a40 <png_write_destroy>:
   25a40:	push   %rbp
   25a41:	mov    %rsp,%rbp
   25a44:	sub    $0x10,%rsp
   25a48:	mov    %r15,-0x8(%rbp)
   25a4c:	mov    0x130(%rdi),%eax
   25a52:	and    $0x2,%eax
   25a55:	test   %eax,%eax
   25a57:	jne    25a5e <png_write_destroy+0x1e>
   25a59:	mov    %rdi,%r15
   25a5c:	jmp    25a6d <png_write_destroy+0x2d>
   25a5e:	mov    %rdi,%r15
   25a61:	lea    0x140(%r15),%rdi
   25a68:	callq  5670 <deflateEnd@plt>
   25a6d:	lea    0x1b0(%r15),%rsi
   25a74:	mov    %r15,%rdi
   25a77:	callq  277a0 <png_free_buffer_list>
   25a7c:	mov    0x228(%r15),%rsi
   25a83:	mov    %r15,%rdi
   25a86:	callq  5790 <png_free@plt>
   25a8b:	movq   $0x0,0x228(%r15)
   25a96:	mov    0x220(%r15),%rsi
   25a9d:	mov    %r15,%rdi
   25aa0:	callq  5790 <png_free@plt>
   25aa5:	mov    0x230(%r15),%rsi
   25aac:	mov    %r15,%rdi
   25aaf:	callq  5790 <png_free@plt>
   25ab4:	mov    0x238(%r15),%rsi
   25abb:	mov    %r15,%rdi
   25abe:	callq  5790 <png_free@plt>
   25ac3:	movq   $0x0,0x220(%r15)
   25ace:	movq   $0x0,0x230(%r15)
   25ad9:	movq   $0x0,0x238(%r15)
   25ae4:	mov    0x3c8(%r15),%rsi
   25aeb:	mov    %r15,%rdi
   25aee:	callq  5790 <png_free@plt>
   25af3:	movq   $0x0,0x3c8(%r15)
   25afe:	mov    -0x8(%rbp),%r15
   25b02:	leaveq 
   25b03:	retq   
   25b04:	data16 nopw %cs:0x0(%rax,%rax,1)
   25b0f:	nop

0000000000025b10 <png_image_write_init>:
   25b10:	push   %rbp
   25b11:	mov    %rsp,%rbp
   25b14:	sub    $0x20,%rsp
   25b18:	mov    %r15,-0x10(%rbp)
   25b1c:	mov    %rdi,%r15
   25b1f:	lea    0xa141(%rip),%rdi        # 2fc67 <fourbppswaptable+0x61b>
   25b26:	lea    -0x1a9ad(%rip),%rdx        # b180 <png_safe_error>
   25b2d:	lea    -0x1a924(%rip),%rcx        # b210 <png_safe_warning>
   25b34:	mov    %r15,%rsi
   25b37:	callq  50f0 <png_create_write_struct@plt>
   25b3c:	mov    %rax,-0x20(%rbp)
   25b40:	test   %rax,%rax
   25b43:	jne    25b5a <png_image_write_init+0x4a>
   25b45:	mov    %r15,%rdi
   25b48:	lea    0xa11f(%rip),%rsi        # 2fc6e <fourbppswaptable+0x622>
   25b4f:	callq  90e0 <png_image_error>
   25b54:	mov    -0x10(%rbp),%r15
   25b58:	leaveq 
   25b59:	retq   
   25b5a:	mov    %rax,%rdi
   25b5d:	callq  5280 <png_create_info_struct@plt>
   25b62:	mov    %rax,-0x18(%rbp)
   25b66:	xor    %esi,%esi
   25b68:	test   %rax,%rax
   25b6b:	jne    25b78 <png_image_write_init+0x68>
   25b6d:	lea    -0x20(%rbp),%rdi
   25b71:	callq  56f0 <png_destroy_write_struct@plt>
   25b76:	jmp    25b45 <png_image_write_init+0x35>
   25b78:	mov    -0x20(%rbp),%rdi
   25b7c:	mov    $0x30,%esi
   25b81:	callq  5150 <png_malloc_warn@plt>
   25b86:	test   %rax,%rax
   25b89:	jne    25b9c <png_image_write_init+0x8c>
   25b8b:	mov    -0x20(%rbp),%rdi
   25b8f:	lea    -0x18(%rbp),%rsi
   25b93:	callq  55a0 <png_destroy_info_struct@plt>
   25b98:	xor    %esi,%esi
   25b9a:	jmp    25b6d <png_image_write_init+0x5d>
   25b9c:	mov    %rax,%rdi
   25b9f:	mov    %r14,-0x8(%rbp)
   25ba3:	mov    %rax,%r14
   25ba6:	xor    %esi,%esi
   25ba8:	mov    $0x30,%edx
   25bad:	callq  5350 <memset@plt>
   25bb2:	mov    -0x20(%rbp),%rax
   25bb6:	mov    %rax,(%r14)
   25bb9:	mov    -0x18(%rbp),%rax
   25bbd:	mov    %rax,0x8(%r14)
   25bc1:	mov    0x28(%r14),%eax
   25bc5:	or     $0x1,%eax
   25bc8:	mov    %eax,0x28(%r14)
   25bcc:	mov    %r14,(%r15)
   25bcf:	mov    $0x1,%eax
   25bd4:	mov    -0x8(%rbp),%r14
   25bd8:	mov    -0x10(%rbp),%r15
   25bdc:	leaveq 
   25bdd:	retq   
   25bde:	xchg   %ax,%ax

0000000000025be0 <png_write_image_16bit>:
   25be0:	push   %rbp
   25be1:	mov    %rsp,%rbp
   25be4:	sub    $0x50,%rsp
   25be8:	mov    %rdi,-0x38(%rbp)
   25bec:	mov    (%rdi),%r9
   25bef:	mov    (%r9),%rax
   25bf2:	mov    (%rax),%r11
   25bf5:	mov    %r11,-0x30(%rbp)
   25bf9:	mov    0x28(%rdi),%rsi
   25bfd:	mov    0x38(%rdi),%rcx
   25c01:	mov    $0x1,%edx
   25c06:	mov    0x14(%r9),%r8d
   25c0a:	mov    %r8,%rax
   25c0d:	and    $0x2,%eax
   25c10:	test   %eax,%eax
   25c12:	jne    25c1b <png_write_image_16bit+0x3b>
   25c14:	mov    $0x2,%eax
   25c19:	jmp    25c25 <png_write_image_16bit+0x45>
   25c1b:	mov    $0x4,%eax
   25c20:	mov    $0x3,%edx
   25c25:	mov    %rdx,-0x48(%rbp)
   25c29:	mov    0x10(%r9),%r10d
   25c2d:	mov    %r8,%rdi
   25c30:	and    $0x1,%edi
   25c33:	test   %edi,%edi
   25c35:	jne    25c46 <png_write_image_16bit+0x66>
   25c37:	mov    %r11,%rdi
   25c3a:	lea    0xa04d(%rip),%rsi        # 2fc8e <fourbppswaptable+0x642>
   25c41:	callq  5470 <png_error@plt>
   25c46:	and    $0x20,%r8d
   25c4a:	test   %r8d,%r8d
   25c4d:	jne    25c54 <png_write_image_16bit+0x74>
   25c4f:	mov    %rdx,%rdi
   25c52:	jmp    25c63 <png_write_image_16bit+0x83>
   25c54:	mov    $0xffffffffffffffff,%rdi
   25c5b:	add    $0x2,%rcx
   25c5f:	add    $0x2,%rsi
   25c63:	mov    %rcx,-0x40(%rbp)
   25c67:	movslq %edi,%rdi
   25c6a:	imul   0xc(%r9),%eax
   25c6f:	mov    %eax,%eax
   25c71:	lea    (%rcx,%rax,2),%rax
   25c75:	mov    $0xffff,%r8d
   25c7b:	xor    %r9d,%r9d
   25c7e:	mov    %rbx,-0x8(%rbp)
   25c82:	mov    %r12,-0x10(%rbp)
   25c86:	mov    %r13,-0x18(%rbp)
   25c8a:	mov    %r14,-0x20(%rbp)
   25c8e:	mov    %r15,-0x28(%rbp)
   25c92:	mov    %rdx,%rbx
   25c95:	mov    %r10,%r12
   25c98:	mov    %rdi,%r13
   25c9b:	mov    %r11,%rdi
   25c9e:	mov    %rax,%r14
   25ca1:	mov    -0x38(%rbp),%r15
   25ca5:	jmp    25d05 <png_write_image_16bit+0x125>
   25ca7:	add    $0x2,%rcx
   25cab:	add    $0x2,%rsi
   25caf:	movzwl (%rsi),%edx
   25cb2:	cmp    %dx,%r10w
   25cb6:	ja     25d25 <png_write_image_16bit+0x145>
   25cb8:	mov    %r8,%rdx
   25cbb:	mov    %dx,(%rcx)
   25cbe:	add    $0xffffffff,%ebx
   25cc1:	test   %ebx,%ebx
   25cc3:	jg     25ca7 <png_write_image_16bit+0xc7>
   25cc5:	add    $0x4,%rsi
   25cc9:	add    $0x4,%rcx
   25ccd:	mov    -0x48(%rbp),%rbx
   25cd1:	cmp    %r14,%rcx
   25cd4:	jb     25d2f <png_write_image_16bit+0x14f>
   25cd6:	mov    0x38(%r15),%rsi
   25cda:	callq  5380 <png_write_row@plt>
   25cdf:	add    $0xffffffff,%r12d
   25ce3:	movzwl 0x30(%r15),%eax
   25ce8:	and    $0xfffffffffffffffe,%rax
   25cec:	mov    -0x38(%rbp),%rcx
   25cf0:	lea    (%rcx,%rax,1),%rsi
   25cf4:	mov    -0x40(%rbp),%rcx
   25cf8:	mov    -0x30(%rbp),%rdi
   25cfc:	mov    $0xffff,%r8d
   25d02:	xor    %r9d,%r9d
   25d05:	test   %r12d,%r12d
   25d08:	jne    25d47 <png_write_image_16bit+0x167>
   25d0a:	mov    -0x28(%rbp),%r15
   25d0e:	mov    -0x20(%rbp),%r14
   25d12:	mov    -0x18(%rbp),%r13
   25d16:	mov    -0x10(%rbp),%r12
   25d1a:	mov    -0x8(%rbp),%rbx
   25d1e:	mov    $0x1,%eax
   25d23:	leaveq 
   25d24:	retq   
   25d25:	test   %dx,%dx
   25d28:	jne    25d4d <png_write_image_16bit+0x16d>
   25d2a:	mov    %r9,%rdx
   25d2d:	jmp    25cbb <png_write_image_16bit+0xdb>
   25d2f:	movzwl (%rsi,%r13,2),%r10d
   25d34:	mov    %r10w,(%rcx,%r13,2)
   25d39:	test   %r10w,%r10w
   25d3d:	jne    25d69 <png_write_image_16bit+0x189>
   25d3f:	mov    %r9,%rax
   25d42:	jmpq   25caf <png_write_image_16bit+0xcf>
   25d47:	mov    %rsi,-0x38(%rbp)
   25d4b:	jmp    25cd1 <png_write_image_16bit+0xf1>
   25d4d:	cmp    $0xfffe,%r10w
   25d52:	ja     25cbb <png_write_image_16bit+0xdb>
   25d58:	imul   %eax,%edx
   25d5b:	add    $0x4000,%edx
   25d61:	shr    $0xf,%edx
   25d64:	jmpq   25cbb <png_write_image_16bit+0xdb>
   25d69:	cmp    $0xfffe,%r10w
   25d6e:	jbe    25d78 <png_write_image_16bit+0x198>
   25d70:	mov    %r9,%rax
   25d73:	jmpq   25caf <png_write_image_16bit+0xcf>
   25d78:	mov    %r10,%rax
   25d7b:	shr    %eax
   25d7d:	add    $0x7fff8000,%eax
   25d82:	cltd   
   25d83:	idiv   %r10d
   25d86:	jmpq   25caf <png_write_image_16bit+0xcf>
   25d8b:	nopl   0x0(%rax,%rax,1)

0000000000025d90 <png_unpremultiply>:
   25d90:	push   %rbp
   25d91:	mov    %rsp,%rbp
   25d94:	mov    $0xff,%eax
   25d99:	cmp    %edi,%esi
   25d9b:	ja     25d9f <png_unpremultiply+0xf>
   25d9d:	leaveq 
   25d9e:	retq   
   25d9f:	cmp    $0x7f,%esi
   25da2:	ja     25da6 <png_unpremultiply+0x16>
   25da4:	leaveq 
   25da5:	retq   
   25da6:	test   %edi,%edi
   25da8:	jne    25dae <png_unpremultiply+0x1e>
   25daa:	xor    %eax,%eax
   25dac:	leaveq 
   25dad:	retq   
   25dae:	cmp    $0xff7e,%esi
   25db4:	jbe    25dc0 <png_unpremultiply+0x30>
   25db6:	mov    %rdi,%rax
   25db9:	shl    $0x8,%eax
   25dbc:	sub    %edi,%eax
   25dbe:	jmp    25dc9 <png_unpremultiply+0x39>
   25dc0:	imul   %edx,%edi
   25dc3:	lea    0x40(%rdi),%eax
   25dc6:	shr    $0x7,%eax
   25dc9:	mov    %rax,%rcx
   25dcc:	shr    $0xf,%ecx
   25dcf:	mov    %ecx,%edx
   25dd1:	lea    0x69b4(%rip),%rcx        # 2c78c <png_sRGB_delta>
   25dd8:	movzbl (%rdx,%rcx,1),%ecx
   25ddc:	and    $0x7fff,%eax
   25de1:	imul   %eax,%ecx
   25de4:	shr    $0xc,%ecx
   25de7:	lea    0x659e(%rip),%rax        # 2c38c <png_sRGB_base>
   25dee:	movzwl (%rax,%rdx,2),%eax
   25df2:	add    %ecx,%eax
   25df4:	shr    $0x8,%eax
   25df7:	leaveq 
   25df8:	retq   
   25df9:	nopl   0x0(%rax)

0000000000025e00 <png_write_image_8bit>:
   25e00:	push   %rbp
   25e01:	mov    %rsp,%rbp
   25e04:	sub    $0x70,%rsp
   25e08:	mov    %rbx,-0x48(%rbp)
   25e0c:	mov    %r12,-0x50(%rbp)
   25e10:	mov    %r13,-0x58(%rbp)
   25e14:	mov    %r14,-0x60(%rbp)
   25e18:	mov    %r15,-0x68(%rbp)
   25e1c:	mov    %rdi,-0x28(%rbp)
   25e20:	mov    (%rdi),%rdx
   25e23:	mov    (%rdx),%rax
   25e26:	mov    (%rax),%rsi
   25e29:	mov    %rsi,-0x30(%rbp)
   25e2d:	mov    0x28(%rdi),%r12
   25e31:	mov    0x38(%rdi),%rbx
   25e35:	mov    0x10(%rdx),%r8d
   25e39:	mov    $0x1,%r13d
   25e3f:	mov    0x14(%rdx),%eax
   25e42:	mov    %rax,%rcx
   25e45:	and    $0x2,%ecx
   25e48:	test   %ecx,%ecx
   25e4a:	jne    25e53 <png_write_image_8bit+0x53>
   25e4c:	mov    $0x2,%ecx
   25e51:	jmp    25e5e <png_write_image_8bit+0x5e>
   25e53:	mov    $0x4,%ecx
   25e58:	mov    $0x3,%r13d
   25e5e:	mov    %r13,-0x40(%rbp)
   25e62:	mov    %rax,%rdi
   25e65:	and    $0x1,%edi
   25e68:	test   %edi,%edi
   25e6a:	jne    25e97 <png_write_image_8bit+0x97>
   25e6c:	lea    0x6919(%rip),%r10        # 2c78c <png_sRGB_delta>
   25e73:	mov    %r10,-0x40(%rbp)
   25e77:	lea    0x650e(%rip),%r9        # 2c38c <png_sRGB_base>
   25e7e:	mov    %r9,-0x38(%rbp)
   25e82:	imul   0xc(%rdx),%r13d
   25e87:	mov    %r13d,%eax
   25e8a:	lea    (%rbx,%rax,1),%r13
   25e8e:	mov    %rsi,%rdi
   25e91:	mov    -0x28(%rbp),%r14
   25e95:	jmp    25f0f <png_write_image_8bit+0x10f>
   25e97:	and    $0x20,%eax
   25e9a:	test   %eax,%eax
   25e9c:	jne    25f2f <png_write_image_8bit+0x12f>
   25ea2:	mov    %r13,%rax
   25ea5:	jmpq   25f3e <png_write_image_8bit+0x13e>
   25eaa:	movzwl (%rdx),%eax
   25ead:	mov    %rax,%rcx
   25eb0:	shl    $0x8,%ecx
   25eb3:	sub    %eax,%ecx
   25eb5:	mov    %rcx,%rax
   25eb8:	shr    $0xf,%eax
   25ebb:	mov    %eax,%r11d
   25ebe:	movzbl (%r11,%r10,1),%eax
   25ec3:	and    $0x7fff,%ecx
   25ec9:	imul   %ecx,%eax
   25ecc:	shr    $0xc,%eax
   25ecf:	movzwl (%r9,%r11,2),%ecx
   25ed4:	add    %ecx,%eax
   25ed6:	shr    $0x8,%eax
   25ed9:	mov    %al,(%rsi)
   25edb:	add    $0x2,%rdx
   25edf:	add    $0x1,%rsi
   25ee3:	cmp    %r13,%rsi
   25ee6:	jb     25eaa <png_write_image_8bit+0xaa>
   25ee8:	mov    %r8,%r15
   25eeb:	mov    %rbx,%rsi
   25eee:	callq  5380 <png_write_row@plt>
   25ef3:	lea    -0x1(%r15),%r8d
   25ef7:	movzwl 0x30(%r14),%eax
   25efc:	and    $0xfffffffffffffffe,%rax
   25f00:	add    %rax,%r12
   25f03:	mov    -0x30(%rbp),%rdi
   25f07:	mov    -0x38(%rbp),%r9
   25f0b:	mov    -0x40(%rbp),%r10
   25f0f:	test   %r8d,%r8d
   25f12:	jne    25f5f <png_write_image_8bit+0x15f>
   25f14:	mov    -0x68(%rbp),%r15
   25f18:	mov    -0x60(%rbp),%r14
   25f1c:	mov    -0x58(%rbp),%r13
   25f20:	mov    -0x50(%rbp),%r12
   25f24:	mov    -0x48(%rbp),%rbx
   25f28:	mov    $0x1,%eax
   25f2d:	leaveq 
   25f2e:	retq   
   25f2f:	mov    $0xffffffffffffffff,%rax
   25f36:	add    $0x1,%rbx
   25f3a:	add    $0x2,%r12
   25f3e:	mov    %rbx,-0x20(%rbp)
   25f42:	movslq %eax,%rax
   25f45:	mov    %rax,-0x18(%rbp)
   25f49:	imul   0xc(%rdx),%ecx
   25f4d:	mov    %ecx,%ecx
   25f4f:	lea    (%rbx,%rcx,1),%r15
   25f53:	mov    %r15,-0x38(%rbp)
   25f57:	xor    %r14d,%r14d
   25f5a:	jmpq   25fe1 <png_write_image_8bit+0x1e1>
   25f5f:	mov    %rbx,%rsi
   25f62:	mov    %r12,%rdx
   25f65:	jmpq   25ee3 <png_write_image_8bit+0xe3>
   25f6a:	add    $0x2,%r12
   25f6e:	add    $0x1,%rbx
   25f72:	movzwl (%r12),%edi
   25f77:	mov    %r15,%rsi
   25f7a:	mov    %r14,%rdx
   25f7d:	callq  25d90 <png_unpremultiply>
   25f82:	mov    %al,(%rbx)
   25f84:	add    $0xffffffff,%r13d
   25f88:	test   %r13d,%r13d
   25f8b:	jg     25f6a <png_write_image_8bit+0x16a>
   25f8d:	add    $0x4,%r12
   25f91:	add    $0x2,%rbx
   25f95:	xor    %r14d,%r14d
   25f98:	mov    -0x40(%rbp),%r13
   25f9c:	mov    -0x18(%rbp),%rax
   25fa0:	mov    -0x38(%rbp),%r15
   25fa4:	cmp    %r15,%rbx
   25fa7:	jb     26001 <png_write_image_8bit+0x201>
   25fa9:	mov    %rax,%r12
   25fac:	mov    -0x28(%rbp),%rbx
   25fb0:	mov    0x38(%rbx),%rsi
   25fb4:	mov    -0x30(%rbp),%rdi
   25fb8:	callq  5380 <png_write_row@plt>
   25fbd:	mov    -0x10(%rbp),%rax
   25fc1:	lea    -0x1(%rax),%r8d
   25fc5:	movzwl 0x30(%rbx),%eax
   25fc9:	and    $0xfffffffffffffffe,%rax
   25fcd:	mov    -0x8(%rbp),%rcx
   25fd1:	add    %rcx,%rax
   25fd4:	mov    %r12,%rcx
   25fd7:	mov    %rax,%r12
   25fda:	mov    %rcx,%rax
   25fdd:	mov    -0x20(%rbp),%rbx
   25fe1:	test   %r8d,%r8d
   25fe4:	jne    26042 <png_write_image_8bit+0x242>
   25fe6:	mov    -0x68(%rbp),%r15
   25fea:	mov    -0x60(%rbp),%r14
   25fee:	mov    -0x58(%rbp),%r13
   25ff2:	mov    -0x50(%rbp),%r12
   25ff6:	mov    -0x48(%rbp),%rbx
   25ffa:	mov    $0x1,%eax
   25fff:	leaveq 
   26000:	retq   
   26001:	movzwl (%r12,%rax,2),%r15d
   26006:	mov    %r15,%rcx
   26009:	shl    $0x8,%ecx
   2600c:	sub    %r15d,%ecx
   2600f:	add    $0x807f,%ecx
   26015:	shr    $0x10,%ecx
   26018:	mov    %cl,(%rbx,%rax,1)
   2601b:	test   %cl,%cl
   2601d:	je     25f72 <png_write_image_8bit+0x172>
   26023:	cmp    $0xfe,%cl
   26026:	ja     25f72 <png_write_image_8bit+0x172>
   2602c:	mov    %r15,%rax
   2602f:	shr    %eax
   26031:	add    $0x7f7f8080,%eax
   26036:	cltd   
   26037:	idiv   %r15d
   2603a:	mov    %rax,%r14
   2603d:	jmpq   25f72 <png_write_image_8bit+0x172>
   26042:	mov    %r8,-0x10(%rbp)
   26046:	mov    %r12,-0x8(%rbp)
   2604a:	jmpq   25fa4 <png_write_image_8bit+0x1a4>
   2604f:	nop

0000000000026050 <png_image_set_PLTE>:
   26050:	push   %rbp
   26051:	mov    %rsp,%rbp
   26054:	sub    $0x4d0,%rsp
   2605b:	mov    %r15,-0x30(%rbp)
   2605f:	mov    %rbx,-0x10(%rbp)
   26063:	mov    %r12,-0x18(%rbp)
   26067:	mov    %r13,-0x20(%rbp)
   2606b:	mov    %r14,-0x28(%rbp)
   2606f:	mov    0x18(%rdi),%rax
   26073:	mov    %rax,-0xc0(%rbp)
   2607a:	mov    $0x100,%edx
   2607f:	mov    (%rdi),%rsi
   26082:	mov    %rsi,-0x8(%rbp)
   26086:	mov    0x1c(%rsi),%r12d
   2608a:	cmp    $0x100,%r12d
   26091:	jbe    26096 <png_image_set_PLTE+0x46>
   26093:	mov    %rdx,%r12
   26096:	xor    %r14d,%r14d
   26099:	mov    %r14,-0xa0(%rbp)
   260a0:	mov    $0x1,%eax
   260a5:	mov    $0x4,%ecx
   260aa:	mov    $0x2,%ebx
   260af:	mov    0x14(%rsi),%r15d
   260b3:	mov    %r15,%rsi
   260b6:	and    $0x20,%esi
   260b9:	test   %esi,%esi
   260bb:	jne    260f5 <png_image_set_PLTE+0xa5>
   260bd:	mov    %rax,%r8
   260c0:	mov    %rbx,%rdi
   260c3:	mov    %r14,%rsi
   260c6:	mov    %rsi,%r13
   260c9:	mov    %rdi,-0x68(%rbp)
   260cd:	mov    %r8,-0x90(%rbp)
   260d4:	mov    %rax,-0x80(%rbp)
   260d8:	mov    %rsi,-0x70(%rbp)
   260dc:	mov    %r13,-0xb8(%rbp)
   260e3:	mov    %r15,%rax
   260e6:	and    $0x10,%eax
   260e9:	test   %eax,%eax
   260eb:	jne    26111 <png_image_set_PLTE+0xc1>
   260ed:	mov    %rcx,%rax
   260f0:	mov    %r14,%rcx
   260f3:	jmp    2611d <png_image_set_PLTE+0xcd>
   260f5:	mov    %r15,%rsi
   260f8:	and    $0x1,%esi
   260fb:	test   %esi,%esi
   260fd:	jne    261d7 <png_image_set_PLTE+0x187>
   26103:	mov    %rax,%r8
   26106:	mov    %rbx,%rdi
   26109:	mov    %r14,%rsi
   2610c:	mov    %rsi,%r13
   2610f:	jmp    260c9 <png_image_set_PLTE+0x79>
   26111:	mov    %r14,%rax
   26114:	mov    %rbx,%r14
   26117:	mov    %rax,%rbx
   2611a:	mov    %rbx,%rax
   2611d:	mov    %rcx,-0x48(%rbp)
   26121:	mov    %rax,-0x50(%rbp)
   26125:	lea    -0x1d0(%rbp),%rdi
   2612c:	mov    $0xff,%esi
   26131:	callq  5350 <memset@plt>
   26136:	lea    -0x4d0(%rbp),%rdi
   2613d:	mov    $0x300,%edx
   26142:	xor    %esi,%esi
   26144:	callq  5350 <memset@plt>
   26149:	lea    0x623c(%rip),%rax        # 2c38c <png_sRGB_base>
   26150:	mov    %rax,-0x60(%rbp)
   26154:	lea    0x6631(%rip),%rax        # 2c78c <png_sRGB_delta>
   2615b:	mov    %rax,-0x58(%rbp)
   2615f:	lea    0x0(%r13,%r14,1),%eax
   26164:	movslq %eax,%rax
   26167:	mov    %rax,-0x78(%rbp)
   2616b:	lea    0x0(%r13,%rbx,1),%eax
   26170:	movslq %eax,%rsi
   26173:	mov    %rsi,-0x88(%rbp)
   2617a:	mov    %r15,%r8
   2617d:	and    $0x3,%r8d
   26181:	mov    %r8,-0xc8(%rbp)
   26188:	lea    0x1(%r8),%r14d
   2618c:	mov    %r14,-0x40(%rbp)
   26190:	mov    %r15,%rcx
   26193:	and    $0x4,%ecx
   26196:	mov    %rcx,-0xd0(%rbp)
   2619d:	mov    %r14,%r10
   261a0:	and    $0x1,%r10d
   261a4:	mov    %r10,-0xb0(%rbp)
   261ab:	mov    $0x3,%eax
   261b0:	mov    %rax,-0x98(%rbp)
   261b7:	xor    %ebx,%ebx
   261b9:	mov    -0x80(%rbp),%rdx
   261bd:	mov    -0x90(%rbp),%rdi
   261c4:	mov    -0x50(%rbp),%r9
   261c8:	mov    -0xc0(%rbp),%r11
   261cf:	mov    %rbx,%rax
   261d2:	mov    %rax,%r15
   261d5:	jmp    26252 <png_image_set_PLTE+0x202>
   261d7:	mov    %rax,%r13
   261da:	mov    %rcx,%rdi
   261dd:	mov    %rbx,%rax
   261e0:	mov    %rax,%rsi
   261e3:	mov    %r14,%r8
   261e6:	jmpq   260c9 <png_image_set_PLTE+0x79>
   261eb:	pushq  -0xa0(%rbp)
   261f1:	popq   -0xa8(%rbp)
   261f7:	mov    -0xa8(%rbp),%rdi
   261fe:	movzbl (%rax,%rdi,1),%edi
   26202:	mov    %dil,-0x1d0(%rbp,%rcx,1)
   2620a:	cmp    $0xfe,%dil
   2620e:	ja     26213 <png_image_set_PLTE+0x1c3>
   26210:	mov    %r15,%rbx
   26213:	movzbl (%rax,%rsi,1),%edi
   26217:	lea    (%rcx,%rcx,2),%rcx
   2621b:	mov    %dil,-0x4ce(%rbp,%rcx,1)
   26223:	movzbl (%rax,%rdx,1),%edi
   26227:	mov    %dil,-0x4cf(%rbp,%rcx,1)
   2622f:	mov    -0x78(%rbp),%rdi
   26233:	movzbl (%rax,%rdi,1),%eax
   26237:	mov    %al,-0x4d0(%rbp,%rcx,1)
   2623e:	mov    %r15,%rax
   26241:	mov    -0xd0(%rbp),%rcx
   26248:	xor    %r15d,%r15d
   2624b:	mov    -0x90(%rbp),%rdi
   26252:	cmp    %r12d,%eax
   26255:	jl     262b1 <png_image_set_PLTE+0x261>
   26257:	mov    -0x8(%rbp),%r14
   2625b:	mov    (%r14),%rax
   2625e:	mov    (%rax),%rdi
   26261:	mov    0x8(%rax),%rsi
   26265:	mov    %r15,%r13
   26268:	mov    %r12,%rcx
   2626b:	lea    -0x4d0(%rbp),%rdx
   26272:	callq  5530 <png_set_PLTE@plt>
   26277:	test   %ebx,%ebx
   26279:	jle    26297 <png_image_set_PLTE+0x247>
   2627b:	mov    (%r14),%rax
   2627e:	mov    (%rax),%rdi
   26281:	mov    0x8(%rax),%rsi
   26285:	mov    %rbx,%rcx
   26288:	mov    %r13,%r8
   2628b:	lea    -0x1d0(%rbp),%rdx
   26292:	callq  54f0 <png_set_tRNS@plt>
   26297:	mov    %r12d,0x1c(%r14)
   2629b:	mov    -0x28(%rbp),%r14
   2629f:	mov    -0x20(%rbp),%r13
   262a3:	mov    -0x18(%rbp),%r12
   262a7:	mov    -0x10(%rbp),%rbx
   262ab:	mov    -0x30(%rbp),%r15
   262af:	leaveq 
   262b0:	retq   
   262b1:	test   %ecx,%ecx
   262b3:	movslq %eax,%rcx
   262b6:	lea    0x1(%rax),%r15d
   262ba:	jne    262f6 <png_image_set_PLTE+0x2a6>
   262bc:	imul   %r14d,%eax
   262c0:	cmp    $0x2,%r14d
   262c4:	mov    %eax,%eax
   262c6:	lea    (%rax,%r11,1),%rax
   262ca:	jbe    263cb <png_image_set_PLTE+0x37b>
   262d0:	cmp    $0x3,%r14d
   262d4:	je     26213 <png_image_set_PLTE+0x1c3>
   262da:	cmp    $0x4,%r14d
   262de:	je     263f0 <png_image_set_PLTE+0x3a0>
   262e4:	mov    %r15,%rax
   262e7:	mov    -0xd0(%rbp),%rcx
   262ee:	xor    %r15d,%r15d
   262f1:	jmpq   26252 <png_image_set_PLTE+0x202>
   262f6:	imul   %r14d,%eax
   262fa:	test   %r10d,%r10d
   262fd:	mov    %eax,%eax
   262ff:	lea    (%r11,%rax,2),%rax
   26303:	jne    2640a <png_image_set_PLTE+0x3ba>
   26309:	test   %r13d,%r13d
   2630c:	jle    26311 <png_image_set_PLTE+0x2c1>
   2630e:	xor    %r8d,%r8d
   26311:	mov    %r8d,%edx
   26314:	movzwl (%rax,%rdx,2),%r13d
   26319:	mov    %r13,%rdx
   2631c:	shl    $0x8,%edx
   2631f:	sub    %r13d,%edx
   26322:	lea    0x807f(%rdx),%edi
   26328:	shr    $0x10,%edi
   2632b:	test   %dil,%dil
   2632e:	jne    2647e <png_image_set_PLTE+0x42e>
   26334:	mov    %r15,%r8
   26337:	mov    %rax,%r15
   2633a:	xor    %edx,%edx
   2633c:	cmp    $0xfe,%dil
   26340:	mov    %dil,-0x1d0(%rbp,%rcx,1)
   26348:	ja     2634d <png_image_set_PLTE+0x2fd>
   2634a:	mov    %r8,%rbx
   2634d:	cmp    $0x2,%r14d
   26351:	ja     26495 <png_image_set_PLTE+0x445>
   26357:	mov    -0x70(%rbp),%rax
   2635b:	movzwl (%r15,%rax,1),%edi
   26360:	mov    %r13,%rsi
   26363:	mov    %r8,%r13
   26366:	mov    %rcx,%r15
   26369:	callq  25d90 <png_unpremultiply>
   2636e:	lea    (%r15,%r15,2),%rcx
   26372:	mov    %al,-0x4cf(%rbp,%rcx,1)
   26379:	mov    %al,-0x4d0(%rbp,%rcx,1)
   26380:	mov    %al,-0x4ce(%rbp,%rcx,1)
   26387:	mov    %r13,%rax
   2638a:	mov    -0x88(%rbp),%rsi
   26391:	mov    -0xb0(%rbp),%r10
   26398:	mov    -0xc8(%rbp),%r8
   2639f:	mov    -0xb8(%rbp),%r13
   263a6:	mov    -0xd0(%rbp),%rcx
   263ad:	xor    %r15d,%r15d
   263b0:	mov    -0x80(%rbp),%rdx
   263b4:	mov    -0x90(%rbp),%rdi
   263bb:	mov    -0x50(%rbp),%r9
   263bf:	mov    -0xc0(%rbp),%r11
   263c6:	jmpq   26252 <png_image_set_PLTE+0x202>
   263cb:	test   %r8d,%r8d
   263ce:	je     26565 <png_image_set_PLTE+0x515>
   263d4:	cmp    $0x2,%r14d
   263d8:	je     2654d <png_image_set_PLTE+0x4fd>
   263de:	mov    %r15,%rax
   263e1:	mov    -0xd0(%rbp),%rcx
   263e8:	xor    %r15d,%r15d
   263eb:	jmpq   26252 <png_image_set_PLTE+0x202>
   263f0:	test   %r13d,%r13d
   263f3:	jg     261eb <png_image_set_PLTE+0x19b>
   263f9:	pushq  -0x98(%rbp)
   263ff:	popq   -0xa8(%rbp)
   26405:	jmpq   261f7 <png_image_set_PLTE+0x1a7>
   2640a:	cmp    $0x2,%r14d
   2640e:	ja     26595 <png_image_set_PLTE+0x545>
   26414:	movzwl (%rax),%edx
   26417:	mov    %rdx,%rax
   2641a:	shl    $0x8,%eax
   2641d:	sub    %edx,%eax
   2641f:	mov    %rax,%rdx
   26422:	shr    $0xf,%edx
   26425:	movslq %edx,%rdi
   26428:	mov    -0x58(%rbp),%rdx
   2642c:	movzbl (%rdi,%rdx,1),%edx
   26430:	and    $0x7fff,%eax
   26435:	imul   %eax,%edx
   26438:	shr    $0xc,%edx
   2643b:	mov    -0x60(%rbp),%rax
   2643f:	movzwl (%rax,%rdi,2),%eax
   26443:	add    %edx,%eax
   26445:	shr    $0x8,%eax
   26448:	lea    (%rcx,%rcx,2),%rcx
   2644c:	mov    %al,-0x4cf(%rbp,%rcx,1)
   26453:	mov    %al,-0x4d0(%rbp,%rcx,1)
   2645a:	mov    %al,-0x4ce(%rbp,%rcx,1)
   26461:	mov    %r15,%rax
   26464:	mov    -0xd0(%rbp),%rcx
   2646b:	xor    %r15d,%r15d
   2646e:	mov    -0x80(%rbp),%rdx
   26472:	mov    -0x90(%rbp),%rdi
   26479:	jmpq   26252 <png_image_set_PLTE+0x202>
   2647e:	cmp    $0xfe,%dil
   26482:	jbe    2667d <png_image_set_PLTE+0x62d>
   26488:	mov    %r15,%r8
   2648b:	mov    %rax,%r15
   2648e:	xor    %edx,%edx
   26490:	jmpq   2633c <png_image_set_PLTE+0x2ec>
   26495:	movzwl (%r15,%rsi,2),%edi
   2649a:	mov    %r13,%rsi
   2649d:	mov    %rdx,%rax
   264a0:	mov    %rbx,-0x38(%rbp)
   264a4:	mov    %r8,-0xa8(%rbp)
   264ab:	mov    %rdx,%rbx
   264ae:	mov    %rax,%rdx
   264b1:	mov    %rcx,%r14
   264b4:	callq  25d90 <png_unpremultiply>
   264b9:	lea    (%r14,%r14,2),%r14
   264bd:	mov    %al,-0x4ce(%rbp,%r14,1)
   264c5:	mov    -0x68(%rbp),%rax
   264c9:	movzwl (%r15,%rax,1),%edi
   264ce:	mov    %r13,%rsi
   264d1:	mov    %rbx,%rdx
   264d4:	callq  25d90 <png_unpremultiply>
   264d9:	mov    %al,-0x4cf(%rbp,%r14,1)
   264e1:	mov    -0x78(%rbp),%rax
   264e5:	movzwl (%r15,%rax,2),%edi
   264ea:	mov    %rbx,%rdx
   264ed:	mov    %r13,%rsi
   264f0:	callq  25d90 <png_unpremultiply>
   264f5:	mov    %al,-0x4d0(%rbp,%r14,1)
   264fd:	mov    -0x40(%rbp),%r14
   26501:	mov    -0xa8(%rbp),%rax
   26508:	mov    -0x38(%rbp),%rbx
   2650c:	mov    -0x88(%rbp),%rsi
   26513:	mov    -0xb0(%rbp),%r10
   2651a:	mov    -0xc8(%rbp),%r8
   26521:	mov    -0xb8(%rbp),%r13
   26528:	mov    -0xd0(%rbp),%rcx
   2652f:	xor    %r15d,%r15d
   26532:	mov    -0x80(%rbp),%rdx
   26536:	mov    -0x90(%rbp),%rdi
   2653d:	mov    -0x50(%rbp),%r9
   26541:	mov    -0xc0(%rbp),%r11
   26548:	jmpq   26252 <png_image_set_PLTE+0x202>
   2654d:	movzbl (%rdi,%rax,1),%edx
   26551:	mov    %dl,-0x1d0(%rbp,%rcx,1)
   26558:	cmp    $0xfe,%dl
   2655b:	jbe    2669d <png_image_set_PLTE+0x64d>
   26561:	mov    -0x80(%rbp),%rdx
   26565:	movzbl (%rax,%r13,1),%eax
   2656a:	lea    (%rcx,%rcx,2),%rcx
   2656e:	mov    %al,-0x4cf(%rbp,%rcx,1)
   26575:	mov    %al,-0x4d0(%rbp,%rcx,1)
   2657c:	mov    %al,-0x4ce(%rbp,%rcx,1)
   26583:	mov    %r15,%rax
   26586:	mov    -0xd0(%rbp),%rcx
   2658d:	xor    %r15d,%r15d
   26590:	jmpq   26252 <png_image_set_PLTE+0x202>
   26595:	movzwl (%rax,%r9,1),%esi
   2659a:	mov    %rsi,%rdx
   2659d:	shl    $0x8,%edx
   265a0:	sub    %esi,%edx
   265a2:	mov    %rdx,%rsi
   265a5:	shr    $0xf,%esi
   265a8:	movslq %esi,%rdi
   265ab:	mov    -0x58(%rbp),%r9
   265af:	movzbl (%rdi,%r9,1),%esi
   265b4:	and    $0x7fff,%edx
   265ba:	imul   %edx,%esi
   265bd:	shr    $0xc,%esi
   265c0:	mov    -0x60(%rbp),%r13
   265c4:	movzwl 0x0(%r13,%rdi,2),%edx
   265ca:	add    %esi,%edx
   265cc:	shr    $0x8,%edx
   265cf:	lea    (%rcx,%rcx,2),%rdi
   265d3:	mov    %dl,-0x4ce(%rbp,%rdi,1)
   265da:	movzwl 0x2(%rax),%ecx
   265de:	mov    %rcx,%rdx
   265e1:	shl    $0x8,%edx
   265e4:	sub    %ecx,%edx
   265e6:	mov    %rdx,%rcx
   265e9:	shr    $0xf,%ecx
   265ec:	movslq %ecx,%rsi
   265ef:	movzbl (%rsi,%r9,1),%ecx
   265f4:	and    $0x7fff,%edx
   265fa:	imul   %edx,%ecx
   265fd:	shr    $0xc,%ecx
   26600:	movzwl 0x0(%r13,%rsi,2),%edx
   26606:	add    %edx,%ecx
   26608:	shr    $0x8,%ecx
   2660b:	mov    %cl,-0x4cf(%rbp,%rdi,1)
   26612:	mov    -0x48(%rbp),%rcx
   26616:	movzwl (%rax,%rcx,1),%eax
   2661a:	mov    %rax,%rcx
   2661d:	shl    $0x8,%ecx
   26620:	sub    %eax,%ecx
   26622:	mov    %rcx,%rax
   26625:	shr    $0xf,%eax
   26628:	movslq %eax,%rdx
   2662b:	movzbl (%rdx,%r9,1),%eax
   26630:	and    $0x7fff,%ecx
   26636:	imul   %ecx,%eax
   26639:	shr    $0xc,%eax
   2663c:	movzwl 0x0(%r13,%rdx,2),%ecx
   26642:	add    %ecx,%eax
   26644:	shr    $0x8,%eax
   26647:	mov    %al,-0x4d0(%rbp,%rdi,1)
   2664e:	mov    %r15,%rax
   26651:	mov    -0x88(%rbp),%rsi
   26658:	mov    -0xb8(%rbp),%r13
   2665f:	mov    -0xd0(%rbp),%rcx
   26666:	xor    %r15d,%r15d
   26669:	mov    -0x80(%rbp),%rdx
   2666d:	mov    -0x90(%rbp),%rdi
   26674:	mov    -0x50(%rbp),%r9
   26678:	jmpq   26252 <png_image_set_PLTE+0x202>
   2667d:	mov    %r13,%rdx
   26680:	shr    %edx
   26682:	add    $0x7f7f8080,%edx
   26688:	mov    %r15,%r8
   2668b:	mov    %rax,%r15
   2668e:	mov    %rdx,%rax
   26691:	cltd   
   26692:	idiv   %r13d
   26695:	mov    %rax,%rdx
   26698:	jmpq   2633c <png_image_set_PLTE+0x2ec>
   2669d:	mov    -0x80(%rbp),%rdx
   266a1:	mov    %r15,%rbx
   266a4:	jmpq   26565 <png_image_set_PLTE+0x515>
   266a9:	nopl   0x0(%rax)

00000000000266b0 <png_image_write_main>:
   266b0:	push   %rbp
   266b1:	mov    %rsp,%rbp
   266b4:	sub    $0x70,%rsp
   266b8:	mov    %r14,-0x20(%rbp)
   266bc:	mov    %r13,-0x18(%rbp)
   266c0:	mov    %r12,-0x10(%rbp)
   266c4:	mov    %rbx,-0x8(%rbp)
   266c8:	mov    %r15,-0x28(%rbp)
   266cc:	mov    (%rdi),%r12
   266cf:	mov    (%r12),%rcx
   266d3:	mov    (%rcx),%rax
   266d6:	mov    %rax,-0x60(%rbp)
   266da:	mov    0x8(%rcx),%rcx
   266de:	mov    %rcx,-0x68(%rbp)
   266e2:	xor    %esi,%esi
   266e4:	mov    %rsi,-0x58(%rbp)
   266e8:	mov    $0x1,%r14d
   266ee:	mov    %r14,-0x50(%rbp)
   266f2:	mov    0x14(%r12),%ebx
   266f7:	mov    %rbx,%r15
   266fa:	and    $0x8,%r15d
   266fe:	test   %r15d,%r15d
   26701:	jle    26764 <png_image_write_main+0xb4>
   26703:	mov    %rsi,%rdx
   26706:	mov    %r14,%rcx
   26709:	mov    %rdx,-0x40(%rbp)
   2670d:	test   %rcx,%rcx
   26710:	je     26776 <png_image_write_main+0xc6>
   26712:	mov    %rsi,%rcx
   26715:	mov    %rcx,-0x30(%rbp)
   26719:	test   %edx,%edx
   2671b:	jg     26785 <png_image_write_main+0xd5>
   2671d:	mov    %rsi,%r14
   26720:	mov    %rdi,%r13
   26723:	mov    %rax,%rdi
   26726:	callq  5050 <png_set_benign_errors@plt>
   2672b:	mov    0x14(%r12),%eax
   26730:	mov    %rax,%rcx
   26733:	and    $0x8,%ecx
   26736:	test   %ecx,%ecx
   26738:	je     26792 <png_image_write_main+0xe2>
   2673a:	mov    $0x1,%ecx
   2673f:	mov    $0x7fffffff,%eax
   26744:	xor    %edx,%edx
   26746:	mov    0xc(%r12),%esi
   2674b:	div    %ecx
   2674d:	cmp    %esi,%eax
   2674f:	jae    2679a <png_image_write_main+0xea>
   26751:	mov    (%r12),%rax
   26755:	mov    (%rax),%rdi
   26758:	lea    0x9589(%rip),%rsi        # 2fce8 <fourbppswaptable+0x69c>
   2675f:	callq  5470 <png_error@plt>
   26764:	mov    %rbx,%rcx
   26767:	and    $0x4,%ecx
   2676a:	test   %ecx,%ecx
   2676c:	jne    267cd <png_image_write_main+0x11d>
   2676e:	mov    %rsi,%rcx
   26771:	mov    %rcx,%rdx
   26774:	jmp    26709 <png_image_write_main+0x59>
   26776:	mov    %rbx,%rcx
   26779:	and    $0x1,%ecx
   2677c:	test   %ecx,%ecx
   2677e:	jne    267d8 <png_image_write_main+0x128>
   26780:	mov    %rsi,%rcx
   26783:	jmp    26715 <png_image_write_main+0x65>
   26785:	movslq 0x20(%rdi),%rcx
   26789:	test   %ecx,%ecx
   2678b:	je     26720 <png_image_write_main+0x70>
   2678d:	mov    %rsi,%r14
   26790:	jmp    26720 <png_image_write_main+0x70>
   26792:	and    $0x3,%eax
   26795:	lea    0x1(%rax),%ecx
   26798:	jmp    2673f <png_image_write_main+0x8f>
   2679a:	imul   0xc(%r12),%ecx
   267a0:	movslq 0x10(%r13),%rax
   267a4:	test   %eax,%eax
   267a6:	jne    267ac <png_image_write_main+0xfc>
   267a8:	mov    %ecx,0x10(%r13)
   267ac:	movslq 0x10(%r13),%rax
   267b0:	test   %eax,%eax
   267b2:	jns    267b6 <png_image_write_main+0x106>
   267b4:	neg    %eax
   267b6:	cmp    %eax,%ecx
   267b8:	jbe    267e0 <png_image_write_main+0x130>
   267ba:	mov    (%r12),%rax
   267be:	mov    (%rax),%rdi
   267c1:	lea    0x9502(%rip),%rsi        # 2fcca <fourbppswaptable+0x67e>
   267c8:	callq  5470 <png_error@plt>
   267cd:	mov    %rsi,%rcx
   267d0:	mov    %r14,%rdx
   267d3:	jmpq   26709 <png_image_write_main+0x59>
   267d8:	mov    %r14,%rcx
   267db:	jmpq   26715 <png_image_write_main+0x65>
   267e0:	mov    $0xffffffff,%eax
   267e5:	xor    %edx,%edx
   267e7:	mov    0x10(%r12),%esi
   267ec:	div    %ecx
   267ee:	cmp    %esi,%eax
   267f0:	jb     268ba <png_image_write_main+0x20a>
   267f6:	mov    $0x3,%r9d
   267fc:	mov    $0x8,%r8d
   26802:	mov    $0x4,%eax
   26807:	mov    $0x2,%esi
   2680c:	test   %r15d,%r15d
   2680f:	jne    268cd <png_image_write_main+0x21d>
   26815:	mov    0xc(%r12),%edx
   2681a:	mov    0x10(%r12),%ecx
   2681f:	test   %r14d,%r14d
   26822:	jle    2682a <png_image_write_main+0x17a>
   26824:	mov    $0x10,%r8d
   2682a:	mov    %rbx,%rdi
   2682d:	and    $0x2,%edi
   26830:	test   %edi,%edi
   26832:	jne    26836 <png_image_write_main+0x186>
   26834:	xor    %esi,%esi
   26836:	mov    %rbx,%rdi
   26839:	and    $0x1,%edi
   2683c:	test   %edi,%edi
   2683e:	jne    26842 <png_image_write_main+0x192>
   26840:	xor    %eax,%eax
   26842:	sub    $0x10,%rsp
   26846:	movl   $0x0,(%rsp)
   2684d:	movl   $0x0,0x8(%rsp)
   26855:	movl   $0x0,0x10(%rsp)
   2685d:	lea    (%rax,%rsi,1),%r9d
   26861:	mov    -0x60(%rbp),%rax
   26865:	mov    %rax,%rdi
   26868:	mov    -0x68(%rbp),%r10
   2686c:	mov    %r10,%rsi
   2686f:	mov    %r15,-0x48(%rbp)
   26873:	mov    %r13,-0x38(%rbp)
   26877:	mov    %r10,%r13
   2687a:	mov    %rax,%r15
   2687d:	callq  5460 <png_set_IHDR@plt>
   26882:	add    $0x10,%rsp
   26886:	mov    %r13,%rcx
   26889:	mov    -0x38(%rbp),%r13
   2688d:	test   %r14d,%r14d
   26890:	jg     268ed <png_image_write_main+0x23d>
   26892:	mov    0x18(%r12),%eax
   26897:	and    $0x1,%eax
   2689a:	test   %eax,%eax
   2689c:	je     26918 <png_image_write_main+0x268>
   2689e:	mov    $0xb18f,%edx
   268a3:	mov    %r15,%rdi
   268a6:	mov    %rcx,%rsi
   268a9:	mov    %r14,-0x38(%rbp)
   268ad:	mov    %rcx,%r14
   268b0:	callq  5290 <png_set_gAMA_fixed@plt>
   268b5:	jmpq   2697c <png_image_write_main+0x2cc>
   268ba:	mov    (%r12),%rax
   268be:	mov    (%rax),%rdi
   268c1:	lea    0x93eb(%rip),%rsi        # 2fcb3 <fourbppswaptable+0x667>
   268c8:	callq  5470 <png_error@plt>
   268cd:	mov    0x18(%r13),%rcx
   268d1:	test   %rcx,%rcx
   268d4:	jne    269ab <png_image_write_main+0x2fb>
   268da:	mov    (%r12),%rax
   268de:	mov    (%rax),%rdi
   268e1:	lea    0x941b(%rip),%rsi        # 2fd03 <fourbppswaptable+0x6b7>
   268e8:	callq  5470 <png_error@plt>
   268ed:	mov    $0x186a0,%edx
   268f2:	mov    %r15,%rdi
   268f5:	mov    %rcx,%rsi
   268f8:	mov    %r14,-0x38(%rbp)
   268fc:	mov    %rcx,%r14
   268ff:	callq  5290 <png_set_gAMA_fixed@plt>
   26904:	mov    0x18(%r12),%eax
   26909:	and    $0x1,%eax
   2690c:	test   %eax,%eax
   2690e:	je     2692e <png_image_write_main+0x27e>
   26910:	pushq  -0x50(%rbp)
   26913:	popq   -0x58(%rbp)
   26916:	jmp    2697c <png_image_write_main+0x2cc>
   26918:	mov    %r15,%rdi
   2691b:	mov    %rcx,%rsi
   2691e:	xor    %edx,%edx
   26920:	mov    %r14,-0x38(%rbp)
   26924:	mov    %rcx,%r14
   26927:	callq  50e0 <png_set_sRGB@plt>
   2692c:	jmp    2697c <png_image_write_main+0x2cc>
   2692e:	sub    $0x20,%rsp
   26932:	movl   $0x7530,(%rsp)
   26939:	movl   $0xea60,0x8(%rsp)
   26941:	movl   $0x3a98,0x10(%rsp)
   26949:	movl   $0x1770,0x18(%rsp)
   26951:	mov    $0x7a26,%edx
   26956:	mov    $0x8084,%ecx
   2695b:	mov    $0xfa00,%r8d
   26961:	mov    $0x80e8,%r9d
   26967:	mov    %r15,%rdi
   2696a:	mov    %r14,%rsi
   2696d:	callq  5250 <png_set_cHRM_fixed@plt>
   26972:	add    $0x20,%rsp
   26976:	pushq  -0x50(%rbp)
   26979:	popq   -0x58(%rbp)
   2697c:	mov    %r15,%rdi
   2697f:	mov    %r14,%rsi
   26982:	callq  5340 <png_write_info@plt>
   26987:	mov    -0x58(%rbp),%rax
   2698b:	test   %rax,%rax
   2698e:	je     26998 <png_image_write_main+0x2e8>
   26990:	mov    %r15,%rdi
   26993:	callq  51e0 <png_set_swap@plt>
   26998:	mov    %rbx,%rax
   2699b:	and    $0x10,%eax
   2699e:	test   %eax,%eax
   269a0:	jne    26a1f <png_image_write_main+0x36f>
   269a2:	mov    -0x48(%rbp),%rax
   269a6:	jmpq   26a2e <png_image_write_main+0x37e>
   269ab:	mov    0x1c(%r12),%edi
   269b0:	test   %edi,%edi
   269b2:	je     268da <png_image_write_main+0x22a>
   269b8:	mov    0xc(%r12),%edx
   269bd:	mov    0x10(%r12),%ecx
   269c2:	cmp    $0x10,%edi
   269c5:	jbe    26ae6 <png_image_write_main+0x436>
   269cb:	sub    $0x10,%rsp
   269cf:	movl   $0x0,(%rsp)
   269d6:	movl   $0x0,0x8(%rsp)
   269de:	movl   $0x0,0x10(%rsp)
   269e6:	mov    -0x60(%rbp),%rax
   269ea:	mov    %rax,%rdi
   269ed:	mov    -0x68(%rbp),%r10
   269f1:	mov    %r10,%rsi
   269f4:	mov    %r15,-0x48(%rbp)
   269f8:	mov    %rbx,-0x60(%rbp)
   269fc:	mov    %r10,%rbx
   269ff:	mov    %rax,%r15
   26a02:	callq  5460 <png_set_IHDR@plt>
   26a07:	add    $0x10,%rsp
   26a0b:	mov    %r13,%rdi
   26a0e:	callq  26050 <png_image_set_PLTE>
   26a13:	mov    %rbx,%rcx
   26a16:	mov    -0x60(%rbp),%rbx
   26a1a:	jmpq   2688d <png_image_write_main+0x1dd>
   26a1f:	mov    -0x48(%rbp),%rax
   26a23:	test   %eax,%eax
   26a25:	je     26af7 <png_image_write_main+0x447>
   26a2b:	and    $0xffffffef,%ebx
   26a2e:	mov    %rbx,%rcx
   26a31:	and    $0x20,%ecx
   26a34:	test   %ecx,%ecx
   26a36:	je     26a43 <png_image_write_main+0x393>
   26a38:	test   %eax,%eax
   26a3a:	je     26b1c <png_image_write_main+0x46c>
   26a40:	and    $0xffffffdf,%ebx
   26a43:	test   %eax,%eax
   26a45:	jg     26b41 <png_image_write_main+0x491>
   26a4b:	and    $0xfffffff0,%ebx
   26a4e:	test   %ebx,%ebx
   26a50:	jne    26b66 <png_image_write_main+0x4b6>
   26a56:	mov    -0x40(%rbp),%rbx
   26a5a:	test   %ebx,%ebx
   26a5c:	mov    0x8(%r13),%rdx
   26a60:	movslq 0x10(%r13),%rcx
   26a64:	jle    26a69 <png_image_write_main+0x3b9>
   26a66:	add    %rcx,%rcx
   26a69:	test   %rcx,%rcx
   26a6c:	jns    26a85 <png_image_write_main+0x3d5>
   26a6e:	mov    %rcx,%rsi
   26a71:	neg    %rsi
   26a74:	mov    0x10(%r12),%edi
   26a79:	add    $0xffffffff,%edi
   26a7c:	mov    %edi,%edi
   26a7e:	imul   %rdi,%rsi
   26a82:	add    %rsi,%rdx
   26a85:	mov    %rdx,0x28(%r13)
   26a89:	mov    %rcx,0x30(%r13)
   26a8d:	mov    0x18(%r12),%ecx
   26a92:	and    $0x2,%ecx
   26a95:	test   %ecx,%ecx
   26a97:	je     26ac1 <png_image_write_main+0x411>
   26a99:	xor    %esi,%esi
   26a9b:	mov    %rsi,%rdx
   26a9e:	mov    %r15,%rdi
   26aa1:	mov    %r12,-0x68(%rbp)
   26aa5:	mov    %rax,%r12
   26aa8:	callq  53e0 <png_set_filter@plt>
   26aad:	mov    %r15,%rdi
   26ab0:	mov    $0x3,%esi
   26ab5:	callq  5650 <png_set_compression_level@plt>
   26aba:	mov    %r12,%rax
   26abd:	mov    -0x68(%rbp),%r12
   26ac1:	test   %ebx,%ebx
   26ac3:	jg     26b75 <png_image_write_main+0x4c5>
   26ac9:	test   %eax,%eax
   26acb:	je     26bc0 <png_image_write_main+0x510>
   26ad1:	mov    0x28(%r13),%rax
   26ad5:	mov    0x30(%r13),%r13
   26ad9:	mov    0x10(%r12),%ebx
   26ade:	mov    %rax,%r12
   26ae1:	jmpq   26bde <png_image_write_main+0x52e>
   26ae6:	cmp    $0x4,%edi
   26ae9:	jbe    26c08 <png_image_write_main+0x558>
   26aef:	mov    %rax,%r8
   26af2:	jmpq   269cb <png_image_write_main+0x31b>
   26af7:	mov    %rbx,%rcx
   26afa:	and    $0x2,%ecx
   26afd:	test   %ecx,%ecx
   26aff:	je     26a2b <png_image_write_main+0x37b>
   26b05:	mov    %rax,%r14
   26b08:	mov    %r15,%rdi
   26b0b:	callq  5860 <png_set_bgr@plt>
   26b10:	mov    %r14,%rax
   26b13:	mov    -0x68(%rbp),%r14
   26b17:	jmpq   26a2b <png_image_write_main+0x37b>
   26b1c:	mov    %rbx,%rcx
   26b1f:	and    $0x1,%ecx
   26b22:	test   %ecx,%ecx
   26b24:	je     26a40 <png_image_write_main+0x390>
   26b2a:	mov    %rax,%r14
   26b2d:	mov    %r15,%rdi
   26b30:	callq  50d0 <png_set_swap_alpha@plt>
   26b35:	mov    %r14,%rax
   26b38:	mov    -0x68(%rbp),%r14
   26b3c:	jmpq   26a40 <png_image_write_main+0x390>
   26b41:	mov    0x1c(%r12),%ecx
   26b46:	cmp    $0x10,%ecx
   26b49:	ja     26a4b <png_image_write_main+0x39b>
   26b4f:	mov    %rax,%r14
   26b52:	mov    %r15,%rdi
   26b55:	callq  5580 <png_set_packing@plt>
   26b5a:	mov    %r14,%rax
   26b5d:	mov    -0x68(%rbp),%r14
   26b61:	jmpq   26a4b <png_image_write_main+0x39b>
   26b66:	mov    %r15,%rdi
   26b69:	lea    0x91b7(%rip),%rsi        # 2fd27 <fourbppswaptable+0x6db>
   26b70:	callq  5470 <png_error@plt>
   26b75:	mov    -0x30(%rbp),%rcx
   26b79:	test   %ecx,%ecx
   26b7b:	jle    26ac9 <png_image_write_main+0x419>
   26b81:	mov    %r15,%rdi
   26b84:	mov    %r14,%rsi
   26b87:	callq  50c0 <png_get_rowbytes@plt>
   26b8c:	mov    %rax,%rsi
   26b8f:	mov    %r15,%rdi
   26b92:	callq  5800 <png_malloc@plt>
   26b97:	mov    -0x38(%rbp),%rcx
   26b9b:	test   %ecx,%ecx
   26b9d:	mov    %rax,0x38(%r13)
   26ba1:	jg     26c18 <png_image_write_main+0x568>
   26ba3:	mov    %r12,%rdi
   26ba6:	mov    %rax,%rbx
   26ba9:	lea    -0xdb0(%rip),%rsi        # 25e00 <png_write_image_8bit>
   26bb0:	mov    %r13,%rdx
   26bb3:	callq  b260 <png_safe_execute>
   26bb8:	mov    %rbx,%rsi
   26bbb:	mov    %rax,%rbx
   26bbe:	jmp    26c33 <png_image_write_main+0x583>
   26bc0:	movslq 0x20(%r13),%rax
   26bc4:	test   %eax,%eax
   26bc6:	jne    26b81 <png_image_write_main+0x4d1>
   26bc8:	jmpq   26ad1 <png_image_write_main+0x421>
   26bcd:	mov    %r15,%rdi
   26bd0:	mov    %r12,%rsi
   26bd3:	callq  5380 <png_write_row@plt>
   26bd8:	add    %r13,%r12
   26bdb:	add    $0xffffffff,%ebx
   26bde:	test   %ebx,%ebx
   26be0:	jne    26bcd <png_image_write_main+0x51d>
   26be2:	mov    %r14,%rsi
   26be5:	mov    %r15,%rdi
   26be8:	callq  53c0 <png_write_end@plt>
   26bed:	mov    -0x28(%rbp),%r15
   26bf1:	mov    -0x8(%rbp),%rbx
   26bf5:	mov    $0x1,%eax
   26bfa:	mov    -0x10(%rbp),%r12
   26bfe:	mov    -0x18(%rbp),%r13
   26c02:	mov    -0x20(%rbp),%r14
   26c06:	leaveq 
   26c07:	retq   
   26c08:	cmp    $0x2,%edi
   26c0b:	ja     26c5f <png_image_write_main+0x5af>
   26c0d:	mov    $0x1,%r8d
   26c13:	jmpq   269cb <png_image_write_main+0x31b>
   26c18:	mov    %r12,%rdi
   26c1b:	mov    %rax,%rbx
   26c1e:	lea    -0x1045(%rip),%rsi        # 25be0 <png_write_image_16bit>
   26c25:	mov    %r13,%rdx
   26c28:	callq  b260 <png_safe_execute>
   26c2d:	mov    %rbx,%rsi
   26c30:	mov    %rax,%rbx
   26c33:	movq   $0x0,0x38(%r13)
   26c3b:	mov    %r15,%rdi
   26c3e:	callq  5790 <png_free@plt>
   26c43:	test   %ebx,%ebx
   26c45:	jne    26be2 <png_image_write_main+0x532>
   26c47:	mov    -0x28(%rbp),%r15
   26c4b:	mov    -0x8(%rbp),%rbx
   26c4f:	xor    %eax,%eax
   26c51:	mov    -0x10(%rbp),%r12
   26c55:	mov    -0x18(%rbp),%r13
   26c59:	mov    -0x20(%rbp),%r14
   26c5d:	leaveq 
   26c5e:	retq   
   26c5f:	mov    %rsi,%r8
   26c62:	jmpq   269cb <png_image_write_main+0x31b>
   26c67:	nopw   0x0(%rax,%rax,1)

0000000000026c70 <image_memory_write>:
   26c70:	push   %rbp
   26c71:	mov    %rsp,%rbp
   26c74:	sub    $0x10,%rsp
   26c78:	mov    0x108(%rdi),%rcx
   26c7f:	mov    0x50(%rcx),%r8
   26c83:	mov    %r8,%rax
   26c86:	not    %rax
   26c89:	cmp    %rdx,%rax
   26c8c:	jae    26c9a <image_memory_write+0x2a>
   26c8e:	lea    0x90be(%rip),%rsi        # 2fd53 <fourbppswaptable+0x707>
   26c95:	callq  5470 <png_error@plt>
   26c9a:	test   %rdx,%rdx
   26c9d:	jne    26ca1 <image_memory_write+0x31>
   26c9f:	leaveq 
   26ca0:	retq   
   26ca1:	lea    (%r8,%rdx,1),%rax
   26ca5:	cmp    0x48(%rcx),%rax
   26ca9:	ja     26cd3 <image_memory_write+0x63>
   26cab:	mov    %r8,%rdi
   26cae:	add    0x40(%rcx),%rdi
   26cb2:	mov    %r14,-0x8(%rbp)
   26cb6:	mov    %r15,-0x10(%rbp)
   26cba:	mov    %rcx,%r14
   26cbd:	mov    %rax,%r15
   26cc0:	callq  54c0 <memcpy@plt>
   26cc5:	mov    %r15,%rax
   26cc8:	mov    %r14,%rcx
   26ccb:	mov    -0x10(%rbp),%r15
   26ccf:	mov    -0x8(%rbp),%r14
   26cd3:	mov    %rax,0x50(%rcx)
   26cd7:	leaveq 
   26cd8:	retq   
   26cd9:	nopl   0x0(%rax)

0000000000026ce0 <image_memory_flush>:
   26ce0:	push   %rbp
   26ce1:	mov    %rsp,%rbp
   26ce4:	leaveq 
   26ce5:	retq   
   26ce6:	nopw   %cs:0x0(%rax,%rax,1)

0000000000026cf0 <png_image_write_memory>:
   26cf0:	push   %rbp
   26cf1:	mov    %rsp,%rbp
   26cf4:	sub    $0x10,%rsp
   26cf8:	mov    %r15,-0x8(%rbp)
   26cfc:	mov    (%rdi),%rax
   26cff:	mov    (%rax),%rax
   26d02:	mov    (%rax),%rax
   26d05:	mov    %rdi,%r15
   26d08:	mov    %rax,%rdi
   26d0b:	lea    -0xa2(%rip),%rdx        # 26c70 <image_memory_write>
   26d12:	lea    -0x39(%rip),%rcx        # 26ce0 <image_memory_flush>
   26d19:	mov    %r15,%rsi
   26d1c:	callq  5300 <png_set_write_fn@plt>
   26d21:	mov    %r15,%rdi
   26d24:	callq  266b0 <png_image_write_main>
   26d29:	mov    -0x8(%rbp),%r15
   26d2d:	leaveq 
   26d2e:	retq   
   26d2f:	nop

0000000000026d30 <png_do_write_transformations>:
   26d30:	push   %rbp
   26d31:	mov    %rsp,%rbp
   26d34:	sub    $0x10,%rsp
   26d38:	mov    %r14,-0x8(%rbp)
   26d3c:	mov    %r15,-0x10(%rbp)
   26d40:	test   %rdi,%rdi
   26d43:	jne    26d47 <png_do_write_transformations+0x17>
   26d45:	leaveq 
   26d46:	retq   
   26d47:	mov    0x134(%rdi),%eax
   26d4d:	and    $0x100000,%eax
   26d52:	test   %eax,%eax
   26d54:	jne    26d8e <png_do_write_transformations+0x5e>
   26d56:	mov    %r14,%rax
   26d59:	mov    %rsi,%r14
   26d5c:	mov    %r15,%rcx
   26d5f:	mov    %rdi,%r15
   26d62:	mov    0x134(%r15),%edx
   26d69:	and    $0x8000,%edx
   26d6f:	test   %edx,%edx
   26d71:	je     26dc5 <png_do_write_transformations+0x95>
   26d73:	mov    0x228(%r15),%rcx
   26d7a:	mov    0x130(%r15),%eax
   26d81:	and    $0x80,%eax
   26d86:	test   %eax,%eax
   26d88:	je     26dac <png_do_write_transformations+0x7c>
   26d8a:	xor    %edx,%edx
   26d8c:	jmp    26db1 <png_do_write_transformations+0x81>
   26d8e:	mov    0x118(%rdi),%rax
   26d95:	test   %rax,%rax
   26d98:	jne    26f1c <png_do_write_transformations+0x1ec>
   26d9e:	mov    %r14,%rax
   26da1:	mov    %rsi,%r14
   26da4:	mov    %r15,%rcx
   26da7:	mov    %rdi,%r15
   26daa:	jmp    26d62 <png_do_write_transformations+0x32>
   26dac:	mov    $0x1,%edx
   26db1:	lea    0x1(%rcx),%rsi
   26db5:	mov    %r14,%rdi
   26db8:	callq  23850 <png_do_strip_channel>
   26dbd:	mov    -0x10(%rbp),%rcx
   26dc1:	mov    -0x8(%rbp),%rax
   26dc5:	mov    0x134(%r15),%edx
   26dcc:	and    $0x10000,%edx
   26dd2:	test   %edx,%edx
   26dd4:	je     26df1 <png_do_write_transformations+0xc1>
   26dd6:	mov    0x228(%r15),%rsi
   26ddd:	add    $0x1,%rsi
   26de1:	mov    %r14,%rdi
   26de4:	callq  23a00 <png_do_packswap>
   26de9:	mov    -0x10(%rbp),%rcx
   26ded:	mov    -0x8(%rbp),%rax
   26df1:	mov    0x134(%r15),%edx
   26df8:	and    $0x4,%edx
   26dfb:	test   %edx,%edx
   26dfd:	je     26e22 <png_do_write_transformations+0xf2>
   26dff:	mov    0x228(%r15),%rsi
   26e06:	add    $0x1,%rsi
   26e0a:	movzbl 0x268(%r15),%edx
   26e12:	mov    %r14,%rdi
   26e15:	callq  26f60 <png_do_pack>
   26e1a:	mov    -0x10(%rbp),%rcx
   26e1e:	mov    -0x8(%rbp),%rax
   26e22:	mov    0x134(%r15),%edx
   26e29:	and    $0x10,%edx
   26e2c:	test   %edx,%edx
   26e2e:	je     26e4b <png_do_write_transformations+0x11b>
   26e30:	mov    0x228(%r15),%rsi
   26e37:	add    $0x1,%rsi
   26e3b:	mov    %r14,%rdi
   26e3e:	callq  239c0 <png_do_swap>
   26e43:	mov    -0x10(%rbp),%rcx
   26e47:	mov    -0x8(%rbp),%rax
   26e4b:	mov    0x134(%r15),%edx
   26e52:	and    $0x8,%edx
   26e55:	test   %edx,%edx
   26e57:	je     26e7b <png_do_write_transformations+0x14b>
   26e59:	mov    0x228(%r15),%rsi
   26e60:	add    $0x1,%rsi
   26e64:	lea    0x2dd(%r15),%rdx
   26e6b:	mov    %r14,%rdi
   26e6e:	callq  27140 <png_do_shift>
   26e73:	mov    -0x10(%rbp),%rcx
   26e77:	mov    -0x8(%rbp),%rax
   26e7b:	mov    0x134(%r15),%edx
   26e82:	and    $0x20000,%edx
   26e88:	test   %edx,%edx
   26e8a:	je     26ea7 <png_do_write_transformations+0x177>
   26e8c:	mov    0x228(%r15),%rsi
   26e93:	add    $0x1,%rsi
   26e97:	mov    %r14,%rdi
   26e9a:	callq  27420 <png_do_write_swap_alpha>
   26e9f:	mov    -0x10(%rbp),%rcx
   26ea3:	mov    -0x8(%rbp),%rax
   26ea7:	mov    0x134(%r15),%edx
   26eae:	and    $0x80000,%edx
   26eb4:	test   %edx,%edx
   26eb6:	je     26ed3 <png_do_write_transformations+0x1a3>
   26eb8:	mov    0x228(%r15),%rsi
   26ebf:	add    $0x1,%rsi
   26ec3:	mov    %r14,%rdi
   26ec6:	callq  27510 <png_do_write_invert_alpha>
   26ecb:	mov    -0x10(%rbp),%rcx
   26ecf:	mov    -0x8(%rbp),%rax
   26ed3:	mov    0x134(%r15),%edx
   26eda:	and    $0x1,%edx
   26edd:	test   %edx,%edx
   26edf:	je     26f06 <png_do_write_transformations+0x1d6>
   26ee1:	mov    0x228(%r15),%rsi
   26ee8:	add    $0x1,%rsi
   26eec:	mov    %r14,%rdi
   26eef:	mov    %r14,-0x8(%rbp)
   26ef3:	mov    %rax,%r14
   26ef6:	callq  23af0 <png_do_bgr>
   26efb:	mov    %r14,%rax
   26efe:	mov    -0x8(%rbp),%r14
   26f02:	mov    -0x10(%rbp),%rcx
   26f06:	mov    0x134(%r15),%edx
   26f0d:	and    $0x20,%edx
   26f10:	test   %edx,%edx
   26f12:	jne    26f3c <png_do_write_transformations+0x20c>
   26f14:	mov    %rax,%r14
   26f17:	mov    %rcx,%r15
   26f1a:	leaveq 
   26f1b:	retq   
   26f1c:	mov    0x228(%rdi),%rdx
   26f23:	add    $0x1,%rdx
   26f27:	mov    %rdi,%r15
   26f2a:	mov    %rsi,%r14
   26f2d:	callq  *%rax
   26f2f:	mov    -0x10(%rbp),%rcx
   26f33:	mov    -0x8(%rbp),%rax
   26f37:	jmpq   26d62 <png_do_write_transformations+0x32>
   26f3c:	mov    0x228(%r15),%rsi
   26f43:	add    $0x1,%rsi
   26f47:	mov    %r14,%rdi
   26f4a:	mov    %rax,%r14
   26f4d:	mov    %rcx,%r15
   26f50:	callq  23a60 <png_do_invert>
   26f55:	leaveq 
   26f56:	retq   
   26f57:	nopw   0x0(%rax,%rax,1)

0000000000026f60 <png_do_pack>:
   26f60:	push   %rbp
   26f61:	mov    %rsp,%rbp
   26f64:	sub    $0x20,%rsp
   26f68:	movzbl 0x11(%rdi),%eax
   26f6c:	cmp    $0x8,%al
   26f6e:	je     26f72 <png_do_pack+0x12>
   26f70:	leaveq 
   26f71:	retq   
   26f72:	movzbl 0x12(%rdi),%eax
   26f76:	cmp    $0x1,%al
   26f78:	je     26f7c <png_do_pack+0x1c>
   26f7a:	leaveq 
   26f7b:	retq   
   26f7c:	xor    %r8d,%r8d
   26f7f:	cmp    $0x1,%edx
   26f82:	jle    26f93 <png_do_pack+0x33>
   26f84:	cmp    $0x2,%edx
   26f87:	je     26fbe <png_do_pack+0x5e>
   26f89:	cmp    $0x4,%edx
   26f8c:	je     26fdd <png_do_pack+0x7d>
   26f8e:	mov    %rdx,%rax
   26f91:	jmp    26f9b <png_do_pack+0x3b>
   26f93:	cmp    $0x1,%edx
   26f96:	je     26ffc <png_do_pack+0x9c>
   26f98:	mov    %rdx,%rax
   26f9b:	mov    %al,0x11(%rdi)
   26f9e:	movzbl 0x12(%rdi),%ecx
   26fa2:	imul   %cl
   26fa4:	mov    %al,0x13(%rdi)
   26fa7:	cmp    $0x7,%al
   26fa9:	ja     2701b <png_do_pack+0xbb>
   26fab:	movzbl %al,%eax
   26fae:	mov    (%rdi),%ecx
   26fb0:	imul   %rcx,%rax
   26fb4:	add    $0x7,%rax
   26fb8:	shr    $0x3,%rax
   26fbc:	jmp    27028 <png_do_pack+0xc8>
   26fbe:	mov    (%rdi),%r9d
   26fc1:	mov    $0x6,%r10d
   26fc7:	mov    %rdx,-0x18(%rbp)
   26fcb:	mov    %r15,-0x10(%rbp)
   26fcf:	mov    %rsi,%r11
   26fd2:	mov    %r8,%rax
   26fd5:	mov    %rax,%r15
   26fd8:	mov    %r10,%rcx
   26fdb:	jmp    27042 <png_do_pack+0xe2>
   26fdd:	mov    (%rdi),%r9d
   26fe0:	mov    $0x4,%r10d
   26fe6:	mov    %rdx,-0x18(%rbp)
   26fea:	mov    %r15,-0x10(%rbp)
   26fee:	mov    %rsi,%r11
   26ff1:	mov    %r8,%rax
   26ff4:	mov    %rax,%r15
   26ff7:	mov    %r10,%rcx
   26ffa:	jmp    2706d <png_do_pack+0x10d>
   26ffc:	mov    (%rdi),%r10d
   26fff:	mov    $0x80,%r11d
   27005:	mov    %rdx,-0x18(%rbp)
   27009:	mov    %r15,-0x8(%rbp)
   2700d:	mov    %rsi,%r9
   27010:	mov    %r8,%rax
   27013:	mov    %rax,%rdx
   27016:	mov    %r11,%rcx
   27019:	jmp    2708d <png_do_pack+0x12d>
   2701b:	movzbl %al,%eax
   2701e:	shr    $0x3,%rax
   27022:	mov    (%rdi),%ecx
   27024:	imul   %rcx,%rax
   27028:	mov    %rax,0x8(%rdi)
   2702c:	leaveq 
   2702d:	retq   
   2702e:	mov    %al,(%rsi)
   27030:	add    $0x1,%rsi
   27034:	mov    %r8,%rax
   27037:	mov    %r10,%rcx
   2703a:	add    $0x1,%r11
   2703e:	add    $0x1,%r15d
   27042:	cmp    %r9d,%r15d
   27045:	jb     270ab <png_do_pack+0x14b>
   27047:	cmp    $0x6,%ecx
   2704a:	jne    270c6 <png_do_pack+0x166>
   2704c:	mov    -0x10(%rbp),%r15
   27050:	mov    -0x18(%rbp),%rax
   27054:	jmpq   26f9b <png_do_pack+0x3b>
   27059:	mov    %al,(%rsi)
   2705b:	add    $0x1,%rsi
   2705f:	mov    %r8,%rax
   27062:	mov    %r10,%rcx
   27065:	add    $0x1,%r11
   27069:	add    $0x1,%r15d
   2706d:	cmp    %r9d,%r15d
   27070:	jb     270d5 <png_do_pack+0x175>
   27072:	cmp    $0x4,%ecx
   27075:	jne    270f0 <png_do_pack+0x190>
   27077:	mov    -0x10(%rbp),%r15
   2707b:	mov    -0x18(%rbp),%rax
   2707f:	jmpq   26f9b <png_do_pack+0x3b>
   27084:	shr    %ecx
   27086:	add    $0x1,%r9
   2708a:	add    $0x1,%edx
   2708d:	cmp    %r10d,%edx
   27090:	jb     270ff <png_do_pack+0x19f>
   27092:	cmp    $0x80,%ecx
   27098:	jne    27124 <png_do_pack+0x1c4>
   2709e:	mov    -0x8(%rbp),%r15
   270a2:	mov    -0x18(%rbp),%rax
   270a6:	jmpq   26f9b <png_do_pack+0x3b>
   270ab:	movzbl (%r11),%edx
   270af:	and    $0x3,%edx
   270b2:	shl    %cl,%edx
   270b4:	or     %edx,%eax
   270b6:	test   %ecx,%ecx
   270b8:	je     2702e <png_do_pack+0xce>
   270be:	add    $0xfffffffe,%ecx
   270c1:	jmpq   2703a <png_do_pack+0xda>
   270c6:	mov    %al,(%rsi)
   270c8:	mov    -0x10(%rbp),%r15
   270cc:	mov    -0x18(%rbp),%rax
   270d0:	jmpq   26f9b <png_do_pack+0x3b>
   270d5:	movzbl (%r11),%edx
   270d9:	and    $0xf,%edx
   270dc:	shl    %cl,%edx
   270de:	or     %edx,%eax
   270e0:	test   %ecx,%ecx
   270e2:	je     27059 <png_do_pack+0xf9>
   270e8:	add    $0xfffffffc,%ecx
   270eb:	jmpq   27065 <png_do_pack+0x105>
   270f0:	mov    %al,(%rsi)
   270f2:	mov    -0x10(%rbp),%r15
   270f6:	mov    -0x18(%rbp),%rax
   270fa:	jmpq   26f9b <png_do_pack+0x3b>
   270ff:	movzbl (%r9),%r15d
   27103:	test   %r15b,%r15b
   27106:	je     2710a <png_do_pack+0x1aa>
   27108:	or     %ecx,%eax
   2710a:	cmp    $0x1,%ecx
   2710d:	jg     27084 <png_do_pack+0x124>
   27113:	mov    %al,(%rsi)
   27115:	add    $0x1,%rsi
   27119:	mov    %r8,%rax
   2711c:	mov    %r11,%rcx
   2711f:	jmpq   27086 <png_do_pack+0x126>
   27124:	mov    %al,(%rsi)
   27126:	mov    -0x8(%rbp),%r15
   2712a:	mov    -0x18(%rbp),%rax
   2712e:	jmpq   26f9b <png_do_pack+0x3b>
   27133:	data16 nopw %cs:0x0(%rax,%rax,1)
   2713e:	xchg   %ax,%ax

0000000000027140 <png_do_shift>:
   27140:	push   %rbp
   27141:	mov    %rsp,%rbp
   27144:	sub    $0x40,%rsp
   27148:	movzbl 0x10(%rdi),%eax
   2714c:	cmp    $0x3,%al
   2714e:	jne    27152 <png_do_shift+0x12>
   27150:	leaveq 
   27151:	retq   
   27152:	mov    $0x4,%ecx
   27157:	and    $0x2,%eax
   2715a:	test   %eax,%eax
   2715c:	jg     2717f <png_do_shift+0x3f>
   2715e:	movzbl 0x11(%rdi),%eax
   27162:	movzbl 0x3(%rdx),%r8d
   27167:	sub    %r8d,%eax
   2716a:	mov    %eax,-0x40(%rbp)
   2716d:	mov    %r8d,-0x30(%rbp)
   27171:	mov    $0x2,%r8d
   27177:	mov    $0x1,%r9d
   2717d:	jmp    271c5 <png_do_shift+0x85>
   2717f:	movzbl 0x11(%rdi),%eax
   27183:	movzbl (%rdx),%r9d
   27187:	mov    %rax,%r8
   2718a:	sub    %r9d,%r8d
   2718d:	mov    %r8d,-0x40(%rbp)
   27191:	mov    %r9d,-0x30(%rbp)
   27195:	movzbl 0x1(%rdx),%r9d
   2719a:	mov    %rax,%r8
   2719d:	sub    %r9d,%r8d
   271a0:	mov    %r8d,-0x3c(%rbp)
   271a4:	mov    %r9d,-0x2c(%rbp)
   271a8:	movzbl 0x2(%rdx),%r8d
   271ad:	sub    %r8d,%eax
   271b0:	mov    %eax,-0x38(%rbp)
   271b3:	mov    %r8d,-0x28(%rbp)
   271b7:	mov    %rcx,%r8
   271ba:	mov    $0xc,%ecx
   271bf:	mov    $0x3,%r9d
   271c5:	movzbl 0x10(%rdi),%eax
   271c9:	and    $0x4,%eax
   271cc:	test   %eax,%eax
   271ce:	jle    271e8 <png_do_shift+0xa8>
   271d0:	movzbl 0x11(%rdi),%eax
   271d4:	movzbl 0x4(%rdx),%r9d
   271d9:	sub    %r9d,%eax
   271dc:	mov    %eax,-0x40(%rbp,%rcx,1)
   271e0:	mov    %r9d,-0x30(%rbp,%rcx,1)
   271e5:	mov    %r8,%r9
   271e8:	xor    %r8d,%r8d
   271eb:	movzbl 0x11(%rdi),%ecx
   271ef:	cmp    $0x7,%cl
   271f2:	jbe    27210 <png_do_shift+0xd0>
   271f4:	cmp    $0x8,%cl
   271f7:	je     2723e <png_do_shift+0xfe>
   271f9:	mov    (%rdi),%edi
   271fb:	imul   %r9d,%edi
   271ff:	mov    %r13,-0x10(%rbp)
   27203:	mov    %r14,-0x18(%rbp)
   27207:	mov    %r15,-0x20(%rbp)
   2720b:	mov    %r8,%r10
   2720e:	jmp    2728b <png_do_shift+0x14b>
   27210:	mov    0x8(%rdi),%rdi
   27214:	movzbl 0x3(%rdx),%eax
   27218:	cmp    $0x1,%al
   2721a:	je     272a2 <png_do_shift+0x162>
   27220:	mov    $0xff,%edx
   27225:	cmp    $0x4,%cl
   27228:	je     272bd <png_do_shift+0x17d>
   2722e:	mov    %r14,-0x8(%rbp)
   27232:	mov    %r15,-0x20(%rbp)
   27236:	mov    %r8,%r9
   27239:	jmpq   272fb <png_do_shift+0x1bb>
   2723e:	mov    (%rdi),%edi
   27240:	imul   %r9d,%edi
   27244:	mov    %r13,-0x10(%rbp)
   27248:	mov    %r14,-0x18(%rbp)
   2724c:	mov    %r15,-0x20(%rbp)
   27250:	mov    %r8,%r10
   27253:	jmpq   27338 <png_do_shift+0x1f8>
   27258:	mov    %r11,%r14
   2725b:	shl    %cl,%r14d
   2725e:	or     %r14d,%eax
   27261:	sub    %r13d,%ecx
   27264:	movslq -0x30(%rbp,%rdx,4),%r13
   27269:	mov    %r13,%r14
   2726c:	neg    %r14d
   2726f:	cmp    %ecx,%r14d
   27272:	jl     2734f <png_do_shift+0x20f>
   27278:	mov    %rax,%rcx
   2727b:	shr    $0x8,%ecx
   2727e:	mov    %cl,(%rsi)
   27280:	mov    %al,0x1(%rsi)
   27283:	add    $0x1,%r10d
   27287:	add    $0x2,%rsi
   2728b:	cmp    %edi,%r10d
   2728e:	jb     27370 <png_do_shift+0x230>
   27294:	mov    -0x20(%rbp),%r15
   27298:	mov    -0x18(%rbp),%r14
   2729c:	mov    -0x10(%rbp),%r13
   272a0:	leaveq 
   272a1:	retq   
   272a2:	cmp    $0x2,%cl
   272a5:	jne    27220 <png_do_shift+0xe0>
   272ab:	mov    $0x55,%edx
   272b0:	mov    %r14,-0x8(%rbp)
   272b4:	mov    %r15,-0x20(%rbp)
   272b8:	mov    %r8,%r9
   272bb:	jmp    272fb <png_do_shift+0x1bb>
   272bd:	cmp    $0x3,%al
   272bf:	je     27395 <png_do_shift+0x255>
   272c5:	mov    %r14,-0x8(%rbp)
   272c9:	mov    %r15,-0x20(%rbp)
   272cd:	mov    %r8,%r9
   272d0:	jmp    272fb <png_do_shift+0x1bb>
   272d2:	mov    %r10,%r14
   272d5:	shl    %cl,%r14d
   272d8:	or     %r14d,%eax
   272db:	sub    %r11d,%ecx
   272de:	movslq -0x30(%rbp),%r11
   272e2:	mov    %r11,%r14
   272e5:	neg    %r14d
   272e8:	cmp    %ecx,%r14d
   272eb:	jl     273aa <png_do_shift+0x26a>
   272f1:	mov    %al,(%rsi)
   272f3:	add    $0x1,%r9
   272f7:	add    $0x1,%rsi
   272fb:	cmp    %rdi,%r9
   272fe:	jb     273d0 <png_do_shift+0x290>
   27304:	mov    -0x20(%rbp),%r15
   27308:	mov    -0x8(%rbp),%r14
   2730c:	leaveq 
   2730d:	retq   
   2730e:	mov    %r11,%r14
   27311:	shl    %cl,%r14d
   27314:	or     %r14d,%eax
   27317:	sub    %r13d,%ecx
   2731a:	movslq -0x30(%rbp,%rdx,4),%r13
   2731f:	mov    %r13,%r14
   27322:	neg    %r14d
   27325:	cmp    %ecx,%r14d
   27328:	jl     273e0 <png_do_shift+0x2a0>
   2732e:	mov    %al,(%rsi)
   27330:	add    $0x1,%r10d
   27334:	add    $0x1,%rsi
   27338:	cmp    %edi,%r10d
   2733b:	jb     27401 <png_do_shift+0x2c1>
   27341:	mov    -0x20(%rbp),%r15
   27345:	mov    -0x18(%rbp),%r14
   27349:	mov    -0x10(%rbp),%r13
   2734d:	leaveq 
   2734e:	retq   
   2734f:	test   %ecx,%ecx
   27351:	jg     27258 <png_do_shift+0x118>
   27357:	mov    %rcx,%r15
   2735a:	mov    %r15,%rcx
   2735d:	neg    %ecx
   2735f:	mov    %r11,%r14
   27362:	shr    %cl,%r14d
   27365:	or     %r14d,%eax
   27368:	mov    %r15,%rcx
   2736b:	jmpq   27261 <png_do_shift+0x121>
   27370:	xor    %edx,%edx
   27372:	mov    %r10,%rax
   27375:	div    %r9d
   27378:	mov    %edx,%edx
   2737a:	movslq -0x40(%rbp,%rdx,4),%rcx
   2737f:	movzbl 0x1(%rsi),%r11d
   27384:	movzbl (%rsi),%eax
   27387:	shl    $0x8,%eax
   2738a:	add    %eax,%r11d
   2738d:	mov    %r8,%rax
   27390:	jmpq   27264 <png_do_shift+0x124>
   27395:	mov    $0x11,%edx
   2739a:	mov    %r14,-0x8(%rbp)
   2739e:	mov    %r15,-0x20(%rbp)
   273a2:	mov    %r8,%r9
   273a5:	jmpq   272fb <png_do_shift+0x1bb>
   273aa:	test   %ecx,%ecx
   273ac:	jg     272d2 <png_do_shift+0x192>
   273b2:	mov    %rcx,%r15
   273b5:	mov    %r15,%rcx
   273b8:	neg    %ecx
   273ba:	mov    %r10,%r14
   273bd:	shr    %cl,%r14d
   273c0:	mov    %rdx,%rcx
   273c3:	and    %r14d,%ecx
   273c6:	or     %ecx,%eax
   273c8:	mov    %r15,%rcx
   273cb:	jmpq   272db <png_do_shift+0x19b>
   273d0:	movzbl (%rsi),%r10d
   273d4:	movslq -0x40(%rbp),%rcx
   273d8:	mov    %r8,%rax
   273db:	jmpq   272de <png_do_shift+0x19e>
   273e0:	test   %ecx,%ecx
   273e2:	jg     2730e <png_do_shift+0x1ce>
   273e8:	mov    %rcx,%r15
   273eb:	mov    %r15,%rcx
   273ee:	neg    %ecx
   273f0:	mov    %r11,%r14
   273f3:	shr    %cl,%r14d
   273f6:	or     %r14d,%eax
   273f9:	mov    %r15,%rcx
   273fc:	jmpq   27317 <png_do_shift+0x1d7>
   27401:	movzbl (%rsi),%r11d
   27405:	xor    %edx,%edx
   27407:	mov    %r10,%rax
   2740a:	div    %r9d
   2740d:	mov    %edx,%edx
   2740f:	movslq -0x40(%rbp,%rdx,4),%rcx
   27414:	mov    %r8,%rax
   27417:	jmpq   2731a <png_do_shift+0x1da>
   2741c:	nopl   0x0(%rax)

0000000000027420 <png_do_write_swap_alpha>:
   27420:	push   %rbp
   27421:	mov    %rsp,%rbp
   27424:	xor    %eax,%eax
   27426:	movzbl 0x10(%rdi),%ecx
   2742a:	cmp    $0x6,%cl
   2742d:	je     27436 <png_do_write_swap_alpha+0x16>
   2742f:	cmp    $0x4,%cl
   27432:	je     27444 <png_do_write_swap_alpha+0x24>
   27434:	leaveq 
   27435:	retq   
   27436:	movzbl 0x11(%rdi),%ecx
   2743a:	cmp    $0x8,%cl
   2743d:	je     27451 <png_do_write_swap_alpha+0x31>
   2743f:	mov    (%rdi),%r8d
   27442:	jmp    27496 <png_do_write_swap_alpha+0x76>
   27444:	movzbl 0x11(%rdi),%ecx
   27448:	cmp    $0x8,%cl
   2744b:	je     2749d <png_do_write_swap_alpha+0x7d>
   2744d:	mov    (%rdi),%edx
   2744f:	jmp    274c5 <png_do_write_swap_alpha+0xa5>
   27451:	mov    (%rdi),%edi
   27453:	jmpq   274ec <png_do_write_swap_alpha+0xcc>
   27458:	movzbl 0x2(%rsi),%edi
   2745c:	movzbl 0x3(%rsi),%edx
   27460:	movzbl 0x4(%rsi),%ecx
   27464:	mov    %cl,0x2(%rsi)
   27467:	movzbl 0x5(%rsi),%ecx
   2746b:	mov    %cl,0x3(%rsi)
   2746e:	movzbl 0x6(%rsi),%ecx
   27472:	mov    %cl,0x4(%rsi)
   27475:	movzbl 0x7(%rsi),%ecx
   27479:	mov    %cl,0x5(%rsi)
   2747c:	movzbl (%rsi),%ecx
   2747f:	mov    %dil,(%rsi)
   27482:	mov    %cl,0x6(%rsi)
   27485:	movzbl 0x1(%rsi),%ecx
   27489:	mov    %dl,0x1(%rsi)
   2748c:	mov    %cl,0x7(%rsi)
   2748f:	add    $0x1,%eax
   27492:	add    $0x8,%rsi
   27496:	cmp    %r8d,%eax
   27499:	jb     27458 <png_do_write_swap_alpha+0x38>
   2749b:	leaveq 
   2749c:	retq   
   2749d:	mov    (%rdi),%edi
   2749f:	jmp    27505 <png_do_write_swap_alpha+0xe5>
   274a1:	movzbl 0x2(%rsi),%ecx
   274a5:	movzbl 0x3(%rsi),%r8d
   274aa:	movzbl (%rsi),%edi
   274ad:	mov    %cl,(%rsi)
   274af:	mov    %dil,0x2(%rsi)
   274b3:	movzbl 0x1(%rsi),%ecx
   274b7:	mov    %r8b,0x1(%rsi)
   274bb:	mov    %cl,0x3(%rsi)
   274be:	add    $0x1,%eax
   274c1:	add    $0x4,%rsi
   274c5:	cmp    %edx,%eax
   274c7:	jb     274a1 <png_do_write_swap_alpha+0x81>
   274c9:	leaveq 
   274ca:	retq   
   274cb:	movzbl 0x1(%rsi),%edx
   274cf:	movzbl 0x2(%rsi),%ecx
   274d3:	mov    %cl,0x1(%rsi)
   274d6:	movzbl 0x3(%rsi),%ecx
   274da:	mov    %cl,0x2(%rsi)
   274dd:	movzbl (%rsi),%ecx
   274e0:	mov    %dl,(%rsi)
   274e2:	mov    %cl,0x3(%rsi)
   274e5:	add    $0x1,%eax
   274e8:	add    $0x4,%rsi
   274ec:	cmp    %edi,%eax
   274ee:	jb     274cb <png_do_write_swap_alpha+0xab>
   274f0:	leaveq 
   274f1:	retq   
   274f2:	movzbl 0x1(%rsi),%edx
   274f6:	movzbl (%rsi),%ecx
   274f9:	mov    %dl,(%rsi)
   274fb:	mov    %cl,0x1(%rsi)
   274fe:	add    $0x1,%eax
   27501:	add    $0x2,%rsi
   27505:	cmp    %edi,%eax
   27507:	jb     274f2 <png_do_write_swap_alpha+0xd2>
   27509:	leaveq 
   2750a:	retq   
   2750b:	nopl   0x0(%rax,%rax,1)

0000000000027510 <png_do_write_invert_alpha>:
   27510:	push   %rbp
   27511:	mov    %rsp,%rbp
   27514:	xor    %eax,%eax
   27516:	movzbl 0x10(%rdi),%ecx
   2751a:	cmp    $0x6,%cl
   2751d:	je     27526 <png_do_write_invert_alpha+0x16>
   2751f:	cmp    $0x4,%cl
   27522:	je     27533 <png_do_write_invert_alpha+0x23>
   27524:	leaveq 
   27525:	retq   
   27526:	movzbl 0x11(%rdi),%ecx
   2752a:	cmp    $0x8,%cl
   2752d:	je     27540 <png_do_write_invert_alpha+0x30>
   2752f:	mov    (%rdi),%edx
   27531:	jmp    27561 <png_do_write_invert_alpha+0x51>
   27533:	movzbl 0x11(%rdi),%ecx
   27537:	cmp    $0x8,%cl
   2753a:	je     27567 <png_do_write_invert_alpha+0x57>
   2753c:	mov    (%rdi),%edx
   2753e:	jmp    27588 <png_do_write_invert_alpha+0x78>
   27540:	mov    (%rdi),%edi
   27542:	lea    0x3(%rsi),%rcx
   27546:	jmp    2759c <png_do_write_invert_alpha+0x8c>
   27548:	movzbl 0x6(%rsi),%ecx
   2754c:	not    %ecx
   2754e:	mov    %cl,0x6(%rsi)
   27551:	movzbl 0x7(%rsi),%ecx
   27555:	not    %ecx
   27557:	mov    %cl,0x7(%rsi)
   2755a:	add    $0x1,%eax
   2755d:	add    $0x8,%rsi
   27561:	cmp    %edx,%eax
   27563:	jb     27548 <png_do_write_invert_alpha+0x38>
   27565:	leaveq 
   27566:	retq   
   27567:	mov    (%rdi),%edi
   27569:	lea    0x1(%rsi),%rcx
   2756d:	jmp    275b0 <png_do_write_invert_alpha+0xa0>
   2756f:	movzbl 0x2(%rsi),%ecx
   27573:	not    %ecx
   27575:	mov    %cl,0x2(%rsi)
   27578:	movzbl 0x3(%rsi),%ecx
   2757c:	not    %ecx
   2757e:	mov    %cl,0x3(%rsi)
   27581:	add    $0x1,%eax
   27584:	add    $0x4,%rsi
   27588:	cmp    %edx,%eax
   2758a:	jb     2756f <png_do_write_invert_alpha+0x5f>
   2758c:	leaveq 
   2758d:	retq   
   2758e:	movzbl (%rcx),%edx
   27591:	not    %edx
   27593:	mov    %dl,(%rcx)
   27595:	add    $0x1,%eax
   27598:	add    $0x4,%rcx
   2759c:	cmp    %edi,%eax
   2759e:	jb     2758e <png_do_write_invert_alpha+0x7e>
   275a0:	leaveq 
   275a1:	retq   
   275a2:	movzbl (%rcx),%edx
   275a5:	not    %edx
   275a7:	mov    %dl,(%rcx)
   275a9:	add    $0x1,%eax
   275ac:	add    $0x2,%rcx
   275b0:	cmp    %edi,%eax
   275b2:	jb     275a2 <png_do_write_invert_alpha+0x92>
   275b4:	leaveq 
   275b5:	retq   
   275b6:	nopw   %cs:0x0(%rax,%rax,1)

00000000000275c0 <png_write_sig>:
   275c0:	push   %rbp
   275c1:	mov    %rsp,%rbp
   275c4:	sub    $0x10,%rsp
   275c8:	mov    %r15,-0x8(%rbp)
   275cc:	movabs $0xa1a0a0d474e5089,%rax
   275d6:	mov    %rax,-0x10(%rbp)
   275da:	movl   $0x12,0x46c(%rdi)
   275e4:	movzbl 0x26d(%rdi),%ecx
   275eb:	mov    $0x8,%eax
   275f0:	sub    %ecx,%eax
   275f2:	movslq %eax,%rdx
   275f5:	lea    -0x10(%rbp,%rcx,1),%rsi
   275fa:	mov    %rdi,%r15
   275fd:	callq  23e50 <png_write_data>
   27602:	movzbl 0x26d(%r15),%eax
   2760a:	cmp    $0x2,%al
   2760c:	jbe    27614 <png_write_sig+0x54>
   2760e:	mov    -0x8(%rbp),%r15
   27612:	leaveq 
   27613:	retq   
   27614:	mov    0x12c(%r15),%eax
   2761b:	or     $0x1000,%eax
   27620:	mov    %eax,0x12c(%r15)
   27627:	mov    -0x8(%rbp),%r15
   2762b:	leaveq 
   2762c:	retq   
   2762d:	nopl   (%rax)

0000000000027630 <png_write_chunk>:
   27630:	push   %rbp
   27631:	mov    %rsp,%rbp
   27634:	movzbl (%rsi),%r8d
   27638:	shl    $0x18,%r8d
   2763c:	movzbl 0x1(%rsi),%eax
   27640:	shl    $0x10,%eax
   27643:	add    %eax,%r8d
   27646:	movzbl 0x2(%rsi),%eax
   2764a:	shl    $0x8,%eax
   2764d:	add    %eax,%r8d
   27650:	movzbl 0x3(%rsi),%eax
   27654:	lea    (%r8,%rax,1),%esi
   27658:	callq  29fe0 <png_write_complete_chunk>
   2765d:	leaveq 
   2765e:	retq   
   2765f:	nop

0000000000027660 <png_write_chunk_start>:
   27660:	push   %rbp
   27661:	mov    %rsp,%rbp
   27664:	movzbl (%rsi),%ecx
   27667:	shl    $0x18,%ecx
   2766a:	movzbl 0x1(%rsi),%eax
   2766e:	shl    $0x10,%eax
   27671:	add    %eax,%ecx
   27673:	movzbl 0x2(%rsi),%eax
   27677:	shl    $0x8,%eax
   2767a:	add    %ecx,%eax
   2767c:	movzbl 0x3(%rsi),%ecx
   27680:	lea    (%rax,%rcx,1),%esi
   27683:	callq  29f50 <png_write_chunk_header>
   27688:	leaveq 
   27689:	retq   
   2768a:	nopw   0x0(%rax,%rax,1)

0000000000027690 <png_write_chunk_data>:
   27690:	push   %rbp
   27691:	mov    %rsp,%rbp
   27694:	sub    $0x20,%rsp
   27698:	test   %rdi,%rdi
   2769b:	jne    2769f <png_write_chunk_data+0xf>
   2769d:	leaveq 
   2769e:	retq   
   2769f:	test   %rsi,%rsi
   276a2:	jne    276a6 <png_write_chunk_data+0x16>
   276a4:	leaveq 
   276a5:	retq   
   276a6:	test   %rdx,%rdx
   276a9:	jne    276ad <png_write_chunk_data+0x1d>
   276ab:	leaveq 
   276ac:	retq   
   276ad:	mov    %rdi,%r8
   276b0:	mov    %rsi,%rax
   276b3:	mov    %rdx,%rcx
   276b6:	mov    %r13,-0x8(%rbp)
   276ba:	mov    %r14,-0x10(%rbp)
   276be:	mov    %r15,-0x18(%rbp)
   276c2:	mov    %rdx,%r13
   276c5:	mov    %rcx,%rdx
   276c8:	mov    %rdi,%r14
   276cb:	mov    %r8,%rdi
   276ce:	mov    %rsi,%r15
   276d1:	mov    %rax,%rsi
   276d4:	callq  23e50 <png_write_data>
   276d9:	mov    %r13,%rdx
   276dc:	mov    %r15,%rsi
   276df:	mov    %r14,%rdi
   276e2:	callq  6dc0 <png_calculate_crc>
   276e7:	mov    -0x18(%rbp),%r15
   276eb:	mov    -0x10(%rbp),%r14
   276ef:	mov    -0x8(%rbp),%r13
   276f3:	leaveq 
   276f4:	retq   
   276f5:	data16 nopw %cs:0x0(%rax,%rax,1)

0000000000027700 <png_write_chunk_end>:
   27700:	push   %rbp
   27701:	mov    %rsp,%rbp
   27704:	sub    $0x10,%rsp
   27708:	test   %rdi,%rdi
   2770b:	jne    2770f <png_write_chunk_end+0xf>
   2770d:	leaveq 
   2770e:	retq   
   2770f:	movl   $0x82,0x46c(%rdi)
   27719:	lea    -0xc(%rbp),%rax
   2771d:	mov    0x24c(%rdi),%esi
   27723:	mov    %r15,-0x8(%rbp)
   27727:	mov    %rdi,%r15
   2772a:	mov    %rax,%rdi
   2772d:	callq  5500 <png_save_uint_32@plt>
   27732:	mov    %r15,%rdi
   27735:	mov    $0x4,%edx
   2773a:	lea    -0xc(%rbp),%rsi
   2773e:	callq  23e50 <png_write_data>
   27743:	mov    -0x8(%rbp),%r15
   27747:	leaveq 
   27748:	retq   
   27749:	nopl   0x0(%rax)

0000000000027750 <png_save_uint_32>:
   27750:	push   %rbp
   27751:	mov    %rsp,%rbp
   27754:	mov    %rsi,%rax
   27757:	shr    $0x18,%eax
   2775a:	mov    %al,(%rdi)
   2775c:	mov    %rsi,%rax
   2775f:	shr    $0x10,%eax
   27762:	mov    %al,0x1(%rdi)
   27765:	mov    %rsi,%rax
   27768:	shr    $0x8,%eax
   2776b:	mov    %al,0x2(%rdi)
   2776e:	mov    %sil,0x3(%rdi)
   27772:	leaveq 
   27773:	retq   
   27774:	data16 nopw %cs:0x0(%rax,%rax,1)
   2777f:	nop

0000000000027780 <png_save_uint_16>:
   27780:	push   %rbp
   27781:	mov    %rsp,%rbp
   27784:	mov    %rsi,%rax
   27787:	shr    $0x8,%eax
   2778a:	mov    %al,(%rdi)
   2778c:	mov    %sil,0x1(%rdi)
   27790:	leaveq 
   27791:	retq   
   27792:	data16 nopw %cs:0x0(%rax,%rax,1)
   2779d:	nopl   (%rax)

00000000000277a0 <png_free_buffer_list>:
   277a0:	push   %rbp
   277a1:	mov    %rsp,%rbp
   277a4:	sub    $0x10,%rsp
   277a8:	mov    (%rsi),%rax
   277ab:	test   %rax,%rax
   277ae:	jne    277b2 <png_free_buffer_list+0x12>
   277b0:	leaveq 
   277b1:	retq   
   277b2:	movq   $0x0,(%rsi)
   277b9:	mov    %r14,-0x8(%rbp)
   277bd:	mov    %r15,-0x10(%rbp)
   277c1:	mov    %rax,%rsi
   277c4:	mov    %rdi,%r14
   277c7:	jmp    277cc <png_free_buffer_list+0x2c>
   277c9:	mov    %r15,%rsi
   277cc:	mov    (%rsi),%r15
   277cf:	mov    %r14,%rdi
   277d2:	callq  5790 <png_free@plt>
   277d7:	test   %r15,%r15
   277da:	jne    277c9 <png_free_buffer_list+0x29>
   277dc:	mov    -0x10(%rbp),%r15
   277e0:	mov    -0x8(%rbp),%r14
   277e4:	leaveq 
   277e5:	retq   
   277e6:	nopw   %cs:0x0(%rax,%rax,1)

00000000000277f0 <png_write_IHDR>:
   277f0:	push   %rbp
   277f1:	mov    %rsp,%rbp
   277f4:	sub    $0x60,%rsp
   277f8:	cmp    $0x6,%r8d
   277fc:	ja     27825 <png_write_IHDR+0x35>
   277fe:	mov    $0x1,%eax
   27803:	xor    %r11d,%r11d
   27806:	lea    0x856f(%rip),%r10        # 2fd7c <fourbppswaptable+0x730>
   2780d:	mov    %r15,-0x40(%rbp)
   27811:	movslq (%r10,%r8,4),%r15
   27815:	add    %r15,%r10
   27818:	jmpq   *%r10
   2781b:	cmp    $0x8,%ecx
   2781e:	jne    27892 <png_write_IHDR+0xa2>
   27820:	mov    %r11,%r10
   27823:	jmp    27895 <png_write_IHDR+0xa5>
   27825:	lea    0x8664(%rip),%rsi        # 2fe90 <fourbppswaptable+0x844>
   2782c:	callq  5470 <png_error@plt>
   27831:	lea    -0x1(%rcx),%r10d
   27835:	cmp    $0xf,%r10d
   27839:	ja     278b3 <png_write_IHDR+0xc3>
   2783b:	lea    0x8556(%rip),%r15        # 2fd98 <fourbppswaptable+0x74c>
   27842:	movslq (%r15,%r10,4),%r10
   27846:	add    %r15,%r10
   27849:	jmpq   *%r10
   2784c:	movb   $0x1,0x26b(%rdi)
   27853:	jmp    278d0 <png_write_IHDR+0xe0>
   27855:	cmp    $0x8,%ecx
   27858:	jne    278f5 <png_write_IHDR+0x105>
   2785e:	mov    %r11,%r10
   27861:	jmpq   278f8 <png_write_IHDR+0x108>
   27866:	cmp    $0x3,%ecx
   27869:	jle    278bf <png_write_IHDR+0xcf>
   2786b:	cmp    $0x4,%ecx
   2786e:	je     278c9 <png_write_IHDR+0xd9>
   27870:	cmp    $0x8,%ecx
   27873:	je     278c9 <png_write_IHDR+0xd9>
   27875:	lea    0x85a2(%rip),%rsi        # 2fe1e <fourbppswaptable+0x7d2>
   2787c:	callq  5470 <png_error@plt>
   27881:	cmp    $0x8,%ecx
   27884:	jne    27916 <png_write_IHDR+0x126>
   2788a:	mov    %r11,%r10
   2788d:	jmpq   27919 <png_write_IHDR+0x129>
   27892:	mov    %rax,%r10
   27895:	test   %r10d,%r10d
   27898:	jg     27937 <png_write_IHDR+0x147>
   2789e:	mov    %r11,%r10
   278a1:	test   %r10d,%r10d
   278a4:	jg     27948 <png_write_IHDR+0x158>
   278aa:	movb   $0x4,0x26b(%rdi)
   278b1:	jmp    278d0 <png_write_IHDR+0xe0>
   278b3:	lea    0x851e(%rip),%rsi        # 2fdd8 <fourbppswaptable+0x78c>
   278ba:	callq  5470 <png_error@plt>
   278bf:	cmp    $0x1,%ecx
   278c2:	je     278c9 <png_write_IHDR+0xd9>
   278c4:	cmp    $0x2,%ecx
   278c7:	jne    27875 <png_write_IHDR+0x85>
   278c9:	movb   $0x1,0x26b(%rdi)
   278d0:	test   %r9d,%r9d
   278d3:	jne    27954 <png_write_IHDR+0x164>
   278d5:	mov    %r12,%r9
   278d8:	mov    %r8,%r12
   278db:	mov    %r14,%r8
   278de:	mov    %rsi,%r14
   278e1:	mov    %rbx,%r10
   278e4:	mov    %rcx,%rbx
   278e7:	mov    %r11,%r15
   278ea:	mov    %r13,%r11
   278ed:	mov    %rdx,%r13
   278f0:	jmpq   279a3 <png_write_IHDR+0x1b3>
   278f5:	mov    %rax,%r10
   278f8:	test   %r10d,%r10d
   278fb:	jg     279c0 <png_write_IHDR+0x1d0>
   27901:	mov    %r11,%r10
   27904:	test   %r10d,%r10d
   27907:	jg     279d1 <png_write_IHDR+0x1e1>
   2790d:	movb   $0x3,0x26b(%rdi)
   27914:	jmp    278d0 <png_write_IHDR+0xe0>
   27916:	mov    %rax,%r10
   27919:	test   %r10d,%r10d
   2791c:	jg     279dd <png_write_IHDR+0x1ed>
   27922:	mov    %r11,%r10
   27925:	test   %r10d,%r10d
   27928:	jg     279ee <png_write_IHDR+0x1fe>
   2792e:	movb   $0x2,0x26b(%rdi)
   27935:	jmp    278d0 <png_write_IHDR+0xe0>
   27937:	cmp    $0x10,%ecx
   2793a:	jne    279fa <png_write_IHDR+0x20a>
   27940:	mov    %r11,%r10
   27943:	jmpq   278a1 <png_write_IHDR+0xb1>
   27948:	lea    0x8520(%rip),%rsi        # 2fe6f <fourbppswaptable+0x823>
   2794f:	callq  5470 <png_error@plt>
   27954:	lea    0x8558(%rip),%r9        # 2feb3 <fourbppswaptable+0x867>
   2795b:	mov    %rdi,%rax
   2795e:	mov    %rbx,-0x10(%rbp)
   27962:	mov    %r12,-0x20(%rbp)
   27966:	mov    %r13,-0x30(%rbp)
   2796a:	mov    %r14,-0x48(%rbp)
   2796e:	mov    %rcx,%rbx
   27971:	mov    %r8,%r12
   27974:	mov    %rdx,%r13
   27977:	mov    %rsi,%r14
   2797a:	mov    %r9,%rsi
   2797d:	mov    %rdi,%r15
   27980:	mov    %rax,%rdi
   27983:	callq  5390 <png_warning@plt>
   27988:	mov    %r15,%rdi
   2798b:	mov    -0x48(%rbp),%r8
   2798f:	mov    -0x30(%rbp),%r11
   27993:	mov    -0x20(%rbp),%r9
   27997:	mov    -0x10(%rbp),%r10
   2799b:	mov    $0x1,%eax
   279a0:	xor    %r15d,%r15d
   279a3:	movslq 0x10(%rbp),%rdx
   279a7:	mov    0x3d8(%rdi),%ecx
   279ad:	and    $0x4,%ecx
   279b0:	test   %ecx,%ecx
   279b2:	jne    27a02 <png_write_IHDR+0x212>
   279b4:	test   %edx,%edx
   279b6:	jne    27a28 <png_write_IHDR+0x238>
   279b8:	mov    %r15,%rcx
   279bb:	jmpq   27a6a <png_write_IHDR+0x27a>
   279c0:	cmp    $0x10,%ecx
   279c3:	jne    27acc <png_write_IHDR+0x2dc>
   279c9:	mov    %r11,%r10
   279cc:	jmpq   27904 <png_write_IHDR+0x114>
   279d1:	lea    0x8426(%rip),%rsi        # 2fdfe <fourbppswaptable+0x7b2>
   279d8:	callq  5470 <png_error@plt>
   279dd:	cmp    $0x10,%ecx
   279e0:	jne    27ad4 <png_write_IHDR+0x2e4>
   279e6:	mov    %r11,%r10
   279e9:	jmpq   27925 <png_write_IHDR+0x135>
   279ee:	lea    0x844e(%rip),%rsi        # 2fe43 <fourbppswaptable+0x7f7>
   279f5:	callq  5470 <png_error@plt>
   279fa:	mov    %rax,%r10
   279fd:	jmpq   278a1 <png_write_IHDR+0xb1>
   27a02:	mov    0x12c(%rdi),%ecx
   27a08:	and    $0x1000,%ecx
   27a0e:	test   %ecx,%ecx
   27a10:	jne    279b4 <png_write_IHDR+0x1c4>
   27a12:	cmp    $0x2,%r12d
   27a16:	jne    27adc <png_write_IHDR+0x2ec>
   27a1c:	cmp    $0x40,%edx
   27a1f:	jne    279b4 <png_write_IHDR+0x1c4>
   27a21:	mov    $0x40,%ecx
   27a26:	jmp    27a6a <png_write_IHDR+0x27a>
   27a28:	lea    0x84a7(%rip),%rsi        # 2fed6 <fourbppswaptable+0x88a>
   27a2f:	mov    %rdi,%rax
   27a32:	mov    %r10,-0x10(%rbp)
   27a36:	mov    %r9,-0x20(%rbp)
   27a3a:	mov    %r11,-0x30(%rbp)
   27a3e:	mov    %r8,-0x48(%rbp)
   27a42:	mov    %rdi,%r15
   27a45:	mov    %rax,%rdi
   27a48:	callq  5390 <png_warning@plt>
   27a4d:	mov    %r15,%rdi
   27a50:	mov    -0x48(%rbp),%r8
   27a54:	mov    -0x30(%rbp),%r11
   27a58:	mov    -0x20(%rbp),%r9
   27a5c:	mov    -0x10(%rbp),%r10
   27a60:	mov    $0x1,%eax
   27a65:	xor    %ecx,%ecx
   27a67:	mov    %rcx,%r15
   27a6a:	movslq 0x18(%rbp),%rdx
   27a6e:	test   %edx,%edx
   27a70:	jne    27aeb <png_write_IHDR+0x2fb>
   27a72:	mov    %bl,0x268(%rdi)
   27a78:	mov    %r12b,0x267(%rdi)
   27a7f:	mov    %r15b,0x264(%rdi)
   27a86:	mov    %cl,0x3dc(%rdi)
   27a8c:	movb   $0x0,0x418(%rdi)
   27a93:	mov    %r14d,0x1f8(%rdi)
   27a9a:	mov    %r13d,0x1fc(%rdi)
   27aa1:	movzbl 0x26b(%rdi),%esi
   27aa8:	mov    %rbx,%rax
   27aab:	imul   %sil
   27aae:	mov    %al,0x26a(%rdi)
   27ab4:	cmp    $0x7,%al
   27ab6:	ja     27afc <png_write_IHDR+0x30c>
   27ab8:	movzbl %al,%eax
   27abb:	mov    %r14d,%edx
   27abe:	imul   %rdx,%rax
   27ac2:	add    $0x7,%rax
   27ac6:	shr    $0x3,%rax
   27aca:	jmp    27b0a <png_write_IHDR+0x31a>
   27acc:	mov    %rax,%r10
   27acf:	jmpq   27904 <png_write_IHDR+0x114>
   27ad4:	mov    %rax,%r10
   27ad7:	jmpq   27925 <png_write_IHDR+0x135>
   27adc:	cmp    $0x6,%r12d
   27ae0:	je     27a1c <png_write_IHDR+0x22c>
   27ae6:	jmpq   279b4 <png_write_IHDR+0x1c4>
   27aeb:	cmp    $0x1,%edx
   27aee:	jne    27baf <png_write_IHDR+0x3bf>
   27af4:	mov    %rax,%r15
   27af7:	jmpq   27a72 <png_write_IHDR+0x282>
   27afc:	movzbl %al,%eax
   27aff:	shr    $0x3,%rax
   27b03:	mov    %r14d,%edx
   27b06:	imul   %rdx,%rax
   27b0a:	mov    %rax,0x208(%rdi)
   27b11:	mov    %r14d,0x204(%rdi)
   27b18:	mov    %bl,0x269(%rdi)
   27b1e:	mov    %sil,0x26c(%rdi)
   27b25:	lea    -0x55(%rbp),%rax
   27b29:	mov    %r10,-0x8(%rbp)
   27b2d:	mov    %r9,-0x18(%rbp)
   27b31:	mov    %r11,-0x28(%rbp)
   27b35:	mov    %r8,-0x38(%rbp)
   27b39:	mov    %rdi,-0x48(%rbp)
   27b3d:	mov    %r14,%rsi
   27b40:	mov    %rcx,%r14
   27b43:	mov    %rax,%rdi
   27b46:	callq  5500 <png_save_uint_32@plt>
   27b4b:	mov    %r13,%rsi
   27b4e:	lea    -0x51(%rbp),%rdi
   27b52:	callq  5500 <png_save_uint_32@plt>
   27b57:	mov    %bl,-0x4d(%rbp)
   27b5a:	mov    %r12b,-0x4c(%rbp)
   27b5e:	movb   $0x0,-0x4b(%rbp)
   27b62:	mov    %r14b,-0x4a(%rbp)
   27b66:	mov    %r15b,-0x49(%rbp)
   27b6a:	mov    $0x49484452,%esi
   27b6f:	mov    $0xd,%ecx
   27b74:	mov    -0x48(%rbp),%rbx
   27b78:	mov    %rbx,%rdi
   27b7b:	lea    -0x55(%rbp),%rdx
   27b7f:	callq  29fe0 <png_write_complete_chunk>
   27b84:	movzbl 0x266(%rbx),%eax
   27b8b:	test   %al,%al
   27b8d:	je     27c00 <png_write_IHDR+0x410>
   27b8f:	movl   $0x1,0x12c(%rbx)
   27b99:	mov    -0x38(%rbp),%r14
   27b9d:	mov    -0x28(%rbp),%r13
   27ba1:	mov    -0x18(%rbp),%r12
   27ba5:	mov    -0x8(%rbp),%rbx
   27ba9:	mov    -0x40(%rbp),%r15
   27bad:	leaveq 
   27bae:	retq   
   27baf:	lea    0x833e(%rip),%rsi        # 2fef4 <fourbppswaptable+0x8a8>
   27bb6:	mov    %rdi,%rax
   27bb9:	mov    %r10,-0x8(%rbp)
   27bbd:	mov    %r9,-0x18(%rbp)
   27bc1:	mov    %r11,-0x28(%rbp)
   27bc5:	mov    %r8,-0x38(%rbp)
   27bc9:	mov    %r13,-0x48(%rbp)
   27bcd:	mov    %rcx,%r13
   27bd0:	mov    %rdi,%r15
   27bd3:	mov    %rax,%rdi
   27bd6:	callq  5390 <png_warning@plt>
   27bdb:	mov    %r13,%rcx
   27bde:	mov    %r15,%rdi
   27be1:	mov    -0x48(%rbp),%r13
   27be5:	mov    -0x38(%rbp),%r8
   27be9:	mov    -0x28(%rbp),%r11
   27bed:	mov    -0x18(%rbp),%r9
   27bf1:	mov    -0x8(%rbp),%r10
   27bf5:	mov    $0x1,%r15d
   27bfb:	jmpq   27a72 <png_write_IHDR+0x282>
   27c00:	movzbl 0x267(%rbx),%eax
   27c07:	cmp    $0x3,%al
   27c09:	jne    27c17 <png_write_IHDR+0x427>
   27c0b:	movb   $0x8,0x266(%rbx)
   27c12:	jmpq   27b8f <png_write_IHDR+0x39f>
   27c17:	movzbl 0x268(%rbx),%eax
   27c1e:	cmp    $0x7,%al
   27c20:	jbe    27c0b <png_write_IHDR+0x41b>
   27c22:	movb   $0xf8,0x266(%rbx)
   27c29:	jmpq   27b8f <png_write_IHDR+0x39f>
   27c2e:	xchg   %ax,%ax

0000000000027c30 <png_write_PLTE>:
   27c30:	push   %rbp
   27c31:	mov    %rsp,%rbp
   27c34:	sub    $0x30,%rsp
   27c38:	movzbl 0x267(%rdi),%eax
   27c3f:	cmp    $0x3,%al
   27c41:	je     27c63 <png_write_PLTE+0x33>
   27c43:	mov    %r13,%rax
   27c46:	mov    %rsi,%r13
   27c49:	mov    %r14,%r8
   27c4c:	mov    %rbx,%r14
   27c4f:	mov    %rdi,%rbx
   27c52:	mov    %r15,%r9
   27c55:	mov    %r12,%r15
   27c58:	mov    %rdx,%r12
   27c5b:	mov    $0x100,%r10d
   27c61:	jmp    27c8b <png_write_PLTE+0x5b>
   27c63:	mov    %r13,%rax
   27c66:	mov    %rsi,%r13
   27c69:	mov    %r14,%r8
   27c6c:	mov    %rbx,%r14
   27c6f:	mov    %rdi,%rbx
   27c72:	mov    %r15,%r9
   27c75:	mov    %r12,%r15
   27c78:	mov    %rdx,%r12
   27c7b:	mov    $0x1,%r10d
   27c81:	movzbl 0x268(%rbx),%ecx
   27c88:	shl    %cl,%r10d
   27c8b:	mov    0x3d8(%rbx),%ecx
   27c91:	and    $0x1,%ecx
   27c94:	test   %ecx,%ecx
   27c96:	je     27cf2 <png_write_PLTE+0xc2>
   27c98:	cmp    %r10d,%r12d
   27c9b:	ja     27cf7 <png_write_PLTE+0xc7>
   27c9d:	movzbl 0x267(%rbx),%ecx
   27ca4:	and    $0x2,%ecx
   27ca7:	test   %ecx,%ecx
   27ca9:	je     27d33 <png_write_PLTE+0x103>
   27caf:	mov    %r12w,0x258(%rbx)
   27cb7:	mov    $0x504c5445,%esi
   27cbc:	lea    (%r12,%r12,2),%edx
   27cc0:	mov    %rbx,%rdi
   27cc3:	mov    %rax,-0x18(%rbp)
   27cc7:	mov    %r8,-0x20(%rbp)
   27ccb:	mov    %r9,-0x28(%rbp)
   27ccf:	callq  29f50 <png_write_chunk_header>
   27cd4:	lea    -0x2b(%rbp),%rcx
   27cd8:	mov    $0x3,%edx
   27cdd:	xor    %eax,%eax
   27cdf:	mov    %r14,-0x8(%rbp)
   27ce3:	mov    %r15,-0x10(%rbp)
   27ce7:	mov    %rax,%r14
   27cea:	mov    %rcx,%r15
   27ced:	jmpq   27d8f <png_write_PLTE+0x15f>
   27cf2:	test   %r12d,%r12d
   27cf5:	jne    27c98 <png_write_PLTE+0x68>
   27cf7:	lea    0x8217(%rip),%rsi        # 2ff15 <fourbppswaptable+0x8c9>
   27cfe:	movzbl 0x267(%rbx),%ecx
   27d05:	cmp    $0x3,%cl
   27d08:	je     27dc1 <png_write_PLTE+0x191>
   27d0e:	mov    %rbx,%rdi
   27d11:	mov    %r8,%rbx
   27d14:	mov    %r9,%r12
   27d17:	mov    %rax,%r13
   27d1a:	callq  5390 <png_warning@plt>
   27d1f:	mov    %r14,%rax
   27d22:	mov    %rbx,%r14
   27d25:	mov    %rax,%rbx
   27d28:	mov    %r15,%rax
   27d2b:	mov    %r12,%r15
   27d2e:	mov    %rax,%r12
   27d31:	leaveq 
   27d32:	retq   
   27d33:	mov    %rbx,%rdi
   27d36:	mov    %r8,%rbx
   27d39:	mov    %r9,%r12
   27d3c:	mov    %rax,%r13
   27d3f:	lea    0x81f3(%rip),%rsi        # 2ff39 <fourbppswaptable+0x8ed>
   27d46:	callq  5390 <png_warning@plt>
   27d4b:	mov    %r14,%rax
   27d4e:	mov    %rbx,%r14
   27d51:	mov    %rax,%rbx
   27d54:	mov    %r15,%rax
   27d57:	mov    %r12,%r15
   27d5a:	mov    %rax,%r12
   27d5d:	leaveq 
   27d5e:	retq   
   27d5f:	movzbl 0x0(%r13),%eax
   27d64:	mov    %al,-0x2b(%rbp)
   27d67:	movzbl 0x1(%r13),%eax
   27d6c:	mov    %al,-0x2a(%rbp)
   27d6f:	movzbl 0x2(%r13),%eax
   27d74:	mov    %al,-0x29(%rbp)
   27d77:	mov    %rbx,%rdi
   27d7a:	mov    %r15,%rsi
   27d7d:	callq  5100 <png_write_chunk_data@plt>
   27d82:	add    $0x1,%r14d
   27d86:	add    $0x3,%r13
   27d8a:	mov    $0x3,%edx
   27d8f:	cmp    %r14d,%r12d
   27d92:	ja     27d5f <png_write_PLTE+0x12f>
   27d94:	mov    %rbx,%rdi
   27d97:	callq  5480 <png_write_chunk_end@plt>
   27d9c:	mov    0x12c(%rbx),%eax
   27da2:	or     $0x2,%eax
   27da5:	mov    %eax,0x12c(%rbx)
   27dab:	mov    -0x10(%rbp),%r12
   27daf:	mov    -0x8(%rbp),%rbx
   27db3:	mov    -0x28(%rbp),%r15
   27db7:	mov    -0x20(%rbp),%r14
   27dbb:	mov    -0x18(%rbp),%r13
   27dbf:	leaveq 
   27dc0:	retq   
   27dc1:	mov    %rbx,%rdi
   27dc4:	callq  5470 <png_error@plt>
   27dc9:	nopl   0x0(%rax)

0000000000027dd0 <png_compress_IDAT>:
   27dd0:	push   %rbp
   27dd1:	mov    %rsp,%rbp
   27dd4:	sub    $0x40,%rsp
   27dd8:	mov    %rbx,-0x8(%rbp)
   27ddc:	mov    %r12,-0x10(%rbp)
   27de0:	mov    %r13,-0x18(%rbp)
   27de4:	mov    %r14,-0x20(%rbp)
   27de8:	mov    %r15,-0x28(%rbp)
   27dec:	mov    $0x49444154,%r14d
   27df2:	mov    0x138(%rdi),%eax
   27df8:	cmp    $0x49444154,%eax
   27dfd:	jne    27e34 <png_compress_IDAT+0x64>
   27dff:	mov    %rdx,%rbx
   27e02:	mov    %rdi,%r12
   27e05:	mov    %rcx,%r13
   27e08:	mov    %rsi,%r15
   27e0b:	lea    0x140(%r12),%r14
   27e13:	mov    %r14,-0x30(%rbp)
   27e17:	mov    %r15,(%r14)
   27e1a:	movl   $0x0,0x148(%r12)
   27e26:	mov    $0xffffffff,%eax
   27e2b:	xor    %esi,%esi
   27e2d:	mov    $0xfffffffe,%ecx
   27e32:	jmp    27e72 <png_compress_IDAT+0xa2>
   27e34:	mov    0x1b0(%rdi),%rbx
   27e3b:	test   %rbx,%rbx
   27e3e:	je     27f8f <png_compress_IDAT+0x1bf>
   27e44:	mov    %rcx,%r13
   27e47:	mov    %rsi,%r15
   27e4a:	mov    %rbx,%rsi
   27e4d:	mov    %rdx,%rbx
   27e50:	mov    %rdi,%r12
   27e53:	callq  277a0 <png_free_buffer_list>
   27e58:	jmpq   27fbc <png_compress_IDAT+0x1ec>
   27e5d:	test   %rbx,%rbx
   27e60:	je     27fff <png_compress_IDAT+0x22f>
   27e66:	xor    %esi,%esi
   27e68:	mov    $0xffffffff,%eax
   27e6d:	mov    $0xfffffffe,%ecx
   27e72:	cmp    %rcx,%rbx
   27e75:	ja     27e7a <png_compress_IDAT+0xaa>
   27e77:	mov    %rbx,%rax
   27e7a:	mov    %eax,0x148(%r12)
   27e82:	mov    %eax,%r15d
   27e85:	cmp    %rbx,%r15
   27e88:	jne    27e8d <png_compress_IDAT+0xbd>
   27e8a:	mov    %r13,%rsi
   27e8d:	mov    %r14,%rdi
   27e90:	callq  5330 <deflate@plt>
   27e95:	sub    %r15,%rbx
   27e98:	mov    0x148(%r12),%ecx
   27ea0:	movl   $0x0,0x148(%r12)
   27eac:	add    %rcx,%rbx
   27eaf:	mov    0x160(%r12),%ecx
   27eb7:	test   %ecx,%ecx
   27eb9:	jne    2801b <png_compress_IDAT+0x24b>
   27ebf:	mov    0x1b8(%r12),%r8d
   27ec7:	mov    0x1b0(%r12),%r15
   27ecf:	add    $0x8,%r15
   27ed3:	mov    0x12c(%r12),%ecx
   27edb:	and    $0x4,%ecx
   27ede:	test   %ecx,%ecx
   27ee0:	jne    27f1a <png_compress_IDAT+0x14a>
   27ee2:	movzbl 0x418(%r12),%ecx
   27eeb:	test   %cl,%cl
   27eed:	jne    27f1a <png_compress_IDAT+0x14a>
   27eef:	mov    %r12,%rdi
   27ef2:	mov    %rbx,-0x38(%rbp)
   27ef6:	mov    %rax,%rbx
   27ef9:	mov    %r8,%r14
   27efc:	callq  2a050 <png_image_size>
   27f01:	mov    %rax,%rsi
   27f04:	mov    %r15,%rdi
   27f07:	callq  2a210 <optimize_cmf>
   27f0c:	mov    %rbx,%rax
   27f0f:	mov    %r14,%r8
   27f12:	mov    -0x30(%rbp),%r14
   27f16:	mov    -0x38(%rbp),%rbx
   27f1a:	test   %r8d,%r8d
   27f1d:	je     27f4a <png_compress_IDAT+0x17a>
   27f1f:	mov    %r12,%rdi
   27f22:	mov    $0x49444154,%esi
   27f27:	mov    %r15,%rdx
   27f2a:	mov    %r8,%rcx
   27f2d:	mov    %rbx,-0x38(%rbp)
   27f31:	mov    %r8,%rbx
   27f34:	mov    %rax,%r14
   27f37:	callq  29fe0 <png_write_complete_chunk>
   27f3c:	mov    %r14,%rax
   27f3f:	mov    %rbx,%r8
   27f42:	mov    -0x30(%rbp),%r14
   27f46:	mov    -0x38(%rbp),%rbx
   27f4a:	mov    0x12c(%r12),%ecx
   27f52:	or     $0x4,%ecx
   27f55:	test   %eax,%eax
   27f57:	mov    %ecx,0x12c(%r12)
   27f5f:	mov    %r15,0x158(%r12)
   27f67:	mov    %r8d,0x160(%r12)
   27f6f:	jne    2801b <png_compress_IDAT+0x24b>
   27f75:	test   %r13d,%r13d
   27f78:	je     2801b <png_compress_IDAT+0x24b>
   27f7e:	xor    %esi,%esi
   27f80:	mov    $0xffffffff,%eax
   27f85:	mov    $0xfffffffe,%ecx
   27f8a:	jmpq   27e72 <png_compress_IDAT+0xa2>
   27f8f:	mov    0x1b8(%rdi),%eax
   27f95:	add    $0x8,%rax
   27f99:	mov    %rdx,%rbx
   27f9c:	mov    %rcx,%r13
   27f9f:	mov    %rsi,%r15
   27fa2:	mov    %rax,%rsi
   27fa5:	mov    %rdi,%r12
   27fa8:	callq  5800 <png_malloc@plt>
   27fad:	mov    %rax,0x1b0(%r12)
   27fb5:	movq   $0x0,(%rax)
   27fbc:	mov    %r12,%rdi
   27fbf:	callq  2a050 <png_image_size>
   27fc4:	mov    %rax,%rdx
   27fc7:	mov    %r14,%rsi
   27fca:	mov    %r12,%rdi
   27fcd:	callq  2a2b0 <png_deflate_claim>
   27fd2:	test   %eax,%eax
   27fd4:	jne    28042 <png_compress_IDAT+0x272>
   27fd6:	mov    0x1b0(%r12),%rax
   27fde:	add    $0x8,%rax
   27fe2:	mov    %rax,0x158(%r12)
   27fea:	mov    0x1b8(%r12),%eax
   27ff2:	mov    %eax,0x160(%r12)
   27ffa:	jmpq   27e0b <png_compress_IDAT+0x3b>
   27fff:	cmp    $0x4,%r13d
   28003:	je     28051 <png_compress_IDAT+0x281>
   28005:	mov    -0x28(%rbp),%r15
   28009:	mov    -0x20(%rbp),%r14
   2800d:	mov    -0x18(%rbp),%r13
   28011:	mov    -0x10(%rbp),%r12
   28015:	mov    -0x8(%rbp),%rbx
   28019:	leaveq 
   2801a:	retq   
   2801b:	test   %eax,%eax
   2801d:	je     27e5d <png_compress_IDAT+0x8d>
   28023:	cmp    $0x1,%eax
   28026:	je     28060 <png_compress_IDAT+0x290>
   28028:	mov    %rax,%rsi
   2802b:	mov    %r12,%rdi
   2802e:	callq  6920 <png_zstream_error>
   28033:	mov    %r12,%rdi
   28036:	mov    0x170(%rdi),%rsi
   2803d:	callq  5470 <png_error@plt>
   28042:	mov    %r12,%rdi
   28045:	mov    0x170(%rdi),%rsi
   2804c:	callq  5470 <png_error@plt>
   28051:	mov    %r12,%rdi
   28054:	lea    0x7f16(%rip),%rsi        # 2ff71 <fourbppswaptable+0x925>
   2805b:	callq  5470 <png_error@plt>
   28060:	cmp    $0x4,%r13d
   28064:	jne    28028 <png_compress_IDAT+0x258>
   28066:	mov    0x1b8(%r12),%r13d
   2806e:	mov    0x160(%r12),%r14d
   28076:	mov    0x1b0(%r12),%rbx
   2807e:	add    $0x8,%rbx
   28082:	mov    0x12c(%r12),%eax
   2808a:	and    $0x4,%eax
   2808d:	test   %eax,%eax
   2808f:	je     280f9 <png_compress_IDAT+0x329>
   28091:	cmp    %r13d,%r14d
   28094:	je     280ac <png_compress_IDAT+0x2dc>
   28096:	sub    %r14d,%r13d
   28099:	mov    %r13d,%ecx
   2809c:	mov    %rbx,%rdx
   2809f:	mov    %r12,%rdi
   280a2:	mov    $0x49444154,%esi
   280a7:	callq  29fe0 <png_write_complete_chunk>
   280ac:	movl   $0x0,0x160(%r12)
   280b8:	movq   $0x0,0x158(%r12)
   280c4:	mov    0x12c(%r12),%eax
   280cc:	or     $0xc,%eax
   280cf:	mov    %eax,0x12c(%r12)
   280d7:	movl   $0x0,0x138(%r12)
   280e3:	mov    -0x28(%rbp),%r15
   280e7:	mov    -0x20(%rbp),%r14
   280eb:	mov    -0x18(%rbp),%r13
   280ef:	mov    -0x10(%rbp),%r12
   280f3:	mov    -0x8(%rbp),%rbx
   280f7:	leaveq 
   280f8:	retq   
   280f9:	movzbl 0x418(%r12),%eax
   28102:	test   %al,%al
   28104:	jne    28091 <png_compress_IDAT+0x2c1>
   28106:	mov    %r12,%rdi
   28109:	callq  2a050 <png_image_size>
   2810e:	mov    %rax,%rsi
   28111:	mov    %rbx,%rdi
   28114:	callq  2a210 <optimize_cmf>
   28119:	jmpq   28091 <png_compress_IDAT+0x2c1>
   2811e:	xchg   %ax,%ax

0000000000028120 <png_write_IEND>:
   28120:	push   %rbp
   28121:	mov    %rsp,%rbp
   28124:	sub    $0x10,%rsp
   28128:	mov    %r15,-0x8(%rbp)
   2812c:	mov    $0x49454e44,%esi
   28131:	xor    %edx,%edx
   28133:	mov    %rdx,%rcx
   28136:	mov    %rdi,%r15
   28139:	callq  29fe0 <png_write_complete_chunk>
   2813e:	mov    0x12c(%r15),%eax
   28145:	or     $0x10,%eax
   28148:	mov    %eax,0x12c(%r15)
   2814f:	mov    -0x8(%rbp),%r15
   28153:	leaveq 
   28154:	retq   
   28155:	data16 nopw %cs:0x0(%rax,%rax,1)

0000000000028160 <png_write_gAMA_fixed>:
   28160:	push   %rbp
   28161:	mov    %rsp,%rbp
   28164:	sub    $0x10,%rsp
   28168:	mov    %r15,-0x8(%rbp)
   2816c:	mov    %rdi,%r15
   2816f:	lea    -0xc(%rbp),%rdi
   28173:	callq  5500 <png_save_uint_32@plt>
   28178:	mov    %r15,%rdi
   2817b:	mov    $0x67414d41,%esi
   28180:	mov    $0x4,%ecx
   28185:	lea    -0xc(%rbp),%rdx
   28189:	callq  29fe0 <png_write_complete_chunk>
   2818e:	mov    -0x8(%rbp),%r15
   28192:	leaveq 
   28193:	retq   
   28194:	data16 nopw %cs:0x0(%rax,%rax,1)
   2819f:	nop

00000000000281a0 <png_write_sBIT>:
   281a0:	push   %rbp
   281a1:	mov    %rsp,%rbp
   281a4:	sub    $0x10,%rsp
   281a8:	lea    0x7de5(%rip),%r10        # 2ff94 <fourbppswaptable+0x948>
   281af:	mov    %rdx,%rax
   281b2:	and    $0x2,%eax
   281b5:	test   %eax,%eax
   281b7:	jg     281f0 <png_write_sBIT+0x50>
   281b9:	movzbl 0x3(%rsi),%ecx
   281bd:	test   %cl,%cl
   281bf:	je     2823a <png_write_sBIT+0x9a>
   281c1:	movzbl 0x269(%rdi),%eax
   281c8:	cmp    %al,%cl
   281ca:	ja     2823a <png_write_sBIT+0x9a>
   281cc:	mov    %cl,-0x4(%rbp)
   281cf:	mov    $0x1,%ecx
   281d4:	mov    $0x2,%eax
   281d9:	and    $0x4,%edx
   281dc:	test   %edx,%edx
   281de:	jg     28244 <png_write_sBIT+0xa4>
   281e0:	mov    $0x73424954,%esi
   281e5:	lea    -0x4(%rbp),%rdx
   281e9:	callq  29fe0 <png_write_complete_chunk>
   281ee:	leaveq 
   281ef:	retq   
   281f0:	cmp    $0x3,%edx
   281f3:	jne    28266 <png_write_sBIT+0xc6>
   281f5:	mov    $0x8,%eax
   281fa:	movzbl (%rsi),%r9d
   281fe:	test   %r9b,%r9b
   28201:	je     2826f <png_write_sBIT+0xcf>
   28203:	cmp    %al,%r9b
   28206:	ja     2826f <png_write_sBIT+0xcf>
   28208:	movzbl 0x1(%rsi),%r8d
   2820d:	test   %r8b,%r8b
   28210:	je     2826f <png_write_sBIT+0xcf>
   28212:	cmp    %r8b,%al
   28215:	jb     2826f <png_write_sBIT+0xcf>
   28217:	movzbl 0x2(%rsi),%ecx
   2821b:	test   %cl,%cl
   2821d:	je     2826f <png_write_sBIT+0xcf>
   2821f:	cmp    %cl,%al
   28221:	jb     2826f <png_write_sBIT+0xcf>
   28223:	mov    %r9b,-0x4(%rbp)
   28227:	mov    %r8b,-0x3(%rbp)
   2822b:	mov    %cl,-0x2(%rbp)
   2822e:	mov    $0x3,%ecx
   28233:	mov    $0x4,%eax
   28238:	jmp    281d9 <png_write_sBIT+0x39>
   2823a:	mov    %r10,%rsi
   2823d:	callq  5390 <png_warning@plt>
   28242:	leaveq 
   28243:	retq   
   28244:	movzbl 0x4(%rsi),%esi
   28248:	test   %sil,%sil
   2824b:	je     28279 <png_write_sBIT+0xd9>
   2824d:	movzbl 0x269(%rdi),%edx
   28254:	cmp    %dl,%sil
   28257:	ja     28279 <png_write_sBIT+0xd9>
   28259:	mov    %sil,-0x4(%rbp,%rcx,1)
   2825e:	mov    %rax,%rcx
   28261:	jmpq   281e0 <png_write_sBIT+0x40>
   28266:	movzbl 0x269(%rdi),%eax
   2826d:	jmp    281fa <png_write_sBIT+0x5a>
   2826f:	mov    %r10,%rsi
   28272:	callq  5390 <png_warning@plt>
   28277:	leaveq 
   28278:	retq   
   28279:	mov    %r10,%rsi
   2827c:	callq  5390 <png_warning@plt>
   28281:	leaveq 
   28282:	retq   
   28283:	data16 nopw %cs:0x0(%rax,%rax,1)
   2828e:	xchg   %ax,%ax

0000000000028290 <png_write_cHRM_fixed>:
   28290:	push   %rbp
   28291:	mov    %rsp,%rbp
   28294:	sub    $0x30,%rsp
   28298:	mov    %r14,-0x8(%rbp)
   2829c:	mov    %r15,-0x10(%rbp)
   282a0:	mov    %rdi,%r14
   282a3:	mov    %rsi,%r15
   282a6:	lea    -0x30(%rbp),%rdi
   282aa:	movslq 0x18(%r15),%rsi
   282ae:	callq  5520 <png_save_int_32@plt>
   282b3:	lea    -0x2c(%rbp),%rdi
   282b7:	movslq 0x1c(%r15),%rsi
   282bb:	callq  5520 <png_save_int_32@plt>
   282c0:	lea    -0x28(%rbp),%rdi
   282c4:	movslq (%r15),%rsi
   282c7:	callq  5520 <png_save_int_32@plt>
   282cc:	lea    -0x24(%rbp),%rdi
   282d0:	movslq 0x4(%r15),%rsi
   282d4:	callq  5520 <png_save_int_32@plt>
   282d9:	lea    -0x20(%rbp),%rdi
   282dd:	movslq 0x8(%r15),%rsi
   282e1:	callq  5520 <png_save_int_32@plt>
   282e6:	lea    -0x1c(%rbp),%rdi
   282ea:	movslq 0xc(%r15),%rsi
   282ee:	callq  5520 <png_save_int_32@plt>
   282f3:	lea    -0x18(%rbp),%rdi
   282f7:	movslq 0x10(%r15),%rsi
   282fb:	callq  5520 <png_save_int_32@plt>
   28300:	lea    -0x14(%rbp),%rdi
   28304:	movslq 0x14(%r15),%rsi
   28308:	callq  5520 <png_save_int_32@plt>
   2830d:	mov    %r14,%rdi
   28310:	mov    $0x6348524d,%esi
   28315:	mov    $0x20,%ecx
   2831a:	lea    -0x30(%rbp),%rdx
   2831e:	callq  29fe0 <png_write_complete_chunk>
   28323:	mov    -0x10(%rbp),%r15
   28327:	mov    -0x8(%rbp),%r14
   2832b:	leaveq 
   2832c:	retq   
   2832d:	nopl   (%rax)

0000000000028330 <png_write_sRGB>:
   28330:	push   %rbp
   28331:	mov    %rsp,%rbp
   28334:	sub    $0x20,%rsp
   28338:	cmp    $0x3,%esi
   2833b:	jle    2836e <png_write_sRGB+0x3e>
   2833d:	lea    0x7c6d(%rip),%rcx        # 2ffb1 <fourbppswaptable+0x965>
   28344:	mov    %rdi,%rax
   28347:	mov    %r14,-0x8(%rbp)
   2834b:	mov    %r15,-0x10(%rbp)
   2834f:	mov    %rsi,%r14
   28352:	mov    %rcx,%rsi
   28355:	mov    %rdi,%r15
   28358:	mov    %rax,%rdi
   2835b:	callq  5390 <png_warning@plt>
   28360:	mov    %r14,%rsi
   28363:	mov    %r15,%rdi
   28366:	mov    -0x10(%rbp),%r15
   2836a:	mov    -0x8(%rbp),%r14
   2836e:	mov    %sil,-0x11(%rbp)
   28372:	mov    $0x73524742,%esi
   28377:	lea    -0x11(%rbp),%rdx
   2837b:	mov    $0x1,%ecx
   28380:	callq  29fe0 <png_write_complete_chunk>
   28385:	leaveq 
   28386:	retq   
   28387:	nopw   0x0(%rax,%rax,1)

0000000000028390 <png_write_eXIf>:
   28390:	push   %rbp
   28391:	mov    %rsp,%rbp
   28394:	sub    $0x30,%rsp
   28398:	mov    %r13,-0x18(%rbp)
   2839c:	mov    %r14,-0x20(%rbp)
   283a0:	mov    %r15,-0x28(%rbp)
   283a4:	mov    %rbx,-0x8(%rbp)
   283a8:	mov    %r12,-0x10(%rbp)
   283ac:	mov    %rsi,%r13
   283af:	mov    $0x65584966,%esi
   283b4:	mov    %rdi,%rbx
   283b7:	mov    %rdx,%r12
   283ba:	callq  29f50 <png_write_chunk_header>
   283bf:	lea    -0x29(%rbp),%r14
   283c3:	mov    $0x1,%edx
   283c8:	xor    %r15d,%r15d
   283cb:	jmp    283ed <png_write_eXIf+0x5d>
   283cd:	movslq %r15d,%rax
   283d0:	movzbl 0x0(%r13,%rax,1),%eax
   283d6:	mov    %al,-0x29(%rbp)
   283d9:	mov    %rbx,%rdi
   283dc:	mov    %r14,%rsi
   283df:	callq  5100 <png_write_chunk_data@plt>
   283e4:	add    $0x1,%r15d
   283e8:	mov    $0x1,%edx
   283ed:	cmp    %r12d,%r15d
   283f0:	jl     283cd <png_write_eXIf+0x3d>
   283f2:	mov    %rbx,%rdi
   283f5:	callq  5480 <png_write_chunk_end@plt>
   283fa:	mov    -0x10(%rbp),%r12
   283fe:	mov    -0x8(%rbp),%rbx
   28402:	mov    -0x28(%rbp),%r15
   28406:	mov    -0x20(%rbp),%r14
   2840a:	mov    -0x18(%rbp),%r13
   2840e:	leaveq 
   2840f:	retq   

0000000000028410 <png_write_iCCP>:
   28410:	push   %rbp
   28411:	mov    %rsp,%rbp
   28414:	sub    $0x490,%rsp
   2841b:	test   %rdx,%rdx
   2841e:	je     28527 <png_write_iCCP+0x117>
   28424:	movzbl (%rdx),%eax
   28427:	shl    $0x18,%eax
   2842a:	movzbl 0x1(%rdx),%ecx
   2842e:	shl    $0x10,%ecx
   28431:	add    %eax,%ecx
   28433:	movzbl 0x2(%rdx),%eax
   28437:	shl    $0x8,%eax
   2843a:	add    %eax,%ecx
   2843c:	movzbl 0x3(%rdx),%eax
   28440:	add    %eax,%ecx
   28442:	cmp    $0x83,%ecx
   28448:	jbe    28533 <png_write_iCCP+0x123>
   2844e:	movzbl 0x8(%rdx),%eax
   28452:	cmp    $0x3,%al
   28454:	ja     2853f <png_write_iCCP+0x12f>
   2845a:	lea    -0x481(%rbp),%rax
   28461:	mov    %rdi,%r8
   28464:	mov    %r13,-0x8(%rbp)
   28468:	mov    %r14,-0x10(%rbp)
   2846c:	mov    %r15,-0x18(%rbp)
   28470:	mov    %rdi,%r13
   28473:	mov    %r8,%rdi
   28476:	mov    %rcx,%r14
   28479:	mov    %rdx,%r15
   2847c:	mov    %rax,%rdx
   2847f:	callq  23280 <png_check_keyword>
   28484:	test   %eax,%eax
   28486:	je     28559 <png_write_iCCP+0x149>
   2848c:	lea    0x1(%rax),%ecx
   2848f:	mov    %ecx,%ecx
   28491:	movb   $0x0,-0x481(%rbp,%rcx,1)
   28499:	lea    -0x430(%rbp),%rcx
   284a0:	mov    %r14d,%edx
   284a3:	mov    %r15,%rsi
   284a6:	mov    %rcx,%r15
   284a9:	mov    %rax,%r14
   284ac:	mov    %r15,%rdi
   284af:	callq  2a600 <png_text_compress_init>
   284b4:	mov    $0x69434350,%esi
   284b9:	add    $0x2,%r14d
   284bd:	mov    %r13,%rdi
   284c0:	mov    %rsi,%rax
   284c3:	mov    %r15,%rdx
   284c6:	mov    %rsi,%r15
   284c9:	mov    %rax,%rsi
   284cc:	mov    %r14,%rcx
   284cf:	callq  2a620 <png_text_compress>
   284d4:	test   %eax,%eax
   284d6:	jne    28568 <png_write_iCCP+0x158>
   284dc:	mov    %r15,%rsi
   284df:	mov    %r14,%rdx
   284e2:	add    -0x420(%rbp),%edx
   284e8:	mov    %r13,%rdi
   284eb:	callq  29f50 <png_write_chunk_header>
   284f0:	mov    %r14d,%edx
   284f3:	mov    %r13,%rdi
   284f6:	lea    -0x481(%rbp),%rsi
   284fd:	callq  5100 <png_write_chunk_data@plt>
   28502:	mov    %r13,%rdi
   28505:	lea    -0x430(%rbp),%rsi
   2850c:	callq  2a8b0 <png_write_compressed_data_out>
   28511:	mov    %r13,%rdi
   28514:	callq  5480 <png_write_chunk_end@plt>
   28519:	mov    -0x18(%rbp),%r15
   2851d:	mov    -0x10(%rbp),%r14
   28521:	mov    -0x8(%rbp),%r13
   28525:	leaveq 
   28526:	retq   
   28527:	lea    0x7aab(%rip),%rsi        # 2ffd9 <fourbppswaptable+0x98d>
   2852e:	callq  5470 <png_error@plt>
   28533:	lea    0x7ab9(%rip),%rsi        # 2fff3 <fourbppswaptable+0x9a7>
   2853a:	callq  5470 <png_error@plt>
   2853f:	mov    %rcx,%rax
   28542:	and    $0x3,%eax
   28545:	test   %eax,%eax
   28547:	je     2845a <png_write_iCCP+0x4a>
   2854d:	lea    0x7ab5(%rip),%rsi        # 30009 <fourbppswaptable+0x9bd>
   28554:	callq  5470 <png_error@plt>
   28559:	mov    %r13,%rdi
   2855c:	lea    0x7ad7(%rip),%rsi        # 3003a <fourbppswaptable+0x9ee>
   28563:	callq  5470 <png_error@plt>
   28568:	mov    %r13,%rdi
   2856b:	mov    0x170(%rdi),%rsi
   28572:	callq  5470 <png_error@plt>
   28577:	nopw   0x0(%rax,%rax,1)

0000000000028580 <png_write_sPLT>:
   28580:	push   %rbp
   28581:	mov    %rsp,%rbp
   28584:	sub    $0x90,%rsp
   2858b:	mov    %rbx,-0x8(%rbp)
   2858f:	mov    %r12,-0x10(%rbp)
   28593:	mov    %r13,-0x18(%rbp)
   28597:	mov    %r14,-0x20(%rbp)
   2859b:	mov    %r15,-0x28(%rbp)
   2859f:	movzbl 0x8(%rsi),%eax
   285a3:	cmp    $0x8,%al
   285a5:	je     285af <png_write_sPLT+0x2f>
   285a7:	mov    $0xa,%r12d
   285ad:	jmp    285b5 <png_write_sPLT+0x35>
   285af:	mov    $0x6,%r12d
   285b5:	mov    %rsi,%r13
   285b8:	mov    0x18(%r13),%r15d
   285bc:	mov    0x0(%r13),%rsi
   285c0:	lea    -0x82(%rbp),%r14
   285c7:	mov    %rdi,%rbx
   285ca:	mov    %r14,%rdx
   285cd:	callq  23280 <png_check_keyword>
   285d2:	test   %eax,%eax
   285d4:	je     28622 <png_write_sPLT+0xa2>
   285d6:	imul   %r12d,%r15d
   285da:	lea    0x2(%rax,%r15,1),%edx
   285df:	mov    %rax,%r15
   285e2:	mov    $0x73504c54,%esi
   285e7:	mov    %rbx,%rdi
   285ea:	callq  29f50 <png_write_chunk_header>
   285ef:	lea    0x1(%r15),%eax
   285f3:	mov    %eax,%edx
   285f5:	mov    %r14,%rsi
   285f8:	mov    %rbx,%rdi
   285fb:	callq  5100 <png_write_chunk_data@plt>
   28600:	lea    0x8(%r13),%r14
   28604:	mov    $0x1,%edx
   28609:	mov    %rbx,%rdi
   2860c:	mov    %r14,%rsi
   2860f:	callq  5100 <png_write_chunk_data@plt>
   28614:	mov    0x10(%r13),%r15
   28618:	lea    -0x32(%rbp),%rax
   2861c:	lea    -0x2e(%rbp),%rdi
   28620:	jmp    28675 <png_write_sPLT+0xf5>
   28622:	mov    %rbx,%rdi
   28625:	lea    0x7a24(%rip),%rsi        # 30050 <fourbppswaptable+0xa04>
   2862c:	callq  5470 <png_error@plt>
   28631:	movzbl (%r15),%eax
   28635:	mov    %al,-0x32(%rbp)
   28638:	movzbl 0x2(%r15),%eax
   2863d:	mov    %al,-0x31(%rbp)
   28640:	movzbl 0x4(%r15),%eax
   28645:	mov    %al,-0x30(%rbp)
   28648:	movzbl 0x6(%r15),%eax
   2864d:	mov    %al,-0x2f(%rbp)
   28650:	movzwl 0x8(%r15),%esi
   28655:	callq  57a0 <png_save_uint_16@plt>
   2865a:	mov    %rbx,%rdi
   2865d:	lea    -0x32(%rbp),%rsi
   28661:	mov    %r12,%rdx
   28664:	callq  5100 <png_write_chunk_data@plt>
   28669:	add    $0xa,%r15
   2866d:	lea    -0x32(%rbp),%rax
   28671:	lea    -0x2e(%rbp),%rdi
   28675:	movslq 0x18(%r13),%rcx
   28679:	lea    (%rcx,%rcx,4),%rcx
   2867d:	add    %rcx,%rcx
   28680:	add    0x10(%r13),%rcx
   28684:	cmp    %r15,%rcx
   28687:	ja     286a7 <png_write_sPLT+0x127>
   28689:	mov    %rbx,%rdi
   2868c:	callq  5480 <png_write_chunk_end@plt>
   28691:	mov    -0x28(%rbp),%r15
   28695:	mov    -0x20(%rbp),%r14
   28699:	mov    -0x18(%rbp),%r13
   2869d:	mov    -0x10(%rbp),%r12
   286a1:	mov    -0x8(%rbp),%rbx
   286a5:	leaveq 
   286a6:	retq   
   286a7:	movzbl (%r14),%ecx
   286ab:	cmp    $0x8,%cl
   286ae:	je     28631 <png_write_sPLT+0xb1>
   286b0:	mov    %rax,%rdi
   286b3:	movzwl (%r15),%esi
   286b7:	callq  57a0 <png_save_uint_16@plt>
   286bc:	movzwl 0x2(%r15),%esi
   286c1:	lea    -0x30(%rbp),%rdi
   286c5:	callq  57a0 <png_save_uint_16@plt>
   286ca:	movzwl 0x4(%r15),%esi
   286cf:	lea    -0x2e(%rbp),%rdi
   286d3:	callq  57a0 <png_save_uint_16@plt>
   286d8:	movzwl 0x6(%r15),%esi
   286dd:	lea    -0x2c(%rbp),%rdi
   286e1:	callq  57a0 <png_save_uint_16@plt>
   286e6:	movzwl 0x8(%r15),%esi
   286eb:	lea    -0x2a(%rbp),%rdi
   286ef:	callq  57a0 <png_save_uint_16@plt>
   286f4:	jmpq   2865a <png_write_sPLT+0xda>
   286f9:	nopl   0x0(%rax)

0000000000028700 <png_write_tRNS>:
   28700:	push   %rbp
   28701:	mov    %rsp,%rbp
   28704:	sub    $0x20,%rsp
   28708:	mov    $0x74524e53,%r9d
   2870e:	cmp    $0x3,%r8d
   28712:	je     2872d <png_write_tRNS+0x2d>
   28714:	test   %r8d,%r8d
   28717:	je     28754 <png_write_tRNS+0x54>
   28719:	cmp    $0x2,%r8d
   2871d:	je     2879d <png_write_tRNS+0x9d>
   2871f:	lea    0x79ef(%rip),%rsi        # 30115 <fourbppswaptable+0xac9>
   28726:	callq  b100 <png_app_warning>
   2872b:	leaveq 
   2872c:	retq   
   2872d:	test   %ecx,%ecx
   2872f:	jle    28809 <png_write_tRNS+0x109>
   28735:	movzwl 0x258(%rdi),%eax
   2873c:	cmp    %eax,%ecx
   2873e:	jg     28809 <png_write_tRNS+0x109>
   28744:	movslq %ecx,%rcx
   28747:	mov    %rsi,%rdx
   2874a:	mov    %r9,%rsi
   2874d:	callq  29fe0 <png_write_complete_chunk>
   28752:	leaveq 
   28753:	retq   
   28754:	mov    $0x1,%eax
   28759:	movzbl 0x268(%rdi),%ecx
   28760:	shl    %cl,%eax
   28762:	movzwl 0x8(%rdx),%esi
   28766:	cmp    %esi,%eax
   28768:	jle    28817 <png_write_tRNS+0x117>
   2876e:	lea    -0x16(%rbp),%rax
   28772:	mov    %r15,-0x10(%rbp)
   28776:	mov    %rdi,%r15
   28779:	mov    %rax,%rdi
   2877c:	callq  57a0 <png_save_uint_16@plt>
   28781:	mov    %r15,%rdi
   28784:	mov    $0x2,%ecx
   28789:	lea    -0x16(%rbp),%rdx
   2878d:	mov    $0x74524e53,%esi
   28792:	callq  29fe0 <png_write_complete_chunk>
   28797:	mov    -0x10(%rbp),%r15
   2879b:	leaveq 
   2879c:	retq   
   2879d:	lea    -0x16(%rbp),%rax
   287a1:	movzwl 0x2(%rdx),%esi
   287a5:	mov    %r14,-0x8(%rbp)
   287a9:	mov    %r15,-0x10(%rbp)
   287ad:	mov    %rdi,%r14
   287b0:	mov    %rax,%rdi
   287b3:	mov    %rdx,%r15
   287b6:	callq  57a0 <png_save_uint_16@plt>
   287bb:	lea    -0x14(%rbp),%rdi
   287bf:	movzwl 0x4(%r15),%esi
   287c4:	callq  57a0 <png_save_uint_16@plt>
   287c9:	lea    -0x12(%rbp),%rax
   287cd:	movzwl 0x6(%r15),%esi
   287d2:	mov    %rax,%r15
   287d5:	mov    %r15,%rdi
   287d8:	callq  57a0 <png_save_uint_16@plt>
   287dd:	movzbl 0x268(%r14),%eax
   287e5:	cmp    $0x8,%al
   287e7:	je     28825 <png_write_tRNS+0x125>
   287e9:	mov    %r14,%rdi
   287ec:	mov    $0x6,%ecx
   287f1:	mov    $0x74524e53,%esi
   287f6:	lea    -0x16(%rbp),%rdx
   287fa:	callq  29fe0 <png_write_complete_chunk>
   287ff:	mov    -0x10(%rbp),%r15
   28803:	mov    -0x8(%rbp),%r14
   28807:	leaveq 
   28808:	retq   
   28809:	lea    0x7856(%rip),%rsi        # 30066 <fourbppswaptable+0xa1a>
   28810:	callq  b100 <png_app_warning>
   28815:	leaveq 
   28816:	retq   
   28817:	lea    0x7877(%rip),%rsi        # 30095 <fourbppswaptable+0xa49>
   2881e:	callq  b100 <png_app_warning>
   28823:	leaveq 
   28824:	retq   
   28825:	lea    -0x14(%rbp),%rax
   28829:	movzbl (%rax),%eax
   2882c:	movzbl -0x16(%rbp),%ecx
   28830:	or     %cl,%al
   28832:	movzbl (%r15),%ecx
   28836:	or     %cl,%al
   28838:	test   %al,%al
   2883a:	je     287e9 <png_write_tRNS+0xe9>
   2883c:	mov    %r14,%rdi
   2883f:	lea    0x788f(%rip),%rsi        # 300d5 <fourbppswaptable+0xa89>
   28846:	callq  b100 <png_app_warning>
   2884b:	mov    -0x10(%rbp),%r15
   2884f:	mov    -0x8(%rbp),%r14
   28853:	leaveq 
   28854:	retq   
   28855:	data16 nopw %cs:0x0(%rax,%rax,1)

0000000000028860 <png_write_bKGD>:
   28860:	push   %rbp
   28861:	mov    %rsp,%rbp
   28864:	sub    $0x20,%rsp
   28868:	mov    $0x624b4744,%r8d
   2886e:	mov    $0x1,%eax
   28873:	cmp    $0x3,%edx
   28876:	je     288c3 <png_write_bKGD+0x63>
   28878:	and    $0x2,%edx
   2887b:	test   %edx,%edx
   2887d:	jg     288fb <png_write_bKGD+0x9b>
   2887f:	movzbl 0x268(%rdi),%ecx
   28886:	shl    %cl,%eax
   28888:	movzwl 0x8(%rsi),%esi
   2888c:	cmp    %esi,%eax
   2888e:	jle    2896a <png_write_bKGD+0x10a>
   28894:	lea    -0x16(%rbp),%rax
   28898:	mov    %r15,-0x10(%rbp)
   2889c:	mov    %rdi,%r15
   2889f:	mov    %rax,%rdi
   288a2:	callq  57a0 <png_save_uint_16@plt>
   288a7:	mov    %r15,%rdi
   288aa:	mov    $0x2,%ecx
   288af:	lea    -0x16(%rbp),%rdx
   288b3:	mov    $0x624b4744,%esi
   288b8:	callq  29fe0 <png_write_complete_chunk>
   288bd:	mov    -0x10(%rbp),%r15
   288c1:	leaveq 
   288c2:	retq   
   288c3:	movzwl 0x258(%rdi),%ecx
   288ca:	test   %cx,%cx
   288cd:	jne    28978 <png_write_bKGD+0x118>
   288d3:	mov    0x3d8(%rdi),%ecx
   288d9:	and    $0x1,%ecx
   288dc:	test   %ecx,%ecx
   288de:	je     28978 <png_write_bKGD+0x118>
   288e4:	movzbl (%rsi),%ecx
   288e7:	mov    %cl,-0x16(%rbp)
   288ea:	mov    %rax,%rcx
   288ed:	mov    %r8,%rsi
   288f0:	lea    -0x16(%rbp),%rdx
   288f4:	callq  29fe0 <png_write_complete_chunk>
   288f9:	leaveq 
   288fa:	retq   
   288fb:	lea    -0x16(%rbp),%rax
   288ff:	movzwl 0x2(%rsi),%ecx
   28903:	mov    %r15,-0x10(%rbp)
   28907:	mov    %r14,-0x8(%rbp)
   2890b:	mov    %rdi,%r14
   2890e:	mov    %rax,%rdi
   28911:	mov    %rsi,%r15
   28914:	mov    %rcx,%rsi
   28917:	callq  57a0 <png_save_uint_16@plt>
   2891c:	lea    -0x14(%rbp),%rdi
   28920:	movzwl 0x4(%r15),%esi
   28925:	callq  57a0 <png_save_uint_16@plt>
   2892a:	lea    -0x12(%rbp),%rax
   2892e:	movzwl 0x6(%r15),%esi
   28933:	mov    %rax,%r15
   28936:	mov    %r15,%rdi
   28939:	callq  57a0 <png_save_uint_16@plt>
   2893e:	movzbl 0x268(%r14),%eax
   28946:	cmp    $0x8,%al
   28948:	je     28999 <png_write_bKGD+0x139>
   2894a:	mov    %r14,%rdi
   2894d:	mov    $0x6,%ecx
   28952:	lea    -0x16(%rbp),%rdx
   28956:	mov    $0x624b4744,%esi
   2895b:	callq  29fe0 <png_write_complete_chunk>
   28960:	mov    -0x8(%rbp),%r14
   28964:	mov    -0x10(%rbp),%r15
   28968:	leaveq 
   28969:	retq   
   2896a:	lea    0x782c(%rip),%rsi        # 3019d <fourbppswaptable+0xb51>
   28971:	callq  5390 <png_warning@plt>
   28976:	leaveq 
   28977:	retq   
   28978:	movzbl (%rsi),%edx
   2897b:	movzwl 0x258(%rdi),%ecx
   28982:	cmp    %cx,%dx
   28985:	jb     288e4 <png_write_bKGD+0x84>
   2898b:	lea    0x77aa(%rip),%rsi        # 3013c <fourbppswaptable+0xaf0>
   28992:	callq  5390 <png_warning@plt>
   28997:	leaveq 
   28998:	retq   
   28999:	lea    -0x14(%rbp),%rax
   2899d:	movzbl (%rax),%eax
   289a0:	movzbl -0x16(%rbp),%ecx
   289a4:	or     %cl,%al
   289a6:	movzbl (%r15),%ecx
   289aa:	or     %cl,%al
   289ac:	test   %al,%al
   289ae:	je     2894a <png_write_bKGD+0xea>
   289b0:	mov    %r14,%rdi
   289b3:	lea    0x77a3(%rip),%rsi        # 3015d <fourbppswaptable+0xb11>
   289ba:	callq  5390 <png_warning@plt>
   289bf:	mov    -0x8(%rbp),%r14
   289c3:	mov    -0x10(%rbp),%r15
   289c7:	leaveq 
   289c8:	retq   
   289c9:	nopl   0x0(%rax)

00000000000289d0 <png_write_hIST>:
   289d0:	push   %rbp
   289d1:	mov    %rsp,%rbp
   289d4:	sub    $0x30,%rsp
   289d8:	movzwl 0x258(%rdi),%eax
   289df:	cmp    %edx,%eax
   289e1:	jl     28a2d <png_write_hIST+0x5d>
   289e3:	mov    $0x68495354,%eax
   289e8:	lea    (%rdx,%rdx,1),%ecx
   289eb:	mov    %rdi,%r8
   289ee:	mov    %r13,-0x18(%rbp)
   289f2:	mov    %r14,-0x20(%rbp)
   289f6:	mov    %r15,-0x28(%rbp)
   289fa:	mov    %rsi,%r13
   289fd:	mov    %rax,%rsi
   28a00:	mov    %rbx,%r14
   28a03:	mov    %rdi,%rbx
   28a06:	mov    %r8,%rdi
   28a09:	mov    %r12,%r15
   28a0c:	mov    %rdx,%r12
   28a0f:	mov    %rcx,%rdx
   28a12:	callq  29f50 <png_write_chunk_header>
   28a17:	lea    -0x2b(%rbp),%rcx
   28a1b:	xor    %eax,%eax
   28a1d:	mov    %r14,-0x8(%rbp)
   28a21:	mov    %r15,-0x10(%rbp)
   28a25:	mov    %rax,%r14
   28a28:	mov    %rcx,%r15
   28a2b:	jmp    28a60 <png_write_hIST+0x90>
   28a2d:	lea    0x77a9(%rip),%rsi        # 301dd <fourbppswaptable+0xb91>
   28a34:	callq  5390 <png_warning@plt>
   28a39:	leaveq 
   28a3a:	retq   
   28a3b:	movslq %r14d,%rax
   28a3e:	movzwl 0x0(%r13,%rax,2),%esi
   28a44:	mov    %r15,%rdi
   28a47:	callq  57a0 <png_save_uint_16@plt>
   28a4c:	mov    %rbx,%rdi
   28a4f:	mov    %r15,%rsi
   28a52:	mov    $0x2,%edx
   28a57:	callq  5100 <png_write_chunk_data@plt>
   28a5c:	add    $0x1,%r14d
   28a60:	cmp    %r14d,%r12d
   28a63:	jg     28a3b <png_write_hIST+0x6b>
   28a65:	mov    %rbx,%rdi
   28a68:	callq  5480 <png_write_chunk_end@plt>
   28a6d:	mov    -0x10(%rbp),%r12
   28a71:	mov    -0x8(%rbp),%rbx
   28a75:	mov    -0x28(%rbp),%r15
   28a79:	mov    -0x20(%rbp),%r14
   28a7d:	mov    -0x18(%rbp),%r13
   28a81:	leaveq 
   28a82:	retq   
   28a83:	data16 nopw %cs:0x0(%rax,%rax,1)
   28a8e:	xchg   %ax,%ax

0000000000028a90 <png_write_tEXt>:
   28a90:	push   %rbp
   28a91:	mov    %rsp,%rbp
   28a94:	sub    $0x70,%rsp
   28a98:	mov    %r14,-0x18(%rbp)
   28a9c:	mov    %r15,-0x20(%rbp)
   28aa0:	mov    %r12,%r14
   28aa3:	mov    %rbx,%r12
   28aa6:	mov    %r13,%r15
   28aa9:	mov    %rdx,%r13
   28aac:	lea    -0x70(%rbp),%rdx
   28ab0:	mov    %rdi,%rbx
   28ab3:	callq  23280 <png_check_keyword>
   28ab8:	test   %eax,%eax
   28aba:	je     28b41 <png_write_tEXt+0xb1>
   28ac0:	xor    %edx,%edx
   28ac2:	test   %r13,%r13
   28ac5:	jne    28b50 <png_write_tEXt+0xc0>
   28acb:	mov    $0x7ffffffe,%ecx
   28ad0:	sub    %eax,%ecx
   28ad2:	mov    %ecx,%ecx
   28ad4:	cmp    %rdx,%rcx
   28ad7:	jb     28b7b <png_write_tEXt+0xeb>
   28add:	lea    0x1(%rax,%rdx,1),%ecx
   28ae1:	mov    $0x74455874,%esi
   28ae6:	mov    %rbx,%rdi
   28ae9:	mov    %r15,-0x10(%rbp)
   28aed:	mov    %r14,-0x8(%rbp)
   28af1:	mov    %rdx,%r14
   28af4:	mov    %rcx,%rdx
   28af7:	mov    %rax,%r15
   28afa:	callq  29f50 <png_write_chunk_header>
   28aff:	lea    0x1(%r15),%eax
   28b03:	mov    %eax,%edx
   28b05:	mov    %rbx,%rdi
   28b08:	lea    -0x70(%rbp),%rsi
   28b0c:	callq  5100 <png_write_chunk_data@plt>
   28b11:	test   %r14,%r14
   28b14:	je     28b24 <png_write_tEXt+0x94>
   28b16:	mov    %r14,%rdx
   28b19:	mov    %r13,%rsi
   28b1c:	mov    %rbx,%rdi
   28b1f:	callq  5100 <png_write_chunk_data@plt>
   28b24:	mov    %rbx,%rdi
   28b27:	callq  5480 <png_write_chunk_end@plt>
   28b2c:	mov    %r12,%rbx
   28b2f:	mov    -0x8(%rbp),%r12
   28b33:	mov    -0x10(%rbp),%r13
   28b37:	mov    -0x20(%rbp),%r15
   28b3b:	mov    -0x18(%rbp),%r14
   28b3f:	leaveq 
   28b40:	retq   
   28b41:	mov    %rbx,%rdi
   28b44:	lea    0x76c0(%rip),%rsi        # 3020b <fourbppswaptable+0xbbf>
   28b4b:	callq  5470 <png_error@plt>
   28b50:	movsbq 0x0(%r13),%rcx
   28b55:	test   %cl,%cl
   28b57:	je     28acb <png_write_tEXt+0x3b>
   28b5d:	mov    %r13,%rdi
   28b60:	mov    %r15,-0x10(%rbp)
   28b64:	mov    %rax,%r15
   28b67:	callq  5260 <strlen@plt>
   28b6c:	mov    %rax,%rdx
   28b6f:	mov    %r15,%rax
   28b72:	mov    -0x10(%rbp),%r15
   28b76:	jmpq   28acb <png_write_tEXt+0x3b>
   28b7b:	mov    %rbx,%rdi
   28b7e:	lea    0x769c(%rip),%rsi        # 30221 <fourbppswaptable+0xbd5>
   28b85:	callq  5470 <png_error@plt>
   28b8a:	nopw   0x0(%rax,%rax,1)

0000000000028b90 <png_write_zTXt>:
   28b90:	push   %rbp
   28b91:	mov    %rsp,%rbp
   28b94:	sub    $0x490,%rsp
   28b9b:	xor    %eax,%eax
   28b9d:	cmp    $0xffffffff,%ecx
   28ba0:	je     28c6f <png_write_zTXt+0xdf>
   28ba6:	test   %ecx,%ecx
   28ba8:	jne    28c79 <png_write_zTXt+0xe9>
   28bae:	lea    -0x481(%rbp),%rax
   28bb5:	mov    %rdi,%rcx
   28bb8:	mov    %r14,-0x10(%rbp)
   28bbc:	mov    %r15,-0x18(%rbp)
   28bc0:	mov    %rdi,%r14
   28bc3:	mov    %rcx,%rdi
   28bc6:	mov    %rdx,%r15
   28bc9:	mov    %rax,%rdx
   28bcc:	callq  23280 <png_check_keyword>
   28bd1:	test   %eax,%eax
   28bd3:	je     28c85 <png_write_zTXt+0xf5>
   28bd9:	lea    0x1(%rax),%ecx
   28bdc:	mov    %ecx,%ecx
   28bde:	movb   $0x0,-0x481(%rbp,%rcx,1)
   28be6:	test   %r15,%r15
   28be9:	jne    28c94 <png_write_zTXt+0x104>
   28bef:	xor    %edx,%edx
   28bf1:	mov    %r15,%rsi
   28bf4:	mov    %rax,%r15
   28bf7:	lea    -0x430(%rbp),%rdi
   28bfe:	callq  2a600 <png_text_compress_init>
   28c03:	mov    $0x7a545874,%esi
   28c08:	add    $0x2,%r15d
   28c0c:	mov    %r14,%rdi
   28c0f:	lea    -0x430(%rbp),%rdx
   28c16:	mov    %r15,%rcx
   28c19:	callq  2a620 <png_text_compress>
   28c1e:	test   %eax,%eax
   28c20:	jne    28cb2 <png_write_zTXt+0x122>
   28c26:	mov    %r15,%rdx
   28c29:	add    -0x420(%rbp),%edx
   28c2f:	mov    %r14,%rdi
   28c32:	mov    $0x7a545874,%esi
   28c37:	callq  29f50 <png_write_chunk_header>
   28c3c:	mov    %r15d,%edx
   28c3f:	mov    %r14,%rdi
   28c42:	lea    -0x481(%rbp),%rsi
   28c49:	callq  5100 <png_write_chunk_data@plt>
   28c4e:	mov    %r14,%rdi
   28c51:	lea    -0x430(%rbp),%rsi
   28c58:	callq  2a8b0 <png_write_compressed_data_out>
   28c5d:	mov    %r14,%rdi
   28c60:	callq  5480 <png_write_chunk_end@plt>
   28c65:	mov    -0x18(%rbp),%r15
   28c69:	mov    -0x10(%rbp),%r14
   28c6d:	leaveq 
   28c6e:	retq   
   28c6f:	mov    %rax,%rcx
   28c72:	callq  28a90 <png_write_tEXt>
   28c77:	leaveq 
   28c78:	retq   
   28c79:	lea    0x75b5(%rip),%rsi        # 30235 <fourbppswaptable+0xbe9>
   28c80:	callq  5470 <png_error@plt>
   28c85:	mov    %r14,%rdi
   28c88:	lea    0x75c5(%rip),%rsi        # 30254 <fourbppswaptable+0xc08>
   28c8f:	callq  5470 <png_error@plt>
   28c94:	mov    %r15,%rdi
   28c97:	mov    %r13,-0x8(%rbp)
   28c9b:	mov    %rax,%r13
   28c9e:	callq  5260 <strlen@plt>
   28ca3:	mov    %rax,%rdx
   28ca6:	mov    %r13,%rax
   28ca9:	mov    -0x8(%rbp),%r13
   28cad:	jmpq   28bf1 <png_write_zTXt+0x61>
   28cb2:	mov    %r14,%rdi
   28cb5:	mov    0x170(%rdi),%rsi
   28cbc:	callq  5470 <png_error@plt>
   28cc1:	data16 nopw %cs:0x0(%rax,%rax,1)
   28ccc:	nopl   0x0(%rax)

0000000000028cd0 <png_write_iTXt>:
   28cd0:	push   %rbp
   28cd1:	mov    %rsp,%rbp
   28cd4:	sub    $0x4d0,%rsp
   28cdb:	mov    %rbx,-0x28(%rbp)
   28cdf:	mov    %r12,-0x30(%rbp)
   28ce3:	mov    %r13,-0x38(%rbp)
   28ce7:	mov    %r14,-0x40(%rbp)
   28ceb:	mov    %r15,-0x48(%rbp)
   28cef:	mov    %r9,%r12
   28cf2:	mov    %r8,%r13
   28cf5:	mov    %rsi,%r14
   28cf8:	mov    %rdx,%rsi
   28cfb:	mov    %rcx,%r15
   28cfe:	lea    -0x4c2(%rbp),%rdx
   28d05:	mov    %rdi,%rbx
   28d08:	callq  23280 <png_check_keyword>
   28d0d:	test   %eax,%eax
   28d0f:	je     28d40 <png_write_iTXt+0x70>
   28d11:	xor    %ecx,%ecx
   28d13:	mov    %rcx,-0x58(%rbp)
   28d17:	mov    $0x1,%edx
   28d1c:	mov    %rdx,-0x50(%rbp)
   28d20:	test   %r14d,%r14d
   28d23:	jle    28d4f <png_write_iTXt+0x7f>
   28d25:	cmp    $0x1,%r14d
   28d29:	je     28d6e <png_write_iTXt+0x9e>
   28d2b:	cmp    $0x2,%r14d
   28d2f:	je     28d5a <png_write_iTXt+0x8a>
   28d31:	mov    %rbx,%rdi
   28d34:	lea    0x7545(%rip),%rsi        # 30280 <fourbppswaptable+0xc34>
   28d3b:	callq  5470 <png_error@plt>
   28d40:	mov    %rbx,%rdi
   28d43:	lea    0x7520(%rip),%rsi        # 3026a <fourbppswaptable+0xc1e>
   28d4a:	callq  5470 <png_error@plt>
   28d4f:	cmp    $0xffffffff,%r14d
   28d53:	je     28d6e <png_write_iTXt+0x9e>
   28d55:	test   %r14d,%r14d
   28d58:	jne    28d31 <png_write_iTXt+0x61>
   28d5a:	lea    0x1(%rax),%r14d
   28d5e:	mov    %r14d,%eax
   28d61:	movb   $0x1,-0x4c2(%rbp,%rax,1)
   28d69:	mov    %rdx,%rcx
   28d6c:	jmp    28d7d <png_write_iTXt+0xad>
   28d6e:	lea    0x1(%rax),%r14d
   28d72:	mov    %r14d,%eax
   28d75:	movb   $0x0,-0x4c2(%rbp,%rax,1)
   28d7d:	lea    0x1(%r14),%eax
   28d81:	mov    %eax,%eax
   28d83:	movb   $0x0,-0x4c2(%rbp,%rax,1)
   28d8b:	lea    0x7508(%rip),%rax        # 3029a <fourbppswaptable+0xc4e>
   28d92:	test   %r15,%r15
   28d95:	je     28d9c <png_write_iTXt+0xcc>
   28d97:	mov    %r15,%rdi
   28d9a:	jmp    28d9f <png_write_iTXt+0xcf>
   28d9c:	mov    %rax,%rdi
   28d9f:	mov    %rcx,%r15
   28da2:	mov    %rdi,-0x18(%rbp)
   28da6:	callq  5260 <strlen@plt>
   28dab:	test   %r13,%r13
   28dae:	jne    28db7 <png_write_iTXt+0xe7>
   28db0:	lea    0x74e3(%rip),%r13        # 3029a <fourbppswaptable+0xc4e>
   28db7:	mov    %r13,%rdi
   28dba:	mov    %rax,%r13
   28dbd:	mov    %rdi,-0x8(%rbp)
   28dc1:	callq  5260 <strlen@plt>
   28dc6:	test   %r12,%r12
   28dc9:	jne    28dd2 <png_write_iTXt+0x102>
   28dcb:	lea    0x74c8(%rip),%r12        # 3029a <fourbppswaptable+0xc4e>
   28dd2:	mov    $0x7fffffff,%edi
   28dd7:	mov    $0x7ffffffd,%ecx
   28ddc:	sub    %r14d,%ecx
   28ddf:	mov    %ecx,%ecx
   28de1:	lea    0x1(%r13),%rdx
   28de5:	mov    %rdx,-0x20(%rbp)
   28de9:	cmp    %rdx,%rcx
   28dec:	jae    28e52 <png_write_iTXt+0x182>
   28dee:	mov    %rdi,%rcx
   28df1:	lea    0x1(%rax),%rdx
   28df5:	mov    %rdx,-0x10(%rbp)
   28df9:	mov    %rcx,%rsi
   28dfc:	xor    $0x7fffffff,%esi
   28e02:	mov    %esi,%esi
   28e04:	cmp    %rdx,%rsi
   28e07:	jae    28e59 <png_write_iTXt+0x189>
   28e09:	mov    %rdi,%r13
   28e0c:	mov    %r12,%rdi
   28e0f:	callq  5260 <strlen@plt>
   28e14:	mov    %rax,%rdx
   28e17:	lea    -0x470(%rbp),%rdi
   28e1e:	mov    %r12,%rsi
   28e21:	callq  2a600 <png_text_compress_init>
   28e26:	mov    $0x69545874,%esi
   28e2b:	test   %r15d,%r15d
   28e2e:	jg     28e60 <png_write_iTXt+0x190>
   28e30:	mov    %r13,%rax
   28e33:	xor    $0x7fffffff,%eax
   28e38:	mov    %eax,%ecx
   28e3a:	mov    -0x468(%rbp),%rax
   28e41:	cmp    %rax,%rcx
   28e44:	jb     28ee5 <png_write_iTXt+0x215>
   28e4a:	mov    %eax,-0x460(%rbp)
   28e50:	jmp    28e82 <png_write_iTXt+0x1b2>
   28e52:	lea    0x2(%r14,%rdx,1),%ecx
   28e57:	jmp    28df1 <png_write_iTXt+0x121>
   28e59:	lea    0x1(%rcx,%rax,1),%r13d
   28e5e:	jmp    28e0c <png_write_iTXt+0x13c>
   28e60:	mov    %rbx,%rdi
   28e63:	mov    %rsi,%r15
   28e66:	lea    -0x470(%rbp),%rdx
   28e6d:	mov    %r13,%rcx
   28e70:	callq  2a620 <png_text_compress>
   28e75:	test   %eax,%eax
   28e77:	jne    28ef4 <png_write_iTXt+0x224>
   28e79:	mov    %r15,%rsi
   28e7c:	pushq  -0x50(%rbp)
   28e7f:	popq   -0x58(%rbp)
   28e82:	add    -0x460(%rbp),%r13d
   28e89:	mov    %r13,%rdx
   28e8c:	mov    %rbx,%rdi
   28e8f:	callq  29f50 <png_write_chunk_header>
   28e94:	lea    0x2(%r14),%eax
   28e98:	mov    %eax,%edx
   28e9a:	mov    %rbx,%rdi
   28e9d:	lea    -0x4c2(%rbp),%rsi
   28ea4:	callq  5100 <png_write_chunk_data@plt>
   28ea9:	mov    %rbx,%rdi
   28eac:	mov    -0x20(%rbp),%rdx
   28eb0:	mov    -0x18(%rbp),%rsi
   28eb4:	callq  5100 <png_write_chunk_data@plt>
   28eb9:	mov    %rbx,%rdi
   28ebc:	mov    -0x10(%rbp),%rdx
   28ec0:	mov    -0x8(%rbp),%rsi
   28ec4:	callq  5100 <png_write_chunk_data@plt>
   28ec9:	mov    -0x58(%rbp),%rax
   28ecd:	test   %rax,%rax
   28ed0:	jne    28f03 <png_write_iTXt+0x233>
   28ed2:	mov    %r12,%rsi
   28ed5:	mov    -0x460(%rbp),%edx
   28edb:	mov    %rbx,%rdi
   28ede:	callq  5100 <png_write_chunk_data@plt>
   28ee3:	jmp    28f12 <png_write_iTXt+0x242>
   28ee5:	mov    %rbx,%rdi
   28ee8:	lea    0x73ac(%rip),%rsi        # 3029b <fourbppswaptable+0xc4f>
   28eef:	callq  5470 <png_error@plt>
   28ef4:	mov    %rbx,%rdi
   28ef7:	mov    0x170(%rdi),%rsi
   28efe:	callq  5470 <png_error@plt>
   28f03:	mov    %rbx,%rdi
   28f06:	lea    -0x470(%rbp),%rsi
   28f0d:	callq  2a8b0 <png_write_compressed_data_out>
   28f12:	mov    %rbx,%rdi
   28f15:	callq  5480 <png_write_chunk_end@plt>
   28f1a:	mov    -0x48(%rbp),%r15
   28f1e:	mov    -0x40(%rbp),%r14
   28f22:	mov    -0x38(%rbp),%r13
   28f26:	mov    -0x30(%rbp),%r12
   28f2a:	mov    -0x28(%rbp),%rbx
   28f2e:	leaveq 
   28f2f:	retq   

0000000000028f30 <png_write_oFFs>:
   28f30:	push   %rbp
   28f31:	mov    %rsp,%rbp
   28f34:	sub    $0x30,%rsp
   28f38:	mov    %r13,-0x10(%rbp)
   28f3c:	mov    %r14,-0x18(%rbp)
   28f40:	mov    %r15,-0x20(%rbp)
   28f44:	cmp    $0x1,%ecx
   28f47:	jg     28f54 <png_write_oFFs+0x24>
   28f49:	mov    %rdi,%r13
   28f4c:	mov    %rcx,%r14
   28f4f:	mov    %rdx,%r15
   28f52:	jmp    28f80 <png_write_oFFs+0x50>
   28f54:	lea    0x7361(%rip),%r8        # 302bc <fourbppswaptable+0xc70>
   28f5b:	mov    %rdi,%rax
   28f5e:	mov    %r12,-0x8(%rbp)
   28f62:	mov    %rsi,%r12
   28f65:	mov    %r8,%rsi
   28f68:	mov    %rdi,%r13
   28f6b:	mov    %rax,%rdi
   28f6e:	mov    %rcx,%r14
   28f71:	mov    %rdx,%r15
   28f74:	callq  5390 <png_warning@plt>
   28f79:	mov    %r12,%rsi
   28f7c:	mov    -0x8(%rbp),%r12
   28f80:	lea    -0x29(%rbp),%rdi
   28f84:	callq  5520 <png_save_int_32@plt>
   28f89:	mov    %r15,%rsi
   28f8c:	lea    -0x25(%rbp),%rdi
   28f90:	callq  5520 <png_save_int_32@plt>
   28f95:	mov    %r14b,-0x21(%rbp)
   28f99:	mov    %r13,%rdi
   28f9c:	mov    $0x6f464673,%esi
   28fa1:	mov    $0x9,%ecx
   28fa6:	lea    -0x29(%rbp),%rdx
   28faa:	callq  29fe0 <png_write_complete_chunk>
   28faf:	mov    -0x20(%rbp),%r15
   28fb3:	mov    -0x18(%rbp),%r14
   28fb7:	mov    -0x10(%rbp),%r13
   28fbb:	leaveq 
   28fbc:	retq   
   28fbd:	nopl   (%rax)

0000000000028fc0 <png_write_pCAL>:
   28fc0:	push   %rbp
   28fc1:	mov    %rsp,%rbp
   28fc4:	sub    $0xf0,%rsp
   28fcb:	mov    %r9,-0x88(%rbp)
   28fd2:	cmp    $0x3,%r8d
   28fd6:	jg     2909b <png_write_pCAL+0xdb>
   28fdc:	lea    -0xd8(%rbp),%rax
   28fe3:	mov    %rdi,%r10
   28fe6:	mov    %rbx,-0x60(%rbp)
   28fea:	mov    %r12,-0x68(%rbp)
   28fee:	mov    %r13,-0x70(%rbp)
   28ff2:	mov    %r14,-0x78(%rbp)
   28ff6:	mov    %r15,-0x80(%rbp)
   28ffa:	mov    %rcx,%rbx
   28ffd:	mov    %r9,%r12
   29000:	mov    %rdx,%r13
   29003:	mov    %rax,%rdx
   29006:	mov    %rdi,%r14
   29009:	mov    %r10,%rdi
   2900c:	mov    %r8,%r15
   2900f:	callq  23280 <png_check_keyword>
   29014:	test   %eax,%eax
   29016:	je     290a7 <png_write_pCAL+0xe7>
   2901c:	mov    0x10(%rbp),%rdi
   29020:	mov    %rdi,-0x8(%rbp)
   29024:	mov    %r15,-0x18(%rbp)
   29028:	mov    %rax,%r15
   2902b:	callq  5260 <strlen@plt>
   29030:	xor    %edx,%edx
   29032:	mov    %rdx,-0x40(%rbp)
   29036:	mov    $0x1,%ecx
   2903b:	mov    %rcx,-0x38(%rbp)
   2903f:	test   %r12d,%r12d
   29042:	jne    29047 <png_write_pCAL+0x87>
   29044:	mov    %rdx,%rcx
   29047:	movslq %r12d,%rsi
   2904a:	shl    $0x3,%rsi
   2904e:	mov    %r14,%rdi
   29051:	mov    %r14,-0x50(%rbp)
   29055:	mov    %r13,-0x28(%rbp)
   29059:	mov    %rbx,-0x20(%rbp)
   2905d:	mov    %rdx,%rbx
   29060:	mov    %rcx,%r13
   29063:	mov    %rax,%r14
   29066:	callq  5800 <png_malloc@plt>
   2906b:	mov    0x18(%rbp),%rsi
   2906f:	mov    %rsi,-0x58(%rbp)
   29073:	lea    0x0(%r13,%r14,1),%rcx
   29078:	mov    %rcx,-0x10(%rbp)
   2907c:	lea    0x1(%r15),%edx
   29080:	mov    %edx,%edx
   29082:	mov    %rdx,-0x30(%rbp)
   29086:	lea    0xa(%rcx,%rdx,1),%r15
   2908b:	lea    -0x1(%r12),%r14d
   29090:	mov    %rbx,%r8
   29093:	mov    %rax,%rbx
   29096:	mov    %rsi,%r13
   29099:	jmp    290d9 <png_write_pCAL+0x119>
   2909b:	lea    0x7240(%rip),%rsi        # 302e2 <fourbppswaptable+0xc96>
   290a2:	callq  5470 <png_error@plt>
   290a7:	mov    %r14,%rdi
   290aa:	lea    0x725b(%rip),%rsi        # 3030c <fourbppswaptable+0xcc0>
   290b1:	callq  5470 <png_error@plt>
   290b6:	pushq  -0x40(%rbp)
   290b9:	popq   -0x48(%rbp)
   290bc:	mov    -0x48(%rbp),%rcx
   290c0:	add    %rcx,%rax
   290c3:	mov    %rax,(%rbx,%r12,8)
   290c7:	add    %rax,%r15
   290ca:	lea    0x1(%r13),%r8d
   290ce:	mov    -0x58(%rbp),%r13
   290d2:	mov    -0x88(%rbp),%r12
   290d9:	cmp    %r8d,%r12d
   290dc:	jg     29162 <png_write_pCAL+0x1a2>
   290e2:	mov    %r15,%rdx
   290e5:	mov    $0x7043414c,%esi
   290ea:	mov    -0x50(%rbp),%r14
   290ee:	mov    %r14,%rdi
   290f1:	callq  29f50 <png_write_chunk_header>
   290f6:	mov    %r14,%rdi
   290f9:	mov    -0x30(%rbp),%rdx
   290fd:	lea    -0xd8(%rbp),%rsi
   29104:	callq  5100 <png_write_chunk_data@plt>
   29109:	lea    -0xe2(%rbp),%r15
   29110:	mov    %r15,%rdi
   29113:	mov    -0x28(%rbp),%rsi
   29117:	callq  5520 <png_save_int_32@plt>
   2911c:	lea    -0xde(%rbp),%rdi
   29123:	mov    -0x20(%rbp),%rsi
   29127:	callq  5520 <png_save_int_32@plt>
   2912c:	mov    -0x18(%rbp),%rax
   29130:	mov    %al,-0xda(%rbp)
   29136:	mov    %r15,%rsi
   29139:	mov    %r12b,-0xd9(%rbp)
   29140:	mov    $0xa,%edx
   29145:	mov    %r14,%rdi
   29148:	callq  5100 <png_write_chunk_data@plt>
   2914d:	mov    %r14,%rdi
   29150:	mov    -0x10(%rbp),%rdx
   29154:	mov    -0x8(%rbp),%rsi
   29158:	callq  5100 <png_write_chunk_data@plt>
   2915d:	xor    %r15d,%r15d
   29160:	jmp    2919e <png_write_pCAL+0x1de>
   29162:	movslq %r8d,%r12
   29165:	mov    0x0(%r13,%r12,8),%rdi
   2916a:	mov    %r8,%r13
   2916d:	callq  5260 <strlen@plt>
   29172:	cmp    %r14d,%r13d
   29175:	je     290b6 <png_write_pCAL+0xf6>
   2917b:	pushq  -0x38(%rbp)
   2917e:	popq   -0x48(%rbp)
   29181:	jmpq   290bc <png_write_pCAL+0xfc>
   29186:	movslq %r15d,%rax
   29189:	mov    0x0(%r13,%rax,8),%rsi
   2918e:	mov    (%rbx,%rax,8),%rdx
   29192:	mov    %r14,%rdi
   29195:	callq  5100 <png_write_chunk_data@plt>
   2919a:	add    $0x1,%r15d
   2919e:	cmp    %r12d,%r15d
   291a1:	jl     29186 <png_write_pCAL+0x1c6>
   291a3:	mov    %rbx,%rsi
   291a6:	mov    %r14,%rdi
   291a9:	callq  5790 <png_free@plt>
   291ae:	mov    %r14,%rdi
   291b1:	callq  5480 <png_write_chunk_end@plt>
   291b6:	mov    -0x80(%rbp),%r15
   291ba:	mov    -0x78(%rbp),%r14
   291be:	mov    -0x70(%rbp),%r13
   291c2:	mov    -0x68(%rbp),%r12
   291c6:	mov    -0x60(%rbp),%rbx
   291ca:	leaveq 
   291cb:	retq   
   291cc:	nopl   0x0(%rax)

00000000000291d0 <png_write_pHYs>:
   291d0:	push   %rbp
   291d1:	mov    %rsp,%rbp
   291d4:	sub    $0x30,%rsp
   291d8:	mov    %r13,-0x10(%rbp)
   291dc:	mov    %r14,-0x18(%rbp)
   291e0:	mov    %r15,-0x20(%rbp)
   291e4:	cmp    $0x1,%ecx
   291e7:	jg     291f4 <png_write_pHYs+0x24>
   291e9:	mov    %rdi,%r13
   291ec:	mov    %rcx,%r14
   291ef:	mov    %rdx,%r15
   291f2:	jmp    29220 <png_write_pHYs+0x50>
   291f4:	lea    0x7127(%rip),%r8        # 30322 <fourbppswaptable+0xcd6>
   291fb:	mov    %rdi,%rax
   291fe:	mov    %r12,-0x8(%rbp)
   29202:	mov    %rsi,%r12
   29205:	mov    %r8,%rsi
   29208:	mov    %rdi,%r13
   2920b:	mov    %rax,%rdi
   2920e:	mov    %rcx,%r14
   29211:	mov    %rdx,%r15
   29214:	callq  5390 <png_warning@plt>
   29219:	mov    %r12,%rsi
   2921c:	mov    -0x8(%rbp),%r12
   29220:	lea    -0x29(%rbp),%rdi
   29224:	callq  5500 <png_save_uint_32@plt>
   29229:	mov    %r15,%rsi
   2922c:	lea    -0x25(%rbp),%rdi
   29230:	callq  5500 <png_save_uint_32@plt>
   29235:	mov    %r14b,-0x21(%rbp)
   29239:	mov    %r13,%rdi
   2923c:	mov    $0x70485973,%esi
   29241:	mov    $0x9,%ecx
   29246:	lea    -0x29(%rbp),%rdx
   2924a:	callq  29fe0 <png_write_complete_chunk>
   2924f:	mov    -0x20(%rbp),%r15
   29253:	mov    -0x18(%rbp),%r14
   29257:	mov    -0x10(%rbp),%r13
   2925b:	leaveq 
   2925c:	retq   
   2925d:	nopl   (%rax)

0000000000029260 <png_write_tIME>:
   29260:	push   %rbp
   29261:	mov    %rsp,%rbp
   29264:	sub    $0x20,%rsp
   29268:	movzbl 0x2(%rsi),%eax
   2926c:	cmp    $0xc,%al
   2926e:	ja     29300 <png_write_tIME+0xa0>
   29274:	test   %al,%al
   29276:	je     29300 <png_write_tIME+0xa0>
   2927c:	movzbl 0x3(%rsi),%eax
   29280:	cmp    $0x1f,%al
   29282:	ja     29300 <png_write_tIME+0xa0>
   29284:	test   %al,%al
   29286:	je     29300 <png_write_tIME+0xa0>
   29288:	movzbl 0x4(%rsi),%eax
   2928c:	cmp    $0x17,%al
   2928e:	ja     29300 <png_write_tIME+0xa0>
   29290:	movzbl 0x6(%rsi),%eax
   29294:	cmp    $0x3c,%al
   29296:	ja     29300 <png_write_tIME+0xa0>
   29298:	lea    -0x17(%rbp),%rax
   2929c:	movzwl (%rsi),%ecx
   2929f:	mov    %r14,-0x8(%rbp)
   292a3:	mov    %r15,-0x10(%rbp)
   292a7:	mov    %rsi,%r14
   292aa:	mov    %rcx,%rsi
   292ad:	mov    %rdi,%r15
   292b0:	mov    %rax,%rdi
   292b3:	callq  57a0 <png_save_uint_16@plt>
   292b8:	movzbl 0x2(%r14),%eax
   292bd:	mov    %al,-0x15(%rbp)
   292c0:	movzbl 0x3(%r14),%eax
   292c5:	mov    %al,-0x14(%rbp)
   292c8:	movzbl 0x4(%r14),%eax
   292cd:	mov    %al,-0x13(%rbp)
   292d0:	movzbl 0x5(%r14),%eax
   292d5:	mov    %al,-0x12(%rbp)
   292d8:	movzbl 0x6(%r14),%eax
   292dd:	mov    %al,-0x11(%rbp)
   292e0:	mov    %r15,%rdi
   292e3:	mov    $0x74494d45,%esi
   292e8:	mov    $0x7,%ecx
   292ed:	lea    -0x17(%rbp),%rdx
   292f1:	callq  29fe0 <png_write_complete_chunk>
   292f6:	mov    -0x10(%rbp),%r15
   292fa:	mov    -0x8(%rbp),%r14
   292fe:	leaveq 
   292ff:	retq   
   29300:	lea    0x7041(%rip),%rsi        # 30348 <fourbppswaptable+0xcfc>
   29307:	callq  5390 <png_warning@plt>
   2930c:	leaveq 
   2930d:	retq   
   2930e:	xchg   %ax,%ax

0000000000029310 <png_write_sCAL_s>:
   29310:	push   %rbp
   29311:	mov    %rsp,%rbp
   29314:	sub    $0x70,%rsp
   29318:	mov    %r12,-0x10(%rbp)
   2931c:	mov    %r13,-0x18(%rbp)
   29320:	mov    %r14,-0x20(%rbp)
   29324:	mov    %r15,-0x28(%rbp)
   29328:	mov    %rdi,%r12
   2932b:	mov    %rdx,%r13
   2932e:	mov    %rsi,%r14
   29331:	mov    %rcx,%r15
   29334:	mov    %r15,-0x8(%rbp)
   29338:	mov    %r13,%rdi
   2933b:	callq  5260 <strlen@plt>
   29340:	mov    %r15,%rdi
   29343:	mov    %rax,%r15
   29346:	callq  5260 <strlen@plt>
   2934b:	lea    0x2(%rax,%r15,1),%rcx
   29350:	cmp    $0x40,%rcx
   29354:	ja     293a7 <png_write_sCAL_s+0x97>
   29356:	mov    %r14b,-0x68(%rbp)
   2935a:	mov    %r13,%rsi
   2935d:	mov    %rcx,%r13
   29360:	mov    %rax,%r14
   29363:	lea    -0x67(%rbp),%rdi
   29367:	lea    0x1(%r15),%rdx
   2936b:	callq  54c0 <memcpy@plt>
   29370:	lea    -0x66(%rbp,%r15,1),%rdi
   29375:	mov    %r14,%rdx
   29378:	mov    -0x8(%rbp),%rsi
   2937c:	callq  54c0 <memcpy@plt>
   29381:	mov    %r13,%rcx
   29384:	mov    %r12,%rdi
   29387:	mov    $0x7343414c,%esi
   2938c:	lea    -0x68(%rbp),%rdx
   29390:	callq  29fe0 <png_write_complete_chunk>
   29395:	mov    -0x28(%rbp),%r15
   29399:	mov    -0x20(%rbp),%r14
   2939d:	mov    -0x18(%rbp),%r13
   293a1:	mov    -0x10(%rbp),%r12
   293a5:	leaveq 
   293a6:	retq   
   293a7:	mov    %r12,%rdi
   293aa:	lea    0x6fbd(%rip),%rsi        # 3036e <fourbppswaptable+0xd22>
   293b1:	callq  5390 <png_warning@plt>
   293b6:	mov    -0x28(%rbp),%r15
   293ba:	mov    -0x20(%rbp),%r14
   293be:	mov    -0x18(%rbp),%r13
   293c2:	mov    -0x10(%rbp),%r12
   293c6:	leaveq 
   293c7:	retq   
   293c8:	nopl   0x0(%rax,%rax,1)

00000000000293d0 <png_write_finish_row>:
   293d0:	push   %rbp
   293d1:	mov    %rsp,%rbp
   293d4:	mov    0x214(%rdi),%eax
   293da:	add    $0x1,%eax
   293dd:	mov    %eax,0x214(%rdi)
   293e3:	mov    0x200(%rdi),%ecx
   293e9:	cmp    %eax,%ecx
   293eb:	jbe    293ef <png_write_finish_row+0x1f>
   293ed:	leaveq 
   293ee:	retq   
   293ef:	xor    %esi,%esi
   293f1:	movzbl 0x264(%rdi),%eax
   293f8:	test   %al,%al
   293fa:	jne    2940b <png_write_finish_row+0x3b>
   293fc:	mov    $0x4,%ecx
   29401:	mov    %rsi,%rdx
   29404:	callq  27dd0 <png_compress_IDAT>
   29409:	leaveq 
   2940a:	retq   
   2940b:	movl   $0x0,0x214(%rdi)
   29415:	mov    0x134(%rdi),%eax
   2941b:	and    $0x2,%eax
   2941e:	test   %eax,%eax
   29420:	jne    29443 <png_write_finish_row+0x73>
   29422:	lea    0x6f70(%rip),%rcx        # 30399 <png_pass_inc.46>
   29429:	lea    0x6f62(%rip),%rsi        # 30392 <png_pass_start.45>
   29430:	lea    0x6f70(%rip),%r8        # 303a7 <png_pass_yinc.48>
   29437:	lea    0x6f62(%rip),%r9        # 303a0 <png_pass_ystart.47>
   2943e:	jmpq   294dd <png_write_finish_row+0x10d>
   29443:	movzbl 0x265(%rdi),%eax
   2944a:	add    $0x1,%eax
   2944d:	mov    %al,0x265(%rdi)
   29453:	movzbl 0x265(%rdi),%eax
   2945a:	cmp    $0x6,%al
   2945c:	ja     293fc <png_write_finish_row+0x2c>
   2945e:	mov    0x220(%rdi),%r8
   29465:	test   %r8,%r8
   29468:	jne    294fc <png_write_finish_row+0x12c>
   2946e:	leaveq 
   2946f:	retq   
   29470:	movzbl %al,%edx
   29473:	movzbl (%rdx,%rcx,1),%r11d
   29478:	mov    0x1f8(%rdi),%eax
   2947e:	lea    -0x1(%r11,%rax,1),%eax
   29483:	movzbl (%rdx,%rsi,1),%edx
   29487:	sub    %edx,%eax
   29489:	xor    %r10d,%r10d
   2948c:	mov    %r10,%rdx
   2948f:	div    %r11d
   29492:	mov    %eax,0x204(%rdi)
   29498:	movzbl 0x265(%rdi),%edx
   2949f:	movzbl (%rdx,%r8,1),%r11d
   294a4:	mov    0x1fc(%rdi),%eax
   294aa:	lea    -0x1(%r11,%rax,1),%eax
   294af:	movzbl (%rdx,%r9,1),%edx
   294b4:	sub    %edx,%eax
   294b6:	mov    %r10,%rdx
   294b9:	div    %r11d
   294bc:	mov    %eax,0x200(%rdi)
   294c2:	mov    0x134(%rdi),%edx
   294c8:	and    $0x2,%edx
   294cb:	test   %edx,%edx
   294cd:	jne    29529 <png_write_finish_row+0x159>
   294cf:	mov    0x204(%rdi),%edx
   294d5:	test   %edx,%edx
   294d7:	je     294dd <png_write_finish_row+0x10d>
   294d9:	test   %eax,%eax
   294db:	jne    29530 <png_write_finish_row+0x160>
   294dd:	movzbl 0x265(%rdi),%eax
   294e4:	add    $0x1,%eax
   294e7:	mov    %al,0x265(%rdi)
   294ed:	cmp    $0x6,%al
   294ef:	jbe    29470 <png_write_finish_row+0xa0>
   294f5:	xor    %esi,%esi
   294f7:	jmpq   29453 <png_write_finish_row+0x83>
   294fc:	movzbl 0x269(%rdi),%eax
   29503:	movzbl 0x26c(%rdi),%ecx
   2950a:	imul   %ecx,%eax
   2950d:	cmp    $0x7,%eax
   29510:	jg     29537 <png_write_finish_row+0x167>
   29512:	movslq %eax,%rax
   29515:	mov    0x1f8(%rdi),%ecx
   2951b:	imul   %rcx,%rax
   2951f:	add    $0x7,%rax
   29523:	shr    $0x3,%rax
   29527:	jmp    29548 <png_write_finish_row+0x178>
   29529:	xor    %esi,%esi
   2952b:	jmpq   29453 <png_write_finish_row+0x83>
   29530:	xor    %esi,%esi
   29532:	jmpq   29453 <png_write_finish_row+0x83>
   29537:	movslq %eax,%rax
   2953a:	shr    $0x3,%rax
   2953e:	mov    0x1f8(%rdi),%ecx
   29544:	imul   %rcx,%rax
   29548:	lea    0x1(%rax),%rdx
   2954c:	mov    %r8,%rdi
   2954f:	callq  5350 <memset@plt>
   29554:	leaveq 
   29555:	retq   
   29556:	nopw   %cs:0x0(%rax,%rax,1)

0000000000029560 <png_write_start_row>:
   29560:	push   %rbp
   29561:	mov    %rsp,%rbp
   29564:	sub    $0x20,%rsp
   29568:	mov    %r14,-0x10(%rbp)
   2956c:	mov    %r15,-0x18(%rbp)
   29570:	movzbl 0x269(%rdi),%ecx
   29577:	movzbl 0x26c(%rdi),%eax
   2957e:	imul   %eax,%ecx
   29581:	cmp    $0x7,%ecx
   29584:	jg     2959d <png_write_start_row+0x3d>
   29586:	movslq %ecx,%rax
   29589:	mov    0x1f8(%rdi),%edx
   2958f:	imul   %rdx,%rax
   29593:	add    $0x7,%rax
   29597:	shr    $0x3,%rax
   2959b:	jmp    295ae <png_write_start_row+0x4e>
   2959d:	movslq %ecx,%rax
   295a0:	shr    $0x3,%rax
   295a4:	mov    0x1f8(%rdi),%edx
   295aa:	imul   %rdx,%rax
   295ae:	movzbl 0x26a(%rdi),%edx
   295b5:	mov    %dl,0x26f(%rdi)
   295bb:	mov    %cl,0x26e(%rdi)
   295c1:	lea    0x1(%rax),%r15
   295c5:	mov    %rdi,%r14
   295c8:	mov    %r15,%rsi
   295cb:	callq  5800 <png_malloc@plt>
   295d0:	mov    %rax,0x228(%r14)
   295d7:	movb   $0x0,(%rax)
   295da:	movzbl 0x266(%r14),%eax
   295e2:	mov    0x1fc(%r14),%ecx
   295e9:	cmp    $0x1,%ecx
   295ec:	jne    295f0 <png_write_start_row+0x90>
   295ee:	and    $0x1f,%al
   295f0:	mov    0x1f8(%r14),%ecx
   295f7:	cmp    $0x1,%ecx
   295fa:	jne    295fe <png_write_start_row+0x9e>
   295fc:	and    $0x2f,%al
   295fe:	test   %al,%al
   29600:	jne    29607 <png_write_start_row+0xa7>
   29602:	mov    $0x8,%eax
   29607:	mov    %al,0x266(%r14)
   2960e:	movzbl %al,%eax
   29611:	mov    %rax,%rcx
   29614:	and    $0xf0,%ecx
   2961a:	test   %ecx,%ecx
   2961c:	jg     2966b <png_write_start_row+0x10b>
   2961e:	and    $0xe0,%eax
   29623:	test   %eax,%eax
   29625:	jle    29639 <png_write_start_row+0xd9>
   29627:	mov    %r15,%rsi
   2962a:	mov    %r14,%rdi
   2962d:	callq  5780 <png_calloc@plt>
   29632:	mov    %rax,0x220(%r14)
   29639:	movzbl 0x264(%r14),%eax
   29641:	test   %al,%al
   29643:	jne    296a3 <png_write_start_row+0x143>
   29645:	mov    0x1fc(%r14),%eax
   2964c:	mov    %eax,0x200(%r14)
   29653:	mov    0x1f8(%r14),%eax
   2965a:	mov    %eax,0x204(%r14)
   29661:	mov    -0x18(%rbp),%r15
   29665:	mov    -0x10(%rbp),%r14
   29669:	leaveq 
   2966a:	retq   
   2966b:	mov    0x230(%r14),%rcx
   29672:	test   %rcx,%rcx
   29675:	jne    2961e <png_write_start_row+0xbe>
   29677:	mov    %r14,%rdi
   2967a:	mov    %r15,%rsi
   2967d:	mov    %r13,-0x8(%rbp)
   29681:	mov    %rax,%r13
   29684:	callq  5800 <png_malloc@plt>
   29689:	mov    %rax,0x230(%r14)
   29690:	mov    $0x1,%ecx
   29695:	mov    %r13,%rax
   29698:	and    $0x10,%eax
   2969b:	test   %eax,%eax
   2969d:	jg     296d7 <png_write_start_row+0x177>
   2969f:	xor    %eax,%eax
   296a1:	jmp    296df <png_write_start_row+0x17f>
   296a3:	mov    0x134(%r14),%eax
   296aa:	and    $0x2,%eax
   296ad:	test   %eax,%eax
   296af:	je     2971a <png_write_start_row+0x1ba>
   296b1:	mov    0x1fc(%r14),%eax
   296b8:	mov    %eax,0x200(%r14)
   296bf:	mov    0x1f8(%r14),%eax
   296c6:	mov    %eax,0x204(%r14)
   296cd:	mov    -0x18(%rbp),%r15
   296d1:	mov    -0x10(%rbp),%r14
   296d5:	leaveq 
   296d6:	retq   
   296d7:	mov    %rcx,%rax
   296da:	mov    $0x2,%ecx
   296df:	mov    %r13,%rdx
   296e2:	and    $0x20,%edx
   296e5:	test   %edx,%edx
   296e7:	jle    296ec <png_write_start_row+0x18c>
   296e9:	mov    %rcx,%rax
   296ec:	mov    %r13,%rcx
   296ef:	and    $0x40,%ecx
   296f2:	test   %ecx,%ecx
   296f4:	jle    296f9 <png_write_start_row+0x199>
   296f6:	add    $0x1,%eax
   296f9:	mov    %r13,%rcx
   296fc:	and    $0x80,%ecx
   29702:	test   %ecx,%ecx
   29704:	jle    29709 <png_write_start_row+0x1a9>
   29706:	add    $0x1,%eax
   29709:	cmp    $0x1,%eax
   2970c:	jg     2974c <png_write_start_row+0x1ec>
   2970e:	mov    %r13,%rax
   29711:	mov    -0x8(%rbp),%r13
   29715:	jmpq   2961e <png_write_start_row+0xbe>
   2971a:	mov    0x1fc(%r14),%eax
   29721:	add    $0x7,%eax
   29724:	shr    $0x3,%eax
   29727:	mov    %eax,0x200(%r14)
   2972e:	mov    0x1f8(%r14),%eax
   29735:	add    $0x7,%eax
   29738:	shr    $0x3,%eax
   2973b:	mov    %eax,0x204(%r14)
   29742:	mov    -0x18(%rbp),%r15
   29746:	mov    -0x10(%rbp),%r14
   2974a:	leaveq 
   2974b:	retq   
   2974c:	mov    %r14,%rdi
   2974f:	mov    %r15,%rsi
   29752:	callq  5800 <png_malloc@plt>
   29757:	mov    %rax,0x238(%r14)
   2975e:	mov    %r13,%rax
   29761:	mov    -0x8(%rbp),%r13
   29765:	jmpq   2961e <png_write_start_row+0xbe>
   2976a:	nopw   0x0(%rax,%rax,1)

0000000000029770 <png_do_write_interlace>:
   29770:	push   %rbp
   29771:	mov    %rsp,%rbp
   29774:	sub    $0x40,%rsp
   29778:	cmp    $0x5,%edx
   2977b:	jle    2977f <png_do_write_interlace+0xf>
   2977d:	leaveq 
   2977e:	retq   
   2977f:	movslq %edx,%r9
   29782:	lea    0x6c2c(%rip),%rax        # 303b5 <png_pass_inc.54>
   29789:	lea    0x6c1e(%rip),%r8        # 303ae <png_pass_start.53>
   29790:	xor    %r10d,%r10d
   29793:	movzbl 0x13(%rdi),%ecx
   29797:	cmp    $0x1,%cl
   2979a:	jbe    297de <png_do_write_interlace+0x6e>
   2979c:	cmp    $0x2,%cl
   2979f:	je     29828 <png_do_write_interlace+0xb8>
   297a5:	cmp    $0x4,%cl
   297a8:	jne    297e7 <png_do_write_interlace+0x77>
   297aa:	mov    (%rdi),%ecx
   297ac:	movzbl (%r9,%r8,1),%r11d
   297b1:	mov    $0x4,%edx
   297b6:	mov    %rbx,-0x8(%rbp)
   297ba:	mov    %r12,-0x10(%rbp)
   297be:	mov    %r13,-0x18(%rbp)
   297c2:	mov    %r14,-0x20(%rbp)
   297c6:	mov    %r15,-0x28(%rbp)
   297ca:	mov    %r11,%r13
   297cd:	mov    %rcx,%r14
   297d0:	mov    %rdx,%r15
   297d3:	mov    %rsi,%r12
   297d6:	mov    %r10,%r11
   297d9:	jmpq   29876 <png_do_write_interlace+0x106>
   297de:	cmp    $0x1,%cl
   297e1:	je     2988e <png_do_write_interlace+0x11e>
   297e7:	mov    (%rdi),%r10d
   297ea:	movslq %edx,%rdx
   297ed:	movzbl (%rdx,%r8,1),%r8d
   297f2:	shr    $0x3,%ecx
   297f5:	movslq %ecx,%rcx
   297f8:	mov    %rbx,-0x8(%rbp)
   297fc:	mov    %r12,-0x10(%rbp)
   29800:	mov    %r13,-0x18(%rbp)
   29804:	mov    %r14,-0x20(%rbp)
   29808:	mov    %r15,-0x28(%rbp)
   2980c:	mov    %r9,-0x38(%rbp)
   29810:	mov    %rdi,-0x30(%rbp)
   29814:	mov    %r8,%rbx
   29817:	mov    %rcx,%r12
   2981a:	mov    %rdx,%r13
   2981d:	mov    %r10,%r14
   29820:	mov    %rsi,%r15
   29823:	jmpq   298f8 <png_do_write_interlace+0x188>
   29828:	mov    (%rdi),%edx
   2982a:	movzbl (%r9,%r8,1),%ecx
   2982f:	mov    $0x6,%r11d
   29835:	mov    %rbx,-0x8(%rbp)
   29839:	mov    %r12,-0x10(%rbp)
   2983d:	mov    %r13,-0x18(%rbp)
   29841:	mov    %r14,-0x20(%rbp)
   29845:	mov    %r15,-0x28(%rbp)
   29849:	mov    %rcx,%r13
   2984c:	mov    %rdx,%r14
   2984f:	mov    %r11,%r15
   29852:	mov    %rsi,%r12
   29855:	mov    %r10,%r11
   29858:	mov    %r15,%rdx
   2985b:	jmpq   2995a <png_do_write_interlace+0x1ea>
   29860:	mov    %r11b,(%r12)
   29864:	add    $0x1,%r12
   29868:	mov    %r10,%r11
   2986b:	mov    %r15,%rdx
   2986e:	movzbl (%r9,%rax,1),%ecx
   29873:	add    %ecx,%r13d
   29876:	cmp    %r14d,%r13d
   29879:	jb     2996e <png_do_write_interlace+0x1fe>
   2987f:	cmp    $0x4,%edx
   29882:	je     2990c <png_do_write_interlace+0x19c>
   29888:	mov    %r11b,(%r12)
   2988c:	jmp    2990c <png_do_write_interlace+0x19c>
   2988e:	mov    (%rdi),%ecx
   29890:	movzbl (%r9,%r8,1),%r11d
   29895:	mov    $0x7,%edx
   2989a:	mov    %rbx,-0x8(%rbp)
   2989e:	mov    %r12,-0x10(%rbp)
   298a2:	mov    %r13,-0x18(%rbp)
   298a6:	mov    %r14,-0x20(%rbp)
   298aa:	mov    %r15,-0x28(%rbp)
   298ae:	mov    %r11,%r13
   298b1:	mov    %rcx,%r14
   298b4:	mov    %rdx,%r15
   298b7:	mov    %rsi,%r12
   298ba:	mov    %r10,%r11
   298bd:	jmpq   299b8 <png_do_write_interlace+0x248>
   298c2:	mov    %ebx,%ecx
   298c4:	imul   %r12,%rcx
   298c8:	add    %rsi,%rcx
   298cb:	cmp    %rcx,%r15
   298ce:	je     298ed <png_do_write_interlace+0x17d>
   298d0:	mov    %r15,%rdi
   298d3:	mov    %r12,%rdx
   298d6:	mov    %rsi,-0x40(%rbp)
   298da:	mov    %rcx,%rsi
   298dd:	callq  54c0 <memcpy@plt>
   298e2:	lea    0x6acc(%rip),%rax        # 303b5 <png_pass_inc.54>
   298e9:	mov    -0x40(%rbp),%rsi
   298ed:	add    %r12,%r15
   298f0:	movzbl 0x0(%r13,%rax,1),%ecx
   298f6:	add    %ecx,%ebx
   298f8:	cmp    %r14d,%ebx
   298fb:	jb     298c2 <png_do_write_interlace+0x152>
   298fd:	lea    0x6aaa(%rip),%r8        # 303ae <png_pass_start.53>
   29904:	mov    -0x30(%rbp),%rdi
   29908:	mov    -0x38(%rbp),%r9
   2990c:	movzbl (%r9,%rax,1),%ecx
   29911:	mov    (%rdi),%eax
   29913:	lea    -0x1(%rcx,%rax,1),%eax
   29917:	movzbl (%r9,%r8,1),%edx
   2991c:	sub    %edx,%eax
   2991e:	xor    %edx,%edx
   29920:	div    %ecx
   29922:	mov    %eax,(%rdi)
   29924:	movzbl 0x13(%rdi),%ecx
   29928:	cmp    $0x7,%cl
   2992b:	ja     299cf <png_do_write_interlace+0x25f>
   29931:	mov    %eax,%eax
   29933:	imul   %rax,%rcx
   29937:	add    $0x7,%rcx
   2993b:	shr    $0x3,%rcx
   2993f:	jmpq   299d9 <png_do_write_interlace+0x269>
   29944:	mov    %r11b,(%r12)
   29948:	add    $0x1,%r12
   2994c:	mov    %r10,%r11
   2994f:	mov    %r15,%rdx
   29952:	movzbl (%r9,%rax,1),%ecx
   29957:	add    %ecx,%r13d
   2995a:	cmp    %r14d,%r13d
   2995d:	jb     299f3 <png_do_write_interlace+0x283>
   29963:	cmp    $0x6,%edx
   29966:	je     2990c <png_do_write_interlace+0x19c>
   29968:	mov    %r11b,(%r12)
   2996c:	jmp    2990c <png_do_write_interlace+0x19c>
   2996e:	mov    %r13,%rcx
   29971:	shr    %ecx
   29973:	mov    %ecx,%ecx
   29975:	movzbl (%rsi,%rcx,1),%ebx
   29979:	mov    %r13,%rcx
   2997c:	and    $0x1,%ecx
   2997f:	add    $0xffffffff,%ecx
   29982:	and    $0x4,%ecx
   29985:	shr    %cl,%ebx
   29987:	and    $0xf,%ebx
   2998a:	mov    %rdx,%rcx
   2998d:	shl    %cl,%ebx
   2998f:	or     %ebx,%r11d
   29992:	test   %ecx,%ecx
   29994:	je     29860 <png_do_write_interlace+0xf0>
   2999a:	lea    -0x4(%rcx),%edx
   2999d:	jmpq   2986e <png_do_write_interlace+0xfe>
   299a2:	mov    %r11b,(%r12)
   299a6:	add    $0x1,%r12
   299aa:	mov    %r10,%r11
   299ad:	mov    %r15,%rdx
   299b0:	movzbl (%r9,%rax,1),%ecx
   299b5:	add    %ecx,%r13d
   299b8:	cmp    %r14d,%r13d
   299bb:	jb     29a26 <png_do_write_interlace+0x2b6>
   299bd:	cmp    $0x7,%edx
   299c0:	je     2990c <png_do_write_interlace+0x19c>
   299c6:	mov    %r11b,(%r12)
   299ca:	jmpq   2990c <png_do_write_interlace+0x19c>
   299cf:	shr    $0x3,%rcx
   299d3:	mov    %eax,%eax
   299d5:	imul   %rax,%rcx
   299d9:	mov    %rcx,0x8(%rdi)
   299dd:	mov    -0x28(%rbp),%r15
   299e1:	mov    -0x20(%rbp),%r14
   299e5:	mov    -0x18(%rbp),%r13
   299e9:	mov    -0x10(%rbp),%r12
   299ed:	mov    -0x8(%rbp),%rbx
   299f1:	leaveq 
   299f2:	retq   
   299f3:	mov    %r13,%rcx
   299f6:	shr    $0x2,%ecx
   299f9:	mov    %ecx,%ecx
   299fb:	movzbl (%rsi,%rcx,1),%ebx
   299ff:	mov    %r13,%rcx
   29a02:	not    %ecx
   29a04:	and    $0x3,%ecx
   29a07:	add    %ecx,%ecx
   29a09:	shr    %cl,%ebx
   29a0b:	and    $0x3,%ebx
   29a0e:	mov    %rdx,%rcx
   29a11:	shl    %cl,%ebx
   29a13:	or     %ebx,%r11d
   29a16:	test   %ecx,%ecx
   29a18:	je     29944 <png_do_write_interlace+0x1d4>
   29a1e:	lea    -0x2(%rcx),%edx
   29a21:	jmpq   29952 <png_do_write_interlace+0x1e2>
   29a26:	mov    %r13,%rcx
   29a29:	shr    $0x3,%ecx
   29a2c:	mov    %ecx,%ecx
   29a2e:	movzbl (%rsi,%rcx,1),%ebx
   29a32:	mov    %r13,%rcx
   29a35:	not    %ecx
   29a37:	and    $0x7,%ecx
   29a3a:	shr    %cl,%ebx
   29a3c:	and    $0x1,%ebx
   29a3f:	mov    %rdx,%rcx
   29a42:	shl    %cl,%ebx
   29a44:	or     %ebx,%r11d
   29a47:	test   %ecx,%ecx
   29a49:	je     299a2 <png_do_write_interlace+0x232>
   29a4f:	lea    -0x1(%rcx),%edx
   29a52:	jmpq   299b0 <png_do_write_interlace+0x240>
   29a57:	nopw   0x0(%rax,%rax,1)

0000000000029a60 <png_write_find_filter>:
   29a60:	push   %rbp
   29a61:	mov    %rsp,%rbp
   29a64:	sub    $0x40,%rsp
   29a68:	mov    %r15,-0x38(%rbp)
   29a6c:	mov    %r14,-0x30(%rbp)
   29a70:	mov    %rsi,-0x10(%rbp)
   29a74:	mov    %rbx,-0x18(%rbp)
   29a78:	mov    %r12,-0x20(%rbp)
   29a7c:	mov    %r13,-0x28(%rbp)
   29a80:	movzbl 0x13(%rsi),%r10d
   29a85:	movzbl 0x266(%rdi),%r9d
   29a8d:	mov    0x228(%rdi),%r8
   29a94:	mov    $0xfffffffffffffeff,%rax
   29a9b:	mov    0x8(%rsi),%rdx
   29a9f:	movabs $0x1fffffffffffffe,%rcx
   29aa9:	cmp    %rcx,%rdx
   29aac:	ja     29ad7 <png_write_find_filter+0x77>
   29aae:	mov    %r9,%rcx
   29ab1:	and    $0x8,%ecx
   29ab4:	test   %ecx,%ecx
   29ab6:	je     29adf <png_write_find_filter+0x7f>
   29ab8:	cmp    $0x8,%r9b
   29abc:	je     29adf <png_write_find_filter+0x7f>
   29abe:	lea    0x1(%r8),%rcx
   29ac2:	xor    %eax,%eax
   29ac4:	mov    $0x100,%r11d
   29aca:	mov    %r9,-0x40(%rbp)
   29ace:	mov    %r8,-0x8(%rbp)
   29ad2:	mov    %rax,%r8
   29ad5:	jmp    29b33 <png_write_find_filter+0xd3>
   29ad7:	mov    %r9,%rcx
   29ada:	neg    %ecx
   29adc:	and    %ecx,%r9d
   29adf:	add    $0x7,%r10d
   29ae3:	shr    $0x3,%r10d
   29ae7:	cmp    $0x10,%r9d
   29aeb:	je     29b42 <png_write_find_filter+0xe2>
   29aed:	mov    %r9,%rcx
   29af0:	and    $0x10,%ecx
   29af3:	test   %ecx,%ecx
   29af5:	jne    29bd9 <png_write_find_filter+0x179>
   29afb:	mov    %r12,%rcx
   29afe:	mov    %rdi,%r12
   29b01:	mov    %r15,%r11
   29b04:	mov    %r10,%r15
   29b07:	mov    %r14,%r10
   29b0a:	mov    %r9,%r14
   29b0d:	mov    %r13,%r9
   29b10:	mov    %rax,%r13
   29b13:	jmp    29b7c <png_write_find_filter+0x11c>
   29b15:	movzbl (%rcx),%r9d
   29b19:	cmp    $0x7f,%r9b
   29b1d:	jbe    29b25 <png_write_find_filter+0xc5>
   29b1f:	neg    %r9d
   29b22:	add    %r11d,%r9d
   29b25:	add    $0x1,%rcx
   29b29:	add    $0x1,%r8
   29b2d:	mov    %r9d,%r9d
   29b30:	add    %r9,%rax
   29b33:	cmp    %r8,%rdx
   29b36:	ja     29b15 <png_write_find_filter+0xb5>
   29b38:	mov    -0x8(%rbp),%r8
   29b3c:	mov    -0x40(%rbp),%r9
   29b40:	jmp    29adf <png_write_find_filter+0x7f>
   29b42:	mov    %rax,%r13
   29b45:	mov    %r9,%r14
   29b48:	mov    %r10,%r15
   29b4b:	mov    %rdi,%r12
   29b4e:	mov    %r15,%rsi
   29b51:	mov    %rdx,%rbx
   29b54:	callq  2aaa0 <png_setup_sub_row_only>
   29b59:	mov    0x230(%r12),%r8
   29b61:	mov    %rbx,%rdx
   29b64:	mov    -0x28(%rbp),%r9
   29b68:	mov    -0x20(%rbp),%rcx
   29b6c:	mov    -0x18(%rbp),%rbx
   29b70:	mov    -0x10(%rbp),%rsi
   29b74:	mov    -0x30(%rbp),%r10
   29b78:	mov    -0x38(%rbp),%r11
   29b7c:	cmp    $0x20,%r14d
   29b80:	je     29c33 <png_write_find_filter+0x1d3>
   29b86:	mov    %r14,%rax
   29b89:	and    $0x20,%eax
   29b8c:	test   %eax,%eax
   29b8e:	je     29c64 <png_write_find_filter+0x204>
   29b94:	mov    %r12,%rdi
   29b97:	mov    %rdx,%rsi
   29b9a:	mov    %r13,%rax
   29b9d:	mov    %rdx,-0x40(%rbp)
   29ba1:	mov    %rax,%rdx
   29ba4:	mov    %r8,%rbx
   29ba7:	callq  2ab20 <png_setup_up_row>
   29bac:	cmp    %r13,%rax
   29baf:	jb     29cc4 <png_write_find_filter+0x264>
   29bb5:	mov    %rbx,%r8
   29bb8:	mov    -0x40(%rbp),%rdx
   29bbc:	mov    -0x28(%rbp),%r9
   29bc0:	mov    -0x20(%rbp),%rcx
   29bc4:	mov    -0x18(%rbp),%rbx
   29bc8:	mov    -0x10(%rbp),%rsi
   29bcc:	mov    -0x30(%rbp),%r10
   29bd0:	mov    -0x38(%rbp),%r11
   29bd4:	jmpq   29c64 <png_write_find_filter+0x204>
   29bd9:	mov    %rdi,%rbx
   29bdc:	mov    %r10,%rsi
   29bdf:	mov    %rdx,%r11
   29be2:	mov    %rax,%rcx
   29be5:	mov    %r10,-0x40(%rbp)
   29be9:	mov    %rdi,%r12
   29bec:	mov    %rbx,%rdi
   29bef:	mov    %r8,%rbx
   29bf2:	mov    %rax,%r13
   29bf5:	mov    %r9,%r14
   29bf8:	mov    %rdx,%r15
   29bfb:	mov    %r11,%rdx
   29bfe:	callq  2a9d0 <png_setup_sub_row>
   29c03:	cmp    %r13,%rax
   29c06:	jb     29d01 <png_write_find_filter+0x2a1>
   29c0c:	mov    %r15,%rdx
   29c0f:	mov    %rbx,%r8
   29c12:	mov    -0x28(%rbp),%r9
   29c16:	mov    -0x20(%rbp),%rcx
   29c1a:	mov    -0x18(%rbp),%rbx
   29c1e:	mov    -0x10(%rbp),%rsi
   29c22:	mov    -0x40(%rbp),%r15
   29c26:	mov    -0x30(%rbp),%r10
   29c2a:	mov    -0x38(%rbp),%r11
   29c2e:	jmpq   29b7c <png_write_find_filter+0x11c>
   29c33:	mov    %rdx,%rbx
   29c36:	mov    %r12,%rdi
   29c39:	mov    %rbx,%rsi
   29c3c:	callq  2abb0 <png_setup_up_row_only>
   29c41:	mov    0x230(%r12),%r8
   29c49:	mov    %rbx,%rdx
   29c4c:	mov    -0x28(%rbp),%r9
   29c50:	mov    -0x20(%rbp),%rcx
   29c54:	mov    -0x18(%rbp),%rbx
   29c58:	mov    -0x10(%rbp),%rsi
   29c5c:	mov    -0x30(%rbp),%r10
   29c60:	mov    -0x38(%rbp),%r11
   29c64:	cmp    $0x40,%r14d
   29c68:	je     29d41 <png_write_find_filter+0x2e1>
   29c6e:	mov    %r14,%rax
   29c71:	and    $0x40,%eax
   29c74:	test   %eax,%eax
   29c76:	je     29d72 <png_write_find_filter+0x312>
   29c7c:	mov    %r12,%rdi
   29c7f:	mov    %r15,%rsi
   29c82:	mov    %rdx,%rax
   29c85:	mov    %r13,%rcx
   29c88:	mov    %rdx,-0x40(%rbp)
   29c8c:	mov    %rax,%rdx
   29c8f:	mov    %r8,%rbx
   29c92:	callq  2ac10 <png_setup_avg_row>
   29c97:	cmp    %r13,%rax
   29c9a:	jb     29dc7 <png_write_find_filter+0x367>
   29ca0:	mov    %rbx,%r8
   29ca3:	mov    -0x40(%rbp),%rdx
   29ca7:	mov    -0x28(%rbp),%r9
   29cab:	mov    -0x20(%rbp),%rcx
   29caf:	mov    -0x18(%rbp),%rbx
   29cb3:	mov    -0x10(%rbp),%rsi
   29cb7:	mov    -0x30(%rbp),%r10
   29cbb:	mov    -0x38(%rbp),%r11
   29cbf:	jmpq   29d72 <png_write_find_filter+0x312>
   29cc4:	mov    0x230(%r12),%r8
   29ccc:	mov    0x238(%r12),%rcx
   29cd4:	test   %rcx,%rcx
   29cd7:	jne    29e04 <png_write_find_filter+0x3a4>
   29cdd:	mov    %rax,%r13
   29ce0:	mov    -0x40(%rbp),%rdx
   29ce4:	mov    -0x28(%rbp),%r9
   29ce8:	mov    -0x20(%rbp),%rcx
   29cec:	mov    -0x18(%rbp),%rbx
   29cf0:	mov    -0x10(%rbp),%rsi
   29cf4:	mov    -0x30(%rbp),%r10
   29cf8:	mov    -0x38(%rbp),%r11
   29cfc:	jmpq   29c64 <png_write_find_filter+0x204>
   29d01:	mov    0x230(%r12),%r8
   29d09:	mov    0x238(%r12),%rcx
   29d11:	test   %rcx,%rcx
   29d14:	jne    29e38 <png_write_find_filter+0x3d8>
   29d1a:	mov    %r15,%rdx
   29d1d:	mov    %rax,%r13
   29d20:	mov    -0x28(%rbp),%r9
   29d24:	mov    -0x20(%rbp),%rcx
   29d28:	mov    -0x18(%rbp),%rbx
   29d2c:	mov    -0x10(%rbp),%rsi
   29d30:	mov    -0x40(%rbp),%r15
   29d34:	mov    -0x30(%rbp),%r10
   29d38:	mov    -0x38(%rbp),%r11
   29d3c:	jmpq   29b7c <png_write_find_filter+0x11c>
   29d41:	mov    %r12,%rdi
   29d44:	mov    %r15,%rsi
   29d47:	mov    %rdx,%rbx
   29d4a:	callq  2ad20 <png_setup_avg_row_only>
   29d4f:	mov    0x230(%r12),%r8
   29d57:	mov    %rbx,%rdx
   29d5a:	mov    -0x28(%rbp),%r9
   29d5e:	mov    -0x20(%rbp),%rcx
   29d62:	mov    -0x18(%rbp),%rbx
   29d66:	mov    -0x10(%rbp),%rsi
   29d6a:	mov    -0x30(%rbp),%r10
   29d6e:	mov    -0x38(%rbp),%r11
   29d72:	cmp    $0x80,%r14d
   29d79:	je     29e6f <png_write_find_filter+0x40f>
   29d7f:	and    $0x80,%r14d
   29d86:	test   %r14d,%r14d
   29d89:	je     29e9c <png_write_find_filter+0x43c>
   29d8f:	mov    %rsi,%r14
   29d92:	mov    %r15,%rsi
   29d95:	mov    %r8,%r15
   29d98:	mov    %r12,%rdi
   29d9b:	mov    %r13,%rcx
   29d9e:	callq  2adc0 <png_setup_paeth_row>
   29da3:	cmp    %r13,%rax
   29da6:	jb     29ebd <png_write_find_filter+0x45d>
   29dac:	mov    %r14,%rsi
   29daf:	mov    %r15,%r8
   29db2:	mov    -0x28(%rbp),%r9
   29db6:	mov    -0x20(%rbp),%rcx
   29dba:	mov    -0x30(%rbp),%r10
   29dbe:	mov    -0x38(%rbp),%r11
   29dc2:	jmpq   29e9c <png_write_find_filter+0x43c>
   29dc7:	mov    0x230(%r12),%r8
   29dcf:	mov    0x238(%r12),%rcx
   29dd7:	test   %rcx,%rcx
   29dda:	jne    29ee7 <png_write_find_filter+0x487>
   29de0:	mov    %rax,%r13
   29de3:	mov    -0x40(%rbp),%rdx
   29de7:	mov    -0x28(%rbp),%r9
   29deb:	mov    -0x20(%rbp),%rcx
   29def:	mov    -0x18(%rbp),%rbx
   29df3:	mov    -0x10(%rbp),%rsi
   29df7:	mov    -0x30(%rbp),%r10
   29dfb:	mov    -0x38(%rbp),%r11
   29dff:	jmpq   29d72 <png_write_find_filter+0x312>
   29e04:	mov    %rcx,0x230(%r12)
   29e0c:	mov    %r8,0x238(%r12)
   29e14:	mov    %rax,%r13
   29e17:	mov    -0x40(%rbp),%rdx
   29e1b:	mov    -0x28(%rbp),%r9
   29e1f:	mov    -0x20(%rbp),%rcx
   29e23:	mov    -0x18(%rbp),%rbx
   29e27:	mov    -0x10(%rbp),%rsi
   29e2b:	mov    -0x30(%rbp),%r10
   29e2f:	mov    -0x38(%rbp),%r11
   29e33:	jmpq   29c64 <png_write_find_filter+0x204>
   29e38:	mov    %rcx,0x230(%r12)
   29e40:	mov    %r8,0x238(%r12)
   29e48:	mov    %r15,%rdx
   29e4b:	mov    %rax,%r13
   29e4e:	mov    -0x28(%rbp),%r9
   29e52:	mov    -0x20(%rbp),%rcx
   29e56:	mov    -0x18(%rbp),%rbx
   29e5a:	mov    -0x10(%rbp),%rsi
   29e5e:	mov    -0x40(%rbp),%r15
   29e62:	mov    -0x30(%rbp),%r10
   29e66:	mov    -0x38(%rbp),%r11
   29e6a:	jmpq   29b7c <png_write_find_filter+0x11c>
   29e6f:	mov    %rsi,%r13
   29e72:	mov    %r15,%rsi
   29e75:	mov    %r9,%r15
   29e78:	mov    %rcx,%r14
   29e7b:	mov    %r12,%rdi
   29e7e:	callq  2af80 <png_setup_paeth_row_only>
   29e83:	mov    0x230(%r12),%r8
   29e8b:	mov    %r14,%rcx
   29e8e:	mov    %r13,%rsi
   29e91:	mov    %r15,%r9
   29e94:	mov    -0x30(%rbp),%r10
   29e98:	mov    -0x38(%rbp),%r11
   29e9c:	mov    0x8(%rsi),%rdx
   29ea0:	add    $0x1,%rdx
   29ea4:	mov    %r8,%rsi
   29ea7:	mov    %r12,%rdi
   29eaa:	mov    %rcx,%r12
   29ead:	mov    %r9,%r13
   29eb0:	mov    %r10,%r14
   29eb3:	mov    %r11,%r15
   29eb6:	callq  2a950 <png_write_filtered_row>
   29ebb:	leaveq 
   29ebc:	retq   
   29ebd:	mov    0x230(%r12),%r8
   29ec5:	mov    0x238(%r12),%rax
   29ecd:	test   %rax,%rax
   29ed0:	jne    29f1b <png_write_find_filter+0x4bb>
   29ed2:	mov    %r14,%rsi
   29ed5:	mov    -0x28(%rbp),%r9
   29ed9:	mov    -0x20(%rbp),%rcx
   29edd:	mov    -0x30(%rbp),%r10
   29ee1:	mov    -0x38(%rbp),%r11
   29ee5:	jmp    29e9c <png_write_find_filter+0x43c>
   29ee7:	mov    %rcx,0x230(%r12)
   29eef:	mov    %r8,0x238(%r12)
   29ef7:	mov    %rax,%r13
   29efa:	mov    -0x40(%rbp),%rdx
   29efe:	mov    -0x28(%rbp),%r9
   29f02:	mov    -0x20(%rbp),%rcx
   29f06:	mov    -0x18(%rbp),%rbx
   29f0a:	mov    -0x10(%rbp),%rsi
   29f0e:	mov    -0x30(%rbp),%r10
   29f12:	mov    -0x38(%rbp),%r11
   29f16:	jmpq   29d72 <png_write_find_filter+0x312>
   29f1b:	mov    %rax,0x230(%r12)
   29f23:	mov    %r8,0x238(%r12)
   29f2b:	mov    %r14,%rsi
   29f2e:	mov    -0x28(%rbp),%r9
   29f32:	mov    -0x20(%rbp),%rcx
   29f36:	mov    -0x30(%rbp),%r10
   29f3a:	mov    -0x38(%rbp),%r11
   29f3e:	jmpq   29e9c <png_write_find_filter+0x43c>
   29f43:	data16 nopw %cs:0x0(%rax,%rax,1)
   29f4e:	xchg   %ax,%ax

0000000000029f50 <png_write_chunk_header>:
   29f50:	push   %rbp
   29f51:	mov    %rsp,%rbp
   29f54:	sub    $0x20,%rsp
   29f58:	test   %rdi,%rdi
   29f5b:	jne    29f5f <png_write_chunk_header+0xf>
   29f5d:	leaveq 
   29f5e:	retq   
   29f5f:	movl   $0x22,0x46c(%rdi)
   29f69:	lea    -0x18(%rbp),%rax
   29f6d:	mov    %r14,-0x8(%rbp)
   29f71:	mov    %r15,-0x10(%rbp)
   29f75:	mov    %rdi,%r14
   29f78:	mov    %rax,%rdi
   29f7b:	mov    %rsi,%r15
   29f7e:	mov    %rdx,%rsi
   29f81:	callq  5500 <png_save_uint_32@plt>
   29f86:	lea    -0x14(%rbp),%rdi
   29f8a:	mov    %r15,%rsi
   29f8d:	callq  5500 <png_save_uint_32@plt>
   29f92:	mov    $0x8,%edx
   29f97:	mov    %r14,%rdi
   29f9a:	lea    -0x18(%rbp),%rsi
   29f9e:	callq  23e50 <png_write_data>
   29fa3:	mov    %r15d,0x218(%r14)
   29faa:	mov    %r14,%rdi
   29fad:	callq  6d90 <png_reset_crc>
   29fb2:	mov    $0x4,%edx
   29fb7:	mov    %r14,%rdi
   29fba:	lea    -0x14(%rbp),%rsi
   29fbe:	callq  6dc0 <png_calculate_crc>
   29fc3:	movl   $0x42,0x46c(%r14)
   29fce:	mov    -0x10(%rbp),%r15
   29fd2:	mov    -0x8(%rbp),%r14
   29fd6:	leaveq 
   29fd7:	retq   
   29fd8:	nopl   0x0(%rax,%rax,1)

0000000000029fe0 <png_write_complete_chunk>:
   29fe0:	push   %rbp
   29fe1:	mov    %rsp,%rbp
   29fe4:	sub    $0x20,%rsp
   29fe8:	test   %rdi,%rdi
   29feb:	jne    29fef <png_write_complete_chunk+0xf>
   29fed:	leaveq 
   29fee:	retq   
   29fef:	cmp    $0x7fffffff,%rcx
   29ff6:	ja     2a042 <png_write_complete_chunk+0x62>
   29ff8:	mov    %rdi,%rax
   29ffb:	mov    %rcx,%r8
   29ffe:	mov    %r13,-0x8(%rbp)
   2a002:	mov    %r14,-0x10(%rbp)
   2a006:	mov    %r15,-0x18(%rbp)
   2a00a:	mov    %rdi,%r13
   2a00d:	mov    %rax,%rdi
   2a010:	mov    %rcx,%r14
   2a013:	mov    %rdx,%r15
   2a016:	mov    %r8,%rdx
   2a019:	callq  29f50 <png_write_chunk_header>
   2a01e:	mov    %r14,%rdx
   2a021:	mov    %r15,%rsi
   2a024:	mov    %r13,%rdi
   2a027:	callq  5100 <png_write_chunk_data@plt>
   2a02c:	mov    %r13,%rdi
   2a02f:	callq  5480 <png_write_chunk_end@plt>
   2a034:	mov    -0x18(%rbp),%r15
   2a038:	mov    -0x10(%rbp),%r14
   2a03c:	mov    -0x8(%rbp),%r13
   2a040:	leaveq 
   2a041:	retq   
   2a042:	lea    0x6373(%rip),%rsi        # 303bc <png_pass_inc.54+0x7>
   2a049:	callq  5470 <png_error@plt>
   2a04e:	xchg   %ax,%ax

000000000002a050 <png_image_size>:
   2a050:	push   %rbp
   2a051:	mov    %rsp,%rbp
   2a054:	sub    $0x30,%rsp
   2a058:	mov    0x1fc(%rdi),%eax
   2a05e:	mov    $0xffffffff,%ecx
   2a063:	mov    0x208(%rdi),%rdx
   2a06a:	cmp    $0x7fff,%rdx
   2a071:	jbe    2a078 <png_image_size+0x28>
   2a073:	mov    %rcx,%rax
   2a076:	leaveq 
   2a077:	retq   
   2a078:	cmp    $0x7fff,%eax
   2a07d:	jbe    2a084 <png_image_size+0x34>
   2a07f:	mov    %rcx,%rax
   2a082:	leaveq 
   2a083:	retq   
   2a084:	movzbl 0x264(%rdi),%ecx
   2a08b:	test   %cl,%cl
   2a08d:	jne    2a099 <png_image_size+0x49>
   2a08f:	lea    0x1(%rdx),%rcx
   2a093:	imul   %rcx,%rax
   2a097:	leaveq 
   2a098:	retq   
   2a099:	mov    0x1f8(%rdi),%r8d
   2a0a0:	movzbl 0x26a(%rdi),%edi
   2a0a7:	mov    %rdi,%r9
   2a0aa:	shr    $0x3,%r9
   2a0ae:	xor    %ecx,%ecx
   2a0b0:	mov    $0x1,%edx
   2a0b5:	mov    $0x3,%esi
   2a0ba:	mov    $0x7,%r10d
   2a0c0:	mov    %rbx,-0x8(%rbp)
   2a0c4:	mov    %r12,-0x10(%rbp)
   2a0c8:	mov    %r13,-0x18(%rbp)
   2a0cc:	mov    %r14,-0x20(%rbp)
   2a0d0:	mov    %r15,-0x28(%rbp)
   2a0d4:	mov    %rcx,%r11
   2a0d7:	mov    %rdx,%r14
   2a0da:	mov    %r11,%rdx
   2a0dd:	mov    %rdx,%rbx
   2a0e0:	jmp    2a12a <png_image_size+0xda>
   2a0e2:	sub    %edx,%r12d
   2a0e5:	sar    %r12d
   2a0e8:	mov    $0x1,%r15d
   2a0ee:	shl    %cl,%r15d
   2a0f1:	add    $0xffffffff,%r15d
   2a0f5:	mov    %rdx,%rcx
   2a0f8:	sar    %ecx
   2a0fa:	neg    %ecx
   2a0fc:	add    %esi,%ecx
   2a0fe:	not    %edx
   2a100:	and    $0x1,%edx
   2a103:	shl    %cl,%edx
   2a105:	and    $0x7,%edx
   2a108:	sub    %edx,%r15d
   2a10b:	lea    (%rax,%r15,1),%edx
   2a10f:	mov    %r12,%rcx
   2a112:	shr    %cl,%edx
   2a114:	mov    %edx,%ecx
   2a116:	lea    0x1(%r14),%rdx
   2a11a:	imul   %rdx,%rcx
   2a11e:	add    %rcx,%r11
   2a121:	mov    %r13,%rdx
   2a124:	mov    $0x1,%r14d
   2a12a:	cmp    $0x6,%edx
   2a12d:	jle    2a148 <png_image_size+0xf8>
   2a12f:	mov    %r11,%rax
   2a132:	mov    -0x28(%rbp),%r15
   2a136:	mov    -0x20(%rbp),%r14
   2a13a:	mov    -0x18(%rbp),%r13
   2a13e:	mov    -0x10(%rbp),%r12
   2a142:	mov    -0x8(%rbp),%rbx
   2a146:	leaveq 
   2a147:	retq   
   2a148:	cmp    $0x1,%edx
   2a14b:	jg     2a155 <png_image_size+0x105>
   2a14d:	mov    %rsi,%rcx
   2a150:	mov    %rbx,%r12
   2a153:	jmp    2a15f <png_image_size+0x10f>
   2a155:	mov    %r10,%rcx
   2a158:	sub    %edx,%ecx
   2a15a:	sar    %ecx
   2a15c:	mov    %r14,%r12
   2a15f:	test   %r12,%r12
   2a162:	jne    2a169 <png_image_size+0x119>
   2a164:	mov    %rsi,%r12
   2a167:	jmp    2a172 <png_image_size+0x122>
   2a169:	mov    %r10,%r12
   2a16c:	sub    %edx,%r12d
   2a16f:	sar    %r12d
   2a172:	shl    %cl,%r14d
   2a175:	lea    -0x1(%r14),%r15d
   2a179:	lea    0x1(%rdx),%r13d
   2a17d:	mov    %r13,%rcx
   2a180:	sar    %ecx
   2a182:	neg    %ecx
   2a184:	add    %esi,%ecx
   2a186:	mov    %rdx,%r14
   2a189:	and    $0x1,%r14d
   2a18d:	shl    %cl,%r14d
   2a190:	and    $0x7,%r14d
   2a194:	sub    %r14d,%r15d
   2a197:	lea    (%r15,%r8,1),%r14d
   2a19b:	mov    %r12,%rcx
   2a19e:	shr    %cl,%r14d
   2a1a1:	test   %r14d,%r14d
   2a1a4:	jne    2a1b4 <png_image_size+0x164>
   2a1a6:	mov    %r13,%rdx
   2a1a9:	mov    $0x1,%r14d
   2a1af:	jmpq   2a12a <png_image_size+0xda>
   2a1b4:	cmp    $0x7,%dil
   2a1b8:	ja     2a1cb <png_image_size+0x17b>
   2a1ba:	mov    %r14d,%ecx
   2a1bd:	imul   %rdi,%rcx
   2a1c1:	lea    0x7(%rcx),%r14
   2a1c5:	shr    $0x3,%r14
   2a1c9:	jmp    2a1d5 <png_image_size+0x185>
   2a1cb:	mov    %r14d,%ecx
   2a1ce:	mov    %r9,%r14
   2a1d1:	imul   %rcx,%r14
   2a1d5:	cmp    $0x2,%edx
   2a1d8:	jg     2a1e8 <png_image_size+0x198>
   2a1da:	mov    $0x8,%r12d
   2a1e0:	mov    %rsi,%rcx
   2a1e3:	mov    %rbx,%r15
   2a1e6:	jmp    2a1fb <png_image_size+0x1ab>
   2a1e8:	mov    $0x8,%r12d
   2a1ee:	mov    %r12,%rcx
   2a1f1:	sub    %edx,%ecx
   2a1f3:	sar    %ecx
   2a1f5:	mov    $0x1,%r15d
   2a1fb:	test   %r15,%r15
   2a1fe:	jne    2a0e2 <png_image_size+0x92>
   2a204:	mov    %rsi,%r12
   2a207:	jmpq   2a0e8 <png_image_size+0x98>
   2a20c:	nopl   0x0(%rax)

000000000002a210 <optimize_cmf>:
   2a210:	push   %rbp
   2a211:	mov    %rsp,%rbp
   2a214:	cmp    $0x4000,%rsi
   2a21b:	jbe    2a21f <optimize_cmf+0xf>
   2a21d:	leaveq 
   2a21e:	retq   
   2a21f:	movzbl (%rdi),%edx
   2a222:	mov    %rdx,%rax
   2a225:	and    $0xf,%eax
   2a228:	cmp    $0x8,%eax
   2a22b:	je     2a22f <optimize_cmf+0x1f>
   2a22d:	leaveq 
   2a22e:	retq   
   2a22f:	mov    %rdx,%rax
   2a232:	and    $0xf0,%eax
   2a237:	cmp    $0x70,%eax
   2a23a:	jbe    2a23e <optimize_cmf+0x2e>
   2a23c:	leaveq 
   2a23d:	retq   
   2a23e:	mov    $0x1,%eax
   2a243:	shr    $0x4,%edx
   2a246:	lea    0x7(%rdx),%ecx
   2a249:	shl    %cl,%eax
   2a24b:	mov    %eax,%ecx
   2a24d:	cmp    %rcx,%rsi
   2a250:	jbe    2a25d <optimize_cmf+0x4d>
   2a252:	leaveq 
   2a253:	retq   
   2a254:	shr    %eax
   2a256:	mov    %eax,%ecx
   2a258:	cmp    %rsi,%rcx
   2a25b:	jb     2a264 <optimize_cmf+0x54>
   2a25d:	add    $0xffffffff,%edx
   2a260:	test   %edx,%edx
   2a262:	jne    2a254 <optimize_cmf+0x44>
   2a264:	shl    $0x4,%edx
   2a267:	lea    0x8(%rdx),%eax
   2a26a:	mov    %al,(%rdi)
   2a26c:	movzbl 0x1(%rdi),%ecx
   2a270:	and    $0xe0,%ecx
   2a276:	shl    $0x8,%eax
   2a279:	lea    (%rcx,%rax,1),%esi
   2a27c:	lea    0x1(%rsi),%edx
   2a27f:	mov    $0x42108421,%eax
   2a284:	mul    %edx
   2a286:	shr    $0x3,%edx
   2a289:	mov    %rdx,%rax
   2a28c:	shl    $0x5,%eax
   2a28f:	sub    %eax,%edx
   2a291:	add    %esi,%edx
   2a293:	mov    $0x1f,%eax
   2a298:	sub    %edx,%eax
   2a29a:	add    %ecx,%eax
   2a29c:	mov    %al,0x1(%rdi)
   2a29f:	leaveq 
   2a2a0:	retq   
   2a2a1:	data16 nopw %cs:0x0(%rax,%rax,1)
   2a2ac:	nopl   0x0(%rax)

000000000002a2b0 <png_deflate_claim>:
   2a2b0:	push   %rbp
   2a2b1:	mov    %rsp,%rbp
   2a2b4:	sub    $0x80,%rsp
   2a2bb:	mov    %r15,-0x30(%rbp)
   2a2bf:	mov    %r14,-0x28(%rbp)
   2a2c3:	mov    0x138(%rdi),%ecx
   2a2c9:	test   %ecx,%ecx
   2a2cb:	jne    2a3c3 <png_deflate_claim+0x113>
   2a2d1:	mov    %rdx,%r11
   2a2d4:	mov    %rdi,%r15
   2a2d7:	movslq 0x1bc(%r15),%r10
   2a2de:	movslq 0x1c0(%r15),%rdx
   2a2e5:	movslq 0x1c4(%r15),%r14
   2a2ec:	movslq 0x1c8(%r15),%r8
   2a2f3:	xor    %r9d,%r9d
   2a2f6:	mov    $0x1,%eax
   2a2fb:	cmp    $0x49444154,%esi
   2a301:	je     2a46e <png_deflate_claim+0x1be>
   2a307:	movslq 0x1d0(%r15),%r10
   2a30e:	movslq 0x1d4(%r15),%rdx
   2a315:	movslq 0x1d8(%r15),%r14
   2a31c:	movslq 0x1dc(%r15),%r8
   2a323:	movslq 0x1e0(%r15),%r9
   2a32a:	cmp    $0x4000,%r11
   2a331:	jbe    2a49a <png_deflate_claim+0x1ea>
   2a337:	lea    0x140(%r15),%rdi
   2a33e:	mov    0x130(%r15),%eax
   2a345:	and    $0x2,%eax
   2a348:	test   %eax,%eax
   2a34a:	je     2a4ed <png_deflate_claim+0x23d>
   2a350:	cmp    0x1e4(%r15),%r10d
   2a357:	jne    2a381 <png_deflate_claim+0xd1>
   2a359:	cmp    0x1e8(%r15),%edx
   2a360:	jne    2a381 <png_deflate_claim+0xd1>
   2a362:	cmp    0x1ec(%r15),%r14d
   2a369:	jne    2a381 <png_deflate_claim+0xd1>
   2a36b:	cmp    0x1f0(%r15),%r8d
   2a372:	jne    2a381 <png_deflate_claim+0xd1>
   2a374:	cmp    0x1f4(%r15),%r9d
   2a37b:	je     2a4ed <png_deflate_claim+0x23d>
   2a381:	mov    %rdi,%rax
   2a384:	mov    %rsi,-0x8(%rbp)
   2a388:	mov    %r8,-0x38(%rbp)
   2a38c:	mov    %r9,-0x40(%rbp)
   2a390:	mov    %rbx,-0x10(%rbp)
   2a394:	mov    %r12,-0x18(%rbp)
   2a398:	mov    %r13,-0x20(%rbp)
   2a39c:	mov    %r10,%rbx
   2a39f:	mov    %rdx,%r12
   2a3a2:	mov    %rdi,%r13
   2a3a5:	mov    %rax,%rdi
   2a3a8:	callq  5670 <deflateEnd@plt>
   2a3ad:	test   %eax,%eax
   2a3af:	jne    2a4ac <png_deflate_claim+0x1fc>
   2a3b5:	mov    %r12,%rdx
   2a3b8:	mov    %r13,%rdi
   2a3bb:	mov    %rbx,%r10
   2a3be:	jmpq   2a4c4 <png_deflate_claim+0x214>
   2a3c3:	mov    %rsi,%rax
   2a3c6:	shr    $0x18,%eax
   2a3c9:	mov    %al,-0x80(%rbp)
   2a3cc:	mov    %rsi,%rax
   2a3cf:	shr    $0x10,%eax
   2a3d2:	mov    %al,-0x7f(%rbp)
   2a3d5:	mov    %rsi,%rax
   2a3d8:	shr    $0x8,%eax
   2a3db:	mov    %al,-0x7e(%rbp)
   2a3de:	mov    %sil,-0x7d(%rbp)
   2a3e2:	movb   $0x3a,-0x7c(%rbp)
   2a3e6:	movb   $0x20,-0x7b(%rbp)
   2a3ea:	mov    %rcx,%rax
   2a3ed:	shr    $0x18,%eax
   2a3f0:	mov    %al,-0x7a(%rbp)
   2a3f3:	mov    %rcx,%rax
   2a3f6:	shr    $0x10,%eax
   2a3f9:	mov    %al,-0x79(%rbp)
   2a3fc:	mov    %rcx,%rax
   2a3ff:	shr    $0x8,%eax
   2a402:	mov    %al,-0x78(%rbp)
   2a405:	mov    %cl,-0x77(%rbp)
   2a408:	lea    -0x80(%rbp),%rax
   2a40c:	mov    $0x40,%r8d
   2a412:	mov    $0xa,%r9d
   2a418:	lea    0x5fb8(%rip),%rcx        # 303d7 <png_pass_inc.54+0x22>
   2a41f:	mov    %rsi,-0x40(%rbp)
   2a423:	mov    %rdx,-0x38(%rbp)
   2a427:	mov    %r9,%rdx
   2a42a:	mov    %r8,%rsi
   2a42d:	mov    %rdi,%r15
   2a430:	mov    %rax,%rdi
   2a433:	callq  ad30 <png_safecat>
   2a438:	mov    %r15,%rdi
   2a43b:	lea    -0x80(%rbp),%rsi
   2a43f:	callq  5390 <png_warning@plt>
   2a444:	mov    0x138(%r15),%eax
   2a44b:	cmp    $0x49444154,%eax
   2a450:	je     2a56d <png_deflate_claim+0x2bd>
   2a456:	movl   $0x0,0x138(%r15)
   2a461:	mov    -0x38(%rbp),%r11
   2a465:	mov    -0x40(%rbp),%rsi
   2a469:	jmpq   2a2d7 <png_deflate_claim+0x27>
   2a46e:	mov    0x130(%r15),%eax
   2a475:	and    $0x1,%eax
   2a478:	test   %eax,%eax
   2a47a:	jne    2a588 <png_deflate_claim+0x2d8>
   2a480:	movzbl 0x266(%r15),%eax
   2a488:	cmp    $0x8,%al
   2a48a:	jne    2a599 <png_deflate_claim+0x2e9>
   2a490:	mov    $0x1,%eax
   2a495:	jmpq   2a32a <png_deflate_claim+0x7a>
   2a49a:	lea    0x1f(%r14),%ecx
   2a49e:	shl    %cl,%eax
   2a4a0:	lea    0x106(%r11),%rcx
   2a4a7:	jmpq   2a5ac <png_deflate_claim+0x2fc>
   2a4ac:	lea    0x5f42(%rip),%rsi        # 303f5 <png_pass_inc.54+0x40>
   2a4b3:	mov    %r15,%rdi
   2a4b6:	callq  5390 <png_warning@plt>
   2a4bb:	mov    %r12,%rdx
   2a4be:	mov    %r13,%rdi
   2a4c1:	mov    %rbx,%r10
   2a4c4:	mov    0x130(%r15),%eax
   2a4cb:	and    $0xfffffffd,%eax
   2a4ce:	mov    %eax,0x130(%r15)
   2a4d5:	mov    -0x20(%rbp),%r13
   2a4d9:	mov    -0x18(%rbp),%r12
   2a4dd:	mov    -0x10(%rbp),%rbx
   2a4e1:	mov    -0x40(%rbp),%r9
   2a4e5:	mov    -0x38(%rbp),%r8
   2a4e9:	mov    -0x8(%rbp),%rsi
   2a4ed:	movq   $0x0,0x140(%r15)
   2a4f8:	movl   $0x0,0x148(%r15)
   2a503:	movq   $0x0,0x158(%r15)
   2a50e:	movl   $0x0,0x160(%r15)
   2a519:	mov    0x130(%r15),%eax
   2a520:	and    $0x2,%eax
   2a523:	test   %eax,%eax
   2a525:	jne    2a5b8 <png_deflate_claim+0x308>
   2a52b:	sub    $0x10,%rsp
   2a52f:	lea    0x5edb(%rip),%rax        # 30411 <png_pass_inc.54+0x5c>
   2a536:	mov    %rax,(%rsp)
   2a53a:	mov    %r14,%rcx
   2a53d:	mov    %rsi,%r14
   2a540:	mov    %r10,%rsi
   2a543:	movl   $0x70,0x8(%rsp)
   2a54b:	callq  53b0 <deflateInit2_@plt>
   2a550:	add    $0x10,%rsp
   2a554:	test   %eax,%eax
   2a556:	jne    2a5c0 <png_deflate_claim+0x310>
   2a558:	mov    0x130(%r15),%eax
   2a55f:	or     $0x2,%eax
   2a562:	mov    %eax,0x130(%r15)
   2a569:	xor    %eax,%eax
   2a56b:	jmp    2a5c0 <png_deflate_claim+0x310>
   2a56d:	lea    0x5e72(%rip),%rax        # 303e6 <png_pass_inc.54+0x31>
   2a574:	mov    %rax,0x170(%r15)
   2a57b:	mov    $0xfffffffffffffffe,%rax
   2a582:	mov    -0x30(%rbp),%r15
   2a586:	leaveq 
   2a587:	retq   
   2a588:	movslq 0x1cc(%r15),%r9
   2a58f:	mov    $0x1,%eax
   2a594:	jmpq   2a32a <png_deflate_claim+0x7a>
   2a599:	mov    $0x1,%eax
   2a59e:	mov    %rax,%r9
   2a5a1:	jmpq   2a32a <png_deflate_claim+0x7a>
   2a5a6:	shr    %eax
   2a5a8:	add    $0xffffffff,%r14d
   2a5ac:	mov    %eax,%edi
   2a5ae:	cmp    %rcx,%rdi
   2a5b1:	jae    2a5a6 <png_deflate_claim+0x2f6>
   2a5b3:	jmpq   2a337 <png_deflate_claim+0x87>
   2a5b8:	mov    %rsi,%r14
   2a5bb:	callq  52e0 <deflateReset@plt>
   2a5c0:	test   %eax,%eax
   2a5c2:	je     2a5df <png_deflate_claim+0x32f>
   2a5c4:	mov    %r15,%rdi
   2a5c7:	mov    %rax,%r15
   2a5ca:	mov    %r15,%rsi
   2a5cd:	callq  6920 <png_zstream_error>
   2a5d2:	mov    %r15,%rax
   2a5d5:	mov    -0x28(%rbp),%r14
   2a5d9:	mov    -0x30(%rbp),%r15
   2a5dd:	leaveq 
   2a5de:	retq   
   2a5df:	mov    %r14d,0x138(%r15)
   2a5e6:	mov    -0x28(%rbp),%r14
   2a5ea:	xor    %eax,%eax
   2a5ec:	mov    -0x30(%rbp),%r15
   2a5f0:	leaveq 
   2a5f1:	retq   
   2a5f2:	data16 nopw %cs:0x0(%rax,%rax,1)
   2a5fd:	nopl   (%rax)

000000000002a600 <png_text_compress_init>:
   2a600:	push   %rbp
   2a601:	mov    %rsp,%rbp
   2a604:	mov    %rsi,(%rdi)
   2a607:	mov    %rdx,0x8(%rdi)
   2a60b:	movl   $0x0,0x10(%rdi)
   2a612:	leaveq 
   2a613:	retq   
   2a614:	data16 nopw %cs:0x0(%rax,%rax,1)
   2a61f:	nop

000000000002a620 <png_text_compress>:
   2a620:	push   %rbp
   2a621:	mov    %rsp,%rbp
   2a624:	sub    $0x50,%rsp
   2a628:	mov    %r15,-0x38(%rbp)
   2a62c:	mov    %rdi,-0x50(%rbp)
   2a630:	mov    %rcx,-0x48(%rbp)
   2a634:	mov    %rdx,%r15
   2a637:	mov    0x8(%r15),%rdx
   2a63b:	callq  2a2b0 <png_deflate_claim>
   2a640:	test   %eax,%eax
   2a642:	je     2a64a <png_text_compress+0x2a>
   2a644:	mov    -0x38(%rbp),%r15
   2a648:	leaveq 
   2a649:	retq   
   2a64a:	mov    0x8(%r15),%r11
   2a64e:	mov    (%r15),%rax
   2a651:	mov    -0x50(%rbp),%rdi
   2a655:	mov    %rax,0x140(%rdi)
   2a65c:	movl   $0x0,0x148(%rdi)
   2a666:	lea    0x14(%r15),%rax
   2a66a:	mov    %rax,-0x8(%rbp)
   2a66e:	mov    %rax,0x158(%rdi)
   2a675:	movl   $0x400,0x160(%rdi)
   2a67f:	xor    %esi,%esi
   2a681:	lea    0x140(%rdi),%r9
   2a688:	mov    %r9,-0x40(%rbp)
   2a68c:	lea    0x1b0(%rdi),%r10
   2a693:	mov    $0xffffffff,%eax
   2a698:	mov    $0x4,%ecx
   2a69d:	mov    $0x400,%edx
   2a6a2:	mov    $0xfffffffe,%r8d
   2a6a8:	mov    %r15,-0x10(%rbp)
   2a6ac:	mov    %rbx,-0x18(%rbp)
   2a6b0:	mov    %r12,-0x20(%rbp)
   2a6b4:	mov    %r13,-0x28(%rbp)
   2a6b8:	mov    %r14,-0x30(%rbp)
   2a6bc:	mov    %rdx,%rbx
   2a6bf:	mov    %r9,%r12
   2a6c2:	mov    %r10,%r13
   2a6c5:	mov    %r11,%r14
   2a6c8:	mov    %rdi,%r15
   2a6cb:	mov    -0x48(%rbp),%rdi
   2a6cf:	jmp    2a6e7 <png_text_compress+0xc7>
   2a6d1:	mov    $0xffffffff,%eax
   2a6d6:	mov    $0xfffffffe,%r8d
   2a6dc:	mov    $0x4,%ecx
   2a6e1:	xor    %esi,%esi
   2a6e3:	mov    -0x48(%rbp),%rdi
   2a6e7:	cmp    %r8,%r14
   2a6ea:	ja     2a6ef <png_text_compress+0xcf>
   2a6ec:	mov    %r14,%rax
   2a6ef:	mov    %eax,0x148(%r15)
   2a6f6:	mov    %eax,%eax
   2a6f8:	mov    %r14,%rdx
   2a6fb:	sub    %rax,%rdx
   2a6fe:	mov    0x160(%r15),%r8d
   2a705:	test   %r8d,%r8d
   2a708:	je     2a778 <png_text_compress+0x158>
   2a70a:	cmp    %rax,%r14
   2a70d:	jne    2a712 <png_text_compress+0xf2>
   2a70f:	mov    %rcx,%rsi
   2a712:	mov    %rdx,%r14
   2a715:	mov    %r12,%rdi
   2a718:	callq  5330 <deflate@plt>
   2a71d:	mov    0x148(%r15),%ecx
   2a724:	movl   $0x0,0x148(%r15)
   2a72f:	add    %rcx,%r14
   2a732:	test   %eax,%eax
   2a734:	je     2a6d1 <png_text_compress+0xb1>
   2a736:	mov    %rax,%r12
   2a739:	xor    %esi,%esi
   2a73b:	mov    -0x48(%rbp),%rdi
   2a73f:	mov    0x160(%r15),%eax
   2a746:	movl   $0x0,0x160(%r15)
   2a751:	sub    %eax,%ebx
   2a753:	mov    -0x10(%rbp),%r13
   2a757:	mov    %ebx,0x10(%r13)
   2a75b:	lea    (%rdi,%rbx,1),%eax
   2a75e:	cmp    $0x7ffffffe,%eax
   2a763:	ja     2a7b1 <png_text_compress+0x191>
   2a765:	mov    %rsi,%rbx
   2a768:	mov    %r15,%rdi
   2a76b:	mov    %r12,%rsi
   2a76e:	callq  6920 <png_zstream_error>
   2a773:	mov    %rbx,%rsi
   2a776:	jmp    2a7c6 <png_text_compress+0x1a6>
   2a778:	lea    (%rbx,%rdi,1),%r8d
   2a77c:	cmp    $0x7fffffff,%r8d
   2a783:	ja     2a7f0 <png_text_compress+0x1d0>
   2a785:	mov    0x0(%r13),%rdi
   2a789:	test   %rdi,%rdi
   2a78c:	je     2a7ff <png_text_compress+0x1df>
   2a78e:	mov    %rdi,%r13
   2a791:	lea    0x8(%r13),%rdi
   2a795:	mov    %rdi,0x158(%r15)
   2a79c:	mov    0x1b8(%r15),%edi
   2a7a3:	mov    %edi,0x160(%r15)
   2a7aa:	add    %edi,%ebx
   2a7ac:	jmpq   2a70a <png_text_compress+0xea>
   2a7b1:	lea    0x5c60(%rip),%rax        # 30418 <png_pass_inc.54+0x63>
   2a7b8:	mov    %rax,0x170(%r15)
   2a7bf:	mov    $0xfffffffffffffffc,%r12
   2a7c6:	movl   $0x0,0x138(%r15)
   2a7d1:	cmp    $0x1,%r12d
   2a7d5:	je     2a849 <png_text_compress+0x229>
   2a7d7:	mov    %r12,%rax
   2a7da:	mov    -0x30(%rbp),%r14
   2a7de:	mov    -0x28(%rbp),%r13
   2a7e2:	mov    -0x20(%rbp),%r12
   2a7e6:	mov    -0x18(%rbp),%rbx
   2a7ea:	mov    -0x38(%rbp),%r15
   2a7ee:	leaveq 
   2a7ef:	retq   
   2a7f0:	mov    %rdx,%r14
   2a7f3:	mov    $0xfffffffffffffffc,%r12
   2a7fa:	jmpq   2a73f <png_text_compress+0x11f>
   2a7ff:	mov    0x1b8(%r15),%ecx
   2a806:	lea    0x8(%rcx),%rsi
   2a80a:	mov    %r15,%rdi
   2a80d:	mov    %rdx,-0x50(%rbp)
   2a811:	mov    %r13,%r12
   2a814:	mov    %rax,%r13
   2a817:	callq  c950 <png_malloc_base>
   2a81c:	test   %rax,%rax
   2a81f:	je     2a869 <png_text_compress+0x249>
   2a821:	movq   $0x0,(%rax)
   2a828:	mov    %rax,(%r12)
   2a82c:	mov    %r13,%rcx
   2a82f:	mov    %rax,%r13
   2a832:	mov    %rcx,%rax
   2a835:	mov    $0x4,%ecx
   2a83a:	xor    %esi,%esi
   2a83c:	mov    -0x50(%rbp),%rdx
   2a840:	mov    -0x40(%rbp),%r12
   2a844:	jmpq   2a791 <png_text_compress+0x171>
   2a849:	test   %r14,%r14
   2a84c:	je     2a87f <png_text_compress+0x25f>
   2a84e:	mov    $0x1,%eax
   2a853:	mov    -0x30(%rbp),%r14
   2a857:	mov    -0x28(%rbp),%r13
   2a85b:	mov    -0x20(%rbp),%r12
   2a85f:	mov    -0x18(%rbp),%rbx
   2a863:	mov    -0x38(%rbp),%r15
   2a867:	leaveq 
   2a868:	retq   
   2a869:	xor    %esi,%esi
   2a86b:	mov    -0x50(%rbp),%r14
   2a86f:	mov    $0xfffffffffffffffc,%r12
   2a876:	mov    -0x48(%rbp),%rdi
   2a87a:	jmpq   2a73f <png_text_compress+0x11f>
   2a87f:	mov    0x8(%r13),%rax
   2a883:	mov    %rsi,%r12
   2a886:	mov    %rax,%rsi
   2a889:	mov    -0x8(%rbp),%rdi
   2a88d:	callq  2a210 <optimize_cmf>
   2a892:	mov    %r12,%rax
   2a895:	mov    -0x30(%rbp),%r14
   2a899:	mov    -0x28(%rbp),%r13
   2a89d:	mov    -0x20(%rbp),%r12
   2a8a1:	mov    -0x18(%rbp),%rbx
   2a8a5:	mov    -0x38(%rbp),%r15
   2a8a9:	leaveq 
   2a8aa:	retq   
   2a8ab:	nopl   0x0(%rax,%rax,1)

000000000002a8b0 <png_write_compressed_data_out>:
   2a8b0:	push   %rbp
   2a8b1:	mov    %rsp,%rbp
   2a8b4:	sub    $0x20,%rsp
   2a8b8:	mov    %r12,-0x8(%rbp)
   2a8bc:	mov    %r13,-0x10(%rbp)
   2a8c0:	mov    %r14,-0x18(%rbp)
   2a8c4:	mov    %r15,-0x20(%rbp)
   2a8c8:	mov    0x10(%rsi),%r12d
   2a8cc:	mov    0x1b0(%rdi),%r14
   2a8d3:	add    $0x14,%rsi
   2a8d7:	mov    %rbx,%r13
   2a8da:	mov    %rdi,%rbx
   2a8dd:	mov    $0x400,%eax
   2a8e2:	jmp    2a90f <png_write_compressed_data_out+0x5f>
   2a8e4:	mov    %r12,%r15
   2a8e7:	mov    %r15d,%edx
   2a8ea:	mov    %rbx,%rdi
   2a8ed:	callq  5100 <png_write_chunk_data@plt>
   2a8f2:	cmp    %r12d,%r15d
   2a8f5:	je     2a919 <png_write_compressed_data_out+0x69>
   2a8f7:	test   %r14,%r14
   2a8fa:	je     2a919 <png_write_compressed_data_out+0x69>
   2a8fc:	mov    0x1b8(%rbx),%eax
   2a902:	mov    (%r14),%rcx
   2a905:	sub    %r15d,%r12d
   2a908:	lea    0x8(%r14),%rsi
   2a90c:	mov    %rcx,%r14
   2a90f:	cmp    %r12d,%eax
   2a912:	ja     2a8e4 <png_write_compressed_data_out+0x34>
   2a914:	mov    %rax,%r15
   2a917:	jmp    2a8e7 <png_write_compressed_data_out+0x37>
   2a919:	cmp    %r12d,%r15d
   2a91c:	jne    2a933 <png_write_compressed_data_out+0x83>
   2a91e:	mov    %r13,%rbx
   2a921:	mov    -0x20(%rbp),%r15
   2a925:	mov    -0x18(%rbp),%r14
   2a929:	mov    -0x10(%rbp),%r13
   2a92d:	mov    -0x8(%rbp),%r12
   2a931:	leaveq 
   2a932:	retq   
   2a933:	mov    %rbx,%rdi
   2a936:	lea    0x5af4(%rip),%rsi        # 30431 <png_pass_inc.54+0x7c>
   2a93d:	callq  5470 <png_error@plt>
   2a942:	data16 nopw %cs:0x0(%rax,%rax,1)
   2a94d:	nopl   (%rax)

000000000002a950 <png_write_filtered_row>:
   2a950:	push   %rbp
   2a951:	mov    %rsp,%rbp
   2a954:	sub    $0x10,%rsp
   2a958:	mov    %r15,-0x8(%rbp)
   2a95c:	xor    %ecx,%ecx
   2a95e:	mov    %rdi,%r15
   2a961:	callq  27dd0 <png_compress_IDAT>
   2a966:	mov    0x220(%r15),%rax
   2a96d:	test   %rax,%rax
   2a970:	je     2a987 <png_write_filtered_row+0x37>
   2a972:	mov    0x228(%r15),%rcx
   2a979:	mov    %rcx,0x220(%r15)
   2a980:	mov    %rax,0x228(%r15)
   2a987:	mov    %r15,%rdi
   2a98a:	callq  293d0 <png_write_finish_row>
   2a98f:	mov    0x29c(%r15),%eax
   2a996:	add    $0x1,%eax
   2a999:	mov    %eax,0x29c(%r15)
   2a9a0:	mov    0x298(%r15),%ecx
   2a9a7:	test   %ecx,%ecx
   2a9a9:	jne    2a9b1 <png_write_filtered_row+0x61>
   2a9ab:	mov    -0x8(%rbp),%r15
   2a9af:	leaveq 
   2a9b0:	retq   
   2a9b1:	cmp    %eax,%ecx
   2a9b3:	jbe    2a9bb <png_write_filtered_row+0x6b>
   2a9b5:	mov    -0x8(%rbp),%r15
   2a9b9:	leaveq 
   2a9ba:	retq   
   2a9bb:	mov    %r15,%rdi
   2a9be:	callq  58c0 <png_write_flush@plt>
   2a9c3:	mov    -0x8(%rbp),%r15
   2a9c7:	leaveq 
   2a9c8:	retq   
   2a9c9:	nopl   0x0(%rax)

000000000002a9d0 <png_setup_sub_row>:
   2a9d0:	push   %rbp
   2a9d1:	mov    %rsp,%rbp
   2a9d4:	sub    $0x10,%rsp
   2a9d8:	mov    %rcx,-0x10(%rbp)
   2a9dc:	mov    0x230(%rdi),%rax
   2a9e3:	movb   $0x1,(%rax)
   2a9e6:	mov    %esi,%r10d
   2a9e9:	mov    0x228(%rdi),%rcx
   2a9f0:	add    $0x1,%rcx
   2a9f4:	mov    0x230(%rdi),%rsi
   2a9fb:	add    $0x1,%rsi
   2a9ff:	mov    $0x100,%r11d
   2aa05:	xor    %r8d,%r8d
   2aa08:	mov    %r8,%rax
   2aa0b:	jmp    2aa32 <png_setup_sub_row+0x62>
   2aa0d:	movzbl (%rcx),%r9d
   2aa11:	mov    %r9b,(%rsi)
   2aa14:	cmp    $0x7f,%r9b
   2aa18:	jbe    2aa20 <png_setup_sub_row+0x50>
   2aa1a:	neg    %r9d
   2aa1d:	add    %r11d,%r9d
   2aa20:	mov    %r9d,%r9d
   2aa23:	add    %r9,%rax
   2aa26:	add    $0x1,%rcx
   2aa2a:	add    $0x1,%rsi
   2aa2e:	add    $0x1,%r8
   2aa32:	cmp    %r10,%r8
   2aa35:	jb     2aa0d <png_setup_sub_row+0x3d>
   2aa37:	mov    0x228(%rdi),%rdi
   2aa3e:	add    $0x1,%rdi
   2aa42:	mov    %r15,-0x8(%rbp)
   2aa46:	mov    -0x10(%rbp),%r15
   2aa4a:	jmp    2aa85 <png_setup_sub_row+0xb5>
   2aa4c:	movzbl (%rcx),%r9d
   2aa50:	movzbl (%rdi),%r10d
   2aa54:	sub    %r10b,%r9b
   2aa57:	movzbl %r9b,%r10d
   2aa5b:	mov    %r9b,(%rsi)
   2aa5e:	cmp    $0x7f,%r9b
   2aa62:	jbe    2aa6a <png_setup_sub_row+0x9a>
   2aa64:	neg    %r10d
   2aa67:	add    %r11d,%r10d
   2aa6a:	mov    %r10d,%r9d
   2aa6d:	add    %r9,%rax
   2aa70:	cmp    %r15,%rax
   2aa73:	ja     2aa90 <png_setup_sub_row+0xc0>
   2aa75:	add    $0x1,%rcx
   2aa79:	add    $0x1,%rdi
   2aa7d:	add    $0x1,%rsi
   2aa81:	add    $0x1,%r8
   2aa85:	cmp    %rdx,%r8
   2aa88:	jb     2aa4c <png_setup_sub_row+0x7c>
   2aa8a:	mov    -0x8(%rbp),%r15
   2aa8e:	leaveq 
   2aa8f:	retq   
   2aa90:	mov    -0x8(%rbp),%r15
   2aa94:	leaveq 
   2aa95:	retq   
   2aa96:	nopw   %cs:0x0(%rax,%rax,1)

000000000002aaa0 <png_setup_sub_row_only>:
   2aaa0:	push   %rbp
   2aaa1:	mov    %rsp,%rbp
   2aaa4:	mov    0x230(%rdi),%rax
   2aaab:	movb   $0x1,(%rax)
   2aaae:	mov    %esi,%r9d
   2aab1:	mov    0x228(%rdi),%rax
   2aab8:	add    $0x1,%rax
   2aabc:	mov    0x230(%rdi),%rcx
   2aac3:	add    $0x1,%rcx
   2aac7:	xor    %esi,%esi
   2aac9:	jmp    2aade <png_setup_sub_row_only+0x3e>
   2aacb:	movzbl (%rax),%r8d
   2aacf:	mov    %r8b,(%rcx)
   2aad2:	add    $0x1,%rax
   2aad6:	add    $0x1,%rcx
   2aada:	add    $0x1,%rsi
   2aade:	cmp    %r9,%rsi
   2aae1:	jb     2aacb <png_setup_sub_row_only+0x2b>
   2aae3:	mov    0x228(%rdi),%rdi
   2aaea:	add    $0x1,%rdi
   2aaee:	jmp    2ab0e <png_setup_sub_row_only+0x6e>
   2aaf0:	movzbl (%rax),%r8d
   2aaf4:	movzbl (%rdi),%r9d
   2aaf8:	sub    %r9b,%r8b
   2aafb:	mov    %r8b,(%rcx)
   2aafe:	add    $0x1,%rsi
   2ab02:	add    $0x1,%rax
   2ab06:	add    $0x1,%rdi
   2ab0a:	add    $0x1,%rcx
   2ab0e:	cmp    %rdx,%rsi
   2ab11:	jb     2aaf0 <png_setup_sub_row_only+0x50>
   2ab13:	leaveq 
   2ab14:	retq   
   2ab15:	data16 nopw %cs:0x0(%rax,%rax,1)

000000000002ab20 <png_setup_up_row>:
   2ab20:	push   %rbp
   2ab21:	mov    %rsp,%rbp
   2ab24:	sub    $0x10,%rsp
   2ab28:	mov    %r15,-0x8(%rbp)
   2ab2c:	mov    0x230(%rdi),%rax
   2ab33:	movb   $0x2,(%rax)
   2ab36:	mov    0x228(%rdi),%rcx
   2ab3d:	add    $0x1,%rcx
   2ab41:	mov    0x220(%rdi),%r8
   2ab48:	add    $0x1,%r8
   2ab4c:	mov    0x230(%rdi),%rdi
   2ab53:	add    $0x1,%rdi
   2ab57:	xor    %r9d,%r9d
   2ab5a:	mov    $0x100,%r15d
   2ab60:	mov    %r9,%rax
   2ab63:	jmp    2ab9e <png_setup_up_row+0x7e>
   2ab65:	movzbl (%rcx),%r10d
   2ab69:	movzbl (%r8),%r11d
   2ab6d:	sub    %r11b,%r10b
   2ab70:	movzbl %r10b,%r11d
   2ab74:	mov    %r10b,(%rdi)
   2ab77:	cmp    $0x7f,%r10b
   2ab7b:	jbe    2ab83 <png_setup_up_row+0x63>
   2ab7d:	neg    %r11d
   2ab80:	add    %r15d,%r11d
   2ab83:	mov    %r11d,%r10d
   2ab86:	add    %r10,%rax
   2ab89:	cmp    %rdx,%rax
   2ab8c:	ja     2aba9 <png_setup_up_row+0x89>
   2ab8e:	add    $0x1,%rcx
   2ab92:	add    $0x1,%r8
   2ab96:	add    $0x1,%rdi
   2ab9a:	add    $0x1,%r9
   2ab9e:	cmp    %rsi,%r9
   2aba1:	jb     2ab65 <png_setup_up_row+0x45>
   2aba3:	mov    -0x8(%rbp),%r15
   2aba7:	leaveq 
   2aba8:	retq   
   2aba9:	mov    -0x8(%rbp),%r15
   2abad:	leaveq 
   2abae:	retq   
   2abaf:	nop

000000000002abb0 <png_setup_up_row_only>:
   2abb0:	push   %rbp
   2abb1:	mov    %rsp,%rbp
   2abb4:	mov    0x230(%rdi),%rax
   2abbb:	movb   $0x2,(%rax)
   2abbe:	mov    0x228(%rdi),%rax
   2abc5:	add    $0x1,%rax
   2abc9:	mov    0x220(%rdi),%rcx
   2abd0:	add    $0x1,%rcx
   2abd4:	mov    0x230(%rdi),%rdx
   2abdb:	add    $0x1,%rdx
   2abdf:	xor    %edi,%edi
   2abe1:	jmp    2ac01 <png_setup_up_row_only+0x51>
   2abe3:	movzbl (%rax),%r8d
   2abe7:	movzbl (%rcx),%r9d
   2abeb:	sub    %r9b,%r8b
   2abee:	mov    %r8b,(%rdx)
   2abf1:	add    $0x1,%rdi
   2abf5:	add    $0x1,%rax
   2abf9:	add    $0x1,%rcx
   2abfd:	add    $0x1,%rdx
   2ac01:	cmp    %rsi,%rdi
   2ac04:	jb     2abe3 <png_setup_up_row_only+0x33>
   2ac06:	leaveq 
   2ac07:	retq   
   2ac08:	nopl   0x0(%rax,%rax,1)

000000000002ac10 <png_setup_avg_row>:
   2ac10:	push   %rbp
   2ac11:	mov    %rsp,%rbp
   2ac14:	sub    $0x20,%rsp
   2ac18:	mov    %rdi,-0x18(%rbp)
   2ac1c:	mov    %rdx,-0x10(%rbp)
   2ac20:	mov    %rcx,-0x20(%rbp)
   2ac24:	mov    0x230(%rdi),%rax
   2ac2b:	movb   $0x3,(%rax)
   2ac2e:	mov    0x228(%rdi),%rcx
   2ac35:	add    $0x1,%rcx
   2ac39:	mov    0x220(%rdi),%rdx
   2ac40:	add    $0x1,%rdx
   2ac44:	mov    0x230(%rdi),%rdi
   2ac4b:	add    $0x1,%rdi
   2ac4f:	mov    $0x100,%r11d
   2ac55:	xor    %r8d,%r8d
   2ac58:	mov    %r8,%rax
   2ac5b:	jmp    2ac94 <png_setup_avg_row+0x84>
   2ac5d:	movzbl (%rcx),%r9d
   2ac61:	movzbl (%rdx),%r10d
   2ac65:	shr    %r10d
   2ac68:	sub    %r10b,%r9b
   2ac6b:	movzbl %r9b,%r10d
   2ac6f:	mov    %r9b,(%rdi)
   2ac72:	cmp    $0x7f,%r9b
   2ac76:	jbe    2ac7e <png_setup_avg_row+0x6e>
   2ac78:	neg    %r10d
   2ac7b:	add    %r11d,%r10d
   2ac7e:	mov    %r10d,%r9d
   2ac81:	add    %r9,%rax
   2ac84:	add    $0x1,%rcx
   2ac88:	add    $0x1,%rdx
   2ac8c:	add    $0x1,%rdi
   2ac90:	add    $0x1,%r8d
   2ac94:	cmp    %esi,%r8d
   2ac97:	jb     2ac5d <png_setup_avg_row+0x4d>
   2ac99:	mov    -0x18(%rbp),%rsi
   2ac9d:	mov    0x228(%rsi),%rsi
   2aca4:	add    $0x1,%rsi
   2aca8:	mov    %r14,-0x8(%rbp)
   2acac:	mov    %r15,-0x18(%rbp)
   2acb0:	mov    -0x20(%rbp),%r15
   2acb4:	mov    -0x10(%rbp),%r14
   2acb8:	jmp    2ad01 <png_setup_avg_row+0xf1>
   2acba:	movzbl (%rsi),%r10d
   2acbe:	movzbl (%rdx),%r9d
   2acc2:	add    %r10d,%r9d
   2acc5:	shr    %r9d
   2acc8:	movzbl (%rcx),%r10d
   2accc:	sub    %r9b,%r10b
   2accf:	movzbl %r10b,%r9d
   2acd3:	mov    %r10b,(%rdi)
   2acd6:	cmp    $0x7f,%r10b
   2acda:	jbe    2ace2 <png_setup_avg_row+0xd2>
   2acdc:	neg    %r9d
   2acdf:	add    %r11d,%r9d
   2ace2:	mov    %r9d,%r9d
   2ace5:	add    %r9,%rax
   2ace8:	cmp    %r15,%rax
   2aceb:	ja     2ad13 <png_setup_avg_row+0x103>
   2aced:	add    $0x1,%rcx
   2acf1:	add    $0x1,%rsi
   2acf5:	add    $0x1,%rdx
   2acf9:	add    $0x1,%rdi
   2acfd:	add    $0x1,%r8d
   2ad01:	mov    %r8d,%r9d
   2ad04:	cmp    %r14,%r9
   2ad07:	jb     2acba <png_setup_avg_row+0xaa>
   2ad09:	mov    -0x18(%rbp),%r15
   2ad0d:	mov    -0x8(%rbp),%r14
   2ad11:	leaveq 
   2ad12:	retq   
   2ad13:	mov    -0x18(%rbp),%r15
   2ad17:	mov    -0x8(%rbp),%r14
   2ad1b:	leaveq 
   2ad1c:	retq   
   2ad1d:	nopl   (%rax)

000000000002ad20 <png_setup_avg_row_only>:
   2ad20:	push   %rbp
   2ad21:	mov    %rsp,%rbp
   2ad24:	mov    0x230(%rdi),%rax
   2ad2b:	movb   $0x3,(%rax)
   2ad2e:	mov    0x228(%rdi),%rax
   2ad35:	add    $0x1,%rax
   2ad39:	mov    0x220(%rdi),%rcx
   2ad40:	add    $0x1,%rcx
   2ad44:	mov    0x230(%rdi),%r8
   2ad4b:	add    $0x1,%r8
   2ad4f:	xor    %r9d,%r9d
   2ad52:	jmp    2ad75 <png_setup_avg_row_only+0x55>
   2ad54:	movzbl (%rax),%r10d
   2ad58:	movzbl (%rcx),%r11d
   2ad5c:	shr    %r11d
   2ad5f:	sub    %r11b,%r10b
   2ad62:	mov    %r10b,(%r8)
   2ad65:	add    $0x1,%rax
   2ad69:	add    $0x1,%rcx
   2ad6d:	add    $0x1,%r8
   2ad71:	add    $0x1,%r9d
   2ad75:	cmp    %esi,%r9d
   2ad78:	jb     2ad54 <png_setup_avg_row_only+0x34>
   2ad7a:	mov    0x228(%rdi),%rsi
   2ad81:	add    $0x1,%rsi
   2ad85:	jmp    2adb1 <png_setup_avg_row_only+0x91>
   2ad87:	movzbl (%rsi),%r10d
   2ad8b:	movzbl (%rcx),%edi
   2ad8e:	add    %r10d,%edi
   2ad91:	shr    %edi
   2ad93:	movzbl (%rax),%r10d
   2ad97:	sub    %dil,%r10b
   2ad9a:	mov    %r10b,(%r8)
   2ad9d:	add    $0x1,%r9d
   2ada1:	add    $0x1,%rax
   2ada5:	add    $0x1,%rsi
   2ada9:	add    $0x1,%rcx
   2adad:	add    $0x1,%r8
   2adb1:	mov    %r9d,%edi
   2adb4:	cmp    %rdx,%rdi
   2adb7:	jb     2ad87 <png_setup_avg_row_only+0x67>
   2adb9:	leaveq 
   2adba:	retq   
   2adbb:	nopl   0x0(%rax,%rax,1)

000000000002adc0 <png_setup_paeth_row>:
   2adc0:	push   %rbp
   2adc1:	mov    %rsp,%rbp
   2adc4:	sub    $0x50,%rsp
   2adc8:	mov    %rdi,-0x40(%rbp)
   2adcc:	mov    %rdx,-0x38(%rbp)
   2add0:	mov    %rcx,-0x48(%rbp)
   2add4:	mov    0x230(%rdi),%rax
   2addb:	movb   $0x4,(%rax)
   2adde:	mov    %esi,%r10d
   2ade1:	mov    0x228(%rdi),%rcx
   2ade8:	add    $0x1,%rcx
   2adec:	mov    0x220(%rdi),%rdx
   2adf3:	add    $0x1,%rdx
   2adf7:	mov    0x230(%rdi),%rsi
   2adfe:	add    $0x1,%rsi
   2ae02:	mov    $0x100,%r11d
   2ae08:	xor    %r8d,%r8d
   2ae0b:	mov    %r8,%rax
   2ae0e:	jmp    2ae43 <png_setup_paeth_row+0x83>
   2ae10:	movzbl (%rcx),%edi
   2ae13:	movzbl (%rdx),%r9d
   2ae17:	sub    %r9b,%dil
   2ae1a:	movzbl %dil,%r9d
   2ae1e:	mov    %dil,(%rsi)
   2ae21:	cmp    $0x7f,%dil
   2ae25:	jbe    2ae2d <png_setup_paeth_row+0x6d>
   2ae27:	neg    %r9d
   2ae2a:	add    %r11d,%r9d
   2ae2d:	mov    %r9d,%edi
   2ae30:	add    %rdi,%rax
   2ae33:	add    $0x1,%rcx
   2ae37:	add    $0x1,%rdx
   2ae3b:	add    $0x1,%rsi
   2ae3f:	add    $0x1,%r8
   2ae43:	cmp    %r10,%r8
   2ae46:	jb     2ae10 <png_setup_paeth_row+0x50>
   2ae48:	mov    -0x40(%rbp),%r9
   2ae4c:	mov    0x220(%r9),%rdi
   2ae53:	add    $0x1,%rdi
   2ae57:	mov    0x228(%r9),%r9
   2ae5e:	add    $0x1,%r9
   2ae62:	mov    %rbx,-0x8(%rbp)
   2ae66:	mov    %r12,-0x10(%rbp)
   2ae6a:	mov    %r13,-0x18(%rbp)
   2ae6e:	mov    %r14,-0x20(%rbp)
   2ae72:	mov    %r15,-0x28(%rbp)
   2ae76:	mov    -0x48(%rbp),%r11
   2ae7a:	mov    -0x38(%rbp),%rbx
   2ae7e:	jmp    2aecf <png_setup_paeth_row+0x10f>
   2ae80:	cmp    %ebx,%edi
   2ae82:	jg     2ae87 <png_setup_paeth_row+0xc7>
   2ae84:	mov    %r14,%r10
   2ae87:	movzbl (%rcx),%edi
   2ae8a:	sub    %r10b,%dil
   2ae8d:	movzbl %dil,%ebx
   2ae91:	mov    %dil,(%rsi)
   2ae94:	cmp    $0x7f,%dil
   2ae98:	ja     2aeea <png_setup_paeth_row+0x12a>
   2ae9a:	mov    %rbx,%rdi
   2ae9d:	mov    %edi,%edi
   2ae9f:	add    %rdi,%rax
   2aea2:	cmp    %r11,%rax
   2aea5:	ja     2aef3 <png_setup_paeth_row+0x133>
   2aea7:	add    $0x1,%rcx
   2aeab:	add    $0x1,%rdx
   2aeaf:	mov    -0x40(%rbp),%rdi
   2aeb3:	add    $0x1,%rdi
   2aeb7:	mov    -0x48(%rbp),%rbx
   2aebb:	lea    0x1(%rbx),%r9
   2aebf:	add    $0x1,%rsi
   2aec3:	mov    -0x30(%rbp),%rbx
   2aec7:	lea    0x1(%rbx),%r8
   2aecb:	mov    -0x38(%rbp),%rbx
   2aecf:	cmp    %rbx,%r8
   2aed2:	jb     2af09 <png_setup_paeth_row+0x149>
   2aed4:	mov    -0x28(%rbp),%r15
   2aed8:	mov    -0x20(%rbp),%r14
   2aedc:	mov    -0x18(%rbp),%r13
   2aee0:	mov    -0x10(%rbp),%r12
   2aee4:	mov    -0x8(%rbp),%rbx
   2aee8:	leaveq 
   2aee9:	retq   
   2aeea:	mov    $0x100,%edi
   2aeef:	sub    %ebx,%edi
   2aef1:	jmp    2ae9d <png_setup_paeth_row+0xdd>
   2aef3:	mov    -0x28(%rbp),%r15
   2aef7:	mov    -0x20(%rbp),%r14
   2aefb:	mov    -0x18(%rbp),%r13
   2aeff:	mov    -0x10(%rbp),%r12
   2af03:	mov    -0x8(%rbp),%rbx
   2af07:	leaveq 
   2af08:	retq   
   2af09:	movzbl (%r9),%r15d
   2af0d:	movzbl (%rdx),%r14d
   2af11:	movzbl (%rdi),%r10d
   2af15:	mov    %r10,%r12
   2af18:	sub    %r14d,%r12d
   2af1b:	mov    %r14,%rbx
   2af1e:	sub    %r10d,%ebx
   2af21:	test   %ebx,%ebx
   2af23:	js     2af2a <png_setup_paeth_row+0x16a>
   2af25:	mov    %rbx,%r13
   2af28:	jmp    2af2d <png_setup_paeth_row+0x16d>
   2af2a:	mov    %r12,%r13
   2af2d:	mov    %r8,-0x30(%rbp)
   2af31:	mov    %r10,%r8
   2af34:	sub    %r15d,%r8d
   2af37:	mov    %r9,-0x48(%rbp)
   2af3b:	mov    %r15,%r9
   2af3e:	sub    %r10d,%r9d
   2af41:	test   %r9d,%r9d
   2af44:	js     2af4f <png_setup_paeth_row+0x18f>
   2af46:	mov    %rdi,-0x40(%rbp)
   2af4a:	mov    %r9,%rdi
   2af4d:	jmp    2af56 <png_setup_paeth_row+0x196>
   2af4f:	mov    %rdi,-0x40(%rbp)
   2af53:	mov    %r8,%rdi
   2af56:	add    %r9d,%ebx
   2af59:	test   %ebx,%ebx
   2af5b:	jns    2af61 <png_setup_paeth_row+0x1a1>
   2af5d:	lea    (%r8,%r12,1),%ebx
   2af61:	cmp    %r13d,%edi
   2af64:	jl     2ae80 <png_setup_paeth_row+0xc0>
   2af6a:	cmp    %ebx,%r13d
   2af6d:	jg     2ae80 <png_setup_paeth_row+0xc0>
   2af73:	mov    %r15,%r10
   2af76:	jmpq   2ae87 <png_setup_paeth_row+0xc7>
   2af7b:	nopl   0x0(%rax,%rax,1)

000000000002af80 <png_setup_paeth_row_only>:
   2af80:	push   %rbp
   2af81:	mov    %rsp,%rbp
   2af84:	sub    $0x40,%rsp
   2af88:	mov    %rdx,-0x38(%rbp)
   2af8c:	mov    0x230(%rdi),%rax
   2af93:	movb   $0x4,(%rax)
   2af96:	mov    %esi,%r10d
   2af99:	mov    0x228(%rdi),%rax
   2afa0:	add    $0x1,%rax
   2afa4:	mov    0x220(%rdi),%rcx
   2afab:	add    $0x1,%rcx
   2afaf:	mov    0x230(%rdi),%rsi
   2afb6:	add    $0x1,%rsi
   2afba:	xor    %r8d,%r8d
   2afbd:	jmp    2afdd <png_setup_paeth_row_only+0x5d>
   2afbf:	movzbl (%rax),%r9d
   2afc3:	movzbl (%rcx),%r11d
   2afc7:	sub    %r11b,%r9b
   2afca:	mov    %r9b,(%rsi)
   2afcd:	add    $0x1,%rax
   2afd1:	add    $0x1,%rcx
   2afd5:	add    $0x1,%rsi
   2afd9:	add    $0x1,%r8
   2afdd:	cmp    %r10,%r8
   2afe0:	jb     2afbf <png_setup_paeth_row_only+0x3f>
   2afe2:	mov    0x220(%rdi),%r9
   2afe9:	add    $0x1,%r9
   2afed:	mov    0x228(%rdi),%rdi
   2aff4:	add    $0x1,%rdi
   2aff8:	mov    %rbx,-0x8(%rbp)
   2affc:	mov    %r12,-0x10(%rbp)
   2b000:	mov    %r13,-0x18(%rbp)
   2b004:	mov    %r14,-0x20(%rbp)
   2b008:	mov    %r15,-0x28(%rbp)
   2b00c:	jmp    2b03c <png_setup_paeth_row_only+0xbc>
   2b00e:	cmp    %edx,%edi
   2b010:	jg     2b015 <png_setup_paeth_row_only+0x95>
   2b012:	mov    %r12,%rbx
   2b015:	movzbl (%rax),%edx
   2b018:	sub    %bl,%dl
   2b01a:	mov    %dl,(%rsi)
   2b01c:	add    $0x1,%r8
   2b020:	add    $0x1,%rax
   2b024:	add    $0x1,%rcx
   2b028:	add    $0x1,%r9
   2b02c:	mov    -0x30(%rbp),%rdx
   2b030:	lea    0x1(%rdx),%rdi
   2b034:	add    $0x1,%rsi
   2b038:	mov    -0x38(%rbp),%rdx
   2b03c:	cmp    %rdx,%r8
   2b03f:	jb     2b057 <png_setup_paeth_row_only+0xd7>
   2b041:	mov    -0x28(%rbp),%r15
   2b045:	mov    -0x20(%rbp),%r14
   2b049:	mov    -0x18(%rbp),%r13
   2b04d:	mov    -0x10(%rbp),%r12
   2b051:	mov    -0x8(%rbp),%rbx
   2b055:	leaveq 
   2b056:	retq   
   2b057:	movzbl (%rdi),%r15d
   2b05b:	movzbl (%rcx),%r12d
   2b05f:	movzbl (%r9),%ebx
   2b063:	mov    %rbx,%r11
   2b066:	sub    %r12d,%r11d
   2b069:	mov    %r12,%r14
   2b06c:	sub    %ebx,%r14d
   2b06f:	test   %r14d,%r14d
   2b072:	js     2b079 <png_setup_paeth_row_only+0xf9>
   2b074:	mov    %r14,%r10
   2b077:	jmp    2b07c <png_setup_paeth_row_only+0xfc>
   2b079:	mov    %r11,%r10
   2b07c:	mov    %rbx,%r13
   2b07f:	sub    %r15d,%r13d
   2b082:	mov    %r15,%rdx
   2b085:	sub    %ebx,%edx
   2b087:	test   %edx,%edx
   2b089:	js     2b094 <png_setup_paeth_row_only+0x114>
   2b08b:	mov    %rdi,-0x30(%rbp)
   2b08f:	mov    %rdx,%rdi
   2b092:	jmp    2b09b <png_setup_paeth_row_only+0x11b>
   2b094:	mov    %rdi,-0x30(%rbp)
   2b098:	mov    %r13,%rdi
   2b09b:	add    %r14d,%edx
   2b09e:	test   %edx,%edx
   2b0a0:	jns    2b0a7 <png_setup_paeth_row_only+0x127>
   2b0a2:	lea    0x0(%r13,%r11,1),%edx
   2b0a7:	cmp    %r10d,%edi
   2b0aa:	jl     2b00e <png_setup_paeth_row_only+0x8e>
   2b0b0:	cmp    %edx,%r10d
   2b0b3:	jg     2b00e <png_setup_paeth_row_only+0x8e>
   2b0b9:	mov    %r15,%rbx
   2b0bc:	jmpq   2b015 <png_setup_paeth_row_only+0x95>

Disassembly of section .fini:

000000000002b0c4 <_fini>:
   2b0c4:	endbr64 
   2b0c8:	sub    $0x8,%rsp
   2b0cc:	add    $0x8,%rsp
   2b0d0:	retq   
