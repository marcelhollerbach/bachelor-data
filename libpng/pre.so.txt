
libpng/pre.so:     file format elf64-x86-64


Disassembly of section .init:

0000000000005000 <_init>:
    5000:	endbr64 
    5004:	sub    $0x8,%rsp
    5008:	mov    0x2cfc9(%rip),%rax        # 31fd8 <__gmon_start__>
    500f:	test   %rax,%rax
    5012:	je     5016 <_init+0x16>
    5014:	callq  *%rax
    5016:	add    $0x8,%rsp
    501a:	retq   

Disassembly of section .plt:

0000000000005020 <.plt>:
    5020:	pushq  0x2cfe2(%rip)        # 32008 <_GLOBAL_OFFSET_TABLE_+0x8>
    5026:	jmpq   *0x2cfe4(%rip)        # 32010 <_GLOBAL_OFFSET_TABLE_+0x10>
    502c:	nopl   0x0(%rax)

0000000000005030 <png_get_y_offset_microns@plt>:
    5030:	jmpq   *0x2cfe2(%rip)        # 32018 <png_get_y_offset_microns@@PNG16_0+0x26708>
    5036:	pushq  $0x0
    503b:	jmpq   5020 <.plt>

0000000000005040 <png_image_free@plt>:
    5040:	jmpq   *0x2cfda(%rip)        # 32020 <png_image_free@@PNG16_0+0x2b7d0>
    5046:	pushq  $0x1
    504b:	jmpq   5020 <.plt>

0000000000005050 <png_set_benign_errors@plt>:
    5050:	jmpq   *0x2cfd2(%rip)        # 32028 <png_set_benign_errors@@PNG16_0+0x11138>
    5056:	pushq  $0x2
    505b:	jmpq   5020 <.plt>

0000000000005060 <png_chunk_error@plt>:
    5060:	jmpq   *0x2cfca(%rip)        # 32030 <png_chunk_error@@PNG16_0+0x275b0>
    5066:	pushq  $0x3
    506b:	jmpq   5020 <.plt>

0000000000005070 <free@plt>:
    5070:	jmpq   *0x2cfc2(%rip)        # 32038 <free@GLIBC_2.2.5>
    5076:	pushq  $0x4
    507b:	jmpq   5020 <.plt>

0000000000005080 <png_read_update_info@plt>:
    5080:	jmpq   *0x2cfba(%rip)        # 32040 <png_read_update_info@@PNG16_0+0x231f0>
    5086:	pushq  $0x5
    508b:	jmpq   5020 <.plt>

0000000000005090 <abort@plt>:
    5090:	jmpq   *0x2cfb2(%rip)        # 32048 <abort@GLIBC_2.2.5>
    5096:	pushq  $0x6
    509b:	jmpq   5020 <.plt>

00000000000050a0 <__errno_location@plt>:
    50a0:	jmpq   *0x2cfaa(%rip)        # 32050 <__errno_location@GLIBC_2.2.5>
    50a6:	pushq  $0x7
    50ab:	jmpq   5020 <.plt>

00000000000050b0 <remove@plt>:
    50b0:	jmpq   *0x2cfa2(%rip)        # 32058 <remove@GLIBC_2.2.5>
    50b6:	pushq  $0x8
    50bb:	jmpq   5020 <.plt>

00000000000050c0 <png_get_rowbytes@plt>:
    50c0:	jmpq   *0x2cf9a(%rip)        # 32060 <png_get_rowbytes@@PNG16_0+0x26ae0>
    50c6:	pushq  $0x9
    50cb:	jmpq   5020 <.plt>

00000000000050d0 <png_set_swap_alpha@plt>:
    50d0:	jmpq   *0x2cf92(%rip)        # 32068 <png_set_swap_alpha@@PNG16_0+0xeb38>
    50d6:	pushq  $0xa
    50db:	jmpq   5020 <.plt>

00000000000050e0 <png_set_sRGB@plt>:
    50e0:	jmpq   *0x2cf8a(%rip)        # 32070 <png_set_sRGB@@PNG16_0+0x10360>
    50e6:	pushq  $0xb
    50eb:	jmpq   5020 <.plt>

00000000000050f0 <png_create_write_struct@plt>:
    50f0:	jmpq   *0x2cf82(%rip)        # 32078 <png_create_write_struct@@PNG16_0+0xe1f8>
    50f6:	pushq  $0xc
    50fb:	jmpq   5020 <.plt>

0000000000005100 <png_write_chunk_data@plt>:
    5100:	jmpq   *0x2cf7a(%rip)        # 32080 <png_write_chunk_data@@PNG16_0+0xaa10>
    5106:	pushq  $0xd
    510b:	jmpq   5020 <.plt>

0000000000005110 <png_set_bKGD@plt>:
    5110:	jmpq   *0x2cf72(%rip)        # 32088 <png_set_bKGD@@PNG16_0+0x110e8>
    5116:	pushq  $0xe
    511b:	jmpq   5020 <.plt>

0000000000005120 <inflate@plt>:
    5120:	jmpq   *0x2cf6a(%rip)        # 32090 <inflate>
    5126:	pushq  $0xf
    512b:	jmpq   5020 <.plt>

0000000000005130 <ferror@plt>:
    5130:	jmpq   *0x2cf62(%rip)        # 32098 <ferror@GLIBC_2.2.5>
    5136:	pushq  $0x10
    513b:	jmpq   5020 <.plt>

0000000000005140 <png_write_sig@plt>:
    5140:	jmpq   *0x2cf5a(%rip)        # 320a0 <png_write_sig@@PNG16_0+0xab00>
    5146:	pushq  $0x11
    514b:	jmpq   5020 <.plt>

0000000000005150 <png_malloc_warn@plt>:
    5150:	jmpq   *0x2cf52(%rip)        # 320a8 <png_malloc_warn@@PNG16_0+0x25838>
    5156:	pushq  $0x12
    515b:	jmpq   5020 <.plt>

0000000000005160 <fread@plt>:
    5160:	jmpq   *0x2cf4a(%rip)        # 320b0 <fread@GLIBC_2.2.5>
    5166:	pushq  $0x13
    516b:	jmpq   5020 <.plt>

0000000000005170 <png_read_end@plt>:
    5170:	jmpq   *0x2cf42(%rip)        # 320b8 <png_read_end@@PNG16_0+0x229e8>
    5176:	pushq  $0x14
    517b:	jmpq   5020 <.plt>

0000000000005180 <inflateReset2@plt>:
    5180:	jmpq   *0x2cf3a(%rip)        # 320c0 <inflateReset2@ZLIB_1.2.3.4>
    5186:	pushq  $0x15
    518b:	jmpq   5020 <.plt>

0000000000005190 <png_set_hIST@plt>:
    5190:	jmpq   *0x2cf32(%rip)        # 320c8 <png_set_hIST@@PNG16_0+0x10b08>
    5196:	pushq  $0x16
    519b:	jmpq   5020 <.plt>

00000000000051a0 <atof@plt>:
    51a0:	jmpq   *0x2cf2a(%rip)        # 320d0 <atof@GLIBC_2.2.5>
    51a6:	pushq  $0x17
    51ab:	jmpq   5020 <.plt>

00000000000051b0 <png_set_pCAL@plt>:
    51b0:	jmpq   *0x2cf22(%rip)        # 320d8 <png_set_pCAL@@PNG16_0+0x108f8>
    51b6:	pushq  $0x18
    51bb:	jmpq   5020 <.plt>

00000000000051c0 <crc32@plt>:
    51c0:	jmpq   *0x2cf1a(%rip)        # 320e0 <crc32>
    51c6:	pushq  $0x19
    51cb:	jmpq   5020 <.plt>

00000000000051d0 <png_set_sBIT@plt>:
    51d0:	jmpq   *0x2cf12(%rip)        # 320e8 <png_set_sBIT@@PNG16_0+0x10418>
    51d6:	pushq  $0x1a
    51db:	jmpq   5020 <.plt>

00000000000051e0 <png_set_swap@plt>:
    51e0:	jmpq   *0x2cf0a(%rip)        # 320f0 <png_set_swap@@PNG16_0+0xea80>
    51e6:	pushq  $0x1b
    51eb:	jmpq   5020 <.plt>

00000000000051f0 <png_convert_from_struct_tm@plt>:
    51f0:	jmpq   *0x2cf02(%rip)        # 320f8 <png_convert_from_struct_tm@@PNG16_0+0xdb88>
    51f6:	pushq  $0x1c
    51fb:	jmpq   5020 <.plt>

0000000000005200 <png_set_filler@plt>:
    5200:	jmpq   *0x2cefa(%rip)        # 32100 <png_set_filler@@PNG16_0+0xeb90>
    5206:	pushq  $0x1d
    520b:	jmpq   5020 <.plt>

0000000000005210 <png_get_x_pixels_per_meter@plt>:
    5210:	jmpq   *0x2cef2(%rip)        # 32108 <png_get_x_pixels_per_meter@@PNG16_0+0x269f8>
    5216:	pushq  $0x1e
    521b:	jmpq   5020 <.plt>

0000000000005220 <inflateValidate@plt>:
    5220:	jmpq   *0x2ceea(%rip)        # 32110 <inflateValidate@ZLIB_1.2.9>
    5226:	pushq  $0x1f
    522b:	jmpq   5020 <.plt>

0000000000005230 <png_chunk_benign_error@plt>:
    5230:	jmpq   *0x2cee2(%rip)        # 32118 <png_chunk_benign_error@@PNG16_0+0x27548>
    5236:	pushq  $0x20
    523b:	jmpq   5020 <.plt>

0000000000005240 <fclose@plt>:
    5240:	jmpq   *0x2ceda(%rip)        # 32120 <fclose@GLIBC_2.2.5>
    5246:	pushq  $0x21
    524b:	jmpq   5020 <.plt>

0000000000005250 <png_set_cHRM_fixed@plt>:
    5250:	jmpq   *0x2ced2(%rip)        # 32128 <png_set_cHRM_fixed@@PNG16_0+0x10e58>
    5256:	pushq  $0x22
    525b:	jmpq   5020 <.plt>

0000000000005260 <strlen@plt>:
    5260:	jmpq   *0x2ceca(%rip)        # 32130 <strlen@GLIBC_2.2.5>
    5266:	pushq  $0x23
    526b:	jmpq   5020 <.plt>

0000000000005270 <png_set_shift@plt>:
    5270:	jmpq   *0x2cec2(%rip)        # 32138 <png_set_shift@@PNG16_0+0xea38>
    5276:	pushq  $0x24
    527b:	jmpq   5020 <.plt>

0000000000005280 <png_create_info_struct@plt>:
    5280:	jmpq   *0x2ceba(%rip)        # 32140 <png_create_info_struct@@PNG16_0+0x2c6b0>
    5286:	pushq  $0x25
    528b:	jmpq   5020 <.plt>

0000000000005290 <png_set_gAMA_fixed@plt>:
    5290:	jmpq   *0x2ceb2(%rip)        # 32148 <png_set_gAMA_fixed@@PNG16_0+0x10bd8>
    5296:	pushq  $0x26
    529b:	jmpq   5020 <.plt>

00000000000052a0 <png_set_sPLT@plt>:
    52a0:	jmpq   *0x2ceaa(%rip)        # 32150 <png_set_sPLT@@PNG16_0+0x10180>
    52a6:	pushq  $0x27
    52ab:	jmpq   5020 <.plt>

00000000000052b0 <png_read_image@plt>:
    52b0:	jmpq   *0x2cea2(%rip)        # 32158 <png_read_image@@PNG16_0+0x22c08>
    52b6:	pushq  $0x28
    52bb:	jmpq   5020 <.plt>

00000000000052c0 <png_set_gamma_fixed@plt>:
    52c0:	jmpq   *0x2ce9a(%rip)        # 32160 <png_set_gamma_fixed@@PNG16_0+0x1c630>
    52c6:	pushq  $0x29
    52cb:	jmpq   5020 <.plt>

00000000000052d0 <modf@plt>:
    52d0:	jmpq   *0x2ce92(%rip)        # 32168 <modf@GLIBC_2.2.5>
    52d6:	pushq  $0x2a
    52db:	jmpq   5020 <.plt>

00000000000052e0 <deflateReset@plt>:
    52e0:	jmpq   *0x2ce8a(%rip)        # 32170 <deflateReset>
    52e6:	pushq  $0x2b
    52eb:	jmpq   5020 <.plt>

00000000000052f0 <png_get_x_offset_microns@plt>:
    52f0:	jmpq   *0x2ce82(%rip)        # 32178 <png_get_x_offset_microns@@PNG16_0+0x268a8>
    52f6:	pushq  $0x2c
    52fb:	jmpq   5020 <.plt>

0000000000005300 <png_set_write_fn@plt>:
    5300:	jmpq   *0x2ce7a(%rip)        # 32180 <png_set_write_fn@@PNG16_0+0xe440>
    5306:	pushq  $0x2d
    530b:	jmpq   5020 <.plt>

0000000000005310 <png_handle_as_unknown@plt>:
    5310:	jmpq   *0x2ce72(%rip)        # 32188 <png_handle_as_unknown@@PNG16_0+0x2ba38>
    5316:	pushq  $0x2e
    531b:	jmpq   5020 <.plt>

0000000000005320 <png_set_background_fixed@plt>:
    5320:	jmpq   *0x2ce6a(%rip)        # 32190 <png_set_background_fixed@@PNG16_0+0x1d2d0>
    5326:	pushq  $0x2f
    532b:	jmpq   5020 <.plt>

0000000000005330 <deflate@plt>:
    5330:	jmpq   *0x2ce62(%rip)        # 32198 <deflate>
    5336:	pushq  $0x30
    533b:	jmpq   5020 <.plt>

0000000000005340 <png_write_info@plt>:
    5340:	jmpq   *0x2ce5a(%rip)        # 321a0 <png_write_info@@PNG16_0+0xe020>
    5346:	pushq  $0x31
    534b:	jmpq   5020 <.plt>

0000000000005350 <memset@plt>:
    5350:	jmpq   *0x2ce52(%rip)        # 321a8 <memset@GLIBC_2.2.5>
    5356:	pushq  $0x32
    535b:	jmpq   5020 <.plt>

0000000000005360 <pow@plt>:
    5360:	jmpq   *0x2ce4a(%rip)        # 321b0 <pow@GLIBC_2.2.5>
    5366:	pushq  $0x33
    536b:	jmpq   5020 <.plt>

0000000000005370 <png_start_read_image@plt>:
    5370:	jmpq   *0x2ce42(%rip)        # 321b8 <png_start_read_image@@PNG16_0+0x23398>
    5376:	pushq  $0x34
    537b:	jmpq   5020 <.plt>

0000000000005380 <png_write_row@plt>:
    5380:	jmpq   *0x2ce3a(%rip)        # 321c0 <png_write_row@@PNG16_0+0xdb60>
    5386:	pushq  $0x35
    538b:	jmpq   5020 <.plt>

0000000000005390 <png_warning@plt>:
    5390:	jmpq   *0x2ce32(%rip)        # 321c8 <png_warning@@PNG16_0+0x27708>
    5396:	pushq  $0x36
    539b:	jmpq   5020 <.plt>

00000000000053a0 <png_get_y_pixels_per_meter@plt>:
    53a0:	jmpq   *0x2ce2a(%rip)        # 321d0 <png_get_y_pixels_per_meter@@PNG16_0+0x26a80>
    53a6:	pushq  $0x37
    53ab:	jmpq   5020 <.plt>

00000000000053b0 <deflateInit2_@plt>:
    53b0:	jmpq   *0x2ce22(%rip)        # 321d8 <deflateInit2_>
    53b6:	pushq  $0x38
    53bb:	jmpq   5020 <.plt>

00000000000053c0 <png_write_end@plt>:
    53c0:	jmpq   *0x2ce1a(%rip)        # 321e0 <png_write_end@@PNG16_0+0xd700>
    53c6:	pushq  $0x39
    53cb:	jmpq   5020 <.plt>

00000000000053d0 <memcmp@plt>:
    53d0:	jmpq   *0x2ce12(%rip)        # 321e8 <memcmp@GLIBC_2.2.5>
    53d6:	pushq  $0x3a
    53db:	jmpq   5020 <.plt>

00000000000053e0 <png_set_filter@plt>:
    53e0:	jmpq   *0x2ce0a(%rip)        # 321f0 <png_set_filter@@PNG16_0+0xd440>
    53e6:	pushq  $0x3b
    53eb:	jmpq   5020 <.plt>

00000000000053f0 <png_set_interlace_handling@plt>:
    53f0:	jmpq   *0x2ce02(%rip)        # 321f8 <png_set_interlace_handling@@PNG16_0+0xeac8>
    53f6:	pushq  $0x3c
    53fb:	jmpq   5020 <.plt>

0000000000005400 <png_write_chunk@plt>:
    5400:	jmpq   *0x2cdfa(%rip)        # 32200 <png_write_chunk@@PNG16_0+0xabf0>
    5406:	pushq  $0x3d
    540b:	jmpq   5020 <.plt>

0000000000005410 <frexp@plt>:
    5410:	jmpq   *0x2cdf2(%rip)        # 32208 <frexp@GLIBC_2.2.5>
    5416:	pushq  $0x3e
    541b:	jmpq   5020 <.plt>

0000000000005420 <_setjmp@plt>:
    5420:	jmpq   *0x2cdea(%rip)        # 32210 <_setjmp@GLIBC_2.2.5>
    5426:	pushq  $0x3f
    542b:	jmpq   5020 <.plt>

0000000000005430 <png_set_eXIf_1@plt>:
    5430:	jmpq   *0x2cde2(%rip)        # 32218 <png_set_eXIf_1@@PNG16_0+0x10df8>
    5436:	pushq  $0x40
    543b:	jmpq   5020 <.plt>

0000000000005440 <png_set_expand_gray_1_2_4_to_8@plt>:
    5440:	jmpq   *0x2cdda(%rip)        # 32220 <png_set_expand_gray_1_2_4_to_8@@PNG16_0+0x1d9a0>
    5446:	pushq  $0x41
    544b:	jmpq   5020 <.plt>

0000000000005450 <png_write_info_before_PLTE@plt>:
    5450:	jmpq   *0x2cdd2(%rip)        # 32228 <png_write_info_before_PLTE@@PNG16_0+0xe2c8>
    5456:	pushq  $0x42
    545b:	jmpq   5020 <.plt>

0000000000005460 <png_set_IHDR@plt>:
    5460:	jmpq   *0x2cdca(%rip)        # 32230 <png_set_IHDR@@PNG16_0+0x10b90>
    5466:	pushq  $0x43
    546b:	jmpq   5020 <.plt>

0000000000005470 <png_error@plt>:
    5470:	jmpq   *0x2cdc2(%rip)        # 32238 <png_error@@PNG16_0+0x277e8>
    5476:	pushq  $0x44
    547b:	jmpq   5020 <.plt>

0000000000005480 <png_write_chunk_end@plt>:
    5480:	jmpq   *0x2cdba(%rip)        # 32240 <png_write_chunk_end@@PNG16_0+0xab60>
    5486:	pushq  $0x45
    548b:	jmpq   5020 <.plt>

0000000000005490 <fprintf@plt>:
    5490:	jmpq   *0x2cdb2(%rip)        # 32248 <fprintf@GLIBC_2.2.5>
    5496:	pushq  $0x46
    549b:	jmpq   5020 <.plt>

00000000000054a0 <png_create_read_struct_2@plt>:
    54a0:	jmpq   *0x2cdaa(%rip)        # 32250 <png_create_read_struct_2@@PNG16_0+0x238e0>
    54a6:	pushq  $0x47
    54ab:	jmpq   5020 <.plt>

00000000000054b0 <png_destroy_read_struct@plt>:
    54b0:	jmpq   *0x2cda2(%rip)        # 32258 <png_destroy_read_struct@@PNG16_0+0x226d8>
    54b6:	pushq  $0x48
    54bb:	jmpq   5020 <.plt>

00000000000054c0 <memcpy@plt>:
    54c0:	jmpq   *0x2cd9a(%rip)        # 32260 <memcpy@GLIBC_2.14>
    54c6:	pushq  $0x49
    54cb:	jmpq   5020 <.plt>

00000000000054d0 <png_set_mem_fn@plt>:
    54d0:	jmpq   *0x2cd92(%rip)        # 32268 <png_set_mem_fn@@PNG16_0+0x25ac8>
    54d6:	pushq  $0x4a
    54db:	jmpq   5020 <.plt>

00000000000054e0 <png_set_tIME@plt>:
    54e0:	jmpq   *0x2cd8a(%rip)        # 32270 <png_set_tIME@@PNG16_0+0x10050>
    54e6:	pushq  $0x4b
    54eb:	jmpq   5020 <.plt>

00000000000054f0 <png_set_tRNS@plt>:
    54f0:	jmpq   *0x2cd82(%rip)        # 32278 <png_set_tRNS@@PNG16_0+0xffd8>
    54f6:	pushq  $0x4c
    54fb:	jmpq   5020 <.plt>

0000000000005500 <png_save_uint_32@plt>:
    5500:	jmpq   *0x2cd7a(%rip)        # 32280 <png_save_uint_32@@PNG16_0+0xab50>
    5506:	pushq  $0x4d
    550b:	jmpq   5020 <.plt>

0000000000005510 <inflateEnd@plt>:
    5510:	jmpq   *0x2cd72(%rip)        # 32288 <inflateEnd>
    5516:	pushq  $0x4e
    551b:	jmpq   5020 <.plt>

0000000000005520 <png_save_int_32@plt>:
    5520:	jmpq   *0x2cd6a(%rip)        # 32290 <png_save_int_32@@PNG16_0+0x2ba50>
    5526:	pushq  $0x4f
    552b:	jmpq   5020 <.plt>

0000000000005530 <png_set_PLTE@plt>:
    5530:	jmpq   *0x2cd62(%rip)        # 32298 <png_set_PLTE@@PNG16_0+0x10718>
    5536:	pushq  $0x50
    553b:	jmpq   5020 <.plt>

0000000000005540 <png_get_channels@plt>:
    5540:	jmpq   *0x2cd5a(%rip)        # 322a0 <png_get_channels@@PNG16_0+0x26ce0>
    5546:	pushq  $0x51
    554b:	jmpq   5020 <.plt>

0000000000005550 <adler32@plt>:
    5550:	jmpq   *0x2cd52(%rip)        # 322a8 <adler32>
    5556:	pushq  $0x52
    555b:	jmpq   5020 <.plt>

0000000000005560 <png_set_read_fn@plt>:
    5560:	jmpq   *0x2cd4a(%rip)        # 322b0 <png_set_read_fn@@PNG16_0+0x1db70>
    5566:	pushq  $0x53
    556b:	jmpq   5020 <.plt>

0000000000005570 <png_write_image@plt>:
    5570:	jmpq   *0x2cd42(%rip)        # 322b8 <png_write_image@@PNG16_0+0xd878>
    5576:	pushq  $0x54
    557b:	jmpq   5020 <.plt>

0000000000005580 <png_set_packing@plt>:
    5580:	jmpq   *0x2cd3a(%rip)        # 322c0 <png_set_packing@@PNG16_0+0xec20>
    5586:	pushq  $0x55
    558b:	jmpq   5020 <.plt>

0000000000005590 <png_benign_error@plt>:
    5590:	jmpq   *0x2cd32(%rip)        # 322c8 <png_benign_error@@PNG16_0+0x27758>
    5596:	pushq  $0x56
    559b:	jmpq   5020 <.plt>

00000000000055a0 <png_destroy_info_struct@plt>:
    55a0:	jmpq   *0x2cd2a(%rip)        # 322d0 <png_destroy_info_struct@@PNG16_0+0x2c490>
    55a6:	pushq  $0x57
    55ab:	jmpq   5020 <.plt>

00000000000055b0 <png_set_rgb_to_gray_fixed@plt>:
    55b0:	jmpq   *0x2cd22(%rip)        # 322d8 <png_set_rgb_to_gray_fixed@@PNG16_0+0x1d898>
    55b6:	pushq  $0x58
    55bb:	jmpq   5020 <.plt>

00000000000055c0 <malloc@plt>:
    55c0:	jmpq   *0x2cd1a(%rip)        # 322e0 <malloc@GLIBC_2.2.5>
    55c6:	pushq  $0x59
    55cb:	jmpq   5020 <.plt>

00000000000055d0 <fflush@plt>:
    55d0:	jmpq   *0x2cd12(%rip)        # 322e8 <fflush@GLIBC_2.2.5>
    55d6:	pushq  $0x5a
    55db:	jmpq   5020 <.plt>

00000000000055e0 <png_set_oFFs@plt>:
    55e0:	jmpq   *0x2cd0a(%rip)        # 322f0 <png_set_oFFs@@PNG16_0+0x10b50>
    55e6:	pushq  $0x5b
    55eb:	jmpq   5020 <.plt>

00000000000055f0 <png_get_header_ver@plt>:
    55f0:	jmpq   *0x2cd02(%rip)        # 322f8 <png_get_header_ver@@PNG16_0+0x2bae8>
    55f6:	pushq  $0x5c
    55fb:	jmpq   5020 <.plt>

0000000000005600 <png_read_row@plt>:
    5600:	jmpq   *0x2ccfa(%rip)        # 32300 <png_read_row@@PNG16_0+0x23300>
    5606:	pushq  $0x5d
    560b:	jmpq   5020 <.plt>

0000000000005610 <png_set_pHYs@plt>:
    5610:	jmpq   *0x2ccf2(%rip)        # 32308 <png_set_pHYs@@PNG16_0+0x107c8>
    5616:	pushq  $0x5e
    561b:	jmpq   5020 <.plt>

0000000000005620 <png_set_invert_alpha@plt>:
    5620:	jmpq   *0x2ccea(%rip)        # 32310 <png_set_invert_alpha@@PNG16_0+0xedc0>
    5626:	pushq  $0x5f
    562b:	jmpq   5020 <.plt>

0000000000005630 <png_set_add_alpha@plt>:
    5630:	jmpq   *0x2cce2(%rip)        # 32318 <png_set_add_alpha@@PNG16_0+0xecf8>
    5636:	pushq  $0x60
    563b:	jmpq   5020 <.plt>

0000000000005640 <png_set_alpha_mode_fixed@plt>:
    5640:	jmpq   *0x2ccda(%rip)        # 32320 <png_set_alpha_mode_fixed@@PNG16_0+0x1d720>
    5646:	pushq  $0x61
    564b:	jmpq   5020 <.plt>

0000000000005650 <png_set_compression_level@plt>:
    5650:	jmpq   *0x2ccd2(%rip)        # 32328 <png_set_compression_level@@PNG16_0+0xd2f8>
    5656:	pushq  $0x62
    565b:	jmpq   5020 <.plt>

0000000000005660 <png_set_sCAL_s@plt>:
    5660:	jmpq   *0x2ccca(%rip)        # 32330 <png_set_sCAL_s@@PNG16_0+0xfd50>
    5666:	pushq  $0x63
    566b:	jmpq   5020 <.plt>

0000000000005670 <deflateEnd@plt>:
    5670:	jmpq   *0x2ccc2(%rip)        # 32338 <deflateEnd>
    5676:	pushq  $0x64
    567b:	jmpq   5020 <.plt>

0000000000005680 <png_set_error_fn@plt>:
    5680:	jmpq   *0x2ccba(%rip)        # 32340 <png_set_error_fn@@PNG16_0+0x27940>
    5686:	pushq  $0x65
    568b:	jmpq   5020 <.plt>

0000000000005690 <png_set_keep_unknown_chunks@plt>:
    5690:	jmpq   *0x2ccb2(%rip)        # 32348 <png_set_keep_unknown_chunks@@PNG16_0+0xfb88>
    5696:	pushq  $0x66
    569b:	jmpq   5020 <.plt>

00000000000056a0 <png_chunk_warning@plt>:
    56a0:	jmpq   *0x2ccaa(%rip)        # 32350 <png_chunk_warning@@PNG16_0+0x27830>
    56a6:	pushq  $0x67
    56ab:	jmpq   5020 <.plt>

00000000000056b0 <png_set_expand@plt>:
    56b0:	jmpq   *0x2cca2(%rip)        # 32358 <png_set_expand@@PNG16_0+0x1db18>
    56b6:	pushq  $0x68
    56bb:	jmpq   5020 <.plt>

00000000000056c0 <png_create_write_struct_2@plt>:
    56c0:	jmpq   *0x2cc9a(%rip)        # 32360 <png_create_write_struct_2@@PNG16_0+0xe4c0>
    56c6:	pushq  $0x69
    56cb:	jmpq   5020 <.plt>

00000000000056d0 <png_set_strip_16@plt>:
    56d0:	jmpq   *0x2cc92(%rip)        # 32368 <png_set_strip_16@@PNG16_0+0x1d388>
    56d6:	pushq  $0x6a
    56db:	jmpq   5020 <.plt>

00000000000056e0 <png_create_read_struct@plt>:
    56e0:	jmpq   *0x2cc8a(%rip)        # 32370 <png_create_read_struct@@PNG16_0+0x23a20>
    56e6:	pushq  $0x6b
    56eb:	jmpq   5020 <.plt>

00000000000056f0 <png_destroy_write_struct@plt>:
    56f0:	jmpq   *0x2cc82(%rip)        # 32378 <png_destroy_write_struct@@PNG16_0+0xd628>
    56f6:	pushq  $0x6c
    56fb:	jmpq   5020 <.plt>

0000000000005700 <png_free_default@plt>:
    5700:	jmpq   *0x2cc7a(%rip)        # 32380 <png_free_default@@PNG16_0+0x25a60>
    5706:	pushq  $0x6d
    570b:	jmpq   5020 <.plt>

0000000000005710 <png_get_pixels_per_meter@plt>:
    5710:	jmpq   *0x2cc72(%rip)        # 32388 <png_get_pixels_per_meter@@PNG16_0+0x26cc8>
    5716:	pushq  $0x6e
    571b:	jmpq   5020 <.plt>

0000000000005720 <png_free_data@plt>:
    5720:	jmpq   *0x2cc6a(%rip)        # 32390 <png_free_data@@PNG16_0+0x2c490>
    5726:	pushq  $0x6f
    572b:	jmpq   5020 <.plt>

0000000000005730 <png_get_uint_31@plt>:
    5730:	jmpq   *0x2cc62(%rip)        # 32398 <png_get_uint_31@@PNG16_0+0x17378>
    5736:	pushq  $0x70
    573b:	jmpq   5020 <.plt>

0000000000005740 <png_set_strip_alpha@plt>:
    5740:	jmpq   *0x2cc5a(%rip)        # 323a0 <png_set_strip_alpha@@PNG16_0+0x1d580>
    5746:	pushq  $0x71
    574b:	jmpq   5020 <.plt>

0000000000005750 <png_set_unknown_chunks@plt>:
    5750:	jmpq   *0x2cc52(%rip)        # 323a8 <png_set_unknown_chunks@@PNG16_0+0xf928>
    5756:	pushq  $0x72
    575b:	jmpq   5020 <.plt>

0000000000005760 <fopen@plt>:
    5760:	jmpq   *0x2cc4a(%rip)        # 323b0 <fopen@GLIBC_2.2.5>
    5766:	pushq  $0x73
    576b:	jmpq   5020 <.plt>

0000000000005770 <inflateInit2_@plt>:
    5770:	jmpq   *0x2cc42(%rip)        # 323b8 <inflateInit2_>
    5776:	pushq  $0x74
    577b:	jmpq   5020 <.plt>

0000000000005780 <png_calloc@plt>:
    5780:	jmpq   *0x2cc3a(%rip)        # 323c0 <png_calloc@@PNG16_0+0x25b90>
    5786:	pushq  $0x75
    578b:	jmpq   5020 <.plt>

0000000000005790 <png_free@plt>:
    5790:	jmpq   *0x2cc32(%rip)        # 323c8 <png_free@@PNG16_0+0x25b18>
    5796:	pushq  $0x76
    579b:	jmpq   5020 <.plt>

00000000000057a0 <png_save_uint_16@plt>:
    57a0:	jmpq   *0x2cc2a(%rip)        # 323d0 <png_save_uint_16@@PNG16_0+0xac70>
    57a6:	pushq  $0x77
    57ab:	jmpq   5020 <.plt>

00000000000057b0 <png_read_info@plt>:
    57b0:	jmpq   *0x2cc22(%rip)        # 323d8 <png_read_info@@PNG16_0+0x23a08>
    57b6:	pushq  $0x78
    57bb:	jmpq   5020 <.plt>

00000000000057c0 <gmtime@plt>:
    57c0:	jmpq   *0x2cc1a(%rip)        # 323e0 <gmtime@GLIBC_2.2.5>
    57c6:	pushq  $0x79
    57cb:	jmpq   5020 <.plt>

00000000000057d0 <png_sig_cmp@plt>:
    57d0:	jmpq   *0x2cc12(%rip)        # 323e8 <png_sig_cmp@@PNG16_0+0x2c9d8>
    57d6:	pushq  $0x7a
    57db:	jmpq   5020 <.plt>

00000000000057e0 <floor@plt>:
    57e0:	jmpq   *0x2cc0a(%rip)        # 323f0 <floor@GLIBC_2.2.5>
    57e6:	pushq  $0x7b
    57eb:	jmpq   5020 <.plt>

00000000000057f0 <inflateReset@plt>:
    57f0:	jmpq   *0x2cc02(%rip)        # 323f8 <inflateReset>
    57f6:	pushq  $0x7c
    57fb:	jmpq   5020 <.plt>

0000000000005800 <png_malloc@plt>:
    5800:	jmpq   *0x2cbfa(%rip)        # 32400 <png_malloc@@PNG16_0+0x25c10>
    5806:	pushq  $0x7d
    580b:	jmpq   5020 <.plt>

0000000000005810 <png_set_gray_to_rgb@plt>:
    5810:	jmpq   *0x2cbf2(%rip)        # 32408 <png_set_gray_to_rgb@@PNG16_0+0x1da88>
    5816:	pushq  $0x7e
    581b:	jmpq   5020 <.plt>

0000000000005820 <png_set_packswap@plt>:
    5820:	jmpq   *0x2cbea(%rip)        # 32410 <png_set_packswap@@PNG16_0+0xed40>
    5826:	pushq  $0x7f
    582b:	jmpq   5020 <.plt>

0000000000005830 <png_set_expand_16@plt>:
    5830:	jmpq   *0x2cbe2(%rip)        # 32418 <png_set_expand_16@@PNG16_0+0x1dad8>
    5836:	pushq  $0x80
    583b:	jmpq   5020 <.plt>

0000000000005840 <fwrite@plt>:
    5840:	jmpq   *0x2cbda(%rip)        # 32420 <fwrite@GLIBC_2.2.5>
    5846:	pushq  $0x81
    584b:	jmpq   5020 <.plt>

0000000000005850 <png_convert_to_rfc1123_buffer@plt>:
    5850:	jmpq   *0x2cbd2(%rip)        # 32428 <png_convert_to_rfc1123_buffer@@PNG16_0+0x2c888>
    5856:	pushq  $0x82
    585b:	jmpq   5020 <.plt>

0000000000005860 <png_set_bgr@plt>:
    5860:	jmpq   *0x2cbca(%rip)        # 32430 <png_set_bgr@@PNG16_0+0xef20>
    5866:	pushq  $0x83
    586b:	jmpq   5020 <.plt>

0000000000005870 <png_longjmp@plt>:
    5870:	jmpq   *0x2cbc2(%rip)        # 32438 <png_longjmp@@PNG16_0+0x27a68>
    5876:	pushq  $0x84
    587b:	jmpq   5020 <.plt>

0000000000005880 <png_image_write_to_stdio@plt>:
    5880:	jmpq   *0x2cbba(%rip)        # 32440 <png_image_write_to_stdio@@PNG16_0+0xce30>
    5886:	pushq  $0x85
    588b:	jmpq   5020 <.plt>

0000000000005890 <strerror@plt>:
    5890:	jmpq   *0x2cbb2(%rip)        # 32448 <strerror@GLIBC_2.2.5>
    5896:	pushq  $0x86
    589b:	jmpq   5020 <.plt>

00000000000058a0 <png_set_cHRM_XYZ_fixed@plt>:
    58a0:	jmpq   *0x2cbaa(%rip)        # 32450 <png_set_cHRM_XYZ_fixed@@PNG16_0+0x110f0>
    58a6:	pushq  $0x87
    58ab:	jmpq   5020 <.plt>

00000000000058b0 <png_set_tRNS_to_alpha@plt>:
    58b0:	jmpq   *0x2cba2(%rip)        # 32458 <png_set_tRNS_to_alpha@@PNG16_0+0x1db58>
    58b6:	pushq  $0x88
    58bb:	jmpq   5020 <.plt>

00000000000058c0 <png_write_flush@plt>:
    58c0:	jmpq   *0x2cb9a(%rip)        # 32460 <png_write_flush@@PNG16_0+0xde60>
    58c6:	pushq  $0x89
    58cb:	jmpq   5020 <.plt>

00000000000058d0 <png_set_scale_16@plt>:
    58d0:	jmpq   *0x2cb92(%rip)        # 32468 <png_set_scale_16@@PNG16_0+0x1d4c8>
    58d6:	pushq  $0x8a
    58db:	jmpq   5020 <.plt>

00000000000058e0 <png_set_invert_mono@plt>:
    58e0:	jmpq   *0x2cb8a(%rip)        # 32470 <png_set_invert_mono@@PNG16_0+0xed00>
    58e6:	pushq  $0x8b
    58eb:	jmpq   5020 <.plt>

Disassembly of section .plt.got:

00000000000058f0 <longjmp@plt>:
    58f0:	jmpq   *0x2c6ea(%rip)        # 31fe0 <longjmp@GLIBC_2.2.5>
    58f6:	xchg   %ax,%ax

Disassembly of section .text:

0000000000005900 <deregister_tm_clones>:
    5900:	lea    0x2cb79(%rip),%rdi        # 32480 <__TMC_END__>
    5907:	lea    0x2cb72(%rip),%rax        # 32480 <__TMC_END__>
    590e:	cmp    %rdi,%rax
    5911:	je     5928 <deregister_tm_clones+0x28>
    5913:	mov    0x2c6b6(%rip),%rax        # 31fd0 <_ITM_deregisterTMCloneTable>
    591a:	test   %rax,%rax
    591d:	je     5928 <deregister_tm_clones+0x28>
    591f:	jmpq   *%rax
    5921:	nopl   0x0(%rax)
    5928:	retq   
    5929:	nopl   0x0(%rax)

0000000000005930 <register_tm_clones>:
    5930:	lea    0x2cb49(%rip),%rdi        # 32480 <__TMC_END__>
    5937:	lea    0x2cb42(%rip),%rsi        # 32480 <__TMC_END__>
    593e:	sub    %rdi,%rsi
    5941:	sar    $0x3,%rsi
    5945:	mov    %rsi,%rax
    5948:	shr    $0x3f,%rax
    594c:	add    %rax,%rsi
    594f:	sar    %rsi
    5952:	je     5968 <register_tm_clones+0x38>
    5954:	mov    0x2c68d(%rip),%rax        # 31fe8 <_ITM_registerTMCloneTable>
    595b:	test   %rax,%rax
    595e:	je     5968 <register_tm_clones+0x38>
    5960:	jmpq   *%rax
    5962:	nopw   0x0(%rax,%rax,1)
    5968:	retq   
    5969:	nopl   0x0(%rax)

0000000000005970 <__do_global_dtors_aux>:
    5970:	endbr64 
    5974:	cmpb   $0x0,0x2cb05(%rip)        # 32480 <__TMC_END__>
    597b:	jne    59b0 <__do_global_dtors_aux+0x40>
    597d:	push   %rbp
    597e:	cmpq   $0x0,0x2c66a(%rip)        # 31ff0 <__cxa_finalize@GLIBC_2.2.5>
    5986:	mov    %rsp,%rbp
    5989:	je     5998 <__do_global_dtors_aux+0x28>
    598b:	mov    0x2cae6(%rip),%rdi        # 32478 <__dso_handle>
    5992:	callq  *0x2c658(%rip)        # 31ff0 <__cxa_finalize@GLIBC_2.2.5>
    5998:	callq  5900 <deregister_tm_clones>
    599d:	movb   $0x1,0x2cadc(%rip)        # 32480 <__TMC_END__>
    59a4:	pop    %rbp
    59a5:	retq   
    59a6:	nopw   %cs:0x0(%rax,%rax,1)
    59b0:	retq   
    59b1:	data16 nopw %cs:0x0(%rax,%rax,1)
    59bc:	nopl   0x0(%rax)

00000000000059c0 <frame_dummy>:
    59c0:	endbr64 
    59c4:	jmpq   5930 <register_tm_clones>
    59c9:	nopl   0x0(%rax)

00000000000059d0 <png_access_version_number>:
    59d0:	push   %rbp
    59d1:	mov    %rsp,%rbp
    59d4:	mov    $0x298a,%eax
    59d9:	leaveq 
    59da:	retq   
    59db:	nopl   0x0(%rax,%rax,1)

00000000000059e0 <png_set_sig_bytes>:
    59e0:	push   %rbp
    59e1:	mov    %rsp,%rbp
    59e4:	test   %rdi,%rdi
    59e7:	jne    59eb <png_set_sig_bytes+0xb>
    59e9:	leaveq 
    59ea:	retq   
    59eb:	test   %esi,%esi
    59ed:	jns    59f1 <png_set_sig_bytes+0x11>
    59ef:	xor    %esi,%esi
    59f1:	cmp    $0x8,%esi
    59f4:	ja     59ff <png_set_sig_bytes+0x1f>
    59f6:	mov    %sil,0x26d(%rdi)
    59fd:	leaveq 
    59fe:	retq   
    59ff:	lea    0x27092(%rip),%rsi        # 2ca98 <png_sRGB_checks+0xe0>
    5a06:	callq  5470 <png_error@plt>
    5a0b:	nopl   0x0(%rax,%rax,1)

0000000000005a10 <png_sig_cmp>:
    5a10:	push   %rbp
    5a11:	mov    %rsp,%rbp
    5a14:	sub    $0x10,%rsp
    5a18:	movabs $0xa1a0a0d474e5089,%rax
    5a22:	mov    %rax,-0x8(%rbp)
    5a26:	mov    $0xffffffffffffffff,%rax
    5a2d:	mov    $0x8,%ecx
    5a32:	cmp    $0x8,%rdx
    5a36:	jbe    5a43 <png_sig_cmp+0x33>
    5a38:	mov    %rcx,%rdx
    5a3b:	cmp    $0x7,%rsi
    5a3f:	jbe    5a4a <png_sig_cmp+0x3a>
    5a41:	leaveq 
    5a42:	retq   
    5a43:	test   %rdx,%rdx
    5a46:	jne    5a3b <png_sig_cmp+0x2b>
    5a48:	leaveq 
    5a49:	retq   
    5a4a:	lea    (%rsi,%rdx,1),%rax
    5a4e:	cmp    $0x8,%rax
    5a52:	jbe    5a5a <png_sig_cmp+0x4a>
    5a54:	sub    %rsi,%rcx
    5a57:	mov    %rcx,%rdx
    5a5a:	add    %rsi,%rdi
    5a5d:	lea    -0x8(%rbp,%rsi,1),%rsi
    5a62:	callq  53d0 <memcmp@plt>
    5a67:	leaveq 
    5a68:	retq   
    5a69:	nopl   0x0(%rax)

0000000000005a70 <png_reset_zstream>:
    5a70:	push   %rbp
    5a71:	mov    %rsp,%rbp
    5a74:	test   %rdi,%rdi
    5a77:	jne    5a82 <png_reset_zstream+0x12>
    5a79:	mov    $0xfffffffffffffffe,%rax
    5a80:	leaveq 
    5a81:	retq   
    5a82:	add    $0x140,%rdi
    5a89:	callq  57f0 <inflateReset@plt>
    5a8e:	leaveq 
    5a8f:	retq   

0000000000005a90 <png_create_info_struct>:
    5a90:	push   %rbp
    5a91:	mov    %rsp,%rbp
    5a94:	sub    $0x10,%rsp
    5a98:	xor    %eax,%eax
    5a9a:	test   %rdi,%rdi
    5a9d:	jne    5aa1 <png_create_info_struct+0x11>
    5a9f:	leaveq 
    5aa0:	retq   
    5aa1:	mov    $0x168,%esi
    5aa6:	callq  c940 <png_malloc_base>
    5aab:	test   %rax,%rax
    5aae:	jne    5ab4 <png_create_info_struct+0x24>
    5ab0:	xor    %eax,%eax
    5ab2:	leaveq 
    5ab3:	retq   
    5ab4:	mov    %rax,%rdi
    5ab7:	mov    %rax,-0x8(%rbp)
    5abb:	mov    $0x168,%edx
    5ac0:	xor    %esi,%esi
    5ac2:	callq  5350 <memset@plt>
    5ac7:	mov    -0x8(%rbp),%rax
    5acb:	leaveq 
    5acc:	retq   
    5acd:	nopl   (%rax)

0000000000005ad0 <png_info_init_3>:
    5ad0:	push   %rbp
    5ad1:	mov    %rsp,%rbp
    5ad4:	sub    $0x10,%rsp
    5ad8:	mov    (%rdi),%rax
    5adb:	test   %rax,%rax
    5ade:	jne    5ae2 <png_info_init_3+0x12>
    5ae0:	leaveq 
    5ae1:	retq   
    5ae2:	xor    %ecx,%ecx
    5ae4:	mov    $0x168,%edx
    5ae9:	cmp    $0x167,%rsi
    5af0:	jbe    5aff <png_info_init_3+0x2f>
    5af2:	mov    %rcx,%rsi
    5af5:	mov    %rax,%rdi
    5af8:	callq  5350 <memset@plt>
    5afd:	leaveq 
    5afe:	retq   
    5aff:	movq   $0x0,(%rdi)
    5b06:	mov    %r15,-0x8(%rbp)
    5b0a:	mov    %rdi,%r15
    5b0d:	mov    %rax,%rdi
    5b10:	callq  5070 <free@plt>
    5b15:	xor    %edi,%edi
    5b17:	mov    $0x168,%esi
    5b1c:	callq  c940 <png_malloc_base>
    5b21:	test   %rax,%rax
    5b24:	jne    5b2c <png_info_init_3+0x5c>
    5b26:	mov    -0x8(%rbp),%r15
    5b2a:	leaveq 
    5b2b:	retq   
    5b2c:	mov    %rax,(%r15)
    5b2f:	mov    %rax,%rdi
    5b32:	mov    $0x168,%edx
    5b37:	xor    %esi,%esi
    5b39:	mov    -0x8(%rbp),%r15
    5b3d:	jmp    5af8 <png_info_init_3+0x28>
    5b3f:	nop

0000000000005b40 <png_convert_to_rfc1123>:
    5b40:	push   %rbp
    5b41:	mov    %rsp,%rbp
    5b44:	sub    $0x10,%rsp
    5b48:	xor    %eax,%eax
    5b4a:	test   %rdi,%rdi
    5b4d:	jne    5b51 <png_convert_to_rfc1123+0x11>
    5b4f:	leaveq 
    5b50:	retq   
    5b51:	lea    0x38c(%rdi),%rax
    5b58:	mov    %rax,%rcx
    5b5b:	mov    %r15,-0x10(%rbp)
    5b5f:	mov    %rdi,-0x8(%rbp)
    5b63:	mov    %rcx,%rdi
    5b66:	mov    %rax,%r15
    5b69:	callq  5850 <png_convert_to_rfc1123_buffer@plt>
    5b6e:	test   %eax,%eax
    5b70:	je     5b7b <png_convert_to_rfc1123+0x3b>
    5b72:	mov    %r15,%rax
    5b75:	mov    -0x10(%rbp),%r15
    5b79:	leaveq 
    5b7a:	retq   
    5b7b:	lea    0x26f37(%rip),%rsi        # 2cab9 <png_sRGB_checks+0x101>
    5b82:	mov    -0x8(%rbp),%rdi
    5b86:	callq  5390 <png_warning@plt>
    5b8b:	xor    %eax,%eax
    5b8d:	mov    -0x10(%rbp),%r15
    5b91:	leaveq 
    5b92:	retq   
    5b93:	data16 nopw %cs:0x0(%rax,%rax,1)
    5b9e:	xchg   %ax,%ax

0000000000005ba0 <png_convert_to_rfc1123_buffer>:
    5ba0:	push   %rbp
    5ba1:	mov    %rsp,%rbp
    5ba4:	sub    $0x30,%rsp
    5ba8:	xor    %eax,%eax
    5baa:	test   %rdi,%rdi
    5bad:	jne    5bb1 <png_convert_to_rfc1123_buffer+0x11>
    5baf:	leaveq 
    5bb0:	retq   
    5bb1:	movzwl (%rsi),%ecx
    5bb4:	cmp    $0x270f,%cx
    5bb9:	jbe    5bbd <png_convert_to_rfc1123_buffer+0x1d>
    5bbb:	leaveq 
    5bbc:	retq   
    5bbd:	movzbl 0x2(%rsi),%ecx
    5bc1:	test   %cl,%cl
    5bc3:	jne    5bc7 <png_convert_to_rfc1123_buffer+0x27>
    5bc5:	leaveq 
    5bc6:	retq   
    5bc7:	cmp    $0xc,%cl
    5bca:	jbe    5bce <png_convert_to_rfc1123_buffer+0x2e>
    5bcc:	leaveq 
    5bcd:	retq   
    5bce:	movzbl 0x3(%rsi),%ecx
    5bd2:	test   %cl,%cl
    5bd4:	jne    5bd8 <png_convert_to_rfc1123_buffer+0x38>
    5bd6:	leaveq 
    5bd7:	retq   
    5bd8:	cmp    $0x1f,%cl
    5bdb:	jbe    5bdf <png_convert_to_rfc1123_buffer+0x3f>
    5bdd:	leaveq 
    5bde:	retq   
    5bdf:	movzbl 0x4(%rsi),%edx
    5be3:	cmp    $0x17,%dl
    5be6:	jbe    5bea <png_convert_to_rfc1123_buffer+0x4a>
    5be8:	leaveq 
    5be9:	retq   
    5bea:	movzbl 0x5(%rsi),%edx
    5bee:	cmp    $0x3b,%dl
    5bf1:	jbe    5bf5 <png_convert_to_rfc1123_buffer+0x55>
    5bf3:	leaveq 
    5bf4:	retq   
    5bf5:	movzbl 0x6(%rsi),%edx
    5bf9:	cmp    $0x3c,%dl
    5bfc:	jbe    5c00 <png_convert_to_rfc1123_buffer+0x60>
    5bfe:	leaveq 
    5bff:	retq   
    5c00:	lea    -0x2d(%rbp),%r10
    5c04:	lea    -0x28(%rbp),%r11
    5c08:	mov    $0x1,%edx
    5c0d:	mov    %r10,%r9
    5c10:	mov    %r11,%r8
    5c13:	mov    %r15,-0x28(%rbp)
    5c17:	mov    %rbx,-0x8(%rbp)
    5c1b:	mov    %r12,-0x10(%rbp)
    5c1f:	mov    %r13,-0x18(%rbp)
    5c23:	mov    %r14,-0x20(%rbp)
    5c27:	mov    %rdi,%rbx
    5c2a:	mov    %r9,%rdi
    5c2d:	mov    %rax,%r12
    5c30:	mov    %r10,%r13
    5c33:	mov    %rsi,%r14
    5c36:	mov    %r8,%rsi
    5c39:	mov    %r11,%r15
    5c3c:	callq  ad70 <png_format_number>
    5c41:	mov    %rax,%rcx
    5c44:	mov    %r12,%rdx
    5c47:	mov    $0x1d,%r12d
    5c4d:	mov    %rbx,%rdi
    5c50:	mov    %r12,%rsi
    5c53:	callq  ad20 <png_safecat>
    5c58:	cmp    $0x1b,%rax
    5c5c:	jbe    5c63 <png_convert_to_rfc1123_buffer+0xc3>
    5c5e:	mov    %rax,%rdx
    5c61:	jmp    5c6b <png_convert_to_rfc1123_buffer+0xcb>
    5c63:	movb   $0x20,(%rbx,%rax,1)
    5c67:	lea    0x1(%rax),%rdx
    5c6b:	lea    0x26e63(%rip),%rcx        # 2cad5 <short_months.6>
    5c72:	movzbl 0x2(%r14),%eax
    5c77:	add    $0xffffffff,%eax
    5c7a:	movslq %eax,%rax
    5c7d:	lea    (%rcx,%rax,4),%rcx
    5c81:	mov    %rbx,%rdi
    5c84:	mov    %r12,%rsi
    5c87:	callq  ad20 <png_safecat>
    5c8c:	cmp    $0x1b,%rax
    5c90:	ja     5c9a <png_convert_to_rfc1123_buffer+0xfa>
    5c92:	movb   $0x20,(%rbx,%rax,1)
    5c96:	add    $0x1,%rax
    5c9a:	mov    %r15,%rsi
    5c9d:	mov    %rax,%r15
    5ca0:	movzwl (%r14),%ecx
    5ca4:	mov    %r13,%rdi
    5ca7:	mov    $0x1,%edx
    5cac:	callq  ad70 <png_format_number>
    5cb1:	mov    %rax,%rcx
    5cb4:	mov    %r15,%rdx
    5cb7:	mov    %rbx,%rdi
    5cba:	mov    %r12,%rsi
    5cbd:	callq  ad20 <png_safecat>
    5cc2:	cmp    $0x1b,%rax
    5cc6:	jbe    5ccd <png_convert_to_rfc1123_buffer+0x12d>
    5cc8:	mov    %rax,%r15
    5ccb:	jmp    5cd5 <png_convert_to_rfc1123_buffer+0x135>
    5ccd:	movb   $0x20,(%rbx,%rax,1)
    5cd1:	lea    0x1(%rax),%r15
    5cd5:	mov    $0x2,%edx
    5cda:	movzbl 0x4(%r14),%ecx
    5cdf:	mov    %r13,%rdi
    5ce2:	lea    -0x28(%rbp),%rsi
    5ce6:	callq  ad70 <png_format_number>
    5ceb:	mov    %rax,%rcx
    5cee:	mov    %r15,%rdx
    5cf1:	mov    %rbx,%rdi
    5cf4:	mov    %r12,%rsi
    5cf7:	callq  ad20 <png_safecat>
    5cfc:	cmp    $0x1b,%rax
    5d00:	jbe    5d07 <png_convert_to_rfc1123_buffer+0x167>
    5d02:	mov    %rax,%r15
    5d05:	jmp    5d0f <png_convert_to_rfc1123_buffer+0x16f>
    5d07:	movb   $0x3a,(%rbx,%rax,1)
    5d0b:	lea    0x1(%rax),%r15
    5d0f:	movzbl 0x5(%r14),%ecx
    5d14:	mov    %r13,%rdi
    5d17:	lea    -0x28(%rbp),%rsi
    5d1b:	mov    $0x2,%edx
    5d20:	callq  ad70 <png_format_number>
    5d25:	mov    %rax,%rcx
    5d28:	mov    %r15,%rdx
    5d2b:	mov    %rbx,%rdi
    5d2e:	mov    %r12,%rsi
    5d31:	callq  ad20 <png_safecat>
    5d36:	cmp    $0x1b,%rax
    5d3a:	jbe    5d41 <png_convert_to_rfc1123_buffer+0x1a1>
    5d3c:	mov    %rax,%r15
    5d3f:	jmp    5d49 <png_convert_to_rfc1123_buffer+0x1a9>
    5d41:	movb   $0x3a,(%rbx,%rax,1)
    5d45:	lea    0x1(%rax),%r15
    5d49:	movzbl 0x6(%r14),%ecx
    5d4e:	mov    %r13,%rdi
    5d51:	mov    $0x2,%edx
    5d56:	lea    -0x28(%rbp),%rsi
    5d5a:	callq  ad70 <png_format_number>
    5d5f:	mov    %rax,%rcx
    5d62:	mov    %r15,%rdx
    5d65:	mov    %rbx,%rdi
    5d68:	mov    %r12,%rsi
    5d6b:	callq  ad20 <png_safecat>
    5d70:	mov    %rax,%rdx
    5d73:	mov    %r12,%rsi
    5d76:	mov    %rbx,%rdi
    5d79:	lea    0x26d85(%rip),%rcx        # 2cb05 <short_months.6+0x30>
    5d80:	callq  ad20 <png_safecat>
    5d85:	mov    -0x20(%rbp),%r14
    5d89:	mov    -0x18(%rbp),%r13
    5d8d:	mov    -0x10(%rbp),%r12
    5d91:	mov    -0x8(%rbp),%rbx
    5d95:	mov    $0x1,%eax
    5d9a:	mov    -0x28(%rbp),%r15
    5d9e:	leaveq 
    5d9f:	retq   

0000000000005da0 <png_build_grayscale_palette>:
    5da0:	push   %rbp
    5da1:	mov    %rsp,%rbp
    5da4:	test   %rsi,%rsi
    5da7:	jne    5dab <png_build_grayscale_palette+0xb>
    5da9:	leaveq 
    5daa:	retq   
    5dab:	xor    %eax,%eax
    5dad:	cmp    $0x3,%edi
    5db0:	jle    5dc6 <png_build_grayscale_palette+0x26>
    5db2:	cmp    $0x4,%edi
    5db5:	jne    5dda <png_build_grayscale_palette+0x3a>
    5db7:	mov    $0x10,%edi
    5dbc:	mov    $0x11,%edx
    5dc1:	mov    %rax,%rcx
    5dc4:	jmp    5e04 <png_build_grayscale_palette+0x64>
    5dc6:	cmp    $0x1,%edi
    5dc9:	jne    5e0a <png_build_grayscale_palette+0x6a>
    5dcb:	mov    $0x2,%edi
    5dd0:	mov    $0xff,%edx
    5dd5:	mov    %rax,%rcx
    5dd8:	jmp    5e04 <png_build_grayscale_palette+0x64>
    5dda:	cmp    $0x8,%edi
    5ddd:	je     5e1a <png_build_grayscale_palette+0x7a>
    5ddf:	mov    %rax,%rcx
    5de2:	mov    %rcx,%rdx
    5de5:	mov    %rdx,%rdi
    5de8:	jmp    5e04 <png_build_grayscale_palette+0x64>
    5dea:	movslq %ecx,%r8
    5ded:	lea    (%r8,%r8,2),%r8
    5df1:	mov    %al,(%rsi,%r8,1)
    5df5:	mov    %al,0x1(%rsi,%r8,1)
    5dfa:	mov    %al,0x2(%rsi,%r8,1)
    5dff:	add    $0x1,%ecx
    5e02:	add    %edx,%eax
    5e04:	cmp    %ecx,%edi
    5e06:	jg     5dea <png_build_grayscale_palette+0x4a>
    5e08:	leaveq 
    5e09:	retq   
    5e0a:	cmp    $0x2,%edi
    5e0d:	je     5e29 <png_build_grayscale_palette+0x89>
    5e0f:	mov    %rax,%rcx
    5e12:	mov    %rcx,%rdx
    5e15:	mov    %rdx,%rdi
    5e18:	jmp    5e04 <png_build_grayscale_palette+0x64>
    5e1a:	mov    $0x100,%edi
    5e1f:	mov    $0x1,%edx
    5e24:	mov    %rax,%rcx
    5e27:	jmp    5e04 <png_build_grayscale_palette+0x64>
    5e29:	mov    $0x4,%edi
    5e2e:	mov    $0x55,%edx
    5e33:	mov    %rax,%rcx
    5e36:	jmp    5e04 <png_build_grayscale_palette+0x64>
    5e38:	nopl   0x0(%rax,%rax,1)

0000000000005e40 <png_destroy_info_struct>:
    5e40:	push   %rbp
    5e41:	mov    %rsp,%rbp
    5e44:	sub    $0x10,%rsp
    5e48:	test   %rdi,%rdi
    5e4b:	jne    5e4f <png_destroy_info_struct+0xf>
    5e4d:	leaveq 
    5e4e:	retq   
    5e4f:	xor    %eax,%eax
    5e51:	test   %rsi,%rsi
    5e54:	je     5e59 <png_destroy_info_struct+0x19>
    5e56:	mov    (%rsi),%rax
    5e59:	test   %rax,%rax
    5e5c:	jne    5e60 <png_destroy_info_struct+0x20>
    5e5e:	leaveq 
    5e5f:	retq   
    5e60:	movq   $0x0,(%rsi)
    5e67:	mov    $0xffff,%edx
    5e6c:	mov    $0xffffffffffffffff,%rcx
    5e73:	mov    %rdi,%r8
    5e76:	mov    %rax,%rsi
    5e79:	mov    %r14,-0x8(%rbp)
    5e7d:	mov    %r15,-0x10(%rbp)
    5e81:	mov    %rdi,%r14
    5e84:	mov    %r8,%rdi
    5e87:	mov    %rax,%r15
    5e8a:	callq  5720 <png_free_data@plt>
    5e8f:	mov    $0x168,%edx
    5e94:	mov    %r15,%rdi
    5e97:	xor    %esi,%esi
    5e99:	callq  5350 <memset@plt>
    5e9e:	mov    %r15,%rsi
    5ea1:	mov    %r14,%rdi
    5ea4:	callq  5790 <png_free@plt>
    5ea9:	mov    -0x10(%rbp),%r15
    5ead:	mov    -0x8(%rbp),%r14
    5eb1:	leaveq 
    5eb2:	retq   
    5eb3:	data16 nopw %cs:0x0(%rax,%rax,1)
    5ebe:	xchg   %ax,%ax

0000000000005ec0 <png_init_io>:
    5ec0:	push   %rbp
    5ec1:	mov    %rsp,%rbp
    5ec4:	test   %rdi,%rdi
    5ec7:	jne    5ecb <png_init_io+0xb>
    5ec9:	leaveq 
    5eca:	retq   
    5ecb:	mov    %rsi,0x108(%rdi)
    5ed2:	leaveq 
    5ed3:	retq   
    5ed4:	data16 nopw %cs:0x0(%rax,%rax,1)
    5edf:	nop

0000000000005ee0 <png_get_io_ptr>:
    5ee0:	push   %rbp
    5ee1:	mov    %rsp,%rbp
    5ee4:	test   %rdi,%rdi
    5ee7:	jne    5eed <png_get_io_ptr+0xd>
    5ee9:	xor    %eax,%eax
    5eeb:	leaveq 
    5eec:	retq   
    5eed:	mov    0x108(%rdi),%rax
    5ef4:	leaveq 
    5ef5:	retq   
    5ef6:	nopw   %cs:0x0(%rax,%rax,1)

0000000000005f00 <png_free_data>:
    5f00:	push   %rbp
    5f01:	mov    %rsp,%rbp
    5f04:	sub    $0x50,%rsp
    5f08:	mov    %r13,-0x20(%rbp)
    5f0c:	mov    %r14,-0x28(%rbp)
    5f10:	mov    %r15,-0x30(%rbp)
    5f14:	test   %rdi,%rdi
    5f17:	jne    5f1b <png_free_data+0x1b>
    5f19:	leaveq 
    5f1a:	retq   
    5f1b:	test   %rsi,%rsi
    5f1e:	jne    5f22 <png_free_data+0x22>
    5f20:	leaveq 
    5f21:	retq   
    5f22:	xor    %r9d,%r9d
    5f25:	mov    0xa0(%rsi),%r8
    5f2c:	test   %r8,%r8
    5f2f:	jne    60e8 <png_free_data+0x1e8>
    5f35:	mov    %r13,%rax
    5f38:	mov    %rbx,%r13
    5f3b:	mov    %rsi,%rbx
    5f3e:	mov    %r14,%r8
    5f41:	mov    %r9,%r14
    5f44:	mov    %r15,%r9
    5f47:	mov    %r12,%r15
    5f4a:	mov    %rdi,%r12
    5f4d:	mov    %rdx,%rsi
    5f50:	and    0x12c(%rbx),%esi
    5f56:	and    $0x2000,%esi
    5f5c:	test   %esi,%esi
    5f5e:	je     5fac <png_free_data+0xac>
    5f60:	mov    0x8(%rbx),%eax
    5f63:	and    $0xffffffef,%eax
    5f66:	mov    %eax,0x8(%rbx)
    5f69:	mov    0xb8(%rbx),%rsi
    5f70:	mov    %r12,%rdi
    5f73:	mov    %r15,-0x48(%rbp)
    5f77:	mov    %rcx,%r14
    5f7a:	mov    %rdx,%r15
    5f7d:	callq  5790 <png_free@plt>
    5f82:	movq   $0x0,0xb8(%rbx)
    5f8d:	movw   $0x0,0x22(%rbx)
    5f93:	mov    %r14,%rcx
    5f96:	mov    %r15,%rdx
    5f99:	xor    %r14d,%r14d
    5f9c:	mov    -0x30(%rbp),%r9
    5fa0:	mov    -0x28(%rbp),%r8
    5fa4:	mov    -0x20(%rbp),%rax
    5fa8:	mov    -0x48(%rbp),%r15
    5fac:	mov    %rdx,%rsi
    5faf:	and    0x12c(%rbx),%esi
    5fb5:	and    $0x100,%esi
    5fbb:	test   %esi,%esi
    5fbd:	je     6021 <png_free_data+0x121>
    5fbf:	mov    0x150(%rbx),%rsi
    5fc6:	mov    %r12,%rdi
    5fc9:	mov    %r15,-0x48(%rbp)
    5fcd:	mov    %rdx,%r14
    5fd0:	mov    %rcx,%r15
    5fd3:	callq  5790 <png_free@plt>
    5fd8:	mov    0x158(%rbx),%rsi
    5fdf:	mov    %r12,%rdi
    5fe2:	callq  5790 <png_free@plt>
    5fe7:	movq   $0x0,0x150(%rbx)
    5ff2:	movq   $0x0,0x158(%rbx)
    5ffd:	mov    0x8(%rbx),%eax
    6000:	and    $0xffffbfff,%eax
    6005:	mov    %eax,0x8(%rbx)
    6008:	mov    %r15,%rcx
    600b:	mov    %r14,%rdx
    600e:	xor    %r14d,%r14d
    6011:	mov    -0x30(%rbp),%r9
    6015:	mov    -0x28(%rbp),%r8
    6019:	mov    -0x20(%rbp),%rax
    601d:	mov    -0x48(%rbp),%r15
    6021:	mov    %rdx,%rsi
    6024:	and    0x12c(%rbx),%esi
    602a:	and    $0x80,%esi
    6030:	test   %esi,%esi
    6032:	jne    611b <png_free_data+0x21b>
    6038:	mov    %rdx,%rsi
    603b:	and    0x12c(%rbx),%esi
    6041:	and    $0x10,%esi
    6044:	test   %esi,%esi
    6046:	je     60aa <png_free_data+0x1aa>
    6048:	mov    0x80(%rbx),%rsi
    604f:	mov    %r12,%rdi
    6052:	mov    %r15,-0x48(%rbp)
    6056:	mov    %rdx,%r14
    6059:	mov    %rcx,%r15
    605c:	callq  5790 <png_free@plt>
    6061:	mov    0x88(%rbx),%rsi
    6068:	mov    %r12,%rdi
    606b:	callq  5790 <png_free@plt>
    6070:	movq   $0x0,0x80(%rbx)
    607b:	movq   $0x0,0x88(%rbx)
    6086:	mov    0x8(%rbx),%eax
    6089:	and    $0xffffefff,%eax
    608e:	mov    %eax,0x8(%rbx)
    6091:	mov    %r15,%rcx
    6094:	mov    %r14,%rdx
    6097:	xor    %r14d,%r14d
    609a:	mov    -0x30(%rbp),%r9
    609e:	mov    -0x28(%rbp),%r8
    60a2:	mov    -0x20(%rbp),%rax
    60a6:	mov    -0x48(%rbp),%r15
    60aa:	mov    0x140(%rbx),%rdi
    60b1:	test   %rdi,%rdi
    60b4:	je     6211 <png_free_data+0x311>
    60ba:	mov    %rdx,%rsi
    60bd:	and    0x12c(%rbx),%esi
    60c3:	and    $0x20,%esi
    60c6:	test   %esi,%esi
    60c8:	je     6211 <png_free_data+0x311>
    60ce:	cmp    $0xffffffff,%ecx
    60d1:	jne    6197 <png_free_data+0x297>
    60d7:	mov    %r15,-0x38(%rbp)
    60db:	mov    %rdx,-0x48(%rbp)
    60df:	mov    %rcx,-0x40(%rbp)
    60e3:	jmpq   6280 <png_free_data+0x380>
    60e8:	mov    %rdx,%rax
    60eb:	and    0x12c(%rsi),%eax
    60f1:	and    $0x4000,%eax
    60f6:	test   %eax,%eax
    60f8:	jne    62db <png_free_data+0x3db>
    60fe:	mov    %r13,%rax
    6101:	mov    %rbx,%r13
    6104:	mov    %rsi,%rbx
    6107:	mov    %r14,%r8
    610a:	mov    %r9,%r14
    610d:	mov    %r15,%r9
    6110:	mov    %r12,%r15
    6113:	mov    %rdi,%r12
    6116:	jmpq   5f4d <png_free_data+0x4d>
    611b:	mov    0x108(%rbx),%rsi
    6122:	mov    %r12,%rdi
    6125:	mov    %r13,-0x18(%rbp)
    6129:	mov    %r15,-0x48(%rbp)
    612d:	mov    %rdx,%r13
    6130:	mov    %rcx,%r15
    6133:	callq  5790 <png_free@plt>
    6138:	mov    0x118(%rbx),%rsi
    613f:	mov    %r12,%rdi
    6142:	callq  5790 <png_free@plt>
    6147:	movq   $0x0,0x108(%rbx)
    6152:	movq   $0x0,0x118(%rbx)
    615d:	mov    0x120(%rbx),%rax
    6164:	test   %rax,%rax
    6167:	jne    631a <png_free_data+0x41a>
    616d:	mov    %r15,%rcx
    6170:	mov    %r13,%rdx
    6173:	mov    0x8(%rbx),%eax
    6176:	and    $0xfffffbff,%eax
    617b:	mov    %eax,0x8(%rbx)
    617e:	mov    -0x30(%rbp),%r9
    6182:	mov    -0x28(%rbp),%r8
    6186:	mov    -0x20(%rbp),%rax
    618a:	mov    -0x48(%rbp),%r15
    618e:	mov    -0x18(%rbp),%r13
    6192:	jmpq   6038 <png_free_data+0x138>
    6197:	movslq %ecx,%r14
    619a:	shl    $0x5,%r14
    619e:	mov    (%rdi,%r14,1),%rsi
    61a2:	mov    %r12,%rdi
    61a5:	mov    %r13,-0x10(%rbp)
    61a9:	mov    %r15,-0x48(%rbp)
    61ad:	mov    %rcx,%r13
    61b0:	mov    %rdx,%r15
    61b3:	callq  5790 <png_free@plt>
    61b8:	mov    0x140(%rbx),%rax
    61bf:	mov    0x10(%rax,%r14,1),%rsi
    61c4:	mov    %r14,%rax
    61c7:	mov    %r13,%r14
    61ca:	mov    %rax,%r13
    61cd:	mov    %r12,%rdi
    61d0:	callq  5790 <png_free@plt>
    61d5:	mov    0x140(%rbx),%rax
    61dc:	movq   $0x0,(%rax,%r13,1)
    61e4:	mov    0x140(%rbx),%rax
    61eb:	movq   $0x0,0x10(%rax,%r13,1)
    61f4:	mov    %r14,%rcx
    61f7:	mov    %r15,%rdx
    61fa:	xor    %r14d,%r14d
    61fd:	mov    -0x30(%rbp),%r9
    6201:	mov    -0x28(%rbp),%r8
    6205:	mov    -0x20(%rbp),%rax
    6209:	mov    -0x48(%rbp),%r15
    620d:	mov    -0x10(%rbp),%r13
    6211:	mov    0x130(%rbx),%rdi
    6218:	test   %rdi,%rdi
    621b:	je     63a0 <png_free_data+0x4a0>
    6221:	mov    %rdx,%rsi
    6224:	and    0x12c(%rbx),%esi
    622a:	and    $0x200,%esi
    6230:	test   %esi,%esi
    6232:	je     63a0 <png_free_data+0x4a0>
    6238:	cmp    $0xffffffff,%ecx
    623b:	jne    634e <png_free_data+0x44e>
    6241:	mov    %rdx,-0x48(%rbp)
    6245:	mov    %rcx,-0x38(%rbp)
    6249:	jmpq   6546 <png_free_data+0x646>
    624e:	mov    0x140(%rbx),%rax
    6255:	movslq %r14d,%r15
    6258:	shl    $0x5,%r15
    625c:	mov    (%rax,%r15,1),%rsi
    6260:	mov    %r12,%rdi
    6263:	callq  5790 <png_free@plt>
    6268:	mov    0x140(%rbx),%rax
    626f:	mov    0x10(%rax,%r15,1),%rsi
    6274:	mov    %r12,%rdi
    6277:	callq  5790 <png_free@plt>
    627c:	add    $0x1,%r14d
    6280:	movslq 0x148(%rbx),%rax
    6287:	cmp    %r14d,%eax
    628a:	jg     624e <png_free_data+0x34e>
    628c:	mov    0x140(%rbx),%rsi
    6293:	mov    %r12,%rdi
    6296:	callq  5790 <png_free@plt>
    629b:	movq   $0x0,0x140(%rbx)
    62a6:	movl   $0x0,0x148(%rbx)
    62b0:	mov    0x8(%rbx),%eax
    62b3:	and    $0xffffdfff,%eax
    62b8:	mov    %eax,0x8(%rbx)
    62bb:	mov    -0x40(%rbp),%rcx
    62bf:	mov    -0x48(%rbp),%rdx
    62c3:	xor    %r14d,%r14d
    62c6:	mov    -0x30(%rbp),%r9
    62ca:	mov    -0x28(%rbp),%r8
    62ce:	mov    -0x20(%rbp),%rax
    62d2:	mov    -0x38(%rbp),%r15
    62d6:	jmpq   6211 <png_free_data+0x311>
    62db:	cmp    $0xffffffff,%ecx
    62de:	jne    6592 <png_free_data+0x692>
    62e4:	mov    %rdx,-0x48(%rbp)
    62e8:	mov    %rcx,-0x40(%rbp)
    62ec:	mov    %rbx,%r13
    62ef:	mov    %rsi,%rbx
    62f2:	mov    %r9,%r14
    62f5:	mov    %r12,%r15
    62f8:	mov    %rdi,%r12
    62fb:	jmpq   6621 <png_free_data+0x721>
    6300:	mov    0x120(%rbx),%rax
    6307:	movslq %r14d,%rcx
    630a:	mov    (%rax,%rcx,8),%rsi
    630e:	mov    %r12,%rdi
    6311:	callq  5790 <png_free@plt>
    6316:	add    $0x1,%r14d
    631a:	movzbl 0x129(%rbx),%eax
    6321:	cmp    %r14d,%eax
    6324:	jg     6300 <png_free_data+0x400>
    6326:	mov    0x120(%rbx),%rsi
    632d:	mov    %r12,%rdi
    6330:	callq  5790 <png_free@plt>
    6335:	movq   $0x0,0x120(%rbx)
    6340:	mov    %r15,%rcx
    6343:	mov    %r13,%rdx
    6346:	xor    %r14d,%r14d
    6349:	jmpq   6173 <png_free_data+0x273>
    634e:	movslq %ecx,%r14
    6351:	shl    $0x5,%r14
    6355:	mov    0x8(%rdi,%r14,1),%rsi
    635a:	mov    %r12,%rdi
    635d:	mov    %r13,-0x10(%rbp)
    6361:	mov    %r15,-0x48(%rbp)
    6365:	mov    %r14,%r13
    6368:	mov    %rcx,%r14
    636b:	mov    %rdx,%r15
    636e:	callq  5790 <png_free@plt>
    6373:	mov    0x130(%rbx),%rax
    637a:	movq   $0x0,0x8(%rax,%r13,1)
    6383:	mov    %r14,%rcx
    6386:	mov    %r15,%rdx
    6389:	xor    %r14d,%r14d
    638c:	mov    -0x30(%rbp),%r9
    6390:	mov    -0x28(%rbp),%r8
    6394:	mov    -0x20(%rbp),%rax
    6398:	mov    -0x48(%rbp),%r15
    639c:	mov    -0x10(%rbp),%r13
    63a0:	mov    %rdx,%rsi
    63a3:	and    0x12c(%rbx),%esi
    63a9:	and    $0x8000,%esi
    63af:	test   %esi,%esi
    63b1:	je     6447 <png_free_data+0x547>
    63b7:	mov    0xf8(%rbx),%rsi
    63be:	test   %rsi,%rsi
    63c1:	je     63f9 <png_free_data+0x4f9>
    63c3:	mov    %r12,%rdi
    63c6:	mov    %r15,-0x48(%rbp)
    63ca:	mov    %rdx,%r14
    63cd:	mov    %rcx,%r15
    63d0:	callq  5790 <png_free@plt>
    63d5:	movq   $0x0,0xf8(%rbx)
    63e0:	mov    %r15,%rcx
    63e3:	mov    %r14,%rdx
    63e6:	xor    %r14d,%r14d
    63e9:	mov    -0x30(%rbp),%r9
    63ed:	mov    -0x28(%rbp),%r8
    63f1:	mov    -0x20(%rbp),%rax
    63f5:	mov    -0x48(%rbp),%r15
    63f9:	mov    0xf0(%rbx),%rsi
    6400:	test   %rsi,%rsi
    6403:	je     643b <png_free_data+0x53b>
    6405:	mov    %r12,%rdi
    6408:	mov    %r15,-0x48(%rbp)
    640c:	mov    %rdx,%r14
    640f:	mov    %rcx,%r15
    6412:	callq  5790 <png_free@plt>
    6417:	movq   $0x0,0xf0(%rbx)
    6422:	mov    %r15,%rcx
    6425:	mov    %r14,%rdx
    6428:	xor    %r14d,%r14d
    642b:	mov    -0x30(%rbp),%r9
    642f:	mov    -0x28(%rbp),%r8
    6433:	mov    -0x20(%rbp),%rax
    6437:	mov    -0x48(%rbp),%r15
    643b:	mov    0x8(%rbx),%esi
    643e:	and    $0xfffeffff,%esi
    6444:	mov    %esi,0x8(%rbx)
    6447:	mov    %rdx,%rsi
    644a:	and    0x12c(%rbx),%esi
    6450:	and    $0x8,%esi
    6453:	test   %esi,%esi
    6455:	je     649d <png_free_data+0x59d>
    6457:	mov    0x100(%rbx),%rsi
    645e:	mov    %r12,%rdi
    6461:	mov    %r15,-0x48(%rbp)
    6465:	mov    %rcx,%r14
    6468:	mov    %rdx,%r15
    646b:	callq  5790 <png_free@plt>
    6470:	movq   $0x0,0x100(%rbx)
    647b:	mov    0x8(%rbx),%eax
    647e:	and    $0xffffffbf,%eax
    6481:	mov    %eax,0x8(%rbx)
    6484:	mov    %r14,%rcx
    6487:	mov    %r15,%rdx
    648a:	xor    %r14d,%r14d
    648d:	mov    -0x30(%rbp),%r9
    6491:	mov    -0x28(%rbp),%r8
    6495:	mov    -0x20(%rbp),%rax
    6499:	mov    -0x48(%rbp),%r15
    649d:	mov    %rdx,%rsi
    64a0:	and    0x12c(%rbx),%esi
    64a6:	and    $0x1000,%esi
    64ac:	test   %esi,%esi
    64ae:	je     64f6 <png_free_data+0x5f6>
    64b0:	mov    0x18(%rbx),%rsi
    64b4:	mov    %r12,%rdi
    64b7:	mov    %r12,-0x48(%rbp)
    64bb:	mov    %rdx,%r12
    64be:	mov    %rcx,%r14
    64c1:	callq  5790 <png_free@plt>
    64c6:	movq   $0x0,0x18(%rbx)
    64ce:	mov    0x8(%rbx),%eax
    64d1:	and    $0xfffffff7,%eax
    64d4:	mov    %eax,0x8(%rbx)
    64d7:	movw   $0x0,0x20(%rbx)
    64dd:	mov    %r14,%rcx
    64e0:	mov    %r12,%rdx
    64e3:	mov    -0x48(%rbp),%r12
    64e7:	xor    %r14d,%r14d
    64ea:	mov    -0x30(%rbp),%r9
    64ee:	mov    -0x28(%rbp),%r8
    64f2:	mov    -0x20(%rbp),%rax
    64f6:	mov    %rdx,%rsi
    64f9:	and    0x12c(%rbx),%esi
    64ff:	and    $0x40,%esi
    6502:	test   %esi,%esi
    6504:	je     66d3 <png_free_data+0x7d3>
    650a:	mov    0x160(%rbx),%rsi
    6511:	test   %rsi,%rsi
    6514:	je     66c7 <png_free_data+0x7c7>
    651a:	mov    %rdx,-0x8(%rbp)
    651e:	mov    %rcx,-0x48(%rbp)
    6522:	jmpq   6691 <png_free_data+0x791>
    6527:	mov    0x130(%rbx),%rcx
    652e:	movslq %r14d,%rax
    6531:	shl    $0x5,%rax
    6535:	mov    0x8(%rcx,%rax,1),%rsi
    653a:	mov    %r12,%rdi
    653d:	callq  5790 <png_free@plt>
    6542:	add    $0x1,%r14d
    6546:	movslq 0x138(%rbx),%rax
    654d:	cmp    %r14d,%eax
    6550:	jg     6527 <png_free_data+0x627>
    6552:	mov    0x130(%rbx),%rsi
    6559:	mov    %r12,%rdi
    655c:	callq  5790 <png_free@plt>
    6561:	movq   $0x0,0x130(%rbx)
    656c:	movl   $0x0,0x138(%rbx)
    6576:	mov    -0x38(%rbp),%rcx
    657a:	mov    -0x48(%rbp),%rdx
    657e:	xor    %r14d,%r14d
    6581:	mov    -0x30(%rbp),%r9
    6585:	mov    -0x28(%rbp),%r8
    6589:	mov    -0x20(%rbp),%rax
    658d:	jmpq   63a0 <png_free_data+0x4a0>
    6592:	movslq %ecx,%r9
    6595:	lea    (%r9,%r9,2),%rax
    6599:	shl    $0x4,%rax
    659d:	lea    (%rax,%r9,8),%r13
    65a1:	mov    0x8(%r8,%r13,1),%r8
    65a6:	mov    %rdi,%rax
    65a9:	mov    %rbx,-0x18(%rbp)
    65ad:	mov    %r12,-0x48(%rbp)
    65b1:	mov    %rsi,%rbx
    65b4:	mov    %r8,%rsi
    65b7:	mov    %rdi,%r12
    65ba:	mov    %rax,%rdi
    65bd:	mov    %rcx,%r14
    65c0:	mov    %rdx,%r15
    65c3:	callq  5790 <png_free@plt>
    65c8:	mov    0xa0(%rbx),%rax
    65cf:	movq   $0x0,0x8(%rax,%r13,1)
    65d8:	mov    %r14,%rcx
    65db:	mov    %r15,%rdx
    65de:	xor    %r14d,%r14d
    65e1:	mov    -0x30(%rbp),%r9
    65e5:	mov    -0x28(%rbp),%r8
    65e9:	mov    -0x20(%rbp),%rax
    65ed:	mov    -0x48(%rbp),%r15
    65f1:	mov    -0x18(%rbp),%r13
    65f5:	jmpq   5f4d <png_free_data+0x4d>
    65fa:	movslq %r14d,%rcx
    65fd:	lea    (%rcx,%rcx,2),%rax
    6601:	shl    $0x4,%rax
    6605:	lea    (%rax,%rcx,8),%rax
    6609:	mov    0xa0(%rbx),%rcx
    6610:	mov    0x8(%rcx,%rax,1),%rsi
    6615:	mov    %r12,%rdi
    6618:	callq  5790 <png_free@plt>
    661d:	add    $0x1,%r14d
    6621:	movslq 0x94(%rbx),%rax
    6628:	cmp    %r14d,%eax
    662b:	jg     65fa <png_free_data+0x6fa>
    662d:	mov    0xa0(%rbx),%rsi
    6634:	mov    %r12,%rdi
    6637:	callq  5790 <png_free@plt>
    663c:	movq   $0x0,0xa0(%rbx)
    6647:	movl   $0x0,0x94(%rbx)
    6651:	movl   $0x0,0x98(%rbx)
    665b:	mov    -0x40(%rbp),%rcx
    665f:	mov    -0x48(%rbp),%rdx
    6663:	xor    %r14d,%r14d
    6666:	mov    -0x30(%rbp),%r9
    666a:	mov    -0x28(%rbp),%r8
    666e:	mov    -0x20(%rbp),%rax
    6672:	jmpq   5f4d <png_free_data+0x4d>
    6677:	mov    0x160(%rbx),%rax
    667e:	mov    %r14d,%ecx
    6681:	mov    (%rax,%rcx,8),%rsi
    6685:	mov    %r12,%rdi
    6688:	callq  5790 <png_free@plt>
    668d:	add    $0x1,%r14d
    6691:	mov    0x4(%rbx),%eax
    6694:	cmp    %r14d,%eax
    6697:	ja     6677 <png_free_data+0x777>
    6699:	mov    %r12,%rdi
    669c:	mov    0x160(%rbx),%rsi
    66a3:	callq  5790 <png_free@plt>
    66a8:	movq   $0x0,0x160(%rbx)
    66b3:	mov    -0x48(%rbp),%rcx
    66b7:	mov    -0x8(%rbp),%rdx
    66bb:	mov    -0x30(%rbp),%r9
    66bf:	mov    -0x28(%rbp),%r8
    66c3:	mov    -0x20(%rbp),%rax
    66c7:	mov    0x8(%rbx),%esi
    66ca:	and    $0xffff7fff,%esi
    66d0:	mov    %esi,0x8(%rbx)
    66d3:	cmp    $0xffffffff,%ecx
    66d6:	je     66de <png_free_data+0x7de>
    66d8:	and    $0xffffbddf,%edx
    66de:	not    %edx
    66e0:	and    0x12c(%rbx),%edx
    66e6:	mov    %edx,0x12c(%rbx)
    66ec:	mov    %r13,%rbx
    66ef:	mov    %rax,%r13
    66f2:	mov    %r15,%r12
    66f5:	mov    %r9,%r15
    66f8:	mov    %r8,%r14
    66fb:	leaveq 
    66fc:	retq   
    66fd:	nopl   (%rax)

0000000000006700 <png_data_freer>:
    6700:	push   %rbp
    6701:	mov    %rsp,%rbp
    6704:	test   %rdi,%rdi
    6707:	jne    670b <png_data_freer+0xb>
    6709:	leaveq 
    670a:	retq   
    670b:	test   %rsi,%rsi
    670e:	jne    6712 <png_data_freer+0x12>
    6710:	leaveq 
    6711:	retq   
    6712:	cmp    $0x1,%edx
    6715:	je     6728 <png_data_freer+0x28>
    6717:	cmp    $0x2,%edx
    671a:	je     6736 <png_data_freer+0x36>
    671c:	lea    0x263e9(%rip),%rsi        # 2cb0c <short_months.6+0x37>
    6723:	callq  5470 <png_error@plt>
    6728:	or     0x12c(%rsi),%ecx
    672e:	mov    %ecx,0x12c(%rsi)
    6734:	leaveq 
    6735:	retq   
    6736:	not    %ecx
    6738:	and    0x12c(%rsi),%ecx
    673e:	mov    %ecx,0x12c(%rsi)
    6744:	leaveq 
    6745:	retq   
    6746:	nopw   %cs:0x0(%rax,%rax,1)

0000000000006750 <png_handle_as_unknown>:
    6750:	push   %rbp
    6751:	mov    %rsp,%rbp
    6754:	sub    $0x30,%rsp
    6758:	xor    %eax,%eax
    675a:	test   %rdi,%rdi
    675d:	jne    6761 <png_handle_as_unknown+0x11>
    675f:	leaveq 
    6760:	retq   
    6761:	test   %rsi,%rsi
    6764:	jne    6768 <png_handle_as_unknown+0x18>
    6766:	leaveq 
    6767:	retq   
    6768:	mov    0x3c4(%rdi),%ecx
    676e:	test   %ecx,%ecx
    6770:	jne    6774 <png_handle_as_unknown+0x24>
    6772:	leaveq 
    6773:	retq   
    6774:	mov    $0x4,%edx
    6779:	lea    (%rcx,%rcx,4),%eax
    677c:	mov    %eax,%eax
    677e:	mov    0x3c8(%rdi),%rcx
    6785:	add    %rcx,%rax
    6788:	mov    %rbx,-0x8(%rbp)
    678c:	mov    %r12,-0x10(%rbp)
    6790:	mov    %r13,-0x18(%rbp)
    6794:	mov    %r14,-0x20(%rbp)
    6798:	mov    %r15,-0x28(%rbp)
    679c:	mov    %rsi,%rbx
    679f:	mov    %rdx,%r12
    67a2:	mov    %rcx,%r13
    67a5:	mov    %rax,%r14
    67a8:	jmp    67b2 <png_handle_as_unknown+0x62>
    67aa:	cmp    %r13,%r15
    67ad:	jbe    67e3 <png_handle_as_unknown+0x93>
    67af:	mov    %r15,%r14
    67b2:	lea    -0x5(%r14),%r15
    67b6:	mov    %rbx,%rdi
    67b9:	mov    %r15,%rsi
    67bc:	mov    %r12,%rdx
    67bf:	callq  53d0 <memcmp@plt>
    67c4:	test   %eax,%eax
    67c6:	jne    67aa <png_handle_as_unknown+0x5a>
    67c8:	movzbl -0x1(%r14),%eax
    67cd:	mov    -0x28(%rbp),%r15
    67d1:	mov    -0x20(%rbp),%r14
    67d5:	mov    -0x18(%rbp),%r13
    67d9:	mov    -0x10(%rbp),%r12
    67dd:	mov    -0x8(%rbp),%rbx
    67e1:	leaveq 
    67e2:	retq   
    67e3:	mov    -0x28(%rbp),%r15
    67e7:	mov    -0x20(%rbp),%r14
    67eb:	mov    -0x18(%rbp),%r13
    67ef:	mov    -0x10(%rbp),%r12
    67f3:	mov    -0x8(%rbp),%rbx
    67f7:	xor    %eax,%eax
    67f9:	leaveq 
    67fa:	retq   
    67fb:	nopl   0x0(%rax,%rax,1)

0000000000006800 <png_get_copyright>:
    6800:	push   %rbp
    6801:	mov    %rsp,%rbp
    6804:	lea    0x2632b(%rip),%rax        # 2cb36 <short_months.6+0x61>
    680b:	leaveq 
    680c:	retq   
    680d:	nopl   (%rax)

0000000000006810 <png_get_header_ver>:
    6810:	push   %rbp
    6811:	mov    %rsp,%rbp
    6814:	lea    0x263e6(%rip),%rax        # 2cc01 <short_months.6+0x12c>
    681b:	leaveq 
    681c:	retq   
    681d:	nopl   (%rax)

0000000000006820 <png_get_header_version>:
    6820:	push   %rbp
    6821:	mov    %rsp,%rbp
    6824:	lea    0x263dd(%rip),%rax        # 2cc08 <short_months.6+0x133>
    682b:	leaveq 
    682c:	retq   
    682d:	nopl   (%rax)

0000000000006830 <png_get_libpng_ver>:
    6830:	push   %rbp
    6831:	mov    %rsp,%rbp
    6834:	callq  55f0 <png_get_header_ver@plt>
    6839:	leaveq 
    683a:	retq   
    683b:	nopl   0x0(%rax,%rax,1)

0000000000006840 <png_save_int_32>:
    6840:	push   %rbp
    6841:	mov    %rsp,%rbp
    6844:	callq  5500 <png_save_uint_32@plt>
    6849:	leaveq 
    684a:	retq   
    684b:	nopl   0x0(%rax,%rax,1)

0000000000006850 <png_image_free>:
    6850:	push   %rbp
    6851:	mov    %rsp,%rbp
    6854:	sub    $0x10,%rsp
    6858:	test   %rdi,%rdi
    685b:	jne    685f <png_image_free+0xf>
    685d:	leaveq 
    685e:	retq   
    685f:	mov    (%rdi),%rax
    6862:	test   %rax,%rax
    6865:	jne    6869 <png_image_free+0x19>
    6867:	leaveq 
    6868:	retq   
    6869:	mov    0x10(%rax),%rax
    686d:	test   %rax,%rax
    6870:	je     6874 <png_image_free+0x24>
    6872:	leaveq 
    6873:	retq   
    6874:	lea    0x3fa5(%rip),%rsi        # a820 <png_image_free_function>
    687b:	mov    %rdi,%rdx
    687e:	mov    %rdi,%rax
    6881:	mov    %r15,-0x8(%rbp)
    6885:	mov    %rdi,%r15
    6888:	mov    %rax,%rdi
    688b:	callq  b250 <png_safe_execute>
    6890:	movq   $0x0,(%r15)
    6897:	mov    -0x8(%rbp),%r15
    689b:	leaveq 
    689c:	retq   
    689d:	nopl   (%rax)

00000000000068a0 <png_set_option>:
    68a0:	push   %rbp
    68a1:	mov    %rsp,%rbp
    68a4:	mov    $0x1,%eax
    68a9:	test   %rdi,%rdi
    68ac:	jne    68b0 <png_set_option+0x10>
    68ae:	leaveq 
    68af:	retq   
    68b0:	test   %esi,%esi
    68b2:	jns    68b6 <png_set_option+0x16>
    68b4:	leaveq 
    68b5:	retq   
    68b6:	cmp    $0xb,%esi
    68b9:	jle    68bd <png_set_option+0x1d>
    68bb:	leaveq 
    68bc:	retq   
    68bd:	mov    %rsi,%rcx
    68c0:	and    $0x1,%ecx
    68c3:	test   %ecx,%ecx
    68c5:	je     68c9 <png_set_option+0x29>
    68c7:	leaveq 
    68c8:	retq   
    68c9:	mov    $0x3,%r8d
    68cf:	test   %edx,%edx
    68d1:	jne    68da <png_set_option+0x3a>
    68d3:	mov    $0x2,%edx
    68d8:	jmp    68dd <png_set_option+0x3d>
    68da:	mov    %r8,%rdx
    68dd:	mov    %rsi,%rcx
    68e0:	shl    %cl,%r8d
    68e3:	mov    %r8,%rsi
    68e6:	not    %esi
    68e8:	mov    0x388(%rdi),%eax
    68ee:	and    %eax,%esi
    68f0:	shl    %cl,%edx
    68f2:	or     %edx,%esi
    68f4:	movzbl %sil,%edx
    68f8:	mov    %edx,0x388(%rdi)
    68fe:	and    %r8d,%eax
    6901:	sar    %cl,%eax
    6903:	leaveq 
    6904:	retq   
    6905:	data16 nopw %cs:0x0(%rax,%rax,1)

0000000000006910 <png_zstream_error>:
    6910:	push   %rbp
    6911:	mov    %rsp,%rbp
    6914:	mov    0x170(%rdi),%rax
    691b:	test   %rax,%rax
    691e:	je     6922 <png_zstream_error+0x12>
    6920:	leaveq 
    6921:	retq   
    6922:	lea    0x7(%rsi),%eax
    6925:	cmp    $0x9,%eax
    6928:	ja     694a <png_zstream_error+0x3a>
    692a:	lea    0x256cf(%rip),%rcx        # 2c000 <_fini+0xf5c>
    6931:	movslq (%rcx,%rax,4),%rax
    6935:	add    %rcx,%rax
    6938:	jmpq   *%rax
    693a:	lea    0x263b1(%rip),%rax        # 2ccf2 <short_months.6+0x21d>
    6941:	mov    %rax,0x170(%rdi)
    6948:	leaveq 
    6949:	retq   
    694a:	lea    0x262e5(%rip),%rax        # 2cc36 <short_months.6+0x161>
    6951:	mov    %rax,0x170(%rdi)
    6958:	leaveq 
    6959:	retq   
    695a:	lea    0x262f1(%rip),%rax        # 2cc52 <short_months.6+0x17d>
    6961:	mov    %rax,0x170(%rdi)
    6968:	leaveq 
    6969:	retq   
    696a:	lea    0x262fd(%rip),%rax        # 2cc6e <short_months.6+0x199>
    6971:	mov    %rax,0x170(%rdi)
    6978:	leaveq 
    6979:	retq   
    697a:	lea    0x26303(%rip),%rax        # 2cc84 <short_months.6+0x1af>
    6981:	mov    %rax,0x170(%rdi)
    6988:	leaveq 
    6989:	retq   
    698a:	lea    0x26301(%rip),%rax        # 2cc92 <short_months.6+0x1bd>
    6991:	mov    %rax,0x170(%rdi)
    6998:	leaveq 
    6999:	retq   
    699a:	lea    0x26308(%rip),%rax        # 2cca9 <short_months.6+0x1d4>
    69a1:	mov    %rax,0x170(%rdi)
    69a8:	leaveq 
    69a9:	retq   
    69aa:	lea    0x2630a(%rip),%rax        # 2ccbb <short_months.6+0x1e6>
    69b1:	mov    %rax,0x170(%rdi)
    69b8:	leaveq 
    69b9:	retq   
    69ba:	lea    0x2630e(%rip),%rax        # 2cccf <short_months.6+0x1fa>
    69c1:	mov    %rax,0x170(%rdi)
    69c8:	leaveq 
    69c9:	retq   
    69ca:	lea    0x26308(%rip),%rax        # 2ccd9 <short_months.6+0x204>
    69d1:	mov    %rax,0x170(%rdi)
    69d8:	leaveq 
    69d9:	retq   
    69da:	nopw   0x0(%rax,%rax,1)

00000000000069e0 <png_fixed>:
    69e0:	push   %rbp
    69e1:	mov    %rsp,%rbp
    69e4:	sub    $0x10,%rsp
    69e8:	mov    %r14,-0x8(%rbp)
    69ec:	mov    %r15,-0x10(%rbp)
    69f0:	mov    %rsi,%r14
    69f3:	mov    %rdi,%r15
    69f6:	movsd  0x26a52(%rip),%xmm1        # 2d450 <short_months.6+0x97b>
    69fe:	mulsd  %xmm1,%xmm0
    6a02:	movsd  0x26a4e(%rip),%xmm1        # 2d458 <short_months.6+0x983>
    6a0a:	addsd  %xmm1,%xmm0
    6a0e:	callq  57e0 <floor@plt>
    6a13:	movsd  0x26a4d(%rip),%xmm1        # 2d468 <short_months.6+0x993>
    6a1b:	ucomisd %xmm1,%xmm0
    6a1f:	ja     6a3f <png_fixed+0x5f>
    6a21:	movsd  0x26a37(%rip),%xmm1        # 2d460 <short_months.6+0x98b>
    6a29:	ucomisd %xmm1,%xmm0
    6a2d:	jp     6a31 <png_fixed+0x51>
    6a2f:	jb     6a3f <png_fixed+0x5f>
    6a31:	cvttsd2si %xmm0,%eax
    6a35:	mov    -0x10(%rbp),%r15
    6a39:	mov    -0x8(%rbp),%r14
    6a3d:	leaveq 
    6a3e:	retq   
    6a3f:	mov    %r14,%rsi
    6a42:	mov    %r15,%rdi
    6a45:	callq  acb0 <png_fixed_error>
    6a4a:	nopw   0x0(%rax,%rax,1)

0000000000006a50 <png_user_version_check>:
    6a50:	push   %rbp
    6a51:	mov    %rsp,%rbp
    6a54:	sub    $0x90,%rsp
    6a5b:	xor    %edx,%edx
    6a5d:	lea    0x2619d(%rip),%r11        # 2cc01 <short_months.6+0x12c>
    6a64:	test   %rsi,%rsi
    6a67:	je     6a75 <png_user_version_check+0x25>
    6a69:	mov    $0xffffffffffffffff,%r8
    6a70:	mov    %rdx,%rax
    6a73:	jmp    6ad0 <png_user_version_check+0x80>
    6a75:	mov    0x130(%rdi),%eax
    6a7b:	or     $0x20000,%eax
    6a80:	mov    %eax,0x130(%rdi)
    6a86:	mov    0x130(%rdi),%eax
    6a8c:	and    $0x20000,%eax
    6a91:	test   %eax,%eax
    6a93:	jne    6ae8 <png_user_version_check+0x98>
    6a95:	mov    $0x1,%eax
    6a9a:	leaveq 
    6a9b:	retq   
    6a9c:	mov    0x130(%rdi),%r9d
    6aa3:	or     $0x20000,%r9d
    6aaa:	mov    %r9d,0x130(%rdi)
    6ab1:	movsbq (%rsi,%r10,1),%rcx
    6ab6:	cmp    $0x2e,%cl
    6ab9:	jne    6abe <png_user_version_check+0x6e>
    6abb:	add    $0x1,%eax
    6abe:	cmp    $0x1,%eax
    6ac1:	jg     6a86 <png_user_version_check+0x36>
    6ac3:	test   %cl,%cl
    6ac5:	je     6a86 <png_user_version_check+0x36>
    6ac7:	movsbq (%r10,%r11,1),%rcx
    6acc:	test   %cl,%cl
    6ace:	je     6a86 <png_user_version_check+0x36>
    6ad0:	add    $0x1,%r8d
    6ad4:	movslq %r8d,%r10
    6ad7:	movsbq (%r10,%r11,1),%r9
    6adc:	movsbq (%rsi,%r10,1),%rcx
    6ae1:	cmp    %cl,%r9b
    6ae4:	jne    6a9c <png_user_version_check+0x4c>
    6ae6:	jmp    6ab1 <png_user_version_check+0x61>
    6ae8:	lea    -0x90(%rbp),%r8
    6aef:	mov    $0x80,%eax
    6af4:	lea    0x2620e(%rip),%rcx        # 2cd09 <short_months.6+0x234>
    6afb:	mov    %r14,-0x8(%rbp)
    6aff:	mov    %r15,-0x10(%rbp)
    6b03:	mov    %rdi,%r14
    6b06:	mov    %r8,%rdi
    6b09:	mov    %rsi,%r15
    6b0c:	mov    %rax,%rsi
    6b0f:	callq  ad20 <png_safecat>
    6b14:	mov    %r15,%rcx
    6b17:	mov    %rax,%rdx
    6b1a:	lea    -0x90(%rbp),%r15
    6b21:	mov    %r15,%rdi
    6b24:	mov    $0x80,%esi
    6b29:	callq  ad20 <png_safecat>
    6b2e:	mov    %rax,%rdx
    6b31:	lea    0x261f0(%rip),%rcx        # 2cd28 <short_months.6+0x253>
    6b38:	mov    %r15,%rdi
    6b3b:	mov    $0x80,%esi
    6b40:	callq  ad20 <png_safecat>
    6b45:	mov    %rax,%rdx
    6b48:	mov    %r15,%rdi
    6b4b:	lea    0x260af(%rip),%rcx        # 2cc01 <short_months.6+0x12c>
    6b52:	mov    $0x80,%esi
    6b57:	callq  ad20 <png_safecat>
    6b5c:	mov    %r15,%rsi
    6b5f:	mov    %r14,%rdi
    6b62:	callq  5390 <png_warning@plt>
    6b67:	mov    -0x10(%rbp),%r15
    6b6b:	mov    -0x8(%rbp),%r14
    6b6f:	xor    %eax,%eax
    6b71:	leaveq 
    6b72:	retq   
    6b73:	data16 nopw %cs:0x0(%rax,%rax,1)
    6b7e:	xchg   %ax,%ax

0000000000006b80 <png_create_png_struct>:
    6b80:	push   %rbp
    6b81:	mov    %rsp,%rbp
    6b84:	sub    $0x5e0,%rsp
    6b8b:	mov    %rbx,-0x10(%rbp)
    6b8f:	mov    %r12,-0x18(%rbp)
    6b93:	mov    %r13,-0x20(%rbp)
    6b97:	mov    %r14,-0x28(%rbp)
    6b9b:	mov    %r15,-0x30(%rbp)
    6b9f:	mov    %rdi,-0x8(%rbp)
    6ba3:	mov    %r9,%rbx
    6ba6:	mov    %rsi,%r12
    6ba9:	mov    %rdx,%r13
    6bac:	mov    %rcx,%r14
    6baf:	mov    %r8,%r15
    6bb2:	lea    -0x5e0(%rbp),%rdi
    6bb9:	xor    %esi,%esi
    6bbb:	mov    $0x4e8,%edx
    6bc0:	callq  5350 <memset@plt>
    6bc5:	mov    %rbx,%rdx
    6bc8:	mov    %r15,%rsi
    6bcb:	movl   $0xf4240,-0x1c4(%rbp)
    6bd5:	movl   $0xf4240,-0x1c0(%rbp)
    6bdf:	movl   $0x3e8,-0x1bc(%rbp)
    6be9:	movq   $0x7a1200,-0x1b8(%rbp)
    6bf4:	mov    0x10(%rbp),%rcx
    6bf8:	lea    -0x5e0(%rbp),%rbx
    6bff:	mov    %rbx,%rdi
    6c02:	callq  54d0 <png_set_mem_fn@plt>
    6c07:	mov    %r14,%rcx
    6c0a:	mov    %r13,%rdx
    6c0d:	mov    %r12,%rsi
    6c10:	mov    %rbx,%rdi
    6c13:	callq  5680 <png_set_error_fn@plt>
    6c18:	lea    -0xf8(%rbp),%r12
    6c1f:	mov    %r12,%rdi
    6c22:	callq  5420 <_setjmp@plt>
    6c27:	test   %eax,%eax
    6c29:	je     6c43 <png_create_png_struct+0xc3>
    6c2b:	mov    -0x30(%rbp),%r15
    6c2f:	mov    -0x28(%rbp),%r14
    6c33:	mov    -0x20(%rbp),%r13
    6c37:	mov    -0x18(%rbp),%r12
    6c3b:	mov    -0x10(%rbp),%rbx
    6c3f:	xor    %eax,%eax
    6c41:	leaveq 
    6c42:	retq   
    6c43:	mov    %r12,-0x510(%rbp)
    6c4a:	movq   $0x0,-0x508(%rbp)
    6c55:	mov    0x2b384(%rip),%rax        # 31fe0 <longjmp@GLIBC_2.2.5>
    6c5c:	mov    %rax,-0x518(%rbp)
    6c63:	mov    %rbx,%rdi
    6c66:	mov    -0x8(%rbp),%rsi
    6c6a:	callq  6a50 <png_user_version_check>
    6c6f:	test   %eax,%eax
    6c71:	jne    6c8b <png_create_png_struct+0x10b>
    6c73:	mov    -0x30(%rbp),%r15
    6c77:	mov    -0x28(%rbp),%r14
    6c7b:	mov    -0x20(%rbp),%r13
    6c7f:	mov    -0x18(%rbp),%r12
    6c83:	mov    -0x10(%rbp),%rbx
    6c87:	xor    %eax,%eax
    6c89:	leaveq 
    6c8a:	retq   
    6c8b:	mov    %rbx,%rdi
    6c8e:	mov    $0x4e8,%r12d
    6c94:	mov    %r12,%rsi
    6c97:	callq  5150 <png_malloc_warn@plt>
    6c9c:	test   %rax,%rax
    6c9f:	jne    6cb9 <png_create_png_struct+0x139>
    6ca1:	mov    -0x30(%rbp),%r15
    6ca5:	mov    -0x28(%rbp),%r14
    6ca9:	mov    -0x20(%rbp),%r13
    6cad:	mov    -0x18(%rbp),%r12
    6cb1:	mov    -0x10(%rbp),%rbx
    6cb5:	xor    %eax,%eax
    6cb7:	leaveq 
    6cb8:	retq   
    6cb9:	lea    0x70(%rip),%rcx        # 6d30 <png_zalloc>
    6cc0:	mov    %rcx,-0x460(%rbp)
    6cc7:	lea    0xa2(%rip),%rcx        # 6d70 <png_zfree>
    6cce:	mov    %rcx,-0x458(%rbp)
    6cd5:	mov    %r12,%rdx
    6cd8:	mov    %rax,%r12
    6cdb:	mov    %rbx,%rsi
    6cde:	mov    %r12,-0x450(%rbp)
    6ce5:	movq   $0x0,-0x510(%rbp)
    6cf0:	movq   $0x0,-0x508(%rbp)
    6cfb:	movq   $0x0,-0x518(%rbp)
    6d06:	mov    %r12,%rdi
    6d09:	callq  54c0 <memcpy@plt>
    6d0e:	mov    %r12,%rax
    6d11:	mov    -0x30(%rbp),%r15
    6d15:	mov    -0x28(%rbp),%r14
    6d19:	mov    -0x20(%rbp),%r13
    6d1d:	mov    -0x18(%rbp),%r12
    6d21:	mov    -0x10(%rbp),%rbx
    6d25:	leaveq 
    6d26:	retq   
    6d27:	nopw   0x0(%rax,%rax,1)

0000000000006d30 <png_zalloc>:
    6d30:	push   %rbp
    6d31:	mov    %rsp,%rbp
    6d34:	xor    %eax,%eax
    6d36:	test   %rdi,%rdi
    6d39:	jne    6d3d <png_zalloc+0xd>
    6d3b:	leaveq 
    6d3c:	retq   
    6d3d:	mov    %edx,%ecx
    6d3f:	mov    $0xffffffffffffffff,%rax
    6d46:	xor    %edx,%edx
    6d48:	div    %rcx
    6d4b:	mov    %esi,%edx
    6d4d:	cmp    %rdx,%rax
    6d50:	jbe    6d60 <png_zalloc+0x30>
    6d52:	imul   %rdx,%rcx
    6d56:	mov    %rcx,%rsi
    6d59:	callq  5150 <png_malloc_warn@plt>
    6d5e:	leaveq 
    6d5f:	retq   
    6d60:	lea    0x25fd4(%rip),%rsi        # 2cd3b <short_months.6+0x266>
    6d67:	callq  5390 <png_warning@plt>
    6d6c:	xor    %eax,%eax
    6d6e:	leaveq 
    6d6f:	retq   

0000000000006d70 <png_zfree>:
    6d70:	push   %rbp
    6d71:	mov    %rsp,%rbp
    6d74:	callq  5790 <png_free@plt>
    6d79:	leaveq 
    6d7a:	retq   
    6d7b:	nopl   0x0(%rax,%rax,1)

0000000000006d80 <png_reset_crc>:
    6d80:	push   %rbp
    6d81:	mov    %rsp,%rbp
    6d84:	sub    $0x10,%rsp
    6d88:	mov    %r15,-0x8(%rbp)
    6d8c:	mov    %rdi,%r15
    6d8f:	xor    %edi,%edi
    6d91:	mov    %rdi,%rsi
    6d94:	mov    %rdi,%rdx
    6d97:	callq  51c0 <crc32@plt>
    6d9c:	mov    %eax,0x24c(%r15)
    6da3:	mov    -0x8(%rbp),%r15
    6da7:	leaveq 
    6da8:	retq   
    6da9:	nopl   0x0(%rax)

0000000000006db0 <png_calculate_crc>:
    6db0:	push   %rbp
    6db1:	mov    %rsp,%rbp
    6db4:	sub    $0x30,%rsp
    6db8:	xor    %r8d,%r8d
    6dbb:	mov    $0x1,%ecx
    6dc0:	mov    0x218(%rdi),%eax
    6dc6:	and    $0x20000000,%eax
    6dcb:	test   %eax,%eax
    6dcd:	jne    6de3 <png_calculate_crc+0x33>
    6dcf:	mov    0x130(%rdi),%eax
    6dd5:	and    $0x800,%eax
    6dda:	test   %eax,%eax
    6ddc:	je     6df8 <png_calculate_crc+0x48>
    6dde:	mov    %r8,%rcx
    6de1:	jmp    6df8 <png_calculate_crc+0x48>
    6de3:	mov    0x130(%rdi),%eax
    6de9:	and    $0x300,%eax
    6dee:	cmp    $0x300,%eax
    6df3:	jne    6df8 <png_calculate_crc+0x48>
    6df5:	mov    %r8,%rcx
    6df8:	test   %ecx,%ecx
    6dfa:	jg     6dfe <png_calculate_crc+0x4e>
    6dfc:	leaveq 
    6dfd:	retq   
    6dfe:	test   %rdx,%rdx
    6e01:	jne    6e05 <png_calculate_crc+0x55>
    6e03:	leaveq 
    6e04:	retq   
    6e05:	mov    0x24c(%rdi),%eax
    6e0b:	mov    $0xffffffff,%ecx
    6e10:	mov    %rbx,-0x8(%rbp)
    6e14:	mov    %r12,-0x10(%rbp)
    6e18:	mov    %r13,-0x18(%rbp)
    6e1c:	mov    %r14,-0x20(%rbp)
    6e20:	mov    %r15,-0x28(%rbp)
    6e24:	mov    %rdx,%rbx
    6e27:	mov    %rsi,%r12
    6e2a:	mov    %rdi,%r13
    6e2d:	mov    %rcx,%r14
    6e30:	jmp    6e3b <png_calculate_crc+0x8b>
    6e32:	sub    %rcx,%rbx
    6e35:	mov    %r15d,%ecx
    6e38:	add    %rcx,%r12
    6e3b:	test   %ebx,%ebx
    6e3d:	je     6e44 <png_calculate_crc+0x94>
    6e3f:	mov    %rbx,%r15
    6e42:	jmp    6e47 <png_calculate_crc+0x97>
    6e44:	mov    %r14,%r15
    6e47:	mov    %rax,%rdi
    6e4a:	mov    %r12,%rsi
    6e4d:	mov    %r15,%rdx
    6e50:	callq  51c0 <crc32@plt>
    6e55:	mov    %r15d,%ecx
    6e58:	cmp    %rbx,%rcx
    6e5b:	jne    6e32 <png_calculate_crc+0x82>
    6e5d:	mov    %eax,0x24c(%r13)
    6e64:	mov    -0x28(%rbp),%r15
    6e68:	mov    -0x20(%rbp),%r14
    6e6c:	mov    -0x18(%rbp),%r13
    6e70:	mov    -0x10(%rbp),%r12
    6e74:	mov    -0x8(%rbp),%rbx
    6e78:	leaveq 
    6e79:	retq   
    6e7a:	nopw   0x0(%rax,%rax,1)

0000000000006e80 <png_chunk_unknown_handling>:
    6e80:	push   %rbp
    6e81:	mov    %rsp,%rbp
    6e84:	sub    $0x10,%rsp
    6e88:	mov    %rsi,%rax
    6e8b:	shr    $0x18,%eax
    6e8e:	mov    %al,-0x5(%rbp)
    6e91:	mov    %rsi,%rax
    6e94:	shr    $0x10,%eax
    6e97:	mov    %al,-0x4(%rbp)
    6e9a:	mov    %rsi,%rax
    6e9d:	shr    $0x8,%eax
    6ea0:	mov    %al,-0x3(%rbp)
    6ea3:	mov    %sil,-0x2(%rbp)
    6ea7:	movb   $0x0,-0x1(%rbp)
    6eab:	lea    -0x5(%rbp),%rsi
    6eaf:	callq  5310 <png_handle_as_unknown@plt>
    6eb4:	leaveq 
    6eb5:	retq   
    6eb6:	nopw   %cs:0x0(%rax,%rax,1)

0000000000006ec0 <png_colorspace_set_gamma>:
    6ec0:	push   %rbp
    6ec1:	mov    %rsp,%rbp
    6ec4:	sub    $0x10,%rsp
    6ec8:	mov    $0x1,%ecx
    6ecd:	lea    0x25e8a(%rip),%rax        # 2cd5e <short_months.6+0x289>
    6ed4:	cmp    $0xf,%edx
    6ed7:	jg     6ef3 <png_colorspace_set_gamma+0x33>
    6ed9:	movzwl 0x4a(%rsi),%edx
    6edd:	or     $0x8000,%dx
    6ee2:	mov    %dx,0x4a(%rsi)
    6ee6:	mov    %rcx,%rdx
    6ee9:	mov    %rax,%rsi
    6eec:	callq  b130 <png_chunk_report>
    6ef1:	leaveq 
    6ef2:	retq   
    6ef3:	cmp    $0x2540be40,%edx
    6ef9:	jg     6ed9 <png_colorspace_set_gamma+0x19>
    6efb:	mov    0x12c(%rdi),%eax
    6f01:	and    $0x8000,%eax
    6f06:	test   %eax,%eax
    6f08:	jne    6f19 <png_colorspace_set_gamma+0x59>
    6f0a:	movzwl 0x4a(%rsi),%eax
    6f0e:	and    $0x8000,%eax
    6f13:	test   %eax,%eax
    6f15:	jle    6f2d <png_colorspace_set_gamma+0x6d>
    6f17:	leaveq 
    6f18:	retq   
    6f19:	movzwl 0x4a(%rsi),%eax
    6f1d:	and    $0x8,%eax
    6f20:	test   %eax,%eax
    6f22:	jle    6f0a <png_colorspace_set_gamma+0x4a>
    6f24:	lea    0x25e4c(%rip),%rax        # 2cd77 <short_months.6+0x2a2>
    6f2b:	jmp    6ed9 <png_colorspace_set_gamma+0x19>
    6f2d:	mov    %rsi,%r8
    6f30:	mov    %rdx,%rax
    6f33:	mov    %r15,-0x10(%rbp)
    6f37:	mov    %rdx,-0x8(%rbp)
    6f3b:	mov    %rax,%rdx
    6f3e:	mov    %rsi,%r15
    6f41:	mov    %r8,%rsi
    6f44:	callq  9110 <png_colorspace_check_gamma>
    6f49:	test   %eax,%eax
    6f4b:	jne    6f53 <png_colorspace_set_gamma+0x93>
    6f4d:	mov    -0x10(%rbp),%r15
    6f51:	leaveq 
    6f52:	retq   
    6f53:	mov    -0x8(%rbp),%rax
    6f57:	mov    %eax,(%r15)
    6f5a:	movzwl 0x4a(%r15),%eax
    6f5f:	or     $0x9,%ax
    6f63:	mov    %ax,0x4a(%r15)
    6f68:	mov    -0x10(%rbp),%r15
    6f6c:	leaveq 
    6f6d:	retq   
    6f6e:	xchg   %ax,%ax

0000000000006f70 <png_colorspace_sync_info>:
    6f70:	push   %rbp
    6f71:	mov    %rsp,%rbp
    6f74:	movzwl 0x7e(%rsi),%eax
    6f78:	mov    %rax,%rcx
    6f7b:	and    $0x8000,%ecx
    6f81:	test   %ecx,%ecx
    6f83:	jg     6f9b <png_colorspace_sync_info+0x2b>
    6f85:	and    $0x80,%eax
    6f8a:	test   %eax,%eax
    6f8c:	jg     6fb9 <png_colorspace_sync_info+0x49>
    6f8e:	mov    0x8(%rsi),%eax
    6f91:	and    $0xfffff7ff,%eax
    6f96:	mov    %eax,0x8(%rsi)
    6f99:	jmp    6fc4 <png_colorspace_sync_info+0x54>
    6f9b:	mov    0x8(%rsi),%eax
    6f9e:	and    $0xffffe7fa,%eax
    6fa3:	mov    %eax,0x8(%rsi)
    6fa6:	mov    $0x10,%edx
    6fab:	mov    $0xffffffffffffffff,%rcx
    6fb2:	callq  5720 <png_free_data@plt>
    6fb7:	leaveq 
    6fb8:	retq   
    6fb9:	mov    0x8(%rsi),%eax
    6fbc:	or     $0x800,%eax
    6fc1:	mov    %eax,0x8(%rsi)
    6fc4:	movzwl 0x7e(%rsi),%eax
    6fc8:	and    $0x2,%eax
    6fcb:	test   %eax,%eax
    6fcd:	jg     6fda <png_colorspace_sync_info+0x6a>
    6fcf:	mov    0x8(%rsi),%eax
    6fd2:	and    $0xfffffffb,%eax
    6fd5:	mov    %eax,0x8(%rsi)
    6fd8:	jmp    6fe3 <png_colorspace_sync_info+0x73>
    6fda:	mov    0x8(%rsi),%eax
    6fdd:	or     $0x4,%eax
    6fe0:	mov    %eax,0x8(%rsi)
    6fe3:	movzwl 0x7e(%rsi),%eax
    6fe7:	and    $0x1,%eax
    6fea:	test   %eax,%eax
    6fec:	jg     6ff9 <png_colorspace_sync_info+0x89>
    6fee:	mov    0x8(%rsi),%eax
    6ff1:	and    $0xfffffffe,%eax
    6ff4:	mov    %eax,0x8(%rsi)
    6ff7:	leaveq 
    6ff8:	retq   
    6ff9:	mov    0x8(%rsi),%eax
    6ffc:	or     $0x1,%eax
    6fff:	mov    %eax,0x8(%rsi)
    7002:	leaveq 
    7003:	retq   
    7004:	data16 nopw %cs:0x0(%rax,%rax,1)
    700f:	nop

0000000000007010 <png_colorspace_sync>:
    7010:	push   %rbp
    7011:	mov    %rsp,%rbp
    7014:	sub    $0x10,%rsp
    7018:	test   %rsi,%rsi
    701b:	jne    701f <png_colorspace_sync+0xf>
    701d:	leaveq 
    701e:	retq   
    701f:	lea    0x34(%rsi),%rcx
    7023:	lea    0x498(%rdi),%rax
    702a:	mov    $0x4c,%edx
    702f:	mov    %r14,-0x8(%rbp)
    7033:	mov    %r15,-0x10(%rbp)
    7037:	mov    %rsi,%r14
    703a:	mov    %rax,%rsi
    703d:	mov    %rdi,%r15
    7040:	mov    %rcx,%rdi
    7043:	callq  54c0 <memcpy@plt>
    7048:	mov    %r14,%rsi
    704b:	mov    %r15,%rdi
    704e:	callq  6f70 <png_colorspace_sync_info>
    7053:	mov    -0x10(%rbp),%r15
    7057:	mov    -0x8(%rbp),%r14
    705b:	leaveq 
    705c:	retq   
    705d:	nopl   (%rax)

0000000000007060 <png_colorspace_set_chromaticities>:
    7060:	push   %rbp
    7061:	mov    %rsp,%rbp
    7064:	sub    $0x50,%rsp
    7068:	mov    %r12,-0x8(%rbp)
    706c:	mov    %r13,-0x10(%rbp)
    7070:	mov    %r14,-0x18(%rbp)
    7074:	mov    %r15,-0x20(%rbp)
    7078:	mov    %rdx,%r12
    707b:	mov    %rsi,%r13
    707e:	mov    %rcx,%r14
    7081:	mov    %rdi,%r15
    7084:	lea    -0x44(%rbp),%rdi
    7088:	mov    %r12,%rsi
    708b:	callq  9b20 <png_colorspace_check_xy>
    7090:	test   %eax,%eax
    7092:	je     70b6 <png_colorspace_set_chromaticities+0x56>
    7094:	cmp    $0x1,%eax
    7097:	je     70dd <png_colorspace_set_chromaticities+0x7d>
    7099:	movzwl 0x4a(%r13),%eax
    709e:	or     $0x8000,%ax
    70a2:	mov    %ax,0x4a(%r13)
    70a7:	mov    %r15,%rdi
    70aa:	lea    0x25ce7(%rip),%rsi        # 2cd98 <short_months.6+0x2c3>
    70b1:	callq  5470 <png_error@plt>
    70b6:	mov    %r12,%rdx
    70b9:	mov    %r13,%rsi
    70bc:	mov    %r15,%rdi
    70bf:	mov    %r14,%r8
    70c2:	lea    -0x44(%rbp),%rcx
    70c6:	callq  9bf0 <png_colorspace_set_xy_and_XYZ>
    70cb:	mov    -0x20(%rbp),%r15
    70cf:	mov    -0x18(%rbp),%r14
    70d3:	mov    -0x10(%rbp),%r13
    70d7:	mov    -0x8(%rbp),%r12
    70db:	leaveq 
    70dc:	retq   
    70dd:	movzwl 0x4a(%r13),%eax
    70e2:	or     $0x8000,%ax
    70e6:	mov    %ax,0x4a(%r13)
    70eb:	mov    %r15,%rdi
    70ee:	lea    0x25c8c(%rip),%rsi        # 2cd81 <short_months.6+0x2ac>
    70f5:	callq  5590 <png_benign_error@plt>
    70fa:	xor    %eax,%eax
    70fc:	mov    -0x20(%rbp),%r15
    7100:	mov    -0x18(%rbp),%r14
    7104:	mov    -0x10(%rbp),%r13
    7108:	mov    -0x8(%rbp),%r12
    710c:	leaveq 
    710d:	retq   
    710e:	xchg   %ax,%ax

0000000000007110 <png_colorspace_set_endpoints>:
    7110:	push   %rbp
    7111:	mov    %rsp,%rbp
    7114:	sub    $0x60,%rsp
    7118:	mov    %r13,-0x8(%rbp)
    711c:	mov    %r14,-0x10(%rbp)
    7120:	mov    %r15,-0x18(%rbp)
    7124:	mov    (%rdx),%rax
    7127:	mov    %rax,-0x5c(%rbp)
    712b:	mov    0x8(%rdx),%rax
    712f:	mov    %rax,-0x54(%rbp)
    7133:	mov    0x10(%rdx),%rax
    7137:	mov    %rax,-0x4c(%rbp)
    713b:	mov    0x18(%rdx),%rax
    713f:	mov    %rax,-0x44(%rbp)
    7143:	mov    0x20(%rdx),%eax
    7146:	mov    %eax,-0x3c(%rbp)
    7149:	mov    %rsi,%r13
    714c:	mov    %rdi,%r14
    714f:	mov    %rcx,%r15
    7152:	lea    -0x38(%rbp),%rdi
    7156:	lea    -0x5c(%rbp),%rsi
    715a:	callq  9b70 <png_colorspace_check_XYZ>
    715f:	test   %eax,%eax
    7161:	je     7185 <png_colorspace_set_endpoints+0x75>
    7163:	cmp    $0x1,%eax
    7166:	je     71a9 <png_colorspace_set_endpoints+0x99>
    7168:	movzwl 0x4a(%r13),%eax
    716d:	or     $0x8000,%ax
    7171:	mov    %ax,0x4a(%r13)
    7176:	mov    %r14,%rdi
    7179:	lea    0x25c18(%rip),%rsi        # 2cd98 <short_months.6+0x2c3>
    7180:	callq  5470 <png_error@plt>
    7185:	mov    %r13,%rsi
    7188:	mov    %r14,%rdi
    718b:	mov    %r15,%r8
    718e:	lea    -0x5c(%rbp),%rcx
    7192:	lea    -0x38(%rbp),%rdx
    7196:	callq  9bf0 <png_colorspace_set_xy_and_XYZ>
    719b:	mov    -0x18(%rbp),%r15
    719f:	mov    -0x10(%rbp),%r14
    71a3:	mov    -0x8(%rbp),%r13
    71a7:	leaveq 
    71a8:	retq   
    71a9:	movzwl 0x4a(%r13),%eax
    71ae:	or     $0x8000,%ax
    71b2:	mov    %ax,0x4a(%r13)
    71b7:	mov    %r14,%rdi
    71ba:	lea    0x25bfe(%rip),%rsi        # 2cdbf <short_months.6+0x2ea>
    71c1:	callq  5590 <png_benign_error@plt>
    71c6:	xor    %eax,%eax
    71c8:	mov    -0x18(%rbp),%r15
    71cc:	mov    -0x10(%rbp),%r14
    71d0:	mov    -0x8(%rbp),%r13
    71d4:	leaveq 
    71d5:	retq   
    71d6:	nopw   %cs:0x0(%rax,%rax,1)

00000000000071e0 <png_colorspace_set_sRGB>:
    71e0:	push   %rbp
    71e1:	mov    %rsp,%rbp
    71e4:	sub    $0x20,%rsp
    71e8:	xor    %eax,%eax
    71ea:	movzwl 0x4a(%rsi),%ecx
    71ee:	mov    %rcx,%r8
    71f1:	and    $0x8000,%r8d
    71f8:	test   %r8d,%r8d
    71fb:	jle    71ff <png_colorspace_set_sRGB+0x1f>
    71fd:	leaveq 
    71fe:	retq   
    71ff:	lea    0x25bcc(%rip),%r9        # 2cdd2 <short_months.6+0x2fd>
    7206:	test   %edx,%edx
    7208:	js     7306 <png_colorspace_set_sRGB+0x126>
    720e:	cmp    $0x3,%edx
    7211:	jg     7306 <png_colorspace_set_sRGB+0x126>
    7217:	and    $0x4,%ecx
    721a:	test   %ecx,%ecx
    721c:	jg     731a <png_colorspace_set_sRGB+0x13a>
    7222:	movzwl 0x4a(%rsi),%eax
    7226:	mov    %rax,%rcx
    7229:	and    $0x20,%ecx
    722c:	test   %ecx,%ecx
    722e:	jg     733a <png_colorspace_set_sRGB+0x15a>
    7234:	mov    $0x2,%ecx
    7239:	and    $0x2,%eax
    723c:	test   %eax,%eax
    723e:	jg     734a <png_colorspace_set_sRGB+0x16a>
    7244:	mov    $0xb18f,%eax
    7249:	mov    %rsi,%r8
    724c:	mov    %r14,-0x10(%rbp)
    7250:	mov    %r15,-0x18(%rbp)
    7254:	mov    %rsi,%r14
    7257:	mov    %r8,%rsi
    725a:	mov    %rdx,%r15
    725d:	mov    %rax,%rdx
    7260:	callq  9110 <png_colorspace_check_gamma>
    7265:	mov    %r15w,0x48(%r14)
    726a:	movl   $0xb18f,(%r14)
    7271:	movzwl 0x4a(%r14),%eax
    7276:	or     $0xe7,%ax
    727a:	mov    %ax,0x4a(%r14)
    727f:	movabs $0x80e80000fa00,%rax
    7289:	mov    %rax,0x4(%r14)
    728d:	movabs $0xea6000007530,%rax
    7297:	mov    %rax,0xc(%r14)
    729b:	movabs $0x177000003a98,%rax
    72a5:	mov    %rax,0x14(%r14)
    72a9:	movabs $0x808400007a26,%rax
    72b3:	mov    %rax,0x1c(%r14)
    72b7:	movabs $0x53100000a117,%rax
    72c1:	mov    %rax,0x24(%r14)
    72c5:	movabs $0x8bae0000078d,%rax
    72cf:	mov    %rax,0x2c(%r14)
    72d3:	movabs $0x2e8f0001175d,%rax
    72dd:	mov    %rax,0x34(%r14)
    72e1:	movabs $0x1c3300004680,%rax
    72eb:	mov    %rax,0x3c(%r14)
    72ef:	movl   $0x1734d,0x44(%r14)
    72f7:	mov    $0x1,%eax
    72fc:	mov    -0x18(%rbp),%r15
    7300:	mov    -0x10(%rbp),%r14
    7304:	leaveq 
    7305:	retq   
    7306:	movslq %edx,%rcx
    7309:	mov    %r9,%rdx
    730c:	lea    0x25ac4(%rip),%r8        # 2cdd7 <short_months.6+0x302>
    7313:	callq  9f00 <png_icc_profile_error>
    7318:	leaveq 
    7319:	retq   
    731a:	movzwl 0x48(%rsi),%eax
    731e:	cmp    %eax,%edx
    7320:	je     7222 <png_colorspace_set_sRGB+0x42>
    7326:	movslq %edx,%rcx
    7329:	mov    %r9,%rdx
    732c:	lea    0x25ac2(%rip),%r8        # 2cdf5 <short_months.6+0x320>
    7333:	callq  9f00 <png_icc_profile_error>
    7338:	leaveq 
    7339:	retq   
    733a:	lea    0x25ad3(%rip),%rsi        # 2ce14 <short_months.6+0x33f>
    7341:	callq  5590 <png_benign_error@plt>
    7346:	xor    %eax,%eax
    7348:	leaveq 
    7349:	retq   
    734a:	lea    0x2563b(%rip),%r8        # 2c98c <sRGB_xy>
    7351:	lea    0x4(%rsi),%rax
    7355:	mov    $0x64,%ecx
    735a:	mov    %r13,-0x8(%rbp)
    735e:	mov    %r14,-0x10(%rbp)
    7362:	mov    %r15,-0x18(%rbp)
    7366:	mov    %rsi,%r13
    7369:	mov    %rax,%rsi
    736c:	mov    %rdx,%r14
    736f:	mov    %rcx,%rdx
    7372:	mov    %rdi,%r15
    7375:	mov    %r8,%rdi
    7378:	callq  9a10 <png_colorspace_endpoints_match>
    737d:	test   %eax,%eax
    737f:	je     73a0 <png_colorspace_set_sRGB+0x1c0>
    7381:	mov    %r14,%rdx
    7384:	mov    %r13,%rsi
    7387:	mov    %r15,%rdi
    738a:	mov    $0x2,%ecx
    738f:	mov    -0x18(%rbp),%r15
    7393:	mov    -0x10(%rbp),%r14
    7397:	mov    -0x8(%rbp),%r13
    739b:	jmpq   7244 <png_colorspace_set_sRGB+0x64>
    73a0:	lea    0x25a90(%rip),%rsi        # 2ce37 <short_months.6+0x362>
    73a7:	mov    %r15,%rdi
    73aa:	mov    $0x2,%edx
    73af:	callq  b130 <png_chunk_report>
    73b4:	mov    %r14,%rdx
    73b7:	mov    %r13,%rsi
    73ba:	mov    %r15,%rdi
    73bd:	mov    $0x2,%ecx
    73c2:	mov    -0x18(%rbp),%r15
    73c6:	mov    -0x10(%rbp),%r14
    73ca:	mov    -0x8(%rbp),%r13
    73ce:	jmpq   7244 <png_colorspace_set_sRGB+0x64>
    73d3:	data16 nopw %cs:0x0(%rax,%rax,1)
    73de:	xchg   %ax,%ax

00000000000073e0 <png_colorspace_set_ICC>:
    73e0:	push   %rbp
    73e1:	mov    %rsp,%rbp
    73e4:	sub    $0x30,%rsp
    73e8:	xor    %eax,%eax
    73ea:	movzwl 0x4a(%rsi),%r10d
    73ef:	and    $0x8000,%r10d
    73f6:	test   %r10d,%r10d
    73f9:	jle    73fd <png_colorspace_set_ICC+0x1d>
    73fb:	leaveq 
    73fc:	retq   
    73fd:	mov    %rdi,%r10
    7400:	mov    %rsi,%r11
    7403:	mov    %rdx,%rax
    7406:	mov    %r9,-0x30(%rbp)
    740a:	mov    %rcx,%r9
    740d:	mov    %rdi,-0x8(%rbp)
    7411:	mov    %rsi,-0x10(%rbp)
    7415:	mov    %rdx,-0x18(%rbp)
    7419:	mov    %rcx,-0x20(%rbp)
    741d:	mov    %r8,-0x28(%rbp)
    7421:	mov    %r9,%rcx
    7424:	mov    %rax,%rdx
    7427:	mov    %r11,%rsi
    742a:	mov    %r10,%rdi
    742d:	callq  a060 <icc_check_length>
    7432:	test   %eax,%eax
    7434:	jne    743a <png_colorspace_set_ICC+0x5a>
    7436:	xor    %eax,%eax
    7438:	leaveq 
    7439:	retq   
    743a:	mov    -0x8(%rbp),%rdi
    743e:	mov    -0x10(%rbp),%rsi
    7442:	mov    -0x18(%rbp),%rdx
    7446:	mov    -0x20(%rbp),%rcx
    744a:	mov    -0x28(%rbp),%r8
    744e:	mov    -0x30(%rbp),%r9
    7452:	callq  7520 <png_icc_check_header>
    7457:	test   %eax,%eax
    7459:	jne    745f <png_colorspace_set_ICC+0x7f>
    745b:	xor    %eax,%eax
    745d:	leaveq 
    745e:	retq   
    745f:	mov    -0x8(%rbp),%rdi
    7463:	mov    -0x10(%rbp),%rsi
    7467:	mov    -0x28(%rbp),%r8
    746b:	mov    -0x20(%rbp),%rcx
    746f:	mov    -0x18(%rbp),%rdx
    7473:	callq  79c0 <png_icc_check_tag_table>
    7478:	test   %eax,%eax
    747a:	jne    7480 <png_colorspace_set_ICC+0xa0>
    747c:	xor    %eax,%eax
    747e:	leaveq 
    747f:	retq   
    7480:	mov    -0x28(%rbp),%rdx
    7484:	mov    -0x10(%rbp),%rsi
    7488:	mov    -0x8(%rbp),%rdi
    748c:	xor    %ecx,%ecx
    748e:	callq  7b30 <png_icc_set_sRGB>
    7493:	mov    $0x1,%eax
    7498:	leaveq 
    7499:	retq   
    749a:	nopw   0x0(%rax,%rax,1)

00000000000074a0 <png_icc_check_length>:
    74a0:	push   %rbp
    74a1:	mov    %rsp,%rbp
    74a4:	sub    $0x20,%rsp
    74a8:	mov    %r15,-0x18(%rbp)
    74ac:	mov    %rcx,-0x20(%rbp)
    74b0:	mov    %rsi,-0x8(%rbp)
    74b4:	mov    %rdx,-0x10(%rbp)
    74b8:	mov    %rdi,%r15
    74bb:	callq  a060 <icc_check_length>
    74c0:	test   %eax,%eax
    74c2:	jne    74cc <png_icc_check_length+0x2c>
    74c4:	xor    %eax,%eax
    74c6:	mov    -0x18(%rbp),%r15
    74ca:	leaveq 
    74cb:	retq   
    74cc:	mov    $0x1,%eax
    74d1:	mov    0x428(%r15),%rdx
    74d8:	test   %rdx,%rdx
    74db:	jne    74e3 <png_icc_check_length+0x43>
    74dd:	mov    -0x18(%rbp),%r15
    74e1:	leaveq 
    74e2:	retq   
    74e3:	mov    -0x20(%rbp),%rcx
    74e7:	mov    %ecx,%ecx
    74e9:	cmp    %rcx,%rdx
    74ec:	jb     74f4 <png_icc_check_length+0x54>
    74ee:	mov    -0x18(%rbp),%r15
    74f2:	leaveq 
    74f3:	retq   
    74f4:	mov    %r15,%rdi
    74f7:	lea    0x25958(%rip),%r8        # 2ce56 <short_months.6+0x381>
    74fe:	mov    -0x10(%rbp),%rdx
    7502:	mov    -0x8(%rbp),%rsi
    7506:	callq  9f00 <png_icc_profile_error>
    750b:	mov    -0x18(%rbp),%r15
    750f:	leaveq 
    7510:	retq   
    7511:	data16 nopw %cs:0x0(%rax,%rax,1)
    751c:	nopl   0x0(%rax)

0000000000007520 <png_icc_check_header>:
    7520:	push   %rbp
    7521:	mov    %rsp,%rbp
    7524:	sub    $0x30,%rsp
    7528:	movzbl (%r8),%eax
    752c:	shl    $0x18,%eax
    752f:	movzbl 0x1(%r8),%r10d
    7534:	shl    $0x10,%r10d
    7538:	add    %eax,%r10d
    753b:	movzbl 0x2(%r8),%eax
    7540:	shl    $0x8,%eax
    7543:	add    %r10d,%eax
    7546:	movzbl 0x3(%r8),%r10d
    754b:	add    %r10d,%eax
    754e:	cmp    %ecx,%eax
    7550:	jne    7736 <png_icc_check_header+0x216>
    7556:	movzbl 0x8(%r8),%eax
    755b:	cmp    $0x3,%al
    755d:	ja     7746 <png_icc_check_header+0x226>
    7563:	movzbl 0x80(%r8),%eax
    756b:	shl    $0x18,%eax
    756e:	movzbl 0x81(%r8),%r10d
    7576:	shl    $0x10,%r10d
    757a:	add    %eax,%r10d
    757d:	movzbl 0x82(%r8),%eax
    7585:	shl    $0x8,%eax
    7588:	add    %r10d,%eax
    758b:	movzbl 0x83(%r8),%r10d
    7593:	add    %eax,%r10d
    7596:	cmp    $0x1555554a,%r10d
    759d:	ja     7764 <png_icc_check_header+0x244>
    75a3:	lea    (%r10,%r10,2),%eax
    75a7:	lea    0x84(,%rax,4),%eax
    75ae:	cmp    %eax,%ecx
    75b0:	jb     7764 <png_icc_check_header+0x244>
    75b6:	movzbl 0x40(%r8),%eax
    75bb:	shl    $0x18,%eax
    75be:	movzbl 0x41(%r8),%ecx
    75c3:	shl    $0x10,%ecx
    75c6:	add    %eax,%ecx
    75c8:	movzbl 0x42(%r8),%eax
    75cd:	shl    $0x8,%eax
    75d0:	add    %ecx,%eax
    75d2:	movzbl 0x43(%r8),%ecx
    75d7:	add    %eax,%ecx
    75d9:	cmp    $0xfffe,%ecx
    75df:	ja     7775 <png_icc_check_header+0x255>
    75e5:	xor    %eax,%eax
    75e7:	cmp    $0x3,%ecx
    75ea:	jbe    7649 <png_icc_check_header+0x129>
    75ec:	mov    %ecx,%ecx
    75ee:	mov    %rdi,%r10
    75f1:	mov    %rdx,%r11
    75f4:	mov    %r9,-0x28(%rbp)
    75f8:	mov    %r12,-0x8(%rbp)
    75fc:	mov    %r13,-0x10(%rbp)
    7600:	mov    %r14,-0x18(%rbp)
    7604:	mov    %r15,-0x20(%rbp)
    7608:	mov    %r8,%r12
    760b:	mov    %rdi,%r13
    760e:	mov    %r10,%rdi
    7611:	mov    %rdx,%r14
    7614:	mov    %r11,%rdx
    7617:	mov    %rsi,%r15
    761a:	mov    %rax,%rsi
    761d:	lea    0x258a7(%rip),%r8        # 2cecb <short_months.6+0x3f6>
    7624:	callq  9f00 <png_icc_profile_error>
    7629:	mov    %r14,%rdx
    762c:	mov    %r15,%rsi
    762f:	mov    %r13,%rdi
    7632:	mov    %r12,%r8
    7635:	mov    -0x20(%rbp),%r15
    7639:	mov    -0x18(%rbp),%r14
    763d:	mov    -0x10(%rbp),%r13
    7641:	mov    -0x8(%rbp),%r12
    7645:	mov    -0x28(%rbp),%r9
    7649:	movzbl 0x24(%r8),%eax
    764e:	shl    $0x18,%eax
    7651:	movzbl 0x25(%r8),%ecx
    7656:	shl    $0x10,%ecx
    7659:	add    %eax,%ecx
    765b:	movzbl 0x26(%r8),%eax
    7660:	shl    $0x8,%eax
    7663:	add    %ecx,%eax
    7665:	movzbl 0x27(%r8),%ecx
    766a:	add    %ecx,%eax
    766c:	cmp    $0x61637370,%eax
    7671:	jne    7785 <png_icc_check_header+0x265>
    7677:	lea    0x44(%r8),%rax
    767b:	lea    0x2532a(%rip),%rcx        # 2c9ac <D50_nCIEXYZ>
    7682:	mov    $0xc,%r10d
    7688:	mov    %r12,-0x10(%rbp)
    768c:	mov    %r13,-0x18(%rbp)
    7690:	mov    %r14,-0x20(%rbp)
    7694:	mov    %r15,-0x28(%rbp)
    7698:	mov    %rbx,-0x8(%rbp)
    769c:	mov    %r8,%rbx
    769f:	mov    %r9,%r12
    76a2:	mov    %rsi,%r13
    76a5:	mov    %rcx,%rsi
    76a8:	mov    %rdx,%r14
    76ab:	mov    %r10,%rdx
    76ae:	mov    %rdi,%r15
    76b1:	mov    %rax,%rdi
    76b4:	callq  53d0 <memcmp@plt>
    76b9:	test   %eax,%eax
    76bb:	je     76d4 <png_icc_check_header+0x1b4>
    76bd:	lea    0x25836(%rip),%r8        # 2cefa <short_months.6+0x425>
    76c4:	xor    %esi,%esi
    76c6:	mov    %rsi,%rcx
    76c9:	mov    %r15,%rdi
    76cc:	mov    %r14,%rdx
    76cf:	callq  9f00 <png_icc_profile_error>
    76d4:	movzbl 0x10(%rbx),%ecx
    76d8:	shl    $0x18,%ecx
    76db:	movzbl 0x11(%rbx),%eax
    76df:	shl    $0x10,%eax
    76e2:	add    %eax,%ecx
    76e4:	movzbl 0x12(%rbx),%eax
    76e8:	shl    $0x8,%eax
    76eb:	add    %eax,%ecx
    76ed:	movzbl 0x13(%rbx),%eax
    76f1:	add    %ecx,%eax
    76f3:	cmp    $0x47524159,%eax
    76f8:	je     7795 <png_icc_check_header+0x275>
    76fe:	cmp    $0x52474220,%eax
    7703:	je     77f2 <png_icc_check_header+0x2d2>
    7709:	mov    %eax,%ecx
    770b:	mov    %r14,%rdx
    770e:	mov    %r13,%rsi
    7711:	mov    %r15,%rdi
    7714:	lea    0x25852(%rip),%r8        # 2cf6d <short_months.6+0x498>
    771b:	callq  9f00 <png_icc_profile_error>
    7720:	mov    -0x8(%rbp),%rbx
    7724:	mov    -0x28(%rbp),%r15
    7728:	mov    -0x20(%rbp),%r14
    772c:	mov    -0x18(%rbp),%r13
    7730:	mov    -0x10(%rbp),%r12
    7734:	leaveq 
    7735:	retq   
    7736:	mov    %eax,%ecx
    7738:	lea    0x25732(%rip),%r8        # 2ce71 <short_months.6+0x39c>
    773f:	callq  9f00 <png_icc_profile_error>
    7744:	leaveq 
    7745:	retq   
    7746:	mov    %rcx,%rax
    7749:	and    $0x3,%eax
    774c:	test   %eax,%eax
    774e:	je     7563 <png_icc_check_header+0x43>
    7754:	mov    %ecx,%ecx
    7756:	lea    0x25732(%rip),%r8        # 2ce8f <short_months.6+0x3ba>
    775d:	callq  9f00 <png_icc_profile_error>
    7762:	leaveq 
    7763:	retq   
    7764:	mov    %r10d,%ecx
    7767:	lea    0x25730(%rip),%r8        # 2ce9e <short_months.6+0x3c9>
    776e:	callq  9f00 <png_icc_profile_error>
    7773:	leaveq 
    7774:	retq   
    7775:	mov    %ecx,%ecx
    7777:	lea    0x25734(%rip),%r8        # 2ceb2 <short_months.6+0x3dd>
    777e:	callq  9f00 <png_icc_profile_error>
    7783:	leaveq 
    7784:	retq   
    7785:	mov    %eax,%ecx
    7787:	lea    0x2575a(%rip),%r8        # 2cee8 <short_months.6+0x413>
    778e:	callq  9f00 <png_icc_profile_error>
    7793:	leaveq 
    7794:	retq   
    7795:	and    $0x2,%r12d
    7799:	test   %r12d,%r12d
    779c:	jg     782b <png_icc_check_header+0x30b>
    77a2:	movzbl 0xc(%rbx),%eax
    77a6:	shl    $0x18,%eax
    77a9:	movzbl 0xd(%rbx),%ecx
    77ad:	shl    $0x10,%ecx
    77b0:	add    %eax,%ecx
    77b2:	movzbl 0xe(%rbx),%eax
    77b6:	shl    $0x8,%eax
    77b9:	add    %ecx,%eax
    77bb:	movzbl 0xf(%rbx),%ecx
    77bf:	add    %ecx,%eax
    77c1:	cmp    $0x6e6d636b,%eax
    77c6:	jbe    785b <png_icc_check_header+0x33b>
    77cc:	cmp    $0x73636e71,%eax
    77d1:	jbe    7876 <png_icc_check_header+0x356>
    77d7:	cmp    $0x73636e72,%eax
    77dc:	je     78ab <png_icc_check_header+0x38b>
    77e2:	cmp    $0x73706163,%eax
    77e7:	je     78ab <png_icc_check_header+0x38b>
    77ed:	jmpq   7895 <png_icc_check_header+0x375>
    77f2:	and    $0x2,%r12d
    77f6:	test   %r12d,%r12d
    77f9:	jne    77a2 <png_icc_check_header+0x282>
    77fb:	mov    %r14,%rdx
    77fe:	mov    %r13,%rsi
    7801:	mov    %r15,%rdi
    7804:	mov    $0x52474220,%ecx
    7809:	lea    0x25704(%rip),%r8        # 2cf14 <short_months.6+0x43f>
    7810:	callq  9f00 <png_icc_profile_error>
    7815:	mov    -0x8(%rbp),%rbx
    7819:	mov    -0x28(%rbp),%r15
    781d:	mov    -0x20(%rbp),%r14
    7821:	mov    -0x18(%rbp),%r13
    7825:	mov    -0x10(%rbp),%r12
    7829:	leaveq 
    782a:	retq   
    782b:	mov    %r14,%rdx
    782e:	mov    %r13,%rsi
    7831:	mov    %r15,%rdi
    7834:	mov    $0x47524159,%ecx
    7839:	lea    0x25703(%rip),%r8        # 2cf43 <short_months.6+0x46e>
    7840:	callq  9f00 <png_icc_profile_error>
    7845:	mov    -0x8(%rbp),%rbx
    7849:	mov    -0x28(%rbp),%r15
    784d:	mov    -0x20(%rbp),%r14
    7851:	mov    -0x18(%rbp),%r13
    7855:	mov    -0x10(%rbp),%r12
    7859:	leaveq 
    785a:	retq   
    785b:	cmp    $0x6c696e6a,%eax
    7860:	jbe    788a <png_icc_check_header+0x36a>
    7862:	cmp    $0x6c696e6b,%eax
    7867:	je     78f1 <png_icc_check_header+0x3d1>
    786d:	cmp    $0x6d6e7472,%eax
    7872:	je     78ab <png_icc_check_header+0x38b>
    7874:	jmp    7895 <png_icc_check_header+0x375>
    7876:	cmp    $0x6e6d636c,%eax
    787b:	je     7921 <png_icc_check_header+0x401>
    7881:	cmp    $0x70727472,%eax
    7886:	je     78ab <png_icc_check_header+0x38b>
    7888:	jmp    7895 <png_icc_check_header+0x375>
    788a:	cmp    $0x61627374,%eax
    788f:	je     793f <png_icc_check_header+0x41f>
    7895:	mov    %eax,%ecx
    7897:	lea    0x25765(%rip),%r8        # 2d003 <short_months.6+0x52e>
    789e:	mov    %r15,%rdi
    78a1:	mov    %r14,%rdx
    78a4:	xor    %esi,%esi
    78a6:	callq  9f00 <png_icc_profile_error>
    78ab:	mov    $0x1,%eax
    78b0:	movzbl 0x14(%rbx),%edx
    78b4:	shl    $0x18,%edx
    78b7:	movzbl 0x15(%rbx),%ecx
    78bb:	shl    $0x10,%ecx
    78be:	add    %ecx,%edx
    78c0:	movzbl 0x16(%rbx),%ecx
    78c4:	shl    $0x8,%ecx
    78c7:	add    %edx,%ecx
    78c9:	movzbl 0x17(%rbx),%edx
    78cd:	add    %edx,%ecx
    78cf:	cmp    $0x4c616220,%ecx
    78d5:	jne    796f <png_icc_check_header+0x44f>
    78db:	mov    -0x8(%rbp),%rbx
    78df:	mov    -0x28(%rbp),%r15
    78e3:	mov    -0x20(%rbp),%r14
    78e7:	mov    -0x18(%rbp),%r13
    78eb:	mov    -0x10(%rbp),%r12
    78ef:	leaveq 
    78f0:	retq   
    78f1:	mov    %r14,%rdx
    78f4:	mov    %r13,%rsi
    78f7:	mov    %r15,%rdi
    78fa:	mov    $0x6c696e6b,%ecx
    78ff:	lea    0x256ad(%rip),%r8        # 2cfb3 <short_months.6+0x4de>
    7906:	callq  9f00 <png_icc_profile_error>
    790b:	mov    -0x8(%rbp),%rbx
    790f:	mov    -0x28(%rbp),%r15
    7913:	mov    -0x20(%rbp),%r14
    7917:	mov    -0x18(%rbp),%r13
    791b:	mov    -0x10(%rbp),%r12
    791f:	leaveq 
    7920:	retq   
    7921:	mov    $0x6e6d636c,%ecx
    7926:	lea    0x256ae(%rip),%r8        # 2cfdb <short_months.6+0x506>
    792d:	mov    %r15,%rdi
    7930:	mov    %r14,%rdx
    7933:	xor    %esi,%esi
    7935:	callq  9f00 <png_icc_profile_error>
    793a:	jmpq   78ab <png_icc_check_header+0x38b>
    793f:	mov    %r14,%rdx
    7942:	mov    %r13,%rsi
    7945:	mov    %r15,%rdi
    7948:	mov    $0x61627374,%ecx
    794d:	lea    0x25639(%rip),%r8        # 2cf8d <short_months.6+0x4b8>
    7954:	callq  9f00 <png_icc_profile_error>
    7959:	mov    -0x8(%rbp),%rbx
    795d:	mov    -0x28(%rbp),%r15
    7961:	mov    -0x20(%rbp),%r14
    7965:	mov    -0x18(%rbp),%r13
    7969:	mov    -0x10(%rbp),%r12
    796d:	leaveq 
    796e:	retq   
    796f:	cmp    $0x58595a20,%ecx
    7975:	jne    798d <png_icc_check_header+0x46d>
    7977:	mov    -0x8(%rbp),%rbx
    797b:	mov    -0x28(%rbp),%r15
    797f:	mov    -0x20(%rbp),%r14
    7983:	mov    -0x18(%rbp),%r13
    7987:	mov    -0x10(%rbp),%r12
    798b:	leaveq 
    798c:	retq   
    798d:	mov    %ecx,%ecx
    798f:	mov    %r14,%rdx
    7992:	mov    %r13,%rsi
    7995:	mov    %r15,%rdi
    7998:	lea    0x25683(%rip),%r8        # 2d022 <short_months.6+0x54d>
    799f:	callq  9f00 <png_icc_profile_error>
    79a4:	mov    -0x8(%rbp),%rbx
    79a8:	mov    -0x28(%rbp),%r15
    79ac:	mov    -0x20(%rbp),%r14
    79b0:	mov    -0x18(%rbp),%r13
    79b4:	mov    -0x10(%rbp),%r12
    79b8:	leaveq 
    79b9:	retq   
    79ba:	nopw   0x0(%rax,%rax,1)

00000000000079c0 <png_icc_check_tag_table>:
    79c0:	push   %rbp
    79c1:	mov    %rsp,%rbp
    79c4:	sub    $0x40,%rsp
    79c8:	mov    %rdx,-0x38(%rbp)
    79cc:	mov    %rsi,-0x8(%rbp)
    79d0:	mov    %rbx,-0x10(%rbp)
    79d4:	mov    %r12,-0x18(%rbp)
    79d8:	mov    %r13,-0x20(%rbp)
    79dc:	mov    %r14,-0x28(%rbp)
    79e0:	mov    %r15,-0x30(%rbp)
    79e4:	movzbl 0x80(%r8),%esi
    79ec:	shl    $0x18,%esi
    79ef:	movzbl 0x81(%r8),%eax
    79f7:	shl    $0x10,%eax
    79fa:	add    %eax,%esi
    79fc:	movzbl 0x82(%r8),%eax
    7a04:	shl    $0x8,%eax
    7a07:	add    %esi,%eax
    7a09:	movzbl 0x83(%r8),%esi
    7a11:	lea    (%rsi,%rax,1),%r13d
    7a15:	lea    0x84(%r8),%r12
    7a1c:	mov    %rdi,%rbx
    7a1f:	mov    %rcx,%r14
    7a22:	xor    %esi,%esi
    7a24:	mov    %rsi,%r15
    7a27:	jmpq   7adc <png_icc_check_tag_table+0x11c>
    7a2c:	movzbl 0x8(%r12),%edi
    7a32:	movzbl 0x9(%r12),%r8d
    7a38:	movzbl 0xa(%r12),%r9d
    7a3e:	movzbl 0xb(%r12),%r11d
    7a44:	movzbl (%r12),%eax
    7a49:	shl    $0x18,%eax
    7a4c:	movzbl 0x1(%r12),%ecx
    7a52:	shl    $0x10,%ecx
    7a55:	add    %eax,%ecx
    7a57:	movzbl 0x2(%r12),%eax
    7a5d:	shl    $0x8,%eax
    7a60:	add    %ecx,%eax
    7a62:	movzbl 0x3(%r12),%ecx
    7a68:	lea    (%rcx,%rax,1),%r10d
    7a6c:	movzbl 0x4(%r12),%eax
    7a72:	shl    $0x18,%eax
    7a75:	movzbl 0x5(%r12),%ecx
    7a7b:	shl    $0x10,%ecx
    7a7e:	add    %eax,%ecx
    7a80:	movzbl 0x6(%r12),%eax
    7a86:	shl    $0x8,%eax
    7a89:	add    %eax,%ecx
    7a8b:	movzbl 0x7(%r12),%eax
    7a91:	add    %ecx,%eax
    7a93:	cmp    %r14d,%eax
    7a96:	ja     7b00 <png_icc_check_tag_table+0x140>
    7a98:	mov    %r14,%rcx
    7a9b:	sub    %eax,%ecx
    7a9d:	shl    $0x18,%edi
    7aa0:	shl    $0x10,%r8d
    7aa4:	add    %r8d,%edi
    7aa7:	shl    $0x8,%r9d
    7aab:	add    %r9d,%edi
    7aae:	add    %r11d,%edi
    7ab1:	cmp    %edi,%ecx
    7ab3:	jb     7b00 <png_icc_check_tag_table+0x140>
    7ab5:	and    $0x3,%eax
    7ab8:	test   %eax,%eax
    7aba:	je     7ad4 <png_icc_check_tag_table+0x114>
    7abc:	mov    %r10d,%ecx
    7abf:	mov    %rbx,%rdi
    7ac2:	lea    0x25595(%rip),%r8        # 2d05e <short_months.6+0x589>
    7ac9:	callq  9f00 <png_icc_profile_error>
    7ace:	xor    %esi,%esi
    7ad0:	mov    -0x38(%rbp),%rdx
    7ad4:	add    $0xc,%r12
    7ad8:	add    $0x1,%r15d
    7adc:	cmp    %r13d,%r15d
    7adf:	jb     7a2c <png_icc_check_tag_table+0x6c>
    7ae5:	mov    $0x1,%eax
    7aea:	mov    -0x30(%rbp),%r15
    7aee:	mov    -0x28(%rbp),%r14
    7af2:	mov    -0x20(%rbp),%r13
    7af6:	mov    -0x18(%rbp),%r12
    7afa:	mov    -0x10(%rbp),%rbx
    7afe:	leaveq 
    7aff:	retq   
    7b00:	mov    %r10d,%ecx
    7b03:	mov    %rbx,%rdi
    7b06:	lea    0x25531(%rip),%r8        # 2d03e <short_months.6+0x569>
    7b0d:	mov    -0x8(%rbp),%rsi
    7b11:	callq  9f00 <png_icc_profile_error>
    7b16:	mov    -0x30(%rbp),%r15
    7b1a:	mov    -0x28(%rbp),%r14
    7b1e:	mov    -0x20(%rbp),%r13
    7b22:	mov    -0x18(%rbp),%r12
    7b26:	mov    -0x10(%rbp),%rbx
    7b2a:	leaveq 
    7b2b:	retq   
    7b2c:	nopl   0x0(%rax)

0000000000007b30 <png_icc_set_sRGB>:
    7b30:	push   %rbp
    7b31:	mov    %rsp,%rbp
    7b34:	sub    $0x20,%rsp
    7b38:	mov    %rdx,-0x18(%rbp)
    7b3c:	mov    %rdi,-0x8(%rbp)
    7b40:	mov    %rsi,-0x10(%rbp)
    7b44:	mov    %rdx,%rsi
    7b47:	mov    %rcx,%rdx
    7b4a:	callq  a090 <png_compare_ICC_profile_with_sRGB>
    7b4f:	test   %eax,%eax
    7b51:	jne    7b55 <png_icc_set_sRGB+0x25>
    7b53:	leaveq 
    7b54:	retq   
    7b55:	mov    -0x18(%rbp),%rdx
    7b59:	movzbl 0x40(%rdx),%eax
    7b5d:	shl    $0x18,%eax
    7b60:	movzbl 0x41(%rdx),%ecx
    7b64:	shl    $0x10,%ecx
    7b67:	add    %eax,%ecx
    7b69:	movzbl 0x42(%rdx),%eax
    7b6d:	shl    $0x8,%eax
    7b70:	add    %ecx,%eax
    7b72:	movzbl 0x43(%rdx),%ecx
    7b76:	lea    (%rcx,%rax,1),%edx
    7b79:	mov    -0x10(%rbp),%rsi
    7b7d:	mov    -0x8(%rbp),%rdi
    7b81:	callq  71e0 <png_colorspace_set_sRGB>
    7b86:	leaveq 
    7b87:	retq   
    7b88:	nopl   0x0(%rax,%rax,1)

0000000000007b90 <png_colorspace_set_rgb_coefficients>:
    7b90:	push   %rbp
    7b91:	mov    %rsp,%rbp
    7b94:	sub    $0x30,%rsp
    7b98:	movzbl 0x3d1(%rdi),%eax
    7b9f:	test   %al,%al
    7ba1:	je     7ba5 <png_colorspace_set_rgb_coefficients+0x15>
    7ba3:	leaveq 
    7ba4:	retq   
    7ba5:	movzwl 0x4e2(%rdi),%eax
    7bac:	and    $0x2,%eax
    7baf:	test   %eax,%eax
    7bb1:	jg     7bb5 <png_colorspace_set_rgb_coefficients+0x25>
    7bb3:	leaveq 
    7bb4:	retq   
    7bb5:	movslq 0x4c0(%rdi),%rsi
    7bbc:	mov    %esi,-0x24(%rbp)
    7bbf:	movslq 0x4cc(%rdi),%rax
    7bc6:	mov    %eax,-0x20(%rbp)
    7bc9:	movslq 0x4d8(%rdi),%rcx
    7bd0:	mov    %ecx,-0x1c(%rbp)
    7bd3:	add    %esi,%eax
    7bd5:	add    %ecx,%eax
    7bd7:	test   %eax,%eax
    7bd9:	jg     7be7 <png_colorspace_set_rgb_coefficients+0x57>
    7bdb:	lea    0x254d0(%rip),%rsi        # 2d0b2 <short_months.6+0x5dd>
    7be2:	callq  5470 <png_error@plt>
    7be7:	test   %esi,%esi
    7be9:	js     7bdb <png_colorspace_set_rgb_coefficients+0x4b>
    7beb:	lea    -0x24(%rbp),%r9
    7bef:	mov    $0x8000,%r8d
    7bf5:	mov    %r8,%rdx
    7bf8:	mov    %rax,%rcx
    7bfb:	mov    %r13,-0x8(%rbp)
    7bff:	mov    %r14,-0x10(%rbp)
    7c03:	mov    %r15,-0x18(%rbp)
    7c07:	mov    %rax,%r13
    7c0a:	mov    %r8,%r14
    7c0d:	mov    %rdi,%r15
    7c10:	mov    %r9,%rdi
    7c13:	callq  8970 <png_muldiv>
    7c18:	test   %eax,%eax
    7c1a:	jne    7c21 <png_colorspace_set_rgb_coefficients+0x91>
    7c1c:	mov    %r15,%rdi
    7c1f:	jmp    7bdb <png_colorspace_set_rgb_coefficients+0x4b>
    7c21:	movslq -0x24(%rbp),%rax
    7c25:	test   %eax,%eax
    7c27:	jns    7c2e <png_colorspace_set_rgb_coefficients+0x9e>
    7c29:	mov    %r15,%rdi
    7c2c:	jmp    7bdb <png_colorspace_set_rgb_coefficients+0x4b>
    7c2e:	cmp    $0x8000,%eax
    7c33:	jle    7c3a <png_colorspace_set_rgb_coefficients+0xaa>
    7c35:	mov    %r15,%rdi
    7c38:	jmp    7bdb <png_colorspace_set_rgb_coefficients+0x4b>
    7c3a:	movslq -0x20(%rbp),%rsi
    7c3e:	test   %esi,%esi
    7c40:	jns    7c47 <png_colorspace_set_rgb_coefficients+0xb7>
    7c42:	mov    %r15,%rdi
    7c45:	jmp    7bdb <png_colorspace_set_rgb_coefficients+0x4b>
    7c47:	lea    -0x20(%rbp),%rdi
    7c4b:	mov    %r14,%rdx
    7c4e:	mov    %r13,%rcx
    7c51:	callq  8970 <png_muldiv>
    7c56:	test   %eax,%eax
    7c58:	jne    7c62 <png_colorspace_set_rgb_coefficients+0xd2>
    7c5a:	mov    %r15,%rdi
    7c5d:	jmpq   7bdb <png_colorspace_set_rgb_coefficients+0x4b>
    7c62:	movslq -0x20(%rbp),%rax
    7c66:	test   %eax,%eax
    7c68:	jns    7c72 <png_colorspace_set_rgb_coefficients+0xe2>
    7c6a:	mov    %r15,%rdi
    7c6d:	jmpq   7bdb <png_colorspace_set_rgb_coefficients+0x4b>
    7c72:	cmp    $0x8000,%eax
    7c77:	jle    7c81 <png_colorspace_set_rgb_coefficients+0xf1>
    7c79:	mov    %r15,%rdi
    7c7c:	jmpq   7bdb <png_colorspace_set_rgb_coefficients+0x4b>
    7c81:	movslq -0x1c(%rbp),%rsi
    7c85:	test   %esi,%esi
    7c87:	jns    7c91 <png_colorspace_set_rgb_coefficients+0x101>
    7c89:	mov    %r15,%rdi
    7c8c:	jmpq   7bdb <png_colorspace_set_rgb_coefficients+0x4b>
    7c91:	mov    %r13,%rcx
    7c94:	mov    %r14,%rdx
    7c97:	lea    -0x1c(%rbp),%rdi
    7c9b:	callq  8970 <png_muldiv>
    7ca0:	test   %eax,%eax
    7ca2:	jne    7cac <png_colorspace_set_rgb_coefficients+0x11c>
    7ca4:	mov    %r15,%rdi
    7ca7:	jmpq   7bdb <png_colorspace_set_rgb_coefficients+0x4b>
    7cac:	movslq -0x1c(%rbp),%rdx
    7cb0:	test   %edx,%edx
    7cb2:	jns    7cbc <png_colorspace_set_rgb_coefficients+0x12c>
    7cb4:	mov    %r15,%rdi
    7cb7:	jmpq   7bdb <png_colorspace_set_rgb_coefficients+0x4b>
    7cbc:	cmp    $0x8000,%edx
    7cc2:	jle    7ccc <png_colorspace_set_rgb_coefficients+0x13c>
    7cc4:	mov    %r15,%rdi
    7cc7:	jmpq   7bdb <png_colorspace_set_rgb_coefficients+0x4b>
    7ccc:	movslq -0x20(%rbp),%rsi
    7cd0:	movslq -0x24(%rbp),%rcx
    7cd4:	lea    (%rsi,%rcx,1),%eax
    7cd7:	add    %edx,%eax
    7cd9:	cmp    $0x8001,%eax
    7cde:	jle    7ce8 <png_colorspace_set_rgb_coefficients+0x158>
    7ce0:	mov    %r15,%rdi
    7ce3:	jmpq   7bdb <png_colorspace_set_rgb_coefficients+0x4b>
    7ce8:	cmp    $0x8000,%eax
    7ced:	jle    7d2d <png_colorspace_set_rgb_coefficients+0x19d>
    7cef:	mov    $0xffffffffffffffff,%rax
    7cf6:	test   %eax,%eax
    7cf8:	jne    7d38 <png_colorspace_set_rgb_coefficients+0x1a8>
    7cfa:	movslq -0x24(%rbp),%rdx
    7cfe:	movslq -0x20(%rbp),%rcx
    7d02:	lea    (%rcx,%rdx,1),%eax
    7d05:	add    -0x1c(%rbp),%eax
    7d08:	cmp    $0x8000,%eax
    7d0d:	jne    7d50 <png_colorspace_set_rgb_coefficients+0x1c0>
    7d0f:	mov    %dx,0x3d2(%r15)
    7d17:	mov    %cx,0x3d4(%r15)
    7d1f:	mov    -0x18(%rbp),%r15
    7d23:	mov    -0x10(%rbp),%r14
    7d27:	mov    -0x8(%rbp),%r13
    7d2b:	leaveq 
    7d2c:	retq   
    7d2d:	cmp    $0x7fff,%eax
    7d32:	jle    7d5f <png_colorspace_set_rgb_coefficients+0x1cf>
    7d34:	xor    %eax,%eax
    7d36:	jmp    7cf6 <png_colorspace_set_rgb_coefficients+0x166>
    7d38:	cmp    %ecx,%esi
    7d3a:	jge    7d66 <png_colorspace_set_rgb_coefficients+0x1d6>
    7d3c:	movslq -0x24(%rbp),%rdx
    7d40:	movslq -0x20(%rbp),%rcx
    7d44:	cmp    %edx,%ecx
    7d46:	jle    7d71 <png_colorspace_set_rgb_coefficients+0x1e1>
    7d48:	add    -0x1c(%rbp),%eax
    7d4b:	mov    %eax,-0x1c(%rbp)
    7d4e:	jmp    7cfa <png_colorspace_set_rgb_coefficients+0x16a>
    7d50:	mov    %r15,%rdi
    7d53:	lea    0x2532e(%rip),%rsi        # 2d088 <short_months.6+0x5b3>
    7d5a:	callq  5470 <png_error@plt>
    7d5f:	mov    $0x1,%eax
    7d64:	jmp    7cf6 <png_colorspace_set_rgb_coefficients+0x166>
    7d66:	cmp    %esi,%edx
    7d68:	jg     7d3c <png_colorspace_set_rgb_coefficients+0x1ac>
    7d6a:	add    %esi,%eax
    7d6c:	mov    %eax,-0x20(%rbp)
    7d6f:	jmp    7cfa <png_colorspace_set_rgb_coefficients+0x16a>
    7d71:	cmp    -0x1c(%rbp),%edx
    7d74:	jl     7d48 <png_colorspace_set_rgb_coefficients+0x1b8>
    7d76:	add    %edx,%eax
    7d78:	mov    %eax,-0x24(%rbp)
    7d7b:	jmpq   7cfa <png_colorspace_set_rgb_coefficients+0x16a>

0000000000007d80 <png_check_IHDR>:
    7d80:	push   %rbp
    7d81:	mov    %rsp,%rbp
    7d84:	sub    $0x40,%rsp
    7d88:	mov    %r9,-0x30(%rbp)
    7d8c:	mov    %rbx,-0x8(%rbp)
    7d90:	mov    %r12,-0x10(%rbp)
    7d94:	mov    %r13,-0x18(%rbp)
    7d98:	mov    %r14,-0x20(%rbp)
    7d9c:	mov    %r15,-0x28(%rbp)
    7da0:	mov    %r8,-0x38(%rbp)
    7da4:	test   %esi,%esi
    7da6:	je     7db9 <png_check_IHDR+0x39>
    7da8:	mov    %rdi,%rbx
    7dab:	mov    %rcx,%r13
    7dae:	mov    %rdx,%r14
    7db1:	mov    %rsi,%r15
    7db4:	xor    %r12d,%r12d
    7db7:	jmp    7dd7 <png_check_IHDR+0x57>
    7db9:	mov    %rcx,%r13
    7dbc:	mov    %rdx,%r14
    7dbf:	mov    %rsi,%r15
    7dc2:	lea    0x2530b(%rip),%rsi        # 2d0d4 <short_months.6+0x5ff>
    7dc9:	mov    %rdi,%rbx
    7dcc:	callq  5390 <png_warning@plt>
    7dd1:	mov    $0x1,%r12d
    7dd7:	cmp    $0x7fffffff,%r15d
    7dde:	jbe    7df5 <png_check_IHDR+0x75>
    7de0:	lea    0x25309(%rip),%rsi        # 2d0f0 <short_months.6+0x61b>
    7de7:	mov    %rbx,%rdi
    7dea:	callq  5390 <png_warning@plt>
    7def:	mov    $0x1,%r12d
    7df5:	lea    0x7(%r15),%eax
    7df9:	and    $0xfffffff8,%eax
    7dfc:	mov    %eax,%edi
    7dfe:	movabs $0x1ffffffffffffff8,%rsi
    7e08:	callq  a340 <png_gt>
    7e0d:	test   %eax,%eax
    7e0f:	je     7e26 <png_check_IHDR+0xa6>
    7e11:	lea    0x252f4(%rip),%rsi        # 2d10c <short_months.6+0x637>
    7e18:	mov    %rbx,%rdi
    7e1b:	callq  5390 <png_warning@plt>
    7e20:	mov    $0x1,%r12d
    7e26:	cmp    0x41c(%rbx),%r15d
    7e2d:	jbe    7e44 <png_check_IHDR+0xc4>
    7e2f:	lea    0x25305(%rip),%rsi        # 2d13b <short_months.6+0x666>
    7e36:	mov    %rbx,%rdi
    7e39:	callq  5390 <png_warning@plt>
    7e3e:	mov    $0x1,%r12d
    7e44:	test   %r14d,%r14d
    7e47:	jne    7e5e <png_check_IHDR+0xde>
    7e49:	lea    0x25312(%rip),%rsi        # 2d162 <short_months.6+0x68d>
    7e50:	mov    %rbx,%rdi
    7e53:	callq  5390 <png_warning@plt>
    7e58:	mov    $0x1,%r12d
    7e5e:	cmp    $0x7fffffff,%r14d
    7e65:	jbe    7e7c <png_check_IHDR+0xfc>
    7e67:	lea    0x25311(%rip),%rsi        # 2d17f <short_months.6+0x6aa>
    7e6e:	mov    %rbx,%rdi
    7e71:	callq  5390 <png_warning@plt>
    7e76:	mov    $0x1,%r12d
    7e7c:	cmp    0x420(%rbx),%r14d
    7e83:	jbe    7e9a <png_check_IHDR+0x11a>
    7e85:	lea    0x25310(%rip),%rsi        # 2d19c <short_months.6+0x6c7>
    7e8c:	mov    %rbx,%rdi
    7e8f:	callq  5390 <png_warning@plt>
    7e94:	mov    $0x1,%r12d
    7e9a:	cmp    $0x1,%r13d
    7e9e:	jne    7f81 <png_check_IHDR+0x201>
    7ea4:	mov    -0x38(%rbp),%r14
    7ea8:	test   %r14d,%r14d
    7eab:	js     7ebf <png_check_IHDR+0x13f>
    7ead:	cmp    $0x1,%r14d
    7eb1:	je     7ebf <png_check_IHDR+0x13f>
    7eb3:	cmp    $0x5,%r14d
    7eb7:	je     7ebf <png_check_IHDR+0x13f>
    7eb9:	cmp    $0x6,%r14d
    7ebd:	jle    7ed4 <png_check_IHDR+0x154>
    7ebf:	lea    0x25318(%rip),%rsi        # 2d1de <short_months.6+0x709>
    7ec6:	mov    %rbx,%rdi
    7ec9:	callq  5390 <png_warning@plt>
    7ece:	mov    $0x1,%r12d
    7ed4:	cmp    $0x3,%r14d
    7ed8:	je     7fc3 <png_check_IHDR+0x243>
    7ede:	cmp    $0x2,%r14d
    7ee2:	je     7ef0 <png_check_IHDR+0x170>
    7ee4:	cmp    $0x4,%r14d
    7ee8:	je     7ef0 <png_check_IHDR+0x170>
    7eea:	cmp    $0x6,%r14d
    7eee:	jne    7f0b <png_check_IHDR+0x18b>
    7ef0:	cmp    $0x7,%r13d
    7ef4:	jg     7f0b <png_check_IHDR+0x18b>
    7ef6:	lea    0x252fc(%rip),%rsi        # 2d1f9 <short_months.6+0x724>
    7efd:	mov    %rbx,%rdi
    7f00:	callq  5390 <png_warning@plt>
    7f05:	mov    $0x1,%r12d
    7f0b:	mov    -0x30(%rbp),%rax
    7f0f:	cmp    $0x1,%eax
    7f12:	jle    7f29 <png_check_IHDR+0x1a9>
    7f14:	lea    0x2530f(%rip),%rsi        # 2d22a <short_months.6+0x755>
    7f1b:	mov    %rbx,%rdi
    7f1e:	callq  5390 <png_warning@plt>
    7f23:	mov    $0x1,%r12d
    7f29:	movslq 0x10(%rbp),%rax
    7f2d:	test   %eax,%eax
    7f2f:	je     7f46 <png_check_IHDR+0x1c6>
    7f31:	lea    0x25313(%rip),%rsi        # 2d24b <short_months.6+0x776>
    7f38:	mov    %rbx,%rdi
    7f3b:	callq  5390 <png_warning@plt>
    7f40:	mov    $0x1,%r12d
    7f46:	mov    0x12c(%rbx),%eax
    7f4c:	and    $0x1000,%eax
    7f51:	test   %eax,%eax
    7f53:	jne    7fd2 <png_check_IHDR+0x252>
    7f55:	movslq 0x18(%rbp),%rcx
    7f59:	test   %ecx,%ecx
    7f5b:	jne    7ff4 <png_check_IHDR+0x274>
    7f61:	cmp    $0x1,%r12d
    7f65:	je     8043 <png_check_IHDR+0x2c3>
    7f6b:	mov    -0x28(%rbp),%r15
    7f6f:	mov    -0x20(%rbp),%r14
    7f73:	mov    -0x18(%rbp),%r13
    7f77:	mov    -0x10(%rbp),%r12
    7f7b:	mov    -0x8(%rbp),%rbx
    7f7f:	leaveq 
    7f80:	retq   
    7f81:	cmp    $0x2,%r13d
    7f85:	je     7ea4 <png_check_IHDR+0x124>
    7f8b:	cmp    $0x4,%r13d
    7f8f:	je     7ea4 <png_check_IHDR+0x124>
    7f95:	cmp    $0x8,%r13d
    7f99:	je     7ea4 <png_check_IHDR+0x124>
    7f9f:	cmp    $0x10,%r13d
    7fa3:	je     7ea4 <png_check_IHDR+0x124>
    7fa9:	lea    0x25214(%rip),%rsi        # 2d1c4 <short_months.6+0x6ef>
    7fb0:	mov    %rbx,%rdi
    7fb3:	callq  5390 <png_warning@plt>
    7fb8:	mov    $0x1,%r12d
    7fbe:	jmpq   7ea4 <png_check_IHDR+0x124>
    7fc3:	cmp    $0x8,%r13d
    7fc7:	jg     7ef6 <png_check_IHDR+0x176>
    7fcd:	jmpq   7ede <png_check_IHDR+0x15e>
    7fd2:	mov    0x3d8(%rbx),%eax
    7fd8:	test   %eax,%eax
    7fda:	je     7f55 <png_check_IHDR+0x1d5>
    7fe0:	lea    0x25287(%rip),%rsi        # 2d26e <short_months.6+0x799>
    7fe7:	mov    %rbx,%rdi
    7fea:	callq  5390 <png_warning@plt>
    7fef:	jmpq   7f55 <png_check_IHDR+0x1d5>
    7ff4:	mov    0x3d8(%rbx),%eax
    7ffa:	and    $0x4,%eax
    7ffd:	test   %eax,%eax
    7fff:	jne    8052 <png_check_IHDR+0x2d2>
    8001:	lea    0x25297(%rip),%rsi        # 2d29f <short_months.6+0x7ca>
    8008:	mov    %rbx,%rdi
    800b:	callq  5390 <png_warning@plt>
    8010:	mov    $0x1,%r12d
    8016:	mov    0x12c(%rbx),%eax
    801c:	and    $0x1000,%eax
    8021:	test   %eax,%eax
    8023:	je     7f61 <png_check_IHDR+0x1e1>
    8029:	lea    0x2528d(%rip),%rsi        # 2d2bd <short_months.6+0x7e8>
    8030:	mov    %rbx,%rdi
    8033:	callq  5390 <png_warning@plt>
    8038:	mov    $0x1,%r12d
    803e:	jmpq   7f61 <png_check_IHDR+0x1e1>
    8043:	mov    %rbx,%rdi
    8046:	lea    0x2528e(%rip),%rsi        # 2d2db <short_months.6+0x806>
    804d:	callq  5470 <png_error@plt>
    8052:	cmp    $0x40,%ecx
    8055:	jne    8001 <png_check_IHDR+0x281>
    8057:	mov    0x12c(%rbx),%eax
    805d:	and    $0x1000,%eax
    8062:	test   %eax,%eax
    8064:	jne    8001 <png_check_IHDR+0x281>
    8066:	cmp    $0x2,%r14d
    806a:	je     8016 <png_check_IHDR+0x296>
    806c:	cmp    $0x6,%r14d
    8070:	je     8016 <png_check_IHDR+0x296>
    8072:	jmp    8001 <png_check_IHDR+0x281>
    8074:	data16 nopw %cs:0x0(%rax,%rax,1)
    807f:	nop

0000000000008080 <png_ascii_from_fp>:
    8080:	push   %rbp
    8081:	mov    %rsp,%rbp
    8084:	sub    $0x80,%rsp
    808b:	test   %ecx,%ecx
    808d:	jne    8094 <png_ascii_from_fp+0x14>
    808f:	mov    $0xf,%ecx
    8094:	cmp    $0x10,%ecx
    8097:	jbe    809e <png_ascii_from_fp+0x1e>
    8099:	mov    $0x10,%ecx
    809e:	lea    0x5(%rcx),%eax
    80a1:	mov    %eax,%eax
    80a3:	cmp    %rdx,%rax
    80a6:	jbe    80b4 <png_ascii_from_fp+0x34>
    80a8:	lea    0x2523e(%rip),%rsi        # 2d2ed <short_months.6+0x818>
    80af:	callq  5470 <png_error@plt>
    80b4:	xorpd  %xmm1,%xmm1
    80b8:	ucomisd %xmm1,%xmm0
    80bc:	jp     80d7 <png_ascii_from_fp+0x57>
    80be:	jae    80d7 <png_ascii_from_fp+0x57>
    80c0:	movsd  0x253c0(%rip),%xmm1        # 2d488 <short_months.6+0x9b3>
    80c8:	xorpd  %xmm1,%xmm0
    80cc:	movb   $0x2d,(%rsi)
    80cf:	add    $0x1,%rsi
    80d3:	add    $0xffffffffffffffff,%rdx
    80d7:	xor    %eax,%eax
    80d9:	movsd  0x253af(%rip),%xmm1        # 2d490 <short_months.6+0x9bb>
    80e1:	ucomisd %xmm1,%xmm0
    80e5:	jae    80f5 <png_ascii_from_fp+0x75>
    80e7:	test   %rax,%rax
    80ea:	jne    810c <png_ascii_from_fp+0x8c>
    80ec:	movb   $0x30,(%rsi)
    80ef:	movb   $0x0,0x1(%rsi)
    80f3:	leaveq 
    80f4:	retq   
    80f5:	movsd  0x25383(%rip),%xmm1        # 2d480 <short_months.6+0x9ab>
    80fd:	ucomisd %xmm1,%xmm0
    8101:	jp     8105 <png_ascii_from_fp+0x85>
    8103:	jbe    811d <png_ascii_from_fp+0x9d>
    8105:	mov    $0x1,%eax
    810a:	jmp    80e7 <png_ascii_from_fp+0x67>
    810c:	movb   $0x69,(%rsi)
    810f:	movb   $0x6e,0x1(%rsi)
    8113:	movb   $0x66,0x2(%rsi)
    8117:	movb   $0x0,0x3(%rsi)
    811b:	leaveq 
    811c:	retq   
    811d:	lea    -0x78(%rbp),%r8
    8121:	movapd %xmm0,%xmm1
    8125:	mov    %r12,-0x18(%rbp)
    8129:	mov    %r13,-0x20(%rbp)
    812d:	mov    %r14,-0x28(%rbp)
    8131:	mov    %r15,-0x30(%rbp)
    8135:	mov    %rdi,-0x8(%rbp)
    8139:	mov    %r8,%rdi
    813c:	mov    %rsi,%r12
    813f:	mov    %rax,%r13
    8142:	mov    %rcx,%r14
    8145:	mov    %rbx,%r15
    8148:	mov    %rdx,%rbx
    814b:	movdqu %xmm0,-0x60(%rbp)
    8150:	movapd %xmm1,%xmm0
    8154:	callq  5410 <frexp@plt>
    8159:	movslq -0x78(%rbp),%rdx
    815d:	mov    %rdx,%rcx
    8160:	shl    $0x2,%ecx
    8163:	lea    (%rdx,%rdx,8),%eax
    8166:	lea    (%rcx,%rax,8),%eax
    8169:	lea    (%rdx,%rax,1),%edi
    816c:	sar    $0x8,%edi
    816f:	mov    %edi,-0x78(%rbp)
    8172:	callq  a360 <png_pow10>
    8177:	movapd %xmm0,%xmm2
    817b:	movsd  0x2530d(%rip),%xmm1        # 2d490 <short_months.6+0x9bb>
    8183:	movdqu -0x60(%rbp),%xmm0
    8188:	jmp    81a5 <png_ascii_from_fp+0x125>
    818a:	movapd %xmm0,%xmm2
    818e:	movslq -0x78(%rbp),%rax
    8192:	add    $0x1,%eax
    8195:	mov    %eax,-0x78(%rbp)
    8198:	movsd  0x252f0(%rip),%xmm1        # 2d490 <short_months.6+0x9bb>
    81a0:	movdqu -0x60(%rbp),%xmm0
    81a5:	ucomisd %xmm1,%xmm2
    81a9:	jp     81ad <png_ascii_from_fp+0x12d>
    81ab:	jb     81b3 <png_ascii_from_fp+0x133>
    81ad:	ucomisd %xmm2,%xmm0
    81b1:	jbe    81de <png_ascii_from_fp+0x15e>
    81b3:	movslq -0x78(%rbp),%rdi
    81b7:	add    $0x1,%edi
    81ba:	movdqu %xmm2,-0x50(%rbp)
    81bf:	callq  a360 <png_pow10>
    81c4:	movsd  0x252b4(%rip),%xmm1        # 2d480 <short_months.6+0x9ab>
    81cc:	ucomisd %xmm1,%xmm0
    81d0:	jp     81d4 <png_ascii_from_fp+0x154>
    81d2:	jbe    818a <png_ascii_from_fp+0x10a>
    81d4:	movdqu -0x50(%rbp),%xmm2
    81d9:	movdqu -0x60(%rbp),%xmm0
    81de:	movsd  0x2528a(%rip),%xmm1        # 2d470 <short_months.6+0x99b>
    81e6:	movsd  0x2528a(%rip),%xmm3        # 2d478 <short_months.6+0x9a3>
    81ee:	divsd  %xmm2,%xmm0
    81f2:	jmp    8202 <png_ascii_from_fp+0x182>
    81f4:	divsd  %xmm1,%xmm0
    81f8:	movslq -0x78(%rbp),%rax
    81fc:	add    $0x1,%eax
    81ff:	mov    %eax,-0x78(%rbp)
    8202:	ucomisd %xmm3,%xmm0
    8206:	jae    81f4 <png_ascii_from_fp+0x174>
    8208:	movsd  0x25248(%rip),%xmm2        # 2d458 <short_months.6+0x983>
    8210:	lea    -0x68(%rbp),%rdi
    8214:	movslq -0x78(%rbp),%rcx
    8218:	test   %ecx,%ecx
    821a:	js     822b <png_ascii_from_fp+0x1ab>
    821c:	mov    %r15,-0x10(%rbp)
    8220:	mov    %r13,%rcx
    8223:	mov    %rcx,%r15
    8226:	jmpq   82e3 <png_ascii_from_fp+0x263>
    822b:	cmp    $0xfffffffe,%ecx
    822e:	jge    833c <png_ascii_from_fp+0x2bc>
    8234:	mov    %r15,-0x10(%rbp)
    8238:	mov    %r13,%rcx
    823b:	mov    %rcx,%r15
    823e:	jmpq   82e3 <png_ascii_from_fp+0x263>
    8243:	cmp    $0xffffffff,%edx
    8246:	je     8263 <png_ascii_from_fp+0x1e3>
    8248:	test   %edx,%edx
    824a:	jne    8259 <png_ascii_from_fp+0x1d9>
    824c:	movb   $0x2e,(%r12)
    8251:	add    $0x1,%r12
    8255:	add    $0xffffffffffffffff,%rbx
    8259:	movslq -0x78(%rbp),%rdx
    825d:	add    $0xffffffff,%edx
    8260:	mov    %edx,-0x78(%rbp)
    8263:	movb   $0x30,(%r12)
    8268:	add    $0x1,%r12
    826c:	add    $0xffffffff,%eax
    826f:	movslq -0x78(%rbp),%rdx
    8273:	test   %eax,%eax
    8275:	jne    8243 <png_ascii_from_fp+0x1c3>
    8277:	cmp    $0xffffffff,%edx
    827a:	je     8297 <png_ascii_from_fp+0x217>
    827c:	test   %edx,%edx
    827e:	jne    828d <png_ascii_from_fp+0x20d>
    8280:	movb   $0x2e,(%r12)
    8285:	add    $0x1,%r12
    8289:	add    $0xffffffffffffffff,%rbx
    828d:	movslq -0x78(%rbp),%rax
    8291:	add    $0xffffffff,%eax
    8294:	mov    %eax,-0x78(%rbp)
    8297:	movsd  -0x68(%rbp),%xmm2
    829c:	cvttsd2si %xmm2,%eax
    82a0:	add    $0x30,%eax
    82a3:	mov    %al,(%r12)
    82a7:	add    $0x1,%r12
    82ab:	sub    %ecx,%r15d
    82ae:	lea    0x1(%r15,%r13,1),%r13d
    82b3:	xor    %r15d,%r15d
    82b6:	mov    %r15,%rcx
    82b9:	lea    (%r14,%rcx,1),%edx
    82bd:	lea    (%r15,%r13,1),%eax
    82c1:	cmp    %eax,%edx
    82c3:	jbe    834e <png_ascii_from_fp+0x2ce>
    82c9:	movsd  0x251bf(%rip),%xmm2        # 2d490 <short_months.6+0x9bb>
    82d1:	ucomisd %xmm2,%xmm0
    82d5:	jbe    834e <png_ascii_from_fp+0x2ce>
    82d7:	lea    -0x68(%rbp),%rdi
    82db:	movsd  0x25175(%rip),%xmm2        # 2d458 <short_months.6+0x983>
    82e3:	mulsd  %xmm1,%xmm0
    82e7:	lea    (%r14,%rcx,1),%edx
    82eb:	lea    0x1(%r15,%r13,1),%eax
    82f0:	cmp    %eax,%edx
    82f2:	ja     838d <png_ascii_from_fp+0x30d>
    82f8:	addsd  %xmm2,%xmm0
    82fc:	mov    %r14,-0x50(%rbp)
    8300:	mov    %r15,%r14
    8303:	mov    %rcx,%r15
    8306:	movdqu %xmm1,-0x60(%rbp)
    830b:	callq  57e0 <floor@plt>
    8310:	movsd  %xmm0,-0x68(%rbp)
    8315:	movsd  0x2517b(%rip),%xmm2        # 2d498 <short_months.6+0x9c3>
    831d:	ucomisd %xmm2,%xmm0
    8321:	ja     83c7 <png_ascii_from_fp+0x347>
    8327:	mov    %r15,%rcx
    832a:	mov    %r14,%r15
    832d:	mov    -0x50(%rbp),%r14
    8331:	movdqu -0x60(%rbp),%xmm1
    8336:	xorpd  %xmm0,%xmm0
    833a:	jmp    83aa <png_ascii_from_fp+0x32a>
    833c:	neg    %ecx
    833e:	movl   $0x0,-0x78(%rbp)
    8345:	mov    %r15,-0x10(%rbp)
    8349:	mov    %rcx,%r15
    834c:	jmp    82e3 <png_ascii_from_fp+0x263>
    834e:	movslq -0x78(%rbp),%rax
    8352:	cmp    $0xffffffff,%eax
    8355:	jl     8360 <png_ascii_from_fp+0x2e0>
    8357:	cmp    $0x2,%eax
    835a:	jle    83e7 <png_ascii_from_fp+0x367>
    8360:	movb   $0x45,(%r12)
    8365:	mov    %r13d,%eax
    8368:	sub    %rax,%rbx
    836b:	lea    0x1(%r12),%rcx
    8370:	mov    $0xcccccccd,%r8d
    8376:	movslq -0x78(%rbp),%rdi
    837a:	test   %edi,%edi
    837c:	js     8410 <png_ascii_from_fp+0x390>
    8382:	add    $0xffffffffffffffff,%rbx
    8386:	xor    %esi,%esi
    8388:	jmpq   8444 <png_ascii_from_fp+0x3c4>
    838d:	mov    %r14,-0x60(%rbp)
    8391:	mov    %rcx,%r14
    8394:	movdqu %xmm1,-0x40(%rbp)
    8399:	callq  52d0 <modf@plt>
    839e:	mov    %r14,%rcx
    83a1:	mov    -0x60(%rbp),%r14
    83a5:	movdqu -0x40(%rbp),%xmm1
    83aa:	movsd  -0x68(%rbp),%xmm3
    83af:	xorpd  %xmm2,%xmm2
    83b3:	ucomisd %xmm2,%xmm3
    83b7:	jp     83bf <png_ascii_from_fp+0x33f>
    83b9:	je     845c <png_ascii_from_fp+0x3dc>
    83bf:	mov    %r15,%rax
    83c2:	jmpq   826f <png_ascii_from_fp+0x1ef>
    83c7:	test   %r14d,%r14d
    83ca:	jne    8474 <png_ascii_from_fp+0x3f4>
    83d0:	mov    -0x50(%rbp),%r14
    83d4:	movdqu -0x60(%rbp),%xmm1
    83d9:	jmpq   84bf <png_ascii_from_fp+0x43f>
    83de:	movb   $0x30,(%r12)
    83e3:	add    $0x1,%r12
    83e7:	movslq -0x78(%rbp),%rcx
    83eb:	lea    -0x1(%rcx),%eax
    83ee:	mov    %eax,-0x78(%rbp)
    83f1:	test   %ecx,%ecx
    83f3:	jg     83de <png_ascii_from_fp+0x35e>
    83f5:	movb   $0x0,(%r12)
    83fa:	mov    -0x10(%rbp),%rbx
    83fe:	mov    -0x30(%rbp),%r15
    8402:	mov    -0x28(%rbp),%r14
    8406:	mov    -0x20(%rbp),%r13
    840a:	mov    -0x18(%rbp),%r12
    840e:	leaveq 
    840f:	retq   
    8410:	movb   $0x2d,(%rcx)
    8413:	mov    -0x78(%rbp),%edi
    8416:	neg    %edi
    8418:	lea    0x2(%r12),%rcx
    841d:	add    $0xfffffffffffffffe,%rbx
    8421:	xor    %esi,%esi
    8423:	jmp    8444 <png_ascii_from_fp+0x3c4>
    8425:	mov    %r8,%rax
    8428:	mul    %edi
    842a:	shr    $0x3,%edx
    842d:	lea    (%rdx,%rdx,4),%eax
    8430:	add    %eax,%eax
    8432:	sub    %eax,%edi
    8434:	add    $0x30,%edi
    8437:	mov    %esi,%eax
    8439:	mov    %dil,-0x72(%rbp,%rax,1)
    843e:	add    $0x1,%esi
    8441:	mov    %rdx,%rdi
    8444:	test   %edi,%edi
    8446:	jne    8425 <png_ascii_from_fp+0x3a5>
    8448:	mov    %esi,%eax
    844a:	cmp    %rax,%rbx
    844d:	ja     84fb <png_ascii_from_fp+0x47b>
    8453:	mov    -0x8(%rbp),%rdi
    8457:	jmpq   80a8 <png_ascii_from_fp+0x28>
    845c:	add    $0x1,%r15d
    8460:	test   %r13d,%r13d
    8463:	jne    82b9 <png_ascii_from_fp+0x239>
    8469:	add    $0x1,%ecx
    846c:	xor    %r13d,%r13d
    846f:	jmpq   82b9 <png_ascii_from_fp+0x239>
    8474:	movsd  0x24ffc(%rip),%xmm0        # 2d478 <short_months.6+0x9a3>
    847c:	movsd  %xmm0,-0x68(%rbp)
    8481:	lea    -0x1(%r14),%eax
    8485:	test   %r13d,%r13d
    8488:	je     8518 <png_ascii_from_fp+0x498>
    848e:	mov    %r15,%rcx
    8491:	mov    %rax,%r15
    8494:	mov    -0x50(%rbp),%r14
    8498:	movdqu -0x60(%rbp),%xmm1
    849d:	xorpd  %xmm0,%xmm0
    84a1:	jmpq   83aa <png_ascii_from_fp+0x32a>
    84a6:	add    $0x1,%edx
    84a9:	mov    %edx,-0x78(%rbp)
    84ac:	mov    %rcx,%r12
    84af:	add    $0xffffffd1,%eax
    84b2:	cvtsi2sd %eax,%xmm0
    84b6:	movsd  %xmm0,-0x68(%rbp)
    84bb:	add    $0xffffffff,%r13d
    84bf:	test   %r13d,%r13d
    84c2:	je     8534 <png_ascii_from_fp+0x4b4>
    84c4:	movsd  -0x68(%rbp),%xmm0
    84c9:	ucomisd %xmm2,%xmm0
    84cd:	jbe    8534 <png_ascii_from_fp+0x4b4>
    84cf:	lea    -0x1(%r12),%rcx
    84d4:	movsbq (%rcx),%rax
    84d8:	movslq -0x78(%rbp),%rdx
    84dc:	cmp    $0xffffffff,%edx
    84df:	jne    84a6 <png_ascii_from_fp+0x426>
    84e1:	cmp    $0x2e,%al
    84e3:	je     854e <png_ascii_from_fp+0x4ce>
    84e5:	mov    %rcx,%r12
    84e8:	jmp    84af <png_ascii_from_fp+0x42f>
    84ea:	add    $0xffffffff,%esi
    84ed:	mov    %esi,%eax
    84ef:	movsbq -0x72(%rbp,%rax,1),%rax
    84f5:	mov    %al,(%rcx)
    84f7:	add    $0x1,%rcx
    84fb:	test   %esi,%esi
    84fd:	jne    84ea <png_ascii_from_fp+0x46a>
    84ff:	movb   $0x0,(%rcx)
    8502:	mov    -0x10(%rbp),%rbx
    8506:	mov    -0x30(%rbp),%r15
    850a:	mov    -0x28(%rbp),%r14
    850e:	mov    -0x20(%rbp),%r13
    8512:	mov    -0x18(%rbp),%r12
    8516:	leaveq 
    8517:	retq   
    8518:	lea    -0x1(%r15),%ecx
    851c:	mov    %rax,%r15
    851f:	xor    %r13d,%r13d
    8522:	mov    -0x50(%rbp),%r14
    8526:	movdqu -0x60(%rbp),%xmm1
    852b:	xorpd  %xmm0,%xmm0
    852f:	jmpq   83aa <png_ascii_from_fp+0x32a>
    8534:	movsd  -0x68(%rbp),%xmm0
    8539:	ucomisd %xmm2,%xmm0
    853d:	ja     8567 <png_ascii_from_fp+0x4e7>
    853f:	mov    %r15,%rcx
    8542:	xor    %r15d,%r15d
    8545:	xorpd  %xmm0,%xmm0
    8549:	jmpq   83aa <png_ascii_from_fp+0x32a>
    854e:	add    $0xfffffffffffffffe,%r12
    8552:	movsbq (%r12),%rax
    8557:	movl   $0x1,-0x78(%rbp)
    855e:	add    $0x1,%rbx
    8562:	jmpq   84af <png_ascii_from_fp+0x42f>
    8567:	movslq -0x78(%rbp),%rax
    856b:	cmp    $0xffffffff,%eax
    856e:	je     8592 <png_ascii_from_fp+0x512>
    8570:	add    $0x1,%eax
    8573:	mov    %eax,-0x78(%rbp)
    8576:	mov    %r15,%rcx
    8579:	movsd  0x24ef7(%rip),%xmm0        # 2d478 <short_months.6+0x9a3>
    8581:	movsd  %xmm0,-0x68(%rbp)
    8586:	xor    %r15d,%r15d
    8589:	xorpd  %xmm0,%xmm0
    858d:	jmpq   83aa <png_ascii_from_fp+0x32a>
    8592:	add    $0xffffffffffffffff,%r12
    8596:	movsbq (%r12),%rax
    859b:	cmp    $0x2e,%al
    859d:	jne    8576 <png_ascii_from_fp+0x4f6>
    859f:	movl   $0x1,-0x78(%rbp)
    85a6:	add    $0x1,%rbx
    85aa:	jmp    8576 <png_ascii_from_fp+0x4f6>
    85ac:	nopl   0x0(%rax)

00000000000085b0 <png_ascii_from_fixed>:
    85b0:	push   %rbp
    85b1:	mov    %rsp,%rbp
    85b4:	sub    $0x20,%rsp
    85b8:	cmp    $0xc,%rdx
    85bc:	ja     85ca <png_ascii_from_fixed+0x1a>
    85be:	lea    0x24d28(%rip),%rsi        # 2d2ed <short_months.6+0x818>
    85c5:	callq  5470 <png_error@plt>
    85ca:	test   %ecx,%ecx
    85cc:	jns    85d7 <png_ascii_from_fixed+0x27>
    85ce:	neg    %ecx
    85d0:	movb   $0x2d,(%rsi)
    85d3:	add    $0x1,%rsi
    85d7:	cmp    $0x80000000,%ecx
    85dd:	ja     85be <png_ascii_from_fixed+0xe>
    85df:	mov    $0xcccccccd,%r9d
    85e5:	xor    %edi,%edi
    85e7:	mov    $0x10,%r8d
    85ed:	mov    %rsi,-0x8(%rbp)
    85f1:	mov    %r8,%rsi
    85f4:	jmp    8621 <png_ascii_from_fixed+0x71>
    85f6:	mov    %r9,%rax
    85f9:	mul    %ecx
    85fb:	shr    $0x3,%edx
    85fe:	lea    (%rdx,%rdx,4),%eax
    8601:	lea    (%rax,%rax,1),%r11d
    8605:	mov    %rcx,%rax
    8608:	sub    %r11d,%eax
    860b:	lea    0x30(%rax),%r10d
    860f:	mov    %edi,%eax
    8611:	mov    %r10b,-0x12(%rbp,%rax,1)
    8616:	add    $0x1,%edi
    8619:	cmp    $0x10,%esi
    861c:	je     862f <png_ascii_from_fixed+0x7f>
    861e:	mov    %rdx,%rcx
    8621:	test   %ecx,%ecx
    8623:	jne    85f6 <png_ascii_from_fixed+0x46>
    8625:	test   %edi,%edi
    8627:	je     863c <png_ascii_from_fixed+0x8c>
    8629:	mov    -0x8(%rbp),%rax
    862d:	jmp    865d <png_ascii_from_fixed+0xad>
    862f:	cmp    %r11d,%ecx
    8632:	jne    8675 <png_ascii_from_fixed+0xc5>
    8634:	mov    %rdx,%rcx
    8637:	mov    %r8,%rsi
    863a:	jmp    8621 <png_ascii_from_fixed+0x71>
    863c:	mov    -0x8(%rbp),%rax
    8640:	movb   $0x30,(%rax)
    8643:	add    $0x1,%rax
    8647:	movb   $0x0,(%rax)
    864a:	leaveq 
    864b:	retq   
    864c:	add    $0xffffffff,%edi
    864f:	mov    %edi,%ecx
    8651:	movsbq -0x12(%rbp,%rcx,1),%rcx
    8657:	mov    %cl,(%rax)
    8659:	add    $0x1,%rax
    865d:	cmp    $0x5,%edi
    8660:	ja     864c <png_ascii_from_fixed+0x9c>
    8662:	cmp    $0x5,%esi
    8665:	ja     8647 <png_ascii_from_fixed+0x97>
    8667:	movb   $0x2e,(%rax)
    866a:	add    $0x1,%rax
    866e:	mov    $0x5,%ecx
    8673:	jmp    8687 <png_ascii_from_fixed+0xd7>
    8675:	mov    %rdx,%rcx
    8678:	mov    %rdi,%rsi
    867b:	jmp    8621 <png_ascii_from_fixed+0x71>
    867d:	movb   $0x30,(%rax)
    8680:	add    $0x1,%rax
    8684:	add    $0xffffffff,%ecx
    8687:	cmp    %ecx,%edi
    8689:	jb     867d <png_ascii_from_fixed+0xcd>
    868b:	jmp    869e <png_ascii_from_fixed+0xee>
    868d:	add    $0xffffffff,%edi
    8690:	mov    %edi,%ecx
    8692:	movsbq -0x12(%rbp,%rcx,1),%rcx
    8698:	mov    %cl,(%rax)
    869a:	add    $0x1,%rax
    869e:	cmp    %edi,%esi
    86a0:	jbe    868d <png_ascii_from_fixed+0xdd>
    86a2:	jmp    8647 <png_ascii_from_fixed+0x97>
    86a4:	data16 nopw %cs:0x0(%rax,%rax,1)
    86af:	nop

00000000000086b0 <png_check_fp_number>:
    86b0:	push   %rbp
    86b1:	mov    %rsp,%rbp
    86b4:	sub    $0x70,%rsp
    86b8:	mov    %r15,-0x38(%rbp)
    86bc:	mov    %r14,-0x30(%rbp)
    86c0:	mov    %r13,-0x28(%rbp)
    86c4:	mov    %r12,-0x20(%rbp)
    86c8:	mov    %rbx,-0x18(%rbp)
    86cc:	mov    %rcx,-0x8(%rbp)
    86d0:	mov    %rdx,-0x10(%rbp)
    86d4:	mov    (%rcx),%rbx
    86d7:	movslq (%rdx),%rax
    86da:	mov    $0x4,%r15d
    86e0:	mov    $0x10,%r14d
    86e6:	mov    $0x8,%r13d
    86ec:	mov    $0x20,%r11d
    86f2:	mov    $0x84,%r12d
    86f8:	mov    $0x108,%edx
    86fd:	mov    $0x5,%ecx
    8702:	mov    $0x44,%r8d
    8708:	mov    %r8,-0x68(%rbp)
    870c:	mov    $0xc4,%r8d
    8712:	mov    %r8,-0x60(%rbp)
    8716:	mov    $0x50,%r8d
    871c:	mov    %r8,-0x58(%rbp)
    8720:	mov    $0x48,%r8d
    8726:	mov    %r8,-0x50(%rbp)
    872a:	mov    $0x148,%r8d
    8730:	mov    %r8,-0x48(%rbp)
    8734:	mov    $0x60,%r8d
    873a:	mov    %r8,-0x40(%rbp)
    873e:	jmp    875c <png_check_fp_number+0xac>
    8740:	and    $0x1c0,%eax
    8745:	lea    0x11(%rax),%ecx
    8748:	mov    -0x70(%rbp),%rax
    874c:	or     %ecx,%eax
    874e:	add    $0x1,%rbx
    8752:	mov    $0x5,%ecx
    8757:	mov    $0x108,%edx
    875c:	mov    %rax,%r10
    875f:	and    $0x8,%r10d
    8763:	cmp    %rsi,%rbx
    8766:	jae    879b <png_check_fp_number+0xeb>
    8768:	movsbq (%rdi,%rbx,1),%r8
    876d:	add    $0xffffffd5,%r8d
    8771:	cmp    $0x3a,%r8d
    8775:	ja     879b <png_check_fp_number+0xeb>
    8777:	lea    0x238aa(%rip),%r9        # 2c028 <_fini+0xf84>
    877e:	movslq (%r9,%r8,4),%r8
    8782:	add    %r9,%r8
    8785:	jmpq   *%r8
    8788:	mov    $0x21,%ecx
    878d:	mov    %r11,%rdx
    8790:	mov    %rdx,%r9
    8793:	pushq  -0x40(%rbp)
    8796:	popq   -0x70(%rbp)
    8799:	jmp    87d8 <png_check_fp_number+0x128>
    879b:	test   %r10d,%r10d
    879e:	mov    -0x10(%rbp),%rcx
    87a2:	mov    %eax,(%rcx)
    87a4:	mov    -0x8(%rbp),%rax
    87a8:	mov    %rbx,(%rax)
    87ab:	jle    884c <png_check_fp_number+0x19c>
    87b1:	mov    $0x1,%eax
    87b6:	mov    -0x18(%rbp),%rbx
    87ba:	mov    -0x20(%rbp),%r12
    87be:	mov    -0x28(%rbp),%r13
    87c2:	mov    -0x30(%rbp),%r14
    87c6:	mov    -0x38(%rbp),%r15
    87ca:	leaveq 
    87cb:	retq   
    87cc:	mov    %r15,%rdx
    87cf:	mov    %rdx,%r9
    87d2:	pushq  -0x68(%rbp)
    87d5:	popq   -0x70(%rbp)
    87d8:	mov    %rax,%r8
    87db:	and    $0x3,%r8d
    87df:	lea    -0x4(%r9,%r8,1),%r8d
    87e4:	cmp    $0x1d,%r8d
    87e8:	ja     879b <png_check_fp_number+0xeb>
    87ea:	lea    0x23923(%rip),%r9        # 2c114 <_fini+0x1070>
    87f1:	movslq (%r9,%r8,4),%r8
    87f5:	add    %r9,%r8
    87f8:	jmpq   *%r8
    87fb:	or     $0x48,%eax
    87fe:	jmpq   874e <png_check_fp_number+0x9e>
    8803:	mov    $0x85,%ecx
    8808:	mov    %r12,%rdx
    880b:	mov    %r15,%r9
    880e:	pushq  -0x60(%rbp)
    8811:	popq   -0x70(%rbp)
    8814:	jmp    87d8 <png_check_fp_number+0x128>
    8816:	mov    $0x11,%ecx
    881b:	mov    %r14,%rdx
    881e:	mov    %rdx,%r9
    8821:	pushq  -0x58(%rbp)
    8824:	popq   -0x70(%rbp)
    8827:	jmp    87d8 <png_check_fp_number+0x128>
    8829:	mov    $0x9,%ecx
    882e:	mov    %r13,%rdx
    8831:	mov    %rdx,%r9
    8834:	pushq  -0x50(%rbp)
    8837:	popq   -0x70(%rbp)
    883a:	jmp    87d8 <png_check_fp_number+0x128>
    883c:	mov    $0x109,%ecx
    8841:	mov    %r13,%r9
    8844:	pushq  -0x48(%rbp)
    8847:	popq   -0x70(%rbp)
    884a:	jmp    87d8 <png_check_fp_number+0x128>
    884c:	xor    %eax,%eax
    884e:	mov    -0x18(%rbp),%rbx
    8852:	mov    -0x20(%rbp),%r12
    8856:	mov    -0x28(%rbp),%r13
    885a:	mov    -0x30(%rbp),%r14
    885e:	mov    -0x38(%rbp),%r15
    8862:	leaveq 
    8863:	retq   
    8864:	mov    %rax,%rcx
    8867:	and    $0x3c,%ecx
    886a:	test   %ecx,%ecx
    886c:	jg     879b <png_check_fp_number+0xeb>
    8872:	or     %edx,%eax
    8874:	jmpq   874e <png_check_fp_number+0x9e>
    8879:	mov    %rax,%r8
    887c:	and    $0x10,%r8d
    8880:	test   %r8d,%r8d
    8883:	jg     879b <png_check_fp_number+0xeb>
    8889:	test   %r10d,%r10d
    888c:	jg     88fd <png_check_fp_number+0x24d>
    888e:	and    $0x1c0,%eax
    8893:	or     %ecx,%eax
    8895:	jmpq   874e <png_check_fp_number+0x9e>
    889a:	mov    %rax,%rcx
    889d:	and    $0x10,%ecx
    88a0:	test   %ecx,%ecx
    88a2:	jg     8740 <png_check_fp_number+0x90>
    88a8:	mov    %rax,%rcx
    88ab:	jmpq   8748 <png_check_fp_number+0x98>
    88b0:	test   %r10d,%r10d
    88b3:	je     879b <png_check_fp_number+0xeb>
    88b9:	and    $0x1c0,%eax
    88be:	add    $0x2,%eax
    88c1:	jmpq   874e <png_check_fp_number+0x9e>
    88c6:	mov    -0x70(%rbp),%rcx
    88ca:	or     %ecx,%eax
    88cc:	jmpq   874e <png_check_fp_number+0x9e>
    88d1:	test   %r10d,%r10d
    88d4:	je     879b <png_check_fp_number+0xeb>
    88da:	and    $0x1c0,%eax
    88df:	add    $0x2,%eax
    88e2:	jmpq   874e <png_check_fp_number+0x9e>
    88e7:	mov    %rax,%rcx
    88ea:	and    $0x3c,%ecx
    88ed:	test   %ecx,%ecx
    88ef:	jg     879b <png_check_fp_number+0xeb>
    88f5:	or     $0x4,%eax
    88f8:	jmpq   874e <png_check_fp_number+0x9e>
    88fd:	or     %edx,%eax
    88ff:	jmpq   874e <png_check_fp_number+0x9e>
    8904:	data16 nopw %cs:0x0(%rax,%rax,1)
    890f:	nop

0000000000008910 <png_check_fp_string>:
    8910:	push   %rbp
    8911:	mov    %rsp,%rbp
    8914:	sub    $0x20,%rsp
    8918:	mov    %rsi,-0x10(%rbp)
    891c:	mov    %rdi,-0x8(%rbp)
    8920:	movl   $0x0,-0x1c(%rbp)
    8927:	movq   $0x0,-0x18(%rbp)
    892f:	lea    -0x1c(%rbp),%rdx
    8933:	lea    -0x18(%rbp),%rcx
    8937:	callq  86b0 <png_check_fp_number>
    893c:	test   %eax,%eax
    893e:	jne    8944 <png_check_fp_string+0x34>
    8940:	xor    %eax,%eax
    8942:	leaveq 
    8943:	retq   
    8944:	mov    -0x18(%rbp),%rax
    8948:	mov    -0x10(%rbp),%rcx
    894c:	cmp    %rax,%rcx
    894f:	je     8962 <png_check_fp_string+0x52>
    8951:	mov    -0x8(%rbp),%rcx
    8955:	movsbq (%rcx,%rax,1),%rax
    895a:	test   %al,%al
    895c:	je     8962 <png_check_fp_string+0x52>
    895e:	xor    %eax,%eax
    8960:	leaveq 
    8961:	retq   
    8962:	movslq -0x1c(%rbp),%rax
    8966:	leaveq 
    8967:	retq   
    8968:	nopl   0x0(%rax,%rax,1)

0000000000008970 <png_muldiv>:
    8970:	push   %rbp
    8971:	mov    %rsp,%rbp
    8974:	sub    $0x10,%rsp
    8978:	xor    %eax,%eax
    897a:	test   %ecx,%ecx
    897c:	jne    8980 <png_muldiv+0x10>
    897e:	leaveq 
    897f:	retq   
    8980:	mov    $0x1,%eax
    8985:	test   %esi,%esi
    8987:	je     89ca <png_muldiv+0x5a>
    8989:	test   %edx,%edx
    898b:	je     89ca <png_muldiv+0x5a>
    898d:	cvtsi2sd %edx,%xmm0
    8991:	cvtsi2sd %esi,%xmm1
    8995:	mulsd  %xmm1,%xmm0
    8999:	cvtsi2sd %ecx,%xmm1
    899d:	divsd  %xmm1,%xmm0
    89a1:	movsd  0x24aaf(%rip),%xmm1        # 2d458 <short_months.6+0x983>
    89a9:	addsd  %xmm1,%xmm0
    89ad:	mov    %rdi,-0x8(%rbp)
    89b1:	callq  57e0 <floor@plt>
    89b6:	movsd  0x24aaa(%rip),%xmm1        # 2d468 <short_months.6+0x993>
    89be:	ucomisd %xmm1,%xmm0
    89c2:	jp     89c6 <png_muldiv+0x56>
    89c4:	jbe    89d2 <png_muldiv+0x62>
    89c6:	xor    %eax,%eax
    89c8:	leaveq 
    89c9:	retq   
    89ca:	movl   $0x0,(%rdi)
    89d0:	leaveq 
    89d1:	retq   
    89d2:	movsd  0x24a86(%rip),%xmm1        # 2d460 <short_months.6+0x98b>
    89da:	ucomisd %xmm1,%xmm0
    89de:	jae    89e4 <png_muldiv+0x74>
    89e0:	xor    %eax,%eax
    89e2:	leaveq 
    89e3:	retq   
    89e4:	cvttsd2si %xmm0,%eax
    89e8:	mov    -0x8(%rbp),%rcx
    89ec:	mov    %eax,(%rcx)
    89ee:	mov    $0x1,%eax
    89f3:	leaveq 
    89f4:	retq   
    89f5:	data16 nopw %cs:0x0(%rax,%rax,1)

0000000000008a00 <png_muldiv_warn>:
    8a00:	push   %rbp
    8a01:	mov    %rsp,%rbp
    8a04:	sub    $0x10,%rsp
    8a08:	mov    %rdi,-0x8(%rbp)
    8a0c:	lea    -0xc(%rbp),%rdi
    8a10:	callq  8970 <png_muldiv>
    8a15:	test   %eax,%eax
    8a17:	jne    8a2d <png_muldiv_warn+0x2d>
    8a19:	lea    0x248ef(%rip),%rsi        # 2d30f <short_months.6+0x83a>
    8a20:	mov    -0x8(%rbp),%rdi
    8a24:	callq  5390 <png_warning@plt>
    8a29:	xor    %eax,%eax
    8a2b:	leaveq 
    8a2c:	retq   
    8a2d:	movslq -0xc(%rbp),%rax
    8a31:	leaveq 
    8a32:	retq   
    8a33:	data16 nopw %cs:0x0(%rax,%rax,1)
    8a3e:	xchg   %ax,%ax

0000000000008a40 <png_reciprocal>:
    8a40:	push   %rbp
    8a41:	mov    %rsp,%rbp
    8a44:	movsd  0x24a54(%rip),%xmm0        # 2d4a0 <short_months.6+0x9cb>
    8a4c:	cvtsi2sd %edi,%xmm1
    8a50:	divsd  %xmm1,%xmm0
    8a54:	movsd  0x249fc(%rip),%xmm1        # 2d458 <short_months.6+0x983>
    8a5c:	addsd  %xmm1,%xmm0
    8a60:	callq  57e0 <floor@plt>
    8a65:	movsd  0x249fb(%rip),%xmm1        # 2d468 <short_months.6+0x993>
    8a6d:	ucomisd %xmm1,%xmm0
    8a71:	jp     8a75 <png_reciprocal+0x35>
    8a73:	jbe    8a79 <png_reciprocal+0x39>
    8a75:	xor    %eax,%eax
    8a77:	leaveq 
    8a78:	retq   
    8a79:	movsd  0x249df(%rip),%xmm1        # 2d460 <short_months.6+0x98b>
    8a81:	ucomisd %xmm1,%xmm0
    8a85:	jae    8a8b <png_reciprocal+0x4b>
    8a87:	xor    %eax,%eax
    8a89:	leaveq 
    8a8a:	retq   
    8a8b:	cvttsd2si %xmm0,%eax
    8a8f:	leaveq 
    8a90:	retq   
    8a91:	data16 nopw %cs:0x0(%rax,%rax,1)
    8a9c:	nopl   0x0(%rax)

0000000000008aa0 <png_reciprocal2>:
    8aa0:	push   %rbp
    8aa1:	mov    %rsp,%rbp
    8aa4:	xor    %eax,%eax
    8aa6:	test   %edi,%edi
    8aa8:	jne    8aac <png_reciprocal2+0xc>
    8aaa:	leaveq 
    8aab:	retq   
    8aac:	test   %esi,%esi
    8aae:	jne    8ab2 <png_reciprocal2+0x12>
    8ab0:	leaveq 
    8ab1:	retq   
    8ab2:	movsd  0x249ee(%rip),%xmm0        # 2d4a8 <short_months.6+0x9d3>
    8aba:	cvtsi2sd %edi,%xmm1
    8abe:	divsd  %xmm1,%xmm0
    8ac2:	cvtsi2sd %esi,%xmm1
    8ac6:	divsd  %xmm1,%xmm0
    8aca:	movsd  0x24986(%rip),%xmm1        # 2d458 <short_months.6+0x983>
    8ad2:	addsd  %xmm1,%xmm0
    8ad6:	callq  57e0 <floor@plt>
    8adb:	movsd  0x24985(%rip),%xmm1        # 2d468 <short_months.6+0x993>
    8ae3:	ucomisd %xmm1,%xmm0
    8ae7:	jp     8aeb <png_reciprocal2+0x4b>
    8ae9:	jbe    8aef <png_reciprocal2+0x4f>
    8aeb:	xor    %eax,%eax
    8aed:	leaveq 
    8aee:	retq   
    8aef:	movsd  0x24969(%rip),%xmm1        # 2d460 <short_months.6+0x98b>
    8af7:	ucomisd %xmm1,%xmm0
    8afb:	jae    8b01 <png_reciprocal2+0x61>
    8afd:	xor    %eax,%eax
    8aff:	leaveq 
    8b00:	retq   
    8b01:	cvttsd2si %xmm0,%eax
    8b05:	leaveq 
    8b06:	retq   
    8b07:	nopw   0x0(%rax,%rax,1)

0000000000008b10 <png_gamma_significant>:
    8b10:	push   %rbp
    8b11:	mov    %rsp,%rbp
    8b14:	mov    $0x1,%eax
    8b19:	cmp    $0x17317,%edi
    8b1f:	jg     8b23 <png_gamma_significant+0x13>
    8b21:	leaveq 
    8b22:	retq   
    8b23:	cmp    $0x19a28,%edi
    8b29:	jle    8b2d <png_gamma_significant+0x1d>
    8b2b:	leaveq 
    8b2c:	retq   
    8b2d:	xor    %eax,%eax
    8b2f:	leaveq 
    8b30:	retq   
    8b31:	data16 nopw %cs:0x0(%rax,%rax,1)
    8b3c:	nopl   0x0(%rax)

0000000000008b40 <png_gamma_correct>:
    8b40:	push   %rbp
    8b41:	mov    %rsp,%rbp
    8b44:	movzbl 0x268(%rdi),%eax
    8b4b:	cmp    $0x8,%al
    8b4d:	je     8b5c <png_gamma_correct+0x1c>
    8b4f:	mov    %rsi,%rdi
    8b52:	mov    %rdx,%rsi
    8b55:	callq  8b70 <png_gamma_16bit_correct>
    8b5a:	leaveq 
    8b5b:	retq   
    8b5c:	mov    %rsi,%rdi
    8b5f:	mov    %rdx,%rsi
    8b62:	callq  8be0 <png_gamma_8bit_correct>
    8b67:	movzbl %al,%eax
    8b6a:	leaveq 
    8b6b:	retq   
    8b6c:	nopl   0x0(%rax)

0000000000008b70 <png_gamma_16bit_correct>:
    8b70:	push   %rbp
    8b71:	mov    %rsp,%rbp
    8b74:	sub    $0x10,%rsp
    8b78:	test   %edi,%edi
    8b7a:	jne    8b81 <png_gamma_16bit_correct+0x11>
    8b7c:	mov    %rdi,%rax
    8b7f:	leaveq 
    8b80:	retq   
    8b81:	cmp    $0xfffe,%edi
    8b87:	jbe    8b8e <png_gamma_16bit_correct+0x1e>
    8b89:	mov    %rdi,%rax
    8b8c:	leaveq 
    8b8d:	retq   
    8b8e:	cvtsi2sd %edi,%xmm0
    8b92:	movsd  0x24916(%rip),%xmm1        # 2d4b0 <short_months.6+0x9db>
    8b9a:	divsd  %xmm1,%xmm0
    8b9e:	movdqu %xmm1,-0x10(%rbp)
    8ba3:	cvtsi2sd %esi,%xmm1
    8ba7:	movsd  0x24909(%rip),%xmm2        # 2d4b8 <short_months.6+0x9e3>
    8baf:	mulsd  %xmm2,%xmm1
    8bb3:	callq  5360 <pow@plt>
    8bb8:	movdqu -0x10(%rbp),%xmm1
    8bbd:	mulsd  %xmm1,%xmm0
    8bc1:	movsd  0x2488f(%rip),%xmm1        # 2d458 <short_months.6+0x983>
    8bc9:	addsd  %xmm1,%xmm0
    8bcd:	callq  57e0 <floor@plt>
    8bd2:	cvttsd2si %xmm0,%rax
    8bd7:	leaveq 
    8bd8:	retq   
    8bd9:	nopl   0x0(%rax)

0000000000008be0 <png_gamma_8bit_correct>:
    8be0:	push   %rbp
    8be1:	mov    %rsp,%rbp
    8be4:	sub    $0x10,%rsp
    8be8:	test   %edi,%edi
    8bea:	jne    8bf1 <png_gamma_8bit_correct+0x11>
    8bec:	mov    %rdi,%rax
    8bef:	leaveq 
    8bf0:	retq   
    8bf1:	cmp    $0xfe,%edi
    8bf7:	jbe    8bfe <png_gamma_8bit_correct+0x1e>
    8bf9:	mov    %rdi,%rax
    8bfc:	leaveq 
    8bfd:	retq   
    8bfe:	cvtsi2sd %edi,%xmm0
    8c02:	movsd  0x248b6(%rip),%xmm1        # 2d4c0 <short_months.6+0x9eb>
    8c0a:	divsd  %xmm1,%xmm0
    8c0e:	movdqu %xmm1,-0x10(%rbp)
    8c13:	cvtsi2sd %esi,%xmm1
    8c17:	movsd  0x24899(%rip),%xmm2        # 2d4b8 <short_months.6+0x9e3>
    8c1f:	mulsd  %xmm2,%xmm1
    8c23:	callq  5360 <pow@plt>
    8c28:	movdqu -0x10(%rbp),%xmm1
    8c2d:	mulsd  %xmm1,%xmm0
    8c31:	movsd  0x2481f(%rip),%xmm1        # 2d458 <short_months.6+0x983>
    8c39:	addsd  %xmm1,%xmm0
    8c3d:	callq  57e0 <floor@plt>
    8c42:	cvttsd2si %xmm0,%rax
    8c47:	leaveq 
    8c48:	retq   
    8c49:	nopl   0x0(%rax)

0000000000008c50 <png_destroy_gamma_table>:
    8c50:	push   %rbp
    8c51:	mov    %rsp,%rbp
    8c54:	sub    $0x20,%rsp
    8c58:	mov    %r15,-0x18(%rbp)
    8c5c:	mov    %r13,%r15
    8c5f:	mov    %r15,-0x8(%rbp)
    8c63:	mov    %r14,-0x10(%rbp)
    8c67:	mov    0x2a8(%rdi),%rsi
    8c6e:	mov    %rdi,%r13
    8c71:	callq  5790 <png_free@plt>
    8c76:	movq   $0x0,0x2a8(%r13)
    8c81:	mov    $0x1,%edx
    8c86:	mov    $0x8,%ecx
    8c8b:	xor    %esi,%esi
    8c8d:	mov    0x2b0(%r13),%rax
    8c94:	test   %rax,%rax
    8c97:	jne    8cf5 <png_destroy_gamma_table+0xa5>
    8c99:	mov    0x2b8(%r13),%rsi
    8ca0:	mov    %r13,%rdi
    8ca3:	callq  5790 <png_free@plt>
    8ca8:	movq   $0x0,0x2b8(%r13)
    8cb3:	mov    0x2c0(%r13),%rsi
    8cba:	mov    %r13,%rdi
    8cbd:	callq  5790 <png_free@plt>
    8cc2:	movq   $0x0,0x2c0(%r13)
    8ccd:	mov    0x2c8(%r13),%rax
    8cd4:	test   %rax,%rax
    8cd7:	je     8d4a <png_destroy_gamma_table+0xfa>
    8cd9:	mov    0x2a0(%r13),%eax
    8ce0:	mov    $0x8,%ecx
    8ce5:	sub    %eax,%ecx
    8ce7:	mov    $0x1,%r14d
    8ced:	shl    %cl,%r14d
    8cf0:	xor    %r15d,%r15d
    8cf3:	jmp    8d23 <png_destroy_gamma_table+0xd3>
    8cf5:	mov    0x2a0(%r13),%eax
    8cfc:	sub    %eax,%ecx
    8cfe:	mov    %rsi,%r14
    8d01:	mov    %rdx,%r15
    8d04:	shl    %cl,%r15d
    8d07:	jmp    8d79 <png_destroy_gamma_table+0x129>
    8d09:	mov    0x2c8(%r13),%rcx
    8d10:	movslq %r15d,%rax
    8d13:	mov    (%rcx,%rax,8),%rsi
    8d17:	mov    %r13,%rdi
    8d1a:	callq  5790 <png_free@plt>
    8d1f:	add    $0x1,%r15d
    8d23:	cmp    %r14d,%r15d
    8d26:	jl     8d09 <png_destroy_gamma_table+0xb9>
    8d28:	mov    0x2c8(%r13),%rsi
    8d2f:	mov    %r13,%rdi
    8d32:	callq  5790 <png_free@plt>
    8d37:	movq   $0x0,0x2c8(%r13)
    8d42:	mov    -0x10(%rbp),%r14
    8d46:	mov    -0x8(%rbp),%r15
    8d4a:	mov    0x2d0(%r13),%rax
    8d51:	test   %rax,%rax
    8d54:	jne    8da5 <png_destroy_gamma_table+0x155>
    8d56:	mov    %r15,%r13
    8d59:	mov    -0x18(%rbp),%r15
    8d5d:	leaveq 
    8d5e:	retq   
    8d5f:	mov    0x2b0(%r13),%rcx
    8d66:	movslq %r14d,%rax
    8d69:	mov    (%rcx,%rax,8),%rsi
    8d6d:	mov    %r13,%rdi
    8d70:	callq  5790 <png_free@plt>
    8d75:	add    $0x1,%r14d
    8d79:	cmp    %r15d,%r14d
    8d7c:	jl     8d5f <png_destroy_gamma_table+0x10f>
    8d7e:	mov    0x2b0(%r13),%rsi
    8d85:	mov    %r13,%rdi
    8d88:	callq  5790 <png_free@plt>
    8d8d:	movq   $0x0,0x2b0(%r13)
    8d98:	mov    -0x10(%rbp),%r14
    8d9c:	mov    -0x8(%rbp),%r15
    8da0:	jmpq   8c99 <png_destroy_gamma_table+0x49>
    8da5:	mov    0x2a0(%r13),%eax
    8dac:	mov    $0x8,%ecx
    8db1:	sub    %eax,%ecx
    8db3:	mov    $0x1,%r14d
    8db9:	shl    %cl,%r14d
    8dbc:	xor    %r15d,%r15d
    8dbf:	jmp    8ddb <png_destroy_gamma_table+0x18b>
    8dc1:	mov    0x2d0(%r13),%rcx
    8dc8:	movslq %r15d,%rax
    8dcb:	mov    (%rcx,%rax,8),%rsi
    8dcf:	mov    %r13,%rdi
    8dd2:	callq  5790 <png_free@plt>
    8dd7:	add    $0x1,%r15d
    8ddb:	cmp    %r14d,%r15d
    8dde:	jl     8dc1 <png_destroy_gamma_table+0x171>
    8de0:	mov    0x2d0(%r13),%rsi
    8de7:	mov    %r13,%rdi
    8dea:	callq  5790 <png_free@plt>
    8def:	movq   $0x0,0x2d0(%r13)
    8dfa:	mov    -0x10(%rbp),%r14
    8dfe:	mov    -0x8(%rbp),%r13
    8e02:	mov    -0x18(%rbp),%r15
    8e06:	leaveq 
    8e07:	retq   
    8e08:	nopl   0x0(%rax,%rax,1)

0000000000008e10 <png_build_gamma_table>:
    8e10:	push   %rbp
    8e11:	mov    %rsp,%rbp
    8e14:	sub    $0x20,%rsp
    8e18:	mov    %r14,-0x10(%rbp)
    8e1c:	mov    %r15,-0x18(%rbp)
    8e20:	lea    0x2a8(%rdi),%r15
    8e27:	mov    (%r15),%rax
    8e2a:	test   %rax,%rax
    8e2d:	jne    8e4c <png_build_gamma_table+0x3c>
    8e2f:	mov    0x2b0(%rdi),%rax
    8e36:	test   %rax,%rax
    8e39:	jne    8e4c <png_build_gamma_table+0x3c>
    8e3b:	mov    %rsi,%rcx
    8e3e:	mov    %r15,%rsi
    8e41:	mov    %r14,%r15
    8e44:	mov    %r13,%r14
    8e47:	mov    %rdi,%r13
    8e4a:	jmp    8e81 <png_build_gamma_table+0x71>
    8e4c:	lea    0x244d9(%rip),%rax        # 2d32c <short_months.6+0x857>
    8e53:	mov    %rdi,%rcx
    8e56:	mov    %r13,-0x8(%rbp)
    8e5a:	mov    %rdi,%r13
    8e5d:	mov    %rcx,%rdi
    8e60:	mov    %rsi,%r14
    8e63:	mov    %rax,%rsi
    8e66:	callq  5390 <png_warning@plt>
    8e6b:	mov    %r13,%rdi
    8e6e:	callq  8c50 <png_destroy_gamma_table>
    8e73:	mov    %r14,%rcx
    8e76:	mov    %r15,%rsi
    8e79:	mov    -0x10(%rbp),%r15
    8e7d:	mov    -0x8(%rbp),%r14
    8e81:	mov    $0x186a0,%eax
    8e86:	cmp    $0x8,%ecx
    8e89:	jle    8f21 <png_build_gamma_table+0x111>
    8e8f:	movzbl 0x267(%r13),%ecx
    8e97:	and    $0x2,%ecx
    8e9a:	test   %ecx,%ecx
    8e9c:	jg     8f70 <png_build_gamma_table+0x160>
    8ea2:	movzbl 0x2db(%r13),%edx
    8eaa:	xor    %ecx,%ecx
    8eac:	test   %dl,%dl
    8eae:	jne    8f9f <png_build_gamma_table+0x18f>
    8eb4:	mov    0x134(%r13),%edx
    8ebb:	and    $0x4000400,%edx
    8ec1:	test   %edx,%edx
    8ec3:	jne    8fb4 <png_build_gamma_table+0x1a4>
    8ec9:	cmp    $0x8,%cl
    8ecc:	jbe    8ed3 <png_build_gamma_table+0xc3>
    8ece:	mov    $0x8,%ecx
    8ed3:	test   %edx,%edx
    8ed5:	movzbl %cl,%edx
    8ed8:	mov    %rdx,-0x8(%rbp)
    8edc:	mov    %edx,0x2a0(%r13)
    8ee3:	jne    8fc7 <png_build_gamma_table+0x1b7>
    8ee9:	movslq 0x2a4(%r13),%rsi
    8ef0:	test   %esi,%esi
    8ef2:	jle    8f0a <png_build_gamma_table+0xfa>
    8ef4:	mov    %rdx,%r15
    8ef7:	movslq 0x498(%r13),%rdi
    8efe:	callq  8aa0 <png_reciprocal2>
    8f03:	mov    %r15,%rdx
    8f06:	mov    -0x10(%rbp),%r15
    8f0a:	mov    %rax,%rcx
    8f0d:	lea    0x2b0(%r13),%rsi
    8f14:	mov    %r13,%rdi
    8f17:	callq  a430 <png_build_16bit_table>
    8f1c:	jmpq   8ffa <png_build_gamma_table+0x1ea>
    8f21:	movslq 0x2a4(%r13),%rcx
    8f28:	test   %ecx,%ecx
    8f2a:	jle    8f45 <png_build_gamma_table+0x135>
    8f2c:	mov    %rsi,%r15
    8f2f:	mov    %rcx,%rsi
    8f32:	movslq 0x498(%r13),%rdi
    8f39:	callq  8aa0 <png_reciprocal2>
    8f3e:	mov    %r15,%rsi
    8f41:	mov    -0x10(%rbp),%r15
    8f45:	mov    %rax,%rdx
    8f48:	mov    %r13,%rdi
    8f4b:	callq  a780 <png_build_8bit_table>
    8f50:	mov    0x134(%r13),%eax
    8f57:	and    $0x600080,%eax
    8f5c:	test   %eax,%eax
    8f5e:	jne    9016 <png_build_gamma_table+0x206>
    8f64:	mov    %r14,%r13
    8f67:	mov    %r15,%r14
    8f6a:	mov    -0x18(%rbp),%r15
    8f6e:	leaveq 
    8f6f:	retq   
    8f70:	movzbl 0x2d9(%r13),%edx
    8f78:	movzbl 0x2d8(%r13),%ecx
    8f80:	cmp    %cl,%dl
    8f82:	jbe    8f87 <png_build_gamma_table+0x177>
    8f84:	mov    %rdx,%rcx
    8f87:	movzbl 0x2da(%r13),%edx
    8f8f:	cmp    %dl,%cl
    8f91:	jb     8eaa <png_build_gamma_table+0x9a>
    8f97:	mov    %rcx,%rdx
    8f9a:	jmpq   8eaa <png_build_gamma_table+0x9a>
    8f9f:	cmp    $0xf,%dl
    8fa2:	ja     8eb4 <png_build_gamma_table+0xa4>
    8fa8:	mov    $0x10,%ecx
    8fad:	sub    %dl,%cl
    8faf:	jmpq   8eb4 <png_build_gamma_table+0xa4>
    8fb4:	cmp    $0x4,%cl
    8fb7:	ja     8ec9 <png_build_gamma_table+0xb9>
    8fbd:	mov    $0x5,%ecx
    8fc2:	jmpq   8ec9 <png_build_gamma_table+0xb9>
    8fc7:	movslq 0x2a4(%r13),%rsi
    8fce:	test   %esi,%esi
    8fd0:	jle    8fe8 <png_build_gamma_table+0x1d8>
    8fd2:	mov    %rdx,%r15
    8fd5:	movslq 0x498(%r13),%rdi
    8fdc:	callq  a3d0 <png_product2>
    8fe1:	mov    %r15,%rdx
    8fe4:	mov    -0x10(%rbp),%r15
    8fe8:	mov    %rax,%rcx
    8feb:	lea    0x2b0(%r13),%rsi
    8ff2:	mov    %r13,%rdi
    8ff5:	callq  a610 <png_build_16to8_table>
    8ffa:	mov    0x134(%r13),%eax
    9001:	and    $0x600080,%eax
    9006:	test   %eax,%eax
    9008:	jne    9048 <png_build_gamma_table+0x238>
    900a:	mov    %r14,%r13
    900d:	mov    %r15,%r14
    9010:	mov    -0x18(%rbp),%r15
    9014:	leaveq 
    9015:	retq   
    9016:	movslq 0x498(%r13),%rdi
    901d:	callq  8a40 <png_reciprocal>
    9022:	mov    %rax,%rdx
    9025:	lea    0x2c0(%r13),%rsi
    902c:	mov    %r13,%rdi
    902f:	callq  a780 <png_build_8bit_table>
    9034:	movslq 0x2a4(%r13),%rdi
    903b:	test   %edi,%edi
    903d:	jg     9081 <png_build_gamma_table+0x271>
    903f:	movslq 0x498(%r13),%rdx
    9046:	jmp    9089 <png_build_gamma_table+0x279>
    9048:	movslq 0x498(%r13),%rdi
    904f:	callq  8a40 <png_reciprocal>
    9054:	mov    %rax,%rcx
    9057:	lea    0x2d0(%r13),%rsi
    905e:	mov    %r13,%rdi
    9061:	mov    -0x8(%rbp),%r15
    9065:	mov    %r15,%rdx
    9068:	callq  a430 <png_build_16bit_table>
    906d:	movslq 0x2a4(%r13),%rdi
    9074:	test   %edi,%edi
    9076:	jg     90a4 <png_build_gamma_table+0x294>
    9078:	movslq 0x498(%r13),%rcx
    907f:	jmp    90ac <png_build_gamma_table+0x29c>
    9081:	callq  8a40 <png_reciprocal>
    9086:	mov    %rax,%rdx
    9089:	mov    %r13,%rdi
    908c:	lea    0x2b8(%rdi),%rsi
    9093:	callq  a780 <png_build_8bit_table>
    9098:	mov    %r14,%r13
    909b:	mov    %r15,%r14
    909e:	mov    -0x18(%rbp),%r15
    90a2:	leaveq 
    90a3:	retq   
    90a4:	callq  8a40 <png_reciprocal>
    90a9:	mov    %rax,%rcx
    90ac:	mov    %r15,%rdx
    90af:	mov    %r13,%rdi
    90b2:	lea    0x2c8(%rdi),%rsi
    90b9:	callq  a430 <png_build_16bit_table>
    90be:	mov    %r14,%r13
    90c1:	mov    -0x18(%rbp),%r15
    90c5:	mov    -0x10(%rbp),%r14
    90c9:	leaveq 
    90ca:	retq   
    90cb:	nopl   0x0(%rax,%rax,1)

00000000000090d0 <png_image_error>:
    90d0:	push   %rbp
    90d1:	mov    %rsp,%rbp
    90d4:	sub    $0x10,%rsp
    90d8:	mov    %r15,-0x8(%rbp)
    90dc:	mov    %rsi,%rcx
    90df:	mov    %rdi,%r15
    90e2:	lea    0x24(%r15),%rdi
    90e6:	mov    $0x40,%esi
    90eb:	xor    %edx,%edx
    90ed:	callq  ad20 <png_safecat>
    90f2:	mov    0x20(%r15),%eax
    90f6:	or     $0x2,%eax
    90f9:	mov    %eax,0x20(%r15)
    90fd:	mov    %r15,%rdi
    9100:	callq  5040 <png_image_free@plt>
    9105:	xor    %eax,%eax
    9107:	mov    -0x8(%rbp),%r15
    910b:	leaveq 
    910c:	retq   
    910d:	nopl   (%rax)

0000000000009110 <png_colorspace_check_gamma>:
    9110:	push   %rbp
    9111:	mov    %rsp,%rbp
    9114:	sub    $0x20,%rsp
    9118:	mov    $0x1,%eax
    911d:	movzwl 0x4a(%rsi),%r8d
    9122:	and    $0x1,%r8d
    9126:	test   %r8d,%r8d
    9129:	jg     912d <png_colorspace_check_gamma+0x1d>
    912b:	leaveq 
    912c:	retq   
    912d:	lea    -0x1c(%rbp),%rax
    9131:	movslq (%rsi),%r8
    9134:	mov    $0x186a0,%r9d
    913a:	mov    %r15,-0x18(%rbp)
    913e:	mov    %rcx,-0x10(%rbp)
    9142:	mov    %rdi,-0x8(%rbp)
    9146:	mov    %rdx,%rcx
    9149:	mov    %r9,%rdx
    914c:	mov    %rax,%rdi
    914f:	mov    %rsi,%r15
    9152:	mov    %r8,%rsi
    9155:	callq  8970 <png_muldiv>
    915a:	test   %eax,%eax
    915c:	je     9176 <png_colorspace_check_gamma+0x66>
    915e:	movslq -0x1c(%rbp),%rdi
    9162:	callq  8b10 <png_gamma_significant>
    9167:	test   %eax,%eax
    9169:	jne    9176 <png_colorspace_check_gamma+0x66>
    916b:	mov    $0x1,%eax
    9170:	mov    -0x18(%rbp),%r15
    9174:	leaveq 
    9175:	retq   
    9176:	xor    %edx,%edx
    9178:	movzwl 0x4a(%r15),%eax
    917d:	and    $0x20,%eax
    9180:	test   %eax,%eax
    9182:	jle    91ae <png_colorspace_check_gamma+0x9e>
    9184:	mov    -0x10(%rbp),%r15
    9188:	lea    0x241b7(%rip),%rsi        # 2d346 <short_months.6+0x871>
    918f:	mov    $0x2,%edx
    9194:	mov    -0x8(%rbp),%rdi
    9198:	callq  b130 <png_chunk_report>
    919d:	cmp    $0x2,%r15d
    91a1:	jne    91d9 <png_colorspace_check_gamma+0xc9>
    91a3:	mov    $0x1,%eax
    91a8:	mov    -0x18(%rbp),%r15
    91ac:	leaveq 
    91ad:	retq   
    91ae:	mov    -0x10(%rbp),%r15
    91b2:	cmp    $0x2,%r15d
    91b6:	je     9188 <png_colorspace_check_gamma+0x78>
    91b8:	lea    0x241a7(%rip),%rsi        # 2d366 <short_months.6+0x891>
    91bf:	mov    -0x8(%rbp),%rdi
    91c3:	callq  b130 <png_chunk_report>
    91c8:	cmp    $0x1,%r15d
    91cc:	jne    91e1 <png_colorspace_check_gamma+0xd1>
    91ce:	mov    $0x1,%eax
    91d3:	mov    -0x18(%rbp),%r15
    91d7:	leaveq 
    91d8:	retq   
    91d9:	xor    %eax,%eax
    91db:	mov    -0x18(%rbp),%r15
    91df:	leaveq 
    91e0:	retq   
    91e1:	xor    %eax,%eax
    91e3:	mov    -0x18(%rbp),%r15
    91e7:	leaveq 
    91e8:	retq   
    91e9:	nopl   0x0(%rax)

00000000000091f0 <png_xy_from_XYZ>:
    91f0:	push   %rbp
    91f1:	mov    %rsp,%rbp
    91f4:	sub    $0x50,%rsp
    91f8:	mov    %rdi,-0x40(%rbp)
    91fc:	mov    %rsi,-0x50(%rbp)
    9200:	movslq (%rsi),%rax
    9203:	mov    %rax,%rcx
    9206:	add    0x4(%rsi),%ecx
    9209:	add    0x8(%rsi),%ecx
    920c:	mov    %rax,%rsi
    920f:	mov    %rcx,-0x48(%rbp)
    9213:	mov    $0x186a0,%edx
    9218:	callq  8970 <png_muldiv>
    921d:	test   %eax,%eax
    921f:	jne    9228 <png_xy_from_XYZ+0x38>
    9221:	mov    $0x1,%eax
    9226:	leaveq 
    9227:	retq   
    9228:	mov    -0x40(%rbp),%rax
    922c:	lea    0x4(%rax),%rdi
    9230:	mov    -0x50(%rbp),%rax
    9234:	movslq 0x4(%rax),%rsi
    9238:	mov    $0x186a0,%edx
    923d:	mov    -0x48(%rbp),%rcx
    9241:	mov    %r15,-0x8(%rbp)
    9245:	mov    %rax,%r15
    9248:	callq  8970 <png_muldiv>
    924d:	test   %eax,%eax
    924f:	jne    925c <png_xy_from_XYZ+0x6c>
    9251:	mov    -0x8(%rbp),%r15
    9255:	mov    $0x1,%eax
    925a:	leaveq 
    925b:	retq   
    925c:	movslq (%r15),%rax
    925f:	mov    %rax,-0x28(%rbp)
    9263:	movslq 0x4(%r15),%rax
    9267:	mov    %rax,-0x18(%rbp)
    926b:	movslq 0xc(%r15),%rsi
    926f:	mov    %rsi,%rcx
    9272:	add    0x10(%r15),%ecx
    9276:	add    0x14(%r15),%ecx
    927a:	mov    %rcx,-0x38(%rbp)
    927e:	mov    -0x40(%rbp),%r15
    9282:	lea    0x8(%r15),%rdi
    9286:	mov    $0x186a0,%edx
    928b:	callq  8970 <png_muldiv>
    9290:	test   %eax,%eax
    9292:	jne    929f <png_xy_from_XYZ+0xaf>
    9294:	mov    -0x8(%rbp),%r15
    9298:	mov    $0x1,%eax
    929d:	leaveq 
    929e:	retq   
    929f:	lea    0xc(%r15),%rdi
    92a3:	mov    -0x50(%rbp),%r15
    92a7:	movslq 0x10(%r15),%rsi
    92ab:	mov    $0x186a0,%edx
    92b0:	mov    -0x38(%rbp),%rcx
    92b4:	callq  8970 <png_muldiv>
    92b9:	test   %eax,%eax
    92bb:	jne    92c8 <png_xy_from_XYZ+0xd8>
    92bd:	mov    -0x8(%rbp),%r15
    92c1:	mov    $0x1,%eax
    92c6:	leaveq 
    92c7:	retq   
    92c8:	movslq 0xc(%r15),%rax
    92cc:	mov    %rax,-0x20(%rbp)
    92d0:	movslq 0x10(%r15),%rax
    92d4:	mov    %rax,-0x10(%rbp)
    92d8:	movslq 0x18(%r15),%rsi
    92dc:	mov    %rsi,%rcx
    92df:	add    0x1c(%r15),%ecx
    92e3:	add    0x20(%r15),%ecx
    92e7:	mov    %rcx,-0x30(%rbp)
    92eb:	mov    -0x40(%rbp),%r15
    92ef:	lea    0x10(%r15),%rdi
    92f3:	mov    $0x186a0,%edx
    92f8:	callq  8970 <png_muldiv>
    92fd:	test   %eax,%eax
    92ff:	jne    930c <png_xy_from_XYZ+0x11c>
    9301:	mov    -0x8(%rbp),%r15
    9305:	mov    $0x1,%eax
    930a:	leaveq 
    930b:	retq   
    930c:	lea    0x14(%r15),%rdi
    9310:	mov    -0x50(%rbp),%r15
    9314:	movslq 0x1c(%r15),%rsi
    9318:	mov    $0x186a0,%edx
    931d:	mov    -0x30(%rbp),%rcx
    9321:	callq  8970 <png_muldiv>
    9326:	test   %eax,%eax
    9328:	jne    9335 <png_xy_from_XYZ+0x145>
    932a:	mov    -0x8(%rbp),%r15
    932e:	mov    $0x1,%eax
    9333:	leaveq 
    9334:	retq   
    9335:	movslq 0x1c(%r15),%r8
    9339:	mov    -0x20(%rbp),%rcx
    933d:	mov    -0x28(%rbp),%rax
    9341:	lea    (%rcx,%rax,1),%esi
    9344:	add    0x18(%r15),%esi
    9348:	mov    -0x38(%rbp),%rcx
    934c:	mov    -0x48(%rbp),%rax
    9350:	add    %ecx,%eax
    9352:	mov    -0x30(%rbp),%rcx
    9356:	add    %eax,%ecx
    9358:	mov    %rcx,-0x50(%rbp)
    935c:	mov    -0x40(%rbp),%rax
    9360:	lea    0x18(%rax),%rdi
    9364:	mov    %r8,%r15
    9367:	mov    $0x186a0,%edx
    936c:	callq  8970 <png_muldiv>
    9371:	test   %eax,%eax
    9373:	jne    9380 <png_xy_from_XYZ+0x190>
    9375:	mov    -0x8(%rbp),%r15
    9379:	mov    $0x1,%eax
    937e:	leaveq 
    937f:	retq   
    9380:	mov    -0x10(%rbp),%rcx
    9384:	mov    -0x18(%rbp),%rax
    9388:	add    %ecx,%eax
    938a:	lea    (%r15,%rax,1),%esi
    938e:	mov    -0x40(%rbp),%rax
    9392:	lea    0x1c(%rax),%rdi
    9396:	mov    -0x50(%rbp),%rcx
    939a:	mov    $0x186a0,%edx
    939f:	callq  8970 <png_muldiv>
    93a4:	test   %eax,%eax
    93a6:	jne    93b3 <png_xy_from_XYZ+0x1c3>
    93a8:	mov    -0x8(%rbp),%r15
    93ac:	mov    $0x1,%eax
    93b1:	leaveq 
    93b2:	retq   
    93b3:	xor    %eax,%eax
    93b5:	mov    -0x8(%rbp),%r15
    93b9:	leaveq 
    93ba:	retq   
    93bb:	nopl   0x0(%rax,%rax,1)

00000000000093c0 <png_XYZ_from_xy>:
    93c0:	push   %rbp
    93c1:	mov    %rsp,%rbp
    93c4:	sub    $0x40,%rsp
    93c8:	mov    $0x1,%eax
    93cd:	movslq (%rsi),%r8
    93d0:	test   %r8d,%r8d
    93d3:	jns    93d7 <png_XYZ_from_xy+0x17>
    93d5:	leaveq 
    93d6:	retq   
    93d7:	cmp    $0x186a0,%r8d
    93de:	jle    93e2 <png_XYZ_from_xy+0x22>
    93e0:	leaveq 
    93e1:	retq   
    93e2:	movslq 0x4(%rsi),%rdx
    93e6:	test   %edx,%edx
    93e8:	jns    93ec <png_XYZ_from_xy+0x2c>
    93ea:	leaveq 
    93eb:	retq   
    93ec:	mov    $0x186a0,%ecx
    93f1:	neg    %r8d
    93f4:	add    %ecx,%r8d
    93f7:	cmp    %r8d,%edx
    93fa:	jle    93fe <png_XYZ_from_xy+0x3e>
    93fc:	leaveq 
    93fd:	retq   
    93fe:	movslq 0x8(%rsi),%r8
    9402:	test   %r8d,%r8d
    9405:	jns    9409 <png_XYZ_from_xy+0x49>
    9407:	leaveq 
    9408:	retq   
    9409:	cmp    $0x186a0,%r8d
    9410:	jle    9414 <png_XYZ_from_xy+0x54>
    9412:	leaveq 
    9413:	retq   
    9414:	movslq 0xc(%rsi),%r10
    9418:	test   %r10d,%r10d
    941b:	jns    941f <png_XYZ_from_xy+0x5f>
    941d:	leaveq 
    941e:	retq   
    941f:	mov    %rcx,%r9
    9422:	sub    %r8d,%r9d
    9425:	cmp    %r9d,%r10d
    9428:	jle    942c <png_XYZ_from_xy+0x6c>
    942a:	leaveq 
    942b:	retq   
    942c:	movslq 0x10(%rsi),%r11
    9430:	test   %r11d,%r11d
    9433:	jns    9437 <png_XYZ_from_xy+0x77>
    9435:	leaveq 
    9436:	retq   
    9437:	cmp    $0x186a0,%r11d
    943e:	jle    9442 <png_XYZ_from_xy+0x82>
    9440:	leaveq 
    9441:	retq   
    9442:	movslq 0x14(%rsi),%r10
    9446:	test   %r10d,%r10d
    9449:	jns    944d <png_XYZ_from_xy+0x8d>
    944b:	leaveq 
    944c:	retq   
    944d:	mov    %rcx,%r9
    9450:	sub    %r11d,%r9d
    9453:	cmp    %r9d,%r10d
    9456:	jle    945a <png_XYZ_from_xy+0x9a>
    9458:	leaveq 
    9459:	retq   
    945a:	movslq 0x18(%rsi),%r9
    945e:	test   %r9d,%r9d
    9461:	jns    9465 <png_XYZ_from_xy+0xa5>
    9463:	leaveq 
    9464:	retq   
    9465:	cmp    $0x186a0,%r9d
    946c:	jle    9470 <png_XYZ_from_xy+0xb0>
    946e:	leaveq 
    946f:	retq   
    9470:	mov    %rdi,-0x10(%rbp)
    9474:	movslq 0x1c(%rsi),%rdi
    9478:	cmp    $0x4,%edi
    947b:	jg     947f <png_XYZ_from_xy+0xbf>
    947d:	leaveq 
    947e:	retq   
    947f:	sub    %r9d,%ecx
    9482:	cmp    %ecx,%edi
    9484:	jle    9488 <png_XYZ_from_xy+0xc8>
    9486:	leaveq 
    9487:	retq   
    9488:	sub    %r11d,%r8d
    948b:	sub    %r10d,%edx
    948e:	lea    -0x30(%rbp),%rdi
    9492:	mov    $0x7,%ecx
    9497:	mov    %rsi,-0x28(%rbp)
    949b:	mov    %r8,%rsi
    949e:	callq  8970 <png_muldiv>
    94a3:	test   %eax,%eax
    94a5:	jne    94ae <png_XYZ_from_xy+0xee>
    94a7:	mov    $0x2,%eax
    94ac:	leaveq 
    94ad:	retq   
    94ae:	mov    -0x28(%rbp),%rcx
    94b2:	movslq 0xc(%rcx),%rsi
    94b6:	movslq 0x14(%rcx),%rax
    94ba:	sub    %eax,%esi
    94bc:	movslq (%rcx),%rdx
    94bf:	movslq 0x10(%rcx),%rax
    94c3:	sub    %eax,%edx
    94c5:	lea    -0x2c(%rbp),%rdi
    94c9:	mov    $0x7,%ecx
    94ce:	callq  8970 <png_muldiv>
    94d3:	test   %eax,%eax
    94d5:	jne    94de <png_XYZ_from_xy+0x11e>
    94d7:	mov    $0x2,%eax
    94dc:	leaveq 
    94dd:	retq   
    94de:	movslq -0x30(%rbp),%rax
    94e2:	mov    %rax,-0x18(%rbp)
    94e6:	movslq -0x2c(%rbp),%rax
    94ea:	mov    %rax,-0x20(%rbp)
    94ee:	mov    -0x28(%rbp),%rcx
    94f2:	movslq 0x8(%rcx),%rsi
    94f6:	movslq 0x10(%rcx),%rax
    94fa:	sub    %eax,%esi
    94fc:	movslq 0x1c(%rcx),%rdx
    9500:	movslq 0x14(%rcx),%rax
    9504:	sub    %eax,%edx
    9506:	lea    -0x30(%rbp),%rdi
    950a:	mov    $0x7,%ecx
    950f:	callq  8970 <png_muldiv>
    9514:	test   %eax,%eax
    9516:	jne    951f <png_XYZ_from_xy+0x15f>
    9518:	mov    $0x2,%eax
    951d:	leaveq 
    951e:	retq   
    951f:	mov    -0x28(%rbp),%rcx
    9523:	movslq 0xc(%rcx),%rsi
    9527:	movslq 0x14(%rcx),%rax
    952b:	sub    %eax,%esi
    952d:	movslq 0x18(%rcx),%rdx
    9531:	movslq 0x10(%rcx),%rax
    9535:	sub    %eax,%edx
    9537:	lea    -0x2c(%rbp),%rdi
    953b:	mov    $0x7,%ecx
    9540:	callq  8970 <png_muldiv>
    9545:	test   %eax,%eax
    9547:	jne    9550 <png_XYZ_from_xy+0x190>
    9549:	mov    $0x2,%eax
    954e:	leaveq 
    954f:	retq   
    9550:	mov    -0x20(%rbp),%rax
    9554:	mov    -0x18(%rbp),%rdx
    9558:	sub    %eax,%edx
    955a:	mov    %rdx,-0x20(%rbp)
    955e:	movslq -0x30(%rbp),%rcx
    9562:	movslq -0x2c(%rbp),%rax
    9566:	sub    %eax,%ecx
    9568:	lea    -0x38(%rbp),%rdi
    956c:	mov    -0x28(%rbp),%rax
    9570:	movslq 0x1c(%rax),%rsi
    9574:	mov    %r15,-0x18(%rbp)
    9578:	mov    %rax,%r15
    957b:	callq  8970 <png_muldiv>
    9580:	test   %eax,%eax
    9582:	jne    958f <png_XYZ_from_xy+0x1cf>
    9584:	mov    -0x18(%rbp),%r15
    9588:	mov    $0x1,%eax
    958d:	leaveq 
    958e:	retq   
    958f:	movslq 0x1c(%r15),%rax
    9593:	cmp    -0x38(%rbp),%eax
    9596:	jl     95a3 <png_XYZ_from_xy+0x1e3>
    9598:	mov    -0x18(%rbp),%r15
    959c:	mov    $0x1,%eax
    95a1:	leaveq 
    95a2:	retq   
    95a3:	movslq 0x4(%r15),%rsi
    95a7:	movslq 0x14(%r15),%rax
    95ab:	sub    %eax,%esi
    95ad:	movslq 0x18(%r15),%rdx
    95b1:	movslq 0x10(%r15),%rax
    95b5:	sub    %eax,%edx
    95b7:	mov    $0x7,%ecx
    95bc:	lea    -0x30(%rbp),%rdi
    95c0:	callq  8970 <png_muldiv>
    95c5:	test   %eax,%eax
    95c7:	jne    95d4 <png_XYZ_from_xy+0x214>
    95c9:	mov    -0x18(%rbp),%r15
    95cd:	mov    $0x2,%eax
    95d2:	leaveq 
    95d3:	retq   
    95d4:	movslq (%r15),%rsi
    95d7:	movslq 0x10(%r15),%rax
    95db:	sub    %eax,%esi
    95dd:	movslq 0x1c(%r15),%rdx
    95e1:	movslq 0x14(%r15),%rax
    95e5:	sub    %eax,%edx
    95e7:	lea    -0x2c(%rbp),%rdi
    95eb:	mov    $0x7,%ecx
    95f0:	callq  8970 <png_muldiv>
    95f5:	test   %eax,%eax
    95f7:	jne    9604 <png_XYZ_from_xy+0x244>
    95f9:	mov    -0x18(%rbp),%r15
    95fd:	mov    $0x2,%eax
    9602:	leaveq 
    9603:	retq   
    9604:	movslq -0x30(%rbp),%rcx
    9608:	movslq -0x2c(%rbp),%rax
    960c:	sub    %eax,%ecx
    960e:	lea    -0x34(%rbp),%rdi
    9612:	movslq 0x1c(%r15),%rsi
    9616:	mov    -0x20(%rbp),%rdx
    961a:	callq  8970 <png_muldiv>
    961f:	test   %eax,%eax
    9621:	jne    962e <png_XYZ_from_xy+0x26e>
    9623:	mov    -0x18(%rbp),%r15
    9627:	mov    $0x1,%eax
    962c:	leaveq 
    962d:	retq   
    962e:	movslq 0x1c(%r15),%rdi
    9632:	cmp    -0x34(%rbp),%edi
    9635:	jl     9642 <png_XYZ_from_xy+0x282>
    9637:	mov    -0x18(%rbp),%r15
    963b:	mov    $0x1,%eax
    9640:	leaveq 
    9641:	retq   
    9642:	callq  8a40 <png_reciprocal>
    9647:	mov    %rax,%r15
    964a:	movslq -0x38(%rbp),%rdi
    964e:	callq  8a40 <png_reciprocal>
    9653:	movslq -0x34(%rbp),%rdi
    9657:	mov    %r14,-0x8(%rbp)
    965b:	mov    %rax,%r14
    965e:	callq  8a40 <png_reciprocal>
    9663:	add    %r14d,%eax
    9666:	neg    %eax
    9668:	add    %r15d,%eax
    966b:	test   %eax,%eax
    966d:	jg     967e <png_XYZ_from_xy+0x2be>
    966f:	mov    -0x8(%rbp),%r14
    9673:	mov    -0x18(%rbp),%r15
    9677:	mov    $0x1,%eax
    967c:	leaveq 
    967d:	retq   
    967e:	mov    -0x28(%rbp),%r14
    9682:	movslq (%r14),%rsi
    9685:	movslq -0x38(%rbp),%rcx
    9689:	mov    -0x10(%rbp),%r15
    968d:	mov    %r15,%rdi
    9690:	mov    $0x186a0,%edx
    9695:	mov    %rax,-0x28(%rbp)
    9699:	callq  8970 <png_muldiv>
    969e:	test   %eax,%eax
    96a0:	jne    96b1 <png_XYZ_from_xy+0x2f1>
    96a2:	mov    -0x8(%rbp),%r14
    96a6:	mov    -0x18(%rbp),%r15
    96aa:	mov    $0x1,%eax
    96af:	leaveq 
    96b0:	retq   
    96b1:	lea    0x4(%r15),%rdi
    96b5:	movslq 0x4(%r14),%rsi
    96b9:	movslq -0x38(%rbp),%rcx
    96bd:	mov    $0x186a0,%edx
    96c2:	callq  8970 <png_muldiv>
    96c7:	test   %eax,%eax
    96c9:	jne    96da <png_XYZ_from_xy+0x31a>
    96cb:	mov    -0x8(%rbp),%r14
    96cf:	mov    -0x18(%rbp),%r15
    96d3:	mov    $0x1,%eax
    96d8:	leaveq 
    96d9:	retq   
    96da:	movslq 0x4(%r14),%rax
    96de:	add    (%r14),%eax
    96e1:	mov    $0x186a0,%edx
    96e6:	mov    %rdx,%rsi
    96e9:	sub    %eax,%esi
    96eb:	lea    0x8(%r15),%rdi
    96ef:	movslq -0x38(%rbp),%rcx
    96f3:	callq  8970 <png_muldiv>
    96f8:	test   %eax,%eax
    96fa:	jne    970b <png_XYZ_from_xy+0x34b>
    96fc:	mov    -0x8(%rbp),%r14
    9700:	mov    -0x18(%rbp),%r15
    9704:	mov    $0x1,%eax
    9709:	leaveq 
    970a:	retq   
    970b:	lea    0xc(%r15),%rdi
    970f:	movslq 0x8(%r14),%rsi
    9713:	movslq -0x34(%rbp),%rcx
    9717:	mov    $0x186a0,%edx
    971c:	callq  8970 <png_muldiv>
    9721:	test   %eax,%eax
    9723:	jne    9734 <png_XYZ_from_xy+0x374>
    9725:	mov    -0x8(%rbp),%r14
    9729:	mov    -0x18(%rbp),%r15
    972d:	mov    $0x1,%eax
    9732:	leaveq 
    9733:	retq   
    9734:	lea    0x10(%r15),%rdi
    9738:	movslq 0xc(%r14),%rsi
    973c:	movslq -0x34(%rbp),%rcx
    9740:	mov    $0x186a0,%edx
    9745:	callq  8970 <png_muldiv>
    974a:	test   %eax,%eax
    974c:	jne    975d <png_XYZ_from_xy+0x39d>
    974e:	mov    -0x8(%rbp),%r14
    9752:	mov    -0x18(%rbp),%r15
    9756:	mov    $0x1,%eax
    975b:	leaveq 
    975c:	retq   
    975d:	movslq 0xc(%r14),%rax
    9761:	add    0x8(%r14),%eax
    9765:	mov    $0x186a0,%edx
    976a:	mov    %rdx,%rsi
    976d:	sub    %eax,%esi
    976f:	lea    0x14(%r15),%rdi
    9773:	movslq -0x34(%rbp),%rcx
    9777:	callq  8970 <png_muldiv>
    977c:	test   %eax,%eax
    977e:	jne    978f <png_XYZ_from_xy+0x3cf>
    9780:	mov    -0x8(%rbp),%r14
    9784:	mov    -0x18(%rbp),%r15
    9788:	mov    $0x1,%eax
    978d:	leaveq 
    978e:	retq   
    978f:	lea    0x18(%r15),%rdi
    9793:	movslq 0x10(%r14),%rsi
    9797:	mov    -0x28(%rbp),%rdx
    979b:	mov    $0x186a0,%ecx
    97a0:	callq  8970 <png_muldiv>
    97a5:	test   %eax,%eax
    97a7:	jne    97b8 <png_XYZ_from_xy+0x3f8>
    97a9:	mov    -0x8(%rbp),%r14
    97ad:	mov    -0x18(%rbp),%r15
    97b1:	mov    $0x1,%eax
    97b6:	leaveq 
    97b7:	retq   
    97b8:	lea    0x1c(%r15),%rdi
    97bc:	movslq 0x14(%r14),%rsi
    97c0:	mov    -0x28(%rbp),%rdx
    97c4:	mov    $0x186a0,%ecx
    97c9:	callq  8970 <png_muldiv>
    97ce:	test   %eax,%eax
    97d0:	jne    97e1 <png_XYZ_from_xy+0x421>
    97d2:	mov    -0x8(%rbp),%r14
    97d6:	mov    -0x18(%rbp),%r15
    97da:	mov    $0x1,%eax
    97df:	leaveq 
    97e0:	retq   
    97e1:	movslq 0x14(%r14),%rax
    97e5:	add    0x10(%r14),%eax
    97e9:	mov    $0x186a0,%ecx
    97ee:	mov    %rcx,%rsi
    97f1:	sub    %eax,%esi
    97f3:	lea    0x20(%r15),%rdi
    97f7:	mov    -0x28(%rbp),%rdx
    97fb:	callq  8970 <png_muldiv>
    9800:	test   %eax,%eax
    9802:	jne    9813 <png_XYZ_from_xy+0x453>
    9804:	mov    -0x8(%rbp),%r14
    9808:	mov    -0x18(%rbp),%r15
    980c:	mov    $0x1,%eax
    9811:	leaveq 
    9812:	retq   
    9813:	xor    %eax,%eax
    9815:	mov    -0x8(%rbp),%r14
    9819:	mov    -0x18(%rbp),%r15
    981d:	leaveq 
    981e:	retq   
    981f:	nop

0000000000009820 <png_XYZ_normalize>:
    9820:	push   %rbp
    9821:	mov    %rsp,%rbp
    9824:	sub    $0x10,%rsp
    9828:	mov    $0x1,%eax
    982d:	movslq 0x4(%rdi),%r10
    9831:	test   %r10d,%r10d
    9834:	jns    9838 <png_XYZ_normalize+0x18>
    9836:	leaveq 
    9837:	retq   
    9838:	movslq 0x10(%rdi),%r9
    983c:	test   %r9d,%r9d
    983f:	jns    9843 <png_XYZ_normalize+0x23>
    9841:	leaveq 
    9842:	retq   
    9843:	movslq 0x1c(%rdi),%r11
    9847:	test   %r11d,%r11d
    984a:	jns    984e <png_XYZ_normalize+0x2e>
    984c:	leaveq 
    984d:	retq   
    984e:	movslq (%rdi),%rsi
    9851:	test   %esi,%esi
    9853:	jns    9857 <png_XYZ_normalize+0x37>
    9855:	leaveq 
    9856:	retq   
    9857:	movslq 0xc(%rdi),%r8
    985b:	test   %r8d,%r8d
    985e:	jns    9862 <png_XYZ_normalize+0x42>
    9860:	leaveq 
    9861:	retq   
    9862:	movslq 0x18(%rdi),%rdx
    9866:	test   %edx,%edx
    9868:	jns    986c <png_XYZ_normalize+0x4c>
    986a:	leaveq 
    986b:	retq   
    986c:	movslq 0x8(%rdi),%rcx
    9870:	test   %ecx,%ecx
    9872:	jns    9876 <png_XYZ_normalize+0x56>
    9874:	leaveq 
    9875:	retq   
    9876:	movslq 0x14(%rdi),%rcx
    987a:	test   %ecx,%ecx
    987c:	jns    9880 <png_XYZ_normalize+0x60>
    987e:	leaveq 
    987f:	retq   
    9880:	movslq 0x20(%rdi),%rcx
    9884:	test   %ecx,%ecx
    9886:	jns    988a <png_XYZ_normalize+0x6a>
    9888:	leaveq 
    9889:	retq   
    988a:	mov    %r10,%rcx
    988d:	xor    $0x7fffffff,%ecx
    9893:	cmp    %ecx,%r8d
    9896:	jle    989a <png_XYZ_normalize+0x7a>
    9898:	leaveq 
    9899:	retq   
    989a:	lea    (%r10,%r9,1),%r8d
    989e:	mov    %r8,%rcx
    98a1:	xor    $0x7fffffff,%ecx
    98a7:	cmp    %ecx,%edx
    98a9:	jle    98ad <png_XYZ_normalize+0x8d>
    98ab:	leaveq 
    98ac:	retq   
    98ad:	xor    %eax,%eax
    98af:	add    %r11d,%r8d
    98b2:	cmp    $0x186a0,%r8d
    98b9:	jne    98bd <png_XYZ_normalize+0x9d>
    98bb:	leaveq 
    98bc:	retq   
    98bd:	mov    $0x186a0,%edx
    98c2:	mov    %rdi,%rax
    98c5:	mov    %r8,%rcx
    98c8:	mov    %rdi,-0x10(%rbp)
    98cc:	mov    %r8,-0x8(%rbp)
    98d0:	mov    %rax,%rdi
    98d3:	callq  8970 <png_muldiv>
    98d8:	test   %eax,%eax
    98da:	jne    98e3 <png_XYZ_normalize+0xc3>
    98dc:	mov    $0x1,%eax
    98e1:	leaveq 
    98e2:	retq   
    98e3:	mov    -0x10(%rbp),%rax
    98e7:	lea    0x4(%rax),%rdi
    98eb:	movslq 0x4(%rax),%rsi
    98ef:	mov    $0x186a0,%edx
    98f4:	mov    -0x8(%rbp),%rcx
    98f8:	callq  8970 <png_muldiv>
    98fd:	test   %eax,%eax
    98ff:	jne    9908 <png_XYZ_normalize+0xe8>
    9901:	mov    $0x1,%eax
    9906:	leaveq 
    9907:	retq   
    9908:	mov    -0x10(%rbp),%rax
    990c:	lea    0x8(%rax),%rdi
    9910:	movslq 0x8(%rax),%rsi
    9914:	mov    $0x186a0,%edx
    9919:	mov    -0x8(%rbp),%rcx
    991d:	callq  8970 <png_muldiv>
    9922:	test   %eax,%eax
    9924:	jne    992d <png_XYZ_normalize+0x10d>
    9926:	mov    $0x1,%eax
    992b:	leaveq 
    992c:	retq   
    992d:	mov    -0x10(%rbp),%rax
    9931:	lea    0xc(%rax),%rdi
    9935:	movslq 0xc(%rax),%rsi
    9939:	mov    $0x186a0,%edx
    993e:	mov    -0x8(%rbp),%rcx
    9942:	callq  8970 <png_muldiv>
    9947:	test   %eax,%eax
    9949:	jne    9952 <png_XYZ_normalize+0x132>
    994b:	mov    $0x1,%eax
    9950:	leaveq 
    9951:	retq   
    9952:	mov    -0x10(%rbp),%rax
    9956:	lea    0x10(%rax),%rdi
    995a:	movslq 0x10(%rax),%rsi
    995e:	mov    $0x186a0,%edx
    9963:	mov    -0x8(%rbp),%rcx
    9967:	callq  8970 <png_muldiv>
    996c:	test   %eax,%eax
    996e:	jne    9977 <png_XYZ_normalize+0x157>
    9970:	mov    $0x1,%eax
    9975:	leaveq 
    9976:	retq   
    9977:	mov    -0x10(%rbp),%rax
    997b:	lea    0x14(%rax),%rdi
    997f:	movslq 0x14(%rax),%rsi
    9983:	mov    $0x186a0,%edx
    9988:	mov    -0x8(%rbp),%rcx
    998c:	callq  8970 <png_muldiv>
    9991:	test   %eax,%eax
    9993:	jne    999c <png_XYZ_normalize+0x17c>
    9995:	mov    $0x1,%eax
    999a:	leaveq 
    999b:	retq   
    999c:	mov    -0x10(%rbp),%rax
    99a0:	lea    0x18(%rax),%rdi
    99a4:	movslq 0x18(%rax),%rsi
    99a8:	mov    $0x186a0,%edx
    99ad:	mov    -0x8(%rbp),%rcx
    99b1:	callq  8970 <png_muldiv>
    99b6:	test   %eax,%eax
    99b8:	jne    99c1 <png_XYZ_normalize+0x1a1>
    99ba:	mov    $0x1,%eax
    99bf:	leaveq 
    99c0:	retq   
    99c1:	mov    -0x10(%rbp),%rax
    99c5:	lea    0x1c(%rax),%rdi
    99c9:	movslq 0x1c(%rax),%rsi
    99cd:	mov    $0x186a0,%edx
    99d2:	mov    -0x8(%rbp),%rcx
    99d6:	callq  8970 <png_muldiv>
    99db:	test   %eax,%eax
    99dd:	jne    99e6 <png_XYZ_normalize+0x1c6>
    99df:	mov    $0x1,%eax
    99e4:	leaveq 
    99e5:	retq   
    99e6:	mov    -0x10(%rbp),%rax
    99ea:	lea    0x20(%rax),%rdi
    99ee:	movslq 0x20(%rax),%rsi
    99f2:	mov    $0x186a0,%edx
    99f7:	mov    -0x8(%rbp),%rcx
    99fb:	callq  8970 <png_muldiv>
    9a00:	test   %eax,%eax
    9a02:	jne    9a0b <png_XYZ_normalize+0x1eb>
    9a04:	mov    $0x1,%eax
    9a09:	leaveq 
    9a0a:	retq   
    9a0b:	xor    %eax,%eax
    9a0d:	leaveq 
    9a0e:	retq   
    9a0f:	nop

0000000000009a10 <png_colorspace_endpoints_match>:
    9a10:	push   %rbp
    9a11:	mov    %rsp,%rbp
    9a14:	xor    %eax,%eax
    9a16:	movslq 0x18(%rsi),%r9
    9a1a:	mov    %r9,%rcx
    9a1d:	sub    %edx,%ecx
    9a1f:	movslq 0x18(%rdi),%r8
    9a23:	cmp    %r8d,%ecx
    9a26:	jle    9a2a <png_colorspace_endpoints_match+0x1a>
    9a28:	leaveq 
    9a29:	retq   
    9a2a:	lea    (%rdx,%r9,1),%ecx
    9a2e:	cmp    %ecx,%r8d
    9a31:	jle    9a35 <png_colorspace_endpoints_match+0x25>
    9a33:	leaveq 
    9a34:	retq   
    9a35:	movslq 0x1c(%rsi),%r9
    9a39:	mov    %r9,%rcx
    9a3c:	sub    %edx,%ecx
    9a3e:	movslq 0x1c(%rdi),%r8
    9a42:	cmp    %r8d,%ecx
    9a45:	jle    9a49 <png_colorspace_endpoints_match+0x39>
    9a47:	leaveq 
    9a48:	retq   
    9a49:	lea    (%rdx,%r9,1),%ecx
    9a4d:	cmp    %ecx,%r8d
    9a50:	jle    9a54 <png_colorspace_endpoints_match+0x44>
    9a52:	leaveq 
    9a53:	retq   
    9a54:	movslq (%rsi),%r9
    9a57:	mov    %r9,%rcx
    9a5a:	sub    %edx,%ecx
    9a5c:	movslq (%rdi),%r8
    9a5f:	cmp    %r8d,%ecx
    9a62:	jle    9a66 <png_colorspace_endpoints_match+0x56>
    9a64:	leaveq 
    9a65:	retq   
    9a66:	lea    (%rdx,%r9,1),%ecx
    9a6a:	cmp    %ecx,%r8d
    9a6d:	jle    9a71 <png_colorspace_endpoints_match+0x61>
    9a6f:	leaveq 
    9a70:	retq   
    9a71:	movslq 0x4(%rsi),%r9
    9a75:	mov    %r9,%rcx
    9a78:	sub    %edx,%ecx
    9a7a:	movslq 0x4(%rdi),%r8
    9a7e:	cmp    %r8d,%ecx
    9a81:	jle    9a85 <png_colorspace_endpoints_match+0x75>
    9a83:	leaveq 
    9a84:	retq   
    9a85:	lea    (%rdx,%r9,1),%ecx
    9a89:	cmp    %ecx,%r8d
    9a8c:	jle    9a90 <png_colorspace_endpoints_match+0x80>
    9a8e:	leaveq 
    9a8f:	retq   
    9a90:	movslq 0x8(%rsi),%r9
    9a94:	mov    %r9,%rcx
    9a97:	sub    %edx,%ecx
    9a99:	movslq 0x8(%rdi),%r8
    9a9d:	cmp    %r8d,%ecx
    9aa0:	jle    9aa4 <png_colorspace_endpoints_match+0x94>
    9aa2:	leaveq 
    9aa3:	retq   
    9aa4:	lea    (%rdx,%r9,1),%ecx
    9aa8:	cmp    %ecx,%r8d
    9aab:	jle    9aaf <png_colorspace_endpoints_match+0x9f>
    9aad:	leaveq 
    9aae:	retq   
    9aaf:	movslq 0xc(%rsi),%r9
    9ab3:	mov    %r9,%rcx
    9ab6:	sub    %edx,%ecx
    9ab8:	movslq 0xc(%rdi),%r8
    9abc:	cmp    %r8d,%ecx
    9abf:	jle    9ac3 <png_colorspace_endpoints_match+0xb3>
    9ac1:	leaveq 
    9ac2:	retq   
    9ac3:	lea    (%rdx,%r9,1),%ecx
    9ac7:	cmp    %ecx,%r8d
    9aca:	jle    9ace <png_colorspace_endpoints_match+0xbe>
    9acc:	leaveq 
    9acd:	retq   
    9ace:	movslq 0x10(%rsi),%r8
    9ad2:	mov    %r8,%rcx
    9ad5:	sub    %edx,%ecx
    9ad7:	movslq 0x10(%rdi),%r9
    9adb:	cmp    %r9d,%ecx
    9ade:	jle    9ae2 <png_colorspace_endpoints_match+0xd2>
    9ae0:	leaveq 
    9ae1:	retq   
    9ae2:	lea    (%rdx,%r8,1),%ecx
    9ae6:	cmp    %ecx,%r9d
    9ae9:	jle    9aed <png_colorspace_endpoints_match+0xdd>
    9aeb:	leaveq 
    9aec:	retq   
    9aed:	movslq 0x14(%rsi),%r8
    9af1:	mov    %r8,%rcx
    9af4:	sub    %edx,%ecx
    9af6:	movslq 0x14(%rdi),%rsi
    9afa:	cmp    %esi,%ecx
    9afc:	jle    9b00 <png_colorspace_endpoints_match+0xf0>
    9afe:	leaveq 
    9aff:	retq   
    9b00:	lea    (%rdx,%r8,1),%ecx
    9b04:	cmp    %ecx,%esi
    9b06:	jle    9b0a <png_colorspace_endpoints_match+0xfa>
    9b08:	leaveq 
    9b09:	retq   
    9b0a:	mov    $0x1,%eax
    9b0f:	leaveq 
    9b10:	retq   
    9b11:	data16 nopw %cs:0x0(%rax,%rax,1)
    9b1c:	nopl   0x0(%rax)

0000000000009b20 <png_colorspace_check_xy>:
    9b20:	push   %rbp
    9b21:	mov    %rsp,%rbp
    9b24:	sub    $0x30,%rsp
    9b28:	mov    %rdi,-0x10(%rbp)
    9b2c:	mov    %rsi,-0x8(%rbp)
    9b30:	callq  93c0 <png_XYZ_from_xy>
    9b35:	test   %eax,%eax
    9b37:	je     9b3b <png_colorspace_check_xy+0x1b>
    9b39:	leaveq 
    9b3a:	retq   
    9b3b:	lea    -0x30(%rbp),%rdi
    9b3f:	mov    -0x10(%rbp),%rsi
    9b43:	callq  91f0 <png_xy_from_XYZ>
    9b48:	test   %eax,%eax
    9b4a:	je     9b4e <png_colorspace_check_xy+0x2e>
    9b4c:	leaveq 
    9b4d:	retq   
    9b4e:	mov    $0x5,%edx
    9b53:	lea    -0x30(%rbp),%rsi
    9b57:	mov    -0x8(%rbp),%rdi
    9b5b:	callq  9a10 <png_colorspace_endpoints_match>
    9b60:	test   %eax,%eax
    9b62:	je     9b68 <png_colorspace_check_xy+0x48>
    9b64:	xor    %eax,%eax
    9b66:	leaveq 
    9b67:	retq   
    9b68:	mov    $0x1,%eax
    9b6d:	leaveq 
    9b6e:	retq   
    9b6f:	nop

0000000000009b70 <png_colorspace_check_XYZ>:
    9b70:	push   %rbp
    9b71:	mov    %rsp,%rbp
    9b74:	sub    $0x40,%rsp
    9b78:	mov    %rdi,-0x8(%rbp)
    9b7c:	mov    %rsi,%rdi
    9b7f:	mov    %rdi,-0x10(%rbp)
    9b83:	callq  9820 <png_XYZ_normalize>
    9b88:	test   %eax,%eax
    9b8a:	je     9b8e <png_colorspace_check_XYZ+0x1e>
    9b8c:	leaveq 
    9b8d:	retq   
    9b8e:	mov    -0x8(%rbp),%rdi
    9b92:	mov    -0x10(%rbp),%rax
    9b96:	mov    %rax,%rsi
    9b99:	mov    %r15,-0x10(%rbp)
    9b9d:	mov    %rax,%r15
    9ba0:	callq  91f0 <png_xy_from_XYZ>
    9ba5:	test   %eax,%eax
    9ba7:	je     9baf <png_colorspace_check_XYZ+0x3f>
    9ba9:	mov    -0x10(%rbp),%r15
    9bad:	leaveq 
    9bae:	retq   
    9baf:	mov    (%r15),%rax
    9bb2:	mov    %rax,-0x34(%rbp)
    9bb6:	mov    0x8(%r15),%rax
    9bba:	mov    %rax,-0x2c(%rbp)
    9bbe:	mov    0x10(%r15),%rax
    9bc2:	mov    %rax,-0x24(%rbp)
    9bc6:	mov    0x18(%r15),%rax
    9bca:	mov    %rax,-0x1c(%rbp)
    9bce:	mov    0x20(%r15),%eax
    9bd2:	mov    %eax,-0x14(%rbp)
    9bd5:	lea    -0x34(%rbp),%rdi
    9bd9:	mov    -0x8(%rbp),%rsi
    9bdd:	callq  9b20 <png_colorspace_check_xy>
    9be2:	mov    -0x10(%rbp),%r15
    9be6:	leaveq 
    9be7:	retq   
    9be8:	nopl   0x0(%rax,%rax,1)

0000000000009bf0 <png_colorspace_set_xy_and_XYZ>:
    9bf0:	push   %rbp
    9bf1:	mov    %rsp,%rbp
    9bf4:	sub    $0x30,%rsp
    9bf8:	xor    %eax,%eax
    9bfa:	movzwl 0x4a(%rsi),%r10d
    9bff:	mov    %r10,%r9
    9c02:	and    $0x8000,%r9d
    9c09:	test   %r9d,%r9d
    9c0c:	jle    9c10 <png_colorspace_set_xy_and_XYZ+0x20>
    9c0e:	leaveq 
    9c0f:	retq   
    9c10:	cmp    $0x1,%r8d
    9c14:	jle    9cb6 <png_colorspace_set_xy_and_XYZ+0xc6>
    9c1a:	mov    %r14,%rax
    9c1d:	mov    %rsi,%r14
    9c20:	mov    %rdx,%rdi
    9c23:	mov    (%rdi),%rdx
    9c26:	mov    %rdx,0x4(%r14)
    9c2a:	mov    0x8(%rdi),%rdx
    9c2e:	mov    %rdx,0xc(%r14)
    9c32:	mov    0x10(%rdi),%rdx
    9c36:	mov    %rdx,0x14(%r14)
    9c3a:	mov    0x18(%rdi),%rdx
    9c3e:	mov    %rdx,0x1c(%r14)
    9c42:	mov    (%rcx),%rdx
    9c45:	mov    %rdx,0x24(%r14)
    9c49:	mov    0x8(%rcx),%rdx
    9c4d:	mov    %rdx,0x2c(%r14)
    9c51:	mov    0x10(%rcx),%rdx
    9c55:	mov    %rdx,0x34(%r14)
    9c59:	mov    0x18(%rcx),%rdx
    9c5d:	mov    %rdx,0x3c(%r14)
    9c61:	movzwl 0x4a(%r14),%r8d
    9c66:	mov    %r8,%rdx
    9c69:	or     $0x2,%dx
    9c6d:	mov    0x20(%rcx),%ecx
    9c70:	mov    %dx,0x4a(%r14)
    9c75:	mov    %ecx,0x44(%r14)
    9c79:	lea    0x22d0c(%rip),%rsi        # 2c98c <sRGB_xy>
    9c80:	mov    $0x3e8,%edx
    9c85:	mov    %rax,-0x28(%rbp)
    9c89:	mov    %r15,-0x30(%rbp)
    9c8d:	mov    %r8,%r15
    9c90:	callq  9a10 <png_colorspace_endpoints_match>
    9c95:	test   %eax,%eax
    9c97:	jne    9cce <png_colorspace_set_xy_and_XYZ+0xde>
    9c99:	and    $0xffbd,%r15w
    9c9e:	lea    0x2(%r15),%eax
    9ca2:	mov    %ax,0x4a(%r14)
    9ca7:	mov    $0x2,%eax
    9cac:	mov    -0x30(%rbp),%r15
    9cb0:	mov    -0x28(%rbp),%r14
    9cb4:	leaveq 
    9cb5:	retq   
    9cb6:	mov    %r10,%rax
    9cb9:	and    $0x2,%eax
    9cbc:	test   %eax,%eax
    9cbe:	jg     9ce7 <png_colorspace_set_xy_and_XYZ+0xf7>
    9cc0:	mov    %r14,%rax
    9cc3:	mov    %rsi,%r14
    9cc6:	mov    %rdx,%rdi
    9cc9:	jmpq   9c23 <png_colorspace_set_xy_and_XYZ+0x33>
    9cce:	or     $0x42,%r15w
    9cd3:	mov    %r15w,0x4a(%r14)
    9cd8:	mov    $0x2,%eax
    9cdd:	mov    -0x30(%rbp),%r15
    9ce1:	mov    -0x28(%rbp),%r14
    9ce5:	leaveq 
    9ce6:	retq   
    9ce7:	lea    0x4(%rsi),%rax
    9ceb:	mov    $0x64,%r9d
    9cf1:	mov    %rdx,%r11
    9cf4:	mov    %r13,-0x10(%rbp)
    9cf8:	mov    %r14,-0x18(%rbp)
    9cfc:	mov    %r15,-0x20(%rbp)
    9d00:	mov    %rdx,-0x30(%rbp)
    9d04:	mov    %rdi,-0x8(%rbp)
    9d08:	mov    %rcx,-0x28(%rbp)
    9d0c:	mov    %r9,%rdx
    9d0f:	mov    %r11,%rdi
    9d12:	mov    %r10,%r13
    9d15:	mov    %rsi,%r14
    9d18:	mov    %rax,%rsi
    9d1b:	mov    %r8,%r15
    9d1e:	callq  9a10 <png_colorspace_endpoints_match>
    9d23:	test   %eax,%eax
    9d25:	je     9d45 <png_colorspace_set_xy_and_XYZ+0x155>
    9d27:	test   %r15d,%r15d
    9d2a:	je     9d70 <png_colorspace_set_xy_and_XYZ+0x180>
    9d2c:	mov    -0x28(%rbp),%rcx
    9d30:	mov    -0x30(%rbp),%rdi
    9d34:	mov    -0x20(%rbp),%r15
    9d38:	mov    -0x18(%rbp),%rax
    9d3c:	mov    -0x10(%rbp),%r13
    9d40:	jmpq   9c23 <png_colorspace_set_xy_and_XYZ+0x33>
    9d45:	or     $0x8000,%r13w
    9d4b:	mov    %r13w,0x4a(%r14)
    9d50:	lea    0x2363a(%rip),%rsi        # 2d391 <short_months.6+0x8bc>
    9d57:	mov    -0x8(%rbp),%rdi
    9d5b:	callq  5590 <png_benign_error@plt>
    9d60:	mov    -0x20(%rbp),%r15
    9d64:	mov    -0x18(%rbp),%r14
    9d68:	mov    -0x10(%rbp),%r13
    9d6c:	xor    %eax,%eax
    9d6e:	leaveq 
    9d6f:	retq   
    9d70:	mov    $0x1,%eax
    9d75:	mov    -0x20(%rbp),%r15
    9d79:	mov    -0x18(%rbp),%r14
    9d7d:	mov    -0x10(%rbp),%r13
    9d81:	leaveq 
    9d82:	retq   
    9d83:	data16 nopw %cs:0x0(%rax,%rax,1)
    9d8e:	xchg   %ax,%ax

0000000000009d90 <png_icc_tag_char>:
    9d90:	push   %rbp
    9d91:	mov    %rsp,%rbp
    9d94:	mov    $0x3f,%eax
    9d99:	movzbl %dil,%ecx
    9d9d:	cmp    $0x1f,%ecx
    9da0:	ja     9da4 <png_icc_tag_char+0x14>
    9da2:	leaveq 
    9da3:	retq   
    9da4:	cmp    $0x7e,%ecx
    9da7:	jbe    9dab <png_icc_tag_char+0x1b>
    9da9:	leaveq 
    9daa:	retq   
    9dab:	mov    %rcx,%rax
    9dae:	leaveq 
    9daf:	retq   

0000000000009db0 <png_icc_tag_name>:
    9db0:	push   %rbp
    9db1:	mov    %rsp,%rbp
    9db4:	sub    $0x20,%rsp
    9db8:	mov    %r14,-0x18(%rbp)
    9dbc:	mov    %r15,-0x20(%rbp)
    9dc0:	mov    %r13,-0x10(%rbp)
    9dc4:	mov    %r12,-0x8(%rbp)
    9dc8:	mov    %rbx,%r12
    9dcb:	mov    %rsi,%rbx
    9dce:	mov    %rdi,%r13
    9dd1:	mov    %rbx,%rdi
    9dd4:	callq  9d90 <png_icc_tag_char>
    9dd9:	mov    %rax,%r14
    9ddc:	mov    %rbx,%rdi
    9ddf:	shr    $0x8,%edi
    9de2:	callq  9d90 <png_icc_tag_char>
    9de7:	mov    %rax,%r15
    9dea:	mov    %rbx,%rdi
    9ded:	shr    $0x10,%edi
    9df0:	callq  9d90 <png_icc_tag_char>
    9df5:	movb   $0x27,0x0(%r13)
    9dfa:	shr    $0x18,%ebx
    9dfd:	mov    %rbx,%rdi
    9e00:	mov    %rax,%rbx
    9e03:	callq  9d90 <png_icc_tag_char>
    9e08:	mov    %al,0x1(%r13)
    9e0c:	mov    %bl,0x2(%r13)
    9e10:	mov    %r15b,0x3(%r13)
    9e14:	mov    %r14b,0x4(%r13)
    9e18:	movb   $0x27,0x5(%r13)
    9e1d:	mov    %r12,%rbx
    9e20:	mov    -0x8(%rbp),%r12
    9e24:	mov    -0x10(%rbp),%r13
    9e28:	mov    -0x20(%rbp),%r15
    9e2c:	mov    -0x18(%rbp),%r14
    9e30:	leaveq 
    9e31:	retq   
    9e32:	data16 nopw %cs:0x0(%rax,%rax,1)
    9e3d:	nopl   (%rax)

0000000000009e40 <is_ICC_signature_char>:
    9e40:	push   %rbp
    9e41:	mov    %rsp,%rbp
    9e44:	mov    $0x1,%eax
    9e49:	cmp    $0x20,%rdi
    9e4d:	jne    9e51 <is_ICC_signature_char+0x11>
    9e4f:	leaveq 
    9e50:	retq   
    9e51:	cmp    $0x2f,%rdi
    9e55:	ja     9e6a <is_ICC_signature_char+0x2a>
    9e57:	cmp    $0x40,%rdi
    9e5b:	ja     9e72 <is_ICC_signature_char+0x32>
    9e5d:	xor    %ecx,%ecx
    9e5f:	cmp    $0x60,%rdi
    9e63:	ja     9e7a <is_ICC_signature_char+0x3a>
    9e65:	mov    %rcx,%rax
    9e68:	leaveq 
    9e69:	retq   
    9e6a:	cmp    $0x39,%rdi
    9e6e:	ja     9e57 <is_ICC_signature_char+0x17>
    9e70:	leaveq 
    9e71:	retq   
    9e72:	cmp    $0x5a,%rdi
    9e76:	ja     9e5d <is_ICC_signature_char+0x1d>
    9e78:	leaveq 
    9e79:	retq   
    9e7a:	cmp    $0x7a,%rdi
    9e7e:	ja     9e82 <is_ICC_signature_char+0x42>
    9e80:	leaveq 
    9e81:	retq   
    9e82:	mov    %rcx,%rax
    9e85:	leaveq 
    9e86:	retq   
    9e87:	nopw   0x0(%rax,%rax,1)

0000000000009e90 <is_ICC_signature>:
    9e90:	push   %rbp
    9e91:	mov    %rsp,%rbp
    9e94:	sub    $0x10,%rsp
    9e98:	mov    %rdi,-0x8(%rbp)
    9e9c:	shr    $0x18,%rdi
    9ea0:	callq  9e40 <is_ICC_signature_char>
    9ea5:	test   %eax,%eax
    9ea7:	jne    9ead <is_ICC_signature+0x1d>
    9ea9:	xor    %eax,%eax
    9eab:	leaveq 
    9eac:	retq   
    9ead:	mov    -0x8(%rbp),%rdi
    9eb1:	and    $0xff0000,%rdi
    9eb8:	shr    $0x10,%rdi
    9ebc:	callq  9e40 <is_ICC_signature_char>
    9ec1:	test   %eax,%eax
    9ec3:	jne    9ec9 <is_ICC_signature+0x39>
    9ec5:	xor    %eax,%eax
    9ec7:	leaveq 
    9ec8:	retq   
    9ec9:	mov    -0x8(%rbp),%rdi
    9ecd:	and    $0xff00,%rdi
    9ed4:	shr    $0x8,%rdi
    9ed8:	callq  9e40 <is_ICC_signature_char>
    9edd:	test   %eax,%eax
    9edf:	jne    9ee5 <is_ICC_signature+0x55>
    9ee1:	xor    %eax,%eax
    9ee3:	leaveq 
    9ee4:	retq   
    9ee5:	mov    -0x8(%rbp),%rax
    9ee9:	movzbl %al,%edi
    9eec:	callq  9e40 <is_ICC_signature_char>
    9ef1:	test   %eax,%eax
    9ef3:	je     9efc <is_ICC_signature+0x6c>
    9ef5:	mov    $0x1,%eax
    9efa:	leaveq 
    9efb:	retq   
    9efc:	xor    %eax,%eax
    9efe:	leaveq 
    9eff:	retq   

0000000000009f00 <png_icc_profile_error>:
    9f00:	push   %rbp
    9f01:	mov    %rsp,%rbp
    9f04:	sub    $0x110,%rsp
    9f0b:	mov    %rbx,-0x10(%rbp)
    9f0f:	mov    %r12,-0x18(%rbp)
    9f13:	mov    %r13,-0x20(%rbp)
    9f17:	mov    %r14,-0x28(%rbp)
    9f1b:	mov    %r15,-0x30(%rbp)
    9f1f:	mov    %rdi,-0x8(%rbp)
    9f23:	test   %rsi,%rsi
    9f26:	je     9f34 <png_icc_profile_error+0x34>
    9f28:	movzwl 0x4a(%rsi),%eax
    9f2c:	or     $0x8000,%ax
    9f30:	mov    %ax,0x4a(%rsi)
    9f34:	mov    %r8,%rbx
    9f37:	mov    %rsi,%r12
    9f3a:	mov    %rdx,%r13
    9f3d:	mov    %rcx,%r14
    9f40:	lea    -0x10c(%rbp),%rdi
    9f47:	mov    $0xc4,%esi
    9f4c:	xor    %edx,%edx
    9f4e:	lea    0x23458(%rip),%rcx        # 2d3ad <short_months.6+0x8d8>
    9f55:	callq  ad20 <png_safecat>
    9f5a:	mov    %rax,%r15
    9f5d:	mov    %r14,%rdi
    9f60:	callq  9e90 <is_ICC_signature>
    9f65:	mov    %r13,%rcx
    9f68:	mov    %r15,%rdx
    9f6b:	mov    %rax,%r15
    9f6e:	lea    0x4f(%rdx),%rsi
    9f72:	lea    -0x10c(%rbp),%r13
    9f79:	mov    %r13,%rdi
    9f7c:	callq  ad20 <png_safecat>
    9f81:	mov    %rax,%rdx
    9f84:	lea    0x2342c(%rip),%rcx        # 2d3b7 <short_months.6+0x8e2>
    9f8b:	mov    %r13,%rdi
    9f8e:	mov    $0xc4,%esi
    9f93:	callq  ad20 <png_safecat>
    9f98:	test   %r15d,%r15d
    9f9b:	jne    9fe6 <png_icc_profile_error+0xe6>
    9f9d:	mov    %r14,%rcx
    9fa0:	mov    %rax,%r15
    9fa3:	lea    -0x48(%rbp),%rdi
    9fa7:	lea    -0x30(%rbp),%rsi
    9fab:	mov    $0x3,%edx
    9fb0:	callq  ad70 <png_format_number>
    9fb5:	mov    %rax,%rcx
    9fb8:	mov    %r15,%rdx
    9fbb:	mov    %r13,%rdi
    9fbe:	mov    $0xc4,%r14d
    9fc4:	mov    %r14,%rsi
    9fc7:	callq  ad20 <png_safecat>
    9fcc:	mov    %rax,%rdx
    9fcf:	lea    0x233e5(%rip),%rcx        # 2d3bb <short_months.6+0x8e6>
    9fd6:	mov    %r13,%rdi
    9fd9:	mov    %r14,%rsi
    9fdc:	callq  ad20 <png_safecat>
    9fe1:	mov    %rax,%rdx
    9fe4:	jmp    a014 <png_icc_profile_error+0x114>
    9fe6:	mov    %r14,%rsi
    9fe9:	mov    %rax,%r14
    9fec:	lea    -0x10c(%rbp,%r14,1),%r15
    9ff4:	mov    %r15,%rdi
    9ff7:	callq  9db0 <png_icc_tag_name>
    9ffc:	movb   $0x3a,-0x106(%rbp,%r14,1)
    a005:	movb   $0x20,0x7(%r15)
    a00a:	lea    0x8(%r14),%rdx
    a00e:	mov    $0xc4,%r14d
    a014:	mov    %rbx,%rcx
    a017:	mov    %r14,%rsi
    a01a:	mov    %r13,%rdi
    a01d:	callq  ad20 <png_safecat>
    a022:	test   %r12,%r12
    a025:	jne    a02e <png_icc_profile_error+0x12e>
    a027:	mov    $0x1,%edx
    a02c:	jmp    a033 <png_icc_profile_error+0x133>
    a02e:	mov    $0x2,%edx
    a033:	mov    %r13,%rsi
    a036:	mov    -0x8(%rbp),%rdi
    a03a:	callq  b130 <png_chunk_report>
    a03f:	mov    -0x30(%rbp),%r15
    a043:	mov    -0x28(%rbp),%r14
    a047:	mov    -0x20(%rbp),%r13
    a04b:	mov    -0x18(%rbp),%r12
    a04f:	mov    -0x10(%rbp),%rbx
    a053:	xor    %eax,%eax
    a055:	leaveq 
    a056:	retq   
    a057:	nopw   0x0(%rax,%rax,1)

000000000000a060 <icc_check_length>:
    a060:	push   %rbp
    a061:	mov    %rsp,%rbp
    a064:	cmp    $0x83,%ecx
    a06a:	jbe    a073 <icc_check_length+0x13>
    a06c:	mov    $0x1,%eax
    a071:	leaveq 
    a072:	retq   
    a073:	mov    %ecx,%ecx
    a075:	lea    0x23343(%rip),%r8        # 2d3bf <short_months.6+0x8ea>
    a07c:	callq  9f00 <png_icc_profile_error>
    a081:	leaveq 
    a082:	retq   
    a083:	data16 nopw %cs:0x0(%rax,%rax,1)
    a08e:	xchg   %ax,%ax

000000000000a090 <png_compare_ICC_profile_with_sRGB>:
    a090:	push   %rbp
    a091:	mov    %rsp,%rbp
    a094:	sub    $0x20,%rsp
    a098:	xor    %eax,%eax
    a09a:	mov    0x388(%rdi),%ecx
    a0a0:	and    $0x30,%ecx
    a0a3:	cmp    $0x30,%ecx
    a0a6:	jne    a0aa <png_compare_ICC_profile_with_sRGB+0x1a>
    a0a8:	leaveq 
    a0a9:	retq   
    a0aa:	lea    0x22907(%rip),%r11        # 2c9b8 <png_sRGB_checks>
    a0b1:	mov    $0x10000,%ecx
    a0b6:	mov    %rdx,-0x20(%rbp)
    a0ba:	mov    %r14,-0x10(%rbp)
    a0be:	mov    %r15,-0x18(%rbp)
    a0c2:	mov    %rax,%r8
    a0c5:	mov    %r8,%r10
    a0c8:	jmp    a104 <png_compare_ICC_profile_with_sRGB+0x74>
    a0ca:	mov    %r10d,%r14d
    a0cd:	shl    $0x5,%r14
    a0d1:	mov    0xc(%r11,%r14,1),%r15d
    a0d6:	movzbl 0x54(%rsi),%r9d
    a0db:	shl    $0x18,%r9d
    a0df:	movzbl 0x55(%rsi),%edx
    a0e3:	shl    $0x10,%edx
    a0e6:	add    %edx,%r9d
    a0e9:	movzbl 0x56(%rsi),%edx
    a0ed:	shl    $0x8,%edx
    a0f0:	add    %r9d,%edx
    a0f3:	movzbl 0x57(%rsi),%r9d
    a0f8:	add    %r9d,%edx
    a0fb:	cmp    %edx,%r15d
    a0fe:	je     a114 <png_compare_ICC_profile_with_sRGB+0x84>
    a100:	add    $0x1,%r10d
    a104:	cmp    $0x6,%r10d
    a108:	jbe    a0ca <png_compare_ICC_profile_with_sRGB+0x3a>
    a10a:	mov    -0x18(%rbp),%r15
    a10e:	mov    -0x10(%rbp),%r14
    a112:	leaveq 
    a113:	retq   
    a114:	mov    0x10(%r11,%r14,1),%r15d
    a119:	movzbl 0x58(%rsi),%edx
    a11d:	shl    $0x18,%edx
    a120:	movzbl 0x59(%rsi),%r9d
    a125:	shl    $0x10,%r9d
    a129:	add    %edx,%r9d
    a12c:	movzbl 0x5a(%rsi),%edx
    a130:	shl    $0x8,%edx
    a133:	add    %r9d,%edx
    a136:	movzbl 0x5b(%rsi),%r9d
    a13b:	add    %r9d,%edx
    a13e:	cmp    %edx,%r15d
    a141:	jne    a100 <png_compare_ICC_profile_with_sRGB+0x70>
    a143:	mov    0x14(%r11,%r14,1),%r15d
    a148:	movzbl 0x5c(%rsi),%r9d
    a14d:	shl    $0x18,%r9d
    a151:	movzbl 0x5d(%rsi),%edx
    a155:	shl    $0x10,%edx
    a158:	add    %edx,%r9d
    a15b:	movzbl 0x5e(%rsi),%edx
    a15f:	shl    $0x8,%edx
    a162:	add    %r9d,%edx
    a165:	movzbl 0x5f(%rsi),%r9d
    a16a:	add    %r9d,%edx
    a16d:	cmp    %edx,%r15d
    a170:	jne    a100 <png_compare_ICC_profile_with_sRGB+0x70>
    a172:	mov    0x18(%r11,%r14,1),%r15d
    a177:	movzbl 0x60(%rsi),%r9d
    a17c:	shl    $0x18,%r9d
    a180:	movzbl 0x61(%rsi),%edx
    a184:	shl    $0x10,%edx
    a187:	add    %edx,%r9d
    a18a:	movzbl 0x62(%rsi),%edx
    a18e:	shl    $0x8,%edx
    a191:	add    %r9d,%edx
    a194:	movzbl 0x63(%rsi),%r9d
    a199:	add    %r9d,%edx
    a19c:	cmp    %edx,%r15d
    a19f:	jne    a100 <png_compare_ICC_profile_with_sRGB+0x70>
    a1a5:	test   %r8d,%r8d
    a1a8:	jne    a1e9 <png_compare_ICC_profile_with_sRGB+0x159>
    a1aa:	movzbl (%rsi),%ecx
    a1ad:	shl    $0x18,%ecx
    a1b0:	movzbl 0x1(%rsi),%edx
    a1b4:	shl    $0x10,%edx
    a1b7:	add    %ecx,%edx
    a1b9:	movzbl 0x2(%rsi),%ecx
    a1bd:	shl    $0x8,%ecx
    a1c0:	add    %edx,%ecx
    a1c2:	movzbl 0x3(%rsi),%edx
    a1c6:	lea    (%rdx,%rcx,1),%r8d
    a1ca:	movzbl 0x40(%rsi),%edx
    a1ce:	shl    $0x18,%edx
    a1d1:	movzbl 0x41(%rsi),%ecx
    a1d5:	shl    $0x10,%ecx
    a1d8:	add    %ecx,%edx
    a1da:	movzbl 0x42(%rsi),%ecx
    a1de:	shl    $0x8,%ecx
    a1e1:	add    %edx,%ecx
    a1e3:	movzbl 0x43(%rsi),%edx
    a1e7:	add    %edx,%ecx
    a1e9:	mov    0x8(%r11,%r14,1),%edx
    a1ee:	cmp    %r8d,%edx
    a1f1:	jne    a100 <png_compare_ICC_profile_with_sRGB+0x70>
    a1f7:	movzwl 0x1e(%r11,%r14,1),%r8d
    a1fd:	cmp    %ecx,%r8d
    a200:	je     a20a <png_compare_ICC_profile_with_sRGB+0x17a>
    a202:	mov    %rdx,%r8
    a205:	jmpq   a100 <png_compare_ICC_profile_with_sRGB+0x70>
    a20a:	mov    -0x20(%rbp),%rcx
    a20e:	test   %rcx,%rcx
    a211:	je     a218 <png_compare_ICC_profile_with_sRGB+0x188>
    a213:	mov    %rdi,%r15
    a216:	jmp    a265 <png_compare_ICC_profile_with_sRGB+0x1d5>
    a218:	mov    %rax,%r8
    a21b:	mov    %rax,%rcx
    a21e:	mov    %r12,-0x8(%rbp)
    a222:	mov    %r13,-0x20(%rbp)
    a226:	mov    %rdx,%r12
    a229:	mov    %rcx,%rdx
    a22c:	mov    %rsi,%r13
    a22f:	mov    %r8,%rsi
    a232:	mov    %rdi,%r15
    a235:	mov    %rax,%rdi
    a238:	callq  5550 <adler32@plt>
    a23d:	mov    %rax,%rdi
    a240:	mov    %r13,%rsi
    a243:	mov    %r12,%rdx
    a246:	callq  5550 <adler32@plt>
    a24b:	mov    %rax,%rcx
    a24e:	mov    %r12,%rdx
    a251:	mov    %r13,%rsi
    a254:	xor    %eax,%eax
    a256:	lea    0x2275b(%rip),%r11        # 2c9b8 <png_sRGB_checks>
    a25d:	mov    -0x20(%rbp),%r13
    a261:	mov    -0x8(%rbp),%r12
    a265:	mov    (%r14,%r11,1),%edi
    a269:	cmp    %rcx,%rdi
    a26c:	je     a290 <png_compare_ICC_profile_with_sRGB+0x200>
    a26e:	mov    %r15,%rdi
    a271:	mov    %rax,%r14
    a274:	lea    0x23196(%rip),%rsi        # 2d411 <short_months.6+0x93c>
    a27b:	mov    %r14,%rdx
    a27e:	callq  b130 <png_chunk_report>
    a283:	mov    %r14,%rax
    a286:	mov    -0x18(%rbp),%r15
    a28a:	mov    -0x10(%rbp),%r14
    a28e:	leaveq 
    a28f:	retq   
    a290:	mov    %rax,%rdi
    a293:	mov    %rax,%rcx
    a296:	mov    %r12,-0x8(%rbp)
    a29a:	mov    %r13,-0x20(%rbp)
    a29e:	mov    %rdx,%r12
    a2a1:	mov    %rcx,%rdx
    a2a4:	mov    %rsi,%r13
    a2a7:	mov    %rdi,%rsi
    a2aa:	mov    %rax,%rdi
    a2ad:	callq  51c0 <crc32@plt>
    a2b2:	mov    %r12,%rdx
    a2b5:	mov    %r13,%rsi
    a2b8:	mov    %rax,%rdi
    a2bb:	callq  51c0 <crc32@plt>
    a2c0:	lea    0x226f1(%rip),%r12        # 2c9b8 <png_sRGB_checks>
    a2c7:	mov    0x4(%r12,%r14,1),%ecx
    a2cc:	cmp    %rax,%rcx
    a2cf:	je     a2dd <png_compare_ICC_profile_with_sRGB+0x24d>
    a2d1:	xor    %eax,%eax
    a2d3:	mov    -0x20(%rbp),%r13
    a2d7:	mov    -0x8(%rbp),%r12
    a2db:	jmp    a26e <png_compare_ICC_profile_with_sRGB+0x1de>
    a2dd:	movzbl 0x1d(%r12,%r14,1),%eax
    a2e3:	test   %al,%al
    a2e5:	jne    a304 <png_compare_ICC_profile_with_sRGB+0x274>
    a2e7:	movzbl 0x1c(%r12,%r14,1),%eax
    a2ed:	test   %al,%al
    a2ef:	jne    a318 <png_compare_ICC_profile_with_sRGB+0x288>
    a2f1:	mov    %r15,%rdi
    a2f4:	lea    0x230eb(%rip),%rsi        # 2d3e6 <short_months.6+0x911>
    a2fb:	xor    %edx,%edx
    a2fd:	callq  b130 <png_chunk_report>
    a302:	jmp    a318 <png_compare_ICC_profile_with_sRGB+0x288>
    a304:	mov    %r15,%rdi
    a307:	lea    0x230bb(%rip),%rsi        # 2d3c9 <short_months.6+0x8f4>
    a30e:	mov    $0x2,%edx
    a313:	callq  b130 <png_chunk_report>
    a318:	movzbl 0x1d(%r12,%r14,1),%eax
    a31e:	add    $0x1,%eax
    a321:	mov    -0x18(%rbp),%r15
    a325:	mov    -0x10(%rbp),%r14
    a329:	mov    -0x20(%rbp),%r13
    a32d:	mov    -0x8(%rbp),%r12
    a331:	leaveq 
    a332:	retq   
    a333:	data16 nopw %cs:0x0(%rax,%rax,1)
    a33e:	xchg   %ax,%ax

000000000000a340 <png_gt>:
    a340:	push   %rbp
    a341:	mov    %rsp,%rbp
    a344:	cmp    %rdi,%rsi
    a347:	jae    a350 <png_gt+0x10>
    a349:	mov    $0x1,%eax
    a34e:	leaveq 
    a34f:	retq   
    a350:	xor    %eax,%eax
    a352:	leaveq 
    a353:	retq   
    a354:	data16 nopw %cs:0x0(%rax,%rax,1)
    a35f:	nop

000000000000a360 <png_pow10>:
    a360:	push   %rbp
    a361:	mov    %rsp,%rbp
    a364:	test   %edi,%edi
    a366:	js     a384 <png_pow10+0x24>
    a368:	xor    %eax,%eax
    a36a:	movsd  0x23106(%rip),%xmm2        # 2d478 <short_months.6+0x9a3>
    a372:	test   %edi,%edi
    a374:	jle    a392 <png_pow10+0x32>
    a376:	movsd  0x230f2(%rip),%xmm1        # 2d470 <short_months.6+0x99b>
    a37e:	movapd %xmm2,%xmm0
    a382:	jmp    a39c <png_pow10+0x3c>
    a384:	cmp    $0xfffffecd,%edi
    a38a:	jge    a3b6 <png_pow10+0x56>
    a38c:	xorpd  %xmm0,%xmm0
    a390:	leaveq 
    a391:	retq   
    a392:	movapd %xmm2,%xmm0
    a396:	leaveq 
    a397:	retq   
    a398:	mulsd  %xmm1,%xmm1
    a39c:	mov    %rdi,%rcx
    a39f:	and    $0x1,%ecx
    a3a2:	test   %ecx,%ecx
    a3a4:	jle    a3aa <png_pow10+0x4a>
    a3a6:	mulsd  %xmm1,%xmm0
    a3aa:	sar    %edi
    a3ac:	test   %edi,%edi
    a3ae:	jg     a398 <png_pow10+0x38>
    a3b0:	test   %eax,%eax
    a3b2:	jg     a3bf <png_pow10+0x5f>
    a3b4:	leaveq 
    a3b5:	retq   
    a3b6:	neg    %edi
    a3b8:	mov    $0x1,%eax
    a3bd:	jmp    a36a <png_pow10+0xa>
    a3bf:	divsd  %xmm0,%xmm2
    a3c3:	movapd %xmm2,%xmm0
    a3c7:	leaveq 
    a3c8:	retq   
    a3c9:	nopl   0x0(%rax)

000000000000a3d0 <png_product2>:
    a3d0:	push   %rbp
    a3d1:	mov    %rsp,%rbp
    a3d4:	cvtsi2sd %edi,%xmm1
    a3d8:	movsd  0x230d8(%rip),%xmm0        # 2d4b8 <short_months.6+0x9e3>
    a3e0:	mulsd  %xmm0,%xmm1
    a3e4:	cvtsi2sd %esi,%xmm0
    a3e8:	mulsd  %xmm1,%xmm0
    a3ec:	movsd  0x23064(%rip),%xmm1        # 2d458 <short_months.6+0x983>
    a3f4:	addsd  %xmm1,%xmm0
    a3f8:	callq  57e0 <floor@plt>
    a3fd:	movsd  0x23063(%rip),%xmm1        # 2d468 <short_months.6+0x993>
    a405:	ucomisd %xmm1,%xmm0
    a409:	jp     a40d <png_product2+0x3d>
    a40b:	jbe    a411 <png_product2+0x41>
    a40d:	xor    %eax,%eax
    a40f:	leaveq 
    a410:	retq   
    a411:	movsd  0x23047(%rip),%xmm1        # 2d460 <short_months.6+0x98b>
    a419:	ucomisd %xmm1,%xmm0
    a41d:	jae    a423 <png_product2+0x53>
    a41f:	xor    %eax,%eax
    a421:	leaveq 
    a422:	retq   
    a423:	cvttsd2si %xmm0,%eax
    a427:	leaveq 
    a428:	retq   
    a429:	nopl   0x0(%rax)

000000000000a430 <png_build_16bit_table>:
    a430:	push   %rbp
    a431:	mov    %rsp,%rbp
    a434:	sub    $0x80,%rsp
    a43b:	mov    %r12,-0x50(%rbp)
    a43f:	mov    %r13,-0x58(%rbp)
    a443:	mov    %r14,-0x60(%rbp)
    a447:	mov    %r15,-0x68(%rbp)
    a44b:	mov    %rdx,-0x70(%rbp)
    a44f:	mov    %rbx,-0x48(%rbp)
    a453:	mov    %rsi,%rbx
    a456:	mov    %rdi,%r12
    a459:	mov    %rcx,%r13
    a45c:	mov    %rdx,%r14
    a45f:	mov    %r12,-0x40(%rbp)
    a463:	mov    %r13,%rdi
    a466:	callq  8b10 <png_gamma_significant>
    a46b:	mov    %rax,-0x78(%rbp)
    a46f:	mov    $0x10,%ecx
    a474:	sub    %r14d,%ecx
    a477:	mov    %r13,%rdx
    a47a:	mov    %rax,%r13
    a47d:	mov    $0x1,%r15d
    a483:	mov    %r15,%rax
    a486:	shl    %cl,%eax
    a488:	add    $0xffffffff,%eax
    a48b:	mov    %rax,-0x30(%rbp)
    a48f:	cvtsi2sd %eax,%xmm1
    a493:	movsd  0x22fdd(%rip),%xmm0        # 2d478 <short_months.6+0x9a3>
    a49b:	divsd  %xmm1,%xmm0
    a49f:	movdqu %xmm0,-0x10(%rbp)
    a4a4:	cvtsi2sd %edx,%xmm0
    a4a8:	movsd  0x23008(%rip),%xmm1        # 2d4b8 <short_months.6+0x9e3>
    a4b0:	mulsd  %xmm1,%xmm0
    a4b4:	movdqu %xmm0,-0x20(%rbp)
    a4b9:	mov    $0xf,%ecx
    a4be:	sub    %r14d,%ecx
    a4c1:	mov    %r15,%rax
    a4c4:	shl    %cl,%eax
    a4c6:	mov    %rax,-0x38(%rbp)
    a4ca:	mov    $0x8,%ecx
    a4cf:	sub    %r14d,%ecx
    a4d2:	shl    %cl,%r15d
    a4d5:	mov    %r15,-0x80(%rbp)
    a4d9:	mov    %r15d,%esi
    a4dc:	shl    $0x3,%rsi
    a4e0:	mov    %rcx,%r14
    a4e3:	mov    %r12,%rdi
    a4e6:	callq  5780 <png_calloc@plt>
    a4eb:	mov    %rax,-0x28(%rbp)
    a4ef:	mov    %rax,(%rbx)
    a4f2:	mov    %r14,%rcx
    a4f5:	mov    %rax,%r14
    a4f8:	mov    %r12,%rdi
    a4fb:	mov    $0x200,%esi
    a500:	xor    %ebx,%ebx
    a502:	mov    -0x70(%rbp),%r12
    a506:	jmp    a57f <png_build_16bit_table+0x14f>
    a508:	mov    %r14,%rax
    a50b:	shl    %cl,%eax
    a50d:	add    %ebx,%eax
    a50f:	mov    %eax,%eax
    a511:	cvtsi2sd %rax,%xmm0
    a516:	mov    %rcx,%r15
    a519:	mulsd  %xmm2,%xmm0
    a51d:	callq  5360 <pow@plt>
    a522:	movsd  0x22f86(%rip),%xmm1        # 2d4b0 <short_months.6+0x9db>
    a52a:	mulsd  %xmm1,%xmm0
    a52e:	movsd  0x22f22(%rip),%xmm1        # 2d458 <short_months.6+0x983>
    a536:	addsd  %xmm1,%xmm0
    a53a:	callq  57e0 <floor@plt>
    a53f:	cvttsd2si %xmm0,%rcx
    a544:	mov    %r14d,%eax
    a547:	mov    %cx,0x0(%r13,%rax,2)
    a54d:	add    $0x1,%r14d
    a551:	mov    %r15,%rcx
    a554:	movdqu -0x20(%rbp),%xmm1
    a559:	movdqu -0x10(%rbp),%xmm2
    a55e:	cmp    $0xff,%r14d
    a565:	jbe    a508 <png_build_16bit_table+0xd8>
    a567:	mov    -0x28(%rbp),%r14
    a56b:	mov    -0x78(%rbp),%r13
    a56f:	add    $0x1,%ebx
    a572:	mov    $0x200,%esi
    a577:	mov    -0x40(%rbp),%rdi
    a57b:	mov    -0x80(%rbp),%r15
    a57f:	cmp    %r15d,%ebx
    a582:	jb     a59a <png_build_16bit_table+0x16a>
    a584:	mov    -0x48(%rbp),%rbx
    a588:	mov    -0x68(%rbp),%r15
    a58c:	mov    -0x60(%rbp),%r14
    a590:	mov    -0x58(%rbp),%r13
    a594:	mov    -0x50(%rbp),%r12
    a598:	leaveq 
    a599:	retq   
    a59a:	mov    %rcx,%r15
    a59d:	callq  5800 <png_malloc@plt>
    a5a2:	test   %r13d,%r13d
    a5a5:	mov    %ebx,%ecx
    a5a7:	mov    %rax,(%r14,%rcx,8)
    a5ab:	je     a5c2 <png_build_16bit_table+0x192>
    a5ad:	mov    %r15,%rcx
    a5b0:	mov    %rax,%r13
    a5b3:	xor    %r14d,%r14d
    a5b6:	movdqu -0x20(%rbp),%xmm1
    a5bb:	movdqu -0x10(%rbp),%xmm2
    a5c0:	jmp    a55e <png_build_16bit_table+0x12e>
    a5c2:	mov    %r15,%rcx
    a5c5:	mov    %rax,%r15
    a5c8:	xor    %esi,%esi
    a5ca:	mov    -0x30(%rbp),%rdi
    a5ce:	mov    -0x38(%rbp),%r8
    a5d2:	jmp    a5fb <png_build_16bit_table+0x1cb>
    a5d4:	mov    %rsi,%rax
    a5d7:	shl    %cl,%eax
    a5d9:	test   %r12d,%r12d
    a5dc:	lea    (%rbx,%rax,1),%eax
    a5df:	je     a5f1 <png_build_16bit_table+0x1c1>
    a5e1:	mov    %rax,%rdx
    a5e4:	shl    $0x10,%edx
    a5e7:	sub    %eax,%edx
    a5e9:	lea    (%r8,%rdx,1),%eax
    a5ed:	xor    %edx,%edx
    a5ef:	div    %edi
    a5f1:	mov    %esi,%edx
    a5f3:	mov    %ax,(%r15,%rdx,2)
    a5f8:	add    $0x1,%esi
    a5fb:	cmp    $0xff,%esi
    a601:	jbe    a5d4 <png_build_16bit_table+0x1a4>
    a603:	jmpq   a56f <png_build_16bit_table+0x13f>
    a608:	nopl   0x0(%rax,%rax,1)

000000000000a610 <png_build_16to8_table>:
    a610:	push   %rbp
    a611:	mov    %rsp,%rbp
    a614:	sub    $0x40,%rsp
    a618:	mov    %rcx,-0x30(%rbp)
    a61c:	mov    %rbx,-0x8(%rbp)
    a620:	mov    %r12,-0x10(%rbp)
    a624:	mov    %r13,-0x18(%rbp)
    a628:	mov    %r14,-0x20(%rbp)
    a62c:	mov    %r15,-0x28(%rbp)
    a630:	mov    %rdx,-0x40(%rbp)
    a634:	mov    $0x8,%ecx
    a639:	sub    %edx,%ecx
    a63b:	mov    %rsi,%rbx
    a63e:	mov    %rdi,%r13
    a641:	mov    $0x1,%r12d
    a647:	shl    %cl,%r12d
    a64a:	mov    %rcx,-0x38(%rbp)
    a64e:	mov    %r12d,%esi
    a651:	shl    $0x3,%rsi
    a655:	mov    %r13,%rdi
    a658:	callq  5780 <png_calloc@plt>
    a65d:	mov    %rax,(%rbx)
    a660:	mov    %rax,%rbx
    a663:	mov    $0x200,%r15d
    a669:	xor    %r14d,%r14d
    a66c:	jmp    a684 <png_build_16to8_table+0x74>
    a66e:	mov    %r13,%rdi
    a671:	mov    %r15,%rsi
    a674:	callq  5800 <png_malloc@plt>
    a679:	mov    %r14d,%ecx
    a67c:	mov    %rax,(%rbx,%rcx,8)
    a680:	add    $0x1,%r14d
    a684:	cmp    %r12d,%r14d
    a687:	jb     a66e <png_build_16to8_table+0x5e>
    a689:	mov    $0xff,%r12d
    a68f:	mov    -0x40(%rbp),%rcx
    a693:	shr    %cl,%r12d
    a696:	mov    %rcx,%rax
    a699:	mov    $0x10,%ecx
    a69e:	sub    %eax,%ecx
    a6a0:	mov    $0x1,%eax
    a6a5:	shl    %cl,%eax
    a6a7:	lea    -0x1(%rax),%r14d
    a6ab:	mov    -0x38(%rbp),%rcx
    a6af:	xor    %r13d,%r13d
    a6b2:	mov    -0x30(%rbp),%rsi
    a6b6:	mov    %r13,%rax
    a6b9:	jmp    a6e5 <png_build_16to8_table+0xd5>
    a6bb:	mov    %r13,%rdi
    a6be:	and    %r12d,%edi
    a6c1:	mov    %edi,%edi
    a6c3:	mov    (%rbx,%rdi,8),%rdi
    a6c7:	mov    %r13,%r8
    a6ca:	shr    %cl,%r8d
    a6cd:	mov    %r8d,%r8d
    a6d0:	mov    %dx,(%rdi,%r8,2)
    a6d5:	add    $0x1,%r13d
    a6d9:	cmp    %esi,%r13d
    a6dc:	jb     a6bb <png_build_16to8_table+0xab>
    a6de:	add    $0x1,%eax
    a6e1:	mov    -0x30(%rbp),%rsi
    a6e5:	cmp    $0xfe,%eax
    a6ea:	jbe    a6f5 <png_build_16to8_table+0xe5>
    a6ec:	mov    $0x100,%eax
    a6f1:	shl    %cl,%eax
    a6f3:	jmp    a75a <png_build_16to8_table+0x14a>
    a6f5:	mov    %rax,%rdx
    a6f8:	shl    $0x8,%edx
    a6fb:	add    %eax,%edx
    a6fd:	mov    %rdx,-0x38(%rbp)
    a701:	movzwl %dx,%edx
    a704:	lea    0x80(%rdx),%edi
    a70a:	mov    %rax,-0x40(%rbp)
    a70e:	mov    %rcx,%r15
    a711:	callq  8b70 <png_gamma_16bit_correct>
    a716:	movzwl %ax,%eax
    a719:	imul   %r14d,%eax
    a71d:	lea    0x8000(%rax),%edx
    a723:	mov    %r15,%rcx
    a726:	mov    $0x80008001,%eax
    a72b:	mul    %edx
    a72d:	shr    $0xf,%edx
    a730:	lea    0x1(%rdx),%esi
    a733:	mov    -0x40(%rbp),%rax
    a737:	mov    -0x38(%rbp),%rdx
    a73b:	jmp    a6d9 <png_build_16to8_table+0xc9>
    a73d:	mov    %r12,%rdx
    a740:	and    %r13d,%edx
    a743:	mov    %edx,%edx
    a745:	mov    (%rbx,%rdx,8),%rdx
    a749:	mov    %r13,%rsi
    a74c:	shr    %cl,%esi
    a74e:	mov    %esi,%esi
    a750:	movw   $0xffff,(%rdx,%rsi,2)
    a756:	add    $0x1,%r13d
    a75a:	cmp    %r13d,%eax
    a75d:	ja     a73d <png_build_16to8_table+0x12d>
    a75f:	mov    -0x28(%rbp),%r15
    a763:	mov    -0x20(%rbp),%r14
    a767:	mov    -0x18(%rbp),%r13
    a76b:	mov    -0x10(%rbp),%r12
    a76f:	mov    -0x8(%rbp),%rbx
    a773:	leaveq 
    a774:	retq   
    a775:	data16 nopw %cs:0x0(%rax,%rax,1)

000000000000a780 <png_build_8bit_table>:
    a780:	push   %rbp
    a781:	mov    %rsp,%rbp
    a784:	sub    $0x20,%rsp
    a788:	mov    %r13,-0x8(%rbp)
    a78c:	mov    %r14,-0x10(%rbp)
    a790:	mov    %r15,-0x18(%rbp)
    a794:	mov    %rsi,%r13
    a797:	mov    %rdx,%r14
    a79a:	mov    %rdi,%r15
    a79d:	mov    %r14,%rdi
    a7a0:	callq  8b10 <png_gamma_significant>
    a7a5:	mov    %r15,%rdi
    a7a8:	mov    %rax,%r15
    a7ab:	mov    $0x100,%esi
    a7b0:	callq  5800 <png_malloc@plt>
    a7b5:	mov    %rax,0x0(%r13)
    a7b9:	xor    %r13d,%r13d
    a7bc:	test   %r15d,%r15d
    a7bf:	je     a7d1 <png_build_8bit_table+0x51>
    a7c1:	mov    %rax,%r15
    a7c4:	jmp    a7fe <png_build_8bit_table+0x7e>
    a7c6:	mov    %r13d,%ecx
    a7c9:	mov    %r13b,(%rax,%rcx,1)
    a7cd:	add    $0x1,%r13d
    a7d1:	cmp    $0xff,%r13d
    a7d8:	jbe    a7c6 <png_build_8bit_table+0x46>
    a7da:	mov    -0x18(%rbp),%r15
    a7de:	mov    -0x10(%rbp),%r14
    a7e2:	mov    -0x8(%rbp),%r13
    a7e6:	leaveq 
    a7e7:	retq   
    a7e8:	mov    %r13,%rdi
    a7eb:	mov    %r14,%rsi
    a7ee:	callq  8be0 <png_gamma_8bit_correct>
    a7f3:	mov    %r13d,%ecx
    a7f6:	mov    %al,(%r15,%rcx,1)
    a7fa:	add    $0x1,%r13d
    a7fe:	cmp    $0xff,%r13d
    a805:	jbe    a7e8 <png_build_8bit_table+0x68>
    a807:	mov    -0x18(%rbp),%r15
    a80b:	mov    -0x10(%rbp),%r14
    a80f:	mov    -0x8(%rbp),%r13
    a813:	leaveq 
    a814:	retq   
    a815:	data16 nopw %cs:0x0(%rax,%rax,1)

000000000000a820 <png_image_free_function>:
    a820:	push   %rbp
    a821:	mov    %rsp,%rbp
    a824:	sub    $0x40,%rsp
    a828:	xor    %eax,%eax
    a82a:	mov    (%rdi),%rsi
    a82d:	mov    (%rsi),%rdx
    a830:	test   %rdx,%rdx
    a833:	jne    a837 <png_image_free_function+0x17>
    a835:	leaveq 
    a836:	retq   
    a837:	mov    0x28(%rsi),%eax
    a83a:	mov    %rax,%rcx
    a83d:	and    $0x2,%ecx
    a840:	test   %ecx,%ecx
    a842:	jg     a8a2 <png_image_free_function+0x82>
    a844:	lea    -0x40(%rbp),%rcx
    a848:	mov    (%rsi),%rax
    a84b:	mov    %rax,(%rcx)
    a84e:	mov    0x8(%rsi),%rax
    a852:	mov    %rax,0x8(%rcx)
    a856:	mov    0x10(%rsi),%rax
    a85a:	mov    %rax,0x10(%rcx)
    a85e:	mov    0x18(%rsi),%rax
    a862:	mov    %rax,0x18(%rcx)
    a866:	mov    0x20(%rsi),%rax
    a86a:	mov    %rax,0x20(%rcx)
    a86e:	mov    0x28(%rsi),%rax
    a872:	mov    %rax,0x28(%rcx)
    a876:	mov    %rcx,(%rdi)
    a879:	mov    (%rcx),%rdi
    a87c:	callq  5790 <png_free@plt>
    a881:	lea    -0x40(%rbp),%rdi
    a885:	lea    0x8(%rdi),%rsi
    a889:	movslq 0x28(%rdi),%rax
    a88d:	and    $0x1,%eax
    a890:	test   %eax,%eax
    a892:	jg     a8e8 <png_image_free_function+0xc8>
    a894:	xor    %edx,%edx
    a896:	callq  54b0 <png_destroy_read_struct@plt>
    a89b:	mov    $0x1,%eax
    a8a0:	leaveq 
    a8a1:	retq   
    a8a2:	and    $0xfffffffd,%eax
    a8a5:	mov    0x108(%rdx),%rcx
    a8ac:	mov    %eax,0x28(%rsi)
    a8af:	test   %rcx,%rcx
    a8b2:	je     a844 <png_image_free_function+0x24>
    a8b4:	movq   $0x0,0x108(%rdx)
    a8bf:	mov    %r14,-0x8(%rbp)
    a8c3:	mov    %r15,-0x10(%rbp)
    a8c7:	mov    %rdi,%r14
    a8ca:	mov    %rcx,%rdi
    a8cd:	mov    %rsi,%r15
    a8d0:	callq  5240 <fclose@plt>
    a8d5:	mov    %r15,%rsi
    a8d8:	mov    %r14,%rdi
    a8db:	mov    -0x10(%rbp),%r15
    a8df:	mov    -0x8(%rbp),%r14
    a8e3:	jmpq   a844 <png_image_free_function+0x24>
    a8e8:	callq  56f0 <png_destroy_write_struct@plt>
    a8ed:	mov    $0x1,%eax
    a8f2:	leaveq 
    a8f3:	retq   
    a8f4:	nopw   %cs:0x0(%rax,%rax,1)
    a8fe:	xchg   %ax,%ax

000000000000a900 <png_set_longjmp_fn>:
    a900:	push   %rbp
    a901:	mov    %rsp,%rbp
    a904:	sub    $0x20,%rsp
    a908:	xor    %eax,%eax
    a90a:	test   %rdi,%rdi
    a90d:	jne    a911 <png_set_longjmp_fn+0x11>
    a90f:	leaveq 
    a910:	retq   
    a911:	mov    0xd0(%rdi),%rcx
    a918:	test   %rcx,%rcx
    a91b:	je     a93e <png_set_longjmp_fn+0x3e>
    a91d:	mov    0xd8(%rdi),%rax
    a924:	test   %rax,%rax
    a927:	je     a986 <png_set_longjmp_fn+0x86>
    a929:	cmp    %rax,%rdx
    a92c:	je     a999 <png_set_longjmp_fn+0x99>
    a92e:	lea    0x22bd6(%rip),%rsi        # 2d50b <png_digit+0x2f>
    a935:	callq  5390 <png_warning@plt>
    a93a:	xor    %eax,%eax
    a93c:	leaveq 
    a93d:	retq   
    a93e:	movq   $0x0,0xd8(%rdi)
    a949:	cmp    $0xc8,%rdx
    a950:	jbe    a992 <png_set_longjmp_fn+0x92>
    a952:	mov    %rdi,%rax
    a955:	mov    %rdx,%rcx
    a958:	mov    %r15,-0x18(%rbp)
    a95c:	mov    %rdx,-0x10(%rbp)
    a960:	mov    %rsi,-0x8(%rbp)
    a964:	mov    %rcx,%rsi
    a967:	mov    %rdi,%r15
    a96a:	mov    %rax,%rdi
    a96d:	callq  5150 <png_malloc_warn@plt>
    a972:	mov    %rax,0xd0(%r15)
    a979:	test   %rax,%rax
    a97c:	jne    a9a9 <png_set_longjmp_fn+0xa9>
    a97e:	mov    -0x18(%rbp),%r15
    a982:	xor    %eax,%eax
    a984:	leaveq 
    a985:	retq   
    a986:	cmp    %rcx,%rdi
    a989:	jne    a9c1 <png_set_longjmp_fn+0xc1>
    a98b:	mov    $0xc8,%eax
    a990:	jmp    a929 <png_set_longjmp_fn+0x29>
    a992:	mov    %rdi,0xd0(%rdi)
    a999:	mov    %rsi,0xc8(%rdi)
    a9a0:	mov    0xd0(%rdi),%rax
    a9a7:	leaveq 
    a9a8:	retq   
    a9a9:	mov    -0x10(%rbp),%rax
    a9ad:	mov    %rax,0xd8(%r15)
    a9b4:	mov    %r15,%rdi
    a9b7:	mov    -0x8(%rbp),%rsi
    a9bb:	mov    -0x18(%rbp),%r15
    a9bf:	jmp    a999 <png_set_longjmp_fn+0x99>
    a9c1:	lea    0x22b24(%rip),%rsi        # 2d4ec <png_digit+0x10>
    a9c8:	callq  5470 <png_error@plt>
    a9cd:	nopl   (%rax)

000000000000a9d0 <png_longjmp>:
    a9d0:	push   %rbp
    a9d1:	mov    %rsp,%rbp
    a9d4:	test   %rdi,%rdi
    a9d7:	jne    a9de <png_longjmp+0xe>
    a9d9:	callq  5090 <abort@plt>
    a9de:	mov    0xc8(%rdi),%rax
    a9e5:	test   %rax,%rax
    a9e8:	je     a9d9 <png_longjmp+0x9>
    a9ea:	mov    0xd0(%rdi),%rdi
    a9f1:	test   %rdi,%rdi
    a9f4:	je     a9d9 <png_longjmp+0x9>
    a9f6:	callq  *%rax
    a9f8:	jmp    a9d9 <png_longjmp+0x9>
    a9fa:	nopw   0x0(%rax,%rax,1)

000000000000aa00 <png_set_error_fn>:
    aa00:	push   %rbp
    aa01:	mov    %rsp,%rbp
    aa04:	test   %rdi,%rdi
    aa07:	jne    aa0b <png_set_error_fn+0xb>
    aa09:	leaveq 
    aa0a:	retq   
    aa0b:	mov    %rsi,0xf0(%rdi)
    aa12:	mov    %rdx,0xe0(%rdi)
    aa19:	mov    %rcx,0xe8(%rdi)
    aa20:	leaveq 
    aa21:	retq   
    aa22:	data16 nopw %cs:0x0(%rax,%rax,1)
    aa2d:	nopl   (%rax)

000000000000aa30 <png_get_error_ptr>:
    aa30:	push   %rbp
    aa31:	mov    %rsp,%rbp
    aa34:	test   %rdi,%rdi
    aa37:	jne    aa3d <png_get_error_ptr+0xd>
    aa39:	xor    %eax,%eax
    aa3b:	leaveq 
    aa3c:	retq   
    aa3d:	mov    0xf0(%rdi),%rax
    aa44:	leaveq 
    aa45:	retq   
    aa46:	nopw   %cs:0x0(%rax,%rax,1)

000000000000aa50 <png_error>:
    aa50:	push   %rbp
    aa51:	mov    %rsp,%rbp
    aa54:	test   %rdi,%rdi
    aa57:	jne    aa5e <png_error+0xe>
    aa59:	callq  b310 <png_default_error>
    aa5e:	mov    0xe0(%rdi),%rax
    aa65:	test   %rax,%rax
    aa68:	je     aa59 <png_error+0x9>
    aa6a:	mov    %rdi,%r12
    aa6d:	mov    %rsi,%rbx
    aa70:	callq  *%rax
    aa72:	mov    %rbx,%rsi
    aa75:	mov    %r12,%rdi
    aa78:	jmp    aa59 <png_error+0x9>
    aa7a:	nopw   0x0(%rax,%rax,1)

000000000000aa80 <png_chunk_error>:
    aa80:	push   %rbp
    aa81:	mov    %rsp,%rbp
    aa84:	sub    $0xe0,%rsp
    aa8b:	test   %rdi,%rdi
    aa8e:	je     aab0 <png_chunk_error+0x30>
    aa90:	mov    %rsi,%rdx
    aa93:	lea    -0xd6(%rbp),%rbx
    aa9a:	mov    %rdi,%r12
    aa9d:	mov    %rbx,%rsi
    aaa0:	callq  b3b0 <png_format_buffer>
    aaa5:	mov    %rbx,%rsi
    aaa8:	mov    %r12,%rdi
    aaab:	callq  5470 <png_error@plt>
    aab0:	xor    %edi,%edi
    aab2:	callq  5470 <png_error@plt>
    aab7:	nopw   0x0(%rax,%rax,1)

000000000000aac0 <png_warning>:
    aac0:	push   %rbp
    aac1:	mov    %rsp,%rbp
    aac4:	xor    %eax,%eax
    aac6:	test   %rdi,%rdi
    aac9:	jne    aae0 <png_warning+0x20>
    aacb:	mov    %rax,%rcx
    aace:	movslq %eax,%rdx
    aad1:	test   %rcx,%rcx
    aad4:	jne    aaf3 <png_warning+0x33>
    aad6:	add    %rdx,%rsi
    aad9:	callq  b370 <png_default_warning>
    aade:	leaveq 
    aadf:	retq   
    aae0:	mov    $0x1,%ecx
    aae5:	movsbq (%rsi),%rdx
    aae9:	cmp    $0x23,%dl
    aaec:	jne    aace <png_warning+0xe>
    aaee:	mov    %rcx,%rax
    aaf1:	jmp    ab16 <png_warning+0x56>
    aaf3:	mov    0xe8(%rdi),%rax
    aafa:	test   %rax,%rax
    aafd:	je     aad6 <png_warning+0x16>
    aaff:	add    %rdx,%rsi
    ab02:	callq  *%rax
    ab04:	leaveq 
    ab05:	retq   
    ab06:	movslq %eax,%rdx
    ab09:	movsbq (%rsi,%rdx,1),%rdx
    ab0e:	cmp    $0x20,%dl
    ab11:	je     aace <png_warning+0xe>
    ab13:	add    $0x1,%eax
    ab16:	cmp    $0xe,%eax
    ab19:	jle    ab06 <png_warning+0x46>
    ab1b:	jmp    aace <png_warning+0xe>
    ab1d:	nopl   (%rax)

000000000000ab20 <png_chunk_warning>:
    ab20:	push   %rbp
    ab21:	mov    %rsp,%rbp
    ab24:	sub    $0xe0,%rsp
    ab2b:	test   %rdi,%rdi
    ab2e:	je     ab64 <png_chunk_warning+0x44>
    ab30:	lea    -0xde(%rbp),%rax
    ab37:	mov    %rdi,%rcx
    ab3a:	mov    %r15,-0x8(%rbp)
    ab3e:	mov    %rsi,%rdx
    ab41:	mov    %rax,%rsi
    ab44:	mov    %rdi,%r15
    ab47:	mov    %rcx,%rdi
    ab4a:	callq  b3b0 <png_format_buffer>
    ab4f:	mov    %r15,%rdi
    ab52:	lea    -0xde(%rbp),%rsi
    ab59:	callq  5390 <png_warning@plt>
    ab5e:	mov    -0x8(%rbp),%r15
    ab62:	leaveq 
    ab63:	retq   
    ab64:	xor    %edi,%edi
    ab66:	callq  5390 <png_warning@plt>
    ab6b:	leaveq 
    ab6c:	retq   
    ab6d:	nopl   (%rax)

000000000000ab70 <png_benign_error>:
    ab70:	push   %rbp
    ab71:	mov    %rsp,%rbp
    ab74:	mov    0x130(%rdi),%eax
    ab7a:	and    $0x100000,%eax
    ab7f:	test   %eax,%eax
    ab81:	jne    ab97 <png_benign_error+0x27>
    ab83:	mov    0x12c(%rdi),%eax
    ab89:	and    $0x8000,%eax
    ab8e:	test   %eax,%eax
    ab90:	jne    abad <png_benign_error+0x3d>
    ab92:	callq  5470 <png_error@plt>
    ab97:	mov    0x12c(%rdi),%eax
    ab9d:	and    $0x8000,%eax
    aba2:	test   %eax,%eax
    aba4:	jne    abbc <png_benign_error+0x4c>
    aba6:	callq  5390 <png_warning@plt>
    abab:	leaveq 
    abac:	retq   
    abad:	mov    0x218(%rdi),%eax
    abb3:	test   %eax,%eax
    abb5:	je     ab92 <png_benign_error+0x22>
    abb7:	callq  5060 <png_chunk_error@plt>
    abbc:	mov    0x218(%rdi),%eax
    abc2:	test   %eax,%eax
    abc4:	je     aba6 <png_benign_error+0x36>
    abc6:	callq  56a0 <png_chunk_warning@plt>
    abcb:	leaveq 
    abcc:	retq   
    abcd:	nopl   (%rax)

000000000000abd0 <png_chunk_benign_error>:
    abd0:	push   %rbp
    abd1:	mov    %rsp,%rbp
    abd4:	mov    0x130(%rdi),%eax
    abda:	and    $0x100000,%eax
    abdf:	test   %eax,%eax
    abe1:	jne    abe8 <png_chunk_benign_error+0x18>
    abe3:	callq  5060 <png_chunk_error@plt>
    abe8:	callq  56a0 <png_chunk_warning@plt>
    abed:	leaveq 
    abee:	retq   
    abef:	nop

000000000000abf0 <png_free_jmpbuf>:
    abf0:	push   %rbp
    abf1:	mov    %rsp,%rbp
    abf4:	sub    $0xe0,%rsp
    abfb:	test   %rdi,%rdi
    abfe:	jne    ac02 <png_free_jmpbuf+0x12>
    ac00:	leaveq 
    ac01:	retq   
    ac02:	mov    0xd0(%rdi),%rcx
    ac09:	test   %rcx,%rcx
    ac0c:	jne    ac31 <png_free_jmpbuf+0x41>
    ac0e:	movq   $0x0,0xd8(%rdi)
    ac19:	movq   $0x0,0xd0(%rdi)
    ac24:	movq   $0x0,0xc8(%rdi)
    ac2f:	leaveq 
    ac30:	retq   
    ac31:	mov    0xd8(%rdi),%rax
    ac38:	test   %rax,%rax
    ac3b:	je     ac0e <png_free_jmpbuf+0x1e>
    ac3d:	cmp    %rcx,%rdi
    ac40:	je     ac0e <png_free_jmpbuf+0x1e>
    ac42:	lea    -0xd8(%rbp),%rax
    ac49:	mov    %r15,-0x10(%rbp)
    ac4d:	mov    %rcx,-0x8(%rbp)
    ac51:	mov    %rdi,%r15
    ac54:	mov    %rax,%rdi
    ac57:	callq  5420 <_setjmp@plt>
    ac5c:	test   %eax,%eax
    ac5e:	je     ac69 <png_free_jmpbuf+0x79>
    ac60:	mov    %r15,%rdi
    ac63:	mov    -0x10(%rbp),%r15
    ac67:	jmp    ac0e <png_free_jmpbuf+0x1e>
    ac69:	lea    -0xd8(%rbp),%rax
    ac70:	mov    %rax,0xd0(%r15)
    ac77:	movq   $0x0,0xd8(%r15)
    ac82:	mov    0x27357(%rip),%rax        # 31fe0 <longjmp@GLIBC_2.2.5>
    ac89:	mov    %rax,0xc8(%r15)
    ac90:	mov    %r15,%rdi
    ac93:	mov    -0x8(%rbp),%rsi
    ac97:	callq  5790 <png_free@plt>
    ac9c:	mov    %r15,%rdi
    ac9f:	mov    -0x10(%rbp),%r15
    aca3:	jmpq   ac0e <png_free_jmpbuf+0x1e>
    aca8:	nopl   0x0(%rax,%rax,1)

000000000000acb0 <png_fixed_error>:
    acb0:	push   %rbp
    acb1:	mov    %rsp,%rbp
    acb4:	sub    $0xe0,%rsp
    acbb:	mov    %rdi,%r12
    acbe:	mov    %rsi,%r13
    acc1:	lea    -0xdc(%rbp),%rbx
    acc8:	lea    0x2285d(%rip),%rsi        # 2d52c <png_digit+0x50>
    accf:	mov    $0x18,%edx
    acd4:	mov    %rbx,%rdi
    acd7:	callq  54c0 <memcpy@plt>
    acdc:	xor    %eax,%eax
    acde:	test   %r13,%r13
    ace1:	jne    ad0e <png_fixed_error+0x5e>
    ace3:	mov    %eax,%eax
    ace5:	movb   $0x0,-0xc4(%rbp,%rax,1)
    aced:	mov    %rbx,%rsi
    acf0:	mov    %r12,%rdi
    acf3:	callq  5470 <png_error@plt>
    acf8:	mov    %eax,%edx
    acfa:	movsbq 0x0(%r13,%rdx,1),%rcx
    ad00:	test   %cl,%cl
    ad02:	je     ace3 <png_fixed_error+0x33>
    ad04:	mov    %cl,-0xc4(%rbp,%rdx,1)
    ad0b:	add    $0x1,%eax
    ad0e:	cmp    $0xc2,%eax
    ad13:	jbe    acf8 <png_fixed_error+0x48>
    ad15:	jmp    ace3 <png_fixed_error+0x33>
    ad17:	nopw   0x0(%rax,%rax,1)

000000000000ad20 <png_safecat>:
    ad20:	push   %rbp
    ad21:	mov    %rsp,%rbp
    ad24:	test   %rdi,%rdi
    ad27:	jne    ad2e <png_safecat+0xe>
    ad29:	mov    %rdx,%rax
    ad2c:	leaveq 
    ad2d:	retq   
    ad2e:	cmp    %rsi,%rdx
    ad31:	jb     ad38 <png_safecat+0x18>
    ad33:	mov    %rdx,%rax
    ad36:	leaveq 
    ad37:	retq   
    ad38:	test   %rcx,%rcx
    ad3b:	jne    ad46 <png_safecat+0x26>
    ad3d:	mov    %rdx,%rax
    ad40:	movb   $0x0,(%rdi,%rax,1)
    ad44:	leaveq 
    ad45:	retq   
    ad46:	add    $0xffffffffffffffff,%rsi
    ad4a:	mov    %rdx,%rax
    ad4d:	jmp    ad5f <png_safecat+0x3f>
    ad4f:	cmp    %rax,%rsi
    ad52:	jbe    ad40 <png_safecat+0x20>
    ad54:	mov    %dl,(%rdi,%rax,1)
    ad57:	add    $0x1,%rax
    ad5b:	add    $0x1,%rcx
    ad5f:	movsbq (%rcx),%rdx
    ad63:	test   %dl,%dl
    ad65:	jne    ad4f <png_safecat+0x2f>
    ad67:	jmp    ad40 <png_safecat+0x20>
    ad69:	nopl   0x0(%rax)

000000000000ad70 <png_format_number>:
    ad70:	push   %rbp
    ad71:	mov    %rsp,%rbp
    ad74:	sub    $0x30,%rsp
    ad78:	mov    %r15,-0x28(%rbp)
    ad7c:	mov    %r14,-0x20(%rbp)
    ad80:	mov    %rbx,-0x8(%rbp)
    ad84:	mov    %r12,-0x10(%rbp)
    ad88:	mov    %r13,-0x18(%rbp)
    ad8c:	lea    -0x1(%rdx),%r11d
    ad90:	add    $0xffffffffffffffff,%rsi
    ad94:	movb   $0x0,(%rsi)
    ad97:	mov    %rdx,%r9
    ad9a:	mov    $0xa,%ebx
    ad9f:	lea    0x2279f(%rip),%r8        # 2d545 <digits.5>
    ada6:	mov    $0x1,%r12d
    adac:	xor    %r10d,%r10d
    adaf:	mov    $0x5,%edx
    adb4:	mov    $0x2,%r14d
    adba:	mov    %r10,%r13
    adbd:	mov    %r13,%r15
    adc0:	jmp    ade0 <png_format_number+0x70>
    adc2:	test   %rcx,%rcx
    adc5:	je     adfe <png_format_number+0x8e>
    adc7:	cmp    $0x4,%r11d
    adcb:	jbe    ae1c <png_format_number+0xac>
    adcd:	mov    %r10,%rcx
    add0:	cmp    $0x5,%r9d
    add4:	lea    0x1(%r15),%r15d
    add8:	jne    ade0 <png_format_number+0x70>
    adda:	cmp    $0x5,%r15d
    adde:	je     ae36 <png_format_number+0xc6>
    ade0:	cmp    %rdi,%rsi
    ade3:	ja     adc2 <png_format_number+0x52>
    ade5:	mov    %rsi,%rax
    ade8:	mov    -0x18(%rbp),%r13
    adec:	mov    -0x10(%rbp),%r12
    adf0:	mov    -0x8(%rbp),%rbx
    adf4:	mov    -0x20(%rbp),%r14
    adf8:	mov    -0x28(%rbp),%r15
    adfc:	leaveq 
    adfd:	retq   
    adfe:	cmp    %r15d,%r12d
    ae01:	jg     adc7 <png_format_number+0x57>
    ae03:	mov    %rsi,%rax
    ae06:	mov    -0x18(%rbp),%r13
    ae0a:	mov    -0x10(%rbp),%r12
    ae0e:	mov    -0x8(%rbp),%rbx
    ae12:	mov    -0x20(%rbp),%r14
    ae16:	mov    -0x28(%rbp),%r15
    ae1a:	leaveq 
    ae1b:	retq   
    ae1c:	lea    0x226a5(%rip),%rdx        # 2d4c8 <short_months.6+0x9f3>
    ae23:	movslq (%rdx,%r11,4),%rax
    ae27:	add    %rdx,%rax
    ae2a:	jmpq   *%rax
    ae2c:	mov    $0x5,%edx
    ae31:	mov    %r10,%rcx
    ae34:	jmp    add0 <png_format_number+0x60>
    ae36:	cmp    %rdi,%rsi
    ae39:	ja     aed3 <png_format_number+0x163>
    ae3f:	mov    %rdx,%r15
    ae42:	jmp    ade0 <png_format_number+0x70>
    ae44:	mov    %r14,%r12
    ae47:	mov    %rcx,%rax
    ae4a:	and    $0xf,%rax
    ae4e:	movsbq (%rax,%r8,1),%rax
    ae53:	add    $0xffffffffffffffff,%rsi
    ae57:	mov    %al,(%rsi)
    ae59:	shr    $0x4,%rcx
    ae5d:	mov    $0x5,%edx
    ae62:	jmpq   add0 <png_format_number+0x60>
    ae67:	mov    %r14,%r12
    ae6a:	xor    %r14d,%r14d
    ae6d:	mov    %rcx,%rax
    ae70:	mov    %r14,%rdx
    ae73:	div    %rbx
    ae76:	movsbq (%rdx,%r8,1),%rax
    ae7b:	add    $0xffffffffffffffff,%rsi
    ae7f:	mov    %al,(%rsi)
    ae81:	mov    %rcx,%rax
    ae84:	mov    %r14,%rdx
    ae87:	div    %rbx
    ae8a:	mov    %rax,%rcx
    ae8d:	mov    $0x2,%r14d
    ae93:	mov    $0x5,%edx
    ae98:	jmpq   add0 <png_format_number+0x60>
    ae9d:	test   %r13d,%r13d
    aea0:	jle    aee8 <png_format_number+0x178>
    aea2:	xor    %edx,%edx
    aea4:	mov    %rcx,%rax
    aea7:	div    %rbx
    aeaa:	movsbq (%rdx,%r8,1),%rax
    aeaf:	add    $0xffffffffffffffff,%rsi
    aeb3:	mov    %al,(%rsi)
    aeb5:	mov    $0x1,%r13d
    aebb:	mov    %rcx,%rax
    aebe:	xor    %edx,%edx
    aec0:	div    %rbx
    aec3:	mov    %rax,%rcx
    aec6:	mov    $0x5,%edx
    aecb:	mov    %rdx,%r12
    aece:	jmpq   add0 <png_format_number+0x60>
    aed3:	test   %r13d,%r13d
    aed6:	jg     aefa <png_format_number+0x18a>
    aed8:	test   %rcx,%rcx
    aedb:	je     af09 <png_format_number+0x199>
    aedd:	mov    %rdx,%r15
    aee0:	mov    %r10,%r13
    aee3:	jmpq   ade0 <png_format_number+0x70>
    aee8:	xor    %edx,%edx
    aeea:	mov    %rcx,%rax
    aeed:	div    %rbx
    aef0:	test   %rdx,%rdx
    aef3:	jne    aea2 <png_format_number+0x132>
    aef5:	mov    %r10,%r13
    aef8:	jmp    aebb <png_format_number+0x14b>
    aefa:	add    $0xffffffffffffffff,%rsi
    aefe:	movb   $0x2e,(%rsi)
    af01:	mov    %rdx,%r15
    af04:	jmpq   ade0 <png_format_number+0x70>
    af09:	add    $0xffffffffffffffff,%rsi
    af0d:	movb   $0x30,(%rsi)
    af10:	mov    %rdx,%r15
    af13:	mov    %r10,%rcx
    af16:	mov    %rcx,%r13
    af19:	jmpq   ade0 <png_format_number+0x70>
    af1e:	xchg   %ax,%ax

000000000000af20 <png_warning_parameter>:
    af20:	push   %rbp
    af21:	mov    %rsp,%rbp
    af24:	test   %esi,%esi
    af26:	jg     af2a <png_warning_parameter+0xa>
    af28:	leaveq 
    af29:	retq   
    af2a:	cmp    $0x8,%esi
    af2d:	jle    af31 <png_warning_parameter+0x11>
    af2f:	leaveq 
    af30:	retq   
    af31:	lea    -0x1(%rsi),%eax
    af34:	movslq %eax,%rax
    af37:	shl    $0x5,%rax
    af3b:	add    %rax,%rdi
    af3e:	mov    %rdx,%rcx
    af41:	mov    $0x20,%esi
    af46:	xor    %edx,%edx
    af48:	callq  ad20 <png_safecat>
    af4d:	leaveq 
    af4e:	retq   
    af4f:	nop

000000000000af50 <png_warning_parameter_unsigned>:
    af50:	push   %rbp
    af51:	mov    %rsp,%rbp
    af54:	sub    $0x30,%rsp
    af58:	mov    %r14,-0x8(%rbp)
    af5c:	mov    %r15,-0x10(%rbp)
    af60:	mov    %rdi,%r14
    af63:	mov    %rsi,%r15
    af66:	lea    -0x28(%rbp),%rdi
    af6a:	lea    -0x10(%rbp),%rsi
    af6e:	callq  ad70 <png_format_number>
    af73:	mov    %rax,%rdx
    af76:	mov    %r15,%rsi
    af79:	mov    %r14,%rdi
    af7c:	callq  af20 <png_warning_parameter>
    af81:	mov    -0x10(%rbp),%r15
    af85:	mov    -0x8(%rbp),%r14
    af89:	leaveq 
    af8a:	retq   
    af8b:	nopl   0x0(%rax,%rax,1)

000000000000af90 <png_warning_parameter_signed>:
    af90:	push   %rbp
    af91:	mov    %rsp,%rbp
    af94:	sub    $0x30,%rsp
    af98:	mov    %r13,-0x8(%rbp)
    af9c:	mov    %r14,-0x10(%rbp)
    afa0:	mov    %r15,-0x18(%rbp)
    afa4:	movslq %ecx,%rax
    afa7:	test   %ecx,%ecx
    afa9:	js     afb3 <png_warning_parameter_signed+0x23>
    afab:	mov    %rax,%rcx
    afae:	xor    %r13d,%r13d
    afb1:	jmp    afbf <png_warning_parameter_signed+0x2f>
    afb3:	mov    %rax,%rcx
    afb6:	neg    %rcx
    afb9:	mov    $0x1,%r13d
    afbf:	mov    %rsi,%r14
    afc2:	mov    %rdi,%r15
    afc5:	lea    -0x30(%rbp),%rdi
    afc9:	lea    0x18(%rdi),%rsi
    afcd:	callq  ad70 <png_format_number>
    afd2:	test   %r13,%r13
    afd5:	jne    aff3 <png_warning_parameter_signed+0x63>
    afd7:	mov    %rax,%rdx
    afda:	mov    %r14,%rsi
    afdd:	mov    %r15,%rdi
    afe0:	callq  af20 <png_warning_parameter>
    afe5:	mov    -0x18(%rbp),%r15
    afe9:	mov    -0x10(%rbp),%r14
    afed:	mov    -0x8(%rbp),%r13
    aff1:	leaveq 
    aff2:	retq   
    aff3:	lea    -0x30(%rbp),%rcx
    aff7:	cmp    %rax,%rcx
    affa:	jb     b001 <png_warning_parameter_signed+0x71>
    affc:	mov    %rax,%rdx
    afff:	jmp    afda <png_warning_parameter_signed+0x4a>
    b001:	lea    -0x1(%rax),%rdx
    b005:	movb   $0x2d,(%rdx)
    b008:	jmp    afda <png_warning_parameter_signed+0x4a>
    b00a:	nopw   0x0(%rax,%rax,1)

000000000000b010 <png_formatted_warning>:
    b010:	push   %rbp
    b011:	mov    %rsp,%rbp
    b014:	sub    $0xd0,%rsp
    b01b:	mov    %r14,-0x8(%rbp)
    b01f:	mov    %r15,-0x10(%rbp)
    b023:	xor    %r15d,%r15d
    b026:	lea    0x22529(%rip),%r11        # 2d556 <valid_parameters.6>
    b02d:	mov    %r15,%rax
    b030:	jmp    b052 <png_formatted_warning+0x42>
    b032:	movsbq (%rdx),%rcx
    b036:	test   %cl,%cl
    b038:	je     b05a <png_formatted_warning+0x4a>
    b03a:	test   %rsi,%rsi
    b03d:	jne    b078 <png_formatted_warning+0x68>
    b03f:	movsbq (%rdx),%rcx
    b043:	mov    %cl,-0xd0(%rbp,%rax,1)
    b04a:	add    $0x1,%rax
    b04e:	add    $0x1,%rdx
    b052:	cmp    $0xbe,%rax
    b058:	jbe    b032 <png_formatted_warning+0x22>
    b05a:	movb   $0x0,-0xd0(%rbp,%rax,1)
    b062:	lea    -0xd0(%rbp),%rsi
    b069:	callq  5390 <png_warning@plt>
    b06e:	mov    -0x10(%rbp),%r15
    b072:	mov    -0x8(%rbp),%r14
    b076:	leaveq 
    b077:	retq   
    b078:	cmp    $0x40,%cl
    b07b:	jne    b03f <png_formatted_warning+0x2f>
    b07d:	lea    0x1(%rdx),%r14
    b081:	movsbq (%r14),%r10
    b085:	test   %r10b,%r10b
    b088:	je     b03f <png_formatted_warning+0x2f>
    b08a:	mov    %r15,%rcx
    b08d:	jmp    b097 <png_formatted_warning+0x87>
    b08f:	test   %r9b,%r9b
    b092:	je     b0a4 <png_formatted_warning+0x94>
    b094:	add    $0x1,%ecx
    b097:	movslq %ecx,%r8
    b09a:	movsbq (%r8,%r11,1),%r9
    b09f:	cmp    %r10b,%r9b
    b0a2:	jne    b08f <png_formatted_warning+0x7f>
    b0a4:	cmp    $0x7,%ecx
    b0a7:	jle    b0ae <png_formatted_warning+0x9e>
    b0a9:	mov    %r14,%rdx
    b0ac:	jmp    b03f <png_formatted_warning+0x2f>
    b0ae:	shl    $0x5,%r8
    b0b2:	lea    (%rsi,%r8,1),%rcx
    b0b6:	lea    0x20(%rcx),%r9
    b0ba:	jmp    b0da <png_formatted_warning+0xca>
    b0bc:	movsbq (%rcx),%r8
    b0c0:	test   %r8b,%r8b
    b0c3:	je     b0e2 <png_formatted_warning+0xd2>
    b0c5:	cmp    %r9,%rcx
    b0c8:	jae    b0e2 <png_formatted_warning+0xd2>
    b0ca:	mov    %r8b,-0xd0(%rbp,%rax,1)
    b0d2:	add    $0x1,%rax
    b0d6:	add    $0x1,%rcx
    b0da:	cmp    $0xbe,%rax
    b0e0:	jbe    b0bc <png_formatted_warning+0xac>
    b0e2:	add    $0x2,%rdx
    b0e6:	jmpq   b052 <png_formatted_warning+0x42>
    b0eb:	nopl   0x0(%rax,%rax,1)

000000000000b0f0 <png_app_warning>:
    b0f0:	push   %rbp
    b0f1:	mov    %rsp,%rbp
    b0f4:	mov    0x130(%rdi),%eax
    b0fa:	and    $0x200000,%eax
    b0ff:	test   %eax,%eax
    b101:	jne    b108 <png_app_warning+0x18>
    b103:	callq  5470 <png_error@plt>
    b108:	callq  5390 <png_warning@plt>
    b10d:	leaveq 
    b10e:	retq   
    b10f:	nop

000000000000b110 <png_app_error>:
    b110:	push   %rbp
    b111:	mov    %rsp,%rbp
    b114:	mov    0x130(%rdi),%eax
    b11a:	and    $0x400000,%eax
    b11f:	test   %eax,%eax
    b121:	jne    b128 <png_app_error+0x18>
    b123:	callq  5470 <png_error@plt>
    b128:	callq  5390 <png_warning@plt>
    b12d:	leaveq 
    b12e:	retq   
    b12f:	nop

000000000000b130 <png_chunk_report>:
    b130:	push   %rbp
    b131:	mov    %rsp,%rbp
    b134:	mov    0x12c(%rdi),%eax
    b13a:	and    $0x8000,%eax
    b13f:	test   %eax,%eax
    b141:	jne    b14e <png_chunk_report+0x1e>
    b143:	test   %edx,%edx
    b145:	jle    b15a <png_chunk_report+0x2a>
    b147:	callq  b110 <png_app_error>
    b14c:	leaveq 
    b14d:	retq   
    b14e:	cmp    $0x1,%edx
    b151:	jle    b161 <png_chunk_report+0x31>
    b153:	callq  5230 <png_chunk_benign_error@plt>
    b158:	leaveq 
    b159:	retq   
    b15a:	callq  b0f0 <png_app_warning>
    b15f:	leaveq 
    b160:	retq   
    b161:	callq  56a0 <png_chunk_warning@plt>
    b166:	leaveq 
    b167:	retq   
    b168:	nopl   0x0(%rax,%rax,1)

000000000000b170 <png_safe_error>:
    b170:	push   %rbp
    b171:	mov    %rsp,%rbp
    b174:	mov    0xf0(%rdi),%r15
    b17b:	test   %r15,%r15
    b17e:	jne    b185 <png_safe_error+0x15>
    b180:	callq  5090 <abort@plt>
    b185:	mov    %rsi,%r13
    b188:	lea    0x24(%r15),%rbx
    b18c:	mov    $0x40,%r12d
    b192:	xor    %r14d,%r14d
    b195:	mov    %rbx,%rdi
    b198:	mov    %r12,%rsi
    b19b:	mov    %r14,%rdx
    b19e:	mov    %r13,%rcx
    b1a1:	callq  ad20 <png_safecat>
    b1a6:	mov    0x20(%r15),%eax
    b1aa:	or     $0x2,%eax
    b1ad:	mov    %eax,0x20(%r15)
    b1b1:	mov    (%r15),%rax
    b1b4:	test   %rax,%rax
    b1b7:	jne    b1e1 <png_safe_error+0x71>
    b1b9:	mov    %r14,%rdx
    b1bc:	lea    0x2239d(%rip),%rcx        # 2d560 <valid_parameters.6+0xa>
    b1c3:	mov    %rbx,%rdi
    b1c6:	mov    %r12,%rsi
    b1c9:	callq  ad20 <png_safecat>
    b1ce:	mov    %r13,%rcx
    b1d1:	mov    %rax,%rdx
    b1d4:	mov    %r12,%rsi
    b1d7:	mov    %rbx,%rdi
    b1da:	callq  ad20 <png_safecat>
    b1df:	jmp    b180 <png_safe_error+0x10>
    b1e1:	mov    0x10(%rax),%rdi
    b1e5:	test   %rdi,%rdi
    b1e8:	je     b1b9 <png_safe_error+0x49>
    b1ea:	mov    $0x1,%esi
    b1ef:	callq  58f0 <longjmp@plt>
    b1f4:	data16 nopw %cs:0x0(%rax,%rax,1)
    b1ff:	nop

000000000000b200 <png_safe_warning>:
    b200:	push   %rbp
    b201:	mov    %rsp,%rbp
    b204:	sub    $0x10,%rsp
    b208:	mov    0xf0(%rdi),%rcx
    b20f:	mov    0x20(%rcx),%eax
    b212:	test   %eax,%eax
    b214:	je     b218 <png_safe_warning+0x18>
    b216:	leaveq 
    b217:	retq   
    b218:	lea    0x24(%rcx),%rdi
    b21c:	mov    $0x40,%eax
    b221:	xor    %edx,%edx
    b223:	mov    %r15,-0x8(%rbp)
    b227:	mov    %rcx,%r15
    b22a:	mov    %rsi,%rcx
    b22d:	mov    %rax,%rsi
    b230:	callq  ad20 <png_safecat>
    b235:	mov    0x20(%r15),%eax
    b239:	or     $0x1,%eax
    b23c:	mov    %eax,0x20(%r15)
    b240:	mov    -0x8(%rbp),%r15
    b244:	leaveq 
    b245:	retq   
    b246:	nopw   %cs:0x0(%rax,%rax,1)

000000000000b250 <png_safe_execute>:
    b250:	push   %rbp
    b251:	mov    %rsp,%rbp
    b254:	sub    $0xf0,%rsp
    b25b:	mov    %r14,-0x8(%rbp)
    b25f:	mov    %r15,-0x10(%rbp)
    b263:	mov    %rdi,-0xf0(%rbp)
    b26a:	mov    -0xf0(%rbp),%rax
    b271:	mov    (%rax),%rax
    b274:	mov    0x10(%rax),%rax
    b278:	mov    %rax,-0xe0(%rbp)
    b27f:	mov    %rsi,%r14
    b282:	mov    %rdx,%r15
    b285:	lea    -0xd8(%rbp),%rdi
    b28c:	callq  5420 <_setjmp@plt>
    b291:	test   %eax,%eax
    b293:	je     b299 <png_safe_execute+0x49>
    b295:	xor    %eax,%eax
    b297:	jmp    b29e <png_safe_execute+0x4e>
    b299:	mov    $0x1,%eax
    b29e:	mov    %eax,-0xe4(%rbp)
    b2a4:	movslq -0xe4(%rbp),%rax
    b2ab:	test   %eax,%eax
    b2ad:	je     b2d0 <png_safe_execute+0x80>
    b2af:	mov    -0xf0(%rbp),%rax
    b2b6:	mov    (%rax),%rax
    b2b9:	lea    -0xd8(%rbp),%rcx
    b2c0:	mov    %rcx,0x10(%rax)
    b2c4:	mov    %r15,%rdi
    b2c7:	callq  *%r14
    b2ca:	mov    %eax,-0xe4(%rbp)
    b2d0:	mov    -0xf0(%rbp),%rax
    b2d7:	mov    (%rax),%rax
    b2da:	mov    -0xe0(%rbp),%rcx
    b2e1:	mov    %rcx,0x10(%rax)
    b2e5:	movslq -0xe4(%rbp),%rax
    b2ec:	test   %eax,%eax
    b2ee:	jne    b2fc <png_safe_execute+0xac>
    b2f0:	mov    -0xf0(%rbp),%rdi
    b2f7:	callq  5040 <png_image_free@plt>
    b2fc:	movslq -0xe4(%rbp),%rax
    b303:	mov    -0x10(%rbp),%r15
    b307:	mov    -0x8(%rbp),%r14
    b30b:	leaveq 
    b30c:	retq   
    b30d:	nopl   (%rax)

000000000000b310 <png_default_error>:
    b310:	push   %rbp
    b311:	mov    %rsp,%rbp
    b314:	test   %rsi,%rsi
    b317:	jne    b322 <png_default_error+0x12>
    b319:	lea    0x2225f(%rip),%rdx        # 2d57f <valid_parameters.6+0x29>
    b320:	jmp    b325 <png_default_error+0x15>
    b322:	mov    %rsi,%rdx
    b325:	mov    %rdi,%rbx
    b328:	xor    %r12d,%r12d
    b32b:	mov    0x26cc6(%rip),%r13        # 31ff8 <stderr@GLIBC_2.2.5>
    b332:	mov    0x0(%r13),%rdi
    b336:	lea    0x22231(%rip),%rsi        # 2d56e <valid_parameters.6+0x18>
    b33d:	mov    %r12,%rax
    b340:	callq  5490 <fprintf@plt>
    b345:	mov    0x0(%r13),%rdi
    b349:	mov    %r12,%rax
    b34c:	lea    0x22236(%rip),%rsi        # 2d589 <valid_parameters.6+0x33>
    b353:	callq  5490 <fprintf@plt>
    b358:	mov    %rbx,%rdi
    b35b:	mov    $0x1,%esi
    b360:	callq  5870 <png_longjmp@plt>
    b365:	data16 nopw %cs:0x0(%rax,%rax,1)

000000000000b370 <png_default_warning>:
    b370:	push   %rbp
    b371:	mov    %rsp,%rbp
    b374:	sub    $0x10,%rsp
    b378:	mov    %r15,-0x8(%rbp)
    b37c:	mov    %rsi,%rdx
    b37f:	xor    %eax,%eax
    b381:	mov    0x26c70(%rip),%r15        # 31ff8 <stderr@GLIBC_2.2.5>
    b388:	mov    (%r15),%rdi
    b38b:	lea    0x221f9(%rip),%rsi        # 2d58b <valid_parameters.6+0x35>
    b392:	callq  5490 <fprintf@plt>
    b397:	mov    (%r15),%rdi
    b39a:	lea    0x221e8(%rip),%rsi        # 2d589 <valid_parameters.6+0x33>
    b3a1:	xor    %eax,%eax
    b3a3:	callq  5490 <fprintf@plt>
    b3a8:	mov    -0x8(%rbp),%r15
    b3ac:	leaveq 
    b3ad:	retq   
    b3ae:	xchg   %ax,%ax

000000000000b3b0 <png_format_buffer>:
    b3b0:	push   %rbp
    b3b1:	mov    %rsp,%rbp
    b3b4:	sub    $0x20,%rsp
    b3b8:	mov    %rdx,-0x18(%rbp)
    b3bc:	mov    %r14,-0x8(%rbp)
    b3c0:	mov    %r15,-0x10(%rbp)
    b3c4:	movslq 0x218(%rdi),%r8
    b3cb:	xor    %eax,%eax
    b3cd:	lea    0x22108(%rip),%rdx        # 2d4dc <png_digit>
    b3d4:	mov    $0x18,%ecx
    b3d9:	mov    $0x1,%edi
    b3de:	mov    %rax,%r9
    b3e1:	jmp    b430 <png_format_buffer+0x80>
    b3e3:	movb   $0x5b,(%rsi,%r10,1)
    b3e8:	mov    %r11,%r10
    b3eb:	and    $0xf0,%r10d
    b3f2:	shr    $0x4,%r10d
    b3f6:	movslq %r10d,%r10
    b3f9:	movsbq (%r10,%rdx,1),%r14
    b3fe:	lea    0x1(%r9),%r10d
    b402:	movslq %r10d,%r10
    b405:	mov    %r14b,(%rsi,%r10,1)
    b409:	and    $0xf,%r11d
    b40d:	movslq %r11d,%r10
    b410:	movsbq (%r10,%rdx,1),%r11
    b415:	lea    0x2(%r9),%r10d
    b419:	movslq %r10d,%r10
    b41c:	mov    %r11b,(%rsi,%r10,1)
    b420:	lea    0x3(%r9),%r10d
    b424:	movslq %r10d,%r10
    b427:	movb   $0x5d,(%rsi,%r10,1)
    b42c:	add    $0x4,%r9d
    b430:	movslq %r9d,%r10
    b433:	test   %ecx,%ecx
    b435:	jns    b456 <png_format_buffer+0xa6>
    b437:	mov    -0x18(%rbp),%r8
    b43b:	test   %r8,%r8
    b43e:	je     b47f <png_format_buffer+0xcf>
    b440:	movb   $0x3a,(%rsi,%r10,1)
    b445:	lea    0x1(%r9),%ecx
    b449:	movslq %ecx,%rcx
    b44c:	movb   $0x20,(%rsi,%rcx,1)
    b450:	lea    0x2(%r9),%ecx
    b454:	jmp    b4a5 <png_format_buffer+0xf5>
    b456:	mov    %r8,%r11
    b459:	shr    %cl,%r11d
    b45c:	movzbl %r11b,%r15d
    b460:	cmp    $0x40,%r15d
    b464:	jg     b4bd <png_format_buffer+0x10d>
    b466:	mov    %rdi,%r14
    b469:	add    $0xfffffff8,%ecx
    b46c:	test   %r14d,%r14d
    b46f:	jg     b3e3 <png_format_buffer+0x33>
    b475:	mov    %r15b,(%rsi,%r10,1)
    b479:	add    $0x1,%r9d
    b47d:	jmp    b430 <png_format_buffer+0x80>
    b47f:	movb   $0x0,(%rsi,%r10,1)
    b484:	mov    -0x10(%rbp),%r15
    b488:	mov    -0x8(%rbp),%r14
    b48c:	leaveq 
    b48d:	retq   
    b48e:	movslq %eax,%rdi
    b491:	movsbq (%r8,%rdi,1),%rdi
    b496:	test   %dil,%dil
    b499:	je     b4af <png_format_buffer+0xff>
    b49b:	mov    %dil,(%rdx,%rsi,1)
    b49f:	add    $0x1,%ecx
    b4a2:	add    $0x1,%eax
    b4a5:	movslq %ecx,%rdx
    b4a8:	cmp    $0xc2,%eax
    b4ad:	jle    b48e <png_format_buffer+0xde>
    b4af:	movb   $0x0,(%rdx,%rsi,1)
    b4b3:	mov    -0x10(%rbp),%r15
    b4b7:	mov    -0x8(%rbp),%r14
    b4bb:	leaveq 
    b4bc:	retq   
    b4bd:	cmp    $0x7a,%r15d
    b4c1:	jle    b4c8 <png_format_buffer+0x118>
    b4c3:	mov    %rdi,%r14
    b4c6:	jmp    b469 <png_format_buffer+0xb9>
    b4c8:	cmp    $0x5a,%r15d
    b4cc:	jg     b4d3 <png_format_buffer+0x123>
    b4ce:	mov    %rax,%r14
    b4d1:	jmp    b469 <png_format_buffer+0xb9>
    b4d3:	cmp    $0x60,%r15d
    b4d7:	jle    b4de <png_format_buffer+0x12e>
    b4d9:	mov    %rax,%r14
    b4dc:	jmp    b469 <png_format_buffer+0xb9>
    b4de:	mov    %rdi,%r14
    b4e1:	jmp    b469 <png_format_buffer+0xb9>
    b4e3:	nopw   %cs:0x0(%rax,%rax,1)
    b4ed:	nopl   (%rax)

000000000000b4f0 <png_get_compression_buffer_size>:
    b4f0:	push   %rbp
    b4f1:	mov    %rsp,%rbp
    b4f4:	test   %rdi,%rdi
    b4f7:	jne    b4fd <png_get_compression_buffer_size+0xd>
    b4f9:	xor    %eax,%eax
    b4fb:	leaveq 
    b4fc:	retq   
    b4fd:	mov    0x12c(%rdi),%eax
    b503:	and    $0x8000,%eax
    b508:	test   %eax,%eax
    b50a:	jne    b514 <png_get_compression_buffer_size+0x24>
    b50c:	mov    0x1b8(%rdi),%eax
    b512:	leaveq 
    b513:	retq   
    b514:	mov    0x468(%rdi),%eax
    b51a:	leaveq 
    b51b:	retq   
    b51c:	nopl   0x0(%rax)

000000000000b520 <png_get_rgb_to_gray_status>:
    b520:	push   %rbp
    b521:	mov    %rsp,%rbp
    b524:	test   %rdi,%rdi
    b527:	jne    b52d <png_get_rgb_to_gray_status+0xd>
    b529:	xor    %eax,%eax
    b52b:	leaveq 
    b52c:	retq   
    b52d:	movzbl 0x3d0(%rdi),%eax
    b534:	leaveq 
    b535:	retq   
    b536:	nopw   %cs:0x0(%rax,%rax,1)

000000000000b540 <png_get_user_chunk_ptr>:
    b540:	push   %rbp
    b541:	mov    %rsp,%rbp
    b544:	test   %rdi,%rdi
    b547:	jne    b54d <png_get_user_chunk_ptr+0xd>
    b549:	xor    %eax,%eax
    b54b:	leaveq 
    b54c:	retq   
    b54d:	mov    0x3b0(%rdi),%rax
    b554:	leaveq 
    b555:	retq   
    b556:	nopw   %cs:0x0(%rax,%rax,1)

000000000000b560 <png_get_valid>:
    b560:	push   %rbp
    b561:	mov    %rsp,%rbp
    b564:	xor    %eax,%eax
    b566:	test   %rdi,%rdi
    b569:	jne    b56d <png_get_valid+0xd>
    b56b:	leaveq 
    b56c:	retq   
    b56d:	test   %rsi,%rsi
    b570:	jne    b574 <png_get_valid+0x14>
    b572:	leaveq 
    b573:	retq   
    b574:	mov    %rdx,%rax
    b577:	and    0x8(%rsi),%eax
    b57a:	leaveq 
    b57b:	retq   
    b57c:	nopl   0x0(%rax)

000000000000b580 <png_get_rowbytes>:
    b580:	push   %rbp
    b581:	mov    %rsp,%rbp
    b584:	xor    %eax,%eax
    b586:	test   %rdi,%rdi
    b589:	jne    b58d <png_get_rowbytes+0xd>
    b58b:	leaveq 
    b58c:	retq   
    b58d:	test   %rsi,%rsi
    b590:	jne    b594 <png_get_rowbytes+0x14>
    b592:	leaveq 
    b593:	retq   
    b594:	mov    0x10(%rsi),%rax
    b598:	leaveq 
    b599:	retq   
    b59a:	nopw   0x0(%rax,%rax,1)

000000000000b5a0 <png_get_rows>:
    b5a0:	push   %rbp
    b5a1:	mov    %rsp,%rbp
    b5a4:	xor    %eax,%eax
    b5a6:	test   %rdi,%rdi
    b5a9:	jne    b5ad <png_get_rows+0xd>
    b5ab:	leaveq 
    b5ac:	retq   
    b5ad:	test   %rsi,%rsi
    b5b0:	jne    b5b4 <png_get_rows+0x14>
    b5b2:	leaveq 
    b5b3:	retq   
    b5b4:	mov    0x160(%rsi),%rax
    b5bb:	leaveq 
    b5bc:	retq   
    b5bd:	nopl   (%rax)

000000000000b5c0 <png_get_channels>:
    b5c0:	push   %rbp
    b5c1:	mov    %rsp,%rbp
    b5c4:	xor    %eax,%eax
    b5c6:	test   %rdi,%rdi
    b5c9:	jne    b5cd <png_get_channels+0xd>
    b5cb:	leaveq 
    b5cc:	retq   
    b5cd:	test   %rsi,%rsi
    b5d0:	jne    b5d4 <png_get_channels+0x14>
    b5d2:	leaveq 
    b5d3:	retq   
    b5d4:	movzbl 0x29(%rsi),%eax
    b5d8:	leaveq 
    b5d9:	retq   
    b5da:	nopw   0x0(%rax,%rax,1)

000000000000b5e0 <png_get_image_width>:
    b5e0:	push   %rbp
    b5e1:	mov    %rsp,%rbp
    b5e4:	xor    %eax,%eax
    b5e6:	test   %rdi,%rdi
    b5e9:	jne    b5ed <png_get_image_width+0xd>
    b5eb:	leaveq 
    b5ec:	retq   
    b5ed:	test   %rsi,%rsi
    b5f0:	jne    b5f4 <png_get_image_width+0x14>
    b5f2:	leaveq 
    b5f3:	retq   
    b5f4:	mov    (%rsi),%eax
    b5f6:	leaveq 
    b5f7:	retq   
    b5f8:	nopl   0x0(%rax,%rax,1)

000000000000b600 <png_get_image_height>:
    b600:	push   %rbp
    b601:	mov    %rsp,%rbp
    b604:	xor    %eax,%eax
    b606:	test   %rdi,%rdi
    b609:	jne    b60d <png_get_image_height+0xd>
    b60b:	leaveq 
    b60c:	retq   
    b60d:	test   %rsi,%rsi
    b610:	jne    b614 <png_get_image_height+0x14>
    b612:	leaveq 
    b613:	retq   
    b614:	mov    0x4(%rsi),%eax
    b617:	leaveq 
    b618:	retq   
    b619:	nopl   0x0(%rax)

000000000000b620 <png_get_bit_depth>:
    b620:	push   %rbp
    b621:	mov    %rsp,%rbp
    b624:	xor    %eax,%eax
    b626:	test   %rdi,%rdi
    b629:	jne    b62d <png_get_bit_depth+0xd>
    b62b:	leaveq 
    b62c:	retq   
    b62d:	test   %rsi,%rsi
    b630:	jne    b634 <png_get_bit_depth+0x14>
    b632:	leaveq 
    b633:	retq   
    b634:	movzbl 0x24(%rsi),%eax
    b638:	leaveq 
    b639:	retq   
    b63a:	nopw   0x0(%rax,%rax,1)

000000000000b640 <png_get_color_type>:
    b640:	push   %rbp
    b641:	mov    %rsp,%rbp
    b644:	xor    %eax,%eax
    b646:	test   %rdi,%rdi
    b649:	jne    b64d <png_get_color_type+0xd>
    b64b:	leaveq 
    b64c:	retq   
    b64d:	test   %rsi,%rsi
    b650:	jne    b654 <png_get_color_type+0x14>
    b652:	leaveq 
    b653:	retq   
    b654:	movzbl 0x25(%rsi),%eax
    b658:	leaveq 
    b659:	retq   
    b65a:	nopw   0x0(%rax,%rax,1)

000000000000b660 <png_get_filter_type>:
    b660:	push   %rbp
    b661:	mov    %rsp,%rbp
    b664:	xor    %eax,%eax
    b666:	test   %rdi,%rdi
    b669:	jne    b66d <png_get_filter_type+0xd>
    b66b:	leaveq 
    b66c:	retq   
    b66d:	test   %rsi,%rsi
    b670:	jne    b674 <png_get_filter_type+0x14>
    b672:	leaveq 
    b673:	retq   
    b674:	movzbl 0x27(%rsi),%eax
    b678:	leaveq 
    b679:	retq   
    b67a:	nopw   0x0(%rax,%rax,1)

000000000000b680 <png_get_interlace_type>:
    b680:	push   %rbp
    b681:	mov    %rsp,%rbp
    b684:	xor    %eax,%eax
    b686:	test   %rdi,%rdi
    b689:	jne    b68d <png_get_interlace_type+0xd>
    b68b:	leaveq 
    b68c:	retq   
    b68d:	test   %rsi,%rsi
    b690:	jne    b694 <png_get_interlace_type+0x14>
    b692:	leaveq 
    b693:	retq   
    b694:	movzbl 0x28(%rsi),%eax
    b698:	leaveq 
    b699:	retq   
    b69a:	nopw   0x0(%rax,%rax,1)

000000000000b6a0 <png_get_compression_type>:
    b6a0:	push   %rbp
    b6a1:	mov    %rsp,%rbp
    b6a4:	xor    %eax,%eax
    b6a6:	test   %rdi,%rdi
    b6a9:	jne    b6ad <png_get_compression_type+0xd>
    b6ab:	leaveq 
    b6ac:	retq   
    b6ad:	test   %rsi,%rsi
    b6b0:	jne    b6b4 <png_get_compression_type+0x14>
    b6b2:	leaveq 
    b6b3:	retq   
    b6b4:	movzbl 0x26(%rsi),%eax
    b6b8:	leaveq 
    b6b9:	retq   
    b6ba:	nopw   0x0(%rax,%rax,1)

000000000000b6c0 <png_get_pixels_per_meter>:
    b6c0:	push   %rbp
    b6c1:	mov    %rsp,%rbp
    b6c4:	xor    %eax,%eax
    b6c6:	test   %rdi,%rdi
    b6c9:	jne    b6cd <png_get_pixels_per_meter+0xd>
    b6cb:	leaveq 
    b6cc:	retq   
    b6cd:	test   %rsi,%rsi
    b6d0:	jne    b6d4 <png_get_pixels_per_meter+0x14>
    b6d2:	leaveq 
    b6d3:	retq   
    b6d4:	mov    0x8(%rsi),%ecx
    b6d7:	and    $0x80,%ecx
    b6dd:	test   %ecx,%ecx
    b6df:	jne    b6e3 <png_get_pixels_per_meter+0x23>
    b6e1:	leaveq 
    b6e2:	retq   
    b6e3:	movzbl 0xe8(%rsi),%ecx
    b6ea:	cmp    $0x1,%cl
    b6ed:	je     b6f1 <png_get_pixels_per_meter+0x31>
    b6ef:	leaveq 
    b6f0:	retq   
    b6f1:	mov    0xe0(%rsi),%ecx
    b6f7:	mov    0xe4(%rsi),%edx
    b6fd:	cmp    %ecx,%edx
    b6ff:	jne    b706 <png_get_pixels_per_meter+0x46>
    b701:	mov    %rcx,%rax
    b704:	leaveq 
    b705:	retq   
    b706:	leaveq 
    b707:	retq   
    b708:	nopl   0x0(%rax,%rax,1)

000000000000b710 <png_get_x_pixels_per_meter>:
    b710:	push   %rbp
    b711:	mov    %rsp,%rbp
    b714:	xor    %eax,%eax
    b716:	test   %rdi,%rdi
    b719:	jne    b71d <png_get_x_pixels_per_meter+0xd>
    b71b:	leaveq 
    b71c:	retq   
    b71d:	test   %rsi,%rsi
    b720:	jne    b724 <png_get_x_pixels_per_meter+0x14>
    b722:	leaveq 
    b723:	retq   
    b724:	mov    0x8(%rsi),%ecx
    b727:	and    $0x80,%ecx
    b72d:	test   %ecx,%ecx
    b72f:	jne    b733 <png_get_x_pixels_per_meter+0x23>
    b731:	leaveq 
    b732:	retq   
    b733:	movzbl 0xe8(%rsi),%ecx
    b73a:	cmp    $0x1,%cl
    b73d:	je     b741 <png_get_x_pixels_per_meter+0x31>
    b73f:	leaveq 
    b740:	retq   
    b741:	mov    0xe0(%rsi),%eax
    b747:	leaveq 
    b748:	retq   
    b749:	nopl   0x0(%rax)

000000000000b750 <png_get_y_pixels_per_meter>:
    b750:	push   %rbp
    b751:	mov    %rsp,%rbp
    b754:	xor    %eax,%eax
    b756:	test   %rdi,%rdi
    b759:	jne    b75d <png_get_y_pixels_per_meter+0xd>
    b75b:	leaveq 
    b75c:	retq   
    b75d:	test   %rsi,%rsi
    b760:	jne    b764 <png_get_y_pixels_per_meter+0x14>
    b762:	leaveq 
    b763:	retq   
    b764:	mov    0x8(%rsi),%ecx
    b767:	and    $0x80,%ecx
    b76d:	test   %ecx,%ecx
    b76f:	jne    b773 <png_get_y_pixels_per_meter+0x23>
    b771:	leaveq 
    b772:	retq   
    b773:	movzbl 0xe8(%rsi),%ecx
    b77a:	cmp    $0x1,%cl
    b77d:	je     b781 <png_get_y_pixels_per_meter+0x31>
    b77f:	leaveq 
    b780:	retq   
    b781:	mov    0xe4(%rsi),%eax
    b787:	leaveq 
    b788:	retq   
    b789:	nopl   0x0(%rax)

000000000000b790 <png_get_pixel_aspect_ratio>:
    b790:	push   %rbp
    b791:	mov    %rsp,%rbp
    b794:	xorpd  %xmm0,%xmm0
    b798:	test   %rdi,%rdi
    b79b:	jne    b79f <png_get_pixel_aspect_ratio+0xf>
    b79d:	leaveq 
    b79e:	retq   
    b79f:	test   %rsi,%rsi
    b7a2:	jne    b7a6 <png_get_pixel_aspect_ratio+0x16>
    b7a4:	leaveq 
    b7a5:	retq   
    b7a6:	mov    0x8(%rsi),%eax
    b7a9:	and    $0x80,%eax
    b7ae:	test   %eax,%eax
    b7b0:	jne    b7b4 <png_get_pixel_aspect_ratio+0x24>
    b7b2:	leaveq 
    b7b3:	retq   
    b7b4:	mov    0xe0(%rsi),%eax
    b7ba:	test   %eax,%eax
    b7bc:	jne    b7c0 <png_get_pixel_aspect_ratio+0x30>
    b7be:	leaveq 
    b7bf:	retq   
    b7c0:	mov    0xe4(%rsi),%ecx
    b7c6:	mov    %ecx,%ecx
    b7c8:	cvtsi2ss %rcx,%xmm0
    b7cd:	mov    %eax,%eax
    b7cf:	cvtsi2ss %rax,%xmm1
    b7d4:	divss  %xmm1,%xmm0
    b7d8:	leaveq 
    b7d9:	retq   
    b7da:	nopw   0x0(%rax,%rax,1)

000000000000b7e0 <png_get_pixel_aspect_ratio_fixed>:
    b7e0:	push   %rbp
    b7e1:	mov    %rsp,%rbp
    b7e4:	sub    $0x10,%rsp
    b7e8:	xor    %eax,%eax
    b7ea:	test   %rdi,%rdi
    b7ed:	jne    b7f1 <png_get_pixel_aspect_ratio_fixed+0x11>
    b7ef:	leaveq 
    b7f0:	retq   
    b7f1:	test   %rsi,%rsi
    b7f4:	jne    b7f8 <png_get_pixel_aspect_ratio_fixed+0x18>
    b7f6:	leaveq 
    b7f7:	retq   
    b7f8:	mov    0x8(%rsi),%ecx
    b7fb:	and    $0x80,%ecx
    b801:	test   %ecx,%ecx
    b803:	jne    b807 <png_get_pixel_aspect_ratio_fixed+0x27>
    b805:	leaveq 
    b806:	retq   
    b807:	mov    0xe0(%rsi),%ecx
    b80d:	test   %ecx,%ecx
    b80f:	jne    b813 <png_get_pixel_aspect_ratio_fixed+0x33>
    b811:	leaveq 
    b812:	retq   
    b813:	mov    0xe4(%rsi),%esi
    b819:	test   %esi,%esi
    b81b:	jne    b81f <png_get_pixel_aspect_ratio_fixed+0x3f>
    b81d:	leaveq 
    b81e:	retq   
    b81f:	cmp    $0x7fffffff,%ecx
    b825:	jbe    b829 <png_get_pixel_aspect_ratio_fixed+0x49>
    b827:	leaveq 
    b828:	retq   
    b829:	cmp    $0x7fffffff,%esi
    b82f:	jbe    b833 <png_get_pixel_aspect_ratio_fixed+0x53>
    b831:	leaveq 
    b832:	retq   
    b833:	lea    -0x4(%rbp),%rdi
    b837:	mov    $0x186a0,%edx
    b83c:	callq  8970 <png_muldiv>
    b841:	test   %eax,%eax
    b843:	jne    b849 <png_get_pixel_aspect_ratio_fixed+0x69>
    b845:	xor    %eax,%eax
    b847:	leaveq 
    b848:	retq   
    b849:	movslq -0x4(%rbp),%rax
    b84d:	leaveq 
    b84e:	retq   
    b84f:	nop

000000000000b850 <png_get_x_offset_pixels>:
    b850:	push   %rbp
    b851:	mov    %rsp,%rbp
    b854:	xor    %eax,%eax
    b856:	test   %rdi,%rdi
    b859:	jne    b85d <png_get_x_offset_pixels+0xd>
    b85b:	leaveq 
    b85c:	retq   
    b85d:	test   %rsi,%rsi
    b860:	jne    b864 <png_get_x_offset_pixels+0x14>
    b862:	leaveq 
    b863:	retq   
    b864:	mov    0x8(%rsi),%ecx
    b867:	and    $0x100,%ecx
    b86d:	test   %ecx,%ecx
    b86f:	jne    b873 <png_get_x_offset_pixels+0x23>
    b871:	leaveq 
    b872:	retq   
    b873:	movzbl 0xdc(%rsi),%ecx
    b87a:	test   %cl,%cl
    b87c:	je     b880 <png_get_x_offset_pixels+0x30>
    b87e:	leaveq 
    b87f:	retq   
    b880:	movslq 0xd4(%rsi),%rax
    b887:	leaveq 
    b888:	retq   
    b889:	nopl   0x0(%rax)

000000000000b890 <png_get_y_offset_pixels>:
    b890:	push   %rbp
    b891:	mov    %rsp,%rbp
    b894:	xor    %eax,%eax
    b896:	test   %rdi,%rdi
    b899:	jne    b89d <png_get_y_offset_pixels+0xd>
    b89b:	leaveq 
    b89c:	retq   
    b89d:	test   %rsi,%rsi
    b8a0:	jne    b8a4 <png_get_y_offset_pixels+0x14>
    b8a2:	leaveq 
    b8a3:	retq   
    b8a4:	mov    0x8(%rsi),%ecx
    b8a7:	and    $0x100,%ecx
    b8ad:	test   %ecx,%ecx
    b8af:	jne    b8b3 <png_get_y_offset_pixels+0x23>
    b8b1:	leaveq 
    b8b2:	retq   
    b8b3:	movzbl 0xdc(%rsi),%ecx
    b8ba:	test   %cl,%cl
    b8bc:	je     b8c0 <png_get_y_offset_pixels+0x30>
    b8be:	leaveq 
    b8bf:	retq   
    b8c0:	movslq 0xd8(%rsi),%rax
    b8c7:	leaveq 
    b8c8:	retq   
    b8c9:	nopl   0x0(%rax)

000000000000b8d0 <png_get_x_offset_microns>:
    b8d0:	push   %rbp
    b8d1:	mov    %rsp,%rbp
    b8d4:	xor    %eax,%eax
    b8d6:	test   %rdi,%rdi
    b8d9:	jne    b8dd <png_get_x_offset_microns+0xd>
    b8db:	leaveq 
    b8dc:	retq   
    b8dd:	test   %rsi,%rsi
    b8e0:	jne    b8e4 <png_get_x_offset_microns+0x14>
    b8e2:	leaveq 
    b8e3:	retq   
    b8e4:	mov    0x8(%rsi),%ecx
    b8e7:	and    $0x100,%ecx
    b8ed:	test   %ecx,%ecx
    b8ef:	jne    b8f3 <png_get_x_offset_microns+0x23>
    b8f1:	leaveq 
    b8f2:	retq   
    b8f3:	movzbl 0xdc(%rsi),%ecx
    b8fa:	cmp    $0x1,%cl
    b8fd:	je     b901 <png_get_x_offset_microns+0x31>
    b8ff:	leaveq 
    b900:	retq   
    b901:	movslq 0xd4(%rsi),%rax
    b908:	leaveq 
    b909:	retq   
    b90a:	nopw   0x0(%rax,%rax,1)

000000000000b910 <png_get_y_offset_microns>:
    b910:	push   %rbp
    b911:	mov    %rsp,%rbp
    b914:	xor    %eax,%eax
    b916:	test   %rdi,%rdi
    b919:	jne    b91d <png_get_y_offset_microns+0xd>
    b91b:	leaveq 
    b91c:	retq   
    b91d:	test   %rsi,%rsi
    b920:	jne    b924 <png_get_y_offset_microns+0x14>
    b922:	leaveq 
    b923:	retq   
    b924:	mov    0x8(%rsi),%ecx
    b927:	and    $0x100,%ecx
    b92d:	test   %ecx,%ecx
    b92f:	jne    b933 <png_get_y_offset_microns+0x23>
    b931:	leaveq 
    b932:	retq   
    b933:	movzbl 0xdc(%rsi),%ecx
    b93a:	cmp    $0x1,%cl
    b93d:	je     b941 <png_get_y_offset_microns+0x31>
    b93f:	leaveq 
    b940:	retq   
    b941:	movslq 0xd8(%rsi),%rax
    b948:	leaveq 
    b949:	retq   
    b94a:	nopw   0x0(%rax,%rax,1)

000000000000b950 <png_get_signature>:
    b950:	push   %rbp
    b951:	mov    %rsp,%rbp
    b954:	xor    %eax,%eax
    b956:	test   %rdi,%rdi
    b959:	jne    b95d <png_get_signature+0xd>
    b95b:	leaveq 
    b95c:	retq   
    b95d:	test   %rsi,%rsi
    b960:	jne    b964 <png_get_signature+0x14>
    b962:	leaveq 
    b963:	retq   
    b964:	lea    0x2c(%rsi),%rax
    b968:	leaveq 
    b969:	retq   
    b96a:	nopw   0x0(%rax,%rax,1)

000000000000b970 <png_get_bKGD>:
    b970:	push   %rbp
    b971:	mov    %rsp,%rbp
    b974:	xor    %eax,%eax
    b976:	test   %rdi,%rdi
    b979:	jne    b97d <png_get_bKGD+0xd>
    b97b:	leaveq 
    b97c:	retq   
    b97d:	test   %rsi,%rsi
    b980:	jne    b984 <png_get_bKGD+0x14>
    b982:	leaveq 
    b983:	retq   
    b984:	mov    0x8(%rsi),%ecx
    b987:	and    $0x20,%ecx
    b98a:	test   %ecx,%ecx
    b98c:	jne    b990 <png_get_bKGD+0x20>
    b98e:	leaveq 
    b98f:	retq   
    b990:	test   %rdx,%rdx
    b993:	jne    b997 <png_get_bKGD+0x27>
    b995:	leaveq 
    b996:	retq   
    b997:	lea    0xca(%rsi),%rax
    b99e:	mov    %rax,(%rdx)
    b9a1:	mov    $0x20,%eax
    b9a6:	leaveq 
    b9a7:	retq   
    b9a8:	nopl   0x0(%rax,%rax,1)

000000000000b9b0 <png_get_cHRM>:
    b9b0:	push   %rbp
    b9b1:	mov    %rsp,%rbp
    b9b4:	xor    %eax,%eax
    b9b6:	test   %rdi,%rdi
    b9b9:	jne    b9bd <png_get_cHRM+0xd>
    b9bb:	leaveq 
    b9bc:	retq   
    b9bd:	test   %rsi,%rsi
    b9c0:	jne    b9c4 <png_get_cHRM+0x14>
    b9c2:	leaveq 
    b9c3:	retq   
    b9c4:	movzwl 0x7e(%rsi),%edi
    b9c8:	and    $0x2,%edi
    b9cb:	test   %edi,%edi
    b9cd:	jg     b9d1 <png_get_cHRM+0x21>
    b9cf:	leaveq 
    b9d0:	retq   
    b9d1:	movsd  0x21c0f(%rip),%xmm1        # 2d5e8 <valid_parameters.6+0x92>
    b9d9:	test   %rdx,%rdx
    b9dc:	je     b9ee <png_get_cHRM+0x3e>
    b9de:	movslq 0x50(%rsi),%rax
    b9e2:	cvtsi2sd %eax,%xmm0
    b9e6:	mulsd  %xmm1,%xmm0
    b9ea:	movsd  %xmm0,(%rdx)
    b9ee:	test   %rcx,%rcx
    b9f1:	je     ba03 <png_get_cHRM+0x53>
    b9f3:	movslq 0x54(%rsi),%rax
    b9f7:	cvtsi2sd %eax,%xmm0
    b9fb:	mulsd  %xmm1,%xmm0
    b9ff:	movsd  %xmm0,(%rcx)
    ba03:	test   %r8,%r8
    ba06:	je     ba19 <png_get_cHRM+0x69>
    ba08:	movslq 0x38(%rsi),%rax
    ba0c:	cvtsi2sd %eax,%xmm0
    ba10:	mulsd  %xmm1,%xmm0
    ba14:	movsd  %xmm0,(%r8)
    ba19:	test   %r9,%r9
    ba1c:	je     ba2f <png_get_cHRM+0x7f>
    ba1e:	movslq 0x3c(%rsi),%rax
    ba22:	cvtsi2sd %eax,%xmm0
    ba26:	mulsd  %xmm1,%xmm0
    ba2a:	movsd  %xmm0,(%r9)
    ba2f:	mov    0x10(%rbp),%rax
    ba33:	test   %rax,%rax
    ba36:	je     ba48 <png_get_cHRM+0x98>
    ba38:	movslq 0x40(%rsi),%rcx
    ba3c:	cvtsi2sd %ecx,%xmm0
    ba40:	mulsd  %xmm1,%xmm0
    ba44:	movsd  %xmm0,(%rax)
    ba48:	mov    0x18(%rbp),%rax
    ba4c:	test   %rax,%rax
    ba4f:	je     ba61 <png_get_cHRM+0xb1>
    ba51:	movslq 0x44(%rsi),%rcx
    ba55:	cvtsi2sd %ecx,%xmm0
    ba59:	mulsd  %xmm1,%xmm0
    ba5d:	movsd  %xmm0,(%rax)
    ba61:	mov    0x20(%rbp),%rax
    ba65:	test   %rax,%rax
    ba68:	je     ba7a <png_get_cHRM+0xca>
    ba6a:	movslq 0x48(%rsi),%rcx
    ba6e:	cvtsi2sd %ecx,%xmm0
    ba72:	mulsd  %xmm1,%xmm0
    ba76:	movsd  %xmm0,(%rax)
    ba7a:	mov    $0x4,%eax
    ba7f:	mov    0x28(%rbp),%rcx
    ba83:	test   %rcx,%rcx
    ba86:	jne    ba8a <png_get_cHRM+0xda>
    ba88:	leaveq 
    ba89:	retq   
    ba8a:	movslq 0x4c(%rsi),%rdx
    ba8e:	cvtsi2sd %edx,%xmm0
    ba92:	mulsd  %xmm1,%xmm0
    ba96:	movsd  %xmm0,(%rcx)
    ba9a:	leaveq 
    ba9b:	retq   
    ba9c:	nopl   0x0(%rax)

000000000000baa0 <png_get_cHRM_XYZ>:
    baa0:	push   %rbp
    baa1:	mov    %rsp,%rbp
    baa4:	xor    %eax,%eax
    baa6:	test   %rdi,%rdi
    baa9:	jne    baad <png_get_cHRM_XYZ+0xd>
    baab:	leaveq 
    baac:	retq   
    baad:	test   %rsi,%rsi
    bab0:	jne    bab4 <png_get_cHRM_XYZ+0x14>
    bab2:	leaveq 
    bab3:	retq   
    bab4:	movzwl 0x7e(%rsi),%edi
    bab8:	and    $0x2,%edi
    babb:	test   %edi,%edi
    babd:	jg     bac1 <png_get_cHRM_XYZ+0x21>
    babf:	leaveq 
    bac0:	retq   
    bac1:	movsd  0x21b1f(%rip),%xmm1        # 2d5e8 <valid_parameters.6+0x92>
    bac9:	test   %rdx,%rdx
    bacc:	je     bade <png_get_cHRM_XYZ+0x3e>
    bace:	movslq 0x58(%rsi),%rax
    bad2:	cvtsi2sd %eax,%xmm0
    bad6:	mulsd  %xmm1,%xmm0
    bada:	movsd  %xmm0,(%rdx)
    bade:	test   %rcx,%rcx
    bae1:	je     baf3 <png_get_cHRM_XYZ+0x53>
    bae3:	movslq 0x5c(%rsi),%rax
    bae7:	cvtsi2sd %eax,%xmm0
    baeb:	mulsd  %xmm1,%xmm0
    baef:	movsd  %xmm0,(%rcx)
    baf3:	test   %r8,%r8
    baf6:	je     bb09 <png_get_cHRM_XYZ+0x69>
    baf8:	movslq 0x60(%rsi),%rax
    bafc:	cvtsi2sd %eax,%xmm0
    bb00:	mulsd  %xmm1,%xmm0
    bb04:	movsd  %xmm0,(%r8)
    bb09:	test   %r9,%r9
    bb0c:	je     bb1f <png_get_cHRM_XYZ+0x7f>
    bb0e:	movslq 0x64(%rsi),%rax
    bb12:	cvtsi2sd %eax,%xmm0
    bb16:	mulsd  %xmm1,%xmm0
    bb1a:	movsd  %xmm0,(%r9)
    bb1f:	mov    0x10(%rbp),%rax
    bb23:	test   %rax,%rax
    bb26:	je     bb38 <png_get_cHRM_XYZ+0x98>
    bb28:	movslq 0x68(%rsi),%rcx
    bb2c:	cvtsi2sd %ecx,%xmm0
    bb30:	mulsd  %xmm1,%xmm0
    bb34:	movsd  %xmm0,(%rax)
    bb38:	mov    0x18(%rbp),%rax
    bb3c:	test   %rax,%rax
    bb3f:	je     bb51 <png_get_cHRM_XYZ+0xb1>
    bb41:	movslq 0x6c(%rsi),%rcx
    bb45:	cvtsi2sd %ecx,%xmm0
    bb49:	mulsd  %xmm1,%xmm0
    bb4d:	movsd  %xmm0,(%rax)
    bb51:	mov    0x20(%rbp),%rax
    bb55:	test   %rax,%rax
    bb58:	je     bb6a <png_get_cHRM_XYZ+0xca>
    bb5a:	movslq 0x70(%rsi),%rcx
    bb5e:	cvtsi2sd %ecx,%xmm0
    bb62:	mulsd  %xmm1,%xmm0
    bb66:	movsd  %xmm0,(%rax)
    bb6a:	mov    0x28(%rbp),%rax
    bb6e:	test   %rax,%rax
    bb71:	je     bb83 <png_get_cHRM_XYZ+0xe3>
    bb73:	movslq 0x74(%rsi),%rcx
    bb77:	cvtsi2sd %ecx,%xmm0
    bb7b:	mulsd  %xmm1,%xmm0
    bb7f:	movsd  %xmm0,(%rax)
    bb83:	mov    $0x4,%eax
    bb88:	mov    0x30(%rbp),%rcx
    bb8c:	test   %rcx,%rcx
    bb8f:	jne    bb93 <png_get_cHRM_XYZ+0xf3>
    bb91:	leaveq 
    bb92:	retq   
    bb93:	movslq 0x78(%rsi),%rdx
    bb97:	cvtsi2sd %edx,%xmm0
    bb9b:	mulsd  %xmm1,%xmm0
    bb9f:	movsd  %xmm0,(%rcx)
    bba3:	leaveq 
    bba4:	retq   
    bba5:	data16 nopw %cs:0x0(%rax,%rax,1)

000000000000bbb0 <png_get_cHRM_fixed>:
    bbb0:	push   %rbp
    bbb1:	mov    %rsp,%rbp
    bbb4:	xor    %eax,%eax
    bbb6:	test   %rdi,%rdi
    bbb9:	jne    bbbd <png_get_cHRM_fixed+0xd>
    bbbb:	leaveq 
    bbbc:	retq   
    bbbd:	test   %rsi,%rsi
    bbc0:	jne    bbc4 <png_get_cHRM_fixed+0x14>
    bbc2:	leaveq 
    bbc3:	retq   
    bbc4:	movzwl 0x7e(%rsi),%edi
    bbc8:	and    $0x2,%edi
    bbcb:	test   %edi,%edi
    bbcd:	jg     bbd1 <png_get_cHRM_fixed+0x21>
    bbcf:	leaveq 
    bbd0:	retq   
    bbd1:	test   %rdx,%rdx
    bbd4:	je     bbdc <png_get_cHRM_fixed+0x2c>
    bbd6:	movslq 0x50(%rsi),%rax
    bbda:	mov    %eax,(%rdx)
    bbdc:	test   %rcx,%rcx
    bbdf:	je     bbe7 <png_get_cHRM_fixed+0x37>
    bbe1:	movslq 0x54(%rsi),%rax
    bbe5:	mov    %eax,(%rcx)
    bbe7:	test   %r8,%r8
    bbea:	je     bbf3 <png_get_cHRM_fixed+0x43>
    bbec:	movslq 0x38(%rsi),%rax
    bbf0:	mov    %eax,(%r8)
    bbf3:	test   %r9,%r9
    bbf6:	je     bbff <png_get_cHRM_fixed+0x4f>
    bbf8:	movslq 0x3c(%rsi),%rax
    bbfc:	mov    %eax,(%r9)
    bbff:	mov    0x10(%rbp),%rax
    bc03:	test   %rax,%rax
    bc06:	je     bc0e <png_get_cHRM_fixed+0x5e>
    bc08:	movslq 0x40(%rsi),%rcx
    bc0c:	mov    %ecx,(%rax)
    bc0e:	mov    0x18(%rbp),%rax
    bc12:	test   %rax,%rax
    bc15:	je     bc1d <png_get_cHRM_fixed+0x6d>
    bc17:	movslq 0x44(%rsi),%rcx
    bc1b:	mov    %ecx,(%rax)
    bc1d:	mov    0x20(%rbp),%rax
    bc21:	test   %rax,%rax
    bc24:	je     bc2c <png_get_cHRM_fixed+0x7c>
    bc26:	movslq 0x48(%rsi),%rcx
    bc2a:	mov    %ecx,(%rax)
    bc2c:	mov    $0x4,%eax
    bc31:	mov    0x28(%rbp),%rcx
    bc35:	test   %rcx,%rcx
    bc38:	jne    bc3c <png_get_cHRM_fixed+0x8c>
    bc3a:	leaveq 
    bc3b:	retq   
    bc3c:	movslq 0x4c(%rsi),%rdx
    bc40:	mov    %edx,(%rcx)
    bc42:	leaveq 
    bc43:	retq   
    bc44:	data16 nopw %cs:0x0(%rax,%rax,1)
    bc4f:	nop

000000000000bc50 <png_get_cHRM_XYZ_fixed>:
    bc50:	push   %rbp
    bc51:	mov    %rsp,%rbp
    bc54:	xor    %eax,%eax
    bc56:	test   %rdi,%rdi
    bc59:	jne    bc5d <png_get_cHRM_XYZ_fixed+0xd>
    bc5b:	leaveq 
    bc5c:	retq   
    bc5d:	test   %rsi,%rsi
    bc60:	jne    bc64 <png_get_cHRM_XYZ_fixed+0x14>
    bc62:	leaveq 
    bc63:	retq   
    bc64:	movzwl 0x7e(%rsi),%edi
    bc68:	and    $0x2,%edi
    bc6b:	test   %edi,%edi
    bc6d:	jg     bc71 <png_get_cHRM_XYZ_fixed+0x21>
    bc6f:	leaveq 
    bc70:	retq   
    bc71:	test   %rdx,%rdx
    bc74:	je     bc7c <png_get_cHRM_XYZ_fixed+0x2c>
    bc76:	movslq 0x58(%rsi),%rax
    bc7a:	mov    %eax,(%rdx)
    bc7c:	test   %rcx,%rcx
    bc7f:	je     bc87 <png_get_cHRM_XYZ_fixed+0x37>
    bc81:	movslq 0x5c(%rsi),%rax
    bc85:	mov    %eax,(%rcx)
    bc87:	test   %r8,%r8
    bc8a:	je     bc93 <png_get_cHRM_XYZ_fixed+0x43>
    bc8c:	movslq 0x60(%rsi),%rax
    bc90:	mov    %eax,(%r8)
    bc93:	test   %r9,%r9
    bc96:	je     bc9f <png_get_cHRM_XYZ_fixed+0x4f>
    bc98:	movslq 0x64(%rsi),%rax
    bc9c:	mov    %eax,(%r9)
    bc9f:	mov    0x10(%rbp),%rax
    bca3:	test   %rax,%rax
    bca6:	je     bcae <png_get_cHRM_XYZ_fixed+0x5e>
    bca8:	movslq 0x68(%rsi),%rcx
    bcac:	mov    %ecx,(%rax)
    bcae:	mov    0x18(%rbp),%rax
    bcb2:	test   %rax,%rax
    bcb5:	je     bcbd <png_get_cHRM_XYZ_fixed+0x6d>
    bcb7:	movslq 0x6c(%rsi),%rcx
    bcbb:	mov    %ecx,(%rax)
    bcbd:	mov    0x20(%rbp),%rax
    bcc1:	test   %rax,%rax
    bcc4:	je     bccc <png_get_cHRM_XYZ_fixed+0x7c>
    bcc6:	movslq 0x70(%rsi),%rcx
    bcca:	mov    %ecx,(%rax)
    bccc:	mov    0x28(%rbp),%rax
    bcd0:	test   %rax,%rax
    bcd3:	je     bcdb <png_get_cHRM_XYZ_fixed+0x8b>
    bcd5:	movslq 0x74(%rsi),%rcx
    bcd9:	mov    %ecx,(%rax)
    bcdb:	mov    $0x4,%eax
    bce0:	mov    0x30(%rbp),%rcx
    bce4:	test   %rcx,%rcx
    bce7:	jne    bceb <png_get_cHRM_XYZ_fixed+0x9b>
    bce9:	leaveq 
    bcea:	retq   
    bceb:	movslq 0x78(%rsi),%rdx
    bcef:	mov    %edx,(%rcx)
    bcf1:	leaveq 
    bcf2:	retq   
    bcf3:	data16 nopw %cs:0x0(%rax,%rax,1)
    bcfe:	xchg   %ax,%ax

000000000000bd00 <png_get_eXIf>:
    bd00:	push   %rbp
    bd01:	mov    %rsp,%rbp
    bd04:	lea    0x21895(%rip),%rsi        # 2d5a0 <valid_parameters.6+0x4a>
    bd0b:	callq  5390 <png_warning@plt>
    bd10:	xor    %eax,%eax
    bd12:	leaveq 
    bd13:	retq   
    bd14:	data16 nopw %cs:0x0(%rax,%rax,1)
    bd1f:	nop

000000000000bd20 <png_get_eXIf_1>:
    bd20:	push   %rbp
    bd21:	mov    %rsp,%rbp
    bd24:	xor    %eax,%eax
    bd26:	test   %rdi,%rdi
    bd29:	jne    bd2d <png_get_eXIf_1+0xd>
    bd2b:	leaveq 
    bd2c:	retq   
    bd2d:	test   %rsi,%rsi
    bd30:	jne    bd34 <png_get_eXIf_1+0x14>
    bd32:	leaveq 
    bd33:	retq   
    bd34:	mov    0x8(%rsi),%edi
    bd37:	and    $0x10000,%edi
    bd3d:	test   %edi,%edi
    bd3f:	jne    bd43 <png_get_eXIf_1+0x23>
    bd41:	leaveq 
    bd42:	retq   
    bd43:	test   %rcx,%rcx
    bd46:	jne    bd4a <png_get_eXIf_1+0x2a>
    bd48:	leaveq 
    bd49:	retq   
    bd4a:	mov    0xec(%rsi),%eax
    bd50:	mov    %eax,(%rdx)
    bd52:	mov    0xf0(%rsi),%rax
    bd59:	mov    %rax,(%rcx)
    bd5c:	mov    $0x10000,%eax
    bd61:	leaveq 
    bd62:	retq   
    bd63:	data16 nopw %cs:0x0(%rax,%rax,1)
    bd6e:	xchg   %ax,%ax

000000000000bd70 <png_get_gAMA>:
    bd70:	push   %rbp
    bd71:	mov    %rsp,%rbp
    bd74:	xor    %eax,%eax
    bd76:	test   %rdi,%rdi
    bd79:	jne    bd7d <png_get_gAMA+0xd>
    bd7b:	leaveq 
    bd7c:	retq   
    bd7d:	test   %rsi,%rsi
    bd80:	jne    bd84 <png_get_gAMA+0x14>
    bd82:	leaveq 
    bd83:	retq   
    bd84:	movzwl 0x7e(%rsi),%ecx
    bd88:	and    $0x1,%ecx
    bd8b:	test   %ecx,%ecx
    bd8d:	jg     bd91 <png_get_gAMA+0x21>
    bd8f:	leaveq 
    bd90:	retq   
    bd91:	test   %rdx,%rdx
    bd94:	jne    bd98 <png_get_gAMA+0x28>
    bd96:	leaveq 
    bd97:	retq   
    bd98:	movslq 0x34(%rsi),%rax
    bd9c:	cvtsi2sd %eax,%xmm0
    bda0:	movsd  0x21840(%rip),%xmm1        # 2d5e8 <valid_parameters.6+0x92>
    bda8:	mulsd  %xmm1,%xmm0
    bdac:	movsd  %xmm0,(%rdx)
    bdb0:	mov    $0x1,%eax
    bdb5:	leaveq 
    bdb6:	retq   
    bdb7:	nopw   0x0(%rax,%rax,1)

000000000000bdc0 <png_get_gAMA_fixed>:
    bdc0:	push   %rbp
    bdc1:	mov    %rsp,%rbp
    bdc4:	xor    %eax,%eax
    bdc6:	test   %rdi,%rdi
    bdc9:	jne    bdcd <png_get_gAMA_fixed+0xd>
    bdcb:	leaveq 
    bdcc:	retq   
    bdcd:	test   %rsi,%rsi
    bdd0:	jne    bdd4 <png_get_gAMA_fixed+0x14>
    bdd2:	leaveq 
    bdd3:	retq   
    bdd4:	movzwl 0x7e(%rsi),%ecx
    bdd8:	and    $0x1,%ecx
    bddb:	test   %ecx,%ecx
    bddd:	jg     bde1 <png_get_gAMA_fixed+0x21>
    bddf:	leaveq 
    bde0:	retq   
    bde1:	test   %rdx,%rdx
    bde4:	jne    bde8 <png_get_gAMA_fixed+0x28>
    bde6:	leaveq 
    bde7:	retq   
    bde8:	movslq 0x34(%rsi),%rax
    bdec:	mov    %eax,(%rdx)
    bdee:	mov    $0x1,%eax
    bdf3:	leaveq 
    bdf4:	retq   
    bdf5:	data16 nopw %cs:0x0(%rax,%rax,1)

000000000000be00 <png_get_hIST>:
    be00:	push   %rbp
    be01:	mov    %rsp,%rbp
    be04:	xor    %eax,%eax
    be06:	test   %rdi,%rdi
    be09:	jne    be0d <png_get_hIST+0xd>
    be0b:	leaveq 
    be0c:	retq   
    be0d:	test   %rsi,%rsi
    be10:	jne    be14 <png_get_hIST+0x14>
    be12:	leaveq 
    be13:	retq   
    be14:	mov    0x8(%rsi),%ecx
    be17:	and    $0x40,%ecx
    be1a:	test   %ecx,%ecx
    be1c:	jne    be20 <png_get_hIST+0x20>
    be1e:	leaveq 
    be1f:	retq   
    be20:	test   %rdx,%rdx
    be23:	jne    be27 <png_get_hIST+0x27>
    be25:	leaveq 
    be26:	retq   
    be27:	mov    0x100(%rsi),%rax
    be2e:	mov    %rax,(%rdx)
    be31:	mov    $0x40,%eax
    be36:	leaveq 
    be37:	retq   
    be38:	nopl   0x0(%rax,%rax,1)

000000000000be40 <png_get_IHDR>:
    be40:	push   %rbp
    be41:	mov    %rsp,%rbp
    be44:	sub    $0x10,%rsp
    be48:	xor    %eax,%eax
    be4a:	test   %rdi,%rdi
    be4d:	jne    be51 <png_get_IHDR+0x11>
    be4f:	leaveq 
    be50:	retq   
    be51:	test   %rsi,%rsi
    be54:	jne    be58 <png_get_IHDR+0x18>
    be56:	leaveq 
    be57:	retq   
    be58:	test   %rdx,%rdx
    be5b:	je     be61 <png_get_IHDR+0x21>
    be5d:	mov    (%rsi),%eax
    be5f:	mov    %eax,(%rdx)
    be61:	test   %rcx,%rcx
    be64:	je     be6b <png_get_IHDR+0x2b>
    be66:	mov    0x4(%rsi),%eax
    be69:	mov    %eax,(%rcx)
    be6b:	test   %r8,%r8
    be6e:	je     be77 <png_get_IHDR+0x37>
    be70:	movzbl 0x24(%rsi),%eax
    be74:	mov    %eax,(%r8)
    be77:	test   %r9,%r9
    be7a:	je     be83 <png_get_IHDR+0x43>
    be7c:	movzbl 0x25(%rsi),%eax
    be80:	mov    %eax,(%r9)
    be83:	mov    0x18(%rbp),%rax
    be87:	test   %rax,%rax
    be8a:	je     be92 <png_get_IHDR+0x52>
    be8c:	movzbl 0x26(%rsi),%ecx
    be90:	mov    %ecx,(%rax)
    be92:	mov    0x20(%rbp),%rax
    be96:	test   %rax,%rax
    be99:	je     bea1 <png_get_IHDR+0x61>
    be9b:	movzbl 0x27(%rsi),%ecx
    be9f:	mov    %ecx,(%rax)
    bea1:	mov    0x10(%rbp),%rax
    bea5:	test   %rax,%rax
    bea8:	je     beb0 <png_get_IHDR+0x70>
    beaa:	movzbl 0x28(%rsi),%ecx
    beae:	mov    %ecx,(%rax)
    beb0:	movzbl 0x26(%rsi),%r10d
    beb5:	movzbl 0x27(%rsi),%eax
    beb9:	mov    (%rsi),%r11d
    bebc:	mov    0x4(%rsi),%edx
    bebf:	movzbl 0x24(%rsi),%ecx
    bec3:	movzbl 0x25(%rsi),%r8d
    bec8:	movzbl 0x28(%rsi),%r9d
    becd:	mov    %r10d,(%rsp)
    bed1:	mov    %eax,0x8(%rsp)
    bed5:	mov    %r11,%rsi
    bed8:	callq  7d80 <png_check_IHDR>
    bedd:	mov    $0x1,%eax
    bee2:	leaveq 
    bee3:	retq   
    bee4:	data16 nopw %cs:0x0(%rax,%rax,1)
    beef:	nop

000000000000bef0 <png_get_oFFs>:
    bef0:	push   %rbp
    bef1:	mov    %rsp,%rbp
    bef4:	xor    %eax,%eax
    bef6:	test   %rdi,%rdi
    bef9:	jne    befd <png_get_oFFs+0xd>
    befb:	leaveq 
    befc:	retq   
    befd:	test   %rsi,%rsi
    bf00:	jne    bf04 <png_get_oFFs+0x14>
    bf02:	leaveq 
    bf03:	retq   
    bf04:	mov    0x8(%rsi),%edi
    bf07:	and    $0x100,%edi
    bf0d:	test   %edi,%edi
    bf0f:	jne    bf13 <png_get_oFFs+0x23>
    bf11:	leaveq 
    bf12:	retq   
    bf13:	test   %rdx,%rdx
    bf16:	jne    bf1a <png_get_oFFs+0x2a>
    bf18:	leaveq 
    bf19:	retq   
    bf1a:	test   %rcx,%rcx
    bf1d:	jne    bf21 <png_get_oFFs+0x31>
    bf1f:	leaveq 
    bf20:	retq   
    bf21:	test   %r8,%r8
    bf24:	jne    bf28 <png_get_oFFs+0x38>
    bf26:	leaveq 
    bf27:	retq   
    bf28:	movslq 0xd4(%rsi),%rax
    bf2f:	mov    %eax,(%rdx)
    bf31:	movslq 0xd8(%rsi),%rax
    bf38:	mov    %eax,(%rcx)
    bf3a:	movzbl 0xdc(%rsi),%eax
    bf41:	mov    %eax,(%r8)
    bf44:	mov    $0x100,%eax
    bf49:	leaveq 
    bf4a:	retq   
    bf4b:	nopl   0x0(%rax,%rax,1)

000000000000bf50 <png_get_pCAL>:
    bf50:	push   %rbp
    bf51:	mov    %rsp,%rbp
    bf54:	xor    %eax,%eax
    bf56:	test   %rdi,%rdi
    bf59:	jne    bf5d <png_get_pCAL+0xd>
    bf5b:	leaveq 
    bf5c:	retq   
    bf5d:	test   %rsi,%rsi
    bf60:	jne    bf64 <png_get_pCAL+0x14>
    bf62:	leaveq 
    bf63:	retq   
    bf64:	mov    0x8(%rsi),%edi
    bf67:	and    $0x400,%edi
    bf6d:	test   %edi,%edi
    bf6f:	jne    bf73 <png_get_pCAL+0x23>
    bf71:	leaveq 
    bf72:	retq   
    bf73:	test   %rdx,%rdx
    bf76:	jne    bf7a <png_get_pCAL+0x2a>
    bf78:	leaveq 
    bf79:	retq   
    bf7a:	test   %rcx,%rcx
    bf7d:	jne    bf81 <png_get_pCAL+0x31>
    bf7f:	leaveq 
    bf80:	retq   
    bf81:	test   %r8,%r8
    bf84:	jne    bf88 <png_get_pCAL+0x38>
    bf86:	leaveq 
    bf87:	retq   
    bf88:	test   %r9,%r9
    bf8b:	jne    bf8f <png_get_pCAL+0x3f>
    bf8d:	leaveq 
    bf8e:	retq   
    bf8f:	mov    0x10(%rbp),%r11
    bf93:	test   %r11,%r11
    bf96:	jne    bf9a <png_get_pCAL+0x4a>
    bf98:	leaveq 
    bf99:	retq   
    bf9a:	mov    0x18(%rbp),%rdi
    bf9e:	test   %rdi,%rdi
    bfa1:	jne    bfa5 <png_get_pCAL+0x55>
    bfa3:	leaveq 
    bfa4:	retq   
    bfa5:	mov    0x20(%rbp),%r10
    bfa9:	test   %r10,%r10
    bfac:	jne    bfb0 <png_get_pCAL+0x60>
    bfae:	leaveq 
    bfaf:	retq   
    bfb0:	mov    0x108(%rsi),%rax
    bfb7:	mov    %rax,(%rdx)
    bfba:	movslq 0x110(%rsi),%rax
    bfc1:	mov    %eax,(%rcx)
    bfc3:	movslq 0x114(%rsi),%rax
    bfca:	mov    %eax,(%r8)
    bfcd:	movzbl 0x128(%rsi),%eax
    bfd4:	mov    %eax,(%r9)
    bfd7:	movzbl 0x129(%rsi),%eax
    bfde:	mov    %eax,(%r11)
    bfe1:	mov    0x118(%rsi),%rax
    bfe8:	mov    %rax,(%rdi)
    bfeb:	mov    0x120(%rsi),%rax
    bff2:	mov    %rax,(%r10)
    bff5:	mov    $0x400,%eax
    bffa:	leaveq 
    bffb:	retq   
    bffc:	nopl   0x0(%rax)

000000000000c000 <png_get_pHYs>:
    c000:	push   %rbp
    c001:	mov    %rsp,%rbp
    c004:	xor    %eax,%eax
    c006:	test   %rdi,%rdi
    c009:	jne    c00d <png_get_pHYs+0xd>
    c00b:	leaveq 
    c00c:	retq   
    c00d:	test   %rsi,%rsi
    c010:	jne    c014 <png_get_pHYs+0x14>
    c012:	leaveq 
    c013:	retq   
    c014:	mov    0x8(%rsi),%edi
    c017:	and    $0x80,%edi
    c01d:	test   %edi,%edi
    c01f:	jne    c023 <png_get_pHYs+0x23>
    c021:	leaveq 
    c022:	retq   
    c023:	mov    $0x80,%edi
    c028:	test   %rdx,%rdx
    c02b:	je     c038 <png_get_pHYs+0x38>
    c02d:	mov    0xe0(%rsi),%eax
    c033:	mov    %eax,(%rdx)
    c035:	mov    %rdi,%rax
    c038:	test   %rcx,%rcx
    c03b:	je     c048 <png_get_pHYs+0x48>
    c03d:	mov    0xe4(%rsi),%eax
    c043:	mov    %eax,(%rcx)
    c045:	mov    %rdi,%rax
    c048:	test   %r8,%r8
    c04b:	jne    c04f <png_get_pHYs+0x4f>
    c04d:	leaveq 
    c04e:	retq   
    c04f:	movzbl 0xe8(%rsi),%eax
    c056:	mov    %eax,(%r8)
    c059:	mov    %rdi,%rax
    c05c:	leaveq 
    c05d:	retq   
    c05e:	xchg   %ax,%ax

000000000000c060 <png_get_PLTE>:
    c060:	push   %rbp
    c061:	mov    %rsp,%rbp
    c064:	xor    %eax,%eax
    c066:	test   %rdi,%rdi
    c069:	jne    c06d <png_get_PLTE+0xd>
    c06b:	leaveq 
    c06c:	retq   
    c06d:	test   %rsi,%rsi
    c070:	jne    c074 <png_get_PLTE+0x14>
    c072:	leaveq 
    c073:	retq   
    c074:	mov    0x8(%rsi),%edi
    c077:	and    $0x8,%edi
    c07a:	test   %edi,%edi
    c07c:	jne    c080 <png_get_PLTE+0x20>
    c07e:	leaveq 
    c07f:	retq   
    c080:	test   %rdx,%rdx
    c083:	jne    c087 <png_get_PLTE+0x27>
    c085:	leaveq 
    c086:	retq   
    c087:	mov    0x18(%rsi),%rax
    c08b:	mov    %rax,(%rdx)
    c08e:	movzwl 0x20(%rsi),%eax
    c092:	mov    %eax,(%rcx)
    c094:	mov    $0x8,%eax
    c099:	leaveq 
    c09a:	retq   
    c09b:	nopl   0x0(%rax,%rax,1)

000000000000c0a0 <png_get_sBIT>:
    c0a0:	push   %rbp
    c0a1:	mov    %rsp,%rbp
    c0a4:	xor    %eax,%eax
    c0a6:	test   %rdi,%rdi
    c0a9:	jne    c0ad <png_get_sBIT+0xd>
    c0ab:	leaveq 
    c0ac:	retq   
    c0ad:	test   %rsi,%rsi
    c0b0:	jne    c0b4 <png_get_sBIT+0x14>
    c0b2:	leaveq 
    c0b3:	retq   
    c0b4:	mov    0x8(%rsi),%ecx
    c0b7:	and    $0x2,%ecx
    c0ba:	test   %ecx,%ecx
    c0bc:	jne    c0c0 <png_get_sBIT+0x20>
    c0be:	leaveq 
    c0bf:	retq   
    c0c0:	test   %rdx,%rdx
    c0c3:	jne    c0c7 <png_get_sBIT+0x27>
    c0c5:	leaveq 
    c0c6:	retq   
    c0c7:	lea    0xb0(%rsi),%rax
    c0ce:	mov    %rax,(%rdx)
    c0d1:	mov    $0x2,%eax
    c0d6:	leaveq 
    c0d7:	retq   
    c0d8:	nopl   0x0(%rax,%rax,1)

000000000000c0e0 <png_get_sRGB>:
    c0e0:	push   %rbp
    c0e1:	mov    %rsp,%rbp
    c0e4:	xor    %eax,%eax
    c0e6:	test   %rdi,%rdi
    c0e9:	jne    c0ed <png_get_sRGB+0xd>
    c0eb:	leaveq 
    c0ec:	retq   
    c0ed:	test   %rsi,%rsi
    c0f0:	jne    c0f4 <png_get_sRGB+0x14>
    c0f2:	leaveq 
    c0f3:	retq   
    c0f4:	mov    0x8(%rsi),%ecx
    c0f7:	and    $0x800,%ecx
    c0fd:	test   %ecx,%ecx
    c0ff:	jne    c103 <png_get_sRGB+0x23>
    c101:	leaveq 
    c102:	retq   
    c103:	test   %rdx,%rdx
    c106:	jne    c10a <png_get_sRGB+0x2a>
    c108:	leaveq 
    c109:	retq   
    c10a:	movzwl 0x7c(%rsi),%eax
    c10e:	mov    %eax,(%rdx)
    c110:	mov    $0x800,%eax
    c115:	leaveq 
    c116:	retq   
    c117:	nopw   0x0(%rax,%rax,1)

000000000000c120 <png_get_iCCP>:
    c120:	push   %rbp
    c121:	mov    %rsp,%rbp
    c124:	xor    %eax,%eax
    c126:	test   %rdi,%rdi
    c129:	jne    c12d <png_get_iCCP+0xd>
    c12b:	leaveq 
    c12c:	retq   
    c12d:	test   %rsi,%rsi
    c130:	jne    c134 <png_get_iCCP+0x14>
    c132:	leaveq 
    c133:	retq   
    c134:	mov    0x8(%rsi),%edi
    c137:	and    $0x1000,%edi
    c13d:	test   %edi,%edi
    c13f:	jne    c143 <png_get_iCCP+0x23>
    c141:	leaveq 
    c142:	retq   
    c143:	test   %rdx,%rdx
    c146:	jne    c14a <png_get_iCCP+0x2a>
    c148:	leaveq 
    c149:	retq   
    c14a:	test   %rcx,%rcx
    c14d:	jne    c151 <png_get_iCCP+0x31>
    c14f:	leaveq 
    c150:	retq   
    c151:	test   %r8,%r8
    c154:	jne    c158 <png_get_iCCP+0x38>
    c156:	leaveq 
    c157:	retq   
    c158:	test   %r9,%r9
    c15b:	jne    c15f <png_get_iCCP+0x3f>
    c15d:	leaveq 
    c15e:	retq   
    c15f:	mov    0x80(%rsi),%rax
    c166:	mov    %rax,(%rdx)
    c169:	mov    0x88(%rsi),%rax
    c170:	mov    %rax,(%r8)
    c173:	mov    0x88(%rsi),%rsi
    c17a:	movzbl (%rsi),%eax
    c17d:	shl    $0x18,%eax
    c180:	movzbl 0x1(%rsi),%edx
    c184:	shl    $0x10,%edx
    c187:	add    %eax,%edx
    c189:	movzbl 0x2(%rsi),%eax
    c18d:	shl    $0x8,%eax
    c190:	add    %edx,%eax
    c192:	movzbl 0x3(%rsi),%edx
    c196:	add    %edx,%eax
    c198:	mov    %eax,(%r9)
    c19b:	movl   $0x0,(%rcx)
    c1a1:	mov    $0x1000,%eax
    c1a6:	leaveq 
    c1a7:	retq   
    c1a8:	nopl   0x0(%rax,%rax,1)

000000000000c1b0 <png_get_sPLT>:
    c1b0:	push   %rbp
    c1b1:	mov    %rsp,%rbp
    c1b4:	xor    %eax,%eax
    c1b6:	test   %rdi,%rdi
    c1b9:	jne    c1bd <png_get_sPLT+0xd>
    c1bb:	leaveq 
    c1bc:	retq   
    c1bd:	test   %rsi,%rsi
    c1c0:	jne    c1c4 <png_get_sPLT+0x14>
    c1c2:	leaveq 
    c1c3:	retq   
    c1c4:	test   %rdx,%rdx
    c1c7:	jne    c1cb <png_get_sPLT+0x1b>
    c1c9:	leaveq 
    c1ca:	retq   
    c1cb:	mov    0x140(%rsi),%rax
    c1d2:	mov    %rax,(%rdx)
    c1d5:	movslq 0x148(%rsi),%rax
    c1dc:	leaveq 
    c1dd:	retq   
    c1de:	xchg   %ax,%ax

000000000000c1e0 <png_get_text>:
    c1e0:	push   %rbp
    c1e1:	mov    %rsp,%rbp
    c1e4:	test   %rdi,%rdi
    c1e7:	jne    c1f2 <png_get_text+0x12>
    c1e9:	xor    %eax,%eax
    c1eb:	test   %rcx,%rcx
    c1ee:	jne    c228 <png_get_text+0x48>
    c1f0:	leaveq 
    c1f1:	retq   
    c1f2:	test   %rsi,%rsi
    c1f5:	je     c1e9 <png_get_text+0x9>
    c1f7:	movslq 0x94(%rsi),%rax
    c1fe:	test   %eax,%eax
    c200:	jle    c1e9 <png_get_text+0x9>
    c202:	test   %rdx,%rdx
    c205:	je     c211 <png_get_text+0x31>
    c207:	mov    0xa0(%rsi),%rax
    c20e:	mov    %rax,(%rdx)
    c211:	test   %rcx,%rcx
    c214:	je     c21f <png_get_text+0x3f>
    c216:	movslq 0x94(%rsi),%rax
    c21d:	mov    %eax,(%rcx)
    c21f:	movslq 0x94(%rsi),%rax
    c226:	leaveq 
    c227:	retq   
    c228:	movl   $0x0,(%rcx)
    c22e:	leaveq 
    c22f:	retq   

000000000000c230 <png_get_tIME>:
    c230:	push   %rbp
    c231:	mov    %rsp,%rbp
    c234:	xor    %eax,%eax
    c236:	test   %rdi,%rdi
    c239:	jne    c23d <png_get_tIME+0xd>
    c23b:	leaveq 
    c23c:	retq   
    c23d:	test   %rsi,%rsi
    c240:	jne    c244 <png_get_tIME+0x14>
    c242:	leaveq 
    c243:	retq   
    c244:	mov    0x8(%rsi),%ecx
    c247:	and    $0x200,%ecx
    c24d:	test   %ecx,%ecx
    c24f:	jne    c253 <png_get_tIME+0x23>
    c251:	leaveq 
    c252:	retq   
    c253:	test   %rdx,%rdx
    c256:	jne    c25a <png_get_tIME+0x2a>
    c258:	leaveq 
    c259:	retq   
    c25a:	lea    0xa8(%rsi),%rax
    c261:	mov    %rax,(%rdx)
    c264:	mov    $0x200,%eax
    c269:	leaveq 
    c26a:	retq   
    c26b:	nopl   0x0(%rax,%rax,1)

000000000000c270 <png_get_tRNS>:
    c270:	push   %rbp
    c271:	mov    %rsp,%rbp
    c274:	xor    %eax,%eax
    c276:	test   %rdi,%rdi
    c279:	jne    c27d <png_get_tRNS+0xd>
    c27b:	leaveq 
    c27c:	retq   
    c27d:	test   %rsi,%rsi
    c280:	jne    c284 <png_get_tRNS+0x14>
    c282:	leaveq 
    c283:	retq   
    c284:	mov    0x8(%rsi),%edi
    c287:	and    $0x10,%edi
    c28a:	test   %edi,%edi
    c28c:	jne    c290 <png_get_tRNS+0x20>
    c28e:	leaveq 
    c28f:	retq   
    c290:	mov    $0x10,%edi
    c295:	movzbl 0x25(%rsi),%r9d
    c29a:	cmp    $0x3,%r9b
    c29e:	je     c2c0 <png_get_tRNS+0x50>
    c2a0:	test   %r8,%r8
    c2a3:	je     c2b2 <png_get_tRNS+0x42>
    c2a5:	lea    0xc0(%rsi),%rax
    c2ac:	mov    %rax,(%r8)
    c2af:	mov    %rdi,%rax
    c2b2:	test   %rdx,%rdx
    c2b5:	je     c2e1 <png_get_tRNS+0x71>
    c2b7:	movq   $0x0,(%rdx)
    c2be:	jmp    c2e1 <png_get_tRNS+0x71>
    c2c0:	test   %rdx,%rdx
    c2c3:	je     c2d2 <png_get_tRNS+0x62>
    c2c5:	mov    0xb8(%rsi),%rax
    c2cc:	mov    %rax,(%rdx)
    c2cf:	mov    %rdi,%rax
    c2d2:	test   %r8,%r8
    c2d5:	je     c2e1 <png_get_tRNS+0x71>
    c2d7:	lea    0xc0(%rsi),%rdx
    c2de:	mov    %rdx,(%r8)
    c2e1:	test   %rcx,%rcx
    c2e4:	jne    c2e8 <png_get_tRNS+0x78>
    c2e6:	leaveq 
    c2e7:	retq   
    c2e8:	movzwl 0x22(%rsi),%eax
    c2ec:	mov    %eax,(%rcx)
    c2ee:	mov    %rdi,%rax
    c2f1:	leaveq 
    c2f2:	retq   
    c2f3:	data16 nopw %cs:0x0(%rax,%rax,1)
    c2fe:	xchg   %ax,%ax

000000000000c300 <png_get_sCAL>:
    c300:	push   %rbp
    c301:	mov    %rsp,%rbp
    c304:	sub    $0x20,%rsp
    c308:	xor    %eax,%eax
    c30a:	test   %rdi,%rdi
    c30d:	jne    c311 <png_get_sCAL+0x11>
    c30f:	leaveq 
    c310:	retq   
    c311:	test   %rsi,%rsi
    c314:	jne    c318 <png_get_sCAL+0x18>
    c316:	leaveq 
    c317:	retq   
    c318:	mov    0x8(%rsi),%edi
    c31b:	and    $0x4000,%edi
    c321:	test   %edi,%edi
    c323:	jne    c327 <png_get_sCAL+0x27>
    c325:	leaveq 
    c326:	retq   
    c327:	movzbl 0x14c(%rsi),%eax
    c32e:	mov    %eax,(%rdx)
    c330:	mov    0x150(%rsi),%rdi
    c337:	mov    %r13,-0x8(%rbp)
    c33b:	mov    %r14,-0x10(%rbp)
    c33f:	mov    %r15,-0x18(%rbp)
    c343:	mov    %r8,%r13
    c346:	mov    %rcx,%r14
    c349:	mov    %rsi,%r15
    c34c:	callq  51a0 <atof@plt>
    c351:	movsd  %xmm0,(%r14)
    c356:	mov    0x158(%r15),%rdi
    c35d:	callq  51a0 <atof@plt>
    c362:	movsd  %xmm0,0x0(%r13)
    c368:	mov    $0x4000,%eax
    c36d:	mov    -0x18(%rbp),%r15
    c371:	mov    -0x10(%rbp),%r14
    c375:	mov    -0x8(%rbp),%r13
    c379:	leaveq 
    c37a:	retq   
    c37b:	nopl   0x0(%rax,%rax,1)

000000000000c380 <png_get_sCAL_fixed>:
    c380:	push   %rbp
    c381:	mov    %rsp,%rbp
    c384:	sub    $0x20,%rsp
    c388:	xor    %eax,%eax
    c38a:	test   %rdi,%rdi
    c38d:	jne    c391 <png_get_sCAL_fixed+0x11>
    c38f:	leaveq 
    c390:	retq   
    c391:	test   %rsi,%rsi
    c394:	jne    c398 <png_get_sCAL_fixed+0x18>
    c396:	leaveq 
    c397:	retq   
    c398:	mov    0x8(%rsi),%r9d
    c39c:	and    $0x4000,%r9d
    c3a3:	test   %r9d,%r9d
    c3a6:	jne    c3aa <png_get_sCAL_fixed+0x2a>
    c3a8:	leaveq 
    c3a9:	retq   
    c3aa:	movzbl 0x14c(%rsi),%eax
    c3b1:	mov    %eax,(%rdx)
    c3b3:	mov    0x150(%rsi),%rax
    c3ba:	mov    %r12,-0x8(%rbp)
    c3be:	mov    %r13,-0x10(%rbp)
    c3c2:	mov    %r14,-0x18(%rbp)
    c3c6:	mov    %r15,-0x20(%rbp)
    c3ca:	mov    %rdi,%r12
    c3cd:	mov    %rax,%rdi
    c3d0:	mov    %r8,%r13
    c3d3:	mov    %rcx,%r14
    c3d6:	mov    %rsi,%r15
    c3d9:	callq  51a0 <atof@plt>
    c3de:	lea    0x211ea(%rip),%rsi        # 2d5cf <valid_parameters.6+0x79>
    c3e5:	mov    %r12,%rdi
    c3e8:	callq  69e0 <png_fixed>
    c3ed:	mov    %eax,(%r14)
    c3f0:	mov    0x158(%r15),%rdi
    c3f7:	callq  51a0 <atof@plt>
    c3fc:	mov    %r12,%rdi
    c3ff:	lea    0x211d4(%rip),%rsi        # 2d5da <valid_parameters.6+0x84>
    c406:	callq  69e0 <png_fixed>
    c40b:	mov    %eax,0x0(%r13)
    c40f:	mov    $0x4000,%eax
    c414:	mov    -0x20(%rbp),%r15
    c418:	mov    -0x18(%rbp),%r14
    c41c:	mov    -0x10(%rbp),%r13
    c420:	mov    -0x8(%rbp),%r12
    c424:	leaveq 
    c425:	retq   
    c426:	nopw   %cs:0x0(%rax,%rax,1)

000000000000c430 <png_get_sCAL_s>:
    c430:	push   %rbp
    c431:	mov    %rsp,%rbp
    c434:	xor    %eax,%eax
    c436:	test   %rdi,%rdi
    c439:	jne    c43d <png_get_sCAL_s+0xd>
    c43b:	leaveq 
    c43c:	retq   
    c43d:	test   %rsi,%rsi
    c440:	jne    c444 <png_get_sCAL_s+0x14>
    c442:	leaveq 
    c443:	retq   
    c444:	mov    0x8(%rsi),%edi
    c447:	and    $0x4000,%edi
    c44d:	test   %edi,%edi
    c44f:	jne    c453 <png_get_sCAL_s+0x23>
    c451:	leaveq 
    c452:	retq   
    c453:	movzbl 0x14c(%rsi),%eax
    c45a:	mov    %eax,(%rdx)
    c45c:	mov    0x150(%rsi),%rax
    c463:	mov    %rax,(%rcx)
    c466:	mov    0x158(%rsi),%rax
    c46d:	mov    %rax,(%r8)
    c470:	mov    $0x4000,%eax
    c475:	leaveq 
    c476:	retq   
    c477:	nopw   0x0(%rax,%rax,1)

000000000000c480 <png_get_unknown_chunks>:
    c480:	push   %rbp
    c481:	mov    %rsp,%rbp
    c484:	xor    %eax,%eax
    c486:	test   %rdi,%rdi
    c489:	jne    c48d <png_get_unknown_chunks+0xd>
    c48b:	leaveq 
    c48c:	retq   
    c48d:	test   %rsi,%rsi
    c490:	jne    c494 <png_get_unknown_chunks+0x14>
    c492:	leaveq 
    c493:	retq   
    c494:	test   %rdx,%rdx
    c497:	jne    c49b <png_get_unknown_chunks+0x1b>
    c499:	leaveq 
    c49a:	retq   
    c49b:	mov    0x130(%rsi),%rax
    c4a2:	mov    %rax,(%rdx)
    c4a5:	movslq 0x138(%rsi),%rax
    c4ac:	leaveq 
    c4ad:	retq   
    c4ae:	xchg   %ax,%ax

000000000000c4b0 <png_get_user_width_max>:
    c4b0:	push   %rbp
    c4b1:	mov    %rsp,%rbp
    c4b4:	test   %rdi,%rdi
    c4b7:	jne    c4bd <png_get_user_width_max+0xd>
    c4b9:	xor    %eax,%eax
    c4bb:	leaveq 
    c4bc:	retq   
    c4bd:	mov    0x41c(%rdi),%eax
    c4c3:	leaveq 
    c4c4:	retq   
    c4c5:	data16 nopw %cs:0x0(%rax,%rax,1)

000000000000c4d0 <png_get_user_height_max>:
    c4d0:	push   %rbp
    c4d1:	mov    %rsp,%rbp
    c4d4:	test   %rdi,%rdi
    c4d7:	jne    c4dd <png_get_user_height_max+0xd>
    c4d9:	xor    %eax,%eax
    c4db:	leaveq 
    c4dc:	retq   
    c4dd:	mov    0x420(%rdi),%eax
    c4e3:	leaveq 
    c4e4:	retq   
    c4e5:	data16 nopw %cs:0x0(%rax,%rax,1)

000000000000c4f0 <png_get_chunk_cache_max>:
    c4f0:	push   %rbp
    c4f1:	mov    %rsp,%rbp
    c4f4:	test   %rdi,%rdi
    c4f7:	jne    c4fd <png_get_chunk_cache_max+0xd>
    c4f9:	xor    %eax,%eax
    c4fb:	leaveq 
    c4fc:	retq   
    c4fd:	mov    0x424(%rdi),%eax
    c503:	leaveq 
    c504:	retq   
    c505:	data16 nopw %cs:0x0(%rax,%rax,1)

000000000000c510 <png_get_chunk_malloc_max>:
    c510:	push   %rbp
    c511:	mov    %rsp,%rbp
    c514:	test   %rdi,%rdi
    c517:	jne    c51d <png_get_chunk_malloc_max+0xd>
    c519:	xor    %eax,%eax
    c51b:	leaveq 
    c51c:	retq   
    c51d:	mov    0x428(%rdi),%rax
    c524:	leaveq 
    c525:	retq   
    c526:	nopw   %cs:0x0(%rax,%rax,1)

000000000000c530 <png_get_pixels_per_inch>:
    c530:	push   %rbp
    c531:	mov    %rsp,%rbp
    c534:	callq  5710 <png_get_pixels_per_meter@plt>
    c539:	mov    %rax,%rdi
    c53c:	callq  c740 <ppi_from_ppm>
    c541:	leaveq 
    c542:	retq   
    c543:	data16 nopw %cs:0x0(%rax,%rax,1)
    c54e:	xchg   %ax,%ax

000000000000c550 <png_get_x_pixels_per_inch>:
    c550:	push   %rbp
    c551:	mov    %rsp,%rbp
    c554:	callq  5210 <png_get_x_pixels_per_meter@plt>
    c559:	mov    %rax,%rdi
    c55c:	callq  c740 <ppi_from_ppm>
    c561:	leaveq 
    c562:	retq   
    c563:	data16 nopw %cs:0x0(%rax,%rax,1)
    c56e:	xchg   %ax,%ax

000000000000c570 <png_get_y_pixels_per_inch>:
    c570:	push   %rbp
    c571:	mov    %rsp,%rbp
    c574:	callq  53a0 <png_get_y_pixels_per_meter@plt>
    c579:	mov    %rax,%rdi
    c57c:	callq  c740 <ppi_from_ppm>
    c581:	leaveq 
    c582:	retq   
    c583:	data16 nopw %cs:0x0(%rax,%rax,1)
    c58e:	xchg   %ax,%ax

000000000000c590 <png_get_x_offset_inches>:
    c590:	push   %rbp
    c591:	mov    %rsp,%rbp
    c594:	callq  52f0 <png_get_x_offset_microns@plt>
    c599:	cvtsi2sd %eax,%xmm0
    c59d:	movsd  0x2104b(%rip),%xmm1        # 2d5f0 <valid_parameters.6+0x9a>
    c5a5:	mulsd  %xmm1,%xmm0
    c5a9:	cvtsd2ss %xmm0,%xmm0
    c5ad:	leaveq 
    c5ae:	retq   
    c5af:	nop

000000000000c5b0 <png_get_x_offset_inches_fixed>:
    c5b0:	push   %rbp
    c5b1:	mov    %rsp,%rbp
    c5b4:	sub    $0x10,%rsp
    c5b8:	mov    %r15,-0x8(%rbp)
    c5bc:	mov    %rdi,%r15
    c5bf:	callq  52f0 <png_get_x_offset_microns@plt>
    c5c4:	mov    %rax,%rsi
    c5c7:	mov    %r15,%rdi
    c5ca:	callq  c780 <png_fixed_inches_from_microns>
    c5cf:	mov    -0x8(%rbp),%r15
    c5d3:	leaveq 
    c5d4:	retq   
    c5d5:	data16 nopw %cs:0x0(%rax,%rax,1)

000000000000c5e0 <png_get_y_offset_inches>:
    c5e0:	push   %rbp
    c5e1:	mov    %rsp,%rbp
    c5e4:	callq  5030 <png_get_y_offset_microns@plt>
    c5e9:	cvtsi2sd %eax,%xmm0
    c5ed:	movsd  0x20ffb(%rip),%xmm1        # 2d5f0 <valid_parameters.6+0x9a>
    c5f5:	mulsd  %xmm1,%xmm0
    c5f9:	cvtsd2ss %xmm0,%xmm0
    c5fd:	leaveq 
    c5fe:	retq   
    c5ff:	nop

000000000000c600 <png_get_y_offset_inches_fixed>:
    c600:	push   %rbp
    c601:	mov    %rsp,%rbp
    c604:	sub    $0x10,%rsp
    c608:	mov    %r15,-0x8(%rbp)
    c60c:	mov    %rdi,%r15
    c60f:	callq  5030 <png_get_y_offset_microns@plt>
    c614:	mov    %rax,%rsi
    c617:	mov    %r15,%rdi
    c61a:	callq  c780 <png_fixed_inches_from_microns>
    c61f:	mov    -0x8(%rbp),%r15
    c623:	leaveq 
    c624:	retq   
    c625:	data16 nopw %cs:0x0(%rax,%rax,1)

000000000000c630 <png_get_pHYs_dpi>:
    c630:	push   %rbp
    c631:	mov    %rsp,%rbp
    c634:	xor    %eax,%eax
    c636:	test   %rdi,%rdi
    c639:	jne    c63d <png_get_pHYs_dpi+0xd>
    c63b:	leaveq 
    c63c:	retq   
    c63d:	test   %rsi,%rsi
    c640:	jne    c644 <png_get_pHYs_dpi+0x14>
    c642:	leaveq 
    c643:	retq   
    c644:	mov    0x8(%rsi),%edi
    c647:	and    $0x80,%edi
    c64d:	test   %edi,%edi
    c64f:	jne    c653 <png_get_pHYs_dpi+0x23>
    c651:	leaveq 
    c652:	retq   
    c653:	mov    $0x80,%edi
    c658:	test   %rdx,%rdx
    c65b:	je     c668 <png_get_pHYs_dpi+0x38>
    c65d:	mov    0xe0(%rsi),%eax
    c663:	mov    %eax,(%rdx)
    c665:	mov    %rdi,%rax
    c668:	test   %rcx,%rcx
    c66b:	je     c678 <png_get_pHYs_dpi+0x48>
    c66d:	mov    0xe4(%rsi),%eax
    c673:	mov    %eax,(%rcx)
    c675:	mov    %rdi,%rax
    c678:	test   %r8,%r8
    c67b:	jne    c67f <png_get_pHYs_dpi+0x4f>
    c67d:	leaveq 
    c67e:	retq   
    c67f:	movzbl 0xe8(%rsi),%eax
    c686:	mov    %eax,(%r8)
    c689:	cmp    $0x1,%al
    c68b:	je     c692 <png_get_pHYs_dpi+0x62>
    c68d:	mov    %rdi,%rax
    c690:	leaveq 
    c691:	retq   
    c692:	test   %rdx,%rdx
    c695:	movsd  0x20f5b(%rip),%xmm1        # 2d5f8 <valid_parameters.6+0xa2>
    c69d:	movsd  0x20f5b(%rip),%xmm2        # 2d600 <valid_parameters.6+0xaa>
    c6a5:	je     c6bf <png_get_pHYs_dpi+0x8f>
    c6a7:	mov    (%rdx),%eax
    c6a9:	mov    %eax,%eax
    c6ab:	cvtsi2sd %rax,%xmm0
    c6b0:	mulsd  %xmm1,%xmm0
    c6b4:	addsd  %xmm2,%xmm0
    c6b8:	cvttsd2si %xmm0,%rax
    c6bd:	mov    %eax,(%rdx)
    c6bf:	test   %rcx,%rcx
    c6c2:	jne    c6c9 <png_get_pHYs_dpi+0x99>
    c6c4:	mov    %rdi,%rax
    c6c7:	leaveq 
    c6c8:	retq   
    c6c9:	mov    (%rcx),%eax
    c6cb:	mov    %eax,%eax
    c6cd:	cvtsi2sd %rax,%xmm0
    c6d2:	mulsd  %xmm1,%xmm0
    c6d6:	addsd  %xmm2,%xmm0
    c6da:	cvttsd2si %xmm0,%rax
    c6df:	mov    %eax,(%rcx)
    c6e1:	mov    %rdi,%rax
    c6e4:	leaveq 
    c6e5:	retq   
    c6e6:	nopw   %cs:0x0(%rax,%rax,1)

000000000000c6f0 <png_get_io_state>:
    c6f0:	push   %rbp
    c6f1:	mov    %rsp,%rbp
    c6f4:	mov    0x46c(%rdi),%eax
    c6fa:	leaveq 
    c6fb:	retq   
    c6fc:	nopl   0x0(%rax)

000000000000c700 <png_get_io_chunk_type>:
    c700:	push   %rbp
    c701:	mov    %rsp,%rbp
    c704:	mov    0x218(%rdi),%eax
    c70a:	leaveq 
    c70b:	retq   
    c70c:	nopl   0x0(%rax)

000000000000c710 <png_get_palette_max>:
    c710:	push   %rbp
    c711:	mov    %rsp,%rbp
    c714:	mov    $0xffffffffffffffff,%rax
    c71b:	test   %rdi,%rdi
    c71e:	jne    c722 <png_get_palette_max+0x12>
    c720:	leaveq 
    c721:	retq   
    c722:	test   %rsi,%rsi
    c725:	jne    c729 <png_get_palette_max+0x19>
    c727:	leaveq 
    c728:	retq   
    c729:	movslq 0x25c(%rdi),%rax
    c730:	leaveq 
    c731:	retq   
    c732:	data16 nopw %cs:0x0(%rax,%rax,1)
    c73d:	nopl   (%rax)

000000000000c740 <ppi_from_ppm>:
    c740:	push   %rbp
    c741:	mov    %rsp,%rbp
    c744:	sub    $0x10,%rsp
    c748:	xor    %eax,%eax
    c74a:	cmp    $0x7fffffff,%edi
    c750:	jbe    c754 <ppi_from_ppm+0x14>
    c752:	leaveq 
    c753:	retq   
    c754:	mov    %rdi,%rsi
    c757:	lea    -0x4(%rbp),%rdi
    c75b:	mov    $0x7f,%edx
    c760:	mov    $0x1388,%ecx
    c765:	callq  8970 <png_muldiv>
    c76a:	test   %eax,%eax
    c76c:	jne    c772 <ppi_from_ppm+0x32>
    c76e:	xor    %eax,%eax
    c770:	leaveq 
    c771:	retq   
    c772:	mov    -0x4(%rbp),%eax
    c775:	leaveq 
    c776:	retq   
    c777:	nopw   0x0(%rax,%rax,1)

000000000000c780 <png_fixed_inches_from_microns>:
    c780:	push   %rbp
    c781:	mov    %rsp,%rbp
    c784:	mov    $0x1f4,%edx
    c789:	mov    $0x7f,%ecx
    c78e:	callq  8a00 <png_muldiv_warn>
    c793:	leaveq 
    c794:	retq   
    c795:	nopw   %cs:0x0(%rax,%rax,1)
    c79f:	nop

000000000000c7a0 <png_set_mem_fn>:
    c7a0:	push   %rbp
    c7a1:	mov    %rsp,%rbp
    c7a4:	test   %rdi,%rdi
    c7a7:	jne    c7ab <png_set_mem_fn+0xb>
    c7a9:	leaveq 
    c7aa:	retq   
    c7ab:	mov    %rsi,0x3e0(%rdi)
    c7b2:	mov    %rdx,0x3e8(%rdi)
    c7b9:	mov    %rcx,0x3f0(%rdi)
    c7c0:	leaveq 
    c7c1:	retq   
    c7c2:	data16 nopw %cs:0x0(%rax,%rax,1)
    c7cd:	nopl   (%rax)

000000000000c7d0 <png_get_mem_ptr>:
    c7d0:	push   %rbp
    c7d1:	mov    %rsp,%rbp
    c7d4:	test   %rdi,%rdi
    c7d7:	jne    c7dd <png_get_mem_ptr+0xd>
    c7d9:	xor    %eax,%eax
    c7db:	leaveq 
    c7dc:	retq   
    c7dd:	mov    0x3e0(%rdi),%rax
    c7e4:	leaveq 
    c7e5:	retq   
    c7e6:	nopw   %cs:0x0(%rax,%rax,1)

000000000000c7f0 <png_malloc>:
    c7f0:	push   %rbp
    c7f1:	mov    %rsp,%rbp
    c7f4:	sub    $0x10,%rsp
    c7f8:	test   %rdi,%rdi
    c7fb:	jne    c801 <png_malloc+0x11>
    c7fd:	xor    %eax,%eax
    c7ff:	leaveq 
    c800:	retq   
    c801:	mov    %rdi,%rax
    c804:	mov    %rdi,-0x8(%rbp)
    c808:	mov    %rax,%rdi
    c80b:	callq  c940 <png_malloc_base>
    c810:	test   %rax,%rax
    c813:	je     c817 <png_malloc+0x27>
    c815:	leaveq 
    c816:	retq   
    c817:	lea    0x20dea(%rip),%rsi        # 2d608 <valid_parameters.6+0xb2>
    c81e:	mov    -0x8(%rbp),%rdi
    c822:	callq  5470 <png_error@plt>
    c827:	nopw   0x0(%rax,%rax,1)

000000000000c830 <png_calloc>:
    c830:	push   %rbp
    c831:	mov    %rsp,%rbp
    c834:	sub    $0x10,%rsp
    c838:	mov    %rsi,-0x8(%rbp)
    c83c:	callq  5800 <png_malloc@plt>
    c841:	test   %rax,%rax
    c844:	jne    c848 <png_calloc+0x18>
    c846:	leaveq 
    c847:	retq   
    c848:	xor    %esi,%esi
    c84a:	mov    %rax,%rdi
    c84d:	mov    %r15,-0x10(%rbp)
    c851:	mov    %rax,%r15
    c854:	mov    -0x8(%rbp),%rdx
    c858:	callq  5350 <memset@plt>
    c85d:	mov    %r15,%rax
    c860:	mov    -0x10(%rbp),%r15
    c864:	leaveq 
    c865:	retq   
    c866:	nopw   %cs:0x0(%rax,%rax,1)

000000000000c870 <png_malloc_warn>:
    c870:	push   %rbp
    c871:	mov    %rsp,%rbp
    c874:	sub    $0x10,%rsp
    c878:	xor    %eax,%eax
    c87a:	test   %rdi,%rdi
    c87d:	jne    c881 <png_malloc_warn+0x11>
    c87f:	leaveq 
    c880:	retq   
    c881:	mov    %rdi,%rax
    c884:	mov    %rdi,-0x8(%rbp)
    c888:	mov    %rax,%rdi
    c88b:	callq  c940 <png_malloc_base>
    c890:	test   %rax,%rax
    c893:	je     c897 <png_malloc_warn+0x27>
    c895:	leaveq 
    c896:	retq   
    c897:	lea    0x20d6a(%rip),%rsi        # 2d608 <valid_parameters.6+0xb2>
    c89e:	mov    -0x8(%rbp),%rdi
    c8a2:	callq  5390 <png_warning@plt>
    c8a7:	xor    %eax,%eax
    c8a9:	leaveq 
    c8aa:	retq   
    c8ab:	nopl   0x0(%rax,%rax,1)

000000000000c8b0 <png_free>:
    c8b0:	push   %rbp
    c8b1:	mov    %rsp,%rbp
    c8b4:	test   %rdi,%rdi
    c8b7:	jne    c8bb <png_free+0xb>
    c8b9:	leaveq 
    c8ba:	retq   
    c8bb:	test   %rsi,%rsi
    c8be:	jne    c8c2 <png_free+0x12>
    c8c0:	leaveq 
    c8c1:	retq   
    c8c2:	mov    0x3f0(%rdi),%rax
    c8c9:	test   %rax,%rax
    c8cc:	jne    c8d5 <png_free+0x25>
    c8ce:	callq  5700 <png_free_default@plt>
    c8d3:	leaveq 
    c8d4:	retq   
    c8d5:	callq  *%rax
    c8d7:	leaveq 
    c8d8:	retq   
    c8d9:	nopl   0x0(%rax)

000000000000c8e0 <png_malloc_default>:
    c8e0:	push   %rbp
    c8e1:	mov    %rsp,%rbp
    c8e4:	sub    $0x10,%rsp
    c8e8:	xor    %eax,%eax
    c8ea:	test   %rdi,%rdi
    c8ed:	jne    c8f1 <png_malloc_default+0x11>
    c8ef:	leaveq 
    c8f0:	retq   
    c8f1:	mov    %rdi,-0x8(%rbp)
    c8f5:	mov    %rax,%rdi
    c8f8:	callq  c940 <png_malloc_base>
    c8fd:	test   %rax,%rax
    c900:	je     c904 <png_malloc_default+0x24>
    c902:	leaveq 
    c903:	retq   
    c904:	lea    0x20d0b(%rip),%rsi        # 2d616 <valid_parameters.6+0xc0>
    c90b:	mov    -0x8(%rbp),%rdi
    c90f:	callq  5470 <png_error@plt>
    c914:	data16 nopw %cs:0x0(%rax,%rax,1)
    c91f:	nop

000000000000c920 <png_free_default>:
    c920:	push   %rbp
    c921:	mov    %rsp,%rbp
    c924:	test   %rdi,%rdi
    c927:	jne    c92b <png_free_default+0xb>
    c929:	leaveq 
    c92a:	retq   
    c92b:	test   %rsi,%rsi
    c92e:	jne    c932 <png_free_default+0x12>
    c930:	leaveq 
    c931:	retq   
    c932:	mov    %rsi,%rdi
    c935:	callq  5070 <free@plt>
    c93a:	leaveq 
    c93b:	retq   
    c93c:	nopl   0x0(%rax)

000000000000c940 <png_malloc_base>:
    c940:	push   %rbp
    c941:	mov    %rsp,%rbp
    c944:	test   %rsi,%rsi
    c947:	jne    c94d <png_malloc_base+0xd>
    c949:	xor    %eax,%eax
    c94b:	leaveq 
    c94c:	retq   
    c94d:	test   %rdi,%rdi
    c950:	jne    c95c <png_malloc_base+0x1c>
    c952:	mov    %rsi,%rdi
    c955:	callq  55c0 <malloc@plt>
    c95a:	leaveq 
    c95b:	retq   
    c95c:	mov    0x3e8(%rdi),%rax
    c963:	test   %rax,%rax
    c966:	je     c952 <png_malloc_base+0x12>
    c968:	callq  *%rax
    c96a:	leaveq 
    c96b:	retq   
    c96c:	nopl   0x0(%rax)

000000000000c970 <png_malloc_array>:
    c970:	push   %rbp
    c971:	mov    %rsp,%rbp
    c974:	test   %esi,%esi
    c976:	jle    c984 <png_malloc_array+0x14>
    c978:	test   %rdx,%rdx
    c97b:	je     c984 <png_malloc_array+0x14>
    c97d:	callq  cad0 <png_malloc_array_checked>
    c982:	leaveq 
    c983:	retq   
    c984:	lea    0x20c99(%rip),%rsi        # 2d624 <valid_parameters.6+0xce>
    c98b:	callq  5470 <png_error@plt>

000000000000c990 <png_realloc_array>:
    c990:	push   %rbp
    c991:	mov    %rsp,%rbp
    c994:	sub    $0x30,%rsp
    c998:	test   %ecx,%ecx
    c99a:	jle    c9c1 <png_realloc_array+0x31>
    c99c:	test   %r8,%r8
    c99f:	je     c9c1 <png_realloc_array+0x31>
    c9a1:	test   %edx,%edx
    c9a3:	js     c9c1 <png_realloc_array+0x31>
    c9a5:	test   %rsi,%rsi
    c9a8:	je     c9bd <png_realloc_array+0x2d>
    c9aa:	xor    %eax,%eax
    c9ac:	mov    %rdx,%r9
    c9af:	xor    $0x7fffffff,%r9d
    c9b6:	cmp    %r9d,%ecx
    c9b9:	jle    c9cd <png_realloc_array+0x3d>
    c9bb:	leaveq 
    c9bc:	retq   
    c9bd:	test   %edx,%edx
    c9bf:	jle    c9aa <png_realloc_array+0x1a>
    c9c1:	lea    0x20c78(%rip),%rsi        # 2d640 <valid_parameters.6+0xea>
    c9c8:	callq  5470 <png_error@plt>
    c9cd:	lea    (%rcx,%rdx,1),%r9d
    c9d1:	mov    %r8,%rax
    c9d4:	mov    %r15,-0x28(%rbp)
    c9d8:	mov    %r8,-0x20(%rbp)
    c9dc:	mov    %rcx,-0x8(%rbp)
    c9e0:	mov    %rsi,-0x10(%rbp)
    c9e4:	mov    %r9,%rsi
    c9e7:	mov    %rdx,%r15
    c9ea:	mov    %rax,%rdx
    c9ed:	callq  cad0 <png_malloc_array_checked>
    c9f2:	test   %rax,%rax
    c9f5:	jne    c9ff <png_realloc_array+0x6f>
    c9f7:	xor    %eax,%eax
    c9f9:	mov    -0x28(%rbp),%r15
    c9fd:	leaveq 
    c9fe:	retq   
    c9ff:	mov    %r15d,%ecx
    ca02:	mov    -0x20(%rbp),%rdx
    ca06:	imul   %rdx,%rcx
    ca0a:	test   %r15d,%r15d
    ca0d:	jg     ca14 <png_realloc_array+0x84>
    ca0f:	mov    %rax,%r15
    ca12:	jmp    ca45 <png_realloc_array+0xb5>
    ca14:	mov    %rax,%rdi
    ca17:	mov    %rcx,%r8
    ca1a:	mov    %r13,-0x18(%rbp)
    ca1e:	mov    %r14,-0x20(%rbp)
    ca22:	mov    %rdx,%r13
    ca25:	mov    %r8,%rdx
    ca28:	mov    %rcx,%r14
    ca2b:	mov    %rax,%r15
    ca2e:	mov    -0x10(%rbp),%rsi
    ca32:	callq  54c0 <memcpy@plt>
    ca37:	mov    %r14,%rcx
    ca3a:	mov    %r13,%rdx
    ca3d:	mov    -0x20(%rbp),%r14
    ca41:	mov    -0x18(%rbp),%r13
    ca45:	lea    (%r15,%rcx,1),%rdi
    ca49:	mov    -0x8(%rbp),%rax
    ca4d:	mov    %eax,%eax
    ca4f:	imul   %rax,%rdx
    ca53:	xor    %esi,%esi
    ca55:	callq  5350 <memset@plt>
    ca5a:	mov    %r15,%rax
    ca5d:	mov    -0x28(%rbp),%r15
    ca61:	leaveq 
    ca62:	retq   
    ca63:	data16 nopw %cs:0x0(%rax,%rax,1)
    ca6e:	xchg   %ax,%ax

000000000000ca70 <png_destroy_png_struct>:
    ca70:	push   %rbp
    ca71:	mov    %rsp,%rbp
    ca74:	sub    $0x4f0,%rsp
    ca7b:	test   %rdi,%rdi
    ca7e:	jne    ca82 <png_destroy_png_struct+0x12>
    ca80:	leaveq 
    ca81:	retq   
    ca82:	lea    -0x4f0(%rbp),%rax
    ca89:	mov    $0x4e8,%edx
    ca8e:	mov    %rdi,%rsi
    ca91:	mov    %r15,-0x8(%rbp)
    ca95:	mov    %rdi,%r15
    ca98:	mov    %rax,%rdi
    ca9b:	callq  54c0 <memcpy@plt>
    caa0:	xor    %esi,%esi
    caa2:	mov    %r15,%rdi
    caa5:	mov    $0x4e8,%edx
    caaa:	callq  5350 <memset@plt>
    caaf:	mov    %r15,%rsi
    cab2:	lea    -0x4f0(%rbp),%rdi
    cab9:	mov    %rdi,%r15
    cabc:	callq  5790 <png_free@plt>
    cac1:	mov    %r15,%rdi
    cac4:	callq  abf0 <png_free_jmpbuf>
    cac9:	mov    -0x8(%rbp),%r15
    cacd:	leaveq 
    cace:	retq   
    cacf:	nop

000000000000cad0 <png_malloc_array_checked>:
    cad0:	push   %rbp
    cad1:	mov    %rsp,%rbp
    cad4:	mov    %rsi,%r8
    cad7:	mov    %rdx,%rsi
    cada:	xor    %ecx,%ecx
    cadc:	mov    $0xffffffffffffffff,%rax
    cae3:	mov    %rcx,%rdx
    cae6:	div    %rsi
    cae9:	movslq %r8d,%rdx
    caec:	cmp    %rdx,%rax
    caef:	jae    caf6 <png_malloc_array_checked+0x26>
    caf1:	mov    %rcx,%rax
    caf4:	leaveq 
    caf5:	retq   
    caf6:	imul   %rdx,%rsi
    cafa:	callq  c940 <png_malloc_base>
    caff:	leaveq 
    cb00:	retq   
    cb01:	nopw   %cs:0x0(%rax,%rax,1)
    cb0b:	nopl   0x0(%rax,%rax,1)

000000000000cb10 <png_set_progressive_read_fn>:
    cb10:	push   %rbp
    cb11:	mov    %rsp,%rbp
    cb14:	test   %rdi,%rdi
    cb17:	jne    cb1b <png_set_progressive_read_fn+0xb>
    cb19:	leaveq 
    cb1a:	retq   
    cb1b:	mov    %rdx,0x310(%rdi)
    cb22:	mov    %rcx,0x318(%rdi)
    cb29:	mov    %r8,0x320(%rdi)
    cb30:	lea    0x119(%rip),%rdx        # cc50 <png_push_fill_buffer>
    cb37:	callq  5560 <png_set_read_fn@plt>
    cb3c:	leaveq 
    cb3d:	retq   
    cb3e:	xchg   %ax,%ax

000000000000cb40 <png_get_progressive_ptr>:
    cb40:	push   %rbp
    cb41:	mov    %rsp,%rbp
    cb44:	test   %rdi,%rdi
    cb47:	jne    cb4d <png_get_progressive_ptr+0xd>
    cb49:	xor    %eax,%eax
    cb4b:	leaveq 
    cb4c:	retq   
    cb4d:	mov    0x108(%rdi),%rax
    cb54:	leaveq 
    cb55:	retq   
    cb56:	nopw   %cs:0x0(%rax,%rax,1)

000000000000cb60 <png_process_data>:
    cb60:	push   %rbp
    cb61:	mov    %rsp,%rbp
    cb64:	sub    $0x10,%rsp
    cb68:	test   %rdi,%rdi
    cb6b:	jne    cb6f <png_process_data+0xf>
    cb6d:	leaveq 
    cb6e:	retq   
    cb6f:	test   %rsi,%rsi
    cb72:	jne    cb76 <png_process_data+0x16>
    cb74:	leaveq 
    cb75:	retq   
    cb76:	mov    %rdi,%rax
    cb79:	mov    %r14,-0x8(%rbp)
    cb7d:	mov    %r15,-0x10(%rbp)
    cb81:	mov    %rdi,%r14
    cb84:	mov    %rax,%rdi
    cb87:	mov    %rsi,%r15
    cb8a:	mov    %rdx,%rsi
    cb8d:	mov    %rcx,%rdx
    cb90:	callq  dae0 <png_push_restore_buffer>
    cb95:	jmp    cba2 <png_process_data+0x42>
    cb97:	mov    %r14,%rdi
    cb9a:	mov    %r15,%rsi
    cb9d:	callq  e770 <png_process_some_data>
    cba2:	mov    0x360(%r14),%rax
    cba9:	test   %rax,%rax
    cbac:	jne    cb97 <png_process_data+0x37>
    cbae:	mov    -0x10(%rbp),%r15
    cbb2:	mov    -0x8(%rbp),%r14
    cbb6:	leaveq 
    cbb7:	retq   
    cbb8:	nopl   0x0(%rax,%rax,1)

000000000000cbc0 <png_process_data_pause>:
    cbc0:	push   %rbp
    cbc1:	mov    %rsp,%rbp
    cbc4:	xor    %eax,%eax
    cbc6:	test   %rdi,%rdi
    cbc9:	jne    cbcd <png_process_data_pause+0xd>
    cbcb:	leaveq 
    cbcc:	retq   
    cbcd:	test   %esi,%esi
    cbcf:	jne    cbf1 <png_process_data_pause+0x31>
    cbd1:	mov    0x360(%rdi),%rcx
    cbd8:	movq   $0x0,0x360(%rdi)
    cbe3:	mov    0x350(%rdi),%rdx
    cbea:	cmp    %rcx,%rdx
    cbed:	jb     cbfa <png_process_data_pause+0x3a>
    cbef:	leaveq 
    cbf0:	retq   
    cbf1:	callq  d920 <png_push_save_buffer>
    cbf6:	xor    %eax,%eax
    cbf8:	leaveq 
    cbf9:	retq   
    cbfa:	mov    %rcx,%rax
    cbfd:	sub    %rdx,%rax
    cc00:	leaveq 
    cc01:	retq   
    cc02:	data16 nopw %cs:0x0(%rax,%rax,1)
    cc0d:	nopl   (%rax)

000000000000cc10 <png_process_data_skip>:
    cc10:	push   %rbp
    cc11:	mov    %rsp,%rbp
    cc14:	lea    0x20a5d(%rip),%rsi        # 2d678 <valid_parameters.6+0x122>
    cc1b:	callq  b0f0 <png_app_warning>
    cc20:	xor    %eax,%eax
    cc22:	leaveq 
    cc23:	retq   
    cc24:	data16 nopw %cs:0x0(%rax,%rax,1)
    cc2f:	nop

000000000000cc30 <png_progressive_combine_row>:
    cc30:	push   %rbp
    cc31:	mov    %rsp,%rbp
    cc34:	test   %rdi,%rdi
    cc37:	jne    cc3b <png_progressive_combine_row+0xb>
    cc39:	leaveq 
    cc3a:	retq   
    cc3b:	test   %rdx,%rdx
    cc3e:	jne    cc42 <png_progressive_combine_row+0x12>
    cc40:	leaveq 
    cc41:	retq   
    cc42:	mov    $0x1,%edx
    cc47:	callq  1b430 <png_combine_row>
    cc4c:	leaveq 
    cc4d:	retq   
    cc4e:	xchg   %ax,%ax

000000000000cc50 <png_push_fill_buffer>:
    cc50:	push   %rbp
    cc51:	mov    %rsp,%rbp
    cc54:	sub    $0x20,%rsp
    cc58:	test   %rdi,%rdi
    cc5b:	jne    cc5f <png_push_fill_buffer+0xf>
    cc5d:	leaveq 
    cc5e:	retq   
    cc5f:	mov    0x350(%rdi),%rax
    cc66:	test   %rax,%rax
    cc69:	je     ccfe <png_push_fill_buffer+0xae>
    cc6f:	cmp    %rdx,%rax
    cc72:	jbe    cc77 <png_push_fill_buffer+0x27>
    cc74:	mov    %rdx,%rax
    cc77:	mov    0x328(%rdi),%rcx
    cc7e:	mov    %rsi,%r8
    cc81:	mov    %rax,%r9
    cc84:	mov    %r12,-0x8(%rbp)
    cc88:	mov    %r13,-0x10(%rbp)
    cc8c:	mov    %r14,-0x18(%rbp)
    cc90:	mov    %r15,-0x20(%rbp)
    cc94:	mov    %rdx,%r12
    cc97:	mov    %r9,%rdx
    cc9a:	mov    %rax,%r13
    cc9d:	mov    %rsi,%r14
    cca0:	mov    %rcx,%rsi
    cca3:	mov    %rdi,%r15
    cca6:	mov    %r8,%rdi
    cca9:	callq  54c0 <memcpy@plt>
    ccae:	mov    0x360(%r15),%rax
    ccb5:	sub    %r13,%rax
    ccb8:	mov    %rax,0x360(%r15)
    ccbf:	mov    0x350(%r15),%rax
    ccc6:	sub    %r13,%rax
    ccc9:	mov    %rax,0x350(%r15)
    ccd0:	mov    %r13,%rax
    ccd3:	add    0x328(%r15),%rax
    ccda:	mov    %rax,0x328(%r15)
    cce1:	mov    %r12,%rdx
    cce4:	sub    %r13,%rdx
    cce7:	lea    (%r14,%r13,1),%rsi
    cceb:	mov    %r15,%rdi
    ccee:	mov    -0x20(%rbp),%r15
    ccf2:	mov    -0x18(%rbp),%r14
    ccf6:	mov    -0x10(%rbp),%r13
    ccfa:	mov    -0x8(%rbp),%r12
    ccfe:	test   %rdx,%rdx
    cd01:	jne    cd05 <png_push_fill_buffer+0xb5>
    cd03:	leaveq 
    cd04:	retq   
    cd05:	mov    0x368(%rdi),%rax
    cd0c:	test   %rax,%rax
    cd0f:	jne    cd13 <png_push_fill_buffer+0xc3>
    cd11:	leaveq 
    cd12:	retq   
    cd13:	cmp    %rax,%rdx
    cd16:	jae    cd1b <png_push_fill_buffer+0xcb>
    cd18:	mov    %rdx,%rax
    cd1b:	mov    0x338(%rdi),%rcx
    cd22:	mov    %rax,%rdx
    cd25:	mov    %r14,-0x18(%rbp)
    cd29:	mov    %r15,-0x20(%rbp)
    cd2d:	mov    %rax,%r14
    cd30:	mov    %rdi,%r15
    cd33:	mov    %rsi,%rdi
    cd36:	mov    %rcx,%rsi
    cd39:	callq  54c0 <memcpy@plt>
    cd3e:	mov    0x360(%r15),%rax
    cd45:	sub    %r14,%rax
    cd48:	mov    %rax,0x360(%r15)
    cd4f:	mov    0x368(%r15),%rax
    cd56:	sub    %r14,%rax
    cd59:	mov    %rax,0x368(%r15)
    cd60:	add    0x338(%r15),%r14
    cd67:	mov    %r14,0x338(%r15)
    cd6e:	mov    -0x20(%rbp),%r15
    cd72:	mov    -0x18(%rbp),%r14
    cd76:	leaveq 
    cd77:	retq   
    cd78:	nopl   0x0(%rax,%rax,1)

000000000000cd80 <png_push_read_chunk>:
    cd80:	push   %rbp
    cd81:	mov    %rsp,%rbp
    cd84:	sub    $0x30,%rsp
    cd88:	mov    0x12c(%rdi),%eax
    cd8e:	and    $0x100,%eax
    cd93:	test   %eax,%eax
    cd95:	je     cf26 <png_push_read_chunk+0x1a6>
    cd9b:	mov    %r14,%rax
    cd9e:	mov    %rsi,%r14
    cda1:	mov    %r15,%rcx
    cda4:	mov    %r13,%r15
    cda7:	mov    %rdi,%r13
    cdaa:	mov    0x218(%r13),%r8d
    cdb1:	cmp    $0x49444154,%r8d
    cdb8:	je     d000 <png_push_read_chunk+0x280>
    cdbe:	cmp    $0x49484452,%r8d
    cdc5:	je     d0af <png_push_read_chunk+0x32f>
    cdcb:	cmp    $0x49454e44,%r8d
    cdd2:	je     d0fe <png_push_read_chunk+0x37e>
    cdd8:	mov    %r13,%rdi
    cddb:	mov    %r8,%rsi
    cdde:	mov    %r15,-0x8(%rbp)
    cde2:	mov    %rax,-0x18(%rbp)
    cde6:	mov    %rcx,-0x28(%rbp)
    cdea:	mov    %r8,%r15
    cded:	callq  6e80 <png_chunk_unknown_handling>
    cdf2:	test   %eax,%eax
    cdf4:	jne    d149 <png_push_read_chunk+0x3c9>
    cdfa:	cmp    $0x504c5445,%r15d
    ce01:	je     d18d <png_push_read_chunk+0x40d>
    ce07:	cmp    $0x49444154,%r15d
    ce0e:	je     d1c1 <png_push_read_chunk+0x441>
    ce14:	mov    0x218(%r13),%eax
    ce1b:	cmp    $0x67414d41,%eax
    ce20:	je     d20d <png_push_read_chunk+0x48d>
    ce26:	cmp    $0x73424954,%eax
    ce2b:	je     d241 <png_push_read_chunk+0x4c1>
    ce31:	cmp    $0x6348524d,%eax
    ce36:	je     d275 <png_push_read_chunk+0x4f5>
    ce3c:	cmp    $0x73524742,%r15d
    ce43:	je     d2a9 <png_push_read_chunk+0x529>
    ce49:	cmp    $0x69434350,%eax
    ce4e:	je     d2dd <png_push_read_chunk+0x55d>
    ce54:	cmp    $0x73504c54,%r15d
    ce5b:	je     d311 <png_push_read_chunk+0x591>
    ce61:	cmp    $0x74524e53,%r15d
    ce68:	je     d345 <png_push_read_chunk+0x5c5>
    ce6e:	cmp    $0x624b4744,%r15d
    ce75:	je     d379 <png_push_read_chunk+0x5f9>
    ce7b:	cmp    $0x68495354,%r15d
    ce82:	je     d3ad <png_push_read_chunk+0x62d>
    ce88:	cmp    $0x70485973,%r15d
    ce8f:	je     d3e1 <png_push_read_chunk+0x661>
    ce95:	cmp    $0x6f464673,%r15d
    ce9c:	je     d415 <png_push_read_chunk+0x695>
    cea2:	cmp    $0x7043414c,%r15d
    cea9:	je     d449 <png_push_read_chunk+0x6c9>
    ceaf:	cmp    $0x7343414c,%r15d
    ceb6:	je     d47d <png_push_read_chunk+0x6fd>
    cebc:	cmp    $0x74494d45,%r15d
    cec3:	je     d4b1 <png_push_read_chunk+0x731>
    cec9:	cmp    $0x74455874,%r15d
    ced0:	je     d4e5 <png_push_read_chunk+0x765>
    ced6:	cmp    $0x7a545874,%r15d
    cedd:	je     d519 <png_push_read_chunk+0x799>
    cee3:	cmp    $0x69545874,%r15d
    ceea:	je     d54d <png_push_read_chunk+0x7cd>
    cef0:	mov    0x360(%r13),%rcx
    cef7:	mov    0x348(%r13),%edx
    cefe:	lea    0x4(%rdx),%eax
    cf01:	mov    %eax,%eax
    cf03:	cmp    %rax,%rcx
    cf06:	jb     d581 <png_push_read_chunk+0x801>
    cf0c:	mov    %r14,%rsi
    cf0f:	xor    %ecx,%ecx
    cf11:	mov    %r13,%rdi
    cf14:	callq  1fe00 <png_handle_unknown>
    cf19:	mov    -0x18(%rbp),%r14
    cf1d:	mov    -0x8(%rbp),%r15
    cf21:	jmpq   d0e2 <png_push_read_chunk+0x362>
    cf26:	mov    0x360(%rdi),%rax
    cf2d:	cmp    $0x7,%rax
    cf31:	jbe    d597 <png_push_read_chunk+0x817>
    cf37:	lea    -0x30(%rbp),%r9
    cf3b:	mov    $0x4,%r8d
    cf41:	mov    %rdi,%rcx
    cf44:	mov    %r9,%rax
    cf47:	mov    %r8,%rdx
    cf4a:	mov    %r12,-0x8(%rbp)
    cf4e:	mov    %r13,-0x10(%rbp)
    cf52:	mov    %r14,-0x20(%rbp)
    cf56:	mov    %r15,-0x28(%rbp)
    cf5a:	mov    %r8,%r12
    cf5d:	mov    %rdi,%r13
    cf60:	mov    %rcx,%rdi
    cf63:	mov    %rsi,%r14
    cf66:	mov    %rax,%rsi
    cf69:	mov    %r9,%r15
    cf6c:	callq  cc50 <png_push_fill_buffer>
    cf71:	mov    %r15,%rsi
    cf74:	mov    %r13,%rdi
    cf77:	callq  5730 <png_get_uint_31@plt>
    cf7c:	mov    %eax,0x348(%r13)
    cf83:	mov    %r13,%rdi
    cf86:	callq  6d80 <png_reset_crc>
    cf8b:	mov    %r12,%rdx
    cf8e:	lea    -0x2c(%rbp),%rsi
    cf92:	mov    %r13,%rdi
    cf95:	callq  1b210 <png_crc_read>
    cf9a:	movzbl -0x2c(%rbp),%eax
    cf9e:	shl    $0x18,%eax
    cfa1:	movzbl -0x2b(%rbp),%ecx
    cfa5:	shl    $0x10,%ecx
    cfa8:	add    %eax,%ecx
    cfaa:	movzbl -0x2a(%rbp),%eax
    cfae:	shl    $0x8,%eax
    cfb1:	add    %eax,%ecx
    cfb3:	movzbl -0x29(%rbp),%eax
    cfb7:	lea    (%rcx,%rax,1),%esi
    cfba:	mov    %esi,0x218(%r13)
    cfc1:	mov    %r13,%rdi
    cfc4:	callq  1fcc0 <png_check_chunk_name>
    cfc9:	mov    0x348(%r13),%esi
    cfd0:	mov    %r13,%rdi
    cfd3:	callq  1fd00 <png_check_chunk_length>
    cfd8:	mov    0x12c(%r13),%eax
    cfdf:	or     $0x100,%eax
    cfe4:	mov    %eax,0x12c(%r13)
    cfeb:	mov    -0x28(%rbp),%rcx
    cfef:	mov    -0x20(%rbp),%rax
    cff3:	mov    -0x10(%rbp),%r15
    cff7:	mov    -0x8(%rbp),%r12
    cffb:	jmpq   cdaa <png_push_read_chunk+0x2a>
    d000:	mov    0x12c(%r13),%edx
    d007:	mov    %rdx,%rsi
    d00a:	and    $0x8,%esi
    d00d:	test   %esi,%esi
    d00f:	je     d01e <png_push_read_chunk+0x29e>
    d011:	or     $0x2000,%edx
    d017:	mov    %edx,0x12c(%r13)
    d01e:	mov    0x12c(%r13),%edx
    d025:	mov    %rdx,%rsi
    d028:	and    $0x1,%esi
    d02b:	test   %esi,%esi
    d02d:	je     d59e <png_push_read_chunk+0x81e>
    d033:	movzbl 0x267(%r13),%esi
    d03b:	cmp    $0x3,%sil
    d03f:	je     d5ad <png_push_read_chunk+0x82d>
    d045:	movl   $0x2,0x370(%r13)
    d050:	mov    %rdx,%rsi
    d053:	and    $0x4,%esi
    d056:	test   %esi,%esi
    d058:	jne    d5ca <png_push_read_chunk+0x84a>
    d05e:	mov    0x12c(%r13),%edx
    d065:	mov    %rdx,%rsi
    d068:	or     $0x4,%esi
    d06b:	mov    %esi,0x12c(%r13)
    d072:	and    $0x8,%edx
    d075:	test   %edx,%edx
    d077:	je     cdbe <png_push_read_chunk+0x3e>
    d07d:	lea    0x20670(%rip),%rsi        # 2d6f4 <valid_parameters.6+0x19e>
    d084:	mov    %r13,%rdi
    d087:	mov    %r15,-0x10(%rbp)
    d08b:	mov    %rax,-0x20(%rbp)
    d08f:	mov    %rcx,-0x28(%rbp)
    d093:	mov    %r8,%r15
    d096:	callq  5590 <png_benign_error@plt>
    d09b:	mov    %r15,%r8
    d09e:	mov    -0x28(%rbp),%rcx
    d0a2:	mov    -0x20(%rbp),%rax
    d0a6:	mov    -0x10(%rbp),%r15
    d0aa:	jmpq   cdbe <png_push_read_chunk+0x3e>
    d0af:	mov    0x348(%r13),%edx
    d0b6:	cmp    $0xd,%edx
    d0b9:	jne    d5f2 <png_push_read_chunk+0x872>
    d0bf:	mov    0x360(%r13),%rsi
    d0c6:	cmp    $0x10,%rsi
    d0ca:	jbe    d601 <png_push_read_chunk+0x881>
    d0d0:	mov    %r13,%rdi
    d0d3:	mov    %rcx,-0x28(%rbp)
    d0d7:	mov    %r14,%rsi
    d0da:	mov    %rax,%r14
    d0dd:	callq  1cae0 <png_handle_IHDR>
    d0e2:	mov    0x12c(%r13),%eax
    d0e9:	and    $0xfffffeff,%eax
    d0ee:	mov    %eax,0x12c(%r13)
    d0f5:	mov    %r15,%r13
    d0f8:	mov    -0x28(%rbp),%r15
    d0fc:	leaveq 
    d0fd:	retq   
    d0fe:	mov    0x360(%r13),%rdi
    d105:	mov    0x348(%r13),%edx
    d10c:	lea    0x4(%rdx),%esi
    d10f:	mov    %esi,%esi
    d111:	cmp    %rsi,%rdi
    d114:	jb     d61a <png_push_read_chunk+0x89a>
    d11a:	mov    %r13,%rdi
    d11d:	mov    %r14,%rsi
    d120:	mov    %rax,-0x18(%rbp)
    d124:	mov    %rcx,-0x28(%rbp)
    d128:	callq  1cf50 <png_handle_IEND>
    d12d:	mov    %r14,%rsi
    d130:	movl   $0x6,0x370(%r13)
    d13b:	mov    %r13,%rdi
    d13e:	callq  e720 <png_push_have_end>
    d143:	mov    -0x18(%rbp),%r14
    d147:	jmp    d0e2 <png_push_read_chunk+0x362>
    d149:	mov    0x360(%r13),%rsi
    d150:	mov    0x348(%r13),%edx
    d157:	lea    0x4(%rdx),%ecx
    d15a:	mov    %ecx,%ecx
    d15c:	cmp    %rcx,%rsi
    d15f:	jb     d633 <png_push_read_chunk+0x8b3>
    d165:	mov    %rax,%rcx
    d168:	mov    %r14,%rsi
    d16b:	mov    %r13,%rdi
    d16e:	callq  1fe00 <png_handle_unknown>
    d173:	cmp    $0x504c5445,%r15d
    d17a:	je     d649 <png_push_read_chunk+0x8c9>
    d180:	mov    -0x18(%rbp),%r14
    d184:	mov    -0x8(%rbp),%r15
    d188:	jmpq   d0e2 <png_push_read_chunk+0x362>
    d18d:	mov    0x360(%r13),%rcx
    d194:	mov    0x348(%r13),%edx
    d19b:	lea    0x4(%rdx),%eax
    d19e:	mov    %eax,%eax
    d1a0:	cmp    %rax,%rcx
    d1a3:	jb     d667 <png_push_read_chunk+0x8e7>
    d1a9:	mov    %r14,%rsi
    d1ac:	mov    %r13,%rdi
    d1af:	callq  1cc70 <png_handle_PLTE>
    d1b4:	mov    -0x18(%rbp),%r14
    d1b8:	mov    -0x8(%rbp),%r15
    d1bc:	jmpq   d0e2 <png_push_read_chunk+0x362>
    d1c1:	mov    0x348(%r13),%eax
    d1c8:	mov    %eax,0x248(%r13)
    d1cf:	mov    %r14,%rsi
    d1d2:	movl   $0x2,0x370(%r13)
    d1dd:	mov    %r13,%rdi
    d1e0:	callq  e700 <png_push_have_info>
    d1e5:	movzbl 0x26a(%r13),%eax
    d1ed:	cmp    $0x7,%al
    d1ef:	ja     d67d <png_push_read_chunk+0x8fd>
    d1f5:	mov    0x210(%r13),%ecx
    d1fc:	imul   %rcx,%rax
    d200:	add    $0x7,%rax
    d204:	shr    $0x3,%rax
    d208:	jmpq   d689 <png_push_read_chunk+0x909>
    d20d:	mov    0x360(%r13),%rcx
    d214:	mov    0x348(%r13),%edx
    d21b:	lea    0x4(%rdx),%eax
    d21e:	mov    %eax,%eax
    d220:	cmp    %rax,%rcx
    d223:	jb     d6af <png_push_read_chunk+0x92f>
    d229:	mov    %r14,%rsi
    d22c:	mov    %r13,%rdi
    d22f:	callq  1d690 <png_handle_gAMA>
    d234:	mov    -0x18(%rbp),%r14
    d238:	mov    -0x8(%rbp),%r15
    d23c:	jmpq   d0e2 <png_push_read_chunk+0x362>
    d241:	mov    0x360(%r13),%rcx
    d248:	mov    0x348(%r13),%edx
    d24f:	lea    0x4(%rdx),%eax
    d252:	mov    %eax,%eax
    d254:	cmp    %rax,%rcx
    d257:	jb     d6c5 <png_push_read_chunk+0x945>
    d25d:	mov    %r14,%rsi
    d260:	mov    %r13,%rdi
    d263:	callq  1eae0 <png_handle_sBIT>
    d268:	mov    -0x18(%rbp),%r14
    d26c:	mov    -0x8(%rbp),%r15
    d270:	jmpq   d0e2 <png_push_read_chunk+0x362>
    d275:	mov    0x360(%r13),%rcx
    d27c:	mov    0x348(%r13),%edx
    d283:	lea    0x4(%rdx),%eax
    d286:	mov    %eax,%eax
    d288:	cmp    %rax,%rcx
    d28b:	jb     d6db <png_push_read_chunk+0x95b>
    d291:	mov    %r14,%rsi
    d294:	mov    %r13,%rdi
    d297:	callq  1d230 <png_handle_cHRM>
    d29c:	mov    -0x18(%rbp),%r14
    d2a0:	mov    -0x8(%rbp),%r15
    d2a4:	jmpq   d0e2 <png_push_read_chunk+0x362>
    d2a9:	mov    0x360(%r13),%rcx
    d2b0:	mov    0x348(%r13),%edx
    d2b7:	lea    0x4(%rdx),%eax
    d2ba:	mov    %eax,%eax
    d2bc:	cmp    %rax,%rcx
    d2bf:	jb     d6f1 <png_push_read_chunk+0x971>
    d2c5:	mov    %r14,%rsi
    d2c8:	mov    %r13,%rdi
    d2cb:	callq  1f320 <png_handle_sRGB>
    d2d0:	mov    -0x18(%rbp),%r14
    d2d4:	mov    -0x8(%rbp),%r15
    d2d8:	jmpq   d0e2 <png_push_read_chunk+0x362>
    d2dd:	mov    0x360(%r13),%rax
    d2e4:	mov    0x348(%r13),%edx
    d2eb:	lea    0x4(%rdx),%ecx
    d2ee:	mov    %ecx,%ecx
    d2f0:	cmp    %rcx,%rax
    d2f3:	jb     d707 <png_push_read_chunk+0x987>
    d2f9:	mov    %r14,%rsi
    d2fc:	mov    %r13,%rdi
    d2ff:	callq  1d920 <png_handle_iCCP>
    d304:	mov    -0x18(%rbp),%r14
    d308:	mov    -0x8(%rbp),%r15
    d30c:	jmpq   d0e2 <png_push_read_chunk+0x362>
    d311:	mov    0x360(%r13),%rcx
    d318:	mov    0x348(%r13),%edx
    d31f:	lea    0x4(%rdx),%eax
    d322:	mov    %eax,%eax
    d324:	cmp    %rax,%rcx
    d327:	jb     d71d <png_push_read_chunk+0x99d>
    d32d:	mov    %r14,%rsi
    d330:	mov    %r13,%rdi
    d333:	callq  1f010 <png_handle_sPLT>
    d338:	mov    -0x18(%rbp),%r14
    d33c:	mov    -0x8(%rbp),%r15
    d340:	jmpq   d0e2 <png_push_read_chunk+0x362>
    d345:	mov    0x360(%r13),%rcx
    d34c:	mov    0x348(%r13),%edx
    d353:	lea    0x4(%rdx),%eax
    d356:	mov    %eax,%eax
    d358:	cmp    %rax,%rcx
    d35b:	jb     d733 <png_push_read_chunk+0x9b3>
    d361:	mov    %r14,%rsi
    d364:	mov    %r13,%rdi
    d367:	callq  1f730 <png_handle_tRNS>
    d36c:	mov    -0x18(%rbp),%r14
    d370:	mov    -0x8(%rbp),%r15
    d374:	jmpq   d0e2 <png_push_read_chunk+0x362>
    d379:	mov    0x360(%r13),%rcx
    d380:	mov    0x348(%r13),%edx
    d387:	lea    0x4(%rdx),%eax
    d38a:	mov    %eax,%eax
    d38c:	cmp    %rax,%rcx
    d38f:	jb     d749 <png_push_read_chunk+0x9c9>
    d395:	mov    %r14,%rsi
    d398:	mov    %r13,%rdi
    d39b:	callq  1cfd0 <png_handle_bKGD>
    d3a0:	mov    -0x18(%rbp),%r14
    d3a4:	mov    -0x8(%rbp),%r15
    d3a8:	jmpq   d0e2 <png_push_read_chunk+0x362>
    d3ad:	mov    0x360(%r13),%rcx
    d3b4:	mov    0x348(%r13),%edx
    d3bb:	lea    0x4(%rdx),%eax
    d3be:	mov    %eax,%eax
    d3c0:	cmp    %rax,%rcx
    d3c3:	jb     d75f <png_push_read_chunk+0x9df>
    d3c9:	mov    %r14,%rsi
    d3cc:	mov    %r13,%rdi
    d3cf:	callq  1d780 <png_handle_hIST>
    d3d4:	mov    -0x18(%rbp),%r14
    d3d8:	mov    -0x8(%rbp),%r15
    d3dc:	jmpq   d0e2 <png_push_read_chunk+0x362>
    d3e1:	mov    0x360(%r13),%rax
    d3e8:	mov    0x348(%r13),%edx
    d3ef:	lea    0x4(%rdx),%ecx
    d3f2:	mov    %ecx,%ecx
    d3f4:	cmp    %rcx,%rax
    d3f7:	jb     d775 <png_push_read_chunk+0x9f5>
    d3fd:	mov    %r14,%rsi
    d400:	mov    %r13,%rdi
    d403:	callq  1e980 <png_handle_pHYs>
    d408:	mov    -0x18(%rbp),%r14
    d40c:	mov    -0x8(%rbp),%r15
    d410:	jmpq   d0e2 <png_push_read_chunk+0x362>
    d415:	mov    0x360(%r13),%rcx
    d41c:	mov    0x348(%r13),%edx
    d423:	lea    0x4(%rdx),%eax
    d426:	mov    %eax,%eax
    d428:	cmp    %rax,%rcx
    d42b:	jb     d78b <png_push_read_chunk+0xa0b>
    d431:	mov    %r14,%rsi
    d434:	mov    %r13,%rdi
    d437:	callq  1e410 <png_handle_oFFs>
    d43c:	mov    -0x18(%rbp),%r14
    d440:	mov    -0x8(%rbp),%r15
    d444:	jmpq   d0e2 <png_push_read_chunk+0x362>
    d449:	mov    0x360(%r13),%rcx
    d450:	mov    0x348(%r13),%edx
    d457:	lea    0x4(%rdx),%eax
    d45a:	mov    %eax,%eax
    d45c:	cmp    %rax,%rcx
    d45f:	jb     d7a1 <png_push_read_chunk+0xa21>
    d465:	mov    %r14,%rsi
    d468:	mov    %r13,%rdi
    d46b:	callq  1e5d0 <png_handle_pCAL>
    d470:	mov    -0x18(%rbp),%r14
    d474:	mov    -0x8(%rbp),%r15
    d478:	jmpq   d0e2 <png_push_read_chunk+0x362>
    d47d:	mov    0x360(%r13),%rcx
    d484:	mov    0x348(%r13),%edx
    d48b:	lea    0x4(%rdx),%eax
    d48e:	mov    %eax,%eax
    d490:	cmp    %rax,%rcx
    d493:	jb     d7b7 <png_push_read_chunk+0xa37>
    d499:	mov    %r14,%rsi
    d49c:	mov    %r13,%rdi
    d49f:	callq  1ed00 <png_handle_sCAL>
    d4a4:	mov    -0x18(%rbp),%r14
    d4a8:	mov    -0x8(%rbp),%r15
    d4ac:	jmpq   d0e2 <png_push_read_chunk+0x362>
    d4b1:	mov    0x360(%r13),%rcx
    d4b8:	mov    0x348(%r13),%edx
    d4bf:	lea    0x4(%rdx),%eax
    d4c2:	mov    %eax,%eax
    d4c4:	cmp    %rax,%rcx
    d4c7:	jb     d7cd <png_push_read_chunk+0xa4d>
    d4cd:	mov    %r14,%rsi
    d4d0:	mov    %r13,%rdi
    d4d3:	callq  1f600 <png_handle_tIME>
    d4d8:	mov    -0x18(%rbp),%r14
    d4dc:	mov    -0x8(%rbp),%r15
    d4e0:	jmpq   d0e2 <png_push_read_chunk+0x362>
    d4e5:	mov    0x360(%r13),%rcx
    d4ec:	mov    0x348(%r13),%edx
    d4f3:	lea    0x4(%rdx),%eax
    d4f6:	mov    %eax,%eax
    d4f8:	cmp    %rax,%rcx
    d4fb:	jb     d7e3 <png_push_read_chunk+0xa63>
    d501:	mov    %r14,%rsi
    d504:	mov    %r13,%rdi
    d507:	callq  1f460 <png_handle_tEXt>
    d50c:	mov    -0x18(%rbp),%r14
    d510:	mov    -0x8(%rbp),%r15
    d514:	jmpq   d0e2 <png_push_read_chunk+0x362>
    d519:	mov    0x360(%r13),%rcx
    d520:	mov    0x348(%r13),%edx
    d527:	lea    0x4(%rdx),%eax
    d52a:	mov    %eax,%eax
    d52c:	cmp    %rax,%rcx
    d52f:	jb     d7f9 <png_push_read_chunk+0xa79>
    d535:	mov    %r14,%rsi
    d538:	mov    %r13,%rdi
    d53b:	callq  1fa40 <png_handle_zTXt>
    d540:	mov    -0x18(%rbp),%r14
    d544:	mov    -0x8(%rbp),%r15
    d548:	jmpq   d0e2 <png_push_read_chunk+0x362>
    d54d:	mov    0x360(%r13),%rcx
    d554:	mov    0x348(%r13),%edx
    d55b:	lea    0x4(%rdx),%eax
    d55e:	mov    %eax,%eax
    d560:	cmp    %rax,%rcx
    d563:	jb     d80f <png_push_read_chunk+0xa8f>
    d569:	mov    %r14,%rsi
    d56c:	mov    %r13,%rdi
    d56f:	callq  1e080 <png_handle_iTXt>
    d574:	mov    -0x18(%rbp),%r14
    d578:	mov    -0x8(%rbp),%r15
    d57c:	jmpq   d0e2 <png_push_read_chunk+0x362>
    d581:	mov    %r13,%rdi
    d584:	callq  d920 <png_push_save_buffer>
    d589:	mov    -0x28(%rbp),%r15
    d58d:	mov    -0x18(%rbp),%r14
    d591:	mov    -0x8(%rbp),%r13
    d595:	leaveq 
    d596:	retq   
    d597:	callq  d920 <png_push_save_buffer>
    d59c:	leaveq 
    d59d:	retq   
    d59e:	mov    %r13,%rdi
    d5a1:	lea    0x2011a(%rip),%rsi        # 2d6c2 <valid_parameters.6+0x16c>
    d5a8:	callq  5470 <png_error@plt>
    d5ad:	mov    %rdx,%rsi
    d5b0:	and    $0x2,%esi
    d5b3:	test   %esi,%esi
    d5b5:	jne    d045 <png_push_read_chunk+0x2c5>
    d5bb:	mov    %r13,%rdi
    d5be:	lea    0x20116(%rip),%rsi        # 2d6db <valid_parameters.6+0x185>
    d5c5:	callq  5470 <png_error@plt>
    d5ca:	and    $0x2000,%edx
    d5d0:	test   %edx,%edx
    d5d2:	jne    d05e <png_push_read_chunk+0x2de>
    d5d8:	mov    0x348(%r13),%edx
    d5df:	test   %edx,%edx
    d5e1:	jne    d05e <png_push_read_chunk+0x2de>
    d5e7:	mov    %r15,%r13
    d5ea:	mov    %rcx,%r15
    d5ed:	mov    %rax,%r14
    d5f0:	leaveq 
    d5f1:	retq   
    d5f2:	mov    %r13,%rdi
    d5f5:	lea    0x2010d(%rip),%rsi        # 2d709 <valid_parameters.6+0x1b3>
    d5fc:	callq  5470 <png_error@plt>
    d601:	mov    %r13,%rdi
    d604:	mov    %rcx,%r13
    d607:	mov    %rax,%r14
    d60a:	callq  d920 <png_push_save_buffer>
    d60f:	mov    %r15,%rax
    d612:	mov    %r13,%r15
    d615:	mov    %rax,%r13
    d618:	leaveq 
    d619:	retq   
    d61a:	mov    %r13,%rdi
    d61d:	mov    %rcx,%r13
    d620:	mov    %rax,%r14
    d623:	callq  d920 <png_push_save_buffer>
    d628:	mov    %r15,%rax
    d62b:	mov    %r13,%r15
    d62e:	mov    %rax,%r13
    d631:	leaveq 
    d632:	retq   
    d633:	mov    %r13,%rdi
    d636:	callq  d920 <png_push_save_buffer>
    d63b:	mov    -0x28(%rbp),%r15
    d63f:	mov    -0x18(%rbp),%r14
    d643:	mov    -0x8(%rbp),%r13
    d647:	leaveq 
    d648:	retq   
    d649:	mov    0x12c(%r13),%eax
    d650:	or     $0x2,%eax
    d653:	mov    %eax,0x12c(%r13)
    d65a:	mov    -0x18(%rbp),%r14
    d65e:	mov    -0x8(%rbp),%r15
    d662:	jmpq   d0e2 <png_push_read_chunk+0x362>
    d667:	mov    %r13,%rdi
    d66a:	callq  d920 <png_push_save_buffer>
    d66f:	mov    -0x28(%rbp),%r15
    d673:	mov    -0x18(%rbp),%r14
    d677:	mov    -0x8(%rbp),%r13
    d67b:	leaveq 
    d67c:	retq   
    d67d:	shr    $0x3,%rax
    d681:	imul   0x210(%r13),%eax
    d689:	add    $0x1,%eax
    d68c:	mov    %eax,0x160(%r13)
    d693:	mov    0x228(%r13),%rax
    d69a:	mov    %rax,0x158(%r13)
    d6a1:	mov    -0x28(%rbp),%r15
    d6a5:	mov    -0x18(%rbp),%r14
    d6a9:	mov    -0x8(%rbp),%r13
    d6ad:	leaveq 
    d6ae:	retq   
    d6af:	mov    %r13,%rdi
    d6b2:	callq  d920 <png_push_save_buffer>
    d6b7:	mov    -0x28(%rbp),%r15
    d6bb:	mov    -0x18(%rbp),%r14
    d6bf:	mov    -0x8(%rbp),%r13
    d6c3:	leaveq 
    d6c4:	retq   
    d6c5:	mov    %r13,%rdi
    d6c8:	callq  d920 <png_push_save_buffer>
    d6cd:	mov    -0x28(%rbp),%r15
    d6d1:	mov    -0x18(%rbp),%r14
    d6d5:	mov    -0x8(%rbp),%r13
    d6d9:	leaveq 
    d6da:	retq   
    d6db:	mov    %r13,%rdi
    d6de:	callq  d920 <png_push_save_buffer>
    d6e3:	mov    -0x28(%rbp),%r15
    d6e7:	mov    -0x18(%rbp),%r14
    d6eb:	mov    -0x8(%rbp),%r13
    d6ef:	leaveq 
    d6f0:	retq   
    d6f1:	mov    %r13,%rdi
    d6f4:	callq  d920 <png_push_save_buffer>
    d6f9:	mov    -0x28(%rbp),%r15
    d6fd:	mov    -0x18(%rbp),%r14
    d701:	mov    -0x8(%rbp),%r13
    d705:	leaveq 
    d706:	retq   
    d707:	mov    %r13,%rdi
    d70a:	callq  d920 <png_push_save_buffer>
    d70f:	mov    -0x28(%rbp),%r15
    d713:	mov    -0x18(%rbp),%r14
    d717:	mov    -0x8(%rbp),%r13
    d71b:	leaveq 
    d71c:	retq   
    d71d:	mov    %r13,%rdi
    d720:	callq  d920 <png_push_save_buffer>
    d725:	mov    -0x28(%rbp),%r15
    d729:	mov    -0x18(%rbp),%r14
    d72d:	mov    -0x8(%rbp),%r13
    d731:	leaveq 
    d732:	retq   
    d733:	mov    %r13,%rdi
    d736:	callq  d920 <png_push_save_buffer>
    d73b:	mov    -0x28(%rbp),%r15
    d73f:	mov    -0x18(%rbp),%r14
    d743:	mov    -0x8(%rbp),%r13
    d747:	leaveq 
    d748:	retq   
    d749:	mov    %r13,%rdi
    d74c:	callq  d920 <png_push_save_buffer>
    d751:	mov    -0x28(%rbp),%r15
    d755:	mov    -0x18(%rbp),%r14
    d759:	mov    -0x8(%rbp),%r13
    d75d:	leaveq 
    d75e:	retq   
    d75f:	mov    %r13,%rdi
    d762:	callq  d920 <png_push_save_buffer>
    d767:	mov    -0x28(%rbp),%r15
    d76b:	mov    -0x18(%rbp),%r14
    d76f:	mov    -0x8(%rbp),%r13
    d773:	leaveq 
    d774:	retq   
    d775:	mov    %r13,%rdi
    d778:	callq  d920 <png_push_save_buffer>
    d77d:	mov    -0x28(%rbp),%r15
    d781:	mov    -0x18(%rbp),%r14
    d785:	mov    -0x8(%rbp),%r13
    d789:	leaveq 
    d78a:	retq   
    d78b:	mov    %r13,%rdi
    d78e:	callq  d920 <png_push_save_buffer>
    d793:	mov    -0x28(%rbp),%r15
    d797:	mov    -0x18(%rbp),%r14
    d79b:	mov    -0x8(%rbp),%r13
    d79f:	leaveq 
    d7a0:	retq   
    d7a1:	mov    %r13,%rdi
    d7a4:	callq  d920 <png_push_save_buffer>
    d7a9:	mov    -0x28(%rbp),%r15
    d7ad:	mov    -0x18(%rbp),%r14
    d7b1:	mov    -0x8(%rbp),%r13
    d7b5:	leaveq 
    d7b6:	retq   
    d7b7:	mov    %r13,%rdi
    d7ba:	callq  d920 <png_push_save_buffer>
    d7bf:	mov    -0x28(%rbp),%r15
    d7c3:	mov    -0x18(%rbp),%r14
    d7c7:	mov    -0x8(%rbp),%r13
    d7cb:	leaveq 
    d7cc:	retq   
    d7cd:	mov    %r13,%rdi
    d7d0:	callq  d920 <png_push_save_buffer>
    d7d5:	mov    -0x28(%rbp),%r15
    d7d9:	mov    -0x18(%rbp),%r14
    d7dd:	mov    -0x8(%rbp),%r13
    d7e1:	leaveq 
    d7e2:	retq   
    d7e3:	mov    %r13,%rdi
    d7e6:	callq  d920 <png_push_save_buffer>
    d7eb:	mov    -0x28(%rbp),%r15
    d7ef:	mov    -0x18(%rbp),%r14
    d7f3:	mov    -0x8(%rbp),%r13
    d7f7:	leaveq 
    d7f8:	retq   
    d7f9:	mov    %r13,%rdi
    d7fc:	callq  d920 <png_push_save_buffer>
    d801:	mov    -0x28(%rbp),%r15
    d805:	mov    -0x18(%rbp),%r14
    d809:	mov    -0x8(%rbp),%r13
    d80d:	leaveq 
    d80e:	retq   
    d80f:	mov    %r13,%rdi
    d812:	callq  d920 <png_push_save_buffer>
    d817:	mov    -0x28(%rbp),%r15
    d81b:	mov    -0x18(%rbp),%r14
    d81f:	mov    -0x8(%rbp),%r13
    d823:	leaveq 
    d824:	retq   
    d825:	data16 nopw %cs:0x0(%rax,%rax,1)

000000000000d830 <png_push_read_sig>:
    d830:	push   %rbp
    d831:	mov    %rsp,%rbp
    d834:	sub    $0x20,%rsp
    d838:	mov    %r12,-0x8(%rbp)
    d83c:	mov    %r13,-0x10(%rbp)
    d840:	mov    %r14,-0x18(%rbp)
    d844:	mov    %r15,-0x20(%rbp)
    d848:	movzbl 0x26d(%rdi),%r14d
    d850:	mov    $0x8,%r12d
    d856:	sub    %r14,%r12
    d859:	mov    0x360(%rdi),%rax
    d860:	cmp    %r12,%rax
    d863:	jae    d868 <png_push_read_sig+0x38>
    d865:	mov    %rax,%r12
    d868:	mov    %rbx,%r13
    d86b:	mov    %rsi,%r15
    d86e:	lea    0x2c(%r15,%r14,1),%rsi
    d873:	mov    %rdi,%rbx
    d876:	mov    %r12,%rdx
    d879:	callq  cc50 <png_push_fill_buffer>
    d87e:	movzbl 0x26d(%rbx),%eax
    d885:	add    %r12d,%eax
    d888:	mov    %al,0x26d(%rbx)
    d88e:	add    $0x2c,%r15
    d892:	mov    %r15,%rdi
    d895:	mov    %r14,%rsi
    d898:	mov    %r12,%rdx
    d89b:	callq  57d0 <png_sig_cmp@plt>
    d8a0:	test   %eax,%eax
    d8a2:	jne    d8c4 <png_push_read_sig+0x94>
    d8a4:	movzbl 0x26d(%rbx),%eax
    d8ab:	cmp    $0x7,%al
    d8ad:	ja     d8d9 <png_push_read_sig+0xa9>
    d8af:	mov    %r13,%rbx
    d8b2:	mov    -0x20(%rbp),%r15
    d8b6:	mov    -0x18(%rbp),%r14
    d8ba:	mov    -0x10(%rbp),%r13
    d8be:	mov    -0x8(%rbp),%r12
    d8c2:	leaveq 
    d8c3:	retq   
    d8c4:	cmp    $0x3,%r14b
    d8c8:	jbe    d8f8 <png_push_read_sig+0xc8>
    d8ca:	mov    %rbx,%rdi
    d8cd:	lea    0x1fe58(%rip),%rsi        # 2d72c <valid_parameters.6+0x1d6>
    d8d4:	callq  5470 <png_error@plt>
    d8d9:	movl   $0x1,0x370(%rbx)
    d8e3:	mov    %r13,%rbx
    d8e6:	mov    -0x20(%rbp),%r15
    d8ea:	mov    -0x18(%rbp),%r14
    d8ee:	mov    -0x10(%rbp),%r13
    d8f2:	mov    -0x8(%rbp),%r12
    d8f6:	leaveq 
    d8f7:	retq   
    d8f8:	lea    -0x4(%r12),%rdx
    d8fd:	mov    %r14,%rsi
    d900:	mov    %r15,%rdi
    d903:	callq  57d0 <png_sig_cmp@plt>
    d908:	test   %eax,%eax
    d90a:	je     d8ca <png_push_read_sig+0x9a>
    d90c:	mov    %rbx,%rdi
    d90f:	lea    0x1fe07(%rip),%rsi        # 2d71d <valid_parameters.6+0x1c7>
    d916:	callq  5470 <png_error@plt>
    d91b:	nopl   0x0(%rax,%rax,1)

000000000000d920 <png_push_save_buffer>:
    d920:	push   %rbp
    d921:	mov    %rsp,%rbp
    d924:	sub    $0x20,%rsp
    d928:	mov    0x350(%rdi),%rsi
    d92f:	test   %rsi,%rsi
    d932:	jne    d9d8 <png_push_save_buffer+0xb8>
    d938:	mov    0x368(%rdi),%rsi
    d93f:	mov    0x350(%rdi),%rdx
    d946:	lea    (%rsi,%rdx,1),%rcx
    d94a:	mov    0x358(%rdi),%rax
    d951:	cmp    %rcx,%rax
    d954:	jb     d9f3 <png_push_save_buffer+0xd3>
    d95a:	mov    %r15,%rax
    d95d:	mov    %r14,%r15
    d960:	mov    %r13,%r14
    d963:	mov    %rdi,%r13
    d966:	mov    0x368(%r13),%rdx
    d96d:	test   %rdx,%rdx
    d970:	je     d9b4 <png_push_save_buffer+0x94>
    d972:	mov    0x350(%r13),%rdi
    d979:	add    0x330(%r13),%rdi
    d980:	mov    0x338(%r13),%rsi
    d987:	mov    %rax,-0x18(%rbp)
    d98b:	callq  54c0 <memcpy@plt>
    d990:	mov    0x350(%r13),%rax
    d997:	add    0x368(%r13),%rax
    d99e:	mov    %rax,0x350(%r13)
    d9a5:	movq   $0x0,0x368(%r13)
    d9b0:	mov    -0x18(%rbp),%rax
    d9b4:	mov    0x330(%r13),%rcx
    d9bb:	mov    %rcx,0x328(%r13)
    d9c2:	movq   $0x0,0x360(%r13)
    d9cd:	mov    %r14,%r13
    d9d0:	mov    %r15,%r14
    d9d3:	mov    %rax,%r15
    d9d6:	leaveq 
    d9d7:	retq   
    d9d8:	mov    0x330(%rdi),%rcx
    d9df:	mov    0x328(%rdi),%rax
    d9e6:	cmp    %rax,%rcx
    d9e9:	je     d938 <png_push_save_buffer+0x18>
    d9ef:	xor    %edx,%edx
    d9f1:	jmp    da72 <png_push_save_buffer+0x152>
    d9f3:	mov    $0xfffffffffffffeff,%rax
    d9fa:	sub    %rsi,%rax
    d9fd:	cmp    %rax,%rdx
    da00:	ja     da7c <png_push_save_buffer+0x15c>
    da02:	mov    0x330(%rdi),%rax
    da09:	add    $0x100,%rcx
    da10:	mov    %rdi,%rdx
    da13:	mov    %rcx,%rsi
    da16:	mov    %r13,-0x8(%rbp)
    da1a:	mov    %r14,-0x10(%rbp)
    da1e:	mov    %r15,-0x18(%rbp)
    da22:	mov    %rdi,%r13
    da25:	mov    %rdx,%rdi
    da28:	mov    %rax,%r14
    da2b:	mov    %rcx,%r15
    da2e:	callq  5150 <png_malloc_warn@plt>
    da33:	mov    %rax,0x330(%r13)
    da3a:	test   %rax,%rax
    da3d:	je     da88 <png_push_save_buffer+0x168>
    da3f:	test   %r14,%r14
    da42:	jne    daa2 <png_push_save_buffer+0x182>
    da44:	mov    0x350(%r13),%rax
    da4b:	test   %rax,%rax
    da4e:	je     dab4 <png_push_save_buffer+0x194>
    da50:	mov    %r13,%rdi
    da53:	lea    0x1fd3f(%rip),%rsi        # 2d799 <valid_parameters.6+0x243>
    da5a:	callq  5470 <png_error@plt>
    da5f:	movzbl (%rax),%r8d
    da63:	mov    %r8b,(%rcx)
    da66:	add    $0x1,%rax
    da6a:	add    $0x1,%rcx
    da6e:	add    $0x1,%rdx
    da72:	cmp    %rdx,%rsi
    da75:	ja     da5f <png_push_save_buffer+0x13f>
    da77:	jmpq   d938 <png_push_save_buffer+0x18>
    da7c:	lea    0x1fcd0(%rip),%rsi        # 2d753 <valid_parameters.6+0x1fd>
    da83:	callq  5470 <png_error@plt>
    da88:	mov    %r14,%rsi
    da8b:	mov    %r13,%rdi
    da8e:	callq  5790 <png_free@plt>
    da93:	mov    %r13,%rdi
    da96:	lea    0x1fcd8(%rip),%rsi        # 2d775 <valid_parameters.6+0x21f>
    da9d:	callq  5470 <png_error@plt>
    daa2:	mov    %rax,%rdi
    daa5:	mov    0x350(%r13),%rdx
    daac:	mov    %r14,%rsi
    daaf:	callq  54c0 <memcpy@plt>
    dab4:	mov    %r14,%rsi
    dab7:	mov    %r13,%rdi
    daba:	callq  5790 <png_free@plt>
    dabf:	mov    %r15,0x358(%r13)
    dac6:	mov    -0x18(%rbp),%rax
    daca:	mov    -0x10(%rbp),%r15
    dace:	mov    -0x8(%rbp),%r14
    dad2:	jmpq   d966 <png_push_save_buffer+0x46>
    dad7:	nopw   0x0(%rax,%rax,1)

000000000000dae0 <png_push_restore_buffer>:
    dae0:	push   %rbp
    dae1:	mov    %rsp,%rbp
    dae4:	mov    %rsi,0x340(%rdi)
    daeb:	mov    %rdx,0x368(%rdi)
    daf2:	add    0x350(%rdi),%rdx
    daf9:	mov    %rdx,0x360(%rdi)
    db00:	mov    %rsi,0x338(%rdi)
    db07:	leaveq 
    db08:	retq   
    db09:	nopl   0x0(%rax)

000000000000db10 <png_push_read_IDAT>:
    db10:	push   %rbp
    db11:	mov    %rsp,%rbp
    db14:	sub    $0x20,%rsp
    db18:	mov    0x12c(%rdi),%eax
    db1e:	and    $0x100,%eax
    db23:	test   %eax,%eax
    db25:	je     db5f <png_push_read_IDAT+0x4f>
    db27:	mov    %r15,%rax
    db2a:	mov    %rdi,%r15
    db2d:	mov    0x248(%r15),%edx
    db34:	test   %edx,%edx
    db36:	jne    dc13 <png_push_read_IDAT+0x103>
    db3c:	mov    0x248(%r15),%edx
    db43:	test   %edx,%edx
    db45:	jne    dca8 <png_push_read_IDAT+0x198>
    db4b:	mov    0x248(%r15),%ecx
    db52:	test   %ecx,%ecx
    db54:	je     dd3d <png_push_read_IDAT+0x22d>
    db5a:	mov    %rax,%r15
    db5d:	leaveq 
    db5e:	retq   
    db5f:	mov    0x360(%rdi),%rax
    db66:	cmp    $0x7,%rax
    db6a:	jbe    dd7f <png_push_read_IDAT+0x26f>
    db70:	lea    -0x18(%rbp),%rsi
    db74:	mov    $0x4,%edx
    db79:	mov    %rdi,%rax
    db7c:	mov    %r15,-0x10(%rbp)
    db80:	mov    %rdi,%r15
    db83:	mov    %rax,%rdi
    db86:	callq  cc50 <png_push_fill_buffer>
    db8b:	mov    %r15,%rdi
    db8e:	lea    -0x18(%rbp),%rsi
    db92:	callq  5730 <png_get_uint_31@plt>
    db97:	mov    %eax,0x348(%r15)
    db9e:	mov    %r15,%rdi
    dba1:	callq  6d80 <png_reset_crc>
    dba6:	lea    -0x14(%rbp),%rsi
    dbaa:	mov    %r15,%rdi
    dbad:	mov    $0x4,%edx
    dbb2:	callq  1b210 <png_crc_read>
    dbb7:	movzbl -0x14(%rbp),%eax
    dbbb:	shl    $0x18,%eax
    dbbe:	movzbl -0x13(%rbp),%ecx
    dbc2:	shl    $0x10,%ecx
    dbc5:	add    %eax,%ecx
    dbc7:	movzbl -0x12(%rbp),%eax
    dbcb:	shl    $0x8,%eax
    dbce:	add    %eax,%ecx
    dbd0:	movzbl -0x11(%rbp),%eax
    dbd4:	add    %eax,%ecx
    dbd6:	mov    %ecx,0x218(%r15)
    dbdd:	mov    0x12c(%r15),%eax
    dbe4:	or     $0x100,%eax
    dbe9:	mov    %eax,0x12c(%r15)
    dbf0:	cmp    $0x49444154,%ecx
    dbf6:	jne    dd86 <png_push_read_IDAT+0x276>
    dbfc:	mov    0x348(%r15),%eax
    dc03:	mov    %eax,0x248(%r15)
    dc0a:	mov    -0x10(%rbp),%rax
    dc0e:	jmpq   db2d <png_push_read_IDAT+0x1d>
    dc13:	mov    0x350(%r15),%rcx
    dc1a:	test   %rcx,%rcx
    dc1d:	je     db3c <png_push_read_IDAT+0x2c>
    dc23:	cmp    %rdx,%rcx
    dc26:	jbe    dc2b <png_push_read_IDAT+0x11b>
    dc28:	mov    %rdx,%rcx
    dc2b:	mov    0x328(%r15),%rsi
    dc32:	mov    %r15,%rdi
    dc35:	mov    %rcx,%rdx
    dc38:	mov    %rax,-0x10(%rbp)
    dc3c:	mov    %r14,-0x8(%rbp)
    dc40:	mov    %rcx,%r14
    dc43:	callq  6db0 <png_calculate_crc>
    dc48:	mov    0x328(%r15),%rsi
    dc4f:	mov    %r15,%rdi
    dc52:	mov    %r14,%rdx
    dc55:	callq  ddd0 <png_process_IDAT_data>
    dc5a:	mov    0x248(%r15),%eax
    dc61:	sub    %r14d,%eax
    dc64:	mov    %eax,0x248(%r15)
    dc6b:	mov    0x360(%r15),%rax
    dc72:	sub    %r14,%rax
    dc75:	mov    %rax,0x360(%r15)
    dc7c:	mov    0x350(%r15),%rax
    dc83:	sub    %r14,%rax
    dc86:	mov    %rax,0x350(%r15)
    dc8d:	add    0x328(%r15),%r14
    dc94:	mov    %r14,0x328(%r15)
    dc9b:	mov    -0x8(%rbp),%r14
    dc9f:	mov    -0x10(%rbp),%rax
    dca3:	jmpq   db3c <png_push_read_IDAT+0x2c>
    dca8:	mov    0x368(%r15),%rcx
    dcaf:	test   %rcx,%rcx
    dcb2:	je     db4b <png_push_read_IDAT+0x3b>
    dcb8:	cmp    %rdx,%rcx
    dcbb:	jbe    dcc0 <png_push_read_IDAT+0x1b0>
    dcbd:	mov    %rdx,%rcx
    dcc0:	mov    0x338(%r15),%rsi
    dcc7:	mov    %r15,%rdi
    dcca:	mov    %rcx,%rdx
    dccd:	mov    %rax,-0x10(%rbp)
    dcd1:	mov    %r14,-0x8(%rbp)
    dcd5:	mov    %rcx,%r14
    dcd8:	callq  6db0 <png_calculate_crc>
    dcdd:	mov    0x338(%r15),%rsi
    dce4:	mov    %r15,%rdi
    dce7:	mov    %r14,%rdx
    dcea:	callq  ddd0 <png_process_IDAT_data>
    dcef:	mov    0x248(%r15),%eax
    dcf6:	sub    %r14d,%eax
    dcf9:	mov    %eax,0x248(%r15)
    dd00:	mov    0x360(%r15),%rax
    dd07:	sub    %r14,%rax
    dd0a:	mov    %rax,0x360(%r15)
    dd11:	mov    0x368(%r15),%rax
    dd18:	sub    %r14,%rax
    dd1b:	mov    %rax,0x368(%r15)
    dd22:	add    0x338(%r15),%r14
    dd29:	mov    %r14,0x338(%r15)
    dd30:	mov    -0x8(%rbp),%r14
    dd34:	mov    -0x10(%rbp),%rax
    dd38:	jmpq   db4b <png_push_read_IDAT+0x3b>
    dd3d:	mov    0x360(%r15),%rcx
    dd44:	cmp    $0x3,%rcx
    dd48:	jbe    dda5 <png_push_read_IDAT+0x295>
    dd4a:	xor    %esi,%esi
    dd4c:	mov    %r15,%rdi
    dd4f:	mov    %rax,-0x10(%rbp)
    dd53:	callq  1b270 <png_crc_finish>
    dd58:	mov    0x12c(%r15),%eax
    dd5f:	and    $0xfffffef7,%eax
    dd64:	add    $0x8,%eax
    dd67:	mov    %eax,0x12c(%r15)
    dd6e:	movl   $0x0,0x138(%r15)
    dd79:	mov    -0x10(%rbp),%r15
    dd7d:	leaveq 
    dd7e:	retq   
    dd7f:	callq  d920 <png_push_save_buffer>
    dd84:	leaveq 
    dd85:	retq   
    dd86:	movl   $0x1,0x370(%r15)
    dd91:	mov    0x130(%r15),%eax
    dd98:	and    $0x8,%eax
    dd9b:	test   %eax,%eax
    dd9d:	je     ddb2 <png_push_read_IDAT+0x2a2>
    dd9f:	mov    -0x10(%rbp),%r15
    dda3:	leaveq 
    dda4:	retq   
    dda5:	mov    %r15,%rdi
    dda8:	mov    %rax,%r15
    ddab:	callq  d920 <png_push_save_buffer>
    ddb0:	leaveq 
    ddb1:	retq   
    ddb2:	mov    %r15,%rdi
    ddb5:	lea    0x1f9ef(%rip),%rsi        # 2d7ab <valid_parameters.6+0x255>
    ddbc:	callq  5470 <png_error@plt>
    ddc1:	data16 nopw %cs:0x0(%rax,%rax,1)
    ddcc:	nopl   0x0(%rax)

000000000000ddd0 <png_process_IDAT_data>:
    ddd0:	push   %rbp
    ddd1:	mov    %rsp,%rbp
    ddd4:	sub    $0x20,%rsp
    ddd8:	test   %rdx,%rdx
    dddb:	jne    dde9 <png_process_IDAT_data+0x19>
    dddd:	lea    0x1f9e2(%rip),%rsi        # 2d7c6 <valid_parameters.6+0x270>
    dde4:	callq  5470 <png_error@plt>
    dde9:	test   %rsi,%rsi
    ddec:	je     dddd <png_process_IDAT_data+0xd>
    ddee:	mov    %rsi,0x140(%rdi)
    ddf5:	mov    %edx,0x148(%rdi)
    ddfb:	mov    $0x2,%eax
    de00:	mov    %r13,-0x8(%rbp)
    de04:	mov    %r14,-0x10(%rbp)
    de08:	mov    %r15,-0x18(%rbp)
    de0c:	mov    %r12,%r13
    de0f:	mov    %rbx,%r12
    de12:	mov    %rdi,%rbx
    de15:	mov    %rax,%r14
    de18:	jmp    de73 <png_process_IDAT_data+0xa3>
    de1a:	shr    $0x3,%rax
    de1e:	imul   0x210(%rbx),%eax
    de25:	add    $0x1,%eax
    de28:	mov    %eax,0x160(%rbx)
    de2e:	mov    0x228(%rbx),%rax
    de35:	mov    %rax,0x158(%rbx)
    de3c:	mov    %rbx,%rdi
    de3f:	mov    %r14,%rsi
    de42:	callq  1ca80 <png_zlib_inflate>
    de47:	test   %eax,%eax
    de49:	jne    dec2 <png_process_IDAT_data+0xf2>
    de4b:	mov    0x228(%rbx),%rcx
    de52:	cmp    0x158(%rbx),%rcx
    de59:	jne    df16 <png_process_IDAT_data+0x146>
    de5f:	cmp    $0x1,%eax
    de62:	jne    de73 <png_process_IDAT_data+0xa3>
    de64:	mov    0x130(%rbx),%eax
    de6a:	or     $0x8,%eax
    de6d:	mov    %eax,0x130(%rbx)
    de73:	mov    0x148(%rbx),%eax
    de79:	test   %eax,%eax
    de7b:	je     df59 <png_process_IDAT_data+0x189>
    de81:	mov    0x130(%rbx),%eax
    de87:	and    $0x8,%eax
    de8a:	test   %eax,%eax
    de8c:	jne    df59 <png_process_IDAT_data+0x189>
    de92:	mov    0x160(%rbx),%eax
    de98:	test   %eax,%eax
    de9a:	jne    de3c <png_process_IDAT_data+0x6c>
    de9c:	movzbl 0x26a(%rbx),%eax
    dea3:	cmp    $0x7,%al
    dea5:	ja     de1a <png_process_IDAT_data+0x4a>
    deab:	mov    0x210(%rbx),%ecx
    deb1:	imul   %rcx,%rax
    deb5:	add    $0x7,%rax
    deb9:	shr    $0x3,%rax
    debd:	jmpq   de25 <png_process_IDAT_data+0x55>
    dec2:	cmp    $0x1,%eax
    dec5:	je     de4b <png_process_IDAT_data+0x7b>
    dec7:	mov    0x130(%rbx),%ecx
    decd:	or     $0x8,%ecx
    ded0:	mov    %ecx,0x130(%rbx)
    ded6:	movl   $0x0,0x138(%rbx)
    dee0:	mov    0x200(%rbx),%ecx
    dee6:	cmp    0x214(%rbx),%ecx
    deec:	jbe    df7b <png_process_IDAT_data+0x1ab>
    def2:	movzbl 0x265(%rbx),%ecx
    def9:	cmp    $0x6,%cl
    defc:	ja     df7b <png_process_IDAT_data+0x1ab>
    defe:	cmp    $0xfffffffd,%eax
    df01:	je     df9e <png_process_IDAT_data+0x1ce>
    df07:	mov    %rbx,%rdi
    df0a:	lea    0x1f915(%rip),%rsi        # 2d826 <valid_parameters.6+0x2d0>
    df11:	callq  5470 <png_error@plt>
    df16:	mov    0x200(%rbx),%ecx
    df1c:	cmp    0x214(%rbx),%ecx
    df22:	jbe    dfc1 <png_process_IDAT_data+0x1f1>
    df28:	movzbl 0x265(%rbx),%ecx
    df2f:	cmp    $0x6,%cl
    df32:	ja     dfc1 <png_process_IDAT_data+0x1f1>
    df38:	mov    0x160(%rbx),%ecx
    df3e:	test   %ecx,%ecx
    df40:	jne    de5f <png_process_IDAT_data+0x8f>
    df46:	mov    %rax,%r15
    df49:	mov    %rbx,%rdi
    df4c:	callq  e020 <png_push_process_row>
    df51:	mov    %r15,%rax
    df54:	jmpq   de5f <png_process_IDAT_data+0x8f>
    df59:	mov    0x148(%rbx),%eax
    df5f:	test   %eax,%eax
    df61:	jne    dffd <png_process_IDAT_data+0x22d>
    df67:	mov    %r12,%rbx
    df6a:	mov    %r13,%r12
    df6d:	mov    -0x18(%rbp),%r15
    df71:	mov    -0x10(%rbp),%r14
    df75:	mov    -0x8(%rbp),%r13
    df79:	leaveq 
    df7a:	retq   
    df7b:	mov    %rbx,%rdi
    df7e:	lea    0x1f85f(%rip),%rsi        # 2d7e4 <valid_parameters.6+0x28e>
    df85:	callq  5390 <png_warning@plt>
    df8a:	mov    %r12,%rbx
    df8d:	mov    %r13,%r12
    df90:	mov    -0x18(%rbp),%r15
    df94:	mov    -0x10(%rbp),%r14
    df98:	mov    -0x8(%rbp),%r13
    df9c:	leaveq 
    df9d:	retq   
    df9e:	mov    %rbx,%rdi
    dfa1:	lea    0x1f85e(%rip),%rsi        # 2d806 <valid_parameters.6+0x2b0>
    dfa8:	callq  5590 <png_benign_error@plt>
    dfad:	mov    %r12,%rbx
    dfb0:	mov    %r13,%r12
    dfb3:	mov    -0x18(%rbp),%r15
    dfb7:	mov    -0x10(%rbp),%r14
    dfbb:	mov    -0x8(%rbp),%r13
    dfbf:	leaveq 
    dfc0:	retq   
    dfc1:	lea    0x1f87a(%rip),%rsi        # 2d842 <valid_parameters.6+0x2ec>
    dfc8:	mov    %rbx,%rdi
    dfcb:	callq  5390 <png_warning@plt>
    dfd0:	mov    0x130(%rbx),%eax
    dfd6:	or     $0x8,%eax
    dfd9:	mov    %eax,0x130(%rbx)
    dfdf:	movl   $0x0,0x138(%rbx)
    dfe9:	mov    %r12,%rbx
    dfec:	mov    %r13,%r12
    dfef:	mov    -0x18(%rbp),%r15
    dff3:	mov    -0x10(%rbp),%r14
    dff7:	mov    -0x8(%rbp),%r13
    dffb:	leaveq 
    dffc:	retq   
    dffd:	mov    %rbx,%rdi
    e000:	lea    0x1f859(%rip),%rsi        # 2d860 <valid_parameters.6+0x30a>
    e007:	callq  5390 <png_warning@plt>
    e00c:	mov    %r12,%rbx
    e00f:	mov    %r13,%r12
    e012:	mov    -0x18(%rbp),%r15
    e016:	mov    -0x10(%rbp),%r14
    e01a:	mov    -0x8(%rbp),%r13
    e01e:	leaveq 
    e01f:	retq   

000000000000e020 <png_push_process_row>:
    e020:	push   %rbp
    e021:	mov    %rsp,%rbp
    e024:	sub    $0x50,%rsp
    e028:	mov    %r15,-0x38(%rbp)
    e02c:	mov    0x210(%rdi),%edx
    e032:	mov    %edx,-0x50(%rbp)
    e035:	movzbl 0x267(%rdi),%eax
    e03c:	mov    %al,-0x40(%rbp)
    e03f:	movzbl 0x268(%rdi),%eax
    e046:	mov    %al,-0x3f(%rbp)
    e049:	movzbl 0x26b(%rdi),%eax
    e050:	mov    %al,-0x3e(%rbp)
    e053:	movzbl 0x26a(%rdi),%ecx
    e05a:	cmp    $0x7,%cl
    e05d:	ja     e070 <png_push_process_row+0x50>
    e05f:	mov    %rcx,%rax
    e062:	imul   %rdx,%rax
    e066:	add    $0x7,%rax
    e06a:	shr    $0x3,%rax
    e06e:	jmp    e07b <png_push_process_row+0x5b>
    e070:	mov    %rcx,%rax
    e073:	shr    $0x3,%rax
    e077:	imul   %rdx,%rax
    e07b:	mov    %cl,-0x3d(%rbp)
    e07e:	mov    %rax,-0x48(%rbp)
    e082:	lea    -0x50(%rbp),%rsi
    e086:	mov    0x228(%rdi),%rax
    e08d:	movzbl (%rax),%r8d
    e091:	test   %r8b,%r8b
    e094:	jne    e11c <png_push_process_row+0xfc>
    e09a:	mov    %r14,%r15
    e09d:	mov    %r13,%r14
    e0a0:	mov    %rdi,%r13
    e0a3:	mov    0x220(%r13),%rdi
    e0aa:	mov    0x228(%r13),%rsi
    e0b1:	mov    -0x48(%rbp),%rdx
    e0b5:	add    $0x1,%rdx
    e0b9:	callq  54c0 <memcpy@plt>
    e0be:	mov    0x134(%r13),%eax
    e0c5:	test   %eax,%eax
    e0c7:	je     e0d5 <png_push_process_row+0xb5>
    e0c9:	mov    %r13,%rdi
    e0cc:	lea    -0x50(%rbp),%rsi
    e0d0:	callq  16030 <png_do_read_transformations>
    e0d5:	movzbl 0x26f(%r13),%ecx
    e0dd:	test   %cl,%cl
    e0df:	je     e132 <png_push_process_row+0x112>
    e0e1:	movzbl -0x3d(%rbp),%eax
    e0e5:	cmp    %al,%cl
    e0e7:	jne    e15c <png_push_process_row+0x13c>
    e0e9:	movzbl 0x264(%r13),%eax
    e0f1:	test   %al,%al
    e0f3:	jne    e16b <png_push_process_row+0x14b>
    e0f5:	mov    0x228(%r13),%rsi
    e0fc:	add    $0x1,%rsi
    e100:	mov    %r13,%rdi
    e103:	callq  e740 <png_push_have_row>
    e108:	mov    %r13,%rdi
    e10b:	callq  e7c0 <png_read_push_finish_row>
    e110:	mov    %r14,%r13
    e113:	mov    %r15,%r14
    e116:	mov    -0x38(%rbp),%r15
    e11a:	leaveq 
    e11b:	retq   
    e11c:	cmp    $0x4,%r8b
    e120:	jbe    e1d2 <png_push_process_row+0x1b2>
    e126:	lea    0x1f752(%rip),%rsi        # 2d87f <valid_parameters.6+0x329>
    e12d:	callq  5470 <png_error@plt>
    e132:	movzbl -0x3d(%rbp),%eax
    e136:	mov    %al,0x26f(%r13)
    e13d:	movzbl 0x26e(%r13),%ecx
    e145:	movzbl -0x3d(%rbp),%eax
    e149:	cmp    %al,%cl
    e14b:	jae    e0e9 <png_push_process_row+0xc9>
    e14d:	mov    %r13,%rdi
    e150:	lea    0x1f742(%rip),%rsi        # 2d899 <valid_parameters.6+0x343>
    e157:	callq  5470 <png_error@plt>
    e15c:	mov    %r13,%rdi
    e15f:	lea    0x1f74c(%rip),%rsi        # 2d8b2 <valid_parameters.6+0x35c>
    e166:	callq  5470 <png_error@plt>
    e16b:	mov    0x134(%r13),%ecx
    e172:	mov    %rcx,%rax
    e175:	and    $0x2,%eax
    e178:	test   %eax,%eax
    e17a:	je     e0f5 <png_push_process_row+0xd5>
    e180:	movzbl 0x265(%r13),%edx
    e188:	cmp    $0x5,%dl
    e18b:	ja     e1a1 <png_push_process_row+0x181>
    e18d:	mov    0x228(%r13),%rsi
    e194:	add    $0x1,%rsi
    e198:	lea    -0x50(%rbp),%rdi
    e19c:	callq  1bb20 <png_do_read_interlace>
    e1a1:	xor    %edx,%edx
    e1a3:	movzbl 0x265(%r13),%eax
    e1ab:	cmp    $0x5,%al
    e1ad:	ja     e1f4 <png_push_process_row+0x1d4>
    e1af:	lea    0x1f4aa(%rip),%rcx        # 2d660 <valid_parameters.6+0x10a>
    e1b6:	movslq (%rcx,%rax,4),%rax
    e1ba:	add    %rcx,%rax
    e1bd:	jmpq   *%rax
    e1bf:	mov    %r14,-0x8(%rbp)
    e1c3:	mov    %r15,-0x10(%rbp)
    e1c7:	mov    %rdx,%r15
    e1ca:	mov    %r15,%r14
    e1cd:	jmpq   e2b5 <png_push_process_row+0x295>
    e1d2:	lea    0x1(%rax),%rdx
    e1d6:	mov    0x220(%rdi),%rcx
    e1dd:	add    $0x1,%rcx
    e1e1:	mov    %r14,%r15
    e1e4:	mov    %r13,%r14
    e1e7:	mov    %rdi,%r13
    e1ea:	callq  1c050 <png_read_filter_row>
    e1ef:	jmpq   e0a3 <png_push_process_row+0x83>
    e1f4:	mov    0x228(%r13),%rsi
    e1fb:	add    $0x1,%rsi
    e1ff:	mov    %r13,%rdi
    e202:	callq  e740 <png_push_have_row>
    e207:	mov    %r13,%rdi
    e20a:	callq  e7c0 <png_read_push_finish_row>
    e20f:	movzbl 0x265(%r13),%eax
    e217:	cmp    $0x6,%al
    e219:	je     e2d3 <png_push_process_row+0x2b3>
    e21f:	mov    %r14,%r13
    e222:	mov    %r15,%r14
    e225:	mov    -0x38(%rbp),%r15
    e229:	leaveq 
    e22a:	retq   
    e22b:	mov    %r14,-0x8(%rbp)
    e22f:	mov    %r15,-0x10(%rbp)
    e233:	mov    %rdx,%r15
    e236:	mov    %r15,%r14
    e239:	jmpq   e31c <png_push_process_row+0x2fc>
    e23e:	mov    %r14,-0x18(%rbp)
    e242:	mov    %r15,-0x20(%rbp)
    e246:	mov    %rdx,%r15
    e249:	mov    %r15,%r14
    e24c:	jmpq   e369 <png_push_process_row+0x349>
    e251:	mov    %r14,-0x18(%rbp)
    e255:	mov    %r15,-0x20(%rbp)
    e259:	mov    %rdx,%r15
    e25c:	mov    %r15,%r14
    e25f:	jmpq   e3a2 <png_push_process_row+0x382>
    e264:	mov    %r14,-0x28(%rbp)
    e268:	mov    %r15,-0x30(%rbp)
    e26c:	mov    %rdx,%r15
    e26f:	mov    %r15,%r14
    e272:	jmpq   e3ef <png_push_process_row+0x3cf>
    e277:	mov    %r14,-0x28(%rbp)
    e27b:	mov    %r15,-0x30(%rbp)
    e27f:	mov    %rdx,%r15
    e282:	mov    %r15,%r14
    e285:	jmpq   e428 <png_push_process_row+0x408>
    e28a:	movzbl 0x265(%r13),%eax
    e292:	test   %al,%al
    e294:	jne    e2bb <png_push_process_row+0x29b>
    e296:	mov    0x228(%r13),%rsi
    e29d:	add    $0x1,%rsi
    e2a1:	mov    %r13,%rdi
    e2a4:	callq  e740 <png_push_have_row>
    e2a9:	mov    %r13,%rdi
    e2ac:	callq  e7c0 <png_read_push_finish_row>
    e2b1:	add    $0x1,%r15d
    e2b5:	cmp    $0x7,%r15d
    e2b9:	jle    e28a <png_push_process_row+0x26a>
    e2bb:	movzbl 0x265(%r13),%eax
    e2c3:	cmp    $0x2,%al
    e2c5:	jne    e44c <png_push_process_row+0x42c>
    e2cb:	mov    %r14,%r15
    e2ce:	jmpq   e497 <png_push_process_row+0x477>
    e2d3:	mov    %r13,%rdi
    e2d6:	xor    %esi,%esi
    e2d8:	callq  e740 <png_push_have_row>
    e2dd:	mov    %r13,%rdi
    e2e0:	callq  e7c0 <png_read_push_finish_row>
    e2e5:	mov    %r14,%r13
    e2e8:	mov    %r15,%r14
    e2eb:	mov    -0x38(%rbp),%r15
    e2ef:	leaveq 
    e2f0:	retq   
    e2f1:	movzbl 0x265(%r13),%eax
    e2f9:	cmp    $0x1,%al
    e2fb:	jne    e322 <png_push_process_row+0x302>
    e2fd:	mov    0x228(%r13),%rsi
    e304:	add    $0x1,%rsi
    e308:	mov    %r13,%rdi
    e30b:	callq  e740 <png_push_have_row>
    e310:	mov    %r13,%rdi
    e313:	callq  e7c0 <png_read_push_finish_row>
    e318:	add    $0x1,%r15d
    e31c:	cmp    $0x7,%r15d
    e320:	jle    e2f1 <png_push_process_row+0x2d1>
    e322:	movzbl 0x265(%r13),%eax
    e32a:	cmp    $0x2,%al
    e32c:	jne    e49f <png_push_process_row+0x47f>
    e332:	mov    %r14,%r15
    e335:	jmpq   e4d4 <png_push_process_row+0x4b4>
    e33a:	movzbl 0x265(%r13),%eax
    e342:	cmp    $0x2,%al
    e344:	jne    e4e8 <png_push_process_row+0x4c8>
    e34a:	mov    0x228(%r13),%rsi
    e351:	add    $0x1,%rsi
    e355:	mov    %r13,%rdi
    e358:	callq  e740 <png_push_have_row>
    e35d:	mov    %r13,%rdi
    e360:	callq  e7c0 <png_read_push_finish_row>
    e365:	add    $0x1,%r15d
    e369:	cmp    $0x3,%r15d
    e36d:	jle    e33a <png_push_process_row+0x31a>
    e36f:	mov    %r14,%r15
    e372:	jmpq   e510 <png_push_process_row+0x4f0>
    e377:	movzbl 0x265(%r13),%eax
    e37f:	cmp    $0x3,%al
    e381:	jne    e3a8 <png_push_process_row+0x388>
    e383:	mov    0x228(%r13),%rsi
    e38a:	add    $0x1,%rsi
    e38e:	mov    %r13,%rdi
    e391:	callq  e740 <png_push_have_row>
    e396:	mov    %r13,%rdi
    e399:	callq  e7c0 <png_read_push_finish_row>
    e39e:	add    $0x1,%r15d
    e3a2:	cmp    $0x3,%r15d
    e3a6:	jle    e377 <png_push_process_row+0x357>
    e3a8:	movzbl 0x265(%r13),%eax
    e3b0:	cmp    $0x4,%al
    e3b2:	jne    e52e <png_push_process_row+0x50e>
    e3b8:	mov    %r14,%r15
    e3bb:	jmpq   e563 <png_push_process_row+0x543>
    e3c0:	movzbl 0x265(%r13),%eax
    e3c8:	cmp    $0x4,%al
    e3ca:	jne    e577 <png_push_process_row+0x557>
    e3d0:	mov    0x228(%r13),%rsi
    e3d7:	add    $0x1,%rsi
    e3db:	mov    %r13,%rdi
    e3de:	callq  e740 <png_push_have_row>
    e3e3:	mov    %r13,%rdi
    e3e6:	callq  e7c0 <png_read_push_finish_row>
    e3eb:	add    $0x1,%r15d
    e3ef:	cmp    $0x1,%r15d
    e3f3:	jle    e3c0 <png_push_process_row+0x3a0>
    e3f5:	mov    %r14,%r15
    e3f8:	jmpq   e59f <png_push_process_row+0x57f>
    e3fd:	movzbl 0x265(%r13),%eax
    e405:	cmp    $0x5,%al
    e407:	jne    e42e <png_push_process_row+0x40e>
    e409:	mov    0x228(%r13),%rsi
    e410:	add    $0x1,%rsi
    e414:	mov    %r13,%rdi
    e417:	callq  e740 <png_push_have_row>
    e41c:	mov    %r13,%rdi
    e41f:	callq  e7c0 <png_read_push_finish_row>
    e424:	add    $0x1,%r15d
    e428:	cmp    $0x1,%r15d
    e42c:	jle    e3fd <png_push_process_row+0x3dd>
    e42e:	movzbl 0x265(%r13),%eax
    e436:	cmp    $0x6,%al
    e438:	je     e5c3 <png_push_process_row+0x5a3>
    e43e:	mov    -0x30(%rbp),%r14
    e442:	mov    -0x28(%rbp),%r13
    e446:	mov    -0x38(%rbp),%r15
    e44a:	leaveq 
    e44b:	retq   
    e44c:	movzbl 0x265(%r13),%eax
    e454:	cmp    $0x4,%al
    e456:	jne    e5e4 <png_push_process_row+0x5c4>
    e45c:	mov    0x1fc(%r13),%eax
    e463:	cmp    $0x4,%eax
    e466:	ja     e5e4 <png_push_process_row+0x5c4>
    e46c:	mov    %r14,%r15
    e46f:	jmpq   e625 <png_push_process_row+0x605>
    e474:	movzbl 0x265(%r13),%eax
    e47c:	cmp    $0x2,%al
    e47e:	jne    e44c <png_push_process_row+0x42c>
    e480:	mov    %r13,%rdi
    e483:	mov    %r14,%rsi
    e486:	callq  e740 <png_push_have_row>
    e48b:	mov    %r13,%rdi
    e48e:	callq  e7c0 <png_read_push_finish_row>
    e493:	add    $0x1,%r15d
    e497:	cmp    $0x3,%r15d
    e49b:	jle    e474 <png_push_process_row+0x454>
    e49d:	jmp    e44c <png_push_process_row+0x42c>
    e49f:	mov    -0x10(%rbp),%r14
    e4a3:	mov    -0x8(%rbp),%r13
    e4a7:	mov    -0x38(%rbp),%r15
    e4ab:	leaveq 
    e4ac:	retq   
    e4ad:	movzbl 0x265(%r13),%eax
    e4b5:	cmp    $0x2,%al
    e4b7:	jne    e62d <png_push_process_row+0x60d>
    e4bd:	mov    %r13,%rdi
    e4c0:	mov    %r14,%rsi
    e4c3:	callq  e740 <png_push_have_row>
    e4c8:	mov    %r13,%rdi
    e4cb:	callq  e7c0 <png_read_push_finish_row>
    e4d0:	add    $0x1,%r15d
    e4d4:	cmp    $0x3,%r15d
    e4d8:	jle    e4ad <png_push_process_row+0x48d>
    e4da:	mov    -0x10(%rbp),%r14
    e4de:	mov    -0x8(%rbp),%r13
    e4e2:	mov    -0x38(%rbp),%r15
    e4e6:	leaveq 
    e4e7:	retq   
    e4e8:	mov    %r14,%r15
    e4eb:	jmp    e510 <png_push_process_row+0x4f0>
    e4ed:	movzbl 0x265(%r13),%eax
    e4f5:	cmp    $0x2,%al
    e4f7:	jne    e516 <png_push_process_row+0x4f6>
    e4f9:	mov    %r13,%rdi
    e4fc:	mov    %r14,%rsi
    e4ff:	callq  e740 <png_push_have_row>
    e504:	mov    %r13,%rdi
    e507:	callq  e7c0 <png_read_push_finish_row>
    e50c:	add    $0x1,%r15d
    e510:	cmp    $0x3,%r15d
    e514:	jle    e4ed <png_push_process_row+0x4cd>
    e516:	movzbl 0x265(%r13),%eax
    e51e:	cmp    $0x4,%al
    e520:	jne    e63b <png_push_process_row+0x61b>
    e526:	mov    %r14,%r15
    e529:	jmpq   e66c <png_push_process_row+0x64c>
    e52e:	mov    -0x20(%rbp),%r14
    e532:	mov    -0x18(%rbp),%r13
    e536:	mov    -0x38(%rbp),%r15
    e53a:	leaveq 
    e53b:	retq   
    e53c:	movzbl 0x265(%r13),%eax
    e544:	cmp    $0x4,%al
    e546:	jne    e680 <png_push_process_row+0x660>
    e54c:	mov    %r13,%rdi
    e54f:	mov    %r14,%rsi
    e552:	callq  e740 <png_push_have_row>
    e557:	mov    %r13,%rdi
    e55a:	callq  e7c0 <png_read_push_finish_row>
    e55f:	add    $0x1,%r15d
    e563:	cmp    $0x1,%r15d
    e567:	jle    e53c <png_push_process_row+0x51c>
    e569:	mov    -0x20(%rbp),%r14
    e56d:	mov    -0x18(%rbp),%r13
    e571:	mov    -0x38(%rbp),%r15
    e575:	leaveq 
    e576:	retq   
    e577:	mov    %r14,%r15
    e57a:	jmp    e59f <png_push_process_row+0x57f>
    e57c:	movzbl 0x265(%r13),%eax
    e584:	cmp    $0x4,%al
    e586:	jne    e5a5 <png_push_process_row+0x585>
    e588:	mov    %r13,%rdi
    e58b:	mov    %r14,%rsi
    e58e:	callq  e740 <png_push_have_row>
    e593:	mov    %r13,%rdi
    e596:	callq  e7c0 <png_read_push_finish_row>
    e59b:	add    $0x1,%r15d
    e59f:	cmp    $0x1,%r15d
    e5a3:	jle    e57c <png_push_process_row+0x55c>
    e5a5:	movzbl 0x265(%r13),%eax
    e5ad:	cmp    $0x6,%al
    e5af:	je     e68e <png_push_process_row+0x66e>
    e5b5:	mov    -0x30(%rbp),%r14
    e5b9:	mov    -0x28(%rbp),%r13
    e5bd:	mov    -0x38(%rbp),%r15
    e5c1:	leaveq 
    e5c2:	retq   
    e5c3:	mov    %r14,%rsi
    e5c6:	mov    %r13,%rdi
    e5c9:	callq  e740 <png_push_have_row>
    e5ce:	mov    %r13,%rdi
    e5d1:	callq  e7c0 <png_read_push_finish_row>
    e5d6:	mov    -0x30(%rbp),%r14
    e5da:	mov    -0x28(%rbp),%r13
    e5de:	mov    -0x38(%rbp),%r15
    e5e2:	leaveq 
    e5e3:	retq   
    e5e4:	movzbl 0x265(%r13),%eax
    e5ec:	cmp    $0x6,%al
    e5ee:	je     e6af <png_push_process_row+0x68f>
    e5f4:	mov    -0x10(%rbp),%r14
    e5f8:	mov    -0x8(%rbp),%r13
    e5fc:	mov    -0x38(%rbp),%r15
    e600:	leaveq 
    e601:	retq   
    e602:	movzbl 0x265(%r13),%eax
    e60a:	cmp    $0x4,%al
    e60c:	jne    e5e4 <png_push_process_row+0x5c4>
    e60e:	mov    %r13,%rdi
    e611:	mov    %r14,%rsi
    e614:	callq  e740 <png_push_have_row>
    e619:	mov    %r13,%rdi
    e61c:	callq  e7c0 <png_read_push_finish_row>
    e621:	add    $0x1,%r15d
    e625:	cmp    $0x1,%r15d
    e629:	jle    e602 <png_push_process_row+0x5e2>
    e62b:	jmp    e5e4 <png_push_process_row+0x5c4>
    e62d:	mov    -0x10(%rbp),%r14
    e631:	mov    -0x8(%rbp),%r13
    e635:	mov    -0x38(%rbp),%r15
    e639:	leaveq 
    e63a:	retq   
    e63b:	mov    -0x20(%rbp),%r14
    e63f:	mov    -0x18(%rbp),%r13
    e643:	mov    -0x38(%rbp),%r15
    e647:	leaveq 
    e648:	retq   
    e649:	movzbl 0x265(%r13),%eax
    e651:	cmp    $0x4,%al
    e653:	jne    e6c9 <png_push_process_row+0x6a9>
    e655:	mov    %r13,%rdi
    e658:	mov    %r14,%rsi
    e65b:	callq  e740 <png_push_have_row>
    e660:	mov    %r13,%rdi
    e663:	callq  e7c0 <png_read_push_finish_row>
    e668:	add    $0x1,%r15d
    e66c:	cmp    $0x1,%r15d
    e670:	jle    e649 <png_push_process_row+0x629>
    e672:	mov    -0x20(%rbp),%r14
    e676:	mov    -0x18(%rbp),%r13
    e67a:	mov    -0x38(%rbp),%r15
    e67e:	leaveq 
    e67f:	retq   
    e680:	mov    -0x20(%rbp),%r14
    e684:	mov    -0x18(%rbp),%r13
    e688:	mov    -0x38(%rbp),%r15
    e68c:	leaveq 
    e68d:	retq   
    e68e:	mov    %r14,%rsi
    e691:	mov    %r13,%rdi
    e694:	callq  e740 <png_push_have_row>
    e699:	mov    %r13,%rdi
    e69c:	callq  e7c0 <png_read_push_finish_row>
    e6a1:	mov    -0x30(%rbp),%r14
    e6a5:	mov    -0x28(%rbp),%r13
    e6a9:	mov    -0x38(%rbp),%r15
    e6ad:	leaveq 
    e6ae:	retq   
    e6af:	mov    0x1fc(%r13),%eax
    e6b6:	cmp    $0x4,%eax
    e6b9:	jbe    e6d7 <png_push_process_row+0x6b7>
    e6bb:	mov    -0x10(%rbp),%r14
    e6bf:	mov    -0x8(%rbp),%r13
    e6c3:	mov    -0x38(%rbp),%r15
    e6c7:	leaveq 
    e6c8:	retq   
    e6c9:	mov    -0x20(%rbp),%r14
    e6cd:	mov    -0x18(%rbp),%r13
    e6d1:	mov    -0x38(%rbp),%r15
    e6d5:	leaveq 
    e6d6:	retq   
    e6d7:	mov    %r14,%rsi
    e6da:	mov    %r13,%rdi
    e6dd:	callq  e740 <png_push_have_row>
    e6e2:	mov    %r13,%rdi
    e6e5:	callq  e7c0 <png_read_push_finish_row>
    e6ea:	mov    -0x10(%rbp),%r14
    e6ee:	mov    -0x8(%rbp),%r13
    e6f2:	mov    -0x38(%rbp),%r15
    e6f6:	leaveq 
    e6f7:	retq   
    e6f8:	nopl   0x0(%rax,%rax,1)

000000000000e700 <png_push_have_info>:
    e700:	push   %rbp
    e701:	mov    %rsp,%rbp
    e704:	mov    0x310(%rdi),%rax
    e70b:	test   %rax,%rax
    e70e:	jne    e712 <png_push_have_info+0x12>
    e710:	leaveq 
    e711:	retq   
    e712:	callq  *%rax
    e714:	leaveq 
    e715:	retq   
    e716:	nopw   %cs:0x0(%rax,%rax,1)

000000000000e720 <png_push_have_end>:
    e720:	push   %rbp
    e721:	mov    %rsp,%rbp
    e724:	mov    0x320(%rdi),%rax
    e72b:	test   %rax,%rax
    e72e:	jne    e732 <png_push_have_end+0x12>
    e730:	leaveq 
    e731:	retq   
    e732:	callq  *%rax
    e734:	leaveq 
    e735:	retq   
    e736:	nopw   %cs:0x0(%rax,%rax,1)

000000000000e740 <png_push_have_row>:
    e740:	push   %rbp
    e741:	mov    %rsp,%rbp
    e744:	mov    0x318(%rdi),%rax
    e74b:	test   %rax,%rax
    e74e:	jne    e752 <png_push_have_row+0x12>
    e750:	leaveq 
    e751:	retq   
    e752:	mov    0x214(%rdi),%edx
    e758:	movzbl 0x265(%rdi),%ecx
    e75f:	callq  *%rax
    e761:	leaveq 
    e762:	retq   
    e763:	data16 nopw %cs:0x0(%rax,%rax,1)
    e76e:	xchg   %ax,%ax

000000000000e770 <png_process_some_data>:
    e770:	push   %rbp
    e771:	mov    %rsp,%rbp
    e774:	test   %rdi,%rdi
    e777:	jne    e77b <png_process_some_data+0xb>
    e779:	leaveq 
    e77a:	retq   
    e77b:	movslq 0x370(%rdi),%rax
    e782:	test   %eax,%eax
    e784:	jle    e797 <png_process_some_data+0x27>
    e786:	cmp    $0x1,%eax
    e789:	je     e7a8 <png_process_some_data+0x38>
    e78b:	cmp    $0x2,%eax
    e78e:	jne    e79b <png_process_some_data+0x2b>
    e790:	callq  db10 <png_push_read_IDAT>
    e795:	leaveq 
    e796:	retq   
    e797:	test   %eax,%eax
    e799:	je     e7af <png_process_some_data+0x3f>
    e79b:	movq   $0x0,0x360(%rdi)
    e7a6:	leaveq 
    e7a7:	retq   
    e7a8:	callq  cd80 <png_push_read_chunk>
    e7ad:	leaveq 
    e7ae:	retq   
    e7af:	callq  d830 <png_push_read_sig>
    e7b4:	leaveq 
    e7b5:	retq   
    e7b6:	nopw   %cs:0x0(%rax,%rax,1)

000000000000e7c0 <png_read_push_finish_row>:
    e7c0:	push   %rbp
    e7c1:	mov    %rsp,%rbp
    e7c4:	sub    $0x10,%rsp
    e7c8:	mov    0x214(%rdi),%eax
    e7ce:	add    $0x1,%eax
    e7d1:	mov    %eax,0x214(%rdi)
    e7d7:	mov    0x200(%rdi),%ecx
    e7dd:	cmp    %eax,%ecx
    e7df:	jbe    e7e3 <png_read_push_finish_row+0x23>
    e7e1:	leaveq 
    e7e2:	retq   
    e7e3:	movzbl 0x264(%rdi),%eax
    e7ea:	test   %al,%al
    e7ec:	jne    e7f0 <png_read_push_finish_row+0x30>
    e7ee:	leaveq 
    e7ef:	retq   
    e7f0:	movl   $0x0,0x214(%rdi)
    e7fa:	mov    0x220(%rdi),%rax
    e801:	xor    %esi,%esi
    e803:	mov    0x208(%rdi),%rdx
    e80a:	add    $0x1,%rdx
    e80e:	mov    %r15,-0x8(%rbp)
    e812:	mov    %rdi,%r15
    e815:	mov    %rax,%rdi
    e818:	callq  5350 <memset@plt>
    e81d:	lea    0x1f0c5(%rip),%rcx        # 2d8e9 <png_pass_inc.22>
    e824:	lea    0x1f0b7(%rip),%rdi        # 2d8e2 <png_pass_start.21>
    e82b:	lea    0x1f0c5(%rip),%rsi        # 2d8f7 <png_pass_yinc.24>
    e832:	lea    0x1f0b7(%rip),%r8        # 2d8f0 <png_pass_ystart.23>
    e839:	jmp    e8ab <png_read_push_finish_row+0xeb>
    e83b:	movzbl (%rdx,%rcx,1),%r9d
    e840:	mov    0x1f8(%r15),%eax
    e847:	lea    -0x1(%r9,%rax,1),%eax
    e84c:	movzbl (%rdx,%rdi,1),%edx
    e850:	sub    %edx,%eax
    e852:	xor    %edx,%edx
    e854:	div    %r9d
    e857:	mov    %eax,0x210(%r15)
    e85e:	mov    0x134(%r15),%eax
    e865:	and    $0x2,%eax
    e868:	test   %eax,%eax
    e86a:	jne    e8f3 <png_read_push_finish_row+0x133>
    e870:	movzbl 0x265(%r15),%edx
    e878:	movzbl (%rdx,%rsi,1),%r9d
    e87d:	mov    0x1fc(%r15),%eax
    e884:	lea    -0x1(%r9,%rax,1),%eax
    e889:	movzbl (%rdx,%r8,1),%edx
    e88e:	sub    %edx,%eax
    e890:	xor    %edx,%edx
    e892:	div    %r9d
    e895:	mov    %eax,0x200(%r15)
    e89c:	mov    0x210(%r15),%edx
    e8a3:	test   %edx,%edx
    e8a5:	je     e8ab <png_read_push_finish_row+0xeb>
    e8a7:	test   %eax,%eax
    e8a9:	jne    e8f9 <png_read_push_finish_row+0x139>
    e8ab:	movzbl 0x265(%r15),%edx
    e8b3:	lea    0x1(%rdx),%eax
    e8b6:	mov    %al,0x265(%r15)
    e8bd:	test   %dl,%dl
    e8bf:	je     e8ff <png_read_push_finish_row+0x13f>
    e8c1:	movzbl 0x265(%r15),%eax
    e8c9:	cmp    $0x3,%al
    e8cb:	jne    e8d9 <png_read_push_finish_row+0x119>
    e8cd:	mov    0x1f8(%r15),%eax
    e8d4:	cmp    $0x2,%eax
    e8d7:	jbe    e90b <png_read_push_finish_row+0x14b>
    e8d9:	movzbl 0x265(%r15),%eax
    e8e1:	cmp    $0x5,%al
    e8e3:	jne    e91d <png_read_push_finish_row+0x15d>
    e8e5:	mov    0x1f8(%r15),%eax
    e8ec:	cmp    $0x1,%eax
    e8ef:	jbe    e90b <png_read_push_finish_row+0x14b>
    e8f1:	jmp    e91d <png_read_push_finish_row+0x15d>
    e8f3:	mov    -0x8(%rbp),%r15
    e8f7:	leaveq 
    e8f8:	retq   
    e8f9:	mov    -0x8(%rbp),%r15
    e8fd:	leaveq 
    e8fe:	retq   
    e8ff:	mov    0x1f8(%r15),%eax
    e906:	cmp    $0x4,%eax
    e909:	ja     e8c1 <png_read_push_finish_row+0x101>
    e90b:	movzbl 0x265(%r15),%eax
    e913:	add    $0x1,%eax
    e916:	mov    %al,0x265(%r15)
    e91d:	movzbl 0x265(%r15),%eax
    e925:	cmp    $0x7,%al
    e927:	jbe    e935 <png_read_push_finish_row+0x175>
    e929:	add    $0xff,%eax
    e92e:	mov    %al,0x265(%r15)
    e935:	movzbl 0x265(%r15),%edx
    e93d:	cmp    $0x6,%dl
    e940:	jbe    e83b <png_read_push_finish_row+0x7b>
    e946:	mov    -0x8(%rbp),%r15
    e94a:	leaveq 
    e94b:	retq   
    e94c:	nopl   0x0(%rax)

000000000000e950 <png_create_read_struct>:
    e950:	push   %rbp
    e951:	mov    %rsp,%rbp
    e954:	sub    $0x10,%rsp
    e958:	movq   $0x0,(%rsp)
    e960:	xor    %r8d,%r8d
    e963:	mov    %r8,%r9
    e966:	callq  54a0 <png_create_read_struct_2@plt>
    e96b:	leaveq 
    e96c:	retq   
    e96d:	nopl   (%rax)

000000000000e970 <png_create_read_struct_2>:
    e970:	push   %rbp
    e971:	mov    %rsp,%rbp
    e974:	sub    $0x10,%rsp
    e978:	mov    0x10(%rbp),%rax
    e97c:	mov    %rax,(%rsp)
    e980:	callq  6b80 <png_create_png_struct>
    e985:	test   %rax,%rax
    e988:	jne    e98c <png_create_read_struct_2+0x1c>
    e98a:	leaveq 
    e98b:	retq   
    e98c:	movl   $0x8000,0x12c(%rax)
    e996:	movl   $0x2000,0x468(%rax)
    e9a0:	mov    0x130(%rax),%ecx
    e9a6:	or     $0x300000,%ecx
    e9ac:	mov    %ecx,0x130(%rax)
    e9b2:	xor    %esi,%esi
    e9b4:	mov    %rsi,%rdx
    e9b7:	mov    %rax,%rdi
    e9ba:	mov    %r15,-0x8(%rbp)
    e9be:	mov    %rax,%r15
    e9c1:	callq  5560 <png_set_read_fn@plt>
    e9c6:	mov    %r15,%rax
    e9c9:	mov    -0x8(%rbp),%r15
    e9cd:	leaveq 
    e9ce:	retq   
    e9cf:	nop

000000000000e9d0 <png_read_info>:
    e9d0:	push   %rbp
    e9d1:	mov    %rsp,%rbp
    e9d4:	sub    $0x30,%rsp
    e9d8:	test   %rdi,%rdi
    e9db:	jne    e9df <png_read_info+0xf>
    e9dd:	leaveq 
    e9de:	retq   
    e9df:	test   %rsi,%rsi
    e9e2:	jne    e9e6 <png_read_info+0x16>
    e9e4:	leaveq 
    e9e5:	retq   
    e9e6:	mov    %rdi,%rax
    e9e9:	mov    %rsi,%rcx
    e9ec:	mov    %r14,-0x20(%rbp)
    e9f0:	mov    %r15,-0x28(%rbp)
    e9f4:	mov    %rbx,%r14
    e9f7:	mov    %rdi,%rbx
    e9fa:	mov    %rax,%rdi
    e9fd:	mov    %r12,%r15
    ea00:	mov    %rsi,%r12
    ea03:	mov    %rcx,%rsi
    ea06:	callq  1b060 <png_read_sig>
    ea0b:	lea    0x1ef7c(%rip),%rax        # 2d98e <png_pass_yinc.24+0x97>
    ea12:	mov    %r14,-0x8(%rbp)
    ea16:	mov    %r15,-0x10(%rbp)
    ea1a:	mov    %r13,-0x18(%rbp)
    ea1e:	mov    %rax,%r14
    ea21:	jmp    ea31 <png_read_info+0x61>
    ea23:	mov    %rax,%rdx
    ea26:	mov    %rbx,%rdi
    ea29:	mov    %r12,%rsi
    ea2c:	callq  1cae0 <png_handle_IHDR>
    ea31:	mov    %rbx,%rdi
    ea34:	callq  1b160 <png_read_chunk_header>
    ea39:	mov    0x218(%rbx),%r13d
    ea40:	cmp    $0x49444154,%r13d
    ea47:	je     ea67 <png_read_info+0x97>
    ea49:	mov    0x12c(%rbx),%ecx
    ea4f:	mov    %rcx,%rdx
    ea52:	and    $0x4,%edx
    ea55:	test   %edx,%edx
    ea57:	je     eac7 <png_read_info+0xf7>
    ea59:	or     $0x2008,%ecx
    ea5f:	mov    %ecx,0x12c(%rbx)
    ea65:	jmp    eac7 <png_read_info+0xf7>
    ea67:	mov    0x12c(%rbx),%ecx
    ea6d:	mov    %rcx,%rdx
    ea70:	and    $0x1,%edx
    ea73:	test   %edx,%edx
    ea75:	jne    ea86 <png_read_info+0xb6>
    ea77:	mov    %rbx,%rdi
    ea7a:	lea    0x1eedb(%rip),%rsi        # 2d95c <png_pass_yinc.24+0x65>
    ea81:	callq  5060 <png_chunk_error@plt>
    ea86:	movzbl 0x267(%rbx),%edx
    ea8d:	cmp    $0x3,%dl
    ea90:	jne    eaa0 <png_read_info+0xd0>
    ea92:	mov    %rcx,%rdx
    ea95:	and    $0x2,%edx
    ea98:	test   %edx,%edx
    ea9a:	je     ec10 <png_read_info+0x240>
    eaa0:	and    $0x8,%ecx
    eaa3:	test   %ecx,%ecx
    eaa5:	je     eab8 <png_read_info+0xe8>
    eaa7:	mov    %rax,%r15
    eaaa:	mov    %rbx,%rdi
    eaad:	mov    %r14,%rsi
    eab0:	callq  5230 <png_chunk_benign_error@plt>
    eab5:	mov    %r15,%rax
    eab8:	mov    0x12c(%rbx),%ecx
    eabe:	or     $0x4,%ecx
    eac1:	mov    %ecx,0x12c(%rbx)
    eac7:	cmp    $0x49484452,%r13d
    eace:	je     ea23 <png_read_info+0x53>
    ead4:	cmp    $0x49454e44,%r13d
    eadb:	je     ec1f <png_read_info+0x24f>
    eae1:	mov    %rax,%r15
    eae4:	mov    %rbx,%rdi
    eae7:	mov    %r13,%rsi
    eaea:	callq  6e80 <png_chunk_unknown_handling>
    eaef:	test   %eax,%eax
    eaf1:	jne    ec32 <png_read_info+0x262>
    eaf7:	cmp    $0x504c5445,%r13d
    eafe:	je     ec7d <png_read_info+0x2ad>
    eb04:	cmp    $0x49444154,%r13d
    eb0b:	je     ec90 <png_read_info+0x2c0>
    eb11:	cmp    $0x624b4744,%r13d
    eb18:	je     ecad <png_read_info+0x2dd>
    eb1e:	cmp    $0x6348524d,%r13d
    eb25:	je     ecc0 <png_read_info+0x2f0>
    eb2b:	cmp    $0x65584966,%r13d
    eb32:	je     ecd3 <png_read_info+0x303>
    eb38:	cmp    $0x67414d41,%r13d
    eb3f:	je     ece6 <png_read_info+0x316>
    eb45:	cmp    $0x68495354,%r13d
    eb4c:	je     ecf9 <png_read_info+0x329>
    eb52:	cmp    $0x6f464673,%r13d
    eb59:	je     ed0c <png_read_info+0x33c>
    eb5f:	cmp    $0x7043414c,%r13d
    eb66:	je     ed1f <png_read_info+0x34f>
    eb6c:	cmp    $0x7343414c,%r13d
    eb73:	je     ed32 <png_read_info+0x362>
    eb79:	cmp    $0x70485973,%r13d
    eb80:	je     ed45 <png_read_info+0x375>
    eb86:	cmp    $0x73424954,%r13d
    eb8d:	je     ed58 <png_read_info+0x388>
    eb93:	cmp    $0x73524742,%r13d
    eb9a:	je     ed6b <png_read_info+0x39b>
    eba0:	cmp    $0x69434350,%r13d
    eba7:	je     ed7e <png_read_info+0x3ae>
    ebad:	cmp    $0x73504c54,%r13d
    ebb4:	je     ed91 <png_read_info+0x3c1>
    ebba:	cmp    $0x74455874,%r13d
    ebc1:	je     eda4 <png_read_info+0x3d4>
    ebc7:	cmp    $0x74494d45,%r13d
    ebce:	je     edb7 <png_read_info+0x3e7>
    ebd4:	cmp    $0x74524e53,%r13d
    ebdb:	je     edca <png_read_info+0x3fa>
    ebe1:	cmp    $0x7a545874,%r13d
    ebe8:	je     eddd <png_read_info+0x40d>
    ebee:	cmp    $0x69545874,%r13d
    ebf5:	je     edf0 <png_read_info+0x420>
    ebfb:	mov    %r15,%rdx
    ebfe:	mov    %rbx,%rdi
    ec01:	mov    %r12,%rsi
    ec04:	xor    %ecx,%ecx
    ec06:	callq  1fe00 <png_handle_unknown>
    ec0b:	jmpq   ea31 <png_read_info+0x61>
    ec10:	mov    %rbx,%rdi
    ec13:	lea    0x1ed5b(%rip),%rsi        # 2d975 <png_pass_yinc.24+0x7e>
    ec1a:	callq  5060 <png_chunk_error@plt>
    ec1f:	mov    %rax,%rdx
    ec22:	mov    %rbx,%rdi
    ec25:	mov    %r12,%rsi
    ec28:	callq  1cf50 <png_handle_IEND>
    ec2d:	jmpq   ea31 <png_read_info+0x61>
    ec32:	mov    %rax,%rcx
    ec35:	mov    %r15,%rdx
    ec38:	mov    %rbx,%rdi
    ec3b:	mov    %r12,%rsi
    ec3e:	callq  1fe00 <png_handle_unknown>
    ec43:	cmp    $0x504c5445,%r13d
    ec4a:	je     ee03 <png_read_info+0x433>
    ec50:	cmp    $0x49444154,%r13d
    ec57:	jne    ea31 <png_read_info+0x61>
    ec5d:	movl   $0x0,0x248(%rbx)
    ec67:	mov    -0x18(%rbp),%r13
    ec6b:	mov    -0x10(%rbp),%r12
    ec6f:	mov    -0x8(%rbp),%rbx
    ec73:	mov    -0x28(%rbp),%r15
    ec77:	mov    -0x20(%rbp),%r14
    ec7b:	leaveq 
    ec7c:	retq   
    ec7d:	mov    %r15,%rdx
    ec80:	mov    %rbx,%rdi
    ec83:	mov    %r12,%rsi
    ec86:	callq  1cc70 <png_handle_PLTE>
    ec8b:	jmpq   ea31 <png_read_info+0x61>
    ec90:	mov    %r15d,0x248(%rbx)
    ec97:	mov    -0x18(%rbp),%r13
    ec9b:	mov    -0x10(%rbp),%r12
    ec9f:	mov    -0x8(%rbp),%rbx
    eca3:	mov    -0x28(%rbp),%r15
    eca7:	mov    -0x20(%rbp),%r14
    ecab:	leaveq 
    ecac:	retq   
    ecad:	mov    %r15,%rdx
    ecb0:	mov    %rbx,%rdi
    ecb3:	mov    %r12,%rsi
    ecb6:	callq  1cfd0 <png_handle_bKGD>
    ecbb:	jmpq   ea31 <png_read_info+0x61>
    ecc0:	mov    %r15,%rdx
    ecc3:	mov    %rbx,%rdi
    ecc6:	mov    %r12,%rsi
    ecc9:	callq  1d230 <png_handle_cHRM>
    ecce:	jmpq   ea31 <png_read_info+0x61>
    ecd3:	mov    %r15,%rdx
    ecd6:	mov    %rbx,%rdi
    ecd9:	mov    %r12,%rsi
    ecdc:	callq  1d460 <png_handle_eXIf>
    ece1:	jmpq   ea31 <png_read_info+0x61>
    ece6:	mov    %r15,%rdx
    ece9:	mov    %rbx,%rdi
    ecec:	mov    %r12,%rsi
    ecef:	callq  1d690 <png_handle_gAMA>
    ecf4:	jmpq   ea31 <png_read_info+0x61>
    ecf9:	mov    %r15,%rdx
    ecfc:	mov    %rbx,%rdi
    ecff:	mov    %r12,%rsi
    ed02:	callq  1d780 <png_handle_hIST>
    ed07:	jmpq   ea31 <png_read_info+0x61>
    ed0c:	mov    %r15,%rdx
    ed0f:	mov    %rbx,%rdi
    ed12:	mov    %r12,%rsi
    ed15:	callq  1e410 <png_handle_oFFs>
    ed1a:	jmpq   ea31 <png_read_info+0x61>
    ed1f:	mov    %r15,%rdx
    ed22:	mov    %rbx,%rdi
    ed25:	mov    %r12,%rsi
    ed28:	callq  1e5d0 <png_handle_pCAL>
    ed2d:	jmpq   ea31 <png_read_info+0x61>
    ed32:	mov    %r15,%rdx
    ed35:	mov    %rbx,%rdi
    ed38:	mov    %r12,%rsi
    ed3b:	callq  1ed00 <png_handle_sCAL>
    ed40:	jmpq   ea31 <png_read_info+0x61>
    ed45:	mov    %r15,%rdx
    ed48:	mov    %rbx,%rdi
    ed4b:	mov    %r12,%rsi
    ed4e:	callq  1e980 <png_handle_pHYs>
    ed53:	jmpq   ea31 <png_read_info+0x61>
    ed58:	mov    %r15,%rdx
    ed5b:	mov    %rbx,%rdi
    ed5e:	mov    %r12,%rsi
    ed61:	callq  1eae0 <png_handle_sBIT>
    ed66:	jmpq   ea31 <png_read_info+0x61>
    ed6b:	mov    %r15,%rdx
    ed6e:	mov    %rbx,%rdi
    ed71:	mov    %r12,%rsi
    ed74:	callq  1f320 <png_handle_sRGB>
    ed79:	jmpq   ea31 <png_read_info+0x61>
    ed7e:	mov    %r15,%rdx
    ed81:	mov    %rbx,%rdi
    ed84:	mov    %r12,%rsi
    ed87:	callq  1d920 <png_handle_iCCP>
    ed8c:	jmpq   ea31 <png_read_info+0x61>
    ed91:	mov    %r15,%rdx
    ed94:	mov    %rbx,%rdi
    ed97:	mov    %r12,%rsi
    ed9a:	callq  1f010 <png_handle_sPLT>
    ed9f:	jmpq   ea31 <png_read_info+0x61>
    eda4:	mov    %r15,%rdx
    eda7:	mov    %rbx,%rdi
    edaa:	mov    %r12,%rsi
    edad:	callq  1f460 <png_handle_tEXt>
    edb2:	jmpq   ea31 <png_read_info+0x61>
    edb7:	mov    %r15,%rdx
    edba:	mov    %rbx,%rdi
    edbd:	mov    %r12,%rsi
    edc0:	callq  1f600 <png_handle_tIME>
    edc5:	jmpq   ea31 <png_read_info+0x61>
    edca:	mov    %r15,%rdx
    edcd:	mov    %rbx,%rdi
    edd0:	mov    %r12,%rsi
    edd3:	callq  1f730 <png_handle_tRNS>
    edd8:	jmpq   ea31 <png_read_info+0x61>
    eddd:	mov    %r15,%rdx
    ede0:	mov    %rbx,%rdi
    ede3:	mov    %r12,%rsi
    ede6:	callq  1fa40 <png_handle_zTXt>
    edeb:	jmpq   ea31 <png_read_info+0x61>
    edf0:	mov    %r15,%rdx
    edf3:	mov    %rbx,%rdi
    edf6:	mov    %r12,%rsi
    edf9:	callq  1e080 <png_handle_iTXt>
    edfe:	jmpq   ea31 <png_read_info+0x61>
    ee03:	mov    0x12c(%rbx),%eax
    ee09:	or     $0x2,%eax
    ee0c:	mov    %eax,0x12c(%rbx)
    ee12:	jmpq   ea31 <png_read_info+0x61>
    ee17:	nopw   0x0(%rax,%rax,1)

000000000000ee20 <png_start_read_image>:
    ee20:	push   %rbp
    ee21:	mov    %rsp,%rbp
    ee24:	test   %rdi,%rdi
    ee27:	jne    ee2b <png_start_read_image+0xb>
    ee29:	leaveq 
    ee2a:	retq   
    ee2b:	mov    0x130(%rdi),%eax
    ee31:	and    $0x40,%eax
    ee34:	test   %eax,%eax
    ee36:	je     ee46 <png_start_read_image+0x26>
    ee38:	lea    0x1eb64(%rip),%rsi        # 2d9a3 <png_pass_yinc.24+0xac>
    ee3f:	callq  b110 <png_app_error>
    ee44:	leaveq 
    ee45:	retq   
    ee46:	callq  1c5c0 <png_read_start_row>
    ee4b:	leaveq 
    ee4c:	retq   
    ee4d:	nopl   (%rax)

000000000000ee50 <png_read_update_info>:
    ee50:	push   %rbp
    ee51:	mov    %rsp,%rbp
    ee54:	sub    $0x10,%rsp
    ee58:	test   %rdi,%rdi
    ee5b:	jne    ee5f <png_read_update_info+0xf>
    ee5d:	leaveq 
    ee5e:	retq   
    ee5f:	mov    0x130(%rdi),%eax
    ee65:	and    $0x40,%eax
    ee68:	test   %eax,%eax
    ee6a:	je     ee7a <png_read_update_info+0x2a>
    ee6c:	lea    0x1eb6a(%rip),%rsi        # 2d9dd <png_pass_yinc.24+0xe6>
    ee73:	callq  b110 <png_app_error>
    ee78:	leaveq 
    ee79:	retq   
    ee7a:	mov    %rdi,%rax
    ee7d:	mov    %r14,-0x8(%rbp)
    ee81:	mov    %r15,-0x10(%rbp)
    ee85:	mov    %rdi,%r14
    ee88:	mov    %rax,%rdi
    ee8b:	mov    %rsi,%r15
    ee8e:	callq  1c5c0 <png_read_start_row>
    ee93:	mov    %r15,%rsi
    ee96:	mov    %r14,%rdi
    ee99:	callq  15d10 <png_read_transform_info>
    ee9e:	mov    -0x10(%rbp),%r15
    eea2:	mov    -0x8(%rbp),%r14
    eea6:	leaveq 
    eea7:	retq   
    eea8:	nopl   0x0(%rax,%rax,1)

000000000000eeb0 <png_read_rows>:
    eeb0:	push   %rbp
    eeb1:	mov    %rsp,%rbp
    eeb4:	sub    $0x50,%rsp
    eeb8:	test   %rdi,%rdi
    eebb:	jne    eebf <png_read_rows+0xf>
    eebd:	leaveq 
    eebe:	retq   
    eebf:	xor    %r8d,%r8d
    eec2:	test   %rsi,%rsi
    eec5:	jne    eef4 <png_read_rows+0x44>
    eec7:	mov    %r8,%rax
    eeca:	test   %rax,%rax
    eecd:	je     ef25 <png_read_rows+0x75>
    eecf:	mov    %rbx,-0x28(%rbp)
    eed3:	mov    %r12,-0x30(%rbp)
    eed7:	mov    %r13,-0x38(%rbp)
    eedb:	mov    %r14,-0x40(%rbp)
    eedf:	mov    %r15,-0x48(%rbp)
    eee3:	mov    %rdi,%r12
    eee6:	mov    %rcx,%r13
    eee9:	mov    %rsi,%r14
    eeec:	mov    %r8,%r15
    eeef:	mov    %r15,%rbx
    eef2:	jmp    ef6c <png_read_rows+0xbc>
    eef4:	test   %rdx,%rdx
    eef7:	je     ef87 <png_read_rows+0xd7>
    eefd:	mov    %rbx,-0x8(%rbp)
    ef01:	mov    %r12,-0x10(%rbp)
    ef05:	mov    %r13,-0x18(%rbp)
    ef09:	mov    %r14,-0x20(%rbp)
    ef0d:	mov    %r15,-0x48(%rbp)
    ef11:	mov    %rdx,%rbx
    ef14:	mov    %r8,%r12
    ef17:	mov    %rdi,%r13
    ef1a:	mov    %rcx,%r14
    ef1d:	mov    %rsi,%r15
    ef20:	jmpq   efab <png_read_rows+0xfb>
    ef25:	test   %rdx,%rdx
    ef28:	je     efc6 <png_read_rows+0x116>
    ef2e:	mov    %rbx,-0x28(%rbp)
    ef32:	mov    %r12,-0x30(%rbp)
    ef36:	mov    %r13,-0x38(%rbp)
    ef3a:	mov    %r14,-0x40(%rbp)
    ef3e:	mov    %r15,-0x48(%rbp)
    ef42:	mov    %rdx,%rbx
    ef45:	mov    %rdi,%r13
    ef48:	mov    %rcx,%r14
    ef4b:	mov    %r8,%r15
    ef4e:	mov    %r15,%r12
    ef51:	jmpq   efde <png_read_rows+0x12e>
    ef56:	mov    (%r14),%rsi
    ef59:	mov    %r12,%rdi
    ef5c:	mov    %rbx,%rdx
    ef5f:	callq  5600 <png_read_row@plt>
    ef64:	add    $0x1,%r15d
    ef68:	add    $0x8,%r14
    ef6c:	cmp    %r15d,%r13d
    ef6f:	ja     ef56 <png_read_rows+0xa6>
    ef71:	mov    -0x48(%rbp),%r15
    ef75:	mov    -0x40(%rbp),%r14
    ef79:	mov    -0x38(%rbp),%r13
    ef7d:	mov    -0x30(%rbp),%r12
    ef81:	mov    -0x28(%rbp),%rbx
    ef85:	leaveq 
    ef86:	retq   
    ef87:	mov    $0x1,%eax
    ef8c:	jmpq   eeca <png_read_rows+0x1a>
    ef91:	mov    (%r15),%rsi
    ef94:	mov    (%rbx),%rdx
    ef97:	mov    %r13,%rdi
    ef9a:	callq  5600 <png_read_row@plt>
    ef9f:	add    $0x1,%r12d
    efa3:	add    $0x8,%r15
    efa7:	add    $0x8,%rbx
    efab:	cmp    %r14d,%r12d
    efae:	jb     ef91 <png_read_rows+0xe1>
    efb0:	mov    -0x48(%rbp),%r15
    efb4:	mov    -0x20(%rbp),%r14
    efb8:	mov    -0x18(%rbp),%r13
    efbc:	mov    -0x10(%rbp),%r12
    efc0:	mov    -0x8(%rbp),%rbx
    efc4:	leaveq 
    efc5:	retq   
    efc6:	leaveq 
    efc7:	retq   
    efc8:	mov    (%rbx),%rdx
    efcb:	mov    %r13,%rdi
    efce:	mov    %r12,%rsi
    efd1:	callq  5600 <png_read_row@plt>
    efd6:	add    $0x1,%r15d
    efda:	add    $0x8,%rbx
    efde:	cmp    %r15d,%r14d
    efe1:	ja     efc8 <png_read_rows+0x118>
    efe3:	mov    -0x48(%rbp),%r15
    efe7:	mov    -0x40(%rbp),%r14
    efeb:	mov    -0x38(%rbp),%r13
    efef:	mov    -0x30(%rbp),%r12
    eff3:	mov    -0x28(%rbp),%rbx
    eff7:	leaveq 
    eff8:	retq   
    eff9:	nopl   0x0(%rax)

000000000000f000 <png_read_row>:
    f000:	push   %rbp
    f001:	mov    %rsp,%rbp
    f004:	sub    $0x30,%rsp
    f008:	test   %rdi,%rdi
    f00b:	jne    f00f <png_read_row+0xf>
    f00d:	leaveq 
    f00e:	retq   
    f00f:	mov    0x130(%rdi),%eax
    f015:	and    $0x40,%eax
    f018:	test   %eax,%eax
    f01a:	je     f030 <png_read_row+0x30>
    f01c:	mov    %r15,%rcx
    f01f:	mov    %rsi,%r15
    f022:	mov    %r13,%r8
    f025:	mov    %rdi,%r13
    f028:	mov    %r14,%r9
    f02b:	mov    %rdx,%r14
    f02e:	jmp    f05f <png_read_row+0x5f>
    f030:	mov    %rdi,%rax
    f033:	mov    %r15,-0x8(%rbp)
    f037:	mov    %rdx,-0x10(%rbp)
    f03b:	mov    %rsi,-0x18(%rbp)
    f03f:	mov    %r13,%r15
    f042:	mov    %rdi,%r13
    f045:	mov    %rax,%rdi
    f048:	callq  1c5c0 <png_read_start_row>
    f04d:	mov    %r15,%r8
    f050:	mov    %r14,%r9
    f053:	mov    -0x18(%rbp),%r15
    f057:	mov    -0x10(%rbp),%r14
    f05b:	mov    -0x8(%rbp),%rcx
    f05f:	mov    0x210(%r13),%esi
    f066:	mov    %esi,-0x30(%rbp)
    f069:	movzbl 0x267(%r13),%eax
    f071:	mov    %al,-0x20(%rbp)
    f074:	movzbl 0x268(%r13),%eax
    f07c:	mov    %al,-0x1f(%rbp)
    f07f:	movzbl 0x26b(%r13),%eax
    f087:	mov    %al,-0x1e(%rbp)
    f08a:	movzbl 0x26a(%r13),%edx
    f092:	cmp    $0x7,%dl
    f095:	ja     f0a8 <png_read_row+0xa8>
    f097:	mov    %rdx,%rax
    f09a:	imul   %rsi,%rax
    f09e:	add    $0x7,%rax
    f0a2:	shr    $0x3,%rax
    f0a6:	jmp    f0b3 <png_read_row+0xb3>
    f0a8:	mov    %rdx,%rax
    f0ab:	shr    $0x3,%rax
    f0af:	imul   %rsi,%rax
    f0b3:	mov    %dl,-0x1d(%rbp)
    f0b6:	mov    %rax,-0x28(%rbp)
    f0ba:	mov    $0x1,%edx
    f0bf:	movzbl 0x264(%r13),%eax
    f0c7:	test   %al,%al
    f0c9:	jne    f1b1 <png_read_row+0x1b1>
    f0cf:	mov    0x12c(%r13),%eax
    f0d6:	and    $0x4,%eax
    f0d9:	test   %eax,%eax
    f0db:	je     f238 <png_read_row+0x238>
    f0e1:	mov    0x228(%r13),%rax
    f0e8:	movb   $0xff,(%rax)
    f0eb:	mov    0x228(%r13),%rsi
    f0f2:	mov    -0x28(%rbp),%rdx
    f0f6:	add    $0x1,%rdx
    f0fa:	mov    %r13,%rdi
    f0fd:	mov    %rcx,-0x18(%rbp)
    f101:	mov    %r8,-0x8(%rbp)
    f105:	mov    %r9,-0x10(%rbp)
    f109:	callq  1c0f0 <png_read_IDAT_data>
    f10e:	lea    -0x30(%rbp),%rsi
    f112:	mov    0x228(%r13),%rax
    f119:	movzbl (%rax),%r8d
    f11d:	test   %r8b,%r8b
    f120:	jne    f247 <png_read_row+0x247>
    f126:	mov    0x220(%r13),%rdi
    f12d:	mov    0x228(%r13),%rsi
    f134:	mov    -0x28(%rbp),%rdx
    f138:	add    $0x1,%rdx
    f13c:	callq  54c0 <memcpy@plt>
    f141:	mov    0x3d8(%r13),%eax
    f148:	and    $0x4,%eax
    f14b:	test   %eax,%eax
    f14d:	je     f16f <png_read_row+0x16f>
    f14f:	movzbl 0x3dc(%r13),%eax
    f157:	cmp    $0x40,%al
    f159:	jne    f16f <png_read_row+0x16f>
    f15b:	mov    0x228(%r13),%rsi
    f162:	add    $0x1,%rsi
    f166:	lea    -0x30(%rbp),%rdi
    f16a:	callq  102e0 <png_do_read_intrapixel>
    f16f:	mov    0x134(%r13),%eax
    f176:	test   %eax,%eax
    f178:	je     f186 <png_read_row+0x186>
    f17a:	mov    %r13,%rdi
    f17d:	lea    -0x30(%rbp),%rsi
    f181:	callq  16030 <png_do_read_transformations>
    f186:	movzbl 0x26f(%r13),%ecx
    f18e:	test   %cl,%cl
    f190:	je     f260 <png_read_row+0x260>
    f196:	movzbl -0x1d(%rbp),%eax
    f19a:	cmp    %al,%cl
    f19c:	je     f28a <png_read_row+0x28a>
    f1a2:	mov    %r13,%rdi
    f1a5:	lea    0x1e8be(%rip),%rsi        # 2da6a <png_pass_yinc.24+0x173>
    f1ac:	callq  5470 <png_error@plt>
    f1b1:	mov    0x134(%r13),%eax
    f1b8:	and    $0x2,%eax
    f1bb:	test   %eax,%eax
    f1bd:	je     f0cf <png_read_row+0xcf>
    f1c3:	movzbl 0x265(%r13),%eax
    f1cb:	cmp    $0x5,%al
    f1cd:	ja     f300 <png_read_row+0x300>
    f1d3:	lea    0x1e726(%rip),%rsi        # 2d900 <png_pass_yinc.24+0x9>
    f1da:	movslq (%rsi,%rax,4),%rax
    f1de:	add    %rsi,%rax
    f1e1:	jmpq   *%rax
    f1e3:	mov    0x214(%r13),%eax
    f1ea:	and    $0x1,%eax
    f1ed:	test   %eax,%eax
    f1ef:	jne    f201 <png_read_row+0x201>
    f1f1:	mov    0x1f8(%r13),%eax
    f1f8:	cmp    $0x1,%eax
    f1fb:	ja     f0cf <png_read_row+0xcf>
    f201:	test   %r14,%r14
    f204:	je     f225 <png_read_row+0x225>
    f206:	mov    %r13,%rdi
    f209:	mov    %rcx,-0x18(%rbp)
    f20d:	mov    %r14,%rsi
    f210:	mov    %r8,%r14
    f213:	mov    %r9,%r15
    f216:	callq  1b430 <png_combine_row>
    f21b:	mov    %r14,%r8
    f21e:	mov    %r15,%r9
    f221:	mov    -0x18(%rbp),%rcx
    f225:	mov    %r13,%rdi
    f228:	mov    %r8,%r13
    f22b:	mov    %r9,%r14
    f22e:	mov    %rcx,%r15
    f231:	callq  1c4a0 <png_read_finish_row>
    f236:	leaveq 
    f237:	retq   
    f238:	mov    %r13,%rdi
    f23b:	lea    0x1e7d5(%rip),%rsi        # 2da17 <png_pass_yinc.24+0x120>
    f242:	callq  5470 <png_error@plt>
    f247:	cmp    $0x4,%r8b
    f24b:	jbe    f4c0 <png_read_row+0x4c0>
    f251:	mov    %r13,%rdi
    f254:	lea    0x1e7dd(%rip),%rsi        # 2da38 <png_pass_yinc.24+0x141>
    f25b:	callq  5470 <png_error@plt>
    f260:	movzbl -0x1d(%rbp),%eax
    f264:	mov    %al,0x26f(%r13)
    f26b:	movzbl 0x26e(%r13),%ecx
    f273:	movzbl -0x1d(%rbp),%eax
    f277:	cmp    %al,%cl
    f279:	jae    f28a <png_read_row+0x28a>
    f27b:	mov    %r13,%rdi
    f27e:	lea    0x1e7cd(%rip),%rsi        # 2da52 <png_pass_yinc.24+0x15b>
    f285:	callq  5470 <png_error@plt>
    f28a:	movzbl 0x264(%r13),%eax
    f292:	test   %al,%al
    f294:	je     f4dc <png_read_row+0x4dc>
    f29a:	mov    0x134(%r13),%ecx
    f2a1:	mov    %rcx,%rax
    f2a4:	and    $0x2,%eax
    f2a7:	test   %eax,%eax
    f2a9:	je     f4dc <png_read_row+0x4dc>
    f2af:	movzbl 0x265(%r13),%edx
    f2b7:	cmp    $0x5,%dl
    f2ba:	ja     f2d0 <png_read_row+0x2d0>
    f2bc:	mov    0x228(%r13),%rsi
    f2c3:	add    $0x1,%rsi
    f2c7:	lea    -0x30(%rbp),%rdi
    f2cb:	callq  1bb20 <png_do_read_interlace>
    f2d0:	test   %r14,%r14
    f2d3:	je     f2e5 <png_read_row+0x2e5>
    f2d5:	mov    %r14,%rsi
    f2d8:	mov    %r13,%rdi
    f2db:	mov    $0x1,%edx
    f2e0:	callq  1b430 <png_combine_row>
    f2e5:	test   %r15,%r15
    f2e8:	je     f509 <png_read_row+0x509>
    f2ee:	mov    %r15,%rsi
    f2f1:	xor    %edx,%edx
    f2f3:	mov    %r13,%rdi
    f2f6:	callq  1b430 <png_combine_row>
    f2fb:	jmpq   f509 <png_read_row+0x509>
    f300:	mov    0x214(%r13),%eax
    f307:	and    $0x1,%eax
    f30a:	test   %eax,%eax
    f30c:	jne    f0cf <png_read_row+0xcf>
    f312:	mov    %r13,%rdi
    f315:	mov    %r8,%r13
    f318:	mov    %r9,%r14
    f31b:	mov    %rcx,%r15
    f31e:	callq  1c4a0 <png_read_finish_row>
    f323:	leaveq 
    f324:	retq   
    f325:	mov    0x214(%r13),%eax
    f32c:	and    $0x7,%eax
    f32f:	test   %eax,%eax
    f331:	je     f0cf <png_read_row+0xcf>
    f337:	test   %r14,%r14
    f33a:	je     f35b <png_read_row+0x35b>
    f33c:	mov    %r13,%rdi
    f33f:	mov    %rcx,-0x18(%rbp)
    f343:	mov    %r14,%rsi
    f346:	mov    %r9,%r14
    f349:	mov    %r8,%r15
    f34c:	callq  1b430 <png_combine_row>
    f351:	mov    %r15,%r8
    f354:	mov    %r14,%r9
    f357:	mov    -0x18(%rbp),%rcx
    f35b:	mov    %r13,%rdi
    f35e:	mov    %r8,%r13
    f361:	mov    %r9,%r14
    f364:	mov    %rcx,%r15
    f367:	callq  1c4a0 <png_read_finish_row>
    f36c:	leaveq 
    f36d:	retq   
    f36e:	mov    0x214(%r13),%eax
    f375:	and    $0x7,%eax
    f378:	test   %eax,%eax
    f37a:	jne    f38c <png_read_row+0x38c>
    f37c:	mov    0x1f8(%r13),%eax
    f383:	cmp    $0x4,%eax
    f386:	ja     f0cf <png_read_row+0xcf>
    f38c:	test   %r14,%r14
    f38f:	je     f3b0 <png_read_row+0x3b0>
    f391:	mov    %r13,%rdi
    f394:	mov    %rcx,-0x18(%rbp)
    f398:	mov    %r14,%rsi
    f39b:	mov    %r8,%r14
    f39e:	mov    %r9,%r15
    f3a1:	callq  1b430 <png_combine_row>
    f3a6:	mov    %r14,%r8
    f3a9:	mov    %r15,%r9
    f3ac:	mov    -0x18(%rbp),%rcx
    f3b0:	mov    %r13,%rdi
    f3b3:	mov    %r8,%r13
    f3b6:	mov    %r9,%r14
    f3b9:	mov    %rcx,%r15
    f3bc:	callq  1c4a0 <png_read_finish_row>
    f3c1:	leaveq 
    f3c2:	retq   
    f3c3:	mov    0x214(%r13),%eax
    f3ca:	mov    %rax,%rsi
    f3cd:	and    $0x7,%esi
    f3d0:	cmp    $0x4,%esi
    f3d3:	je     f0cf <png_read_row+0xcf>
    f3d9:	test   %r14,%r14
    f3dc:	je     f404 <png_read_row+0x404>
    f3de:	and    $0x4,%eax
    f3e1:	test   %eax,%eax
    f3e3:	je     f404 <png_read_row+0x404>
    f3e5:	mov    %r13,%rdi
    f3e8:	mov    %rcx,-0x18(%rbp)
    f3ec:	mov    %r14,%rsi
    f3ef:	mov    %r9,%r14
    f3f2:	mov    %r8,%r15
    f3f5:	callq  1b430 <png_combine_row>
    f3fa:	mov    %r15,%r8
    f3fd:	mov    %r14,%r9
    f400:	mov    -0x18(%rbp),%rcx
    f404:	mov    %r13,%rdi
    f407:	mov    %r8,%r13
    f40a:	mov    %r9,%r14
    f40d:	mov    %rcx,%r15
    f410:	callq  1c4a0 <png_read_finish_row>
    f415:	leaveq 
    f416:	retq   
    f417:	mov    0x214(%r13),%eax
    f41e:	and    $0x3,%eax
    f421:	test   %eax,%eax
    f423:	jne    f435 <png_read_row+0x435>
    f425:	mov    0x1f8(%r13),%eax
    f42c:	cmp    $0x2,%eax
    f42f:	ja     f0cf <png_read_row+0xcf>
    f435:	test   %r14,%r14
    f438:	je     f459 <png_read_row+0x459>
    f43a:	mov    %r13,%rdi
    f43d:	mov    %rcx,-0x18(%rbp)
    f441:	mov    %r14,%rsi
    f444:	mov    %r8,%r14
    f447:	mov    %r9,%r15
    f44a:	callq  1b430 <png_combine_row>
    f44f:	mov    %r14,%r8
    f452:	mov    %r15,%r9
    f455:	mov    -0x18(%rbp),%rcx
    f459:	mov    %r13,%rdi
    f45c:	mov    %r8,%r13
    f45f:	mov    %r9,%r14
    f462:	mov    %rcx,%r15
    f465:	callq  1c4a0 <png_read_finish_row>
    f46a:	leaveq 
    f46b:	retq   
    f46c:	mov    0x214(%r13),%eax
    f473:	mov    %rax,%rsi
    f476:	and    $0x3,%esi
    f479:	cmp    $0x2,%esi
    f47c:	je     f0cf <png_read_row+0xcf>
    f482:	test   %r14,%r14
    f485:	je     f4ad <png_read_row+0x4ad>
    f487:	and    $0x2,%eax
    f48a:	test   %eax,%eax
    f48c:	je     f4ad <png_read_row+0x4ad>
    f48e:	mov    %r13,%rdi
    f491:	mov    %rcx,-0x18(%rbp)
    f495:	mov    %r14,%rsi
    f498:	mov    %r9,%r14
    f49b:	mov    %r8,%r15
    f49e:	callq  1b430 <png_combine_row>
    f4a3:	mov    %r15,%r8
    f4a6:	mov    %r14,%r9
    f4a9:	mov    -0x18(%rbp),%rcx
    f4ad:	mov    %r13,%rdi
    f4b0:	mov    %r8,%r13
    f4b3:	mov    %r9,%r14
    f4b6:	mov    %rcx,%r15
    f4b9:	callq  1c4a0 <png_read_finish_row>
    f4be:	leaveq 
    f4bf:	retq   
    f4c0:	lea    0x1(%rax),%rdx
    f4c4:	mov    0x220(%r13),%rcx
    f4cb:	add    $0x1,%rcx
    f4cf:	mov    %r13,%rdi
    f4d2:	callq  1c050 <png_read_filter_row>
    f4d7:	jmpq   f126 <png_read_row+0x126>
    f4dc:	mov    $0xffffffffffffffff,%rdx
    f4e3:	test   %r15,%r15
    f4e6:	je     f4f9 <png_read_row+0x4f9>
    f4e8:	mov    %r15,%rsi
    f4eb:	mov    %r13,%rdi
    f4ee:	mov    %rdx,%r15
    f4f1:	callq  1b430 <png_combine_row>
    f4f6:	mov    %r15,%rdx
    f4f9:	test   %r14,%r14
    f4fc:	je     f509 <png_read_row+0x509>
    f4fe:	mov    %r14,%rsi
    f501:	mov    %r13,%rdi
    f504:	callq  1b430 <png_combine_row>
    f509:	mov    %r13,%rdi
    f50c:	callq  1c4a0 <png_read_finish_row>
    f511:	mov    0x300(%r13),%rax
    f518:	test   %rax,%rax
    f51b:	jne    f52b <png_read_row+0x52b>
    f51d:	mov    -0x10(%rbp),%r14
    f521:	mov    -0x8(%rbp),%r13
    f525:	mov    -0x18(%rbp),%r15
    f529:	leaveq 
    f52a:	retq   
    f52b:	mov    %r13,%rdi
    f52e:	mov    0x214(%rdi),%esi
    f534:	movzbl 0x265(%rdi),%edx
    f53b:	callq  *%rax
    f53d:	mov    -0x10(%rbp),%r14
    f541:	mov    -0x8(%rbp),%r13
    f545:	mov    -0x18(%rbp),%r15
    f549:	leaveq 
    f54a:	retq   
    f54b:	nopl   0x0(%rax,%rax,1)

000000000000f550 <png_read_image>:
    f550:	push   %rbp
    f551:	mov    %rsp,%rbp
    f554:	sub    $0x40,%rsp
    f558:	mov    %rsi,-0x8(%rbp)
    f55c:	test   %rdi,%rdi
    f55f:	jne    f563 <png_read_image+0x13>
    f561:	leaveq 
    f562:	retq   
    f563:	mov    0x130(%rdi),%eax
    f569:	and    $0x40,%eax
    f56c:	test   %eax,%eax
    f56e:	je     f5ac <png_read_image+0x5c>
    f570:	movzbl 0x264(%rdi),%eax
    f577:	test   %al,%al
    f579:	jne    f607 <png_read_image+0xb7>
    f57f:	mov    %r14,%rax
    f582:	mov    %r12,%r14
    f585:	mov    %rdi,%r12
    f588:	mov    %r15,%rcx
    f58b:	mov    %r13,%r15
    f58e:	mov    %rbx,%r13
    f591:	mov    %rsi,%rbx
    f594:	mov    %r12,%rdi
    f597:	mov    %rax,-0x28(%rbp)
    f59b:	mov    %rcx,-0x30(%rbp)
    f59f:	callq  53f0 <png_set_interlace_handling@plt>
    f5a4:	mov    %r15,%rcx
    f5a7:	mov    %r14,%rdx
    f5aa:	jmp    f5e7 <png_read_image+0x97>
    f5ac:	mov    %rdi,%rax
    f5af:	mov    %r14,-0x28(%rbp)
    f5b3:	mov    %r15,-0x30(%rbp)
    f5b7:	mov    %r12,%r14
    f5ba:	mov    %rdi,%r12
    f5bd:	mov    %rax,%rdi
    f5c0:	mov    %r13,%r15
    f5c3:	mov    %rbx,%r13
    f5c6:	mov    %rsi,%rbx
    f5c9:	callq  53f0 <png_set_interlace_handling@plt>
    f5ce:	mov    %r12,%rdi
    f5d1:	mov    %r15,-0x40(%rbp)
    f5d5:	mov    %rax,%r15
    f5d8:	callq  5370 <png_start_read_image@plt>
    f5dd:	mov    %r15,%rax
    f5e0:	mov    %r14,%rdx
    f5e3:	mov    -0x40(%rbp),%rcx
    f5e7:	mov    %rax,-0x38(%rbp)
    f5eb:	mov    0x1fc(%r12),%r15d
    f5f3:	xor    %r14d,%r14d
    f5f6:	mov    %rcx,-0x20(%rbp)
    f5fa:	mov    %r13,-0x10(%rbp)
    f5fe:	mov    %rdx,-0x18(%rbp)
    f602:	mov    %r14,%rcx
    f605:	jmp    f658 <png_read_image+0x108>
    f607:	mov    0x134(%rdi),%eax
    f60d:	and    $0x2,%eax
    f610:	test   %eax,%eax
    f612:	je     f672 <png_read_image+0x122>
    f614:	mov    %r14,%rax
    f617:	mov    %r12,%r14
    f61a:	mov    %rdi,%r12
    f61d:	mov    %r15,%rcx
    f620:	mov    %r13,%r15
    f623:	mov    %rbx,%r13
    f626:	mov    %rsi,%rbx
    f629:	jmpq   f594 <png_read_image+0x44>
    f62e:	mov    (%rbx),%rsi
    f631:	mov    %r12,%rdi
    f634:	mov    %r14,%rdx
    f637:	callq  5600 <png_read_row@plt>
    f63c:	add    $0x8,%rbx
    f640:	add    $0x1,%r13d
    f644:	cmp    %r15d,%r13d
    f647:	jb     f62e <png_read_image+0xde>
    f649:	mov    -0x40(%rbp),%rax
    f64d:	lea    0x1(%rax),%ecx
    f650:	mov    -0x8(%rbp),%rbx
    f654:	mov    -0x38(%rbp),%rax
    f658:	cmp    %ecx,%eax
    f65a:	jg     f6bb <png_read_image+0x16b>
    f65c:	mov    -0x18(%rbp),%r12
    f660:	mov    -0x10(%rbp),%rbx
    f664:	mov    -0x20(%rbp),%r13
    f668:	mov    -0x30(%rbp),%r15
    f66c:	mov    -0x28(%rbp),%r14
    f670:	leaveq 
    f671:	retq   
    f672:	lea    0x1e420(%rip),%rax        # 2da99 <png_pass_yinc.24+0x1a2>
    f679:	mov    %rdi,%rcx
    f67c:	mov    %r14,-0x38(%rbp)
    f680:	mov    %r15,-0x40(%rbp)
    f684:	mov    %r12,%r14
    f687:	mov    %rdi,%r12
    f68a:	mov    %rcx,%rdi
    f68d:	mov    %r13,%r15
    f690:	mov    %rbx,%r13
    f693:	mov    %rsi,%rbx
    f696:	mov    %rax,%rsi
    f699:	callq  5390 <png_warning@plt>
    f69e:	mov    0x1fc(%r12),%eax
    f6a6:	mov    %eax,0x200(%r12)
    f6ae:	mov    -0x40(%rbp),%rcx
    f6b2:	mov    -0x38(%rbp),%rax
    f6b6:	jmpq   f594 <png_read_image+0x44>
    f6bb:	mov    %rcx,-0x40(%rbp)
    f6bf:	mov    %r14,%r13
    f6c2:	jmp    f644 <png_read_image+0xf4>
    f6c4:	data16 nopw %cs:0x0(%rax,%rax,1)
    f6cf:	nop

000000000000f6d0 <png_read_end>:
    f6d0:	push   %rbp
    f6d1:	mov    %rsp,%rbp
    f6d4:	sub    $0x30,%rsp
    f6d8:	test   %rdi,%rdi
    f6db:	jne    f6df <png_read_end+0xf>
    f6dd:	leaveq 
    f6de:	retq   
    f6df:	mov    $0x49444154,%ecx
    f6e4:	mov    %rdi,%rax
    f6e7:	mov    %r14,-0x20(%rbp)
    f6eb:	mov    %r15,-0x28(%rbp)
    f6ef:	mov    %r13,%r14
    f6f2:	mov    %rbx,%r13
    f6f5:	mov    %rdi,%rbx
    f6f8:	mov    %rax,%rdi
    f6fb:	mov    %r12,%r15
    f6fe:	mov    %rsi,%r12
    f701:	mov    %rcx,%rsi
    f704:	callq  6e80 <png_chunk_unknown_handling>
    f709:	test   %eax,%eax
    f70b:	je     f712 <png_read_end+0x42>
    f70d:	mov    %r14,%rcx
    f710:	jmp    f71d <png_read_end+0x4d>
    f712:	mov    %rbx,%rdi
    f715:	callq  1c3e0 <png_read_finish_IDAT>
    f71a:	mov    %r14,%rcx
    f71d:	lea    0x1e3df(%rip),%r14        # 2db03 <png_pass_yinc.24+0x20c>
    f724:	movzbl 0x267(%rbx),%eax
    f72b:	cmp    $0x3,%al
    f72d:	je     f8b8 <png_read_end+0x1e8>
    f733:	mov    %r13,-0x8(%rbp)
    f737:	mov    %r15,-0x10(%rbp)
    f73b:	mov    %rcx,-0x18(%rbp)
    f73f:	mov    %rbx,%rdi
    f742:	callq  1b160 <png_read_chunk_header>
    f747:	mov    0x218(%rbx),%r15d
    f74e:	cmp    $0x49444154,%r15d
    f755:	je     f769 <png_read_end+0x99>
    f757:	mov    0x12c(%rbx),%ecx
    f75d:	or     $0x2000,%ecx
    f763:	mov    %ecx,0x12c(%rbx)
    f769:	cmp    $0x49454e44,%r15d
    f770:	je     f8dc <png_read_end+0x20c>
    f776:	cmp    $0x49484452,%r15d
    f77d:	je     f911 <png_read_end+0x241>
    f783:	test   %r12,%r12
    f786:	je     f921 <png_read_end+0x251>
    f78c:	mov    %rax,%r13
    f78f:	mov    %rbx,%rdi
    f792:	mov    %r15,%rsi
    f795:	callq  6e80 <png_chunk_unknown_handling>
    f79a:	test   %eax,%eax
    f79c:	jne    f92e <png_read_end+0x25e>
    f7a2:	cmp    $0x49444154,%r15d
    f7a9:	je     f966 <png_read_end+0x296>
    f7af:	cmp    $0x504c5445,%r15d
    f7b6:	je     f9a6 <png_read_end+0x2d6>
    f7bc:	cmp    $0x624b4744,%r15d
    f7c3:	je     f9b9 <png_read_end+0x2e9>
    f7c9:	cmp    $0x6348524d,%r15d
    f7d0:	je     f9cc <png_read_end+0x2fc>
    f7d6:	cmp    $0x65584966,%r15d
    f7dd:	je     f9df <png_read_end+0x30f>
    f7e3:	cmp    $0x67414d41,%r15d
    f7ea:	je     f9f2 <png_read_end+0x322>
    f7f0:	cmp    $0x68495354,%r15d
    f7f7:	je     fa05 <png_read_end+0x335>
    f7fd:	cmp    $0x6f464673,%r15d
    f804:	je     fa18 <png_read_end+0x348>
    f80a:	cmp    $0x7043414c,%r15d
    f811:	je     fa2b <png_read_end+0x35b>
    f817:	cmp    $0x7343414c,%r15d
    f81e:	je     fa3e <png_read_end+0x36e>
    f824:	cmp    $0x70485973,%r15d
    f82b:	je     fa51 <png_read_end+0x381>
    f831:	cmp    $0x73424954,%r15d
    f838:	je     fa64 <png_read_end+0x394>
    f83e:	cmp    $0x73524742,%r15d
    f845:	je     fa77 <png_read_end+0x3a7>
    f84b:	cmp    $0x69434350,%r15d
    f852:	je     fa8a <png_read_end+0x3ba>
    f858:	cmp    $0x73504c54,%r15d
    f85f:	je     fa9d <png_read_end+0x3cd>
    f865:	cmp    $0x74455874,%r15d
    f86c:	je     fab0 <png_read_end+0x3e0>
    f872:	cmp    $0x74494d45,%r15d
    f879:	je     fac3 <png_read_end+0x3f3>
    f87f:	cmp    $0x74524e53,%r15d
    f886:	je     fad6 <png_read_end+0x406>
    f88c:	cmp    $0x7a545874,%r15d
    f893:	je     fae9 <png_read_end+0x419>
    f899:	cmp    $0x69545874,%r15d
    f8a0:	je     fafc <png_read_end+0x42c>
    f8a6:	mov    %r13,%rdx
    f8a9:	mov    %rbx,%rdi
    f8ac:	mov    %r12,%rsi
    f8af:	xor    %ecx,%ecx
    f8b1:	callq  1fe00 <png_handle_unknown>
    f8b6:	jmp    f8ea <png_read_end+0x21a>
    f8b8:	movzwl 0x258(%rbx),%eax
    f8bf:	cmp    0x25c(%rbx),%eax
    f8c5:	jl     fb0f <png_read_end+0x43f>
    f8cb:	mov    %r13,-0x8(%rbp)
    f8cf:	mov    %r15,-0x10(%rbp)
    f8d3:	mov    %rcx,-0x18(%rbp)
    f8d7:	jmpq   f73f <png_read_end+0x6f>
    f8dc:	mov    %rax,%rdx
    f8df:	mov    %rbx,%rdi
    f8e2:	mov    %r12,%rsi
    f8e5:	callq  1cf50 <png_handle_IEND>
    f8ea:	mov    0x12c(%rbx),%eax
    f8f0:	and    $0x10,%eax
    f8f3:	test   %eax,%eax
    f8f5:	je     f73f <png_read_end+0x6f>
    f8fb:	mov    -0x18(%rbp),%r13
    f8ff:	mov    -0x10(%rbp),%r12
    f903:	mov    -0x8(%rbp),%rbx
    f907:	mov    -0x28(%rbp),%r15
    f90b:	mov    -0x20(%rbp),%r14
    f90f:	leaveq 
    f910:	retq   
    f911:	mov    %rax,%rdx
    f914:	mov    %rbx,%rdi
    f917:	mov    %r12,%rsi
    f91a:	callq  1cae0 <png_handle_IHDR>
    f91f:	jmp    f8ea <png_read_end+0x21a>
    f921:	mov    %rax,%rsi
    f924:	mov    %rbx,%rdi
    f927:	callq  1b270 <png_crc_finish>
    f92c:	jmp    f8ea <png_read_end+0x21a>
    f92e:	cmp    $0x49444154,%r15d
    f935:	je     fb2f <png_read_end+0x45f>
    f93b:	mov    %rax,%rcx
    f93e:	mov    %r13,%rdx
    f941:	mov    %rbx,%rdi
    f944:	mov    %r12,%rsi
    f947:	callq  1fe00 <png_handle_unknown>
    f94c:	cmp    $0x504c5445,%r15d
    f953:	jne    f8ea <png_read_end+0x21a>
    f955:	mov    0x12c(%rbx),%eax
    f95b:	or     $0x2,%eax
    f95e:	mov    %eax,0x12c(%rbx)
    f964:	jmp    f8ea <png_read_end+0x21a>
    f966:	test   %r13d,%r13d
    f969:	je     f978 <png_read_end+0x2a8>
    f96b:	mov    0x130(%rbx),%eax
    f971:	and    $0x8,%eax
    f974:	test   %eax,%eax
    f976:	je     f987 <png_read_end+0x2b7>
    f978:	mov    0x12c(%rbx),%eax
    f97e:	and    $0x2000,%eax
    f983:	test   %eax,%eax
    f985:	je     f996 <png_read_end+0x2c6>
    f987:	mov    %rbx,%rdi
    f98a:	lea    0x1e188(%rip),%rsi        # 2db19 <png_pass_yinc.24+0x222>
    f991:	callq  5590 <png_benign_error@plt>
    f996:	mov    %r13,%rsi
    f999:	mov    %rbx,%rdi
    f99c:	callq  1b270 <png_crc_finish>
    f9a1:	jmpq   f8ea <png_read_end+0x21a>
    f9a6:	mov    %r13,%rdx
    f9a9:	mov    %rbx,%rdi
    f9ac:	mov    %r12,%rsi
    f9af:	callq  1cc70 <png_handle_PLTE>
    f9b4:	jmpq   f8ea <png_read_end+0x21a>
    f9b9:	mov    %r13,%rdx
    f9bc:	mov    %rbx,%rdi
    f9bf:	mov    %r12,%rsi
    f9c2:	callq  1cfd0 <png_handle_bKGD>
    f9c7:	jmpq   f8ea <png_read_end+0x21a>
    f9cc:	mov    %r13,%rdx
    f9cf:	mov    %rbx,%rdi
    f9d2:	mov    %r12,%rsi
    f9d5:	callq  1d230 <png_handle_cHRM>
    f9da:	jmpq   f8ea <png_read_end+0x21a>
    f9df:	mov    %r13,%rdx
    f9e2:	mov    %rbx,%rdi
    f9e5:	mov    %r12,%rsi
    f9e8:	callq  1d460 <png_handle_eXIf>
    f9ed:	jmpq   f8ea <png_read_end+0x21a>
    f9f2:	mov    %r13,%rdx
    f9f5:	mov    %rbx,%rdi
    f9f8:	mov    %r12,%rsi
    f9fb:	callq  1d690 <png_handle_gAMA>
    fa00:	jmpq   f8ea <png_read_end+0x21a>
    fa05:	mov    %r13,%rdx
    fa08:	mov    %rbx,%rdi
    fa0b:	mov    %r12,%rsi
    fa0e:	callq  1d780 <png_handle_hIST>
    fa13:	jmpq   f8ea <png_read_end+0x21a>
    fa18:	mov    %r13,%rdx
    fa1b:	mov    %rbx,%rdi
    fa1e:	mov    %r12,%rsi
    fa21:	callq  1e410 <png_handle_oFFs>
    fa26:	jmpq   f8ea <png_read_end+0x21a>
    fa2b:	mov    %r13,%rdx
    fa2e:	mov    %rbx,%rdi
    fa31:	mov    %r12,%rsi
    fa34:	callq  1e5d0 <png_handle_pCAL>
    fa39:	jmpq   f8ea <png_read_end+0x21a>
    fa3e:	mov    %r13,%rdx
    fa41:	mov    %rbx,%rdi
    fa44:	mov    %r12,%rsi
    fa47:	callq  1ed00 <png_handle_sCAL>
    fa4c:	jmpq   f8ea <png_read_end+0x21a>
    fa51:	mov    %r13,%rdx
    fa54:	mov    %rbx,%rdi
    fa57:	mov    %r12,%rsi
    fa5a:	callq  1e980 <png_handle_pHYs>
    fa5f:	jmpq   f8ea <png_read_end+0x21a>
    fa64:	mov    %r13,%rdx
    fa67:	mov    %rbx,%rdi
    fa6a:	mov    %r12,%rsi
    fa6d:	callq  1eae0 <png_handle_sBIT>
    fa72:	jmpq   f8ea <png_read_end+0x21a>
    fa77:	mov    %r13,%rdx
    fa7a:	mov    %rbx,%rdi
    fa7d:	mov    %r12,%rsi
    fa80:	callq  1f320 <png_handle_sRGB>
    fa85:	jmpq   f8ea <png_read_end+0x21a>
    fa8a:	mov    %r13,%rdx
    fa8d:	mov    %rbx,%rdi
    fa90:	mov    %r12,%rsi
    fa93:	callq  1d920 <png_handle_iCCP>
    fa98:	jmpq   f8ea <png_read_end+0x21a>
    fa9d:	mov    %r13,%rdx
    faa0:	mov    %rbx,%rdi
    faa3:	mov    %r12,%rsi
    faa6:	callq  1f010 <png_handle_sPLT>
    faab:	jmpq   f8ea <png_read_end+0x21a>
    fab0:	mov    %r13,%rdx
    fab3:	mov    %rbx,%rdi
    fab6:	mov    %r12,%rsi
    fab9:	callq  1f460 <png_handle_tEXt>
    fabe:	jmpq   f8ea <png_read_end+0x21a>
    fac3:	mov    %r13,%rdx
    fac6:	mov    %rbx,%rdi
    fac9:	mov    %r12,%rsi
    facc:	callq  1f600 <png_handle_tIME>
    fad1:	jmpq   f8ea <png_read_end+0x21a>
    fad6:	mov    %r13,%rdx
    fad9:	mov    %rbx,%rdi
    fadc:	mov    %r12,%rsi
    fadf:	callq  1f730 <png_handle_tRNS>
    fae4:	jmpq   f8ea <png_read_end+0x21a>
    fae9:	mov    %r13,%rdx
    faec:	mov    %rbx,%rdi
    faef:	mov    %r12,%rsi
    faf2:	callq  1fa40 <png_handle_zTXt>
    faf7:	jmpq   f8ea <png_read_end+0x21a>
    fafc:	mov    %r13,%rdx
    faff:	mov    %rbx,%rdi
    fb02:	mov    %r12,%rsi
    fb05:	callq  1e080 <png_handle_iTXt>
    fb0a:	jmpq   f8ea <png_read_end+0x21a>
    fb0f:	lea    0x1dfc4(%rip),%rsi        # 2dada <png_pass_yinc.24+0x1e3>
    fb16:	mov    %rbx,%rdi
    fb19:	mov    %r13,-0x8(%rbp)
    fb1d:	mov    %r15,-0x10(%rbp)
    fb21:	mov    %rcx,-0x18(%rbp)
    fb25:	callq  5590 <png_benign_error@plt>
    fb2a:	jmpq   f73f <png_read_end+0x6f>
    fb2f:	test   %r13d,%r13d
    fb32:	je     fb5e <png_read_end+0x48e>
    fb34:	mov    0x130(%rbx),%ecx
    fb3a:	and    $0x8,%ecx
    fb3d:	test   %ecx,%ecx
    fb3f:	jne    fb5e <png_read_end+0x48e>
    fb41:	mov    %r14,%rsi
    fb44:	mov    %rax,%r14
    fb47:	mov    %rbx,%rdi
    fb4a:	callq  5590 <png_benign_error@plt>
    fb4f:	mov    %r14,%rcx
    fb52:	lea    0x1dfaa(%rip),%r14        # 2db03 <png_pass_yinc.24+0x20c>
    fb59:	jmpq   f93e <png_read_end+0x26e>
    fb5e:	mov    0x12c(%rbx),%ecx
    fb64:	and    $0x2000,%ecx
    fb6a:	test   %ecx,%ecx
    fb6c:	jne    fb41 <png_read_end+0x471>
    fb6e:	mov    %rax,%rcx
    fb71:	jmpq   f93e <png_read_end+0x26e>
    fb76:	nopw   %cs:0x0(%rax,%rax,1)

000000000000fb80 <png_destroy_read_struct>:
    fb80:	push   %rbp
    fb81:	mov    %rsp,%rbp
    fb84:	sub    $0x20,%rsp
    fb88:	test   %rdi,%rdi
    fb8b:	jne    fb91 <png_destroy_read_struct+0x11>
    fb8d:	xor    %eax,%eax
    fb8f:	jmp    fb94 <png_destroy_read_struct+0x14>
    fb91:	mov    (%rdi),%rax
    fb94:	test   %rax,%rax
    fb97:	jne    fb9b <png_destroy_read_struct+0x1b>
    fb99:	leaveq 
    fb9a:	retq   
    fb9b:	mov    %rax,%rcx
    fb9e:	mov    %r13,-0x8(%rbp)
    fba2:	mov    %r14,-0x10(%rbp)
    fba6:	mov    %r15,-0x18(%rbp)
    fbaa:	mov    %r12,%r13
    fbad:	mov    %rbx,%r12
    fbb0:	mov    %rax,%rbx
    fbb3:	mov    %rdi,%r14
    fbb6:	mov    %rcx,%rdi
    fbb9:	mov    %rsi,%r15
    fbbc:	mov    %rdx,%rsi
    fbbf:	callq  55a0 <png_destroy_info_struct@plt>
    fbc4:	mov    %r15,%rsi
    fbc7:	mov    %rbx,%rdi
    fbca:	callq  55a0 <png_destroy_info_struct@plt>
    fbcf:	movq   $0x0,(%r14)
    fbd6:	mov    %rbx,%rdi
    fbd9:	callq  103d0 <png_read_destroy>
    fbde:	mov    %rbx,%rdi
    fbe1:	callq  ca70 <png_destroy_png_struct>
    fbe6:	mov    %r12,%rbx
    fbe9:	mov    %r13,%r12
    fbec:	mov    -0x18(%rbp),%r15
    fbf0:	mov    -0x10(%rbp),%r14
    fbf4:	mov    -0x8(%rbp),%r13
    fbf8:	leaveq 
    fbf9:	retq   
    fbfa:	nopw   0x0(%rax,%rax,1)

000000000000fc00 <png_set_read_status_fn>:
    fc00:	push   %rbp
    fc01:	mov    %rsp,%rbp
    fc04:	test   %rdi,%rdi
    fc07:	jne    fc0b <png_set_read_status_fn+0xb>
    fc09:	leaveq 
    fc0a:	retq   
    fc0b:	mov    %rsi,0x300(%rdi)
    fc12:	leaveq 
    fc13:	retq   
    fc14:	data16 nopw %cs:0x0(%rax,%rax,1)
    fc1f:	nop

000000000000fc20 <png_read_png>:
    fc20:	push   %rbp
    fc21:	mov    %rsp,%rbp
    fc24:	sub    $0x20,%rsp
    fc28:	test   %rdi,%rdi
    fc2b:	jne    fc2f <png_read_png+0xf>
    fc2d:	leaveq 
    fc2e:	retq   
    fc2f:	test   %rsi,%rsi
    fc32:	jne    fc36 <png_read_png+0x16>
    fc34:	leaveq 
    fc35:	retq   
    fc36:	mov    %rdi,%rax
    fc39:	mov    %rsi,%rcx
    fc3c:	mov    %r13,-0x10(%rbp)
    fc40:	mov    %r14,-0x18(%rbp)
    fc44:	mov    %r15,-0x20(%rbp)
    fc48:	mov    %rsi,%r13
    fc4b:	mov    %rcx,%rsi
    fc4e:	mov    %r12,%r14
    fc51:	mov    %rdi,%r12
    fc54:	mov    %rax,%rdi
    fc57:	mov    %rdx,%r15
    fc5a:	callq  57b0 <png_read_info@plt>
    fc5f:	mov    0x4(%r13),%eax
    fc63:	cmp    $0x1fffffff,%eax
    fc68:	ja     fde1 <png_read_png+0x1c1>
    fc6e:	mov    %r15,%rax
    fc71:	and    $0x8000,%eax
    fc76:	test   %eax,%eax
    fc78:	jle    fc82 <png_read_png+0x62>
    fc7a:	mov    %r12,%rdi
    fc7d:	callq  58d0 <png_set_scale_16@plt>
    fc82:	mov    %r15,%rax
    fc85:	and    $0x1,%eax
    fc88:	test   %eax,%eax
    fc8a:	jle    fc94 <png_read_png+0x74>
    fc8c:	mov    %r12,%rdi
    fc8f:	callq  56d0 <png_set_strip_16@plt>
    fc94:	mov    %r15,%rax
    fc97:	and    $0x2,%eax
    fc9a:	test   %eax,%eax
    fc9c:	jle    fca6 <png_read_png+0x86>
    fc9e:	mov    %r12,%rdi
    fca1:	callq  5740 <png_set_strip_alpha@plt>
    fca6:	mov    %r15,%rax
    fca9:	and    $0x4,%eax
    fcac:	test   %eax,%eax
    fcae:	jle    fcb8 <png_read_png+0x98>
    fcb0:	mov    %r12,%rdi
    fcb3:	callq  5580 <png_set_packing@plt>
    fcb8:	mov    %r15,%rax
    fcbb:	and    $0x8,%eax
    fcbe:	test   %eax,%eax
    fcc0:	jle    fcca <png_read_png+0xaa>
    fcc2:	mov    %r12,%rdi
    fcc5:	callq  5820 <png_set_packswap@plt>
    fcca:	mov    %r15,%rax
    fccd:	and    $0x10,%eax
    fcd0:	test   %eax,%eax
    fcd2:	jle    fcdc <png_read_png+0xbc>
    fcd4:	mov    %r12,%rdi
    fcd7:	callq  56b0 <png_set_expand@plt>
    fcdc:	mov    %r15,%rax
    fcdf:	and    $0x20,%eax
    fce2:	test   %eax,%eax
    fce4:	jle    fcee <png_read_png+0xce>
    fce6:	mov    %r12,%rdi
    fce9:	callq  58e0 <png_set_invert_mono@plt>
    fcee:	mov    %r15,%rax
    fcf1:	and    $0x40,%eax
    fcf4:	test   %eax,%eax
    fcf6:	jg     fdf0 <png_read_png+0x1d0>
    fcfc:	mov    %r15,%rax
    fcff:	and    $0x80,%eax
    fd04:	test   %eax,%eax
    fd06:	jle    fd10 <png_read_png+0xf0>
    fd08:	mov    %r12,%rdi
    fd0b:	callq  5860 <png_set_bgr@plt>
    fd10:	mov    %r15,%rax
    fd13:	and    $0x100,%eax
    fd18:	test   %eax,%eax
    fd1a:	jle    fd24 <png_read_png+0x104>
    fd1c:	mov    %r12,%rdi
    fd1f:	callq  50d0 <png_set_swap_alpha@plt>
    fd24:	mov    %r15,%rax
    fd27:	and    $0x200,%eax
    fd2c:	test   %eax,%eax
    fd2e:	jle    fd38 <png_read_png+0x118>
    fd30:	mov    %r12,%rdi
    fd33:	callq  51e0 <png_set_swap@plt>
    fd38:	mov    %r15,%rax
    fd3b:	and    $0x400,%eax
    fd40:	test   %eax,%eax
    fd42:	jle    fd4c <png_read_png+0x12c>
    fd44:	mov    %r12,%rdi
    fd47:	callq  5620 <png_set_invert_alpha@plt>
    fd4c:	mov    %r15,%rax
    fd4f:	and    $0x2000,%eax
    fd54:	test   %eax,%eax
    fd56:	jle    fd60 <png_read_png+0x140>
    fd58:	mov    %r12,%rdi
    fd5b:	callq  5810 <png_set_gray_to_rgb@plt>
    fd60:	and    $0x4000,%r15d
    fd67:	test   %r15d,%r15d
    fd6a:	jle    fd74 <png_read_png+0x154>
    fd6c:	mov    %r12,%rdi
    fd6f:	callq  5830 <png_set_expand_16@plt>
    fd74:	mov    %r12,%rdi
    fd77:	callq  53f0 <png_set_interlace_handling@plt>
    fd7c:	mov    %r12,%rdi
    fd7f:	mov    %r13,%rsi
    fd82:	callq  5080 <png_read_update_info@plt>
    fd87:	mov    $0x40,%edx
    fd8c:	xor    %r15d,%r15d
    fd8f:	mov    %r12,%rdi
    fd92:	mov    %r13,%rsi
    fd95:	mov    %r15,%rcx
    fd98:	callq  5720 <png_free_data@plt>
    fd9d:	mov    0x160(%r13),%rax
    fda4:	test   %rax,%rax
    fda7:	je     fe13 <png_read_png+0x1f3>
    fda9:	mov    0x160(%r13),%rsi
    fdb0:	mov    %r12,%rdi
    fdb3:	callq  52b0 <png_read_image@plt>
    fdb8:	mov    0x8(%r13),%eax
    fdbc:	or     $0x8000,%eax
    fdc1:	mov    %eax,0x8(%r13)
    fdc5:	mov    %r13,%rsi
    fdc8:	mov    %r12,%rdi
    fdcb:	callq  5170 <png_read_end@plt>
    fdd0:	mov    %r14,%r12
    fdd3:	mov    -0x20(%rbp),%r15
    fdd7:	mov    -0x18(%rbp),%r14
    fddb:	mov    -0x10(%rbp),%r13
    fddf:	leaveq 
    fde0:	retq   
    fde1:	mov    %r12,%rdi
    fde4:	lea    0x1dd45(%rip),%rsi        # 2db30 <png_pass_yinc.24+0x239>
    fdeb:	callq  5470 <png_error@plt>
    fdf0:	mov    0x8(%r13),%eax
    fdf4:	and    $0x2,%eax
    fdf7:	test   %eax,%eax
    fdf9:	je     fcfc <png_read_png+0xdc>
    fdff:	lea    0xb0(%r13),%rsi
    fe06:	mov    %r12,%rdi
    fe09:	callq  5270 <png_set_shift@plt>
    fe0e:	jmpq   fcfc <png_read_png+0xdc>
    fe13:	mov    0x4(%r13),%esi
    fe17:	shl    $0x3,%rsi
    fe1b:	mov    %r12,%rdi
    fe1e:	callq  5800 <png_malloc@plt>
    fe23:	mov    %rax,0x160(%r13)
    fe2a:	mov    %r15,%rax
    fe2d:	jmp    fe43 <png_read_png+0x223>
    fe2f:	mov    0x160(%r13),%rdx
    fe36:	mov    %eax,%ecx
    fe38:	movq   $0x0,(%rdx,%rcx,8)
    fe40:	add    $0x1,%eax
    fe43:	mov    0x4(%r13),%ecx
    fe47:	cmp    %eax,%ecx
    fe49:	ja     fe2f <png_read_png+0x20f>
    fe4b:	mov    0x12c(%r13),%eax
    fe52:	or     $0x40,%eax
    fe55:	mov    %eax,0x12c(%r13)
    fe5c:	mov    %r14,-0x8(%rbp)
    fe60:	jmp    fe80 <png_read_png+0x260>
    fe62:	mov    0x10(%r13),%rsi
    fe66:	mov    0x160(%r13),%r14
    fe6d:	mov    %r12,%rdi
    fe70:	callq  5800 <png_malloc@plt>
    fe75:	mov    %r15d,%ecx
    fe78:	mov    %rax,(%r14,%rcx,8)
    fe7c:	add    $0x1,%r15d
    fe80:	mov    0x4(%r13),%eax
    fe84:	cmp    %r15d,%eax
    fe87:	ja     fe62 <png_read_png+0x242>
    fe89:	mov    -0x8(%rbp),%r14
    fe8d:	jmpq   fda9 <png_read_png+0x189>
    fe92:	data16 nopw %cs:0x0(%rax,%rax,1)
    fe9d:	nopl   (%rax)

000000000000fea0 <png_image_begin_read_from_file>:
    fea0:	push   %rbp
    fea1:	mov    %rsp,%rbp
    fea4:	sub    $0x10,%rsp
    fea8:	xor    %eax,%eax
    feaa:	test   %rdi,%rdi
    fead:	jne    feb9 <png_image_begin_read_from_file+0x19>
    feaf:	mov    %rax,%rcx
    feb2:	test   %rcx,%rcx
    feb5:	jne    fec8 <png_image_begin_read_from_file+0x28>
    feb7:	leaveq 
    feb8:	retq   
    feb9:	mov    0x8(%rdi),%ecx
    febc:	cmp    $0x1,%ecx
    febf:	je     fed6 <png_image_begin_read_from_file+0x36>
    fec1:	mov    $0x1,%ecx
    fec6:	jmp    feb2 <png_image_begin_read_from_file+0x12>
    fec8:	lea    0x1dcc6(%rip),%rsi        # 2db95 <png_pass_yinc.24+0x29e>
    fecf:	callq  90d0 <png_image_error>
    fed4:	leaveq 
    fed5:	retq   
    fed6:	test   %rsi,%rsi
    fed9:	jne    fee9 <png_image_begin_read_from_file+0x49>
    fedb:	lea    0x1dc82(%rip),%rsi        # 2db64 <png_pass_yinc.24+0x26d>
    fee2:	callq  90d0 <png_image_error>
    fee7:	leaveq 
    fee8:	retq   
    fee9:	lea    0x1dc71(%rip),%rax        # 2db61 <png_pass_yinc.24+0x26a>
    fef0:	mov    %r15,-0x10(%rbp)
    fef4:	mov    %rdi,%r15
    fef7:	mov    %rsi,%rdi
    fefa:	mov    %rax,%rsi
    fefd:	callq  5760 <fopen@plt>
    ff02:	test   %rax,%rax
    ff05:	jne    ff25 <png_image_begin_read_from_file+0x85>
    ff07:	callq  50a0 <__errno_location@plt>
    ff0c:	movslq (%rax),%rdi
    ff0f:	callq  5890 <strerror@plt>
    ff14:	mov    %rax,%rsi
    ff17:	mov    %r15,%rdi
    ff1a:	callq  90d0 <png_image_error>
    ff1f:	mov    -0x10(%rbp),%r15
    ff23:	leaveq 
    ff24:	retq   
    ff25:	mov    %r15,%rdi
    ff28:	mov    %r14,-0x8(%rbp)
    ff2c:	mov    %rax,%r14
    ff2f:	callq  10540 <png_image_read_init>
    ff34:	test   %eax,%eax
    ff36:	jne    ff4c <png_image_begin_read_from_file+0xac>
    ff38:	mov    %r14,%rdi
    ff3b:	callq  5240 <fclose@plt>
    ff40:	mov    -0x8(%rbp),%r14
    ff44:	xor    %eax,%eax
    ff46:	mov    -0x10(%rbp),%r15
    ff4a:	leaveq 
    ff4b:	retq   
    ff4c:	mov    (%r15),%rax
    ff4f:	mov    (%rax),%rax
    ff52:	mov    %r14,0x108(%rax)
    ff59:	mov    (%r15),%rcx
    ff5c:	mov    0x28(%rcx),%eax
    ff5f:	or     $0x2,%eax
    ff62:	mov    %eax,0x28(%rcx)
    ff65:	mov    %r15,%rdi
    ff68:	lea    0x781(%rip),%rsi        # 106f0 <png_image_read_header>
    ff6f:	mov    %rdi,%rdx
    ff72:	callq  b250 <png_safe_execute>
    ff77:	mov    -0x8(%rbp),%r14
    ff7b:	mov    -0x10(%rbp),%r15
    ff7f:	leaveq 
    ff80:	retq   
    ff81:	data16 nopw %cs:0x0(%rax,%rax,1)
    ff8c:	nopl   0x0(%rax)

000000000000ff90 <png_image_begin_read_from_stdio>:
    ff90:	push   %rbp
    ff91:	mov    %rsp,%rbp
    ff94:	sub    $0x10,%rsp
    ff98:	xor    %eax,%eax
    ff9a:	test   %rdi,%rdi
    ff9d:	jne    ffa9 <png_image_begin_read_from_stdio+0x19>
    ff9f:	mov    %rax,%rcx
    ffa2:	test   %rcx,%rcx
    ffa5:	jne    ffb8 <png_image_begin_read_from_stdio+0x28>
    ffa7:	leaveq 
    ffa8:	retq   
    ffa9:	mov    0x8(%rdi),%ecx
    ffac:	cmp    $0x1,%ecx
    ffaf:	je     ffc6 <png_image_begin_read_from_stdio+0x36>
    ffb1:	mov    $0x1,%ecx
    ffb6:	jmp    ffa2 <png_image_begin_read_from_stdio+0x12>
    ffb8:	lea    0x1dc44(%rip),%rsi        # 2dc03 <png_pass_yinc.24+0x30c>
    ffbf:	callq  90d0 <png_image_error>
    ffc4:	leaveq 
    ffc5:	retq   
    ffc6:	test   %rsi,%rsi
    ffc9:	jne    ffd9 <png_image_begin_read_from_stdio+0x49>
    ffcb:	lea    0x1dbff(%rip),%rsi        # 2dbd1 <png_pass_yinc.24+0x2da>
    ffd2:	callq  90d0 <png_image_error>
    ffd7:	leaveq 
    ffd8:	retq   
    ffd9:	mov    %rdi,%rax
    ffdc:	mov    %rdi,-0x10(%rbp)
    ffe0:	mov    %rsi,-0x8(%rbp)
    ffe4:	mov    %rax,%rdi
    ffe7:	callq  10540 <png_image_read_init>
    ffec:	test   %eax,%eax
    ffee:	jne    fff4 <png_image_begin_read_from_stdio+0x64>
    fff0:	xor    %eax,%eax
    fff2:	leaveq 
    fff3:	retq   
    fff4:	mov    -0x10(%rbp),%rdi
    fff8:	mov    (%rdi),%rax
    fffb:	mov    (%rax),%rax
    fffe:	mov    -0x8(%rbp),%rcx
   10002:	mov    %rcx,0x108(%rax)
   10009:	lea    0x6e0(%rip),%rsi        # 106f0 <png_image_read_header>
   10010:	mov    %rdi,%rdx
   10013:	callq  b250 <png_safe_execute>
   10018:	leaveq 
   10019:	retq   
   1001a:	nopw   0x0(%rax,%rax,1)

0000000000010020 <png_image_begin_read_from_memory>:
   10020:	push   %rbp
   10021:	mov    %rsp,%rbp
   10024:	sub    $0x20,%rsp
   10028:	xor    %eax,%eax
   1002a:	test   %rdi,%rdi
   1002d:	jne    10039 <png_image_begin_read_from_memory+0x19>
   1002f:	mov    %rax,%rcx
   10032:	test   %rcx,%rcx
   10035:	jne    10048 <png_image_begin_read_from_memory+0x28>
   10037:	leaveq 
   10038:	retq   
   10039:	mov    0x8(%rdi),%ecx
   1003c:	cmp    $0x1,%ecx
   1003f:	je     10056 <png_image_begin_read_from_memory+0x36>
   10041:	mov    $0x1,%ecx
   10046:	jmp    10032 <png_image_begin_read_from_memory+0x12>
   10048:	lea    0x1dc24(%rip),%rsi        # 2dc73 <png_pass_yinc.24+0x37c>
   1004f:	callq  90d0 <png_image_error>
   10054:	leaveq 
   10055:	retq   
   10056:	test   %rsi,%rsi
   10059:	jne    10069 <png_image_begin_read_from_memory+0x49>
   1005b:	lea    0x1dbde(%rip),%rsi        # 2dc40 <png_pass_yinc.24+0x349>
   10062:	callq  90d0 <png_image_error>
   10067:	leaveq 
   10068:	retq   
   10069:	test   %rdx,%rdx
   1006c:	je     1005b <png_image_begin_read_from_memory+0x3b>
   1006e:	mov    %rdi,%rax
   10071:	mov    %r15,-0x18(%rbp)
   10075:	mov    %rsi,-0x10(%rbp)
   10079:	mov    %rdx,-0x8(%rbp)
   1007d:	mov    %rdi,%r15
   10080:	mov    %rax,%rdi
   10083:	callq  10540 <png_image_read_init>
   10088:	test   %eax,%eax
   1008a:	jne    10094 <png_image_begin_read_from_memory+0x74>
   1008c:	xor    %eax,%eax
   1008e:	mov    -0x18(%rbp),%r15
   10092:	leaveq 
   10093:	retq   
   10094:	mov    (%r15),%rax
   10097:	mov    -0x10(%rbp),%rcx
   1009b:	mov    %rcx,0x18(%rax)
   1009f:	mov    (%r15),%rcx
   100a2:	mov    -0x8(%rbp),%rax
   100a6:	mov    %rax,0x20(%rcx)
   100aa:	mov    (%r15),%rax
   100ad:	mov    (%rax),%rax
   100b0:	mov    %r15,0x108(%rax)
   100b7:	lea    0x712(%rip),%rcx        # 107d0 <png_image_memory_read>
   100be:	mov    (%r15),%rax
   100c1:	mov    (%rax),%rax
   100c4:	mov    %rcx,0x100(%rax)
   100cb:	mov    %r15,%rdi
   100ce:	lea    0x61b(%rip),%rsi        # 106f0 <png_image_read_header>
   100d5:	mov    %rdi,%rdx
   100d8:	callq  b250 <png_safe_execute>
   100dd:	mov    -0x18(%rbp),%r15
   100e1:	leaveq 
   100e2:	retq   
   100e3:	data16 nopw %cs:0x0(%rax,%rax,1)
   100ee:	xchg   %ax,%ax

00000000000100f0 <png_image_finish_read>:
   100f0:	push   %rbp
   100f1:	mov    %rsp,%rbp
   100f4:	sub    $0x80,%rsp
   100fb:	xor    %eax,%eax
   100fd:	test   %rdi,%rdi
   10100:	jne    1010c <png_image_finish_read+0x1c>
   10102:	mov    %rax,%r9
   10105:	test   %r9,%r9
   10108:	jne    10156 <png_image_finish_read+0x66>
   1010a:	leaveq 
   1010b:	retq   
   1010c:	mov    $0x1,%r9d
   10112:	mov    0x8(%rdi),%r10d
   10116:	cmp    $0x1,%r10d
   1011a:	jne    10105 <png_image_finish_read+0x15>
   1011c:	mov    0x14(%rdi),%eax
   1011f:	mov    %rax,%r10
   10122:	and    $0x8,%r10d
   10126:	test   %r10d,%r10d
   10129:	jne    10132 <png_image_finish_read+0x42>
   1012b:	and    $0x3,%eax
   1012e:	lea    0x1(%rax),%r9d
   10132:	mov    %rdx,%r10
   10135:	mov    $0x7fffffff,%eax
   1013a:	xor    %edx,%edx
   1013c:	mov    0xc(%rdi),%r11d
   10140:	div    %r9d
   10143:	cmp    %r11d,%eax
   10146:	jae    10164 <png_image_finish_read+0x74>
   10148:	lea    0x1dbe0(%rip),%rsi        # 2dd2f <png_pass_yinc.24+0x438>
   1014f:	callq  90d0 <png_image_error>
   10154:	leaveq 
   10155:	retq   
   10156:	lea    0x1dbfe(%rip),%rsi        # 2dd5b <png_pass_yinc.24+0x464>
   1015d:	callq  90d0 <png_image_error>
   10162:	leaveq 
   10163:	retq   
   10164:	imul   0xc(%rdi),%r9d
   10169:	test   %ecx,%ecx
   1016b:	jne    10170 <png_image_finish_read+0x80>
   1016d:	mov    %r9,%rcx
   10170:	test   %ecx,%ecx
   10172:	js     10179 <png_image_finish_read+0x89>
   10174:	mov    %rcx,%r11
   10177:	jmp    1017f <png_image_finish_read+0x8f>
   10179:	mov    %rcx,%r11
   1017c:	neg    %r11d
   1017f:	mov    (%rdi),%rax
   10182:	test   %rax,%rax
   10185:	jne    10195 <png_image_finish_read+0xa5>
   10187:	lea    0x1db79(%rip),%rsi        # 2dd07 <png_pass_yinc.24+0x410>
   1018e:	callq  90d0 <png_image_error>
   10193:	leaveq 
   10194:	retq   
   10195:	test   %r10,%r10
   10198:	je     10187 <png_image_finish_read+0x97>
   1019a:	cmp    %r11d,%r9d
   1019d:	ja     10187 <png_image_finish_read+0x97>
   1019f:	mov    0x10(%rdi),%r9d
   101a3:	mov    0x14(%rdi),%eax
   101a6:	mov    %rax,%rdx
   101a9:	and    $0x8,%edx
   101ac:	test   %edx,%edx
   101ae:	je     101dd <png_image_finish_read+0xed>
   101b0:	mov    $0x1,%eax
   101b5:	xor    %edx,%edx
   101b7:	mov    %rsi,-0x28(%rbp)
   101bb:	mov    %rax,%rsi
   101be:	mov    $0xffffffff,%eax
   101c3:	div    %esi
   101c5:	xor    %edx,%edx
   101c7:	div    %r11d
   101ca:	cmp    %r9d,%eax
   101cd:	jae    101e8 <png_image_finish_read+0xf8>
   101cf:	lea    0x1db0a(%rip),%rsi        # 2dce0 <png_pass_yinc.24+0x3e9>
   101d6:	callq  90d0 <png_image_error>
   101db:	leaveq 
   101dc:	retq   
   101dd:	and    $0x4,%eax
   101e0:	shr    $0x2,%eax
   101e3:	add    $0x1,%eax
   101e6:	jmp    101b5 <png_image_finish_read+0xc5>
   101e8:	mov    0x14(%rdi),%eax
   101eb:	and    $0x8,%eax
   101ee:	test   %eax,%eax
   101f0:	je     1020c <png_image_finish_read+0x11c>
   101f2:	mov    0x1c(%rdi),%eax
   101f5:	test   %eax,%eax
   101f7:	jne    10207 <png_image_finish_read+0x117>
   101f9:	lea    0x1dab1(%rip),%rsi        # 2dcb1 <png_pass_yinc.24+0x3ba>
   10200:	callq  90d0 <png_image_error>
   10205:	leaveq 
   10206:	retq   
   10207:	test   %r8,%r8
   1020a:	je     101f9 <png_image_finish_read+0x109>
   1020c:	lea    -0x78(%rbp),%rax
   10210:	mov    $0x50,%edx
   10215:	xor    %esi,%esi
   10217:	mov    %r12,-0x8(%rbp)
   1021b:	mov    %r13,-0x10(%rbp)
   1021f:	mov    %r14,-0x18(%rbp)
   10223:	mov    %r15,-0x20(%rbp)
   10227:	mov    %rdi,%r12
   1022a:	mov    %rax,%rdi
   1022d:	mov    %rcx,%r13
   10230:	mov    %r8,%r14
   10233:	mov    %r10,%r15
   10236:	callq  5350 <memset@plt>
   1023b:	mov    %r12,-0x78(%rbp)
   1023f:	mov    %r15,-0x70(%rbp)
   10243:	mov    %r13d,-0x68(%rbp)
   10247:	mov    %r14,-0x60(%rbp)
   1024b:	mov    -0x28(%rbp),%rax
   1024f:	mov    %rax,-0x58(%rbp)
   10253:	movq   $0x0,-0x50(%rbp)
   1025b:	mov    0x14(%r12),%eax
   10260:	and    $0x8,%eax
   10263:	test   %eax,%eax
   10265:	jne    1029a <png_image_finish_read+0x1aa>
   10267:	lea    0x3db2(%rip),%rsi        # 14020 <png_image_read_direct>
   1026e:	mov    %r12,%rdi
   10271:	lea    -0x78(%rbp),%rdx
   10275:	callq  b250 <png_safe_execute>
   1027a:	mov    %rax,%r13
   1027d:	mov    %r12,%rdi
   10280:	callq  5040 <png_image_free@plt>
   10285:	mov    %r13,%rax
   10288:	mov    -0x20(%rbp),%r15
   1028c:	mov    -0x18(%rbp),%r14
   10290:	mov    -0x10(%rbp),%r13
   10294:	mov    -0x8(%rbp),%r12
   10298:	leaveq 
   10299:	retq   
   1029a:	lea    0x12cf(%rip),%rsi        # 11570 <png_image_read_colormap>
   102a1:	mov    %r12,%rdi
   102a4:	lea    -0x78(%rbp),%r13
   102a8:	mov    %r13,%rdx
   102ab:	callq  b250 <png_safe_execute>
   102b0:	test   %eax,%eax
   102b2:	jne    102b9 <png_image_finish_read+0x1c9>
   102b4:	xor    %r13d,%r13d
   102b7:	jmp    1027d <png_image_finish_read+0x18d>
   102b9:	mov    %r13,%rdx
   102bc:	lea    0x2f1d(%rip),%rsi        # 131e0 <png_image_read_colormapped>
   102c3:	mov    %r12,%rdi
   102c6:	callq  b250 <png_safe_execute>
   102cb:	test   %eax,%eax
   102cd:	jne    102d4 <png_image_finish_read+0x1e4>
   102cf:	xor    %r13d,%r13d
   102d2:	jmp    1027d <png_image_finish_read+0x18d>
   102d4:	mov    $0x1,%r13d
   102da:	jmp    1027d <png_image_finish_read+0x18d>
   102dc:	nopl   0x0(%rax)

00000000000102e0 <png_do_read_intrapixel>:
   102e0:	push   %rbp
   102e1:	mov    %rsp,%rbp
   102e4:	movzbl 0x10(%rdi),%ecx
   102e8:	mov    %rcx,%rax
   102eb:	and    $0x2,%eax
   102ee:	test   %eax,%eax
   102f0:	jg     102f4 <png_do_read_intrapixel+0x14>
   102f2:	leaveq 
   102f3:	retq   
   102f4:	mov    (%rdi),%r8d
   102f7:	xor    %eax,%eax
   102f9:	movzbl 0x11(%rdi),%edx
   102fd:	cmp    $0x8,%dl
   10300:	je     10309 <png_do_read_intrapixel+0x29>
   10302:	cmp    $0x10,%dl
   10305:	je     10315 <png_do_read_intrapixel+0x35>
   10307:	leaveq 
   10308:	retq   
   10309:	cmp    $0x2,%cl
   1030c:	jne    10324 <png_do_read_intrapixel+0x44>
   1030e:	mov    $0x3,%ecx
   10313:	jmp    1034e <png_do_read_intrapixel+0x6e>
   10315:	cmp    $0x2,%cl
   10318:	jne    10355 <png_do_read_intrapixel+0x75>
   1031a:	mov    $0x6,%edx
   1031f:	jmpq   103b8 <png_do_read_intrapixel+0xd8>
   10324:	cmp    $0x6,%cl
   10327:	jne    103bf <png_do_read_intrapixel+0xdf>
   1032d:	mov    $0x4,%ecx
   10332:	jmp    1034e <png_do_read_intrapixel+0x6e>
   10334:	movzbl 0x1(%rsi),%edi
   10338:	movzbl (%rsi),%edx
   1033b:	add    %edi,%edx
   1033d:	mov    %dl,(%rsi)
   1033f:	movzbl 0x2(%rsi),%edx
   10343:	add    %edi,%edx
   10345:	mov    %dl,0x2(%rsi)
   10348:	add    $0x1,%eax
   1034b:	add    %rcx,%rsi
   1034e:	cmp    %r8d,%eax
   10351:	jb     10334 <png_do_read_intrapixel+0x54>
   10353:	leaveq 
   10354:	retq   
   10355:	cmp    $0x6,%cl
   10358:	jne    103c1 <png_do_read_intrapixel+0xe1>
   1035a:	mov    $0x8,%edx
   1035f:	jmp    103b8 <png_do_read_intrapixel+0xd8>
   10361:	movzbl 0x3(%rsi),%edi
   10365:	movzbl 0x2(%rsi),%ecx
   10369:	shl    $0x8,%ecx
   1036c:	lea    (%rdi,%rcx,1),%r9d
   10370:	movzbl 0x1(%rsi),%edi
   10374:	movzbl (%rsi),%ecx
   10377:	shl    $0x8,%ecx
   1037a:	add    %edi,%ecx
   1037c:	lea    0x10000(%r9,%rcx,1),%edi
   10384:	mov    %rdi,%rcx
   10387:	shr    $0x8,%ecx
   1038a:	mov    %cl,(%rsi)
   1038c:	mov    %dil,0x1(%rsi)
   10390:	movzbl 0x5(%rsi),%edi
   10394:	movzbl 0x4(%rsi),%ecx
   10398:	shl    $0x8,%ecx
   1039b:	add    %edi,%ecx
   1039d:	lea    0x10000(%r9,%rcx,1),%edi
   103a5:	mov    %rdi,%rcx
   103a8:	shr    $0x8,%ecx
   103ab:	mov    %cl,0x4(%rsi)
   103ae:	mov    %dil,0x5(%rsi)
   103b2:	add    $0x1,%eax
   103b5:	add    %rdx,%rsi
   103b8:	cmp    %eax,%r8d
   103bb:	ja     10361 <png_do_read_intrapixel+0x81>
   103bd:	leaveq 
   103be:	retq   
   103bf:	leaveq 
   103c0:	retq   
   103c1:	leaveq 
   103c2:	retq   
   103c3:	data16 nopw %cs:0x0(%rax,%rax,1)
   103ce:	xchg   %ax,%ax

00000000000103d0 <png_read_destroy>:
   103d0:	push   %rbp
   103d1:	mov    %rsp,%rbp
   103d4:	sub    $0x10,%rsp
   103d8:	mov    %r15,-0x8(%rbp)
   103dc:	mov    %rdi,%r15
   103df:	callq  8c50 <png_destroy_gamma_table>
   103e4:	mov    0x3f8(%r15),%rsi
   103eb:	mov    %r15,%rdi
   103ee:	callq  5790 <png_free@plt>
   103f3:	movq   $0x0,0x3f8(%r15)
   103fe:	mov    0x470(%r15),%rsi
   10405:	mov    %r15,%rdi
   10408:	callq  5790 <png_free@plt>
   1040d:	movq   $0x0,0x470(%r15)
   10418:	mov    0x458(%r15),%rsi
   1041f:	mov    %r15,%rdi
   10422:	callq  5790 <png_free@plt>
   10427:	movq   $0x0,0x458(%r15)
   10432:	mov    0x378(%r15),%rsi
   10439:	mov    %r15,%rdi
   1043c:	callq  5790 <png_free@plt>
   10441:	movq   $0x0,0x378(%r15)
   1044c:	mov    0x380(%r15),%rsi
   10453:	mov    %r15,%rdi
   10456:	callq  5790 <png_free@plt>
   1045b:	movq   $0x0,0x380(%r15)
   10466:	mov    0x3ac(%r15),%eax
   1046d:	and    $0x1000,%eax
   10472:	test   %eax,%eax
   10474:	je     10490 <png_read_destroy+0xc0>
   10476:	mov    0x250(%r15),%rsi
   1047d:	mov    %r15,%rdi
   10480:	callq  6d70 <png_zfree>
   10485:	movq   $0x0,0x250(%r15)
   10490:	mov    0x3ac(%r15),%eax
   10497:	mov    %rax,%rcx
   1049a:	and    $0xffffefff,%ecx
   104a0:	mov    %ecx,0x3ac(%r15)
   104a7:	and    $0x2000,%eax
   104ac:	test   %eax,%eax
   104ae:	je     104ca <png_read_destroy+0xfa>
   104b0:	mov    0x2e8(%r15),%rsi
   104b7:	mov    %r15,%rdi
   104ba:	callq  5790 <png_free@plt>
   104bf:	movq   $0x0,0x2e8(%r15)
   104ca:	mov    0x3ac(%r15),%eax
   104d1:	and    $0xffffdfff,%eax
   104d6:	mov    %eax,0x3ac(%r15)
   104dd:	lea    0x140(%r15),%rdi
   104e4:	callq  5510 <inflateEnd@plt>
   104e9:	mov    0x330(%r15),%rsi
   104f0:	mov    %r15,%rdi
   104f3:	callq  5790 <png_free@plt>
   104f8:	movq   $0x0,0x330(%r15)
   10503:	mov    0x438(%r15),%rsi
   1050a:	mov    %r15,%rdi
   1050d:	callq  5790 <png_free@plt>
   10512:	movq   $0x0,0x438(%r15)
   1051d:	mov    0x3c8(%r15),%rsi
   10524:	mov    %r15,%rdi
   10527:	callq  5790 <png_free@plt>
   1052c:	movq   $0x0,0x3c8(%r15)
   10537:	mov    -0x8(%rbp),%r15
   1053b:	leaveq 
   1053c:	retq   
   1053d:	nopl   (%rax)

0000000000010540 <png_image_read_init>:
   10540:	push   %rbp
   10541:	mov    %rsp,%rbp
   10544:	sub    $0x20,%rsp
   10548:	mov    (%rdi),%rax
   1054b:	test   %rax,%rax
   1054e:	je     1055e <png_image_read_init+0x1e>
   10550:	lea    0x1d85a(%rip),%rsi        # 2ddb1 <png_pass_yinc.24+0x4ba>
   10557:	callq  90d0 <png_image_error>
   1055c:	leaveq 
   1055d:	retq   
   1055e:	lea    0x1d827(%rip),%rax        # 2dd8c <png_pass_yinc.24+0x495>
   10565:	lea    -0x53fc(%rip),%rdx        # b170 <png_safe_error>
   1056c:	lea    -0x5373(%rip),%rcx        # b200 <png_safe_warning>
   10573:	mov    %rdi,%rsi
   10576:	mov    %r15,-0x10(%rbp)
   1057a:	mov    %rdi,%r15
   1057d:	mov    %rax,%rdi
   10580:	callq  56e0 <png_create_read_struct@plt>
   10585:	mov    %rax,-0x20(%rbp)
   10589:	xor    %esi,%esi
   1058b:	mov    $0x68,%edx
   10590:	mov    %r15,%rdi
   10593:	callq  5350 <memset@plt>
   10598:	movl   $0x1,0x8(%r15)
   105a0:	mov    -0x20(%rbp),%rdi
   105a4:	test   %rdi,%rdi
   105a7:	jne    105be <png_image_read_init+0x7e>
   105a9:	mov    %r15,%rdi
   105ac:	lea    0x1d7e0(%rip),%rsi        # 2dd93 <png_pass_yinc.24+0x49c>
   105b3:	callq  90d0 <png_image_error>
   105b8:	mov    -0x10(%rbp),%r15
   105bc:	leaveq 
   105bd:	retq   
   105be:	callq  5280 <png_create_info_struct@plt>
   105c3:	mov    %rax,-0x18(%rbp)
   105c7:	test   %rax,%rax
   105ca:	jne    105dc <png_image_read_init+0x9c>
   105cc:	lea    -0x20(%rbp),%rdi
   105d0:	xor    %esi,%esi
   105d2:	mov    %rsi,%rdx
   105d5:	callq  54b0 <png_destroy_read_struct@plt>
   105da:	jmp    105a9 <png_image_read_init+0x69>
   105dc:	mov    -0x20(%rbp),%rdi
   105e0:	mov    $0x30,%esi
   105e5:	callq  5150 <png_malloc_warn@plt>
   105ea:	test   %rax,%rax
   105ed:	jne    105fe <png_image_read_init+0xbe>
   105ef:	mov    -0x20(%rbp),%rdi
   105f3:	lea    -0x18(%rbp),%rsi
   105f7:	callq  55a0 <png_destroy_info_struct@plt>
   105fc:	jmp    105cc <png_image_read_init+0x8c>
   105fe:	mov    %rax,%rdi
   10601:	mov    %r14,-0x8(%rbp)
   10605:	mov    %rax,%r14
   10608:	mov    $0x30,%edx
   1060d:	xor    %esi,%esi
   1060f:	callq  5350 <memset@plt>
   10614:	mov    -0x20(%rbp),%rax
   10618:	mov    %rax,(%r14)
   1061b:	mov    -0x18(%rbp),%rax
   1061f:	mov    %rax,0x8(%r14)
   10623:	mov    0x28(%r14),%eax
   10627:	and    $0xfffffffe,%eax
   1062a:	mov    %eax,0x28(%r14)
   1062e:	mov    %r14,(%r15)
   10631:	mov    $0x1,%eax
   10636:	mov    -0x8(%rbp),%r14
   1063a:	mov    -0x10(%rbp),%r15
   1063e:	leaveq 
   1063f:	retq   

0000000000010640 <png_image_format>:
   10640:	push   %rbp
   10641:	mov    %rsp,%rbp
   10644:	movzbl 0x267(%rdi),%ecx
   1064b:	mov    %rcx,%rax
   1064e:	and    $0x2,%eax
   10651:	test   %eax,%eax
   10653:	jg     1065e <png_image_format+0x1e>
   10655:	mov    $0x1,%eax
   1065a:	xor    %edx,%edx
   1065c:	jmp    10668 <png_image_format+0x28>
   1065e:	mov    $0x3,%eax
   10663:	mov    $0x2,%edx
   10668:	and    $0x4,%ecx
   1066b:	test   %ecx,%ecx
   1066d:	jle    1068e <png_image_format+0x4e>
   1066f:	movzbl 0x268(%rdi),%ecx
   10676:	cmp    $0x10,%cl
   10679:	jne    1067e <png_image_format+0x3e>
   1067b:	add    $0x4,%eax
   1067e:	movzbl 0x267(%rdi),%ecx
   10685:	and    $0x1,%ecx
   10688:	test   %ecx,%ecx
   1068a:	jg     1069f <png_image_format+0x5f>
   1068c:	leaveq 
   1068d:	retq   
   1068e:	movzwl 0x260(%rdi),%ecx
   10695:	test   %cx,%cx
   10698:	jne    1066f <png_image_format+0x2f>
   1069a:	mov    %rdx,%rax
   1069d:	jmp    1066f <png_image_format+0x2f>
   1069f:	add    $0x8,%eax
   106a2:	leaveq 
   106a3:	retq   
   106a4:	data16 nopw %cs:0x0(%rax,%rax,1)
   106af:	nop

00000000000106b0 <png_gamma_not_sRGB>:
   106b0:	push   %rbp
   106b1:	mov    %rsp,%rbp
   106b4:	cmp    $0x1869f,%edi
   106ba:	jle    106c3 <png_gamma_not_sRGB+0x13>
   106bc:	mov    $0x1,%eax
   106c1:	leaveq 
   106c2:	retq   
   106c3:	test   %edi,%edi
   106c5:	jne    106cb <png_gamma_not_sRGB+0x1b>
   106c7:	xor    %eax,%eax
   106c9:	leaveq 
   106ca:	retq   
   106cb:	lea    (%rdi,%rdi,4),%eax
   106ce:	lea    0x2(%rdi,%rax,2),%ecx
   106d2:	mov    $0x66666667,%eax
   106d7:	imul   %ecx
   106d9:	mov    %rdx,%rax
   106dc:	sar    %eax
   106de:	shr    $0x1f,%edx
   106e1:	lea    (%rax,%rdx,1),%edi
   106e4:	callq  8b10 <png_gamma_significant>
   106e9:	leaveq 
   106ea:	retq   
   106eb:	nopl   0x0(%rax,%rax,1)

00000000000106f0 <png_image_read_header>:
   106f0:	push   %rbp
   106f1:	mov    %rsp,%rbp
   106f4:	sub    $0x20,%rsp
   106f8:	mov    %r13,-0x8(%rbp)
   106fc:	mov    %r14,-0x10(%rbp)
   10700:	mov    %r15,-0x18(%rbp)
   10704:	mov    $0x1,%esi
   10709:	mov    (%rdi),%rax
   1070c:	mov    (%rax),%r14
   1070f:	mov    0x8(%rax),%r15
   10713:	mov    %rdi,%r13
   10716:	mov    %r14,%rdi
   10719:	callq  5050 <png_set_benign_errors@plt>
   1071e:	mov    %r15,%rsi
   10721:	mov    %r14,%rdi
   10724:	callq  57b0 <png_read_info@plt>
   10729:	mov    0x1f8(%r14),%eax
   10730:	mov    %eax,0xc(%r13)
   10734:	mov    0x1fc(%r14),%eax
   1073b:	mov    %eax,0x10(%r13)
   1073f:	mov    %r14,%rdi
   10742:	callq  10640 <png_image_format>
   10747:	mov    %eax,0x14(%r13)
   1074b:	and    $0x2,%eax
   1074e:	test   %eax,%eax
   10750:	jne    10771 <png_image_read_header+0x81>
   10752:	mov    $0x100,%edx
   10757:	movzbl 0x267(%r14),%eax
   1075f:	test   %al,%al
   10761:	je     10790 <png_image_read_header+0xa0>
   10763:	cmp    $0x3,%al
   10765:	je     107bf <png_image_read_header+0xcf>
   10767:	mov    $0x1,%eax
   1076c:	mov    %rdx,%rsi
   1076f:	jmp    107a2 <png_image_read_header+0xb2>
   10771:	movzwl 0x4e2(%r14),%eax
   10779:	and    $0x8042,%eax
   1077e:	cmp    $0x2,%eax
   10781:	jne    10752 <png_image_read_header+0x62>
   10783:	mov    0x18(%r13),%eax
   10787:	or     $0x1,%eax
   1078a:	mov    %eax,0x18(%r13)
   1078e:	jmp    10752 <png_image_read_header+0x62>
   10790:	movzbl 0x268(%r14),%ecx
   10798:	mov    $0x1,%eax
   1079d:	mov    %rax,%rsi
   107a0:	shl    %cl,%esi
   107a2:	cmp    $0x100,%esi
   107a8:	ja     107ad <png_image_read_header+0xbd>
   107aa:	mov    %rsi,%rdx
   107ad:	mov    %edx,0x1c(%r13)
   107b1:	mov    -0x18(%rbp),%r15
   107b5:	mov    -0x10(%rbp),%r14
   107b9:	mov    -0x8(%rbp),%r13
   107bd:	leaveq 
   107be:	retq   
   107bf:	movzwl 0x258(%r14),%esi
   107c7:	mov    $0x1,%eax
   107cc:	jmp    107a2 <png_image_read_header+0xb2>
   107ce:	xchg   %ax,%ax

00000000000107d0 <png_image_memory_read>:
   107d0:	push   %rbp
   107d1:	mov    %rsp,%rbp
   107d4:	sub    $0x20,%rsp
   107d8:	test   %rdi,%rdi
   107db:	jne    107df <png_image_memory_read+0xf>
   107dd:	leaveq 
   107de:	retq   
   107df:	mov    0x108(%rdi),%rax
   107e6:	test   %rax,%rax
   107e9:	jne    107f7 <png_image_memory_read+0x27>
   107eb:	lea    0x1d5ff(%rip),%rsi        # 2ddf1 <png_pass_yinc.24+0x4fa>
   107f2:	callq  5470 <png_error@plt>
   107f7:	mov    (%rax),%rax
   107fa:	test   %rax,%rax
   107fd:	je     107eb <png_image_memory_read+0x1b>
   107ff:	mov    0x20(%rax),%r8
   10803:	mov    0x18(%rax),%rcx
   10807:	test   %rcx,%rcx
   1080a:	jne    10818 <png_image_memory_read+0x48>
   1080c:	lea    0x1d5c6(%rip),%rsi        # 2ddd9 <png_pass_yinc.24+0x4e2>
   10813:	callq  5470 <png_error@plt>
   10818:	cmp    %rdx,%r8
   1081b:	jb     1080c <png_image_memory_read+0x3c>
   1081d:	mov    %rcx,%rdi
   10820:	mov    %rdx,%r9
   10823:	mov    %r12,-0x8(%rbp)
   10827:	mov    %r13,-0x10(%rbp)
   1082b:	mov    %r14,-0x18(%rbp)
   1082f:	mov    %r15,-0x20(%rbp)
   10833:	mov    %r8,%r12
   10836:	mov    %rax,%r13
   10839:	mov    %rcx,%r14
   1083c:	mov    %rdx,%r15
   1083f:	mov    %r9,%rdx
   10842:	mov    %rdi,%r8
   10845:	mov    %rsi,%rdi
   10848:	mov    %r8,%rsi
   1084b:	callq  54c0 <memcpy@plt>
   10850:	lea    (%r14,%r15,1),%rax
   10854:	mov    %rax,0x18(%r13)
   10858:	sub    %r15,%r12
   1085b:	mov    %r12,0x20(%r13)
   1085f:	mov    -0x20(%rbp),%r15
   10863:	mov    -0x18(%rbp),%r14
   10867:	mov    -0x10(%rbp),%r13
   1086b:	mov    -0x8(%rbp),%r12
   1086f:	leaveq 
   10870:	retq   
   10871:	data16 nopw %cs:0x0(%rax,%rax,1)
   1087c:	nopl   0x0(%rax)

0000000000010880 <png_image_skip_unused_chunks>:
   10880:	push   %rbp
   10881:	mov    %rsp,%rbp
   10884:	sub    $0x10,%rsp
   10888:	mov    %r15,-0x8(%rbp)
   1088c:	mov    $0x1,%esi
   10891:	xor    %edx,%edx
   10893:	mov    $0xffffffffffffffff,%rcx
   1089a:	mov    %rdi,%r15
   1089d:	callq  5690 <png_set_keep_unknown_chunks@plt>
   108a2:	mov    %r15,%rdi
   108a5:	lea    0x1d559(%rip),%rdx        # 2de05 <chunks_to_process.34>
   108ac:	mov    $0x6,%ecx
   108b1:	xor    %esi,%esi
   108b3:	callq  5690 <png_set_keep_unknown_chunks@plt>
   108b8:	mov    -0x8(%rbp),%r15
   108bc:	leaveq 
   108bd:	retq   
   108be:	xchg   %ax,%ax

00000000000108c0 <set_file_encoding>:
   108c0:	push   %rbp
   108c1:	mov    %rsp,%rbp
   108c4:	sub    $0x10,%rsp
   108c8:	mov    %r14,-0x8(%rbp)
   108cc:	mov    %r15,-0x10(%rbp)
   108d0:	mov    (%rdi),%rax
   108d3:	mov    (%rax),%rax
   108d6:	mov    (%rax),%rax
   108d9:	movslq 0x498(%rax),%r15
   108e0:	mov    %rdi,%r14
   108e3:	mov    %r15,%rdi
   108e6:	callq  8b10 <png_gamma_significant>
   108eb:	test   %eax,%eax
   108ed:	jne    10901 <set_file_encoding+0x41>
   108ef:	movl   $0x4,0x40(%r14)
   108f7:	mov    -0x10(%rbp),%r15
   108fb:	mov    -0x8(%rbp),%r14
   108ff:	leaveq 
   10900:	retq   
   10901:	mov    %r15,%rdi
   10904:	callq  106b0 <png_gamma_not_sRGB>
   10909:	test   %eax,%eax
   1090b:	jne    1091f <set_file_encoding+0x5f>
   1090d:	movl   $0x1,0x40(%r14)
   10915:	mov    -0x10(%rbp),%r15
   10919:	mov    -0x8(%rbp),%r14
   1091d:	leaveq 
   1091e:	retq   
   1091f:	mov    %r15,%rdi
   10922:	movl   $0x3,0x40(%r14)
   1092a:	callq  8a40 <png_reciprocal>
   1092f:	mov    %eax,0x44(%r14)
   10933:	mov    -0x10(%rbp),%r15
   10937:	mov    -0x8(%rbp),%r14
   1093b:	leaveq 
   1093c:	retq   
   1093d:	nopl   (%rax)

0000000000010940 <decode_gamma>:
   10940:	push   %rbp
   10941:	mov    %rsp,%rbp
   10944:	sub    $0x10,%rsp
   10948:	cmp    $0x3,%edx
   1094b:	jne    10951 <decode_gamma+0x11>
   1094d:	movslq 0x40(%rdi),%rdx
   10951:	test   %edx,%edx
   10953:	jne    10980 <decode_gamma+0x40>
   10955:	mov    %rdi,%rax
   10958:	mov    %r14,-0x8(%rbp)
   1095c:	mov    %r15,-0x10(%rbp)
   10960:	mov    %rsi,%r14
   10963:	mov    %rdi,%r15
   10966:	mov    %rax,%rdi
   10969:	callq  108c0 <set_file_encoding>
   1096e:	mov    %r14,%rsi
   10971:	mov    %r15,%rdi
   10974:	movslq 0x40(%rdi),%rdx
   10978:	mov    -0x10(%rbp),%r15
   1097c:	mov    -0x8(%rbp),%r14
   10980:	cmp    $0x2,%edx
   10983:	jle    109a4 <decode_gamma+0x64>
   10985:	cmp    $0x3,%edx
   10988:	je     109b3 <decode_gamma+0x73>
   1098a:	cmp    $0x4,%edx
   1098d:	je     109cc <decode_gamma+0x8c>
   1098f:	mov    (%rdi),%rax
   10992:	mov    (%rax),%rax
   10995:	mov    (%rax),%rdi
   10998:	lea    0x1d484(%rip),%rsi        # 2de23 <chunks_to_process.34+0x1e>
   1099f:	callq  5470 <png_error@plt>
   109a4:	cmp    $0x1,%edx
   109a7:	je     109d6 <decode_gamma+0x96>
   109a9:	cmp    $0x2,%edx
   109ac:	jne    1098f <decode_gamma+0x4f>
   109ae:	mov    %rsi,%rax
   109b1:	leaveq 
   109b2:	retq   
   109b3:	mov    %rsi,%rax
   109b6:	shl    $0x8,%eax
   109b9:	add    %esi,%eax
   109bb:	movslq 0x44(%rdi),%rsi
   109bf:	mov    %rax,%rdi
   109c2:	callq  8b70 <png_gamma_16bit_correct>
   109c7:	movzwl %ax,%eax
   109ca:	leaveq 
   109cb:	retq   
   109cc:	mov    %rsi,%rax
   109cf:	shl    $0x8,%eax
   109d2:	add    %esi,%eax
   109d4:	leaveq 
   109d5:	retq   
   109d6:	lea    0x1b7af(%rip),%rcx        # 2c18c <png_sRGB_table>
   109dd:	mov    %esi,%eax
   109df:	movzwl (%rcx,%rax,2),%eax
   109e3:	leaveq 
   109e4:	retq   
   109e5:	data16 nopw %cs:0x0(%rax,%rax,1)

00000000000109f0 <png_colormap_compose>:
   109f0:	push   %rbp
   109f1:	mov    %rsp,%rbp
   109f4:	sub    $0x20,%rsp
   109f8:	mov    %r12,-0x8(%rbp)
   109fc:	mov    %r13,-0x10(%rbp)
   10a00:	mov    %r14,-0x18(%rbp)
   10a04:	mov    %r15,-0x20(%rbp)
   10a08:	mov    %rbx,%r12
   10a0b:	mov    %rcx,%rbx
   10a0e:	mov    %r9,%r13
   10a11:	mov    %r8,%r14
   10a14:	mov    %rdi,%r15
   10a17:	callq  10940 <decode_gamma>
   10a1c:	mov    %r14,%rsi
   10a1f:	mov    %rax,%r14
   10a22:	mov    %r15,%rdi
   10a25:	mov    %r13,%rdx
   10a28:	callq  10940 <decode_gamma>
   10a2d:	mov    $0xff,%ecx
   10a32:	sub    %ebx,%ecx
   10a34:	imul   %eax,%ecx
   10a37:	imul   %r14d,%ebx
   10a3b:	add    %ebx,%ecx
   10a3d:	cmp    $0x2,%r13d
   10a41:	je     10a8c <png_colormap_compose+0x9c>
   10a43:	mov    %rcx,%rax
   10a46:	shr    $0xf,%eax
   10a49:	mov    %eax,%edx
   10a4b:	lea    0x1bd3a(%rip),%rax        # 2c78c <png_sRGB_delta>
   10a52:	movzbl (%rdx,%rax,1),%eax
   10a56:	and    $0x7fff,%ecx
   10a5c:	imul   %ecx,%eax
   10a5f:	shr    $0xc,%eax
   10a62:	lea    0x1b923(%rip),%rcx        # 2c38c <png_sRGB_base>
   10a69:	movzwl (%rcx,%rdx,2),%ecx
   10a6d:	add    %ecx,%eax
   10a6f:	and    $0xff00,%eax
   10a74:	shr    $0x8,%eax
   10a77:	mov    %r12,%rbx
   10a7a:	mov    -0x20(%rbp),%r15
   10a7e:	mov    -0x18(%rbp),%r14
   10a82:	mov    -0x10(%rbp),%r13
   10a86:	mov    -0x8(%rbp),%r12
   10a8a:	leaveq 
   10a8b:	retq   
   10a8c:	mov    %rcx,%rax
   10a8f:	shl    $0x8,%eax
   10a92:	add    %ecx,%eax
   10a94:	mov    %rax,%rcx
   10a97:	shr    $0x10,%ecx
   10a9a:	lea    0x8000(%rcx,%rax,1),%eax
   10aa1:	shr    $0x10,%eax
   10aa4:	mov    %r12,%rbx
   10aa7:	mov    -0x20(%rbp),%r15
   10aab:	mov    -0x18(%rbp),%r14
   10aaf:	mov    -0x10(%rbp),%r13
   10ab3:	mov    -0x8(%rbp),%r12
   10ab7:	leaveq 
   10ab8:	retq   
   10ab9:	nopl   0x0(%rax)

0000000000010ac0 <png_create_colormap_entry>:
   10ac0:	push   %rbp
   10ac1:	mov    %rsp,%rbp
   10ac4:	sub    $0x80,%rsp
   10acb:	mov    %r15,-0x60(%rbp)
   10acf:	mov    %r14,-0x58(%rbp)
   10ad3:	mov    $0x1,%r10d
   10ad9:	mov    %r10,-0x20(%rbp)
   10add:	mov    $0x2,%r15d
   10ae3:	mov    %r15,-0x10(%rbp)
   10ae7:	mov    (%rdi),%r11
   10aea:	mov    0x14(%r11),%eax
   10aee:	mov    %rax,%r14
   10af1:	and    $0x4,%r14d
   10af5:	test   %r14d,%r14d
   10af8:	jne    10afd <png_create_colormap_entry+0x3d>
   10afa:	mov    %r10,%r15
   10afd:	xor    %r14d,%r14d
   10b00:	mov    %r14,-0x28(%rbp)
   10b04:	and    $0x2,%eax
   10b07:	test   %eax,%eax
   10b09:	je     10b2d <png_create_colormap_entry+0x6d>
   10b0b:	cmp    $0xff,%esi
   10b11:	ja     10b3a <png_create_colormap_entry+0x7a>
   10b13:	movslq 0x10(%rbp),%rax
   10b17:	cmp    $0x3,%eax
   10b1a:	je     10b4c <png_create_colormap_entry+0x8c>
   10b1c:	mov    %rbx,%r10
   10b1f:	mov    %rcx,%rbx
   10b22:	mov    %r13,%rcx
   10b25:	mov    %r8,%r13
   10b28:	jmpq   10bbb <png_create_colormap_entry+0xfb>
   10b2d:	cmp    %edx,%ecx
   10b2f:	je     10c01 <png_create_colormap_entry+0x141>
   10b35:	mov    %r10,%r14
   10b38:	jmp    10b0b <png_create_colormap_entry+0x4b>
   10b3a:	mov    (%r11),%rax
   10b3d:	mov    (%rax),%rdi
   10b40:	lea    0x1d301(%rip),%rsi        # 2de48 <chunks_to_process.34+0x43>
   10b47:	callq  5470 <png_error@plt>
   10b4c:	movslq 0x40(%rdi),%rax
   10b50:	test   %eax,%eax
   10b52:	je     10b62 <png_create_colormap_entry+0xa2>
   10b54:	mov    %rbx,%r10
   10b57:	mov    %rcx,%rbx
   10b5a:	mov    %r13,%rcx
   10b5d:	mov    %r8,%r13
   10b60:	jmp    10bb7 <png_create_colormap_entry+0xf7>
   10b62:	mov    %rdi,%rax
   10b65:	mov    %r9,-0x38(%rbp)
   10b69:	mov    %r15,-0x78(%rbp)
   10b6d:	mov    %r11,-0x70(%rbp)
   10b71:	mov    %rsi,-0x40(%rbp)
   10b75:	mov    %rbx,-0x48(%rbp)
   10b79:	mov    %r12,-0x50(%rbp)
   10b7d:	mov    %r13,-0x68(%rbp)
   10b81:	mov    %rcx,%rbx
   10b84:	mov    %rdx,%r12
   10b87:	mov    %r8,%r13
   10b8a:	mov    %rdi,%r15
   10b8d:	mov    %rax,%rdi
   10b90:	callq  108c0 <set_file_encoding>
   10b95:	mov    %r12,%rdx
   10b98:	mov    %r15,%rdi
   10b9b:	mov    -0x68(%rbp),%rcx
   10b9f:	mov    -0x50(%rbp),%r12
   10ba3:	mov    -0x48(%rbp),%r10
   10ba7:	mov    -0x40(%rbp),%rsi
   10bab:	mov    -0x70(%rbp),%r11
   10baf:	mov    -0x78(%rbp),%r15
   10bb3:	mov    -0x38(%rbp),%r9
   10bb7:	movslq 0x40(%rdi),%rax
   10bbb:	lea    0x1b7ca(%rip),%r8        # 2c38c <png_sRGB_base>
   10bc2:	mov    %rcx,-0x50(%rbp)
   10bc6:	lea    0x1bbbf(%rip),%rcx        # 2c78c <png_sRGB_delta>
   10bcd:	cmp    $0x3,%eax
   10bd0:	je     10c12 <png_create_colormap_entry+0x152>
   10bd2:	cmp    $0x4,%eax
   10bd5:	je     10d51 <png_create_colormap_entry+0x291>
   10bdb:	cmp    $0x1,%eax
   10bde:	jne    10dac <png_create_colormap_entry+0x2ec>
   10be4:	test   %r14d,%r14d
   10be7:	jg     10e65 <png_create_colormap_entry+0x3a5>
   10bed:	cmp    $0x2,%r15d
   10bf1:	je     10e65 <png_create_colormap_entry+0x3a5>
   10bf7:	mov    $0x1,%eax
   10bfc:	jmpq   10dac <png_create_colormap_entry+0x2ec>
   10c01:	cmp    %r8d,%ecx
   10c04:	je     10b0b <png_create_colormap_entry+0x4b>
   10c0a:	mov    %r10,%r14
   10c0d:	jmpq   10b0b <png_create_colormap_entry+0x4b>
   10c12:	mov    %rdx,%rax
   10c15:	shl    $0x8,%eax
   10c18:	add    %eax,%edx
   10c1a:	movslq 0x44(%rdi),%rax
   10c1e:	mov    %r12,-0x48(%rbp)
   10c22:	mov    %rax,%r12
   10c25:	mov    %r9,-0x18(%rbp)
   10c29:	mov    %r11,-0x68(%rbp)
   10c2d:	mov    %rsi,-0x30(%rbp)
   10c31:	mov    %r10,-0x40(%rbp)
   10c35:	mov    %rcx,-0x78(%rbp)
   10c39:	mov    %r8,-0x70(%rbp)
   10c3d:	mov    %rdi,-0x38(%rbp)
   10c41:	mov    %r12,%rsi
   10c44:	mov    %rax,%r12
   10c47:	mov    %rdx,%rdi
   10c4a:	callq  8b70 <png_gamma_16bit_correct>
   10c4f:	mov    %rbx,%rcx
   10c52:	shl    $0x8,%ecx
   10c55:	lea    (%rbx,%rcx,1),%edi
   10c58:	mov    %rax,%rbx
   10c5b:	mov    %r12,%rsi
   10c5e:	callq  8b70 <png_gamma_16bit_correct>
   10c63:	movzwl %bx,%ecx
   10c66:	movzwl %ax,%ebx
   10c69:	mov    %r13,%rax
   10c6c:	shl    $0x8,%eax
   10c6f:	lea    0x0(%r13,%rax,1),%edi
   10c74:	mov    %r12,%rsi
   10c77:	mov    %rcx,%r12
   10c7a:	callq  8b70 <png_gamma_16bit_correct>
   10c7f:	movzwl %ax,%r13d
   10c83:	test   %r14d,%r14d
   10c86:	jg     10d7a <png_create_colormap_entry+0x2ba>
   10c8c:	cmp    $0x2,%r15d
   10c90:	je     10d7a <png_create_colormap_entry+0x2ba>
   10c96:	mov    %r12,%rax
   10c99:	shl    $0x8,%eax
   10c9c:	sub    %r12d,%eax
   10c9f:	mov    %rax,%rcx
   10ca2:	shr    $0xf,%ecx
   10ca5:	mov    %ecx,%esi
   10ca7:	mov    -0x78(%rbp),%rcx
   10cab:	movzbl (%rsi,%rcx,1),%edx
   10caf:	and    $0x7fff,%eax
   10cb4:	imul   %eax,%edx
   10cb7:	shr    $0xc,%edx
   10cba:	mov    -0x70(%rbp),%r8
   10cbe:	movzwl (%r8,%rsi,2),%eax
   10cc3:	add    %eax,%edx
   10cc5:	and    $0xff00,%edx
   10ccb:	shr    $0x8,%edx
   10cce:	mov    %rbx,%rax
   10cd1:	shl    $0x8,%eax
   10cd4:	sub    %ebx,%eax
   10cd6:	mov    %rax,%rsi
   10cd9:	shr    $0xf,%esi
   10cdc:	mov    %esi,%edi
   10cde:	movzbl (%rdi,%rcx,1),%esi
   10ce2:	and    $0x7fff,%eax
   10ce7:	imul   %eax,%esi
   10cea:	shr    $0xc,%esi
   10ced:	movzwl (%r8,%rdi,2),%eax
   10cf2:	lea    (%rsi,%rax,1),%ebx
   10cf5:	and    $0xff00,%ebx
   10cfb:	shr    $0x8,%ebx
   10cfe:	mov    %r13,%rax
   10d01:	shl    $0x8,%eax
   10d04:	sub    %r13d,%eax
   10d07:	mov    %rax,%rsi
   10d0a:	shr    $0xf,%esi
   10d0d:	mov    %esi,%edi
   10d0f:	movzbl (%rdi,%rcx,1),%esi
   10d13:	and    $0x7fff,%eax
   10d18:	imul   %eax,%esi
   10d1b:	shr    $0xc,%esi
   10d1e:	movzwl (%r8,%rdi,2),%eax
   10d23:	lea    (%rsi,%rax,1),%r13d
   10d27:	and    $0xff00,%r13d
   10d2e:	shr    $0x8,%r13d
   10d32:	mov    -0x38(%rbp),%rdi
   10d36:	mov    $0x1,%eax
   10d3b:	mov    -0x48(%rbp),%r12
   10d3f:	mov    -0x40(%rbp),%r10
   10d43:	mov    -0x30(%rbp),%rsi
   10d47:	mov    -0x68(%rbp),%r11
   10d4b:	mov    -0x18(%rbp),%r9
   10d4f:	jmp    10dac <png_create_colormap_entry+0x2ec>
   10d51:	mov    %rdx,%rax
   10d54:	shl    $0x8,%eax
   10d57:	add    %eax,%edx
   10d59:	mov    %rbx,%rax
   10d5c:	shl    $0x8,%eax
   10d5f:	add    %eax,%ebx
   10d61:	mov    %r13,%rax
   10d64:	shl    $0x8,%eax
   10d67:	add    %eax,%r13d
   10d6a:	mov    %r9,%rax
   10d6d:	shl    $0x8,%eax
   10d70:	add    %eax,%r9d
   10d73:	mov    $0x2,%eax
   10d78:	jmp    10dac <png_create_colormap_entry+0x2ec>
   10d7a:	mov    -0x18(%rbp),%rcx
   10d7e:	mov    %rcx,%rax
   10d81:	shl    $0x8,%eax
   10d84:	lea    (%rcx,%rax,1),%r9d
   10d88:	mov    %r12,%rdx
   10d8b:	mov    -0x38(%rbp),%rdi
   10d8f:	mov    -0x70(%rbp),%r8
   10d93:	mov    -0x78(%rbp),%rcx
   10d97:	mov    -0x48(%rbp),%r12
   10d9b:	mov    -0x40(%rbp),%r10
   10d9f:	mov    -0x30(%rbp),%rsi
   10da3:	mov    -0x68(%rbp),%r11
   10da7:	mov    $0x2,%eax
   10dac:	cmp    $0x2,%eax
   10daf:	je     10e93 <png_create_colormap_entry+0x3d3>
   10db5:	cmp    %eax,%r15d
   10db8:	jne    10eb0 <png_create_colormap_entry+0x3f0>
   10dbe:	mov    0x14(%r11),%r8d
   10dc2:	mov    %r8,%rax
   10dc5:	and    $0x20,%eax
   10dc8:	test   %eax,%eax
   10dca:	jne    10ec2 <png_create_colormap_entry+0x402>
   10dd0:	mov    $0x2,%ecx
   10dd5:	pushq  -0x28(%rbp)
   10dd8:	pushq  -0x10(%rbp)
   10ddb:	pushq  -0x28(%rbp)
   10dde:	pushq  -0x20(%rbp)
   10de1:	popq   -0x78(%rbp)
   10de4:	popq   -0x30(%rbp)
   10de7:	popq   -0x18(%rbp)
   10dea:	popq   -0x8(%rbp)
   10ded:	mov    %r8,%rax
   10df0:	and    $0x10,%eax
   10df3:	test   %eax,%eax
   10df5:	jne    10e03 <png_create_colormap_entry+0x343>
   10df7:	pushq  -0x28(%rbp)
   10dfa:	pushq  -0x10(%rbp)
   10dfd:	popq   -0x28(%rbp)
   10e00:	popq   -0x10(%rbp)
   10e03:	cmp    $0x2,%r15d
   10e07:	je     10ef2 <png_create_colormap_entry+0x432>
   10e0d:	and    $0x3,%r8d
   10e11:	lea    0x1(%r8),%ecx
   10e15:	imul   %ecx,%esi
   10e18:	mov    %esi,%eax
   10e1a:	add    0x18(%rdi),%rax
   10e1e:	cmp    $0x2,%ecx
   10e21:	jbe    10f63 <png_create_colormap_entry+0x4a3>
   10e27:	cmp    $0x3,%ecx
   10e2a:	jne    10f86 <png_create_colormap_entry+0x4c6>
   10e30:	mov    -0x30(%rbp),%rcx
   10e34:	mov    -0x28(%rbp),%rsi
   10e38:	add    %ecx,%esi
   10e3a:	movslq %esi,%rsi
   10e3d:	mov    %r13b,(%rax,%rsi,1)
   10e41:	mov    -0x20(%rbp),%rsi
   10e45:	mov    %bl,(%rax,%rsi,1)
   10e48:	mov    -0x10(%rbp),%rsi
   10e4c:	add    %esi,%ecx
   10e4e:	movslq %ecx,%rcx
   10e51:	mov    %dl,(%rcx,%rax,1)
   10e54:	mov    %r10,%rbx
   10e57:	mov    -0x50(%rbp),%r13
   10e5b:	mov    -0x58(%rbp),%r14
   10e5f:	mov    -0x60(%rbp),%r15
   10e63:	leaveq 
   10e64:	retq   
   10e65:	lea    0x1b320(%rip),%rax        # 2c18c <png_sRGB_table>
   10e6c:	mov    %edx,%edx
   10e6e:	movzwl (%rax,%rdx,2),%edx
   10e72:	mov    %ebx,%ebx
   10e74:	movzwl (%rax,%rbx,2),%ebx
   10e78:	mov    %r13d,%r13d
   10e7b:	movzwl (%rax,%r13,2),%r13d
   10e80:	mov    %r9,%rax
   10e83:	shl    $0x8,%eax
   10e86:	add    %eax,%r9d
   10e89:	mov    $0x2,%eax
   10e8e:	jmpq   10dac <png_create_colormap_entry+0x2ec>
   10e93:	test   %r14d,%r14d
   10e96:	jg     10fa0 <png_create_colormap_entry+0x4e0>
   10e9c:	cmp    $0x1,%r15d
   10ea0:	je     1105b <png_create_colormap_entry+0x59b>
   10ea6:	mov    $0x2,%eax
   10eab:	jmpq   10db5 <png_create_colormap_entry+0x2f5>
   10eb0:	mov    (%r11),%rax
   10eb3:	mov    (%rax),%rdi
   10eb6:	lea    0x1cfa8(%rip),%rsi        # 2de65 <chunks_to_process.34+0x60>
   10ebd:	callq  5470 <png_error@plt>
   10ec2:	mov    %r8,%rax
   10ec5:	and    $0x1,%eax
   10ec8:	test   %eax,%eax
   10eca:	jne    11119 <png_create_colormap_entry+0x659>
   10ed0:	mov    $0x2,%ecx
   10ed5:	pushq  -0x28(%rbp)
   10ed8:	pushq  -0x10(%rbp)
   10edb:	pushq  -0x28(%rbp)
   10ede:	pushq  -0x20(%rbp)
   10ee1:	popq   -0x78(%rbp)
   10ee4:	popq   -0x30(%rbp)
   10ee7:	popq   -0x18(%rbp)
   10eea:	popq   -0x8(%rbp)
   10eed:	jmpq   10ded <png_create_colormap_entry+0x32d>
   10ef2:	and    $0x3,%r8d
   10ef6:	lea    0x1(%r8),%r14d
   10efa:	imul   %r14d,%esi
   10efe:	mov    %esi,%eax
   10f00:	lea    (%rax,%rax,1),%rsi
   10f04:	add    0x18(%rdi),%rsi
   10f08:	mov    $0x80008001,%r11d
   10f0e:	cmp    $0x2,%r14d
   10f12:	jbe    11141 <png_create_colormap_entry+0x681>
   10f18:	cmp    $0x3,%r14d
   10f1c:	jne    11165 <png_create_colormap_entry+0x6a5>
   10f22:	mov    -0x30(%rbp),%rdi
   10f26:	cmp    $0xfffe,%r9d
   10f2d:	jbe    11180 <png_create_colormap_entry+0x6c0>
   10f33:	mov    -0x28(%rbp),%rax
   10f37:	add    %edi,%eax
   10f39:	movslq %eax,%rax
   10f3c:	mov    %r13w,(%rsi,%rax,2)
   10f41:	mov    %bx,(%rsi,%rcx,1)
   10f45:	mov    -0x10(%rbp),%rax
   10f49:	add    %edi,%eax
   10f4b:	movslq %eax,%rax
   10f4e:	mov    %dx,(%rsi,%rax,2)
   10f52:	mov    %r10,%rbx
   10f55:	mov    -0x50(%rbp),%r13
   10f59:	mov    -0x58(%rbp),%r14
   10f5d:	mov    -0x60(%rbp),%r15
   10f61:	leaveq 
   10f62:	retq   
   10f63:	test   %r8d,%r8d
   10f66:	je     1119f <png_create_colormap_entry+0x6df>
   10f6c:	cmp    $0x2,%ecx
   10f6f:	je     11197 <png_create_colormap_entry+0x6d7>
   10f75:	mov    %r10,%rbx
   10f78:	mov    -0x50(%rbp),%r13
   10f7c:	mov    -0x58(%rbp),%r14
   10f80:	mov    -0x60(%rbp),%r15
   10f84:	leaveq 
   10f85:	retq   
   10f86:	cmp    $0x4,%ecx
   10f89:	je     111b7 <png_create_colormap_entry+0x6f7>
   10f8f:	mov    %r10,%rbx
   10f92:	mov    -0x50(%rbp),%r13
   10f96:	mov    -0x58(%rbp),%r14
   10f9a:	mov    -0x60(%rbp),%r15
   10f9e:	leaveq 
   10f9f:	retq   
   10fa0:	lea    (%rdx,%rdx,2),%eax
   10fa3:	shl    $0x3,%eax
   10fa6:	lea    (%rax,%rdx,2),%eax
   10fa9:	add    %edx,%eax
   10fab:	shl    $0x4,%eax
   10fae:	lea    (%rax,%rdx,2),%eax
   10fb1:	add    %edx,%eax
   10fb3:	shl    $0x4,%eax
   10fb6:	lea    (%rax,%rdx,8),%r14d
   10fba:	lea    (%rbx,%rbx,2),%eax
   10fbd:	shl    $0x6,%eax
   10fc0:	lea    (%rbx,%rbx,8),%edx
   10fc3:	sub    %edx,%eax
   10fc5:	shl    $0x7,%eax
   10fc8:	lea    (%rax,%rbx,8),%eax
   10fcb:	lea    (%rax,%rbx,2),%eax
   10fce:	lea    (%r14,%rax,1),%ebx
   10fd2:	lea    0x0(%r13,%r13,8),%eax
   10fd7:	lea    0x0(%r13,%rax,4),%eax
   10fdc:	shl    $0x6,%eax
   10fdf:	lea    0x0(%r13,%r13,1),%edx
   10fe4:	sub    %edx,%eax
   10fe6:	add    %ebx,%eax
   10fe8:	cmp    $0x2,%r15d
   10fec:	je     111cd <png_create_colormap_entry+0x70d>
   10ff2:	add    $0x80,%eax
   10ff7:	mov    %rax,%rdx
   10ffa:	and    $0xffffff00,%edx
   11000:	shr    $0x8,%eax
   11003:	sub    %eax,%edx
   11005:	add    $0x40,%edx
   11008:	mov    %rdx,%rax
   1100b:	shr    $0x16,%eax
   1100e:	mov    %eax,%ebx
   11010:	movzbl (%rbx,%rcx,1),%eax
   11014:	and    $0x3fff80,%edx
   1101a:	shr    $0x7,%edx
   1101d:	imul   %edx,%eax
   11020:	shr    $0xc,%eax
   11023:	movzwl (%r8,%rbx,2),%ecx
   11028:	lea    (%rax,%rcx,1),%r13d
   1102c:	and    $0xff00,%r13d
   11033:	shr    $0x8,%r13d
   11037:	mov    %r9,%rax
   1103a:	shl    $0x8,%eax
   1103d:	sub    %r9d,%eax
   11040:	lea    0x807f(%rax),%r9d
   11047:	shr    $0x10,%r9d
   1104b:	mov    $0x1,%eax
   11050:	mov    %r13,%rdx
   11053:	mov    %rdx,%rbx
   11056:	jmpq   10db5 <png_create_colormap_entry+0x2f5>
   1105b:	mov    %rdx,%rax
   1105e:	shl    $0x8,%eax
   11061:	neg    %edx
   11063:	add    %eax,%edx
   11065:	mov    %rdx,%rax
   11068:	shr    $0xf,%eax
   1106b:	mov    %eax,%r14d
   1106e:	movzbl (%r14,%rcx,1),%eax
   11073:	and    $0x7fff,%edx
   11079:	imul   %edx,%eax
   1107c:	shr    $0xc,%eax
   1107f:	movzwl (%r8,%r14,2),%edx
   11084:	add    %eax,%edx
   11086:	and    $0xff00,%edx
   1108c:	shr    $0x8,%edx
   1108f:	mov    %rbx,%rax
   11092:	shl    $0x8,%eax
   11095:	neg    %ebx
   11097:	add    %eax,%ebx
   11099:	mov    %rbx,%rax
   1109c:	shr    $0xf,%eax
   1109f:	mov    %eax,%r14d
   110a2:	movzbl (%r14,%rcx,1),%eax
   110a7:	and    $0x7fff,%ebx
   110ad:	imul   %ebx,%eax
   110b0:	shr    $0xc,%eax
   110b3:	movzwl (%r8,%r14,2),%ebx
   110b8:	add    %eax,%ebx
   110ba:	and    $0xff00,%ebx
   110c0:	shr    $0x8,%ebx
   110c3:	mov    %r13,%rax
   110c6:	shl    $0x8,%eax
   110c9:	sub    %r13d,%eax
   110cc:	mov    %rax,%r13
   110cf:	shr    $0xf,%r13d
   110d3:	mov    %r13d,%r13d
   110d6:	movzbl 0x0(%r13,%rcx,1),%ecx
   110dc:	and    $0x7fff,%eax
   110e1:	imul   %eax,%ecx
   110e4:	shr    $0xc,%ecx
   110e7:	movzwl (%r8,%r13,2),%eax
   110ec:	lea    (%rcx,%rax,1),%r13d
   110f0:	and    $0xff00,%r13d
   110f7:	shr    $0x8,%r13d
   110fb:	mov    %r9,%rax
   110fe:	shl    $0x8,%eax
   11101:	sub    %r9d,%eax
   11104:	lea    0x807f(%rax),%r9d
   1110b:	shr    $0x10,%r9d
   1110f:	mov    $0x1,%eax
   11114:	jmpq   10db5 <png_create_colormap_entry+0x2f5>
   11119:	mov    $0x4,%ecx
   1111e:	pushq  -0x10(%rbp)
   11121:	pushq  -0x28(%rbp)
   11124:	pushq  -0x10(%rbp)
   11127:	pushq  -0x20(%rbp)
   1112a:	pushq  -0x28(%rbp)
   1112d:	popq   -0x78(%rbp)
   11130:	popq   -0x30(%rbp)
   11133:	popq   -0x20(%rbp)
   11136:	popq   -0x18(%rbp)
   11139:	popq   -0x8(%rbp)
   1113c:	jmpq   10ded <png_create_colormap_entry+0x32d>
   11141:	test   %r8d,%r8d
   11144:	je     111f1 <png_create_colormap_entry+0x731>
   1114a:	cmp    $0x2,%r14d
   1114e:	je     111e8 <png_create_colormap_entry+0x728>
   11154:	mov    %r10,%rbx
   11157:	mov    -0x50(%rbp),%r13
   1115b:	mov    -0x58(%rbp),%r14
   1115f:	mov    -0x60(%rbp),%r15
   11163:	leaveq 
   11164:	retq   
   11165:	cmp    $0x4,%r14d
   11169:	je     11217 <png_create_colormap_entry+0x757>
   1116f:	mov    %r10,%rbx
   11172:	mov    -0x50(%rbp),%r13
   11176:	mov    -0x58(%rbp),%r14
   1117a:	mov    -0x60(%rbp),%r15
   1117e:	leaveq 
   1117f:	retq   
   11180:	test   %r9d,%r9d
   11183:	jne    11226 <png_create_colormap_entry+0x766>
   11189:	xor    %r13d,%r13d
   1118c:	mov    %r13,%rdx
   1118f:	mov    %rdx,%rbx
   11192:	jmpq   10f33 <png_create_colormap_entry+0x473>
   11197:	mov    -0x78(%rbp),%rcx
   1119b:	mov    %r9b,(%rax,%rcx,1)
   1119f:	mov    -0x30(%rbp),%rcx
   111a3:	mov    %bl,(%rax,%rcx,1)
   111a6:	mov    %r10,%rbx
   111a9:	mov    -0x50(%rbp),%r13
   111ad:	mov    -0x58(%rbp),%r14
   111b1:	mov    -0x60(%rbp),%r15
   111b5:	leaveq 
   111b6:	retq   
   111b7:	mov    -0x30(%rbp),%rcx
   111bb:	test   %ecx,%ecx
   111bd:	jg     11274 <png_create_colormap_entry+0x7b4>
   111c3:	mov    $0x3,%esi
   111c8:	jmpq   11276 <png_create_colormap_entry+0x7b6>
   111cd:	lea    0x4000(%rax),%r13d
   111d4:	shr    $0xf,%r13d
   111d8:	mov    $0x2,%eax
   111dd:	mov    %r13,%rdx
   111e0:	mov    %rdx,%rbx
   111e3:	jmpq   10db5 <png_create_colormap_entry+0x2f5>
   111e8:	mov    -0x18(%rbp),%rax
   111ec:	mov    %r9w,(%rsi,%rax,1)
   111f1:	cmp    $0xfffe,%r9d
   111f8:	jbe    1127f <png_create_colormap_entry+0x7bf>
   111fe:	mov    -0x8(%rbp),%rax
   11202:	mov    %bx,(%rsi,%rax,1)
   11206:	mov    %r10,%rbx
   11209:	mov    -0x50(%rbp),%r13
   1120d:	mov    -0x58(%rbp),%r14
   11211:	mov    -0x60(%rbp),%r15
   11215:	leaveq 
   11216:	retq   
   11217:	mov    -0x30(%rbp),%rdi
   1121b:	test   %edi,%edi
   1121d:	jg     1128b <png_create_colormap_entry+0x7cb>
   1121f:	mov    $0x6,%eax
   11224:	jmp    1128d <png_create_colormap_entry+0x7cd>
   11226:	mov    %r9,%rax
   11229:	imul   %edx,%eax
   1122c:	lea    0x7fff(%rax),%edx
   11232:	mov    %r11,%rax
   11235:	mul    %edx
   11237:	mov    %rdx,%r8
   1123a:	shr    $0xf,%r8d
   1123e:	mov    %r9,%rax
   11241:	imul   %ebx,%eax
   11244:	lea    0x7fff(%rax),%edx
   1124a:	mov    %r11,%rax
   1124d:	mul    %edx
   1124f:	mov    %rdx,%rbx
   11252:	shr    $0xf,%ebx
   11255:	imul   %r13d,%r9d
   11259:	lea    0x7fff(%r9),%edx
   11260:	mov    %r11,%rax
   11263:	mul    %edx
   11265:	mov    %rdx,%r13
   11268:	shr    $0xf,%r13d
   1126c:	mov    %r8,%rdx
   1126f:	jmpq   10f33 <png_create_colormap_entry+0x473>
   11274:	xor    %esi,%esi
   11276:	mov    %r9b,(%rax,%rsi,1)
   1127a:	jmpq   10e34 <png_create_colormap_entry+0x374>
   1127f:	test   %r9d,%r9d
   11282:	jne    11297 <png_create_colormap_entry+0x7d7>
   11284:	xor    %ebx,%ebx
   11286:	jmpq   111fe <png_create_colormap_entry+0x73e>
   1128b:	xor    %eax,%eax
   1128d:	mov    %r9w,(%rax,%rsi,1)
   11292:	jmpq   10f26 <png_create_colormap_entry+0x466>
   11297:	imul   %ebx,%r9d
   1129b:	lea    0x7fff(%r9),%ecx
   112a2:	mov    %r11,%rax
   112a5:	mul    %ecx
   112a7:	mov    %rdx,%rbx
   112aa:	shr    $0xf,%ebx
   112ad:	jmpq   111fe <png_create_colormap_entry+0x73e>
   112b2:	data16 nopw %cs:0x0(%rax,%rax,1)
   112bd:	nopl   (%rax)

00000000000112c0 <make_gray_file_colormap>:
   112c0:	push   %rbp
   112c1:	mov    %rsp,%rbp
   112c4:	sub    $0x20,%rsp
   112c8:	mov    %r13,-0x8(%rbp)
   112cc:	mov    %r14,-0x10(%rbp)
   112d0:	mov    %r15,-0x18(%rbp)
   112d4:	mov    %rdi,%r14
   112d7:	mov    $0xff,%r15d
   112dd:	xor    %r13d,%r13d
   112e0:	jmp    11304 <make_gray_file_colormap+0x44>
   112e2:	movl   $0x3,(%rsp)
   112e9:	mov    %r13,%rdx
   112ec:	mov    %r13,%rcx
   112ef:	mov    %r13,%r8
   112f2:	mov    %r14,%rdi
   112f5:	mov    %r13,%rsi
   112f8:	mov    %r15,%r9
   112fb:	callq  10ac0 <png_create_colormap_entry>
   11300:	add    $0x1,%r13d
   11304:	cmp    $0xff,%r13d
   1130b:	jbe    112e2 <make_gray_file_colormap+0x22>
   1130d:	mov    %r13,%rax
   11310:	mov    -0x18(%rbp),%r15
   11314:	mov    -0x10(%rbp),%r14
   11318:	mov    -0x8(%rbp),%r13
   1131c:	leaveq 
   1131d:	retq   
   1131e:	xchg   %ax,%ax

0000000000011320 <make_gray_colormap>:
   11320:	push   %rbp
   11321:	mov    %rsp,%rbp
   11324:	sub    $0x20,%rsp
   11328:	mov    %r13,-0x8(%rbp)
   1132c:	mov    %r14,-0x10(%rbp)
   11330:	mov    %r15,-0x18(%rbp)
   11334:	mov    %rdi,%r14
   11337:	mov    $0xff,%r15d
   1133d:	xor    %r13d,%r13d
   11340:	jmp    11364 <make_gray_colormap+0x44>
   11342:	movl   $0x1,(%rsp)
   11349:	mov    %r13,%rdx
   1134c:	mov    %r13,%rcx
   1134f:	mov    %r13,%r8
   11352:	mov    %r14,%rdi
   11355:	mov    %r13,%rsi
   11358:	mov    %r15,%r9
   1135b:	callq  10ac0 <png_create_colormap_entry>
   11360:	add    $0x1,%r13d
   11364:	cmp    $0xff,%r13d
   1136b:	jbe    11342 <make_gray_colormap+0x22>
   1136d:	mov    %r13,%rax
   11370:	mov    -0x18(%rbp),%r15
   11374:	mov    -0x10(%rbp),%r14
   11378:	mov    -0x8(%rbp),%r13
   1137c:	leaveq 
   1137d:	retq   
   1137e:	xchg   %ax,%ax

0000000000011380 <make_ga_colormap>:
   11380:	push   %rbp
   11381:	mov    %rsp,%rbp
   11384:	sub    $0x30,%rsp
   11388:	mov    %r12,-0x10(%rbp)
   1138c:	mov    %r13,-0x18(%rbp)
   11390:	mov    %r14,-0x20(%rbp)
   11394:	mov    %r15,-0x28(%rbp)
   11398:	mov    %rbx,%r15
   1139b:	mov    %rdi,%rbx
   1139e:	mov    $0xff,%r14d
   113a4:	xor    %esi,%esi
   113a6:	mov    $0x46ed2901,%r13d
   113ac:	jmp    113e2 <make_ga_colormap+0x62>
   113ae:	sub    $0x10,%rsp
   113b2:	movl   $0x1,(%rsp)
   113b9:	mov    %rsi,%rax
   113bc:	shl    $0x8,%eax
   113bf:	lea    0x74(%rax),%ecx
   113c2:	mov    %r13,%rax
   113c5:	mul    %ecx
   113c7:	shr    $0x6,%edx
   113ca:	mov    %rdx,%rcx
   113cd:	mov    %rdx,%r8
   113d0:	mov    %rbx,%rdi
   113d3:	mov    %r14,%r9
   113d6:	callq  10ac0 <png_create_colormap_entry>
   113db:	add    $0x10,%rsp
   113df:	mov    %r12,%rsi
   113e2:	lea    0x1(%rsi),%r12d
   113e6:	cmp    $0xe6,%esi
   113ec:	jbe    113ae <make_ga_colormap+0x2e>
   113ee:	mov    %r14,%rdx
   113f1:	sub    $0x10,%rsp
   113f5:	movl   $0x1,(%rsp)
   113fc:	mov    %rdx,%rcx
   113ff:	mov    %rdx,%r8
   11402:	mov    %rbx,%rdi
   11405:	xor    %r13d,%r13d
   11408:	mov    %r13,%r9
   1140b:	callq  10ac0 <png_create_colormap_entry>
   11410:	add    $0x10,%rsp
   11414:	mov    $0x1,%eax
   11419:	mov    $0x33,%r14d
   1141f:	mov    %r15,-0x8(%rbp)
   11423:	jmp    1146b <make_ga_colormap+0xeb>
   11425:	sub    $0x10,%rsp
   11429:	movl   $0x1,(%rsp)
   11430:	mov    %r15,%rcx
   11433:	mov    %r15,%r8
   11436:	mov    %rbx,%rdi
   11439:	mov    %r12,%rsi
   1143c:	mov    %r15,%rdx
   1143f:	mov    %r14,%r9
   11442:	callq  10ac0 <png_create_colormap_entry>
   11447:	add    $0x10,%rsp
   1144b:	add    $0x1,%r12d
   1144f:	add    $0x33,%r15d
   11453:	add    $0x1,%r13d
   11457:	cmp    $0x5,%r13d
   1145b:	jbe    11425 <make_ga_colormap+0xa5>
   1145d:	mov    -0x30(%rbp),%rax
   11461:	add    $0x1,%eax
   11464:	add    $0x33,%r14d
   11468:	xor    %r13d,%r13d
   1146b:	cmp    $0x4,%eax
   1146e:	jbe    11489 <make_ga_colormap+0x109>
   11470:	mov    %r12,%rax
   11473:	mov    -0x28(%rbp),%r15
   11477:	mov    -0x20(%rbp),%r14
   1147b:	mov    -0x18(%rbp),%r13
   1147f:	mov    -0x10(%rbp),%r12
   11483:	mov    -0x8(%rbp),%rbx
   11487:	leaveq 
   11488:	retq   
   11489:	mov    %rax,-0x30(%rbp)
   1148d:	mov    %r13,%r15
   11490:	jmp    11457 <make_ga_colormap+0xd7>
   11492:	data16 nopw %cs:0x0(%rax,%rax,1)
   1149d:	nopl   (%rax)

00000000000114a0 <make_rgb_colormap>:
   114a0:	push   %rbp
   114a1:	mov    %rsp,%rbp
   114a4:	sub    $0x40,%rsp
   114a8:	mov    %rbx,-0x10(%rbp)
   114ac:	mov    %r12,-0x18(%rbp)
   114b0:	mov    %r13,-0x20(%rbp)
   114b4:	mov    %r14,-0x28(%rbp)
   114b8:	mov    %r15,-0x30(%rbp)
   114bc:	mov    %rdi,%rbx
   114bf:	xor    %r13d,%r13d
   114c2:	mov    $0xff,%r9d
   114c8:	mov    %r13,%rax
   114cb:	mov    %rax,%r12
   114ce:	mov    %r12,%r14
   114d1:	jmp    11530 <make_rgb_colormap+0x90>
   114d3:	sub    $0x10,%rsp
   114d7:	movl   $0x1,(%rsp)
   114de:	mov    %rbx,%rdi
   114e1:	mov    %r12,%rsi
   114e4:	mov    %r14,%rdx
   114e7:	mov    %r15,%r8
   114ea:	callq  10ac0 <png_create_colormap_entry>
   114ef:	add    $0x10,%rsp
   114f3:	add    $0x1,%r12d
   114f7:	add    $0x33,%r15d
   114fb:	add    $0x1,%r13d
   114ff:	mov    $0xff,%r9d
   11505:	mov    -0x8(%rbp),%rcx
   11509:	cmp    $0x5,%r13d
   1150d:	jbe    114d3 <make_rgb_colormap+0x33>
   1150f:	add    $0x33,%ecx
   11512:	mov    -0x40(%rbp),%rax
   11516:	add    $0x1,%eax
   11519:	xor    %r13d,%r13d
   1151c:	mov    %rcx,-0x8(%rbp)
   11520:	cmp    $0x5,%eax
   11523:	jbe    1154e <make_rgb_colormap+0xae>
   11525:	mov    -0x38(%rbp),%rax
   11529:	add    $0x1,%eax
   1152c:	add    $0x33,%r14d
   11530:	cmp    $0x5,%eax
   11533:	jbe    11557 <make_rgb_colormap+0xb7>
   11535:	mov    %r12,%rax
   11538:	mov    -0x30(%rbp),%r15
   1153c:	mov    -0x28(%rbp),%r14
   11540:	mov    -0x20(%rbp),%r13
   11544:	mov    -0x18(%rbp),%r12
   11548:	mov    -0x10(%rbp),%rbx
   1154c:	leaveq 
   1154d:	retq   
   1154e:	mov    %rax,-0x40(%rbp)
   11552:	mov    %r13,%r15
   11555:	jmp    11509 <make_rgb_colormap+0x69>
   11557:	mov    %rax,-0x38(%rbp)
   1155b:	mov    %r13,%rax
   1155e:	mov    %rax,%rcx
   11561:	jmp    1151c <make_rgb_colormap+0x7c>
   11563:	data16 nopw %cs:0x0(%rax,%rax,1)
   1156e:	xchg   %ax,%ax

0000000000011570 <png_image_read_colormap>:
   11570:	push   %rbp
   11571:	mov    %rsp,%rbp
   11574:	sub    $0x130,%rsp
   1157b:	mov    (%rdi),%rdx
   1157e:	mov    (%rdx),%rax
   11581:	mov    (%rax),%rsi
   11584:	mov    $0x1,%r8d
   1158a:	mov    %r8,-0x100(%rbp)
   11591:	mov    $0x2,%r10d
   11597:	mov    0x14(%rdx),%eax
   1159a:	mov    %rax,%rcx
   1159d:	and    $0x4,%ecx
   115a0:	test   %ecx,%ecx
   115a2:	jne    115a7 <png_image_read_colormap+0x37>
   115a4:	mov    %r8,%r10
   115a7:	xor    %r9d,%r9d
   115aa:	mov    %r9,-0xb8(%rbp)
   115b1:	mov    $0xff,%r11d
   115b7:	mov    %r11,-0x88(%rbp)
   115be:	mov    $0xffff,%r8d
   115c4:	mov    %r8,-0x80(%rbp)
   115c8:	movzbl 0x267(%rsi),%ecx
   115cf:	and    $0x4,%ecx
   115d2:	test   %ecx,%ecx
   115d4:	jg     115f8 <png_image_read_colormap+0x88>
   115d6:	movzwl 0x260(%rsi),%ecx
   115dd:	test   %cx,%cx
   115e0:	jne    115f8 <png_image_read_colormap+0x88>
   115e2:	cmp    $0x2,%r10d
   115e6:	je     1161c <png_image_read_colormap+0xac>
   115e8:	mov    %r14,-0x30(%rbp)
   115ec:	mov    %r15,-0x38(%rbp)
   115f0:	mov    %r11,%r8
   115f3:	mov    %r8,%r9
   115f6:	jmp    1162a <png_image_read_colormap+0xba>
   115f8:	mov    %rax,%rcx
   115fb:	and    $0x1,%ecx
   115fe:	test   %ecx,%ecx
   11600:	jne    115e2 <png_image_read_colormap+0x72>
   11602:	cmp    $0x2,%r10d
   11606:	jne    116fc <png_image_read_colormap+0x18c>
   1160c:	mov    %r14,-0x30(%rbp)
   11610:	mov    %r15,-0x38(%rbp)
   11614:	mov    %r9,%r8
   11617:	mov    %r8,%r11
   1161a:	jmp    1162a <png_image_read_colormap+0xba>
   1161c:	mov    %r14,-0x30(%rbp)
   11620:	mov    %r15,-0x38(%rbp)
   11624:	mov    %r8,%r9
   11627:	mov    %r9,%r11
   1162a:	mov    %r9,-0xe0(%rbp)
   11631:	mov    %r11,-0xd8(%rbp)
   11638:	mov    %r8,-0xd0(%rbp)
   1163f:	movzwl 0x4e2(%rsi),%ecx
   11646:	and    $0x1,%ecx
   11649:	test   %ecx,%ecx
   1164b:	jne    1167c <png_image_read_colormap+0x10c>
   1164d:	mov    $0xb18f,%r14d
   11653:	movzbl 0x268(%rsi),%ecx
   1165a:	cmp    $0x10,%cl
   1165d:	je     1172f <png_image_read_colormap+0x1bf>
   11663:	movzwl 0x4e2(%rsi),%ecx
   1166a:	or     $0x1,%cx
   1166e:	mov    %cx,0x4e2(%rsi)
   11675:	mov    %r14d,0x498(%rsi)
   1167c:	movzbl 0x267(%rsi),%r14d
   11684:	cmp    $0x6,%r14b
   11688:	ja     11748 <png_image_read_colormap+0x1d8>
   1168e:	lea    0x1acf7(%rip),%rcx        # 2c38c <png_sRGB_base>
   11695:	lea    0x1b0f0(%rip),%r15        # 2c78c <png_sRGB_delta>
   1169c:	mov    %r13,-0x28(%rbp)
   116a0:	lea    0x1aae5(%rip),%r13        # 2c18c <png_sRGB_table>
   116a7:	mov    %r13,-0x90(%rbp)
   116ae:	mov    %r11d,%r13d
   116b1:	mov    %r13,-0x98(%rbp)
   116b8:	mov    $0x3,%r13d
   116be:	mov    %r13,-0xb0(%rbp)
   116c5:	lea    0x1c24c(%rip),%r13        # 2d918 <png_pass_yinc.24+0x21>
   116cc:	movslq 0x0(%r13,%r14,4),%r13
   116d1:	mov    %r12,-0x20(%rbp)
   116d5:	lea    0x1c23c(%rip),%r12        # 2d918 <png_pass_yinc.24+0x21>
   116dc:	add    %r13,%r12
   116df:	jmpq   *%r12
   116e2:	movzwl 0x260(%rsi),%r15d
   116ea:	test   %r15w,%r15w
   116ee:	jne    118c4 <png_image_read_colormap+0x354>
   116f4:	xor    %r14d,%r14d
   116f7:	jmpq   118cb <png_image_read_colormap+0x35b>
   116fc:	mov    0x20(%rdi),%r8
   11700:	test   %r8,%r8
   11703:	je     11945 <png_image_read_colormap+0x3d5>
   11709:	movzbl 0x1(%r8),%r11d
   1170e:	mov    %rax,%rcx
   11711:	and    $0x2,%ecx
   11714:	test   %ecx,%ecx
   11716:	jne    11954 <png_image_read_colormap+0x3e4>
   1171c:	mov    %r14,-0x30(%rbp)
   11720:	mov    %r15,-0x38(%rbp)
   11724:	mov    %r11,%r8
   11727:	mov    %r8,%r9
   1172a:	jmpq   1162a <png_image_read_colormap+0xba>
   1172f:	mov    0x18(%rdx),%ecx
   11732:	and    $0x4,%ecx
   11735:	test   %ecx,%ecx
   11737:	jne    11663 <png_image_read_colormap+0xf3>
   1173d:	mov    $0x186a0,%r14d
   11743:	jmpq   11663 <png_image_read_colormap+0xf3>
   11748:	mov    %rsi,%rdi
   1174b:	lea    0x1c8fb(%rip),%rsi        # 2e04d <chunks_to_process.34+0x248>
   11752:	callq  5470 <png_error@plt>
   11757:	movzbl 0x268(%rsi),%r12d
   1175f:	cmp    $0x8,%r12b
   11763:	jbe    1196a <png_image_read_colormap+0x3fa>
   11769:	mov    0x1c(%rdx),%r8d
   1176d:	cmp    $0xff,%r8d
   11774:	jbe    119d5 <png_image_read_colormap+0x465>
   1177a:	mov    %rdi,%r8
   1177d:	mov    %rdi,-0x58(%rbp)
   11781:	mov    %r15,-0x100(%rbp)
   11788:	mov    %rcx,-0x78(%rbp)
   1178c:	mov    %rdx,-0x50(%rbp)
   11790:	mov    %rbx,-0x8(%rbp)
   11794:	mov    %r8,%rdi
   11797:	mov    %rax,%rbx
   1179a:	mov    %r11,%r12
   1179d:	mov    %r9,%r13
   117a0:	mov    %rsi,%r14
   117a3:	mov    %r10,%r15
   117a6:	callq  11320 <make_gray_colormap>
   117ab:	movzwl 0x260(%r14),%ecx
   117b3:	test   %cx,%cx
   117b6:	jne    119e4 <png_image_read_colormap+0x474>
   117bc:	mov    %rax,%r13
   117bf:	mov    -0x8(%rbp),%r11
   117c3:	mov    -0x50(%rbp),%r15
   117c7:	mov    -0x58(%rbp),%rbx
   117cb:	mov    $0x100,%r10d
   117d1:	xor    %r12d,%r12d
   117d4:	mov    $0x1,%edx
   117d9:	mov    %rdx,%rsi
   117dc:	mov    %r12,%rax
   117df:	mov    %rax,%rcx
   117e2:	jmpq   11a8b <png_image_read_colormap+0x51b>
   117e7:	mov    %rax,%r12
   117ea:	and    $0x1,%r12d
   117ee:	test   %r12d,%r12d
   117f1:	jne    11a4b <png_image_read_colormap+0x4db>
   117f7:	and    $0x2,%eax
   117fa:	test   %eax,%eax
   117fc:	je     11b02 <png_image_read_colormap+0x592>
   11802:	cmp    %r9d,%r11d
   11805:	jne    11810 <png_image_read_colormap+0x2a0>
   11807:	cmp    %r9d,%r8d
   1180a:	je     11b02 <png_image_read_colormap+0x592>
   11810:	mov    0x1c(%rdx),%eax
   11813:	cmp    $0xff,%eax
   11818:	jbe    11b4f <png_image_read_colormap+0x5df>
   1181e:	mov    $0x46ed2901,%r14d
   11824:	mov    %r10,-0x100(%rbp)
   1182b:	mov    %rsi,-0x50(%rbp)
   1182f:	mov    %r15,-0x88(%rbp)
   11836:	mov    %rcx,-0x80(%rbp)
   1183a:	mov    %rbx,-0x10(%rbp)
   1183e:	mov    %rdx,%rbx
   11841:	mov    %rdi,%r15
   11844:	xor    %esi,%esi
   11846:	mov    $0xff,%r12d
   1184c:	jmpq   11b8a <png_image_read_colormap+0x61a>
   11851:	mov    %rax,%r12
   11854:	and    $0x2,%r12d
   11858:	test   %r12d,%r12d
   1185b:	je     11c2a <png_image_read_colormap+0x6ba>
   11861:	cmp    $0x6,%r14b
   11865:	je     11d0d <png_image_read_colormap+0x79d>
   1186b:	movzwl 0x260(%rsi),%r12d
   11873:	test   %r12w,%r12w
   11877:	jne    11d0d <png_image_read_colormap+0x79d>
   1187d:	mov    0x1c(%rdx),%eax
   11880:	cmp    $0xd7,%eax
   11885:	jbe    11dac <png_image_read_colormap+0x83c>
   1188b:	mov    %rbx,%r13
   1188e:	mov    %rsi,%r14
   11891:	mov    %rdx,%r15
   11894:	mov    %rdi,%rbx
   11897:	callq  114a0 <make_rgb_colormap>
   1189c:	mov    %rbx,-0x58(%rbp)
   118a0:	mov    %r13,%r11
   118a3:	mov    %rax,%r13
   118a6:	mov    $0x100,%r10d
   118ac:	mov    $0x3,%ecx
   118b1:	xor    %r12d,%r12d
   118b4:	mov    $0x1,%edx
   118b9:	mov    %rdx,%rsi
   118bc:	mov    %r12,%rax
   118bf:	jmpq   11a8b <png_image_read_colormap+0x51b>
   118c4:	mov    0x2e8(%rsi),%r14
   118cb:	mov    0x250(%rsi),%rcx
   118d2:	mov    %rcx,-0xf8(%rbp)
   118d9:	test   %r14,%r14
   118dc:	je     118f1 <png_image_read_colormap+0x381>
   118de:	and    $0x1,%eax
   118e1:	test   %eax,%eax
   118e3:	jne    118f1 <png_image_read_colormap+0x381>
   118e5:	pushq  -0x100(%rbp)
   118eb:	popq   -0xb8(%rbp)
   118f1:	test   %r14,%r14
   118f4:	jne    118f9 <png_image_read_colormap+0x389>
   118f6:	xor    %r15d,%r15d
   118f9:	movzwl 0x258(%rsi),%r13d
   11901:	cmp    $0x100,%r13w
   11907:	jbe    1190f <png_image_read_colormap+0x39f>
   11909:	mov    $0x100,%r13d
   1190f:	cmp    0x1c(%rdx),%r13d
   11913:	ja     11dbb <png_image_read_colormap+0x84b>
   11919:	mov    %rsi,-0xb0(%rbp)
   11920:	mov    %rdx,-0x70(%rbp)
   11924:	mov    %rbx,-0x88(%rbp)
   1192b:	mov    %rdi,%rbx
   1192e:	mov    -0xb8(%rbp),%rax
   11935:	mov    $0x3,%esi
   1193a:	xor    %r12d,%r12d
   1193d:	mov    %r12,%rdx
   11940:	jmpq   11e35 <png_image_read_colormap+0x8c5>
   11945:	mov    %rsi,%rdi
   11948:	lea    0x1c534(%rip),%rsi        # 2de83 <chunks_to_process.34+0x7e>
   1194f:	callq  5470 <png_error@plt>
   11954:	movzbl (%r8),%r9d
   11958:	movzbl 0x2(%r8),%r8d
   1195d:	mov    %r14,-0x30(%rbp)
   11961:	mov    %r15,-0x38(%rbp)
   11965:	jmpq   1162a <png_image_read_colormap+0xba>
   1196a:	mov    %r12,%rcx
   1196d:	mov    %rbx,%r14
   11970:	mov    %rdi,%rbx
   11973:	mov    $0x1,%r13d
   11979:	shl    %cl,%r13d
   1197c:	cmp    0x1c(%rdx),%r13d
   11980:	ja     11e7a <png_image_read_colormap+0x90a>
   11986:	mov    %rax,%rdi
   11989:	mov    %rdx,%r15
   1198c:	lea    -0x1(%r13),%ecx
   11990:	xor    %edx,%edx
   11992:	mov    $0xff,%r12d
   11998:	mov    %r12,%rax
   1199b:	div    %ecx
   1199d:	movzwl 0x260(%rsi),%ecx
   119a4:	test   %cx,%cx
   119a7:	jne    11e89 <png_image_read_colormap+0x919>
   119ad:	mov    %rsi,-0x98(%rbp)
   119b4:	mov    %r15,-0x88(%rbp)
   119bb:	mov    %r14,-0x8(%rbp)
   119bf:	mov    %rax,%r14
   119c2:	mov    $0x100,%ecx
   119c7:	xor    %r12d,%r12d
   119ca:	mov    %r12,%rax
   119cd:	mov    %rax,%r15
   119d0:	jmpq   11f27 <png_image_read_colormap+0x9b7>
   119d5:	mov    %rsi,%rdi
   119d8:	lea    0x1c506(%rip),%rsi        # 2dee5 <chunks_to_process.34+0xe0>
   119df:	callq  5470 <png_error@plt>
   119e4:	and    $0x1,%ebx
   119e7:	test   %ebx,%ebx
   119e9:	je     11f74 <png_image_read_colormap+0xa04>
   119ef:	mov    -0xd0(%rbp),%r8
   119f6:	pushq  -0xb8(%rbp)
   119fc:	popq   -0x88(%rbp)
   11a02:	mov    %r15d,(%rsp)
   11a06:	mov    %r12,%rcx
   11a09:	mov    %r13,%rdx
   11a0c:	mov    %rax,%r13
   11a0f:	mov    $0xfe,%r15d
   11a15:	mov    -0x58(%rbp),%rbx
   11a19:	mov    %rbx,%rdi
   11a1c:	mov    %r15,%rsi
   11a1f:	mov    -0x88(%rbp),%r9
   11a26:	callq  10ac0 <png_create_colormap_entry>
   11a2b:	mov    %r15,%r10
   11a2e:	mov    -0x8(%rbp),%r11
   11a32:	mov    -0x50(%rbp),%r15
   11a36:	xor    %r12d,%r12d
   11a39:	mov    $0x1,%edx
   11a3e:	mov    $0x2,%ecx
   11a43:	mov    %rdx,%rax
   11a46:	mov    %rax,%rsi
   11a49:	jmp    11a8b <png_image_read_colormap+0x51b>
   11a4b:	mov    0x1c(%rdx),%eax
   11a4e:	cmp    $0xff,%eax
   11a53:	jbe    11f9c <png_image_read_colormap+0xa2c>
   11a59:	mov    %rbx,%r13
   11a5c:	mov    %rsi,%r14
   11a5f:	mov    %rdx,%r15
   11a62:	mov    %rdi,%rbx
   11a65:	callq  11380 <make_ga_colormap>
   11a6a:	mov    %rbx,-0x58(%rbp)
   11a6e:	mov    %r13,%r11
   11a71:	mov    %rax,%r13
   11a74:	mov    $0xe7,%r10d
   11a7a:	xor    %r12d,%r12d
   11a7d:	mov    $0x1,%edx
   11a82:	mov    %rdx,%rcx
   11a85:	mov    %rcx,%rsi
   11a88:	mov    %r12,%rax
   11a8b:	test   %eax,%eax
   11a8d:	jle    11ae1 <png_image_read_colormap+0x571>
   11a8f:	movzwl 0x260(%r14),%eax
   11a97:	test   %ax,%ax
   11a9a:	je     11ae1 <png_image_read_colormap+0x571>
   11a9c:	movzbl 0x267(%r14),%eax
   11aa4:	and    $0x4,%eax
   11aa7:	test   %eax,%eax
   11aa9:	jne    11ae1 <png_image_read_colormap+0x571>
   11aab:	mov    %r14,%rdi
   11aae:	mov    %r11,-0x8(%rbp)
   11ab2:	mov    %r10,-0x100(%rbp)
   11ab9:	mov    %rcx,%rbx
   11abc:	mov    %rsi,%r12
   11abf:	callq  58b0 <png_set_tRNS_to_alpha@plt>
   11ac4:	mov    %rbx,%rcx
   11ac7:	mov    %r12,%rsi
   11aca:	mov    -0x100(%rbp),%r10
   11ad1:	mov    -0x8(%rbp),%r11
   11ad5:	mov    -0x58(%rbp),%rbx
   11ad9:	xor    %r12d,%r12d
   11adc:	mov    $0x1,%edx
   11ae1:	cmp    $0x1,%esi
   11ae4:	je     11fab <png_image_read_colormap+0xa3b>
   11aea:	cmp    $0x3,%esi
   11aed:	je     11fde <png_image_read_colormap+0xa6e>
   11af3:	mov    %r14,%rdi
   11af6:	lea    0x1c567(%rip),%rsi        # 2e064 <chunks_to_process.34+0x25f>
   11afd:	callq  5470 <png_error@plt>
   11b02:	mov    0x1c(%rdx),%eax
   11b05:	cmp    $0xff,%eax
   11b0a:	jbe    12031 <png_image_read_colormap+0xac1>
   11b10:	mov    %rdi,%rax
   11b13:	mov    %rdi,-0x58(%rbp)
   11b17:	mov    %rdx,-0x100(%rbp)
   11b1e:	mov    %rbx,-0x10(%rbp)
   11b22:	mov    %rax,%rdi
   11b25:	mov    %rcx,%rbx
   11b28:	mov    %r10,%r12
   11b2b:	mov    %r11,%r13
   11b2e:	mov    %rsi,%r14
   11b31:	callq  11320 <make_gray_colormap>
   11b36:	cmp    $0x2,%r12d
   11b3a:	je     12040 <png_image_read_colormap+0xad0>
   11b40:	mov    %r13,%r12
   11b43:	mov    %rax,%r13
   11b46:	mov    -0x58(%rbp),%rbx
   11b4a:	jmpq   1209d <png_image_read_colormap+0xb2d>
   11b4f:	mov    %rsi,%rdi
   11b52:	lea    0x1c3fc(%rip),%rsi        # 2df55 <chunks_to_process.34+0x150>
   11b59:	callq  5470 <png_error@plt>
   11b5e:	movl   $0x1,(%rsp)
   11b65:	mov    %rsi,%rax
   11b68:	shl    $0x8,%eax
   11b6b:	lea    0x74(%rax),%ecx
   11b6e:	mov    %r14,%rax
   11b71:	mul    %ecx
   11b73:	shr    $0x6,%edx
   11b76:	mov    %rdx,%rcx
   11b79:	mov    %rdx,%r8
   11b7c:	mov    %r15,%rdi
   11b7f:	mov    %r12,%r9
   11b82:	callq  10ac0 <png_create_colormap_entry>
   11b87:	mov    %r13,%rsi
   11b8a:	lea    0x1(%rsi),%r13d
   11b8e:	cmp    $0xe6,%esi
   11b94:	jbe    11b5e <png_image_read_colormap+0x5ee>
   11b96:	mov    -0x100(%rbp),%rax
   11b9d:	cmp    $0x2,%eax
   11ba0:	jne    11ba8 <png_image_read_colormap+0x638>
   11ba2:	mov    $0xffff,%r12d
   11ba8:	mov    %eax,(%rsp)
   11bab:	mov    %r15,%rdi
   11bae:	mov    %rsi,%r9
   11bb1:	mov    -0xe0(%rbp),%r14
   11bb8:	mov    %r14,%rdx
   11bbb:	mov    -0xd8(%rbp),%r10
   11bc2:	mov    %r10,%rcx
   11bc5:	mov    %rbx,-0x48(%rbp)
   11bc9:	mov    -0xd0(%rbp),%rbx
   11bd0:	mov    %rbx,%r8
   11bd3:	mov    %r15,-0x58(%rbp)
   11bd7:	mov    %rsi,-0x40(%rbp)
   11bdb:	mov    %r9,%rsi
   11bde:	mov    %r12,%r9
   11be1:	mov    %r10,%r12
   11be4:	mov    %rbx,%r15
   11be7:	mov    %rax,%rbx
   11bea:	callq  10ac0 <png_create_colormap_entry>
   11bef:	cmp    $0x1,%ebx
   11bf2:	je     12107 <png_image_read_colormap+0xb97>
   11bf8:	mov    %r15,%rax
   11bfb:	mov    %r12,%r9
   11bfe:	mov    %r14,%r10
   11c01:	mov    -0x80(%rbp),%rdi
   11c05:	mov    -0x88(%rbp),%rsi
   11c0c:	mov    -0x58(%rbp),%rbx
   11c10:	mov    -0x90(%rbp),%r14
   11c17:	xor    %r12d,%r12d
   11c1a:	mov    $0xff,%ecx
   11c1f:	mov    $0x1,%r11d
   11c25:	jmpq   12258 <png_image_read_colormap+0xce8>
   11c2a:	mov    $0xffffffffffffffff,%r12
   11c31:	mov    %r12,%r9
   11c34:	mov    %rsi,%r11
   11c37:	mov    $0x1,%r8d
   11c3d:	mov    %r15,-0xe0(%rbp)
   11c44:	mov    %rcx,-0xd0(%rbp)
   11c4b:	mov    %rbx,-0x18(%rbp)
   11c4f:	mov    %r9,%rcx
   11c52:	mov    %rdi,%rbx
   11c55:	mov    %r11,%rdi
   11c58:	mov    %rax,%r13
   11c5b:	mov    %rsi,%r14
   11c5e:	mov    %r8,%rsi
   11c61:	mov    %rdx,%r15
   11c64:	mov    %r12,%rdx
   11c67:	mov    %r10,%r12
   11c6a:	callq  55b0 <png_set_rgb_to_gray_fixed@plt>
   11c6f:	movzbl 0x267(%r14),%eax
   11c77:	cmp    $0x6,%al
   11c79:	je     11c88 <png_image_read_colormap+0x718>
   11c7b:	movzwl 0x260(%r14),%eax
   11c83:	test   %ax,%ax
   11c86:	je     11c95 <png_image_read_colormap+0x725>
   11c88:	and    $0x1,%r13d
   11c8c:	test   %r13d,%r13d
   11c8f:	jne    12285 <png_image_read_colormap+0xd15>
   11c95:	mov    0x1c(%r15),%eax
   11c99:	cmp    $0xff,%eax
   11c9e:	jbe    122c3 <png_image_read_colormap+0xd53>
   11ca4:	movzbl 0x267(%r14),%eax
   11cac:	cmp    $0x6,%al
   11cae:	jne    122d2 <png_image_read_colormap+0xd62>
   11cb4:	movslq 0x498(%r14),%rdi
   11cbb:	callq  106b0 <png_gamma_not_sRGB>
   11cc0:	test   %eax,%eax
   11cc2:	jne    122e8 <png_image_read_colormap+0xd78>
   11cc8:	mov    %rbx,%rdi
   11ccb:	callq  11320 <make_gray_colormap>
   11cd0:	mov    %rax,%r13
   11cd3:	movzbl 0x267(%r14),%eax
   11cdb:	cmp    $0x6,%al
   11cdd:	jne    12304 <png_image_read_colormap+0xd94>
   11ce3:	mov    -0x100(%rbp),%r10
   11cea:	cmp    $0x3,%r10d
   11cee:	je     1233d <png_image_read_colormap+0xdcd>
   11cf4:	cmp    $0x2,%r12d
   11cf8:	je     12353 <png_image_read_colormap+0xde3>
   11cfe:	mov    %r10,%r12
   11d01:	mov    -0xd8(%rbp),%rax
   11d08:	jmpq   1243e <png_image_read_colormap+0xece>
   11d0d:	mov    $0x80,%r14d
   11d13:	mov    %rax,%r12
   11d16:	and    $0x1,%r12d
   11d1a:	test   %r12d,%r12d
   11d1d:	jne    1249e <png_image_read_colormap+0xf2e>
   11d23:	mov    0x1c(%rdx),%r12d
   11d27:	cmp    $0xf3,%r12d
   11d2e:	jbe    12508 <png_image_read_colormap+0xf98>
   11d34:	mov    %rdi,%r12
   11d37:	mov    %rsi,-0xa8(%rbp)
   11d3e:	mov    %rax,-0xc8(%rbp)
   11d45:	mov    %r15,-0x100(%rbp)
   11d4c:	mov    %rcx,-0xf8(%rbp)
   11d53:	mov    %rdx,-0x68(%rbp)
   11d57:	mov    %rbx,-0x40(%rbp)
   11d5b:	mov    %rdi,%rbx
   11d5e:	mov    %r12,%rdi
   11d61:	mov    %r8,%r12
   11d64:	mov    %r10,%r13
   11d67:	mov    %r11,%r14
   11d6a:	mov    %r9,%r15
   11d6d:	callq  114a0 <make_rgb_colormap>
   11d72:	mov    %rax,%rsi
   11d75:	mov    %rsi,-0xc0(%rbp)
   11d7c:	mov    %r13d,(%rsp)
   11d80:	mov    %rbx,%rdi
   11d83:	mov    %r15,%rdx
   11d86:	mov    %r14,%rcx
   11d89:	mov    %r12,%r8
   11d8c:	xor    %r9d,%r9d
   11d8f:	callq  10ac0 <png_create_colormap_entry>
   11d94:	cmp    $0x2,%r13d
   11d98:	je     12517 <png_image_read_colormap+0xfa7>
   11d9e:	mov    %r14,%rax
   11da1:	mov    %rax,%rcx
   11da4:	mov    %r15,%rdx
   11da7:	jmpq   125b8 <png_image_read_colormap+0x1048>
   11dac:	mov    %rsi,%rdi
   11daf:	lea    0x1c255(%rip),%rsi        # 2e00b <chunks_to_process.34+0x206>
   11db6:	callq  5470 <png_error@plt>
   11dbb:	mov    %rsi,%rdi
   11dbe:	lea    0x1c265(%rip),%rsi        # 2e02a <chunks_to_process.34+0x225>
   11dc5:	callq  5470 <png_error@plt>
   11dca:	movzbl (%r14,%rdi,1),%r9d
   11dcf:	movl   $0x3,(%rsp)
   11dd6:	mov    %rbx,%rdi
   11dd9:	mov    %rdx,%rsi
   11ddc:	mov    %r10,-0xf0(%rbp)
   11de3:	mov    %rbx,-0x100(%rbp)
   11dea:	mov    %r12,%rcx
   11ded:	mov    %rdx,%r12
   11df0:	mov    %r11,%rdx
   11df3:	mov    %rax,%rbx
   11df6:	callq  10ac0 <png_create_colormap_entry>
   11dfb:	mov    %rbx,%rax
   11dfe:	mov    -0x100(%rbp),%rbx
   11e05:	mov    -0xf0(%rbp),%r10
   11e0c:	lea    0x1(%r12),%edx
   11e11:	mov    -0xf8(%rbp),%rcx
   11e18:	mov    -0xd0(%rbp),%r8
   11e1f:	mov    -0xd8(%rbp),%r11
   11e26:	mov    -0xe0(%rbp),%r9
   11e2d:	mov    $0x3,%esi
   11e32:	xor    %r12d,%r12d
   11e35:	cmp    %r13d,%edx
   11e38:	jb     126b3 <png_image_read_colormap+0x1143>
   11e3e:	mov    -0xb0(%rbp),%r14
   11e45:	movzbl 0x268(%r14),%eax
   11e4d:	cmp    $0x7,%al
   11e4f:	jbe    12795 <png_image_read_colormap+0x1225>
   11e55:	mov    %rbx,-0x58(%rbp)
   11e59:	mov    -0x88(%rbp),%r11
   11e60:	mov    -0x70(%rbp),%r15
   11e64:	mov    $0x100,%r10d
   11e6a:	mov    $0x1,%edx
   11e6f:	mov    %r12,%rax
   11e72:	mov    %rax,%rcx
   11e75:	jmpq   11a8b <png_image_read_colormap+0x51b>
   11e7a:	mov    %rsi,%rdi
   11e7d:	lea    0x1c03e(%rip),%rsi        # 2dec2 <chunks_to_process.34+0xbd>
   11e84:	callq  5470 <png_error@plt>
   11e89:	movzwl 0x2f8(%rsi),%ecx
   11e90:	and    $0x1,%edi
   11e93:	test   %edi,%edi
   11e95:	je     127c8 <png_image_read_colormap+0x1258>
   11e9b:	mov    %rsi,-0x98(%rbp)
   11ea2:	mov    %r15,-0x88(%rbp)
   11ea9:	mov    %r14,-0x8(%rbp)
   11ead:	mov    %rax,%r14
   11eb0:	xor    %r12d,%r12d
   11eb3:	mov    %r12,%rax
   11eb6:	mov    %rax,%r15
   11eb9:	jmp    11f27 <png_image_read_colormap+0x9b7>
   11ebb:	movl   $0x3,(%rsp)
   11ec2:	mov    %r15,%r11
   11ec5:	mov    %r15,%r8
   11ec8:	mov    %rbx,%rdi
   11ecb:	mov    %rax,%rsi
   11ece:	mov    %r15,%rdx
   11ed1:	mov    $0xff,%r9d
   11ed7:	mov    %r10,-0xa8(%rbp)
   11ede:	mov    %rbx,-0xa0(%rbp)
   11ee5:	mov    %rcx,-0x100(%rbp)
   11eec:	mov    %r11,%rcx
   11eef:	mov    %rax,%rbx
   11ef2:	callq  10ac0 <png_create_colormap_entry>
   11ef7:	lea    0x1(%rbx),%eax
   11efa:	add    %r14d,%r15d
   11efd:	mov    -0x100(%rbp),%rcx
   11f04:	mov    -0xa0(%rbp),%rbx
   11f0b:	mov    -0xd0(%rbp),%r8
   11f12:	mov    -0xa8(%rbp),%r10
   11f19:	mov    -0xd8(%rbp),%r11
   11f20:	mov    -0xe0(%rbp),%r9
   11f27:	cmp    %r13d,%eax
   11f2a:	jb     127f2 <png_image_read_colormap+0x1282>
   11f30:	mov    -0x98(%rbp),%r14
   11f37:	movzbl 0x268(%r14),%eax
   11f3f:	cmp    $0x7,%al
   11f41:	jbe    12835 <png_image_read_colormap+0x12c5>
   11f47:	mov    %rbx,-0x58(%rbp)
   11f4b:	mov    -0x8(%rbp),%r11
   11f4f:	mov    -0x88(%rbp),%r15
   11f56:	mov    $0x100,%r10d
   11f5c:	mov    $0x3,%esi
   11f61:	xor    %r12d,%r12d
   11f64:	mov    $0x1,%edx
   11f69:	mov    %r12,%rax
   11f6c:	mov    %rax,%rcx
   11f6f:	jmpq   11a8b <png_image_read_colormap+0x51b>
   11f74:	cmp    %r13d,%r12d
   11f77:	je     1286a <png_image_read_colormap+0x12fa>
   11f7d:	mov    -0xd0(%rbp),%r8
   11f84:	cmp    $0x2,%r15d
   11f88:	jne    11a02 <png_image_read_colormap+0x492>
   11f8e:	pushq  -0x80(%rbp)
   11f91:	popq   -0x88(%rbp)
   11f97:	jmpq   11a02 <png_image_read_colormap+0x492>
   11f9c:	mov    %rsi,%rdi
   11f9f:	lea    0x1bf63(%rip),%rsi        # 2df09 <chunks_to_process.34+0x104>
   11fa6:	callq  5470 <png_error@plt>
   11fab:	mov    $0x35b60,%edx
   11fb0:	mov    %r14,%rdi
   11fb3:	mov    %r11,-0x100(%rbp)
   11fba:	mov    %r12,%rsi
   11fbd:	mov    %rcx,%r12
   11fc0:	mov    %r10,%rbx
   11fc3:	callq  5640 <png_set_alpha_mode_fixed@plt>
   11fc8:	mov    %r12,%rcx
   11fcb:	mov    %rbx,%r10
   11fce:	mov    -0x100(%rbp),%r11
   11fd5:	mov    -0x58(%rbp),%rbx
   11fd9:	mov    $0x1,%edx
   11fde:	movzbl 0x268(%r14),%eax
   11fe6:	cmp    $0x8,%al
   11fe8:	jbe    12015 <png_image_read_colormap+0xaa5>
   11fea:	mov    %r14,%rdi
   11fed:	mov    %r11,-0x100(%rbp)
   11ff4:	mov    %rcx,%rbx
   11ff7:	mov    %r10,%r12
   11ffa:	callq  58d0 <png_set_scale_16@plt>
   11fff:	mov    %rbx,%rcx
   12002:	mov    %r12,%r10
   12005:	mov    -0x100(%rbp),%r11
   1200c:	mov    -0x58(%rbp),%rbx
   12010:	mov    $0x1,%edx
   12015:	cmp    $0x100,%r13d
   1201c:	jbe    12893 <png_image_read_colormap+0x1323>
   12022:	mov    %r14,%rdi
   12025:	lea    0x1c059(%rip),%rsi        # 2e085 <chunks_to_process.34+0x280>
   1202c:	callq  5470 <png_error@plt>
   12031:	mov    %rsi,%rdi
   12034:	lea    0x1bef4(%rip),%rsi        # 2df2f <chunks_to_process.34+0x12a>
   1203b:	callq  5470 <png_error@plt>
   12040:	mov    %r13,%rsi
   12043:	shl    $0x8,%esi
   12046:	sub    %r13d,%esi
   12049:	mov    %rsi,%rcx
   1204c:	shr    $0xf,%ecx
   1204f:	mov    %ecx,%edx
   12051:	movzbl (%rdx,%r15,1),%ecx
   12056:	and    $0x7fff,%esi
   1205c:	imul   %esi,%ecx
   1205f:	shr    $0xc,%ecx
   12062:	movzwl (%rbx,%rdx,2),%edx
   12066:	movl   $0x2,(%rsp)
   1206d:	lea    (%rcx,%rdx,1),%r12d
   12071:	and    $0xff00,%r12d
   12078:	shr    $0x8,%r12d
   1207c:	mov    %r13,%rdx
   1207f:	mov    %rax,%r13
   12082:	mov    %rdx,%rcx
   12085:	mov    %rdx,%r8
   12088:	mov    -0x58(%rbp),%rbx
   1208c:	mov    %rbx,%rdi
   1208f:	mov    %r12,%rsi
   12092:	mov    $0xffff,%r9d
   12098:	callq  10ac0 <png_create_colormap_entry>
   1209d:	movb   $0x0,-0x11e(%rbp)
   120a4:	mov    %r12w,-0x118(%rbp)
   120ac:	mov    %r12w,-0x11a(%rbp)
   120b4:	mov    %r12w,-0x11c(%rbp)
   120bc:	mov    %r12w,-0x116(%rbp)
   120c4:	lea    -0x11e(%rbp),%rsi
   120cb:	xor    %r12d,%r12d
   120ce:	mov    %r12,%r8
   120d1:	mov    %r14,%rdi
   120d4:	mov    $0x1,%r15d
   120da:	mov    %r15,%rdx
   120dd:	mov    %r12,%rcx
   120e0:	callq  5320 <png_set_background_fixed@plt>
   120e5:	mov    %r15,%rsi
   120e8:	mov    -0x10(%rbp),%r11
   120ec:	mov    -0x100(%rbp),%r15
   120f3:	mov    $0x100,%r10d
   120f9:	mov    %rsi,%rdx
   120fc:	mov    %r12,%rax
   120ff:	mov    %rax,%rcx
   12102:	jmpq   11a8b <png_image_read_colormap+0x51b>
   12107:	mov    %r14d,%eax
   1210a:	mov    -0x90(%rbp),%r14
   12111:	movzwl (%r14,%rax,2),%r10d
   12116:	mov    -0x98(%rbp),%rax
   1211d:	movzwl (%r14,%rax,2),%r9d
   12122:	mov    %r15d,%eax
   12125:	movzwl (%r14,%rax,2),%eax
   1212a:	mov    -0x80(%rbp),%rdi
   1212e:	mov    -0x88(%rbp),%rsi
   12135:	mov    -0x58(%rbp),%rbx
   12139:	xor    %r12d,%r12d
   1213c:	mov    $0xff,%ecx
   12141:	mov    $0x1,%r11d
   12147:	jmpq   12258 <png_image_read_colormap+0xce8>
   1214c:	mov    %eax,%ecx
   1214e:	movzwl (%r14,%rcx,2),%r10d
   12153:	imul   %r15d,%r10d
   12157:	add    %r10d,%edx
   1215a:	mov    %rdx,%rcx
   1215d:	shr    $0xf,%ecx
   12160:	mov    %ecx,%r11d
   12163:	movzbl (%r11,%rsi,1),%ecx
   12168:	and    $0x7fff,%edx
   1216e:	imul   %edx,%ecx
   12171:	shr    $0xc,%ecx
   12174:	movzwl (%rdi,%r11,2),%edx
   12179:	add    %ecx,%edx
   1217b:	and    $0xff00,%edx
   12181:	shr    $0x8,%edx
   12184:	add    %r10d,%r9d
   12187:	mov    %r9,%rcx
   1218a:	shr    $0xf,%ecx
   1218d:	mov    %ecx,%r11d
   12190:	movzbl (%r11,%rsi,1),%ecx
   12195:	and    $0x7fff,%r9d
   1219c:	imul   %r9d,%ecx
   121a0:	shr    $0xc,%ecx
   121a3:	movzwl (%rdi,%r11,2),%r9d
   121a8:	add    %r9d,%ecx
   121ab:	and    $0xff00,%ecx
   121b1:	shr    $0x8,%ecx
   121b4:	add    %r10d,%r8d
   121b7:	mov    %r8,%r9
   121ba:	shr    $0xf,%r9d
   121be:	mov    %r9d,%r9d
   121c1:	movzbl (%r9,%rsi,1),%esi
   121c6:	and    $0x7fff,%r8d
   121cd:	imul   %r8d,%esi
   121d1:	shr    $0xc,%esi
   121d4:	movzwl (%rdi,%r9,2),%edi
   121d9:	movl   $0x1,(%rsp)
   121e0:	lea    (%rsi,%rdi,1),%r8d
   121e4:	and    $0xff00,%r8d
   121eb:	shr    $0x8,%r8d
   121ef:	mov    %rbx,%rdi
   121f2:	mov    %rax,%rbx
   121f5:	mov    %r13,%rsi
   121f8:	mov    $0xff,%r9d
   121fe:	callq  10ac0 <png_create_colormap_entry>
   12203:	lea    0x33(%rbx),%eax
   12206:	add    $0x1,%r13d
   1220a:	add    $0x1,%r12d
   1220e:	mov    -0x90(%rbp),%r8
   12215:	mov    -0x70(%rbp),%r9
   12219:	mov    -0x60(%rbp),%rdx
   1221d:	mov    -0x80(%rbp),%rdi
   12221:	mov    -0x88(%rbp),%rsi
   12228:	mov    -0x58(%rbp),%rbx
   1222c:	mov    $0xff,%ecx
   12231:	cmp    $0x5,%r12d
   12235:	jbe    1214c <png_image_read_colormap+0xbdc>
   1223b:	mov    -0x100(%rbp),%rax
   12242:	lea    0x1(%rax),%r11d
   12246:	mov    -0xd8(%rbp),%rax
   1224d:	mov    -0x68(%rbp),%r10
   12251:	mov    -0x78(%rbp),%r9
   12255:	xor    %r12d,%r12d
   12258:	cmp    $0x4,%r11d
   1225c:	jbe    128b9 <png_image_read_colormap+0x1349>
   12262:	mov    -0x40(%rbp),%r10
   12266:	mov    -0x10(%rbp),%r11
   1226a:	mov    -0x48(%rbp),%r15
   1226e:	mov    -0x50(%rbp),%r14
   12272:	mov    $0x1,%edx
   12277:	mov    %rdx,%rcx
   1227a:	mov    %rcx,%rsi
   1227d:	mov    %r12,%rax
   12280:	jmpq   11a8b <png_image_read_colormap+0x51b>
   12285:	mov    0x1c(%r15),%eax
   12289:	cmp    $0xff,%eax
   1228e:	jbe    12908 <png_image_read_colormap+0x1398>
   12294:	mov    %rbx,%rdi
   12297:	callq  11380 <make_ga_colormap>
   1229c:	mov    %rbx,-0x58(%rbp)
   122a0:	mov    %rax,%r13
   122a3:	mov    -0x18(%rbp),%r11
   122a7:	mov    $0xe7,%r10d
   122ad:	xor    %r12d,%r12d
   122b0:	mov    $0x1,%edx
   122b5:	mov    %rdx,%rax
   122b8:	mov    %rax,%rcx
   122bb:	mov    %rcx,%rsi
   122be:	jmpq   11a8b <png_image_read_colormap+0x51b>
   122c3:	mov    %r14,%rdi
   122c6:	lea    0x1bccf(%rip),%rsi        # 2df9c <chunks_to_process.34+0x197>
   122cd:	callq  5470 <png_error@plt>
   122d2:	movzwl 0x260(%r14),%eax
   122da:	test   %ax,%ax
   122dd:	jne    11cb4 <png_image_read_colormap+0x744>
   122e3:	jmpq   11cc8 <png_image_read_colormap+0x758>
   122e8:	mov    %rbx,%rdi
   122eb:	callq  112c0 <make_gray_file_colormap>
   122f0:	mov    %rax,%r13
   122f3:	pushq  -0xb0(%rbp)
   122f9:	popq   -0x100(%rbp)
   122ff:	jmpq   11cd3 <png_image_read_colormap+0x763>
   12304:	movzwl 0x260(%r14),%eax
   1230c:	test   %ax,%ax
   1230f:	jne    11ce3 <png_image_read_colormap+0x773>
   12315:	mov    %rbx,-0x58(%rbp)
   12319:	mov    -0x100(%rbp),%rsi
   12320:	mov    -0x18(%rbp),%r11
   12324:	mov    $0x100,%r10d
   1232a:	xor    %r12d,%r12d
   1232d:	mov    $0x1,%edx
   12332:	mov    %r12,%rax
   12335:	mov    %rax,%rcx
   12338:	jmpq   11a8b <png_image_read_colormap+0x51b>
   1233d:	cmp    $0x1,%r12d
   12341:	je     123ce <png_image_read_colormap+0xe5e>
   12347:	mov    -0xd8(%rbp),%rdi
   1234e:	jmpq   123e0 <png_image_read_colormap+0xe70>
   12353:	mov    -0xd8(%rbp),%rdx
   1235a:	mov    %rdx,%rax
   1235d:	shl    $0x8,%eax
   12360:	sub    %edx,%eax
   12362:	mov    %rax,%rcx
   12365:	shr    $0xf,%ecx
   12368:	mov    %ecx,%esi
   1236a:	mov    -0xe0(%rbp),%rcx
   12371:	movzbl (%rsi,%rcx,1),%ecx
   12375:	and    $0x7fff,%eax
   1237a:	imul   %eax,%ecx
   1237d:	shr    $0xc,%ecx
   12380:	mov    -0xd0(%rbp),%rax
   12387:	movzwl (%rax,%rsi,2),%eax
   1238b:	movl   $0x2,(%rsp)
   12392:	lea    (%rcx,%rax,1),%r12d
   12396:	and    $0xff00,%r12d
   1239d:	shr    $0x8,%r12d
   123a1:	mov    %rdx,%rcx
   123a4:	mov    %rdx,%r8
   123a7:	mov    %rbx,%rdi
   123aa:	mov    %r12,%rsi
   123ad:	xor    %r9d,%r9d
   123b0:	mov    %rbx,-0x100(%rbp)
   123b7:	mov    %r12,%rbx
   123ba:	mov    %r10,%r12
   123bd:	callq  10ac0 <png_create_colormap_entry>
   123c2:	mov    %rbx,%rax
   123c5:	mov    -0x100(%rbp),%rbx
   123cc:	jmp    1243e <png_image_read_colormap+0xece>
   123ce:	mov    -0x98(%rbp),%rcx
   123d5:	mov    -0x90(%rbp),%rax
   123dc:	movzwl (%rax,%rcx,2),%edi
   123e0:	movslq 0x498(%r14),%rsi
   123e7:	mov    %r15,-0x100(%rbp)
   123ee:	mov    %r10,%r15
   123f1:	callq  8b70 <png_gamma_16bit_correct>
   123f6:	mov    %r12d,(%rsp)
   123fa:	movzwl %ax,%ecx
   123fd:	mov    %rcx,%rax
   12400:	shl    $0x8,%eax
   12403:	sub    %ecx,%eax
   12405:	lea    0x807f(%rax),%r12d
   1240c:	shr    $0x10,%r12d
   12410:	mov    %r15,%rax
   12413:	mov    %r12,%r15
   12416:	mov    %rax,%r12
   12419:	mov    -0xd8(%rbp),%rdx
   12420:	mov    %rdx,%rcx
   12423:	mov    %rdx,%r8
   12426:	mov    %rbx,%rdi
   12429:	mov    %r15,%rsi
   1242c:	xor    %r9d,%r9d
   1242f:	callq  10ac0 <png_create_colormap_entry>
   12434:	mov    %r15,%rax
   12437:	mov    -0x100(%rbp),%r15
   1243e:	movb   $0x0,-0x114(%rbp)
   12445:	mov    %ax,-0x10e(%rbp)
   1244c:	mov    %ax,-0x110(%rbp)
   12453:	mov    %ax,-0x112(%rbp)
   1245a:	mov    %ax,-0x10c(%rbp)
   12461:	lea    -0x114(%rbp),%rsi
   12468:	xor    %ecx,%ecx
   1246a:	mov    %rcx,%r8
   1246d:	mov    %r14,%rdi
   12470:	mov    $0x1,%edx
   12475:	callq  5320 <png_set_background_fixed@plt>
   1247a:	mov    %rbx,-0x58(%rbp)
   1247e:	mov    %r12,%rsi
   12481:	mov    -0x18(%rbp),%r11
   12485:	mov    $0x100,%r10d
   1248b:	xor    %r12d,%r12d
   1248e:	mov    $0x1,%edx
   12493:	mov    %rdx,%rax
   12496:	mov    %r12,%rcx
   12499:	jmpq   11a8b <png_image_read_colormap+0x51b>
   1249e:	mov    0x1c(%rdx),%eax
   124a1:	cmp    $0xf3,%eax
   124a6:	jbe    12917 <png_image_read_colormap+0x13a7>
   124ac:	mov    %rdx,%r12
   124af:	mov    %rbx,%r13
   124b2:	mov    %rsi,%r15
   124b5:	mov    %rdi,%rbx
   124b8:	callq  114a0 <make_rgb_colormap>
   124bd:	mov    %rax,-0x48(%rbp)
   124c1:	movl   $0x1,(%rsp)
   124c8:	mov    $0xff,%edx
   124cd:	mov    %rdx,%rcx
   124d0:	mov    %rdx,%r8
   124d3:	mov    %rbx,%rdi
   124d6:	mov    %rax,%rsi
   124d9:	xor    %r10d,%r10d
   124dc:	mov    %r10,%r9
   124df:	mov    %r12,-0x60(%rbp)
   124e3:	mov    %r13,-0x18(%rbp)
   124e7:	mov    %r10,%r12
   124ea:	mov    %rax,%r13
   124ed:	callq  10ac0 <png_create_colormap_entry>
   124f2:	add    $0x1,%r13d
   124f6:	mov    %r15,-0x100(%rbp)
   124fd:	mov    %r14,%r9
   12500:	mov    %r12,%r15
   12503:	jmpq   12975 <png_image_read_colormap+0x1405>
   12508:	mov    %rsi,%rdi
   1250b:	lea    0x1bad4(%rip),%rsi        # 2dfe6 <chunks_to_process.34+0x1e1>
   12512:	callq  5470 <png_error@plt>
   12517:	mov    %r12,%rax
   1251a:	shl    $0x8,%eax
   1251d:	sub    %r12d,%eax
   12520:	mov    %rax,%rcx
   12523:	shr    $0xf,%ecx
   12526:	mov    %ecx,%edx
   12528:	mov    -0x100(%rbp),%r9
   1252f:	movzbl (%rdx,%r9,1),%ecx
   12534:	and    $0x7fff,%eax
   12539:	imul   %eax,%ecx
   1253c:	shr    $0xc,%ecx
   1253f:	mov    -0xf8(%rbp),%rdi
   12546:	movzwl (%rdi,%rdx,2),%eax
   1254a:	add    %eax,%ecx
   1254c:	and    $0xff00,%ecx
   12552:	shr    $0x8,%ecx
   12555:	mov    %r14,%rdx
   12558:	shl    $0x8,%edx
   1255b:	sub    %r14d,%edx
   1255e:	mov    %rdx,%rax
   12561:	shr    $0xf,%eax
   12564:	mov    %eax,%esi
   12566:	movzbl (%rsi,%r9,1),%eax
   1256b:	and    $0x7fff,%edx
   12571:	imul   %edx,%eax
   12574:	shr    $0xc,%eax
   12577:	movzwl (%rdi,%rsi,2),%edx
   1257b:	add    %edx,%eax
   1257d:	and    $0xff00,%eax
   12582:	shr    $0x8,%eax
   12585:	mov    %r15,%rsi
   12588:	shl    $0x8,%esi
   1258b:	sub    %r15d,%esi
   1258e:	mov    %rsi,%rdx
   12591:	shr    $0xf,%edx
   12594:	mov    %edx,%r8d
   12597:	movzbl (%r8,%r9,1),%edx
   1259c:	and    $0x7fff,%esi
   125a2:	imul   %esi,%edx
   125a5:	shr    $0xc,%edx
   125a8:	movzwl (%rdi,%r8,2),%esi
   125ad:	add    %esi,%edx
   125af:	and    $0xff00,%edx
   125b5:	shr    $0x8,%edx
   125b8:	mov    -0xc8(%rbp),%rdi
   125bf:	mov    %rdi,%rsi
   125c2:	and    $0x4,%esi
   125c5:	shr    $0x2,%esi
   125c8:	lea    0x1(%rsi),%r8d
   125cc:	and    $0x3,%edi
   125cf:	lea    0x1(%rdi),%esi
   125d2:	imul   %esi,%r8d
   125d6:	lea    0x82(%rax,%rax,4),%eax
   125dd:	shr    $0x8,%eax
   125e0:	lea    0x82(%rdx,%rdx,4),%edx
   125e7:	shr    $0x8,%edx
   125ea:	lea    (%rdx,%rdx,2),%edx
   125ed:	lea    (%rax,%rdx,2),%eax
   125f0:	lea    (%rax,%rax,2),%edx
   125f3:	lea    0x82(%rcx,%rcx,4),%eax
   125fa:	shr    $0x8,%eax
   125fd:	lea    (%rax,%rdx,2),%eax
   12600:	movzbl %al,%eax
   12603:	imul   %r8d,%eax
   12607:	mov    %eax,%eax
   12609:	mov    0x18(%rbx),%rcx
   1260d:	lea    (%rax,%rcx,1),%rsi
   12611:	mov    -0xc0(%rbp),%r9
   12618:	mov    %r8,%rax
   1261b:	imul   %r9d,%eax
   1261f:	mov    %eax,%eax
   12621:	lea    (%rcx,%rax,1),%rdi
   12625:	mov    %r8d,%edx
   12628:	mov    %r13,-0x100(%rbp)
   1262f:	mov    %r9,%r13
   12632:	callq  53d0 <memcmp@plt>
   12637:	test   %eax,%eax
   12639:	jne    129ae <png_image_read_colormap+0x143e>
   1263f:	movb   $0x0,-0x10a(%rbp)
   12646:	mov    %r15w,-0x108(%rbp)
   1264e:	mov    %r14w,-0x106(%rbp)
   12656:	mov    %r14w,-0x102(%rbp)
   1265e:	mov    %r12w,-0x104(%rbp)
   12666:	lea    -0x10a(%rbp),%rsi
   1266d:	xor    %r12d,%r12d
   12670:	mov    %r12,%r8
   12673:	mov    -0xa8(%rbp),%r14
   1267a:	mov    %r14,%rdi
   1267d:	mov    $0x1,%r15d
   12683:	mov    %r15,%rdx
   12686:	mov    %r12,%rcx
   12689:	callq  5320 <png_set_background_fixed@plt>
   1268e:	mov    %rbx,-0x58(%rbp)
   12692:	mov    %r15,%rsi
   12695:	mov    -0x40(%rbp),%r11
   12699:	mov    -0x68(%rbp),%r15
   1269d:	mov    $0x100,%r10d
   126a3:	mov    $0x3,%ecx
   126a8:	mov    %rsi,%rdx
   126ab:	mov    %r12,%rax
   126ae:	jmpq   11a8b <png_image_read_colormap+0x51b>
   126b3:	test   %eax,%eax
   126b5:	mov    %edx,%edi
   126b7:	jle    129d5 <png_image_read_colormap+0x1465>
   126bd:	cmp    %r15d,%edx
   126c0:	jae    129d5 <png_image_read_colormap+0x1465>
   126c6:	movzbl (%r14,%rdi,1),%r12d
   126cb:	cmp    $0xfe,%r12b
   126cf:	ja     129d5 <png_image_read_colormap+0x1465>
   126d5:	test   %r12b,%r12b
   126d8:	je     129fe <png_image_read_colormap+0x148e>
   126de:	mov    %r15,-0xf0(%rbp)
   126e5:	lea    (%rdi,%rdi,2),%r15
   126e9:	movzbl (%rcx,%r15,1),%esi
   126ee:	mov    %rbx,%r8
   126f1:	mov    %r13,-0xc0(%rbp)
   126f8:	mov    $0x3,%eax
   126fd:	mov    %rdx,-0x100(%rbp)
   12704:	mov    %r10,%rdx
   12707:	mov    %r10,-0xe8(%rbp)
   1270e:	mov    %rcx,%r13
   12711:	mov    %r12,%rcx
   12714:	mov    %rdi,%r12
   12717:	mov    %r8,%rdi
   1271a:	mov    %r9,%r8
   1271d:	mov    %rdx,%r9
   12720:	mov    %rax,%rdx
   12723:	callq  109f0 <png_colormap_compose>
   12728:	mov    %rax,-0xc8(%rbp)
   1272f:	movzbl 0x1(%r13,%r15,1),%esi
   12735:	movzbl (%r14,%r12,1),%ecx
   1273a:	mov    %rbx,%rdi
   1273d:	mov    $0x3,%edx
   12742:	mov    -0xd8(%rbp),%r8
   12749:	mov    -0xe8(%rbp),%r9
   12750:	callq  109f0 <png_colormap_compose>
   12755:	movzbl 0x2(%r13,%r15,1),%esi
   1275b:	mov    %rax,%r13
   1275e:	movzbl (%r14,%r12,1),%ecx
   12763:	mov    %rbx,%rdi
   12766:	mov    $0x3,%edx
   1276b:	mov    -0xd0(%rbp),%r8
   12772:	mov    -0xe8(%rbp),%r15
   12779:	mov    %r15,%r9
   1277c:	callq  109f0 <png_colormap_compose>
   12781:	cmp    $0x2,%r15d
   12785:	je     12a46 <png_image_read_colormap+0x14d6>
   1278b:	movzbl (%r14,%r12,1),%r9d
   12790:	jmpq   12a55 <png_image_read_colormap+0x14e5>
   12795:	mov    %rsi,%r15
   12798:	mov    %r14,%rdi
   1279b:	callq  5580 <png_set_packing@plt>
   127a0:	mov    %rbx,-0x58(%rbp)
   127a4:	mov    %r15,%rsi
   127a7:	mov    -0x88(%rbp),%r11
   127ae:	mov    -0x70(%rbp),%r15
   127b2:	mov    $0x100,%r10d
   127b8:	mov    $0x1,%edx
   127bd:	mov    %r12,%rax
   127c0:	mov    %rax,%rcx
   127c3:	jmpq   11a8b <png_image_read_colormap+0x51b>
   127c8:	cmp    $0x2,%r10d
   127cc:	je     12a95 <png_image_read_colormap+0x1525>
   127d2:	mov    %rsi,-0x98(%rbp)
   127d9:	mov    %r15,-0x88(%rbp)
   127e0:	mov    %r14,-0x8(%rbp)
   127e4:	mov    %rax,%r14
   127e7:	xor    %r15d,%r15d
   127ea:	mov    %r15,%rax
   127ed:	jmpq   11f27 <png_image_read_colormap+0x9b7>
   127f2:	cmp    %ecx,%eax
   127f4:	jne    11ebb <png_image_read_colormap+0x94b>
   127fa:	mov    %r10d,(%rsp)
   127fe:	mov    %rbx,%rdi
   12801:	mov    %rax,%rsi
   12804:	mov    %r12,%rdx
   12807:	mov    %r10,-0xa8(%rbp)
   1280e:	mov    %rbx,-0xa0(%rbp)
   12815:	mov    %rcx,-0x100(%rbp)
   1281c:	mov    %r11,%rcx
   1281f:	mov    %rax,%rbx
   12822:	mov    %r9,%r11
   12825:	mov    %rdx,%r9
   12828:	mov    %r11,%rdx
   1282b:	callq  10ac0 <png_create_colormap_entry>
   12830:	jmpq   11ef7 <png_image_read_colormap+0x987>
   12835:	mov    %r14,%rdi
   12838:	callq  5580 <png_set_packing@plt>
   1283d:	mov    %rbx,-0x58(%rbp)
   12841:	mov    -0x8(%rbp),%r11
   12845:	mov    -0x88(%rbp),%r15
   1284c:	mov    $0x100,%r10d
   12852:	mov    $0x3,%esi
   12857:	xor    %r12d,%r12d
   1285a:	mov    $0x1,%edx
   1285f:	mov    %r12,%rax
   12862:	mov    %rax,%rcx
   12865:	jmpq   11a8b <png_image_read_colormap+0x51b>
   1286a:	mov    -0xd0(%rbp),%r8
   12871:	cmp    %r13d,%r8d
   12874:	jne    11f84 <png_image_read_colormap+0xa14>
   1287a:	cmp    $0x2,%r15d
   1287e:	je     12abb <png_image_read_colormap+0x154b>
   12884:	mov    %r13,%r12
   12887:	mov    %rax,%r13
   1288a:	mov    -0x58(%rbp),%rbx
   1288e:	jmpq   12b22 <png_image_read_colormap+0x15b2>
   12893:	cmp    0x1c(%r15),%r13d
   12897:	ja     12022 <png_image_read_colormap+0xab2>
   1289d:	mov    %r13d,0x1c(%r15)
   128a1:	cmp    $0x4,%ecx
   128a4:	jbe    12b89 <png_image_read_colormap+0x1619>
   128aa:	mov    %r14,%rdi
   128ad:	lea    0x1b7f9(%rip),%rsi        # 2e0ad <chunks_to_process.34+0x2a8>
   128b4:	callq  5470 <png_error@plt>
   128b9:	mov    %r11,%rdx
   128bc:	shl    $0x4,%edx
   128bf:	add    %r11d,%edx
   128c2:	lea    (%rdx,%rdx,2),%r15d
   128c6:	mov    %rcx,%r8
   128c9:	sub    %r15d,%r8d
   128cc:	mov    %r8,%rdx
   128cf:	imul   %r10d,%edx
   128d3:	mov    %r9,-0x78(%rbp)
   128d7:	mov    %rdx,-0x60(%rbp)
   128db:	imul   %r8d,%r9d
   128df:	mov    %r9,-0x70(%rbp)
   128e3:	imul   %eax,%r8d
   128e7:	mov    %r8,-0x90(%rbp)
   128ee:	mov    %r11,-0x100(%rbp)
   128f5:	mov    %r10,-0x68(%rbp)
   128f9:	mov    %rax,-0xd8(%rbp)
   12900:	mov    %r12,%rax
   12903:	jmpq   12231 <png_image_read_colormap+0xcc1>
   12908:	mov    %r14,%rdi
   1290b:	lea    0x1b667(%rip),%rsi        # 2df79 <chunks_to_process.34+0x174>
   12912:	callq  5470 <png_error@plt>
   12917:	mov    %rsi,%rdi
   1291a:	lea    0x1b6a0(%rip),%rsi        # 2dfc1 <chunks_to_process.34+0x1bc>
   12921:	callq  5470 <png_error@plt>
   12926:	movl   $0x1,(%rsp)
   1292d:	mov    %rbx,%rdi
   12930:	mov    %r13,%rsi
   12933:	mov    %r15,%rdx
   12936:	mov    %r14,%rcx
   12939:	mov    %r12,%r8
   1293c:	callq  10ac0 <png_create_colormap_entry>
   12941:	add    %r12d,%r12d
   12944:	or     $0x7f,%r12d
   12948:	add    $0x1,%r13d
   1294c:	mov    $0x80,%r9d
   12952:	cmp    $0xff,%r12d
   12959:	jbe    12926 <png_image_read_colormap+0x13b6>
   1295b:	add    %r14d,%r14d
   1295e:	or     $0x7f,%r14d
   12962:	xor    %r12d,%r12d
   12965:	cmp    $0xff,%r14d
   1296c:	jbe    12952 <png_image_read_colormap+0x13e2>
   1296e:	add    %r15d,%r15d
   12971:	or     $0x7f,%r15d
   12975:	cmp    $0xff,%r15d
   1297c:	jbe    12bb5 <png_image_read_colormap+0x1645>
   12982:	mov    %rbx,-0x58(%rbp)
   12986:	mov    -0x48(%rbp),%r10
   1298a:	mov    $0x4,%ecx
   1298f:	mov    -0x18(%rbp),%r11
   12993:	mov    -0x60(%rbp),%r15
   12997:	mov    -0x100(%rbp),%r14
   1299e:	mov    $0x1,%edx
   129a3:	mov    %rdx,%rax
   129a6:	mov    %rax,%rsi
   129a9:	jmpq   11a8b <png_image_read_colormap+0x51b>
   129ae:	add    $0x1,%r13d
   129b2:	mov    %r14,%rcx
   129b5:	mov    %r15,%r8
   129b8:	mov    $0x80,%r10d
   129be:	mov    -0x100(%rbp),%r15
   129c5:	xor    %r12d,%r12d
   129c8:	mov    $0x1,%edx
   129cd:	mov    %r12,%rax
   129d0:	jmpq   12c9c <png_image_read_colormap+0x172c>
   129d5:	lea    (%rdi,%rdi,2),%rsi
   129d9:	movzbl (%rcx,%rsi,1),%r11d
   129de:	movzbl 0x1(%rcx,%rsi,1),%r12d
   129e4:	movzbl 0x2(%rcx,%rsi,1),%r8d
   129ea:	cmp    %r15d,%edx
   129ed:	jb     11dca <png_image_read_colormap+0x85a>
   129f3:	mov    $0xff,%r9d
   129f9:	jmpq   11dcf <png_image_read_colormap+0x85f>
   129fe:	mov    %r10d,(%rsp)
   12a02:	mov    %rbx,%rdi
   12a05:	mov    %rdx,%rsi
   12a08:	xor    %r12d,%r12d
   12a0b:	mov    %r10,-0xe8(%rbp)
   12a12:	mov    %rbx,-0x100(%rbp)
   12a19:	mov    %r11,%rcx
   12a1c:	mov    %rax,%rbx
   12a1f:	mov    %r9,%r11
   12a22:	mov    %r12,%r9
   12a25:	mov    %rdx,%r12
   12a28:	mov    %r11,%rdx
   12a2b:	callq  10ac0 <png_create_colormap_entry>
   12a30:	mov    %rbx,%rax
   12a33:	mov    -0x100(%rbp),%rbx
   12a3a:	mov    -0xe8(%rbp),%r10
   12a41:	jmpq   11e0c <png_image_read_colormap+0x89c>
   12a46:	movzbl (%r14,%r12,1),%edx
   12a4b:	mov    %rdx,%rcx
   12a4e:	shl    $0x8,%ecx
   12a51:	lea    (%rdx,%rcx,1),%r9d
   12a55:	mov    %r13,%rcx
   12a58:	mov    %rax,%r8
   12a5b:	mov    %r15d,(%rsp)
   12a5f:	mov    %rbx,%rdi
   12a62:	mov    -0x100(%rbp),%r12
   12a69:	mov    %r12,%rsi
   12a6c:	mov    -0xc8(%rbp),%rdx
   12a73:	callq  10ac0 <png_create_colormap_entry>
   12a78:	mov    %r15,%r10
   12a7b:	mov    -0xc0(%rbp),%r13
   12a82:	mov    -0xf0(%rbp),%r15
   12a89:	mov    -0xb8(%rbp),%rax
   12a90:	jmpq   11e0c <png_image_read_colormap+0x89c>
   12a95:	mov    %rsi,-0x98(%rbp)
   12a9c:	mov    %r15,-0x88(%rbp)
   12aa3:	mov    %r14,-0x8(%rbp)
   12aa7:	mov    %rax,%r14
   12aaa:	xor    %r15d,%r15d
   12aad:	mov    $0xffff,%r12d
   12ab3:	mov    %r15,%rax
   12ab6:	jmpq   11f27 <png_image_read_colormap+0x9b7>
   12abb:	mov    %r13,%rcx
   12abe:	shl    $0x8,%ecx
   12ac1:	sub    %r13d,%ecx
   12ac4:	mov    %rcx,%rdx
   12ac7:	shr    $0xf,%edx
   12aca:	mov    %edx,%esi
   12acc:	mov    -0x100(%rbp),%rdx
   12ad3:	movzbl (%rsi,%rdx,1),%edx
   12ad7:	and    $0x7fff,%ecx
   12add:	imul   %ecx,%edx
   12ae0:	shr    $0xc,%edx
   12ae3:	mov    -0x78(%rbp),%rcx
   12ae7:	movzwl (%rcx,%rsi,2),%ecx
   12aeb:	movl   $0x2,(%rsp)
   12af2:	lea    (%rdx,%rcx,1),%r12d
   12af6:	and    $0xff00,%r12d
   12afd:	shr    $0x8,%r12d
   12b01:	mov    %r13,%rdx
   12b04:	mov    %rax,%r13
   12b07:	mov    %rdx,%rcx
   12b0a:	mov    %rdx,%r8
   12b0d:	mov    -0x58(%rbp),%rbx
   12b11:	mov    %rbx,%rdi
   12b14:	mov    %r12,%rsi
   12b17:	mov    $0xffff,%r9d
   12b1d:	callq  10ac0 <png_create_colormap_entry>
   12b22:	movb   $0x0,-0x128(%rbp)
   12b29:	mov    %r12w,-0x122(%rbp)
   12b31:	mov    %r12w,-0x124(%rbp)
   12b39:	mov    %r12w,-0x126(%rbp)
   12b41:	mov    %r12w,-0x120(%rbp)
   12b49:	lea    -0x128(%rbp),%rsi
   12b50:	xor    %r12d,%r12d
   12b53:	mov    %r12,%r8
   12b56:	mov    %r14,%rdi
   12b59:	mov    $0x1,%r15d
   12b5f:	mov    %r15,%rdx
   12b62:	mov    %r12,%rcx
   12b65:	callq  5320 <png_set_background_fixed@plt>
   12b6a:	mov    %r15,%rsi
   12b6d:	mov    -0x8(%rbp),%r11
   12b71:	mov    -0x50(%rbp),%r15
   12b75:	mov    $0x100,%r10d
   12b7b:	mov    %rsi,%rdx
   12b7e:	mov    %r12,%rax
   12b81:	mov    %rax,%rcx
   12b84:	jmpq   11a8b <png_image_read_colormap+0x51b>
   12b89:	lea    0x1ada4(%rip),%rsi        # 2d934 <png_pass_yinc.24+0x3d>
   12b90:	movslq (%rsi,%rcx,4),%rax
   12b94:	add    %rsi,%rax
   12b97:	jmpq   *%rax
   12b99:	cmp    $0xd8,%r10d
   12ba0:	je     12d1b <png_image_read_colormap+0x17ab>
   12ba6:	mov    %r14,%rdi
   12ba9:	lea    0x1b524(%rip),%rsi        # 2e0d4 <chunks_to_process.34+0x2cf>
   12bb0:	callq  5470 <png_error@plt>
   12bb5:	mov    %r12,%r14
   12bb8:	jmpq   12965 <png_image_read_colormap+0x13f5>
   12bbd:	mov    %rbx,%rdi
   12bc0:	mov    %r15,%r9
   12bc3:	mov    %r13,-0xa0(%rbp)
   12bca:	mov    %rcx,%r12
   12bcd:	mov    %r10,%rcx
   12bd0:	mov    %rsi,%r13
   12bd3:	mov    %rax,%rsi
   12bd6:	callq  109f0 <png_colormap_compose>
   12bdb:	mov    %rbx,%rdi
   12bde:	mov    %r13,%rsi
   12be1:	mov    $0x1,%edx
   12be6:	mov    $0x80,%ecx
   12beb:	mov    %r12,%r8
   12bee:	mov    %rax,%r12
   12bf1:	mov    %r15,%r9
   12bf4:	callq  109f0 <png_colormap_compose>
   12bf9:	mov    %rax,%r13
   12bfc:	mov    %rbx,%rdi
   12bff:	mov    %r14,%rsi
   12c02:	mov    $0x1,%edx
   12c07:	mov    $0x80,%ecx
   12c0c:	mov    -0xd0(%rbp),%r8
   12c13:	mov    %r15,%r9
   12c16:	callq  109f0 <png_colormap_compose>
   12c1b:	mov    %r13,%rcx
   12c1e:	mov    %r12,%rdx
   12c21:	mov    %rax,%r8
   12c24:	mov    %r15d,(%rsp)
   12c28:	mov    %rbx,%rdi
   12c2b:	mov    -0xa0(%rbp),%r13
   12c32:	mov    %r13,%rsi
   12c35:	xor    %r12d,%r12d
   12c38:	mov    %r12,%r9
   12c3b:	callq  10ac0 <png_create_colormap_entry>
   12c40:	add    %r14d,%r14d
   12c43:	or     $0x7f,%r14d
   12c47:	add    $0x1,%r13d
   12c4b:	mov    -0x100(%rbp),%rsi
   12c52:	mov    -0xb8(%rbp),%rax
   12c59:	mov    $0x80,%r10d
   12c5f:	mov    -0xd8(%rbp),%rcx
   12c66:	mov    -0xe0(%rbp),%r8
   12c6d:	mov    $0x1,%edx
   12c72:	cmp    $0xff,%r14d
   12c79:	jbe    12bbd <png_image_read_colormap+0x164d>
   12c7f:	add    %esi,%esi
   12c81:	or     $0x7f,%esi
   12c84:	mov    %rsi,-0x100(%rbp)
   12c8b:	cmp    $0xff,%esi
   12c91:	jbe    12d36 <png_image_read_colormap+0x17c6>
   12c97:	add    %eax,%eax
   12c99:	or     $0x7f,%eax
   12c9c:	mov    %rax,-0xb8(%rbp)
   12ca3:	cmp    $0xff,%eax
   12ca8:	jbe    12d3e <png_image_read_colormap+0x17ce>
   12cae:	mov    %rbx,-0x58(%rbp)
   12cb2:	mov    -0xc0(%rbp),%r10
   12cb9:	mov    $0x4,%ecx
   12cbe:	mov    -0x40(%rbp),%r11
   12cc2:	mov    -0x68(%rbp),%r15
   12cc6:	mov    -0xa8(%rbp),%r14
   12ccd:	mov    %rdx,%rax
   12cd0:	mov    %rax,%rsi
   12cd3:	jmpq   11a8b <png_image_read_colormap+0x51b>
   12cd8:	cmp    $0x100,%r10d
   12cdf:	jne    12ba6 <png_image_read_colormap+0x1636>
   12ce5:	jmp    12d1b <png_image_read_colormap+0x17ab>
   12ce7:	cmp    $0xe7,%r10d
   12cee:	jne    12ba6 <png_image_read_colormap+0x1636>
   12cf4:	jmp    12d1b <png_image_read_colormap+0x17ab>
   12cf6:	cmp    %r10d,%r13d
   12cf9:	jbe    12ba6 <png_image_read_colormap+0x1636>
   12cff:	cmp    $0xfe,%r10d
   12d06:	jne    12ba6 <png_image_read_colormap+0x1636>
   12d0c:	jmp    12d1b <png_image_read_colormap+0x17ab>
   12d0e:	cmp    $0x100,%r10d
   12d15:	jne    12ba6 <png_image_read_colormap+0x1636>
   12d1b:	mov    %ecx,0x48(%rbx)
   12d1e:	mov    %rdx,%rax
   12d21:	mov    %r11,%rbx
   12d24:	mov    -0x38(%rbp),%r15
   12d28:	mov    -0x30(%rbp),%r14
   12d2c:	mov    -0x20(%rbp),%r12
   12d30:	mov    -0x28(%rbp),%r13
   12d34:	leaveq 
   12d35:	retq   
   12d36:	mov    %r12,%r14
   12d39:	jmpq   12c72 <png_image_read_colormap+0x1702>
   12d3e:	mov    %r12,%rsi
   12d41:	jmpq   12c84 <png_image_read_colormap+0x1714>
   12d46:	nopw   %cs:0x0(%rax,%rax,1)

0000000000012d50 <png_image_read_and_map>:
   12d50:	push   %rbp
   12d51:	mov    %rsp,%rbp
   12d54:	sub    $0xa0,%rsp
   12d5b:	mov    %rdi,-0x90(%rbp)
   12d62:	mov    $0x1,%eax
   12d67:	mov    $0x7,%r11d
   12d6d:	mov    (%rdi),%r8
   12d70:	mov    (%r8),%rcx
   12d73:	mov    (%rcx),%rcx
   12d76:	mov    %rcx,-0x88(%rbp)
   12d7d:	movzbl 0x264(%rcx),%edx
   12d84:	test   %dl,%dl
   12d86:	jne    12de8 <png_image_read_and_map+0x98>
   12d88:	mov    %rax,%r10
   12d8b:	mov    %r10,-0x30(%rbp)
   12d8f:	mov    0x10(%r8),%esi
   12d93:	mov    %rsi,-0x98(%rbp)
   12d9a:	mov    0xc(%r8),%r9d
   12d9e:	mov    %r9,-0x80(%rbp)
   12da2:	mov    0x30(%rdi),%rdx
   12da6:	mov    %rdx,-0x78(%rbp)
   12daa:	mov    0x38(%rdi),%r8
   12dae:	mov    %r15,-0x28(%rbp)
   12db2:	mov    %r8,-0x58(%rbp)
   12db6:	movslq 0x48(%rdi),%r15
   12dba:	mov    %r14,-0x20(%rbp)
   12dbe:	mov    %r15,-0x68(%rbp)
   12dc2:	xor    %r14d,%r14d
   12dc5:	mov    %r13,-0x18(%rbp)
   12dc9:	mov    %r12,-0x10(%rbp)
   12dcd:	mov    %rbx,-0x8(%rbp)
   12dd1:	mov    %r8,%rbx
   12dd4:	mov    %rdx,%r12
   12dd7:	mov    %rdi,%rdx
   12dda:	mov    %rcx,%rdi
   12ddd:	mov    %r14,%r13
   12de0:	mov    %r10,%r14
   12de3:	mov    %r13,%r10
   12de6:	jmp    12e56 <png_image_read_and_map+0x106>
   12de8:	cmp    $0x1,%dl
   12deb:	jne    12e75 <png_image_read_and_map+0x125>
   12df1:	mov    %r11,%r10
   12df4:	jmp    12d8b <png_image_read_and_map+0x3b>
   12df6:	lea    (%rdi,%rdi,2),%ecx
   12df9:	lea    (%rdi,%rcx,2),%ecx
   12dfc:	shl    $0x5,%ecx
   12dff:	lea    (%rcx,%rdi,8),%ecx
   12e02:	sub    %edi,%ecx
   12e04:	add    $0x80,%ecx
   12e0a:	shr    $0x8,%ecx
   12e0d:	mov    %cl,(%rax)
   12e0f:	add    %r11,%rax
   12e12:	add    $0x2,%rdx
   12e16:	cmp    %rax,%r10
   12e19:	ja     12e84 <png_image_read_and_map+0x134>
   12e1b:	mov    -0x50(%rbp),%r14
   12e1f:	mov    -0x70(%rbp),%rax
   12e23:	add    %eax,%r13d
   12e26:	mov    -0x90(%rbp),%rdx
   12e2d:	mov    -0x98(%rbp),%rsi
   12e34:	mov    -0x88(%rbp),%rdi
   12e3b:	xor    %r10d,%r10d
   12e3e:	cmp    %esi,%r13d
   12e41:	jb     12ea3 <png_image_read_and_map+0x153>
   12e43:	mov    -0x38(%rbp),%r13
   12e47:	mov    -0x30(%rbp),%r14
   12e4b:	mov    $0x1,%eax
   12e50:	mov    $0x7,%r11d
   12e56:	cmp    %r13d,%r14d
   12e59:	jg     12ef0 <png_image_read_and_map+0x1a0>
   12e5f:	mov    -0x8(%rbp),%rbx
   12e63:	mov    -0x10(%rbp),%r12
   12e67:	mov    -0x18(%rbp),%r13
   12e6b:	mov    -0x20(%rbp),%r14
   12e6f:	mov    -0x28(%rbp),%r15
   12e73:	leaveq 
   12e74:	retq   
   12e75:	mov    %rcx,%rdi
   12e78:	lea    0x1b27b(%rip),%rsi        # 2e0fa <chunks_to_process.34+0x2f5>
   12e7f:	callq  5470 <png_error@plt>
   12e84:	movzbl (%rdx),%edi
   12e87:	movzbl 0x1(%rdx),%esi
   12e8b:	cmp    $0xe5,%sil
   12e8f:	ja     12df6 <png_image_read_and_map+0xa6>
   12e95:	cmp    $0x19,%sil
   12e99:	ja     12f16 <png_image_read_and_map+0x1c6>
   12e9b:	mov    %r14,%rcx
   12e9e:	jmpq   12e0d <png_image_read_and_map+0xbd>
   12ea3:	mov    0x28(%rdx),%rsi
   12ea7:	mov    %rsi,-0x40(%rbp)
   12eab:	xor    %edx,%edx
   12ead:	mov    %r8,-0x48(%rbp)
   12eb1:	mov    %rax,-0x70(%rbp)
   12eb5:	callq  5600 <png_read_row@plt>
   12eba:	mov    %r14d,%r11d
   12ebd:	mov    %r13d,%eax
   12ec0:	imul   %rbx,%rax
   12ec4:	cmp    $0x2,%r15d
   12ec8:	lea    (%rax,%r12,1),%rcx
   12ecc:	mov    -0x48(%rbp),%r8
   12ed0:	mov    %r8d,%eax
   12ed3:	lea    (%rcx,%rax,1),%rax
   12ed7:	mov    -0x80(%rbp),%r9
   12edb:	lea    (%rcx,%r9,1),%r10
   12edf:	jle    12f39 <png_image_read_and_map+0x1e9>
   12ee1:	cmp    $0x3,%r15d
   12ee5:	jne    12f56 <png_image_read_and_map+0x206>
   12ee7:	mov    -0x40(%rbp),%rcx
   12eeb:	jmpq   12fc5 <png_image_read_and_map+0x275>
   12ef0:	lea    0x1(%r13),%r8d
   12ef4:	movzbl 0x264(%rdi),%ecx
   12efb:	cmp    $0x1,%cl
   12efe:	je     12fcf <png_image_read_and_map+0x27f>
   12f04:	mov    %r8,-0x38(%rbp)
   12f08:	mov    %rax,%r14
   12f0b:	mov    %r10,%r8
   12f0e:	mov    %r8,%r13
   12f11:	jmpq   12e3e <png_image_read_and_map+0xee>
   12f16:	lea    0x82(%rdi,%rdi,4),%ecx
   12f1d:	shr    $0x8,%ecx
   12f20:	lea    0x82(%rsi,%rsi,4),%esi
   12f27:	shr    $0x8,%esi
   12f2a:	lea    (%rsi,%rsi,2),%esi
   12f2d:	lea    0xe2(%rcx,%rsi,2),%ecx
   12f34:	jmpq   12e0d <png_image_read_and_map+0xbd>
   12f39:	cmp    $0x1,%r15d
   12f3d:	jne    12fe3 <png_image_read_and_map+0x293>
   12f43:	mov    %r14,-0x50(%rbp)
   12f47:	mov    -0x40(%rbp),%rdx
   12f4b:	mov    $0xe7,%r14d
   12f51:	jmpq   12e16 <png_image_read_and_map+0xc6>
   12f56:	cmp    $0x4,%r15d
   12f5a:	jne    12e1f <png_image_read_and_map+0xcf>
   12f60:	mov    %r14,-0x50(%rbp)
   12f64:	mov    %r13,-0x60(%rbp)
   12f68:	mov    $0xd9,%edi
   12f6d:	mov    -0x40(%rbp),%rdx
   12f71:	mov    $0xe2,%r8d
   12f77:	mov    $0xeb,%r14d
   12f7d:	mov    $0xd8,%ebx
   12f82:	jmpq   13042 <png_image_read_and_map+0x2f2>
   12f87:	movzbl 0x1(%rcx),%edx
   12f8b:	lea    0x82(%rdx,%rdx,4),%edx
   12f92:	shr    $0x8,%edx
   12f95:	movzbl (%rcx),%esi
   12f98:	lea    0x82(%rsi,%rsi,4),%esi
   12f9f:	shr    $0x8,%esi
   12fa2:	lea    (%rsi,%rsi,2),%esi
   12fa5:	lea    (%rdx,%rsi,2),%edx
   12fa8:	lea    (%rdx,%rdx,2),%esi
   12fab:	movzbl 0x2(%rcx),%edx
   12faf:	lea    0x82(%rdx,%rdx,4),%edx
   12fb6:	shr    $0x8,%edx
   12fb9:	lea    (%rdx,%rsi,2),%edx
   12fbc:	mov    %dl,(%rax)
   12fbe:	add    $0x3,%rcx
   12fc2:	add    %r11,%rax
   12fc5:	cmp    %rax,%r10
   12fc8:	ja     12f87 <png_image_read_and_map+0x237>
   12fca:	jmpq   12e1f <png_image_read_and_map+0xcf>
   12fcf:	cmp    $0x1,%r13d
   12fd3:	jg     13064 <png_image_read_and_map+0x314>
   12fd9:	mov    $0x3,%ecx
   12fde:	jmpq   1306f <png_image_read_and_map+0x31f>
   12fe3:	cmp    $0x2,%r15d
   12fe7:	jne    12e1f <png_image_read_and_map+0xcf>
   12fed:	mov    %r14,-0x60(%rbp)
   12ff1:	mov    -0x40(%rbp),%rcx
   12ff5:	mov    $0xff,%edi
   12ffa:	mov    $0xfe,%esi
   12fff:	jmpq   13099 <png_image_read_and_map+0x349>
   13004:	movzbl 0x1(%rdx),%ecx
   13008:	lea    0x82(%rcx,%rcx,4),%ecx
   1300f:	shr    $0x8,%ecx
   13012:	movzbl (%rdx),%esi
   13015:	lea    0x82(%rsi,%rsi,4),%esi
   1301c:	shr    $0x8,%esi
   1301f:	lea    (%rsi,%rsi,2),%esi
   13022:	lea    (%rcx,%rsi,2),%ecx
   13025:	lea    (%rcx,%rcx,2),%esi
   13028:	movzbl 0x2(%rdx),%ecx
   1302c:	lea    0x82(%rcx,%rcx,4),%ecx
   13033:	shr    $0x8,%ecx
   13036:	lea    (%rcx,%rsi,2),%ecx
   13039:	mov    %cl,(%rax)
   1303b:	add    %r11,%rax
   1303e:	add    $0x4,%rdx
   13042:	cmp    %r10,%rax
   13045:	jb     130ab <png_image_read_and_map+0x35b>
   13047:	mov    -0x68(%rbp),%r15
   1304b:	mov    -0x58(%rbp),%rbx
   1304f:	mov    -0x60(%rbp),%r13
   13053:	mov    -0x50(%rbp),%r14
   13057:	mov    -0x78(%rbp),%r12
   1305b:	mov    -0x48(%rbp),%r8
   1305f:	jmpq   12e1f <png_image_read_and_map+0xcf>
   13064:	mov    %r11,%rcx
   13067:	sub    %r13d,%ecx
   1306a:	sar    %ecx
   1306c:	mov    %rax,%r10
   1306f:	test   %r10,%r10
   13072:	jne    130c5 <png_image_read_and_map+0x375>
   13074:	mov    $0x3,%r11d
   1307a:	jmp    130cb <png_image_read_and_map+0x37b>
   1307c:	movzbl (%rcx),%edx
   1307f:	movzbl 0x1(%rcx),%r8d
   13084:	test   %r8b,%r8b
   13087:	jne    1311d <png_image_read_and_map+0x3cd>
   1308d:	mov    %rsi,%rdx
   13090:	mov    %dl,(%rax)
   13092:	add    %r11,%rax
   13095:	add    $0x2,%rcx
   13099:	cmp    %rax,%r10
   1309c:	ja     1307c <png_image_read_and_map+0x32c>
   1309e:	mov    -0x60(%rbp),%r14
   130a2:	mov    -0x48(%rbp),%r8
   130a6:	jmpq   12e1f <png_image_read_and_map+0xcf>
   130ab:	movzbl 0x3(%rdx),%ecx
   130af:	cmp    $0xc3,%cl
   130b2:	ja     13004 <png_image_read_and_map+0x2b4>
   130b8:	cmp    $0x3f,%cl
   130bb:	ja     1312e <png_image_read_and_map+0x3de>
   130bd:	mov    %rbx,%rcx
   130c0:	jmpq   13039 <png_image_read_and_map+0x2e9>
   130c5:	sub    %r13d,%r11d
   130c8:	sar    %r11d
   130cb:	mov    %r8,%r10
   130ce:	shl    %cl,%eax
   130d0:	add    $0xffffffff,%eax
   130d3:	mov    %r10,%rcx
   130d6:	sar    %ecx
   130d8:	mov    $0x3,%r12d
   130de:	neg    %ecx
   130e0:	add    %r12d,%ecx
   130e3:	mov    %r13,%r8
   130e6:	and    $0x1,%r8d
   130ea:	shl    %cl,%r8d
   130ed:	and    $0x7,%r8d
   130f1:	sub    %r8d,%eax
   130f4:	add    %r9d,%eax
   130f7:	mov    %r11,%rcx
   130fa:	mov    %r13,%r11
   130fd:	mov    %r10,%r13
   13100:	shr    %cl,%eax
   13102:	test   %eax,%eax
   13104:	jne    13148 <png_image_read_and_map+0x3f8>
   13106:	mov    -0x78(%rbp),%r12
   1310a:	mov    $0x1,%eax
   1310f:	xor    %r10d,%r10d
   13112:	mov    $0x7,%r11d
   13118:	jmpq   12e56 <png_image_read_and_map+0x106>
   1311d:	cmp    $0xfe,%dl
   13120:	jne    13090 <png_image_read_and_map+0x340>
   13126:	mov    %rdi,%rdx
   13129:	jmpq   13090 <png_image_read_and_map+0x340>
   1312e:	movzbl (%rdx),%esi
   13131:	mov    %rsi,%r13
   13134:	and    $0x80,%r13d
   1313b:	test   %r13d,%r13d
   1313e:	jg     13158 <png_image_read_and_map+0x408>
   13140:	mov    %rdi,%rcx
   13143:	mov    %r8,%r12
   13146:	jmp    1315e <png_image_read_and_map+0x40e>
   13148:	cmp    $0x2,%r11d
   1314c:	jg     1318b <png_image_read_and_map+0x43b>
   1314e:	mov    %r13,%r10
   13151:	mov    $0x8,%eax
   13156:	jmp    1319b <png_image_read_and_map+0x44b>
   13158:	mov    %r8,%rcx
   1315b:	mov    %r14,%r12
   1315e:	and    $0x40,%esi
   13161:	test   %esi,%esi
   13163:	jle    13168 <png_image_read_and_map+0x418>
   13165:	mov    %r12,%rcx
   13168:	test   %r13d,%r13d
   1316b:	jle    13170 <png_image_read_and_map+0x420>
   1316d:	add    $0x3,%ecx
   13170:	test   %esi,%esi
   13172:	jle    13177 <png_image_read_and_map+0x427>
   13174:	add    $0x3,%ecx
   13177:	test   %r13d,%r13d
   1317a:	jle    1317f <png_image_read_and_map+0x42f>
   1317c:	add    $0x1,%ecx
   1317f:	test   %esi,%esi
   13181:	jle    13186 <png_image_read_and_map+0x436>
   13183:	add    $0x1,%ecx
   13186:	jmpq   13039 <png_image_read_and_map+0x2e9>
   1318b:	lea    -0x1(%r11),%ecx
   1318f:	sar    %ecx
   13191:	mov    %r13,%r10
   13194:	mov    $0x8,%eax
   13199:	shr    %cl,%eax
   1319b:	mov    %r11,%rcx
   1319e:	sar    %ecx
   131a0:	sub    %ecx,%r12d
   131a3:	mov    %r11,%r13
   131a6:	not    %r13d
   131a9:	and    $0x1,%r13d
   131ad:	mov    %r12,%rcx
   131b0:	shl    %cl,%r13d
   131b3:	and    $0x7,%r13d
   131b7:	mov    $0x7,%ecx
   131bc:	sub    %r11d,%ecx
   131bf:	sar    %ecx
   131c1:	mov    $0x1,%r14d
   131c7:	shl    %cl,%r14d
   131ca:	mov    %r10,-0x38(%rbp)
   131ce:	mov    -0x78(%rbp),%r12
   131d2:	xor    %r10d,%r10d
   131d5:	jmpq   12e3e <png_image_read_and_map+0xee>
   131da:	nopw   0x0(%rax,%rax,1)

00000000000131e0 <png_image_read_colormapped>:
   131e0:	push   %rbp
   131e1:	mov    %rsp,%rbp
   131e4:	sub    $0x40,%rsp
   131e8:	mov    %r12,-0x10(%rbp)
   131ec:	mov    %r13,-0x18(%rbp)
   131f0:	mov    %r14,-0x20(%rbp)
   131f4:	mov    %r15,-0x28(%rbp)
   131f8:	mov    %rbx,-0x8(%rbp)
   131fc:	mov    (%rdi),%r14
   131ff:	mov    (%r14),%rax
   13202:	mov    0x8(%rax),%r13
   13206:	mov    (%rax),%rbx
   13209:	mov    %rdi,%r12
   1320c:	mov    %rbx,%rdi
   1320f:	callq  10880 <png_image_skip_unused_chunks>
   13214:	xor    %r15d,%r15d
   13217:	movslq 0x48(%r12),%rax
   1321c:	test   %eax,%eax
   1321e:	jne    1322b <png_image_read_colormapped+0x4b>
   13220:	mov    %rbx,%rdi
   13223:	callq  53f0 <png_set_interlace_handling@plt>
   13228:	mov    %rax,%r15
   1322b:	mov    %rbx,%rdi
   1322e:	mov    %r13,%rsi
   13231:	callq  5080 <png_read_update_info@plt>
   13236:	mov    0x48(%r12),%eax
   1323b:	cmp    $0x4,%eax
   1323e:	ja     1328e <png_image_read_colormapped+0xae>
   13240:	lea    0x1a701(%rip),%rcx        # 2d948 <png_pass_yinc.24+0x51>
   13247:	movslq (%rcx,%rax,4),%rax
   1324b:	add    %rcx,%rax
   1324e:	jmpq   *%rax
   13250:	movzbl 0x25(%r13),%eax
   13255:	cmp    $0x6,%al
   13257:	jne    1328e <png_image_read_colormapped+0xae>
   13259:	movzbl 0x24(%r13),%eax
   1325e:	cmp    $0x8,%al
   13260:	jne    1328e <png_image_read_colormapped+0xae>
   13262:	movslq 0x2a4(%rbx),%rax
   13269:	cmp    $0x35b60,%eax
   1326e:	jne    1328e <png_image_read_colormapped+0xae>
   13270:	mov    0x1c(%r14),%eax
   13274:	cmp    $0xf4,%eax
   13279:	je     13300 <png_image_read_colormapped+0x120>
   1327f:	jmp    1328e <png_image_read_colormapped+0xae>
   13281:	movzbl 0x25(%r13),%eax
   13286:	cmp    $0x3,%al
   13288:	je     132f7 <png_image_read_colormapped+0x117>
   1328a:	test   %al,%al
   1328c:	je     132f7 <png_image_read_colormapped+0x117>
   1328e:	mov    %rbx,%rdi
   13291:	lea    0x1ae79(%rip),%rsi        # 2e111 <chunks_to_process.34+0x30c>
   13298:	callq  5470 <png_error@plt>
   1329d:	movzbl 0x25(%r13),%eax
   132a2:	cmp    $0x4,%al
   132a4:	jne    1328e <png_image_read_colormapped+0xae>
   132a6:	movzbl 0x24(%r13),%eax
   132ab:	cmp    $0x8,%al
   132ad:	jne    1328e <png_image_read_colormapped+0xae>
   132af:	movslq 0x2a4(%rbx),%rax
   132b6:	cmp    $0x35b60,%eax
   132bb:	jne    1328e <png_image_read_colormapped+0xae>
   132bd:	mov    0x1c(%r14),%eax
   132c1:	cmp    $0x100,%eax
   132c6:	je     13300 <png_image_read_colormapped+0x120>
   132c8:	jmp    1328e <png_image_read_colormapped+0xae>
   132ca:	movzbl 0x25(%r13),%eax
   132cf:	cmp    $0x2,%al
   132d1:	jne    1328e <png_image_read_colormapped+0xae>
   132d3:	movzbl 0x24(%r13),%eax
   132d8:	cmp    $0x8,%al
   132da:	jne    1328e <png_image_read_colormapped+0xae>
   132dc:	movslq 0x2a4(%rbx),%rax
   132e3:	cmp    $0x35b60,%eax
   132e8:	jne    1328e <png_image_read_colormapped+0xae>
   132ea:	mov    0x1c(%r14),%eax
   132ee:	cmp    $0xd8,%eax
   132f3:	je     13300 <png_image_read_colormapped+0x120>
   132f5:	jmp    1328e <png_image_read_colormapped+0xae>
   132f7:	movzbl 0x24(%r13),%eax
   132fc:	cmp    $0x8,%al
   132fe:	jne    1328e <png_image_read_colormapped+0xae>
   13300:	mov    0x8(%r12),%rax
   13305:	movslq 0x10(%r12),%rsi
   1330a:	test   %esi,%esi
   1330c:	jns    13324 <png_image_read_colormapped+0x144>
   1330e:	mov    %rsi,%rcx
   13311:	neg    %rcx
   13314:	mov    0x10(%r14),%edx
   13318:	add    $0xffffffff,%edx
   1331b:	mov    %edx,%edx
   1331d:	imul   %rdx,%rcx
   13321:	add    %rcx,%rax
   13324:	mov    %rax,0x30(%r12)
   13329:	mov    %rsi,0x38(%r12)
   1332e:	test   %r15d,%r15d
   13331:	je     13344 <png_image_read_colormapped+0x164>
   13333:	mov    %r12,%rax
   13336:	mov    %rsi,%r12
   13339:	mov    %r14,%rcx
   1333c:	xor    %r13d,%r13d
   1333f:	jmpq   133ca <png_image_read_colormapped+0x1ea>
   13344:	mov    %r13,%rsi
   13347:	mov    %rbx,%rdi
   1334a:	callq  50c0 <png_get_rowbytes@plt>
   1334f:	mov    %rax,%rsi
   13352:	mov    %rbx,%rdi
   13355:	callq  5800 <png_malloc@plt>
   1335a:	mov    %r14,%rdi
   1335d:	mov    %rax,%r13
   13360:	mov    %r13,0x28(%r12)
   13365:	lea    -0x61c(%rip),%rsi        # 12d50 <png_image_read_and_map>
   1336c:	mov    %r12,%rdx
   1336f:	callq  b250 <png_safe_execute>
   13374:	movq   $0x0,0x28(%r12)
   1337d:	mov    %r13,%rsi
   13380:	mov    %rax,%r13
   13383:	mov    %rbx,%rdi
   13386:	callq  5790 <png_free@plt>
   1338b:	mov    %r13,%rax
   1338e:	mov    -0x8(%rbp),%rbx
   13392:	mov    -0x28(%rbp),%r15
   13396:	mov    -0x20(%rbp),%r14
   1339a:	mov    -0x18(%rbp),%r13
   1339e:	mov    -0x10(%rbp),%r12
   133a2:	leaveq 
   133a3:	retq   
   133a4:	mov    %rbx,%rdi
   133a7:	mov    %r14,%rsi
   133aa:	mov    %r13,%rdx
   133ad:	callq  5600 <png_read_row@plt>
   133b2:	add    %r12,%r14
   133b5:	add    $0xffffffff,%r15d
   133b9:	test   %r15d,%r15d
   133bc:	jne    133a4 <png_image_read_colormapped+0x1c4>
   133be:	mov    -0x38(%rbp),%rax
   133c2:	mov    -0x30(%rbp),%rcx
   133c6:	mov    -0x40(%rbp),%r15
   133ca:	lea    -0x1(%r15),%edx
   133ce:	test   %edx,%edx
   133d0:	jns    133ed <png_image_read_colormapped+0x20d>
   133d2:	mov    $0x1,%eax
   133d7:	mov    -0x8(%rbp),%rbx
   133db:	mov    -0x28(%rbp),%r15
   133df:	mov    -0x20(%rbp),%r14
   133e3:	mov    -0x18(%rbp),%r13
   133e7:	mov    -0x10(%rbp),%r12
   133eb:	leaveq 
   133ec:	retq   
   133ed:	mov    0x10(%rcx),%r15d
   133f1:	mov    0x30(%rax),%r14
   133f5:	mov    %rdx,-0x40(%rbp)
   133f9:	mov    %rcx,-0x30(%rbp)
   133fd:	mov    %rax,-0x38(%rbp)
   13401:	jmp    133b9 <png_image_read_colormapped+0x1d9>
   13403:	data16 nopw %cs:0x0(%rax,%rax,1)
   1340e:	xchg   %ax,%ax

0000000000013410 <png_image_read_composite>:
   13410:	push   %rbp
   13411:	mov    %rsp,%rbp
   13414:	sub    $0xe0,%rsp
   1341b:	mov    %rdi,-0xc8(%rbp)
   13422:	mov    $0x1,%r10d
   13428:	mov    %r10,-0x78(%rbp)
   1342c:	mov    $0x7,%r11d
   13432:	mov    (%rdi),%rcx
   13435:	mov    (%rcx),%rax
   13438:	mov    (%rax),%r9
   1343b:	mov    %r9,-0x88(%rbp)
   13442:	movzbl 0x264(%r9),%eax
   1344a:	test   %al,%al
   1344c:	jne    134e2 <png_image_read_composite+0xd2>
   13452:	mov    %r10,%r11
   13455:	mov    %r11,-0x48(%rbp)
   13459:	mov    0x10(%rcx),%r8d
   1345d:	mov    %r8,-0xd8(%rbp)
   13464:	mov    0xc(%rcx),%eax
   13467:	mov    %rax,-0x90(%rbp)
   1346e:	mov    0x38(%rdi),%rsi
   13472:	mov    %r15,-0x28(%rbp)
   13476:	mov    %rsi,-0x68(%rbp)
   1347a:	lea    0x18d0b(%rip),%rdx        # 2c18c <png_sRGB_table>
   13481:	mov    %r14,-0x20(%rbp)
   13485:	mov    %rdx,-0x60(%rbp)
   13489:	lea    0x18efc(%rip),%rdx        # 2c38c <png_sRGB_base>
   13490:	mov    %r13,-0x18(%rbp)
   13494:	mov    %rdx,-0x58(%rbp)
   13498:	lea    0x192ed(%rip),%rdx        # 2c78c <png_sRGB_delta>
   1349f:	mov    %r12,-0x10(%rbp)
   134a3:	mov    %rdx,-0xb0(%rbp)
   134aa:	mov    %rbx,-0x8(%rbp)
   134ae:	xor    %edx,%edx
   134b0:	mov    $0x3,%ebx
   134b5:	mov    0x14(%rcx),%ecx
   134b8:	and    $0x2,%ecx
   134bb:	test   %ecx,%ecx
   134bd:	jne    134f9 <png_image_read_composite+0xe9>
   134bf:	mov    $0x2,%ecx
   134c4:	mov    %rcx,-0xd0(%rbp)
   134cb:	mov    %rsi,%rbx
   134ce:	mov    %rdi,%r12
   134d1:	mov    %r9,%rdi
   134d4:	mov    %rdx,%r9
   134d7:	mov    %r10,%rsi
   134da:	mov    %rsi,%r13
   134dd:	jmpq   135ef <png_image_read_composite+0x1df>
   134e2:	cmp    $0x1,%al
   134e4:	je     13455 <png_image_read_composite+0x45>
   134ea:	mov    %r9,%rdi
   134ed:	lea    0x1ac06(%rip),%rsi        # 2e0fa <chunks_to_process.34+0x2f5>
   134f4:	callq  5470 <png_error@plt>
   134f9:	mov    $0x4,%ecx
   134fe:	mov    %rcx,-0xd0(%rbp)
   13505:	mov    %rdi,%r12
   13508:	mov    %r9,%rdi
   1350b:	mov    %r10,%r13
   1350e:	mov    %rbx,%r10
   13511:	mov    %rsi,%rbx
   13514:	mov    %rdx,%r9
   13517:	mov    %r10,%rsi
   1351a:	jmpq   135ef <png_image_read_composite+0x1df>
   1351f:	cmp    $0xfe,%r11b
   13523:	mov    %edx,%r8d
   13526:	movzbl (%rbx,%r8,1),%eax
   1352b:	ja     13567 <png_image_read_composite+0x157>
   1352d:	movzbl (%r9,%r8,1),%esi
   13532:	movzwl (%r14,%rsi,2),%edi
   13537:	imul   %ecx,%edi
   1353a:	mov    %rax,%rsi
   1353d:	shl    $0x10,%esi
   13540:	sub    %eax,%esi
   13542:	add    %edi,%esi
   13544:	mov    %rsi,%rax
   13547:	shr    $0xf,%eax
   1354a:	mov    %eax,%edi
   1354c:	movzbl (%rdi,%r13,1),%eax
   13551:	and    $0x7fff,%esi
   13557:	imul   %esi,%eax
   1355a:	shr    $0xc,%eax
   1355d:	movzwl (%r12,%rdi,2),%esi
   13562:	add    %esi,%eax
   13564:	shr    $0x8,%eax
   13567:	mov    %al,(%r9,%r8,1)
   1356b:	add    $0x1,%edx
   1356e:	cmp    %r10d,%edx
   13571:	jb     1351f <png_image_read_composite+0x10f>
   13573:	mov    -0x30(%rbp),%rax
   13577:	mov    -0xa0(%rbp),%r8
   1357e:	mov    -0xb8(%rbp),%rsi
   13585:	xor    %edx,%edx
   13587:	mov    -0xd0(%rbp),%rdi
   1358e:	mov    $0xff,%ecx
   13593:	add    %r8,%r9
   13596:	add    %rdi,%rbx
   13599:	cmp    %rax,%r9
   1359c:	jb     1361c <png_image_read_composite+0x20c>
   1359e:	mov    -0x70(%rbp),%rcx
   135a2:	mov    -0x80(%rbp),%rax
   135a6:	lea    (%rcx,%rax,1),%r13d
   135aa:	mov    -0xa8(%rbp),%r15
   135b1:	mov    -0xc8(%rbp),%r12
   135b8:	mov    -0x38(%rbp),%r14
   135bc:	mov    -0x68(%rbp),%rbx
   135c0:	mov    -0x98(%rbp),%rax
   135c7:	mov    -0x88(%rbp),%rdi
   135ce:	mov    -0xd8(%rbp),%r8
   135d5:	cmp    %r8d,%r13d
   135d8:	jb     13632 <png_image_read_composite+0x222>
   135da:	mov    -0x90(%rbp),%rax
   135e1:	mov    -0x50(%rbp),%r9
   135e5:	mov    -0x48(%rbp),%r11
   135e9:	mov    $0x1,%r13d
   135ef:	mov    %rsi,-0xb8(%rbp)
   135f6:	mov    %r10,-0x40(%rbp)
   135fa:	cmp    %r9d,%r11d
   135fd:	jg     136bb <png_image_read_composite+0x2ab>
   13603:	mov    %r13,%rax
   13606:	mov    -0x8(%rbp),%rbx
   1360a:	mov    -0x10(%rbp),%r12
   1360e:	mov    -0x18(%rbp),%r13
   13612:	mov    -0x20(%rbp),%r14
   13616:	mov    -0x28(%rbp),%r15
   1361a:	leaveq 
   1361b:	retq   
   1361c:	movzbl (%rsi,%rbx,1),%r11d
   13621:	test   %r11b,%r11b
   13624:	je     13593 <png_image_read_composite+0x183>
   1362a:	sub    %r11d,%ecx
   1362d:	jmpq   1356e <png_image_read_composite+0x15e>
   13632:	mov    0x28(%r12),%rsi
   13637:	mov    %rsi,-0xc0(%rbp)
   1363e:	mov    %rax,-0x98(%rbp)
   13645:	callq  5600 <png_read_row@plt>
   1364a:	mov    %r15d,%r8d
   1364d:	mov    %r8,-0xa0(%rbp)
   13654:	mov    %r13d,%eax
   13657:	imul   %rax,%rbx
   1365b:	mov    0x30(%r12),%rcx
   13660:	lea    (%rcx,%r14,1),%rax
   13664:	add    %rbx,%rax
   13667:	mov    %rax,-0x30(%rbp)
   1366b:	lea    (%rbx,%rcx,1),%rdx
   1366f:	mov    -0x98(%rbp),%rcx
   13676:	mov    %ecx,%ecx
   13678:	lea    (%rdx,%rcx,1),%r9
   1367c:	mov    %r13,-0x70(%rbp)
   13680:	mov    %r15,-0xa8(%rbp)
   13687:	mov    -0xb0(%rbp),%r13
   1368e:	mov    -0x60(%rbp),%r14
   13692:	mov    -0x40(%rbp),%r10
   13696:	mov    -0xb8(%rbp),%rsi
   1369d:	mov    -0xc0(%rbp),%rbx
   136a4:	xor    %edx,%edx
   136a6:	mov    -0xd0(%rbp),%rdi
   136ad:	mov    -0x58(%rbp),%r12
   136b1:	mov    $0xff,%ecx
   136b6:	jmpq   13599 <png_image_read_composite+0x189>
   136bb:	mov    %r10,%rcx
   136be:	imul   %eax,%ecx
   136c1:	mov    %ecx,%r14d
   136c4:	mov    %r14,-0x38(%rbp)
   136c8:	lea    0x1(%r9),%r15d
   136cc:	movzbl 0x264(%rdi),%ecx
   136d3:	cmp    $0x1,%cl
   136d6:	je     136f0 <png_image_read_composite+0x2e0>
   136d8:	mov    %r15,-0x50(%rbp)
   136dc:	mov    %rdx,%rax
   136df:	mov    %rax,%r13
   136e2:	mov    %r10,%r15
   136e5:	pushq  -0x78(%rbp)
   136e8:	popq   -0x80(%rbp)
   136eb:	jmpq   135d5 <png_image_read_composite+0x1c5>
   136f0:	cmp    $0x1,%r9d
   136f4:	jg     13702 <png_image_read_composite+0x2f2>
   136f6:	mov    $0x7,%ebx
   136fb:	mov    $0x3,%ecx
   13700:	jmp    13712 <png_image_read_composite+0x302>
   13702:	mov    $0x7,%ebx
   13707:	mov    %rbx,%rcx
   1370a:	sub    %r9d,%ecx
   1370d:	sar    %ecx
   1370f:	mov    %r13,%rdx
   13712:	test   %rdx,%rdx
   13715:	jne    1371e <png_image_read_composite+0x30e>
   13717:	mov    $0x3,%ebx
   1371c:	jmp    13723 <png_image_read_composite+0x313>
   1371e:	sub    %r9d,%ebx
   13721:	sar    %ebx
   13723:	shl    %cl,%r13d
   13726:	add    $0xffffffff,%r13d
   1372a:	mov    %r15,%rcx
   1372d:	sar    %ecx
   1372f:	mov    $0x3,%r14d
   13735:	neg    %ecx
   13737:	add    %r14d,%ecx
   1373a:	mov    %r9,%rdx
   1373d:	and    $0x1,%edx
   13740:	shl    %cl,%edx
   13742:	and    $0x7,%edx
   13745:	sub    %edx,%r13d
   13748:	add    %eax,%r13d
   1374b:	mov    %rbx,%rcx
   1374e:	shr    %cl,%r13d
   13751:	test   %r13d,%r13d
   13754:	jne    1376a <png_image_read_composite+0x35a>
   13756:	mov    %r15,%r9
   13759:	mov    -0x68(%rbp),%rbx
   1375d:	mov    $0x1,%r13d
   13763:	xor    %edx,%edx
   13765:	jmpq   135ef <png_image_read_composite+0x1df>
   1376a:	cmp    $0x2,%r9d
   1376e:	jg     13777 <png_image_read_composite+0x367>
   13770:	mov    $0x8,%eax
   13775:	jmp    13784 <png_image_read_composite+0x374>
   13777:	lea    -0x1(%r9),%ecx
   1377b:	sar    %ecx
   1377d:	mov    $0x8,%eax
   13782:	shr    %cl,%eax
   13784:	mov    %rax,-0x80(%rbp)
   13788:	mov    %r9,%rax
   1378b:	sar    %eax
   1378d:	sub    %eax,%r14d
   13790:	mov    %r9,%r13
   13793:	not    %r13d
   13796:	and    $0x1,%r13d
   1379a:	mov    %r14,%rcx
   1379d:	shl    %cl,%r13d
   137a0:	and    $0x7,%r13d
   137a4:	mov    %r10,%rax
   137a7:	imul   %edx,%eax
   137aa:	mov    $0x7,%ecx
   137af:	sub    %r9d,%ecx
   137b2:	sar    %ecx
   137b4:	mov    %r15,%rdx
   137b7:	mov    %r10,%r15
   137ba:	shl    %cl,%r15d
   137bd:	mov    %rdx,-0x50(%rbp)
   137c1:	mov    -0x38(%rbp),%r14
   137c5:	mov    -0x68(%rbp),%rbx
   137c9:	xor    %edx,%edx
   137cb:	jmpq   135d5 <png_image_read_composite+0x1c5>

00000000000137d0 <png_image_read_background>:
   137d0:	push   %rbp
   137d1:	mov    %rsp,%rbp
   137d4:	sub    $0xd0,%rsp
   137db:	mov    %rdi,-0xc0(%rbp)
   137e2:	mov    (%rdi),%rcx
   137e5:	mov    (%rcx),%rax
   137e8:	mov    0x8(%rax),%rdx
   137ec:	mov    0x10(%rcx),%r8d
   137f0:	mov    0xc(%rcx),%r9d
   137f4:	mov    %r9,-0xd0(%rbp)
   137fb:	mov    (%rax),%r10
   137fe:	mov    %r10,-0xc8(%rbp)
   13805:	mov    0x134(%r10),%eax
   1380c:	mov    %rax,%rsi
   1380f:	and    $0x600000,%esi
   13815:	test   %esi,%esi
   13817:	je     138bf <png_image_read_background+0xef>
   1381d:	and    $0x80,%eax
   13822:	test   %eax,%eax
   13824:	jne    138ce <png_image_read_background+0xfe>
   1382a:	mov    %r10,%rax
   1382d:	mov    %rdx,%rsi
   13830:	mov    %r8,-0x58(%rbp)
   13834:	mov    %rbx,-0x28(%rbp)
   13838:	mov    %r12,-0x30(%rbp)
   1383c:	mov    %r13,-0x38(%rbp)
   13840:	mov    %r14,-0x40(%rbp)
   13844:	mov    %r15,-0x48(%rbp)
   13848:	mov    %rdi,%rbx
   1384b:	mov    %rax,%rdi
   1384e:	mov    %r10,%r12
   13851:	mov    %rcx,%r13
   13854:	mov    %r9,%r14
   13857:	mov    %rdx,%r15
   1385a:	callq  5540 <png_get_channels@plt>
   1385f:	cmp    $0x2,%al
   13861:	jne    138dd <png_image_read_background+0x10d>
   13863:	mov    0x14(%r13),%eax
   13867:	mov    %rax,%rcx
   1386a:	and    $0x4,%ecx
   1386d:	test   %ecx,%ecx
   1386f:	je     138ec <png_image_read_background+0x11c>
   13871:	mov    $0x1,%eax
   13876:	mov    %rax,-0x68(%rbp)
   1387a:	mov    $0x7,%edi
   1387f:	movzbl 0x264(%r12),%ecx
   13888:	test   %cl,%cl
   1388a:	jne    13906 <png_image_read_background+0x136>
   1388c:	mov    %rax,%r10
   1388f:	mov    %r10,-0x78(%rbp)
   13893:	xor    %r8d,%r8d
   13896:	mov    %r8,-0xb8(%rbp)
   1389d:	movzbl 0x24(%r15),%ecx
   138a2:	cmp    $0x8,%cl
   138a5:	je     13917 <png_image_read_background+0x147>
   138a7:	cmp    $0x10,%cl
   138aa:	je     1395a <png_image_read_background+0x18a>
   138b0:	mov    %r12,%rdi
   138b3:	lea    0x1a8da(%rip),%rsi        # 2e194 <chunks_to_process.34+0x38f>
   138ba:	callq  5470 <png_error@plt>
   138bf:	mov    %r10,%rdi
   138c2:	lea    0x1a872(%rip),%rsi        # 2e13b <chunks_to_process.34+0x336>
   138c9:	callq  5470 <png_error@plt>
   138ce:	mov    %r10,%rdi
   138d1:	lea    0x1a874(%rip),%rsi        # 2e14c <chunks_to_process.34+0x347>
   138d8:	callq  5470 <png_error@plt>
   138dd:	mov    %r12,%rdi
   138e0:	lea    0x1a878(%rip),%rsi        # 2e15f <chunks_to_process.34+0x35a>
   138e7:	callq  5470 <png_error@plt>
   138ec:	and    $0x1,%eax
   138ef:	test   %eax,%eax
   138f1:	je     13871 <png_image_read_background+0xa1>
   138f7:	mov    %r12,%rdi
   138fa:	lea    0x1a873(%rip),%rsi        # 2e174 <chunks_to_process.34+0x36f>
   13901:	callq  5470 <png_error@plt>
   13906:	cmp    $0x1,%cl
   13909:	jne    13993 <png_image_read_background+0x1c3>
   1390f:	mov    %rdi,%r10
   13912:	jmpq   1388f <png_image_read_background+0xbf>
   13917:	mov    0x30(%rbx),%r9
   1391b:	mov    %r9,-0xa0(%rbp)
   13922:	mov    0x38(%rbx),%r13
   13926:	mov    %r13,-0x98(%rbp)
   1392d:	lea    0x18858(%rip),%rsi        # 2c18c <png_sRGB_table>
   13934:	mov    %rsi,-0x70(%rbp)
   13938:	lea    0x18a4d(%rip),%rcx        # 2c38c <png_sRGB_base>
   1393f:	mov    %rcx,-0x60(%rbp)
   13943:	lea    0x18e42(%rip),%rcx        # 2c78c <png_sRGB_delta>
   1394a:	mov    %rcx,-0x80(%rbp)
   1394e:	mov    -0x58(%rbp),%rdx
   13952:	mov    %r8,%r15
   13955:	jmpq   13a57 <png_image_read_background+0x287>
   1395a:	mov    0x30(%rbx),%rcx
   1395e:	mov    %rcx,-0x90(%rbp)
   13965:	mov    0x38(%rbx),%rdi
   13969:	mov    $0x2,%r15d
   1396f:	mov    %r15,-0xc0(%rbp)
   13976:	mov    0x14(%r13),%edx
   1397a:	mov    %rdx,%rsi
   1397d:	and    $0x1,%esi
   13980:	test   %esi,%esi
   13982:	jne    13a76 <png_image_read_background+0x2a6>
   13988:	mov    %rax,%r15
   1398b:	mov    %r8,%r9
   1398e:	jmpq   13a79 <png_image_read_background+0x2a9>
   13993:	mov    %r12,%rdi
   13996:	lea    0x1a75d(%rip),%rsi        # 2e0fa <chunks_to_process.34+0x2f5>
   1399d:	callq  5470 <png_error@plt>
   139a2:	movzbl 0x1(%rcx),%r8d
   139a7:	test   %r8b,%r8b
   139aa:	je     139f4 <png_image_read_background+0x224>
   139ac:	movzbl (%rcx),%edx
   139af:	cmp    $0xfe,%r8b
   139b3:	ja     139f2 <png_image_read_background+0x222>
   139b5:	mov    %r13,%rdi
   139b8:	sub    %r8d,%edi
   139bb:	movzbl (%rax),%ebx
   139be:	movzwl (%rsi,%rbx,2),%ebx
   139c2:	imul   %ebx,%edi
   139c5:	movzwl (%rsi,%rdx,2),%edx
   139c9:	imul   %r8d,%edx
   139cd:	add    %edx,%edi
   139cf:	mov    %rdi,%rdx
   139d2:	shr    $0xf,%edx
   139d5:	mov    %edx,%ebx
   139d7:	movzbl (%rbx,%r9,1),%edx
   139dc:	and    $0x7fff,%edi
   139e2:	imul   %edi,%edx
   139e5:	shr    $0xc,%edx
   139e8:	movzwl (%r12,%rbx,2),%edi
   139ed:	add    %edi,%edx
   139ef:	shr    $0x8,%edx
   139f2:	mov    %dl,(%rax)
   139f4:	add    $0x2,%rcx
   139f8:	add    %r11,%rax
   139fb:	cmp    %r10,%rax
   139fe:	jb     139a2 <png_image_read_background+0x1d2>
   13a00:	mov    -0xb0(%rbp),%rcx
   13a07:	mov    -0xa8(%rbp),%rax
   13a0e:	lea    (%rax,%rcx,1),%r15d
   13a12:	mov    -0x88(%rbp),%rcx
   13a19:	mov    -0x98(%rbp),%r13
   13a20:	mov    -0xa0(%rbp),%r9
   13a27:	mov    -0xc0(%rbp),%rbx
   13a2e:	mov    -0xc8(%rbp),%r12
   13a35:	xor    %r8d,%r8d
   13a38:	mov    -0x58(%rbp),%rdx
   13a3c:	cmp    %r15d,%edx
   13a3f:	ja     13ad6 <png_image_read_background+0x306>
   13a45:	mov    -0x78(%rbp),%r10
   13a49:	mov    -0x20(%rbp),%r15
   13a4d:	mov    $0x1,%eax
   13a52:	mov    $0x7,%edi
   13a57:	cmp    %r15d,%r10d
   13a5a:	jg     13b31 <png_image_read_background+0x361>
   13a60:	mov    -0x48(%rbp),%r15
   13a64:	mov    -0x40(%rbp),%r14
   13a68:	mov    -0x38(%rbp),%r13
   13a6c:	mov    -0x30(%rbp),%r12
   13a70:	mov    -0x28(%rbp),%rbx
   13a74:	leaveq 
   13a75:	retq   
   13a76:	mov    %rax,%r9
   13a79:	mov    %r9,-0x88(%rbp)
   13a80:	mov    %r15,-0xa8(%rbp)
   13a87:	mov    %rdi,%rsi
   13a8a:	shr    $0x3f,%rsi
   13a8e:	lea    (%rdi,%rsi,1),%r13
   13a92:	sar    %r13
   13a95:	mov    %r13,-0x98(%rbp)
   13a9c:	mov    %r14,%rsi
   13a9f:	imul   %r15d,%esi
   13aa3:	mov    %esi,%esi
   13aa5:	mov    %rsi,-0x50(%rbp)
   13aa9:	test   %r9d,%r9d
   13aac:	jne    13b7e <png_image_read_background+0x3ae>
   13ab2:	mov    -0x58(%rbp),%rdx
   13ab6:	mov    %r8,%rdi
   13ab9:	pushq  -0xc0(%rbp)
   13abf:	pushq  -0xb8(%rbp)
   13ac5:	popq   -0xc0(%rbp)
   13acb:	popq   -0xb8(%rbp)
   13ad1:	jmpq   13c35 <png_image_read_background+0x465>
   13ad6:	mov    0x28(%rbx),%rsi
   13ada:	mov    %r8,%rdx
   13add:	mov    %r12,%rdi
   13ae0:	mov    %rcx,%r12
   13ae3:	mov    %r9,%rbx
   13ae6:	mov    %rsi,-0xb8(%rbp)
   13aed:	callq  5600 <png_read_row@plt>
   13af2:	mov    %r15d,%eax
   13af5:	imul   %rax,%r13
   13af9:	lea    0x0(%r13,%rbx,1),%rax
   13afe:	lea    (%rax,%r14,1),%r10
   13b02:	add    %r12,%rax
   13b05:	mov    %r15,-0xb0(%rbp)
   13b0c:	mov    -0x60(%rbp),%r12
   13b10:	mov    -0x80(%rbp),%r9
   13b14:	mov    -0xb8(%rbp),%rcx
   13b1b:	mov    $0xff,%r13d
   13b21:	mov    -0x90(%rbp),%r11
   13b28:	mov    -0x70(%rbp),%rsi
   13b2c:	jmpq   139fb <png_image_read_background+0x22b>
   13b31:	lea    0x1(%r15),%r11d
   13b35:	movzbl 0x264(%r12),%ecx
   13b3e:	cmp    $0x1,%cl
   13b41:	je     13c54 <png_image_read_background+0x484>
   13b47:	mov    %r8,%rdi
   13b4a:	mov    %rdi,%r15
   13b4d:	pushq  -0x68(%rbp)
   13b50:	popq   -0xa8(%rbp)
   13b56:	mov    %edi,%ecx
   13b58:	mov    %rcx,-0x88(%rbp)
   13b5f:	mov    %eax,%eax
   13b61:	mov    %rax,-0x90(%rbp)
   13b68:	mov    0x20(%rbx),%rax
   13b6c:	test   %rax,%rax
   13b6f:	jne    13c68 <png_image_read_background+0x498>
   13b75:	mov    %r11,-0x20(%rbp)
   13b79:	jmpq   13a3c <png_image_read_background+0x26c>
   13b7e:	and    $0x20,%edx
   13b81:	test   %edx,%edx
   13b83:	jne    13c81 <png_image_read_background+0x4b1>
   13b89:	mov    -0x58(%rbp),%rdx
   13b8d:	mov    %r8,%rdi
   13b90:	pushq  -0xc0(%rbp)
   13b96:	pushq  -0xb8(%rbp)
   13b9c:	popq   -0xc0(%rbp)
   13ba2:	popq   -0xb8(%rbp)
   13ba8:	jmpq   13c35 <png_image_read_background+0x465>
   13bad:	movzwl (%rcx),%edx
   13bb0:	movzwl 0x2(%rcx),%r14d
   13bb5:	test   %r14w,%r14w
   13bb9:	jne    13c8a <png_image_read_background+0x4ba>
   13bbf:	mov    %r8,%rdx
   13bc2:	test   %r10d,%r10d
   13bc5:	mov    %dx,(%rsi,%r12,1)
   13bca:	je     13bd1 <png_image_read_background+0x401>
   13bcc:	mov    %r14w,(%rsi,%r13,1)
   13bd1:	add    $0x4,%rcx
   13bd5:	lea    (%rsi,%r9,2),%rsi
   13bd9:	cmp    %rdi,%rsi
   13bdc:	jb     13bad <png_image_read_background+0x3dd>
   13bde:	mov    -0x60(%rbp),%rcx
   13be2:	mov    -0x70(%rbp),%rax
   13be6:	lea    (%rcx,%rax,1),%r14d
   13bea:	mov    -0x98(%rbp),%r13
   13bf1:	mov    -0xb0(%rbp),%r15
   13bf8:	mov    -0x90(%rbp),%rcx
   13bff:	mov    -0xa0(%rbp),%rax
   13c06:	mov    -0xc8(%rbp),%r12
   13c0d:	mov    -0x58(%rbp),%rdx
   13c11:	cmp    %r14d,%edx
   13c14:	ja     13cae <png_image_read_background+0x4de>
   13c1a:	mov    -0xd0(%rbp),%r14
   13c21:	mov    -0xa8(%rbp),%r15
   13c28:	mov    -0x80(%rbp),%rdi
   13c2c:	mov    -0x78(%rbp),%r10
   13c30:	mov    $0x1,%eax
   13c35:	cmp    %edi,%r10d
   13c38:	jg     13d1c <png_image_read_background+0x54c>
   13c3e:	mov    -0x48(%rbp),%r15
   13c42:	mov    -0x40(%rbp),%r14
   13c46:	mov    -0x38(%rbp),%r13
   13c4a:	mov    -0x30(%rbp),%r12
   13c4e:	mov    -0x28(%rbp),%rbx
   13c52:	leaveq 
   13c53:	retq   
   13c54:	cmp    $0x1,%r15d
   13c58:	jg     13d48 <png_image_read_background+0x578>
   13c5e:	mov    $0x3,%ecx
   13c63:	jmpq   13d53 <png_image_read_background+0x583>
   13c68:	movzbl 0x1(%rax),%eax
   13c6c:	mov    %r11,-0x8(%rbp)
   13c70:	mov    %rax,-0x10(%rbp)
   13c74:	movzwl (%rsi,%rax,2),%eax
   13c78:	mov    %rax,-0x20(%rbp)
   13c7c:	jmpq   13dc5 <png_image_read_background+0x5f5>
   13c81:	mov    -0x58(%rbp),%rdx
   13c85:	mov    %r8,%rdi
   13c88:	jmp    13c35 <png_image_read_background+0x465>
   13c8a:	cmp    $0xfffe,%r14w
   13c8f:	ja     13bc2 <png_image_read_background+0x3f2>
   13c95:	mov    %r14,%rax
   13c98:	imul   %edx,%eax
   13c9b:	lea    0x7fff(%rax),%edx
   13ca1:	mov    %r11,%rax
   13ca4:	mul    %edx
   13ca6:	shr    $0xf,%edx
   13ca9:	jmpq   13bc2 <png_image_read_background+0x3f2>
   13cae:	mov    0x28(%rbx),%rsi
   13cb2:	mov    %rax,-0xa0(%rbp)
   13cb9:	mov    %r8,%rdx
   13cbc:	mov    %r12,%rdi
   13cbf:	mov    %rcx,%r12
   13cc2:	callq  5600 <png_read_row@plt>
   13cc7:	mov    0x28(%rbx),%rcx
   13ccb:	mov    %r15d,%r9d
   13cce:	mov    %r14d,%eax
   13cd1:	imul   %rax,%r13
   13cd5:	lea    (%r12,%r13,2),%rdx
   13cd9:	mov    -0x50(%rbp),%rax
   13cdd:	lea    (%rdx,%rax,2),%rdi
   13ce1:	mov    -0xa0(%rbp),%rax
   13ce8:	mov    %eax,%eax
   13cea:	lea    (%rdx,%rax,2),%rsi
   13cee:	mov    %r14,-0x60(%rbp)
   13cf2:	mov    %r15,-0xb0(%rbp)
   13cf9:	mov    -0x88(%rbp),%r10
   13d00:	mov    $0x80008001,%r11d
   13d06:	mov    -0xc0(%rbp),%r12
   13d0d:	xor    %r8d,%r8d
   13d10:	mov    -0xb8(%rbp),%r13
   13d17:	jmpq   13bd9 <png_image_read_background+0x409>
   13d1c:	lea    0x1(%rdi),%r9d
   13d20:	movzbl 0x264(%r12),%esi
   13d29:	cmp    $0x1,%sil
   13d2d:	je     13de5 <png_image_read_background+0x615>
   13d33:	mov    %r9,-0x80(%rbp)
   13d37:	mov    %r8,%rax
   13d3a:	mov    %rax,%r14
   13d3d:	pushq  -0x68(%rbp)
   13d40:	popq   -0x70(%rbp)
   13d43:	jmpq   13c11 <png_image_read_background+0x441>
   13d48:	mov    %rdi,%rcx
   13d4b:	sub    %r15d,%ecx
   13d4e:	sar    %ecx
   13d50:	mov    %rax,%r8
   13d53:	test   %r8,%r8
   13d56:	jne    13dfd <png_image_read_background+0x62d>
   13d5c:	mov    $0x3,%r9d
   13d62:	jmpq   13e06 <png_image_read_background+0x636>
   13d67:	movzbl 0x1(%rax),%edi
   13d6b:	test   %dil,%dil
   13d6e:	jne    13e51 <png_image_read_background+0x681>
   13d74:	mov    %r9,%rdx
   13d77:	mov    %dl,(%rcx)
   13d79:	add    $0x2,%rax
   13d7d:	add    %r10,%rcx
   13d80:	cmp    %rbx,%rcx
   13d83:	jb     13d67 <png_image_read_background+0x597>
   13d85:	mov    -0x18(%rbp),%rcx
   13d89:	mov    -0xa8(%rbp),%rax
   13d90:	lea    (%rcx,%rax,1),%r15d
   13d94:	mov    -0x88(%rbp),%rcx
   13d9b:	mov    -0x98(%rbp),%r13
   13da2:	mov    -0xa0(%rbp),%r9
   13da9:	mov    -0xd0(%rbp),%r14
   13db0:	mov    -0xc0(%rbp),%rbx
   13db7:	mov    -0xc8(%rbp),%r12
   13dbe:	xor    %r8d,%r8d
   13dc1:	mov    -0x58(%rbp),%rdx
   13dc5:	cmp    %edx,%r15d
   13dc8:	jb     13e99 <png_image_read_background+0x6c9>
   13dce:	mov    -0x78(%rbp),%r10
   13dd2:	mov    -0x8(%rbp),%r15
   13dd6:	mov    $0x1,%eax
   13ddb:	mov    $0x7,%edi
   13de0:	jmpq   13a57 <png_image_read_background+0x287>
   13de5:	cmp    $0x1,%edi
   13de8:	jg     13ef3 <png_image_read_background+0x723>
   13dee:	mov    $0x7,%esi
   13df3:	mov    $0x3,%ecx
   13df8:	jmpq   13f02 <png_image_read_background+0x732>
   13dfd:	mov    %rdi,%r9
   13e00:	sub    %r15d,%r9d
   13e03:	sar    %r9d
   13e06:	shl    %cl,%eax
   13e08:	add    $0xffffffff,%eax
   13e0b:	mov    %r11,%r8
   13e0e:	sar    %r8d
   13e11:	mov    $0x3,%ecx
   13e16:	sub    %r8d,%ecx
   13e19:	mov    %r15,%r8
   13e1c:	and    $0x1,%r8d
   13e20:	shl    %cl,%r8d
   13e23:	and    $0x7,%r8d
   13e27:	sub    %r8d,%eax
   13e2a:	add    %r14d,%eax
   13e2d:	mov    %r9,%rcx
   13e30:	shr    %cl,%eax
   13e32:	test   %eax,%eax
   13e34:	jne    13f0e <png_image_read_background+0x73e>
   13e3a:	mov    %r11,%r15
   13e3d:	mov    -0xa0(%rbp),%r9
   13e44:	mov    $0x1,%eax
   13e49:	xor    %r8d,%r8d
   13e4c:	jmpq   13a57 <png_image_read_background+0x287>
   13e51:	movzbl (%rax),%edx
   13e54:	cmp    $0xfe,%dil
   13e58:	ja     13d77 <png_image_read_background+0x5a7>
   13e5e:	movzwl (%rsi,%rdx,2),%edx
   13e62:	imul   %edi,%edx
   13e65:	neg    %edi
   13e67:	add    %r14d,%edi
   13e6a:	imul   %r13d,%edi
   13e6e:	add    %edx,%edi
   13e70:	mov    %rdi,%rdx
   13e73:	shr    $0xf,%edx
   13e76:	mov    %edx,%r8d
   13e79:	movzbl (%r8,%r12,1),%edx
   13e7e:	and    $0x7fff,%edi
   13e84:	imul   %edi,%edx
   13e87:	shr    $0xc,%edx
   13e8a:	movzwl (%r11,%r8,2),%edi
   13e8f:	add    %edi,%edx
   13e91:	shr    $0x8,%edx
   13e94:	jmpq   13d77 <png_image_read_background+0x5a7>
   13e99:	mov    0x28(%rbx),%rsi
   13e9d:	mov    %r8,%rdx
   13ea0:	mov    %r12,%rdi
   13ea3:	mov    %rcx,%r12
   13ea6:	mov    %r9,%rbx
   13ea9:	mov    %rsi,-0x50(%rbp)
   13ead:	callq  5600 <png_read_row@plt>
   13eb2:	mov    %r15d,%eax
   13eb5:	imul   %rax,%r13
   13eb9:	lea    (%rbx,%r13,1),%rax
   13ebd:	lea    (%r14,%rax,1),%rbx
   13ec1:	lea    (%r12,%rax,1),%rcx
   13ec5:	mov    %r15,-0x18(%rbp)
   13ec9:	mov    -0x60(%rbp),%r11
   13ecd:	mov    -0x80(%rbp),%r12
   13ed1:	mov    $0xff,%r14d
   13ed7:	mov    -0x20(%rbp),%r13
   13edb:	mov    -0x90(%rbp),%r10
   13ee2:	mov    -0x70(%rbp),%rsi
   13ee6:	mov    -0x10(%rbp),%r9
   13eea:	mov    -0x50(%rbp),%rax
   13eee:	jmpq   13d80 <png_image_read_background+0x5b0>
   13ef3:	mov    $0x7,%esi
   13ef8:	mov    %rsi,%rcx
   13efb:	sub    %edi,%ecx
   13efd:	sar    %ecx
   13eff:	mov    %rax,%r8
   13f02:	test   %r8,%r8
   13f05:	jne    13f1b <png_image_read_background+0x74b>
   13f07:	mov    $0x3,%esi
   13f0c:	jmp    13f1f <png_image_read_background+0x74f>
   13f0e:	cmp    $0x2,%r15d
   13f12:	jg     13f68 <png_image_read_background+0x798>
   13f14:	mov    $0x8,%eax
   13f19:	jmp    13f75 <png_image_read_background+0x7a5>
   13f1b:	sub    %edi,%esi
   13f1d:	sar    %esi
   13f1f:	shl    %cl,%eax
   13f21:	lea    -0x1(%rax),%r11d
   13f25:	mov    %r9,%rax
   13f28:	sar    %eax
   13f2a:	mov    $0x3,%r8d
   13f30:	mov    %r8,%rcx
   13f33:	sub    %eax,%ecx
   13f35:	mov    %rdi,%rax
   13f38:	and    $0x1,%eax
   13f3b:	shl    %cl,%eax
   13f3d:	and    $0x7,%eax
   13f40:	sub    %eax,%r11d
   13f43:	add    %r14d,%r11d
   13f46:	mov    %rsi,%rcx
   13f49:	shr    %cl,%r11d
   13f4c:	test   %r11d,%r11d
   13f4f:	jne    13fb7 <png_image_read_background+0x7e7>
   13f51:	mov    %r9,%rdi
   13f54:	mov    -0x90(%rbp),%rcx
   13f5b:	mov    $0x1,%eax
   13f60:	xor    %r8d,%r8d
   13f63:	jmpq   13c35 <png_image_read_background+0x465>
   13f68:	lea    -0x1(%r15),%ecx
   13f6c:	sar    %ecx
   13f6e:	mov    $0x8,%eax
   13f73:	shr    %cl,%eax
   13f75:	mov    %rax,-0xa8(%rbp)
   13f7c:	sub    %r15d,%edi
   13f7f:	sar    %edi
   13f81:	mov    %rdi,%rcx
   13f84:	mov    $0x1,%eax
   13f89:	shl    %cl,%eax
   13f8b:	mov    %r15,%rdi
   13f8e:	sar    %edi
   13f90:	mov    $0x3,%ecx
   13f95:	sub    %edi,%ecx
   13f97:	not    %r15d
   13f9a:	and    $0x1,%r15d
   13f9e:	mov    %r8,%rdi
   13fa1:	shl    %cl,%r15d
   13fa4:	and    $0x7,%r15d
   13fa8:	mov    -0xa0(%rbp),%r9
   13faf:	xor    %r8d,%r8d
   13fb2:	jmpq   13b56 <png_image_read_background+0x386>
   13fb7:	cmp    $0x2,%edi
   13fba:	jg     13fc3 <png_image_read_background+0x7f3>
   13fbc:	mov    $0x8,%esi
   13fc1:	jmp    13fcf <png_image_read_background+0x7ff>
   13fc3:	lea    -0x1(%rdi),%ecx
   13fc6:	sar    %ecx
   13fc8:	mov    $0x8,%esi
   13fcd:	shr    %cl,%esi
   13fcf:	mov    %rsi,-0x70(%rbp)
   13fd3:	mov    %rdi,%rcx
   13fd6:	sar    %ecx
   13fd8:	sub    %ecx,%r8d
   13fdb:	mov    %rdi,%r14
   13fde:	not    %r14d
   13fe1:	and    $0x1,%r14d
   13fe5:	mov    %r8,%rcx
   13fe8:	shl    %cl,%r14d
   13feb:	and    $0x7,%r14d
   13fef:	imul   %r15d,%eax
   13ff3:	mov    $0x7,%ecx
   13ff8:	sub    %edi,%ecx
   13ffa:	sar    %ecx
   13ffc:	shl    %cl,%r15d
   13fff:	mov    %r9,-0x80(%rbp)
   14003:	mov    -0x90(%rbp),%rcx
   1400a:	xor    %r8d,%r8d
   1400d:	jmpq   13c11 <png_image_read_background+0x441>
   14012:	data16 nopw %cs:0x0(%rax,%rax,1)
   1401d:	nopl   (%rax)

0000000000014020 <png_image_read_direct>:
   14020:	push   %rbp
   14021:	mov    %rsp,%rbp
   14024:	sub    $0x90,%rsp
   1402b:	mov    %rbx,-0x8(%rbp)
   1402f:	mov    %r12,-0x10(%rbp)
   14033:	mov    %r13,-0x18(%rbp)
   14037:	mov    %r14,-0x20(%rbp)
   1403b:	mov    %r15,-0x28(%rbp)
   1403f:	mov    %rdi,-0x48(%rbp)
   14043:	mov    (%rdi),%r12
   14046:	mov    %r12,-0x30(%rbp)
   1404a:	mov    (%r12),%rax
   1404e:	mov    (%rax),%rbx
   14051:	mov    0x8(%rax),%rax
   14055:	mov    %rax,-0x40(%rbp)
   14059:	mov    $0x1,%ecx
   1405e:	mov    %rcx,-0x70(%rbp)
   14062:	xor    %r13d,%r13d
   14065:	mov    %r13,-0x78(%rbp)
   14069:	mov    0x14(%r12),%r15d
   1406e:	mov    %r15,-0x50(%rbp)
   14072:	mov    %r15,%rax
   14075:	and    $0x4,%eax
   14078:	test   %eax,%eax
   1407a:	je     1407f <png_image_read_direct+0x5f>
   1407c:	mov    %rcx,%r13
   1407f:	mov    %rdi,%r14
   14082:	mov    %r13,-0x58(%rbp)
   14086:	mov    %rbx,%rdi
   14089:	callq  56b0 <png_set_expand@plt>
   1408e:	mov    $0xffffffffffffffff,%rax
   14095:	mov    %rax,-0x68(%rbp)
   14099:	mov    %rbx,%rdi
   1409c:	callq  10640 <png_image_format>
   140a1:	mov    %rax,%rcx
   140a4:	and    $0xfffffff7,%ecx
   140a7:	mov    %r15,%r8
   140aa:	xor    %ecx,%r8d
   140ad:	mov    %r8,%rcx
   140b0:	and    $0x2,%ecx
   140b3:	test   %ecx,%ecx
   140b5:	jne    140c8 <png_image_read_direct+0xa8>
   140b7:	mov    %rax,%r15
   140ba:	mov    %r12,%rax
   140bd:	mov    %r8,%r12
   140c0:	pushq  -0x78(%rbp)
   140c3:	popq   -0x80(%rbp)
   140c6:	jmp    14105 <png_image_read_direct+0xe5>
   140c8:	and    $0x2,%r15d
   140cc:	test   %r15d,%r15d
   140cf:	jne    140e3 <png_image_read_direct+0xc3>
   140d1:	mov    %rax,%rcx
   140d4:	and    $0x1,%ecx
   140d7:	test   %ecx,%ecx
   140d9:	jne    1414d <png_image_read_direct+0x12d>
   140db:	pushq  -0x78(%rbp)
   140de:	popq   -0x80(%rbp)
   140e1:	jmp    14153 <png_image_read_direct+0x133>
   140e3:	mov    %r12,%r14
   140e6:	mov    %r8,%r12
   140e9:	mov    %rax,%r15
   140ec:	mov    %rbx,%rdi
   140ef:	callq  5810 <png_set_gray_to_rgb@plt>
   140f4:	mov    %r14,%rax
   140f7:	pushq  -0x78(%rbp)
   140fa:	popq   -0x80(%rbp)
   140fd:	and    $0xfffffffd,%r12d
   14101:	mov    -0x48(%rbp),%r14
   14105:	mov    $0x186a0,%edx
   1410a:	mov    %rdx,-0x60(%rbp)
   1410e:	mov    %r15,%rcx
   14111:	and    $0x4,%ecx
   14114:	test   %ecx,%ecx
   14116:	jne    14178 <png_image_read_direct+0x158>
   14118:	mov    $0xffffffffffffffff,%rdx
   1411f:	mov    %rbx,%rdi
   14122:	xor    %esi,%esi
   14124:	callq  5640 <png_set_alpha_mode_fixed@plt>
   14129:	test   %r13d,%r13d
   1412c:	jg     1418b <png_image_read_direct+0x16b>
   1412e:	pushq  -0x78(%rbp)
   14131:	popq   -0x60(%rbp)
   14134:	mov    $0x2,%eax
   14139:	mov    %rax,-0x38(%rbp)
   1413d:	mov    %r12,%rcx
   14140:	and    $0x40,%ecx
   14143:	test   %ecx,%ecx
   14145:	jne    141a3 <png_image_read_direct+0x183>
   14147:	mov    -0x60(%rbp),%rsi
   1414b:	jmp    141aa <png_image_read_direct+0x18a>
   1414d:	pushq  -0x70(%rbp)
   14150:	popq   -0x80(%rbp)
   14153:	mov    %r12,%r14
   14156:	mov    %r8,%r12
   14159:	mov    %rax,%r15
   1415c:	mov    $0xffffffffffffffff,%rdx
   14163:	mov    %rdx,%rcx
   14166:	mov    %rbx,%rdi
   14169:	mov    $0x1,%esi
   1416e:	callq  55b0 <png_set_rgb_to_gray_fixed@plt>
   14173:	mov    %r14,%rax
   14176:	jmp    140fd <png_image_read_direct+0xdd>
   14178:	mov    0x18(%rax),%eax
   1417b:	and    $0x4,%eax
   1417e:	test   %eax,%eax
   14180:	je     1411f <png_image_read_direct+0xff>
   14182:	mov    $0xffffffffffffffff,%rdx
   14189:	jmp    1411f <png_image_read_direct+0xff>
   1418b:	mov    %r15,%rax
   1418e:	and    $0x1,%eax
   14191:	test   %eax,%eax
   14193:	jne    141dc <png_image_read_direct+0x1bc>
   14195:	pushq  -0x78(%rbp)
   14198:	pushq  -0x60(%rbp)
   1419b:	popq   -0x68(%rbp)
   1419e:	popq   -0x60(%rbp)
   141a1:	jmp    14134 <png_image_read_direct+0x114>
   141a3:	and    $0xffffffbf,%r12d
   141a7:	mov    %rax,%rsi
   141aa:	mov    -0x80(%rbp),%r8
   141ae:	test   %r8d,%r8d
   141b1:	jg     141ed <png_image_read_direct+0x1cd>
   141b3:	mov    %r14,%rcx
   141b6:	xor    %r14d,%r14d
   141b9:	mov    %r12,%rdx
   141bc:	and    $0x4,%edx
   141bf:	test   %edx,%edx
   141c1:	je     14250 <png_image_read_direct+0x230>
   141c7:	test   %r13d,%r13d
   141ca:	jg     14231 <png_image_read_direct+0x211>
   141cc:	mov    %rsi,%r13
   141cf:	mov    %rbx,%rdi
   141d2:	callq  58d0 <png_set_scale_16@plt>
   141d7:	mov    %r13,%rsi
   141da:	jmp    1423f <png_image_read_direct+0x21f>
   141dc:	pushq  -0x70(%rbp)
   141df:	pushq  -0x60(%rbp)
   141e2:	popq   -0x68(%rbp)
   141e5:	popq   -0x60(%rbp)
   141e8:	jmpq   14134 <png_image_read_direct+0x114>
   141ed:	lea    -0x90(%rbp),%rdi
   141f4:	movslq 0x498(%rbx),%rdx
   141fb:	mov    -0x68(%rbp),%rax
   141ff:	mov    %r15,-0x80(%rbp)
   14203:	mov    %r8,%r14
   14206:	mov    %rsi,%r15
   14209:	mov    %rax,%rsi
   1420c:	mov    $0x186a0,%ecx
   14211:	callq  8970 <png_muldiv>
   14216:	test   %eax,%eax
   14218:	jne    14265 <png_image_read_direct+0x245>
   1421a:	mov    %r15,%rsi
   1421d:	cmp    $0x1,%esi
   14220:	je     14291 <png_image_read_direct+0x271>
   14222:	mov    $0x2,%eax
   14227:	mov    -0x80(%rbp),%r15
   1422b:	mov    -0x48(%rbp),%rcx
   1422f:	jmp    141b9 <png_image_read_direct+0x199>
   14231:	mov    %rsi,%r13
   14234:	mov    %rbx,%rdi
   14237:	callq  5830 <png_set_expand_16@plt>
   1423c:	mov    %r13,%rsi
   1423f:	and    $0xfffffffb,%r12d
   14243:	mov    -0x58(%rbp),%r13
   14247:	mov    $0x2,%eax
   1424c:	mov    -0x48(%rbp),%rcx
   14250:	mov    %r12,%rdx
   14253:	and    $0x1,%edx
   14256:	test   %edx,%edx
   14258:	jne    142a8 <png_image_read_direct+0x288>
   1425a:	mov    -0x50(%rbp),%r15
   1425e:	xor    %ecx,%ecx
   14260:	jmpq   142f9 <png_image_read_direct+0x2d9>
   14265:	movslq -0x90(%rbp),%rdi
   1426c:	callq  8b10 <png_gamma_significant>
   14271:	test   %eax,%eax
   14273:	jne    14323 <png_image_read_direct+0x303>
   14279:	mov    %r15,%rsi
   1427c:	mov    $0x2,%eax
   14281:	mov    -0x80(%rbp),%r15
   14285:	mov    -0x48(%rbp),%rcx
   14289:	xor    %r14d,%r14d
   1428c:	jmpq   141b9 <png_image_read_direct+0x199>
   14291:	mov    $0x2,%eax
   14296:	mov    -0x80(%rbp),%r15
   1429a:	mov    -0x48(%rbp),%rcx
   1429e:	xor    %esi,%esi
   142a0:	mov    %rax,%r14
   142a3:	jmpq   141b9 <png_image_read_direct+0x199>
   142a8:	and    $0x1,%r15d
   142ac:	test   %r15d,%r15d
   142af:	jne    1432b <png_image_read_direct+0x30b>
   142b1:	test   %r13d,%r13d
   142b4:	jg     142bd <png_image_read_direct+0x29d>
   142b6:	mov    $0xff,%eax
   142bb:	jmp    142c2 <png_image_read_direct+0x2a2>
   142bd:	mov    $0xffff,%eax
   142c2:	mov    -0x50(%rbp),%r15
   142c6:	mov    %r15,%rcx
   142c9:	and    $0x20,%ecx
   142cc:	test   %ecx,%ecx
   142ce:	je     142da <png_image_read_direct+0x2ba>
   142d0:	and    $0xffffffdf,%r12d
   142d4:	pushq  -0x78(%rbp)
   142d7:	popq   -0x70(%rbp)
   142da:	mov    %rsi,%r13
   142dd:	mov    %rax,%rsi
   142e0:	mov    %rbx,%rdi
   142e3:	mov    -0x70(%rbp),%rdx
   142e7:	callq  5630 <png_set_add_alpha@plt>
   142ec:	mov    %r13,%rsi
   142ef:	mov    -0x58(%rbp),%r13
   142f3:	xor    %ecx,%ecx
   142f5:	and    $0xfffffffe,%r12d
   142f9:	mov    %rcx,-0x50(%rbp)
   142fd:	mov    %rbx,%rdi
   14300:	mov    -0x68(%rbp),%rdx
   14304:	callq  5640 <png_set_alpha_mode_fixed@plt>
   14309:	mov    %r12,%rax
   1430c:	and    $0x10,%eax
   1430f:	test   %eax,%eax
   14311:	je     1434b <png_image_read_direct+0x32b>
   14313:	mov    %r15,%rax
   14316:	and    $0x2,%eax
   14319:	test   %eax,%eax
   1431b:	jne    1433f <png_image_read_direct+0x31f>
   1431d:	and    $0xffffffef,%r15d
   14321:	jmp    14347 <png_image_read_direct+0x327>
   14323:	mov    %r15,%rsi
   14326:	jmpq   1421d <png_image_read_direct+0x1fd>
   1432b:	test   %r14d,%r14d
   1432e:	jle    143bf <png_image_read_direct+0x39f>
   14334:	mov    %rax,%r14
   14337:	mov    -0x50(%rbp),%r15
   1433b:	xor    %ecx,%ecx
   1433d:	jmp    142f5 <png_image_read_direct+0x2d5>
   1433f:	mov    %rbx,%rdi
   14342:	callq  5860 <png_set_bgr@plt>
   14347:	and    $0xffffffef,%r12d
   1434b:	mov    %r12,%rax
   1434e:	and    $0x20,%eax
   14351:	test   %eax,%eax
   14353:	je     1436b <png_image_read_direct+0x34b>
   14355:	mov    %r15,%rax
   14358:	and    $0x1,%eax
   1435b:	test   %eax,%eax
   1435d:	jne    143e5 <png_image_read_direct+0x3c5>
   14363:	and    $0xffffffdf,%r15d
   14367:	and    $0xffffffdf,%r12d
   1436b:	test   %r13d,%r13d
   1436e:	jle    14378 <png_image_read_direct+0x358>
   14370:	mov    %rbx,%rdi
   14373:	callq  51e0 <png_set_swap@plt>
   14378:	test   %r12d,%r12d
   1437b:	jne    143fc <png_image_read_direct+0x3dc>
   1437d:	mov    %rbx,%rdi
   14380:	callq  10880 <png_image_skip_unused_chunks>
   14385:	mov    -0x50(%rbp),%r12
   14389:	test   %r12d,%r12d
   1438c:	je     1440b <png_image_read_direct+0x3eb>
   1438e:	xor    %eax,%eax
   14390:	mov    %rax,-0x68(%rbp)
   14394:	mov    %rbx,%rdi
   14397:	mov    -0x40(%rbp),%r13
   1439b:	mov    %r13,%rsi
   1439e:	callq  5080 <png_read_update_info@plt>
   143a3:	movzbl 0x25(%r13),%ecx
   143a8:	mov    %rcx,%rax
   143ab:	and    $0x2,%eax
   143ae:	test   %eax,%eax
   143b0:	jg     1441c <png_image_read_direct+0x3fc>
   143b2:	mov    $0x1,%eax
   143b7:	pushq  -0x78(%rbp)
   143ba:	popq   -0x38(%rbp)
   143bd:	jmp    14421 <png_image_read_direct+0x401>
   143bf:	test   %r13d,%r13d
   143c2:	jg     1443e <png_image_read_direct+0x41e>
   143c4:	mov    0x20(%rcx),%rdx
   143c8:	test   %rdx,%rdx
   143cb:	jne    1445b <png_image_read_direct+0x43b>
   143d1:	mov    %rax,%rsi
   143d4:	mov    -0x50(%rbp),%r15
   143d8:	mov    $0x1,%ecx
   143dd:	xor    %r14d,%r14d
   143e0:	jmpq   142f5 <png_image_read_direct+0x2d5>
   143e5:	cmp    $0x2,%r14d
   143e9:	je     14367 <png_image_read_direct+0x347>
   143ef:	mov    %rbx,%rdi
   143f2:	callq  50d0 <png_set_swap_alpha@plt>
   143f7:	jmpq   14367 <png_image_read_direct+0x347>
   143fc:	mov    %rbx,%rdi
   143ff:	lea    0x19da3(%rip),%rsi        # 2e1a9 <chunks_to_process.34+0x3a4>
   14406:	callq  5470 <png_error@plt>
   1440b:	cmp    $0x2,%r14d
   1440f:	jne    144cc <png_image_read_direct+0x4ac>
   14415:	xor    %eax,%eax
   14417:	jmpq   14390 <png_image_read_direct+0x370>
   1441c:	mov    $0x3,%eax
   14421:	and    $0x4,%ecx
   14424:	test   %ecx,%ecx
   14426:	jg     144d9 <png_image_read_direct+0x4b9>
   1442c:	test   %r12d,%r12d
   1442f:	jg     14574 <png_image_read_direct+0x554>
   14435:	mov    -0x38(%rbp),%rax
   14439:	jmpq   144e6 <png_image_read_direct+0x4c6>
   1443e:	mov    %rsi,%r15
   14441:	mov    %rbx,%rdi
   14444:	callq  5740 <png_set_strip_alpha@plt>
   14449:	mov    %r15,%rsi
   1444c:	mov    -0x50(%rbp),%r15
   14450:	xor    %r14d,%r14d
   14453:	mov    %r14,%rcx
   14456:	jmpq   142f5 <png_image_read_direct+0x2d5>
   1445b:	movb   $0x0,-0x8a(%rbp)
   14462:	mov    0x20(%rcx),%rax
   14466:	movzbl (%rax),%eax
   14469:	mov    %ax,-0x88(%rbp)
   14470:	mov    0x20(%rcx),%rax
   14474:	movzbl 0x1(%rax),%eax
   14478:	mov    %ax,-0x86(%rbp)
   1447f:	mov    0x20(%rcx),%rax
   14483:	movzbl 0x2(%rax),%eax
   14487:	mov    %ax,-0x84(%rbp)
   1448e:	mov    0x20(%rcx),%rax
   14492:	movzbl 0x1(%rax),%eax
   14496:	mov    %ax,-0x82(%rbp)
   1449d:	mov    %rsi,%r15
   144a0:	lea    -0x8a(%rbp),%rsi
   144a7:	xor    %r14d,%r14d
   144aa:	mov    %r14,%r8
   144ad:	mov    %rbx,%rdi
   144b0:	mov    $0x1,%edx
   144b5:	mov    %r14,%rcx
   144b8:	callq  5320 <png_set_background_fixed@plt>
   144bd:	mov    %r15,%rsi
   144c0:	mov    -0x50(%rbp),%r15
   144c4:	mov    %r14,%rcx
   144c7:	jmpq   142f5 <png_image_read_direct+0x2d5>
   144cc:	mov    %rbx,%rdi
   144cf:	callq  53f0 <png_set_interlace_handling@plt>
   144d4:	jmpq   14390 <png_image_read_direct+0x370>
   144d9:	test   %r12d,%r12d
   144dc:	je     14583 <png_image_read_direct+0x563>
   144e2:	mov    -0x38(%rbp),%rax
   144e6:	mov    %r15,%rcx
   144e9:	and    $0x40,%ecx
   144ec:	test   %ecx,%ecx
   144ee:	je     144f3 <png_image_read_direct+0x4d3>
   144f0:	add    $0x40,%eax
   144f3:	movzbl 0x24(%r13),%ecx
   144f8:	cmp    $0x10,%cl
   144fb:	jne    14500 <png_image_read_direct+0x4e0>
   144fd:	add    $0x4,%eax
   14500:	mov    0x134(%rbx),%ecx
   14506:	mov    %rcx,%rdx
   14509:	and    $0x1,%edx
   1450c:	test   %edx,%edx
   1450e:	je     14513 <png_image_read_direct+0x4f3>
   14510:	add    $0x10,%eax
   14513:	cmp    $0x2,%r14d
   14517:	je     145a4 <png_image_read_direct+0x584>
   1451d:	mov    %rcx,%rdx
   14520:	and    $0x20000,%edx
   14526:	test   %edx,%edx
   14528:	jne    14544 <png_image_read_direct+0x524>
   1452a:	and    $0x1000000,%ecx
   14530:	test   %ecx,%ecx
   14532:	je     1454d <png_image_read_direct+0x52d>
   14534:	mov    0x130(%rbx),%ecx
   1453a:	and    $0x80,%ecx
   14540:	test   %ecx,%ecx
   14542:	jne    1454d <png_image_read_direct+0x52d>
   14544:	cmp    $0x2,%r14d
   14548:	je     145ba <png_image_read_direct+0x59a>
   1454a:	or     $0x20,%eax
   1454d:	cmp    %eax,%r15d
   14550:	jne    145c9 <png_image_read_direct+0x5a9>
   14552:	mov    -0x58(%rbp),%rax
   14556:	test   %eax,%eax
   14558:	mov    -0x48(%rbp),%rax
   1455c:	mov    0x8(%rax),%rcx
   14560:	movslq 0x10(%rax),%r15
   14564:	jle    14569 <png_image_read_direct+0x549>
   14566:	add    %r15,%r15
   14569:	test   %r15,%r15
   1456c:	js     145d8 <png_image_read_direct+0x5b8>
   1456e:	mov    -0x30(%rbp),%rdi
   14572:	jmp    145f1 <png_image_read_direct+0x5d1>
   14574:	mov    %rbx,%rdi
   14577:	lea    0x19c56(%rip),%rsi        # 2e1d4 <chunks_to_process.34+0x3cf>
   1457e:	callq  5470 <png_error@plt>
   14583:	cmp    $0x2,%r14d
   14587:	jne    144e6 <png_image_read_direct+0x4c6>
   1458d:	mov    %r15,%rcx
   14590:	and    $0x1,%ecx
   14593:	test   %ecx,%ecx
   14595:	jne    144e6 <png_image_read_direct+0x4c6>
   1459b:	mov    -0x38(%rbp),%rax
   1459f:	jmpq   144e6 <png_image_read_direct+0x4c6>
   145a4:	mov    %r15,%rdx
   145a7:	and    $0x20,%edx
   145aa:	test   %edx,%edx
   145ac:	je     1451d <png_image_read_direct+0x4fd>
   145b2:	add    $0x20,%eax
   145b5:	jmpq   1451d <png_image_read_direct+0x4fd>
   145ba:	mov    %rbx,%rdi
   145bd:	lea    0x19c33(%rip),%rsi        # 2e1f7 <chunks_to_process.34+0x3f2>
   145c4:	callq  5470 <png_error@plt>
   145c9:	mov    %rbx,%rdi
   145cc:	lea    0x19c49(%rip),%rsi        # 2e21c <chunks_to_process.34+0x417>
   145d3:	callq  5470 <png_error@plt>
   145d8:	mov    %r15,%rdx
   145db:	neg    %rdx
   145de:	mov    -0x30(%rbp),%rdi
   145e2:	mov    0x10(%rdi),%esi
   145e5:	add    $0xffffffff,%esi
   145e8:	mov    %esi,%esi
   145ea:	imul   %rsi,%rdx
   145ee:	add    %rdx,%rcx
   145f1:	mov    %rcx,0x30(%rax)
   145f5:	mov    %r15,0x38(%rax)
   145f9:	test   %r12d,%r12d
   145fc:	jg     14610 <png_image_read_direct+0x5f0>
   145fe:	cmp    $0x2,%r14d
   14602:	je     14676 <png_image_read_direct+0x656>
   14604:	mov    -0x68(%rbp),%rcx
   14608:	xor    %r12d,%r12d
   1460b:	jmpq   14702 <png_image_read_direct+0x6e2>
   14610:	mov    %r13,%rsi
   14613:	mov    %rdi,%r13
   14616:	mov    %rax,%r12
   14619:	mov    %rbx,%rdi
   1461c:	callq  50c0 <png_get_rowbytes@plt>
   14621:	mov    %rax,%rsi
   14624:	mov    %rbx,%rdi
   14627:	callq  5800 <png_malloc@plt>
   1462c:	mov    %r13,%rdi
   1462f:	mov    %rax,%r13
   14632:	mov    %r13,0x28(%r12)
   14637:	lea    -0x122e(%rip),%rsi        # 13410 <png_image_read_composite>
   1463e:	mov    %r12,%rdx
   14641:	callq  b250 <png_safe_execute>
   14646:	movq   $0x0,0x28(%r12)
   1464f:	mov    %r13,%rsi
   14652:	mov    %rbx,%rdi
   14655:	mov    %rax,%r12
   14658:	callq  5790 <png_free@plt>
   1465d:	mov    %r12,%rax
   14660:	mov    -0x28(%rbp),%r15
   14664:	mov    -0x20(%rbp),%r14
   14668:	mov    -0x18(%rbp),%r13
   1466c:	mov    -0x10(%rbp),%r12
   14670:	mov    -0x8(%rbp),%rbx
   14674:	leaveq 
   14675:	retq   
   14676:	mov    %r13,%rsi
   14679:	mov    %rdi,%r13
   1467c:	mov    %rax,%r12
   1467f:	mov    %rbx,%rdi
   14682:	callq  50c0 <png_get_rowbytes@plt>
   14687:	mov    %rax,%rsi
   1468a:	mov    %rbx,%rdi
   1468d:	callq  5800 <png_malloc@plt>
   14692:	mov    %r13,%rdi
   14695:	mov    %rax,%r13
   14698:	mov    %r13,0x28(%r12)
   1469d:	lea    -0xed4(%rip),%rsi        # 137d0 <png_image_read_background>
   146a4:	mov    %r12,%rdx
   146a7:	callq  b250 <png_safe_execute>
   146ac:	movq   $0x0,0x28(%r12)
   146b5:	mov    %r13,%rsi
   146b8:	mov    %rax,%r13
   146bb:	mov    %rbx,%rdi
   146be:	callq  5790 <png_free@plt>
   146c3:	mov    %r13,%rax
   146c6:	mov    -0x28(%rbp),%r15
   146ca:	mov    -0x20(%rbp),%r14
   146ce:	mov    -0x18(%rbp),%r13
   146d2:	mov    -0x10(%rbp),%r12
   146d6:	mov    -0x8(%rbp),%rbx
   146da:	leaveq 
   146db:	retq   
   146dc:	mov    %rbx,%rdi
   146df:	mov    %r13,%rsi
   146e2:	mov    %r12,%rdx
   146e5:	callq  5600 <png_read_row@plt>
   146ea:	add    %r15,%r13
   146ed:	add    $0xffffffff,%r14d
   146f1:	test   %r14d,%r14d
   146f4:	jne    146dc <png_image_read_direct+0x6bc>
   146f6:	mov    -0x80(%rbp),%rcx
   146fa:	mov    -0x30(%rbp),%rdi
   146fe:	mov    -0x48(%rbp),%rax
   14702:	add    $0xffffffff,%ecx
   14705:	test   %ecx,%ecx
   14707:	jns    14724 <png_image_read_direct+0x704>
   14709:	mov    -0x28(%rbp),%r15
   1470d:	mov    -0x20(%rbp),%r14
   14711:	mov    -0x18(%rbp),%r13
   14715:	mov    -0x10(%rbp),%r12
   14719:	mov    -0x8(%rbp),%rbx
   1471d:	mov    $0x1,%eax
   14722:	leaveq 
   14723:	retq   
   14724:	mov    0x10(%rdi),%r14d
   14728:	mov    0x30(%rax),%r13
   1472c:	mov    %rcx,-0x80(%rbp)
   14730:	jmp    146f1 <png_image_read_direct+0x6d1>
   14732:	nopw   %cs:0x0(%rax,%rax,1)
   1473c:	nopl   0x0(%rax)

0000000000014740 <png_set_read_fn>:
   14740:	push   %rbp
   14741:	mov    %rsp,%rbp
   14744:	sub    $0x10,%rsp
   14748:	test   %rdi,%rdi
   1474b:	jne    1474f <png_set_read_fn+0xf>
   1474d:	leaveq 
   1474e:	retq   
   1474f:	mov    %rsi,0x108(%rdi)
   14756:	test   %rdx,%rdx
   14759:	jne    1476b <png_set_read_fn+0x2b>
   1475b:	lea    0x5e(%rip),%rax        # 147c0 <png_default_read_data>
   14762:	mov    %rax,0x100(%rdi)
   14769:	jmp    14772 <png_set_read_fn+0x32>
   1476b:	mov    %rdx,0x100(%rdi)
   14772:	mov    0xf8(%rdi),%rax
   14779:	test   %rax,%rax
   1477c:	je     147a9 <png_set_read_fn+0x69>
   1477e:	movq   $0x0,0xf8(%rdi)
   14789:	lea    0x19ab4(%rip),%rsi        # 2e244 <chunks_to_process.34+0x43f>
   14790:	mov    %rdi,%rax
   14793:	mov    %r15,-0x8(%rbp)
   14797:	mov    %rdi,%r15
   1479a:	mov    %rax,%rdi
   1479d:	callq  5390 <png_warning@plt>
   147a2:	mov    %r15,%rdi
   147a5:	mov    -0x8(%rbp),%r15
   147a9:	movq   $0x0,0x290(%rdi)
   147b4:	leaveq 
   147b5:	retq   
   147b6:	nopw   %cs:0x0(%rax,%rax,1)

00000000000147c0 <png_default_read_data>:
   147c0:	push   %rbp
   147c1:	mov    %rsp,%rbp
   147c4:	sub    $0x10,%rsp
   147c8:	test   %rdi,%rdi
   147cb:	jne    147cf <png_default_read_data+0xf>
   147cd:	leaveq 
   147ce:	retq   
   147cf:	mov    $0x1,%eax
   147d4:	mov    0x108(%rdi),%rcx
   147db:	mov    %rdx,%r8
   147de:	mov    %r15,-0x10(%rbp)
   147e2:	mov    %rdi,-0x8(%rbp)
   147e6:	mov    %rsi,%rdi
   147e9:	mov    %rax,%rsi
   147ec:	mov    %rdx,%r15
   147ef:	mov    %r8,%rdx
   147f2:	callq  5160 <fread@plt>
   147f7:	cmp    %r15,%rax
   147fa:	jne    14802 <png_default_read_data+0x42>
   147fc:	mov    -0x10(%rbp),%r15
   14800:	leaveq 
   14801:	retq   
   14802:	lea    0x19a7f(%rip),%rsi        # 2e288 <chunks_to_process.34+0x483>
   14809:	mov    -0x8(%rbp),%rdi
   1480d:	callq  5470 <png_error@plt>
   14812:	data16 nopw %cs:0x0(%rax,%rax,1)
   1481d:	nopl   (%rax)

0000000000014820 <png_read_data>:
   14820:	push   %rbp
   14821:	mov    %rsp,%rbp
   14824:	mov    0x100(%rdi),%rax
   1482b:	test   %rax,%rax
   1482e:	jne    1483c <png_read_data+0x1c>
   14830:	lea    0x19a5c(%rip),%rsi        # 2e293 <chunks_to_process.34+0x48e>
   14837:	callq  5470 <png_error@plt>
   1483c:	callq  *%rax
   1483e:	leaveq 
   1483f:	retq   

0000000000014840 <png_set_expand>:
   14840:	push   %rbp
   14841:	mov    %rsp,%rbp
   14844:	sub    $0x10,%rsp
   14848:	mov    %r15,-0x8(%rbp)
   1484c:	xor    %esi,%esi
   1484e:	mov    %rdi,%r15
   14851:	callq  17780 <png_rtran_ok>
   14856:	test   %eax,%eax
   14858:	jne    14860 <png_set_expand+0x20>
   1485a:	mov    -0x8(%rbp),%r15
   1485e:	leaveq 
   1485f:	retq   
   14860:	mov    0x134(%r15),%eax
   14867:	or     $0x2001000,%eax
   1486c:	mov    %eax,0x134(%r15)
   14873:	mov    -0x8(%rbp),%r15
   14877:	leaveq 
   14878:	retq   
   14879:	nopl   0x0(%rax)

0000000000014880 <png_set_expand_gray_1_2_4_to_8>:
   14880:	push   %rbp
   14881:	mov    %rsp,%rbp
   14884:	sub    $0x10,%rsp
   14888:	mov    %r15,-0x8(%rbp)
   1488c:	xor    %esi,%esi
   1488e:	mov    %rdi,%r15
   14891:	callq  17780 <png_rtran_ok>
   14896:	test   %eax,%eax
   14898:	jne    148a0 <png_set_expand_gray_1_2_4_to_8+0x20>
   1489a:	mov    -0x8(%rbp),%r15
   1489e:	leaveq 
   1489f:	retq   
   148a0:	mov    0x134(%r15),%eax
   148a7:	or     $0x1000,%eax
   148ac:	mov    %eax,0x134(%r15)
   148b3:	mov    -0x8(%rbp),%r15
   148b7:	leaveq 
   148b8:	retq   
   148b9:	nopl   0x0(%rax)

00000000000148c0 <png_set_palette_to_rgb>:
   148c0:	push   %rbp
   148c1:	mov    %rsp,%rbp
   148c4:	sub    $0x10,%rsp
   148c8:	mov    %r15,-0x8(%rbp)
   148cc:	xor    %esi,%esi
   148ce:	mov    %rdi,%r15
   148d1:	callq  17780 <png_rtran_ok>
   148d6:	test   %eax,%eax
   148d8:	jne    148e0 <png_set_palette_to_rgb+0x20>
   148da:	mov    -0x8(%rbp),%r15
   148de:	leaveq 
   148df:	retq   
   148e0:	mov    0x134(%r15),%eax
   148e7:	or     $0x2001000,%eax
   148ec:	mov    %eax,0x134(%r15)
   148f3:	mov    -0x8(%rbp),%r15
   148f7:	leaveq 
   148f8:	retq   
   148f9:	nopl   0x0(%rax)

0000000000014900 <png_set_tRNS_to_alpha>:
   14900:	push   %rbp
   14901:	mov    %rsp,%rbp
   14904:	sub    $0x10,%rsp
   14908:	mov    %r15,-0x8(%rbp)
   1490c:	xor    %esi,%esi
   1490e:	mov    %rdi,%r15
   14911:	callq  17780 <png_rtran_ok>
   14916:	test   %eax,%eax
   14918:	jne    14920 <png_set_tRNS_to_alpha+0x20>
   1491a:	mov    -0x8(%rbp),%r15
   1491e:	leaveq 
   1491f:	retq   
   14920:	mov    0x134(%r15),%eax
   14927:	or     $0x2001000,%eax
   1492c:	mov    %eax,0x134(%r15)
   14933:	mov    -0x8(%rbp),%r15
   14937:	leaveq 
   14938:	retq   
   14939:	nopl   0x0(%rax)

0000000000014940 <png_set_expand_16>:
   14940:	push   %rbp
   14941:	mov    %rsp,%rbp
   14944:	sub    $0x10,%rsp
   14948:	mov    %r15,-0x8(%rbp)
   1494c:	xor    %esi,%esi
   1494e:	mov    %rdi,%r15
   14951:	callq  17780 <png_rtran_ok>
   14956:	test   %eax,%eax
   14958:	jne    14960 <png_set_expand_16+0x20>
   1495a:	mov    -0x8(%rbp),%r15
   1495e:	leaveq 
   1495f:	retq   
   14960:	mov    0x134(%r15),%eax
   14967:	or     $0x2001200,%eax
   1496c:	mov    %eax,0x134(%r15)
   14973:	mov    -0x8(%rbp),%r15
   14977:	leaveq 
   14978:	retq   
   14979:	nopl   0x0(%rax)

0000000000014980 <png_set_gray_to_rgb>:
   14980:	push   %rbp
   14981:	mov    %rsp,%rbp
   14984:	sub    $0x10,%rsp
   14988:	mov    %rdi,-0x8(%rbp)
   1498c:	xor    %esi,%esi
   1498e:	callq  17780 <png_rtran_ok>
   14993:	test   %eax,%eax
   14995:	jne    14999 <png_set_gray_to_rgb+0x19>
   14997:	leaveq 
   14998:	retq   
   14999:	mov    -0x8(%rbp),%rax
   1499d:	mov    %rax,%rdi
   149a0:	mov    %r15,-0x8(%rbp)
   149a4:	mov    %rax,%r15
   149a7:	callq  5440 <png_set_expand_gray_1_2_4_to_8@plt>
   149ac:	mov    0x134(%r15),%eax
   149b3:	or     $0x4000,%eax
   149b8:	mov    %eax,0x134(%r15)
   149bf:	mov    -0x8(%rbp),%r15
   149c3:	leaveq 
   149c4:	retq   
   149c5:	data16 nopw %cs:0x0(%rax,%rax,1)

00000000000149d0 <png_set_rgb_to_gray>:
   149d0:	push   %rbp
   149d1:	mov    %rsp,%rbp
   149d4:	sub    $0x30,%rsp
   149d8:	movdqu %xmm1,-0x10(%rbp)
   149dd:	mov    %r14,-0x20(%rbp)
   149e1:	mov    %r15,-0x28(%rbp)
   149e5:	mov    %r13,-0x18(%rbp)
   149e9:	mov    %rsi,%r13
   149ec:	lea    0x198fd(%rip),%rsi        # 2e2f0 <chunks_to_process.34+0x4eb>
   149f3:	mov    %rdi,%r14
   149f6:	callq  69e0 <png_fixed>
   149fb:	mov    %rax,%r15
   149fe:	lea    0x19907(%rip),%rsi        # 2e30c <chunks_to_process.34+0x507>
   14a05:	mov    %r14,%rdi
   14a08:	movdqu -0x10(%rbp),%xmm0
   14a0d:	callq  69e0 <png_fixed>
   14a12:	mov    %rax,%rcx
   14a15:	mov    %r15,%rdx
   14a18:	mov    %r13,%rsi
   14a1b:	mov    %r14,%rdi
   14a1e:	callq  55b0 <png_set_rgb_to_gray_fixed@plt>
   14a23:	mov    -0x18(%rbp),%r13
   14a27:	mov    -0x28(%rbp),%r15
   14a2b:	mov    -0x20(%rbp),%r14
   14a2f:	leaveq 
   14a30:	retq   
   14a31:	data16 nopw %cs:0x0(%rax,%rax,1)
   14a3c:	nopl   0x0(%rax)

0000000000014a40 <png_set_rgb_to_gray_fixed>:
   14a40:	push   %rbp
   14a41:	mov    %rsp,%rbp
   14a44:	sub    $0x20,%rsp
   14a48:	mov    %rsi,-0x20(%rbp)
   14a4c:	mov    %rdi,-0x18(%rbp)
   14a50:	mov    %rdx,-0x10(%rbp)
   14a54:	mov    %rcx,-0x8(%rbp)
   14a58:	mov    $0x1,%esi
   14a5d:	callq  17780 <png_rtran_ok>
   14a62:	test   %eax,%eax
   14a64:	jne    14a68 <png_set_rgb_to_gray_fixed+0x28>
   14a66:	leaveq 
   14a67:	retq   
   14a68:	mov    -0x20(%rbp),%rax
   14a6c:	cmp    $0x1,%eax
   14a6f:	jle    14a92 <png_set_rgb_to_gray_fixed+0x52>
   14a71:	cmp    $0x2,%eax
   14a74:	je     14aa7 <png_set_rgb_to_gray_fixed+0x67>
   14a76:	cmp    $0x3,%eax
   14a79:	jne    14a97 <png_set_rgb_to_gray_fixed+0x57>
   14a7b:	mov    -0x18(%rbp),%rcx
   14a7f:	mov    0x134(%rcx),%eax
   14a85:	or     $0x200000,%eax
   14a8a:	mov    %eax,0x134(%rcx)
   14a90:	jmp    14ad3 <png_set_rgb_to_gray_fixed+0x93>
   14a92:	cmp    $0x1,%eax
   14a95:	je     14abe <png_set_rgb_to_gray_fixed+0x7e>
   14a97:	lea    0x1988c(%rip),%rsi        # 2e32a <chunks_to_process.34+0x525>
   14a9e:	mov    -0x18(%rbp),%rdi
   14aa2:	callq  5470 <png_error@plt>
   14aa7:	mov    -0x18(%rbp),%rcx
   14aab:	mov    0x134(%rcx),%eax
   14ab1:	or     $0x400000,%eax
   14ab6:	mov    %eax,0x134(%rcx)
   14abc:	jmp    14ad3 <png_set_rgb_to_gray_fixed+0x93>
   14abe:	mov    -0x18(%rbp),%rcx
   14ac2:	mov    0x134(%rcx),%eax
   14ac8:	or     $0x600000,%eax
   14acd:	mov    %eax,0x134(%rcx)
   14ad3:	movzbl 0x267(%rcx),%eax
   14ada:	cmp    $0x3,%al
   14adc:	jne    14aef <png_set_rgb_to_gray_fixed+0xaf>
   14ade:	mov    0x134(%rcx),%eax
   14ae4:	or     $0x1000,%eax
   14ae9:	mov    %eax,0x134(%rcx)
   14aef:	mov    -0x10(%rbp),%rdx
   14af3:	test   %edx,%edx
   14af5:	jns    14b10 <png_set_rgb_to_gray_fixed+0xd0>
   14af7:	xor    %eax,%eax
   14af9:	mov    -0x8(%rbp),%rsi
   14afd:	test   %rax,%rax
   14b00:	jne    14b1f <png_set_rgb_to_gray_fixed+0xdf>
   14b02:	movzwl 0x3d2(%rcx),%eax
   14b09:	test   %ax,%ax
   14b0c:	je     14b42 <png_set_rgb_to_gray_fixed+0x102>
   14b0e:	leaveq 
   14b0f:	retq   
   14b10:	mov    -0x8(%rbp),%rsi
   14b14:	test   %esi,%esi
   14b16:	jns    14b50 <png_set_rgb_to_gray_fixed+0x110>
   14b18:	mov    $0x1,%eax
   14b1d:	jmp    14afd <png_set_rgb_to_gray_fixed+0xbd>
   14b1f:	test   %esi,%esi
   14b21:	js     14b02 <png_set_rgb_to_gray_fixed+0xc2>
   14b23:	lea    0x19824(%rip),%rsi        # 2e34e <chunks_to_process.34+0x549>
   14b2a:	mov    %rcx,%rdi
   14b2d:	mov    %r15,-0x20(%rbp)
   14b31:	mov    %rcx,%r15
   14b34:	callq  b0f0 <png_app_warning>
   14b39:	mov    %r15,%rcx
   14b3c:	mov    -0x20(%rbp),%r15
   14b40:	jmp    14b02 <png_set_rgb_to_gray_fixed+0xc2>
   14b42:	movzwl 0x3d4(%rcx),%eax
   14b49:	test   %ax,%ax
   14b4c:	je     14b61 <png_set_rgb_to_gray_fixed+0x121>
   14b4e:	leaveq 
   14b4f:	retq   
   14b50:	lea    (%rdx,%rsi,1),%eax
   14b53:	cmp    $0x186a0,%eax
   14b58:	jle    14b75 <png_set_rgb_to_gray_fixed+0x135>
   14b5a:	mov    $0x1,%eax
   14b5f:	jmp    14afd <png_set_rgb_to_gray_fixed+0xbd>
   14b61:	movw   $0x1b38,0x3d2(%rcx)
   14b6a:	movw   $0x5b8a,0x3d4(%rcx)
   14b73:	leaveq 
   14b74:	retq   
   14b75:	and    $0x1ffff,%edx
   14b7b:	shl    $0xa,%edx
   14b7e:	mov    $0xa7c5ac5,%edi
   14b83:	mov    %rdi,%rax
   14b86:	mul    %edx
   14b88:	shr    $0x7,%edx
   14b8b:	mov    %dx,0x3d2(%rcx)
   14b92:	and    $0x1ffff,%esi
   14b98:	shl    $0xa,%esi
   14b9b:	mov    %rdi,%rax
   14b9e:	mul    %esi
   14ba0:	shr    $0x7,%edx
   14ba3:	mov    %dx,0x3d4(%rcx)
   14baa:	movb   $0x1,0x3d1(%rcx)
   14bb1:	leaveq 
   14bb2:	retq   
   14bb3:	data16 nopw %cs:0x0(%rax,%rax,1)
   14bbe:	xchg   %ax,%ax

0000000000014bc0 <png_set_alpha_mode>:
   14bc0:	push   %rbp
   14bc1:	mov    %rsp,%rbp
   14bc4:	sub    $0x10,%rsp
   14bc8:	mov    %r14,-0x8(%rbp)
   14bcc:	mov    %r15,-0x10(%rbp)
   14bd0:	mov    %rsi,%r15
   14bd3:	mov    %rdi,%r14
   14bd6:	callq  17850 <convert_gamma_value>
   14bdb:	mov    %rax,%rdx
   14bde:	mov    %r15,%rsi
   14be1:	mov    %r14,%rdi
   14be4:	callq  5640 <png_set_alpha_mode_fixed@plt>
   14be9:	mov    -0x10(%rbp),%r15
   14bed:	mov    -0x8(%rbp),%r14
   14bf1:	leaveq 
   14bf2:	retq   
   14bf3:	data16 nopw %cs:0x0(%rax,%rax,1)
   14bfe:	xchg   %ax,%ax

0000000000014c00 <png_set_alpha_mode_fixed>:
   14c00:	push   %rbp
   14c01:	mov    %rsp,%rbp
   14c04:	sub    $0x30,%rsp
   14c08:	mov    %rdi,-0x20(%rbp)
   14c0c:	mov    %rdx,-0x28(%rbp)
   14c10:	mov    %rsi,-0x18(%rbp)
   14c14:	xor    %esi,%esi
   14c16:	mov    %rsi,-0x10(%rbp)
   14c1a:	callq  17780 <png_rtran_ok>
   14c1f:	test   %eax,%eax
   14c21:	jne    14c25 <png_set_alpha_mode_fixed+0x25>
   14c23:	leaveq 
   14c24:	retq   
   14c25:	mov    $0x1,%edx
   14c2a:	mov    %rdx,-0x8(%rbp)
   14c2e:	mov    -0x20(%rbp),%rax
   14c32:	mov    %rax,%rdi
   14c35:	mov    %r15,-0x20(%rbp)
   14c39:	mov    %rax,%r15
   14c3c:	mov    -0x28(%rbp),%rsi
   14c40:	callq  177f0 <translate_gamma_flags>
   14c45:	cmp    $0x3e7,%eax
   14c4a:	jle    14c88 <png_set_alpha_mode_fixed+0x88>
   14c4c:	cmp    $0x989680,%eax
   14c51:	jg     14c88 <png_set_alpha_mode_fixed+0x88>
   14c53:	mov    %rax,%rdi
   14c56:	mov    %r14,-0x28(%rbp)
   14c5a:	mov    %rax,%r14
   14c5d:	callq  8a40 <png_reciprocal>
   14c62:	mov    -0x18(%rbp),%rcx
   14c66:	cmp    $0x1,%ecx
   14c69:	jle    14c97 <png_set_alpha_mode_fixed+0x97>
   14c6b:	cmp    $0x2,%ecx
   14c6e:	je     14cdd <png_set_alpha_mode_fixed+0xdd>
   14c70:	cmp    $0x3,%ecx
   14c73:	je     14d0d <png_set_alpha_mode_fixed+0x10d>
   14c79:	mov    %r15,%rdi
   14c7c:	lea    0x1971d(%rip),%rsi        # 2e3a0 <chunks_to_process.34+0x59b>
   14c83:	callq  5470 <png_error@plt>
   14c88:	mov    %r15,%rdi
   14c8b:	lea    0x196eb(%rip),%rsi        # 2e37d <chunks_to_process.34+0x578>
   14c92:	callq  5470 <png_error@plt>
   14c97:	test   %ecx,%ecx
   14c99:	je     14d3d <png_set_alpha_mode_fixed+0x13d>
   14c9f:	cmp    $0x1,%ecx
   14ca2:	jne    14c79 <png_set_alpha_mode_fixed+0x79>
   14ca4:	mov    0x134(%r15),%ecx
   14cab:	and    $0xff7fffff,%ecx
   14cb1:	mov    %ecx,0x134(%r15)
   14cb8:	mov    0x130(%r15),%ecx
   14cbf:	and    $0xffffdfff,%ecx
   14cc5:	mov    %ecx,0x130(%r15)
   14ccc:	mov    $0x186a0,%r14d
   14cd2:	pushq  -0x8(%rbp)
   14cd5:	popq   -0x10(%rbp)
   14cd8:	jmpq   14d65 <png_set_alpha_mode_fixed+0x165>
   14cdd:	mov    0x134(%r15),%ecx
   14ce4:	and    $0xff7fffff,%ecx
   14cea:	mov    %ecx,0x134(%r15)
   14cf1:	mov    0x130(%r15),%ecx
   14cf8:	or     $0x2000,%ecx
   14cfe:	mov    %ecx,0x130(%r15)
   14d05:	pushq  -0x8(%rbp)
   14d08:	popq   -0x10(%rbp)
   14d0b:	jmp    14d65 <png_set_alpha_mode_fixed+0x165>
   14d0d:	mov    0x134(%r15),%ecx
   14d14:	or     $0x800000,%ecx
   14d1a:	mov    %ecx,0x134(%r15)
   14d21:	mov    0x130(%r15),%ecx
   14d28:	and    $0xffffdfff,%ecx
   14d2e:	mov    %ecx,0x130(%r15)
   14d35:	pushq  -0x8(%rbp)
   14d38:	popq   -0x10(%rbp)
   14d3b:	jmp    14d65 <png_set_alpha_mode_fixed+0x165>
   14d3d:	mov    0x134(%r15),%ecx
   14d44:	and    $0xff7fffff,%ecx
   14d4a:	mov    %ecx,0x134(%r15)
   14d51:	mov    0x130(%r15),%ecx
   14d58:	and    $0xffffdfff,%ecx
   14d5e:	mov    %ecx,0x130(%r15)
   14d65:	movslq 0x498(%r15),%rcx
   14d6c:	test   %ecx,%ecx
   14d6e:	jne    14d8b <png_set_alpha_mode_fixed+0x18b>
   14d70:	mov    %eax,0x498(%r15)
   14d77:	movzwl 0x4e2(%r15),%eax
   14d7f:	or     $0x1,%ax
   14d83:	mov    %ax,0x4e2(%r15)
   14d8b:	mov    %r14d,0x2a4(%r15)
   14d92:	mov    -0x10(%rbp),%rax
   14d96:	test   %eax,%eax
   14d98:	jg     14da4 <png_set_alpha_mode_fixed+0x1a4>
   14d9a:	mov    -0x28(%rbp),%r14
   14d9e:	mov    -0x20(%rbp),%r15
   14da2:	leaveq 
   14da3:	retq   
   14da4:	lea    0x27c(%r15),%rdi
   14dab:	mov    $0xa,%edx
   14db0:	xor    %esi,%esi
   14db2:	callq  5350 <memset@plt>
   14db7:	movslq 0x498(%r15),%rax
   14dbe:	mov    %eax,0x278(%r15)
   14dc5:	movb   $0x2,0x274(%r15)
   14dcd:	mov    0x134(%r15),%eax
   14dd4:	mov    %rax,%rcx
   14dd7:	and    $0xfffffeff,%ecx
   14ddd:	mov    %ecx,0x134(%r15)
   14de4:	mov    %rax,%rcx
   14de7:	and    $0x80,%ecx
   14ded:	test   %ecx,%ecx
   14def:	jne    14e0c <png_set_alpha_mode_fixed+0x20c>
   14df1:	and    $0xfffffe7f,%eax
   14df6:	add    $0x80,%eax
   14dfb:	mov    %eax,0x134(%r15)
   14e02:	mov    -0x28(%rbp),%r14
   14e06:	mov    -0x20(%rbp),%r15
   14e0a:	leaveq 
   14e0b:	retq   
   14e0c:	mov    %r15,%rdi
   14e0f:	lea    0x1959d(%rip),%rsi        # 2e3b3 <chunks_to_process.34+0x5ae>
   14e16:	callq  5470 <png_error@plt>
   14e1b:	nopl   0x0(%rax,%rax,1)

0000000000014e20 <png_set_strip_alpha>:
   14e20:	push   %rbp
   14e21:	mov    %rsp,%rbp
   14e24:	sub    $0x10,%rsp
   14e28:	mov    %r15,-0x8(%rbp)
   14e2c:	xor    %esi,%esi
   14e2e:	mov    %rdi,%r15
   14e31:	callq  17780 <png_rtran_ok>
   14e36:	test   %eax,%eax
   14e38:	jne    14e40 <png_set_strip_alpha+0x20>
   14e3a:	mov    -0x8(%rbp),%r15
   14e3e:	leaveq 
   14e3f:	retq   
   14e40:	mov    0x134(%r15),%eax
   14e47:	or     $0x40000,%eax
   14e4c:	mov    %eax,0x134(%r15)
   14e53:	mov    -0x8(%rbp),%r15
   14e57:	leaveq 
   14e58:	retq   
   14e59:	nopl   0x0(%rax)

0000000000014e60 <png_set_background>:
   14e60:	push   %rbp
   14e61:	mov    %rsp,%rbp
   14e64:	sub    $0x20,%rsp
   14e68:	mov    %r12,-0x8(%rbp)
   14e6c:	mov    %r13,-0x10(%rbp)
   14e70:	mov    %r14,-0x18(%rbp)
   14e74:	mov    %r15,-0x20(%rbp)
   14e78:	mov    %rdx,%r13
   14e7b:	mov    %rsi,%r14
   14e7e:	mov    %rcx,%r15
   14e81:	lea    0x1955e(%rip),%rsi        # 2e3e6 <chunks_to_process.34+0x5e1>
   14e88:	mov    %rdi,%r12
   14e8b:	callq  69e0 <png_fixed>
   14e90:	mov    %r15,%rcx
   14e93:	mov    %r13,%rdx
   14e96:	mov    %r14,%rsi
   14e99:	mov    %r12,%rdi
   14e9c:	mov    %rax,%r8
   14e9f:	callq  5320 <png_set_background_fixed@plt>
   14ea4:	mov    -0x20(%rbp),%r15
   14ea8:	mov    -0x18(%rbp),%r14
   14eac:	mov    -0x10(%rbp),%r13
   14eb0:	mov    -0x8(%rbp),%r12
   14eb4:	leaveq 
   14eb5:	retq   
   14eb6:	nopw   %cs:0x0(%rax,%rax,1)

0000000000014ec0 <png_set_background_fixed>:
   14ec0:	push   %rbp
   14ec1:	mov    %rsp,%rbp
   14ec4:	sub    $0x30,%rsp
   14ec8:	mov    %rsi,-0x28(%rbp)
   14ecc:	mov    %rdx,-0x20(%rbp)
   14ed0:	mov    %rdi,-0x10(%rbp)
   14ed4:	mov    %r8,-0x8(%rbp)
   14ed8:	mov    %rcx,-0x18(%rbp)
   14edc:	xor    %esi,%esi
   14ede:	callq  17780 <png_rtran_ok>
   14ee3:	test   %eax,%eax
   14ee5:	jne    14ee9 <png_set_background_fixed+0x29>
   14ee7:	leaveq 
   14ee8:	retq   
   14ee9:	mov    -0x28(%rbp),%rsi
   14eed:	test   %rsi,%rsi
   14ef0:	jne    14ef4 <png_set_background_fixed+0x34>
   14ef2:	leaveq 
   14ef3:	retq   
   14ef4:	mov    -0x20(%rbp),%rdx
   14ef8:	test   %edx,%edx
   14efa:	je     14f6b <png_set_background_fixed+0xab>
   14efc:	mov    -0x10(%rbp),%rdi
   14f00:	mov    0x134(%rdi),%ecx
   14f06:	mov    %rcx,%rax
   14f09:	and    $0xff7bff7f,%eax
   14f0e:	add    $0x40080,%eax
   14f13:	mov    %eax,0x134(%rdi)
   14f19:	mov    0x130(%rdi),%eax
   14f1f:	and    $0xffffdfff,%eax
   14f24:	mov    %eax,0x130(%rdi)
   14f2a:	mov    (%rsi),%rax
   14f2d:	mov    %rax,0x27c(%rdi)
   14f34:	movzwl 0x8(%rsi),%eax
   14f38:	mov    -0x8(%rbp),%rsi
   14f3c:	mov    %esi,0x278(%rdi)
   14f42:	mov    %dl,0x274(%rdi)
   14f48:	mov    %ax,0x284(%rdi)
   14f4f:	mov    -0x18(%rbp),%rax
   14f53:	test   %eax,%eax
   14f55:	jne    14f7d <png_set_background_fixed+0xbd>
   14f57:	and    $0xff7bfe7f,%ecx
   14f5d:	lea    0x40080(%rcx),%eax
   14f63:	mov    %eax,0x134(%rdi)
   14f69:	leaveq 
   14f6a:	retq   
   14f6b:	lea    0x19487(%rip),%rsi        # 2e3f9 <chunks_to_process.34+0x5f4>
   14f72:	mov    -0x10(%rbp),%rdi
   14f76:	callq  5390 <png_warning@plt>
   14f7b:	leaveq 
   14f7c:	retq   
   14f7d:	and    $0xff7bfe7f,%ecx
   14f83:	lea    0x40180(%rcx),%eax
   14f89:	mov    %eax,0x134(%rdi)
   14f8f:	leaveq 
   14f90:	retq   
   14f91:	data16 nopw %cs:0x0(%rax,%rax,1)
   14f9c:	nopl   0x0(%rax)

0000000000014fa0 <png_set_scale_16>:
   14fa0:	push   %rbp
   14fa1:	mov    %rsp,%rbp
   14fa4:	sub    $0x10,%rsp
   14fa8:	mov    %r15,-0x8(%rbp)
   14fac:	xor    %esi,%esi
   14fae:	mov    %rdi,%r15
   14fb1:	callq  17780 <png_rtran_ok>
   14fb6:	test   %eax,%eax
   14fb8:	jne    14fc0 <png_set_scale_16+0x20>
   14fba:	mov    -0x8(%rbp),%r15
   14fbe:	leaveq 
   14fbf:	retq   
   14fc0:	mov    0x134(%r15),%eax
   14fc7:	or     $0x4000000,%eax
   14fcc:	mov    %eax,0x134(%r15)
   14fd3:	mov    -0x8(%rbp),%r15
   14fd7:	leaveq 
   14fd8:	retq   
   14fd9:	nopl   0x0(%rax)

0000000000014fe0 <png_set_strip_16>:
   14fe0:	push   %rbp
   14fe1:	mov    %rsp,%rbp
   14fe4:	sub    $0x10,%rsp
   14fe8:	mov    %r15,-0x8(%rbp)
   14fec:	xor    %esi,%esi
   14fee:	mov    %rdi,%r15
   14ff1:	callq  17780 <png_rtran_ok>
   14ff6:	test   %eax,%eax
   14ff8:	jne    15000 <png_set_strip_16+0x20>
   14ffa:	mov    -0x8(%rbp),%r15
   14ffe:	leaveq 
   14fff:	retq   
   15000:	mov    0x134(%r15),%eax
   15007:	or     $0x400,%eax
   1500c:	mov    %eax,0x134(%r15)
   15013:	mov    -0x8(%rbp),%r15
   15017:	leaveq 
   15018:	retq   
   15019:	nopl   0x0(%rax)

0000000000015020 <png_set_quantize>:
   15020:	push   %rbp
   15021:	mov    %rsp,%rbp
   15024:	sub    $0xd0,%rsp
   1502b:	mov    %r15,-0x60(%rbp)
   1502f:	mov    %r9,-0xc8(%rbp)
   15036:	mov    %rcx,-0xb8(%rbp)
   1503d:	mov    %rdx,-0xc0(%rbp)
   15044:	mov    %r8,-0xb0(%rbp)
   1504b:	mov    %rsi,-0xa0(%rbp)
   15052:	mov    %r14,%r15
   15055:	mov    %r12,%r14
   15058:	mov    %rdi,-0x68(%rbp)
   1505c:	xor    %esi,%esi
   1505e:	mov    %rdi,%r12
   15061:	callq  17780 <png_rtran_ok>
   15066:	test   %eax,%eax
   15068:	jne    15076 <png_set_quantize+0x56>
   1506a:	mov    %r14,%r12
   1506d:	mov    %r15,%r14
   15070:	mov    -0x60(%rbp),%r15
   15074:	leaveq 
   15075:	retq   
   15076:	mov    0x134(%r12),%eax
   1507e:	or     $0x40,%eax
   15081:	mov    %eax,0x134(%r12)
   15089:	mov    -0xc8(%rbp),%rcx
   15090:	test   %ecx,%ecx
   15092:	je     150a6 <png_set_quantize+0x86>
   15094:	mov    %r15,%rax
   15097:	mov    %rbx,%rdx
   1509a:	mov    %r13,%r8
   1509d:	mov    -0xc0(%rbp),%r15
   150a4:	jmp    150fb <png_set_quantize+0xdb>
   150a6:	mov    -0xc0(%rbp),%rax
   150ad:	mov    %eax,%esi
   150af:	mov    %r12,%rdi
   150b2:	mov    %r13,-0x80(%rbp)
   150b6:	mov    %r15,-0xa8(%rbp)
   150bd:	mov    %rcx,%r13
   150c0:	mov    %rax,%r15
   150c3:	callq  5800 <png_malloc@plt>
   150c8:	mov    %rax,0x380(%r12)
   150d0:	xor    %eax,%eax
   150d2:	jmp    150e5 <png_set_quantize+0xc5>
   150d4:	mov    0x380(%r12),%rdx
   150dc:	movslq %eax,%rcx
   150df:	mov    %al,(%rdx,%rcx,1)
   150e2:	add    $0x1,%eax
   150e5:	cmp    %r15d,%eax
   150e8:	jl     150d4 <png_set_quantize+0xb4>
   150ea:	mov    %r13,%rcx
   150ed:	mov    %rbx,%rdx
   150f0:	mov    -0xa8(%rbp),%rax
   150f7:	mov    -0x80(%rbp),%r8
   150fb:	mov    -0xb8(%rbp),%r9
   15102:	cmp    %r9d,%r15d
   15105:	jg     15149 <png_set_quantize+0x129>
   15107:	xor    %r13d,%r13d
   1510a:	mov    -0xa0(%rbp),%rbx
   15111:	mov    %r15,-0x48(%rbp)
   15115:	mov    0x250(%r12),%rsi
   1511d:	test   %rsi,%rsi
   15120:	jne    1512a <png_set_quantize+0x10a>
   15122:	mov    %rbx,0x250(%r12)
   1512a:	test   %ecx,%ecx
   1512c:	mov    %r15w,0x258(%r12)
   15135:	jne    1519c <png_set_quantize+0x17c>
   15137:	mov    %rdx,%rbx
   1513a:	mov    %r14,%r12
   1513d:	mov    %rax,%r14
   15140:	mov    %r8,%r13
   15143:	mov    -0x60(%rbp),%r15
   15147:	leaveq 
   15148:	retq   
   15149:	mov    -0xb0(%rbp),%rbx
   15150:	test   %rbx,%rbx
   15153:	jne    151ed <png_set_quantize+0x1cd>
   15159:	mov    %r15d,%ebx
   1515c:	mov    %r12,%rdi
   1515f:	mov    %rbx,%rsi
   15162:	mov    %r8,-0x50(%rbp)
   15166:	mov    %rax,-0x58(%rbp)
   1516a:	mov    %rdx,-0x40(%rbp)
   1516e:	mov    %r14,-0x48(%rbp)
   15172:	mov    %r9,%r14
   15175:	callq  5800 <png_malloc@plt>
   1517a:	mov    %rax,0x408(%r12)
   15182:	mov    %rbx,%rsi
   15185:	mov    %r12,%rdi
   15188:	callq  5800 <png_malloc@plt>
   1518d:	mov    %rax,0x410(%r12)
   15195:	xor    %eax,%eax
   15197:	jmpq   15239 <png_set_quantize+0x219>
   1519c:	mov    $0x8000,%ecx
   151a1:	mov    %r12,%rdi
   151a4:	mov    %rcx,%rsi
   151a7:	mov    %r8,-0x18(%rbp)
   151ab:	mov    %rax,-0x20(%rbp)
   151af:	mov    %rdx,-0x8(%rbp)
   151b3:	mov    %r14,-0x10(%rbp)
   151b7:	mov    %rcx,%r14
   151ba:	callq  5780 <png_calloc@plt>
   151bf:	mov    %rax,0x378(%r12)
   151c7:	mov    %r12,%rdi
   151ca:	mov    %r14,%rsi
   151cd:	callq  5800 <png_malloc@plt>
   151d2:	mov    %r14,%rdx
   151d5:	mov    %rax,%r14
   151d8:	mov    $0xff,%esi
   151dd:	mov    %r14,%rdi
   151e0:	callq  5350 <memset@plt>
   151e5:	mov    %r13,%r8
   151e8:	jmpq   152e0 <png_set_quantize+0x2c0>
   151ed:	mov    %r15d,%esi
   151f0:	mov    %r12,%rdi
   151f3:	mov    %r8,-0x70(%rbp)
   151f7:	mov    %rax,-0xb8(%rbp)
   151fe:	mov    %rdx,-0x58(%rbp)
   15202:	mov    %r14,-0x68(%rbp)
   15206:	mov    %r9,%r14
   15209:	callq  5800 <png_malloc@plt>
   1520e:	mov    %rax,0x400(%r12)
   15216:	xor    %eax,%eax
   15218:	jmpq   1531b <png_set_quantize+0x2fb>
   1521d:	mov    0x408(%r12),%rcx
   15225:	movslq %eax,%rdx
   15228:	mov    %al,(%rcx,%rdx,1)
   1522b:	mov    0x410(%r12),%rcx
   15233:	mov    %al,(%rcx,%rdx,1)
   15236:	add    $0x1,%eax
   15239:	cmp    %eax,%r15d
   1523c:	jg     1521d <png_set_quantize+0x1fd>
   1523e:	mov    $0x1808,%esi
   15243:	mov    %r12,%rdi
   15246:	callq  5780 <png_calloc@plt>
   1524b:	mov    %rax,%rbx
   1524e:	mov    %rbx,-0x80(%rbp)
   15252:	mov    $0x60,%ecx
   15257:	xor    %r13d,%r13d
   1525a:	mov    -0xa0(%rbp),%r8
   15261:	mov    %r13,%rax
   15264:	jmpq   15394 <png_set_quantize+0x374>
   15269:	mov    %rax,%rsi
   1526c:	add    %r10d,%esi
   1526f:	add    %edx,%esi
   15271:	mov    %rcx,%rdx
   15274:	or     %ebx,%edx
   15276:	movslq %edx,%rdi
   15279:	movzbl (%rdi,%r14,1),%edx
   1527e:	cmp    %esi,%edx
   15280:	jle    15292 <png_set_quantize+0x272>
   15282:	mov    %sil,(%rdi,%r14,1)
   15286:	mov    0x378(%r12),%rdx
   1528e:	mov    %r8b,(%rdi,%rdx,1)
   15292:	add    $0x1,%ecx
   15295:	cmp    $0x1f,%ecx
   15298:	jle    15409 <png_set_quantize+0x3e9>
   1529e:	mov    -0xc8(%rbp),%rax
   152a5:	lea    0x1(%rax),%edi
   152a8:	mov    -0x40(%rbp),%rbx
   152ac:	mov    -0x38(%rbp),%rdx
   152b0:	mov    -0x30(%rbp),%rcx
   152b4:	cmp    $0x1f,%edi
   152b7:	jle    1541c <png_set_quantize+0x3fc>
   152bd:	mov    -0x50(%rbp),%rax
   152c1:	lea    0x1(%rax),%edi
   152c4:	mov    -0x28(%rbp),%rdx
   152c8:	cmp    $0x1f,%edi
   152cb:	jle    1542b <png_set_quantize+0x40b>
   152d1:	add    $0x1,%r8d
   152d5:	mov    -0x48(%rbp),%r15
   152d9:	mov    -0xa0(%rbp),%rbx
   152e0:	cmp    %r15d,%r8d
   152e3:	jl     1543a <png_set_quantize+0x41a>
   152e9:	mov    %r14,%rsi
   152ec:	mov    %r12,%rdi
   152ef:	callq  5790 <png_free@plt>
   152f4:	mov    -0x10(%rbp),%r12
   152f8:	mov    -0x8(%rbp),%rbx
   152fc:	mov    -0x20(%rbp),%r14
   15300:	mov    -0x18(%rbp),%r13
   15304:	mov    -0x60(%rbp),%r15
   15308:	leaveq 
   15309:	retq   
   1530a:	mov    0x400(%r12),%rdx
   15312:	movslq %eax,%rcx
   15315:	mov    %al,(%rdx,%rcx,1)
   15318:	add    $0x1,%eax
   1531b:	cmp    %eax,%r15d
   1531e:	jg     1530a <png_set_quantize+0x2ea>
   15320:	mov    $0x1,%eax
   15325:	lea    -0x1(%r15),%ecx
   15329:	xor    %r13d,%r13d
   1532c:	jmpq   15472 <png_set_quantize+0x452>
   15331:	mov    (%rsi),%r15
   15334:	mov    %r15,-0xb0(%rbp)
   1533b:	mov    %r12,%rdi
   1533e:	callq  5790 <png_free@plt>
   15343:	mov    %r15,%rsi
   15346:	test   %rsi,%rsi
   15349:	jne    15331 <png_set_quantize+0x311>
   1534b:	mov    -0x98(%rbp),%r15
   15352:	mov    -0xb0(%rbp),%rax
   15359:	movq   $0x0,(%rbx,%r14,8)
   15361:	add    $0x1,%r13d
   15365:	mov    %rax,-0xb0(%rbp)
   1536c:	cmp    $0x300,%r13d
   15373:	jle    15483 <png_set_quantize+0x463>
   15379:	mov    -0xa8(%rbp),%rcx
   15380:	add    $0x60,%ecx
   15383:	xor    %r13d,%r13d
   15386:	mov    -0xa0(%rbp),%r8
   1538d:	mov    -0xb8(%rbp),%r14
   15394:	mov    %rcx,-0xa8(%rbp)
   1539b:	cmp    %r15d,%r14d
   1539e:	jl     1549f <png_set_quantize+0x47f>
   153a4:	mov    %rbx,%rsi
   153a7:	mov    %r8,%rbx
   153aa:	mov    %r12,%rdi
   153ad:	callq  5790 <png_free@plt>
   153b2:	mov    0x410(%r12),%rsi
   153ba:	mov    %r12,%rdi
   153bd:	callq  5790 <png_free@plt>
   153c2:	mov    %r14,%r15
   153c5:	mov    0x408(%r12),%rsi
   153cd:	mov    %r12,%rdi
   153d0:	callq  5790 <png_free@plt>
   153d5:	movq   $0x0,0x410(%r12)
   153e1:	movq   $0x0,0x408(%r12)
   153ed:	mov    -0x48(%rbp),%r14
   153f1:	mov    -0x40(%rbp),%rdx
   153f5:	mov    -0x58(%rbp),%rax
   153f9:	mov    -0x50(%rbp),%r8
   153fd:	mov    -0xc8(%rbp),%rcx
   15404:	jmpq   15111 <png_set_quantize+0xf1>
   15409:	cmp    %r9d,%ecx
   1540c:	jg     154af <png_set_quantize+0x48f>
   15412:	mov    %r9,%rdx
   15415:	sub    %ecx,%edx
   15417:	jmpq   154b5 <png_set_quantize+0x495>
   1541c:	cmp    %ecx,%edi
   1541e:	jg     154c5 <png_set_quantize+0x4a5>
   15424:	sub    %edi,%ecx
   15426:	jmpq   154c9 <png_set_quantize+0x4a9>
   1542b:	cmp    %edx,%edi
   1542d:	jg     154d9 <png_set_quantize+0x4b9>
   15433:	sub    %edi,%edx
   15435:	jmpq   154dd <png_set_quantize+0x4bd>
   1543a:	movslq %r8d,%rax
   1543d:	lea    (%rax,%rax,2),%rax
   15441:	movzbl 0x1(%rbx,%rax,1),%ecx
   15446:	shr    $0x3,%ecx
   15449:	mov    %rcx,-0x30(%rbp)
   1544d:	movzbl (%rbx,%rax,1),%edx
   15451:	shr    $0x3,%edx
   15454:	mov    %rdx,-0x28(%rbp)
   15458:	movzbl 0x2(%rbx,%rax,1),%r9d
   1545e:	shr    $0x3,%r9d
   15462:	mov    %r13,%rdi
   15465:	jmpq   152c8 <png_set_quantize+0x2a8>
   1546a:	add    $0xffffffff,%ecx
   1546d:	mov    $0x1,%eax
   15472:	cmp    %ecx,%r14d
   15475:	jg     1551e <png_set_quantize+0x4fe>
   1547b:	mov    %r13,%rdx
   1547e:	jmpq   1550d <png_set_quantize+0x4ed>
   15483:	movslq %r13d,%r14
   15486:	mov    (%rbx,%r14,8),%rsi
   1548a:	test   %rsi,%rsi
   1548d:	je     15359 <png_set_quantize+0x339>
   15493:	mov    %r15,-0x98(%rbp)
   1549a:	jmpq   15346 <png_set_quantize+0x326>
   1549f:	lea    -0x1(%r15),%edx
   154a3:	mov    %rdx,-0x90(%rbp)
   154aa:	jmpq   1554b <png_set_quantize+0x52b>
   154af:	mov    %rcx,%rdx
   154b2:	sub    %r9d,%edx
   154b5:	cmp    %eax,%edx
   154b7:	jl     15269 <png_set_quantize+0x249>
   154bd:	mov    %rdx,%rsi
   154c0:	jmpq   1526c <png_set_quantize+0x24c>
   154c5:	neg    %ecx
   154c7:	add    %edi,%ecx
   154c9:	cmp    %edx,%ecx
   154cb:	jl     1556f <png_set_quantize+0x54f>
   154d1:	mov    %rcx,%rax
   154d4:	jmpq   15572 <png_set_quantize+0x552>
   154d9:	neg    %edx
   154db:	add    %edi,%edx
   154dd:	mov    %rdx,-0x38(%rbp)
   154e1:	mov    %rdi,%rbx
   154e4:	shl    $0xa,%ebx
   154e7:	mov    %rdi,-0x50(%rbp)
   154eb:	mov    %rbx,-0x40(%rbp)
   154ef:	mov    %r13,%rdi
   154f2:	jmpq   152b4 <png_set_quantize+0x294>
   154f7:	mov    %dil,(%r15,%r11,1)
   154fb:	mov    0x400(%r12),%rax
   15503:	mov    %r10b,(%r8,%rax,1)
   15507:	mov    %r9,%rdx
   1550a:	mov    %r13,%rax
   1550d:	cmp    %ecx,%edx
   1550f:	jl     1558d <png_set_quantize+0x56d>
   15511:	test   %eax,%eax
   15513:	jle    1546a <png_set_quantize+0x44a>
   15519:	mov    $0x1,%eax
   1551e:	mov    -0xc8(%rbp),%r15
   15525:	test   %r15d,%r15d
   15528:	je     155c3 <png_set_quantize+0x5a3>
   1552e:	mov    -0xc0(%rbp),%rax
   15535:	mov    %r13,%rcx
   15538:	jmpq   155ed <png_set_quantize+0x5cd>
   1553d:	mov    -0x88(%rbp),%r13
   15544:	mov    -0x90(%rbp),%rdx
   1554b:	cmp    %edx,%r13d
   1554e:	jge    15709 <png_set_quantize+0x6e9>
   15554:	movslq %r13d,%rdx
   15557:	lea    (%rdx,%rdx,2),%rdx
   1555b:	mov    %rdx,-0x78(%rbp)
   1555f:	lea    0x1(%r13),%r14d
   15563:	mov    %r14,-0x88(%rbp)
   1556a:	jmpq   15663 <png_set_quantize+0x643>
   1556f:	mov    %rdx,%rax
   15572:	mov    %rdi,%rsi
   15575:	shl    $0x5,%esi
   15578:	or     %esi,%ebx
   1557a:	lea    (%rcx,%rdx,1),%r10d
   1557e:	mov    %rdi,-0xc8(%rbp)
   15585:	mov    %r13,%rcx
   15588:	jmpq   15295 <png_set_quantize+0x275>
   1558d:	mov    0x400(%r12),%r15
   15595:	lea    0x1(%rdx),%r9d
   15599:	movslq %r9d,%r8
   1559c:	movzbl (%r8,%r15,1),%edi
   155a1:	movzwl (%rbx,%rdi,2),%esi
   155a5:	movslq %edx,%r11
   155a8:	movzbl (%r15,%r11,1),%r10d
   155ad:	movzwl (%rbx,%r10,2),%edx
   155b2:	cmp    %dx,%si
   155b5:	ja     154f7 <png_set_quantize+0x4d7>
   155bb:	mov    %r9,%rdx
   155be:	jmpq   1550d <png_set_quantize+0x4ed>
   155c3:	mov    -0xc0(%rbp),%rcx
   155ca:	mov    %r13,%rdx
   155cd:	jmpq   15738 <png_set_quantize+0x718>
   155d2:	mov    0x400(%r12),%rdx
   155da:	movslq %ecx,%rbx
   155dd:	movzbl (%rdx,%rbx,1),%edx
   155e1:	cmp    %edx,%r14d
   155e4:	jle    15753 <png_set_quantize+0x733>
   155ea:	add    $0x1,%ecx
   155ed:	cmp    %ecx,%r14d
   155f0:	jg     155d2 <png_set_quantize+0x5b2>
   155f2:	mov    -0xa0(%rbp),%rbx
   155f9:	mov    0x400(%r12),%rsi
   15601:	mov    %r12,%rdi
   15604:	callq  5790 <png_free@plt>
   15609:	movq   $0x0,0x400(%r12)
   15615:	mov    %r15,%rcx
   15618:	mov    %r14,%r15
   1561b:	mov    -0x68(%rbp),%r14
   1561f:	mov    -0x58(%rbp),%rdx
   15623:	mov    -0xb8(%rbp),%rax
   1562a:	mov    -0x70(%rbp),%r8
   1562e:	jmpq   15111 <png_set_quantize+0xf1>
   15633:	movslq %r12d,%rdx
   15636:	mov    (%rbx,%rdx,8),%rcx
   1563a:	mov    %rcx,(%rax)
   1563d:	mov    %r13b,0x8(%rax)
   15641:	mov    %r14b,0x9(%rax)
   15645:	mov    %rax,(%rbx,%rdx,8)
   15649:	mov    -0x68(%rbp),%r12
   1564d:	mov    -0xa8(%rbp),%rcx
   15654:	mov    -0x78(%rbp),%rdx
   15658:	mov    -0xa0(%rbp),%r8
   1565f:	add    $0x1,%r14d
   15663:	cmp    %r15d,%r14d
   15666:	jge    156fe <png_set_quantize+0x6de>
   1566c:	movzbl (%r8,%rdx,1),%esi
   15671:	movslq %r14d,%rdi
   15674:	lea    (%rdi,%rdi,2),%rdi
   15678:	movzbl (%r8,%rdi,1),%r9d
   1567d:	sub    %r9d,%esi
   15680:	mov    %rsi,%r11
   15683:	sar    $0x1f,%r11d
   15687:	mov    %r11,%r9
   1568a:	xor    %esi,%r9d
   1568d:	movzbl 0x2(%r8,%rdx,1),%esi
   15693:	movzbl 0x2(%r8,%rdi,1),%r10d
   15699:	sub    %r10d,%esi
   1569c:	mov    %rsi,%r10
   1569f:	sar    $0x1f,%r10d
   156a3:	xor    %r10d,%esi
   156a6:	add    %esi,%r9d
   156a9:	movzbl 0x1(%r8,%rdx,1),%esi
   156af:	movzbl 0x1(%r8,%rdi,1),%edi
   156b5:	sub    %edi,%esi
   156b7:	mov    %rsi,%rdi
   156ba:	sar    $0x1f,%edi
   156bd:	xor    %edi,%esi
   156bf:	add    %esi,%r9d
   156c2:	lea    (%r11,%rdi,1),%esi
   156c6:	add    %r10d,%esi
   156c9:	sub    %esi,%r9d
   156cc:	cmp    %ecx,%r9d
   156cf:	jg     1565f <png_set_quantize+0x63f>
   156d1:	mov    %r12,%rdi
   156d4:	mov    %r9,%r12
   156d7:	mov    $0x10,%esi
   156dc:	callq  5150 <png_malloc_warn@plt>
   156e1:	test   %rax,%rax
   156e4:	jne    15633 <png_set_quantize+0x613>
   156ea:	mov    -0x68(%rbp),%r12
   156ee:	mov    -0xa8(%rbp),%rcx
   156f5:	xor    %eax,%eax
   156f7:	mov    -0xa0(%rbp),%r8
   156fe:	test   %rax,%rax
   15701:	jne    1553d <png_set_quantize+0x51d>
   15707:	xor    %eax,%eax
   15709:	test   %rax,%rax
   1570c:	jne    15793 <png_set_quantize+0x773>
   15712:	xor    %eax,%eax
   15714:	mov    %rax,%r13
   15717:	jmpq   15365 <png_set_quantize+0x345>
   1571c:	mov    0x400(%r12),%rsi
   15724:	movslq %edx,%r11
   15727:	movzbl (%rsi,%r11,1),%esi
   1572c:	cmp    %esi,%r14d
   1572f:	jle    157b7 <png_set_quantize+0x797>
   15735:	add    $0x1,%edx
   15738:	cmp    %edx,%r14d
   1573b:	jg     1571c <png_set_quantize+0x6fc>
   1573d:	mov    -0xa0(%rbp),%rbx
   15744:	mov    -0xc0(%rbp),%r15
   1574b:	mov    %r13,%r8
   1574e:	jmpq   1583d <png_set_quantize+0x81d>
   15753:	add    $0xffffffff,%eax
   15756:	movslq %eax,%rsi
   15759:	mov    0x400(%r12),%rdx
   15761:	movzbl (%rsi,%rdx,1),%edx
   15765:	cmp    %edx,%r14d
   15768:	jle    15753 <png_set_quantize+0x733>
   1576a:	lea    (%rsi,%rsi,2),%rdi
   1576e:	mov    -0xa0(%rbp),%r8
   15775:	movzwl (%r8,%rdi,1),%edx
   1577a:	lea    (%rbx,%rbx,2),%rsi
   1577e:	mov    %dx,(%r8,%rsi,1)
   15783:	movzbl 0x2(%r8,%rdi,1),%edx
   15789:	mov    %dl,0x2(%r8,%rsi,1)
   1578e:	jmpq   155ea <png_set_quantize+0x5ca>
   15793:	mov    %rax,-0x70(%rbp)
   15797:	xor    %r13d,%r13d
   1579a:	mov    -0xc0(%rbp),%r14
   157a1:	mov    -0xb8(%rbp),%r11
   157a8:	mov    -0xc8(%rbp),%r10
   157af:	mov    %r13,%rdx
   157b2:	jmpq   15865 <png_set_quantize+0x845>
   157b7:	add    $0xffffffff,%ecx
   157ba:	movslq %ecx,%r10
   157bd:	mov    0x400(%r12),%rsi
   157c5:	movzbl (%r10,%rsi,1),%esi
   157ca:	cmp    %esi,%r14d
   157cd:	jle    157b7 <png_set_quantize+0x797>
   157cf:	lea    (%r11,%r11,2),%rbx
   157d3:	mov    -0xa0(%rbp),%r15
   157da:	movzwl (%r15,%rbx,1),%esi
   157df:	lea    (%r10,%r10,2),%r9
   157e3:	movzwl (%r15,%r9,1),%r8d
   157e8:	mov    %si,(%r15,%r9,1)
   157ed:	movzbl 0x2(%r15,%rbx,1),%edi
   157f3:	movzbl 0x2(%r15,%r9,1),%esi
   157f9:	mov    %dil,0x2(%r15,%r9,1)
   157fe:	mov    %r8w,(%r15,%rbx,1)
   15803:	mov    %sil,0x2(%r15,%rbx,1)
   15808:	mov    0x380(%r12),%rsi
   15810:	mov    %dl,(%r10,%rsi,1)
   15814:	mov    0x380(%r12),%rsi
   1581c:	mov    %cl,(%rsi,%r11,1)
   15820:	jmpq   15735 <png_set_quantize+0x715>
   15825:	mov    0x380(%r12),%rcx
   1582d:	movslq %r8d,%rdi
   15830:	movzbl (%rcx,%rdi,1),%ecx
   15834:	cmp    %ecx,%r14d
   15837:	jle    15872 <png_set_quantize+0x852>
   15839:	add    $0x1,%r8d
   1583d:	cmp    %r8d,%r15d
   15840:	jg     15825 <png_set_quantize+0x805>
   15842:	mov    -0xc8(%rbp),%r15
   15849:	jmpq   155f9 <png_set_quantize+0x5d9>
   1584e:	cmp    %r15d,%r11d
   15851:	jge    158c9 <png_set_quantize+0x8a9>
   15853:	mov    -0x78(%rbp),%rdx
   15857:	mov    -0x80(%rbp),%rbx
   1585b:	mov    -0xa8(%rbp),%rcx
   15862:	add    $0x1,%edx
   15865:	cmp    %ecx,%edx
   15867:	jle    158d6 <png_set_quantize+0x8b6>
   15869:	mov    -0x70(%rbp),%rax
   1586d:	jmpq   15365 <png_set_quantize+0x345>
   15872:	lea    (%rcx,%rcx,2),%r11
   15876:	movzbl (%rbx,%r11,1),%ecx
   1587b:	movzbl (%rbx),%edx
   1587e:	sub    %edx,%ecx
   15880:	mov    %rcx,%rdx
   15883:	sar    $0x1f,%edx
   15886:	xor    %edx,%ecx
   15888:	sub    %edx,%ecx
   1588a:	movzbl 0x1(%rbx,%r11,1),%edx
   15890:	movzbl 0x1(%rbx),%esi
   15894:	sub    %esi,%edx
   15896:	mov    %rdx,%rsi
   15899:	sar    $0x1f,%esi
   1589c:	xor    %esi,%edx
   1589e:	sub    %esi,%edx
   158a0:	add    %ecx,%edx
   158a2:	movzbl 0x2(%rbx,%r11,1),%ecx
   158a8:	movzbl 0x2(%rbx),%esi
   158ac:	sub    %esi,%ecx
   158ae:	mov    %rcx,%rsi
   158b1:	sar    $0x1f,%esi
   158b4:	xor    %esi,%ecx
   158b6:	sub    %esi,%ecx
   158b8:	add    %edx,%ecx
   158ba:	mov    %rdi,-0xc0(%rbp)
   158c1:	mov    %r13,%rdx
   158c4:	jmpq   15956 <png_set_quantize+0x936>
   158c9:	mov    -0x80(%rbp),%rbx
   158cd:	mov    -0x70(%rbp),%rax
   158d1:	jmpq   15365 <png_set_quantize+0x345>
   158d6:	movslq %edx,%rax
   158d9:	mov    (%rbx,%rax,8),%rax
   158dd:	test   %rax,%rax
   158e0:	je     15862 <png_set_quantize+0x842>
   158e2:	mov    %rdx,-0x78(%rbp)
   158e6:	jmpq   15a41 <png_set_quantize+0xa21>
   158eb:	movzbl (%rbx,%r11,1),%esi
   158f0:	movslq %eax,%rdi
   158f3:	lea    (%rdi,%rdi,2),%r10
   158f7:	movzbl (%rbx,%r10,1),%edi
   158fc:	sub    %edi,%esi
   158fe:	mov    %rsi,%r9
   15901:	sar    $0x1f,%r9d
   15905:	mov    %r9,%rdi
   15908:	xor    %esi,%edi
   1590a:	sub    %r9d,%edi
   1590d:	movzbl 0x1(%rbx,%r11,1),%esi
   15913:	movzbl 0x1(%rbx,%r10,1),%r9d
   15919:	sub    %r9d,%esi
   1591c:	mov    %rsi,%r9
   1591f:	sar    $0x1f,%r9d
   15923:	xor    %r9d,%esi
   15926:	sub    %r9d,%esi
   15929:	add    %esi,%edi
   1592b:	movzbl 0x2(%rbx,%r11,1),%esi
   15931:	movzbl 0x2(%rbx,%r10,1),%r9d
   15937:	sub    %r9d,%esi
   1593a:	mov    %rsi,%r9
   1593d:	sar    $0x1f,%r9d
   15941:	xor    %r9d,%esi
   15944:	sub    %r9d,%esi
   15947:	add    %edi,%esi
   15949:	cmp    %esi,%ecx
   1594b:	jle    15953 <png_set_quantize+0x933>
   1594d:	mov    %rsi,%rcx
   15950:	mov    %rax,%rdx
   15953:	add    $0x1,%eax
   15956:	cmp    %eax,%r14d
   15959:	jg     158eb <png_set_quantize+0x8cb>
   1595b:	mov    0x380(%r12),%rax
   15963:	mov    -0xc0(%rbp),%rcx
   1596a:	mov    %dl,(%rax,%rcx,1)
   1596d:	mov    $0x1,%eax
   15972:	jmpq   15839 <png_set_quantize+0x819>
   15977:	mov    0x408(%r12),%r9
   1597f:	movzbl 0x0(%r13,%r9,1),%esi
   15985:	mov    0x380(%r12),%rdi
   1598d:	movslq %eax,%rcx
   15990:	movzbl (%rdi,%rcx,1),%edx
   15994:	cmp    %dl,%sil
   15997:	jne    159a1 <png_set_quantize+0x981>
   15999:	movzbl (%r9,%rbx,1),%edx
   1599e:	mov    %dl,(%rdi,%rcx,1)
   159a1:	add    0x380(%r12),%rcx
   159a9:	movzbl (%rcx),%edx
   159ac:	cmp    %r15d,%edx
   159af:	jne    159c1 <png_set_quantize+0x9a1>
   159b1:	mov    0x408(%r12),%rdx
   159b9:	movzbl 0x0(%r13,%rdx,1),%edx
   159bf:	mov    %dl,(%rcx)
   159c1:	add    $0x1,%eax
   159c4:	cmp    %eax,%r14d
   159c7:	jg     15977 <png_set_quantize+0x957>
   159c9:	mov    -0x98(%rbp),%rax
   159d0:	mov    -0x88(%rbp),%rcx
   159d7:	mov    -0x90(%rbp),%rdx
   159de:	mov    0x408(%r12),%rbx
   159e6:	movzbl 0x0(%r13,%rbx,1),%edi
   159ec:	mov    0x410(%r12),%rsi
   159f4:	movzbl (%rdx,%rsi,1),%esi
   159f8:	mov    %dil,(%rbx,%rsi,1)
   159fc:	mov    0x410(%r12),%rbx
   15a04:	movzbl (%rdx,%rbx,1),%edi
   15a08:	mov    0x408(%r12),%rsi
   15a10:	movzbl 0x0(%r13,%rsi,1),%esi
   15a16:	mov    %dil,(%rbx,%rsi,1)
   15a1a:	mov    0x408(%r12),%rsi
   15a22:	mov    %r15b,0x0(%r13,%rsi,1)
   15a27:	mov    0x410(%r12),%rsi
   15a2f:	mov    %cl,(%rdx,%rsi,1)
   15a32:	xor    %r13d,%r13d
   15a35:	cmp    %r15d,%r11d
   15a38:	jge    1584e <png_set_quantize+0x82e>
   15a3e:	mov    (%rax),%rax
   15a41:	test   %rax,%rax
   15a44:	je     1584e <png_set_quantize+0x82e>
   15a4a:	movzbl 0x8(%rax),%esi
   15a4e:	mov    0x408(%r12),%rbx
   15a56:	movzbl (%rsi,%rbx,1),%ecx
   15a5a:	cmp    %ecx,%r15d
   15a5d:	jle    15a35 <png_set_quantize+0xa15>
   15a5f:	movzbl 0x9(%rax),%ecx
   15a63:	movzbl (%rcx,%rbx,1),%edx
   15a67:	cmp    %edx,%r15d
   15a6a:	jle    15a35 <png_set_quantize+0xa15>
   15a6c:	mov    %r15,%rdx
   15a6f:	and    $0x1,%edx
   15a72:	test   %edx,%edx
   15a74:	jle    15a7f <png_set_quantize+0xa5f>
   15a76:	mov    %rsi,%rdx
   15a79:	mov    %rcx,%rsi
   15a7c:	mov    %rdx,%rcx
   15a7f:	test   %r10d,%r10d
   15a82:	lea    -0x1(%r15),%r15d
   15a86:	movslq %r15d,%rdx
   15a89:	lea    (%rdx,%rdx,2),%r9
   15a8d:	movzwl (%r8,%r9,1),%edi
   15a92:	movslq %ecx,%r13
   15a95:	movzbl (%rbx,%r13,1),%ebx
   15a9a:	lea    (%rbx,%rbx,2),%rbx
   15a9e:	mov    %di,(%r8,%rbx,1)
   15aa3:	movzbl 0x2(%r8,%r9,1),%edi
   15aa9:	mov    %dil,0x2(%r8,%rbx,1)
   15aae:	jne    159de <png_set_quantize+0x9be>
   15ab4:	movslq %esi,%rbx
   15ab7:	mov    %rdx,-0x90(%rbp)
   15abe:	mov    %rcx,-0x88(%rbp)
   15ac5:	mov    %rax,-0x98(%rbp)
   15acc:	xor    %eax,%eax
   15ace:	jmpq   159c4 <png_set_quantize+0x9a4>
   15ad3:	data16 nopw %cs:0x0(%rax,%rax,1)
   15ade:	xchg   %ax,%ax

0000000000015ae0 <png_set_gamma>:
   15ae0:	push   %rbp
   15ae1:	mov    %rsp,%rbp
   15ae4:	sub    $0x20,%rsp
   15ae8:	movdqu %xmm1,-0x10(%rbp)
   15aed:	mov    %r15,-0x20(%rbp)
   15af1:	mov    %r14,-0x18(%rbp)
   15af5:	mov    %rdi,%r14
   15af8:	callq  17850 <convert_gamma_value>
   15afd:	mov    %rax,%r15
   15b00:	mov    %r14,%rdi
   15b03:	movdqu -0x10(%rbp),%xmm0
   15b08:	callq  17850 <convert_gamma_value>
   15b0d:	mov    %rax,%rdx
   15b10:	mov    %r15,%rsi
   15b13:	mov    %r14,%rdi
   15b16:	callq  52c0 <png_set_gamma_fixed@plt>
   15b1b:	mov    -0x18(%rbp),%r14
   15b1f:	mov    -0x20(%rbp),%r15
   15b23:	leaveq 
   15b24:	retq   
   15b25:	data16 nopw %cs:0x0(%rax,%rax,1)

0000000000015b30 <png_set_gamma_fixed>:
   15b30:	push   %rbp
   15b31:	mov    %rsp,%rbp
   15b34:	sub    $0x20,%rsp
   15b38:	mov    %rdi,-0x10(%rbp)
   15b3c:	mov    %rsi,-0x18(%rbp)
   15b40:	mov    %rdx,-0x8(%rbp)
   15b44:	xor    %esi,%esi
   15b46:	callq  17780 <png_rtran_ok>
   15b4b:	test   %eax,%eax
   15b4d:	jne    15b51 <png_set_gamma_fixed+0x21>
   15b4f:	leaveq 
   15b50:	retq   
   15b51:	mov    $0x1,%edx
   15b56:	mov    -0x10(%rbp),%rax
   15b5a:	mov    %rax,%rdi
   15b5d:	mov    %r15,-0x10(%rbp)
   15b61:	mov    %rax,%r15
   15b64:	mov    -0x18(%rbp),%rsi
   15b68:	callq  177f0 <translate_gamma_flags>
   15b6d:	mov    %r15,%rdi
   15b70:	mov    %r14,-0x18(%rbp)
   15b74:	mov    %rax,%r14
   15b77:	xor    %edx,%edx
   15b79:	mov    -0x8(%rbp),%rsi
   15b7d:	callq  177f0 <translate_gamma_flags>
   15b82:	test   %eax,%eax
   15b84:	jle    15bb7 <png_set_gamma_fixed+0x87>
   15b86:	test   %r14d,%r14d
   15b89:	jle    15bc6 <png_set_gamma_fixed+0x96>
   15b8b:	mov    %eax,0x498(%r15)
   15b92:	movzwl 0x4e2(%r15),%eax
   15b9a:	or     $0x1,%ax
   15b9e:	mov    %ax,0x4e2(%r15)
   15ba6:	mov    %r14d,0x2a4(%r15)
   15bad:	mov    -0x18(%rbp),%r14
   15bb1:	mov    -0x10(%rbp),%r15
   15bb5:	leaveq 
   15bb6:	retq   
   15bb7:	mov    %r15,%rdi
   15bba:	lea    0x18869(%rip),%rsi        # 2e42a <chunks_to_process.34+0x625>
   15bc1:	callq  5470 <png_error@plt>
   15bc6:	mov    %r15,%rdi
   15bc9:	lea    0x1887e(%rip),%rsi        # 2e44e <chunks_to_process.34+0x649>
   15bd0:	callq  5470 <png_error@plt>
   15bd5:	data16 nopw %cs:0x0(%rax,%rax,1)

0000000000015be0 <png_set_crc_action>:
   15be0:	push   %rbp
   15be1:	mov    %rsp,%rbp
   15be4:	sub    $0x10,%rsp
   15be8:	test   %rdi,%rdi
   15beb:	jne    15bef <png_set_crc_action+0xf>
   15bed:	leaveq 
   15bee:	retq   
   15bef:	cmp    $0x3,%esi
   15bf2:	jle    15c00 <png_set_crc_action+0x20>
   15bf4:	cmp    $0x4,%esi
   15bf7:	je     15c22 <png_set_crc_action+0x42>
   15bf9:	cmp    $0x5,%esi
   15bfc:	je     15c74 <png_set_crc_action+0x94>
   15bfe:	jmp    15c63 <png_set_crc_action+0x83>
   15c00:	cmp    $0x2,%esi
   15c03:	je     15c35 <png_set_crc_action+0x55>
   15c05:	cmp    $0x3,%esi
   15c08:	jne    15c63 <png_set_crc_action+0x83>
   15c0a:	mov    0x130(%rdi),%eax
   15c10:	and    $0xfffff3ff,%eax
   15c15:	add    $0x400,%eax
   15c1a:	mov    %eax,0x130(%rdi)
   15c20:	jmp    15c74 <png_set_crc_action+0x94>
   15c22:	mov    0x130(%rdi),%eax
   15c28:	or     $0xc00,%eax
   15c2d:	mov    %eax,0x130(%rdi)
   15c33:	jmp    15c74 <png_set_crc_action+0x94>
   15c35:	lea    0x18838(%rip),%rsi        # 2e474 <chunks_to_process.34+0x66f>
   15c3c:	mov    %rdi,%rax
   15c3f:	mov    %r14,-0x8(%rbp)
   15c43:	mov    %r15,-0x10(%rbp)
   15c47:	mov    %rdi,%r14
   15c4a:	mov    %rax,%rdi
   15c4d:	mov    %rdx,%r15
   15c50:	callq  5390 <png_warning@plt>
   15c55:	mov    %r15,%rdx
   15c58:	mov    %r14,%rdi
   15c5b:	mov    -0x10(%rbp),%r15
   15c5f:	mov    -0x8(%rbp),%r14
   15c63:	mov    0x130(%rdi),%eax
   15c69:	and    $0xfffff3ff,%eax
   15c6e:	mov    %eax,0x130(%rdi)
   15c74:	cmp    $0x3,%edx
   15c77:	jle    15c85 <png_set_crc_action+0xa5>
   15c79:	cmp    $0x4,%edx
   15c7c:	je     15ca2 <png_set_crc_action+0xc2>
   15c7e:	cmp    $0x5,%edx
   15c81:	jne    15c8f <png_set_crc_action+0xaf>
   15c83:	leaveq 
   15c84:	retq   
   15c85:	cmp    $0x1,%edx
   15c88:	je     15cb5 <png_set_crc_action+0xd5>
   15c8a:	cmp    $0x3,%edx
   15c8d:	je     15ccd <png_set_crc_action+0xed>
   15c8f:	mov    0x130(%rdi),%eax
   15c95:	and    $0xfffffcff,%eax
   15c9a:	mov    %eax,0x130(%rdi)
   15ca0:	leaveq 
   15ca1:	retq   
   15ca2:	mov    0x130(%rdi),%eax
   15ca8:	or     $0x300,%eax
   15cad:	mov    %eax,0x130(%rdi)
   15cb3:	leaveq 
   15cb4:	retq   
   15cb5:	mov    0x130(%rdi),%eax
   15cbb:	and    $0xfffffcff,%eax
   15cc0:	add    $0x200,%eax
   15cc5:	mov    %eax,0x130(%rdi)
   15ccb:	leaveq 
   15ccc:	retq   
   15ccd:	mov    0x130(%rdi),%eax
   15cd3:	and    $0xfffffcff,%eax
   15cd8:	add    $0x100,%eax
   15cdd:	mov    %eax,0x130(%rdi)
   15ce3:	leaveq 
   15ce4:	retq   
   15ce5:	data16 nopw %cs:0x0(%rax,%rax,1)

0000000000015cf0 <png_set_read_user_transform_fn>:
   15cf0:	push   %rbp
   15cf1:	mov    %rsp,%rbp
   15cf4:	mov    0x134(%rdi),%eax
   15cfa:	or     $0x100000,%eax
   15cff:	mov    %eax,0x134(%rdi)
   15d05:	mov    %rsi,0x110(%rdi)
   15d0c:	leaveq 
   15d0d:	retq   
   15d0e:	xchg   %ax,%ax

0000000000015d10 <png_read_transform_info>:
   15d10:	push   %rbp
   15d11:	mov    %rsp,%rbp
   15d14:	mov    0x134(%rdi),%eax
   15d1a:	mov    %rax,%rcx
   15d1d:	and    $0x1000,%ecx
   15d23:	test   %ecx,%ecx
   15d25:	jne    15df1 <png_read_transform_info+0xe1>
   15d2b:	mov    0x134(%rdi),%eax
   15d31:	and    $0x80,%eax
   15d36:	test   %eax,%eax
   15d38:	je     15d56 <png_read_transform_info+0x46>
   15d3a:	mov    0x27c(%rdi),%rax
   15d41:	mov    %rax,0xca(%rsi)
   15d48:	movzwl 0x284(%rdi),%eax
   15d4f:	mov    %ax,0xd2(%rsi)
   15d56:	movslq 0x498(%rdi),%rax
   15d5d:	mov    %eax,0x34(%rsi)
   15d60:	movzbl 0x24(%rsi),%eax
   15d64:	cmp    $0x10,%al
   15d66:	je     15e25 <png_read_transform_info+0x115>
   15d6c:	mov    0x134(%rdi),%eax
   15d72:	and    $0x4000,%eax
   15d77:	test   %eax,%eax
   15d79:	je     15d84 <png_read_transform_info+0x74>
   15d7b:	movzbl 0x25(%rsi),%eax
   15d7f:	or     $0x2,%al
   15d81:	mov    %al,0x25(%rsi)
   15d84:	mov    0x134(%rdi),%eax
   15d8a:	and    $0x600000,%eax
   15d8f:	test   %eax,%eax
   15d91:	je     15d9c <png_read_transform_info+0x8c>
   15d93:	movzbl 0x25(%rsi),%eax
   15d97:	and    $0xfd,%al
   15d99:	mov    %al,0x25(%rsi)
   15d9c:	mov    0x134(%rdi),%eax
   15da2:	and    $0x40,%eax
   15da5:	test   %eax,%eax
   15da7:	jne    15e54 <png_read_transform_info+0x144>
   15dad:	mov    0x134(%rdi),%eax
   15db3:	and    $0x200,%eax
   15db8:	test   %eax,%eax
   15dba:	jne    15e89 <png_read_transform_info+0x179>
   15dc0:	mov    0x134(%rdi),%eax
   15dc6:	and    $0x4,%eax
   15dc9:	test   %eax,%eax
   15dcb:	jne    15eaa <png_read_transform_info+0x19a>
   15dd1:	movzbl 0x25(%rsi),%eax
   15dd5:	cmp    $0x3,%al
   15dd7:	je     15ebf <png_read_transform_info+0x1af>
   15ddd:	and    $0x2,%eax
   15de0:	test   %eax,%eax
   15de2:	jg     15f43 <png_read_transform_info+0x233>
   15de8:	movb   $0x1,0x29(%rsi)
   15dec:	jmpq   15ec3 <png_read_transform_info+0x1b3>
   15df1:	movzbl 0x25(%rsi),%ecx
   15df5:	cmp    $0x3,%cl
   15df8:	je     15f4c <png_read_transform_info+0x23c>
   15dfe:	movzwl 0x260(%rdi),%edx
   15e05:	test   %dx,%dx
   15e08:	jne    15f66 <png_read_transform_info+0x256>
   15e0e:	movzbl 0x24(%rsi),%eax
   15e12:	cmp    $0x7,%al
   15e14:	ja     15e1a <png_read_transform_info+0x10a>
   15e16:	movb   $0x8,0x24(%rsi)
   15e1a:	movw   $0x0,0x22(%rsi)
   15e20:	jmpq   15d2b <png_read_transform_info+0x1b>
   15e25:	mov    0x134(%rdi),%eax
   15e2b:	and    $0x4000000,%eax
   15e30:	test   %eax,%eax
   15e32:	je     15e38 <png_read_transform_info+0x128>
   15e34:	movb   $0x8,0x24(%rsi)
   15e38:	mov    0x134(%rdi),%eax
   15e3e:	and    $0x400,%eax
   15e43:	test   %eax,%eax
   15e45:	je     15d6c <png_read_transform_info+0x5c>
   15e4b:	movb   $0x8,0x24(%rsi)
   15e4f:	jmpq   15d6c <png_read_transform_info+0x5c>
   15e54:	movzbl 0x25(%rsi),%eax
   15e58:	cmp    $0x2,%al
   15e5a:	je     15e64 <png_read_transform_info+0x154>
   15e5c:	cmp    $0x6,%al
   15e5e:	jne    15dad <png_read_transform_info+0x9d>
   15e64:	mov    0x378(%rdi),%rax
   15e6b:	test   %rax,%rax
   15e6e:	je     15dad <png_read_transform_info+0x9d>
   15e74:	movzbl 0x24(%rsi),%eax
   15e78:	cmp    $0x8,%al
   15e7a:	jne    15dad <png_read_transform_info+0x9d>
   15e80:	movb   $0x3,0x25(%rsi)
   15e84:	jmpq   15dad <png_read_transform_info+0x9d>
   15e89:	movzbl 0x24(%rsi),%eax
   15e8d:	cmp    $0x8,%al
   15e8f:	jne    15dc0 <png_read_transform_info+0xb0>
   15e95:	movzbl 0x25(%rsi),%eax
   15e99:	cmp    $0x3,%al
   15e9b:	je     15dc0 <png_read_transform_info+0xb0>
   15ea1:	movb   $0x10,0x24(%rsi)
   15ea5:	jmpq   15dc0 <png_read_transform_info+0xb0>
   15eaa:	movzbl 0x24(%rsi),%eax
   15eae:	cmp    $0x7,%al
   15eb0:	ja     15dd1 <png_read_transform_info+0xc1>
   15eb6:	movb   $0x8,0x24(%rsi)
   15eba:	jmpq   15dd1 <png_read_transform_info+0xc1>
   15ebf:	movb   $0x1,0x29(%rsi)
   15ec3:	mov    0x134(%rdi),%eax
   15ec9:	and    $0x40000,%eax
   15ece:	test   %eax,%eax
   15ed0:	je     15ee1 <png_read_transform_info+0x1d1>
   15ed2:	movzbl 0x25(%rsi),%eax
   15ed6:	and    $0xfb,%al
   15ed8:	mov    %al,0x25(%rsi)
   15edb:	movw   $0x0,0x22(%rsi)
   15ee1:	movzbl 0x25(%rsi),%eax
   15ee5:	and    $0x4,%eax
   15ee8:	test   %eax,%eax
   15eea:	jle    15ef6 <png_read_transform_info+0x1e6>
   15eec:	movzbl 0x29(%rsi),%eax
   15ef0:	add    $0x1,%eax
   15ef3:	mov    %al,0x29(%rsi)
   15ef6:	mov    0x134(%rdi),%eax
   15efc:	and    $0x8000,%eax
   15f01:	test   %eax,%eax
   15f03:	jne    15f7e <png_read_transform_info+0x26e>
   15f05:	mov    0x134(%rdi),%eax
   15f0b:	and    $0x100000,%eax
   15f10:	test   %eax,%eax
   15f12:	jne    15fb7 <png_read_transform_info+0x2a7>
   15f18:	movzbl 0x24(%rsi),%ecx
   15f1c:	movzbl 0x29(%rsi),%eax
   15f20:	imul   %cl
   15f22:	mov    %al,0x2a(%rsi)
   15f25:	cmp    $0x7,%al
   15f27:	ja     15fdc <png_read_transform_info+0x2cc>
   15f2d:	movzbl %al,%eax
   15f30:	mov    (%rsi),%ecx
   15f32:	imul   %rcx,%rax
   15f36:	add    $0x7,%rax
   15f3a:	shr    $0x3,%rax
   15f3e:	jmpq   15fe9 <png_read_transform_info+0x2d9>
   15f43:	movb   $0x3,0x29(%rsi)
   15f47:	jmpq   15ec3 <png_read_transform_info+0x1b3>
   15f4c:	movzwl 0x260(%rdi),%eax
   15f53:	test   %ax,%ax
   15f56:	jne    15ff6 <png_read_transform_info+0x2e6>
   15f5c:	mov    $0x2,%eax
   15f61:	jmpq   15ffb <png_read_transform_info+0x2eb>
   15f66:	and    $0x2000000,%eax
   15f6b:	test   %eax,%eax
   15f6d:	je     15e0e <png_read_transform_info+0xfe>
   15f73:	or     $0x4,%cl
   15f76:	mov    %cl,0x25(%rsi)
   15f79:	jmpq   15e0e <png_read_transform_info+0xfe>
   15f7e:	movzbl 0x25(%rsi),%ecx
   15f82:	cmp    $0x2,%cl
   15f85:	je     15f8f <png_read_transform_info+0x27f>
   15f87:	test   %cl,%cl
   15f89:	jne    15f05 <png_read_transform_info+0x1f5>
   15f8f:	movzbl 0x29(%rsi),%eax
   15f93:	add    $0x1,%eax
   15f96:	mov    %al,0x29(%rsi)
   15f99:	mov    0x134(%rdi),%eax
   15f9f:	and    $0x1000000,%eax
   15fa4:	test   %eax,%eax
   15fa6:	je     15f05 <png_read_transform_info+0x1f5>
   15fac:	or     $0x4,%cl
   15faf:	mov    %cl,0x25(%rsi)
   15fb2:	jmpq   15f05 <png_read_transform_info+0x1f5>
   15fb7:	movzbl 0x128(%rdi),%eax
   15fbe:	test   %al,%al
   15fc0:	je     15fc5 <png_read_transform_info+0x2b5>
   15fc2:	mov    %al,0x24(%rsi)
   15fc5:	movzbl 0x129(%rdi),%eax
   15fcc:	test   %al,%al
   15fce:	je     15f18 <png_read_transform_info+0x208>
   15fd4:	mov    %al,0x29(%rsi)
   15fd7:	jmpq   15f18 <png_read_transform_info+0x208>
   15fdc:	movzbl %al,%eax
   15fdf:	shr    $0x3,%rax
   15fe3:	mov    (%rsi),%ecx
   15fe5:	imul   %rcx,%rax
   15fe9:	mov    %rax,0x10(%rsi)
   15fed:	mov    %rax,0x240(%rdi)
   15ff4:	leaveq 
   15ff5:	retq   
   15ff6:	mov    $0x6,%eax
   15ffb:	movb   $0x8,0x24(%rsi)
   15fff:	movw   $0x0,0x22(%rsi)
   16005:	mov    %al,0x25(%rsi)
   16008:	mov    0x250(%rdi),%rax
   1600f:	test   %rax,%rax
   16012:	jne    15d2b <png_read_transform_info+0x1b>
   16018:	lea    0x1847e(%rip),%rsi        # 2e49d <chunks_to_process.34+0x698>
   1601f:	callq  5470 <png_error@plt>
   16024:	data16 nopw %cs:0x0(%rax,%rax,1)
   1602f:	nop

0000000000016030 <png_do_read_transformations>:
   16030:	push   %rbp
   16031:	mov    %rsp,%rbp
   16034:	sub    $0x40,%rsp
   16038:	mov    %r14,-0x30(%rbp)
   1603c:	mov    %r15,-0x38(%rbp)
   16040:	mov    0x228(%rdi),%r8
   16047:	test   %r8,%r8
   1604a:	je     163b2 <png_do_read_transformations+0x382>
   16050:	mov    0x130(%rdi),%eax
   16056:	mov    %rax,%rcx
   16059:	and    $0x4000,%ecx
   1605f:	test   %ecx,%ecx
   16061:	jne    163be <png_do_read_transformations+0x38e>
   16067:	xor    %edx,%edx
   16069:	mov    0x134(%rdi),%eax
   1606f:	mov    %rax,%rcx
   16072:	and    $0x1000,%ecx
   16078:	test   %ecx,%ecx
   1607a:	jne    163d5 <png_do_read_transformations+0x3a5>
   16080:	mov    %r14,%rcx
   16083:	mov    %rsi,%r14
   16086:	mov    %r15,%r8
   16089:	mov    %r13,%r15
   1608c:	mov    %r12,%r13
   1608f:	mov    %rbx,%r12
   16092:	mov    %rdi,%rbx
   16095:	mov    0x134(%rbx),%eax
   1609b:	mov    %rax,%rsi
   1609e:	and    $0x40000,%esi
   160a4:	test   %esi,%esi
   160a6:	jne    16431 <png_do_read_transformations+0x401>
   160ac:	mov    0x134(%rbx),%eax
   160b2:	and    $0x600000,%eax
   160b7:	test   %eax,%eax
   160b9:	jne    16483 <png_do_read_transformations+0x453>
   160bf:	mov    0x134(%rbx),%eax
   160c5:	and    $0x4000,%eax
   160ca:	test   %eax,%eax
   160cc:	jne    164bf <png_do_read_transformations+0x48f>
   160d2:	mov    0x134(%rbx),%eax
   160d8:	and    $0x80,%eax
   160dd:	test   %eax,%eax
   160df:	je     16110 <png_do_read_transformations+0xe0>
   160e1:	mov    0x228(%rbx),%rsi
   160e8:	add    $0x1,%rsi
   160ec:	mov    %r14,%rdi
   160ef:	mov    %rbx,%rax
   160f2:	mov    %r15,-0x10(%rbp)
   160f6:	mov    %rdx,%r15
   160f9:	mov    %rax,%rdx
   160fc:	callq  18b30 <png_do_compose>
   16101:	mov    %r15,%rdx
   16104:	mov    -0x38(%rbp),%r8
   16108:	mov    -0x30(%rbp),%rcx
   1610c:	mov    -0x10(%rbp),%r15
   16110:	mov    0x134(%rbx),%eax
   16116:	mov    %rax,%rsi
   16119:	and    $0x2000,%esi
   1611f:	test   %esi,%esi
   16121:	jne    16500 <png_do_read_transformations+0x4d0>
   16127:	mov    0x134(%rbx),%eax
   1612d:	mov    %rax,%rsi
   16130:	and    $0x40000,%esi
   16136:	test   %esi,%esi
   16138:	jne    16561 <png_do_read_transformations+0x531>
   1613e:	mov    0x134(%rbx),%eax
   16144:	and    $0x800000,%eax
   16149:	test   %eax,%eax
   1614b:	jne    1659f <png_do_read_transformations+0x56f>
   16151:	mov    0x134(%rbx),%eax
   16157:	and    $0x4000000,%eax
   1615c:	test   %eax,%eax
   1615e:	je     1617b <png_do_read_transformations+0x14b>
   16160:	mov    0x228(%rbx),%rsi
   16167:	add    $0x1,%rsi
   1616b:	mov    %r14,%rdi
   1616e:	callq  17ec0 <png_do_scale_16_to_8>
   16173:	mov    -0x38(%rbp),%r8
   16177:	mov    -0x30(%rbp),%rcx
   1617b:	mov    0x134(%rbx),%eax
   16181:	and    $0x400,%eax
   16186:	test   %eax,%eax
   16188:	je     161a5 <png_do_read_transformations+0x175>
   1618a:	mov    0x228(%rbx),%rsi
   16191:	add    $0x1,%rsi
   16195:	mov    %r14,%rdi
   16198:	callq  17f30 <png_do_chop>
   1619d:	mov    -0x38(%rbp),%r8
   161a1:	mov    -0x30(%rbp),%rcx
   161a5:	mov    0x134(%rbx),%eax
   161ab:	and    $0x40,%eax
   161ae:	test   %eax,%eax
   161b0:	jne    165d2 <png_do_read_transformations+0x5a2>
   161b6:	mov    0x134(%rbx),%eax
   161bc:	and    $0x200,%eax
   161c1:	test   %eax,%eax
   161c3:	je     161e0 <png_do_read_transformations+0x1b0>
   161c5:	mov    0x228(%rbx),%rsi
   161cc:	add    $0x1,%rsi
   161d0:	mov    %r14,%rdi
   161d3:	callq  1add0 <png_do_expand_16>
   161d8:	mov    -0x38(%rbp),%r8
   161dc:	mov    -0x30(%rbp),%rcx
   161e0:	mov    0x134(%rbx),%eax
   161e6:	and    $0x4000,%eax
   161eb:	test   %eax,%eax
   161ed:	jne    1660d <png_do_read_transformations+0x5dd>
   161f3:	mov    0x134(%rbx),%eax
   161f9:	and    $0x20,%eax
   161fc:	test   %eax,%eax
   161fe:	je     1621b <png_do_read_transformations+0x1eb>
   16200:	mov    0x228(%rbx),%rsi
   16207:	add    $0x1,%rsi
   1620b:	mov    %r14,%rdi
   1620e:	callq  23a50 <png_do_invert>
   16213:	mov    -0x38(%rbp),%r8
   16217:	mov    -0x30(%rbp),%rcx
   1621b:	mov    0x134(%rbx),%eax
   16221:	and    $0x80000,%eax
   16226:	test   %eax,%eax
   16228:	je     16245 <png_do_read_transformations+0x215>
   1622a:	mov    0x228(%rbx),%rsi
   16231:	add    $0x1,%rsi
   16235:	mov    %r14,%rdi
   16238:	callq  18090 <png_do_read_invert_alpha>
   1623d:	mov    -0x38(%rbp),%r8
   16241:	mov    -0x30(%rbp),%rcx
   16245:	mov    0x134(%rbx),%eax
   1624b:	and    $0x8,%eax
   1624e:	test   %eax,%eax
   16250:	je     16274 <png_do_read_transformations+0x244>
   16252:	mov    0x228(%rbx),%rsi
   16259:	add    $0x1,%rsi
   1625d:	lea    0x2dd(%rbx),%rdx
   16264:	mov    %r14,%rdi
   16267:	callq  17ce0 <png_do_unshift>
   1626c:	mov    -0x38(%rbp),%r8
   16270:	mov    -0x30(%rbp),%rcx
   16274:	mov    0x134(%rbx),%eax
   1627a:	and    $0x4,%eax
   1627d:	test   %eax,%eax
   1627f:	je     1629c <png_do_read_transformations+0x26c>
   16281:	mov    0x228(%rbx),%rsi
   16288:	add    $0x1,%rsi
   1628c:	mov    %r14,%rdi
   1628f:	callq  17ba0 <png_do_unpack>
   16294:	mov    -0x38(%rbp),%r8
   16298:	mov    -0x30(%rbp),%rcx
   1629c:	movzbl 0x10(%r14),%eax
   162a1:	cmp    $0x3,%al
   162a3:	je     16640 <png_do_read_transformations+0x610>
   162a9:	mov    0x134(%rbx),%eax
   162af:	and    $0x1,%eax
   162b2:	test   %eax,%eax
   162b4:	je     162d1 <png_do_read_transformations+0x2a1>
   162b6:	mov    0x228(%rbx),%rsi
   162bd:	add    $0x1,%rsi
   162c1:	mov    %r14,%rdi
   162c4:	callq  23ae0 <png_do_bgr>
   162c9:	mov    -0x38(%rbp),%r8
   162cd:	mov    -0x30(%rbp),%rcx
   162d1:	mov    0x134(%rbx),%eax
   162d7:	and    $0x10000,%eax
   162dc:	test   %eax,%eax
   162de:	je     162fb <png_do_read_transformations+0x2cb>
   162e0:	mov    0x228(%rbx),%rsi
   162e7:	add    $0x1,%rsi
   162eb:	mov    %r14,%rdi
   162ee:	callq  239f0 <png_do_packswap>
   162f3:	mov    -0x38(%rbp),%r8
   162f7:	mov    -0x30(%rbp),%rcx
   162fb:	mov    0x134(%rbx),%eax
   16301:	and    $0x8000,%eax
   16306:	test   %eax,%eax
   16308:	je     16332 <png_do_read_transformations+0x302>
   1630a:	mov    0x228(%rbx),%rsi
   16311:	add    $0x1,%rsi
   16315:	movzwl 0x272(%rbx),%edx
   1631c:	mov    0x130(%rbx),%ecx
   16322:	mov    %r14,%rdi
   16325:	callq  18150 <png_do_read_filler>
   1632a:	mov    -0x38(%rbp),%r8
   1632e:	mov    -0x30(%rbp),%rcx
   16332:	mov    0x134(%rbx),%eax
   16338:	and    $0x20000,%eax
   1633d:	test   %eax,%eax
   1633f:	je     1635c <png_do_read_transformations+0x32c>
   16341:	mov    0x228(%rbx),%rsi
   16348:	add    $0x1,%rsi
   1634c:	mov    %r14,%rdi
   1634f:	callq  17f80 <png_do_read_swap_alpha>
   16354:	mov    -0x38(%rbp),%r8
   16358:	mov    -0x30(%rbp),%rcx
   1635c:	mov    0x134(%rbx),%eax
   16362:	and    $0x10,%eax
   16365:	test   %eax,%eax
   16367:	je     1638e <png_do_read_transformations+0x35e>
   16369:	mov    0x228(%rbx),%rsi
   16370:	add    $0x1,%rsi
   16374:	mov    %r14,%rdi
   16377:	mov    %r14,-0x8(%rbp)
   1637b:	mov    %rcx,%r14
   1637e:	callq  239b0 <png_do_swap>
   16383:	mov    %r14,%rcx
   16386:	mov    -0x8(%rbp),%r14
   1638a:	mov    -0x38(%rbp),%r8
   1638e:	mov    0x134(%rbx),%eax
   16394:	and    $0x100000,%eax
   16399:	test   %eax,%eax
   1639b:	jne    16667 <png_do_read_transformations+0x637>
   163a1:	mov    %r12,%rbx
   163a4:	mov    %r13,%r12
   163a7:	mov    %r15,%r13
   163aa:	mov    %r8,%r15
   163ad:	mov    %rcx,%r14
   163b0:	leaveq 
   163b1:	retq   
   163b2:	lea    0x18105(%rip),%rsi        # 2e4be <chunks_to_process.34+0x6b9>
   163b9:	callq  5470 <png_error@plt>
   163be:	and    $0x40,%eax
   163c1:	test   %eax,%eax
   163c3:	jne    16067 <png_do_read_transformations+0x37>
   163c9:	lea    0x180fe(%rip),%rsi        # 2e4ce <chunks_to_process.34+0x6c9>
   163d0:	callq  5470 <png_error@plt>
   163d5:	movzbl 0x10(%rsi),%ecx
   163d9:	cmp    $0x3,%cl
   163dc:	je     166db <png_do_read_transformations+0x6ab>
   163e2:	movzwl 0x260(%rdi),%ecx
   163e9:	test   %cx,%cx
   163ec:	jne    1672d <png_do_read_transformations+0x6fd>
   163f2:	add    $0x1,%r8
   163f6:	mov    %rsi,%rax
   163f9:	mov    %rdx,%rcx
   163fc:	mov    %r13,-0x28(%rbp)
   16400:	mov    %r12,%r13
   16403:	mov    %rbx,%r12
   16406:	mov    %rdi,%rbx
   16409:	mov    %rax,%rdi
   1640c:	mov    %rsi,%r14
   1640f:	mov    %r8,%rsi
   16412:	mov    %rdx,%r15
   16415:	mov    %rcx,%rdx
   16418:	callq  1a870 <png_do_expand>
   1641d:	mov    %r15,%rdx
   16420:	mov    -0x38(%rbp),%r8
   16424:	mov    -0x30(%rbp),%rcx
   16428:	mov    -0x28(%rbp),%r15
   1642c:	jmpq   16095 <png_do_read_transformations+0x65>
   16431:	and    $0x80,%eax
   16436:	test   %eax,%eax
   16438:	jne    160ac <png_do_read_transformations+0x7c>
   1643e:	movzbl 0x10(%r14),%eax
   16443:	cmp    $0x6,%al
   16445:	je     1644f <png_do_read_transformations+0x41f>
   16447:	cmp    $0x4,%al
   16449:	jne    160ac <png_do_read_transformations+0x7c>
   1644f:	mov    0x228(%rbx),%rsi
   16456:	add    $0x1,%rsi
   1645a:	mov    %r14,%rdi
   1645d:	mov    %rdx,%rax
   16460:	mov    %r15,-0x20(%rbp)
   16464:	mov    %rdx,%r15
   16467:	mov    %rax,%rdx
   1646a:	callq  23840 <png_do_strip_channel>
   1646f:	mov    %r15,%rdx
   16472:	mov    -0x38(%rbp),%r8
   16476:	mov    -0x30(%rbp),%rcx
   1647a:	mov    -0x20(%rbp),%r15
   1647e:	jmpq   160ac <png_do_read_transformations+0x7c>
   16483:	mov    0x228(%rbx),%rax
   1648a:	add    $0x1,%rax
   1648e:	mov    %rbx,%rdi
   16491:	mov    %r14,%rsi
   16494:	mov    %r15,-0x18(%rbp)
   16498:	mov    %rdx,%r15
   1649b:	mov    %rax,%rdx
   1649e:	callq  18620 <png_do_rgb_to_gray>
   164a3:	test   %eax,%eax
   164a5:	jne    1677d <png_do_read_transformations+0x74d>
   164ab:	mov    %r15,%rdx
   164ae:	mov    -0x38(%rbp),%r8
   164b2:	mov    -0x30(%rbp),%rcx
   164b6:	mov    -0x18(%rbp),%r15
   164ba:	jmpq   160bf <png_do_read_transformations+0x8f>
   164bf:	mov    0x12c(%rbx),%eax
   164c5:	and    $0x800,%eax
   164ca:	test   %eax,%eax
   164cc:	jne    160d2 <png_do_read_transformations+0xa2>
   164d2:	mov    0x228(%rbx),%rsi
   164d9:	add    $0x1,%rsi
   164dd:	mov    %r14,%rdi
   164e0:	mov    %r15,-0x18(%rbp)
   164e4:	mov    %rdx,%r15
   164e7:	callq  18470 <png_do_gray_to_rgb>
   164ec:	mov    %r15,%rdx
   164ef:	mov    -0x38(%rbp),%r8
   164f3:	mov    -0x30(%rbp),%rcx
   164f7:	mov    -0x18(%rbp),%r15
   164fb:	jmpq   160d2 <png_do_read_transformations+0xa2>
   16500:	mov    %rax,%rsi
   16503:	and    $0x600000,%esi
   16509:	test   %esi,%esi
   1650b:	jne    16127 <png_do_read_transformations+0xf7>
   16511:	and    $0x80,%eax
   16516:	test   %eax,%eax
   16518:	jne    167a2 <png_do_read_transformations+0x772>
   1651e:	movzbl 0x267(%rbx),%eax
   16525:	cmp    $0x3,%al
   16527:	je     16127 <png_do_read_transformations+0xf7>
   1652d:	mov    0x228(%rbx),%rsi
   16534:	add    $0x1,%rsi
   16538:	mov    %r14,%rdi
   1653b:	mov    %rbx,%rax
   1653e:	mov    %r15,-0x10(%rbp)
   16542:	mov    %rdx,%r15
   16545:	mov    %rax,%rdx
   16548:	callq  1a0b0 <png_do_gamma>
   1654d:	mov    %r15,%rdx
   16550:	mov    -0x38(%rbp),%r8
   16554:	mov    -0x30(%rbp),%rcx
   16558:	mov    -0x10(%rbp),%r15
   1655c:	jmpq   16127 <png_do_read_transformations+0xf7>
   16561:	and    $0x80,%eax
   16566:	test   %eax,%eax
   16568:	je     1613e <png_do_read_transformations+0x10e>
   1656e:	movzbl 0x10(%r14),%eax
   16573:	cmp    $0x6,%al
   16575:	je     1657f <png_do_read_transformations+0x54f>
   16577:	cmp    $0x4,%al
   16579:	jne    1613e <png_do_read_transformations+0x10e>
   1657f:	mov    0x228(%rbx),%rsi
   16586:	add    $0x1,%rsi
   1658a:	mov    %r14,%rdi
   1658d:	callq  23840 <png_do_strip_channel>
   16592:	mov    -0x38(%rbp),%r8
   16596:	mov    -0x30(%rbp),%rcx
   1659a:	jmpq   1613e <png_do_read_transformations+0x10e>
   1659f:	movzbl 0x10(%r14),%eax
   165a4:	and    $0x4,%eax
   165a7:	test   %eax,%eax
   165a9:	jle    16151 <png_do_read_transformations+0x121>
   165af:	mov    0x228(%rbx),%rsi
   165b6:	add    $0x1,%rsi
   165ba:	mov    %r14,%rdi
   165bd:	mov    %rbx,%rdx
   165c0:	callq  1a470 <png_do_encode_alpha>
   165c5:	mov    -0x38(%rbp),%r8
   165c9:	mov    -0x30(%rbp),%rcx
   165cd:	jmpq   16151 <png_do_read_transformations+0x121>
   165d2:	mov    0x228(%rbx),%rsi
   165d9:	add    $0x1,%rsi
   165dd:	mov    0x378(%rbx),%rdx
   165e4:	mov    0x380(%rbx),%rcx
   165eb:	mov    %r14,%rdi
   165ee:	callq  1ae30 <png_do_quantize>
   165f3:	mov    0x8(%r14),%rax
   165f7:	test   %rax,%rax
   165fa:	je     167c9 <png_do_read_transformations+0x799>
   16600:	mov    -0x38(%rbp),%r8
   16604:	mov    -0x30(%rbp),%rcx
   16608:	jmpq   161b6 <png_do_read_transformations+0x186>
   1660d:	mov    0x12c(%rbx),%eax
   16613:	and    $0x800,%eax
   16618:	test   %eax,%eax
   1661a:	je     161f3 <png_do_read_transformations+0x1c3>
   16620:	mov    0x228(%rbx),%rsi
   16627:	add    $0x1,%rsi
   1662b:	mov    %r14,%rdi
   1662e:	callq  18470 <png_do_gray_to_rgb>
   16633:	mov    -0x38(%rbp),%r8
   16637:	mov    -0x30(%rbp),%rcx
   1663b:	jmpq   161f3 <png_do_read_transformations+0x1c3>
   16640:	movslq 0x25c(%rbx),%rax
   16647:	test   %eax,%eax
   16649:	js     162a9 <png_do_read_transformations+0x279>
   1664f:	mov    %rbx,%rdi
   16652:	mov    %r14,%rsi
   16655:	callq  23bb0 <png_do_check_palette_indexes>
   1665a:	mov    -0x38(%rbp),%r8
   1665e:	mov    -0x30(%rbp),%rcx
   16662:	jmpq   162a9 <png_do_read_transformations+0x279>
   16667:	mov    0x110(%rbx),%rax
   1666e:	test   %rax,%rax
   16671:	je     1668e <png_do_read_transformations+0x65e>
   16673:	mov    0x228(%rbx),%rdx
   1667a:	add    $0x1,%rdx
   1667e:	mov    %rbx,%rdi
   16681:	mov    %r14,%rsi
   16684:	callq  *%rax
   16686:	mov    -0x38(%rbp),%r8
   1668a:	mov    -0x30(%rbp),%rcx
   1668e:	movzbl 0x128(%rbx),%eax
   16695:	test   %al,%al
   16697:	je     1669d <png_do_read_transformations+0x66d>
   16699:	mov    %al,0x11(%r14)
   1669d:	movzbl 0x129(%rbx),%eax
   166a4:	test   %al,%al
   166a6:	je     166ac <png_do_read_transformations+0x67c>
   166a8:	mov    %al,0x12(%r14)
   166ac:	movzbl 0x12(%r14),%edx
   166b1:	movzbl 0x11(%r14),%eax
   166b6:	imul   %dl
   166b8:	mov    %al,0x13(%r14)
   166bc:	cmp    $0x7,%al
   166be:	ja     167d8 <png_do_read_transformations+0x7a8>
   166c4:	movzbl %al,%eax
   166c7:	mov    (%r14),%edx
   166ca:	imul   %rdx,%rax
   166ce:	add    $0x7,%rax
   166d2:	shr    $0x3,%rax
   166d6:	jmpq   167e6 <png_do_read_transformations+0x7b6>
   166db:	lea    0x1(%r8),%rax
   166df:	mov    0x250(%rdi),%r9
   166e6:	mov    0x2e8(%rdi),%rcx
   166ed:	movzwl 0x260(%rdi),%r8d
   166f5:	mov    %rsi,%r10
   166f8:	mov    %r13,-0x20(%rbp)
   166fc:	mov    %r12,%r13
   166ff:	mov    %rbx,%r12
   16702:	mov    %rdi,%rbx
   16705:	mov    %r10,%rdi
   16708:	mov    %rsi,%r14
   1670b:	mov    %rax,%rsi
   1670e:	mov    %rdx,%r15
   16711:	mov    %r9,%rdx
   16714:	callq  1a550 <png_do_expand_palette>
   16719:	mov    %r15,%rdx
   1671c:	mov    -0x38(%rbp),%r8
   16720:	mov    -0x30(%rbp),%rcx
   16724:	mov    -0x20(%rbp),%r15
   16728:	jmpq   16095 <png_do_read_transformations+0x65>
   1672d:	and    $0x2000000,%eax
   16732:	test   %eax,%eax
   16734:	je     163f2 <png_do_read_transformations+0x3c2>
   1673a:	lea    0x1(%r8),%rcx
   1673e:	lea    0x2f0(%rdi),%r8
   16745:	mov    %rsi,%rax
   16748:	mov    %r13,-0x28(%rbp)
   1674c:	mov    %r12,%r13
   1674f:	mov    %rbx,%r12
   16752:	mov    %rdi,%rbx
   16755:	mov    %rax,%rdi
   16758:	mov    %rsi,%r14
   1675b:	mov    %rcx,%rsi
   1675e:	mov    %rdx,%r15
   16761:	mov    %r8,%rdx
   16764:	callq  1a870 <png_do_expand>
   16769:	mov    %r15,%rdx
   1676c:	mov    -0x38(%rbp),%r8
   16770:	mov    -0x30(%rbp),%rcx
   16774:	mov    -0x28(%rbp),%r15
   16778:	jmpq   16095 <png_do_read_transformations+0x65>
   1677d:	movb   $0x1,0x3d0(%rbx)
   16784:	lea    0x17d55(%rip),%rsi        # 2e4e0 <chunks_to_process.34+0x6db>
   1678b:	mov    0x134(%rbx),%eax
   16791:	and    $0x600000,%eax
   16796:	cmp    $0x400000,%eax
   1679b:	je     167fb <png_do_read_transformations+0x7cb>
   1679d:	mov    %r15,%rdx
   167a0:	jmp    1681a <png_do_read_transformations+0x7ea>
   167a2:	movzwl 0x260(%rbx),%eax
   167a9:	test   %ax,%ax
   167ac:	jne    16127 <png_do_read_transformations+0xf7>
   167b2:	movzbl 0x267(%rbx),%eax
   167b9:	and    $0x4,%eax
   167bc:	test   %eax,%eax
   167be:	jg     16127 <png_do_read_transformations+0xf7>
   167c4:	jmpq   1651e <png_do_read_transformations+0x4ee>
   167c9:	mov    %rbx,%rdi
   167cc:	lea    0x17d34(%rip),%rsi        # 2e507 <chunks_to_process.34+0x702>
   167d3:	callq  5470 <png_error@plt>
   167d8:	movzbl %al,%eax
   167db:	shr    $0x3,%rax
   167df:	mov    (%r14),%edx
   167e2:	imul   %rdx,%rax
   167e6:	mov    %rax,0x8(%r14)
   167ea:	mov    %r12,%rbx
   167ed:	mov    %r13,%r12
   167f0:	mov    %r15,%r13
   167f3:	mov    %r8,%r15
   167f6:	mov    %rcx,%r14
   167f9:	leaveq 
   167fa:	retq   
   167fb:	mov    %rbx,%rdi
   167fe:	mov    %rsi,%rax
   16801:	mov    %r13,-0x8(%rbp)
   16805:	mov    %rsi,%r13
   16808:	mov    %rax,%rsi
   1680b:	callq  5390 <png_warning@plt>
   16810:	mov    %r15,%rdx
   16813:	mov    %r13,%rsi
   16816:	mov    -0x8(%rbp),%r13
   1681a:	mov    0x134(%rbx),%eax
   16820:	and    $0x600000,%eax
   16825:	cmp    $0x200000,%eax
   1682a:	je     1683d <png_do_read_transformations+0x80d>
   1682c:	mov    -0x38(%rbp),%r8
   16830:	mov    -0x30(%rbp),%rcx
   16834:	mov    -0x18(%rbp),%r15
   16838:	jmpq   160bf <png_do_read_transformations+0x8f>
   1683d:	mov    %rbx,%rdi
   16840:	callq  5470 <png_error@plt>
   16845:	data16 nopw %cs:0x0(%rax,%rax,1)

0000000000016850 <png_init_read_transformations>:
   16850:	push   %rbp
   16851:	mov    %rsp,%rbp
   16854:	sub    $0x60,%rsp
   16858:	mov    %r15,-0x50(%rbp)
   1685c:	xor    %eax,%eax
   1685e:	movslq 0x498(%rdi),%rcx
   16865:	test   %ecx,%ecx
   16867:	jne    16899 <png_init_read_transformations+0x49>
   16869:	movslq 0x2a4(%rdi),%rcx
   16870:	test   %ecx,%ecx
   16872:	jne    168ce <png_init_read_transformations+0x7e>
   16874:	mov    %r14,%r15
   16877:	mov    %r13,%r14
   1687a:	mov    %r12,%r13
   1687d:	mov    %rbx,%r12
   16880:	mov    %rdi,%rbx
   16883:	movl   $0x186a0,0x498(%rbx)
   1688d:	movl   $0x186a0,0x2a4(%rbx)
   16897:	jmp    1690f <png_init_read_transformations+0xbf>
   16899:	movslq 0x2a4(%rdi),%rsi
   168a0:	test   %esi,%esi
   168a2:	jne    168f8 <png_init_read_transformations+0xa8>
   168a4:	mov    %r14,-0x48(%rbp)
   168a8:	mov    %r13,%r14
   168ab:	mov    %r12,%r13
   168ae:	mov    %rbx,%r12
   168b1:	mov    %rdi,%rbx
   168b4:	mov    %rcx,%rdi
   168b7:	mov    %rax,%r15
   168ba:	callq  8a40 <png_reciprocal>
   168bf:	mov    %eax,0x2a4(%rbx)
   168c5:	mov    %r15,%rax
   168c8:	mov    -0x48(%rbp),%r15
   168cc:	jmp    1690f <png_init_read_transformations+0xbf>
   168ce:	mov    %r14,-0x48(%rbp)
   168d2:	mov    %r13,%r14
   168d5:	mov    %r12,%r13
   168d8:	mov    %rbx,%r12
   168db:	mov    %rdi,%rbx
   168de:	mov    %rcx,%rdi
   168e1:	mov    %rax,%r15
   168e4:	callq  8a40 <png_reciprocal>
   168e9:	mov    %eax,0x498(%rbx)
   168ef:	mov    %r15,%rax
   168f2:	mov    -0x48(%rbp),%r15
   168f6:	jmp    1690f <png_init_read_transformations+0xbf>
   168f8:	mov    %r14,%r15
   168fb:	mov    %r13,%r14
   168fe:	mov    %r12,%r13
   16901:	mov    %rbx,%r12
   16904:	mov    %rdi,%rbx
   16907:	mov    %rcx,%rdi
   1690a:	callq  178d0 <png_gamma_threshold>
   1690f:	movzwl 0x4e2(%rbx),%ecx
   16916:	or     $0x1,%cx
   1691a:	mov    %cx,0x4e2(%rbx)
   16921:	test   %eax,%eax
   16923:	jne    16932 <png_init_read_transformations+0xe2>
   16925:	mov    0x134(%rbx),%eax
   1692b:	and    $0xffffdfff,%eax
   16930:	jmp    1693d <png_init_read_transformations+0xed>
   16932:	mov    0x134(%rbx),%eax
   16938:	or     $0x2000,%eax
   1693d:	mov    %eax,0x134(%rbx)
   16943:	mov    %rax,%rcx
   16946:	and    $0x40000,%ecx
   1694c:	test   %ecx,%ecx
   1694e:	jne    16a0f <png_init_read_transformations+0x1bf>
   16954:	movslq 0x2a4(%rbx),%rdi
   1695b:	callq  8b10 <png_gamma_significant>
   16960:	test   %eax,%eax
   16962:	jne    16986 <png_init_read_transformations+0x136>
   16964:	mov    0x134(%rbx),%eax
   1696a:	and    $0xff7fffff,%eax
   1696f:	mov    %eax,0x134(%rbx)
   16975:	mov    0x130(%rbx),%eax
   1697b:	and    $0xffffdfff,%eax
   16980:	mov    %eax,0x130(%rbx)
   16986:	mov    0x134(%rbx),%eax
   1698c:	and    $0x600000,%eax
   16991:	test   %eax,%eax
   16993:	je     1699d <png_init_read_transformations+0x14d>
   16995:	mov    %rbx,%rdi
   16998:	callq  7b90 <png_colorspace_set_rgb_coefficients>
   1699d:	mov    0x134(%rbx),%eax
   169a3:	mov    %rax,%rcx
   169a6:	and    $0x100,%ecx
   169ac:	test   %ecx,%ecx
   169ae:	jne    16a4a <png_init_read_transformations+0x1fa>
   169b4:	mov    %rax,%rcx
   169b7:	and    $0x80,%ecx
   169bd:	test   %ecx,%ecx
   169bf:	je     16a69 <png_init_read_transformations+0x219>
   169c5:	and    $0x4000,%eax
   169ca:	test   %eax,%eax
   169cc:	je     16a69 <png_init_read_transformations+0x219>
   169d2:	movzwl 0x27e(%rbx),%ecx
   169d9:	movzwl 0x280(%rbx),%eax
   169e0:	cmp    %cx,%ax
   169e3:	jne    16a69 <png_init_read_transformations+0x219>
   169e9:	movzwl 0x282(%rbx),%eax
   169f0:	cmp    %ax,%cx
   169f3:	jne    16a69 <png_init_read_transformations+0x219>
   169f5:	mov    0x12c(%rbx),%eax
   169fb:	or     $0x800,%eax
   16a00:	mov    %eax,0x12c(%rbx)
   16a06:	mov    %cx,0x284(%rbx)
   16a0d:	jmp    16a69 <png_init_read_transformations+0x219>
   16a0f:	mov    %rax,%rcx
   16a12:	and    $0x80,%ecx
   16a18:	test   %ecx,%ecx
   16a1a:	jne    16954 <png_init_read_transformations+0x104>
   16a20:	and    $0xfd7ffeff,%eax
   16a25:	mov    %eax,0x134(%rbx)
   16a2b:	mov    0x130(%rbx),%eax
   16a31:	and    $0xffffdfff,%eax
   16a36:	mov    %eax,0x130(%rbx)
   16a3c:	movw   $0x0,0x260(%rbx)
   16a45:	jmpq   16954 <png_init_read_transformations+0x104>
   16a4a:	movzbl 0x267(%rbx),%eax
   16a51:	and    $0x2,%eax
   16a54:	test   %eax,%eax
   16a56:	jne    16a69 <png_init_read_transformations+0x219>
   16a58:	mov    0x12c(%rbx),%eax
   16a5e:	or     $0x800,%eax
   16a63:	mov    %eax,0x12c(%rbx)
   16a69:	movzbl 0x267(%rbx),%eax
   16a70:	cmp    $0x3,%al
   16a72:	je     16a7e <png_init_read_transformations+0x22e>
   16a74:	mov    %rbx,%rdi
   16a77:	callq  17a50 <png_init_rgb_transformations>
   16a7c:	jmp    16a86 <png_init_read_transformations+0x236>
   16a7e:	mov    %rbx,%rdi
   16a81:	callq  17910 <png_init_palette_transformations>
   16a86:	mov    0x134(%rbx),%eax
   16a8c:	mov    %rax,%rcx
   16a8f:	and    $0x200,%ecx
   16a95:	test   %ecx,%ecx
   16a97:	jne    16b7a <png_init_read_transformations+0x32a>
   16a9d:	mov    0x134(%rbx),%eax
   16aa3:	mov    %rax,%rcx
   16aa6:	and    $0x4000400,%ecx
   16aac:	test   %ecx,%ecx
   16aae:	jne    16c24 <png_init_read_transformations+0x3d4>
   16ab4:	mov    0x27c(%rbx),%rax
   16abb:	mov    %rax,0x286(%rbx)
   16ac2:	movzwl 0x284(%rbx),%eax
   16ac9:	mov    %ax,0x28e(%rbx)
   16ad0:	mov    $0xff,%eax
   16ad5:	mov    0x134(%rbx),%ecx
   16adb:	mov    %rcx,%rdx
   16ade:	and    $0x2000,%edx
   16ae4:	test   %edx,%edx
   16ae6:	jne    16cae <png_init_read_transformations+0x45e>
   16aec:	and    $0x600000,%ecx
   16af2:	test   %ecx,%ecx
   16af4:	jne    16d0a <png_init_read_transformations+0x4ba>
   16afa:	mov    0x134(%rbx),%ecx
   16b00:	and    $0x80,%ecx
   16b06:	test   %ecx,%ecx
   16b08:	jne    16d34 <png_init_read_transformations+0x4e4>
   16b0e:	mov    0x134(%rbx),%ecx
   16b14:	and    $0x800000,%ecx
   16b1a:	test   %ecx,%ecx
   16b1c:	jne    16d75 <png_init_read_transformations+0x525>
   16b22:	mov    0x134(%rbx),%ecx
   16b28:	and    $0x80,%ecx
   16b2e:	test   %ecx,%ecx
   16b30:	je     16ce4 <png_init_read_transformations+0x494>
   16b36:	movzbl 0x267(%rbx),%ecx
   16b3d:	cmp    $0x3,%cl
   16b40:	jne    16ce4 <png_init_read_transformations+0x494>
   16b46:	mov    0x250(%rbx),%r8
   16b4d:	movzwl 0x260(%rbx),%r9d
   16b55:	movzbl 0x27e(%rbx),%ecx
   16b5c:	mov    %cl,-0x53(%rbp)
   16b5f:	movzbl 0x280(%rbx),%ecx
   16b66:	mov    %cl,-0x52(%rbp)
   16b69:	movzbl 0x282(%rbx),%ecx
   16b70:	mov    %cl,-0x51(%rbp)
   16b73:	xor    %ecx,%ecx
   16b75:	jmpq   16dac <png_init_read_transformations+0x55c>
   16b7a:	mov    %rax,%rcx
   16b7d:	and    $0x80,%ecx
   16b83:	test   %ecx,%ecx
   16b85:	je     16a9d <png_init_read_transformations+0x24d>
   16b8b:	and    $0x100,%eax
   16b90:	test   %eax,%eax
   16b92:	jne    16a9d <png_init_read_transformations+0x24d>
   16b98:	movzbl 0x268(%rbx),%eax
   16b9f:	cmp    $0x10,%al
   16ba1:	je     16a9d <png_init_read_transformations+0x24d>
   16ba7:	movzwl 0x27e(%rbx),%ecx
   16bae:	mov    %rcx,%rax
   16bb1:	shl    $0x8,%eax
   16bb4:	sub    %ecx,%eax
   16bb6:	add    $0x807f,%eax
   16bbb:	shr    $0x10,%eax
   16bbe:	mov    %ax,0x27e(%rbx)
   16bc5:	movzwl 0x280(%rbx),%ecx
   16bcc:	mov    %rcx,%rax
   16bcf:	shl    $0x8,%eax
   16bd2:	sub    %ecx,%eax
   16bd4:	add    $0x807f,%eax
   16bd9:	shr    $0x10,%eax
   16bdc:	mov    %ax,0x280(%rbx)
   16be3:	movzwl 0x282(%rbx),%ecx
   16bea:	mov    %rcx,%rax
   16bed:	shl    $0x8,%eax
   16bf0:	sub    %ecx,%eax
   16bf2:	add    $0x807f,%eax
   16bf7:	shr    $0x10,%eax
   16bfa:	mov    %ax,0x282(%rbx)
   16c01:	movzwl 0x284(%rbx),%ecx
   16c08:	mov    %rcx,%rax
   16c0b:	shl    $0x8,%eax
   16c0e:	sub    %ecx,%eax
   16c10:	add    $0x807f,%eax
   16c15:	shr    $0x10,%eax
   16c18:	mov    %ax,0x284(%rbx)
   16c1f:	jmpq   16a9d <png_init_read_transformations+0x24d>
   16c24:	mov    %rax,%rcx
   16c27:	and    $0x80,%ecx
   16c2d:	test   %ecx,%ecx
   16c2f:	je     16ab4 <png_init_read_transformations+0x264>
   16c35:	and    $0x100,%eax
   16c3a:	test   %eax,%eax
   16c3c:	jne    16ab4 <png_init_read_transformations+0x264>
   16c42:	movzbl 0x268(%rbx),%eax
   16c49:	cmp    $0x10,%al
   16c4b:	jne    16ab4 <png_init_read_transformations+0x264>
   16c51:	movzwl 0x27e(%rbx),%ecx
   16c58:	mov    %rcx,%rax
   16c5b:	shl    $0x8,%eax
   16c5e:	add    %ecx,%eax
   16c60:	mov    %ax,0x27e(%rbx)
   16c67:	movzwl 0x280(%rbx),%ecx
   16c6e:	mov    %rcx,%rax
   16c71:	shl    $0x8,%eax
   16c74:	add    %ecx,%eax
   16c76:	mov    %ax,0x280(%rbx)
   16c7d:	movzwl 0x282(%rbx),%ecx
   16c84:	mov    %rcx,%rax
   16c87:	shl    $0x8,%eax
   16c8a:	add    %ecx,%eax
   16c8c:	mov    %ax,0x282(%rbx)
   16c93:	movzwl 0x284(%rbx),%ecx
   16c9a:	mov    %rcx,%rax
   16c9d:	shl    $0x8,%eax
   16ca0:	add    %ecx,%eax
   16ca2:	mov    %ax,0x284(%rbx)
   16ca9:	jmpq   16ab4 <png_init_read_transformations+0x264>
   16cae:	movzbl 0x268(%rbx),%esi
   16cb5:	mov    %rbx,%rdi
   16cb8:	callq  8e10 <png_build_gamma_table>
   16cbd:	mov    0x134(%rbx),%eax
   16cc3:	mov    %rax,%rcx
   16cc6:	and    $0x80,%ecx
   16ccc:	test   %ecx,%ecx
   16cce:	jne    16dcb <png_init_read_transformations+0x57b>
   16cd4:	movzbl 0x267(%rbx),%ecx
   16cdb:	cmp    $0x3,%cl
   16cde:	je     16df9 <png_init_read_transformations+0x5a9>
   16ce4:	mov    0x134(%rbx),%eax
   16cea:	mov    %rax,%rcx
   16ced:	and    $0x8,%ecx
   16cf0:	test   %ecx,%ecx
   16cf2:	jne    16e28 <png_init_read_transformations+0x5d8>
   16cf8:	mov    %r12,%rbx
   16cfb:	mov    %r13,%r12
   16cfe:	mov    %r14,%r13
   16d01:	mov    %r15,%r14
   16d04:	mov    -0x50(%rbp),%r15
   16d08:	leaveq 
   16d09:	retq   
   16d0a:	movslq 0x498(%rbx),%rdi
   16d11:	callq  8b10 <png_gamma_significant>
   16d16:	test   %eax,%eax
   16d18:	jne    16cae <png_init_read_transformations+0x45e>
   16d1a:	movslq 0x2a4(%rbx),%rdi
   16d21:	callq  8b10 <png_gamma_significant>
   16d26:	test   %eax,%eax
   16d28:	jne    16cae <png_init_read_transformations+0x45e>
   16d2a:	mov    $0xff,%eax
   16d2f:	jmpq   16afa <png_init_read_transformations+0x2aa>
   16d34:	movslq 0x498(%rbx),%rdi
   16d3b:	callq  8b10 <png_gamma_significant>
   16d40:	test   %eax,%eax
   16d42:	jne    16cae <png_init_read_transformations+0x45e>
   16d48:	movslq 0x2a4(%rbx),%rdi
   16d4f:	callq  8b10 <png_gamma_significant>
   16d54:	test   %eax,%eax
   16d56:	jne    16cae <png_init_read_transformations+0x45e>
   16d5c:	movzbl 0x274(%rbx),%eax
   16d63:	cmp    $0x3,%al
   16d65:	je     16e4b <png_init_read_transformations+0x5fb>
   16d6b:	mov    $0xff,%eax
   16d70:	jmpq   16b0e <png_init_read_transformations+0x2be>
   16d75:	movslq 0x2a4(%rbx),%rdi
   16d7c:	callq  8b10 <png_gamma_significant>
   16d81:	test   %eax,%eax
   16d83:	jne    16cae <png_init_read_transformations+0x45e>
   16d89:	mov    $0xff,%eax
   16d8e:	jmpq   16b22 <png_init_read_transformations+0x2d2>
   16d93:	movzwl -0x53(%rbp),%edx
   16d97:	lea    (%r10,%r10,2),%rsi
   16d9b:	mov    %dx,(%r8,%rsi,1)
   16da0:	movzbl -0x51(%rbp),%edx
   16da4:	mov    %dl,0x2(%r8,%rsi,1)
   16da9:	add    $0x1,%ecx
   16dac:	cmp    %r9d,%ecx
   16daf:	jl     16e69 <png_init_read_transformations+0x619>
   16db5:	mov    0x134(%rbx),%eax
   16dbb:	and    $0xffffff7f,%eax
   16dc0:	mov    %eax,0x134(%rbx)
   16dc6:	jmpq   16ce4 <png_init_read_transformations+0x494>
   16dcb:	and    $0x600000,%eax
   16dd0:	test   %eax,%eax
   16dd2:	je     16de3 <png_init_read_transformations+0x593>
   16dd4:	lea    0x17750(%rip),%rsi        # 2e52b <chunks_to_process.34+0x726>
   16ddb:	mov    %rbx,%rdi
   16dde:	callq  5390 <png_warning@plt>
   16de3:	movzbl 0x267(%rbx),%eax
   16dea:	cmp    $0x3,%al
   16dec:	je     16f44 <png_init_read_transformations+0x6f4>
   16df2:	xor    %ecx,%ecx
   16df4:	jmpq   16f49 <png_init_read_transformations+0x6f9>
   16df9:	mov    %rax,%rcx
   16dfc:	and    $0x1000,%ecx
   16e02:	test   %ecx,%ecx
   16e04:	je     16e13 <png_init_read_transformations+0x5c3>
   16e06:	and    $0x600000,%eax
   16e0b:	test   %eax,%eax
   16e0d:	jne    16ce4 <png_init_read_transformations+0x494>
   16e13:	mov    0x250(%rbx),%r8
   16e1a:	movzwl 0x258(%rbx),%ecx
   16e21:	xor    %eax,%eax
   16e23:	jmpq   16ff4 <png_init_read_transformations+0x7a4>
   16e28:	mov    %rax,%rcx
   16e2b:	and    $0x1000,%ecx
   16e31:	test   %ecx,%ecx
   16e33:	je     1700e <png_init_read_transformations+0x7be>
   16e39:	mov    %r12,%rbx
   16e3c:	mov    %r13,%r12
   16e3f:	mov    %r14,%r13
   16e42:	mov    %r15,%r14
   16e45:	mov    -0x50(%rbp),%r15
   16e49:	leaveq 
   16e4a:	retq   
   16e4b:	movslq 0x278(%rbx),%rdi
   16e52:	callq  8b10 <png_gamma_significant>
   16e57:	test   %eax,%eax
   16e59:	jne    16cae <png_init_read_transformations+0x45e>
   16e5f:	mov    $0xff,%eax
   16e64:	jmpq   16b0e <png_init_read_transformations+0x2be>
   16e69:	mov    0x2e8(%rbx),%rdx
   16e70:	movslq %ecx,%r10
   16e73:	movzbl (%rdx,%r10,1),%edx
   16e78:	test   %dl,%dl
   16e7a:	je     16d93 <png_init_read_transformations+0x543>
   16e80:	cmp    $0xfe,%dl
   16e83:	ja     16da9 <png_init_read_transformations+0x559>
   16e89:	mov    %rax,%rsi
   16e8c:	sub    %dx,%si
   16e8f:	movzbl -0x53(%rbp),%edi
   16e93:	imul   %di,%si
   16e97:	lea    (%r10,%r10,2),%r11
   16e9b:	movzbl (%r8,%r11,1),%edi
   16ea0:	imul   %di,%dx
   16ea4:	lea    0x80(%rsi,%rdx,1),%edx
   16eab:	movzwl %dx,%esi
   16eae:	mov    %rsi,%rdx
   16eb1:	shr    $0x8,%edx
   16eb4:	add    %esi,%edx
   16eb6:	shr    $0x8,%edx
   16eb9:	mov    %dl,(%r8,%r11,1)
   16ebd:	mov    0x2e8(%rbx),%rdx
   16ec4:	movzbl (%rdx,%r10,1),%edi
   16ec9:	movzbl 0x1(%r8,%r11,1),%edx
   16ecf:	mov    %rdi,%rsi
   16ed2:	imul   %dx,%si
   16ed6:	mov    %rax,%rdx
   16ed9:	sub    %di,%dx
   16edc:	movzbl -0x52(%rbp),%edi
   16ee0:	imul   %di,%dx
   16ee4:	lea    0x80(%rdx,%rsi,1),%edx
   16eeb:	movzwl %dx,%edx
   16eee:	mov    %rdx,%rsi
   16ef1:	shr    $0x8,%esi
   16ef4:	add    %esi,%edx
   16ef6:	shr    $0x8,%edx
   16ef9:	mov    %dl,0x1(%r8,%r11,1)
   16efe:	mov    0x2e8(%rbx),%rdx
   16f05:	movzbl (%rdx,%r10,1),%edi
   16f0a:	movzbl 0x2(%r8,%r11,1),%edx
   16f10:	mov    %rdi,%rsi
   16f13:	imul   %dx,%si
   16f17:	mov    %rax,%rdx
   16f1a:	sub    %di,%dx
   16f1d:	movzbl -0x51(%rbp),%edi
   16f21:	imul   %di,%dx
   16f25:	lea    0x80(%rdx,%rsi,1),%edx
   16f2c:	movzwl %dx,%esi
   16f2f:	mov    %rsi,%rdx
   16f32:	shr    $0x8,%edx
   16f35:	add    %esi,%edx
   16f37:	shr    $0x8,%edx
   16f3a:	mov    %dl,0x2(%r8,%r11,1)
   16f3f:	jmpq   16da9 <png_init_read_transformations+0x559>
   16f44:	mov    $0x1,%ecx
   16f49:	mov    $0x186a0,%eax
   16f4e:	test   %ecx,%ecx
   16f50:	jg     17030 <png_init_read_transformations+0x7e0>
   16f56:	movzbl 0x274(%rbx),%ecx
   16f5d:	cmp    $0x1,%cl
   16f60:	jbe    17072 <png_init_read_transformations+0x822>
   16f66:	cmp    $0x2,%cl
   16f69:	je     17086 <png_init_read_transformations+0x836>
   16f6f:	cmp    $0x3,%cl
   16f72:	jne    17077 <png_init_read_transformations+0x827>
   16f78:	movslq 0x278(%rbx),%rdi
   16f7f:	callq  8a40 <png_reciprocal>
   16f84:	movslq 0x278(%rbx),%rdi
   16f8b:	movslq 0x2a4(%rbx),%rsi
   16f92:	mov    %r15,-0x40(%rbp)
   16f96:	mov    %rax,%r15
   16f99:	callq  8aa0 <png_reciprocal2>
   16f9e:	mov    %r15,%rcx
   16fa1:	mov    -0x40(%rbp),%r15
   16fa5:	jmpq   170bc <png_init_read_transformations+0x86c>
   16faa:	movslq %eax,%rdx
   16fad:	lea    (%rdx,%rdx,2),%rdi
   16fb1:	movzbl (%r8,%rdi,1),%esi
   16fb6:	mov    0x2a8(%rbx),%rdx
   16fbd:	movzbl (%rsi,%rdx,1),%edx
   16fc1:	mov    %dl,(%r8,%rdi,1)
   16fc5:	movzbl 0x1(%r8,%rdi,1),%esi
   16fcb:	mov    0x2a8(%rbx),%rdx
   16fd2:	movzbl (%rsi,%rdx,1),%edx
   16fd6:	mov    %dl,0x1(%r8,%rdi,1)
   16fdb:	movzbl 0x2(%r8,%rdi,1),%esi
   16fe1:	mov    0x2a8(%rbx),%rdx
   16fe8:	movzbl (%rsi,%rdx,1),%edx
   16fec:	mov    %dl,0x2(%r8,%rdi,1)
   16ff1:	add    $0x1,%eax
   16ff4:	cmp    %ecx,%eax
   16ff6:	jl     16faa <png_init_read_transformations+0x75a>
   16ff8:	mov    0x134(%rbx),%eax
   16ffe:	and    $0xffffdfff,%eax
   17003:	mov    %eax,0x134(%rbx)
   17009:	jmpq   16ce4 <png_init_read_transformations+0x494>
   1700e:	movzbl 0x267(%rbx),%ecx
   17015:	cmp    $0x3,%cl
   17018:	je     170f8 <png_init_read_transformations+0x8a8>
   1701e:	mov    %r12,%rbx
   17021:	mov    %r13,%r12
   17024:	mov    %r14,%r13
   17027:	mov    %r15,%r14
   1702a:	mov    -0x50(%rbp),%r15
   1702e:	leaveq 
   1702f:	retq   
   17030:	mov    0x250(%rbx),%rdx
   17037:	movzwl 0x258(%rbx),%r10d
   1703f:	movzbl 0x274(%rbx),%ecx
   17046:	cmp    $0x2,%cl
   17049:	je     17130 <png_init_read_transformations+0x8e0>
   1704f:	cmp    $0x1,%cl
   17052:	jbe    1719f <png_init_read_transformations+0x94f>
   17058:	cmp    $0x2,%cl
   1705b:	je     171b0 <png_init_read_transformations+0x960>
   17061:	cmp    $0x3,%cl
   17064:	je     171fb <png_init_read_transformations+0x9ab>
   1706a:	mov    %rax,%rcx
   1706d:	jmpq   1724d <png_init_read_transformations+0x9fd>
   17072:	cmp    $0x1,%cl
   17075:	je     170b5 <png_init_read_transformations+0x865>
   17077:	mov    %rbx,%rdi
   1707a:	lea    0x174df(%rip),%rsi        # 2e560 <chunks_to_process.34+0x75b>
   17081:	callq  5470 <png_error@plt>
   17086:	movslq 0x498(%rbx),%rdi
   1708d:	callq  8a40 <png_reciprocal>
   17092:	movslq 0x498(%rbx),%rdi
   17099:	movslq 0x2a4(%rbx),%rsi
   170a0:	mov    %r15,-0x40(%rbp)
   170a4:	mov    %rax,%r15
   170a7:	callq  8aa0 <png_reciprocal2>
   170ac:	mov    %r15,%rcx
   170af:	mov    -0x40(%rbp),%r15
   170b3:	jmp    170bc <png_init_read_transformations+0x86c>
   170b5:	movslq 0x2a4(%rbx),%rcx
   170bc:	mov    %rcx,%rdi
   170bf:	mov    %r15,-0x38(%rbp)
   170c3:	mov    %r14,-0x30(%rbp)
   170c7:	mov    %rax,%r14
   170ca:	mov    %rcx,%r15
   170cd:	callq  8b10 <png_gamma_significant>
   170d2:	mov    %r14,%rdi
   170d5:	mov    %r13,-0x20(%rbp)
   170d9:	mov    %rax,%r13
   170dc:	callq  8b10 <png_gamma_significant>
   170e1:	test   %r13d,%r13d
   170e4:	jne    1729c <png_init_read_transformations+0xa4c>
   170ea:	mov    %r13,%rcx
   170ed:	mov    %rax,%r13
   170f0:	mov    %rcx,%rax
   170f3:	jmpq   172c6 <png_init_read_transformations+0xa76>
   170f8:	movzwl 0x258(%rbx),%edx
   170ff:	and    $0xfffffff7,%eax
   17102:	mov    %eax,0x134(%rbx)
   17108:	mov    $0x8,%eax
   1710d:	movzbl 0x2d8(%rbx),%ecx
   17114:	neg    %ecx
   17116:	add    %eax,%ecx
   17118:	test   %ecx,%ecx
   1711a:	jle    1735f <png_init_read_transformations+0xb0f>
   17120:	cmp    $0x7,%ecx
   17123:	jg     1735f <png_init_read_transformations+0xb0f>
   17129:	xor    %esi,%esi
   1712b:	jmpq   1739d <png_init_read_transformations+0xb4d>
   17130:	movzwl 0x27e(%rbx),%r11d
   17138:	mov    0x2c0(%rbx),%rcx
   1713f:	movzbl (%r11,%rcx,1),%eax
   17144:	movzwl 0x280(%rbx),%r9d
   1714c:	movzbl (%rcx,%r9,1),%r8d
   17151:	movzwl 0x282(%rbx),%esi
   17158:	movzbl (%rcx,%rsi,1),%edi
   1715c:	mov    0x2a8(%rbx),%rcx
   17163:	movzbl (%r11,%rcx,1),%r11d
   17168:	mov    %r11b,-0x56(%rbp)
   1716c:	movzbl (%r9,%rcx,1),%r9d
   17171:	mov    %r9b,-0x55(%rbp)
   17175:	movzbl (%rsi,%rcx,1),%ecx
   17179:	mov    %cl,-0x54(%rbp)
   1717c:	mov    %r15,-0x30(%rbp)
   17180:	mov    %r14,-0x20(%rbp)
   17184:	mov    %r13,-0x10(%rbp)
   17188:	mov    %r12,-0x8(%rbp)
   1718c:	mov    %rdx,%r12
   1718f:	mov    %r10,%r13
   17192:	mov    $0xff,%r9d
   17198:	xor    %ecx,%ecx
   1719a:	jmpq   173ea <png_init_read_transformations+0xb9a>
   1719f:	cmp    $0x1,%cl
   171a2:	je     17246 <png_init_read_transformations+0x9f6>
   171a8:	mov    %rax,%rcx
   171ab:	jmpq   1724d <png_init_read_transformations+0x9fd>
   171b0:	movslq 0x498(%rbx),%rdi
   171b7:	mov    %r15,-0x30(%rbp)
   171bb:	mov    %r14,-0x28(%rbp)
   171bf:	mov    %rdx,%r14
   171c2:	mov    %r10,%r15
   171c5:	callq  8a40 <png_reciprocal>
   171ca:	movslq 0x498(%rbx),%rdi
   171d1:	movslq 0x2a4(%rbx),%rsi
   171d8:	mov    %r13,-0x18(%rbp)
   171dc:	mov    %rax,%r13
   171df:	callq  8aa0 <png_reciprocal2>
   171e4:	mov    %r13,%rcx
   171e7:	mov    %r14,%rdx
   171ea:	mov    %r15,%r10
   171ed:	mov    -0x18(%rbp),%r13
   171f1:	mov    -0x28(%rbp),%r14
   171f5:	mov    -0x30(%rbp),%r15
   171f9:	jmp    1724d <png_init_read_transformations+0x9fd>
   171fb:	movslq 0x278(%rbx),%rdi
   17202:	mov    %r15,-0x38(%rbp)
   17206:	mov    %r14,-0x28(%rbp)
   1720a:	mov    %r10,%r14
   1720d:	mov    %rdx,%r15
   17210:	callq  8a40 <png_reciprocal>
   17215:	movslq 0x278(%rbx),%rdi
   1721c:	movslq 0x2a4(%rbx),%rsi
   17223:	mov    %r13,-0x18(%rbp)
   17227:	mov    %rax,%r13
   1722a:	callq  8aa0 <png_reciprocal2>
   1722f:	mov    %r13,%rcx
   17232:	mov    %r15,%rdx
   17235:	mov    %r14,%r10
   17238:	mov    -0x18(%rbp),%r13
   1723c:	mov    -0x28(%rbp),%r14
   17240:	mov    -0x38(%rbp),%r15
   17244:	jmp    1724d <png_init_read_transformations+0x9fd>
   17246:	movslq 0x2a4(%rbx),%rcx
   1724d:	mov    %rax,%rdi
   17250:	mov    %r15,-0x30(%rbp)
   17254:	mov    %r14,-0x20(%rbp)
   17258:	mov    %r13,-0x10(%rbp)
   1725c:	mov    %r12,-0x8(%rbp)
   17260:	mov    %rdx,%r12
   17263:	mov    %r10,%r13
   17266:	mov    %rcx,%r14
   17269:	mov    %rax,%r15
   1726c:	callq  8b10 <png_gamma_significant>
   17271:	test   %eax,%eax
   17273:	jne    17419 <png_init_read_transformations+0xbc9>
   17279:	movzbl 0x27e(%rbx),%eax
   17280:	mov    %al,-0x56(%rbp)
   17283:	movzbl 0x280(%rbx),%eax
   1728a:	mov    %al,-0x55(%rbp)
   1728d:	movzbl 0x282(%rbx),%eax
   17294:	mov    %al,-0x54(%rbp)
   17297:	jmpq   1744f <png_init_read_transformations+0xbff>
   1729c:	movzwl 0x284(%rbx),%esi
   172a3:	mov    %rbx,%rdi
   172a6:	mov    %r15,%rdx
   172a9:	mov    %r12,-0x10(%rbp)
   172ad:	mov    %r13,%r12
   172b0:	mov    %rax,%r13
   172b3:	callq  8b40 <png_gamma_correct>
   172b8:	mov    %ax,0x28e(%rbx)
   172bf:	mov    %r12,%rax
   172c2:	mov    -0x10(%rbp),%r12
   172c6:	test   %r13d,%r13d
   172c9:	je     172f2 <png_init_read_transformations+0xaa2>
   172cb:	movzwl 0x284(%rbx),%esi
   172d2:	mov    %rbx,%rdi
   172d5:	mov    %r14,%rdx
   172d8:	mov    %r12,-0x8(%rbp)
   172dc:	mov    %rax,%r12
   172df:	callq  8b40 <png_gamma_correct>
   172e4:	mov    %ax,0x284(%rbx)
   172eb:	mov    %r12,%rax
   172ee:	mov    -0x8(%rbp),%r12
   172f2:	movzwl 0x280(%rbx),%ecx
   172f9:	movzwl 0x27e(%rbx),%edx
   17300:	cmp    %dx,%cx
   17303:	jne    17482 <png_init_read_transformations+0xc32>
   17309:	movzwl 0x282(%rbx),%ecx
   17310:	cmp    %cx,%dx
   17313:	jne    17482 <png_init_read_transformations+0xc32>
   17319:	movzwl 0x284(%rbx),%ecx
   17320:	cmp    %cx,%dx
   17323:	jne    17482 <png_init_read_transformations+0xc32>
   17329:	movzwl 0x28e(%rbx),%eax
   17330:	mov    %ax,0x28c(%rbx)
   17337:	mov    %ax,0x28a(%rbx)
   1733e:	mov    %ax,0x288(%rbx)
   17345:	mov    %cx,0x282(%rbx)
   1734c:	mov    %cx,0x280(%rbx)
   17353:	mov    %cx,0x27e(%rbx)
   1735a:	jmpq   17521 <png_init_read_transformations+0xcd1>
   1735f:	movzbl 0x2d9(%rbx),%ecx
   17366:	neg    %ecx
   17368:	add    %eax,%ecx
   1736a:	test   %ecx,%ecx
   1736c:	jle    17539 <png_init_read_transformations+0xce9>
   17372:	cmp    $0x7,%ecx
   17375:	jg     17539 <png_init_read_transformations+0xce9>
   1737b:	xor    %esi,%esi
   1737d:	jmpq   1757a <png_init_read_transformations+0xd2a>
   17382:	movslq %esi,%rdi
   17385:	lea    (%rdi,%rdi,2),%rdi
   17389:	add    0x250(%rbx),%rdi
   17390:	movzbl (%rdi),%r8d
   17394:	shr    %cl,%r8d
   17397:	mov    %r8b,(%rdi)
   1739a:	add    $0x1,%esi
   1739d:	cmp    %esi,%edx
   1739f:	jg     17382 <png_init_read_transformations+0xb32>
   173a1:	jmp    1735f <png_init_read_transformations+0xb0f>
   173a3:	lea    (%r15,%r15,2),%r10
   173a7:	movzbl (%r12,%r10,1),%esi
   173ac:	mov    0x2a8(%rbx),%rdx
   173b3:	movzbl (%rsi,%rdx,1),%edx
   173b7:	mov    %dl,(%r12,%r10,1)
   173bb:	movzbl 0x1(%r12,%r10,1),%esi
   173c1:	mov    0x2a8(%rbx),%rdx
   173c8:	movzbl (%rsi,%rdx,1),%edx
   173cc:	mov    %dl,0x1(%r12,%r10,1)
   173d1:	movzbl 0x2(%r12,%r10,1),%esi
   173d7:	mov    0x2a8(%rbx),%rdx
   173de:	movzbl (%rsi,%rdx,1),%edx
   173e2:	mov    %dl,0x2(%r12,%r10,1)
   173e7:	add    $0x1,%ecx
   173ea:	cmp    %r13d,%ecx
   173ed:	jl     17580 <png_init_read_transformations+0xd30>
   173f3:	mov    0x134(%rbx),%eax
   173f9:	and    $0xffffdf7f,%eax
   173fe:	mov    %eax,0x134(%rbx)
   17404:	mov    -0x8(%rbp),%r12
   17408:	mov    -0x10(%rbp),%r13
   1740c:	mov    -0x20(%rbp),%r14
   17410:	mov    -0x30(%rbp),%r15
   17414:	jmpq   16ce4 <png_init_read_transformations+0x494>
   17419:	movzwl 0x27e(%rbx),%edi
   17420:	mov    %r15,%rsi
   17423:	callq  8be0 <png_gamma_8bit_correct>
   17428:	mov    %al,-0x56(%rbp)
   1742b:	movzwl 0x280(%rbx),%edi
   17432:	mov    %r15,%rsi
   17435:	callq  8be0 <png_gamma_8bit_correct>
   1743a:	mov    %al,-0x55(%rbp)
   1743d:	mov    %r15,%rsi
   17440:	movzwl 0x282(%rbx),%edi
   17447:	callq  8be0 <png_gamma_8bit_correct>
   1744c:	mov    %al,-0x54(%rbp)
   1744f:	mov    %r14,%rdi
   17452:	callq  8b10 <png_gamma_significant>
   17457:	test   %eax,%eax
   17459:	jne    176bc <png_init_read_transformations+0xe6c>
   1745f:	movzbl 0x27e(%rbx),%eax
   17466:	movzbl 0x280(%rbx),%r8d
   1746e:	movzbl 0x282(%rbx),%edi
   17475:	mov    $0xff,%r9d
   1747b:	xor    %ecx,%ecx
   1747d:	jmpq   173ea <png_init_read_transformations+0xb9a>
   17482:	test   %eax,%eax
   17484:	je     174d1 <png_init_read_transformations+0xc81>
   17486:	movzwl 0x27e(%rbx),%esi
   1748d:	mov    %rbx,%rdi
   17490:	mov    %r15,%rdx
   17493:	callq  8b40 <png_gamma_correct>
   17498:	mov    %ax,0x288(%rbx)
   1749f:	movzwl 0x280(%rbx),%esi
   174a6:	mov    %rbx,%rdi
   174a9:	mov    %r15,%rdx
   174ac:	callq  8b40 <png_gamma_correct>
   174b1:	mov    %ax,0x28a(%rbx)
   174b8:	mov    %r15,%rdx
   174bb:	movzwl 0x282(%rbx),%esi
   174c2:	mov    %rbx,%rdi
   174c5:	callq  8b40 <png_gamma_correct>
   174ca:	mov    %ax,0x28c(%rbx)
   174d1:	test   %r13d,%r13d
   174d4:	je     17521 <png_init_read_transformations+0xcd1>
   174d6:	movzwl 0x27e(%rbx),%esi
   174dd:	mov    %rbx,%rdi
   174e0:	mov    %r14,%rdx
   174e3:	callq  8b40 <png_gamma_correct>
   174e8:	mov    %ax,0x27e(%rbx)
   174ef:	movzwl 0x280(%rbx),%esi
   174f6:	mov    %rbx,%rdi
   174f9:	mov    %r14,%rdx
   174fc:	callq  8b40 <png_gamma_correct>
   17501:	mov    %ax,0x280(%rbx)
   17508:	mov    %r14,%rdx
   1750b:	movzwl 0x282(%rbx),%esi
   17512:	mov    %rbx,%rdi
   17515:	callq  8b40 <png_gamma_correct>
   1751a:	mov    %ax,0x282(%rbx)
   17521:	movb   $0x1,0x274(%rbx)
   17528:	mov    -0x20(%rbp),%r13
   1752c:	mov    -0x30(%rbp),%r14
   17530:	mov    -0x38(%rbp),%r15
   17534:	jmpq   16ce4 <png_init_read_transformations+0x494>
   17539:	movzbl 0x2da(%rbx),%ecx
   17540:	sub    %ecx,%eax
   17542:	test   %eax,%eax
   17544:	jg     17705 <png_init_read_transformations+0xeb5>
   1754a:	mov    %r12,%rbx
   1754d:	mov    %r13,%r12
   17550:	mov    %r14,%r13
   17553:	mov    %r15,%r14
   17556:	mov    -0x50(%rbp),%r15
   1755a:	leaveq 
   1755b:	retq   
   1755c:	mov    0x250(%rbx),%r8
   17563:	movslq %esi,%rdi
   17566:	lea    (%rdi,%rdi,2),%r9
   1756a:	movzbl 0x1(%r8,%r9,1),%edi
   17570:	shr    %cl,%edi
   17572:	mov    %dil,0x1(%r8,%r9,1)
   17577:	add    $0x1,%esi
   1757a:	cmp    %esi,%edx
   1757c:	jg     1755c <png_init_read_transformations+0xd0c>
   1757e:	jmp    17539 <png_init_read_transformations+0xce9>
   17580:	movslq %ecx,%r15
   17583:	movzwl 0x260(%rbx),%edx
   1758a:	cmp    %edx,%ecx
   1758c:	jge    173a3 <png_init_read_transformations+0xb53>
   17592:	mov    0x2e8(%rbx),%rdx
   17599:	movzbl (%rdx,%r15,1),%edx
   1759e:	cmp    $0xfe,%dl
   175a1:	ja     173a3 <png_init_read_transformations+0xb53>
   175a7:	test   %dl,%dl
   175a9:	je     1771c <png_init_read_transformations+0xecc>
   175af:	mov    %r9,%rsi
   175b2:	sub    %dx,%si
   175b5:	movzbl %al,%r10d
   175b9:	imul   %r10w,%si
   175be:	lea    (%r15,%r15,2),%r14
   175c2:	movzbl (%r12,%r14,1),%r11d
   175c7:	mov    0x2c0(%rbx),%r10
   175ce:	movzbl (%r11,%r10,1),%r10d
   175d3:	imul   %r10w,%dx
   175d8:	lea    0x80(%rsi,%rdx,1),%edx
   175df:	movzwl %dx,%esi
   175e2:	mov    %rsi,%rdx
   175e5:	shr    $0x8,%edx
   175e8:	add    %esi,%edx
   175ea:	shr    $0x8,%edx
   175ed:	movzbl %dl,%esi
   175f0:	mov    0x2b8(%rbx),%rdx
   175f7:	movzbl (%rsi,%rdx,1),%edx
   175fb:	mov    %dl,(%r12,%r14,1)
   175ff:	mov    0x2e8(%rbx),%rdx
   17606:	movzbl (%rdx,%r15,1),%r10d
   1760b:	movzbl 0x1(%r12,%r14,1),%esi
   17611:	mov    0x2c0(%rbx),%rdx
   17618:	movzbl (%rsi,%rdx,1),%edx
   1761c:	mov    %r10,%rsi
   1761f:	imul   %dx,%si
   17623:	mov    %r9,%rdx
   17626:	sub    %r10w,%dx
   1762a:	movzbl %r8b,%r10d
   1762e:	imul   %r10w,%dx
   17633:	lea    0x80(%rdx,%rsi,1),%edx
   1763a:	movzwl %dx,%esi
   1763d:	mov    %rsi,%rdx
   17640:	shr    $0x8,%edx
   17643:	add    %esi,%edx
   17645:	shr    $0x8,%edx
   17648:	movzbl %dl,%esi
   1764b:	mov    0x2b8(%rbx),%rdx
   17652:	movzbl (%rsi,%rdx,1),%edx
   17656:	mov    %dl,0x1(%r12,%r14,1)
   1765b:	mov    0x2e8(%rbx),%rdx
   17662:	movzbl (%rdx,%r15,1),%r10d
   17667:	movzbl 0x2(%r12,%r14,1),%esi
   1766d:	mov    0x2c0(%rbx),%rdx
   17674:	movzbl (%rsi,%rdx,1),%edx
   17678:	mov    %r10,%rsi
   1767b:	imul   %dx,%si
   1767f:	mov    %r9,%rdx
   17682:	sub    %r10w,%dx
   17686:	movzbl %dil,%r10d
   1768a:	imul   %r10w,%dx
   1768f:	lea    0x80(%rdx,%rsi,1),%edx
   17696:	movzwl %dx,%esi
   17699:	mov    %rsi,%rdx
   1769c:	shr    $0x8,%edx
   1769f:	add    %esi,%edx
   176a1:	shr    $0x8,%edx
   176a4:	movzbl %dl,%esi
   176a7:	mov    0x2b8(%rbx),%rdx
   176ae:	movzbl (%rsi,%rdx,1),%edx
   176b2:	mov    %dl,0x2(%r12,%r14,1)
   176b7:	jmpq   173e7 <png_init_read_transformations+0xb97>
   176bc:	movzwl 0x27e(%rbx),%edi
   176c3:	mov    %r14,%rsi
   176c6:	callq  8be0 <png_gamma_8bit_correct>
   176cb:	mov    %rax,%r15
   176ce:	movzwl 0x280(%rbx),%edi
   176d5:	mov    %r14,%rsi
   176d8:	callq  8be0 <png_gamma_8bit_correct>
   176dd:	mov    %r14,%rsi
   176e0:	mov    %rax,%r14
   176e3:	movzwl 0x282(%rbx),%edi
   176ea:	callq  8be0 <png_gamma_8bit_correct>
   176ef:	mov    %rax,%rdi
   176f2:	mov    %r15,%rax
   176f5:	mov    %r14,%r8
   176f8:	mov    $0xff,%r9d
   176fe:	xor    %ecx,%ecx
   17700:	jmpq   173ea <png_init_read_transformations+0xb9a>
   17705:	cmp    $0x7,%eax
   17708:	jle    17737 <png_init_read_transformations+0xee7>
   1770a:	mov    %r12,%rbx
   1770d:	mov    %r13,%r12
   17710:	mov    %r14,%r13
   17713:	mov    %r15,%r14
   17716:	mov    -0x50(%rbp),%r15
   1771a:	leaveq 
   1771b:	retq   
   1771c:	movzwl -0x56(%rbp),%edx
   17720:	lea    (%r15,%r15,2),%rsi
   17724:	mov    %dx,(%r12,%rsi,1)
   17729:	movzbl -0x54(%rbp),%edx
   1772d:	mov    %dl,0x2(%r12,%rsi,1)
   17732:	jmpq   173e7 <png_init_read_transformations+0xb97>
   17737:	xor    %esi,%esi
   17739:	jmp    1775f <png_init_read_transformations+0xf0f>
   1773b:	mov    0x250(%rbx),%r9
   17742:	movslq %esi,%rcx
   17745:	lea    (%rcx,%rcx,2),%r8
   17749:	mov    %rax,%rcx
   1774c:	movzbl 0x2(%r9,%r8,1),%edi
   17752:	shr    %cl,%edi
   17754:	mov    %rcx,%rax
   17757:	mov    %dil,0x2(%r9,%r8,1)
   1775c:	add    $0x1,%esi
   1775f:	cmp    %edx,%esi
   17761:	jl     1773b <png_init_read_transformations+0xeeb>
   17763:	mov    %r12,%rbx
   17766:	mov    %r13,%r12
   17769:	mov    %r14,%r13
   1776c:	mov    %r15,%r14
   1776f:	mov    -0x50(%rbp),%r15
   17773:	leaveq 
   17774:	retq   
   17775:	data16 nopw %cs:0x0(%rax,%rax,1)

0000000000017780 <png_rtran_ok>:
   17780:	push   %rbp
   17781:	mov    %rsp,%rbp
   17784:	xor    %eax,%eax
   17786:	test   %rdi,%rdi
   17789:	jne    1778d <png_rtran_ok+0xd>
   1778b:	leaveq 
   1778c:	retq   
   1778d:	mov    0x130(%rdi),%eax
   17793:	and    $0x40,%eax
   17796:	test   %eax,%eax
   17798:	jne    177b6 <png_rtran_ok+0x36>
   1779a:	test   %esi,%esi
   1779c:	jne    177c6 <png_rtran_ok+0x46>
   1779e:	mov    0x130(%rdi),%eax
   177a4:	or     $0x4000,%eax
   177a9:	mov    %eax,0x130(%rdi)
   177af:	mov    $0x1,%eax
   177b4:	leaveq 
   177b5:	retq   
   177b6:	lea    0x16dc1(%rip),%rsi        # 2e57e <chunks_to_process.34+0x779>
   177bd:	callq  b110 <png_app_error>
   177c2:	xor    %eax,%eax
   177c4:	leaveq 
   177c5:	retq   
   177c6:	mov    0x12c(%rdi),%eax
   177cc:	and    $0x1,%eax
   177cf:	test   %eax,%eax
   177d1:	jne    1779e <png_rtran_ok+0x1e>
   177d3:	lea    0x16ddf(%rip),%rsi        # 2e5b9 <chunks_to_process.34+0x7b4>
   177da:	callq  b110 <png_app_error>
   177df:	xor    %eax,%eax
   177e1:	leaveq 
   177e2:	retq   
   177e3:	data16 nopw %cs:0x0(%rax,%rax,1)
   177ee:	xchg   %ax,%ax

00000000000177f0 <translate_gamma_flags>:
   177f0:	push   %rbp
   177f1:	mov    %rsp,%rbp
   177f4:	cmp    $0xffffffff,%esi
   177f7:	je     17813 <translate_gamma_flags+0x23>
   177f9:	cmp    $0xfffe7960,%esi
   177ff:	je     17813 <translate_gamma_flags+0x23>
   17801:	cmp    $0xfffffffe,%esi
   17804:	je     1782f <translate_gamma_flags+0x3f>
   17806:	cmp    $0xffff3cb0,%esi
   1780c:	je     1782f <translate_gamma_flags+0x3f>
   1780e:	mov    %rsi,%rax
   17811:	leaveq 
   17812:	retq   
   17813:	mov    0x130(%rdi),%eax
   17819:	or     $0x1000,%eax
   1781e:	mov    %eax,0x130(%rdi)
   17824:	test   %edx,%edx
   17826:	je     1783a <translate_gamma_flags+0x4a>
   17828:	mov    $0x35b60,%eax
   1782d:	leaveq 
   1782e:	retq   
   1782f:	test   %edx,%edx
   17831:	je     17841 <translate_gamma_flags+0x51>
   17833:	mov    $0x250ac,%eax
   17838:	leaveq 
   17839:	retq   
   1783a:	mov    $0xb18f,%eax
   1783f:	leaveq 
   17840:	retq   
   17841:	mov    $0x10175,%eax
   17846:	leaveq 
   17847:	retq   
   17848:	nopl   0x0(%rax,%rax,1)

0000000000017850 <convert_gamma_value>:
   17850:	push   %rbp
   17851:	mov    %rsp,%rbp
   17854:	sub    $0x10,%rsp
   17858:	mov    %r15,-0x8(%rbp)
   1785c:	xorpd  %xmm1,%xmm1
   17860:	ucomisd %xmm1,%xmm0
   17864:	ja     178a2 <convert_gamma_value+0x52>
   17866:	mov    %rdi,%r15
   17869:	movsd  0x16da7(%rip),%xmm1        # 2e618 <chunks_to_process.34+0x813>
   17871:	addsd  %xmm1,%xmm0
   17875:	callq  57e0 <floor@plt>
   1787a:	movsd  0x16dae(%rip),%xmm1        # 2e630 <chunks_to_process.34+0x82b>
   17882:	ucomisd %xmm1,%xmm0
   17886:	ja     178c0 <convert_gamma_value+0x70>
   17888:	movsd  0x16d90(%rip),%xmm1        # 2e620 <chunks_to_process.34+0x81b>
   17890:	ucomisd %xmm1,%xmm0
   17894:	jp     17898 <convert_gamma_value+0x48>
   17896:	jb     178c0 <convert_gamma_value+0x70>
   17898:	cvttsd2si %xmm0,%eax
   1789c:	mov    -0x8(%rbp),%r15
   178a0:	leaveq 
   178a1:	retq   
   178a2:	movsd  0x16d8e(%rip),%xmm1        # 2e638 <chunks_to_process.34+0x833>
   178aa:	ucomisd %xmm1,%xmm0
   178ae:	jp     17866 <convert_gamma_value+0x16>
   178b0:	jae    17866 <convert_gamma_value+0x16>
   178b2:	movsd  0x16d6e(%rip),%xmm1        # 2e628 <chunks_to_process.34+0x823>
   178ba:	mulsd  %xmm1,%xmm0
   178be:	jmp    17866 <convert_gamma_value+0x16>
   178c0:	mov    %r15,%rdi
   178c3:	lea    0x16d1b(%rip),%rsi        # 2e5e5 <chunks_to_process.34+0x7e0>
   178ca:	callq  acb0 <png_fixed_error>
   178cf:	nop

00000000000178d0 <png_gamma_threshold>:
   178d0:	push   %rbp
   178d1:	mov    %rsp,%rbp
   178d4:	sub    $0x10,%rsp
   178d8:	mov    %rsi,%rdx
   178db:	mov    %rdi,%rsi
   178de:	lea    -0x4(%rbp),%rdi
   178e2:	mov    $0x186a0,%ecx
   178e7:	callq  8970 <png_muldiv>
   178ec:	test   %eax,%eax
   178ee:	jne    178f7 <png_gamma_threshold+0x27>
   178f0:	mov    $0x1,%eax
   178f5:	leaveq 
   178f6:	retq   
   178f7:	movslq -0x4(%rbp),%rdi
   178fb:	callq  8b10 <png_gamma_significant>
   17900:	test   %eax,%eax
   17902:	je     1790b <png_gamma_threshold+0x3b>
   17904:	mov    $0x1,%eax
   17909:	leaveq 
   1790a:	retq   
   1790b:	xor    %eax,%eax
   1790d:	leaveq 
   1790e:	retq   
   1790f:	nop

0000000000017910 <png_init_palette_transformations>:
   17910:	push   %rbp
   17911:	mov    %rsp,%rbp
   17914:	xor    %edx,%edx
   17916:	movzwl 0x260(%rdi),%eax
   1791d:	test   %ax,%ax
   17920:	jne    17940 <png_init_palette_transformations+0x30>
   17922:	mov    %rdx,%rax
   17925:	mov    %rax,%rsi
   17928:	test   %esi,%esi
   1792a:	je     1794d <png_init_palette_transformations+0x3d>
   1792c:	mov    0x134(%rdi),%ecx
   17932:	mov    %rcx,%rax
   17935:	and    $0x100,%eax
   1793a:	test   %eax,%eax
   1793c:	jne    17986 <png_init_palette_transformations+0x76>
   1793e:	leaveq 
   1793f:	retq   
   17940:	mov    $0x1,%esi
   17945:	mov    %rdx,%rax
   17948:	mov    %rax,%rcx
   1794b:	jmp    179ac <png_init_palette_transformations+0x9c>
   1794d:	mov    0x134(%rdi),%esi
   17953:	mov    %rsi,%rcx
   17956:	and    $0xff7fffff,%ecx
   1795c:	mov    %ecx,0x134(%rdi)
   17962:	mov    0x130(%rdi),%ecx
   17968:	and    $0xffffdfff,%ecx
   1796e:	mov    %ecx,0x130(%rdi)
   17974:	test   %eax,%eax
   17976:	jne    1792c <png_init_palette_transformations+0x1c>
   17978:	and    $0xff7ffe7f,%esi
   1797e:	mov    %esi,0x134(%rdi)
   17984:	jmp    1792c <png_init_palette_transformations+0x1c>
   17986:	mov    %rcx,%rax
   17989:	and    $0x1000,%eax
   1798e:	test   %eax,%eax
   17990:	jne    179c1 <png_init_palette_transformations+0xb1>
   17992:	leaveq 
   17993:	retq   
   17994:	mov    0x2e8(%rdi),%r8
   1799b:	movslq %ecx,%r9
   1799e:	movzbl (%r8,%r9,1),%r8d
   179a3:	cmp    $0xff,%r8b
   179a7:	jne    17a01 <png_init_palette_transformations+0xf1>
   179a9:	add    $0x1,%ecx
   179ac:	movzwl 0x260(%rdi),%r8d
   179b4:	cmp    %r8d,%ecx
   179b7:	jl     17994 <png_init_palette_transformations+0x84>
   179b9:	mov    %rdx,%rsi
   179bc:	jmpq   17928 <png_init_palette_transformations+0x18>
   179c1:	movzbl 0x27c(%rdi),%eax
   179c8:	lea    (%rax,%rax,2),%rax
   179cc:	add    0x250(%rdi),%rax
   179d3:	movzbl (%rax),%esi
   179d6:	mov    %si,0x27e(%rdi)
   179dd:	movzbl 0x1(%rax),%esi
   179e1:	mov    %si,0x280(%rdi)
   179e8:	movzbl 0x2(%rax),%eax
   179ec:	mov    %ax,0x282(%rdi)
   179f3:	mov    %rcx,%rax
   179f6:	and    $0x80000,%eax
   179fb:	test   %eax,%eax
   179fd:	jne    17a0b <png_init_palette_transformations+0xfb>
   179ff:	leaveq 
   17a00:	retq   
   17a01:	test   %r8b,%r8b
   17a04:	jne    17a17 <png_init_palette_transformations+0x107>
   17a06:	mov    %rsi,%rax
   17a09:	jmp    179a9 <png_init_palette_transformations+0x99>
   17a0b:	and    $0x2000000,%ecx
   17a11:	test   %ecx,%ecx
   17a13:	je     17a1f <png_init_palette_transformations+0x10f>
   17a15:	leaveq 
   17a16:	retq   
   17a17:	mov    %rsi,%rax
   17a1a:	jmpq   17928 <png_init_palette_transformations+0x18>
   17a1f:	movzwl 0x260(%rdi),%esi
   17a26:	jmp    17a3c <png_init_palette_transformations+0x12c>
   17a28:	movslq %edx,%rax
   17a2b:	add    0x2e8(%rdi),%rax
   17a32:	movzbl (%rax),%ecx
   17a35:	not    %ecx
   17a37:	mov    %cl,(%rax)
   17a39:	add    $0x1,%edx
   17a3c:	cmp    %esi,%edx
   17a3e:	jl     17a28 <png_init_palette_transformations+0x118>
   17a40:	leaveq 
   17a41:	retq   
   17a42:	data16 nopw %cs:0x0(%rax,%rax,1)
   17a4d:	nopl   (%rax)

0000000000017a50 <png_init_rgb_transformations>:
   17a50:	push   %rbp
   17a51:	mov    %rsp,%rbp
   17a54:	mov    $0x1,%edx
   17a59:	xor    %ecx,%ecx
   17a5b:	movzbl 0x267(%rdi),%eax
   17a62:	and    $0x4,%eax
   17a65:	test   %eax,%eax
   17a67:	jg     17a6e <png_init_rgb_transformations+0x1e>
   17a69:	mov    %rcx,%rsi
   17a6c:	jmp    17a71 <png_init_rgb_transformations+0x21>
   17a6e:	mov    %rdx,%rsi
   17a71:	movzwl 0x260(%rdi),%eax
   17a78:	test   %ax,%ax
   17a7b:	je     17a80 <png_init_rgb_transformations+0x30>
   17a7d:	mov    %rdx,%rcx
   17a80:	test   %esi,%esi
   17a82:	je     17a98 <png_init_rgb_transformations+0x48>
   17a84:	mov    0x134(%rdi),%ecx
   17a8a:	mov    %rcx,%rax
   17a8d:	and    $0x100,%eax
   17a92:	test   %eax,%eax
   17a94:	jne    17acf <png_init_rgb_transformations+0x7f>
   17a96:	leaveq 
   17a97:	retq   
   17a98:	mov    0x134(%rdi),%edx
   17a9e:	mov    %rdx,%rax
   17aa1:	and    $0xff7fffff,%eax
   17aa6:	mov    %eax,0x134(%rdi)
   17aac:	mov    0x130(%rdi),%eax
   17ab2:	and    $0xffffdfff,%eax
   17ab7:	mov    %eax,0x130(%rdi)
   17abd:	test   %ecx,%ecx
   17abf:	jne    17a84 <png_init_rgb_transformations+0x34>
   17ac1:	and    $0xff7ffe7f,%edx
   17ac7:	mov    %edx,0x134(%rdi)
   17acd:	jmp    17a84 <png_init_rgb_transformations+0x34>
   17acf:	mov    %rcx,%rax
   17ad2:	and    $0x1000,%eax
   17ad7:	test   %eax,%eax
   17ad9:	jne    17add <png_init_rgb_transformations+0x8d>
   17adb:	leaveq 
   17adc:	retq   
   17add:	movzbl 0x267(%rdi),%eax
   17ae4:	and    $0x2,%eax
   17ae7:	test   %eax,%eax
   17ae9:	je     17aed <png_init_rgb_transformations+0x9d>
   17aeb:	leaveq 
   17aec:	retq   
   17aed:	movzwl 0x284(%rdi),%edx
   17af4:	movzwl 0x2f8(%rdi),%eax
   17afb:	movzbl 0x268(%rdi),%esi
   17b02:	cmp    $0x1,%sil
   17b06:	jbe    17b26 <png_init_rgb_transformations+0xd6>
   17b08:	cmp    $0x2,%sil
   17b0c:	je     17b65 <png_init_rgb_transformations+0x115>
   17b0e:	cmp    $0x4,%sil
   17b12:	jne    17b44 <png_init_rgb_transformations+0xf4>
   17b14:	mov    %rax,%rsi
   17b17:	shl    $0x4,%esi
   17b1a:	add    %esi,%eax
   17b1c:	mov    %rdx,%rsi
   17b1f:	shl    $0x4,%esi
   17b22:	add    %esi,%edx
   17b24:	jmp    17b44 <png_init_rgb_transformations+0xf4>
   17b26:	cmp    $0x1,%sil
   17b2a:	jne    17b44 <png_init_rgb_transformations+0xf4>
   17b2c:	mov    %rax,%rsi
   17b2f:	shl    $0x8,%esi
   17b32:	sub    %ax,%si
   17b35:	mov    %rdx,%rax
   17b38:	shl    $0x8,%eax
   17b3b:	sub    %dx,%ax
   17b3e:	mov    %rax,%rdx
   17b41:	mov    %rsi,%rax
   17b44:	mov    %dx,0x282(%rdi)
   17b4b:	mov    %dx,0x280(%rdi)
   17b52:	mov    %dx,0x27e(%rdi)
   17b59:	and    $0x2000000,%ecx
   17b5f:	test   %ecx,%ecx
   17b61:	je     17b7d <png_init_rgb_transformations+0x12d>
   17b63:	leaveq 
   17b64:	retq   
   17b65:	mov    %rax,%rsi
   17b68:	shl    $0x4,%esi
   17b6b:	add    %esi,%eax
   17b6d:	lea    (%rax,%rax,4),%eax
   17b70:	mov    %rdx,%rsi
   17b73:	shl    $0x4,%esi
   17b76:	add    %esi,%edx
   17b78:	lea    (%rdx,%rdx,4),%edx
   17b7b:	jmp    17b44 <png_init_rgb_transformations+0xf4>
   17b7d:	mov    %ax,0x2f6(%rdi)
   17b84:	mov    %ax,0x2f4(%rdi)
   17b8b:	mov    %ax,0x2f2(%rdi)
   17b92:	leaveq 
   17b93:	retq   
   17b94:	data16 nopw %cs:0x0(%rax,%rax,1)
   17b9f:	nop

0000000000017ba0 <png_do_unpack>:
   17ba0:	push   %rbp
   17ba1:	mov    %rsp,%rbp
   17ba4:	movzbl 0x11(%rdi),%ecx
   17ba8:	cmp    $0x7,%cl
   17bab:	jbe    17baf <png_do_unpack+0xf>
   17bad:	leaveq 
   17bae:	retq   
   17baf:	mov    (%rdi),%eax
   17bb1:	xor    %edx,%edx
   17bb3:	cmp    $0x1,%cl
   17bb6:	jbe    17bee <png_do_unpack+0x4e>
   17bb8:	cmp    $0x2,%cl
   17bbb:	je     17c15 <png_do_unpack+0x75>
   17bbd:	cmp    $0x4,%cl
   17bc0:	jne    17c3a <png_do_unpack+0x9a>
   17bc2:	mov    $0xfffffffe,%ecx
   17bc7:	sub    %eax,%ecx
   17bc9:	and    $0x1,%ecx
   17bcc:	neg    %ecx
   17bce:	and    $0x4,%ecx
   17bd1:	lea    -0x1(%rax),%r8d
   17bd5:	shr    %r8d
   17bd8:	mov    %r8d,%r8d
   17bdb:	add    %rsi,%r8
   17bde:	lea    -0x1(%rsi,%rax,1),%r10
   17be3:	mov    $0x4,%r9d
   17be9:	mov    %rdx,%r11
   17bec:	jmp    17c65 <png_do_unpack+0xc5>
   17bee:	cmp    $0x1,%cl
   17bf1:	jne    17c3a <png_do_unpack+0x9a>
   17bf3:	mov    $0xfffffff8,%ecx
   17bf8:	sub    %eax,%ecx
   17bfa:	and    $0x7,%ecx
   17bfd:	lea    -0x1(%rax),%r8d
   17c01:	shr    $0x3,%r8d
   17c05:	mov    %r8d,%r8d
   17c08:	add    %rsi,%r8
   17c0b:	lea    -0x1(%rsi,%rax,1),%r9
   17c10:	mov    %rdx,%r10
   17c13:	jmp    17c90 <png_do_unpack+0xf0>
   17c15:	lea    -0x1(%rax),%ecx
   17c18:	shr    $0x2,%ecx
   17c1b:	mov    %ecx,%ecx
   17c1d:	lea    (%rsi,%rcx,1),%r8
   17c21:	mov    $0xfffffffc,%ecx
   17c26:	sub    %eax,%ecx
   17c28:	and    $0x3,%ecx
   17c2b:	add    %ecx,%ecx
   17c2d:	lea    -0x1(%rsi,%rax,1),%r9
   17c32:	mov    %rdx,%r10
   17c35:	jmpq   17cbb <png_do_unpack+0x11b>
   17c3a:	movb   $0x8,0x11(%rdi)
   17c3e:	movzbl 0x12(%rdi),%edx
   17c42:	mov    %rdx,%rcx
   17c45:	shl    $0x3,%ecx
   17c48:	mov    %cl,0x13(%rdi)
   17c4b:	imul   %edx,%eax
   17c4e:	mov    %eax,%eax
   17c50:	mov    %rax,0x8(%rdi)
   17c54:	leaveq 
   17c55:	retq   
   17c56:	add    $0xffffffffffffffff,%r8
   17c5a:	mov    %rdx,%rcx
   17c5d:	add    $0xffffffffffffffff,%r10
   17c61:	add    $0x1,%r11d
   17c65:	cmp    %eax,%r11d
   17c68:	jae    17c3a <png_do_unpack+0x9a>
   17c6a:	movzbl (%r8),%esi
   17c6e:	shr    %cl,%esi
   17c70:	and    $0xf,%sil
   17c74:	mov    %sil,(%r10)
   17c77:	cmp    $0x4,%ecx
   17c7a:	je     17c56 <png_do_unpack+0xb6>
   17c7c:	mov    %r9,%rcx
   17c7f:	jmp    17c5d <png_do_unpack+0xbd>
   17c81:	add    $0xffffffffffffffff,%r8
   17c85:	mov    %rdx,%rcx
   17c88:	add    $0xffffffffffffffff,%r9
   17c8c:	add    $0x1,%r10d
   17c90:	cmp    %r10d,%eax
   17c93:	jbe    17c3a <png_do_unpack+0x9a>
   17c95:	movzbl (%r8),%esi
   17c99:	shr    %cl,%esi
   17c9b:	and    $0x1,%sil
   17c9f:	mov    %sil,(%r9)
   17ca2:	cmp    $0x7,%ecx
   17ca5:	je     17c81 <png_do_unpack+0xe1>
   17ca7:	add    $0x1,%ecx
   17caa:	jmp    17c88 <png_do_unpack+0xe8>
   17cac:	add    $0xffffffffffffffff,%r8
   17cb0:	mov    %rdx,%rcx
   17cb3:	add    $0xffffffffffffffff,%r9
   17cb7:	add    $0x1,%r10d
   17cbb:	cmp    %r10d,%eax
   17cbe:	jbe    17c3a <png_do_unpack+0x9a>
   17cc4:	movzbl (%r8),%esi
   17cc8:	shr    %cl,%esi
   17cca:	and    $0x3,%sil
   17cce:	mov    %sil,(%r9)
   17cd1:	cmp    $0x6,%ecx
   17cd4:	je     17cac <png_do_unpack+0x10c>
   17cd6:	add    $0x2,%ecx
   17cd9:	jmp    17cb3 <png_do_unpack+0x113>
   17cdb:	nopl   0x0(%rax,%rax,1)

0000000000017ce0 <png_do_unshift>:
   17ce0:	push   %rbp
   17ce1:	mov    %rsp,%rbp
   17ce4:	sub    $0x20,%rsp
   17ce8:	movzbl 0x10(%rdi),%eax
   17cec:	cmp    $0x3,%al
   17cee:	jne    17cf2 <png_do_unshift+0x12>
   17cf0:	leaveq 
   17cf1:	retq   
   17cf2:	movzbl 0x11(%rdi),%r11d
   17cf7:	mov    $0x4,%ecx
   17cfc:	mov    $0x1,%r10d
   17d02:	mov    %rax,%r8
   17d05:	and    $0x2,%r8d
   17d09:	test   %r8d,%r8d
   17d0c:	jg     17d28 <png_do_unshift+0x48>
   17d0e:	movzbl 0x3(%rdx),%r8d
   17d13:	neg    %r8d
   17d16:	add    %r11d,%r8d
   17d19:	mov    %r8d,-0x18(%rbp)
   17d1d:	mov    $0x2,%r9d
   17d23:	mov    %r10,%r8
   17d26:	jmp    17d62 <png_do_unshift+0x82>
   17d28:	movzbl (%rdx),%r8d
   17d2c:	neg    %r8d
   17d2f:	add    %r11d,%r8d
   17d32:	mov    %r8d,-0x18(%rbp)
   17d36:	movzbl 0x1(%rdx),%r8d
   17d3b:	neg    %r8d
   17d3e:	add    %r11d,%r8d
   17d41:	mov    %r8d,-0x14(%rbp)
   17d45:	movzbl 0x2(%rdx),%r8d
   17d4a:	neg    %r8d
   17d4d:	add    %r11d,%r8d
   17d50:	mov    %r8d,-0x10(%rbp)
   17d54:	mov    %rcx,%r9
   17d57:	mov    $0xc,%ecx
   17d5c:	mov    $0x3,%r8d
   17d62:	mov    %rsi,-0x8(%rbp)
   17d66:	xor    %esi,%esi
   17d68:	and    $0x4,%eax
   17d6b:	test   %eax,%eax
   17d6d:	jg     17d77 <png_do_unshift+0x97>
   17d6f:	mov    %rsi,%rax
   17d72:	mov    %rax,%rcx
   17d75:	jmp    17d9b <png_do_unshift+0xbb>
   17d77:	movzbl 0x4(%rdx),%eax
   17d7b:	neg    %eax
   17d7d:	add    %r11d,%eax
   17d80:	mov    %eax,-0x18(%rbp,%rcx,1)
   17d84:	mov    %r9,%r8
   17d87:	mov    %rsi,%rax
   17d8a:	mov    %rax,%rcx
   17d8d:	jmp    17d9b <png_do_unshift+0xbb>
   17d8f:	movl   $0x0,-0x18(%rbp,%r9,4)
   17d98:	add    $0x1,%ecx
   17d9b:	cmp    %ecx,%r8d
   17d9e:	jg     17da6 <png_do_unshift+0xc6>
   17da0:	test   %eax,%eax
   17da2:	jne    17dbc <png_do_unshift+0xdc>
   17da4:	leaveq 
   17da5:	retq   
   17da6:	movslq %ecx,%r9
   17da9:	movslq -0x18(%rbp,%r9,4),%rdx
   17dae:	test   %edx,%edx
   17db0:	jle    17d8f <png_do_unshift+0xaf>
   17db2:	cmp    %r11d,%edx
   17db5:	jge    17d8f <png_do_unshift+0xaf>
   17db7:	mov    %r10,%rax
   17dba:	jmp    17d98 <png_do_unshift+0xb8>
   17dbc:	cmp    $0x7,%r11b
   17dc0:	jbe    17dd0 <png_do_unshift+0xf0>
   17dc2:	cmp    $0x8,%r11b
   17dc6:	je     17dde <png_do_unshift+0xfe>
   17dc8:	cmp    $0x10,%r11b
   17dcc:	je     17dee <png_do_unshift+0x10e>
   17dce:	leaveq 
   17dcf:	retq   
   17dd0:	cmp    $0x2,%r11b
   17dd4:	je     17e01 <png_do_unshift+0x121>
   17dd6:	cmp    $0x4,%r11b
   17dda:	je     17e11 <png_do_unshift+0x131>
   17ddc:	leaveq 
   17ddd:	retq   
   17dde:	mov    -0x8(%rbp),%rdx
   17de2:	mov    0x8(%rdi),%rdi
   17de6:	add    %rdx,%rdi
   17de9:	mov    %rsi,%rax
   17dec:	jmp    17e53 <png_do_unshift+0x173>
   17dee:	mov    -0x8(%rbp),%r9
   17df2:	mov    %r9,%rdx
   17df5:	add    0x8(%rdi),%rdx
   17df9:	mov    %rsi,%rax
   17dfc:	jmpq   17e8e <png_do_unshift+0x1ae>
   17e01:	mov    -0x8(%rbp),%rcx
   17e05:	mov    %rcx,%rdx
   17e08:	add    0x8(%rdi),%rdx
   17e0c:	jmpq   17ea2 <png_do_unshift+0x1c2>
   17e11:	mov    -0x8(%rbp),%rdx
   17e15:	mov    %rdx,%rsi
   17e18:	add    0x8(%rdi),%rsi
   17e1c:	mov    -0x18(%rbp),%ecx
   17e1f:	mov    $0xf,%eax
   17e24:	shr    %cl,%eax
   17e26:	mov    %rax,%rdi
   17e29:	shl    $0x4,%edi
   17e2c:	add    %eax,%edi
   17e2e:	jmpq   17eb6 <png_do_unshift+0x1d6>
   17e33:	movzbl (%rdx),%r9d
   17e37:	movslq %eax,%rcx
   17e3a:	mov    -0x18(%rbp,%rcx,4),%ecx
   17e3e:	add    $0x1,%eax
   17e41:	cmp    %eax,%r8d
   17e44:	jg     17e49 <png_do_unshift+0x169>
   17e46:	mov    %rsi,%rax
   17e49:	shr    %cl,%r9d
   17e4c:	mov    %r9b,(%rdx)
   17e4f:	add    $0x1,%rdx
   17e53:	cmp    %rdi,%rdx
   17e56:	jb     17e33 <png_do_unshift+0x153>
   17e58:	leaveq 
   17e59:	retq   
   17e5a:	movzbl 0x1(%r9),%r10d
   17e5f:	movzbl (%r9),%edi
   17e63:	movslq %eax,%rcx
   17e66:	mov    -0x18(%rbp,%rcx,4),%ecx
   17e6a:	add    $0x1,%eax
   17e6d:	cmp    %eax,%r8d
   17e70:	jg     17e75 <png_do_unshift+0x195>
   17e72:	mov    %rsi,%rax
   17e75:	shl    $0x8,%edi
   17e78:	add    %r10d,%edi
   17e7b:	shr    %cl,%edi
   17e7d:	mov    %rdi,%rcx
   17e80:	shr    $0x8,%ecx
   17e83:	mov    %cl,(%r9)
   17e86:	mov    %dil,0x1(%r9)
   17e8a:	add    $0x2,%r9
   17e8e:	cmp    %rdx,%r9
   17e91:	jb     17e5a <png_do_unshift+0x17a>
   17e93:	leaveq 
   17e94:	retq   
   17e95:	movzbl (%rcx),%eax
   17e98:	shr    %eax
   17e9a:	and    $0x55,%al
   17e9c:	mov    %al,(%rcx)
   17e9e:	add    $0x1,%rcx
   17ea2:	cmp    %rdx,%rcx
   17ea5:	jb     17e95 <png_do_unshift+0x1b5>
   17ea7:	leaveq 
   17ea8:	retq   
   17ea9:	movzbl (%rdx),%eax
   17eac:	shr    %cl,%eax
   17eae:	and    %edi,%eax
   17eb0:	mov    %al,(%rdx)
   17eb2:	add    $0x1,%rdx
   17eb6:	cmp    %rsi,%rdx
   17eb9:	jb     17ea9 <png_do_unshift+0x1c9>
   17ebb:	leaveq 
   17ebc:	retq   
   17ebd:	nopl   (%rax)

0000000000017ec0 <png_do_scale_16_to_8>:
   17ec0:	push   %rbp
   17ec1:	mov    %rsp,%rbp
   17ec4:	movzbl 0x11(%rdi),%eax
   17ec8:	cmp    $0x10,%al
   17eca:	je     17ece <png_do_scale_16_to_8+0xe>
   17ecc:	leaveq 
   17ecd:	retq   
   17ece:	mov    %rsi,%rdx
   17ed1:	add    0x8(%rdi),%rdx
   17ed5:	mov    %rsi,%rax
   17ed8:	jmp    17f0a <png_do_scale_16_to_8+0x4a>
   17eda:	movzbl 0x1(%rax),%r8d
   17edf:	movzbl (%rax),%r9d
   17ee3:	mov    %r8,%rcx
   17ee6:	sub    %r9d,%ecx
   17ee9:	shl    $0x10,%ecx
   17eec:	neg    %r8d
   17eef:	add    %r9d,%r8d
   17ef2:	lea    0x7fff80(%rcx,%r8,1),%ecx
   17efa:	sar    $0x18,%ecx
   17efd:	add    %r9d,%ecx
   17f00:	mov    %cl,(%rsi)
   17f02:	add    $0x2,%rax
   17f06:	add    $0x1,%rsi
   17f0a:	cmp    %rdx,%rax
   17f0d:	jb     17eda <png_do_scale_16_to_8+0x1a>
   17f0f:	movb   $0x8,0x11(%rdi)
   17f13:	movzbl 0x12(%rdi),%eax
   17f17:	mov    %rax,%rcx
   17f1a:	shl    $0x3,%ecx
   17f1d:	mov    %cl,0x13(%rdi)
   17f20:	imul   (%rdi),%eax
   17f23:	mov    %eax,%eax
   17f25:	mov    %rax,0x8(%rdi)
   17f29:	leaveq 
   17f2a:	retq   
   17f2b:	nopl   0x0(%rax,%rax,1)

0000000000017f30 <png_do_chop>:
   17f30:	push   %rbp
   17f31:	mov    %rsp,%rbp
   17f34:	movzbl 0x11(%rdi),%eax
   17f38:	cmp    $0x10,%al
   17f3a:	je     17f3e <png_do_chop+0xe>
   17f3c:	leaveq 
   17f3d:	retq   
   17f3e:	mov    %rsi,%rcx
   17f41:	add    0x8(%rdi),%rcx
   17f45:	mov    %rsi,%rax
   17f48:	jmp    17f57 <png_do_chop+0x27>
   17f4a:	movzbl (%rax),%edx
   17f4d:	mov    %dl,(%rsi)
   17f4f:	add    $0x2,%rax
   17f53:	add    $0x1,%rsi
   17f57:	cmp    %rcx,%rax
   17f5a:	jb     17f4a <png_do_chop+0x1a>
   17f5c:	movb   $0x8,0x11(%rdi)
   17f60:	movzbl 0x12(%rdi),%eax
   17f64:	mov    %rax,%rcx
   17f67:	shl    $0x3,%ecx
   17f6a:	mov    %cl,0x13(%rdi)
   17f6d:	imul   (%rdi),%eax
   17f70:	mov    %eax,%eax
   17f72:	mov    %rax,0x8(%rdi)
   17f76:	leaveq 
   17f77:	retq   
   17f78:	nopl   0x0(%rax,%rax,1)

0000000000017f80 <png_do_read_swap_alpha>:
   17f80:	push   %rbp
   17f81:	mov    %rsp,%rbp
   17f84:	mov    (%rdi),%r9d
   17f87:	xor    %eax,%eax
   17f89:	movzbl 0x10(%rdi),%ecx
   17f8d:	cmp    $0x6,%cl
   17f90:	je     17f99 <png_do_read_swap_alpha+0x19>
   17f92:	cmp    $0x4,%cl
   17f95:	je     17fa8 <png_do_read_swap_alpha+0x28>
   17f97:	leaveq 
   17f98:	retq   
   17f99:	movzbl 0x11(%rdi),%ecx
   17f9d:	cmp    $0x8,%cl
   17fa0:	je     17fba <png_do_read_swap_alpha+0x3a>
   17fa2:	add    0x8(%rdi),%rsi
   17fa6:	jmp    18006 <png_do_read_swap_alpha+0x86>
   17fa8:	movzbl 0x11(%rdi),%ecx
   17fac:	cmp    $0x8,%cl
   17faf:	je     1800d <png_do_read_swap_alpha+0x8d>
   17fb1:	add    0x8(%rdi),%rsi
   17fb5:	jmpq   1803a <png_do_read_swap_alpha+0xba>
   17fba:	add    0x8(%rdi),%rsi
   17fbe:	jmpq   18066 <png_do_read_swap_alpha+0xe6>
   17fc3:	movzbl -0x3(%rsi),%r8d
   17fc8:	movzbl -0x4(%rsi),%edi
   17fcc:	movzbl -0x5(%rsi),%ecx
   17fd0:	mov    %cl,-0x3(%rsi)
   17fd3:	movzbl -0x6(%rsi),%ecx
   17fd7:	mov    %cl,-0x4(%rsi)
   17fda:	movzbl -0x7(%rsi),%ecx
   17fde:	mov    %cl,-0x5(%rsi)
   17fe1:	lea    -0x8(%rsi),%rdx
   17fe5:	movzbl (%rdx),%ecx
   17fe8:	mov    %cl,-0x6(%rsi)
   17feb:	movzbl -0x1(%rsi),%ecx
   17fef:	mov    %r8b,-0x1(%rsi)
   17ff3:	mov    %cl,-0x7(%rsi)
   17ff6:	movzbl -0x2(%rsi),%ecx
   17ffa:	mov    %dil,-0x2(%rsi)
   17ffe:	mov    %cl,(%rdx)
   18000:	add    $0x1,%eax
   18003:	mov    %rdx,%rsi
   18006:	cmp    %eax,%r9d
   18009:	ja     17fc3 <png_do_read_swap_alpha+0x43>
   1800b:	leaveq 
   1800c:	retq   
   1800d:	add    0x8(%rdi),%rsi
   18011:	jmp    18083 <png_do_read_swap_alpha+0x103>
   18013:	movzbl -0x3(%rsi),%edx
   18017:	lea    -0x4(%rsi),%rcx
   1801b:	movzbl (%rcx),%r8d
   1801f:	movzbl -0x1(%rsi),%edi
   18023:	mov    %dl,-0x1(%rsi)
   18026:	mov    %dil,-0x3(%rsi)
   1802a:	movzbl -0x2(%rsi),%edx
   1802e:	mov    %r8b,-0x2(%rsi)
   18032:	mov    %dl,(%rcx)
   18034:	add    $0x1,%eax
   18037:	mov    %rcx,%rsi
   1803a:	cmp    %eax,%r9d
   1803d:	ja     18013 <png_do_read_swap_alpha+0x93>
   1803f:	leaveq 
   18040:	retq   
   18041:	movzbl -0x2(%rsi),%edi
   18045:	movzbl -0x3(%rsi),%ecx
   18049:	mov    %cl,-0x2(%rsi)
   1804c:	lea    -0x4(%rsi),%rdx
   18050:	movzbl (%rdx),%ecx
   18053:	mov    %cl,-0x3(%rsi)
   18056:	movzbl -0x1(%rsi),%ecx
   1805a:	mov    %dil,-0x1(%rsi)
   1805e:	mov    %cl,(%rdx)
   18060:	add    $0x1,%eax
   18063:	mov    %rdx,%rsi
   18066:	cmp    %r9d,%eax
   18069:	jb     18041 <png_do_read_swap_alpha+0xc1>
   1806b:	leaveq 
   1806c:	retq   
   1806d:	lea    -0x2(%rsi),%rdi
   18071:	movzbl (%rdi),%edx
   18074:	movzbl -0x1(%rsi),%ecx
   18078:	mov    %dl,-0x1(%rsi)
   1807b:	mov    %cl,(%rdi)
   1807d:	add    $0x1,%eax
   18080:	mov    %rdi,%rsi
   18083:	cmp    %eax,%r9d
   18086:	ja     1806d <png_do_read_swap_alpha+0xed>
   18088:	leaveq 
   18089:	retq   
   1808a:	nopw   0x0(%rax,%rax,1)

0000000000018090 <png_do_read_invert_alpha>:
   18090:	push   %rbp
   18091:	mov    %rsp,%rbp
   18094:	mov    (%rdi),%r8d
   18097:	xor    %eax,%eax
   18099:	movzbl 0x10(%rdi),%ecx
   1809d:	cmp    $0x6,%cl
   180a0:	je     180a9 <png_do_read_invert_alpha+0x19>
   180a2:	cmp    $0x4,%cl
   180a5:	je     180b8 <png_do_read_invert_alpha+0x28>
   180a7:	leaveq 
   180a8:	retq   
   180a9:	movzbl 0x11(%rdi),%ecx
   180ad:	cmp    $0x8,%cl
   180b0:	je     180c7 <png_do_read_invert_alpha+0x37>
   180b2:	add    0x8(%rdi),%rsi
   180b6:	jmp    180eb <png_do_read_invert_alpha+0x5b>
   180b8:	movzbl 0x11(%rdi),%ecx
   180bc:	cmp    $0x8,%cl
   180bf:	je     180f2 <png_do_read_invert_alpha+0x62>
   180c1:	add    0x8(%rdi),%rsi
   180c5:	jmp    18116 <png_do_read_invert_alpha+0x86>
   180c7:	mov    0x8(%rdi),%rcx
   180cb:	lea    -0x1(%rcx,%rsi,1),%rcx
   180d0:	jmp    1812b <png_do_read_invert_alpha+0x9b>
   180d2:	movzbl -0x1(%rsi),%ecx
   180d6:	not    %ecx
   180d8:	mov    %cl,-0x1(%rsi)
   180db:	movzbl -0x2(%rsi),%ecx
   180df:	not    %ecx
   180e1:	mov    %cl,-0x2(%rsi)
   180e4:	add    $0x1,%eax
   180e7:	add    $0xfffffffffffffff8,%rsi
   180eb:	cmp    %eax,%r8d
   180ee:	ja     180d2 <png_do_read_invert_alpha+0x42>
   180f0:	leaveq 
   180f1:	retq   
   180f2:	mov    0x8(%rdi),%rcx
   180f6:	lea    -0x1(%rsi,%rcx,1),%rcx
   180fb:	jmp    18140 <png_do_read_invert_alpha+0xb0>
   180fd:	movzbl -0x1(%rsi),%ecx
   18101:	not    %ecx
   18103:	mov    %cl,-0x1(%rsi)
   18106:	movzbl -0x2(%rsi),%ecx
   1810a:	not    %ecx
   1810c:	mov    %cl,-0x2(%rsi)
   1810f:	add    $0x1,%eax
   18112:	add    $0xfffffffffffffffc,%rsi
   18116:	cmp    %eax,%r8d
   18119:	ja     180fd <png_do_read_invert_alpha+0x6d>
   1811b:	leaveq 
   1811c:	retq   
   1811d:	movzbl (%rcx),%edx
   18120:	not    %edx
   18122:	mov    %dl,(%rcx)
   18124:	add    $0x1,%eax
   18127:	add    $0xfffffffffffffffc,%rcx
   1812b:	cmp    %r8d,%eax
   1812e:	jb     1811d <png_do_read_invert_alpha+0x8d>
   18130:	leaveq 
   18131:	retq   
   18132:	movzbl (%rcx),%edx
   18135:	not    %edx
   18137:	mov    %dl,(%rcx)
   18139:	add    $0x1,%eax
   1813c:	add    $0xfffffffffffffffe,%rcx
   18140:	cmp    %eax,%r8d
   18143:	ja     18132 <png_do_read_invert_alpha+0xa2>
   18145:	leaveq 
   18146:	retq   
   18147:	nopw   0x0(%rax,%rax,1)

0000000000018150 <png_do_read_filler>:
   18150:	push   %rbp
   18151:	mov    %rsp,%rbp
   18154:	mov    (%rdi),%r9d
   18157:	mov    %rdx,%r11
   1815a:	shr    $0x8,%r11d
   1815e:	mov    $0x1,%r8d
   18164:	xor    %eax,%eax
   18166:	movzbl 0x10(%rdi),%r10d
   1816b:	test   %r10b,%r10b
   1816e:	je     18178 <png_do_read_filler+0x28>
   18170:	cmp    $0x2,%r10b
   18174:	je     1818b <png_do_read_filler+0x3b>
   18176:	leaveq 
   18177:	retq   
   18178:	movzbl 0x11(%rdi),%r10d
   1817d:	cmp    $0x8,%r10b
   18181:	je     1819e <png_do_read_filler+0x4e>
   18183:	cmp    $0x10,%r10b
   18187:	je     181b2 <png_do_read_filler+0x62>
   18189:	leaveq 
   1818a:	retq   
   1818b:	movzbl 0x11(%rdi),%r10d
   18190:	cmp    $0x8,%r10b
   18194:	je     181cd <png_do_read_filler+0x7d>
   18196:	cmp    $0x10,%r10b
   1819a:	je     181eb <png_do_read_filler+0x9b>
   1819c:	leaveq 
   1819d:	retq   
   1819e:	and    $0x80,%ecx
   181a4:	test   %ecx,%ecx
   181a6:	jne    1820a <png_do_read_filler+0xba>
   181a8:	lea    (%r9,%rsi,1),%rcx
   181ac:	lea    (%rsi,%r9,2),%rsi
   181b0:	jmp    1822c <png_do_read_filler+0xdc>
   181b2:	and    $0x80,%ecx
   181b8:	test   %ecx,%ecx
   181ba:	jne    18245 <png_do_read_filler+0xf5>
   181c0:	lea    (%rsi,%r9,2),%rcx
   181c4:	lea    (%rsi,%r9,4),%rsi
   181c8:	jmpq   18274 <png_do_read_filler+0x124>
   181cd:	and    $0x80,%ecx
   181d3:	test   %ecx,%ecx
   181d5:	jne    1828e <png_do_read_filler+0x13e>
   181db:	lea    (%r9,%r9,2),%rcx
   181df:	add    %rsi,%rcx
   181e2:	lea    (%r9,%rcx,1),%rsi
   181e6:	jmpq   182c5 <png_do_read_filler+0x175>
   181eb:	and    $0x80,%ecx
   181f1:	test   %ecx,%ecx
   181f3:	jne    182df <png_do_read_filler+0x18f>
   181f9:	lea    (%r9,%r9,2),%rcx
   181fd:	lea    (%rsi,%rcx,2),%rcx
   18201:	lea    (%rcx,%r9,2),%rsi
   18205:	jmpq   18336 <png_do_read_filler+0x1e6>
   1820a:	lea    (%rsi,%r9,2),%rax
   1820e:	lea    (%r9,%rsi,1),%rcx
   18212:	jmpq   18365 <png_do_read_filler+0x215>
   18217:	add    $0xffffffffffffffff,%rcx
   1821b:	movzbl (%rcx),%r8d
   1821f:	mov    %r8b,-0x1(%rsi)
   18223:	add    $0xfffffffffffffffe,%rsi
   18227:	mov    %dl,(%rsi)
   18229:	add    $0x1,%eax
   1822c:	cmp    %eax,%r9d
   1822f:	ja     18217 <png_do_read_filler+0xc7>
   18231:	movb   $0x2,0x12(%rdi)
   18235:	movb   $0x10,0x13(%rdi)
   18239:	lea    (%r9,%r9,1),%eax
   1823d:	mov    %eax,%eax
   1823f:	mov    %rax,0x8(%rdi)
   18243:	leaveq 
   18244:	retq   
   18245:	lea    (%rsi,%r9,4),%rax
   18249:	lea    (%rsi,%r9,2),%rcx
   1824d:	jmpq   183a2 <png_do_read_filler+0x252>
   18252:	movzbl -0x1(%rcx),%r8d
   18257:	mov    %r8b,-0x1(%rsi)
   1825b:	add    $0xfffffffffffffffe,%rcx
   1825f:	movzbl (%rcx),%r8d
   18263:	mov    %r8b,-0x2(%rsi)
   18267:	mov    %dl,-0x3(%rsi)
   1826a:	add    $0xfffffffffffffffc,%rsi
   1826e:	mov    %r11b,(%rsi)
   18271:	add    $0x1,%eax
   18274:	cmp    %eax,%r9d
   18277:	ja     18252 <png_do_read_filler+0x102>
   18279:	movb   $0x2,0x12(%rdi)
   1827d:	movb   $0x20,0x13(%rdi)
   18281:	shl    $0x2,%r9d
   18285:	mov    %r9d,%eax
   18288:	mov    %rax,0x8(%rdi)
   1828c:	leaveq 
   1828d:	retq   
   1828e:	lea    (%r9,%r9,2),%rax
   18292:	add    %rsi,%rax
   18295:	lea    (%r9,%rax,1),%rcx
   18299:	jmpq   183e8 <png_do_read_filler+0x298>
   1829e:	movzbl -0x1(%rcx),%r8d
   182a3:	mov    %r8b,-0x1(%rsi)
   182a7:	movzbl -0x2(%rcx),%r8d
   182ac:	mov    %r8b,-0x2(%rsi)
   182b0:	add    $0xfffffffffffffffd,%rcx
   182b4:	movzbl (%rcx),%r8d
   182b8:	mov    %r8b,-0x3(%rsi)
   182bc:	add    $0xfffffffffffffffc,%rsi
   182c0:	mov    %dl,(%rsi)
   182c2:	add    $0x1,%eax
   182c5:	cmp    %eax,%r9d
   182c8:	ja     1829e <png_do_read_filler+0x14e>
   182ca:	movb   $0x4,0x12(%rdi)
   182ce:	movb   $0x20,0x13(%rdi)
   182d2:	shl    $0x2,%r9d
   182d6:	mov    %r9d,%eax
   182d9:	mov    %rax,0x8(%rdi)
   182dd:	leaveq 
   182de:	retq   
   182df:	lea    (%r9,%r9,2),%rax
   182e3:	lea    (%rsi,%rax,2),%rax
   182e7:	lea    (%rax,%r9,2),%rcx
   182eb:	jmpq   18446 <png_do_read_filler+0x2f6>
   182f0:	movzbl -0x1(%rcx),%r8d
   182f5:	mov    %r8b,-0x1(%rsi)
   182f9:	movzbl -0x2(%rcx),%r8d
   182fe:	mov    %r8b,-0x2(%rsi)
   18302:	movzbl -0x3(%rcx),%r8d
   18307:	mov    %r8b,-0x3(%rsi)
   1830b:	movzbl -0x4(%rcx),%r8d
   18310:	mov    %r8b,-0x4(%rsi)
   18314:	movzbl -0x5(%rcx),%r8d
   18319:	mov    %r8b,-0x5(%rsi)
   1831d:	add    $0xfffffffffffffffa,%rcx
   18321:	movzbl (%rcx),%r8d
   18325:	mov    %r8b,-0x6(%rsi)
   18329:	mov    %dl,-0x7(%rsi)
   1832c:	add    $0xfffffffffffffff8,%rsi
   18330:	mov    %r11b,(%rsi)
   18333:	add    $0x1,%eax
   18336:	cmp    %eax,%r9d
   18339:	ja     182f0 <png_do_read_filler+0x1a0>
   1833b:	movb   $0x4,0x12(%rdi)
   1833f:	movb   $0x40,0x13(%rdi)
   18343:	shl    $0x3,%r9d
   18347:	mov    %r9d,%eax
   1834a:	mov    %rax,0x8(%rdi)
   1834e:	leaveq 
   1834f:	retq   
   18350:	mov    %dl,-0x1(%rax)
   18353:	add    $0xfffffffffffffffe,%rax
   18357:	add    $0xffffffffffffffff,%rcx
   1835b:	movzbl (%rcx),%esi
   1835e:	mov    %sil,(%rax)
   18361:	add    $0x1,%r8d
   18365:	cmp    %r9d,%r8d
   18368:	jb     18350 <png_do_read_filler+0x200>
   1836a:	mov    %dl,-0x1(%rax)
   1836d:	movb   $0x2,0x12(%rdi)
   18371:	movb   $0x10,0x13(%rdi)
   18375:	lea    (%r9,%r9,1),%eax
   18379:	mov    %eax,%eax
   1837b:	mov    %rax,0x8(%rdi)
   1837f:	leaveq 
   18380:	retq   
   18381:	mov    %dl,-0x1(%rax)
   18384:	mov    %r11b,-0x2(%rax)
   18388:	movzbl -0x1(%rcx),%esi
   1838c:	mov    %sil,-0x3(%rax)
   18390:	add    $0xfffffffffffffffc,%rax
   18394:	add    $0xfffffffffffffffe,%rcx
   18398:	movzbl (%rcx),%esi
   1839b:	mov    %sil,(%rax)
   1839e:	add    $0x1,%r8d
   183a2:	cmp    %r8d,%r9d
   183a5:	ja     18381 <png_do_read_filler+0x231>
   183a7:	mov    %dl,-0x1(%rax)
   183aa:	mov    %r11b,-0x2(%rax)
   183ae:	movb   $0x2,0x12(%rdi)
   183b2:	movb   $0x20,0x13(%rdi)
   183b6:	shl    $0x2,%r9d
   183ba:	mov    %r9d,%eax
   183bd:	mov    %rax,0x8(%rdi)
   183c1:	leaveq 
   183c2:	retq   
   183c3:	mov    %dl,-0x1(%rcx)
   183c6:	movzbl -0x1(%rax),%esi
   183ca:	mov    %sil,-0x2(%rcx)
   183ce:	movzbl -0x2(%rax),%esi
   183d2:	mov    %sil,-0x3(%rcx)
   183d6:	add    $0xfffffffffffffffc,%rcx
   183da:	add    $0xfffffffffffffffd,%rax
   183de:	movzbl (%rax),%esi
   183e1:	mov    %sil,(%rcx)
   183e4:	add    $0x1,%r8d
   183e8:	cmp    %r8d,%r9d
   183eb:	ja     183c3 <png_do_read_filler+0x273>
   183ed:	mov    %dl,-0x1(%rcx)
   183f0:	movb   $0x4,0x12(%rdi)
   183f4:	movb   $0x20,0x13(%rdi)
   183f8:	shl    $0x2,%r9d
   183fc:	mov    %r9d,%eax
   183ff:	mov    %rax,0x8(%rdi)
   18403:	leaveq 
   18404:	retq   
   18405:	mov    %dl,-0x1(%rcx)
   18408:	mov    %r11b,-0x2(%rcx)
   1840c:	movzbl -0x1(%rax),%esi
   18410:	mov    %sil,-0x3(%rcx)
   18414:	movzbl -0x2(%rax),%esi
   18418:	mov    %sil,-0x4(%rcx)
   1841c:	movzbl -0x3(%rax),%esi
   18420:	mov    %sil,-0x5(%rcx)
   18424:	movzbl -0x4(%rax),%esi
   18428:	mov    %sil,-0x6(%rcx)
   1842c:	movzbl -0x5(%rax),%esi
   18430:	mov    %sil,-0x7(%rcx)
   18434:	add    $0xfffffffffffffff8,%rcx
   18438:	add    $0xfffffffffffffffa,%rax
   1843c:	movzbl (%rax),%esi
   1843f:	mov    %sil,(%rcx)
   18442:	add    $0x1,%r8d
   18446:	cmp    %r8d,%r9d
   18449:	ja     18405 <png_do_read_filler+0x2b5>
   1844b:	mov    %dl,-0x1(%rcx)
   1844e:	mov    %r11b,-0x2(%rcx)
   18452:	movb   $0x4,0x12(%rdi)
   18456:	movb   $0x40,0x13(%rdi)
   1845a:	shl    $0x3,%r9d
   1845e:	mov    %r9d,%eax
   18461:	mov    %rax,0x8(%rdi)
   18465:	leaveq 
   18466:	retq   
   18467:	nopw   0x0(%rax,%rax,1)

0000000000018470 <png_do_gray_to_rgb>:
   18470:	push   %rbp
   18471:	mov    %rsp,%rbp
   18474:	mov    (%rdi),%r8d
   18477:	movzbl 0x11(%rdi),%edx
   1847b:	cmp    $0x7,%dl
   1847e:	ja     18482 <png_do_gray_to_rgb+0x12>
   18480:	leaveq 
   18481:	retq   
   18482:	movzbl 0x10(%rdi),%ecx
   18486:	mov    %rcx,%rax
   18489:	and    $0x2,%eax
   1848c:	test   %eax,%eax
   1848e:	je     18492 <png_do_gray_to_rgb+0x22>
   18490:	leaveq 
   18491:	retq   
   18492:	xor    %eax,%eax
   18494:	test   %cl,%cl
   18496:	je     184ce <png_do_gray_to_rgb+0x5e>
   18498:	cmp    $0x4,%cl
   1849b:	je     184e2 <png_do_gray_to_rgb+0x72>
   1849d:	movzbl 0x12(%rdi),%eax
   184a1:	lea    0x2(%rax),%ecx
   184a4:	mov    %cl,0x12(%rdi)
   184a7:	movzbl 0x10(%rdi),%eax
   184ab:	or     $0x2,%al
   184ad:	mov    %al,0x10(%rdi)
   184b0:	movzbl 0x11(%rdi),%eax
   184b4:	imul   %cl
   184b6:	mov    %al,0x13(%rdi)
   184b9:	cmp    $0x7,%al
   184bb:	ja     184f6 <png_do_gray_to_rgb+0x86>
   184bd:	movzbl %al,%eax
   184c0:	imul   %r8,%rax
   184c4:	add    $0x7,%rax
   184c8:	shr    $0x3,%rax
   184cc:	jmp    18501 <png_do_gray_to_rgb+0x91>
   184ce:	cmp    $0x8,%dl
   184d1:	je     18507 <png_do_gray_to_rgb+0x97>
   184d3:	lea    (%rsi,%r8,2),%rdx
   184d7:	lea    -0x1(%rdx),%rcx
   184db:	lea    -0x1(%rdx,%r8,4),%rdx
   184e0:	jmp    18551 <png_do_gray_to_rgb+0xe1>
   184e2:	cmp    $0x8,%dl
   184e5:	je     1855b <png_do_gray_to_rgb+0xeb>
   184e7:	lea    -0x1(%rsi,%r8,4),%rcx
   184ec:	lea    -0x1(%rsi,%r8,8),%rdx
   184f1:	jmpq   185b3 <png_do_gray_to_rgb+0x143>
   184f6:	movzbl %al,%eax
   184f9:	shr    $0x3,%rax
   184fd:	imul   %r8,%rax
   18501:	mov    %rax,0x8(%rdi)
   18505:	leaveq 
   18506:	retq   
   18507:	lea    -0x1(%r8,%rsi,1),%rcx
   1850c:	lea    (%r8,%rsi,1),%rdx
   18510:	lea    -0x1(%rdx,%r8,2),%rdx
   18515:	jmpq   185dc <png_do_gray_to_rgb+0x16c>
   1851a:	movzbl (%rcx),%esi
   1851d:	mov    %sil,(%rdx)
   18520:	movzbl -0x1(%rcx),%esi
   18524:	mov    %sil,-0x1(%rdx)
   18528:	movzbl (%rcx),%esi
   1852b:	mov    %sil,-0x2(%rdx)
   1852f:	movzbl -0x1(%rcx),%esi
   18533:	mov    %sil,-0x3(%rdx)
   18537:	movzbl (%rcx),%esi
   1853a:	mov    %sil,-0x4(%rdx)
   1853e:	movzbl -0x1(%rcx),%esi
   18542:	mov    %sil,-0x5(%rdx)
   18546:	add    $0xfffffffffffffffe,%rcx
   1854a:	add    $0xfffffffffffffffa,%rdx
   1854e:	add    $0x1,%eax
   18551:	cmp    %eax,%r8d
   18554:	ja     1851a <png_do_gray_to_rgb+0xaa>
   18556:	jmpq   1849d <png_do_gray_to_rgb+0x2d>
   1855b:	lea    -0x1(%rsi,%r8,2),%rcx
   18560:	lea    -0x1(%rsi,%r8,4),%rdx
   18565:	jmpq   1860f <png_do_gray_to_rgb+0x19f>
   1856a:	movzbl (%rcx),%esi
   1856d:	mov    %sil,(%rdx)
   18570:	movzbl -0x1(%rcx),%esi
   18574:	mov    %sil,-0x1(%rdx)
   18578:	movzbl -0x2(%rcx),%esi
   1857c:	mov    %sil,-0x2(%rdx)
   18580:	movzbl -0x3(%rcx),%esi
   18584:	mov    %sil,-0x3(%rdx)
   18588:	movzbl -0x2(%rcx),%esi
   1858c:	mov    %sil,-0x4(%rdx)
   18590:	movzbl -0x3(%rcx),%esi
   18594:	mov    %sil,-0x5(%rdx)
   18598:	movzbl -0x2(%rcx),%esi
   1859c:	mov    %sil,-0x6(%rdx)
   185a0:	movzbl -0x3(%rcx),%esi
   185a4:	mov    %sil,-0x7(%rdx)
   185a8:	add    $0xfffffffffffffffc,%rcx
   185ac:	add    $0xfffffffffffffff8,%rdx
   185b0:	add    $0x1,%eax
   185b3:	cmp    %r8d,%eax
   185b6:	jb     1856a <png_do_gray_to_rgb+0xfa>
   185b8:	jmpq   1849d <png_do_gray_to_rgb+0x2d>
   185bd:	movzbl (%rcx),%esi
   185c0:	mov    %sil,(%rdx)
   185c3:	movzbl (%rcx),%esi
   185c6:	mov    %sil,-0x1(%rdx)
   185ca:	movzbl (%rcx),%esi
   185cd:	mov    %sil,-0x2(%rdx)
   185d1:	add    $0xffffffffffffffff,%rcx
   185d5:	add    $0xfffffffffffffffd,%rdx
   185d9:	add    $0x1,%eax
   185dc:	cmp    %eax,%r8d
   185df:	ja     185bd <png_do_gray_to_rgb+0x14d>
   185e1:	jmpq   1849d <png_do_gray_to_rgb+0x2d>
   185e6:	movzbl (%rcx),%esi
   185e9:	mov    %sil,(%rdx)
   185ec:	movzbl -0x1(%rcx),%esi
   185f0:	mov    %sil,-0x1(%rdx)
   185f4:	movzbl -0x1(%rcx),%esi
   185f8:	mov    %sil,-0x2(%rdx)
   185fc:	movzbl -0x1(%rcx),%esi
   18600:	mov    %sil,-0x3(%rdx)
   18604:	add    $0xfffffffffffffffe,%rcx
   18608:	add    $0xfffffffffffffffc,%rdx
   1860c:	add    $0x1,%eax
   1860f:	cmp    %eax,%r8d
   18612:	ja     185e6 <png_do_gray_to_rgb+0x176>
   18614:	jmpq   1849d <png_do_gray_to_rgb+0x2d>
   18619:	nopl   0x0(%rax)

0000000000018620 <png_do_rgb_to_gray>:
   18620:	push   %rbp
   18621:	mov    %rsp,%rbp
   18624:	sub    $0x40,%rsp
   18628:	xor    %eax,%eax
   1862a:	movzbl 0x10(%rsi),%r10d
   1862f:	mov    %r10,%rcx
   18632:	and    $0x1,%ecx
   18635:	test   %ecx,%ecx
   18637:	je     1863b <png_do_rgb_to_gray+0x1b>
   18639:	leaveq 
   1863a:	retq   
   1863b:	mov    %r10,%rcx
   1863e:	and    $0x2,%ecx
   18641:	test   %ecx,%ecx
   18643:	jg     18647 <png_do_rgb_to_gray+0x27>
   18645:	leaveq 
   18646:	retq   
   18647:	mov    (%rsi),%r11d
   1864a:	movzwl 0x3d2(%rdi),%r9d
   18652:	movzwl 0x3d4(%rdi),%r8d
   1865a:	mov    $0x1,%ecx
   1865f:	and    $0x4,%r10d
   18663:	test   %r10d,%r10d
   18666:	jg     1866d <png_do_rgb_to_gray+0x4d>
   18668:	mov    %rax,%r10
   1866b:	jmp    18670 <png_do_rgb_to_gray+0x50>
   1866d:	mov    %rcx,%r10
   18670:	mov    %r15,-0x28(%rbp)
   18674:	lea    (%r8,%r9,1),%r15d
   18678:	mov    %r14,-0x20(%rbp)
   1867c:	mov    $0x8000,%r14d
   18682:	sub    %r15d,%r14d
   18685:	movzbl 0x11(%rsi),%r15d
   1868a:	cmp    $0x8,%r15b
   1868e:	je     186b4 <png_do_rgb_to_gray+0x94>
   18690:	mov    0x2d0(%rdi),%r15
   18697:	test   %r15,%r15
   1869a:	jne    186db <png_do_rgb_to_gray+0xbb>
   1869c:	mov    %rbx,-0x8(%rbp)
   186a0:	mov    %r12,-0x10(%rbp)
   186a4:	mov    %r13,-0x18(%rbp)
   186a8:	mov    %rsi,-0x38(%rbp)
   186ac:	mov    %rax,%rbx
   186af:	mov    %rdx,%rsi
   186b2:	jmp    1871d <png_do_rgb_to_gray+0xfd>
   186b4:	mov    0x2b8(%rdi),%r15
   186bb:	test   %r15,%r15
   186be:	jne    18765 <png_do_rgb_to_gray+0x145>
   186c4:	mov    %rbx,-0x8(%rbp)
   186c8:	mov    %r12,-0x10(%rbp)
   186cc:	mov    %r13,-0x18(%rbp)
   186d0:	mov    %rax,%rbx
   186d3:	mov    %rdx,%r12
   186d6:	jmpq   1879b <png_do_rgb_to_gray+0x17b>
   186db:	mov    0x2c8(%rdi),%r15
   186e2:	test   %r15,%r15
   186e5:	jne    187cc <png_do_rgb_to_gray+0x1ac>
   186eb:	mov    %rbx,-0x8(%rbp)
   186ef:	mov    %r12,-0x10(%rbp)
   186f3:	mov    %r13,-0x18(%rbp)
   186f7:	mov    %rsi,-0x38(%rbp)
   186fb:	mov    %rax,%rbx
   186fe:	mov    %rdx,%rsi
   18701:	jmp    1871d <png_do_rgb_to_gray+0xfd>
   18703:	movzbl (%rdi),%edi
   18706:	mov    %dil,(%r12)
   1870a:	movzbl 0x7(%rsi),%edi
   1870e:	mov    %dil,0x3(%rdx)
   18712:	add    $0x8,%rsi
   18716:	add    $0x4,%rdx
   1871a:	add    $0x1,%eax
   1871d:	cmp    %r11d,%eax
   18720:	jb     187e7 <png_do_rgb_to_gray+0x1c7>
   18726:	mov    -0x38(%rbp),%rsi
   1872a:	movzbl 0x12(%rsi),%eax
   1872e:	lea    0xfe(%rax),%ecx
   18734:	mov    %cl,0x12(%rsi)
   18737:	movzbl 0x10(%rsi),%eax
   1873b:	and    $0xfd,%al
   1873d:	mov    %al,0x10(%rsi)
   18740:	movzbl 0x11(%rsi),%eax
   18744:	imul   %cl
   18746:	mov    %al,0x13(%rsi)
   18749:	cmp    $0x7,%al
   1874b:	ja     18872 <png_do_rgb_to_gray+0x252>
   18751:	movzbl %al,%eax
   18754:	imul   %r11,%rax
   18758:	add    $0x7,%rax
   1875c:	shr    $0x3,%rax
   18760:	jmpq   1887d <png_do_rgb_to_gray+0x25d>
   18765:	mov    0x2c0(%rdi),%r15
   1876c:	test   %r15,%r15
   1876f:	jne    1889a <png_do_rgb_to_gray+0x27a>
   18775:	mov    %rbx,-0x8(%rbp)
   18779:	mov    %r12,-0x10(%rbp)
   1877d:	mov    %r13,-0x18(%rbp)
   18781:	mov    %rax,%rbx
   18784:	mov    %rdx,%r12
   18787:	jmp    1879b <png_do_rgb_to_gray+0x17b>
   18789:	movzbl (%rdx),%edx
   1878c:	mov    %dl,0x0(%r13)
   18790:	add    $0x4,%r12
   18794:	lea    0x1(%r13),%rdx
   18798:	add    $0x1,%eax
   1879b:	cmp    %eax,%r11d
   1879e:	jbe    1872a <png_do_rgb_to_gray+0x10a>
   187a0:	movzbl 0x2(%r12),%r13d
   187a6:	movzbl 0x1(%r12),%r15d
   187ac:	movzbl (%r12),%edi
   187b1:	cmp    %dil,%r15b
   187b4:	jne    188b5 <png_do_rgb_to_gray+0x295>
   187ba:	cmp    %r13b,%dil
   187bd:	jne    188b5 <png_do_rgb_to_gray+0x295>
   187c3:	lea    0x1(%rdx),%r13
   187c7:	jmpq   188d5 <png_do_rgb_to_gray+0x2b5>
   187cc:	mov    %rbx,-0x8(%rbp)
   187d0:	mov    %r12,-0x10(%rbp)
   187d4:	mov    %r13,-0x18(%rbp)
   187d8:	mov    %rsi,-0x30(%rbp)
   187dc:	mov    %rax,%rbx
   187df:	mov    %rdx,%rsi
   187e2:	jmpq   1890b <png_do_rgb_to_gray+0x2eb>
   187e7:	movzbl 0x5(%rsi),%r12d
   187ec:	movzbl 0x4(%rsi),%edi
   187f0:	shl    $0x8,%edi
   187f3:	lea    (%r12,%rdi,1),%r15d
   187f7:	movzbl 0x3(%rsi),%r12d
   187fc:	movzbl 0x2(%rsi),%edi
   18800:	shl    $0x8,%edi
   18803:	lea    (%r12,%rdi,1),%r13d
   18807:	movzbl 0x1(%rsi),%r12d
   1880c:	movzbl (%rsi),%edi
   1880f:	shl    $0x8,%edi
   18812:	add    %r12d,%edi
   18815:	cmp    %di,%r13w
   18819:	je     18919 <png_do_rgb_to_gray+0x2f9>
   1881f:	mov    %rcx,%rbx
   18822:	movzwl %r13w,%r12d
   18826:	imul   %r8d,%r12d
   1882a:	movzwl %di,%edi
   1882d:	imul   %r9d,%edi
   18831:	add    %edi,%r12d
   18834:	movzwl %r15w,%edi
   18838:	imul   %r14d,%edi
   1883c:	lea    0x4000(%rdi,%r12,1),%edi
   18844:	shr    $0xf,%edi
   18847:	movzwl %di,%r12d
   1884b:	shr    $0x8,%r12d
   1884f:	test   %r10d,%r10d
   18852:	mov    %r12b,(%rdx)
   18855:	mov    %dil,0x1(%rdx)
   18859:	lea    0x6(%rsi),%rdi
   1885d:	lea    0x2(%rdx),%r12
   18861:	jg     18703 <png_do_rgb_to_gray+0xe3>
   18867:	mov    %r12,%rdx
   1886a:	mov    %rdi,%rsi
   1886d:	jmpq   1871a <png_do_rgb_to_gray+0xfa>
   18872:	movzbl %al,%eax
   18875:	shr    $0x3,%rax
   18879:	imul   %r11,%rax
   1887d:	mov    %rax,0x8(%rsi)
   18881:	mov    %rbx,%rax
   18884:	mov    -0x18(%rbp),%r13
   18888:	mov    -0x10(%rbp),%r12
   1888c:	mov    -0x8(%rbp),%rbx
   18890:	mov    -0x20(%rbp),%r14
   18894:	mov    -0x28(%rbp),%r15
   18898:	leaveq 
   18899:	retq   
   1889a:	mov    %rbx,-0x8(%rbp)
   1889e:	mov    %r12,-0x10(%rbp)
   188a2:	mov    %r13,-0x18(%rbp)
   188a6:	mov    %rsi,-0x38(%rbp)
   188aa:	mov    %rax,%rbx
   188ad:	mov    %rdx,%rsi
   188b0:	jmpq   1893d <png_do_rgb_to_gray+0x31d>
   188b5:	mov    %r8,%rbx
   188b8:	imul   %r15d,%ebx
   188bc:	imul   %r9d,%edi
   188c0:	add    %edi,%ebx
   188c2:	mov    %r14,%rdi
   188c5:	imul   %r13d,%edi
   188c9:	add    %ebx,%edi
   188cb:	shr    $0xf,%edi
   188ce:	lea    0x1(%rdx),%r13
   188d2:	mov    %rcx,%rbx
   188d5:	test   %r10d,%r10d
   188d8:	mov    %dil,(%rdx)
   188db:	lea    0x3(%r12),%rdx
   188e0:	jg     18789 <png_do_rgb_to_gray+0x169>
   188e6:	mov    %rdx,%r12
   188e9:	mov    %r13,%rdx
   188ec:	jmpq   18798 <png_do_rgb_to_gray+0x178>
   188f1:	movzbl (%r12),%r12d
   188f6:	mov    %r12b,(%rcx)
   188f9:	movzbl 0x7(%rsi),%ecx
   188fd:	mov    %cl,0x3(%rdx)
   18900:	add    $0x8,%rsi
   18904:	add    $0x4,%rdx
   18908:	add    $0x1,%eax
   1890b:	cmp    %eax,%r11d
   1890e:	ja     1894b <png_do_rgb_to_gray+0x32b>
   18910:	mov    -0x30(%rbp),%rsi
   18914:	jmpq   1872a <png_do_rgb_to_gray+0x10a>
   18919:	cmp    %di,%r15w
   1891d:	je     18822 <png_do_rgb_to_gray+0x202>
   18923:	mov    %rcx,%rbx
   18926:	jmpq   18822 <png_do_rgb_to_gray+0x202>
   1892b:	movzbl (%rdx),%edx
   1892e:	mov    %dl,0x0(%r13)
   18932:	add    $0x4,%rsi
   18936:	lea    0x1(%r13),%rdx
   1893a:	add    $0x1,%eax
   1893d:	cmp    %eax,%r11d
   18940:	ja     189bc <png_do_rgb_to_gray+0x39c>
   18942:	mov    -0x38(%rbp),%rsi
   18946:	jmpq   1872a <png_do_rgb_to_gray+0x10a>
   1894b:	movzbl 0x5(%rsi),%r12d
   18950:	movzbl 0x4(%rsi),%ecx
   18954:	shl    $0x8,%ecx
   18957:	add    %ecx,%r12d
   1895a:	movzbl 0x1(%rsi),%r13d
   1895f:	movzbl (%rsi),%ecx
   18962:	shl    $0x8,%ecx
   18965:	add    %ecx,%r13d
   18968:	movzbl 0x3(%rsi),%ecx
   1896c:	movzbl 0x2(%rsi),%r15d
   18971:	shl    $0x8,%r15d
   18975:	add    %ecx,%r15d
   18978:	cmp    %r13w,%r15w
   1897c:	jne    189f7 <png_do_rgb_to_gray+0x3d7>
   1897e:	cmp    %r12w,%r15w
   18982:	jne    189f7 <png_do_rgb_to_gray+0x3d7>
   18984:	mov    0x2b0(%rdi),%rcx
   1898b:	test   %rcx,%rcx
   1898e:	je     18a9e <png_do_rgb_to_gray+0x47e>
   18994:	mov    %rcx,%r15
   18997:	movzbl %r13b,%r12d
   1899b:	mov    0x2a0(%rdi),%ecx
   189a1:	shr    %cl,%r12d
   189a4:	movslq %r12d,%rcx
   189a7:	mov    (%r15,%rcx,8),%r12
   189ab:	shr    $0x8,%r13d
   189af:	movslq %r13d,%rcx
   189b2:	movzwl (%r12,%rcx,2),%r12d
   189b7:	jmpq   18a9e <png_do_rgb_to_gray+0x47e>
   189bc:	movzbl 0x2(%rsi),%r15d
   189c1:	movzbl (%rsi),%r12d
   189c5:	movzbl 0x1(%rsi),%r13d
   189ca:	cmp    %r12b,%r13b
   189cd:	jne    18ac7 <png_do_rgb_to_gray+0x4a7>
   189d3:	cmp    %r15b,%r12b
   189d6:	jne    18ac7 <png_do_rgb_to_gray+0x4a7>
   189dc:	mov    0x2a8(%rdi),%r13
   189e3:	test   %r13,%r13
   189e6:	je     189ee <png_do_rgb_to_gray+0x3ce>
   189e8:	movzbl 0x0(%r13,%r12,1),%r12d
   189ee:	lea    0x1(%rdx),%r13
   189f2:	jmpq   18b0d <png_do_rgb_to_gray+0x4ed>
   189f7:	mov    0x2a0(%rdi),%ecx
   189fd:	movzbl %r15b,%ebx
   18a01:	shr    %cl,%ebx
   18a03:	movslq %ebx,%rbx
   18a06:	mov    %r11,-0x38(%rbp)
   18a0a:	mov    0x2d0(%rdi),%r11
   18a11:	mov    (%r11,%rbx,8),%rbx
   18a15:	shr    $0x8,%r15d
   18a19:	movslq %r15d,%r15
   18a1c:	movzwl (%rbx,%r15,2),%ebx
   18a21:	mov    %r8,%r15
   18a24:	imul   %ebx,%r15d
   18a28:	movzbl %r13b,%ebx
   18a2c:	shr    %cl,%ebx
   18a2e:	movslq %ebx,%rbx
   18a31:	mov    (%r11,%rbx,8),%rbx
   18a35:	shr    $0x8,%r13d
   18a39:	movslq %r13d,%r13
   18a3c:	movzwl (%rbx,%r13,2),%ebx
   18a41:	imul   %r9d,%ebx
   18a45:	lea    (%r15,%rbx,1),%r13d
   18a49:	movzbl %r12b,%ebx
   18a4d:	shr    %cl,%ebx
   18a4f:	movslq %ebx,%rbx
   18a52:	mov    (%r11,%rbx,8),%r11
   18a56:	shr    $0x8,%r12d
   18a5a:	movslq %r12d,%rbx
   18a5d:	movzwl (%r11,%rbx,2),%ebx
   18a62:	imul   %r14d,%ebx
   18a66:	lea    0x4000(%rbx,%r13,1),%ebx
   18a6e:	shr    $0xf,%ebx
   18a71:	movzwl %bx,%r11d
   18a75:	movzbl %r11b,%ebx
   18a79:	shr    %cl,%ebx
   18a7b:	movslq %ebx,%rcx
   18a7e:	mov    0x2c8(%rdi),%rbx
   18a85:	mov    (%rbx,%rcx,8),%rbx
   18a89:	shr    $0x8,%r11d
   18a8d:	movslq %r11d,%rcx
   18a90:	movzwl (%rbx,%rcx,2),%r12d
   18a95:	mov    -0x38(%rbp),%r11
   18a99:	mov    $0x1,%ebx
   18a9e:	movzwl %r12w,%ecx
   18aa2:	shr    $0x8,%ecx
   18aa5:	test   %r10d,%r10d
   18aa8:	mov    %cl,(%rdx)
   18aaa:	mov    %r12b,0x1(%rdx)
   18aae:	lea    0x6(%rsi),%r12
   18ab2:	lea    0x2(%rdx),%rcx
   18ab6:	jg     188f1 <png_do_rgb_to_gray+0x2d1>
   18abc:	mov    %rcx,%rdx
   18abf:	mov    %r12,%rsi
   18ac2:	jmpq   18908 <png_do_rgb_to_gray+0x2e8>
   18ac7:	mov    0x2c0(%rdi),%rbx
   18ace:	movzbl (%rbx,%r13,1),%r13d
   18ad3:	imul   %r8d,%r13d
   18ad7:	movzbl (%rbx,%r12,1),%r12d
   18adc:	imul   %r9d,%r12d
   18ae0:	add    %r13d,%r12d
   18ae3:	movzbl (%r15,%rbx,1),%ebx
   18ae8:	imul   %r14d,%ebx
   18aec:	lea    0x4000(%rbx,%r12,1),%ebx
   18af4:	shr    $0xf,%ebx
   18af7:	mov    %ebx,%r12d
   18afa:	mov    0x2b8(%rdi),%rbx
   18b01:	movzbl (%r12,%rbx,1),%r12d
   18b06:	lea    0x1(%rdx),%r13
   18b0a:	mov    %rcx,%rbx
   18b0d:	test   %r10d,%r10d
   18b10:	mov    %r12b,(%rdx)
   18b13:	lea    0x3(%rsi),%rdx
   18b17:	jg     1892b <png_do_rgb_to_gray+0x30b>
   18b1d:	mov    %rdx,%rsi
   18b20:	mov    %r13,%rdx
   18b23:	jmpq   1893a <png_do_rgb_to_gray+0x31a>
   18b28:	nopl   0x0(%rax,%rax,1)

0000000000018b30 <png_do_compose>:
   18b30:	push   %rbp
   18b31:	mov    %rsp,%rbp
   18b34:	sub    $0xb0,%rsp
   18b3b:	mov    %rsi,-0xa8(%rbp)
   18b42:	mov    %rdx,-0xa0(%rbp)
   18b49:	mov    0x2a8(%rdx),%r8
   18b50:	mov    0x2b8(%rdx),%r11
   18b57:	mov    0x2c0(%rdx),%r10
   18b5e:	mov    0x2b0(%rdx),%rsi
   18b65:	mov    0x2c8(%rdx),%r9
   18b6c:	mov    0x2d0(%rdx),%rax
   18b73:	mov    %rax,-0xb0(%rbp)
   18b7a:	mov    0x2a0(%rdx),%ecx
   18b80:	xor    %eax,%eax
   18b82:	mov    %rax,-0x98(%rbp)
   18b89:	mov    $0x1,%eax
   18b8e:	mov    %rax,-0x90(%rbp)
   18b95:	mov    0x130(%rdx),%eax
   18b9b:	and    $0x2000,%eax
   18ba0:	test   %eax,%eax
   18ba2:	je     18bb0 <png_do_compose+0x80>
   18ba4:	pushq  -0x90(%rbp)
   18baa:	popq   -0x98(%rbp)
   18bb0:	mov    (%rdi),%eax
   18bb2:	movzbl 0x10(%rdi),%edx
   18bb6:	cmp    $0x3,%dl
   18bb9:	jbe    18bd3 <png_do_compose+0xa3>
   18bbb:	mov    %rcx,-0x90(%rbp)
   18bc2:	mov    $0xff,%ecx
   18bc7:	cmp    $0x4,%dl
   18bca:	je     18bde <png_do_compose+0xae>
   18bcc:	cmp    $0x6,%dl
   18bcf:	je     18c0f <png_do_compose+0xdf>
   18bd1:	leaveq 
   18bd2:	retq   
   18bd3:	test   %dl,%dl
   18bd5:	je     18c47 <png_do_compose+0x117>
   18bd7:	cmp    $0x2,%dl
   18bda:	je     18c59 <png_do_compose+0x129>
   18bdc:	leaveq 
   18bdd:	retq   
   18bde:	movzbl 0x11(%rdi),%edx
   18be2:	cmp    $0x8,%dl
   18be5:	je     18c8b <png_do_compose+0x15b>
   18beb:	test   %rsi,%rsi
   18bee:	jne    18ca9 <png_do_compose+0x179>
   18bf4:	mov    $0xffff,%r9d
   18bfa:	mov    -0xa0(%rbp),%r10
   18c01:	xor    %ecx,%ecx
   18c03:	mov    -0xa8(%rbp),%rdx
   18c0a:	jmpq   18ceb <png_do_compose+0x1bb>
   18c0f:	movzbl 0x11(%rdi),%edx
   18c13:	cmp    $0x8,%dl
   18c16:	je     18cf5 <png_do_compose+0x1c5>
   18c1c:	test   %rsi,%rsi
   18c1f:	jne    18d13 <png_do_compose+0x1e3>
   18c25:	mov    %r15,-0xb0(%rbp)
   18c2c:	mov    $0xffff,%r9d
   18c32:	mov    -0xa0(%rbp),%r10
   18c39:	xor    %ecx,%ecx
   18c3b:	mov    -0xa8(%rbp),%rdx
   18c42:	jmpq   18d92 <png_do_compose+0x262>
   18c47:	movzbl 0x11(%rdi),%edx
   18c4b:	add    $0xffffffff,%edx
   18c4e:	cmp    $0xf,%edx
   18c51:	jbe    18da3 <png_do_compose+0x273>
   18c57:	leaveq 
   18c58:	retq   
   18c59:	movzbl 0x11(%rdi),%edx
   18c5d:	cmp    $0x8,%dl
   18c60:	je     18db5 <png_do_compose+0x285>
   18c66:	test   %rsi,%rsi
   18c69:	jne    18dd3 <png_do_compose+0x2a3>
   18c6f:	mov    %r15,-0x98(%rbp)
   18c76:	mov    -0xa0(%rbp),%r10
   18c7d:	xor    %ecx,%ecx
   18c7f:	mov    -0xa8(%rbp),%rdx
   18c86:	jmpq   18ea2 <png_do_compose+0x372>
   18c8b:	test   %r10,%r10
   18c8e:	jne    18eb3 <png_do_compose+0x383>
   18c94:	mov    -0xa0(%rbp),%r9
   18c9b:	xor    %edx,%edx
   18c9d:	mov    -0xa8(%rbp),%rsi
   18ca4:	jmpq   18ee0 <png_do_compose+0x3b0>
   18ca9:	test   %r9,%r9
   18cac:	jne    18eea <png_do_compose+0x3ba>
   18cb2:	mov    $0xffff,%r9d
   18cb8:	mov    -0xa0(%rbp),%r10
   18cbf:	xor    %ecx,%ecx
   18cc1:	mov    -0xa8(%rbp),%rdx
   18cc8:	jmp    18ceb <png_do_compose+0x1bb>
   18cca:	movzwl 0x284(%r10),%esi
   18cd2:	shr    $0x8,%esi
   18cd5:	mov    %sil,(%rdx)
   18cd8:	movzbl 0x284(%r10),%esi
   18ce0:	mov    %sil,0x1(%rdx)
   18ce4:	add    $0x1,%ecx
   18ce7:	add    $0x4,%rdx
   18ceb:	cmp    %ecx,%eax
   18ced:	ja     18f15 <png_do_compose+0x3e5>
   18cf3:	leaveq 
   18cf4:	retq   
   18cf5:	test   %r10,%r10
   18cf8:	jne    18f86 <png_do_compose+0x456>
   18cfe:	mov    -0xa0(%rbp),%r9
   18d05:	xor    %edx,%edx
   18d07:	mov    -0xa8(%rbp),%rsi
   18d0e:	jmpq   18fcb <png_do_compose+0x49b>
   18d13:	test   %r9,%r9
   18d16:	jne    18fd5 <png_do_compose+0x4a5>
   18d1c:	mov    %r15,-0xb0(%rbp)
   18d23:	mov    $0xffff,%r9d
   18d29:	mov    -0xa0(%rbp),%r10
   18d30:	xor    %ecx,%ecx
   18d32:	mov    -0xa8(%rbp),%rdx
   18d39:	jmp    18d92 <png_do_compose+0x262>
   18d3b:	movzwl 0x27e(%r10),%esi
   18d43:	shr    $0x8,%esi
   18d46:	mov    %sil,(%rdx)
   18d49:	movzbl 0x27e(%r10),%esi
   18d51:	mov    %sil,0x1(%rdx)
   18d55:	movzwl 0x280(%r10),%esi
   18d5d:	shr    $0x8,%esi
   18d60:	mov    %sil,0x2(%rdx)
   18d64:	movzbl 0x280(%r10),%esi
   18d6c:	mov    %sil,0x3(%rdx)
   18d70:	movzwl 0x282(%r10),%esi
   18d78:	shr    $0x8,%esi
   18d7b:	mov    %sil,0x4(%rdx)
   18d7f:	movzbl 0x282(%r10),%esi
   18d87:	mov    %sil,0x5(%rdx)
   18d8b:	add    $0x1,%ecx
   18d8e:	add    $0x8,%rdx
   18d92:	cmp    %ecx,%eax
   18d94:	ja     19007 <png_do_compose+0x4d7>
   18d9a:	mov    -0xb0(%rbp),%r15
   18da1:	leaveq 
   18da2:	retq   
   18da3:	lea    0x15506(%rip),%rdi        # 2e2b0 <chunks_to_process.34+0x4ab>
   18daa:	movslq (%rdi,%rdx,4),%rdx
   18dae:	add    %rdi,%rdx
   18db1:	jmpq   *%rdx
   18db3:	leaveq 
   18db4:	retq   
   18db5:	test   %r8,%r8
   18db8:	jne    191e4 <png_do_compose+0x6b4>
   18dbe:	mov    -0xa0(%rbp),%rsi
   18dc5:	xor    %ecx,%ecx
   18dc7:	mov    -0xa8(%rbp),%rdx
   18dce:	jmpq   19255 <png_do_compose+0x725>
   18dd3:	mov    %r15,-0x48(%rbp)
   18dd7:	mov    %r13,-0x38(%rbp)
   18ddb:	mov    %r14,-0x40(%rbp)
   18ddf:	mov    -0xa0(%rbp),%r8
   18de6:	xor    %edx,%edx
   18de8:	mov    -0xa8(%rbp),%rdi
   18def:	jmpq   192d8 <png_do_compose+0x7a8>
   18df4:	movzbl 0x2(%rdx),%edi
   18df8:	movzbl 0x3(%rdx),%r11d
   18dfd:	movzbl 0x4(%rdx),%r8d
   18e02:	movzbl 0x5(%rdx),%r9d
   18e07:	movzbl 0x1(%rdx),%r15d
   18e0c:	movzbl (%rdx),%esi
   18e0f:	shl    $0x8,%esi
   18e12:	add    %esi,%r15d
   18e15:	movzwl 0x2f2(%r10),%esi
   18e1d:	cmp    %si,%r15w
   18e21:	jne    18e9b <png_do_compose+0x36b>
   18e23:	shl    $0x8,%edi
   18e26:	add    %r11d,%edi
   18e29:	movzwl 0x2f4(%r10),%esi
   18e31:	cmp    %si,%di
   18e34:	jne    18e9b <png_do_compose+0x36b>
   18e36:	shl    $0x8,%r8d
   18e3a:	lea    (%r9,%r8,1),%edi
   18e3e:	movzwl 0x2f6(%r10),%esi
   18e46:	cmp    %si,%di
   18e49:	jne    18e9b <png_do_compose+0x36b>
   18e4b:	movzwl 0x27e(%r10),%esi
   18e53:	shr    $0x8,%esi
   18e56:	mov    %sil,(%rdx)
   18e59:	movzbl 0x27e(%r10),%esi
   18e61:	mov    %sil,0x1(%rdx)
   18e65:	movzwl 0x280(%r10),%esi
   18e6d:	shr    $0x8,%esi
   18e70:	mov    %sil,0x2(%rdx)
   18e74:	movzbl 0x280(%r10),%esi
   18e7c:	mov    %sil,0x3(%rdx)
   18e80:	movzwl 0x282(%r10),%esi
   18e88:	shr    $0x8,%esi
   18e8b:	mov    %sil,0x4(%rdx)
   18e8f:	movzbl 0x282(%r10),%esi
   18e97:	mov    %sil,0x5(%rdx)
   18e9b:	add    $0x1,%ecx
   18e9e:	add    $0x6,%rdx
   18ea2:	cmp    %ecx,%eax
   18ea4:	ja     18df4 <png_do_compose+0x2c4>
   18eaa:	mov    -0x98(%rbp),%r15
   18eb1:	leaveq 
   18eb2:	retq   
   18eb3:	test   %r11,%r11
   18eb6:	jne    192ee <png_do_compose+0x7be>
   18ebc:	mov    -0xa0(%rbp),%r9
   18ec3:	xor    %edx,%edx
   18ec5:	mov    -0xa8(%rbp),%rsi
   18ecc:	jmp    18ee0 <png_do_compose+0x3b0>
   18ece:	movzbl 0x284(%r9),%edi
   18ed6:	mov    %dil,(%rsi)
   18ed9:	add    $0x1,%edx
   18edc:	add    $0x2,%rsi
   18ee0:	cmp    %edx,%eax
   18ee2:	ja     1930c <png_do_compose+0x7dc>
   18ee8:	leaveq 
   18ee9:	retq   
   18eea:	mov    -0xb0(%rbp),%r8
   18ef1:	test   %r8,%r8
   18ef4:	jne    19360 <png_do_compose+0x830>
   18efa:	mov    $0xffff,%r9d
   18f00:	mov    -0xa0(%rbp),%r10
   18f07:	xor    %ecx,%ecx
   18f09:	mov    -0xa8(%rbp),%rdx
   18f10:	jmpq   18ceb <png_do_compose+0x1bb>
   18f15:	movzbl 0x3(%rdx),%edi
   18f19:	movzbl 0x2(%rdx),%esi
   18f1d:	shl    $0x8,%esi
   18f20:	cmp    %si,%di
   18f23:	je     18cca <png_do_compose+0x19a>
   18f29:	add    %edi,%esi
   18f2b:	cmp    $0xfffe,%si
   18f2f:	ja     18ce4 <png_do_compose+0x1b4>
   18f35:	movzwl %si,%edi
   18f38:	mov    %r9,%r8
   18f3b:	sub    %edi,%r8d
   18f3e:	movzwl 0x284(%r10),%esi
   18f46:	imul   %esi,%r8d
   18f4a:	movzbl 0x1(%rdx),%r11d
   18f4f:	movzbl (%rdx),%esi
   18f52:	shl    $0x8,%esi
   18f55:	add    %r11d,%esi
   18f58:	movzwl %si,%esi
   18f5b:	imul   %esi,%edi
   18f5e:	add    %r8d,%edi
   18f61:	lea    0x8000(%rdi),%esi
   18f67:	shr    $0x10,%esi
   18f6a:	lea    0x8000(%rsi,%rdi,1),%esi
   18f71:	shr    $0x10,%esi
   18f74:	movzwl %si,%edi
   18f77:	shr    $0x8,%edi
   18f7a:	mov    %dil,(%rdx)
   18f7d:	mov    %sil,0x1(%rdx)
   18f81:	jmpq   18ce4 <png_do_compose+0x1b4>
   18f86:	test   %r11,%r11
   18f89:	jne    1939d <png_do_compose+0x86d>
   18f8f:	mov    -0xa0(%rbp),%r9
   18f96:	xor    %edx,%edx
   18f98:	mov    -0xa8(%rbp),%rsi
   18f9f:	jmp    18fcb <png_do_compose+0x49b>
   18fa1:	movzbl 0x27e(%r9),%edi
   18fa9:	mov    %dil,(%rsi)
   18fac:	movzbl 0x280(%r9),%edi
   18fb4:	mov    %dil,0x1(%rsi)
   18fb8:	movzbl 0x282(%r9),%edi
   18fc0:	mov    %dil,0x2(%rsi)
   18fc4:	add    $0x1,%edx
   18fc7:	add    $0x4,%rsi
   18fcb:	cmp    %edx,%eax
   18fcd:	ja     193bb <png_do_compose+0x88b>
   18fd3:	leaveq 
   18fd4:	retq   
   18fd5:	mov    -0xb0(%rbp),%r10
   18fdc:	test   %r10,%r10
   18fdf:	jne    19476 <png_do_compose+0x946>
   18fe5:	mov    %r15,-0xb0(%rbp)
   18fec:	mov    $0xffff,%r9d
   18ff2:	mov    -0xa0(%rbp),%r10
   18ff9:	xor    %ecx,%ecx
   18ffb:	mov    -0xa8(%rbp),%rdx
   19002:	jmpq   18d92 <png_do_compose+0x262>
   19007:	movzbl 0x7(%rdx),%edi
   1900b:	movzbl 0x6(%rdx),%esi
   1900f:	shl    $0x8,%esi
   19012:	cmp    %si,%di
   19015:	je     18d3b <png_do_compose+0x20b>
   1901b:	add    %edi,%esi
   1901d:	cmp    $0xfffe,%si
   19021:	ja     18d8b <png_do_compose+0x25b>
   19027:	movzwl %si,%esi
   1902a:	mov    %r9,%r15
   1902d:	sub    %esi,%r15d
   19030:	movzwl 0x27e(%r10),%edi
   19038:	mov    %r15,%r11
   1903b:	imul   %edi,%r11d
   1903f:	movzbl 0x1(%rdx),%r8d
   19044:	movzbl (%rdx),%edi
   19047:	shl    $0x8,%edi
   1904a:	add    %r8d,%edi
   1904d:	movzwl %di,%edi
   19050:	imul   %esi,%edi
   19053:	lea    (%r11,%rdi,1),%r8d
   19057:	lea    0x8000(%r8),%edi
   1905e:	shr    $0x10,%edi
   19061:	lea    0x8000(%rdi,%r8,1),%edi
   19069:	shr    $0x10,%edi
   1906c:	movzwl %di,%r8d
   19070:	shr    $0x8,%r8d
   19074:	mov    %r8b,(%rdx)
   19077:	mov    %dil,0x1(%rdx)
   1907b:	movzwl 0x280(%r10),%edi
   19083:	imul   %r15d,%edi
   19087:	movzbl 0x3(%rdx),%r11d
   1908c:	movzbl 0x2(%rdx),%r8d
   19091:	shl    $0x8,%r8d
   19095:	add    %r11d,%r8d
   19098:	movzwl %r8w,%r8d
   1909c:	imul   %esi,%r8d
   190a0:	add    %edi,%r8d
   190a3:	lea    0x8000(%r8),%edi
   190aa:	shr    $0x10,%edi
   190ad:	lea    0x8000(%rdi,%r8,1),%edi
   190b5:	shr    $0x10,%edi
   190b8:	movzwl %di,%r8d
   190bc:	shr    $0x8,%r8d
   190c0:	mov    %r8b,0x2(%rdx)
   190c4:	mov    %dil,0x3(%rdx)
   190c8:	movzwl 0x282(%r10),%edi
   190d0:	imul   %r15d,%edi
   190d4:	movzbl 0x5(%rdx),%r11d
   190d9:	movzbl 0x4(%rdx),%r8d
   190de:	shl    $0x8,%r8d
   190e2:	add    %r11d,%r8d
   190e5:	movzwl %r8w,%r8d
   190e9:	imul   %r8d,%esi
   190ed:	add    %esi,%edi
   190ef:	lea    0x8000(%rdi),%esi
   190f5:	shr    $0x10,%esi
   190f8:	lea    0x8000(%rsi,%rdi,1),%esi
   190ff:	shr    $0x10,%esi
   19102:	movzwl %si,%edi
   19105:	shr    $0x8,%edi
   19108:	mov    %dil,0x4(%rdx)
   1910c:	mov    %sil,0x5(%rdx)
   19110:	jmpq   18d8b <png_do_compose+0x25b>
   19115:	mov    $0x7f7f,%edi
   1911a:	mov    $0x7,%r8d
   19120:	mov    %r15,-0x18(%rbp)
   19124:	mov    %r14,-0x10(%rbp)
   19128:	mov    -0xa0(%rbp),%r9
   1912f:	xor    %esi,%esi
   19131:	mov    -0xa8(%rbp),%rdx
   19138:	mov    %r8,%rcx
   1913b:	jmpq   194c6 <png_do_compose+0x996>
   19140:	mov    $0x3f3f,%edx
   19145:	mov    $0x6,%esi
   1914a:	test   %r8,%r8
   1914d:	jne    194d8 <png_do_compose+0x9a8>
   19153:	mov    %r15,-0x28(%rbp)
   19157:	mov    %r14,-0x20(%rbp)
   1915b:	mov    -0xa0(%rbp),%r9
   19162:	xor    %r8d,%r8d
   19165:	mov    -0xa8(%rbp),%rdi
   1916c:	mov    %rsi,%rcx
   1916f:	jmpq   19508 <png_do_compose+0x9d8>
   19174:	mov    $0xf0f,%edx
   19179:	mov    $0x4,%esi
   1917e:	test   %r8,%r8
   19181:	jne    1951b <png_do_compose+0x9eb>
   19187:	mov    %r15,-0x38(%rbp)
   1918b:	mov    %r14,-0x30(%rbp)
   1918f:	mov    -0xa0(%rbp),%r9
   19196:	xor    %r8d,%r8d
   19199:	mov    -0xa8(%rbp),%rdi
   191a0:	mov    %rsi,%rcx
   191a3:	jmpq   1954b <png_do_compose+0xa1b>
   191a8:	test   %r8,%r8
   191ab:	jne    1955e <png_do_compose+0xa2e>
   191b1:	mov    -0xa0(%rbp),%rdi
   191b8:	xor    %ecx,%ecx
   191ba:	mov    -0xa8(%rbp),%rdx
   191c1:	jmpq   19595 <png_do_compose+0xa65>
   191c6:	test   %rsi,%rsi
   191c9:	jne    1959b <png_do_compose+0xa6b>
   191cf:	mov    -0xa0(%rbp),%rdi
   191d6:	xor    %ecx,%ecx
   191d8:	mov    -0xa8(%rbp),%rdx
   191df:	jmpq   195ee <png_do_compose+0xabe>
   191e4:	mov    -0xa0(%rbp),%rdi
   191eb:	xor    %ecx,%ecx
   191ed:	mov    -0xa8(%rbp),%rdx
   191f4:	jmpq   19620 <png_do_compose+0xaf0>
   191f9:	movzbl (%rdx),%r8d
   191fd:	movzwl 0x2f2(%rsi),%edi
   19204:	cmp    %di,%r8w
   19208:	jne    1924e <png_do_compose+0x71e>
   1920a:	movzbl 0x1(%rdx),%edi
   1920e:	movzwl 0x2f4(%rsi),%r8d
   19216:	cmp    %r8w,%di
   1921a:	jne    1924e <png_do_compose+0x71e>
   1921c:	movzbl 0x2(%rdx),%r8d
   19221:	movzwl 0x2f6(%rsi),%edi
   19228:	cmp    %di,%r8w
   1922c:	jne    1924e <png_do_compose+0x71e>
   1922e:	movzbl 0x27e(%rsi),%edi
   19235:	mov    %dil,(%rdx)
   19238:	movzbl 0x280(%rsi),%edi
   1923f:	mov    %dil,0x1(%rdx)
   19243:	movzbl 0x282(%rsi),%edi
   1924a:	mov    %dil,0x2(%rdx)
   1924e:	add    $0x1,%ecx
   19251:	add    $0x3,%rdx
   19255:	cmp    %ecx,%eax
   19257:	ja     191f9 <png_do_compose+0x6c9>
   19259:	leaveq 
   1925a:	retq   
   1925b:	movzbl 0x1(%rdi),%r9d
   19260:	shr    %cl,%r9d
   19263:	movslq %r9d,%r9
   19266:	mov    (%rsi,%r9,8),%r10
   1926a:	movzbl (%rdi),%r9d
   1926e:	movzwl (%r10,%r9,2),%r10d
   19273:	mov    %r10,%r9
   19276:	shr    $0x8,%r9d
   1927a:	mov    %r9b,(%rdi)
   1927d:	mov    %r10b,0x1(%rdi)
   19281:	movzbl 0x3(%rdi),%r9d
   19286:	shr    %cl,%r9d
   19289:	movslq %r9d,%r9
   1928c:	mov    (%rsi,%r9,8),%r10
   19290:	movzbl 0x2(%rdi),%r9d
   19295:	movzwl (%r10,%r9,2),%r10d
   1929a:	mov    %r10,%r9
   1929d:	shr    $0x8,%r9d
   192a1:	mov    %r9b,0x2(%rdi)
   192a5:	mov    %r10b,0x3(%rdi)
   192a9:	movzbl 0x5(%rdi),%r9d
   192ae:	shr    %cl,%r9d
   192b1:	movslq %r9d,%r9
   192b4:	mov    (%rsi,%r9,8),%r10
   192b8:	movzbl 0x4(%rdi),%r9d
   192bd:	movzwl (%r10,%r9,2),%r9d
   192c2:	mov    %r9,%r10
   192c5:	shr    $0x8,%r10d
   192c9:	mov    %r10b,0x4(%rdi)
   192cd:	mov    %r9b,0x5(%rdi)
   192d1:	add    $0x1,%edx
   192d4:	add    $0x6,%rdi
   192d8:	cmp    %edx,%eax
   192da:	ja     1962a <png_do_compose+0xafa>
   192e0:	mov    -0x40(%rbp),%r14
   192e4:	mov    -0x38(%rbp),%r13
   192e8:	mov    -0x48(%rbp),%r15
   192ec:	leaveq 
   192ed:	retq   
   192ee:	test   %r8,%r8
   192f1:	jne    196e9 <png_do_compose+0xbb9>
   192f7:	mov    -0xa0(%rbp),%r9
   192fe:	xor    %edx,%edx
   19300:	mov    -0xa8(%rbp),%rsi
   19307:	jmpq   18ee0 <png_do_compose+0x3b0>
   1930c:	movzbl 0x1(%rsi),%edi
   19310:	test   %dil,%dil
   19313:	je     18ece <png_do_compose+0x39e>
   19319:	cmp    $0xfe,%dil
   1931d:	ja     18ed9 <png_do_compose+0x3a9>
   19323:	mov    %rcx,%r8
   19326:	sub    %di,%r8w
   1932a:	movzwl 0x284(%r9),%r10d
   19332:	imul   %r10w,%r8w
   19337:	movzbl (%rsi),%r10d
   1933b:	imul   %r10w,%di
   19340:	lea    0x80(%r8,%rdi,1),%edi
   19348:	movzwl %di,%r8d
   1934c:	mov    %r8,%rdi
   1934f:	shr    $0x8,%edi
   19352:	add    %r8d,%edi
   19355:	shr    $0x8,%edi
   19358:	mov    %dil,(%rsi)
   1935b:	jmpq   18ed9 <png_do_compose+0x3a9>
   19360:	mov    %r15,-0x68(%rbp)
   19364:	mov    %r13,-0x58(%rbp)
   19368:	mov    %r14,-0x60(%rbp)
   1936c:	mov    %rbx,-0x48(%rbp)
   19370:	mov    %r12,-0x50(%rbp)
   19374:	mov    $0xffff,%r11d
   1937a:	mov    -0x90(%rbp),%rcx
   19381:	mov    -0xa0(%rbp),%r10
   19388:	mov    -0x98(%rbp),%rbx
   1938f:	xor    %edx,%edx
   19391:	mov    -0xa8(%rbp),%rdi
   19398:	jmpq   1973e <png_do_compose+0xc0e>
   1939d:	test   %r8,%r8
   193a0:	jne    1975c <png_do_compose+0xc2c>
   193a6:	mov    -0xa0(%rbp),%r9
   193ad:	xor    %edx,%edx
   193af:	mov    -0xa8(%rbp),%rsi
   193b6:	jmpq   18fcb <png_do_compose+0x49b>
   193bb:	movzbl 0x3(%rsi),%r8d
   193c0:	test   %r8b,%r8b
   193c3:	je     18fa1 <png_do_compose+0x471>
   193c9:	cmp    $0xfe,%r8b
   193cd:	ja     18fc4 <png_do_compose+0x494>
   193d3:	mov    %rcx,%r11
   193d6:	sub    %r8w,%r11w
   193da:	movzwl 0x27e(%r9),%edi
   193e2:	imul   %r11w,%di
   193e7:	movzbl (%rsi),%r10d
   193eb:	imul   %r8w,%r10w
   193f0:	lea    0x80(%rdi,%r10,1),%edi
   193f8:	movzwl %di,%r10d
   193fc:	mov    %r10,%rdi
   193ff:	shr    $0x8,%edi
   19402:	add    %r10d,%edi
   19405:	shr    $0x8,%edi
   19408:	mov    %dil,(%rsi)
   1940b:	movzwl 0x280(%r9),%edi
   19413:	imul   %r11w,%di
   19418:	movzbl 0x1(%rsi),%r10d
   1941d:	imul   %r8w,%r10w
   19422:	lea    0x80(%rdi,%r10,1),%edi
   1942a:	movzwl %di,%r10d
   1942e:	mov    %r10,%rdi
   19431:	shr    $0x8,%edi
   19434:	add    %r10d,%edi
   19437:	shr    $0x8,%edi
   1943a:	mov    %dil,0x1(%rsi)
   1943e:	movzwl 0x282(%r9),%edi
   19446:	imul   %r11w,%di
   1944b:	movzbl 0x2(%rsi),%r10d
   19450:	imul   %r10w,%r8w
   19455:	lea    0x80(%rdi,%r8,1),%edi
   1945d:	movzwl %di,%edi
   19460:	mov    %rdi,%r8
   19463:	shr    $0x8,%r8d
   19467:	add    %r8d,%edi
   1946a:	shr    $0x8,%edi
   1946d:	mov    %dil,0x2(%rsi)
   19471:	jmpq   18fc4 <png_do_compose+0x494>
   19476:	mov    %r15,-0xb0(%rbp)
   1947d:	mov    %r13,-0x80(%rbp)
   19481:	mov    %r14,-0x88(%rbp)
   19488:	mov    %rbx,-0x70(%rbp)
   1948c:	mov    %r12,-0x78(%rbp)
   19490:	mov    $0xffff,%edx
   19495:	mov    -0x90(%rbp),%rcx
   1949c:	mov    -0xa0(%rbp),%rdi
   194a3:	mov    -0x98(%rbp),%r12
   194aa:	xor    %r8d,%r8d
   194ad:	mov    -0xa8(%rbp),%rbx
   194b4:	mov    %r8,%r11
   194b7:	jmpq   19816 <png_do_compose+0xce6>
   194bc:	add    $0x1,%rdx
   194c0:	mov    %r8,%rcx
   194c3:	add    $0x1,%esi
   194c6:	cmp    %eax,%esi
   194c8:	jb     1983b <png_do_compose+0xd0b>
   194ce:	mov    -0x10(%rbp),%r14
   194d2:	mov    -0x18(%rbp),%r15
   194d6:	leaveq 
   194d7:	retq   
   194d8:	mov    %r15,-0x18(%rbp)
   194dc:	mov    %r13,-0x8(%rbp)
   194e0:	mov    %r14,-0x10(%rbp)
   194e4:	mov    -0xa0(%rbp),%r10
   194eb:	xor    %r9d,%r9d
   194ee:	mov    -0xa8(%rbp),%rdi
   194f5:	mov    %rsi,%rcx
   194f8:	jmpq   19899 <png_do_compose+0xd69>
   194fd:	add    $0x1,%rdi
   19501:	mov    %rsi,%rcx
   19504:	add    $0x1,%r8d
   19508:	cmp    %r8d,%eax
   1950b:	ja     198b0 <png_do_compose+0xd80>
   19511:	mov    -0x20(%rbp),%r14
   19515:	mov    -0x28(%rbp),%r15
   19519:	leaveq 
   1951a:	retq   
   1951b:	mov    %r15,-0x30(%rbp)
   1951f:	mov    %r13,-0x20(%rbp)
   19523:	mov    %r14,-0x28(%rbp)
   19527:	mov    -0xa0(%rbp),%r10
   1952e:	xor    %r9d,%r9d
   19531:	mov    -0xa8(%rbp),%rdi
   19538:	mov    %rsi,%rcx
   1953b:	jmpq   1990e <png_do_compose+0xdde>
   19540:	add    $0x1,%rdi
   19544:	mov    %rsi,%rcx
   19547:	add    $0x1,%r8d
   1954b:	cmp    %r8d,%eax
   1954e:	ja     19925 <png_do_compose+0xdf5>
   19554:	mov    -0x30(%rbp),%r14
   19558:	mov    -0x38(%rbp),%r15
   1955c:	leaveq 
   1955d:	retq   
   1955e:	mov    -0xa0(%rbp),%rdi
   19565:	xor    %edx,%edx
   19567:	mov    -0xa8(%rbp),%rcx
   1956e:	jmpq   19989 <png_do_compose+0xe59>
   19573:	movzbl (%rdx),%r8d
   19577:	movzwl 0x2f8(%rdi),%esi
   1957e:	cmp    %si,%r8w
   19582:	jne    1958e <png_do_compose+0xa5e>
   19584:	movzbl 0x284(%rdi),%esi
   1958b:	mov    %sil,(%rdx)
   1958e:	add    $0x1,%ecx
   19591:	add    $0x1,%rdx
   19595:	cmp    %ecx,%eax
   19597:	ja     19573 <png_do_compose+0xa43>
   19599:	leaveq 
   1959a:	retq   
   1959b:	mov    %r15,-0x40(%rbp)
   1959f:	mov    -0xa0(%rbp),%r8
   195a6:	xor    %edx,%edx
   195a8:	mov    -0xa8(%rbp),%rdi
   195af:	jmpq   199b5 <png_do_compose+0xe85>
   195b4:	movzbl 0x1(%rdx),%r8d
   195b9:	movzbl (%rdx),%esi
   195bc:	shl    $0x8,%esi
   195bf:	add    %esi,%r8d
   195c2:	movzwl 0x2f8(%rdi),%esi
   195c9:	cmp    %si,%r8w
   195cd:	jne    195e7 <png_do_compose+0xab7>
   195cf:	movzwl 0x284(%rdi),%esi
   195d6:	shr    $0x8,%esi
   195d9:	mov    %sil,(%rdx)
   195dc:	movzbl 0x284(%rdi),%esi
   195e3:	mov    %sil,0x1(%rdx)
   195e7:	add    $0x1,%ecx
   195ea:	add    $0x2,%rdx
   195ee:	cmp    %ecx,%eax
   195f0:	ja     195b4 <png_do_compose+0xa84>
   195f2:	leaveq 
   195f3:	retq   
   195f4:	movzbl (%rdx),%esi
   195f7:	movzbl (%r8,%rsi,1),%esi
   195fc:	mov    %sil,(%rdx)
   195ff:	movzbl 0x1(%rdx),%esi
   19603:	movzbl (%r8,%rsi,1),%esi
   19608:	mov    %sil,0x1(%rdx)
   1960c:	movzbl 0x2(%rdx),%esi
   19610:	movzbl (%r8,%rsi,1),%esi
   19615:	mov    %sil,0x2(%rdx)
   19619:	add    $0x1,%ecx
   1961c:	add    $0x3,%rdx
   19620:	cmp    %ecx,%eax
   19622:	ja     199c3 <png_do_compose+0xe93>
   19628:	leaveq 
   19629:	retq   
   1962a:	movzbl 0x2(%rdi),%r10d
   1962f:	movzbl 0x3(%rdi),%r14d
   19634:	movzbl 0x4(%rdi),%r11d
   19639:	movzbl 0x5(%rdi),%r13d
   1963e:	movzbl 0x1(%rdi),%r15d
   19643:	movzbl (%rdi),%r9d
   19647:	shl    $0x8,%r9d
   1964b:	add    %r9d,%r15d
   1964e:	movzwl 0x2f2(%r8),%r9d
   19656:	cmp    %r9w,%r15w
   1965a:	jne    1925b <png_do_compose+0x72b>
   19660:	shl    $0x8,%r10d
   19664:	lea    (%r14,%r10,1),%r9d
   19668:	movzwl 0x2f4(%r8),%r10d
   19670:	cmp    %r10w,%r9w
   19674:	jne    1925b <png_do_compose+0x72b>
   1967a:	shl    $0x8,%r11d
   1967e:	lea    0x0(%r13,%r11,1),%r10d
   19683:	movzwl 0x2f6(%r8),%r9d
   1968b:	cmp    %r9w,%r10w
   1968f:	jne    1925b <png_do_compose+0x72b>
   19695:	movzwl 0x27e(%r8),%r9d
   1969d:	shr    $0x8,%r9d
   196a1:	mov    %r9b,(%rdi)
   196a4:	movzbl 0x27e(%r8),%r9d
   196ac:	mov    %r9b,0x1(%rdi)
   196b0:	movzwl 0x280(%r8),%r9d
   196b8:	shr    $0x8,%r9d
   196bc:	mov    %r9b,0x2(%rdi)
   196c0:	movzbl 0x280(%r8),%r9d
   196c8:	mov    %r9b,0x3(%rdi)
   196cc:	movzwl 0x282(%r8),%r9d
   196d4:	shr    $0x8,%r9d
   196d8:	mov    %r9b,0x4(%rdi)
   196dc:	movzbl 0x282(%r8),%r9d
   196e4:	jmpq   192cd <png_do_compose+0x79d>
   196e9:	mov    %r15,-0x60(%rbp)
   196ed:	mov    %r13,-0x50(%rbp)
   196f1:	mov    %r14,-0x58(%rbp)
   196f5:	mov    -0xa0(%rbp),%r14
   196fc:	mov    -0x98(%rbp),%r13
   19703:	xor    %esi,%esi
   19705:	mov    -0xa8(%rbp),%rdi
   1970c:	jmpq   19a3a <png_do_compose+0xf0a>
   19711:	movzbl 0x1(%rdi),%r12d
   19716:	shr    %cl,%r12d
   19719:	movslq %r12d,%r12
   1971c:	mov    (%rsi,%r12,8),%r12
   19720:	movzbl (%rdi),%r13d
   19724:	movzwl (%r12,%r13,2),%r12d
   19729:	mov    %r12,%r13
   1972c:	shr    $0x8,%r13d
   19730:	mov    %r13b,(%rdi)
   19733:	mov    %r12b,0x1(%rdi)
   19737:	add    $0x1,%edx
   1973a:	add    $0x4,%rdi
   1973e:	cmp    %edx,%eax
   19740:	ja     19a50 <png_do_compose+0xf20>
   19746:	mov    -0x50(%rbp),%r12
   1974a:	mov    -0x48(%rbp),%rbx
   1974e:	mov    -0x60(%rbp),%r14
   19752:	mov    -0x58(%rbp),%r13
   19756:	mov    -0x68(%rbp),%r15
   1975a:	leaveq 
   1975b:	retq   
   1975c:	mov    %r15,-0x88(%rbp)
   19763:	mov    %r13,-0x78(%rbp)
   19767:	mov    %r14,-0x80(%rbp)
   1976b:	mov    %rbx,-0x68(%rbp)
   1976f:	mov    %r12,-0x70(%rbp)
   19773:	mov    -0xa0(%rbp),%r15
   1977a:	mov    -0x98(%rbp),%r14
   19781:	mov    $0x1,%edx
   19786:	xor    %r13d,%r13d
   19789:	mov    -0xa8(%rbp),%rsi
   19790:	mov    %r13,%rdi
   19793:	jmpq   19b22 <png_do_compose+0xff2>
   19798:	movzbl 0x1(%rbx),%r13d
   1979d:	shr    %cl,%r13d
   197a0:	movslq %r13d,%r13
   197a3:	mov    (%rsi,%r13,8),%r14
   197a7:	movzbl (%rbx),%r13d
   197ab:	movzwl (%r14,%r13,2),%r14d
   197b0:	mov    %r14,%r13
   197b3:	shr    $0x8,%r13d
   197b7:	mov    %r13b,(%rbx)
   197ba:	mov    %r14b,0x1(%rbx)
   197be:	movzbl 0x3(%rbx),%r13d
   197c3:	shr    %cl,%r13d
   197c6:	movslq %r13d,%r13
   197c9:	mov    (%rsi,%r13,8),%r14
   197cd:	movzbl 0x2(%rbx),%r13d
   197d2:	movzwl (%r14,%r13,2),%r13d
   197d7:	mov    %r13,%r14
   197da:	shr    $0x8,%r14d
   197de:	mov    %r14b,0x2(%rbx)
   197e2:	mov    %r13b,0x3(%rbx)
   197e6:	movzbl 0x5(%rbx),%r13d
   197eb:	shr    %cl,%r13d
   197ee:	movslq %r13d,%r13
   197f1:	mov    (%rsi,%r13,8),%r14
   197f5:	movzbl 0x4(%rbx),%r13d
   197fa:	movzwl (%r14,%r13,2),%r14d
   197ff:	mov    %r14,%r13
   19802:	shr    $0x8,%r13d
   19806:	mov    %r13b,0x4(%rbx)
   1980a:	mov    %r14b,0x5(%rbx)
   1980e:	add    $0x1,%r11d
   19812:	add    $0x8,%rbx
   19816:	cmp    %r11d,%eax
   19819:	ja     19b43 <png_do_compose+0x1013>
   1981f:	mov    -0x78(%rbp),%r12
   19823:	mov    -0x70(%rbp),%rbx
   19827:	mov    -0x88(%rbp),%r14
   1982e:	mov    -0x80(%rbp),%r13
   19832:	mov    -0xb0(%rbp),%r15
   19839:	leaveq 
   1983a:	retq   
   1983b:	movzbl (%rdx),%r10d
   1983f:	mov    %r10,%r11
   19842:	shr    %cl,%r11d
   19845:	and    $0x1,%r11w
   1984a:	movzwl 0x2f8(%r9),%r14d
   19852:	cmp    %r14w,%r11w
   19856:	jne    1987e <png_do_compose+0xd4e>
   19858:	movzbl 0x284(%r9),%r11d
   19860:	shl    %cl,%r11d
   19863:	mov    %rcx,%r15
   19866:	mov    %r8,%rcx
   19869:	sub    %r15d,%ecx
   1986c:	mov    %rdi,%r14
   1986f:	shr    %cl,%r14d
   19872:	and    %r14b,%r10b
   19875:	or     %r10b,%r11b
   19878:	mov    %r11b,(%rdx)
   1987b:	mov    %r15,%rcx
   1987e:	test   %ecx,%ecx
   19880:	je     194bc <png_do_compose+0x98c>
   19886:	add    $0xffffffff,%ecx
   19889:	jmpq   194c3 <png_do_compose+0x993>
   1988e:	add    $0x1,%rdi
   19892:	mov    %rsi,%rcx
   19895:	add    $0x1,%r9d
   19899:	cmp    %r9d,%eax
   1989c:	ja     19bcc <png_do_compose+0x109c>
   198a2:	mov    -0x10(%rbp),%r14
   198a6:	mov    -0x8(%rbp),%r13
   198aa:	mov    -0x18(%rbp),%r15
   198ae:	leaveq 
   198af:	retq   
   198b0:	movzbl (%rdi),%r10d
   198b4:	mov    %r10,%r11
   198b7:	shr    %cl,%r11d
   198ba:	and    $0x3,%r11w
   198bf:	movzwl 0x2f8(%r9),%r14d
   198c7:	cmp    %r14w,%r11w
   198cb:	jne    198f3 <png_do_compose+0xdc3>
   198cd:	movzbl 0x284(%r9),%r11d
   198d5:	shl    %cl,%r11d
   198d8:	mov    %rcx,%r15
   198db:	mov    %rsi,%rcx
   198de:	sub    %r15d,%ecx
   198e1:	mov    %rdx,%r14
   198e4:	shr    %cl,%r14d
   198e7:	and    %r14b,%r10b
   198ea:	or     %r10b,%r11b
   198ed:	mov    %r11b,(%rdi)
   198f0:	mov    %r15,%rcx
   198f3:	test   %ecx,%ecx
   198f5:	je     194fd <png_do_compose+0x9cd>
   198fb:	add    $0xfffffffe,%ecx
   198fe:	jmpq   19504 <png_do_compose+0x9d4>
   19903:	add    $0x1,%rdi
   19907:	mov    %rsi,%rcx
   1990a:	add    $0x1,%r9d
   1990e:	cmp    %r9d,%eax
   19911:	ja     19c2e <png_do_compose+0x10fe>
   19917:	mov    -0x28(%rbp),%r14
   1991b:	mov    -0x20(%rbp),%r13
   1991f:	mov    -0x30(%rbp),%r15
   19923:	leaveq 
   19924:	retq   
   19925:	movzbl (%rdi),%r10d
   19929:	mov    %r10,%r11
   1992c:	shr    %cl,%r11d
   1992f:	and    $0xf,%r11w
   19934:	movzwl 0x2f8(%r9),%r14d
   1993c:	cmp    %r14w,%r11w
   19940:	jne    19968 <png_do_compose+0xe38>
   19942:	movzbl 0x284(%r9),%r11d
   1994a:	shl    %cl,%r11d
   1994d:	mov    %rcx,%r15
   19950:	mov    %rsi,%rcx
   19953:	sub    %r15d,%ecx
   19956:	mov    %rdx,%r14
   19959:	shr    %cl,%r14d
   1995c:	and    %r14b,%r10b
   1995f:	or     %r10b,%r11b
   19962:	mov    %r11b,(%rdi)
   19965:	mov    %r15,%rcx
   19968:	test   %ecx,%ecx
   1996a:	je     19540 <png_do_compose+0xa10>
   19970:	add    $0xfffffffc,%ecx
   19973:	jmpq   19547 <png_do_compose+0xa17>
   19978:	movzbl 0x284(%rdi),%esi
   1997f:	mov    %sil,(%rcx)
   19982:	add    $0x1,%edx
   19985:	add    $0x1,%rcx
   19989:	cmp    %edx,%eax
   1998b:	ja     19c8c <png_do_compose+0x115c>
   19991:	leaveq 
   19992:	retq   
   19993:	movzwl 0x284(%r8),%r9d
   1999b:	shr    $0x8,%r9d
   1999f:	mov    %r9b,(%rdi)
   199a2:	movzbl 0x284(%r8),%r9d
   199aa:	mov    %r9b,0x1(%rdi)
   199ae:	add    $0x1,%edx
   199b1:	add    $0x2,%rdi
   199b5:	cmp    %edx,%eax
   199b7:	ja     19cab <png_do_compose+0x117b>
   199bd:	mov    -0x40(%rbp),%r15
   199c1:	leaveq 
   199c2:	retq   
   199c3:	movzbl (%rdx),%r9d
   199c7:	movzwl 0x2f2(%rdi),%esi
   199ce:	cmp    %si,%r9w
   199d2:	jne    195f4 <png_do_compose+0xac4>
   199d8:	movzbl 0x1(%rdx),%esi
   199dc:	movzwl 0x2f4(%rdi),%r9d
   199e4:	cmp    %r9w,%si
   199e8:	jne    195f4 <png_do_compose+0xac4>
   199ee:	movzbl 0x2(%rdx),%r9d
   199f3:	movzwl 0x2f6(%rdi),%esi
   199fa:	cmp    %si,%r9w
   199fe:	jne    195f4 <png_do_compose+0xac4>
   19a04:	movzbl 0x27e(%rdi),%esi
   19a0b:	mov    %sil,(%rdx)
   19a0e:	movzbl 0x280(%rdi),%esi
   19a15:	mov    %sil,0x1(%rdx)
   19a19:	movzbl 0x282(%rdi),%esi
   19a20:	mov    %sil,0x2(%rdx)
   19a24:	jmpq   19619 <png_do_compose+0xae9>
   19a29:	movzbl (%rdi),%edx
   19a2c:	movzbl (%r8,%rdx,1),%edx
   19a31:	mov    %dl,(%rdi)
   19a33:	add    $0x1,%esi
   19a36:	add    $0x2,%rdi
   19a3a:	cmp    %esi,%eax
   19a3c:	ja     19cef <png_do_compose+0x11bf>
   19a42:	mov    -0x58(%rbp),%r14
   19a46:	mov    -0x50(%rbp),%r13
   19a4a:	mov    -0x60(%rbp),%r15
   19a4e:	leaveq 
   19a4f:	retq   
   19a50:	movzbl 0x3(%rdi),%r14d
   19a55:	movzbl 0x2(%rdi),%r12d
   19a5a:	shl    $0x8,%r12d
   19a5e:	lea    (%r14,%r12,1),%r13d
   19a62:	cmp    $0xffff,%r13w
   19a67:	je     19711 <png_do_compose+0xbe1>
   19a6d:	cmp    %r12w,%r14w
   19a71:	je     19d54 <png_do_compose+0x1224>
   19a77:	movzwl %r13w,%r14d
   19a7b:	mov    %r11,%r13
   19a7e:	sub    %r14d,%r13d
   19a81:	movzwl 0x28e(%r10),%r12d
   19a89:	imul   %r12d,%r13d
   19a8d:	movzbl 0x1(%rdi),%r12d
   19a92:	shr    %cl,%r12d
   19a95:	movslq %r12d,%r12
   19a98:	mov    (%r8,%r12,8),%r15
   19a9c:	movzbl (%rdi),%r12d
   19aa0:	movzwl (%r15,%r12,2),%r12d
   19aa5:	imul   %r12d,%r14d
   19aa9:	add    %r14d,%r13d
   19aac:	lea    0x8000(%r13),%r12d
   19ab3:	shr    $0x10,%r12d
   19ab7:	lea    0x8000(%r12,%r13,1),%r12d
   19abf:	shr    $0x10,%r12d
   19ac3:	test   %ebx,%ebx
   19ac5:	jg     19ae5 <png_do_compose+0xfb5>
   19ac7:	movzwl %r12w,%r13d
   19acb:	movzbl %r13b,%r12d
   19acf:	shr    %cl,%r12d
   19ad2:	movslq %r12d,%r12
   19ad5:	mov    (%r9,%r12,8),%r14
   19ad9:	shr    $0x8,%r13d
   19add:	movslq %r13d,%r12
   19ae0:	movzwl (%r14,%r12,2),%r12d
   19ae5:	movzwl %r12w,%r13d
   19ae9:	shr    $0x8,%r13d
   19aed:	mov    %r13b,(%rdi)
   19af0:	mov    %r12b,0x1(%rdi)
   19af4:	jmpq   19737 <png_do_compose+0xc07>
   19af9:	movzbl (%rsi),%ebx
   19afc:	movzbl (%r8,%rbx,1),%ebx
   19b01:	mov    %bl,(%rsi)
   19b03:	movzbl 0x1(%rsi),%ebx
   19b07:	movzbl (%r8,%rbx,1),%ebx
   19b0c:	mov    %bl,0x1(%rsi)
   19b0f:	movzbl 0x2(%rsi),%ebx
   19b13:	movzbl (%r8,%rbx,1),%ebx
   19b18:	mov    %bl,0x2(%rsi)
   19b1b:	add    $0x1,%edi
   19b1e:	add    $0x4,%rsi
   19b22:	cmp    %edi,%eax
   19b24:	ja     19d74 <png_do_compose+0x1244>
   19b2a:	mov    -0x70(%rbp),%r12
   19b2e:	mov    -0x68(%rbp),%rbx
   19b32:	mov    -0x80(%rbp),%r14
   19b36:	mov    -0x78(%rbp),%r13
   19b3a:	mov    -0x88(%rbp),%r15
   19b41:	leaveq 
   19b42:	retq   
   19b43:	movzbl 0x7(%rbx),%r15d
   19b48:	movzbl 0x6(%rbx),%r13d
   19b4d:	shl    $0x8,%r13d
   19b51:	lea    (%r15,%r13,1),%r14d
   19b55:	cmp    $0xffff,%r14w
   19b5a:	je     19798 <png_do_compose+0xc68>
   19b60:	cmp    %r13w,%r15w
   19b64:	je     19dd3 <png_do_compose+0x12a3>
   19b6a:	movzwl %r14w,%r13d
   19b6e:	sub    %r13d,%edx
   19b71:	movzwl 0x288(%rdi),%r14d
   19b79:	mov    %rdx,%r15
   19b7c:	imul   %r14d,%r15d
   19b80:	movzbl 0x1(%rbx),%r14d
   19b85:	shr    %cl,%r14d
   19b88:	movslq %r14d,%r14
   19b8b:	mov    (%r10,%r14,8),%r14
   19b8f:	mov    %rsi,-0xa8(%rbp)
   19b96:	movzbl (%rbx),%esi
   19b99:	movzwl (%r14,%rsi,2),%esi
   19b9e:	imul   %r13d,%esi
   19ba2:	lea    (%r15,%rsi,1),%r14d
   19ba6:	lea    0x8000(%r14),%esi
   19bad:	shr    $0x10,%esi
   19bb0:	lea    0x8000(%rsi,%r14,1),%esi
   19bb8:	shr    $0x10,%esi
   19bbb:	test   %r12d,%r12d
   19bbe:	je     19e2b <png_do_compose+0x12fb>
   19bc4:	mov    %r8,%r12
   19bc7:	jmpq   19e4d <png_do_compose+0x131d>
   19bcc:	movzbl (%rdi),%r13d
   19bd0:	mov    %r13,%r11
   19bd3:	shr    %cl,%r11d
   19bd6:	and    $0x3,%r11w
   19bdb:	movzwl 0x2f8(%r10),%r14d
   19be3:	cmp    %r14w,%r11w
   19be7:	je     19ead <png_do_compose+0x137d>
   19bed:	mov    %r13,%r11
   19bf0:	shr    %cl,%r11d
   19bf3:	and    $0x3,%r11d
   19bf7:	mov    %r11,%r14
   19bfa:	shl    $0x4,%r14d
   19bfe:	add    %r14d,%r11d
   19c01:	lea    (%r11,%r11,4),%r11d
   19c05:	mov    %r11d,%r11d
   19c08:	movzbl (%r11,%r8,1),%r11d
   19c0d:	shr    $0x6,%r11d
   19c11:	shl    %cl,%r11d
   19c14:	mov    %rcx,%r14
   19c17:	mov    %rsi,%rcx
   19c1a:	sub    %r14d,%ecx
   19c1d:	mov    %rdx,%r15
   19c20:	shr    %cl,%r15d
   19c23:	and    %r15b,%r13b
   19c26:	or     %r13b,%r11b
   19c29:	jmpq   19ecd <png_do_compose+0x139d>
   19c2e:	movzbl (%rdi),%r13d
   19c32:	mov    %r13,%r11
   19c35:	shr    %cl,%r11d
   19c38:	and    $0xf,%r11w
   19c3d:	movzwl 0x2f8(%r10),%r14d
   19c45:	cmp    %r14w,%r11w
   19c49:	je     19ee2 <png_do_compose+0x13b2>
   19c4f:	mov    %r13,%r11
   19c52:	shr    %cl,%r11d
   19c55:	and    $0xf,%r11d
   19c59:	mov    %r11,%r14
   19c5c:	shl    $0x4,%r14d
   19c60:	add    %r14d,%r11d
   19c63:	mov    %r11d,%r11d
   19c66:	movzbl (%r8,%r11,1),%r11d
   19c6b:	shr    $0x4,%r11d
   19c6f:	shl    %cl,%r11d
   19c72:	mov    %rcx,%r14
   19c75:	mov    %rsi,%rcx
   19c78:	sub    %r14d,%ecx
   19c7b:	mov    %rdx,%r15
   19c7e:	shr    %cl,%r15d
   19c81:	and    %r15b,%r13b
   19c84:	or     %r13b,%r11b
   19c87:	jmpq   19f02 <png_do_compose+0x13d2>
   19c8c:	movzbl (%rcx),%esi
   19c8f:	movzwl 0x2f8(%rdi),%r9d
   19c97:	cmp    %r9w,%si
   19c9b:	je     19978 <png_do_compose+0xe48>
   19ca1:	movzbl (%r8,%rsi,1),%esi
   19ca6:	jmpq   1997f <png_do_compose+0xe4f>
   19cab:	movzbl 0x1(%rdi),%r9d
   19cb0:	movzbl (%rdi),%r10d
   19cb4:	mov    %r10,%r11
   19cb7:	shl    $0x8,%r11d
   19cbb:	lea    (%r9,%r11,1),%r15d
   19cbf:	movzwl 0x2f8(%r8),%r11d
   19cc7:	cmp    %r11w,%r15w
   19ccb:	je     19993 <png_do_compose+0xe63>
   19cd1:	shr    %cl,%r9d
   19cd4:	movslq %r9d,%r9
   19cd7:	mov    (%rsi,%r9,8),%r9
   19cdb:	movzwl (%r9,%r10,2),%r9d
   19ce0:	mov    %r9,%r10
   19ce3:	shr    $0x8,%r10d
   19ce7:	mov    %r10b,(%rdi)
   19cea:	jmpq   199aa <png_do_compose+0xe7a>
   19cef:	movzbl 0x1(%rdi),%edx
   19cf3:	cmp    $0xff,%dl
   19cf6:	je     19a29 <png_do_compose+0xef9>
   19cfc:	test   %dl,%dl
   19cfe:	je     19f17 <png_do_compose+0x13e7>
   19d04:	mov    %rcx,%r9
   19d07:	sub    %dx,%r9w
   19d0b:	movzwl 0x28e(%r14),%r15d
   19d13:	imul   %r15w,%r9w
   19d18:	movzbl (%rdi),%r15d
   19d1c:	movzbl (%r10,%r15,1),%r15d
   19d21:	imul   %r15w,%dx
   19d26:	lea    0x80(%r9,%rdx,1),%edx
   19d2e:	movzwl %dx,%r9d
   19d32:	mov    %r9,%rdx
   19d35:	shr    $0x8,%edx
   19d38:	add    %r9d,%edx
   19d3b:	shr    $0x8,%edx
   19d3e:	test   %r13d,%r13d
   19d41:	jne    19a31 <png_do_compose+0xf01>
   19d47:	movzbl %dl,%edx
   19d4a:	movzbl (%r11,%rdx,1),%edx
   19d4f:	jmpq   19a31 <png_do_compose+0xf01>
   19d54:	movzwl 0x284(%r10),%r12d
   19d5c:	shr    $0x8,%r12d
   19d60:	mov    %r12b,(%rdi)
   19d63:	movzbl 0x284(%r10),%r12d
   19d6b:	mov    %r12b,0x1(%rdi)
   19d6f:	jmpq   19737 <png_do_compose+0xc07>
   19d74:	movzbl 0x3(%rsi),%r9d
   19d79:	cmp    $0xff,%r9b
   19d7d:	je     19af9 <png_do_compose+0xfc9>
   19d83:	test   %r9b,%r9b
   19d86:	je     19f24 <png_do_compose+0x13f4>
   19d8c:	sub    %r9w,%cx
   19d90:	movzwl 0x288(%r15),%ebx
   19d98:	imul   %cx,%bx
   19d9c:	movzbl (%rsi),%r12d
   19da0:	movzbl (%r10,%r12,1),%r12d
   19da5:	imul   %r9w,%r12w
   19daa:	lea    0x80(%rbx,%r12,1),%ebx
   19db2:	movzwl %bx,%r12d
   19db6:	mov    %r12,%rbx
   19db9:	shr    $0x8,%ebx
   19dbc:	add    %r12d,%ebx
   19dbf:	shr    $0x8,%ebx
   19dc2:	test   %r14d,%r14d
   19dc5:	je     19f49 <png_do_compose+0x1419>
   19dcb:	mov    %r13,%rdx
   19dce:	jmpq   19f51 <png_do_compose+0x1421>
   19dd3:	movzwl 0x27e(%rdi),%r13d
   19ddb:	shr    $0x8,%r13d
   19ddf:	mov    %r13b,(%rbx)
   19de2:	movzbl 0x27e(%rdi),%r13d
   19dea:	mov    %r13b,0x1(%rbx)
   19dee:	movzwl 0x280(%rdi),%r13d
   19df6:	shr    $0x8,%r13d
   19dfa:	mov    %r13b,0x2(%rbx)
   19dfe:	movzbl 0x280(%rdi),%r13d
   19e06:	mov    %r13b,0x3(%rbx)
   19e0a:	movzwl 0x282(%rdi),%r13d
   19e12:	shr    $0x8,%r13d
   19e16:	mov    %r13b,0x4(%rbx)
   19e1a:	movzbl 0x282(%rdi),%r13d
   19e22:	mov    %r13b,0x5(%rbx)
   19e26:	jmpq   1980e <png_do_compose+0xcde>
   19e2b:	movzwl %si,%esi
   19e2e:	movzbl %sil,%r12d
   19e32:	shr    %cl,%r12d
   19e35:	movslq %r12d,%r12
   19e38:	mov    (%r9,%r12,8),%r12
   19e3c:	shr    $0x8,%esi
   19e3f:	movslq %esi,%rsi
   19e42:	movzwl (%r12,%rsi,2),%esi
   19e47:	mov    $0x1,%r12d
   19e4d:	movzwl %si,%r14d
   19e51:	shr    $0x8,%r14d
   19e55:	mov    %r14b,(%rbx)
   19e58:	mov    %sil,0x1(%rbx)
   19e5c:	movzwl 0x28a(%rdi),%esi
   19e63:	mov    %rdx,%r14
   19e66:	imul   %esi,%r14d
   19e6a:	movzbl 0x3(%rbx),%esi
   19e6e:	shr    %cl,%esi
   19e70:	movslq %esi,%rsi
   19e73:	mov    (%r10,%rsi,8),%r15
   19e77:	movzbl 0x2(%rbx),%esi
   19e7b:	movzwl (%r15,%rsi,2),%esi
   19e80:	imul   %r13d,%esi
   19e84:	add    %esi,%r14d
   19e87:	lea    0x8000(%r14),%esi
   19e8e:	shr    $0x10,%esi
   19e91:	lea    0x8000(%rsi,%r14,1),%esi
   19e99:	shr    $0x10,%esi
   19e9c:	test   %r12,%r12
   19e9f:	jne    19f97 <png_do_compose+0x1467>
   19ea5:	mov    %r8,%r12
   19ea8:	jmpq   19fba <png_do_compose+0x148a>
   19ead:	movzbl 0x284(%r10),%r11d
   19eb5:	shl    %cl,%r11d
   19eb8:	mov    %rcx,%r14
   19ebb:	mov    %rsi,%rcx
   19ebe:	sub    %r14d,%ecx
   19ec1:	mov    %rdx,%r15
   19ec4:	shr    %cl,%r15d
   19ec7:	and    %r15b,%r13b
   19eca:	or     %r13b,%r11b
   19ecd:	mov    %r11b,(%rdi)
   19ed0:	test   %r14d,%r14d
   19ed3:	je     1988e <png_do_compose+0xd5e>
   19ed9:	lea    -0x2(%r14),%ecx
   19edd:	jmpq   19895 <png_do_compose+0xd65>
   19ee2:	movzbl 0x284(%r10),%r11d
   19eea:	shl    %cl,%r11d
   19eed:	mov    %rcx,%r14
   19ef0:	mov    %rsi,%rcx
   19ef3:	sub    %r14d,%ecx
   19ef6:	mov    %rdx,%r15
   19ef9:	shr    %cl,%r15d
   19efc:	and    %r15b,%r13b
   19eff:	or     %r13b,%r11b
   19f02:	mov    %r11b,(%rdi)
   19f05:	test   %r14d,%r14d
   19f08:	je     19903 <png_do_compose+0xdd3>
   19f0e:	lea    -0x4(%r14),%ecx
   19f12:	jmpq   1990a <png_do_compose+0xdda>
   19f17:	movzbl 0x284(%r14),%edx
   19f1f:	jmpq   19a31 <png_do_compose+0xf01>
   19f24:	movzbl 0x27e(%r15),%ebx
   19f2c:	mov    %bl,(%rsi)
   19f2e:	movzbl 0x280(%r15),%ebx
   19f36:	mov    %bl,0x1(%rsi)
   19f39:	movzbl 0x282(%r15),%ebx
   19f41:	mov    %bl,0x2(%rsi)
   19f44:	jmpq   19b1b <png_do_compose+0xfeb>
   19f49:	movzbl %bl,%ebx
   19f4c:	movzbl (%r11,%rbx,1),%ebx
   19f51:	mov    %bl,(%rsi)
   19f53:	movzwl 0x28a(%r15),%ebx
   19f5b:	imul   %cx,%bx
   19f5f:	movzbl 0x1(%rsi),%r12d
   19f64:	movzbl (%r10,%r12,1),%r12d
   19f69:	imul   %r9w,%r12w
   19f6e:	lea    0x80(%rbx,%r12,1),%ebx
   19f76:	movzwl %bx,%r12d
   19f7a:	mov    %r12,%rbx
   19f7d:	shr    $0x8,%ebx
   19f80:	add    %r12d,%ebx
   19f83:	shr    $0x8,%ebx
   19f86:	test   %rdx,%rdx
   19f89:	jne    1a04b <png_do_compose+0x151b>
   19f8f:	mov    %r13,%r12
   19f92:	jmpq   1a059 <png_do_compose+0x1529>
   19f97:	movzwl %si,%r12d
   19f9b:	movzbl %r12b,%esi
   19f9f:	shr    %cl,%esi
   19fa1:	movslq %esi,%rsi
   19fa4:	mov    (%r9,%rsi,8),%r14
   19fa8:	shr    $0x8,%r12d
   19fac:	movslq %r12d,%rsi
   19faf:	movzwl (%r14,%rsi,2),%esi
   19fb4:	mov    $0x1,%r12d
   19fba:	movzwl %si,%r14d
   19fbe:	shr    $0x8,%r14d
   19fc2:	mov    %r14b,0x2(%rbx)
   19fc6:	mov    %sil,0x3(%rbx)
   19fca:	movzwl 0x28c(%rdi),%esi
   19fd1:	imul   %esi,%edx
   19fd4:	movzbl 0x5(%rbx),%esi
   19fd8:	shr    %cl,%esi
   19fda:	movslq %esi,%rsi
   19fdd:	mov    (%r10,%rsi,8),%rsi
   19fe1:	movzbl 0x4(%rbx),%r14d
   19fe6:	movzwl (%rsi,%r14,2),%esi
   19feb:	imul   %esi,%r13d
   19fef:	lea    (%rdx,%r13,1),%esi
   19ff3:	lea    0x8000(%rsi),%edx
   19ff9:	shr    $0x10,%edx
   19ffc:	lea    0x8000(%rdx,%rsi,1),%edx
   1a003:	shr    $0x10,%edx
   1a006:	test   %r12,%r12
   1a009:	je     1a026 <png_do_compose+0x14f6>
   1a00b:	movzwl %dx,%esi
   1a00e:	movzbl %sil,%edx
   1a012:	shr    %cl,%edx
   1a014:	movslq %edx,%rdx
   1a017:	mov    (%r9,%rdx,8),%r12
   1a01b:	shr    $0x8,%esi
   1a01e:	movslq %esi,%rdx
   1a021:	movzwl (%r12,%rdx,2),%edx
   1a026:	movzwl %dx,%esi
   1a029:	shr    $0x8,%esi
   1a02c:	mov    %sil,0x4(%rbx)
   1a030:	mov    %dl,0x5(%rbx)
   1a033:	mov    -0xa8(%rbp),%rsi
   1a03a:	mov    $0xffff,%edx
   1a03f:	mov    -0x98(%rbp),%r12
   1a046:	jmpq   1980e <png_do_compose+0xcde>
   1a04b:	movzbl %bl,%edx
   1a04e:	movzbl (%r11,%rdx,1),%ebx
   1a053:	mov    $0x1,%r12d
   1a059:	mov    %bl,0x1(%rsi)
   1a05c:	movzwl 0x28c(%r15),%edx
   1a064:	imul   %cx,%dx
   1a068:	movzbl 0x2(%rsi),%ecx
   1a06c:	movzbl (%r10,%rcx,1),%ecx
   1a071:	imul   %cx,%r9w
   1a076:	lea    0x80(%rdx,%r9,1),%ecx
   1a07e:	movzwl %cx,%edx
   1a081:	mov    %rdx,%rcx
   1a084:	shr    $0x8,%ecx
   1a087:	add    %edx,%ecx
   1a089:	shr    $0x8,%ecx
   1a08c:	test   %r12,%r12
   1a08f:	je     1a099 <png_do_compose+0x1569>
   1a091:	movzbl %cl,%ecx
   1a094:	movzbl (%r11,%rcx,1),%ecx
   1a099:	mov    %cl,0x2(%rsi)
   1a09c:	mov    $0xff,%ecx
   1a0a1:	mov    $0x1,%edx
   1a0a6:	jmpq   19b1b <png_do_compose+0xfeb>
   1a0ab:	nopl   0x0(%rax,%rax,1)

000000000001a0b0 <png_do_gamma>:
   1a0b0:	push   %rbp
   1a0b1:	mov    %rsp,%rbp
   1a0b4:	sub    $0x20,%rsp
   1a0b8:	mov    0x2a8(%rdx),%r9
   1a0bf:	mov    0x2b0(%rdx),%r8
   1a0c6:	mov    0x2a0(%rdx),%ecx
   1a0cc:	mov    (%rdi),%edx
   1a0ce:	movzbl 0x11(%rdi),%r10d
   1a0d3:	cmp    $0x8,%r10b
   1a0d7:	jbe    1a0e1 <png_do_gamma+0x31>
   1a0d9:	cmp    $0x10,%r10b
   1a0dd:	je     1a101 <png_do_gamma+0x51>
   1a0df:	leaveq 
   1a0e0:	retq   
   1a0e1:	test   %r9,%r9
   1a0e4:	je     1a0d9 <png_do_gamma+0x29>
   1a0e6:	xor    %eax,%eax
   1a0e8:	movzbl 0x10(%rdi),%r11d
   1a0ed:	cmp    $0x3,%r11b
   1a0f1:	jbe    1a108 <png_do_gamma+0x58>
   1a0f3:	cmp    $0x4,%r11b
   1a0f7:	je     1a115 <png_do_gamma+0x65>
   1a0f9:	cmp    $0x6,%r11b
   1a0fd:	je     1a11d <png_do_gamma+0x6d>
   1a0ff:	leaveq 
   1a100:	retq   
   1a101:	test   %r8,%r8
   1a104:	jne    1a0e6 <png_do_gamma+0x36>
   1a106:	leaveq 
   1a107:	retq   
   1a108:	test   %r11b,%r11b
   1a10b:	je     1a12c <png_do_gamma+0x7c>
   1a10d:	cmp    $0x2,%r11b
   1a111:	je     1a14b <png_do_gamma+0x9b>
   1a113:	leaveq 
   1a114:	retq   
   1a115:	cmp    $0x8,%r10b
   1a119:	je     1a19a <png_do_gamma+0xea>
   1a11b:	jmp    1a183 <png_do_gamma+0xd3>
   1a11d:	cmp    $0x8,%r10b
   1a121:	je     1a240 <png_do_gamma+0x190>
   1a127:	jmpq   1a211 <png_do_gamma+0x161>
   1a12c:	cmp    $0x2,%r10b
   1a130:	jne    1a30f <png_do_gamma+0x25f>
   1a136:	mov    %rdi,-0x20(%rbp)
   1a13a:	mov    %rsi,-0x18(%rbp)
   1a13e:	mov    %rcx,-0x10(%rbp)
   1a142:	mov    %r8,-0x8(%rbp)
   1a146:	jmpq   1a2f5 <png_do_gamma+0x245>
   1a14b:	cmp    $0x8,%r10b
   1a14f:	je     1a3d3 <png_do_gamma+0x323>
   1a155:	jmpq   1a3a4 <png_do_gamma+0x2f4>
   1a15a:	movzbl 0x1(%rsi),%edi
   1a15e:	shr    %cl,%edi
   1a160:	movslq %edi,%rdi
   1a163:	mov    (%r8,%rdi,8),%r9
   1a167:	movzbl (%rsi),%edi
   1a16a:	movzwl (%r9,%rdi,2),%r9d
   1a16f:	mov    %r9,%rdi
   1a172:	shr    $0x8,%edi
   1a175:	mov    %dil,(%rsi)
   1a178:	mov    %r9b,0x1(%rsi)
   1a17c:	add    $0x1,%eax
   1a17f:	add    $0x4,%rsi
   1a183:	cmp    %eax,%edx
   1a185:	ja     1a15a <png_do_gamma+0xaa>
   1a187:	leaveq 
   1a188:	retq   
   1a189:	movzbl (%rsi),%ecx
   1a18c:	movzbl (%r9,%rcx,1),%ecx
   1a191:	mov    %cl,(%rsi)
   1a193:	add    $0x1,%eax
   1a196:	add    $0x2,%rsi
   1a19a:	cmp    %eax,%edx
   1a19c:	ja     1a189 <png_do_gamma+0xd9>
   1a19e:	leaveq 
   1a19f:	retq   
   1a1a0:	movzbl 0x1(%rsi),%edi
   1a1a4:	shr    %cl,%edi
   1a1a6:	movslq %edi,%rdi
   1a1a9:	mov    (%r8,%rdi,8),%r9
   1a1ad:	movzbl (%rsi),%edi
   1a1b0:	movzwl (%r9,%rdi,2),%r9d
   1a1b5:	mov    %r9,%rdi
   1a1b8:	shr    $0x8,%edi
   1a1bb:	mov    %dil,(%rsi)
   1a1be:	mov    %r9b,0x1(%rsi)
   1a1c2:	movzbl 0x3(%rsi),%edi
   1a1c6:	shr    %cl,%edi
   1a1c8:	movslq %edi,%rdi
   1a1cb:	mov    (%r8,%rdi,8),%r9
   1a1cf:	movzbl 0x2(%rsi),%edi
   1a1d3:	movzwl (%r9,%rdi,2),%r9d
   1a1d8:	mov    %r9,%rdi
   1a1db:	shr    $0x8,%edi
   1a1de:	mov    %dil,0x2(%rsi)
   1a1e2:	mov    %r9b,0x3(%rsi)
   1a1e6:	movzbl 0x5(%rsi),%edi
   1a1ea:	shr    %cl,%edi
   1a1ec:	movslq %edi,%rdi
   1a1ef:	mov    (%r8,%rdi,8),%r9
   1a1f3:	movzbl 0x4(%rsi),%edi
   1a1f7:	movzwl (%r9,%rdi,2),%r9d
   1a1fc:	mov    %r9,%rdi
   1a1ff:	shr    $0x8,%edi
   1a202:	mov    %dil,0x4(%rsi)
   1a206:	mov    %r9b,0x5(%rsi)
   1a20a:	add    $0x1,%eax
   1a20d:	add    $0x8,%rsi
   1a211:	cmp    %eax,%edx
   1a213:	ja     1a1a0 <png_do_gamma+0xf0>
   1a215:	leaveq 
   1a216:	retq   
   1a217:	movzbl (%rsi),%ecx
   1a21a:	movzbl (%r9,%rcx,1),%ecx
   1a21f:	mov    %cl,(%rsi)
   1a221:	movzbl 0x1(%rsi),%ecx
   1a225:	movzbl (%r9,%rcx,1),%ecx
   1a22a:	mov    %cl,0x1(%rsi)
   1a22d:	movzbl 0x2(%rsi),%ecx
   1a231:	movzbl (%r9,%rcx,1),%ecx
   1a236:	mov    %cl,0x2(%rsi)
   1a239:	add    $0x1,%eax
   1a23c:	add    $0x4,%rsi
   1a240:	cmp    %eax,%edx
   1a242:	ja     1a217 <png_do_gamma+0x167>
   1a244:	leaveq 
   1a245:	retq   
   1a246:	movzbl (%rsi),%edi
   1a249:	mov    %rdi,%rcx
   1a24c:	and    $0xc0,%ecx
   1a252:	mov    %rcx,%r8
   1a255:	shr    $0x2,%r8d
   1a259:	add    %ecx,%r8d
   1a25c:	shr    $0x4,%ecx
   1a25f:	add    %ecx,%r8d
   1a262:	mov    %rdi,%rcx
   1a265:	shr    $0x6,%ecx
   1a268:	add    %r8d,%ecx
   1a26b:	movslq %ecx,%rcx
   1a26e:	movzbl (%r9,%rcx,1),%r8d
   1a273:	and    $0xc0,%r8d
   1a27a:	mov    %rdi,%rcx
   1a27d:	and    $0x30,%ecx
   1a280:	lea    (%rcx,%rcx,4),%r10d
   1a284:	mov    %rcx,%r11
   1a287:	shr    $0x2,%r11d
   1a28b:	add    %r11d,%r10d
   1a28e:	shr    $0x4,%ecx
   1a291:	add    %r10d,%ecx
   1a294:	movslq %ecx,%rcx
   1a297:	movzbl (%r9,%rcx,1),%ecx
   1a29c:	and    $0xc0,%ecx
   1a2a2:	shr    $0x2,%ecx
   1a2a5:	add    %ecx,%r8d
   1a2a8:	mov    %rdi,%rcx
   1a2ab:	and    $0xc,%ecx
   1a2ae:	lea    (%rcx,%rcx,4),%r10d
   1a2b2:	lea    (%rcx,%r10,4),%r10d
   1a2b6:	shr    $0x2,%ecx
   1a2b9:	add    %r10d,%ecx
   1a2bc:	movslq %ecx,%rcx
   1a2bf:	movzbl (%r9,%rcx,1),%ecx
   1a2c4:	and    $0xc0,%ecx
   1a2ca:	shr    $0x4,%ecx
   1a2cd:	add    %ecx,%r8d
   1a2d0:	and    $0x3,%edi
   1a2d3:	mov    %rdi,%rcx
   1a2d6:	shl    $0x4,%ecx
   1a2d9:	add    %edi,%ecx
   1a2db:	lea    (%rcx,%rcx,4),%ecx
   1a2de:	movslq %ecx,%rcx
   1a2e1:	movzbl (%r9,%rcx,1),%ecx
   1a2e6:	shr    $0x6,%ecx
   1a2e9:	add    %r8d,%ecx
   1a2ec:	mov    %cl,(%rsi)
   1a2ee:	add    $0x1,%rsi
   1a2f2:	add    $0x4,%eax
   1a2f5:	cmp    %eax,%edx
   1a2f7:	ja     1a246 <png_do_gamma+0x196>
   1a2fd:	mov    -0x8(%rbp),%r8
   1a301:	mov    -0x10(%rbp),%rcx
   1a305:	mov    -0x18(%rbp),%rsi
   1a309:	xor    %eax,%eax
   1a30b:	mov    -0x20(%rbp),%rdi
   1a30f:	movzbl 0x11(%rdi),%edi
   1a313:	cmp    $0x4,%dil
   1a317:	je     1a41d <png_do_gamma+0x36d>
   1a31d:	cmp    $0x8,%dil
   1a321:	je     1a434 <png_do_gamma+0x384>
   1a327:	cmp    $0x10,%dil
   1a32b:	je     1a463 <png_do_gamma+0x3b3>
   1a331:	leaveq 
   1a332:	retq   
   1a333:	movzbl 0x1(%rsi),%edi
   1a337:	shr    %cl,%edi
   1a339:	movslq %edi,%rdi
   1a33c:	mov    (%r8,%rdi,8),%r9
   1a340:	movzbl (%rsi),%edi
   1a343:	movzwl (%r9,%rdi,2),%r9d
   1a348:	mov    %r9,%rdi
   1a34b:	shr    $0x8,%edi
   1a34e:	mov    %dil,(%rsi)
   1a351:	mov    %r9b,0x1(%rsi)
   1a355:	movzbl 0x3(%rsi),%edi
   1a359:	shr    %cl,%edi
   1a35b:	movslq %edi,%rdi
   1a35e:	mov    (%r8,%rdi,8),%r9
   1a362:	movzbl 0x2(%rsi),%edi
   1a366:	movzwl (%r9,%rdi,2),%r9d
   1a36b:	mov    %r9,%rdi
   1a36e:	shr    $0x8,%edi
   1a371:	mov    %dil,0x2(%rsi)
   1a375:	mov    %r9b,0x3(%rsi)
   1a379:	movzbl 0x5(%rsi),%edi
   1a37d:	shr    %cl,%edi
   1a37f:	movslq %edi,%rdi
   1a382:	mov    (%r8,%rdi,8),%r9
   1a386:	movzbl 0x4(%rsi),%edi
   1a38a:	movzwl (%r9,%rdi,2),%r9d
   1a38f:	mov    %r9,%rdi
   1a392:	shr    $0x8,%edi
   1a395:	mov    %dil,0x4(%rsi)
   1a399:	mov    %r9b,0x5(%rsi)
   1a39d:	add    $0x1,%eax
   1a3a0:	add    $0x6,%rsi
   1a3a4:	cmp    %eax,%edx
   1a3a6:	ja     1a333 <png_do_gamma+0x283>
   1a3a8:	leaveq 
   1a3a9:	retq   
   1a3aa:	movzbl (%rsi),%ecx
   1a3ad:	movzbl (%r9,%rcx,1),%ecx
   1a3b2:	mov    %cl,(%rsi)
   1a3b4:	movzbl 0x1(%rsi),%ecx
   1a3b8:	movzbl (%r9,%rcx,1),%ecx
   1a3bd:	mov    %cl,0x1(%rsi)
   1a3c0:	movzbl 0x2(%rsi),%ecx
   1a3c4:	movzbl (%r9,%rcx,1),%ecx
   1a3c9:	mov    %cl,0x2(%rsi)
   1a3cc:	add    $0x1,%eax
   1a3cf:	add    $0x3,%rsi
   1a3d3:	cmp    %edx,%eax
   1a3d5:	jb     1a3aa <png_do_gamma+0x2fa>
   1a3d7:	leaveq 
   1a3d8:	retq   
   1a3d9:	movzbl (%rsi),%ecx
   1a3dc:	mov    %rcx,%r8
   1a3df:	and    $0xf,%r8d
   1a3e3:	mov    %r8,%rdi
   1a3e6:	shl    $0x4,%edi
   1a3e9:	add    %r8d,%edi
   1a3ec:	movslq %edi,%rdi
   1a3ef:	movzbl (%r9,%rdi,1),%edi
   1a3f4:	shr    $0x4,%edi
   1a3f7:	mov    %rcx,%r8
   1a3fa:	shr    $0x4,%r8d
   1a3fe:	and    $0xf0,%ecx
   1a404:	add    %r8d,%ecx
   1a407:	movslq %ecx,%rcx
   1a40a:	movzbl (%r9,%rcx,1),%ecx
   1a40f:	and    $0xf0,%cl
   1a412:	add    %edi,%ecx
   1a414:	mov    %cl,(%rsi)
   1a416:	add    $0x2,%eax
   1a419:	add    $0x1,%rsi
   1a41d:	cmp    %eax,%edx
   1a41f:	ja     1a3d9 <png_do_gamma+0x329>
   1a421:	leaveq 
   1a422:	retq   
   1a423:	movzbl (%rsi),%ecx
   1a426:	movzbl (%r9,%rcx,1),%ecx
   1a42b:	mov    %cl,(%rsi)
   1a42d:	add    $0x1,%eax
   1a430:	add    $0x1,%rsi
   1a434:	cmp    %eax,%edx
   1a436:	ja     1a423 <png_do_gamma+0x373>
   1a438:	leaveq 
   1a439:	retq   
   1a43a:	movzbl 0x1(%rsi),%edi
   1a43e:	shr    %cl,%edi
   1a440:	movslq %edi,%rdi
   1a443:	mov    (%r8,%rdi,8),%r9
   1a447:	movzbl (%rsi),%edi
   1a44a:	movzwl (%r9,%rdi,2),%r9d
   1a44f:	mov    %r9,%rdi
   1a452:	shr    $0x8,%edi
   1a455:	mov    %dil,(%rsi)
   1a458:	mov    %r9b,0x1(%rsi)
   1a45c:	add    $0x1,%eax
   1a45f:	add    $0x2,%rsi
   1a463:	cmp    %eax,%edx
   1a465:	ja     1a43a <png_do_gamma+0x38a>
   1a467:	leaveq 
   1a468:	retq   
   1a469:	nopl   0x0(%rax)

000000000001a470 <png_do_encode_alpha>:
   1a470:	push   %rbp
   1a471:	mov    %rsp,%rbp
   1a474:	mov    (%rdi),%eax
   1a476:	movzbl 0x10(%rdi),%r10d
   1a47b:	mov    %r10,%rcx
   1a47e:	and    $0x4,%ecx
   1a481:	test   %ecx,%ecx
   1a483:	jg     1a496 <png_do_encode_alpha+0x26>
   1a485:	mov    %rdx,%rdi
   1a488:	lea    0x14162(%rip),%rsi        # 2e5f1 <chunks_to_process.34+0x7ec>
   1a48f:	callq  5390 <png_warning@plt>
   1a494:	leaveq 
   1a495:	retq   
   1a496:	mov    $0x4,%r8d
   1a49c:	mov    $0x2,%r11d
   1a4a2:	movzbl 0x11(%rdi),%ecx
   1a4a6:	cmp    $0x8,%cl
   1a4a9:	je     1a4dd <png_do_encode_alpha+0x6d>
   1a4ab:	cmp    $0x10,%cl
   1a4ae:	jne    1a485 <png_do_encode_alpha+0x15>
   1a4b0:	mov    0x2a0(%rdx),%ecx
   1a4b6:	mov    0x2c8(%rdx),%r9
   1a4bd:	test   %r9,%r9
   1a4c0:	je     1a485 <png_do_encode_alpha+0x15>
   1a4c2:	and    $0x2,%r10d
   1a4c6:	test   %r10d,%r10d
   1a4c9:	jle    1a4d7 <png_do_encode_alpha+0x67>
   1a4cb:	mov    $0x6,%r11d
   1a4d1:	mov    $0x8,%r8d
   1a4d7:	lea    (%rsi,%r11,1),%rdx
   1a4db:	jmp    1a520 <png_do_encode_alpha+0xb0>
   1a4dd:	mov    0x2b8(%rdx),%rdi
   1a4e4:	test   %rdi,%rdi
   1a4e7:	je     1a485 <png_do_encode_alpha+0x15>
   1a4e9:	and    $0x2,%r10d
   1a4ed:	test   %r10d,%r10d
   1a4f0:	jg     1a526 <png_do_encode_alpha+0xb6>
   1a4f2:	mov    $0x1,%ecx
   1a4f7:	jmp    1a52e <png_do_encode_alpha+0xbe>
   1a4f9:	movzbl 0x1(%rdx),%esi
   1a4fd:	shr    %cl,%esi
   1a4ff:	movslq %esi,%rsi
   1a502:	mov    (%r9,%rsi,8),%rsi
   1a506:	movzbl (%rdx),%edi
   1a509:	movzwl (%rsi,%rdi,2),%edi
   1a50d:	mov    %rdi,%rsi
   1a510:	shr    $0x8,%esi
   1a513:	mov    %sil,(%rdx)
   1a516:	mov    %dil,0x1(%rdx)
   1a51a:	add    $0xffffffff,%eax
   1a51d:	add    %r8,%rdx
   1a520:	test   %eax,%eax
   1a522:	jne    1a4f9 <png_do_encode_alpha+0x89>
   1a524:	leaveq 
   1a525:	retq   
   1a526:	mov    %r8,%r11
   1a529:	mov    $0x3,%ecx
   1a52e:	add    %rsi,%rcx
   1a531:	jmp    1a542 <png_do_encode_alpha+0xd2>
   1a533:	movzbl (%rcx),%edx
   1a536:	movzbl (%rdi,%rdx,1),%edx
   1a53a:	mov    %dl,(%rcx)
   1a53c:	add    $0xffffffff,%eax
   1a53f:	add    %r11,%rcx
   1a542:	test   %eax,%eax
   1a544:	jne    1a533 <png_do_encode_alpha+0xc3>
   1a546:	leaveq 
   1a547:	retq   
   1a548:	nopl   0x0(%rax,%rax,1)

000000000001a550 <png_do_expand_palette>:
   1a550:	push   %rbp
   1a551:	mov    %rsp,%rbp
   1a554:	sub    $0x30,%rsp
   1a558:	mov    (%rdi),%r9d
   1a55b:	movzbl 0x10(%rdi),%eax
   1a55f:	cmp    $0x3,%al
   1a561:	je     1a565 <png_do_expand_palette+0x15>
   1a563:	leaveq 
   1a564:	retq   
   1a565:	xor    %eax,%eax
   1a567:	movzbl 0x11(%rdi),%r10d
   1a56c:	cmp    $0x7,%r10b
   1a570:	ja     1a5fa <png_do_expand_palette+0xaa>
   1a576:	cmp    $0x1,%r10b
   1a57a:	jbe    1a60b <png_do_expand_palette+0xbb>
   1a580:	cmp    $0x2,%r10b
   1a584:	je     1a657 <png_do_expand_palette+0x107>
   1a58a:	cmp    $0x4,%r10b
   1a58e:	jne    1a5ee <png_do_expand_palette+0x9e>
   1a590:	mov    %r9,%r11
   1a593:	and    $0x1,%r11d
   1a597:	neg    %r11d
   1a59a:	and    $0x4,%r11d
   1a59e:	lea    -0x1(%r9),%r10d
   1a5a2:	shr    %r10d
   1a5a5:	mov    %r10d,%r10d
   1a5a8:	add    %rsi,%r10
   1a5ab:	mov    %rcx,-0x18(%rbp)
   1a5af:	lea    -0x1(%rsi,%r9,1),%rcx
   1a5b4:	mov    %r8,-0x28(%rbp)
   1a5b8:	mov    %rsi,-0x20(%rbp)
   1a5bc:	mov    %rcx,%r8
   1a5bf:	mov    %r11,%rcx
   1a5c2:	mov    %rax,%r11
   1a5c5:	jmpq   1a6a7 <png_do_expand_palette+0x157>
   1a5ca:	add    $0xffffffffffffffff,%r10
   1a5ce:	mov    %rax,%rcx
   1a5d1:	add    $0xffffffffffffffff,%r11
   1a5d5:	add    $0x1,%r8d
   1a5d9:	cmp    %r8d,%r9d
   1a5dc:	ja     1a6bd <png_do_expand_palette+0x16d>
   1a5e2:	mov    -0x20(%rbp),%rsi
   1a5e6:	mov    -0x28(%rbp),%r8
   1a5ea:	mov    -0x10(%rbp),%rcx
   1a5ee:	movb   $0x8,0x11(%rdi)
   1a5f2:	movb   $0x8,0x13(%rdi)
   1a5f6:	mov    %r9,0x8(%rdi)
   1a5fa:	movzbl 0x11(%rdi),%r10d
   1a5ff:	cmp    $0x8,%r10b
   1a603:	je     1a6db <png_do_expand_palette+0x18b>
   1a609:	leaveq 
   1a60a:	retq   
   1a60b:	cmp    $0x1,%r10b
   1a60f:	jne    1a5ee <png_do_expand_palette+0x9e>
   1a611:	mov    $0xfffffffffffffff8,%r10
   1a618:	sub    %r9d,%r10d
   1a61b:	and    $0x7,%r10d
   1a61f:	mov    $0x1,%r11d
   1a625:	mov    %rcx,-0x8(%rbp)
   1a629:	lea    -0x1(%rsi,%r9,1),%rcx
   1a62e:	mov    %rdx,-0x10(%rbp)
   1a632:	lea    -0x1(%r9),%edx
   1a636:	shr    $0x3,%edx
   1a639:	mov    %edx,%edx
   1a63b:	add    %rsi,%rdx
   1a63e:	mov    %r8,-0x28(%rbp)
   1a642:	mov    %rsi,-0x18(%rbp)
   1a646:	mov    %r10,%rsi
   1a649:	mov    %rcx,%r10
   1a64c:	mov    %rsi,%rcx
   1a64f:	mov    %rax,%r8
   1a652:	jmpq   1a705 <png_do_expand_palette+0x1b5>
   1a657:	lea    -0x1(%r9),%r10d
   1a65b:	shr    $0x2,%r10d
   1a65f:	mov    %r10d,%r10d
   1a662:	add    %rsi,%r10
   1a665:	mov    $0xfffffffffffffffc,%r11
   1a66c:	sub    %r9d,%r11d
   1a66f:	and    $0x3,%r11d
   1a673:	add    %r11d,%r11d
   1a676:	mov    %rcx,-0x10(%rbp)
   1a67a:	lea    -0x1(%rsi,%r9,1),%rcx
   1a67f:	mov    %r8,-0x28(%rbp)
   1a683:	mov    %rsi,-0x20(%rbp)
   1a687:	mov    %r11,%rsi
   1a68a:	mov    %rcx,%r11
   1a68d:	mov    %rsi,%rcx
   1a690:	mov    %rax,%r8
   1a693:	jmpq   1a5d9 <png_do_expand_palette+0x89>
   1a698:	add    $0xffffffffffffffff,%r10
   1a69c:	mov    %rax,%rcx
   1a69f:	add    $0xffffffffffffffff,%r8
   1a6a3:	add    $0x1,%r11d
   1a6a7:	cmp    %r11d,%r9d
   1a6aa:	ja     1a723 <png_do_expand_palette+0x1d3>
   1a6ac:	mov    -0x20(%rbp),%rsi
   1a6b0:	mov    -0x28(%rbp),%r8
   1a6b4:	mov    -0x18(%rbp),%rcx
   1a6b8:	jmpq   1a5ee <png_do_expand_palette+0x9e>
   1a6bd:	movzbl (%r10),%esi
   1a6c1:	shr    %cl,%esi
   1a6c3:	and    $0x3,%sil
   1a6c7:	mov    %sil,(%r11)
   1a6ca:	cmp    $0x6,%ecx
   1a6cd:	je     1a5ca <png_do_expand_palette+0x7a>
   1a6d3:	add    $0x2,%ecx
   1a6d6:	jmpq   1a5d1 <png_do_expand_palette+0x81>
   1a6db:	test   %r8d,%r8d
   1a6de:	jg     1a741 <png_do_expand_palette+0x1f1>
   1a6e0:	lea    -0x1(%rsi,%r9,1),%rcx
   1a6e5:	lea    (%r9,%r9,2),%r10d
   1a6e9:	mov    %r10d,%r8d
   1a6ec:	lea    -0x1(%rsi,%r8,1),%rsi
   1a6f1:	jmpq   1a79d <png_do_expand_palette+0x24d>
   1a6f6:	add    $0xffffffffffffffff,%rdx
   1a6fa:	mov    %rax,%rcx
   1a6fd:	add    $0xffffffffffffffff,%r10
   1a701:	add    $0x1,%r8d
   1a705:	cmp    %r8d,%r9d
   1a708:	ja     1a7bb <png_do_expand_palette+0x26b>
   1a70e:	mov    -0x18(%rbp),%rsi
   1a712:	mov    -0x28(%rbp),%r8
   1a716:	mov    -0x10(%rbp),%rdx
   1a71a:	mov    -0x8(%rbp),%rcx
   1a71e:	jmpq   1a5ee <png_do_expand_palette+0x9e>
   1a723:	movzbl (%r10),%esi
   1a727:	shr    %cl,%esi
   1a729:	and    $0xf,%sil
   1a72d:	mov    %sil,(%r8)
   1a730:	cmp    $0x4,%ecx
   1a733:	je     1a698 <png_do_expand_palette+0x148>
   1a739:	add    $0x4,%ecx
   1a73c:	jmpq   1a69f <png_do_expand_palette+0x14f>
   1a741:	lea    -0x1(%rsi,%r9,1),%r10
   1a746:	mov    $0xff,%r11d
   1a74c:	lea    -0x1(%rsi,%r9,4),%rsi
   1a751:	mov    %r14,-0x8(%rbp)
   1a755:	mov    %r15,-0x28(%rbp)
   1a759:	jmpq   1a812 <png_do_expand_palette+0x2c2>
   1a75e:	movzbl (%rcx),%r8d
   1a762:	lea    (%r8,%r8,2),%r8
   1a766:	movzbl 0x2(%rdx,%r8,1),%r8d
   1a76c:	mov    %r8b,(%rsi)
   1a76f:	movzbl (%rcx),%r8d
   1a773:	lea    (%r8,%r8,2),%r8
   1a777:	movzbl 0x1(%rdx,%r8,1),%r8d
   1a77d:	mov    %r8b,-0x1(%rsi)
   1a781:	movzbl (%rcx),%r8d
   1a785:	lea    (%r8,%r8,2),%r8
   1a789:	movzbl (%rdx,%r8,1),%r8d
   1a78e:	mov    %r8b,-0x2(%rsi)
   1a792:	add    $0x1,%eax
   1a795:	add    $0xffffffffffffffff,%rcx
   1a799:	add    $0xfffffffffffffffd,%rsi
   1a79d:	cmp    %eax,%r9d
   1a7a0:	ja     1a75e <png_do_expand_palette+0x20e>
   1a7a2:	movb   $0x8,0x11(%rdi)
   1a7a6:	movb   $0x18,0x13(%rdi)
   1a7aa:	mov    %r10d,%eax
   1a7ad:	mov    %rax,0x8(%rdi)
   1a7b1:	movb   $0x2,0x10(%rdi)
   1a7b5:	movb   $0x3,0x12(%rdi)
   1a7b9:	leaveq 
   1a7ba:	retq   
   1a7bb:	movzbl (%rdx),%esi
   1a7be:	shr    %cl,%esi
   1a7c0:	and    $0x1,%esi
   1a7c3:	test   %esi,%esi
   1a7c5:	jg     1a83c <png_do_expand_palette+0x2ec>
   1a7c7:	mov    %rax,%rsi
   1a7ca:	jmp    1a83f <png_do_expand_palette+0x2ef>
   1a7cc:	lea    -0x1(%rsi),%r14
   1a7d0:	mov    %r11,%r15
   1a7d3:	mov    %r15b,(%rsi)
   1a7d6:	movzbl (%r10),%esi
   1a7da:	lea    (%rsi,%rsi,2),%rsi
   1a7de:	movzbl 0x2(%rdx,%rsi,1),%esi
   1a7e3:	mov    %sil,(%r14)
   1a7e6:	movzbl (%r10),%esi
   1a7ea:	lea    (%rsi,%rsi,2),%rsi
   1a7ee:	movzbl 0x1(%rdx,%rsi,1),%esi
   1a7f3:	mov    %sil,-0x1(%r14)
   1a7f7:	movzbl (%r10),%esi
   1a7fb:	lea    (%rsi,%rsi,2),%rsi
   1a7ff:	movzbl (%rdx,%rsi,1),%esi
   1a803:	mov    %sil,-0x2(%r14)
   1a807:	add    $0x1,%eax
   1a80a:	add    $0xffffffffffffffff,%r10
   1a80e:	lea    -0x3(%r14),%rsi
   1a812:	cmp    %r9d,%eax
   1a815:	jb     1a853 <png_do_expand_palette+0x303>
   1a817:	movb   $0x8,0x11(%rdi)
   1a81b:	movb   $0x20,0x13(%rdi)
   1a81f:	shl    $0x2,%r9d
   1a823:	mov    %r9d,%eax
   1a826:	mov    %rax,0x8(%rdi)
   1a82a:	movb   $0x6,0x10(%rdi)
   1a82e:	movb   $0x4,0x12(%rdi)
   1a832:	mov    -0x28(%rbp),%r15
   1a836:	mov    -0x8(%rbp),%r14
   1a83a:	leaveq 
   1a83b:	retq   
   1a83c:	mov    %r11,%rsi
   1a83f:	mov    %sil,(%r10)
   1a842:	cmp    $0x7,%ecx
   1a845:	je     1a6f6 <png_do_expand_palette+0x1a6>
   1a84b:	add    $0x1,%ecx
   1a84e:	jmpq   1a6fd <png_do_expand_palette+0x1ad>
   1a853:	movzbl (%r10),%r14d
   1a857:	cmp    %r8d,%r14d
   1a85a:	jge    1a7cc <png_do_expand_palette+0x27c>
   1a860:	movzbl (%r14,%rcx,1),%r15d
   1a865:	lea    -0x1(%rsi),%r14
   1a869:	jmpq   1a7d3 <png_do_expand_palette+0x283>
   1a86e:	xchg   %ax,%ax

000000000001a870 <png_do_expand>:
   1a870:	push   %rbp
   1a871:	mov    %rsp,%rbp
   1a874:	sub    $0x40,%rsp
   1a878:	mov    (%rdi),%r8d
   1a87b:	mov    $0xff,%r9d
   1a881:	xor    %eax,%eax
   1a883:	movzbl 0x10(%rdi),%ecx
   1a887:	test   %cl,%cl
   1a889:	je     1a892 <png_do_expand+0x22>
   1a88b:	cmp    $0x2,%cl
   1a88e:	je     1a89c <png_do_expand+0x2c>
   1a890:	leaveq 
   1a891:	retq   
   1a892:	test   %rdx,%rdx
   1a895:	jne    1a8a3 <png_do_expand+0x33>
   1a897:	mov    %rax,%r11
   1a89a:	jmp    1a8a8 <png_do_expand+0x38>
   1a89c:	test   %rdx,%rdx
   1a89f:	jne    1a8bc <png_do_expand+0x4c>
   1a8a1:	leaveq 
   1a8a2:	retq   
   1a8a3:	movzwl 0x8(%rdx),%r11d
   1a8a8:	movzbl 0x11(%rdi),%ecx
   1a8ac:	cmp    $0x7,%cl
   1a8af:	jbe    1a913 <png_do_expand+0xa3>
   1a8b1:	test   %rdx,%rdx
   1a8b4:	jne    1a96f <png_do_expand+0xff>
   1a8ba:	leaveq 
   1a8bb:	retq   
   1a8bc:	movzbl 0x11(%rdi),%ecx
   1a8c0:	cmp    $0x8,%cl
   1a8c3:	je     1a9a3 <png_do_expand+0x133>
   1a8c9:	cmp    $0x10,%cl
   1a8cc:	jne    1aa11 <png_do_expand+0x1a1>
   1a8d2:	movzwl 0x2(%rdx),%r10d
   1a8d7:	mov    %r10,%r9
   1a8da:	shr    $0x8,%r9d
   1a8de:	movzwl 0x4(%rdx),%ecx
   1a8e2:	mov    %rcx,%r11
   1a8e5:	shr    $0x8,%r11d
   1a8e9:	movzwl 0x6(%rdx),%edx
   1a8ed:	mov    %r15,-0x38(%rbp)
   1a8f1:	mov    %rdx,%r15
   1a8f4:	shr    $0x8,%r15d
   1a8f8:	mov    %r14,-0x30(%rbp)
   1a8fc:	mov    0x8(%rdi),%r14
   1a900:	lea    -0x1(%rsi,%r14,1),%r14
   1a905:	lea    -0x1(%rsi,%r8,8),%rsi
   1a90a:	mov    %r13,-0x28(%rbp)
   1a90e:	jmpq   1aa89 <png_do_expand+0x219>
   1a913:	cmp    $0x1,%cl
   1a916:	jbe    1aaa3 <png_do_expand+0x233>
   1a91c:	cmp    $0x2,%cl
   1a91f:	je     1aabd <png_do_expand+0x24d>
   1a925:	cmp    $0x4,%cl
   1a928:	jne    1aaac <png_do_expand+0x23c>
   1a92e:	mov    $0xfffffffffffffffe,%rcx
   1a935:	sub    %r8d,%ecx
   1a938:	and    $0x1,%ecx
   1a93b:	neg    %ecx
   1a93d:	and    $0x4,%ecx
   1a940:	lea    -0x1(%r8),%r9d
   1a944:	shr    %r9d
   1a947:	mov    %r9d,%r9d
   1a94a:	add    %rsi,%r9
   1a94d:	lea    -0x1(%rsi,%r8,1),%r10
   1a952:	mov    %rsi,-0x10(%rbp)
   1a956:	mov    $0x4,%esi
   1a95b:	mov    %r15,-0x20(%rbp)
   1a95f:	mov    %r11,-0x18(%rbp)
   1a963:	mov    %rdx,-0x38(%rbp)
   1a967:	mov    %rax,%r11
   1a96a:	jmpq   1ab01 <png_do_expand+0x291>
   1a96f:	movzbl 0x11(%rdi),%ecx
   1a973:	cmp    $0x8,%cl
   1a976:	je     1ab32 <png_do_expand+0x2c2>
   1a97c:	cmp    $0x10,%cl
   1a97f:	jne    1ab71 <png_do_expand+0x301>
   1a985:	mov    %r11,%r9
   1a988:	shr    $0x8,%r9d
   1a98c:	movzbl %r11b,%r10d
   1a990:	mov    0x8(%rdi),%rdx
   1a994:	lea    -0x1(%rsi,%rdx,1),%rcx
   1a999:	lea    -0x1(%rsi,%rdx,2),%rdx
   1a99e:	jmpq   1abc2 <png_do_expand+0x352>
   1a9a3:	movzbl 0x2(%rdx),%r11d
   1a9a8:	movzbl 0x4(%rdx),%r10d
   1a9ad:	movzbl 0x6(%rdx),%edx
   1a9b1:	mov    0x8(%rdi),%rcx
   1a9b5:	lea    -0x1(%rsi,%rcx,1),%rcx
   1a9ba:	lea    -0x1(%rsi,%r8,4),%rsi
   1a9bf:	mov    %r15,-0x38(%rbp)
   1a9c3:	mov    %r14,-0x30(%rbp)
   1a9c7:	mov    %r13,-0x28(%rbp)
   1a9cb:	mov    %rax,%r13
   1a9ce:	jmp    1a9fc <png_do_expand+0x18c>
   1a9d0:	lea    -0x1(%rsi),%r14
   1a9d4:	mov    %r9,%r15
   1a9d7:	mov    %r15b,(%rsi)
   1a9da:	movzbl (%rcx),%esi
   1a9dd:	mov    %sil,(%r14)
   1a9e0:	movzbl -0x1(%rcx),%esi
   1a9e4:	mov    %sil,-0x1(%r14)
   1a9e8:	movzbl -0x2(%rcx),%esi
   1a9ec:	mov    %sil,-0x2(%r14)
   1a9f0:	add    $0xfffffffffffffffd,%rcx
   1a9f4:	lea    -0x3(%r14),%rsi
   1a9f8:	add    $0x1,%r13d
   1a9fc:	cmp    %r13d,%r8d
   1a9ff:	ja     1abe5 <png_do_expand+0x375>
   1aa05:	mov    -0x28(%rbp),%r13
   1aa09:	mov    -0x30(%rbp),%r14
   1aa0d:	mov    -0x38(%rbp),%r15
   1aa11:	movb   $0x6,0x10(%rdi)
   1aa15:	movb   $0x4,0x12(%rdi)
   1aa19:	movzbl 0x11(%rdi),%eax
   1aa1d:	shl    $0x2,%eax
   1aa20:	mov    %al,0x13(%rdi)
   1aa23:	cmp    $0x7,%al
   1aa25:	ja     1ac1a <png_do_expand+0x3aa>
   1aa2b:	movzbl %al,%eax
   1aa2e:	imul   %r8,%rax
   1aa32:	add    $0x7,%rax
   1aa36:	shr    $0x3,%rax
   1aa3a:	jmpq   1ac25 <png_do_expand+0x3b5>
   1aa3f:	movb   $0xff,(%rsi)
   1aa42:	movb   $0xff,-0x1(%rsi)
   1aa46:	add    $0xfffffffffffffffe,%rsi
   1aa4a:	movzbl (%r14),%r13d
   1aa4e:	mov    %r13b,(%rsi)
   1aa51:	movzbl -0x1(%r14),%r13d
   1aa56:	mov    %r13b,-0x1(%rsi)
   1aa5a:	movzbl -0x2(%r14),%r13d
   1aa5f:	mov    %r13b,-0x2(%rsi)
   1aa63:	movzbl -0x3(%r14),%r13d
   1aa68:	mov    %r13b,-0x3(%rsi)
   1aa6c:	movzbl -0x4(%r14),%r13d
   1aa71:	mov    %r13b,-0x4(%rsi)
   1aa75:	movzbl -0x5(%r14),%r13d
   1aa7a:	mov    %r13b,-0x5(%rsi)
   1aa7e:	add    $0xfffffffffffffffa,%r14
   1aa82:	add    $0xfffffffffffffffa,%rsi
   1aa86:	add    $0x1,%eax
   1aa89:	cmp    %eax,%r8d
   1aa8c:	ja     1ac2b <png_do_expand+0x3bb>
   1aa92:	mov    -0x28(%rbp),%r13
   1aa96:	mov    -0x30(%rbp),%r14
   1aa9a:	mov    -0x38(%rbp),%r15
   1aa9e:	jmpq   1aa11 <png_do_expand+0x1a1>
   1aaa3:	cmp    $0x1,%cl
   1aaa6:	je     1ac8e <png_do_expand+0x41e>
   1aaac:	movb   $0x8,0x11(%rdi)
   1aab0:	movb   $0x8,0x13(%rdi)
   1aab4:	mov    %r8,0x8(%rdi)
   1aab8:	jmpq   1a8b1 <png_do_expand+0x41>
   1aabd:	lea    -0x1(%r8),%ecx
   1aac1:	shr    $0x2,%ecx
   1aac4:	mov    %ecx,%ecx
   1aac6:	lea    (%rsi,%rcx,1),%r9
   1aaca:	mov    $0xfffffffffffffffc,%rcx
   1aad1:	sub    %r8d,%ecx
   1aad4:	and    $0x3,%ecx
   1aad7:	add    %ecx,%ecx
   1aad9:	lea    -0x1(%rsi,%r8,1),%r10
   1aade:	mov    %rsi,-0x10(%rbp)
   1aae2:	mov    %r11,-0x20(%rbp)
   1aae6:	mov    %rdx,-0x38(%rbp)
   1aaea:	mov    %rax,%rsi
   1aaed:	jmpq   1acd0 <png_do_expand+0x460>
   1aaf2:	add    $0xffffffffffffffff,%r9
   1aaf6:	mov    %rax,%rcx
   1aaf9:	add    $0xffffffffffffffff,%r10
   1aafd:	add    $0x1,%r11d
   1ab01:	cmp    %r8d,%r11d
   1ab04:	jb     1acff <png_do_expand+0x48f>
   1ab0a:	mov    -0x18(%rbp),%rcx
   1ab0e:	and    $0xf,%ecx
   1ab11:	mov    %rcx,%rdx
   1ab14:	shl    $0x4,%edx
   1ab17:	lea    (%rcx,%rdx,1),%r11d
   1ab1b:	mov    -0x38(%rbp),%rdx
   1ab1f:	mov    -0x10(%rbp),%rsi
   1ab23:	mov    $0xff,%r9d
   1ab29:	mov    -0x20(%rbp),%r15
   1ab2d:	jmpq   1aaac <png_do_expand+0x23c>
   1ab32:	movzbl %r11b,%r11d
   1ab36:	lea    -0x1(%rsi,%r8,1),%rcx
   1ab3b:	lea    -0x1(%rsi,%r8,2),%rdx
   1ab40:	mov    %r15,-0x38(%rbp)
   1ab44:	mov    %rax,%r10
   1ab47:	jmp    1ab64 <png_do_expand+0x2f4>
   1ab49:	lea    -0x1(%rdx),%rsi
   1ab4d:	mov    %rax,%r15
   1ab50:	mov    %r15b,(%rdx)
   1ab53:	movzbl (%rcx),%edx
   1ab56:	mov    %dl,(%rsi)
   1ab58:	add    $0xffffffffffffffff,%rcx
   1ab5c:	lea    -0x1(%rsi),%rdx
   1ab60:	add    $0x1,%r10d
   1ab64:	cmp    %r10d,%r8d
   1ab67:	ja     1ad26 <png_do_expand+0x4b6>
   1ab6d:	mov    -0x38(%rbp),%r15
   1ab71:	movb   $0x4,0x10(%rdi)
   1ab75:	movb   $0x2,0x12(%rdi)
   1ab79:	movzbl 0x11(%rdi),%eax
   1ab7d:	add    %eax,%eax
   1ab7f:	mov    %al,0x13(%rdi)
   1ab82:	cmp    $0x7,%al
   1ab84:	ja     1ad3e <png_do_expand+0x4ce>
   1ab8a:	movzbl %al,%eax
   1ab8d:	imul   %r8,%rax
   1ab91:	add    $0x7,%rax
   1ab95:	shr    $0x3,%rax
   1ab99:	jmpq   1ad49 <png_do_expand+0x4d9>
   1ab9e:	movb   $0xff,(%rdx)
   1aba1:	movb   $0xff,-0x1(%rdx)
   1aba5:	add    $0xfffffffffffffffe,%rdx
   1aba9:	movzbl (%rcx),%esi
   1abac:	mov    %sil,(%rdx)
   1abaf:	movzbl -0x1(%rcx),%esi
   1abb3:	mov    %sil,-0x1(%rdx)
   1abb7:	add    $0xfffffffffffffffe,%rcx
   1abbb:	add    $0xfffffffffffffffe,%rdx
   1abbf:	add    $0x1,%eax
   1abc2:	cmp    %eax,%r8d
   1abc5:	jbe    1ab71 <png_do_expand+0x301>
   1abc7:	movzbl -0x1(%rcx),%esi
   1abcb:	cmp    %r9d,%esi
   1abce:	jne    1ab9e <png_do_expand+0x32e>
   1abd0:	movzbl (%rcx),%esi
   1abd3:	cmp    %r10d,%esi
   1abd6:	jne    1ab9e <png_do_expand+0x32e>
   1abd8:	movb   $0x0,(%rdx)
   1abdb:	movb   $0x0,-0x1(%rdx)
   1abdf:	add    $0xfffffffffffffffe,%rdx
   1abe3:	jmp    1aba9 <png_do_expand+0x339>
   1abe5:	movzbl -0x2(%rcx),%r14d
   1abea:	cmp    %r14b,%r11b
   1abed:	jne    1a9d0 <png_do_expand+0x160>
   1abf3:	movzbl -0x1(%rcx),%r14d
   1abf8:	cmp    %r14b,%r10b
   1abfb:	jne    1a9d0 <png_do_expand+0x160>
   1ac01:	movzbl (%rcx),%r14d
   1ac05:	cmp    %r14b,%dl
   1ac08:	jne    1a9d0 <png_do_expand+0x160>
   1ac0e:	lea    -0x1(%rsi),%r14
   1ac12:	mov    %rax,%r15
   1ac15:	jmpq   1a9d7 <png_do_expand+0x167>
   1ac1a:	movzbl %al,%eax
   1ac1d:	shr    $0x3,%rax
   1ac21:	imul   %r8,%rax
   1ac25:	mov    %rax,0x8(%rdi)
   1ac29:	leaveq 
   1ac2a:	retq   
   1ac2b:	movzbl -0x5(%r14),%r13d
   1ac30:	cmp    %r9b,%r13b
   1ac33:	jne    1aa3f <png_do_expand+0x1cf>
   1ac39:	movzbl -0x4(%r14),%r13d
   1ac3e:	cmp    %r13b,%r10b
   1ac41:	jne    1aa3f <png_do_expand+0x1cf>
   1ac47:	movzbl -0x3(%r14),%r13d
   1ac4c:	cmp    %r11b,%r13b
   1ac4f:	jne    1aa3f <png_do_expand+0x1cf>
   1ac55:	movzbl -0x2(%r14),%r13d
   1ac5a:	cmp    %r13b,%cl
   1ac5d:	jne    1aa3f <png_do_expand+0x1cf>
   1ac63:	movzbl -0x1(%r14),%r13d
   1ac68:	cmp    %r15b,%r13b
   1ac6b:	jne    1aa3f <png_do_expand+0x1cf>
   1ac71:	movzbl (%r14),%r13d
   1ac75:	cmp    %r13b,%dl
   1ac78:	jne    1aa3f <png_do_expand+0x1cf>
   1ac7e:	movb   $0x0,(%rsi)
   1ac81:	movb   $0x0,-0x1(%rsi)
   1ac85:	add    $0xfffffffffffffffe,%rsi
   1ac89:	jmpq   1aa4a <png_do_expand+0x1da>
   1ac8e:	mov    $0xfffffffffffffff8,%rcx
   1ac95:	sub    %r8d,%ecx
   1ac98:	and    $0x7,%ecx
   1ac9b:	lea    -0x1(%rsi,%r8,1),%r10
   1aca0:	mov    %r15,-0x38(%rbp)
   1aca4:	lea    -0x1(%r8),%r15d
   1aca8:	shr    $0x3,%r15d
   1acac:	mov    %r15d,%r15d
   1acaf:	add    %rsi,%r15
   1acb2:	mov    %rsi,-0x8(%rbp)
   1acb6:	mov    %r11,-0x18(%rbp)
   1acba:	mov    %rax,%r11
   1acbd:	jmpq   1ad5e <png_do_expand+0x4ee>
   1acc2:	add    $0xffffffffffffffff,%r9
   1acc6:	mov    %rax,%rcx
   1acc9:	add    $0xffffffffffffffff,%r10
   1accd:	add    $0x1,%esi
   1acd0:	cmp    %esi,%r8d
   1acd3:	ja     1ad7d <png_do_expand+0x50d>
   1acd9:	mov    -0x20(%rbp),%rcx
   1acdd:	and    $0x3,%ecx
   1ace0:	mov    %rcx,%rdx
   1ace3:	shl    $0x4,%edx
   1ace6:	add    %edx,%ecx
   1ace8:	lea    (%rcx,%rcx,4),%r11d
   1acec:	mov    -0x38(%rbp),%rdx
   1acf0:	mov    -0x10(%rbp),%rsi
   1acf4:	mov    $0xff,%r9d
   1acfa:	jmpq   1aaac <png_do_expand+0x23c>
   1acff:	movzbl (%r9),%edx
   1ad03:	shr    %cl,%edx
   1ad05:	mov    %rdx,%r15
   1ad08:	and    $0xf,%r15b
   1ad0c:	shl    $0x4,%edx
   1ad0f:	add    %r15d,%edx
   1ad12:	mov    %dl,(%r10)
   1ad15:	cmp    $0x4,%ecx
   1ad18:	je     1aaf2 <png_do_expand+0x282>
   1ad1e:	mov    %rsi,%rcx
   1ad21:	jmpq   1aaf9 <png_do_expand+0x289>
   1ad26:	movzbl (%rcx),%esi
   1ad29:	cmp    %r11d,%esi
   1ad2c:	je     1ab49 <png_do_expand+0x2d9>
   1ad32:	lea    -0x1(%rdx),%rsi
   1ad36:	mov    %r9,%r15
   1ad39:	jmpq   1ab50 <png_do_expand+0x2e0>
   1ad3e:	movzbl %al,%eax
   1ad41:	shr    $0x3,%rax
   1ad45:	imul   %r8,%rax
   1ad49:	mov    %rax,0x8(%rdi)
   1ad4d:	leaveq 
   1ad4e:	retq   
   1ad4f:	add    $0xffffffffffffffff,%r15
   1ad53:	mov    %rax,%rcx
   1ad56:	add    $0xffffffffffffffff,%r10
   1ad5a:	add    $0x1,%r11d
   1ad5e:	cmp    %r11d,%r8d
   1ad61:	ja     1ada7 <png_do_expand+0x537>
   1ad63:	mov    -0x18(%rbp),%rcx
   1ad67:	and    $0x1,%ecx
   1ad6a:	neg    %ecx
   1ad6c:	movzbl %cl,%r11d
   1ad70:	mov    -0x8(%rbp),%rsi
   1ad74:	mov    -0x38(%rbp),%r15
   1ad78:	jmpq   1aaac <png_do_expand+0x23c>
   1ad7d:	movzbl (%r9),%edx
   1ad81:	shr    %cl,%edx
   1ad83:	and    $0x3,%dl
   1ad86:	mov    %rdx,%r11
   1ad89:	shl    $0x4,%r11d
   1ad8d:	add    %r11d,%edx
   1ad90:	lea    (%rdx,%rdx,4),%edx
   1ad93:	mov    %dl,(%r10)
   1ad96:	cmp    $0x6,%ecx
   1ad99:	je     1acc2 <png_do_expand+0x452>
   1ad9f:	add    $0x2,%ecx
   1ada2:	jmpq   1acc9 <png_do_expand+0x459>
   1ada7:	movzbl (%r15),%esi
   1adab:	shr    %cl,%esi
   1adad:	and    $0x1,%esi
   1adb0:	test   %esi,%esi
   1adb2:	jg     1adb9 <png_do_expand+0x549>
   1adb4:	mov    %rax,%rsi
   1adb7:	jmp    1adbc <png_do_expand+0x54c>
   1adb9:	mov    %r9,%rsi
   1adbc:	mov    %sil,(%r10)
   1adbf:	cmp    $0x7,%ecx
   1adc2:	je     1ad4f <png_do_expand+0x4df>
   1adc4:	add    $0x1,%ecx
   1adc7:	jmp    1ad56 <png_do_expand+0x4e6>
   1adc9:	nopl   0x0(%rax)

000000000001add0 <png_do_expand_16>:
   1add0:	push   %rbp
   1add1:	mov    %rsp,%rbp
   1add4:	movzbl 0x11(%rdi),%eax
   1add8:	cmp    $0x8,%al
   1adda:	je     1adde <png_do_expand_16+0xe>
   1addc:	leaveq 
   1addd:	retq   
   1adde:	movzbl 0x10(%rdi),%eax
   1ade2:	cmp    $0x3,%al
   1ade4:	jne    1ade8 <png_do_expand_16+0x18>
   1ade6:	leaveq 
   1ade7:	retq   
   1ade8:	mov    0x8(%rdi),%rcx
   1adec:	lea    (%rcx,%rsi,1),%rax
   1adf0:	lea    (%rsi,%rcx,2),%rcx
   1adf4:	jmp    1ae06 <png_do_expand_16+0x36>
   1adf6:	add    $0xffffffffffffffff,%rax
   1adfa:	movzbl (%rax),%edx
   1adfd:	mov    %dl,-0x1(%rcx)
   1ae00:	add    $0xfffffffffffffffe,%rcx
   1ae04:	mov    %dl,(%rcx)
   1ae06:	cmp    %rcx,%rax
   1ae09:	jb     1adf6 <png_do_expand_16+0x26>
   1ae0b:	mov    0x8(%rdi),%rax
   1ae0f:	add    %rax,%rax
   1ae12:	mov    %rax,0x8(%rdi)
   1ae16:	movb   $0x10,0x11(%rdi)
   1ae1a:	movzbl 0x12(%rdi),%eax
   1ae1e:	shl    $0x4,%eax
   1ae21:	mov    %al,0x13(%rdi)
   1ae24:	leaveq 
   1ae25:	retq   
   1ae26:	nopw   %cs:0x0(%rax,%rax,1)

000000000001ae30 <png_do_quantize>:
   1ae30:	push   %rbp
   1ae31:	mov    %rsp,%rbp
   1ae34:	mov    (%rdi),%r10d
   1ae37:	movzbl 0x11(%rdi),%eax
   1ae3b:	cmp    $0x8,%al
   1ae3d:	je     1ae41 <png_do_quantize+0x11>
   1ae3f:	leaveq 
   1ae40:	retq   
   1ae41:	xor    %eax,%eax
   1ae43:	movzbl 0x10(%rdi),%r8d
   1ae48:	cmp    $0x2,%r8b
   1ae4c:	je     1ae5c <png_do_quantize+0x2c>
   1ae4e:	cmp    $0x6,%r8b
   1ae52:	je     1ae66 <png_do_quantize+0x36>
   1ae54:	cmp    $0x3,%r8b
   1ae58:	je     1ae73 <png_do_quantize+0x43>
   1ae5a:	leaveq 
   1ae5b:	retq   
   1ae5c:	test   %rdx,%rdx
   1ae5f:	je     1ae4e <png_do_quantize+0x1e>
   1ae61:	mov    %rsi,%r8
   1ae64:	jmp    1aeba <png_do_quantize+0x8a>
   1ae66:	test   %rdx,%rdx
   1ae69:	je     1ae54 <png_do_quantize+0x24>
   1ae6b:	mov    %rsi,%r8
   1ae6e:	jmpq   1af23 <png_do_quantize+0xf3>
   1ae73:	test   %rcx,%rcx
   1ae76:	jne    1af59 <png_do_quantize+0x129>
   1ae7c:	leaveq 
   1ae7d:	retq   
   1ae7e:	movzbl (%r8),%ecx
   1ae82:	and    $0x1fffff8,%ecx
   1ae88:	shl    $0x7,%ecx
   1ae8b:	movzbl 0x1(%r8),%r9d
   1ae90:	and    $0x3ffffff8,%r9d
   1ae97:	lea    (%rcx,%r9,4),%r9d
   1ae9b:	movzbl 0x2(%r8),%ecx
   1aea0:	shr    $0x3,%ecx
   1aea3:	add    %r9d,%ecx
   1aea6:	movslq %ecx,%rcx
   1aea9:	movzbl (%rdx,%rcx,1),%ecx
   1aead:	mov    %cl,(%rsi)
   1aeaf:	add    $0x1,%eax
   1aeb2:	add    $0x3,%r8
   1aeb6:	add    $0x1,%rsi
   1aeba:	cmp    %r10d,%eax
   1aebd:	jb     1ae7e <png_do_quantize+0x4e>
   1aebf:	movb   $0x3,0x10(%rdi)
   1aec3:	movb   $0x1,0x12(%rdi)
   1aec7:	movzbl 0x11(%rdi),%eax
   1aecb:	mov    %al,0x13(%rdi)
   1aece:	cmp    $0x7,%al
   1aed0:	ja     1af60 <png_do_quantize+0x130>
   1aed6:	imul   %r10,%rax
   1aeda:	add    $0x7,%rax
   1aede:	shr    $0x3,%rax
   1aee2:	jmpq   1af68 <png_do_quantize+0x138>
   1aee7:	movzbl (%r8),%ecx
   1aeeb:	and    $0x1fffff8,%ecx
   1aef1:	shl    $0x7,%ecx
   1aef4:	movzbl 0x1(%r8),%r9d
   1aef9:	and    $0x3ffffff8,%r9d
   1af00:	lea    (%rcx,%r9,4),%r9d
   1af04:	movzbl 0x2(%r8),%ecx
   1af09:	shr    $0x3,%ecx
   1af0c:	add    %r9d,%ecx
   1af0f:	movslq %ecx,%rcx
   1af12:	movzbl (%rdx,%rcx,1),%ecx
   1af16:	mov    %cl,(%rsi)
   1af18:	add    $0x1,%eax
   1af1b:	add    $0x4,%r8
   1af1f:	add    $0x1,%rsi
   1af23:	cmp    %eax,%r10d
   1af26:	ja     1aee7 <png_do_quantize+0xb7>
   1af28:	movb   $0x3,0x10(%rdi)
   1af2c:	movb   $0x1,0x12(%rdi)
   1af30:	movzbl 0x11(%rdi),%eax
   1af34:	mov    %al,0x13(%rdi)
   1af37:	cmp    $0x7,%al
   1af39:	ja     1af6e <png_do_quantize+0x13e>
   1af3b:	imul   %r10,%rax
   1af3f:	add    $0x7,%rax
   1af43:	shr    $0x3,%rax
   1af47:	jmp    1af76 <png_do_quantize+0x146>
   1af49:	movzbl (%rsi),%edx
   1af4c:	movzbl (%rcx,%rdx,1),%edx
   1af50:	mov    %dl,(%rsi)
   1af52:	add    $0x1,%eax
   1af55:	add    $0x1,%rsi
   1af59:	cmp    %eax,%r10d
   1af5c:	ja     1af49 <png_do_quantize+0x119>
   1af5e:	leaveq 
   1af5f:	retq   
   1af60:	shr    $0x3,%rax
   1af64:	imul   %r10,%rax
   1af68:	mov    %rax,0x8(%rdi)
   1af6c:	leaveq 
   1af6d:	retq   
   1af6e:	shr    $0x3,%rax
   1af72:	imul   %r10,%rax
   1af76:	mov    %rax,0x8(%rdi)
   1af7a:	leaveq 
   1af7b:	retq   
   1af7c:	nopl   0x0(%rax)

000000000001af80 <png_get_uint_32>:
   1af80:	push   %rbp
   1af81:	mov    %rsp,%rbp
   1af84:	movzbl (%rdi),%eax
   1af87:	shl    $0x18,%eax
   1af8a:	movzbl 0x1(%rdi),%ecx
   1af8e:	shl    $0x10,%ecx
   1af91:	add    %eax,%ecx
   1af93:	movzbl 0x2(%rdi),%eax
   1af97:	shl    $0x8,%eax
   1af9a:	add    %ecx,%eax
   1af9c:	movzbl 0x3(%rdi),%ecx
   1afa0:	add    %ecx,%eax
   1afa2:	leaveq 
   1afa3:	retq   
   1afa4:	data16 nopw %cs:0x0(%rax,%rax,1)
   1afaf:	nop

000000000001afb0 <png_get_uint_16>:
   1afb0:	push   %rbp
   1afb1:	mov    %rsp,%rbp
   1afb4:	movzbl 0x1(%rdi),%ecx
   1afb8:	movzbl (%rdi),%eax
   1afbb:	shl    $0x8,%eax
   1afbe:	add    %ecx,%eax
   1afc0:	leaveq 
   1afc1:	retq   
   1afc2:	data16 nopw %cs:0x0(%rax,%rax,1)
   1afcd:	nopl   (%rax)

000000000001afd0 <png_get_int_32>:
   1afd0:	push   %rbp
   1afd1:	mov    %rsp,%rbp
   1afd4:	movzbl (%rdi),%ecx
   1afd7:	shl    $0x18,%ecx
   1afda:	movzbl 0x1(%rdi),%eax
   1afde:	shl    $0x10,%eax
   1afe1:	add    %eax,%ecx
   1afe3:	movzbl 0x2(%rdi),%eax
   1afe7:	shl    $0x8,%eax
   1afea:	add    %eax,%ecx
   1afec:	movzbl 0x3(%rdi),%eax
   1aff0:	add    %ecx,%eax
   1aff2:	mov    %rax,%rcx
   1aff5:	and    $0x80000000,%ecx
   1affb:	test   %ecx,%ecx
   1affd:	jne    1b001 <png_get_int_32+0x31>
   1afff:	leaveq 
   1b000:	retq   
   1b001:	neg    %eax
   1b003:	mov    %rax,%rcx
   1b006:	and    $0x80000000,%ecx
   1b00c:	test   %ecx,%ecx
   1b00e:	je     1b014 <png_get_int_32+0x44>
   1b010:	xor    %eax,%eax
   1b012:	leaveq 
   1b013:	retq   
   1b014:	neg    %eax
   1b016:	leaveq 
   1b017:	retq   
   1b018:	nopl   0x0(%rax,%rax,1)

000000000001b020 <png_get_uint_31>:
   1b020:	push   %rbp
   1b021:	mov    %rsp,%rbp
   1b024:	movzbl (%rsi),%eax
   1b027:	shl    $0x18,%eax
   1b02a:	movzbl 0x1(%rsi),%ecx
   1b02e:	shl    $0x10,%ecx
   1b031:	add    %eax,%ecx
   1b033:	movzbl 0x2(%rsi),%eax
   1b037:	shl    $0x8,%eax
   1b03a:	add    %eax,%ecx
   1b03c:	movzbl 0x3(%rsi),%eax
   1b040:	add    %ecx,%eax
   1b042:	cmp    $0x7fffffff,%eax
   1b047:	ja     1b04b <png_get_uint_31+0x2b>
   1b049:	leaveq 
   1b04a:	retq   
   1b04b:	lea    0x135ee(%rip),%rsi        # 2e640 <chunks_to_process.34+0x83b>
   1b052:	callq  5470 <png_error@plt>
   1b057:	nopw   0x0(%rax,%rax,1)

000000000001b060 <png_read_sig>:
   1b060:	push   %rbp
   1b061:	mov    %rsp,%rbp
   1b064:	sub    $0x20,%rsp
   1b068:	movzbl 0x26d(%rdi),%r8d
   1b070:	cmp    $0x7,%r8b
   1b074:	jbe    1b078 <png_read_sig+0x18>
   1b076:	leaveq 
   1b077:	retq   
   1b078:	movl   $0x11,0x46c(%rdi)
   1b082:	lea    0x2c(%rsi,%r8,1),%rax
   1b087:	mov    $0x8,%edx
   1b08c:	sub    %r8,%rdx
   1b08f:	mov    %rdi,%rcx
   1b092:	mov    %rdx,%r9
   1b095:	mov    %r12,-0x8(%rbp)
   1b099:	mov    %r13,-0x10(%rbp)
   1b09d:	mov    %r14,-0x18(%rbp)
   1b0a1:	mov    %r15,-0x20(%rbp)
   1b0a5:	mov    %rdi,%r12
   1b0a8:	mov    %rcx,%rdi
   1b0ab:	mov    %r8,%r13
   1b0ae:	mov    %rsi,%r14
   1b0b1:	mov    %rax,%rsi
   1b0b4:	mov    %rdx,%r15
   1b0b7:	mov    %r9,%rdx
   1b0ba:	callq  14820 <png_read_data>
   1b0bf:	movb   $0x8,0x26d(%r12)
   1b0c8:	add    $0x2c,%r14
   1b0cc:	mov    %r15,%rdx
   1b0cf:	mov    %r14,%rdi
   1b0d2:	mov    %r13,%rsi
   1b0d5:	callq  57d0 <png_sig_cmp@plt>
   1b0da:	test   %eax,%eax
   1b0dc:	jne    1b0f6 <png_read_sig+0x96>
   1b0de:	cmp    $0x2,%r13b
   1b0e2:	jbe    1b10b <png_read_sig+0xab>
   1b0e4:	mov    -0x20(%rbp),%r15
   1b0e8:	mov    -0x18(%rbp),%r14
   1b0ec:	mov    -0x10(%rbp),%r13
   1b0f0:	mov    -0x8(%rbp),%r12
   1b0f4:	leaveq 
   1b0f5:	retq   
   1b0f6:	cmp    $0x3,%r13b
   1b0fa:	jbe    1b132 <png_read_sig+0xd2>
   1b0fc:	mov    %r12,%rdi
   1b0ff:	lea    0x1356b(%rip),%rsi        # 2e671 <chunks_to_process.34+0x86c>
   1b106:	callq  5470 <png_error@plt>
   1b10b:	mov    0x12c(%r12),%eax
   1b113:	or     $0x1000,%eax
   1b118:	mov    %eax,0x12c(%r12)
   1b120:	mov    -0x20(%rbp),%r15
   1b124:	mov    -0x18(%rbp),%r14
   1b128:	mov    -0x10(%rbp),%r13
   1b12c:	mov    -0x8(%rbp),%r12
   1b130:	leaveq 
   1b131:	retq   
   1b132:	mov    $0x4,%edx
   1b137:	sub    %r13,%rdx
   1b13a:	mov    %r13,%rsi
   1b13d:	mov    %r14,%rdi
   1b140:	callq  57d0 <png_sig_cmp@plt>
   1b145:	test   %eax,%eax
   1b147:	je     1b0fc <png_read_sig+0x9c>
   1b149:	mov    %r12,%rdi
   1b14c:	lea    0x1350f(%rip),%rsi        # 2e662 <chunks_to_process.34+0x85d>
   1b153:	callq  5470 <png_error@plt>
   1b158:	nopl   0x0(%rax,%rax,1)

000000000001b160 <png_read_chunk_header>:
   1b160:	push   %rbp
   1b161:	mov    %rsp,%rbp
   1b164:	sub    $0x20,%rsp
   1b168:	mov    %r15,-0x10(%rbp)
   1b16c:	mov    %r14,-0x8(%rbp)
   1b170:	movl   $0x21,0x46c(%rdi)
   1b17a:	lea    -0x18(%rbp),%rsi
   1b17e:	mov    $0x8,%edx
   1b183:	mov    %rdi,%r14
   1b186:	callq  14820 <png_read_data>
   1b18b:	mov    %r14,%rdi
   1b18e:	lea    -0x18(%rbp),%rsi
   1b192:	callq  5730 <png_get_uint_31@plt>
   1b197:	movzbl -0x14(%rbp),%ecx
   1b19b:	shl    $0x18,%ecx
   1b19e:	movzbl -0x13(%rbp),%edx
   1b1a2:	shl    $0x10,%edx
   1b1a5:	add    %ecx,%edx
   1b1a7:	movzbl -0x12(%rbp),%ecx
   1b1ab:	shl    $0x8,%ecx
   1b1ae:	add    %ecx,%edx
   1b1b0:	movzbl -0x11(%rbp),%ecx
   1b1b4:	add    %edx,%ecx
   1b1b6:	mov    %ecx,0x218(%r14)
   1b1bd:	mov    %rax,%r15
   1b1c0:	mov    %r14,%rdi
   1b1c3:	callq  6d80 <png_reset_crc>
   1b1c8:	lea    -0x14(%rbp),%rsi
   1b1cc:	mov    $0x4,%edx
   1b1d1:	mov    %r14,%rdi
   1b1d4:	callq  6db0 <png_calculate_crc>
   1b1d9:	mov    0x218(%r14),%esi
   1b1e0:	mov    %r14,%rdi
   1b1e3:	callq  1fcc0 <png_check_chunk_name>
   1b1e8:	mov    %r14,%rdi
   1b1eb:	mov    %r15,%rsi
   1b1ee:	callq  1fd00 <png_check_chunk_length>
   1b1f3:	movl   $0x41,0x46c(%r14)
   1b1fe:	mov    %r15,%rax
   1b201:	mov    -0x8(%rbp),%r14
   1b205:	mov    -0x10(%rbp),%r15
   1b209:	leaveq 
   1b20a:	retq   
   1b20b:	nopl   0x0(%rax,%rax,1)

000000000001b210 <png_crc_read>:
   1b210:	push   %rbp
   1b211:	mov    %rsp,%rbp
   1b214:	sub    $0x20,%rsp
   1b218:	test   %rdi,%rdi
   1b21b:	jne    1b21f <png_crc_read+0xf>
   1b21d:	leaveq 
   1b21e:	retq   
   1b21f:	mov    %edx,%edx
   1b221:	mov    %rdi,%r8
   1b224:	mov    %rsi,%rcx
   1b227:	mov    %rdx,%rax
   1b22a:	mov    %r13,-0x8(%rbp)
   1b22e:	mov    %r14,-0x10(%rbp)
   1b232:	mov    %r15,-0x18(%rbp)
   1b236:	mov    %rdx,%r13
   1b239:	mov    %rax,%rdx
   1b23c:	mov    %rsi,%r14
   1b23f:	mov    %rcx,%rsi
   1b242:	mov    %rdi,%r15
   1b245:	mov    %r8,%rdi
   1b248:	callq  14820 <png_read_data>
   1b24d:	mov    %r13,%rdx
   1b250:	mov    %r14,%rsi
   1b253:	mov    %r15,%rdi
   1b256:	callq  6db0 <png_calculate_crc>
   1b25b:	mov    -0x18(%rbp),%r15
   1b25f:	mov    -0x10(%rbp),%r14
   1b263:	mov    -0x8(%rbp),%r13
   1b267:	leaveq 
   1b268:	retq   
   1b269:	nopl   0x0(%rax)

000000000001b270 <png_crc_finish>:
   1b270:	push   %rbp
   1b271:	mov    %rsp,%rbp
   1b274:	sub    $0x430,%rsp
   1b27b:	mov    %rbx,-0x8(%rbp)
   1b27f:	mov    %r12,-0x10(%rbp)
   1b283:	mov    %r13,-0x18(%rbp)
   1b287:	mov    %r14,-0x20(%rbp)
   1b28b:	mov    %r15,-0x28(%rbp)
   1b28f:	mov    %rsi,%rbx
   1b292:	mov    %rdi,%r12
   1b295:	lea    -0x428(%rbp),%r13
   1b29c:	mov    $0x400,%r14d
   1b2a2:	jmp    1b2b8 <png_crc_finish+0x48>
   1b2a4:	mov    %rbx,%r15
   1b2a7:	mov    %r12,%rdi
   1b2aa:	mov    %r13,%rsi
   1b2ad:	mov    %r15,%rdx
   1b2b0:	callq  1b210 <png_crc_read>
   1b2b5:	sub    %r15d,%ebx
   1b2b8:	test   %ebx,%ebx
   1b2ba:	jne    1b2e3 <png_crc_finish+0x73>
   1b2bc:	xor    %ebx,%ebx
   1b2be:	mov    %r12,%rdi
   1b2c1:	callq  1b370 <png_crc_error>
   1b2c6:	test   %eax,%eax
   1b2c8:	jne    1b2f0 <png_crc_finish+0x80>
   1b2ca:	mov    %rbx,%rax
   1b2cd:	mov    -0x28(%rbp),%r15
   1b2d1:	mov    -0x20(%rbp),%r14
   1b2d5:	mov    -0x18(%rbp),%r13
   1b2d9:	mov    -0x10(%rbp),%r12
   1b2dd:	mov    -0x8(%rbp),%rbx
   1b2e1:	leaveq 
   1b2e2:	retq   
   1b2e3:	cmp    $0x3ff,%ebx
   1b2e9:	jbe    1b2a4 <png_crc_finish+0x34>
   1b2eb:	mov    %r14,%r15
   1b2ee:	jmp    1b2a7 <png_crc_finish+0x37>
   1b2f0:	mov    $0x1,%r13d
   1b2f6:	mov    0x218(%r12),%ecx
   1b2fe:	and    $0x20000000,%ecx
   1b304:	test   %ecx,%ecx
   1b306:	jne    1b31e <png_crc_finish+0xae>
   1b308:	mov    0x130(%r12),%eax
   1b310:	and    $0x400,%eax
   1b315:	test   %eax,%eax
   1b317:	je     1b332 <png_crc_finish+0xc2>
   1b319:	mov    %r13,%rbx
   1b31c:	jmp    1b332 <png_crc_finish+0xc2>
   1b31e:	mov    0x130(%r12),%eax
   1b326:	and    $0x200,%eax
   1b32b:	test   %eax,%eax
   1b32d:	jne    1b332 <png_crc_finish+0xc2>
   1b32f:	mov    %r13,%rbx
   1b332:	lea    0x1335f(%rip),%rsi        # 2e698 <chunks_to_process.34+0x893>
   1b339:	test   %ebx,%ebx
   1b33b:	jg     1b345 <png_crc_finish+0xd5>
   1b33d:	mov    %r12,%rdi
   1b340:	callq  5060 <png_chunk_error@plt>
   1b345:	mov    %r12,%rdi
   1b348:	callq  56a0 <png_chunk_warning@plt>
   1b34d:	mov    %r13,%rax
   1b350:	mov    -0x28(%rbp),%r15
   1b354:	mov    -0x20(%rbp),%r14
   1b358:	mov    -0x18(%rbp),%r13
   1b35c:	mov    -0x10(%rbp),%r12
   1b360:	mov    -0x8(%rbp),%rbx
   1b364:	leaveq 
   1b365:	retq   
   1b366:	nopw   %cs:0x0(%rax,%rax,1)

000000000001b370 <png_crc_error>:
   1b370:	push   %rbp
   1b371:	mov    %rsp,%rbp
   1b374:	sub    $0x20,%rsp
   1b378:	mov    %r15,-0x10(%rbp)
   1b37c:	mov    %rdi,-0x8(%rbp)
   1b380:	mov    $0x1,%ecx
   1b385:	xor    %r15d,%r15d
   1b388:	mov    0x218(%rdi),%eax
   1b38e:	and    $0x20000000,%eax
   1b393:	test   %eax,%eax
   1b395:	jne    1b3ce <png_crc_error+0x5e>
   1b397:	mov    0x130(%rdi),%eax
   1b39d:	and    $0x800,%eax
   1b3a2:	test   %eax,%eax
   1b3a4:	jne    1b3a9 <png_crc_error+0x39>
   1b3a6:	mov    %rcx,%r15
   1b3a9:	movl   $0x81,0x46c(%rdi)
   1b3b3:	lea    -0x14(%rbp),%rsi
   1b3b7:	mov    $0x4,%edx
   1b3bc:	callq  14820 <png_read_data>
   1b3c1:	test   %r15d,%r15d
   1b3c4:	jg     1b3e5 <png_crc_error+0x75>
   1b3c6:	xor    %eax,%eax
   1b3c8:	mov    -0x10(%rbp),%r15
   1b3cc:	leaveq 
   1b3cd:	retq   
   1b3ce:	mov    0x130(%rdi),%eax
   1b3d4:	and    $0x300,%eax
   1b3d9:	cmp    $0x300,%eax
   1b3de:	je     1b3a9 <png_crc_error+0x39>
   1b3e0:	mov    %rcx,%r15
   1b3e3:	jmp    1b3a9 <png_crc_error+0x39>
   1b3e5:	movzbl -0x14(%rbp),%ecx
   1b3e9:	shl    $0x18,%ecx
   1b3ec:	movzbl -0x13(%rbp),%eax
   1b3f0:	shl    $0x10,%eax
   1b3f3:	add    %eax,%ecx
   1b3f5:	movzbl -0x12(%rbp),%eax
   1b3f9:	shl    $0x8,%eax
   1b3fc:	add    %ecx,%eax
   1b3fe:	movzbl -0x11(%rbp),%ecx
   1b402:	add    %ecx,%eax
   1b404:	mov    -0x8(%rbp),%rcx
   1b408:	mov    0x24c(%rcx),%ecx
   1b40e:	cmp    %eax,%ecx
   1b410:	je     1b41d <png_crc_error+0xad>
   1b412:	mov    $0x1,%eax
   1b417:	mov    -0x10(%rbp),%r15
   1b41b:	leaveq 
   1b41c:	retq   
   1b41d:	xor    %eax,%eax
   1b41f:	mov    -0x10(%rbp),%r15
   1b423:	leaveq 
   1b424:	retq   
   1b425:	data16 nopw %cs:0x0(%rax,%rax,1)

000000000001b430 <png_combine_row>:
   1b430:	push   %rbp
   1b431:	mov    %rsp,%rbp
   1b434:	sub    $0x50,%rsp
   1b438:	movzbl 0x265(%rdi),%r10d
   1b440:	mov    0x228(%rdi),%r11
   1b447:	mov    0x1f8(%rdi),%r8d
   1b44e:	movzbl 0x26f(%rdi),%r9d
   1b456:	test   %r9b,%r9b
   1b459:	je     1b4bd <png_combine_row+0x8d>
   1b45b:	mov    0x240(%rdi),%rcx
   1b462:	test   %rcx,%rcx
   1b465:	jne    1b4c9 <png_combine_row+0x99>
   1b467:	test   %r8d,%r8d
   1b46a:	je     1b4e7 <png_combine_row+0xb7>
   1b46c:	xor    %eax,%eax
   1b46e:	mov    %rax,-0x18(%rbp)
   1b472:	mov    %r8,%rax
   1b475:	imul   %r9,%rax
   1b479:	mov    %rax,%rcx
   1b47c:	and    $0x7,%ecx
   1b47f:	test   %ecx,%ecx
   1b481:	jne    1b4f3 <png_combine_row+0xc3>
   1b483:	mov    %r15,%rcx
   1b486:	xor    %r15d,%r15d
   1b489:	pushq  -0x18(%rbp)
   1b48c:	popq   -0x20(%rbp)
   1b48f:	mov    %r11,-0x30(%rbp)
   1b493:	add    $0x1,%r11
   1b497:	mov    %rcx,-0x48(%rbp)
   1b49b:	movzbl 0x264(%rdi),%ecx
   1b4a2:	test   %cl,%cl
   1b4a4:	jne    1b50e <png_combine_row+0xde>
   1b4a6:	cmp    $0x7,%r9b
   1b4aa:	ja     1b563 <png_combine_row+0x133>
   1b4b0:	lea    0x7(%rax),%r8
   1b4b4:	shr    $0x3,%r8
   1b4b8:	jmpq   1b56b <png_combine_row+0x13b>
   1b4bd:	lea    0x131de(%rip),%rsi        # 2e6a2 <chunks_to_process.34+0x89d>
   1b4c4:	callq  5470 <png_error@plt>
   1b4c9:	cmp    $0x7,%r9b
   1b4cd:	ja     1b590 <png_combine_row+0x160>
   1b4d3:	mov    %r9,%rax
   1b4d6:	imul   %r8,%rax
   1b4da:	add    $0x7,%rax
   1b4de:	shr    $0x3,%rax
   1b4e2:	jmpq   1b59b <png_combine_row+0x16b>
   1b4e7:	lea    0x131f1(%rip),%rsi        # 2e6df <chunks_to_process.34+0x8da>
   1b4ee:	callq  5470 <png_error@plt>
   1b4f3:	cmp    $0x7,%r9b
   1b4f7:	ja     1b5b0 <png_combine_row+0x180>
   1b4fd:	mov    %r15,-0x48(%rbp)
   1b501:	lea    0x7(%rax),%r15
   1b505:	shr    $0x3,%r15
   1b509:	jmpq   1b5bf <png_combine_row+0x18f>
   1b50e:	mov    0x134(%rdi),%ecx
   1b514:	and    $0x2,%ecx
   1b517:	test   %ecx,%ecx
   1b519:	je     1b4a6 <png_combine_row+0x76>
   1b51b:	cmp    $0x5,%r10b
   1b51f:	ja     1b4a6 <png_combine_row+0x76>
   1b521:	test   %edx,%edx
   1b523:	je     1b53c <png_combine_row+0x10c>
   1b525:	cmp    $0x1,%edx
   1b528:	jne    1b4a6 <png_combine_row+0x76>
   1b52e:	mov    %r10,%rcx
   1b531:	and    $0x1,%ecx
   1b534:	test   %ecx,%ecx
   1b536:	je     1b4a6 <png_combine_row+0x76>
   1b53c:	mov    $0x3,%ecx
   1b541:	lea    0x1(%r10),%eax
   1b545:	shr    %eax
   1b547:	sub    %eax,%ecx
   1b549:	mov    %r10,%rax
   1b54c:	and    $0x1,%eax
   1b54f:	shl    %cl,%eax
   1b551:	and    $0x7,%eax
   1b554:	cmp    %eax,%r8d
   1b557:	ja     1b609 <png_combine_row+0x1d9>
   1b55d:	mov    -0x48(%rbp),%r15
   1b561:	leaveq 
   1b562:	retq   
   1b563:	shr    $0x3,%r9
   1b567:	imul   %r9,%r8
   1b56b:	mov    %r8,%rdx
   1b56e:	mov    %rsi,%rdi
   1b571:	mov    %r11,%rsi
   1b574:	callq  54c0 <memcpy@plt>
   1b579:	mov    -0x18(%rbp),%rax
   1b57d:	mov    -0x20(%rbp),%rcx
   1b581:	test   %r15,%r15
   1b584:	jne    1b67e <png_combine_row+0x24e>
   1b58a:	mov    -0x48(%rbp),%r15
   1b58e:	leaveq 
   1b58f:	retq   
   1b590:	mov    %r9,%rax
   1b593:	shr    $0x3,%rax
   1b597:	imul   %r8,%rax
   1b59b:	cmp    %rax,%rcx
   1b59e:	je     1b467 <png_combine_row+0x37>
   1b5a4:	lea    0x13110(%rip),%rsi        # 2e6bb <chunks_to_process.34+0x8b6>
   1b5ab:	callq  5470 <png_error@plt>
   1b5b0:	mov    %r15,-0x48(%rbp)
   1b5b4:	mov    %r9,%r15
   1b5b7:	shr    $0x3,%r15
   1b5bb:	imul   %r8,%r15
   1b5bf:	lea    -0x1(%r15,%rsi,1),%r15
   1b5c4:	mov    %r14,-0x40(%rbp)
   1b5c8:	movzbl (%r15),%r14d
   1b5cc:	mov    %r13,-0x38(%rbp)
   1b5d0:	mov    %r14,-0x18(%rbp)
   1b5d4:	mov    0x134(%rdi),%r13d
   1b5db:	and    $0x10000,%r13d
   1b5e2:	test   %r13d,%r13d
   1b5e5:	jne    1b697 <png_combine_row+0x267>
   1b5eb:	mov    $0xff,%r13d
   1b5f1:	shr    %cl,%r13d
   1b5f4:	mov    %r13,-0x20(%rbp)
   1b5f8:	mov    -0x38(%rbp),%r13
   1b5fc:	mov    -0x40(%rbp),%r14
   1b600:	mov    -0x48(%rbp),%rcx
   1b604:	jmpq   1b48f <png_combine_row+0x5f>
   1b609:	cmp    $0x7,%r9b
   1b60d:	jbe    1b6b5 <png_combine_row+0x285>
   1b613:	mov    %r9,%rcx
   1b616:	and    $0x7,%ecx
   1b619:	test   %ecx,%ecx
   1b61b:	jne    1b734 <png_combine_row+0x304>
   1b621:	shr    $0x3,%r9d
   1b625:	mov    %r9d,%ecx
   1b628:	imul   %rcx,%r8
   1b62c:	imul   %r9d,%eax
   1b630:	mov    %eax,%ecx
   1b632:	sub    %rcx,%r8
   1b635:	test   %edx,%edx
   1b637:	jne    1b740 <png_combine_row+0x310>
   1b63d:	mov    %r9,%rdx
   1b640:	mov    $0x7,%ecx
   1b645:	sub    %r10d,%ecx
   1b648:	shr    %ecx
   1b64a:	shl    %cl,%r9d
   1b64d:	mov    %eax,%eax
   1b64f:	mov    -0x30(%rbp),%rcx
   1b653:	lea    0x1(%rax,%rcx,1),%r15
   1b658:	add    %rsi,%rax
   1b65b:	cmp    $0x1,%edx
   1b65e:	jbe    1b762 <png_combine_row+0x332>
   1b664:	cmp    $0x2,%edx
   1b667:	je     1b76f <png_combine_row+0x33f>
   1b66d:	cmp    $0x3,%edx
   1b670:	jne    1b777 <png_combine_row+0x347>
   1b676:	mov    %r9d,%ecx
   1b679:	jmpq   1b7a4 <png_combine_row+0x374>
   1b67e:	mov    %rcx,%rdx
   1b681:	not    %edx
   1b683:	movzbl (%r15),%esi
   1b687:	and    %sil,%dl
   1b68a:	and    %cl,%al
   1b68c:	or     %al,%dl
   1b68e:	mov    %dl,(%r15)
   1b691:	mov    -0x48(%rbp),%r15
   1b695:	leaveq 
   1b696:	retq   
   1b697:	mov    $0xff,%r13d
   1b69d:	shl    %cl,%r13d
   1b6a0:	mov    %r13,-0x20(%rbp)
   1b6a4:	mov    -0x38(%rbp),%r13
   1b6a8:	mov    -0x40(%rbp),%r14
   1b6ac:	mov    -0x48(%rbp),%rcx
   1b6b0:	jmpq   1b48f <png_combine_row+0x5f>
   1b6b5:	mov    %rbx,%rcx
   1b6b8:	mov    %rdx,%rbx
   1b6bb:	mov    $0x8,%eax
   1b6c0:	xor    %edx,%edx
   1b6c2:	div    %r9d
   1b6c5:	mov    %eax,%edx
   1b6c7:	lea    0x130ba(%rip),%rax        # 2e788 <display_mask.9>
   1b6ce:	mov    %r14,-0x40(%rbp)
   1b6d2:	lea    0x1301f(%rip),%r14        # 2e6f8 <row_mask.8>
   1b6d9:	mov    %r13,-0x38(%rbp)
   1b6dd:	mov    $0xc,%r13d
   1b6e3:	mov    %r12,-0x30(%rbp)
   1b6e7:	mov    $0x18,%r12d
   1b6ed:	mov    %rcx,-0x28(%rbp)
   1b6f1:	mov    $0x30,%ecx
   1b6f6:	mov    0x134(%rdi),%edi
   1b6fc:	and    $0x10000,%edi
   1b702:	test   %edi,%edi
   1b704:	jne    1b7c5 <png_combine_row+0x395>
   1b70a:	test   %ebx,%ebx
   1b70c:	jne    1b7eb <png_combine_row+0x3bb>
   1b712:	cmp    $0x1,%r9b
   1b716:	jne    1b810 <png_combine_row+0x3e0>
   1b71c:	xor    %ecx,%ecx
   1b71e:	lea    (%rcx,%r10,4),%rax
   1b722:	mov    0x48(%rax,%r14,1),%edi
   1b727:	mov    -0x18(%rbp),%rax
   1b72b:	mov    -0x20(%rbp),%rcx
   1b72f:	jmpq   1b838 <png_combine_row+0x408>
   1b734:	lea    0x13095(%rip),%rsi        # 2e7d0 <display_mask.9+0x48>
   1b73b:	callq  5470 <png_error@plt>
   1b740:	mov    $0x6,%ecx
   1b745:	sub    %r10d,%ecx
   1b748:	shr    %ecx
   1b74a:	mov    %r9,%rdx
   1b74d:	shl    %cl,%edx
   1b74f:	mov    %edx,%ecx
   1b751:	cmp    %r8,%rcx
   1b754:	jbe    1b640 <png_combine_row+0x210>
   1b75a:	mov    %r8,%rdx
   1b75d:	jmpq   1b640 <png_combine_row+0x210>
   1b762:	cmp    $0x1,%edx
   1b765:	jne    1b777 <png_combine_row+0x347>
   1b767:	mov    %r9d,%ecx
   1b76a:	jmpq   1b877 <png_combine_row+0x447>
   1b76f:	mov    %r9d,%ecx
   1b772:	jmpq   1b89b <png_combine_row+0x46b>
   1b777:	mov    %r9d,%r10d
   1b77a:	cmp    $0xf,%edx
   1b77d:	jbe    1b8b4 <png_combine_row+0x484>
   1b783:	mov    %r14,-0x20(%rbp)
   1b787:	mov    %r13,-0x18(%rbp)
   1b78b:	mov    %r12,-0x10(%rbp)
   1b78f:	mov    %rbx,-0x8(%rbp)
   1b793:	mov    %r10,%rbx
   1b796:	jmpq   1b8da <png_combine_row+0x4aa>
   1b79b:	sub    %rcx,%r8
   1b79e:	add    %rcx,%r15
   1b7a1:	add    %rcx,%rax
   1b7a4:	movzbl (%r15),%edx
   1b7a8:	mov    %dl,(%rax)
   1b7aa:	movzbl 0x1(%r15),%edx
   1b7af:	mov    %dl,0x1(%rax)
   1b7b2:	movzbl 0x2(%r15),%edx
   1b7b7:	mov    %dl,0x2(%rax)
   1b7ba:	cmp    %r8,%rcx
   1b7bd:	jb     1b79b <png_combine_row+0x36b>
   1b7bf:	mov    -0x48(%rbp),%r15
   1b7c3:	leaveq 
   1b7c4:	retq   
   1b7c5:	test   %ebx,%ebx
   1b7c7:	jne    1b914 <png_combine_row+0x4e4>
   1b7cd:	cmp    $0x1,%r9b
   1b7d1:	jne    1b93b <png_combine_row+0x50b>
   1b7d7:	xor    %ecx,%ecx
   1b7d9:	lea    (%rcx,%r10,4),%rax
   1b7dd:	mov    (%rax,%r14,1),%edi
   1b7e1:	mov    -0x18(%rbp),%rax
   1b7e5:	mov    -0x20(%rbp),%rcx
   1b7e9:	jmp    1b838 <png_combine_row+0x408>
   1b7eb:	cmp    $0x1,%r9b
   1b7ef:	jne    1b94d <png_combine_row+0x51d>
   1b7f5:	xor    %r12d,%r12d
   1b7f8:	shr    %r10d
   1b7fb:	mov    %r10d,%ecx
   1b7fe:	lea    (%r12,%rcx,4),%rcx
   1b802:	mov    0x24(%rcx,%rax,1),%edi
   1b806:	mov    -0x18(%rbp),%rax
   1b80a:	mov    -0x20(%rbp),%rcx
   1b80e:	jmp    1b838 <png_combine_row+0x408>
   1b810:	cmp    $0x2,%r9b
   1b814:	jne    1b71e <png_combine_row+0x2ee>
   1b81a:	mov    %r12,%rcx
   1b81d:	jmpq   1b71e <png_combine_row+0x2ee>
   1b822:	sub    %rdx,%r8
   1b825:	add    $0x1,%r11
   1b829:	mov    %rdi,%rbx
   1b82c:	shr    $0x8,%ebx
   1b82f:	shl    $0x18,%edi
   1b832:	add    %ebx,%edi
   1b834:	add    $0x1,%rsi
   1b838:	movzbl %dil,%r9d
   1b83c:	test   %r9d,%r9d
   1b83f:	je     1b854 <png_combine_row+0x424>
   1b841:	cmp    $0xfe,%r9d
   1b848:	jbe    1b95f <png_combine_row+0x52f>
   1b84e:	movzbl (%r11),%ebx
   1b852:	mov    %bl,(%rsi)
   1b854:	cmp    %r8,%rdx
   1b857:	jb     1b822 <png_combine_row+0x3f2>
   1b859:	mov    -0x28(%rbp),%rbx
   1b85d:	mov    -0x30(%rbp),%r12
   1b861:	mov    -0x38(%rbp),%r13
   1b865:	mov    -0x40(%rbp),%r14
   1b869:	jmpq   1b581 <png_combine_row+0x151>
   1b86e:	sub    %rcx,%r8
   1b871:	add    %rcx,%r15
   1b874:	add    %rcx,%rax
   1b877:	movzbl (%r15),%edx
   1b87b:	mov    %dl,(%rax)
   1b87d:	cmp    %r8,%rcx
   1b880:	jb     1b86e <png_combine_row+0x43e>
   1b882:	mov    -0x48(%rbp),%r15
   1b886:	leaveq 
   1b887:	retq   
   1b888:	add    %rcx,%r15
   1b88b:	add    %rcx,%rax
   1b88e:	sub    %rcx,%r8
   1b891:	cmp    $0x1,%r8
   1b895:	jbe    1b97a <png_combine_row+0x54a>
   1b89b:	movzbl (%r15),%edx
   1b89f:	mov    %dl,(%rax)
   1b8a1:	movzbl 0x1(%r15),%edx
   1b8a6:	mov    %dl,0x1(%rax)
   1b8a9:	cmp    %r8,%rcx
   1b8ac:	jb     1b888 <png_combine_row+0x458>
   1b8ae:	mov    -0x48(%rbp),%r15
   1b8b2:	leaveq 
   1b8b3:	retq   
   1b8b4:	movzwl %ax,%ecx
   1b8b7:	and    $0x1,%ecx
   1b8ba:	test   %ecx,%ecx
   1b8bc:	je     1b986 <png_combine_row+0x556>
   1b8c2:	mov    %r14,-0x20(%rbp)
   1b8c6:	mov    %r13,-0x18(%rbp)
   1b8ca:	mov    %r12,-0x10(%rbp)
   1b8ce:	mov    %rbx,-0x8(%rbp)
   1b8d2:	mov    %r10,%rbx
   1b8d5:	jmp    1b8da <png_combine_row+0x4aa>
   1b8d7:	mov    %r8,%rdx
   1b8da:	mov    %rdx,-0x28(%rbp)
   1b8de:	mov    %edx,%r12d
   1b8e1:	mov    %r8,%r13
   1b8e4:	mov    %rax,%r14
   1b8e7:	mov    %r14,%rdi
   1b8ea:	mov    %r15,%rsi
   1b8ed:	mov    %r12,%rdx
   1b8f0:	callq  54c0 <memcpy@plt>
   1b8f5:	cmp    %r13,%rbx
   1b8f8:	jb     1b9a9 <png_combine_row+0x579>
   1b8fe:	mov    -0x8(%rbp),%rbx
   1b902:	mov    -0x10(%rbp),%r12
   1b906:	mov    -0x18(%rbp),%r13
   1b90a:	mov    -0x20(%rbp),%r14
   1b90e:	mov    -0x48(%rbp),%r15
   1b912:	leaveq 
   1b913:	retq   
   1b914:	cmp    $0x1,%r9b
   1b918:	jne    1b9c8 <png_combine_row+0x598>
   1b91e:	xor    %r12d,%r12d
   1b921:	shr    %r10d
   1b924:	mov    %r10d,%ecx
   1b927:	lea    (%r12,%rcx,4),%rcx
   1b92b:	mov    (%rcx,%rax,1),%edi
   1b92e:	mov    -0x18(%rbp),%rax
   1b932:	mov    -0x20(%rbp),%rcx
   1b936:	jmpq   1b838 <png_combine_row+0x408>
   1b93b:	cmp    $0x2,%r9b
   1b93f:	jne    1b7d9 <png_combine_row+0x3a9>
   1b945:	mov    %r12,%rcx
   1b948:	jmpq   1b7d9 <png_combine_row+0x3a9>
   1b94d:	cmp    $0x2,%r9b
   1b951:	jne    1b7f8 <png_combine_row+0x3c8>
   1b957:	mov    %r13,%r12
   1b95a:	jmpq   1b7f8 <png_combine_row+0x3c8>
   1b95f:	movzbl (%r11),%ebx
   1b963:	and    %r9b,%bl
   1b966:	not    %r9d
   1b969:	movzbl (%rsi),%r10d
   1b96d:	and    %r10b,%r9b
   1b970:	or     %r9b,%bl
   1b973:	mov    %bl,(%rsi)
   1b975:	jmpq   1b854 <png_combine_row+0x424>
   1b97a:	movzbl (%r15),%ecx
   1b97e:	mov    %cl,(%rax)
   1b980:	mov    -0x48(%rbp),%r15
   1b984:	leaveq 
   1b985:	retq   
   1b986:	movzwl %r15w,%ecx
   1b98a:	and    $0x1,%ecx
   1b98d:	test   %ecx,%ecx
   1b98f:	je     1b9da <png_combine_row+0x5aa>
   1b991:	mov    %r14,-0x20(%rbp)
   1b995:	mov    %r13,-0x18(%rbp)
   1b999:	mov    %r12,-0x10(%rbp)
   1b99d:	mov    %rbx,-0x8(%rbp)
   1b9a1:	mov    %r10,%rbx
   1b9a4:	jmpq   1b8da <png_combine_row+0x4aa>
   1b9a9:	lea    (%rbx,%r14,1),%rax
   1b9ad:	add    %rbx,%r15
   1b9b0:	mov    %r13,%r8
   1b9b3:	sub    %rbx,%r8
   1b9b6:	cmp    %r12,%r8
   1b9b9:	jb     1b8d7 <png_combine_row+0x4a7>
   1b9bf:	mov    -0x28(%rbp),%rdx
   1b9c3:	jmpq   1b8da <png_combine_row+0x4aa>
   1b9c8:	cmp    $0x2,%r9b
   1b9cc:	jne    1b921 <png_combine_row+0x4f1>
   1b9d2:	mov    %r13,%r12
   1b9d5:	jmpq   1b921 <png_combine_row+0x4f1>
   1b9da:	mov    %edx,%esi
   1b9dc:	mov    %rsi,%rcx
   1b9df:	and    $0x1,%rcx
   1b9e3:	test   %rcx,%rcx
   1b9e6:	je     1ba00 <png_combine_row+0x5d0>
   1b9e8:	mov    %r14,-0x20(%rbp)
   1b9ec:	mov    %r13,-0x18(%rbp)
   1b9f0:	mov    %r12,-0x10(%rbp)
   1b9f4:	mov    %rbx,-0x8(%rbp)
   1b9f8:	mov    %r10,%rbx
   1b9fb:	jmpq   1b8da <png_combine_row+0x4aa>
   1ba00:	mov    %r10,%rcx
   1ba03:	and    $0x1,%rcx
   1ba07:	test   %rcx,%rcx
   1ba0a:	je     1ba24 <png_combine_row+0x5f4>
   1ba0c:	mov    %r14,-0x20(%rbp)
   1ba10:	mov    %r13,-0x18(%rbp)
   1ba14:	mov    %r12,-0x10(%rbp)
   1ba18:	mov    %rbx,-0x8(%rbp)
   1ba1c:	mov    %r10,%rbx
   1ba1f:	jmpq   1b8da <png_combine_row+0x4aa>
   1ba24:	mov    %rax,%rcx
   1ba27:	and    $0x3,%ecx
   1ba2a:	test   %ecx,%ecx
   1ba2c:	je     1ba3d <png_combine_row+0x60d>
   1ba2e:	sub    %edx,%r9d
   1ba31:	mov    %r9d,%edx
   1ba34:	and    $0xfffffffffffffffe,%rdx
   1ba38:	mov    %rsi,%rcx
   1ba3b:	jmp    1ba76 <png_combine_row+0x646>
   1ba3d:	mov    %r15,%rcx
   1ba40:	and    $0x3,%ecx
   1ba43:	test   %ecx,%ecx
   1ba45:	jne    1ba2e <png_combine_row+0x5fe>
   1ba47:	mov    %rsi,%rcx
   1ba4a:	and    $0x3,%rcx
   1ba4e:	test   %rcx,%rcx
   1ba51:	jne    1ba2e <png_combine_row+0x5fe>
   1ba53:	mov    %r10,%rcx
   1ba56:	and    $0x3,%rcx
   1ba5a:	test   %rcx,%rcx
   1ba5d:	jne    1ba2e <png_combine_row+0x5fe>
   1ba5f:	sub    %edx,%r9d
   1ba62:	mov    %r9d,%ecx
   1ba65:	and    $0xfffffffffffffffc,%rcx
   1ba69:	mov    %rsi,%rdx
   1ba6c:	jmp    1ba99 <png_combine_row+0x669>
   1ba6e:	add    $0x2,%r15
   1ba72:	add    $0x2,%rax
   1ba76:	movzwl (%r15),%edi
   1ba7a:	mov    %di,(%rax)
   1ba7d:	add    $0xfffffffffffffffe,%rcx
   1ba81:	test   %rcx,%rcx
   1ba84:	jne    1ba6e <png_combine_row+0x63e>
   1ba86:	cmp    %r8,%r10
   1ba89:	jb     1bab2 <png_combine_row+0x682>
   1ba8b:	mov    -0x48(%rbp),%r15
   1ba8f:	leaveq 
   1ba90:	retq   
   1ba91:	add    $0x4,%r15
   1ba95:	add    $0x4,%rax
   1ba99:	mov    (%r15),%edi
   1ba9c:	mov    %edi,(%rax)
   1ba9e:	add    $0xfffffffffffffffc,%rdx
   1baa2:	test   %rdx,%rdx
   1baa5:	jne    1ba91 <png_combine_row+0x661>
   1baa7:	cmp    %r8,%r10
   1baaa:	jb     1bac9 <png_combine_row+0x699>
   1baac:	mov    -0x48(%rbp),%r15
   1bab0:	leaveq 
   1bab1:	retq   
   1bab2:	lea    0x2(%r15,%rdx,1),%r15
   1bab7:	lea    0x2(%rax,%rdx,1),%rax
   1babc:	sub    %r10,%r8
   1babf:	cmp    %rsi,%r8
   1bac2:	jb     1bae8 <png_combine_row+0x6b8>
   1bac4:	mov    %rsi,%rcx
   1bac7:	jmp    1ba76 <png_combine_row+0x646>
   1bac9:	lea    0x4(%r15,%rcx,1),%r15
   1bace:	lea    0x4(%rax,%rcx,1),%rax
   1bad3:	sub    %r10,%r8
   1bad6:	cmp    %rsi,%r8
   1bad9:	jb     1bb05 <png_combine_row+0x6d5>
   1badb:	mov    %rsi,%rdx
   1bade:	jmp    1ba99 <png_combine_row+0x669>
   1bae0:	add    $0x1,%r15
   1bae4:	add    $0x1,%rax
   1bae8:	movzbl (%r15),%ecx
   1baec:	mov    %cl,(%rax)
   1baee:	add    $0xffffffffffffffff,%r8
   1baf2:	test   %r8,%r8
   1baf5:	jne    1bae0 <png_combine_row+0x6b0>
   1baf7:	mov    -0x48(%rbp),%r15
   1bafb:	leaveq 
   1bafc:	retq   
   1bafd:	add    $0x1,%r15
   1bb01:	add    $0x1,%rax
   1bb05:	movzbl (%r15),%ecx
   1bb09:	mov    %cl,(%rax)
   1bb0b:	add    $0xffffffffffffffff,%r8
   1bb0f:	test   %r8,%r8
   1bb12:	jne    1bafd <png_combine_row+0x6cd>
   1bb14:	mov    -0x48(%rbp),%r15
   1bb18:	leaveq 
   1bb19:	retq   
   1bb1a:	nopw   0x0(%rax,%rax,1)

000000000001bb20 <png_do_read_interlace>:
   1bb20:	push   %rbp
   1bb21:	mov    %rsp,%rbp
   1bb24:	sub    $0x60,%rsp
   1bb28:	test   %rsi,%rsi
   1bb2b:	jne    1bb2f <png_do_read_interlace+0xf>
   1bb2d:	leaveq 
   1bb2e:	retq   
   1bb2f:	test   %rdi,%rdi
   1bb32:	jne    1bb36 <png_do_read_interlace+0x16>
   1bb34:	leaveq 
   1bb35:	retq   
   1bb36:	lea    0x12cb7(%rip),%r8        # 2e7f4 <png_pass_inc.11>
   1bb3d:	movslq %edx,%rax
   1bb40:	mov    (%r8,%rax,4),%r8d
   1bb44:	mov    (%rdi),%edx
   1bb46:	mov    %r8,%r11
   1bb49:	imul   %edx,%r11d
   1bb4d:	mov    %r11,-0x8(%rbp)
   1bb51:	xor    %eax,%eax
   1bb53:	movzbl 0x13(%rdi),%r9d
   1bb58:	cmp    $0x1,%r9b
   1bb5c:	jbe    1bbf0 <png_do_read_interlace+0xd0>
   1bb62:	cmp    $0x2,%r9b
   1bb66:	je     1bc43 <png_do_read_interlace+0x123>
   1bb6c:	cmp    $0x4,%r9b
   1bb70:	jne    1bbfa <png_do_read_interlace+0xda>
   1bb76:	mov    $0xf0f,%r9d
   1bb7c:	mov    $0x4,%r10d
   1bb82:	mov    %r15,-0x30(%rbp)
   1bb86:	lea    -0x1(%rdx),%r15d
   1bb8a:	shr    %r15d
   1bb8d:	mov    %r15d,%r15d
   1bb90:	add    %rsi,%r15
   1bb93:	mov    %r14,-0x28(%rbp)
   1bb97:	lea    -0x1(%r11),%r14d
   1bb9b:	shr    %r14d
   1bb9e:	mov    %r14d,%r14d
   1bba1:	add    %r14,%rsi
   1bba4:	and    $0x10000,%ecx
   1bbaa:	test   %ecx,%ecx
   1bbac:	jne    1bcb9 <png_do_read_interlace+0x199>
   1bbb2:	mov    $0xfffffffe,%ecx
   1bbb7:	mov    %rcx,%r14
   1bbba:	sub    %edx,%r14d
   1bbbd:	and    $0x1,%r14d
   1bbc1:	neg    %r14d
   1bbc4:	and    $0x4,%r14d
   1bbc8:	sub    %r11d,%ecx
   1bbcb:	and    $0x1,%ecx
   1bbce:	neg    %ecx
   1bbd0:	and    $0x4,%ecx
   1bbd3:	mov    %rbx,-0x10(%rbp)
   1bbd7:	mov    %r12,-0x18(%rbp)
   1bbdb:	mov    %r13,-0x20(%rbp)
   1bbdf:	mov    %rax,%r12
   1bbe2:	mov    %r12,%r13
   1bbe5:	mov    %r10,%rbx
   1bbe8:	mov    %rbx,%r11
   1bbeb:	jmpq   1bd07 <png_do_read_interlace+0x1e7>
   1bbf0:	cmp    $0x1,%r9b
   1bbf4:	je     1bd32 <png_do_read_interlace+0x212>
   1bbfa:	lea    -0x60(%rbp),%r10
   1bbfe:	shr    $0x3,%r9d
   1bc02:	movslq %r9d,%r9
   1bc05:	lea    -0x1(%rdx),%ecx
   1bc08:	mov    %ecx,%ecx
   1bc0a:	imul   %r9,%rcx
   1bc0e:	add    %rsi,%rcx
   1bc11:	lea    -0x1(%r11),%edx
   1bc15:	mov    %edx,%edx
   1bc17:	imul   %r9,%rdx
   1bc1b:	add    %rsi,%rdx
   1bc1e:	mov    %r15,-0x30(%rbp)
   1bc22:	mov    %r14,-0x28(%rbp)
   1bc26:	mov    %rbx,-0x10(%rbp)
   1bc2a:	mov    %r12,-0x18(%rbp)
   1bc2e:	mov    %r13,-0x20(%rbp)
   1bc32:	mov    %rdx,%rbx
   1bc35:	mov    %r10,%r12
   1bc38:	mov    %r9,%r13
   1bc3b:	mov    %rax,%r9
   1bc3e:	jmpq   1bdda <png_do_read_interlace+0x2ba>
   1bc43:	mov    $0x3f3f,%r9d
   1bc49:	mov    $0x6,%r10d
   1bc4f:	mov    %r15,-0x30(%rbp)
   1bc53:	lea    -0x1(%rdx),%r15d
   1bc57:	shr    $0x2,%r15d
   1bc5b:	mov    %r15d,%r15d
   1bc5e:	add    %rsi,%r15
   1bc61:	mov    %r14,-0x28(%rbp)
   1bc65:	lea    -0x1(%r11),%r14d
   1bc69:	shr    $0x2,%r14d
   1bc6d:	mov    %r14d,%r14d
   1bc70:	add    %r14,%rsi
   1bc73:	and    $0x10000,%ecx
   1bc79:	test   %ecx,%ecx
   1bc7b:	jne    1be0d <png_do_read_interlace+0x2ed>
   1bc81:	mov    $0xfffffffc,%ecx
   1bc86:	neg    %edx
   1bc88:	add    %ecx,%edx
   1bc8a:	and    $0x3,%edx
   1bc8d:	lea    (%rdx,%rdx,1),%r14d
   1bc91:	sub    %r11d,%ecx
   1bc94:	and    $0x3,%ecx
   1bc97:	add    %ecx,%ecx
   1bc99:	mov    $0x2,%r11d
   1bc9f:	mov    %rbx,-0x10(%rbp)
   1bca3:	mov    %r12,-0x18(%rbp)
   1bca7:	mov    %r13,-0x20(%rbp)
   1bcab:	mov    %rax,%rbx
   1bcae:	mov    %rbx,%r13
   1bcb1:	mov    %r10,%r12
   1bcb4:	jmpq   1be53 <png_do_read_interlace+0x333>
   1bcb9:	lea    0x1(%rdx),%r14d
   1bcbd:	and    $0x1,%r14d
   1bcc1:	neg    %r14d
   1bcc4:	and    $0x4,%r14d
   1bcc8:	lea    0x1(%r11),%ecx
   1bccc:	and    $0x1,%ecx
   1bccf:	neg    %ecx
   1bcd1:	and    $0x4,%ecx
   1bcd4:	mov    $0xfffffffffffffffc,%r11
   1bcdb:	mov    %rbx,-0x10(%rbp)
   1bcdf:	mov    %r12,-0x18(%rbp)
   1bce3:	mov    %r13,-0x20(%rbp)
   1bce7:	mov    %rax,%rbx
   1bcea:	mov    %rbx,%r13
   1bced:	mov    %r10,%r12
   1bcf0:	jmp    1bd07 <png_do_read_interlace+0x1e7>
   1bcf2:	mov    -0x50(%rbp),%rax
   1bcf6:	lea    -0x1(%rax),%r15
   1bcfa:	mov    %r12,%r14
   1bcfd:	mov    -0x58(%rbp),%rax
   1bd01:	lea    0x1(%rax),%r13d
   1bd05:	xor    %eax,%eax
   1bd07:	mov    (%rdi),%edx
   1bd09:	cmp    %r13d,%edx
   1bd0c:	jbe    1be7a <png_do_read_interlace+0x35a>
   1bd12:	xchg   %rcx,%r14
   1bd15:	movzbl (%r15),%edx
   1bd19:	shr    %cl,%edx
   1bd1b:	mov    %rcx,-0x48(%rbp)
   1bd1f:	and    $0xf,%dl
   1bd22:	mov    %r15,-0x50(%rbp)
   1bd26:	mov    %r13,-0x58(%rbp)
   1bd2a:	mov    %r14,%rcx
   1bd2d:	jmpq   1bea9 <png_do_read_interlace+0x389>
   1bd32:	mov    $0x7f7f,%r9d
   1bd38:	mov    $0x7,%r10d
   1bd3e:	mov    %r15,-0x30(%rbp)
   1bd42:	lea    -0x1(%rdx),%r15d
   1bd46:	shr    $0x3,%r15d
   1bd4a:	mov    %r15d,%r15d
   1bd4d:	add    %rsi,%r15
   1bd50:	mov    %r14,-0x28(%rbp)
   1bd54:	lea    -0x1(%r11),%r14d
   1bd58:	shr    $0x3,%r14d
   1bd5c:	mov    %r14d,%r14d
   1bd5f:	add    %r14,%rsi
   1bd62:	and    $0x10000,%ecx
   1bd68:	test   %ecx,%ecx
   1bd6a:	jne    1becb <png_do_read_interlace+0x3ab>
   1bd70:	mov    $0xfffffff8,%ecx
   1bd75:	mov    %rcx,%r14
   1bd78:	sub    %edx,%r14d
   1bd7b:	and    $0x7,%r14d
   1bd7f:	sub    %r11d,%ecx
   1bd82:	and    $0x7,%ecx
   1bd85:	mov    $0x1,%r11d
   1bd8b:	mov    %rbx,-0x10(%rbp)
   1bd8f:	mov    %r12,-0x18(%rbp)
   1bd93:	mov    %r13,-0x20(%rbp)
   1bd97:	mov    %rax,%r12
   1bd9a:	mov    %r12,%r13
   1bd9d:	mov    %r10,%rbx
   1bda0:	jmpq   1bf0d <png_do_read_interlace+0x3ed>
   1bda5:	mov    %r8,%r15
   1bda8:	mov    %rbx,%rdi
   1bdab:	mov    %r12,%rsi
   1bdae:	mov    %r13,%rdx
   1bdb1:	callq  54c0 <memcpy@plt>
   1bdb6:	sub    %r13,%rbx
   1bdb9:	add    $0x1,%r14d
   1bdbd:	mov    %r15,%r8
   1bdc0:	cmp    %r14d,%r8d
   1bdc3:	jg     1bda5 <png_do_read_interlace+0x285>
   1bdc5:	mov    -0x50(%rbp),%rcx
   1bdc9:	sub    %r13,%rcx
   1bdcc:	mov    -0x58(%rbp),%rax
   1bdd0:	lea    0x1(%rax),%r9d
   1bdd4:	xor    %eax,%eax
   1bdd6:	mov    -0x48(%rbp),%rdi
   1bdda:	mov    (%rdi),%edx
   1bddc:	cmp    %r9d,%edx
   1bddf:	jbe    1be7a <png_do_read_interlace+0x35a>
   1bde5:	mov    %r12,%r10
   1bde8:	mov    %rcx,%rsi
   1bdeb:	mov    %r13,%rdx
   1bdee:	mov    %rcx,-0x50(%rbp)
   1bdf2:	mov    %r9,-0x58(%rbp)
   1bdf6:	mov    %rdi,-0x48(%rbp)
   1bdfa:	mov    %r10,%rdi
   1bdfd:	mov    %rax,%r14
   1be00:	mov    %r8,%r15
   1be03:	callq  54c0 <memcpy@plt>
   1be08:	mov    %r15,%r8
   1be0b:	jmp    1bdc0 <png_do_read_interlace+0x2a0>
   1be0d:	lea    0x3(%rdx),%ecx
   1be10:	and    $0x3,%ecx
   1be13:	lea    (%rcx,%rcx,1),%r14d
   1be17:	lea    0x3(%r11),%ecx
   1be1b:	and    $0x3,%ecx
   1be1e:	add    %ecx,%ecx
   1be20:	mov    $0xfffffffffffffffe,%r11
   1be27:	mov    %rbx,-0x10(%rbp)
   1be2b:	mov    %r12,-0x18(%rbp)
   1be2f:	mov    %r13,-0x20(%rbp)
   1be33:	mov    %rax,%r12
   1be36:	mov    %r12,%r13
   1be39:	mov    %r10,%rbx
   1be3c:	jmp    1be53 <png_do_read_interlace+0x333>
   1be3e:	mov    -0x40(%rbp),%rax
   1be42:	lea    -0x1(%rax),%r15
   1be46:	mov    %rbx,%r14
   1be49:	mov    -0x58(%rbp),%rax
   1be4d:	lea    0x1(%rax),%r13d
   1be51:	xor    %eax,%eax
   1be53:	mov    (%rdi),%edx
   1be55:	cmp    %r13d,%edx
   1be58:	jbe    1be7a <png_do_read_interlace+0x35a>
   1be5a:	xchg   %rcx,%r14
   1be5d:	movzbl (%r15),%edx
   1be61:	shr    %cl,%edx
   1be63:	mov    %rcx,-0x38(%rbp)
   1be67:	and    $0x3,%dl
   1be6a:	mov    %r15,-0x40(%rbp)
   1be6e:	mov    %r13,-0x58(%rbp)
   1be72:	mov    %r14,%rcx
   1be75:	jmpq   1bf42 <png_do_read_interlace+0x422>
   1be7a:	mov    -0x8(%rbp),%rcx
   1be7e:	mov    %ecx,(%rdi)
   1be80:	movzbl 0x13(%rdi),%eax
   1be84:	cmp    $0x7,%al
   1be86:	ja     1bf65 <png_do_read_interlace+0x445>
   1be8c:	mov    %ecx,%ecx
   1be8e:	imul   %rcx,%rax
   1be92:	add    $0x7,%rax
   1be96:	shr    $0x3,%rax
   1be9a:	jmpq   1bf6f <png_do_read_interlace+0x44f>
   1be9f:	add    $0xffffffffffffffff,%rsi
   1bea3:	mov    %r12,%rcx
   1bea6:	add    $0x1,%eax
   1bea9:	cmp    %eax,%r8d
   1beac:	jg     1bf89 <png_do_read_interlace+0x469>
   1beb2:	mov    -0x48(%rbp),%rax
   1beb6:	cmp    %eax,%ebx
   1beb8:	je     1bcf2 <png_do_read_interlace+0x1d2>
   1bebe:	lea    (%rax,%r11,1),%r14d
   1bec2:	mov    -0x50(%rbp),%r15
   1bec6:	jmpq   1bcfd <png_do_read_interlace+0x1dd>
   1becb:	lea    0x7(%rdx),%r14d
   1becf:	and    $0x7,%r14d
   1bed3:	lea    0x7(%r11),%ecx
   1bed7:	and    $0x7,%ecx
   1beda:	mov    $0xffffffffffffffff,%r11
   1bee1:	mov    %rbx,-0x10(%rbp)
   1bee5:	mov    %r12,-0x18(%rbp)
   1bee9:	mov    %r13,-0x20(%rbp)
   1beed:	mov    %rax,%rbx
   1bef0:	mov    %rbx,%r13
   1bef3:	mov    %r10,%r12
   1bef6:	jmp    1bf0d <png_do_read_interlace+0x3ed>
   1bef8:	mov    -0x40(%rbp),%rax
   1befc:	lea    -0x1(%rax),%r15
   1bf00:	mov    %r12,%r14
   1bf03:	mov    -0x58(%rbp),%rax
   1bf07:	lea    0x1(%rax),%r13d
   1bf0b:	xor    %eax,%eax
   1bf0d:	mov    (%rdi),%edx
   1bf0f:	cmp    %r13d,%edx
   1bf12:	jbe    1be7a <png_do_read_interlace+0x35a>
   1bf18:	xchg   %rcx,%r14
   1bf1b:	movzbl (%r15),%edx
   1bf1f:	shr    %cl,%edx
   1bf21:	mov    %rcx,-0x38(%rbp)
   1bf25:	and    $0x1,%dl
   1bf28:	mov    %r15,-0x40(%rbp)
   1bf2c:	mov    %r13,-0x58(%rbp)
   1bf30:	mov    %r14,%rcx
   1bf33:	jmpq   1bfc6 <png_do_read_interlace+0x4a6>
   1bf38:	add    $0xffffffffffffffff,%rsi
   1bf3c:	mov    %rbx,%rcx
   1bf3f:	add    $0x1,%eax
   1bf42:	cmp    %eax,%r8d
   1bf45:	jg     1bfe4 <png_do_read_interlace+0x4c4>
   1bf4b:	mov    -0x38(%rbp),%rax
   1bf4f:	cmp    %eax,%r12d
   1bf52:	je     1be3e <png_do_read_interlace+0x31e>
   1bf58:	lea    (%rax,%r11,1),%r14d
   1bf5c:	mov    -0x40(%rbp),%r15
   1bf60:	jmpq   1be49 <png_do_read_interlace+0x329>
   1bf65:	shr    $0x3,%rax
   1bf69:	mov    %ecx,%ecx
   1bf6b:	imul   %rcx,%rax
   1bf6f:	mov    %rax,0x8(%rdi)
   1bf73:	mov    -0x20(%rbp),%r13
   1bf77:	mov    -0x18(%rbp),%r12
   1bf7b:	mov    -0x10(%rbp),%rbx
   1bf7f:	mov    -0x28(%rbp),%r14
   1bf83:	mov    -0x30(%rbp),%r15
   1bf87:	leaveq 
   1bf88:	retq   
   1bf89:	mov    %rdx,%r14
   1bf8c:	shl    %cl,%r14d
   1bf8f:	mov    %rcx,%r15
   1bf92:	mov    %r10,%rcx
   1bf95:	sub    %r15d,%ecx
   1bf98:	mov    %r9,%r13
   1bf9b:	shr    %cl,%r13d
   1bf9e:	movzbl (%rsi),%ecx
   1bfa1:	and    %cl,%r13b
   1bfa4:	or     %r13b,%r14b
   1bfa7:	mov    %r14b,(%rsi)
   1bfaa:	cmp    %r15d,%ebx
   1bfad:	je     1be9f <png_do_read_interlace+0x37f>
   1bfb3:	lea    (%r15,%r11,1),%ecx
   1bfb7:	jmpq   1bea6 <png_do_read_interlace+0x386>
   1bfbc:	add    $0xffffffffffffffff,%rsi
   1bfc0:	mov    %r12,%rcx
   1bfc3:	add    $0x1,%eax
   1bfc6:	cmp    %eax,%r8d
   1bfc9:	jg     1c017 <png_do_read_interlace+0x4f7>
   1bfcb:	mov    -0x38(%rbp),%rax
   1bfcf:	cmp    %eax,%ebx
   1bfd1:	je     1bef8 <png_do_read_interlace+0x3d8>
   1bfd7:	lea    (%rax,%r11,1),%r14d
   1bfdb:	mov    -0x40(%rbp),%r15
   1bfdf:	jmpq   1bf03 <png_do_read_interlace+0x3e3>
   1bfe4:	mov    %rdx,%r13
   1bfe7:	shl    %cl,%r13d
   1bfea:	mov    %rcx,%r15
   1bfed:	mov    %r10,%rcx
   1bff0:	sub    %r15d,%ecx
   1bff3:	mov    %r9,%r14
   1bff6:	shr    %cl,%r14d
   1bff9:	movzbl (%rsi),%ecx
   1bffc:	and    %cl,%r14b
   1bfff:	or     %r14b,%r13b
   1c002:	mov    %r13b,(%rsi)
   1c005:	cmp    %r15d,%r12d
   1c008:	je     1bf38 <png_do_read_interlace+0x418>
   1c00e:	lea    (%r15,%r11,1),%ecx
   1c012:	jmpq   1bf3f <png_do_read_interlace+0x41f>
   1c017:	mov    %rdx,%r13
   1c01a:	shl    %cl,%r13d
   1c01d:	mov    %rcx,%r15
   1c020:	mov    %r10,%rcx
   1c023:	sub    %r15d,%ecx
   1c026:	mov    %r9,%r14
   1c029:	shr    %cl,%r14d
   1c02c:	movzbl (%rsi),%ecx
   1c02f:	and    %cl,%r14b
   1c032:	or     %r14b,%r13b
   1c035:	mov    %r13b,(%rsi)
   1c038:	cmp    %r15d,%ebx
   1c03b:	je     1bfbc <png_do_read_interlace+0x49c>
   1c041:	lea    (%r15,%r11,1),%ecx
   1c045:	jmpq   1bfc3 <png_do_read_interlace+0x4a3>
   1c04a:	nopw   0x0(%rax,%rax,1)

000000000001c050 <png_read_filter_row>:
   1c050:	push   %rbp
   1c051:	mov    %rsp,%rbp
   1c054:	sub    $0x30,%rsp
   1c058:	test   %r8d,%r8d
   1c05b:	jg     1c05f <png_read_filter_row+0xf>
   1c05d:	leaveq 
   1c05e:	retq   
   1c05f:	cmp    $0x4,%r8d
   1c063:	jle    1c067 <png_read_filter_row+0x17>
   1c065:	leaveq 
   1c066:	retq   
   1c067:	mov    0x478(%rdi),%rax
   1c06e:	test   %rax,%rax
   1c071:	je     1c081 <png_read_filter_row+0x31>
   1c073:	mov    %rdi,%rax
   1c076:	mov    %rsi,%rdi
   1c079:	mov    %rdx,%rsi
   1c07c:	mov    %rcx,%rdx
   1c07f:	jmp    1c0d2 <png_read_filter_row+0x82>
   1c081:	mov    %rdi,%rax
   1c084:	mov    %rbx,-0x8(%rbp)
   1c088:	mov    %r12,-0x10(%rbp)
   1c08c:	mov    %r13,-0x18(%rbp)
   1c090:	mov    %r14,-0x20(%rbp)
   1c094:	mov    %r15,-0x28(%rbp)
   1c098:	mov    %rdi,%rbx
   1c09b:	mov    %rax,%rdi
   1c09e:	mov    %rdx,%r12
   1c0a1:	mov    %rcx,%r13
   1c0a4:	mov    %r8,%r14
   1c0a7:	mov    %rsi,%r15
   1c0aa:	callq  20dc0 <png_init_filter_functions>
   1c0af:	mov    %rbx,%rax
   1c0b2:	mov    %r13,%rdx
   1c0b5:	mov    %r12,%rsi
   1c0b8:	mov    %r15,%rdi
   1c0bb:	mov    %r14,%r8
   1c0be:	mov    -0x28(%rbp),%r15
   1c0c2:	mov    -0x20(%rbp),%r14
   1c0c6:	mov    -0x18(%rbp),%r13
   1c0ca:	mov    -0x10(%rbp),%r12
   1c0ce:	mov    -0x8(%rbp),%rbx
   1c0d2:	lea    -0x1(%r8),%ecx
   1c0d6:	movslq %ecx,%rcx
   1c0d9:	callq  *0x478(%rax,%rcx,8)
   1c0e0:	leaveq 
   1c0e1:	retq   
   1c0e2:	data16 nopw %cs:0x0(%rax,%rax,1)
   1c0ed:	nopl   (%rax)

000000000001c0f0 <png_read_IDAT_data>:
   1c0f0:	push   %rbp
   1c0f1:	mov    %rsp,%rbp
   1c0f4:	sub    $0x430,%rsp
   1c0fb:	mov    %rbx,-0x8(%rbp)
   1c0ff:	mov    %r12,-0x10(%rbp)
   1c103:	mov    %r13,-0x18(%rbp)
   1c107:	mov    %r14,-0x20(%rbp)
   1c10b:	mov    %r15,-0x28(%rbp)
   1c10f:	mov    %rsi,0x158(%rdi)
   1c116:	movl   $0x0,0x160(%rdi)
   1c120:	xor    %ebx,%ebx
   1c122:	mov    $0x400,%r15d
   1c128:	lea    -0x430(%rbp),%r14
   1c12f:	mov    $0xffffffff,%ecx
   1c134:	mov    $0x1,%eax
   1c139:	mov    $0xfffffffe,%r8d
   1c13f:	test   %rsi,%rsi
   1c142:	je     1c14c <png_read_IDAT_data+0x5c>
   1c144:	mov    %rdi,%r12
   1c147:	mov    %rsi,%r13
   1c14a:	jmp    1c17d <png_read_IDAT_data+0x8d>
   1c14c:	mov    %rdi,%r12
   1c14f:	mov    %rsi,%r13
   1c152:	mov    %rbx,%rdx
   1c155:	jmp    1c17d <png_read_IDAT_data+0x8d>
   1c157:	test   %eax,%eax
   1c159:	jne    1c1a9 <png_read_IDAT_data+0xb9>
   1c15b:	test   %rdx,%rdx
   1c15e:	je     1c262 <png_read_IDAT_data+0x172>
   1c164:	mov    $0x1,%eax
   1c169:	mov    $0xffffffff,%ecx
   1c16e:	mov    $0xfffffffe,%r8d
   1c174:	lea    -0x430(%rbp),%r14
   1c17b:	xor    %ebx,%ebx
   1c17d:	mov    0x148(%r12),%esi
   1c185:	test   %esi,%esi
   1c187:	je     1c27d <png_read_IDAT_data+0x18d>
   1c18d:	test   %r13,%r13
   1c190:	jne    1c286 <png_read_IDAT_data+0x196>
   1c196:	mov    %r14,0x158(%r12)
   1c19e:	mov    %rbx,%rax
   1c1a1:	mov    %r15,%rcx
   1c1a4:	jmpq   1c293 <png_read_IDAT_data+0x1a3>
   1c1a9:	mov    %rax,%rsi
   1c1ac:	mov    %r12,%rdi
   1c1af:	callq  6910 <png_zstream_error>
   1c1b4:	test   %r13,%r13
   1c1b7:	jne    1c2cc <png_read_IDAT_data+0x1dc>
   1c1bd:	mov    %r12,%rdi
   1c1c0:	mov    0x170(%rdi),%rsi
   1c1c7:	callq  5230 <png_chunk_benign_error@plt>
   1c1cc:	mov    -0x28(%rbp),%r15
   1c1d0:	mov    -0x20(%rbp),%r14
   1c1d4:	mov    -0x18(%rbp),%r13
   1c1d8:	mov    -0x10(%rbp),%r12
   1c1dc:	mov    -0x8(%rbp),%rbx
   1c1e0:	leaveq 
   1c1e1:	retq   
   1c1e2:	mov    0x160(%r12),%ecx
   1c1ea:	lea    (%rbx,%rcx,1),%rdx
   1c1ee:	movl   $0x0,0x160(%r12)
   1c1fa:	cmp    $0x1,%eax
   1c1fd:	jne    1c157 <png_read_IDAT_data+0x67>
   1c203:	movq   $0x0,0x158(%r12)
   1c20f:	mov    0x12c(%r12),%eax
   1c217:	or     $0x8,%eax
   1c21a:	mov    %eax,0x12c(%r12)
   1c222:	mov    0x130(%r12),%eax
   1c22a:	or     $0x8,%eax
   1c22d:	mov    %eax,0x130(%r12)
   1c235:	mov    0x148(%r12),%eax
   1c23d:	test   %eax,%eax
   1c23f:	jne    1c24d <png_read_IDAT_data+0x15d>
   1c241:	mov    0x248(%r12),%eax
   1c249:	test   %eax,%eax
   1c24b:	je     1c262 <png_read_IDAT_data+0x172>
   1c24d:	mov    %rdx,%rbx
   1c250:	lea    0x125cf(%rip),%rsi        # 2e826 <png_pass_inc.11+0x32>
   1c257:	mov    %r12,%rdi
   1c25a:	callq  5230 <png_chunk_benign_error@plt>
   1c25f:	mov    %rbx,%rdx
   1c262:	test   %rdx,%rdx
   1c265:	jne    1c2db <png_read_IDAT_data+0x1eb>
   1c267:	mov    -0x28(%rbp),%r15
   1c26b:	mov    -0x20(%rbp),%r14
   1c26f:	mov    -0x18(%rbp),%r13
   1c273:	mov    -0x10(%rbp),%r12
   1c277:	mov    -0x8(%rbp),%rbx
   1c27b:	leaveq 
   1c27c:	retq   
   1c27d:	mov    %rdx,-0x30(%rbp)
   1c281:	jmpq   1c337 <png_read_IDAT_data+0x247>
   1c286:	cmp    %r8,%rdx
   1c289:	ja     1c28e <png_read_IDAT_data+0x19e>
   1c28b:	mov    %rdx,%rcx
   1c28e:	mov    %ecx,%esi
   1c290:	sub    %rsi,%rdx
   1c293:	mov    %ecx,0x160(%r12)
   1c29b:	mov    %rbx,%rsi
   1c29e:	mov    %rdx,%rbx
   1c2a1:	mov    %rax,%r14
   1c2a4:	mov    %r12,%rdi
   1c2a7:	callq  1ca80 <png_zlib_inflate>
   1c2ac:	test   %r14,%r14
   1c2af:	jne    1c1e2 <png_read_IDAT_data+0xf2>
   1c2b5:	mov    0x160(%r12),%ecx
   1c2bd:	neg    %rcx
   1c2c0:	add    %r15,%rcx
   1c2c3:	lea    (%rcx,%rbx,1),%rdx
   1c2c7:	jmpq   1c1ee <png_read_IDAT_data+0xfe>
   1c2cc:	mov    %r12,%rdi
   1c2cf:	mov    0x170(%rdi),%rsi
   1c2d6:	callq  5060 <png_chunk_error@plt>
   1c2db:	test   %r13,%r13
   1c2de:	jne    1c3b6 <png_read_IDAT_data+0x2c6>
   1c2e4:	mov    %r12,%rdi
   1c2e7:	lea    0x1254e(%rip),%rsi        # 2e83c <png_pass_inc.11+0x48>
   1c2ee:	callq  5230 <png_chunk_benign_error@plt>
   1c2f3:	mov    -0x28(%rbp),%r15
   1c2f7:	mov    -0x20(%rbp),%r14
   1c2fb:	mov    -0x18(%rbp),%r13
   1c2ff:	mov    -0x10(%rbp),%r12
   1c303:	mov    -0x8(%rbp),%rbx
   1c307:	leaveq 
   1c308:	retq   
   1c309:	mov    %r12,%rdi
   1c30c:	mov    %rbx,%rsi
   1c30f:	callq  1b270 <png_crc_finish>
   1c314:	mov    %r12,%rdi
   1c317:	callq  1b160 <png_read_chunk_header>
   1c31c:	mov    %eax,0x248(%r12)
   1c324:	mov    0x218(%r12),%eax
   1c32c:	cmp    $0x49444154,%eax
   1c331:	jne    1c3c5 <png_read_IDAT_data+0x2d5>
   1c337:	mov    0x248(%r12),%eax
   1c33f:	test   %eax,%eax
   1c341:	je     1c309 <png_read_IDAT_data+0x219>
   1c343:	mov    0x468(%r12),%r15d
   1c34b:	cmp    %r15d,%eax
   1c34e:	jae    1c353 <png_read_IDAT_data+0x263>
   1c350:	mov    %rax,%r15
   1c353:	mov    %rbx,%rdx
   1c356:	mov    %r15d,%esi
   1c359:	mov    %r12,%rdi
   1c35c:	callq  200a0 <png_read_buffer>
   1c361:	mov    %rax,%rbx
   1c364:	mov    %r12,%rdi
   1c367:	mov    %rbx,%rsi
   1c36a:	mov    %r15,%rdx
   1c36d:	callq  1b210 <png_crc_read>
   1c372:	mov    0x248(%r12),%eax
   1c37a:	sub    %r15d,%eax
   1c37d:	mov    %eax,0x248(%r12)
   1c385:	mov    %rbx,0x140(%r12)
   1c38d:	mov    %r15d,0x148(%r12)
   1c395:	mov    -0x30(%rbp),%rdx
   1c399:	mov    $0x1,%eax
   1c39e:	mov    $0xffffffff,%ecx
   1c3a3:	mov    $0xfffffffe,%r8d
   1c3a9:	xor    %ebx,%ebx
   1c3ab:	mov    $0x400,%r15d
   1c3b1:	jmpq   1c18d <png_read_IDAT_data+0x9d>
   1c3b6:	mov    %r12,%rdi
   1c3b9:	lea    0x12450(%rip),%rsi        # 2e810 <png_pass_inc.11+0x1c>
   1c3c0:	callq  5470 <png_error@plt>
   1c3c5:	mov    %r12,%rdi
   1c3c8:	lea    0x12441(%rip),%rsi        # 2e810 <png_pass_inc.11+0x1c>
   1c3cf:	callq  5470 <png_error@plt>
   1c3d4:	data16 nopw %cs:0x0(%rax,%rax,1)
   1c3df:	nop

000000000001c3e0 <png_read_finish_IDAT>:
   1c3e0:	push   %rbp
   1c3e1:	mov    %rsp,%rbp
   1c3e4:	sub    $0x10,%rsp
   1c3e8:	mov    0x130(%rdi),%eax
   1c3ee:	and    $0x8,%eax
   1c3f1:	test   %eax,%eax
   1c3f3:	je     1c404 <png_read_finish_IDAT+0x24>
   1c3f5:	mov    0x138(%rdi),%eax
   1c3fb:	cmp    $0x49444154,%eax
   1c400:	je     1c440 <png_read_finish_IDAT+0x60>
   1c402:	leaveq 
   1c403:	retq   
   1c404:	xor    %esi,%esi
   1c406:	mov    %rsi,%rdx
   1c409:	mov    %rdi,%rax
   1c40c:	mov    %r15,-0x8(%rbp)
   1c410:	mov    %rdi,%r15
   1c413:	mov    %rax,%rdi
   1c416:	callq  1c0f0 <png_read_IDAT_data>
   1c41b:	movq   $0x0,0x158(%r15)
   1c426:	mov    0x130(%r15),%eax
   1c42d:	mov    %rax,%rcx
   1c430:	and    $0x8,%ecx
   1c433:	test   %ecx,%ecx
   1c435:	je     1c46c <png_read_finish_IDAT+0x8c>
   1c437:	mov    %r15,%rdi
   1c43a:	mov    -0x8(%rbp),%r15
   1c43e:	jmp    1c3f5 <png_read_finish_IDAT+0x15>
   1c440:	movq   $0x0,0x140(%rdi)
   1c44b:	movl   $0x0,0x148(%rdi)
   1c455:	movl   $0x0,0x138(%rdi)
   1c45f:	mov    0x248(%rdi),%esi
   1c465:	callq  1b270 <png_crc_finish>
   1c46a:	leaveq 
   1c46b:	retq   
   1c46c:	mov    0x12c(%r15),%ecx
   1c473:	or     $0x8,%ecx
   1c476:	mov    %ecx,0x12c(%r15)
   1c47d:	or     $0x8,%eax
   1c480:	mov    %eax,0x130(%r15)
   1c487:	mov    %r15,%rdi
   1c48a:	mov    -0x8(%rbp),%r15
   1c48e:	jmpq   1c3f5 <png_read_finish_IDAT+0x15>
   1c493:	data16 nopw %cs:0x0(%rax,%rax,1)
   1c49e:	xchg   %ax,%ax

000000000001c4a0 <png_read_finish_row>:
   1c4a0:	push   %rbp
   1c4a1:	mov    %rsp,%rbp
   1c4a4:	sub    $0x10,%rsp
   1c4a8:	mov    0x214(%rdi),%eax
   1c4ae:	add    $0x1,%eax
   1c4b1:	mov    %eax,0x214(%rdi)
   1c4b7:	mov    0x200(%rdi),%ecx
   1c4bd:	cmp    %eax,%ecx
   1c4bf:	jbe    1c4c3 <png_read_finish_row+0x23>
   1c4c1:	leaveq 
   1c4c2:	retq   
   1c4c3:	movzbl 0x264(%rdi),%eax
   1c4ca:	test   %al,%al
   1c4cc:	jne    1c4d5 <png_read_finish_row+0x35>
   1c4ce:	callq  1c3e0 <png_read_finish_IDAT>
   1c4d3:	leaveq 
   1c4d4:	retq   
   1c4d5:	movl   $0x0,0x214(%rdi)
   1c4df:	mov    0x220(%rdi),%rax
   1c4e6:	xor    %esi,%esi
   1c4e8:	mov    0x208(%rdi),%rdx
   1c4ef:	add    $0x1,%rdx
   1c4f3:	mov    %r15,-0x8(%rbp)
   1c4f7:	mov    %rdi,%r15
   1c4fa:	mov    %rax,%rdi
   1c4fd:	callq  5350 <memset@plt>
   1c502:	mov    %r15,%rdi
   1c505:	lea    0x1234b(%rip),%rcx        # 2e857 <png_pass_inc.16>
   1c50c:	lea    0x1233d(%rip),%rsi        # 2e850 <png_pass_start.15>
   1c513:	lea    0x1234b(%rip),%r8        # 2e865 <png_pass_yinc.18>
   1c51a:	lea    0x1233d(%rip),%r9        # 2e85e <png_pass_ystart.17>
   1c521:	jmp    1c58b <png_read_finish_row+0xeb>
   1c523:	movzbl %al,%edx
   1c526:	movzbl (%rdx,%rcx,1),%r10d
   1c52b:	mov    0x1f8(%rdi),%eax
   1c531:	lea    -0x1(%r10,%rax,1),%eax
   1c536:	movzbl (%rdx,%rsi,1),%edx
   1c53a:	sub    %edx,%eax
   1c53c:	xor    %edx,%edx
   1c53e:	div    %r10d
   1c541:	mov    %eax,0x210(%rdi)
   1c547:	mov    0x134(%rdi),%eax
   1c54d:	and    $0x2,%eax
   1c550:	test   %eax,%eax
   1c552:	jne    1c59f <png_read_finish_row+0xff>
   1c554:	movzbl 0x265(%rdi),%edx
   1c55b:	movzbl (%rdx,%r8,1),%r10d
   1c560:	mov    0x1fc(%rdi),%eax
   1c566:	lea    -0x1(%r10,%rax,1),%eax
   1c56b:	movzbl (%rdx,%r9,1),%edx
   1c570:	sub    %edx,%eax
   1c572:	xor    %edx,%edx
   1c574:	div    %r10d
   1c577:	mov    %eax,0x200(%rdi)
   1c57d:	test   %eax,%eax
   1c57f:	je     1c58b <png_read_finish_row+0xeb>
   1c581:	mov    0x210(%rdi),%eax
   1c587:	test   %eax,%eax
   1c589:	jne    1c59f <png_read_finish_row+0xff>
   1c58b:	movzbl 0x265(%rdi),%eax
   1c592:	add    $0x1,%eax
   1c595:	mov    %al,0x265(%rdi)
   1c59b:	cmp    $0x6,%al
   1c59d:	jbe    1c523 <png_read_finish_row+0x83>
   1c59f:	movzbl 0x265(%rdi),%eax
   1c5a6:	cmp    $0x6,%al
   1c5a8:	jbe    1c5b3 <png_read_finish_row+0x113>
   1c5aa:	mov    -0x8(%rbp),%r15
   1c5ae:	jmpq   1c4ce <png_read_finish_row+0x2e>
   1c5b3:	mov    -0x8(%rbp),%r15
   1c5b7:	leaveq 
   1c5b8:	retq   
   1c5b9:	nopl   0x0(%rax)

000000000001c5c0 <png_read_start_row>:
   1c5c0:	push   %rbp
   1c5c1:	mov    %rsp,%rbp
   1c5c4:	sub    $0x10,%rsp
   1c5c8:	mov    %r15,-0x10(%rbp)
   1c5cc:	mov    %r14,%r15
   1c5cf:	mov    %r13,%r14
   1c5d2:	mov    %r12,%r13
   1c5d5:	mov    %rbx,%r12
   1c5d8:	mov    %rdi,%rbx
   1c5db:	callq  16850 <png_init_read_transformations>
   1c5e0:	movzbl 0x264(%rbx),%eax
   1c5e7:	test   %al,%al
   1c5e9:	jne    1c605 <png_read_start_row+0x45>
   1c5eb:	mov    0x1fc(%rbx),%eax
   1c5f1:	mov    %eax,0x200(%rbx)
   1c5f7:	mov    0x1f8(%rbx),%eax
   1c5fd:	mov    %eax,0x210(%rbx)
   1c603:	jmp    1c665 <png_read_start_row+0xa5>
   1c605:	mov    0x134(%rbx),%eax
   1c60b:	and    $0x2,%eax
   1c60e:	test   %eax,%eax
   1c610:	je     1c620 <png_read_start_row+0x60>
   1c612:	mov    0x1fc(%rbx),%eax
   1c618:	mov    %eax,0x200(%rbx)
   1c61e:	jmp    1c632 <png_read_start_row+0x72>
   1c620:	mov    0x1fc(%rbx),%eax
   1c626:	add    $0x7,%eax
   1c629:	shr    $0x3,%eax
   1c62c:	mov    %eax,0x200(%rbx)
   1c632:	movzbl 0x265(%rbx),%esi
   1c639:	lea    0x12233(%rip),%rax        # 2e873 <png_pass_inc.20>
   1c640:	movzbl (%rsi,%rax,1),%ecx
   1c644:	mov    0x1f8(%rbx),%eax
   1c64a:	lea    -0x1(%rcx,%rax,1),%eax
   1c64e:	lea    0x12217(%rip),%rdx        # 2e86c <png_pass_start.19>
   1c655:	movzbl (%rsi,%rdx,1),%edx
   1c659:	sub    %edx,%eax
   1c65b:	xor    %edx,%edx
   1c65d:	div    %ecx
   1c65f:	mov    %eax,0x210(%rbx)
   1c665:	movzbl 0x26a(%rbx),%edx
   1c66c:	mov    $0x8,%edi
   1c671:	mov    0x134(%rbx),%eax
   1c677:	and    $0x4,%eax
   1c67a:	test   %eax,%eax
   1c67c:	jne    1c730 <png_read_start_row+0x170>
   1c682:	mov    $0x20,%ecx
   1c687:	mov    $0x18,%esi
   1c68c:	mov    0x134(%rbx),%eax
   1c692:	and    $0x1000,%eax
   1c697:	test   %eax,%eax
   1c699:	jne    1c747 <png_read_start_row+0x187>
   1c69f:	mov    0x134(%rbx),%eax
   1c6a5:	mov    %rax,%rdi
   1c6a8:	and    $0x200,%edi
   1c6ae:	test   %edi,%edi
   1c6b0:	jne    1c787 <png_read_start_row+0x1c7>
   1c6b6:	mov    $0x40,%r8d
   1c6bc:	mov    0x134(%rbx),%eax
   1c6c2:	and    $0x8000,%eax
   1c6c7:	test   %eax,%eax
   1c6c9:	jne    1c7a8 <png_read_start_row+0x1e8>
   1c6cf:	mov    0x134(%rbx),%eax
   1c6d5:	mov    %rax,%rdi
   1c6d8:	and    $0x4000,%edi
   1c6de:	test   %edi,%edi
   1c6e0:	jne    1c7d4 <png_read_start_row+0x214>
   1c6e6:	mov    0x134(%rbx),%eax
   1c6ec:	and    $0x100000,%eax
   1c6f1:	test   %eax,%eax
   1c6f3:	jne    1c81b <png_read_start_row+0x25b>
   1c6f9:	mov    0x1f8(%rbx),%eax
   1c6ff:	add    $0x7,%eax
   1c702:	and    $0xfffffff8,%eax
   1c705:	mov    %eax,%eax
   1c707:	mov    %edx,%ecx
   1c709:	mov    %dl,0x26e(%rbx)
   1c70f:	movb   $0x0,0x26f(%rbx)
   1c716:	cmp    $0x7,%edx
   1c719:	ja     1c83c <png_read_start_row+0x27c>
   1c71f:	imul   %rcx,%rax
   1c723:	add    $0x7,%rax
   1c727:	shr    $0x3,%rax
   1c72b:	jmpq   1c844 <png_read_start_row+0x284>
   1c730:	movzbl 0x268(%rbx),%eax
   1c737:	cmp    $0x7,%al
   1c739:	ja     1c682 <png_read_start_row+0xc2>
   1c73f:	mov    %rdi,%rdx
   1c742:	jmpq   1c682 <png_read_start_row+0xc2>
   1c747:	movzbl 0x267(%rbx),%eax
   1c74e:	cmp    $0x3,%al
   1c750:	je     1c8a2 <png_read_start_row+0x2e2>
   1c756:	test   %al,%al
   1c758:	je     1c8ba <png_read_start_row+0x2fa>
   1c75e:	cmp    $0x2,%al
   1c760:	jne    1c69f <png_read_start_row+0xdf>
   1c766:	movzwl 0x260(%rbx),%eax
   1c76d:	test   %ax,%ax
   1c770:	je     1c69f <png_read_start_row+0xdf>
   1c776:	shl    $0x2,%edx
   1c779:	mov    $0xaaaaaaab,%eax
   1c77e:	mul    %edx
   1c780:	shr    %edx
   1c782:	jmpq   1c69f <png_read_start_row+0xdf>
   1c787:	mov    %rax,%rdi
   1c78a:	and    $0x1000,%edi
   1c790:	test   %edi,%edi
   1c792:	jne    1c8da <png_read_start_row+0x31a>
   1c798:	and    $0xfffffdff,%eax
   1c79d:	mov    %eax,0x134(%rbx)
   1c7a3:	jmpq   1c6b6 <png_read_start_row+0xf6>
   1c7a8:	movzbl 0x267(%rbx),%eax
   1c7af:	test   %al,%al
   1c7b1:	je     1c8f0 <png_read_start_row+0x330>
   1c7b7:	cmp    $0x2,%al
   1c7b9:	je     1c7c3 <png_read_start_row+0x203>
   1c7bb:	cmp    $0x3,%al
   1c7bd:	jne    1c6cf <png_read_start_row+0x10f>
   1c7c3:	cmp    $0x20,%edx
   1c7c6:	jbe    1c901 <png_read_start_row+0x341>
   1c7cc:	mov    %r8,%rdx
   1c7cf:	jmpq   1c6cf <png_read_start_row+0x10f>
   1c7d4:	movzwl 0x260(%rbx),%edi
   1c7db:	test   %di,%di
   1c7de:	jne    1c909 <png_read_start_row+0x349>
   1c7e4:	and    $0x8000,%eax
   1c7e9:	test   %eax,%eax
   1c7eb:	jne    1c91a <png_read_start_row+0x35a>
   1c7f1:	movzbl 0x267(%rbx),%eax
   1c7f8:	cmp    $0x4,%al
   1c7fa:	je     1c91a <png_read_start_row+0x35a>
   1c800:	cmp    $0x8,%edx
   1c803:	jbe    1c92b <png_read_start_row+0x36b>
   1c809:	cmp    $0x6,%al
   1c80b:	je     1c93b <png_read_start_row+0x37b>
   1c811:	mov    $0x30,%edx
   1c816:	jmpq   1c6e6 <png_read_start_row+0x126>
   1c81b:	movzbl 0x129(%rbx),%eax
   1c822:	movzbl 0x128(%rbx),%ecx
   1c829:	imul   %ecx,%eax
   1c82c:	cmp    %edx,%eax
   1c82e:	jbe    1c6f9 <png_read_start_row+0x139>
   1c834:	mov    %rax,%rdx
   1c837:	jmpq   1c6f9 <png_read_start_row+0x139>
   1c83c:	shr    $0x3,%rcx
   1c840:	imul   %rcx,%rax
   1c844:	lea    0x7(%rdx),%ecx
   1c847:	shr    $0x3,%ecx
   1c84a:	mov    %ecx,%ecx
   1c84c:	lea    0x31(%rcx,%rax,1),%rax
   1c851:	cmp    0x450(%rbx),%rax
   1c858:	jbe    1c9ab <png_read_start_row+0x3eb>
   1c85e:	mov    0x3f8(%rbx),%rsi
   1c865:	mov    %rbx,%rdi
   1c868:	mov    %r15,-0x8(%rbp)
   1c86c:	mov    %rax,%r15
   1c86f:	callq  5790 <png_free@plt>
   1c874:	mov    0x470(%rbx),%rsi
   1c87b:	mov    %rbx,%rdi
   1c87e:	callq  5790 <png_free@plt>
   1c883:	movzbl 0x264(%rbx),%eax
   1c88a:	test   %al,%al
   1c88c:	jne    1c943 <png_read_start_row+0x383>
   1c892:	mov    %rbx,%rdi
   1c895:	mov    %r15,%rsi
   1c898:	callq  5800 <png_malloc@plt>
   1c89d:	jmpq   1c94e <png_read_start_row+0x38e>
   1c8a2:	movzwl 0x260(%rbx),%eax
   1c8a9:	test   %ax,%ax
   1c8ac:	jne    1ca2a <png_read_start_row+0x46a>
   1c8b2:	mov    %rsi,%rdx
   1c8b5:	jmpq   1c69f <png_read_start_row+0xdf>
   1c8ba:	cmp    $0x7,%edx
   1c8bd:	jbe    1c8c2 <png_read_start_row+0x302>
   1c8bf:	mov    %rdx,%rdi
   1c8c2:	movzwl 0x260(%rbx),%eax
   1c8c9:	test   %ax,%ax
   1c8cc:	jne    1ca32 <png_read_start_row+0x472>
   1c8d2:	mov    %rdi,%rdx
   1c8d5:	jmpq   1c69f <png_read_start_row+0xdf>
   1c8da:	movzbl 0x268(%rbx),%eax
   1c8e1:	cmp    $0xf,%al
   1c8e3:	ja     1c6b6 <png_read_start_row+0xf6>
   1c8e9:	add    %edx,%edx
   1c8eb:	jmpq   1c6b6 <png_read_start_row+0xf6>
   1c8f0:	cmp    $0x8,%edx
   1c8f3:	jbe    1ca3a <png_read_start_row+0x47a>
   1c8f9:	mov    %rcx,%rdx
   1c8fc:	jmpq   1c6cf <png_read_start_row+0x10f>
   1c901:	mov    %rcx,%rdx
   1c904:	jmpq   1c6cf <png_read_start_row+0x10f>
   1c909:	mov    %rax,%rdi
   1c90c:	and    $0x1000,%edi
   1c912:	test   %edi,%edi
   1c914:	je     1c7e4 <png_read_start_row+0x224>
   1c91a:	cmp    $0x10,%edx
   1c91d:	jbe    1ca44 <png_read_start_row+0x484>
   1c923:	mov    %r8,%rdx
   1c926:	jmpq   1c6e6 <png_read_start_row+0x126>
   1c92b:	cmp    $0x6,%al
   1c92d:	je     1ca4c <png_read_start_row+0x48c>
   1c933:	mov    %rsi,%rdx
   1c936:	jmpq   1c6e6 <png_read_start_row+0x126>
   1c93b:	mov    %r8,%rdx
   1c93e:	jmpq   1c6e6 <png_read_start_row+0x126>
   1c943:	mov    %rbx,%rdi
   1c946:	mov    %r15,%rsi
   1c949:	callq  5780 <png_calloc@plt>
   1c94e:	mov    %rax,0x3f8(%rbx)
   1c955:	mov    %rbx,%rdi
   1c958:	mov    %r15,%rsi
   1c95b:	callq  5800 <png_malloc@plt>
   1c960:	mov    %rax,0x470(%rbx)
   1c967:	mov    0x3f8(%rbx),%rcx
   1c96e:	add    $0x20,%rcx
   1c972:	mov    %rcx,%rdx
   1c975:	and    $0xf,%rdx
   1c979:	sub    %rdx,%rcx
   1c97c:	add    $0xffffffffffffffff,%rcx
   1c980:	mov    %rcx,0x228(%rbx)
   1c987:	add    $0x20,%rax
   1c98b:	mov    %rax,%rcx
   1c98e:	and    $0xf,%rcx
   1c992:	sub    %rcx,%rax
   1c995:	add    $0xffffffffffffffff,%rax
   1c999:	mov    %rax,0x220(%rbx)
   1c9a0:	mov    %r15,0x450(%rbx)
   1c9a7:	mov    -0x8(%rbp),%r15
   1c9ab:	mov    0x208(%rbx),%rax
   1c9b2:	cmp    $0xfffffffffffffffe,%rax
   1c9b6:	ja     1ca54 <png_read_start_row+0x494>
   1c9bc:	mov    0x220(%rbx),%rdi
   1c9c3:	xor    %esi,%esi
   1c9c5:	lea    0x1(%rax),%rdx
   1c9c9:	callq  5350 <memset@plt>
   1c9ce:	mov    0x458(%rbx),%rsi
   1c9d5:	test   %rsi,%rsi
   1c9d8:	je     1c9f8 <png_read_start_row+0x438>
   1c9da:	movq   $0x0,0x460(%rbx)
   1c9e5:	movq   $0x0,0x458(%rbx)
   1c9f0:	mov    %rbx,%rdi
   1c9f3:	callq  5790 <png_free@plt>
   1c9f8:	mov    $0x49444154,%esi
   1c9fd:	mov    %rbx,%rdi
   1ca00:	callq  201b0 <png_inflate_claim>
   1ca05:	test   %eax,%eax
   1ca07:	jne    1ca63 <png_read_start_row+0x4a3>
   1ca09:	mov    0x130(%rbx),%eax
   1ca0f:	or     $0x40,%eax
   1ca12:	mov    %eax,0x130(%rbx)
   1ca18:	mov    %r12,%rbx
   1ca1b:	mov    %r13,%r12
   1ca1e:	mov    %r14,%r13
   1ca21:	mov    %r15,%r14
   1ca24:	mov    -0x10(%rbp),%r15
   1ca28:	leaveq 
   1ca29:	retq   
   1ca2a:	mov    %rcx,%rdx
   1ca2d:	jmpq   1c69f <png_read_start_row+0xdf>
   1ca32:	lea    (%rdi,%rdi,1),%edx
   1ca35:	jmpq   1c69f <png_read_start_row+0xdf>
   1ca3a:	mov    $0x10,%edx
   1ca3f:	jmpq   1c6cf <png_read_start_row+0x10f>
   1ca44:	mov    %rcx,%rdx
   1ca47:	jmpq   1c6e6 <png_read_start_row+0x126>
   1ca4c:	mov    %rcx,%rdx
   1ca4f:	jmpq   1c6e6 <png_read_start_row+0x126>
   1ca54:	mov    %rbx,%rdi
   1ca57:	lea    0x11e1c(%rip),%rsi        # 2e87a <png_pass_inc.20+0x7>
   1ca5e:	callq  5470 <png_error@plt>
   1ca63:	mov    %rbx,%rdi
   1ca66:	mov    0x170(%rdi),%rsi
   1ca6d:	callq  5470 <png_error@plt>
   1ca72:	data16 nopw %cs:0x0(%rax,%rax,1)
   1ca7d:	nopl   (%rax)

000000000001ca80 <png_zlib_inflate>:
   1ca80:	push   %rbp
   1ca81:	mov    %rsp,%rbp
   1ca84:	movzbl 0x270(%rdi),%eax
   1ca8b:	test   %al,%al
   1ca8d:	jne    1ca9d <png_zlib_inflate+0x1d>
   1ca8f:	add    $0x140,%rdi
   1ca96:	callq  5120 <inflate@plt>
   1ca9b:	leaveq 
   1ca9c:	retq   
   1ca9d:	mov    0x148(%rdi),%eax
   1caa3:	test   %eax,%eax
   1caa5:	je     1ca8f <png_zlib_inflate+0xf>
   1caa7:	mov    0x140(%rdi),%rax
   1caae:	movzbl (%rax),%eax
   1cab1:	shr    $0x4,%eax
   1cab4:	cmp    $0x7,%eax
   1cab7:	jg     1cac2 <png_zlib_inflate+0x42>
   1cab9:	movb   $0x0,0x270(%rdi)
   1cac0:	jmp    1ca8f <png_zlib_inflate+0xf>
   1cac2:	lea    0x11dde(%rip),%rax        # 2e8a7 <png_pass_inc.20+0x34>
   1cac9:	mov    %rax,0x170(%rdi)
   1cad0:	mov    $0xfffffffffffffffd,%rax
   1cad7:	leaveq 
   1cad8:	retq   
   1cad9:	nopl   0x0(%rax)

000000000001cae0 <png_handle_IHDR>:
   1cae0:	push   %rbp
   1cae1:	mov    %rsp,%rbp
   1cae4:	sub    $0x30,%rsp
   1cae8:	mov    0x12c(%rdi),%eax
   1caee:	mov    %rax,%rcx
   1caf1:	and    $0x1,%ecx
   1caf4:	test   %ecx,%ecx
   1caf6:	jne    1cbf3 <png_handle_IHDR+0x113>
   1cafc:	cmp    $0xd,%edx
   1caff:	jne    1cbff <png_handle_IHDR+0x11f>
   1cb05:	or     $0x1,%eax
   1cb08:	mov    %eax,0x12c(%rdi)
   1cb0e:	lea    -0x25(%rbp),%rax
   1cb12:	mov    $0xd,%edx
   1cb17:	mov    %rdi,%rcx
   1cb1a:	mov    %rax,%r8
   1cb1d:	mov    %r13,-0x8(%rbp)
   1cb21:	mov    %r14,-0x10(%rbp)
   1cb25:	mov    %r15,-0x18(%rbp)
   1cb29:	mov    %r12,%r13
   1cb2c:	mov    %rbx,%r12
   1cb2f:	mov    %rdi,%rbx
   1cb32:	mov    %rcx,%rdi
   1cb35:	mov    %rsi,%r14
   1cb38:	mov    %r8,%rsi
   1cb3b:	mov    %rax,%r15
   1cb3e:	callq  1b210 <png_crc_read>
   1cb43:	xor    %esi,%esi
   1cb45:	mov    %rbx,%rdi
   1cb48:	callq  1b270 <png_crc_finish>
   1cb4d:	mov    %r15,%rsi
   1cb50:	mov    %rbx,%rdi
   1cb53:	callq  5730 <png_get_uint_31@plt>
   1cb58:	mov    %rax,%r15
   1cb5b:	lea    -0x21(%rbp),%rsi
   1cb5f:	mov    %rbx,%rdi
   1cb62:	callq  5730 <png_get_uint_31@plt>
   1cb67:	movzbl -0x1d(%rbp),%r8d
   1cb6c:	movzbl -0x19(%rbp),%r11d
   1cb71:	movzbl -0x1c(%rbp),%r9d
   1cb76:	movzbl -0x1a(%rbp),%edi
   1cb7a:	movzbl -0x1b(%rbp),%r10d
   1cb7f:	mov    %r15d,0x1f8(%rbx)
   1cb86:	mov    %eax,0x1fc(%rbx)
   1cb8c:	mov    %r8b,0x268(%rbx)
   1cb93:	mov    %r11b,0x264(%rbx)
   1cb9a:	mov    %r9b,0x267(%rbx)
   1cba1:	mov    %dil,0x3dc(%rbx)
   1cba8:	mov    %r10b,0x418(%rbx)
   1cbaf:	mov    $0x1,%esi
   1cbb4:	cmp    $0x3,%r9b
   1cbb8:	jbe    1cc0b <png_handle_IHDR+0x12b>
   1cbba:	cmp    $0x4,%r9b
   1cbbe:	jne    1cc18 <png_handle_IHDR+0x138>
   1cbc0:	mov    $0x2,%esi
   1cbc5:	mov    %rax,%rcx
   1cbc8:	mov    %r8,%rax
   1cbcb:	imul   %sil
   1cbce:	mov    %al,0x26a(%rbx)
   1cbd4:	mov    %sil,0x26b(%rbx)
   1cbdb:	cmp    $0x7,%al
   1cbdd:	ja     1cc25 <png_handle_IHDR+0x145>
   1cbdf:	movzbl %al,%eax
   1cbe2:	mov    %r15d,%edx
   1cbe5:	imul   %rdx,%rax
   1cbe9:	lea    0x7(%rax),%rdx
   1cbed:	shr    $0x3,%rdx
   1cbf1:	jmp    1cc33 <png_handle_IHDR+0x153>
   1cbf3:	lea    0x11cca(%rip),%rsi        # 2e8c4 <png_pass_inc.20+0x51>
   1cbfa:	callq  5060 <png_chunk_error@plt>
   1cbff:	lea    0x11ccb(%rip),%rsi        # 2e8d1 <png_pass_inc.20+0x5e>
   1cc06:	callq  5060 <png_chunk_error@plt>
   1cc0b:	cmp    $0x2,%r9b
   1cc0f:	jne    1cbc5 <png_handle_IHDR+0xe5>
   1cc11:	mov    $0x3,%esi
   1cc16:	jmp    1cbc5 <png_handle_IHDR+0xe5>
   1cc18:	cmp    $0x6,%r9b
   1cc1c:	jne    1cbc5 <png_handle_IHDR+0xe5>
   1cc1e:	mov    $0x4,%esi
   1cc23:	jmp    1cbc5 <png_handle_IHDR+0xe5>
   1cc25:	movzbl %al,%edx
   1cc28:	shr    $0x3,%rdx
   1cc2c:	mov    %r15d,%eax
   1cc2f:	imul   %rax,%rdx
   1cc33:	sub    $0x10,%rsp
   1cc37:	mov    %rdx,0x208(%rbx)
   1cc3e:	mov    %r11d,(%rsp)
   1cc42:	mov    %r10d,0x8(%rsp)
   1cc47:	mov    %edi,0x10(%rsp)
   1cc4b:	mov    %r15,%rdx
   1cc4e:	mov    %r14,%rsi
   1cc51:	mov    %rbx,%rdi
   1cc54:	callq  5460 <png_set_IHDR@plt>
   1cc59:	mov    %r12,%rbx
   1cc5c:	mov    %r13,%r12
   1cc5f:	mov    -0x18(%rbp),%r15
   1cc63:	mov    -0x10(%rbp),%r14
   1cc67:	mov    -0x8(%rbp),%r13
   1cc6b:	leaveq 
   1cc6c:	retq   
   1cc6d:	nopl   (%rax)

000000000001cc70 <png_handle_PLTE>:
   1cc70:	push   %rbp
   1cc71:	mov    %rsp,%rbp
   1cc74:	sub    $0x350,%rsp
   1cc7b:	mov    0x12c(%rdi),%eax
   1cc81:	mov    %rax,%rcx
   1cc84:	and    $0x1,%ecx
   1cc87:	test   %ecx,%ecx
   1cc89:	je     1ccfd <png_handle_PLTE+0x8d>
   1cc8b:	mov    %rax,%rcx
   1cc8e:	and    $0x2,%ecx
   1cc91:	test   %ecx,%ecx
   1cc93:	jne    1cd09 <png_handle_PLTE+0x99>
   1cc95:	mov    %rax,%rcx
   1cc98:	and    $0x4,%ecx
   1cc9b:	test   %ecx,%ecx
   1cc9d:	jne    1cd15 <png_handle_PLTE+0xa5>
   1cc9f:	or     $0x2,%eax
   1cca2:	mov    %eax,0x12c(%rdi)
   1cca8:	movzbl 0x267(%rdi),%eax
   1ccaf:	and    $0x2,%eax
   1ccb2:	test   %eax,%eax
   1ccb4:	je     1cd3f <png_handle_PLTE+0xcf>
   1ccba:	cmp    $0x300,%edx
   1ccc0:	jbe    1cd69 <png_handle_PLTE+0xf9>
   1ccc6:	mov    %rdx,%rsi
   1ccc9:	mov    %r15,%r8
   1cccc:	mov    %rdi,%rax
   1cccf:	mov    %r8,-0x48(%rbp)
   1ccd3:	mov    %rdi,%r15
   1ccd6:	mov    %rax,%rdi
   1ccd9:	callq  1b270 <png_crc_finish>
   1ccde:	lea    0x11bec(%rip),%rsi        # 2e8d1 <png_pass_inc.20+0x5e>
   1cce5:	movzbl 0x267(%r15),%eax
   1cced:	cmp    $0x3,%al
   1ccef:	jne    1cda3 <png_handle_PLTE+0x133>
   1ccf5:	mov    %r15,%rdi
   1ccf8:	callq  5060 <png_chunk_error@plt>
   1ccfd:	lea    0x11bd5(%rip),%rsi        # 2e8d9 <png_pass_inc.20+0x66>
   1cd04:	callq  5060 <png_chunk_error@plt>
   1cd09:	lea    0x11bd6(%rip),%rsi        # 2e8e6 <png_pass_inc.20+0x73>
   1cd10:	callq  5060 <png_chunk_error@plt>
   1cd15:	mov    %rdi,%rax
   1cd18:	mov    %r15,-0x48(%rbp)
   1cd1c:	mov    %rdx,%rsi
   1cd1f:	mov    %rdi,%r15
   1cd22:	mov    %rax,%rdi
   1cd25:	callq  1b270 <png_crc_finish>
   1cd2a:	mov    %r15,%rdi
   1cd2d:	lea    0x11b90(%rip),%rsi        # 2e8c4 <png_pass_inc.20+0x51>
   1cd34:	callq  5230 <png_chunk_benign_error@plt>
   1cd39:	mov    -0x48(%rbp),%r15
   1cd3d:	leaveq 
   1cd3e:	retq   
   1cd3f:	mov    %rdi,%rax
   1cd42:	mov    %r15,-0x48(%rbp)
   1cd46:	mov    %rdx,%rsi
   1cd49:	mov    %rdi,%r15
   1cd4c:	mov    %rax,%rdi
   1cd4f:	callq  1b270 <png_crc_finish>
   1cd54:	mov    %r15,%rdi
   1cd57:	lea    0x11b92(%rip),%rsi        # 2e8f0 <png_pass_inc.20+0x7d>
   1cd5e:	callq  5230 <png_chunk_benign_error@plt>
   1cd63:	mov    -0x48(%rbp),%r15
   1cd67:	leaveq 
   1cd68:	retq   
   1cd69:	mov    %r15,%r8
   1cd6c:	mov    %rsi,%r9
   1cd6f:	mov    %rdx,%rsi
   1cd72:	mov    $0xaaaaaaab,%eax
   1cd77:	mul    %esi
   1cd79:	shr    %edx
   1cd7b:	lea    (%rdx,%rdx,2),%eax
   1cd7e:	cmp    %eax,%esi
   1cd80:	jne    1cccc <png_handle_PLTE+0x5c>
   1cd86:	mov    $0x1,%r15d
   1cd8c:	mov    %r15,-0x30(%rbp)
   1cd90:	movzbl 0x267(%rdi),%eax
   1cd97:	cmp    $0x3,%al
   1cd99:	je     1cdb1 <png_handle_PLTE+0x141>
   1cd9b:	mov    $0x100,%r15d
   1cda1:	jmp    1cdbb <png_handle_PLTE+0x14b>
   1cda3:	mov    %r15,%rdi
   1cda6:	callq  5230 <png_chunk_benign_error@plt>
   1cdab:	mov    -0x48(%rbp),%r15
   1cdaf:	leaveq 
   1cdb0:	retq   
   1cdb1:	movzbl 0x268(%rdi),%ecx
   1cdb8:	shl    %cl,%r15d
   1cdbb:	mov    $0x55555556,%eax
   1cdc0:	imul   %esi
   1cdc2:	mov    %rdx,%rax
   1cdc5:	shr    $0x1f,%eax
   1cdc8:	add    %edx,%eax
   1cdca:	cmp    %eax,%r15d
   1cdcd:	jl     1cdd2 <png_handle_PLTE+0x162>
   1cdcf:	mov    %rax,%r15
   1cdd2:	lea    -0x34b(%rbp),%rcx
   1cdd9:	lea    -0x4b(%rbp),%r10
   1cddd:	mov    $0x3,%edx
   1cde2:	xor    %eax,%eax
   1cde4:	mov    %rsi,-0x48(%rbp)
   1cde8:	mov    %r9,-0x40(%rbp)
   1cdec:	mov    %rbx,-0x8(%rbp)
   1cdf0:	mov    %r12,-0x10(%rbp)
   1cdf4:	mov    %r13,-0x18(%rbp)
   1cdf8:	mov    %r14,-0x20(%rbp)
   1cdfc:	mov    %r8,-0x28(%rbp)
   1ce00:	mov    %rcx,%rbx
   1ce03:	mov    %rax,%r12
   1ce06:	mov    %r10,%r13
   1ce09:	mov    %r12,-0x38(%rbp)
   1ce0d:	jmp    1ce3e <png_handle_PLTE+0x1ce>
   1ce0f:	mov    %rdi,%r14
   1ce12:	mov    %r13,%rsi
   1ce15:	callq  1b210 <png_crc_read>
   1ce1a:	movzbl -0x4b(%rbp),%eax
   1ce1e:	mov    %al,(%rbx)
   1ce20:	movzbl -0x4a(%rbp),%eax
   1ce24:	mov    %al,0x1(%rbx)
   1ce27:	movzbl -0x49(%rbp),%eax
   1ce2b:	mov    %al,0x2(%rbx)
   1ce2e:	add    $0x3,%rbx
   1ce32:	add    $0x1,%r12d
   1ce36:	mov    %r14,%rdi
   1ce39:	mov    $0x3,%edx
   1ce3e:	cmp    %r12d,%r15d
   1ce41:	jg     1ce0f <png_handle_PLTE+0x19f>
   1ce43:	lea    (%r15,%r15,2),%eax
   1ce47:	mov    -0x48(%rbp),%rsi
   1ce4b:	sub    %eax,%esi
   1ce4d:	mov    %rdi,%rbx
   1ce50:	callq  1b270 <png_crc_finish>
   1ce55:	mov    %r15,%rcx
   1ce58:	mov    %rbx,%rdi
   1ce5b:	mov    -0x40(%rbp),%r12
   1ce5f:	mov    %r12,%rsi
   1ce62:	lea    -0x34b(%rbp),%rdx
   1ce69:	callq  5530 <png_set_PLTE@plt>
   1ce6e:	movzwl 0x260(%rbx),%eax
   1ce75:	test   %ax,%ax
   1ce78:	jne    1ce8b <png_handle_PLTE+0x21b>
   1ce7a:	test   %r12,%r12
   1ce7d:	je     1ceb0 <png_handle_PLTE+0x240>
   1ce7f:	mov    0x8(%r12),%eax
   1ce84:	and    $0x10,%eax
   1ce87:	test   %eax,%eax
   1ce89:	je     1ceb0 <png_handle_PLTE+0x240>
   1ce8b:	test   %r12,%r12
   1ce8e:	movw   $0x0,0x260(%rbx)
   1ce97:	je     1cea1 <png_handle_PLTE+0x231>
   1ce99:	movw   $0x0,0x22(%r12)
   1cea1:	lea    0x11a61(%rip),%rsi        # 2e909 <png_pass_inc.20+0x96>
   1cea8:	mov    %rbx,%rdi
   1ceab:	callq  5230 <png_chunk_benign_error@plt>
   1ceb0:	test   %r12,%r12
   1ceb3:	je     1cec7 <png_handle_PLTE+0x257>
   1ceb5:	mov    0x8(%r12),%eax
   1ceba:	and    $0x40,%eax
   1cebd:	test   %eax,%eax
   1cebf:	jne    1cee6 <png_handle_PLTE+0x276>
   1cec1:	pushq  -0x30(%rbp)
   1cec4:	popq   -0x38(%rbp)
   1cec7:	mov    -0x38(%rbp),%rax
   1cecb:	test   %rax,%rax
   1cece:	jne    1cefd <png_handle_PLTE+0x28d>
   1ced0:	mov    -0x28(%rbp),%r15
   1ced4:	mov    -0x20(%rbp),%r14
   1ced8:	mov    -0x18(%rbp),%r13
   1cedc:	mov    -0x10(%rbp),%r12
   1cee0:	mov    -0x8(%rbp),%rbx
   1cee4:	leaveq 
   1cee5:	retq   
   1cee6:	lea    0x11a2f(%rip),%rsi        # 2e91c <png_pass_inc.20+0xa9>
   1ceed:	mov    %rbx,%rdi
   1cef0:	callq  5230 <png_chunk_benign_error@plt>
   1cef5:	pushq  -0x30(%rbp)
   1cef8:	popq   -0x38(%rbp)
   1cefb:	jmp    1cec7 <png_handle_PLTE+0x257>
   1cefd:	mov    0x8(%r12),%eax
   1cf02:	and    $0x20,%eax
   1cf05:	test   %eax,%eax
   1cf07:	jne    1cf1f <png_handle_PLTE+0x2af>
   1cf09:	mov    -0x28(%rbp),%r15
   1cf0d:	mov    -0x20(%rbp),%r14
   1cf11:	mov    -0x18(%rbp),%r13
   1cf15:	mov    -0x10(%rbp),%r12
   1cf19:	mov    -0x8(%rbp),%rbx
   1cf1d:	leaveq 
   1cf1e:	retq   
   1cf1f:	mov    %rbx,%rdi
   1cf22:	lea    0x11a06(%rip),%rsi        # 2e92f <png_pass_inc.20+0xbc>
   1cf29:	callq  5230 <png_chunk_benign_error@plt>
   1cf2e:	mov    -0x28(%rbp),%r15
   1cf32:	mov    -0x20(%rbp),%r14
   1cf36:	mov    -0x18(%rbp),%r13
   1cf3a:	mov    -0x10(%rbp),%r12
   1cf3e:	mov    -0x8(%rbp),%rbx
   1cf42:	leaveq 
   1cf43:	retq   
   1cf44:	data16 nopw %cs:0x0(%rax,%rax,1)
   1cf4f:	nop

000000000001cf50 <png_handle_IEND>:
   1cf50:	push   %rbp
   1cf51:	mov    %rsp,%rbp
   1cf54:	sub    $0x10,%rsp
   1cf58:	mov    0x12c(%rdi),%eax
   1cf5e:	mov    %rax,%rcx
   1cf61:	and    $0x1,%ecx
   1cf64:	test   %ecx,%ecx
   1cf66:	je     1cf9f <png_handle_IEND+0x4f>
   1cf68:	mov    %rax,%rcx
   1cf6b:	and    $0x4,%ecx
   1cf6e:	test   %ecx,%ecx
   1cf70:	je     1cf9f <png_handle_IEND+0x4f>
   1cf72:	or     $0x18,%eax
   1cf75:	mov    %eax,0x12c(%rdi)
   1cf7b:	mov    %rdi,%rax
   1cf7e:	mov    %rdx,%rsi
   1cf81:	mov    %r15,-0x10(%rbp)
   1cf85:	mov    %rdi,-0x8(%rbp)
   1cf89:	mov    %rax,%rdi
   1cf8c:	mov    %rdx,%r15
   1cf8f:	callq  1b270 <png_crc_finish>
   1cf94:	test   %r15d,%r15d
   1cf97:	jne    1cfab <png_handle_IEND+0x5b>
   1cf99:	mov    -0x10(%rbp),%r15
   1cf9d:	leaveq 
   1cf9e:	retq   
   1cf9f:	lea    0x1191e(%rip),%rsi        # 2e8c4 <png_pass_inc.20+0x51>
   1cfa6:	callq  5060 <png_chunk_error@plt>
   1cfab:	lea    0x1191f(%rip),%rsi        # 2e8d1 <png_pass_inc.20+0x5e>
   1cfb2:	mov    -0x8(%rbp),%rdi
   1cfb6:	callq  5230 <png_chunk_benign_error@plt>
   1cfbb:	mov    -0x10(%rbp),%r15
   1cfbf:	leaveq 
   1cfc0:	retq   
   1cfc1:	data16 nopw %cs:0x0(%rax,%rax,1)
   1cfcc:	nopl   0x0(%rax)

000000000001cfd0 <png_handle_bKGD>:
   1cfd0:	push   %rbp
   1cfd1:	mov    %rsp,%rbp
   1cfd4:	sub    $0x20,%rsp
   1cfd8:	mov    0x12c(%rdi),%eax
   1cfde:	mov    %rax,%rcx
   1cfe1:	and    $0x1,%ecx
   1cfe4:	test   %ecx,%ecx
   1cfe6:	je     1d05b <png_handle_bKGD+0x8b>
   1cfe8:	mov    %rax,%rcx
   1cfeb:	and    $0x4,%ecx
   1cfee:	test   %ecx,%ecx
   1cff0:	jne    1d06e <png_handle_bKGD+0x9e>
   1cff2:	movzbl 0x267(%rdi),%ecx
   1cff9:	cmp    $0x3,%cl
   1cffc:	je     1d067 <png_handle_bKGD+0x97>
   1cffe:	test   %rsi,%rsi
   1d001:	jne    1d098 <png_handle_bKGD+0xc8>
   1d007:	movzbl 0x267(%rdi),%eax
   1d00e:	cmp    $0x3,%al
   1d010:	jne    1d0d0 <png_handle_bKGD+0x100>
   1d016:	mov    $0x1,%eax
   1d01b:	cmp    %edx,%eax
   1d01d:	jne    1d0e5 <png_handle_bKGD+0x115>
   1d023:	lea    -0x20(%rbp),%rdx
   1d027:	mov    %rdi,%rcx
   1d02a:	mov    %r15,-0x8(%rbp)
   1d02e:	mov    %rsi,-0x10(%rbp)
   1d032:	mov    %rdx,%rsi
   1d035:	mov    %rax,%rdx
   1d038:	mov    %rdi,%r15
   1d03b:	mov    %rcx,%rdi
   1d03e:	callq  1b210 <png_crc_read>
   1d043:	xor    %esi,%esi
   1d045:	mov    %r15,%rdi
   1d048:	callq  1b270 <png_crc_finish>
   1d04d:	test   %eax,%eax
   1d04f:	je     1d10f <png_handle_bKGD+0x13f>
   1d055:	mov    -0x8(%rbp),%r15
   1d059:	leaveq 
   1d05a:	retq   
   1d05b:	lea    0x11877(%rip),%rsi        # 2e8d9 <png_pass_inc.20+0x66>
   1d062:	callq  5060 <png_chunk_error@plt>
   1d067:	and    $0x2,%eax
   1d06a:	test   %eax,%eax
   1d06c:	jne    1cffe <png_handle_bKGD+0x2e>
   1d06e:	mov    %rdi,%rax
   1d071:	mov    %r15,-0x10(%rbp)
   1d075:	mov    %rdx,%rsi
   1d078:	mov    %rdi,%r15
   1d07b:	mov    %rax,%rdi
   1d07e:	callq  1b270 <png_crc_finish>
   1d083:	mov    %r15,%rdi
   1d086:	lea    0x11837(%rip),%rsi        # 2e8c4 <png_pass_inc.20+0x51>
   1d08d:	callq  5230 <png_chunk_benign_error@plt>
   1d092:	mov    -0x10(%rbp),%r15
   1d096:	leaveq 
   1d097:	retq   
   1d098:	mov    0x8(%rsi),%eax
   1d09b:	and    $0x20,%eax
   1d09e:	test   %eax,%eax
   1d0a0:	je     1d007 <png_handle_bKGD+0x37>
   1d0a6:	mov    %rdi,%rax
   1d0a9:	mov    %r15,-0x10(%rbp)
   1d0ad:	mov    %rdx,%rsi
   1d0b0:	mov    %rdi,%r15
   1d0b3:	mov    %rax,%rdi
   1d0b6:	callq  1b270 <png_crc_finish>
   1d0bb:	mov    %r15,%rdi
   1d0be:	lea    0x11821(%rip),%rsi        # 2e8e6 <png_pass_inc.20+0x73>
   1d0c5:	callq  5230 <png_chunk_benign_error@plt>
   1d0ca:	mov    -0x10(%rbp),%r15
   1d0ce:	leaveq 
   1d0cf:	retq   
   1d0d0:	and    $0x2,%eax
   1d0d3:	test   %eax,%eax
   1d0d5:	jg     1d169 <png_handle_bKGD+0x199>
   1d0db:	mov    $0x2,%eax
   1d0e0:	jmpq   1d01b <png_handle_bKGD+0x4b>
   1d0e5:	mov    %rdi,%rax
   1d0e8:	mov    %r15,-0x10(%rbp)
   1d0ec:	mov    %rdx,%rsi
   1d0ef:	mov    %rdi,%r15
   1d0f2:	mov    %rax,%rdi
   1d0f5:	callq  1b270 <png_crc_finish>
   1d0fa:	mov    %r15,%rdi
   1d0fd:	lea    0x117cd(%rip),%rsi        # 2e8d1 <png_pass_inc.20+0x5e>
   1d104:	callq  5230 <png_chunk_benign_error@plt>
   1d109:	mov    -0x10(%rbp),%r15
   1d10d:	leaveq 
   1d10e:	retq   
   1d10f:	movzbl 0x267(%r15),%eax
   1d117:	cmp    $0x3,%al
   1d119:	je     1d173 <png_handle_bKGD+0x1a3>
   1d11b:	and    $0x2,%eax
   1d11e:	test   %eax,%eax
   1d120:	je     1d1ad <png_handle_bKGD+0x1dd>
   1d126:	movb   $0x0,-0x1a(%rbp)
   1d12a:	movzbl -0x1f(%rbp),%ecx
   1d12e:	movzbl -0x20(%rbp),%eax
   1d132:	shl    $0x8,%eax
   1d135:	add    %ecx,%eax
   1d137:	mov    %ax,-0x18(%rbp)
   1d13b:	movzbl -0x1d(%rbp),%ecx
   1d13f:	movzbl -0x1e(%rbp),%eax
   1d143:	shl    $0x8,%eax
   1d146:	add    %ecx,%eax
   1d148:	mov    %ax,-0x16(%rbp)
   1d14c:	movzbl -0x1b(%rbp),%ecx
   1d150:	movzbl -0x1c(%rbp),%eax
   1d154:	shl    $0x8,%eax
   1d157:	add    %ecx,%eax
   1d159:	mov    %ax,-0x14(%rbp)
   1d15d:	movw   $0x0,-0x12(%rbp)
   1d163:	mov    -0x10(%rbp),%rsi
   1d167:	jmp    1d19b <png_handle_bKGD+0x1cb>
   1d169:	mov    $0x6,%eax
   1d16e:	jmpq   1d01b <png_handle_bKGD+0x4b>
   1d173:	mov    -0x10(%rbp),%rsi
   1d177:	test   %rsi,%rsi
   1d17a:	movzbl -0x20(%rbp),%ecx
   1d17e:	mov    %cl,-0x1a(%rbp)
   1d181:	jne    1d1d4 <png_handle_bKGD+0x204>
   1d183:	movw   $0x0,-0x14(%rbp)
   1d189:	movw   $0x0,-0x16(%rbp)
   1d18f:	movw   $0x0,-0x18(%rbp)
   1d195:	movw   $0x0,-0x12(%rbp)
   1d19b:	mov    %r15,%rdi
   1d19e:	lea    -0x1a(%rbp),%rdx
   1d1a2:	callq  5110 <png_set_bKGD@plt>
   1d1a7:	mov    -0x8(%rbp),%r15
   1d1ab:	leaveq 
   1d1ac:	retq   
   1d1ad:	movb   $0x0,-0x1a(%rbp)
   1d1b1:	movzbl -0x1f(%rbp),%ecx
   1d1b5:	movzbl -0x20(%rbp),%eax
   1d1b9:	shl    $0x8,%eax
   1d1bc:	add    %ecx,%eax
   1d1be:	mov    %ax,-0x12(%rbp)
   1d1c2:	mov    %ax,-0x14(%rbp)
   1d1c6:	mov    %ax,-0x16(%rbp)
   1d1ca:	mov    %ax,-0x18(%rbp)
   1d1ce:	mov    -0x10(%rbp),%rsi
   1d1d2:	jmp    1d19b <png_handle_bKGD+0x1cb>
   1d1d4:	movzwl 0x20(%rsi),%eax
   1d1d8:	test   %ax,%ax
   1d1db:	je     1d183 <png_handle_bKGD+0x1b3>
   1d1dd:	cmp    %cx,%ax
   1d1e0:	jbe    1d21a <png_handle_bKGD+0x24a>
   1d1e2:	mov    0x250(%r15),%rax
   1d1e9:	lea    (%rcx,%rcx,2),%rcx
   1d1ed:	movzbl (%rax,%rcx,1),%eax
   1d1f1:	mov    %ax,-0x18(%rbp)
   1d1f5:	mov    0x250(%r15),%rax
   1d1fc:	movzbl 0x1(%rax,%rcx,1),%eax
   1d201:	mov    %ax,-0x16(%rbp)
   1d205:	mov    0x250(%r15),%rax
   1d20c:	movzbl 0x2(%rax,%rcx,1),%eax
   1d211:	mov    %ax,-0x14(%rbp)
   1d215:	jmpq   1d195 <png_handle_bKGD+0x1c5>
   1d21a:	mov    %r15,%rdi
   1d21d:	lea    0x1171e(%rip),%rsi        # 2e942 <png_pass_inc.20+0xcf>
   1d224:	callq  5230 <png_chunk_benign_error@plt>
   1d229:	mov    -0x8(%rbp),%r15
   1d22d:	leaveq 
   1d22e:	retq   
   1d22f:	nop

000000000001d230 <png_handle_cHRM>:
   1d230:	push   %rbp
   1d231:	mov    %rsp,%rbp
   1d234:	sub    $0x60,%rsp
   1d238:	mov    0x12c(%rdi),%eax
   1d23e:	mov    %rax,%rcx
   1d241:	and    $0x1,%ecx
   1d244:	test   %ecx,%ecx
   1d246:	je     1d294 <png_handle_cHRM+0x64>
   1d248:	and    $0x6,%eax
   1d24b:	test   %eax,%eax
   1d24d:	jne    1d2a0 <png_handle_cHRM+0x70>
   1d24f:	cmp    $0x20,%edx
   1d252:	jne    1d2ca <png_handle_cHRM+0x9a>
   1d254:	lea    -0x58(%rbp),%rax
   1d258:	mov    $0x20,%edx
   1d25d:	mov    %rdi,%rcx
   1d260:	mov    %r15,-0x10(%rbp)
   1d264:	mov    %rsi,-0x8(%rbp)
   1d268:	mov    %rax,%rsi
   1d26b:	mov    %rdi,%r15
   1d26e:	mov    %rcx,%rdi
   1d271:	callq  1b210 <png_crc_read>
   1d276:	xor    %eax,%eax
   1d278:	mov    %r15,%rdi
   1d27b:	mov    %rax,%rsi
   1d27e:	mov    %r15,-0x18(%rbp)
   1d282:	mov    %rax,%r15
   1d285:	callq  1b270 <png_crc_finish>
   1d28a:	test   %eax,%eax
   1d28c:	je     1d2f4 <png_handle_cHRM+0xc4>
   1d28e:	mov    -0x10(%rbp),%r15
   1d292:	leaveq 
   1d293:	retq   
   1d294:	lea    0x1163e(%rip),%rsi        # 2e8d9 <png_pass_inc.20+0x66>
   1d29b:	callq  5060 <png_chunk_error@plt>
   1d2a0:	mov    %rdi,%rax
   1d2a3:	mov    %r15,-0x18(%rbp)
   1d2a7:	mov    %rdx,%rsi
   1d2aa:	mov    %rdi,%r15
   1d2ad:	mov    %rax,%rdi
   1d2b0:	callq  1b270 <png_crc_finish>
   1d2b5:	mov    %r15,%rdi
   1d2b8:	lea    0x11605(%rip),%rsi        # 2e8c4 <png_pass_inc.20+0x51>
   1d2bf:	callq  5230 <png_chunk_benign_error@plt>
   1d2c4:	mov    -0x18(%rbp),%r15
   1d2c8:	leaveq 
   1d2c9:	retq   
   1d2ca:	mov    %rdi,%rax
   1d2cd:	mov    %r15,-0x18(%rbp)
   1d2d1:	mov    %rdx,%rsi
   1d2d4:	mov    %rdi,%r15
   1d2d7:	mov    %rax,%rdi
   1d2da:	callq  1b270 <png_crc_finish>
   1d2df:	mov    %r15,%rdi
   1d2e2:	lea    0x115e8(%rip),%rsi        # 2e8d1 <png_pass_inc.20+0x5e>
   1d2e9:	callq  5230 <png_chunk_benign_error@plt>
   1d2ee:	mov    -0x18(%rbp),%r15
   1d2f2:	leaveq 
   1d2f3:	retq   
   1d2f4:	mov    %r15,%rdi
   1d2f7:	lea    -0x58(%rbp),%rsi
   1d2fb:	callq  20050 <png_get_fixed_point>
   1d300:	mov    %eax,-0x20(%rbp)
   1d303:	lea    -0x54(%rbp),%rsi
   1d307:	mov    %r15,%rdi
   1d30a:	callq  20050 <png_get_fixed_point>
   1d30f:	mov    %eax,-0x1c(%rbp)
   1d312:	lea    -0x50(%rbp),%rsi
   1d316:	mov    %r15,%rdi
   1d319:	callq  20050 <png_get_fixed_point>
   1d31e:	mov    %eax,-0x38(%rbp)
   1d321:	lea    -0x4c(%rbp),%rsi
   1d325:	mov    %r15,%rdi
   1d328:	callq  20050 <png_get_fixed_point>
   1d32d:	mov    %eax,-0x34(%rbp)
   1d330:	lea    -0x48(%rbp),%rsi
   1d334:	mov    %r15,%rdi
   1d337:	callq  20050 <png_get_fixed_point>
   1d33c:	mov    %eax,-0x30(%rbp)
   1d33f:	lea    -0x44(%rbp),%rsi
   1d343:	mov    %r15,%rdi
   1d346:	callq  20050 <png_get_fixed_point>
   1d34b:	mov    %eax,-0x2c(%rbp)
   1d34e:	lea    -0x40(%rbp),%rsi
   1d352:	mov    %r15,%rdi
   1d355:	callq  20050 <png_get_fixed_point>
   1d35a:	mov    %eax,-0x28(%rbp)
   1d35d:	mov    %r15,%rdi
   1d360:	lea    -0x3c(%rbp),%rsi
   1d364:	callq  20050 <png_get_fixed_point>
   1d369:	mov    %eax,-0x24(%rbp)
   1d36c:	movslq -0x20(%rbp),%rcx
   1d370:	cmp    $0xffffffff,%ecx
   1d373:	je     1d3cf <png_handle_cHRM+0x19f>
   1d375:	movslq -0x1c(%rbp),%rcx
   1d379:	cmp    $0xffffffff,%ecx
   1d37c:	je     1d3cf <png_handle_cHRM+0x19f>
   1d37e:	movslq -0x38(%rbp),%rcx
   1d382:	cmp    $0xffffffff,%ecx
   1d385:	je     1d3cf <png_handle_cHRM+0x19f>
   1d387:	movslq -0x34(%rbp),%rcx
   1d38b:	cmp    $0xffffffff,%ecx
   1d38e:	je     1d3cf <png_handle_cHRM+0x19f>
   1d390:	movslq -0x30(%rbp),%rcx
   1d394:	cmp    $0xffffffff,%ecx
   1d397:	je     1d3cf <png_handle_cHRM+0x19f>
   1d399:	movslq -0x2c(%rbp),%rcx
   1d39d:	cmp    $0xffffffff,%ecx
   1d3a0:	je     1d3cf <png_handle_cHRM+0x19f>
   1d3a2:	movslq -0x28(%rbp),%rcx
   1d3a6:	cmp    $0xffffffff,%ecx
   1d3a9:	je     1d3cf <png_handle_cHRM+0x19f>
   1d3ab:	cmp    $0xffffffff,%eax
   1d3ae:	je     1d3cf <png_handle_cHRM+0x19f>
   1d3b0:	mov    -0x18(%rbp),%r15
   1d3b4:	movzwl 0x4e2(%r15),%eax
   1d3bc:	mov    %rax,%rcx
   1d3bf:	and    $0x8000,%ecx
   1d3c5:	test   %ecx,%ecx
   1d3c7:	jle    1d3e5 <png_handle_cHRM+0x1b5>
   1d3c9:	mov    -0x10(%rbp),%r15
   1d3cd:	leaveq 
   1d3ce:	retq   
   1d3cf:	lea    0x1157a(%rip),%rsi        # 2e950 <png_pass_inc.20+0xdd>
   1d3d6:	mov    -0x18(%rbp),%rdi
   1d3da:	callq  5230 <png_chunk_benign_error@plt>
   1d3df:	mov    -0x10(%rbp),%r15
   1d3e3:	leaveq 
   1d3e4:	retq   
   1d3e5:	mov    %rax,%rcx
   1d3e8:	and    $0x10,%ecx
   1d3eb:	test   %ecx,%ecx
   1d3ed:	jg     1d425 <png_handle_cHRM+0x1f5>
   1d3ef:	or     $0x10,%ax
   1d3f3:	mov    %ax,0x4e2(%r15)
   1d3fb:	lea    0x498(%r15),%rsi
   1d402:	lea    -0x38(%rbp),%rdx
   1d406:	mov    $0x1,%ecx
   1d40b:	mov    %r15,%rdi
   1d40e:	callq  7060 <png_colorspace_set_chromaticities>
   1d413:	mov    %r15,%rdi
   1d416:	mov    -0x8(%rbp),%rsi
   1d41a:	callq  7010 <png_colorspace_sync>
   1d41f:	mov    -0x10(%rbp),%r15
   1d423:	leaveq 
   1d424:	retq   
   1d425:	or     $0x8000,%ax
   1d429:	mov    %ax,0x4e2(%r15)
   1d431:	mov    %r15,%rdi
   1d434:	mov    -0x8(%rbp),%rsi
   1d438:	callq  7010 <png_colorspace_sync>
   1d43d:	mov    %r15,%rdi
   1d440:	lea    0x1149f(%rip),%rsi        # 2e8e6 <png_pass_inc.20+0x73>
   1d447:	callq  5230 <png_chunk_benign_error@plt>
   1d44c:	mov    -0x10(%rbp),%r15
   1d450:	leaveq 
   1d451:	retq   
   1d452:	data16 nopw %cs:0x0(%rax,%rax,1)
   1d45d:	nopl   (%rax)

000000000001d460 <png_handle_eXIf>:
   1d460:	push   %rbp
   1d461:	mov    %rsp,%rbp
   1d464:	sub    $0x30,%rsp
   1d468:	mov    0x12c(%rdi),%eax
   1d46e:	and    $0x1,%eax
   1d471:	test   %eax,%eax
   1d473:	je     1d4fe <png_handle_eXIf+0x9e>
   1d479:	cmp    $0x1,%edx
   1d47c:	jbe    1d50a <png_handle_eXIf+0xaa>
   1d482:	test   %rsi,%rsi
   1d485:	je     1d534 <png_handle_eXIf+0xd4>
   1d48b:	mov    0x8(%rsi),%eax
   1d48e:	and    $0x10000,%eax
   1d493:	test   %eax,%eax
   1d495:	jne    1d534 <png_handle_eXIf+0xd4>
   1d49b:	mov    0x12c(%rsi),%eax
   1d4a1:	or     $0x8000,%eax
   1d4a6:	mov    %eax,0x12c(%rsi)
   1d4ac:	mov    %edx,%ecx
   1d4ae:	mov    %rdi,%rax
   1d4b1:	mov    %r13,-0x18(%rbp)
   1d4b5:	mov    %r14,-0x20(%rbp)
   1d4b9:	mov    %r15,-0x28(%rbp)
   1d4bd:	mov    %rdx,%r13
   1d4c0:	mov    %rsi,%r14
   1d4c3:	mov    %rcx,%rsi
   1d4c6:	mov    %rbx,%r15
   1d4c9:	mov    %rdi,%rbx
   1d4cc:	mov    %rax,%rdi
   1d4cf:	callq  5150 <png_malloc_warn@plt>
   1d4d4:	mov    %rax,0xf8(%r14)
   1d4db:	test   %rax,%rax
   1d4de:	je     1d55e <png_handle_eXIf+0xfe>
   1d4e0:	lea    -0x29(%rbp),%rax
   1d4e4:	mov    $0x1,%edx
   1d4e9:	xor    %ecx,%ecx
   1d4eb:	mov    %r15,-0x8(%rbp)
   1d4ef:	mov    %r12,-0x10(%rbp)
   1d4f3:	mov    %rcx,%r12
   1d4f6:	mov    %rax,%r15
   1d4f9:	jmpq   1d5b4 <png_handle_eXIf+0x154>
   1d4fe:	lea    0x113d4(%rip),%rsi        # 2e8d9 <png_pass_inc.20+0x66>
   1d505:	callq  5060 <png_chunk_error@plt>
   1d50a:	mov    %rdi,%rax
   1d50d:	mov    %r15,-0x28(%rbp)
   1d511:	mov    %rdx,%rsi
   1d514:	mov    %rdi,%r15
   1d517:	mov    %rax,%rdi
   1d51a:	callq  1b270 <png_crc_finish>
   1d51f:	mov    %r15,%rdi
   1d522:	lea    0x11436(%rip),%rsi        # 2e95f <png_pass_inc.20+0xec>
   1d529:	callq  5230 <png_chunk_benign_error@plt>
   1d52e:	mov    -0x28(%rbp),%r15
   1d532:	leaveq 
   1d533:	retq   
   1d534:	mov    %rdi,%rax
   1d537:	mov    %r15,-0x28(%rbp)
   1d53b:	mov    %rdx,%rsi
   1d53e:	mov    %rdi,%r15
   1d541:	mov    %rax,%rdi
   1d544:	callq  1b270 <png_crc_finish>
   1d549:	mov    %r15,%rdi
   1d54c:	lea    0x11393(%rip),%rsi        # 2e8e6 <png_pass_inc.20+0x73>
   1d553:	callq  5230 <png_chunk_benign_error@plt>
   1d558:	mov    -0x28(%rbp),%r15
   1d55c:	leaveq 
   1d55d:	retq   
   1d55e:	mov    %r13,%rsi
   1d561:	mov    %rbx,%rdi
   1d564:	callq  1b270 <png_crc_finish>
   1d569:	mov    %rbx,%rdi
   1d56c:	lea    0x113f6(%rip),%rsi        # 2e969 <png_pass_inc.20+0xf6>
   1d573:	callq  5230 <png_chunk_benign_error@plt>
   1d578:	mov    %r15,%rbx
   1d57b:	mov    -0x28(%rbp),%r15
   1d57f:	mov    -0x20(%rbp),%r14
   1d583:	mov    -0x18(%rbp),%r13
   1d587:	leaveq 
   1d588:	retq   
   1d589:	mov    %rbx,%rdi
   1d58c:	mov    %r15,%rsi
   1d58f:	callq  1b210 <png_crc_read>
   1d594:	movzbl -0x29(%rbp),%edx
   1d598:	mov    0xf8(%r14),%rcx
   1d59f:	mov    %r12d,%eax
   1d5a2:	mov    %dl,(%rcx,%rax,1)
   1d5a5:	cmp    $0x1,%r12d
   1d5a9:	je     1d5dd <png_handle_eXIf+0x17d>
   1d5ab:	add    $0x1,%r12d
   1d5af:	mov    $0x1,%edx
   1d5b4:	cmp    %r12d,%r13d
   1d5b7:	ja     1d589 <png_handle_eXIf+0x129>
   1d5b9:	mov    %rbx,%rdi
   1d5bc:	xor    %esi,%esi
   1d5be:	callq  1b270 <png_crc_finish>
   1d5c3:	test   %eax,%eax
   1d5c5:	je     1d643 <png_handle_eXIf+0x1e3>
   1d5c7:	mov    -0x10(%rbp),%r12
   1d5cb:	mov    -0x8(%rbp),%rbx
   1d5cf:	mov    -0x28(%rbp),%r15
   1d5d3:	mov    -0x20(%rbp),%r14
   1d5d7:	mov    -0x18(%rbp),%r13
   1d5db:	leaveq 
   1d5dc:	retq   
   1d5dd:	movzbl -0x29(%rbp),%ecx
   1d5e1:	cmp    $0x4d,%cl
   1d5e4:	je     1d5ab <png_handle_eXIf+0x14b>
   1d5e6:	cmp    $0x49,%cl
   1d5e9:	je     1d5ab <png_handle_eXIf+0x14b>
   1d5eb:	mov    0xf8(%r14),%rax
   1d5f2:	movzbl (%rax),%eax
   1d5f5:	cmp    %al,%cl
   1d5f7:	je     1d5ab <png_handle_eXIf+0x14b>
   1d5f9:	mov    %r13,%rsi
   1d5fc:	mov    %rbx,%rdi
   1d5ff:	callq  1b270 <png_crc_finish>
   1d604:	lea    0x1136c(%rip),%rsi        # 2e977 <png_pass_inc.20+0x104>
   1d60b:	mov    %rbx,%rdi
   1d60e:	callq  5230 <png_chunk_benign_error@plt>
   1d613:	mov    %rbx,%rdi
   1d616:	mov    0xf8(%r14),%rsi
   1d61d:	callq  5790 <png_free@plt>
   1d622:	movq   $0x0,0xf8(%r14)
   1d62d:	mov    -0x10(%rbp),%r12
   1d631:	mov    -0x8(%rbp),%rbx
   1d635:	mov    -0x28(%rbp),%r15
   1d639:	mov    -0x20(%rbp),%r14
   1d63d:	mov    -0x18(%rbp),%r13
   1d641:	leaveq 
   1d642:	retq   
   1d643:	mov    %r13,%rdx
   1d646:	mov    0xf8(%r14),%rcx
   1d64d:	mov    %rbx,%rdi
   1d650:	mov    %r14,%rsi
   1d653:	callq  5430 <png_set_eXIf_1@plt>
   1d658:	mov    %rbx,%rdi
   1d65b:	mov    0xf8(%r14),%rsi
   1d662:	callq  5790 <png_free@plt>
   1d667:	movq   $0x0,0xf8(%r14)
   1d672:	mov    -0x10(%rbp),%r12
   1d676:	mov    -0x8(%rbp),%rbx
   1d67a:	mov    -0x28(%rbp),%r15
   1d67e:	mov    -0x20(%rbp),%r14
   1d682:	mov    -0x18(%rbp),%r13
   1d686:	leaveq 
   1d687:	retq   
   1d688:	nopl   0x0(%rax,%rax,1)

000000000001d690 <png_handle_gAMA>:
   1d690:	push   %rbp
   1d691:	mov    %rsp,%rbp
   1d694:	sub    $0x20,%rsp
   1d698:	mov    0x12c(%rdi),%eax
   1d69e:	mov    %rax,%rcx
   1d6a1:	and    $0x1,%ecx
   1d6a4:	test   %ecx,%ecx
   1d6a6:	je     1d6ea <png_handle_gAMA+0x5a>
   1d6a8:	and    $0x6,%eax
   1d6ab:	test   %eax,%eax
   1d6ad:	jne    1d6f6 <png_handle_gAMA+0x66>
   1d6af:	cmp    $0x4,%edx
   1d6b2:	jne    1d720 <png_handle_gAMA+0x90>
   1d6b4:	lea    -0x14(%rbp),%rax
   1d6b8:	mov    $0x4,%edx
   1d6bd:	mov    %rdi,%rcx
   1d6c0:	mov    %r15,-0x10(%rbp)
   1d6c4:	mov    %rsi,-0x8(%rbp)
   1d6c8:	mov    %rax,%rsi
   1d6cb:	mov    %rdi,%r15
   1d6ce:	mov    %rcx,%rdi
   1d6d1:	callq  1b210 <png_crc_read>
   1d6d6:	xor    %esi,%esi
   1d6d8:	mov    %r15,%rdi
   1d6db:	callq  1b270 <png_crc_finish>
   1d6e0:	test   %eax,%eax
   1d6e2:	je     1d74a <png_handle_gAMA+0xba>
   1d6e4:	mov    -0x10(%rbp),%r15
   1d6e8:	leaveq 
   1d6e9:	retq   
   1d6ea:	lea    0x111e8(%rip),%rsi        # 2e8d9 <png_pass_inc.20+0x66>
   1d6f1:	callq  5060 <png_chunk_error@plt>
   1d6f6:	mov    %rdi,%rax
   1d6f9:	mov    %r15,-0x10(%rbp)
   1d6fd:	mov    %rdx,%rsi
   1d700:	mov    %rdi,%r15
   1d703:	mov    %rax,%rdi
   1d706:	callq  1b270 <png_crc_finish>
   1d70b:	mov    %r15,%rdi
   1d70e:	lea    0x111af(%rip),%rsi        # 2e8c4 <png_pass_inc.20+0x51>
   1d715:	callq  5230 <png_chunk_benign_error@plt>
   1d71a:	mov    -0x10(%rbp),%r15
   1d71e:	leaveq 
   1d71f:	retq   
   1d720:	mov    %rdi,%rax
   1d723:	mov    %r15,-0x10(%rbp)
   1d727:	mov    %rdx,%rsi
   1d72a:	mov    %rdi,%r15
   1d72d:	mov    %rax,%rdi
   1d730:	callq  1b270 <png_crc_finish>
   1d735:	mov    %r15,%rdi
   1d738:	lea    0x11192(%rip),%rsi        # 2e8d1 <png_pass_inc.20+0x5e>
   1d73f:	callq  5230 <png_chunk_benign_error@plt>
   1d744:	mov    -0x10(%rbp),%r15
   1d748:	leaveq 
   1d749:	retq   
   1d74a:	xor    %edi,%edi
   1d74c:	lea    -0x14(%rbp),%rsi
   1d750:	callq  20050 <png_get_fixed_point>
   1d755:	mov    %rax,%rdx
   1d758:	lea    0x498(%r15),%rsi
   1d75f:	mov    %r15,%rdi
   1d762:	callq  6ec0 <png_colorspace_set_gamma>
   1d767:	mov    %r15,%rdi
   1d76a:	mov    -0x8(%rbp),%rsi
   1d76e:	callq  7010 <png_colorspace_sync>
   1d773:	mov    -0x10(%rbp),%r15
   1d777:	leaveq 
   1d778:	retq   
   1d779:	nopl   0x0(%rax)

000000000001d780 <png_handle_hIST>:
   1d780:	push   %rbp
   1d781:	mov    %rsp,%rbp
   1d784:	sub    $0x240,%rsp
   1d78b:	mov    0x12c(%rdi),%eax
   1d791:	mov    %rax,%rcx
   1d794:	and    $0x1,%ecx
   1d797:	test   %ecx,%ecx
   1d799:	je     1d80a <png_handle_hIST+0x8a>
   1d79b:	mov    %rax,%rcx
   1d79e:	and    $0x4,%ecx
   1d7a1:	test   %ecx,%ecx
   1d7a3:	jne    1d816 <png_handle_hIST+0x96>
   1d7a5:	and    $0x2,%eax
   1d7a8:	test   %eax,%eax
   1d7aa:	je     1d816 <png_handle_hIST+0x96>
   1d7ac:	test   %rsi,%rsi
   1d7af:	jne    1d840 <png_handle_hIST+0xc0>
   1d7b5:	mov    %rdx,%rcx
   1d7b8:	shr    %ecx
   1d7ba:	movzwl 0x258(%rdi),%eax
   1d7c1:	cmp    %ecx,%eax
   1d7c3:	jne    1d878 <png_handle_hIST+0xf8>
   1d7c9:	cmp    $0x100,%ecx
   1d7cf:	ja     1d878 <png_handle_hIST+0xf8>
   1d7d5:	xor    %r8d,%r8d
   1d7d8:	lea    -0x32(%rbp),%rdx
   1d7dc:	mov    $0x2,%eax
   1d7e1:	mov    %r15,-0x30(%rbp)
   1d7e5:	mov    %rsi,-0x8(%rbp)
   1d7e9:	mov    %rbx,-0x10(%rbp)
   1d7ed:	mov    %r12,-0x18(%rbp)
   1d7f1:	mov    %r13,-0x20(%rbp)
   1d7f5:	mov    %r14,-0x28(%rbp)
   1d7f9:	mov    %r8,%rbx
   1d7fc:	mov    %rcx,%r12
   1d7ff:	mov    %rax,%r13
   1d802:	mov    %rdx,%r14
   1d805:	jmpq   1d8cd <png_handle_hIST+0x14d>
   1d80a:	lea    0x110c8(%rip),%rsi        # 2e8d9 <png_pass_inc.20+0x66>
   1d811:	callq  5060 <png_chunk_error@plt>
   1d816:	mov    %rdi,%rax
   1d819:	mov    %r15,-0x30(%rbp)
   1d81d:	mov    %rdx,%rsi
   1d820:	mov    %rdi,%r15
   1d823:	mov    %rax,%rdi
   1d826:	callq  1b270 <png_crc_finish>
   1d82b:	mov    %r15,%rdi
   1d82e:	lea    0x1108f(%rip),%rsi        # 2e8c4 <png_pass_inc.20+0x51>
   1d835:	callq  5230 <png_chunk_benign_error@plt>
   1d83a:	mov    -0x30(%rbp),%r15
   1d83e:	leaveq 
   1d83f:	retq   
   1d840:	mov    0x8(%rsi),%eax
   1d843:	and    $0x40,%eax
   1d846:	test   %eax,%eax
   1d848:	je     1d7b5 <png_handle_hIST+0x35>
   1d84e:	mov    %rdi,%rax
   1d851:	mov    %r15,-0x30(%rbp)
   1d855:	mov    %rdx,%rsi
   1d858:	mov    %rdi,%r15
   1d85b:	mov    %rax,%rdi
   1d85e:	callq  1b270 <png_crc_finish>
   1d863:	mov    %r15,%rdi
   1d866:	lea    0x11079(%rip),%rsi        # 2e8e6 <png_pass_inc.20+0x73>
   1d86d:	callq  5230 <png_chunk_benign_error@plt>
   1d872:	mov    -0x30(%rbp),%r15
   1d876:	leaveq 
   1d877:	retq   
   1d878:	mov    %rdi,%rax
   1d87b:	mov    %r15,-0x30(%rbp)
   1d87f:	mov    %rdx,%rsi
   1d882:	mov    %rdi,%r15
   1d885:	mov    %rax,%rdi
   1d888:	callq  1b270 <png_crc_finish>
   1d88d:	mov    %r15,%rdi
   1d890:	lea    0x1103a(%rip),%rsi        # 2e8d1 <png_pass_inc.20+0x5e>
   1d897:	callq  5230 <png_chunk_benign_error@plt>
   1d89c:	mov    -0x30(%rbp),%r15
   1d8a0:	leaveq 
   1d8a1:	retq   
   1d8a2:	mov    %rdi,%r15
   1d8a5:	mov    %r14,%rsi
   1d8a8:	mov    %r13,%rdx
   1d8ab:	callq  1b210 <png_crc_read>
   1d8b0:	movzbl -0x31(%rbp),%ecx
   1d8b4:	movzbl -0x32(%rbp),%eax
   1d8b8:	shl    $0x8,%eax
   1d8bb:	add    %eax,%ecx
   1d8bd:	mov    %ebx,%eax
   1d8bf:	mov    %cx,-0x232(%rbp,%rax,2)
   1d8c7:	add    $0x1,%ebx
   1d8ca:	mov    %r15,%rdi
   1d8cd:	cmp    %r12d,%ebx
   1d8d0:	jb     1d8a2 <png_handle_hIST+0x122>
   1d8d2:	mov    %rdi,%rbx
   1d8d5:	xor    %esi,%esi
   1d8d7:	callq  1b270 <png_crc_finish>
   1d8dc:	test   %eax,%eax
   1d8de:	je     1d8f6 <png_handle_hIST+0x176>
   1d8e0:	mov    -0x28(%rbp),%r14
   1d8e4:	mov    -0x20(%rbp),%r13
   1d8e8:	mov    -0x18(%rbp),%r12
   1d8ec:	mov    -0x10(%rbp),%rbx
   1d8f0:	mov    -0x30(%rbp),%r15
   1d8f4:	leaveq 
   1d8f5:	retq   
   1d8f6:	mov    %rbx,%rdi
   1d8f9:	lea    -0x232(%rbp),%rdx
   1d900:	mov    -0x8(%rbp),%rsi
   1d904:	callq  5190 <png_set_hIST@plt>
   1d909:	mov    -0x28(%rbp),%r14
   1d90d:	mov    -0x20(%rbp),%r13
   1d911:	mov    -0x18(%rbp),%r12
   1d915:	mov    -0x10(%rbp),%rbx
   1d919:	mov    -0x30(%rbp),%r15
   1d91d:	leaveq 
   1d91e:	retq   
   1d91f:	nop

000000000001d920 <png_handle_iCCP>:
   1d920:	push   %rbp
   1d921:	mov    %rsp,%rbp
   1d924:	sub    $0x550,%rsp
   1d92b:	mov    %edx,-0x54c(%rbp)
   1d931:	mov    0x12c(%rdi),%eax
   1d937:	mov    %rax,%rcx
   1d93a:	and    $0x1,%ecx
   1d93d:	test   %ecx,%ecx
   1d93f:	je     1da0a <png_handle_iCCP+0xea>
   1d945:	and    $0x6,%eax
   1d948:	test   %eax,%eax
   1d94a:	jne    1da16 <png_handle_iCCP+0xf6>
   1d950:	mov    -0x54c(%rbp),%eax
   1d956:	cmp    $0xd,%eax
   1d959:	jbe    1da43 <png_handle_iCCP+0x123>
   1d95f:	movzwl 0x4e2(%rdi),%ecx
   1d966:	mov    %rcx,%rdx
   1d969:	and    $0x8000,%edx
   1d96f:	test   %edx,%edx
   1d971:	jg     1da6d <png_handle_iCCP+0x14d>
   1d977:	xor    %r8d,%r8d
   1d97a:	mov    %r8,-0x38(%rbp)
   1d97e:	and    $0x4,%ecx
   1d981:	test   %ecx,%ecx
   1d983:	je     1da77 <png_handle_iCCP+0x157>
   1d989:	lea    0x110c3(%rip),%rcx        # 2ea53 <png_pass_inc.20+0x1e0>
   1d990:	test   %r8d,%r8d
   1d993:	jne    1d9d3 <png_handle_iCCP+0xb3>
   1d995:	mov    -0x54c(%rbp),%edx
   1d99b:	mov    %rdi,%rax
   1d99e:	mov    %r14,-0x60(%rbp)
   1d9a2:	mov    %r15,-0x68(%rbp)
   1d9a6:	mov    %r13,-0x58(%rbp)
   1d9aa:	mov    %rdi,%r13
   1d9ad:	mov    %rax,%rdi
   1d9b0:	mov    %rcx,%r14
   1d9b3:	mov    %rsi,%r15
   1d9b6:	mov    %rdx,%rsi
   1d9b9:	callq  1b270 <png_crc_finish>
   1d9be:	mov    %r14,%rcx
   1d9c1:	mov    %r15,%rsi
   1d9c4:	mov    %r13,%rdi
   1d9c7:	mov    -0x58(%rbp),%r13
   1d9cb:	mov    -0x68(%rbp),%r15
   1d9cf:	mov    -0x60(%rbp),%r14
   1d9d3:	movzwl 0x4e2(%rdi),%eax
   1d9da:	or     $0x8000,%ax
   1d9de:	mov    %ax,0x4e2(%rdi)
   1d9e5:	mov    %rdi,%rax
   1d9e8:	mov    %r15,-0x68(%rbp)
   1d9ec:	mov    %rdi,-0x50(%rbp)
   1d9f0:	mov    %rax,%rdi
   1d9f3:	mov    %rcx,%r15
   1d9f6:	callq  7010 <png_colorspace_sync>
   1d9fb:	test   %r15,%r15
   1d9fe:	jne    1dac3 <png_handle_iCCP+0x1a3>
   1da04:	mov    -0x68(%rbp),%r15
   1da08:	leaveq 
   1da09:	retq   
   1da0a:	lea    0x10ec8(%rip),%rsi        # 2e8d9 <png_pass_inc.20+0x66>
   1da11:	callq  5060 <png_chunk_error@plt>
   1da16:	mov    -0x54c(%rbp),%esi
   1da1c:	mov    %rdi,%rax
   1da1f:	mov    %r15,-0x68(%rbp)
   1da23:	mov    %rdi,%r15
   1da26:	mov    %rax,%rdi
   1da29:	callq  1b270 <png_crc_finish>
   1da2e:	mov    %r15,%rdi
   1da31:	lea    0x10e8c(%rip),%rsi        # 2e8c4 <png_pass_inc.20+0x51>
   1da38:	callq  5230 <png_chunk_benign_error@plt>
   1da3d:	mov    -0x68(%rbp),%r15
   1da41:	leaveq 
   1da42:	retq   
   1da43:	mov    %rdi,%rcx
   1da46:	mov    %r15,-0x68(%rbp)
   1da4a:	mov    %rax,%rsi
   1da4d:	mov    %rdi,%r15
   1da50:	mov    %rcx,%rdi
   1da53:	callq  1b270 <png_crc_finish>
   1da58:	mov    %r15,%rdi
   1da5b:	lea    0x10efd(%rip),%rsi        # 2e95f <png_pass_inc.20+0xec>
   1da62:	callq  5230 <png_chunk_benign_error@plt>
   1da67:	mov    -0x68(%rbp),%r15
   1da6b:	leaveq 
   1da6c:	retq   
   1da6d:	mov    %rax,%rsi
   1da70:	callq  1b270 <png_crc_finish>
   1da75:	leaveq 
   1da76:	retq   
   1da77:	cmp    $0x50,%eax
   1da7a:	jbe    1da81 <png_handle_iCCP+0x161>
   1da7c:	mov    $0x51,%eax
   1da81:	lea    -0x545(%rbp),%rcx
   1da88:	mov    %rdi,%r8
   1da8b:	mov    %rax,%rdx
   1da8e:	mov    %r14,-0x20(%rbp)
   1da92:	mov    %r15,-0x28(%rbp)
   1da96:	mov    %rsi,-0x48(%rbp)
   1da9a:	mov    %rcx,%rsi
   1da9d:	mov    %rax,%r14
   1daa0:	mov    %rdi,%r15
   1daa3:	mov    %r8,%rdi
   1daa6:	callq  1b210 <png_crc_read>
   1daab:	mov    -0x54c(%rbp),%esi
   1dab1:	sub    %r14d,%esi
   1dab4:	mov    %esi,-0x54c(%rbp)
   1daba:	cmp    $0xa,%esi
   1dabd:	jbe    1dad5 <png_handle_iCCP+0x1b5>
   1dabf:	xor    %eax,%eax
   1dac1:	jmp    1db0d <png_handle_iCCP+0x1ed>
   1dac3:	mov    %r15,%rsi
   1dac6:	mov    -0x50(%rbp),%rdi
   1daca:	callq  5230 <png_chunk_benign_error@plt>
   1dacf:	mov    -0x68(%rbp),%r15
   1dad3:	leaveq 
   1dad4:	retq   
   1dad5:	mov    %r15,%rdi
   1dad8:	callq  1b270 <png_crc_finish>
   1dadd:	mov    %r15,%rdi
   1dae0:	lea    0x10e78(%rip),%rsi        # 2e95f <png_pass_inc.20+0xec>
   1dae7:	callq  5230 <png_chunk_benign_error@plt>
   1daec:	mov    -0x28(%rbp),%r15
   1daf0:	mov    -0x20(%rbp),%r14
   1daf4:	leaveq 
   1daf5:	retq   
   1daf6:	cmp    %eax,%r14d
   1daf9:	jbe    1db12 <png_handle_iCCP+0x1f2>
   1dafb:	mov    %eax,%ecx
   1dafd:	movsbq -0x545(%rbp,%rcx,1),%rcx
   1db06:	test   %cl,%cl
   1db08:	je     1db12 <png_handle_iCCP+0x1f2>
   1db0a:	add    $0x1,%eax
   1db0d:	cmp    $0x4f,%eax
   1db10:	jbe    1daf6 <png_handle_iCCP+0x1d6>
   1db12:	lea    0x10f2e(%rip),%rcx        # 2ea47 <png_pass_inc.20+0x1d4>
   1db19:	test   %eax,%eax
   1db1b:	jne    1db34 <png_handle_iCCP+0x214>
   1db1d:	mov    %r15,%rdi
   1db20:	mov    -0x48(%rbp),%rsi
   1db24:	xor    %r8d,%r8d
   1db27:	mov    -0x28(%rbp),%r15
   1db2b:	mov    -0x20(%rbp),%r14
   1db2f:	jmpq   1d990 <png_handle_iCCP+0x70>
   1db34:	cmp    $0x4f,%eax
   1db37:	jbe    1db50 <png_handle_iCCP+0x230>
   1db39:	mov    %r15,%rdi
   1db3c:	mov    -0x48(%rbp),%rsi
   1db40:	xor    %r8d,%r8d
   1db43:	mov    -0x28(%rbp),%r15
   1db47:	mov    -0x20(%rbp),%r14
   1db4b:	jmpq   1d990 <png_handle_iCCP+0x70>
   1db50:	lea    0x10ed9(%rip),%rcx        # 2ea30 <png_pass_inc.20+0x1bd>
   1db57:	lea    0x1(%rax),%r8d
   1db5b:	cmp    %r8d,%r14d
   1db5e:	ja     1db77 <png_handle_iCCP+0x257>
   1db60:	mov    %r15,%rdi
   1db63:	mov    -0x48(%rbp),%rsi
   1db67:	xor    %r8d,%r8d
   1db6a:	mov    -0x28(%rbp),%r15
   1db6e:	mov    -0x20(%rbp),%r14
   1db72:	jmpq   1d990 <png_handle_iCCP+0x70>
   1db77:	mov    %r8d,%edx
   1db7a:	movsbq -0x545(%rbp,%rdx,1),%rdx
   1db83:	test   %dl,%dl
   1db85:	je     1db9e <png_handle_iCCP+0x27e>
   1db87:	mov    %r15,%rdi
   1db8a:	mov    -0x48(%rbp),%rsi
   1db8e:	xor    %r8d,%r8d
   1db91:	mov    -0x28(%rbp),%r15
   1db95:	mov    -0x20(%rbp),%r14
   1db99:	jmpq   1d990 <png_handle_iCCP+0x70>
   1db9e:	mov    $0x69434350,%esi
   1dba3:	mov    %r15,%rdi
   1dba6:	mov    %r13,-0x18(%rbp)
   1dbaa:	mov    %r8,-0x40(%rbp)
   1dbae:	mov    %rax,%r13
   1dbb1:	callq  201b0 <png_inflate_claim>
   1dbb6:	test   %eax,%eax
   1dbb8:	je     1dbdc <png_handle_iCCP+0x2bc>
   1dbba:	mov    %r15,%rdi
   1dbbd:	mov    0x170(%rdi),%rcx
   1dbc4:	mov    -0x18(%rbp),%r13
   1dbc8:	mov    -0x48(%rbp),%rsi
   1dbcc:	xor    %r8d,%r8d
   1dbcf:	mov    -0x28(%rbp),%r15
   1dbd3:	mov    -0x20(%rbp),%r14
   1dbd7:	jmpq   1d990 <png_handle_iCCP+0x70>
   1dbdc:	lea    -0x4f4(%rbp),%rdi
   1dbe3:	lea    0x10dac(%rip),%rsi        # 2e996 <png_pass_inc.20+0x123>
   1dbea:	mov    $0x84,%edx
   1dbef:	callq  54c0 <memcpy@plt>
   1dbf4:	movq   $0x84,-0x70(%rbp)
   1dbfc:	lea    0x2(%r13),%ecx
   1dc00:	mov    %ecx,%eax
   1dc02:	lea    -0x545(%rbp,%rax,1),%rax
   1dc0a:	mov    %rax,0x140(%r15)
   1dc11:	sub    %ecx,%r14d
   1dc14:	mov    %r14d,0x148(%r15)
   1dc1b:	sub    $0x10,%rsp
   1dc1f:	movl   $0x0,(%rsp)
   1dc26:	lea    -0x470(%rbp),%rsi
   1dc2d:	mov    $0x400,%edx
   1dc32:	lea    -0x54c(%rbp),%rcx
   1dc39:	lea    -0x70(%rbp),%r9
   1dc3d:	mov    %r15,%rdi
   1dc40:	lea    -0x4f4(%rbp),%r8
   1dc47:	callq  207e0 <png_inflate_read>
   1dc4c:	add    $0x10,%rsp
   1dc50:	mov    -0x70(%rbp),%rax
   1dc54:	test   %rax,%rax
   1dc57:	je     1dc85 <png_handle_iCCP+0x365>
   1dc59:	mov    %r15,%rdi
   1dc5c:	mov    0x170(%rdi),%rcx
   1dc63:	mov    -0x48(%rbp),%rsi
   1dc67:	xor    %r8d,%r8d
   1dc6a:	movl   $0x0,0x138(%rdi)
   1dc74:	mov    -0x18(%rbp),%r13
   1dc78:	mov    -0x28(%rbp),%r15
   1dc7c:	mov    -0x20(%rbp),%r14
   1dc80:	jmpq   1d990 <png_handle_iCCP+0x70>
   1dc85:	movzbl -0x4f4(%rbp),%eax
   1dc8c:	shl    $0x18,%eax
   1dc8f:	movzbl -0x4f3(%rbp),%ecx
   1dc96:	shl    $0x10,%ecx
   1dc99:	add    %eax,%ecx
   1dc9b:	movzbl -0x4f2(%rbp),%eax
   1dca2:	shl    $0x8,%eax
   1dca5:	add    %ecx,%eax
   1dca7:	movzbl -0x4f1(%rbp),%ecx
   1dcae:	lea    (%rcx,%rax,1),%r13d
   1dcb2:	lea    0x498(%r15),%r14
   1dcb9:	mov    %r15,%rdi
   1dcbc:	mov    %r14,%rsi
   1dcbf:	lea    -0x545(%rbp),%rdx
   1dcc6:	mov    %r13,%rcx
   1dcc9:	callq  74a0 <png_icc_check_length>
   1dcce:	test   %eax,%eax
   1dcd0:	jne    1dce1 <png_handle_iCCP+0x3c1>
   1dcd2:	mov    %r15,%rdi
   1dcd5:	mov    -0x48(%rbp),%rsi
   1dcd9:	xor    %r8d,%r8d
   1dcdc:	mov    %r8,%rcx
   1dcdf:	jmp    1dc6a <png_handle_iCCP+0x34a>
   1dce1:	movzbl 0x267(%r15),%r9d
   1dce9:	mov    %r15,%rdi
   1dcec:	mov    %r14,%rsi
   1dcef:	lea    -0x545(%rbp),%rdx
   1dcf6:	mov    %r13,%rcx
   1dcf9:	lea    -0x4f4(%rbp),%r8
   1dd00:	callq  7520 <png_icc_check_header>
   1dd05:	test   %eax,%eax
   1dd07:	jne    1dd1b <png_handle_iCCP+0x3fb>
   1dd09:	mov    %r15,%rdi
   1dd0c:	mov    -0x48(%rbp),%rsi
   1dd10:	xor    %r8d,%r8d
   1dd13:	mov    %r8,%rcx
   1dd16:	jmpq   1dc6a <png_handle_iCCP+0x34a>
   1dd1b:	movzbl -0x471(%rbp),%r10d
   1dd23:	movzbl -0x474(%rbp),%ecx
   1dd2a:	movzbl -0x473(%rbp),%r9d
   1dd32:	movzbl -0x472(%rbp),%r8d
   1dd3a:	lea    0x10c28(%rip),%rax        # 2e969 <png_pass_inc.20+0xf6>
   1dd41:	mov    %rax,-0x30(%rbp)
   1dd45:	mov    %r13d,%esi
   1dd48:	mov    %rsi,-0x50(%rbp)
   1dd4c:	mov    $0x2,%edx
   1dd51:	mov    %r15,%rdi
   1dd54:	mov    %rbx,-0x8(%rbp)
   1dd58:	mov    %r12,-0x10(%rbp)
   1dd5c:	mov    %r14,-0x58(%rbp)
   1dd60:	mov    %r13,-0x60(%rbp)
   1dd64:	mov    %r10,%rbx
   1dd67:	mov    %rcx,%r12
   1dd6a:	mov    %r8,%r13
   1dd6d:	mov    %r9,%r14
   1dd70:	callq  200a0 <png_read_buffer>
   1dd75:	test   %rax,%rax
   1dd78:	jne    1dd98 <png_handle_iCCP+0x478>
   1dd7a:	mov    %r15,%rdi
   1dd7d:	lea    0x10be5(%rip),%rcx        # 2e969 <png_pass_inc.20+0xf6>
   1dd84:	mov    -0x10(%rbp),%r12
   1dd88:	mov    -0x8(%rbp),%rbx
   1dd8c:	mov    -0x48(%rbp),%rsi
   1dd90:	xor    %r8d,%r8d
   1dd93:	jmpq   1dc6a <png_handle_iCCP+0x34a>
   1dd98:	mov    %rax,%rdi
   1dd9b:	mov    %r15,-0x68(%rbp)
   1dd9f:	mov    %rbx,%r15
   1dda2:	mov    %rax,%rbx
   1dda5:	mov    $0x84,%edx
   1ddaa:	lea    -0x4f4(%rbp),%rsi
   1ddb1:	callq  54c0 <memcpy@plt>
   1ddb6:	sub    $0x10,%rsp
   1ddba:	shl    $0x18,%r12d
   1ddbe:	shl    $0x10,%r14d
   1ddc2:	lea    (%r12,%r14,1),%eax
   1ddc6:	shl    $0x8,%r13d
   1ddca:	add    %r13d,%eax
   1ddcd:	add    %r15d,%eax
   1ddd0:	lea    (%rax,%rax,2),%r14d
   1ddd4:	shl    $0x2,%r14d
   1ddd8:	mov    %r14d,%r15d
   1dddb:	mov    %r15,-0x70(%rbp)
   1dddf:	movl   $0x0,(%rsp)
   1dde6:	lea    0x84(%rbx),%r8
   1dded:	mov    -0x68(%rbp),%r13
   1ddf1:	mov    %r13,%rdi
   1ddf4:	lea    -0x470(%rbp),%rsi
   1ddfb:	mov    $0x400,%edx
   1de00:	lea    -0x54c(%rbp),%rcx
   1de07:	lea    -0x70(%rbp),%r9
   1de0b:	callq  207e0 <png_inflate_read>
   1de10:	add    $0x10,%rsp
   1de14:	mov    -0x70(%rbp),%rax
   1de18:	test   %rax,%rax
   1de1b:	je     1de3b <png_handle_iCCP+0x51b>
   1de1d:	mov    %r13,%rdi
   1de20:	mov    0x170(%rdi),%rcx
   1de27:	mov    -0x10(%rbp),%r12
   1de2b:	mov    -0x8(%rbp),%rbx
   1de2f:	mov    -0x48(%rbp),%rsi
   1de33:	xor    %r8d,%r8d
   1de36:	jmpq   1dc6a <png_handle_iCCP+0x34a>
   1de3b:	mov    %r13,%rdi
   1de3e:	mov    -0x58(%rbp),%r12
   1de42:	mov    %r12,%rsi
   1de45:	lea    -0x545(%rbp),%rdx
   1de4c:	mov    -0x60(%rbp),%rcx
   1de50:	mov    %rbx,%r8
   1de53:	callq  79c0 <png_icc_check_tag_table>
   1de58:	test   %eax,%eax
   1de5a:	jne    1de76 <png_handle_iCCP+0x556>
   1de5c:	mov    %r13,%rdi
   1de5f:	mov    -0x10(%rbp),%r12
   1de63:	mov    -0x8(%rbp),%rbx
   1de67:	mov    -0x48(%rbp),%rsi
   1de6b:	xor    %r8d,%r8d
   1de6e:	mov    %r8,%rcx
   1de71:	jmpq   1dc6a <png_handle_iCCP+0x34a>
   1de76:	sub    $0x10,%rsp
   1de7a:	mov    -0x50(%rbp),%rax
   1de7e:	add    $0xffffffffffffff7c,%rax
   1de84:	sub    %r15,%rax
   1de87:	mov    %rax,-0x70(%rbp)
   1de8b:	movl   $0x1,(%rsp)
   1de92:	mov    %r14d,%eax
   1de95:	lea    0x84(%rbx,%rax,1),%r8
   1de9d:	mov    %r13,%rdi
   1dea0:	lea    -0x470(%rbp),%rsi
   1dea7:	lea    -0x70(%rbp),%r9
   1deab:	lea    -0x54c(%rbp),%rcx
   1deb2:	mov    $0x400,%edx
   1deb7:	callq  207e0 <png_inflate_read>
   1debc:	add    $0x10,%rsp
   1dec0:	lea    0x10b53(%rip),%rcx        # 2ea1a <png_pass_inc.20+0x1a7>
   1dec7:	mov    -0x54c(%rbp),%eax
   1decd:	test   %eax,%eax
   1decf:	je     1deed <png_handle_iCCP+0x5cd>
   1ded1:	mov    0x130(%r13),%eax
   1ded8:	and    $0x100000,%eax
   1dedd:	test   %eax,%eax
   1dedf:	jne    1deed <png_handle_iCCP+0x5cd>
   1dee1:	mov    %r13,%rdi
   1dee4:	mov    -0x48(%rbp),%rsi
   1dee8:	xor    %r8d,%r8d
   1deeb:	jmp    1df03 <png_handle_iCCP+0x5e3>
   1deed:	mov    -0x70(%rbp),%rax
   1def1:	test   %rax,%rax
   1def4:	je     1df19 <png_handle_iCCP+0x5f9>
   1def6:	mov    %r13,%rdi
   1def9:	mov    -0x48(%rbp),%rsi
   1defd:	xor    %r8d,%r8d
   1df00:	mov    %r8,%rcx
   1df03:	test   %rcx,%rcx
   1df06:	je     1dfae <png_handle_iCCP+0x68e>
   1df0c:	mov    -0x10(%rbp),%r12
   1df10:	mov    -0x8(%rbp),%rbx
   1df14:	jmpq   1dc6a <png_handle_iCCP+0x34a>
   1df19:	mov    -0x54c(%rbp),%eax
   1df1f:	test   %eax,%eax
   1df21:	je     1df2e <png_handle_iCCP+0x60e>
   1df23:	mov    %rcx,%rsi
   1df26:	mov    %r13,%rdi
   1df29:	callq  56a0 <png_chunk_warning@plt>
   1df2e:	mov    -0x54c(%rbp),%esi
   1df34:	mov    %r13,%rdi
   1df37:	callq  1b270 <png_crc_finish>
   1df3c:	mov    %r12,%rsi
   1df3f:	mov    0x1a0(%r13),%rcx
   1df46:	mov    %r13,%rdi
   1df49:	mov    %rbx,%rdx
   1df4c:	callq  7b30 <png_icc_set_sRGB>
   1df51:	mov    $0x1,%r8d
   1df57:	mov    -0x48(%rbp),%rsi
   1df5b:	test   %rsi,%rsi
   1df5e:	jne    1dfc2 <png_handle_iCCP+0x6a2>
   1df60:	mov    %r13,%rdi
   1df63:	xor    %eax,%eax
   1df65:	test   %rax,%rax
   1df68:	je     1df81 <png_handle_iCCP+0x661>
   1df6a:	mov    %r8,%rbx
   1df6d:	mov    %rdi,%r12
   1df70:	mov    %rsi,%r13
   1df73:	callq  7010 <png_colorspace_sync>
   1df78:	mov    %r13,%rsi
   1df7b:	mov    %r12,%rdi
   1df7e:	mov    %rbx,%r8
   1df81:	mov    -0x38(%rbp),%rcx
   1df85:	test   %rcx,%rcx
   1df88:	jne    1df03 <png_handle_iCCP+0x5e3>
   1df8e:	movl   $0x0,0x138(%rdi)
   1df98:	mov    -0x10(%rbp),%r12
   1df9c:	mov    -0x8(%rbp),%rbx
   1dfa0:	mov    -0x18(%rbp),%r13
   1dfa4:	mov    -0x28(%rbp),%r15
   1dfa8:	mov    -0x20(%rbp),%r14
   1dfac:	leaveq 
   1dfad:	retq   
   1dfae:	mov    0x170(%rdi),%rcx
   1dfb5:	mov    -0x10(%rbp),%r12
   1dfb9:	mov    -0x8(%rbp),%rbx
   1dfbd:	jmpq   1dc6a <png_handle_iCCP+0x34a>
   1dfc2:	mov    %r8,%r15
   1dfc5:	mov    $0x10,%edx
   1dfca:	mov    %r13,%rdi
   1dfcd:	mov    %rsi,%r14
   1dfd0:	xor    %ecx,%ecx
   1dfd2:	callq  5720 <png_free_data@plt>
   1dfd7:	mov    -0x40(%rbp),%rax
   1dfdb:	mov    %eax,%r12d
   1dfde:	mov    %r13,%rdi
   1dfe1:	mov    %r12,%rsi
   1dfe4:	callq  c940 <png_malloc_base>
   1dfe9:	mov    %rax,0x80(%r14)
   1dff0:	test   %rax,%rax
   1dff3:	jne    1e020 <png_handle_iCCP+0x700>
   1dff5:	movzwl 0x4e2(%r13),%eax
   1dffd:	or     $0x8000,%ax
   1e001:	mov    %ax,0x4e2(%r13)
   1e009:	mov    %r14,%rsi
   1e00c:	mov    %r13,%rdi
   1e00f:	mov    %r15,%r8
   1e012:	mov    %r8,%rax
   1e015:	pushq  -0x30(%rbp)
   1e018:	popq   -0x38(%rbp)
   1e01b:	jmpq   1df65 <png_handle_iCCP+0x645>
   1e020:	mov    %r12,%rdx
   1e023:	mov    %rax,%rdi
   1e026:	lea    -0x545(%rbp),%rsi
   1e02d:	callq  54c0 <memcpy@plt>
   1e032:	mov    -0x60(%rbp),%rax
   1e036:	mov    %eax,0x90(%r14)
   1e03d:	mov    %rbx,0x88(%r14)
   1e044:	movq   $0x0,0x458(%r13)
   1e04f:	mov    0x12c(%r14),%eax
   1e056:	or     $0x10,%eax
   1e059:	mov    %eax,0x12c(%r14)
   1e060:	mov    0x8(%r14),%eax
   1e064:	or     $0x1000,%eax
   1e069:	mov    %eax,0x8(%r14)
   1e06d:	mov    %r14,%rsi
   1e070:	mov    %r13,%rdi
   1e073:	mov    %r15,%r8
   1e076:	mov    %r8,%rax
   1e079:	jmpq   1df65 <png_handle_iCCP+0x645>
   1e07e:	xchg   %ax,%ax

000000000001e080 <png_handle_iTXt>:
   1e080:	push   %rbp
   1e081:	mov    %rsp,%rbp
   1e084:	sub    $0x80,%rsp
   1e08b:	mov    0x424(%rdi),%eax
   1e091:	test   %eax,%eax
   1e093:	jne    1e130 <png_handle_iTXt+0xb0>
   1e099:	mov    0x12c(%rdi),%eax
   1e09f:	mov    %rax,%rcx
   1e0a2:	and    $0x1,%ecx
   1e0a5:	test   %ecx,%ecx
   1e0a7:	je     1e175 <png_handle_iTXt+0xf5>
   1e0ad:	mov    %rax,%rcx
   1e0b0:	and    $0x4,%ecx
   1e0b3:	test   %ecx,%ecx
   1e0b5:	je     1e0c0 <png_handle_iTXt+0x40>
   1e0b7:	or     $0x8,%eax
   1e0ba:	mov    %eax,0x12c(%rdi)
   1e0c0:	lea    0x1(%rdx),%eax
   1e0c3:	mov    %eax,%ecx
   1e0c5:	mov    $0x1,%eax
   1e0ca:	mov    %rdi,%r8
   1e0cd:	mov    %r14,-0x18(%rbp)
   1e0d1:	mov    %r15,-0x20(%rbp)
   1e0d5:	mov    %rsi,-0x28(%rbp)
   1e0d9:	mov    %rcx,%rsi
   1e0dc:	mov    %rdx,%r14
   1e0df:	mov    %rax,%rdx
   1e0e2:	mov    %rdi,%r15
   1e0e5:	mov    %r8,%rdi
   1e0e8:	callq  200a0 <png_read_buffer>
   1e0ed:	test   %rax,%rax
   1e0f0:	je     1e181 <png_handle_iTXt+0x101>
   1e0f6:	mov    %r15,%rdi
   1e0f9:	mov    %rax,%rsi
   1e0fc:	mov    %r14,%rdx
   1e0ff:	mov    %rax,-0x38(%rbp)
   1e103:	callq  1b210 <png_crc_read>
   1e108:	xor    %eax,%eax
   1e10a:	mov    %r15,%rdi
   1e10d:	mov    %rax,%rsi
   1e110:	mov    %r15,-0x30(%rbp)
   1e114:	mov    %rax,%r15
   1e117:	callq  1b270 <png_crc_finish>
   1e11c:	test   %eax,%eax
   1e11e:	jne    1e1a5 <png_handle_iTXt+0x125>
   1e124:	mov    -0x38(%rbp),%r10
   1e128:	mov    %r15,%rax
   1e12b:	jmpq   1e1bd <png_handle_iTXt+0x13d>
   1e130:	cmp    $0x1,%eax
   1e133:	je     1e1e1 <png_handle_iTXt+0x161>
   1e139:	add    $0xffffffff,%eax
   1e13c:	mov    %eax,0x424(%rdi)
   1e142:	cmp    $0x1,%eax
   1e145:	jne    1e099 <png_handle_iTXt+0x19>
   1e14b:	mov    %rdi,%rax
   1e14e:	mov    %r15,-0x38(%rbp)
   1e152:	mov    %rdx,%rsi
   1e155:	mov    %rdi,%r15
   1e158:	mov    %rax,%rdi
   1e15b:	callq  1b270 <png_crc_finish>
   1e160:	mov    %r15,%rdi
   1e163:	lea    0x108fb(%rip),%rsi        # 2ea65 <png_pass_inc.20+0x1f2>
   1e16a:	callq  5230 <png_chunk_benign_error@plt>
   1e16f:	mov    -0x38(%rbp),%r15
   1e173:	leaveq 
   1e174:	retq   
   1e175:	lea    0x1075d(%rip),%rsi        # 2e8d9 <png_pass_inc.20+0x66>
   1e17c:	callq  5060 <png_chunk_error@plt>
   1e181:	mov    %r14,%rsi
   1e184:	mov    %r15,%rdi
   1e187:	callq  1b270 <png_crc_finish>
   1e18c:	mov    %r15,%rdi
   1e18f:	lea    0x107d3(%rip),%rsi        # 2e969 <png_pass_inc.20+0xf6>
   1e196:	callq  5230 <png_chunk_benign_error@plt>
   1e19b:	mov    -0x20(%rbp),%r15
   1e19f:	mov    -0x18(%rbp),%r14
   1e1a3:	leaveq 
   1e1a4:	retq   
   1e1a5:	mov    -0x20(%rbp),%r15
   1e1a9:	mov    -0x18(%rbp),%r14
   1e1ad:	leaveq 
   1e1ae:	retq   
   1e1af:	mov    %eax,%ecx
   1e1b1:	movzbl (%r10,%rcx,1),%ecx
   1e1b6:	test   %cl,%cl
   1e1b8:	je     1e1c2 <png_handle_iTXt+0x142>
   1e1ba:	add    $0x1,%eax
   1e1bd:	cmp    %eax,%r14d
   1e1c0:	ja     1e1af <png_handle_iTXt+0x12f>
   1e1c2:	lea    0x1087e(%rip),%rsi        # 2ea47 <png_pass_inc.20+0x1d4>
   1e1c9:	cmp    $0x4f,%eax
   1e1cc:	jbe    1e1eb <png_handle_iTXt+0x16b>
   1e1ce:	mov    -0x30(%rbp),%rdi
   1e1d2:	test   %rsi,%rsi
   1e1d5:	jne    1e1f5 <png_handle_iTXt+0x175>
   1e1d7:	mov    -0x20(%rbp),%r15
   1e1db:	mov    -0x18(%rbp),%r14
   1e1df:	leaveq 
   1e1e0:	retq   
   1e1e1:	mov    %rdx,%rsi
   1e1e4:	callq  1b270 <png_crc_finish>
   1e1e9:	leaveq 
   1e1ea:	retq   
   1e1eb:	test   %eax,%eax
   1e1ed:	jne    1e204 <png_handle_iTXt+0x184>
   1e1ef:	mov    -0x30(%rbp),%rdi
   1e1f3:	jmp    1e1d2 <png_handle_iTXt+0x152>
   1e1f5:	callq  5230 <png_chunk_benign_error@plt>
   1e1fa:	mov    -0x20(%rbp),%r15
   1e1fe:	mov    -0x18(%rbp),%r14
   1e202:	leaveq 
   1e203:	retq   
   1e204:	lea    0x10872(%rip),%rsi        # 2ea7d <png_pass_inc.20+0x20a>
   1e20b:	lea    0x5(%rax),%ecx
   1e20e:	cmp    %ecx,%r14d
   1e211:	jae    1e219 <png_handle_iTXt+0x199>
   1e213:	mov    -0x30(%rbp),%rdi
   1e217:	jmp    1e1d2 <png_handle_iTXt+0x152>
   1e219:	lea    0x1(%rax),%ecx
   1e21c:	mov    %ecx,%edi
   1e21e:	movzbl (%r10,%rdi,1),%ecx
   1e223:	test   %cl,%cl
   1e225:	je     1e23c <png_handle_iTXt+0x1bc>
   1e227:	lea    0x1086d(%rip),%rdx        # 2ea9b <png_pass_inc.20+0x228>
   1e22e:	cmp    $0x1,%cl
   1e231:	je     1e24a <png_handle_iTXt+0x1ca>
   1e233:	mov    %rdx,%rsi
   1e236:	mov    -0x30(%rbp),%rdi
   1e23a:	jmp    1e1d2 <png_handle_iTXt+0x152>
   1e23c:	movzbl (%r10,%rdi,1),%ecx
   1e241:	test   %cl,%cl
   1e243:	jne    1e264 <png_handle_iTXt+0x1e4>
   1e245:	mov    %r15,%r9
   1e248:	jmp    1e26a <png_handle_iTXt+0x1ea>
   1e24a:	lea    0x2(%rax),%ecx
   1e24d:	mov    %ecx,%ecx
   1e24f:	movzbl (%r10,%rcx,1),%ecx
   1e254:	test   %cl,%cl
   1e256:	je     1e23c <png_handle_iTXt+0x1bc>
   1e258:	mov    %rdx,%rsi
   1e25b:	mov    -0x30(%rbp),%rdi
   1e25f:	jmpq   1e1d2 <png_handle_iTXt+0x152>
   1e264:	mov    $0x1,%r9d
   1e26a:	movq   $0x0,-0x78(%rbp)
   1e272:	lea    0x3(%rax),%r8d
   1e276:	mov    %r8,%rax
   1e279:	jmp    1e289 <png_handle_iTXt+0x209>
   1e27b:	mov    %eax,%eax
   1e27d:	movzbl (%r10,%rax,1),%eax
   1e282:	test   %al,%al
   1e284:	je     1e297 <png_handle_iTXt+0x217>
   1e286:	mov    %r11,%rax
   1e289:	lea    0x1(%rax),%r11d
   1e28d:	cmp    %eax,%r14d
   1e290:	ja     1e27b <png_handle_iTXt+0x1fb>
   1e292:	mov    %r11,%rcx
   1e295:	jmp    1e2aa <png_handle_iTXt+0x22a>
   1e297:	mov    %r11,%rcx
   1e29a:	jmp    1e2aa <png_handle_iTXt+0x22a>
   1e29c:	mov    %ecx,%ecx
   1e29e:	movzbl (%r10,%rcx,1),%ecx
   1e2a3:	test   %cl,%cl
   1e2a5:	je     1e2b2 <png_handle_iTXt+0x232>
   1e2a7:	mov    %rax,%rcx
   1e2aa:	lea    0x1(%rcx),%eax
   1e2ad:	cmp    %ecx,%r14d
   1e2b0:	ja     1e29c <png_handle_iTXt+0x21c>
   1e2b2:	test   %r9d,%r9d
   1e2b5:	jne    1e2cf <png_handle_iTXt+0x24f>
   1e2b7:	cmp    %eax,%r14d
   1e2ba:	jb     1e2cf <png_handle_iTXt+0x24f>
   1e2bc:	sub    %eax,%r14d
   1e2bf:	mov    %r14d,%ecx
   1e2c2:	mov    %rcx,-0x78(%rbp)
   1e2c6:	mov    -0x30(%rbp),%rdi
   1e2ca:	mov    %r15,%rsi
   1e2cd:	jmp    1e2d8 <png_handle_iTXt+0x258>
   1e2cf:	test   %r9d,%r9d
   1e2d2:	jg     1e2fb <png_handle_iTXt+0x27b>
   1e2d4:	mov    -0x30(%rbp),%rdi
   1e2d8:	test   %rsi,%rsi
   1e2db:	jne    1e1d2 <png_handle_iTXt+0x152>
   1e2e1:	mov    %eax,%edx
   1e2e3:	mov    %rdx,%rax
   1e2e6:	add    -0x78(%rbp),%rax
   1e2ea:	test   %r9d,%r9d
   1e2ed:	movb   $0x0,(%r10,%rax,1)
   1e2f2:	je     1e306 <png_handle_iTXt+0x286>
   1e2f4:	mov    $0x2,%eax
   1e2f9:	jmp    1e30b <png_handle_iTXt+0x28b>
   1e2fb:	cmp    %eax,%r14d
   1e2fe:	ja     1e362 <png_handle_iTXt+0x2e2>
   1e300:	mov    -0x30(%rbp),%rdi
   1e304:	jmp    1e2d8 <png_handle_iTXt+0x258>
   1e306:	mov    $0x1,%eax
   1e30b:	mov    %r10,-0x68(%rbp)
   1e30f:	mov    %r8d,%ecx
   1e312:	add    %r10,%rcx
   1e315:	mov    %rcx,-0x48(%rbp)
   1e319:	mov    %r11d,%ecx
   1e31c:	add    %r10,%rcx
   1e31f:	mov    %rcx,-0x40(%rbp)
   1e323:	lea    (%rdx,%r10,1),%rcx
   1e327:	mov    %rcx,-0x60(%rbp)
   1e32b:	movq   $0x0,-0x58(%rbp)
   1e333:	mov    -0x78(%rbp),%rcx
   1e337:	mov    %rcx,-0x50(%rbp)
   1e33b:	mov    %eax,-0x70(%rbp)
   1e33e:	lea    -0x70(%rbp),%rdx
   1e342:	mov    %rdi,%r14
   1e345:	mov    -0x28(%rbp),%rsi
   1e349:	mov    $0x1,%ecx
   1e34e:	callq  22de0 <png_set_text_2>
   1e353:	test   %eax,%eax
   1e355:	jne    1e3d5 <png_handle_iTXt+0x355>
   1e357:	mov    %r15,%rsi
   1e35a:	mov    %r14,%rdi
   1e35d:	jmpq   1e1d2 <png_handle_iTXt+0x152>
   1e362:	movq   $0xffffffffffffffff,-0x78(%rbp)
   1e36a:	lea    -0x78(%rbp),%rcx
   1e36e:	mov    -0x30(%rbp),%rsi
   1e372:	mov    %rsi,%rdi
   1e375:	mov    %rax,%rdx
   1e378:	mov    $0x1,%r15d
   1e37e:	mov    %r12,-0x8(%rbp)
   1e382:	mov    %r13,-0x10(%rbp)
   1e386:	mov    %r8,-0x30(%rbp)
   1e38a:	mov    %r11,-0x38(%rbp)
   1e38e:	mov    %r15,%r8
   1e391:	mov    %rax,%r15
   1e394:	mov    %r10,%r12
   1e397:	mov    %rsi,%r13
   1e39a:	mov    %r14,%rsi
   1e39d:	mov    %r9,%r14
   1e3a0:	callq  20500 <png_decompress_chunk>
   1e3a5:	cmp    $0x1,%eax
   1e3a8:	je     1e3e4 <png_handle_iTXt+0x364>
   1e3aa:	mov    %r15,%rax
   1e3ad:	mov    %r13,%rdi
   1e3b0:	mov    %r14,%r9
   1e3b3:	mov    %r12,%r10
   1e3b6:	mov    0x170(%rdi),%rsi
   1e3bd:	mov    -0x38(%rbp),%r11
   1e3c1:	mov    -0x30(%rbp),%r8
   1e3c5:	mov    -0x10(%rbp),%r13
   1e3c9:	mov    -0x8(%rbp),%r12
   1e3cd:	xor    %r15d,%r15d
   1e3d0:	jmpq   1e2d8 <png_handle_iTXt+0x258>
   1e3d5:	mov    %r14,%rdi
   1e3d8:	lea    0x106a8(%rip),%rsi        # 2ea87 <png_pass_inc.20+0x214>
   1e3df:	jmpq   1e1d2 <png_handle_iTXt+0x152>
   1e3e4:	mov    %r15,%rax
   1e3e7:	mov    %r13,%rdi
   1e3ea:	mov    %r14,%r9
   1e3ed:	mov    0x458(%rdi),%r10
   1e3f4:	mov    -0x38(%rbp),%r11
   1e3f8:	mov    -0x30(%rbp),%r8
   1e3fc:	mov    -0x10(%rbp),%r13
   1e400:	mov    -0x8(%rbp),%r12
   1e404:	xor    %r15d,%r15d
   1e407:	mov    %r15,%rsi
   1e40a:	jmpq   1e2d8 <png_handle_iTXt+0x258>
   1e40f:	nop

000000000001e410 <png_handle_oFFs>:
   1e410:	push   %rbp
   1e411:	mov    %rsp,%rbp
   1e414:	sub    $0x20,%rsp
   1e418:	mov    0x12c(%rdi),%eax
   1e41e:	mov    %rax,%rcx
   1e421:	and    $0x1,%ecx
   1e424:	test   %ecx,%ecx
   1e426:	je     1e477 <png_handle_oFFs+0x67>
   1e428:	and    $0x4,%eax
   1e42b:	test   %eax,%eax
   1e42d:	jne    1e483 <png_handle_oFFs+0x73>
   1e42f:	test   %rsi,%rsi
   1e432:	jne    1e4ad <png_handle_oFFs+0x9d>
   1e434:	cmp    $0x9,%edx
   1e437:	jne    1e4e7 <png_handle_oFFs+0xd7>
   1e43d:	lea    -0x19(%rbp),%rax
   1e441:	mov    $0x9,%edx
   1e446:	mov    %rdi,%rcx
   1e449:	mov    %r15,-0x10(%rbp)
   1e44d:	mov    %rsi,-0x8(%rbp)
   1e451:	mov    %rax,%rsi
   1e454:	mov    %rdi,%r15
   1e457:	mov    %rcx,%rdi
   1e45a:	callq  1b210 <png_crc_read>
   1e45f:	xor    %esi,%esi
   1e461:	mov    %r15,%rdi
   1e464:	callq  1b270 <png_crc_finish>
   1e469:	test   %eax,%eax
   1e46b:	je     1e511 <png_handle_oFFs+0x101>
   1e471:	mov    -0x10(%rbp),%r15
   1e475:	leaveq 
   1e476:	retq   
   1e477:	lea    0x1045b(%rip),%rsi        # 2e8d9 <png_pass_inc.20+0x66>
   1e47e:	callq  5060 <png_chunk_error@plt>
   1e483:	mov    %rdi,%rax
   1e486:	mov    %r15,-0x10(%rbp)
   1e48a:	mov    %rdx,%rsi
   1e48d:	mov    %rdi,%r15
   1e490:	mov    %rax,%rdi
   1e493:	callq  1b270 <png_crc_finish>
   1e498:	mov    %r15,%rdi
   1e49b:	lea    0x10422(%rip),%rsi        # 2e8c4 <png_pass_inc.20+0x51>
   1e4a2:	callq  5230 <png_chunk_benign_error@plt>
   1e4a7:	mov    -0x10(%rbp),%r15
   1e4ab:	leaveq 
   1e4ac:	retq   
   1e4ad:	mov    0x8(%rsi),%eax
   1e4b0:	and    $0x100,%eax
   1e4b5:	test   %eax,%eax
   1e4b7:	je     1e434 <png_handle_oFFs+0x24>
   1e4bd:	mov    %rdi,%rax
   1e4c0:	mov    %r15,-0x10(%rbp)
   1e4c4:	mov    %rdx,%rsi
   1e4c7:	mov    %rdi,%r15
   1e4ca:	mov    %rax,%rdi
   1e4cd:	callq  1b270 <png_crc_finish>
   1e4d2:	mov    %r15,%rdi
   1e4d5:	lea    0x1040a(%rip),%rsi        # 2e8e6 <png_pass_inc.20+0x73>
   1e4dc:	callq  5230 <png_chunk_benign_error@plt>
   1e4e1:	mov    -0x10(%rbp),%r15
   1e4e5:	leaveq 
   1e4e6:	retq   
   1e4e7:	mov    %rdi,%rax
   1e4ea:	mov    %r15,-0x10(%rbp)
   1e4ee:	mov    %rdx,%rsi
   1e4f1:	mov    %rdi,%r15
   1e4f4:	mov    %rax,%rdi
   1e4f7:	callq  1b270 <png_crc_finish>
   1e4fc:	mov    %r15,%rdi
   1e4ff:	lea    0x103cb(%rip),%rsi        # 2e8d1 <png_pass_inc.20+0x5e>
   1e506:	callq  5230 <png_chunk_benign_error@plt>
   1e50b:	mov    -0x10(%rbp),%r15
   1e50f:	leaveq 
   1e510:	retq   
   1e511:	movzbl -0x19(%rbp),%eax
   1e515:	mov    %rax,%rcx
   1e518:	and    $0x80,%ecx
   1e51e:	test   %ecx,%ecx
   1e520:	jg     1e540 <png_handle_oFFs+0x130>
   1e522:	shl    $0x18,%eax
   1e525:	movzbl -0x18(%rbp),%ecx
   1e529:	shl    $0x10,%ecx
   1e52c:	add    %eax,%ecx
   1e52e:	movzbl -0x17(%rbp),%eax
   1e532:	shl    $0x8,%eax
   1e535:	add    %ecx,%eax
   1e537:	movzbl -0x16(%rbp),%ecx
   1e53b:	lea    (%rcx,%rax,1),%edx
   1e53e:	jmp    1e566 <png_handle_oFFs+0x156>
   1e540:	shl    $0x18,%eax
   1e543:	movzbl -0x18(%rbp),%ecx
   1e547:	shl    $0x10,%ecx
   1e54a:	add    %eax,%ecx
   1e54c:	movzbl -0x17(%rbp),%eax
   1e550:	shl    $0x8,%eax
   1e553:	add    %ecx,%eax
   1e555:	movzbl -0x16(%rbp),%ecx
   1e559:	lea    (%rcx,%rax,1),%edx
   1e55c:	neg    %edx
   1e55e:	and    $0x7fffffff,%edx
   1e564:	neg    %edx
   1e566:	movzbl -0x15(%rbp),%eax
   1e56a:	mov    %rax,%rcx
   1e56d:	and    $0x80,%ecx
   1e573:	test   %ecx,%ecx
   1e575:	jg     1e594 <png_handle_oFFs+0x184>
   1e577:	shl    $0x18,%eax
   1e57a:	movzbl -0x14(%rbp),%ecx
   1e57e:	shl    $0x10,%ecx
   1e581:	add    %eax,%ecx
   1e583:	movzbl -0x13(%rbp),%eax
   1e587:	shl    $0x8,%eax
   1e58a:	add    %ecx,%eax
   1e58c:	movzbl -0x12(%rbp),%ecx
   1e590:	add    %eax,%ecx
   1e592:	jmp    1e5b9 <png_handle_oFFs+0x1a9>
   1e594:	shl    $0x18,%eax
   1e597:	movzbl -0x14(%rbp),%ecx
   1e59b:	shl    $0x10,%ecx
   1e59e:	add    %eax,%ecx
   1e5a0:	movzbl -0x13(%rbp),%eax
   1e5a4:	shl    $0x8,%eax
   1e5a7:	add    %ecx,%eax
   1e5a9:	movzbl -0x12(%rbp),%ecx
   1e5ad:	add    %eax,%ecx
   1e5af:	neg    %ecx
   1e5b1:	and    $0x7fffffff,%ecx
   1e5b7:	neg    %ecx
   1e5b9:	mov    %r15,%rdi
   1e5bc:	movzbl -0x11(%rbp),%r8d
   1e5c1:	mov    -0x8(%rbp),%rsi
   1e5c5:	callq  55e0 <png_set_oFFs@plt>
   1e5ca:	mov    -0x10(%rbp),%r15
   1e5ce:	leaveq 
   1e5cf:	retq   

000000000001e5d0 <png_handle_pCAL>:
   1e5d0:	push   %rbp
   1e5d1:	mov    %rsp,%rbp
   1e5d4:	sub    $0x50,%rsp
   1e5d8:	mov    0x12c(%rdi),%eax
   1e5de:	mov    %rax,%rcx
   1e5e1:	and    $0x1,%ecx
   1e5e4:	test   %ecx,%ecx
   1e5e6:	je     1e65c <png_handle_pCAL+0x8c>
   1e5e8:	and    $0x4,%eax
   1e5eb:	test   %eax,%eax
   1e5ed:	jne    1e668 <png_handle_pCAL+0x98>
   1e5ef:	test   %rsi,%rsi
   1e5f2:	jne    1e692 <png_handle_pCAL+0xc2>
   1e5f8:	lea    0x1(%rdx),%eax
   1e5fb:	mov    %eax,%eax
   1e5fd:	mov    $0x2,%ecx
   1e602:	mov    %rdi,%r8
   1e605:	mov    %r15,-0x40(%rbp)
   1e609:	mov    %r14,-0x38(%rbp)
   1e60d:	mov    %rsi,-0x8(%rbp)
   1e611:	mov    %rax,%rsi
   1e614:	mov    %rdx,%r14
   1e617:	mov    %rcx,%rdx
   1e61a:	mov    %rdi,%r15
   1e61d:	mov    %r8,%rdi
   1e620:	callq  200a0 <png_read_buffer>
   1e625:	test   %rax,%rax
   1e628:	je     1e6cc <png_handle_pCAL+0xfc>
   1e62e:	mov    %r15,%rdi
   1e631:	mov    %rax,%rsi
   1e634:	mov    %r14,%rdx
   1e637:	mov    %rax,-0x50(%rbp)
   1e63b:	callq  1b210 <png_crc_read>
   1e640:	xor    %esi,%esi
   1e642:	mov    %r15,%rdi
   1e645:	callq  1b270 <png_crc_finish>
   1e64a:	test   %eax,%eax
   1e64c:	je     1e6f0 <png_handle_pCAL+0x120>
   1e652:	mov    -0x38(%rbp),%r14
   1e656:	mov    -0x40(%rbp),%r15
   1e65a:	leaveq 
   1e65b:	retq   
   1e65c:	lea    0x10276(%rip),%rsi        # 2e8d9 <png_pass_inc.20+0x66>
   1e663:	callq  5060 <png_chunk_error@plt>
   1e668:	mov    %rdi,%rax
   1e66b:	mov    %r15,-0x50(%rbp)
   1e66f:	mov    %rdx,%rsi
   1e672:	mov    %rdi,%r15
   1e675:	mov    %rax,%rdi
   1e678:	callq  1b270 <png_crc_finish>
   1e67d:	mov    %r15,%rdi
   1e680:	lea    0x1023d(%rip),%rsi        # 2e8c4 <png_pass_inc.20+0x51>
   1e687:	callq  5230 <png_chunk_benign_error@plt>
   1e68c:	mov    -0x50(%rbp),%r15
   1e690:	leaveq 
   1e691:	retq   
   1e692:	mov    0x8(%rsi),%eax
   1e695:	and    $0x400,%eax
   1e69a:	test   %eax,%eax
   1e69c:	je     1e5f8 <png_handle_pCAL+0x28>
   1e6a2:	mov    %rdi,%rax
   1e6a5:	mov    %r15,-0x50(%rbp)
   1e6a9:	mov    %rdx,%rsi
   1e6ac:	mov    %rdi,%r15
   1e6af:	mov    %rax,%rdi
   1e6b2:	callq  1b270 <png_crc_finish>
   1e6b7:	mov    %r15,%rdi
   1e6ba:	lea    0x10225(%rip),%rsi        # 2e8e6 <png_pass_inc.20+0x73>
   1e6c1:	callq  5230 <png_chunk_benign_error@plt>
   1e6c6:	mov    -0x50(%rbp),%r15
   1e6ca:	leaveq 
   1e6cb:	retq   
   1e6cc:	mov    %r14,%rsi
   1e6cf:	mov    %r15,%rdi
   1e6d2:	callq  1b270 <png_crc_finish>
   1e6d7:	mov    %r15,%rdi
   1e6da:	lea    0x10288(%rip),%rsi        # 2e969 <png_pass_inc.20+0xf6>
   1e6e1:	callq  5230 <png_chunk_benign_error@plt>
   1e6e6:	mov    -0x38(%rbp),%r14
   1e6ea:	mov    -0x40(%rbp),%r15
   1e6ee:	leaveq 
   1e6ef:	retq   
   1e6f0:	mov    %r14d,%ecx
   1e6f3:	mov    -0x50(%rbp),%rax
   1e6f7:	lea    (%rax,%rcx,1),%r8
   1e6fb:	movb   $0x0,(%r8)
   1e6ff:	jmp    1e705 <png_handle_pCAL+0x135>
   1e701:	add    $0x1,%rax
   1e705:	movzbl (%rax),%ecx
   1e708:	test   %cl,%cl
   1e70a:	jne    1e701 <png_handle_pCAL+0x131>
   1e70c:	mov    %r8,%rcx
   1e70f:	sub    %rax,%rcx
   1e712:	cmp    $0xc,%rcx
   1e716:	jle    1e746 <png_handle_pCAL+0x176>
   1e718:	movzbl 0x1(%rax),%ecx
   1e71c:	mov    %rcx,%rdx
   1e71f:	and    $0x80,%edx
   1e725:	test   %edx,%edx
   1e727:	jg     1e75f <png_handle_pCAL+0x18f>
   1e729:	shl    $0x18,%ecx
   1e72c:	movzbl 0x2(%rax),%edx
   1e730:	shl    $0x10,%edx
   1e733:	add    %ecx,%edx
   1e735:	movzbl 0x3(%rax),%ecx
   1e739:	shl    $0x8,%ecx
   1e73c:	add    %edx,%ecx
   1e73e:	movzbl 0x4(%rax),%edx
   1e742:	add    %edx,%ecx
   1e744:	jmp    1e784 <png_handle_pCAL+0x1b4>
   1e746:	mov    %r15,%rdi
   1e749:	lea    0x10181(%rip),%rsi        # 2e8d1 <png_pass_inc.20+0x5e>
   1e750:	callq  5230 <png_chunk_benign_error@plt>
   1e755:	mov    -0x38(%rbp),%r14
   1e759:	mov    -0x40(%rbp),%r15
   1e75d:	leaveq 
   1e75e:	retq   
   1e75f:	shl    $0x18,%ecx
   1e762:	movzbl 0x2(%rax),%edx
   1e766:	shl    $0x10,%edx
   1e769:	add    %ecx,%edx
   1e76b:	movzbl 0x3(%rax),%ecx
   1e76f:	shl    $0x8,%ecx
   1e772:	add    %edx,%ecx
   1e774:	movzbl 0x4(%rax),%edx
   1e778:	add    %edx,%ecx
   1e77a:	neg    %ecx
   1e77c:	and    $0x7fffffff,%ecx
   1e782:	neg    %ecx
   1e784:	movzbl 0x5(%rax),%edx
   1e788:	mov    %rdx,%rsi
   1e78b:	and    $0x80,%esi
   1e791:	test   %esi,%esi
   1e793:	jg     1e7b2 <png_handle_pCAL+0x1e2>
   1e795:	shl    $0x18,%edx
   1e798:	movzbl 0x6(%rax),%esi
   1e79c:	shl    $0x10,%esi
   1e79f:	add    %edx,%esi
   1e7a1:	movzbl 0x7(%rax),%edx
   1e7a5:	shl    $0x8,%edx
   1e7a8:	add    %esi,%edx
   1e7aa:	movzbl 0x8(%rax),%esi
   1e7ae:	add    %esi,%edx
   1e7b0:	jmp    1e7d7 <png_handle_pCAL+0x207>
   1e7b2:	shl    $0x18,%edx
   1e7b5:	movzbl 0x6(%rax),%esi
   1e7b9:	shl    $0x10,%esi
   1e7bc:	add    %edx,%esi
   1e7be:	movzbl 0x7(%rax),%edx
   1e7c2:	shl    $0x8,%edx
   1e7c5:	add    %esi,%edx
   1e7c7:	movzbl 0x8(%rax),%esi
   1e7cb:	add    %esi,%edx
   1e7cd:	neg    %edx
   1e7cf:	and    $0x7fffffff,%edx
   1e7d5:	neg    %edx
   1e7d7:	movzbl 0xa(%rax),%r14d
   1e7dc:	movzbl 0x9(%rax),%r9d
   1e7e1:	test   %r9b,%r9b
   1e7e4:	jne    1e805 <png_handle_pCAL+0x235>
   1e7e6:	cmp    $0x2,%r14b
   1e7ea:	je     1e805 <png_handle_pCAL+0x235>
   1e7ec:	mov    %r15,%rdi
   1e7ef:	lea    0x102ba(%rip),%rsi        # 2eab0 <png_pass_inc.20+0x23d>
   1e7f6:	callq  5230 <png_chunk_benign_error@plt>
   1e7fb:	mov    -0x38(%rbp),%r14
   1e7ff:	mov    -0x40(%rbp),%r15
   1e803:	leaveq 
   1e804:	retq   
   1e805:	cmp    $0x1,%r9b
   1e809:	jne    1e811 <png_handle_pCAL+0x241>
   1e80b:	cmp    $0x3,%r14b
   1e80f:	jne    1e7ec <png_handle_pCAL+0x21c>
   1e811:	cmp    $0x2,%r9b
   1e815:	jne    1e81d <png_handle_pCAL+0x24d>
   1e817:	cmp    $0x3,%r14b
   1e81b:	jne    1e7ec <png_handle_pCAL+0x21c>
   1e81d:	cmp    $0x3,%r9b
   1e821:	jne    1e829 <png_handle_pCAL+0x259>
   1e823:	cmp    $0x4,%r14b
   1e827:	jne    1e7ec <png_handle_pCAL+0x21c>
   1e829:	add    $0xb,%rax
   1e82d:	cmp    $0x3,%r9b
   1e831:	ja     1e844 <png_handle_pCAL+0x274>
   1e833:	mov    %r13,-0x30(%rbp)
   1e837:	mov    %r8,-0x48(%rbp)
   1e83b:	mov    %r9,-0x20(%rbp)
   1e83f:	mov    %rax,%r13
   1e842:	jmp    1e87b <png_handle_pCAL+0x2ab>
   1e844:	lea    0x1027d(%rip),%rsi        # 2eac8 <png_pass_inc.20+0x255>
   1e84b:	mov    %r15,%rdi
   1e84e:	mov    %r13,-0x30(%rbp)
   1e852:	mov    %r8,-0x48(%rbp)
   1e856:	mov    %rcx,-0x18(%rbp)
   1e85a:	mov    %rdx,-0x28(%rbp)
   1e85e:	mov    %r9,-0x20(%rbp)
   1e862:	mov    %rax,%r13
   1e865:	callq  5230 <png_chunk_benign_error@plt>
   1e86a:	mov    -0x28(%rbp),%rdx
   1e86e:	mov    -0x18(%rbp),%rcx
   1e872:	mov    %r13,%rax
   1e875:	jmp    1e87b <png_handle_pCAL+0x2ab>
   1e877:	add    $0x1,%r13
   1e87b:	movzbl 0x0(%r13),%esi
   1e880:	test   %sil,%sil
   1e883:	jne    1e877 <png_handle_pCAL+0x2a7>
   1e885:	mov    %r14,%rsi
   1e888:	shl    $0x3,%rsi
   1e88c:	mov    %r15,%rdi
   1e88f:	mov    %rcx,-0x10(%rbp)
   1e893:	mov    %rdx,-0x18(%rbp)
   1e897:	mov    %rax,-0x28(%rbp)
   1e89b:	callq  5150 <png_malloc_warn@plt>
   1e8a0:	test   %rax,%rax
   1e8a3:	je     1e8b5 <png_handle_pCAL+0x2e5>
   1e8a5:	mov    -0x18(%rbp),%r8
   1e8a9:	mov    -0x10(%rbp),%rcx
   1e8ad:	mov    -0x48(%rbp),%rdi
   1e8b1:	xor    %edx,%edx
   1e8b3:	jmp    1e8da <png_handle_pCAL+0x30a>
   1e8b5:	mov    %r15,%rdi
   1e8b8:	lea    0x100aa(%rip),%rsi        # 2e969 <png_pass_inc.20+0xf6>
   1e8bf:	callq  5230 <png_chunk_benign_error@plt>
   1e8c4:	mov    -0x30(%rbp),%r13
   1e8c8:	mov    -0x38(%rbp),%r14
   1e8cc:	mov    -0x40(%rbp),%r15
   1e8d0:	leaveq 
   1e8d1:	retq   
   1e8d2:	cmp    %r13,%rdi
   1e8d5:	jb     1e929 <png_handle_pCAL+0x359>
   1e8d7:	add    $0x1,%edx
   1e8da:	cmp    %edx,%r14d
   1e8dd:	jg     1e951 <png_handle_pCAL+0x381>
   1e8df:	sub    $0x20,%rsp
   1e8e3:	mov    %r14d,(%rsp)
   1e8e7:	mov    -0x28(%rbp),%rdx
   1e8eb:	mov    %rdx,0x8(%rsp)
   1e8f0:	mov    %rax,%r13
   1e8f3:	mov    %r13,0x10(%rsp)
   1e8f8:	mov    %r15,%rdi
   1e8fb:	mov    -0x20(%rbp),%r9
   1e8ff:	mov    -0x50(%rbp),%rdx
   1e903:	mov    -0x8(%rbp),%rsi
   1e907:	callq  51b0 <png_set_pCAL@plt>
   1e90c:	mov    %r13,%rsi
   1e90f:	mov    %r15,%rdi
   1e912:	add    $0x20,%rsp
   1e916:	callq  5790 <png_free@plt>
   1e91b:	mov    -0x30(%rbp),%r13
   1e91f:	mov    -0x38(%rbp),%r14
   1e923:	mov    -0x40(%rbp),%r15
   1e927:	leaveq 
   1e928:	retq   
   1e929:	mov    %rax,%rsi
   1e92c:	mov    %r15,%rdi
   1e92f:	callq  5790 <png_free@plt>
   1e934:	mov    %r15,%rdi
   1e937:	lea    0x101a5(%rip),%rsi        # 2eae3 <png_pass_inc.20+0x270>
   1e93e:	callq  5230 <png_chunk_benign_error@plt>
   1e943:	mov    -0x30(%rbp),%r13
   1e947:	mov    -0x38(%rbp),%r14
   1e94b:	mov    -0x40(%rbp),%r15
   1e94f:	leaveq 
   1e950:	retq   
   1e951:	add    $0x1,%r13
   1e955:	movslq %edx,%rsi
   1e958:	mov    %r13,(%rax,%rsi,8)
   1e95c:	jmp    1e970 <png_handle_pCAL+0x3a0>
   1e95e:	movzbl 0x0(%r13),%esi
   1e963:	test   %sil,%sil
   1e966:	je     1e8d2 <png_handle_pCAL+0x302>
   1e96c:	add    $0x1,%r13
   1e970:	cmp    %r13,%rdi
   1e973:	jae    1e95e <png_handle_pCAL+0x38e>
   1e975:	jmpq   1e8d2 <png_handle_pCAL+0x302>
   1e97a:	nopw   0x0(%rax,%rax,1)

000000000001e980 <png_handle_pHYs>:
   1e980:	push   %rbp
   1e981:	mov    %rsp,%rbp
   1e984:	sub    $0x20,%rsp
   1e988:	mov    0x12c(%rdi),%eax
   1e98e:	mov    %rax,%rcx
   1e991:	and    $0x1,%ecx
   1e994:	test   %ecx,%ecx
   1e996:	je     1e9e7 <png_handle_pHYs+0x67>
   1e998:	and    $0x4,%eax
   1e99b:	test   %eax,%eax
   1e99d:	jne    1e9f3 <png_handle_pHYs+0x73>
   1e99f:	test   %rsi,%rsi
   1e9a2:	jne    1ea1d <png_handle_pHYs+0x9d>
   1e9a4:	cmp    $0x9,%edx
   1e9a7:	jne    1ea57 <png_handle_pHYs+0xd7>
   1e9ad:	lea    -0x19(%rbp),%rcx
   1e9b1:	mov    $0x9,%edx
   1e9b6:	mov    %rdi,%rax
   1e9b9:	mov    %r15,-0x10(%rbp)
   1e9bd:	mov    %rsi,-0x8(%rbp)
   1e9c1:	mov    %rcx,%rsi
   1e9c4:	mov    %rdi,%r15
   1e9c7:	mov    %rax,%rdi
   1e9ca:	callq  1b210 <png_crc_read>
   1e9cf:	xor    %esi,%esi
   1e9d1:	mov    %r15,%rdi
   1e9d4:	callq  1b270 <png_crc_finish>
   1e9d9:	test   %eax,%eax
   1e9db:	je     1ea81 <png_handle_pHYs+0x101>
   1e9e1:	mov    -0x10(%rbp),%r15
   1e9e5:	leaveq 
   1e9e6:	retq   
   1e9e7:	lea    0xfeeb(%rip),%rsi        # 2e8d9 <png_pass_inc.20+0x66>
   1e9ee:	callq  5060 <png_chunk_error@plt>
   1e9f3:	mov    %rdi,%rax
   1e9f6:	mov    %r15,-0x10(%rbp)
   1e9fa:	mov    %rdx,%rsi
   1e9fd:	mov    %rdi,%r15
   1ea00:	mov    %rax,%rdi
   1ea03:	callq  1b270 <png_crc_finish>
   1ea08:	mov    %r15,%rdi
   1ea0b:	lea    0xfeb2(%rip),%rsi        # 2e8c4 <png_pass_inc.20+0x51>
   1ea12:	callq  5230 <png_chunk_benign_error@plt>
   1ea17:	mov    -0x10(%rbp),%r15
   1ea1b:	leaveq 
   1ea1c:	retq   
   1ea1d:	mov    0x8(%rsi),%eax
   1ea20:	and    $0x80,%eax
   1ea25:	test   %eax,%eax
   1ea27:	je     1e9a4 <png_handle_pHYs+0x24>
   1ea2d:	mov    %rdi,%rax
   1ea30:	mov    %r15,-0x10(%rbp)
   1ea34:	mov    %rdx,%rsi
   1ea37:	mov    %rdi,%r15
   1ea3a:	mov    %rax,%rdi
   1ea3d:	callq  1b270 <png_crc_finish>
   1ea42:	mov    %r15,%rdi
   1ea45:	lea    0xfe9a(%rip),%rsi        # 2e8e6 <png_pass_inc.20+0x73>
   1ea4c:	callq  5230 <png_chunk_benign_error@plt>
   1ea51:	mov    -0x10(%rbp),%r15
   1ea55:	leaveq 
   1ea56:	retq   
   1ea57:	mov    %rdi,%rax
   1ea5a:	mov    %r15,-0x10(%rbp)
   1ea5e:	mov    %rdx,%rsi
   1ea61:	mov    %rdi,%r15
   1ea64:	mov    %rax,%rdi
   1ea67:	callq  1b270 <png_crc_finish>
   1ea6c:	mov    %r15,%rdi
   1ea6f:	lea    0xfe5b(%rip),%rsi        # 2e8d1 <png_pass_inc.20+0x5e>
   1ea76:	callq  5230 <png_chunk_benign_error@plt>
   1ea7b:	mov    -0x10(%rbp),%r15
   1ea7f:	leaveq 
   1ea80:	retq   
   1ea81:	movzbl -0x19(%rbp),%ecx
   1ea85:	shl    $0x18,%ecx
   1ea88:	movzbl -0x18(%rbp),%eax
   1ea8c:	shl    $0x10,%eax
   1ea8f:	add    %eax,%ecx
   1ea91:	movzbl -0x17(%rbp),%eax
   1ea95:	shl    $0x8,%eax
   1ea98:	add    %ecx,%eax
   1ea9a:	movzbl -0x16(%rbp),%ecx
   1ea9e:	lea    (%rcx,%rax,1),%edx
   1eaa1:	movzbl -0x15(%rbp),%eax
   1eaa5:	shl    $0x18,%eax
   1eaa8:	movzbl -0x14(%rbp),%ecx
   1eaac:	shl    $0x10,%ecx
   1eaaf:	add    %eax,%ecx
   1eab1:	movzbl -0x13(%rbp),%eax
   1eab5:	shl    $0x8,%eax
   1eab8:	add    %ecx,%eax
   1eaba:	movzbl -0x12(%rbp),%ecx
   1eabe:	add    %eax,%ecx
   1eac0:	mov    %r15,%rdi
   1eac3:	movzbl -0x11(%rbp),%r8d
   1eac8:	mov    -0x8(%rbp),%rsi
   1eacc:	callq  5610 <png_set_pHYs@plt>
   1ead1:	mov    -0x10(%rbp),%r15
   1ead5:	leaveq 
   1ead6:	retq   
   1ead7:	nopw   0x0(%rax,%rax,1)

000000000001eae0 <png_handle_sBIT>:
   1eae0:	push   %rbp
   1eae1:	mov    %rsp,%rbp
   1eae4:	sub    $0x30,%rsp
   1eae8:	mov    0x12c(%rdi),%eax
   1eaee:	mov    %rax,%rcx
   1eaf1:	and    $0x1,%ecx
   1eaf4:	test   %ecx,%ecx
   1eaf6:	je     1eb9e <png_handle_sBIT+0xbe>
   1eafc:	and    $0x6,%eax
   1eaff:	test   %eax,%eax
   1eb01:	jne    1ebaa <png_handle_sBIT+0xca>
   1eb07:	test   %rsi,%rsi
   1eb0a:	jne    1ebd4 <png_handle_sBIT+0xf4>
   1eb10:	movzbl 0x267(%rdi),%eax
   1eb17:	cmp    $0x3,%al
   1eb19:	jne    1ec0c <png_handle_sBIT+0x12c>
   1eb1f:	mov    $0x8,%eax
   1eb24:	mov    $0x3,%ecx
   1eb29:	lea    0xfda1(%rip),%r8        # 2e8d1 <png_pass_inc.20+0x5e>
   1eb30:	cmp    %edx,%ecx
   1eb32:	jne    1ec1f <png_handle_sBIT+0x13f>
   1eb38:	cmp    $0x4,%edx
   1eb3b:	ja     1ec1f <png_handle_sBIT+0x13f>
   1eb41:	mov    %al,-0x29(%rbp)
   1eb44:	mov    %al,-0x2a(%rbp)
   1eb47:	mov    %al,-0x2b(%rbp)
   1eb4a:	mov    %al,-0x2c(%rbp)
   1eb4d:	lea    -0x2c(%rbp),%r8
   1eb51:	mov    %rdi,%r9
   1eb54:	mov    %rcx,%rdx
   1eb57:	mov    %r15,-0x10(%rbp)
   1eb5b:	mov    %rcx,-0x28(%rbp)
   1eb5f:	mov    %rax,-0x20(%rbp)
   1eb63:	mov    %rsi,-0x8(%rbp)
   1eb67:	mov    %r8,%rsi
   1eb6a:	mov    %rdi,%r15
   1eb6d:	mov    %r9,%rdi
   1eb70:	callq  1b210 <png_crc_read>
   1eb75:	xor    %eax,%eax
   1eb77:	mov    %r15,%rdi
   1eb7a:	mov    %rax,%rsi
   1eb7d:	mov    %r15,-0x18(%rbp)
   1eb81:	mov    %rax,%r15
   1eb84:	callq  1b270 <png_crc_finish>
   1eb89:	test   %eax,%eax
   1eb8b:	jne    1ec50 <png_handle_sBIT+0x170>
   1eb91:	mov    -0x20(%rbp),%rcx
   1eb95:	mov    -0x28(%rbp),%rdx
   1eb99:	jmpq   1ec6a <png_handle_sBIT+0x18a>
   1eb9e:	lea    0xfd34(%rip),%rsi        # 2e8d9 <png_pass_inc.20+0x66>
   1eba5:	callq  5060 <png_chunk_error@plt>
   1ebaa:	mov    %rdi,%rax
   1ebad:	mov    %r15,-0x28(%rbp)
   1ebb1:	mov    %rdx,%rsi
   1ebb4:	mov    %rdi,%r15
   1ebb7:	mov    %rax,%rdi
   1ebba:	callq  1b270 <png_crc_finish>
   1ebbf:	mov    %r15,%rdi
   1ebc2:	lea    0xfcfb(%rip),%rsi        # 2e8c4 <png_pass_inc.20+0x51>
   1ebc9:	callq  5230 <png_chunk_benign_error@plt>
   1ebce:	mov    -0x28(%rbp),%r15
   1ebd2:	leaveq 
   1ebd3:	retq   
   1ebd4:	mov    0x8(%rsi),%eax
   1ebd7:	and    $0x2,%eax
   1ebda:	test   %eax,%eax
   1ebdc:	je     1eb10 <png_handle_sBIT+0x30>
   1ebe2:	mov    %rdi,%rax
   1ebe5:	mov    %r15,-0x28(%rbp)
   1ebe9:	mov    %rdx,%rsi
   1ebec:	mov    %rdi,%r15
   1ebef:	mov    %rax,%rdi
   1ebf2:	callq  1b270 <png_crc_finish>
   1ebf7:	mov    %r15,%rdi
   1ebfa:	lea    0xfce5(%rip),%rsi        # 2e8e6 <png_pass_inc.20+0x73>
   1ec01:	callq  5230 <png_chunk_benign_error@plt>
   1ec06:	mov    -0x28(%rbp),%r15
   1ec0a:	leaveq 
   1ec0b:	retq   
   1ec0c:	movzbl 0x26b(%rdi),%ecx
   1ec13:	movzbl 0x268(%rdi),%eax
   1ec1a:	jmpq   1eb29 <png_handle_sBIT+0x49>
   1ec1f:	mov    %rdi,%rax
   1ec22:	mov    %r15,-0x28(%rbp)
   1ec26:	mov    %r14,-0x20(%rbp)
   1ec2a:	mov    %r8,%rsi
   1ec2d:	mov    %rdx,%r14
   1ec30:	mov    %rdi,%r15
   1ec33:	mov    %rax,%rdi
   1ec36:	callq  5230 <png_chunk_benign_error@plt>
   1ec3b:	mov    %r14,%rsi
   1ec3e:	mov    %r15,%rdi
   1ec41:	callq  1b270 <png_crc_finish>
   1ec46:	mov    -0x20(%rbp),%r14
   1ec4a:	mov    -0x28(%rbp),%r15
   1ec4e:	leaveq 
   1ec4f:	retq   
   1ec50:	mov    -0x10(%rbp),%r15
   1ec54:	leaveq 
   1ec55:	retq   
   1ec56:	mov    %r15d,%eax
   1ec59:	movzbl -0x2c(%rbp,%rax,1),%eax
   1ec5e:	test   %al,%al
   1ec60:	je     1ecac <png_handle_sBIT+0x1cc>
   1ec62:	cmp    %al,%cl
   1ec64:	jb     1ecac <png_handle_sBIT+0x1cc>
   1ec66:	add    $0x1,%r15d
   1ec6a:	cmp    %r15d,%edx
   1ec6d:	ja     1ec56 <png_handle_sBIT+0x176>
   1ec6f:	mov    -0x18(%rbp),%rdi
   1ec73:	lea    0x2d8(%rdi),%rdx
   1ec7a:	movzbl 0x267(%rdi),%eax
   1ec81:	and    $0x2,%eax
   1ec84:	test   %eax,%eax
   1ec86:	jg     1ecc2 <png_handle_sBIT+0x1e2>
   1ec88:	movzbl -0x2c(%rbp),%eax
   1ec8c:	mov    %al,0x2db(%rdi)
   1ec92:	mov    %al,(%rdx)
   1ec94:	mov    %al,0x2d9(%rdi)
   1ec9a:	mov    %al,0x2da(%rdi)
   1eca0:	movzbl -0x2b(%rbp),%eax
   1eca4:	mov    %al,0x2dc(%rdi)
   1ecaa:	jmp    1ece6 <png_handle_sBIT+0x206>
   1ecac:	mov    -0x18(%rbp),%rdi
   1ecb0:	lea    0xfc1a(%rip),%rsi        # 2e8d1 <png_pass_inc.20+0x5e>
   1ecb7:	callq  5230 <png_chunk_benign_error@plt>
   1ecbc:	mov    -0x10(%rbp),%r15
   1ecc0:	leaveq 
   1ecc1:	retq   
   1ecc2:	movzbl -0x2c(%rbp),%eax
   1ecc6:	mov    %al,(%rdx)
   1ecc8:	movzbl -0x2b(%rbp),%eax
   1eccc:	mov    %al,0x2d9(%rdi)
   1ecd2:	movzbl -0x2a(%rbp),%eax
   1ecd6:	mov    %al,0x2da(%rdi)
   1ecdc:	movzbl -0x29(%rbp),%eax
   1ece0:	mov    %al,0x2dc(%rdi)
   1ece6:	mov    -0x8(%rbp),%rsi
   1ecea:	callq  51d0 <png_set_sBIT@plt>
   1ecef:	mov    -0x10(%rbp),%r15
   1ecf3:	leaveq 
   1ecf4:	retq   
   1ecf5:	data16 nopw %cs:0x0(%rax,%rax,1)

000000000001ed00 <png_handle_sCAL>:
   1ed00:	push   %rbp
   1ed01:	mov    %rsp,%rbp
   1ed04:	sub    $0x50,%rsp
   1ed08:	mov    0x12c(%rdi),%eax
   1ed0e:	mov    %rax,%rcx
   1ed11:	and    $0x1,%ecx
   1ed14:	test   %ecx,%ecx
   1ed16:	je     1edb2 <png_handle_sCAL+0xb2>
   1ed1c:	and    $0x4,%eax
   1ed1f:	test   %eax,%eax
   1ed21:	jne    1edbe <png_handle_sCAL+0xbe>
   1ed27:	test   %rsi,%rsi
   1ed2a:	jne    1ede8 <png_handle_sCAL+0xe8>
   1ed30:	cmp    $0x3,%edx
   1ed33:	jbe    1ee22 <png_handle_sCAL+0x122>
   1ed39:	lea    0x1(%rdx),%eax
   1ed3c:	mov    %eax,%r8d
   1ed3f:	mov    $0x2,%eax
   1ed44:	mov    %rdi,%rcx
   1ed47:	mov    %r15,-0x28(%rbp)
   1ed4b:	mov    %r14,-0x20(%rbp)
   1ed4f:	mov    %rsi,-0x8(%rbp)
   1ed53:	mov    %r8,%rsi
   1ed56:	mov    %rdx,%r14
   1ed59:	mov    %rax,%rdx
   1ed5c:	mov    %rdi,%r15
   1ed5f:	mov    %rcx,%rdi
   1ed62:	callq  200a0 <png_read_buffer>
   1ed67:	test   %rax,%rax
   1ed6a:	je     1ee4c <png_handle_sCAL+0x14c>
   1ed70:	mov    %r15,%rdi
   1ed73:	mov    %rax,%rsi
   1ed76:	mov    %r14,%rdx
   1ed79:	mov    %r13,-0x18(%rbp)
   1ed7d:	mov    %rax,%r13
   1ed80:	callq  1b210 <png_crc_read>
   1ed85:	mov    %r14d,%eax
   1ed88:	movb   $0x0,0x0(%r13,%rax,1)
   1ed8e:	xor    %esi,%esi
   1ed90:	mov    %rsi,-0x38(%rbp)
   1ed94:	mov    %r15,%rdi
   1ed97:	callq  1b270 <png_crc_finish>
   1ed9c:	test   %eax,%eax
   1ed9e:	je     1ee70 <png_handle_sCAL+0x170>
   1eda4:	mov    -0x18(%rbp),%r13
   1eda8:	mov    -0x20(%rbp),%r14
   1edac:	mov    -0x28(%rbp),%r15
   1edb0:	leaveq 
   1edb1:	retq   
   1edb2:	lea    0xfb20(%rip),%rsi        # 2e8d9 <png_pass_inc.20+0x66>
   1edb9:	callq  5060 <png_chunk_error@plt>
   1edbe:	mov    %rdi,%rax
   1edc1:	mov    %r15,-0x38(%rbp)
   1edc5:	mov    %rdx,%rsi
   1edc8:	mov    %rdi,%r15
   1edcb:	mov    %rax,%rdi
   1edce:	callq  1b270 <png_crc_finish>
   1edd3:	mov    %r15,%rdi
   1edd6:	lea    0xfae7(%rip),%rsi        # 2e8c4 <png_pass_inc.20+0x51>
   1eddd:	callq  5230 <png_chunk_benign_error@plt>
   1ede2:	mov    -0x38(%rbp),%r15
   1ede6:	leaveq 
   1ede7:	retq   
   1ede8:	mov    0x8(%rsi),%eax
   1edeb:	and    $0x4000,%eax
   1edf0:	test   %eax,%eax
   1edf2:	je     1ed30 <png_handle_sCAL+0x30>
   1edf8:	mov    %rdi,%rax
   1edfb:	mov    %r15,-0x38(%rbp)
   1edff:	mov    %rdx,%rsi
   1ee02:	mov    %rdi,%r15
   1ee05:	mov    %rax,%rdi
   1ee08:	callq  1b270 <png_crc_finish>
   1ee0d:	mov    %r15,%rdi
   1ee10:	lea    0xfacf(%rip),%rsi        # 2e8e6 <png_pass_inc.20+0x73>
   1ee17:	callq  5230 <png_chunk_benign_error@plt>
   1ee1c:	mov    -0x38(%rbp),%r15
   1ee20:	leaveq 
   1ee21:	retq   
   1ee22:	mov    %rdi,%rax
   1ee25:	mov    %r15,-0x38(%rbp)
   1ee29:	mov    %rdx,%rsi
   1ee2c:	mov    %rdi,%r15
   1ee2f:	mov    %rax,%rdi
   1ee32:	callq  1b270 <png_crc_finish>
   1ee37:	mov    %r15,%rdi
   1ee3a:	lea    0xfa90(%rip),%rsi        # 2e8d1 <png_pass_inc.20+0x5e>
   1ee41:	callq  5230 <png_chunk_benign_error@plt>
   1ee46:	mov    -0x38(%rbp),%r15
   1ee4a:	leaveq 
   1ee4b:	retq   
   1ee4c:	lea    0xfb16(%rip),%rsi        # 2e969 <png_pass_inc.20+0xf6>
   1ee53:	mov    %r15,%rdi
   1ee56:	callq  5230 <png_chunk_benign_error@plt>
   1ee5b:	mov    %r14,%rsi
   1ee5e:	mov    %r15,%rdi
   1ee61:	callq  1b270 <png_crc_finish>
   1ee66:	mov    -0x20(%rbp),%r14
   1ee6a:	mov    -0x28(%rbp),%r15
   1ee6e:	leaveq 
   1ee6f:	retq   
   1ee70:	movzbl 0x0(%r13),%eax
   1ee75:	cmp    $0x1,%al
   1ee77:	jne    1ef6e <png_handle_sCAL+0x26e>
   1ee7d:	movq   $0x1,-0x48(%rbp)
   1ee85:	movl   $0x0,-0x3c(%rbp)
   1ee8c:	mov    %r14d,%r14d
   1ee8f:	lea    -0x3c(%rbp),%rdx
   1ee93:	lea    -0x48(%rbp),%rcx
   1ee97:	mov    %r13,%rdi
   1ee9a:	mov    %r14,%rsi
   1ee9d:	callq  86b0 <png_check_fp_number>
   1eea2:	test   %eax,%eax
   1eea4:	je     1ef93 <png_handle_sCAL+0x293>
   1eeaa:	mov    -0x48(%rbp),%rdx
   1eeae:	cmp    %rdx,%r14
   1eeb1:	jbe    1ef93 <png_handle_sCAL+0x293>
   1eeb7:	lea    0x1(%rdx),%rax
   1eebb:	mov    %rax,-0x48(%rbp)
   1eebf:	movzbl 0x0(%r13,%rdx,1),%eax
   1eec5:	test   %al,%al
   1eec7:	jne    1ef93 <png_handle_sCAL+0x293>
   1eecd:	mov    $0x1,%ecx
   1eed2:	mov    %rcx,-0x30(%rbp)
   1eed6:	movslq -0x3c(%rbp),%rax
   1eeda:	and    $0x188,%eax
   1eedf:	cmp    $0x108,%eax
   1eee4:	je     1eee8 <png_handle_sCAL+0x1e8>
   1eee6:	xor    %ecx,%ecx
   1eee8:	test   %ecx,%ecx
   1eeea:	je     1efb0 <png_handle_sCAL+0x2b0>
   1eef0:	movl   $0x0,-0x3c(%rbp)
   1eef7:	mov    %r13,%rdi
   1eefa:	mov    %r14,%rsi
   1eefd:	mov    %rdx,-0x10(%rbp)
   1ef01:	lea    -0x48(%rbp),%rcx
   1ef05:	lea    -0x3c(%rbp),%rdx
   1ef09:	callq  86b0 <png_check_fp_number>
   1ef0e:	test   %eax,%eax
   1ef10:	je     1efcd <png_handle_sCAL+0x2cd>
   1ef16:	cmp    -0x48(%rbp),%r14
   1ef1a:	jne    1efcd <png_handle_sCAL+0x2cd>
   1ef20:	movslq -0x3c(%rbp),%rax
   1ef24:	and    $0x188,%eax
   1ef29:	cmp    $0x108,%eax
   1ef2e:	jne    1ef36 <png_handle_sCAL+0x236>
   1ef30:	pushq  -0x30(%rbp)
   1ef33:	popq   -0x38(%rbp)
   1ef36:	mov    -0x38(%rbp),%rax
   1ef3a:	test   %eax,%eax
   1ef3c:	je     1efea <png_handle_sCAL+0x2ea>
   1ef42:	mov    -0x10(%rbp),%rax
   1ef46:	lea    0x1(%r13,%rax,1),%r8
   1ef4b:	movzbl 0x0(%r13),%edx
   1ef50:	lea    0x1(%r13),%rcx
   1ef54:	mov    %r15,%rdi
   1ef57:	mov    -0x8(%rbp),%rsi
   1ef5b:	callq  5660 <png_set_sCAL_s@plt>
   1ef60:	mov    -0x18(%rbp),%r13
   1ef64:	mov    -0x20(%rbp),%r14
   1ef68:	mov    -0x28(%rbp),%r15
   1ef6c:	leaveq 
   1ef6d:	retq   
   1ef6e:	cmp    $0x2,%al
   1ef70:	je     1ee7d <png_handle_sCAL+0x17d>
   1ef76:	mov    %r15,%rdi
   1ef79:	lea    0xfb70(%rip),%rsi        # 2eaf0 <png_pass_inc.20+0x27d>
   1ef80:	callq  5230 <png_chunk_benign_error@plt>
   1ef85:	mov    -0x18(%rbp),%r13
   1ef89:	mov    -0x20(%rbp),%r14
   1ef8d:	mov    -0x28(%rbp),%r15
   1ef91:	leaveq 
   1ef92:	retq   
   1ef93:	mov    %r15,%rdi
   1ef96:	lea    0xfb60(%rip),%rsi        # 2eafd <png_pass_inc.20+0x28a>
   1ef9d:	callq  5230 <png_chunk_benign_error@plt>
   1efa2:	mov    -0x18(%rbp),%r13
   1efa6:	mov    -0x20(%rbp),%r14
   1efaa:	mov    -0x28(%rbp),%r15
   1efae:	leaveq 
   1efaf:	retq   
   1efb0:	mov    %r15,%rdi
   1efb3:	lea    0xfb54(%rip),%rsi        # 2eb0e <png_pass_inc.20+0x29b>
   1efba:	callq  5230 <png_chunk_benign_error@plt>
   1efbf:	mov    -0x18(%rbp),%r13
   1efc3:	mov    -0x20(%rbp),%r14
   1efc7:	mov    -0x28(%rbp),%r15
   1efcb:	leaveq 
   1efcc:	retq   
   1efcd:	mov    %r15,%rdi
   1efd0:	lea    0xfb4a(%rip),%rsi        # 2eb21 <png_pass_inc.20+0x2ae>
   1efd7:	callq  5230 <png_chunk_benign_error@plt>
   1efdc:	mov    -0x18(%rbp),%r13
   1efe0:	mov    -0x20(%rbp),%r14
   1efe4:	mov    -0x28(%rbp),%r15
   1efe8:	leaveq 
   1efe9:	retq   
   1efea:	mov    %r15,%rdi
   1efed:	lea    0xfb3f(%rip),%rsi        # 2eb33 <png_pass_inc.20+0x2c0>
   1eff4:	callq  5230 <png_chunk_benign_error@plt>
   1eff9:	mov    -0x18(%rbp),%r13
   1effd:	mov    -0x20(%rbp),%r14
   1f001:	mov    -0x28(%rbp),%r15
   1f005:	leaveq 
   1f006:	retq   
   1f007:	nopw   0x0(%rax,%rax,1)

000000000001f010 <png_handle_sPLT>:
   1f010:	push   %rbp
   1f011:	mov    %rsp,%rbp
   1f014:	sub    $0x40,%rsp
   1f018:	mov    0x424(%rdi),%eax
   1f01e:	test   %eax,%eax
   1f020:	jne    1f0aa <png_handle_sPLT+0x9a>
   1f026:	mov    0x12c(%rdi),%eax
   1f02c:	mov    %rax,%rcx
   1f02f:	and    $0x1,%ecx
   1f032:	test   %ecx,%ecx
   1f034:	je     1f0fa <png_handle_sPLT+0xea>
   1f03a:	and    $0x4,%eax
   1f03d:	test   %eax,%eax
   1f03f:	jne    1f106 <png_handle_sPLT+0xf6>
   1f045:	lea    0x1(%rdx),%eax
   1f048:	mov    %eax,%ecx
   1f04a:	mov    $0x2,%r8d
   1f050:	mov    %rdi,%rax
   1f053:	mov    %r14,-0x10(%rbp)
   1f057:	mov    %r15,-0x18(%rbp)
   1f05b:	mov    %rsi,-0x8(%rbp)
   1f05f:	mov    %rcx,%rsi
   1f062:	mov    %rdx,%r14
   1f065:	mov    %r8,%rdx
   1f068:	mov    %rdi,%r15
   1f06b:	mov    %rax,%rdi
   1f06e:	callq  200a0 <png_read_buffer>
   1f073:	test   %rax,%rax
   1f076:	je     1f130 <png_handle_sPLT+0x120>
   1f07c:	mov    %r15,%rdi
   1f07f:	mov    %rax,%rsi
   1f082:	mov    %r14,%rdx
   1f085:	mov    %rax,-0x20(%rbp)
   1f089:	callq  1b210 <png_crc_read>
   1f08e:	xor    %esi,%esi
   1f090:	mov    %r15,%rdi
   1f093:	callq  1b270 <png_crc_finish>
   1f098:	test   %eax,%eax
   1f09a:	je     1f154 <png_handle_sPLT+0x144>
   1f0a0:	mov    -0x18(%rbp),%r15
   1f0a4:	mov    -0x10(%rbp),%r14
   1f0a8:	leaveq 
   1f0a9:	retq   
   1f0aa:	cmp    $0x1,%eax
   1f0ad:	je     1f164 <png_handle_sPLT+0x154>
   1f0b3:	add    $0xffffffff,%eax
   1f0b6:	mov    %eax,0x424(%rdi)
   1f0bc:	cmp    $0x1,%eax
   1f0bf:	jne    1f026 <png_handle_sPLT+0x16>
   1f0c5:	lea    0xfa7b(%rip),%rsi        # 2eb47 <png_pass_inc.20+0x2d4>
   1f0cc:	mov    %rdi,%rax
   1f0cf:	mov    %r14,-0x18(%rbp)
   1f0d3:	mov    %r15,-0x20(%rbp)
   1f0d7:	mov    %rdx,%r14
   1f0da:	mov    %rdi,%r15
   1f0dd:	mov    %rax,%rdi
   1f0e0:	callq  5390 <png_warning@plt>
   1f0e5:	mov    %r14,%rsi
   1f0e8:	mov    %r15,%rdi
   1f0eb:	callq  1b270 <png_crc_finish>
   1f0f0:	mov    -0x20(%rbp),%r15
   1f0f4:	mov    -0x18(%rbp),%r14
   1f0f8:	leaveq 
   1f0f9:	retq   
   1f0fa:	lea    0xf7d8(%rip),%rsi        # 2e8d9 <png_pass_inc.20+0x66>
   1f101:	callq  5060 <png_chunk_error@plt>
   1f106:	mov    %rdi,%rax
   1f109:	mov    %r15,-0x20(%rbp)
   1f10d:	mov    %rdx,%rsi
   1f110:	mov    %rdi,%r15
   1f113:	mov    %rax,%rdi
   1f116:	callq  1b270 <png_crc_finish>
   1f11b:	mov    %r15,%rdi
   1f11e:	lea    0xf79f(%rip),%rsi        # 2e8c4 <png_pass_inc.20+0x51>
   1f125:	callq  5230 <png_chunk_benign_error@plt>
   1f12a:	mov    -0x20(%rbp),%r15
   1f12e:	leaveq 
   1f12f:	retq   
   1f130:	mov    %r14,%rsi
   1f133:	mov    %r15,%rdi
   1f136:	callq  1b270 <png_crc_finish>
   1f13b:	mov    %r15,%rdi
   1f13e:	lea    0xf824(%rip),%rsi        # 2e969 <png_pass_inc.20+0xf6>
   1f145:	callq  5230 <png_chunk_benign_error@plt>
   1f14a:	mov    -0x18(%rbp),%r15
   1f14e:	mov    -0x10(%rbp),%r14
   1f152:	leaveq 
   1f153:	retq   
   1f154:	mov    %r14d,%eax
   1f157:	mov    -0x20(%rbp),%rdi
   1f15b:	movb   $0x0,(%rdi,%rax,1)
   1f15f:	mov    %rdi,%rdx
   1f162:	jmp    1f171 <png_handle_sPLT+0x161>
   1f164:	mov    %rdx,%rsi
   1f167:	callq  1b270 <png_crc_finish>
   1f16c:	leaveq 
   1f16d:	retq   
   1f16e:	mov    %rcx,%rdx
   1f171:	lea    0x1(%rdx),%rcx
   1f175:	movzbl (%rdx),%eax
   1f178:	test   %al,%al
   1f17a:	jne    1f16e <png_handle_sPLT+0x15e>
   1f17c:	cmp    $0x1,%r14d
   1f180:	jbe    1f19e <png_handle_sPLT+0x18e>
   1f182:	lea    -0x2(%r14),%eax
   1f186:	mov    %eax,%eax
   1f188:	add    %rdi,%rax
   1f18b:	cmp    %rax,%rcx
   1f18e:	ja     1f19e <png_handle_sPLT+0x18e>
   1f190:	movzbl (%rcx),%eax
   1f193:	cmp    $0x8,%al
   1f195:	je     1f1b7 <png_handle_sPLT+0x1a7>
   1f197:	mov    $0xa,%ecx
   1f19c:	jmp    1f1bc <png_handle_sPLT+0x1ac>
   1f19e:	mov    %r15,%rdi
   1f1a1:	lea    0xf9c0(%rip),%rsi        # 2eb68 <png_pass_inc.20+0x2f5>
   1f1a8:	callq  5390 <png_warning@plt>
   1f1ad:	mov    -0x18(%rbp),%r15
   1f1b1:	mov    -0x10(%rbp),%r14
   1f1b5:	leaveq 
   1f1b6:	retq   
   1f1b7:	mov    $0x6,%ecx
   1f1bc:	mov    %al,-0x38(%rbp)
   1f1bf:	lea    0x2(%rdx),%rsi
   1f1c3:	mov    %rsi,%rax
   1f1c6:	sub    %rdi,%rax
   1f1c9:	sub    %eax,%r14d
   1f1cc:	xor    %edx,%edx
   1f1ce:	mov    %r14,%rax
   1f1d1:	div    %ecx
   1f1d3:	test   %edx,%edx
   1f1d5:	jne    1f204 <png_handle_sPLT+0x1f4>
   1f1d7:	mov    %r14,%rax
   1f1da:	mov    %rsi,%r14
   1f1dd:	xor    %edx,%edx
   1f1df:	div    %ecx
   1f1e1:	mov    %eax,-0x28(%rbp)
   1f1e4:	movslq %eax,%rax
   1f1e7:	lea    (%rax,%rax,4),%rax
   1f1eb:	lea    (%rax,%rax,1),%rsi
   1f1ef:	mov    %r15,%rdi
   1f1f2:	callq  5150 <png_malloc_warn@plt>
   1f1f7:	mov    %rax,-0x30(%rbp)
   1f1fb:	test   %rax,%rax
   1f1fe:	je     1f21d <png_handle_sPLT+0x20d>
   1f200:	xor    %eax,%eax
   1f202:	jmp    1f273 <png_handle_sPLT+0x263>
   1f204:	mov    %r15,%rdi
   1f207:	lea    0xf96f(%rip),%rsi        # 2eb7d <png_pass_inc.20+0x30a>
   1f20e:	callq  5390 <png_warning@plt>
   1f213:	mov    -0x18(%rbp),%r15
   1f217:	mov    -0x10(%rbp),%r14
   1f21b:	leaveq 
   1f21c:	retq   
   1f21d:	mov    %r15,%rdi
   1f220:	lea    0xf970(%rip),%rsi        # 2eb97 <png_pass_inc.20+0x324>
   1f227:	callq  5390 <png_warning@plt>
   1f22c:	mov    -0x18(%rbp),%r15
   1f230:	mov    -0x10(%rbp),%r14
   1f234:	leaveq 
   1f235:	retq   
   1f236:	movzbl (%r14),%ecx
   1f23a:	mov    %cx,(%rsi)
   1f23d:	movzbl 0x1(%r14),%ecx
   1f242:	mov    %cx,0x2(%rsi)
   1f246:	movzbl 0x2(%r14),%ecx
   1f24b:	mov    %cx,0x4(%rsi)
   1f24f:	movzbl 0x3(%r14),%ecx
   1f254:	mov    %cx,0x6(%rsi)
   1f258:	lea    0x4(%r14),%rcx
   1f25c:	movzbl 0x1(%rcx),%edi
   1f260:	movzbl (%rcx),%edx
   1f263:	shl    $0x8,%edx
   1f266:	add    %edi,%edx
   1f268:	mov    %dx,0x8(%rsi)
   1f26c:	add    $0x1,%eax
   1f26f:	lea    0x2(%rcx),%r14
   1f273:	movslq -0x28(%rbp),%rcx
   1f277:	cmp    %eax,%ecx
   1f279:	jg     1f2ae <png_handle_sPLT+0x29e>
   1f27b:	mov    -0x20(%rbp),%rax
   1f27f:	mov    %rax,-0x40(%rbp)
   1f283:	lea    -0x40(%rbp),%rdx
   1f287:	mov    $0x1,%ecx
   1f28c:	mov    %r15,%rdi
   1f28f:	mov    -0x8(%rbp),%rsi
   1f293:	callq  52a0 <png_set_sPLT@plt>
   1f298:	mov    %r15,%rdi
   1f29b:	mov    -0x30(%rbp),%rsi
   1f29f:	callq  5790 <png_free@plt>
   1f2a4:	mov    -0x18(%rbp),%r15
   1f2a8:	mov    -0x10(%rbp),%r14
   1f2ac:	leaveq 
   1f2ad:	retq   
   1f2ae:	movslq %eax,%rcx
   1f2b1:	lea    (%rcx,%rcx,4),%rcx
   1f2b5:	lea    (%rcx,%rcx,1),%rsi
   1f2b9:	add    -0x30(%rbp),%rsi
   1f2bd:	movzbl -0x38(%rbp),%ecx
   1f2c1:	cmp    $0x8,%cl
   1f2c4:	je     1f236 <png_handle_sPLT+0x226>
   1f2ca:	movzbl 0x1(%r14),%edx
   1f2cf:	movzbl (%r14),%ecx
   1f2d3:	shl    $0x8,%ecx
   1f2d6:	add    %edx,%ecx
   1f2d8:	mov    %cx,(%rsi)
   1f2db:	movzbl 0x3(%r14),%edx
   1f2e0:	movzbl 0x2(%r14),%ecx
   1f2e5:	shl    $0x8,%ecx
   1f2e8:	add    %edx,%ecx
   1f2ea:	mov    %cx,0x2(%rsi)
   1f2ee:	movzbl 0x5(%r14),%edx
   1f2f3:	movzbl 0x4(%r14),%ecx
   1f2f8:	shl    $0x8,%ecx
   1f2fb:	add    %edx,%ecx
   1f2fd:	mov    %cx,0x4(%rsi)
   1f301:	movzbl 0x7(%r14),%edx
   1f306:	movzbl 0x6(%r14),%ecx
   1f30b:	shl    $0x8,%ecx
   1f30e:	add    %edx,%ecx
   1f310:	mov    %cx,0x6(%rsi)
   1f314:	lea    0x8(%r14),%rcx
   1f318:	jmpq   1f25c <png_handle_sPLT+0x24c>
   1f31d:	nopl   (%rax)

000000000001f320 <png_handle_sRGB>:
   1f320:	push   %rbp
   1f321:	mov    %rsp,%rbp
   1f324:	sub    $0x20,%rsp
   1f328:	mov    0x12c(%rdi),%eax
   1f32e:	mov    %rax,%rcx
   1f331:	and    $0x1,%ecx
   1f334:	test   %ecx,%ecx
   1f336:	je     1f37a <png_handle_sRGB+0x5a>
   1f338:	and    $0x6,%eax
   1f33b:	test   %eax,%eax
   1f33d:	jne    1f386 <png_handle_sRGB+0x66>
   1f33f:	cmp    $0x1,%edx
   1f342:	jne    1f3b0 <png_handle_sRGB+0x90>
   1f344:	lea    -0x11(%rbp),%rcx
   1f348:	mov    $0x1,%edx
   1f34d:	mov    %rdi,%rax
   1f350:	mov    %r15,-0x10(%rbp)
   1f354:	mov    %rsi,-0x8(%rbp)
   1f358:	mov    %rcx,%rsi
   1f35b:	mov    %rdi,%r15
   1f35e:	mov    %rax,%rdi
   1f361:	callq  1b210 <png_crc_read>
   1f366:	xor    %esi,%esi
   1f368:	mov    %r15,%rdi
   1f36b:	callq  1b270 <png_crc_finish>
   1f370:	test   %eax,%eax
   1f372:	je     1f3da <png_handle_sRGB+0xba>
   1f374:	mov    -0x10(%rbp),%r15
   1f378:	leaveq 
   1f379:	retq   
   1f37a:	lea    0xf558(%rip),%rsi        # 2e8d9 <png_pass_inc.20+0x66>
   1f381:	callq  5060 <png_chunk_error@plt>
   1f386:	mov    %rdi,%rax
   1f389:	mov    %r15,-0x10(%rbp)
   1f38d:	mov    %rdx,%rsi
   1f390:	mov    %rdi,%r15
   1f393:	mov    %rax,%rdi
   1f396:	callq  1b270 <png_crc_finish>
   1f39b:	mov    %r15,%rdi
   1f39e:	lea    0xf51f(%rip),%rsi        # 2e8c4 <png_pass_inc.20+0x51>
   1f3a5:	callq  5230 <png_chunk_benign_error@plt>
   1f3aa:	mov    -0x10(%rbp),%r15
   1f3ae:	leaveq 
   1f3af:	retq   
   1f3b0:	mov    %rdi,%rax
   1f3b3:	mov    %r15,-0x10(%rbp)
   1f3b7:	mov    %rdx,%rsi
   1f3ba:	mov    %rdi,%r15
   1f3bd:	mov    %rax,%rdi
   1f3c0:	callq  1b270 <png_crc_finish>
   1f3c5:	mov    %r15,%rdi
   1f3c8:	lea    0xf502(%rip),%rsi        # 2e8d1 <png_pass_inc.20+0x5e>
   1f3cf:	callq  5230 <png_chunk_benign_error@plt>
   1f3d4:	mov    -0x10(%rbp),%r15
   1f3d8:	leaveq 
   1f3d9:	retq   
   1f3da:	movzwl 0x4e2(%r15),%eax
   1f3e2:	mov    %rax,%rcx
   1f3e5:	and    $0x8000,%ecx
   1f3eb:	test   %ecx,%ecx
   1f3ed:	jle    1f3f5 <png_handle_sRGB+0xd5>
   1f3ef:	mov    -0x10(%rbp),%r15
   1f3f3:	leaveq 
   1f3f4:	retq   
   1f3f5:	mov    %rax,%rcx
   1f3f8:	and    $0x4,%ecx
   1f3fb:	test   %ecx,%ecx
   1f3fd:	jg     1f424 <png_handle_sRGB+0x104>
   1f3ff:	lea    0x498(%r15),%rsi
   1f406:	movzbl -0x11(%rbp),%edx
   1f40a:	mov    %r15,%rdi
   1f40d:	callq  71e0 <png_colorspace_set_sRGB>
   1f412:	mov    %r15,%rdi
   1f415:	mov    -0x8(%rbp),%rsi
   1f419:	callq  7010 <png_colorspace_sync>
   1f41e:	mov    -0x10(%rbp),%r15
   1f422:	leaveq 
   1f423:	retq   
   1f424:	or     $0x8000,%ax
   1f428:	mov    %ax,0x4e2(%r15)
   1f430:	mov    %r15,%rdi
   1f433:	mov    -0x8(%rbp),%rsi
   1f437:	callq  7010 <png_colorspace_sync>
   1f43c:	mov    %r15,%rdi
   1f43f:	lea    0xf60d(%rip),%rsi        # 2ea53 <png_pass_inc.20+0x1e0>
   1f446:	callq  5230 <png_chunk_benign_error@plt>
   1f44b:	mov    -0x10(%rbp),%r15
   1f44f:	leaveq 
   1f450:	retq   
   1f451:	data16 nopw %cs:0x0(%rax,%rax,1)
   1f45c:	nopl   0x0(%rax)

000000000001f460 <png_handle_tEXt>:
   1f460:	push   %rbp
   1f461:	mov    %rsp,%rbp
   1f464:	sub    $0x60,%rsp
   1f468:	mov    0x424(%rdi),%eax
   1f46e:	test   %eax,%eax
   1f470:	je     1f4b3 <png_handle_tEXt+0x53>
   1f472:	cmp    $0x1,%eax
   1f475:	je     1f533 <png_handle_tEXt+0xd3>
   1f47b:	add    $0xffffffff,%eax
   1f47e:	mov    %eax,0x424(%rdi)
   1f484:	cmp    $0x1,%eax
   1f487:	jne    1f4b3 <png_handle_tEXt+0x53>
   1f489:	mov    %rdi,%rax
   1f48c:	mov    %r15,-0x20(%rbp)
   1f490:	mov    %rdx,%rsi
   1f493:	mov    %rdi,%r15
   1f496:	mov    %rax,%rdi
   1f499:	callq  1b270 <png_crc_finish>
   1f49e:	mov    %r15,%rdi
   1f4a1:	lea    0xf5bd(%rip),%rsi        # 2ea65 <png_pass_inc.20+0x1f2>
   1f4a8:	callq  5230 <png_chunk_benign_error@plt>
   1f4ad:	mov    -0x20(%rbp),%r15
   1f4b1:	leaveq 
   1f4b2:	retq   
   1f4b3:	mov    0x12c(%rdi),%eax
   1f4b9:	mov    %rax,%rcx
   1f4bc:	and    $0x1,%ecx
   1f4bf:	test   %ecx,%ecx
   1f4c1:	je     1f53d <png_handle_tEXt+0xdd>
   1f4c3:	mov    %rax,%rcx
   1f4c6:	and    $0x4,%ecx
   1f4c9:	test   %ecx,%ecx
   1f4cb:	je     1f4d6 <png_handle_tEXt+0x76>
   1f4cd:	or     $0x8,%eax
   1f4d0:	mov    %eax,0x12c(%rdi)
   1f4d6:	lea    0x1(%rdx),%eax
   1f4d9:	mov    %eax,%r8d
   1f4dc:	mov    $0x1,%eax
   1f4e1:	mov    %rdi,%rcx
   1f4e4:	mov    %r14,-0x8(%rbp)
   1f4e8:	mov    %r15,-0x10(%rbp)
   1f4ec:	mov    %rsi,-0x18(%rbp)
   1f4f0:	mov    %r8,%rsi
   1f4f3:	mov    %rdx,%r14
   1f4f6:	mov    %rax,%rdx
   1f4f9:	mov    %rdi,%r15
   1f4fc:	mov    %rcx,%rdi
   1f4ff:	callq  200a0 <png_read_buffer>
   1f504:	test   %rax,%rax
   1f507:	je     1f549 <png_handle_tEXt+0xe9>
   1f509:	mov    %r15,%rdi
   1f50c:	mov    %rax,%rsi
   1f50f:	mov    %r14,%rdx
   1f512:	mov    %rax,-0x20(%rbp)
   1f516:	callq  1b210 <png_crc_read>
   1f51b:	xor    %esi,%esi
   1f51d:	mov    %r15,%rdi
   1f520:	callq  1b270 <png_crc_finish>
   1f525:	test   %eax,%eax
   1f527:	je     1f562 <png_handle_tEXt+0x102>
   1f529:	mov    -0x10(%rbp),%r15
   1f52d:	mov    -0x8(%rbp),%r14
   1f531:	leaveq 
   1f532:	retq   
   1f533:	mov    %rdx,%rsi
   1f536:	callq  1b270 <png_crc_finish>
   1f53b:	leaveq 
   1f53c:	retq   
   1f53d:	lea    0xf395(%rip),%rsi        # 2e8d9 <png_pass_inc.20+0x66>
   1f544:	callq  5060 <png_chunk_error@plt>
   1f549:	mov    %r15,%rdi
   1f54c:	lea    0xf416(%rip),%rsi        # 2e969 <png_pass_inc.20+0xf6>
   1f553:	callq  5230 <png_chunk_benign_error@plt>
   1f558:	mov    -0x10(%rbp),%r15
   1f55c:	mov    -0x8(%rbp),%r14
   1f560:	leaveq 
   1f561:	retq   
   1f562:	mov    %r14d,%eax
   1f565:	mov    -0x20(%rbp),%rdx
   1f569:	lea    (%rdx,%rax,1),%rcx
   1f56d:	movb   $0x0,(%rcx)
   1f570:	mov    %rdx,%rdi
   1f573:	jmp    1f579 <png_handle_tEXt+0x119>
   1f575:	add    $0x1,%rdi
   1f579:	movsbq (%rdi),%rax
   1f57d:	test   %al,%al
   1f57f:	jne    1f575 <png_handle_tEXt+0x115>
   1f581:	cmp    %rcx,%rdi
   1f584:	je     1f58a <png_handle_tEXt+0x12a>
   1f586:	add    $0x1,%rdi
   1f58a:	movl   $0xffffffff,-0x58(%rbp)
   1f591:	mov    %rdx,-0x50(%rbp)
   1f595:	movq   $0x0,-0x30(%rbp)
   1f59d:	movq   $0x0,-0x28(%rbp)
   1f5a5:	movq   $0x0,-0x38(%rbp)
   1f5ad:	mov    %rdi,-0x48(%rbp)
   1f5b1:	callq  5260 <strlen@plt>
   1f5b6:	mov    %rax,-0x40(%rbp)
   1f5ba:	lea    -0x58(%rbp),%rdx
   1f5be:	mov    %r15,%rdi
   1f5c1:	mov    $0x1,%ecx
   1f5c6:	mov    -0x18(%rbp),%rsi
   1f5ca:	callq  22de0 <png_set_text_2>
   1f5cf:	test   %eax,%eax
   1f5d1:	jne    1f5dd <png_handle_tEXt+0x17d>
   1f5d3:	mov    -0x10(%rbp),%r15
   1f5d7:	mov    -0x8(%rbp),%r14
   1f5db:	leaveq 
   1f5dc:	retq   
   1f5dd:	mov    %r15,%rdi
   1f5e0:	lea    0xf5d4(%rip),%rsi        # 2ebbb <png_pass_inc.20+0x348>
   1f5e7:	callq  5390 <png_warning@plt>
   1f5ec:	mov    -0x10(%rbp),%r15
   1f5f0:	mov    -0x8(%rbp),%r14
   1f5f4:	leaveq 
   1f5f5:	retq   
   1f5f6:	nopw   %cs:0x0(%rax,%rax,1)

000000000001f600 <png_handle_tIME>:
   1f600:	push   %rbp
   1f601:	mov    %rsp,%rbp
   1f604:	sub    $0x20,%rsp
   1f608:	mov    0x12c(%rdi),%eax
   1f60e:	and    $0x1,%eax
   1f611:	test   %eax,%eax
   1f613:	je     1f66e <png_handle_tIME+0x6e>
   1f615:	test   %rsi,%rsi
   1f618:	jne    1f67a <png_handle_tIME+0x7a>
   1f61a:	mov    0x12c(%rdi),%eax
   1f620:	mov    %rax,%rcx
   1f623:	and    $0x4,%ecx
   1f626:	test   %ecx,%ecx
   1f628:	je     1f633 <png_handle_tIME+0x33>
   1f62a:	or     $0x8,%eax
   1f62d:	mov    %eax,0x12c(%rdi)
   1f633:	cmp    $0x7,%edx
   1f636:	jne    1f6b0 <png_handle_tIME+0xb0>
   1f638:	lea    -0x1f(%rbp),%rax
   1f63c:	mov    $0x7,%edx
   1f641:	mov    %rdi,%rcx
   1f644:	mov    %r15,-0x10(%rbp)
   1f648:	mov    %rsi,-0x8(%rbp)
   1f64c:	mov    %rax,%rsi
   1f64f:	mov    %rdi,%r15
   1f652:	mov    %rcx,%rdi
   1f655:	callq  1b210 <png_crc_read>
   1f65a:	xor    %esi,%esi
   1f65c:	mov    %r15,%rdi
   1f65f:	callq  1b270 <png_crc_finish>
   1f664:	test   %eax,%eax
   1f666:	je     1f6da <png_handle_tIME+0xda>
   1f668:	mov    -0x10(%rbp),%r15
   1f66c:	leaveq 
   1f66d:	retq   
   1f66e:	lea    0xf264(%rip),%rsi        # 2e8d9 <png_pass_inc.20+0x66>
   1f675:	callq  5060 <png_chunk_error@plt>
   1f67a:	mov    0x8(%rsi),%eax
   1f67d:	and    $0x200,%eax
   1f682:	test   %eax,%eax
   1f684:	je     1f61a <png_handle_tIME+0x1a>
   1f686:	mov    %rdi,%rax
   1f689:	mov    %r15,-0x10(%rbp)
   1f68d:	mov    %rdx,%rsi
   1f690:	mov    %rdi,%r15
   1f693:	mov    %rax,%rdi
   1f696:	callq  1b270 <png_crc_finish>
   1f69b:	mov    %r15,%rdi
   1f69e:	lea    0xf241(%rip),%rsi        # 2e8e6 <png_pass_inc.20+0x73>
   1f6a5:	callq  5230 <png_chunk_benign_error@plt>
   1f6aa:	mov    -0x10(%rbp),%r15
   1f6ae:	leaveq 
   1f6af:	retq   
   1f6b0:	mov    %rdi,%rax
   1f6b3:	mov    %r15,-0x10(%rbp)
   1f6b7:	mov    %rdx,%rsi
   1f6ba:	mov    %rdi,%r15
   1f6bd:	mov    %rax,%rdi
   1f6c0:	callq  1b270 <png_crc_finish>
   1f6c5:	mov    %r15,%rdi
   1f6c8:	lea    0xf202(%rip),%rsi        # 2e8d1 <png_pass_inc.20+0x5e>
   1f6cf:	callq  5230 <png_chunk_benign_error@plt>
   1f6d4:	mov    -0x10(%rbp),%r15
   1f6d8:	leaveq 
   1f6d9:	retq   
   1f6da:	movzbl -0x19(%rbp),%eax
   1f6de:	mov    %al,-0x12(%rbp)
   1f6e1:	movzbl -0x1a(%rbp),%eax
   1f6e5:	mov    %al,-0x13(%rbp)
   1f6e8:	movzbl -0x1b(%rbp),%eax
   1f6ec:	mov    %al,-0x14(%rbp)
   1f6ef:	movzbl -0x1c(%rbp),%eax
   1f6f3:	mov    %al,-0x15(%rbp)
   1f6f6:	movzbl -0x1d(%rbp),%eax
   1f6fa:	mov    %al,-0x16(%rbp)
   1f6fd:	movzbl -0x1e(%rbp),%ecx
   1f701:	movzbl -0x1f(%rbp),%eax
   1f705:	shl    $0x8,%eax
   1f708:	add    %ecx,%eax
   1f70a:	mov    %ax,-0x18(%rbp)
   1f70e:	mov    %r15,%rdi
   1f711:	lea    -0x18(%rbp),%rdx
   1f715:	mov    -0x8(%rbp),%rsi
   1f719:	callq  54e0 <png_set_tIME@plt>
   1f71e:	mov    -0x10(%rbp),%r15
   1f722:	leaveq 
   1f723:	retq   
   1f724:	data16 nopw %cs:0x0(%rax,%rax,1)
   1f72f:	nop

000000000001f730 <png_handle_tRNS>:
   1f730:	push   %rbp
   1f731:	mov    %rsp,%rbp
   1f734:	sub    $0x120,%rsp
   1f73b:	mov    0x12c(%rdi),%eax
   1f741:	mov    %rax,%rcx
   1f744:	and    $0x1,%ecx
   1f747:	test   %ecx,%ecx
   1f749:	je     1f7a0 <png_handle_tRNS+0x70>
   1f74b:	and    $0x4,%eax
   1f74e:	test   %eax,%eax
   1f750:	jne    1f7ac <png_handle_tRNS+0x7c>
   1f752:	test   %rsi,%rsi
   1f755:	jne    1f7d6 <png_handle_tRNS+0xa6>
   1f757:	movzbl 0x267(%rdi),%eax
   1f75e:	test   %al,%al
   1f760:	je     1f80e <png_handle_tRNS+0xde>
   1f766:	cmp    $0x2,%al
   1f768:	je     1f891 <png_handle_tRNS+0x161>
   1f76e:	cmp    $0x3,%al
   1f770:	je     1f90a <png_handle_tRNS+0x1da>
   1f776:	mov    %rdi,%rax
   1f779:	mov    %r15,-0x18(%rbp)
   1f77d:	mov    %rdx,%rsi
   1f780:	mov    %rdi,%r15
   1f783:	mov    %rax,%rdi
   1f786:	callq  1b270 <png_crc_finish>
   1f78b:	mov    %r15,%rdi
   1f78e:	lea    0xf450(%rip),%rsi        # 2ebe5 <png_pass_inc.20+0x372>
   1f795:	callq  5230 <png_chunk_benign_error@plt>
   1f79a:	mov    -0x18(%rbp),%r15
   1f79e:	leaveq 
   1f79f:	retq   
   1f7a0:	lea    0xf132(%rip),%rsi        # 2e8d9 <png_pass_inc.20+0x66>
   1f7a7:	callq  5060 <png_chunk_error@plt>
   1f7ac:	mov    %rdi,%rax
   1f7af:	mov    %r15,-0x18(%rbp)
   1f7b3:	mov    %rdx,%rsi
   1f7b6:	mov    %rdi,%r15
   1f7b9:	mov    %rax,%rdi
   1f7bc:	callq  1b270 <png_crc_finish>
   1f7c1:	mov    %r15,%rdi
   1f7c4:	lea    0xf0f9(%rip),%rsi        # 2e8c4 <png_pass_inc.20+0x51>
   1f7cb:	callq  5230 <png_chunk_benign_error@plt>
   1f7d0:	mov    -0x18(%rbp),%r15
   1f7d4:	leaveq 
   1f7d5:	retq   
   1f7d6:	mov    0x8(%rsi),%eax
   1f7d9:	and    $0x10,%eax
   1f7dc:	test   %eax,%eax
   1f7de:	je     1f757 <png_handle_tRNS+0x27>
   1f7e4:	mov    %rdi,%rax
   1f7e7:	mov    %r15,-0x18(%rbp)
   1f7eb:	mov    %rdx,%rsi
   1f7ee:	mov    %rdi,%r15
   1f7f1:	mov    %rax,%rdi
   1f7f4:	callq  1b270 <png_crc_finish>
   1f7f9:	mov    %r15,%rdi
   1f7fc:	lea    0xf0e3(%rip),%rsi        # 2e8e6 <png_pass_inc.20+0x73>
   1f803:	callq  5230 <png_chunk_benign_error@plt>
   1f808:	mov    -0x18(%rbp),%r15
   1f80c:	leaveq 
   1f80d:	retq   
   1f80e:	cmp    $0x2,%edx
   1f811:	jne    1f97c <png_handle_tRNS+0x24c>
   1f817:	lea    -0x20(%rbp),%rax
   1f81b:	mov    $0x2,%edx
   1f820:	mov    %rdi,%rcx
   1f823:	mov    %r15,-0x18(%rbp)
   1f827:	mov    %rsi,-0x8(%rbp)
   1f82b:	mov    %rax,%rsi
   1f82e:	mov    %rdi,%r15
   1f831:	mov    %rcx,%rdi
   1f834:	callq  1b210 <png_crc_read>
   1f839:	movw   $0x1,0x260(%r15)
   1f843:	movzbl -0x1f(%rbp),%ecx
   1f847:	movzbl -0x20(%rbp),%eax
   1f84b:	shl    $0x8,%eax
   1f84e:	add    %ecx,%eax
   1f850:	mov    %ax,0x2f8(%r15)
   1f858:	xor    %esi,%esi
   1f85a:	mov    %r15,%rdi
   1f85d:	callq  1b270 <png_crc_finish>
   1f862:	test   %eax,%eax
   1f864:	jne    1f9a6 <png_handle_tRNS+0x276>
   1f86a:	mov    %r15,%rdi
   1f86d:	lea    -0x120(%rbp),%rdx
   1f874:	movzwl 0x260(%rdi),%ecx
   1f87b:	lea    0x2f0(%rdi),%r8
   1f882:	mov    -0x8(%rbp),%rsi
   1f886:	callq  54f0 <png_set_tRNS@plt>
   1f88b:	mov    -0x18(%rbp),%r15
   1f88f:	leaveq 
   1f890:	retq   
   1f891:	cmp    $0x6,%edx
   1f894:	jne    1f9b6 <png_handle_tRNS+0x286>
   1f89a:	lea    -0x1e(%rbp),%rax
   1f89e:	mov    $0x6,%edx
   1f8a3:	mov    %rdi,%rcx
   1f8a6:	mov    %r15,-0x18(%rbp)
   1f8aa:	mov    %rsi,-0x8(%rbp)
   1f8ae:	mov    %rax,%rsi
   1f8b1:	mov    %rdi,%r15
   1f8b4:	mov    %rcx,%rdi
   1f8b7:	callq  1b210 <png_crc_read>
   1f8bc:	movw   $0x1,0x260(%r15)
   1f8c6:	movzbl -0x1d(%rbp),%ecx
   1f8ca:	movzbl -0x1e(%rbp),%eax
   1f8ce:	shl    $0x8,%eax
   1f8d1:	add    %ecx,%eax
   1f8d3:	mov    %ax,0x2f2(%r15)
   1f8db:	movzbl -0x1b(%rbp),%ecx
   1f8df:	movzbl -0x1c(%rbp),%eax
   1f8e3:	shl    $0x8,%eax
   1f8e6:	add    %ecx,%eax
   1f8e8:	mov    %ax,0x2f4(%r15)
   1f8f0:	movzbl -0x19(%rbp),%ecx
   1f8f4:	movzbl -0x1a(%rbp),%eax
   1f8f8:	shl    $0x8,%eax
   1f8fb:	add    %ecx,%eax
   1f8fd:	mov    %ax,0x2f6(%r15)
   1f905:	jmpq   1f858 <png_handle_tRNS+0x128>
   1f90a:	mov    0x12c(%rdi),%eax
   1f910:	and    $0x2,%eax
   1f913:	test   %eax,%eax
   1f915:	je     1f9e0 <png_handle_tRNS+0x2b0>
   1f91b:	movzwl 0x258(%rdi),%eax
   1f922:	cmp    %eax,%edx
   1f924:	ja     1fa0a <png_handle_tRNS+0x2da>
   1f92a:	cmp    $0x100,%edx
   1f930:	ja     1fa0a <png_handle_tRNS+0x2da>
   1f936:	test   %edx,%edx
   1f938:	je     1fa0a <png_handle_tRNS+0x2da>
   1f93e:	lea    -0x120(%rbp),%rax
   1f945:	mov    %rdi,%rcx
   1f948:	mov    %rdx,%r8
   1f94b:	mov    %r15,-0x18(%rbp)
   1f94f:	mov    %r14,-0x10(%rbp)
   1f953:	mov    %rsi,-0x8(%rbp)
   1f957:	mov    %rax,%rsi
   1f95a:	mov    %rdx,%r14
   1f95d:	mov    %r8,%rdx
   1f960:	mov    %rdi,%r15
   1f963:	mov    %rcx,%rdi
   1f966:	callq  1b210 <png_crc_read>
   1f96b:	mov    %r14w,0x260(%r15)
   1f973:	mov    -0x10(%rbp),%r14
   1f977:	jmpq   1f858 <png_handle_tRNS+0x128>
   1f97c:	mov    %rdi,%rax
   1f97f:	mov    %r15,-0x18(%rbp)
   1f983:	mov    %rdx,%rsi
   1f986:	mov    %rdi,%r15
   1f989:	mov    %rax,%rdi
   1f98c:	callq  1b270 <png_crc_finish>
   1f991:	mov    %r15,%rdi
   1f994:	lea    0xef36(%rip),%rsi        # 2e8d1 <png_pass_inc.20+0x5e>
   1f99b:	callq  5230 <png_chunk_benign_error@plt>
   1f9a0:	mov    -0x18(%rbp),%r15
   1f9a4:	leaveq 
   1f9a5:	retq   
   1f9a6:	movw   $0x0,0x260(%r15)
   1f9b0:	mov    -0x18(%rbp),%r15
   1f9b4:	leaveq 
   1f9b5:	retq   
   1f9b6:	mov    %rdi,%rax
   1f9b9:	mov    %r15,-0x18(%rbp)
   1f9bd:	mov    %rdx,%rsi
   1f9c0:	mov    %rdi,%r15
   1f9c3:	mov    %rax,%rdi
   1f9c6:	callq  1b270 <png_crc_finish>
   1f9cb:	mov    %r15,%rdi
   1f9ce:	lea    0xeefc(%rip),%rsi        # 2e8d1 <png_pass_inc.20+0x5e>
   1f9d5:	callq  5230 <png_chunk_benign_error@plt>
   1f9da:	mov    -0x18(%rbp),%r15
   1f9de:	leaveq 
   1f9df:	retq   
   1f9e0:	mov    %rdi,%rax
   1f9e3:	mov    %r15,-0x18(%rbp)
   1f9e7:	mov    %rdx,%rsi
   1f9ea:	mov    %rdi,%r15
   1f9ed:	mov    %rax,%rdi
   1f9f0:	callq  1b270 <png_crc_finish>
   1f9f5:	mov    %r15,%rdi
   1f9f8:	lea    0xeec5(%rip),%rsi        # 2e8c4 <png_pass_inc.20+0x51>
   1f9ff:	callq  5230 <png_chunk_benign_error@plt>
   1fa04:	mov    -0x18(%rbp),%r15
   1fa08:	leaveq 
   1fa09:	retq   
   1fa0a:	mov    %rdi,%rax
   1fa0d:	mov    %r15,-0x18(%rbp)
   1fa11:	mov    %rdx,%rsi
   1fa14:	mov    %rdi,%r15
   1fa17:	mov    %rax,%rdi
   1fa1a:	callq  1b270 <png_crc_finish>
   1fa1f:	mov    %r15,%rdi
   1fa22:	lea    0xeea8(%rip),%rsi        # 2e8d1 <png_pass_inc.20+0x5e>
   1fa29:	callq  5230 <png_chunk_benign_error@plt>
   1fa2e:	mov    -0x18(%rbp),%r15
   1fa32:	leaveq 
   1fa33:	retq   
   1fa34:	data16 nopw %cs:0x0(%rax,%rax,1)
   1fa3f:	nop

000000000001fa40 <png_handle_zTXt>:
   1fa40:	push   %rbp
   1fa41:	mov    %rsp,%rbp
   1fa44:	sub    $0x70,%rsp
   1fa48:	mov    0x424(%rdi),%eax
   1fa4e:	test   %eax,%eax
   1fa50:	jne    1fae4 <png_handle_zTXt+0xa4>
   1fa56:	mov    0x12c(%rdi),%eax
   1fa5c:	mov    %rax,%rcx
   1fa5f:	and    $0x1,%ecx
   1fa62:	test   %ecx,%ecx
   1fa64:	je     1fb29 <png_handle_zTXt+0xe9>
   1fa6a:	mov    %rax,%rcx
   1fa6d:	and    $0x4,%ecx
   1fa70:	test   %ecx,%ecx
   1fa72:	je     1fa7d <png_handle_zTXt+0x3d>
   1fa74:	or     $0x8,%eax
   1fa77:	mov    %eax,0x12c(%rdi)
   1fa7d:	mov    %edx,%eax
   1fa7f:	mov    $0x2,%r8d
   1fa85:	mov    %rdi,%rcx
   1fa88:	mov    %r14,-0x8(%rbp)
   1fa8c:	mov    %r15,-0x10(%rbp)
   1fa90:	mov    %rsi,-0x18(%rbp)
   1fa94:	mov    %rax,%rsi
   1fa97:	mov    %rdx,%r14
   1fa9a:	mov    %r8,%rdx
   1fa9d:	mov    %rdi,%r15
   1faa0:	mov    %rcx,%rdi
   1faa3:	callq  200a0 <png_read_buffer>
   1faa8:	test   %rax,%rax
   1faab:	je     1fb35 <png_handle_zTXt+0xf5>
   1fab1:	mov    %r15,%rdi
   1fab4:	mov    %rax,%rsi
   1fab7:	mov    %r14,%rdx
   1faba:	mov    %rax,-0x28(%rbp)
   1fabe:	callq  1b210 <png_crc_read>
   1fac3:	xor    %eax,%eax
   1fac5:	mov    %r15,%rdi
   1fac8:	mov    %rax,%rsi
   1facb:	mov    %r15,-0x20(%rbp)
   1facf:	mov    %rax,%r15
   1fad2:	callq  1b270 <png_crc_finish>
   1fad7:	test   %eax,%eax
   1fad9:	jne    1fb59 <png_handle_zTXt+0x119>
   1fadb:	mov    -0x28(%rbp),%rax
   1fadf:	jmpq   1fb70 <png_handle_zTXt+0x130>
   1fae4:	cmp    $0x1,%eax
   1fae7:	je     1fb98 <png_handle_zTXt+0x158>
   1faed:	add    $0xffffffff,%eax
   1faf0:	mov    %eax,0x424(%rdi)
   1faf6:	cmp    $0x1,%eax
   1faf9:	jne    1fa56 <png_handle_zTXt+0x16>
   1faff:	mov    %rdi,%rax
   1fb02:	mov    %r15,-0x28(%rbp)
   1fb06:	mov    %rdx,%rsi
   1fb09:	mov    %rdi,%r15
   1fb0c:	mov    %rax,%rdi
   1fb0f:	callq  1b270 <png_crc_finish>
   1fb14:	mov    %r15,%rdi
   1fb17:	lea    0xef47(%rip),%rsi        # 2ea65 <png_pass_inc.20+0x1f2>
   1fb1e:	callq  5230 <png_chunk_benign_error@plt>
   1fb23:	mov    -0x28(%rbp),%r15
   1fb27:	leaveq 
   1fb28:	retq   
   1fb29:	lea    0xeda9(%rip),%rsi        # 2e8d9 <png_pass_inc.20+0x66>
   1fb30:	callq  5060 <png_chunk_error@plt>
   1fb35:	mov    %r14,%rsi
   1fb38:	mov    %r15,%rdi
   1fb3b:	callq  1b270 <png_crc_finish>
   1fb40:	mov    %r15,%rdi
   1fb43:	lea    0xee1f(%rip),%rsi        # 2e969 <png_pass_inc.20+0xf6>
   1fb4a:	callq  5230 <png_chunk_benign_error@plt>
   1fb4f:	mov    -0x10(%rbp),%r15
   1fb53:	mov    -0x8(%rbp),%r14
   1fb57:	leaveq 
   1fb58:	retq   
   1fb59:	mov    -0x10(%rbp),%r15
   1fb5d:	mov    -0x8(%rbp),%r14
   1fb61:	leaveq 
   1fb62:	retq   
   1fb63:	movzbl (%rax,%r9,1),%ecx
   1fb68:	test   %cl,%cl
   1fb6a:	je     1fb78 <png_handle_zTXt+0x138>
   1fb6c:	add    $0x1,%r15d
   1fb70:	mov    %r15d,%r9d
   1fb73:	cmp    %r15d,%r14d
   1fb76:	ja     1fb63 <png_handle_zTXt+0x123>
   1fb78:	lea    0xeec8(%rip),%rsi        # 2ea47 <png_pass_inc.20+0x1d4>
   1fb7f:	cmp    $0x4f,%r15d
   1fb83:	jbe    1fba2 <png_handle_zTXt+0x162>
   1fb85:	mov    -0x20(%rbp),%rdi
   1fb89:	test   %rsi,%rsi
   1fb8c:	jne    1fbad <png_handle_zTXt+0x16d>
   1fb8e:	mov    -0x10(%rbp),%r15
   1fb92:	mov    -0x8(%rbp),%r14
   1fb96:	leaveq 
   1fb97:	retq   
   1fb98:	mov    %rdx,%rsi
   1fb9b:	callq  1b270 <png_crc_finish>
   1fba0:	leaveq 
   1fba1:	retq   
   1fba2:	test   %r15d,%r15d
   1fba5:	jne    1fbbc <png_handle_zTXt+0x17c>
   1fba7:	mov    -0x20(%rbp),%rdi
   1fbab:	jmp    1fb89 <png_handle_zTXt+0x149>
   1fbad:	callq  5230 <png_chunk_benign_error@plt>
   1fbb2:	mov    -0x10(%rbp),%r15
   1fbb6:	mov    -0x8(%rbp),%r14
   1fbba:	leaveq 
   1fbbb:	retq   
   1fbbc:	lea    0x3(%r15),%ecx
   1fbc0:	cmp    %ecx,%r14d
   1fbc3:	jae    1fbd2 <png_handle_zTXt+0x192>
   1fbc5:	lea    0xeeb1(%rip),%rsi        # 2ea7d <png_pass_inc.20+0x20a>
   1fbcc:	mov    -0x20(%rbp),%rdi
   1fbd0:	jmp    1fb89 <png_handle_zTXt+0x149>
   1fbd2:	lea    0x1(%r15),%ecx
   1fbd6:	mov    %ecx,%ecx
   1fbd8:	movzbl (%rax,%rcx,1),%eax
   1fbdc:	test   %al,%al
   1fbde:	je     1fbed <png_handle_zTXt+0x1ad>
   1fbe0:	lea    0xf019(%rip),%rsi        # 2ec00 <png_pass_inc.20+0x38d>
   1fbe7:	mov    -0x20(%rbp),%rdi
   1fbeb:	jmp    1fb89 <png_handle_zTXt+0x149>
   1fbed:	movq   $0xffffffffffffffff,-0x68(%rbp)
   1fbf5:	lea    0x2(%r15),%eax
   1fbf9:	lea    -0x68(%rbp),%rcx
   1fbfd:	mov    $0x1,%r8d
   1fc03:	mov    -0x20(%rbp),%r15
   1fc07:	mov    %r15,%rdi
   1fc0a:	mov    %rax,%rdx
   1fc0d:	mov    %r9,-0x28(%rbp)
   1fc11:	mov    %r14,%rsi
   1fc14:	mov    %rax,%r14
   1fc17:	callq  20500 <png_decompress_chunk>
   1fc1c:	cmp    $0x1,%eax
   1fc1f:	je     1fc30 <png_handle_zTXt+0x1f0>
   1fc21:	mov    %r15,%rdi
   1fc24:	mov    0x170(%rdi),%rsi
   1fc2b:	jmpq   1fb89 <png_handle_zTXt+0x149>
   1fc30:	mov    0x458(%r15),%rcx
   1fc37:	test   %rcx,%rcx
   1fc3a:	jne    1fc4b <png_handle_zTXt+0x20b>
   1fc3c:	mov    %r15,%rdi
   1fc3f:	lea    0xefd3(%rip),%rsi        # 2ec19 <png_pass_inc.20+0x3a6>
   1fc46:	jmpq   1fb89 <png_handle_zTXt+0x149>
   1fc4b:	mov    %r14d,%eax
   1fc4e:	add    -0x68(%rbp),%rax
   1fc52:	movb   $0x0,(%rcx,%rax,1)
   1fc56:	movl   $0x0,-0x60(%rbp)
   1fc5d:	mov    %rcx,-0x58(%rbp)
   1fc61:	mov    -0x28(%rbp),%rax
   1fc65:	lea    0x2(%rcx,%rax,1),%rax
   1fc6a:	mov    %rax,-0x50(%rbp)
   1fc6e:	mov    -0x68(%rbp),%rax
   1fc72:	mov    %rax,-0x48(%rbp)
   1fc76:	movq   $0x0,-0x40(%rbp)
   1fc7e:	movq   $0x0,-0x38(%rbp)
   1fc86:	movq   $0x0,-0x30(%rbp)
   1fc8e:	lea    -0x60(%rbp),%rdx
   1fc92:	mov    %r15,%rdi
   1fc95:	mov    $0x1,%ecx
   1fc9a:	mov    -0x18(%rbp),%rsi
   1fc9e:	callq  22de0 <png_set_text_2>
   1fca3:	test   %eax,%eax
   1fca5:	jne    1fcb1 <png_handle_zTXt+0x271>
   1fca7:	mov    %r15,%rdi
   1fcaa:	xor    %esi,%esi
   1fcac:	jmpq   1fb89 <png_handle_zTXt+0x149>
   1fcb1:	mov    %r15,%rdi
   1fcb4:	lea    0xedcc(%rip),%rsi        # 2ea87 <png_pass_inc.20+0x214>
   1fcbb:	jmpq   1fb89 <png_handle_zTXt+0x149>

000000000001fcc0 <png_check_chunk_name>:
   1fcc0:	push   %rbp
   1fcc1:	mov    %rsp,%rbp
   1fcc4:	mov    $0x1,%eax
   1fcc9:	jmp    1fce9 <png_check_chunk_name+0x29>
   1fccb:	movzbl %sil,%ecx
   1fccf:	cmp    $0x40,%ecx
   1fcd2:	jle    1fcf0 <png_check_chunk_name+0x30>
   1fcd4:	cmp    $0x7a,%ecx
   1fcd7:	jg     1fcf0 <png_check_chunk_name+0x30>
   1fcd9:	cmp    $0x5a,%ecx
   1fcdc:	jle    1fce3 <png_check_chunk_name+0x23>
   1fcde:	cmp    $0x60,%ecx
   1fce1:	jle    1fcf0 <png_check_chunk_name+0x30>
   1fce3:	shr    $0x8,%esi
   1fce6:	add    $0x1,%eax
   1fce9:	cmp    $0x4,%eax
   1fcec:	jle    1fccb <png_check_chunk_name+0xb>
   1fcee:	leaveq 
   1fcef:	retq   
   1fcf0:	lea    0xef42(%rip),%rsi        # 2ec39 <png_pass_inc.20+0x3c6>
   1fcf7:	callq  5060 <png_chunk_error@plt>
   1fcfc:	nopl   0x0(%rax)

000000000001fd00 <png_check_chunk_length>:
   1fd00:	push   %rbp
   1fd01:	mov    %rsp,%rbp
   1fd04:	mov    $0x7fffffff,%r9d
   1fd0a:	mov    0x428(%rdi),%rcx
   1fd11:	test   %rcx,%rcx
   1fd14:	jne    1fd2f <png_check_chunk_length+0x2f>
   1fd16:	mov    %r9,%rcx
   1fd19:	mov    0x218(%rdi),%eax
   1fd1f:	cmp    $0x49444154,%eax
   1fd24:	je     1fd3d <png_check_chunk_length+0x3d>
   1fd26:	mov    %esi,%eax
   1fd28:	cmp    %rax,%rcx
   1fd2b:	jb     1fd5d <png_check_chunk_length+0x5d>
   1fd2d:	leaveq 
   1fd2e:	retq   
   1fd2f:	cmp    $0x7ffffffe,%rcx
   1fd36:	jbe    1fd19 <png_check_chunk_length+0x19>
   1fd38:	mov    %r9,%rcx
   1fd3b:	jmp    1fd19 <png_check_chunk_length+0x19>
   1fd3d:	mov    0x1f8(%rdi),%r10d
   1fd44:	movzbl 0x26b(%rdi),%edx
   1fd4b:	movzbl 0x268(%rdi),%eax
   1fd52:	cmp    $0x8,%al
   1fd54:	ja     1fd69 <png_check_chunk_length+0x69>
   1fd56:	mov    $0x1,%eax
   1fd5b:	jmp    1fd6e <png_check_chunk_length+0x6e>
   1fd5d:	lea    0xeee8(%rip),%rsi        # 2ec4c <png_pass_inc.20+0x3d9>
   1fd64:	callq  5060 <png_chunk_error@plt>
   1fd69:	mov    $0x2,%eax
   1fd6e:	movzbl 0x264(%rdi),%r8d
   1fd76:	test   %r8b,%r8b
   1fd79:	jne    1fd80 <png_check_chunk_length+0x80>
   1fd7b:	xor    %r8d,%r8d
   1fd7e:	jmp    1fd86 <png_check_chunk_length+0x86>
   1fd80:	mov    $0x6,%r8d
   1fd86:	imul   %r10d,%edx
   1fd8a:	imul   %edx,%eax
   1fd8d:	lea    0x1(%r8,%rax,1),%r11d
   1fd92:	mov    %r11d,%r8d
   1fd95:	mov    $0xffffffff,%eax
   1fd9a:	xor    %edx,%edx
   1fd9c:	mov    0x1fc(%rdi),%r10d
   1fda3:	div    %r8
   1fda6:	cmp    %r10,%rax
   1fda9:	jae    1fdea <png_check_chunk_length+0xea>
   1fdab:	mov    %r9,%r10
   1fdae:	cmp    $0x7f36,%r11d
   1fdb5:	jbe    1fdbd <png_check_chunk_length+0xbd>
   1fdb7:	mov    $0x7f36,%r8d
   1fdbd:	xor    %edx,%edx
   1fdbf:	mov    %r10,%rax
   1fdc2:	div    %r8
   1fdc5:	lea    (%rax,%rax,4),%rax
   1fdc9:	lea    0xb(%r10,%rax,1),%rax
   1fdce:	cmp    $0x7ffffffe,%rax
   1fdd4:	ja     1fdd9 <png_check_chunk_length+0xd9>
   1fdd6:	mov    %rax,%r9
   1fdd9:	cmp    %r9,%rcx
   1fddc:	jae    1fd26 <png_check_chunk_length+0x26>
   1fde2:	mov    %r9,%rcx
   1fde5:	jmpq   1fd26 <png_check_chunk_length+0x26>
   1fdea:	mov    0x1fc(%rdi),%eax
   1fdf0:	mov    %r8,%r10
   1fdf3:	imul   %rax,%r10
   1fdf7:	jmp    1fdae <png_check_chunk_length+0xae>
   1fdf9:	nopl   0x0(%rax)

000000000001fe00 <png_handle_unknown>:
   1fe00:	push   %rbp
   1fe01:	mov    %rsp,%rbp
   1fe04:	sub    $0x30,%rsp
   1fe08:	mov    %r14,-0x8(%rbp)
   1fe0c:	mov    %r15,-0x10(%rbp)
   1fe10:	mov    %rsi,-0x28(%rbp)
   1fe14:	mov    $0x1,%eax
   1fe19:	mov    %rax,-0x20(%rbp)
   1fe1d:	xor    %eax,%eax
   1fe1f:	mov    %rax,-0x18(%rbp)
   1fe23:	mov    0x3b8(%rdi),%rax
   1fe2a:	test   %rax,%rax
   1fe2d:	jne    1fe38 <png_handle_unknown+0x38>
   1fe2f:	test   %ecx,%ecx
   1fe31:	je     1fe6b <png_handle_unknown+0x6b>
   1fe33:	mov    %rcx,%r15
   1fe36:	jmp    1fe72 <png_handle_unknown+0x72>
   1fe38:	mov    %rdx,%rsi
   1fe3b:	mov    %rcx,%r15
   1fe3e:	mov    %rdi,%r14
   1fe41:	callq  209c0 <png_cache_unknown_chunk>
   1fe46:	test   %eax,%eax
   1fe48:	jne    1fe99 <png_handle_unknown+0x99>
   1fe4a:	mov    $0x1,%r15d
   1fe50:	pushq  -0x18(%rbp)
   1fe53:	popq   -0x20(%rbp)
   1fe56:	cmp    $0x3,%r15d
   1fe5a:	je     1fec2 <png_handle_unknown+0xc2>
   1fe5c:	cmp    $0x2,%r15d
   1fe60:	je     1fedc <png_handle_unknown+0xdc>
   1fe62:	mov    -0x20(%rbp),%r15
   1fe66:	jmpq   1ff1c <png_handle_unknown+0x11c>
   1fe6b:	movslq 0x3c0(%rdi),%r15
   1fe72:	cmp    $0x3,%r15d
   1fe76:	je     1ff61 <png_handle_unknown+0x161>
   1fe7c:	cmp    $0x2,%r15d
   1fe80:	je     1ff4e <png_handle_unknown+0x14e>
   1fe86:	mov    %rdx,%rsi
   1fe89:	mov    %rdi,%r14
   1fe8c:	callq  1b270 <png_crc_finish>
   1fe91:	pushq  -0x18(%rbp)
   1fe94:	popq   -0x20(%rbp)
   1fe97:	jmp    1fe56 <png_handle_unknown+0x56>
   1fe99:	lea    0x430(%r14),%rsi
   1fea0:	mov    %r14,%rdi
   1fea3:	callq  *0x3b8(%r14)
   1feaa:	test   %eax,%eax
   1feac:	js     1ff7b <png_handle_unknown+0x17b>
   1feb2:	test   %eax,%eax
   1feb4:	je     1ff8a <png_handle_unknown+0x18a>
   1feba:	mov    $0x1,%r15d
   1fec0:	jmp    1fe56 <png_handle_unknown+0x56>
   1fec2:	mov    0x424(%r14),%eax
   1fec9:	test   %eax,%eax
   1fecb:	je     1fef2 <png_handle_unknown+0xf2>
   1fecd:	cmp    $0x1,%eax
   1fed0:	jne    1ff9b <png_handle_unknown+0x19b>
   1fed6:	mov    -0x20(%rbp),%r15
   1feda:	jmp    1ff1c <png_handle_unknown+0x11c>
   1fedc:	mov    0x218(%r14),%eax
   1fee3:	and    $0x20000000,%eax
   1fee8:	test   %eax,%eax
   1feea:	jne    1fec2 <png_handle_unknown+0xc2>
   1feec:	mov    -0x20(%rbp),%r15
   1fef0:	jmp    1ff1c <png_handle_unknown+0x11c>
   1fef2:	test   %eax,%eax
   1fef4:	je     1ff00 <png_handle_unknown+0x100>
   1fef6:	add    $0xffffffff,%eax
   1fef9:	mov    %eax,0x424(%r14)
   1ff00:	lea    0x430(%r14),%rdx
   1ff07:	mov    %r14,%rdi
   1ff0a:	mov    $0x1,%r15d
   1ff10:	mov    %r15,%rcx
   1ff13:	mov    -0x28(%rbp),%rsi
   1ff17:	callq  5750 <png_set_unknown_chunks@plt>
   1ff1c:	mov    0x438(%r14),%rsi
   1ff23:	test   %rsi,%rsi
   1ff26:	je     1ff30 <png_handle_unknown+0x130>
   1ff28:	mov    %r14,%rdi
   1ff2b:	callq  5790 <png_free@plt>
   1ff30:	movq   $0x0,0x438(%r14)
   1ff3b:	test   %r15d,%r15d
   1ff3e:	je     1ffc7 <png_handle_unknown+0x1c7>
   1ff44:	mov    -0x10(%rbp),%r15
   1ff48:	mov    -0x8(%rbp),%r14
   1ff4c:	leaveq 
   1ff4d:	retq   
   1ff4e:	mov    0x218(%rdi),%eax
   1ff54:	and    $0x20000000,%eax
   1ff59:	test   %eax,%eax
   1ff5b:	je     1fe86 <png_handle_unknown+0x86>
   1ff61:	mov    %rdx,%rsi
   1ff64:	mov    %rdi,%r14
   1ff67:	callq  209c0 <png_cache_unknown_chunk>
   1ff6c:	test   %eax,%eax
   1ff6e:	je     1ffe1 <png_handle_unknown+0x1e1>
   1ff70:	pushq  -0x18(%rbp)
   1ff73:	popq   -0x20(%rbp)
   1ff76:	jmpq   1fe56 <png_handle_unknown+0x56>
   1ff7b:	mov    %r14,%rdi
   1ff7e:	lea    0xecdf(%rip),%rsi        # 2ec64 <png_pass_inc.20+0x3f1>
   1ff85:	callq  5060 <png_chunk_error@plt>
   1ff8a:	cmp    $0x1,%r15d
   1ff8e:	jle    1fff2 <png_handle_unknown+0x1f2>
   1ff90:	pushq  -0x18(%rbp)
   1ff93:	popq   -0x20(%rbp)
   1ff96:	jmpq   1fe56 <png_handle_unknown+0x56>
   1ff9b:	cmp    $0x2,%eax
   1ff9e:	jne    1fef6 <png_handle_unknown+0xf6>
   1ffa4:	movl   $0x1,0x424(%r14)
   1ffaf:	lea    0xeaaf(%rip),%rsi        # 2ea65 <png_pass_inc.20+0x1f2>
   1ffb6:	mov    %r14,%rdi
   1ffb9:	callq  5230 <png_chunk_benign_error@plt>
   1ffbe:	mov    -0x20(%rbp),%r15
   1ffc2:	jmpq   1ff1c <png_handle_unknown+0x11c>
   1ffc7:	mov    0x218(%r14),%eax
   1ffce:	and    $0x20000000,%eax
   1ffd3:	test   %eax,%eax
   1ffd5:	je     2000f <png_handle_unknown+0x20f>
   1ffd7:	mov    -0x10(%rbp),%r15
   1ffdb:	mov    -0x8(%rbp),%r14
   1ffdf:	leaveq 
   1ffe0:	retq   
   1ffe1:	mov    $0x1,%r15d
   1ffe7:	pushq  -0x18(%rbp)
   1ffea:	popq   -0x20(%rbp)
   1ffed:	jmpq   1fe56 <png_handle_unknown+0x56>
   1fff2:	mov    $0x2,%r15d
   1fff8:	movslq 0x3c0(%r14),%rax
   1ffff:	cmp    $0x1,%eax
   20002:	jle    2001e <png_handle_unknown+0x21e>
   20004:	pushq  -0x18(%rbp)
   20007:	popq   -0x20(%rbp)
   2000a:	jmpq   1fe56 <png_handle_unknown+0x56>
   2000f:	mov    %r14,%rdi
   20012:	lea    0xecc1(%rip),%rsi        # 2ecda <png_pass_inc.20+0x467>
   20019:	callq  5060 <png_chunk_error@plt>
   2001e:	lea    0xec53(%rip),%rsi        # 2ec78 <png_pass_inc.20+0x405>
   20025:	mov    %r14,%rdi
   20028:	callq  56a0 <png_chunk_warning@plt>
   2002d:	lea    0xec5a(%rip),%rsi        # 2ec8e <png_pass_inc.20+0x41b>
   20034:	mov    %r14,%rdi
   20037:	callq  b0f0 <png_app_warning>
   2003c:	pushq  -0x18(%rbp)
   2003f:	popq   -0x20(%rbp)
   20042:	jmpq   1fe56 <png_handle_unknown+0x56>
   20047:	nopw   0x0(%rax,%rax,1)

0000000000020050 <png_get_fixed_point>:
   20050:	push   %rbp
   20051:	mov    %rsp,%rbp
   20054:	movzbl (%rsi),%eax
   20057:	shl    $0x18,%eax
   2005a:	movzbl 0x1(%rsi),%ecx
   2005e:	shl    $0x10,%ecx
   20061:	add    %eax,%ecx
   20063:	movzbl 0x2(%rsi),%eax
   20067:	shl    $0x8,%eax
   2006a:	add    %ecx,%eax
   2006c:	movzbl 0x3(%rsi),%ecx
   20070:	add    %ecx,%eax
   20072:	cmp    $0x7fffffff,%eax
   20077:	ja     2007b <png_get_fixed_point+0x2b>
   20079:	leaveq 
   2007a:	retq   
   2007b:	mov    $0xffffffffffffffff,%rax
   20082:	test   %rdi,%rdi
   20085:	jne    20089 <png_get_fixed_point+0x39>
   20087:	leaveq 
   20088:	retq   
   20089:	lea    0xec63(%rip),%rsi        # 2ecf3 <png_pass_inc.20+0x480>
   20090:	callq  5390 <png_warning@plt>
   20095:	mov    $0xffffffffffffffff,%rax
   2009c:	leaveq 
   2009d:	retq   
   2009e:	xchg   %ax,%ax

00000000000200a0 <png_read_buffer>:
   200a0:	push   %rbp
   200a1:	mov    %rsp,%rbp
   200a4:	sub    $0x20,%rsp
   200a8:	xor    %eax,%eax
   200aa:	mov    0x458(%rdi),%rcx
   200b1:	test   %rcx,%rcx
   200b4:	jne    200bd <png_read_buffer+0x1d>
   200b6:	test   %rax,%rax
   200b9:	je     200ce <png_read_buffer+0x2e>
   200bb:	leaveq 
   200bc:	retq   
   200bd:	mov    0x460(%rdi),%rax
   200c4:	cmp    %rsi,%rax
   200c7:	jb     20108 <png_read_buffer+0x68>
   200c9:	mov    %rcx,%rax
   200cc:	jmp    200b6 <png_read_buffer+0x16>
   200ce:	mov    %rdi,%rcx
   200d1:	mov    %rsi,%rax
   200d4:	mov    %rdi,-0x8(%rbp)
   200d8:	mov    %r14,-0x10(%rbp)
   200dc:	mov    %r15,-0x18(%rbp)
   200e0:	mov    %rcx,%rdi
   200e3:	mov    %rsi,%r14
   200e6:	mov    %rax,%rsi
   200e9:	mov    %rdx,%r15
   200ec:	callq  c940 <png_malloc_base>
   200f1:	test   %rax,%rax
   200f4:	jne    2014b <png_read_buffer+0xab>
   200f6:	cmp    $0x1,%r15d
   200fa:	jle    2017a <png_read_buffer+0xda>
   200fc:	mov    -0x18(%rbp),%r15
   20100:	mov    -0x10(%rbp),%r14
   20104:	xor    %eax,%eax
   20106:	leaveq 
   20107:	retq   
   20108:	movq   $0x0,0x458(%rdi)
   20113:	movq   $0x0,0x460(%rdi)
   2011e:	mov    %rdi,%rax
   20121:	mov    %rdi,-0x10(%rbp)
   20125:	mov    %rsi,-0x18(%rbp)
   20129:	mov    %rdx,-0x8(%rbp)
   2012d:	mov    %rcx,%rsi
   20130:	mov    %rax,%rdi
   20133:	callq  5790 <png_free@plt>
   20138:	xor    %eax,%eax
   2013a:	mov    -0x8(%rbp),%rdx
   2013e:	mov    -0x18(%rbp),%rsi
   20142:	mov    -0x10(%rbp),%rdi
   20146:	jmpq   200b6 <png_read_buffer+0x16>
   2014b:	mov    %rax,%r15
   2014e:	mov    %r15,%rdi
   20151:	mov    %r14,%rdx
   20154:	xor    %esi,%esi
   20156:	callq  5350 <memset@plt>
   2015b:	mov    -0x8(%rbp),%rax
   2015f:	mov    %r15,0x458(%rax)
   20166:	mov    %r14,0x460(%rax)
   2016d:	mov    %r15,%rax
   20170:	mov    -0x18(%rbp),%r15
   20174:	mov    -0x10(%rbp),%r14
   20178:	leaveq 
   20179:	retq   
   2017a:	lea    0xeb97(%rip),%rsi        # 2ed18 <png_pass_inc.20+0x4a5>
   20181:	test   %r15d,%r15d
   20184:	jne    2018f <png_read_buffer+0xef>
   20186:	mov    -0x8(%rbp),%rdi
   2018a:	callq  5060 <png_chunk_error@plt>
   2018f:	mov    -0x8(%rbp),%rdi
   20193:	callq  56a0 <png_chunk_warning@plt>
   20198:	mov    -0x18(%rbp),%r15
   2019c:	mov    -0x10(%rbp),%r14
   201a0:	xor    %eax,%eax
   201a2:	leaveq 
   201a3:	retq   
   201a4:	data16 nopw %cs:0x0(%rax,%rax,1)
   201af:	nop

00000000000201b0 <png_inflate_claim>:
   201b0:	push   %rbp
   201b1:	mov    %rsp,%rbp
   201b4:	sub    $0x60,%rsp
   201b8:	mov    %r14,-0x10(%rbp)
   201bc:	mov    %r15,-0x18(%rbp)
   201c0:	mov    %r13,-0x8(%rbp)
   201c4:	mov    0x138(%rdi),%ecx
   201ca:	test   %ecx,%ecx
   201cc:	jne    201d6 <png_inflate_claim+0x26>
   201ce:	mov    %rdi,%r13
   201d1:	mov    %rsi,%r14
   201d4:	jmp    2022b <png_inflate_claim+0x7b>
   201d6:	mov    %rcx,%rax
   201d9:	shr    $0x18,%eax
   201dc:	mov    %al,-0x58(%rbp)
   201df:	mov    %rcx,%rax
   201e2:	shr    $0x10,%eax
   201e5:	mov    %al,-0x57(%rbp)
   201e8:	mov    %rcx,%rax
   201eb:	shr    $0x8,%eax
   201ee:	mov    %al,-0x56(%rbp)
   201f1:	mov    %cl,-0x55(%rbp)
   201f4:	mov    %rdi,%r13
   201f7:	mov    %rsi,%r14
   201fa:	lea    -0x58(%rbp),%rdi
   201fe:	mov    $0x40,%esi
   20203:	mov    $0x4,%edx
   20208:	lea    0xeb2b(%rip),%rcx        # 2ed3a <png_pass_inc.20+0x4c7>
   2020f:	callq  ad20 <png_safecat>
   20214:	mov    %r13,%rdi
   20217:	lea    -0x58(%rbp),%rsi
   2021b:	callq  56a0 <png_chunk_warning@plt>
   20220:	movl   $0x0,0x138(%r13)
   2022b:	xor    %esi,%esi
   2022d:	mov    0x388(%r13),%eax
   20234:	and    $0xc,%eax
   20237:	cmp    $0xc,%eax
   2023a:	je     20246 <png_inflate_claim+0x96>
   2023c:	movb   $0x1,0x270(%r13)
   20244:	jmp    20253 <png_inflate_claim+0xa3>
   20246:	movb   $0x0,0x270(%r13)
   2024e:	mov    $0xf,%esi
   20253:	lea    0x140(%r13),%r15
   2025a:	movq   $0x0,(%r15)
   20261:	movl   $0x0,0x148(%r13)
   2026c:	movq   $0x0,0x158(%r13)
   20277:	movl   $0x0,0x160(%r13)
   20282:	mov    0x130(%r13),%eax
   20289:	and    $0x2,%eax
   2028c:	test   %eax,%eax
   2028e:	jne    202bd <png_inflate_claim+0x10d>
   20290:	lea    0xeab2(%rip),%rdx        # 2ed49 <png_pass_inc.20+0x4d6>
   20297:	mov    $0x70,%ecx
   2029c:	mov    %r15,%rdi
   2029f:	callq  5770 <inflateInit2_@plt>
   202a4:	test   %eax,%eax
   202a6:	jne    202c5 <png_inflate_claim+0x115>
   202a8:	mov    0x130(%r13),%eax
   202af:	or     $0x2,%eax
   202b2:	mov    %eax,0x130(%r13)
   202b9:	xor    %eax,%eax
   202bb:	jmp    202c5 <png_inflate_claim+0x115>
   202bd:	mov    %r15,%rdi
   202c0:	callq  5180 <inflateReset2@plt>
   202c5:	mov    0x388(%r13),%ecx
   202cc:	and    $0x300,%ecx
   202d2:	cmp    $0x300,%ecx
   202d8:	jne    202e4 <png_inflate_claim+0x134>
   202da:	mov    %r15,%rdi
   202dd:	xor    %esi,%esi
   202df:	callq  5220 <inflateValidate@plt>
   202e4:	test   %eax,%eax
   202e6:	je     20307 <png_inflate_claim+0x157>
   202e8:	mov    %r13,%rdi
   202eb:	mov    %rax,%r13
   202ee:	mov    %r13,%rsi
   202f1:	callq  6910 <png_zstream_error>
   202f6:	mov    %r13,%rax
   202f9:	mov    -0x8(%rbp),%r13
   202fd:	mov    -0x18(%rbp),%r15
   20301:	mov    -0x10(%rbp),%r14
   20305:	leaveq 
   20306:	retq   
   20307:	mov    %r14d,0x138(%r13)
   2030e:	mov    -0x8(%rbp),%r13
   20312:	mov    -0x18(%rbp),%r15
   20316:	mov    -0x10(%rbp),%r14
   2031a:	leaveq 
   2031b:	retq   
   2031c:	nopl   0x0(%rax)

0000000000020320 <png_inflate>:
   20320:	push   %rbp
   20321:	mov    %rsp,%rbp
   20324:	sub    $0x440,%rsp
   2032b:	mov    0x138(%rdi),%eax
   20331:	cmp    %esi,%eax
   20333:	je     2034c <png_inflate+0x2c>
   20335:	lea    0xea14(%rip),%rax        # 2ed50 <png_pass_inc.20+0x4dd>
   2033c:	mov    %rax,0x170(%rdi)
   20343:	mov    $0xfffffffffffffffe,%rax
   2034a:	leaveq 
   2034b:	retq   
   2034c:	mov    0x10(%rbp),%rax
   20350:	mov    %rax,-0x10(%rbp)
   20354:	mov    (%rax),%r11
   20357:	mov    (%r8),%r10d
   2035a:	mov    %rcx,0x140(%rdi)
   20361:	movl   $0x0,0x148(%rdi)
   2036b:	movl   $0x0,0x160(%rdi)
   20375:	lea    -0x438(%rbp),%rcx
   2037c:	xor    %esi,%esi
   2037e:	mov    %r15,-0x38(%rbp)
   20382:	mov    $0x4,%r15d
   20388:	mov    %r14,-0x30(%rbp)
   2038c:	mov    $0x2,%r14d
   20392:	mov    %r13,-0x28(%rbp)
   20396:	mov    $0xffffffff,%eax
   2039b:	mov    %r12,-0x20(%rbp)
   2039f:	mov    $0x400,%r12d
   203a5:	test   %r9,%r9
   203a8:	jne    203cf <png_inflate+0xaf>
   203aa:	mov    %r8,-0x8(%rbp)
   203ae:	mov    %rbx,-0x18(%rbp)
   203b2:	mov    %r10,%rbx
   203b5:	mov    %rcx,%r10
   203b8:	mov    %r12,%rcx
   203bb:	mov    %r11,%r12
   203be:	mov    %r15,%r11
   203c1:	mov    %rdx,%r15
   203c4:	mov    %r14,%rdx
   203c7:	mov    %r9,%r14
   203ca:	mov    %rdi,%r13
   203cd:	jmp    20419 <png_inflate+0xf9>
   203cf:	mov    %r9,0x158(%rdi)
   203d6:	mov    %r8,-0x8(%rbp)
   203da:	mov    %rbx,-0x18(%rbp)
   203de:	mov    %r10,%rbx
   203e1:	mov    %rcx,%r10
   203e4:	mov    %r12,%rcx
   203e7:	mov    %r11,%r12
   203ea:	mov    %r15,%r11
   203ed:	mov    %rdx,%r15
   203f0:	mov    %r14,%rdx
   203f3:	mov    %r9,%r14
   203f6:	mov    %rdi,%r13
   203f9:	jmp    20419 <png_inflate+0xf9>
   203fb:	mov    $0x2,%edx
   20400:	mov    $0x4,%r11d
   20406:	xor    %esi,%esi
   20408:	mov    $0x400,%ecx
   2040d:	lea    -0x438(%rbp),%r10
   20414:	mov    $0xffffffff,%eax
   20419:	add    0x148(%r13),%ebx
   20420:	cmp    $0xfffffffe,%ebx
   20423:	jbe    2042a <png_inflate+0x10a>
   20425:	mov    %rax,%r8
   20428:	jmp    2042d <png_inflate+0x10d>
   2042a:	mov    %rbx,%r8
   2042d:	test   %r14,%r14
   20430:	mov    0x160(%r13),%edi
   20437:	mov    %r8d,0x148(%r13)
   2043e:	jne    2044a <png_inflate+0x12a>
   20440:	mov    %r10,0x158(%r13)
   20447:	mov    %rcx,%rax
   2044a:	add    %rdi,%r12
   2044d:	cmp    %r12,%rax
   20450:	jbe    20455 <png_inflate+0x135>
   20452:	mov    %r12,%rax
   20455:	mov    %eax,0x160(%r13)
   2045c:	mov    %eax,%eax
   2045e:	cmp    %rax,%r12
   20461:	jne    2046f <png_inflate+0x14f>
   20463:	test   %r15d,%r15d
   20466:	jne    204f1 <png_inflate+0x1d1>
   2046c:	mov    %rdx,%rsi
   2046f:	sub    %r8d,%ebx
   20472:	sub    %rax,%r12
   20475:	mov    %r13,%rdi
   20478:	callq  1ca80 <png_zlib_inflate>
   2047d:	test   %eax,%eax
   2047f:	je     203fb <png_inflate+0xdb>
   20485:	test   %r14,%r14
   20488:	jne    20495 <png_inflate+0x175>
   2048a:	movq   $0x0,0x158(%r13)
   20495:	mov    0x148(%r13),%esi
   2049c:	mov    0x160(%r13),%ecx
   204a3:	lea    (%r12,%rcx,1),%rdx
   204a7:	test   %rdx,%rdx
   204aa:	je     204b9 <png_inflate+0x199>
   204ac:	mov    -0x10(%rbp),%rdi
   204b0:	mov    (%rdi),%rcx
   204b3:	sub    %rdx,%rcx
   204b6:	mov    %rcx,(%rdi)
   204b9:	lea    (%rbx,%rsi,1),%edx
   204bc:	test   %edx,%edx
   204be:	je     204ca <png_inflate+0x1aa>
   204c0:	mov    -0x8(%rbp),%rsi
   204c4:	mov    (%rsi),%ecx
   204c6:	sub    %edx,%ecx
   204c8:	mov    %ecx,(%rsi)
   204ca:	mov    %r13,%rdi
   204cd:	mov    %rax,%r15
   204d0:	mov    %r15,%rsi
   204d3:	callq  6910 <png_zstream_error>
   204d8:	mov    %r15,%rax
   204db:	mov    -0x18(%rbp),%rbx
   204df:	mov    -0x20(%rbp),%r12
   204e3:	mov    -0x28(%rbp),%r13
   204e7:	mov    -0x30(%rbp),%r14
   204eb:	mov    -0x38(%rbp),%r15
   204ef:	leaveq 
   204f0:	retq   
   204f1:	mov    %r11,%rsi
   204f4:	jmpq   2046f <png_inflate+0x14f>
   204f9:	nopl   0x0(%rax)

0000000000020500 <png_decompress_chunk>:
   20500:	push   %rbp
   20501:	mov    %rsp,%rbp
   20504:	sub    $0x60,%rsp
   20508:	mov    $0xffffffffffffffff,%rax
   2050f:	mov    0x428(%rdi),%r9
   20516:	test   %r9,%r9
   20519:	jne    20557 <png_decompress_chunk+0x57>
   2051b:	mov    $0x1,%r9d
   20521:	mov    %r9,-0x20(%rbp)
   20525:	xor    %r10d,%r10d
   20528:	mov    %r10,-0x28(%rbp)
   2052c:	test   %r8d,%r8d
   2052f:	je     20534 <png_decompress_chunk+0x34>
   20531:	mov    %r9,%r10
   20534:	mov    $0xfffffffffffffffc,%r11
   2053b:	add    %edx,%r10d
   2053e:	mov    %r10d,%r10d
   20541:	cmp    %rax,%r10
   20544:	jbe    20562 <png_decompress_chunk+0x62>
   20546:	mov    %r11,%rsi
   20549:	callq  6910 <png_zstream_error>
   2054e:	mov    $0xfffffffffffffffc,%rax
   20555:	leaveq 
   20556:	retq   
   20557:	cmp    $0xfffffffffffffffe,%r9
   2055b:	ja     2051b <png_decompress_chunk+0x1b>
   2055d:	mov    %r9,%rax
   20560:	jmp    2051b <png_decompress_chunk+0x1b>
   20562:	test   %r8d,%r8d
   20565:	jne    2056a <png_decompress_chunk+0x6a>
   20567:	xor    %r9d,%r9d
   2056a:	add    %edx,%r9d
   2056d:	mov    %r9d,%r9d
   20570:	sub    %r9,%rax
   20573:	mov    (%rcx),%r9
   20576:	cmp    %rax,%r9
   20579:	jbe    2057e <png_decompress_chunk+0x7e>
   2057b:	mov    %rax,(%rcx)
   2057e:	mov    0x218(%rdi),%eax
   20584:	mov    %rdi,%r9
   20587:	mov    %r14,-0x48(%rbp)
   2058b:	mov    %r15,-0x50(%rbp)
   2058f:	mov    %rdi,-0x40(%rbp)
   20593:	mov    %rcx,-0x38(%rbp)
   20597:	mov    %r8,-0x30(%rbp)
   2059b:	mov    %r9,%rdi
   2059e:	mov    %rsi,%r14
   205a1:	mov    %rax,%rsi
   205a4:	mov    %rdx,%r15
   205a7:	callq  201b0 <png_inflate_claim>
   205ac:	test   %eax,%eax
   205ae:	je     205c6 <png_decompress_chunk+0xc6>
   205b0:	cmp    $0x1,%eax
   205b3:	jne    2061f <png_decompress_chunk+0x11f>
   205b5:	mov    $0xfffffffffffffff9,%rax
   205bc:	mov    -0x50(%rbp),%r15
   205c0:	mov    -0x48(%rbp),%r14
   205c4:	leaveq 
   205c5:	retq   
   205c6:	sub    %r15d,%r14d
   205c9:	mov    %r14,-0x8(%rbp)
   205cd:	mov    %r14d,-0x54(%rbp)
   205d1:	mov    %r15d,%ecx
   205d4:	mov    %rcx,-0x18(%rbp)
   205d8:	mov    -0x40(%rbp),%r14
   205dc:	add    0x458(%r14),%rcx
   205e3:	mov    0x218(%r14),%esi
   205ea:	mov    -0x38(%rbp),%rax
   205ee:	mov    %rax,(%rsp)
   205f2:	lea    -0x54(%rbp),%r8
   205f6:	mov    %r14,%rdi
   205f9:	mov    $0x1,%edx
   205fe:	xor    %r9d,%r9d
   20601:	mov    %r15,-0x40(%rbp)
   20605:	mov    %rax,%r15
   20608:	callq  20320 <png_inflate>
   2060d:	cmp    $0x1,%eax
   20610:	je     20629 <png_decompress_chunk+0x129>
   20612:	test   %eax,%eax
   20614:	jne    2064d <png_decompress_chunk+0x14d>
   20616:	mov    $0xfffffffffffffff9,%rax
   2061d:	jmp    2064d <png_decompress_chunk+0x14d>
   2061f:	mov    -0x50(%rbp),%r15
   20623:	mov    -0x48(%rbp),%r14
   20627:	leaveq 
   20628:	retq   
   20629:	lea    0x140(%r14),%rdi
   20630:	callq  57f0 <inflateReset@plt>
   20635:	test   %eax,%eax
   20637:	je     20662 <png_decompress_chunk+0x162>
   20639:	mov    %r14,%rdi
   2063c:	mov    $0x1,%esi
   20641:	callq  6910 <png_zstream_error>
   20646:	mov    $0xfffffffffffffff9,%rax
   2064d:	movl   $0x0,0x138(%r14)
   20658:	mov    -0x50(%rbp),%r15
   2065c:	mov    -0x48(%rbp),%r14
   20660:	leaveq 
   20661:	retq   
   20662:	mov    -0x30(%rbp),%rax
   20666:	test   %eax,%eax
   20668:	mov    (%r15),%rax
   2066b:	mov    %rax,-0x10(%rbp)
   2066f:	je     20677 <png_decompress_chunk+0x177>
   20671:	pushq  -0x20(%rbp)
   20674:	popq   -0x28(%rbp)
   20677:	mov    -0x40(%rbp),%rcx
   2067b:	mov    %ecx,%ecx
   2067d:	mov    %rcx,-0x20(%rbp)
   20681:	add    %rcx,%rax
   20684:	mov    -0x28(%rbp),%rcx
   20688:	lea    (%rcx,%rax,1),%r15
   2068c:	mov    %r14,%rdi
   2068f:	mov    %r15,%rsi
   20692:	callq  c940 <png_malloc_base>
   20697:	test   %rax,%rax
   2069a:	jne    206b3 <png_decompress_chunk+0x1b3>
   2069c:	mov    %r14,%rdi
   2069f:	mov    $0xfffffffffffffffc,%r15
   206a6:	mov    %r15,%rsi
   206a9:	callq  6910 <png_zstream_error>
   206ae:	mov    %r15,%rax
   206b1:	jmp    2064d <png_decompress_chunk+0x14d>
   206b3:	mov    %rax,%rdi
   206b6:	mov    %r15,%rdx
   206b9:	mov    %r15,-0x28(%rbp)
   206bd:	mov    %rax,%r15
   206c0:	xor    %esi,%esi
   206c2:	callq  5350 <memset@plt>
   206c7:	mov    -0x18(%rbp),%rax
   206cb:	mov    %rax,%rcx
   206ce:	add    0x458(%r14),%rcx
   206d5:	lea    (%rax,%r15,1),%r9
   206d9:	mov    0x218(%r14),%esi
   206e0:	mov    -0x38(%rbp),%rax
   206e4:	mov    %rax,(%rsp)
   206e8:	mov    %r14,%rdi
   206eb:	mov    $0x1,%edx
   206f0:	mov    %r13,-0x38(%rbp)
   206f4:	mov    %rax,%r13
   206f7:	lea    -0x54(%rbp),%r8
   206fb:	callq  20320 <png_inflate>
   20700:	cmp    $0x1,%eax
   20703:	je     20712 <png_decompress_chunk+0x212>
   20705:	test   %eax,%eax
   20707:	jne    20758 <png_decompress_chunk+0x258>
   20709:	mov    $0xfffffffffffffff9,%rax
   20710:	jmp    20758 <png_decompress_chunk+0x258>
   20712:	mov    0x0(%r13),%rax
   20716:	mov    -0x10(%rbp),%rcx
   2071a:	cmp    %rax,%rcx
   2071d:	je     20778 <png_decompress_chunk+0x278>
   2071f:	mov    $0xfffffffffffffff9,%rax
   20726:	jmp    20758 <png_decompress_chunk+0x258>
   20728:	mov    %r15,%r13
   2072b:	mov    0x458(%r14),%rsi
   20732:	mov    %r13,%rdi
   20735:	callq  54c0 <memcpy@plt>
   2073a:	mov    0x458(%r14),%r15
   20741:	mov    %r13,0x458(%r14)
   20748:	mov    -0x28(%rbp),%rax
   2074c:	mov    %rax,0x460(%r14)
   20753:	mov    $0x1,%eax
   20758:	mov    %r15,%rsi
   2075b:	mov    %rax,%r15
   2075e:	mov    %r14,%rdi
   20761:	callq  5790 <png_free@plt>
   20766:	cmp    $0x1,%r15d
   2076a:	je     20786 <png_decompress_chunk+0x286>
   2076c:	mov    %r15,%rax
   2076f:	mov    -0x38(%rbp),%r13
   20773:	jmpq   2064d <png_decompress_chunk+0x14d>
   20778:	mov    -0x30(%rbp),%rcx
   2077c:	test   %ecx,%ecx
   2077e:	jne    2079d <png_decompress_chunk+0x29d>
   20780:	mov    -0x20(%rbp),%rdx
   20784:	jmp    207a9 <png_decompress_chunk+0x2a9>
   20786:	mov    -0x8(%rbp),%rax
   2078a:	cmp    -0x54(%rbp),%eax
   2078d:	jne    207ba <png_decompress_chunk+0x2ba>
   2078f:	mov    -0x38(%rbp),%r13
   20793:	mov    $0x1,%eax
   20798:	jmpq   2064d <png_decompress_chunk+0x14d>
   2079d:	mov    -0x20(%rbp),%rdx
   207a1:	add    %rdx,%rax
   207a4:	movb   $0x0,(%r15,%rax,1)
   207a9:	mov    -0x40(%rbp),%rax
   207ad:	test   %eax,%eax
   207af:	jne    20728 <png_decompress_chunk+0x228>
   207b5:	mov    %r15,%r13
   207b8:	jmp    2073a <png_decompress_chunk+0x23a>
   207ba:	lea    0xe259(%rip),%rsi        # 2ea1a <png_pass_inc.20+0x1a7>
   207c1:	mov    %r14,%rdi
   207c4:	callq  5230 <png_chunk_benign_error@plt>
   207c9:	mov    -0x38(%rbp),%r13
   207cd:	mov    $0x1,%eax
   207d2:	jmpq   2064d <png_decompress_chunk+0x14d>
   207d7:	nopw   0x0(%rax,%rax,1)

00000000000207e0 <png_inflate_read>:
   207e0:	push   %rbp
   207e1:	mov    %rsp,%rbp
   207e4:	sub    $0x40,%rsp
   207e8:	mov    %rsi,-0x38(%rbp)
   207ec:	mov    0x218(%rdi),%eax
   207f2:	cmp    0x138(%rdi),%eax
   207f8:	je     20811 <png_inflate_read+0x31>
   207fa:	lea    0xe54f(%rip),%rax        # 2ed50 <png_pass_inc.20+0x4dd>
   20801:	mov    %rax,0x170(%rdi)
   20808:	mov    $0xfffffffffffffffe,%rax
   2080f:	leaveq 
   20810:	retq   
   20811:	mov    %r8,0x158(%rdi)
   20818:	movl   $0x0,0x160(%rdi)
   20822:	movslq 0x10(%rbp),%r10
   20826:	mov    %r10,-0x30(%rbp)
   2082a:	xor    %eax,%eax
   2082c:	mov    $0x4,%r8d
   20832:	mov    $0x2,%r11d
   20838:	mov    %r15,-0x28(%rbp)
   2083c:	mov    $0xffffffff,%r15d
   20842:	mov    %r14,-0x20(%rbp)
   20846:	mov    $0xfffffffe,%r14d
   2084c:	mov    %rbx,-0x8(%rbp)
   20850:	mov    %r12,-0x10(%rbp)
   20854:	mov    %r13,-0x18(%rbp)
   20858:	mov    %rdx,%rbx
   2085b:	mov    %rdi,%r12
   2085e:	mov    %r9,%r13
   20861:	mov    %r15,%rdx
   20864:	mov    %r10,%r15
   20867:	mov    %r14,%r10
   2086a:	mov    %rcx,%r14
   2086d:	mov    %rsi,%rcx
   20870:	mov    %rax,%rsi
   20873:	mov    %rdx,%rax
   20876:	jmpq   20939 <png_inflate_read+0x159>
   2087b:	mov    (%r14),%edx
   2087e:	cmp    %ebx,%edx
   20880:	jae    20885 <png_inflate_read+0xa5>
   20882:	mov    %rdx,%rbx
   20885:	sub    %ebx,%edx
   20887:	mov    %edx,(%r14)
   2088a:	test   %ebx,%ebx
   2088c:	je     208bf <png_inflate_read+0xdf>
   2088e:	mov    %rcx,%r15
   20891:	mov    %r12,%rdi
   20894:	mov    %r15,%rsi
   20897:	mov    %rbx,%rdx
   2089a:	callq  1b210 <png_crc_read>
   2089f:	mov    %r15,%rcx
   208a2:	mov    $0x2,%r11d
   208a8:	mov    $0x4,%r8d
   208ae:	xor    %esi,%esi
   208b0:	mov    $0xffffffff,%eax
   208b5:	mov    $0xfffffffe,%r10d
   208bb:	mov    -0x30(%rbp),%r15
   208bf:	mov    %rcx,0x140(%r12)
   208c7:	mov    %ebx,0x148(%r12)
   208cf:	mov    0x160(%r12),%ecx
   208d7:	test   %ecx,%ecx
   208d9:	jne    208f8 <png_inflate_read+0x118>
   208db:	mov    0x0(%r13),%rcx
   208df:	cmp    %r10,%rcx
   208e2:	ja     208e7 <png_inflate_read+0x107>
   208e4:	mov    %rcx,%rax
   208e7:	mov    %eax,%edx
   208e9:	sub    %rdx,%rcx
   208ec:	mov    %rcx,0x0(%r13)
   208f0:	mov    %eax,0x160(%r12)
   208f8:	mov    (%r14),%eax
   208fb:	test   %eax,%eax
   208fd:	jne    20907 <png_inflate_read+0x127>
   208ff:	test   %r15d,%r15d
   20902:	jne    2094b <png_inflate_read+0x16b>
   20904:	mov    %r11,%rsi
   20907:	mov    %r12,%rdi
   2090a:	callq  1ca80 <png_zlib_inflate>
   2090f:	test   %eax,%eax
   20911:	jne    20950 <png_inflate_read+0x170>
   20913:	mov    0x0(%r13),%rcx
   20917:	test   %rcx,%rcx
   2091a:	je     20991 <png_inflate_read+0x1b1>
   2091c:	mov    -0x38(%rbp),%rcx
   20920:	mov    $0x2,%r11d
   20926:	mov    $0x4,%r8d
   2092c:	xor    %esi,%esi
   2092e:	mov    $0xffffffff,%eax
   20933:	mov    $0xfffffffe,%r10d
   20939:	mov    0x148(%r12),%edx
   20941:	test   %edx,%edx
   20943:	je     2087b <png_inflate_read+0x9b>
   20949:	jmp    208cf <png_inflate_read+0xef>
   2094b:	mov    %r8,%rsi
   2094e:	jmp    20907 <png_inflate_read+0x127>
   20950:	mov    0x160(%r12),%ecx
   20958:	add    0x0(%r13),%rcx
   2095c:	mov    %rcx,0x0(%r13)
   20960:	mov    %r12,%rdi
   20963:	mov    %rax,%r15
   20966:	movl   $0x0,0x160(%rdi)
   20970:	mov    %r15,%rsi
   20973:	callq  6910 <png_zstream_error>
   20978:	mov    %r15,%rax
   2097b:	mov    -0x18(%rbp),%r13
   2097f:	mov    -0x10(%rbp),%r12
   20983:	mov    -0x8(%rbp),%rbx
   20987:	mov    -0x20(%rbp),%r14
   2098b:	mov    -0x28(%rbp),%r15
   2098f:	leaveq 
   20990:	retq   
   20991:	mov    0x160(%r12),%ecx
   20999:	test   %ecx,%ecx
   2099b:	je     20950 <png_inflate_read+0x170>
   2099d:	mov    -0x38(%rbp),%rcx
   209a1:	mov    $0x2,%r11d
   209a7:	mov    $0x4,%r8d
   209ad:	xor    %esi,%esi
   209af:	mov    $0xffffffff,%eax
   209b4:	mov    $0xfffffffe,%r10d
   209ba:	jmpq   20939 <png_inflate_read+0x159>
   209bf:	nop

00000000000209c0 <png_cache_unknown_chunk>:
   209c0:	push   %rbp
   209c1:	mov    %rsp,%rbp
   209c4:	sub    $0x10,%rsp
   209c8:	mov    %r15,-0x10(%rbp)
   209cc:	mov    0x438(%rdi),%rax
   209d3:	test   %rax,%rax
   209d6:	jne    209e0 <png_cache_unknown_chunk+0x20>
   209d8:	mov    %r15,%rcx
   209db:	mov    %rdi,%r15
   209de:	jmp    20a0e <png_cache_unknown_chunk+0x4e>
   209e0:	mov    %rdi,%rcx
   209e3:	mov    %r14,-0x8(%rbp)
   209e7:	mov    %rsi,%r14
   209ea:	mov    %rax,%rsi
   209ed:	mov    %rdi,%r15
   209f0:	mov    %rcx,%rdi
   209f3:	callq  5790 <png_free@plt>
   209f8:	movq   $0x0,0x438(%r15)
   20a03:	mov    %r14,%rsi
   20a06:	mov    -0x10(%rbp),%rcx
   20a0a:	mov    -0x8(%rbp),%r14
   20a0e:	mov    $0xffffffffffffffff,%rax
   20a15:	mov    0x428(%r15),%rdx
   20a1c:	test   %rdx,%rdx
   20a1f:	jne    20a4a <png_cache_unknown_chunk+0x8a>
   20a21:	mov    %esi,%edx
   20a23:	cmp    %rdx,%rax
   20a26:	jae    20a55 <png_cache_unknown_chunk+0x95>
   20a28:	xor    %eax,%eax
   20a2a:	mov    0x438(%r15),%rdx
   20a31:	test   %rdx,%rdx
   20a34:	je     20ad5 <png_cache_unknown_chunk+0x115>
   20a3a:	test   %esi,%esi
   20a3c:	jne    20afc <png_cache_unknown_chunk+0x13c>
   20a42:	mov    %rax,%rsi
   20a45:	jmpq   20b13 <png_cache_unknown_chunk+0x153>
   20a4a:	cmp    $0xfffffffffffffffe,%rdx
   20a4e:	ja     20a21 <png_cache_unknown_chunk+0x61>
   20a50:	mov    %rdx,%rax
   20a53:	jmp    20a21 <png_cache_unknown_chunk+0x61>
   20a55:	mov    0x218(%r15),%eax
   20a5c:	mov    %rax,%rdi
   20a5f:	shr    $0x18,%edi
   20a62:	mov    %dil,0x430(%r15)
   20a69:	mov    %rax,%rdi
   20a6c:	shr    $0x10,%edi
   20a6f:	mov    %dil,0x431(%r15)
   20a76:	mov    %rax,%rdi
   20a79:	shr    $0x8,%edi
   20a7c:	mov    %dil,0x432(%r15)
   20a83:	mov    %al,0x433(%r15)
   20a8a:	movb   $0x0,0x434(%r15)
   20a92:	mov    %rdx,0x440(%r15)
   20a99:	movzbl 0x12c(%r15),%eax
   20aa1:	mov    %al,0x448(%r15)
   20aa8:	test   %esi,%esi
   20aaa:	je     20b25 <png_cache_unknown_chunk+0x165>
   20aac:	mov    %r15,%rdi
   20aaf:	mov    %r14,-0x8(%rbp)
   20ab3:	mov    %rsi,%r14
   20ab6:	mov    %rdx,%rsi
   20ab9:	callq  5150 <png_malloc_warn@plt>
   20abe:	mov    %rax,0x438(%r15)
   20ac5:	mov    %r14,%rsi
   20ac8:	mov    -0x10(%rbp),%rcx
   20acc:	mov    -0x8(%rbp),%r14
   20ad0:	jmpq   20a28 <png_cache_unknown_chunk+0x68>
   20ad5:	test   %esi,%esi
   20ad7:	je     20a3a <png_cache_unknown_chunk+0x7a>
   20add:	mov    %r15,%rdi
   20ae0:	callq  1b270 <png_crc_finish>
   20ae5:	mov    %r15,%rdi
   20ae8:	lea    0xe273(%rip),%rsi        # 2ed62 <png_pass_inc.20+0x4ef>
   20aef:	callq  5230 <png_chunk_benign_error@plt>
   20af4:	xor    %eax,%eax
   20af6:	mov    -0x10(%rbp),%r15
   20afa:	leaveq 
   20afb:	retq   
   20afc:	mov    %rsi,%rax
   20aff:	mov    %rdx,%rsi
   20b02:	mov    %rax,%rdx
   20b05:	mov    %r15,%rdi
   20b08:	callq  1b210 <png_crc_read>
   20b0d:	xor    %esi,%esi
   20b0f:	mov    -0x10(%rbp),%rcx
   20b13:	mov    %r15,%rdi
   20b16:	mov    %rcx,%r15
   20b19:	callq  1b270 <png_crc_finish>
   20b1e:	mov    $0x1,%eax
   20b23:	leaveq 
   20b24:	retq   
   20b25:	movq   $0x0,0x438(%r15)
   20b30:	jmpq   20a28 <png_cache_unknown_chunk+0x68>
   20b35:	data16 nopw %cs:0x0(%rax,%rax,1)

0000000000020b40 <png_read_filter_row_sub>:
   20b40:	push   %rbp
   20b41:	mov    %rsp,%rbp
   20b44:	mov    0x8(%rdi),%rdx
   20b48:	movzbl 0x13(%rdi),%eax
   20b4c:	add    $0x7,%eax
   20b4f:	shr    $0x3,%eax
   20b52:	mov    %eax,%r8d
   20b55:	lea    (%r8,%rsi,1),%rax
   20b59:	mov    %r8,%rcx
   20b5c:	jmp    20b77 <png_read_filter_row_sub+0x37>
   20b5e:	mov    %rax,%rsi
   20b61:	sub    %r8,%rsi
   20b64:	movzbl (%rsi),%esi
   20b67:	movzbl (%rax),%edi
   20b6a:	add    %edi,%esi
   20b6c:	mov    %sil,(%rax)
   20b6f:	add    $0x1,%rcx
   20b73:	add    $0x1,%rax
   20b77:	cmp    %rdx,%rcx
   20b7a:	jb     20b5e <png_read_filter_row_sub+0x1e>
   20b7c:	leaveq 
   20b7d:	retq   
   20b7e:	xchg   %ax,%ax

0000000000020b80 <png_read_filter_row_up>:
   20b80:	push   %rbp
   20b81:	mov    %rsp,%rbp
   20b84:	mov    0x8(%rdi),%r8
   20b88:	xor    %eax,%eax
   20b8a:	jmp    20ba2 <png_read_filter_row_up+0x22>
   20b8c:	movzbl (%rdx),%ecx
   20b8f:	movzbl (%rsi),%edi
   20b92:	add    %edi,%ecx
   20b94:	mov    %cl,(%rsi)
   20b96:	add    $0x1,%rax
   20b9a:	add    $0x1,%rdx
   20b9e:	add    $0x1,%rsi
   20ba2:	cmp    %r8,%rax
   20ba5:	jb     20b8c <png_read_filter_row_up+0xc>
   20ba7:	leaveq 
   20ba8:	retq   
   20ba9:	nopl   0x0(%rax)

0000000000020bb0 <png_read_filter_row_avg>:
   20bb0:	push   %rbp
   20bb1:	mov    %rsp,%rbp
   20bb4:	mov    0x8(%rdi),%r8
   20bb8:	movzbl 0x13(%rdi),%eax
   20bbc:	lea    0x7(%rax),%r9d
   20bc0:	shr    $0x3,%r9d
   20bc4:	mov    %r9d,%r11d
   20bc7:	xor    %eax,%eax
   20bc9:	mov    %rax,%rdi
   20bcc:	jmp    20be8 <png_read_filter_row_avg+0x38>
   20bce:	movzbl (%rdx),%ecx
   20bd1:	shr    %ecx
   20bd3:	movzbl (%rsi),%r10d
   20bd7:	add    %r10d,%ecx
   20bda:	mov    %cl,(%rsi)
   20bdc:	add    $0x1,%rdx
   20be0:	add    $0x1,%rsi
   20be4:	add    $0x1,%rdi
   20be8:	cmp    %r11,%rdi
   20beb:	jb     20bce <png_read_filter_row_avg+0x1e>
   20bed:	sub    %r11,%r8
   20bf0:	mov    %r9d,%r9d
   20bf3:	jmp    20c18 <png_read_filter_row_avg+0x68>
   20bf5:	mov    %rsi,%rcx
   20bf8:	sub    %r9,%rcx
   20bfb:	movzbl (%rcx),%edi
   20bfe:	movzbl (%rdx),%ecx
   20c01:	add    %edi,%ecx
   20c03:	shr    %ecx
   20c05:	movzbl (%rsi),%edi
   20c08:	add    %edi,%ecx
   20c0a:	mov    %cl,(%rsi)
   20c0c:	add    $0x1,%rax
   20c10:	add    $0x1,%rsi
   20c14:	add    $0x1,%rdx
   20c18:	cmp    %r8,%rax
   20c1b:	jb     20bf5 <png_read_filter_row_avg+0x45>
   20c1d:	leaveq 
   20c1e:	retq   
   20c1f:	nop

0000000000020c20 <png_read_filter_row_paeth_1byte_pixel>:
   20c20:	push   %rbp
   20c21:	mov    %rsp,%rbp
   20c24:	sub    $0x20,%rsp
   20c28:	mov    %r13,-0x8(%rbp)
   20c2c:	mov    %r14,-0x10(%rbp)
   20c30:	mov    %r15,-0x18(%rbp)
   20c34:	mov    %rsi,%r15
   20c37:	add    0x8(%rdi),%r15
   20c3b:	movzbl (%rsi),%eax
   20c3e:	movzbl (%rdx),%r9d
   20c42:	lea    (%rax,%r9,1),%edi
   20c46:	mov    %dil,(%rsi)
   20c49:	lea    0x1(%rsi),%rax
   20c4d:	lea    0x1(%rdx),%rcx
   20c51:	jmp    20c88 <png_read_filter_row_paeth_1byte_pixel+0x68>
   20c53:	mov    %rdi,%r14
   20c56:	add    %r10d,%esi
   20c59:	test   %esi,%esi
   20c5b:	jns    20c61 <png_read_filter_row_paeth_1byte_pixel+0x41>
   20c5d:	lea    (%rdi,%r11,1),%esi
   20c61:	cmp    %r8d,%r14d
   20c64:	jge    20c6c <png_read_filter_row_paeth_1byte_pixel+0x4c>
   20c66:	mov    %r14,%r8
   20c69:	mov    %r13,%rdx
   20c6c:	cmp    %esi,%r8d
   20c6f:	jle    20c74 <png_read_filter_row_paeth_1byte_pixel+0x54>
   20c71:	mov    %r9,%rdx
   20c74:	movzbl (%rax),%esi
   20c77:	lea    (%rdx,%rsi,1),%edi
   20c7a:	mov    %dil,(%rax)
   20c7d:	add    $0x1,%rax
   20c81:	add    $0x1,%rcx
   20c85:	mov    %r13,%r9
   20c88:	cmp    %r15,%rax
   20c8b:	jb     20c9b <png_read_filter_row_paeth_1byte_pixel+0x7b>
   20c8d:	mov    -0x18(%rbp),%r15
   20c91:	mov    -0x10(%rbp),%r14
   20c95:	mov    -0x8(%rbp),%r13
   20c99:	leaveq 
   20c9a:	retq   
   20c9b:	movzbl (%rcx),%r13d
   20c9f:	mov    %r9,%r11
   20ca2:	sub    %r13d,%r11d
   20ca5:	mov    %r13,%r10
   20ca8:	sub    %r9d,%r10d
   20cab:	test   %r10d,%r10d
   20cae:	js     20cb5 <png_read_filter_row_paeth_1byte_pixel+0x95>
   20cb0:	mov    %r10,%r8
   20cb3:	jmp    20cb8 <png_read_filter_row_paeth_1byte_pixel+0x98>
   20cb5:	mov    %r11,%r8
   20cb8:	movzbl %dil,%edx
   20cbc:	mov    %r9,%rdi
   20cbf:	sub    %edx,%edi
   20cc1:	mov    %rdx,%rsi
   20cc4:	sub    %r9d,%esi
   20cc7:	test   %esi,%esi
   20cc9:	js     20c53 <png_read_filter_row_paeth_1byte_pixel+0x33>
   20ccb:	mov    %rsi,%r14
   20cce:	jmp    20c56 <png_read_filter_row_paeth_1byte_pixel+0x36>

0000000000020cd0 <png_read_filter_row_paeth_multibyte_pixel>:
   20cd0:	push   %rbp
   20cd1:	mov    %rsp,%rbp
   20cd4:	sub    $0x20,%rsp
   20cd8:	movzbl 0x13(%rdi),%eax
   20cdc:	add    $0x7,%eax
   20cdf:	shr    $0x3,%eax
   20ce2:	mov    %eax,%r9d
   20ce5:	lea    (%r9,%rsi,1),%rcx
   20ce9:	jmp    20cff <png_read_filter_row_paeth_multibyte_pixel+0x2f>
   20ceb:	movzbl (%rdx),%r8d
   20cef:	movzbl (%rsi),%eax
   20cf2:	add    %r8d,%eax
   20cf5:	mov    %al,(%rsi)
   20cf7:	add    $0x1,%rdx
   20cfb:	add    $0x1,%rsi
   20cff:	cmp    %rcx,%rsi
   20d02:	jb     20ceb <png_read_filter_row_paeth_multibyte_pixel+0x1b>
   20d04:	mov    0x8(%rdi),%rax
   20d08:	sub    %r9,%rax
   20d0b:	lea    (%rcx,%rax,1),%r8
   20d0f:	mov    %r12,-0x8(%rbp)
   20d13:	mov    %r13,-0x10(%rbp)
   20d17:	mov    %r14,-0x18(%rbp)
   20d1b:	mov    %r15,-0x20(%rbp)
   20d1f:	jmp    20d50 <png_read_filter_row_paeth_multibyte_pixel+0x80>
   20d21:	mov    %r11,%r14
   20d24:	add    %r10d,%ecx
   20d27:	test   %ecx,%ecx
   20d29:	jns    20d2f <png_read_filter_row_paeth_multibyte_pixel+0x5f>
   20d2b:	lea    (%r11,%r12,1),%ecx
   20d2f:	cmp    %edi,%r14d
   20d32:	jge    20d3a <png_read_filter_row_paeth_multibyte_pixel+0x6a>
   20d34:	mov    %r13,%rax
   20d37:	mov    %r14,%rdi
   20d3a:	cmp    %ecx,%edi
   20d3c:	jle    20d41 <png_read_filter_row_paeth_multibyte_pixel+0x71>
   20d3e:	mov    %r15,%rax
   20d41:	movzbl (%rsi),%ecx
   20d44:	add    %ecx,%eax
   20d46:	mov    %al,(%rsi)
   20d48:	add    $0x1,%rsi
   20d4c:	add    $0x1,%rdx
   20d50:	cmp    %r8,%rsi
   20d53:	jb     20d67 <png_read_filter_row_paeth_multibyte_pixel+0x97>
   20d55:	mov    -0x20(%rbp),%r15
   20d59:	mov    -0x18(%rbp),%r14
   20d5d:	mov    -0x10(%rbp),%r13
   20d61:	mov    -0x8(%rbp),%r12
   20d65:	leaveq 
   20d66:	retq   
   20d67:	mov    %rsi,%rax
   20d6a:	sub    %r9,%rax
   20d6d:	movzbl (%rax),%eax
   20d70:	mov    %rdx,%rcx
   20d73:	sub    %r9,%rcx
   20d76:	movzbl (%rcx),%r15d
   20d7a:	movzbl (%rdx),%r13d
   20d7e:	mov    %r15,%r12
   20d81:	sub    %r13d,%r12d
   20d84:	mov    %r13,%r10
   20d87:	sub    %r15d,%r10d
   20d8a:	test   %r10d,%r10d
   20d8d:	js     20d94 <png_read_filter_row_paeth_multibyte_pixel+0xc4>
   20d8f:	mov    %r10,%rdi
   20d92:	jmp    20d97 <png_read_filter_row_paeth_multibyte_pixel+0xc7>
   20d94:	mov    %r12,%rdi
   20d97:	mov    %r15,%r11
   20d9a:	sub    %eax,%r11d
   20d9d:	mov    %rax,%rcx
   20da0:	sub    %r15d,%ecx
   20da3:	test   %ecx,%ecx
   20da5:	js     20d21 <png_read_filter_row_paeth_multibyte_pixel+0x51>
   20dab:	mov    %rcx,%r14
   20dae:	jmpq   20d24 <png_read_filter_row_paeth_multibyte_pixel+0x54>
   20db3:	data16 nopw %cs:0x0(%rax,%rax,1)
   20dbe:	xchg   %ax,%ax

0000000000020dc0 <png_init_filter_functions>:
   20dc0:	push   %rbp
   20dc1:	mov    %rsp,%rbp
   20dc4:	lea    -0x28b(%rip),%rax        # 20b40 <png_read_filter_row_sub>
   20dcb:	mov    %rax,0x478(%rdi)
   20dd2:	lea    -0x259(%rip),%rax        # 20b80 <png_read_filter_row_up>
   20dd9:	mov    %rax,0x480(%rdi)
   20de0:	lea    -0x237(%rip),%rax        # 20bb0 <png_read_filter_row_avg>
   20de7:	mov    %rax,0x488(%rdi)
   20dee:	movzbl 0x26a(%rdi),%eax
   20df5:	add    $0x7,%eax
   20df8:	and    $0xfffffff8,%eax
   20dfb:	cmp    $0x8,%eax
   20dfe:	je     20e10 <png_init_filter_functions+0x50>
   20e00:	lea    -0x137(%rip),%rax        # 20cd0 <png_read_filter_row_paeth_multibyte_pixel>
   20e07:	mov    %rax,0x490(%rdi)
   20e0e:	leaveq 
   20e0f:	retq   
   20e10:	lea    -0x1f7(%rip),%rax        # 20c20 <png_read_filter_row_paeth_1byte_pixel>
   20e17:	mov    %rax,0x490(%rdi)
   20e1e:	leaveq 
   20e1f:	retq   

0000000000020e20 <png_set_compression_buffer_size>:
   20e20:	push   %rbp
   20e21:	mov    %rsp,%rbp
   20e24:	sub    $0x10,%rsp
   20e28:	test   %rdi,%rdi
   20e2b:	jne    20e2f <png_set_compression_buffer_size+0xf>
   20e2d:	leaveq 
   20e2e:	retq   
   20e2f:	test   %rsi,%rsi
   20e32:	je     20e69 <png_set_compression_buffer_size+0x49>
   20e34:	cmp    $0x7fffffff,%rsi
   20e3b:	ja     20e69 <png_set_compression_buffer_size+0x49>
   20e3d:	mov    0x12c(%rdi),%eax
   20e43:	and    $0x8000,%eax
   20e48:	test   %eax,%eax
   20e4a:	jne    20e75 <png_set_compression_buffer_size+0x55>
   20e4c:	mov    0x138(%rdi),%eax
   20e52:	test   %eax,%eax
   20e54:	jne    20e7d <png_set_compression_buffer_size+0x5d>
   20e56:	cmp    $0x5,%rsi
   20e5a:	jbe    20e8b <png_set_compression_buffer_size+0x6b>
   20e5c:	mov    0x1b8(%rdi),%eax
   20e62:	cmp    %rax,%rsi
   20e65:	jne    20e99 <png_set_compression_buffer_size+0x79>
   20e67:	leaveq 
   20e68:	retq   
   20e69:	lea    0xdf16(%rip),%rsi        # 2ed86 <png_pass_inc.20+0x513>
   20e70:	callq  5470 <png_error@plt>
   20e75:	mov    %esi,0x468(%rdi)
   20e7b:	leaveq 
   20e7c:	retq   
   20e7d:	lea    0xdf22(%rip),%rsi        # 2eda6 <png_pass_inc.20+0x533>
   20e84:	callq  5390 <png_warning@plt>
   20e89:	leaveq 
   20e8a:	retq   
   20e8b:	lea    0xdf53(%rip),%rsi        # 2ede5 <png_pass_inc.20+0x572>
   20e92:	callq  5390 <png_warning@plt>
   20e97:	leaveq 
   20e98:	retq   
   20e99:	lea    0x1b0(%rdi),%rax
   20ea0:	mov    %rdi,%rcx
   20ea3:	mov    %r14,-0x8(%rbp)
   20ea7:	mov    %r15,-0x10(%rbp)
   20eab:	mov    %rsi,%r14
   20eae:	mov    %rax,%rsi
   20eb1:	mov    %rdi,%r15
   20eb4:	mov    %rcx,%rdi
   20eb7:	callq  27780 <png_free_buffer_list>
   20ebc:	mov    %r14d,0x1b8(%r15)
   20ec3:	mov    -0x10(%rbp),%r15
   20ec7:	mov    -0x8(%rbp),%r14
   20ecb:	leaveq 
   20ecc:	retq   
   20ecd:	nopl   (%rax)

0000000000020ed0 <png_set_read_user_chunk_fn>:
   20ed0:	push   %rbp
   20ed1:	mov    %rsp,%rbp
   20ed4:	test   %rdi,%rdi
   20ed7:	jne    20edb <png_set_read_user_chunk_fn+0xb>
   20ed9:	leaveq 
   20eda:	retq   
   20edb:	mov    %rdx,0x3b8(%rdi)
   20ee2:	mov    %rsi,0x3b0(%rdi)
   20ee9:	leaveq 
   20eea:	retq   
   20eeb:	nopl   0x0(%rax,%rax,1)

0000000000020ef0 <png_set_benign_errors>:
   20ef0:	push   %rbp
   20ef1:	mov    %rsp,%rbp
   20ef4:	test   %esi,%esi
   20ef6:	jne    20f0b <png_set_benign_errors+0x1b>
   20ef8:	mov    0x130(%rdi),%eax
   20efe:	and    $0xff8fffff,%eax
   20f03:	mov    %eax,0x130(%rdi)
   20f09:	leaveq 
   20f0a:	retq   
   20f0b:	mov    0x130(%rdi),%eax
   20f11:	or     $0x700000,%eax
   20f16:	mov    %eax,0x130(%rdi)
   20f1c:	leaveq 
   20f1d:	retq   
   20f1e:	xchg   %ax,%ax

0000000000020f20 <png_set_rows>:
   20f20:	push   %rbp
   20f21:	mov    %rsp,%rbp
   20f24:	sub    $0x10,%rsp
   20f28:	test   %rdi,%rdi
   20f2b:	jne    20f2f <png_set_rows+0xf>
   20f2d:	leaveq 
   20f2e:	retq   
   20f2f:	test   %rsi,%rsi
   20f32:	jne    20f36 <png_set_rows+0x16>
   20f34:	leaveq 
   20f35:	retq   
   20f36:	mov    0x160(%rsi),%rax
   20f3d:	test   %rax,%rax
   20f40:	jne    20f50 <png_set_rows+0x30>
   20f42:	mov    %rdx,0x160(%rsi)
   20f49:	test   %rdx,%rdx
   20f4c:	jne    20f88 <png_set_rows+0x68>
   20f4e:	leaveq 
   20f4f:	retq   
   20f50:	cmp    %rdx,%rax
   20f53:	je     20f42 <png_set_rows+0x22>
   20f55:	mov    $0x40,%eax
   20f5a:	xor    %ecx,%ecx
   20f5c:	mov    %rsi,%r8
   20f5f:	mov    %r14,-0x8(%rbp)
   20f63:	mov    %r15,-0x10(%rbp)
   20f67:	mov    %rdx,%r14
   20f6a:	mov    %rax,%rdx
   20f6d:	mov    %rsi,%r15
   20f70:	mov    %r8,%rsi
   20f73:	callq  5720 <png_free_data@plt>
   20f78:	mov    %r14,%rdx
   20f7b:	mov    %r15,%rsi
   20f7e:	mov    -0x10(%rbp),%r15
   20f82:	mov    -0x8(%rbp),%r14
   20f86:	jmp    20f42 <png_set_rows+0x22>
   20f88:	mov    0x8(%rsi),%eax
   20f8b:	or     $0x8000,%eax
   20f90:	mov    %eax,0x8(%rsi)
   20f93:	leaveq 
   20f94:	retq   
   20f95:	data16 nopw %cs:0x0(%rax,%rax,1)

0000000000020fa0 <png_set_bKGD>:
   20fa0:	push   %rbp
   20fa1:	mov    %rsp,%rbp
   20fa4:	test   %rdi,%rdi
   20fa7:	jne    20fab <png_set_bKGD+0xb>
   20fa9:	leaveq 
   20faa:	retq   
   20fab:	test   %rsi,%rsi
   20fae:	jne    20fb2 <png_set_bKGD+0x12>
   20fb0:	leaveq 
   20fb1:	retq   
   20fb2:	test   %rdx,%rdx
   20fb5:	jne    20fb9 <png_set_bKGD+0x19>
   20fb7:	leaveq 
   20fb8:	retq   
   20fb9:	mov    (%rdx),%rax
   20fbc:	mov    %rax,0xca(%rsi)
   20fc3:	mov    0x8(%rsi),%eax
   20fc6:	or     $0x20,%eax
   20fc9:	movzwl 0x8(%rdx),%ecx
   20fcd:	mov    %eax,0x8(%rsi)
   20fd0:	mov    %cx,0xd2(%rsi)
   20fd7:	leaveq 
   20fd8:	retq   
   20fd9:	nopl   0x0(%rax)

0000000000020fe0 <png_set_cHRM>:
   20fe0:	push   %rbp
   20fe1:	mov    %rsp,%rbp
   20fe4:	sub    $0xb0,%rsp
   20feb:	movdqu %xmm1,-0x80(%rbp)
   20ff0:	movdqu %xmm2,-0x70(%rbp)
   20ff5:	movdqu %xmm3,-0x60(%rbp)
   20ffa:	movdqu %xmm4,-0x50(%rbp)
   20fff:	movdqu %xmm5,-0x40(%rbp)
   21004:	movdqu %xmm6,-0x30(%rbp)
   21009:	movdqu %xmm7,-0x20(%rbp)
   2100e:	mov    %r14,-0xa0(%rbp)
   21015:	mov    %r15,-0xa8(%rbp)
   2101c:	mov    %r13,-0x98(%rbp)
   21023:	mov    %r12,-0x90(%rbp)
   2102a:	mov    %rbx,-0x88(%rbp)
   21031:	mov    %rsi,%r12
   21034:	lea    0xdddc(%rip),%rsi        # 2ee17 <png_pass_inc.20+0x5a4>
   2103b:	mov    %rdi,%rbx
   2103e:	callq  69e0 <png_fixed>
   21043:	mov    %rax,-0x8(%rbp)
   21047:	lea    0xddd6(%rip),%rsi        # 2ee24 <png_pass_inc.20+0x5b1>
   2104e:	mov    %rbx,%rdi
   21051:	movdqu -0x80(%rbp),%xmm0
   21056:	callq  69e0 <png_fixed>
   2105b:	mov    %rax,-0x10(%rbp)
   2105f:	lea    0xddcb(%rip),%rsi        # 2ee31 <png_pass_inc.20+0x5be>
   21066:	mov    %rbx,%rdi
   21069:	movdqu -0x70(%rbp),%xmm0
   2106e:	callq  69e0 <png_fixed>
   21073:	mov    %rax,-0x70(%rbp)
   21077:	lea    0xddbe(%rip),%rsi        # 2ee3c <png_pass_inc.20+0x5c9>
   2107e:	mov    %rbx,%rdi
   21081:	movdqu -0x60(%rbp),%xmm0
   21086:	callq  69e0 <png_fixed>
   2108b:	mov    %rax,-0x80(%rbp)
   2108f:	lea    0xddb1(%rip),%rsi        # 2ee47 <png_pass_inc.20+0x5d4>
   21096:	mov    %rbx,%rdi
   21099:	movdqu -0x50(%rbp),%xmm0
   2109e:	callq  69e0 <png_fixed>
   210a3:	mov    %rax,%r13
   210a6:	lea    0xdda7(%rip),%rsi        # 2ee54 <png_pass_inc.20+0x5e1>
   210ad:	mov    %rbx,%rdi
   210b0:	movdqu -0x40(%rbp),%xmm0
   210b5:	callq  69e0 <png_fixed>
   210ba:	mov    %rax,%r14
   210bd:	lea    0xdd9d(%rip),%rsi        # 2ee61 <png_pass_inc.20+0x5ee>
   210c4:	mov    %rbx,%rdi
   210c7:	movdqu -0x30(%rbp),%xmm0
   210cc:	callq  69e0 <png_fixed>
   210d1:	mov    %rax,%r15
   210d4:	lea    0xdd92(%rip),%rsi        # 2ee6d <png_pass_inc.20+0x5fa>
   210db:	mov    %rbx,%rdi
   210de:	movdqu -0x20(%rbp),%xmm0
   210e3:	callq  69e0 <png_fixed>
   210e8:	sub    $0x20,%rsp
   210ec:	mov    %r13d,(%rsp)
   210f0:	mov    %r14d,0x8(%rsp)
   210f5:	mov    %r15d,0x10(%rsp)
   210fa:	mov    %eax,0x18(%rsp)
   210fe:	mov    %r12,%rsi
   21101:	mov    %rbx,%rdi
   21104:	mov    -0x8(%rbp),%rdx
   21108:	mov    -0x10(%rbp),%rcx
   2110c:	mov    -0x70(%rbp),%r8
   21110:	mov    -0x80(%rbp),%r9
   21114:	callq  5250 <png_set_cHRM_fixed@plt>
   21119:	mov    -0x88(%rbp),%rbx
   21120:	mov    -0x90(%rbp),%r12
   21127:	mov    -0x98(%rbp),%r13
   2112e:	mov    -0xa8(%rbp),%r15
   21135:	mov    -0xa0(%rbp),%r14
   2113c:	leaveq 
   2113d:	retq   
   2113e:	xchg   %ax,%ax

0000000000021140 <png_set_cHRM_XYZ>:
   21140:	push   %rbp
   21141:	mov    %rsp,%rbp
   21144:	sub    $0xc0,%rsp
   2114b:	movdqu %xmm1,-0x90(%rbp)
   21153:	movdqu %xmm2,-0x80(%rbp)
   21158:	movdqu %xmm3,-0x70(%rbp)
   2115d:	movdqu %xmm4,-0x60(%rbp)
   21162:	movdqu %xmm5,-0x50(%rbp)
   21167:	movdqu %xmm6,-0x40(%rbp)
   2116c:	movdqu %xmm7,-0x30(%rbp)
   21171:	mov    %r14,-0xb0(%rbp)
   21178:	mov    %r15,-0xb8(%rbp)
   2117f:	mov    %r13,-0xa8(%rbp)
   21186:	mov    %r12,-0xa0(%rbp)
   2118d:	mov    %rbx,-0x98(%rbp)
   21194:	mov    %rsi,-0x8(%rbp)
   21198:	lea    0xdc92(%rip),%rsi        # 2ee31 <png_pass_inc.20+0x5be>
   2119f:	mov    %rdi,%rbx
   211a2:	callq  69e0 <png_fixed>
   211a7:	mov    %rax,-0x10(%rbp)
   211ab:	lea    0xdc8a(%rip),%rsi        # 2ee3c <png_pass_inc.20+0x5c9>
   211b2:	mov    %rbx,%rdi
   211b5:	movdqu -0x90(%rbp),%xmm0
   211bd:	callq  69e0 <png_fixed>
   211c2:	mov    %rax,-0x18(%rbp)
   211c6:	lea    0xdcac(%rip),%rsi        # 2ee79 <png_pass_inc.20+0x606>
   211cd:	mov    %rbx,%rdi
   211d0:	movdqu -0x80(%rbp),%xmm0
   211d5:	callq  69e0 <png_fixed>
   211da:	mov    %rax,-0x80(%rbp)
   211de:	lea    0xdc62(%rip),%rsi        # 2ee47 <png_pass_inc.20+0x5d4>
   211e5:	mov    %rbx,%rdi
   211e8:	movdqu -0x70(%rbp),%xmm0
   211ed:	callq  69e0 <png_fixed>
   211f2:	mov    %rax,-0x90(%rbp)
   211f9:	lea    0xdc54(%rip),%rsi        # 2ee54 <png_pass_inc.20+0x5e1>
   21200:	mov    %rbx,%rdi
   21203:	movdqu -0x60(%rbp),%xmm0
   21208:	callq  69e0 <png_fixed>
   2120d:	mov    %rax,%r12
   21210:	lea    0xdc6d(%rip),%rsi        # 2ee84 <png_pass_inc.20+0x611>
   21217:	mov    %rbx,%rdi
   2121a:	movdqu -0x50(%rbp),%xmm0
   2121f:	callq  69e0 <png_fixed>
   21224:	mov    %rax,%r13
   21227:	lea    0xdc33(%rip),%rsi        # 2ee61 <png_pass_inc.20+0x5ee>
   2122e:	mov    %rbx,%rdi
   21231:	movdqu -0x40(%rbp),%xmm0
   21236:	callq  69e0 <png_fixed>
   2123b:	mov    %rax,%r14
   2123e:	lea    0xdc28(%rip),%rsi        # 2ee6d <png_pass_inc.20+0x5fa>
   21245:	mov    %rbx,%rdi
   21248:	movdqu -0x30(%rbp),%xmm0
   2124d:	callq  69e0 <png_fixed>
   21252:	mov    %rax,%r15
   21255:	movsd  0x10(%rbp),%xmm0
   2125a:	lea    0xdc30(%rip),%rsi        # 2ee91 <png_pass_inc.20+0x61e>
   21261:	mov    %rbx,%rdi
   21264:	callq  69e0 <png_fixed>
   21269:	sub    $0x20,%rsp
   2126d:	mov    %r12d,(%rsp)
   21271:	mov    %r13d,0x8(%rsp)
   21276:	mov    %r14d,0x10(%rsp)
   2127b:	mov    %r15d,0x18(%rsp)
   21280:	mov    %eax,0x20(%rsp)
   21284:	mov    %rbx,%rdi
   21287:	mov    -0x8(%rbp),%rsi
   2128b:	mov    -0x10(%rbp),%rdx
   2128f:	mov    -0x18(%rbp),%rcx
   21293:	mov    -0x80(%rbp),%r8
   21297:	mov    -0x90(%rbp),%r9
   2129e:	callq  58a0 <png_set_cHRM_XYZ_fixed@plt>
   212a3:	mov    -0x98(%rbp),%rbx
   212aa:	mov    -0xa0(%rbp),%r12
   212b1:	mov    -0xa8(%rbp),%r13
   212b8:	mov    -0xb8(%rbp),%r15
   212bf:	mov    -0xb0(%rbp),%r14
   212c6:	leaveq 
   212c7:	retq   
   212c8:	nopl   0x0(%rax,%rax,1)

00000000000212d0 <png_set_cHRM_fixed>:
   212d0:	push   %rbp
   212d1:	mov    %rsp,%rbp
   212d4:	sub    $0x30,%rsp
   212d8:	test   %rdi,%rdi
   212db:	jne    212df <png_set_cHRM_fixed+0xf>
   212dd:	leaveq 
   212de:	retq   
   212df:	test   %rsi,%rsi
   212e2:	jne    212e6 <png_set_cHRM_fixed+0x16>
   212e4:	leaveq 
   212e5:	retq   
   212e6:	mov    %r8d,-0x30(%rbp)
   212ea:	mov    %r9d,-0x2c(%rbp)
   212ee:	movslq 0x10(%rbp),%rax
   212f2:	mov    %eax,-0x28(%rbp)
   212f5:	movslq 0x18(%rbp),%rax
   212f9:	mov    %eax,-0x24(%rbp)
   212fc:	movslq 0x20(%rbp),%rax
   21300:	mov    %eax,-0x20(%rbp)
   21303:	movslq 0x28(%rbp),%rax
   21307:	mov    %eax,-0x1c(%rbp)
   2130a:	mov    %edx,-0x18(%rbp)
   2130d:	mov    %ecx,-0x14(%rbp)
   21310:	lea    0x34(%rsi),%rax
   21314:	lea    -0x30(%rbp),%rdx
   21318:	mov    $0x2,%ecx
   2131d:	mov    %rdi,%r8
   21320:	mov    %r14,-0x8(%rbp)
   21324:	mov    %r15,-0x10(%rbp)
   21328:	mov    %rsi,%r14
   2132b:	mov    %rax,%rsi
   2132e:	mov    %rdi,%r15
   21331:	mov    %r8,%rdi
   21334:	callq  7060 <png_colorspace_set_chromaticities>
   21339:	test   %eax,%eax
   2133b:	je     2134b <png_set_cHRM_fixed+0x7b>
   2133d:	movzwl 0x7e(%r14),%eax
   21342:	or     $0x10,%ax
   21346:	mov    %ax,0x7e(%r14)
   2134b:	mov    %r14,%rsi
   2134e:	mov    %r15,%rdi
   21351:	callq  6f70 <png_colorspace_sync_info>
   21356:	mov    -0x10(%rbp),%r15
   2135a:	mov    -0x8(%rbp),%r14
   2135e:	leaveq 
   2135f:	retq   

0000000000021360 <png_set_cHRM_XYZ_fixed>:
   21360:	push   %rbp
   21361:	mov    %rsp,%rbp
   21364:	sub    $0x40,%rsp
   21368:	test   %rdi,%rdi
   2136b:	jne    2136f <png_set_cHRM_XYZ_fixed+0xf>
   2136d:	leaveq 
   2136e:	retq   
   2136f:	test   %rsi,%rsi
   21372:	jne    21376 <png_set_cHRM_XYZ_fixed+0x16>
   21374:	leaveq 
   21375:	retq   
   21376:	mov    %edx,-0x34(%rbp)
   21379:	mov    %ecx,-0x30(%rbp)
   2137c:	mov    %r8d,-0x2c(%rbp)
   21380:	mov    %r9d,-0x28(%rbp)
   21384:	movslq 0x10(%rbp),%rax
   21388:	mov    %eax,-0x24(%rbp)
   2138b:	movslq 0x18(%rbp),%rax
   2138f:	mov    %eax,-0x20(%rbp)
   21392:	movslq 0x20(%rbp),%rax
   21396:	mov    %eax,-0x1c(%rbp)
   21399:	movslq 0x28(%rbp),%rax
   2139d:	mov    %eax,-0x18(%rbp)
   213a0:	movslq 0x30(%rbp),%rax
   213a4:	mov    %eax,-0x14(%rbp)
   213a7:	lea    0x34(%rsi),%rax
   213ab:	lea    -0x34(%rbp),%rdx
   213af:	mov    $0x2,%ecx
   213b4:	mov    %rdi,%r8
   213b7:	mov    %r14,-0x8(%rbp)
   213bb:	mov    %r15,-0x10(%rbp)
   213bf:	mov    %rsi,%r14
   213c2:	mov    %rax,%rsi
   213c5:	mov    %rdi,%r15
   213c8:	mov    %r8,%rdi
   213cb:	callq  7110 <png_colorspace_set_endpoints>
   213d0:	test   %eax,%eax
   213d2:	je     213e2 <png_set_cHRM_XYZ_fixed+0x82>
   213d4:	movzwl 0x7e(%r14),%eax
   213d9:	or     $0x10,%ax
   213dd:	mov    %ax,0x7e(%r14)
   213e2:	mov    %r14,%rsi
   213e5:	mov    %r15,%rdi
   213e8:	callq  6f70 <png_colorspace_sync_info>
   213ed:	mov    -0x10(%rbp),%r15
   213f1:	mov    -0x8(%rbp),%r14
   213f5:	leaveq 
   213f6:	retq   
   213f7:	nopw   0x0(%rax,%rax,1)

0000000000021400 <png_set_eXIf>:
   21400:	push   %rbp
   21401:	mov    %rsp,%rbp
   21404:	lea    0xda92(%rip),%rsi        # 2ee9d <png_pass_inc.20+0x62a>
   2140b:	callq  5390 <png_warning@plt>
   21410:	leaveq 
   21411:	retq   
   21412:	data16 nopw %cs:0x0(%rax,%rax,1)
   2141d:	nopl   (%rax)

0000000000021420 <png_set_eXIf_1>:
   21420:	push   %rbp
   21421:	mov    %rsp,%rbp
   21424:	sub    $0x20,%rsp
   21428:	test   %rdi,%rdi
   2142b:	jne    2142f <png_set_eXIf_1+0xf>
   2142d:	leaveq 
   2142e:	retq   
   2142f:	test   %rsi,%rsi
   21432:	jne    21436 <png_set_eXIf_1+0x16>
   21434:	leaveq 
   21435:	retq   
   21436:	mov    0xf0(%rsi),%rax
   2143d:	test   %rax,%rax
   21440:	je     2148d <png_set_eXIf_1+0x6d>
   21442:	mov    %rdi,%r8
   21445:	mov    %r13,-0x8(%rbp)
   21449:	mov    %r14,-0x10(%rbp)
   2144d:	mov    %r15,-0x18(%rbp)
   21451:	mov    %rcx,-0x20(%rbp)
   21455:	mov    %rdx,%r13
   21458:	mov    %rdi,%r14
   2145b:	mov    %r8,%rdi
   2145e:	mov    %rsi,%r15
   21461:	mov    %rax,%rsi
   21464:	callq  5790 <png_free@plt>
   21469:	mov    %r13,%rdx
   2146c:	mov    %r15,%rsi
   2146f:	mov    %r14,%rdi
   21472:	movq   $0x0,0xf0(%rsi)
   2147d:	mov    -0x20(%rbp),%rcx
   21481:	mov    -0x18(%rbp),%r15
   21485:	mov    -0x10(%rbp),%r14
   21489:	mov    -0x8(%rbp),%r13
   2148d:	mov    %edx,0xec(%rsi)
   21493:	movslq %edx,%rax
   21496:	mov    %rdi,%rdx
   21499:	mov    %r14,-0x10(%rbp)
   2149d:	mov    %r15,-0x18(%rbp)
   214a1:	mov    %rcx,-0x20(%rbp)
   214a5:	mov    %rsi,%r14
   214a8:	mov    %rax,%rsi
   214ab:	mov    %rdi,%r15
   214ae:	mov    %rdx,%rdi
   214b1:	callq  5150 <png_malloc_warn@plt>
   214b6:	mov    %rax,0xf0(%r14)
   214bd:	test   %rax,%rax
   214c0:	je     214dd <png_set_eXIf_1+0xbd>
   214c2:	mov    0x12c(%r14),%eax
   214c9:	or     $0x8000,%eax
   214ce:	mov    %eax,0x12c(%r14)
   214d5:	xor    %eax,%eax
   214d7:	mov    -0x20(%rbp),%rsi
   214db:	jmp    2150a <png_set_eXIf_1+0xea>
   214dd:	mov    %r15,%rdi
   214e0:	lea    0xd9e5(%rip),%rsi        # 2eecc <png_pass_inc.20+0x659>
   214e7:	callq  5390 <png_warning@plt>
   214ec:	mov    -0x18(%rbp),%r15
   214f0:	mov    -0x10(%rbp),%r14
   214f4:	leaveq 
   214f5:	retq   
   214f6:	movslq %eax,%rdx
   214f9:	movzbl (%rsi,%rdx,1),%ecx
   214fd:	mov    0xf0(%r14),%rdi
   21504:	mov    %cl,(%rdi,%rdx,1)
   21507:	add    $0x1,%eax
   2150a:	movslq 0xec(%r14),%rcx
   21511:	cmp    %eax,%ecx
   21513:	jg     214f6 <png_set_eXIf_1+0xd6>
   21515:	mov    0x8(%r14),%eax
   21519:	or     $0x10000,%eax
   2151e:	mov    %eax,0x8(%r14)
   21522:	mov    -0x18(%rbp),%r15
   21526:	mov    -0x10(%rbp),%r14
   2152a:	leaveq 
   2152b:	retq   
   2152c:	nopl   0x0(%rax)

0000000000021530 <png_set_gAMA>:
   21530:	push   %rbp
   21531:	mov    %rsp,%rbp
   21534:	sub    $0x10,%rsp
   21538:	mov    %r14,-0x8(%rbp)
   2153c:	mov    %r15,-0x10(%rbp)
   21540:	mov    %rsi,%r14
   21543:	lea    0xd9aa(%rip),%rsi        # 2eef4 <png_pass_inc.20+0x681>
   2154a:	mov    %rdi,%r15
   2154d:	callq  69e0 <png_fixed>
   21552:	mov    %rax,%rdx
   21555:	mov    %r14,%rsi
   21558:	mov    %r15,%rdi
   2155b:	callq  5290 <png_set_gAMA_fixed@plt>
   21560:	mov    -0x10(%rbp),%r15
   21564:	mov    -0x8(%rbp),%r14
   21568:	leaveq 
   21569:	retq   
   2156a:	nopw   0x0(%rax,%rax,1)

0000000000021570 <png_set_gAMA_fixed>:
   21570:	push   %rbp
   21571:	mov    %rsp,%rbp
   21574:	sub    $0x10,%rsp
   21578:	test   %rdi,%rdi
   2157b:	jne    2157f <png_set_gAMA_fixed+0xf>
   2157d:	leaveq 
   2157e:	retq   
   2157f:	test   %rsi,%rsi
   21582:	jne    21586 <png_set_gAMA_fixed+0x16>
   21584:	leaveq 
   21585:	retq   
   21586:	lea    0x34(%rsi),%rax
   2158a:	mov    %rdi,%rcx
   2158d:	mov    %r14,-0x8(%rbp)
   21591:	mov    %r15,-0x10(%rbp)
   21595:	mov    %rsi,%r14
   21598:	mov    %rax,%rsi
   2159b:	mov    %rdi,%r15
   2159e:	mov    %rcx,%rdi
   215a1:	callq  6ec0 <png_colorspace_set_gamma>
   215a6:	mov    %r14,%rsi
   215a9:	mov    %r15,%rdi
   215ac:	callq  6f70 <png_colorspace_sync_info>
   215b1:	mov    -0x10(%rbp),%r15
   215b5:	mov    -0x8(%rbp),%r14
   215b9:	leaveq 
   215ba:	retq   
   215bb:	nopl   0x0(%rax,%rax,1)

00000000000215c0 <png_set_hIST>:
   215c0:	push   %rbp
   215c1:	mov    %rsp,%rbp
   215c4:	sub    $0x20,%rsp
   215c8:	test   %rdi,%rdi
   215cb:	jne    215cf <png_set_hIST+0xf>
   215cd:	leaveq 
   215ce:	retq   
   215cf:	test   %rsi,%rsi
   215d2:	jne    215d6 <png_set_hIST+0x16>
   215d4:	leaveq 
   215d5:	retq   
   215d6:	movzwl 0x20(%rsi),%eax
   215da:	test   %ax,%ax
   215dd:	je     21645 <png_set_hIST+0x85>
   215df:	cmp    $0x100,%ax
   215e3:	ja     21645 <png_set_hIST+0x85>
   215e5:	mov    $0x8,%r9d
   215eb:	xor    %ecx,%ecx
   215ed:	mov    %rdi,%rax
   215f0:	mov    %rsi,%r8
   215f3:	mov    %r14,-0x8(%rbp)
   215f7:	mov    %r15,-0x10(%rbp)
   215fb:	mov    %rdx,-0x18(%rbp)
   215ff:	mov    %r9,%rdx
   21602:	mov    %rsi,%r14
   21605:	mov    %r8,%rsi
   21608:	mov    %rdi,%r15
   2160b:	mov    %rax,%rdi
   2160e:	callq  5720 <png_free_data@plt>
   21613:	mov    $0x200,%esi
   21618:	mov    %r15,%rdi
   2161b:	callq  5150 <png_malloc_warn@plt>
   21620:	mov    %rax,0x100(%r14)
   21627:	test   %rax,%rax
   2162a:	je     21653 <png_set_hIST+0x93>
   2162c:	mov    0x12c(%r14),%eax
   21633:	or     $0x8,%eax
   21636:	mov    %eax,0x12c(%r14)
   2163d:	xor    %eax,%eax
   2163f:	mov    -0x18(%rbp),%rdi
   21643:	jmp    21681 <png_set_hIST+0xc1>
   21645:	lea    0xd8b5(%rip),%rsi        # 2ef01 <png_pass_inc.20+0x68e>
   2164c:	callq  5390 <png_warning@plt>
   21651:	leaveq 
   21652:	retq   
   21653:	mov    %r15,%rdi
   21656:	lea    0xd8d2(%rip),%rsi        # 2ef2f <png_pass_inc.20+0x6bc>
   2165d:	callq  5390 <png_warning@plt>
   21662:	mov    -0x10(%rbp),%r15
   21666:	mov    -0x8(%rbp),%r14
   2166a:	leaveq 
   2166b:	retq   
   2166c:	movslq %eax,%rsi
   2166f:	movzwl (%rdi,%rsi,2),%edx
   21673:	mov    0x100(%r14),%rcx
   2167a:	mov    %dx,(%rcx,%rsi,2)
   2167e:	add    $0x1,%eax
   21681:	movzwl 0x20(%r14),%ecx
   21686:	cmp    %eax,%ecx
   21688:	jg     2166c <png_set_hIST+0xac>
   2168a:	mov    0x8(%r14),%eax
   2168e:	or     $0x40,%eax
   21691:	mov    %eax,0x8(%r14)
   21695:	mov    -0x10(%rbp),%r15
   21699:	mov    -0x8(%rbp),%r14
   2169d:	leaveq 
   2169e:	retq   
   2169f:	nop

00000000000216a0 <png_set_IHDR>:
   216a0:	push   %rbp
   216a1:	mov    %rsp,%rbp
   216a4:	sub    $0x20,%rsp
   216a8:	test   %rdi,%rdi
   216ab:	jne    216af <png_set_IHDR+0xf>
   216ad:	leaveq 
   216ae:	retq   
   216af:	test   %rsi,%rsi
   216b2:	jne    216b6 <png_set_IHDR+0x16>
   216b4:	leaveq 
   216b5:	retq   
   216b6:	mov    %edx,(%rsi)
   216b8:	mov    %ecx,0x4(%rsi)
   216bb:	mov    %r8b,0x24(%rsi)
   216bf:	mov    %r9b,0x25(%rsi)
   216c3:	movslq 0x18(%rbp),%rax
   216c7:	mov    %al,0x26(%rsi)
   216ca:	movslq 0x20(%rbp),%r11
   216ce:	mov    %r11b,0x27(%rsi)
   216d2:	movslq 0x10(%rbp),%r10
   216d6:	mov    %r10b,0x28(%rsi)
   216da:	movzbl %al,%eax
   216dd:	mov    %eax,(%rsp)
   216e0:	movzbl %r11b,%eax
   216e4:	mov    %eax,0x8(%rsp)
   216e8:	movzbl %r8b,%r11d
   216ec:	movzbl %r9b,%r8d
   216f0:	movzbl %r10b,%r9d
   216f4:	mov    %rdx,%rax
   216f7:	mov    %r14,-0x8(%rbp)
   216fb:	mov    %r15,-0x10(%rbp)
   216ff:	mov    %rsi,%r14
   21702:	mov    %rax,%rsi
   21705:	mov    %rdx,%r15
   21708:	mov    %rcx,%rdx
   2170b:	mov    %r11,%rcx
   2170e:	callq  7d80 <png_check_IHDR>
   21713:	add    $0x10,%rsp
   21717:	movzbl 0x25(%r14),%eax
   2171c:	cmp    $0x3,%al
   2171e:	je     2172e <png_set_IHDR+0x8e>
   21720:	and    $0x2,%eax
   21723:	test   %eax,%eax
   21725:	jg     21773 <png_set_IHDR+0xd3>
   21727:	movb   $0x1,0x29(%r14)
   2172c:	jmp    21733 <png_set_IHDR+0x93>
   2172e:	movb   $0x1,0x29(%r14)
   21733:	movzbl 0x25(%r14),%eax
   21738:	and    $0x4,%eax
   2173b:	test   %eax,%eax
   2173d:	jle    2174b <png_set_IHDR+0xab>
   2173f:	movzbl 0x29(%r14),%eax
   21744:	add    $0x1,%eax
   21747:	mov    %al,0x29(%r14)
   2174b:	movzbl 0x24(%r14),%ecx
   21750:	movzbl 0x29(%r14),%eax
   21755:	imul   %cl
   21757:	mov    %al,0x2a(%r14)
   2175b:	cmp    $0x7,%al
   2175d:	ja     2177a <png_set_IHDR+0xda>
   2175f:	movzbl %al,%eax
   21762:	mov    %r15d,%ecx
   21765:	imul   %rcx,%rax
   21769:	add    $0x7,%rax
   2176d:	shr    $0x3,%rax
   21771:	jmp    21788 <png_set_IHDR+0xe8>
   21773:	movb   $0x3,0x29(%r14)
   21778:	jmp    21733 <png_set_IHDR+0x93>
   2177a:	movzbl %al,%eax
   2177d:	shr    $0x3,%rax
   21781:	mov    %r15d,%ecx
   21784:	imul   %rcx,%rax
   21788:	mov    %rax,0x10(%r14)
   2178c:	mov    -0x10(%rbp),%r15
   21790:	mov    -0x8(%rbp),%r14
   21794:	leaveq 
   21795:	retq   
   21796:	nopw   %cs:0x0(%rax,%rax,1)

00000000000217a0 <png_set_oFFs>:
   217a0:	push   %rbp
   217a1:	mov    %rsp,%rbp
   217a4:	test   %rdi,%rdi
   217a7:	jne    217ab <png_set_oFFs+0xb>
   217a9:	leaveq 
   217aa:	retq   
   217ab:	test   %rsi,%rsi
   217ae:	jne    217b2 <png_set_oFFs+0x12>
   217b0:	leaveq 
   217b1:	retq   
   217b2:	mov    %edx,0xd4(%rsi)
   217b8:	mov    %ecx,0xd8(%rsi)
   217be:	mov    %r8b,0xdc(%rsi)
   217c5:	mov    0x8(%rsi),%eax
   217c8:	or     $0x100,%eax
   217cd:	mov    %eax,0x8(%rsi)
   217d0:	leaveq 
   217d1:	retq   
   217d2:	data16 nopw %cs:0x0(%rax,%rax,1)
   217dd:	nopl   (%rax)

00000000000217e0 <png_set_pCAL>:
   217e0:	push   %rbp
   217e1:	mov    %rsp,%rbp
   217e4:	sub    $0x70,%rsp
   217e8:	test   %rdi,%rdi
   217eb:	jne    217ef <png_set_pCAL+0xf>
   217ed:	leaveq 
   217ee:	retq   
   217ef:	test   %rsi,%rsi
   217f2:	jne    217f6 <png_set_pCAL+0x16>
   217f4:	leaveq 
   217f5:	retq   
   217f6:	test   %rdx,%rdx
   217f9:	jne    217fd <png_set_pCAL+0x1d>
   217fb:	leaveq 
   217fc:	retq   
   217fd:	mov    0x18(%rbp),%r10
   21801:	test   %r10,%r10
   21804:	jne    21808 <png_set_pCAL+0x28>
   21806:	leaveq 
   21807:	retq   
   21808:	mov    0x20(%rbp),%rax
   2180c:	movslq 0x10(%rbp),%r11
   21810:	test   %r11d,%r11d
   21813:	jle    2181c <png_set_pCAL+0x3c>
   21815:	test   %rax,%rax
   21818:	jne    2181c <png_set_pCAL+0x3c>
   2181a:	leaveq 
   2181b:	retq   
   2181c:	mov    %r10,-0x28(%rbp)
   21820:	mov    %rdx,%r10
   21823:	mov    %r13,-0x10(%rbp)
   21827:	mov    %r14,-0x18(%rbp)
   2182b:	mov    %r15,-0x20(%rbp)
   2182f:	mov    %rax,-0x68(%rbp)
   21833:	mov    %rsi,-0x50(%rbp)
   21837:	mov    %rdx,-0x48(%rbp)
   2183b:	mov    %rcx,-0x30(%rbp)
   2183f:	mov    %r8,-0x38(%rbp)
   21843:	mov    %r11,%r13
   21846:	mov    %r9,%r14
   21849:	mov    %rdi,%r15
   2184c:	mov    %r10,%rdi
   2184f:	callq  5260 <strlen@plt>
   21854:	mov    $0x1,%edx
   21859:	test   %r14d,%r14d
   2185c:	js     2188d <png_set_pCAL+0xad>
   2185e:	cmp    $0x3,%r14d
   21862:	jg     2188d <png_set_pCAL+0xad>
   21864:	test   %r13d,%r13d
   21867:	js     218aa <png_set_pCAL+0xca>
   21869:	cmp    $0xff,%r13d
   21870:	jg     218aa <png_set_pCAL+0xca>
   21872:	xor    %ecx,%ecx
   21874:	mov    %r15,-0x58(%rbp)
   21878:	mov    %r12,-0x8(%rbp)
   2187c:	mov    %rax,-0x60(%rbp)
   21880:	mov    %r14,-0x40(%rbp)
   21884:	mov    %rcx,%r12
   21887:	mov    -0x68(%rbp),%r14
   2188b:	jmp    218f6 <png_set_pCAL+0x116>
   2188d:	mov    %r15,%rdi
   21890:	lea    0xd6c0(%rip),%rsi        # 2ef57 <png_pass_inc.20+0x6e4>
   21897:	callq  b130 <png_chunk_report>
   2189c:	mov    -0x20(%rbp),%r15
   218a0:	mov    -0x18(%rbp),%r14
   218a4:	mov    -0x10(%rbp),%r13
   218a8:	leaveq 
   218a9:	retq   
   218aa:	mov    %r15,%rdi
   218ad:	lea    0xd6be(%rip),%rsi        # 2ef72 <png_pass_inc.20+0x6ff>
   218b4:	callq  b130 <png_chunk_report>
   218b9:	mov    -0x20(%rbp),%r15
   218bd:	mov    -0x18(%rbp),%r14
   218c1:	mov    -0x10(%rbp),%r13
   218c5:	leaveq 
   218c6:	retq   
   218c7:	movslq %r12d,%rax
   218ca:	mov    (%r14,%rax,8),%r15
   218ce:	test   %r15,%r15
   218d1:	je     219e5 <png_set_pCAL+0x205>
   218d7:	mov    %r15,%rdi
   218da:	callq  5260 <strlen@plt>
   218df:	mov    %rax,%rsi
   218e2:	mov    %r15,%rdi
   218e5:	callq  8910 <png_check_fp_string>
   218ea:	test   %eax,%eax
   218ec:	je     219e5 <png_set_pCAL+0x205>
   218f2:	add    $0x1,%r12d
   218f6:	cmp    %r12d,%r13d
   218f9:	jg     218c7 <png_set_pCAL+0xe7>
   218fb:	mov    -0x60(%rbp),%rax
   218ff:	lea    0x1(%rax),%r15
   21903:	mov    -0x58(%rbp),%r12
   21907:	mov    %r12,%rdi
   2190a:	mov    %r15,%rsi
   2190d:	callq  5150 <png_malloc_warn@plt>
   21912:	mov    -0x50(%rbp),%r14
   21916:	mov    %rax,0x108(%r14)
   2191d:	test   %rax,%rax
   21920:	je     21a0c <png_set_pCAL+0x22c>
   21926:	mov    %r15,%rdx
   21929:	mov    %rax,%rdi
   2192c:	mov    -0x48(%rbp),%rsi
   21930:	callq  54c0 <memcpy@plt>
   21935:	mov    -0x30(%rbp),%rax
   21939:	mov    %eax,0x110(%r14)
   21940:	mov    -0x38(%rbp),%rax
   21944:	mov    %eax,0x114(%r14)
   2194b:	mov    -0x40(%rbp),%rax
   2194f:	mov    %al,0x128(%r14)
   21956:	mov    %r13b,0x129(%r14)
   2195d:	mov    -0x28(%rbp),%r15
   21961:	mov    %r15,%rdi
   21964:	callq  5260 <strlen@plt>
   21969:	lea    0x1(%rax),%rdx
   2196d:	mov    %r12,%rdi
   21970:	mov    %rdx,%rsi
   21973:	mov    %r13,-0x60(%rbp)
   21977:	mov    %rdx,%r13
   2197a:	callq  5150 <png_malloc_warn@plt>
   2197f:	mov    %rax,0x118(%r14)
   21986:	test   %rax,%rax
   21989:	je     21a32 <png_set_pCAL+0x252>
   2198f:	mov    %r13,%rdx
   21992:	mov    %r15,%rsi
   21995:	mov    %rax,%rdi
   21998:	callq  54c0 <memcpy@plt>
   2199d:	mov    -0x60(%rbp),%r15
   219a1:	lea    0x1(%r15),%eax
   219a5:	mov    %eax,%r13d
   219a8:	shl    $0x3,%r13
   219ac:	mov    %r12,%rdi
   219af:	mov    %r13,%rsi
   219b2:	callq  5150 <png_malloc_warn@plt>
   219b7:	mov    %rax,0x120(%r14)
   219be:	test   %rax,%rax
   219c1:	je     21a53 <png_set_pCAL+0x273>
   219c7:	mov    %r13,%rdx
   219ca:	mov    %rax,%rdi
   219cd:	xor    %r13d,%r13d
   219d0:	mov    %r13,%rsi
   219d3:	callq  5350 <memset@plt>
   219d8:	mov    %rbx,-0x50(%rbp)
   219dc:	mov    -0x68(%rbp),%rbx
   219e0:	jmpq   21ad0 <png_set_pCAL+0x2f0>
   219e5:	lea    0xd5a3(%rip),%rsi        # 2ef8f <png_pass_inc.20+0x71c>
   219ec:	mov    $0x1,%edx
   219f1:	mov    -0x58(%rbp),%rdi
   219f5:	callq  b130 <png_chunk_report>
   219fa:	mov    -0x8(%rbp),%r12
   219fe:	mov    -0x20(%rbp),%r15
   21a02:	mov    -0x18(%rbp),%r14
   21a06:	mov    -0x10(%rbp),%r13
   21a0a:	leaveq 
   21a0b:	retq   
   21a0c:	mov    %r12,%rdi
   21a0f:	lea    0xd59b(%rip),%rsi        # 2efb1 <png_pass_inc.20+0x73e>
   21a16:	mov    $0x1,%edx
   21a1b:	callq  b130 <png_chunk_report>
   21a20:	mov    -0x8(%rbp),%r12
   21a24:	mov    -0x20(%rbp),%r15
   21a28:	mov    -0x18(%rbp),%r14
   21a2c:	mov    -0x10(%rbp),%r13
   21a30:	leaveq 
   21a31:	retq   
   21a32:	mov    %r12,%rdi
   21a35:	lea    0xd59a(%rip),%rsi        # 2efd6 <png_pass_inc.20+0x763>
   21a3c:	callq  5390 <png_warning@plt>
   21a41:	mov    -0x8(%rbp),%r12
   21a45:	mov    -0x20(%rbp),%r15
   21a49:	mov    -0x18(%rbp),%r14
   21a4d:	mov    -0x10(%rbp),%r13
   21a51:	leaveq 
   21a52:	retq   
   21a53:	mov    %r12,%rdi
   21a56:	lea    0xd59c(%rip),%rsi        # 2eff9 <png_pass_inc.20+0x786>
   21a5d:	callq  5390 <png_warning@plt>
   21a62:	mov    -0x8(%rbp),%r12
   21a66:	mov    -0x20(%rbp),%r15
   21a6a:	mov    -0x18(%rbp),%r14
   21a6e:	mov    -0x10(%rbp),%r13
   21a72:	leaveq 
   21a73:	retq   
   21a74:	movslq %r13d,%r15
   21a77:	mov    (%rbx,%r15,8),%rdi
   21a7b:	callq  5260 <strlen@plt>
   21a80:	lea    0x1(%rax),%rdx
   21a84:	mov    0x120(%r14),%rax
   21a8b:	mov    %rdx,%rsi
   21a8e:	mov    %r13,-0x68(%rbp)
   21a92:	mov    %r12,%rdi
   21a95:	mov    %rax,%r12
   21a98:	mov    %rdx,%r13
   21a9b:	callq  5150 <png_malloc_warn@plt>
   21aa0:	mov    %rax,(%r12,%r15,8)
   21aa4:	mov    0x120(%r14),%rax
   21aab:	mov    (%rax,%r15,8),%rdi
   21aaf:	test   %rdi,%rdi
   21ab2:	je     21b0b <png_set_pCAL+0x32b>
   21ab4:	mov    (%rbx,%r15,8),%rsi
   21ab8:	mov    %r13,%rdx
   21abb:	callq  54c0 <memcpy@plt>
   21ac0:	mov    -0x68(%rbp),%rax
   21ac4:	lea    0x1(%rax),%r13d
   21ac8:	mov    -0x60(%rbp),%r15
   21acc:	mov    -0x58(%rbp),%r12
   21ad0:	cmp    %r13d,%r15d
   21ad3:	jg     21a74 <png_set_pCAL+0x294>
   21ad5:	mov    0x8(%r14),%eax
   21ad9:	or     $0x400,%eax
   21ade:	mov    %eax,0x8(%r14)
   21ae2:	mov    0x12c(%r14),%eax
   21ae9:	or     $0x80,%eax
   21aee:	mov    %eax,0x12c(%r14)
   21af5:	mov    -0x50(%rbp),%rbx
   21af9:	mov    -0x8(%rbp),%r12
   21afd:	mov    -0x20(%rbp),%r15
   21b01:	mov    -0x18(%rbp),%r14
   21b05:	mov    -0x10(%rbp),%r13
   21b09:	leaveq 
   21b0a:	retq   
   21b0b:	lea    0xd50b(%rip),%rsi        # 2f01d <png_pass_inc.20+0x7aa>
   21b12:	mov    -0x58(%rbp),%rdi
   21b16:	callq  5390 <png_warning@plt>
   21b1b:	mov    -0x50(%rbp),%rbx
   21b1f:	mov    -0x8(%rbp),%r12
   21b23:	mov    -0x20(%rbp),%r15
   21b27:	mov    -0x18(%rbp),%r14
   21b2b:	mov    -0x10(%rbp),%r13
   21b2f:	leaveq 
   21b30:	retq   
   21b31:	data16 nopw %cs:0x0(%rax,%rax,1)
   21b3c:	nopl   0x0(%rax)

0000000000021b40 <png_set_pHYs>:
   21b40:	push   %rbp
   21b41:	mov    %rsp,%rbp
   21b44:	test   %rdi,%rdi
   21b47:	jne    21b4b <png_set_pHYs+0xb>
   21b49:	leaveq 
   21b4a:	retq   
   21b4b:	test   %rsi,%rsi
   21b4e:	jne    21b52 <png_set_pHYs+0x12>
   21b50:	leaveq 
   21b51:	retq   
   21b52:	mov    %edx,0xe0(%rsi)
   21b58:	mov    %ecx,0xe4(%rsi)
   21b5e:	mov    %r8b,0xe8(%rsi)
   21b65:	mov    0x8(%rsi),%eax
   21b68:	or     $0x80,%eax
   21b6d:	mov    %eax,0x8(%rsi)
   21b70:	leaveq 
   21b71:	retq   
   21b72:	data16 nopw %cs:0x0(%rax,%rax,1)
   21b7d:	nopl   (%rax)

0000000000021b80 <png_set_PLTE>:
   21b80:	push   %rbp
   21b81:	mov    %rsp,%rbp
   21b84:	sub    $0x20,%rsp
   21b88:	test   %rdi,%rdi
   21b8b:	jne    21b8f <png_set_PLTE+0xf>
   21b8d:	leaveq 
   21b8e:	retq   
   21b8f:	test   %rsi,%rsi
   21b92:	jne    21b96 <png_set_PLTE+0x16>
   21b94:	leaveq 
   21b95:	retq   
   21b96:	movzbl 0x25(%rsi),%eax
   21b9a:	cmp    $0x3,%al
   21b9c:	je     21ba5 <png_set_PLTE+0x25>
   21b9e:	mov    $0x100,%eax
   21ba3:	jmp    21bb6 <png_set_PLTE+0x36>
   21ba5:	mov    %rcx,%r8
   21ba8:	mov    $0x1,%eax
   21bad:	movzbl 0x24(%rsi),%ecx
   21bb1:	shl    %cl,%eax
   21bb3:	mov    %r8,%rcx
   21bb6:	test   %ecx,%ecx
   21bb8:	js     21c87 <png_set_PLTE+0x107>
   21bbe:	cmp    %eax,%ecx
   21bc0:	jg     21c87 <png_set_PLTE+0x107>
   21bc6:	test   %ecx,%ecx
   21bc8:	jg     21ca0 <png_set_PLTE+0x120>
   21bce:	test   %ecx,%ecx
   21bd0:	je     21cb5 <png_set_PLTE+0x135>
   21bd6:	mov    $0x1000,%eax
   21bdb:	xor    %r10d,%r10d
   21bde:	mov    %rdi,%r9
   21be1:	mov    %rsi,%r8
   21be4:	mov    %r12,-0x8(%rbp)
   21be8:	mov    %r13,-0x10(%rbp)
   21bec:	mov    %r14,-0x18(%rbp)
   21bf0:	mov    %r15,-0x20(%rbp)
   21bf4:	mov    %rdi,%r12
   21bf7:	mov    %r9,%rdi
   21bfa:	mov    %rsi,%r13
   21bfd:	mov    %r8,%rsi
   21c00:	mov    %rcx,%r14
   21c03:	mov    %r10,%rcx
   21c06:	mov    %rdx,%r15
   21c09:	mov    %rax,%rdx
   21c0c:	callq  5720 <png_free_data@plt>
   21c11:	mov    $0x300,%esi
   21c16:	mov    %r12,%rdi
   21c19:	callq  5780 <png_calloc@plt>
   21c1e:	test   %r14d,%r14d
   21c21:	mov    %rax,0x250(%r12)
   21c29:	jle    21c3d <png_set_PLTE+0xbd>
   21c2b:	mov    %r14d,%ecx
   21c2e:	lea    (%rcx,%rcx,2),%rdx
   21c32:	mov    %r15,%rsi
   21c35:	mov    %rax,%rdi
   21c38:	callq  54c0 <memcpy@plt>
   21c3d:	mov    0x250(%r12),%rax
   21c45:	mov    %rax,0x18(%r13)
   21c49:	mov    %r14w,0x258(%r12)
   21c52:	mov    %r14w,0x20(%r13)
   21c57:	mov    0x12c(%r13),%eax
   21c5e:	or     $0x1000,%eax
   21c63:	mov    %eax,0x12c(%r13)
   21c6a:	mov    0x8(%r13),%eax
   21c6e:	or     $0x8,%eax
   21c71:	mov    %eax,0x8(%r13)
   21c75:	mov    -0x20(%rbp),%r15
   21c79:	mov    -0x18(%rbp),%r14
   21c7d:	mov    -0x10(%rbp),%r13
   21c81:	mov    -0x8(%rbp),%r12
   21c85:	leaveq 
   21c86:	retq   
   21c87:	lea    0xd3b6(%rip),%rcx        # 2f044 <png_pass_inc.20+0x7d1>
   21c8e:	movzbl 0x25(%rsi),%eax
   21c92:	cmp    $0x3,%al
   21c94:	je     21cc7 <png_set_PLTE+0x147>
   21c96:	mov    %rcx,%rsi
   21c99:	callq  5390 <png_warning@plt>
   21c9e:	leaveq 
   21c9f:	retq   
   21ca0:	test   %rdx,%rdx
   21ca3:	jne    21bce <png_set_PLTE+0x4e>
   21ca9:	lea    0xd3ab(%rip),%rsi        # 2f05b <png_pass_inc.20+0x7e8>
   21cb0:	callq  5470 <png_error@plt>
   21cb5:	mov    0x3d8(%rdi),%eax
   21cbb:	and    $0x1,%eax
   21cbe:	test   %eax,%eax
   21cc0:	je     21ca9 <png_set_PLTE+0x129>
   21cc2:	jmpq   21bd6 <png_set_PLTE+0x56>
   21cc7:	mov    %rcx,%rsi
   21cca:	callq  5470 <png_error@plt>
   21ccf:	nop

0000000000021cd0 <png_set_sBIT>:
   21cd0:	push   %rbp
   21cd1:	mov    %rsp,%rbp
   21cd4:	test   %rdi,%rdi
   21cd7:	jne    21cdb <png_set_sBIT+0xb>
   21cd9:	leaveq 
   21cda:	retq   
   21cdb:	test   %rsi,%rsi
   21cde:	jne    21ce2 <png_set_sBIT+0x12>
   21ce0:	leaveq 
   21ce1:	retq   
   21ce2:	test   %rdx,%rdx
   21ce5:	jne    21ce9 <png_set_sBIT+0x19>
   21ce7:	leaveq 
   21ce8:	retq   
   21ce9:	mov    (%rdx),%eax
   21ceb:	mov    %eax,0xb0(%rsi)
   21cf1:	mov    0x8(%rsi),%eax
   21cf4:	or     $0x2,%eax
   21cf7:	movzbl 0x4(%rdx),%ecx
   21cfb:	mov    %eax,0x8(%rsi)
   21cfe:	mov    %cl,0xb4(%rsi)
   21d04:	leaveq 
   21d05:	retq   
   21d06:	nopw   %cs:0x0(%rax,%rax,1)

0000000000021d10 <png_set_sRGB>:
   21d10:	push   %rbp
   21d11:	mov    %rsp,%rbp
   21d14:	sub    $0x10,%rsp
   21d18:	test   %rdi,%rdi
   21d1b:	jne    21d1f <png_set_sRGB+0xf>
   21d1d:	leaveq 
   21d1e:	retq   
   21d1f:	test   %rsi,%rsi
   21d22:	jne    21d26 <png_set_sRGB+0x16>
   21d24:	leaveq 
   21d25:	retq   
   21d26:	lea    0x34(%rsi),%rax
   21d2a:	mov    %rdi,%rcx
   21d2d:	mov    %r14,-0x8(%rbp)
   21d31:	mov    %r15,-0x10(%rbp)
   21d35:	mov    %rsi,%r14
   21d38:	mov    %rax,%rsi
   21d3b:	mov    %rdi,%r15
   21d3e:	mov    %rcx,%rdi
   21d41:	callq  71e0 <png_colorspace_set_sRGB>
   21d46:	mov    %r14,%rsi
   21d49:	mov    %r15,%rdi
   21d4c:	callq  6f70 <png_colorspace_sync_info>
   21d51:	mov    -0x10(%rbp),%r15
   21d55:	mov    -0x8(%rbp),%r14
   21d59:	leaveq 
   21d5a:	retq   
   21d5b:	nopl   0x0(%rax,%rax,1)

0000000000021d60 <png_set_sRGB_gAMA_and_cHRM>:
   21d60:	push   %rbp
   21d61:	mov    %rsp,%rbp
   21d64:	sub    $0x10,%rsp
   21d68:	test   %rdi,%rdi
   21d6b:	jne    21d6f <png_set_sRGB_gAMA_and_cHRM+0xf>
   21d6d:	leaveq 
   21d6e:	retq   
   21d6f:	test   %rsi,%rsi
   21d72:	jne    21d76 <png_set_sRGB_gAMA_and_cHRM+0x16>
   21d74:	leaveq 
   21d75:	retq   
   21d76:	lea    0x34(%rsi),%rax
   21d7a:	mov    %rdi,%rcx
   21d7d:	mov    %r14,-0x8(%rbp)
   21d81:	mov    %r15,-0x10(%rbp)
   21d85:	mov    %rdi,%r14
   21d88:	mov    %rcx,%rdi
   21d8b:	mov    %rsi,%r15
   21d8e:	mov    %rax,%rsi
   21d91:	callq  71e0 <png_colorspace_set_sRGB>
   21d96:	test   %eax,%eax
   21d98:	je     21da8 <png_set_sRGB_gAMA_and_cHRM+0x48>
   21d9a:	movzwl 0x7e(%r15),%eax
   21d9f:	or     $0x18,%ax
   21da3:	mov    %ax,0x7e(%r15)
   21da8:	mov    %r15,%rsi
   21dab:	mov    %r14,%rdi
   21dae:	callq  6f70 <png_colorspace_sync_info>
   21db3:	mov    -0x10(%rbp),%r15
   21db7:	mov    -0x8(%rbp),%r14
   21dbb:	leaveq 
   21dbc:	retq   
   21dbd:	nopl   (%rax)

0000000000021dc0 <png_set_iCCP>:
   21dc0:	push   %rbp
   21dc1:	mov    %rsp,%rbp
   21dc4:	sub    $0x40,%rsp
   21dc8:	test   %rdi,%rdi
   21dcb:	jne    21dcf <png_set_iCCP+0xf>
   21dcd:	leaveq 
   21dce:	retq   
   21dcf:	test   %rsi,%rsi
   21dd2:	jne    21dd6 <png_set_iCCP+0x16>
   21dd4:	leaveq 
   21dd5:	retq   
   21dd6:	test   %rdx,%rdx
   21dd9:	jne    21ddd <png_set_iCCP+0x1d>
   21ddb:	leaveq 
   21ddc:	retq   
   21ddd:	test   %r8,%r8
   21de0:	jne    21de4 <png_set_iCCP+0x24>
   21de2:	leaveq 
   21de3:	retq   
   21de4:	test   %ecx,%ecx
   21de6:	jne    21ded <png_set_iCCP+0x2d>
   21de8:	mov    %r9,%rcx
   21deb:	jmp    21e48 <png_set_iCCP+0x88>
   21ded:	lea    0xd277(%rip),%rcx        # 2f06b <png_pass_inc.20+0x7f8>
   21df4:	mov    %rdi,%rax
   21df7:	mov    %rbx,-0x18(%rbp)
   21dfb:	mov    %r12,-0x20(%rbp)
   21dff:	mov    %r13,-0x28(%rbp)
   21e03:	mov    %r14,-0x30(%rbp)
   21e07:	mov    %r15,-0x38(%rbp)
   21e0b:	mov    %r8,%rbx
   21e0e:	mov    %rdx,%r12
   21e11:	mov    %rsi,%r13
   21e14:	mov    %rcx,%rsi
   21e17:	mov    %rdi,%r14
   21e1a:	mov    %rax,%rdi
   21e1d:	mov    %r9,%r15
   21e20:	callq  b110 <png_app_error>
   21e25:	mov    %r15,%rcx
   21e28:	mov    %r12,%rdx
   21e2b:	mov    %r13,%rsi
   21e2e:	mov    %r14,%rdi
   21e31:	mov    %rbx,%r8
   21e34:	mov    -0x38(%rbp),%r15
   21e38:	mov    -0x30(%rbp),%r14
   21e3c:	mov    -0x28(%rbp),%r13
   21e40:	mov    -0x20(%rbp),%r12
   21e44:	mov    -0x18(%rbp),%rbx
   21e48:	lea    0x34(%rsi),%rax
   21e4c:	movzbl 0x25(%rsi),%r9d
   21e51:	mov    %rdi,%r10
   21e54:	mov    %rdx,%r11
   21e57:	mov    %rcx,-0x28(%rbp)
   21e5b:	mov    %r8,-0x10(%rbp)
   21e5f:	mov    %r14,-0x18(%rbp)
   21e63:	mov    %r15,-0x20(%rbp)
   21e67:	mov    %rdx,-0x38(%rbp)
   21e6b:	mov    %r11,%rdx
   21e6e:	mov    %rsi,%r14
   21e71:	mov    %rax,%rsi
   21e74:	mov    %rdi,%r15
   21e77:	mov    %r10,%rdi
   21e7a:	callq  73e0 <png_colorspace_set_ICC>
   21e7f:	mov    %r15,%rdi
   21e82:	mov    %r14,%rsi
   21e85:	mov    %r15,-0x30(%rbp)
   21e89:	mov    %rax,%r15
   21e8c:	callq  6f70 <png_colorspace_sync_info>
   21e91:	test   %r15d,%r15d
   21e94:	jne    21ea0 <png_set_iCCP+0xe0>
   21e96:	mov    -0x20(%rbp),%r15
   21e9a:	mov    -0x18(%rbp),%r14
   21e9e:	leaveq 
   21e9f:	retq   
   21ea0:	movzwl 0x7e(%r14),%eax
   21ea5:	or     $0x18,%ax
   21ea9:	mov    %ax,0x7e(%r14)
   21eae:	mov    -0x38(%rbp),%r15
   21eb2:	mov    %r15,%rdi
   21eb5:	callq  5260 <strlen@plt>
   21eba:	lea    0x1(%rax),%rcx
   21ebe:	mov    -0x30(%rbp),%rax
   21ec2:	mov    %rax,%rdi
   21ec5:	mov    %rcx,%rsi
   21ec8:	mov    %r13,-0x38(%rbp)
   21ecc:	mov    %r14,-0x8(%rbp)
   21ed0:	mov    %rax,%r13
   21ed3:	mov    %rcx,%r14
   21ed6:	callq  5150 <png_malloc_warn@plt>
   21edb:	test   %rax,%rax
   21ede:	je     21f7d <png_set_iCCP+0x1bd>
   21ee4:	mov    %r14,%rdx
   21ee7:	mov    %rax,%r14
   21eea:	mov    %r15,%rsi
   21eed:	mov    %r14,%rdi
   21ef0:	callq  54c0 <memcpy@plt>
   21ef5:	mov    -0x28(%rbp),%rax
   21ef9:	mov    %eax,%r15d
   21efc:	mov    %r13,%rdi
   21eff:	mov    %r15,%rsi
   21f02:	callq  5150 <png_malloc_warn@plt>
   21f07:	test   %rax,%rax
   21f0a:	je     21f9a <png_set_iCCP+0x1da>
   21f10:	mov    %r15,%rdx
   21f13:	mov    %rax,%r15
   21f16:	mov    %r15,%rdi
   21f19:	mov    -0x10(%rbp),%rsi
   21f1d:	callq  54c0 <memcpy@plt>
   21f22:	mov    %r13,%rdi
   21f25:	mov    $0x10,%edx
   21f2a:	xor    %ecx,%ecx
   21f2c:	mov    -0x8(%rbp),%r13
   21f30:	mov    %r13,%rsi
   21f33:	callq  5720 <png_free_data@plt>
   21f38:	mov    -0x28(%rbp),%rax
   21f3c:	mov    %eax,0x90(%r13)
   21f43:	mov    %r14,0x80(%r13)
   21f4a:	mov    %r15,0x88(%r13)
   21f51:	mov    0x12c(%r13),%eax
   21f58:	or     $0x10,%eax
   21f5b:	mov    %eax,0x12c(%r13)
   21f62:	mov    0x8(%r13),%eax
   21f66:	or     $0x1000,%eax
   21f6b:	mov    %eax,0x8(%r13)
   21f6f:	mov    -0x20(%rbp),%r15
   21f73:	mov    -0x18(%rbp),%r14
   21f77:	mov    -0x38(%rbp),%r13
   21f7b:	leaveq 
   21f7c:	retq   
   21f7d:	mov    %r13,%rdi
   21f80:	lea    0xd104(%rip),%rsi        # 2f08b <png_pass_inc.20+0x818>
   21f87:	callq  5590 <png_benign_error@plt>
   21f8c:	mov    -0x20(%rbp),%r15
   21f90:	mov    -0x18(%rbp),%r14
   21f94:	mov    -0x38(%rbp),%r13
   21f98:	leaveq 
   21f99:	retq   
   21f9a:	mov    %r14,%rsi
   21f9d:	mov    %r13,%rdi
   21fa0:	callq  5790 <png_free@plt>
   21fa5:	mov    %r13,%rdi
   21fa8:	lea    0xd106(%rip),%rsi        # 2f0b5 <png_pass_inc.20+0x842>
   21faf:	callq  5590 <png_benign_error@plt>
   21fb4:	mov    -0x20(%rbp),%r15
   21fb8:	mov    -0x18(%rbp),%r14
   21fbc:	mov    -0x38(%rbp),%r13
   21fc0:	leaveq 
   21fc1:	retq   
   21fc2:	data16 nopw %cs:0x0(%rax,%rax,1)
   21fcd:	nopl   (%rax)

0000000000021fd0 <png_set_sPLT>:
   21fd0:	push   %rbp
   21fd1:	mov    %rsp,%rbp
   21fd4:	sub    $0x40,%rsp
   21fd8:	test   %rdi,%rdi
   21fdb:	jne    21fdf <png_set_sPLT+0xf>
   21fdd:	leaveq 
   21fde:	retq   
   21fdf:	test   %rsi,%rsi
   21fe2:	jne    21fe6 <png_set_sPLT+0x16>
   21fe4:	leaveq 
   21fe5:	retq   
   21fe6:	test   %ecx,%ecx
   21fe8:	jg     21fec <png_set_sPLT+0x1c>
   21fea:	leaveq 
   21feb:	retq   
   21fec:	test   %rdx,%rdx
   21fef:	jne    21ff3 <png_set_sPLT+0x23>
   21ff1:	leaveq 
   21ff2:	retq   
   21ff3:	mov    0x140(%rsi),%r11
   21ffa:	movslq 0x148(%rsi),%r9
   22001:	mov    $0x20,%r8d
   22007:	mov    %rdi,%rax
   2200a:	mov    %rcx,%r10
   2200d:	mov    %r14,-0x20(%rbp)
   22011:	mov    %r15,-0x28(%rbp)
   22015:	mov    %rcx,-0x38(%rbp)
   22019:	mov    %rdx,-0x30(%rbp)
   2201d:	mov    %r10,%rcx
   22020:	mov    %r9,%rdx
   22023:	mov    %rdi,%r14
   22026:	mov    %rax,%rdi
   22029:	mov    %rsi,%r15
   2202c:	mov    %r11,%rsi
   2202f:	callq  c990 <png_realloc_array>
   22034:	test   %rax,%rax
   22037:	je     2208e <png_set_sPLT+0xbe>
   22039:	mov    0x140(%r15),%rsi
   22040:	mov    %r14,%rdi
   22043:	mov    %r13,-0x18(%rbp)
   22047:	mov    %rax,%r13
   2204a:	callq  5790 <png_free@plt>
   2204f:	mov    %r13,0x140(%r15)
   22056:	mov    0x12c(%r15),%ecx
   2205d:	or     $0x20,%ecx
   22060:	mov    %ecx,0x12c(%r15)
   22067:	lea    0xd088(%rip),%rsi        # 2f0f6 <png_pass_inc.20+0x883>
   2206e:	movslq 0x148(%r15),%rcx
   22075:	shl    $0x5,%rcx
   22079:	add    %rcx,%r13
   2207c:	mov    %rbx,-0x8(%rbp)
   22080:	mov    %r12,-0x10(%rbp)
   22084:	mov    -0x30(%rbp),%rbx
   22088:	mov    -0x38(%rbp),%r12
   2208c:	jmp    220b3 <png_set_sPLT+0xe3>
   2208e:	mov    %r14,%rdi
   22091:	lea    0xd049(%rip),%rsi        # 2f0e1 <png_pass_inc.20+0x86e>
   22098:	mov    $0x1,%edx
   2209d:	callq  b130 <png_chunk_report>
   220a2:	mov    -0x28(%rbp),%r15
   220a6:	mov    -0x20(%rbp),%r14
   220aa:	leaveq 
   220ab:	retq   
   220ac:	lea    0xd043(%rip),%rsi        # 2f0f6 <png_pass_inc.20+0x883>
   220b3:	mov    (%rbx),%rdi
   220b6:	test   %rdi,%rdi
   220b9:	jne    220ec <png_set_sPLT+0x11c>
   220bb:	mov    %r14,%rdi
   220be:	callq  b110 <png_app_error>
   220c3:	add    $0xffffffff,%r12d
   220c7:	test   %r12d,%r12d
   220ca:	jne    220ac <png_set_sPLT+0xdc>
   220cc:	xor    %eax,%eax
   220ce:	test   %eax,%eax
   220d0:	jg     2219f <png_set_sPLT+0x1cf>
   220d6:	mov    -0x10(%rbp),%r12
   220da:	mov    -0x8(%rbp),%rbx
   220de:	mov    -0x18(%rbp),%r13
   220e2:	mov    -0x28(%rbp),%r15
   220e6:	mov    -0x20(%rbp),%r14
   220ea:	leaveq 
   220eb:	retq   
   220ec:	mov    0x10(%rbx),%rax
   220f0:	test   %rax,%rax
   220f3:	je     220bb <png_set_sPLT+0xeb>
   220f5:	movzbl 0x8(%rbx),%eax
   220f9:	mov    %al,0x8(%r13)
   220fd:	callq  5260 <strlen@plt>
   22102:	lea    0x1(%rax),%rdx
   22106:	mov    %r14,%rdi
   22109:	mov    %rdx,%rsi
   2210c:	mov    %r12,-0x38(%rbp)
   22110:	mov    %rdx,%r12
   22113:	callq  c940 <png_malloc_base>
   22118:	mov    %rax,0x0(%r13)
   2211c:	test   %rax,%rax
   2211f:	je     221c9 <png_set_sPLT+0x1f9>
   22125:	mov    %r12,%rdx
   22128:	mov    %rax,%rdi
   2212b:	mov    (%rbx),%rsi
   2212e:	callq  54c0 <memcpy@plt>
   22133:	movslq 0x18(%rbx),%rsi
   22137:	mov    %r14,%rdi
   2213a:	mov    $0xa,%edx
   2213f:	callq  c970 <png_malloc_array>
   22144:	mov    %rax,0x10(%r13)
   22148:	test   %rax,%rax
   2214b:	je     221d2 <png_set_sPLT+0x202>
   22151:	movslq 0x18(%rbx),%rcx
   22155:	mov    %ecx,0x18(%r13)
   22159:	mov    0x10(%rbx),%rsi
   2215d:	mov    0x18(%rbx),%ecx
   22160:	lea    (%rcx,%rcx,4),%rcx
   22164:	lea    (%rcx,%rcx,1),%rdx
   22168:	mov    %rax,%rdi
   2216b:	callq  54c0 <memcpy@plt>
   22170:	mov    0x8(%r15),%eax
   22174:	or     $0x2000,%eax
   22179:	mov    %eax,0x8(%r15)
   2217d:	movslq 0x148(%r15),%rax
   22184:	add    $0x1,%eax
   22187:	mov    %eax,0x148(%r15)
   2218e:	add    $0x20,%rbx
   22192:	add    $0x20,%r13
   22196:	mov    -0x38(%rbp),%r12
   2219a:	jmpq   220c3 <png_set_sPLT+0xf3>
   2219f:	mov    %r14,%rdi
   221a2:	lea    0xcf68(%rip),%rsi        # 2f111 <png_pass_inc.20+0x89e>
   221a9:	mov    $0x1,%edx
   221ae:	callq  b130 <png_chunk_report>
   221b3:	mov    -0x10(%rbp),%r12
   221b7:	mov    -0x8(%rbp),%rbx
   221bb:	mov    -0x18(%rbp),%r13
   221bf:	mov    -0x28(%rbp),%r15
   221c3:	mov    -0x20(%rbp),%r14
   221c7:	leaveq 
   221c8:	retq   
   221c9:	mov    -0x38(%rbp),%rax
   221cd:	jmpq   220ce <png_set_sPLT+0xfe>
   221d2:	mov    0x0(%r13),%rsi
   221d6:	mov    %r14,%rdi
   221d9:	callq  5790 <png_free@plt>
   221de:	movq   $0x0,0x0(%r13)
   221e6:	mov    -0x38(%rbp),%rax
   221ea:	jmpq   220ce <png_set_sPLT+0xfe>
   221ef:	nop

00000000000221f0 <png_set_text>:
   221f0:	push   %rbp
   221f1:	mov    %rsp,%rbp
   221f4:	sub    $0x10,%rsp
   221f8:	mov    %rdi,-0x8(%rbp)
   221fc:	callq  22de0 <png_set_text_2>
   22201:	test   %eax,%eax
   22203:	jne    22207 <png_set_text+0x17>
   22205:	leaveq 
   22206:	retq   
   22207:	lea    0xcf16(%rip),%rsi        # 2f124 <png_pass_inc.20+0x8b1>
   2220e:	mov    -0x8(%rbp),%rdi
   22212:	callq  5470 <png_error@plt>
   22217:	nopw   0x0(%rax,%rax,1)

0000000000022220 <png_set_tIME>:
   22220:	push   %rbp
   22221:	mov    %rsp,%rbp
   22224:	test   %rdi,%rdi
   22227:	jne    2222b <png_set_tIME+0xb>
   22229:	leaveq 
   2222a:	retq   
   2222b:	test   %rsi,%rsi
   2222e:	jne    22232 <png_set_tIME+0x12>
   22230:	leaveq 
   22231:	retq   
   22232:	test   %rdx,%rdx
   22235:	jne    22239 <png_set_tIME+0x19>
   22237:	leaveq 
   22238:	retq   
   22239:	mov    0x12c(%rdi),%eax
   2223f:	and    $0x200,%eax
   22244:	test   %eax,%eax
   22246:	je     2224a <png_set_tIME+0x2a>
   22248:	leaveq 
   22249:	retq   
   2224a:	movzbl 0x2(%rdx),%eax
   2224e:	test   %al,%al
   22250:	je     22291 <png_set_tIME+0x71>
   22252:	cmp    $0xc,%al
   22254:	ja     22291 <png_set_tIME+0x71>
   22256:	movzbl 0x3(%rdx),%eax
   2225a:	test   %al,%al
   2225c:	je     22291 <png_set_tIME+0x71>
   2225e:	cmp    $0x1f,%al
   22260:	ja     22291 <png_set_tIME+0x71>
   22262:	movzbl 0x4(%rdx),%eax
   22266:	cmp    $0x17,%al
   22268:	ja     22291 <png_set_tIME+0x71>
   2226a:	movzbl 0x5(%rdx),%eax
   2226e:	cmp    $0x3b,%al
   22270:	ja     22291 <png_set_tIME+0x71>
   22272:	movzbl 0x6(%rdx),%eax
   22276:	cmp    $0x3c,%al
   22278:	ja     22291 <png_set_tIME+0x71>
   2227a:	mov    0x8(%rsi),%eax
   2227d:	or     $0x200,%eax
   22282:	mov    (%rdx),%rcx
   22285:	mov    %eax,0x8(%rsi)
   22288:	mov    %rcx,0xa8(%rsi)
   2228f:	leaveq 
   22290:	retq   
   22291:	lea    0xceae(%rip),%rsi        # 2f146 <png_pass_inc.20+0x8d3>
   22298:	callq  5390 <png_warning@plt>
   2229d:	leaveq 
   2229e:	retq   
   2229f:	nop

00000000000222a0 <png_set_tRNS>:
   222a0:	push   %rbp
   222a1:	mov    %rsp,%rbp
   222a4:	sub    $0x30,%rsp
   222a8:	test   %rdi,%rdi
   222ab:	jne    222af <png_set_tRNS+0xf>
   222ad:	leaveq 
   222ae:	retq   
   222af:	test   %rsi,%rsi
   222b2:	jne    222b6 <png_set_tRNS+0x16>
   222b4:	leaveq 
   222b5:	retq   
   222b6:	test   %rdx,%rdx
   222b9:	je     2232a <png_set_tRNS+0x8a>
   222bb:	mov    $0x2000,%r10d
   222c1:	xor    %r11d,%r11d
   222c4:	mov    %rdi,%r9
   222c7:	mov    %rsi,%rax
   222ca:	mov    %r12,-0x8(%rbp)
   222ce:	mov    %r13,-0x10(%rbp)
   222d2:	mov    %r14,-0x18(%rbp)
   222d6:	mov    %r15,-0x20(%rbp)
   222da:	mov    %rdx,-0x28(%rbp)
   222de:	mov    %r10,%rdx
   222e1:	mov    %rsi,%r12
   222e4:	mov    %rax,%rsi
   222e7:	mov    %rcx,%r13
   222ea:	mov    %r11,%rcx
   222ed:	mov    %r8,%r14
   222f0:	mov    %rdi,%r15
   222f3:	mov    %r9,%rdi
   222f6:	callq  5720 <png_free_data@plt>
   222fb:	test   %r13d,%r13d
   222fe:	jg     22339 <png_set_tRNS+0x99>
   22300:	mov    %r13,%rcx
   22303:	mov    %r12,%rsi
   22306:	mov    %r15,%rdi
   22309:	mov    %r14,%r8
   2230c:	mov    0xb8(%rsi),%rax
   22313:	mov    %rax,0x2e8(%rdi)
   2231a:	mov    -0x20(%rbp),%r15
   2231e:	mov    -0x18(%rbp),%r14
   22322:	mov    -0x10(%rbp),%r13
   22326:	mov    -0x8(%rbp),%r12
   2232a:	test   %r8,%r8
   2232d:	jne    22350 <png_set_tRNS+0xb0>
   2232f:	mov    %cx,0x22(%rsi)
   22333:	test   %ecx,%ecx
   22335:	jne    2237d <png_set_tRNS+0xdd>
   22337:	leaveq 
   22338:	retq   
   22339:	cmp    $0x100,%r13d
   22340:	jle    22399 <png_set_tRNS+0xf9>
   22342:	mov    %r13,%rcx
   22345:	mov    %r12,%rsi
   22348:	mov    %r15,%rdi
   2234b:	mov    %r14,%r8
   2234e:	jmp    2230c <png_set_tRNS+0x6c>
   22350:	mov    $0x1,%eax
   22355:	movzbl 0x24(%rsi),%edx
   22359:	cmp    $0xf,%dl
   2235c:	jbe    223ce <png_set_tRNS+0x12e>
   2235e:	mov    (%r8),%rdx
   22361:	mov    %rdx,0xc0(%rsi)
   22368:	movzwl 0x8(%r8),%edx
   2236d:	mov    %dx,0xc8(%rsi)
   22374:	test   %ecx,%ecx
   22376:	jne    2232f <png_set_tRNS+0x8f>
   22378:	mov    %rax,%rcx
   2237b:	jmp    2232f <png_set_tRNS+0x8f>
   2237d:	mov    0x8(%rsi),%eax
   22380:	or     $0x10,%eax
   22383:	mov    %eax,0x8(%rsi)
   22386:	mov    0x12c(%rsi),%eax
   2238c:	or     $0x2000,%eax
   22391:	mov    %eax,0x12c(%rsi)
   22397:	leaveq 
   22398:	retq   
   22399:	mov    $0x100,%esi
   2239e:	mov    %r15,%rdi
   223a1:	callq  5800 <png_malloc@plt>
   223a6:	mov    %rax,%rdi
   223a9:	mov    %rdi,0xb8(%r12)
   223b1:	movslq %r13d,%rdx
   223b4:	mov    -0x28(%rbp),%rsi
   223b8:	callq  54c0 <memcpy@plt>
   223bd:	mov    %r13,%rcx
   223c0:	mov    %r12,%rsi
   223c3:	mov    %r15,%rdi
   223c6:	mov    %r14,%r8
   223c9:	jmpq   2230c <png_set_tRNS+0x6c>
   223ce:	mov    %rcx,%r9
   223d1:	mov    %rdx,%rcx
   223d4:	mov    %rax,%rdx
   223d7:	shl    %cl,%edx
   223d9:	add    $0xffffffff,%edx
   223dc:	movzbl 0x25(%rsi),%ecx
   223e0:	test   %cl,%cl
   223e2:	je     223f5 <png_set_tRNS+0x155>
   223e4:	movzbl 0x25(%rsi),%ecx
   223e8:	cmp    $0x2,%cl
   223eb:	je     22441 <png_set_tRNS+0x1a1>
   223ed:	mov    %r9,%rcx
   223f0:	jmpq   2235e <png_set_tRNS+0xbe>
   223f5:	movzwl 0x8(%r8),%ecx
   223fa:	cmp    %edx,%ecx
   223fc:	jle    223e4 <png_set_tRNS+0x144>
   223fe:	lea    0xcd5d(%rip),%rax        # 2f162 <png_pass_inc.20+0x8ef>
   22405:	mov    %r13,-0x18(%rbp)
   22409:	mov    %r14,-0x20(%rbp)
   2240d:	mov    %r15,-0x28(%rbp)
   22411:	mov    %r9,%r13
   22414:	mov    %rsi,%r14
   22417:	mov    %rax,%rsi
   2241a:	mov    %r8,%r15
   2241d:	callq  5390 <png_warning@plt>
   22422:	mov    %r13,%rcx
   22425:	mov    %r14,%rsi
   22428:	mov    %r15,%r8
   2242b:	mov    $0x1,%eax
   22430:	mov    -0x28(%rbp),%r15
   22434:	mov    -0x20(%rbp),%r14
   22438:	mov    -0x18(%rbp),%r13
   2243c:	jmpq   2235e <png_set_tRNS+0xbe>
   22441:	movzwl 0x2(%r8),%ecx
   22446:	cmp    %ecx,%edx
   22448:	jl     223fe <png_set_tRNS+0x15e>
   2244a:	movzwl 0x4(%r8),%ecx
   2244f:	cmp    %ecx,%edx
   22451:	jl     223fe <png_set_tRNS+0x15e>
   22453:	movzwl 0x6(%r8),%ecx
   22458:	cmp    %ecx,%edx
   2245a:	jl     223fe <png_set_tRNS+0x15e>
   2245c:	mov    %r9,%rcx
   2245f:	jmpq   2235e <png_set_tRNS+0xbe>
   22464:	data16 nopw %cs:0x0(%rax,%rax,1)
   2246f:	nop

0000000000022470 <png_set_sCAL>:
   22470:	push   %rbp
   22471:	mov    %rsp,%rbp
   22474:	sub    $0x50,%rsp
   22478:	xorpd  %xmm2,%xmm2
   2247c:	ucomisd %xmm2,%xmm0
   22480:	jp     22488 <png_set_sCAL+0x18>
   22482:	jbe    2250d <png_set_sCAL+0x9d>
   22488:	ucomisd %xmm2,%xmm1
   2248c:	jp     22494 <png_set_sCAL+0x24>
   2248e:	jbe    2251b <png_set_sCAL+0xab>
   22494:	lea    -0x4c(%rbp),%rax
   22498:	mov    $0x12,%r8d
   2249e:	mov    $0x5,%ecx
   224a3:	mov    %rdi,%r9
   224a6:	mov    %r13,-0x18(%rbp)
   224aa:	mov    %r14,-0x20(%rbp)
   224ae:	mov    %r15,-0x28(%rbp)
   224b2:	mov    %rsi,%r13
   224b5:	mov    %rax,%rsi
   224b8:	mov    %rdx,%r14
   224bb:	mov    %r8,%rdx
   224be:	mov    %rdi,%r15
   224c1:	mov    %r9,%rdi
   224c4:	movdqu %xmm1,-0x10(%rbp)
   224c9:	callq  8080 <png_ascii_from_fp>
   224ce:	lea    -0x3a(%rbp),%rsi
   224d2:	mov    %r15,%rdi
   224d5:	mov    $0x5,%ecx
   224da:	mov    $0x12,%edx
   224df:	movdqu -0x10(%rbp),%xmm0
   224e4:	callq  8080 <png_ascii_from_fp>
   224e9:	mov    %r14,%rdx
   224ec:	mov    %r13,%rsi
   224ef:	mov    %r15,%rdi
   224f2:	lea    -0x3a(%rbp),%r8
   224f6:	lea    -0x4c(%rbp),%rcx
   224fa:	callq  5660 <png_set_sCAL_s@plt>
   224ff:	mov    -0x28(%rbp),%r15
   22503:	mov    -0x20(%rbp),%r14
   22507:	mov    -0x18(%rbp),%r13
   2250b:	leaveq 
   2250c:	retq   
   2250d:	lea    0xcc80(%rip),%rsi        # 2f194 <png_pass_inc.20+0x921>
   22514:	callq  5390 <png_warning@plt>
   22519:	leaveq 
   2251a:	retq   
   2251b:	lea    0xcc8d(%rip),%rsi        # 2f1af <png_pass_inc.20+0x93c>
   22522:	callq  5390 <png_warning@plt>
   22527:	leaveq 
   22528:	retq   
   22529:	nopl   0x0(%rax)

0000000000022530 <png_set_sCAL_fixed>:
   22530:	push   %rbp
   22531:	mov    %rsp,%rbp
   22534:	sub    $0x50,%rsp
   22538:	test   %ecx,%ecx
   2253a:	jle    225ba <png_set_sCAL_fixed+0x8a>
   2253c:	test   %r8d,%r8d
   2253f:	jle    225c8 <png_set_sCAL_fixed+0x98>
   22545:	lea    -0x44(%rbp),%rax
   22549:	mov    $0x12,%r9d
   2254f:	mov    %rdi,%r10
   22552:	mov    %r12,-0x8(%rbp)
   22556:	mov    %r13,-0x10(%rbp)
   2255a:	mov    %r14,-0x18(%rbp)
   2255e:	mov    %r15,-0x20(%rbp)
   22562:	mov    %rdx,%r12
   22565:	mov    %r9,%rdx
   22568:	mov    %rsi,%r13
   2256b:	mov    %rax,%rsi
   2256e:	mov    %rdi,%r14
   22571:	mov    %r10,%rdi
   22574:	mov    %r8,%r15
   22577:	callq  85b0 <png_ascii_from_fixed>
   2257c:	mov    %r15,%rcx
   2257f:	lea    -0x32(%rbp),%r15
   22583:	mov    %r14,%rdi
   22586:	mov    %r15,%rsi
   22589:	mov    $0x12,%edx
   2258e:	callq  85b0 <png_ascii_from_fixed>
   22593:	mov    %r12,%rdx
   22596:	mov    %r13,%rsi
   22599:	mov    %r14,%rdi
   2259c:	mov    %r15,%r8
   2259f:	lea    -0x44(%rbp),%rcx
   225a3:	callq  5660 <png_set_sCAL_s@plt>
   225a8:	mov    -0x20(%rbp),%r15
   225ac:	mov    -0x18(%rbp),%r14
   225b0:	mov    -0x10(%rbp),%r13
   225b4:	mov    -0x8(%rbp),%r12
   225b8:	leaveq 
   225b9:	retq   
   225ba:	lea    0xcbd3(%rip),%rsi        # 2f194 <png_pass_inc.20+0x921>
   225c1:	callq  5390 <png_warning@plt>
   225c6:	leaveq 
   225c7:	retq   
   225c8:	lea    0xcbe0(%rip),%rsi        # 2f1af <png_pass_inc.20+0x93c>
   225cf:	callq  5390 <png_warning@plt>
   225d4:	leaveq 
   225d5:	retq   
   225d6:	nopw   %cs:0x0(%rax,%rax,1)

00000000000225e0 <png_set_sCAL_s>:
   225e0:	push   %rbp
   225e1:	mov    %rsp,%rbp
   225e4:	sub    $0x40,%rsp
   225e8:	test   %rdi,%rdi
   225eb:	jne    225ef <png_set_sCAL_s+0xf>
   225ed:	leaveq 
   225ee:	retq   
   225ef:	test   %rsi,%rsi
   225f2:	jne    225f6 <png_set_sCAL_s+0x16>
   225f4:	leaveq 
   225f5:	retq   
   225f6:	cmp    $0x1,%edx
   225f9:	jne    22642 <png_set_sCAL_s+0x62>
   225fb:	test   %rcx,%rcx
   225fe:	je     22636 <png_set_sCAL_s+0x56>
   22600:	mov    %rcx,%rax
   22603:	mov    %rbx,-0x10(%rbp)
   22607:	mov    %r12,-0x18(%rbp)
   2260b:	mov    %r13,-0x20(%rbp)
   2260f:	mov    %r14,-0x28(%rbp)
   22613:	mov    %r15,-0x30(%rbp)
   22617:	mov    %rsi,%rbx
   2261a:	mov    %rdx,%r12
   2261d:	mov    %r8,%r13
   22620:	mov    %rdi,%r14
   22623:	mov    %rax,%rdi
   22626:	mov    %rcx,%r15
   22629:	callq  5260 <strlen@plt>
   2262e:	test   %rax,%rax
   22631:	jne    22653 <png_set_sCAL_s+0x73>
   22633:	mov    %r14,%rdi
   22636:	lea    0xcba0(%rip),%rsi        # 2f1dd <png_pass_inc.20+0x96a>
   2263d:	callq  5470 <png_error@plt>
   22642:	cmp    $0x2,%edx
   22645:	je     225fb <png_set_sCAL_s+0x1b>
   22647:	lea    0xcb7d(%rip),%rsi        # 2f1cb <png_pass_inc.20+0x958>
   2264e:	callq  5470 <png_error@plt>
   22653:	movsbq (%r15),%rcx
   22657:	cmp    $0x2d,%cl
   2265a:	jne    22661 <png_set_sCAL_s+0x81>
   2265c:	mov    %r14,%rdi
   2265f:	jmp    22636 <png_set_sCAL_s+0x56>
   22661:	mov    %r15,%rdi
   22664:	mov    %rax,%rsi
   22667:	mov    %r15,-0x38(%rbp)
   2266b:	mov    %rax,%r15
   2266e:	callq  8910 <png_check_fp_string>
   22673:	test   %eax,%eax
   22675:	jne    2267c <png_set_sCAL_s+0x9c>
   22677:	mov    %r14,%rdi
   2267a:	jmp    22636 <png_set_sCAL_s+0x56>
   2267c:	test   %r13,%r13
   2267f:	je     22752 <png_set_sCAL_s+0x172>
   22685:	mov    %r13,%rdi
   22688:	callq  5260 <strlen@plt>
   2268d:	test   %rax,%rax
   22690:	je     22752 <png_set_sCAL_s+0x172>
   22696:	movsbq 0x0(%r13),%rcx
   2269b:	cmp    $0x2d,%cl
   2269e:	je     22752 <png_set_sCAL_s+0x172>
   226a4:	mov    %r13,%rdi
   226a7:	mov    %rax,%rsi
   226aa:	mov    %r13,-0x8(%rbp)
   226ae:	mov    %rax,%r13
   226b1:	callq  8910 <png_check_fp_string>
   226b6:	test   %eax,%eax
   226b8:	je     22752 <png_set_sCAL_s+0x172>
   226be:	mov    %r12b,0x14c(%rbx)
   226c5:	add    $0x1,%r15
   226c9:	mov    %r14,%rdi
   226cc:	mov    %r15,%rsi
   226cf:	callq  5150 <png_malloc_warn@plt>
   226d4:	mov    %rax,0x150(%rbx)
   226db:	lea    0xcb22(%rip),%r12        # 2f204 <png_pass_inc.20+0x991>
   226e2:	test   %rax,%rax
   226e5:	je     22761 <png_set_sCAL_s+0x181>
   226e7:	mov    %r15,%rdx
   226ea:	mov    %rax,%rdi
   226ed:	mov    -0x38(%rbp),%rsi
   226f1:	callq  54c0 <memcpy@plt>
   226f6:	add    $0x1,%r13
   226fa:	mov    %r14,%rdi
   226fd:	mov    %r13,%rsi
   22700:	callq  5150 <png_malloc_warn@plt>
   22705:	mov    %rax,0x158(%rbx)
   2270c:	test   %rax,%rax
   2270f:	je     22782 <png_set_sCAL_s+0x1a2>
   22711:	mov    %r13,%rdx
   22714:	mov    %rax,%rdi
   22717:	mov    -0x8(%rbp),%rsi
   2271b:	callq  54c0 <memcpy@plt>
   22720:	mov    0x8(%rbx),%eax
   22723:	or     $0x4000,%eax
   22728:	mov    %eax,0x8(%rbx)
   2272b:	mov    0x12c(%rbx),%eax
   22731:	or     $0x100,%eax
   22736:	mov    %eax,0x12c(%rbx)
   2273c:	mov    -0x30(%rbp),%r15
   22740:	mov    -0x28(%rbp),%r14
   22744:	mov    -0x20(%rbp),%r13
   22748:	mov    -0x18(%rbp),%r12
   2274c:	mov    -0x10(%rbp),%rbx
   22750:	leaveq 
   22751:	retq   
   22752:	mov    %r14,%rdi
   22755:	lea    0xca94(%rip),%rsi        # 2f1f0 <png_pass_inc.20+0x97d>
   2275c:	callq  5470 <png_error@plt>
   22761:	mov    %r12,%rsi
   22764:	mov    %r14,%rdi
   22767:	callq  5390 <png_warning@plt>
   2276c:	mov    -0x30(%rbp),%r15
   22770:	mov    -0x28(%rbp),%r14
   22774:	mov    -0x20(%rbp),%r13
   22778:	mov    -0x18(%rbp),%r12
   2277c:	mov    -0x10(%rbp),%rbx
   22780:	leaveq 
   22781:	retq   
   22782:	mov    0x150(%rbx),%rsi
   22789:	mov    %r14,%rdi
   2278c:	callq  5790 <png_free@plt>
   22791:	movq   $0x0,0x150(%rbx)
   2279c:	mov    %r12,%rsi
   2279f:	mov    %r14,%rdi
   227a2:	callq  5390 <png_warning@plt>
   227a7:	mov    -0x30(%rbp),%r15
   227ab:	mov    -0x28(%rbp),%r14
   227af:	mov    -0x20(%rbp),%r13
   227b3:	mov    -0x18(%rbp),%r12
   227b7:	mov    -0x10(%rbp),%rbx
   227bb:	leaveq 
   227bc:	retq   
   227bd:	nopl   (%rax)

00000000000227c0 <png_set_keep_unknown_chunks>:
   227c0:	push   %rbp
   227c1:	mov    %rsp,%rbp
   227c4:	sub    $0x40,%rsp
   227c8:	test   %rdi,%rdi
   227cb:	jne    227cf <png_set_keep_unknown_chunks+0xf>
   227cd:	leaveq 
   227ce:	retq   
   227cf:	test   %esi,%esi
   227d1:	js     227f3 <png_set_keep_unknown_chunks+0x33>
   227d3:	cmp    $0x3,%esi
   227d6:	jg     227f3 <png_set_keep_unknown_chunks+0x33>
   227d8:	test   %ecx,%ecx
   227da:	jle    22801 <png_set_keep_unknown_chunks+0x41>
   227dc:	test   %ecx,%ecx
   227de:	js     2280d <png_set_keep_unknown_chunks+0x4d>
   227e0:	test   %rdx,%rdx
   227e3:	jne    22819 <png_set_keep_unknown_chunks+0x59>
   227e5:	lea    0xcacb(%rip),%rsi        # 2f2b7 <chunks_to_ignore.46+0x5a>
   227ec:	callq  b110 <png_app_error>
   227f1:	leaveq 
   227f2:	retq   
   227f3:	lea    0xca39(%rip),%rsi        # 2f233 <png_pass_inc.20+0x9c0>
   227fa:	callq  b110 <png_app_error>
   227ff:	leaveq 
   22800:	retq   
   22801:	mov    %esi,0x3c0(%rdi)
   22807:	test   %ecx,%ecx
   22809:	jne    227dc <png_set_keep_unknown_chunks+0x1c>
   2280b:	leaveq 
   2280c:	retq   
   2280d:	mov    $0x12,%ecx
   22812:	lea    0xca44(%rip),%rdx        # 2f25d <chunks_to_ignore.46>
   22819:	mov    0x3c4(%rdi),%eax
   2281f:	xor    %r8d,%r8d
   22822:	mov    0x3c8(%rdi),%r9
   22829:	test   %r9,%r9
   2282c:	jne    22831 <png_set_keep_unknown_chunks+0x71>
   2282e:	mov    %r8,%rax
   22831:	lea    (%rax,%rcx,1),%r9d
   22835:	cmp    $0x33333333,%r9d
   2283c:	ja     2284e <png_set_keep_unknown_chunks+0x8e>
   2283e:	test   %esi,%esi
   22840:	jne    2285c <png_set_keep_unknown_chunks+0x9c>
   22842:	test   %eax,%eax
   22844:	jne    228b8 <png_set_keep_unknown_chunks+0xf8>
   22846:	mov    %r8,%r9
   22849:	jmpq   22904 <png_set_keep_unknown_chunks+0x144>
   2284e:	lea    0xca8d(%rip),%rsi        # 2f2e2 <chunks_to_ignore.46+0x85>
   22855:	callq  b110 <png_app_error>
   2285a:	leaveq 
   2285b:	retq   
   2285c:	lea    (%r9,%r9,4),%r8d
   22860:	mov    %r8d,%r8d
   22863:	mov    %rdi,%r9
   22866:	mov    %r13,-0x18(%rbp)
   2286a:	mov    %r14,-0x20(%rbp)
   2286e:	mov    %r15,-0x28(%rbp)
   22872:	mov    %rdx,-0x30(%rbp)
   22876:	mov    %rsi,-0x38(%rbp)
   2287a:	mov    %r8,%rsi
   2287d:	mov    %rdi,%r13
   22880:	mov    %r9,%rdi
   22883:	mov    %rax,%r14
   22886:	mov    %rcx,%r15
   22889:	callq  5800 <png_malloc@plt>
   2288e:	test   %r14d,%r14d
   22891:	jne    228c1 <png_set_keep_unknown_chunks+0x101>
   22893:	mov    %r15,%rcx
   22896:	mov    %r13,%rdi
   22899:	mov    %rax,%r9
   2289c:	mov    %r14,%rax
   2289f:	xor    %r8d,%r8d
   228a2:	mov    -0x38(%rbp),%rsi
   228a6:	mov    -0x30(%rbp),%rdx
   228aa:	mov    -0x28(%rbp),%r15
   228ae:	mov    -0x20(%rbp),%r14
   228b2:	mov    -0x18(%rbp),%r13
   228b6:	jmp    22904 <png_set_keep_unknown_chunks+0x144>
   228b8:	mov    0x3c8(%rdi),%r9
   228bf:	jmp    22904 <png_set_keep_unknown_chunks+0x144>
   228c1:	mov    0x3c8(%r13),%rsi
   228c8:	lea    (%r14,%r14,4),%ecx
   228cc:	mov    %ecx,%edx
   228ce:	mov    %rax,%rdi
   228d1:	mov    %r12,-0x10(%rbp)
   228d5:	mov    %rax,%r12
   228d8:	callq  54c0 <memcpy@plt>
   228dd:	mov    %r14,%rax
   228e0:	mov    %r15,%rcx
   228e3:	mov    %r13,%rdi
   228e6:	mov    %r12,%r9
   228e9:	mov    -0x10(%rbp),%r12
   228ed:	xor    %r8d,%r8d
   228f0:	mov    -0x38(%rbp),%rsi
   228f4:	mov    -0x30(%rbp),%rdx
   228f8:	mov    -0x28(%rbp),%r15
   228fc:	mov    -0x20(%rbp),%r14
   22900:	mov    -0x18(%rbp),%r13
   22904:	test   %r9,%r9
   22907:	jne    22921 <png_set_keep_unknown_chunks+0x161>
   22909:	mov    %r8,%rax
   2290c:	mov    %r8d,0x3c4(%rdi)
   22913:	mov    0x3c8(%rdi),%rsi
   2291a:	cmp    %rsi,%rax
   2291d:	jne    22947 <png_set_keep_unknown_chunks+0x187>
   2291f:	leaveq 
   22920:	retq   
   22921:	mov    %r13,-0x18(%rbp)
   22925:	mov    %r14,-0x20(%rbp)
   22929:	mov    %r15,-0x28(%rbp)
   2292d:	mov    %r12,-0x10(%rbp)
   22931:	mov    %rdi,-0x30(%rbp)
   22935:	mov    %rbx,-0x8(%rbp)
   22939:	mov    %r9,%rbx
   2293c:	mov    %rcx,%r12
   2293f:	mov    %rdx,%r13
   22942:	mov    %r8,%r14
   22945:	jmp    229a5 <png_set_keep_unknown_chunks+0x1e5>
   22947:	test   %rsi,%rsi
   2294a:	je     22973 <png_set_keep_unknown_chunks+0x1b3>
   2294c:	mov    %rdi,%rcx
   2294f:	mov    %r14,-0x8(%rbp)
   22953:	mov    %r15,-0x38(%rbp)
   22957:	mov    %rdi,%r14
   2295a:	mov    %rcx,%rdi
   2295d:	mov    %rax,%r15
   22960:	callq  5790 <png_free@plt>
   22965:	mov    %r15,%rax
   22968:	mov    %r14,%rdi
   2296b:	mov    -0x38(%rbp),%r15
   2296f:	mov    -0x8(%rbp),%r14
   22973:	mov    %rax,0x3c8(%rdi)
   2297a:	leaveq 
   2297b:	retq   
   2297c:	mov    %r14d,%ecx
   2297f:	lea    0x0(%r13,%rcx,1),%rdx
   22984:	mov    %rbx,%rdi
   22987:	mov    %rsi,%rcx
   2298a:	mov    %rsi,-0x38(%rbp)
   2298e:	mov    %rax,%rsi
   22991:	mov    %r8,%r15
   22994:	callq  23440 <add_one_chunk>
   22999:	add    $0x5,%r14d
   2299d:	lea    0x1(%r15),%r8d
   229a1:	mov    -0x38(%rbp),%rsi
   229a5:	cmp    %r8d,%r12d
   229a8:	ja     2297c <png_set_keep_unknown_chunks+0x1bc>
   229aa:	mov    $0x5,%edx
   229af:	mov    %rbx,-0x38(%rbp)
   229b3:	xor    %r12d,%r12d
   229b6:	mov    %rbx,%r13
   229b9:	mov    %r12,%r8
   229bc:	jmp    229f8 <png_set_keep_unknown_chunks+0x238>
   229be:	movzbl 0x4(%r13),%ecx
   229c3:	test   %cl,%cl
   229c5:	je     229f0 <png_set_keep_unknown_chunks+0x230>
   229c7:	cmp    %rbx,%r13
   229ca:	je     229e8 <png_set_keep_unknown_chunks+0x228>
   229cc:	mov    %r8,%r14
   229cf:	mov    %rax,%r15
   229d2:	mov    %rbx,%rdi
   229d5:	mov    %r13,%rsi
   229d8:	callq  54c0 <memcpy@plt>
   229dd:	mov    %r15,%rax
   229e0:	mov    %r14,%r8
   229e3:	mov    $0x5,%edx
   229e8:	add    $0x1,%r8d
   229ec:	add    $0x5,%rbx
   229f0:	add    $0x5,%r13
   229f4:	add    $0x1,%r12d
   229f8:	cmp    %eax,%r12d
   229fb:	jb     229be <png_set_keep_unknown_chunks+0x1fe>
   229fd:	test   %r8d,%r8d
   22a00:	je     22a23 <png_set_keep_unknown_chunks+0x263>
   22a02:	mov    -0x8(%rbp),%rbx
   22a06:	mov    -0x30(%rbp),%rdi
   22a0a:	mov    -0x38(%rbp),%rax
   22a0e:	mov    -0x10(%rbp),%r12
   22a12:	mov    -0x28(%rbp),%r15
   22a16:	mov    -0x20(%rbp),%r14
   22a1a:	mov    -0x18(%rbp),%r13
   22a1e:	jmpq   2290c <png_set_keep_unknown_chunks+0x14c>
   22a23:	mov    -0x30(%rbp),%rdi
   22a27:	mov    -0x38(%rbp),%rsi
   22a2b:	cmp    0x3c8(%rdi),%rsi
   22a32:	jne    22a53 <png_set_keep_unknown_chunks+0x293>
   22a34:	mov    -0x8(%rbp),%rbx
   22a38:	mov    -0x10(%rbp),%r12
   22a3c:	xor    %r8d,%r8d
   22a3f:	mov    -0x28(%rbp),%r15
   22a43:	mov    -0x20(%rbp),%r14
   22a47:	mov    -0x18(%rbp),%r13
   22a4b:	mov    %r8,%rax
   22a4e:	jmpq   2290c <png_set_keep_unknown_chunks+0x14c>
   22a53:	mov    %rdi,%r15
   22a56:	callq  5790 <png_free@plt>
   22a5b:	mov    %r15,%rdi
   22a5e:	mov    -0x8(%rbp),%rbx
   22a62:	mov    -0x10(%rbp),%r12
   22a66:	xor    %r8d,%r8d
   22a69:	mov    -0x28(%rbp),%r15
   22a6d:	mov    -0x20(%rbp),%r14
   22a71:	mov    -0x18(%rbp),%r13
   22a75:	mov    %r8,%rax
   22a78:	jmpq   2290c <png_set_keep_unknown_chunks+0x14c>
   22a7d:	nopl   (%rax)

0000000000022a80 <png_set_unknown_chunks>:
   22a80:	push   %rbp
   22a81:	mov    %rsp,%rbp
   22a84:	sub    $0x40,%rsp
   22a88:	test   %rdi,%rdi
   22a8b:	jne    22a8f <png_set_unknown_chunks+0xf>
   22a8d:	leaveq 
   22a8e:	retq   
   22a8f:	test   %rsi,%rsi
   22a92:	jne    22a96 <png_set_unknown_chunks+0x16>
   22a94:	leaveq 
   22a95:	retq   
   22a96:	test   %ecx,%ecx
   22a98:	jg     22a9c <png_set_unknown_chunks+0x1c>
   22a9a:	leaveq 
   22a9b:	retq   
   22a9c:	test   %rdx,%rdx
   22a9f:	jne    22aa3 <png_set_unknown_chunks+0x23>
   22aa1:	leaveq 
   22aa2:	retq   
   22aa3:	mov    0x130(%rsi),%r11
   22aaa:	movslq 0x138(%rsi),%r9
   22ab1:	mov    $0x20,%r8d
   22ab7:	mov    %rdi,%r10
   22aba:	mov    %rcx,%rax
   22abd:	mov    %r14,-0x20(%rbp)
   22ac1:	mov    %r15,-0x28(%rbp)
   22ac5:	mov    %rcx,-0x38(%rbp)
   22ac9:	mov    %rdx,-0x30(%rbp)
   22acd:	mov    %rax,%rcx
   22ad0:	mov    %r9,%rdx
   22ad3:	mov    %r12,%r14
   22ad6:	mov    %rsi,%r12
   22ad9:	mov    %r11,%rsi
   22adc:	mov    %rbx,%r15
   22adf:	mov    %rdi,%rbx
   22ae2:	mov    %r10,%rdi
   22ae5:	callq  c990 <png_realloc_array>
   22aea:	test   %rax,%rax
   22aed:	je     22b4c <png_set_unknown_chunks+0xcc>
   22aef:	mov    0x130(%r12),%rsi
   22af7:	mov    %rbx,%rdi
   22afa:	mov    %r13,-0x18(%rbp)
   22afe:	mov    %r14,%r13
   22b01:	mov    %rax,%r14
   22b04:	callq  5790 <png_free@plt>
   22b09:	mov    %r14,0x130(%r12)
   22b11:	mov    0x12c(%r12),%eax
   22b19:	or     $0x200,%eax
   22b1e:	mov    %eax,0x12c(%r12)
   22b26:	mov    $0x5,%edx
   22b2b:	movslq 0x138(%r12),%rcx
   22b33:	shl    $0x5,%rcx
   22b37:	add    %rcx,%r14
   22b3a:	mov    %r15,-0x8(%rbp)
   22b3e:	mov    %r13,-0x10(%rbp)
   22b42:	mov    -0x30(%rbp),%r15
   22b46:	mov    -0x38(%rbp),%r13
   22b4a:	jmp    22ba4 <png_set_unknown_chunks+0x124>
   22b4c:	mov    %rbx,%rdi
   22b4f:	mov    %r14,%r12
   22b52:	lea    0xc7b6(%rip),%rsi        # 2f30f <chunks_to_ignore.46+0xb2>
   22b59:	mov    $0x1,%edx
   22b5e:	callq  b130 <png_chunk_report>
   22b63:	mov    %r15,%rbx
   22b66:	mov    -0x28(%rbp),%r15
   22b6a:	mov    -0x20(%rbp),%r14
   22b6e:	leaveq 
   22b6f:	retq   
   22b70:	movq   $0x0,0x8(%r14)
   22b78:	movq   $0x0,0x10(%r14)
   22b80:	movslq 0x138(%r12),%rax
   22b88:	add    $0x1,%eax
   22b8b:	mov    %eax,0x138(%r12)
   22b93:	add    $0x20,%r14
   22b97:	add    $0xffffffff,%r13d
   22b9b:	add    $0x20,%r15
   22b9f:	mov    $0x5,%edx
   22ba4:	test   %r13d,%r13d
   22ba7:	jg     22bbf <png_set_unknown_chunks+0x13f>
   22ba9:	mov    -0x10(%rbp),%r12
   22bad:	mov    -0x8(%rbp),%rbx
   22bb1:	mov    -0x18(%rbp),%r13
   22bb5:	mov    -0x28(%rbp),%r15
   22bb9:	mov    -0x20(%rbp),%r14
   22bbd:	leaveq 
   22bbe:	retq   
   22bbf:	mov    %r14,%rdi
   22bc2:	mov    %r15,%rsi
   22bc5:	callq  54c0 <memcpy@plt>
   22bca:	movb   $0x0,0x4(%r14)
   22bcf:	movzbl 0x18(%r15),%esi
   22bd4:	mov    %rbx,%rdi
   22bd7:	callq  233c0 <check_location>
   22bdc:	mov    %al,0x18(%r14)
   22be0:	mov    0x10(%r15),%rsi
   22be4:	test   %rsi,%rsi
   22be7:	je     22b70 <png_set_unknown_chunks+0xf0>
   22be9:	mov    %rbx,%rdi
   22bec:	callq  c940 <png_malloc_base>
   22bf1:	mov    %rax,0x8(%r14)
   22bf5:	test   %rax,%rax
   22bf8:	je     22c17 <png_set_unknown_chunks+0x197>
   22bfa:	mov    %rax,%rdi
   22bfd:	mov    0x8(%r15),%rsi
   22c01:	mov    0x10(%r15),%rdx
   22c05:	callq  54c0 <memcpy@plt>
   22c0a:	mov    0x10(%r15),%rax
   22c0e:	mov    %rax,0x10(%r14)
   22c12:	jmpq   22b80 <png_set_unknown_chunks+0x100>
   22c17:	mov    %rbx,%rdi
   22c1a:	lea    0xc706(%rip),%rsi        # 2f327 <chunks_to_ignore.46+0xca>
   22c21:	mov    $0x1,%edx
   22c26:	callq  b130 <png_chunk_report>
   22c2b:	jmpq   22b97 <png_set_unknown_chunks+0x117>

0000000000022c30 <png_set_unknown_chunk_location>:
   22c30:	push   %rbp
   22c31:	mov    %rsp,%rbp
   22c34:	sub    $0x20,%rsp
   22c38:	test   %rdi,%rdi
   22c3b:	jne    22c3f <png_set_unknown_chunk_location+0xf>
   22c3d:	leaveq 
   22c3e:	retq   
   22c3f:	test   %rsi,%rsi
   22c42:	jne    22c46 <png_set_unknown_chunk_location+0x16>
   22c44:	leaveq 
   22c45:	retq   
   22c46:	test   %edx,%edx
   22c48:	jns    22c4c <png_set_unknown_chunk_location+0x1c>
   22c4a:	leaveq 
   22c4b:	retq   
   22c4c:	cmp    0x138(%rsi),%edx
   22c52:	jl     22c56 <png_set_unknown_chunk_location+0x26>
   22c54:	leaveq 
   22c55:	retq   
   22c56:	mov    %rcx,%rax
   22c59:	and    $0xb,%eax
   22c5c:	test   %eax,%eax
   22c5e:	je     22c96 <png_set_unknown_chunk_location+0x66>
   22c60:	mov    %rsi,%rax
   22c63:	mov    %rcx,%rsi
   22c66:	mov    0x130(%rax),%rax
   22c6d:	mov    %r14,-0x18(%rbp)
   22c71:	mov    %r15,-0x20(%rbp)
   22c75:	mov    %rax,%r14
   22c78:	mov    %rdx,%r15
   22c7b:	callq  233c0 <check_location>
   22c80:	movslq %r15d,%rcx
   22c83:	shl    $0x5,%rcx
   22c87:	mov    %al,0x18(%r14,%rcx,1)
   22c8c:	mov    -0x20(%rbp),%r15
   22c90:	mov    -0x18(%rbp),%r14
   22c94:	leaveq 
   22c95:	retq   
   22c96:	lea    0xc6a7(%rip),%rax        # 2f344 <chunks_to_ignore.46+0xe7>
   22c9d:	mov    %rdi,%r8
   22ca0:	mov    %r12,-0x8(%rbp)
   22ca4:	mov    %r13,-0x10(%rbp)
   22ca8:	mov    %r14,-0x18(%rbp)
   22cac:	mov    %r15,-0x20(%rbp)
   22cb0:	mov    %rcx,%r12
   22cb3:	mov    %rsi,%r13
   22cb6:	mov    %rax,%rsi
   22cb9:	mov    %rdi,%r14
   22cbc:	mov    %r8,%rdi
   22cbf:	mov    %rdx,%r15
   22cc2:	callq  b110 <png_app_error>
   22cc7:	and    $0x4,%r12d
   22ccb:	test   %r12d,%r12d
   22cce:	jne    22cf3 <png_set_unknown_chunk_location+0xc3>
   22cd0:	mov    %r13,%rax
   22cd3:	mov    %r15,%rdx
   22cd6:	mov    %r14,%rdi
   22cd9:	mov    $0x1,%esi
   22cde:	mov    -0x20(%rbp),%r15
   22ce2:	mov    -0x18(%rbp),%r14
   22ce6:	mov    -0x10(%rbp),%r13
   22cea:	mov    -0x8(%rbp),%r12
   22cee:	jmpq   22c66 <png_set_unknown_chunk_location+0x36>
   22cf3:	mov    %r13,%rax
   22cf6:	mov    %r15,%rdx
   22cf9:	mov    %r14,%rdi
   22cfc:	mov    $0x8,%esi
   22d01:	mov    -0x20(%rbp),%r15
   22d05:	mov    -0x18(%rbp),%r14
   22d09:	mov    -0x10(%rbp),%r13
   22d0d:	mov    -0x8(%rbp),%r12
   22d11:	jmpq   22c66 <png_set_unknown_chunk_location+0x36>
   22d16:	nopw   %cs:0x0(%rax,%rax,1)

0000000000022d20 <png_set_invalid>:
   22d20:	push   %rbp
   22d21:	mov    %rsp,%rbp
   22d24:	test   %rdi,%rdi
   22d27:	jne    22d2b <png_set_invalid+0xb>
   22d29:	leaveq 
   22d2a:	retq   
   22d2b:	test   %rsi,%rsi
   22d2e:	jne    22d32 <png_set_invalid+0x12>
   22d30:	leaveq 
   22d31:	retq   
   22d32:	not    %edx
   22d34:	and    0x8(%rsi),%edx
   22d37:	mov    %edx,0x8(%rsi)
   22d3a:	leaveq 
   22d3b:	retq   
   22d3c:	nopl   0x0(%rax)

0000000000022d40 <png_permit_mng_features>:
   22d40:	push   %rbp
   22d41:	mov    %rsp,%rbp
   22d44:	test   %rdi,%rdi
   22d47:	jne    22d4d <png_permit_mng_features+0xd>
   22d49:	xor    %eax,%eax
   22d4b:	leaveq 
   22d4c:	retq   
   22d4d:	mov    %rsi,%rax
   22d50:	and    $0x5,%eax
   22d53:	mov    %eax,0x3d8(%rdi)
   22d59:	leaveq 
   22d5a:	retq   
   22d5b:	nopl   0x0(%rax,%rax,1)

0000000000022d60 <png_set_user_limits>:
   22d60:	push   %rbp
   22d61:	mov    %rsp,%rbp
   22d64:	test   %rdi,%rdi
   22d67:	jne    22d6b <png_set_user_limits+0xb>
   22d69:	leaveq 
   22d6a:	retq   
   22d6b:	mov    %esi,0x41c(%rdi)
   22d71:	mov    %edx,0x420(%rdi)
   22d77:	leaveq 
   22d78:	retq   
   22d79:	nopl   0x0(%rax)

0000000000022d80 <png_set_chunk_cache_max>:
   22d80:	push   %rbp
   22d81:	mov    %rsp,%rbp
   22d84:	test   %rdi,%rdi
   22d87:	jne    22d8b <png_set_chunk_cache_max+0xb>
   22d89:	leaveq 
   22d8a:	retq   
   22d8b:	mov    %esi,0x424(%rdi)
   22d91:	leaveq 
   22d92:	retq   
   22d93:	data16 nopw %cs:0x0(%rax,%rax,1)
   22d9e:	xchg   %ax,%ax

0000000000022da0 <png_set_chunk_malloc_max>:
   22da0:	push   %rbp
   22da1:	mov    %rsp,%rbp
   22da4:	test   %rdi,%rdi
   22da7:	jne    22dab <png_set_chunk_malloc_max+0xb>
   22da9:	leaveq 
   22daa:	retq   
   22dab:	mov    %rsi,0x428(%rdi)
   22db2:	leaveq 
   22db3:	retq   
   22db4:	data16 nopw %cs:0x0(%rax,%rax,1)
   22dbf:	nop

0000000000022dc0 <png_set_check_for_invalid_index>:
   22dc0:	push   %rbp
   22dc1:	mov    %rsp,%rbp
   22dc4:	test   %esi,%esi
   22dc6:	jg     22dd4 <png_set_check_for_invalid_index+0x14>
   22dc8:	movl   $0xffffffff,0x25c(%rdi)
   22dd2:	leaveq 
   22dd3:	retq   
   22dd4:	movl   $0x0,0x25c(%rdi)
   22dde:	leaveq 
   22ddf:	retq   

0000000000022de0 <png_set_text_2>:
   22de0:	push   %rbp
   22de1:	mov    %rsp,%rbp
   22de4:	sub    $0x60,%rsp
   22de8:	xor    %eax,%eax
   22dea:	test   %rdi,%rdi
   22ded:	jne    22df1 <png_set_text_2+0x11>
   22def:	leaveq 
   22df0:	retq   
   22df1:	test   %rsi,%rsi
   22df4:	jne    22df8 <png_set_text_2+0x18>
   22df6:	leaveq 
   22df7:	retq   
   22df8:	test   %ecx,%ecx
   22dfa:	jg     22dfe <png_set_text_2+0x1e>
   22dfc:	leaveq 
   22dfd:	retq   
   22dfe:	test   %rdx,%rdx
   22e01:	jne    22e05 <png_set_text_2+0x25>
   22e03:	leaveq 
   22e04:	retq   
   22e05:	mov    $0x1,%r10d
   22e0b:	lea    0xc566(%rip),%r9        # 2f378 <chunks_to_ignore.46+0x11b>
   22e12:	movslq 0x94(%rsi),%r11
   22e19:	movslq 0x98(%rsi),%r8
   22e20:	sub    %r11d,%r8d
   22e23:	cmp    %r8d,%ecx
   22e26:	jg     22e53 <png_set_text_2+0x73>
   22e28:	mov    %r13,-0x18(%rbp)
   22e2c:	mov    %r14,-0x20(%rbp)
   22e30:	mov    %r15,-0x28(%rbp)
   22e34:	mov    %rbx,-0x8(%rbp)
   22e38:	mov    %r12,-0x10(%rbp)
   22e3c:	mov    %rdx,%rbx
   22e3f:	mov    %r10,%rdx
   22e42:	mov    %rsi,%r12
   22e45:	mov    %r9,%rsi
   22e48:	mov    %rdi,%r13
   22e4b:	mov    %rcx,%r14
   22e4e:	mov    %rax,%r15
   22e51:	jmp    22e9c <png_set_text_2+0xbc>
   22e53:	mov    %r11,%r8
   22e56:	xor    $0x7fffffff,%r8d
   22e5d:	cmp    %r8d,%ecx
   22e60:	jle    22ebb <png_set_text_2+0xdb>
   22e62:	mov    %rbx,%r8
   22e65:	mov    %rdx,%rbx
   22e68:	mov    %r10,%rdx
   22e6b:	mov    %r12,%r10
   22e6e:	mov    %rsi,%r12
   22e71:	mov    %r11,%r9
   22e74:	mov    %r14,%rsi
   22e77:	mov    %rcx,%r14
   22e7a:	mov    %rsi,%rcx
   22e7d:	jmpq   22f3f <png_set_text_2+0x15f>
   22e82:	mov    %r13,%rdi
   22e85:	callq  b130 <png_chunk_report>
   22e8a:	mov    $0x1,%edx
   22e8f:	lea    0xc4e2(%rip),%rsi        # 2f378 <chunks_to_ignore.46+0x11b>
   22e96:	add    $0x1,%r15d
   22e9a:	xor    %eax,%eax
   22e9c:	cmp    %r15d,%r14d
   22e9f:	jg     22fb8 <png_set_text_2+0x1d8>
   22ea5:	mov    -0x10(%rbp),%r12
   22ea9:	mov    -0x8(%rbp),%rbx
   22ead:	mov    -0x28(%rbp),%r15
   22eb1:	mov    -0x20(%rbp),%r14
   22eb5:	mov    -0x18(%rbp),%r13
   22eb9:	leaveq 
   22eba:	retq   
   22ebb:	lea    (%rcx,%r11,1),%eax
   22ebf:	cmp    $0x7ffffff6,%eax
   22ec4:	jle    22ecd <png_set_text_2+0xed>
   22ec6:	mov    $0x7fffffff,%eax
   22ecb:	jmp    22ed3 <png_set_text_2+0xf3>
   22ecd:	add    $0x8,%eax
   22ed0:	and    $0xfffffff8,%eax
   22ed3:	mov    %rax,%r10
   22ed6:	sub    %r11d,%r10d
   22ed9:	mov    0xa0(%rsi),%r8
   22ee0:	mov    %rdi,%r9
   22ee3:	mov    %rdx,-0x58(%rbp)
   22ee7:	mov    %r13,-0x38(%rbp)
   22eeb:	mov    %r14,-0x40(%rbp)
   22eef:	mov    %r15,-0x50(%rbp)
   22ef3:	mov    %rcx,-0x60(%rbp)
   22ef7:	mov    %r10,%rcx
   22efa:	mov    %r11,%rdx
   22efd:	mov    %rax,%r13
   22f00:	mov    %r12,%r14
   22f03:	mov    %rsi,%r12
   22f06:	mov    %r8,%rsi
   22f09:	mov    %rdi,%r15
   22f0c:	mov    %r9,%rdi
   22f0f:	mov    $0x38,%r8d
   22f15:	callq  c990 <png_realloc_array>
   22f1a:	mov    %r15,%rdi
   22f1d:	mov    %rbx,%r8
   22f20:	mov    %r13,%r9
   22f23:	mov    %r14,%r10
   22f26:	mov    -0x60(%rbp),%r14
   22f2a:	mov    -0x50(%rbp),%r15
   22f2e:	mov    -0x40(%rbp),%rcx
   22f32:	mov    -0x38(%rbp),%r13
   22f36:	mov    -0x58(%rbp),%rbx
   22f3a:	mov    $0x1,%edx
   22f3f:	test   %rax,%rax
   22f42:	je     23066 <png_set_text_2+0x286>
   22f48:	mov    %r15,-0x28(%rbp)
   22f4c:	mov    0xa0(%r12),%rsi
   22f54:	mov    %rcx,-0x20(%rbp)
   22f58:	mov    %rdi,%rcx
   22f5b:	mov    %r13,-0x18(%rbp)
   22f5f:	mov    %rdi,-0x60(%rbp)
   22f63:	mov    %r8,-0x8(%rbp)
   22f67:	mov    %r10,-0x10(%rbp)
   22f6b:	mov    %rcx,%rdi
   22f6e:	mov    %r9,%r13
   22f71:	mov    %rax,%r15
   22f74:	callq  5790 <png_free@plt>
   22f79:	mov    %r15,0xa0(%r12)
   22f81:	mov    0x12c(%r12),%eax
   22f89:	or     $0x4000,%eax
   22f8e:	mov    %eax,0x12c(%r12)
   22f96:	mov    %r13d,0x98(%r12)
   22f9e:	mov    -0x60(%rbp),%r13
   22fa2:	mov    $0x1,%edx
   22fa7:	xor    %eax,%eax
   22fa9:	lea    0xc3c8(%rip),%rsi        # 2f378 <chunks_to_ignore.46+0x11b>
   22fb0:	mov    %rax,%r15
   22fb3:	jmpq   22e9c <png_set_text_2+0xbc>
   22fb8:	mov    0xa0(%r12),%r8
   22fc0:	movslq 0x94(%r12),%r9
   22fc8:	movslq %r15d,%rcx
   22fcb:	lea    (%rcx,%rcx,2),%rax
   22fcf:	shl    $0x4,%rax
   22fd3:	lea    (%rax,%rcx,8),%rax
   22fd7:	mov    0x8(%rbx,%rax,1),%rdi
   22fdc:	test   %rdi,%rdi
   22fdf:	je     22e96 <png_set_text_2+0xb6>
   22fe5:	movslq (%rbx,%rax,1),%rcx
   22fe9:	cmp    $0xffffffff,%ecx
   22fec:	jl     22e82 <png_set_text_2+0xa2>
   22ff2:	cmp    $0x2,%ecx
   22ff5:	jg     22e82 <png_set_text_2+0xa2>
   22ffb:	mov    %r14,-0x58(%rbp)
   22fff:	mov    %r13,-0x38(%rbp)
   23003:	mov    %r12,-0x50(%rbp)
   23007:	mov    %r15,-0x60(%rbp)
   2300b:	mov    %rax,%r12
   2300e:	mov    %r8,%r13
   23011:	mov    %rcx,%r14
   23014:	mov    %r9,%r15
   23017:	callq  5260 <strlen@plt>
   2301c:	test   %r14d,%r14d
   2301f:	jg     23082 <png_set_text_2+0x2a2>
   23021:	mov    %r15,%rcx
   23024:	mov    %rax,%r15
   23027:	mov    %rcx,%rax
   2302a:	xor    %r14d,%r14d
   2302d:	mov    %r14,%rcx
   23030:	mov    %rcx,-0x40(%rbp)
   23034:	mov    0x10(%rbx,%r12,1),%rdi
   23039:	test   %rdi,%rdi
   2303c:	je     230a1 <png_set_text_2+0x2c1>
   2303e:	movsbq (%rdi),%rdx
   23042:	test   %dl,%dl
   23044:	je     230a1 <png_set_text_2+0x2c1>
   23046:	mov    %r14,-0x48(%rbp)
   2304a:	mov    %rax,%r14
   2304d:	callq  5260 <strlen@plt>
   23052:	movslq (%rbx,%r12,1),%rdi
   23056:	mov    %rax,%rsi
   23059:	mov    %r14,%rax
   2305c:	mov    -0x40(%rbp),%rcx
   23060:	mov    -0x48(%rbp),%r14
   23064:	jmp    230bb <png_set_text_2+0x2db>
   23066:	mov    %r8,%rbx
   23069:	mov    %r10,%r12
   2306c:	mov    %rcx,%r14
   2306f:	lea    0xc2ed(%rip),%rsi        # 2f363 <chunks_to_ignore.46+0x106>
   23076:	callq  b130 <png_chunk_report>
   2307b:	mov    $0x1,%eax
   23080:	leaveq 
   23081:	retq   
   23082:	mov    0x28(%rbx,%r12,1),%rdi
   23087:	test   %rdi,%rdi
   2308a:	jne    2312f <png_set_text_2+0x34f>
   23090:	mov    %r15,%rcx
   23093:	mov    %rax,%r15
   23096:	mov    %rcx,%rax
   23099:	xor    %r14d,%r14d
   2309c:	jmpq   23143 <png_set_text_2+0x363>
   230a1:	movslq (%rbx,%r12,1),%rdx
   230a5:	test   %edx,%edx
   230a7:	jg     230b4 <png_set_text_2+0x2d4>
   230a9:	xor    %esi,%esi
   230ab:	mov    $0xffffffffffffffff,%rdi
   230b2:	jmp    230bb <png_set_text_2+0x2db>
   230b4:	mov    $0x1,%edi
   230b9:	xor    %esi,%esi
   230bb:	mov    %rsi,-0x30(%rbp)
   230bf:	lea    (%rax,%rax,2),%rdx
   230c3:	shl    $0x4,%rdx
   230c7:	lea    (%rdx,%rax,8),%rax
   230cb:	add    %rax,%r13
   230ce:	mov    %edi,0x0(%r13)
   230d2:	lea    (%rsi,%r15,1),%rax
   230d6:	add    %r14,%rax
   230d9:	lea    0x4(%rcx,%rax,1),%rsi
   230de:	mov    -0x38(%rbp),%rdi
   230e2:	callq  c940 <png_malloc_base>
   230e7:	mov    %rax,0x8(%r13)
   230eb:	test   %rax,%rax
   230ee:	je     23158 <png_set_text_2+0x378>
   230f0:	mov    %rax,%rdi
   230f3:	mov    0x8(%rbx,%r12,1),%rsi
   230f8:	mov    %r15,%rdx
   230fb:	callq  54c0 <memcpy@plt>
   23100:	mov    0x8(%r13),%rax
   23104:	movb   $0x0,(%rax,%r15,1)
   23109:	movslq (%rbx,%r12,1),%rax
   2310d:	test   %eax,%eax
   2310f:	jg     23189 <png_set_text_2+0x3a9>
   23111:	movq   $0x0,0x28(%r13)
   23119:	movq   $0x0,0x30(%r13)
   23121:	mov    0x8(%r13),%rax
   23125:	lea    0x1(%rax,%r15,1),%rdi
   2312a:	jmpq   231dc <png_set_text_2+0x3fc>
   2312f:	mov    %r15,%r14
   23132:	mov    %rax,%r15
   23135:	callq  5260 <strlen@plt>
   2313a:	mov    %r14,%rcx
   2313d:	mov    %rax,%r14
   23140:	mov    %rcx,%rax
   23143:	mov    0x30(%rbx,%r12,1),%rdi
   23148:	test   %rdi,%rdi
   2314b:	jne    23215 <png_set_text_2+0x435>
   23151:	xor    %ecx,%ecx
   23153:	jmpq   23030 <png_set_text_2+0x250>
   23158:	lea    0xc23f(%rip),%rsi        # 2f39e <chunks_to_ignore.46+0x141>
   2315f:	mov    $0x1,%ebx
   23164:	mov    %rbx,%rdx
   23167:	mov    -0x38(%rbp),%rdi
   2316b:	callq  b130 <png_chunk_report>
   23170:	mov    %rbx,%rax
   23173:	mov    -0x10(%rbp),%r12
   23177:	mov    -0x8(%rbp),%rbx
   2317b:	mov    -0x28(%rbp),%r15
   2317f:	mov    -0x20(%rbp),%r14
   23183:	mov    -0x18(%rbp),%r13
   23187:	leaveq 
   23188:	retq   
   23189:	mov    0x8(%r13),%rax
   2318d:	lea    0x1(%rax,%r15,1),%rdi
   23192:	mov    %rdi,0x28(%r13)
   23196:	mov    0x28(%rbx,%r12,1),%rsi
   2319b:	mov    %r14,%rdx
   2319e:	callq  54c0 <memcpy@plt>
   231a3:	mov    0x28(%r13),%rax
   231a7:	movb   $0x0,(%rax,%r14,1)
   231ac:	mov    0x28(%r13),%rax
   231b0:	lea    0x1(%rax,%r14,1),%rdi
   231b5:	mov    %rdi,0x30(%r13)
   231b9:	mov    0x30(%rbx,%r12,1),%rsi
   231be:	mov    -0x40(%rbp),%r14
   231c2:	mov    %r14,%rdx
   231c5:	callq  54c0 <memcpy@plt>
   231ca:	mov    0x30(%r13),%rax
   231ce:	movb   $0x0,(%rax,%r14,1)
   231d3:	mov    0x30(%r13),%rax
   231d7:	lea    0x1(%rax,%r14,1),%rdi
   231dc:	mov    %rdi,0x10(%r13)
   231e0:	mov    -0x30(%rbp),%r14
   231e4:	test   %r14,%r14
   231e7:	je     231f6 <png_set_text_2+0x416>
   231e9:	mov    0x10(%rbx,%r12,1),%rsi
   231ee:	mov    %r14,%rdx
   231f1:	callq  54c0 <memcpy@plt>
   231f6:	mov    0x10(%r13),%rax
   231fa:	movb   $0x0,(%rax,%r14,1)
   231ff:	movslq 0x0(%r13),%rax
   23203:	test   %eax,%eax
   23205:	jg     23230 <png_set_text_2+0x450>
   23207:	mov    %r14,0x18(%r13)
   2320b:	movq   $0x0,0x20(%r13)
   23213:	jmp    2323c <png_set_text_2+0x45c>
   23215:	mov    %r15,-0x48(%rbp)
   23219:	mov    %rax,%r15
   2321c:	callq  5260 <strlen@plt>
   23221:	mov    %rax,%rcx
   23224:	mov    %r15,%rax
   23227:	mov    -0x48(%rbp),%r15
   2322b:	jmpq   23030 <png_set_text_2+0x250>
   23230:	movq   $0x0,0x18(%r13)
   23238:	mov    %r14,0x20(%r13)
   2323c:	mov    -0x50(%rbp),%r12
   23240:	movslq 0x94(%r12),%rax
   23248:	add    $0x1,%eax
   2324b:	mov    %eax,0x94(%r12)
   23253:	mov    -0x60(%rbp),%r15
   23257:	mov    -0x38(%rbp),%r13
   2325b:	mov    -0x58(%rbp),%r14
   2325f:	mov    $0x1,%edx
   23264:	lea    0xc10d(%rip),%rsi        # 2f378 <chunks_to_ignore.46+0x11b>
   2326b:	jmpq   22e96 <png_set_text_2+0xb6>

0000000000023270 <png_check_keyword>:
   23270:	push   %rbp
   23271:	mov    %rsp,%rbp
   23274:	sub    $0x120,%rsp
   2327b:	xor    %r9d,%r9d
   2327e:	test   %rsi,%rsi
   23281:	je     23298 <png_check_keyword+0x28>
   23283:	mov    $0x1,%r11d
   23289:	mov    %rsi,-0x8(%rbp)
   2328d:	mov    %r9,%rax
   23290:	mov    %rax,%rcx
   23293:	mov    %r11,%r10
   23296:	jmp    232c2 <png_check_keyword+0x52>
   23298:	movb   $0x0,(%rdx)
   2329b:	mov    %r9,%rax
   2329e:	leaveq 
   2329f:	retq   
   232a0:	cmp    $0x4e,%eax
   232a3:	ja     232cb <png_check_keyword+0x5b>
   232a5:	add    $0x1,%rsi
   232a9:	cmp    $0x20,%r8b
   232ad:	ja     232de <png_check_keyword+0x6e>
   232af:	cmp    $0xa0,%r8b
   232b3:	jbe    232e6 <png_check_keyword+0x76>
   232b5:	mov    %r8b,(%rdx)
   232b8:	add    $0x1,%rdx
   232bc:	add    $0x1,%eax
   232bf:	mov    %r9,%r10
   232c2:	movsbq (%rsi),%r8
   232c6:	test   %r8b,%r8b
   232c9:	jne    232a0 <png_check_keyword+0x30>
   232cb:	test   %eax,%eax
   232cd:	jne    232f5 <png_check_keyword+0x85>
   232cf:	mov    %r9,%rax
   232d2:	movb   $0x0,(%rdx)
   232d5:	test   %eax,%eax
   232d7:	jne    2330c <png_check_keyword+0x9c>
   232d9:	mov    %r9,%rax
   232dc:	leaveq 
   232dd:	retq   
   232de:	cmp    $0x7e,%r8b
   232e2:	jbe    232b5 <png_check_keyword+0x45>
   232e4:	jmp    232af <png_check_keyword+0x3f>
   232e6:	test   %r10d,%r10d
   232e9:	je     2331a <png_check_keyword+0xaa>
   232eb:	test   %ecx,%ecx
   232ed:	jne    232c2 <png_check_keyword+0x52>
   232ef:	movzbl %r8b,%ecx
   232f3:	jmp    232c2 <png_check_keyword+0x52>
   232f5:	test   %r10d,%r10d
   232f8:	jle    232d2 <png_check_keyword+0x62>
   232fa:	add    $0xffffffffffffffff,%rdx
   232fe:	add    $0xffffffff,%eax
   23301:	test   %ecx,%ecx
   23303:	jne    232d2 <png_check_keyword+0x62>
   23305:	mov    $0x20,%ecx
   2330a:	jmp    232d2 <png_check_keyword+0x62>
   2330c:	movsbq (%rsi),%rdx
   23310:	test   %dl,%dl
   23312:	jne    2332f <png_check_keyword+0xbf>
   23314:	test   %ecx,%ecx
   23316:	jg     23345 <png_check_keyword+0xd5>
   23318:	leaveq 
   23319:	retq   
   2331a:	movb   $0x20,(%rdx)
   2331d:	add    $0x1,%rdx
   23321:	add    $0x1,%eax
   23324:	cmp    $0x20,%r8b
   23328:	jne    233a9 <png_check_keyword+0x139>
   2332a:	mov    %r11,%r10
   2332d:	jmp    232c2 <png_check_keyword+0x52>
   2332f:	lea    0xc082(%rip),%rsi        # 2f3b8 <chunks_to_ignore.46+0x15b>
   23336:	mov    %rax,-0x20(%rbp)
   2333a:	callq  5390 <png_warning@plt>
   2333f:	mov    -0x20(%rbp),%rax
   23343:	leaveq 
   23344:	retq   
   23345:	lea    -0x120(%rbp),%r8
   2334c:	mov    %r14,-0x18(%rbp)
   23350:	mov    %r15,-0x20(%rbp)
   23354:	mov    %rax,-0x10(%rbp)
   23358:	mov    %r11,%rsi
   2335b:	mov    %rdi,%r14
   2335e:	mov    %r8,%rdi
   23361:	mov    %rcx,%r15
   23364:	mov    -0x8(%rbp),%rdx
   23368:	callq  af20 <png_warning_parameter>
   2336d:	mov    %r15,%rcx
   23370:	mov    $0x2,%esi
   23375:	mov    $0x4,%edx
   2337a:	lea    -0x120(%rbp),%r15
   23381:	mov    %r15,%rdi
   23384:	callq  af90 <png_warning_parameter_signed>
   23389:	mov    %r15,%rsi
   2338c:	mov    %r14,%rdi
   2338f:	lea    0xc034(%rip),%rdx        # 2f3ca <chunks_to_ignore.46+0x16d>
   23396:	callq  b010 <png_formatted_warning>
   2339b:	mov    -0x10(%rbp),%rax
   2339f:	mov    -0x20(%rbp),%r15
   233a3:	mov    -0x18(%rbp),%r14
   233a7:	leaveq 
   233a8:	retq   
   233a9:	movzbl %r8b,%ecx
   233ad:	mov    %r11,%r10
   233b0:	jmpq   232c2 <png_check_keyword+0x52>
   233b5:	data16 nopw %cs:0x0(%rax,%rax,1)

00000000000233c0 <check_location>:
   233c0:	push   %rbp
   233c1:	mov    %rsp,%rbp
   233c4:	sub    $0x10,%rsp
   233c8:	and    $0xb,%esi
   233cb:	test   %esi,%esi
   233cd:	je     233df <check_location+0x1f>
   233cf:	test   %esi,%esi
   233d1:	jne    233f7 <check_location+0x37>
   233d3:	lea    0xc047(%rip),%rsi        # 2f421 <chunks_to_ignore.46+0x1c4>
   233da:	callq  5470 <png_error@plt>
   233df:	mov    0x12c(%rdi),%eax
   233e5:	and    $0x8000,%eax
   233ea:	test   %eax,%eax
   233ec:	je     23407 <check_location+0x47>
   233ee:	xor    %esi,%esi
   233f0:	jmp    233cf <check_location+0xf>
   233f2:	lea    -0x1(%rsi),%eax
   233f5:	and    %eax,%esi
   233f7:	mov    %rsi,%rax
   233fa:	neg    %eax
   233fc:	and    %esi,%eax
   233fe:	cmp    %esi,%eax
   23400:	jne    233f2 <check_location+0x32>
   23402:	mov    %rsi,%rax
   23405:	leaveq 
   23406:	retq   
   23407:	lea    0xbfdf(%rip),%rsi        # 2f3ed <chunks_to_ignore.46+0x190>
   2340e:	mov    %rdi,%rax
   23411:	mov    %r15,-0x8(%rbp)
   23415:	mov    %rdi,%r15
   23418:	mov    %rax,%rdi
   2341b:	callq  b0f0 <png_app_warning>
   23420:	movzbl 0x12c(%r15),%eax
   23428:	and    $0xb,%al
   2342a:	movzbl %al,%esi
   2342d:	mov    %r15,%rdi
   23430:	mov    -0x8(%rbp),%r15
   23434:	jmp    233cf <check_location+0xf>
   23436:	nopw   %cs:0x0(%rax,%rax,1)

0000000000023440 <add_one_chunk>:
   23440:	push   %rbp
   23441:	mov    %rsp,%rbp
   23444:	sub    $0x30,%rsp
   23448:	mov    %rcx,-0x30(%rbp)
   2344c:	mov    %rbx,-0x8(%rbp)
   23450:	mov    %r12,-0x10(%rbp)
   23454:	mov    %r13,-0x18(%rbp)
   23458:	mov    %r14,-0x20(%rbp)
   2345c:	mov    %r15,-0x28(%rbp)
   23460:	mov    %rsi,%rbx
   23463:	mov    %rdi,%r12
   23466:	mov    %rdx,%r13
   23469:	mov    $0x4,%r14d
   2346f:	xor    %r15d,%r15d
   23472:	jmp    2348e <add_one_chunk+0x4e>
   23474:	mov    %r12,%rdi
   23477:	mov    %r13,%rsi
   2347a:	mov    %r14,%rdx
   2347d:	callq  53d0 <memcmp@plt>
   23482:	test   %eax,%eax
   23484:	je     234b5 <add_one_chunk+0x75>
   23486:	add    $0x5,%r12
   2348a:	add    $0x1,%r15d
   2348e:	cmp    %ebx,%r15d
   23491:	jb     23474 <add_one_chunk+0x34>
   23493:	mov    -0x30(%rbp),%r15
   23497:	test   %r15d,%r15d
   2349a:	jne    234d7 <add_one_chunk+0x97>
   2349c:	mov    %rbx,%rax
   2349f:	mov    -0x28(%rbp),%r15
   234a3:	mov    -0x20(%rbp),%r14
   234a7:	mov    -0x18(%rbp),%r13
   234ab:	mov    -0x10(%rbp),%r12
   234af:	mov    -0x8(%rbp),%rbx
   234b3:	leaveq 
   234b4:	retq   
   234b5:	mov    -0x30(%rbp),%rax
   234b9:	mov    %al,0x4(%r12)
   234be:	mov    %rbx,%rax
   234c1:	mov    -0x28(%rbp),%r15
   234c5:	mov    -0x20(%rbp),%r14
   234c9:	mov    -0x18(%rbp),%r13
   234cd:	mov    -0x10(%rbp),%r12
   234d1:	mov    -0x8(%rbp),%rbx
   234d5:	leaveq 
   234d6:	retq   
   234d7:	mov    %r14,%rdx
   234da:	mov    %r13,%rsi
   234dd:	mov    %r12,%rdi
   234e0:	callq  54c0 <memcpy@plt>
   234e5:	mov    %r15b,0x4(%r12)
   234ea:	lea    0x1(%rbx),%eax
   234ed:	mov    -0x28(%rbp),%r15
   234f1:	mov    -0x20(%rbp),%r14
   234f5:	mov    -0x18(%rbp),%r13
   234f9:	mov    -0x10(%rbp),%r12
   234fd:	mov    -0x8(%rbp),%rbx
   23501:	leaveq 
   23502:	retq   
   23503:	nopw   %cs:0x0(%rax,%rax,1)
   2350d:	nopl   (%rax)

0000000000023510 <png_set_bgr>:
   23510:	push   %rbp
   23511:	mov    %rsp,%rbp
   23514:	test   %rdi,%rdi
   23517:	jne    2351b <png_set_bgr+0xb>
   23519:	leaveq 
   2351a:	retq   
   2351b:	mov    0x134(%rdi),%eax
   23521:	or     $0x1,%eax
   23524:	mov    %eax,0x134(%rdi)
   2352a:	leaveq 
   2352b:	retq   
   2352c:	nopl   0x0(%rax)

0000000000023530 <png_set_swap_alpha>:
   23530:	push   %rbp
   23531:	mov    %rsp,%rbp
   23534:	test   %rdi,%rdi
   23537:	jne    2353b <png_set_swap_alpha+0xb>
   23539:	leaveq 
   2353a:	retq   
   2353b:	mov    0x134(%rdi),%eax
   23541:	or     $0x20000,%eax
   23546:	mov    %eax,0x134(%rdi)
   2354c:	leaveq 
   2354d:	retq   
   2354e:	xchg   %ax,%ax

0000000000023550 <png_set_invert_alpha>:
   23550:	push   %rbp
   23551:	mov    %rsp,%rbp
   23554:	test   %rdi,%rdi
   23557:	jne    2355b <png_set_invert_alpha+0xb>
   23559:	leaveq 
   2355a:	retq   
   2355b:	mov    0x134(%rdi),%eax
   23561:	or     $0x80000,%eax
   23566:	mov    %eax,0x134(%rdi)
   2356c:	leaveq 
   2356d:	retq   
   2356e:	xchg   %ax,%ax

0000000000023570 <png_set_filler>:
   23570:	push   %rbp
   23571:	mov    %rsp,%rbp
   23574:	test   %rdi,%rdi
   23577:	jne    2357b <png_set_filler+0xb>
   23579:	leaveq 
   2357a:	retq   
   2357b:	mov    0x12c(%rdi),%eax
   23581:	and    $0x8000,%eax
   23586:	test   %eax,%eax
   23588:	jne    235a7 <png_set_filler+0x37>
   2358a:	movzbl 0x267(%rdi),%eax
   23591:	test   %al,%al
   23593:	je     235d7 <png_set_filler+0x67>
   23595:	cmp    $0x2,%al
   23597:	je     235f0 <png_set_filler+0x80>
   23599:	lea    0xc1e4(%rip),%rsi        # 2f784 <fourbppswaptable+0x138>
   235a0:	callq  b110 <png_app_error>
   235a5:	leaveq 
   235a6:	retq   
   235a7:	mov    %si,0x272(%rdi)
   235ae:	mov    0x134(%rdi),%eax
   235b4:	or     $0x8000,%eax
   235b9:	mov    %eax,0x134(%rdi)
   235bf:	cmp    $0x1,%edx
   235c2:	je     235f9 <png_set_filler+0x89>
   235c4:	mov    0x130(%rdi),%eax
   235ca:	and    $0xffffff7f,%eax
   235cf:	mov    %eax,0x130(%rdi)
   235d5:	leaveq 
   235d6:	retq   
   235d7:	movzbl 0x268(%rdi),%eax
   235de:	cmp    $0x7,%al
   235e0:	ja     2360c <png_set_filler+0x9c>
   235e2:	lea    0xc163(%rip),%rsi        # 2f74c <fourbppswaptable+0x100>
   235e9:	callq  b110 <png_app_error>
   235ee:	leaveq 
   235ef:	retq   
   235f0:	movb   $0x4,0x26c(%rdi)
   235f7:	jmp    235ae <png_set_filler+0x3e>
   235f9:	mov    0x130(%rdi),%eax
   235ff:	or     $0x80,%eax
   23604:	mov    %eax,0x130(%rdi)
   2360a:	leaveq 
   2360b:	retq   
   2360c:	movb   $0x2,0x26c(%rdi)
   23613:	jmp    235ae <png_set_filler+0x3e>
   23615:	data16 nopw %cs:0x0(%rax,%rax,1)

0000000000023620 <png_set_add_alpha>:
   23620:	push   %rbp
   23621:	mov    %rsp,%rbp
   23624:	sub    $0x10,%rsp
   23628:	test   %rdi,%rdi
   2362b:	jne    2362f <png_set_add_alpha+0xf>
   2362d:	leaveq 
   2362e:	retq   
   2362f:	mov    %rdi,%rax
   23632:	mov    %r15,-0x8(%rbp)
   23636:	mov    %rdi,%r15
   23639:	mov    %rax,%rdi
   2363c:	callq  5200 <png_set_filler@plt>
   23641:	mov    0x134(%r15),%eax
   23648:	mov    %rax,%rcx
   2364b:	and    $0x8000,%ecx
   23651:	test   %ecx,%ecx
   23653:	jne    2365b <png_set_add_alpha+0x3b>
   23655:	mov    -0x8(%rbp),%r15
   23659:	leaveq 
   2365a:	retq   
   2365b:	or     $0x1000000,%eax
   23660:	mov    %eax,0x134(%r15)
   23667:	mov    -0x8(%rbp),%r15
   2366b:	leaveq 
   2366c:	retq   
   2366d:	nopl   (%rax)

0000000000023670 <png_set_swap>:
   23670:	push   %rbp
   23671:	mov    %rsp,%rbp
   23674:	test   %rdi,%rdi
   23677:	jne    2367b <png_set_swap+0xb>
   23679:	leaveq 
   2367a:	retq   
   2367b:	movzbl 0x268(%rdi),%eax
   23682:	cmp    $0x10,%al
   23684:	je     23688 <png_set_swap+0x18>
   23686:	leaveq 
   23687:	retq   
   23688:	mov    0x134(%rdi),%eax
   2368e:	or     $0x10,%eax
   23691:	mov    %eax,0x134(%rdi)
   23697:	leaveq 
   23698:	retq   
   23699:	nopl   0x0(%rax)

00000000000236a0 <png_set_packing>:
   236a0:	push   %rbp
   236a1:	mov    %rsp,%rbp
   236a4:	test   %rdi,%rdi
   236a7:	jne    236ab <png_set_packing+0xb>
   236a9:	leaveq 
   236aa:	retq   
   236ab:	movzbl 0x268(%rdi),%eax
   236b2:	cmp    $0x7,%al
   236b4:	jbe    236b8 <png_set_packing+0x18>
   236b6:	leaveq 
   236b7:	retq   
   236b8:	mov    0x134(%rdi),%eax
   236be:	or     $0x4,%eax
   236c1:	mov    %eax,0x134(%rdi)
   236c7:	movb   $0x8,0x269(%rdi)
   236ce:	leaveq 
   236cf:	retq   

00000000000236d0 <png_set_packswap>:
   236d0:	push   %rbp
   236d1:	mov    %rsp,%rbp
   236d4:	test   %rdi,%rdi
   236d7:	jne    236db <png_set_packswap+0xb>
   236d9:	leaveq 
   236da:	retq   
   236db:	movzbl 0x268(%rdi),%eax
   236e2:	cmp    $0x7,%al
   236e4:	jbe    236e8 <png_set_packswap+0x18>
   236e6:	leaveq 
   236e7:	retq   
   236e8:	mov    0x134(%rdi),%eax
   236ee:	or     $0x10000,%eax
   236f3:	mov    %eax,0x134(%rdi)
   236f9:	leaveq 
   236fa:	retq   
   236fb:	nopl   0x0(%rax,%rax,1)

0000000000023700 <png_set_shift>:
   23700:	push   %rbp
   23701:	mov    %rsp,%rbp
   23704:	test   %rdi,%rdi
   23707:	jne    2370b <png_set_shift+0xb>
   23709:	leaveq 
   2370a:	retq   
   2370b:	mov    0x134(%rdi),%eax
   23711:	or     $0x8,%eax
   23714:	mov    %eax,0x134(%rdi)
   2371a:	mov    (%rsi),%eax
   2371c:	mov    %eax,0x2dd(%rdi)
   23722:	movzbl 0x4(%rsi),%eax
   23726:	mov    %al,0x2e1(%rdi)
   2372c:	leaveq 
   2372d:	retq   
   2372e:	xchg   %ax,%ax

0000000000023730 <png_set_interlace_handling>:
   23730:	push   %rbp
   23731:	mov    %rsp,%rbp
   23734:	mov    $0x1,%eax
   23739:	test   %rdi,%rdi
   2373c:	jne    23740 <png_set_interlace_handling+0x10>
   2373e:	leaveq 
   2373f:	retq   
   23740:	movzbl 0x264(%rdi),%ecx
   23747:	test   %cl,%cl
   23749:	jne    2374d <png_set_interlace_handling+0x1d>
   2374b:	leaveq 
   2374c:	retq   
   2374d:	mov    0x134(%rdi),%eax
   23753:	or     $0x2,%eax
   23756:	mov    %eax,0x134(%rdi)
   2375c:	mov    $0x7,%eax
   23761:	leaveq 
   23762:	retq   
   23763:	data16 nopw %cs:0x0(%rax,%rax,1)
   2376e:	xchg   %ax,%ax

0000000000023770 <png_set_invert_mono>:
   23770:	push   %rbp
   23771:	mov    %rsp,%rbp
   23774:	test   %rdi,%rdi
   23777:	jne    2377b <png_set_invert_mono+0xb>
   23779:	leaveq 
   2377a:	retq   
   2377b:	mov    0x134(%rdi),%eax
   23781:	or     $0x20,%eax
   23784:	mov    %eax,0x134(%rdi)
   2378a:	leaveq 
   2378b:	retq   
   2378c:	nopl   0x0(%rax)

0000000000023790 <png_set_user_transform_info>:
   23790:	push   %rbp
   23791:	mov    %rsp,%rbp
   23794:	test   %rdi,%rdi
   23797:	jne    2379b <png_set_user_transform_info+0xb>
   23799:	leaveq 
   2379a:	retq   
   2379b:	mov    0x12c(%rdi),%eax
   237a1:	and    $0x8000,%eax
   237a6:	test   %eax,%eax
   237a8:	jne    237bf <png_set_user_transform_info+0x2f>
   237aa:	mov    %rsi,0x120(%rdi)
   237b1:	mov    %dl,0x128(%rdi)
   237b7:	mov    %cl,0x129(%rdi)
   237bd:	leaveq 
   237be:	retq   
   237bf:	mov    0x130(%rdi),%eax
   237c5:	and    $0x40,%eax
   237c8:	test   %eax,%eax
   237ca:	je     237aa <png_set_user_transform_info+0x1a>
   237cc:	lea    0xbfda(%rip),%rsi        # 2f7ad <fourbppswaptable+0x161>
   237d3:	callq  b110 <png_app_error>
   237d8:	leaveq 
   237d9:	retq   
   237da:	nopw   0x0(%rax,%rax,1)

00000000000237e0 <png_get_user_transform_ptr>:
   237e0:	push   %rbp
   237e1:	mov    %rsp,%rbp
   237e4:	test   %rdi,%rdi
   237e7:	jne    237ed <png_get_user_transform_ptr+0xd>
   237e9:	xor    %eax,%eax
   237eb:	leaveq 
   237ec:	retq   
   237ed:	mov    0x120(%rdi),%rax
   237f4:	leaveq 
   237f5:	retq   
   237f6:	nopw   %cs:0x0(%rax,%rax,1)

0000000000023800 <png_get_current_row_number>:
   23800:	push   %rbp
   23801:	mov    %rsp,%rbp
   23804:	test   %rdi,%rdi
   23807:	jne    23810 <png_get_current_row_number+0x10>
   23809:	mov    $0xffffffff,%eax
   2380e:	leaveq 
   2380f:	retq   
   23810:	mov    0x214(%rdi),%eax
   23816:	leaveq 
   23817:	retq   
   23818:	nopl   0x0(%rax,%rax,1)

0000000000023820 <png_get_current_pass_number>:
   23820:	push   %rbp
   23821:	mov    %rsp,%rbp
   23824:	test   %rdi,%rdi
   23827:	jne    23830 <png_get_current_pass_number+0x10>
   23829:	mov    $0x8,%eax
   2382e:	leaveq 
   2382f:	retq   
   23830:	movzbl 0x265(%rdi),%eax
   23837:	leaveq 
   23838:	retq   
   23839:	nopl   0x0(%rax)

0000000000023840 <png_do_strip_channel>:
   23840:	push   %rbp
   23841:	mov    %rsp,%rbp
   23844:	mov    %rsi,%r8
   23847:	add    0x8(%rdi),%r8
   2384b:	movzbl 0x12(%rdi),%eax
   2384f:	cmp    $0x2,%al
   23851:	je     23859 <png_do_strip_channel+0x19>
   23853:	cmp    $0x4,%al
   23855:	je     23867 <png_do_strip_channel+0x27>
   23857:	leaveq 
   23858:	retq   
   23859:	movzbl 0x11(%rdi),%eax
   2385d:	cmp    $0x8,%al
   2385f:	je     23875 <png_do_strip_channel+0x35>
   23861:	cmp    $0x10,%al
   23863:	je     23883 <png_do_strip_channel+0x43>
   23865:	leaveq 
   23866:	retq   
   23867:	movzbl 0x11(%rdi),%eax
   2386b:	cmp    $0x8,%al
   2386d:	je     23894 <png_do_strip_channel+0x54>
   2386f:	cmp    $0x10,%al
   23871:	je     238a9 <png_do_strip_channel+0x69>
   23873:	leaveq 
   23874:	retq   
   23875:	test   %edx,%edx
   23877:	jne    238be <png_do_strip_channel+0x7e>
   23879:	lea    0x2(%rsi),%rcx
   2387d:	lea    0x1(%rsi),%rax
   23881:	jmp    238d4 <png_do_strip_channel+0x94>
   23883:	test   %edx,%edx
   23885:	jne    238f7 <png_do_strip_channel+0xb7>
   23887:	lea    0x4(%rsi),%rcx
   2388b:	lea    0x2(%rsi),%rax
   2388f:	jmpq   23914 <png_do_strip_channel+0xd4>
   23894:	test   %edx,%edx
   23896:	jne    2391f <png_do_strip_channel+0xdf>
   2389c:	lea    0x4(%rsi),%rcx
   238a0:	lea    0x3(%rsi),%rax
   238a4:	jmpq   23943 <png_do_strip_channel+0x103>
   238a9:	test   %edx,%edx
   238ab:	jne    2395f <png_do_strip_channel+0x11f>
   238b1:	lea    0x8(%rsi),%rcx
   238b5:	lea    0x6(%rsi),%rax
   238b9:	jmpq   23998 <png_do_strip_channel+0x158>
   238be:	lea    0x1(%rsi),%rcx
   238c2:	mov    %rsi,%rax
   238c5:	jmp    238d4 <png_do_strip_channel+0x94>
   238c7:	movzbl (%rcx),%edx
   238ca:	mov    %dl,(%rax)
   238cc:	add    $0x2,%rcx
   238d0:	add    $0x1,%rax
   238d4:	cmp    %rcx,%r8
   238d7:	ja     238c7 <png_do_strip_channel+0x87>
   238d9:	movb   $0x8,0x13(%rdi)
   238dd:	movb   $0x1,0x12(%rdi)
   238e1:	movzbl 0x10(%rdi),%ecx
   238e5:	cmp    $0x4,%cl
   238e8:	jne    238ee <png_do_strip_channel+0xae>
   238ea:	movb   $0x0,0x10(%rdi)
   238ee:	sub    %rsi,%rax
   238f1:	mov    %rax,0x8(%rdi)
   238f5:	leaveq 
   238f6:	retq   
   238f7:	lea    0x2(%rsi),%rcx
   238fb:	mov    %rsi,%rax
   238fe:	jmp    23914 <png_do_strip_channel+0xd4>
   23900:	movzbl (%rcx),%edx
   23903:	mov    %dl,(%rax)
   23905:	movzbl 0x1(%rcx),%edx
   23909:	mov    %dl,0x1(%rax)
   2390c:	add    $0x4,%rcx
   23910:	add    $0x2,%rax
   23914:	cmp    %rcx,%r8
   23917:	ja     23900 <png_do_strip_channel+0xc0>
   23919:	movb   $0x10,0x13(%rdi)
   2391d:	jmp    238dd <png_do_strip_channel+0x9d>
   2391f:	lea    0x1(%rsi),%rcx
   23923:	mov    %rsi,%rax
   23926:	jmp    23943 <png_do_strip_channel+0x103>
   23928:	movzbl (%rcx),%edx
   2392b:	mov    %dl,(%rax)
   2392d:	movzbl 0x1(%rcx),%edx
   23931:	mov    %dl,0x1(%rax)
   23934:	movzbl 0x2(%rcx),%edx
   23938:	mov    %dl,0x2(%rax)
   2393b:	add    $0x4,%rcx
   2393f:	add    $0x3,%rax
   23943:	cmp    %rcx,%r8
   23946:	ja     23928 <png_do_strip_channel+0xe8>
   23948:	movb   $0x18,0x13(%rdi)
   2394c:	movb   $0x3,0x12(%rdi)
   23950:	movzbl 0x10(%rdi),%ecx
   23954:	cmp    $0x6,%cl
   23957:	jne    238ee <png_do_strip_channel+0xae>
   23959:	movb   $0x2,0x10(%rdi)
   2395d:	jmp    238ee <png_do_strip_channel+0xae>
   2395f:	lea    0x2(%rsi),%rcx
   23963:	mov    %rsi,%rax
   23966:	jmp    23998 <png_do_strip_channel+0x158>
   23968:	movzbl (%rcx),%edx
   2396b:	mov    %dl,(%rax)
   2396d:	movzbl 0x1(%rcx),%edx
   23971:	mov    %dl,0x1(%rax)
   23974:	movzbl 0x2(%rcx),%edx
   23978:	mov    %dl,0x2(%rax)
   2397b:	movzbl 0x3(%rcx),%edx
   2397f:	mov    %dl,0x3(%rax)
   23982:	movzbl 0x4(%rcx),%edx
   23986:	mov    %dl,0x4(%rax)
   23989:	movzbl 0x5(%rcx),%edx
   2398d:	mov    %dl,0x5(%rax)
   23990:	add    $0x8,%rcx
   23994:	add    $0x6,%rax
   23998:	cmp    %r8,%rcx
   2399b:	jb     23968 <png_do_strip_channel+0x128>
   2399d:	movb   $0x30,0x13(%rdi)
   239a1:	jmp    2394c <png_do_strip_channel+0x10c>
   239a3:	data16 nopw %cs:0x0(%rax,%rax,1)
   239ae:	xchg   %ax,%ax

00000000000239b0 <png_do_swap>:
   239b0:	push   %rbp
   239b1:	mov    %rsp,%rbp
   239b4:	movzbl 0x11(%rdi),%eax
   239b8:	cmp    $0x10,%al
   239ba:	je     239be <png_do_swap+0xe>
   239bc:	leaveq 
   239bd:	retq   
   239be:	movzbl 0x12(%rdi),%ecx
   239c2:	imul   (%rdi),%ecx
   239c5:	xor    %eax,%eax
   239c7:	jmp    239dd <png_do_swap+0x2d>
   239c9:	movzbl 0x1(%rsi),%edx
   239cd:	movzbl (%rsi),%edi
   239d0:	mov    %dl,(%rsi)
   239d2:	mov    %dil,0x1(%rsi)
   239d6:	add    $0x1,%eax
   239d9:	add    $0x2,%rsi
   239dd:	cmp    %ecx,%eax
   239df:	jb     239c9 <png_do_swap+0x19>
   239e1:	leaveq 
   239e2:	retq   
   239e3:	data16 nopw %cs:0x0(%rax,%rax,1)
   239ee:	xchg   %ax,%ax

00000000000239f0 <png_do_packswap>:
   239f0:	push   %rbp
   239f1:	mov    %rsp,%rbp
   239f4:	movzbl 0x11(%rdi),%eax
   239f8:	cmp    $0x7,%al
   239fa:	jbe    239fe <png_do_packswap+0xe>
   239fc:	leaveq 
   239fd:	retq   
   239fe:	mov    %rsi,%rdx
   23a01:	add    0x8(%rdi),%rdx
   23a05:	cmp    $0x1,%al
   23a07:	jne    23a12 <png_do_packswap+0x22>
   23a09:	lea    0xba3c(%rip),%rax        # 2f44c <onebppswaptable>
   23a10:	jmp    23a2c <png_do_packswap+0x3c>
   23a12:	cmp    $0x2,%al
   23a14:	jne    23a33 <png_do_packswap+0x43>
   23a16:	lea    0xbb2f(%rip),%rax        # 2f54c <twobppswaptable>
   23a1d:	jmp    23a2c <png_do_packswap+0x3c>
   23a1f:	movzbl (%rsi),%ecx
   23a22:	movzbl (%rax,%rcx,1),%ecx
   23a26:	mov    %cl,(%rsi)
   23a28:	add    $0x1,%rsi
   23a2c:	cmp    %rdx,%rsi
   23a2f:	jb     23a1f <png_do_packswap+0x2f>
   23a31:	leaveq 
   23a32:	retq   
   23a33:	cmp    $0x4,%al
   23a35:	jne    23a40 <png_do_packswap+0x50>
   23a37:	lea    0xbc0e(%rip),%rax        # 2f64c <fourbppswaptable>
   23a3e:	jmp    23a2c <png_do_packswap+0x3c>
   23a40:	leaveq 
   23a41:	retq   
   23a42:	data16 nopw %cs:0x0(%rax,%rax,1)
   23a4d:	nopl   (%rax)

0000000000023a50 <png_do_invert>:
   23a50:	push   %rbp
   23a51:	mov    %rsp,%rbp
   23a54:	xor    %eax,%eax
   23a56:	movzbl 0x10(%rdi),%ecx
   23a5a:	test   %cl,%cl
   23a5c:	je     23a6e <png_do_invert+0x1e>
   23a5e:	cmp    $0x4,%cl
   23a61:	je     23a74 <png_do_invert+0x24>
   23a63:	movzbl 0x10(%rdi),%ecx
   23a67:	cmp    $0x4,%cl
   23a6a:	je     23a83 <png_do_invert+0x33>
   23a6c:	leaveq 
   23a6d:	retq   
   23a6e:	mov    0x8(%rdi),%rdx
   23a72:	jmp    23a9d <png_do_invert+0x4d>
   23a74:	movzbl 0x11(%rdi),%ecx
   23a78:	cmp    $0x8,%cl
   23a7b:	jne    23a63 <png_do_invert+0x13>
   23a7d:	mov    0x8(%rdi),%rdx
   23a81:	jmp    23ab3 <png_do_invert+0x63>
   23a83:	movzbl 0x11(%rdi),%ecx
   23a87:	cmp    $0x10,%cl
   23a8a:	je     23aba <png_do_invert+0x6a>
   23a8c:	leaveq 
   23a8d:	retq   
   23a8e:	movzbl (%rsi),%ecx
   23a91:	not    %ecx
   23a93:	mov    %cl,(%rsi)
   23a95:	add    $0x1,%rax
   23a99:	add    $0x1,%rsi
   23a9d:	cmp    %rdx,%rax
   23aa0:	jb     23a8e <png_do_invert+0x3e>
   23aa2:	leaveq 
   23aa3:	retq   
   23aa4:	movzbl (%rsi),%ecx
   23aa7:	not    %ecx
   23aa9:	mov    %cl,(%rsi)
   23aab:	add    $0x2,%rax
   23aaf:	add    $0x2,%rsi
   23ab3:	cmp    %rdx,%rax
   23ab6:	jb     23aa4 <png_do_invert+0x54>
   23ab8:	leaveq 
   23ab9:	retq   
   23aba:	mov    0x8(%rdi),%rdx
   23abe:	jmp    23ad8 <png_do_invert+0x88>
   23ac0:	movzbl (%rsi),%ecx
   23ac3:	not    %ecx
   23ac5:	mov    %cl,(%rsi)
   23ac7:	movzbl 0x1(%rsi),%ecx
   23acb:	not    %ecx
   23acd:	mov    %cl,0x1(%rsi)
   23ad0:	add    $0x4,%rax
   23ad4:	add    $0x4,%rsi
   23ad8:	cmp    %rdx,%rax
   23adb:	jb     23ac0 <png_do_invert+0x70>
   23add:	leaveq 
   23ade:	retq   
   23adf:	nop

0000000000023ae0 <png_do_bgr>:
   23ae0:	push   %rbp
   23ae1:	mov    %rsp,%rbp
   23ae4:	movzbl 0x10(%rdi),%ecx
   23ae8:	mov    %rcx,%rax
   23aeb:	and    $0x2,%eax
   23aee:	test   %eax,%eax
   23af0:	jg     23af4 <png_do_bgr+0x14>
   23af2:	leaveq 
   23af3:	retq   
   23af4:	mov    (%rdi),%r8d
   23af7:	xor    %eax,%eax
   23af9:	movzbl 0x11(%rdi),%edx
   23afd:	cmp    $0x8,%dl
   23b00:	je     23b09 <png_do_bgr+0x29>
   23b02:	cmp    $0x10,%dl
   23b05:	je     23b15 <png_do_bgr+0x35>
   23b07:	leaveq 
   23b08:	retq   
   23b09:	cmp    $0x2,%cl
   23b0c:	je     23b34 <png_do_bgr+0x54>
   23b0e:	cmp    $0x6,%cl
   23b11:	je     23b4e <png_do_bgr+0x6e>
   23b13:	leaveq 
   23b14:	retq   
   23b15:	cmp    $0x2,%cl
   23b18:	je     23b76 <png_do_bgr+0x96>
   23b1a:	cmp    $0x6,%cl
   23b1d:	je     23b9e <png_do_bgr+0xbe>
   23b1f:	leaveq 
   23b20:	retq   
   23b21:	movzbl 0x2(%rsi),%edx
   23b25:	movzbl (%rsi),%ecx
   23b28:	mov    %dl,(%rsi)
   23b2a:	mov    %cl,0x2(%rsi)
   23b2d:	add    $0x1,%eax
   23b30:	add    $0x3,%rsi
   23b34:	cmp    %r8d,%eax
   23b37:	jb     23b21 <png_do_bgr+0x41>
   23b39:	leaveq 
   23b3a:	retq   
   23b3b:	movzbl 0x2(%rsi),%edx
   23b3f:	movzbl (%rsi),%ecx
   23b42:	mov    %dl,(%rsi)
   23b44:	mov    %cl,0x2(%rsi)
   23b47:	add    $0x1,%eax
   23b4a:	add    $0x4,%rsi
   23b4e:	cmp    %eax,%r8d
   23b51:	ja     23b3b <png_do_bgr+0x5b>
   23b53:	leaveq 
   23b54:	retq   
   23b55:	movzbl 0x4(%rsi),%edx
   23b59:	movzbl (%rsi),%ecx
   23b5c:	mov    %dl,(%rsi)
   23b5e:	mov    %cl,0x4(%rsi)
   23b61:	movzbl 0x5(%rsi),%ecx
   23b65:	movzbl 0x1(%rsi),%edx
   23b69:	mov    %cl,0x1(%rsi)
   23b6c:	mov    %dl,0x5(%rsi)
   23b6f:	add    $0x1,%eax
   23b72:	add    $0x6,%rsi
   23b76:	cmp    %eax,%r8d
   23b79:	ja     23b55 <png_do_bgr+0x75>
   23b7b:	leaveq 
   23b7c:	retq   
   23b7d:	movzbl 0x4(%rsi),%edx
   23b81:	movzbl (%rsi),%ecx
   23b84:	mov    %dl,(%rsi)
   23b86:	mov    %cl,0x4(%rsi)
   23b89:	movzbl 0x5(%rsi),%edx
   23b8d:	movzbl 0x1(%rsi),%ecx
   23b91:	mov    %dl,0x1(%rsi)
   23b94:	mov    %cl,0x5(%rsi)
   23b97:	add    $0x1,%eax
   23b9a:	add    $0x8,%rsi
   23b9e:	cmp    %eax,%r8d
   23ba1:	ja     23b7d <png_do_bgr+0x9d>
   23ba3:	leaveq 
   23ba4:	retq   
   23ba5:	data16 nopw %cs:0x0(%rax,%rax,1)

0000000000023bb0 <png_do_check_palette_indexes>:
   23bb0:	push   %rbp
   23bb1:	mov    %rsp,%rbp
   23bb4:	mov    $0x1,%eax
   23bb9:	movzbl 0x11(%rsi),%ecx
   23bbd:	shl    %cl,%eax
   23bbf:	movzwl 0x258(%rdi),%ecx
   23bc6:	cmp    %ecx,%eax
   23bc8:	jg     23bcc <png_do_check_palette_indexes+0x1c>
   23bca:	leaveq 
   23bcb:	retq   
   23bcc:	test   %cx,%cx
   23bcf:	jne    23bd3 <png_do_check_palette_indexes+0x23>
   23bd1:	leaveq 
   23bd2:	retq   
   23bd3:	movzbl 0x13(%rsi),%eax
   23bd7:	mov    (%rsi),%ecx
   23bd9:	and    $0x7,%ecx
   23bdc:	imul   %ecx,%eax
   23bdf:	and    $0x7,%eax
   23be2:	mov    $0x8,%ecx
   23be7:	sub    %eax,%ecx
   23be9:	and    $0x7,%ecx
   23bec:	mov    0x8(%rsi),%rdx
   23bf0:	mov    0x228(%rdi),%rax
   23bf7:	lea    -0x1(%rdx,%rax,1),%rax
   23bfc:	xor    %edx,%edx
   23bfe:	movzbl 0x11(%rsi),%esi
   23c02:	cmp    $0x3,%sil
   23c06:	jbe    23c16 <png_do_check_palette_indexes+0x66>
   23c08:	cmp    $0x4,%sil
   23c0c:	je     23c63 <png_do_check_palette_indexes+0xb3>
   23c0e:	cmp    $0x8,%sil
   23c12:	je     23c89 <png_do_check_palette_indexes+0xd9>
   23c14:	leaveq 
   23c15:	retq   
   23c16:	cmp    $0x1,%sil
   23c1a:	je     23cb1 <png_do_check_palette_indexes+0x101>
   23c20:	cmp    $0x2,%sil
   23c24:	je     23d30 <png_do_check_palette_indexes+0x180>
   23c2a:	leaveq 
   23c2b:	retq   
   23c2c:	movzbl (%rax),%esi
   23c2f:	shr    %cl,%esi
   23c31:	and    $0xf,%esi
   23c34:	movslq 0x25c(%rdi),%r8
   23c3b:	cmp    %esi,%r8d
   23c3e:	jge    23c46 <png_do_check_palette_indexes+0x96>
   23c40:	mov    %esi,0x25c(%rdi)
   23c46:	movzbl (%rax),%esi
   23c49:	shr    %cl,%esi
   23c4b:	shr    $0x4,%esi
   23c4e:	cmp    0x25c(%rdi),%esi
   23c54:	jle    23c5c <png_do_check_palette_indexes+0xac>
   23c56:	mov    %esi,0x25c(%rdi)
   23c5c:	add    $0xffffffffffffffff,%rax
   23c60:	mov    %rdx,%rcx
   23c63:	mov    0x228(%rdi),%rsi
   23c6a:	cmp    %rax,%rsi
   23c6d:	jb     23c2c <png_do_check_palette_indexes+0x7c>
   23c6f:	leaveq 
   23c70:	retq   
   23c71:	movzbl (%rax),%ecx
   23c74:	movslq 0x25c(%rdi),%rdx
   23c7b:	cmp    %ecx,%edx
   23c7d:	jge    23c85 <png_do_check_palette_indexes+0xd5>
   23c7f:	mov    %ecx,0x25c(%rdi)
   23c85:	add    $0xffffffffffffffff,%rax
   23c89:	mov    0x228(%rdi),%rcx
   23c90:	cmp    %rax,%rcx
   23c93:	jb     23c71 <png_do_check_palette_indexes+0xc1>
   23c95:	leaveq 
   23c96:	retq   
   23c97:	movzbl (%rax),%esi
   23c9a:	shr    %cl,%esi
   23c9c:	test   %esi,%esi
   23c9e:	jle    23caa <png_do_check_palette_indexes+0xfa>
   23ca0:	movl   $0x1,0x25c(%rdi)
   23caa:	add    $0xffffffffffffffff,%rax
   23cae:	mov    %rdx,%rcx
   23cb1:	mov    0x228(%rdi),%rsi
   23cb8:	cmp    %rax,%rsi
   23cbb:	jb     23c97 <png_do_check_palette_indexes+0xe7>
   23cbd:	leaveq 
   23cbe:	retq   
   23cbf:	movzbl (%rax),%esi
   23cc2:	shr    %cl,%esi
   23cc4:	and    $0x3,%esi
   23cc7:	movslq 0x25c(%rdi),%r8
   23cce:	cmp    %esi,%r8d
   23cd1:	jge    23cd9 <png_do_check_palette_indexes+0x129>
   23cd3:	mov    %esi,0x25c(%rdi)
   23cd9:	movzbl (%rax),%esi
   23cdc:	shr    %cl,%esi
   23cde:	and    $0xc,%esi
   23ce1:	shr    $0x2,%esi
   23ce4:	movslq 0x25c(%rdi),%r8
   23ceb:	cmp    %esi,%r8d
   23cee:	jge    23cf6 <png_do_check_palette_indexes+0x146>
   23cf0:	mov    %esi,0x25c(%rdi)
   23cf6:	movzbl (%rax),%esi
   23cf9:	shr    %cl,%esi
   23cfb:	and    $0x30,%esi
   23cfe:	shr    $0x4,%esi
   23d01:	movslq 0x25c(%rdi),%r8
   23d08:	cmp    %esi,%r8d
   23d0b:	jge    23d13 <png_do_check_palette_indexes+0x163>
   23d0d:	mov    %esi,0x25c(%rdi)
   23d13:	movzbl (%rax),%esi
   23d16:	shr    %cl,%esi
   23d18:	shr    $0x6,%esi
   23d1b:	cmp    0x25c(%rdi),%esi
   23d21:	jle    23d29 <png_do_check_palette_indexes+0x179>
   23d23:	mov    %esi,0x25c(%rdi)
   23d29:	add    $0xffffffffffffffff,%rax
   23d2d:	mov    %rdx,%rcx
   23d30:	mov    0x228(%rdi),%rsi
   23d37:	cmp    %rax,%rsi
   23d3a:	jb     23cbf <png_do_check_palette_indexes+0x10f>
   23d3c:	leaveq 
   23d3d:	retq   
   23d3e:	xchg   %ax,%ax

0000000000023d40 <png_set_write_fn>:
   23d40:	push   %rbp
   23d41:	mov    %rsp,%rbp
   23d44:	test   %rdi,%rdi
   23d47:	jne    23d4b <png_set_write_fn+0xb>
   23d49:	leaveq 
   23d4a:	retq   
   23d4b:	mov    %rsi,0x108(%rdi)
   23d52:	test   %rdx,%rdx
   23d55:	jne    23d67 <png_set_write_fn+0x27>
   23d57:	lea    0x62(%rip),%rax        # 23dc0 <png_default_write_data>
   23d5e:	mov    %rax,0xf8(%rdi)
   23d65:	jmp    23d6e <png_set_write_fn+0x2e>
   23d67:	mov    %rdx,0xf8(%rdi)
   23d6e:	test   %rcx,%rcx
   23d71:	jne    23d83 <png_set_write_fn+0x43>
   23d73:	lea    0xa6(%rip),%rax        # 23e20 <png_default_flush>
   23d7a:	mov    %rax,0x290(%rdi)
   23d81:	jmp    23d8a <png_set_write_fn+0x4a>
   23d83:	mov    %rcx,0x290(%rdi)
   23d8a:	mov    0x100(%rdi),%rax
   23d91:	test   %rax,%rax
   23d94:	jne    23d98 <png_set_write_fn+0x58>
   23d96:	leaveq 
   23d97:	retq   
   23d98:	movq   $0x0,0x100(%rdi)
   23da3:	lea    0xba42(%rip),%rsi        # 2f7ec <fourbppswaptable+0x1a0>
   23daa:	callq  5390 <png_warning@plt>
   23daf:	leaveq 
   23db0:	retq   
   23db1:	data16 nopw %cs:0x0(%rax,%rax,1)
   23dbc:	nopl   0x0(%rax)

0000000000023dc0 <png_default_write_data>:
   23dc0:	push   %rbp
   23dc1:	mov    %rsp,%rbp
   23dc4:	sub    $0x10,%rsp
   23dc8:	test   %rdi,%rdi
   23dcb:	jne    23dcf <png_default_write_data+0xf>
   23dcd:	leaveq 
   23dce:	retq   
   23dcf:	mov    $0x1,%eax
   23dd4:	mov    0x108(%rdi),%rcx
   23ddb:	mov    %rdx,%r8
   23dde:	mov    %r15,-0x10(%rbp)
   23de2:	mov    %rdi,-0x8(%rbp)
   23de6:	mov    %rsi,%rdi
   23de9:	mov    %rax,%rsi
   23dec:	mov    %rdx,%r15
   23def:	mov    %r8,%rdx
   23df2:	callq  5840 <fwrite@plt>
   23df7:	cmp    %r15,%rax
   23dfa:	jne    23e02 <png_default_write_data+0x42>
   23dfc:	mov    -0x10(%rbp),%r15
   23e00:	leaveq 
   23e01:	retq   
   23e02:	lea    0xba27(%rip),%rsi        # 2f830 <fourbppswaptable+0x1e4>
   23e09:	mov    -0x8(%rbp),%rdi
   23e0d:	callq  5470 <png_error@plt>
   23e12:	data16 nopw %cs:0x0(%rax,%rax,1)
   23e1d:	nopl   (%rax)

0000000000023e20 <png_default_flush>:
   23e20:	push   %rbp
   23e21:	mov    %rsp,%rbp
   23e24:	test   %rdi,%rdi
   23e27:	jne    23e2b <png_default_flush+0xb>
   23e29:	leaveq 
   23e2a:	retq   
   23e2b:	mov    0x108(%rdi),%rdi
   23e32:	callq  55d0 <fflush@plt>
   23e37:	leaveq 
   23e38:	retq   
   23e39:	nopl   0x0(%rax)

0000000000023e40 <png_write_data>:
   23e40:	push   %rbp
   23e41:	mov    %rsp,%rbp
   23e44:	mov    0xf8(%rdi),%rax
   23e4b:	test   %rax,%rax
   23e4e:	jne    23e5c <png_write_data+0x1c>
   23e50:	lea    0xb9e5(%rip),%rsi        # 2f83c <fourbppswaptable+0x1f0>
   23e57:	callq  5470 <png_error@plt>
   23e5c:	callq  *%rax
   23e5e:	leaveq 
   23e5f:	retq   

0000000000023e60 <png_flush>:
   23e60:	push   %rbp
   23e61:	mov    %rsp,%rbp
   23e64:	mov    0x290(%rdi),%rax
   23e6b:	test   %rax,%rax
   23e6e:	jne    23e72 <png_flush+0x12>
   23e70:	leaveq 
   23e71:	retq   
   23e72:	callq  *%rax
   23e74:	leaveq 
   23e75:	retq   
   23e76:	nopw   %cs:0x0(%rax,%rax,1)

0000000000023e80 <png_create_write_struct>:
   23e80:	push   %rbp
   23e81:	mov    %rsp,%rbp
   23e84:	sub    $0x10,%rsp
   23e88:	movq   $0x0,(%rsp)
   23e90:	xor    %r8d,%r8d
   23e93:	mov    %r8,%r9
   23e96:	callq  56c0 <png_create_write_struct_2@plt>
   23e9b:	leaveq 
   23e9c:	retq   
   23e9d:	nopl   (%rax)

0000000000023ea0 <png_create_write_struct_2>:
   23ea0:	push   %rbp
   23ea1:	mov    %rsp,%rbp
   23ea4:	sub    $0x10,%rsp
   23ea8:	mov    0x10(%rbp),%rax
   23eac:	mov    %rax,(%rsp)
   23eb0:	callq  6b80 <png_create_png_struct>
   23eb5:	test   %rax,%rax
   23eb8:	jne    23ebc <png_create_write_struct_2+0x1c>
   23eba:	leaveq 
   23ebb:	retq   
   23ebc:	movl   $0x2000,0x1b8(%rax)
   23ec6:	movl   $0x1,0x1cc(%rax)
   23ed0:	movl   $0xffffffff,0x1bc(%rax)
   23eda:	movl   $0x8,0x1c8(%rax)
   23ee4:	movl   $0xf,0x1c4(%rax)
   23eee:	movl   $0x8,0x1c0(%rax)
   23ef8:	movl   $0x0,0x1e0(%rax)
   23f02:	movl   $0xffffffff,0x1d0(%rax)
   23f0c:	movl   $0x8,0x1dc(%rax)
   23f16:	movl   $0xf,0x1d8(%rax)
   23f20:	movl   $0x8,0x1d4(%rax)
   23f2a:	mov    0x130(%rax),%ecx
   23f30:	or     $0x200000,%ecx
   23f36:	mov    %ecx,0x130(%rax)
   23f3c:	xor    %esi,%esi
   23f3e:	mov    %rsi,%rdx
   23f41:	mov    %rsi,%rcx
   23f44:	mov    %rax,%rdi
   23f47:	mov    %r15,-0x8(%rbp)
   23f4b:	mov    %rax,%r15
   23f4e:	callq  5300 <png_set_write_fn@plt>
   23f53:	mov    %r15,%rax
   23f56:	mov    -0x8(%rbp),%r15
   23f5a:	leaveq 
   23f5b:	retq   
   23f5c:	nopl   0x0(%rax)

0000000000023f60 <png_write_info_before_PLTE>:
   23f60:	push   %rbp
   23f61:	mov    %rsp,%rbp
   23f64:	sub    $0x10,%rsp
   23f68:	test   %rdi,%rdi
   23f6b:	jne    23f6f <png_write_info_before_PLTE+0xf>
   23f6d:	leaveq 
   23f6e:	retq   
   23f6f:	test   %rsi,%rsi
   23f72:	jne    23f76 <png_write_info_before_PLTE+0x16>
   23f74:	leaveq 
   23f75:	retq   
   23f76:	mov    0x12c(%rdi),%eax
   23f7c:	and    $0x400,%eax
   23f81:	test   %eax,%eax
   23f83:	je     23f87 <png_write_info_before_PLTE+0x27>
   23f85:	leaveq 
   23f86:	retq   
   23f87:	mov    %rdi,%rax
   23f8a:	mov    %r14,-0x8(%rbp)
   23f8e:	mov    %r15,-0x10(%rbp)
   23f92:	mov    %rdi,%r14
   23f95:	mov    %rax,%rdi
   23f98:	mov    %rsi,%r15
   23f9b:	callq  5140 <png_write_sig@plt>
   23fa0:	mov    0x12c(%r14),%eax
   23fa7:	and    $0x1000,%eax
   23fac:	test   %eax,%eax
   23fae:	jne    24087 <png_write_info_before_PLTE+0x127>
   23fb4:	sub    $0x10,%rsp
   23fb8:	movzbl 0x27(%r15),%edi
   23fbd:	movzbl 0x28(%r15),%eax
   23fc2:	mov    (%r15),%esi
   23fc5:	mov    0x4(%r15),%edx
   23fc9:	movzbl 0x24(%r15),%ecx
   23fce:	movzbl 0x25(%r15),%r8d
   23fd3:	movzbl 0x26(%r15),%r9d
   23fd8:	mov    %edi,(%rsp)
   23fdb:	mov    %eax,0x8(%rsp)
   23fdf:	mov    %r14,%rdi
   23fe2:	callq  277d0 <png_write_IHDR>
   23fe7:	add    $0x10,%rsp
   23feb:	movzwl 0x7e(%r15),%eax
   23ff0:	mov    %rax,%rcx
   23ff3:	and    $0x8000,%ecx
   23ff9:	test   %ecx,%ecx
   23ffb:	je     240b5 <png_write_info_before_PLTE+0x155>
   24001:	movzwl 0x7e(%r15),%eax
   24006:	and    $0x8000,%eax
   2400b:	test   %eax,%eax
   2400d:	je     240e0 <png_write_info_before_PLTE+0x180>
   24013:	movzwl 0x7e(%r15),%eax
   24018:	and    $0x8000,%eax
   2401d:	test   %eax,%eax
   2401f:	je     24128 <png_write_info_before_PLTE+0x1c8>
   24025:	mov    0x8(%r15),%eax
   24029:	and    $0x2,%eax
   2402c:	test   %eax,%eax
   2402e:	je     24044 <png_write_info_before_PLTE+0xe4>
   24030:	lea    0xb0(%r15),%rsi
   24037:	movzbl 0x25(%r15),%edx
   2403c:	mov    %r14,%rdi
   2403f:	callq  28180 <png_write_sBIT>
   24044:	movzwl 0x7e(%r15),%eax
   24049:	mov    %rax,%rcx
   2404c:	and    $0x8000,%ecx
   24052:	test   %ecx,%ecx
   24054:	je     2414b <png_write_info_before_PLTE+0x1eb>
   2405a:	mov    %r15,%rsi
   2405d:	mov    $0x1,%edx
   24062:	mov    %r14,%rdi
   24065:	callq  25860 <write_unknown_chunks>
   2406a:	mov    0x12c(%r14),%eax
   24071:	or     $0x400,%eax
   24076:	mov    %eax,0x12c(%r14)
   2407d:	mov    -0x10(%rbp),%r15
   24081:	mov    -0x8(%rbp),%r14
   24085:	leaveq 
   24086:	retq   
   24087:	mov    0x3d8(%r14),%eax
   2408e:	test   %eax,%eax
   24090:	je     23fb4 <png_write_info_before_PLTE+0x54>
   24096:	lea    0xb7f7(%rip),%rsi        # 2f894 <fourbppswaptable+0x248>
   2409d:	mov    %r14,%rdi
   240a0:	callq  5390 <png_warning@plt>
   240a5:	movl   $0x0,0x3d8(%r14)
   240b0:	jmpq   23fb4 <png_write_info_before_PLTE+0x54>
   240b5:	and    $0x8,%eax
   240b8:	test   %eax,%eax
   240ba:	jle    24001 <png_write_info_before_PLTE+0xa1>
   240c0:	mov    0x8(%r15),%eax
   240c4:	and    $0x1,%eax
   240c7:	test   %eax,%eax
   240c9:	je     24001 <png_write_info_before_PLTE+0xa1>
   240cf:	movslq 0x34(%r15),%rsi
   240d3:	mov    %r14,%rdi
   240d6:	callq  28140 <png_write_gAMA_fixed>
   240db:	jmpq   24001 <png_write_info_before_PLTE+0xa1>
   240e0:	mov    0x8(%r15),%eax
   240e4:	mov    %rax,%rcx
   240e7:	and    $0x1000,%ecx
   240ed:	test   %ecx,%ecx
   240ef:	je     24013 <png_write_info_before_PLTE+0xb3>
   240f5:	and    $0x800,%eax
   240fa:	test   %eax,%eax
   240fc:	je     2410d <png_write_info_before_PLTE+0x1ad>
   240fe:	lea    0xb7c0(%rip),%rsi        # 2f8c5 <fourbppswaptable+0x279>
   24105:	mov    %r14,%rdi
   24108:	callq  b0f0 <png_app_warning>
   2410d:	mov    0x80(%r15),%rsi
   24114:	mov    0x88(%r15),%rdx
   2411b:	mov    %r14,%rdi
   2411e:	callq  283f0 <png_write_iCCP>
   24123:	jmpq   24025 <png_write_info_before_PLTE+0xc5>
   24128:	mov    0x8(%r15),%eax
   2412c:	and    $0x800,%eax
   24131:	test   %eax,%eax
   24133:	je     24025 <png_write_info_before_PLTE+0xc5>
   24139:	movzwl 0x7c(%r15),%esi
   2413e:	mov    %r14,%rdi
   24141:	callq  28310 <png_write_sRGB>
   24146:	jmpq   24025 <png_write_info_before_PLTE+0xc5>
   2414b:	and    $0x10,%eax
   2414e:	test   %eax,%eax
   24150:	jle    2405a <png_write_info_before_PLTE+0xfa>
   24156:	mov    0x8(%r15),%eax
   2415a:	and    $0x4,%eax
   2415d:	test   %eax,%eax
   2415f:	je     2405a <png_write_info_before_PLTE+0xfa>
   24165:	lea    0x38(%r15),%rsi
   24169:	mov    %r14,%rdi
   2416c:	callq  28270 <png_write_cHRM_fixed>
   24171:	jmpq   2405a <png_write_info_before_PLTE+0xfa>
   24176:	nopw   %cs:0x0(%rax,%rax,1)

0000000000024180 <png_write_info>:
   24180:	push   %rbp
   24181:	mov    %rsp,%rbp
   24184:	sub    $0x30,%rsp
   24188:	mov    %r13,-0x18(%rbp)
   2418c:	test   %rdi,%rdi
   2418f:	jne    24193 <png_write_info+0x13>
   24191:	leaveq 
   24192:	retq   
   24193:	test   %rsi,%rsi
   24196:	jne    2419a <png_write_info+0x1a>
   24198:	leaveq 
   24199:	retq   
   2419a:	mov    %rdi,%rax
   2419d:	mov    %rsi,%rcx
   241a0:	mov    %r14,-0x20(%rbp)
   241a4:	mov    %r15,-0x28(%rbp)
   241a8:	mov    %r12,%r14
   241ab:	mov    %rsi,%r12
   241ae:	mov    %rcx,%rsi
   241b1:	mov    %rbx,%r15
   241b4:	mov    %rdi,%rbx
   241b7:	mov    %rax,%rdi
   241ba:	callq  5450 <png_write_info_before_PLTE@plt>
   241bf:	mov    0x8(%r12),%eax
   241c4:	and    $0x8,%eax
   241c7:	test   %eax,%eax
   241c9:	jne    241e4 <png_write_info+0x64>
   241cb:	movzbl 0x25(%r12),%eax
   241d1:	cmp    $0x3,%al
   241d3:	jne    241f7 <png_write_info+0x77>
   241d5:	mov    %rbx,%rdi
   241d8:	lea    0xb714(%rip),%rsi        # 2f8f3 <fourbppswaptable+0x2a7>
   241df:	callq  5470 <png_error@plt>
   241e4:	mov    0x18(%r12),%rsi
   241e9:	movzwl 0x20(%r12),%edx
   241ef:	mov    %rbx,%rdi
   241f2:	callq  27c10 <png_write_PLTE>
   241f7:	xor    %r13d,%r13d
   241fa:	mov    0x8(%r12),%eax
   241ff:	and    $0x10,%eax
   24202:	test   %eax,%eax
   24204:	je     2423d <png_write_info+0xbd>
   24206:	mov    0x134(%rbx),%eax
   2420c:	and    $0x80000,%eax
   24211:	test   %eax,%eax
   24213:	jne    243df <png_write_info+0x25f>
   24219:	mov    0xb8(%r12),%rsi
   24221:	lea    0xc0(%r12),%rdx
   24229:	movzwl 0x22(%r12),%ecx
   2422f:	movzbl 0x25(%r12),%r8d
   24235:	mov    %rbx,%rdi
   24238:	callq  286e0 <png_write_tRNS>
   2423d:	mov    0x8(%r12),%eax
   24242:	and    $0x20,%eax
   24245:	test   %eax,%eax
   24247:	je     2425f <png_write_info+0xdf>
   24249:	lea    0xca(%r12),%rsi
   24251:	movzbl 0x25(%r12),%edx
   24257:	mov    %rbx,%rdi
   2425a:	callq  28840 <png_write_bKGD>
   2425f:	mov    0x8(%r12),%eax
   24264:	and    $0x10000,%eax
   24269:	test   %eax,%eax
   2426b:	je     24285 <png_write_info+0x105>
   2426d:	mov    0xf0(%r12),%rsi
   24275:	movslq 0xec(%r12),%rdx
   2427d:	mov    %rbx,%rdi
   24280:	callq  28370 <png_write_eXIf>
   24285:	mov    0x8(%r12),%eax
   2428a:	and    $0x40,%eax
   2428d:	test   %eax,%eax
   2428f:	je     242a7 <png_write_info+0x127>
   24291:	mov    0x100(%r12),%rsi
   24299:	movzwl 0x20(%r12),%edx
   2429f:	mov    %rbx,%rdi
   242a2:	callq  289b0 <png_write_hIST>
   242a7:	mov    0x8(%r12),%eax
   242ac:	and    $0x100,%eax
   242b1:	test   %eax,%eax
   242b3:	je     242d6 <png_write_info+0x156>
   242b5:	movslq 0xd4(%r12),%rsi
   242bd:	movslq 0xd8(%r12),%rdx
   242c5:	movzbl 0xdc(%r12),%ecx
   242ce:	mov    %rbx,%rdi
   242d1:	callq  28f10 <png_write_oFFs>
   242d6:	mov    0x8(%r12),%eax
   242db:	and    $0x400,%eax
   242e0:	test   %eax,%eax
   242e2:	je     24337 <png_write_info+0x1b7>
   242e4:	sub    $0x10,%rsp
   242e8:	mov    0x118(%r12),%rdi
   242f0:	mov    0x120(%r12),%rax
   242f8:	mov    0x108(%r12),%rsi
   24300:	movslq 0x110(%r12),%rdx
   24308:	movslq 0x114(%r12),%rcx
   24310:	movzbl 0x128(%r12),%r8d
   24319:	movzbl 0x129(%r12),%r9d
   24322:	mov    %rdi,(%rsp)
   24326:	mov    %rax,0x8(%rsp)
   2432b:	mov    %rbx,%rdi
   2432e:	callq  28fa0 <png_write_pCAL>
   24333:	add    $0x10,%rsp
   24337:	mov    0x8(%r12),%eax
   2433c:	and    $0x4000,%eax
   24341:	test   %eax,%eax
   24343:	je     24366 <png_write_info+0x1e6>
   24345:	movzbl 0x14c(%r12),%esi
   2434e:	mov    0x150(%r12),%rdx
   24356:	mov    0x158(%r12),%rcx
   2435e:	mov    %rbx,%rdi
   24361:	callq  292f0 <png_write_sCAL_s>
   24366:	mov    0x8(%r12),%eax
   2436b:	and    $0x80,%eax
   24370:	test   %eax,%eax
   24372:	je     24395 <png_write_info+0x215>
   24374:	mov    0xe0(%r12),%esi
   2437c:	mov    0xe4(%r12),%edx
   24384:	movzbl 0xe8(%r12),%ecx
   2438d:	mov    %rbx,%rdi
   24390:	callq  291b0 <png_write_pHYs>
   24395:	mov    0x8(%r12),%eax
   2439a:	and    $0x200,%eax
   2439f:	test   %eax,%eax
   243a1:	je     243c4 <png_write_info+0x244>
   243a3:	lea    0xa8(%r12),%rsi
   243ab:	mov    %rbx,%rdi
   243ae:	callq  29240 <png_write_tIME>
   243b3:	mov    0x12c(%rbx),%eax
   243b9:	or     $0x200,%eax
   243be:	mov    %eax,0x12c(%rbx)
   243c4:	mov    0x8(%r12),%eax
   243c9:	and    $0x2000,%eax
   243ce:	test   %eax,%eax
   243d0:	jne    24426 <png_write_info+0x2a6>
   243d2:	mov    %r15,-0x8(%rbp)
   243d6:	mov    %r14,-0x10(%rbp)
   243da:	mov    %r13,%r14
   243dd:	jmp    2444e <png_write_info+0x2ce>
   243df:	movzbl 0x25(%r12),%eax
   243e5:	cmp    $0x3,%al
   243e7:	jne    24219 <png_write_info+0x99>
   243ed:	movzwl 0x22(%r12),%esi
   243f3:	cmp    $0x100,%si
   243f8:	jbe    24481 <png_write_info+0x301>
   243fe:	mov    $0x100,%esi
   24403:	mov    %r13,%rcx
   24406:	jmpq   2449b <png_write_info+0x31b>
   2440b:	movslq %r13d,%rsi
   2440e:	shl    $0x5,%rsi
   24412:	add    0x140(%r12),%rsi
   2441a:	mov    %rbx,%rdi
   2441d:	callq  28560 <png_write_sPLT>
   24422:	add    $0x1,%r13d
   24426:	movslq 0x148(%r12),%rax
   2442e:	cmp    %r13d,%eax
   24431:	jg     2440b <png_write_info+0x28b>
   24433:	mov    %r15,-0x8(%rbp)
   24437:	mov    %r14,-0x10(%rbp)
   2443b:	xor    %r13d,%r13d
   2443e:	mov    %r13,%r14
   24441:	jmp    2444e <png_write_info+0x2ce>
   24443:	movl   $0xfffffffd,(%r15)
   2444a:	add    $0x1,%r14d
   2444e:	movslq 0x94(%r12),%rax
   24456:	cmp    %r14d,%eax
   24459:	jg     244a4 <png_write_info+0x324>
   2445b:	mov    %r12,%rsi
   2445e:	mov    %rbx,%rdi
   24461:	mov    $0x2,%edx
   24466:	callq  25860 <write_unknown_chunks>
   2446b:	mov    -0x10(%rbp),%r12
   2446f:	mov    -0x8(%rbp),%rbx
   24473:	mov    -0x18(%rbp),%r13
   24477:	mov    -0x28(%rbp),%r15
   2447b:	mov    -0x20(%rbp),%r14
   2447f:	leaveq 
   24480:	retq   
   24481:	mov    %r13,%rcx
   24484:	jmp    2449b <png_write_info+0x31b>
   24486:	movslq %ecx,%rax
   24489:	add    0xb8(%r12),%rax
   24491:	movzbl (%rax),%edx
   24494:	not    %edx
   24496:	mov    %dl,(%rax)
   24498:	add    $0x1,%ecx
   2449b:	cmp    %ecx,%esi
   2449d:	jg     24486 <png_write_info+0x306>
   2449f:	jmpq   24219 <png_write_info+0x99>
   244a4:	movslq %r14d,%rcx
   244a7:	lea    (%rcx,%rcx,2),%rax
   244ab:	shl    $0x4,%rax
   244af:	lea    (%rax,%rcx,8),%r15
   244b3:	mov    0xa0(%r12),%rax
   244bb:	movslq (%rax,%r15,1),%rsi
   244bf:	test   %esi,%esi
   244c1:	jg     244fa <png_write_info+0x37a>
   244c3:	test   %esi,%esi
   244c5:	je     24536 <png_write_info+0x3b6>
   244c7:	cmp    $0xffffffff,%esi
   244ca:	jne    2444a <png_write_info+0x2ca>
   244d0:	mov    0x8(%rax,%r15,1),%rsi
   244d5:	mov    0x10(%rax,%r15,1),%rdx
   244da:	mov    %rbx,%rdi
   244dd:	mov    %r13,%rcx
   244e0:	callq  28a70 <png_write_tEXt>
   244e5:	mov    0xa0(%r12),%rax
   244ed:	movl   $0xfffffffd,(%rax,%r15,1)
   244f5:	jmpq   2444a <png_write_info+0x2ca>
   244fa:	mov    0x8(%rax,%r15,1),%rdx
   244ff:	mov    0x28(%rax,%r15,1),%rcx
   24504:	mov    0x30(%rax,%r15,1),%r8
   24509:	mov    0x10(%rax,%r15,1),%r9
   2450e:	mov    %rbx,%rdi
   24511:	callq  28cb0 <png_write_iTXt>
   24516:	add    0xa0(%r12),%r15
   2451e:	movslq (%r15),%rax
   24521:	cmp    $0xffffffff,%eax
   24524:	je     24443 <png_write_info+0x2c3>
   2452a:	movl   $0xfffffffe,(%r15)
   24531:	jmpq   2444a <png_write_info+0x2ca>
   24536:	mov    0x8(%rax,%r15,1),%rsi
   2453b:	mov    0x10(%rax,%r15,1),%rdx
   24540:	movslq (%rax,%r15,1),%rcx
   24544:	mov    %rbx,%rdi
   24547:	callq  28b70 <png_write_zTXt>
   2454c:	mov    0xa0(%r12),%rax
   24554:	movl   $0xfffffffe,(%rax,%r15,1)
   2455c:	jmpq   2444a <png_write_info+0x2ca>
   24561:	data16 nopw %cs:0x0(%rax,%rax,1)
   2456c:	nopl   0x0(%rax)

0000000000024570 <png_convert_from_struct_tm>:
   24570:	push   %rbp
   24571:	mov    %rsp,%rbp
   24574:	movzwl 0x14(%rsi),%eax
   24578:	add    $0x76c,%eax
   2457d:	mov    %ax,(%rdi)
   24580:	movzbl 0x10(%rsi),%eax
   24584:	add    $0x1,%eax
   24587:	mov    %al,0x2(%rdi)
   2458a:	movzbl 0xc(%rsi),%eax
   2458e:	mov    %al,0x3(%rdi)
   24591:	movzbl 0x8(%rsi),%eax
   24595:	mov    %al,0x4(%rdi)
   24598:	movzbl 0x4(%rsi),%eax
   2459c:	mov    %al,0x5(%rdi)
   2459f:	movzbl (%rsi),%eax
   245a2:	mov    %al,0x6(%rdi)
   245a5:	leaveq 
   245a6:	retq   
   245a7:	nopw   0x0(%rax,%rax,1)

00000000000245b0 <png_convert_from_time_t>:
   245b0:	push   %rbp
   245b1:	mov    %rsp,%rbp
   245b4:	sub    $0x10,%rsp
   245b8:	mov    %r15,-0x8(%rbp)
   245bc:	mov    %rsi,-0x10(%rbp)
   245c0:	mov    %rdi,%r15
   245c3:	lea    -0x10(%rbp),%rdi
   245c7:	callq  57c0 <gmtime@plt>
   245cc:	mov    %rax,%rsi
   245cf:	mov    %r15,%rdi
   245d2:	callq  51f0 <png_convert_from_struct_tm@plt>
   245d7:	mov    -0x8(%rbp),%r15
   245db:	leaveq 
   245dc:	retq   
   245dd:	nopl   (%rax)

00000000000245e0 <png_set_flush>:
   245e0:	push   %rbp
   245e1:	mov    %rsp,%rbp
   245e4:	test   %rdi,%rdi
   245e7:	jne    245eb <png_set_flush+0xb>
   245e9:	leaveq 
   245ea:	retq   
   245eb:	test   %esi,%esi
   245ed:	jns    245f1 <png_set_flush+0x11>
   245ef:	xor    %esi,%esi
   245f1:	mov    %esi,0x298(%rdi)
   245f7:	leaveq 
   245f8:	retq   
   245f9:	nopl   0x0(%rax)

0000000000024600 <png_write_flush>:
   24600:	push   %rbp
   24601:	mov    %rsp,%rbp
   24604:	sub    $0x10,%rsp
   24608:	test   %rdi,%rdi
   2460b:	jne    2460f <png_write_flush+0xf>
   2460d:	leaveq 
   2460e:	retq   
   2460f:	mov    0x200(%rdi),%eax
   24615:	cmp    0x214(%rdi),%eax
   2461b:	ja     2461f <png_write_flush+0x1f>
   2461d:	leaveq 
   2461e:	retq   
   2461f:	xor    %esi,%esi
   24621:	mov    $0x2,%ecx
   24626:	mov    %rsi,%rdx
   24629:	mov    %rdi,%rax
   2462c:	mov    %r15,-0x8(%rbp)
   24630:	mov    %rdi,%r15
   24633:	mov    %rax,%rdi
   24636:	callq  27db0 <png_compress_IDAT>
   2463b:	mov    %r15,%rdi
   2463e:	movl   $0x0,0x29c(%rdi)
   24648:	callq  23e60 <png_flush>
   2464d:	mov    -0x8(%rbp),%r15
   24651:	leaveq 
   24652:	retq   
   24653:	data16 nopw %cs:0x0(%rax,%rax,1)
   2465e:	xchg   %ax,%ax

0000000000024660 <png_write_row>:
   24660:	push   %rbp
   24661:	mov    %rsp,%rbp
   24664:	sub    $0x30,%rsp
   24668:	test   %rdi,%rdi
   2466b:	jne    2466f <png_write_row+0xf>
   2466d:	leaveq 
   2466e:	retq   
   2466f:	mov    0x214(%rdi),%eax
   24675:	test   %eax,%eax
   24677:	je     246cb <png_write_row+0x6b>
   24679:	mov    %r15,%rcx
   2467c:	mov    %rdi,%r15
   2467f:	movzbl 0x264(%r15),%eax
   24687:	test   %al,%al
   24689:	jne    246e2 <png_write_row+0x82>
   2468b:	movzbl 0x267(%r15),%eax
   24693:	mov    %al,-0x18(%rbp)
   24696:	mov    0x204(%r15),%edi
   2469d:	mov    %edi,-0x28(%rbp)
   246a0:	movzbl 0x26c(%r15),%eax
   246a8:	mov    %al,-0x16(%rbp)
   246ab:	movzbl 0x269(%r15),%r8d
   246b3:	imul   %r8b
   246b6:	cmp    $0x7,%al
   246b8:	ja     2472b <png_write_row+0xcb>
   246ba:	movzbl %al,%edx
   246bd:	imul   %rdi,%rdx
   246c1:	add    $0x7,%rdx
   246c5:	shr    $0x3,%rdx
   246c9:	jmp    24736 <png_write_row+0xd6>
   246cb:	movzbl 0x265(%rdi),%eax
   246d2:	test   %al,%al
   246d4:	je     247e0 <png_write_row+0x180>
   246da:	mov    %r15,%rcx
   246dd:	mov    %rdi,%r15
   246e0:	jmp    2467f <png_write_row+0x1f>
   246e2:	mov    0x134(%r15),%eax
   246e9:	and    $0x2,%eax
   246ec:	test   %eax,%eax
   246ee:	je     2468b <png_write_row+0x2b>
   246f0:	movzbl 0x265(%r15),%eax
   246f8:	cmp    $0x6,%al
   246fa:	ja     2468b <png_write_row+0x2b>
   246fc:	lea    0xb155(%rip),%rdx        # 2f858 <fourbppswaptable+0x20c>
   24703:	movslq (%rdx,%rax,4),%rax
   24707:	add    %rdx,%rax
   2470a:	jmpq   *%rax
   2470c:	mov    0x214(%r15),%eax
   24713:	and    $0x1,%eax
   24716:	test   %eax,%eax
   24718:	jne    2468b <png_write_row+0x2b>
   2471e:	mov    %r15,%rdi
   24721:	mov    %rcx,%r15
   24724:	callq  293b0 <png_write_finish_row>
   24729:	leaveq 
   2472a:	retq   
   2472b:	movzbl %al,%edx
   2472e:	shr    $0x3,%rdx
   24732:	imul   %rdi,%rdx
   24736:	mov    %r8b,-0x17(%rbp)
   2473a:	mov    %al,-0x15(%rbp)
   2473d:	mov    %rdx,-0x20(%rbp)
   24741:	mov    0x228(%r15),%rdi
   24748:	add    $0x1,%rdi
   2474c:	mov    %rcx,-0x10(%rbp)
   24750:	callq  54c0 <memcpy@plt>
   24755:	lea    -0x28(%rbp),%rsi
   24759:	movzbl 0x264(%r15),%eax
   24761:	test   %al,%al
   24763:	jne    248f6 <png_write_row+0x296>
   24769:	mov    0x134(%r15),%eax
   24770:	test   %eax,%eax
   24772:	je     24780 <png_write_row+0x120>
   24774:	mov    %r15,%rdi
   24777:	callq  26d10 <png_do_write_transformations>
   2477c:	lea    -0x28(%rbp),%rsi
   24780:	movzbl 0x26a(%r15),%eax
   24788:	movzbl -0x15(%rbp),%ecx
   2478c:	cmp    %cl,%al
   2478e:	jne    24943 <png_write_row+0x2e3>
   24794:	movzbl 0x26f(%r15),%eax
   2479c:	cmp    %al,%cl
   2479e:	jne    24943 <png_write_row+0x2e3>
   247a4:	mov    0x3d8(%r15),%eax
   247ab:	and    $0x4,%eax
   247ae:	test   %eax,%eax
   247b0:	jne    24952 <png_write_row+0x2f2>
   247b6:	movzbl -0x18(%rbp),%eax
   247ba:	cmp    $0x3,%al
   247bc:	je     24981 <png_write_row+0x321>
   247c2:	mov    %r15,%rdi
   247c5:	callq  29a40 <png_write_find_filter>
   247ca:	mov    0x308(%r15),%rax
   247d1:	test   %rax,%rax
   247d4:	jne    249a1 <png_write_row+0x341>
   247da:	mov    -0x10(%rbp),%r15
   247de:	leaveq 
   247df:	retq   
   247e0:	mov    0x12c(%rdi),%eax
   247e6:	and    $0x400,%eax
   247eb:	test   %eax,%eax
   247ed:	je     249b9 <png_write_row+0x359>
   247f3:	mov    %rdi,%rax
   247f6:	mov    %r15,-0x8(%rbp)
   247fa:	mov    %rsi,-0x10(%rbp)
   247fe:	mov    %rdi,%r15
   24801:	mov    %rax,%rdi
   24804:	callq  29540 <png_write_start_row>
   24809:	mov    -0x10(%rbp),%rsi
   2480d:	mov    -0x8(%rbp),%rcx
   24811:	jmpq   2467f <png_write_row+0x1f>
   24816:	mov    0x214(%r15),%eax
   2481d:	and    $0x7,%eax
   24820:	test   %eax,%eax
   24822:	je     2468b <png_write_row+0x2b>
   24828:	mov    %r15,%rdi
   2482b:	mov    %rcx,%r15
   2482e:	callq  293b0 <png_write_finish_row>
   24833:	leaveq 
   24834:	retq   
   24835:	mov    0x214(%r15),%eax
   2483c:	and    $0x7,%eax
   2483f:	test   %eax,%eax
   24841:	jne    24853 <png_write_row+0x1f3>
   24843:	mov    0x1f8(%r15),%eax
   2484a:	cmp    $0x4,%eax
   2484d:	ja     2468b <png_write_row+0x2b>
   24853:	mov    %r15,%rdi
   24856:	mov    %rcx,%r15
   24859:	callq  293b0 <png_write_finish_row>
   2485e:	leaveq 
   2485f:	retq   
   24860:	mov    0x214(%r15),%eax
   24867:	and    $0x7,%eax
   2486a:	cmp    $0x4,%eax
   2486d:	je     2468b <png_write_row+0x2b>
   24873:	mov    %r15,%rdi
   24876:	mov    %rcx,%r15
   24879:	callq  293b0 <png_write_finish_row>
   2487e:	leaveq 
   2487f:	retq   
   24880:	mov    0x214(%r15),%eax
   24887:	and    $0x3,%eax
   2488a:	test   %eax,%eax
   2488c:	jne    2489e <png_write_row+0x23e>
   2488e:	mov    0x1f8(%r15),%eax
   24895:	cmp    $0x2,%eax
   24898:	ja     2468b <png_write_row+0x2b>
   2489e:	mov    %r15,%rdi
   248a1:	mov    %rcx,%r15
   248a4:	callq  293b0 <png_write_finish_row>
   248a9:	leaveq 
   248aa:	retq   
   248ab:	mov    0x214(%r15),%eax
   248b2:	and    $0x3,%eax
   248b5:	cmp    $0x2,%eax
   248b8:	je     2468b <png_write_row+0x2b>
   248be:	mov    %r15,%rdi
   248c1:	mov    %rcx,%r15
   248c4:	callq  293b0 <png_write_finish_row>
   248c9:	leaveq 
   248ca:	retq   
   248cb:	mov    0x214(%r15),%eax
   248d2:	and    $0x1,%eax
   248d5:	test   %eax,%eax
   248d7:	jne    248e9 <png_write_row+0x289>
   248d9:	mov    0x1f8(%r15),%eax
   248e0:	cmp    $0x1,%eax
   248e3:	ja     2468b <png_write_row+0x2b>
   248e9:	mov    %r15,%rdi
   248ec:	mov    %rcx,%r15
   248ef:	callq  293b0 <png_write_finish_row>
   248f4:	leaveq 
   248f5:	retq   
   248f6:	movzbl 0x265(%r15),%edx
   248fe:	cmp    $0x5,%dl
   24901:	ja     24769 <png_write_row+0x109>
   24907:	mov    0x134(%r15),%eax
   2490e:	and    $0x2,%eax
   24911:	test   %eax,%eax
   24913:	je     24769 <png_write_row+0x109>
   24919:	mov    0x228(%r15),%rax
   24920:	add    $0x1,%rax
   24924:	mov    %rsi,%rdi
   24927:	mov    %rax,%rsi
   2492a:	callq  29750 <png_do_write_interlace>
   2492f:	mov    -0x28(%rbp),%eax
   24932:	test   %eax,%eax
   24934:	je     249c5 <png_write_row+0x365>
   2493a:	lea    -0x28(%rbp),%rsi
   2493e:	jmpq   24769 <png_write_row+0x109>
   24943:	mov    %r15,%rdi
   24946:	lea    0xb006(%rip),%rsi        # 2f953 <fourbppswaptable+0x307>
   2494d:	callq  5470 <png_error@plt>
   24952:	movzbl 0x3dc(%r15),%eax
   2495a:	cmp    $0x40,%al
   2495c:	jne    247b6 <png_write_row+0x156>
   24962:	mov    0x228(%r15),%rax
   24969:	add    $0x1,%rax
   2496d:	mov    %rsi,%rdi
   24970:	mov    %rax,%rsi
   24973:	callq  25940 <png_do_write_intrapixel>
   24978:	lea    -0x28(%rbp),%rsi
   2497c:	jmpq   247b6 <png_write_row+0x156>
   24981:	movslq 0x25c(%r15),%rax
   24988:	test   %eax,%eax
   2498a:	js     247c2 <png_write_row+0x162>
   24990:	mov    %r15,%rdi
   24993:	callq  23bb0 <png_do_check_palette_indexes>
   24998:	lea    -0x28(%rbp),%rsi
   2499c:	jmpq   247c2 <png_write_row+0x162>
   249a1:	mov    %r15,%rdi
   249a4:	mov    0x214(%rdi),%esi
   249aa:	movzbl 0x265(%rdi),%edx
   249b1:	callq  *%rax
   249b3:	mov    -0x10(%rbp),%r15
   249b7:	leaveq 
   249b8:	retq   
   249b9:	lea    0xaf5e(%rip),%rsi        # 2f91e <fourbppswaptable+0x2d2>
   249c0:	callq  5470 <png_error@plt>
   249c5:	mov    %r15,%rdi
   249c8:	callq  293b0 <png_write_finish_row>
   249cd:	mov    -0x10(%rbp),%r15
   249d1:	leaveq 
   249d2:	retq   
   249d3:	data16 nopw %cs:0x0(%rax,%rax,1)
   249de:	xchg   %ax,%ax

00000000000249e0 <png_write_rows>:
   249e0:	push   %rbp
   249e1:	mov    %rsp,%rbp
   249e4:	sub    $0x20,%rsp
   249e8:	test   %rdi,%rdi
   249eb:	je     24a0d <png_write_rows+0x2d>
   249ed:	xor    %eax,%eax
   249ef:	mov    %r12,-0x8(%rbp)
   249f3:	mov    %r13,-0x10(%rbp)
   249f7:	mov    %r14,-0x18(%rbp)
   249fb:	mov    %r15,-0x20(%rbp)
   249ff:	mov    %rax,%r12
   24a02:	mov    %rsi,%r13
   24a05:	mov    %rdi,%r14
   24a08:	mov    %rdx,%r15
   24a0b:	jmp    24a23 <png_write_rows+0x43>
   24a0d:	leaveq 
   24a0e:	retq   
   24a0f:	mov    0x0(%r13),%rsi
   24a13:	mov    %r14,%rdi
   24a16:	callq  5380 <png_write_row@plt>
   24a1b:	add    $0x1,%r12d
   24a1f:	add    $0x8,%r13
   24a23:	cmp    %r15d,%r12d
   24a26:	jb     24a0f <png_write_rows+0x2f>
   24a28:	mov    -0x20(%rbp),%r15
   24a2c:	mov    -0x18(%rbp),%r14
   24a30:	mov    -0x10(%rbp),%r13
   24a34:	mov    -0x8(%rbp),%r12
   24a38:	leaveq 
   24a39:	retq   
   24a3a:	nopw   0x0(%rax,%rax,1)

0000000000024a40 <png_write_image>:
   24a40:	push   %rbp
   24a41:	mov    %rsp,%rbp
   24a44:	sub    $0x30,%rsp
   24a48:	mov    %rsi,-0x30(%rbp)
   24a4c:	test   %rdi,%rdi
   24a4f:	jne    24a53 <png_write_image+0x13>
   24a51:	leaveq 
   24a52:	retq   
   24a53:	mov    %rdi,%rax
   24a56:	mov    %r14,-0x20(%rbp)
   24a5a:	mov    %r15,-0x28(%rbp)
   24a5e:	mov    %rbx,%r14
   24a61:	mov    %rsi,%rbx
   24a64:	mov    %r12,%r15
   24a67:	mov    %rdi,%r12
   24a6a:	mov    %rax,%rdi
   24a6d:	callq  53f0 <png_set_interlace_handling@plt>
   24a72:	xor    %ecx,%ecx
   24a74:	mov    %r14,-0x8(%rbp)
   24a78:	mov    %r15,-0x10(%rbp)
   24a7c:	mov    %r13,-0x18(%rbp)
   24a80:	mov    %rcx,%r14
   24a83:	mov    %rax,%r15
   24a86:	mov    %r14,%r13
   24a89:	jmp    24ab6 <png_write_image+0x76>
   24a8b:	mov    (%rbx),%rsi
   24a8e:	mov    %r12,%rdi
   24a91:	callq  5380 <png_write_row@plt>
   24a96:	add    $0x8,%rbx
   24a9a:	add    $0x1,%r14d
   24a9e:	mov    0x1fc(%r12),%eax
   24aa6:	cmp    %r14d,%eax
   24aa9:	ja     24a8b <png_write_image+0x4b>
   24aab:	add    $0x1,%r13d
   24aaf:	mov    -0x30(%rbp),%rbx
   24ab3:	xor    %r14d,%r14d
   24ab6:	cmp    %r15d,%r13d
   24ab9:	jl     24a9e <png_write_image+0x5e>
   24abb:	mov    -0x18(%rbp),%r13
   24abf:	mov    -0x10(%rbp),%r12
   24ac3:	mov    -0x8(%rbp),%rbx
   24ac7:	mov    -0x28(%rbp),%r15
   24acb:	mov    -0x20(%rbp),%r14
   24acf:	leaveq 
   24ad0:	retq   
   24ad1:	data16 nopw %cs:0x0(%rax,%rax,1)
   24adc:	nopl   0x0(%rax)

0000000000024ae0 <png_write_end>:
   24ae0:	push   %rbp
   24ae1:	mov    %rsp,%rbp
   24ae4:	sub    $0x30,%rsp
   24ae8:	test   %rdi,%rdi
   24aeb:	jne    24aef <png_write_end+0xf>
   24aed:	leaveq 
   24aee:	retq   
   24aef:	mov    0x12c(%rdi),%eax
   24af5:	and    $0x4,%eax
   24af8:	test   %eax,%eax
   24afa:	je     24b22 <png_write_end+0x42>
   24afc:	movzwl 0x258(%rdi),%eax
   24b03:	cmp    0x25c(%rdi),%eax
   24b09:	jl     24b2e <png_write_end+0x4e>
   24b0b:	mov    %r15,%rax
   24b0e:	mov    %r12,%r15
   24b11:	mov    %rsi,%r12
   24b14:	mov    %r14,%rdx
   24b17:	mov    %rbx,%r14
   24b1a:	mov    %rdi,%rbx
   24b1d:	mov    %r13,%r8
   24b20:	jmp    24b62 <png_write_end+0x82>
   24b22:	lea    0xae4f(%rip),%rsi        # 2f978 <fourbppswaptable+0x32c>
   24b29:	callq  5470 <png_error@plt>
   24b2e:	lea    0xae5e(%rip),%rcx        # 2f993 <fourbppswaptable+0x347>
   24b35:	mov    %rdi,%rax
   24b38:	mov    %r14,-0x20(%rbp)
   24b3c:	mov    %r15,-0x28(%rbp)
   24b40:	mov    %rbx,%r14
   24b43:	mov    %rdi,%rbx
   24b46:	mov    %rax,%rdi
   24b49:	mov    %r12,%r15
   24b4c:	mov    %rsi,%r12
   24b4f:	mov    %rcx,%rsi
   24b52:	callq  5590 <png_benign_error@plt>
   24b57:	mov    %r13,%r8
   24b5a:	mov    -0x28(%rbp),%rax
   24b5e:	mov    -0x20(%rbp),%rdx
   24b62:	test   %r12,%r12
   24b65:	jne    24b9b <png_write_end+0xbb>
   24b67:	mov    %r8,%r12
   24b6a:	mov    %rdx,%r13
   24b6d:	mov    0x12c(%rbx),%ecx
   24b73:	or     $0x8,%ecx
   24b76:	mov    %ecx,0x12c(%rbx)
   24b7c:	mov    %rbx,%rdi
   24b7f:	mov    %rax,%rbx
   24b82:	callq  28100 <png_write_IEND>
   24b87:	mov    %r14,%rax
   24b8a:	mov    %r13,%r14
   24b8d:	mov    %r12,%r13
   24b90:	mov    %r15,%r12
   24b93:	mov    %rbx,%r15
   24b96:	mov    %rax,%rbx
   24b99:	leaveq 
   24b9a:	retq   
   24b9b:	xor    %r13d,%r13d
   24b9e:	mov    0x8(%r12),%ecx
   24ba3:	and    $0x200,%ecx
   24ba9:	test   %ecx,%ecx
   24bab:	jne    24bc6 <png_write_end+0xe6>
   24bad:	mov    %rdx,-0x20(%rbp)
   24bb1:	mov    %rax,-0x28(%rbp)
   24bb5:	mov    %r8,-0x18(%rbp)
   24bb9:	mov    %r14,-0x8(%rbp)
   24bbd:	mov    %r15,-0x10(%rbp)
   24bc1:	mov    %r13,%r14
   24bc4:	jmp    24bfe <png_write_end+0x11e>
   24bc6:	mov    0x12c(%rbx),%ecx
   24bcc:	and    $0x200,%ecx
   24bd2:	test   %ecx,%ecx
   24bd4:	je     24c5a <png_write_end+0x17a>
   24bda:	mov    %rdx,-0x20(%rbp)
   24bde:	mov    %rax,-0x28(%rbp)
   24be2:	mov    %r8,-0x18(%rbp)
   24be6:	mov    %r14,-0x8(%rbp)
   24bea:	mov    %r15,-0x10(%rbp)
   24bee:	mov    %r13,%r14
   24bf1:	jmp    24bfe <png_write_end+0x11e>
   24bf3:	movl   $0xfffffffd,(%r15)
   24bfa:	add    $0x1,%r14d
   24bfe:	movslq 0x94(%r12),%rax
   24c06:	cmp    %r14d,%eax
   24c09:	jg     24c86 <png_write_end+0x1a6>
   24c0b:	mov    0x8(%r12),%eax
   24c10:	and    $0x10000,%eax
   24c15:	test   %eax,%eax
   24c17:	je     24c31 <png_write_end+0x151>
   24c19:	mov    0xf0(%r12),%rsi
   24c21:	movslq 0xec(%r12),%rdx
   24c29:	mov    %rbx,%rdi
   24c2c:	callq  28370 <png_write_eXIf>
   24c31:	mov    %r12,%rsi
   24c34:	mov    $0x8,%edx
   24c39:	mov    %rbx,%rdi
   24c3c:	callq  25860 <write_unknown_chunks>
   24c41:	mov    -0x10(%rbp),%r15
   24c45:	mov    -0x8(%rbp),%r14
   24c49:	mov    -0x18(%rbp),%r12
   24c4d:	mov    -0x28(%rbp),%rax
   24c51:	mov    -0x20(%rbp),%r13
   24c55:	jmpq   24b6d <png_write_end+0x8d>
   24c5a:	lea    0xa8(%r12),%rsi
   24c62:	mov    %rbx,%rdi
   24c65:	mov    %rdx,-0x20(%rbp)
   24c69:	mov    %rax,-0x28(%rbp)
   24c6d:	mov    %r8,-0x18(%rbp)
   24c71:	callq  29240 <png_write_tIME>
   24c76:	mov    %r14,-0x8(%rbp)
   24c7a:	mov    %r15,-0x10(%rbp)
   24c7e:	mov    %r13,%r14
   24c81:	jmpq   24bfe <png_write_end+0x11e>
   24c86:	movslq %r14d,%rcx
   24c89:	lea    (%rcx,%rcx,2),%rax
   24c8d:	shl    $0x4,%rax
   24c91:	lea    (%rax,%rcx,8),%r15
   24c95:	mov    0xa0(%r12),%rax
   24c9d:	movslq (%rax,%r15,1),%rsi
   24ca1:	test   %esi,%esi
   24ca3:	jg     24cdc <png_write_end+0x1fc>
   24ca5:	test   %esi,%esi
   24ca7:	jns    24d18 <png_write_end+0x238>
   24ca9:	cmp    $0xffffffff,%esi
   24cac:	jne    24bfa <png_write_end+0x11a>
   24cb2:	mov    0x8(%rax,%r15,1),%rsi
   24cb7:	mov    0x10(%rax,%r15,1),%rdx
   24cbc:	mov    %rbx,%rdi
   24cbf:	mov    %r13,%rcx
   24cc2:	callq  28a70 <png_write_tEXt>
   24cc7:	mov    0xa0(%r12),%rax
   24ccf:	movl   $0xfffffffd,(%rax,%r15,1)
   24cd7:	jmpq   24bfa <png_write_end+0x11a>
   24cdc:	mov    0x8(%rax,%r15,1),%rdx
   24ce1:	mov    0x28(%rax,%r15,1),%rcx
   24ce6:	mov    0x30(%rax,%r15,1),%r8
   24ceb:	mov    0x10(%rax,%r15,1),%r9
   24cf0:	mov    %rbx,%rdi
   24cf3:	callq  28cb0 <png_write_iTXt>
   24cf8:	add    0xa0(%r12),%r15
   24d00:	movslq (%r15),%rax
   24d03:	cmp    $0xffffffff,%eax
   24d06:	je     24bf3 <png_write_end+0x113>
   24d0c:	movl   $0xfffffffe,(%r15)
   24d13:	jmpq   24bfa <png_write_end+0x11a>
   24d18:	mov    0x8(%rax,%r15,1),%rsi
   24d1d:	mov    0x10(%rax,%r15,1),%rdx
   24d22:	movslq (%rax,%r15,1),%rcx
   24d26:	mov    %rbx,%rdi
   24d29:	callq  28b70 <png_write_zTXt>
   24d2e:	mov    0xa0(%r12),%rax
   24d36:	movl   $0xfffffffe,(%rax,%r15,1)
   24d3e:	jmpq   24bfa <png_write_end+0x11a>
   24d43:	data16 nopw %cs:0x0(%rax,%rax,1)
   24d4e:	xchg   %ax,%ax

0000000000024d50 <png_destroy_write_struct>:
   24d50:	push   %rbp
   24d51:	mov    %rsp,%rbp
   24d54:	sub    $0x10,%rsp
   24d58:	test   %rdi,%rdi
   24d5b:	jne    24d5f <png_destroy_write_struct+0xf>
   24d5d:	leaveq 
   24d5e:	retq   
   24d5f:	mov    (%rdi),%rcx
   24d62:	test   %rcx,%rcx
   24d65:	jne    24d69 <png_destroy_write_struct+0x19>
   24d67:	leaveq 
   24d68:	retq   
   24d69:	mov    %rcx,%rax
   24d6c:	mov    %r14,-0x8(%rbp)
   24d70:	mov    %r15,-0x10(%rbp)
   24d74:	mov    %rcx,%r14
   24d77:	mov    %rdi,%r15
   24d7a:	mov    %rax,%rdi
   24d7d:	callq  55a0 <png_destroy_info_struct@plt>
   24d82:	movq   $0x0,(%r15)
   24d89:	mov    %r14,%rdi
   24d8c:	callq  25a30 <png_write_destroy>
   24d91:	mov    %r14,%rdi
   24d94:	callq  ca70 <png_destroy_png_struct>
   24d99:	mov    -0x10(%rbp),%r15
   24d9d:	mov    -0x8(%rbp),%r14
   24da1:	leaveq 
   24da2:	retq   
   24da3:	data16 nopw %cs:0x0(%rax,%rax,1)
   24dae:	xchg   %ax,%ax

0000000000024db0 <png_set_filter>:
   24db0:	push   %rbp
   24db1:	mov    %rsp,%rbp
   24db4:	sub    $0x30,%rsp
   24db8:	test   %rdi,%rdi
   24dbb:	jne    24dbf <png_set_filter+0xf>
   24dbd:	leaveq 
   24dbe:	retq   
   24dbf:	xor    %eax,%eax
   24dc1:	mov    0x3d8(%rdi),%ecx
   24dc7:	and    $0x4,%ecx
   24dca:	test   %ecx,%ecx
   24dcc:	jne    24dde <png_set_filter+0x2e>
   24dce:	test   %esi,%esi
   24dd0:	je     24de8 <png_set_filter+0x38>
   24dd2:	lea    0xac3d(%rip),%rsi        # 2fa16 <fourbppswaptable+0x3ca>
   24dd9:	callq  5470 <png_error@plt>
   24dde:	cmp    $0x40,%esi
   24de1:	jne    24dce <png_set_filter+0x1e>
   24de3:	mov    %rax,%rsi
   24de6:	jmp    24dce <png_set_filter+0x1e>
   24de8:	movzbl %dl,%ecx
   24deb:	cmp    $0x7,%ecx
   24dee:	ja     24e09 <png_set_filter+0x59>
   24df0:	lea    0xaa7d(%rip),%rsi        # 2f874 <fourbppswaptable+0x228>
   24df7:	movslq (%rsi,%rcx,4),%rcx
   24dfb:	add    %rsi,%rcx
   24dfe:	jmpq   *%rcx
   24e00:	movb   $0x80,0x266(%rdi)
   24e07:	jmp    24e0f <png_set_filter+0x5f>
   24e09:	mov    %dl,0x266(%rdi)
   24e0f:	mov    0x228(%rdi),%rcx
   24e16:	test   %rcx,%rcx
   24e19:	je     25008 <png_set_filter+0x258>
   24e1f:	mov    0x1fc(%rdi),%ecx
   24e25:	cmp    $0x1,%ecx
   24e28:	jne    24e30 <png_set_filter+0x80>
   24e2a:	and    $0xffffff1f,%edx
   24e30:	mov    0x1f8(%rdi),%ecx
   24e36:	cmp    $0x1,%ecx
   24e39:	jne    24e41 <png_set_filter+0x91>
   24e3b:	and    $0xffffff2f,%edx
   24e41:	mov    %rdx,%rcx
   24e44:	and    $0xe0,%ecx
   24e4a:	test   %ecx,%ecx
   24e4c:	jle    24e90 <png_set_filter+0xe0>
   24e4e:	mov    0x220(%rdi),%rcx
   24e55:	test   %rcx,%rcx
   24e58:	jne    24e90 <png_set_filter+0xe0>
   24e5a:	lea    0xab7c(%rip),%rsi        # 2f9dd <fourbppswaptable+0x391>
   24e61:	mov    %rdi,%rax
   24e64:	mov    %r14,-0x20(%rbp)
   24e68:	mov    %r15,-0x28(%rbp)
   24e6c:	mov    %rdx,%r14
   24e6f:	mov    %rdi,%r15
   24e72:	mov    %rax,%rdi
   24e75:	callq  b0f0 <png_app_warning>
   24e7a:	mov    %r14,%rdx
   24e7d:	and    $0xffffff1f,%edx
   24e83:	mov    %r15,%rdi
   24e86:	xor    %eax,%eax
   24e88:	mov    -0x28(%rbp),%r15
   24e8c:	mov    -0x20(%rbp),%r14
   24e90:	mov    $0x1,%ecx
   24e95:	mov    %rdx,%rsi
   24e98:	and    $0x10,%esi
   24e9b:	test   %esi,%esi
   24e9d:	jle    24ea7 <png_set_filter+0xf7>
   24e9f:	mov    %rcx,%rax
   24ea2:	mov    $0x2,%ecx
   24ea7:	mov    %rdx,%rsi
   24eaa:	and    $0x20,%esi
   24ead:	test   %esi,%esi
   24eaf:	jle    24eb4 <png_set_filter+0x104>
   24eb1:	mov    %rcx,%rax
   24eb4:	mov    %rdx,%rcx
   24eb7:	and    $0x40,%ecx
   24eba:	test   %ecx,%ecx
   24ebc:	jle    24ec1 <png_set_filter+0x111>
   24ebe:	add    $0x1,%eax
   24ec1:	mov    %rdx,%rcx
   24ec4:	and    $0x80,%ecx
   24eca:	test   %ecx,%ecx
   24ecc:	jle    24ed1 <png_set_filter+0x121>
   24ece:	add    $0x1,%eax
   24ed1:	movzbl 0x269(%rdi),%ecx
   24ed8:	movzbl 0x26c(%rdi),%esi
   24edf:	imul   %esi,%ecx
   24ee2:	cmp    $0x7,%ecx
   24ee5:	jg     24f5e <png_set_filter+0x1ae>
   24ee7:	movslq %ecx,%rcx
   24eea:	mov    0x1f8(%rdi),%esi
   24ef0:	imul   %rsi,%rcx
   24ef4:	add    $0x7,%rcx
   24ef8:	shr    $0x3,%rcx
   24efc:	jmp    24f6f <png_set_filter+0x1bf>
   24efe:	lea    0xaab8(%rip),%rsi        # 2f9bd <fourbppswaptable+0x371>
   24f05:	mov    %rdi,%rax
   24f08:	mov    %r14,-0x20(%rbp)
   24f0c:	mov    %r15,-0x28(%rbp)
   24f10:	mov    %rdi,%r14
   24f13:	mov    %rax,%rdi
   24f16:	mov    %rdx,%r15
   24f19:	callq  b110 <png_app_error>
   24f1e:	mov    %r15,%rdx
   24f21:	mov    %r14,%rdi
   24f24:	xor    %eax,%eax
   24f26:	mov    -0x28(%rbp),%r15
   24f2a:	mov    -0x20(%rbp),%r14
   24f2e:	movb   $0x8,0x266(%rdi)
   24f35:	jmpq   24e0f <png_set_filter+0x5f>
   24f3a:	movb   $0x10,0x266(%rdi)
   24f41:	jmpq   24e0f <png_set_filter+0x5f>
   24f46:	movb   $0x20,0x266(%rdi)
   24f4d:	jmpq   24e0f <png_set_filter+0x5f>
   24f52:	movb   $0x40,0x266(%rdi)
   24f59:	jmpq   24e0f <png_set_filter+0x5f>
   24f5e:	movslq %ecx,%rcx
   24f61:	shr    $0x3,%rcx
   24f65:	mov    0x1f8(%rdi),%esi
   24f6b:	imul   %rsi,%rcx
   24f6f:	lea    0x1(%rcx),%rsi
   24f73:	mov    0x230(%rdi),%rcx
   24f7a:	test   %rcx,%rcx
   24f7d:	jne    24fc9 <png_set_filter+0x219>
   24f7f:	mov    %rdi,%r8
   24f82:	mov    %rsi,%rcx
   24f85:	mov    %r14,-0x18(%rbp)
   24f89:	mov    %r15,-0x28(%rbp)
   24f8d:	mov    %r13,-0x10(%rbp)
   24f91:	mov    %rsi,-0x8(%rbp)
   24f95:	mov    %rcx,%rsi
   24f98:	mov    %rdx,%r13
   24f9b:	mov    %rax,%r14
   24f9e:	mov    %rdi,%r15
   24fa1:	mov    %r8,%rdi
   24fa4:	callq  5800 <png_malloc@plt>
   24fa9:	mov    %rax,0x230(%r15)
   24fb0:	mov    %r14,%rax
   24fb3:	mov    %r13,%rdx
   24fb6:	mov    %r15,%rdi
   24fb9:	mov    -0x8(%rbp),%rsi
   24fbd:	mov    -0x10(%rbp),%r13
   24fc1:	mov    -0x28(%rbp),%r15
   24fc5:	mov    -0x18(%rbp),%r14
   24fc9:	cmp    $0x1,%eax
   24fcc:	jle    25008 <png_set_filter+0x258>
   24fce:	mov    0x238(%rdi),%rax
   24fd5:	test   %rax,%rax
   24fd8:	jne    25008 <png_set_filter+0x258>
   24fda:	mov    %rdi,%rax
   24fdd:	mov    %r14,-0x18(%rbp)
   24fe1:	mov    %r15,-0x28(%rbp)
   24fe5:	mov    %rdi,%r14
   24fe8:	mov    %rax,%rdi
   24feb:	mov    %rdx,%r15
   24fee:	callq  5800 <png_malloc@plt>
   24ff3:	mov    %rax,0x238(%r14)
   24ffa:	mov    %r15,%rdx
   24ffd:	mov    %r14,%rdi
   25000:	mov    -0x28(%rbp),%r15
   25004:	mov    -0x18(%rbp),%r14
   25008:	mov    %dl,0x266(%rdi)
   2500e:	leaveq 
   2500f:	retq   

0000000000025010 <png_set_filter_heuristics>:
   25010:	push   %rbp
   25011:	mov    %rsp,%rbp
   25014:	leaveq 
   25015:	retq   
   25016:	nopw   %cs:0x0(%rax,%rax,1)

0000000000025020 <png_set_filter_heuristics_fixed>:
   25020:	push   %rbp
   25021:	mov    %rsp,%rbp
   25024:	leaveq 
   25025:	retq   
   25026:	nopw   %cs:0x0(%rax,%rax,1)

0000000000025030 <png_set_compression_level>:
   25030:	push   %rbp
   25031:	mov    %rsp,%rbp
   25034:	test   %rdi,%rdi
   25037:	jne    2503b <png_set_compression_level+0xb>
   25039:	leaveq 
   2503a:	retq   
   2503b:	mov    %esi,0x1bc(%rdi)
   25041:	leaveq 
   25042:	retq   
   25043:	data16 nopw %cs:0x0(%rax,%rax,1)
   2504e:	xchg   %ax,%ax

0000000000025050 <png_set_compression_mem_level>:
   25050:	push   %rbp
   25051:	mov    %rsp,%rbp
   25054:	test   %rdi,%rdi
   25057:	jne    2505b <png_set_compression_mem_level+0xb>
   25059:	leaveq 
   2505a:	retq   
   2505b:	mov    %esi,0x1c8(%rdi)
   25061:	leaveq 
   25062:	retq   
   25063:	data16 nopw %cs:0x0(%rax,%rax,1)
   2506e:	xchg   %ax,%ax

0000000000025070 <png_set_compression_strategy>:
   25070:	push   %rbp
   25071:	mov    %rsp,%rbp
   25074:	test   %rdi,%rdi
   25077:	jne    2507b <png_set_compression_strategy+0xb>
   25079:	leaveq 
   2507a:	retq   
   2507b:	mov    0x130(%rdi),%eax
   25081:	or     $0x1,%eax
   25084:	mov    %eax,0x130(%rdi)
   2508a:	mov    %esi,0x1cc(%rdi)
   25090:	leaveq 
   25091:	retq   
   25092:	data16 nopw %cs:0x0(%rax,%rax,1)
   2509d:	nopl   (%rax)

00000000000250a0 <png_set_compression_window_bits>:
   250a0:	push   %rbp
   250a1:	mov    %rsp,%rbp
   250a4:	sub    $0x10,%rsp
   250a8:	test   %rdi,%rdi
   250ab:	jne    250af <png_set_compression_window_bits+0xf>
   250ad:	leaveq 
   250ae:	retq   
   250af:	cmp    $0xf,%esi
   250b2:	jg     250e0 <png_set_compression_window_bits+0x40>
   250b4:	cmp    $0x7,%esi
   250b7:	jg     25105 <png_set_compression_window_bits+0x65>
   250b9:	lea    0xa9a4(%rip),%rsi        # 2fa64 <fourbppswaptable+0x418>
   250c0:	mov    %rdi,%rax
   250c3:	mov    %r15,-0x8(%rbp)
   250c7:	mov    %rdi,%r15
   250ca:	mov    %rax,%rdi
   250cd:	callq  5390 <png_warning@plt>
   250d2:	mov    %r15,%rdi
   250d5:	mov    $0x8,%esi
   250da:	mov    -0x8(%rbp),%r15
   250de:	jmp    25105 <png_set_compression_window_bits+0x65>
   250e0:	lea    0xa94c(%rip),%rsi        # 2fa33 <fourbppswaptable+0x3e7>
   250e7:	mov    %rdi,%rax
   250ea:	mov    %r15,-0x8(%rbp)
   250ee:	mov    %rdi,%r15
   250f1:	mov    %rax,%rdi
   250f4:	callq  5390 <png_warning@plt>
   250f9:	mov    %r15,%rdi
   250fc:	mov    $0xf,%esi
   25101:	mov    -0x8(%rbp),%r15
   25105:	mov    %esi,0x1c4(%rdi)
   2510b:	leaveq 
   2510c:	retq   
   2510d:	nopl   (%rax)

0000000000025110 <png_set_compression_method>:
   25110:	push   %rbp
   25111:	mov    %rsp,%rbp
   25114:	sub    $0x10,%rsp
   25118:	test   %rdi,%rdi
   2511b:	jne    2511f <png_set_compression_method+0xf>
   2511d:	leaveq 
   2511e:	retq   
   2511f:	cmp    $0x8,%esi
   25122:	je     25155 <png_set_compression_method+0x45>
   25124:	lea    0xa96a(%rip),%rcx        # 2fa95 <fourbppswaptable+0x449>
   2512b:	mov    %rdi,%rax
   2512e:	mov    %r14,-0x8(%rbp)
   25132:	mov    %r15,-0x10(%rbp)
   25136:	mov    %rsi,%r14
   25139:	mov    %rcx,%rsi
   2513c:	mov    %rdi,%r15
   2513f:	mov    %rax,%rdi
   25142:	callq  5390 <png_warning@plt>
   25147:	mov    %r14,%rsi
   2514a:	mov    %r15,%rdi
   2514d:	mov    -0x10(%rbp),%r15
   25151:	mov    -0x8(%rbp),%r14
   25155:	mov    %esi,0x1c0(%rdi)
   2515b:	leaveq 
   2515c:	retq   
   2515d:	nopl   (%rax)

0000000000025160 <png_set_text_compression_level>:
   25160:	push   %rbp
   25161:	mov    %rsp,%rbp
   25164:	test   %rdi,%rdi
   25167:	jne    2516b <png_set_text_compression_level+0xb>
   25169:	leaveq 
   2516a:	retq   
   2516b:	mov    %esi,0x1d0(%rdi)
   25171:	leaveq 
   25172:	retq   
   25173:	data16 nopw %cs:0x0(%rax,%rax,1)
   2517e:	xchg   %ax,%ax

0000000000025180 <png_set_text_compression_mem_level>:
   25180:	push   %rbp
   25181:	mov    %rsp,%rbp
   25184:	test   %rdi,%rdi
   25187:	jne    2518b <png_set_text_compression_mem_level+0xb>
   25189:	leaveq 
   2518a:	retq   
   2518b:	mov    %esi,0x1dc(%rdi)
   25191:	leaveq 
   25192:	retq   
   25193:	data16 nopw %cs:0x0(%rax,%rax,1)
   2519e:	xchg   %ax,%ax

00000000000251a0 <png_set_text_compression_strategy>:
   251a0:	push   %rbp
   251a1:	mov    %rsp,%rbp
   251a4:	test   %rdi,%rdi
   251a7:	jne    251ab <png_set_text_compression_strategy+0xb>
   251a9:	leaveq 
   251aa:	retq   
   251ab:	mov    %esi,0x1e0(%rdi)
   251b1:	leaveq 
   251b2:	retq   
   251b3:	data16 nopw %cs:0x0(%rax,%rax,1)
   251be:	xchg   %ax,%ax

00000000000251c0 <png_set_text_compression_window_bits>:
   251c0:	push   %rbp
   251c1:	mov    %rsp,%rbp
   251c4:	sub    $0x10,%rsp
   251c8:	test   %rdi,%rdi
   251cb:	jne    251cf <png_set_text_compression_window_bits+0xf>
   251cd:	leaveq 
   251ce:	retq   
   251cf:	cmp    $0xf,%esi
   251d2:	jg     25200 <png_set_text_compression_window_bits+0x40>
   251d4:	cmp    $0x7,%esi
   251d7:	jg     25225 <png_set_text_compression_window_bits+0x65>
   251d9:	lea    0xa884(%rip),%rsi        # 2fa64 <fourbppswaptable+0x418>
   251e0:	mov    %rdi,%rax
   251e3:	mov    %r15,-0x8(%rbp)
   251e7:	mov    %rdi,%r15
   251ea:	mov    %rax,%rdi
   251ed:	callq  5390 <png_warning@plt>
   251f2:	mov    %r15,%rdi
   251f5:	mov    $0x8,%esi
   251fa:	mov    -0x8(%rbp),%r15
   251fe:	jmp    25225 <png_set_text_compression_window_bits+0x65>
   25200:	lea    0xa82c(%rip),%rsi        # 2fa33 <fourbppswaptable+0x3e7>
   25207:	mov    %rdi,%rax
   2520a:	mov    %r15,-0x8(%rbp)
   2520e:	mov    %rdi,%r15
   25211:	mov    %rax,%rdi
   25214:	callq  5390 <png_warning@plt>
   25219:	mov    %r15,%rdi
   2521c:	mov    $0xf,%esi
   25221:	mov    -0x8(%rbp),%r15
   25225:	mov    %esi,0x1d8(%rdi)
   2522b:	leaveq 
   2522c:	retq   
   2522d:	nopl   (%rax)

0000000000025230 <png_set_text_compression_method>:
   25230:	push   %rbp
   25231:	mov    %rsp,%rbp
   25234:	sub    $0x10,%rsp
   25238:	test   %rdi,%rdi
   2523b:	jne    2523f <png_set_text_compression_method+0xf>
   2523d:	leaveq 
   2523e:	retq   
   2523f:	cmp    $0x8,%esi
   25242:	je     25275 <png_set_text_compression_method+0x45>
   25244:	lea    0xa84a(%rip),%rcx        # 2fa95 <fourbppswaptable+0x449>
   2524b:	mov    %rdi,%rax
   2524e:	mov    %r14,-0x8(%rbp)
   25252:	mov    %r15,-0x10(%rbp)
   25256:	mov    %rsi,%r14
   25259:	mov    %rcx,%rsi
   2525c:	mov    %rdi,%r15
   2525f:	mov    %rax,%rdi
   25262:	callq  5390 <png_warning@plt>
   25267:	mov    %r14,%rsi
   2526a:	mov    %r15,%rdi
   2526d:	mov    -0x10(%rbp),%r15
   25271:	mov    -0x8(%rbp),%r14
   25275:	mov    %esi,0x1d4(%rdi)
   2527b:	leaveq 
   2527c:	retq   
   2527d:	nopl   (%rax)

0000000000025280 <png_set_write_status_fn>:
   25280:	push   %rbp
   25281:	mov    %rsp,%rbp
   25284:	test   %rdi,%rdi
   25287:	jne    2528b <png_set_write_status_fn+0xb>
   25289:	leaveq 
   2528a:	retq   
   2528b:	mov    %rsi,0x308(%rdi)
   25292:	leaveq 
   25293:	retq   
   25294:	data16 nopw %cs:0x0(%rax,%rax,1)
   2529f:	nop

00000000000252a0 <png_set_write_user_transform_fn>:
   252a0:	push   %rbp
   252a1:	mov    %rsp,%rbp
   252a4:	test   %rdi,%rdi
   252a7:	jne    252ab <png_set_write_user_transform_fn+0xb>
   252a9:	leaveq 
   252aa:	retq   
   252ab:	mov    0x134(%rdi),%eax
   252b1:	or     $0x100000,%eax
   252b6:	mov    %eax,0x134(%rdi)
   252bc:	mov    %rsi,0x118(%rdi)
   252c3:	leaveq 
   252c4:	retq   
   252c5:	data16 nopw %cs:0x0(%rax,%rax,1)

00000000000252d0 <png_write_png>:
   252d0:	push   %rbp
   252d1:	mov    %rsp,%rbp
   252d4:	sub    $0x20,%rsp
   252d8:	test   %rdi,%rdi
   252db:	jne    252df <png_write_png+0xf>
   252dd:	leaveq 
   252de:	retq   
   252df:	test   %rsi,%rsi
   252e2:	jne    252e6 <png_write_png+0x16>
   252e4:	leaveq 
   252e5:	retq   
   252e6:	mov    0x8(%rsi),%eax
   252e9:	and    $0x8000,%eax
   252ee:	test   %eax,%eax
   252f0:	je     253e8 <png_write_png+0x118>
   252f6:	mov    %rdi,%rax
   252f9:	mov    %rsi,%rcx
   252fc:	mov    %r13,-0x8(%rbp)
   25300:	mov    %r14,-0x10(%rbp)
   25304:	mov    %r15,-0x18(%rbp)
   25308:	mov    %rdi,%r13
   2530b:	mov    %rax,%rdi
   2530e:	mov    %rsi,%r14
   25311:	mov    %rcx,%rsi
   25314:	mov    %rdx,%r15
   25317:	callq  5340 <png_write_info@plt>
   2531c:	mov    %r15,%rax
   2531f:	and    $0x20,%eax
   25322:	test   %eax,%eax
   25324:	jle    2532e <png_write_png+0x5e>
   25326:	mov    %r13,%rdi
   25329:	callq  58e0 <png_set_invert_mono@plt>
   2532e:	mov    %r15,%rax
   25331:	and    $0x40,%eax
   25334:	test   %eax,%eax
   25336:	jg     253f6 <png_write_png+0x126>
   2533c:	mov    %r15,%rax
   2533f:	and    $0x4,%eax
   25342:	test   %eax,%eax
   25344:	jle    2534e <png_write_png+0x7e>
   25346:	mov    %r13,%rdi
   25349:	callq  5580 <png_set_packing@plt>
   2534e:	mov    %r15,%rax
   25351:	and    $0x100,%eax
   25356:	test   %eax,%eax
   25358:	jle    25362 <png_write_png+0x92>
   2535a:	mov    %r13,%rdi
   2535d:	callq  50d0 <png_set_swap_alpha@plt>
   25362:	mov    %r15,%rax
   25365:	and    $0x1800,%eax
   2536a:	test   %eax,%eax
   2536c:	jg     25419 <png_write_png+0x149>
   25372:	mov    %r15,%rax
   25375:	and    $0x80,%eax
   2537a:	test   %eax,%eax
   2537c:	jle    25386 <png_write_png+0xb6>
   2537e:	mov    %r13,%rdi
   25381:	callq  5860 <png_set_bgr@plt>
   25386:	mov    %r15,%rax
   25389:	and    $0x200,%eax
   2538e:	test   %eax,%eax
   25390:	jle    2539a <png_write_png+0xca>
   25392:	mov    %r13,%rdi
   25395:	callq  51e0 <png_set_swap@plt>
   2539a:	mov    %r15,%rax
   2539d:	and    $0x8,%eax
   253a0:	test   %eax,%eax
   253a2:	jle    253ac <png_write_png+0xdc>
   253a4:	mov    %r13,%rdi
   253a7:	callq  5820 <png_set_packswap@plt>
   253ac:	and    $0x400,%r15d
   253b3:	test   %r15d,%r15d
   253b6:	jle    253c0 <png_write_png+0xf0>
   253b8:	mov    %r13,%rdi
   253bb:	callq  5620 <png_set_invert_alpha@plt>
   253c0:	mov    0x160(%r14),%rsi
   253c7:	mov    %r13,%rdi
   253ca:	callq  5570 <png_write_image@plt>
   253cf:	mov    %r14,%rsi
   253d2:	mov    %r13,%rdi
   253d5:	callq  53c0 <png_write_end@plt>
   253da:	mov    -0x18(%rbp),%r15
   253de:	mov    -0x10(%rbp),%r14
   253e2:	mov    -0x8(%rbp),%r13
   253e6:	leaveq 
   253e7:	retq   
   253e8:	lea    0xa6d4(%rip),%rsi        # 2fac3 <fourbppswaptable+0x477>
   253ef:	callq  b110 <png_app_error>
   253f4:	leaveq 
   253f5:	retq   
   253f6:	mov    0x8(%r14),%eax
   253fa:	and    $0x2,%eax
   253fd:	test   %eax,%eax
   253ff:	je     2533c <png_write_png+0x6c>
   25405:	lea    0xb0(%r14),%rsi
   2540c:	mov    %r13,%rdi
   2540f:	callq  5270 <png_set_shift@plt>
   25414:	jmpq   2533c <png_write_png+0x6c>
   25419:	xor    %esi,%esi
   2541b:	mov    %r15,%rax
   2541e:	and    $0x1000,%eax
   25423:	test   %eax,%eax
   25425:	jg     25447 <png_write_png+0x177>
   25427:	mov    %r15,%rax
   2542a:	and    $0x800,%eax
   2542f:	test   %eax,%eax
   25431:	jle    25372 <png_write_png+0xa2>
   25437:	mov    %rsi,%rdx
   2543a:	mov    %r13,%rdi
   2543d:	callq  5200 <png_set_filler@plt>
   25442:	jmpq   25372 <png_write_png+0xa2>
   25447:	mov    %r15,%rax
   2544a:	and    $0x800,%eax
   2544f:	test   %eax,%eax
   25451:	jle    25464 <png_write_png+0x194>
   25453:	lea    0xa68e(%rip),%rsi        # 2fae8 <fourbppswaptable+0x49c>
   2545a:	mov    %r13,%rdi
   2545d:	callq  b110 <png_app_error>
   25462:	xor    %esi,%esi
   25464:	mov    $0x1,%edx
   25469:	mov    %r13,%rdi
   2546c:	callq  5200 <png_set_filler@plt>
   25471:	jmpq   25372 <png_write_png+0xa2>
   25476:	nopw   %cs:0x0(%rax,%rax,1)

0000000000025480 <png_image_write_to_file>:
   25480:	push   %rbp
   25481:	mov    %rsp,%rbp
   25484:	sub    $0x30,%rsp
   25488:	xor    %eax,%eax
   2548a:	test   %rdi,%rdi
   2548d:	jne    25499 <png_image_write_to_file+0x19>
   2548f:	mov    %rax,%r10
   25492:	test   %r10,%r10
   25495:	jne    254bc <png_image_write_to_file+0x3c>
   25497:	leaveq 
   25498:	retq   
   25499:	mov    $0x1,%r10d
   2549f:	mov    0x8(%rdi),%r11d
   254a3:	cmp    $0x1,%r11d
   254a7:	jne    25492 <png_image_write_to_file+0x12>
   254a9:	test   %rsi,%rsi
   254ac:	jne    254ca <png_image_write_to_file+0x4a>
   254ae:	lea    0xa66d(%rip),%rsi        # 2fb22 <fourbppswaptable+0x4d6>
   254b5:	callq  90d0 <png_image_error>
   254ba:	leaveq 
   254bb:	retq   
   254bc:	lea    0xa689(%rip),%rsi        # 2fb4c <fourbppswaptable+0x500>
   254c3:	callq  90d0 <png_image_error>
   254c8:	leaveq 
   254c9:	retq   
   254ca:	test   %rcx,%rcx
   254cd:	je     254ae <png_image_write_to_file+0x2e>
   254cf:	lea    0xa649(%rip),%rax        # 2fb1f <fourbppswaptable+0x4d3>
   254d6:	mov    %rsi,%r10
   254d9:	mov    %rbx,-0x10(%rbp)
   254dd:	mov    %r12,-0x18(%rbp)
   254e1:	mov    %r13,-0x20(%rbp)
   254e5:	mov    %r14,-0x28(%rbp)
   254e9:	mov    %r15,-0x30(%rbp)
   254ed:	mov    %rsi,-0x8(%rbp)
   254f1:	mov    %rax,%rsi
   254f4:	mov    %rdi,%rbx
   254f7:	mov    %r10,%rdi
   254fa:	mov    %rdx,%r12
   254fd:	mov    %rcx,%r13
   25500:	mov    %r9,%r14
   25503:	mov    %r8,%r15
   25506:	callq  5760 <fopen@plt>
   2550b:	test   %rax,%rax
   2550e:	jne    2553e <png_image_write_to_file+0xbe>
   25510:	callq  50a0 <__errno_location@plt>
   25515:	movslq (%rax),%rdi
   25518:	callq  5890 <strerror@plt>
   2551d:	mov    %rax,%rsi
   25520:	mov    %rbx,%rdi
   25523:	callq  90d0 <png_image_error>
   25528:	mov    -0x30(%rbp),%r15
   2552c:	mov    -0x28(%rbp),%r14
   25530:	mov    -0x20(%rbp),%r13
   25534:	mov    -0x18(%rbp),%r12
   25538:	mov    -0x10(%rbp),%rbx
   2553c:	leaveq 
   2553d:	retq   
   2553e:	mov    %r13,%rcx
   25541:	mov    %r12,%rdx
   25544:	mov    %rax,%r12
   25547:	mov    %r15,%r8
   2554a:	mov    %r14,%r9
   2554d:	mov    %rbx,%rdi
   25550:	mov    %r12,%rsi
   25553:	callq  5880 <png_image_write_to_stdio@plt>
   25558:	test   %eax,%eax
   2555a:	jne    25585 <png_image_write_to_file+0x105>
   2555c:	mov    %r12,%rdi
   2555f:	callq  5240 <fclose@plt>
   25564:	mov    -0x8(%rbp),%rdi
   25568:	callq  50b0 <remove@plt>
   2556d:	xor    %eax,%eax
   2556f:	mov    -0x30(%rbp),%r15
   25573:	mov    -0x28(%rbp),%r14
   25577:	mov    -0x20(%rbp),%r13
   2557b:	mov    -0x18(%rbp),%r12
   2557f:	mov    -0x10(%rbp),%rbx
   25583:	leaveq 
   25584:	retq   
   25585:	mov    %r12,%rdi
   25588:	callq  55d0 <fflush@plt>
   2558d:	test   %eax,%eax
   2558f:	je     255d3 <png_image_write_to_file+0x153>
   25591:	callq  50a0 <__errno_location@plt>
   25596:	movslq (%rax),%r13
   25599:	mov    %r12,%rdi
   2559c:	callq  5240 <fclose@plt>
   255a1:	mov    -0x8(%rbp),%rdi
   255a5:	callq  50b0 <remove@plt>
   255aa:	mov    %r13,%rdi
   255ad:	callq  5890 <strerror@plt>
   255b2:	mov    %rax,%rsi
   255b5:	mov    %rbx,%rdi
   255b8:	callq  90d0 <png_image_error>
   255bd:	mov    -0x30(%rbp),%r15
   255c1:	mov    -0x28(%rbp),%r14
   255c5:	mov    -0x20(%rbp),%r13
   255c9:	mov    -0x18(%rbp),%r12
   255cd:	mov    -0x10(%rbp),%rbx
   255d1:	leaveq 
   255d2:	retq   
   255d3:	mov    %r12,%rdi
   255d6:	callq  5130 <ferror@plt>
   255db:	test   %eax,%eax
   255dd:	jne    25591 <png_image_write_to_file+0x111>
   255df:	mov    %r12,%rdi
   255e2:	callq  5240 <fclose@plt>
   255e7:	test   %eax,%eax
   255e9:	jne    25606 <png_image_write_to_file+0x186>
   255eb:	mov    -0x30(%rbp),%r15
   255ef:	mov    -0x28(%rbp),%r14
   255f3:	mov    -0x20(%rbp),%r13
   255f7:	mov    -0x18(%rbp),%r12
   255fb:	mov    -0x10(%rbp),%rbx
   255ff:	mov    $0x1,%eax
   25604:	leaveq 
   25605:	retq   
   25606:	callq  50a0 <__errno_location@plt>
   2560b:	movslq (%rax),%r13
   2560e:	jmp    255a1 <png_image_write_to_file+0x121>

0000000000025610 <png_image_write_to_stdio>:
   25610:	push   %rbp
   25611:	mov    %rsp,%rbp
   25614:	sub    $0x90,%rsp
   2561b:	xor    %eax,%eax
   2561d:	test   %rdi,%rdi
   25620:	jne    2562c <png_image_write_to_stdio+0x1c>
   25622:	mov    %rax,%rcx
   25625:	test   %rcx,%rcx
   25628:	jne    2563d <png_image_write_to_stdio+0x2d>
   2562a:	leaveq 
   2562b:	retq   
   2562c:	mov    0x8(%rdi),%r10d
   25630:	cmp    $0x1,%r10d
   25634:	je     2564b <png_image_write_to_stdio+0x3b>
   25636:	mov    $0x1,%ecx
   2563b:	jmp    25625 <png_image_write_to_stdio+0x15>
   2563d:	lea    0xa568(%rip),%rsi        # 2fbac <fourbppswaptable+0x560>
   25644:	callq  90d0 <png_image_error>
   25649:	leaveq 
   2564a:	retq   
   2564b:	test   %rsi,%rsi
   2564e:	jne    2565e <png_image_write_to_stdio+0x4e>
   25650:	lea    0xa52a(%rip),%rsi        # 2fb81 <fourbppswaptable+0x535>
   25657:	callq  90d0 <png_image_error>
   2565c:	leaveq 
   2565d:	retq   
   2565e:	test   %rcx,%rcx
   25661:	je     25650 <png_image_write_to_stdio+0x40>
   25663:	mov    %rdi,%rax
   25666:	mov    %rdi,-0x30(%rbp)
   2566a:	mov    %rsi,-0x28(%rbp)
   2566e:	mov    %rcx,-0x8(%rbp)
   25672:	mov    %r8,-0x10(%rbp)
   25676:	mov    %r9,-0x18(%rbp)
   2567a:	mov    %rdx,-0x20(%rbp)
   2567e:	mov    %rax,%rdi
   25681:	callq  25b00 <png_image_write_init>
   25686:	test   %eax,%eax
   25688:	jne    2568e <png_image_write_to_stdio+0x7e>
   2568a:	xor    %eax,%eax
   2568c:	leaveq 
   2568d:	retq   
   2568e:	mov    -0x30(%rbp),%r8
   25692:	mov    (%r8),%rax
   25695:	mov    (%rax),%rax
   25698:	mov    -0x28(%rbp),%rcx
   2569c:	mov    %rcx,0x108(%rax)
   256a3:	lea    -0x88(%rbp),%rdi
   256aa:	mov    $0x58,%edx
   256af:	mov    %r15,-0x30(%rbp)
   256b3:	mov    %r8,%r15
   256b6:	xor    %esi,%esi
   256b8:	callq  5350 <memset@plt>
   256bd:	mov    %r15,-0x88(%rbp)
   256c4:	mov    -0x8(%rbp),%rax
   256c8:	mov    %rax,-0x80(%rbp)
   256cc:	mov    -0x10(%rbp),%rax
   256d0:	mov    %eax,-0x78(%rbp)
   256d3:	mov    -0x18(%rbp),%rax
   256d7:	mov    %rax,-0x70(%rbp)
   256db:	mov    -0x20(%rbp),%rax
   256df:	mov    %eax,-0x68(%rbp)
   256e2:	lea    0xfa7(%rip),%rsi        # 26690 <png_image_write_main>
   256e9:	mov    %r15,%rdi
   256ec:	lea    -0x88(%rbp),%rdx
   256f3:	callq  b250 <png_safe_execute>
   256f8:	mov    %r15,%rdi
   256fb:	mov    %rax,%r15
   256fe:	callq  5040 <png_image_free@plt>
   25703:	mov    %r15,%rax
   25706:	mov    -0x30(%rbp),%r15
   2570a:	leaveq 
   2570b:	retq   
   2570c:	nopl   0x0(%rax)

0000000000025710 <png_image_write_to_memory>:
   25710:	push   %rbp
   25711:	mov    %rsp,%rbp
   25714:	sub    $0x90,%rsp
   2571b:	xor    %eax,%eax
   2571d:	test   %rdi,%rdi
   25720:	jne    2572c <png_image_write_to_memory+0x1c>
   25722:	mov    %rax,%rcx
   25725:	test   %rcx,%rcx
   25728:	jne    2573d <png_image_write_to_memory+0x2d>
   2572a:	leaveq 
   2572b:	retq   
   2572c:	mov    0x8(%rdi),%r10d
   25730:	cmp    $0x1,%r10d
   25734:	je     2574b <png_image_write_to_memory+0x3b>
   25736:	mov    $0x1,%ecx
   2573b:	jmp    25725 <png_image_write_to_memory+0x15>
   2573d:	lea    0xa4ca(%rip),%rsi        # 2fc0e <fourbppswaptable+0x5c2>
   25744:	callq  90d0 <png_image_error>
   25749:	leaveq 
   2574a:	retq   
   2574b:	test   %rdx,%rdx
   2574e:	jne    2575e <png_image_write_to_memory+0x4e>
   25750:	lea    0xa48b(%rip),%rsi        # 2fbe2 <fourbppswaptable+0x596>
   25757:	callq  90d0 <png_image_error>
   2575c:	leaveq 
   2575d:	retq   
   2575e:	test   %r8,%r8
   25761:	je     25750 <png_image_write_to_memory+0x40>
   25763:	test   %rsi,%rsi
   25766:	jne    2576f <png_image_write_to_memory+0x5f>
   25768:	movq   $0x0,(%rdx)
   2576f:	mov    %rdi,%rax
   25772:	mov    %rdi,-0x10(%rbp)
   25776:	mov    %r8,-0x18(%rbp)
   2577a:	mov    %r9,-0x20(%rbp)
   2577e:	mov    %rcx,-0x28(%rbp)
   25782:	mov    %rsi,-0x30(%rbp)
   25786:	mov    %rdx,-0x8(%rbp)
   2578a:	mov    %rax,%rdi
   2578d:	callq  25b00 <png_image_write_init>
   25792:	test   %eax,%eax
   25794:	jne    2579a <png_image_write_to_memory+0x8a>
   25796:	xor    %eax,%eax
   25798:	leaveq 
   25799:	retq   
   2579a:	lea    -0x88(%rbp),%rdi
   257a1:	mov    $0x58,%edx
   257a6:	xor    %esi,%esi
   257a8:	callq  5350 <memset@plt>
   257ad:	mov    -0x10(%rbp),%rax
   257b1:	mov    %rax,-0x88(%rbp)
   257b8:	mov    -0x18(%rbp),%rcx
   257bc:	mov    %rcx,-0x80(%rbp)
   257c0:	mov    -0x20(%rbp),%rcx
   257c4:	mov    %ecx,-0x78(%rbp)
   257c7:	mov    0x10(%rbp),%rcx
   257cb:	mov    %rcx,-0x70(%rbp)
   257cf:	mov    -0x28(%rbp),%rcx
   257d3:	mov    %ecx,-0x68(%rbp)
   257d6:	mov    -0x30(%rbp),%rcx
   257da:	mov    %rcx,-0x48(%rbp)
   257de:	mov    -0x8(%rbp),%rcx
   257e2:	mov    (%rcx),%rcx
   257e5:	mov    %rcx,-0x40(%rbp)
   257e9:	movq   $0x0,-0x38(%rbp)
   257f1:	lea    0x14d8(%rip),%rsi        # 26cd0 <png_image_write_memory>
   257f8:	mov    %rax,%rdi
   257fb:	mov    %r15,-0x28(%rbp)
   257ff:	mov    %rax,%r15
   25802:	lea    -0x88(%rbp),%rdx
   25809:	callq  b250 <png_safe_execute>
   2580e:	mov    %r15,%rdi
   25811:	mov    %rax,%r15
   25814:	callq  5040 <png_image_free@plt>
   25819:	test   %r15d,%r15d
   2581c:	jne    25826 <png_image_write_to_memory+0x116>
   2581e:	mov    -0x28(%rbp),%r15
   25822:	xor    %eax,%eax
   25824:	leaveq 
   25825:	retq   
   25826:	mov    -0x30(%rbp),%rax
   2582a:	test   %rax,%rax
   2582d:	jne    25843 <png_image_write_to_memory+0x133>
   2582f:	mov    %r15,%rax
   25832:	mov    -0x8(%rbp),%rcx
   25836:	mov    -0x38(%rbp),%rdx
   2583a:	mov    %rdx,(%rcx)
   2583d:	mov    -0x28(%rbp),%r15
   25841:	leaveq 
   25842:	retq   
   25843:	mov    -0x8(%rbp),%rcx
   25847:	mov    (%rcx),%rax
   2584a:	cmp    -0x38(%rbp),%rax
   2584e:	jb     25855 <png_image_write_to_memory+0x145>
   25850:	mov    %r15,%rax
   25853:	jmp    25836 <png_image_write_to_memory+0x126>
   25855:	xor    %eax,%eax
   25857:	jmp    25836 <png_image_write_to_memory+0x126>
   25859:	nopl   0x0(%rax)

0000000000025860 <write_unknown_chunks>:
   25860:	push   %rbp
   25861:	mov    %rsp,%rbp
   25864:	sub    $0x30,%rsp
   25868:	movslq 0x138(%rsi),%rax
   2586f:	test   %eax,%eax
   25871:	jne    25875 <write_unknown_chunks+0x15>
   25873:	leaveq 
   25874:	retq   
   25875:	mov    0x130(%rsi),%rax
   2587c:	lea    0xa3c2(%rip),%rcx        # 2fc45 <fourbppswaptable+0x5f9>
   25883:	mov    %rbx,-0x8(%rbp)
   25887:	mov    %r12,-0x10(%rbp)
   2588b:	mov    %r13,-0x18(%rbp)
   2588f:	mov    %r14,-0x20(%rbp)
   25893:	mov    %r15,-0x28(%rbp)
   25897:	mov    %rax,%rbx
   2589a:	mov    %rsi,%r12
   2589d:	mov    %rdi,%r13
   258a0:	mov    %rcx,%r14
   258a3:	mov    %rdx,%r15
   258a6:	jmp    2590e <write_unknown_chunks+0xae>
   258a8:	movzbl 0x18(%rbx),%eax
   258ac:	and    %r15d,%eax
   258af:	test   %eax,%eax
   258b1:	je     2590a <write_unknown_chunks+0xaa>
   258b3:	mov    %r13,%rdi
   258b6:	mov    %rbx,%rsi
   258b9:	callq  5310 <png_handle_as_unknown@plt>
   258be:	cmp    $0x1,%eax
   258c1:	je     2590a <write_unknown_chunks+0xaa>
   258c3:	movzbl 0x3(%rbx),%ecx
   258c7:	and    $0x20,%ecx
   258ca:	test   %ecx,%ecx
   258cc:	jg     258e3 <write_unknown_chunks+0x83>
   258ce:	cmp    $0x3,%eax
   258d1:	je     258e3 <write_unknown_chunks+0x83>
   258d3:	test   %eax,%eax
   258d5:	jne    2590a <write_unknown_chunks+0xaa>
   258d7:	movslq 0x3c0(%r13),%rax
   258de:	cmp    $0x3,%eax
   258e1:	jne    2590a <write_unknown_chunks+0xaa>
   258e3:	mov    0x10(%rbx),%rax
   258e7:	test   %rax,%rax
   258ea:	jne    258f7 <write_unknown_chunks+0x97>
   258ec:	mov    %r13,%rdi
   258ef:	mov    %r14,%rsi
   258f2:	callq  5390 <png_warning@plt>
   258f7:	mov    0x8(%rbx),%rdx
   258fb:	mov    0x10(%rbx),%rcx
   258ff:	mov    %r13,%rdi
   25902:	mov    %rbx,%rsi
   25905:	callq  5400 <png_write_chunk@plt>
   2590a:	add    $0x20,%rbx
   2590e:	movslq 0x138(%r12),%rax
   25916:	shl    $0x5,%rax
   2591a:	add    0x130(%r12),%rax
   25922:	cmp    %rbx,%rax
   25925:	ja     258a8 <write_unknown_chunks+0x48>
   25927:	mov    -0x28(%rbp),%r15
   2592b:	mov    -0x20(%rbp),%r14
   2592f:	mov    -0x18(%rbp),%r13
   25933:	mov    -0x10(%rbp),%r12
   25937:	mov    -0x8(%rbp),%rbx
   2593b:	leaveq 
   2593c:	retq   
   2593d:	nopl   (%rax)

0000000000025940 <png_do_write_intrapixel>:
   25940:	push   %rbp
   25941:	mov    %rsp,%rbp
   25944:	movzbl 0x10(%rdi),%edx
   25948:	mov    %rdx,%rax
   2594b:	and    $0x2,%eax
   2594e:	test   %eax,%eax
   25950:	jg     25954 <png_do_write_intrapixel+0x14>
   25952:	leaveq 
   25953:	retq   
   25954:	mov    (%rdi),%r9d
   25957:	xor    %eax,%eax
   25959:	movzbl 0x11(%rdi),%ecx
   2595d:	cmp    $0x8,%cl
   25960:	je     25969 <png_do_write_intrapixel+0x29>
   25962:	cmp    $0x10,%cl
   25965:	je     25975 <png_do_write_intrapixel+0x35>
   25967:	leaveq 
   25968:	retq   
   25969:	cmp    $0x2,%dl
   2596c:	jne    25984 <png_do_write_intrapixel+0x44>
   2596e:	mov    $0x3,%edx
   25973:	jmp    259b0 <png_do_write_intrapixel+0x70>
   25975:	cmp    $0x2,%dl
   25978:	jne    259b7 <png_do_write_intrapixel+0x77>
   2597a:	mov    $0x6,%edi
   2597f:	jmpq   25a18 <png_do_write_intrapixel+0xd8>
   25984:	cmp    $0x6,%dl
   25987:	jne    25a1f <png_do_write_intrapixel+0xdf>
   2598d:	mov    $0x4,%edx
   25992:	jmp    259b0 <png_do_write_intrapixel+0x70>
   25994:	movzbl (%rsi),%ecx
   25997:	movzbl 0x1(%rsi),%edi
   2599b:	sub    %dil,%cl
   2599e:	mov    %cl,(%rsi)
   259a0:	movzbl 0x2(%rsi),%ecx
   259a4:	sub    %dil,%cl
   259a7:	mov    %cl,0x2(%rsi)
   259aa:	add    $0x1,%eax
   259ad:	add    %rdx,%rsi
   259b0:	cmp    %r9d,%eax
   259b3:	jb     25994 <png_do_write_intrapixel+0x54>
   259b5:	leaveq 
   259b6:	retq   
   259b7:	cmp    $0x6,%dl
   259ba:	jne    25a21 <png_do_write_intrapixel+0xe1>
   259bc:	mov    $0x8,%edi
   259c1:	jmp    25a18 <png_do_write_intrapixel+0xd8>
   259c3:	movzbl 0x1(%rsi),%edx
   259c7:	movzbl (%rsi),%ecx
   259ca:	shl    $0x8,%ecx
   259cd:	add    %edx,%ecx
   259cf:	movzbl 0x3(%rsi),%r8d
   259d4:	movzbl 0x2(%rsi),%edx
   259d8:	shl    $0x8,%edx
   259db:	add    %edx,%r8d
   259de:	sub    %r8d,%ecx
   259e1:	mov    %ecx,%ecx
   259e3:	movzwl %cx,%ecx
   259e6:	mov    %rcx,%rdx
   259e9:	shr    $0x8,%edx
   259ec:	mov    %dl,(%rsi)
   259ee:	mov    %cl,0x1(%rsi)
   259f1:	movzbl 0x5(%rsi),%edx
   259f5:	movzbl 0x4(%rsi),%ecx
   259f9:	shl    $0x8,%ecx
   259fc:	add    %edx,%ecx
   259fe:	sub    %r8d,%ecx
   25a01:	mov    %ecx,%ecx
   25a03:	movzwl %cx,%edx
   25a06:	mov    %rdx,%rcx
   25a09:	shr    $0x8,%ecx
   25a0c:	mov    %cl,0x4(%rsi)
   25a0f:	mov    %dl,0x5(%rsi)
   25a12:	add    $0x1,%eax
   25a15:	add    %rdi,%rsi
   25a18:	cmp    %eax,%r9d
   25a1b:	ja     259c3 <png_do_write_intrapixel+0x83>
   25a1d:	leaveq 
   25a1e:	retq   
   25a1f:	leaveq 
   25a20:	retq   
   25a21:	leaveq 
   25a22:	retq   
   25a23:	data16 nopw %cs:0x0(%rax,%rax,1)
   25a2e:	xchg   %ax,%ax

0000000000025a30 <png_write_destroy>:
   25a30:	push   %rbp
   25a31:	mov    %rsp,%rbp
   25a34:	sub    $0x10,%rsp
   25a38:	mov    %r15,-0x8(%rbp)
   25a3c:	mov    0x130(%rdi),%eax
   25a42:	and    $0x2,%eax
   25a45:	test   %eax,%eax
   25a47:	jne    25a4e <png_write_destroy+0x1e>
   25a49:	mov    %rdi,%r15
   25a4c:	jmp    25a5d <png_write_destroy+0x2d>
   25a4e:	mov    %rdi,%r15
   25a51:	lea    0x140(%r15),%rdi
   25a58:	callq  5670 <deflateEnd@plt>
   25a5d:	lea    0x1b0(%r15),%rsi
   25a64:	mov    %r15,%rdi
   25a67:	callq  27780 <png_free_buffer_list>
   25a6c:	mov    0x228(%r15),%rsi
   25a73:	mov    %r15,%rdi
   25a76:	callq  5790 <png_free@plt>
   25a7b:	movq   $0x0,0x228(%r15)
   25a86:	mov    0x220(%r15),%rsi
   25a8d:	mov    %r15,%rdi
   25a90:	callq  5790 <png_free@plt>
   25a95:	mov    0x230(%r15),%rsi
   25a9c:	mov    %r15,%rdi
   25a9f:	callq  5790 <png_free@plt>
   25aa4:	mov    0x238(%r15),%rsi
   25aab:	mov    %r15,%rdi
   25aae:	callq  5790 <png_free@plt>
   25ab3:	movq   $0x0,0x220(%r15)
   25abe:	movq   $0x0,0x230(%r15)
   25ac9:	movq   $0x0,0x238(%r15)
   25ad4:	mov    0x3c8(%r15),%rsi
   25adb:	mov    %r15,%rdi
   25ade:	callq  5790 <png_free@plt>
   25ae3:	movq   $0x0,0x3c8(%r15)
   25aee:	mov    -0x8(%rbp),%r15
   25af2:	leaveq 
   25af3:	retq   
   25af4:	data16 nopw %cs:0x0(%rax,%rax,1)
   25aff:	nop

0000000000025b00 <png_image_write_init>:
   25b00:	push   %rbp
   25b01:	mov    %rsp,%rbp
   25b04:	sub    $0x20,%rsp
   25b08:	mov    %r15,-0x10(%rbp)
   25b0c:	mov    %rdi,%r15
   25b0f:	lea    0xa151(%rip),%rdi        # 2fc67 <fourbppswaptable+0x61b>
   25b16:	lea    -0x1a9ad(%rip),%rdx        # b170 <png_safe_error>
   25b1d:	lea    -0x1a924(%rip),%rcx        # b200 <png_safe_warning>
   25b24:	mov    %r15,%rsi
   25b27:	callq  50f0 <png_create_write_struct@plt>
   25b2c:	mov    %rax,-0x20(%rbp)
   25b30:	test   %rax,%rax
   25b33:	jne    25b4a <png_image_write_init+0x4a>
   25b35:	mov    %r15,%rdi
   25b38:	lea    0xa12f(%rip),%rsi        # 2fc6e <fourbppswaptable+0x622>
   25b3f:	callq  90d0 <png_image_error>
   25b44:	mov    -0x10(%rbp),%r15
   25b48:	leaveq 
   25b49:	retq   
   25b4a:	mov    %rax,%rdi
   25b4d:	callq  5280 <png_create_info_struct@plt>
   25b52:	mov    %rax,-0x18(%rbp)
   25b56:	xor    %esi,%esi
   25b58:	test   %rax,%rax
   25b5b:	jne    25b68 <png_image_write_init+0x68>
   25b5d:	lea    -0x20(%rbp),%rdi
   25b61:	callq  56f0 <png_destroy_write_struct@plt>
   25b66:	jmp    25b35 <png_image_write_init+0x35>
   25b68:	mov    -0x20(%rbp),%rdi
   25b6c:	mov    $0x30,%esi
   25b71:	callq  5150 <png_malloc_warn@plt>
   25b76:	test   %rax,%rax
   25b79:	jne    25b8c <png_image_write_init+0x8c>
   25b7b:	mov    -0x20(%rbp),%rdi
   25b7f:	lea    -0x18(%rbp),%rsi
   25b83:	callq  55a0 <png_destroy_info_struct@plt>
   25b88:	xor    %esi,%esi
   25b8a:	jmp    25b5d <png_image_write_init+0x5d>
   25b8c:	mov    %rax,%rdi
   25b8f:	mov    %r14,-0x8(%rbp)
   25b93:	mov    %rax,%r14
   25b96:	xor    %esi,%esi
   25b98:	mov    $0x30,%edx
   25b9d:	callq  5350 <memset@plt>
   25ba2:	mov    -0x20(%rbp),%rax
   25ba6:	mov    %rax,(%r14)
   25ba9:	mov    -0x18(%rbp),%rax
   25bad:	mov    %rax,0x8(%r14)
   25bb1:	mov    0x28(%r14),%eax
   25bb5:	or     $0x1,%eax
   25bb8:	mov    %eax,0x28(%r14)
   25bbc:	mov    %r14,(%r15)
   25bbf:	mov    $0x1,%eax
   25bc4:	mov    -0x8(%rbp),%r14
   25bc8:	mov    -0x10(%rbp),%r15
   25bcc:	leaveq 
   25bcd:	retq   
   25bce:	xchg   %ax,%ax

0000000000025bd0 <png_write_image_16bit>:
   25bd0:	push   %rbp
   25bd1:	mov    %rsp,%rbp
   25bd4:	sub    $0x50,%rsp
   25bd8:	mov    %rdi,-0x38(%rbp)
   25bdc:	mov    (%rdi),%r9
   25bdf:	mov    (%r9),%rax
   25be2:	mov    (%rax),%r11
   25be5:	mov    %r11,-0x30(%rbp)
   25be9:	mov    0x28(%rdi),%rsi
   25bed:	mov    0x38(%rdi),%rcx
   25bf1:	mov    $0x1,%edx
   25bf6:	mov    0x14(%r9),%r8d
   25bfa:	mov    %r8,%rax
   25bfd:	and    $0x2,%eax
   25c00:	test   %eax,%eax
   25c02:	jne    25c0b <png_write_image_16bit+0x3b>
   25c04:	mov    $0x2,%eax
   25c09:	jmp    25c15 <png_write_image_16bit+0x45>
   25c0b:	mov    $0x4,%eax
   25c10:	mov    $0x3,%edx
   25c15:	mov    %rdx,-0x48(%rbp)
   25c19:	mov    0x10(%r9),%r10d
   25c1d:	mov    %r8,%rdi
   25c20:	and    $0x1,%edi
   25c23:	test   %edi,%edi
   25c25:	jne    25c36 <png_write_image_16bit+0x66>
   25c27:	mov    %r11,%rdi
   25c2a:	lea    0xa05d(%rip),%rsi        # 2fc8e <fourbppswaptable+0x642>
   25c31:	callq  5470 <png_error@plt>
   25c36:	and    $0x20,%r8d
   25c3a:	test   %r8d,%r8d
   25c3d:	jne    25c44 <png_write_image_16bit+0x74>
   25c3f:	mov    %rdx,%rdi
   25c42:	jmp    25c53 <png_write_image_16bit+0x83>
   25c44:	mov    $0xffffffffffffffff,%rdi
   25c4b:	add    $0x2,%rcx
   25c4f:	add    $0x2,%rsi
   25c53:	mov    %rcx,-0x40(%rbp)
   25c57:	movslq %edi,%rdi
   25c5a:	imul   0xc(%r9),%eax
   25c5f:	mov    %eax,%eax
   25c61:	lea    (%rcx,%rax,2),%rax
   25c65:	mov    $0xffff,%r8d
   25c6b:	xor    %r9d,%r9d
   25c6e:	mov    %rbx,-0x8(%rbp)
   25c72:	mov    %r12,-0x10(%rbp)
   25c76:	mov    %r13,-0x18(%rbp)
   25c7a:	mov    %r14,-0x20(%rbp)
   25c7e:	mov    %r15,-0x28(%rbp)
   25c82:	mov    %rdx,%rbx
   25c85:	mov    %r10,%r12
   25c88:	mov    %rdi,%r13
   25c8b:	mov    %r11,%rdi
   25c8e:	mov    %rax,%r14
   25c91:	mov    -0x38(%rbp),%r15
   25c95:	jmp    25cf5 <png_write_image_16bit+0x125>
   25c97:	add    $0x2,%rcx
   25c9b:	add    $0x2,%rsi
   25c9f:	movzwl (%rsi),%edx
   25ca2:	cmp    %dx,%r10w
   25ca6:	ja     25d15 <png_write_image_16bit+0x145>
   25ca8:	mov    %r8,%rdx
   25cab:	mov    %dx,(%rcx)
   25cae:	add    $0xffffffff,%ebx
   25cb1:	test   %ebx,%ebx
   25cb3:	jg     25c97 <png_write_image_16bit+0xc7>
   25cb5:	add    $0x4,%rsi
   25cb9:	add    $0x4,%rcx
   25cbd:	mov    -0x48(%rbp),%rbx
   25cc1:	cmp    %r14,%rcx
   25cc4:	jb     25d1f <png_write_image_16bit+0x14f>
   25cc6:	mov    0x38(%r15),%rsi
   25cca:	callq  5380 <png_write_row@plt>
   25ccf:	add    $0xffffffff,%r12d
   25cd3:	movzwl 0x30(%r15),%eax
   25cd8:	and    $0xfffffffffffffffe,%rax
   25cdc:	mov    -0x38(%rbp),%rcx
   25ce0:	lea    (%rcx,%rax,1),%rsi
   25ce4:	mov    -0x40(%rbp),%rcx
   25ce8:	mov    -0x30(%rbp),%rdi
   25cec:	mov    $0xffff,%r8d
   25cf2:	xor    %r9d,%r9d
   25cf5:	test   %r12d,%r12d
   25cf8:	jne    25d37 <png_write_image_16bit+0x167>
   25cfa:	mov    -0x28(%rbp),%r15
   25cfe:	mov    -0x20(%rbp),%r14
   25d02:	mov    -0x18(%rbp),%r13
   25d06:	mov    -0x10(%rbp),%r12
   25d0a:	mov    -0x8(%rbp),%rbx
   25d0e:	mov    $0x1,%eax
   25d13:	leaveq 
   25d14:	retq   
   25d15:	test   %dx,%dx
   25d18:	jne    25d3d <png_write_image_16bit+0x16d>
   25d1a:	mov    %r9,%rdx
   25d1d:	jmp    25cab <png_write_image_16bit+0xdb>
   25d1f:	movzwl (%rsi,%r13,2),%r10d
   25d24:	mov    %r10w,(%rcx,%r13,2)
   25d29:	test   %r10w,%r10w
   25d2d:	jne    25d59 <png_write_image_16bit+0x189>
   25d2f:	mov    %r9,%rax
   25d32:	jmpq   25c9f <png_write_image_16bit+0xcf>
   25d37:	mov    %rsi,-0x38(%rbp)
   25d3b:	jmp    25cc1 <png_write_image_16bit+0xf1>
   25d3d:	cmp    $0xfffe,%r10w
   25d42:	ja     25cab <png_write_image_16bit+0xdb>
   25d48:	imul   %eax,%edx
   25d4b:	add    $0x4000,%edx
   25d51:	shr    $0xf,%edx
   25d54:	jmpq   25cab <png_write_image_16bit+0xdb>
   25d59:	cmp    $0xfffe,%r10w
   25d5e:	jbe    25d68 <png_write_image_16bit+0x198>
   25d60:	mov    %r9,%rax
   25d63:	jmpq   25c9f <png_write_image_16bit+0xcf>
   25d68:	mov    %r10,%rax
   25d6b:	shr    %eax
   25d6d:	add    $0x7fff8000,%eax
   25d72:	cltd   
   25d73:	idiv   %r10d
   25d76:	jmpq   25c9f <png_write_image_16bit+0xcf>
   25d7b:	nopl   0x0(%rax,%rax,1)

0000000000025d80 <png_unpremultiply>:
   25d80:	push   %rbp
   25d81:	mov    %rsp,%rbp
   25d84:	mov    $0xff,%eax
   25d89:	cmp    %edi,%esi
   25d8b:	ja     25d8f <png_unpremultiply+0xf>
   25d8d:	leaveq 
   25d8e:	retq   
   25d8f:	cmp    $0x7f,%esi
   25d92:	ja     25d96 <png_unpremultiply+0x16>
   25d94:	leaveq 
   25d95:	retq   
   25d96:	test   %edi,%edi
   25d98:	jne    25d9e <png_unpremultiply+0x1e>
   25d9a:	xor    %eax,%eax
   25d9c:	leaveq 
   25d9d:	retq   
   25d9e:	cmp    $0xff7e,%esi
   25da4:	jbe    25db0 <png_unpremultiply+0x30>
   25da6:	mov    %rdi,%rax
   25da9:	shl    $0x8,%eax
   25dac:	sub    %edi,%eax
   25dae:	jmp    25db9 <png_unpremultiply+0x39>
   25db0:	imul   %edx,%edi
   25db3:	lea    0x40(%rdi),%eax
   25db6:	shr    $0x7,%eax
   25db9:	mov    %rax,%rcx
   25dbc:	shr    $0xf,%ecx
   25dbf:	mov    %ecx,%edx
   25dc1:	lea    0x69c4(%rip),%rcx        # 2c78c <png_sRGB_delta>
   25dc8:	movzbl (%rdx,%rcx,1),%ecx
   25dcc:	and    $0x7fff,%eax
   25dd1:	imul   %eax,%ecx
   25dd4:	shr    $0xc,%ecx
   25dd7:	lea    0x65ae(%rip),%rax        # 2c38c <png_sRGB_base>
   25dde:	movzwl (%rax,%rdx,2),%eax
   25de2:	add    %ecx,%eax
   25de4:	shr    $0x8,%eax
   25de7:	leaveq 
   25de8:	retq   
   25de9:	nopl   0x0(%rax)

0000000000025df0 <png_write_image_8bit>:
   25df0:	push   %rbp
   25df1:	mov    %rsp,%rbp
   25df4:	sub    $0x70,%rsp
   25df8:	mov    %rbx,-0x48(%rbp)
   25dfc:	mov    %r12,-0x50(%rbp)
   25e00:	mov    %r13,-0x58(%rbp)
   25e04:	mov    %r14,-0x60(%rbp)
   25e08:	mov    %r15,-0x68(%rbp)
   25e0c:	mov    %rdi,-0x28(%rbp)
   25e10:	mov    (%rdi),%rdx
   25e13:	mov    (%rdx),%rax
   25e16:	mov    (%rax),%rsi
   25e19:	mov    %rsi,-0x30(%rbp)
   25e1d:	mov    0x28(%rdi),%r12
   25e21:	mov    0x38(%rdi),%rbx
   25e25:	mov    0x10(%rdx),%r8d
   25e29:	mov    $0x1,%r13d
   25e2f:	mov    0x14(%rdx),%eax
   25e32:	mov    %rax,%rcx
   25e35:	and    $0x2,%ecx
   25e38:	test   %ecx,%ecx
   25e3a:	jne    25e43 <png_write_image_8bit+0x53>
   25e3c:	mov    $0x2,%ecx
   25e41:	jmp    25e4e <png_write_image_8bit+0x5e>
   25e43:	mov    $0x4,%ecx
   25e48:	mov    $0x3,%r13d
   25e4e:	mov    %r13,-0x40(%rbp)
   25e52:	mov    %rax,%rdi
   25e55:	and    $0x1,%edi
   25e58:	test   %edi,%edi
   25e5a:	jne    25e87 <png_write_image_8bit+0x97>
   25e5c:	lea    0x6929(%rip),%r10        # 2c78c <png_sRGB_delta>
   25e63:	mov    %r10,-0x40(%rbp)
   25e67:	lea    0x651e(%rip),%r9        # 2c38c <png_sRGB_base>
   25e6e:	mov    %r9,-0x38(%rbp)
   25e72:	imul   0xc(%rdx),%r13d
   25e77:	mov    %r13d,%eax
   25e7a:	lea    (%rbx,%rax,1),%r13
   25e7e:	mov    %rsi,%rdi
   25e81:	mov    -0x28(%rbp),%r14
   25e85:	jmp    25eff <png_write_image_8bit+0x10f>
   25e87:	and    $0x20,%eax
   25e8a:	test   %eax,%eax
   25e8c:	jne    25f1f <png_write_image_8bit+0x12f>
   25e92:	mov    %r13,%rax
   25e95:	jmpq   25f2e <png_write_image_8bit+0x13e>
   25e9a:	movzwl (%rdx),%eax
   25e9d:	mov    %rax,%rcx
   25ea0:	shl    $0x8,%ecx
   25ea3:	sub    %eax,%ecx
   25ea5:	mov    %rcx,%rax
   25ea8:	shr    $0xf,%eax
   25eab:	mov    %eax,%r11d
   25eae:	movzbl (%r11,%r10,1),%eax
   25eb3:	and    $0x7fff,%ecx
   25eb9:	imul   %ecx,%eax
   25ebc:	shr    $0xc,%eax
   25ebf:	movzwl (%r9,%r11,2),%ecx
   25ec4:	add    %ecx,%eax
   25ec6:	shr    $0x8,%eax
   25ec9:	mov    %al,(%rsi)
   25ecb:	add    $0x2,%rdx
   25ecf:	add    $0x1,%rsi
   25ed3:	cmp    %r13,%rsi
   25ed6:	jb     25e9a <png_write_image_8bit+0xaa>
   25ed8:	mov    %r8,%r15
   25edb:	mov    %rbx,%rsi
   25ede:	callq  5380 <png_write_row@plt>
   25ee3:	lea    -0x1(%r15),%r8d
   25ee7:	movzwl 0x30(%r14),%eax
   25eec:	and    $0xfffffffffffffffe,%rax
   25ef0:	add    %rax,%r12
   25ef3:	mov    -0x30(%rbp),%rdi
   25ef7:	mov    -0x38(%rbp),%r9
   25efb:	mov    -0x40(%rbp),%r10
   25eff:	test   %r8d,%r8d
   25f02:	jne    25f4f <png_write_image_8bit+0x15f>
   25f04:	mov    -0x68(%rbp),%r15
   25f08:	mov    -0x60(%rbp),%r14
   25f0c:	mov    -0x58(%rbp),%r13
   25f10:	mov    -0x50(%rbp),%r12
   25f14:	mov    -0x48(%rbp),%rbx
   25f18:	mov    $0x1,%eax
   25f1d:	leaveq 
   25f1e:	retq   
   25f1f:	mov    $0xffffffffffffffff,%rax
   25f26:	add    $0x1,%rbx
   25f2a:	add    $0x2,%r12
   25f2e:	mov    %rbx,-0x20(%rbp)
   25f32:	movslq %eax,%rax
   25f35:	mov    %rax,-0x18(%rbp)
   25f39:	imul   0xc(%rdx),%ecx
   25f3d:	mov    %ecx,%ecx
   25f3f:	lea    (%rbx,%rcx,1),%r15
   25f43:	mov    %r15,-0x38(%rbp)
   25f47:	xor    %r14d,%r14d
   25f4a:	jmpq   25fd1 <png_write_image_8bit+0x1e1>
   25f4f:	mov    %rbx,%rsi
   25f52:	mov    %r12,%rdx
   25f55:	jmpq   25ed3 <png_write_image_8bit+0xe3>
   25f5a:	add    $0x2,%r12
   25f5e:	add    $0x1,%rbx
   25f62:	movzwl (%r12),%edi
   25f67:	mov    %r15,%rsi
   25f6a:	mov    %r14,%rdx
   25f6d:	callq  25d80 <png_unpremultiply>
   25f72:	mov    %al,(%rbx)
   25f74:	add    $0xffffffff,%r13d
   25f78:	test   %r13d,%r13d
   25f7b:	jg     25f5a <png_write_image_8bit+0x16a>
   25f7d:	add    $0x4,%r12
   25f81:	add    $0x2,%rbx
   25f85:	xor    %r14d,%r14d
   25f88:	mov    -0x40(%rbp),%r13
   25f8c:	mov    -0x18(%rbp),%rax
   25f90:	mov    -0x38(%rbp),%r15
   25f94:	cmp    %r15,%rbx
   25f97:	jb     25ff1 <png_write_image_8bit+0x201>
   25f99:	mov    %rax,%r12
   25f9c:	mov    -0x28(%rbp),%rbx
   25fa0:	mov    0x38(%rbx),%rsi
   25fa4:	mov    -0x30(%rbp),%rdi
   25fa8:	callq  5380 <png_write_row@plt>
   25fad:	mov    -0x10(%rbp),%rax
   25fb1:	lea    -0x1(%rax),%r8d
   25fb5:	movzwl 0x30(%rbx),%eax
   25fb9:	and    $0xfffffffffffffffe,%rax
   25fbd:	mov    -0x8(%rbp),%rcx
   25fc1:	add    %rcx,%rax
   25fc4:	mov    %r12,%rcx
   25fc7:	mov    %rax,%r12
   25fca:	mov    %rcx,%rax
   25fcd:	mov    -0x20(%rbp),%rbx
   25fd1:	test   %r8d,%r8d
   25fd4:	jne    26032 <png_write_image_8bit+0x242>
   25fd6:	mov    -0x68(%rbp),%r15
   25fda:	mov    -0x60(%rbp),%r14
   25fde:	mov    -0x58(%rbp),%r13
   25fe2:	mov    -0x50(%rbp),%r12
   25fe6:	mov    -0x48(%rbp),%rbx
   25fea:	mov    $0x1,%eax
   25fef:	leaveq 
   25ff0:	retq   
   25ff1:	movzwl (%r12,%rax,2),%r15d
   25ff6:	mov    %r15,%rcx
   25ff9:	shl    $0x8,%ecx
   25ffc:	sub    %r15d,%ecx
   25fff:	add    $0x807f,%ecx
   26005:	shr    $0x10,%ecx
   26008:	mov    %cl,(%rbx,%rax,1)
   2600b:	test   %cl,%cl
   2600d:	je     25f62 <png_write_image_8bit+0x172>
   26013:	cmp    $0xfe,%cl
   26016:	ja     25f62 <png_write_image_8bit+0x172>
   2601c:	mov    %r15,%rax
   2601f:	shr    %eax
   26021:	add    $0x7f7f8080,%eax
   26026:	cltd   
   26027:	idiv   %r15d
   2602a:	mov    %rax,%r14
   2602d:	jmpq   25f62 <png_write_image_8bit+0x172>
   26032:	mov    %r8,-0x10(%rbp)
   26036:	mov    %r12,-0x8(%rbp)
   2603a:	jmpq   25f94 <png_write_image_8bit+0x1a4>
   2603f:	nop

0000000000026040 <png_image_set_PLTE>:
   26040:	push   %rbp
   26041:	mov    %rsp,%rbp
   26044:	sub    $0x4d0,%rsp
   2604b:	mov    %r15,-0x30(%rbp)
   2604f:	mov    %rbx,-0x10(%rbp)
   26053:	mov    %r12,-0x18(%rbp)
   26057:	mov    %r13,-0x20(%rbp)
   2605b:	mov    %r14,-0x28(%rbp)
   2605f:	mov    0x18(%rdi),%rax
   26063:	mov    %rax,-0xc0(%rbp)
   2606a:	mov    $0x100,%edx
   2606f:	mov    (%rdi),%rsi
   26072:	mov    %rsi,-0x8(%rbp)
   26076:	mov    0x1c(%rsi),%r12d
   2607a:	cmp    $0x100,%r12d
   26081:	jbe    26086 <png_image_set_PLTE+0x46>
   26083:	mov    %rdx,%r12
   26086:	xor    %r14d,%r14d
   26089:	mov    %r14,-0xa0(%rbp)
   26090:	mov    $0x1,%eax
   26095:	mov    $0x4,%ecx
   2609a:	mov    $0x2,%ebx
   2609f:	mov    0x14(%rsi),%r15d
   260a3:	mov    %r15,%rsi
   260a6:	and    $0x20,%esi
   260a9:	test   %esi,%esi
   260ab:	jne    260e5 <png_image_set_PLTE+0xa5>
   260ad:	mov    %rax,%r8
   260b0:	mov    %rbx,%rdi
   260b3:	mov    %r14,%rsi
   260b6:	mov    %rsi,%r13
   260b9:	mov    %rdi,-0x68(%rbp)
   260bd:	mov    %r8,-0x90(%rbp)
   260c4:	mov    %rax,-0x80(%rbp)
   260c8:	mov    %rsi,-0x70(%rbp)
   260cc:	mov    %r13,-0xb8(%rbp)
   260d3:	mov    %r15,%rax
   260d6:	and    $0x10,%eax
   260d9:	test   %eax,%eax
   260db:	jne    26101 <png_image_set_PLTE+0xc1>
   260dd:	mov    %rcx,%rax
   260e0:	mov    %r14,%rcx
   260e3:	jmp    2610d <png_image_set_PLTE+0xcd>
   260e5:	mov    %r15,%rsi
   260e8:	and    $0x1,%esi
   260eb:	test   %esi,%esi
   260ed:	jne    261c7 <png_image_set_PLTE+0x187>
   260f3:	mov    %rax,%r8
   260f6:	mov    %rbx,%rdi
   260f9:	mov    %r14,%rsi
   260fc:	mov    %rsi,%r13
   260ff:	jmp    260b9 <png_image_set_PLTE+0x79>
   26101:	mov    %r14,%rax
   26104:	mov    %rbx,%r14
   26107:	mov    %rax,%rbx
   2610a:	mov    %rbx,%rax
   2610d:	mov    %rcx,-0x48(%rbp)
   26111:	mov    %rax,-0x50(%rbp)
   26115:	lea    -0x1d0(%rbp),%rdi
   2611c:	mov    $0xff,%esi
   26121:	callq  5350 <memset@plt>
   26126:	lea    -0x4d0(%rbp),%rdi
   2612d:	mov    $0x300,%edx
   26132:	xor    %esi,%esi
   26134:	callq  5350 <memset@plt>
   26139:	lea    0x624c(%rip),%rax        # 2c38c <png_sRGB_base>
   26140:	mov    %rax,-0x60(%rbp)
   26144:	lea    0x6641(%rip),%rax        # 2c78c <png_sRGB_delta>
   2614b:	mov    %rax,-0x58(%rbp)
   2614f:	lea    0x0(%r13,%r14,1),%eax
   26154:	movslq %eax,%rax
   26157:	mov    %rax,-0x78(%rbp)
   2615b:	lea    0x0(%r13,%rbx,1),%eax
   26160:	movslq %eax,%rsi
   26163:	mov    %rsi,-0x88(%rbp)
   2616a:	mov    %r15,%r8
   2616d:	and    $0x3,%r8d
   26171:	mov    %r8,-0xc8(%rbp)
   26178:	lea    0x1(%r8),%r14d
   2617c:	mov    %r14,-0x40(%rbp)
   26180:	mov    %r15,%rcx
   26183:	and    $0x4,%ecx
   26186:	mov    %rcx,-0xd0(%rbp)
   2618d:	mov    %r14,%r11
   26190:	and    $0x1,%r11d
   26194:	mov    %r11,-0xb0(%rbp)
   2619b:	mov    $0x3,%eax
   261a0:	mov    %rax,-0x98(%rbp)
   261a7:	xor    %ebx,%ebx
   261a9:	mov    -0x80(%rbp),%rdx
   261ad:	mov    -0x90(%rbp),%rdi
   261b4:	mov    -0x50(%rbp),%r10
   261b8:	mov    -0xc0(%rbp),%r15
   261bf:	mov    %rbx,%rax
   261c2:	mov    %rax,%r9
   261c5:	jmp    26242 <png_image_set_PLTE+0x202>
   261c7:	mov    %rax,%r13
   261ca:	mov    %rcx,%rdi
   261cd:	mov    %rbx,%rax
   261d0:	mov    %rax,%rsi
   261d3:	mov    %r14,%r8
   261d6:	jmpq   260b9 <png_image_set_PLTE+0x79>
   261db:	pushq  -0xa0(%rbp)
   261e1:	popq   -0xa8(%rbp)
   261e7:	mov    -0xa8(%rbp),%rdi
   261ee:	movzbl (%rax,%rdi,1),%edi
   261f2:	mov    %dil,-0x1d0(%rbp,%rcx,1)
   261fa:	cmp    $0xfe,%dil
   261fe:	ja     26203 <png_image_set_PLTE+0x1c3>
   26200:	mov    %r9,%rbx
   26203:	movzbl (%rax,%rsi,1),%edi
   26207:	lea    (%rcx,%rcx,2),%rcx
   2620b:	mov    %dil,-0x4ce(%rbp,%rcx,1)
   26213:	movzbl (%rax,%rdx,1),%edi
   26217:	mov    %dil,-0x4cf(%rbp,%rcx,1)
   2621f:	mov    -0x78(%rbp),%rdi
   26223:	movzbl (%rax,%rdi,1),%eax
   26227:	mov    %al,-0x4d0(%rbp,%rcx,1)
   2622e:	mov    %r9,%rax
   26231:	mov    -0xd0(%rbp),%rcx
   26238:	xor    %r9d,%r9d
   2623b:	mov    -0x90(%rbp),%rdi
   26242:	cmp    %r12d,%eax
   26245:	jl     262a1 <png_image_set_PLTE+0x261>
   26247:	mov    -0x8(%rbp),%r14
   2624b:	mov    (%r14),%rax
   2624e:	mov    (%rax),%rdi
   26251:	mov    0x8(%rax),%rsi
   26255:	mov    %r9,%r13
   26258:	mov    %r12,%rcx
   2625b:	lea    -0x4d0(%rbp),%rdx
   26262:	callq  5530 <png_set_PLTE@plt>
   26267:	test   %ebx,%ebx
   26269:	jle    26287 <png_image_set_PLTE+0x247>
   2626b:	mov    (%r14),%rax
   2626e:	mov    (%rax),%rdi
   26271:	mov    0x8(%rax),%rsi
   26275:	mov    %rbx,%rcx
   26278:	mov    %r13,%r8
   2627b:	lea    -0x1d0(%rbp),%rdx
   26282:	callq  54f0 <png_set_tRNS@plt>
   26287:	mov    %r12d,0x1c(%r14)
   2628b:	mov    -0x28(%rbp),%r14
   2628f:	mov    -0x20(%rbp),%r13
   26293:	mov    -0x18(%rbp),%r12
   26297:	mov    -0x10(%rbp),%rbx
   2629b:	mov    -0x30(%rbp),%r15
   2629f:	leaveq 
   262a0:	retq   
   262a1:	test   %ecx,%ecx
   262a3:	movslq %eax,%rcx
   262a6:	lea    0x1(%rax),%r9d
   262aa:	jne    262e6 <png_image_set_PLTE+0x2a6>
   262ac:	imul   %r14d,%eax
   262b0:	cmp    $0x2,%r14d
   262b4:	mov    %eax,%eax
   262b6:	lea    (%rax,%r15,1),%rax
   262ba:	jbe    263b9 <png_image_set_PLTE+0x379>
   262c0:	cmp    $0x3,%r14d
   262c4:	je     26203 <png_image_set_PLTE+0x1c3>
   262ca:	cmp    $0x4,%r14d
   262ce:	je     263de <png_image_set_PLTE+0x39e>
   262d4:	mov    %r9,%rax
   262d7:	mov    -0xd0(%rbp),%rcx
   262de:	xor    %r9d,%r9d
   262e1:	jmpq   26242 <png_image_set_PLTE+0x202>
   262e6:	imul   %r14d,%eax
   262ea:	test   %r11d,%r11d
   262ed:	mov    %eax,%eax
   262ef:	lea    (%r15,%rax,2),%rax
   262f3:	jne    263f8 <png_image_set_PLTE+0x3b8>
   262f9:	test   %r13d,%r13d
   262fc:	jle    26301 <png_image_set_PLTE+0x2c1>
   262fe:	xor    %r8d,%r8d
   26301:	mov    %r8d,%edx
   26304:	movzwl (%rax,%rdx,2),%r13d
   26309:	mov    %r13,%rdx
   2630c:	shl    $0x8,%edx
   2630f:	sub    %r13d,%edx
   26312:	lea    0x807f(%rdx),%edi
   26318:	shr    $0x10,%edi
   2631b:	test   %dil,%dil
   2631e:	jne    2646c <png_image_set_PLTE+0x42c>
   26324:	xor    %r15d,%r15d
   26327:	cmp    $0xfe,%dil
   2632b:	mov    %dil,-0x1d0(%rbp,%rcx,1)
   26333:	ja     26338 <png_image_set_PLTE+0x2f8>
   26335:	mov    %r9,%rbx
   26338:	cmp    $0x2,%r14d
   2633c:	ja     2647e <png_image_set_PLTE+0x43e>
   26342:	mov    -0x70(%rbp),%rdx
   26346:	movzwl (%rax,%rdx,1),%edi
   2634a:	mov    %r15,%rdx
   2634d:	mov    %r9,%r15
   26350:	mov    %r13,%rsi
   26353:	mov    %rcx,%r13
   26356:	callq  25d80 <png_unpremultiply>
   2635b:	lea    0x0(%r13,%r13,2),%rcx
   26360:	mov    %al,-0x4cf(%rbp,%rcx,1)
   26367:	mov    %al,-0x4d0(%rbp,%rcx,1)
   2636e:	mov    %al,-0x4ce(%rbp,%rcx,1)
   26375:	mov    %r15,%rax
   26378:	mov    -0x88(%rbp),%rsi
   2637f:	mov    -0xb0(%rbp),%r11
   26386:	mov    -0xc8(%rbp),%r8
   2638d:	mov    -0xb8(%rbp),%r13
   26394:	mov    -0xd0(%rbp),%rcx
   2639b:	xor    %r9d,%r9d
   2639e:	mov    -0x80(%rbp),%rdx
   263a2:	mov    -0x90(%rbp),%rdi
   263a9:	mov    -0x50(%rbp),%r10
   263ad:	mov    -0xc0(%rbp),%r15
   263b4:	jmpq   26242 <png_image_set_PLTE+0x202>
   263b9:	test   %r8d,%r8d
   263bc:	je     26547 <png_image_set_PLTE+0x507>
   263c2:	cmp    $0x2,%r14d
   263c6:	je     2652f <png_image_set_PLTE+0x4ef>
   263cc:	mov    %r9,%rax
   263cf:	mov    -0xd0(%rbp),%rcx
   263d6:	xor    %r9d,%r9d
   263d9:	jmpq   26242 <png_image_set_PLTE+0x202>
   263de:	test   %r13d,%r13d
   263e1:	jg     261db <png_image_set_PLTE+0x19b>
   263e7:	pushq  -0x98(%rbp)
   263ed:	popq   -0xa8(%rbp)
   263f3:	jmpq   261e7 <png_image_set_PLTE+0x1a7>
   263f8:	cmp    $0x2,%r14d
   263fc:	ja     26577 <png_image_set_PLTE+0x537>
   26402:	movzwl (%rax),%edx
   26405:	mov    %rdx,%rax
   26408:	shl    $0x8,%eax
   2640b:	sub    %edx,%eax
   2640d:	mov    %rax,%rdx
   26410:	shr    $0xf,%edx
   26413:	movslq %edx,%rdi
   26416:	mov    -0x58(%rbp),%rdx
   2641a:	movzbl (%rdi,%rdx,1),%edx
   2641e:	and    $0x7fff,%eax
   26423:	imul   %eax,%edx
   26426:	shr    $0xc,%edx
   26429:	mov    -0x60(%rbp),%rax
   2642d:	movzwl (%rax,%rdi,2),%eax
   26431:	add    %edx,%eax
   26433:	shr    $0x8,%eax
   26436:	lea    (%rcx,%rcx,2),%rcx
   2643a:	mov    %al,-0x4cf(%rbp,%rcx,1)
   26441:	mov    %al,-0x4d0(%rbp,%rcx,1)
   26448:	mov    %al,-0x4ce(%rbp,%rcx,1)
   2644f:	mov    %r9,%rax
   26452:	mov    -0xd0(%rbp),%rcx
   26459:	xor    %r9d,%r9d
   2645c:	mov    -0x80(%rbp),%rdx
   26460:	mov    -0x90(%rbp),%rdi
   26467:	jmpq   26242 <png_image_set_PLTE+0x202>
   2646c:	cmp    $0xfe,%dil
   26470:	jbe    2665f <png_image_set_PLTE+0x61f>
   26476:	xor    %r15d,%r15d
   26479:	jmpq   26327 <png_image_set_PLTE+0x2e7>
   2647e:	movzwl (%rax,%rsi,2),%edi
   26482:	mov    %r13,%rsi
   26485:	mov    %r15,%rdx
   26488:	mov    %rbx,-0x38(%rbp)
   2648c:	mov    %r9,-0xa8(%rbp)
   26493:	mov    %rcx,%rbx
   26496:	mov    %rax,%r14
   26499:	callq  25d80 <png_unpremultiply>
   2649e:	lea    (%rbx,%rbx,2),%rbx
   264a2:	mov    %al,-0x4ce(%rbp,%rbx,1)
   264a9:	mov    -0x68(%rbp),%rax
   264ad:	movzwl (%r14,%rax,1),%edi
   264b2:	mov    %r13,%rsi
   264b5:	mov    %r15,%rdx
   264b8:	callq  25d80 <png_unpremultiply>
   264bd:	mov    %al,-0x4cf(%rbp,%rbx,1)
   264c4:	mov    -0x78(%rbp),%rax
   264c8:	movzwl (%r14,%rax,2),%edi
   264cd:	mov    %r15,%rdx
   264d0:	mov    %r13,%rsi
   264d3:	callq  25d80 <png_unpremultiply>
   264d8:	mov    %al,-0x4d0(%rbp,%rbx,1)
   264df:	mov    -0x40(%rbp),%r14
   264e3:	mov    -0xa8(%rbp),%rax
   264ea:	mov    -0x38(%rbp),%rbx
   264ee:	mov    -0x88(%rbp),%rsi
   264f5:	mov    -0xb0(%rbp),%r11
   264fc:	mov    -0xc8(%rbp),%r8
   26503:	mov    -0xb8(%rbp),%r13
   2650a:	mov    -0xd0(%rbp),%rcx
   26511:	xor    %r9d,%r9d
   26514:	mov    -0x80(%rbp),%rdx
   26518:	mov    -0x90(%rbp),%rdi
   2651f:	mov    -0x50(%rbp),%r10
   26523:	mov    -0xc0(%rbp),%r15
   2652a:	jmpq   26242 <png_image_set_PLTE+0x202>
   2652f:	movzbl (%rdi,%rax,1),%edx
   26533:	mov    %dl,-0x1d0(%rbp,%rcx,1)
   2653a:	cmp    $0xfe,%dl
   2653d:	jbe    2667f <png_image_set_PLTE+0x63f>
   26543:	mov    -0x80(%rbp),%rdx
   26547:	movzbl (%rax,%r13,1),%eax
   2654c:	lea    (%rcx,%rcx,2),%rcx
   26550:	mov    %al,-0x4cf(%rbp,%rcx,1)
   26557:	mov    %al,-0x4d0(%rbp,%rcx,1)
   2655e:	mov    %al,-0x4ce(%rbp,%rcx,1)
   26565:	mov    %r9,%rax
   26568:	mov    -0xd0(%rbp),%rcx
   2656f:	xor    %r9d,%r9d
   26572:	jmpq   26242 <png_image_set_PLTE+0x202>
   26577:	movzwl (%rax,%r10,1),%esi
   2657c:	mov    %rsi,%rdx
   2657f:	shl    $0x8,%edx
   26582:	sub    %esi,%edx
   26584:	mov    %rdx,%rsi
   26587:	shr    $0xf,%esi
   2658a:	movslq %esi,%rdi
   2658d:	mov    -0x58(%rbp),%r10
   26591:	movzbl (%rdi,%r10,1),%esi
   26596:	and    $0x7fff,%edx
   2659c:	imul   %edx,%esi
   2659f:	shr    $0xc,%esi
   265a2:	mov    -0x60(%rbp),%r13
   265a6:	movzwl 0x0(%r13,%rdi,2),%edx
   265ac:	add    %esi,%edx
   265ae:	shr    $0x8,%edx
   265b1:	lea    (%rcx,%rcx,2),%rdi
   265b5:	mov    %dl,-0x4ce(%rbp,%rdi,1)
   265bc:	movzwl 0x2(%rax),%ecx
   265c0:	mov    %rcx,%rdx
   265c3:	shl    $0x8,%edx
   265c6:	sub    %ecx,%edx
   265c8:	mov    %rdx,%rcx
   265cb:	shr    $0xf,%ecx
   265ce:	movslq %ecx,%rsi
   265d1:	movzbl (%rsi,%r10,1),%ecx
   265d6:	and    $0x7fff,%edx
   265dc:	imul   %edx,%ecx
   265df:	shr    $0xc,%ecx
   265e2:	movzwl 0x0(%r13,%rsi,2),%edx
   265e8:	add    %edx,%ecx
   265ea:	shr    $0x8,%ecx
   265ed:	mov    %cl,-0x4cf(%rbp,%rdi,1)
   265f4:	mov    -0x48(%rbp),%rcx
   265f8:	movzwl (%rax,%rcx,1),%eax
   265fc:	mov    %rax,%rcx
   265ff:	shl    $0x8,%ecx
   26602:	sub    %eax,%ecx
   26604:	mov    %rcx,%rax
   26607:	shr    $0xf,%eax
   2660a:	movslq %eax,%rdx
   2660d:	movzbl (%rdx,%r10,1),%eax
   26612:	and    $0x7fff,%ecx
   26618:	imul   %ecx,%eax
   2661b:	shr    $0xc,%eax
   2661e:	movzwl 0x0(%r13,%rdx,2),%ecx
   26624:	add    %ecx,%eax
   26626:	shr    $0x8,%eax
   26629:	mov    %al,-0x4d0(%rbp,%rdi,1)
   26630:	mov    %r9,%rax
   26633:	mov    -0x88(%rbp),%rsi
   2663a:	mov    -0xb8(%rbp),%r13
   26641:	mov    -0xd0(%rbp),%rcx
   26648:	xor    %r9d,%r9d
   2664b:	mov    -0x80(%rbp),%rdx
   2664f:	mov    -0x90(%rbp),%rdi
   26656:	mov    -0x50(%rbp),%r10
   2665a:	jmpq   26242 <png_image_set_PLTE+0x202>
   2665f:	mov    %r13,%rdx
   26662:	shr    %edx
   26664:	add    $0x7f7f8080,%edx
   2666a:	mov    %rax,%r8
   2666d:	mov    %rdx,%rax
   26670:	cltd   
   26671:	idiv   %r13d
   26674:	mov    %rax,%r15
   26677:	mov    %r8,%rax
   2667a:	jmpq   26327 <png_image_set_PLTE+0x2e7>
   2667f:	mov    -0x80(%rbp),%rdx
   26683:	mov    %r9,%rbx
   26686:	jmpq   26547 <png_image_set_PLTE+0x507>
   2668b:	nopl   0x0(%rax,%rax,1)

0000000000026690 <png_image_write_main>:
   26690:	push   %rbp
   26691:	mov    %rsp,%rbp
   26694:	sub    $0x70,%rsp
   26698:	mov    %r14,-0x20(%rbp)
   2669c:	mov    %r13,-0x18(%rbp)
   266a0:	mov    %r12,-0x10(%rbp)
   266a4:	mov    %rbx,-0x8(%rbp)
   266a8:	mov    %r15,-0x28(%rbp)
   266ac:	mov    (%rdi),%r12
   266af:	mov    (%r12),%rcx
   266b3:	mov    (%rcx),%rax
   266b6:	mov    %rax,-0x60(%rbp)
   266ba:	mov    0x8(%rcx),%rcx
   266be:	mov    %rcx,-0x68(%rbp)
   266c2:	xor    %esi,%esi
   266c4:	mov    %rsi,-0x58(%rbp)
   266c8:	mov    $0x1,%r14d
   266ce:	mov    %r14,-0x50(%rbp)
   266d2:	mov    0x14(%r12),%ebx
   266d7:	mov    %rbx,%r15
   266da:	and    $0x8,%r15d
   266de:	test   %r15d,%r15d
   266e1:	jle    26744 <png_image_write_main+0xb4>
   266e3:	mov    %rsi,%rdx
   266e6:	mov    %r14,%rcx
   266e9:	mov    %rdx,-0x40(%rbp)
   266ed:	test   %rcx,%rcx
   266f0:	je     26756 <png_image_write_main+0xc6>
   266f2:	mov    %rsi,%rcx
   266f5:	mov    %rcx,-0x30(%rbp)
   266f9:	test   %edx,%edx
   266fb:	jg     26765 <png_image_write_main+0xd5>
   266fd:	mov    %rsi,%r14
   26700:	mov    %rdi,%r13
   26703:	mov    %rax,%rdi
   26706:	callq  5050 <png_set_benign_errors@plt>
   2670b:	mov    0x14(%r12),%eax
   26710:	mov    %rax,%rcx
   26713:	and    $0x8,%ecx
   26716:	test   %ecx,%ecx
   26718:	je     26772 <png_image_write_main+0xe2>
   2671a:	mov    $0x1,%ecx
   2671f:	mov    $0x7fffffff,%eax
   26724:	xor    %edx,%edx
   26726:	mov    0xc(%r12),%esi
   2672b:	div    %ecx
   2672d:	cmp    %esi,%eax
   2672f:	jae    2677a <png_image_write_main+0xea>
   26731:	mov    (%r12),%rax
   26735:	mov    (%rax),%rdi
   26738:	lea    0x95a9(%rip),%rsi        # 2fce8 <fourbppswaptable+0x69c>
   2673f:	callq  5470 <png_error@plt>
   26744:	mov    %rbx,%rcx
   26747:	and    $0x4,%ecx
   2674a:	test   %ecx,%ecx
   2674c:	jne    267ad <png_image_write_main+0x11d>
   2674e:	mov    %rsi,%rcx
   26751:	mov    %rcx,%rdx
   26754:	jmp    266e9 <png_image_write_main+0x59>
   26756:	mov    %rbx,%rcx
   26759:	and    $0x1,%ecx
   2675c:	test   %ecx,%ecx
   2675e:	jne    267b8 <png_image_write_main+0x128>
   26760:	mov    %rsi,%rcx
   26763:	jmp    266f5 <png_image_write_main+0x65>
   26765:	movslq 0x20(%rdi),%rcx
   26769:	test   %ecx,%ecx
   2676b:	je     26700 <png_image_write_main+0x70>
   2676d:	mov    %rsi,%r14
   26770:	jmp    26700 <png_image_write_main+0x70>
   26772:	and    $0x3,%eax
   26775:	lea    0x1(%rax),%ecx
   26778:	jmp    2671f <png_image_write_main+0x8f>
   2677a:	imul   0xc(%r12),%ecx
   26780:	movslq 0x10(%r13),%rax
   26784:	test   %eax,%eax
   26786:	jne    2678c <png_image_write_main+0xfc>
   26788:	mov    %ecx,0x10(%r13)
   2678c:	movslq 0x10(%r13),%rax
   26790:	test   %eax,%eax
   26792:	jns    26796 <png_image_write_main+0x106>
   26794:	neg    %eax
   26796:	cmp    %eax,%ecx
   26798:	jbe    267c0 <png_image_write_main+0x130>
   2679a:	mov    (%r12),%rax
   2679e:	mov    (%rax),%rdi
   267a1:	lea    0x9522(%rip),%rsi        # 2fcca <fourbppswaptable+0x67e>
   267a8:	callq  5470 <png_error@plt>
   267ad:	mov    %rsi,%rcx
   267b0:	mov    %r14,%rdx
   267b3:	jmpq   266e9 <png_image_write_main+0x59>
   267b8:	mov    %r14,%rcx
   267bb:	jmpq   266f5 <png_image_write_main+0x65>
   267c0:	mov    $0xffffffff,%eax
   267c5:	xor    %edx,%edx
   267c7:	mov    0x10(%r12),%esi
   267cc:	div    %ecx
   267ce:	cmp    %esi,%eax
   267d0:	jb     2689a <png_image_write_main+0x20a>
   267d6:	mov    $0x3,%r9d
   267dc:	mov    $0x8,%r8d
   267e2:	mov    $0x4,%eax
   267e7:	mov    $0x2,%esi
   267ec:	test   %r15d,%r15d
   267ef:	jne    268ad <png_image_write_main+0x21d>
   267f5:	mov    0xc(%r12),%edx
   267fa:	mov    0x10(%r12),%ecx
   267ff:	test   %r14d,%r14d
   26802:	jle    2680a <png_image_write_main+0x17a>
   26804:	mov    $0x10,%r8d
   2680a:	mov    %rbx,%rdi
   2680d:	and    $0x2,%edi
   26810:	test   %edi,%edi
   26812:	jne    26816 <png_image_write_main+0x186>
   26814:	xor    %esi,%esi
   26816:	mov    %rbx,%rdi
   26819:	and    $0x1,%edi
   2681c:	test   %edi,%edi
   2681e:	jne    26822 <png_image_write_main+0x192>
   26820:	xor    %eax,%eax
   26822:	sub    $0x10,%rsp
   26826:	movl   $0x0,(%rsp)
   2682d:	movl   $0x0,0x8(%rsp)
   26835:	movl   $0x0,0x10(%rsp)
   2683d:	lea    (%rax,%rsi,1),%r9d
   26841:	mov    -0x60(%rbp),%rax
   26845:	mov    %rax,%rdi
   26848:	mov    -0x68(%rbp),%r10
   2684c:	mov    %r10,%rsi
   2684f:	mov    %r15,-0x48(%rbp)
   26853:	mov    %r13,-0x38(%rbp)
   26857:	mov    %r10,%r13
   2685a:	mov    %rax,%r15
   2685d:	callq  5460 <png_set_IHDR@plt>
   26862:	add    $0x10,%rsp
   26866:	mov    %r13,%rcx
   26869:	mov    -0x38(%rbp),%r13
   2686d:	test   %r14d,%r14d
   26870:	jg     268cd <png_image_write_main+0x23d>
   26872:	mov    0x18(%r12),%eax
   26877:	and    $0x1,%eax
   2687a:	test   %eax,%eax
   2687c:	je     268f8 <png_image_write_main+0x268>
   2687e:	mov    $0xb18f,%edx
   26883:	mov    %r15,%rdi
   26886:	mov    %rcx,%rsi
   26889:	mov    %r14,-0x38(%rbp)
   2688d:	mov    %rcx,%r14
   26890:	callq  5290 <png_set_gAMA_fixed@plt>
   26895:	jmpq   2695c <png_image_write_main+0x2cc>
   2689a:	mov    (%r12),%rax
   2689e:	mov    (%rax),%rdi
   268a1:	lea    0x940b(%rip),%rsi        # 2fcb3 <fourbppswaptable+0x667>
   268a8:	callq  5470 <png_error@plt>
   268ad:	mov    0x18(%r13),%rcx
   268b1:	test   %rcx,%rcx
   268b4:	jne    2698b <png_image_write_main+0x2fb>
   268ba:	mov    (%r12),%rax
   268be:	mov    (%rax),%rdi
   268c1:	lea    0x943b(%rip),%rsi        # 2fd03 <fourbppswaptable+0x6b7>
   268c8:	callq  5470 <png_error@plt>
   268cd:	mov    $0x186a0,%edx
   268d2:	mov    %r15,%rdi
   268d5:	mov    %rcx,%rsi
   268d8:	mov    %r14,-0x38(%rbp)
   268dc:	mov    %rcx,%r14
   268df:	callq  5290 <png_set_gAMA_fixed@plt>
   268e4:	mov    0x18(%r12),%eax
   268e9:	and    $0x1,%eax
   268ec:	test   %eax,%eax
   268ee:	je     2690e <png_image_write_main+0x27e>
   268f0:	pushq  -0x50(%rbp)
   268f3:	popq   -0x58(%rbp)
   268f6:	jmp    2695c <png_image_write_main+0x2cc>
   268f8:	mov    %r15,%rdi
   268fb:	mov    %rcx,%rsi
   268fe:	xor    %edx,%edx
   26900:	mov    %r14,-0x38(%rbp)
   26904:	mov    %rcx,%r14
   26907:	callq  50e0 <png_set_sRGB@plt>
   2690c:	jmp    2695c <png_image_write_main+0x2cc>
   2690e:	sub    $0x20,%rsp
   26912:	movl   $0x7530,(%rsp)
   26919:	movl   $0xea60,0x8(%rsp)
   26921:	movl   $0x3a98,0x10(%rsp)
   26929:	movl   $0x1770,0x18(%rsp)
   26931:	mov    $0x7a26,%edx
   26936:	mov    $0x8084,%ecx
   2693b:	mov    $0xfa00,%r8d
   26941:	mov    $0x80e8,%r9d
   26947:	mov    %r15,%rdi
   2694a:	mov    %r14,%rsi
   2694d:	callq  5250 <png_set_cHRM_fixed@plt>
   26952:	add    $0x20,%rsp
   26956:	pushq  -0x50(%rbp)
   26959:	popq   -0x58(%rbp)
   2695c:	mov    %r15,%rdi
   2695f:	mov    %r14,%rsi
   26962:	callq  5340 <png_write_info@plt>
   26967:	mov    -0x58(%rbp),%rax
   2696b:	test   %rax,%rax
   2696e:	je     26978 <png_image_write_main+0x2e8>
   26970:	mov    %r15,%rdi
   26973:	callq  51e0 <png_set_swap@plt>
   26978:	mov    %rbx,%rax
   2697b:	and    $0x10,%eax
   2697e:	test   %eax,%eax
   26980:	jne    269ff <png_image_write_main+0x36f>
   26982:	mov    -0x48(%rbp),%rax
   26986:	jmpq   26a0e <png_image_write_main+0x37e>
   2698b:	mov    0x1c(%r12),%edi
   26990:	test   %edi,%edi
   26992:	je     268ba <png_image_write_main+0x22a>
   26998:	mov    0xc(%r12),%edx
   2699d:	mov    0x10(%r12),%ecx
   269a2:	cmp    $0x10,%edi
   269a5:	jbe    26ac6 <png_image_write_main+0x436>
   269ab:	sub    $0x10,%rsp
   269af:	movl   $0x0,(%rsp)
   269b6:	movl   $0x0,0x8(%rsp)
   269be:	movl   $0x0,0x10(%rsp)
   269c6:	mov    -0x60(%rbp),%rax
   269ca:	mov    %rax,%rdi
   269cd:	mov    -0x68(%rbp),%r10
   269d1:	mov    %r10,%rsi
   269d4:	mov    %r15,-0x48(%rbp)
   269d8:	mov    %rbx,-0x60(%rbp)
   269dc:	mov    %r10,%rbx
   269df:	mov    %rax,%r15
   269e2:	callq  5460 <png_set_IHDR@plt>
   269e7:	add    $0x10,%rsp
   269eb:	mov    %r13,%rdi
   269ee:	callq  26040 <png_image_set_PLTE>
   269f3:	mov    %rbx,%rcx
   269f6:	mov    -0x60(%rbp),%rbx
   269fa:	jmpq   2686d <png_image_write_main+0x1dd>
   269ff:	mov    -0x48(%rbp),%rax
   26a03:	test   %eax,%eax
   26a05:	je     26ad7 <png_image_write_main+0x447>
   26a0b:	and    $0xffffffef,%ebx
   26a0e:	mov    %rbx,%rcx
   26a11:	and    $0x20,%ecx
   26a14:	test   %ecx,%ecx
   26a16:	je     26a23 <png_image_write_main+0x393>
   26a18:	test   %eax,%eax
   26a1a:	je     26afc <png_image_write_main+0x46c>
   26a20:	and    $0xffffffdf,%ebx
   26a23:	test   %eax,%eax
   26a25:	jg     26b21 <png_image_write_main+0x491>
   26a2b:	and    $0xfffffff0,%ebx
   26a2e:	test   %ebx,%ebx
   26a30:	jne    26b46 <png_image_write_main+0x4b6>
   26a36:	mov    -0x40(%rbp),%rbx
   26a3a:	test   %ebx,%ebx
   26a3c:	mov    0x8(%r13),%rdx
   26a40:	movslq 0x10(%r13),%rcx
   26a44:	jle    26a49 <png_image_write_main+0x3b9>
   26a46:	add    %rcx,%rcx
   26a49:	test   %rcx,%rcx
   26a4c:	jns    26a65 <png_image_write_main+0x3d5>
   26a4e:	mov    %rcx,%rsi
   26a51:	neg    %rsi
   26a54:	mov    0x10(%r12),%edi
   26a59:	add    $0xffffffff,%edi
   26a5c:	mov    %edi,%edi
   26a5e:	imul   %rdi,%rsi
   26a62:	add    %rsi,%rdx
   26a65:	mov    %rdx,0x28(%r13)
   26a69:	mov    %rcx,0x30(%r13)
   26a6d:	mov    0x18(%r12),%ecx
   26a72:	and    $0x2,%ecx
   26a75:	test   %ecx,%ecx
   26a77:	je     26aa1 <png_image_write_main+0x411>
   26a79:	xor    %esi,%esi
   26a7b:	mov    %rsi,%rdx
   26a7e:	mov    %r15,%rdi
   26a81:	mov    %r12,-0x68(%rbp)
   26a85:	mov    %rax,%r12
   26a88:	callq  53e0 <png_set_filter@plt>
   26a8d:	mov    %r15,%rdi
   26a90:	mov    $0x3,%esi
   26a95:	callq  5650 <png_set_compression_level@plt>
   26a9a:	mov    %r12,%rax
   26a9d:	mov    -0x68(%rbp),%r12
   26aa1:	test   %ebx,%ebx
   26aa3:	jg     26b55 <png_image_write_main+0x4c5>
   26aa9:	test   %eax,%eax
   26aab:	je     26ba0 <png_image_write_main+0x510>
   26ab1:	mov    0x28(%r13),%rax
   26ab5:	mov    0x30(%r13),%r13
   26ab9:	mov    0x10(%r12),%ebx
   26abe:	mov    %rax,%r12
   26ac1:	jmpq   26bbe <png_image_write_main+0x52e>
   26ac6:	cmp    $0x4,%edi
   26ac9:	jbe    26be8 <png_image_write_main+0x558>
   26acf:	mov    %rax,%r8
   26ad2:	jmpq   269ab <png_image_write_main+0x31b>
   26ad7:	mov    %rbx,%rcx
   26ada:	and    $0x2,%ecx
   26add:	test   %ecx,%ecx
   26adf:	je     26a0b <png_image_write_main+0x37b>
   26ae5:	mov    %rax,%r14
   26ae8:	mov    %r15,%rdi
   26aeb:	callq  5860 <png_set_bgr@plt>
   26af0:	mov    %r14,%rax
   26af3:	mov    -0x68(%rbp),%r14
   26af7:	jmpq   26a0b <png_image_write_main+0x37b>
   26afc:	mov    %rbx,%rcx
   26aff:	and    $0x1,%ecx
   26b02:	test   %ecx,%ecx
   26b04:	je     26a20 <png_image_write_main+0x390>
   26b0a:	mov    %rax,%r14
   26b0d:	mov    %r15,%rdi
   26b10:	callq  50d0 <png_set_swap_alpha@plt>
   26b15:	mov    %r14,%rax
   26b18:	mov    -0x68(%rbp),%r14
   26b1c:	jmpq   26a20 <png_image_write_main+0x390>
   26b21:	mov    0x1c(%r12),%ecx
   26b26:	cmp    $0x10,%ecx
   26b29:	ja     26a2b <png_image_write_main+0x39b>
   26b2f:	mov    %rax,%r14
   26b32:	mov    %r15,%rdi
   26b35:	callq  5580 <png_set_packing@plt>
   26b3a:	mov    %r14,%rax
   26b3d:	mov    -0x68(%rbp),%r14
   26b41:	jmpq   26a2b <png_image_write_main+0x39b>
   26b46:	mov    %r15,%rdi
   26b49:	lea    0x91d7(%rip),%rsi        # 2fd27 <fourbppswaptable+0x6db>
   26b50:	callq  5470 <png_error@plt>
   26b55:	mov    -0x30(%rbp),%rcx
   26b59:	test   %ecx,%ecx
   26b5b:	jle    26aa9 <png_image_write_main+0x419>
   26b61:	mov    %r15,%rdi
   26b64:	mov    %r14,%rsi
   26b67:	callq  50c0 <png_get_rowbytes@plt>
   26b6c:	mov    %rax,%rsi
   26b6f:	mov    %r15,%rdi
   26b72:	callq  5800 <png_malloc@plt>
   26b77:	mov    -0x38(%rbp),%rcx
   26b7b:	test   %ecx,%ecx
   26b7d:	mov    %rax,0x38(%r13)
   26b81:	jg     26bf8 <png_image_write_main+0x568>
   26b83:	mov    %r12,%rdi
   26b86:	mov    %rax,%rbx
   26b89:	lea    -0xda0(%rip),%rsi        # 25df0 <png_write_image_8bit>
   26b90:	mov    %r13,%rdx
   26b93:	callq  b250 <png_safe_execute>
   26b98:	mov    %rbx,%rsi
   26b9b:	mov    %rax,%rbx
   26b9e:	jmp    26c13 <png_image_write_main+0x583>
   26ba0:	movslq 0x20(%r13),%rax
   26ba4:	test   %eax,%eax
   26ba6:	jne    26b61 <png_image_write_main+0x4d1>
   26ba8:	jmpq   26ab1 <png_image_write_main+0x421>
   26bad:	mov    %r15,%rdi
   26bb0:	mov    %r12,%rsi
   26bb3:	callq  5380 <png_write_row@plt>
   26bb8:	add    %r13,%r12
   26bbb:	add    $0xffffffff,%ebx
   26bbe:	test   %ebx,%ebx
   26bc0:	jne    26bad <png_image_write_main+0x51d>
   26bc2:	mov    %r14,%rsi
   26bc5:	mov    %r15,%rdi
   26bc8:	callq  53c0 <png_write_end@plt>
   26bcd:	mov    -0x28(%rbp),%r15
   26bd1:	mov    -0x8(%rbp),%rbx
   26bd5:	mov    $0x1,%eax
   26bda:	mov    -0x10(%rbp),%r12
   26bde:	mov    -0x18(%rbp),%r13
   26be2:	mov    -0x20(%rbp),%r14
   26be6:	leaveq 
   26be7:	retq   
   26be8:	cmp    $0x2,%edi
   26beb:	ja     26c3f <png_image_write_main+0x5af>
   26bed:	mov    $0x1,%r8d
   26bf3:	jmpq   269ab <png_image_write_main+0x31b>
   26bf8:	mov    %r12,%rdi
   26bfb:	mov    %rax,%rbx
   26bfe:	lea    -0x1035(%rip),%rsi        # 25bd0 <png_write_image_16bit>
   26c05:	mov    %r13,%rdx
   26c08:	callq  b250 <png_safe_execute>
   26c0d:	mov    %rbx,%rsi
   26c10:	mov    %rax,%rbx
   26c13:	movq   $0x0,0x38(%r13)
   26c1b:	mov    %r15,%rdi
   26c1e:	callq  5790 <png_free@plt>
   26c23:	test   %ebx,%ebx
   26c25:	jne    26bc2 <png_image_write_main+0x532>
   26c27:	mov    -0x28(%rbp),%r15
   26c2b:	mov    -0x8(%rbp),%rbx
   26c2f:	xor    %eax,%eax
   26c31:	mov    -0x10(%rbp),%r12
   26c35:	mov    -0x18(%rbp),%r13
   26c39:	mov    -0x20(%rbp),%r14
   26c3d:	leaveq 
   26c3e:	retq   
   26c3f:	mov    %rsi,%r8
   26c42:	jmpq   269ab <png_image_write_main+0x31b>
   26c47:	nopw   0x0(%rax,%rax,1)

0000000000026c50 <image_memory_write>:
   26c50:	push   %rbp
   26c51:	mov    %rsp,%rbp
   26c54:	sub    $0x10,%rsp
   26c58:	mov    0x108(%rdi),%rcx
   26c5f:	mov    0x50(%rcx),%r8
   26c63:	mov    %r8,%rax
   26c66:	not    %rax
   26c69:	cmp    %rdx,%rax
   26c6c:	jae    26c7a <image_memory_write+0x2a>
   26c6e:	lea    0x90de(%rip),%rsi        # 2fd53 <fourbppswaptable+0x707>
   26c75:	callq  5470 <png_error@plt>
   26c7a:	test   %rdx,%rdx
   26c7d:	jne    26c81 <image_memory_write+0x31>
   26c7f:	leaveq 
   26c80:	retq   
   26c81:	lea    (%r8,%rdx,1),%rax
   26c85:	cmp    0x48(%rcx),%rax
   26c89:	ja     26cb3 <image_memory_write+0x63>
   26c8b:	mov    %r8,%rdi
   26c8e:	add    0x40(%rcx),%rdi
   26c92:	mov    %r14,-0x8(%rbp)
   26c96:	mov    %r15,-0x10(%rbp)
   26c9a:	mov    %rcx,%r14
   26c9d:	mov    %rax,%r15
   26ca0:	callq  54c0 <memcpy@plt>
   26ca5:	mov    %r15,%rax
   26ca8:	mov    %r14,%rcx
   26cab:	mov    -0x10(%rbp),%r15
   26caf:	mov    -0x8(%rbp),%r14
   26cb3:	mov    %rax,0x50(%rcx)
   26cb7:	leaveq 
   26cb8:	retq   
   26cb9:	nopl   0x0(%rax)

0000000000026cc0 <image_memory_flush>:
   26cc0:	push   %rbp
   26cc1:	mov    %rsp,%rbp
   26cc4:	leaveq 
   26cc5:	retq   
   26cc6:	nopw   %cs:0x0(%rax,%rax,1)

0000000000026cd0 <png_image_write_memory>:
   26cd0:	push   %rbp
   26cd1:	mov    %rsp,%rbp
   26cd4:	sub    $0x10,%rsp
   26cd8:	mov    %r15,-0x8(%rbp)
   26cdc:	mov    (%rdi),%rax
   26cdf:	mov    (%rax),%rax
   26ce2:	mov    (%rax),%rax
   26ce5:	mov    %rdi,%r15
   26ce8:	mov    %rax,%rdi
   26ceb:	lea    -0xa2(%rip),%rdx        # 26c50 <image_memory_write>
   26cf2:	lea    -0x39(%rip),%rcx        # 26cc0 <image_memory_flush>
   26cf9:	mov    %r15,%rsi
   26cfc:	callq  5300 <png_set_write_fn@plt>
   26d01:	mov    %r15,%rdi
   26d04:	callq  26690 <png_image_write_main>
   26d09:	mov    -0x8(%rbp),%r15
   26d0d:	leaveq 
   26d0e:	retq   
   26d0f:	nop

0000000000026d10 <png_do_write_transformations>:
   26d10:	push   %rbp
   26d11:	mov    %rsp,%rbp
   26d14:	sub    $0x10,%rsp
   26d18:	mov    %r14,-0x8(%rbp)
   26d1c:	mov    %r15,-0x10(%rbp)
   26d20:	test   %rdi,%rdi
   26d23:	jne    26d27 <png_do_write_transformations+0x17>
   26d25:	leaveq 
   26d26:	retq   
   26d27:	mov    0x134(%rdi),%eax
   26d2d:	and    $0x100000,%eax
   26d32:	test   %eax,%eax
   26d34:	jne    26d6e <png_do_write_transformations+0x5e>
   26d36:	mov    %r14,%rax
   26d39:	mov    %rsi,%r14
   26d3c:	mov    %r15,%rcx
   26d3f:	mov    %rdi,%r15
   26d42:	mov    0x134(%r15),%edx
   26d49:	and    $0x8000,%edx
   26d4f:	test   %edx,%edx
   26d51:	je     26da5 <png_do_write_transformations+0x95>
   26d53:	mov    0x228(%r15),%rcx
   26d5a:	mov    0x130(%r15),%eax
   26d61:	and    $0x80,%eax
   26d66:	test   %eax,%eax
   26d68:	je     26d8c <png_do_write_transformations+0x7c>
   26d6a:	xor    %edx,%edx
   26d6c:	jmp    26d91 <png_do_write_transformations+0x81>
   26d6e:	mov    0x118(%rdi),%rax
   26d75:	test   %rax,%rax
   26d78:	jne    26efc <png_do_write_transformations+0x1ec>
   26d7e:	mov    %r14,%rax
   26d81:	mov    %rsi,%r14
   26d84:	mov    %r15,%rcx
   26d87:	mov    %rdi,%r15
   26d8a:	jmp    26d42 <png_do_write_transformations+0x32>
   26d8c:	mov    $0x1,%edx
   26d91:	lea    0x1(%rcx),%rsi
   26d95:	mov    %r14,%rdi
   26d98:	callq  23840 <png_do_strip_channel>
   26d9d:	mov    -0x10(%rbp),%rcx
   26da1:	mov    -0x8(%rbp),%rax
   26da5:	mov    0x134(%r15),%edx
   26dac:	and    $0x10000,%edx
   26db2:	test   %edx,%edx
   26db4:	je     26dd1 <png_do_write_transformations+0xc1>
   26db6:	mov    0x228(%r15),%rsi
   26dbd:	add    $0x1,%rsi
   26dc1:	mov    %r14,%rdi
   26dc4:	callq  239f0 <png_do_packswap>
   26dc9:	mov    -0x10(%rbp),%rcx
   26dcd:	mov    -0x8(%rbp),%rax
   26dd1:	mov    0x134(%r15),%edx
   26dd8:	and    $0x4,%edx
   26ddb:	test   %edx,%edx
   26ddd:	je     26e02 <png_do_write_transformations+0xf2>
   26ddf:	mov    0x228(%r15),%rsi
   26de6:	add    $0x1,%rsi
   26dea:	movzbl 0x268(%r15),%edx
   26df2:	mov    %r14,%rdi
   26df5:	callq  26f40 <png_do_pack>
   26dfa:	mov    -0x10(%rbp),%rcx
   26dfe:	mov    -0x8(%rbp),%rax
   26e02:	mov    0x134(%r15),%edx
   26e09:	and    $0x10,%edx
   26e0c:	test   %edx,%edx
   26e0e:	je     26e2b <png_do_write_transformations+0x11b>
   26e10:	mov    0x228(%r15),%rsi
   26e17:	add    $0x1,%rsi
   26e1b:	mov    %r14,%rdi
   26e1e:	callq  239b0 <png_do_swap>
   26e23:	mov    -0x10(%rbp),%rcx
   26e27:	mov    -0x8(%rbp),%rax
   26e2b:	mov    0x134(%r15),%edx
   26e32:	and    $0x8,%edx
   26e35:	test   %edx,%edx
   26e37:	je     26e5b <png_do_write_transformations+0x14b>
   26e39:	mov    0x228(%r15),%rsi
   26e40:	add    $0x1,%rsi
   26e44:	lea    0x2dd(%r15),%rdx
   26e4b:	mov    %r14,%rdi
   26e4e:	callq  27120 <png_do_shift>
   26e53:	mov    -0x10(%rbp),%rcx
   26e57:	mov    -0x8(%rbp),%rax
   26e5b:	mov    0x134(%r15),%edx
   26e62:	and    $0x20000,%edx
   26e68:	test   %edx,%edx
   26e6a:	je     26e87 <png_do_write_transformations+0x177>
   26e6c:	mov    0x228(%r15),%rsi
   26e73:	add    $0x1,%rsi
   26e77:	mov    %r14,%rdi
   26e7a:	callq  27400 <png_do_write_swap_alpha>
   26e7f:	mov    -0x10(%rbp),%rcx
   26e83:	mov    -0x8(%rbp),%rax
   26e87:	mov    0x134(%r15),%edx
   26e8e:	and    $0x80000,%edx
   26e94:	test   %edx,%edx
   26e96:	je     26eb3 <png_do_write_transformations+0x1a3>
   26e98:	mov    0x228(%r15),%rsi
   26e9f:	add    $0x1,%rsi
   26ea3:	mov    %r14,%rdi
   26ea6:	callq  274f0 <png_do_write_invert_alpha>
   26eab:	mov    -0x10(%rbp),%rcx
   26eaf:	mov    -0x8(%rbp),%rax
   26eb3:	mov    0x134(%r15),%edx
   26eba:	and    $0x1,%edx
   26ebd:	test   %edx,%edx
   26ebf:	je     26ee6 <png_do_write_transformations+0x1d6>
   26ec1:	mov    0x228(%r15),%rsi
   26ec8:	add    $0x1,%rsi
   26ecc:	mov    %r14,%rdi
   26ecf:	mov    %r14,-0x8(%rbp)
   26ed3:	mov    %rax,%r14
   26ed6:	callq  23ae0 <png_do_bgr>
   26edb:	mov    %r14,%rax
   26ede:	mov    -0x8(%rbp),%r14
   26ee2:	mov    -0x10(%rbp),%rcx
   26ee6:	mov    0x134(%r15),%edx
   26eed:	and    $0x20,%edx
   26ef0:	test   %edx,%edx
   26ef2:	jne    26f1c <png_do_write_transformations+0x20c>
   26ef4:	mov    %rax,%r14
   26ef7:	mov    %rcx,%r15
   26efa:	leaveq 
   26efb:	retq   
   26efc:	mov    0x228(%rdi),%rdx
   26f03:	add    $0x1,%rdx
   26f07:	mov    %rdi,%r15
   26f0a:	mov    %rsi,%r14
   26f0d:	callq  *%rax
   26f0f:	mov    -0x10(%rbp),%rcx
   26f13:	mov    -0x8(%rbp),%rax
   26f17:	jmpq   26d42 <png_do_write_transformations+0x32>
   26f1c:	mov    0x228(%r15),%rsi
   26f23:	add    $0x1,%rsi
   26f27:	mov    %r14,%rdi
   26f2a:	mov    %rax,%r14
   26f2d:	mov    %rcx,%r15
   26f30:	callq  23a50 <png_do_invert>
   26f35:	leaveq 
   26f36:	retq   
   26f37:	nopw   0x0(%rax,%rax,1)

0000000000026f40 <png_do_pack>:
   26f40:	push   %rbp
   26f41:	mov    %rsp,%rbp
   26f44:	sub    $0x20,%rsp
   26f48:	movzbl 0x11(%rdi),%eax
   26f4c:	cmp    $0x8,%al
   26f4e:	je     26f52 <png_do_pack+0x12>
   26f50:	leaveq 
   26f51:	retq   
   26f52:	movzbl 0x12(%rdi),%eax
   26f56:	cmp    $0x1,%al
   26f58:	je     26f5c <png_do_pack+0x1c>
   26f5a:	leaveq 
   26f5b:	retq   
   26f5c:	xor    %r8d,%r8d
   26f5f:	cmp    $0x1,%edx
   26f62:	jle    26f73 <png_do_pack+0x33>
   26f64:	cmp    $0x2,%edx
   26f67:	je     26f9e <png_do_pack+0x5e>
   26f69:	cmp    $0x4,%edx
   26f6c:	je     26fbd <png_do_pack+0x7d>
   26f6e:	mov    %rdx,%rax
   26f71:	jmp    26f7b <png_do_pack+0x3b>
   26f73:	cmp    $0x1,%edx
   26f76:	je     26fdc <png_do_pack+0x9c>
   26f78:	mov    %rdx,%rax
   26f7b:	mov    %al,0x11(%rdi)
   26f7e:	movzbl 0x12(%rdi),%ecx
   26f82:	imul   %cl
   26f84:	mov    %al,0x13(%rdi)
   26f87:	cmp    $0x7,%al
   26f89:	ja     26ffb <png_do_pack+0xbb>
   26f8b:	movzbl %al,%eax
   26f8e:	mov    (%rdi),%ecx
   26f90:	imul   %rcx,%rax
   26f94:	add    $0x7,%rax
   26f98:	shr    $0x3,%rax
   26f9c:	jmp    27008 <png_do_pack+0xc8>
   26f9e:	mov    (%rdi),%r9d
   26fa1:	mov    $0x6,%r10d
   26fa7:	mov    %rdx,-0x18(%rbp)
   26fab:	mov    %r15,-0x10(%rbp)
   26faf:	mov    %rsi,%r11
   26fb2:	mov    %r8,%rax
   26fb5:	mov    %rax,%r15
   26fb8:	mov    %r10,%rcx
   26fbb:	jmp    27022 <png_do_pack+0xe2>
   26fbd:	mov    (%rdi),%r9d
   26fc0:	mov    $0x4,%r10d
   26fc6:	mov    %rdx,-0x18(%rbp)
   26fca:	mov    %r15,-0x10(%rbp)
   26fce:	mov    %rsi,%r11
   26fd1:	mov    %r8,%rax
   26fd4:	mov    %rax,%r15
   26fd7:	mov    %r10,%rcx
   26fda:	jmp    2704d <png_do_pack+0x10d>
   26fdc:	mov    (%rdi),%r10d
   26fdf:	mov    $0x80,%r11d
   26fe5:	mov    %rdx,-0x18(%rbp)
   26fe9:	mov    %r15,-0x8(%rbp)
   26fed:	mov    %rsi,%r9
   26ff0:	mov    %r8,%rax
   26ff3:	mov    %rax,%rdx
   26ff6:	mov    %r11,%rcx
   26ff9:	jmp    2706d <png_do_pack+0x12d>
   26ffb:	movzbl %al,%eax
   26ffe:	shr    $0x3,%rax
   27002:	mov    (%rdi),%ecx
   27004:	imul   %rcx,%rax
   27008:	mov    %rax,0x8(%rdi)
   2700c:	leaveq 
   2700d:	retq   
   2700e:	mov    %al,(%rsi)
   27010:	add    $0x1,%rsi
   27014:	mov    %r8,%rax
   27017:	mov    %r10,%rcx
   2701a:	add    $0x1,%r11
   2701e:	add    $0x1,%r15d
   27022:	cmp    %r9d,%r15d
   27025:	jb     2708b <png_do_pack+0x14b>
   27027:	cmp    $0x6,%ecx
   2702a:	jne    270a6 <png_do_pack+0x166>
   2702c:	mov    -0x10(%rbp),%r15
   27030:	mov    -0x18(%rbp),%rax
   27034:	jmpq   26f7b <png_do_pack+0x3b>
   27039:	mov    %al,(%rsi)
   2703b:	add    $0x1,%rsi
   2703f:	mov    %r8,%rax
   27042:	mov    %r10,%rcx
   27045:	add    $0x1,%r11
   27049:	add    $0x1,%r15d
   2704d:	cmp    %r9d,%r15d
   27050:	jb     270b5 <png_do_pack+0x175>
   27052:	cmp    $0x4,%ecx
   27055:	jne    270d0 <png_do_pack+0x190>
   27057:	mov    -0x10(%rbp),%r15
   2705b:	mov    -0x18(%rbp),%rax
   2705f:	jmpq   26f7b <png_do_pack+0x3b>
   27064:	shr    %ecx
   27066:	add    $0x1,%r9
   2706a:	add    $0x1,%edx
   2706d:	cmp    %r10d,%edx
   27070:	jb     270df <png_do_pack+0x19f>
   27072:	cmp    $0x80,%ecx
   27078:	jne    27104 <png_do_pack+0x1c4>
   2707e:	mov    -0x8(%rbp),%r15
   27082:	mov    -0x18(%rbp),%rax
   27086:	jmpq   26f7b <png_do_pack+0x3b>
   2708b:	movzbl (%r11),%edx
   2708f:	and    $0x3,%edx
   27092:	shl    %cl,%edx
   27094:	or     %edx,%eax
   27096:	test   %ecx,%ecx
   27098:	je     2700e <png_do_pack+0xce>
   2709e:	add    $0xfffffffe,%ecx
   270a1:	jmpq   2701a <png_do_pack+0xda>
   270a6:	mov    %al,(%rsi)
   270a8:	mov    -0x10(%rbp),%r15
   270ac:	mov    -0x18(%rbp),%rax
   270b0:	jmpq   26f7b <png_do_pack+0x3b>
   270b5:	movzbl (%r11),%edx
   270b9:	and    $0xf,%edx
   270bc:	shl    %cl,%edx
   270be:	or     %edx,%eax
   270c0:	test   %ecx,%ecx
   270c2:	je     27039 <png_do_pack+0xf9>
   270c8:	add    $0xfffffffc,%ecx
   270cb:	jmpq   27045 <png_do_pack+0x105>
   270d0:	mov    %al,(%rsi)
   270d2:	mov    -0x10(%rbp),%r15
   270d6:	mov    -0x18(%rbp),%rax
   270da:	jmpq   26f7b <png_do_pack+0x3b>
   270df:	movzbl (%r9),%r15d
   270e3:	test   %r15b,%r15b
   270e6:	je     270ea <png_do_pack+0x1aa>
   270e8:	or     %ecx,%eax
   270ea:	cmp    $0x1,%ecx
   270ed:	jg     27064 <png_do_pack+0x124>
   270f3:	mov    %al,(%rsi)
   270f5:	add    $0x1,%rsi
   270f9:	mov    %r8,%rax
   270fc:	mov    %r11,%rcx
   270ff:	jmpq   27066 <png_do_pack+0x126>
   27104:	mov    %al,(%rsi)
   27106:	mov    -0x8(%rbp),%r15
   2710a:	mov    -0x18(%rbp),%rax
   2710e:	jmpq   26f7b <png_do_pack+0x3b>
   27113:	data16 nopw %cs:0x0(%rax,%rax,1)
   2711e:	xchg   %ax,%ax

0000000000027120 <png_do_shift>:
   27120:	push   %rbp
   27121:	mov    %rsp,%rbp
   27124:	sub    $0x40,%rsp
   27128:	movzbl 0x10(%rdi),%eax
   2712c:	cmp    $0x3,%al
   2712e:	jne    27132 <png_do_shift+0x12>
   27130:	leaveq 
   27131:	retq   
   27132:	mov    $0x4,%ecx
   27137:	and    $0x2,%eax
   2713a:	test   %eax,%eax
   2713c:	jg     2715f <png_do_shift+0x3f>
   2713e:	movzbl 0x11(%rdi),%eax
   27142:	movzbl 0x3(%rdx),%r8d
   27147:	sub    %r8d,%eax
   2714a:	mov    %eax,-0x40(%rbp)
   2714d:	mov    %r8d,-0x30(%rbp)
   27151:	mov    $0x2,%r8d
   27157:	mov    $0x1,%r9d
   2715d:	jmp    271a5 <png_do_shift+0x85>
   2715f:	movzbl 0x11(%rdi),%eax
   27163:	movzbl (%rdx),%r9d
   27167:	mov    %rax,%r8
   2716a:	sub    %r9d,%r8d
   2716d:	mov    %r8d,-0x40(%rbp)
   27171:	mov    %r9d,-0x30(%rbp)
   27175:	movzbl 0x1(%rdx),%r9d
   2717a:	mov    %rax,%r8
   2717d:	sub    %r9d,%r8d
   27180:	mov    %r8d,-0x3c(%rbp)
   27184:	mov    %r9d,-0x2c(%rbp)
   27188:	movzbl 0x2(%rdx),%r8d
   2718d:	sub    %r8d,%eax
   27190:	mov    %eax,-0x38(%rbp)
   27193:	mov    %r8d,-0x28(%rbp)
   27197:	mov    %rcx,%r8
   2719a:	mov    $0xc,%ecx
   2719f:	mov    $0x3,%r9d
   271a5:	movzbl 0x10(%rdi),%eax
   271a9:	and    $0x4,%eax
   271ac:	test   %eax,%eax
   271ae:	jle    271c8 <png_do_shift+0xa8>
   271b0:	movzbl 0x11(%rdi),%eax
   271b4:	movzbl 0x4(%rdx),%r9d
   271b9:	sub    %r9d,%eax
   271bc:	mov    %eax,-0x40(%rbp,%rcx,1)
   271c0:	mov    %r9d,-0x30(%rbp,%rcx,1)
   271c5:	mov    %r8,%r9
   271c8:	xor    %r8d,%r8d
   271cb:	movzbl 0x11(%rdi),%ecx
   271cf:	cmp    $0x7,%cl
   271d2:	jbe    271f0 <png_do_shift+0xd0>
   271d4:	cmp    $0x8,%cl
   271d7:	je     2721e <png_do_shift+0xfe>
   271d9:	mov    (%rdi),%edi
   271db:	imul   %r9d,%edi
   271df:	mov    %r13,-0x10(%rbp)
   271e3:	mov    %r14,-0x18(%rbp)
   271e7:	mov    %r15,-0x20(%rbp)
   271eb:	mov    %r8,%r10
   271ee:	jmp    2726b <png_do_shift+0x14b>
   271f0:	mov    0x8(%rdi),%rdi
   271f4:	movzbl 0x3(%rdx),%eax
   271f8:	cmp    $0x1,%al
   271fa:	je     27282 <png_do_shift+0x162>
   27200:	mov    $0xff,%edx
   27205:	cmp    $0x4,%cl
   27208:	je     2729d <png_do_shift+0x17d>
   2720e:	mov    %r14,-0x8(%rbp)
   27212:	mov    %r15,-0x20(%rbp)
   27216:	mov    %r8,%r9
   27219:	jmpq   272db <png_do_shift+0x1bb>
   2721e:	mov    (%rdi),%edi
   27220:	imul   %r9d,%edi
   27224:	mov    %r13,-0x10(%rbp)
   27228:	mov    %r14,-0x18(%rbp)
   2722c:	mov    %r15,-0x20(%rbp)
   27230:	mov    %r8,%r10
   27233:	jmpq   27318 <png_do_shift+0x1f8>
   27238:	mov    %r11,%r14
   2723b:	shl    %cl,%r14d
   2723e:	or     %r14d,%eax
   27241:	sub    %r13d,%ecx
   27244:	movslq -0x30(%rbp,%rdx,4),%r13
   27249:	mov    %r13,%r14
   2724c:	neg    %r14d
   2724f:	cmp    %ecx,%r14d
   27252:	jl     2732f <png_do_shift+0x20f>
   27258:	mov    %rax,%rcx
   2725b:	shr    $0x8,%ecx
   2725e:	mov    %cl,(%rsi)
   27260:	mov    %al,0x1(%rsi)
   27263:	add    $0x1,%r10d
   27267:	add    $0x2,%rsi
   2726b:	cmp    %edi,%r10d
   2726e:	jb     27350 <png_do_shift+0x230>
   27274:	mov    -0x20(%rbp),%r15
   27278:	mov    -0x18(%rbp),%r14
   2727c:	mov    -0x10(%rbp),%r13
   27280:	leaveq 
   27281:	retq   
   27282:	cmp    $0x2,%cl
   27285:	jne    27200 <png_do_shift+0xe0>
   2728b:	mov    $0x55,%edx
   27290:	mov    %r14,-0x8(%rbp)
   27294:	mov    %r15,-0x20(%rbp)
   27298:	mov    %r8,%r9
   2729b:	jmp    272db <png_do_shift+0x1bb>
   2729d:	cmp    $0x3,%al
   2729f:	je     27375 <png_do_shift+0x255>
   272a5:	mov    %r14,-0x8(%rbp)
   272a9:	mov    %r15,-0x20(%rbp)
   272ad:	mov    %r8,%r9
   272b0:	jmp    272db <png_do_shift+0x1bb>
   272b2:	mov    %r10,%r14
   272b5:	shl    %cl,%r14d
   272b8:	or     %r14d,%eax
   272bb:	sub    %r11d,%ecx
   272be:	movslq -0x30(%rbp),%r11
   272c2:	mov    %r11,%r14
   272c5:	neg    %r14d
   272c8:	cmp    %ecx,%r14d
   272cb:	jl     2738a <png_do_shift+0x26a>
   272d1:	mov    %al,(%rsi)
   272d3:	add    $0x1,%r9
   272d7:	add    $0x1,%rsi
   272db:	cmp    %rdi,%r9
   272de:	jb     273b0 <png_do_shift+0x290>
   272e4:	mov    -0x20(%rbp),%r15
   272e8:	mov    -0x8(%rbp),%r14
   272ec:	leaveq 
   272ed:	retq   
   272ee:	mov    %r11,%r14
   272f1:	shl    %cl,%r14d
   272f4:	or     %r14d,%eax
   272f7:	sub    %r13d,%ecx
   272fa:	movslq -0x30(%rbp,%rdx,4),%r13
   272ff:	mov    %r13,%r14
   27302:	neg    %r14d
   27305:	cmp    %ecx,%r14d
   27308:	jl     273c0 <png_do_shift+0x2a0>
   2730e:	mov    %al,(%rsi)
   27310:	add    $0x1,%r10d
   27314:	add    $0x1,%rsi
   27318:	cmp    %edi,%r10d
   2731b:	jb     273e1 <png_do_shift+0x2c1>
   27321:	mov    -0x20(%rbp),%r15
   27325:	mov    -0x18(%rbp),%r14
   27329:	mov    -0x10(%rbp),%r13
   2732d:	leaveq 
   2732e:	retq   
   2732f:	test   %ecx,%ecx
   27331:	jg     27238 <png_do_shift+0x118>
   27337:	mov    %rcx,%r15
   2733a:	mov    %r15,%rcx
   2733d:	neg    %ecx
   2733f:	mov    %r11,%r14
   27342:	shr    %cl,%r14d
   27345:	or     %r14d,%eax
   27348:	mov    %r15,%rcx
   2734b:	jmpq   27241 <png_do_shift+0x121>
   27350:	xor    %edx,%edx
   27352:	mov    %r10,%rax
   27355:	div    %r9d
   27358:	mov    %edx,%edx
   2735a:	movslq -0x40(%rbp,%rdx,4),%rcx
   2735f:	movzbl 0x1(%rsi),%r11d
   27364:	movzbl (%rsi),%eax
   27367:	shl    $0x8,%eax
   2736a:	add    %eax,%r11d
   2736d:	mov    %r8,%rax
   27370:	jmpq   27244 <png_do_shift+0x124>
   27375:	mov    $0x11,%edx
   2737a:	mov    %r14,-0x8(%rbp)
   2737e:	mov    %r15,-0x20(%rbp)
   27382:	mov    %r8,%r9
   27385:	jmpq   272db <png_do_shift+0x1bb>
   2738a:	test   %ecx,%ecx
   2738c:	jg     272b2 <png_do_shift+0x192>
   27392:	mov    %rcx,%r15
   27395:	mov    %r15,%rcx
   27398:	neg    %ecx
   2739a:	mov    %r10,%r14
   2739d:	shr    %cl,%r14d
   273a0:	mov    %rdx,%rcx
   273a3:	and    %r14d,%ecx
   273a6:	or     %ecx,%eax
   273a8:	mov    %r15,%rcx
   273ab:	jmpq   272bb <png_do_shift+0x19b>
   273b0:	movzbl (%rsi),%r10d
   273b4:	movslq -0x40(%rbp),%rcx
   273b8:	mov    %r8,%rax
   273bb:	jmpq   272be <png_do_shift+0x19e>
   273c0:	test   %ecx,%ecx
   273c2:	jg     272ee <png_do_shift+0x1ce>
   273c8:	mov    %rcx,%r15
   273cb:	mov    %r15,%rcx
   273ce:	neg    %ecx
   273d0:	mov    %r11,%r14
   273d3:	shr    %cl,%r14d
   273d6:	or     %r14d,%eax
   273d9:	mov    %r15,%rcx
   273dc:	jmpq   272f7 <png_do_shift+0x1d7>
   273e1:	movzbl (%rsi),%r11d
   273e5:	xor    %edx,%edx
   273e7:	mov    %r10,%rax
   273ea:	div    %r9d
   273ed:	mov    %edx,%edx
   273ef:	movslq -0x40(%rbp,%rdx,4),%rcx
   273f4:	mov    %r8,%rax
   273f7:	jmpq   272fa <png_do_shift+0x1da>
   273fc:	nopl   0x0(%rax)

0000000000027400 <png_do_write_swap_alpha>:
   27400:	push   %rbp
   27401:	mov    %rsp,%rbp
   27404:	xor    %eax,%eax
   27406:	movzbl 0x10(%rdi),%ecx
   2740a:	cmp    $0x6,%cl
   2740d:	je     27416 <png_do_write_swap_alpha+0x16>
   2740f:	cmp    $0x4,%cl
   27412:	je     27424 <png_do_write_swap_alpha+0x24>
   27414:	leaveq 
   27415:	retq   
   27416:	movzbl 0x11(%rdi),%ecx
   2741a:	cmp    $0x8,%cl
   2741d:	je     27431 <png_do_write_swap_alpha+0x31>
   2741f:	mov    (%rdi),%r8d
   27422:	jmp    27476 <png_do_write_swap_alpha+0x76>
   27424:	movzbl 0x11(%rdi),%ecx
   27428:	cmp    $0x8,%cl
   2742b:	je     2747d <png_do_write_swap_alpha+0x7d>
   2742d:	mov    (%rdi),%edx
   2742f:	jmp    274a5 <png_do_write_swap_alpha+0xa5>
   27431:	mov    (%rdi),%edi
   27433:	jmpq   274cc <png_do_write_swap_alpha+0xcc>
   27438:	movzbl 0x2(%rsi),%edi
   2743c:	movzbl 0x3(%rsi),%edx
   27440:	movzbl 0x4(%rsi),%ecx
   27444:	mov    %cl,0x2(%rsi)
   27447:	movzbl 0x5(%rsi),%ecx
   2744b:	mov    %cl,0x3(%rsi)
   2744e:	movzbl 0x6(%rsi),%ecx
   27452:	mov    %cl,0x4(%rsi)
   27455:	movzbl 0x7(%rsi),%ecx
   27459:	mov    %cl,0x5(%rsi)
   2745c:	movzbl (%rsi),%ecx
   2745f:	mov    %dil,(%rsi)
   27462:	mov    %cl,0x6(%rsi)
   27465:	movzbl 0x1(%rsi),%ecx
   27469:	mov    %dl,0x1(%rsi)
   2746c:	mov    %cl,0x7(%rsi)
   2746f:	add    $0x1,%eax
   27472:	add    $0x8,%rsi
   27476:	cmp    %r8d,%eax
   27479:	jb     27438 <png_do_write_swap_alpha+0x38>
   2747b:	leaveq 
   2747c:	retq   
   2747d:	mov    (%rdi),%edi
   2747f:	jmp    274e5 <png_do_write_swap_alpha+0xe5>
   27481:	movzbl 0x2(%rsi),%ecx
   27485:	movzbl 0x3(%rsi),%r8d
   2748a:	movzbl (%rsi),%edi
   2748d:	mov    %cl,(%rsi)
   2748f:	mov    %dil,0x2(%rsi)
   27493:	movzbl 0x1(%rsi),%ecx
   27497:	mov    %r8b,0x1(%rsi)
   2749b:	mov    %cl,0x3(%rsi)
   2749e:	add    $0x1,%eax
   274a1:	add    $0x4,%rsi
   274a5:	cmp    %edx,%eax
   274a7:	jb     27481 <png_do_write_swap_alpha+0x81>
   274a9:	leaveq 
   274aa:	retq   
   274ab:	movzbl 0x1(%rsi),%edx
   274af:	movzbl 0x2(%rsi),%ecx
   274b3:	mov    %cl,0x1(%rsi)
   274b6:	movzbl 0x3(%rsi),%ecx
   274ba:	mov    %cl,0x2(%rsi)
   274bd:	movzbl (%rsi),%ecx
   274c0:	mov    %dl,(%rsi)
   274c2:	mov    %cl,0x3(%rsi)
   274c5:	add    $0x1,%eax
   274c8:	add    $0x4,%rsi
   274cc:	cmp    %edi,%eax
   274ce:	jb     274ab <png_do_write_swap_alpha+0xab>
   274d0:	leaveq 
   274d1:	retq   
   274d2:	movzbl 0x1(%rsi),%edx
   274d6:	movzbl (%rsi),%ecx
   274d9:	mov    %dl,(%rsi)
   274db:	mov    %cl,0x1(%rsi)
   274de:	add    $0x1,%eax
   274e1:	add    $0x2,%rsi
   274e5:	cmp    %edi,%eax
   274e7:	jb     274d2 <png_do_write_swap_alpha+0xd2>
   274e9:	leaveq 
   274ea:	retq   
   274eb:	nopl   0x0(%rax,%rax,1)

00000000000274f0 <png_do_write_invert_alpha>:
   274f0:	push   %rbp
   274f1:	mov    %rsp,%rbp
   274f4:	xor    %eax,%eax
   274f6:	movzbl 0x10(%rdi),%ecx
   274fa:	cmp    $0x6,%cl
   274fd:	je     27506 <png_do_write_invert_alpha+0x16>
   274ff:	cmp    $0x4,%cl
   27502:	je     27513 <png_do_write_invert_alpha+0x23>
   27504:	leaveq 
   27505:	retq   
   27506:	movzbl 0x11(%rdi),%ecx
   2750a:	cmp    $0x8,%cl
   2750d:	je     27520 <png_do_write_invert_alpha+0x30>
   2750f:	mov    (%rdi),%edx
   27511:	jmp    27541 <png_do_write_invert_alpha+0x51>
   27513:	movzbl 0x11(%rdi),%ecx
   27517:	cmp    $0x8,%cl
   2751a:	je     27547 <png_do_write_invert_alpha+0x57>
   2751c:	mov    (%rdi),%edx
   2751e:	jmp    27568 <png_do_write_invert_alpha+0x78>
   27520:	mov    (%rdi),%edi
   27522:	lea    0x3(%rsi),%rcx
   27526:	jmp    2757c <png_do_write_invert_alpha+0x8c>
   27528:	movzbl 0x6(%rsi),%ecx
   2752c:	not    %ecx
   2752e:	mov    %cl,0x6(%rsi)
   27531:	movzbl 0x7(%rsi),%ecx
   27535:	not    %ecx
   27537:	mov    %cl,0x7(%rsi)
   2753a:	add    $0x1,%eax
   2753d:	add    $0x8,%rsi
   27541:	cmp    %edx,%eax
   27543:	jb     27528 <png_do_write_invert_alpha+0x38>
   27545:	leaveq 
   27546:	retq   
   27547:	mov    (%rdi),%edi
   27549:	lea    0x1(%rsi),%rcx
   2754d:	jmp    27590 <png_do_write_invert_alpha+0xa0>
   2754f:	movzbl 0x2(%rsi),%ecx
   27553:	not    %ecx
   27555:	mov    %cl,0x2(%rsi)
   27558:	movzbl 0x3(%rsi),%ecx
   2755c:	not    %ecx
   2755e:	mov    %cl,0x3(%rsi)
   27561:	add    $0x1,%eax
   27564:	add    $0x4,%rsi
   27568:	cmp    %edx,%eax
   2756a:	jb     2754f <png_do_write_invert_alpha+0x5f>
   2756c:	leaveq 
   2756d:	retq   
   2756e:	movzbl (%rcx),%edx
   27571:	not    %edx
   27573:	mov    %dl,(%rcx)
   27575:	add    $0x1,%eax
   27578:	add    $0x4,%rcx
   2757c:	cmp    %edi,%eax
   2757e:	jb     2756e <png_do_write_invert_alpha+0x7e>
   27580:	leaveq 
   27581:	retq   
   27582:	movzbl (%rcx),%edx
   27585:	not    %edx
   27587:	mov    %dl,(%rcx)
   27589:	add    $0x1,%eax
   2758c:	add    $0x2,%rcx
   27590:	cmp    %edi,%eax
   27592:	jb     27582 <png_do_write_invert_alpha+0x92>
   27594:	leaveq 
   27595:	retq   
   27596:	nopw   %cs:0x0(%rax,%rax,1)

00000000000275a0 <png_write_sig>:
   275a0:	push   %rbp
   275a1:	mov    %rsp,%rbp
   275a4:	sub    $0x10,%rsp
   275a8:	mov    %r15,-0x8(%rbp)
   275ac:	movabs $0xa1a0a0d474e5089,%rax
   275b6:	mov    %rax,-0x10(%rbp)
   275ba:	movl   $0x12,0x46c(%rdi)
   275c4:	movzbl 0x26d(%rdi),%ecx
   275cb:	mov    $0x8,%eax
   275d0:	sub    %ecx,%eax
   275d2:	movslq %eax,%rdx
   275d5:	lea    -0x10(%rbp,%rcx,1),%rsi
   275da:	mov    %rdi,%r15
   275dd:	callq  23e40 <png_write_data>
   275e2:	movzbl 0x26d(%r15),%eax
   275ea:	cmp    $0x2,%al
   275ec:	jbe    275f4 <png_write_sig+0x54>
   275ee:	mov    -0x8(%rbp),%r15
   275f2:	leaveq 
   275f3:	retq   
   275f4:	mov    0x12c(%r15),%eax
   275fb:	or     $0x1000,%eax
   27600:	mov    %eax,0x12c(%r15)
   27607:	mov    -0x8(%rbp),%r15
   2760b:	leaveq 
   2760c:	retq   
   2760d:	nopl   (%rax)

0000000000027610 <png_write_chunk>:
   27610:	push   %rbp
   27611:	mov    %rsp,%rbp
   27614:	movzbl (%rsi),%r8d
   27618:	shl    $0x18,%r8d
   2761c:	movzbl 0x1(%rsi),%eax
   27620:	shl    $0x10,%eax
   27623:	add    %eax,%r8d
   27626:	movzbl 0x2(%rsi),%eax
   2762a:	shl    $0x8,%eax
   2762d:	add    %eax,%r8d
   27630:	movzbl 0x3(%rsi),%eax
   27634:	lea    (%r8,%rax,1),%esi
   27638:	callq  29fc0 <png_write_complete_chunk>
   2763d:	leaveq 
   2763e:	retq   
   2763f:	nop

0000000000027640 <png_write_chunk_start>:
   27640:	push   %rbp
   27641:	mov    %rsp,%rbp
   27644:	movzbl (%rsi),%ecx
   27647:	shl    $0x18,%ecx
   2764a:	movzbl 0x1(%rsi),%eax
   2764e:	shl    $0x10,%eax
   27651:	add    %eax,%ecx
   27653:	movzbl 0x2(%rsi),%eax
   27657:	shl    $0x8,%eax
   2765a:	add    %ecx,%eax
   2765c:	movzbl 0x3(%rsi),%ecx
   27660:	lea    (%rax,%rcx,1),%esi
   27663:	callq  29f30 <png_write_chunk_header>
   27668:	leaveq 
   27669:	retq   
   2766a:	nopw   0x0(%rax,%rax,1)

0000000000027670 <png_write_chunk_data>:
   27670:	push   %rbp
   27671:	mov    %rsp,%rbp
   27674:	sub    $0x20,%rsp
   27678:	test   %rdi,%rdi
   2767b:	jne    2767f <png_write_chunk_data+0xf>
   2767d:	leaveq 
   2767e:	retq   
   2767f:	test   %rsi,%rsi
   27682:	jne    27686 <png_write_chunk_data+0x16>
   27684:	leaveq 
   27685:	retq   
   27686:	test   %rdx,%rdx
   27689:	jne    2768d <png_write_chunk_data+0x1d>
   2768b:	leaveq 
   2768c:	retq   
   2768d:	mov    %rdi,%r8
   27690:	mov    %rsi,%rax
   27693:	mov    %rdx,%rcx
   27696:	mov    %r13,-0x8(%rbp)
   2769a:	mov    %r14,-0x10(%rbp)
   2769e:	mov    %r15,-0x18(%rbp)
   276a2:	mov    %rdx,%r13
   276a5:	mov    %rcx,%rdx
   276a8:	mov    %rdi,%r14
   276ab:	mov    %r8,%rdi
   276ae:	mov    %rsi,%r15
   276b1:	mov    %rax,%rsi
   276b4:	callq  23e40 <png_write_data>
   276b9:	mov    %r13,%rdx
   276bc:	mov    %r15,%rsi
   276bf:	mov    %r14,%rdi
   276c2:	callq  6db0 <png_calculate_crc>
   276c7:	mov    -0x18(%rbp),%r15
   276cb:	mov    -0x10(%rbp),%r14
   276cf:	mov    -0x8(%rbp),%r13
   276d3:	leaveq 
   276d4:	retq   
   276d5:	data16 nopw %cs:0x0(%rax,%rax,1)

00000000000276e0 <png_write_chunk_end>:
   276e0:	push   %rbp
   276e1:	mov    %rsp,%rbp
   276e4:	sub    $0x10,%rsp
   276e8:	test   %rdi,%rdi
   276eb:	jne    276ef <png_write_chunk_end+0xf>
   276ed:	leaveq 
   276ee:	retq   
   276ef:	movl   $0x82,0x46c(%rdi)
   276f9:	lea    -0xc(%rbp),%rax
   276fd:	mov    0x24c(%rdi),%esi
   27703:	mov    %r15,-0x8(%rbp)
   27707:	mov    %rdi,%r15
   2770a:	mov    %rax,%rdi
   2770d:	callq  5500 <png_save_uint_32@plt>
   27712:	mov    %r15,%rdi
   27715:	mov    $0x4,%edx
   2771a:	lea    -0xc(%rbp),%rsi
   2771e:	callq  23e40 <png_write_data>
   27723:	mov    -0x8(%rbp),%r15
   27727:	leaveq 
   27728:	retq   
   27729:	nopl   0x0(%rax)

0000000000027730 <png_save_uint_32>:
   27730:	push   %rbp
   27731:	mov    %rsp,%rbp
   27734:	mov    %rsi,%rax
   27737:	shr    $0x18,%eax
   2773a:	mov    %al,(%rdi)
   2773c:	mov    %rsi,%rax
   2773f:	shr    $0x10,%eax
   27742:	mov    %al,0x1(%rdi)
   27745:	mov    %rsi,%rax
   27748:	shr    $0x8,%eax
   2774b:	mov    %al,0x2(%rdi)
   2774e:	mov    %sil,0x3(%rdi)
   27752:	leaveq 
   27753:	retq   
   27754:	data16 nopw %cs:0x0(%rax,%rax,1)
   2775f:	nop

0000000000027760 <png_save_uint_16>:
   27760:	push   %rbp
   27761:	mov    %rsp,%rbp
   27764:	mov    %rsi,%rax
   27767:	shr    $0x8,%eax
   2776a:	mov    %al,(%rdi)
   2776c:	mov    %sil,0x1(%rdi)
   27770:	leaveq 
   27771:	retq   
   27772:	data16 nopw %cs:0x0(%rax,%rax,1)
   2777d:	nopl   (%rax)

0000000000027780 <png_free_buffer_list>:
   27780:	push   %rbp
   27781:	mov    %rsp,%rbp
   27784:	sub    $0x10,%rsp
   27788:	mov    (%rsi),%rax
   2778b:	test   %rax,%rax
   2778e:	jne    27792 <png_free_buffer_list+0x12>
   27790:	leaveq 
   27791:	retq   
   27792:	movq   $0x0,(%rsi)
   27799:	mov    %r14,-0x8(%rbp)
   2779d:	mov    %r15,-0x10(%rbp)
   277a1:	mov    %rax,%rsi
   277a4:	mov    %rdi,%r14
   277a7:	jmp    277ac <png_free_buffer_list+0x2c>
   277a9:	mov    %r15,%rsi
   277ac:	mov    (%rsi),%r15
   277af:	mov    %r14,%rdi
   277b2:	callq  5790 <png_free@plt>
   277b7:	test   %r15,%r15
   277ba:	jne    277a9 <png_free_buffer_list+0x29>
   277bc:	mov    -0x10(%rbp),%r15
   277c0:	mov    -0x8(%rbp),%r14
   277c4:	leaveq 
   277c5:	retq   
   277c6:	nopw   %cs:0x0(%rax,%rax,1)

00000000000277d0 <png_write_IHDR>:
   277d0:	push   %rbp
   277d1:	mov    %rsp,%rbp
   277d4:	sub    $0x60,%rsp
   277d8:	cmp    $0x6,%r8d
   277dc:	ja     27805 <png_write_IHDR+0x35>
   277de:	mov    $0x1,%eax
   277e3:	xor    %r11d,%r11d
   277e6:	lea    0x858f(%rip),%r10        # 2fd7c <fourbppswaptable+0x730>
   277ed:	mov    %r15,-0x40(%rbp)
   277f1:	movslq (%r10,%r8,4),%r15
   277f5:	add    %r15,%r10
   277f8:	jmpq   *%r10
   277fb:	cmp    $0x8,%ecx
   277fe:	jne    27872 <png_write_IHDR+0xa2>
   27800:	mov    %r11,%r10
   27803:	jmp    27875 <png_write_IHDR+0xa5>
   27805:	lea    0x8684(%rip),%rsi        # 2fe90 <fourbppswaptable+0x844>
   2780c:	callq  5470 <png_error@plt>
   27811:	lea    -0x1(%rcx),%r10d
   27815:	cmp    $0xf,%r10d
   27819:	ja     27893 <png_write_IHDR+0xc3>
   2781b:	lea    0x8576(%rip),%r15        # 2fd98 <fourbppswaptable+0x74c>
   27822:	movslq (%r15,%r10,4),%r10
   27826:	add    %r15,%r10
   27829:	jmpq   *%r10
   2782c:	movb   $0x1,0x26b(%rdi)
   27833:	jmp    278b0 <png_write_IHDR+0xe0>
   27835:	cmp    $0x8,%ecx
   27838:	jne    278d5 <png_write_IHDR+0x105>
   2783e:	mov    %r11,%r10
   27841:	jmpq   278d8 <png_write_IHDR+0x108>
   27846:	cmp    $0x3,%ecx
   27849:	jle    2789f <png_write_IHDR+0xcf>
   2784b:	cmp    $0x4,%ecx
   2784e:	je     278a9 <png_write_IHDR+0xd9>
   27850:	cmp    $0x8,%ecx
   27853:	je     278a9 <png_write_IHDR+0xd9>
   27855:	lea    0x85c2(%rip),%rsi        # 2fe1e <fourbppswaptable+0x7d2>
   2785c:	callq  5470 <png_error@plt>
   27861:	cmp    $0x8,%ecx
   27864:	jne    278f6 <png_write_IHDR+0x126>
   2786a:	mov    %r11,%r10
   2786d:	jmpq   278f9 <png_write_IHDR+0x129>
   27872:	mov    %rax,%r10
   27875:	test   %r10d,%r10d
   27878:	jg     27917 <png_write_IHDR+0x147>
   2787e:	mov    %r11,%r10
   27881:	test   %r10d,%r10d
   27884:	jg     27928 <png_write_IHDR+0x158>
   2788a:	movb   $0x4,0x26b(%rdi)
   27891:	jmp    278b0 <png_write_IHDR+0xe0>
   27893:	lea    0x853e(%rip),%rsi        # 2fdd8 <fourbppswaptable+0x78c>
   2789a:	callq  5470 <png_error@plt>
   2789f:	cmp    $0x1,%ecx
   278a2:	je     278a9 <png_write_IHDR+0xd9>
   278a4:	cmp    $0x2,%ecx
   278a7:	jne    27855 <png_write_IHDR+0x85>
   278a9:	movb   $0x1,0x26b(%rdi)
   278b0:	test   %r9d,%r9d
   278b3:	jne    27934 <png_write_IHDR+0x164>
   278b5:	mov    %r12,%r9
   278b8:	mov    %r8,%r12
   278bb:	mov    %r14,%r8
   278be:	mov    %rsi,%r14
   278c1:	mov    %rbx,%r10
   278c4:	mov    %rcx,%rbx
   278c7:	mov    %r11,%r15
   278ca:	mov    %r13,%r11
   278cd:	mov    %rdx,%r13
   278d0:	jmpq   27983 <png_write_IHDR+0x1b3>
   278d5:	mov    %rax,%r10
   278d8:	test   %r10d,%r10d
   278db:	jg     279a0 <png_write_IHDR+0x1d0>
   278e1:	mov    %r11,%r10
   278e4:	test   %r10d,%r10d
   278e7:	jg     279b1 <png_write_IHDR+0x1e1>
   278ed:	movb   $0x3,0x26b(%rdi)
   278f4:	jmp    278b0 <png_write_IHDR+0xe0>
   278f6:	mov    %rax,%r10
   278f9:	test   %r10d,%r10d
   278fc:	jg     279bd <png_write_IHDR+0x1ed>
   27902:	mov    %r11,%r10
   27905:	test   %r10d,%r10d
   27908:	jg     279ce <png_write_IHDR+0x1fe>
   2790e:	movb   $0x2,0x26b(%rdi)
   27915:	jmp    278b0 <png_write_IHDR+0xe0>
   27917:	cmp    $0x10,%ecx
   2791a:	jne    279da <png_write_IHDR+0x20a>
   27920:	mov    %r11,%r10
   27923:	jmpq   27881 <png_write_IHDR+0xb1>
   27928:	lea    0x8540(%rip),%rsi        # 2fe6f <fourbppswaptable+0x823>
   2792f:	callq  5470 <png_error@plt>
   27934:	lea    0x8578(%rip),%r9        # 2feb3 <fourbppswaptable+0x867>
   2793b:	mov    %rdi,%rax
   2793e:	mov    %rbx,-0x10(%rbp)
   27942:	mov    %r12,-0x20(%rbp)
   27946:	mov    %r13,-0x30(%rbp)
   2794a:	mov    %r14,-0x48(%rbp)
   2794e:	mov    %rcx,%rbx
   27951:	mov    %r8,%r12
   27954:	mov    %rdx,%r13
   27957:	mov    %rsi,%r14
   2795a:	mov    %r9,%rsi
   2795d:	mov    %rdi,%r15
   27960:	mov    %rax,%rdi
   27963:	callq  5390 <png_warning@plt>
   27968:	mov    %r15,%rdi
   2796b:	mov    -0x48(%rbp),%r8
   2796f:	mov    -0x30(%rbp),%r11
   27973:	mov    -0x20(%rbp),%r9
   27977:	mov    -0x10(%rbp),%r10
   2797b:	mov    $0x1,%eax
   27980:	xor    %r15d,%r15d
   27983:	movslq 0x10(%rbp),%rdx
   27987:	mov    0x3d8(%rdi),%ecx
   2798d:	and    $0x4,%ecx
   27990:	test   %ecx,%ecx
   27992:	jne    279e2 <png_write_IHDR+0x212>
   27994:	test   %edx,%edx
   27996:	jne    27a08 <png_write_IHDR+0x238>
   27998:	mov    %r15,%rcx
   2799b:	jmpq   27a4a <png_write_IHDR+0x27a>
   279a0:	cmp    $0x10,%ecx
   279a3:	jne    27aac <png_write_IHDR+0x2dc>
   279a9:	mov    %r11,%r10
   279ac:	jmpq   278e4 <png_write_IHDR+0x114>
   279b1:	lea    0x8446(%rip),%rsi        # 2fdfe <fourbppswaptable+0x7b2>
   279b8:	callq  5470 <png_error@plt>
   279bd:	cmp    $0x10,%ecx
   279c0:	jne    27ab4 <png_write_IHDR+0x2e4>
   279c6:	mov    %r11,%r10
   279c9:	jmpq   27905 <png_write_IHDR+0x135>
   279ce:	lea    0x846e(%rip),%rsi        # 2fe43 <fourbppswaptable+0x7f7>
   279d5:	callq  5470 <png_error@plt>
   279da:	mov    %rax,%r10
   279dd:	jmpq   27881 <png_write_IHDR+0xb1>
   279e2:	mov    0x12c(%rdi),%ecx
   279e8:	and    $0x1000,%ecx
   279ee:	test   %ecx,%ecx
   279f0:	jne    27994 <png_write_IHDR+0x1c4>
   279f2:	cmp    $0x2,%r12d
   279f6:	jne    27abc <png_write_IHDR+0x2ec>
   279fc:	cmp    $0x40,%edx
   279ff:	jne    27994 <png_write_IHDR+0x1c4>
   27a01:	mov    $0x40,%ecx
   27a06:	jmp    27a4a <png_write_IHDR+0x27a>
   27a08:	lea    0x84c7(%rip),%rsi        # 2fed6 <fourbppswaptable+0x88a>
   27a0f:	mov    %rdi,%rax
   27a12:	mov    %r10,-0x10(%rbp)
   27a16:	mov    %r9,-0x20(%rbp)
   27a1a:	mov    %r11,-0x30(%rbp)
   27a1e:	mov    %r8,-0x48(%rbp)
   27a22:	mov    %rdi,%r15
   27a25:	mov    %rax,%rdi
   27a28:	callq  5390 <png_warning@plt>
   27a2d:	mov    %r15,%rdi
   27a30:	mov    -0x48(%rbp),%r8
   27a34:	mov    -0x30(%rbp),%r11
   27a38:	mov    -0x20(%rbp),%r9
   27a3c:	mov    -0x10(%rbp),%r10
   27a40:	mov    $0x1,%eax
   27a45:	xor    %ecx,%ecx
   27a47:	mov    %rcx,%r15
   27a4a:	movslq 0x18(%rbp),%rdx
   27a4e:	test   %edx,%edx
   27a50:	jne    27acb <png_write_IHDR+0x2fb>
   27a52:	mov    %bl,0x268(%rdi)
   27a58:	mov    %r12b,0x267(%rdi)
   27a5f:	mov    %r15b,0x264(%rdi)
   27a66:	mov    %cl,0x3dc(%rdi)
   27a6c:	movb   $0x0,0x418(%rdi)
   27a73:	mov    %r14d,0x1f8(%rdi)
   27a7a:	mov    %r13d,0x1fc(%rdi)
   27a81:	movzbl 0x26b(%rdi),%esi
   27a88:	mov    %rbx,%rax
   27a8b:	imul   %sil
   27a8e:	mov    %al,0x26a(%rdi)
   27a94:	cmp    $0x7,%al
   27a96:	ja     27adc <png_write_IHDR+0x30c>
   27a98:	movzbl %al,%eax
   27a9b:	mov    %r14d,%edx
   27a9e:	imul   %rdx,%rax
   27aa2:	add    $0x7,%rax
   27aa6:	shr    $0x3,%rax
   27aaa:	jmp    27aea <png_write_IHDR+0x31a>
   27aac:	mov    %rax,%r10
   27aaf:	jmpq   278e4 <png_write_IHDR+0x114>
   27ab4:	mov    %rax,%r10
   27ab7:	jmpq   27905 <png_write_IHDR+0x135>
   27abc:	cmp    $0x6,%r12d
   27ac0:	je     279fc <png_write_IHDR+0x22c>
   27ac6:	jmpq   27994 <png_write_IHDR+0x1c4>
   27acb:	cmp    $0x1,%edx
   27ace:	jne    27b8f <png_write_IHDR+0x3bf>
   27ad4:	mov    %rax,%r15
   27ad7:	jmpq   27a52 <png_write_IHDR+0x282>
   27adc:	movzbl %al,%eax
   27adf:	shr    $0x3,%rax
   27ae3:	mov    %r14d,%edx
   27ae6:	imul   %rdx,%rax
   27aea:	mov    %rax,0x208(%rdi)
   27af1:	mov    %r14d,0x204(%rdi)
   27af8:	mov    %bl,0x269(%rdi)
   27afe:	mov    %sil,0x26c(%rdi)
   27b05:	lea    -0x55(%rbp),%rax
   27b09:	mov    %r10,-0x8(%rbp)
   27b0d:	mov    %r9,-0x18(%rbp)
   27b11:	mov    %r11,-0x28(%rbp)
   27b15:	mov    %r8,-0x38(%rbp)
   27b19:	mov    %rdi,-0x48(%rbp)
   27b1d:	mov    %r14,%rsi
   27b20:	mov    %rcx,%r14
   27b23:	mov    %rax,%rdi
   27b26:	callq  5500 <png_save_uint_32@plt>
   27b2b:	mov    %r13,%rsi
   27b2e:	lea    -0x51(%rbp),%rdi
   27b32:	callq  5500 <png_save_uint_32@plt>
   27b37:	mov    %bl,-0x4d(%rbp)
   27b3a:	mov    %r12b,-0x4c(%rbp)
   27b3e:	movb   $0x0,-0x4b(%rbp)
   27b42:	mov    %r14b,-0x4a(%rbp)
   27b46:	mov    %r15b,-0x49(%rbp)
   27b4a:	mov    $0x49484452,%esi
   27b4f:	mov    $0xd,%ecx
   27b54:	mov    -0x48(%rbp),%rbx
   27b58:	mov    %rbx,%rdi
   27b5b:	lea    -0x55(%rbp),%rdx
   27b5f:	callq  29fc0 <png_write_complete_chunk>
   27b64:	movzbl 0x266(%rbx),%eax
   27b6b:	test   %al,%al
   27b6d:	je     27be0 <png_write_IHDR+0x410>
   27b6f:	movl   $0x1,0x12c(%rbx)
   27b79:	mov    -0x38(%rbp),%r14
   27b7d:	mov    -0x28(%rbp),%r13
   27b81:	mov    -0x18(%rbp),%r12
   27b85:	mov    -0x8(%rbp),%rbx
   27b89:	mov    -0x40(%rbp),%r15
   27b8d:	leaveq 
   27b8e:	retq   
   27b8f:	lea    0x835e(%rip),%rsi        # 2fef4 <fourbppswaptable+0x8a8>
   27b96:	mov    %rdi,%rax
   27b99:	mov    %r10,-0x8(%rbp)
   27b9d:	mov    %r9,-0x18(%rbp)
   27ba1:	mov    %r11,-0x28(%rbp)
   27ba5:	mov    %r8,-0x38(%rbp)
   27ba9:	mov    %r13,-0x48(%rbp)
   27bad:	mov    %rdi,%r13
   27bb0:	mov    %rax,%rdi
   27bb3:	mov    %rcx,%r15
   27bb6:	callq  5390 <png_warning@plt>
   27bbb:	mov    %r15,%rcx
   27bbe:	mov    %r13,%rdi
   27bc1:	mov    -0x48(%rbp),%r13
   27bc5:	mov    -0x38(%rbp),%r8
   27bc9:	mov    -0x28(%rbp),%r11
   27bcd:	mov    -0x18(%rbp),%r9
   27bd1:	mov    -0x8(%rbp),%r10
   27bd5:	mov    $0x1,%r15d
   27bdb:	jmpq   27a52 <png_write_IHDR+0x282>
   27be0:	movzbl 0x267(%rbx),%eax
   27be7:	cmp    $0x3,%al
   27be9:	jne    27bf7 <png_write_IHDR+0x427>
   27beb:	movb   $0x8,0x266(%rbx)
   27bf2:	jmpq   27b6f <png_write_IHDR+0x39f>
   27bf7:	movzbl 0x268(%rbx),%eax
   27bfe:	cmp    $0x7,%al
   27c00:	jbe    27beb <png_write_IHDR+0x41b>
   27c02:	movb   $0xf8,0x266(%rbx)
   27c09:	jmpq   27b6f <png_write_IHDR+0x39f>
   27c0e:	xchg   %ax,%ax

0000000000027c10 <png_write_PLTE>:
   27c10:	push   %rbp
   27c11:	mov    %rsp,%rbp
   27c14:	sub    $0x30,%rsp
   27c18:	movzbl 0x267(%rdi),%eax
   27c1f:	cmp    $0x3,%al
   27c21:	je     27c43 <png_write_PLTE+0x33>
   27c23:	mov    %r13,%rax
   27c26:	mov    %rsi,%r13
   27c29:	mov    %r14,%r8
   27c2c:	mov    %rbx,%r14
   27c2f:	mov    %rdi,%rbx
   27c32:	mov    %r15,%r9
   27c35:	mov    %r12,%r15
   27c38:	mov    %rdx,%r12
   27c3b:	mov    $0x100,%r10d
   27c41:	jmp    27c6b <png_write_PLTE+0x5b>
   27c43:	mov    %r13,%rax
   27c46:	mov    %rsi,%r13
   27c49:	mov    %r14,%r8
   27c4c:	mov    %rbx,%r14
   27c4f:	mov    %rdi,%rbx
   27c52:	mov    %r15,%r9
   27c55:	mov    %r12,%r15
   27c58:	mov    %rdx,%r12
   27c5b:	mov    $0x1,%r10d
   27c61:	movzbl 0x268(%rbx),%ecx
   27c68:	shl    %cl,%r10d
   27c6b:	mov    0x3d8(%rbx),%ecx
   27c71:	and    $0x1,%ecx
   27c74:	test   %ecx,%ecx
   27c76:	je     27cd2 <png_write_PLTE+0xc2>
   27c78:	cmp    %r10d,%r12d
   27c7b:	ja     27cd7 <png_write_PLTE+0xc7>
   27c7d:	movzbl 0x267(%rbx),%ecx
   27c84:	and    $0x2,%ecx
   27c87:	test   %ecx,%ecx
   27c89:	je     27d13 <png_write_PLTE+0x103>
   27c8f:	mov    %r12w,0x258(%rbx)
   27c97:	mov    $0x504c5445,%esi
   27c9c:	lea    (%r12,%r12,2),%edx
   27ca0:	mov    %rbx,%rdi
   27ca3:	mov    %rax,-0x18(%rbp)
   27ca7:	mov    %r8,-0x20(%rbp)
   27cab:	mov    %r9,-0x28(%rbp)
   27caf:	callq  29f30 <png_write_chunk_header>
   27cb4:	lea    -0x2b(%rbp),%rcx
   27cb8:	mov    $0x3,%edx
   27cbd:	xor    %eax,%eax
   27cbf:	mov    %r14,-0x8(%rbp)
   27cc3:	mov    %r15,-0x10(%rbp)
   27cc7:	mov    %rax,%r14
   27cca:	mov    %rcx,%r15
   27ccd:	jmpq   27d6f <png_write_PLTE+0x15f>
   27cd2:	test   %r12d,%r12d
   27cd5:	jne    27c78 <png_write_PLTE+0x68>
   27cd7:	lea    0x8237(%rip),%rsi        # 2ff15 <fourbppswaptable+0x8c9>
   27cde:	movzbl 0x267(%rbx),%ecx
   27ce5:	cmp    $0x3,%cl
   27ce8:	je     27da1 <png_write_PLTE+0x191>
   27cee:	mov    %rbx,%rdi
   27cf1:	mov    %r8,%rbx
   27cf4:	mov    %r9,%r12
   27cf7:	mov    %rax,%r13
   27cfa:	callq  5390 <png_warning@plt>
   27cff:	mov    %r14,%rax
   27d02:	mov    %rbx,%r14
   27d05:	mov    %rax,%rbx
   27d08:	mov    %r15,%rax
   27d0b:	mov    %r12,%r15
   27d0e:	mov    %rax,%r12
   27d11:	leaveq 
   27d12:	retq   
   27d13:	mov    %rbx,%rdi
   27d16:	mov    %r8,%rbx
   27d19:	mov    %r9,%r12
   27d1c:	mov    %rax,%r13
   27d1f:	lea    0x8213(%rip),%rsi        # 2ff39 <fourbppswaptable+0x8ed>
   27d26:	callq  5390 <png_warning@plt>
   27d2b:	mov    %r14,%rax
   27d2e:	mov    %rbx,%r14
   27d31:	mov    %rax,%rbx
   27d34:	mov    %r15,%rax
   27d37:	mov    %r12,%r15
   27d3a:	mov    %rax,%r12
   27d3d:	leaveq 
   27d3e:	retq   
   27d3f:	movzbl 0x0(%r13),%eax
   27d44:	mov    %al,-0x2b(%rbp)
   27d47:	movzbl 0x1(%r13),%eax
   27d4c:	mov    %al,-0x2a(%rbp)
   27d4f:	movzbl 0x2(%r13),%eax
   27d54:	mov    %al,-0x29(%rbp)
   27d57:	mov    %rbx,%rdi
   27d5a:	mov    %r15,%rsi
   27d5d:	callq  5100 <png_write_chunk_data@plt>
   27d62:	add    $0x1,%r14d
   27d66:	add    $0x3,%r13
   27d6a:	mov    $0x3,%edx
   27d6f:	cmp    %r14d,%r12d
   27d72:	ja     27d3f <png_write_PLTE+0x12f>
   27d74:	mov    %rbx,%rdi
   27d77:	callq  5480 <png_write_chunk_end@plt>
   27d7c:	mov    0x12c(%rbx),%eax
   27d82:	or     $0x2,%eax
   27d85:	mov    %eax,0x12c(%rbx)
   27d8b:	mov    -0x10(%rbp),%r12
   27d8f:	mov    -0x8(%rbp),%rbx
   27d93:	mov    -0x28(%rbp),%r15
   27d97:	mov    -0x20(%rbp),%r14
   27d9b:	mov    -0x18(%rbp),%r13
   27d9f:	leaveq 
   27da0:	retq   
   27da1:	mov    %rbx,%rdi
   27da4:	callq  5470 <png_error@plt>
   27da9:	nopl   0x0(%rax)

0000000000027db0 <png_compress_IDAT>:
   27db0:	push   %rbp
   27db1:	mov    %rsp,%rbp
   27db4:	sub    $0x40,%rsp
   27db8:	mov    %rbx,-0x8(%rbp)
   27dbc:	mov    %r12,-0x10(%rbp)
   27dc0:	mov    %r13,-0x18(%rbp)
   27dc4:	mov    %r14,-0x20(%rbp)
   27dc8:	mov    %r15,-0x28(%rbp)
   27dcc:	mov    $0x49444154,%r14d
   27dd2:	mov    0x138(%rdi),%eax
   27dd8:	cmp    $0x49444154,%eax
   27ddd:	jne    27e14 <png_compress_IDAT+0x64>
   27ddf:	mov    %rdx,%rbx
   27de2:	mov    %rdi,%r12
   27de5:	mov    %rcx,%r13
   27de8:	mov    %rsi,%r15
   27deb:	lea    0x140(%r12),%r14
   27df3:	mov    %r14,-0x30(%rbp)
   27df7:	mov    %r15,(%r14)
   27dfa:	movl   $0x0,0x148(%r12)
   27e06:	mov    $0xffffffff,%eax
   27e0b:	xor    %esi,%esi
   27e0d:	mov    $0xfffffffe,%ecx
   27e12:	jmp    27e52 <png_compress_IDAT+0xa2>
   27e14:	mov    0x1b0(%rdi),%rbx
   27e1b:	test   %rbx,%rbx
   27e1e:	je     27f6f <png_compress_IDAT+0x1bf>
   27e24:	mov    %rcx,%r13
   27e27:	mov    %rsi,%r15
   27e2a:	mov    %rbx,%rsi
   27e2d:	mov    %rdx,%rbx
   27e30:	mov    %rdi,%r12
   27e33:	callq  27780 <png_free_buffer_list>
   27e38:	jmpq   27f9c <png_compress_IDAT+0x1ec>
   27e3d:	test   %rbx,%rbx
   27e40:	je     27fdf <png_compress_IDAT+0x22f>
   27e46:	xor    %esi,%esi
   27e48:	mov    $0xffffffff,%eax
   27e4d:	mov    $0xfffffffe,%ecx
   27e52:	cmp    %rcx,%rbx
   27e55:	ja     27e5a <png_compress_IDAT+0xaa>
   27e57:	mov    %rbx,%rax
   27e5a:	mov    %eax,0x148(%r12)
   27e62:	mov    %eax,%r15d
   27e65:	cmp    %rbx,%r15
   27e68:	jne    27e6d <png_compress_IDAT+0xbd>
   27e6a:	mov    %r13,%rsi
   27e6d:	mov    %r14,%rdi
   27e70:	callq  5330 <deflate@plt>
   27e75:	sub    %r15,%rbx
   27e78:	mov    0x148(%r12),%ecx
   27e80:	movl   $0x0,0x148(%r12)
   27e8c:	add    %rcx,%rbx
   27e8f:	mov    0x160(%r12),%ecx
   27e97:	test   %ecx,%ecx
   27e99:	jne    27ffb <png_compress_IDAT+0x24b>
   27e9f:	mov    0x1b8(%r12),%r8d
   27ea7:	mov    0x1b0(%r12),%r15
   27eaf:	add    $0x8,%r15
   27eb3:	mov    0x12c(%r12),%ecx
   27ebb:	and    $0x4,%ecx
   27ebe:	test   %ecx,%ecx
   27ec0:	jne    27efa <png_compress_IDAT+0x14a>
   27ec2:	movzbl 0x418(%r12),%ecx
   27ecb:	test   %cl,%cl
   27ecd:	jne    27efa <png_compress_IDAT+0x14a>
   27ecf:	mov    %r12,%rdi
   27ed2:	mov    %rbx,-0x38(%rbp)
   27ed6:	mov    %rax,%rbx
   27ed9:	mov    %r8,%r14
   27edc:	callq  2a030 <png_image_size>
   27ee1:	mov    %rax,%rsi
   27ee4:	mov    %r15,%rdi
   27ee7:	callq  2a1f0 <optimize_cmf>
   27eec:	mov    %rbx,%rax
   27eef:	mov    %r14,%r8
   27ef2:	mov    -0x30(%rbp),%r14
   27ef6:	mov    -0x38(%rbp),%rbx
   27efa:	test   %r8d,%r8d
   27efd:	je     27f2a <png_compress_IDAT+0x17a>
   27eff:	mov    %r12,%rdi
   27f02:	mov    $0x49444154,%esi
   27f07:	mov    %r15,%rdx
   27f0a:	mov    %r8,%rcx
   27f0d:	mov    %rbx,-0x38(%rbp)
   27f11:	mov    %r8,%rbx
   27f14:	mov    %rax,%r14
   27f17:	callq  29fc0 <png_write_complete_chunk>
   27f1c:	mov    %r14,%rax
   27f1f:	mov    %rbx,%r8
   27f22:	mov    -0x30(%rbp),%r14
   27f26:	mov    -0x38(%rbp),%rbx
   27f2a:	mov    0x12c(%r12),%ecx
   27f32:	or     $0x4,%ecx
   27f35:	test   %eax,%eax
   27f37:	mov    %ecx,0x12c(%r12)
   27f3f:	mov    %r15,0x158(%r12)
   27f47:	mov    %r8d,0x160(%r12)
   27f4f:	jne    27ffb <png_compress_IDAT+0x24b>
   27f55:	test   %r13d,%r13d
   27f58:	je     27ffb <png_compress_IDAT+0x24b>
   27f5e:	xor    %esi,%esi
   27f60:	mov    $0xffffffff,%eax
   27f65:	mov    $0xfffffffe,%ecx
   27f6a:	jmpq   27e52 <png_compress_IDAT+0xa2>
   27f6f:	mov    0x1b8(%rdi),%eax
   27f75:	add    $0x8,%rax
   27f79:	mov    %rdx,%rbx
   27f7c:	mov    %rcx,%r13
   27f7f:	mov    %rsi,%r15
   27f82:	mov    %rax,%rsi
   27f85:	mov    %rdi,%r12
   27f88:	callq  5800 <png_malloc@plt>
   27f8d:	mov    %rax,0x1b0(%r12)
   27f95:	movq   $0x0,(%rax)
   27f9c:	mov    %r12,%rdi
   27f9f:	callq  2a030 <png_image_size>
   27fa4:	mov    %rax,%rdx
   27fa7:	mov    %r14,%rsi
   27faa:	mov    %r12,%rdi
   27fad:	callq  2a290 <png_deflate_claim>
   27fb2:	test   %eax,%eax
   27fb4:	jne    28022 <png_compress_IDAT+0x272>
   27fb6:	mov    0x1b0(%r12),%rax
   27fbe:	add    $0x8,%rax
   27fc2:	mov    %rax,0x158(%r12)
   27fca:	mov    0x1b8(%r12),%eax
   27fd2:	mov    %eax,0x160(%r12)
   27fda:	jmpq   27deb <png_compress_IDAT+0x3b>
   27fdf:	cmp    $0x4,%r13d
   27fe3:	je     28031 <png_compress_IDAT+0x281>
   27fe5:	mov    -0x28(%rbp),%r15
   27fe9:	mov    -0x20(%rbp),%r14
   27fed:	mov    -0x18(%rbp),%r13
   27ff1:	mov    -0x10(%rbp),%r12
   27ff5:	mov    -0x8(%rbp),%rbx
   27ff9:	leaveq 
   27ffa:	retq   
   27ffb:	test   %eax,%eax
   27ffd:	je     27e3d <png_compress_IDAT+0x8d>
   28003:	cmp    $0x1,%eax
   28006:	je     28040 <png_compress_IDAT+0x290>
   28008:	mov    %rax,%rsi
   2800b:	mov    %r12,%rdi
   2800e:	callq  6910 <png_zstream_error>
   28013:	mov    %r12,%rdi
   28016:	mov    0x170(%rdi),%rsi
   2801d:	callq  5470 <png_error@plt>
   28022:	mov    %r12,%rdi
   28025:	mov    0x170(%rdi),%rsi
   2802c:	callq  5470 <png_error@plt>
   28031:	mov    %r12,%rdi
   28034:	lea    0x7f36(%rip),%rsi        # 2ff71 <fourbppswaptable+0x925>
   2803b:	callq  5470 <png_error@plt>
   28040:	cmp    $0x4,%r13d
   28044:	jne    28008 <png_compress_IDAT+0x258>
   28046:	mov    0x1b8(%r12),%r13d
   2804e:	mov    0x160(%r12),%r14d
   28056:	mov    0x1b0(%r12),%rbx
   2805e:	add    $0x8,%rbx
   28062:	mov    0x12c(%r12),%eax
   2806a:	and    $0x4,%eax
   2806d:	test   %eax,%eax
   2806f:	je     280d9 <png_compress_IDAT+0x329>
   28071:	cmp    %r13d,%r14d
   28074:	je     2808c <png_compress_IDAT+0x2dc>
   28076:	sub    %r14d,%r13d
   28079:	mov    %r13d,%ecx
   2807c:	mov    %rbx,%rdx
   2807f:	mov    %r12,%rdi
   28082:	mov    $0x49444154,%esi
   28087:	callq  29fc0 <png_write_complete_chunk>
   2808c:	movl   $0x0,0x160(%r12)
   28098:	movq   $0x0,0x158(%r12)
   280a4:	mov    0x12c(%r12),%eax
   280ac:	or     $0xc,%eax
   280af:	mov    %eax,0x12c(%r12)
   280b7:	movl   $0x0,0x138(%r12)
   280c3:	mov    -0x28(%rbp),%r15
   280c7:	mov    -0x20(%rbp),%r14
   280cb:	mov    -0x18(%rbp),%r13
   280cf:	mov    -0x10(%rbp),%r12
   280d3:	mov    -0x8(%rbp),%rbx
   280d7:	leaveq 
   280d8:	retq   
   280d9:	movzbl 0x418(%r12),%eax
   280e2:	test   %al,%al
   280e4:	jne    28071 <png_compress_IDAT+0x2c1>
   280e6:	mov    %r12,%rdi
   280e9:	callq  2a030 <png_image_size>
   280ee:	mov    %rax,%rsi
   280f1:	mov    %rbx,%rdi
   280f4:	callq  2a1f0 <optimize_cmf>
   280f9:	jmpq   28071 <png_compress_IDAT+0x2c1>
   280fe:	xchg   %ax,%ax

0000000000028100 <png_write_IEND>:
   28100:	push   %rbp
   28101:	mov    %rsp,%rbp
   28104:	sub    $0x10,%rsp
   28108:	mov    %r15,-0x8(%rbp)
   2810c:	mov    $0x49454e44,%esi
   28111:	xor    %edx,%edx
   28113:	mov    %rdx,%rcx
   28116:	mov    %rdi,%r15
   28119:	callq  29fc0 <png_write_complete_chunk>
   2811e:	mov    0x12c(%r15),%eax
   28125:	or     $0x10,%eax
   28128:	mov    %eax,0x12c(%r15)
   2812f:	mov    -0x8(%rbp),%r15
   28133:	leaveq 
   28134:	retq   
   28135:	data16 nopw %cs:0x0(%rax,%rax,1)

0000000000028140 <png_write_gAMA_fixed>:
   28140:	push   %rbp
   28141:	mov    %rsp,%rbp
   28144:	sub    $0x10,%rsp
   28148:	mov    %r15,-0x8(%rbp)
   2814c:	mov    %rdi,%r15
   2814f:	lea    -0xc(%rbp),%rdi
   28153:	callq  5500 <png_save_uint_32@plt>
   28158:	mov    %r15,%rdi
   2815b:	mov    $0x67414d41,%esi
   28160:	mov    $0x4,%ecx
   28165:	lea    -0xc(%rbp),%rdx
   28169:	callq  29fc0 <png_write_complete_chunk>
   2816e:	mov    -0x8(%rbp),%r15
   28172:	leaveq 
   28173:	retq   
   28174:	data16 nopw %cs:0x0(%rax,%rax,1)
   2817f:	nop

0000000000028180 <png_write_sBIT>:
   28180:	push   %rbp
   28181:	mov    %rsp,%rbp
   28184:	sub    $0x10,%rsp
   28188:	lea    0x7e05(%rip),%r10        # 2ff94 <fourbppswaptable+0x948>
   2818f:	mov    %rdx,%rax
   28192:	and    $0x2,%eax
   28195:	test   %eax,%eax
   28197:	jg     281d0 <png_write_sBIT+0x50>
   28199:	movzbl 0x3(%rsi),%ecx
   2819d:	test   %cl,%cl
   2819f:	je     2821a <png_write_sBIT+0x9a>
   281a1:	movzbl 0x269(%rdi),%eax
   281a8:	cmp    %al,%cl
   281aa:	ja     2821a <png_write_sBIT+0x9a>
   281ac:	mov    %cl,-0x4(%rbp)
   281af:	mov    $0x1,%ecx
   281b4:	mov    $0x2,%eax
   281b9:	and    $0x4,%edx
   281bc:	test   %edx,%edx
   281be:	jg     28224 <png_write_sBIT+0xa4>
   281c0:	mov    $0x73424954,%esi
   281c5:	lea    -0x4(%rbp),%rdx
   281c9:	callq  29fc0 <png_write_complete_chunk>
   281ce:	leaveq 
   281cf:	retq   
   281d0:	cmp    $0x3,%edx
   281d3:	jne    28246 <png_write_sBIT+0xc6>
   281d5:	mov    $0x8,%eax
   281da:	movzbl (%rsi),%r9d
   281de:	test   %r9b,%r9b
   281e1:	je     2824f <png_write_sBIT+0xcf>
   281e3:	cmp    %al,%r9b
   281e6:	ja     2824f <png_write_sBIT+0xcf>
   281e8:	movzbl 0x1(%rsi),%r8d
   281ed:	test   %r8b,%r8b
   281f0:	je     2824f <png_write_sBIT+0xcf>
   281f2:	cmp    %r8b,%al
   281f5:	jb     2824f <png_write_sBIT+0xcf>
   281f7:	movzbl 0x2(%rsi),%ecx
   281fb:	test   %cl,%cl
   281fd:	je     2824f <png_write_sBIT+0xcf>
   281ff:	cmp    %cl,%al
   28201:	jb     2824f <png_write_sBIT+0xcf>
   28203:	mov    %r9b,-0x4(%rbp)
   28207:	mov    %r8b,-0x3(%rbp)
   2820b:	mov    %cl,-0x2(%rbp)
   2820e:	mov    $0x3,%ecx
   28213:	mov    $0x4,%eax
   28218:	jmp    281b9 <png_write_sBIT+0x39>
   2821a:	mov    %r10,%rsi
   2821d:	callq  5390 <png_warning@plt>
   28222:	leaveq 
   28223:	retq   
   28224:	movzbl 0x4(%rsi),%esi
   28228:	test   %sil,%sil
   2822b:	je     28259 <png_write_sBIT+0xd9>
   2822d:	movzbl 0x269(%rdi),%edx
   28234:	cmp    %dl,%sil
   28237:	ja     28259 <png_write_sBIT+0xd9>
   28239:	mov    %sil,-0x4(%rbp,%rcx,1)
   2823e:	mov    %rax,%rcx
   28241:	jmpq   281c0 <png_write_sBIT+0x40>
   28246:	movzbl 0x269(%rdi),%eax
   2824d:	jmp    281da <png_write_sBIT+0x5a>
   2824f:	mov    %r10,%rsi
   28252:	callq  5390 <png_warning@plt>
   28257:	leaveq 
   28258:	retq   
   28259:	mov    %r10,%rsi
   2825c:	callq  5390 <png_warning@plt>
   28261:	leaveq 
   28262:	retq   
   28263:	data16 nopw %cs:0x0(%rax,%rax,1)
   2826e:	xchg   %ax,%ax

0000000000028270 <png_write_cHRM_fixed>:
   28270:	push   %rbp
   28271:	mov    %rsp,%rbp
   28274:	sub    $0x30,%rsp
   28278:	mov    %r14,-0x8(%rbp)
   2827c:	mov    %r15,-0x10(%rbp)
   28280:	mov    %rdi,%r14
   28283:	mov    %rsi,%r15
   28286:	lea    -0x30(%rbp),%rdi
   2828a:	movslq 0x18(%r15),%rsi
   2828e:	callq  5520 <png_save_int_32@plt>
   28293:	lea    -0x2c(%rbp),%rdi
   28297:	movslq 0x1c(%r15),%rsi
   2829b:	callq  5520 <png_save_int_32@plt>
   282a0:	lea    -0x28(%rbp),%rdi
   282a4:	movslq (%r15),%rsi
   282a7:	callq  5520 <png_save_int_32@plt>
   282ac:	lea    -0x24(%rbp),%rdi
   282b0:	movslq 0x4(%r15),%rsi
   282b4:	callq  5520 <png_save_int_32@plt>
   282b9:	lea    -0x20(%rbp),%rdi
   282bd:	movslq 0x8(%r15),%rsi
   282c1:	callq  5520 <png_save_int_32@plt>
   282c6:	lea    -0x1c(%rbp),%rdi
   282ca:	movslq 0xc(%r15),%rsi
   282ce:	callq  5520 <png_save_int_32@plt>
   282d3:	lea    -0x18(%rbp),%rdi
   282d7:	movslq 0x10(%r15),%rsi
   282db:	callq  5520 <png_save_int_32@plt>
   282e0:	lea    -0x14(%rbp),%rdi
   282e4:	movslq 0x14(%r15),%rsi
   282e8:	callq  5520 <png_save_int_32@plt>
   282ed:	mov    %r14,%rdi
   282f0:	mov    $0x6348524d,%esi
   282f5:	mov    $0x20,%ecx
   282fa:	lea    -0x30(%rbp),%rdx
   282fe:	callq  29fc0 <png_write_complete_chunk>
   28303:	mov    -0x10(%rbp),%r15
   28307:	mov    -0x8(%rbp),%r14
   2830b:	leaveq 
   2830c:	retq   
   2830d:	nopl   (%rax)

0000000000028310 <png_write_sRGB>:
   28310:	push   %rbp
   28311:	mov    %rsp,%rbp
   28314:	sub    $0x20,%rsp
   28318:	cmp    $0x3,%esi
   2831b:	jle    2834e <png_write_sRGB+0x3e>
   2831d:	lea    0x7c8d(%rip),%rcx        # 2ffb1 <fourbppswaptable+0x965>
   28324:	mov    %rdi,%rax
   28327:	mov    %r14,-0x8(%rbp)
   2832b:	mov    %r15,-0x10(%rbp)
   2832f:	mov    %rsi,%r14
   28332:	mov    %rcx,%rsi
   28335:	mov    %rdi,%r15
   28338:	mov    %rax,%rdi
   2833b:	callq  5390 <png_warning@plt>
   28340:	mov    %r14,%rsi
   28343:	mov    %r15,%rdi
   28346:	mov    -0x10(%rbp),%r15
   2834a:	mov    -0x8(%rbp),%r14
   2834e:	mov    %sil,-0x11(%rbp)
   28352:	mov    $0x73524742,%esi
   28357:	lea    -0x11(%rbp),%rdx
   2835b:	mov    $0x1,%ecx
   28360:	callq  29fc0 <png_write_complete_chunk>
   28365:	leaveq 
   28366:	retq   
   28367:	nopw   0x0(%rax,%rax,1)

0000000000028370 <png_write_eXIf>:
   28370:	push   %rbp
   28371:	mov    %rsp,%rbp
   28374:	sub    $0x30,%rsp
   28378:	mov    %r13,-0x18(%rbp)
   2837c:	mov    %r14,-0x20(%rbp)
   28380:	mov    %r15,-0x28(%rbp)
   28384:	mov    %rbx,-0x8(%rbp)
   28388:	mov    %r12,-0x10(%rbp)
   2838c:	mov    %rsi,%r13
   2838f:	mov    $0x65584966,%esi
   28394:	mov    %rdi,%rbx
   28397:	mov    %rdx,%r12
   2839a:	callq  29f30 <png_write_chunk_header>
   2839f:	lea    -0x29(%rbp),%r14
   283a3:	mov    $0x1,%edx
   283a8:	xor    %r15d,%r15d
   283ab:	jmp    283cd <png_write_eXIf+0x5d>
   283ad:	movslq %r15d,%rax
   283b0:	movzbl 0x0(%r13,%rax,1),%eax
   283b6:	mov    %al,-0x29(%rbp)
   283b9:	mov    %rbx,%rdi
   283bc:	mov    %r14,%rsi
   283bf:	callq  5100 <png_write_chunk_data@plt>
   283c4:	add    $0x1,%r15d
   283c8:	mov    $0x1,%edx
   283cd:	cmp    %r12d,%r15d
   283d0:	jl     283ad <png_write_eXIf+0x3d>
   283d2:	mov    %rbx,%rdi
   283d5:	callq  5480 <png_write_chunk_end@plt>
   283da:	mov    -0x10(%rbp),%r12
   283de:	mov    -0x8(%rbp),%rbx
   283e2:	mov    -0x28(%rbp),%r15
   283e6:	mov    -0x20(%rbp),%r14
   283ea:	mov    -0x18(%rbp),%r13
   283ee:	leaveq 
   283ef:	retq   

00000000000283f0 <png_write_iCCP>:
   283f0:	push   %rbp
   283f1:	mov    %rsp,%rbp
   283f4:	sub    $0x490,%rsp
   283fb:	test   %rdx,%rdx
   283fe:	je     28507 <png_write_iCCP+0x117>
   28404:	movzbl (%rdx),%eax
   28407:	shl    $0x18,%eax
   2840a:	movzbl 0x1(%rdx),%ecx
   2840e:	shl    $0x10,%ecx
   28411:	add    %eax,%ecx
   28413:	movzbl 0x2(%rdx),%eax
   28417:	shl    $0x8,%eax
   2841a:	add    %eax,%ecx
   2841c:	movzbl 0x3(%rdx),%eax
   28420:	add    %eax,%ecx
   28422:	cmp    $0x83,%ecx
   28428:	jbe    28513 <png_write_iCCP+0x123>
   2842e:	movzbl 0x8(%rdx),%eax
   28432:	cmp    $0x3,%al
   28434:	ja     2851f <png_write_iCCP+0x12f>
   2843a:	lea    -0x481(%rbp),%rax
   28441:	mov    %rdi,%r8
   28444:	mov    %r13,-0x8(%rbp)
   28448:	mov    %r14,-0x10(%rbp)
   2844c:	mov    %r15,-0x18(%rbp)
   28450:	mov    %rdi,%r13
   28453:	mov    %r8,%rdi
   28456:	mov    %rcx,%r14
   28459:	mov    %rdx,%r15
   2845c:	mov    %rax,%rdx
   2845f:	callq  23270 <png_check_keyword>
   28464:	test   %eax,%eax
   28466:	je     28539 <png_write_iCCP+0x149>
   2846c:	lea    0x1(%rax),%ecx
   2846f:	mov    %ecx,%ecx
   28471:	movb   $0x0,-0x481(%rbp,%rcx,1)
   28479:	lea    -0x430(%rbp),%rcx
   28480:	mov    %r14d,%edx
   28483:	mov    %r15,%rsi
   28486:	mov    %rcx,%r15
   28489:	mov    %rax,%r14
   2848c:	mov    %r15,%rdi
   2848f:	callq  2a5e0 <png_text_compress_init>
   28494:	mov    $0x69434350,%esi
   28499:	add    $0x2,%r14d
   2849d:	mov    %r13,%rdi
   284a0:	mov    %rsi,%rax
   284a3:	mov    %r15,%rdx
   284a6:	mov    %rsi,%r15
   284a9:	mov    %rax,%rsi
   284ac:	mov    %r14,%rcx
   284af:	callq  2a600 <png_text_compress>
   284b4:	test   %eax,%eax
   284b6:	jne    28548 <png_write_iCCP+0x158>
   284bc:	mov    %r15,%rsi
   284bf:	mov    %r14,%rdx
   284c2:	add    -0x420(%rbp),%edx
   284c8:	mov    %r13,%rdi
   284cb:	callq  29f30 <png_write_chunk_header>
   284d0:	mov    %r14d,%edx
   284d3:	mov    %r13,%rdi
   284d6:	lea    -0x481(%rbp),%rsi
   284dd:	callq  5100 <png_write_chunk_data@plt>
   284e2:	mov    %r13,%rdi
   284e5:	lea    -0x430(%rbp),%rsi
   284ec:	callq  2a890 <png_write_compressed_data_out>
   284f1:	mov    %r13,%rdi
   284f4:	callq  5480 <png_write_chunk_end@plt>
   284f9:	mov    -0x18(%rbp),%r15
   284fd:	mov    -0x10(%rbp),%r14
   28501:	mov    -0x8(%rbp),%r13
   28505:	leaveq 
   28506:	retq   
   28507:	lea    0x7acb(%rip),%rsi        # 2ffd9 <fourbppswaptable+0x98d>
   2850e:	callq  5470 <png_error@plt>
   28513:	lea    0x7ad9(%rip),%rsi        # 2fff3 <fourbppswaptable+0x9a7>
   2851a:	callq  5470 <png_error@plt>
   2851f:	mov    %rcx,%rax
   28522:	and    $0x3,%eax
   28525:	test   %eax,%eax
   28527:	je     2843a <png_write_iCCP+0x4a>
   2852d:	lea    0x7ad5(%rip),%rsi        # 30009 <fourbppswaptable+0x9bd>
   28534:	callq  5470 <png_error@plt>
   28539:	mov    %r13,%rdi
   2853c:	lea    0x7af7(%rip),%rsi        # 3003a <fourbppswaptable+0x9ee>
   28543:	callq  5470 <png_error@plt>
   28548:	mov    %r13,%rdi
   2854b:	mov    0x170(%rdi),%rsi
   28552:	callq  5470 <png_error@plt>
   28557:	nopw   0x0(%rax,%rax,1)

0000000000028560 <png_write_sPLT>:
   28560:	push   %rbp
   28561:	mov    %rsp,%rbp
   28564:	sub    $0x90,%rsp
   2856b:	mov    %rbx,-0x8(%rbp)
   2856f:	mov    %r12,-0x10(%rbp)
   28573:	mov    %r13,-0x18(%rbp)
   28577:	mov    %r14,-0x20(%rbp)
   2857b:	mov    %r15,-0x28(%rbp)
   2857f:	movzbl 0x8(%rsi),%eax
   28583:	cmp    $0x8,%al
   28585:	je     2858f <png_write_sPLT+0x2f>
   28587:	mov    $0xa,%r12d
   2858d:	jmp    28595 <png_write_sPLT+0x35>
   2858f:	mov    $0x6,%r12d
   28595:	mov    %rsi,%r13
   28598:	mov    0x18(%r13),%r15d
   2859c:	mov    0x0(%r13),%rsi
   285a0:	lea    -0x82(%rbp),%r14
   285a7:	mov    %rdi,%rbx
   285aa:	mov    %r14,%rdx
   285ad:	callq  23270 <png_check_keyword>
   285b2:	test   %eax,%eax
   285b4:	je     28602 <png_write_sPLT+0xa2>
   285b6:	imul   %r12d,%r15d
   285ba:	lea    0x2(%rax,%r15,1),%edx
   285bf:	mov    %rax,%r15
   285c2:	mov    $0x73504c54,%esi
   285c7:	mov    %rbx,%rdi
   285ca:	callq  29f30 <png_write_chunk_header>
   285cf:	lea    0x1(%r15),%eax
   285d3:	mov    %eax,%edx
   285d5:	mov    %r14,%rsi
   285d8:	mov    %rbx,%rdi
   285db:	callq  5100 <png_write_chunk_data@plt>
   285e0:	lea    0x8(%r13),%r14
   285e4:	mov    $0x1,%edx
   285e9:	mov    %rbx,%rdi
   285ec:	mov    %r14,%rsi
   285ef:	callq  5100 <png_write_chunk_data@plt>
   285f4:	mov    0x10(%r13),%r15
   285f8:	lea    -0x32(%rbp),%rax
   285fc:	lea    -0x2e(%rbp),%rdi
   28600:	jmp    28655 <png_write_sPLT+0xf5>
   28602:	mov    %rbx,%rdi
   28605:	lea    0x7a44(%rip),%rsi        # 30050 <fourbppswaptable+0xa04>
   2860c:	callq  5470 <png_error@plt>
   28611:	movzbl (%r15),%eax
   28615:	mov    %al,-0x32(%rbp)
   28618:	movzbl 0x2(%r15),%eax
   2861d:	mov    %al,-0x31(%rbp)
   28620:	movzbl 0x4(%r15),%eax
   28625:	mov    %al,-0x30(%rbp)
   28628:	movzbl 0x6(%r15),%eax
   2862d:	mov    %al,-0x2f(%rbp)
   28630:	movzwl 0x8(%r15),%esi
   28635:	callq  57a0 <png_save_uint_16@plt>
   2863a:	mov    %rbx,%rdi
   2863d:	lea    -0x32(%rbp),%rsi
   28641:	mov    %r12,%rdx
   28644:	callq  5100 <png_write_chunk_data@plt>
   28649:	add    $0xa,%r15
   2864d:	lea    -0x32(%rbp),%rax
   28651:	lea    -0x2e(%rbp),%rdi
   28655:	movslq 0x18(%r13),%rcx
   28659:	lea    (%rcx,%rcx,4),%rcx
   2865d:	add    %rcx,%rcx
   28660:	add    0x10(%r13),%rcx
   28664:	cmp    %r15,%rcx
   28667:	ja     28687 <png_write_sPLT+0x127>
   28669:	mov    %rbx,%rdi
   2866c:	callq  5480 <png_write_chunk_end@plt>
   28671:	mov    -0x28(%rbp),%r15
   28675:	mov    -0x20(%rbp),%r14
   28679:	mov    -0x18(%rbp),%r13
   2867d:	mov    -0x10(%rbp),%r12
   28681:	mov    -0x8(%rbp),%rbx
   28685:	leaveq 
   28686:	retq   
   28687:	movzbl (%r14),%ecx
   2868b:	cmp    $0x8,%cl
   2868e:	je     28611 <png_write_sPLT+0xb1>
   28690:	mov    %rax,%rdi
   28693:	movzwl (%r15),%esi
   28697:	callq  57a0 <png_save_uint_16@plt>
   2869c:	movzwl 0x2(%r15),%esi
   286a1:	lea    -0x30(%rbp),%rdi
   286a5:	callq  57a0 <png_save_uint_16@plt>
   286aa:	movzwl 0x4(%r15),%esi
   286af:	lea    -0x2e(%rbp),%rdi
   286b3:	callq  57a0 <png_save_uint_16@plt>
   286b8:	movzwl 0x6(%r15),%esi
   286bd:	lea    -0x2c(%rbp),%rdi
   286c1:	callq  57a0 <png_save_uint_16@plt>
   286c6:	movzwl 0x8(%r15),%esi
   286cb:	lea    -0x2a(%rbp),%rdi
   286cf:	callq  57a0 <png_save_uint_16@plt>
   286d4:	jmpq   2863a <png_write_sPLT+0xda>
   286d9:	nopl   0x0(%rax)

00000000000286e0 <png_write_tRNS>:
   286e0:	push   %rbp
   286e1:	mov    %rsp,%rbp
   286e4:	sub    $0x20,%rsp
   286e8:	mov    $0x74524e53,%r9d
   286ee:	cmp    $0x3,%r8d
   286f2:	je     2870d <png_write_tRNS+0x2d>
   286f4:	test   %r8d,%r8d
   286f7:	je     28734 <png_write_tRNS+0x54>
   286f9:	cmp    $0x2,%r8d
   286fd:	je     2877d <png_write_tRNS+0x9d>
   286ff:	lea    0x7a0f(%rip),%rsi        # 30115 <fourbppswaptable+0xac9>
   28706:	callq  b0f0 <png_app_warning>
   2870b:	leaveq 
   2870c:	retq   
   2870d:	test   %ecx,%ecx
   2870f:	jle    287e9 <png_write_tRNS+0x109>
   28715:	movzwl 0x258(%rdi),%eax
   2871c:	cmp    %eax,%ecx
   2871e:	jg     287e9 <png_write_tRNS+0x109>
   28724:	movslq %ecx,%rcx
   28727:	mov    %rsi,%rdx
   2872a:	mov    %r9,%rsi
   2872d:	callq  29fc0 <png_write_complete_chunk>
   28732:	leaveq 
   28733:	retq   
   28734:	mov    $0x1,%eax
   28739:	movzbl 0x268(%rdi),%ecx
   28740:	shl    %cl,%eax
   28742:	movzwl 0x8(%rdx),%esi
   28746:	cmp    %esi,%eax
   28748:	jle    287f7 <png_write_tRNS+0x117>
   2874e:	lea    -0x16(%rbp),%rax
   28752:	mov    %r15,-0x10(%rbp)
   28756:	mov    %rdi,%r15
   28759:	mov    %rax,%rdi
   2875c:	callq  57a0 <png_save_uint_16@plt>
   28761:	mov    %r15,%rdi
   28764:	mov    $0x2,%ecx
   28769:	lea    -0x16(%rbp),%rdx
   2876d:	mov    $0x74524e53,%esi
   28772:	callq  29fc0 <png_write_complete_chunk>
   28777:	mov    -0x10(%rbp),%r15
   2877b:	leaveq 
   2877c:	retq   
   2877d:	lea    -0x16(%rbp),%rax
   28781:	movzwl 0x2(%rdx),%esi
   28785:	mov    %r14,-0x8(%rbp)
   28789:	mov    %r15,-0x10(%rbp)
   2878d:	mov    %rdi,%r14
   28790:	mov    %rax,%rdi
   28793:	mov    %rdx,%r15
   28796:	callq  57a0 <png_save_uint_16@plt>
   2879b:	lea    -0x14(%rbp),%rdi
   2879f:	movzwl 0x4(%r15),%esi
   287a4:	callq  57a0 <png_save_uint_16@plt>
   287a9:	lea    -0x12(%rbp),%rax
   287ad:	movzwl 0x6(%r15),%esi
   287b2:	mov    %rax,%r15
   287b5:	mov    %r15,%rdi
   287b8:	callq  57a0 <png_save_uint_16@plt>
   287bd:	movzbl 0x268(%r14),%eax
   287c5:	cmp    $0x8,%al
   287c7:	je     28805 <png_write_tRNS+0x125>
   287c9:	mov    %r14,%rdi
   287cc:	mov    $0x6,%ecx
   287d1:	mov    $0x74524e53,%esi
   287d6:	lea    -0x16(%rbp),%rdx
   287da:	callq  29fc0 <png_write_complete_chunk>
   287df:	mov    -0x10(%rbp),%r15
   287e3:	mov    -0x8(%rbp),%r14
   287e7:	leaveq 
   287e8:	retq   
   287e9:	lea    0x7876(%rip),%rsi        # 30066 <fourbppswaptable+0xa1a>
   287f0:	callq  b0f0 <png_app_warning>
   287f5:	leaveq 
   287f6:	retq   
   287f7:	lea    0x7897(%rip),%rsi        # 30095 <fourbppswaptable+0xa49>
   287fe:	callq  b0f0 <png_app_warning>
   28803:	leaveq 
   28804:	retq   
   28805:	lea    -0x14(%rbp),%rax
   28809:	movzbl (%rax),%eax
   2880c:	movzbl -0x16(%rbp),%ecx
   28810:	or     %cl,%al
   28812:	movzbl (%r15),%ecx
   28816:	or     %cl,%al
   28818:	test   %al,%al
   2881a:	je     287c9 <png_write_tRNS+0xe9>
   2881c:	mov    %r14,%rdi
   2881f:	lea    0x78af(%rip),%rsi        # 300d5 <fourbppswaptable+0xa89>
   28826:	callq  b0f0 <png_app_warning>
   2882b:	mov    -0x10(%rbp),%r15
   2882f:	mov    -0x8(%rbp),%r14
   28833:	leaveq 
   28834:	retq   
   28835:	data16 nopw %cs:0x0(%rax,%rax,1)

0000000000028840 <png_write_bKGD>:
   28840:	push   %rbp
   28841:	mov    %rsp,%rbp
   28844:	sub    $0x20,%rsp
   28848:	mov    $0x624b4744,%r8d
   2884e:	mov    $0x1,%eax
   28853:	cmp    $0x3,%edx
   28856:	je     288a3 <png_write_bKGD+0x63>
   28858:	and    $0x2,%edx
   2885b:	test   %edx,%edx
   2885d:	jg     288db <png_write_bKGD+0x9b>
   2885f:	movzbl 0x268(%rdi),%ecx
   28866:	shl    %cl,%eax
   28868:	movzwl 0x8(%rsi),%esi
   2886c:	cmp    %esi,%eax
   2886e:	jle    2894a <png_write_bKGD+0x10a>
   28874:	lea    -0x16(%rbp),%rax
   28878:	mov    %r15,-0x10(%rbp)
   2887c:	mov    %rdi,%r15
   2887f:	mov    %rax,%rdi
   28882:	callq  57a0 <png_save_uint_16@plt>
   28887:	mov    %r15,%rdi
   2888a:	mov    $0x2,%ecx
   2888f:	lea    -0x16(%rbp),%rdx
   28893:	mov    $0x624b4744,%esi
   28898:	callq  29fc0 <png_write_complete_chunk>
   2889d:	mov    -0x10(%rbp),%r15
   288a1:	leaveq 
   288a2:	retq   
   288a3:	movzwl 0x258(%rdi),%ecx
   288aa:	test   %cx,%cx
   288ad:	jne    28958 <png_write_bKGD+0x118>
   288b3:	mov    0x3d8(%rdi),%ecx
   288b9:	and    $0x1,%ecx
   288bc:	test   %ecx,%ecx
   288be:	je     28958 <png_write_bKGD+0x118>
   288c4:	movzbl (%rsi),%ecx
   288c7:	mov    %cl,-0x16(%rbp)
   288ca:	mov    %rax,%rcx
   288cd:	mov    %r8,%rsi
   288d0:	lea    -0x16(%rbp),%rdx
   288d4:	callq  29fc0 <png_write_complete_chunk>
   288d9:	leaveq 
   288da:	retq   
   288db:	lea    -0x16(%rbp),%rax
   288df:	movzwl 0x2(%rsi),%ecx
   288e3:	mov    %r15,-0x10(%rbp)
   288e7:	mov    %r14,-0x8(%rbp)
   288eb:	mov    %rdi,%r14
   288ee:	mov    %rax,%rdi
   288f1:	mov    %rsi,%r15
   288f4:	mov    %rcx,%rsi
   288f7:	callq  57a0 <png_save_uint_16@plt>
   288fc:	lea    -0x14(%rbp),%rdi
   28900:	movzwl 0x4(%r15),%esi
   28905:	callq  57a0 <png_save_uint_16@plt>
   2890a:	lea    -0x12(%rbp),%rax
   2890e:	movzwl 0x6(%r15),%esi
   28913:	mov    %rax,%r15
   28916:	mov    %r15,%rdi
   28919:	callq  57a0 <png_save_uint_16@plt>
   2891e:	movzbl 0x268(%r14),%eax
   28926:	cmp    $0x8,%al
   28928:	je     28979 <png_write_bKGD+0x139>
   2892a:	mov    %r14,%rdi
   2892d:	mov    $0x6,%ecx
   28932:	lea    -0x16(%rbp),%rdx
   28936:	mov    $0x624b4744,%esi
   2893b:	callq  29fc0 <png_write_complete_chunk>
   28940:	mov    -0x8(%rbp),%r14
   28944:	mov    -0x10(%rbp),%r15
   28948:	leaveq 
   28949:	retq   
   2894a:	lea    0x784c(%rip),%rsi        # 3019d <fourbppswaptable+0xb51>
   28951:	callq  5390 <png_warning@plt>
   28956:	leaveq 
   28957:	retq   
   28958:	movzbl (%rsi),%edx
   2895b:	movzwl 0x258(%rdi),%ecx
   28962:	cmp    %cx,%dx
   28965:	jb     288c4 <png_write_bKGD+0x84>
   2896b:	lea    0x77ca(%rip),%rsi        # 3013c <fourbppswaptable+0xaf0>
   28972:	callq  5390 <png_warning@plt>
   28977:	leaveq 
   28978:	retq   
   28979:	lea    -0x14(%rbp),%rax
   2897d:	movzbl (%rax),%eax
   28980:	movzbl -0x16(%rbp),%ecx
   28984:	or     %cl,%al
   28986:	movzbl (%r15),%ecx
   2898a:	or     %cl,%al
   2898c:	test   %al,%al
   2898e:	je     2892a <png_write_bKGD+0xea>
   28990:	mov    %r14,%rdi
   28993:	lea    0x77c3(%rip),%rsi        # 3015d <fourbppswaptable+0xb11>
   2899a:	callq  5390 <png_warning@plt>
   2899f:	mov    -0x8(%rbp),%r14
   289a3:	mov    -0x10(%rbp),%r15
   289a7:	leaveq 
   289a8:	retq   
   289a9:	nopl   0x0(%rax)

00000000000289b0 <png_write_hIST>:
   289b0:	push   %rbp
   289b1:	mov    %rsp,%rbp
   289b4:	sub    $0x30,%rsp
   289b8:	movzwl 0x258(%rdi),%eax
   289bf:	cmp    %edx,%eax
   289c1:	jl     28a0d <png_write_hIST+0x5d>
   289c3:	mov    $0x68495354,%eax
   289c8:	lea    (%rdx,%rdx,1),%ecx
   289cb:	mov    %rdi,%r8
   289ce:	mov    %r13,-0x18(%rbp)
   289d2:	mov    %r14,-0x20(%rbp)
   289d6:	mov    %r15,-0x28(%rbp)
   289da:	mov    %rsi,%r13
   289dd:	mov    %rax,%rsi
   289e0:	mov    %rbx,%r14
   289e3:	mov    %rdi,%rbx
   289e6:	mov    %r8,%rdi
   289e9:	mov    %r12,%r15
   289ec:	mov    %rdx,%r12
   289ef:	mov    %rcx,%rdx
   289f2:	callq  29f30 <png_write_chunk_header>
   289f7:	lea    -0x2b(%rbp),%rcx
   289fb:	xor    %eax,%eax
   289fd:	mov    %r14,-0x8(%rbp)
   28a01:	mov    %r15,-0x10(%rbp)
   28a05:	mov    %rax,%r14
   28a08:	mov    %rcx,%r15
   28a0b:	jmp    28a40 <png_write_hIST+0x90>
   28a0d:	lea    0x77c9(%rip),%rsi        # 301dd <fourbppswaptable+0xb91>
   28a14:	callq  5390 <png_warning@plt>
   28a19:	leaveq 
   28a1a:	retq   
   28a1b:	movslq %r14d,%rax
   28a1e:	movzwl 0x0(%r13,%rax,2),%esi
   28a24:	mov    %r15,%rdi
   28a27:	callq  57a0 <png_save_uint_16@plt>
   28a2c:	mov    %rbx,%rdi
   28a2f:	mov    %r15,%rsi
   28a32:	mov    $0x2,%edx
   28a37:	callq  5100 <png_write_chunk_data@plt>
   28a3c:	add    $0x1,%r14d
   28a40:	cmp    %r14d,%r12d
   28a43:	jg     28a1b <png_write_hIST+0x6b>
   28a45:	mov    %rbx,%rdi
   28a48:	callq  5480 <png_write_chunk_end@plt>
   28a4d:	mov    -0x10(%rbp),%r12
   28a51:	mov    -0x8(%rbp),%rbx
   28a55:	mov    -0x28(%rbp),%r15
   28a59:	mov    -0x20(%rbp),%r14
   28a5d:	mov    -0x18(%rbp),%r13
   28a61:	leaveq 
   28a62:	retq   
   28a63:	data16 nopw %cs:0x0(%rax,%rax,1)
   28a6e:	xchg   %ax,%ax

0000000000028a70 <png_write_tEXt>:
   28a70:	push   %rbp
   28a71:	mov    %rsp,%rbp
   28a74:	sub    $0x70,%rsp
   28a78:	mov    %r14,-0x18(%rbp)
   28a7c:	mov    %r15,-0x20(%rbp)
   28a80:	mov    %r12,%r14
   28a83:	mov    %rbx,%r12
   28a86:	mov    %r13,%r15
   28a89:	mov    %rdx,%r13
   28a8c:	lea    -0x70(%rbp),%rdx
   28a90:	mov    %rdi,%rbx
   28a93:	callq  23270 <png_check_keyword>
   28a98:	test   %eax,%eax
   28a9a:	je     28b21 <png_write_tEXt+0xb1>
   28aa0:	xor    %edx,%edx
   28aa2:	test   %r13,%r13
   28aa5:	jne    28b30 <png_write_tEXt+0xc0>
   28aab:	mov    $0x7ffffffe,%ecx
   28ab0:	sub    %eax,%ecx
   28ab2:	mov    %ecx,%ecx
   28ab4:	cmp    %rdx,%rcx
   28ab7:	jb     28b5b <png_write_tEXt+0xeb>
   28abd:	lea    0x1(%rax,%rdx,1),%ecx
   28ac1:	mov    $0x74455874,%esi
   28ac6:	mov    %rbx,%rdi
   28ac9:	mov    %r15,-0x10(%rbp)
   28acd:	mov    %r14,-0x8(%rbp)
   28ad1:	mov    %rdx,%r14
   28ad4:	mov    %rcx,%rdx
   28ad7:	mov    %rax,%r15
   28ada:	callq  29f30 <png_write_chunk_header>
   28adf:	lea    0x1(%r15),%eax
   28ae3:	mov    %eax,%edx
   28ae5:	mov    %rbx,%rdi
   28ae8:	lea    -0x70(%rbp),%rsi
   28aec:	callq  5100 <png_write_chunk_data@plt>
   28af1:	test   %r14,%r14
   28af4:	je     28b04 <png_write_tEXt+0x94>
   28af6:	mov    %r14,%rdx
   28af9:	mov    %r13,%rsi
   28afc:	mov    %rbx,%rdi
   28aff:	callq  5100 <png_write_chunk_data@plt>
   28b04:	mov    %rbx,%rdi
   28b07:	callq  5480 <png_write_chunk_end@plt>
   28b0c:	mov    %r12,%rbx
   28b0f:	mov    -0x8(%rbp),%r12
   28b13:	mov    -0x10(%rbp),%r13
   28b17:	mov    -0x20(%rbp),%r15
   28b1b:	mov    -0x18(%rbp),%r14
   28b1f:	leaveq 
   28b20:	retq   
   28b21:	mov    %rbx,%rdi
   28b24:	lea    0x76e0(%rip),%rsi        # 3020b <fourbppswaptable+0xbbf>
   28b2b:	callq  5470 <png_error@plt>
   28b30:	movsbq 0x0(%r13),%rcx
   28b35:	test   %cl,%cl
   28b37:	je     28aab <png_write_tEXt+0x3b>
   28b3d:	mov    %r13,%rdi
   28b40:	mov    %r15,-0x10(%rbp)
   28b44:	mov    %rax,%r15
   28b47:	callq  5260 <strlen@plt>
   28b4c:	mov    %rax,%rdx
   28b4f:	mov    %r15,%rax
   28b52:	mov    -0x10(%rbp),%r15
   28b56:	jmpq   28aab <png_write_tEXt+0x3b>
   28b5b:	mov    %rbx,%rdi
   28b5e:	lea    0x76bc(%rip),%rsi        # 30221 <fourbppswaptable+0xbd5>
   28b65:	callq  5470 <png_error@plt>
   28b6a:	nopw   0x0(%rax,%rax,1)

0000000000028b70 <png_write_zTXt>:
   28b70:	push   %rbp
   28b71:	mov    %rsp,%rbp
   28b74:	sub    $0x490,%rsp
   28b7b:	xor    %eax,%eax
   28b7d:	cmp    $0xffffffff,%ecx
   28b80:	je     28c4f <png_write_zTXt+0xdf>
   28b86:	test   %ecx,%ecx
   28b88:	jne    28c59 <png_write_zTXt+0xe9>
   28b8e:	lea    -0x481(%rbp),%rax
   28b95:	mov    %rdi,%rcx
   28b98:	mov    %r14,-0x10(%rbp)
   28b9c:	mov    %r15,-0x18(%rbp)
   28ba0:	mov    %rdi,%r14
   28ba3:	mov    %rcx,%rdi
   28ba6:	mov    %rdx,%r15
   28ba9:	mov    %rax,%rdx
   28bac:	callq  23270 <png_check_keyword>
   28bb1:	test   %eax,%eax
   28bb3:	je     28c65 <png_write_zTXt+0xf5>
   28bb9:	lea    0x1(%rax),%ecx
   28bbc:	mov    %ecx,%ecx
   28bbe:	movb   $0x0,-0x481(%rbp,%rcx,1)
   28bc6:	test   %r15,%r15
   28bc9:	jne    28c74 <png_write_zTXt+0x104>
   28bcf:	xor    %edx,%edx
   28bd1:	mov    %r15,%rsi
   28bd4:	mov    %rax,%r15
   28bd7:	lea    -0x430(%rbp),%rdi
   28bde:	callq  2a5e0 <png_text_compress_init>
   28be3:	mov    $0x7a545874,%esi
   28be8:	add    $0x2,%r15d
   28bec:	mov    %r14,%rdi
   28bef:	lea    -0x430(%rbp),%rdx
   28bf6:	mov    %r15,%rcx
   28bf9:	callq  2a600 <png_text_compress>
   28bfe:	test   %eax,%eax
   28c00:	jne    28c92 <png_write_zTXt+0x122>
   28c06:	mov    %r15,%rdx
   28c09:	add    -0x420(%rbp),%edx
   28c0f:	mov    %r14,%rdi
   28c12:	mov    $0x7a545874,%esi
   28c17:	callq  29f30 <png_write_chunk_header>
   28c1c:	mov    %r15d,%edx
   28c1f:	mov    %r14,%rdi
   28c22:	lea    -0x481(%rbp),%rsi
   28c29:	callq  5100 <png_write_chunk_data@plt>
   28c2e:	mov    %r14,%rdi
   28c31:	lea    -0x430(%rbp),%rsi
   28c38:	callq  2a890 <png_write_compressed_data_out>
   28c3d:	mov    %r14,%rdi
   28c40:	callq  5480 <png_write_chunk_end@plt>
   28c45:	mov    -0x18(%rbp),%r15
   28c49:	mov    -0x10(%rbp),%r14
   28c4d:	leaveq 
   28c4e:	retq   
   28c4f:	mov    %rax,%rcx
   28c52:	callq  28a70 <png_write_tEXt>
   28c57:	leaveq 
   28c58:	retq   
   28c59:	lea    0x75d5(%rip),%rsi        # 30235 <fourbppswaptable+0xbe9>
   28c60:	callq  5470 <png_error@plt>
   28c65:	mov    %r14,%rdi
   28c68:	lea    0x75e5(%rip),%rsi        # 30254 <fourbppswaptable+0xc08>
   28c6f:	callq  5470 <png_error@plt>
   28c74:	mov    %r15,%rdi
   28c77:	mov    %r13,-0x8(%rbp)
   28c7b:	mov    %rax,%r13
   28c7e:	callq  5260 <strlen@plt>
   28c83:	mov    %rax,%rdx
   28c86:	mov    %r13,%rax
   28c89:	mov    -0x8(%rbp),%r13
   28c8d:	jmpq   28bd1 <png_write_zTXt+0x61>
   28c92:	mov    %r14,%rdi
   28c95:	mov    0x170(%rdi),%rsi
   28c9c:	callq  5470 <png_error@plt>
   28ca1:	data16 nopw %cs:0x0(%rax,%rax,1)
   28cac:	nopl   0x0(%rax)

0000000000028cb0 <png_write_iTXt>:
   28cb0:	push   %rbp
   28cb1:	mov    %rsp,%rbp
   28cb4:	sub    $0x4d0,%rsp
   28cbb:	mov    %rbx,-0x28(%rbp)
   28cbf:	mov    %r12,-0x30(%rbp)
   28cc3:	mov    %r13,-0x38(%rbp)
   28cc7:	mov    %r14,-0x40(%rbp)
   28ccb:	mov    %r15,-0x48(%rbp)
   28ccf:	mov    %r9,%r12
   28cd2:	mov    %r8,%r13
   28cd5:	mov    %rsi,%r14
   28cd8:	mov    %rdx,%rsi
   28cdb:	mov    %rcx,%r15
   28cde:	lea    -0x4c2(%rbp),%rdx
   28ce5:	mov    %rdi,%rbx
   28ce8:	callq  23270 <png_check_keyword>
   28ced:	test   %eax,%eax
   28cef:	je     28d20 <png_write_iTXt+0x70>
   28cf1:	xor    %ecx,%ecx
   28cf3:	mov    %rcx,-0x58(%rbp)
   28cf7:	mov    $0x1,%edx
   28cfc:	mov    %rdx,-0x50(%rbp)
   28d00:	test   %r14d,%r14d
   28d03:	jle    28d2f <png_write_iTXt+0x7f>
   28d05:	cmp    $0x1,%r14d
   28d09:	je     28d4e <png_write_iTXt+0x9e>
   28d0b:	cmp    $0x2,%r14d
   28d0f:	je     28d3a <png_write_iTXt+0x8a>
   28d11:	mov    %rbx,%rdi
   28d14:	lea    0x7565(%rip),%rsi        # 30280 <fourbppswaptable+0xc34>
   28d1b:	callq  5470 <png_error@plt>
   28d20:	mov    %rbx,%rdi
   28d23:	lea    0x7540(%rip),%rsi        # 3026a <fourbppswaptable+0xc1e>
   28d2a:	callq  5470 <png_error@plt>
   28d2f:	cmp    $0xffffffff,%r14d
   28d33:	je     28d4e <png_write_iTXt+0x9e>
   28d35:	test   %r14d,%r14d
   28d38:	jne    28d11 <png_write_iTXt+0x61>
   28d3a:	lea    0x1(%rax),%r14d
   28d3e:	mov    %r14d,%eax
   28d41:	movb   $0x1,-0x4c2(%rbp,%rax,1)
   28d49:	mov    %rdx,%rcx
   28d4c:	jmp    28d5d <png_write_iTXt+0xad>
   28d4e:	lea    0x1(%rax),%r14d
   28d52:	mov    %r14d,%eax
   28d55:	movb   $0x0,-0x4c2(%rbp,%rax,1)
   28d5d:	lea    0x1(%r14),%eax
   28d61:	mov    %eax,%eax
   28d63:	movb   $0x0,-0x4c2(%rbp,%rax,1)
   28d6b:	lea    0x7528(%rip),%rax        # 3029a <fourbppswaptable+0xc4e>
   28d72:	test   %r15,%r15
   28d75:	je     28d7c <png_write_iTXt+0xcc>
   28d77:	mov    %r15,%rdi
   28d7a:	jmp    28d7f <png_write_iTXt+0xcf>
   28d7c:	mov    %rax,%rdi
   28d7f:	mov    %rcx,%r15
   28d82:	mov    %rdi,-0x18(%rbp)
   28d86:	callq  5260 <strlen@plt>
   28d8b:	test   %r13,%r13
   28d8e:	jne    28d97 <png_write_iTXt+0xe7>
   28d90:	lea    0x7503(%rip),%r13        # 3029a <fourbppswaptable+0xc4e>
   28d97:	mov    %r13,%rdi
   28d9a:	mov    %rax,%r13
   28d9d:	mov    %rdi,-0x8(%rbp)
   28da1:	callq  5260 <strlen@plt>
   28da6:	test   %r12,%r12
   28da9:	jne    28db2 <png_write_iTXt+0x102>
   28dab:	lea    0x74e8(%rip),%r12        # 3029a <fourbppswaptable+0xc4e>
   28db2:	mov    $0x7fffffff,%edi
   28db7:	mov    $0x7ffffffd,%ecx
   28dbc:	sub    %r14d,%ecx
   28dbf:	mov    %ecx,%ecx
   28dc1:	lea    0x1(%r13),%rdx
   28dc5:	mov    %rdx,-0x20(%rbp)
   28dc9:	cmp    %rdx,%rcx
   28dcc:	jae    28e32 <png_write_iTXt+0x182>
   28dce:	mov    %rdi,%rcx
   28dd1:	lea    0x1(%rax),%rdx
   28dd5:	mov    %rdx,-0x10(%rbp)
   28dd9:	mov    %rcx,%rsi
   28ddc:	xor    $0x7fffffff,%esi
   28de2:	mov    %esi,%esi
   28de4:	cmp    %rdx,%rsi
   28de7:	jae    28e39 <png_write_iTXt+0x189>
   28de9:	mov    %rdi,%r13
   28dec:	mov    %r12,%rdi
   28def:	callq  5260 <strlen@plt>
   28df4:	mov    %rax,%rdx
   28df7:	lea    -0x470(%rbp),%rdi
   28dfe:	mov    %r12,%rsi
   28e01:	callq  2a5e0 <png_text_compress_init>
   28e06:	mov    $0x69545874,%esi
   28e0b:	test   %r15d,%r15d
   28e0e:	jg     28e40 <png_write_iTXt+0x190>
   28e10:	mov    %r13,%rax
   28e13:	xor    $0x7fffffff,%eax
   28e18:	mov    %eax,%ecx
   28e1a:	mov    -0x468(%rbp),%rax
   28e21:	cmp    %rax,%rcx
   28e24:	jb     28ec5 <png_write_iTXt+0x215>
   28e2a:	mov    %eax,-0x460(%rbp)
   28e30:	jmp    28e62 <png_write_iTXt+0x1b2>
   28e32:	lea    0x2(%r14,%rdx,1),%ecx
   28e37:	jmp    28dd1 <png_write_iTXt+0x121>
   28e39:	lea    0x1(%rcx,%rax,1),%r13d
   28e3e:	jmp    28dec <png_write_iTXt+0x13c>
   28e40:	mov    %rbx,%rdi
   28e43:	mov    %rsi,%r15
   28e46:	lea    -0x470(%rbp),%rdx
   28e4d:	mov    %r13,%rcx
   28e50:	callq  2a600 <png_text_compress>
   28e55:	test   %eax,%eax
   28e57:	jne    28ed4 <png_write_iTXt+0x224>
   28e59:	mov    %r15,%rsi
   28e5c:	pushq  -0x50(%rbp)
   28e5f:	popq   -0x58(%rbp)
   28e62:	add    -0x460(%rbp),%r13d
   28e69:	mov    %r13,%rdx
   28e6c:	mov    %rbx,%rdi
   28e6f:	callq  29f30 <png_write_chunk_header>
   28e74:	lea    0x2(%r14),%eax
   28e78:	mov    %eax,%edx
   28e7a:	mov    %rbx,%rdi
   28e7d:	lea    -0x4c2(%rbp),%rsi
   28e84:	callq  5100 <png_write_chunk_data@plt>
   28e89:	mov    %rbx,%rdi
   28e8c:	mov    -0x20(%rbp),%rdx
   28e90:	mov    -0x18(%rbp),%rsi
   28e94:	callq  5100 <png_write_chunk_data@plt>
   28e99:	mov    %rbx,%rdi
   28e9c:	mov    -0x10(%rbp),%rdx
   28ea0:	mov    -0x8(%rbp),%rsi
   28ea4:	callq  5100 <png_write_chunk_data@plt>
   28ea9:	mov    -0x58(%rbp),%rax
   28ead:	test   %rax,%rax
   28eb0:	jne    28ee3 <png_write_iTXt+0x233>
   28eb2:	mov    %r12,%rsi
   28eb5:	mov    -0x460(%rbp),%edx
   28ebb:	mov    %rbx,%rdi
   28ebe:	callq  5100 <png_write_chunk_data@plt>
   28ec3:	jmp    28ef2 <png_write_iTXt+0x242>
   28ec5:	mov    %rbx,%rdi
   28ec8:	lea    0x73cc(%rip),%rsi        # 3029b <fourbppswaptable+0xc4f>
   28ecf:	callq  5470 <png_error@plt>
   28ed4:	mov    %rbx,%rdi
   28ed7:	mov    0x170(%rdi),%rsi
   28ede:	callq  5470 <png_error@plt>
   28ee3:	mov    %rbx,%rdi
   28ee6:	lea    -0x470(%rbp),%rsi
   28eed:	callq  2a890 <png_write_compressed_data_out>
   28ef2:	mov    %rbx,%rdi
   28ef5:	callq  5480 <png_write_chunk_end@plt>
   28efa:	mov    -0x48(%rbp),%r15
   28efe:	mov    -0x40(%rbp),%r14
   28f02:	mov    -0x38(%rbp),%r13
   28f06:	mov    -0x30(%rbp),%r12
   28f0a:	mov    -0x28(%rbp),%rbx
   28f0e:	leaveq 
   28f0f:	retq   

0000000000028f10 <png_write_oFFs>:
   28f10:	push   %rbp
   28f11:	mov    %rsp,%rbp
   28f14:	sub    $0x30,%rsp
   28f18:	mov    %r13,-0x10(%rbp)
   28f1c:	mov    %r14,-0x18(%rbp)
   28f20:	mov    %r15,-0x20(%rbp)
   28f24:	cmp    $0x1,%ecx
   28f27:	jg     28f34 <png_write_oFFs+0x24>
   28f29:	mov    %rdi,%r13
   28f2c:	mov    %rcx,%r14
   28f2f:	mov    %rdx,%r15
   28f32:	jmp    28f60 <png_write_oFFs+0x50>
   28f34:	lea    0x7381(%rip),%r8        # 302bc <fourbppswaptable+0xc70>
   28f3b:	mov    %rdi,%rax
   28f3e:	mov    %r12,-0x8(%rbp)
   28f42:	mov    %rsi,%r12
   28f45:	mov    %r8,%rsi
   28f48:	mov    %rdi,%r13
   28f4b:	mov    %rax,%rdi
   28f4e:	mov    %rcx,%r14
   28f51:	mov    %rdx,%r15
   28f54:	callq  5390 <png_warning@plt>
   28f59:	mov    %r12,%rsi
   28f5c:	mov    -0x8(%rbp),%r12
   28f60:	lea    -0x29(%rbp),%rdi
   28f64:	callq  5520 <png_save_int_32@plt>
   28f69:	mov    %r15,%rsi
   28f6c:	lea    -0x25(%rbp),%rdi
   28f70:	callq  5520 <png_save_int_32@plt>
   28f75:	mov    %r14b,-0x21(%rbp)
   28f79:	mov    %r13,%rdi
   28f7c:	mov    $0x6f464673,%esi
   28f81:	mov    $0x9,%ecx
   28f86:	lea    -0x29(%rbp),%rdx
   28f8a:	callq  29fc0 <png_write_complete_chunk>
   28f8f:	mov    -0x20(%rbp),%r15
   28f93:	mov    -0x18(%rbp),%r14
   28f97:	mov    -0x10(%rbp),%r13
   28f9b:	leaveq 
   28f9c:	retq   
   28f9d:	nopl   (%rax)

0000000000028fa0 <png_write_pCAL>:
   28fa0:	push   %rbp
   28fa1:	mov    %rsp,%rbp
   28fa4:	sub    $0xf0,%rsp
   28fab:	mov    %r9,-0x88(%rbp)
   28fb2:	cmp    $0x3,%r8d
   28fb6:	jg     2907b <png_write_pCAL+0xdb>
   28fbc:	lea    -0xd8(%rbp),%rax
   28fc3:	mov    %rdi,%r10
   28fc6:	mov    %rbx,-0x60(%rbp)
   28fca:	mov    %r12,-0x68(%rbp)
   28fce:	mov    %r13,-0x70(%rbp)
   28fd2:	mov    %r14,-0x78(%rbp)
   28fd6:	mov    %r15,-0x80(%rbp)
   28fda:	mov    %rcx,%rbx
   28fdd:	mov    %r9,%r12
   28fe0:	mov    %rdx,%r13
   28fe3:	mov    %rax,%rdx
   28fe6:	mov    %rdi,%r14
   28fe9:	mov    %r10,%rdi
   28fec:	mov    %r8,%r15
   28fef:	callq  23270 <png_check_keyword>
   28ff4:	test   %eax,%eax
   28ff6:	je     29087 <png_write_pCAL+0xe7>
   28ffc:	mov    0x10(%rbp),%rdi
   29000:	mov    %rdi,-0x8(%rbp)
   29004:	mov    %r15,-0x18(%rbp)
   29008:	mov    %rax,%r15
   2900b:	callq  5260 <strlen@plt>
   29010:	xor    %edx,%edx
   29012:	mov    %rdx,-0x40(%rbp)
   29016:	mov    $0x1,%ecx
   2901b:	mov    %rcx,-0x38(%rbp)
   2901f:	test   %r12d,%r12d
   29022:	jne    29027 <png_write_pCAL+0x87>
   29024:	mov    %rdx,%rcx
   29027:	movslq %r12d,%rsi
   2902a:	shl    $0x3,%rsi
   2902e:	mov    %r14,%rdi
   29031:	mov    %r14,-0x50(%rbp)
   29035:	mov    %r13,-0x28(%rbp)
   29039:	mov    %rbx,-0x20(%rbp)
   2903d:	mov    %rdx,%rbx
   29040:	mov    %rcx,%r13
   29043:	mov    %rax,%r14
   29046:	callq  5800 <png_malloc@plt>
   2904b:	mov    0x18(%rbp),%rsi
   2904f:	mov    %rsi,-0x58(%rbp)
   29053:	lea    0x0(%r13,%r14,1),%rcx
   29058:	mov    %rcx,-0x10(%rbp)
   2905c:	lea    0x1(%r15),%edx
   29060:	mov    %edx,%edx
   29062:	mov    %rdx,-0x30(%rbp)
   29066:	lea    0xa(%rcx,%rdx,1),%r15
   2906b:	lea    -0x1(%r12),%r14d
   29070:	mov    %rbx,%r8
   29073:	mov    %rax,%rbx
   29076:	mov    %rsi,%r13
   29079:	jmp    290b9 <png_write_pCAL+0x119>
   2907b:	lea    0x7260(%rip),%rsi        # 302e2 <fourbppswaptable+0xc96>
   29082:	callq  5470 <png_error@plt>
   29087:	mov    %r14,%rdi
   2908a:	lea    0x727b(%rip),%rsi        # 3030c <fourbppswaptable+0xcc0>
   29091:	callq  5470 <png_error@plt>
   29096:	pushq  -0x40(%rbp)
   29099:	popq   -0x48(%rbp)
   2909c:	mov    -0x48(%rbp),%rcx
   290a0:	add    %rcx,%rax
   290a3:	mov    %rax,(%rbx,%r12,8)
   290a7:	add    %rax,%r15
   290aa:	lea    0x1(%r13),%r8d
   290ae:	mov    -0x58(%rbp),%r13
   290b2:	mov    -0x88(%rbp),%r12
   290b9:	cmp    %r8d,%r12d
   290bc:	jg     29142 <png_write_pCAL+0x1a2>
   290c2:	mov    %r15,%rdx
   290c5:	mov    $0x7043414c,%esi
   290ca:	mov    -0x50(%rbp),%r14
   290ce:	mov    %r14,%rdi
   290d1:	callq  29f30 <png_write_chunk_header>
   290d6:	mov    %r14,%rdi
   290d9:	mov    -0x30(%rbp),%rdx
   290dd:	lea    -0xd8(%rbp),%rsi
   290e4:	callq  5100 <png_write_chunk_data@plt>
   290e9:	lea    -0xe2(%rbp),%r15
   290f0:	mov    %r15,%rdi
   290f3:	mov    -0x28(%rbp),%rsi
   290f7:	callq  5520 <png_save_int_32@plt>
   290fc:	lea    -0xde(%rbp),%rdi
   29103:	mov    -0x20(%rbp),%rsi
   29107:	callq  5520 <png_save_int_32@plt>
   2910c:	mov    -0x18(%rbp),%rax
   29110:	mov    %al,-0xda(%rbp)
   29116:	mov    %r15,%rsi
   29119:	mov    %r12b,-0xd9(%rbp)
   29120:	mov    $0xa,%edx
   29125:	mov    %r14,%rdi
   29128:	callq  5100 <png_write_chunk_data@plt>
   2912d:	mov    %r14,%rdi
   29130:	mov    -0x10(%rbp),%rdx
   29134:	mov    -0x8(%rbp),%rsi
   29138:	callq  5100 <png_write_chunk_data@plt>
   2913d:	xor    %r15d,%r15d
   29140:	jmp    2917e <png_write_pCAL+0x1de>
   29142:	movslq %r8d,%r12
   29145:	mov    0x0(%r13,%r12,8),%rdi
   2914a:	mov    %r8,%r13
   2914d:	callq  5260 <strlen@plt>
   29152:	cmp    %r14d,%r13d
   29155:	je     29096 <png_write_pCAL+0xf6>
   2915b:	pushq  -0x38(%rbp)
   2915e:	popq   -0x48(%rbp)
   29161:	jmpq   2909c <png_write_pCAL+0xfc>
   29166:	movslq %r15d,%rax
   29169:	mov    0x0(%r13,%rax,8),%rsi
   2916e:	mov    (%rbx,%rax,8),%rdx
   29172:	mov    %r14,%rdi
   29175:	callq  5100 <png_write_chunk_data@plt>
   2917a:	add    $0x1,%r15d
   2917e:	cmp    %r12d,%r15d
   29181:	jl     29166 <png_write_pCAL+0x1c6>
   29183:	mov    %rbx,%rsi
   29186:	mov    %r14,%rdi
   29189:	callq  5790 <png_free@plt>
   2918e:	mov    %r14,%rdi
   29191:	callq  5480 <png_write_chunk_end@plt>
   29196:	mov    -0x80(%rbp),%r15
   2919a:	mov    -0x78(%rbp),%r14
   2919e:	mov    -0x70(%rbp),%r13
   291a2:	mov    -0x68(%rbp),%r12
   291a6:	mov    -0x60(%rbp),%rbx
   291aa:	leaveq 
   291ab:	retq   
   291ac:	nopl   0x0(%rax)

00000000000291b0 <png_write_pHYs>:
   291b0:	push   %rbp
   291b1:	mov    %rsp,%rbp
   291b4:	sub    $0x30,%rsp
   291b8:	mov    %r13,-0x10(%rbp)
   291bc:	mov    %r14,-0x18(%rbp)
   291c0:	mov    %r15,-0x20(%rbp)
   291c4:	cmp    $0x1,%ecx
   291c7:	jg     291d4 <png_write_pHYs+0x24>
   291c9:	mov    %rdi,%r13
   291cc:	mov    %rcx,%r14
   291cf:	mov    %rdx,%r15
   291d2:	jmp    29200 <png_write_pHYs+0x50>
   291d4:	lea    0x7147(%rip),%r8        # 30322 <fourbppswaptable+0xcd6>
   291db:	mov    %rdi,%rax
   291de:	mov    %r12,-0x8(%rbp)
   291e2:	mov    %rsi,%r12
   291e5:	mov    %r8,%rsi
   291e8:	mov    %rdi,%r13
   291eb:	mov    %rax,%rdi
   291ee:	mov    %rcx,%r14
   291f1:	mov    %rdx,%r15
   291f4:	callq  5390 <png_warning@plt>
   291f9:	mov    %r12,%rsi
   291fc:	mov    -0x8(%rbp),%r12
   29200:	lea    -0x29(%rbp),%rdi
   29204:	callq  5500 <png_save_uint_32@plt>
   29209:	mov    %r15,%rsi
   2920c:	lea    -0x25(%rbp),%rdi
   29210:	callq  5500 <png_save_uint_32@plt>
   29215:	mov    %r14b,-0x21(%rbp)
   29219:	mov    %r13,%rdi
   2921c:	mov    $0x70485973,%esi
   29221:	mov    $0x9,%ecx
   29226:	lea    -0x29(%rbp),%rdx
   2922a:	callq  29fc0 <png_write_complete_chunk>
   2922f:	mov    -0x20(%rbp),%r15
   29233:	mov    -0x18(%rbp),%r14
   29237:	mov    -0x10(%rbp),%r13
   2923b:	leaveq 
   2923c:	retq   
   2923d:	nopl   (%rax)

0000000000029240 <png_write_tIME>:
   29240:	push   %rbp
   29241:	mov    %rsp,%rbp
   29244:	sub    $0x20,%rsp
   29248:	movzbl 0x2(%rsi),%eax
   2924c:	cmp    $0xc,%al
   2924e:	ja     292e0 <png_write_tIME+0xa0>
   29254:	test   %al,%al
   29256:	je     292e0 <png_write_tIME+0xa0>
   2925c:	movzbl 0x3(%rsi),%eax
   29260:	cmp    $0x1f,%al
   29262:	ja     292e0 <png_write_tIME+0xa0>
   29264:	test   %al,%al
   29266:	je     292e0 <png_write_tIME+0xa0>
   29268:	movzbl 0x4(%rsi),%eax
   2926c:	cmp    $0x17,%al
   2926e:	ja     292e0 <png_write_tIME+0xa0>
   29270:	movzbl 0x6(%rsi),%eax
   29274:	cmp    $0x3c,%al
   29276:	ja     292e0 <png_write_tIME+0xa0>
   29278:	lea    -0x17(%rbp),%rax
   2927c:	movzwl (%rsi),%ecx
   2927f:	mov    %r14,-0x8(%rbp)
   29283:	mov    %r15,-0x10(%rbp)
   29287:	mov    %rsi,%r14
   2928a:	mov    %rcx,%rsi
   2928d:	mov    %rdi,%r15
   29290:	mov    %rax,%rdi
   29293:	callq  57a0 <png_save_uint_16@plt>
   29298:	movzbl 0x2(%r14),%eax
   2929d:	mov    %al,-0x15(%rbp)
   292a0:	movzbl 0x3(%r14),%eax
   292a5:	mov    %al,-0x14(%rbp)
   292a8:	movzbl 0x4(%r14),%eax
   292ad:	mov    %al,-0x13(%rbp)
   292b0:	movzbl 0x5(%r14),%eax
   292b5:	mov    %al,-0x12(%rbp)
   292b8:	movzbl 0x6(%r14),%eax
   292bd:	mov    %al,-0x11(%rbp)
   292c0:	mov    %r15,%rdi
   292c3:	mov    $0x74494d45,%esi
   292c8:	mov    $0x7,%ecx
   292cd:	lea    -0x17(%rbp),%rdx
   292d1:	callq  29fc0 <png_write_complete_chunk>
   292d6:	mov    -0x10(%rbp),%r15
   292da:	mov    -0x8(%rbp),%r14
   292de:	leaveq 
   292df:	retq   
   292e0:	lea    0x7061(%rip),%rsi        # 30348 <fourbppswaptable+0xcfc>
   292e7:	callq  5390 <png_warning@plt>
   292ec:	leaveq 
   292ed:	retq   
   292ee:	xchg   %ax,%ax

00000000000292f0 <png_write_sCAL_s>:
   292f0:	push   %rbp
   292f1:	mov    %rsp,%rbp
   292f4:	sub    $0x70,%rsp
   292f8:	mov    %r12,-0x10(%rbp)
   292fc:	mov    %r13,-0x18(%rbp)
   29300:	mov    %r14,-0x20(%rbp)
   29304:	mov    %r15,-0x28(%rbp)
   29308:	mov    %rdi,%r12
   2930b:	mov    %rdx,%r13
   2930e:	mov    %rsi,%r14
   29311:	mov    %rcx,%r15
   29314:	mov    %r15,-0x8(%rbp)
   29318:	mov    %r13,%rdi
   2931b:	callq  5260 <strlen@plt>
   29320:	mov    %r15,%rdi
   29323:	mov    %rax,%r15
   29326:	callq  5260 <strlen@plt>
   2932b:	lea    0x2(%rax,%r15,1),%rcx
   29330:	cmp    $0x40,%rcx
   29334:	ja     29387 <png_write_sCAL_s+0x97>
   29336:	mov    %r14b,-0x68(%rbp)
   2933a:	mov    %r13,%rsi
   2933d:	mov    %rcx,%r13
   29340:	mov    %rax,%r14
   29343:	lea    -0x67(%rbp),%rdi
   29347:	lea    0x1(%r15),%rdx
   2934b:	callq  54c0 <memcpy@plt>
   29350:	lea    -0x66(%rbp,%r15,1),%rdi
   29355:	mov    %r14,%rdx
   29358:	mov    -0x8(%rbp),%rsi
   2935c:	callq  54c0 <memcpy@plt>
   29361:	mov    %r13,%rcx
   29364:	mov    %r12,%rdi
   29367:	mov    $0x7343414c,%esi
   2936c:	lea    -0x68(%rbp),%rdx
   29370:	callq  29fc0 <png_write_complete_chunk>
   29375:	mov    -0x28(%rbp),%r15
   29379:	mov    -0x20(%rbp),%r14
   2937d:	mov    -0x18(%rbp),%r13
   29381:	mov    -0x10(%rbp),%r12
   29385:	leaveq 
   29386:	retq   
   29387:	mov    %r12,%rdi
   2938a:	lea    0x6fdd(%rip),%rsi        # 3036e <fourbppswaptable+0xd22>
   29391:	callq  5390 <png_warning@plt>
   29396:	mov    -0x28(%rbp),%r15
   2939a:	mov    -0x20(%rbp),%r14
   2939e:	mov    -0x18(%rbp),%r13
   293a2:	mov    -0x10(%rbp),%r12
   293a6:	leaveq 
   293a7:	retq   
   293a8:	nopl   0x0(%rax,%rax,1)

00000000000293b0 <png_write_finish_row>:
   293b0:	push   %rbp
   293b1:	mov    %rsp,%rbp
   293b4:	mov    0x214(%rdi),%eax
   293ba:	add    $0x1,%eax
   293bd:	mov    %eax,0x214(%rdi)
   293c3:	mov    0x200(%rdi),%ecx
   293c9:	cmp    %eax,%ecx
   293cb:	jbe    293cf <png_write_finish_row+0x1f>
   293cd:	leaveq 
   293ce:	retq   
   293cf:	xor    %esi,%esi
   293d1:	movzbl 0x264(%rdi),%eax
   293d8:	test   %al,%al
   293da:	jne    293eb <png_write_finish_row+0x3b>
   293dc:	mov    $0x4,%ecx
   293e1:	mov    %rsi,%rdx
   293e4:	callq  27db0 <png_compress_IDAT>
   293e9:	leaveq 
   293ea:	retq   
   293eb:	movl   $0x0,0x214(%rdi)
   293f5:	mov    0x134(%rdi),%eax
   293fb:	and    $0x2,%eax
   293fe:	test   %eax,%eax
   29400:	jne    29423 <png_write_finish_row+0x73>
   29402:	lea    0x6f90(%rip),%rcx        # 30399 <png_pass_inc.46>
   29409:	lea    0x6f82(%rip),%rsi        # 30392 <png_pass_start.45>
   29410:	lea    0x6f90(%rip),%r8        # 303a7 <png_pass_yinc.48>
   29417:	lea    0x6f82(%rip),%r9        # 303a0 <png_pass_ystart.47>
   2941e:	jmpq   294bd <png_write_finish_row+0x10d>
   29423:	movzbl 0x265(%rdi),%eax
   2942a:	add    $0x1,%eax
   2942d:	mov    %al,0x265(%rdi)
   29433:	movzbl 0x265(%rdi),%eax
   2943a:	cmp    $0x6,%al
   2943c:	ja     293dc <png_write_finish_row+0x2c>
   2943e:	mov    0x220(%rdi),%r8
   29445:	test   %r8,%r8
   29448:	jne    294dc <png_write_finish_row+0x12c>
   2944e:	leaveq 
   2944f:	retq   
   29450:	movzbl %al,%edx
   29453:	movzbl (%rdx,%rcx,1),%r11d
   29458:	mov    0x1f8(%rdi),%eax
   2945e:	lea    -0x1(%r11,%rax,1),%eax
   29463:	movzbl (%rdx,%rsi,1),%edx
   29467:	sub    %edx,%eax
   29469:	xor    %r10d,%r10d
   2946c:	mov    %r10,%rdx
   2946f:	div    %r11d
   29472:	mov    %eax,0x204(%rdi)
   29478:	movzbl 0x265(%rdi),%edx
   2947f:	movzbl (%rdx,%r8,1),%r11d
   29484:	mov    0x1fc(%rdi),%eax
   2948a:	lea    -0x1(%r11,%rax,1),%eax
   2948f:	movzbl (%rdx,%r9,1),%edx
   29494:	sub    %edx,%eax
   29496:	mov    %r10,%rdx
   29499:	div    %r11d
   2949c:	mov    %eax,0x200(%rdi)
   294a2:	mov    0x134(%rdi),%edx
   294a8:	and    $0x2,%edx
   294ab:	test   %edx,%edx
   294ad:	jne    29509 <png_write_finish_row+0x159>
   294af:	mov    0x204(%rdi),%edx
   294b5:	test   %edx,%edx
   294b7:	je     294bd <png_write_finish_row+0x10d>
   294b9:	test   %eax,%eax
   294bb:	jne    29510 <png_write_finish_row+0x160>
   294bd:	movzbl 0x265(%rdi),%eax
   294c4:	add    $0x1,%eax
   294c7:	mov    %al,0x265(%rdi)
   294cd:	cmp    $0x6,%al
   294cf:	jbe    29450 <png_write_finish_row+0xa0>
   294d5:	xor    %esi,%esi
   294d7:	jmpq   29433 <png_write_finish_row+0x83>
   294dc:	movzbl 0x269(%rdi),%eax
   294e3:	movzbl 0x26c(%rdi),%ecx
   294ea:	imul   %ecx,%eax
   294ed:	cmp    $0x7,%eax
   294f0:	jg     29517 <png_write_finish_row+0x167>
   294f2:	movslq %eax,%rax
   294f5:	mov    0x1f8(%rdi),%ecx
   294fb:	imul   %rcx,%rax
   294ff:	add    $0x7,%rax
   29503:	shr    $0x3,%rax
   29507:	jmp    29528 <png_write_finish_row+0x178>
   29509:	xor    %esi,%esi
   2950b:	jmpq   29433 <png_write_finish_row+0x83>
   29510:	xor    %esi,%esi
   29512:	jmpq   29433 <png_write_finish_row+0x83>
   29517:	movslq %eax,%rax
   2951a:	shr    $0x3,%rax
   2951e:	mov    0x1f8(%rdi),%ecx
   29524:	imul   %rcx,%rax
   29528:	lea    0x1(%rax),%rdx
   2952c:	mov    %r8,%rdi
   2952f:	callq  5350 <memset@plt>
   29534:	leaveq 
   29535:	retq   
   29536:	nopw   %cs:0x0(%rax,%rax,1)

0000000000029540 <png_write_start_row>:
   29540:	push   %rbp
   29541:	mov    %rsp,%rbp
   29544:	sub    $0x20,%rsp
   29548:	mov    %r14,-0x10(%rbp)
   2954c:	mov    %r15,-0x18(%rbp)
   29550:	movzbl 0x269(%rdi),%ecx
   29557:	movzbl 0x26c(%rdi),%eax
   2955e:	imul   %eax,%ecx
   29561:	cmp    $0x7,%ecx
   29564:	jg     2957d <png_write_start_row+0x3d>
   29566:	movslq %ecx,%rax
   29569:	mov    0x1f8(%rdi),%edx
   2956f:	imul   %rdx,%rax
   29573:	add    $0x7,%rax
   29577:	shr    $0x3,%rax
   2957b:	jmp    2958e <png_write_start_row+0x4e>
   2957d:	movslq %ecx,%rax
   29580:	shr    $0x3,%rax
   29584:	mov    0x1f8(%rdi),%edx
   2958a:	imul   %rdx,%rax
   2958e:	movzbl 0x26a(%rdi),%edx
   29595:	mov    %dl,0x26f(%rdi)
   2959b:	mov    %cl,0x26e(%rdi)
   295a1:	lea    0x1(%rax),%r15
   295a5:	mov    %rdi,%r14
   295a8:	mov    %r15,%rsi
   295ab:	callq  5800 <png_malloc@plt>
   295b0:	mov    %rax,0x228(%r14)
   295b7:	movb   $0x0,(%rax)
   295ba:	movzbl 0x266(%r14),%eax
   295c2:	mov    0x1fc(%r14),%ecx
   295c9:	cmp    $0x1,%ecx
   295cc:	jne    295d0 <png_write_start_row+0x90>
   295ce:	and    $0x1f,%al
   295d0:	mov    0x1f8(%r14),%ecx
   295d7:	cmp    $0x1,%ecx
   295da:	jne    295de <png_write_start_row+0x9e>
   295dc:	and    $0x2f,%al
   295de:	test   %al,%al
   295e0:	jne    295e7 <png_write_start_row+0xa7>
   295e2:	mov    $0x8,%eax
   295e7:	mov    %al,0x266(%r14)
   295ee:	movzbl %al,%eax
   295f1:	mov    %rax,%rcx
   295f4:	and    $0xf0,%ecx
   295fa:	test   %ecx,%ecx
   295fc:	jg     2964b <png_write_start_row+0x10b>
   295fe:	and    $0xe0,%eax
   29603:	test   %eax,%eax
   29605:	jle    29619 <png_write_start_row+0xd9>
   29607:	mov    %r15,%rsi
   2960a:	mov    %r14,%rdi
   2960d:	callq  5780 <png_calloc@plt>
   29612:	mov    %rax,0x220(%r14)
   29619:	movzbl 0x264(%r14),%eax
   29621:	test   %al,%al
   29623:	jne    29683 <png_write_start_row+0x143>
   29625:	mov    0x1fc(%r14),%eax
   2962c:	mov    %eax,0x200(%r14)
   29633:	mov    0x1f8(%r14),%eax
   2963a:	mov    %eax,0x204(%r14)
   29641:	mov    -0x18(%rbp),%r15
   29645:	mov    -0x10(%rbp),%r14
   29649:	leaveq 
   2964a:	retq   
   2964b:	mov    0x230(%r14),%rcx
   29652:	test   %rcx,%rcx
   29655:	jne    295fe <png_write_start_row+0xbe>
   29657:	mov    %r14,%rdi
   2965a:	mov    %r15,%rsi
   2965d:	mov    %r13,-0x8(%rbp)
   29661:	mov    %rax,%r13
   29664:	callq  5800 <png_malloc@plt>
   29669:	mov    %rax,0x230(%r14)
   29670:	mov    $0x1,%ecx
   29675:	mov    %r13,%rax
   29678:	and    $0x10,%eax
   2967b:	test   %eax,%eax
   2967d:	jg     296b7 <png_write_start_row+0x177>
   2967f:	xor    %eax,%eax
   29681:	jmp    296bf <png_write_start_row+0x17f>
   29683:	mov    0x134(%r14),%eax
   2968a:	and    $0x2,%eax
   2968d:	test   %eax,%eax
   2968f:	je     296fa <png_write_start_row+0x1ba>
   29691:	mov    0x1fc(%r14),%eax
   29698:	mov    %eax,0x200(%r14)
   2969f:	mov    0x1f8(%r14),%eax
   296a6:	mov    %eax,0x204(%r14)
   296ad:	mov    -0x18(%rbp),%r15
   296b1:	mov    -0x10(%rbp),%r14
   296b5:	leaveq 
   296b6:	retq   
   296b7:	mov    %rcx,%rax
   296ba:	mov    $0x2,%ecx
   296bf:	mov    %r13,%rdx
   296c2:	and    $0x20,%edx
   296c5:	test   %edx,%edx
   296c7:	jle    296cc <png_write_start_row+0x18c>
   296c9:	mov    %rcx,%rax
   296cc:	mov    %r13,%rcx
   296cf:	and    $0x40,%ecx
   296d2:	test   %ecx,%ecx
   296d4:	jle    296d9 <png_write_start_row+0x199>
   296d6:	add    $0x1,%eax
   296d9:	mov    %r13,%rcx
   296dc:	and    $0x80,%ecx
   296e2:	test   %ecx,%ecx
   296e4:	jle    296e9 <png_write_start_row+0x1a9>
   296e6:	add    $0x1,%eax
   296e9:	cmp    $0x1,%eax
   296ec:	jg     2972c <png_write_start_row+0x1ec>
   296ee:	mov    %r13,%rax
   296f1:	mov    -0x8(%rbp),%r13
   296f5:	jmpq   295fe <png_write_start_row+0xbe>
   296fa:	mov    0x1fc(%r14),%eax
   29701:	add    $0x7,%eax
   29704:	shr    $0x3,%eax
   29707:	mov    %eax,0x200(%r14)
   2970e:	mov    0x1f8(%r14),%eax
   29715:	add    $0x7,%eax
   29718:	shr    $0x3,%eax
   2971b:	mov    %eax,0x204(%r14)
   29722:	mov    -0x18(%rbp),%r15
   29726:	mov    -0x10(%rbp),%r14
   2972a:	leaveq 
   2972b:	retq   
   2972c:	mov    %r14,%rdi
   2972f:	mov    %r15,%rsi
   29732:	callq  5800 <png_malloc@plt>
   29737:	mov    %rax,0x238(%r14)
   2973e:	mov    %r13,%rax
   29741:	mov    -0x8(%rbp),%r13
   29745:	jmpq   295fe <png_write_start_row+0xbe>
   2974a:	nopw   0x0(%rax,%rax,1)

0000000000029750 <png_do_write_interlace>:
   29750:	push   %rbp
   29751:	mov    %rsp,%rbp
   29754:	sub    $0x40,%rsp
   29758:	cmp    $0x5,%edx
   2975b:	jle    2975f <png_do_write_interlace+0xf>
   2975d:	leaveq 
   2975e:	retq   
   2975f:	movslq %edx,%r9
   29762:	lea    0x6c4c(%rip),%rax        # 303b5 <png_pass_inc.54>
   29769:	lea    0x6c3e(%rip),%r8        # 303ae <png_pass_start.53>
   29770:	xor    %r10d,%r10d
   29773:	movzbl 0x13(%rdi),%ecx
   29777:	cmp    $0x1,%cl
   2977a:	jbe    297be <png_do_write_interlace+0x6e>
   2977c:	cmp    $0x2,%cl
   2977f:	je     29808 <png_do_write_interlace+0xb8>
   29785:	cmp    $0x4,%cl
   29788:	jne    297c7 <png_do_write_interlace+0x77>
   2978a:	mov    (%rdi),%ecx
   2978c:	movzbl (%r9,%r8,1),%r11d
   29791:	mov    $0x4,%edx
   29796:	mov    %rbx,-0x8(%rbp)
   2979a:	mov    %r12,-0x10(%rbp)
   2979e:	mov    %r13,-0x18(%rbp)
   297a2:	mov    %r14,-0x20(%rbp)
   297a6:	mov    %r15,-0x28(%rbp)
   297aa:	mov    %r11,%r13
   297ad:	mov    %rcx,%r14
   297b0:	mov    %rdx,%r15
   297b3:	mov    %rsi,%r12
   297b6:	mov    %r10,%r11
   297b9:	jmpq   29856 <png_do_write_interlace+0x106>
   297be:	cmp    $0x1,%cl
   297c1:	je     2986e <png_do_write_interlace+0x11e>
   297c7:	mov    (%rdi),%r10d
   297ca:	movslq %edx,%rdx
   297cd:	movzbl (%rdx,%r8,1),%r8d
   297d2:	shr    $0x3,%ecx
   297d5:	movslq %ecx,%rcx
   297d8:	mov    %rbx,-0x8(%rbp)
   297dc:	mov    %r12,-0x10(%rbp)
   297e0:	mov    %r13,-0x18(%rbp)
   297e4:	mov    %r14,-0x20(%rbp)
   297e8:	mov    %r15,-0x28(%rbp)
   297ec:	mov    %r9,-0x38(%rbp)
   297f0:	mov    %rdi,-0x30(%rbp)
   297f4:	mov    %r8,%rbx
   297f7:	mov    %rcx,%r12
   297fa:	mov    %rdx,%r13
   297fd:	mov    %r10,%r14
   29800:	mov    %rsi,%r15
   29803:	jmpq   298d8 <png_do_write_interlace+0x188>
   29808:	mov    (%rdi),%edx
   2980a:	movzbl (%r9,%r8,1),%ecx
   2980f:	mov    $0x6,%r11d
   29815:	mov    %rbx,-0x8(%rbp)
   29819:	mov    %r12,-0x10(%rbp)
   2981d:	mov    %r13,-0x18(%rbp)
   29821:	mov    %r14,-0x20(%rbp)
   29825:	mov    %r15,-0x28(%rbp)
   29829:	mov    %rcx,%r13
   2982c:	mov    %rdx,%r14
   2982f:	mov    %r11,%r15
   29832:	mov    %rsi,%r12
   29835:	mov    %r10,%r11
   29838:	mov    %r15,%rdx
   2983b:	jmpq   2993a <png_do_write_interlace+0x1ea>
   29840:	mov    %r11b,(%r12)
   29844:	add    $0x1,%r12
   29848:	mov    %r10,%r11
   2984b:	mov    %r15,%rdx
   2984e:	movzbl (%r9,%rax,1),%ecx
   29853:	add    %ecx,%r13d
   29856:	cmp    %r14d,%r13d
   29859:	jb     2994e <png_do_write_interlace+0x1fe>
   2985f:	cmp    $0x4,%edx
   29862:	je     298ec <png_do_write_interlace+0x19c>
   29868:	mov    %r11b,(%r12)
   2986c:	jmp    298ec <png_do_write_interlace+0x19c>
   2986e:	mov    (%rdi),%ecx
   29870:	movzbl (%r9,%r8,1),%r11d
   29875:	mov    $0x7,%edx
   2987a:	mov    %rbx,-0x8(%rbp)
   2987e:	mov    %r12,-0x10(%rbp)
   29882:	mov    %r13,-0x18(%rbp)
   29886:	mov    %r14,-0x20(%rbp)
   2988a:	mov    %r15,-0x28(%rbp)
   2988e:	mov    %r11,%r13
   29891:	mov    %rcx,%r14
   29894:	mov    %rdx,%r15
   29897:	mov    %rsi,%r12
   2989a:	mov    %r10,%r11
   2989d:	jmpq   29998 <png_do_write_interlace+0x248>
   298a2:	mov    %ebx,%ecx
   298a4:	imul   %r12,%rcx
   298a8:	add    %rsi,%rcx
   298ab:	cmp    %rcx,%r15
   298ae:	je     298cd <png_do_write_interlace+0x17d>
   298b0:	mov    %r15,%rdi
   298b3:	mov    %r12,%rdx
   298b6:	mov    %rsi,-0x40(%rbp)
   298ba:	mov    %rcx,%rsi
   298bd:	callq  54c0 <memcpy@plt>
   298c2:	lea    0x6aec(%rip),%rax        # 303b5 <png_pass_inc.54>
   298c9:	mov    -0x40(%rbp),%rsi
   298cd:	add    %r12,%r15
   298d0:	movzbl 0x0(%r13,%rax,1),%ecx
   298d6:	add    %ecx,%ebx
   298d8:	cmp    %r14d,%ebx
   298db:	jb     298a2 <png_do_write_interlace+0x152>
   298dd:	lea    0x6aca(%rip),%r8        # 303ae <png_pass_start.53>
   298e4:	mov    -0x30(%rbp),%rdi
   298e8:	mov    -0x38(%rbp),%r9
   298ec:	movzbl (%r9,%rax,1),%ecx
   298f1:	mov    (%rdi),%eax
   298f3:	lea    -0x1(%rcx,%rax,1),%eax
   298f7:	movzbl (%r9,%r8,1),%edx
   298fc:	sub    %edx,%eax
   298fe:	xor    %edx,%edx
   29900:	div    %ecx
   29902:	mov    %eax,(%rdi)
   29904:	movzbl 0x13(%rdi),%ecx
   29908:	cmp    $0x7,%cl
   2990b:	ja     299af <png_do_write_interlace+0x25f>
   29911:	mov    %eax,%eax
   29913:	imul   %rax,%rcx
   29917:	add    $0x7,%rcx
   2991b:	shr    $0x3,%rcx
   2991f:	jmpq   299b9 <png_do_write_interlace+0x269>
   29924:	mov    %r11b,(%r12)
   29928:	add    $0x1,%r12
   2992c:	mov    %r10,%r11
   2992f:	mov    %r15,%rdx
   29932:	movzbl (%r9,%rax,1),%ecx
   29937:	add    %ecx,%r13d
   2993a:	cmp    %r14d,%r13d
   2993d:	jb     299d3 <png_do_write_interlace+0x283>
   29943:	cmp    $0x6,%edx
   29946:	je     298ec <png_do_write_interlace+0x19c>
   29948:	mov    %r11b,(%r12)
   2994c:	jmp    298ec <png_do_write_interlace+0x19c>
   2994e:	mov    %r13,%rcx
   29951:	shr    %ecx
   29953:	mov    %ecx,%ecx
   29955:	movzbl (%rsi,%rcx,1),%ebx
   29959:	mov    %r13,%rcx
   2995c:	and    $0x1,%ecx
   2995f:	add    $0xffffffff,%ecx
   29962:	and    $0x4,%ecx
   29965:	shr    %cl,%ebx
   29967:	and    $0xf,%ebx
   2996a:	mov    %rdx,%rcx
   2996d:	shl    %cl,%ebx
   2996f:	or     %ebx,%r11d
   29972:	test   %ecx,%ecx
   29974:	je     29840 <png_do_write_interlace+0xf0>
   2997a:	lea    -0x4(%rcx),%edx
   2997d:	jmpq   2984e <png_do_write_interlace+0xfe>
   29982:	mov    %r11b,(%r12)
   29986:	add    $0x1,%r12
   2998a:	mov    %r10,%r11
   2998d:	mov    %r15,%rdx
   29990:	movzbl (%r9,%rax,1),%ecx
   29995:	add    %ecx,%r13d
   29998:	cmp    %r14d,%r13d
   2999b:	jb     29a06 <png_do_write_interlace+0x2b6>
   2999d:	cmp    $0x7,%edx
   299a0:	je     298ec <png_do_write_interlace+0x19c>
   299a6:	mov    %r11b,(%r12)
   299aa:	jmpq   298ec <png_do_write_interlace+0x19c>
   299af:	shr    $0x3,%rcx
   299b3:	mov    %eax,%eax
   299b5:	imul   %rax,%rcx
   299b9:	mov    %rcx,0x8(%rdi)
   299bd:	mov    -0x28(%rbp),%r15
   299c1:	mov    -0x20(%rbp),%r14
   299c5:	mov    -0x18(%rbp),%r13
   299c9:	mov    -0x10(%rbp),%r12
   299cd:	mov    -0x8(%rbp),%rbx
   299d1:	leaveq 
   299d2:	retq   
   299d3:	mov    %r13,%rcx
   299d6:	shr    $0x2,%ecx
   299d9:	mov    %ecx,%ecx
   299db:	movzbl (%rsi,%rcx,1),%ebx
   299df:	mov    %r13,%rcx
   299e2:	not    %ecx
   299e4:	and    $0x3,%ecx
   299e7:	add    %ecx,%ecx
   299e9:	shr    %cl,%ebx
   299eb:	and    $0x3,%ebx
   299ee:	mov    %rdx,%rcx
   299f1:	shl    %cl,%ebx
   299f3:	or     %ebx,%r11d
   299f6:	test   %ecx,%ecx
   299f8:	je     29924 <png_do_write_interlace+0x1d4>
   299fe:	lea    -0x2(%rcx),%edx
   29a01:	jmpq   29932 <png_do_write_interlace+0x1e2>
   29a06:	mov    %r13,%rcx
   29a09:	shr    $0x3,%ecx
   29a0c:	mov    %ecx,%ecx
   29a0e:	movzbl (%rsi,%rcx,1),%ebx
   29a12:	mov    %r13,%rcx
   29a15:	not    %ecx
   29a17:	and    $0x7,%ecx
   29a1a:	shr    %cl,%ebx
   29a1c:	and    $0x1,%ebx
   29a1f:	mov    %rdx,%rcx
   29a22:	shl    %cl,%ebx
   29a24:	or     %ebx,%r11d
   29a27:	test   %ecx,%ecx
   29a29:	je     29982 <png_do_write_interlace+0x232>
   29a2f:	lea    -0x1(%rcx),%edx
   29a32:	jmpq   29990 <png_do_write_interlace+0x240>
   29a37:	nopw   0x0(%rax,%rax,1)

0000000000029a40 <png_write_find_filter>:
   29a40:	push   %rbp
   29a41:	mov    %rsp,%rbp
   29a44:	sub    $0x40,%rsp
   29a48:	mov    %r15,-0x38(%rbp)
   29a4c:	mov    %r14,-0x30(%rbp)
   29a50:	mov    %rsi,-0x10(%rbp)
   29a54:	mov    %rbx,-0x18(%rbp)
   29a58:	mov    %r12,-0x20(%rbp)
   29a5c:	mov    %r13,-0x28(%rbp)
   29a60:	movzbl 0x13(%rsi),%r10d
   29a65:	movzbl 0x266(%rdi),%r9d
   29a6d:	mov    0x228(%rdi),%r8
   29a74:	mov    $0xfffffffffffffeff,%rax
   29a7b:	mov    0x8(%rsi),%rdx
   29a7f:	movabs $0x1fffffffffffffe,%rcx
   29a89:	cmp    %rcx,%rdx
   29a8c:	ja     29ab7 <png_write_find_filter+0x77>
   29a8e:	mov    %r9,%rcx
   29a91:	and    $0x8,%ecx
   29a94:	test   %ecx,%ecx
   29a96:	je     29abf <png_write_find_filter+0x7f>
   29a98:	cmp    $0x8,%r9b
   29a9c:	je     29abf <png_write_find_filter+0x7f>
   29a9e:	lea    0x1(%r8),%rcx
   29aa2:	xor    %eax,%eax
   29aa4:	mov    $0x100,%r11d
   29aaa:	mov    %r9,-0x40(%rbp)
   29aae:	mov    %r8,-0x8(%rbp)
   29ab2:	mov    %rax,%r8
   29ab5:	jmp    29b13 <png_write_find_filter+0xd3>
   29ab7:	mov    %r9,%rcx
   29aba:	neg    %ecx
   29abc:	and    %ecx,%r9d
   29abf:	add    $0x7,%r10d
   29ac3:	shr    $0x3,%r10d
   29ac7:	cmp    $0x10,%r9d
   29acb:	je     29b22 <png_write_find_filter+0xe2>
   29acd:	mov    %r9,%rcx
   29ad0:	and    $0x10,%ecx
   29ad3:	test   %ecx,%ecx
   29ad5:	jne    29bb9 <png_write_find_filter+0x179>
   29adb:	mov    %r12,%rcx
   29ade:	mov    %rdi,%r12
   29ae1:	mov    %r15,%r11
   29ae4:	mov    %r10,%r15
   29ae7:	mov    %r14,%r10
   29aea:	mov    %r9,%r14
   29aed:	mov    %r13,%r9
   29af0:	mov    %rax,%r13
   29af3:	jmp    29b5c <png_write_find_filter+0x11c>
   29af5:	movzbl (%rcx),%r9d
   29af9:	cmp    $0x7f,%r9b
   29afd:	jbe    29b05 <png_write_find_filter+0xc5>
   29aff:	neg    %r9d
   29b02:	add    %r11d,%r9d
   29b05:	add    $0x1,%rcx
   29b09:	add    $0x1,%r8
   29b0d:	mov    %r9d,%r9d
   29b10:	add    %r9,%rax
   29b13:	cmp    %r8,%rdx
   29b16:	ja     29af5 <png_write_find_filter+0xb5>
   29b18:	mov    -0x8(%rbp),%r8
   29b1c:	mov    -0x40(%rbp),%r9
   29b20:	jmp    29abf <png_write_find_filter+0x7f>
   29b22:	mov    %rax,%r13
   29b25:	mov    %r9,%r14
   29b28:	mov    %r10,%r15
   29b2b:	mov    %rdi,%r12
   29b2e:	mov    %r15,%rsi
   29b31:	mov    %rdx,%rbx
   29b34:	callq  2aa80 <png_setup_sub_row_only>
   29b39:	mov    0x230(%r12),%r8
   29b41:	mov    %rbx,%rdx
   29b44:	mov    -0x28(%rbp),%r9
   29b48:	mov    -0x20(%rbp),%rcx
   29b4c:	mov    -0x18(%rbp),%rbx
   29b50:	mov    -0x10(%rbp),%rsi
   29b54:	mov    -0x30(%rbp),%r10
   29b58:	mov    -0x38(%rbp),%r11
   29b5c:	cmp    $0x20,%r14d
   29b60:	je     29c13 <png_write_find_filter+0x1d3>
   29b66:	mov    %r14,%rax
   29b69:	and    $0x20,%eax
   29b6c:	test   %eax,%eax
   29b6e:	je     29c44 <png_write_find_filter+0x204>
   29b74:	mov    %r12,%rdi
   29b77:	mov    %rdx,%rsi
   29b7a:	mov    %r13,%rax
   29b7d:	mov    %rdx,-0x40(%rbp)
   29b81:	mov    %rax,%rdx
   29b84:	mov    %r8,%rbx
   29b87:	callq  2ab00 <png_setup_up_row>
   29b8c:	cmp    %r13,%rax
   29b8f:	jb     29ca4 <png_write_find_filter+0x264>
   29b95:	mov    %rbx,%r8
   29b98:	mov    -0x40(%rbp),%rdx
   29b9c:	mov    -0x28(%rbp),%r9
   29ba0:	mov    -0x20(%rbp),%rcx
   29ba4:	mov    -0x18(%rbp),%rbx
   29ba8:	mov    -0x10(%rbp),%rsi
   29bac:	mov    -0x30(%rbp),%r10
   29bb0:	mov    -0x38(%rbp),%r11
   29bb4:	jmpq   29c44 <png_write_find_filter+0x204>
   29bb9:	mov    %rdi,%rbx
   29bbc:	mov    %r10,%rsi
   29bbf:	mov    %rdx,%r11
   29bc2:	mov    %rax,%rcx
   29bc5:	mov    %r10,-0x40(%rbp)
   29bc9:	mov    %rdi,%r12
   29bcc:	mov    %rbx,%rdi
   29bcf:	mov    %r8,%rbx
   29bd2:	mov    %rax,%r13
   29bd5:	mov    %r9,%r14
   29bd8:	mov    %rdx,%r15
   29bdb:	mov    %r11,%rdx
   29bde:	callq  2a9b0 <png_setup_sub_row>
   29be3:	cmp    %r13,%rax
   29be6:	jb     29ce1 <png_write_find_filter+0x2a1>
   29bec:	mov    %r15,%rdx
   29bef:	mov    %rbx,%r8
   29bf2:	mov    -0x28(%rbp),%r9
   29bf6:	mov    -0x20(%rbp),%rcx
   29bfa:	mov    -0x18(%rbp),%rbx
   29bfe:	mov    -0x10(%rbp),%rsi
   29c02:	mov    -0x40(%rbp),%r15
   29c06:	mov    -0x30(%rbp),%r10
   29c0a:	mov    -0x38(%rbp),%r11
   29c0e:	jmpq   29b5c <png_write_find_filter+0x11c>
   29c13:	mov    %rdx,%rbx
   29c16:	mov    %r12,%rdi
   29c19:	mov    %rbx,%rsi
   29c1c:	callq  2ab90 <png_setup_up_row_only>
   29c21:	mov    0x230(%r12),%r8
   29c29:	mov    %rbx,%rdx
   29c2c:	mov    -0x28(%rbp),%r9
   29c30:	mov    -0x20(%rbp),%rcx
   29c34:	mov    -0x18(%rbp),%rbx
   29c38:	mov    -0x10(%rbp),%rsi
   29c3c:	mov    -0x30(%rbp),%r10
   29c40:	mov    -0x38(%rbp),%r11
   29c44:	cmp    $0x40,%r14d
   29c48:	je     29d21 <png_write_find_filter+0x2e1>
   29c4e:	mov    %r14,%rax
   29c51:	and    $0x40,%eax
   29c54:	test   %eax,%eax
   29c56:	je     29d52 <png_write_find_filter+0x312>
   29c5c:	mov    %r12,%rdi
   29c5f:	mov    %r15,%rsi
   29c62:	mov    %rdx,%rax
   29c65:	mov    %r13,%rcx
   29c68:	mov    %rdx,-0x40(%rbp)
   29c6c:	mov    %rax,%rdx
   29c6f:	mov    %r8,%rbx
   29c72:	callq  2abf0 <png_setup_avg_row>
   29c77:	cmp    %r13,%rax
   29c7a:	jb     29da7 <png_write_find_filter+0x367>
   29c80:	mov    %rbx,%r8
   29c83:	mov    -0x40(%rbp),%rdx
   29c87:	mov    -0x28(%rbp),%r9
   29c8b:	mov    -0x20(%rbp),%rcx
   29c8f:	mov    -0x18(%rbp),%rbx
   29c93:	mov    -0x10(%rbp),%rsi
   29c97:	mov    -0x30(%rbp),%r10
   29c9b:	mov    -0x38(%rbp),%r11
   29c9f:	jmpq   29d52 <png_write_find_filter+0x312>
   29ca4:	mov    0x230(%r12),%r8
   29cac:	mov    0x238(%r12),%rcx
   29cb4:	test   %rcx,%rcx
   29cb7:	jne    29de4 <png_write_find_filter+0x3a4>
   29cbd:	mov    %rax,%r13
   29cc0:	mov    -0x40(%rbp),%rdx
   29cc4:	mov    -0x28(%rbp),%r9
   29cc8:	mov    -0x20(%rbp),%rcx
   29ccc:	mov    -0x18(%rbp),%rbx
   29cd0:	mov    -0x10(%rbp),%rsi
   29cd4:	mov    -0x30(%rbp),%r10
   29cd8:	mov    -0x38(%rbp),%r11
   29cdc:	jmpq   29c44 <png_write_find_filter+0x204>
   29ce1:	mov    0x230(%r12),%r8
   29ce9:	mov    0x238(%r12),%rcx
   29cf1:	test   %rcx,%rcx
   29cf4:	jne    29e18 <png_write_find_filter+0x3d8>
   29cfa:	mov    %r15,%rdx
   29cfd:	mov    %rax,%r13
   29d00:	mov    -0x28(%rbp),%r9
   29d04:	mov    -0x20(%rbp),%rcx
   29d08:	mov    -0x18(%rbp),%rbx
   29d0c:	mov    -0x10(%rbp),%rsi
   29d10:	mov    -0x40(%rbp),%r15
   29d14:	mov    -0x30(%rbp),%r10
   29d18:	mov    -0x38(%rbp),%r11
   29d1c:	jmpq   29b5c <png_write_find_filter+0x11c>
   29d21:	mov    %r12,%rdi
   29d24:	mov    %r15,%rsi
   29d27:	mov    %rdx,%rbx
   29d2a:	callq  2ad00 <png_setup_avg_row_only>
   29d2f:	mov    0x230(%r12),%r8
   29d37:	mov    %rbx,%rdx
   29d3a:	mov    -0x28(%rbp),%r9
   29d3e:	mov    -0x20(%rbp),%rcx
   29d42:	mov    -0x18(%rbp),%rbx
   29d46:	mov    -0x10(%rbp),%rsi
   29d4a:	mov    -0x30(%rbp),%r10
   29d4e:	mov    -0x38(%rbp),%r11
   29d52:	cmp    $0x80,%r14d
   29d59:	je     29e4f <png_write_find_filter+0x40f>
   29d5f:	and    $0x80,%r14d
   29d66:	test   %r14d,%r14d
   29d69:	je     29e7c <png_write_find_filter+0x43c>
   29d6f:	mov    %rsi,%r14
   29d72:	mov    %r15,%rsi
   29d75:	mov    %r8,%r15
   29d78:	mov    %r12,%rdi
   29d7b:	mov    %r13,%rcx
   29d7e:	callq  2ada0 <png_setup_paeth_row>
   29d83:	cmp    %r13,%rax
   29d86:	jb     29e9d <png_write_find_filter+0x45d>
   29d8c:	mov    %r14,%rsi
   29d8f:	mov    %r15,%r8
   29d92:	mov    -0x28(%rbp),%r9
   29d96:	mov    -0x20(%rbp),%rcx
   29d9a:	mov    -0x30(%rbp),%r10
   29d9e:	mov    -0x38(%rbp),%r11
   29da2:	jmpq   29e7c <png_write_find_filter+0x43c>
   29da7:	mov    0x230(%r12),%r8
   29daf:	mov    0x238(%r12),%rcx
   29db7:	test   %rcx,%rcx
   29dba:	jne    29ec7 <png_write_find_filter+0x487>
   29dc0:	mov    %rax,%r13
   29dc3:	mov    -0x40(%rbp),%rdx
   29dc7:	mov    -0x28(%rbp),%r9
   29dcb:	mov    -0x20(%rbp),%rcx
   29dcf:	mov    -0x18(%rbp),%rbx
   29dd3:	mov    -0x10(%rbp),%rsi
   29dd7:	mov    -0x30(%rbp),%r10
   29ddb:	mov    -0x38(%rbp),%r11
   29ddf:	jmpq   29d52 <png_write_find_filter+0x312>
   29de4:	mov    %rcx,0x230(%r12)
   29dec:	mov    %r8,0x238(%r12)
   29df4:	mov    %rax,%r13
   29df7:	mov    -0x40(%rbp),%rdx
   29dfb:	mov    -0x28(%rbp),%r9
   29dff:	mov    -0x20(%rbp),%rcx
   29e03:	mov    -0x18(%rbp),%rbx
   29e07:	mov    -0x10(%rbp),%rsi
   29e0b:	mov    -0x30(%rbp),%r10
   29e0f:	mov    -0x38(%rbp),%r11
   29e13:	jmpq   29c44 <png_write_find_filter+0x204>
   29e18:	mov    %rcx,0x230(%r12)
   29e20:	mov    %r8,0x238(%r12)
   29e28:	mov    %r15,%rdx
   29e2b:	mov    %rax,%r13
   29e2e:	mov    -0x28(%rbp),%r9
   29e32:	mov    -0x20(%rbp),%rcx
   29e36:	mov    -0x18(%rbp),%rbx
   29e3a:	mov    -0x10(%rbp),%rsi
   29e3e:	mov    -0x40(%rbp),%r15
   29e42:	mov    -0x30(%rbp),%r10
   29e46:	mov    -0x38(%rbp),%r11
   29e4a:	jmpq   29b5c <png_write_find_filter+0x11c>
   29e4f:	mov    %rsi,%r13
   29e52:	mov    %r15,%rsi
   29e55:	mov    %r9,%r15
   29e58:	mov    %rcx,%r14
   29e5b:	mov    %r12,%rdi
   29e5e:	callq  2af60 <png_setup_paeth_row_only>
   29e63:	mov    0x230(%r12),%r8
   29e6b:	mov    %r14,%rcx
   29e6e:	mov    %r13,%rsi
   29e71:	mov    %r15,%r9
   29e74:	mov    -0x30(%rbp),%r10
   29e78:	mov    -0x38(%rbp),%r11
   29e7c:	mov    0x8(%rsi),%rdx
   29e80:	add    $0x1,%rdx
   29e84:	mov    %r8,%rsi
   29e87:	mov    %r12,%rdi
   29e8a:	mov    %rcx,%r12
   29e8d:	mov    %r9,%r13
   29e90:	mov    %r10,%r14
   29e93:	mov    %r11,%r15
   29e96:	callq  2a930 <png_write_filtered_row>
   29e9b:	leaveq 
   29e9c:	retq   
   29e9d:	mov    0x230(%r12),%r8
   29ea5:	mov    0x238(%r12),%rax
   29ead:	test   %rax,%rax
   29eb0:	jne    29efb <png_write_find_filter+0x4bb>
   29eb2:	mov    %r14,%rsi
   29eb5:	mov    -0x28(%rbp),%r9
   29eb9:	mov    -0x20(%rbp),%rcx
   29ebd:	mov    -0x30(%rbp),%r10
   29ec1:	mov    -0x38(%rbp),%r11
   29ec5:	jmp    29e7c <png_write_find_filter+0x43c>
   29ec7:	mov    %rcx,0x230(%r12)
   29ecf:	mov    %r8,0x238(%r12)
   29ed7:	mov    %rax,%r13
   29eda:	mov    -0x40(%rbp),%rdx
   29ede:	mov    -0x28(%rbp),%r9
   29ee2:	mov    -0x20(%rbp),%rcx
   29ee6:	mov    -0x18(%rbp),%rbx
   29eea:	mov    -0x10(%rbp),%rsi
   29eee:	mov    -0x30(%rbp),%r10
   29ef2:	mov    -0x38(%rbp),%r11
   29ef6:	jmpq   29d52 <png_write_find_filter+0x312>
   29efb:	mov    %rax,0x230(%r12)
   29f03:	mov    %r8,0x238(%r12)
   29f0b:	mov    %r14,%rsi
   29f0e:	mov    -0x28(%rbp),%r9
   29f12:	mov    -0x20(%rbp),%rcx
   29f16:	mov    -0x30(%rbp),%r10
   29f1a:	mov    -0x38(%rbp),%r11
   29f1e:	jmpq   29e7c <png_write_find_filter+0x43c>
   29f23:	data16 nopw %cs:0x0(%rax,%rax,1)
   29f2e:	xchg   %ax,%ax

0000000000029f30 <png_write_chunk_header>:
   29f30:	push   %rbp
   29f31:	mov    %rsp,%rbp
   29f34:	sub    $0x20,%rsp
   29f38:	test   %rdi,%rdi
   29f3b:	jne    29f3f <png_write_chunk_header+0xf>
   29f3d:	leaveq 
   29f3e:	retq   
   29f3f:	movl   $0x22,0x46c(%rdi)
   29f49:	lea    -0x18(%rbp),%rax
   29f4d:	mov    %r14,-0x8(%rbp)
   29f51:	mov    %r15,-0x10(%rbp)
   29f55:	mov    %rdi,%r14
   29f58:	mov    %rax,%rdi
   29f5b:	mov    %rsi,%r15
   29f5e:	mov    %rdx,%rsi
   29f61:	callq  5500 <png_save_uint_32@plt>
   29f66:	lea    -0x14(%rbp),%rdi
   29f6a:	mov    %r15,%rsi
   29f6d:	callq  5500 <png_save_uint_32@plt>
   29f72:	mov    $0x8,%edx
   29f77:	mov    %r14,%rdi
   29f7a:	lea    -0x18(%rbp),%rsi
   29f7e:	callq  23e40 <png_write_data>
   29f83:	mov    %r15d,0x218(%r14)
   29f8a:	mov    %r14,%rdi
   29f8d:	callq  6d80 <png_reset_crc>
   29f92:	mov    $0x4,%edx
   29f97:	mov    %r14,%rdi
   29f9a:	lea    -0x14(%rbp),%rsi
   29f9e:	callq  6db0 <png_calculate_crc>
   29fa3:	movl   $0x42,0x46c(%r14)
   29fae:	mov    -0x10(%rbp),%r15
   29fb2:	mov    -0x8(%rbp),%r14
   29fb6:	leaveq 
   29fb7:	retq   
   29fb8:	nopl   0x0(%rax,%rax,1)

0000000000029fc0 <png_write_complete_chunk>:
   29fc0:	push   %rbp
   29fc1:	mov    %rsp,%rbp
   29fc4:	sub    $0x20,%rsp
   29fc8:	test   %rdi,%rdi
   29fcb:	jne    29fcf <png_write_complete_chunk+0xf>
   29fcd:	leaveq 
   29fce:	retq   
   29fcf:	cmp    $0x7fffffff,%rcx
   29fd6:	ja     2a022 <png_write_complete_chunk+0x62>
   29fd8:	mov    %rdi,%rax
   29fdb:	mov    %rcx,%r8
   29fde:	mov    %r13,-0x8(%rbp)
   29fe2:	mov    %r14,-0x10(%rbp)
   29fe6:	mov    %r15,-0x18(%rbp)
   29fea:	mov    %rdi,%r13
   29fed:	mov    %rax,%rdi
   29ff0:	mov    %rcx,%r14
   29ff3:	mov    %rdx,%r15
   29ff6:	mov    %r8,%rdx
   29ff9:	callq  29f30 <png_write_chunk_header>
   29ffe:	mov    %r14,%rdx
   2a001:	mov    %r15,%rsi
   2a004:	mov    %r13,%rdi
   2a007:	callq  5100 <png_write_chunk_data@plt>
   2a00c:	mov    %r13,%rdi
   2a00f:	callq  5480 <png_write_chunk_end@plt>
   2a014:	mov    -0x18(%rbp),%r15
   2a018:	mov    -0x10(%rbp),%r14
   2a01c:	mov    -0x8(%rbp),%r13
   2a020:	leaveq 
   2a021:	retq   
   2a022:	lea    0x6393(%rip),%rsi        # 303bc <png_pass_inc.54+0x7>
   2a029:	callq  5470 <png_error@plt>
   2a02e:	xchg   %ax,%ax

000000000002a030 <png_image_size>:
   2a030:	push   %rbp
   2a031:	mov    %rsp,%rbp
   2a034:	sub    $0x30,%rsp
   2a038:	mov    0x1fc(%rdi),%eax
   2a03e:	mov    $0xffffffff,%ecx
   2a043:	mov    0x208(%rdi),%rdx
   2a04a:	cmp    $0x7fff,%rdx
   2a051:	jbe    2a058 <png_image_size+0x28>
   2a053:	mov    %rcx,%rax
   2a056:	leaveq 
   2a057:	retq   
   2a058:	cmp    $0x7fff,%eax
   2a05d:	jbe    2a064 <png_image_size+0x34>
   2a05f:	mov    %rcx,%rax
   2a062:	leaveq 
   2a063:	retq   
   2a064:	movzbl 0x264(%rdi),%ecx
   2a06b:	test   %cl,%cl
   2a06d:	jne    2a079 <png_image_size+0x49>
   2a06f:	lea    0x1(%rdx),%rcx
   2a073:	imul   %rcx,%rax
   2a077:	leaveq 
   2a078:	retq   
   2a079:	mov    0x1f8(%rdi),%r8d
   2a080:	movzbl 0x26a(%rdi),%edi
   2a087:	mov    %rdi,%r9
   2a08a:	shr    $0x3,%r9
   2a08e:	xor    %ecx,%ecx
   2a090:	mov    $0x1,%edx
   2a095:	mov    $0x3,%esi
   2a09a:	mov    $0x7,%r10d
   2a0a0:	mov    %rbx,-0x8(%rbp)
   2a0a4:	mov    %r12,-0x10(%rbp)
   2a0a8:	mov    %r13,-0x18(%rbp)
   2a0ac:	mov    %r14,-0x20(%rbp)
   2a0b0:	mov    %r15,-0x28(%rbp)
   2a0b4:	mov    %rcx,%r11
   2a0b7:	mov    %rdx,%r14
   2a0ba:	mov    %r11,%rdx
   2a0bd:	mov    %rdx,%rbx
   2a0c0:	jmp    2a10a <png_image_size+0xda>
   2a0c2:	sub    %edx,%r12d
   2a0c5:	sar    %r12d
   2a0c8:	mov    $0x1,%r15d
   2a0ce:	shl    %cl,%r15d
   2a0d1:	add    $0xffffffff,%r15d
   2a0d5:	mov    %rdx,%rcx
   2a0d8:	sar    %ecx
   2a0da:	neg    %ecx
   2a0dc:	add    %esi,%ecx
   2a0de:	not    %edx
   2a0e0:	and    $0x1,%edx
   2a0e3:	shl    %cl,%edx
   2a0e5:	and    $0x7,%edx
   2a0e8:	sub    %edx,%r15d
   2a0eb:	lea    (%rax,%r15,1),%edx
   2a0ef:	mov    %r12,%rcx
   2a0f2:	shr    %cl,%edx
   2a0f4:	mov    %edx,%ecx
   2a0f6:	lea    0x1(%r14),%rdx
   2a0fa:	imul   %rdx,%rcx
   2a0fe:	add    %rcx,%r11
   2a101:	mov    %r13,%rdx
   2a104:	mov    $0x1,%r14d
   2a10a:	cmp    $0x6,%edx
   2a10d:	jle    2a128 <png_image_size+0xf8>
   2a10f:	mov    %r11,%rax
   2a112:	mov    -0x28(%rbp),%r15
   2a116:	mov    -0x20(%rbp),%r14
   2a11a:	mov    -0x18(%rbp),%r13
   2a11e:	mov    -0x10(%rbp),%r12
   2a122:	mov    -0x8(%rbp),%rbx
   2a126:	leaveq 
   2a127:	retq   
   2a128:	cmp    $0x1,%edx
   2a12b:	jg     2a135 <png_image_size+0x105>
   2a12d:	mov    %rsi,%rcx
   2a130:	mov    %rbx,%r12
   2a133:	jmp    2a13f <png_image_size+0x10f>
   2a135:	mov    %r10,%rcx
   2a138:	sub    %edx,%ecx
   2a13a:	sar    %ecx
   2a13c:	mov    %r14,%r12
   2a13f:	test   %r12,%r12
   2a142:	jne    2a149 <png_image_size+0x119>
   2a144:	mov    %rsi,%r12
   2a147:	jmp    2a152 <png_image_size+0x122>
   2a149:	mov    %r10,%r12
   2a14c:	sub    %edx,%r12d
   2a14f:	sar    %r12d
   2a152:	shl    %cl,%r14d
   2a155:	lea    -0x1(%r14),%r15d
   2a159:	lea    0x1(%rdx),%r13d
   2a15d:	mov    %r13,%rcx
   2a160:	sar    %ecx
   2a162:	neg    %ecx
   2a164:	add    %esi,%ecx
   2a166:	mov    %rdx,%r14
   2a169:	and    $0x1,%r14d
   2a16d:	shl    %cl,%r14d
   2a170:	and    $0x7,%r14d
   2a174:	sub    %r14d,%r15d
   2a177:	lea    (%r15,%r8,1),%r14d
   2a17b:	mov    %r12,%rcx
   2a17e:	shr    %cl,%r14d
   2a181:	test   %r14d,%r14d
   2a184:	jne    2a194 <png_image_size+0x164>
   2a186:	mov    %r13,%rdx
   2a189:	mov    $0x1,%r14d
   2a18f:	jmpq   2a10a <png_image_size+0xda>
   2a194:	cmp    $0x7,%dil
   2a198:	ja     2a1ab <png_image_size+0x17b>
   2a19a:	mov    %r14d,%ecx
   2a19d:	imul   %rdi,%rcx
   2a1a1:	lea    0x7(%rcx),%r14
   2a1a5:	shr    $0x3,%r14
   2a1a9:	jmp    2a1b5 <png_image_size+0x185>
   2a1ab:	mov    %r14d,%ecx
   2a1ae:	mov    %r9,%r14
   2a1b1:	imul   %rcx,%r14
   2a1b5:	cmp    $0x2,%edx
   2a1b8:	jg     2a1c8 <png_image_size+0x198>
   2a1ba:	mov    $0x8,%r12d
   2a1c0:	mov    %rsi,%rcx
   2a1c3:	mov    %rbx,%r15
   2a1c6:	jmp    2a1db <png_image_size+0x1ab>
   2a1c8:	mov    $0x8,%r12d
   2a1ce:	mov    %r12,%rcx
   2a1d1:	sub    %edx,%ecx
   2a1d3:	sar    %ecx
   2a1d5:	mov    $0x1,%r15d
   2a1db:	test   %r15,%r15
   2a1de:	jne    2a0c2 <png_image_size+0x92>
   2a1e4:	mov    %rsi,%r12
   2a1e7:	jmpq   2a0c8 <png_image_size+0x98>
   2a1ec:	nopl   0x0(%rax)

000000000002a1f0 <optimize_cmf>:
   2a1f0:	push   %rbp
   2a1f1:	mov    %rsp,%rbp
   2a1f4:	cmp    $0x4000,%rsi
   2a1fb:	jbe    2a1ff <optimize_cmf+0xf>
   2a1fd:	leaveq 
   2a1fe:	retq   
   2a1ff:	movzbl (%rdi),%edx
   2a202:	mov    %rdx,%rax
   2a205:	and    $0xf,%eax
   2a208:	cmp    $0x8,%eax
   2a20b:	je     2a20f <optimize_cmf+0x1f>
   2a20d:	leaveq 
   2a20e:	retq   
   2a20f:	mov    %rdx,%rax
   2a212:	and    $0xf0,%eax
   2a217:	cmp    $0x70,%eax
   2a21a:	jbe    2a21e <optimize_cmf+0x2e>
   2a21c:	leaveq 
   2a21d:	retq   
   2a21e:	mov    $0x1,%eax
   2a223:	shr    $0x4,%edx
   2a226:	lea    0x7(%rdx),%ecx
   2a229:	shl    %cl,%eax
   2a22b:	mov    %eax,%ecx
   2a22d:	cmp    %rcx,%rsi
   2a230:	jbe    2a23d <optimize_cmf+0x4d>
   2a232:	leaveq 
   2a233:	retq   
   2a234:	shr    %eax
   2a236:	mov    %eax,%ecx
   2a238:	cmp    %rsi,%rcx
   2a23b:	jb     2a244 <optimize_cmf+0x54>
   2a23d:	add    $0xffffffff,%edx
   2a240:	test   %edx,%edx
   2a242:	jne    2a234 <optimize_cmf+0x44>
   2a244:	shl    $0x4,%edx
   2a247:	lea    0x8(%rdx),%eax
   2a24a:	mov    %al,(%rdi)
   2a24c:	movzbl 0x1(%rdi),%ecx
   2a250:	and    $0xe0,%ecx
   2a256:	shl    $0x8,%eax
   2a259:	lea    (%rcx,%rax,1),%esi
   2a25c:	lea    0x1(%rsi),%edx
   2a25f:	mov    $0x42108421,%eax
   2a264:	mul    %edx
   2a266:	shr    $0x3,%edx
   2a269:	mov    %rdx,%rax
   2a26c:	shl    $0x5,%eax
   2a26f:	sub    %eax,%edx
   2a271:	add    %esi,%edx
   2a273:	mov    $0x1f,%eax
   2a278:	sub    %edx,%eax
   2a27a:	add    %ecx,%eax
   2a27c:	mov    %al,0x1(%rdi)
   2a27f:	leaveq 
   2a280:	retq   
   2a281:	data16 nopw %cs:0x0(%rax,%rax,1)
   2a28c:	nopl   0x0(%rax)

000000000002a290 <png_deflate_claim>:
   2a290:	push   %rbp
   2a291:	mov    %rsp,%rbp
   2a294:	sub    $0x80,%rsp
   2a29b:	mov    %r15,-0x30(%rbp)
   2a29f:	mov    %r14,-0x28(%rbp)
   2a2a3:	mov    0x138(%rdi),%ecx
   2a2a9:	test   %ecx,%ecx
   2a2ab:	jne    2a3a3 <png_deflate_claim+0x113>
   2a2b1:	mov    %rdx,%r11
   2a2b4:	mov    %rdi,%r15
   2a2b7:	movslq 0x1bc(%r15),%r10
   2a2be:	movslq 0x1c0(%r15),%rdx
   2a2c5:	movslq 0x1c4(%r15),%r14
   2a2cc:	movslq 0x1c8(%r15),%r8
   2a2d3:	xor    %r9d,%r9d
   2a2d6:	mov    $0x1,%eax
   2a2db:	cmp    $0x49444154,%esi
   2a2e1:	je     2a44e <png_deflate_claim+0x1be>
   2a2e7:	movslq 0x1d0(%r15),%r10
   2a2ee:	movslq 0x1d4(%r15),%rdx
   2a2f5:	movslq 0x1d8(%r15),%r14
   2a2fc:	movslq 0x1dc(%r15),%r8
   2a303:	movslq 0x1e0(%r15),%r9
   2a30a:	cmp    $0x4000,%r11
   2a311:	jbe    2a47a <png_deflate_claim+0x1ea>
   2a317:	lea    0x140(%r15),%rdi
   2a31e:	mov    0x130(%r15),%eax
   2a325:	and    $0x2,%eax
   2a328:	test   %eax,%eax
   2a32a:	je     2a4cd <png_deflate_claim+0x23d>
   2a330:	cmp    0x1e4(%r15),%r10d
   2a337:	jne    2a361 <png_deflate_claim+0xd1>
   2a339:	cmp    0x1e8(%r15),%edx
   2a340:	jne    2a361 <png_deflate_claim+0xd1>
   2a342:	cmp    0x1ec(%r15),%r14d
   2a349:	jne    2a361 <png_deflate_claim+0xd1>
   2a34b:	cmp    0x1f0(%r15),%r8d
   2a352:	jne    2a361 <png_deflate_claim+0xd1>
   2a354:	cmp    0x1f4(%r15),%r9d
   2a35b:	je     2a4cd <png_deflate_claim+0x23d>
   2a361:	mov    %rdi,%rax
   2a364:	mov    %rsi,-0x8(%rbp)
   2a368:	mov    %r8,-0x38(%rbp)
   2a36c:	mov    %r9,-0x40(%rbp)
   2a370:	mov    %rbx,-0x10(%rbp)
   2a374:	mov    %r12,-0x18(%rbp)
   2a378:	mov    %r13,-0x20(%rbp)
   2a37c:	mov    %rdx,%rbx
   2a37f:	mov    %r10,%r12
   2a382:	mov    %rdi,%r13
   2a385:	mov    %rax,%rdi
   2a388:	callq  5670 <deflateEnd@plt>
   2a38d:	test   %eax,%eax
   2a38f:	jne    2a48c <png_deflate_claim+0x1fc>
   2a395:	mov    %rbx,%rdx
   2a398:	mov    %r13,%rdi
   2a39b:	mov    %r12,%r10
   2a39e:	jmpq   2a4a4 <png_deflate_claim+0x214>
   2a3a3:	mov    %rsi,%rax
   2a3a6:	shr    $0x18,%eax
   2a3a9:	mov    %al,-0x80(%rbp)
   2a3ac:	mov    %rsi,%rax
   2a3af:	shr    $0x10,%eax
   2a3b2:	mov    %al,-0x7f(%rbp)
   2a3b5:	mov    %rsi,%rax
   2a3b8:	shr    $0x8,%eax
   2a3bb:	mov    %al,-0x7e(%rbp)
   2a3be:	mov    %sil,-0x7d(%rbp)
   2a3c2:	movb   $0x3a,-0x7c(%rbp)
   2a3c6:	movb   $0x20,-0x7b(%rbp)
   2a3ca:	mov    %rcx,%rax
   2a3cd:	shr    $0x18,%eax
   2a3d0:	mov    %al,-0x7a(%rbp)
   2a3d3:	mov    %rcx,%rax
   2a3d6:	shr    $0x10,%eax
   2a3d9:	mov    %al,-0x79(%rbp)
   2a3dc:	mov    %rcx,%rax
   2a3df:	shr    $0x8,%eax
   2a3e2:	mov    %al,-0x78(%rbp)
   2a3e5:	mov    %cl,-0x77(%rbp)
   2a3e8:	lea    -0x80(%rbp),%rax
   2a3ec:	mov    $0x40,%r8d
   2a3f2:	mov    $0xa,%r9d
   2a3f8:	lea    0x5fd8(%rip),%rcx        # 303d7 <png_pass_inc.54+0x22>
   2a3ff:	mov    %rsi,-0x40(%rbp)
   2a403:	mov    %rdx,-0x38(%rbp)
   2a407:	mov    %r9,%rdx
   2a40a:	mov    %r8,%rsi
   2a40d:	mov    %rdi,%r15
   2a410:	mov    %rax,%rdi
   2a413:	callq  ad20 <png_safecat>
   2a418:	mov    %r15,%rdi
   2a41b:	lea    -0x80(%rbp),%rsi
   2a41f:	callq  5390 <png_warning@plt>
   2a424:	mov    0x138(%r15),%eax
   2a42b:	cmp    $0x49444154,%eax
   2a430:	je     2a54d <png_deflate_claim+0x2bd>
   2a436:	movl   $0x0,0x138(%r15)
   2a441:	mov    -0x38(%rbp),%r11
   2a445:	mov    -0x40(%rbp),%rsi
   2a449:	jmpq   2a2b7 <png_deflate_claim+0x27>
   2a44e:	mov    0x130(%r15),%eax
   2a455:	and    $0x1,%eax
   2a458:	test   %eax,%eax
   2a45a:	jne    2a568 <png_deflate_claim+0x2d8>
   2a460:	movzbl 0x266(%r15),%eax
   2a468:	cmp    $0x8,%al
   2a46a:	jne    2a579 <png_deflate_claim+0x2e9>
   2a470:	mov    $0x1,%eax
   2a475:	jmpq   2a30a <png_deflate_claim+0x7a>
   2a47a:	lea    0x1f(%r14),%ecx
   2a47e:	shl    %cl,%eax
   2a480:	lea    0x106(%r11),%rcx
   2a487:	jmpq   2a58c <png_deflate_claim+0x2fc>
   2a48c:	lea    0x5f62(%rip),%rsi        # 303f5 <png_pass_inc.54+0x40>
   2a493:	mov    %r15,%rdi
   2a496:	callq  5390 <png_warning@plt>
   2a49b:	mov    %rbx,%rdx
   2a49e:	mov    %r13,%rdi
   2a4a1:	mov    %r12,%r10
   2a4a4:	mov    0x130(%r15),%eax
   2a4ab:	and    $0xfffffffd,%eax
   2a4ae:	mov    %eax,0x130(%r15)
   2a4b5:	mov    -0x20(%rbp),%r13
   2a4b9:	mov    -0x18(%rbp),%r12
   2a4bd:	mov    -0x10(%rbp),%rbx
   2a4c1:	mov    -0x40(%rbp),%r9
   2a4c5:	mov    -0x38(%rbp),%r8
   2a4c9:	mov    -0x8(%rbp),%rsi
   2a4cd:	movq   $0x0,0x140(%r15)
   2a4d8:	movl   $0x0,0x148(%r15)
   2a4e3:	movq   $0x0,0x158(%r15)
   2a4ee:	movl   $0x0,0x160(%r15)
   2a4f9:	mov    0x130(%r15),%eax
   2a500:	and    $0x2,%eax
   2a503:	test   %eax,%eax
   2a505:	jne    2a598 <png_deflate_claim+0x308>
   2a50b:	sub    $0x10,%rsp
   2a50f:	lea    0x5efb(%rip),%rax        # 30411 <png_pass_inc.54+0x5c>
   2a516:	mov    %rax,(%rsp)
   2a51a:	mov    %r14,%rcx
   2a51d:	mov    %rsi,%r14
   2a520:	mov    %r10,%rsi
   2a523:	movl   $0x70,0x8(%rsp)
   2a52b:	callq  53b0 <deflateInit2_@plt>
   2a530:	add    $0x10,%rsp
   2a534:	test   %eax,%eax
   2a536:	jne    2a5a0 <png_deflate_claim+0x310>
   2a538:	mov    0x130(%r15),%eax
   2a53f:	or     $0x2,%eax
   2a542:	mov    %eax,0x130(%r15)
   2a549:	xor    %eax,%eax
   2a54b:	jmp    2a5a0 <png_deflate_claim+0x310>
   2a54d:	lea    0x5e92(%rip),%rax        # 303e6 <png_pass_inc.54+0x31>
   2a554:	mov    %rax,0x170(%r15)
   2a55b:	mov    $0xfffffffffffffffe,%rax
   2a562:	mov    -0x30(%rbp),%r15
   2a566:	leaveq 
   2a567:	retq   
   2a568:	movslq 0x1cc(%r15),%r9
   2a56f:	mov    $0x1,%eax
   2a574:	jmpq   2a30a <png_deflate_claim+0x7a>
   2a579:	mov    $0x1,%eax
   2a57e:	mov    %rax,%r9
   2a581:	jmpq   2a30a <png_deflate_claim+0x7a>
   2a586:	shr    %eax
   2a588:	add    $0xffffffff,%r14d
   2a58c:	mov    %eax,%edi
   2a58e:	cmp    %rcx,%rdi
   2a591:	jae    2a586 <png_deflate_claim+0x2f6>
   2a593:	jmpq   2a317 <png_deflate_claim+0x87>
   2a598:	mov    %rsi,%r14
   2a59b:	callq  52e0 <deflateReset@plt>
   2a5a0:	test   %eax,%eax
   2a5a2:	je     2a5bf <png_deflate_claim+0x32f>
   2a5a4:	mov    %r15,%rdi
   2a5a7:	mov    %rax,%r15
   2a5aa:	mov    %r15,%rsi
   2a5ad:	callq  6910 <png_zstream_error>
   2a5b2:	mov    %r15,%rax
   2a5b5:	mov    -0x28(%rbp),%r14
   2a5b9:	mov    -0x30(%rbp),%r15
   2a5bd:	leaveq 
   2a5be:	retq   
   2a5bf:	mov    %r14d,0x138(%r15)
   2a5c6:	mov    -0x28(%rbp),%r14
   2a5ca:	xor    %eax,%eax
   2a5cc:	mov    -0x30(%rbp),%r15
   2a5d0:	leaveq 
   2a5d1:	retq   
   2a5d2:	data16 nopw %cs:0x0(%rax,%rax,1)
   2a5dd:	nopl   (%rax)

000000000002a5e0 <png_text_compress_init>:
   2a5e0:	push   %rbp
   2a5e1:	mov    %rsp,%rbp
   2a5e4:	mov    %rsi,(%rdi)
   2a5e7:	mov    %rdx,0x8(%rdi)
   2a5eb:	movl   $0x0,0x10(%rdi)
   2a5f2:	leaveq 
   2a5f3:	retq   
   2a5f4:	data16 nopw %cs:0x0(%rax,%rax,1)
   2a5ff:	nop

000000000002a600 <png_text_compress>:
   2a600:	push   %rbp
   2a601:	mov    %rsp,%rbp
   2a604:	sub    $0x50,%rsp
   2a608:	mov    %r15,-0x38(%rbp)
   2a60c:	mov    %rdi,-0x50(%rbp)
   2a610:	mov    %rcx,-0x48(%rbp)
   2a614:	mov    %rdx,%r15
   2a617:	mov    0x8(%r15),%rdx
   2a61b:	callq  2a290 <png_deflate_claim>
   2a620:	test   %eax,%eax
   2a622:	je     2a62a <png_text_compress+0x2a>
   2a624:	mov    -0x38(%rbp),%r15
   2a628:	leaveq 
   2a629:	retq   
   2a62a:	mov    0x8(%r15),%r11
   2a62e:	mov    (%r15),%rax
   2a631:	mov    -0x50(%rbp),%rdi
   2a635:	mov    %rax,0x140(%rdi)
   2a63c:	movl   $0x0,0x148(%rdi)
   2a646:	lea    0x14(%r15),%rax
   2a64a:	mov    %rax,-0x8(%rbp)
   2a64e:	mov    %rax,0x158(%rdi)
   2a655:	movl   $0x400,0x160(%rdi)
   2a65f:	xor    %esi,%esi
   2a661:	lea    0x140(%rdi),%r9
   2a668:	mov    %r9,-0x40(%rbp)
   2a66c:	lea    0x1b0(%rdi),%r10
   2a673:	mov    $0xffffffff,%eax
   2a678:	mov    $0x4,%ecx
   2a67d:	mov    $0x400,%edx
   2a682:	mov    $0xfffffffe,%r8d
   2a688:	mov    %r15,-0x10(%rbp)
   2a68c:	mov    %rbx,-0x18(%rbp)
   2a690:	mov    %r12,-0x20(%rbp)
   2a694:	mov    %r13,-0x28(%rbp)
   2a698:	mov    %r14,-0x30(%rbp)
   2a69c:	mov    %rdx,%rbx
   2a69f:	mov    %r9,%r12
   2a6a2:	mov    %r10,%r13
   2a6a5:	mov    %r11,%r14
   2a6a8:	mov    %rdi,%r15
   2a6ab:	mov    -0x48(%rbp),%rdi
   2a6af:	jmp    2a6c7 <png_text_compress+0xc7>
   2a6b1:	mov    $0xffffffff,%eax
   2a6b6:	mov    $0xfffffffe,%r8d
   2a6bc:	mov    $0x4,%ecx
   2a6c1:	xor    %esi,%esi
   2a6c3:	mov    -0x48(%rbp),%rdi
   2a6c7:	cmp    %r8,%r14
   2a6ca:	ja     2a6cf <png_text_compress+0xcf>
   2a6cc:	mov    %r14,%rax
   2a6cf:	mov    %eax,0x148(%r15)
   2a6d6:	mov    %eax,%eax
   2a6d8:	mov    %r14,%rdx
   2a6db:	sub    %rax,%rdx
   2a6de:	mov    0x160(%r15),%r8d
   2a6e5:	test   %r8d,%r8d
   2a6e8:	je     2a758 <png_text_compress+0x158>
   2a6ea:	cmp    %rax,%r14
   2a6ed:	jne    2a6f2 <png_text_compress+0xf2>
   2a6ef:	mov    %rcx,%rsi
   2a6f2:	mov    %rdx,%r14
   2a6f5:	mov    %r12,%rdi
   2a6f8:	callq  5330 <deflate@plt>
   2a6fd:	mov    0x148(%r15),%ecx
   2a704:	movl   $0x0,0x148(%r15)
   2a70f:	add    %rcx,%r14
   2a712:	test   %eax,%eax
   2a714:	je     2a6b1 <png_text_compress+0xb1>
   2a716:	mov    %rax,%r12
   2a719:	xor    %esi,%esi
   2a71b:	mov    -0x48(%rbp),%rdi
   2a71f:	mov    0x160(%r15),%eax
   2a726:	movl   $0x0,0x160(%r15)
   2a731:	sub    %eax,%ebx
   2a733:	mov    -0x10(%rbp),%r13
   2a737:	mov    %ebx,0x10(%r13)
   2a73b:	lea    (%rdi,%rbx,1),%eax
   2a73e:	cmp    $0x7ffffffe,%eax
   2a743:	ja     2a791 <png_text_compress+0x191>
   2a745:	mov    %rsi,%rbx
   2a748:	mov    %r15,%rdi
   2a74b:	mov    %r12,%rsi
   2a74e:	callq  6910 <png_zstream_error>
   2a753:	mov    %rbx,%rsi
   2a756:	jmp    2a7a6 <png_text_compress+0x1a6>
   2a758:	lea    (%rbx,%rdi,1),%r8d
   2a75c:	cmp    $0x7fffffff,%r8d
   2a763:	ja     2a7d0 <png_text_compress+0x1d0>
   2a765:	mov    0x0(%r13),%rdi
   2a769:	test   %rdi,%rdi
   2a76c:	je     2a7df <png_text_compress+0x1df>
   2a76e:	mov    %rdi,%r13
   2a771:	lea    0x8(%r13),%rdi
   2a775:	mov    %rdi,0x158(%r15)
   2a77c:	mov    0x1b8(%r15),%edi
   2a783:	mov    %edi,0x160(%r15)
   2a78a:	add    %edi,%ebx
   2a78c:	jmpq   2a6ea <png_text_compress+0xea>
   2a791:	lea    0x5c80(%rip),%rax        # 30418 <png_pass_inc.54+0x63>
   2a798:	mov    %rax,0x170(%r15)
   2a79f:	mov    $0xfffffffffffffffc,%r12
   2a7a6:	movl   $0x0,0x138(%r15)
   2a7b1:	cmp    $0x1,%r12d
   2a7b5:	je     2a829 <png_text_compress+0x229>
   2a7b7:	mov    %r12,%rax
   2a7ba:	mov    -0x30(%rbp),%r14
   2a7be:	mov    -0x28(%rbp),%r13
   2a7c2:	mov    -0x20(%rbp),%r12
   2a7c6:	mov    -0x18(%rbp),%rbx
   2a7ca:	mov    -0x38(%rbp),%r15
   2a7ce:	leaveq 
   2a7cf:	retq   
   2a7d0:	mov    %rdx,%r14
   2a7d3:	mov    $0xfffffffffffffffc,%r12
   2a7da:	jmpq   2a71f <png_text_compress+0x11f>
   2a7df:	mov    0x1b8(%r15),%ecx
   2a7e6:	lea    0x8(%rcx),%rsi
   2a7ea:	mov    %r15,%rdi
   2a7ed:	mov    %rdx,-0x50(%rbp)
   2a7f1:	mov    %r13,%r12
   2a7f4:	mov    %rax,%r13
   2a7f7:	callq  c940 <png_malloc_base>
   2a7fc:	test   %rax,%rax
   2a7ff:	je     2a849 <png_text_compress+0x249>
   2a801:	movq   $0x0,(%rax)
   2a808:	mov    %rax,(%r12)
   2a80c:	mov    %r13,%rcx
   2a80f:	mov    %rax,%r13
   2a812:	mov    %rcx,%rax
   2a815:	mov    $0x4,%ecx
   2a81a:	xor    %esi,%esi
   2a81c:	mov    -0x50(%rbp),%rdx
   2a820:	mov    -0x40(%rbp),%r12
   2a824:	jmpq   2a771 <png_text_compress+0x171>
   2a829:	test   %r14,%r14
   2a82c:	je     2a85f <png_text_compress+0x25f>
   2a82e:	mov    $0x1,%eax
   2a833:	mov    -0x30(%rbp),%r14
   2a837:	mov    -0x28(%rbp),%r13
   2a83b:	mov    -0x20(%rbp),%r12
   2a83f:	mov    -0x18(%rbp),%rbx
   2a843:	mov    -0x38(%rbp),%r15
   2a847:	leaveq 
   2a848:	retq   
   2a849:	xor    %esi,%esi
   2a84b:	mov    -0x50(%rbp),%r14
   2a84f:	mov    $0xfffffffffffffffc,%r12
   2a856:	mov    -0x48(%rbp),%rdi
   2a85a:	jmpq   2a71f <png_text_compress+0x11f>
   2a85f:	mov    0x8(%r13),%rax
   2a863:	mov    %rsi,%r12
   2a866:	mov    %rax,%rsi
   2a869:	mov    -0x8(%rbp),%rdi
   2a86d:	callq  2a1f0 <optimize_cmf>
   2a872:	mov    %r12,%rax
   2a875:	mov    -0x30(%rbp),%r14
   2a879:	mov    -0x28(%rbp),%r13
   2a87d:	mov    -0x20(%rbp),%r12
   2a881:	mov    -0x18(%rbp),%rbx
   2a885:	mov    -0x38(%rbp),%r15
   2a889:	leaveq 
   2a88a:	retq   
   2a88b:	nopl   0x0(%rax,%rax,1)

000000000002a890 <png_write_compressed_data_out>:
   2a890:	push   %rbp
   2a891:	mov    %rsp,%rbp
   2a894:	sub    $0x20,%rsp
   2a898:	mov    %r12,-0x8(%rbp)
   2a89c:	mov    %r13,-0x10(%rbp)
   2a8a0:	mov    %r14,-0x18(%rbp)
   2a8a4:	mov    %r15,-0x20(%rbp)
   2a8a8:	mov    0x10(%rsi),%r12d
   2a8ac:	mov    0x1b0(%rdi),%r14
   2a8b3:	add    $0x14,%rsi
   2a8b7:	mov    %rbx,%r13
   2a8ba:	mov    %rdi,%rbx
   2a8bd:	mov    $0x400,%eax
   2a8c2:	jmp    2a8ef <png_write_compressed_data_out+0x5f>
   2a8c4:	mov    %r12,%r15
   2a8c7:	mov    %r15d,%edx
   2a8ca:	mov    %rbx,%rdi
   2a8cd:	callq  5100 <png_write_chunk_data@plt>
   2a8d2:	cmp    %r12d,%r15d
   2a8d5:	je     2a8f9 <png_write_compressed_data_out+0x69>
   2a8d7:	test   %r14,%r14
   2a8da:	je     2a8f9 <png_write_compressed_data_out+0x69>
   2a8dc:	mov    0x1b8(%rbx),%eax
   2a8e2:	mov    (%r14),%rcx
   2a8e5:	sub    %r15d,%r12d
   2a8e8:	lea    0x8(%r14),%rsi
   2a8ec:	mov    %rcx,%r14
   2a8ef:	cmp    %r12d,%eax
   2a8f2:	ja     2a8c4 <png_write_compressed_data_out+0x34>
   2a8f4:	mov    %rax,%r15
   2a8f7:	jmp    2a8c7 <png_write_compressed_data_out+0x37>
   2a8f9:	cmp    %r12d,%r15d
   2a8fc:	jne    2a913 <png_write_compressed_data_out+0x83>
   2a8fe:	mov    %r13,%rbx
   2a901:	mov    -0x20(%rbp),%r15
   2a905:	mov    -0x18(%rbp),%r14
   2a909:	mov    -0x10(%rbp),%r13
   2a90d:	mov    -0x8(%rbp),%r12
   2a911:	leaveq 
   2a912:	retq   
   2a913:	mov    %rbx,%rdi
   2a916:	lea    0x5b14(%rip),%rsi        # 30431 <png_pass_inc.54+0x7c>
   2a91d:	callq  5470 <png_error@plt>
   2a922:	data16 nopw %cs:0x0(%rax,%rax,1)
   2a92d:	nopl   (%rax)

000000000002a930 <png_write_filtered_row>:
   2a930:	push   %rbp
   2a931:	mov    %rsp,%rbp
   2a934:	sub    $0x10,%rsp
   2a938:	mov    %r15,-0x8(%rbp)
   2a93c:	xor    %ecx,%ecx
   2a93e:	mov    %rdi,%r15
   2a941:	callq  27db0 <png_compress_IDAT>
   2a946:	mov    0x220(%r15),%rax
   2a94d:	test   %rax,%rax
   2a950:	je     2a967 <png_write_filtered_row+0x37>
   2a952:	mov    0x228(%r15),%rcx
   2a959:	mov    %rcx,0x220(%r15)
   2a960:	mov    %rax,0x228(%r15)
   2a967:	mov    %r15,%rdi
   2a96a:	callq  293b0 <png_write_finish_row>
   2a96f:	mov    0x29c(%r15),%eax
   2a976:	add    $0x1,%eax
   2a979:	mov    %eax,0x29c(%r15)
   2a980:	mov    0x298(%r15),%ecx
   2a987:	test   %ecx,%ecx
   2a989:	jne    2a991 <png_write_filtered_row+0x61>
   2a98b:	mov    -0x8(%rbp),%r15
   2a98f:	leaveq 
   2a990:	retq   
   2a991:	cmp    %eax,%ecx
   2a993:	jbe    2a99b <png_write_filtered_row+0x6b>
   2a995:	mov    -0x8(%rbp),%r15
   2a999:	leaveq 
   2a99a:	retq   
   2a99b:	mov    %r15,%rdi
   2a99e:	callq  58c0 <png_write_flush@plt>
   2a9a3:	mov    -0x8(%rbp),%r15
   2a9a7:	leaveq 
   2a9a8:	retq   
   2a9a9:	nopl   0x0(%rax)

000000000002a9b0 <png_setup_sub_row>:
   2a9b0:	push   %rbp
   2a9b1:	mov    %rsp,%rbp
   2a9b4:	sub    $0x10,%rsp
   2a9b8:	mov    %rcx,-0x10(%rbp)
   2a9bc:	mov    0x230(%rdi),%rax
   2a9c3:	movb   $0x1,(%rax)
   2a9c6:	mov    %esi,%r10d
   2a9c9:	mov    0x228(%rdi),%rcx
   2a9d0:	add    $0x1,%rcx
   2a9d4:	mov    0x230(%rdi),%rsi
   2a9db:	add    $0x1,%rsi
   2a9df:	mov    $0x100,%r11d
   2a9e5:	xor    %r8d,%r8d
   2a9e8:	mov    %r8,%rax
   2a9eb:	jmp    2aa12 <png_setup_sub_row+0x62>
   2a9ed:	movzbl (%rcx),%r9d
   2a9f1:	mov    %r9b,(%rsi)
   2a9f4:	cmp    $0x7f,%r9b
   2a9f8:	jbe    2aa00 <png_setup_sub_row+0x50>
   2a9fa:	neg    %r9d
   2a9fd:	add    %r11d,%r9d
   2aa00:	mov    %r9d,%r9d
   2aa03:	add    %r9,%rax
   2aa06:	add    $0x1,%rcx
   2aa0a:	add    $0x1,%rsi
   2aa0e:	add    $0x1,%r8
   2aa12:	cmp    %r10,%r8
   2aa15:	jb     2a9ed <png_setup_sub_row+0x3d>
   2aa17:	mov    0x228(%rdi),%rdi
   2aa1e:	add    $0x1,%rdi
   2aa22:	mov    %r15,-0x8(%rbp)
   2aa26:	mov    -0x10(%rbp),%r15
   2aa2a:	jmp    2aa65 <png_setup_sub_row+0xb5>
   2aa2c:	movzbl (%rcx),%r9d
   2aa30:	movzbl (%rdi),%r10d
   2aa34:	sub    %r10b,%r9b
   2aa37:	movzbl %r9b,%r10d
   2aa3b:	mov    %r9b,(%rsi)
   2aa3e:	cmp    $0x7f,%r9b
   2aa42:	jbe    2aa4a <png_setup_sub_row+0x9a>
   2aa44:	neg    %r10d
   2aa47:	add    %r11d,%r10d
   2aa4a:	mov    %r10d,%r9d
   2aa4d:	add    %r9,%rax
   2aa50:	cmp    %r15,%rax
   2aa53:	ja     2aa70 <png_setup_sub_row+0xc0>
   2aa55:	add    $0x1,%rcx
   2aa59:	add    $0x1,%rdi
   2aa5d:	add    $0x1,%rsi
   2aa61:	add    $0x1,%r8
   2aa65:	cmp    %rdx,%r8
   2aa68:	jb     2aa2c <png_setup_sub_row+0x7c>
   2aa6a:	mov    -0x8(%rbp),%r15
   2aa6e:	leaveq 
   2aa6f:	retq   
   2aa70:	mov    -0x8(%rbp),%r15
   2aa74:	leaveq 
   2aa75:	retq   
   2aa76:	nopw   %cs:0x0(%rax,%rax,1)

000000000002aa80 <png_setup_sub_row_only>:
   2aa80:	push   %rbp
   2aa81:	mov    %rsp,%rbp
   2aa84:	mov    0x230(%rdi),%rax
   2aa8b:	movb   $0x1,(%rax)
   2aa8e:	mov    %esi,%r9d
   2aa91:	mov    0x228(%rdi),%rax
   2aa98:	add    $0x1,%rax
   2aa9c:	mov    0x230(%rdi),%rcx
   2aaa3:	add    $0x1,%rcx
   2aaa7:	xor    %esi,%esi
   2aaa9:	jmp    2aabe <png_setup_sub_row_only+0x3e>
   2aaab:	movzbl (%rax),%r8d
   2aaaf:	mov    %r8b,(%rcx)
   2aab2:	add    $0x1,%rax
   2aab6:	add    $0x1,%rcx
   2aaba:	add    $0x1,%rsi
   2aabe:	cmp    %r9,%rsi
   2aac1:	jb     2aaab <png_setup_sub_row_only+0x2b>
   2aac3:	mov    0x228(%rdi),%rdi
   2aaca:	add    $0x1,%rdi
   2aace:	jmp    2aaee <png_setup_sub_row_only+0x6e>
   2aad0:	movzbl (%rax),%r8d
   2aad4:	movzbl (%rdi),%r9d
   2aad8:	sub    %r9b,%r8b
   2aadb:	mov    %r8b,(%rcx)
   2aade:	add    $0x1,%rsi
   2aae2:	add    $0x1,%rax
   2aae6:	add    $0x1,%rdi
   2aaea:	add    $0x1,%rcx
   2aaee:	cmp    %rdx,%rsi
   2aaf1:	jb     2aad0 <png_setup_sub_row_only+0x50>
   2aaf3:	leaveq 
   2aaf4:	retq   
   2aaf5:	data16 nopw %cs:0x0(%rax,%rax,1)

000000000002ab00 <png_setup_up_row>:
   2ab00:	push   %rbp
   2ab01:	mov    %rsp,%rbp
   2ab04:	sub    $0x10,%rsp
   2ab08:	mov    %r15,-0x8(%rbp)
   2ab0c:	mov    0x230(%rdi),%rax
   2ab13:	movb   $0x2,(%rax)
   2ab16:	mov    0x228(%rdi),%rcx
   2ab1d:	add    $0x1,%rcx
   2ab21:	mov    0x220(%rdi),%r8
   2ab28:	add    $0x1,%r8
   2ab2c:	mov    0x230(%rdi),%rdi
   2ab33:	add    $0x1,%rdi
   2ab37:	xor    %r9d,%r9d
   2ab3a:	mov    $0x100,%r15d
   2ab40:	mov    %r9,%rax
   2ab43:	jmp    2ab7e <png_setup_up_row+0x7e>
   2ab45:	movzbl (%rcx),%r10d
   2ab49:	movzbl (%r8),%r11d
   2ab4d:	sub    %r11b,%r10b
   2ab50:	movzbl %r10b,%r11d
   2ab54:	mov    %r10b,(%rdi)
   2ab57:	cmp    $0x7f,%r10b
   2ab5b:	jbe    2ab63 <png_setup_up_row+0x63>
   2ab5d:	neg    %r11d
   2ab60:	add    %r15d,%r11d
   2ab63:	mov    %r11d,%r10d
   2ab66:	add    %r10,%rax
   2ab69:	cmp    %rdx,%rax
   2ab6c:	ja     2ab89 <png_setup_up_row+0x89>
   2ab6e:	add    $0x1,%rcx
   2ab72:	add    $0x1,%r8
   2ab76:	add    $0x1,%rdi
   2ab7a:	add    $0x1,%r9
   2ab7e:	cmp    %rsi,%r9
   2ab81:	jb     2ab45 <png_setup_up_row+0x45>
   2ab83:	mov    -0x8(%rbp),%r15
   2ab87:	leaveq 
   2ab88:	retq   
   2ab89:	mov    -0x8(%rbp),%r15
   2ab8d:	leaveq 
   2ab8e:	retq   
   2ab8f:	nop

000000000002ab90 <png_setup_up_row_only>:
   2ab90:	push   %rbp
   2ab91:	mov    %rsp,%rbp
   2ab94:	mov    0x230(%rdi),%rax
   2ab9b:	movb   $0x2,(%rax)
   2ab9e:	mov    0x228(%rdi),%rax
   2aba5:	add    $0x1,%rax
   2aba9:	mov    0x220(%rdi),%rcx
   2abb0:	add    $0x1,%rcx
   2abb4:	mov    0x230(%rdi),%rdx
   2abbb:	add    $0x1,%rdx
   2abbf:	xor    %edi,%edi
   2abc1:	jmp    2abe1 <png_setup_up_row_only+0x51>
   2abc3:	movzbl (%rax),%r8d
   2abc7:	movzbl (%rcx),%r9d
   2abcb:	sub    %r9b,%r8b
   2abce:	mov    %r8b,(%rdx)
   2abd1:	add    $0x1,%rdi
   2abd5:	add    $0x1,%rax
   2abd9:	add    $0x1,%rcx
   2abdd:	add    $0x1,%rdx
   2abe1:	cmp    %rsi,%rdi
   2abe4:	jb     2abc3 <png_setup_up_row_only+0x33>
   2abe6:	leaveq 
   2abe7:	retq   
   2abe8:	nopl   0x0(%rax,%rax,1)

000000000002abf0 <png_setup_avg_row>:
   2abf0:	push   %rbp
   2abf1:	mov    %rsp,%rbp
   2abf4:	sub    $0x20,%rsp
   2abf8:	mov    %rdi,-0x18(%rbp)
   2abfc:	mov    %rdx,-0x10(%rbp)
   2ac00:	mov    %rcx,-0x20(%rbp)
   2ac04:	mov    0x230(%rdi),%rax
   2ac0b:	movb   $0x3,(%rax)
   2ac0e:	mov    0x228(%rdi),%rcx
   2ac15:	add    $0x1,%rcx
   2ac19:	mov    0x220(%rdi),%rdx
   2ac20:	add    $0x1,%rdx
   2ac24:	mov    0x230(%rdi),%rdi
   2ac2b:	add    $0x1,%rdi
   2ac2f:	mov    $0x100,%r11d
   2ac35:	xor    %r8d,%r8d
   2ac38:	mov    %r8,%rax
   2ac3b:	jmp    2ac74 <png_setup_avg_row+0x84>
   2ac3d:	movzbl (%rcx),%r9d
   2ac41:	movzbl (%rdx),%r10d
   2ac45:	shr    %r10d
   2ac48:	sub    %r10b,%r9b
   2ac4b:	movzbl %r9b,%r10d
   2ac4f:	mov    %r9b,(%rdi)
   2ac52:	cmp    $0x7f,%r9b
   2ac56:	jbe    2ac5e <png_setup_avg_row+0x6e>
   2ac58:	neg    %r10d
   2ac5b:	add    %r11d,%r10d
   2ac5e:	mov    %r10d,%r9d
   2ac61:	add    %r9,%rax
   2ac64:	add    $0x1,%rcx
   2ac68:	add    $0x1,%rdx
   2ac6c:	add    $0x1,%rdi
   2ac70:	add    $0x1,%r8d
   2ac74:	cmp    %esi,%r8d
   2ac77:	jb     2ac3d <png_setup_avg_row+0x4d>
   2ac79:	mov    -0x18(%rbp),%rsi
   2ac7d:	mov    0x228(%rsi),%rsi
   2ac84:	add    $0x1,%rsi
   2ac88:	mov    %r14,-0x8(%rbp)
   2ac8c:	mov    %r15,-0x18(%rbp)
   2ac90:	mov    -0x20(%rbp),%r15
   2ac94:	mov    -0x10(%rbp),%r14
   2ac98:	jmp    2ace1 <png_setup_avg_row+0xf1>
   2ac9a:	movzbl (%rsi),%r10d
   2ac9e:	movzbl (%rdx),%r9d
   2aca2:	add    %r10d,%r9d
   2aca5:	shr    %r9d
   2aca8:	movzbl (%rcx),%r10d
   2acac:	sub    %r9b,%r10b
   2acaf:	movzbl %r10b,%r9d
   2acb3:	mov    %r10b,(%rdi)
   2acb6:	cmp    $0x7f,%r10b
   2acba:	jbe    2acc2 <png_setup_avg_row+0xd2>
   2acbc:	neg    %r9d
   2acbf:	add    %r11d,%r9d
   2acc2:	mov    %r9d,%r9d
   2acc5:	add    %r9,%rax
   2acc8:	cmp    %r15,%rax
   2accb:	ja     2acf3 <png_setup_avg_row+0x103>
   2accd:	add    $0x1,%rcx
   2acd1:	add    $0x1,%rsi
   2acd5:	add    $0x1,%rdx
   2acd9:	add    $0x1,%rdi
   2acdd:	add    $0x1,%r8d
   2ace1:	mov    %r8d,%r9d
   2ace4:	cmp    %r14,%r9
   2ace7:	jb     2ac9a <png_setup_avg_row+0xaa>
   2ace9:	mov    -0x18(%rbp),%r15
   2aced:	mov    -0x8(%rbp),%r14
   2acf1:	leaveq 
   2acf2:	retq   
   2acf3:	mov    -0x18(%rbp),%r15
   2acf7:	mov    -0x8(%rbp),%r14
   2acfb:	leaveq 
   2acfc:	retq   
   2acfd:	nopl   (%rax)

000000000002ad00 <png_setup_avg_row_only>:
   2ad00:	push   %rbp
   2ad01:	mov    %rsp,%rbp
   2ad04:	mov    0x230(%rdi),%rax
   2ad0b:	movb   $0x3,(%rax)
   2ad0e:	mov    0x228(%rdi),%rax
   2ad15:	add    $0x1,%rax
   2ad19:	mov    0x220(%rdi),%rcx
   2ad20:	add    $0x1,%rcx
   2ad24:	mov    0x230(%rdi),%r8
   2ad2b:	add    $0x1,%r8
   2ad2f:	xor    %r9d,%r9d
   2ad32:	jmp    2ad55 <png_setup_avg_row_only+0x55>
   2ad34:	movzbl (%rax),%r10d
   2ad38:	movzbl (%rcx),%r11d
   2ad3c:	shr    %r11d
   2ad3f:	sub    %r11b,%r10b
   2ad42:	mov    %r10b,(%r8)
   2ad45:	add    $0x1,%rax
   2ad49:	add    $0x1,%rcx
   2ad4d:	add    $0x1,%r8
   2ad51:	add    $0x1,%r9d
   2ad55:	cmp    %esi,%r9d
   2ad58:	jb     2ad34 <png_setup_avg_row_only+0x34>
   2ad5a:	mov    0x228(%rdi),%rsi
   2ad61:	add    $0x1,%rsi
   2ad65:	jmp    2ad91 <png_setup_avg_row_only+0x91>
   2ad67:	movzbl (%rsi),%r10d
   2ad6b:	movzbl (%rcx),%edi
   2ad6e:	add    %r10d,%edi
   2ad71:	shr    %edi
   2ad73:	movzbl (%rax),%r10d
   2ad77:	sub    %dil,%r10b
   2ad7a:	mov    %r10b,(%r8)
   2ad7d:	add    $0x1,%r9d
   2ad81:	add    $0x1,%rax
   2ad85:	add    $0x1,%rsi
   2ad89:	add    $0x1,%rcx
   2ad8d:	add    $0x1,%r8
   2ad91:	mov    %r9d,%edi
   2ad94:	cmp    %rdx,%rdi
   2ad97:	jb     2ad67 <png_setup_avg_row_only+0x67>
   2ad99:	leaveq 
   2ad9a:	retq   
   2ad9b:	nopl   0x0(%rax,%rax,1)

000000000002ada0 <png_setup_paeth_row>:
   2ada0:	push   %rbp
   2ada1:	mov    %rsp,%rbp
   2ada4:	sub    $0x50,%rsp
   2ada8:	mov    %rdi,-0x40(%rbp)
   2adac:	mov    %rdx,-0x38(%rbp)
   2adb0:	mov    %rcx,-0x48(%rbp)
   2adb4:	mov    0x230(%rdi),%rax
   2adbb:	movb   $0x4,(%rax)
   2adbe:	mov    %esi,%r10d
   2adc1:	mov    0x228(%rdi),%rcx
   2adc8:	add    $0x1,%rcx
   2adcc:	mov    0x220(%rdi),%rdx
   2add3:	add    $0x1,%rdx
   2add7:	mov    0x230(%rdi),%rsi
   2adde:	add    $0x1,%rsi
   2ade2:	mov    $0x100,%r11d
   2ade8:	xor    %r8d,%r8d
   2adeb:	mov    %r8,%rax
   2adee:	jmp    2ae23 <png_setup_paeth_row+0x83>
   2adf0:	movzbl (%rcx),%edi
   2adf3:	movzbl (%rdx),%r9d
   2adf7:	sub    %r9b,%dil
   2adfa:	movzbl %dil,%r9d
   2adfe:	mov    %dil,(%rsi)
   2ae01:	cmp    $0x7f,%dil
   2ae05:	jbe    2ae0d <png_setup_paeth_row+0x6d>
   2ae07:	neg    %r9d
   2ae0a:	add    %r11d,%r9d
   2ae0d:	mov    %r9d,%edi
   2ae10:	add    %rdi,%rax
   2ae13:	add    $0x1,%rcx
   2ae17:	add    $0x1,%rdx
   2ae1b:	add    $0x1,%rsi
   2ae1f:	add    $0x1,%r8
   2ae23:	cmp    %r10,%r8
   2ae26:	jb     2adf0 <png_setup_paeth_row+0x50>
   2ae28:	mov    -0x40(%rbp),%r9
   2ae2c:	mov    0x220(%r9),%rdi
   2ae33:	add    $0x1,%rdi
   2ae37:	mov    0x228(%r9),%r9
   2ae3e:	add    $0x1,%r9
   2ae42:	mov    %rbx,-0x8(%rbp)
   2ae46:	mov    %r12,-0x10(%rbp)
   2ae4a:	mov    %r13,-0x18(%rbp)
   2ae4e:	mov    %r14,-0x20(%rbp)
   2ae52:	mov    %r15,-0x28(%rbp)
   2ae56:	mov    -0x48(%rbp),%r11
   2ae5a:	mov    -0x38(%rbp),%rbx
   2ae5e:	jmp    2aeaf <png_setup_paeth_row+0x10f>
   2ae60:	cmp    %ebx,%edi
   2ae62:	jg     2ae67 <png_setup_paeth_row+0xc7>
   2ae64:	mov    %r14,%r10
   2ae67:	movzbl (%rcx),%edi
   2ae6a:	sub    %r10b,%dil
   2ae6d:	movzbl %dil,%ebx
   2ae71:	mov    %dil,(%rsi)
   2ae74:	cmp    $0x7f,%dil
   2ae78:	ja     2aeca <png_setup_paeth_row+0x12a>
   2ae7a:	mov    %rbx,%rdi
   2ae7d:	mov    %edi,%edi
   2ae7f:	add    %rdi,%rax
   2ae82:	cmp    %r11,%rax
   2ae85:	ja     2aed3 <png_setup_paeth_row+0x133>
   2ae87:	add    $0x1,%rcx
   2ae8b:	add    $0x1,%rdx
   2ae8f:	mov    -0x40(%rbp),%rdi
   2ae93:	add    $0x1,%rdi
   2ae97:	mov    -0x48(%rbp),%rbx
   2ae9b:	lea    0x1(%rbx),%r9
   2ae9f:	add    $0x1,%rsi
   2aea3:	mov    -0x30(%rbp),%rbx
   2aea7:	lea    0x1(%rbx),%r8
   2aeab:	mov    -0x38(%rbp),%rbx
   2aeaf:	cmp    %rbx,%r8
   2aeb2:	jb     2aee9 <png_setup_paeth_row+0x149>
   2aeb4:	mov    -0x28(%rbp),%r15
   2aeb8:	mov    -0x20(%rbp),%r14
   2aebc:	mov    -0x18(%rbp),%r13
   2aec0:	mov    -0x10(%rbp),%r12
   2aec4:	mov    -0x8(%rbp),%rbx
   2aec8:	leaveq 
   2aec9:	retq   
   2aeca:	mov    $0x100,%edi
   2aecf:	sub    %ebx,%edi
   2aed1:	jmp    2ae7d <png_setup_paeth_row+0xdd>
   2aed3:	mov    -0x28(%rbp),%r15
   2aed7:	mov    -0x20(%rbp),%r14
   2aedb:	mov    -0x18(%rbp),%r13
   2aedf:	mov    -0x10(%rbp),%r12
   2aee3:	mov    -0x8(%rbp),%rbx
   2aee7:	leaveq 
   2aee8:	retq   
   2aee9:	movzbl (%r9),%r15d
   2aeed:	movzbl (%rdx),%r14d
   2aef1:	movzbl (%rdi),%r10d
   2aef5:	mov    %r10,%r12
   2aef8:	sub    %r14d,%r12d
   2aefb:	mov    %r14,%rbx
   2aefe:	sub    %r10d,%ebx
   2af01:	test   %ebx,%ebx
   2af03:	js     2af0a <png_setup_paeth_row+0x16a>
   2af05:	mov    %rbx,%r13
   2af08:	jmp    2af0d <png_setup_paeth_row+0x16d>
   2af0a:	mov    %r12,%r13
   2af0d:	mov    %r8,-0x30(%rbp)
   2af11:	mov    %r10,%r8
   2af14:	sub    %r15d,%r8d
   2af17:	mov    %r9,-0x48(%rbp)
   2af1b:	mov    %r15,%r9
   2af1e:	sub    %r10d,%r9d
   2af21:	test   %r9d,%r9d
   2af24:	js     2af2f <png_setup_paeth_row+0x18f>
   2af26:	mov    %rdi,-0x40(%rbp)
   2af2a:	mov    %r9,%rdi
   2af2d:	jmp    2af36 <png_setup_paeth_row+0x196>
   2af2f:	mov    %rdi,-0x40(%rbp)
   2af33:	mov    %r8,%rdi
   2af36:	add    %r9d,%ebx
   2af39:	test   %ebx,%ebx
   2af3b:	jns    2af41 <png_setup_paeth_row+0x1a1>
   2af3d:	lea    (%r8,%r12,1),%ebx
   2af41:	cmp    %r13d,%edi
   2af44:	jl     2ae60 <png_setup_paeth_row+0xc0>
   2af4a:	cmp    %ebx,%r13d
   2af4d:	jg     2ae60 <png_setup_paeth_row+0xc0>
   2af53:	mov    %r15,%r10
   2af56:	jmpq   2ae67 <png_setup_paeth_row+0xc7>
   2af5b:	nopl   0x0(%rax,%rax,1)

000000000002af60 <png_setup_paeth_row_only>:
   2af60:	push   %rbp
   2af61:	mov    %rsp,%rbp
   2af64:	sub    $0x40,%rsp
   2af68:	mov    %rdx,-0x38(%rbp)
   2af6c:	mov    0x230(%rdi),%rax
   2af73:	movb   $0x4,(%rax)
   2af76:	mov    %esi,%r10d
   2af79:	mov    0x228(%rdi),%rax
   2af80:	add    $0x1,%rax
   2af84:	mov    0x220(%rdi),%rcx
   2af8b:	add    $0x1,%rcx
   2af8f:	mov    0x230(%rdi),%rsi
   2af96:	add    $0x1,%rsi
   2af9a:	xor    %r8d,%r8d
   2af9d:	jmp    2afbd <png_setup_paeth_row_only+0x5d>
   2af9f:	movzbl (%rax),%r9d
   2afa3:	movzbl (%rcx),%r11d
   2afa7:	sub    %r11b,%r9b
   2afaa:	mov    %r9b,(%rsi)
   2afad:	add    $0x1,%rax
   2afb1:	add    $0x1,%rcx
   2afb5:	add    $0x1,%rsi
   2afb9:	add    $0x1,%r8
   2afbd:	cmp    %r10,%r8
   2afc0:	jb     2af9f <png_setup_paeth_row_only+0x3f>
   2afc2:	mov    0x220(%rdi),%r9
   2afc9:	add    $0x1,%r9
   2afcd:	mov    0x228(%rdi),%rdi
   2afd4:	add    $0x1,%rdi
   2afd8:	mov    %rbx,-0x8(%rbp)
   2afdc:	mov    %r12,-0x10(%rbp)
   2afe0:	mov    %r13,-0x18(%rbp)
   2afe4:	mov    %r14,-0x20(%rbp)
   2afe8:	mov    %r15,-0x28(%rbp)
   2afec:	jmp    2b01c <png_setup_paeth_row_only+0xbc>
   2afee:	cmp    %edx,%edi
   2aff0:	jg     2aff5 <png_setup_paeth_row_only+0x95>
   2aff2:	mov    %r12,%rbx
   2aff5:	movzbl (%rax),%edx
   2aff8:	sub    %bl,%dl
   2affa:	mov    %dl,(%rsi)
   2affc:	add    $0x1,%r8
   2b000:	add    $0x1,%rax
   2b004:	add    $0x1,%rcx
   2b008:	add    $0x1,%r9
   2b00c:	mov    -0x30(%rbp),%rdx
   2b010:	lea    0x1(%rdx),%rdi
   2b014:	add    $0x1,%rsi
   2b018:	mov    -0x38(%rbp),%rdx
   2b01c:	cmp    %rdx,%r8
   2b01f:	jb     2b037 <png_setup_paeth_row_only+0xd7>
   2b021:	mov    -0x28(%rbp),%r15
   2b025:	mov    -0x20(%rbp),%r14
   2b029:	mov    -0x18(%rbp),%r13
   2b02d:	mov    -0x10(%rbp),%r12
   2b031:	mov    -0x8(%rbp),%rbx
   2b035:	leaveq 
   2b036:	retq   
   2b037:	movzbl (%rdi),%r15d
   2b03b:	movzbl (%rcx),%r12d
   2b03f:	movzbl (%r9),%ebx
   2b043:	mov    %rbx,%r11
   2b046:	sub    %r12d,%r11d
   2b049:	mov    %r12,%r14
   2b04c:	sub    %ebx,%r14d
   2b04f:	test   %r14d,%r14d
   2b052:	js     2b059 <png_setup_paeth_row_only+0xf9>
   2b054:	mov    %r14,%r10
   2b057:	jmp    2b05c <png_setup_paeth_row_only+0xfc>
   2b059:	mov    %r11,%r10
   2b05c:	mov    %rbx,%r13
   2b05f:	sub    %r15d,%r13d
   2b062:	mov    %r15,%rdx
   2b065:	sub    %ebx,%edx
   2b067:	test   %edx,%edx
   2b069:	js     2b074 <png_setup_paeth_row_only+0x114>
   2b06b:	mov    %rdi,-0x30(%rbp)
   2b06f:	mov    %rdx,%rdi
   2b072:	jmp    2b07b <png_setup_paeth_row_only+0x11b>
   2b074:	mov    %rdi,-0x30(%rbp)
   2b078:	mov    %r13,%rdi
   2b07b:	add    %r14d,%edx
   2b07e:	test   %edx,%edx
   2b080:	jns    2b087 <png_setup_paeth_row_only+0x127>
   2b082:	lea    0x0(%r13,%r11,1),%edx
   2b087:	cmp    %r10d,%edi
   2b08a:	jl     2afee <png_setup_paeth_row_only+0x8e>
   2b090:	cmp    %edx,%r10d
   2b093:	jg     2afee <png_setup_paeth_row_only+0x8e>
   2b099:	mov    %r15,%rbx
   2b09c:	jmpq   2aff5 <png_setup_paeth_row_only+0x95>

Disassembly of section .fini:

000000000002b0a4 <_fini>:
   2b0a4:	endbr64 
   2b0a8:	sub    $0x8,%rsp
   2b0ac:	add    $0x8,%rsp
   2b0b0:	retq   
