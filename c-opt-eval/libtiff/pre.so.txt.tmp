
libtiff/pre.so:     file format elf64-x86-64


Disassembly of section .init:

0000000000008000 <_init>:
endbr64 
sub    $0x8,%rsp
mov    0x71f71(%rip),%rax        # 79f80 <__gmon_start__>
test   %rax,%rax
je     8016 <_init+0x16>
callq  *%rax
add    $0x8,%rsp
retq   

Disassembly of section .plt:

0000000000008020 <.plt>:
pushq  0x71fe2(%rip)        # 7a008 <_GLOBAL_OFFSET_TABLE_+0x8>
jmpq   *0x71fe4(%rip)        # 7a010 <_GLOBAL_OFFSET_TABLE_+0x10>
nopl   0x0(%rax)

0000000000008030 <TIFFCheckTile@plt>:
jmpq   *0x71fe2(%rip)        # 7a018 <TIFFCheckTile@@Base+0x2c2c8>
pushq  $0x0
jmpq   8020 <.plt>

0000000000008040 <getenv@plt>:
jmpq   *0x71fda(%rip)        # 7a020 <getenv@GLIBC_2.2.5>
pushq  $0x1
jmpq   8020 <.plt>

0000000000008050 <_TIFFsetDoubleArray@plt>:
jmpq   *0x71fd2(%rip)        # 7a028 <_TIFFsetDoubleArray@@Base+0x6df08>
pushq  $0x2
jmpq   8020 <.plt>

0000000000008060 <TIFFSwabArrayOfFloat@plt>:
jmpq   *0x71fca(%rip)        # 7a030 <TIFFSwabArrayOfFloat@@Base+0x2cdd0>
pushq  $0x3
jmpq   8020 <.plt>

0000000000008070 <TIFFStripSize@plt>:
jmpq   *0x71fc2(%rip)        # 7a038 <TIFFStripSize@@Base+0x2d368>
pushq  $0x4
jmpq   8020 <.plt>

0000000000008080 <free@plt>:
jmpq   *0x71fba(%rip)        # 7a040 <free@GLIBC_2.2.5>
pushq  $0x5
jmpq   8020 <.plt>

0000000000008090 <jpeg_set_quality@plt>:
jmpq   *0x71fb2(%rip)        # 7a048 <jpeg_set_quality@LIBJPEG_8.0>
pushq  $0x6
jmpq   8020 <.plt>

00000000000080a0 <TIFFRewriteDirectory@plt>:
jmpq   *0x71faa(%rip)        # 7a050 <TIFFRewriteDirectory@@Base+0x5df80>
pushq  $0x7
jmpq   8020 <.plt>

00000000000080b0 <jpeg_write_tables@plt>:
jmpq   *0x71fa2(%rip)        # 7a058 <jpeg_write_tables@LIBJPEG_8.0>
pushq  $0x8
jmpq   8020 <.plt>

00000000000080c0 <LogL10toY@plt>:
jmpq   *0x71f9a(%rip)        # 7a060 <LogL10toY@@Base+0x446d0>
pushq  $0x9
jmpq   8020 <.plt>

00000000000080d0 <TIFFTileRowSize@plt>:
jmpq   *0x71f92(%rip)        # 7a068 <TIFFTileRowSize@@Base+0x2c6e8>
pushq  $0xa
jmpq   8020 <.plt>

00000000000080e0 <__errno_location@plt>:
jmpq   *0x71f8a(%rip)        # 7a070 <__errno_location@GLIBC_2.2.5>
pushq  $0xb
jmpq   8020 <.plt>

00000000000080f0 <_TIFFDataSize@plt>:
jmpq   *0x71f82(%rip)        # 7a078 <_TIFFDataSize@@Base+0x68d88>
pushq  $0xc
jmpq   8020 <.plt>

0000000000008100 <_TIFFrealloc@plt>:
jmpq   *0x71f7a(%rip)        # 7a080 <_TIFFrealloc@@Base+0x295d0>
pushq  $0xd
jmpq   8020 <.plt>

0000000000008110 <TIFFComputeTile@plt>:
jmpq   *0x71f72(%rip)        # 7a088 <TIFFComputeTile@@Base+0x2c4b8>
pushq  $0xe
jmpq   8020 <.plt>

0000000000008120 <strncmp@plt>:
jmpq   *0x71f6a(%rip)        # 7a090 <strncmp@GLIBC_2.2.5>
pushq  $0xf
jmpq   8020 <.plt>

0000000000008130 <lzma_code@plt>:
jmpq   *0x71f62(%rip)        # 7a098 <lzma_code@XZ_5.0>
pushq  $0x10
jmpq   8020 <.plt>

0000000000008140 <TIFFDataWidth@plt>:
jmpq   *0x71f5a(%rip)        # 7a0a0 <TIFFDataWidth@@Base+0x69810>
pushq  $0x11
jmpq   8020 <.plt>

0000000000008150 <TIFFFdOpen@plt>:
jmpq   *0x71f52(%rip)        # 7a0a8 <TIFFFdOpen@@Base+0x294a8>
pushq  $0x12
jmpq   8020 <.plt>

0000000000008160 <strcpy@plt>:
jmpq   *0x71f4a(%rip)        # 7a0b0 <strcpy@GLIBC_2.2.5>
pushq  $0x13
jmpq   8020 <.plt>

0000000000008170 <inflate@plt>:
jmpq   *0x71f42(%rip)        # 7a0b8 <inflate>
pushq  $0x14
jmpq   8020 <.plt>

0000000000008180 <TIFFPredictorCleanup@plt>:
jmpq   *0x71f3a(%rip)        # 7a0c0 <TIFFPredictorCleanup@@Base+0x33470>
pushq  $0x15
jmpq   8020 <.plt>

0000000000008190 <TIFFReadCustomDirectory@plt>:
jmpq   *0x71f32(%rip)        # 7a0c8 <TIFFReadCustomDirectory@@Base+0x66fc8>
pushq  $0x16
jmpq   8020 <.plt>

00000000000081a0 <LogLuv24fromXYZ@plt>:
jmpq   *0x71f2a(%rip)        # 7a0d0 <LogLuv24fromXYZ@@Base+0x43df0>
pushq  $0x17
jmpq   8020 <.plt>

00000000000081b0 <TIFFSwabArrayOfDouble@plt>:
jmpq   *0x71f22(%rip)        # 7a0d8 <TIFFSwabArrayOfDouble@@Base+0x2ce48>
pushq  $0x18
jmpq   8020 <.plt>

00000000000081c0 <jpeg_abort@plt>:
jmpq   *0x71f1a(%rip)        # 7a0e0 <jpeg_abort@LIBJPEG_8.0>
pushq  $0x19
jmpq   8020 <.plt>

00000000000081d0 <TIFFWriteCheck@plt>:
jmpq   *0x71f12(%rip)        # 7a0e8 <TIFFWriteCheck@@Base+0x2bc18>
pushq  $0x1a
jmpq   8020 <.plt>

00000000000081e0 <qsort@plt>:
jmpq   *0x71f0a(%rip)        # 7a0f0 <qsort@GLIBC_2.2.5>
pushq  $0x1b
jmpq   8020 <.plt>

00000000000081f0 <jpeg_destroy@plt>:
jmpq   *0x71f02(%rip)        # 7a0f8 <jpeg_destroy@LIBJPEG_8.0>
pushq  $0x1c
jmpq   8020 <.plt>

0000000000008200 <_TIFFGetExifFields@plt>:
jmpq   *0x71efa(%rip)        # 7a100 <_TIFFGetExifFields@@Base+0x69590>
pushq  $0x1d
jmpq   8020 <.plt>

0000000000008210 <exp@plt>:
jmpq   *0x71ef2(%rip)        # 7a108 <exp@GLIBC_2.2.5>
pushq  $0x1e
jmpq   8020 <.plt>

0000000000008220 <TIFFScanlineSize64@plt>:
jmpq   *0x71eea(%rip)        # 7a110 <TIFFScanlineSize64@@Base+0x2d700>
pushq  $0x1f
jmpq   8020 <.plt>

0000000000008230 <TIFFGetField@plt>:
jmpq   *0x71ee2(%rip)        # 7a118 <TIFFGetField@@Base+0x6edf8>
pushq  $0x20
jmpq   8020 <.plt>

0000000000008240 <write@plt>:
jmpq   *0x71eda(%rip)        # 7a120 <write@GLIBC_2.2.5>
pushq  $0x21
jmpq   8020 <.plt>

0000000000008250 <TIFFVGetField@plt>:
jmpq   *0x71ed2(%rip)        # 7a128 <TIFFVGetField@@Base+0x6ed88>
pushq  $0x22
jmpq   8020 <.plt>

0000000000008260 <TIFFNumberOfStrips@plt>:
jmpq   *0x71eca(%rip)        # 7a130 <TIFFNumberOfStrips@@Base+0x2d140>
pushq  $0x23
jmpq   8020 <.plt>

0000000000008270 <TIFFReadBufferSetup@plt>:
jmpq   *0x71ec2(%rip)        # 7a138 <TIFFReadBufferSetup@@Base+0x2ffb8>
pushq  $0x24
jmpq   8020 <.plt>

0000000000008280 <TIFFComputeStrip@plt>:
jmpq   *0x71eba(%rip)        # 7a140 <TIFFComputeStrip@@Base+0x2d1c0>
pushq  $0x25
jmpq   8020 <.plt>

0000000000008290 <TIFFSetField@plt>:
jmpq   *0x71eb2(%rip)        # 7a148 <TIFFSetField@@Base+0x6e4b8>
pushq  $0x26
jmpq   8020 <.plt>

00000000000082a0 <TIFFStripSize64@plt>:
jmpq   *0x71eaa(%rip)        # 7a150 <TIFFStripSize64@@Base+0x2d4a0>
pushq  $0x27
jmpq   8020 <.plt>

00000000000082b0 <TIFFVStripSize@plt>:
jmpq   *0x71ea2(%rip)        # 7a158 <TIFFVStripSize@@Base+0x2d1f8>
pushq  $0x28
jmpq   8020 <.plt>

00000000000082c0 <jpeg_suppress_tables@plt>:
jmpq   *0x71e9a(%rip)        # 7a160 <jpeg_suppress_tables@LIBJPEG_8.0>
pushq  $0x29
jmpq   8020 <.plt>

00000000000082d0 <_TIFFSetupFields@plt>:
jmpq   *0x71e92(%rip)        # 7a168 <_TIFFSetupFields@@Base+0x695e8>
pushq  $0x2a
jmpq   8020 <.plt>

00000000000082e0 <XYZtoRGB24@plt>:
jmpq   *0x71e8a(%rip)        # 7a170 <XYZtoRGB24@@Base+0x447a0>
pushq  $0x2b
jmpq   8020 <.plt>

00000000000082f0 <_TIFFSeekOK@plt>:
jmpq   *0x71e82(%rip)        # 7a178 <_TIFFSeekOK@@Base+0x70598>
pushq  $0x2c
jmpq   8020 <.plt>

0000000000008300 <_TIFFMultiply64@plt>:
jmpq   *0x71e7a(%rip)        # 7a180 <_TIFFMultiply64@@Base+0x70740>
pushq  $0x2d
jmpq   8020 <.plt>

0000000000008310 <_TIFFReadTileAndAllocBuffer@plt>:
jmpq   *0x71e72(%rip)        # 7a188 <_TIFFReadTileAndAllocBuffer@@Base+0x2f388>
pushq  $0x2e
jmpq   8020 <.plt>

0000000000008320 <TIFFCIELabToXYZ@plt>:
jmpq   *0x71e6a(%rip)        # 7a190 <TIFFCIELabToXYZ@@Base+0x6fd40>
pushq  $0x2f
jmpq   8020 <.plt>

0000000000008330 <jpeg_write_scanlines@plt>:
jmpq   *0x71e62(%rip)        # 7a198 <jpeg_write_scanlines@LIBJPEG_8.0>
pushq  $0x30
jmpq   8020 <.plt>

0000000000008340 <uv_decode@plt>:
jmpq   *0x71e5a(%rip)        # 7a1a0 <uv_decode@@Base+0x445d0>
pushq  $0x31
jmpq   8020 <.plt>

0000000000008350 <strlen@plt>:
jmpq   *0x71e52(%rip)        # 7a1a8 <strlen@GLIBC_2.2.5>
pushq  $0x32
jmpq   8020 <.plt>

0000000000008360 <LogLuv32toXYZ@plt>:
jmpq   *0x71e4a(%rip)        # 7a1b0 <LogLuv32toXYZ@@Base+0x443e0>
pushq  $0x33
jmpq   8020 <.plt>

0000000000008370 <TIFFYCbCrtoRGB@plt>:
jmpq   *0x71e42(%rip)        # 7a1b8 <TIFFYCbCrtoRGB@@Base+0x6f618>
pushq  $0x34
jmpq   8020 <.plt>

0000000000008380 <jpeg_finish_decompress@plt>:
jmpq   *0x71e3a(%rip)        # 7a1c0 <jpeg_finish_decompress@LIBJPEG_8.0>
pushq  $0x35
jmpq   8020 <.plt>

0000000000008390 <TIFFGetFieldDefaulted@plt>:
jmpq   *0x71e32(%rip)        # 7a1c8 <TIFFGetFieldDefaulted@@Base+0x713b8>
pushq  $0x36
jmpq   8020 <.plt>

00000000000083a0 <TIFFReadRGBATileExt@plt>:
jmpq   *0x71e2a(%rip)        # 7a1d0 <TIFFReadRGBATileExt@@Base+0x51840>
pushq  $0x37
jmpq   8020 <.plt>

00000000000083b0 <jpeg_has_multiple_scans@plt>:
jmpq   *0x71e22(%rip)        # 7a1d8 <jpeg_has_multiple_scans@LIBJPEG_8.0>
pushq  $0x38
jmpq   8020 <.plt>

00000000000083c0 <mmap@plt>:
jmpq   *0x71e1a(%rip)        # 7a1e0 <mmap@GLIBC_2.2.5>
pushq  $0x39
jmpq   8020 <.plt>

00000000000083d0 <TIFFSwabArrayOfShort@plt>:
jmpq   *0x71e12(%rip)        # 7a1e8 <TIFFSwabArrayOfShort@@Base+0x2d068>
pushq  $0x3a
jmpq   8020 <.plt>

00000000000083e0 <lzma_memusage@plt>:
jmpq   *0x71e0a(%rip)        # 7a1f0 <lzma_memusage@XZ_5.0>
pushq  $0x3b
jmpq   8020 <.plt>

00000000000083f0 <_TIFFReadEncodedTileAndAllocBuffer@plt>:
jmpq   *0x71e02(%rip)        # 7a1f8 <_TIFFReadEncodedTileAndAllocBuffer@@Base+0x2f5a8>
pushq  $0x3c
jmpq   8020 <.plt>

0000000000008400 <strchr@plt>:
jmpq   *0x71dfa(%rip)        # 7a200 <strchr@GLIBC_2.2.5>
pushq  $0x3d
jmpq   8020 <.plt>

0000000000008410 <TIFFScanlineSize@plt>:
jmpq   *0x71df2(%rip)        # 7a208 <TIFFScanlineSize@@Base+0x2d628>
pushq  $0x3e
jmpq   8020 <.plt>

0000000000008420 <jpeg_read_raw_data@plt>:
jmpq   *0x71dea(%rip)        # 7a210 <jpeg_read_raw_data@LIBJPEG_8.0>
pushq  $0x3f
jmpq   8020 <.plt>

0000000000008430 <snprintf@plt>:
jmpq   *0x71de2(%rip)        # 7a218 <snprintf@GLIBC_2.2.5>
pushq  $0x40
jmpq   8020 <.plt>

0000000000008440 <_TIFFmalloc@plt>:
jmpq   *0x71dda(%rip)        # 7a220 <_TIFFmalloc@@Base+0x297b0>
pushq  $0x41
jmpq   8020 <.plt>

0000000000008450 <TIFFVGetFieldDefaulted@plt>:
jmpq   *0x71dd2(%rip)        # 7a228 <TIFFVGetFieldDefaulted@@Base+0x71398>
pushq  $0x42
jmpq   8020 <.plt>

0000000000008460 <deflateReset@plt>:
jmpq   *0x71dca(%rip)        # 7a230 <deflateReset>
pushq  $0x43
jmpq   8020 <.plt>

0000000000008470 <lseek@plt>:
jmpq   *0x71dc2(%rip)        # 7a238 <lseek@GLIBC_2.2.5>
pushq  $0x44
jmpq   8020 <.plt>

0000000000008480 <TIFFSwabLong@plt>:
jmpq   *0x71dba(%rip)        # 7a240 <TIFFSwabLong@@Base+0x2d180>
pushq  $0x45
jmpq   8020 <.plt>

0000000000008490 <__assert_fail@plt>:
jmpq   *0x71db2(%rip)        # 7a248 <__assert_fail@GLIBC_2.2.5>
pushq  $0x46
jmpq   8020 <.plt>

00000000000084a0 <TIFFFlushData@plt>:
jmpq   *0x71daa(%rip)        # 7a250 <TIFFFlushData@@Base+0x51be0>
pushq  $0x47
jmpq   8020 <.plt>

00000000000084b0 <fputs@plt>:
jmpq   *0x71da2(%rip)        # 7a258 <fputs@GLIBC_2.2.5>
pushq  $0x48
jmpq   8020 <.plt>

00000000000084c0 <TIFFRawStripSize64@plt>:
jmpq   *0x71d9a(%rip)        # 7a260 <TIFFRawStripSize64@@Base+0x2d580>
pushq  $0x49
jmpq   8020 <.plt>

00000000000084d0 <_TIFFcalloc@plt>:
jmpq   *0x71d92(%rip)        # 7a268 <_TIFFcalloc@@Base+0x297d8>
pushq  $0x4a
jmpq   8020 <.plt>

00000000000084e0 <deflate@plt>:
jmpq   *0x71d8a(%rip)        # 7a270 <deflate>
pushq  $0x4b
jmpq   8020 <.plt>

00000000000084f0 <_TIFFMultiply32@plt>:
jmpq   *0x71d82(%rip)        # 7a278 <_TIFFMultiply32@@Base+0x70878>
pushq  $0x4c
jmpq   8020 <.plt>

0000000000008500 <TIFFRasterScanlineSize64@plt>:
jmpq   *0x71d7a(%rip)        # 7a280 <TIFFRasterScanlineSize64@@Base+0x2d690>
pushq  $0x4d
jmpq   8020 <.plt>

0000000000008510 <TIFFFreeDirectory@plt>:
jmpq   *0x71d72(%rip)        # 7a288 <TIFFFreeDirectory@@Base+0x6ed78>
pushq  $0x4e
jmpq   8020 <.plt>

0000000000008520 <_TIFFMergeFields@plt>:
jmpq   *0x71d6a(%rip)        # 7a290 <_TIFFMergeFields@@Base+0x694d0>
pushq  $0x4f
jmpq   8020 <.plt>

0000000000008530 <TIFFFindCODEC@plt>:
jmpq   *0x71d62(%rip)        # 7a298 <TIFFFindCODEC@@Base+0x6f5f8>
pushq  $0x50
jmpq   8020 <.plt>

0000000000008540 <_TIFFsetShortArray@plt>:
jmpq   *0x71d5a(%rip)        # 7a2a0 <_TIFFsetShortArray@@Base+0x6e1e0>
pushq  $0x51
jmpq   8020 <.plt>

0000000000008550 <memset@plt>:
jmpq   *0x71d52(%rip)        # 7a2a8 <memset@GLIBC_2.2.5>
pushq  $0x52
jmpq   8020 <.plt>

0000000000008560 <pow@plt>:
jmpq   *0x71d4a(%rip)        # 7a2b0 <pow@GLIBC_2.2.5>
pushq  $0x53
jmpq   8020 <.plt>

0000000000008570 <log@plt>:
jmpq   *0x71d42(%rip)        # 7a2b8 <log@GLIBC_2.2.5>
pushq  $0x54
jmpq   8020 <.plt>

0000000000008580 <close@plt>:
jmpq   *0x71d3a(%rip)        # 7a2c0 <close@GLIBC_2.2.5>
pushq  $0x55
jmpq   8020 <.plt>

0000000000008590 <_TIFFCreateAnonField@plt>:
jmpq   *0x71d32(%rip)        # 7a2c8 <_TIFFCreateAnonField@@Base+0x69328>
pushq  $0x56
jmpq   8020 <.plt>

00000000000085a0 <TIFFWarningExt@plt>:
jmpq   *0x71d2a(%rip)        # 7a2d0 <TIFFWarningExt@@Base+0x2c200>
pushq  $0x57
jmpq   8020 <.plt>

00000000000085b0 <TIFFJPEGIsFullStripRequired@plt>:
jmpq   *0x71d22(%rip)        # 7a2d8 <TIFFJPEGIsFullStripRequired@@Base+0x48758>
pushq  $0x58
jmpq   8020 <.plt>

00000000000085c0 <_TIFFRewriteField@plt>:
jmpq   *0x71d1a(%rip)        # 7a2e0 <_TIFFRewriteField@@Base+0x5dca0>
pushq  $0x59
jmpq   8020 <.plt>

00000000000085d0 <TIFFCreateCustomDirectory@plt>:
jmpq   *0x71d12(%rip)        # 7a2e8 <TIFFCreateCustomDirectory@@Base+0x6eb48>
pushq  $0x5a
jmpq   8020 <.plt>

00000000000085e0 <fputc@plt>:
jmpq   *0x71d0a(%rip)        # 7a2f0 <fputc@GLIBC_2.2.5>
pushq  $0x5b
jmpq   8020 <.plt>

00000000000085f0 <TIFFFileName@plt>:
jmpq   *0x71d02(%rip)        # 7a2f8 <TIFFFileName@@Base+0x381c8>
pushq  $0x5c
jmpq   8020 <.plt>

0000000000008600 <read@plt>:
jmpq   *0x71cfa(%rip)        # 7a300 <read@GLIBC_2.2.5>
pushq  $0x5d
jmpq   8020 <.plt>

0000000000008610 <memcmp@plt>:
jmpq   *0x71cf2(%rip)        # 7a308 <memcmp@GLIBC_2.2.5>
pushq  $0x5e
jmpq   8020 <.plt>

0000000000008620 <deflateParams@plt>:
jmpq   *0x71cea(%rip)        # 7a310 <deflateParams>
pushq  $0x5f
jmpq   8020 <.plt>

0000000000008630 <_setjmp@plt>:
jmpq   *0x71ce2(%rip)        # 7a318 <_setjmp@GLIBC_2.2.5>
pushq  $0x60
jmpq   8020 <.plt>

0000000000008640 <LogL16fromY@plt>:
jmpq   *0x71cda(%rip)        # 7a320 <LogL16fromY@@Base+0x44430>
pushq  $0x61
jmpq   8020 <.plt>

0000000000008650 <calloc@plt>:
jmpq   *0x71cd2(%rip)        # 7a328 <calloc@GLIBC_2.2.5>
pushq  $0x62
jmpq   8020 <.plt>

0000000000008660 <strcmp@plt>:
jmpq   *0x71cca(%rip)        # 7a330 <strcmp@GLIBC_2.2.5>
pushq  $0x63
jmpq   8020 <.plt>

0000000000008670 <jpeg_start_decompress@plt>:
jmpq   *0x71cc2(%rip)        # 7a338 <jpeg_start_decompress@LIBJPEG_8.0>
pushq  $0x64
jmpq   8020 <.plt>

0000000000008680 <TIFFFindField@plt>:
jmpq   *0x71cba(%rip)        # 7a340 <TIFFFindField@@Base+0x69c90>
pushq  $0x65
jmpq   8020 <.plt>

0000000000008690 <deflateInit_@plt>:
jmpq   *0x71cb2(%rip)        # 7a348 <deflateInit_>
pushq  $0x66
jmpq   8020 <.plt>

00000000000086a0 <TIFFRGBAImageGet@plt>:
jmpq   *0x71caa(%rip)        # 7a350 <TIFFRGBAImageGet@@Base+0x50a00>
pushq  $0x67
jmpq   8020 <.plt>

00000000000086b0 <TIFFSetupStrips@plt>:
jmpq   *0x71ca2(%rip)        # 7a358 <TIFFSetupStrips@@Base+0x2bfe8>
pushq  $0x68
jmpq   8020 <.plt>

00000000000086c0 <jpeg_write_raw_data@plt>:
jmpq   *0x71c9a(%rip)        # 7a360 <jpeg_write_raw_data@LIBJPEG_8.0>
pushq  $0x69
jmpq   8020 <.plt>

00000000000086d0 <jpeg_read_scanlines@plt>:
jmpq   *0x71c92(%rip)        # 7a368 <jpeg_read_scanlines@LIBJPEG_8.0>
pushq  $0x6a
jmpq   8020 <.plt>

00000000000086e0 <TIFFFlushData1@plt>:
jmpq   *0x71c8a(%rip)        # 7a370 <TIFFFlushData1@@Base+0x2aae0>
pushq  $0x6b
jmpq   8020 <.plt>

00000000000086f0 <fprintf@plt>:
jmpq   *0x71c82(%rip)        # 7a378 <fprintf@GLIBC_2.2.5>
pushq  $0x6c
jmpq   8020 <.plt>

0000000000008700 <TIFFReverseBits@plt>:
jmpq   *0x71c7a(%rip)        # 7a380 <TIFFReverseBits@@Base+0x2d0a0>
pushq  $0x6d
jmpq   8020 <.plt>

0000000000008710 <TIFFReadRGBAImageOriented@plt>:
jmpq   *0x71c72(%rip)        # 7a388 <TIFFReadRGBAImageOriented@@Base+0x51c98>
pushq  $0x6e
jmpq   8020 <.plt>

0000000000008720 <memcpy@plt>:
jmpq   *0x71c6a(%rip)        # 7a390 <memcpy@GLIBC_2.14>
pushq  $0x6f
jmpq   8020 <.plt>

0000000000008730 <TIFFSwabLong8@plt>:
jmpq   *0x71c62(%rip)        # 7a398 <TIFFSwabLong8@@Base+0x2d2b8>
pushq  $0x70
jmpq   8020 <.plt>

0000000000008740 <_TIFFSetDefaultCompressionState@plt>:
jmpq   *0x71c5a(%rip)        # 7a3a0 <_TIFFSetDefaultCompressionState@@Base+0x6f340>
pushq  $0x71
jmpq   8020 <.plt>

0000000000008750 <_TIFFCheckMalloc@plt>:
jmpq   *0x71c52(%rip)        # 7a3a8 <_TIFFCheckMalloc@@Base+0x70918>
pushq  $0x72
jmpq   8020 <.plt>

0000000000008760 <TIFFFlush@plt>:
jmpq   *0x71c4a(%rip)        # 7a3b0 <TIFFFlush@@Base+0x51f20>
pushq  $0x73
jmpq   8020 <.plt>

0000000000008770 <TIFFVTileSize64@plt>:
jmpq   *0x71c42(%rip)        # 7a3b8 <TIFFVTileSize64@@Base+0x2ca08>
pushq  $0x74
jmpq   8020 <.plt>

0000000000008780 <inflateEnd@plt>:
jmpq   *0x71c3a(%rip)        # 7a3c0 <inflateEnd>
pushq  $0x75
jmpq   8020 <.plt>

0000000000008790 <_TIFFmemcpy@plt>:
jmpq   *0x71c32(%rip)        # 7a3c8 <_TIFFmemcpy@@Base+0x298f8>
pushq  $0x76
jmpq   8020 <.plt>

00000000000087a0 <jpeg_CreateDecompress@plt>:
jmpq   *0x71c2a(%rip)        # 7a3d0 <jpeg_CreateDecompress@LIBJPEG_8.0>
pushq  $0x77
jmpq   8020 <.plt>

00000000000087b0 <TIFFRGBAImageEnd@plt>:
jmpq   *0x71c22(%rip)        # 7a3d8 <TIFFRGBAImageEnd@@Base+0x509f8>
pushq  $0x78
jmpq   8020 <.plt>

00000000000087c0 <TIFFSwabShort@plt>:
jmpq   *0x71c1a(%rip)        # 7a3e0 <TIFFSwabShort@@Base+0x2d340>
pushq  $0x79
jmpq   8020 <.plt>

00000000000087d0 <TIFFNumberOfTiles@plt>:
jmpq   *0x71c12(%rip)        # 7a3e8 <TIFFNumberOfTiles@@Base+0x2c5a8>
pushq  $0x7a
jmpq   8020 <.plt>

00000000000087e0 <TIFFGetBitRevTable@plt>:
jmpq   *0x71c0a(%rip)        # 7a3f0 <TIFFGetBitRevTable@@Base+0x2d080>
pushq  $0x7b
jmpq   8020 <.plt>

00000000000087f0 <_TIFFsetFloatArray@plt>:
jmpq   *0x71c02(%rip)        # 7a3f8 <_TIFFsetFloatArray@@Base+0x6e2f8>
pushq  $0x7c
jmpq   8020 <.plt>

0000000000008800 <lzma_stream_decoder@plt>:
jmpq   *0x71bfa(%rip)        # 7a400 <lzma_stream_decoder@XZ_5.0>
pushq  $0x7d
jmpq   8020 <.plt>

0000000000008810 <TIFFReadEncodedStrip@plt>:
jmpq   *0x71bf2(%rip)        # 7a408 <TIFFReadEncodedStrip@@Base+0x2ff88>
pushq  $0x7e
jmpq   8020 <.plt>

0000000000008820 <TIFFReadTile@plt>:
jmpq   *0x71bea(%rip)        # 7a410 <TIFFReadTile@@Base+0x30030>
pushq  $0x7f
jmpq   8020 <.plt>

0000000000008830 <TIFFCreateDirectory@plt>:
jmpq   *0x71be2(%rip)        # 7a418 <TIFFCreateDirectory@@Base+0x6ecc8>
pushq  $0x80
jmpq   8020 <.plt>

0000000000008840 <uv_encode@plt>:
jmpq   *0x71bda(%rip)        # 7a420 <uv_encode@@Base+0x442c0>
pushq  $0x81
jmpq   8020 <.plt>

0000000000008850 <TIFFRGBAImageOK@plt>:
jmpq   *0x71bd2(%rip)        # 7a428 <TIFFRGBAImageOK@@Base+0x517d8>
pushq  $0x82
jmpq   8020 <.plt>

0000000000008860 <TIFFSetCompressionScheme@plt>:
jmpq   *0x71bca(%rip)        # 7a430 <TIFFSetCompressionScheme@@Base+0x6f2d0>
pushq  $0x83
jmpq   8020 <.plt>

0000000000008870 <lzma_end@plt>:
jmpq   *0x71bc2(%rip)        # 7a438 <lzma_end@XZ_5.0>
pushq  $0x84
jmpq   8020 <.plt>

0000000000008880 <TIFFFillStrip@plt>:
jmpq   *0x71bba(%rip)        # 7a440 <TIFFFillStrip@@Base+0x2f590>
pushq  $0x85
jmpq   8020 <.plt>

0000000000008890 <TIFFIsTiled@plt>:
jmpq   *0x71bb2(%rip)        # 7a448 <TIFFIsTiled@@Base+0x38cc8>
pushq  $0x86
jmpq   8020 <.plt>

00000000000088a0 <malloc@plt>:
jmpq   *0x71baa(%rip)        # 7a450 <malloc@GLIBC_2.2.5>
pushq  $0x87
jmpq   8020 <.plt>

00000000000088b0 <jpeg_set_colorspace@plt>:
jmpq   *0x71ba2(%rip)        # 7a458 <jpeg_set_colorspace@LIBJPEG_8.0>
pushq  $0x88
jmpq   8020 <.plt>

00000000000088c0 <TIFFGetTagListEntry@plt>:
jmpq   *0x71b9a(%rip)        # 7a460 <TIFFGetTagListEntry@@Base+0x588e0>
pushq  $0x89
jmpq   8020 <.plt>

00000000000088d0 <TIFFDefaultDirectory@plt>:
jmpq   *0x71b92(%rip)        # 7a468 <TIFFDefaultDirectory@@Base+0x6e5b8>
pushq  $0x8a
jmpq   8020 <.plt>

00000000000088e0 <_TIFFmemset@plt>:
jmpq   *0x71b8a(%rip)        # 7a470 <_TIFFmemset@@Base+0x299b0>
pushq  $0x8b
jmpq   8020 <.plt>

00000000000088f0 <LogL10fromY@plt>:
jmpq   *0x71b82(%rip)        # 7a478 <LogL10fromY@@Base+0x443e8>
pushq  $0x8c
jmpq   8020 <.plt>

0000000000008900 <_TIFFmemcmp@plt>:
jmpq   *0x71b7a(%rip)        # 7a480 <_TIFFmemcmp@@Base+0x299a0>
pushq  $0x8d
jmpq   8020 <.plt>

0000000000008910 <TIFFTileSize@plt>:
jmpq   *0x71b72(%rip)        # 7a488 <TIFFTileSize@@Base+0x2cae8>
pushq  $0x8e
jmpq   8020 <.plt>

0000000000008920 <atan2@plt>:
jmpq   *0x71b6a(%rip)        # 7a490 <atan2@GLIBC_2.2.5>
pushq  $0x8f
jmpq   8020 <.plt>

0000000000008930 <TIFFSwabArrayOfLong8@plt>:
jmpq   *0x71b62(%rip)        # 7a498 <TIFFSwabArrayOfLong8@@Base+0x2d288>
pushq  $0x90
jmpq   8020 <.plt>

0000000000008940 <_TIFFGetFields@plt>:
jmpq   *0x71b5a(%rip)        # 7a4a0 <_TIFFGetFields@@Base+0x69940>
pushq  $0x91
jmpq   8020 <.plt>

0000000000008950 <_TIFFgetMode@plt>:
jmpq   *0x71b52(%rip)        # 7a4a8 <_TIFFgetMode@@Base+0x38358>
pushq  $0x92
jmpq   8020 <.plt>

0000000000008960 <deflateEnd@plt>:
jmpq   *0x71b4a(%rip)        # 7a4b0 <deflateEnd>
pushq  $0x93
jmpq   8020 <.plt>

0000000000008970 <TIFFWriteBufferSetup@plt>:
jmpq   *0x71b42(%rip)        # 7a4b8 <TIFFWriteBufferSetup@@Base+0x2c2b8>
pushq  $0x94
jmpq   8020 <.plt>

0000000000008980 <TIFFYCbCrToRGBInit@plt>:
jmpq   *0x71b3a(%rip)        # 7a4c0 <TIFFYCbCrToRGBInit@@Base+0x6fd60>
pushq  $0x95
jmpq   8020 <.plt>

0000000000008990 <TIFFReadRGBAStripExt@plt>:
jmpq   *0x71b32(%rip)        # 7a4c8 <TIFFReadRGBAStripExt@@Base+0x51cb8>
pushq  $0x96
jmpq   8020 <.plt>

00000000000089a0 <TIFFVSetField@plt>:
jmpq   *0x71b2a(%rip)        # 7a4d0 <TIFFVSetField@@Base+0x6e7c0>
pushq  $0x97
jmpq   8020 <.plt>

00000000000089b0 <realloc@plt>:
jmpq   *0x71b22(%rip)        # 7a4d8 <realloc@GLIBC_2.2.5>
pushq  $0x98
jmpq   8020 <.plt>

00000000000089c0 <jpeg_CreateCompress@plt>:
jmpq   *0x71b1a(%rip)        # 7a4e0 <jpeg_CreateCompress@LIBJPEG_8.0>
pushq  $0x99
jmpq   8020 <.plt>

00000000000089d0 <TIFFReadEncodedTile@plt>:
jmpq   *0x71b12(%rip)        # 7a4e8 <TIFFReadEncodedTile@@Base+0x2fde8>
pushq  $0x9a
jmpq   8020 <.plt>

00000000000089e0 <munmap@plt>:
jmpq   *0x71b0a(%rip)        # 7a4f0 <munmap@GLIBC_2.2.5>
pushq  $0x9b
jmpq   8020 <.plt>

00000000000089f0 <jpeg_std_error@plt>:
jmpq   *0x71b02(%rip)        # 7a4f8 <jpeg_std_error@LIBJPEG_8.0>
pushq  $0x9c
jmpq   8020 <.plt>

0000000000008a00 <TIFFErrorExt@plt>:
jmpq   *0x71afa(%rip)        # 7a500 <TIFFErrorExt@@Base+0x58ac0>
pushq  $0x9d
jmpq   8020 <.plt>

0000000000008a10 <TIFFFillTile@plt>:
jmpq   *0x71af2(%rip)        # 7a508 <TIFFFillTile@@Base+0x2f1a8>
pushq  $0x9e
jmpq   8020 <.plt>

0000000000008a20 <inflateInit_@plt>:
jmpq   *0x71aea(%rip)        # 7a510 <inflateInit_>
pushq  $0x9f
jmpq   8020 <.plt>

0000000000008a30 <jpeg_read_header@plt>:
jmpq   *0x71ae2(%rip)        # 7a518 <jpeg_read_header@LIBJPEG_8.0>
pushq  $0xa0
jmpq   8020 <.plt>

0000000000008a40 <longjmp@plt>:
jmpq   *0x71ada(%rip)        # 7a520 <longjmp@GLIBC_2.2.5>
pushq  $0xa1
jmpq   8020 <.plt>

0000000000008a50 <memmove@plt>:
jmpq   *0x71ad2(%rip)        # 7a528 <memmove@GLIBC_2.2.5>
pushq  $0xa2
jmpq   8020 <.plt>

0000000000008a60 <TIFFSwabArrayOfTriples@plt>:
jmpq   *0x71aca(%rip)        # 7a530 <TIFFSwabArrayOfTriples@@Base+0x2d380>
pushq  $0xa3
jmpq   8020 <.plt>

0000000000008a70 <TIFFCleanup@plt>:
jmpq   *0x71ac2(%rip)        # 7a538 <TIFFCleanup@@Base+0x705f8>
pushq  $0xa4
jmpq   8020 <.plt>

0000000000008a80 <TIFFClientOpen@plt>:
jmpq   *0x71aba(%rip)        # 7a540 <TIFFClientOpen@@Base+0x38c70>
pushq  $0xa5
jmpq   8020 <.plt>

0000000000008a90 <TIFFSetWriteOffset@plt>:
jmpq   *0x71ab2(%rip)        # 7a548 <TIFFSetWriteOffset@@Base+0x2acc8>
pushq  $0xa6
jmpq   8020 <.plt>

0000000000008aa0 <_TIFFsetByteArray@plt>:
jmpq   *0x71aaa(%rip)        # 7a550 <_TIFFsetByteArray@@Base+0x6e4f0>
pushq  $0xa7
jmpq   8020 <.plt>

0000000000008ab0 <_TIFFReadEncodedStripAndAllocBuffer@plt>:
jmpq   *0x71aa2(%rip)        # 7a558 <_TIFFReadEncodedStripAndAllocBuffer@@Base+0x2fa58>
pushq  $0xa8
jmpq   8020 <.plt>

0000000000008ac0 <TIFFPredictorInit@plt>:
jmpq   *0x71a9a(%rip)        # 7a560 <TIFFPredictorInit@@Base+0x33a40>
pushq  $0xa9
jmpq   8020 <.plt>

0000000000008ad0 <TIFFIsCODECConfigured@plt>:
jmpq   *0x71a92(%rip)        # 7a568 <TIFFIsCODECConfigured@@Base+0x70408>
pushq  $0xaa
jmpq   8020 <.plt>

0000000000008ae0 <TIFFFieldWithTag@plt>:
jmpq   *0x71a8a(%rip)        # 7a570 <TIFFFieldWithTag@@Base+0x69e00>
pushq  $0xab
jmpq   8020 <.plt>

0000000000008af0 <TIFFWriteDirectory@plt>:
jmpq   *0x71a82(%rip)        # 7a578 <TIFFWriteDirectory@@Base+0x5e558>
pushq  $0xac
jmpq   8020 <.plt>

0000000000008b00 <open@plt>:
jmpq   *0x71a7a(%rip)        # 7a580 <open@GLIBC_2.2.5>
pushq  $0xad
jmpq   8020 <.plt>

0000000000008b10 <TIFFTileRowSize64@plt>:
jmpq   *0x71a72(%rip)        # 7a588 <TIFFTileRowSize64@@Base+0x2cd18>
pushq  $0xae
jmpq   8020 <.plt>

0000000000008b20 <jpeg_set_defaults@plt>:
jmpq   *0x71a6a(%rip)        # 7a590 <jpeg_set_defaults@LIBJPEG_8.0>
pushq  $0xaf
jmpq   8020 <.plt>

0000000000008b30 <TIFFReadDirectory@plt>:
jmpq   *0x71a62(%rip)        # 7a598 <TIFFReadDirectory@@Base+0x68e28>
pushq  $0xb0
jmpq   8020 <.plt>

0000000000008b40 <TIFFCIELabToRGBInit@plt>:
jmpq   *0x71a5a(%rip)        # 7a5a0 <TIFFCIELabToRGBInit@@Base+0x70350>
pushq  $0xb1
jmpq   8020 <.plt>

0000000000008b50 <vfprintf@plt>:
jmpq   *0x71a52(%rip)        # 7a5a8 <vfprintf@GLIBC_2.2.5>
pushq  $0xb2
jmpq   8020 <.plt>

0000000000008b60 <_TIFFCheckFieldIsValidForCodec@plt>:
jmpq   *0x71a4a(%rip)        # 7a5b0 <_TIFFCheckFieldIsValidForCodec@@Base+0x69430>
pushq  $0xb3
jmpq   8020 <.plt>

0000000000008b70 <TIFFSwabArrayOfLong@plt>:
jmpq   *0x71a42(%rip)        # 7a5b8 <TIFFSwabArrayOfLong@@Base+0x2d3d8>
pushq  $0xb4
jmpq   8020 <.plt>

0000000000008b80 <floor@plt>:
jmpq   *0x71a3a(%rip)        # 7a5c0 <floor@GLIBC_2.2.5>
pushq  $0xb5
jmpq   8020 <.plt>

0000000000008b90 <atoi@plt>:
jmpq   *0x71a32(%rip)        # 7a5c8 <atoi@GLIBC_2.2.5>
pushq  $0xb6
jmpq   8020 <.plt>

0000000000008ba0 <LogLuv32fromXYZ@plt>:
jmpq   *0x71a2a(%rip)        # 7a5d0 <LogLuv32fromXYZ@@Base+0x441f0>
pushq  $0xb7
jmpq   8020 <.plt>

0000000000008bb0 <_TIFFfree@plt>:
jmpq   *0x71a22(%rip)        # 7a5d8 <_TIFFfree@@Base+0x29ae8>
pushq  $0xb8
jmpq   8020 <.plt>

0000000000008bc0 <jpeg_start_compress@plt>:
jmpq   *0x71a1a(%rip)        # 7a5e0 <jpeg_start_compress@LIBJPEG_8.0>
pushq  $0xb9
jmpq   8020 <.plt>

0000000000008bd0 <inflateReset@plt>:
jmpq   *0x71a12(%rip)        # 7a5e8 <inflateReset>
pushq  $0xba
jmpq   8020 <.plt>

0000000000008be0 <fabs@plt>:
jmpq   *0x71a0a(%rip)        # 7a5f0 <fabs@GLIBC_2.2.5>
pushq  $0xbb
jmpq   8020 <.plt>

0000000000008bf0 <TIFFRGBAImageBegin@plt>:
jmpq   *0x71a02(%rip)        # 7a5f8 <TIFFRGBAImageBegin@@Base+0x51508>
pushq  $0xbc
jmpq   8020 <.plt>

0000000000008c00 <TIFFVStripSize64@plt>:
jmpq   *0x719fa(%rip)        # 7a600 <TIFFVStripSize64@@Base+0x2d8b0>
pushq  $0xbd
jmpq   8020 <.plt>

0000000000008c10 <sprintf@plt>:
jmpq   *0x719f2(%rip)        # 7a608 <sprintf@GLIBC_2.2.5>
pushq  $0xbe
jmpq   8020 <.plt>

0000000000008c20 <bsearch@plt>:
jmpq   *0x719ea(%rip)        # 7a610 <bsearch@GLIBC_2.2.5>
pushq  $0xbf
jmpq   8020 <.plt>

0000000000008c30 <lzma_stream_encoder@plt>:
jmpq   *0x719e2(%rip)        # 7a618 <lzma_stream_encoder@XZ_5.0>
pushq  $0xc0
jmpq   8020 <.plt>

0000000000008c40 <TIFFTileSize64@plt>:
jmpq   *0x719da(%rip)        # 7a620 <TIFFTileSize64@@Base+0x2cc90>
pushq  $0xc1
jmpq   8020 <.plt>

0000000000008c50 <TIFFGetTagListCount@plt>:
jmpq   *0x719d2(%rip)        # 7a628 <TIFFGetTagListCount@@Base+0x58ab8>
pushq  $0xc2
jmpq   8020 <.plt>

0000000000008c60 <sqrt@plt>:
jmpq   *0x719ca(%rip)        # 7a630 <sqrt@GLIBC_2.2.5>
pushq  $0xc3
jmpq   8020 <.plt>

0000000000008c70 <_TIFFFillStriles@plt>:
jmpq   *0x719c2(%rip)        # 7a638 <_TIFFFillStriles@@Base+0x67178>
pushq  $0xc4
jmpq   8020 <.plt>

0000000000008c80 <LogLuv24toXYZ@plt>:
jmpq   *0x719ba(%rip)        # 7a640 <LogLuv24toXYZ@@Base+0x449b0>
pushq  $0xc5
jmpq   8020 <.plt>

0000000000008c90 <jpeg_finish_compress@plt>:
jmpq   *0x719b2(%rip)        # 7a648 <jpeg_finish_compress@LIBJPEG_8.0>
pushq  $0xc6
jmpq   8020 <.plt>

0000000000008ca0 <strerror@plt>:
jmpq   *0x719aa(%rip)        # 7a650 <strerror@GLIBC_2.2.5>
pushq  $0xc7
jmpq   8020 <.plt>

0000000000008cb0 <lzma_lzma_preset@plt>:
jmpq   *0x719a2(%rip)        # 7a658 <lzma_lzma_preset@XZ_5.0>
pushq  $0xc8
jmpq   8020 <.plt>

0000000000008cc0 <_TIFFprintAscii@plt>:
jmpq   *0x7199a(%rip)        # 7a660 <_TIFFprintAscii@@Base+0x30c30>
pushq  $0xc9
jmpq   8020 <.plt>

0000000000008cd0 <inflateSync@plt>:
jmpq   *0x71992(%rip)        # 7a668 <inflateSync>
pushq  $0xca
jmpq   8020 <.plt>

0000000000008ce0 <LogL16toY@plt>:
jmpq   *0x7198a(%rip)        # 7a670 <LogL16toY@@Base+0x44d60>
pushq  $0xcb
jmpq   8020 <.plt>

0000000000008cf0 <TIFFWriteEncodedTile@plt>:
jmpq   *0x71982(%rip)        # 7a678 <TIFFWriteEncodedTile@@Base+0x2b3f8>
pushq  $0xcc
jmpq   8020 <.plt>

0000000000008d00 <_TIFFCheckRealloc@plt>:
jmpq   *0x7197a(%rip)        # 7a680 <_TIFFCheckRealloc@@Base+0x70bd0>
pushq  $0xcd
jmpq   8020 <.plt>

0000000000008d10 <rand@plt>:
jmpq   *0x71972(%rip)        # 7a688 <rand@GLIBC_2.2.5>
pushq  $0xce
jmpq   8020 <.plt>

0000000000008d20 <__ctype_b_loc@plt>:
jmpq   *0x7196a(%rip)        # 7a690 <__ctype_b_loc@GLIBC_2.3>
pushq  $0xcf
jmpq   8020 <.plt>

0000000000008d30 <TIFFXYZToRGB@plt>:
jmpq   *0x71962(%rip)        # 7a698 <TIFFXYZToRGB@@Base+0x70118>
pushq  $0xd0
jmpq   8020 <.plt>

Disassembly of section .text:

0000000000008d40 <deregister_tm_clones>:
lea    0x71b49(%rip),%rdi        # 7a890 <_edata>
lea    0x71b42(%rip),%rax        # 7a890 <_edata>
cmp    %rdi,%rax
je     8d68 <deregister_tm_clones+0x28>
mov    0x7119e(%rip),%rax        # 79ef8 <_ITM_deregisterTMCloneTable>
test   %rax,%rax
je     8d68 <deregister_tm_clones+0x28>
jmpq   *%rax
nopl   0x0(%rax)
retq   
nopl   0x0(%rax)

0000000000008d70 <register_tm_clones>:
lea    0x71b19(%rip),%rdi        # 7a890 <_edata>
lea    0x71b12(%rip),%rsi        # 7a890 <_edata>
sub    %rdi,%rsi
sar    $0x3,%rsi
mov    %rsi,%rax
shr    $0x3f,%rax
add    %rax,%rsi
sar    %rsi
je     8da8 <register_tm_clones+0x38>
mov    0x7124d(%rip),%rax        # 79fe8 <_ITM_registerTMCloneTable>
test   %rax,%rax
je     8da8 <register_tm_clones+0x38>
jmpq   *%rax
nopw   0x0(%rax,%rax,1)
retq   
nopl   0x0(%rax)

0000000000008db0 <__do_global_dtors_aux>:
endbr64 
cmpb   $0x0,0x71ad5(%rip)        # 7a890 <_edata>
jne    8df0 <__do_global_dtors_aux+0x40>
push   %rbp
cmpq   $0x0,0x7122a(%rip)        # 79ff0 <__cxa_finalize@GLIBC_2.2.5>
mov    %rsp,%rbp
je     8dd8 <__do_global_dtors_aux+0x28>
mov    0x718ce(%rip),%rdi        # 7a6a0 <__dso_handle>
callq  *0x71218(%rip)        # 79ff0 <__cxa_finalize@GLIBC_2.2.5>
callq  8d40 <deregister_tm_clones>
movb   $0x1,0x71aac(%rip)        # 7a890 <_edata>
pop    %rbp
retq   
nopw   %cs:0x0(%rax,%rax,1)
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   0x0(%rax)

0000000000008e00 <frame_dummy>:
endbr64 
jmpq   8d70 <register_tm_clones>
nopl   0x0(%rax)

0000000000008e10 <TIFFGetFieldDefaulted>:
push   %rbp
mov    %rsp,%rbp
sub    $0xd0,%rsp
mov    %rdx,-0xa0(%rbp)
mov    %rcx,-0x98(%rbp)
mov    %r8,-0x90(%rbp)
mov    %r9,-0x88(%rbp)
movsd  %xmm0,-0x80(%rbp)
movsd  %xmm1,-0x70(%rbp)
movsd  %xmm2,-0x60(%rbp)
movsd  %xmm3,-0x50(%rbp)
movsd  %xmm4,-0x40(%rbp)
movsd  %xmm5,-0x30(%rbp)
movsd  %xmm6,-0x20(%rbp)
movsd  %xmm7,-0x10(%rbp)
lea    -0xc8(%rbp),%rdx
movl   $0x10,(%rdx)
movl   $0x30,0x4(%rdx)
lea    -0xb0(%rbp),%rax
mov    %rax,0x10(%rdx)
lea    0x10(%rbp),%rax
mov    %rax,0x8(%rdx)
callq  8450 <TIFFVGetFieldDefaulted@plt>
leaveq 
retq   
nopl   (%rax)

0000000000008e90 <TIFFVGetFieldDefaulted>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %rdi,-0x10(%rbp)
mov    %rsi,-0x18(%rbp)
mov    %rdx,-0x8(%rbp)
callq  8250 <TIFFVGetField@plt>
test   %eax,%eax
je     8eb4 <TIFFVGetFieldDefaulted+0x24>
mov    $0x1,%eax
leaveq 
retq   
xor    %eax,%eax
mov    -0x10(%rbp),%rcx
lea    0x38(%rcx),%rdi
mov    -0x18(%rbp),%rdx
cmp    $0x13d,%edx
jbe    8f1e <TIFFVGetFieldDefaulted+0x8e>
cmp    $0x211,%edx
jbe    8f5c <TIFFVGetFieldDefaulted+0xcc>
cmp    $0x80e2,%edx
jbe    8fa4 <TIFFVGetFieldDefaulted+0x114>
cmp    $0x80e4,%edx
jbe    8fe0 <TIFFVGetFieldDefaulted+0x150>
cmp    $0x80e5,%edx
jne    9010 <TIFFVGetFieldDefaulted+0x180>
mov    -0x8(%rbp),%rsi
movslq (%rsi),%rdx
cmp    $0x2f,%edx
jle    901e <TIFFVGetFieldDefaulted+0x18e>
mov    0x8(%rsi),%rdx
lea    0x8(%rdx),%rax
mov    %rax,0x8(%rsi)
mov    (%rdx),%rax
jmpq   902b <TIFFVGetFieldDefaulted+0x19b>
cmp    $0x115,%edx
jbe    9037 <TIFFVGetFieldDefaulted+0x1a7>
cmp    $0x11b,%edx
jbe    907f <TIFFVGetFieldDefaulted+0x1ef>
cmp    $0x12c,%edx
jbe    90bb <TIFFVGetFieldDefaulted+0x22b>
cmp    $0x12d,%edx
je     90eb <TIFFVGetFieldDefaulted+0x25b>
cmp    $0x13d,%edx
je     911f <TIFFVGetFieldDefaulted+0x28f>
leaveq 
retq   
cmp    $0x14f,%edx
jbe    9153 <TIFFVGetFieldDefaulted+0x2c3>
cmp    $0x152,%edx
jbe    918f <TIFFVGetFieldDefaulted+0x2ff>
cmp    $0x153,%edx
jne    91bf <TIFFVGetFieldDefaulted+0x32f>
mov    -0x8(%rbp),%rsi
movslq (%rsi),%rdx
cmp    $0x2f,%edx
jle    91cd <TIFFVGetFieldDefaulted+0x33d>
mov    0x8(%rsi),%rdx
lea    0x8(%rdx),%rax
mov    %rax,0x8(%rsi)
mov    (%rdx),%rax
jmpq   91da <TIFFVGetFieldDefaulted+0x34a>
cmp    $0x212,%edx
jbe    91e8 <TIFFVGetFieldDefaulted+0x358>
cmp    $0x213,%edx
jne    91f6 <TIFFVGetFieldDefaulted+0x366>
mov    -0x8(%rbp),%rsi
movslq (%rsi),%rdx
cmp    $0x2f,%edx
jle    9204 <TIFFVGetFieldDefaulted+0x374>
mov    0x8(%rsi),%rdx
lea    0x8(%rdx),%rax
mov    %rax,0x8(%rsi)
mov    (%rdx),%rax
jmpq   9211 <TIFFVGetFieldDefaulted+0x381>
cmp    $0x80e3,%edx
jne    9222 <TIFFVGetFieldDefaulted+0x392>
mov    -0x8(%rbp),%rdi
movslq (%rdi),%rsi
cmp    $0x2f,%esi
jle    9230 <TIFFVGetFieldDefaulted+0x3a0>
mov    0x8(%rdi),%rsi
lea    0x8(%rsi),%rdx
mov    %rdx,0x8(%rdi)
mov    (%rsi),%rdx
jmpq   923d <TIFFVGetFieldDefaulted+0x3ad>
cmp    $0x80e6,%edx
je     9258 <TIFFVGetFieldDefaulted+0x3c8>
leaveq 
retq   
mov    0x10(%rsi),%rax
mov    (%rax,%rdx,1),%rax
add    $0x8,%edx
mov    %edx,(%rsi)
mov    0x60(%rcx),%ecx
mov    %ecx,(%rax)
mov    $0x1,%eax
leaveq 
retq   
cmp    $0x109,%edx
jbe    927c <TIFFVGetFieldDefaulted+0x3ec>
cmp    $0x111,%edx
jbe    92b8 <TIFFVGetFieldDefaulted+0x428>
cmp    $0x112,%edx
jne    92c6 <TIFFVGetFieldDefaulted+0x436>
mov    -0x8(%rbp),%rsi
movslq (%rsi),%rdx
cmp    $0x2f,%edx
jle    92d4 <TIFFVGetFieldDefaulted+0x444>
mov    0x8(%rsi),%rdx
lea    0x8(%rdx),%rax
mov    %rax,0x8(%rsi)
mov    (%rdx),%rax
jmpq   92e1 <TIFFVGetFieldDefaulted+0x451>
cmp    $0x117,%edx
jbe    92f2 <TIFFVGetFieldDefaulted+0x462>
cmp    $0x118,%edx
jne    9300 <TIFFVGetFieldDefaulted+0x470>
mov    -0x8(%rbp),%rsi
movslq (%rsi),%rdx
cmp    $0x2f,%edx
jle    930e <TIFFVGetFieldDefaulted+0x47e>
mov    0x8(%rsi),%rdx
lea    0x8(%rdx),%rax
mov    %rax,0x8(%rsi)
mov    (%rdx),%rax
jmpq   931b <TIFFVGetFieldDefaulted+0x48b>
cmp    $0x11c,%edx
jne    932c <TIFFVGetFieldDefaulted+0x49c>
mov    -0x8(%rbp),%rsi
movslq (%rsi),%rdx
cmp    $0x2f,%edx
jle    933a <TIFFVGetFieldDefaulted+0x4aa>
mov    0x8(%rsi),%rdx
lea    0x8(%rdx),%rax
mov    %rax,0x8(%rsi)
mov    (%rdx),%rax
jmpq   9347 <TIFFVGetFieldDefaulted+0x4b7>
mov    0x110(%rcx),%rax
test   %rax,%rax
je     9358 <TIFFVGetFieldDefaulted+0x4c8>
mov    -0x8(%rbp),%rsi
movslq (%rsi),%rdx
cmp    $0x2f,%edx
jle    9378 <TIFFVGetFieldDefaulted+0x4e8>
mov    0x8(%rsi),%rdx
lea    0x8(%rdx),%rax
mov    %rax,0x8(%rsi)
mov    (%rdx),%rax
jmpq   9385 <TIFFVGetFieldDefaulted+0x4f5>
mov    0x350(%rcx),%rdx
test   %rdx,%rdx
je     93af <TIFFVGetFieldDefaulted+0x51f>
mov    -0x8(%rbp),%rsi
movslq (%rsi),%rcx
cmp    $0x2f,%ecx
jle    93eb <TIFFVGetFieldDefaulted+0x55b>
mov    0x8(%rsi),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rsi)
mov    (%rcx),%rax
jmpq   93f8 <TIFFVGetFieldDefaulted+0x568>
cmp    $0x14b,%edx
jbe    9405 <TIFFVGetFieldDefaulted+0x575>
cmp    $0x14c,%edx
jne    9413 <TIFFVGetFieldDefaulted+0x583>
mov    -0x8(%rbp),%rdx
movslq (%rdx),%rcx
cmp    $0x2f,%ecx
jle    9421 <TIFFVGetFieldDefaulted+0x591>
mov    0x8(%rdx),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rdx)
mov    (%rcx),%rax
jmpq   942e <TIFFVGetFieldDefaulted+0x59e>
cmp    $0x150,%edx
jne    943a <TIFFVGetFieldDefaulted+0x5aa>
mov    -0x8(%rbp),%rdi
movslq (%rdi),%rdx
cmp    $0x2f,%edx
jle    9448 <TIFFVGetFieldDefaulted+0x5b8>
mov    0x8(%rdi),%rdx
lea    0x8(%rdx),%rax
mov    %rax,0x8(%rdi)
mov    (%rdx),%rax
jmpq   9455 <TIFFVGetFieldDefaulted+0x5c5>
cmp    $0x211,%edx
je     947a <TIFFVGetFieldDefaulted+0x5ea>
leaveq 
retq   
mov    0x10(%rsi),%rax
mov    (%rax,%rdx,1),%rax
add    $0x8,%edx
mov    %edx,(%rsi)
movzwl 0x76(%rcx),%ecx
mov    %cx,(%rax)
mov    $0x1,%eax
leaveq 
retq   
cmp    $0x212,%edx
je     949e <TIFFVGetFieldDefaulted+0x60e>
leaveq 
retq   
cmp    $0x214,%edx
je     94c2 <TIFFVGetFieldDefaulted+0x632>
leaveq 
retq   
mov    0x10(%rsi),%rax
mov    (%rax,%rdx,1),%rax
add    $0x8,%edx
mov    %edx,(%rsi)
movzwl 0x10c(%rcx),%ecx
mov    %cx,(%rax)
mov    $0x1,%eax
leaveq 
retq   
cmp    $0x80e4,%edx
je     94f6 <TIFFVGetFieldDefaulted+0x666>
leaveq 
retq   
mov    0x10(%rdi),%rdx
mov    (%rdx,%rsi,1),%rdx
add    $0x8,%esi
mov    %esi,(%rdi)
movzwl 0xd4(%rcx),%esi
cmp    $0x1,%si
je     951a <TIFFVGetFieldDefaulted+0x68a>
mov    %ax,(%rdx)
mov    $0x1,%eax
leaveq 
retq   
mov    -0x8(%rbp),%rsi
movslq (%rsi),%rdx
cmp    $0x2f,%edx
jle    9538 <TIFFVGetFieldDefaulted+0x6a8>
mov    0x8(%rsi),%rdx
lea    0x8(%rdx),%rax
mov    %rax,0x8(%rsi)
mov    (%rdx),%rax
jmpq   9545 <TIFFVGetFieldDefaulted+0x6b5>
cmp    $0x101,%edx
jbe    9551 <TIFFVGetFieldDefaulted+0x6c1>
cmp    $0x102,%edx
jne    955f <TIFFVGetFieldDefaulted+0x6cf>
mov    -0x8(%rbp),%rsi
movslq (%rsi),%rdx
cmp    $0x2f,%edx
jle    956d <TIFFVGetFieldDefaulted+0x6dd>
mov    0x8(%rsi),%rdx
lea    0x8(%rdx),%rax
mov    %rax,0x8(%rsi)
mov    (%rdx),%rax
jmpq   957a <TIFFVGetFieldDefaulted+0x6ea>
cmp    $0x10a,%edx
je     9588 <TIFFVGetFieldDefaulted+0x6f8>
leaveq 
retq   
cmp    $0x115,%edx
je     95ac <TIFFVGetFieldDefaulted+0x71c>
leaveq 
retq   
mov    0x10(%rsi),%rax
mov    (%rax,%rdx,1),%rax
add    $0x8,%edx
mov    %edx,(%rsi)
movzwl 0x80(%rcx),%ecx
mov    %cx,(%rax)
mov    $0x1,%eax
leaveq 
retq   
cmp    $0x116,%edx
je     95d0 <TIFFVGetFieldDefaulted+0x740>
leaveq 
retq   
cmp    $0x119,%edx
je     95f4 <TIFFVGetFieldDefaulted+0x764>
leaveq 
retq   
mov    0x10(%rsi),%rax
mov    (%rax,%rdx,1),%rax
add    $0x8,%edx
mov    %edx,(%rsi)
movzwl 0x88(%rcx),%ecx
mov    %cx,(%rax)
mov    $0x1,%eax
leaveq 
retq   
cmp    $0x128,%edx
je     9618 <TIFFVGetFieldDefaulted+0x788>
leaveq 
retq   
mov    0x10(%rsi),%rax
mov    (%rax,%rdx,1),%rax
add    $0x8,%edx
mov    %edx,(%rsi)
movzwl 0xaa(%rcx),%ecx
mov    %cx,(%rax)
mov    $0x1,%eax
leaveq 
retq   
mov    %r15,-0x18(%rbp)
mov    %rcx,%r15
callq  9c40 <TIFFDefaultTransferFunction>
test   %eax,%eax
je     963c <TIFFVGetFieldDefaulted+0x7ac>
mov    %r15,%rcx
mov    -0x18(%rbp),%r15
jmpq   90fb <TIFFVGetFieldDefaulted+0x26b>
mov    0x10(%rsi),%rax
mov    (%rax,%rdx,1),%rax
add    $0x8,%edx
mov    %edx,(%rsi)
mov    0x110(%rcx),%rdx
mov    %rdx,(%rax)
movzwl 0x82(%rcx),%eax
movzwl 0xd4(%rcx),%edx
sub    %edx,%eax
cmp    $0x1,%eax
jg     965c <TIFFVGetFieldDefaulted+0x7cc>
mov    $0x1,%eax
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rcx),%rdi
mov    (%rcx),%rsi
lea    0x47c3e(%rip),%rdx        # 51000 <_fini+0x1c>
callq  8a00 <TIFFErrorExt@plt>
mov    -0x8(%rbp),%rdx
movslq (%rdx),%rcx
cmp    $0x2f,%ecx
jle    967c <TIFFVGetFieldDefaulted+0x7ec>
mov    0x8(%rdx),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rdx)
mov    (%rcx),%rax
jmpq   9689 <TIFFVGetFieldDefaulted+0x7f9>
mov    0x10(%rsi),%rax
mov    (%rax,%rcx,1),%rax
add    $0x8,%ecx
mov    %ecx,(%rsi)
movzwl (%rdx),%ecx
mov    %cx,(%rax)
mov    $0x1,%eax
leaveq 
retq   
cmp    $0x13e,%edx
je     9692 <TIFFVGetFieldDefaulted+0x802>
leaveq 
retq   
cmp    $0x14e,%edx
je     96d6 <TIFFVGetFieldDefaulted+0x846>
leaveq 
retq   
mov    0x10(%rdx),%rax
mov    (%rax,%rcx,1),%rax
add    $0x8,%ecx
mov    %ecx,(%rdx)
movw   $0x1,(%rax)
mov    $0x1,%eax
leaveq 
retq   
cmp    $0x152,%edx
je     96fa <TIFFVGetFieldDefaulted+0x86a>
leaveq 
retq   
mov    0x10(%rdi),%rax
mov    (%rax,%rdx,1),%rax
add    $0x8,%edx
mov    %edx,(%rdi)
movw   $0x0,(%rax)
movslq (%rdi),%rsi
cmp    $0x2f,%esi
jle    971e <TIFFVGetFieldDefaulted+0x88e>
mov    0x8(%rdi),%rdx
lea    0x8(%rdx),%rax
mov    %rax,0x8(%rdi)
mov    (%rdx),%rdx
jmpq   972b <TIFFVGetFieldDefaulted+0x89b>
mov    -0x8(%rbp),%rdx
movslq (%rdx),%rcx
cmp    $0x2f,%ecx
jle    9744 <TIFFVGetFieldDefaulted+0x8b4>
mov    0x8(%rdx),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rdx)
mov    (%rcx),%rax
jmpq   9751 <TIFFVGetFieldDefaulted+0x8c1>
mov    -0x8(%rbp),%rsi
movslq (%rsi),%rdx
cmp    $0x2f,%edx
jle    9762 <TIFFVGetFieldDefaulted+0x8d2>
mov    0x8(%rsi),%rdx
lea    0x8(%rdx),%rax
mov    %rax,0x8(%rsi)
mov    (%rdx),%rax
jmpq   976f <TIFFVGetFieldDefaulted+0x8df>
mov    0x128(%rcx),%rax
test   %rax,%rax
je     9799 <TIFFVGetFieldDefaulted+0x909>
mov    -0x8(%rbp),%rsi
movslq (%rsi),%rdx
cmp    $0x2f,%edx
jle    97af <TIFFVGetFieldDefaulted+0x91f>
mov    0x8(%rsi),%rdx
lea    0x8(%rdx),%rax
mov    %rax,0x8(%rsi)
mov    (%rdx),%rax
jmpq   97bc <TIFFVGetFieldDefaulted+0x92c>
mov    -0x8(%rbp),%rsi
movslq (%rsi),%rdx
cmp    $0x2f,%edx
jle    97cd <TIFFVGetFieldDefaulted+0x93d>
mov    0x8(%rsi),%rdx
lea    0x8(%rdx),%rax
mov    %rax,0x8(%rsi)
mov    (%rdx),%rax
jmpq   97da <TIFFVGetFieldDefaulted+0x94a>
mov    0xd8(%rcx),%rcx
movzwl (%rcx),%ecx
cmp    $0x1,%cx
jne    924e <TIFFVGetFieldDefaulted+0x3be>
mov    $0x1,%eax
jmpq   924e <TIFFVGetFieldDefaulted+0x3be>
mov    0x10(%rsi),%rax
mov    (%rax,%rdx,1),%rax
add    $0x8,%edx
mov    %edx,(%rsi)
mov    0x6c(%rcx),%ecx
mov    %ecx,(%rax)
mov    $0x1,%eax
leaveq 
retq   
cmp    $0xfe,%edx
je     97ee <TIFFVGetFieldDefaulted+0x95e>
leaveq 
retq   
cmp    $0x107,%edx
je     9812 <TIFFVGetFieldDefaulted+0x982>
leaveq 
retq   
mov    0x10(%rsi),%rax
mov    (%rax,%rdx,1),%rax
add    $0x8,%edx
mov    %edx,(%rsi)
movzwl 0x74(%rcx),%ecx
mov    %cx,(%rax)
mov    $0x1,%eax
leaveq 
retq   
mov    -0x8(%rbp),%rsi
movslq (%rsi),%rdx
cmp    $0x2f,%edx
jle    9836 <TIFFVGetFieldDefaulted+0x9a6>
mov    0x8(%rsi),%rdx
lea    0x8(%rdx),%rax
mov    %rax,0x8(%rsi)
mov    (%rdx),%rax
jmpq   9843 <TIFFVGetFieldDefaulted+0x9b3>
mov    -0x8(%rbp),%rsi
movslq (%rsi),%rdx
cmp    $0x2f,%edx
jle    9851 <TIFFVGetFieldDefaulted+0x9c1>
mov    0x8(%rsi),%rdx
lea    0x8(%rdx),%rax
mov    %rax,0x8(%rsi)
mov    (%rdx),%rax
jmpq   985e <TIFFVGetFieldDefaulted+0x9ce>
mov    -0x8(%rbp),%rsi
movslq (%rsi),%rdx
cmp    $0x2f,%edx
jle    986f <TIFFVGetFieldDefaulted+0x9df>
mov    0x8(%rsi),%rdx
lea    0x8(%rdx),%rax
mov    %rax,0x8(%rsi)
mov    (%rdx),%rax
jmpq   987c <TIFFVGetFieldDefaulted+0x9ec>
mov    -0x8(%rbp),%rsi
movslq (%rsi),%rdx
cmp    $0x2f,%edx
jle    988b <TIFFVGetFieldDefaulted+0x9fb>
mov    0x8(%rsi),%rdx
lea    0x8(%rdx),%rax
mov    %rax,0x8(%rsi)
mov    (%rdx),%rax
jmpq   9898 <TIFFVGetFieldDefaulted+0xa08>
mov    -0x8(%rbp),%rsi
movslq (%rsi),%rdx
cmp    $0x2f,%edx
jle    98a9 <TIFFVGetFieldDefaulted+0xa19>
mov    0x8(%rsi),%rdx
lea    0x8(%rdx),%rax
mov    %rax,0x8(%rsi)
mov    (%rdx),%rax
jmpq   98b6 <TIFFVGetFieldDefaulted+0xa26>
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
mov    (%r15),%rsi
lea    0x479e8(%rip),%rdx        # 51037 <_fini+0x53>
callq  8a00 <TIFFErrorExt@plt>
mov    -0x18(%rbp),%r15
xor    %eax,%eax
leaveq 
retq   
movslq (%rsi),%rdx
cmp    $0x2f,%edx
jle    98c7 <TIFFVGetFieldDefaulted+0xa37>
mov    0x8(%rsi),%rdx
lea    0x8(%rdx),%rax
mov    %rax,0x8(%rsi)
mov    (%rdx),%rax
jmpq   98d4 <TIFFVGetFieldDefaulted+0xa44>
mov    0x10(%rdx),%rax
mov    (%rax,%rcx,1),%rax
add    $0x8,%ecx
mov    %ecx,(%rdx)
movw   $0x0,(%rax)
xor    %eax,%eax
leaveq 
retq   
movss  0x47a1e(%rip),%xmm0        # 510b8 <_fini+0xd4>
movss  %xmm0,0x711f2(%rip)        # 7a894 <whitepoint.11>
movss  0x47a0a(%rip),%xmm0        # 510b4 <_fini+0xd0>
movss  %xmm0,0x711e6(%rip)        # 7a898 <whitepoint.11+0x4>
mov    -0x8(%rbp),%rdx
movslq (%rdx),%rcx
cmp    $0x2f,%ecx
jle    98fe <TIFFVGetFieldDefaulted+0xa6e>
mov    0x8(%rdx),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rdx)
mov    (%rcx),%rax
jmpq   990b <TIFFVGetFieldDefaulted+0xa7b>
mov    -0x8(%rbp),%rdx
movslq (%rdx),%rcx
cmp    $0x2f,%ecx
jle    991c <TIFFVGetFieldDefaulted+0xa8c>
mov    0x8(%rdx),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rdx)
mov    (%rcx),%rax
jmpq   9929 <TIFFVGetFieldDefaulted+0xa99>
mov    -0x8(%rbp),%rsi
movslq (%rsi),%rdx
cmp    $0x2f,%edx
jle    9935 <TIFFVGetFieldDefaulted+0xaa5>
mov    0x8(%rsi),%rdx
lea    0x8(%rdx),%rax
mov    %rax,0x8(%rsi)
mov    (%rdx),%rax
jmpq   9942 <TIFFVGetFieldDefaulted+0xab2>
mov    0x10(%rdi),%rax
mov    (%rax,%rsi,1),%rdx
lea    0x8(%rsi),%eax
mov    %eax,(%rdi)
movzwl 0x74(%rcx),%ecx
mov    $0x1,%eax
mov    %rax,%rsi
shl    %cl,%esi
lea    0xffff(%rsi),%ecx
mov    %cx,(%rdx)
leaveq 
retq   
mov    0x10(%rdx),%rax
mov    (%rax,%rcx,1),%rax
add    $0x8,%ecx
mov    %ecx,(%rdx)
lea    0x70f50(%rip),%rcx        # 7a6a8 <ycbcrcoeffs.10>
mov    %rcx,(%rax)
mov    $0x1,%eax
leaveq 
retq   
mov    0x10(%rsi),%rax
mov    (%rax,%rdx,1),%rax
add    $0x8,%edx
mov    %edx,(%rsi)
movzwl 0x108(%rcx),%edx
mov    %dx,(%rax)
movslq (%rsi),%rdx
cmp    $0x2f,%edx
jle    996c <TIFFVGetFieldDefaulted+0xadc>
mov    0x8(%rsi),%rdx
lea    0x8(%rdx),%rax
mov    %rax,0x8(%rsi)
mov    (%rdx),%rax
jmpq   9979 <TIFFVGetFieldDefaulted+0xae9>
callq  9e60 <TIFFDefaultRefBlackWhite>
test   %eax,%eax
je     998a <TIFFVGetFieldDefaulted+0xafa>
mov    -0x10(%rbp),%rcx
jmpq   94d2 <TIFFVGetFieldDefaulted+0x642>
mov    0x10(%rsi),%rax
mov    (%rax,%rdx,1),%rax
add    $0x8,%edx
mov    %edx,(%rsi)
mov    0x128(%rcx),%rcx
mov    %rcx,(%rax)
mov    $0x1,%eax
leaveq 
retq   
mov    0x10(%rsi),%rax
mov    (%rax,%rdx,1),%rax
add    $0x8,%edx
mov    %edx,(%rsi)
movzwl 0x76(%rcx),%ecx
add    $0xffff,%ecx
mov    %cx,(%rax)
mov    $0x1,%eax
leaveq 
retq   
mov    -0x8(%rbp),%rsi
movslq (%rsi),%rdx
cmp    $0x2f,%edx
jle    998e <TIFFVGetFieldDefaulted+0xafe>
mov    0x8(%rsi),%rdx
lea    0x8(%rdx),%rax
mov    %rax,0x8(%rsi)
mov    (%rdx),%rax
jmpq   999b <TIFFVGetFieldDefaulted+0xb0b>
mov    -0x8(%rbp),%rsi
movslq (%rsi),%rdx
cmp    $0x2f,%edx
jle    99a7 <TIFFVGetFieldDefaulted+0xb17>
mov    0x8(%rsi),%rdx
lea    0x8(%rdx),%rax
mov    %rax,0x8(%rsi)
mov    (%rdx),%rax
jmpq   99b4 <TIFFVGetFieldDefaulted+0xb24>
mov    0x10(%rsi),%rax
mov    (%rax,%rdx,1),%rax
add    $0x8,%edx
mov    %edx,(%rsi)
movzwl 0x7e(%rcx),%ecx
mov    %cx,(%rax)
mov    $0x1,%eax
leaveq 
retq   
mov    0x10(%rsi),%rax
mov    (%rax,%rdx,1),%rax
add    $0x8,%edx
mov    %edx,(%rsi)
movzwl 0x82(%rcx),%ecx
mov    %cx,(%rax)
mov    $0x1,%eax
leaveq 
retq   
mov    0x10(%rsi),%rax
mov    (%rax,%rdx,1),%rax
add    $0x8,%edx
mov    %edx,(%rsi)
mov    0x84(%rcx),%ecx
mov    %ecx,(%rax)
mov    $0x1,%eax
leaveq 
retq   
mov    0x10(%rsi),%rax
mov    (%rax,%rdx,1),%rax
add    $0x8,%edx
mov    %edx,(%rsi)
movzwl 0x8a(%rcx),%ecx
mov    %cx,(%rax)
mov    $0x1,%eax
leaveq 
retq   
mov    0x10(%rsi),%rax
mov    (%rax,%rdx,1),%rax
add    $0x8,%edx
mov    %edx,(%rsi)
movzwl 0xa8(%rcx),%ecx
mov    %cx,(%rax)
mov    $0x1,%eax
leaveq 
retq   
mov    0x10(%rsi),%rax
mov    (%rax,%rdx,1),%rax
add    $0x8,%edx
mov    %edx,(%rsi)
mov    0x118(%rcx),%rdx
mov    %rdx,(%rax)
movslq (%rsi),%rdx
cmp    $0x2f,%edx
jle    99c2 <TIFFVGetFieldDefaulted+0xb32>
mov    0x8(%rsi),%rdx
lea    0x8(%rdx),%rax
mov    %rax,0x8(%rsi)
mov    (%rdx),%rax
jmpq   99cf <TIFFVGetFieldDefaulted+0xb3f>
mov    0x10(%rdx),%rax
mov    (%rax,%rcx,1),%rax
add    $0x8,%ecx
mov    %ecx,(%rdx)
lea    0x70f82(%rip),%rcx        # 7a894 <whitepoint.11>
mov    %rcx,(%rax)
mov    $0x1,%eax
leaveq 
retq   
mov    0x10(%rdx),%rax
mov    (%rax,%rcx,1),%rax
add    $0x8,%ecx
mov    %ecx,(%rdx)
movw   $0x4,(%rax)
mov    $0x1,%eax
leaveq 
retq   
mov    0x10(%rsi),%rax
mov    (%rax,%rdx,1),%rax
add    $0x8,%edx
mov    %edx,(%rsi)
movzwl 0xd4(%rcx),%edx
mov    %dx,(%rax)
movslq (%rsi),%rdx
cmp    $0x2f,%edx
jle    99e0 <TIFFVGetFieldDefaulted+0xb50>
mov    0x8(%rsi),%rdx
lea    0x8(%rdx),%rax
mov    %rax,0x8(%rsi)
mov    (%rdx),%rax
jmpq   99ed <TIFFVGetFieldDefaulted+0xb5d>
mov    0x10(%rsi),%rax
mov    (%rax,%rdx,1),%rax
add    $0x8,%edx
mov    %edx,(%rsi)
movzwl 0x10a(%rcx),%ecx
mov    %cx,(%rax)
mov    $0x1,%eax
leaveq 
retq   
xor    %eax,%eax
leaveq 
retq   
mov    0x10(%rsi),%rax
mov    (%rax,%rdx,1),%rax
add    $0x8,%edx
mov    %edx,(%rsi)
mov    0x70(%rcx),%ecx
mov    %ecx,(%rax)
mov    $0x1,%eax
leaveq 
retq   
mov    0x10(%rsi),%rax
mov    (%rax,%rdx,1),%rax
add    $0x8,%edx
mov    %edx,(%rsi)
movzwl 0x7c(%rcx),%ecx
mov    %cx,(%rax)
mov    $0x1,%eax
leaveq 
retq   
mov    0x10(%rsi),%rax
mov    (%rax,%rdx,1),%rax
add    $0x8,%edx
mov    %edx,(%rsi)
mov    0x120(%rcx),%rcx
mov    %rcx,(%rax)
mov    $0x1,%eax
leaveq 
retq   
mov    0x10(%rsi),%rax
mov    (%rax,%rdx,1),%rax
add    $0x8,%edx
mov    %edx,(%rsi)
mov    0xd8(%rcx),%rcx
mov    %rcx,(%rax)
mov    $0x1,%eax
leaveq 
retq   
xchg   %ax,%ax

0000000000009a00 <_TIFFMultiply32>:
push   %rbp
mov    %rsp,%rbp
mov    %rdx,%rax
imul   %esi,%eax
test   %edx,%edx
jne    9a10 <_TIFFMultiply32+0x10>
leaveq 
retq   
mov    %rdx,%r9
xor    %edx,%edx
mov    %rax,%r8
div    %r9d
cmp    %esi,%eax
jne    9a24 <_TIFFMultiply32+0x24>
mov    %r8,%rax
leaveq 
retq   
mov    0x3b8(%rdi),%rdi
lea    0x47629(%rip),%rdx        # 5105b <_fini+0x77>
xor    %eax,%eax
mov    %rcx,%rsi
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   

0000000000009a40 <_TIFFMultiply64>:
push   %rbp
mov    %rsp,%rbp
mov    %rdx,%rax
imul   %rsi,%rax
test   %rdx,%rdx
jne    9a52 <_TIFFMultiply64+0x12>
leaveq 
retq   
mov    %rdx,%r9
xor    %edx,%edx
mov    %rax,%r8
div    %r9
cmp    %rsi,%rax
jne    9a67 <_TIFFMultiply64+0x27>
mov    %r8,%rax
leaveq 
retq   
mov    0x3b8(%rdi),%rdi
lea    0x475e6(%rip),%rdx        # 5105b <_fini+0x77>
xor    %eax,%eax
mov    %rcx,%rsi
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

0000000000009a90 <_TIFFCheckMalloc>:
push   %rbp
mov    %rsp,%rbp
mov    %rcx,%r8
mov    %rdx,%rcx
mov    %rsi,%rdx
xor    %esi,%esi
callq  8d00 <_TIFFCheckRealloc@plt>
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)

0000000000009ab0 <_TIFFCheckRealloc>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
xor    %eax,%eax
test   %rdx,%rdx
jne    9ac6 <_TIFFCheckRealloc+0x16>
test   %rax,%rax
je     9aed <_TIFFCheckRealloc+0x3d>
leaveq 
retq   
test   %rcx,%rcx
je     9abf <_TIFFCheckRealloc+0xf>
mov    %rax,%r9
mov    %rdx,%r10
mov    %r10,%rax
imul   %rcx,%rax
cqto   
mov    %rax,%r11
idiv   %rcx
cmp    %rax,%r10
je     9b2b <_TIFFCheckRealloc+0x7b>
mov    %r9,%rax
mov    %r10,%rdx
jmp    9abf <_TIFFCheckRealloc+0xf>
xor    %r10d,%r10d
mov    0x3b8(%rdi),%r9
mov    (%rdi),%rsi
lea    0x47571(%rip),%rdi        # 51072 <_fini+0x8e>
mov    %r15,-0x20(%rbp)
mov    %rax,%r15
mov    %r10,%rax
mov    %r8,%r10
mov    %rdx,%r8
mov    %rdi,%rdx
mov    %r9,%rdi
mov    %rcx,%r9
mov    %r10,%rcx
callq  8a00 <TIFFErrorExt@plt>
mov    %r15,%rax
mov    -0x20(%rbp),%r15
leaveq 
retq   
mov    %rdi,-0x20(%rbp)
mov    %r8,-0x8(%rbp)
mov    %r10,-0x10(%rbp)
mov    %rcx,-0x18(%rbp)
mov    %rsi,%rdi
mov    %r11,%rsi
callq  8100 <_TIFFrealloc@plt>
mov    -0x18(%rbp),%rcx
mov    -0x10(%rbp),%rdx
mov    -0x8(%rbp),%r8
mov    -0x20(%rbp),%rdi
jmpq   9abf <_TIFFCheckRealloc+0xf>
nopl   0x0(%rax,%rax,1)

0000000000009b60 <_TIFFUInt64ToDouble>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %rdi,%rax
shr    $0x20,%rax
test   %eax,%eax
jns    9b8c <_TIFFUInt64ToDouble+0x2c>
mov    %rdi,-0x8(%rbp)
fildll -0x8(%rbp)
flds   0x4753c(%rip)        # 510bc <_fini+0xd8>
faddp  %st,%st(1)
fstpl  -0x8(%rbp)
movsd  -0x8(%rbp),%xmm0
leaveq 
retq   
cvtsi2sd %rdi,%xmm0
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

0000000000009ba0 <_TIFFUInt64ToFloat>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %rdi,%rax
shr    $0x20,%rax
test   %eax,%eax
jns    9bcc <_TIFFUInt64ToFloat+0x2c>
mov    %rdi,-0x8(%rbp)
fildll -0x8(%rbp)
flds   0x474fc(%rip)        # 510bc <_fini+0xd8>
faddp  %st,%st(1)
fstps  -0x8(%rbp)
movss  -0x8(%rbp),%xmm0
leaveq 
retq   
cvtsi2ss %rdi,%xmm0
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

0000000000009be0 <_TIFFSeekOK>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
xor    %eax,%eax
movabs $0x7fffffffffffffff,%rcx
cmp    %rcx,%rsi
jbe    9bfb <_TIFFSeekOK+0x1b>
leaveq 
retq   
mov    0x3d0(%rdi),%rcx
mov    0x3b8(%rdi),%rdi
mov    %rsi,%rdx
mov    %r15,-0x8(%rbp)
mov    %rsi,%r15
mov    %rdx,%rsi
mov    %rax,%rdx
callq  *%rcx
cmp    %rax,%r15
jne    9c2b <_TIFFSeekOK+0x4b>
mov    $0x1,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
xor    %eax,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

0000000000009c40 <TIFFDefaultTransferFunction>:
push   %rbp
mov    %rsp,%rbp
sub    $0x40,%rsp
movq   $0x0,0xe8(%rdi)
movq   $0x0,0xe0(%rdi)
movq   $0x0,0xd8(%rdi)
xor    %eax,%eax
movzwl 0x3c(%rdi),%ecx
cmp    $0x3d,%cx
jbe    9c77 <TIFFDefaultTransferFunction+0x37>
leaveq 
retq   
mov    %r14,%rax
mov    %r12,%r14
mov    %rdi,%r12
mov    $0x2,%edi
shl    %cl,%rdi
mov    %rcx,-0x40(%rbp)
mov    %rdi,-0x28(%rbp)
mov    %r15,-0x20(%rbp)
mov    %rax,%r15
callq  8440 <_TIFFmalloc@plt>
mov    %rax,0xd8(%r12)
test   %rax,%rax
jne    9cb7 <TIFFDefaultTransferFunction+0x77>
mov    %r14,%r12
mov    %r15,%r14
xor    %eax,%eax
mov    -0x20(%rbp),%r15
leaveq 
retq   
mov    %r13,%rdx
mov    %r15,%rsi
mov    $0x1,%r15d
mov    -0x40(%rbp),%rcx
mov    %r15,%r13
shl    %cl,%r13
cvtsi2sd %r13,%xmm2
movsd  0x473e6(%rip),%xmm0        # 510c0 <_fini+0xdc>
subsd  %xmm0,%xmm2
movsd  0x473e2(%rip),%xmm1        # 510c8 <_fini+0xe4>
movw   $0x0,(%rax)
mov    %r14,-0x8(%rbp)
mov    %rdx,-0x10(%rbp)
mov    %rsi,-0x18(%rbp)
jmp    9d4c <TIFFDefaultTransferFunction+0x10c>
cvtsi2sd %r15,%xmm0
divsd  %xmm2,%xmm0
movdqu %xmm2,-0x40(%rbp)
mov    0xd8(%r12),%r14
callq  8560 <pow@plt>
movsd  0x473b4(%rip),%xmm1        # 510d0 <_fini+0xec>
mulsd  %xmm1,%xmm0
movsd  0x473b0(%rip),%xmm1        # 510d8 <_fini+0xf4>
addsd  %xmm1,%xmm0
callq  8b80 <floor@plt>
cvttsd2si %xmm0,%rax
mov    %ax,(%r14,%r15,2)
add    $0x1,%r15
movsd  0x47381(%rip),%xmm1        # 510c8 <_fini+0xe4>
movdqu -0x40(%rbp),%xmm2
cmp    %r13,%r15
jl     9cf9 <TIFFDefaultTransferFunction+0xb9>
movzwl 0x4a(%r12),%eax
movzwl 0x9c(%r12),%ecx
sub    %ecx,%eax
cmp    $0x1,%eax
jg     9d7e <TIFFDefaultTransferFunction+0x13e>
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
mov    $0x1,%eax
mov    -0x20(%rbp),%r15
leaveq 
retq   
mov    -0x28(%rbp),%r13
mov    %r13,%rdi
callq  8440 <_TIFFmalloc@plt>
mov    %rax,0xe0(%r12)
test   %rax,%rax
je     9de9 <TIFFDefaultTransferFunction+0x1a9>
mov    %rax,%rdi
mov    0xd8(%r12),%rsi
mov    %r13,%rdx
callq  8790 <_TIFFmemcpy@plt>
mov    %r13,%rdi
callq  8440 <_TIFFmalloc@plt>
mov    %rax,0xe8(%r12)
test   %rax,%rax
je     9de9 <TIFFDefaultTransferFunction+0x1a9>
mov    0xd8(%r12),%rsi
mov    %r13,%rdx
mov    %rax,%rdi
callq  8790 <_TIFFmemcpy@plt>
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
mov    $0x1,%eax
mov    -0x20(%rbp),%r15
leaveq 
retq   
mov    0xd8(%r12),%rdi
test   %rdi,%rdi
je     9dfb <TIFFDefaultTransferFunction+0x1bb>
callq  8bb0 <_TIFFfree@plt>
mov    0xe0(%r12),%rdi
test   %rdi,%rdi
je     9e0d <TIFFDefaultTransferFunction+0x1cd>
callq  8bb0 <_TIFFfree@plt>
mov    0xe8(%r12),%rdi
test   %rdi,%rdi
je     9e1f <TIFFDefaultTransferFunction+0x1df>
callq  8bb0 <_TIFFfree@plt>
movq   $0x0,0xe8(%r12)
movq   $0x0,0xe0(%r12)
movq   $0x0,0xd8(%r12)
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
xor    %eax,%eax
mov    -0x20(%rbp),%r15
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

0000000000009e60 <TIFFDefaultRefBlackWhite>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x8(%rbp)
mov    %rdi,%r15
mov    $0x18,%edi
callq  8440 <_TIFFmalloc@plt>
mov    %rax,0xf0(%r15)
xor    %edx,%edx
test   %rax,%rax
jne    9e90 <TIFFDefaultRefBlackWhite+0x30>
mov    %rdx,%rax
mov    -0x8(%rbp),%r15
leaveq 
retq   
xorpd  %xmm1,%xmm1
mov    $0x1,%ecx
movzwl 0x42(%r15),%esi
cmp    $0x6,%si
je     9eac <TIFFDefaultRefBlackWhite+0x4c>
mov    %rcx,%rax
mov    %rdx,%rsi
jmp    9f2b <TIFFDefaultRefBlackWhite+0xcb>
movss  %xmm1,(%rax)
movss  0x4722c(%rip),%xmm0        # 510e4 <_fini+0x100>
mov    0xf0(%r15),%rax
movss  %xmm0,0x14(%rax)
movss  %xmm0,0xc(%rax)
movss  %xmm0,0x4(%rax)
movss  0x4720a(%rip),%xmm0        # 510e0 <_fini+0xfc>
mov    0xf0(%r15),%rax
movss  %xmm0,0x10(%rax)
movss  %xmm0,0x8(%rax)
mov    %rcx,%rax
mov    -0x8(%rbp),%r15
leaveq 
retq   
mov    0xf0(%r15),%rdi
movslq %edx,%rcx
movss  %xmm1,(%rdi,%rcx,4)
movzwl 0x3c(%r15),%ecx
mov    %rax,%rdi
shl    %cl,%rdi
lea    -0x1(%rdi),%rcx
cvtsi2ss %rcx,%xmm0
mov    0xf0(%r15),%rdi
lea    0x1(%rdx),%ecx
movslq %ecx,%rcx
movss  %xmm0,(%rdi,%rcx,4)
add    $0x1,%esi
add    $0x2,%edx
cmp    $0x2,%esi
jle    9ef0 <TIFFDefaultRefBlackWhite+0x90>
mov    -0x8(%rbp),%r15
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)

0000000000009f40 <TIFFCleanup>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    %r15,-0x28(%rbp)
mov    %r14,-0x20(%rbp)
movslq 0xc(%rdi),%rax
test   %eax,%eax
jne    9f63 <TIFFCleanup+0x23>
mov    %r12,%r14
mov    %rbx,%r12
mov    %rdi,%rbx
jmp    9f71 <TIFFCleanup+0x31>
mov    %r12,%r14
mov    %rbx,%r12
mov    %rdi,%rbx
callq  8760 <TIFFFlush@plt>
mov    %rbx,%rdi
callq  *0x338(%rbx)
mov    %rbx,%rdi
callq  8510 <TIFFFreeDirectory@plt>
mov    0x28(%rbx),%rdi
test   %rdi,%rdi
je     9fad <TIFFCleanup+0x6d>
callq  8bb0 <_TIFFfree@plt>
jmp    9fad <TIFFCleanup+0x6d>
mov    (%r15),%rax
mov    %rax,0x420(%rbx)
mov    0x10(%r15),%rdi
callq  8bb0 <_TIFFfree@plt>
mov    %r15,%rdi
callq  8bb0 <_TIFFfree@plt>
mov    0x420(%rbx),%r15
test   %r15,%r15
jne    9f92 <TIFFCleanup+0x52>
mov    0x368(%rbx),%rdi
test   %rdi,%rdi
je     9fd6 <TIFFCleanup+0x96>
mov    0x10(%rbx),%eax
and    $0x200,%eax
test   %eax,%eax
je     9fd6 <TIFFCleanup+0x96>
callq  8bb0 <_TIFFfree@plt>
mov    0x10(%rbx),%eax
and    $0x800,%eax
test   %eax,%eax
je     a000 <TIFFCleanup+0xc0>
mov    0x3b0(%rbx),%rax
mov    0x3b8(%rbx),%rdi
mov    0x398(%rbx),%rsi
mov    0x3a0(%rbx),%rdx
callq  *%rax
xor    %r15d,%r15d
mov    0x3f0(%rbx),%rax
test   %rax,%rax
je     a09b <TIFFCleanup+0x15b>
mov    0x3f8(%rbx),%rax
test   %rax,%rax
je     a09b <TIFFCleanup+0x15b>
lea    0x470c2(%rip),%rax        # 510e8 <_fini+0x104>
mov    $0x4,%edx
mov    %r12,-0x8(%rbp)
mov    %r14,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %rax,%r12
jmp    a071 <TIFFCleanup+0x131>
mov    0x3f0(%rbx),%rcx
mov    %r15d,%eax
mov    (%rcx,%rax,8),%r13
movzwl 0x18(%r13),%eax
cmp    $0x41,%ax
jne    a06d <TIFFCleanup+0x12d>
mov    0x20(%r13),%r14
mov    %r12,%rdi
mov    %r14,%rsi
callq  8120 <strncmp@plt>
test   %eax,%eax
je     a0bf <TIFFCleanup+0x17f>
mov    $0x4,%edx
add    $0x1,%r15d
mov    0x3f8(%rbx),%rcx
mov    %r15d,%eax
cmp    %rax,%rcx
ja     a03c <TIFFCleanup+0xfc>
mov    0x3f0(%rbx),%rdi
callq  8bb0 <_TIFFfree@plt>
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r12
xor    %r15d,%r15d
mov    0x430(%rbx),%rax
test   %rax,%rax
jne    a0fc <TIFFCleanup+0x1bc>
mov    %rbx,%rdi
callq  8bb0 <_TIFFfree@plt>
mov    %r12,%rbx
mov    %r14,%r12
mov    -0x20(%rbp),%r14
mov    -0x28(%rbp),%r15
leaveq 
retq   
mov    %r14,%rdi
callq  8bb0 <_TIFFfree@plt>
mov    %r13,%rdi
callq  8bb0 <_TIFFfree@plt>
mov    $0x4,%edx
jmp    a06d <TIFFCleanup+0x12d>
mov    %r15d,%eax
lea    (%rax,%rax,2),%rax
shl    $0x3,%rax
add    0x428(%rbx),%rax
mov    0x4(%rax),%ecx
test   %ecx,%ecx
je     a0f8 <TIFFCleanup+0x1b8>
mov    0x10(%rax),%rdi
callq  8bb0 <_TIFFfree@plt>
add    $0x1,%r15d
mov    0x430(%rbx),%rcx
mov    %r15d,%eax
cmp    %rax,%rcx
ja     a0d6 <TIFFCleanup+0x196>
mov    0x428(%rbx),%rdi
callq  8bb0 <_TIFFfree@plt>
jmp    a0a7 <TIFFCleanup+0x167>
nopl   0x0(%rax)

000000000000a120 <TIFFClose>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    0x3d8(%rdi),%r15
mov    0x3b8(%rdi),%r14
callq  8a70 <TIFFCleanup@plt>
mov    %r14,%rdi
callq  *%r15
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)
nopl   (%rax)

000000000000a160 <TIFFIsCODECConfigured>:
push   %rbp
mov    %rsp,%rbp
callq  8530 <TIFFFindCODEC@plt>
test   %rax,%rax
jne    a172 <TIFFIsCODECConfigured+0x12>
xor    %eax,%eax
leaveq 
retq   
mov    0x10(%rax),%rax
test   %rax,%rax
jne    a17f <TIFFIsCODECConfigured+0x1f>
xor    %eax,%eax
leaveq 
retq   
lea    0x1a(%rip),%rcx        # a1a0 <NotConfigured>
cmp    %rcx,%rax
je     a192 <TIFFIsCODECConfigured+0x32>
mov    $0x1,%eax
leaveq 
retq   
xor    %eax,%eax
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)

000000000000a1a0 <NotConfigured>:
push   %rbp
mov    %rsp,%rbp
lea    0x35(%rip),%rax        # a1e0 <_notConfigured>
mov    %rax,0x2c0(%rdi)
movl   $0x0,0x2b8(%rdi)
mov    %rax,0x2c8(%rdi)
movl   $0x0,0x2e0(%rdi)
mov    %rax,0x2d8(%rdi)
mov    $0x1,%eax
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

000000000000a1e0 <_notConfigured>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    %r15,-0x10(%rbp)
mov    %r14,-0x8(%rbp)
mov    %rdi,%r14
movzwl 0x78(%r14),%edi
callq  8530 <TIFFFindCODEC@plt>
mov    %rax,%r15
xor    %eax,%eax
lea    -0x24(%rbp),%rdi
lea    0x46f85(%rip),%rsi        # 51192 <_fini+0x1ae>
movzwl 0x78(%r14),%edx
callq  8c10 <sprintf@plt>
mov    0x3b8(%r14),%rdi
mov    (%r14),%rsi
test   %r15,%r15
jne    a22c <_notConfigured+0x4c>
lea    -0x24(%rbp),%rcx
jmp    a22f <_notConfigured+0x4f>
mov    (%r15),%rcx
xor    %eax,%eax
lea    0x46f5d(%rip),%rdx        # 51195 <_fini+0x1b1>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x8(%rbp),%r14
mov    -0x10(%rbp),%r15
leaveq 
retq   
nopl   0x0(%rax)

000000000000a250 <TIFFCIELabToRGBInit>:
push   %rbp
mov    %rsp,%rbp
sub    $0x40,%rsp
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %rdx,%r12
mov    %rdi,%r13
movl   $0x5dc,0x0(%r13)
lea    0x1c(%r13),%rdi
mov    $0x54,%edx
callq  8790 <_TIFFmemcpy@plt>
movsd  0x46f30(%rip),%xmm1        # 511c0 <_fini+0x1dc>
movss  0x64(%r13),%xmm0
cvtss2sd %xmm0,%xmm0
divsd  %xmm0,%xmm1
movdqu %xmm1,-0x40(%rbp)
movss  0x40(%r13),%xmm0
subss  0x58(%r13),%xmm0
movslq 0x0(%r13),%rax
cvtsi2ss %eax,%xmm2
divss  %xmm2,%xmm0
movss  %xmm0,0x4(%r13)
xor    %ebx,%ebx
mov    %rbx,%r14
jmp    a301 <TIFFCIELabToRGBInit+0xb1>
cvtsi2sd %r14d,%xmm0
cvtsi2sd %eax,%xmm2
divsd  %xmm2,%xmm0
mov    0x4c(%r13),%r15d
callq  8560 <pow@plt>
cvtsd2ss %xmm0,%xmm0
mov    %r15d,%eax
cvtsi2ss %rax,%xmm1
mulss  %xmm1,%xmm0
movslq %r14d,%rax
movss  %xmm0,0x70(%r13,%rax,4)
add    $0x1,%r14d
movdqu -0x40(%rbp),%xmm1
movslq 0x0(%r13),%rax
cmp    %r14d,%eax
jge    a2c8 <TIFFCIELabToRGBInit+0x78>
movss  0x68(%r13),%xmm0
cvtss2sd %xmm0,%xmm0
movsd  0x46ea4(%rip),%xmm1        # 511c0 <_fini+0x1dc>
divsd  %xmm0,%xmm1
movdqu %xmm1,-0x40(%rbp)
movss  0x40(%r13),%xmm0
subss  0x58(%r13),%xmm0
movslq 0x0(%r13),%rax
cvtsi2ss %eax,%xmm2
divss  %xmm2,%xmm0
movss  %xmm0,0x8(%r13)
mov    %rbx,%r14
jmp    a384 <TIFFCIELabToRGBInit+0x134>
cvtsi2sd %r14d,%xmm0
cvtsi2sd %eax,%xmm2
divsd  %xmm2,%xmm0
mov    0x50(%r13),%r15d
callq  8560 <pow@plt>
cvtsd2ss %xmm0,%xmm0
mov    %r15d,%eax
cvtsi2ss %rax,%xmm1
mulss  %xmm1,%xmm0
movslq %r14d,%rax
movss  %xmm0,0x17e4(%r13,%rax,4)
add    $0x1,%r14d
movdqu -0x40(%rbp),%xmm1
movslq 0x0(%r13),%rax
cmp    %r14d,%eax
jge    a348 <TIFFCIELabToRGBInit+0xf8>
movss  0x6c(%r13),%xmm0
cvtss2sd %xmm0,%xmm0
movsd  0x46e21(%rip),%xmm1        # 511c0 <_fini+0x1dc>
divsd  %xmm0,%xmm1
movdqu %xmm1,-0x40(%rbp)
movss  0x40(%r13),%xmm0
subss  0x58(%r13),%xmm0
movslq 0x0(%r13),%rax
cvtsi2ss %eax,%xmm2
divss  %xmm2,%xmm0
movss  %xmm0,0xc(%r13)
mov    %rbx,%r14
jmp    a407 <TIFFCIELabToRGBInit+0x1b7>
cvtsi2sd %r14d,%xmm0
cvtsi2sd %eax,%xmm2
divsd  %xmm2,%xmm0
mov    0x54(%r13),%r15d
callq  8560 <pow@plt>
cvtsd2ss %xmm0,%xmm0
mov    %r15d,%eax
cvtsi2ss %rax,%xmm1
mulss  %xmm1,%xmm0
movslq %r14d,%rax
movss  %xmm0,0x2f58(%r13,%rax,4)
add    $0x1,%r14d
movdqu -0x40(%rbp),%xmm1
movslq 0x0(%r13),%rax
cmp    %r14d,%eax
jge    a3cb <TIFFCIELabToRGBInit+0x17b>
movss  (%r12),%xmm0
movss  %xmm0,0x10(%r13)
movss  0x4(%r12),%xmm0
movss  %xmm0,0x14(%r13)
movss  0x8(%r12),%xmm0
movss  %xmm0,0x18(%r13)
mov    %rbx,%rax
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
leaveq 
retq   
nop

000000000000a450 <TIFFCIELabToXYZ>:
push   %rbp
mov    %rsp,%rbp
movss  0x46d74(%rip),%xmm2        # 511d0 <_fini+0x1ec>
mov    %esi,%eax
cvtsi2ss %rax,%xmm0
movss  0x46d69(%rip),%xmm1        # 511d4 <_fini+0x1f0>
mulss  %xmm1,%xmm0
movss  0x46d61(%rip),%xmm1        # 511d8 <_fini+0x1f4>
divss  %xmm1,%xmm0
movss  0x46d71(%rip),%xmm1        # 511f4 <_fini+0x210>
ucomiss %xmm1,%xmm0
jp     a48a <TIFFCIELabToXYZ+0x3a>
jb     a4ba <TIFFCIELabToXYZ+0x6a>
movss  0x46d4e(%rip),%xmm1        # 511e0 <_fini+0x1fc>
addss  %xmm1,%xmm0
movss  0x46d46(%rip),%xmm1        # 511e4 <_fini+0x200>
divss  %xmm1,%xmm0
movapd %xmm0,%xmm1
mulss  0x14(%rdi),%xmm1
mulss  %xmm0,%xmm1
mulss  %xmm0,%xmm1
movss  %xmm1,(%r9)
jmp    a4e5 <TIFFCIELabToXYZ+0x95>
mulss  0x14(%rdi),%xmm0
movss  0x46d15(%rip),%xmm1        # 511dc <_fini+0x1f8>
divss  %xmm1,%xmm0
movss  %xmm0,(%r9)
divss  0x14(%rdi),%xmm0
mulss  %xmm2,%xmm0
movss  0x46d0b(%rip),%xmm1        # 511ec <_fini+0x208>
addss  %xmm1,%xmm0
movss  0x46cdf(%rip),%xmm4        # 511cc <_fini+0x1e8>
cvtsi2ss %edx,%xmm1
movss  0x46cf7(%rip),%xmm3        # 511f0 <_fini+0x20c>
divss  %xmm3,%xmm1
addss  %xmm0,%xmm1
movss  0x46cdf(%rip),%xmm5        # 511e8 <_fini+0x204>
ucomiss %xmm5,%xmm1
jp     a510 <TIFFCIELabToXYZ+0xc0>
jb     a523 <TIFFCIELabToXYZ+0xd3>
movapd %xmm1,%xmm3
mulss  0x10(%rdi),%xmm3
mulss  %xmm1,%xmm3
mulss  %xmm3,%xmm1
jmp    a530 <TIFFCIELabToXYZ+0xe0>
subss  %xmm4,%xmm1
mulss  0x10(%rdi),%xmm1
divss  %xmm2,%xmm1
movss  %xmm1,(%r8)
cvtsi2ss %ecx,%xmm1
movss  0x46c87(%rip),%xmm3        # 511c8 <_fini+0x1e4>
divss  %xmm3,%xmm1
subss  %xmm1,%xmm0
ucomiss %xmm5,%xmm0
jp     a550 <TIFFCIELabToXYZ+0x100>
jb     a56b <TIFFCIELabToXYZ+0x11b>
movapd %xmm0,%xmm1
mulss  0x18(%rdi),%xmm1
mulss  %xmm0,%xmm1
mulss  %xmm1,%xmm0
mov    0x10(%rbp),%rax
movss  %xmm0,(%rax)
leaveq 
retq   
subss  %xmm4,%xmm0
mulss  0x18(%rdi),%xmm0
divss  %xmm2,%xmm0
jmp    a561 <TIFFCIELabToXYZ+0x111>
nopw   0x0(%rax,%rax,1)

000000000000a580 <TIFFXYZToRGB>:
push   %rbp
mov    %rsp,%rbp
movss  0x28(%rdi),%xmm4
movss  0x2c(%rdi),%xmm7
movss  0x30(%rdi),%xmm8
movss  0x34(%rdi),%xmm6
movss  0x38(%rdi),%xmm10
movss  0x3c(%rdi),%xmm9
movapd %xmm1,%xmm3
mulss  0x20(%rdi),%xmm3
movapd %xmm0,%xmm5
mulss  0x1c(%rdi),%xmm5
addss  %xmm5,%xmm3
movapd %xmm2,%xmm5
mulss  0x24(%rdi),%xmm5
addss  %xmm3,%xmm5
movss  0x58(%rdi),%xmm11
ucomiss %xmm5,%xmm11
jp     a5d6 <TIFFXYZToRGB+0x56>
jb     a5db <TIFFXYZToRGB+0x5b>
movapd %xmm11,%xmm5
movapd %xmm1,%xmm3
mulss  %xmm7,%xmm3
mulss  %xmm0,%xmm4
addss  %xmm4,%xmm3
movapd %xmm2,%xmm4
mulss  %xmm8,%xmm4
addss  %xmm3,%xmm4
movss  0x5c(%rdi),%xmm3
ucomiss %xmm4,%xmm3
jp     a604 <TIFFXYZToRGB+0x84>
jb     a608 <TIFFXYZToRGB+0x88>
movapd %xmm3,%xmm4
mulss  %xmm10,%xmm1
mulss  %xmm6,%xmm0
addss  %xmm0,%xmm1
mulss  %xmm9,%xmm2
addss  %xmm1,%xmm2
movss  0x60(%rdi),%xmm0
ucomiss %xmm2,%xmm0
jp     a62a <TIFFXYZToRGB+0xaa>
jb     a62e <TIFFXYZToRGB+0xae>
movapd %xmm0,%xmm2
movss  0x40(%rdi),%xmm3
ucomiss %xmm5,%xmm3
jbe    a63c <TIFFXYZToRGB+0xbc>
movapd %xmm5,%xmm3
movss  0x44(%rdi),%xmm1
ucomiss %xmm4,%xmm1
jbe    a64a <TIFFXYZToRGB+0xca>
movapd %xmm4,%xmm1
movss  0x48(%rdi),%xmm0
ucomiss %xmm2,%xmm0
jbe    a658 <TIFFXYZToRGB+0xd8>
movapd %xmm2,%xmm0
subss  %xmm11,%xmm3
divss  0x4(%rdi),%xmm3
cvttss2si %xmm3,%eax
movslq (%rdi),%r8
cmp    %eax,%r8d
jge    a671 <TIFFXYZToRGB+0xf1>
mov    %r8,%rax
movsd  0x46b7f(%rip),%xmm3        # 511f8 <_fini+0x214>
movslq %eax,%rax
movss  0x70(%rdi,%rax,4),%xmm2
xorpd  %xmm4,%xmm4
ucomiss %xmm4,%xmm2
ja     a695 <TIFFXYZToRGB+0x115>
cvtss2sd %xmm2,%xmm2
subsd  %xmm3,%xmm2
jmp    a69d <TIFFXYZToRGB+0x11d>
cvtss2sd %xmm2,%xmm2
addsd  %xmm3,%xmm2
cvttsd2si %xmm2,%rax
mov    %eax,(%rsi)
subss  0x5c(%rdi),%xmm1
divss  0x8(%rdi),%xmm1
cvttss2si %xmm1,%eax
movslq (%rdi),%r8
cmp    %eax,%r8d
jge    a6bd <TIFFXYZToRGB+0x13d>
mov    %r8,%rax
movslq %eax,%rax
movss  0x17e4(%rdi,%rax,4),%xmm1
ucomiss %xmm4,%xmm1
ja     a6d8 <TIFFXYZToRGB+0x158>
cvtss2sd %xmm1,%xmm1
subsd  %xmm3,%xmm1
jmp    a6e0 <TIFFXYZToRGB+0x160>
cvtss2sd %xmm1,%xmm1
addsd  %xmm3,%xmm1
cvttsd2si %xmm1,%rax
mov    %eax,(%rdx)
subss  0x60(%rdi),%xmm0
divss  0xc(%rdi),%xmm0
cvttss2si %xmm0,%eax
movslq (%rdi),%r8
cmp    %eax,%r8d
jge    a700 <TIFFXYZToRGB+0x180>
mov    %r8,%rax
movslq %eax,%rax
movss  0x2f58(%rdi,%rax,4),%xmm0
ucomiss %xmm4,%xmm0
ja     a71b <TIFFXYZToRGB+0x19b>
cvtss2sd %xmm0,%xmm0
subsd  %xmm3,%xmm0
jmp    a723 <TIFFXYZToRGB+0x1a3>
cvtss2sd %xmm0,%xmm0
addsd  %xmm3,%xmm0
cvttsd2si %xmm0,%rax
mov    %eax,(%rcx)
mov    (%rsi),%r8d
mov    0x4c(%rdi),%eax
cmp    %r8d,%eax
jbe    a738 <TIFFXYZToRGB+0x1b8>
mov    %r8,%rax
mov    %eax,(%rsi)
mov    (%rdx),%esi
mov    0x50(%rdi),%eax
cmp    %esi,%eax
jbe    a746 <TIFFXYZToRGB+0x1c6>
mov    %rsi,%rax
mov    %eax,(%rdx)
mov    (%rcx),%edx
mov    0x54(%rdi),%eax
cmp    %edx,%eax
jbe    a754 <TIFFXYZToRGB+0x1d4>
mov    %rdx,%rax
mov    %eax,(%rcx)
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

000000000000a760 <TIFFYCbCrToRGBInit>:
push   %rbp
mov    %rsp,%rbp
sub    $0x80,%rsp
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rsi,%r12
mov    %rbx,%r13
mov    %rdi,%rbx
mov    %rdx,%r15
mov    %r15,-0x68(%rbp)
xor    %r14d,%r14d
lea    0x30(%rbx),%rdi
mov    $0x100,%edx
mov    %r14,%rsi
callq  88e0 <_TIFFmemset@plt>
lea    0x130(%rbx),%rdx
mov    %rdx,(%rbx)
mov    %r14,%rax
jmp    a7b7 <TIFFYCbCrToRGBInit+0x57>
movslq %eax,%rcx
mov    %al,(%rdx,%rcx,1)
add    $0x1,%eax
cmp    $0xff,%eax
jle    a7ae <TIFFYCbCrToRGBInit+0x4e>
lea    0x230(%rbx),%rdi
mov    $0xff,%esi
mov    $0x200,%edx
callq  88e0 <_TIFFmemset@plt>
lea    0x430(%rbx),%rax
mov    %rax,0x8(%rbx)
lea    0x830(%rbx),%rax
mov    %rax,0x10(%rbx)
lea    0xc30(%rbx),%rax
mov    %rax,0x18(%rbx)
lea    0x1030(%rbx),%rax
mov    %rax,0x20(%rbx)
lea    0x1430(%rbx),%rax
mov    %rax,0x28(%rbx)
movss  0x46a05(%rip),%xmm5        # 51218 <_fini+0x234>
movss  (%r12),%xmm1
movapd %xmm1,%xmm0
addss  %xmm1,%xmm0
xorpd  0x469f7(%rip),%xmm0        # 51220 <_fini+0x23c>
addss  %xmm5,%xmm0
xorpd  %xmm6,%xmm6
ucomiss %xmm6,%xmm0
jp     a955 <TIFFYCbCrToRGBInit+0x1f5>
jae    a955 <TIFFYCbCrToRGBInit+0x1f5>
movapd %xmm6,%xmm8
mulss  %xmm1,%xmm0
divss  0x4(%r12),%xmm0
ucomiss %xmm6,%xmm0
jp     a968 <TIFFYCbCrToRGBInit+0x208>
jae    a968 <TIFFYCbCrToRGBInit+0x208>
movapd %xmm6,%xmm0
movss  0x8(%r12),%xmm2
movapd %xmm2,%xmm1
addss  %xmm2,%xmm1
movapd %xmm5,%xmm3
subss  %xmm1,%xmm3
ucomiss %xmm6,%xmm3
jp     a97a <TIFFYCbCrToRGBInit+0x21a>
jae    a97a <TIFFYCbCrToRGBInit+0x21a>
movapd %xmm6,%xmm4
mulss  %xmm2,%xmm3
divss  0x4(%r12),%xmm3
ucomiss %xmm6,%xmm3
jp     a98c <TIFFYCbCrToRGBInit+0x22c>
jae    a98c <TIFFYCbCrToRGBInit+0x22c>
movapd %xmm6,%xmm3
movss  0x4694d(%rip),%xmm5        # 51200 <_fini+0x21c>
movss  0x46949(%rip),%xmm7        # 51204 <_fini+0x220>
movss  0x46945(%rip),%xmm1        # 51208 <_fini+0x224>
movss  0x46941(%rip),%xmm2        # 5120c <_fini+0x228>
movss  0x4693c(%rip),%xmm10        # 51210 <_fini+0x22c>
mulss  %xmm10,%xmm3
cvtss2sd %xmm3,%xmm3
movsd  0x46912(%rip),%xmm9        # 511f8 <_fini+0x214>
addsd  %xmm9,%xmm3
cvttsd2si %xmm3,%eax
neg    %eax
mov    %rax,-0x30(%rbp)
mulss  %xmm10,%xmm0
cvtss2sd %xmm0,%xmm0
addsd  %xmm9,%xmm0
cvttsd2si %xmm0,%eax
neg    %eax
mov    %rax,-0x38(%rbp)
mulss  %xmm10,%xmm4
cvtss2sd %xmm4,%xmm0
addsd  %xmm9,%xmm0
cvttsd2si %xmm0,%ecx
mov    %rcx,-0x58(%rbp)
mulss  %xmm10,%xmm8
cvtss2sd %xmm8,%xmm0
addsd  %xmm9,%xmm0
cvttsd2si %xmm0,%eax
mov    %rax,-0x60(%rbp)
movss  0x468d2(%rip),%xmm4        # 51214 <_fini+0x230>
mov    $0xffffffffffffff80,%r12
mov    %r13,-0x8(%rbp)
mov    %rcx,%r13
jmpq   ab5f <TIFFYCbCrToRGBInit+0x3ff>
ucomiss %xmm5,%xmm0
ja     ab84 <TIFFYCbCrToRGBInit+0x424>
movapd %xmm0,%xmm8
jmpq   a845 <TIFFYCbCrToRGBInit+0xe5>
ucomiss %xmm5,%xmm0
jbe    a863 <TIFFYCbCrToRGBInit+0x103>
movapd %xmm5,%xmm0
jmpq   a863 <TIFFYCbCrToRGBInit+0x103>
ucomiss %xmm5,%xmm3
ja     ab8e <TIFFYCbCrToRGBInit+0x42e>
movapd %xmm3,%xmm4
jmpq   a88d <TIFFYCbCrToRGBInit+0x12d>
ucomiss %xmm5,%xmm3
jbe    a8ab <TIFFYCbCrToRGBInit+0x14b>
movapd %xmm5,%xmm3
jmpq   a8ab <TIFFYCbCrToRGBInit+0x14b>
movss  0x10(%r15),%xmm9
subss  %xmm5,%xmm9
movss  0x14(%r15),%xmm3
subss  %xmm5,%xmm3
subss  %xmm9,%xmm3
ucomiss %xmm6,%xmm3
jp     a9c3 <TIFFYCbCrToRGBInit+0x263>
jne    a9c3 <TIFFYCbCrToRGBInit+0x263>
movapd %xmm4,%xmm3
movss  0x8(%r15),%xmm8
subss  %xmm5,%xmm8
movdqu %xmm8,-0x50(%rbp)
movss  0xc(%r15),%xmm0
subss  %xmm5,%xmm0
subss  %xmm8,%xmm0
ucomiss %xmm6,%xmm0
jp     a9ea <TIFFYCbCrToRGBInit+0x28a>
je     a9ee <TIFFYCbCrToRGBInit+0x28e>
movapd %xmm0,%xmm4
movdqu %xmm4,-0x80(%rbp)
cvttss2si %xmm9,%ecx
neg    %ecx
add    %r12d,%ecx
cvtsi2ss %ecx,%xmm0
mulss  %xmm7,%xmm0
divss  %xmm3,%xmm0
mov    %rax,%r15
callq  ac80 <CLAMPw>
cvttss2si %xmm0,%esi
mov    %rsi,%rax
imul   %r15d,%eax
add    $0x8000,%eax
sar    $0x10,%eax
mov    0x8(%rbx),%rcx
movslq %r14d,%rdx
mov    %eax,(%rcx,%rdx,4)
movdqu -0x50(%rbp),%xmm0
cvttss2si %xmm0,%eax
neg    %eax
add    %r12d,%eax
cvtsi2ss %eax,%xmm0
movss  0x467bc(%rip),%xmm1        # 51204 <_fini+0x220>
mulss  %xmm1,%xmm0
movdqu -0x80(%rbp),%xmm1
divss  %xmm1,%xmm0
movss  0x467ab(%rip),%xmm1        # 51208 <_fini+0x224>
movss  0x467a7(%rip),%xmm2        # 5120c <_fini+0x228>
mov    %r14,-0x80(%rbp)
mov    %rdx,%r14
mov    %rsi,%r15
callq  ac80 <CLAMPw>
cvttss2si %xmm0,%eax
mov    %rax,%rcx
imul   %r13d,%ecx
add    $0x8000,%ecx
sar    $0x10,%ecx
mov    0x10(%rbx),%rdx
mov    %ecx,(%rdx,%r14,4)
mov    -0x38(%rbp),%rcx
imul   %ecx,%r15d
mov    0x18(%rbx),%rcx
mov    %r15d,(%rcx,%r14,4)
mov    -0x30(%rbp),%rcx
imul   %ecx,%eax
lea    0x8000(%rax),%ecx
mov    0x20(%rbx),%rax
mov    %ecx,(%rax,%r14,4)
mov    0x28(%rbx),%r13
mov    -0x68(%rbp),%r15
movss  (%r15),%xmm0
movss  0x4(%r15),%xmm1
subss  %xmm0,%xmm1
xorpd  %xmm2,%xmm2
ucomiss %xmm2,%xmm1
jp     aadf <TIFFYCbCrToRGBInit+0x37f>
jne    aadf <TIFFYCbCrToRGBInit+0x37f>
movss  0x46735(%rip),%xmm1        # 51214 <_fini+0x230>
lea    0x80(%r12),%eax
cvttss2si %xmm0,%ecx
sub    %ecx,%eax
cvtsi2ss %eax,%xmm0
movss  0x466df(%rip),%xmm2        # 511d8 <_fini+0x1f4>
mulss  %xmm2,%xmm0
divss  %xmm1,%xmm0
movss  0x466ff(%rip),%xmm1        # 51208 <_fini+0x224>
movss  0x466fb(%rip),%xmm2        # 5120c <_fini+0x228>
callq  ac80 <CLAMPw>
cvttss2si %xmm0,%eax
mov    %eax,0x0(%r13,%r14,4)
mov    -0x80(%rbp),%rax
lea    0x1(%rax),%r14d
add    $0x1,%r12d
mov    -0x58(%rbp),%r13
mov    -0x60(%rbp),%rax
movss  0x466c5(%rip),%xmm5        # 51200 <_fini+0x21c>
movss  0x466d1(%rip),%xmm4        # 51214 <_fini+0x230>
xorpd  %xmm6,%xmm6
movss  0x466bd(%rip),%xmm2        # 5120c <_fini+0x228>
movss  0x466b1(%rip),%xmm1        # 51208 <_fini+0x224>
movss  0x466a5(%rip),%xmm7        # 51204 <_fini+0x220>
cmp    $0xff,%r14d
jle    a99e <TIFFYCbCrToRGBInit+0x23e>
mov    -0x8(%rbp),%rbx
xor    %eax,%eax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
leaveq 
retq   
movapd %xmm5,%xmm8
jmpq   a845 <TIFFYCbCrToRGBInit+0xe5>
movapd %xmm5,%xmm4
jmpq   a88d <TIFFYCbCrToRGBInit+0x12d>
nopw   0x0(%rax,%rax,1)

000000000000aba0 <TIFFYCbCrtoRGB>:
push   %rbp
mov    %rsp,%rbp
mov    $0xff,%eax
cmp    $0xff,%esi
jbe    abb4 <TIFFYCbCrtoRGB+0x14>
mov    %rax,%rsi
xor    %r10d,%r10d
test   %edx,%edx
jns    ac27 <TIFFYCbCrtoRGB+0x87>
mov    %r10,%rdx
test   %ecx,%ecx
jns    ac34 <TIFFYCbCrtoRGB+0x94>
mov    %r10,%rcx
movslq %ecx,%rcx
mov    0x8(%rdi),%rax
movslq (%rax,%rcx,4),%rax
mov    0x28(%rdi),%r11
mov    %esi,%esi
add    (%r11,%rsi,4),%eax
test   %eax,%eax
jns    ac41 <TIFFYCbCrtoRGB+0xa1>
mov    %r10,%rax
mov    %eax,(%r8)
mov    0x18(%rdi),%rax
movslq (%rax,%rcx,4),%rax
mov    0x20(%rdi),%r8
movslq %edx,%rcx
add    (%r8,%rcx,4),%eax
sar    $0x10,%eax
mov    0x28(%rdi),%rdx
add    (%rdx,%rsi,4),%eax
test   %eax,%eax
jns    ac4f <TIFFYCbCrtoRGB+0xaf>
mov    %r10,%rax
mov    %eax,(%r9)
mov    0x10(%rdi),%rax
movslq (%rax,%rcx,4),%rax
mov    0x28(%rdi),%rcx
add    (%rcx,%rsi,4),%eax
test   %eax,%eax
jns    ac5d <TIFFYCbCrtoRGB+0xbd>
mov    0x10(%rbp),%rax
mov    %r10d,(%rax)
leaveq 
retq   
cmp    $0xff,%edx
jle    abbe <TIFFYCbCrtoRGB+0x1e>
mov    %rax,%rdx
jmp    abbe <TIFFYCbCrtoRGB+0x1e>
cmp    $0xff,%ecx
jle    abc5 <TIFFYCbCrtoRGB+0x25>
mov    %rax,%rcx
jmp    abc5 <TIFFYCbCrtoRGB+0x25>
cmp    $0xff,%eax
jle    abe1 <TIFFYCbCrtoRGB+0x41>
mov    $0xff,%eax
jmp    abe1 <TIFFYCbCrtoRGB+0x41>
cmp    $0xff,%eax
jle    ac08 <TIFFYCbCrtoRGB+0x68>
mov    $0xff,%eax
jmp    ac08 <TIFFYCbCrtoRGB+0x68>
cmp    $0xff,%eax
jle    ac6c <TIFFYCbCrtoRGB+0xcc>
mov    $0xff,%r10d
jmp    ac1e <TIFFYCbCrtoRGB+0x7e>
mov    %rax,%r10
jmp    ac1e <TIFFYCbCrtoRGB+0x7e>
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   0x0(%rax)

000000000000ac80 <CLAMPw>:
push   %rbp
mov    %rsp,%rbp
ucomiss %xmm0,%xmm1
jbe    ac8f <CLAMPw+0xf>
movapd %xmm1,%xmm0
leaveq 
retq   
ucomiss %xmm2,%xmm0
jbe    ac9a <CLAMPw+0x1a>
movapd %xmm2,%xmm0
leaveq 
retq   
leaveq 
retq   
nopl   0x0(%rax)

000000000000aca0 <TIFFFindCODEC>:
push   %rbp
mov    %rsp,%rbp
mov    0x6fbf5(%rip),%rcx        # 7a8a0 <registeredCODECS>
jmp    acbd <TIFFFindCODEC+0x1d>
mov    0x8(%rcx),%rax
movzwl 0x8(%rax),%edx
cmp    %di,%dx
je     accb <TIFFFindCODEC+0x2b>
mov    (%rcx),%rcx
test   %rcx,%rcx
jne    acad <TIFFFindCODEC+0xd>
mov    0x6f2df(%rip),%rax        # 79fa8 <_TIFFBuiltinCODECS@@Base-0x710>
jmp    acda <TIFFFindCODEC+0x3a>
leaveq 
retq   
movzwl 0x8(%rax),%ecx
cmp    %cx,%di
je     ace6 <TIFFFindCODEC+0x46>
add    $0x18,%rax
mov    (%rax),%rcx
test   %rcx,%rcx
jne    accd <TIFFFindCODEC+0x2d>
xor    %eax,%eax
leaveq 
retq   
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

000000000000acf0 <TIFFRegisterCODEC>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %r15,-0x18(%rbp)
mov    %rdi,-0x10(%rbp)
mov    %rdx,-0x8(%rbp)
mov    %rsi,%r15
mov    %r15,%rdi
callq  8350 <strlen@plt>
lea    0x29(%rax),%rdi
callq  8440 <_TIFFmalloc@plt>
test   %rax,%rax
jne    ad44 <TIFFRegisterCODEC+0x54>
mov    %r15,%rcx
xor    %eax,%eax
lea    0x46507(%rip),%rsi        # 51230 <_fini+0x24c>
lea    0x46512(%rip),%rdx        # 51242 <_fini+0x25e>
mov    %rax,%rdi
mov    %rax,%r15
callq  8a00 <TIFFErrorExt@plt>
mov    %r15,%rax
mov    -0x18(%rbp),%r15
leaveq 
retq   
lea    0x10(%rax),%rcx
mov    %rcx,0x8(%rax)
lea    0x28(%rax),%rdi
mov    %rdi,(%rcx)
mov    %r15,%rsi
mov    %rax,%r15
callq  8160 <strcpy@plt>
mov    0x8(%r15),%rax
mov    -0x10(%rbp),%rcx
mov    %cx,0x8(%rax)
mov    0x8(%r15),%rax
mov    -0x8(%rbp),%rcx
mov    %rcx,0x10(%rax)
mov    0x6fb23(%rip),%rax        # 7a8a0 <registeredCODECS>
mov    %rax,(%r15)
mov    %r15,0x6fb19(%rip)        # 7a8a0 <registeredCODECS>
mov    0x8(%r15),%rax
mov    -0x18(%rbp),%r15
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   0x0(%rax)

000000000000ada0 <TIFFUnRegisterCODEC>:
push   %rbp
mov    %rsp,%rbp
lea    0x6faf5(%rip),%rax        # 7a8a0 <registeredCODECS>
jmp    adb9 <TIFFUnRegisterCODEC+0x19>
mov    0x8(%rcx),%rdx
cmp    %rdi,%rdx
je     adde <TIFFUnRegisterCODEC+0x3e>
mov    %rcx,%rax
mov    (%rax),%rcx
test   %rcx,%rcx
jne    adad <TIFFUnRegisterCODEC+0xd>
xor    %eax,%eax
lea    0x464a3(%rip),%rsi        # 5126d <_fini+0x289>
lea    0x464b0(%rip),%rdx        # 51281 <_fini+0x29d>
mov    (%rdi),%rcx
mov    %rax,%rdi
callq  8a00 <TIFFErrorExt@plt>
leaveq 
retq   
mov    (%rcx),%rdx
mov    %rdx,(%rax)
mov    %rcx,%rdi
callq  8bb0 <_TIFFfree@plt>
leaveq 
retq   
xchg   %ax,%ax

000000000000adf0 <TIFFGetConfiguredCODECs>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    0x6fa8d(%rip),%r14        # 7a8a0 <registeredCODECS>
xor    %r13d,%r13d
mov    $0x18,%ebx
mov    $0x1,%r12d
jmp    ae58 <TIFFGetConfiguredCODECs+0x68>
movslq %r12d,%rax
lea    (%rax,%rax,2),%r15
mov    %r15,%rsi
shl    $0x3,%rsi
mov    %r13,%rdi
callq  8100 <_TIFFrealloc@plt>
test   %rax,%rax
je     ae66 <TIFFGetConfiguredCODECs+0x76>
lea    -0x18(%rax,%r15,8),%rdi
mov    %rax,%r13
mov    %r14,%rsi
mov    %rbx,%rdx
callq  8790 <_TIFFmemcpy@plt>
mov    (%r14),%r14
add    $0x1,%r12d
test   %r14,%r14
jne    ae23 <TIFFGetConfiguredCODECs+0x33>
mov    0x6f144(%rip),%r14        # 79fa8 <_TIFFBuiltinCODECS@@Base-0x710>
jmp    aec7 <TIFFGetConfiguredCODECs+0xd7>
mov    %r13,%rdi
callq  8bb0 <_TIFFfree@plt>
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
xor    %eax,%eax
leaveq 
retq   
movzwl 0x8(%r14),%edi
callq  8ad0 <TIFFIsCODECConfigured@plt>
test   %eax,%eax
je     aec3 <TIFFGetConfiguredCODECs+0xd3>
lea    (%r15,%r15,2),%r15
mov    %r15,%rsi
shl    $0x3,%rsi
mov    %r13,%rdi
callq  8100 <_TIFFrealloc@plt>
test   %rax,%rax
je     af0a <TIFFGetConfiguredCODECs+0x11a>
lea    -0x18(%rax,%r15,8),%rdi
mov    %rax,%r13
mov    %r14,%rsi
mov    %rbx,%rdx
callq  8790 <_TIFFmemcpy@plt>
add    $0x1,%r12d
add    $0x18,%r14
movslq %r12d,%r15
mov    (%r14),%rax
test   %rax,%rax
jne    ae86 <TIFFGetConfiguredCODECs+0x96>
lea    (%r15,%r15,2),%r12
mov    %r12,%rsi
shl    $0x3,%rsi
mov    %r13,%rdi
callq  8100 <_TIFFrealloc@plt>
test   %rax,%rax
jne    af2a <TIFFGetConfiguredCODECs+0x13a>
mov    %r13,%rdi
callq  8bb0 <_TIFFfree@plt>
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
xor    %eax,%eax
leaveq 
retq   
mov    %r13,%rdi
callq  8bb0 <_TIFFfree@plt>
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
xor    %eax,%eax
leaveq 
retq   
lea    -0x18(%rax,%r12,8),%rdi
mov    %rbx,%rdx
mov    %rax,%r12
xor    %esi,%esi
callq  88e0 <_TIFFmemset@plt>
mov    %r12,%rax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)

000000000000af60 <_TIFFNoRowEncode>:
push   %rbp
mov    %rsp,%rbp
lea    0x4634a(%rip),%rsi        # 512b5 <_fini+0x2d1>
callq  b1c0 <TIFFNoEncode>
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   (%rax)

000000000000af80 <_TIFFNoStripEncode>:
push   %rbp
mov    %rsp,%rbp
lea    0x46333(%rip),%rsi        # 512be <_fini+0x2da>
callq  b1c0 <TIFFNoEncode>
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   (%rax)

000000000000afa0 <_TIFFNoTileEncode>:
push   %rbp
mov    %rsp,%rbp
lea    0x46319(%rip),%rsi        # 512c4 <_fini+0x2e0>
callq  b1c0 <TIFFNoEncode>
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   (%rax)

000000000000afc0 <_TIFFNoRowDecode>:
push   %rbp
mov    %rsp,%rbp
lea    0x462ea(%rip),%rsi        # 512b5 <_fini+0x2d1>
callq  b260 <TIFFNoDecode>
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   (%rax)

000000000000afe0 <_TIFFNoStripDecode>:
push   %rbp
mov    %rsp,%rbp
lea    0x462d3(%rip),%rsi        # 512be <_fini+0x2da>
callq  b260 <TIFFNoDecode>
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   (%rax)

000000000000b000 <_TIFFNoTileDecode>:
push   %rbp
mov    %rsp,%rbp
lea    0x462b9(%rip),%rsi        # 512c4 <_fini+0x2e0>
callq  b260 <TIFFNoDecode>
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   (%rax)

000000000000b020 <_TIFFNoPreCode>:
push   %rbp
mov    %rsp,%rbp
mov    $0x1,%eax
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

000000000000b030 <_TIFFNoSeek>:
push   %rbp
mov    %rsp,%rbp
xor    %eax,%eax
mov    0x3b8(%rdi),%rcx
mov    (%rdi),%rsi
mov    %rcx,%rdi
lea    0x4627f(%rip),%rdx        # 512c9 <_fini+0x2e5>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

000000000000b060 <_TIFFSetDefaultCompressionState>:
push   %rbp
mov    %rsp,%rbp
lea    0x285(%rip),%rax        # b2f0 <_TIFFNoFixupTags>
mov    %rax,0x2c0(%rdi)
movl   $0x1,0x2b8(%rdi)
lea    0x27d(%rip),%rdx        # b300 <_TIFFtrue>
mov    %rdx,0x2c8(%rdi)
mov    0x6eed7(%rip),%rcx        # 79f68 <_TIFFNoPreCode@@Base+0x6ef48>
mov    %rcx,0x2d0(%rdi)
mov    0x6eeb1(%rip),%rax        # 79f50 <_TIFFNoRowDecode@@Base+0x6ef90>
mov    %rax,0x2f8(%rdi)
mov    0x6ef23(%rip),%rax        # 79fd0 <_TIFFNoStripDecode@@Base+0x6eff0>
mov    %rax,0x308(%rdi)
mov    0x6ee65(%rip),%rax        # 79f20 <_TIFFNoTileDecode@@Base+0x6ef20>
mov    %rax,0x318(%rdi)
movl   $0x1,0x2e0(%rdi)
mov    %rdx,0x2d8(%rdi)
mov    %rcx,0x2e8(%rdi)
mov    %rdx,0x2f0(%rdi)
mov    0x6eea8(%rip),%rax        # 79f90 <_TIFFNoRowEncode@@Base+0x6f030>
mov    %rax,0x300(%rdi)
mov    0x6ee22(%rip),%rax        # 79f18 <_TIFFNoStripEncode@@Base+0x6ef98>
mov    %rax,0x310(%rdi)
mov    0x6ee34(%rip),%rax        # 79f38 <_TIFFNoTileEncode@@Base+0x6ef98>
mov    %rax,0x320(%rdi)
lea    0x1fe(%rip),%rax        # b310 <_TIFFvoid>
mov    %rax,0x328(%rdi)
mov    0x6eeb8(%rip),%rcx        # 79fd8 <_TIFFNoSeek@@Base+0x6efa8>
mov    %rcx,0x330(%rdi)
mov    %rax,0x338(%rdi)
mov    0x6ee2b(%rip),%rax        # 79f60 <_TIFFDefaultStripSize@@Base+0x2cf10>
mov    %rax,0x340(%rdi)
mov    0x6ede5(%rip),%rax        # 79f28 <_TIFFDefaultTileSize@@Base+0x2bfc8>
mov    %rax,0x348(%rdi)
mov    0x10(%rdi),%eax
and    $0xfffdfeff,%eax
mov    %eax,0x10(%rdi)
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

000000000000b160 <TIFFSetCompressionScheme>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %r14,-0x10(%rbp)
mov    %r15,-0x18(%rbp)
mov    %r13,-0x8(%rbp)
mov    %rsi,%r13
mov    %rdi,%r14
mov    %r13,%rdi
callq  8530 <TIFFFindCODEC@plt>
mov    %rax,%r15
mov    %r14,%rdi
callq  8740 <_TIFFSetDefaultCompressionState@plt>
test   %r15,%r15
jne    b1a5 <TIFFSetCompressionScheme+0x45>
mov    $0x1,%eax
mov    -0x8(%rbp),%r13
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
leaveq 
retq   
mov    %r13,%rsi
mov    %r14,%rdi
callq  *0x10(%r15)
mov    -0x8(%rbp),%r13
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
leaveq 
retq   
nopl   (%rax)

000000000000b1c0 <TIFFNoEncode>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %r13,-0x8(%rbp)
mov    %r14,-0x10(%rbp)
mov    %r15,-0x18(%rbp)
mov    %rsi,%r14
mov    %rdi,%r15
movzwl 0x78(%r15),%r13d
mov    %r13,%rdi
callq  8530 <TIFFFindCODEC@plt>
test   %rax,%rax
jne    b21f <TIFFNoEncode+0x5f>
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
mov    (%r15),%rsi
mov    %r13,%rcx
mov    %r14,%r8
lea    0x4611b(%rip),%rdx        # 51320 <_fini+0x33c>
callq  8a00 <TIFFErrorExt@plt>
mov    $0xffffffffffffffff,%rax
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
leaveq 
retq   
xor    %r8d,%r8d
mov    0x3b8(%r15),%rdi
mov    (%r15),%rsi
lea    0x460cb(%rip),%rdx        # 512fe <_fini+0x31a>
mov    (%rax),%rcx
mov    %r8,%rax
mov    %r14,%r8
callq  8a00 <TIFFErrorExt@plt>
mov    $0xffffffffffffffff,%rax
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)

000000000000b260 <TIFFNoDecode>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %r13,-0x8(%rbp)
mov    %r14,-0x10(%rbp)
mov    %r15,-0x18(%rbp)
mov    %rsi,%r14
mov    %rdi,%r15
movzwl 0x78(%r15),%r13d
mov    %r13,%rdi
callq  8530 <TIFFFindCODEC@plt>
test   %rax,%rax
jne    b2ba <TIFFNoDecode+0x5a>
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
mov    (%r15),%rsi
mov    %r13,%rcx
mov    %r14,%r8
lea    0x460d2(%rip),%rdx        # 51377 <_fini+0x393>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
leaveq 
retq   
xor    %r8d,%r8d
mov    0x3b8(%r15),%rdi
mov    (%r15),%rsi
lea    0x46087(%rip),%rdx        # 51355 <_fini+0x371>
mov    (%rax),%rcx
mov    %r8,%rax
mov    %r14,%r8
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
leaveq 
retq   
nopl   0x0(%rax)

000000000000b2f0 <_TIFFNoFixupTags>:
push   %rbp
mov    %rsp,%rbp
mov    $0x1,%eax
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

000000000000b300 <_TIFFtrue>:
push   %rbp
mov    %rsp,%rbp
mov    $0x1,%eax
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

000000000000b310 <_TIFFvoid>:
push   %rbp
mov    %rsp,%rbp
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)

000000000000b320 <TIFFGetField>:
push   %rbp
mov    %rsp,%rbp
sub    $0xd0,%rsp
mov    %rdx,-0xa0(%rbp)
mov    %rcx,-0x98(%rbp)
mov    %r8,-0x90(%rbp)
mov    %r9,-0x88(%rbp)
movsd  %xmm0,-0x80(%rbp)
movsd  %xmm1,-0x70(%rbp)
movsd  %xmm2,-0x60(%rbp)
movsd  %xmm3,-0x50(%rbp)
movsd  %xmm4,-0x40(%rbp)
movsd  %xmm5,-0x30(%rbp)
movsd  %xmm6,-0x20(%rbp)
movsd  %xmm7,-0x10(%rbp)
lea    -0xc8(%rbp),%rdx
movl   $0x10,(%rdx)
movl   $0x30,0x4(%rdx)
lea    -0xb0(%rbp),%rax
mov    %rax,0x10(%rdx)
lea    0x10(%rbp),%rax
mov    %rax,0x8(%rdx)
callq  8250 <TIFFVGetField@plt>
leaveq 
retq   
nopl   (%rax)

000000000000b3a0 <TIFFVGetField>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %r15,-0x10(%rbp)
mov    %rdi,-0x18(%rbp)
mov    %rdx,-0x8(%rbp)
xor    %edx,%edx
mov    %rsi,%r15
callq  8680 <TIFFFindField@plt>
test   %rax,%rax
jne    b3cb <TIFFVGetField+0x2b>
xor    %eax,%eax
mov    -0x10(%rbp),%r15
leaveq 
retq   
cmp    $0xffff,%r15d
jbe    b3eb <TIFFVGetField+0x4b>
mov    -0x18(%rbp),%rdi
mov    %r15,%rsi
mov    -0x8(%rbp),%rdx
callq  *0x410(%rdi)
mov    -0x10(%rbp),%r15
leaveq 
retq   
mov    $0x1,%edx
movzwl 0x18(%rax),%esi
movzwl 0x18(%rax),%ecx
and    $0x1f,%ecx
shl    %cl,%rdx
shr    $0x5,%esi
movslq %esi,%rax
mov    -0x18(%rbp),%rdi
and    0x38(%rdi,%rax,8),%rdx
test   %rdx,%rdx
jne    b3d8 <TIFFVGetField+0x38>
xor    %eax,%eax
mov    -0x10(%rbp),%r15
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

000000000000b420 <TIFFNumberOfDirectories>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    %r12,-0x8(%rbp)
mov    %r13,-0x10(%rbp)
mov    %r14,-0x18(%rbp)
mov    %r15,-0x20(%rbp)
lea    -0x28(%rbp),%r13
xor    %r14d,%r14d
mov    0x10(%rdi),%eax
and    $0x80000,%eax
test   %eax,%eax
jne    b45d <TIFFNumberOfDirectories+0x3d>
mov    0x26c(%rdi),%eax
mov    %rax,-0x28(%rbp)
mov    %rdi,%r12
mov    %r14,%r15
jmp    b48d <TIFFNumberOfDirectories+0x6d>
mov    0x270(%rdi),%rax
mov    %rax,-0x28(%rbp)
mov    %rdi,%r12
mov    %r14,%r15
jmp    b48d <TIFFNumberOfDirectories+0x6d>
mov    %r12,%rdi
mov    %r13,%rsi
mov    %r14,%rdx
callq  10070 <TIFFAdvanceDirectory>
test   %eax,%eax
je     b4ab <TIFFNumberOfDirectories+0x8b>
cmp    $0xfffe,%r15w
ja     b4c0 <TIFFNumberOfDirectories+0xa0>
add    $0x1,%r15d
mov    -0x28(%rbp),%rax
test   %rax,%rax
jne    b470 <TIFFNumberOfDirectories+0x50>
mov    %r15,%rax
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
leaveq 
retq   
mov    %r15,%rax
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%r12),%rdi
lea    0x45f6f(%rip),%rsi        # 51440 <module.8>
lea    0x45f80(%rip),%rdx        # 51458 <module.8+0x18>
callq  8a00 <TIFFErrorExt@plt>
mov    $0xffff,%eax
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nop

000000000000b500 <TIFFCurrentDirOffset>:
push   %rbp
mov    %rsp,%rbp
mov    0x18(%rdi),%rax
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

000000000000b510 <TIFFFreeDirectory>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rdi,%r14
lea    0x38(%r14),%rdi
xor    %r15d,%r15d
mov    $0x4,%edx
mov    %r15,%rsi
callq  88e0 <_TIFFmemset@plt>
mov    0x90(%r14),%rdi
test   %rdi,%rdi
je     b553 <TIFFFreeDirectory+0x43>
callq  8bb0 <_TIFFfree@plt>
movq   $0x0,0x90(%r14)
mov    0x98(%r14),%rdi
test   %rdi,%rdi
je     b56f <TIFFFreeDirectory+0x5f>
callq  8bb0 <_TIFFfree@plt>
movq   $0x0,0x98(%r14)
mov    0xb8(%r14),%rdi
test   %rdi,%rdi
je     b58b <TIFFFreeDirectory+0x7b>
callq  8bb0 <_TIFFfree@plt>
movq   $0x0,0xb8(%r14)
mov    0xc0(%r14),%rdi
test   %rdi,%rdi
je     b5a7 <TIFFFreeDirectory+0x97>
callq  8bb0 <_TIFFfree@plt>
movq   $0x0,0xc0(%r14)
mov    0xc8(%r14),%rdi
test   %rdi,%rdi
je     b5c3 <TIFFFreeDirectory+0xb3>
callq  8bb0 <_TIFFfree@plt>
movq   $0x0,0xc8(%r14)
mov    0xd8(%r14),%rdi
test   %rdi,%rdi
je     b5df <TIFFFreeDirectory+0xcf>
callq  8bb0 <_TIFFfree@plt>
movq   $0x0,0xd8(%r14)
mov    0x100(%r14),%rdi
test   %rdi,%rdi
je     b5fb <TIFFFreeDirectory+0xeb>
callq  8bb0 <_TIFFfree@plt>
movq   $0x0,0x100(%r14)
mov    0x138(%r14),%rdi
test   %rdi,%rdi
je     b617 <TIFFFreeDirectory+0x107>
callq  8bb0 <_TIFFfree@plt>
movq   $0x0,0x138(%r14)
mov    0x128(%r14),%rdi
test   %rdi,%rdi
je     b633 <TIFFFreeDirectory+0x123>
callq  8bb0 <_TIFFfree@plt>
movq   $0x0,0x128(%r14)
mov    0x110(%r14),%rdi
test   %rdi,%rdi
je     b64f <TIFFFreeDirectory+0x13f>
callq  8bb0 <_TIFFfree@plt>
movq   $0x0,0x110(%r14)
mov    0x118(%r14),%rdi
test   %rdi,%rdi
je     b66b <TIFFFreeDirectory+0x15b>
callq  8bb0 <_TIFFfree@plt>
movq   $0x0,0x118(%r14)
mov    0x120(%r14),%rdi
test   %rdi,%rdi
je     b687 <TIFFFreeDirectory+0x177>
callq  8bb0 <_TIFFfree@plt>
movq   $0x0,0x120(%r14)
mov    0xe8(%r14),%rdi
test   %rdi,%rdi
je     b6a3 <TIFFFreeDirectory+0x193>
callq  8bb0 <_TIFFfree@plt>
movq   $0x0,0xe8(%r14)
mov    0xf0(%r14),%rdi
test   %rdi,%rdi
je     b6bf <TIFFFreeDirectory+0x1af>
callq  8bb0 <_TIFFfree@plt>
movq   $0x0,0xf0(%r14)
mov    0x40(%r14),%rax
and    $0xffffffffffffff7f,%rax
mov    %rax,0x40(%r14)
mov    0x40(%r14),%rax
and    $0xfffffffffffffeff,%rax
mov    %rax,0x40(%r14)
jmp    b6fe <TIFFFreeDirectory+0x1ee>
mov    0x148(%r14),%rcx
movslq %r15d,%rax
lea    (%rax,%rax,2),%rax
mov    0x10(%rcx,%rax,8),%rdi
test   %rdi,%rdi
je     b6fa <TIFFFreeDirectory+0x1ea>
callq  8bb0 <_TIFFfree@plt>
add    $0x1,%r15d
movslq 0x140(%r14),%rax
cmp    %r15d,%eax
jg     b6dd <TIFFFreeDirectory+0x1cd>
movl   $0x0,0x140(%r14)
mov    0x148(%r14),%rdi
test   %rdi,%rdi
jne    b72b <TIFFFreeDirectory+0x21b>
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
callq  8bb0 <_TIFFfree@plt>
movq   $0x0,0x148(%r14)
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)

000000000000b750 <TIFFCreateDirectory>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x8(%rbp)
mov    %rdi,%r15
callq  88d0 <TIFFDefaultDirectory@plt>
movq   $0x0,0x18(%r15)
movq   $0x0,0x20(%r15)
movq   $0x0,0x288(%r15)
movl   $0xffffffff,0x27c(%r15)
movl   $0xffffffff,0x284(%r15)
xor    %eax,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
nopl   (%rax)

000000000000b7a0 <TIFFCreateCustomDirectory>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rsi,%r15
mov    %rdi,%r14
callq  88d0 <TIFFDefaultDirectory@plt>
mov    %r15,%rsi
mov    %r14,%rdi
callq  82d0 <_TIFFSetupFields@plt>
movq   $0x0,0x18(%r14)
movq   $0x0,0x20(%r14)
movq   $0x0,0x288(%r14)
movl   $0xffffffff,0x27c(%r14)
movl   $0xffffffff,0x284(%r14)
xor    %eax,%eax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

000000000000b810 <TIFFCreateEXIFDirectory>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x8(%rbp)
mov    %rdi,%r15
callq  8200 <_TIFFGetExifFields@plt>
mov    %rax,%rsi
mov    %r15,%rdi
callq  85d0 <TIFFCreateCustomDirectory@plt>
mov    -0x8(%rbp),%r15
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)

000000000000b840 <TIFFLastDirectory>:
push   %rbp
mov    %rsp,%rbp
mov    0x20(%rdi),%rax
test   %rax,%rax
jne    b854 <TIFFLastDirectory+0x14>
mov    $0x1,%eax
leaveq 
retq   
xor    %eax,%eax
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

000000000000b860 <TIFFSetDirectory>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rsi,-0x8(%rbp)
lea    -0x30(%rbp),%r15
xor    %r13d,%r13d
mov    0x10(%rdi),%eax
and    $0x80000,%eax
test   %eax,%eax
jne    b8a1 <TIFFSetDirectory+0x41>
mov    0x26c(%rdi),%eax
mov    %rax,-0x30(%rbp)
mov    %rdi,%r12
mov    %rsi,%r14
jmp    b8bb <TIFFSetDirectory+0x5b>
mov    0x270(%rdi),%rax
mov    %rax,-0x30(%rbp)
mov    %rdi,%r12
mov    %rsi,%r14
jmp    b8bb <TIFFSetDirectory+0x5b>
add    $0xffff,%r14d
test   %r14w,%r14w
je     b8f1 <TIFFSetDirectory+0x91>
mov    -0x30(%rbp),%rax
test   %rax,%rax
je     b8f1 <TIFFSetDirectory+0x91>
mov    %r12,%rdi
mov    %r15,%rsi
mov    %r13,%rdx
callq  10070 <TIFFAdvanceDirectory>
test   %eax,%eax
jne    b8b4 <TIFFSetDirectory+0x54>
mov    %r13,%rax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
leaveq 
retq   
mov    -0x30(%rbp),%rax
mov    %rax,0x20(%r12)
mov    -0x8(%rbp),%rax
sub    %r14w,%ax
add    $0xffff,%eax
mov    %ax,0x280(%r12)
mov    %r12,%rdi
movw   $0x0,0x32(%rdi)
callq  8b30 <TIFFReadDirectory@plt>
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
leaveq 
retq   

000000000000b930 <TIFFSetSubDirectory>:
push   %rbp
mov    %rsp,%rbp
mov    %rsi,0x20(%rdi)
movw   $0x0,0x32(%rdi)
callq  8b30 <TIFFReadDirectory@plt>
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)

000000000000b950 <TIFFUnlinkDirectory>:
push   %rbp
mov    %rsp,%rbp
sub    $0x50,%rsp
lea    0x45b36(%rip),%r8        # 51495 <module.10>
movslq 0xc(%rdi),%rax
test   %eax,%eax
je     b9c5 <TIFFUnlinkDirectory+0x75>
mov    $0x4,%edx
mov    $0x8,%ecx
mov    0x10(%rdi),%eax
and    $0x80000,%eax
test   %eax,%eax
jne    b9e1 <TIFFUnlinkDirectory+0x91>
mov    0x26c(%rdi),%eax
mov    %rdx,%rcx
mov    %rcx,-0x40(%rbp)
mov    %rax,-0x48(%rbp)
lea    -0x48(%rbp),%rcx
lea    -0x40(%rbp),%rax
lea    0xffff(%rsi),%edx
mov    %rbx,-0x10(%rbp)
mov    %r12,-0x18(%rbp)
mov    %r13,-0x20(%rbp)
mov    %r14,-0x28(%rbp)
mov    %r15,-0x30(%rbp)
mov    %rsi,-0x8(%rbp)
mov    %r8,%rbx
mov    %rdi,%r12
mov    %rcx,%r13
mov    %rdx,%r14
mov    %rax,%r15
jmp    ba0c <TIFFUnlinkDirectory+0xbc>
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
mov    %r8,%rsi
lea    0x45ad1(%rip),%rdx        # 514a9 <module.10+0x14>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
mov    0x270(%rdi),%rax
jmp    b986 <TIFFUnlinkDirectory+0x36>
mov    -0x48(%rbp),%rax
test   %rax,%rax
je     ba40 <TIFFUnlinkDirectory+0xf0>
mov    %r12,%rdi
mov    %r13,%rsi
mov    %r15,%rdx
callq  10070 <TIFFAdvanceDirectory>
test   %eax,%eax
je     ba78 <TIFFUnlinkDirectory+0x128>
add    $0xffff,%r14d
test   %r14w,%r14w
jne    b9ea <TIFFUnlinkDirectory+0x9a>
mov    %r12,%rdi
mov    %r13,%rsi
xor    %r14d,%r14d
mov    %r14,%rdx
callq  10070 <TIFFAdvanceDirectory>
test   %eax,%eax
jne    ba90 <TIFFUnlinkDirectory+0x140>
mov    %r14,%rax
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
mov    -0x10(%rbp),%rbx
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%r12),%rdi
lea    0x45a83(%rip),%rdx        # 514d4 <module.10+0x3f>
mov    -0x8(%rbp),%rcx
movzwl %cx,%ecx
mov    %rbx,%rsi
callq  8a00 <TIFFErrorExt@plt>
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
mov    -0x10(%rbp),%rbx
xor    %eax,%eax
leaveq 
retq   
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
mov    -0x10(%rbp),%rbx
xor    %eax,%eax
leaveq 
retq   
mov    0x3d0(%r12),%rax
mov    0x3b8(%r12),%rdi
mov    -0x40(%rbp),%rsi
mov    %r14,%rdx
callq  *%rax
lea    0x45a79(%rip),%r15        # 51529 <module.10+0x94>
mov    0x10(%r12),%eax
mov    %rax,%rcx
and    $0x80000,%ecx
test   %ecx,%ecx
jne    baf3 <TIFFUnlinkDirectory+0x1a3>
mov    -0x48(%rbp),%rdx
mov    %edx,-0x34(%rbp)
mov    %edx,%ecx
cmp    %rcx,%rdx
je     bb56 <TIFFUnlinkDirectory+0x206>
lea    0x45a15(%rip),%rdi        # 514f0 <module.10+0x5b>
lea    0x45a29(%rip),%rsi        # 5150b <module.10+0x76>
mov    $0x6b5,%edx
lea    0x45a27(%rip),%rcx        # 51515 <module.10+0x80>
callq  8490 <__assert_fail@plt>
and    $0x80,%eax
test   %eax,%eax
je     bb04 <TIFFUnlinkDirectory+0x1b4>
mov    %r13,%rdi
callq  8730 <TIFFSwabLong8@plt>
mov    %r13,%rsi
mov    0x3c8(%r12),%rax
mov    0x3b8(%r12),%rdi
mov    $0x8,%edx
callq  *%rax
cmp    $0x8,%rax
je     bbbc <TIFFUnlinkDirectory+0x26c>
xor    %eax,%eax
mov    0x3b8(%r12),%rdi
mov    %r15,%rdx
mov    %rbx,%rsi
callq  8a00 <TIFFErrorExt@plt>
mov    %r14,%rax
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
mov    -0x10(%rbp),%rbx
leaveq 
retq   
lea    -0x34(%rbp),%rsi
and    $0x80,%eax
test   %eax,%eax
je     bb71 <TIFFUnlinkDirectory+0x221>
mov    %rsi,%r13
mov    %r13,%rdi
callq  8480 <TIFFSwabLong@plt>
mov    %r13,%rsi
mov    0x3c8(%r12),%rax
mov    0x3b8(%r12),%rdi
mov    $0x4,%edx
callq  *%rax
cmp    $0x4,%rax
je     bbbc <TIFFUnlinkDirectory+0x26c>
xor    %eax,%eax
mov    0x3b8(%r12),%rdi
mov    %r15,%rdx
mov    %rbx,%rsi
callq  8a00 <TIFFErrorExt@plt>
mov    %r14,%rax
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
mov    -0x10(%rbp),%rbx
leaveq 
retq   
mov    %r12,%rdi
callq  *0x338(%r12)
mov    0x10(%r12),%eax
and    $0x200,%eax
test   %eax,%eax
jne    bc45 <TIFFUnlinkDirectory+0x2f5>
mov    0x10(%r12),%eax
and    $0xffefefaf,%eax
mov    %eax,0x10(%r12)
mov    %r12,%rdi
callq  8510 <TIFFFreeDirectory@plt>
mov    %r12,%rdi
callq  88d0 <TIFFDefaultDirectory@plt>
movq   $0x0,0x18(%r12)
movq   $0x0,0x20(%r12)
movq   $0x0,0x288(%r12)
movl   $0xffffffff,0x27c(%r12)
movl   $0xffffffff,0x284(%r12)
mov    $0x1,%eax
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
mov    -0x10(%rbp),%rbx
leaveq 
retq   
mov    0x368(%r12),%rdi
test   %rdi,%rdi
je     bbd5 <TIFFUnlinkDirectory+0x285>
callq  8bb0 <_TIFFfree@plt>
movq   $0x0,0x368(%r12)
movq   $0x0,0x390(%r12)
movq   $0x0,0x378(%r12)
movq   $0x0,0x380(%r12)
jmpq   bbd5 <TIFFUnlinkDirectory+0x285>
nopl   0x0(%rax)

000000000000bc90 <TIFFSetField>:
push   %rbp
mov    %rsp,%rbp
sub    $0xd0,%rsp
mov    %rdx,-0xa0(%rbp)
mov    %rcx,-0x98(%rbp)
mov    %r8,-0x90(%rbp)
mov    %r9,-0x88(%rbp)
movsd  %xmm0,-0x80(%rbp)
movsd  %xmm1,-0x70(%rbp)
movsd  %xmm2,-0x60(%rbp)
movsd  %xmm3,-0x50(%rbp)
movsd  %xmm4,-0x40(%rbp)
movsd  %xmm5,-0x30(%rbp)
movsd  %xmm6,-0x20(%rbp)
movsd  %xmm7,-0x10(%rbp)
lea    -0xc8(%rbp),%rdx
movl   $0x10,(%rdx)
movl   $0x30,0x4(%rdx)
lea    -0xb0(%rbp),%rax
mov    %rax,0x10(%rdx)
lea    0x10(%rbp),%rax
mov    %rax,0x8(%rdx)
callq  89a0 <TIFFVSetField@plt>
leaveq 
retq   
nopl   (%rax)

000000000000bd10 <TIFFVSetField>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %r13,-0x8(%rbp)
mov    %r14,-0x10(%rbp)
mov    %r15,-0x18(%rbp)
mov    %rdx,%r13
mov    %rdi,%r15
mov    %rsi,%r14
callq  e740 <OkToChangeTag>
test   %eax,%eax
jne    bd46 <TIFFVSetField+0x36>
xor    %eax,%eax
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
leaveq 
retq   
mov    %r13,%rdx
mov    %r14,%rsi
mov    %r15,%rdi
callq  *0x408(%rdi)
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

000000000000bd70 <TIFFUnsetField>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %rdi,-0x10(%rbp)
mov    %rsi,-0x8(%rbp)
callq  8ae0 <TIFFFieldWithTag@plt>
test   %rax,%rax
jne    bd8e <TIFFUnsetField+0x1e>
xor    %eax,%eax
leaveq 
retq   
mov    $0x1,%edi
movzwl 0x18(%rax),%edx
cmp    $0x41,%dx
jne    bdac <TIFFUnsetField+0x3c>
xor    %ecx,%ecx
mov    -0x8(%rbp),%rsi
mov    -0x10(%rbp),%r8
mov    %rcx,%rdx
jmp    bdfb <TIFFUnsetField+0x8b>
mov    %rdi,%rax
mov    %rdx,%rcx
and    $0x1f,%ecx
mov    %rax,%rsi
shl    %cl,%rsi
not    %rsi
shr    $0x5,%edx
movslq %edx,%rcx
mov    -0x10(%rbp),%r8
and    0x38(%r8,%rcx,8),%rsi
mov    %rsi,0x38(%r8,%rcx,8)
mov    0x10(%r8),%ecx
or     $0x8,%ecx
mov    %ecx,0x10(%r8)
leaveq 
retq   
movslq %edx,%rax
lea    (%rax,%rax,2),%rcx
shl    $0x3,%rcx
add    0x148(%r8),%rcx
mov    (%rcx),%rax
cmp    (%rax),%esi
je     be04 <TIFFUnsetField+0x94>
add    $0x1,%edx
cmp    0x140(%r8),%edx
jl     bddf <TIFFUnsetField+0x6f>
cmp    0x140(%r8),%edx
jl     be12 <TIFFUnsetField+0xa2>
mov    %rdi,%rax
jmp    bdd2 <TIFFUnsetField+0x62>
mov    0x10(%rcx),%rdi
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %r8,%r14
mov    %rdx,%r15
callq  8bb0 <_TIFFfree@plt>
jmp    be63 <TIFFUnsetField+0xf3>
mov    0x148(%r14),%r8
lea    0x1(%r15),%edi
movslq %edi,%rax
lea    (%rax,%rax,2),%rsi
mov    (%r8,%rsi,8),%rdx
movslq %r15d,%rax
lea    (%rax,%rax,2),%rcx
mov    %rdx,(%r8,%rcx,8)
mov    0x8(%r8,%rsi,8),%rax
mov    %rax,0x8(%r8,%rcx,8)
mov    0x10(%r8,%rsi,8),%rax
mov    %rax,0x10(%r8,%rcx,8)
mov    %rdi,%r15
movslq 0x140(%r14),%rax
add    $0xffffffff,%eax
cmp    %r15d,%eax
jg     be2b <TIFFUnsetField+0xbb>
mov    %eax,0x140(%r14)
mov    %r14,%r8
mov    $0x1,%eax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
jmpq   bdd2 <TIFFUnsetField+0x62>
xchg   %ax,%ax

000000000000be90 <TIFFSetTagExtender>:
push   %rbp
mov    %rsp,%rbp
mov    0x6ea0d(%rip),%rax        # 7a8a8 <_TIFFextender>
mov    %rdi,0x6ea06(%rip)        # 7a8a8 <_TIFFextender>
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nop

000000000000beb0 <TIFFDefaultDirectory>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x10(%rbp)
mov    %r14,%r15
mov    %rdi,%r14
callq  8940 <_TIFFGetFields@plt>
mov    %rax,%rsi
mov    %r14,%rdi
callq  82d0 <_TIFFSetupFields@plt>
lea    0x38(%r14),%rdi
xor    %esi,%esi
mov    $0x118,%edx
callq  88e0 <_TIFFmemset@plt>
movw   $0x1,0x7e(%r14)
movw   $0x1,0x74(%r14)
movw   $0x1,0x7c(%r14)
movw   $0x1,0x80(%r14)
movw   $0x1,0x82(%r14)
movl   $0xffffffff,0x84(%r14)
movl   $0x0,0x64(%r14)
movl   $0x0,0x68(%r14)
movl   $0x1,0x6c(%r14)
movl   $0x1,0xf8(%r14)
movw   $0x2,0xa8(%r14)
movw   $0x1,0x76(%r14)
movl   $0x1,0x60(%r14)
movw   $0x2,0x108(%r14)
movw   $0x2,0x10a(%r14)
movw   $0x1,0x10c(%r14)
mov    0x6dfd1(%rip),%rax        # 79f48 <_TIFFNoPostDecode@@Base+0x2f598>
mov    %rax,0x3e8(%r14)
movq   $0x0,0x400(%r14)
lea    0x4c0(%rip),%rax        # c450 <_TIFFVSetField>
mov    %rax,0x408(%r14)
lea    0x2892(%rip),%rax        # e830 <_TIFFVGetField>
mov    %rax,0x410(%r14)
movq   $0x0,0x418(%r14)
mov    0x430(%r14),%rax
test   %rax,%rax
je     c020 <TIFFDefaultDirectory+0x170>
mov    %r15,-0x8(%rbp)
xor    %r15d,%r15d
jmp    bfeb <TIFFDefaultDirectory+0x13b>
mov    %r15d,%eax
lea    (%rax,%rax,2),%rax
shl    $0x3,%rax
add    0x428(%r14),%rax
mov    0x4(%rax),%ecx
test   %ecx,%ecx
je     bfe7 <TIFFDefaultDirectory+0x137>
mov    0x10(%rax),%rdi
callq  8bb0 <_TIFFfree@plt>
add    $0x1,%r15d
mov    0x430(%r14),%rcx
mov    %r15d,%eax
cmp    %rax,%rcx
ja     bfc5 <TIFFDefaultDirectory+0x115>
mov    0x428(%r14),%rdi
callq  8bb0 <_TIFFfree@plt>
movq   $0x0,0x430(%r14)
movq   $0x0,0x428(%r14)
mov    -0x8(%rbp),%r15
mov    0x6e881(%rip),%rax        # 7a8a8 <_TIFFextender>
test   %rax,%rax
je     c031 <TIFFDefaultDirectory+0x181>
mov    %r14,%rdi
callq  *%rax
xor    %eax,%eax
mov    $0x103,%esi
mov    $0x1,%edx
mov    %r14,%rdi
callq  8290 <TIFFSetField@plt>
mov    0x10(%r14),%eax
and    $0xfffffbf7,%eax
mov    %eax,0x10(%r14)
mov    %r15,%r14
mov    $0x1,%eax
mov    -0x10(%rbp),%r15
leaveq 
retq   

000000000000c060 <_TIFFsetByteArray>:
push   %rbp
mov    %rsp,%rbp
mov    %edx,%edx
mov    $0x1,%ecx
callq  c140 <setByteArray>
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   (%rax)

000000000000c080 <_TIFFsetString>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rdi,%r14
mov    %rsi,%r15
mov    %r15,%rdi
callq  8350 <strlen@plt>
lea    0x1(%rax),%rdx
mov    %r15,%rsi
mov    %r14,%rdi
mov    $0x1,%ecx
callq  c140 <setByteArray>
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
nopl   0x0(%rax)

000000000000c0c0 <_TIFFsetShortArray>:
push   %rbp
mov    %rsp,%rbp
mov    %edx,%edx
mov    $0x2,%ecx
callq  c140 <setByteArray>
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   (%rax)

000000000000c0e0 <_TIFFsetLongArray>:
push   %rbp
mov    %rsp,%rbp
mov    %edx,%edx
mov    $0x4,%ecx
callq  c140 <setByteArray>
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   (%rax)

000000000000c100 <_TIFFsetFloatArray>:
push   %rbp
mov    %rsp,%rbp
mov    %edx,%edx
mov    $0x4,%ecx
callq  c140 <setByteArray>
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   (%rax)

000000000000c120 <_TIFFsetDoubleArray>:
push   %rbp
mov    %rsp,%rbp
mov    %edx,%edx
mov    $0x8,%ecx
callq  c140 <setByteArray>
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   (%rax)

000000000000c140 <setByteArray>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    (%rdi),%rax
test   %rax,%rax
je     c197 <setByteArray+0x57>
mov    %r12,-0x8(%rbp)
mov    %r13,-0x10(%rbp)
mov    %r14,-0x18(%rbp)
mov    %r15,-0x20(%rbp)
mov    %rsi,%r12
mov    %rdi,%r13
mov    %rax,%rdi
mov    %rdx,%r14
mov    %rcx,%r15
callq  8bb0 <_TIFFfree@plt>
mov    %r15,%rcx
mov    %r14,%rdx
mov    %r12,%rsi
mov    %r13,%rdi
movq   $0x0,(%rdi)
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
test   %rsi,%rsi
jne    c19e <setByteArray+0x5e>
leaveq 
retq   
mov    %rcx,%r8
imul   %rdx,%r8
test   %rcx,%rcx
jne    c1b4 <setByteArray+0x74>
mov    (%rdi),%rdi
test   %rdi,%rdi
jne    c1f2 <setByteArray+0xb2>
leaveq 
retq   
mov    %rdx,%r9
xor    %edx,%edx
mov    %r8,%rax
div    %rcx
cmp    %r9,%rax
jne    c1aa <setByteArray+0x6a>
mov    %r8,%rax
mov    %r15,-0x20(%rbp)
mov    %rsi,-0x10(%rbp)
mov    %r8,-0x18(%rbp)
mov    %rdi,%r15
mov    %rax,%rdi
callq  8440 <_TIFFmalloc@plt>
mov    %rax,(%r15)
mov    %r15,%rdi
mov    -0x18(%rbp),%r8
mov    -0x10(%rbp),%rsi
mov    -0x20(%rbp),%r15
jmp    c1aa <setByteArray+0x6a>
mov    %r8,%rdx
callq  8790 <_TIFFmemcpy@plt>
leaveq 
retq   
nopl   0x0(%rax)

000000000000c200 <_TIFFsetNString>:
push   %rbp
mov    %rsp,%rbp
mov    %edx,%edx
mov    $0x1,%ecx
callq  c140 <setByteArray>
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   (%rax)

000000000000c220 <_TIFFsetLong8Array>:
push   %rbp
mov    %rsp,%rbp
mov    %edx,%edx
mov    $0x8,%ecx
callq  c140 <setByteArray>
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   (%rax)

000000000000c240 <setDoubleArrayOneValue>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
movdqu %xmm0,-0x10(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rsi,-0x18(%rbp)
mov    (%rdi),%rax
test   %rax,%rax
jne    c265 <setDoubleArrayOneValue+0x25>
mov    %rdi,%r15
mov    %rsi,%rdi
jmp    c27e <setDoubleArrayOneValue+0x3e>
mov    %r14,-0x20(%rbp)
mov    %rsi,%r14
mov    %rdi,%r15
mov    %rax,%rdi
callq  8bb0 <_TIFFfree@plt>
mov    %r14,%rdi
mov    -0x20(%rbp),%r14
shl    $0x3,%rdi
callq  8440 <_TIFFmalloc@plt>
mov    %rax,(%r15)
test   %rax,%rax
je     c29a <setDoubleArrayOneValue+0x5a>
mov    -0x18(%rbp),%rax
movdqu -0x10(%rbp),%xmm0
jmp    c2ac <setDoubleArrayOneValue+0x6c>
mov    -0x28(%rbp),%r15
leaveq 
retq   
mov    (%r15),%rcx
add    $0xffffffffffffffff,%rax
movsd  %xmm0,(%rcx,%rax,8)
test   %rax,%rax
jne    c2a0 <setDoubleArrayOneValue+0x60>
mov    -0x28(%rbp),%r15
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

000000000000c2c0 <setExtraSamples>:
push   %rbp
mov    %rsp,%rbp
movslq (%rsi),%rax
cmp    $0x2f,%eax
jle    c2dd <setExtraSamples+0x1d>
mov    0x8(%rsi),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rsi)
movslq (%rcx),%rcx
jmp    c2ea <setExtraSamples+0x2a>
mov    0x10(%rsi),%rcx
movslq (%rcx,%rax,1),%rcx
add    $0x8,%eax
mov    %eax,(%rsi)
movzwl %cx,%eax
mov    %eax,(%rdx)
xor    %eax,%eax
movzwl 0x4a(%rdi),%r8d
cmp    %cx,%r8w
jae    c2fe <setExtraSamples+0x3e>
leaveq 
retq   
movslq (%rsi),%r8
cmp    $0x2f,%r8d
jle    c318 <setExtraSamples+0x58>
mov    0x8(%rsi),%r8
lea    0x8(%r8),%rcx
mov    %rcx,0x8(%rsi)
mov    (%r8),%rsi
jmp    c329 <setExtraSamples+0x69>
mov    0x10(%rsi),%rcx
mov    (%rcx,%r8,1),%r9
lea    0x8(%r8),%ecx
mov    %ecx,(%rsi)
mov    %r9,%rsi
mov    (%rdx),%ecx
test   %ecx,%ecx
jne    c334 <setExtraSamples+0x74>
mov    %rax,%rcx
jmp    c35f <setExtraSamples+0x9f>
test   %rsi,%rsi
je     c386 <setExtraSamples+0xc6>
mov    %rax,%rcx
jmp    c35f <setExtraSamples+0x9f>
mov    %ecx,%r9d
movzwl (%rsi,%r9,2),%r8d
cmp    $0x2,%r8w
jbe    c35c <setExtraSamples+0x9c>
cmp    $0x3e7,%r8w
jne    c388 <setExtraSamples+0xc8>
movw   $0x2,(%rsi,%r9,2)
add    $0x1,%ecx
mov    (%rdx),%r8d
cmp    %r8d,%ecx
jb     c33e <setExtraSamples+0x7e>
mov    %r8w,0x9c(%rdi)
add    $0xa0,%rdi
movzwl %r8w,%edx
callq  8540 <_TIFFsetShortArray@plt>
mov    $0x1,%eax
leaveq 
retq   
leaveq 
retq   
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

000000000000c390 <checkInkNamesString>:
push   %rbp
mov    %rsp,%rbp
movzwl 0x82(%rdi),%ecx
test   %esi,%esi
jne    c3d6 <checkInkNamesString+0x46>
movzwl 0x82(%rdi),%r8d
movzwl %cx,%eax
mov    %r8,%r9
sub    %eax,%r9d
mov    0x3b8(%rdi),%r10
lea    0x45188(%rip),%rsi        # 51546 <module.10+0xb1>
lea    0x4518e(%rip),%rdx        # 51553 <module.10+0xbe>
mov    (%rdi),%rcx
mov    %r10,%rdi
xor    %eax,%eax
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
mov    %esi,%eax
lea    (%rdx,%rax,1),%rsi
mov    %rdx,%rax
jmp    c3f0 <checkInkNamesString+0x60>
cmp    %rsi,%rax
jae    c39f <checkInkNamesString+0xf>
add    $0x1,%rax
add    $0xffff,%ecx
test   %cx,%cx
jne    c407 <checkInkNamesString+0x77>
sub    %rdx,%rax
leaveq 
retq   
movsbq (%rax),%r8
test   %r8b,%r8b
je     c3e1 <checkInkNamesString+0x51>
add    $0x1,%rax
cmp    %rsi,%rax
jb     c3fa <checkInkNamesString+0x6a>
jmp    c3e1 <checkInkNamesString+0x51>
xchg   %ax,%ax

000000000000c410 <TIFFClampDoubleToFloat>:
push   %rbp
mov    %rsp,%rbp
movsd  0x4557c(%rip),%xmm1        # 51998 <module.43+0xc6>
ucomisd %xmm1,%xmm0
jbe    c42c <TIFFClampDoubleToFloat+0x1c>
movss  0x45566(%rip),%xmm0        # 51990 <module.43+0xbe>
leaveq 
retq   
movsd  0x4556c(%rip),%xmm1        # 519a0 <module.43+0xce>
ucomisd %xmm1,%xmm0
jp     c446 <TIFFClampDoubleToFloat+0x36>
jae    c446 <TIFFClampDoubleToFloat+0x36>
movss  0x45550(%rip),%xmm0        # 51994 <module.43+0xc2>
leaveq 
retq   
cvtsd2ss %xmm0,%xmm0
leaveq 
retq   
nopl   0x0(%rax)

000000000000c450 <_TIFFVSetField>:
push   %rbp
mov    %rsp,%rbp
sub    $0xb0,%rsp
mov    %rdi,-0x48(%rbp)
mov    %rdx,-0x60(%rbp)
mov    %rsi,-0x68(%rbp)
xor    %edx,%edx
mov    %rdx,-0x70(%rbp)
callq  8680 <TIFFFindField@plt>
test   %rax,%rax
jne    c47b <_TIFFVSetField+0x2b>
xor    %eax,%eax
leaveq 
retq   
movzwl 0x18(%rax),%ecx
cmp    $0x41,%cx
je     c48d <_TIFFVSetField+0x3d>
pushq  -0x68(%rbp)
popq   -0x78(%rbp)
jmp    c493 <_TIFFVSetField+0x43>
pushq  -0x70(%rbp)
popq   -0x78(%rbp)
mov    0x6da76(%rip),%r10        # 79f10 <_TIFFSwab16BitData@@Base+0x2f550>
mov    0x6dacf(%rip),%r9        # 79f70 <_TIFFSwab32BitData@@Base+0x2f510>
mov    0x6da58(%rip),%r8        # 79f00 <_TIFFSwab64BitData@@Base+0x2f450>
lea    0x450dd(%rip),%rsi        # 5158c <module.19>
mov    $0x1,%edx
mov    %rdx,-0x40(%rbp)
mov    -0x78(%rbp),%rdi
cmp    $0x128,%edi
jbe    c523 <_TIFFVSetField+0xd3>
cmp    $0x153,%edi
jbe    c58b <_TIFFVSetField+0x13b>
cmp    $0x80e2,%edi
jbe    c5eb <_TIFFVSetField+0x19b>
cmp    $0x80e4,%edi
jbe    c633 <_TIFFVSetField+0x1e3>
cmp    $0x80e5,%edi
jbe    c663 <_TIFFVSetField+0x213>
cmp    $0x80e6,%edi
jne    c692 <_TIFFVSetField+0x242>
mov    -0x60(%rbp),%rsi
movslq (%rsi),%rcx
cmp    $0x2f,%ecx
jle    c6c2 <_TIFFVSetField+0x272>
mov    0x8(%rsi),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rsi)
mov    (%rcx),%eax
jmpq   c6ce <_TIFFVSetField+0x27e>
cmp    $0x114,%edi
jbe    c6e2 <_TIFFVSetField+0x292>
xorpd  %xmm1,%xmm1
cmp    $0x11a,%edi
jbe    c736 <_TIFFVSetField+0x2e6>
cmp    $0x11d,%edi
jbe    c77e <_TIFFVSetField+0x32e>
cmp    $0x11e,%edi
jbe    c7b2 <_TIFFVSetField+0x362>
cmp    $0x11f,%edi
jne    c7e6 <_TIFFVSetField+0x396>
mov    -0x60(%rbp),%rdx
movslq 0x4(%rdx),%rax
cmp    $0xaf,%eax
jle    c816 <_TIFFVSetField+0x3c6>
mov    0x8(%rdx),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rdx)
movsd  (%rcx),%xmm0
jmpq   c825 <_TIFFVSetField+0x3d5>
cmp    $0x142,%edi
jbe    c842 <_TIFFVSetField+0x3f2>
cmp    $0x14c,%edi
jbe    c88a <_TIFFVSetField+0x43a>
cmp    $0x151,%edi
jbe    c8ba <_TIFFVSetField+0x46a>
cmp    $0x152,%edi
je     c8e6 <_TIFFVSetField+0x496>
cmp    $0x153,%edi
jne    c938 <_TIFFVSetField+0x4e8>
mov    -0x60(%rbp),%rsi
movslq (%rsi),%rcx
cmp    $0x2f,%ecx
jle    c951 <_TIFFVSetField+0x501>
mov    0x8(%rsi),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rsi)
movslq (%rcx),%rax
jmpq   c95e <_TIFFVSetField+0x50e>
cmp    $0x211,%edi
jbe    c920 <_TIFFVSetField+0x4d0>
cmp    $0x212,%edi
jbe    c979 <_TIFFVSetField+0x529>
cmp    $0x213,%edi
jne    c9a5 <_TIFFVSetField+0x555>
mov    -0x60(%rbp),%rsi
movslq (%rsi),%rcx
cmp    $0x2f,%ecx
jle    c9d1 <_TIFFVSetField+0x581>
mov    0x8(%rsi),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rsi)
movslq (%rcx),%rax
jmpq   c9de <_TIFFVSetField+0x58e>
cmp    $0x80e3,%edi
jne    c9f0 <_TIFFVSetField+0x5a0>
mov    -0x60(%rbp),%rsi
movslq (%rsi),%rcx
cmp    $0x2f,%ecx
jle    ca20 <_TIFFVSetField+0x5d0>
mov    0x8(%rsi),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rsi)
movslq (%rcx),%rax
jmpq   ca2d <_TIFFVSetField+0x5dd>
cmp    $0x80e5,%edi
jne    c938 <_TIFFVSetField+0x4e8>
mov    -0x60(%rbp),%rsi
movslq (%rsi),%rcx
cmp    $0x2f,%ecx
jle    ca3d <_TIFFVSetField+0x5ed>
mov    0x8(%rsi),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rsi)
mov    (%rcx),%eax
jmpq   ca49 <_TIFFVSetField+0x5f9>
cmp    $0x1001b,%edi
jne    c938 <_TIFFVSetField+0x4e8>
mov    -0x60(%rbp),%rsi
movslq (%rsi),%rcx
cmp    $0x2f,%ecx
jle    ca57 <_TIFFVSetField+0x607>
mov    0x8(%rsi),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rsi)
movslq (%rcx),%rax
jmpq   ca64 <_TIFFVSetField+0x614>
mov    0x10(%rsi),%rax
mov    (%rax,%rcx,1),%eax
add    $0x8,%ecx
mov    %ecx,(%rsi)
test   %eax,%eax
jne    ca8d <_TIFFVSetField+0x63d>
xor    %r8d,%r8d
mov    -0x48(%rbp),%r9
jmpq   cab6 <_TIFFVSetField+0x666>
cmp    $0x102,%edi
jbe    caef <_TIFFVSetField+0x69f>
cmp    $0x106,%edi
jbe    cb2a <_TIFFVSetField+0x6da>
cmp    $0x109,%edi
jbe    cb5a <_TIFFVSetField+0x70a>
cmp    $0x10a,%edi
jne    cb8a <_TIFFVSetField+0x73a>
mov    -0x60(%rbp),%rsi
movslq (%rsi),%rcx
cmp    $0x2f,%ecx
jle    cbba <_TIFFVSetField+0x76a>
mov    0x8(%rsi),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rsi)
movslq (%rcx),%rax
jmpq   cbc7 <_TIFFVSetField+0x777>
cmp    $0x117,%edi
jbe    cbe9 <_TIFFVSetField+0x799>
cmp    $0x118,%edi
jbe    cc19 <_TIFFVSetField+0x7c9>
cmp    $0x119,%edi
jne    cc49 <_TIFFVSetField+0x7f9>
mov    -0x60(%rbp),%rsi
movslq (%rsi),%rcx
cmp    $0x2f,%ecx
jle    cc7d <_TIFFVSetField+0x82d>
mov    0x8(%rsi),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rsi)
movslq (%rcx),%rax
jmpq   cc8a <_TIFFVSetField+0x83a>
cmp    $0x11b,%edi
jne    cc9c <_TIFFVSetField+0x84c>
mov    -0x60(%rbp),%rdx
movslq 0x4(%rdx),%rax
cmp    $0xaf,%eax
jle    cccc <_TIFFVSetField+0x87c>
mov    0x8(%rdx),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rdx)
movsd  (%rcx),%xmm0
jmpq   ccdb <_TIFFVSetField+0x88b>
cmp    $0x11e,%edi
jne    c938 <_TIFFVSetField+0x4e8>
mov    -0x60(%rbp),%rdx
movslq 0x4(%rdx),%rax
cmp    $0xaf,%eax
jle    cd26 <_TIFFVSetField+0x8d6>
mov    0x8(%rdx),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rdx)
movsd  (%rcx),%xmm0
jmpq   cd35 <_TIFFVSetField+0x8e5>
cmp    $0x128,%edi
jne    c938 <_TIFFVSetField+0x4e8>
mov    -0x60(%rbp),%rsi
movslq (%rsi),%rcx
cmp    $0x2f,%ecx
jle    cd4f <_TIFFVSetField+0x8ff>
mov    0x8(%rsi),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rsi)
movslq (%rcx),%rax
jmpq   cd5c <_TIFFVSetField+0x90c>
mov    0x10(%rdx),%rcx
movsd  (%rcx,%rax,1),%xmm0
add    $0x10,%eax
mov    %eax,0x4(%rdx)
callq  c410 <TIFFClampDoubleToFloat>
mov    -0x48(%rbp),%rdi
movss  %xmm0,0xb0(%rdi)
mov    $0x1,%edx
xor    %eax,%eax
jmpq   cd9d <_TIFFVSetField+0x94d>
cmp    $0x13f,%edi
jbe    cda7 <_TIFFVSetField+0x957>
cmp    $0x140,%edi
jbe    cdd7 <_TIFFVSetField+0x987>
cmp    $0x141,%edi
jne    ce10 <_TIFFVSetField+0x9c0>
mov    -0x60(%rbp),%rsi
movslq (%rsi),%rcx
cmp    $0x2f,%ecx
jle    ce40 <_TIFFVSetField+0x9f0>
mov    0x8(%rsi),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rsi)
movslq (%rcx),%rax
jmpq   ce4d <_TIFFVSetField+0x9fd>
cmp    $0x143,%edi
jne    ce78 <_TIFFVSetField+0xa28>
mov    -0x60(%rbp),%rsi
movslq (%rsi),%rax
cmp    $0x2f,%eax
jle    cebd <_TIFFVSetField+0xa6d>
mov    0x8(%rsi),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rsi)
mov    (%rcx),%r8d
jmpq   ceca <_TIFFVSetField+0xa7a>
cmp    $0x14d,%edi
jne    c938 <_TIFFVSetField+0x4e8>
mov    -0x60(%rbp),%rdx
movslq (%rdx),%rcx
cmp    $0x2f,%ecx
jle    cef2 <_TIFFVSetField+0xaa2>
mov    0x8(%rdx),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rdx)
movslq (%rcx),%rax
jmpq   ceff <_TIFFVSetField+0xaaf>
mov    -0x48(%rbp),%rax
lea    0x38(%rax),%rdi
lea    -0xb0(%rbp),%rdx
mov    %r15,-0x78(%rbp)
mov    %rax,%r15
mov    -0x60(%rbp),%rsi
callq  c2c0 <setExtraSamples>
test   %eax,%eax
je     cf28 <_TIFFVSetField+0xad8>
mov    %r15,%rdi
mov    -0x78(%rbp),%r15
mov    $0x1,%edx
xor    %eax,%eax
jmpq   cd9d <_TIFFVSetField+0x94d>
cmp    $0x154,%edi
je     cf34 <_TIFFVSetField+0xae4>
cmp    $0x155,%edi
je     cf6d <_TIFFVSetField+0xb1d>
cmp    $0x41,%cx
jne    cfa6 <_TIFFVSetField+0xb56>
xor    %edx,%edx
mov    -0x48(%rbp),%rdi
mov    -0x68(%rbp),%r8
jmpq   cff1 <_TIFFVSetField+0xba1>
mov    0x10(%rsi),%rax
movslq (%rax,%rcx,1),%rax
add    $0x8,%ecx
mov    %ecx,(%rsi)
movzwl %ax,%ecx
mov    %ecx,-0xb0(%rbp)
test   %ax,%ax
jne    d070 <_TIFFVSetField+0xc20>
mov    -0x48(%rbp),%rax
jmpq   d0a3 <_TIFFVSetField+0xc53>
cmp    $0x212,%edi
jne    c938 <_TIFFVSetField+0x4e8>
mov    -0x60(%rbp),%rsi
movslq (%rsi),%rcx
cmp    $0x2f,%ecx
jle    d0dc <_TIFFVSetField+0xc8c>
mov    0x8(%rsi),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rsi)
movslq (%rcx),%rax
jmpq   d0e9 <_TIFFVSetField+0xc99>
cmp    $0x214,%edi
jne    c938 <_TIFFVSetField+0x4e8>
mov    -0x60(%rbp),%rdx
movslq (%rdx),%rcx
cmp    $0x2f,%ecx
jle    d114 <_TIFFVSetField+0xcc4>
mov    0x8(%rdx),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rdx)
mov    (%rcx),%rsi
jmpq   d121 <_TIFFVSetField+0xcd1>
mov    0x10(%rsi),%rax
movslq (%rax,%rcx,1),%rax
add    $0x8,%ecx
mov    %ecx,(%rsi)
mov    -0x48(%rbp),%rdi
mov    %ax,0x10c(%rdi)
xor    %eax,%eax
jmpq   cd9d <_TIFFVSetField+0x94d>
cmp    $0x80e4,%edi
jne    c938 <_TIFFVSetField+0x4e8>
mov    -0x60(%rbp),%rcx
movslq (%rcx),%rsi
cmp    $0x2f,%esi
jle    d146 <_TIFFVSetField+0xcf6>
mov    0x8(%rcx),%rsi
lea    0x8(%rsi),%rax
mov    %rax,0x8(%rcx)
movslq (%rsi),%rax
jmpq   d153 <_TIFFVSetField+0xd03>
mov    0x10(%rsi),%rax
movslq (%rax,%rcx,1),%rax
add    $0x8,%ecx
mov    %ecx,(%rsi)
test   %ax,%ax
jne    d183 <_TIFFVSetField+0xd33>
xor    %eax,%eax
jmpq   d186 <_TIFFVSetField+0xd36>
mov    0x10(%rsi),%rax
mov    (%rax,%rcx,1),%eax
add    $0x8,%ecx
mov    %ecx,(%rsi)
mov    -0x48(%rbp),%rdi
mov    %eax,0x60(%rdi)
xor    %eax,%eax
jmpq   cd9d <_TIFFVSetField+0x94d>
mov    0x10(%rsi),%rax
movslq (%rax,%rcx,1),%rax
add    $0x8,%ecx
mov    %ecx,(%rsi)
movzwl %ax,%ecx
mov    %ecx,-0xb0(%rbp)
cmp    $0x1,%ax
je     d1a1 <_TIFFVSetField+0xd51>
mov    -0x48(%rbp),%rdi
mov    0x10(%rdi),%eax
and    $0xffbfffff,%eax
mov    %eax,0x10(%rdi)
xor    %eax,%eax
jmpq   cd9d <_TIFFVSetField+0x94d>
mov    -0x48(%rbp),%rdi
mov    %eax,0x6c(%rdi)
xor    %eax,%eax
jmpq   cd9d <_TIFFVSetField+0x94d>
mov    0x10(%rsi),%rax
mov    (%rax,%rcx,1),%eax
add    $0x8,%ecx
mov    %ecx,(%rsi)
test   %eax,%eax
jne    d1b7 <_TIFFVSetField+0xd67>
xor    %r8d,%r8d
mov    -0x48(%rbp),%r9
mov    %r9,%rdi
mov    %r15,-0x78(%rbp)
mov    %r14,-0x48(%rbp)
mov    %r9,%r14
mov    %r8,%r15
mov    -0x68(%rbp),%rsi
callq  8ae0 <TIFFFieldWithTag@plt>
mov    0x3b8(%r14),%rdi
mov    (%r14),%rcx
test   %rax,%rax
jne    d1d9 <_TIFFVSetField+0xd89>
lea    0x44d4f(%rip),%r9        # 51839 <module.19+0x2ad>
jmpq   d1dd <_TIFFVSetField+0xd8d>
cmp    $0x100,%edi
jbe    d201 <_TIFFVSetField+0xdb1>
cmp    $0x101,%edi
jne    d230 <_TIFFVSetField+0xde0>
mov    -0x60(%rbp),%rsi
movslq (%rsi),%rcx
cmp    $0x2f,%ecx
jle    d260 <_TIFFVSetField+0xe10>
mov    0x8(%rsi),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rsi)
mov    (%rcx),%eax
jmpq   d26c <_TIFFVSetField+0xe1c>
cmp    $0x103,%edi
jne    d27a <_TIFFVSetField+0xe2a>
mov    -0x60(%rbp),%rsi
movslq (%rsi),%rcx
cmp    $0x2f,%ecx
jle    d2aa <_TIFFVSetField+0xe5a>
mov    0x8(%rsi),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rsi)
movslq (%rcx),%rax
jmpq   d2b7 <_TIFFVSetField+0xe67>
cmp    $0x107,%edi
jne    c938 <_TIFFVSetField+0x4e8>
mov    -0x60(%rbp),%rsi
movslq (%rsi),%rcx
cmp    $0x2f,%ecx
jle    d309 <_TIFFVSetField+0xeb9>
mov    0x8(%rsi),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rsi)
movslq (%rcx),%rax
jmpq   d316 <_TIFFVSetField+0xec6>
cmp    $0x112,%edi
jne    c938 <_TIFFVSetField+0x4e8>
mov    -0x60(%rbp),%rsi
movslq (%rsi),%rcx
cmp    $0x2f,%ecx
jle    d325 <_TIFFVSetField+0xed5>
mov    0x8(%rsi),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rsi)
movslq (%rcx),%rax
jmpq   d332 <_TIFFVSetField+0xee2>
mov    0x10(%rsi),%rax
movslq (%rax,%rcx,1),%rax
add    $0x8,%ecx
mov    %ecx,(%rsi)
movzwl %ax,%ecx
mov    %ecx,-0xb0(%rbp)
cmp    $0x2,%ax
jne    d34d <_TIFFVSetField+0xefd>
mov    -0x48(%rbp),%rdi
mov    %ax,0x7e(%rdi)
xor    %eax,%eax
jmpq   cd9d <_TIFFVSetField+0x94d>
cmp    $0x115,%edi
jne    d360 <_TIFFVSetField+0xf10>
mov    -0x60(%rbp),%rdi
movslq (%rdi),%rcx
cmp    $0x2f,%ecx
jle    d080 <_TIFFVSetField+0xc30>
mov    0x8(%rdi),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rdi)
movslq (%rcx),%rax
jmpq   d08d <_TIFFVSetField+0xc3d>
cmp    $0x118,%edi
jne    c938 <_TIFFVSetField+0x4e8>
mov    -0x60(%rbp),%rsi
movslq (%rsi),%rcx
cmp    $0x2f,%ecx
jle    d38f <_TIFFVSetField+0xf3f>
mov    0x8(%rsi),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rsi)
movslq (%rcx),%rax
jmpq   d39c <_TIFFVSetField+0xf4c>
cmp    $0x11a,%edi
jne    c938 <_TIFFVSetField+0x4e8>
mov    -0x60(%rbp),%rdx
movslq 0x4(%rdx),%rax
cmp    $0xaf,%eax
jle    d3ae <_TIFFVSetField+0xf5e>
mov    0x8(%rdx),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rdx)
movsd  (%rcx),%xmm0
jmpq   d3bd <_TIFFVSetField+0xf6d>
mov    0x10(%rsi),%rax
movslq (%rax,%rcx,1),%rax
add    $0x8,%ecx
mov    %ecx,(%rsi)
mov    -0x48(%rbp),%rdi
mov    %ax,0x8a(%rdi)
xor    %eax,%eax
jmpq   cd9d <_TIFFVSetField+0x94d>
cmp    $0x11c,%edi
jne    c938 <_TIFFVSetField+0x4e8>
mov    -0x60(%rbp),%rsi
movslq (%rsi),%rcx
cmp    $0x2f,%ecx
jle    d3e6 <_TIFFVSetField+0xf96>
mov    0x8(%rsi),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rsi)
movslq (%rcx),%rax
jmpq   d3f3 <_TIFFVSetField+0xfa3>
mov    0x10(%rdx),%rcx
movsd  (%rcx,%rax,1),%xmm0
add    $0x10,%eax
mov    %eax,0x4(%rdx)
ucomisd %xmm1,%xmm0
jp     d418 <_TIFFVSetField+0xfc8>
jae    d418 <_TIFFVSetField+0xfc8>
movdqu %xmm0,-0x60(%rbp)
mov    -0x48(%rbp),%rax
mov    %rax,%rdi
mov    %r15,-0x78(%rbp)
mov    %rax,%r15
mov    -0x68(%rbp),%rsi
callq  8ae0 <TIFFFieldWithTag@plt>
mov    0x3b8(%r15),%rdi
mov    (%r15),%rcx
test   %rax,%rax
jne    d435 <_TIFFVSetField+0xfe5>
lea    0x44b18(%rip),%r8        # 51839 <module.19+0x2ad>
jmpq   d439 <_TIFFVSetField+0xfe9>
mov    0x10(%rdx),%rcx
movsd  (%rcx,%rax,1),%xmm0
add    $0x10,%eax
mov    %eax,0x4(%rdx)
callq  c410 <TIFFClampDoubleToFloat>
mov    -0x48(%rbp),%rdi
movss  %xmm0,0xac(%rdi)
mov    $0x1,%edx
xor    %eax,%eax
jmp    cd9d <_TIFFVSetField+0x94d>
mov    0x10(%rsi),%rax
movslq (%rax,%rcx,1),%rax
add    $0x8,%ecx
mov    %ecx,(%rsi)
movzwl %ax,%ecx
mov    %ecx,-0xb0(%rbp)
test   %ax,%ax
jne    d45e <_TIFFVSetField+0x100e>
mov    -0x48(%rbp),%rax
jmpq   d0a3 <_TIFFVSetField+0xc53>
lea    0x44999(%rip),%r8        # 51717 <module.19+0x18b>
xor    %r10d,%r10d
lea    0x4495f(%rip),%rdx        # 516e7 <module.19+0x15b>
mov    0x20(%rax),%r9
mov    %r10,%rax
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x48(%rbp),%rdi
mov    %rax,%rdx
test   %edx,%edx
jne    d471 <_TIFFVSetField+0x1021>
leaveq 
retq   
cmp    $0x129,%edi
jne    d4c8 <_TIFFVSetField+0x1078>
mov    -0x60(%rbp),%rsi
movslq (%rsi),%rcx
cmp    $0x2f,%ecx
jle    d4f9 <_TIFFVSetField+0x10a9>
mov    0x8(%rsi),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rsi)
movslq (%rcx),%rax
jmpq   d506 <_TIFFVSetField+0x10b6>
cmp    $0x140,%edi
jne    c938 <_TIFFVSetField+0x4e8>
mov    -0x48(%rbp),%r8
movzwl 0x74(%r8),%ecx
mov    -0x60(%rbp),%rax
movslq (%rax),%rdi
cmp    $0x2f,%edi
jle    d531 <_TIFFVSetField+0x10e1>
mov    0x8(%rax),%rdi
lea    0x8(%rdi),%rsi
mov    %rsi,0x8(%rax)
mov    (%rdi),%rsi
jmpq   d53e <_TIFFVSetField+0x10ee>
cmp    $0x142,%edi
jne    c938 <_TIFFVSetField+0x4e8>
mov    -0x60(%rbp),%rsi
movslq (%rsi),%rax
cmp    $0x2f,%eax
jle    d589 <_TIFFVSetField+0x1139>
mov    0x8(%rsi),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rsi)
mov    (%rcx),%r8d
jmpq   d596 <_TIFFVSetField+0x1146>
mov    0x10(%rsi),%rax
movslq (%rax,%rcx,1),%rax
add    $0x8,%ecx
mov    %ecx,(%rsi)
mov    -0x48(%rbp),%rdi
mov    %ax,0xd0(%rdi)
movslq (%rsi),%rcx
cmp    $0x2f,%ecx
jle    d5be <_TIFFVSetField+0x116e>
mov    0x8(%rsi),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rsi)
movslq (%rcx),%rax
jmpq   d5cb <_TIFFVSetField+0x117b>
cmp    $0x14a,%edi
jne    c938 <_TIFFVSetField+0x4e8>
mov    -0x48(%rbp),%r8
mov    0x10(%r8),%eax
and    $0x2000,%eax
test   %eax,%eax
jne    d5d9 <_TIFFVSetField+0x1189>
mov    -0x60(%rbp),%rdx
movslq (%rdx),%rcx
cmp    $0x2f,%ecx
jle    d5ff <_TIFFVSetField+0x11af>
mov    0x8(%rdx),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rdx)
movslq (%rcx),%rax
jmpq   d60c <_TIFFVSetField+0x11bc>
mov    0x10(%rsi),%rcx
mov    (%rcx,%rax,1),%r8d
add    $0x8,%eax
mov    %eax,(%rsi)
mov    %r8,%rax
and    $0xf,%eax
test   %eax,%eax
jne    d634 <_TIFFVSetField+0x11e4>
mov    -0x48(%rbp),%rdi
mov    %r8d,0x68(%rdi)
mov    0x10(%rdi),%eax
or     $0x400,%eax
mov    %eax,0x10(%rdi)
xor    %eax,%eax
jmpq   cd9d <_TIFFVSetField+0x94d>
mov    0x10(%rdx),%rax
movslq (%rax,%rcx,1),%rax
add    $0x8,%ecx
mov    %ecx,(%rdx)
movzwl %ax,%eax
mov    %eax,-0xb0(%rbp)
movslq (%rdx),%rcx
cmp    $0x2f,%ecx
jle    d685 <_TIFFVSetField+0x1235>
mov    0x8(%rdx),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rdx)
mov    (%rcx),%rsi
jmpq   d692 <_TIFFVSetField+0x1242>
mov    %r15,%rax
mov    -0x78(%rbp),%r15
jmpq   d0a3 <_TIFFVSetField+0xc53>
mov    -0x48(%rbp),%r8
mov    0x10(%r8),%eax
and    $0x400000,%eax
test   %eax,%eax
je     d6e7 <_TIFFVSetField+0x1297>
mov    -0x60(%rbp),%rdx
movslq (%rdx),%rcx
cmp    $0x2f,%ecx
jle    d710 <_TIFFVSetField+0x12c0>
mov    0x8(%rdx),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rdx)
mov    (%rcx),%rsi
jmpq   d71d <_TIFFVSetField+0x12cd>
mov    -0x48(%rbp),%r8
mov    0x10(%r8),%eax
and    $0x400000,%eax
test   %eax,%eax
je     d741 <_TIFFVSetField+0x12f1>
mov    -0x60(%rbp),%rdx
movslq (%rdx),%rcx
cmp    $0x2f,%ecx
jle    d76a <_TIFFVSetField+0x131a>
mov    0x8(%rdx),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rdx)
mov    (%rcx),%rsi
jmpq   d777 <_TIFFVSetField+0x1327>
mov    -0x48(%rbp),%rcx
mov    0x3b8(%rcx),%rdi
mov    (%rcx),%rcx
mov    -0x68(%rbp),%rdx
cmp    $0xffff,%edx
ja     cd77 <_TIFFVSetField+0x927>
lea    0x44754(%rip),%r8        # 5171f <module.19+0x193>
jmpq   cd7e <_TIFFVSetField+0x92e>
movslq %edx,%rcx
lea    (%rcx,%rcx,2),%rcx
shl    $0x3,%rcx
add    0x148(%rdi),%rcx
mov    (%rcx),%rsi
cmp    (%rsi),%r8d
je     d79b <_TIFFVSetField+0x134b>
add    $0x1,%edx
cmp    0x140(%rdi),%edx
jl     cfd0 <_TIFFVSetField+0xb80>
xor    %ecx,%ecx
test   %rcx,%rcx
jne    d823 <_TIFFVSetField+0x13d3>
movslq 0x140(%rdi),%rcx
add    $0x1,%ecx
mov    %ecx,0x140(%rdi)
mov    0x148(%rdi),%rdx
movslq %ecx,%rcx
lea    (%rcx,%rcx,2),%rsi
shl    $0x3,%rsi
mov    %r15,-0x78(%rbp)
mov    %r14,-0x38(%rbp)
mov    %rax,%r14
mov    %rdi,%r15
mov    %rdx,%rdi
callq  8100 <_TIFFrealloc@plt>
test   %rax,%rax
jne    d7e7 <_TIFFVSetField+0x1397>
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
lea    0x446cb(%rip),%rdx        # 51720 <module.19+0x194>
mov    (%r15),%rcx
lea    0x4452d(%rip),%rsi        # 5158c <module.19>
callq  8a00 <TIFFErrorExt@plt>
mov    -0x38(%rbp),%r14
mov    -0x78(%rbp),%r15
xor    %eax,%eax
leaveq 
retq   
cmp    $0x6,%ax
jbe    d889 <_TIFFVSetField+0x1439>
mov    -0x48(%rbp),%rax
jmp    d0a3 <_TIFFVSetField+0xc53>
mov    0x10(%rdi),%rax
movslq (%rax,%rcx,1),%rax
add    $0x8,%ecx
mov    %ecx,(%rdi)
movzwl %ax,%ecx
mov    %ecx,-0xb0(%rbp)
test   %ax,%ax
jne    d8ba <_TIFFVSetField+0x146a>
mov    -0x48(%rbp),%rax
mov    %rax,%rdi
mov    %r15,-0x78(%rbp)
mov    %rax,%r15
mov    -0x68(%rbp),%rsi
callq  8ae0 <TIFFFieldWithTag@plt>
mov    0x3b8(%r15),%rdi
mov    (%r15),%rcx
mov    -0xb0(%rbp),%r8d
test   %rax,%rax
jne    d8e3 <_TIFFVSetField+0x1493>
lea    0x44762(%rip),%r9        # 51839 <module.19+0x2ad>
jmpq   d8e7 <_TIFFVSetField+0x1497>
mov    0x10(%rsi),%rax
movslq (%rax,%rcx,1),%rax
add    $0x8,%ecx
mov    %ecx,(%rsi)
mov    -0x48(%rbp),%rdi
mov    %ax,0x108(%rdi)
movslq (%rsi),%rcx
cmp    $0x2f,%ecx
jle    d904 <_TIFFVSetField+0x14b4>
mov    0x8(%rsi),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rsi)
movslq (%rcx),%rax
jmpq   d911 <_TIFFVSetField+0x14c1>
mov    0x10(%rdx),%rax
mov    (%rax,%rcx,1),%rsi
lea    0x8(%rcx),%eax
mov    %eax,(%rdx)
mov    -0x48(%rbp),%rax
lea    0x128(%rax),%rdi
mov    $0x6,%edx
callq  87f0 <_TIFFsetFloatArray@plt>
mov    $0x1,%edx
xor    %eax,%eax
mov    -0x48(%rbp),%rdi
jmpq   cd9d <_TIFFVSetField+0x94d>
mov    0x10(%rcx),%rax
movslq (%rax,%rsi,1),%rax
add    $0x8,%esi
mov    %esi,(%rcx)
movzwl %ax,%ecx
mov    %ecx,-0xb0(%rbp)
cmp    $0x1,%ax
jbe    d91f <_TIFFVSetField+0x14cf>
cmp    $0x2,%ax
je     d93b <_TIFFVSetField+0x14eb>
cmp    $0x3,%ax
je     d94a <_TIFFVSetField+0x14fa>
mov    -0x48(%rbp),%rax
jmpq   d0a3 <_TIFFVSetField+0xc53>
mov    %rdx,%rax
mov    -0x48(%rbp),%rdi
mov    %ax,0xd4(%rdi)
test   %ax,%ax
jne    d959 <_TIFFVSetField+0x1509>
xor    %eax,%eax
jmpq   cd9d <_TIFFVSetField+0x94d>
mov    -0x48(%rbp),%rdi
mov    0x10(%rdi),%eax
or     $0x400000,%eax
mov    %eax,0x10(%rdi)
xor    %eax,%eax
jmpq   cd9d <_TIFFVSetField+0x94d>
mov    -0x48(%rbp),%rdi
mov    %eax,0x84(%rdi)
mov    0x38(%rdi),%rcx
and    $0x4,%rcx
test   %rcx,%rcx
je     d985 <_TIFFVSetField+0x1535>
xor    %eax,%eax
jmpq   cd9d <_TIFFVSetField+0x94d>
mov    0x20(%rax),%r9
mov    %r15,%r8
xor    %eax,%eax
lea    0x443a3(%rip),%rsi        # 5158c <module.19>
lea    0x4462b(%rip),%rdx        # 5181b <module.19+0x28f>
callq  8a00 <TIFFErrorExt@plt>
mov    -0x48(%rbp),%r14
mov    -0x78(%rbp),%r15
xor    %eax,%eax
leaveq 
retq   
cmp    $0xfe,%edi
jne    d995 <_TIFFVSetField+0x1545>
mov    -0x60(%rbp),%rsi
movslq (%rsi),%rcx
cmp    $0x2f,%ecx
jle    d9c4 <_TIFFVSetField+0x1574>
mov    0x8(%rsi),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rsi)
mov    (%rcx),%eax
jmpq   d9d0 <_TIFFVSetField+0x1580>
cmp    $0x102,%edi
jne    c938 <_TIFFVSetField+0x4e8>
mov    -0x60(%rbp),%rcx
movslq (%rcx),%rsi
cmp    $0x2f,%esi
jle    d9de <_TIFFVSetField+0x158e>
mov    0x8(%rcx),%rsi
lea    0x8(%rsi),%rax
mov    %rax,0x8(%rcx)
movslq (%rsi),%rax
jmpq   d9eb <_TIFFVSetField+0x159b>
mov    0x10(%rsi),%rax
mov    (%rax,%rcx,1),%eax
add    $0x8,%ecx
mov    %ecx,(%rsi)
mov    -0x48(%rbp),%rdi
mov    %eax,0x5c(%rdi)
xor    %eax,%eax
jmpq   cd9d <_TIFFVSetField+0x94d>
cmp    $0x106,%edi
jne    c938 <_TIFFVSetField+0x4e8>
mov    -0x60(%rbp),%rsi
movslq (%rsi),%rcx
cmp    $0x2f,%ecx
jle    da0b <_TIFFVSetField+0x15bb>
mov    0x8(%rsi),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rsi)
movslq (%rcx),%rax
jmpq   da18 <_TIFFVSetField+0x15c8>
mov    0x10(%rsi),%rax
movslq (%rax,%rcx,1),%rax
add    $0x8,%ecx
mov    %ecx,(%rsi)
movzwl %ax,%eax
mov    %eax,-0xb0(%rbp)
mov    -0x48(%rbp),%rdi
mov    0x38(%rdi),%rax
and    $0x80,%rax
test   %rax,%rax
jne    da27 <_TIFFVSetField+0x15d7>
movslq -0xb0(%rbp),%rsi
mov    %rdi,%rax
mov    %r15,-0x78(%rbp)
mov    %rdi,%r15
mov    %rax,%rdi
callq  8860 <TIFFSetCompressionScheme@plt>
test   %eax,%eax
jne    da40 <_TIFFVSetField+0x15f0>
mov    %r15,%rdi
mov    -0x78(%rbp),%r15
xor    %eax,%eax
mov    %rax,%rdx
jmpq   cd9d <_TIFFVSetField+0x94d>
mov    0x10(%rsi),%rax
movslq (%rax,%rcx,1),%rax
add    $0x8,%ecx
mov    %ecx,(%rsi)
mov    -0x48(%rbp),%rdi
mov    %ax,0x7c(%rdi)
xor    %eax,%eax
jmpq   cd9d <_TIFFVSetField+0x94d>
mov    0x10(%rsi),%rax
movslq (%rax,%rcx,1),%rax
add    $0x8,%ecx
mov    %ecx,(%rsi)
movzwl %ax,%ecx
mov    %ecx,-0xb0(%rbp)
test   %ax,%ax
jne    da5d <_TIFFVSetField+0x160d>
mov    -0x48(%rbp),%rax
jmpq   d0a3 <_TIFFVSetField+0xc53>
cmp    $0x1,%ax
je     cbda <_TIFFVSetField+0x78a>
mov    -0x48(%rbp),%rax
jmpq   d0a3 <_TIFFVSetField+0xc53>
cmp    $0x116,%edi
jne    c938 <_TIFFVSetField+0x4e8>
mov    -0x60(%rbp),%rsi
movslq (%rsi),%rcx
cmp    $0x2f,%ecx
jle    ca9b <_TIFFVSetField+0x64b>
mov    0x8(%rsi),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rsi)
mov    (%rcx),%eax
jmpq   caa7 <_TIFFVSetField+0x657>
mov    0x10(%rsi),%rax
movslq (%rax,%rcx,1),%rax
add    $0x8,%ecx
mov    %ecx,(%rsi)
mov    -0x48(%rbp),%rdi
mov    %ax,0x88(%rdi)
xor    %eax,%eax
jmpq   cd9d <_TIFFVSetField+0x94d>
mov    0x10(%rdx),%rcx
movsd  (%rcx,%rax,1),%xmm0
add    $0x10,%eax
mov    %eax,0x4(%rdx)
ucomisd %xmm1,%xmm0
jp     d3c9 <_TIFFVSetField+0xf79>
jb     cceb <_TIFFVSetField+0x89b>
callq  c410 <TIFFClampDoubleToFloat>
mov    -0x48(%rbp),%rdi
movss  %xmm0,0xa0(%rdi)
mov    $0x1,%edx
xor    %eax,%eax
jmpq   cd9d <_TIFFVSetField+0x94d>
mov    0x10(%rsi),%rax
movslq (%rax,%rcx,1),%rax
add    $0x8,%ecx
mov    %ecx,(%rsi)
movzwl %ax,%ecx
mov    %ecx,-0xb0(%rbp)
cmp    $0x1,%ax
jne    da70 <_TIFFVSetField+0x1620>
mov    -0x48(%rbp),%rdi
mov    %ax,0xaa(%rdi)
xor    %eax,%eax
jmpq   cd9d <_TIFFVSetField+0x94d>
callq  c410 <TIFFClampDoubleToFloat>
mov    -0x48(%rbp),%rdi
movss  %xmm0,0xa4(%rdi)
mov    $0x1,%edx
xor    %eax,%eax
jmpq   cd9d <_TIFFVSetField+0x94d>
mov    0x20(%rax),%r8
mov    $0x1,%eax
lea    0x443fc(%rip),%rdx        # 51841 <module.19+0x2b5>
lea    0x44140(%rip),%rsi        # 5158c <module.19>
movdqu -0x60(%rbp),%xmm0
callq  8a00 <TIFFErrorExt@plt>
mov    -0x78(%rbp),%r15
xor    %eax,%eax
leaveq 
retq   
cmp    $0x3,%ax
jbe    da83 <_TIFFVSetField+0x1633>
mov    -0x48(%rbp),%rax
jmpq   d0a3 <_TIFFVSetField+0xc53>
mov    %rdi,%rax
mov    %r15,-0x78(%rbp)
mov    %rdx,-0x8(%rbp)
mov    %rdi,%r15
mov    %rax,%rdi
mov    -0x68(%rbp),%rsi
callq  8ae0 <TIFFFieldWithTag@plt>
test   %rax,%rax
je     d4b3 <_TIFFVSetField+0x1063>
movzwl 0x18(%rax),%edx
mov    %rdx,%rcx
and    $0x1f,%ecx
mov    $0x1,%eax
shl    %cl,%rax
shr    $0x5,%edx
movslq %edx,%rcx
lea    0x38(%r15,%rcx,8),%rcx
or     (%rcx),%rax
mov    %rax,(%rcx)
mov    0x10(%r15),%eax
or     $0x8,%eax
mov    %eax,0x10(%r15)
mov    -0x8(%rbp),%rax
mov    -0x78(%rbp),%r15
leaveq 
retq   
cmp    $0x12d,%edi
jne    c938 <_TIFFVSetField+0x4e8>
mov    -0x48(%rbp),%rdi
movzwl 0x82(%rdi),%eax
movzwl 0xd4(%rdi),%ecx
sub    %ecx,%eax
cmp    $0x1,%eax
jg     da95 <_TIFFVSetField+0x1645>
mov    %rdx,%rax
jmpq   da9a <_TIFFVSetField+0x164a>
mov    0x10(%rsi),%rax
movslq (%rax,%rcx,1),%rax
add    $0x8,%ecx
mov    %ecx,(%rsi)
mov    -0x48(%rbp),%rdi
mov    %ax,0xb4(%rdi)
movslq (%rsi),%rcx
cmp    $0x2f,%ecx
jle    dabc <_TIFFVSetField+0x166c>
mov    0x8(%rsi),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rsi)
movslq (%rcx),%rax
jmpq   dac9 <_TIFFVSetField+0x1679>
mov    0x10(%rax),%rsi
mov    (%rsi,%rdi,1),%rsi
add    $0x8,%edi
mov    %edi,(%rax)
shl    %cl,%rdx
lea    0xb8(%r8),%rdi
mov    %rdx,%rcx
mov    %r15,-0x78(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r13,-0x18(%rbp)
mov    %rax,%r13
mov    %rdx,%r14
mov    %rcx,%rdx
mov    %r8,%r15
callq  8540 <_TIFFsetShortArray@plt>
movslq 0x0(%r13),%rcx
cmp    $0x2f,%ecx
jle    dad7 <_TIFFVSetField+0x1687>
mov    0x8(%r13),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%r13)
mov    (%rcx),%rsi
jmpq   dae6 <_TIFFVSetField+0x1696>
mov    0x10(%rsi),%rcx
mov    (%rcx,%rax,1),%r8d
add    $0x8,%eax
mov    %eax,(%rsi)
mov    %r8,%rax
and    $0xf,%eax
test   %eax,%eax
jne    db16 <_TIFFVSetField+0x16c6>
mov    -0x48(%rbp),%rdi
mov    %r8d,0x64(%rdi)
mov    0x10(%rdi),%eax
or     $0x400,%eax
mov    %eax,0x10(%rdi)
xor    %eax,%eax
jmpq   cd9d <_TIFFVSetField+0x94d>
mov    0x10(%rsi),%rax
movslq (%rax,%rcx,1),%rax
add    $0x8,%ecx
mov    %ecx,(%rsi)
mov    %ax,0xd2(%rdi)
xor    %eax,%eax
jmpq   cd9d <_TIFFVSetField+0x94d>
xor    %eax,%eax
mov    0x3b8(%r8),%rdi
lea    0x440df(%rip),%rdx        # 516c8 <module.19+0x13c>
mov    (%r8),%rcx
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x48(%rbp),%rdi
mov    %rax,%rdx
jmpq   cd9d <_TIFFVSetField+0x94d>
mov    0x10(%rdx),%rax
movslq (%rax,%rcx,1),%rax
add    $0x8,%ecx
mov    %ecx,(%rdx)
mov    %ax,0xfc(%r8)
movslq (%rdx),%rcx
cmp    $0x2f,%ecx
jle    db67 <_TIFFVSetField+0x1717>
mov    0x8(%rdx),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rdx)
mov    (%rcx),%rsi
jmpq   db74 <_TIFFVSetField+0x1724>
mov    -0x48(%rbp),%r9
movslq 0xc(%r9),%rax
test   %eax,%eax
jne    cab6 <_TIFFVSetField+0x666>
xor    %eax,%eax
mov    0x3b8(%r9),%rdi
mov    (%r9),%rsi
lea    0x44048(%rip),%rdx        # 5169f <module.19+0x113>
mov    %r8,%rcx
mov    %r15,-0x78(%rbp)
mov    %r14,-0x28(%rbp)
mov    %r8,%r14
mov    %r9,%r15
callq  85a0 <TIFFWarningExt@plt>
mov    %r15,%rdi
mov    %r14,%r8
mov    -0x28(%rbp),%r14
mov    -0x78(%rbp),%r15
mov    $0x1,%edx
jmpq   cedc <_TIFFVSetField+0xa8c>
mov    0x10(%rdx),%rax
mov    (%rax,%rcx,1),%rsi
lea    0x8(%rcx),%eax
mov    %eax,(%rdx)
mov    -0xb0(%rbp),%ecx
mov    -0x48(%rbp),%rax
mov    %rax,%rdi
mov    %rsi,%rdx
mov    %r15,-0x78(%rbp)
mov    %r14,-0x30(%rbp)
mov    %rsi,%r14
mov    %rcx,%rsi
mov    %rax,%r15
callq  c390 <checkInkNamesString>
test   %eax,%eax
je     d6c2 <_TIFFVSetField+0x1272>
pushq  -0x40(%rbp)
popq   -0x70(%rbp)
mov    %eax,-0xb0(%rbp)
mov    -0x70(%rbp),%rdx
test   %rdx,%rdx
jne    db98 <_TIFFVSetField+0x1748>
mov    %r15,%rdi
mov    -0x30(%rbp),%r14
mov    -0x78(%rbp),%r15
xor    %eax,%eax
jmpq   cd9d <_TIFFVSetField+0x94d>
mov    -0x60(%rbp),%rdx
movslq 0x4(%rdx),%rcx
cmp    $0xaf,%ecx
jle    dbd0 <_TIFFVSetField+0x1780>
mov    0x8(%rdx),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rdx)
movsd  (%rcx),%xmm0
jmpq   dbdf <_TIFFVSetField+0x178f>
mov    0x10(%rdx),%rax
mov    (%rax,%rcx,1),%rsi
lea    0x8(%rcx),%eax
mov    %eax,(%rdx)
lea    0x90(%r8),%rdi
movzwl 0x82(%r8),%edx
callq  8050 <_TIFFsetDoubleArray@plt>
mov    $0x1,%edx
xor    %eax,%eax
mov    -0x48(%rbp),%rdi
jmpq   cd9d <_TIFFVSetField+0x94d>
mov    -0x60(%rbp),%rdx
movslq 0x4(%rdx),%rcx
cmp    $0xaf,%ecx
jle    dc03 <_TIFFVSetField+0x17b3>
mov    0x8(%rdx),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rdx)
movsd  (%rcx),%xmm0
jmpq   dc12 <_TIFFVSetField+0x17c2>
mov    0x10(%rdx),%rax
mov    (%rax,%rcx,1),%rsi
lea    0x8(%rcx),%eax
mov    %eax,(%rdx)
lea    0x98(%r8),%rdi
movzwl 0x82(%r8),%edx
callq  8050 <_TIFFsetDoubleArray@plt>
mov    $0x1,%edx
xor    %eax,%eax
mov    -0x48(%rbp),%rdi
jmpq   cd9d <_TIFFVSetField+0x94d>
mov    0x10(%rcx),%rdx
test   %rdx,%rdx
je     cffb <_TIFFVSetField+0xbab>
mov    %r15,-0x78(%rbp)
mov    %r14,-0x40(%rbp)
mov    %r13,-0x20(%rbp)
mov    %rcx,%r13
mov    %rdi,%r14
mov    %rdx,%rdi
mov    %rax,%r15
callq  8bb0 <_TIFFfree@plt>
mov    %r15,%rax
mov    %r13,%rcx
mov    %r14,%rdi
movq   $0x0,0x10(%rcx)
mov    -0x20(%rbp),%r13
mov    -0x40(%rbp),%r14
mov    -0x78(%rbp),%r15
jmpq   cffb <_TIFFVSetField+0xbab>
mov    %rax,0x148(%r15)
movslq 0x140(%r15),%rcx
add    $0xffffffff,%ecx
movslq %ecx,%rcx
lea    (%rcx,%rcx,2),%rcx
lea    (%rax,%rcx,8),%rcx
mov    %r14,(%rcx)
movq   $0x0,0x10(%rcx)
movl   $0x0,0x8(%rcx)
mov    %r14,%rax
mov    %r15,%rdi
mov    -0x38(%rbp),%r14
mov    -0x78(%rbp),%r15
mov    %rcx,-0x78(%rbp)
mov    0x8(%rax),%ecx
mov    %r15,-0x70(%rbp)
mov    %r14,-0x38(%rbp)
mov    %rdi,%r14
mov    %rcx,%rdi
mov    %rax,%r15
callq  80f0 <_TIFFDataSize@plt>
test   %eax,%eax
je     dc36 <_TIFFVSetField+0x17e6>
lea    0x43cbc(%rip),%rsi        # 5150b <module.10+0x76>
lea    0x43f46(%rip),%rcx        # 5179c <module.19+0x210>
mov    0x8(%r15),%edx
cmp    $0x2,%edx
je     dc69 <_TIFFVSetField+0x1819>
movzbl 0x1b(%r15),%ecx
test   %cl,%cl
jne    dc9a <_TIFFVSetField+0x184a>
movswq 0x6(%r15),%rcx
cmp    $0xffff,%cx
jne    dcc5 <_TIFFVSetField+0x1875>
mov    $0x1,%ecx
jmpq   dce2 <_TIFFVSetField+0x1892>
mov    -0x48(%rbp),%rdi
mov    %ax,0x76(%rdi)
cmp    $0x5,%ax
je     dd2d <_TIFFVSetField+0x18dd>
movzwl 0x76(%rdi),%eax
cmp    $0x5,%ax
je     dd59 <_TIFFVSetField+0x1909>
cmp    $0x6,%ax
je     dd59 <_TIFFVSetField+0x1909>
xor    %eax,%eax
jmpq   cd9d <_TIFFVSetField+0x94d>
mov    -0x48(%rbp),%rdi
movzwl 0x82(%rdi),%ecx
cmp    %cx,%ax
jne    dd6e <_TIFFVSetField+0x191e>
movzwl -0xb0(%rbp),%eax
mov    %ax,0x82(%rdi)
xor    %eax,%eax
jmpq   cd9d <_TIFFVSetField+0x94d>
mov    0x20(%rax),%r9
xor    %eax,%eax
lea    0x43c9c(%rip),%rsi        # 5158c <module.19>
lea    0x43f24(%rip),%rdx        # 5181b <module.19+0x28f>
callq  8a00 <TIFFErrorExt@plt>
mov    -0x78(%rbp),%r15
xor    %eax,%eax
leaveq 
retq   
mov    0x10(%rsi),%rax
movslq (%rax,%rcx,1),%rax
add    $0x8,%ecx
mov    %ecx,(%rsi)
mov    %ax,0x10a(%rdi)
xor    %eax,%eax
jmpq   cd9d <_TIFFVSetField+0x94d>
test   %ax,%ax
je     de32 <_TIFFVSetField+0x19e2>
cmp    $0x1,%ax
je     de52 <_TIFFVSetField+0x1a02>
mov    -0x48(%rbp),%rax
jmpq   d0a3 <_TIFFVSetField+0xc53>
movl   $0x1,-0xb0(%rbp)
jmpq   de3c <_TIFFVSetField+0x19ec>
movl   $0x3,-0xb0(%rbp)
jmpq   de3c <_TIFFVSetField+0x19ec>
movw   $0x1,-0xac(%rbp)
add    $0xd8,%rdi
lea    -0xac(%rbp),%rsi
callq  8540 <_TIFFsetShortArray@plt>
mov    $0x1,%edx
xor    %eax,%eax
mov    -0x48(%rbp),%rdi
jmpq   cd9d <_TIFFVSetField+0x94d>
mov    %eax,0x68(%rdi)
mov    0x58(%rdi),%eax
mov    %eax,0x64(%rdi)
xor    %eax,%eax
jmpq   cd9d <_TIFFVSetField+0x94d>
cmp    $0x100,%edi
jne    c938 <_TIFFVSetField+0x4e8>
mov    -0x60(%rbp),%rsi
movslq (%rsi),%rcx
cmp    $0x2f,%ecx
jle    de5e <_TIFFVSetField+0x1a0e>
mov    0x8(%rsi),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rsi)
mov    (%rcx),%eax
jmpq   de6a <_TIFFVSetField+0x1a1a>
mov    0x10(%rsi),%rax
mov    (%rax,%rcx,1),%eax
add    $0x8,%ecx
mov    %ecx,(%rsi)
mov    -0x48(%rbp),%rdi
mov    %eax,0x70(%rdi)
xor    %eax,%eax
jmpq   cd9d <_TIFFVSetField+0x94d>
mov    0x10(%rcx),%rax
movslq (%rax,%rsi,1),%rax
add    $0x8,%esi
mov    %esi,(%rcx)
mov    -0x48(%rbp),%rdi
mov    %ax,0x74(%rdi)
mov    0x10(%rdi),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
jne    de78 <_TIFFVSetField+0x1a28>
xor    %eax,%eax
jmpq   cd9d <_TIFFVSetField+0x94d>
mov    0x10(%rsi),%rax
movslq (%rax,%rcx,1),%rax
add    $0x8,%ecx
mov    %ecx,(%rsi)
mov    -0x48(%rbp),%rdi
mov    %ax,0x7a(%rdi)
xor    %eax,%eax
jmpq   cd9d <_TIFFVSetField+0x94d>
mov    -0xb0(%rbp),%ecx
movzwl 0x78(%rdi),%eax
cmp    %eax,%ecx
jne    debb <_TIFFVSetField+0x1a6b>
xor    %eax,%eax
jmpq   cd9d <_TIFFVSetField+0x94d>
movzwl -0xb0(%rbp),%ecx
mov    %cx,0x78(%r15)
mov    %rax,%rdx
mov    %r15,%rdi
mov    -0x78(%rbp),%r15
xor    %eax,%eax
jmpq   cd9d <_TIFFVSetField+0x94d>
cmp    $0x8,%ax
jbe    dee6 <_TIFFVSetField+0x1a96>
mov    -0x48(%rbp),%rax
jmpq   d0a3 <_TIFFVSetField+0xc53>
cmp    $0x2,%ax
je     d406 <_TIFFVSetField+0xfb6>
mov    -0x48(%rbp),%rax
jmpq   d0a3 <_TIFFVSetField+0xc53>
mov    -0x48(%rbp),%rdi
mov    %ax,0xa8(%rdi)
xor    %eax,%eax
jmpq   cd9d <_TIFFVSetField+0x94d>
mov    $0x3,%eax
mov    %eax,-0xb0(%rbp)
mov    %r15,-0x78(%rbp)
mov    %r14,-0x30(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r12,-0x10(%rbp)
xor    %r13d,%r13d
mov    -0x60(%rbp),%r12
jmpq   df38 <_TIFFVSetField+0x1ae8>
mov    0x10(%rsi),%rax
movslq (%rax,%rcx,1),%rax
add    $0x8,%ecx
mov    %ecx,(%rsi)
mov    %ax,0xb6(%rdi)
xor    %eax,%eax
jmpq   cd9d <_TIFFVSetField+0x94d>
mov    0x10(%r13),%rax
mov    (%rax,%rcx,1),%rsi
lea    0x8(%rcx),%eax
mov    %eax,0x0(%r13)
lea    0xc0(%r15),%rdi
mov    %r14,%rdx
callq  8540 <_TIFFsetShortArray@plt>
movslq 0x0(%r13),%rcx
cmp    $0x2f,%ecx
jle    df5e <_TIFFVSetField+0x1b0e>
mov    0x8(%r13),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%r13)
mov    (%rcx),%rsi
jmpq   df6d <_TIFFVSetField+0x1b1d>
mov    -0x48(%rbp),%r9
movslq 0xc(%r9),%rax
test   %eax,%eax
jne    cab6 <_TIFFVSetField+0x666>
xor    %eax,%eax
mov    0x3b8(%r9),%rdi
mov    (%r9),%rsi
lea    0x43b3e(%rip),%rdx        # 51677 <module.19+0xeb>
mov    %r8,%rcx
mov    %r15,-0x78(%rbp)
mov    %r14,-0x28(%rbp)
mov    %r8,%r14
mov    %r9,%r15
callq  85a0 <TIFFWarningExt@plt>
mov    %r15,%rdi
mov    %r14,%r8
mov    -0x28(%rbp),%r14
mov    -0x78(%rbp),%r15
mov    $0x1,%edx
jmpq   d5a8 <_TIFFVSetField+0x1158>
mov    0x10(%rdx),%rax
mov    (%rax,%rcx,1),%rsi
lea    0x8(%rcx),%eax
mov    %eax,(%rdx)
lea    0x100(%r8),%rdi
movzwl 0xfc(%r8),%edx
callq  c220 <_TIFFsetLong8Array>
mov    $0x1,%edx
xor    %eax,%eax
mov    -0x48(%rbp),%rdi
jmpq   cd9d <_TIFFVSetField+0x94d>
mov    %r14,%rsi
mov    %rdx,%r14
mov    %rax,%rdx
lea    0x138(%r15),%rdi
callq  c200 <_TIFFsetNString>
movslq -0xb0(%rbp),%rax
mov    %eax,0x130(%r15)
mov    %r14,%rdx
mov    %r15,%rdi
mov    -0x30(%rbp),%r14
mov    -0x78(%rbp),%r15
xor    %eax,%eax
jmpq   cd9d <_TIFFVSetField+0x94d>
mov    0x10(%rdx),%rax
movsd  (%rax,%rcx,1),%xmm0
lea    0x10(%rcx),%eax
mov    %eax,0x4(%rdx)
lea    0x90(%r8),%rdi
movzwl 0x82(%r8),%esi
callq  c240 <setDoubleArrayOneValue>
mov    $0x1,%edx
xor    %eax,%eax
mov    -0x48(%rbp),%rdi
jmpq   cd9d <_TIFFVSetField+0x94d>
mov    0x10(%rdx),%rax
movsd  (%rax,%rcx,1),%xmm0
lea    0x10(%rcx),%eax
mov    %eax,0x4(%rdx)
lea    0x98(%r8),%rdi
movzwl 0x82(%r8),%esi
callq  c240 <setDoubleArrayOneValue>
mov    $0x1,%edx
xor    %eax,%eax
mov    -0x48(%rbp),%rdi
jmpq   cd9d <_TIFFVSetField+0x94d>
xor    %eax,%eax
mov    0x3b8(%r14),%rdi
lea    0x43b11(%rip),%rdx        # 51757 <module.19+0x1cb>
mov    (%r14),%rcx
mov    0x8(%r15),%r8d
mov    0x20(%r15),%r9
lea    0x43934(%rip),%rsi        # 5158c <module.19>
callq  8a00 <TIFFErrorExt@plt>
mov    -0x38(%rbp),%r14
mov    -0x70(%rbp),%r15
xor    %eax,%eax
leaveq 
retq   
movzbl 0x1b(%r15),%eax
test   %al,%al
jne    df97 <_TIFFVSetField+0x1b47>
mov    -0x60(%rbp),%rdx
movslq (%rdx),%rcx
cmp    $0x2f,%ecx
jle    dfc9 <_TIFFVSetField+0x1b79>
mov    0x8(%rdx),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rdx)
mov    (%rcx),%r15
jmpq   dfd6 <_TIFFVSetField+0x1b86>
movswq 0x6(%r15),%rcx
cmp    $0xfffd,%cx
jne    e014 <_TIFFVSetField+0x1bc4>
mov    -0x60(%rbp),%rdx
movslq (%rdx),%rsi
cmp    $0x2f,%esi
jle    dcd6 <_TIFFVSetField+0x1886>
mov    0x8(%rdx),%rsi
lea    0x8(%rsi),%rcx
mov    %rcx,0x8(%rdx)
mov    (%rsi),%ecx
jmp    dce2 <_TIFFVSetField+0x1892>
cmp    $0xfffd,%cx
jne    e038 <_TIFFVSetField+0x1be8>
mov    $0x1,%ecx
jmp    dce2 <_TIFFVSetField+0x1892>
mov    0x10(%rdx),%rcx
mov    (%rcx,%rsi,1),%ecx
add    $0x8,%esi
mov    %esi,(%rdx)
mov    -0x78(%rbp),%rdi
mov    %ecx,0x8(%rdi)
test   %ecx,%ecx
je     e04f <_TIFFVSetField+0x1bff>
movslq %ecx,%rsi
movslq %eax,%rdx
mov    %rdx,-0x78(%rbp)
lea    0x43ae8(%rip),%rcx        # 517ea <module.19+0x25e>
mov    %rax,-0x10(%rbp)
mov    %r14,%rax
mov    %rdi,%r14
mov    %rax,%rdi
callq  8750 <_TIFFCheckMalloc@plt>
mov    %rax,0x10(%r14)
test   %rax,%rax
jne    e098 <_TIFFVSetField+0x1c48>
mov    -0x38(%rbp),%r14
mov    -0x70(%rbp),%r15
xor    %eax,%eax
leaveq 
retq   
movzwl 0x74(%rdi),%eax
cmp    $0x20,%ax
jne    d89b <_TIFFVSetField+0x144b>
mov    0x3e8(%rdi),%rax
cmp    %r9,%rax
jne    d89b <_TIFFVSetField+0x144b>
mov    %r10,0x3e8(%rdi)
xor    %eax,%eax
jmpq   cd9d <_TIFFVSetField+0x94d>
movzwl 0x74(%rdi),%eax
cmp    $0x40,%ax
je     e0e2 <_TIFFVSetField+0x1c92>
xor    %eax,%eax
jmpq   cd9d <_TIFFVSetField+0x94d>
mov    0x90(%rdi),%rax
test   %rax,%rax
je     ddcf <_TIFFVSetField+0x197f>
xor    %eax,%eax
mov    0x3b8(%rdi),%rcx
lea    0x43811(%rip),%rdx        # 5159b <module.19+0xf>
mov    %r15,-0x78(%rbp)
mov    %rdi,%r15
mov    %rcx,%rdi
callq  85a0 <TIFFWarningExt@plt>
mov    0x40(%r15),%rax
and    $0xfffffffffffffffd,%rax
mov    %rax,0x40(%r15)
mov    0x90(%r15),%rdi
callq  8bb0 <_TIFFfree@plt>
mov    %r15,%rdi
movq   $0x0,0x90(%rdi)
lea    0x437c6(%rip),%rsi        # 5158c <module.19>
mov    -0x78(%rbp),%r15
mov    $0x1,%edx
mov    0x98(%rdi),%rax
test   %rax,%rax
je     d8ce <_TIFFVSetField+0x147e>
xor    %eax,%eax
mov    0x3b8(%rdi),%rcx
lea    0x4381a(%rip),%rdx        # 51609 <module.19+0x7d>
mov    %r15,-0x78(%rbp)
mov    %rdi,%r15
mov    %rcx,%rdi
callq  85a0 <TIFFWarningExt@plt>
mov    0x40(%r15),%rax
and    $0xfffffffffffffffb,%rax
mov    %rax,0x40(%r15)
mov    0x98(%r15),%rdi
callq  8bb0 <_TIFFfree@plt>
mov    %r15,%rdi
movq   $0x0,0x98(%rdi)
mov    -0x78(%rbp),%r15
mov    $0x1,%edx
jmpq   d8ce <_TIFFVSetField+0x147e>
movl   $0x4,-0xb0(%rbp)
movzwl -0xb0(%rbp),%eax
mov    -0x48(%rbp),%rdi
mov    %ax,0x76(%rdi)
xor    %eax,%eax
jmpq   cd9d <_TIFFVSetField+0x94d>
movl   $0x2,-0xb0(%rbp)
jmp    de3c <_TIFFVSetField+0x19ec>
mov    0x10(%rsi),%rax
mov    (%rax,%rcx,1),%eax
add    $0x8,%ecx
mov    %ecx,(%rsi)
mov    -0x48(%rbp),%rdi
mov    %eax,0x58(%rdi)
xor    %eax,%eax
jmpq   cd9d <_TIFFVSetField+0x94d>
cmp    $0x8,%ax
je     e0f9 <_TIFFVSetField+0x1ca9>
cmp    $0x10,%ax
je     e10e <_TIFFVSetField+0x1cbe>
cmp    $0x18,%ax
je     e11c <_TIFFVSetField+0x1ccc>
cmp    $0x20,%ax
je     e131 <_TIFFVSetField+0x1ce1>
cmp    $0x40,%ax
je     e13f <_TIFFVSetField+0x1cef>
cmp    $0x80,%ax
je     e14d <_TIFFVSetField+0x1cfd>
xor    %eax,%eax
jmpq   cd9d <_TIFFVSetField+0x94d>
mov    %rdi,%rax
mov    %r15,-0x78(%rbp)
mov    %rdi,%r15
mov    %rax,%rdi
callq  *0x338(%r15)
mov    0x10(%r15),%eax
and    $0xffffffdf,%eax
mov    %eax,0x10(%r15)
mov    %r15,%rdi
mov    -0x78(%rbp),%r15
jmpq   d2d7 <_TIFFVSetField+0xe87>
mov    -0x48(%rbp),%rdi
mov    %ax,0x80(%rdi)
xor    %eax,%eax
jmpq   cd9d <_TIFFVSetField+0x94d>
mov    0x10(%r12),%rax
mov    (%rax,%rcx,1),%rsi
lea    0x8(%rcx),%eax
mov    %eax,(%r12)
mov    %r13d,%eax
lea    0x110(%rdi,%rax,8),%rax
movzwl 0x74(%rdi),%ecx
mov    %rdx,%r8
shl    %cl,%r8d
mov    %rdx,%r14
mov    %r8,%rdx
mov    %rdi,%r15
mov    %rax,%rdi
callq  8540 <_TIFFsetShortArray@plt>
add    $0x1,%r13d
mov    %r14,%rdx
mov    %r15,%rdi
mov    -0xb0(%rbp),%eax
cmp    %r13d,%eax
ja     e15b <_TIFFVSetField+0x1d0b>
mov    -0x10(%rbp),%r12
mov    -0x18(%rbp),%r13
mov    -0x30(%rbp),%r14
mov    -0x78(%rbp),%r15
xor    %eax,%eax
jmpq   cd9d <_TIFFVSetField+0x94d>
mov    0x10(%r13),%rax
mov    (%rax,%rcx,1),%rsi
lea    0x8(%rcx),%eax
mov    %eax,0x0(%r13)
mov    %r14,%rdx
lea    0xc8(%r15),%rdi
callq  8540 <_TIFFsetShortArray@plt>
mov    %r15,%rdi
mov    -0x18(%rbp),%r13
mov    -0x20(%rbp),%r14
mov    -0x78(%rbp),%r15
mov    $0x1,%edx
xor    %eax,%eax
jmpq   cd9d <_TIFFVSetField+0x94d>
movswq 0x6(%r15),%rax
cmp    $0xfffd,%ax
jne    e17e <_TIFFVSetField+0x1d2e>
mov    -0x60(%rbp),%rsi
movslq (%rsi),%rcx
cmp    $0x2f,%ecx
jle    e18f <_TIFFVSetField+0x1d3f>
mov    0x8(%rsi),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rsi)
mov    (%rcx),%eax
jmpq   e19b <_TIFFVSetField+0x1d4b>
mov    0x10(%rdx),%rax
mov    (%rax,%rcx,1),%r15
lea    0x8(%rcx),%eax
mov    %eax,(%rdx)
mov    %r15,%rdi
callq  8350 <strlen@plt>
add    $0x1,%eax
mov    -0x78(%rbp),%rcx
mov    %eax,0x8(%rcx)
lea    0x10(%rcx),%rdi
mov    %eax,%edx
mov    %r15,%rsi
mov    $0x1,%r15d
mov    %r15,%rcx
callq  c140 <setByteArray>
mov    %r15,%rdx
mov    %r14,%rdi
mov    -0x38(%rbp),%r14
mov    -0x70(%rbp),%r15
xor    %eax,%eax
jmpq   cd9d <_TIFFVSetField+0x94d>
mov    -0x60(%rbp),%rsi
movslq (%rsi),%rdx
cmp    $0x2f,%edx
jle    e1bb <_TIFFVSetField+0x1d6b>
mov    0x8(%rsi),%rdx
lea    0x8(%rdx),%rcx
mov    %rcx,0x8(%rsi)
movslq (%rdx),%rcx
jmpq   dce2 <_TIFFVSetField+0x1892>
cmp    $0xfffe,%cx
jne    dce2 <_TIFFVSetField+0x1892>
movzwl 0x82(%r14),%ecx
jmpq   dce2 <_TIFFVSetField+0x1892>
sub    $0x10,%rsp
movswq 0x6(%r15),%r10
movzbl 0x1b(%r15),%esi
xor    %eax,%eax
mov    0x3b8(%r14),%rdi
lea    0x4373e(%rip),%rdx        # 517ab <module.19+0x21f>
mov    (%r14),%rcx
mov    0x20(%r15),%r8
mov    0x8(%r15),%r9d
mov    %r10d,(%rsp)
mov    %esi,0x8(%rsp)
lea    0x43505(%rip),%rsi        # 5158c <module.19>
callq  8a00 <TIFFErrorExt@plt>
mov    -0x38(%rbp),%r14
mov    -0x70(%rbp),%r15
xor    %eax,%eax
leaveq 
retq   
mov    (%r15),%eax
cmp    $0x150,%eax
jne    e1cd <_TIFFVSetField+0x1d7d>
mov    0x20(%r15),%rdi
lea    0x43752(%rip),%rsi        # 51803 <module.19+0x277>
callq  8660 <strcmp@plt>
test   %eax,%eax
jne    e1cd <_TIFFVSetField+0x1d7d>
mov    -0x60(%rbp),%rdx
movslq (%rdx),%rcx
cmp    $0x2f,%ecx
jle    e236 <_TIFFVSetField+0x1de6>
mov    0x8(%rdx),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rdx)
movslq (%rcx),%rax
jmpq   e243 <_TIFFVSetField+0x1df3>
mov    0x3e8(%rdi),%rax
cmp    %r8,%rax
je     e26a <_TIFFVSetField+0x1e1a>
xor    %eax,%eax
jmpq   cd9d <_TIFFVSetField+0x94d>
mov    0x6be48(%rip),%rax        # 79f48 <_TIFFNoPostDecode@@Base+0x2f598>
mov    %rax,0x3e8(%rdi)
xor    %eax,%eax
jmpq   cd9d <_TIFFVSetField+0x94d>
mov    %r10,0x3e8(%rdi)
xor    %eax,%eax
jmpq   cd9d <_TIFFVSetField+0x94d>
mov    0x6be55(%rip),%rax        # 79f78 <_TIFFSwab24BitData@@Base+0x2f568>
mov    %rax,0x3e8(%rdi)
xor    %eax,%eax
jmpq   cd9d <_TIFFVSetField+0x94d>
mov    %r9,0x3e8(%rdi)
xor    %eax,%eax
jmpq   cd9d <_TIFFVSetField+0x94d>
mov    %r8,0x3e8(%rdi)
xor    %eax,%eax
jmpq   cd9d <_TIFFVSetField+0x94d>
mov    %r8,0x3e8(%rdi)
xor    %eax,%eax
jmpq   cd9d <_TIFFVSetField+0x94d>
movslq (%r12),%rcx
cmp    $0x2f,%ecx
jle    def8 <_TIFFVSetField+0x1aa8>
mov    0x8(%r12),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%r12)
mov    (%rcx),%rsi
jmpq   df08 <_TIFFVSetField+0x1ab8>
lea    0x435f1(%rip),%rdi        # 51776 <module.19+0x1ea>
mov    $0x233,%edx
callq  8490 <__assert_fail@plt>
mov    0x10(%rsi),%rax
mov    (%rax,%rcx,1),%eax
add    $0x8,%ecx
mov    %ecx,(%rsi)
movslq (%rsi),%rcx
cmp    $0x2f,%ecx
jle    e278 <_TIFFVSetField+0x1e28>
mov    0x8(%rsi),%rcx
lea    0x8(%rcx),%rdx
mov    %rdx,0x8(%rsi)
mov    (%rcx),%r15
jmpq   dfe1 <_TIFFVSetField+0x1b91>
mov    0x10(%rsi),%rcx
movslq (%rcx,%rdx,1),%rcx
add    $0x8,%edx
mov    %edx,(%rsi)
jmpq   dce2 <_TIFFVSetField+0x1892>
movzbl 0x1b(%r15),%eax
test   %al,%al
jne    e28a <_TIFFVSetField+0x1e3a>
movswq 0x6(%r15),%rax
cmp    $0xffff,%ax
je     e28a <_TIFFVSetField+0x1e3a>
cmp    $0xfffd,%ax
je     e28a <_TIFFVSetField+0x1e3a>
cmp    $0xfffe,%ax
je     e28a <_TIFFVSetField+0x1e3a>
movslq 0x8(%r14),%rax
cmp    $0x1,%eax
jg     e28a <_TIFFVSetField+0x1e3a>
mov    0x10(%r14),%rdi
cmp    $0x1,%eax
je     e2b2 <_TIFFVSetField+0x1e62>
lea    0x435ee(%rip),%rdi        # 5180c <module.19+0x280>
mov    $0x277,%edx
lea    0x432e1(%rip),%rsi        # 5150b <module.10+0x76>
lea    0x4356b(%rip),%rcx        # 5179c <module.19+0x210>
callq  8490 <__assert_fail@plt>
mov    0x10(%rdx),%rax
movslq (%rax,%rcx,1),%rax
add    $0x8,%ecx
mov    %ecx,(%rdx)
mov    %ax,-0xaa(%rbp)
movslq (%rdx),%rcx
cmp    $0x2f,%ecx
jle    e2f4 <_TIFFVSetField+0x1ea4>
mov    0x8(%rdx),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rdx)
movslq (%rcx),%rax
jmpq   e301 <_TIFFVSetField+0x1eb1>
mov    %r9,0x3e8(%rdi)
xor    %eax,%eax
jmpq   cd9d <_TIFFVSetField+0x94d>
mov    0x10(%rsi),%rdx
mov    (%rdx,%rcx,1),%r15
add    $0x8,%ecx
mov    %ecx,(%rsi)
jmpq   dfe1 <_TIFFVSetField+0x1b91>
mov    0x10(%r14),%rdi
mov    -0x60(%rbp),%rdx
movslq (%rdx),%rcx
cmp    $0x2f,%ecx
jle    e335 <_TIFFVSetField+0x1ee5>
mov    0x8(%rdx),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rdx)
mov    (%rcx),%rsi
jmpq   e342 <_TIFFVSetField+0x1ef2>
mov    0x8(%r15),%eax
add    $0xffffffff,%eax
cmp    $0x11,%eax
ja     e2ce <_TIFFVSetField+0x1e7e>
lea    0x430eb(%rip),%rcx        # 513b0 <_fini+0x3cc>
movslq (%rcx,%rax,4),%rax
add    %rcx,%rax
jmpq   *%rax
xor    %r15d,%r15d
mov    %r15,%rsi
mov    -0x78(%rbp),%rdx
callq  88e0 <_TIFFmemset@plt>
mov    %r15,%rdx
mov    -0x38(%rbp),%r14
mov    -0x70(%rbp),%r15
mov    -0x48(%rbp),%rdi
mov    %rdx,%rax
jmpq   cd9d <_TIFFVSetField+0x94d>
mov    0x10(%rdx),%rax
movslq (%rax,%rcx,1),%rax
add    $0x8,%ecx
mov    %ecx,(%rdx)
mov    %ax,-0xa8(%rbp)
mov    0x10(%r14),%rdi
lea    -0xaa(%rbp),%rsi
mov    $0x4,%edx
callq  8790 <_TIFFmemcpy@plt>
mov    -0x38(%rbp),%r14
mov    -0x70(%rbp),%r15
mov    $0x1,%edx
xor    %eax,%eax
mov    -0x48(%rbp),%rdi
jmpq   cd9d <_TIFFVSetField+0x94d>
mov    0x10(%rdx),%rax
mov    (%rax,%rcx,1),%rsi
lea    0x8(%rcx),%eax
mov    %eax,(%rdx)
mov    -0x10(%rbp),%rax
imul   0x8(%r14),%eax
movslq %eax,%rdx
callq  8790 <_TIFFmemcpy@plt>
mov    -0x38(%rbp),%r14
mov    -0x70(%rbp),%r15
mov    $0x1,%edx
xor    %eax,%eax
mov    -0x48(%rbp),%rdi
jmpq   cd9d <_TIFFVSetField+0x94d>
mov    -0x60(%rbp),%rdx
movslq (%rdx),%rcx
cmp    $0x2f,%ecx
jle    e4da <_TIFFVSetField+0x208a>
mov    0x8(%rdx),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rdx)
movslq (%rcx),%rax
jmpq   e4e7 <_TIFFVSetField+0x2097>
mov    -0x60(%rbp),%rdx
movslq (%rdx),%rcx
cmp    $0x2f,%ecx
jle    e515 <_TIFFVSetField+0x20c5>
mov    0x8(%rdx),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rdx)
movslq (%rcx),%rax
jmpq   e522 <_TIFFVSetField+0x20d2>
mov    -0x60(%rbp),%rdx
movslq (%rdx),%rcx
cmp    $0x2f,%ecx
jle    e550 <_TIFFVSetField+0x2100>
mov    0x8(%rdx),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rdx)
movslq (%rcx),%rax
jmpq   e55d <_TIFFVSetField+0x210d>
mov    -0x60(%rbp),%rdx
movslq (%rdx),%rcx
cmp    $0x2f,%ecx
jle    e58c <_TIFFVSetField+0x213c>
mov    0x8(%rdx),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rdx)
movslq (%rcx),%rax
jmpq   e599 <_TIFFVSetField+0x2149>
mov    -0x60(%rbp),%rdx
movslq (%rdx),%rcx
cmp    $0x2f,%ecx
jle    e5c8 <_TIFFVSetField+0x2178>
mov    0x8(%rdx),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rdx)
mov    (%rcx),%eax
jmpq   e5d4 <_TIFFVSetField+0x2184>
mov    -0x60(%rbp),%rdx
movslq (%rdx),%rcx
cmp    $0x2f,%ecx
jle    e602 <_TIFFVSetField+0x21b2>
mov    0x8(%rdx),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rdx)
movslq (%rcx),%rax
jmpq   e60f <_TIFFVSetField+0x21bf>
mov    -0x60(%rbp),%rdx
movslq (%rdx),%rcx
cmp    $0x2f,%ecx
jle    e63d <_TIFFVSetField+0x21ed>
mov    0x8(%rdx),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rdx)
mov    (%rcx),%rax
jmpq   e64a <_TIFFVSetField+0x21fa>
mov    -0x60(%rbp),%rdx
movslq (%rdx),%rcx
cmp    $0x2f,%ecx
jle    e679 <_TIFFVSetField+0x2229>
mov    0x8(%rdx),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rdx)
mov    (%rcx),%rax
jmpq   e686 <_TIFFVSetField+0x2236>
mov    -0x60(%rbp),%rdx
movslq 0x4(%rdx),%rax
cmp    $0xaf,%eax
jle    e6b5 <_TIFFVSetField+0x2265>
mov    0x8(%rdx),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rdx)
movsd  (%rcx),%xmm0
jmpq   e6c4 <_TIFFVSetField+0x2274>
mov    -0x60(%rbp),%rdx
movslq 0x4(%rdx),%rax
cmp    $0xaf,%eax
jle    e6ff <_TIFFVSetField+0x22af>
mov    0x8(%rdx),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rdx)
movsd  (%rcx),%xmm0
jmpq   e70e <_TIFFVSetField+0x22be>
mov    0x10(%rdx),%rax
movslq (%rax,%rcx,1),%rax
add    $0x8,%ecx
mov    %ecx,(%rdx)
mov    %al,-0xa6(%rbp)
lea    -0xa6(%rbp),%rsi
mov    -0x78(%rbp),%rdx
callq  8790 <_TIFFmemcpy@plt>
mov    -0x38(%rbp),%r14
mov    -0x70(%rbp),%r15
mov    $0x1,%edx
xor    %eax,%eax
mov    -0x48(%rbp),%rdi
jmpq   cd9d <_TIFFVSetField+0x94d>
mov    0x10(%rdx),%rax
movslq (%rax,%rcx,1),%rax
add    $0x8,%ecx
mov    %ecx,(%rdx)
mov    %al,-0xa5(%rbp)
lea    -0xa5(%rbp),%rsi
mov    -0x78(%rbp),%rdx
callq  8790 <_TIFFmemcpy@plt>
mov    -0x38(%rbp),%r14
mov    -0x70(%rbp),%r15
mov    $0x1,%edx
xor    %eax,%eax
mov    -0x48(%rbp),%rdi
jmpq   cd9d <_TIFFVSetField+0x94d>
mov    0x10(%rdx),%rax
movslq (%rax,%rcx,1),%rax
add    $0x8,%ecx
mov    %ecx,(%rdx)
mov    %ax,-0xa4(%rbp)
lea    -0xa4(%rbp),%rsi
mov    -0x78(%rbp),%rdx
callq  8790 <_TIFFmemcpy@plt>
mov    -0x38(%rbp),%r14
mov    -0x70(%rbp),%r15
mov    $0x1,%edx
xor    %eax,%eax
mov    -0x48(%rbp),%rdi
jmpq   cd9d <_TIFFVSetField+0x94d>
mov    0x10(%rdx),%rax
movslq (%rax,%rcx,1),%rax
add    $0x8,%ecx
mov    %ecx,(%rdx)
mov    %ax,-0xa2(%rbp)
lea    -0xa2(%rbp),%rsi
mov    -0x78(%rbp),%rdx
callq  8790 <_TIFFmemcpy@plt>
mov    -0x38(%rbp),%r14
mov    -0x70(%rbp),%r15
mov    $0x1,%edx
xor    %eax,%eax
mov    -0x48(%rbp),%rdi
jmpq   cd9d <_TIFFVSetField+0x94d>
mov    0x10(%rdx),%rax
mov    (%rax,%rcx,1),%eax
add    $0x8,%ecx
mov    %ecx,(%rdx)
mov    %eax,-0xa0(%rbp)
lea    -0xa0(%rbp),%rsi
mov    -0x78(%rbp),%rdx
callq  8790 <_TIFFmemcpy@plt>
mov    -0x38(%rbp),%r14
mov    -0x70(%rbp),%r15
mov    $0x1,%edx
xor    %eax,%eax
mov    -0x48(%rbp),%rdi
jmpq   cd9d <_TIFFVSetField+0x94d>
mov    0x10(%rdx),%rax
movslq (%rax,%rcx,1),%rax
add    $0x8,%ecx
mov    %ecx,(%rdx)
mov    %eax,-0x9c(%rbp)
lea    -0x9c(%rbp),%rsi
mov    -0x78(%rbp),%rdx
callq  8790 <_TIFFmemcpy@plt>
mov    -0x38(%rbp),%r14
mov    -0x70(%rbp),%r15
mov    $0x1,%edx
xor    %eax,%eax
mov    -0x48(%rbp),%rdi
jmpq   cd9d <_TIFFVSetField+0x94d>
mov    0x10(%rdx),%rax
mov    (%rax,%rcx,1),%rax
add    $0x8,%ecx
mov    %ecx,(%rdx)
mov    %rax,-0x98(%rbp)
lea    -0x98(%rbp),%rsi
mov    -0x78(%rbp),%rdx
callq  8790 <_TIFFmemcpy@plt>
mov    -0x38(%rbp),%r14
mov    -0x70(%rbp),%r15
mov    $0x1,%edx
xor    %eax,%eax
mov    -0x48(%rbp),%rdi
jmpq   cd9d <_TIFFVSetField+0x94d>
mov    0x10(%rdx),%rax
mov    (%rax,%rcx,1),%rax
add    $0x8,%ecx
mov    %ecx,(%rdx)
mov    %rax,-0x90(%rbp)
lea    -0x90(%rbp),%rsi
mov    -0x78(%rbp),%rdx
callq  8790 <_TIFFmemcpy@plt>
mov    -0x38(%rbp),%r14
mov    -0x70(%rbp),%r15
mov    $0x1,%edx
xor    %eax,%eax
mov    -0x48(%rbp),%rdi
jmpq   cd9d <_TIFFVSetField+0x94d>
mov    0x10(%rdx),%rcx
movsd  (%rcx,%rax,1),%xmm0
add    $0x10,%eax
mov    %eax,0x4(%rdx)
mov    %rdi,%r14
callq  c410 <TIFFClampDoubleToFloat>
mov    %r14,%rdi
movss  %xmm0,-0x84(%rbp)
lea    -0x84(%rbp),%rsi
mov    -0x78(%rbp),%rdx
callq  8790 <_TIFFmemcpy@plt>
mov    -0x38(%rbp),%r14
mov    -0x70(%rbp),%r15
mov    $0x1,%edx
xor    %eax,%eax
mov    -0x48(%rbp),%rdi
jmpq   cd9d <_TIFFVSetField+0x94d>
mov    0x10(%rdx),%rcx
movsd  (%rcx,%rax,1),%xmm0
add    $0x10,%eax
mov    %eax,0x4(%rdx)
movsd  %xmm0,-0x80(%rbp)
lea    -0x80(%rbp),%rsi
mov    -0x78(%rbp),%rdx
callq  8790 <_TIFFmemcpy@plt>
mov    -0x38(%rbp),%r14
mov    -0x70(%rbp),%r15
mov    $0x1,%edx
xor    %eax,%eax
mov    -0x48(%rbp),%rdi
jmpq   cd9d <_TIFFVSetField+0x94d>
nopl   0x0(%rax,%rax,1)

000000000000e740 <OkToChangeTag>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
xor    %edx,%edx
mov    %rdi,%r14
mov    %rsi,%r15
callq  8680 <TIFFFindField@plt>
test   %rax,%rax
jne    e77e <OkToChangeTag+0x3e>
mov    0x3b8(%r14),%rdi
mov    (%r14),%rcx
cmp    $0xffff,%r15d
ja     e799 <OkToChangeTag+0x59>
lea    0x42fa3(%rip),%r8        # 5171f <module.19+0x193>
jmp    e7a0 <OkToChangeTag+0x60>
mov    $0x1,%edx
cmp    $0x101,%r15d
jne    e7c4 <OkToChangeTag+0x84>
mov    %rdx,%rax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
lea    0x42f77(%rip),%r8        # 51717 <module.19+0x18b>
mov    %r15,%r9
xor    %eax,%eax
lea    0x430b3(%rip),%rdx        # 5185f <module.19+0x2d3>
lea    0x42d93(%rip),%rsi        # 51546 <module.10+0xb1>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
mov    0x10(%r14),%ecx
and    $0x40,%ecx
test   %ecx,%ecx
jne    e7dc <OkToChangeTag+0x9c>
mov    %rdx,%rax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
movzbl 0x1a(%rax),%ecx
test   %cl,%cl
je     e7f1 <OkToChangeTag+0xb1>
mov    %rdx,%rax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
xor    %r9d,%r9d
mov    0x3b8(%r14),%rdi
lea    0x43072(%rip),%rdx        # 51874 <module.19+0x2e8>
mov    (%r14),%rcx
mov    0x20(%rax),%r8
mov    %r9,%rax
lea    0x42d33(%rip),%rsi        # 51546 <module.10+0xb1>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nop

000000000000e830 <_TIFFVGetField>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %rsi,-0x18(%rbp)
mov    %rdi,-0x10(%rbp)
mov    %rdx,-0x8(%rbp)
xor    %edx,%edx
callq  8680 <TIFFFindField@plt>
test   %rax,%rax
jne    e854 <_TIFFVGetField+0x24>
xor    %eax,%eax
leaveq 
retq   
mov    $0x1,%r10d
lea    0x4303c(%rip),%rsi        # 5189d <module.19+0x311>
mov    -0x18(%rbp),%r8
cmp    $0x14e,%r8d
jne    e876 <_TIFFVGetField+0x46>
xor    %edi,%edi
mov    -0x10(%rbp),%r9
jmp    e8a6 <_TIFFVGetField+0x76>
movzwl 0x18(%rax),%ecx
cmp    $0x41,%cx
je     e8b3 <_TIFFVGetField+0x83>
mov    %r8,%rdx
jmp    e8b5 <_TIFFVGetField+0x85>
movslq %edi,%rax
lea    (%rax,%rax,2),%rdx
shl    $0x3,%rdx
add    0x148(%r9),%rdx
mov    (%rdx),%rax
mov    (%rax),%eax
cmp    $0x14e,%eax
je     e91d <_TIFFVGetField+0xed>
add    $0x1,%edi
cmp    0x140(%r9),%edi
jl     e885 <_TIFFVGetField+0x55>
xor    %eax,%eax
leaveq 
retq   
xor    %edx,%edx
cmp    $0x128,%edx
jbe    e92e <_TIFFVGetField+0xfe>
cmp    $0x151,%edx
jbe    e98e <_TIFFVGetField+0x15e>
cmp    $0x212,%edx
jbe    e9e2 <_TIFFVGetField+0x1b2>
cmp    $0x80e3,%edx
jbe    ea32 <_TIFFVGetField+0x202>
cmp    $0x80e4,%edx
jbe    ea6e <_TIFFVGetField+0x23e>
cmp    $0x80e5,%edx
jne    ea8f <_TIFFVGetField+0x25f>
mov    -0x8(%rbp),%rsi
movslq (%rsi),%rdx
cmp    $0x2f,%edx
jle    eabb <_TIFFVGetField+0x28b>
mov    0x8(%rsi),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rsi)
mov    (%rcx),%rcx
jmpq   eac8 <_TIFFVGetField+0x298>
mov    0x10(%rdx),%rax
test   %rax,%rax
jne    ead6 <_TIFFVGetField+0x2a6>
xor    %eax,%eax
leaveq 
retq   
cmp    $0x114,%edx
jbe    eaf3 <_TIFFVGetField+0x2c3>
cmp    $0x119,%edx
jbe    eb53 <_TIFFVGetField+0x323>
cmp    $0x11d,%edx
jbe    eb9b <_TIFFVGetField+0x36b>
cmp    $0x11e,%edx
jbe    ebd7 <_TIFFVGetField+0x3a7>
cmp    $0x11f,%edx
jne    ec07 <_TIFFVGetField+0x3d7>
mov    -0x8(%rbp),%rsi
movslq (%rsi),%rdx
cmp    $0x2f,%edx
jle    ec37 <_TIFFVGetField+0x407>
mov    0x8(%rsi),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rsi)
mov    (%rcx),%rcx
jmpq   ec44 <_TIFFVGetField+0x414>
cmp    $0x142,%edx
jbe    ec59 <_TIFFVGetField+0x429>
cmp    $0x144,%edx
jbe    eca1 <_TIFFVGetField+0x471>
cmp    $0x149,%edx
jbe    ecd1 <_TIFFVGetField+0x4a1>
cmp    $0x14a,%edx
jne    ed14 <_TIFFVGetField+0x4e4>
mov    -0x8(%rbp),%rdi
movslq (%rdi),%rdx
cmp    $0x2f,%edx
jle    ed44 <_TIFFVGetField+0x514>
mov    0x8(%rdi),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rdi)
mov    (%rcx),%rcx
jmpq   ed51 <_TIFFVGetField+0x521>
cmp    $0x153,%edx
jbe    ed7f <_TIFFVGetField+0x54f>
cmp    $0x154,%edx
jbe    edaf <_TIFFVGetField+0x57f>
cmp    $0x155,%edx
je     edf4 <_TIFFVGetField+0x5c4>
cmp    $0x212,%edx
jne    ea7a <_TIFFVGetField+0x24a>
mov    -0x8(%rbp),%rdi
movslq (%rdi),%rdx
cmp    $0x2f,%edx
jle    ee2d <_TIFFVGetField+0x5fd>
mov    0x8(%rdi),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rdi)
mov    (%rcx),%rcx
jmpq   ee3a <_TIFFVGetField+0x60a>
cmp    $0x213,%edx
jbe    ee68 <_TIFFVGetField+0x638>
cmp    $0x214,%edx
jne    ee98 <_TIFFVGetField+0x668>
mov    -0x8(%rbp),%rsi
movslq (%rsi),%rdx
cmp    $0x2f,%edx
jle    eec8 <_TIFFVGetField+0x698>
mov    0x8(%rsi),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rsi)
mov    (%rcx),%rcx
jmpq   eed5 <_TIFFVGetField+0x6a5>
cmp    $0x80e4,%edx
je     eee8 <_TIFFVGetField+0x6b8>
cmp    $0x41,%cx
jne    ef28 <_TIFFVGetField+0x6f8>
xor    %edi,%edi
mov    -0x10(%rbp),%r9
jmpq   ef70 <_TIFFVGetField+0x740>
cmp    $0x80e6,%edx
jne    ea7a <_TIFFVGetField+0x24a>
mov    -0x8(%rbp),%rsi
movslq (%rsi),%rdx
cmp    $0x2f,%edx
jle    ef7f <_TIFFVGetField+0x74f>
mov    0x8(%rsi),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rsi)
mov    (%rcx),%rcx
jmpq   ef8c <_TIFFVGetField+0x75c>
mov    0x10(%rsi),%rax
mov    (%rax,%rdx,1),%rcx
lea    0x8(%rdx),%eax
mov    %eax,(%rsi)
mov    -0x10(%rbp),%rax
mov    0x60(%rax),%eax
mov    %eax,(%rcx)
mov    %r10,%rax
leaveq 
retq   
movzwl (%rax),%ecx
movzwl 0x82(%r9),%r8d
cmp    %cx,%r8w
jb     ef9a <_TIFFVGetField+0x76a>
mov    %r10,%rax
jmpq   efc7 <_TIFFVGetField+0x797>
cmp    $0x105,%edx
jbe    efeb <_TIFFVGetField+0x7bb>
cmp    $0x109,%edx
jbe    f033 <_TIFFVGetField+0x803>
cmp    $0x110,%edx
jbe    f063 <_TIFFVGetField+0x833>
cmp    $0x111,%edx
je     f09f <_TIFFVGetField+0x86f>
cmp    $0x112,%edx
jne    ea7a <_TIFFVGetField+0x24a>
mov    -0x8(%rbp),%rsi
movslq (%rsi),%rdx
cmp    $0x2f,%edx
jle    f0d6 <_TIFFVGetField+0x8a6>
mov    0x8(%rsi),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rsi)
mov    (%rcx),%rcx
jmpq   f0e3 <_TIFFVGetField+0x8b3>
cmp    $0x116,%edx
jbe    f0f6 <_TIFFVGetField+0x8c6>
cmp    $0x117,%edx
jbe    f126 <_TIFFVGetField+0x8f6>
cmp    $0x118,%edx
jne    f137 <_TIFFVGetField+0x907>
mov    -0x8(%rbp),%rsi
movslq (%rsi),%rdx
cmp    $0x2f,%edx
jle    f167 <_TIFFVGetField+0x937>
mov    0x8(%rsi),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rsi)
mov    (%rcx),%rcx
jmpq   f174 <_TIFFVGetField+0x944>
cmp    $0x11a,%edx
jbe    f187 <_TIFFVGetField+0x957>
cmp    $0x11b,%edx
jne    f1b7 <_TIFFVGetField+0x987>
mov    -0x8(%rbp),%rsi
movslq (%rsi),%rdx
cmp    $0x2f,%edx
jle    f1e7 <_TIFFVGetField+0x9b7>
mov    0x8(%rsi),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rsi)
mov    (%rcx),%rcx
jmpq   f1f4 <_TIFFVGetField+0x9c4>
cmp    $0x11e,%edx
jne    ea7a <_TIFFVGetField+0x24a>
mov    -0x8(%rbp),%rsi
movslq (%rsi),%rdx
cmp    $0x2f,%edx
jle    f209 <_TIFFVGetField+0x9d9>
mov    0x8(%rsi),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rsi)
mov    (%rcx),%rcx
jmpq   f216 <_TIFFVGetField+0x9e6>
cmp    $0x128,%edx
jne    ea7a <_TIFFVGetField+0x24a>
mov    -0x8(%rbp),%rsi
movslq (%rsi),%rdx
cmp    $0x2f,%edx
jle    f22b <_TIFFVGetField+0x9fb>
mov    0x8(%rsi),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rsi)
mov    (%rcx),%rcx
jmpq   f238 <_TIFFVGetField+0xa08>
mov    0x10(%rsi),%rax
mov    (%rax,%rdx,1),%rcx
lea    0x8(%rdx),%eax
mov    %eax,(%rsi)
mov    -0x10(%rbp),%rax
movss  0xb0(%rax),%xmm0
movss  %xmm0,(%rcx)
mov    %r10,%rax
leaveq 
retq   
cmp    $0x13f,%edx
jbe    f24b <_TIFFVGetField+0xa1b>
cmp    $0x140,%edx
jbe    f27b <_TIFFVGetField+0xa4b>
cmp    $0x141,%edx
jne    f2ab <_TIFFVGetField+0xa7b>
mov    -0x8(%rbp),%rdi
movslq (%rdi),%rdx
cmp    $0x2f,%edx
jle    f2db <_TIFFVGetField+0xaab>
mov    0x8(%rdi),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rdi)
mov    (%rcx),%rcx
jmpq   f2e8 <_TIFFVGetField+0xab8>
cmp    $0x143,%edx
jne    f093 <_TIFFVGetField+0x863>
mov    -0x8(%rbp),%rsi
movslq (%rsi),%rdx
cmp    $0x2f,%edx
jle    f316 <_TIFFVGetField+0xae6>
mov    0x8(%rsi),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rsi)
mov    (%rcx),%rcx
jmpq   f323 <_TIFFVGetField+0xaf3>
cmp    $0x145,%edx
jne    ea7a <_TIFFVGetField+0x24a>
mov    -0x10(%rbp),%rax
mov    %rax,%rdi
mov    %r15,-0x18(%rbp)
mov    %rax,%r15
callq  8c70 <_TIFFFillStriles@plt>
mov    -0x8(%rbp),%rdx
movslq (%rdx),%rcx
cmp    $0x2f,%ecx
jle    f331 <_TIFFVGetField+0xb01>
mov    0x8(%rdx),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rdx)
mov    (%rcx),%rax
jmpq   f33e <_TIFFVGetField+0xb0e>
cmp    $0x14d,%edx
jne    ea7a <_TIFFVGetField+0x24a>
mov    -0x8(%rbp),%rsi
movslq (%rsi),%rdx
cmp    $0x2f,%edx
jle    f353 <_TIFFVGetField+0xb23>
mov    0x8(%rsi),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rsi)
mov    (%rcx),%rcx
jmpq   f360 <_TIFFVGetField+0xb30>
mov    0x10(%rdi),%rax
mov    (%rax,%rdx,1),%rcx
lea    0x8(%rdx),%eax
mov    %eax,(%rdi)
mov    -0x10(%rbp),%rsi
movzwl 0xfc(%rsi),%eax
mov    %ax,(%rcx)
movslq (%rdi),%rdx
cmp    $0x2f,%edx
jle    f373 <_TIFFVGetField+0xb43>
mov    0x8(%rdi),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rdi)
mov    (%rcx),%rcx
jmpq   f380 <_TIFFVGetField+0xb50>
cmp    $0x152,%edx
jne    f38f <_TIFFVGetField+0xb5f>
mov    -0x8(%rbp),%rdi
movslq (%rdi),%rdx
cmp    $0x2f,%edx
jle    f3bf <_TIFFVGetField+0xb8f>
mov    0x8(%rdi),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rdi)
mov    (%rcx),%rcx
jmpq   f3cc <_TIFFVGetField+0xb9c>
cmp    $0x154,%edx
jne    ea7a <_TIFFVGetField+0x24a>
mov    -0x10(%rbp),%rsi
mov    0x10(%rsi),%ecx
and    $0x400000,%ecx
test   %ecx,%ecx
je     f3fa <_TIFFVGetField+0xbca>
mov    -0x8(%rbp),%rdi
movslq (%rdi),%rdx
cmp    $0x2f,%edx
jle    f40d <_TIFFVGetField+0xbdd>
mov    0x8(%rdi),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rdi)
mov    (%rcx),%rcx
jmpq   f41a <_TIFFVGetField+0xbea>
mov    -0x10(%rbp),%rsi
mov    0x10(%rsi),%ecx
and    $0x400000,%ecx
test   %ecx,%ecx
je     f429 <_TIFFVGetField+0xbf9>
mov    -0x8(%rbp),%rdi
movslq (%rdi),%rdx
cmp    $0x2f,%edx
jle    f43c <_TIFFVGetField+0xc0c>
mov    0x8(%rdi),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rdi)
mov    (%rcx),%rcx
jmpq   f449 <_TIFFVGetField+0xc19>
mov    0x10(%rdi),%rax
mov    (%rax,%rdx,1),%rcx
lea    0x8(%rdx),%eax
mov    %eax,(%rdi)
mov    -0x10(%rbp),%rsi
movzwl 0x108(%rsi),%eax
mov    %ax,(%rcx)
movslq (%rdi),%rdx
cmp    $0x2f,%edx
jle    f458 <_TIFFVGetField+0xc28>
mov    0x8(%rdi),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rdi)
mov    (%rcx),%rcx
jmpq   f465 <_TIFFVGetField+0xc35>
cmp    $0x213,%edx
jne    ea7a <_TIFFVGetField+0x24a>
mov    -0x8(%rbp),%rsi
movslq (%rsi),%rdx
cmp    $0x2f,%edx
jle    f474 <_TIFFVGetField+0xc44>
mov    0x8(%rsi),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rsi)
mov    (%rcx),%rcx
jmpq   f481 <_TIFFVGetField+0xc51>
cmp    $0x80e3,%edx
jne    ea7a <_TIFFVGetField+0x24a>
mov    -0x8(%rbp),%rdx
movslq (%rdx),%rax
cmp    $0x2f,%eax
jle    f494 <_TIFFVGetField+0xc64>
mov    0x8(%rdx),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rdx)
mov    (%rcx),%rcx
jmpq   f4a1 <_TIFFVGetField+0xc71>
mov    0x10(%rsi),%rax
mov    (%rax,%rdx,1),%rcx
lea    0x8(%rdx),%eax
mov    %eax,(%rsi)
mov    -0x10(%rbp),%rax
mov    0x128(%rax),%rax
mov    %rax,(%rcx)
mov    %r10,%rax
leaveq 
retq   
mov    -0x10(%rbp),%rax
movzwl 0x76(%rax),%eax
cmp    $0x2,%ax
jbe    f4c0 <_TIFFVGetField+0xc90>
cmp    $0x3,%ax
jne    f4ee <_TIFFVGetField+0xcbe>
mov    -0x8(%rbp),%rdx
movslq (%rdx),%rax
cmp    $0x2f,%eax
jle    f4fd <_TIFFVGetField+0xccd>
mov    0x8(%rdx),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rdx)
mov    (%rcx),%rcx
jmpq   f50a <_TIFFVGetField+0xcda>
mov    -0x10(%rbp),%rcx
mov    0x3b8(%rcx),%rdi
mov    (%rcx),%rcx
cmp    $0xffff,%r8d
ja     f514 <_TIFFVGetField+0xce4>
lea    0x427d5(%rip),%r8        # 5171f <module.19+0x193>
jmpq   f51b <_TIFFVGetField+0xceb>
movslq %edi,%rcx
lea    (%rcx,%rcx,2),%rdx
shl    $0x3,%rdx
add    0x148(%r9),%rdx
mov    (%rdx),%rcx
cmp    (%rcx),%r8d
je     f535 <_TIFFVGetField+0xd05>
add    $0x1,%edi
movslq 0x140(%r9),%rcx
cmp    %edi,%ecx
jg     ef4f <_TIFFVGetField+0x71f>
xor    %eax,%eax
leaveq 
retq   
mov    0x10(%rsi),%rax
mov    (%rax,%rdx,1),%rcx
lea    0x8(%rdx),%eax
mov    %eax,(%rsi)
mov    -0x10(%rbp),%rax
mov    0x6c(%rax),%eax
mov    %eax,(%rcx)
mov    %r10,%rax
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%r9),%rdi
lea    0x42902(%rip),%rdx        # 518ac <module.19+0x320>
mov    %r15,-0x18(%rbp)
mov    %r9,%r15
callq  85a0 <TIFFWarningExt@plt>
movzwl 0x82(%r15),%ecx
mov    $0x1,%eax
mov    -0x18(%rbp),%r15
mov    -0x8(%rbp),%rdi
movslq (%rdi),%rsi
cmp    $0x2f,%esi
jle    f5b9 <_TIFFVGetField+0xd89>
mov    0x8(%rdi),%rsi
lea    0x8(%rsi),%rdx
mov    %rdx,0x8(%rdi)
mov    (%rsi),%rdx
jmpq   f5c6 <_TIFFVGetField+0xd96>
cmp    $0x100,%edx
jbe    f5cb <_TIFFVGetField+0xd9b>
cmp    $0x101,%edx
jbe    f5fb <_TIFFVGetField+0xdcb>
cmp    $0x102,%edx
jne    f62b <_TIFFVGetField+0xdfb>
mov    -0x8(%rbp),%rsi
movslq (%rsi),%rdx
cmp    $0x2f,%edx
jle    f65b <_TIFFVGetField+0xe2b>
mov    0x8(%rsi),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rsi)
mov    (%rcx),%rcx
jmpq   f668 <_TIFFVGetField+0xe38>
cmp    $0x106,%edx
jne    f678 <_TIFFVGetField+0xe48>
mov    -0x8(%rbp),%rsi
movslq (%rsi),%rdx
cmp    $0x2f,%edx
jle    f6a8 <_TIFFVGetField+0xe78>
mov    0x8(%rsi),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rsi)
mov    (%rcx),%rcx
jmpq   f6b5 <_TIFFVGetField+0xe85>
cmp    $0x10a,%edx
jne    ea7a <_TIFFVGetField+0x24a>
mov    -0x8(%rbp),%rsi
movslq (%rsi),%rdx
cmp    $0x2f,%edx
jle    f6c5 <_TIFFVGetField+0xe95>
mov    0x8(%rsi),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rsi)
mov    (%rcx),%rcx
jmpq   f6d2 <_TIFFVGetField+0xea2>
cmp    $0x144,%edx
jne    ea7a <_TIFFVGetField+0x24a>
mov    -0x10(%rbp),%rax
mov    %rax,%rdi
mov    %r15,-0x18(%rbp)
mov    %rax,%r15
callq  8c70 <_TIFFFillStriles@plt>
mov    -0x8(%rbp),%rdx
movslq (%rdx),%rcx
cmp    $0x2f,%ecx
jle    f6e2 <_TIFFVGetField+0xeb2>
mov    0x8(%rdx),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rdx)
mov    (%rcx),%rax
jmpq   f6ef <_TIFFVGetField+0xebf>
mov    0x10(%rsi),%rax
mov    (%rax,%rdx,1),%rcx
lea    0x8(%rdx),%eax
mov    %eax,(%rsi)
mov    -0x10(%rbp),%rax
movzwl 0x80(%rax),%eax
mov    %ax,(%rcx)
mov    %r10,%rax
leaveq 
retq   
cmp    $0x115,%edx
jne    f704 <_TIFFVGetField+0xed4>
mov    -0x8(%rbp),%rsi
movslq (%rsi),%rdx
cmp    $0x2f,%edx
jle    f734 <_TIFFVGetField+0xf04>
mov    0x8(%rsi),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rsi)
mov    (%rcx),%rcx
jmpq   f741 <_TIFFVGetField+0xf11>
cmp    $0x117,%edx
je     ecdd <_TIFFVGetField+0x4ad>
jmpq   ea7a <_TIFFVGetField+0x24a>
cmp    $0x119,%edx
jne    ea7a <_TIFFVGetField+0x24a>
mov    -0x8(%rbp),%rsi
movslq (%rsi),%rdx
cmp    $0x2f,%edx
jle    f754 <_TIFFVGetField+0xf24>
mov    0x8(%rsi),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rsi)
mov    (%rcx),%rcx
jmpq   f761 <_TIFFVGetField+0xf31>
mov    0x10(%rsi),%rax
mov    (%rax,%rdx,1),%rcx
lea    0x8(%rdx),%eax
mov    %eax,(%rsi)
mov    -0x10(%rbp),%rax
movzwl 0x88(%rax),%eax
mov    %ax,(%rcx)
mov    %r10,%rax
leaveq 
retq   
cmp    $0x11a,%edx
jne    ea7a <_TIFFVGetField+0x24a>
mov    -0x8(%rbp),%rsi
movslq (%rsi),%rdx
cmp    $0x2f,%edx
jle    f774 <_TIFFVGetField+0xf44>
mov    0x8(%rsi),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rsi)
mov    (%rcx),%rcx
jmpq   f781 <_TIFFVGetField+0xf51>
cmp    $0x11c,%edx
jne    ea7a <_TIFFVGetField+0x24a>
mov    -0x8(%rbp),%rsi
movslq (%rsi),%rdx
cmp    $0x2f,%edx
jle    f796 <_TIFFVGetField+0xf66>
mov    0x8(%rsi),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rsi)
mov    (%rcx),%rcx
jmpq   f7a3 <_TIFFVGetField+0xf73>
mov    0x10(%rsi),%rax
mov    (%rax,%rdx,1),%rcx
lea    0x8(%rdx),%eax
mov    %eax,(%rsi)
mov    -0x10(%rbp),%rax
movss  0xa4(%rax),%xmm0
movss  %xmm0,(%rcx)
mov    %r10,%rax
leaveq 
retq   
mov    0x10(%rsi),%rax
mov    (%rax,%rdx,1),%rcx
lea    0x8(%rdx),%eax
mov    %eax,(%rsi)
mov    -0x10(%rbp),%rax
movss  0xac(%rax),%xmm0
movss  %xmm0,(%rcx)
mov    %r10,%rax
leaveq 
retq   
mov    0x10(%rsi),%rax
mov    (%rax,%rdx,1),%rcx
lea    0x8(%rdx),%eax
mov    %eax,(%rsi)
mov    -0x10(%rbp),%rax
movzwl 0xa8(%rax),%eax
mov    %ax,(%rcx)
mov    %r10,%rax
leaveq 
retq   
cmp    $0x129,%edx
jne    f7b6 <_TIFFVGetField+0xf86>
mov    -0x8(%rbp),%rdi
movslq (%rdi),%rdx
cmp    $0x2f,%edx
jle    f7e6 <_TIFFVGetField+0xfb6>
mov    0x8(%rdi),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rdi)
mov    (%rcx),%rcx
jmpq   f7f3 <_TIFFVGetField+0xfc3>
cmp    $0x140,%edx
jne    ea7a <_TIFFVGetField+0x24a>
mov    -0x8(%rbp),%rdi
movslq (%rdi),%rdx
cmp    $0x2f,%edx
jle    f821 <_TIFFVGetField+0xff1>
mov    0x8(%rdi),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rdi)
mov    (%rcx),%rcx
jmpq   f82e <_TIFFVGetField+0xffe>
cmp    $0x142,%edx
jne    ea7a <_TIFFVGetField+0x24a>
mov    -0x8(%rbp),%rsi
movslq (%rsi),%rdx
cmp    $0x2f,%edx
jle    f85c <_TIFFVGetField+0x102c>
mov    0x8(%rsi),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rsi)
mov    (%rcx),%rcx
jmpq   f869 <_TIFFVGetField+0x1039>
mov    0x10(%rdi),%rax
mov    (%rax,%rdx,1),%rcx
lea    0x8(%rdx),%eax
mov    %eax,(%rdi)
mov    -0x10(%rbp),%rsi
movzwl 0xd0(%rsi),%eax
mov    %ax,(%rcx)
movslq (%rdi),%rdx
cmp    $0x2f,%edx
jle    f877 <_TIFFVGetField+0x1047>
mov    0x8(%rdi),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rdi)
mov    (%rcx),%rcx
jmpq   f884 <_TIFFVGetField+0x1054>
mov    0x10(%rsi),%rax
mov    (%rax,%rdx,1),%rcx
lea    0x8(%rdx),%eax
mov    %eax,(%rsi)
mov    -0x10(%rbp),%rax
mov    0x68(%rax),%eax
mov    %eax,(%rcx)
mov    %r10,%rax
leaveq 
retq   
mov    0x10(%rdx),%rax
mov    (%rax,%rcx,1),%rax
add    $0x8,%ecx
mov    %ecx,(%rdx)
mov    0xf0(%r15),%rcx
mov    %rcx,(%rax)
mov    $0x1,%eax
mov    -0x18(%rbp),%r15
leaveq 
retq   
mov    0x10(%rsi),%rax
mov    (%rax,%rdx,1),%rcx
lea    0x8(%rdx),%eax
mov    %eax,(%rsi)
mov    -0x10(%rbp),%rax
mov    0x138(%rax),%rax
mov    %rax,(%rcx)
mov    %r10,%rax
leaveq 
retq   
mov    0x10(%rdi),%rax
mov    (%rax,%rdx,1),%rcx
lea    0x8(%rdx),%eax
mov    %eax,(%rdi)
mov    0x100(%rsi),%rax
mov    %rax,(%rcx)
mov    %r10,%rax
leaveq 
retq   
cmp    $0x153,%edx
jne    ea7a <_TIFFVGetField+0x24a>
mov    -0x8(%rbp),%rsi
movslq (%rsi),%rdx
cmp    $0x2f,%edx
jle    f893 <_TIFFVGetField+0x1063>
mov    0x8(%rsi),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rsi)
mov    (%rcx),%rcx
jmpq   f8a0 <_TIFFVGetField+0x1070>
mov    0x10(%rdi),%rax
mov    (%rax,%rdx,1),%rcx
lea    0x8(%rdx),%eax
mov    %eax,(%rdi)
mov    -0x10(%rbp),%rsi
movzwl 0xd4(%rsi),%eax
mov    %ax,(%rcx)
movslq (%rdi),%rdx
cmp    $0x2f,%edx
jle    f8b0 <_TIFFVGetField+0x1080>
mov    0x8(%rdi),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rdi)
mov    (%rcx),%rcx
jmpq   f8bd <_TIFFVGetField+0x108d>
mov    0x90(%rsi),%rax
movsd  (%rax),%xmm0
mov    %r10,%rcx
jmpq   f8ea <_TIFFVGetField+0x10ba>
mov    0x10(%rdi),%rax
mov    (%rax,%rdx,1),%rcx
lea    0x8(%rdx),%eax
mov    %eax,(%rdi)
mov    0x90(%rsi),%rax
mov    %rax,(%rcx)
mov    %r10,%rax
leaveq 
retq   
mov    0x98(%rsi),%rax
movsd  (%rax),%xmm0
mov    %r10,%rcx
jmpq   f936 <_TIFFVGetField+0x1106>
mov    0x10(%rdi),%rax
mov    (%rax,%rdx,1),%rcx
lea    0x8(%rdx),%eax
mov    %eax,(%rdi)
mov    0x98(%rsi),%rax
mov    %rax,(%rcx)
mov    %r10,%rax
leaveq 
retq   
mov    0x10(%rdi),%rax
mov    (%rax,%rdx,1),%rcx
lea    0x8(%rdx),%eax
mov    %eax,(%rdi)
movzwl 0x10a(%rsi),%eax
mov    %ax,(%rcx)
mov    %r10,%rax
leaveq 
retq   
mov    0x10(%rsi),%rax
mov    (%rax,%rdx,1),%rcx
lea    0x8(%rdx),%eax
mov    %eax,(%rsi)
mov    -0x10(%rbp),%rax
movzwl 0x10c(%rax),%eax
mov    %ax,(%rcx)
mov    %r10,%rax
leaveq 
retq   
mov    0x10(%rdx),%rcx
mov    (%rcx,%rax,1),%rcx
add    $0x8,%eax
mov    %eax,(%rdx)
mov    -0x10(%rbp),%rdx
movzwl 0xd4(%rdx),%eax
cmp    $0x1,%ax
je     f966 <_TIFFVGetField+0x1136>
xor    %edx,%edx
mov    %dx,(%rcx)
mov    %r10,%rax
leaveq 
retq   
cmp    $0x1,%ax
jne    f981 <_TIFFVGetField+0x1151>
mov    -0x8(%rbp),%rdx
movslq (%rdx),%rcx
cmp    $0x2f,%ecx
jle    f990 <_TIFFVGetField+0x1160>
mov    0x8(%rdx),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rdx)
mov    (%rcx),%rax
jmpq   f99d <_TIFFVGetField+0x116d>
cmp    $0x4,%ax
je     f9a7 <_TIFFVGetField+0x1177>
mov    %r10,%rax
leaveq 
retq   
mov    0x10(%rdx),%rcx
mov    (%rcx,%rax,1),%rcx
add    $0x8,%eax
mov    %eax,(%rdx)
movw   $0x3,(%rcx)
mov    %r10,%rax
leaveq 
retq   
lea    0x421fc(%rip),%r8        # 51717 <module.19+0x18b>
xor    %r10d,%r10d
lea    0x421c2(%rip),%rdx        # 516e7 <module.19+0x15b>
mov    0x20(%rax),%r9
mov    %r10,%rax
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
movzbl 0x1b(%rax),%ecx
test   %cl,%cl
jne    f9cb <_TIFFVGetField+0x119b>
mov    (%rax),%ecx
cmp    $0x150,%ecx
je     f9fe <_TIFFVGetField+0x11ce>
mov    %rax,%rdi
mov    %r10,%rax
mov    0x8(%rdi),%ecx
cmp    $0x2,%ecx
je     fa43 <_TIFFVGetField+0x1213>
movswq 0x4(%rdi),%rdi
cmp    $0xffff,%di
je     fa43 <_TIFFVGetField+0x1213>
cmp    $0xfffd,%di
je     fa43 <_TIFFVGetField+0x1213>
cmp    $0xfffe,%di
je     fa43 <_TIFFVGetField+0x1213>
movslq 0x8(%rdx),%rdi
cmp    $0x1,%edi
jg     fa43 <_TIFFVGetField+0x1213>
mov    0x10(%rdx),%r8
cmp    $0x1,%edi
je     fa67 <_TIFFVGetField+0x1237>
mov    %rsi,%rcx
lea    0x42264(%rip),%rdi        # 5180c <module.19+0x280>
lea    0x41f5c(%rip),%rsi        # 5150b <module.10+0x76>
mov    $0x473,%edx
callq  8490 <__assert_fail@plt>
mov    0x10(%rdi),%rdx
mov    (%rdx,%rsi,1),%rdx
add    $0x8,%esi
mov    %esi,(%rdi)
mov    %cx,(%rdx)
leaveq 
retq   
cmp    $0xfe,%edx
jne    fa77 <_TIFFVGetField+0x1247>
mov    -0x8(%rbp),%rsi
movslq (%rsi),%rdx
cmp    $0x2f,%edx
jle    faa7 <_TIFFVGetField+0x1277>
mov    0x8(%rsi),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rsi)
mov    (%rcx),%rcx
jmpq   fab4 <_TIFFVGetField+0x1284>
cmp    $0x101,%edx
jne    ea7a <_TIFFVGetField+0x24a>
mov    -0x8(%rbp),%rsi
movslq (%rsi),%rdx
cmp    $0x2f,%edx
jle    fac2 <_TIFFVGetField+0x1292>
mov    0x8(%rsi),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rsi)
mov    (%rcx),%rcx
jmpq   facf <_TIFFVGetField+0x129f>
cmp    $0x103,%edx
jne    ea7a <_TIFFVGetField+0x24a>
mov    -0x8(%rbp),%rsi
movslq (%rsi),%rdx
cmp    $0x2f,%edx
jle    fadd <_TIFFVGetField+0x12ad>
mov    0x8(%rsi),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rsi)
mov    (%rcx),%rcx
jmpq   faea <_TIFFVGetField+0x12ba>
mov    0x10(%rsi),%rax
mov    (%rax,%rdx,1),%rcx
lea    0x8(%rdx),%eax
mov    %eax,(%rsi)
mov    -0x10(%rbp),%rax
movzwl 0x74(%rax),%eax
mov    %ax,(%rcx)
mov    %r10,%rax
leaveq 
retq   
cmp    $0x107,%edx
jne    ea7a <_TIFFVGetField+0x24a>
mov    -0x8(%rbp),%rsi
movslq (%rsi),%rdx
cmp    $0x2f,%edx
jle    fafa <_TIFFVGetField+0x12ca>
mov    0x8(%rsi),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rsi)
mov    (%rcx),%rcx
jmpq   fb07 <_TIFFVGetField+0x12d7>
mov    0x10(%rsi),%rax
mov    (%rax,%rdx,1),%rcx
lea    0x8(%rdx),%eax
mov    %eax,(%rsi)
mov    -0x10(%rbp),%rax
movzwl 0x7a(%rax),%eax
mov    %ax,(%rcx)
mov    %r10,%rax
leaveq 
retq   
mov    0x10(%rsi),%rax
mov    (%rax,%rdx,1),%rcx
lea    0x8(%rdx),%eax
mov    %eax,(%rsi)
mov    -0x10(%rbp),%rax
movzwl 0x7e(%rax),%eax
mov    %ax,(%rcx)
mov    %r10,%rax
leaveq 
retq   
mov    0x10(%rdx),%rax
mov    (%rax,%rcx,1),%rax
add    $0x8,%ecx
mov    %ecx,(%rdx)
mov    0xe8(%r15),%rcx
mov    %rcx,(%rax)
mov    $0x1,%eax
mov    -0x18(%rbp),%r15
leaveq 
retq   
cmp    $0x116,%edx
jne    ea7a <_TIFFVGetField+0x24a>
mov    -0x8(%rbp),%rsi
movslq (%rsi),%rdx
cmp    $0x2f,%edx
jle    fb17 <_TIFFVGetField+0x12e7>
mov    0x8(%rsi),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rsi)
mov    (%rcx),%rcx
jmpq   fb24 <_TIFFVGetField+0x12f4>
mov    0x10(%rsi),%rax
mov    (%rax,%rdx,1),%rcx
lea    0x8(%rdx),%eax
mov    %eax,(%rsi)
mov    -0x10(%rbp),%rax
movzwl 0x82(%rax),%eax
mov    %ax,(%rcx)
mov    %r10,%rax
leaveq 
retq   
mov    0x10(%rsi),%rax
mov    (%rax,%rdx,1),%rcx
lea    0x8(%rdx),%eax
mov    %eax,(%rsi)
mov    -0x10(%rbp),%rax
movzwl 0x8a(%rax),%eax
mov    %ax,(%rcx)
mov    %r10,%rax
leaveq 
retq   
mov    0x10(%rsi),%rax
mov    (%rax,%rdx,1),%rcx
lea    0x8(%rdx),%eax
mov    %eax,(%rsi)
mov    -0x10(%rbp),%rax
movss  0xa0(%rax),%xmm0
movss  %xmm0,(%rcx)
mov    %r10,%rax
leaveq 
retq   
mov    0x10(%rsi),%rax
mov    (%rax,%rdx,1),%rcx
lea    0x8(%rdx),%eax
mov    %eax,(%rsi)
mov    -0x10(%rbp),%rax
movzwl 0xaa(%rax),%eax
mov    %ax,(%rcx)
mov    %r10,%rax
leaveq 
retq   
cmp    $0x12d,%edx
jne    ea7a <_TIFFVGetField+0x24a>
mov    -0x8(%rbp),%rdi
movslq (%rdi),%rdx
cmp    $0x2f,%edx
jle    fb35 <_TIFFVGetField+0x1305>
mov    0x8(%rdi),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rdi)
mov    (%rcx),%rcx
jmpq   fb42 <_TIFFVGetField+0x1312>
mov    0x10(%rdi),%rax
mov    (%rax,%rdx,1),%rcx
lea    0x8(%rdx),%eax
mov    %eax,(%rdi)
mov    -0x10(%rbp),%rsi
movzwl 0xb4(%rsi),%eax
mov    %ax,(%rcx)
movslq (%rdi),%rdx
cmp    $0x2f,%edx
jle    fb6e <_TIFFVGetField+0x133e>
mov    0x8(%rdi),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rdi)
mov    (%rcx),%rcx
jmpq   fb7b <_TIFFVGetField+0x134b>
mov    0x10(%rdi),%rax
mov    (%rax,%rdx,1),%rcx
lea    0x8(%rdx),%eax
mov    %eax,(%rdi)
mov    -0x10(%rbp),%rsi
mov    0xb8(%rsi),%rax
mov    %rax,(%rcx)
movslq (%rdi),%rdx
cmp    $0x2f,%edx
jle    fb8a <_TIFFVGetField+0x135a>
mov    0x8(%rdi),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rdi)
mov    (%rcx),%rcx
jmpq   fb97 <_TIFFVGetField+0x1367>
mov    0x10(%rsi),%rax
mov    (%rax,%rdx,1),%rcx
lea    0x8(%rdx),%eax
mov    %eax,(%rsi)
mov    -0x10(%rbp),%rax
mov    0x64(%rax),%eax
mov    %eax,(%rcx)
mov    %r10,%rax
leaveq 
retq   
mov    0x10(%rdi),%rax
mov    (%rax,%rdx,1),%rcx
lea    0x8(%rdx),%eax
mov    %eax,(%rdi)
movzwl 0xd2(%rsi),%eax
mov    %ax,(%rcx)
mov    %r10,%rax
leaveq 
retq   
mov    0x10(%rsi),%rax
mov    (%rax,%rdx,1),%rcx
lea    0x8(%rdx),%eax
mov    %eax,(%rsi)
mov    -0x10(%rbp),%rax
movzwl 0x76(%rax),%eax
mov    %ax,(%rcx)
mov    %r10,%rax
leaveq 
retq   
mov    0x10(%rdi),%rax
mov    (%rax,%rdx,1),%rcx
lea    0x8(%rdx),%eax
mov    %eax,(%rdi)
mov    0xd8(%rsi),%rax
mov    %rax,(%rcx)
mov    %r10,%rax
leaveq 
retq   
mov    0x90(%rsi),%rdx
movzwl %cx,%eax
movsd  (%rdx,%rax,8),%xmm1
ucomisd %xmm0,%xmm1
jp     f8e7 <_TIFFVGetField+0x10b7>
jae    f8e7 <_TIFFVGetField+0x10b7>
movapd %xmm1,%xmm0
add    $0x1,%ecx
movzwl 0x82(%rsi),%eax
cmp    %cx,%ax
ja     f8cc <_TIFFVGetField+0x109c>
mov    -0x8(%rbp),%rdx
movslq (%rdx),%rax
cmp    $0x2f,%eax
jle    fbc1 <_TIFFVGetField+0x1391>
mov    0x8(%rdx),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rdx)
mov    (%rcx),%rcx
jmpq   fbce <_TIFFVGetField+0x139e>
mov    0x98(%rsi),%rdx
movzwl %cx,%eax
movsd  (%rdx,%rax,8),%xmm1
ucomisd %xmm0,%xmm1
jbe    f933 <_TIFFVGetField+0x1103>
movapd %xmm1,%xmm0
add    $0x1,%ecx
movzwl 0x82(%rsi),%eax
cmp    %cx,%ax
ja     f91a <_TIFFVGetField+0x10ea>
mov    -0x8(%rbp),%rdx
movslq (%rdx),%rax
cmp    $0x2f,%eax
jle    fbd7 <_TIFFVGetField+0x13a7>
mov    0x8(%rdx),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rdx)
mov    (%rcx),%rcx
jmpq   fbe4 <_TIFFVGetField+0x13b4>
mov    0xd8(%rdx),%rax
movzwl (%rax),%eax
cmp    $0x1,%ax
je     fbed <_TIFFVGetField+0x13bd>
xor    %edx,%edx
jmpq   f4b8 <_TIFFVGetField+0xc88>
cmp    $0x2,%ax
je     fbf5 <_TIFFVGetField+0x13c5>
mov    %r10,%rax
leaveq 
retq   
mov    0x10(%rdx),%rax
mov    (%rax,%rcx,1),%rax
add    $0x8,%ecx
mov    %ecx,(%rdx)
movw   $0x2,(%rax)
mov    %r10,%rax
leaveq 
retq   
mov    -0x8(%rbp),%rdx
movslq (%rdx),%rcx
cmp    $0x2f,%ecx
jle    fc19 <_TIFFVGetField+0x13e9>
mov    0x8(%rdx),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rdx)
mov    (%rcx),%rax
jmpq   fc26 <_TIFFVGetField+0x13f6>
movswq 0x4(%rax),%rax
cmp    $0xfffd,%ax
jne    fc30 <_TIFFVGetField+0x1400>
mov    -0x8(%rbp),%rcx
movslq (%rcx),%rdi
cmp    $0x2f,%edi
jle    fc54 <_TIFFVGetField+0x1424>
mov    0x8(%rcx),%rsi
lea    0x8(%rsi),%rax
mov    %rax,0x8(%rcx)
mov    (%rsi),%rsi
jmpq   fc61 <_TIFFVGetField+0x1431>
mov    0x20(%rax),%rdi
lea    0x41dfa(%rip),%rsi        # 51803 <module.19+0x277>
mov    %r15,-0x18(%rbp)
mov    %r14,-0x10(%rbp)
mov    %rax,%r14
mov    %rdx,%r15
callq  8660 <strcmp@plt>
test   %eax,%eax
je     fc86 <_TIFFVGetField+0x1456>
mov    %r15,%rdx
mov    %r14,%rdi
lea    0x41e6c(%rip),%rsi        # 5189d <module.19+0x311>
mov    -0x10(%rbp),%r14
mov    $0x1,%eax
mov    -0x18(%rbp),%r15
jmpq   f555 <_TIFFVGetField+0xd25>
mov    -0x8(%rbp),%rdi
movslq (%rdi),%rsi
cmp    $0x2f,%esi
jle    fcaa <_TIFFVGetField+0x147a>
mov    0x8(%rdi),%rsi
lea    0x8(%rsi),%rcx
mov    %rcx,0x8(%rdi)
mov    (%rsi),%rcx
jmpq   fcb7 <_TIFFVGetField+0x1487>
add    $0xffffffff,%ecx
cmp    $0x11,%ecx
jbe    fcc0 <_TIFFVGetField+0x1490>
xor    %eax,%eax
leaveq 
retq   
cmp    $0x100,%edx
jne    ea7a <_TIFFVGetField+0x24a>
mov    -0x8(%rbp),%rsi
movslq (%rsi),%rdx
cmp    $0x2f,%edx
jle    fcd4 <_TIFFVGetField+0x14a4>
mov    0x8(%rsi),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rsi)
mov    (%rcx),%rcx
jmpq   fce1 <_TIFFVGetField+0x14b1>
mov    0x10(%rsi),%rax
mov    (%rax,%rdx,1),%rcx
lea    0x8(%rdx),%eax
mov    %eax,(%rsi)
mov    -0x10(%rbp),%rax
mov    0x70(%rax),%eax
mov    %eax,(%rcx)
mov    %r10,%rax
leaveq 
retq   
mov    0x10(%rsi),%rax
mov    (%rax,%rdx,1),%rcx
lea    0x8(%rdx),%eax
mov    %eax,(%rsi)
mov    -0x10(%rbp),%rax
mov    0x5c(%rax),%eax
mov    %eax,(%rcx)
mov    %r10,%rax
leaveq 
retq   
mov    0x10(%rsi),%rax
mov    (%rax,%rdx,1),%rcx
lea    0x8(%rdx),%eax
mov    %eax,(%rsi)
mov    -0x10(%rbp),%rax
movzwl 0x78(%rax),%eax
mov    %ax,(%rcx)
mov    %r10,%rax
leaveq 
retq   
mov    0x10(%rsi),%rax
mov    (%rax,%rdx,1),%rcx
lea    0x8(%rdx),%eax
mov    %eax,(%rsi)
mov    -0x10(%rbp),%rax
movzwl 0x7c(%rax),%eax
mov    %ax,(%rcx)
mov    %r10,%rax
leaveq 
retq   
mov    0x10(%rsi),%rax
mov    (%rax,%rdx,1),%rcx
lea    0x8(%rdx),%eax
mov    %eax,(%rsi)
mov    -0x10(%rbp),%rax
mov    0x84(%rax),%eax
mov    %eax,(%rcx)
mov    %r10,%rax
leaveq 
retq   
mov    0x10(%rdi),%rax
mov    (%rax,%rdx,1),%rcx
lea    0x8(%rdx),%eax
mov    %eax,(%rdi)
mov    -0x10(%rbp),%rsi
mov    0x110(%rsi),%rax
mov    %rax,(%rcx)
movzwl 0x82(%rsi),%ecx
movzwl 0xd4(%rsi),%eax
sub    %eax,%ecx
cmp    $0x1,%ecx
jg     fcef <_TIFFVGetField+0x14bf>
mov    %r10,%rax
leaveq 
retq   
mov    0x10(%rdi),%rax
mov    (%rax,%rdx,1),%rcx
lea    0x8(%rdx),%eax
mov    %eax,(%rdi)
movzwl 0xb6(%rsi),%eax
mov    %ax,(%rcx)
mov    %r10,%rax
leaveq 
retq   
mov    0x10(%rdi),%rax
mov    (%rax,%rdx,1),%rcx
lea    0x8(%rdx),%eax
mov    %eax,(%rdi)
mov    0xc0(%rsi),%rax
mov    %rax,(%rcx)
movslq (%rdi),%rdx
cmp    $0x2f,%edx
jle    fd0f <_TIFFVGetField+0x14df>
mov    0x8(%rdi),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rdi)
mov    (%rcx),%rcx
jmpq   fd1c <_TIFFVGetField+0x14ec>
mov    0x10(%rdx),%rcx
mov    (%rcx,%rax,1),%rcx
add    $0x8,%eax
mov    %eax,(%rdx)
movsd  %xmm0,(%rcx)
mov    %r10,%rax
leaveq 
retq   
mov    0x10(%rdx),%rcx
mov    (%rcx,%rax,1),%rcx
add    $0x8,%eax
mov    %eax,(%rdx)
movsd  %xmm0,(%rcx)
mov    %r10,%rax
leaveq 
retq   
mov    %r10,%rdx
jmpq   f4b8 <_TIFFVGetField+0xc88>
mov    -0x8(%rbp),%rdx
movslq (%rdx),%rcx
cmp    $0x2f,%ecx
jle    fd2b <_TIFFVGetField+0x14fb>
mov    0x8(%rdx),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rdx)
mov    (%rcx),%rax
jmpq   fd38 <_TIFFVGetField+0x1508>
mov    0x10(%rdx),%rax
mov    (%rax,%rcx,1),%rax
add    $0x8,%ecx
mov    %ecx,(%rdx)
movw   $0x0,(%rax)
mov    %r10,%rax
leaveq 
retq   
mov    -0x8(%rbp),%rcx
movslq (%rcx),%rdi
cmp    $0x2f,%edi
jle    fd42 <_TIFFVGetField+0x1512>
mov    0x8(%rcx),%rsi
lea    0x8(%rsi),%rax
mov    %rax,0x8(%rcx)
mov    (%rsi),%rsi
jmpq   fd4f <_TIFFVGetField+0x151f>
mov    0x10(%rcx),%rax
mov    (%rax,%rdi,1),%rsi
lea    0x8(%rdi),%eax
mov    %eax,(%rcx)
mov    0x8(%rdx),%eax
mov    %eax,(%rsi)
movslq (%rcx),%rdi
cmp    $0x2f,%edi
jle    fd5b <_TIFFVGetField+0x152b>
mov    0x8(%rcx),%rsi
lea    0x8(%rsi),%rax
mov    %rax,0x8(%rcx)
mov    (%rsi),%rsi
jmpq   fd68 <_TIFFVGetField+0x1538>
mov    -0x8(%rbp),%rdx
movslq (%rdx),%rcx
cmp    $0x2f,%ecx
jle    fd74 <_TIFFVGetField+0x1544>
mov    0x8(%rdx),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rdx)
mov    (%rcx),%rax
jmpq   fd81 <_TIFFVGetField+0x1551>
mov    0x10(%rdi),%rcx
mov    (%rcx,%rsi,1),%rcx
add    $0x8,%esi
mov    %esi,(%rdi)
mov    0x10(%rdx),%rdx
mov    %rdx,(%rcx)
leaveq 
retq   
lea    0x41731(%rip),%rdx        # 513f8 <_fini+0x414>
movslq (%rdx,%rcx,4),%rcx
add    %rdx,%rcx
jmpq   *%rcx
xor    %eax,%eax
leaveq 
retq   
mov    0x10(%rsi),%rax
mov    (%rax,%rdx,1),%rcx
lea    0x8(%rdx),%eax
mov    %eax,(%rsi)
mov    -0x10(%rbp),%rax
mov    0x58(%rax),%eax
mov    %eax,(%rcx)
mov    %r10,%rax
leaveq 
retq   
movslq (%rdi),%rdx
cmp    $0x2f,%edx
jle    ff13 <_TIFFVGetField+0x16e3>
mov    0x8(%rdi),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rdi)
mov    (%rcx),%rcx
jmpq   ff20 <_TIFFVGetField+0x16f0>
mov    0x10(%rdi),%rax
mov    (%rax,%rdx,1),%rcx
lea    0x8(%rdx),%eax
mov    %eax,(%rdi)
mov    0xc8(%rsi),%rax
mov    %rax,(%rcx)
mov    %r10,%rax
leaveq 
retq   
mov    0x10(%rdx),%rax
mov    (%rax,%rcx,1),%rax
add    $0x8,%ecx
mov    %ecx,(%rdx)
movw   $0x1,(%rax)
mov    %r10,%rax
leaveq 
retq   
mov    0x10(%rcx),%rax
mov    (%rax,%rdi,1),%rsi
lea    0x8(%rdi),%eax
mov    %eax,(%rcx)
movzwl 0x8(%rdx),%eax
mov    %ax,(%rsi)
jmpq   fc66 <_TIFFVGetField+0x1436>
mov    0x10(%rcx),%rax
mov    (%rax,%rdi,1),%rsi
lea    0x8(%rdi),%eax
mov    %eax,(%rcx)
mov    0x10(%rdx),%rax
mov    %rax,(%rsi)
mov    %r10,%rax
leaveq 
retq   
mov    0x10(%rdx),%rax
mov    (%rax,%rcx,1),%rax
add    $0x8,%ecx
mov    %ecx,(%rdx)
mov    0x10(%r15),%rcx
movzwl (%rcx),%ecx
mov    %cx,(%rax)
movslq (%rdx),%rcx
cmp    $0x2f,%ecx
jle    ff4a <_TIFFVGetField+0x171a>
mov    0x8(%rdx),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rdx)
mov    (%rcx),%rax
jmpq   ff57 <_TIFFVGetField+0x1727>
mov    -0x8(%rbp),%rsi
movslq (%rsi),%rdx
cmp    $0x2f,%edx
jle    ff71 <_TIFFVGetField+0x1741>
mov    0x8(%rsi),%rdx
lea    0x8(%rdx),%rcx
mov    %rcx,0x8(%rsi)
mov    (%rdx),%rcx
jmpq   ff7e <_TIFFVGetField+0x174e>
mov    -0x8(%rbp),%rsi
movslq (%rsi),%rdx
cmp    $0x2f,%edx
jle    ff86 <_TIFFVGetField+0x1756>
mov    0x8(%rsi),%rdx
lea    0x8(%rdx),%rcx
mov    %rcx,0x8(%rsi)
mov    (%rdx),%rcx
jmpq   ff93 <_TIFFVGetField+0x1763>
mov    -0x8(%rbp),%rsi
movslq (%rsi),%rdx
cmp    $0x2f,%edx
jle    ff9b <_TIFFVGetField+0x176b>
mov    0x8(%rsi),%rdx
lea    0x8(%rdx),%rcx
mov    %rcx,0x8(%rsi)
mov    (%rdx),%rcx
jmpq   ffa8 <_TIFFVGetField+0x1778>
mov    -0x8(%rbp),%rsi
movslq (%rsi),%rdx
cmp    $0x2f,%edx
jle    ffb1 <_TIFFVGetField+0x1781>
mov    0x8(%rsi),%rdx
lea    0x8(%rdx),%rcx
mov    %rcx,0x8(%rsi)
mov    (%rdx),%rcx
jmpq   ffbe <_TIFFVGetField+0x178e>
mov    -0x8(%rbp),%rsi
movslq (%rsi),%rdx
cmp    $0x2f,%edx
jle    ffc7 <_TIFFVGetField+0x1797>
mov    0x8(%rsi),%rdx
lea    0x8(%rdx),%rcx
mov    %rcx,0x8(%rsi)
mov    (%rdx),%rcx
jmpq   ffd4 <_TIFFVGetField+0x17a4>
mov    -0x8(%rbp),%rsi
movslq (%rsi),%rdx
cmp    $0x2f,%edx
jle    ffdb <_TIFFVGetField+0x17ab>
mov    0x8(%rsi),%rdx
lea    0x8(%rdx),%rcx
mov    %rcx,0x8(%rsi)
mov    (%rdx),%rcx
jmpq   ffe8 <_TIFFVGetField+0x17b8>
mov    -0x8(%rbp),%rsi
movslq (%rsi),%rdx
cmp    $0x2f,%edx
jle    ffef <_TIFFVGetField+0x17bf>
mov    0x8(%rsi),%rdx
lea    0x8(%rdx),%rcx
mov    %rcx,0x8(%rsi)
mov    (%rdx),%rcx
jmpq   fffc <_TIFFVGetField+0x17cc>
mov    -0x8(%rbp),%rsi
movslq (%rsi),%rdx
cmp    $0x2f,%edx
jle    10004 <_TIFFVGetField+0x17d4>
mov    0x8(%rsi),%rdx
lea    0x8(%rdx),%rcx
mov    %rcx,0x8(%rsi)
mov    (%rdx),%rcx
jmpq   10011 <_TIFFVGetField+0x17e1>
mov    -0x8(%rbp),%rsi
movslq (%rsi),%rdx
cmp    $0x2f,%edx
jle    10019 <_TIFFVGetField+0x17e9>
mov    0x8(%rsi),%rdx
lea    0x8(%rdx),%rcx
mov    %rcx,0x8(%rsi)
mov    (%rdx),%rcx
jmpq   10026 <_TIFFVGetField+0x17f6>
mov    -0x8(%rbp),%rsi
movslq (%rsi),%rdx
cmp    $0x2f,%edx
jle    10031 <_TIFFVGetField+0x1801>
mov    0x8(%rsi),%rdx
lea    0x8(%rdx),%rcx
mov    %rcx,0x8(%rsi)
mov    (%rdx),%rcx
jmpq   1003e <_TIFFVGetField+0x180e>
mov    0x10(%rdi),%rax
mov    (%rax,%rdx,1),%rcx
lea    0x8(%rdx),%eax
mov    %eax,(%rdi)
mov    0x118(%rsi),%rax
mov    %rax,(%rcx)
movslq (%rdi),%rdx
cmp    $0x2f,%edx
jle    10049 <_TIFFVGetField+0x1819>
mov    0x8(%rdi),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rdi)
mov    (%rcx),%rcx
jmpq   10056 <_TIFFVGetField+0x1826>
mov    0x10(%rdx),%rax
mov    (%rax,%rcx,1),%rax
add    $0x8,%ecx
mov    %ecx,(%rdx)
mov    0x10(%r15),%rcx
movzwl 0x2(%rcx),%ecx
mov    %cx,(%rax)
mov    -0x10(%rbp),%r14
mov    $0x1,%eax
mov    -0x18(%rbp),%r15
leaveq 
retq   
mov    0x10(%rsi),%rcx
mov    (%rcx,%rdx,1),%rcx
add    $0x8,%edx
mov    %edx,(%rsi)
movzbl (%r8),%edx
mov    %dl,(%rcx)
leaveq 
retq   
mov    0x10(%rsi),%rcx
mov    (%rcx,%rdx,1),%rcx
add    $0x8,%edx
mov    %edx,(%rsi)
movsbq (%r8),%rdx
mov    %dl,(%rcx)
leaveq 
retq   
mov    0x10(%rsi),%rcx
mov    (%rcx,%rdx,1),%rcx
add    $0x8,%edx
mov    %edx,(%rsi)
movzwl (%r8),%edx
mov    %dx,(%rcx)
leaveq 
retq   
mov    0x10(%rsi),%rcx
mov    (%rcx,%rdx,1),%rcx
add    $0x8,%edx
mov    %edx,(%rsi)
movswq (%r8),%rdx
mov    %dx,(%rcx)
leaveq 
retq   
mov    0x10(%rsi),%rcx
mov    (%rcx,%rdx,1),%rcx
add    $0x8,%edx
mov    %edx,(%rsi)
mov    (%r8),%edx
mov    %edx,(%rcx)
leaveq 
retq   
mov    0x10(%rsi),%rcx
mov    (%rcx,%rdx,1),%rcx
add    $0x8,%edx
mov    %edx,(%rsi)
movslq (%r8),%rdx
mov    %edx,(%rcx)
leaveq 
retq   
mov    0x10(%rsi),%rcx
mov    (%rcx,%rdx,1),%rcx
add    $0x8,%edx
mov    %edx,(%rsi)
mov    (%r8),%rdx
mov    %rdx,(%rcx)
leaveq 
retq   
mov    0x10(%rsi),%rcx
mov    (%rcx,%rdx,1),%rcx
add    $0x8,%edx
mov    %edx,(%rsi)
mov    (%r8),%rdx
mov    %rdx,(%rcx)
leaveq 
retq   
mov    0x10(%rsi),%rcx
mov    (%rcx,%rdx,1),%rcx
add    $0x8,%edx
mov    %edx,(%rsi)
movss  (%r8),%xmm0
movss  %xmm0,(%rcx)
leaveq 
retq   
mov    0x10(%rsi),%rcx
mov    (%rcx,%rdx,1),%rcx
add    $0x8,%edx
mov    %edx,(%rsi)
movsd  (%r8),%xmm0
movsd  %xmm0,(%rcx)
leaveq 
retq   
mov    0x10(%rdi),%rax
mov    (%rax,%rdx,1),%rcx
lea    0x8(%rdx),%eax
mov    %eax,(%rdi)
mov    0x120(%rsi),%rax
mov    %rax,(%rcx)
mov    %r10,%rax
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)

0000000000010070 <TIFFAdvanceDirectory>:
push   %rbp
mov    %rsp,%rbp
sub    $0x60,%rsp
lea    0x41853(%rip),%r9        # 518d2 <module.43>
lea    0x41861(%rip),%r8        # 518e7 <module.43+0x15>
mov    0x10(%rdi),%eax
mov    %rax,%rcx
and    $0x800,%ecx
test   %ecx,%ecx
jne    100f2 <TIFFAdvanceDirectory+0x82>
and    $0x80000,%eax
test   %eax,%eax
jne    10215 <TIFFAdvanceDirectory+0x1a5>
mov    (%rsi),%rcx
mov    %rdi,%rax
mov    %r15,-0x30(%rbp)
mov    %rdx,-0x38(%rbp)
mov    %rsi,-0x28(%rbp)
mov    %rcx,%rsi
mov    %rdi,%r15
mov    %rax,%rdi
callq  82f0 <_TIFFSeekOK@plt>
test   %eax,%eax
jne    10264 <TIFFAdvanceDirectory+0x1f4>
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
mov    (%r15),%rcx
lea    0x4186d(%rip),%rdx        # 5194b <module.43+0x79>
lea    0x417ed(%rip),%rsi        # 518d2 <module.43>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x30(%rbp),%r15
leaveq 
retq   
mov    (%rsi),%r11
and    $0x80000,%eax
test   %eax,%eax
jne    102d1 <TIFFAdvanceDirectory+0x261>
lea    0x2(%r11),%rcx
cmp    %r11,%rcx
jl     103e8 <TIFFAdvanceDirectory+0x378>
cmp    $0x1,%rcx
jle    103e8 <TIFFAdvanceDirectory+0x378>
cmp    0x3a0(%rdi),%rcx
jg     103e8 <TIFFAdvanceDirectory+0x378>
mov    %r11,%r8
add    0x398(%rdi),%r8
lea    -0x56(%rbp),%rax
mov    %r15,-0x20(%rbp)
mov    %rdx,-0x38(%rbp)
mov    %rsi,-0x8(%rbp)
mov    %r14,-0x18(%rbp)
mov    %r13,-0x10(%rbp)
mov    %r8,%rsi
mov    %rdi,%r13
mov    %rax,%rdi
mov    %r11,%r14
mov    %rcx,%r15
mov    $0x2,%edx
callq  8790 <_TIFFmemcpy@plt>
mov    0x10(%r13),%eax
and    $0x80,%eax
test   %eax,%eax
je     10177 <TIFFAdvanceDirectory+0x107>
lea    -0x56(%rbp),%rdi
callq  87c0 <TIFFSwabShort@plt>
movzwl -0x56(%rbp),%eax
lea    (%rax,%rax,2),%eax
shl    $0x2,%eax
movslq %eax,%rax
lea    0x2(%r14,%rax,1),%rsi
cmp    %rsi,%r15
jg     10412 <TIFFAdvanceDirectory+0x3a2>
cmp    %rax,%rsi
jl     10412 <TIFFAdvanceDirectory+0x3a2>
lea    0x4(%rsi),%rax
cmp    %rax,%rsi
jg     10412 <TIFFAdvanceDirectory+0x3a2>
cmp    $0x3,%rax
jle    10412 <TIFFAdvanceDirectory+0x3a2>
cmp    0x3a0(%r13),%rax
jg     10412 <TIFFAdvanceDirectory+0x3a2>
mov    -0x38(%rbp),%rax
test   %rax,%rax
je     101cb <TIFFAdvanceDirectory+0x15b>
mov    %rsi,(%rax)
add    0x398(%r13),%rsi
lea    -0x54(%rbp),%r14
mov    %r14,%rdi
mov    $0x4,%edx
callq  8790 <_TIFFmemcpy@plt>
mov    0x10(%r13),%eax
and    $0x80,%eax
test   %eax,%eax
je     101f8 <TIFFAdvanceDirectory+0x188>
mov    %r14,%rdi
callq  8480 <TIFFSwabLong@plt>
mov    -0x54(%rbp),%eax
mov    -0x8(%rbp),%rcx
mov    %rax,(%rcx)
mov    -0x10(%rbp),%r13
mov    -0x18(%rbp),%r14
mov    -0x20(%rbp),%r15
mov    $0x1,%eax
leaveq 
retq   
mov    (%rsi),%rcx
mov    %rdi,%rax
mov    %r15,-0x28(%rbp)
mov    %rdx,-0x38(%rbp)
mov    %rsi,-0x30(%rbp)
mov    %rcx,%rsi
mov    %rdi,%r15
mov    %rax,%rdi
callq  82f0 <_TIFFSeekOK@plt>
test   %eax,%eax
jne    1043e <TIFFAdvanceDirectory+0x3ce>
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
mov    (%r15),%rcx
lea    0x416fb(%rip),%rdx        # 5194b <module.43+0x79>
lea    0x4167b(%rip),%rsi        # 518d2 <module.43>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x28(%rbp),%r15
leaveq 
retq   
mov    0x3c0(%r15),%rax
mov    0x3b8(%r15),%rdi
lea    -0x46(%rbp),%rsi
mov    $0x2,%edx
callq  *%rax
cmp    $0x2,%rax
jne    100cb <TIFFAdvanceDirectory+0x5b>
mov    0x10(%r15),%eax
and    $0x80,%eax
test   %eax,%eax
je     1029d <TIFFAdvanceDirectory+0x22d>
lea    -0x46(%rbp),%rdi
callq  87c0 <TIFFSwabShort@plt>
mov    -0x38(%rbp),%r8
test   %r8,%r8
jne    104bb <TIFFAdvanceDirectory+0x44b>
mov    0x3d0(%r15),%rcx
mov    0x3b8(%r15),%rdi
movzwl -0x46(%rbp),%eax
lea    (%rax,%rax,2),%eax
shl    $0x2,%eax
movslq %eax,%rsi
mov    $0x1,%edx
callq  *%rcx
jmpq   104eb <TIFFAdvanceDirectory+0x47b>
lea    0x8(%r11),%r10
cmp    %r10,%r11
jg     10535 <TIFFAdvanceDirectory+0x4c5>
cmp    $0x7,%r10
jle    10535 <TIFFAdvanceDirectory+0x4c5>
cmp    0x3a0(%rdi),%r10
jg     10535 <TIFFAdvanceDirectory+0x4c5>
mov    %r11,%r8
add    0x398(%rdi),%r8
lea    -0x50(%rbp),%rax
mov    $0x8,%ecx
mov    %r15,-0x18(%rbp)
mov    %rdx,-0x38(%rbp)
mov    %rsi,-0x20(%rbp)
mov    %r14,-0x10(%rbp)
mov    %r13,-0x8(%rbp)
mov    %rcx,%rdx
mov    %r8,%rsi
mov    %r11,%r13
mov    %rdi,%r14
mov    %rax,%rdi
mov    %r10,%r15
callq  8790 <_TIFFmemcpy@plt>
mov    0x10(%r14),%eax
and    $0x80,%eax
test   %eax,%eax
je     10349 <TIFFAdvanceDirectory+0x2d9>
lea    -0x50(%rbp),%rdi
callq  8730 <TIFFSwabLong8@plt>
mov    -0x50(%rbp),%rax
cmp    $0xffff,%rax
ja     1054d <TIFFAdvanceDirectory+0x4dd>
movzwl %ax,%eax
lea    (%rax,%rax,4),%eax
shl    $0x2,%eax
movslq %eax,%rax
lea    0x8(%r13,%rax,1),%rsi
cmp    %rsi,%r15
jg     10579 <TIFFAdvanceDirectory+0x509>
cmp    %rax,%rsi
jl     10579 <TIFFAdvanceDirectory+0x509>
lea    0x8(%rsi),%rax
cmp    %rax,%rsi
jg     10579 <TIFFAdvanceDirectory+0x509>
cmp    $0x7,%rax
jle    10579 <TIFFAdvanceDirectory+0x509>
cmp    0x3a0(%r14),%rax
jg     10579 <TIFFAdvanceDirectory+0x509>
mov    -0x38(%rbp),%rax
test   %rax,%rax
je     103ac <TIFFAdvanceDirectory+0x33c>
mov    %rsi,(%rax)
add    0x398(%r14),%rsi
mov    -0x20(%rbp),%r13
mov    %r13,%rdi
mov    $0x8,%edx
callq  8790 <_TIFFmemcpy@plt>
mov    0x10(%r14),%eax
and    $0x80,%eax
test   %eax,%eax
jne    105a5 <TIFFAdvanceDirectory+0x535>
mov    -0x8(%rbp),%r13
mov    -0x10(%rbp),%r14
mov    -0x18(%rbp),%r15
mov    $0x1,%eax
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
mov    %r15,-0x38(%rbp)
mov    %r8,%rdx
mov    %rsi,%r15
mov    %r9,%rsi
callq  8a00 <TIFFErrorExt@plt>
movq   $0x0,(%r15)
xor    %eax,%eax
mov    -0x38(%rbp),%r15
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%r13),%rdi
lea    0x414e4(%rip),%rdx        # 51906 <module.43+0x34>
lea    0x414a9(%rip),%rsi        # 518d2 <module.43>
callq  8a00 <TIFFErrorExt@plt>
mov    -0x10(%rbp),%r13
mov    -0x18(%rbp),%r14
xor    %eax,%eax
mov    -0x20(%rbp),%r15
leaveq 
retq   
mov    0x3c0(%r15),%rax
mov    0x3b8(%r15),%rdi
lea    -0x40(%rbp),%rsi
mov    $0x8,%edx
callq  *%rax
cmp    $0x8,%rax
jne    1023d <TIFFAdvanceDirectory+0x1cd>
mov    0x10(%r15),%eax
and    $0x80,%eax
test   %eax,%eax
je     10477 <TIFFAdvanceDirectory+0x407>
lea    -0x40(%rbp),%rdi
callq  8730 <TIFFSwabLong8@plt>
mov    -0x40(%rbp),%rcx
cmp    $0xffff,%rcx
ja     105c0 <TIFFAdvanceDirectory+0x550>
mov    -0x38(%rbp),%r8
test   %r8,%r8
jne    105e4 <TIFFAdvanceDirectory+0x574>
mov    0x3d0(%r15),%rax
mov    0x3b8(%r15),%rdi
movzwl %cx,%ecx
lea    (%rcx,%rcx,4),%ecx
shl    $0x2,%ecx
movslq %ecx,%rsi
mov    $0x1,%edx
callq  *%rax
jmpq   10613 <TIFFAdvanceDirectory+0x5a3>
mov    0x3d0(%r15),%rax
mov    0x3b8(%r15),%rdi
movzwl -0x46(%rbp),%ecx
lea    (%rcx,%rcx,2),%ecx
shl    $0x2,%ecx
movslq %ecx,%rsi
mov    $0x1,%edx
mov    %r14,-0x38(%rbp)
mov    %r8,%r14
callq  *%rax
mov    %rax,(%r14)
mov    -0x38(%rbp),%r14
mov    0x3c0(%r15),%rax
mov    0x3b8(%r15),%rdi
lea    -0x44(%rbp),%rsi
mov    $0x4,%edx
callq  *%rax
cmp    $0x4,%rax
je     10659 <TIFFAdvanceDirectory+0x5e9>
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
mov    (%r15),%rcx
lea    0x413b1(%rip),%rsi        # 518d2 <module.43>
lea    0x41446(%rip),%rdx        # 5196e <module.43+0x9c>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x30(%rbp),%r15
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
mov    %r8,%rdx
mov    %r9,%rsi
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%r14),%rdi
lea    0x413c7(%rip),%rdx        # 51924 <module.43+0x52>
lea    0x4136e(%rip),%rsi        # 518d2 <module.43>
callq  8a00 <TIFFErrorExt@plt>
mov    -0x8(%rbp),%r13
mov    -0x10(%rbp),%r14
xor    %eax,%eax
mov    -0x18(%rbp),%r15
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%r14),%rdi
lea    0x4137d(%rip),%rdx        # 51906 <module.43+0x34>
lea    0x41342(%rip),%rsi        # 518d2 <module.43>
callq  8a00 <TIFFErrorExt@plt>
mov    -0x8(%rbp),%r13
mov    -0x10(%rbp),%r14
xor    %eax,%eax
mov    -0x18(%rbp),%r15
leaveq 
retq   
mov    %r13,%rdi
callq  8730 <TIFFSwabLong8@plt>
mov    -0x8(%rbp),%r13
mov    -0x10(%rbp),%r14
mov    -0x18(%rbp),%r15
mov    $0x1,%eax
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
lea    0x41302(%rip),%rsi        # 518d2 <module.43>
lea    0x41310(%rip),%rdx        # 518e7 <module.43+0x15>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x28(%rbp),%r15
leaveq 
retq   
mov    0x3d0(%r15),%rax
mov    0x3b8(%r15),%rdi
movzwl %cx,%ecx
lea    (%rcx,%rcx,4),%ecx
shl    $0x2,%ecx
movslq %ecx,%rsi
mov    $0x1,%edx
mov    %r14,-0x38(%rbp)
mov    %r8,%r14
callq  *%rax
mov    %rax,(%r14)
mov    -0x38(%rbp),%r14
mov    0x3c0(%r15),%rax
mov    0x3b8(%r15),%rdi
mov    -0x30(%rbp),%rsi
mov    $0x8,%edx
callq  *%rax
cmp    $0x8,%rax
je     10684 <TIFFAdvanceDirectory+0x614>
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
mov    (%r15),%rcx
lea    0x4128d(%rip),%rsi        # 518d2 <module.43>
lea    0x41322(%rip),%rdx        # 5196e <module.43+0x9c>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x28(%rbp),%r15
leaveq 
retq   
mov    0x10(%r15),%eax
and    $0x80,%eax
test   %eax,%eax
je     1066f <TIFFAdvanceDirectory+0x5ff>
lea    -0x44(%rbp),%rdi
callq  8480 <TIFFSwabLong@plt>
mov    -0x44(%rbp),%eax
mov    -0x28(%rbp),%rcx
mov    %rax,(%rcx)
mov    -0x30(%rbp),%r15
mov    $0x1,%eax
leaveq 
retq   
mov    0x10(%r15),%eax
and    $0x80,%eax
test   %eax,%eax
jne    1069c <TIFFAdvanceDirectory+0x62c>
mov    -0x28(%rbp),%r15
mov    $0x1,%eax
leaveq 
retq   
mov    -0x30(%rbp),%rdi
callq  8730 <TIFFSwabLong8@plt>
mov    -0x28(%rbp),%r15
mov    $0x1,%eax
leaveq 
retq   

00000000000106b0 <TIFFFindField>:
push   %rbp
mov    %rsp,%rbp
sub    $0x40,%rsp
lea    -0x40(%rbp),%r8
mov    %r8,-0x10(%rbp)
movq   $0x0,(%r8)
movq   $0x0,0x8(%r8)
movq   $0x0,0x10(%r8)
movq   $0x0,0x18(%r8)
movq   $0x0,0x20(%r8)
movq   $0x0,0x28(%r8)
mov    0x400(%rdi),%rax
test   %rax,%rax
jne    1070b <TIFFFindField+0x5b>
xor    %eax,%eax
mov    0x3f0(%rdi),%rcx
test   %rcx,%rcx
jne    10723 <TIFFFindField+0x73>
leaveq 
retq   
mov    (%rax),%ecx
cmp    %esi,%ecx
jne    106fb <TIFFFindField+0x4b>
test   %edx,%edx
je     1071a <TIFFFindField+0x6a>
cmp    0x8(%rax),%edx
jne    106fb <TIFFFindField+0x4b>
mov    0x400(%rdi),%rax
leaveq 
retq   
mov    %esi,(%r8)
mov    %edx,0x8(%r8)
lea    -0x10(%rbp),%rax
mov    0x3f0(%rdi),%rsi
mov    0x3f8(%rdi),%rdx
mov    $0x8,%ecx
lea    0xc68(%rip),%r8        # 113b0 <tagCompare>
mov    %r15,-0x8(%rbp)
mov    %rdi,%r15
mov    %rax,%rdi
callq  8c20 <bsearch@plt>
test   %rax,%rax
jne    10760 <TIFFFindField+0xb0>
xor    %eax,%eax
jmp    10763 <TIFFFindField+0xb3>
mov    (%rax),%rax
mov    %rax,0x400(%r15)
mov    -0x8(%rbp),%r15
leaveq 
retq   

0000000000010770 <TIFFFieldWithTag>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %rdi,-0x10(%rbp)
mov    %rsi,-0x8(%rbp)
xor    %edx,%edx
callq  8680 <TIFFFindField@plt>
test   %rax,%rax
je     1078e <TIFFFieldWithTag+0x1e>
leaveq 
retq   
xor    %r8d,%r8d
mov    -0x10(%rbp),%rcx
mov    0x3b8(%rcx),%rdi
lea    0x41855(%rip),%rsi        # 51ff8 <module.43+0x726>
lea    0x4185f(%rip),%rdx        # 52009 <module.43+0x737>
mov    %r15,-0x10(%rbp)
mov    %rax,%r15
mov    %r8,%rax
mov    -0x8(%rbp),%rcx
callq  8a00 <TIFFErrorExt@plt>
mov    %r15,%rax
mov    -0x10(%rbp),%r15
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)

00000000000107d0 <TIFFFieldWithName>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %rdi,-0x10(%rbp)
mov    %rsi,-0x8(%rbp)
xor    %edx,%edx
callq  11430 <_TIFFFindFieldByName>
test   %rax,%rax
je     107ee <TIFFFieldWithName+0x1e>
leaveq 
retq   
xor    %r8d,%r8d
mov    -0x10(%rbp),%rcx
mov    0x3b8(%rcx),%rdi
lea    0x41827(%rip),%rsi        # 5202a <module.43+0x758>
lea    0x41832(%rip),%rdx        # 5203c <module.43+0x76a>
mov    %r15,-0x10(%rbp)
mov    %rax,%r15
mov    %r8,%rax
mov    -0x8(%rbp),%rcx
callq  8a00 <TIFFErrorExt@plt>
mov    %r15,%rax
mov    -0x10(%rbp),%r15
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)

0000000000010830 <TIFFFieldTag>:
push   %rbp
mov    %rsp,%rbp
mov    (%rdi),%eax
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

0000000000010840 <TIFFFieldName>:
push   %rbp
mov    %rsp,%rbp
mov    0x20(%rdi),%rax
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

0000000000010850 <TIFFFieldDataType>:
push   %rbp
mov    %rsp,%rbp
mov    0x8(%rdi),%eax
leaveq 
retq   
nopl   0x0(%rax)

0000000000010860 <TIFFFieldPassCount>:
push   %rbp
mov    %rsp,%rbp
movzbl 0x1b(%rdi),%eax
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

0000000000010870 <TIFFFieldReadCount>:
push   %rbp
mov    %rsp,%rbp
movswq 0x4(%rdi),%rax
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

0000000000010880 <TIFFFieldWriteCount>:
push   %rbp
mov    %rsp,%rbp
movswq 0x6(%rdi),%rax
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

0000000000010890 <TIFFDataWidth>:
push   %rbp
mov    %rsp,%rbp
xor    %eax,%eax
cmp    $0x12,%edi
jbe    1089d <TIFFDataWidth+0xd>
leaveq 
retq   
lea    0x41104(%rip),%rcx        # 519a8 <module.43+0xd6>
movslq (%rcx,%rdi,4),%rdx
add    %rdx,%rcx
jmpq   *%rcx
mov    $0x1,%eax
leaveq 
retq   
mov    $0x2,%eax
leaveq 
retq   
mov    $0x4,%eax
leaveq 
retq   
mov    $0x8,%eax
leaveq 
retq   
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

00000000000108d0 <TIFFMergeFieldInfo>:
push   %rbp
mov    %rsp,%rbp
sub    $0x40,%rsp
mov    %r15,-0x28(%rbp)
mov    %rdx,-0x40(%rbp)
mov    %rsi,-0x38(%rbp)
lea    0x41783(%rip),%r8        # 5206e <reason.15>
mov    $0x18,%edx
mov    0x430(%rdi),%rax
test   %rax,%rax
jne    10911 <TIFFMergeFieldInfo+0x41>
mov    %r8,%rcx
mov    $0x1,%esi
mov    %rdi,%r15
callq  8750 <_TIFFCheckMalloc@plt>
mov    %r15,%r8
jmp    1092d <TIFFMergeFieldInfo+0x5d>
mov    0x428(%rdi),%rsi
add    $0x1,%rax
mov    %rdx,%rcx
mov    %rax,%rdx
mov    %rdi,%r15
callq  8d00 <_TIFFCheckRealloc@plt>
mov    %r15,%r8
mov    %rax,0x428(%r8)
lea    0x41720(%rip),%rsi        # 5205b <module.14>
lea    0x4173d(%rip),%rdx        # 5207f <reason.15+0x11>
mov    $0xffffffffffffffff,%r15
test   %rax,%rax
jne    10965 <TIFFMergeFieldInfo+0x95>
xor    %eax,%eax
mov    0x3b8(%r8),%rdi
callq  8a00 <TIFFErrorExt@plt>
mov    %r15,%rax
mov    -0x28(%rbp),%r15
leaveq 
retq   
mov    0x430(%r8),%rdx
lea    0x1(%rdx),%rcx
mov    %rcx,0x430(%r8)
lea    (%rdx,%rdx,2),%r9
movl   $0x2,(%rax,%r9,8)
mov    0x428(%r8),%rax
mov    -0x40(%rbp),%r15
mov    %r15d,0x4(%rax,%r9,8)
mov    0x428(%r8),%rax
mov    %r15d,0x8(%rax,%r9,8)
mov    %r15d,%esi
mov    $0x30,%edx
mov    0x428(%r8),%rax
mov    %r8,%rdi
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %rax,%r12
mov    %r8,%r13
mov    %r9,%r14
lea    0x416a1(%rip),%rcx        # 5206e <reason.15>
callq  8750 <_TIFFCheckMalloc@plt>
mov    %rax,0x10(%r12,%r14,8)
mov    0x428(%r13),%rax
mov    0x10(%rax,%r14,8),%rax
test   %rax,%rax
je     10a03 <TIFFMergeFieldInfo+0x133>
xor    %r12d,%r12d
mov    %r13,-0x30(%rbp)
mov    %r14,-0x40(%rbp)
mov    %rbx,-0x8(%rbp)
mov    %rax,%r13
mov    -0x38(%rbp),%rbx
jmpq   10ada <TIFFMergeFieldInfo+0x20a>
xor    %eax,%eax
mov    0x3b8(%r13),%rdi
lea    0x4166c(%rip),%rdx        # 5207f <reason.15+0x11>
lea    0x41641(%rip),%rsi        # 5205b <module.14>
callq  8a00 <TIFFErrorExt@plt>
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    $0xffffffffffffffff,%rax
mov    -0x28(%rbp),%r15
leaveq 
retq   
mov    %r12d,%eax
lea    (%rax,%rax,2),%r14
mov    (%rbx,%r14,8),%eax
mov    %eax,0x0(%r13)
movswq 0x4(%rbx,%r14,8),%rax
mov    %ax,0x4(%r13)
movswq 0x6(%rbx,%r14,8),%rax
mov    %ax,0x6(%r13)
mov    0x8(%rbx,%r14,8),%eax
mov    %eax,0x8(%r13)
movl   $0x0,0xc(%r13)
mov    0x8(%rbx,%r14,8),%edi
movswq 0x4(%rbx,%r14,8),%rsi
movzbl 0xf(%rbx,%r14,8),%edx
callq  11560 <_TIFFSetGetType>
mov    %eax,0x10(%r13)
mov    0x8(%rbx,%r14,8),%edi
movswq 0x4(%rbx,%r14,8),%rsi
movzbl 0xf(%rbx,%r14,8),%edx
callq  11560 <_TIFFSetGetType>
mov    %eax,0x14(%r13)
movzwl 0xc(%rbx,%r14,8),%eax
mov    %ax,0x18(%r13)
movzbl 0xe(%rbx,%r14,8),%eax
mov    %al,0x1a(%r13)
movzbl 0xf(%rbx,%r14,8),%eax
mov    %al,0x1b(%r13)
mov    0x10(%rbx,%r14,8),%rax
mov    %rax,0x20(%r13)
movq   $0x0,0x28(%r13)
add    $0x1,%r12d
add    $0x30,%r13
cmp    %r12d,%r15d
ja     10a38 <TIFFMergeFieldInfo+0x168>
mov    -0x30(%rbp),%rbx
mov    0x428(%rbx),%rax
mov    -0x40(%rbp),%rcx
mov    0x10(%rax,%rcx,8),%rsi
mov    %r15,%rdx
mov    %rbx,%rdi
callq  8520 <_TIFFMergeFields@plt>
test   %eax,%eax
je     10b1e <TIFFMergeFieldInfo+0x24e>
mov    -0x8(%rbp),%rbx
xor    %eax,%eax
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x28(%rbp),%r15
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rbx),%rdi
lea    0x41571(%rip),%rdx        # 5209f <reason.15+0x31>
lea    0x41526(%rip),%rsi        # 5205b <module.14>
callq  8a00 <TIFFErrorExt@plt>
mov    -0x8(%rbp),%rbx
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    $0xffffffffffffffff,%rax
mov    -0x28(%rbp),%r15
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

0000000000010b60 <_TIFFGetFields>:
push   %rbp
mov    %rsp,%rbp
lea    0x664cd(%rip),%rax        # 77038 <tiffFieldArray>
leaveq 
retq   
nopl   (%rax)

0000000000010b70 <_TIFFGetExifFields>:
push   %rbp
mov    %rsp,%rbp
lea    0x664d5(%rip),%rax        # 77050 <exifFieldArray>
leaveq 
retq   
nopl   (%rax)

0000000000010b80 <_TIFFSetupFields>:
push   %rbp
mov    %rsp,%rbp
sub    $0x40,%rsp
mov    %rdi,-0x8(%rbp)
mov    0x3f0(%rdi),%rax
test   %rax,%rax
jne    10bb9 <_TIFFSetupFields+0x39>
mov    %rbx,%rax
mov    %rdi,%rbx
mov    %rsi,%rcx
mov    0x10(%rcx),%rsi
mov    0x8(%rcx),%edx
mov    %rbx,%rdi
mov    %rax,%rbx
callq  8520 <_TIFFMergeFields@plt>
test   %eax,%eax
je     10bd0 <_TIFFSetupFields+0x50>
leaveq 
retq   
mov    0x3f8(%rdi),%rax
test   %rax,%rax
jne    10bf2 <_TIFFSetupFields+0x72>
mov    %rbx,%rax
mov    %rdi,%rbx
mov    %rsi,%rcx
jmp    10ba1 <_TIFFSetupFields+0x21>
xor    %eax,%eax
mov    -0x8(%rbp),%rcx
mov    0x3b8(%rcx),%rdi
lea    0x414dd(%rip),%rsi        # 520c1 <reason.15+0x53>
lea    0x414b4(%rip),%rdx        # 5209f <reason.15+0x31>
callq  8a00 <TIFFErrorExt@plt>
leaveq 
retq   
lea    0x414c3(%rip),%rcx        # 520bc <reason.15+0x4e>
mov    $0x4,%edx
xor    %eax,%eax
mov    %rsi,-0x38(%rbp)
mov    %rbx,-0x10(%rbp)
mov    %r12,-0x18(%rbp)
mov    %r13,-0x20(%rbp)
mov    %r14,-0x28(%rbp)
mov    %r15,-0x30(%rbp)
mov    %rdi,%rbx
mov    %rax,%r12
mov    %rcx,%r13
jmp    10c58 <_TIFFSetupFields+0xd8>
mov    0x3f0(%rbx),%rcx
mov    %r12d,%eax
mov    (%rcx,%rax,8),%r14
movzwl 0x18(%r14),%eax
cmp    $0x41,%ax
jne    10c54 <_TIFFSetupFields+0xd4>
mov    0x20(%r14),%r15
mov    %r13,%rdi
mov    %r15,%rsi
callq  8120 <strncmp@plt>
test   %eax,%eax
je     10ca6 <_TIFFSetupFields+0x126>
mov    $0x4,%edx
add    $0x1,%r12d
mov    0x3f8(%rbx),%rcx
mov    %r12d,%eax
cmp    %rax,%rcx
ja     10c23 <_TIFFSetupFields+0xa3>
mov    0x3f0(%rbx),%rdi
callq  8bb0 <_TIFFfree@plt>
movq   $0x0,0x3f0(%rbx)
movq   $0x0,0x3f8(%rbx)
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
mov    -0x10(%rbp),%rax
mov    -0x38(%rbp),%rcx
jmpq   10ba1 <_TIFFSetupFields+0x21>
mov    %r15,%rdi
callq  8bb0 <_TIFFfree@plt>
mov    %r14,%rdi
callq  8bb0 <_TIFFfree@plt>
mov    $0x4,%edx
jmp    10c54 <_TIFFSetupFields+0xd4>
nopl   (%rax)

0000000000010cc0 <_TIFFPrintFieldInfo>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %rdi,%r12
mov    %rsi,%r13
xor    %ebx,%ebx
lea    0x413e7(%rip),%rsi        # 520d2 <reason.15+0x64>
mov    (%r12),%rdx
mov    %rbx,%rax
mov    %r13,%rdi
callq  86f0 <fprintf@plt>
lea    0x413d7(%rip),%rsi        # 520d8 <reason.15+0x6a>
lea    0x41402(%rip),%r14        # 5210a <reason.15+0x9c>
lea    0x41400(%rip),%r15        # 5210f <reason.15+0xa1>
jmp    10d4f <_TIFFPrintFieldInfo+0x8f>
mov    %r14,%rax
sub    $0x20,%rsp
mov    0x20(%rdx),%rdx
mov    %r11d,(%rsp)
mov    %r10d,0x8(%rsp)
mov    %rdi,0x10(%rsp)
mov    %rax,0x18(%rsp)
mov    %rdx,0x20(%rsp)
xor    %eax,%eax
mov    %r13,%rdi
mov    %rbx,%rdx
callq  86f0 <fprintf@plt>
add    $0x20,%rsp
add    $0x1,%ebx
lea    0x41389(%rip),%rsi        # 520d8 <reason.15+0x6a>
mov    0x3f8(%r12),%rcx
mov    %ebx,%eax
cmp    %rax,%rcx
ja     10d74 <_TIFFPrintFieldInfo+0xb4>
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
leaveq 
retq   
mov    0x3f0(%r12),%rcx
mov    %ebx,%eax
mov    (%rcx,%rax,8),%rdx
mov    (%rdx),%ecx
movswq 0x4(%rdx),%r8
movswq 0x6(%rdx),%r9
mov    0x8(%rdx),%r11d
movzwl 0x18(%rdx),%r10d
movzbl 0x1a(%rdx),%eax
test   %al,%al
jne    10da4 <_TIFFPrintFieldInfo+0xe4>
mov    %r15,%rdi
jmp    10da7 <_TIFFPrintFieldInfo+0xe7>
mov    %r14,%rdi
movzbl 0x1b(%rdx),%eax
test   %al,%al
jne    10d11 <_TIFFPrintFieldInfo+0x51>
mov    %r15,%rax
jmpq   10d14 <_TIFFPrintFieldInfo+0x54>
nopl   0x0(%rax,%rax,1)

0000000000010dc0 <_TIFFMergeFields>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rsi,-0x30(%rbp)
movq   $0x0,0x400(%rdi)
mov    %edx,%esi
mov    $0x8,%ecx
lea    0x41339(%rip),%r8        # 52126 <reason.25>
mov    0x3f0(%rdi),%r9
test   %r9,%r9
jne    10e3a <_TIFFMergeFields+0x7a>
mov    %r13,%r14
mov    %r12,%r13
mov    %rbx,%r15
mov    %rdx,%rbx
mov    %rcx,%rdx
mov    %r8,%rcx
mov    %rdi,%r12
callq  8750 <_TIFFCheckMalloc@plt>
mov    %rax,0x3f0(%r12)
xor    %edx,%edx
test   %rax,%rax
je     10e65 <_TIFFMergeFields+0xa5>
mov    %r15,-0x8(%rbp)
mov    %r13,-0x10(%rbp)
mov    %r14,-0x18(%rbp)
mov    -0x30(%rbp),%r13
mov    %rdx,%r14
jmpq   10ee9 <_TIFFMergeFields+0x129>
mov    0x3f8(%rdi),%rax
test   %rax,%rax
je     10df9 <_TIFFMergeFields+0x39>
add    %rax,%rsi
mov    %r13,%r14
mov    %r12,%r13
mov    %rbx,%r15
mov    %rdx,%rbx
mov    %rsi,%rdx
mov    %r9,%rsi
mov    %rdi,%r12
callq  8d00 <_TIFFCheckRealloc@plt>
jmp    10e13 <_TIFFMergeFields+0x53>
xor    %eax,%eax
mov    0x3b8(%r12),%rdi
mov    %rdx,%rbx
lea    0x4129c(%rip),%rsi        # 52115 <module.24>
lea    0x411ff(%rip),%rdx        # 5207f <reason.15+0x11>
callq  8a00 <TIFFErrorExt@plt>
mov    %rbx,%rax
mov    %r15,%rbx
mov    %r13,%r12
mov    %r14,%r13
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
leaveq 
retq   
mov    %r14d,%eax
lea    (%rax,%rax,2),%rax
shl    $0x4,%rax
lea    0x0(%r13,%rax,1),%r15
mov    (%r15),%esi
mov    %r12,%rdi
callq  8680 <TIFFFindField@plt>
test   %rax,%rax
jne    10ee3 <_TIFFMergeFields+0x123>
mov    0x3f0(%r12),%rax
mov    0x3f8(%r12),%rcx
mov    %r15,(%rax,%rcx,8)
mov    0x3f8(%r12),%rax
add    $0x1,%rax
mov    %rax,0x3f8(%r12)
add    $0x1,%r14d
xor    %edx,%edx
cmp    %r14d,%ebx
ja     10e9b <_TIFFMergeFields+0xdb>
mov    0x3f0(%r12),%rdi
mov    0x3f8(%r12),%rsi
lea    0x4ab(%rip),%rcx        # 113b0 <tagCompare>
mov    $0x8,%edx
callq  81e0 <qsort@plt>
mov    %rbx,%rax
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

0000000000010f30 <_TIFFFindOrRegisterField>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %rdi,-0x8(%rbp)
mov    %rsi,-0x10(%rbp)
mov    %rdx,-0x18(%rbp)
callq  8680 <TIFFFindField@plt>
test   %rax,%rax
je     10f50 <_TIFFFindOrRegisterField+0x20>
leaveq 
retq   
mov    -0x8(%rbp),%rax
mov    %rax,%rdi
mov    %r15,-0x8(%rbp)
mov    %rax,%r15
mov    -0x18(%rbp),%rdx
mov    -0x10(%rbp),%rsi
callq  8590 <_TIFFCreateAnonField@plt>
mov    %r15,%rdi
mov    %rax,%r15
mov    $0x1,%edx
mov    %r15,%rsi
callq  8520 <_TIFFMergeFields@plt>
test   %eax,%eax
jne    10f8a <_TIFFFindOrRegisterField+0x5a>
xor    %eax,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
mov    %r15,%rax
mov    -0x8(%rbp),%r15
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

0000000000010fa0 <_TIFFCreateAnonField>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %rsi,-0x10(%rbp)
mov    %rdx,-0x18(%rbp)
mov    $0x30,%edi
callq  8440 <_TIFFmalloc@plt>
test   %rax,%rax
jne    10fc3 <_TIFFCreateAnonField+0x23>
xor    %eax,%eax
leaveq 
retq   
mov    %rax,%rdi
xor    %esi,%esi
mov    %r15,-0x8(%rbp)
mov    %rax,%r15
mov    $0x30,%edx
callq  88e0 <_TIFFmemset@plt>
mov    -0x10(%rbp),%rax
mov    %eax,(%r15)
movw   $0xfffd,0x4(%r15)
movw   $0xfffd,0x6(%r15)
mov    -0x18(%rbp),%rax
mov    %eax,0x8(%r15)
movl   $0x0,0xc(%r15)
add    $0xffffffff,%eax
cmp    $0x11,%eax
ja     11028 <_TIFFCreateAnonField+0x88>
lea    0x409e7(%rip),%rcx        # 519f4 <module.43+0x122>
movslq (%rcx,%rax,4),%rax
add    %rcx,%rax
jmpq   *%rax
movl   $0x2f,0x10(%r15)
movl   $0x2f,0x14(%r15)
jmp    11038 <_TIFFCreateAnonField+0x98>
movl   $0x0,0x10(%r15)
movl   $0x0,0x14(%r15)
movw   $0x41,0x18(%r15)
movb   $0x1,0x1a(%r15)
movb   $0x1,0x1b(%r15)
mov    $0x20,%edi
callq  8440 <_TIFFmalloc@plt>
mov    %rax,0x20(%r15)
test   %rax,%rax
je     1116c <_TIFFCreateAnonField+0x1cc>
mov    %rax,%rdi
movq   $0x0,0x28(%r15)
xor    %eax,%eax
lea    0x410c3(%rip),%rdx        # 52137 <reason.25+0x11>
mov    $0x20,%esi
mov    -0x10(%rbp),%rcx
callq  8430 <snprintf@plt>
mov    %r15,%rax
mov    -0x8(%rbp),%r15
leaveq 
retq   
movl   $0x28,0x10(%r15)
movl   $0x28,0x14(%r15)
jmp    11038 <_TIFFCreateAnonField+0x98>
movl   $0x27,0x10(%r15)
movl   $0x27,0x14(%r15)
jmp    11038 <_TIFFCreateAnonField+0x98>
movl   $0x2a,0x10(%r15)
movl   $0x2a,0x14(%r15)
jmpq   11038 <_TIFFCreateAnonField+0x98>
movl   $0x2c,0x10(%r15)
movl   $0x2c,0x14(%r15)
jmpq   11038 <_TIFFCreateAnonField+0x98>
movl   $0x30,0x10(%r15)
movl   $0x30,0x14(%r15)
jmpq   11038 <_TIFFCreateAnonField+0x98>
movl   $0x29,0x10(%r15)
movl   $0x29,0x14(%r15)
jmpq   11038 <_TIFFCreateAnonField+0x98>
movl   $0x2b,0x10(%r15)
movl   $0x2b,0x14(%r15)
jmpq   11038 <_TIFFCreateAnonField+0x98>
movl   $0x2d,0x10(%r15)
movl   $0x2d,0x14(%r15)
jmpq   11038 <_TIFFCreateAnonField+0x98>
movl   $0x31,0x10(%r15)
movl   $0x31,0x14(%r15)
jmpq   11038 <_TIFFCreateAnonField+0x98>
movl   $0x32,0x10(%r15)
movl   $0x32,0x14(%r15)
jmpq   11038 <_TIFFCreateAnonField+0x98>
movl   $0x2e,0x10(%r15)
movl   $0x2e,0x14(%r15)
jmpq   11038 <_TIFFCreateAnonField+0x98>
mov    %r15,%rdi
callq  8bb0 <_TIFFfree@plt>
mov    -0x8(%rbp),%r15
xor    %eax,%eax
leaveq 
retq   
nopl   0x0(%rax)

0000000000011180 <_TIFFCheckFieldIsValidForCodec>:
push   %rbp
mov    %rsp,%rbp
mov    $0x1,%eax
lea    -0x124(%rsi),%r8d
cmp    $0xe5,%r8d
jbe    1119b <_TIFFCheckFieldIsValidForCodec+0x1b>
leaveq 
retq   
lea    0x4089a(%rip),%rdx        # 51a3c <module.43+0x16a>
movslq (%rdx,%r8,4),%rcx
add    %rdx,%rcx
jmpq   *%rcx
leaveq 
retq   
xor    %ecx,%ecx
movzwl 0x78(%rdi),%edi
cmp    $0x6,%di
jbe    111da <_TIFFCheckFieldIsValidForCodec+0x5a>
cmp    $0x808c,%di
jbe    111f7 <_TIFFCheckFieldIsValidForCodec+0x77>
cmp    $0x80b1,%di
jbe    1120f <_TIFFCheckFieldIsValidForCodec+0x8f>
cmp    $0x80b2,%di
je     1121b <_TIFFCheckFieldIsValidForCodec+0x9b>
cmp    $0x886d,%di
je     11225 <_TIFFCheckFieldIsValidForCodec+0xa5>
mov    %rcx,%rax
leaveq 
retq   
cmp    $0x3,%di
jbe    1122f <_TIFFCheckFieldIsValidForCodec+0xaf>
cmp    $0x4,%di
jbe    11240 <_TIFFCheckFieldIsValidForCodec+0xc0>
cmp    $0x5,%di
je     1124b <_TIFFCheckFieldIsValidForCodec+0xcb>
cmp    $0x6,%di
je     11255 <_TIFFCheckFieldIsValidForCodec+0xd5>
mov    %rcx,%rax
leaveq 
retq   
cmp    $0x7,%di
jbe    11265 <_TIFFCheckFieldIsValidForCodec+0xe5>
cmp    $0x8,%di
je     1121b <_TIFFCheckFieldIsValidForCodec+0x9b>
cmp    $0x8003,%di
je     11270 <_TIFFCheckFieldIsValidForCodec+0xf0>
mov    %rcx,%rax
leaveq 
retq   
cmp    $0x808d,%di
je     1127b <_TIFFCheckFieldIsValidForCodec+0xfb>
mov    %rcx,%rax
leaveq 
retq   
cmp    $0x13d,%esi
jne    11285 <_TIFFCheckFieldIsValidForCodec+0x105>
leaveq 
retq   
cmp    $0x13d,%esi
jne    1128a <_TIFFCheckFieldIsValidForCodec+0x10a>
leaveq 
retq   
cmp    $0x2,%di
je     11270 <_TIFFCheckFieldIsValidForCodec+0xf0>
cmp    $0x3,%di
je     11270 <_TIFFCheckFieldIsValidForCodec+0xf0>
mov    %rcx,%rax
leaveq 
retq   
cmp    $0x4,%di
je     11270 <_TIFFCheckFieldIsValidForCodec+0xf0>
mov    %rcx,%rax
leaveq 
retq   
cmp    $0x13d,%esi
jne    1128f <_TIFFCheckFieldIsValidForCodec+0x10f>
leaveq 
retq   
lea    -0x200(%rsi),%edx
cmp    $0x9,%edx
jbe    11294 <_TIFFCheckFieldIsValidForCodec+0x114>
mov    %rcx,%rax
leaveq 
retq   
cmp    $0x7,%di
je     112a6 <_TIFFCheckFieldIsValidForCodec+0x126>
mov    %rcx,%rax
leaveq 
retq   
cmp    $0x24,%r8d
jbe    112b0 <_TIFFCheckFieldIsValidForCodec+0x130>
mov    %rcx,%rax
leaveq 
retq   
cmp    $0x13d,%esi
jne    112c2 <_TIFFCheckFieldIsValidForCodec+0x142>
leaveq 
retq   
mov    %rcx,%rax
leaveq 
retq   
mov    %rcx,%rax
leaveq 
retq   
mov    %rcx,%rax
leaveq 
retq   
lea    0x40b39(%rip),%rsi        # 51dd4 <module.43+0x502>
movslq (%rsi,%rdx,4),%rdx
add    %rsi,%rdx
jmpq   *%rdx
leaveq 
retq   
cmp    $0x15b,%esi
jne    112cc <_TIFFCheckFieldIsValidForCodec+0x14c>
leaveq 
retq   
lea    0x40b45(%rip),%rdx        # 51dfc <module.43+0x52a>
movslq (%rdx,%r8,4),%rsi
add    %rsi,%rdx
jmpq   *%rdx
leaveq 
retq   
mov    %rcx,%rax
leaveq 
retq   
mov    %rcx,%rax
leaveq 
retq   
mov    %rcx,%rax
leaveq 
retq   
cmp    $0x3,%di
jne    112e6 <_TIFFCheckFieldIsValidForCodec+0x166>
leaveq 
retq   
cmp    $0x4,%di
jne    112eb <_TIFFCheckFieldIsValidForCodec+0x16b>
leaveq 
retq   
mov    %rcx,%rax
leaveq 
retq   
mov    %rcx,%rax
leaveq 
retq   
mov    %rcx,%rax
leaveq 
retq   

00000000000112f0 <_TIFFDataSize>:
push   %rbp
mov    %rsp,%rbp
xor    %eax,%eax
lea    -0x1(%rdi),%ecx
cmp    $0x11,%ecx
jbe    11300 <_TIFFDataSize+0x10>
leaveq 
retq   
lea    0x40b89(%rip),%rdx        # 51e90 <module.43+0x5be>
movslq (%rdx,%rcx,4),%rcx
add    %rdx,%rcx
jmpq   *%rcx
mov    $0x1,%eax
leaveq 
retq   
mov    $0x2,%eax
leaveq 
retq   
mov    $0x4,%eax
leaveq 
retq   
mov    $0x8,%eax
leaveq 
retq   
leaveq 
retq   
xchg   %ax,%ax

0000000000011330 <td_lfind>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rcx,%rax
imul   (%rdx),%rax
lea    (%rsi,%rax,1),%r14
mov    %rsi,%rbx
mov    %r8,%r12
mov    %rcx,%r13
mov    %rdi,%r15
jmp    11375 <td_lfind+0x45>
mov    %r15,%rdi
mov    %rbx,%rsi
callq  *%r12
test   %eax,%eax
je     11392 <td_lfind+0x62>
add    %r13,%rbx
cmp    %r14,%rbx
jb     11365 <td_lfind+0x35>
xor    %eax,%eax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
mov    %rbx,%rax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

00000000000113b0 <tagCompare>:
push   %rbp
mov    %rsp,%rbp
mov    (%rdi),%rcx
mov    (%rcx),%eax
mov    (%rsi),%rsi
mov    (%rsi),%edx
cmp    %eax,%edx
jne    113cd <tagCompare+0x1d>
mov    0x8(%rcx),%ecx
test   %ecx,%ecx
jne    113d1 <tagCompare+0x21>
xor    %eax,%eax
leaveq 
retq   
sub    %edx,%eax
leaveq 
retq   
movslq 0x8(%rsi),%rax
sub    %ecx,%eax
leaveq 
retq   
nopl   0x0(%rax)

00000000000113e0 <tagNameCompare>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x10(%rbp)
mov    (%rdi),%r15
mov    0x20(%r15),%rdi
mov    (%rsi),%rax
mov    %rax,-0x8(%rbp)
mov    0x20(%rax),%rsi
callq  8660 <strcmp@plt>
test   %eax,%eax
je     1140d <tagNameCompare+0x2d>
mov    -0x10(%rbp),%r15
leaveq 
retq   
mov    0x8(%r15),%ecx
test   %ecx,%ecx
jne    1141d <tagNameCompare+0x3d>
xor    %eax,%eax
mov    -0x10(%rbp),%r15
leaveq 
retq   
mov    -0x8(%rbp),%rax
movslq 0x8(%rax),%rax
sub    %ecx,%eax
mov    -0x10(%rbp),%r15
leaveq 
retq   
nopl   (%rax)

0000000000011430 <_TIFFFindFieldByName>:
push   %rbp
mov    %rsp,%rbp
sub    $0x60,%rsp
lea    -0x58(%rbp),%rcx
mov    %rcx,-0x28(%rbp)
movq   $0x0,(%rcx)
movq   $0x0,0x8(%rcx)
movq   $0x0,0x10(%rcx)
movq   $0x0,0x18(%rcx)
movq   $0x0,0x20(%rcx)
movq   $0x0,0x28(%rcx)
mov    0x400(%rdi),%r8
test   %r8,%r8
jne    11494 <_TIFFFindFieldByName+0x64>
mov    %r15,%r9
mov    %rdi,%r15
xor    %eax,%eax
mov    0x3f0(%r15),%rdi
test   %rdi,%rdi
jne    114dc <_TIFFFindFieldByName+0xac>
mov    %r9,%r15
leaveq 
retq   
mov    0x20(%r8),%rax
mov    %rsi,%rcx
mov    %r13,-0x8(%rbp)
mov    %r14,-0x10(%rbp)
mov    %r15,-0x18(%rbp)
mov    %rsi,-0x20(%rbp)
mov    %rcx,%rsi
mov    %rdx,%r13
mov    %r8,%r14
mov    %rdi,%r15
mov    %rax,%rdi
callq  8660 <strcmp@plt>
test   %eax,%eax
je     11513 <_TIFFFindFieldByName+0xe3>
mov    %r13,%rdx
lea    -0x58(%rbp),%rcx
mov    -0x20(%rbp),%rsi
mov    -0x18(%rbp),%r9
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
jmp    11481 <_TIFFFindFieldByName+0x51>
mov    %rsi,0x20(%rcx)
mov    %edx,0x8(%rcx)
lea    -0x28(%rbp),%rdi
mov    0x3f0(%r15),%rsi
lea    0x3f8(%r15),%rdx
mov    $0x8,%ecx
lea    -0x121(%rip),%r8        # 113e0 <tagNameCompare>
mov    %r9,-0x20(%rbp)
callq  11330 <td_lfind>
test   %rax,%rax
jne    1153a <_TIFFFindFieldByName+0x10a>
xor    %eax,%eax
jmp    1153d <_TIFFFindFieldByName+0x10d>
test   %r13d,%r13d
je     1154a <_TIFFFindFieldByName+0x11a>
cmp    0x8(%r14),%r13d
je     1154a <_TIFFFindFieldByName+0x11a>
mov    %r13,%rdx
lea    -0x58(%rbp),%rcx
mov    -0x20(%rbp),%rsi
mov    -0x18(%rbp),%r9
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
jmpq   11481 <_TIFFFindFieldByName+0x51>
mov    (%rax),%rax
mov    %rax,0x400(%r15)
mov    -0x20(%rbp),%r15
leaveq 
retq   
mov    0x400(%r15),%rax
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
leaveq 
retq   
nop

0000000000011560 <_TIFFSetGetType>:
push   %rbp
mov    %rsp,%rbp
mov    $0x1,%ecx
cmp    $0x2,%edi
je     11589 <_TIFFSetGetType+0x29>
xor    %eax,%eax
cmp    $0x1,%si
je     11598 <_TIFFSetGetType+0x38>
test   %si,%si
jg     115a6 <_TIFFSetGetType+0x46>
cmp    $0xffff,%si
je     115b4 <_TIFFSetGetType+0x54>
cmp    $0xfffd,%si
je     115c3 <_TIFFSetGetType+0x63>
leaveq 
retq   
cmp    $0xffff,%si
jne    1156e <_TIFFSetGetType+0xe>
test   %dl,%dl
jne    1156e <_TIFFSetGetType+0xe>
mov    %rcx,%rax
leaveq 
retq   
test   %dl,%dl
jne    11576 <_TIFFSetGetType+0x16>
lea    -0x1(%rdi),%esi
cmp    $0x11,%esi
jbe    115ca <_TIFFSetGetType+0x6a>
leaveq 
retq   
test   %dl,%dl
jne    1157b <_TIFFSetGetType+0x1b>
lea    -0x1(%rdi),%edx
cmp    $0x11,%edx
jbe    115e1 <_TIFFSetGetType+0x81>
leaveq 
retq   
cmp    $0x1,%dl
jne    11581 <_TIFFSetGetType+0x21>
lea    -0x1(%rdi),%ecx
cmp    $0x11,%ecx
jbe    115f8 <_TIFFSetGetType+0x98>
leaveq 
retq   
cmp    $0x1,%dl
je     1160f <_TIFFSetGetType+0xaf>
leaveq 
retq   
lea    0x40907(%rip),%rdx        # 51ed8 <module.43+0x606>
movslq (%rdx,%rsi,4),%rsi
add    %rsi,%rdx
jmpq   *%rdx
mov    $0x2,%eax
leaveq 
retq   
lea    0x40938(%rip),%rcx        # 51f20 <module.43+0x64e>
movslq (%rcx,%rdx,4),%rdx
add    %rdx,%rcx
jmpq   *%rcx
mov    $0x10,%eax
leaveq 
retq   
lea    0x40969(%rip),%rdx        # 51f68 <module.43+0x696>
movslq (%rdx,%rcx,4),%rcx
add    %rdx,%rcx
jmpq   *%rcx
mov    $0x1c,%eax
leaveq 
retq   
lea    -0x1(%rdi),%ecx
cmp    $0x11,%ecx
jbe    11708 <_TIFFSetGetType+0x1a8>
leaveq 
retq   
mov    %rcx,%rax
leaveq 
retq   
mov    $0x4,%eax
leaveq 
retq   
mov    $0x6,%eax
leaveq 
retq   
mov    $0xa,%eax
leaveq 
retq   
mov    $0x3,%eax
leaveq 
retq   
mov    $0x5,%eax
leaveq 
retq   
mov    $0x7,%eax
leaveq 
retq   
mov    $0xb,%eax
leaveq 
retq   
mov    $0xc,%eax
leaveq 
retq   
mov    $0x8,%eax
leaveq 
retq   
mov    $0x9,%eax
leaveq 
retq   
leaveq 
retq   
mov    $0xf,%eax
leaveq 
retq   
mov    $0x12,%eax
leaveq 
retq   
mov    $0x14,%eax
leaveq 
retq   
mov    $0x18,%eax
leaveq 
retq   
mov    $0x11,%eax
leaveq 
retq   
mov    $0x13,%eax
leaveq 
retq   
mov    $0x15,%eax
leaveq 
retq   
mov    $0x19,%eax
leaveq 
retq   
mov    $0x1a,%eax
leaveq 
retq   
mov    $0x16,%eax
leaveq 
retq   
mov    $0x17,%eax
leaveq 
retq   
leaveq 
retq   
mov    $0x1b,%eax
leaveq 
retq   
mov    $0x1e,%eax
leaveq 
retq   
mov    $0x20,%eax
leaveq 
retq   
mov    $0x24,%eax
leaveq 
retq   
mov    $0x1d,%eax
leaveq 
retq   
mov    $0x1f,%eax
leaveq 
retq   
mov    $0x21,%eax
leaveq 
retq   
mov    $0x25,%eax
leaveq 
retq   
mov    $0x26,%eax
leaveq 
retq   
mov    $0x22,%eax
leaveq 
retq   
mov    $0x23,%eax
leaveq 
retq   
leaveq 
retq   
lea    0x408a1(%rip),%rdx        # 51fb0 <module.43+0x6de>
movslq (%rdx,%rcx,4),%rcx
add    %rdx,%rcx
jmpq   *%rcx
mov    $0x28,%eax
leaveq 
retq   
mov    $0x27,%eax
leaveq 
retq   
mov    $0x2a,%eax
leaveq 
retq   
mov    $0x2c,%eax
leaveq 
retq   
mov    $0x30,%eax
leaveq 
retq   
mov    $0x29,%eax
leaveq 
retq   
mov    $0x2b,%eax
leaveq 
retq   
mov    $0x2d,%eax
leaveq 
retq   
mov    $0x31,%eax
leaveq 
retq   
mov    $0x32,%eax
leaveq 
retq   
mov    $0x2e,%eax
leaveq 
retq   
mov    $0x2f,%eax
leaveq 
retq   
leaveq 
retq   
xchg   %ax,%ax

0000000000011770 <TIFFReadDirectory>:
push   %rbp
mov    %rsp,%rbp
sub    $0x80,%rsp
mov    %rdi,-0x58(%rbp)
movl   $0xffffffff,-0x78(%rbp)
mov    0x20(%rdi),%rsi
mov    %rsi,0x18(%rdi)
xor    %eax,%eax
mov    %rax,-0x40(%rbp)
mov    %r15,%rax
mov    %r14,%r15
mov    %rbx,%r14
mov    %rax,%rbx
callq  18470 <TIFFCheckDirOffset>
test   %eax,%eax
jne    117b9 <TIFFReadDirectory+0x49>
mov    %r14,%rcx
mov    %r15,%r14
mov    %rbx,%r15
mov    %rcx,%rbx
xor    %eax,%eax
leaveq 
retq   
mov    -0x58(%rbp),%rax
mov    %rax,%rdi
mov    %rbx,-0x28(%rbp)
mov    %rax,%rbx
callq  *0x338(%rbx)
movzwl 0x280(%rbx),%eax
add    $0x1,%eax
mov    %ax,0x280(%rbx)
mov    0x20(%rbx),%rcx
lea    -0x80(%rbp),%rdx
lea    0x20(%rbx),%rax
mov    %rbx,%rdi
mov    %rcx,%rsi
mov    %r15,-0x20(%rbp)
mov    %rcx,%r15
mov    %rax,%rcx
callq  18670 <TIFFFetchDirectory>
test   %ax,%ax
jne    11832 <TIFFReadDirectory+0xc2>
xor    %eax,%eax
mov    0x3b8(%rbx),%rdi
mov    %r15,%rcx
lea    0x41ca7(%rip),%rdx        # 534be <module.10+0x12>
lea    0x41c8e(%rip),%rsi        # 534ac <module.10>
callq  8a00 <TIFFErrorExt@plt>
mov    %r14,%rbx
mov    -0x20(%rbp),%r14
mov    -0x28(%rbp),%r15
xor    %eax,%eax
leaveq 
retq   
mov    %rax,%r15
mov    -0x80(%rbp),%rsi
mov    %rbx,%rdi
mov    %r15,%rdx
callq  18000 <TIFFReadDirectoryCheckOrder>
mov    -0x80(%rbp),%rdx
xor    %eax,%eax
jmp    1186f <TIFFReadDirectory+0xff>
movzwl (%rcx),%r9d
movzwl (%rdx),%r8d
cmp    %r8w,%r9w
jne    1185f <TIFFReadDirectory+0xef>
movw   $0x0,(%rcx)
add    $0x18,%rcx
add    $0x1,%esi
cmp    %si,%r15w
ja     1184c <TIFFReadDirectory+0xdc>
mov    %rdi,%rdx
cmp    %ax,%r15w
ja     118f9 <TIFFReadDirectory+0x189>
mov    0x10(%rbx),%eax
and    $0xffefffbf,%eax
mov    %eax,0x10(%rbx)
mov    %rbx,%rdi
callq  8510 <TIFFFreeDirectory@plt>
mov    %rbx,%rdi
callq  88d0 <TIFFDefaultDirectory@plt>
mov    $0x1,%edx
mov    %rdx,-0x50(%rbp)
xor    %eax,%eax
mov    $0x11c,%esi
mov    %rbx,%rdi
callq  8290 <TIFFSetField@plt>
mov    -0x80(%rbp),%rsi
mov    $0x115,%ecx
mov    %rbx,%rdi
mov    %r15,%rdx
callq  18050 <TIFFReadDirectoryFindEntry>
test   %rax,%rax
je     11915 <TIFFReadDirectory+0x1a5>
mov    %rbx,%rdi
mov    %rax,%rsi
xor    %edx,%edx
mov    %r15,-0x58(%rbp)
mov    %rax,%r15
callq  18eb0 <TIFFFetchNormalTag>
test   %eax,%eax
jne    1190b <TIFFReadDirectory+0x19b>
xor    %r15d,%r15d
mov    -0x80(%rbp),%rdi
test   %rdi,%rdi
jne    1194b <TIFFReadDirectory+0x1db>
mov    %r15,%rax
mov    %r14,%rbx
mov    -0x20(%rbp),%r14
mov    -0x28(%rbp),%r15
leaveq 
retq   
lea    0x18(%rdx),%rdi
add    $0x1,%eax
mov    %rax,%rsi
mov    %rdi,%rcx
jmpq   11866 <TIFFReadDirectory+0xf6>
movw   $0x0,(%r15)
mov    -0x58(%rbp),%r15
mov    $0x103,%ecx
mov    -0x80(%rbp),%rsi
mov    %rbx,%rdi
mov    %r15,%rdx
callq  18050 <TIFFReadDirectoryFindEntry>
test   %rax,%rax
jne    11960 <TIFFReadDirectory+0x1f0>
xor    %eax,%eax
mov    %rbx,%rdi
mov    $0x1,%edx
mov    $0x103,%esi
callq  8290 <TIFFSetField@plt>
test   %eax,%eax
jne    119b7 <TIFFReadDirectory+0x247>
xor    %r15d,%r15d
jmp    118e0 <TIFFReadDirectory+0x170>
callq  8bb0 <_TIFFfree@plt>
mov    %r15,%rax
mov    %r14,%rbx
mov    -0x20(%rbp),%r14
mov    -0x28(%rbp),%r15
leaveq 
retq   
lea    -0x74(%rbp),%rdx
mov    %rbx,%rdi
mov    %rax,%rsi
mov    %r15,-0x58(%rbp)
mov    %rax,%r15
callq  13690 <TIFFReadDirEntryShort>
cmp    $0x1,%eax
jne    1198a <TIFFReadDirectory+0x21a>
mov    %rbx,%rdi
mov    %r15,%rsi
lea    -0x74(%rbp),%rdx
callq  172d0 <TIFFReadDirEntryPersampleShort>
test   %eax,%eax
jne    119e1 <TIFFReadDirectory+0x271>
xor    %eax,%eax
movzwl -0x74(%rbp),%edx
mov    %rbx,%rdi
mov    $0x103,%esi
callq  8290 <TIFFSetField@plt>
test   %eax,%eax
jne    119ad <TIFFReadDirectory+0x23d>
xor    %r15d,%r15d
jmpq   118e0 <TIFFReadDirectory+0x170>
movw   $0x0,(%r15)
mov    -0x58(%rbp),%r15
mov    -0x80(%rbp),%rcx
lea    -0x78(%rbp),%rdx
mov    %r14,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %rcx,%r13
mov    $0x1,%esi
lea    0x41ad2(%rip),%r12        # 534ac <module.10>
xor    %eax,%eax
mov    %rax,%r14
jmp    11a46 <TIFFReadDirectory+0x2d6>
mov    %rax,%rsi
mov    %rbx,%rdi
lea    0x41af7(%rip),%rcx        # 534e5 <module.10+0x39>
xor    %r15d,%r15d
mov    %r15,%r8
lea    0x41ab1(%rip),%rdx        # 534ac <module.10>
callq  17e20 <TIFFReadDirEntryOutputErr>
jmpq   118e0 <TIFFReadDirectory+0x170>
movzwl 0x0(%r13),%ecx
test   %cx,%cx
je     11a2d <TIFFReadDirectory+0x2bd>
mov    %rcx,%rsi
mov    %rbx,%rdi
callq  18080 <TIFFReadDirectoryFindFieldInfo>
mov    -0x78(%rbp),%eax
cmp    $0xffffffff,%eax
je     11a92 <TIFFReadDirectory+0x322>
lea    -0x78(%rbp),%rdx
mov    $0x1,%esi
xor    %eax,%eax
movzwl 0x0(%r13),%r8d
test   %r8w,%r8w
jne    11b13 <TIFFReadDirectory+0x3a3>
add    $0x18,%r13
add    $0x1,%r14d
xor    %eax,%eax
cmp    %r14w,%r15w
ja     11a05 <TIFFReadDirectory+0x295>
movzwl 0x78(%rbx),%ecx
cmp    $0x6,%cx
jne    11bc3 <TIFFReadDirectory+0x453>
movzwl 0xaa(%rbx),%ecx
cmp    $0x2,%cx
jne    11bc3 <TIFFReadDirectory+0x453>
mov    %r15,%r14
mov    %rax,%r15
mov    %rbx,%rdi
callq  8c70 <_TIFFFillStriles@plt>
test   %eax,%eax
jne    11b92 <TIFFReadDirectory+0x422>
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%r14
jmpq   118e0 <TIFFReadDirectory+0x170>
xor    %eax,%eax
mov    0x3b8(%rbx),%rdi
movzwl 0x0(%r13),%ecx
mov    %rcx,%r8
mov    %r12,%rsi
lea    0x41a44(%rip),%rdx        # 534f1 <module.10+0x45>
callq  85a0 <TIFFWarningExt@plt>
movzwl 0x0(%r13),%esi
movzwl 0x2(%r13),%edx
mov    %rbx,%rdi
callq  8590 <_TIFFCreateAnonField@plt>
mov    %rax,%rsi
mov    %rbx,%rdi
mov    $0x1,%edx
callq  8520 <_TIFFMergeFields@plt>
test   %eax,%eax
jne    11bf7 <TIFFReadDirectory+0x487>
xor    %eax,%eax
mov    0x3b8(%rbx),%rdi
movzwl 0x0(%r13),%ecx
mov    %rcx,%r8
mov    %r12,%rsi
lea    0x41a27(%rip),%rdx        # 5351e <module.10+0x72>
callq  85a0 <TIFFWarningExt@plt>
movw   $0x0,0x0(%r13)
lea    -0x78(%rbp),%rdx
mov    $0x1,%esi
xor    %eax,%eax
jmpq   11a2d <TIFFReadDirectory+0x2bd>
mov    0x3f0(%rbx),%rdi
mov    -0x78(%rbp),%ecx
mov    (%rdi,%rcx,8),%rcx
movzwl 0x18(%rcx),%edi
test   %di,%di
je     11c2d <TIFFReadDirectory+0x4bd>
cmp    $0x141,%r8w
jbe    11c39 <TIFFReadDirectory+0x4c9>
cmp    $0x144,%r8w
jbe    11c6a <TIFFReadDirectory+0x4fa>
cmp    $0x80e4,%r8w
jbe    11c8f <TIFFReadDirectory+0x51f>
cmp    $0x80e5,%r8w
jne    11cbc <TIFFReadDirectory+0x54c>
mov    %rdx,%r12
mov    %rax,%rdx
mov    %rbx,%rdi
mov    %r13,%rsi
callq  18eb0 <TIFFFetchNormalTag>
test   %eax,%eax
je     11ccd <TIFFReadDirectory+0x55d>
movw   $0x0,0x0(%r13)
mov    %r12,%rdx
mov    $0x1,%esi
lea    0x4191f(%rip),%r12        # 534ac <module.10>
jmpq   11a3c <TIFFReadDirectory+0x2cc>
mov    %r15,%rax
mov    %r14,%r15
mov    %rax,%r14
mov    -0x80(%rbp),%r13
mov    $0x111,%ecx
mov    %rbx,%rdi
mov    %r13,%rsi
mov    %r15,%rdx
callq  18050 <TIFFReadDirectoryFindEntry>
test   %rax,%rax
jne    11ce1 <TIFFReadDirectory+0x571>
mov    %r14,%rax
mov    $0x1,%esi
mov    0x38(%rbx),%rcx
and    $0x2,%rcx
test   %rcx,%rcx
jne    11cfc <TIFFReadDirectory+0x58c>
mov    %rbx,%rdi
mov    %rax,%r15
lea    0x419f9(%rip),%rsi        # 535da <module.10+0x12e>
callq  18440 <MissingRequired>
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%r14
jmpq   118e0 <TIFFReadDirectory+0x170>
movzwl 0x0(%r13),%esi
mov    %rbx,%rdi
lea    -0x78(%rbp),%r12
mov    %r12,%rdx
callq  18080 <TIFFReadDirectoryFindFieldInfo>
mov    -0x78(%rbp),%eax
cmp    $0xfffffffe,%eax
ja     11d74 <TIFFReadDirectory+0x604>
mov    %r12,%rdx
mov    $0x1,%esi
lea    0x41886(%rip),%r12        # 534ac <module.10>
xor    %eax,%eax
jmpq   11a2d <TIFFReadDirectory+0x2bd>
movw   $0x0,0x0(%r13)
jmpq   11a3c <TIFFReadDirectory+0x2cc>
cmp    $0x115,%r8w
jbe    11d93 <TIFFReadDirectory+0x623>
cmp    $0x116,%r8w
jbe    11db9 <TIFFReadDirectory+0x649>
cmp    $0x117,%r8w
je     11c9b <TIFFReadDirectory+0x52b>
cmp    $0x11c,%r8w
je     11b5e <TIFFReadDirectory+0x3ee>
jmpq   11dd3 <TIFFReadDirectory+0x663>
cmp    $0x142,%r8w
jbe    11dc7 <TIFFReadDirectory+0x657>
cmp    $0x143,%r8w
je     11b5e <TIFFReadDirectory+0x3ee>
cmp    $0x144,%r8w
je     11c9b <TIFFReadDirectory+0x52b>
jmpq   11dd3 <TIFFReadDirectory+0x663>
cmp    $0x145,%r8w
jne    11dfd <TIFFReadDirectory+0x68d>
mov    %rdi,%rcx
and    $0x1f,%ecx
mov    %rsi,%rax
shl    %cl,%rax
shr    $0x5,%edi
movslq %edi,%rcx
or     0x38(%rbx,%rcx,8),%rax
mov    %rax,0x38(%rbx,%rcx,8)
jmpq   11a3c <TIFFReadDirectory+0x2cc>
cmp    $0x80e6,%r8w
je     11b5e <TIFFReadDirectory+0x3ee>
jmpq   11dd3 <TIFFReadDirectory+0x663>
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%r14
xor    %r15d,%r15d
jmpq   118e0 <TIFFReadDirectory+0x170>
mov    0x8(%rax),%rax
cmp    $0x1,%rax
je     11e0b <TIFFReadDirectory+0x69b>
mov    %r14,%rax
mov    $0x1,%esi
jmpq   11bc3 <TIFFReadDirectory+0x453>
mov    0x38(%rbx),%rcx
and    $0x4,%rcx
test   %rcx,%rcx
jne    11e34 <TIFFReadDirectory+0x6c4>
mov    %rsi,%r13
mov    %rax,%r14
mov    %rbx,%rdi
callq  8260 <TIFFNumberOfStrips@plt>
mov    %eax,0xe4(%rbx)
mov    0x58(%rbx),%eax
mov    %eax,0x64(%rbx)
mov    0x84(%rbx),%eax
mov    %eax,0x68(%rbx)
mov    0x60(%rbx),%eax
mov    %eax,0x6c(%rbx)
mov    0x10(%rbx),%ecx
and    $0xfffffbff,%ecx
mov    %r14,%r8
mov    %ecx,0x10(%rbx)
mov    0xe4(%rbx),%eax
test   %eax,%eax
jne    11e59 <TIFFReadDirectory+0x6e9>
mov    0x3b8(%rbx),%rdi
and    $0x400,%ecx
test   %ecx,%ecx
jne    11eaf <TIFFReadDirectory+0x73f>
lea    0x4189d(%rip),%rcx        # 5360c <module.10+0x160>
jmpq   11eb6 <TIFFReadDirectory+0x746>
lea    0x417d9(%rip),%rdi        # 53554 <module.10+0xa8>
lea    0x417e4(%rip),%rsi        # 53566 <module.10+0xba>
mov    $0xe44,%edx
lea    0x417e6(%rip),%rcx        # 53574 <module.10+0xc8>
callq  8490 <__assert_fail@plt>
cmp    $0x100,%r8w
jbe    11edb <TIFFReadDirectory+0x76b>
cmp    $0x101,%r8w
je     11b5e <TIFFReadDirectory+0x3ee>
cmp    $0x111,%r8w
je     11c9b <TIFFReadDirectory+0x52b>
jmp    11dd3 <TIFFReadDirectory+0x663>
cmp    $0x116,%r8w
je     11b5e <TIFFReadDirectory+0x3ee>
jmp    11dd3 <TIFFReadDirectory+0x663>
cmp    $0x142,%r8w
je     11b5e <TIFFReadDirectory+0x3ee>
mov    %r8,%rsi
mov    %rdx,%r12
mov    %rbx,%rdi
callq  8b60 <_TIFFCheckFieldIsValidForCodec@plt>
test   %eax,%eax
je     11eec <TIFFReadDirectory+0x77c>
mov    %r12,%rdx
mov    $0x1,%esi
lea    0x416b4(%rip),%r12        # 534ac <module.10>
jmpq   11a3c <TIFFReadDirectory+0x2cc>
cmp    $0x152,%r8w
je     11b5e <TIFFReadDirectory+0x3ee>
jmp    11dd3 <TIFFReadDirectory+0x663>
mov    %r13,%rsi
mov    $0x117,%ecx
mov    %rbx,%rdi
mov    %r15,%rdx
callq  18050 <TIFFReadDirectoryFindEntry>
test   %rax,%rax
jne    11f07 <TIFFReadDirectory+0x797>
mov    %r14,%rax
mov    $0x1,%esi
jmpq   11bc3 <TIFFReadDirectory+0x453>
mov    %rsi,%r13
mov    %rax,%r14
mov    %rbx,%rdi
callq  87d0 <TIFFNumberOfTiles@plt>
mov    %eax,0xe4(%rbx)
mov    0x10(%rbx),%ecx
or     $0x400,%ecx
mov    %r14,%r8
jmpq   11d42 <TIFFReadDirectory+0x5d2>
mov    %eax,0xe0(%rbx)
movzwl 0xaa(%rbx),%ecx
cmp    $0x2,%cx
jne    11e7d <TIFFReadDirectory+0x70d>
movzwl 0x82(%rbx),%ecx
xor    %edx,%edx
div    %ecx
mov    %eax,0xe0(%rbx)
mov    0x38(%rbx),%rax
and    $0x2000000,%rax
test   %rax,%rax
jne    11f42 <TIFFReadDirectory+0x7d2>
movzwl 0x78(%rbx),%eax
cmp    $0x6,%ax
jne    11f83 <TIFFReadDirectory+0x813>
mov    0x10(%rbx),%eax
and    $0x400,%eax
test   %eax,%eax
jne    11f22 <TIFFReadDirectory+0x7b2>
mov    %r8,%rax
jmp    11f25 <TIFFReadDirectory+0x7b5>
lea    0x41750(%rip),%rcx        # 53606 <module.10+0x15a>
mov    %r12,%rsi
mov    %r8,%r15
xor    %eax,%eax
lea    0x41721(%rip),%rdx        # 535e6 <module.10+0x13a>
callq  8a00 <TIFFErrorExt@plt>
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%r14
jmpq   118e0 <TIFFReadDirectory+0x170>
cmp    $0x100,%r8w
je     11b5e <TIFFReadDirectory+0x3ee>
jmpq   11dd3 <TIFFReadDirectory+0x663>
movw   $0x0,0x0(%r13)
mov    %r12,%rdx
mov    $0x1,%esi
lea    0x415aa(%rip),%r12        # 534ac <module.10>
jmpq   11a3c <TIFFReadDirectory+0x2cc>
mov    0x8(%rax),%rax
cmp    $0x1,%rax
je     11f9f <TIFFReadDirectory+0x82f>
mov    %r14,%rax
mov    $0x1,%esi
jmpq   11bc3 <TIFFReadDirectory+0x453>
mov    %r13,%rax
test   %eax,%eax
jne    11f83 <TIFFReadDirectory+0x813>
mov    0xe4(%rbx),%eax
cmp    $0x1,%eax
jne    11f83 <TIFFReadDirectory+0x813>
mov    0x38(%rbx),%rax
or     $0x2000000,%rax
mov    %rax,0x38(%rbx)
mov    -0x80(%rbp),%r14
lea    0xe8(%rbx),%rcx
mov    %rcx,-0x30(%rbp)
lea    0xf0(%rbx),%r10
mov    %r10,-0x38(%rbp)
lea    -0x72(%rbp),%rdx
lea    -0x70(%rbp),%rdi
lea    -0x5a(%rbp),%rax
lea    0x416bd(%rip),%r11        # 5362c <module.10+0x180>
mov    $0x2,%esi
mov    %rsi,-0x48(%rbp)
mov    %r8,%rsi
mov    %rsi,%r9
jmpq   12022 <TIFFReadDirectory+0x8b2>
mov    0x10(%rbx),%eax
and    $0x400,%eax
test   %eax,%eax
jne    12085 <TIFFReadDirectory+0x915>
lea    0x41685(%rip),%rsi        # 5361f <module.10+0x173>
jmpq   1208c <TIFFReadDirectory+0x91c>
movw   $0x1,0xaa(%rbx)
xor    %eax,%eax
mov    0x3b8(%rbx),%rdi
lea    0x415ce(%rip),%rdx        # 53586 <module.10+0xda>
mov    %r12,%rsi
callq  85a0 <TIFFWarningExt@plt>
mov    %r14,%rax
mov    $0x1,%esi
jmpq   11bc3 <TIFFReadDirectory+0x453>
test   %r12w,%r12w
je     120a8 <TIFFReadDirectory+0x938>
mov    %r13,%rdx
mov    %r9,%r13
mov    %rsi,%r12
mov    %rbx,%rdi
mov    %r14,%rsi
callq  18eb0 <TIFFFetchNormalTag>
mov    %r13,%r9
lea    -0x70(%rbp),%rdi
lea    -0x72(%rbp),%rdx
lea    -0x5a(%rbp),%rax
mov    -0x38(%rbp),%r10
mov    -0x30(%rbp),%rcx
lea    0x41623(%rip),%r11        # 5362c <module.10+0x180>
mov    $0x1,%r13d
add    $0x18,%r14
lea    0x1(%r12),%esi
lea    0x4148d(%rip),%r12        # 534ac <module.10>
xor    %r8d,%r8d
cmp    %si,%r15w
ja     120b0 <TIFFReadDirectory+0x940>
movzwl 0x78(%rbx),%eax
cmp    $0x6,%ax
je     1217a <TIFFReadDirectory+0xa0a>
movzwl 0x7a(%rbx),%eax
cmp    $0x3,%ax
jne    121e9 <TIFFReadDirectory+0xa79>
mov    0x38(%rbx),%rax
and    $0x4000000,%rax
test   %rax,%rax
jne    121e9 <TIFFReadDirectory+0xa79>
movzwl 0x74(%rbx),%eax
cmp    $0x7,%ax
jbe    12260 <TIFFReadDirectory+0xaf0>
movzwl 0x82(%rbx),%eax
cmp    $0x3,%ax
jne    12260 <TIFFReadDirectory+0xaf0>
movw   $0x2,0x7a(%rbx)
jmpq   121e9 <TIFFReadDirectory+0xa79>
lea    0x41587(%rip),%rsi        # 53613 <module.10+0x167>
mov    %rbx,%rdi
mov    %r8,%r15
callq  18440 <MissingRequired>
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%r14
jmpq   118e0 <TIFFReadDirectory+0x170>
mov    %rsi,%r12
jmpq   1200f <TIFFReadDirectory+0x89f>
movzwl (%r14),%r12d
cmp    $0x12c,%r12w
jbe    12291 <TIFFReadDirectory+0xb21>
cmp    $0x152,%r12w
jbe    122c6 <TIFFReadDirectory+0xb56>
cmp    $0x154,%r12w
jbe    12336 <TIFFReadDirectory+0xbc6>
cmp    $0x155,%r12w
jne    123c0 <TIFFReadDirectory+0xc50>
movq   $0x0,-0x70(%rbp)
movzwl 0x82(%rbx),%eax
cmp    0x8(%r14),%rax
je     123d1 <TIFFReadDirectory+0xc61>
mov    %rsi,%r12
test   %r13d,%r13d
jne    123f7 <TIFFReadDirectory+0xc87>
mov    0x10(%rbx),%r13d
mov    %r13,%rax
or     $0x400000,%eax
mov    %eax,0x10(%rbx)
xor    %eax,%eax
movzwl (%r14),%esi
mov    -0x70(%rbp),%rdx
mov    %rbx,%rdi
mov    %r15,-0x58(%rbp)
mov    %r13,%r15
mov    %r9,%r13
callq  8290 <TIFFSetField@plt>
mov    %r15d,0x10(%rbx)
mov    %rax,%r15
mov    -0x70(%rbp),%rdi
callq  8bb0 <_TIFFfree@plt>
test   %r15d,%r15d
je     12417 <TIFFReadDirectory+0xca7>
mov    %r13,%r9
lea    -0x70(%rbp),%rdi
lea    -0x72(%rbp),%rdx
lea    -0x5a(%rbp),%rax
mov    -0x38(%rbp),%r10
mov    -0x30(%rbp),%rcx
lea    0x414c1(%rip),%r11        # 5362c <module.10+0x180>
mov    -0x58(%rbp),%r15
mov    $0x1,%r13d
jmpq   1200f <TIFFReadDirectory+0x89f>
mov    0x38(%rbx),%rax
and    $0x100,%rax
test   %rax,%rax
jne    1242b <TIFFReadDirectory+0xcbb>
mov    %r12,%rsi
mov    %r10,%r12
mov    %rcx,%r14
xor    %r13d,%r13d
mov    0x3b8(%rbx),%rdi
lea    0x415b6(%rip),%rdx        # 5375d <module.10+0x2b1>
mov    %r13,%rax
callq  85a0 <TIFFWarningExt@plt>
mov    %r13,%rax
mov    %r12,%r13
mov    $0x106,%esi
mov    $0x6,%edx
mov    %rbx,%rdi
callq  8290 <TIFFSetField@plt>
test   %eax,%eax
jne    1246a <TIFFReadDirectory+0xcfa>
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%r14
xor    %r15d,%r15d
jmpq   118e0 <TIFFReadDirectory+0x170>
movw   $0x1,0x7a(%rbx)
movzwl 0x78(%rbx),%eax
cmp    $0x6,%ax
jne    124e7 <TIFFReadDirectory+0xd77>
mov    %r8,%r15
mov    -0x80(%rbp),%rdi
test   %rdi,%rdi
je     12210 <TIFFReadDirectory+0xaa0>
callq  8bb0 <_TIFFfree@plt>
movq   $0x0,-0x80(%rbp)
mov    0x38(%rbx),%rax
and    $0x80000,%rax
test   %rax,%rax
jne    1223f <TIFFReadDirectory+0xacf>
movzwl 0x74(%rbx),%ecx
cmp    $0xf,%cx
ja     1253d <TIFFReadDirectory+0xdcd>
mov    %r13,%rax
shl    %cl,%rax
add    $0xffff,%eax
mov    %ax,0x8a(%rbx)
mov    0xe4(%rbx),%eax
cmp    $0x1,%eax
jbe    12578 <TIFFReadDirectory+0xe08>
movl   $0x1,0xf8(%rbx)
mov    %r13,%rax
jmpq   1254e <TIFFReadDirectory+0xdde>
movzwl 0x74(%rbx),%eax
cmp    $0x7,%ax
ja     121e3 <TIFFReadDirectory+0xa73>
mov    %rbx,%rdi
mov    %r8,%r15
lea    0x41635(%rip),%rsi        # 538b0 <module.10+0x404>
callq  18440 <MissingRequired>
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%r14
jmpq   118e0 <TIFFReadDirectory+0x170>
cmp    $0x110,%r12w
jbe    125eb <TIFFReadDirectory+0xe7b>
cmp    $0x117,%r12w
jbe    12614 <TIFFReadDirectory+0xea4>
cmp    $0x118,%r12w
je     12342 <TIFFReadDirectory+0xbd2>
cmp    $0x119,%r12w
je     12342 <TIFFReadDirectory+0xbd2>
jmpq   11fd7 <TIFFReadDirectory+0x867>
cmp    $0x143,%r12w
jbe    1262d <TIFFReadDirectory+0xebd>
cmp    $0x144,%r12w
jne    1267a <TIFFReadDirectory+0xf0a>
mov    0xe8(%rbx),%rax
test   %rax,%rax
jne    126e1 <TIFFReadDirectory+0xf71>
mov    %rsi,%r12
mov    %r9,%r13
mov    0xe4(%rbx),%edx
mov    %rbx,%rdi
mov    %r14,%rsi
callq  1b090 <TIFFFetchStripThing>
test   %eax,%eax
je     12711 <TIFFReadDirectory+0xfa1>
mov    %r13,%r9
lea    -0x70(%rbp),%rdi
lea    -0x72(%rbp),%rdx
lea    -0x5a(%rbp),%rax
mov    -0x38(%rbp),%r10
mov    -0x30(%rbp),%rcx
lea    0x41301(%rip),%r11        # 5362c <module.10+0x180>
mov    $0x1,%r13d
jmpq   1200f <TIFFReadDirectory+0x89f>
cmp    $0x153,%r12w
jne    12725 <TIFFReadDirectory+0xfb5>
mov    %rsi,%r12
mov    %r9,%r13
mov    %rbx,%rdi
mov    %r14,%rsi
callq  13690 <TIFFReadDirEntryShort>
cmp    $0x1,%eax
jne    12367 <TIFFReadDirectory+0xbf7>
mov    %rbx,%rdi
mov    %r14,%rsi
lea    -0x72(%rbp),%rdx
callq  172d0 <TIFFReadDirEntryPersampleShort>
test   %eax,%eax
jne    12736 <TIFFReadDirectory+0xfc6>
xor    %eax,%eax
movzwl (%r14),%esi
movzwl -0x72(%rbp),%edx
mov    %rbx,%rdi
callq  8290 <TIFFSetField@plt>
test   %eax,%eax
je     1275a <TIFFReadDirectory+0xfea>
movzwl (%r14),%eax
cmp    $0x102,%ax
je     1276e <TIFFReadDirectory+0xffe>
mov    %r13,%r9
lea    -0x70(%rbp),%rdi
lea    -0x72(%rbp),%rdx
lea    -0x5a(%rbp),%rax
mov    -0x38(%rbp),%r10
mov    -0x30(%rbp),%rcx
lea    0x41277(%rip),%r11        # 5362c <module.10+0x180>
mov    $0x1,%r13d
jmpq   1200f <TIFFReadDirectory+0x89f>
cmp    $0x80e4,%r12w
je     12342 <TIFFReadDirectory+0xbd2>
jmpq   11fd7 <TIFFReadDirectory+0x867>
mov    %rdi,%rdx
mov    %rsi,%r12
mov    %r9,%r13
mov    %rbx,%rdi
mov    %r14,%rsi
callq  16a40 <TIFFReadDirEntryDoubleArray>
mov    %r13,%r9
mov    %rax,%r13
lea    0x4123a(%rip),%r11        # 5362c <module.10+0x180>
jmpq   12100 <TIFFReadDirectory+0x990>
movzwl (%r14),%esi
mov    %r11,%r12
mov    %rbx,%rdi
callq  8ae0 <TIFFFieldWithTag@plt>
test   %rax,%rax
jne    12797 <TIFFReadDirectory+0x1027>
mov    %r12,%rcx
jmpq   1279b <TIFFReadDirectory+0x102b>
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%r14
xor    %r15d,%r15d
jmpq   118e0 <TIFFReadDirectory+0x170>
movzwl 0x7a(%rbx),%eax
cmp    $0x2,%ax
jne    12480 <TIFFReadDirectory+0xd10>
mov    %rcx,%r13
mov    %r10,%r14
movw   $0x6,0x7a(%rbx)
xor    %eax,%eax
mov    0x3b8(%rbx),%rdi
lea    0x4133f(%rip),%rdx        # 53790 <module.10+0x2e4>
mov    %r12,%rsi
callq  85a0 <TIFFWarningExt@plt>
mov    %r13,%rcx
mov    %r14,%r10
mov    $0x1,%r13d
xor    %r8d,%r8d
jmp    12480 <TIFFReadDirectory+0xd10>
mov    %r14,%rcx
mov    %r13,%r10
mov    $0x1,%r13d
lea    0x4102f(%rip),%r12        # 534ac <module.10>
xor    %r8d,%r8d
mov    0x38(%rbx),%rax
and    $0x40,%rax
test   %rax,%rax
jne    127da <TIFFReadDirectory+0x106a>
mov    %r12,%rsi
mov    %r10,%r12
mov    %rcx,%r14
xor    %r13d,%r13d
mov    0x3b8(%rbx),%rdi
lea    0x41334(%rip),%rdx        # 537df <module.10+0x333>
mov    %r13,%rax
callq  85a0 <TIFFWarningExt@plt>
mov    %r13,%rax
mov    %r12,%r13
mov    $0x102,%esi
mov    $0x8,%edx
mov    %rbx,%rdi
callq  8290 <TIFFSetField@plt>
test   %eax,%eax
jne    127c4 <TIFFReadDirectory+0x1054>
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%r14
xor    %r15d,%r15d
jmpq   118e0 <TIFFReadDirectory+0x170>
mov    0x38(%rbx),%rax
and    $0x1000000,%rax
test   %rax,%rax
jne    12853 <TIFFReadDirectory+0x10e3>
movzwl 0xaa(%rbx),%eax
cmp    $0x1,%ax
jne    128a5 <TIFFReadDirectory+0x1135>
mov    0xe4(%rbx),%eax
cmp    $0x1,%eax
jbe    128a5 <TIFFReadDirectory+0x1135>
mov    %rbx,%rdi
mov    %r8,%r15
lea    0x41392(%rip),%rsi        # 538b9 <module.10+0x40d>
callq  18440 <MissingRequired>
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%r14
jmpq   118e0 <TIFFReadDirectory+0x170>
movw   $0xffff,0x8a(%rbx)
jmpq   1223f <TIFFReadDirectory+0xacf>
add    $0x1,%eax
cmp    0xe4(%rbx),%eax
jae    12578 <TIFFReadDirectory+0xe08>
mov    0xe8(%rbx),%rsi
mov    %eax,%ecx
mov    (%rsi,%rcx,8),%rcx
lea    -0x1(%rax),%edx
mov    %edx,%edx
cmp    (%rsi,%rdx,8),%rcx
jae    1254b <TIFFReadDirectory+0xddb>
movl   $0x0,0xf8(%rbx)
mov    %rbx,%rdi
callq  *0x2c0(%rbx)
movzwl 0xaa(%rbx),%eax
cmp    $0x1,%ax
jne    12913 <TIFFReadDirectory+0x11a3>
mov    0xe4(%rbx),%eax
cmp    $0x1,%eax
jne    12913 <TIFFReadDirectory+0x11a3>
movzwl 0x78(%rbx),%eax
cmp    $0x1,%ax
jne    12913 <TIFFReadDirectory+0x11a3>
mov    0x10(%rbx),%eax
and    $0x8400,%eax
cmp    $0x8000,%eax
jne    12913 <TIFFReadDirectory+0x11a3>
mov    %rbx,%rdi
callq  8c70 <_TIFFFillStriles@plt>
test   %eax,%eax
jne    1299a <TIFFReadDirectory+0x122a>
mov    %r15,%rax
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x20(%rbp),%r14
mov    -0x28(%rbp),%r15
leaveq 
retq   
cmp    $0xfe,%r12w
jbe    11fcd <TIFFReadDirectory+0x85d>
cmp    $0xff,%r12w
je     129c3 <TIFFReadDirectory+0x1253>
cmp    $0x102,%r12w
je     12342 <TIFFReadDirectory+0xbd2>
jmpq   11fd7 <TIFFReadDirectory+0x867>
cmp    $0x111,%r12w
je     122de <TIFFReadDirectory+0xb6e>
cmp    $0x117,%r12w
je     12686 <TIFFReadDirectory+0xf16>
jmpq   11fd7 <TIFFReadDirectory+0x867>
cmp    $0x12d,%r12w
jne    12a08 <TIFFReadDirectory+0x1298>
movq   $0x0,-0x68(%rbp)
test   %r9d,%r9d
jg     12a19 <TIFFReadDirectory+0x12a9>
mov    %rcx,%r13
mov    %r12,%rcx
mov    %rsi,%r12
mov    %rcx,%rsi
mov    %rbx,%rdi
callq  8ae0 <TIFFFieldWithTag@plt>
mov    0x3b8(%rbx),%rdi
test   %rax,%rax
jne    12a57 <TIFFReadDirectory+0x12e7>
lea    0x40fb7(%rip),%rcx        # 5362c <module.10+0x180>
jmpq   12a5b <TIFFReadDirectory+0x12eb>
cmp    $0x145,%r12w
jne    11fd7 <TIFFReadDirectory+0x867>
mov    0xf0(%rbx),%rax
test   %rax,%rax
jne    12a98 <TIFFReadDirectory+0x1328>
mov    %r10,%rcx
mov    %rsi,%r12
mov    %r9,%r13
mov    0xe4(%rbx),%edx
mov    %rbx,%rdi
mov    %r14,%rsi
callq  1b090 <TIFFFetchStripThing>
test   %eax,%eax
je     12ac8 <TIFFReadDirectory+0x1358>
mov    %r13,%r9
lea    -0x70(%rbp),%rdi
lea    -0x72(%rbp),%rdx
lea    -0x5a(%rbp),%rax
mov    -0x38(%rbp),%r10
mov    -0x30(%rbp),%rcx
lea    0x40f56(%rip),%r11        # 5362c <module.10+0x180>
mov    $0x1,%r13d
jmpq   1200f <TIFFReadDirectory+0x89f>
xor    %eax,%eax
mov    0x3b8(%rbx),%rdi
mov    %r8,%r15
lea    0x40f48(%rip),%rdx        # 5363c <module.10+0x190>
lea    0x40db1(%rip),%rsi        # 534ac <module.10>
callq  8a00 <TIFFErrorExt@plt>
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%r14
jmpq   118e0 <TIFFReadDirectory+0x170>
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%r14
xor    %r15d,%r15d
jmpq   118e0 <TIFFReadDirectory+0x170>
cmp    $0x154,%r12w
je     120e4 <TIFFReadDirectory+0x974>
jmpq   11fd7 <TIFFReadDirectory+0x867>
movzwl (%r14),%esi
mov    %rax,%r12
mov    %rbx,%rdi
callq  8ae0 <TIFFFieldWithTag@plt>
test   %rax,%rax
jne    12adc <TIFFReadDirectory+0x136c>
lea    0x40ed7(%rip),%rcx        # 5362c <module.10+0x180>
jmpq   12ae0 <TIFFReadDirectory+0x1370>
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%r14
xor    %r15d,%r15d
jmpq   118e0 <TIFFReadDirectory+0x170>
lea    -0x70(%rbp),%rdi
lea    -0x72(%rbp),%rdx
lea    -0x5a(%rbp),%rax
mov    -0x38(%rbp),%r10
mov    -0x30(%rbp),%rcx
lea    0x40ea3(%rip),%r11        # 5362c <module.10+0x180>
mov    $0x1,%r13d
mov    %r13,%r9
jmpq   1200f <TIFFReadDirectory+0x89f>
mov    0x20(%rax),%rcx
mov    %r13,%rsi
mov    %rbx,%rdi
xor    %r15d,%r15d
mov    %r15,%r8
lea    0x40cfe(%rip),%rdx        # 534ac <module.10>
callq  17e20 <TIFFReadDirEntryOutputErr>
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%r14
jmpq   118e0 <TIFFReadDirectory+0x170>
mov    %r14,%rcx
mov    %r13,%r10
mov    $0x1,%r13d
lea    0x40cd5(%rip),%r12        # 534ac <module.10>
xor    %r8d,%r8d
mov    0x38(%rbx),%rax
and    $0x10000,%rax
test   %rax,%rax
jne    1203a <TIFFReadDirectory+0x8ca>
movzwl 0x7a(%rbx),%eax
cmp    $0x2,%ax
je     12b09 <TIFFReadDirectory+0x1399>
mov    $0x115,%r14d
movzwl 0x7a(%rbx),%eax
cmp    $0x6,%ax
je     12b63 <TIFFReadDirectory+0x13f3>
test   %ax,%ax
je     1281e <TIFFReadDirectory+0x10ae>
cmp    $0x1,%ax
jne    1203a <TIFFReadDirectory+0x8ca>
mov    %r13,%rdx
mov    %r10,%r13
mov    %r14,%rsi
mov    %rcx,%r14
mov    %r15,%r12
mov    %r8,%r15
xor    %eax,%eax
mov    %rbx,%rdi
callq  8290 <TIFFSetField@plt>
test   %eax,%eax
jne    12bb2 <TIFFReadDirectory+0x1442>
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%r14
jmpq   118e0 <TIFFReadDirectory+0x170>
mov    0xe4(%rbx),%eax
cmp    $0x1,%eax
jne    1288c <TIFFReadDirectory+0x111c>
mov    0x10(%rbx),%eax
and    $0x400,%eax
test   %eax,%eax
jne    1288c <TIFFReadDirectory+0x111c>
mov    %rcx,%r13
mov    %r10,%r14
mov    %rbx,%rdi
callq  8c70 <_TIFFFillStriles@plt>
test   %eax,%eax
jne    12bd0 <TIFFReadDirectory+0x1460>
mov    %r14,%r10
mov    $0x1,%r13d
xor    %r8d,%r8d
movzwl 0xaa(%rbx),%eax
cmp    $0x1,%ax
je     12bf1 <TIFFReadDirectory+0x1481>
mov    %r8,%r15
jmpq   121fa <TIFFReadDirectory+0xa8a>
movzwl 0xaa(%rbx),%eax
cmp    $0x2,%ax
jne    128c5 <TIFFReadDirectory+0x1155>
movzwl 0x82(%rbx),%eax
cmp    0xe4(%rbx),%eax
jne    1251a <TIFFReadDirectory+0xdaa>
mov    %r8,%r14
xor    %eax,%eax
mov    0x3b8(%rbx),%rdi
lea    0x40ff1(%rip),%rdx        # 538c9 <module.10+0x41d>
mov    %r12,%rsi
callq  85a0 <TIFFWarningExt@plt>
mov    %r15,%rdx
mov    %r14,%r15
mov    -0x80(%rbp),%rsi
mov    %rbx,%rdi
callq  18100 <EstimateStripByteCounts>
test   %eax,%eax
jns    121fa <TIFFReadDirectory+0xa8a>
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%r14
jmpq   118e0 <TIFFReadDirectory+0x170>
mov    %rbx,%rdi
callq  1b3e0 <ChopUpSingleUncompressedStrip>
mov    0x10(%rbx),%eax
and    $0xffdffff7,%eax
mov    %eax,0x10(%rbx)
movl   $0xffffffff,0x27c(%rbx)
movl   $0xffffffff,0x284(%rbx)
movl   $0xffffffff,0x2a8(%rbx)
movl   $0xffffffff,0x2ac(%rbx)
movq   $0xffffffffffffffff,0x2b0(%rbx)
mov    %rbx,%rdi
callq  8410 <TIFFScanlineSize@plt>
mov    %rax,0x358(%rbx)
test   %rax,%rax
jne    12c08 <TIFFReadDirectory+0x1498>
xor    %eax,%eax
mov    0x3b8(%rbx),%rdi
mov    %r12,%rsi
lea    0x41038(%rip),%rdx        # 539b4 <module.10+0x508>
callq  8a00 <TIFFErrorExt@plt>
mov    %r15,%rax
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x20(%rbp),%r14
mov    -0x28(%rbp),%r15
leaveq 
retq   
mov    0xf0(%rbx),%rax
test   %rax,%rax
jne    1290b <TIFFReadDirectory+0x119b>
mov    %r15,%rax
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x20(%rbp),%r14
mov    -0x28(%rbp),%r15
leaveq 
retq   
mov    %rax,%rdx
mov    %rsi,%r12
mov    %r9,%r13
mov    %rbx,%rdi
mov    %r14,%rsi
callq  13690 <TIFFReadDirEntryShort>
test   %eax,%eax
je     12c42 <TIFFReadDirectory+0x14d2>
mov    %r13,%r9
lea    -0x70(%rbp),%rdi
lea    -0x72(%rbp),%rdx
lea    -0x5a(%rbp),%rax
mov    -0x38(%rbp),%r10
mov    -0x30(%rbp),%rcx
lea    0x40c2f(%rip),%r11        # 5362c <module.10+0x180>
mov    $0x1,%r13d
jmpq   1200f <TIFFReadDirectory+0x89f>
cmp    $0x140,%r12w
je     12639 <TIFFReadDirectory+0xec9>
jmpq   11fd7 <TIFFReadDirectory+0x867>
movzwl 0x74(%rbx),%ecx
cmp    $0x18,%cx
ja     12c8b <TIFFReadDirectory+0x151b>
mov    %r12,%rax
mov    %rsi,%r12
mov    %rax,%rsi
mov    %r13,%rax
shl    %cl,%eax
cmp    $0x12d,%si
jne    12cbb <TIFFReadDirectory+0x154b>
mov    %eax,%edx
cmp    0x8(%r14),%rdx
jne    12cbb <TIFFReadDirectory+0x154b>
mov    %rax,%rdx
mov    %r8,%rax
jmpq   12cc2 <TIFFReadDirectory+0x1552>
mov    0x20(%rax),%rcx
xor    %eax,%eax
lea    0x40a48(%rip),%rsi        # 534ac <module.10>
lea    0x40c9c(%rip),%rdx        # 53707 <module.10+0x25b>
callq  85a0 <TIFFWarningExt@plt>
mov    %r13,%rcx
lea    -0x70(%rbp),%rdi
lea    -0x72(%rbp),%rdx
lea    -0x5a(%rbp),%rax
mov    -0x38(%rbp),%r10
lea    0x40ba2(%rip),%r11        # 5362c <module.10+0x180>
mov    $0x1,%r13d
xor    %r9d,%r9d
jmpq   1200f <TIFFReadDirectory+0x89f>
xor    %eax,%eax
mov    0x3b8(%rbx),%rdi
mov    %r8,%r15
lea    0x40bf2(%rip),%rdx        # 5369d <module.10+0x1f1>
lea    0x409fa(%rip),%rsi        # 534ac <module.10>
callq  8a00 <TIFFErrorExt@plt>
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%r14
jmpq   118e0 <TIFFReadDirectory+0x170>
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%r14
xor    %r15d,%r15d
jmpq   118e0 <TIFFReadDirectory+0x170>
mov    0x20(%rax),%rcx
mov    %r12,%rsi
mov    %rbx,%rdi
xor    %r15d,%r15d
mov    %r15,%r8
lea    0x409b9(%rip),%rdx        # 534ac <module.10>
callq  17e20 <TIFFReadDirEntryOutputErr>
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%r14
jmpq   118e0 <TIFFReadDirectory+0x170>
mov    %r12,%rsi
mov    %r10,%r12
mov    %rcx,%r14
xor    %r13d,%r13d
mov    0x3b8(%rbx),%rdi
lea    0x40cf5(%rip),%rdx        # 53818 <module.10+0x36c>
mov    %r13,%rax
callq  85a0 <TIFFWarningExt@plt>
mov    %r13,%rax
mov    %r14,%r13
mov    %rbx,%rdi
mov    $0x115,%r14d
mov    %r14,%rsi
mov    $0x3,%edx
callq  8290 <TIFFSetField@plt>
test   %eax,%eax
jne    12d4e <TIFFReadDirectory+0x15de>
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%r14
xor    %r15d,%r15d
jmpq   118e0 <TIFFReadDirectory+0x170>
mov    %r12,%rsi
mov    %rcx,%r12
mov    %r10,%r13
xor    %eax,%eax
mov    0x3b8(%rbx),%rdi
lea    0x40ce8(%rip),%rdx        # 53864 <module.10+0x3b8>
callq  85a0 <TIFFWarningExt@plt>
mov    %r14,%rsi
mov    %r12,%r14
mov    %rbx,%rdi
xor    %eax,%eax
mov    $0x3,%edx
callq  8290 <TIFFSetField@plt>
test   %eax,%eax
jne    12d69 <TIFFReadDirectory+0x15f9>
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%r14
xor    %r15d,%r15d
jmpq   118e0 <TIFFReadDirectory+0x170>
mov    %r14,%rcx
mov    %r15,%r8
mov    %r12,%r15
mov    %r13,%r10
mov    $0x1,%r13d
lea    0x408e1(%rip),%r12        # 534ac <module.10>
jmpq   1203a <TIFFReadDirectory+0x8ca>
mov    0x0(%r13),%rax
mov    (%rax),%rcx
test   %rcx,%rcx
jne    12d84 <TIFFReadDirectory+0x1614>
mov    %r14,%r10
mov    $0x1,%r13d
xor    %r8d,%r8d
jmpq   1288c <TIFFReadDirectory+0x111c>
mov    0xe4(%rbx),%eax
cmp    $0x2,%eax
ja     12dd9 <TIFFReadDirectory+0x1669>
mov    %r8,%r15
jmpq   121fa <TIFFReadDirectory+0xa8a>
mov    0x10(%rbx),%eax
and    $0x400,%eax
test   %eax,%eax
jne    12def <TIFFReadDirectory+0x167f>
mov    %rbx,%rdi
callq  8070 <TIFFStripSize@plt>
test   %rax,%rax
je     12e20 <TIFFReadDirectory+0x16b0>
mov    %r13,%rax
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x20(%rbp),%r14
mov    -0x28(%rbp),%r15
leaveq 
retq   
movzwl -0x5a(%rbp),%eax
cmp    $0x2,%ax
jne    12e51 <TIFFReadDirectory+0x16e1>
pushq  -0x50(%rbp)
popq   -0x58(%rbp)
mov    -0x58(%rbp),%rdx
test   %edx,%edx
jne    12e66 <TIFFReadDirectory+0x16f6>
mov    %r13,%r9
lea    -0x70(%rbp),%rdi
lea    -0x72(%rbp),%rdx
lea    -0x5a(%rbp),%rax
mov    -0x38(%rbp),%r10
mov    -0x30(%rbp),%rcx
lea    0x409ac(%rip),%r11        # 5362c <module.10+0x180>
mov    $0x1,%r13d
jmpq   1200f <TIFFReadDirectory+0x89f>
mov    %r9,%r13
mov    %r12,%r9
mov    %rsi,%r12
mov    %r9,%rsi
mov    %rbx,%rdi
callq  8ae0 <TIFFFieldWithTag@plt>
mov    0x3b8(%rbx),%rdi
test   %rax,%rax
jne    12e9e <TIFFReadDirectory+0x172e>
lea    0x40976(%rip),%rcx        # 5362c <module.10+0x180>
jmpq   12ea2 <TIFFReadDirectory+0x1732>
mov    $0x3,%edx
shl    %cl,%edx
mov    %edx,%ecx
cmp    0x8(%r14),%rcx
jne    12cf0 <TIFFReadDirectory+0x1580>
mov    %rbx,%rdi
mov    %r14,%rsi
lea    -0x68(%rbp),%rdx
mov    %r15,-0x58(%rbp)
mov    %r9,%r13
mov    %rax,%r15
callq  14bc0 <TIFFReadDirEntryShortArray>
mov    %r13,%r9
mov    %rax,%r13
mov    %r15,%rax
mov    -0x58(%rbp),%r15
test   %r13d,%r13d
jne    12ee5 <TIFFReadDirectory+0x1775>
mov    -0x68(%rbp),%rdx
mov    %eax,%ecx
lea    (%rdx,%rcx,2),%rcx
add    %eax,%eax
mov    %eax,%eax
lea    (%rdx,%rax,2),%r8
mov    %r9,%r13
xor    %eax,%eax
movzwl (%r14),%esi
mov    %rbx,%rdi
callq  8290 <TIFFSetField@plt>
mov    -0x68(%rbp),%rdi
callq  8bb0 <_TIFFfree@plt>
mov    %r13,%r9
lea    -0x70(%rbp),%rdi
lea    -0x72(%rbp),%rdx
lea    -0x5a(%rbp),%rax
mov    -0x38(%rbp),%r10
mov    -0x30(%rbp),%rcx
lea    0x408e9(%rip),%r11        # 5362c <module.10+0x180>
mov    $0x1,%r13d
jmpq   1200f <TIFFReadDirectory+0x89f>
mov    %r13,%rcx
mov    %r12,%r10
mov    $0x1,%r13d
lea    0x4074b(%rip),%r12        # 534ac <module.10>
xor    %r8d,%r8d
jmpq   12801 <TIFFReadDirectory+0x1091>
mov    %r14,%rcx
mov    %r13,%r10
mov    $0x1,%r13d
lea    0x40730(%rip),%r12        # 534ac <module.10>
xor    %r8d,%r8d
jmpq   1203a <TIFFReadDirectory+0x8ca>
mov    (%r14),%rax
mov    (%rax),%rax
test   %rax,%rax
jne    12f0d <TIFFReadDirectory+0x179d>
test   %rcx,%rcx
je     12f0d <TIFFReadDirectory+0x179d>
xor    %eax,%eax
mov    0x3b8(%rbx),%rdi
lea    0x40b76(%rip),%rdx        # 53922 <module.10+0x476>
mov    %r12,%rsi
callq  85a0 <TIFFWarningExt@plt>
mov    %r15,%rdx
mov    -0x80(%rbp),%rsi
mov    %rbx,%rdi
callq  18100 <EstimateStripByteCounts>
test   %eax,%eax
js     12f38 <TIFFReadDirectory+0x17c8>
mov    $0x1,%r13d
xor    %r15d,%r15d
jmpq   121fa <TIFFReadDirectory+0xa8a>
movzwl 0x78(%rbx),%eax
cmp    $0x1,%ax
je     12f4c <TIFFReadDirectory+0x17dc>
mov    %r8,%r15
jmpq   121fa <TIFFReadDirectory+0xa8a>
mov    %rbx,%rdi
callq  8910 <TIFFTileSize@plt>
mov    %rax,0x2b0(%rbx)
test   %rax,%rax
je     12f67 <TIFFReadDirectory+0x17f7>
mov    %r13,%rax
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x20(%rbp),%r14
mov    -0x28(%rbp),%r15
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rbx),%rdi
mov    %r12,%rsi
lea    0x40bbf(%rip),%rdx        # 539f2 <module.10+0x546>
callq  8a00 <TIFFErrorExt@plt>
mov    %r15,%rax
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x20(%rbp),%r14
mov    -0x28(%rbp),%r15
leaveq 
retq   
cmp    $0x3,%ax
je     12f98 <TIFFReadDirectory+0x1828>
pushq  -0x40(%rbp)
popq   -0x58(%rbp)
jmpq   12c56 <TIFFReadDirectory+0x14e6>
xor    %eax,%eax
mov    %rbx,%rdi
mov    $0xfe,%esi
callq  8290 <TIFFSetField@plt>
mov    %r13,%r9
lea    -0x70(%rbp),%rdi
lea    -0x72(%rbp),%rdx
lea    -0x5a(%rbp),%rax
mov    -0x38(%rbp),%r10
mov    -0x30(%rbp),%rcx
lea    0x40799(%rip),%r11        # 5362c <module.10+0x180>
mov    $0x1,%r13d
jmpq   1200f <TIFFReadDirectory+0x89f>
mov    0x20(%rax),%rcx
xor    %eax,%eax
movzwl 0x74(%rbx),%r8d
lea    0x405fc(%rip),%rsi        # 534ac <module.10>
lea    0x4087e(%rip),%rdx        # 53735 <module.10+0x289>
callq  85a0 <TIFFWarningExt@plt>
mov    %r13,%r9
lea    -0x70(%rbp),%rdi
lea    -0x72(%rbp),%rdx
lea    -0x5a(%rbp),%rax
mov    -0x38(%rbp),%r10
mov    -0x30(%rbp),%rcx
lea    0x40752(%rip),%r11        # 5362c <module.10+0x180>
mov    $0x1,%r13d
jmpq   1200f <TIFFReadDirectory+0x89f>
movzwl (%r14),%esi
mov    %rbx,%rdi
mov    %r15,-0x58(%rbp)
mov    %r9,%r15
callq  8ae0 <TIFFFieldWithTag@plt>
test   %rax,%rax
jne    12fa3 <TIFFReadDirectory+0x1833>
lea    0x40724(%rip),%rcx        # 5362c <module.10+0x180>
jmpq   12fa7 <TIFFReadDirectory+0x1837>
movzwl 0x78(%rbx),%eax
cmp    $0x1,%ax
je     12fe9 <TIFFReadDirectory+0x1879>
mov    %r14,%r10
movslq 0xc(%rbx),%rax
test   %eax,%eax
je     13010 <TIFFReadDirectory+0x18a0>
mov    $0x1,%r13d
xor    %r8d,%r8d
jmpq   1288c <TIFFReadDirectory+0x111c>
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%r14
xor    %r15d,%r15d
jmpq   118e0 <TIFFReadDirectory+0x170>
mov    (%r10),%rax
mov    0x8(%rax),%rcx
mov    (%rax),%rax
cmp    %rax,%rcx
jne    13028 <TIFFReadDirectory+0x18b8>
mov    %r8,%r15
jmpq   121fa <TIFFReadDirectory+0xa8a>
xor    %eax,%eax
mov    0x3b8(%rbx),%rdi
mov    %r12,%rsi
lea    0x40a5b(%rip),%rdx        # 539d5 <module.10+0x529>
callq  8a00 <TIFFErrorExt@plt>
mov    %r15,%rax
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x20(%rbp),%r14
mov    -0x28(%rbp),%r15
leaveq 
retq   
pushq  -0x48(%rbp)
popq   -0x58(%rbp)
jmpq   12c56 <TIFFReadDirectory+0x14e6>
mov    0x20(%rax),%rcx
mov    %r13,%rsi
mov    %rbx,%rdi
lea    0x404f8(%rip),%rdx        # 534ac <module.10>
mov    $0x1,%r13d
mov    %r13,%r8
callq  17e20 <TIFFReadDirEntryOutputErr>
mov    %r15,%r9
lea    -0x70(%rbp),%rdi
lea    -0x72(%rbp),%rdx
lea    -0x5a(%rbp),%rax
mov    -0x38(%rbp),%r10
mov    -0x30(%rbp),%rcx
lea    0x4064c(%rip),%r11        # 5362c <module.10+0x180>
mov    -0x58(%rbp),%r15
jmpq   1200f <TIFFReadDirectory+0x89f>
mov    %rcx,%r12
mov    0x3e0(%rbx),%rax
mov    0x3b8(%rbx),%rdi
callq  *%rax
cmp    %rax,%r12
jbe    13035 <TIFFReadDirectory+0x18c5>
mov    %r14,%r10
lea    0x404a1(%rip),%r12        # 534ac <module.10>
jmpq   12f1e <TIFFReadDirectory+0x17ae>
movzwl 0x78(%rbx),%eax
cmp    $0x1,%ax
je     13066 <TIFFReadDirectory+0x18f6>
mov    $0x1,%r13d
xor    %r8d,%r8d
jmpq   1288c <TIFFReadDirectory+0x111c>
test   %rax,%rax
jne    13098 <TIFFReadDirectory+0x1928>
mov    %r8,%r15
jmpq   121fa <TIFFReadDirectory+0xa8a>
mov    0x3e0(%rbx),%rax
mov    0x3b8(%rbx),%rdi
mov    (%r14),%rcx
mov    (%rcx),%r12
callq  *%rax
mov    0x0(%r13),%rcx
mov    (%rcx),%rcx
sub    %rcx,%rax
cmp    %r12,%rax
jae    130a5 <TIFFReadDirectory+0x1935>
lea    0x4044b(%rip),%r12        # 534ac <module.10>
jmpq   12d9c <TIFFReadDirectory+0x162c>
mov    (%r10),%rax
mov    (%rax),%r13
mov    %r10,%r14
mov    %rbx,%rdi
callq  8220 <TIFFScanlineSize64@plt>
mov    0x5c(%rbx),%ecx
imul   %rax,%rcx
cmp    %r13,%rcx
ja     12d9c <TIFFReadDirectory+0x162c>
mov    %r14,%r10
mov    $0x1,%r13d
xor    %r8d,%r8d
jmpq   1288c <TIFFReadDirectory+0x111c>
test   %rcx,%rcx
jne    130b4 <TIFFReadDirectory+0x1944>
mov    %r8,%r15
jmpq   121fa <TIFFReadDirectory+0xa8a>
mov    %r14,%r10
lea    0x403fd(%rip),%r12        # 534ac <module.10>
jmpq   12f1e <TIFFReadDirectory+0x17ae>
mov    %r8,%r14
xor    %eax,%eax
mov    0x3b8(%rbx),%rdi
lea    0x408a4(%rip),%rdx        # 5396b <module.10+0x4bf>
mov    %r12,%rsi
callq  85a0 <TIFFWarningExt@plt>
mov    %r15,%rdx
mov    %r14,%r15
mov    -0x80(%rbp),%rsi
mov    %rbx,%rdi
callq  18100 <EstimateStripByteCounts>
test   %eax,%eax
jns    121fa <TIFFReadDirectory+0xa8a>
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%r14
jmpq   118e0 <TIFFReadDirectory+0x170>
nopw   0x0(%rax,%rax,1)

0000000000013100 <TIFFReadCustomDirectory>:
push   %rbp
mov    %rsp,%rbp
sub    $0x40,%rsp
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rsi,%r14
mov    %rdx,%rsi
mov    %r13,%r15
mov    %r12,%r13
mov    %rbx,%r12
mov    %rdi,%rbx
callq  82d0 <_TIFFSetupFields@plt>
lea    -0x38(%rbp),%rdx
xor    %ecx,%ecx
mov    %rbx,%rdi
mov    %r14,%rsi
callq  18670 <TIFFFetchDirectory>
test   %ax,%ax
jne    13171 <TIFFReadCustomDirectory+0x71>
xor    %eax,%eax
mov    0x3b8(%rbx),%rdi
mov    %r14,%rcx
lea    0x408d8(%rip),%rdx        # 53a28 <module.43+0x18>
lea    0x408b9(%rip),%rsi        # 53a10 <module.43>
callq  8a00 <TIFFErrorExt@plt>
mov    %r12,%rbx
mov    %r13,%r12
mov    %r15,%r13
xor    %eax,%eax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
leaveq 
retq   
mov    %rax,%r14
mov    %rbx,%rdi
callq  8510 <TIFFFreeDirectory@plt>
lea    0x38(%rbx),%rdi
mov    $0x118,%edx
xor    %eax,%eax
mov    %rax,%rsi
mov    %r15,-0x18(%rbp)
mov    %rax,%r15
callq  88e0 <_TIFFmemset@plt>
mov    -0x38(%rbp),%rsi
mov    %rbx,%rdi
mov    %r14,%rdx
callq  18000 <TIFFReadDirectoryCheckOrder>
mov    -0x38(%rbp),%rcx
mov    $0x1,%eax
lea    -0x2c(%rbp),%rdx
mov    %r12,-0x8(%rbp)
mov    %r13,-0x10(%rbp)
mov    %rcx,%r13
lea    0x4084c(%rip),%r12        # 53a10 <module.43>
jmpq   13250 <TIFFReadCustomDirectory+0x150>
movzwl 0x0(%r13),%esi
mov    %rbx,%rdi
callq  18080 <TIFFReadDirectoryFindFieldInfo>
mov    -0x2c(%rbp),%eax
cmp    $0xffffffff,%eax
je     1327d <TIFFReadCustomDirectory+0x17d>
lea    -0x2c(%rbp),%rdx
movzwl 0x0(%r13),%eax
test   %ax,%ax
je     13243 <TIFFReadCustomDirectory+0x143>
mov    0x3f0(%rbx),%rcx
mov    -0x2c(%rbp),%eax
mov    (%rcx,%rax,8),%rsi
movzwl 0x18(%rsi),%eax
test   %ax,%ax
jne    1333f <TIFFReadCustomDirectory+0x23f>
movw   $0x0,0x0(%r13)
movzwl 0x0(%r13),%eax
test   %ax,%ax
je     13243 <TIFFReadCustomDirectory+0x143>
cmp    $0x9206,%ax
je     13348 <TIFFReadCustomDirectory+0x248>
mov    %rdx,%r12
mov    %rbx,%rdi
mov    %r13,%rsi
mov    $0x1,%edx
callq  18eb0 <TIFFFetchNormalTag>
mov    %r12,%rdx
lea    0x407cd(%rip),%r12        # 53a10 <module.43>
add    $0x18,%r13
add    $0x1,%r15d
mov    $0x1,%eax
cmp    %r15w,%r14w
ja     131c9 <TIFFReadCustomDirectory+0xc9>
mov    -0x38(%rbp),%rdi
test   %rdi,%rdi
jne    13365 <TIFFReadCustomDirectory+0x265>
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x18(%rbp),%r13
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rbx),%rdi
movzwl 0x0(%r13),%ecx
mov    %rcx,%r8
mov    %r12,%rsi
lea    0x40259(%rip),%rdx        # 534f1 <module.10+0x45>
callq  85a0 <TIFFWarningExt@plt>
movzwl 0x0(%r13),%esi
movzwl 0x2(%r13),%edx
mov    %rbx,%rdi
callq  8590 <_TIFFCreateAnonField@plt>
mov    %rax,%rsi
mov    %rbx,%rdi
mov    $0x1,%edx
callq  8520 <_TIFFMergeFields@plt>
test   %eax,%eax
jne    13386 <TIFFReadCustomDirectory+0x286>
mov    %r12,%rsi
xor    %eax,%eax
mov    0x3b8(%rbx),%rdi
movzwl 0x0(%r13),%ecx
mov    %rcx,%r8
lea    0x4023c(%rip),%rdx        # 5351e <module.10+0x72>
callq  85a0 <TIFFWarningExt@plt>
movw   $0x0,0x0(%r13)
lea    -0x2c(%rbp),%rdx
lea    0x40717(%rip),%r12        # 53a10 <module.43>
jmpq   131e6 <TIFFReadCustomDirectory+0xe6>
movzwl 0x2(%r13),%eax
cmp    %eax,%ecx
je     133b8 <TIFFReadCustomDirectory+0x2b8>
mov    -0x2c(%rbp),%eax
add    $0x1,%eax
mov    %eax,-0x2c(%rbp)
mov    0x3f8(%rbx),%rdi
mov    %eax,%ecx
cmp    %rcx,%rdi
je     133b1 <TIFFReadCustomDirectory+0x2b1>
mov    0x3f0(%rbx),%rcx
mov    %eax,%eax
mov    (%rcx,%rax,8),%rcx
movzwl 0x0(%r13),%eax
cmp    (%rcx),%eax
jne    133b1 <TIFFReadCustomDirectory+0x2b1>
mov    %rcx,%rsi
mov    0x8(%rsi),%ecx
test   %ecx,%ecx
jne    132fe <TIFFReadCustomDirectory+0x1fe>
jmp    133b8 <TIFFReadCustomDirectory+0x2b8>
mov    %rdx,%r12
mov    %rbx,%rdi
mov    %r13,%rsi
callq  1b260 <TIFFFetchSubjectDistance>
mov    %r12,%rdx
lea    0x406b0(%rip),%r12        # 53a10 <module.43>
jmpq   13243 <TIFFReadCustomDirectory+0x143>
mov    %rax,%r15
callq  8bb0 <_TIFFfree@plt>
mov    %r15,%rax
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x18(%rbp),%r13
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
leaveq 
retq   
movzwl 0x0(%r13),%esi
mov    %rbx,%rdi
lea    -0x2c(%rbp),%r12
mov    %r12,%rdx
callq  18080 <TIFFReadDirectoryFindFieldInfo>
mov    -0x2c(%rbp),%eax
cmp    $0xfffffffe,%eax
ja     1340c <TIFFReadCustomDirectory+0x30c>
mov    %r12,%rdx
lea    0x40664(%rip),%r12        # 53a10 <module.43>
jmpq   131e6 <TIFFReadCustomDirectory+0xe6>
movl   $0xffff,-0x2c(%rbp)
mov    -0x2c(%rbp),%eax
cmp    $0xffff,%eax
je     1342b <TIFFReadCustomDirectory+0x32b>
movswq 0x4(%rsi),%rax
cmp    $0xffff,%ax
je     13212 <TIFFReadCustomDirectory+0x112>
cmp    $0xfffd,%ax
je     13212 <TIFFReadCustomDirectory+0x112>
cmp    $0xfffe,%ax
jne    133e8 <TIFFReadCustomDirectory+0x2e8>
movzwl 0x82(%rbx),%eax
mov    %rdx,%r12
mov    %rax,%rdx
mov    %rbx,%rdi
mov    %r13,%rsi
callq  18560 <CheckDirCount>
test   %eax,%eax
je     13465 <TIFFReadCustomDirectory+0x365>
mov    %r12,%rdx
lea    0x40609(%rip),%r12        # 53a10 <module.43>
jmpq   13212 <TIFFReadCustomDirectory+0x112>
lea    0x40141(%rip),%rdi        # 53554 <module.10+0xa8>
lea    0x4014c(%rip),%rsi        # 53566 <module.10+0xba>
mov    $0x10f6,%edx
lea    0x40630(%rip),%rcx        # 53a56 <module.43+0x46>
callq  8490 <__assert_fail@plt>
xor    %eax,%eax
mov    0x3b8(%rbx),%rdi
movzwl 0x2(%r13),%ecx
mov    0x20(%rsi),%r8
mov    %r12,%rsi
mov    %rdx,%r12
lea    0x40624(%rip),%rdx        # 53a6e <module.43+0x5e>
callq  85a0 <TIFFWarningExt@plt>
movw   $0x0,0x0(%r13)
mov    %r12,%rdx
lea    0x405b0(%rip),%r12        # 53a10 <module.43>
jmpq   13212 <TIFFReadCustomDirectory+0x112>
movw   $0x0,0x0(%r13)
mov    %r12,%rdx
lea    0x4059a(%rip),%r12        # 53a10 <module.43>
jmpq   13212 <TIFFReadCustomDirectory+0x112>
nopl   0x0(%rax,%rax,1)

0000000000013480 <TIFFReadEXIFDirectory>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rsi,%r14
mov    %rdi,%r15
callq  8200 <_TIFFGetExifFields@plt>
mov    %rax,%rdx
mov    %r14,%rsi
mov    %r15,%rdi
callq  8190 <TIFFReadCustomDirectory@plt>
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

00000000000134c0 <_TIFFFillStriles>:
push   %rbp
mov    %rsp,%rbp
mov    $0x1,%esi
callq  1b690 <_TIFFFillStrilesInternal>
leaveq 
retq   

00000000000134d0 <TIFFReadDirEntryByte>:
push   %rbp
mov    %rsp,%rbp
sub    $0x50,%rsp
mov    0x8(%rsi),%rax
cmp    $0x1,%rax
je     134e9 <TIFFReadDirEntryByte+0x19>
mov    $0x1,%eax
leaveq 
retq   
mov    $0x2,%eax
movzwl 0x2(%rsi),%ecx
add    $0xffffffff,%ecx
cmp    $0x10,%ecx
jbe    134fc <TIFFReadDirEntryByte+0x2c>
leaveq 
retq   
lea    0x3f80d(%rip),%r8        # 52d10 <reason.25+0xbea>
movslq (%r8,%rcx,4),%rcx
add    %r8,%rcx
jmpq   *%rcx
leaveq 
retq   
callq  17370 <TIFFReadDirEntryCheckedByte>
xor    %eax,%eax
leaveq 
retq   
lea    -0x45(%rbp),%rax
mov    %rdx,-0x28(%rbp)
mov    %rax,%rdx
callq  17380 <TIFFReadDirEntryCheckedSbyte>
movsbq -0x45(%rbp),%rdi
mov    %rdi,-0x8(%rbp)
callq  17850 <TIFFReadDirEntryCheckRangeByteSbyte>
test   %eax,%eax
je     135ff <TIFFReadDirEntryByte+0x12f>
leaveq 
retq   
lea    -0x44(%rbp),%rax
mov    %rdx,-0x28(%rbp)
mov    %rax,%rdx
callq  17390 <TIFFReadDirEntryCheckedShort>
movzwl -0x44(%rbp),%edi
mov    %rdi,-0x10(%rbp)
callq  17870 <TIFFReadDirEntryCheckRangeByteShort>
test   %eax,%eax
je     1360d <TIFFReadDirEntryByte+0x13d>
leaveq 
retq   
lea    -0x42(%rbp),%rax
mov    %rdx,-0x28(%rbp)
mov    %rax,%rdx
callq  173c0 <TIFFReadDirEntryCheckedSshort>
movswq -0x42(%rbp),%rdi
mov    %rdi,-0x10(%rbp)
callq  17890 <TIFFReadDirEntryCheckRangeByteSshort>
test   %eax,%eax
je     1361b <TIFFReadDirEntryByte+0x14b>
leaveq 
retq   
lea    -0x40(%rbp),%rax
mov    %rdx,-0x28(%rbp)
mov    %rax,%rdx
callq  173f0 <TIFFReadDirEntryCheckedLong>
mov    -0x40(%rbp),%edi
mov    %rdi,-0x18(%rbp)
callq  178b0 <TIFFReadDirEntryCheckRangeByteLong>
test   %eax,%eax
je     13629 <TIFFReadDirEntryByte+0x159>
leaveq 
retq   
lea    -0x3c(%rbp),%rax
mov    %rdx,-0x28(%rbp)
mov    %rax,%rdx
callq  17420 <TIFFReadDirEntryCheckedSlong>
movslq -0x3c(%rbp),%rdi
mov    %rdi,-0x18(%rbp)
callq  178d0 <TIFFReadDirEntryCheckRangeByteSlong>
test   %eax,%eax
je     13637 <TIFFReadDirEntryByte+0x167>
leaveq 
retq   
lea    -0x38(%rbp),%rax
mov    %rdx,-0x28(%rbp)
mov    %rax,%rdx
callq  17450 <TIFFReadDirEntryCheckedLong8>
test   %eax,%eax
je     13645 <TIFFReadDirEntryByte+0x175>
leaveq 
retq   
lea    -0x30(%rbp),%rax
mov    %rdx,-0x28(%rbp)
mov    %rax,%rdx
callq  17500 <TIFFReadDirEntryCheckedSlong8>
test   %eax,%eax
je     13658 <TIFFReadDirEntryByte+0x188>
leaveq 
retq   
mov    -0x8(%rbp),%rcx
mov    -0x28(%rbp),%rax
mov    %cl,(%rax)
xor    %eax,%eax
leaveq 
retq   
mov    -0x10(%rbp),%rcx
mov    -0x28(%rbp),%rax
mov    %cl,(%rax)
xor    %eax,%eax
leaveq 
retq   
mov    -0x10(%rbp),%rcx
mov    -0x28(%rbp),%rax
mov    %cl,(%rax)
xor    %eax,%eax
leaveq 
retq   
mov    -0x18(%rbp),%rcx
mov    -0x28(%rbp),%rax
mov    %cl,(%rax)
xor    %eax,%eax
leaveq 
retq   
mov    -0x18(%rbp),%rcx
mov    -0x28(%rbp),%rax
mov    %cl,(%rax)
xor    %eax,%eax
leaveq 
retq   
mov    -0x38(%rbp),%rdi
mov    %rdi,-0x20(%rbp)
callq  178f0 <TIFFReadDirEntryCheckRangeByteLong8>
test   %eax,%eax
je     1366b <TIFFReadDirEntryByte+0x19b>
leaveq 
retq   
mov    -0x30(%rbp),%rdi
mov    %rdi,-0x20(%rbp)
callq  17910 <TIFFReadDirEntryCheckRangeByteSlong8>
test   %eax,%eax
je     13679 <TIFFReadDirEntryByte+0x1a9>
leaveq 
retq   
mov    -0x20(%rbp),%rcx
mov    -0x28(%rbp),%rax
mov    %cl,(%rax)
xor    %eax,%eax
leaveq 
retq   
mov    -0x20(%rbp),%rcx
mov    -0x28(%rbp),%rax
mov    %cl,(%rax)
xor    %eax,%eax
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

0000000000013690 <TIFFReadDirEntryShort>:
push   %rbp
mov    %rsp,%rbp
sub    $0x40,%rsp
mov    0x8(%rsi),%rax
cmp    $0x1,%rax
je     136a9 <TIFFReadDirEntryShort+0x19>
mov    $0x1,%eax
leaveq 
retq   
mov    $0x2,%eax
movzwl 0x2(%rsi),%ecx
add    $0xffffffff,%ecx
cmp    $0x10,%ecx
jbe    136bc <TIFFReadDirEntryShort+0x2c>
leaveq 
retq   
lea    0x3f691(%rip),%r8        # 52d54 <reason.25+0xc2e>
movslq (%r8,%rcx,4),%rcx
add    %r8,%rcx
jmpq   *%rcx
leaveq 
retq   
lea    -0x3c(%rbp),%rax
mov    %r15,-0x20(%rbp)
mov    %rdx,%r15
mov    %rax,%rdx
callq  17370 <TIFFReadDirEntryCheckedByte>
movzbl -0x3c(%rbp),%eax
mov    %ax,(%r15)
mov    -0x20(%rbp),%r15
xor    %eax,%eax
leaveq 
retq   
lea    -0x3b(%rbp),%rax
mov    %rdx,-0x20(%rbp)
mov    %rax,%rdx
callq  17380 <TIFFReadDirEntryCheckedSbyte>
movsbq -0x3b(%rbp),%rdi
mov    %rdi,-0x8(%rbp)
callq  17a10 <TIFFReadDirEntryCheckRangeShortSbyte>
test   %eax,%eax
je     137bb <TIFFReadDirEntryShort+0x12b>
leaveq 
retq   
callq  17390 <TIFFReadDirEntryCheckedShort>
xor    %eax,%eax
leaveq 
retq   
lea    -0x3a(%rbp),%rax
mov    %rdx,-0x20(%rbp)
mov    %rax,%rdx
callq  173c0 <TIFFReadDirEntryCheckedSshort>
movswq -0x3a(%rbp),%rdi
mov    %rdi,-0x8(%rbp)
callq  17a30 <TIFFReadDirEntryCheckRangeShortSshort>
test   %eax,%eax
je     137ca <TIFFReadDirEntryShort+0x13a>
leaveq 
retq   
lea    -0x38(%rbp),%rax
mov    %rdx,-0x20(%rbp)
mov    %rax,%rdx
callq  173f0 <TIFFReadDirEntryCheckedLong>
mov    -0x38(%rbp),%edi
mov    %rdi,-0x10(%rbp)
callq  17a50 <TIFFReadDirEntryCheckRangeShortLong>
test   %eax,%eax
je     137d9 <TIFFReadDirEntryShort+0x149>
leaveq 
retq   
lea    -0x34(%rbp),%rax
mov    %rdx,-0x20(%rbp)
mov    %rax,%rdx
callq  17420 <TIFFReadDirEntryCheckedSlong>
movslq -0x34(%rbp),%rdi
mov    %rdi,-0x10(%rbp)
callq  17a70 <TIFFReadDirEntryCheckRangeShortSlong>
test   %eax,%eax
je     137e8 <TIFFReadDirEntryShort+0x158>
leaveq 
retq   
lea    -0x30(%rbp),%rax
mov    %rdx,-0x20(%rbp)
mov    %rax,%rdx
callq  17450 <TIFFReadDirEntryCheckedLong8>
test   %eax,%eax
je     137f7 <TIFFReadDirEntryShort+0x167>
leaveq 
retq   
lea    -0x28(%rbp),%rax
mov    %rdx,-0x20(%rbp)
mov    %rax,%rdx
callq  17500 <TIFFReadDirEntryCheckedSlong8>
test   %eax,%eax
je     1380a <TIFFReadDirEntryShort+0x17a>
leaveq 
retq   
mov    -0x8(%rbp),%rcx
mov    -0x20(%rbp),%rax
mov    %cx,(%rax)
xor    %eax,%eax
leaveq 
retq   
mov    -0x8(%rbp),%rcx
mov    -0x20(%rbp),%rax
mov    %cx,(%rax)
xor    %eax,%eax
leaveq 
retq   
mov    -0x10(%rbp),%rcx
mov    -0x20(%rbp),%rax
mov    %cx,(%rax)
xor    %eax,%eax
leaveq 
retq   
mov    -0x10(%rbp),%rcx
mov    -0x20(%rbp),%rax
mov    %cx,(%rax)
xor    %eax,%eax
leaveq 
retq   
mov    -0x30(%rbp),%rdi
mov    %rdi,-0x18(%rbp)
callq  17a90 <TIFFReadDirEntryCheckRangeShortLong8>
test   %eax,%eax
je     1381d <TIFFReadDirEntryShort+0x18d>
leaveq 
retq   
mov    -0x28(%rbp),%rdi
mov    %rdi,-0x18(%rbp)
callq  17ab0 <TIFFReadDirEntryCheckRangeShortSlong8>
test   %eax,%eax
je     1382c <TIFFReadDirEntryShort+0x19c>
leaveq 
retq   
mov    -0x18(%rbp),%rcx
mov    -0x20(%rbp),%rax
mov    %cx,(%rax)
xor    %eax,%eax
leaveq 
retq   
mov    -0x18(%rbp),%rcx
mov    -0x20(%rbp),%rax
mov    %cx,(%rax)
xor    %eax,%eax
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

0000000000013840 <TIFFReadDirEntryLong>:
push   %rbp
mov    %rsp,%rbp
sub    $0x40,%rsp
mov    0x8(%rsi),%rax
cmp    $0x1,%rax
je     13859 <TIFFReadDirEntryLong+0x19>
mov    $0x1,%eax
leaveq 
retq   
mov    $0x2,%eax
movzwl 0x2(%rsi),%ecx
add    $0xffffffff,%ecx
cmp    $0x10,%ecx
jbe    1386c <TIFFReadDirEntryLong+0x2c>
leaveq 
retq   
lea    0x3f525(%rip),%r8        # 52d98 <reason.25+0xc72>
movslq (%r8,%rcx,4),%rcx
add    %r8,%rcx
jmpq   *%rcx
leaveq 
retq   
lea    -0x3a(%rbp),%rax
mov    %r15,-0x20(%rbp)
mov    %rdx,%r15
mov    %rax,%rdx
callq  17370 <TIFFReadDirEntryCheckedByte>
movzbl -0x3a(%rbp),%eax
mov    %eax,(%r15)
mov    -0x20(%rbp),%r15
xor    %eax,%eax
leaveq 
retq   
lea    -0x39(%rbp),%rax
mov    %rdx,-0x20(%rbp)
mov    %rax,%rdx
callq  17380 <TIFFReadDirEntryCheckedSbyte>
movsbq -0x39(%rbp),%rdi
mov    %rdi,-0x8(%rbp)
callq  17b90 <TIFFReadDirEntryCheckRangeLongSbyte>
test   %eax,%eax
je     13966 <TIFFReadDirEntryLong+0x126>
leaveq 
retq   
lea    -0x38(%rbp),%rax
mov    %r15,-0x20(%rbp)
mov    %rdx,%r15
mov    %rax,%rdx
callq  17390 <TIFFReadDirEntryCheckedShort>
movzwl -0x38(%rbp),%eax
mov    %eax,(%r15)
mov    -0x20(%rbp),%r15
xor    %eax,%eax
leaveq 
retq   
lea    -0x36(%rbp),%rax
mov    %rdx,-0x20(%rbp)
mov    %rax,%rdx
callq  173c0 <TIFFReadDirEntryCheckedSshort>
movswq -0x36(%rbp),%rdi
mov    %rdi,-0x10(%rbp)
callq  17bb0 <TIFFReadDirEntryCheckRangeLongSshort>
test   %eax,%eax
je     13974 <TIFFReadDirEntryLong+0x134>
leaveq 
retq   
callq  173f0 <TIFFReadDirEntryCheckedLong>
xor    %eax,%eax
leaveq 
retq   
lea    -0x34(%rbp),%rax
mov    %rdx,-0x20(%rbp)
mov    %rax,%rdx
callq  17420 <TIFFReadDirEntryCheckedSlong>
movslq -0x34(%rbp),%rdi
mov    %rdi,-0x10(%rbp)
callq  17bd0 <TIFFReadDirEntryCheckRangeLongSlong>
test   %eax,%eax
je     13982 <TIFFReadDirEntryLong+0x142>
leaveq 
retq   
lea    -0x30(%rbp),%rax
mov    %rdx,-0x20(%rbp)
mov    %rax,%rdx
callq  17450 <TIFFReadDirEntryCheckedLong8>
test   %eax,%eax
je     13990 <TIFFReadDirEntryLong+0x150>
leaveq 
retq   
lea    -0x28(%rbp),%rax
mov    %rdx,-0x20(%rbp)
mov    %rax,%rdx
callq  17500 <TIFFReadDirEntryCheckedSlong8>
test   %eax,%eax
je     139a3 <TIFFReadDirEntryLong+0x163>
leaveq 
retq   
mov    -0x8(%rbp),%rcx
mov    -0x20(%rbp),%rax
mov    %ecx,(%rax)
xor    %eax,%eax
leaveq 
retq   
mov    -0x10(%rbp),%rcx
mov    -0x20(%rbp),%rax
mov    %ecx,(%rax)
xor    %eax,%eax
leaveq 
retq   
mov    -0x10(%rbp),%rcx
mov    -0x20(%rbp),%rax
mov    %ecx,(%rax)
xor    %eax,%eax
leaveq 
retq   
mov    -0x30(%rbp),%rdi
mov    %rdi,-0x18(%rbp)
callq  17bf0 <TIFFReadDirEntryCheckRangeLongLong8>
test   %eax,%eax
je     139b6 <TIFFReadDirEntryLong+0x176>
leaveq 
retq   
mov    -0x28(%rbp),%rdi
mov    %rdi,-0x18(%rbp)
callq  17c10 <TIFFReadDirEntryCheckRangeLongSlong8>
test   %eax,%eax
je     139c4 <TIFFReadDirEntryLong+0x184>
leaveq 
retq   
mov    -0x18(%rbp),%rcx
mov    -0x20(%rbp),%rax
mov    %ecx,(%rax)
xor    %eax,%eax
leaveq 
retq   
mov    -0x18(%rbp),%rcx
mov    -0x20(%rbp),%rax
mov    %ecx,(%rax)
xor    %eax,%eax
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   (%rax)

00000000000139e0 <TIFFReadDirEntryLong8>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    0x8(%rsi),%rax
cmp    $0x1,%rax
je     139f9 <TIFFReadDirEntryLong8+0x19>
mov    $0x1,%eax
leaveq 
retq   
mov    $0x2,%eax
movzwl 0x2(%rsi),%ecx
add    $0xffffffff,%ecx
cmp    $0x10,%ecx
jbe    13a0c <TIFFReadDirEntryLong8+0x2c>
leaveq 
retq   
lea    0x3f3c9(%rip),%r8        # 52ddc <reason.25+0xcb6>
movslq (%r8,%rcx,4),%rcx
add    %r8,%rcx
jmpq   *%rcx
leaveq 
retq   
lea    -0x2e(%rbp),%rax
mov    %r15,-0x18(%rbp)
mov    %rdx,%r15
mov    %rax,%rdx
callq  17370 <TIFFReadDirEntryCheckedByte>
movzbl -0x2e(%rbp),%eax
mov    %rax,(%r15)
mov    -0x18(%rbp),%r15
xor    %eax,%eax
leaveq 
retq   
lea    -0x2d(%rbp),%rax
mov    %rdx,-0x18(%rbp)
mov    %rax,%rdx
callq  17380 <TIFFReadDirEntryCheckedSbyte>
movsbq -0x2d(%rbp),%rdi
mov    %rdi,-0x8(%rbp)
callq  17ca0 <TIFFReadDirEntryCheckRangeLong8Sbyte>
test   %eax,%eax
je     13b0f <TIFFReadDirEntryLong8+0x12f>
leaveq 
retq   
lea    -0x2c(%rbp),%rax
mov    %r15,-0x18(%rbp)
mov    %rdx,%r15
mov    %rax,%rdx
callq  17390 <TIFFReadDirEntryCheckedShort>
movzwl -0x2c(%rbp),%eax
mov    %rax,(%r15)
mov    -0x18(%rbp),%r15
xor    %eax,%eax
leaveq 
retq   
lea    -0x2a(%rbp),%rax
mov    %rdx,-0x18(%rbp)
mov    %rax,%rdx
callq  173c0 <TIFFReadDirEntryCheckedSshort>
movswq -0x2a(%rbp),%rdi
mov    %rdi,-0x8(%rbp)
callq  17cc0 <TIFFReadDirEntryCheckRangeLong8Sshort>
test   %eax,%eax
je     13b1e <TIFFReadDirEntryLong8+0x13e>
leaveq 
retq   
lea    -0x28(%rbp),%rax
mov    %r15,-0x18(%rbp)
mov    %rdx,%r15
mov    %rax,%rdx
callq  173f0 <TIFFReadDirEntryCheckedLong>
mov    -0x28(%rbp),%eax
mov    %rax,(%r15)
mov    -0x18(%rbp),%r15
xor    %eax,%eax
leaveq 
retq   
lea    -0x24(%rbp),%rax
mov    %rdx,-0x18(%rbp)
mov    %rax,%rdx
callq  17420 <TIFFReadDirEntryCheckedSlong>
movslq -0x24(%rbp),%rdi
mov    %rdi,-0x10(%rbp)
callq  17ce0 <TIFFReadDirEntryCheckRangeLong8Slong>
test   %eax,%eax
je     13b2d <TIFFReadDirEntryLong8+0x14d>
leaveq 
retq   
callq  17450 <TIFFReadDirEntryCheckedLong8>
leaveq 
retq   
lea    -0x20(%rbp),%rax
mov    %rdx,-0x18(%rbp)
mov    %rax,%rdx
callq  17500 <TIFFReadDirEntryCheckedSlong8>
test   %eax,%eax
je     13b3c <TIFFReadDirEntryLong8+0x15c>
leaveq 
retq   
mov    -0x8(%rbp),%rcx
mov    -0x18(%rbp),%rax
mov    %rcx,(%rax)
xor    %eax,%eax
leaveq 
retq   
mov    -0x8(%rbp),%rcx
mov    -0x18(%rbp),%rax
mov    %rcx,(%rax)
xor    %eax,%eax
leaveq 
retq   
mov    -0x10(%rbp),%rcx
mov    -0x18(%rbp),%rax
mov    %rcx,(%rax)
xor    %eax,%eax
leaveq 
retq   
mov    -0x20(%rbp),%rdi
mov    %rdi,-0x10(%rbp)
callq  17d00 <TIFFReadDirEntryCheckRangeLong8Slong8>
test   %eax,%eax
je     13b4f <TIFFReadDirEntryLong8+0x16f>
leaveq 
retq   
mov    -0x10(%rbp),%rcx
mov    -0x18(%rbp),%rax
mov    %rcx,(%rax)
xor    %eax,%eax
leaveq 
retq   
xchg   %ax,%ax

0000000000013b60 <TIFFReadDirEntryFloat>:
push   %rbp
mov    %rsp,%rbp
sub    $0x40,%rsp
mov    0x8(%rsi),%rax
cmp    $0x1,%rax
je     13b79 <TIFFReadDirEntryFloat+0x19>
mov    $0x1,%eax
leaveq 
retq   
mov    $0x2,%eax
movzwl 0x2(%rsi),%ecx
add    $0xffffffff,%ecx
cmp    $0x10,%ecx
jbe    13b8c <TIFFReadDirEntryFloat+0x2c>
leaveq 
retq   
lea    0x3f28d(%rip),%r8        # 52e20 <reason.25+0xcfa>
movslq (%r8,%rcx,4),%rcx
add    %r8,%rcx
jmpq   *%rcx
leaveq 
retq   
lea    -0x3e(%rbp),%rax
mov    %r15,-0x8(%rbp)
mov    %rdx,%r15
mov    %rax,%rdx
callq  17370 <TIFFReadDirEntryCheckedByte>
movzbl -0x3e(%rbp),%eax
movzbl %al,%eax
cvtsi2ss %rax,%xmm0
movss  %xmm0,(%r15)
mov    -0x8(%rbp),%r15
xor    %eax,%eax
leaveq 
retq   
lea    -0x3d(%rbp),%rax
mov    %r15,-0x8(%rbp)
mov    %rdx,%r15
mov    %rax,%rdx
callq  17380 <TIFFReadDirEntryCheckedSbyte>
movsbq -0x3d(%rbp),%rax
cvtsi2ss %eax,%xmm0
movss  %xmm0,(%r15)
mov    -0x8(%rbp),%r15
xor    %eax,%eax
leaveq 
retq   
lea    -0x3c(%rbp),%rax
mov    %r15,-0x8(%rbp)
mov    %rdx,%r15
mov    %rax,%rdx
callq  17390 <TIFFReadDirEntryCheckedShort>
movzwl -0x3c(%rbp),%eax
movzwl %ax,%eax
cvtsi2ss %rax,%xmm0
movss  %xmm0,(%r15)
mov    -0x8(%rbp),%r15
xor    %eax,%eax
leaveq 
retq   
lea    -0x3a(%rbp),%rax
mov    %r15,-0x8(%rbp)
mov    %rdx,%r15
mov    %rax,%rdx
callq  173c0 <TIFFReadDirEntryCheckedSshort>
movswq -0x3a(%rbp),%rax
cvtsi2ss %eax,%xmm0
movss  %xmm0,(%r15)
mov    -0x8(%rbp),%r15
xor    %eax,%eax
leaveq 
retq   
lea    -0x38(%rbp),%rax
mov    %r15,-0x8(%rbp)
mov    %rdx,%r15
mov    %rax,%rdx
callq  173f0 <TIFFReadDirEntryCheckedLong>
mov    -0x38(%rbp),%eax
mov    %eax,%eax
cvtsi2ss %rax,%xmm0
movss  %xmm0,(%r15)
mov    -0x8(%rbp),%r15
xor    %eax,%eax
leaveq 
retq   
lea    -0x34(%rbp),%rax
mov    %r15,-0x8(%rbp)
mov    %rdx,%r15
mov    %rax,%rdx
callq  17420 <TIFFReadDirEntryCheckedSlong>
movslq -0x34(%rbp),%rax
cvtsi2ss %eax,%xmm0
movss  %xmm0,(%r15)
mov    -0x8(%rbp),%r15
xor    %eax,%eax
leaveq 
retq   
lea    -0x30(%rbp),%rax
mov    %rdx,-0x8(%rbp)
mov    %rax,%rdx
callq  17450 <TIFFReadDirEntryCheckedLong8>
test   %eax,%eax
je     13d1d <TIFFReadDirEntryFloat+0x1bd>
leaveq 
retq   
lea    -0x28(%rbp),%rax
mov    %rdx,-0x8(%rbp)
mov    %rax,%rdx
callq  17500 <TIFFReadDirEntryCheckedSlong8>
test   %eax,%eax
je     13d52 <TIFFReadDirEntryFloat+0x1f2>
leaveq 
retq   
lea    -0x20(%rbp),%rax
mov    %rdx,-0x8(%rbp)
mov    %rax,%rdx
callq  175b0 <TIFFReadDirEntryCheckedRational>
test   %eax,%eax
je     13d67 <TIFFReadDirEntryFloat+0x207>
leaveq 
retq   
lea    -0x18(%rbp),%rax
mov    %rdx,-0x8(%rbp)
mov    %rax,%rdx
callq  17690 <TIFFReadDirEntryCheckedSrational>
test   %eax,%eax
je     13d7c <TIFFReadDirEntryFloat+0x21c>
leaveq 
retq   
callq  17770 <TIFFReadDirEntryCheckedFloat>
xor    %eax,%eax
leaveq 
retq   
lea    -0x10(%rbp),%rax
mov    %rdx,-0x8(%rbp)
mov    %rax,%rdx
callq  177a0 <TIFFReadDirEntryCheckedDouble>
test   %eax,%eax
je     13d91 <TIFFReadDirEntryFloat+0x231>
leaveq 
retq   
mov    -0x30(%rbp),%rax
movq   %rax,%xmm0
movdqa 0x407c2(%rip),%xmm1        # 544f0 <module.110+0x191>
punpckldq %xmm1,%xmm0
movdqa 0x407c6(%rip),%xmm1        # 54500 <module.110+0x1a1>
subpd  %xmm1,%xmm0
haddpd %xmm0,%xmm0
cvtsd2ss %xmm0,%xmm0
mov    -0x8(%rbp),%rax
movss  %xmm0,(%rax)
xor    %eax,%eax
leaveq 
retq   
mov    -0x28(%rbp),%rax
cvtsi2ss %rax,%xmm0
mov    -0x8(%rbp),%rax
movss  %xmm0,(%rax)
xor    %eax,%eax
leaveq 
retq   
movsd  -0x20(%rbp),%xmm0
cvtsd2ss %xmm0,%xmm0
mov    -0x8(%rbp),%rax
movss  %xmm0,(%rax)
xor    %eax,%eax
leaveq 
retq   
movsd  -0x18(%rbp),%xmm0
cvtsd2ss %xmm0,%xmm0
mov    -0x8(%rbp),%rax
movss  %xmm0,(%rax)
xor    %eax,%eax
leaveq 
retq   
mov    $0x4,%eax
movsd  -0x10(%rbp),%xmm1
movsd  0x4076d(%rip),%xmm0        # 54510 <module.110+0x1b1>
ucomisd %xmm0,%xmm1
jbe    13dab <TIFFReadDirEntryFloat+0x24b>
leaveq 
retq   
movsd  0x40765(%rip),%xmm0        # 54518 <module.110+0x1b9>
ucomisd %xmm0,%xmm1
jp     13dbd <TIFFReadDirEntryFloat+0x25d>
jae    13dbd <TIFFReadDirEntryFloat+0x25d>
leaveq 
retq   
cvtsd2ss %xmm1,%xmm0
mov    -0x8(%rbp),%rax
movss  %xmm0,(%rax)
xor    %eax,%eax
leaveq 
retq   
nopl   (%rax)

0000000000013dd0 <TIFFReadDirEntryDouble>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    0x8(%rsi),%rax
cmp    $0x1,%rax
je     13de9 <TIFFReadDirEntryDouble+0x19>
mov    $0x1,%eax
leaveq 
retq   
mov    $0x2,%eax
movzwl 0x2(%rsi),%ecx
add    $0xffffffff,%ecx
cmp    $0x10,%ecx
jbe    13dfc <TIFFReadDirEntryDouble+0x2c>
leaveq 
retq   
lea    0x3f061(%rip),%r8        # 52e64 <reason.25+0xd3e>
movslq (%r8,%rcx,4),%rcx
add    %r8,%rcx
jmpq   *%rcx
leaveq 
retq   
lea    -0x2e(%rbp),%rax
mov    %r15,-0x8(%rbp)
mov    %rdx,%r15
mov    %rax,%rdx
callq  17370 <TIFFReadDirEntryCheckedByte>
movzbl -0x2e(%rbp),%eax
movzbl %al,%eax
cvtsi2sd %rax,%xmm0
movsd  %xmm0,(%r15)
xor    %eax,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
lea    -0x2d(%rbp),%rax
mov    %r15,-0x8(%rbp)
mov    %rdx,%r15
mov    %rax,%rdx
callq  17380 <TIFFReadDirEntryCheckedSbyte>
movsbq -0x2d(%rbp),%rax
cvtsi2sd %eax,%xmm0
movsd  %xmm0,(%r15)
xor    %eax,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
lea    -0x2c(%rbp),%rax
mov    %r15,-0x8(%rbp)
mov    %rdx,%r15
mov    %rax,%rdx
callq  17390 <TIFFReadDirEntryCheckedShort>
movzwl -0x2c(%rbp),%eax
movzwl %ax,%eax
cvtsi2sd %rax,%xmm0
movsd  %xmm0,(%r15)
xor    %eax,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
lea    -0x2a(%rbp),%rax
mov    %r15,-0x8(%rbp)
mov    %rdx,%r15
mov    %rax,%rdx
callq  173c0 <TIFFReadDirEntryCheckedSshort>
movswq -0x2a(%rbp),%rax
cvtsi2sd %eax,%xmm0
movsd  %xmm0,(%r15)
xor    %eax,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
lea    -0x28(%rbp),%rax
mov    %r15,-0x8(%rbp)
mov    %rdx,%r15
mov    %rax,%rdx
callq  173f0 <TIFFReadDirEntryCheckedLong>
mov    -0x28(%rbp),%eax
mov    %eax,%eax
cvtsi2sd %rax,%xmm0
movsd  %xmm0,(%r15)
xor    %eax,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
lea    -0x24(%rbp),%rax
mov    %r15,-0x8(%rbp)
mov    %rdx,%r15
mov    %rax,%rdx
callq  17420 <TIFFReadDirEntryCheckedSlong>
movslq -0x24(%rbp),%rax
cvtsi2sd %eax,%xmm0
movsd  %xmm0,(%r15)
xor    %eax,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
lea    -0x20(%rbp),%rax
mov    %rdx,-0x8(%rbp)
mov    %rax,%rdx
callq  17450 <TIFFReadDirEntryCheckedLong8>
test   %eax,%eax
je     13f74 <TIFFReadDirEntryDouble+0x1a4>
leaveq 
retq   
lea    -0x18(%rbp),%rax
mov    %rdx,-0x8(%rbp)
mov    %rax,%rdx
callq  17500 <TIFFReadDirEntryCheckedSlong8>
test   %eax,%eax
je     13fa5 <TIFFReadDirEntryDouble+0x1d5>
leaveq 
retq   
callq  175b0 <TIFFReadDirEntryCheckedRational>
leaveq 
retq   
callq  17690 <TIFFReadDirEntryCheckedSrational>
leaveq 
retq   
lea    -0xc(%rbp),%rax
mov    %r15,-0x8(%rbp)
mov    %rdx,%r15
mov    %rax,%rdx
callq  17770 <TIFFReadDirEntryCheckedFloat>
movss  -0xc(%rbp),%xmm0
cvtss2sd %xmm0,%xmm0
movsd  %xmm0,(%r15)
xor    %eax,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
callq  177a0 <TIFFReadDirEntryCheckedDouble>
leaveq 
retq   
mov    -0x20(%rbp),%rax
movq   %rax,%xmm0
movdqa 0x4056b(%rip),%xmm1        # 544f0 <module.110+0x191>
punpckldq %xmm1,%xmm0
movdqa 0x4056f(%rip),%xmm1        # 54500 <module.110+0x1a1>
subpd  %xmm1,%xmm0
haddpd %xmm0,%xmm0
mov    -0x8(%rbp),%rax
movsd  %xmm0,(%rax)
xor    %eax,%eax
leaveq 
retq   
mov    -0x18(%rbp),%rax
cvtsi2sd %rax,%xmm0
mov    -0x8(%rbp),%rax
movsd  %xmm0,(%rax)
xor    %eax,%eax
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

0000000000013fc0 <TIFFReadDirEntryIfd8>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    0x8(%rsi),%rax
cmp    $0x1,%rax
je     13fd9 <TIFFReadDirEntryIfd8+0x19>
mov    $0x1,%eax
leaveq 
retq   
mov    $0x2,%eax
movzwl 0x2(%rsi),%ecx
cmp    $0xf,%cx
jbe    13ff6 <TIFFReadDirEntryIfd8+0x36>
cmp    $0x10,%cx
je     14004 <TIFFReadDirEntryIfd8+0x44>
cmp    $0x12,%cx
je     14004 <TIFFReadDirEntryIfd8+0x44>
leaveq 
retq   
cmp    $0x4,%cx
je     1400b <TIFFReadDirEntryIfd8+0x4b>
cmp    $0xd,%cx
je     1400b <TIFFReadDirEntryIfd8+0x4b>
leaveq 
retq   
callq  17450 <TIFFReadDirEntryCheckedLong8>
leaveq 
retq   
lea    -0xc(%rbp),%rax
mov    %r15,-0x8(%rbp)
mov    %rdx,%r15
mov    %rax,%rdx
callq  173f0 <TIFFReadDirEntryCheckedLong>
mov    -0xc(%rbp),%eax
mov    %rax,(%r15)
xor    %eax,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
nopl   0x0(%rax)

0000000000014030 <TIFFReadDirEntryArray>:
push   %rbp
mov    %rsp,%rbp
mov    $0xffffffffffffffff,%r9
callq  1b810 <TIFFReadDirEntryArrayWithLimit>
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   (%rax)

0000000000014050 <TIFFReadDirEntryByteArray>:
push   %rbp
mov    %rsp,%rbp
sub    $0x90,%rsp
mov    $0x2,%eax
movzwl 0x2(%rsi),%ecx
add    $0xffffffff,%ecx
cmp    $0x10,%ecx
jbe    1406e <TIFFReadDirEntryByteArray+0x1e>
leaveq 
retq   
lea    0x3ee33(%rip),%r8        # 52ea8 <reason.25+0xd82>
movslq (%r8,%rcx,4),%rcx
add    %r8,%rcx
jmpq   *%rcx
leaveq 
retq   
lea    -0x8c(%rbp),%r10
mov    $0x1,%ecx
lea    -0x88(%rbp),%r8
mov    %rdi,%rax
mov    %rsi,%r9
mov    %r15,-0x70(%rbp)
mov    %rsi,-0x80(%rbp)
mov    %rdi,-0x78(%rbp)
mov    %r9,%rsi
mov    %rax,%rdi
mov    %rdx,%r15
mov    %r10,%rdx
callq  14030 <TIFFReadDirEntryArray>
test   %eax,%eax
jne    140ef <TIFFReadDirEntryByteArray+0x9f>
mov    -0x88(%rbp),%rsi
test   %rsi,%rsi
je     140ef <TIFFReadDirEntryByteArray+0x9f>
xor    %eax,%eax
mov    -0x80(%rbp),%rdx
movzwl 0x2(%rdx),%ecx
cmp    $0x5,%cx
jbe    140fc <TIFFReadDirEntryByteArray+0xac>
cmp    $0x6,%cx
jne    14111 <TIFFReadDirEntryByteArray+0xc1>
mov    %r14,-0x80(%rbp)
mov    %r15,-0x78(%rbp)
mov    %rax,%r14
mov    %rsi,%r15
jmpq   1417e <TIFFReadDirEntryByteArray+0x12e>
movq   $0x0,(%r15)
mov    -0x70(%rbp),%r15
leaveq 
retq   
cmp    $0x1,%cx
je     14108 <TIFFReadDirEntryByteArray+0xb8>
cmp    $0x2,%cx
jne    14117 <TIFFReadDirEntryByteArray+0xc7>
mov    %rsi,(%r15)
mov    -0x70(%rbp),%r15
leaveq 
retq   
cmp    $0x7,%cx
je     14108 <TIFFReadDirEntryByteArray+0xb8>
mov    -0x8c(%rbp),%edi
mov    %r15,-0x20(%rbp)
mov    %rdx,%r15
callq  8440 <_TIFFmalloc@plt>
test   %rax,%rax
je     141a3 <TIFFReadDirEntryByteArray+0x153>
movzwl 0x2(%r15),%ecx
add    $0xfffffffd,%ecx
cmp    $0xe,%ecx
jbe    141ba <TIFFReadDirEntryByteArray+0x16a>
xor    %r15d,%r15d
mov    -0x88(%rbp),%rdi
mov    %r14,-0x80(%rbp)
mov    %rax,%r14
callq  8bb0 <_TIFFfree@plt>
test   %r15d,%r15d
jne    141d2 <TIFFReadDirEntryByteArray+0x182>
mov    -0x20(%rbp),%rax
mov    %r14,(%rax)
xor    %eax,%eax
mov    -0x80(%rbp),%r14
mov    -0x70(%rbp),%r15
leaveq 
retq   
movsbq (%r15),%rdi
callq  17850 <TIFFReadDirEntryCheckRangeByteSbyte>
test   %eax,%eax
jne    141e7 <TIFFReadDirEntryByteArray+0x197>
add    $0x1,%r15
add    $0x1,%r14d
mov    -0x8c(%rbp),%eax
cmp    %r14d,%eax
ja     14169 <TIFFReadDirEntryByteArray+0x119>
mov    -0x88(%rbp),%rax
mov    -0x78(%rbp),%rcx
mov    %rax,(%rcx)
xor    %eax,%eax
mov    -0x80(%rbp),%r14
mov    -0x70(%rbp),%r15
leaveq 
retq   
mov    -0x88(%rbp),%rdi
callq  8bb0 <_TIFFfree@plt>
mov    $0x7,%eax
mov    -0x70(%rbp),%r15
leaveq 
retq   
lea    0x3ed2b(%rip),%rdx        # 52eec <reason.25+0xdc6>
movslq (%rdx,%rcx,4),%rcx
add    %rdx,%rcx
jmpq   *%rcx
xor    %r15d,%r15d
jmpq   1413e <TIFFReadDirEntryByteArray+0xee>
mov    %r14,%rdi
callq  8bb0 <_TIFFfree@plt>
mov    %r15,%rax
mov    -0x80(%rbp),%r14
mov    -0x70(%rbp),%r15
leaveq 
retq   
mov    %rax,%r14
mov    -0x88(%rbp),%rdi
callq  8bb0 <_TIFFfree@plt>
mov    %r14,%rax
mov    -0x80(%rbp),%r14
mov    -0x70(%rbp),%r15
leaveq 
retq   
mov    -0x88(%rbp),%r15
mov    %r14,-0x80(%rbp)
mov    %rax,-0x8(%rbp)
mov    %rbx,-0x28(%rbp)
mov    %r12,-0x40(%rbp)
mov    %r13,-0x58(%rbp)
xor    %r12d,%r12d
mov    -0x78(%rbp),%rbx
jmpq   1432c <TIFFReadDirEntryByteArray+0x2dc>
mov    -0x88(%rbp),%r15
mov    %r14,-0x80(%rbp)
mov    %rax,-0x8(%rbp)
mov    %rbx,-0x28(%rbp)
mov    %r12,-0x40(%rbp)
mov    %r13,-0x58(%rbp)
xor    %r12d,%r12d
mov    -0x78(%rbp),%rbx
jmpq   14394 <TIFFReadDirEntryByteArray+0x344>
mov    -0x88(%rbp),%r15
mov    %r14,-0x80(%rbp)
mov    %rax,-0x10(%rbp)
mov    %rbx,-0x30(%rbp)
mov    %r12,-0x48(%rbp)
mov    %r13,-0x60(%rbp)
xor    %r12d,%r12d
mov    -0x78(%rbp),%rbx
jmpq   143fb <TIFFReadDirEntryByteArray+0x3ab>
mov    -0x88(%rbp),%r15
mov    %r14,-0x80(%rbp)
mov    %rax,-0x10(%rbp)
mov    %rbx,-0x30(%rbp)
mov    %r12,-0x48(%rbp)
mov    %r13,-0x60(%rbp)
xor    %r12d,%r12d
mov    -0x78(%rbp),%rbx
jmpq   14462 <TIFFReadDirEntryByteArray+0x412>
mov    -0x88(%rbp),%r15
mov    %r14,-0x80(%rbp)
mov    %rax,-0x18(%rbp)
mov    %rbx,-0x38(%rbp)
mov    %r12,-0x50(%rbp)
mov    %r13,-0x68(%rbp)
xor    %ebx,%ebx
mov    -0x78(%rbp),%r12
jmpq   144ca <TIFFReadDirEntryByteArray+0x47a>
mov    -0x88(%rbp),%r15
mov    %r14,-0x80(%rbp)
mov    %rax,-0x18(%rbp)
mov    %rbx,-0x38(%rbp)
mov    %r12,-0x50(%rbp)
mov    %r13,-0x68(%rbp)
xor    %ebx,%ebx
mov    -0x78(%rbp),%r12
jmpq   14531 <TIFFReadDirEntryByteArray+0x4e1>
mov    0x10(%rbx),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
je     14306 <TIFFReadDirEntryByteArray+0x2b6>
mov    %rax,%r13
mov    %r15,%rdi
callq  87c0 <TIFFSwabShort@plt>
mov    %r13,%rax
mov    %rax,%r14
movzwl (%r15),%r13d
mov    %r13,%rdi
callq  17870 <TIFFReadDirEntryCheckRangeByteShort>
test   %eax,%eax
jne    14557 <TIFFReadDirEntryByteArray+0x507>
mov    %r13b,(%r14)
add    $0x2,%r15
lea    0x1(%r14),%rax
add    $0x1,%r12d
mov    -0x8c(%rbp),%ecx
cmp    %r12d,%ecx
ja     142eb <TIFFReadDirEntryByteArray+0x29b>
mov    -0x58(%rbp),%r13
mov    -0x40(%rbp),%r12
mov    -0x28(%rbp),%rbx
mov    -0x8(%rbp),%rax
xor    %r15d,%r15d
mov    -0x80(%rbp),%r14
jmpq   1413e <TIFFReadDirEntryByteArray+0xee>
mov    0x10(%rbx),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
je     1436e <TIFFReadDirEntryByteArray+0x31e>
mov    %rax,%r13
mov    %r15,%rdi
callq  87c0 <TIFFSwabShort@plt>
mov    %r13,%rax
mov    %rax,%r14
movswq (%r15),%r13
mov    %r13,%rdi
callq  17890 <TIFFReadDirEntryCheckRangeByteSshort>
test   %eax,%eax
jne    14573 <TIFFReadDirEntryByteArray+0x523>
mov    %r13b,(%r14)
add    $0x2,%r15
lea    0x1(%r14),%rax
add    $0x1,%r12d
mov    -0x8c(%rbp),%ecx
cmp    %r12d,%ecx
ja     14353 <TIFFReadDirEntryByteArray+0x303>
mov    -0x58(%rbp),%r13
mov    -0x40(%rbp),%r12
mov    -0x28(%rbp),%rbx
mov    -0x8(%rbp),%rax
xor    %r15d,%r15d
mov    -0x80(%rbp),%r14
jmpq   1413e <TIFFReadDirEntryByteArray+0xee>
mov    0x10(%rbx),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
je     143d6 <TIFFReadDirEntryByteArray+0x386>
mov    %rax,%r13
mov    %r15,%rdi
callq  8480 <TIFFSwabLong@plt>
mov    %r13,%rax
mov    %rax,%r14
mov    (%r15),%r13d
mov    %r13,%rdi
callq  178b0 <TIFFReadDirEntryCheckRangeByteLong>
test   %eax,%eax
jne    1458f <TIFFReadDirEntryByteArray+0x53f>
mov    %r13b,(%r14)
add    $0x4,%r15
lea    0x1(%r14),%rax
add    $0x1,%r12d
mov    -0x8c(%rbp),%ecx
cmp    %r12d,%ecx
ja     143bb <TIFFReadDirEntryByteArray+0x36b>
mov    -0x60(%rbp),%r13
mov    -0x48(%rbp),%r12
mov    -0x30(%rbp),%rbx
mov    -0x10(%rbp),%rax
xor    %r15d,%r15d
mov    -0x80(%rbp),%r14
jmpq   1413e <TIFFReadDirEntryByteArray+0xee>
mov    0x10(%rbx),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
je     1443d <TIFFReadDirEntryByteArray+0x3ed>
mov    %rax,%r13
mov    %r15,%rdi
callq  8480 <TIFFSwabLong@plt>
mov    %r13,%rax
mov    %rax,%r14
movslq (%r15),%r13
mov    %r13,%rdi
callq  178d0 <TIFFReadDirEntryCheckRangeByteSlong>
test   %eax,%eax
jne    145ab <TIFFReadDirEntryByteArray+0x55b>
mov    %r13b,(%r14)
add    $0x4,%r15
lea    0x1(%r14),%rax
add    $0x1,%r12d
mov    -0x8c(%rbp),%ecx
cmp    %r12d,%ecx
ja     14422 <TIFFReadDirEntryByteArray+0x3d2>
mov    -0x60(%rbp),%r13
mov    -0x48(%rbp),%r12
mov    -0x30(%rbp),%rbx
mov    -0x10(%rbp),%rax
xor    %r15d,%r15d
mov    -0x80(%rbp),%r14
jmpq   1413e <TIFFReadDirEntryByteArray+0xee>
mov    0x10(%r12),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
je     144a6 <TIFFReadDirEntryByteArray+0x456>
mov    %rax,%r13
mov    %r15,%rdi
callq  8730 <TIFFSwabLong8@plt>
mov    %r13,%rax
mov    %rax,%r14
mov    (%r15),%r13
mov    %r13,%rdi
callq  178f0 <TIFFReadDirEntryCheckRangeByteLong8>
test   %eax,%eax
jne    145c7 <TIFFReadDirEntryByteArray+0x577>
mov    %r13b,(%r14)
add    $0x8,%r15
lea    0x1(%r14),%rax
add    $0x1,%ebx
mov    -0x8c(%rbp),%ecx
cmp    %ebx,%ecx
ja     14489 <TIFFReadDirEntryByteArray+0x439>
mov    -0x68(%rbp),%r13
mov    -0x50(%rbp),%r12
mov    -0x38(%rbp),%rbx
mov    -0x18(%rbp),%rax
xor    %r15d,%r15d
mov    -0x80(%rbp),%r14
jmpq   1413e <TIFFReadDirEntryByteArray+0xee>
mov    0x10(%r12),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
je     1450d <TIFFReadDirEntryByteArray+0x4bd>
mov    %rax,%r13
mov    %r15,%rdi
callq  8730 <TIFFSwabLong8@plt>
mov    %r13,%rax
mov    %rax,%r14
mov    (%r15),%r13
mov    %r13,%rdi
callq  17910 <TIFFReadDirEntryCheckRangeByteSlong8>
test   %eax,%eax
jne    145e3 <TIFFReadDirEntryByteArray+0x593>
mov    %r13b,(%r14)
add    $0x8,%r15
lea    0x1(%r14),%rax
add    $0x1,%ebx
mov    -0x8c(%rbp),%ecx
cmp    %ebx,%ecx
ja     144f0 <TIFFReadDirEntryByteArray+0x4a0>
mov    -0x68(%rbp),%r13
mov    -0x50(%rbp),%r12
mov    -0x38(%rbp),%rbx
mov    -0x18(%rbp),%rax
xor    %r15d,%r15d
mov    -0x80(%rbp),%r14
jmpq   1413e <TIFFReadDirEntryByteArray+0xee>
mov    %rax,%r15
mov    -0x58(%rbp),%r13
mov    -0x40(%rbp),%r12
mov    -0x28(%rbp),%rbx
mov    -0x8(%rbp),%rax
mov    -0x80(%rbp),%r14
jmpq   1413e <TIFFReadDirEntryByteArray+0xee>
mov    %rax,%r15
mov    -0x58(%rbp),%r13
mov    -0x40(%rbp),%r12
mov    -0x28(%rbp),%rbx
mov    -0x8(%rbp),%rax
mov    -0x80(%rbp),%r14
jmpq   1413e <TIFFReadDirEntryByteArray+0xee>
mov    %rax,%r15
mov    -0x60(%rbp),%r13
mov    -0x48(%rbp),%r12
mov    -0x30(%rbp),%rbx
mov    -0x10(%rbp),%rax
mov    -0x80(%rbp),%r14
jmpq   1413e <TIFFReadDirEntryByteArray+0xee>
mov    %rax,%r15
mov    -0x60(%rbp),%r13
mov    -0x48(%rbp),%r12
mov    -0x30(%rbp),%rbx
mov    -0x10(%rbp),%rax
mov    -0x80(%rbp),%r14
jmpq   1413e <TIFFReadDirEntryByteArray+0xee>
mov    %rax,%r15
mov    -0x68(%rbp),%r13
mov    -0x50(%rbp),%r12
mov    -0x38(%rbp),%rbx
mov    -0x18(%rbp),%rax
mov    -0x80(%rbp),%r14
jmpq   1413e <TIFFReadDirEntryByteArray+0xee>
mov    %rax,%r15
mov    -0x68(%rbp),%r13
mov    -0x50(%rbp),%r12
mov    -0x38(%rbp),%rbx
mov    -0x18(%rbp),%rax
mov    -0x80(%rbp),%r14
jmpq   1413e <TIFFReadDirEntryByteArray+0xee>
nop

0000000000014600 <TIFFReadDirEntrySbyteArray>:
push   %rbp
mov    %rsp,%rbp
sub    $0x90,%rsp
mov    $0x2,%eax
movzwl 0x2(%rsi),%ecx
add    $0xffffffff,%ecx
cmp    $0x10,%ecx
jbe    1461e <TIFFReadDirEntrySbyteArray+0x1e>
leaveq 
retq   
lea    0x3e903(%rip),%r8        # 52f28 <reason.25+0xe02>
movslq (%r8,%rcx,4),%rcx
add    %r8,%rcx
jmpq   *%rcx
leaveq 
retq   
lea    -0x8c(%rbp),%r10
mov    $0x1,%ecx
lea    -0x88(%rbp),%r8
mov    %rdi,%rax
mov    %rsi,%r9
mov    %r15,-0x70(%rbp)
mov    %rsi,-0x80(%rbp)
mov    %rdi,-0x78(%rbp)
mov    %r9,%rsi
mov    %rax,%rdi
mov    %rdx,%r15
mov    %r10,%rdx
callq  14030 <TIFFReadDirEntryArray>
test   %eax,%eax
jne    146a5 <TIFFReadDirEntrySbyteArray+0xa5>
mov    -0x88(%rbp),%rdx
test   %rdx,%rdx
je     146a5 <TIFFReadDirEntrySbyteArray+0xa5>
xor    %eax,%eax
mov    -0x80(%rbp),%rsi
movzwl 0x2(%rsi),%ecx
cmp    $0x5,%cx
jbe    146b2 <TIFFReadDirEntrySbyteArray+0xb2>
cmp    $0x6,%cx
je     146c8 <TIFFReadDirEntrySbyteArray+0xc8>
cmp    $0x7,%cx
jne    146d1 <TIFFReadDirEntrySbyteArray+0xd1>
mov    %r15,-0x78(%rbp)
mov    %r14,-0x80(%rbp)
mov    %rax,%r14
mov    %rdx,%r15
jmpq   14738 <TIFFReadDirEntrySbyteArray+0x138>
movq   $0x0,(%r15)
mov    -0x70(%rbp),%r15
leaveq 
retq   
cmp    $0x1,%cx
jne    146d1 <TIFFReadDirEntrySbyteArray+0xd1>
mov    %r15,-0x78(%rbp)
mov    %r14,-0x80(%rbp)
mov    %rax,%r14
mov    %rdx,%r15
jmp    14738 <TIFFReadDirEntrySbyteArray+0x138>
mov    %rdx,(%r15)
mov    -0x70(%rbp),%r15
leaveq 
retq   
mov    -0x8c(%rbp),%edi
mov    %r15,-0x20(%rbp)
mov    %rsi,%r15
callq  8440 <_TIFFmalloc@plt>
test   %rax,%rax
je     1475d <TIFFReadDirEntrySbyteArray+0x15d>
movzwl 0x2(%r15),%ecx
add    $0xfffffffd,%ecx
cmp    $0xe,%ecx
jbe    14774 <TIFFReadDirEntrySbyteArray+0x174>
xor    %r15d,%r15d
mov    -0x88(%rbp),%rdi
mov    %r14,-0x80(%rbp)
mov    %rax,%r14
callq  8bb0 <_TIFFfree@plt>
test   %r15d,%r15d
jne    1478c <TIFFReadDirEntrySbyteArray+0x18c>
mov    -0x20(%rbp),%rax
mov    %r14,(%rax)
mov    -0x80(%rbp),%r14
xor    %eax,%eax
mov    -0x70(%rbp),%r15
leaveq 
retq   
movzbl (%r15),%edi
callq  17930 <TIFFReadDirEntryCheckRangeSbyteByte>
test   %eax,%eax
jne    147a1 <TIFFReadDirEntrySbyteArray+0x1a1>
add    $0x1,%r15
add    $0x1,%r14d
mov    -0x8c(%rbp),%eax
cmp    %r14d,%eax
ja     14723 <TIFFReadDirEntrySbyteArray+0x123>
mov    -0x88(%rbp),%rax
mov    -0x78(%rbp),%rcx
mov    %rax,(%rcx)
mov    -0x80(%rbp),%r14
xor    %eax,%eax
mov    -0x70(%rbp),%r15
leaveq 
retq   
mov    -0x88(%rbp),%rdi
callq  8bb0 <_TIFFfree@plt>
mov    $0x7,%eax
mov    -0x70(%rbp),%r15
leaveq 
retq   
lea    0x3e7f1(%rip),%rdx        # 52f6c <reason.25+0xe46>
movslq (%rdx,%rcx,4),%rcx
add    %rdx,%rcx
jmpq   *%rcx
xor    %r15d,%r15d
jmpq   146f8 <TIFFReadDirEntrySbyteArray+0xf8>
mov    %r14,%rdi
callq  8bb0 <_TIFFfree@plt>
mov    %r15,%rax
mov    -0x80(%rbp),%r14
mov    -0x70(%rbp),%r15
leaveq 
retq   
mov    %rax,%r14
mov    -0x88(%rbp),%rdi
callq  8bb0 <_TIFFfree@plt>
mov    %r14,%rax
mov    -0x80(%rbp),%r14
mov    -0x70(%rbp),%r15
leaveq 
retq   
mov    -0x88(%rbp),%r15
mov    %r14,-0x80(%rbp)
mov    %rax,-0x8(%rbp)
mov    %rbx,-0x28(%rbp)
mov    %r12,-0x40(%rbp)
mov    %r13,-0x58(%rbp)
xor    %r12d,%r12d
mov    -0x78(%rbp),%rbx
jmpq   148e6 <TIFFReadDirEntrySbyteArray+0x2e6>
mov    -0x88(%rbp),%r15
mov    %r14,-0x80(%rbp)
mov    %rax,-0x8(%rbp)
mov    %rbx,-0x28(%rbp)
mov    %r12,-0x40(%rbp)
mov    %r13,-0x58(%rbp)
xor    %r12d,%r12d
mov    -0x78(%rbp),%rbx
jmpq   1494e <TIFFReadDirEntrySbyteArray+0x34e>
mov    -0x88(%rbp),%r15
mov    %r14,-0x80(%rbp)
mov    %rax,-0x10(%rbp)
mov    %rbx,-0x30(%rbp)
mov    %r12,-0x48(%rbp)
mov    %r13,-0x60(%rbp)
xor    %r12d,%r12d
mov    -0x78(%rbp),%rbx
jmpq   149b5 <TIFFReadDirEntrySbyteArray+0x3b5>
mov    -0x88(%rbp),%r15
mov    %r14,-0x80(%rbp)
mov    %rax,-0x10(%rbp)
mov    %rbx,-0x30(%rbp)
mov    %r12,-0x48(%rbp)
mov    %r13,-0x60(%rbp)
xor    %r12d,%r12d
mov    -0x78(%rbp),%rbx
jmpq   14a1c <TIFFReadDirEntrySbyteArray+0x41c>
mov    -0x88(%rbp),%r15
mov    %r14,-0x80(%rbp)
mov    %rax,-0x18(%rbp)
mov    %rbx,-0x38(%rbp)
mov    %r12,-0x50(%rbp)
mov    %r13,-0x68(%rbp)
xor    %ebx,%ebx
mov    -0x78(%rbp),%r12
jmpq   14a84 <TIFFReadDirEntrySbyteArray+0x484>
mov    -0x88(%rbp),%r15
mov    %r14,-0x80(%rbp)
mov    %rax,-0x18(%rbp)
mov    %rbx,-0x38(%rbp)
mov    %r12,-0x50(%rbp)
mov    %r13,-0x68(%rbp)
xor    %ebx,%ebx
mov    -0x78(%rbp),%r12
jmpq   14aeb <TIFFReadDirEntrySbyteArray+0x4eb>
mov    0x10(%rbx),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
je     148c0 <TIFFReadDirEntrySbyteArray+0x2c0>
mov    %rax,%r13
mov    %r15,%rdi
callq  87c0 <TIFFSwabShort@plt>
mov    %r13,%rax
mov    %rax,%r14
movzwl (%r15),%r13d
mov    %r13,%rdi
callq  17950 <TIFFReadDirEntryCheckRangeSbyteShort>
test   %eax,%eax
jne    14b11 <TIFFReadDirEntrySbyteArray+0x511>
mov    %r13b,(%r14)
add    $0x2,%r15
lea    0x1(%r14),%rax
add    $0x1,%r12d
mov    -0x8c(%rbp),%ecx
cmp    %r12d,%ecx
ja     148a5 <TIFFReadDirEntrySbyteArray+0x2a5>
mov    -0x58(%rbp),%r13
mov    -0x40(%rbp),%r12
mov    -0x28(%rbp),%rbx
mov    -0x8(%rbp),%rax
mov    -0x80(%rbp),%r14
xor    %r15d,%r15d
jmpq   146f8 <TIFFReadDirEntrySbyteArray+0xf8>
mov    0x10(%rbx),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
je     14928 <TIFFReadDirEntrySbyteArray+0x328>
mov    %rax,%r13
mov    %r15,%rdi
callq  87c0 <TIFFSwabShort@plt>
mov    %r13,%rax
mov    %rax,%r14
movswq (%r15),%r13
mov    %r13,%rdi
callq  17970 <TIFFReadDirEntryCheckRangeSbyteSshort>
test   %eax,%eax
jne    14b2d <TIFFReadDirEntrySbyteArray+0x52d>
mov    %r13b,(%r14)
add    $0x2,%r15
lea    0x1(%r14),%rax
add    $0x1,%r12d
mov    -0x8c(%rbp),%ecx
cmp    %r12d,%ecx
ja     1490d <TIFFReadDirEntrySbyteArray+0x30d>
mov    -0x58(%rbp),%r13
mov    -0x40(%rbp),%r12
mov    -0x28(%rbp),%rbx
mov    -0x8(%rbp),%rax
mov    -0x80(%rbp),%r14
xor    %r15d,%r15d
jmpq   146f8 <TIFFReadDirEntrySbyteArray+0xf8>
mov    0x10(%rbx),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
je     14990 <TIFFReadDirEntrySbyteArray+0x390>
mov    %rax,%r13
mov    %r15,%rdi
callq  8480 <TIFFSwabLong@plt>
mov    %r13,%rax
mov    %rax,%r14
mov    (%r15),%r13d
mov    %r13,%rdi
callq  17990 <TIFFReadDirEntryCheckRangeSbyteLong>
test   %eax,%eax
jne    14b49 <TIFFReadDirEntrySbyteArray+0x549>
mov    %r13b,(%r14)
add    $0x4,%r15
lea    0x1(%r14),%rax
add    $0x1,%r12d
mov    -0x8c(%rbp),%ecx
cmp    %r12d,%ecx
ja     14975 <TIFFReadDirEntrySbyteArray+0x375>
mov    -0x60(%rbp),%r13
mov    -0x48(%rbp),%r12
mov    -0x30(%rbp),%rbx
mov    -0x10(%rbp),%rax
mov    -0x80(%rbp),%r14
xor    %r15d,%r15d
jmpq   146f8 <TIFFReadDirEntrySbyteArray+0xf8>
mov    0x10(%rbx),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
je     149f7 <TIFFReadDirEntrySbyteArray+0x3f7>
mov    %rax,%r13
mov    %r15,%rdi
callq  8480 <TIFFSwabLong@plt>
mov    %r13,%rax
mov    %rax,%r14
movslq (%r15),%r13
mov    %r13,%rdi
callq  179b0 <TIFFReadDirEntryCheckRangeSbyteSlong>
test   %eax,%eax
jne    14b65 <TIFFReadDirEntrySbyteArray+0x565>
mov    %r13b,(%r14)
add    $0x4,%r15
lea    0x1(%r14),%rax
add    $0x1,%r12d
mov    -0x8c(%rbp),%ecx
cmp    %r12d,%ecx
ja     149dc <TIFFReadDirEntrySbyteArray+0x3dc>
mov    -0x60(%rbp),%r13
mov    -0x48(%rbp),%r12
mov    -0x30(%rbp),%rbx
mov    -0x10(%rbp),%rax
mov    -0x80(%rbp),%r14
xor    %r15d,%r15d
jmpq   146f8 <TIFFReadDirEntrySbyteArray+0xf8>
mov    0x10(%r12),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
je     14a60 <TIFFReadDirEntrySbyteArray+0x460>
mov    %rax,%r13
mov    %r15,%rdi
callq  8730 <TIFFSwabLong8@plt>
mov    %r13,%rax
mov    %rax,%r14
mov    (%r15),%r13
mov    %r13,%rdi
callq  179d0 <TIFFReadDirEntryCheckRangeSbyteLong8>
test   %eax,%eax
jne    14b81 <TIFFReadDirEntrySbyteArray+0x581>
mov    %r13b,(%r14)
add    $0x8,%r15
lea    0x1(%r14),%rax
add    $0x1,%ebx
mov    -0x8c(%rbp),%ecx
cmp    %ebx,%ecx
ja     14a43 <TIFFReadDirEntrySbyteArray+0x443>
mov    -0x68(%rbp),%r13
mov    -0x50(%rbp),%r12
mov    -0x38(%rbp),%rbx
mov    -0x18(%rbp),%rax
mov    -0x80(%rbp),%r14
xor    %r15d,%r15d
jmpq   146f8 <TIFFReadDirEntrySbyteArray+0xf8>
mov    0x10(%r12),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
je     14ac7 <TIFFReadDirEntrySbyteArray+0x4c7>
mov    %rax,%r13
mov    %r15,%rdi
callq  8730 <TIFFSwabLong8@plt>
mov    %r13,%rax
mov    %rax,%r14
mov    (%r15),%r13
mov    %r13,%rdi
callq  179f0 <TIFFReadDirEntryCheckRangeSbyteSlong8>
test   %eax,%eax
jne    14b9d <TIFFReadDirEntrySbyteArray+0x59d>
mov    %r13b,(%r14)
add    $0x8,%r15
lea    0x1(%r14),%rax
add    $0x1,%ebx
mov    -0x8c(%rbp),%ecx
cmp    %ebx,%ecx
ja     14aaa <TIFFReadDirEntrySbyteArray+0x4aa>
mov    -0x68(%rbp),%r13
mov    -0x50(%rbp),%r12
mov    -0x38(%rbp),%rbx
mov    -0x18(%rbp),%rax
mov    -0x80(%rbp),%r14
xor    %r15d,%r15d
jmpq   146f8 <TIFFReadDirEntrySbyteArray+0xf8>
mov    %rax,%r15
mov    -0x58(%rbp),%r13
mov    -0x40(%rbp),%r12
mov    -0x28(%rbp),%rbx
mov    -0x8(%rbp),%rax
mov    -0x80(%rbp),%r14
jmpq   146f8 <TIFFReadDirEntrySbyteArray+0xf8>
mov    %rax,%r15
mov    -0x58(%rbp),%r13
mov    -0x40(%rbp),%r12
mov    -0x28(%rbp),%rbx
mov    -0x8(%rbp),%rax
mov    -0x80(%rbp),%r14
jmpq   146f8 <TIFFReadDirEntrySbyteArray+0xf8>
mov    %rax,%r15
mov    -0x60(%rbp),%r13
mov    -0x48(%rbp),%r12
mov    -0x30(%rbp),%rbx
mov    -0x10(%rbp),%rax
mov    -0x80(%rbp),%r14
jmpq   146f8 <TIFFReadDirEntrySbyteArray+0xf8>
mov    %rax,%r15
mov    -0x60(%rbp),%r13
mov    -0x48(%rbp),%r12
mov    -0x30(%rbp),%rbx
mov    -0x10(%rbp),%rax
mov    -0x80(%rbp),%r14
jmpq   146f8 <TIFFReadDirEntrySbyteArray+0xf8>
mov    %rax,%r15
mov    -0x68(%rbp),%r13
mov    -0x50(%rbp),%r12
mov    -0x38(%rbp),%rbx
mov    -0x18(%rbp),%rax
mov    -0x80(%rbp),%r14
jmpq   146f8 <TIFFReadDirEntrySbyteArray+0xf8>
mov    %rax,%r15
mov    -0x68(%rbp),%r13
mov    -0x50(%rbp),%r12
mov    -0x38(%rbp),%rbx
mov    -0x18(%rbp),%rax
mov    -0x80(%rbp),%r14
jmpq   146f8 <TIFFReadDirEntrySbyteArray+0xf8>
nopl   0x0(%rax)

0000000000014bc0 <TIFFReadDirEntryShortArray>:
push   %rbp
mov    %rsp,%rbp
sub    $0x80,%rsp
mov    $0x2,%eax
movzwl 0x2(%rsi),%ecx
add    $0xffffffff,%ecx
cmp    $0x10,%ecx
jbe    14bde <TIFFReadDirEntryShortArray+0x1e>
leaveq 
retq   
lea    0x3e3c3(%rip),%r8        # 52fa8 <reason.25+0xe82>
movslq (%r8,%rcx,4),%rcx
add    %r8,%rcx
jmpq   *%rcx
leaveq 
retq   
lea    -0x7c(%rbp),%r10
lea    -0x78(%rbp),%r8
mov    %rdi,%rcx
mov    %rsi,%r9
mov    %r15,-0x60(%rbp)
mov    %rsi,-0x70(%rbp)
mov    %rdi,-0x68(%rbp)
mov    %r9,%rsi
mov    %rcx,%rdi
mov    %rax,%rcx
mov    %rdx,%r15
mov    %r10,%rdx
callq  14030 <TIFFReadDirEntryArray>
test   %eax,%eax
jne    14ca1 <TIFFReadDirEntryShortArray+0xe1>
mov    -0x78(%rbp),%rdi
test   %rdi,%rdi
je     14ca1 <TIFFReadDirEntryShortArray+0xe1>
xor    %eax,%eax
mov    -0x70(%rbp),%rdx
movzwl 0x2(%rdx),%ecx
cmp    $0x3,%cx
je     14cae <TIFFReadDirEntryShortArray+0xee>
cmp    $0x8,%cx
je     14cc8 <TIFFReadDirEntryShortArray+0x108>
mov    -0x7c(%rbp),%eax
add    %eax,%eax
mov    %eax,%edi
mov    %r15,-0x20(%rbp)
mov    %rdx,%r15
callq  8440 <_TIFFmalloc@plt>
test   %rax,%rax
je     14ce3 <TIFFReadDirEntryShortArray+0x123>
movzwl 0x2(%r15),%ecx
add    $0xffffffff,%ecx
cmp    $0x10,%ecx
jbe    14cf7 <TIFFReadDirEntryShortArray+0x137>
xor    %r15d,%r15d
mov    -0x78(%rbp),%rdi
mov    %r14,-0x70(%rbp)
mov    %rax,%r14
callq  8bb0 <_TIFFfree@plt>
test   %r15d,%r15d
jne    14d0f <TIFFReadDirEntryShortArray+0x14f>
mov    -0x20(%rbp),%rax
mov    %r14,(%rax)
mov    -0x70(%rbp),%r14
xor    %eax,%eax
mov    -0x60(%rbp),%r15
leaveq 
retq   
movq   $0x0,(%r15)
mov    -0x60(%rbp),%r15
leaveq 
retq   
mov    %rdi,(%r15)
mov    -0x68(%rbp),%rcx
mov    0x10(%rcx),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
jne    14d24 <TIFFReadDirEntryShortArray+0x164>
mov    -0x60(%rbp),%r15
leaveq 
retq   
mov    %r15,-0x8(%rbp)
mov    %r14,-0x70(%rbp)
mov    %r13,-0x20(%rbp)
mov    %rax,%r13
mov    %rdi,%r14
mov    -0x68(%rbp),%r15
jmpq   14d66 <TIFFReadDirEntryShortArray+0x1a6>
mov    -0x78(%rbp),%rdi
callq  8bb0 <_TIFFfree@plt>
mov    $0x7,%eax
mov    -0x60(%rbp),%r15
leaveq 
retq   
lea    0x3e2ee(%rip),%rdx        # 52fec <reason.25+0xec6>
movslq (%rdx,%rcx,4),%rcx
add    %rdx,%rcx
jmpq   *%rcx
xor    %r15d,%r15d
jmpq   14c75 <TIFFReadDirEntryShortArray+0xb5>
mov    %r14,%rdi
callq  8bb0 <_TIFFfree@plt>
mov    %r15,%rax
mov    -0x70(%rbp),%r14
mov    -0x60(%rbp),%r15
leaveq 
retq   
mov    %rax,%r15
mov    -0x7c(%rbp),%esi
callq  83d0 <TIFFSwabArrayOfShort@plt>
mov    %r15,%rax
mov    -0x60(%rbp),%r15
leaveq 
retq   
mov    0x10(%r15),%eax
and    $0x80,%eax
test   %eax,%eax
je     14d4d <TIFFReadDirEntryShortArray+0x18d>
mov    %r14,%rdi
callq  87c0 <TIFFSwabShort@plt>
movswq (%r14),%rdi
callq  17a30 <TIFFReadDirEntryCheckRangeShortSshort>
test   %eax,%eax
jne    14e3f <TIFFReadDirEntryShortArray+0x27f>
add    $0x2,%r14
add    $0x1,%r13d
mov    -0x7c(%rbp),%eax
cmp    %r13d,%eax
ja     14d38 <TIFFReadDirEntryShortArray+0x178>
mov    -0x78(%rbp),%rax
mov    -0x8(%rbp),%rcx
mov    %rax,(%rcx)
mov    -0x20(%rbp),%r13
mov    -0x70(%rbp),%r14
xor    %eax,%eax
mov    -0x60(%rbp),%r15
leaveq 
retq   
mov    -0x78(%rbp),%rcx
xor    %edx,%edx
mov    %rax,%rsi
jmpq   14e6d <TIFFReadDirEntryShortArray+0x2ad>
mov    -0x78(%rbp),%r15
mov    %r14,-0x70(%rbp)
mov    %r13,-0x68(%rbp)
mov    %rax,-0x10(%rbp)
mov    %r12,-0x38(%rbp)
xor    %r12d,%r12d
jmpq   14ea3 <TIFFReadDirEntryShortArray+0x2e3>
mov    -0x78(%rbp),%r15
mov    %r14,-0x70(%rbp)
mov    %r13,-0x50(%rbp)
mov    %rax,-0x10(%rbp)
mov    %r12,-0x40(%rbp)
mov    %rbx,-0x28(%rbp)
xor    %ebx,%ebx
mov    -0x68(%rbp),%r12
jmpq   14f05 <TIFFReadDirEntryShortArray+0x345>
mov    -0x78(%rbp),%r15
mov    %r14,-0x70(%rbp)
mov    %r13,-0x50(%rbp)
mov    %rax,-0x18(%rbp)
mov    %r12,-0x40(%rbp)
mov    %rbx,-0x30(%rbp)
xor    %ebx,%ebx
mov    -0x68(%rbp),%r12
jmpq   14f6a <TIFFReadDirEntryShortArray+0x3aa>
mov    -0x78(%rbp),%r15
mov    %r14,-0x70(%rbp)
mov    %r13,-0x58(%rbp)
mov    %rax,-0x18(%rbp)
mov    %r12,-0x48(%rbp)
mov    %rbx,-0x30(%rbp)
xor    %ebx,%ebx
mov    -0x68(%rbp),%r12
jmpq   14fcf <TIFFReadDirEntryShortArray+0x40f>
mov    -0x78(%rbp),%r15
mov    %r14,-0x70(%rbp)
mov    %r13,-0x58(%rbp)
mov    %rax,-0x28(%rbp)
mov    %r12,-0x48(%rbp)
mov    %rbx,-0x38(%rbp)
xor    %ebx,%ebx
mov    -0x68(%rbp),%r12
jmpq   15034 <TIFFReadDirEntryShortArray+0x474>
mov    %rax,%r15
mov    -0x78(%rbp),%rdi
callq  8bb0 <_TIFFfree@plt>
mov    %r15,%rax
mov    -0x20(%rbp),%r13
mov    -0x70(%rbp),%r14
mov    -0x60(%rbp),%r15
leaveq 
retq   
movzbl (%rcx),%edi
mov    %di,(%rsi)
add    $0x1,%rcx
add    $0x2,%rsi
add    $0x1,%edx
mov    -0x7c(%rbp),%edi
cmp    %edx,%edi
ja     14e5c <TIFFReadDirEntryShortArray+0x29c>
xor    %r15d,%r15d
jmpq   14c75 <TIFFReadDirEntryShortArray+0xb5>
mov    %rax,%r14
movsbq (%r15),%r13
mov    %r13,%rdi
callq  17a10 <TIFFReadDirEntryCheckRangeShortSbyte>
test   %eax,%eax
jne    15057 <TIFFReadDirEntryShortArray+0x497>
mov    %r13w,(%r14)
add    $0x1,%r15
lea    0x2(%r14),%rax
add    $0x1,%r12d
mov    -0x7c(%rbp),%ecx
cmp    %r12d,%ecx
ja     14e7c <TIFFReadDirEntryShortArray+0x2bc>
mov    -0x38(%rbp),%r12
mov    -0x10(%rbp),%rax
mov    -0x68(%rbp),%r13
mov    -0x70(%rbp),%r14
xor    %r15d,%r15d
jmpq   14c75 <TIFFReadDirEntryShortArray+0xb5>
mov    0x10(%r12),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
je     14ee0 <TIFFReadDirEntryShortArray+0x320>
mov    %rax,%r13
mov    %r15,%rdi
callq  8480 <TIFFSwabLong@plt>
mov    %r13,%rax
mov    %rax,%r14
mov    (%r15),%r13d
mov    %r13,%rdi
callq  17a50 <TIFFReadDirEntryCheckRangeShortLong>
test   %eax,%eax
jne    1506f <TIFFReadDirEntryShortArray+0x4af>
mov    %r13w,(%r14)
add    $0x4,%r15
lea    0x2(%r14),%rax
add    $0x1,%ebx
mov    -0x7c(%rbp),%ecx
cmp    %ebx,%ecx
ja     14ec3 <TIFFReadDirEntryShortArray+0x303>
mov    -0x28(%rbp),%rbx
mov    -0x40(%rbp),%r12
mov    -0x10(%rbp),%rax
mov    -0x50(%rbp),%r13
mov    -0x70(%rbp),%r14
xor    %r15d,%r15d
jmpq   14c75 <TIFFReadDirEntryShortArray+0xb5>
mov    0x10(%r12),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
je     14f45 <TIFFReadDirEntryShortArray+0x385>
mov    %rax,%r13
mov    %r15,%rdi
callq  8480 <TIFFSwabLong@plt>
mov    %r13,%rax
mov    %rax,%r14
movslq (%r15),%r13
mov    %r13,%rdi
callq  17a70 <TIFFReadDirEntryCheckRangeShortSlong>
test   %eax,%eax
jne    1508b <TIFFReadDirEntryShortArray+0x4cb>
mov    %r13w,(%r14)
add    $0x4,%r15
lea    0x2(%r14),%rax
add    $0x1,%ebx
mov    -0x7c(%rbp),%ecx
cmp    %ebx,%ecx
ja     14f28 <TIFFReadDirEntryShortArray+0x368>
mov    -0x30(%rbp),%rbx
mov    -0x40(%rbp),%r12
mov    -0x18(%rbp),%rax
mov    -0x50(%rbp),%r13
mov    -0x70(%rbp),%r14
xor    %r15d,%r15d
jmpq   14c75 <TIFFReadDirEntryShortArray+0xb5>
mov    0x10(%r12),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
je     14faa <TIFFReadDirEntryShortArray+0x3ea>
mov    %rax,%r13
mov    %r15,%rdi
callq  8730 <TIFFSwabLong8@plt>
mov    %r13,%rax
mov    %rax,%r14
mov    (%r15),%r13
mov    %r13,%rdi
callq  17a90 <TIFFReadDirEntryCheckRangeShortLong8>
test   %eax,%eax
jne    150a7 <TIFFReadDirEntryShortArray+0x4e7>
mov    %r13w,(%r14)
add    $0x8,%r15
lea    0x2(%r14),%rax
add    $0x1,%ebx
mov    -0x7c(%rbp),%ecx
cmp    %ebx,%ecx
ja     14f8d <TIFFReadDirEntryShortArray+0x3cd>
mov    -0x30(%rbp),%rbx
mov    -0x48(%rbp),%r12
mov    -0x18(%rbp),%rax
mov    -0x58(%rbp),%r13
mov    -0x70(%rbp),%r14
xor    %r15d,%r15d
jmpq   14c75 <TIFFReadDirEntryShortArray+0xb5>
mov    0x10(%r12),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
je     1500f <TIFFReadDirEntryShortArray+0x44f>
mov    %rax,%r13
mov    %r15,%rdi
callq  8730 <TIFFSwabLong8@plt>
mov    %r13,%rax
mov    %rax,%r14
mov    (%r15),%r13
mov    %r13,%rdi
callq  17ab0 <TIFFReadDirEntryCheckRangeShortSlong8>
test   %eax,%eax
jne    150c3 <TIFFReadDirEntryShortArray+0x503>
mov    %r13w,(%r14)
add    $0x8,%r15
lea    0x2(%r14),%rax
add    $0x1,%ebx
mov    -0x7c(%rbp),%ecx
cmp    %ebx,%ecx
ja     14ff2 <TIFFReadDirEntryShortArray+0x432>
mov    -0x38(%rbp),%rbx
mov    -0x48(%rbp),%r12
mov    -0x28(%rbp),%rax
mov    -0x58(%rbp),%r13
mov    -0x70(%rbp),%r14
xor    %r15d,%r15d
jmpq   14c75 <TIFFReadDirEntryShortArray+0xb5>
mov    %rax,%r15
mov    -0x38(%rbp),%r12
mov    -0x10(%rbp),%rax
mov    -0x68(%rbp),%r13
mov    -0x70(%rbp),%r14
jmpq   14c75 <TIFFReadDirEntryShortArray+0xb5>
mov    %rax,%r15
mov    -0x28(%rbp),%rbx
mov    -0x40(%rbp),%r12
mov    -0x10(%rbp),%rax
mov    -0x50(%rbp),%r13
mov    -0x70(%rbp),%r14
jmpq   14c75 <TIFFReadDirEntryShortArray+0xb5>
mov    %rax,%r15
mov    -0x30(%rbp),%rbx
mov    -0x40(%rbp),%r12
mov    -0x18(%rbp),%rax
mov    -0x50(%rbp),%r13
mov    -0x70(%rbp),%r14
jmpq   14c75 <TIFFReadDirEntryShortArray+0xb5>
mov    %rax,%r15
mov    -0x30(%rbp),%rbx
mov    -0x48(%rbp),%r12
mov    -0x18(%rbp),%rax
mov    -0x58(%rbp),%r13
mov    -0x70(%rbp),%r14
jmpq   14c75 <TIFFReadDirEntryShortArray+0xb5>
mov    %rax,%r15
mov    -0x38(%rbp),%rbx
mov    -0x48(%rbp),%r12
mov    -0x28(%rbp),%rax
mov    -0x58(%rbp),%r13
mov    -0x70(%rbp),%r14
jmpq   14c75 <TIFFReadDirEntryShortArray+0xb5>
nop

00000000000150e0 <TIFFReadDirEntrySshortArray>:
push   %rbp
mov    %rsp,%rbp
sub    $0x80,%rsp
mov    $0x2,%eax
movzwl 0x2(%rsi),%ecx
add    $0xffffffff,%ecx
cmp    $0x10,%ecx
jbe    150fe <TIFFReadDirEntrySshortArray+0x1e>
leaveq 
retq   
lea    0x3df2b(%rip),%r8        # 53030 <reason.25+0xf0a>
movslq (%r8,%rcx,4),%rcx
add    %r8,%rcx
jmpq   *%rcx
leaveq 
retq   
lea    -0x74(%rbp),%r10
lea    -0x70(%rbp),%r8
mov    %rdi,%rcx
mov    %rsi,%r9
mov    %r15,-0x58(%rbp)
mov    %rsi,-0x68(%rbp)
mov    %rdi,-0x60(%rbp)
mov    %r9,%rsi
mov    %rcx,%rdi
mov    %rax,%rcx
mov    %rdx,%r15
mov    %r10,%rdx
callq  14030 <TIFFReadDirEntryArray>
test   %eax,%eax
jne    151c1 <TIFFReadDirEntrySshortArray+0xe1>
mov    -0x70(%rbp),%rdi
test   %rdi,%rdi
je     151c1 <TIFFReadDirEntrySshortArray+0xe1>
xor    %eax,%eax
mov    -0x68(%rbp),%rdx
movzwl 0x2(%rdx),%ecx
cmp    $0x3,%cx
je     151ce <TIFFReadDirEntrySshortArray+0xee>
cmp    $0x8,%cx
je     151e9 <TIFFReadDirEntrySshortArray+0x109>
mov    -0x74(%rbp),%eax
add    %eax,%eax
mov    %eax,%edi
mov    %r15,-0x20(%rbp)
mov    %rdx,%r15
callq  8440 <_TIFFmalloc@plt>
test   %rax,%rax
je     15207 <TIFFReadDirEntrySshortArray+0x127>
movzwl 0x2(%r15),%ecx
add    $0xffffffff,%ecx
cmp    $0x10,%ecx
jbe    1521b <TIFFReadDirEntrySshortArray+0x13b>
xor    %r15d,%r15d
mov    -0x70(%rbp),%rdi
mov    %r14,-0x68(%rbp)
mov    %rax,%r14
callq  8bb0 <_TIFFfree@plt>
test   %r15d,%r15d
jne    15233 <TIFFReadDirEntrySshortArray+0x153>
mov    -0x20(%rbp),%rax
mov    %r14,(%rax)
mov    -0x68(%rbp),%r14
xor    %eax,%eax
mov    -0x58(%rbp),%r15
leaveq 
retq   
movq   $0x0,(%r15)
mov    -0x58(%rbp),%r15
leaveq 
retq   
mov    %r15,-0x8(%rbp)
mov    %r14,-0x68(%rbp)
mov    %r13,-0x20(%rbp)
mov    %rax,%r13
mov    %rdi,%r14
mov    -0x60(%rbp),%r15
jmpq   15276 <TIFFReadDirEntrySshortArray+0x196>
mov    %rdi,(%r15)
mov    -0x60(%rbp),%rcx
mov    0x10(%rcx),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
jne    15299 <TIFFReadDirEntrySshortArray+0x1b9>
mov    -0x58(%rbp),%r15
leaveq 
retq   
mov    -0x70(%rbp),%rdi
callq  8bb0 <_TIFFfree@plt>
mov    $0x7,%eax
mov    -0x58(%rbp),%r15
leaveq 
retq   
lea    0x3de52(%rip),%rdx        # 53074 <reason.25+0xf4e>
movslq (%rdx,%rcx,4),%rcx
add    %rdx,%rcx
jmpq   *%rcx
xor    %r15d,%r15d
jmpq   15195 <TIFFReadDirEntrySshortArray+0xb5>
mov    %r14,%rdi
callq  8bb0 <_TIFFfree@plt>
mov    %r15,%rax
mov    -0x68(%rbp),%r14
mov    -0x58(%rbp),%r15
leaveq 
retq   
mov    0x10(%r15),%eax
and    $0x80,%eax
test   %eax,%eax
je     1525d <TIFFReadDirEntrySshortArray+0x17d>
mov    %r14,%rdi
callq  87c0 <TIFFSwabShort@plt>
movzwl (%r14),%edi
callq  17ad0 <TIFFReadDirEntryCheckRangeSshortShort>
test   %eax,%eax
jne    15355 <TIFFReadDirEntrySshortArray+0x275>
add    $0x2,%r14
add    $0x1,%r13d
mov    -0x74(%rbp),%eax
cmp    %r13d,%eax
ja     15248 <TIFFReadDirEntrySshortArray+0x168>
mov    -0x70(%rbp),%rax
mov    -0x8(%rbp),%rcx
mov    %rax,(%rcx)
mov    -0x20(%rbp),%r13
mov    -0x68(%rbp),%r14
xor    %eax,%eax
mov    -0x58(%rbp),%r15
leaveq 
retq   
mov    %rax,%r15
mov    -0x74(%rbp),%esi
callq  83d0 <TIFFSwabArrayOfShort@plt>
mov    %r15,%rax
mov    -0x58(%rbp),%r15
leaveq 
retq   
mov    -0x70(%rbp),%rcx
xor    %edx,%edx
mov    %rax,%rsi
jmpq   15383 <TIFFReadDirEntrySshortArray+0x2a3>
mov    -0x70(%rbp),%rcx
xor    %edx,%edx
mov    %rax,%rsi
jmpq   153a4 <TIFFReadDirEntrySshortArray+0x2c4>
mov    -0x70(%rbp),%r15
mov    %r14,-0x68(%rbp)
mov    %r13,-0x48(%rbp)
mov    %rax,-0x10(%rbp)
mov    %rbx,-0x28(%rbp)
mov    %r12,-0x38(%rbp)
xor    %ebx,%ebx
mov    -0x60(%rbp),%r12
jmpq   153f5 <TIFFReadDirEntrySshortArray+0x315>
mov    -0x70(%rbp),%r15
mov    %r14,-0x68(%rbp)
mov    %r13,-0x48(%rbp)
mov    %rax,-0x10(%rbp)
mov    %rbx,-0x28(%rbp)
mov    %r12,-0x38(%rbp)
xor    %ebx,%ebx
mov    -0x60(%rbp),%r12
jmpq   1545a <TIFFReadDirEntrySshortArray+0x37a>
mov    -0x70(%rbp),%r15
mov    %r14,-0x68(%rbp)
mov    %r13,-0x50(%rbp)
mov    %rax,-0x18(%rbp)
mov    %rbx,-0x30(%rbp)
mov    %r12,-0x40(%rbp)
xor    %ebx,%ebx
mov    -0x60(%rbp),%r12
jmpq   154bf <TIFFReadDirEntrySshortArray+0x3df>
mov    -0x70(%rbp),%r15
mov    %r14,-0x68(%rbp)
mov    %r13,-0x50(%rbp)
mov    %rax,-0x18(%rbp)
mov    %rbx,-0x30(%rbp)
mov    %r12,-0x40(%rbp)
xor    %ebx,%ebx
mov    -0x60(%rbp),%r12
jmpq   15524 <TIFFReadDirEntrySshortArray+0x444>
mov    %rax,%r15
mov    -0x70(%rbp),%rdi
callq  8bb0 <_TIFFfree@plt>
mov    %r15,%rax
mov    -0x20(%rbp),%r13
mov    -0x68(%rbp),%r14
mov    -0x58(%rbp),%r15
leaveq 
retq   
movzbl (%rcx),%edi
mov    %di,(%rsi)
add    $0x1,%rcx
add    $0x2,%rsi
add    $0x1,%edx
mov    -0x74(%rbp),%edi
cmp    %edx,%edi
ja     15372 <TIFFReadDirEntrySshortArray+0x292>
xor    %r15d,%r15d
jmpq   15195 <TIFFReadDirEntrySshortArray+0xb5>
movsbq (%rcx),%rdi
mov    %di,(%rsi)
add    $0x1,%rcx
add    $0x2,%rsi
add    $0x1,%edx
mov    -0x74(%rbp),%edi
cmp    %edx,%edi
ja     15392 <TIFFReadDirEntrySshortArray+0x2b2>
xor    %r15d,%r15d
jmpq   15195 <TIFFReadDirEntrySshortArray+0xb5>
mov    0x10(%r12),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
je     153d0 <TIFFReadDirEntrySshortArray+0x2f0>
mov    %rax,%r13
mov    %r15,%rdi
callq  8480 <TIFFSwabLong@plt>
mov    %r13,%rax
mov    %rax,%r14
mov    (%r15),%r13d
mov    %r13,%rdi
callq  17af0 <TIFFReadDirEntryCheckRangeSshortLong>
test   %eax,%eax
jne    15547 <TIFFReadDirEntrySshortArray+0x467>
mov    %r13w,(%r14)
add    $0x4,%r15
lea    0x2(%r14),%rax
add    $0x1,%ebx
mov    -0x74(%rbp),%ecx
cmp    %ebx,%ecx
ja     153b3 <TIFFReadDirEntrySshortArray+0x2d3>
mov    -0x38(%rbp),%r12
mov    -0x28(%rbp),%rbx
mov    -0x10(%rbp),%rax
mov    -0x48(%rbp),%r13
mov    -0x68(%rbp),%r14
xor    %r15d,%r15d
jmpq   15195 <TIFFReadDirEntrySshortArray+0xb5>
mov    0x10(%r12),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
je     15435 <TIFFReadDirEntrySshortArray+0x355>
mov    %rax,%r13
mov    %r15,%rdi
callq  8480 <TIFFSwabLong@plt>
mov    %r13,%rax
mov    %rax,%r14
movslq (%r15),%r13
mov    %r13,%rdi
callq  17b10 <TIFFReadDirEntryCheckRangeSshortSlong>
test   %eax,%eax
jne    15563 <TIFFReadDirEntrySshortArray+0x483>
mov    %r13w,(%r14)
add    $0x4,%r15
lea    0x2(%r14),%rax
add    $0x1,%ebx
mov    -0x74(%rbp),%ecx
cmp    %ebx,%ecx
ja     15418 <TIFFReadDirEntrySshortArray+0x338>
mov    -0x38(%rbp),%r12
mov    -0x28(%rbp),%rbx
mov    -0x10(%rbp),%rax
mov    -0x48(%rbp),%r13
mov    -0x68(%rbp),%r14
xor    %r15d,%r15d
jmpq   15195 <TIFFReadDirEntrySshortArray+0xb5>
mov    0x10(%r12),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
je     1549a <TIFFReadDirEntrySshortArray+0x3ba>
mov    %rax,%r13
mov    %r15,%rdi
callq  8730 <TIFFSwabLong8@plt>
mov    %r13,%rax
mov    %rax,%r14
mov    (%r15),%r13
mov    %r13,%rdi
callq  17b40 <TIFFReadDirEntryCheckRangeSshortLong8>
test   %eax,%eax
jne    1557f <TIFFReadDirEntrySshortArray+0x49f>
mov    %r13w,(%r14)
add    $0x8,%r15
lea    0x2(%r14),%rax
add    $0x1,%ebx
mov    -0x74(%rbp),%ecx
cmp    %ebx,%ecx
ja     1547d <TIFFReadDirEntrySshortArray+0x39d>
mov    -0x40(%rbp),%r12
mov    -0x30(%rbp),%rbx
mov    -0x18(%rbp),%rax
mov    -0x50(%rbp),%r13
mov    -0x68(%rbp),%r14
xor    %r15d,%r15d
jmpq   15195 <TIFFReadDirEntrySshortArray+0xb5>
mov    0x10(%r12),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
je     154ff <TIFFReadDirEntrySshortArray+0x41f>
mov    %rax,%r13
mov    %r15,%rdi
callq  8730 <TIFFSwabLong8@plt>
mov    %r13,%rax
mov    %rax,%r14
mov    (%r15),%r13
mov    %r13,%rdi
callq  17b60 <TIFFReadDirEntryCheckRangeSshortSlong8>
test   %eax,%eax
jne    1559b <TIFFReadDirEntrySshortArray+0x4bb>
mov    %r13w,(%r14)
add    $0x8,%r15
lea    0x2(%r14),%rax
add    $0x1,%ebx
mov    -0x74(%rbp),%ecx
cmp    %ebx,%ecx
ja     154e2 <TIFFReadDirEntrySshortArray+0x402>
mov    -0x40(%rbp),%r12
mov    -0x30(%rbp),%rbx
mov    -0x18(%rbp),%rax
mov    -0x50(%rbp),%r13
mov    -0x68(%rbp),%r14
xor    %r15d,%r15d
jmpq   15195 <TIFFReadDirEntrySshortArray+0xb5>
mov    %rax,%r15
mov    -0x38(%rbp),%r12
mov    -0x28(%rbp),%rbx
mov    -0x10(%rbp),%rax
mov    -0x48(%rbp),%r13
mov    -0x68(%rbp),%r14
jmpq   15195 <TIFFReadDirEntrySshortArray+0xb5>
mov    %rax,%r15
mov    -0x38(%rbp),%r12
mov    -0x28(%rbp),%rbx
mov    -0x10(%rbp),%rax
mov    -0x48(%rbp),%r13
mov    -0x68(%rbp),%r14
jmpq   15195 <TIFFReadDirEntrySshortArray+0xb5>
mov    %rax,%r15
mov    -0x40(%rbp),%r12
mov    -0x30(%rbp),%rbx
mov    -0x18(%rbp),%rax
mov    -0x50(%rbp),%r13
mov    -0x68(%rbp),%r14
jmpq   15195 <TIFFReadDirEntrySshortArray+0xb5>
mov    %rax,%r15
mov    -0x40(%rbp),%r12
mov    -0x30(%rbp),%rbx
mov    -0x18(%rbp),%rax
mov    -0x50(%rbp),%r13
mov    -0x68(%rbp),%r14
jmpq   15195 <TIFFReadDirEntrySshortArray+0xb5>
nopw   0x0(%rax,%rax,1)

00000000000155c0 <TIFFReadDirEntryLongArray>:
push   %rbp
mov    %rsp,%rbp
sub    $0x80,%rsp
mov    $0x2,%eax
movzwl 0x2(%rsi),%ecx
add    $0xffffffff,%ecx
cmp    $0x10,%ecx
jbe    155de <TIFFReadDirEntryLongArray+0x1e>
leaveq 
retq   
lea    0x3dad3(%rip),%r8        # 530b8 <reason.25+0xf92>
movslq (%r8,%rcx,4),%rcx
add    %r8,%rcx
jmpq   *%rcx
leaveq 
retq   
lea    -0x74(%rbp),%r10
mov    $0x4,%ecx
lea    -0x70(%rbp),%r8
mov    %rdi,%rax
mov    %rsi,%r9
mov    %r15,-0x58(%rbp)
mov    %rsi,-0x68(%rbp)
mov    %rdi,-0x60(%rbp)
mov    %r9,%rsi
mov    %rax,%rdi
mov    %rdx,%r15
mov    %r10,%rdx
callq  14030 <TIFFReadDirEntryArray>
test   %eax,%eax
jne    156a8 <TIFFReadDirEntryLongArray+0xe8>
mov    -0x70(%rbp),%rdi
test   %rdi,%rdi
je     156a8 <TIFFReadDirEntryLongArray+0xe8>
xor    %eax,%eax
mov    -0x68(%rbp),%rdx
movzwl 0x2(%rdx),%ecx
cmp    $0x4,%cx
je     156b5 <TIFFReadDirEntryLongArray+0xf5>
cmp    $0x9,%cx
je     156cf <TIFFReadDirEntryLongArray+0x10f>
mov    -0x74(%rbp),%eax
shl    $0x2,%eax
mov    %eax,%edi
mov    %r15,-0x20(%rbp)
mov    %rdx,%r15
callq  8440 <_TIFFmalloc@plt>
test   %rax,%rax
je     156ea <TIFFReadDirEntryLongArray+0x12a>
movzwl 0x2(%r15),%ecx
add    $0xffffffff,%ecx
cmp    $0x10,%ecx
jbe    156fe <TIFFReadDirEntryLongArray+0x13e>
xor    %r15d,%r15d
mov    -0x70(%rbp),%rdi
mov    %r14,-0x68(%rbp)
mov    %rax,%r14
callq  8bb0 <_TIFFfree@plt>
test   %r15d,%r15d
jne    15716 <TIFFReadDirEntryLongArray+0x156>
mov    -0x20(%rbp),%rax
mov    %r14,(%rax)
mov    -0x68(%rbp),%r14
xor    %eax,%eax
mov    -0x58(%rbp),%r15
leaveq 
retq   
movq   $0x0,(%r15)
mov    -0x58(%rbp),%r15
leaveq 
retq   
mov    %rdi,(%r15)
mov    -0x60(%rbp),%rcx
mov    0x10(%rcx),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
jne    1572b <TIFFReadDirEntryLongArray+0x16b>
mov    -0x58(%rbp),%r15
leaveq 
retq   
mov    %r15,-0x8(%rbp)
mov    %r14,-0x68(%rbp)
mov    %r13,-0x20(%rbp)
mov    %rax,%r13
mov    %rdi,%r14
mov    -0x60(%rbp),%r15
jmpq   1576c <TIFFReadDirEntryLongArray+0x1ac>
mov    -0x70(%rbp),%rdi
callq  8bb0 <_TIFFfree@plt>
mov    $0x7,%eax
mov    -0x58(%rbp),%r15
leaveq 
retq   
lea    0x3d9f7(%rip),%rdx        # 530fc <reason.25+0xfd6>
movslq (%rdx,%rcx,4),%rcx
add    %rdx,%rcx
jmpq   *%rcx
xor    %r15d,%r15d
jmpq   1567c <TIFFReadDirEntryLongArray+0xbc>
mov    %r14,%rdi
callq  8bb0 <_TIFFfree@plt>
mov    %r15,%rax
mov    -0x68(%rbp),%r14
mov    -0x58(%rbp),%r15
leaveq 
retq   
mov    %rax,%r15
mov    -0x74(%rbp),%esi
callq  8b70 <TIFFSwabArrayOfLong@plt>
mov    %r15,%rax
mov    -0x58(%rbp),%r15
leaveq 
retq   
mov    0x10(%r15),%eax
and    $0x80,%eax
test   %eax,%eax
je     15754 <TIFFReadDirEntryLongArray+0x194>
mov    %r14,%rdi
callq  8480 <TIFFSwabLong@plt>
movslq (%r14),%rdi
callq  17bd0 <TIFFReadDirEntryCheckRangeLongSlong>
test   %eax,%eax
jne    15844 <TIFFReadDirEntryLongArray+0x284>
add    $0x4,%r14
add    $0x1,%r13d
mov    -0x74(%rbp),%eax
cmp    %r13d,%eax
ja     1573f <TIFFReadDirEntryLongArray+0x17f>
mov    -0x70(%rbp),%rax
mov    -0x8(%rbp),%rcx
mov    %rax,(%rcx)
mov    -0x20(%rbp),%r13
mov    -0x68(%rbp),%r14
xor    %eax,%eax
mov    -0x58(%rbp),%r15
leaveq 
retq   
mov    -0x70(%rbp),%rdx
xor    %ecx,%ecx
mov    %rax,%rsi
jmpq   15871 <TIFFReadDirEntryLongArray+0x2b1>
mov    -0x70(%rbp),%r15
mov    %r14,-0x68(%rbp)
mov    %r13,-0x60(%rbp)
mov    %rax,-0x8(%rbp)
mov    %r12,-0x30(%rbp)
xor    %r12d,%r12d
jmpq   158a6 <TIFFReadDirEntryLongArray+0x2e6>
mov    -0x70(%rbp),%r15
mov    %r14,-0x68(%rbp)
mov    %r13,-0x48(%rbp)
mov    %rax,-0x10(%rbp)
mov    %r12,-0x38(%rbp)
xor    %r12d,%r12d
mov    -0x60(%rbp),%r13
jmpq   158f4 <TIFFReadDirEntryLongArray+0x334>
mov    -0x70(%rbp),%r15
mov    %r14,-0x68(%rbp)
mov    %r13,-0x48(%rbp)
mov    %rax,-0x10(%rbp)
mov    %r12,-0x38(%rbp)
mov    %rbx,-0x28(%rbp)
xor    %r12d,%r12d
mov    -0x60(%rbp),%rbx
jmpq   15955 <TIFFReadDirEntryLongArray+0x395>
mov    -0x70(%rbp),%r15
mov    %r14,-0x68(%rbp)
mov    %r13,-0x50(%rbp)
mov    %rax,-0x18(%rbp)
mov    %r12,-0x40(%rbp)
mov    %rbx,-0x28(%rbp)
xor    %r12d,%r12d
mov    -0x60(%rbp),%rbx
jmpq   159b9 <TIFFReadDirEntryLongArray+0x3f9>
mov    -0x70(%rbp),%r15
mov    %r14,-0x68(%rbp)
mov    %r13,-0x50(%rbp)
mov    %rax,-0x18(%rbp)
mov    %r12,-0x40(%rbp)
mov    %rbx,-0x30(%rbp)
xor    %ebx,%ebx
mov    -0x60(%rbp),%r12
jmpq   15a1e <TIFFReadDirEntryLongArray+0x45e>
mov    %rax,%r15
mov    -0x70(%rbp),%rdi
callq  8bb0 <_TIFFfree@plt>
mov    %r15,%rax
mov    -0x20(%rbp),%r13
mov    -0x68(%rbp),%r14
mov    -0x58(%rbp),%r15
leaveq 
retq   
movzbl (%rdx),%edi
mov    %edi,(%rsi)
add    $0x1,%rdx
add    $0x4,%rsi
add    $0x1,%ecx
mov    -0x74(%rbp),%edi
cmp    %ecx,%edi
ja     15861 <TIFFReadDirEntryLongArray+0x2a1>
xor    %r15d,%r15d
jmpq   1567c <TIFFReadDirEntryLongArray+0xbc>
mov    %rax,%r14
movsbq (%r15),%r13
mov    %r13,%rdi
callq  17b90 <TIFFReadDirEntryCheckRangeLongSbyte>
test   %eax,%eax
jne    15a41 <TIFFReadDirEntryLongArray+0x481>
mov    %r13d,(%r14)
add    $0x1,%r15
lea    0x4(%r14),%rax
add    $0x1,%r12d
mov    -0x74(%rbp),%ecx
cmp    %r12d,%ecx
ja     15880 <TIFFReadDirEntryLongArray+0x2c0>
mov    -0x30(%rbp),%r12
mov    -0x8(%rbp),%rax
mov    -0x60(%rbp),%r13
mov    -0x68(%rbp),%r14
xor    %r15d,%r15d
jmpq   1567c <TIFFReadDirEntryLongArray+0xbc>
mov    0x10(%r13),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
je     158e2 <TIFFReadDirEntryLongArray+0x322>
mov    %rax,%r14
mov    %r15,%rdi
callq  87c0 <TIFFSwabShort@plt>
mov    %r14,%rax
movzwl (%r15),%ecx
mov    %ecx,(%rax)
add    $0x2,%r15
add    $0x4,%rax
add    $0x1,%r12d
mov    -0x74(%rbp),%ecx
cmp    %r12d,%ecx
ja     158c6 <TIFFReadDirEntryLongArray+0x306>
mov    -0x38(%rbp),%r12
mov    -0x10(%rbp),%rax
mov    -0x48(%rbp),%r13
mov    -0x68(%rbp),%r14
xor    %r15d,%r15d
jmpq   1567c <TIFFReadDirEntryLongArray+0xbc>
mov    0x10(%rbx),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
je     1592f <TIFFReadDirEntryLongArray+0x36f>
mov    %rax,%r13
mov    %r15,%rdi
callq  87c0 <TIFFSwabShort@plt>
mov    %r13,%rax
mov    %rax,%r14
movswq (%r15),%r13
mov    %r13,%rdi
callq  17bb0 <TIFFReadDirEntryCheckRangeLongSshort>
test   %eax,%eax
jne    15a59 <TIFFReadDirEntryLongArray+0x499>
mov    %r13d,(%r14)
add    $0x2,%r15
lea    0x4(%r14),%rax
add    $0x1,%r12d
mov    -0x74(%rbp),%ecx
cmp    %r12d,%ecx
ja     15914 <TIFFReadDirEntryLongArray+0x354>
mov    -0x28(%rbp),%rbx
mov    -0x38(%rbp),%r12
mov    -0x10(%rbp),%rax
mov    -0x48(%rbp),%r13
mov    -0x68(%rbp),%r14
xor    %r15d,%r15d
jmpq   1567c <TIFFReadDirEntryLongArray+0xbc>
mov    0x10(%rbx),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
je     15994 <TIFFReadDirEntryLongArray+0x3d4>
mov    %rax,%r13
mov    %r15,%rdi
callq  8730 <TIFFSwabLong8@plt>
mov    %r13,%rax
mov    %rax,%r14
mov    (%r15),%r13
mov    %r13,%rdi
callq  17bf0 <TIFFReadDirEntryCheckRangeLongLong8>
test   %eax,%eax
jne    15a75 <TIFFReadDirEntryLongArray+0x4b5>
mov    %r13d,(%r14)
add    $0x8,%r15
lea    0x4(%r14),%rax
add    $0x1,%r12d
mov    -0x74(%rbp),%ecx
cmp    %r12d,%ecx
ja     15979 <TIFFReadDirEntryLongArray+0x3b9>
mov    -0x28(%rbp),%rbx
mov    -0x40(%rbp),%r12
mov    -0x18(%rbp),%rax
mov    -0x50(%rbp),%r13
mov    -0x68(%rbp),%r14
xor    %r15d,%r15d
jmpq   1567c <TIFFReadDirEntryLongArray+0xbc>
mov    0x10(%r12),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
je     159fa <TIFFReadDirEntryLongArray+0x43a>
mov    %rax,%r13
mov    %r15,%rdi
callq  8730 <TIFFSwabLong8@plt>
mov    %r13,%rax
mov    %rax,%r14
mov    (%r15),%r13
mov    %r13,%rdi
callq  17c10 <TIFFReadDirEntryCheckRangeLongSlong8>
test   %eax,%eax
jne    15a91 <TIFFReadDirEntryLongArray+0x4d1>
mov    %r13d,(%r14)
add    $0x8,%r15
lea    0x4(%r14),%rax
add    $0x1,%ebx
mov    -0x74(%rbp),%ecx
cmp    %ebx,%ecx
ja     159dd <TIFFReadDirEntryLongArray+0x41d>
mov    -0x30(%rbp),%rbx
mov    -0x40(%rbp),%r12
mov    -0x18(%rbp),%rax
mov    -0x50(%rbp),%r13
mov    -0x68(%rbp),%r14
xor    %r15d,%r15d
jmpq   1567c <TIFFReadDirEntryLongArray+0xbc>
mov    %rax,%r15
mov    -0x30(%rbp),%r12
mov    -0x8(%rbp),%rax
mov    -0x60(%rbp),%r13
mov    -0x68(%rbp),%r14
jmpq   1567c <TIFFReadDirEntryLongArray+0xbc>
mov    %rax,%r15
mov    -0x28(%rbp),%rbx
mov    -0x38(%rbp),%r12
mov    -0x10(%rbp),%rax
mov    -0x48(%rbp),%r13
mov    -0x68(%rbp),%r14
jmpq   1567c <TIFFReadDirEntryLongArray+0xbc>
mov    %rax,%r15
mov    -0x28(%rbp),%rbx
mov    -0x40(%rbp),%r12
mov    -0x18(%rbp),%rax
mov    -0x50(%rbp),%r13
mov    -0x68(%rbp),%r14
jmpq   1567c <TIFFReadDirEntryLongArray+0xbc>
mov    %rax,%r15
mov    -0x30(%rbp),%rbx
mov    -0x40(%rbp),%r12
mov    -0x18(%rbp),%rax
mov    -0x50(%rbp),%r13
mov    -0x68(%rbp),%r14
jmpq   1567c <TIFFReadDirEntryLongArray+0xbc>
nopl   (%rax)

0000000000015ab0 <TIFFReadDirEntrySlongArray>:
push   %rbp
mov    %rsp,%rbp
sub    $0x70,%rsp
mov    $0x2,%eax
movzwl 0x2(%rsi),%ecx
add    $0xffffffff,%ecx
cmp    $0x10,%ecx
jbe    15acb <TIFFReadDirEntrySlongArray+0x1b>
leaveq 
retq   
lea    0x3d66e(%rip),%r8        # 53140 <reason.25+0x101a>
movslq (%r8,%rcx,4),%rcx
add    %r8,%rcx
jmpq   *%rcx
leaveq 
retq   
lea    -0x6c(%rbp),%rax
mov    $0x4,%ecx
lea    -0x68(%rbp),%r8
mov    %rdi,%r9
mov    %rsi,%r10
mov    %r15,-0x50(%rbp)
mov    %rsi,-0x60(%rbp)
mov    %rdi,-0x58(%rbp)
mov    %r10,%rsi
mov    %r9,%rdi
mov    %rdx,%r15
mov    %rax,%rdx
callq  14030 <TIFFReadDirEntryArray>
test   %eax,%eax
jne    15b95 <TIFFReadDirEntrySlongArray+0xe5>
mov    -0x68(%rbp),%rdi
test   %rdi,%rdi
je     15b95 <TIFFReadDirEntrySlongArray+0xe5>
xor    %eax,%eax
mov    -0x60(%rbp),%rdx
movzwl 0x2(%rdx),%ecx
cmp    $0x4,%cx
je     15ba2 <TIFFReadDirEntrySlongArray+0xf2>
cmp    $0x9,%cx
je     15bbd <TIFFReadDirEntrySlongArray+0x10d>
mov    -0x6c(%rbp),%eax
shl    $0x2,%eax
mov    %eax,%edi
mov    %r15,-0x20(%rbp)
mov    %rdx,%r15
callq  8440 <_TIFFmalloc@plt>
test   %rax,%rax
je     15bdb <TIFFReadDirEntrySlongArray+0x12b>
movzwl 0x2(%r15),%ecx
add    $0xffffffff,%ecx
cmp    $0x10,%ecx
jbe    15bef <TIFFReadDirEntrySlongArray+0x13f>
xor    %r15d,%r15d
mov    -0x68(%rbp),%rdi
mov    %r14,-0x60(%rbp)
mov    %rax,%r14
callq  8bb0 <_TIFFfree@plt>
test   %r15d,%r15d
jne    15c07 <TIFFReadDirEntrySlongArray+0x157>
mov    -0x20(%rbp),%rax
mov    %r14,(%rax)
mov    -0x60(%rbp),%r14
xor    %eax,%eax
mov    -0x50(%rbp),%r15
leaveq 
retq   
movq   $0x0,(%r15)
mov    -0x50(%rbp),%r15
leaveq 
retq   
mov    %r15,-0x8(%rbp)
mov    %r14,-0x60(%rbp)
mov    %r13,-0x20(%rbp)
mov    %rax,%r13
mov    %rdi,%r14
mov    -0x58(%rbp),%r15
jmpq   15c49 <TIFFReadDirEntrySlongArray+0x199>
mov    %rdi,(%r15)
mov    -0x58(%rbp),%rcx
mov    0x10(%rcx),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
jne    15c6c <TIFFReadDirEntrySlongArray+0x1bc>
mov    -0x50(%rbp),%r15
leaveq 
retq   
mov    -0x68(%rbp),%rdi
callq  8bb0 <_TIFFfree@plt>
mov    $0x7,%eax
mov    -0x50(%rbp),%r15
leaveq 
retq   
lea    0x3d58e(%rip),%rdx        # 53184 <reason.25+0x105e>
movslq (%rdx,%rcx,4),%rcx
add    %rdx,%rcx
jmpq   *%rcx
xor    %r15d,%r15d
jmpq   15b69 <TIFFReadDirEntrySlongArray+0xb9>
mov    %r14,%rdi
callq  8bb0 <_TIFFfree@plt>
mov    %r15,%rax
mov    -0x60(%rbp),%r14
mov    -0x50(%rbp),%r15
leaveq 
retq   
mov    0x10(%r15),%eax
and    $0x80,%eax
test   %eax,%eax
je     15c31 <TIFFReadDirEntrySlongArray+0x181>
mov    %r14,%rdi
callq  8480 <TIFFSwabLong@plt>
mov    (%r14),%edi
callq  17c30 <TIFFReadDirEntryCheckRangeSlongLong>
test   %eax,%eax
jne    15d22 <TIFFReadDirEntrySlongArray+0x272>
add    $0x4,%r14
add    $0x1,%r13d
mov    -0x6c(%rbp),%eax
cmp    %r13d,%eax
ja     15c1c <TIFFReadDirEntrySlongArray+0x16c>
mov    -0x68(%rbp),%rax
mov    -0x8(%rbp),%rcx
mov    %rax,(%rcx)
mov    -0x20(%rbp),%r13
mov    -0x60(%rbp),%r14
xor    %eax,%eax
mov    -0x50(%rbp),%r15
leaveq 
retq   
mov    %rax,%r15
mov    -0x6c(%rbp),%esi
callq  8b70 <TIFFSwabArrayOfLong@plt>
mov    %r15,%rax
mov    -0x50(%rbp),%r15
leaveq 
retq   
mov    -0x68(%rbp),%rcx
xor    %edx,%edx
mov    %rax,%rsi
jmpq   15d4f <TIFFReadDirEntrySlongArray+0x29f>
mov    -0x68(%rbp),%rcx
xor    %edx,%edx
mov    %rax,%rsi
jmpq   15d6f <TIFFReadDirEntrySlongArray+0x2bf>
mov    -0x68(%rbp),%r15
mov    %r14,-0x60(%rbp)
mov    %r13,-0x40(%rbp)
mov    %rax,-0x10(%rbp)
mov    %r12,-0x30(%rbp)
xor    %r13d,%r13d
mov    -0x58(%rbp),%r12
jmpq   15dad <TIFFReadDirEntrySlongArray+0x2fd>
mov    -0x68(%rbp),%r15
mov    %r14,-0x60(%rbp)
mov    %r13,-0x40(%rbp)
mov    %rax,-0x10(%rbp)
mov    %r12,-0x30(%rbp)
xor    %r13d,%r13d
mov    -0x58(%rbp),%r12
jmpq   15dfc <TIFFReadDirEntrySlongArray+0x34c>
mov    -0x68(%rbp),%r15
mov    %r14,-0x60(%rbp)
mov    %r13,-0x48(%rbp)
mov    %rax,-0x18(%rbp)
mov    %r12,-0x38(%rbp)
mov    %rbx,-0x28(%rbp)
xor    %ebx,%ebx
mov    -0x58(%rbp),%r12
jmpq   15e5d <TIFFReadDirEntrySlongArray+0x3ad>
mov    -0x68(%rbp),%r15
mov    %r14,-0x60(%rbp)
mov    %r13,-0x48(%rbp)
mov    %rax,-0x18(%rbp)
mov    %r12,-0x38(%rbp)
mov    %rbx,-0x28(%rbp)
xor    %ebx,%ebx
mov    -0x58(%rbp),%r12
jmpq   15ebd <TIFFReadDirEntrySlongArray+0x40d>
mov    %rax,%r13
mov    -0x68(%rbp),%rdi
callq  8bb0 <_TIFFfree@plt>
mov    %r13,%rax
mov    -0x20(%rbp),%r13
mov    -0x60(%rbp),%r14
mov    -0x50(%rbp),%r15
leaveq 
retq   
movzbl (%rcx),%edi
mov    %edi,(%rsi)
add    $0x1,%rcx
add    $0x4,%rsi
add    $0x1,%edx
mov    -0x6c(%rbp),%edi
cmp    %edx,%edi
ja     15d3f <TIFFReadDirEntrySlongArray+0x28f>
xor    %r15d,%r15d
jmpq   15b69 <TIFFReadDirEntrySlongArray+0xb9>
movsbq (%rcx),%rdi
mov    %edi,(%rsi)
add    $0x1,%rcx
add    $0x4,%rsi
add    $0x1,%edx
mov    -0x6c(%rbp),%edi
cmp    %edx,%edi
ja     15d5e <TIFFReadDirEntrySlongArray+0x2ae>
xor    %r15d,%r15d
jmpq   15b69 <TIFFReadDirEntrySlongArray+0xb9>
mov    0x10(%r12),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
je     15d9b <TIFFReadDirEntrySlongArray+0x2eb>
mov    %rax,%r14
mov    %r15,%rdi
callq  87c0 <TIFFSwabShort@plt>
mov    %r14,%rax
movzwl (%r15),%ecx
mov    %ecx,(%rax)
add    $0x2,%r15
add    $0x4,%rax
add    $0x1,%r13d
mov    -0x6c(%rbp),%ecx
cmp    %r13d,%ecx
ja     15d7e <TIFFReadDirEntrySlongArray+0x2ce>
mov    -0x30(%rbp),%r12
mov    -0x10(%rbp),%rax
mov    -0x40(%rbp),%r13
mov    -0x60(%rbp),%r14
xor    %r15d,%r15d
jmpq   15b69 <TIFFReadDirEntrySlongArray+0xb9>
mov    0x10(%r12),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
je     15dea <TIFFReadDirEntrySlongArray+0x33a>
mov    %rax,%r14
mov    %r15,%rdi
callq  87c0 <TIFFSwabShort@plt>
mov    %r14,%rax
movswq (%r15),%rcx
mov    %ecx,(%rax)
add    $0x2,%r15
add    $0x4,%rax
add    $0x1,%r13d
mov    -0x6c(%rbp),%ecx
cmp    %r13d,%ecx
ja     15dcd <TIFFReadDirEntrySlongArray+0x31d>
mov    -0x30(%rbp),%r12
mov    -0x10(%rbp),%rax
mov    -0x40(%rbp),%r13
mov    -0x60(%rbp),%r14
xor    %r15d,%r15d
jmpq   15b69 <TIFFReadDirEntrySlongArray+0xb9>
mov    0x10(%r12),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
je     15e39 <TIFFReadDirEntrySlongArray+0x389>
mov    %rax,%r13
mov    %r15,%rdi
callq  8730 <TIFFSwabLong8@plt>
mov    %r13,%rax
mov    %rax,%r14
mov    (%r15),%r13
mov    %r13,%rdi
callq  17c50 <TIFFReadDirEntryCheckRangeSlongLong8>
test   %eax,%eax
jne    15ee0 <TIFFReadDirEntrySlongArray+0x430>
mov    %r13d,(%r14)
add    $0x8,%r15
lea    0x4(%r14),%rax
add    $0x1,%ebx
mov    -0x6c(%rbp),%ecx
cmp    %ebx,%ecx
ja     15e1c <TIFFReadDirEntrySlongArray+0x36c>
mov    -0x28(%rbp),%rbx
mov    -0x38(%rbp),%r12
mov    -0x18(%rbp),%rax
mov    -0x48(%rbp),%r13
mov    -0x60(%rbp),%r14
xor    %r15d,%r15d
jmpq   15b69 <TIFFReadDirEntrySlongArray+0xb9>
mov    0x10(%r12),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
je     15e9d <TIFFReadDirEntrySlongArray+0x3ed>
mov    %rax,%r13
mov    %r15,%rdi
callq  8730 <TIFFSwabLong8@plt>
mov    %r13,%rax
mov    %rax,%r14
mov    (%r15),%r13
mov    %r13,%rdi
callq  17c70 <TIFFReadDirEntryCheckRangeSlongSlong8>
test   %eax,%eax
jne    15efc <TIFFReadDirEntrySlongArray+0x44c>
mov    %r13d,(%r14)
add    $0x8,%r15
lea    0x4(%r14),%rax
add    $0x1,%ebx
mov    -0x6c(%rbp),%ecx
cmp    %ebx,%ecx
ja     15e80 <TIFFReadDirEntrySlongArray+0x3d0>
mov    -0x28(%rbp),%rbx
mov    -0x38(%rbp),%r12
mov    -0x18(%rbp),%rax
mov    -0x48(%rbp),%r13
mov    -0x60(%rbp),%r14
xor    %r15d,%r15d
jmpq   15b69 <TIFFReadDirEntrySlongArray+0xb9>
mov    %rax,%r15
mov    -0x28(%rbp),%rbx
mov    -0x38(%rbp),%r12
mov    -0x18(%rbp),%rax
mov    -0x48(%rbp),%r13
mov    -0x60(%rbp),%r14
jmpq   15b69 <TIFFReadDirEntrySlongArray+0xb9>
mov    %rax,%r15
mov    -0x28(%rbp),%rbx
mov    -0x38(%rbp),%r12
mov    -0x18(%rbp),%rax
mov    -0x48(%rbp),%r13
mov    -0x60(%rbp),%r14
jmpq   15b69 <TIFFReadDirEntrySlongArray+0xb9>
nopl   0x0(%rax,%rax,1)

0000000000015f20 <TIFFReadDirEntryLong8Array>:
push   %rbp
mov    %rsp,%rbp
mov    $0xffffffffffffffff,%rcx
callq  1bb50 <TIFFReadDirEntryLong8ArrayWithLimit>
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   (%rax)

0000000000015f40 <TIFFReadDirEntrySlong8Array>:
push   %rbp
mov    %rsp,%rbp
sub    $0x70,%rsp
mov    $0x2,%eax
movzwl 0x2(%rsi),%ecx
add    $0xffffffff,%ecx
cmp    $0x10,%ecx
jbe    15f5b <TIFFReadDirEntrySlong8Array+0x1b>
leaveq 
retq   
lea    0x3d266(%rip),%r8        # 531c8 <reason.25+0x10a2>
movslq (%r8,%rcx,4),%rcx
add    %r8,%rcx
jmpq   *%rcx
leaveq 
retq   
lea    -0x64(%rbp),%r10
mov    $0x8,%ecx
lea    -0x60(%rbp),%r8
mov    %rdi,%r9
mov    %rsi,%rax
mov    %r15,-0x48(%rbp)
mov    %rsi,-0x58(%rbp)
mov    %rdi,-0x50(%rbp)
mov    %rax,%rsi
mov    %r9,%rdi
mov    %rdx,%r15
mov    %r10,%rdx
callq  14030 <TIFFReadDirEntryArray>
test   %eax,%eax
jne    16026 <TIFFReadDirEntrySlong8Array+0xe6>
mov    -0x60(%rbp),%rdi
test   %rdi,%rdi
je     16026 <TIFFReadDirEntrySlong8Array+0xe6>
xor    %eax,%eax
mov    -0x58(%rbp),%rdx
movzwl 0x2(%rdx),%ecx
cmp    $0x10,%cx
je     16033 <TIFFReadDirEntrySlong8Array+0xf3>
cmp    $0x11,%cx
je     1604e <TIFFReadDirEntrySlong8Array+0x10e>
mov    -0x64(%rbp),%eax
shl    $0x3,%eax
mov    %eax,%edi
mov    %r15,-0x20(%rbp)
mov    %rdx,%r15
callq  8440 <_TIFFmalloc@plt>
test   %rax,%rax
je     1606c <TIFFReadDirEntrySlong8Array+0x12c>
movzwl 0x2(%r15),%ecx
add    $0xffffffff,%ecx
cmp    $0x8,%ecx
ja     160c8 <TIFFReadDirEntrySlong8Array+0x188>
lea    0x3d20f(%rip),%rdx        # 5320c <reason.25+0x10e6>
movslq (%rdx,%rcx,4),%rcx
add    %rdx,%rcx
jmpq   *%rcx
mov    -0x60(%rbp),%r15
mov    %r13,-0x40(%rbp)
mov    %r14,-0x58(%rbp)
mov    %rax,-0x18(%rbp)
mov    %r12,-0x30(%rbp)
xor    %r12d,%r12d
mov    -0x50(%rbp),%r13
jmpq   1618d <TIFFReadDirEntrySlong8Array+0x24d>
movq   $0x0,(%r15)
mov    -0x48(%rbp),%r15
leaveq 
retq   
mov    %r15,-0x8(%rbp)
mov    %r13,-0x20(%rbp)
mov    %r14,-0x58(%rbp)
mov    %rax,%r13
mov    %rdi,%r14
mov    -0x50(%rbp),%r15
jmpq   161d7 <TIFFReadDirEntrySlong8Array+0x297>
mov    %rdi,(%r15)
mov    -0x50(%rbp),%rcx
mov    0x10(%rcx),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
jne    161fa <TIFFReadDirEntrySlong8Array+0x2ba>
mov    -0x48(%rbp),%r15
leaveq 
retq   
mov    -0x60(%rbp),%rdi
callq  8bb0 <_TIFFfree@plt>
mov    $0x7,%eax
mov    -0x48(%rbp),%r15
leaveq 
retq   
mov    0x10(%r12),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
je     1609d <TIFFReadDirEntrySlong8Array+0x15d>
mov    %rax,%r14
mov    %r15,%rdi
callq  87c0 <TIFFSwabShort@plt>
mov    %r14,%rax
movswq (%r15),%rcx
mov    %rcx,(%rax)
add    $0x2,%r15
add    $0x8,%rax
add    $0x1,%r13d
mov    -0x64(%rbp),%ecx
cmp    %r13d,%ecx
ja     16080 <TIFFReadDirEntrySlong8Array+0x140>
mov    -0x28(%rbp),%r12
mov    -0x10(%rbp),%rax
mov    -0x58(%rbp),%r14
mov    -0x38(%rbp),%r13
mov    %rax,%r15
mov    -0x60(%rbp),%rdi
callq  8bb0 <_TIFFfree@plt>
mov    -0x20(%rbp),%rax
mov    %r15,(%rax)
xor    %eax,%eax
mov    -0x48(%rbp),%r15
leaveq 
retq   
mov    -0x60(%rbp),%rcx
xor    %edx,%edx
mov    %rax,%rsi
jmpq   1621f <TIFFReadDirEntrySlong8Array+0x2df>
mov    -0x60(%rbp),%rcx
xor    %edx,%edx
mov    %rax,%rsi
jmpq   1623d <TIFFReadDirEntrySlong8Array+0x2fd>
mov    -0x60(%rbp),%r15
mov    %r13,-0x38(%rbp)
mov    %r14,-0x58(%rbp)
mov    %rax,-0x10(%rbp)
mov    %r12,-0x28(%rbp)
xor    %r13d,%r13d
mov    -0x50(%rbp),%r12
jmpq   16279 <TIFFReadDirEntrySlong8Array+0x339>
mov    -0x60(%rbp),%r15
mov    %r13,-0x38(%rbp)
mov    %r14,-0x58(%rbp)
mov    %rax,-0x10(%rbp)
mov    %r12,-0x28(%rbp)
xor    %r13d,%r13d
mov    -0x50(%rbp),%r12
jmpq   160b0 <TIFFReadDirEntrySlong8Array+0x170>
mov    -0x60(%rbp),%r15
mov    %r13,-0x40(%rbp)
mov    %r14,-0x58(%rbp)
mov    %rax,-0x18(%rbp)
mov    %r12,-0x30(%rbp)
xor    %r12d,%r12d
mov    -0x50(%rbp),%r13
jmpq   162c4 <TIFFReadDirEntrySlong8Array+0x384>
mov    0x10(%r13),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
je     1617b <TIFFReadDirEntrySlong8Array+0x23b>
mov    %rax,%r14
mov    %r15,%rdi
callq  8480 <TIFFSwabLong@plt>
mov    %r14,%rax
movslq (%r15),%rcx
mov    %rcx,(%rax)
add    $0x4,%r15
add    $0x8,%rax
add    $0x1,%r12d
mov    -0x64(%rbp),%ecx
cmp    %r12d,%ecx
ja     1615f <TIFFReadDirEntrySlong8Array+0x21f>
mov    -0x30(%rbp),%r12
mov    -0x18(%rbp),%rax
mov    -0x58(%rbp),%r14
mov    -0x40(%rbp),%r13
jmpq   160c8 <TIFFReadDirEntrySlong8Array+0x188>
mov    0x10(%r15),%eax
and    $0x80,%eax
test   %eax,%eax
je     161bf <TIFFReadDirEntrySlong8Array+0x27f>
mov    %r14,%rdi
callq  8730 <TIFFSwabLong8@plt>
mov    (%r14),%rdi
callq  17d20 <TIFFReadDirEntryCheckRangeSlong8Long8>
test   %eax,%eax
jne    162e1 <TIFFReadDirEntrySlong8Array+0x3a1>
add    $0x8,%r14
add    $0x1,%r13d
mov    -0x64(%rbp),%eax
cmp    %r13d,%eax
ja     161aa <TIFFReadDirEntrySlong8Array+0x26a>
mov    -0x60(%rbp),%rax
mov    -0x8(%rbp),%rcx
mov    %rax,(%rcx)
mov    -0x58(%rbp),%r14
mov    -0x20(%rbp),%r13
xor    %eax,%eax
mov    -0x48(%rbp),%r15
leaveq 
retq   
mov    %rax,%r15
mov    -0x64(%rbp),%esi
callq  8930 <TIFFSwabArrayOfLong8@plt>
mov    %r15,%rax
mov    -0x48(%rbp),%r15
leaveq 
retq   
movzbl (%rcx),%edi
mov    %rdi,(%rsi)
add    $0x1,%rcx
add    $0x8,%rsi
add    $0x1,%edx
mov    -0x64(%rbp),%edi
cmp    %edx,%edi
ja     1620e <TIFFReadDirEntrySlong8Array+0x2ce>
jmpq   160c8 <TIFFReadDirEntrySlong8Array+0x188>
movsbq (%rcx),%rdi
mov    %rdi,(%rsi)
add    $0x1,%rcx
add    $0x8,%rsi
add    $0x1,%edx
mov    -0x64(%rbp),%edi
cmp    %edx,%edi
ja     1622b <TIFFReadDirEntrySlong8Array+0x2eb>
jmpq   160c8 <TIFFReadDirEntrySlong8Array+0x188>
mov    0x10(%r12),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
je     16266 <TIFFReadDirEntrySlong8Array+0x326>
mov    %rax,%r14
mov    %r15,%rdi
callq  87c0 <TIFFSwabShort@plt>
mov    %r14,%rax
movzwl (%r15),%ecx
mov    %rcx,(%rax)
add    $0x2,%r15
add    $0x8,%rax
add    $0x1,%r13d
mov    -0x64(%rbp),%ecx
cmp    %r13d,%ecx
ja     16249 <TIFFReadDirEntrySlong8Array+0x309>
mov    -0x28(%rbp),%r12
mov    -0x10(%rbp),%rax
mov    -0x58(%rbp),%r14
mov    -0x38(%rbp),%r13
jmpq   160c8 <TIFFReadDirEntrySlong8Array+0x188>
mov    0x10(%r13),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
je     162b2 <TIFFReadDirEntrySlong8Array+0x372>
mov    %rax,%r14
mov    %r15,%rdi
callq  8480 <TIFFSwabLong@plt>
mov    %r14,%rax
mov    (%r15),%ecx
mov    %rcx,(%rax)
add    $0x4,%r15
add    $0x8,%rax
add    $0x1,%r12d
mov    -0x64(%rbp),%ecx
cmp    %r12d,%ecx
ja     16296 <TIFFReadDirEntrySlong8Array+0x356>
mov    -0x30(%rbp),%r12
mov    -0x18(%rbp),%rax
mov    -0x58(%rbp),%r14
mov    -0x40(%rbp),%r13
jmpq   160c8 <TIFFReadDirEntrySlong8Array+0x188>
mov    %rax,%r15
mov    -0x60(%rbp),%rdi
callq  8bb0 <_TIFFfree@plt>
mov    %r15,%rax
mov    -0x58(%rbp),%r14
mov    -0x20(%rbp),%r13
mov    -0x48(%rbp),%r15
leaveq 
retq   
xchg   %ax,%ax

0000000000016300 <TIFFReadDirEntryFloatArray>:
push   %rbp
mov    %rsp,%rbp
sub    $0xa0,%rsp
mov    $0x2,%eax
movzwl 0x2(%rsi),%ecx
add    $0xffffffff,%ecx
cmp    $0x10,%ecx
jbe    1631e <TIFFReadDirEntryFloatArray+0x1e>
leaveq 
retq   
lea    0x3cf0b(%rip),%r8        # 53230 <reason.25+0x110a>
movslq (%r8,%rcx,4),%rcx
add    %r8,%rcx
jmpq   *%rcx
leaveq 
retq   
lea    -0x94(%rbp),%rax
mov    $0x4,%ecx
lea    -0x90(%rbp),%r8
mov    %rdi,%r10
mov    %rsi,%r9
mov    %r15,-0x78(%rbp)
mov    %rsi,-0x88(%rbp)
mov    %rdi,-0x80(%rbp)
mov    %r9,%rsi
mov    %r10,%rdi
mov    %rdx,%r15
mov    %rax,%rdx
callq  14030 <TIFFReadDirEntryArray>
test   %eax,%eax
jne    16436 <TIFFReadDirEntryFloatArray+0x136>
mov    -0x90(%rbp),%rdi
test   %rdi,%rdi
je     16436 <TIFFReadDirEntryFloatArray+0x136>
xor    %eax,%eax
mov    -0x88(%rbp),%rdx
movzwl 0x2(%rdx),%ecx
cmp    $0xb,%cx
je     16443 <TIFFReadDirEntryFloatArray+0x143>
mov    -0x94(%rbp),%edi
shl    $0x2,%rdi
mov    %r15,-0x28(%rbp)
mov    %rdx,%r15
callq  8440 <_TIFFmalloc@plt>
test   %rax,%rax
je     16471 <TIFFReadDirEntryFloatArray+0x171>
movzwl 0x2(%r15),%ecx
add    $0xffffffff,%ecx
cmp    $0x10,%ecx
ja     164c2 <TIFFReadDirEntryFloatArray+0x1c2>
xorpd  %xmm0,%xmm0
lea    0x3cea1(%rip),%rdx        # 53274 <reason.25+0x114e>
movslq (%rdx,%rcx,4),%rcx
add    %rdx,%rcx
jmpq   *%rcx
mov    -0x80(%rbp),%rcx
mov    0x10(%rcx),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
je     16405 <TIFFReadDirEntryFloatArray+0x105>
mov    %rax,%r15
mov    -0x90(%rbp),%rdi
mov    -0x94(%rbp),%esi
callq  8930 <TIFFSwabArrayOfLong8@plt>
mov    %r15,%rax
mov    -0x90(%rbp),%rcx
movss  0x3e10c(%rip),%xmm4        # 54520 <module.110+0x1c1>
movss  0x3e108(%rip),%xmm3        # 54524 <module.110+0x1c5>
movsd  0x3e0ec(%rip),%xmm2        # 54510 <module.110+0x1b1>
movsd  0x3e0fc(%rip),%xmm1        # 54528 <module.110+0x1c9>
xor    %edx,%edx
mov    %rax,%rsi
jmpq   16669 <TIFFReadDirEntryFloatArray+0x369>
movq   $0x0,(%r15)
mov    -0x78(%rbp),%r15
leaveq 
retq   
mov    -0x80(%rbp),%rcx
mov    0x10(%rcx),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
je     16461 <TIFFReadDirEntryFloatArray+0x161>
mov    -0x94(%rbp),%esi
callq  8b70 <TIFFSwabArrayOfLong@plt>
xor    %eax,%eax
mov    -0x90(%rbp),%rcx
mov    %rcx,(%r15)
mov    -0x78(%rbp),%r15
leaveq 
retq   
mov    -0x90(%rbp),%rdi
callq  8bb0 <_TIFFfree@plt>
mov    $0x7,%eax
mov    -0x78(%rbp),%r15
leaveq 
retq   
lea    0x4(%r13),%rax
movapd %xmm0,%xmm1
movss  %xmm1,0x0(%r13)
add    $0x8,%r15
add    $0x1,%ebx
mov    -0x94(%rbp),%ecx
cmp    %ebx,%ecx
ja     16678 <TIFFReadDirEntryFloatArray+0x378>
mov    -0x30(%rbp),%rbx
mov    -0x88(%rbp),%r14
mov    -0x70(%rbp),%r13
mov    -0x50(%rbp),%r12
mov    -0x20(%rbp),%rax
mov    %rax,%r15
mov    -0x90(%rbp),%rdi
callq  8bb0 <_TIFFfree@plt>
mov    -0x28(%rbp),%rax
mov    %r15,(%rax)
xor    %eax,%eax
mov    -0x78(%rbp),%r15
leaveq 
retq   
mov    -0x90(%rbp),%rdx
xor    %ecx,%ecx
mov    %rax,%rsi
jmpq   166ae <TIFFReadDirEntryFloatArray+0x3ae>
mov    -0x90(%rbp),%rdx
xor    %ecx,%ecx
mov    %rax,%rsi
jmpq   166d4 <TIFFReadDirEntryFloatArray+0x3d4>
mov    -0x90(%rbp),%r15
mov    %rax,-0x8(%rbp)
mov    %r12,-0x38(%rbp)
mov    %r13,-0x58(%rbp)
mov    %r14,-0x88(%rbp)
xor    %r12d,%r12d
mov    -0x80(%rbp),%r13
jmpq   1671b <TIFFReadDirEntryFloatArray+0x41b>
mov    -0x90(%rbp),%r15
mov    %rax,-0x8(%rbp)
mov    %r12,-0x38(%rbp)
mov    %r13,-0x58(%rbp)
mov    %r14,-0x88(%rbp)
xor    %r12d,%r12d
mov    -0x80(%rbp),%r13
jmpq   16772 <TIFFReadDirEntryFloatArray+0x472>
mov    -0x90(%rbp),%r15
mov    %rax,-0x10(%rbp)
mov    %r12,-0x40(%rbp)
mov    %r13,-0x60(%rbp)
mov    %r14,-0x88(%rbp)
xor    %r12d,%r12d
mov    -0x80(%rbp),%r13
jmpq   167cb <TIFFReadDirEntryFloatArray+0x4cb>
mov    -0x90(%rbp),%r15
mov    %rax,-0x10(%rbp)
mov    %r12,-0x40(%rbp)
mov    %r13,-0x60(%rbp)
mov    %r14,-0x88(%rbp)
xor    %r12d,%r12d
mov    -0x80(%rbp),%r13
jmpq   16821 <TIFFReadDirEntryFloatArray+0x521>
mov    -0x90(%rbp),%r15
movdqa 0x3df47(%rip),%xmm1        # 544f0 <module.110+0x191>
movdqa 0x3df4f(%rip),%xmm2        # 54500 <module.110+0x1a1>
mov    %rax,-0x18(%rbp)
mov    %r12,-0x48(%rbp)
mov    %r13,-0x68(%rbp)
mov    %r14,-0x88(%rbp)
xor    %r12d,%r12d
mov    -0x80(%rbp),%r13
jmpq   16898 <TIFFReadDirEntryFloatArray+0x598>
mov    -0x90(%rbp),%r15
mov    %rax,-0x18(%rbp)
mov    %r12,-0x48(%rbp)
mov    %r13,-0x68(%rbp)
mov    %r14,-0x88(%rbp)
xor    %r12d,%r12d
mov    -0x80(%rbp),%r13
jmpq   168ef <TIFFReadDirEntryFloatArray+0x5ef>
mov    -0x90(%rbp),%r15
mov    %rax,-0x20(%rbp)
mov    %r12,-0x50(%rbp)
mov    %r13,-0x70(%rbp)
mov    %r14,-0x88(%rbp)
mov    %rbx,-0x30(%rbp)
xor    %ebx,%ebx
mov    -0x80(%rbp),%r12
jmpq   16927 <TIFFReadDirEntryFloatArray+0x627>
mov    -0x90(%rbp),%r15
mov    %rax,-0x20(%rbp)
mov    %r12,-0x50(%rbp)
mov    %r13,-0x70(%rbp)
mov    %r14,-0x88(%rbp)
mov    %rbx,-0x30(%rbp)
xor    %ebx,%ebx
mov    -0x80(%rbp),%r12
jmpq   1649d <TIFFReadDirEntryFloatArray+0x19d>
movsd  (%rcx),%xmm0
ucomisd %xmm2,%xmm0
jbe    16951 <TIFFReadDirEntryFloatArray+0x651>
movapd %xmm4,%xmm0
movss  %xmm0,(%rsi)
add    $0x4,%rsi
add    $0x8,%rcx
add    $0x1,%edx
mov    -0x94(%rbp),%edi
cmp    %edx,%edi
ja     16648 <TIFFReadDirEntryFloatArray+0x348>
jmpq   164c2 <TIFFReadDirEntryFloatArray+0x1c2>
mov    0x10(%r12),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
jne    16962 <TIFFReadDirEntryFloatArray+0x662>
mov    %rax,%r13
jmpq   16971 <TIFFReadDirEntryFloatArray+0x671>
movzbl (%rdx),%edi
movzbl %dil,%edi
cvtsi2ss %rdi,%xmm0
movss  %xmm0,(%rsi)
add    $0x1,%rdx
add    $0x4,%rsi
add    $0x1,%ecx
mov    -0x94(%rbp),%edi
cmp    %ecx,%edi
ja     16693 <TIFFReadDirEntryFloatArray+0x393>
jmpq   164c2 <TIFFReadDirEntryFloatArray+0x1c2>
movsbq (%rdx),%rdi
cvtsi2ss %edi,%xmm0
movss  %xmm0,(%rsi)
add    $0x1,%rdx
add    $0x4,%rsi
add    $0x1,%ecx
mov    -0x94(%rbp),%edi
cmp    %ecx,%edi
ja     166bd <TIFFReadDirEntryFloatArray+0x3bd>
jmpq   164c2 <TIFFReadDirEntryFloatArray+0x1c2>
mov    0x10(%r13),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
je     166ff <TIFFReadDirEntryFloatArray+0x3ff>
mov    %rax,%r14
mov    %r15,%rdi
callq  87c0 <TIFFSwabShort@plt>
mov    %r14,%rax
movzwl (%r15),%ecx
movzwl %cx,%ecx
cvtsi2ss %rcx,%xmm0
movss  %xmm0,(%rax)
add    $0x2,%r15
add    $0x4,%rax
add    $0x1,%r12d
mov    -0x94(%rbp),%ecx
cmp    %r12d,%ecx
ja     166e3 <TIFFReadDirEntryFloatArray+0x3e3>
mov    -0x88(%rbp),%r14
mov    -0x58(%rbp),%r13
mov    -0x38(%rbp),%r12
mov    -0x8(%rbp),%rax
jmpq   164c2 <TIFFReadDirEntryFloatArray+0x1c2>
mov    0x10(%r13),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
je     1675a <TIFFReadDirEntryFloatArray+0x45a>
mov    %rax,%r14
mov    %r15,%rdi
callq  87c0 <TIFFSwabShort@plt>
mov    %r14,%rax
movswq (%r15),%rcx
cvtsi2ss %ecx,%xmm0
movss  %xmm0,(%rax)
add    $0x2,%r15
add    $0x4,%rax
add    $0x1,%r12d
mov    -0x94(%rbp),%ecx
cmp    %r12d,%ecx
ja     1673e <TIFFReadDirEntryFloatArray+0x43e>
mov    -0x88(%rbp),%r14
mov    -0x58(%rbp),%r13
mov    -0x38(%rbp),%r12
mov    -0x8(%rbp),%rax
jmpq   164c2 <TIFFReadDirEntryFloatArray+0x1c2>
mov    0x10(%r13),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
je     167b1 <TIFFReadDirEntryFloatArray+0x4b1>
mov    %rax,%r14
mov    %r15,%rdi
callq  8480 <TIFFSwabLong@plt>
mov    %r14,%rax
mov    (%r15),%ecx
mov    %ecx,%ecx
cvtsi2ss %rcx,%xmm0
movss  %xmm0,(%rax)
add    $0x4,%r15
add    $0x4,%rax
add    $0x1,%r12d
mov    -0x94(%rbp),%ecx
cmp    %r12d,%ecx
ja     16795 <TIFFReadDirEntryFloatArray+0x495>
mov    -0x88(%rbp),%r14
mov    -0x60(%rbp),%r13
mov    -0x40(%rbp),%r12
mov    -0x10(%rbp),%rax
jmpq   164c2 <TIFFReadDirEntryFloatArray+0x1c2>
mov    0x10(%r13),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
je     1680a <TIFFReadDirEntryFloatArray+0x50a>
mov    %rax,%r14
mov    %r15,%rdi
callq  8480 <TIFFSwabLong@plt>
mov    %r14,%rax
movslq (%r15),%rcx
cvtsi2ss %ecx,%xmm0
movss  %xmm0,(%rax)
add    $0x4,%r15
add    $0x4,%rax
add    $0x1,%r12d
mov    -0x94(%rbp),%ecx
cmp    %r12d,%ecx
ja     167ee <TIFFReadDirEntryFloatArray+0x4ee>
mov    -0x88(%rbp),%r14
mov    -0x60(%rbp),%r13
mov    -0x40(%rbp),%r12
mov    -0x10(%rbp),%rax
jmpq   164c2 <TIFFReadDirEntryFloatArray+0x1c2>
mov    0x10(%r13),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
je     16870 <TIFFReadDirEntryFloatArray+0x570>
mov    %rax,%r14
mov    %r15,%rdi
callq  8730 <TIFFSwabLong8@plt>
mov    %r14,%rax
movdqa 0x3dc98(%rip),%xmm2        # 54500 <module.110+0x1a1>
movdqa 0x3dc80(%rip),%xmm1        # 544f0 <module.110+0x191>
mov    (%r15),%rcx
movq   %rcx,%xmm0
punpckldq %xmm1,%xmm0
subpd  %xmm2,%xmm0
haddpd %xmm0,%xmm0
cvtsd2ss %xmm0,%xmm0
movss  %xmm0,(%rax)
add    $0x8,%r15
add    $0x4,%rax
add    $0x1,%r12d
mov    -0x94(%rbp),%ecx
cmp    %r12d,%ecx
ja     16844 <TIFFReadDirEntryFloatArray+0x544>
mov    -0x88(%rbp),%r14
mov    -0x68(%rbp),%r13
mov    -0x48(%rbp),%r12
mov    -0x18(%rbp),%rax
jmpq   164c2 <TIFFReadDirEntryFloatArray+0x1c2>
mov    0x10(%r13),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
je     168d7 <TIFFReadDirEntryFloatArray+0x5d7>
mov    %rax,%r14
mov    %r15,%rdi
callq  8730 <TIFFSwabLong8@plt>
mov    %r14,%rax
mov    (%r15),%rcx
cvtsi2ss %rcx,%xmm0
movss  %xmm0,(%rax)
add    $0x8,%r15
add    $0x4,%rax
add    $0x1,%r12d
mov    -0x94(%rbp),%ecx
cmp    %r12d,%ecx
ja     168bb <TIFFReadDirEntryFloatArray+0x5bb>
mov    -0x88(%rbp),%r14
mov    -0x68(%rbp),%r13
mov    -0x48(%rbp),%r12
mov    -0x18(%rbp),%rax
jmpq   164c2 <TIFFReadDirEntryFloatArray+0x1c2>
lea    0x4(%r13),%rax
movapd %xmm0,%xmm1
movss  %xmm1,0x0(%r13)
add    $0x8,%r15
add    $0x1,%ebx
mov    -0x94(%rbp),%ecx
cmp    %ebx,%ecx
ja     169c0 <TIFFReadDirEntryFloatArray+0x6c0>
mov    -0x30(%rbp),%rbx
mov    -0x88(%rbp),%r14
mov    -0x70(%rbp),%r13
mov    -0x50(%rbp),%r12
mov    -0x20(%rbp),%rax
jmpq   164c2 <TIFFReadDirEntryFloatArray+0x1c2>
ucomisd %xmm1,%xmm0
jp     169d4 <TIFFReadDirEntryFloatArray+0x6d4>
jae    169d4 <TIFFReadDirEntryFloatArray+0x6d4>
movapd %xmm3,%xmm0
jmpq   1665a <TIFFReadDirEntryFloatArray+0x35a>
mov    %rax,%r13
mov    %r15,%rdi
callq  8480 <TIFFSwabLong@plt>
xorpd  %xmm0,%xmm0
movslq (%r15),%rax
lea    0x4(%r15),%r14
mov    0x10(%r12),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
je     1699d <TIFFReadDirEntryFloatArray+0x69d>
mov    %rax,%r12
mov    %r14,%rdi
callq  8480 <TIFFSwabLong@plt>
mov    %r12,%rax
mov    -0x80(%rbp),%r12
xorpd  %xmm0,%xmm0
mov    (%r14),%ecx
test   %ecx,%ecx
je     16488 <TIFFReadDirEntryFloatArray+0x188>
cvtsi2ss %eax,%xmm1
mov    %ecx,%eax
cvtsi2ss %rax,%xmm2
divss  %xmm2,%xmm1
lea    0x4(%r13),%rax
jmpq   16490 <TIFFReadDirEntryFloatArray+0x190>
mov    0x10(%r12),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
jne    169dd <TIFFReadDirEntryFloatArray+0x6dd>
mov    %rax,%r13
jmp    169ec <TIFFReadDirEntryFloatArray+0x6ec>
cvtsd2ss %xmm0,%xmm0
jmpq   1665a <TIFFReadDirEntryFloatArray+0x35a>
mov    %rax,%r13
mov    %r15,%rdi
callq  8480 <TIFFSwabLong@plt>
xorpd  %xmm0,%xmm0
mov    (%r15),%eax
lea    0x4(%r15),%r14
mov    0x10(%r12),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
je     16a18 <TIFFReadDirEntryFloatArray+0x718>
mov    %rax,%r12
mov    %r14,%rdi
callq  8480 <TIFFSwabLong@plt>
mov    %r12,%rax
mov    -0x80(%rbp),%r12
xorpd  %xmm0,%xmm0
mov    (%r14),%ecx
test   %ecx,%ecx
je     16912 <TIFFReadDirEntryFloatArray+0x612>
mov    %eax,%eax
cvtsi2ss %rax,%xmm1
mov    %ecx,%eax
cvtsi2ss %rax,%xmm2
divss  %xmm2,%xmm1
lea    0x4(%r13),%rax
jmpq   1691a <TIFFReadDirEntryFloatArray+0x61a>
xchg   %ax,%ax

0000000000016a40 <TIFFReadDirEntryDoubleArray>:
push   %rbp
mov    %rsp,%rbp
sub    $0xa0,%rsp
mov    $0x2,%eax
movzwl 0x2(%rsi),%ecx
add    $0xffffffff,%ecx
cmp    $0x10,%ecx
jbe    16a5e <TIFFReadDirEntryDoubleArray+0x1e>
leaveq 
retq   
lea    0x3c853(%rip),%r8        # 532b8 <reason.25+0x1192>
movslq (%r8,%rcx,4),%rcx
add    %r8,%rcx
jmpq   *%rcx
leaveq 
retq   
lea    -0x94(%rbp),%rax
mov    $0x8,%ecx
lea    -0x90(%rbp),%r8
mov    %rdi,%r10
mov    %rsi,%r9
mov    %r15,-0x78(%rbp)
mov    %rsi,-0x88(%rbp)
mov    %rdi,-0x80(%rbp)
mov    %r9,%rsi
mov    %r10,%rdi
mov    %rdx,%r15
mov    %rax,%rdx
callq  14030 <TIFFReadDirEntryArray>
test   %eax,%eax
jne    16b56 <TIFFReadDirEntryDoubleArray+0x116>
mov    -0x90(%rbp),%rdi
test   %rdi,%rdi
je     16b56 <TIFFReadDirEntryDoubleArray+0x116>
xor    %eax,%eax
mov    -0x88(%rbp),%rdx
movzwl 0x2(%rdx),%ecx
cmp    $0xc,%cx
je     16b63 <TIFFReadDirEntryDoubleArray+0x123>
mov    -0x94(%rbp),%edi
shl    $0x3,%rdi
mov    %r15,-0x28(%rbp)
mov    %rdx,%r15
callq  8440 <_TIFFmalloc@plt>
test   %rax,%rax
je     16b91 <TIFFReadDirEntryDoubleArray+0x151>
movzwl 0x2(%r15),%ecx
add    $0xffffffff,%ecx
cmp    $0x10,%ecx
ja     16be2 <TIFFReadDirEntryDoubleArray+0x1a2>
xorpd  %xmm0,%xmm0
lea    0x3c7e9(%rip),%rdx        # 532fc <reason.25+0x11d6>
movslq (%rdx,%rcx,4),%rcx
add    %rdx,%rcx
jmpq   *%rcx
mov    -0x80(%rbp),%rcx
mov    0x10(%rcx),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
je     16b45 <TIFFReadDirEntryDoubleArray+0x105>
mov    %rax,%r15
mov    -0x90(%rbp),%rdi
mov    -0x94(%rbp),%esi
callq  8b70 <TIFFSwabArrayOfLong@plt>
mov    %r15,%rax
mov    -0x90(%rbp),%rdx
xor    %ecx,%ecx
mov    %rax,%rsi
jmpq   16d7f <TIFFReadDirEntryDoubleArray+0x33f>
movq   $0x0,(%r15)
mov    -0x78(%rbp),%r15
leaveq 
retq   
mov    -0x80(%rbp),%rcx
mov    0x10(%rcx),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
je     16b81 <TIFFReadDirEntryDoubleArray+0x141>
mov    -0x94(%rbp),%esi
callq  8930 <TIFFSwabArrayOfLong8@plt>
xor    %eax,%eax
mov    -0x90(%rbp),%rcx
mov    %rcx,(%r15)
mov    -0x78(%rbp),%r15
leaveq 
retq   
mov    -0x90(%rbp),%rdi
callq  8bb0 <_TIFFfree@plt>
mov    $0x7,%eax
mov    -0x78(%rbp),%r15
leaveq 
retq   
lea    0x8(%r13),%rax
movapd %xmm0,%xmm1
movsd  %xmm1,0x0(%r13)
add    $0x8,%r15
add    $0x1,%ebx
mov    -0x94(%rbp),%ecx
cmp    %ebx,%ecx
ja     16d8e <TIFFReadDirEntryDoubleArray+0x34e>
mov    -0x30(%rbp),%rbx
mov    -0x88(%rbp),%r14
mov    -0x70(%rbp),%r13
mov    -0x50(%rbp),%r12
mov    -0x20(%rbp),%rax
mov    %rax,%r15
mov    -0x90(%rbp),%rdi
callq  8bb0 <_TIFFfree@plt>
mov    -0x28(%rbp),%rax
mov    %r15,(%rax)
xor    %eax,%eax
mov    -0x78(%rbp),%r15
leaveq 
retq   
mov    -0x90(%rbp),%rdx
xor    %ecx,%ecx
mov    %rax,%rsi
jmpq   16dc4 <TIFFReadDirEntryDoubleArray+0x384>
mov    -0x90(%rbp),%rdx
xor    %ecx,%ecx
mov    %rax,%rsi
jmpq   16dea <TIFFReadDirEntryDoubleArray+0x3aa>
mov    -0x90(%rbp),%r15
mov    %rax,-0x8(%rbp)
mov    %r12,-0x38(%rbp)
mov    %r13,-0x58(%rbp)
mov    %r14,-0x88(%rbp)
xor    %r12d,%r12d
mov    -0x80(%rbp),%r13
jmpq   16e31 <TIFFReadDirEntryDoubleArray+0x3f1>
mov    -0x90(%rbp),%r15
mov    %rax,-0x8(%rbp)
mov    %r12,-0x38(%rbp)
mov    %r13,-0x58(%rbp)
mov    %r14,-0x88(%rbp)
xor    %r12d,%r12d
mov    -0x80(%rbp),%r13
jmpq   16e88 <TIFFReadDirEntryDoubleArray+0x448>
mov    -0x90(%rbp),%r15
mov    %rax,-0x10(%rbp)
mov    %r12,-0x40(%rbp)
mov    %r13,-0x60(%rbp)
mov    %r14,-0x88(%rbp)
xor    %r12d,%r12d
mov    -0x80(%rbp),%r13
jmpq   16ee1 <TIFFReadDirEntryDoubleArray+0x4a1>
mov    -0x90(%rbp),%r15
mov    %rax,-0x10(%rbp)
mov    %r12,-0x40(%rbp)
mov    %r13,-0x60(%rbp)
mov    %r14,-0x88(%rbp)
xor    %r12d,%r12d
mov    -0x80(%rbp),%r13
jmpq   16f37 <TIFFReadDirEntryDoubleArray+0x4f7>
mov    -0x90(%rbp),%r15
movdqa 0x3d827(%rip),%xmm2        # 544f0 <module.110+0x191>
movdqa 0x3d82f(%rip),%xmm1        # 54500 <module.110+0x1a1>
mov    %rax,-0x18(%rbp)
mov    %r12,-0x48(%rbp)
mov    %r13,-0x68(%rbp)
mov    %r14,-0x88(%rbp)
xor    %r12d,%r12d
mov    -0x80(%rbp),%r13
jmpq   16faa <TIFFReadDirEntryDoubleArray+0x56a>
mov    -0x90(%rbp),%r15
mov    %rax,-0x18(%rbp)
mov    %r12,-0x48(%rbp)
mov    %r13,-0x68(%rbp)
mov    %r14,-0x88(%rbp)
xor    %r12d,%r12d
mov    -0x80(%rbp),%r13
jmpq   17001 <TIFFReadDirEntryDoubleArray+0x5c1>
mov    -0x90(%rbp),%r15
mov    %rax,-0x20(%rbp)
mov    %r12,-0x50(%rbp)
mov    %r13,-0x70(%rbp)
mov    %r14,-0x88(%rbp)
mov    %rbx,-0x30(%rbp)
xor    %ebx,%ebx
mov    -0x80(%rbp),%r12
jmpq   17039 <TIFFReadDirEntryDoubleArray+0x5f9>
mov    -0x90(%rbp),%r15
mov    %rax,-0x20(%rbp)
mov    %r12,-0x50(%rbp)
mov    %r13,-0x70(%rbp)
mov    %r14,-0x88(%rbp)
mov    %rbx,-0x30(%rbp)
xor    %ebx,%ebx
mov    -0x80(%rbp),%r12
jmpq   16bbd <TIFFReadDirEntryDoubleArray+0x17d>
movss  (%rdx),%xmm0
cvtss2sd %xmm0,%xmm0
movsd  %xmm0,(%rsi)
add    $0x4,%rdx
add    $0x8,%rsi
add    $0x1,%ecx
mov    -0x94(%rbp),%edi
cmp    %ecx,%edi
ja     16d68 <TIFFReadDirEntryDoubleArray+0x328>
jmpq   16be2 <TIFFReadDirEntryDoubleArray+0x1a2>
mov    0x10(%r12),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
jne    1705f <TIFFReadDirEntryDoubleArray+0x61f>
mov    %rax,%r13
jmpq   1706e <TIFFReadDirEntryDoubleArray+0x62e>
movzbl (%rdx),%edi
movzbl %dil,%edi
cvtsi2sd %rdi,%xmm0
movsd  %xmm0,(%rsi)
add    $0x1,%rdx
add    $0x8,%rsi
add    $0x1,%ecx
mov    -0x94(%rbp),%edi
cmp    %ecx,%edi
ja     16da9 <TIFFReadDirEntryDoubleArray+0x369>
jmpq   16be2 <TIFFReadDirEntryDoubleArray+0x1a2>
movsbq (%rdx),%rdi
cvtsi2sd %edi,%xmm0
movsd  %xmm0,(%rsi)
add    $0x1,%rdx
add    $0x8,%rsi
add    $0x1,%ecx
mov    -0x94(%rbp),%edi
cmp    %ecx,%edi
ja     16dd3 <TIFFReadDirEntryDoubleArray+0x393>
jmpq   16be2 <TIFFReadDirEntryDoubleArray+0x1a2>
mov    0x10(%r13),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
je     16e15 <TIFFReadDirEntryDoubleArray+0x3d5>
mov    %rax,%r14
mov    %r15,%rdi
callq  87c0 <TIFFSwabShort@plt>
mov    %r14,%rax
movzwl (%r15),%ecx
movzwl %cx,%ecx
cvtsi2sd %rcx,%xmm0
movsd  %xmm0,(%rax)
add    $0x2,%r15
add    $0x8,%rax
add    $0x1,%r12d
mov    -0x94(%rbp),%ecx
cmp    %r12d,%ecx
ja     16df9 <TIFFReadDirEntryDoubleArray+0x3b9>
mov    -0x88(%rbp),%r14
mov    -0x58(%rbp),%r13
mov    -0x38(%rbp),%r12
mov    -0x8(%rbp),%rax
jmpq   16be2 <TIFFReadDirEntryDoubleArray+0x1a2>
mov    0x10(%r13),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
je     16e70 <TIFFReadDirEntryDoubleArray+0x430>
mov    %rax,%r14
mov    %r15,%rdi
callq  87c0 <TIFFSwabShort@plt>
mov    %r14,%rax
movswq (%r15),%rcx
cvtsi2sd %ecx,%xmm0
movsd  %xmm0,(%rax)
add    $0x2,%r15
add    $0x8,%rax
add    $0x1,%r12d
mov    -0x94(%rbp),%ecx
cmp    %r12d,%ecx
ja     16e54 <TIFFReadDirEntryDoubleArray+0x414>
mov    -0x88(%rbp),%r14
mov    -0x58(%rbp),%r13
mov    -0x38(%rbp),%r12
mov    -0x8(%rbp),%rax
jmpq   16be2 <TIFFReadDirEntryDoubleArray+0x1a2>
mov    0x10(%r13),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
je     16ec7 <TIFFReadDirEntryDoubleArray+0x487>
mov    %rax,%r14
mov    %r15,%rdi
callq  8480 <TIFFSwabLong@plt>
mov    %r14,%rax
mov    (%r15),%ecx
mov    %ecx,%ecx
cvtsi2sd %rcx,%xmm0
movsd  %xmm0,(%rax)
add    $0x4,%r15
add    $0x8,%rax
add    $0x1,%r12d
mov    -0x94(%rbp),%ecx
cmp    %r12d,%ecx
ja     16eab <TIFFReadDirEntryDoubleArray+0x46b>
mov    -0x88(%rbp),%r14
mov    -0x60(%rbp),%r13
mov    -0x40(%rbp),%r12
mov    -0x10(%rbp),%rax
jmpq   16be2 <TIFFReadDirEntryDoubleArray+0x1a2>
mov    0x10(%r13),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
je     16f20 <TIFFReadDirEntryDoubleArray+0x4e0>
mov    %rax,%r14
mov    %r15,%rdi
callq  8480 <TIFFSwabLong@plt>
mov    %r14,%rax
movslq (%r15),%rcx
cvtsi2sd %ecx,%xmm0
movsd  %xmm0,(%rax)
add    $0x4,%r15
add    $0x8,%rax
add    $0x1,%r12d
mov    -0x94(%rbp),%ecx
cmp    %r12d,%ecx
ja     16f04 <TIFFReadDirEntryDoubleArray+0x4c4>
mov    -0x88(%rbp),%r14
mov    -0x60(%rbp),%r13
mov    -0x40(%rbp),%r12
mov    -0x10(%rbp),%rax
jmpq   16be2 <TIFFReadDirEntryDoubleArray+0x1a2>
mov    0x10(%r13),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
je     16f86 <TIFFReadDirEntryDoubleArray+0x546>
mov    %rax,%r14
mov    %r15,%rdi
callq  8730 <TIFFSwabLong8@plt>
mov    %r14,%rax
movdqa 0x3d582(%rip),%xmm1        # 54500 <module.110+0x1a1>
movdqa 0x3d56a(%rip),%xmm2        # 544f0 <module.110+0x191>
mov    (%r15),%rcx
movq   %rcx,%xmm0
punpckldq %xmm2,%xmm0
subpd  %xmm1,%xmm0
haddpd %xmm0,%xmm0
movsd  %xmm0,(%rax)
add    $0x8,%r15
add    $0x8,%rax
add    $0x1,%r12d
mov    -0x94(%rbp),%ecx
cmp    %r12d,%ecx
ja     16f5a <TIFFReadDirEntryDoubleArray+0x51a>
mov    -0x88(%rbp),%r14
mov    -0x68(%rbp),%r13
mov    -0x48(%rbp),%r12
mov    -0x18(%rbp),%rax
jmpq   16be2 <TIFFReadDirEntryDoubleArray+0x1a2>
mov    0x10(%r13),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
je     16fe9 <TIFFReadDirEntryDoubleArray+0x5a9>
mov    %rax,%r14
mov    %r15,%rdi
callq  8730 <TIFFSwabLong8@plt>
mov    %r14,%rax
mov    (%r15),%rcx
cvtsi2sd %rcx,%xmm0
movsd  %xmm0,(%rax)
add    $0x8,%r15
add    $0x8,%rax
add    $0x1,%r12d
mov    -0x94(%rbp),%ecx
cmp    %r12d,%ecx
ja     16fcd <TIFFReadDirEntryDoubleArray+0x58d>
mov    -0x88(%rbp),%r14
mov    -0x68(%rbp),%r13
mov    -0x48(%rbp),%r12
mov    -0x18(%rbp),%rax
jmpq   16be2 <TIFFReadDirEntryDoubleArray+0x1a2>
lea    0x8(%r13),%rax
movapd %xmm0,%xmm1
movsd  %xmm1,0x0(%r13)
add    $0x8,%r15
add    $0x1,%ebx
mov    -0x94(%rbp),%ecx
cmp    %ebx,%ecx
ja     170bd <TIFFReadDirEntryDoubleArray+0x67d>
mov    -0x30(%rbp),%rbx
mov    -0x88(%rbp),%r14
mov    -0x70(%rbp),%r13
mov    -0x50(%rbp),%r12
mov    -0x20(%rbp),%rax
jmpq   16be2 <TIFFReadDirEntryDoubleArray+0x1a2>
mov    %rax,%r13
mov    %r15,%rdi
callq  8480 <TIFFSwabLong@plt>
xorpd  %xmm0,%xmm0
movslq (%r15),%rax
lea    0x4(%r15),%r14
mov    0x10(%r12),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
je     1709a <TIFFReadDirEntryDoubleArray+0x65a>
mov    %rax,%r12
mov    %r14,%rdi
callq  8480 <TIFFSwabLong@plt>
mov    %r12,%rax
mov    -0x80(%rbp),%r12
xorpd  %xmm0,%xmm0
mov    (%r14),%ecx
test   %ecx,%ecx
je     16ba8 <TIFFReadDirEntryDoubleArray+0x168>
cvtsi2sd %eax,%xmm1
mov    %ecx,%eax
cvtsi2sd %rax,%xmm2
divsd  %xmm2,%xmm1
lea    0x8(%r13),%rax
jmpq   16bb0 <TIFFReadDirEntryDoubleArray+0x170>
mov    0x10(%r12),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
jne    170d1 <TIFFReadDirEntryDoubleArray+0x691>
mov    %rax,%r13
jmp    170e0 <TIFFReadDirEntryDoubleArray+0x6a0>
mov    %rax,%r13
mov    %r15,%rdi
callq  8480 <TIFFSwabLong@plt>
xorpd  %xmm0,%xmm0
mov    (%r15),%eax
lea    0x4(%r15),%r14
mov    0x10(%r12),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
je     1710c <TIFFReadDirEntryDoubleArray+0x6cc>
mov    %rax,%r12
mov    %r14,%rdi
callq  8480 <TIFFSwabLong@plt>
mov    %r12,%rax
mov    -0x80(%rbp),%r12
xorpd  %xmm0,%xmm0
mov    (%r14),%ecx
test   %ecx,%ecx
je     17024 <TIFFReadDirEntryDoubleArray+0x5e4>
mov    %eax,%eax
cvtsi2sd %rax,%xmm1
mov    %ecx,%eax
cvtsi2sd %rax,%xmm2
divsd  %xmm2,%xmm1
lea    0x8(%r13),%rax
jmpq   1702c <TIFFReadDirEntryDoubleArray+0x5ec>
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   (%rax)

0000000000017140 <TIFFReadDirEntryIfd8Array>:
push   %rbp
mov    %rsp,%rbp
sub    $0x50,%rsp
mov    $0x2,%eax
movzwl 0x2(%rsi),%ecx
cmp    $0xf,%cx
jbe    17165 <TIFFReadDirEntryIfd8Array+0x25>
cmp    $0x10,%cx
je     17173 <TIFFReadDirEntryIfd8Array+0x33>
cmp    $0x12,%cx
je     17173 <TIFFReadDirEntryIfd8Array+0x33>
leaveq 
retq   
cmp    $0x4,%cx
je     17173 <TIFFReadDirEntryIfd8Array+0x33>
cmp    $0xd,%cx
je     17173 <TIFFReadDirEntryIfd8Array+0x33>
leaveq 
retq   
lea    -0x44(%rbp),%r10
mov    $0x8,%ecx
lea    -0x40(%rbp),%r8
mov    %rdi,%rax
mov    %rsi,%r9
mov    %r15,-0x28(%rbp)
mov    %rsi,-0x38(%rbp)
mov    %rdi,-0x30(%rbp)
mov    %r9,%rsi
mov    %rax,%rdi
mov    %rdx,%r15
mov    %r10,%rdx
callq  14030 <TIFFReadDirEntryArray>
test   %eax,%eax
jne    171f8 <TIFFReadDirEntryIfd8Array+0xb8>
mov    -0x40(%rbp),%rdi
test   %rdi,%rdi
je     171f8 <TIFFReadDirEntryIfd8Array+0xb8>
xor    %eax,%eax
mov    -0x38(%rbp),%rdx
movzwl 0x2(%rdx),%ecx
cmp    $0x10,%cx
je     17205 <TIFFReadDirEntryIfd8Array+0xc5>
cmp    $0x12,%cx
je     17205 <TIFFReadDirEntryIfd8Array+0xc5>
mov    -0x44(%rbp),%eax
shl    $0x3,%eax
mov    %eax,%edi
mov    %r15,-0x10(%rbp)
mov    %rdx,%r15
callq  8440 <_TIFFmalloc@plt>
test   %rax,%rax
je     17223 <TIFFReadDirEntryIfd8Array+0xe3>
movzwl 0x2(%r15),%ecx
cmp    $0x4,%cx
je     17237 <TIFFReadDirEntryIfd8Array+0xf7>
cmp    $0xd,%cx
je     17237 <TIFFReadDirEntryIfd8Array+0xf7>
mov    %rax,%r15
jmpq   17297 <TIFFReadDirEntryIfd8Array+0x157>
movq   $0x0,(%r15)
mov    -0x28(%rbp),%r15
leaveq 
retq   
mov    %rdi,(%r15)
mov    -0x30(%rbp),%rcx
mov    0x10(%rcx),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
jne    172af <TIFFReadDirEntryIfd8Array+0x16f>
mov    -0x28(%rbp),%r15
leaveq 
retq   
mov    -0x40(%rbp),%rdi
callq  8bb0 <_TIFFfree@plt>
mov    $0x7,%eax
mov    -0x28(%rbp),%r15
leaveq 
retq   
mov    -0x40(%rbp),%r15
mov    %rax,-0x8(%rbp)
mov    %r12,-0x18(%rbp)
mov    %r13,-0x20(%rbp)
mov    %r14,-0x38(%rbp)
mov    %rax,%r12
xor    %r13d,%r13d
mov    -0x30(%rbp),%r14
jmp    1727f <TIFFReadDirEntryIfd8Array+0x13f>
mov    0x10(%r14),%eax
and    $0x80,%eax
test   %eax,%eax
je     1726c <TIFFReadDirEntryIfd8Array+0x12c>
mov    %r15,%rdi
callq  8480 <TIFFSwabLong@plt>
mov    (%r15),%eax
mov    %rax,(%r12)
add    $0x4,%r15
add    $0x8,%r12
add    $0x1,%r13d
mov    -0x44(%rbp),%eax
cmp    %r13d,%eax
ja     17257 <TIFFReadDirEntryIfd8Array+0x117>
mov    -0x38(%rbp),%r14
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
mov    -0x8(%rbp),%r15
mov    -0x40(%rbp),%rdi
callq  8bb0 <_TIFFfree@plt>
mov    -0x10(%rbp),%rax
mov    %r15,(%rax)
xor    %eax,%eax
mov    -0x28(%rbp),%r15
leaveq 
retq   
mov    %rax,%r15
mov    -0x44(%rbp),%esi
callq  8930 <TIFFSwabArrayOfLong8@plt>
mov    %r15,%rax
mov    -0x28(%rbp),%r15
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

00000000000172d0 <TIFFReadDirEntryPersampleShort>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
movzwl 0x82(%rdi),%eax
cmp    0x8(%rsi),%rax
jbe    172ec <TIFFReadDirEntryPersampleShort+0x1c>
mov    $0x1,%eax
leaveq 
retq   
lea    -0x18(%rbp),%rax
mov    %rdi,%rcx
mov    %rdi,-0x8(%rbp)
mov    %rdx,-0x10(%rbp)
mov    %rax,%rdx
mov    %rcx,%rdi
callq  14bc0 <TIFFReadDirEntryShortArray>
test   %eax,%eax
je     1730c <TIFFReadDirEntryPersampleShort+0x3c>
leaveq 
retq   
xor    %eax,%eax
mov    -0x18(%rbp),%rcx
test   %rcx,%rcx
jne    17319 <TIFFReadDirEntryPersampleShort+0x49>
leaveq 
retq   
movzwl (%rcx),%esi
add    $0x2,%rcx
mov    -0x8(%rbp),%rdx
movzwl 0x82(%rdx),%edx
mov    -0x10(%rbp),%r8
mov    %si,(%r8)
add    $0xffff,%edx
jmp    17345 <TIFFReadDirEntryPersampleShort+0x75>
add    $0x2,%rcx
add    $0xffff,%edx
test   %dx,%dx
je     1735b <TIFFReadDirEntryPersampleShort+0x8b>
movzwl (%r8),%edi
movzwl (%rcx),%esi
cmp    %si,%di
je     1733b <TIFFReadDirEntryPersampleShort+0x6b>
mov    $0x5,%eax
mov    %rax,-0x10(%rbp)
mov    -0x18(%rbp),%rdi
callq  8bb0 <_TIFFfree@plt>
mov    -0x10(%rbp),%rax
leaveq 
retq   
xchg   %ax,%ax

0000000000017370 <TIFFReadDirEntryCheckedByte>:
push   %rbp
mov    %rsp,%rbp
movzbl 0x10(%rsi),%eax
mov    %al,(%rdx)
leaveq 
retq   
nopl   0x0(%rax)

0000000000017380 <TIFFReadDirEntryCheckedSbyte>:
push   %rbp
mov    %rsp,%rbp
movsbq 0x10(%rsi),%rax
mov    %al,(%rdx)
leaveq 
retq   
nopl   (%rax)

0000000000017390 <TIFFReadDirEntryCheckedShort>:
push   %rbp
mov    %rsp,%rbp
movzwl 0x10(%rsi),%eax
mov    %ax,(%rdx)
mov    0x10(%rdi),%eax
and    $0x80,%eax
test   %eax,%eax
jne    173a9 <TIFFReadDirEntryCheckedShort+0x19>
leaveq 
retq   
mov    %rdx,%rdi
callq  87c0 <TIFFSwabShort@plt>
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

00000000000173c0 <TIFFReadDirEntryCheckedSshort>:
push   %rbp
mov    %rsp,%rbp
movswq 0x10(%rsi),%rax
mov    %ax,(%rdx)
mov    0x10(%rdi),%eax
and    $0x80,%eax
test   %eax,%eax
jne    173da <TIFFReadDirEntryCheckedSshort+0x1a>
leaveq 
retq   
mov    %rdx,%rdi
callq  87c0 <TIFFSwabShort@plt>
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nop

00000000000173f0 <TIFFReadDirEntryCheckedLong>:
push   %rbp
mov    %rsp,%rbp
mov    0x10(%rsi),%eax
mov    %eax,(%rdx)
mov    0x10(%rdi),%eax
and    $0x80,%eax
test   %eax,%eax
jne    17407 <TIFFReadDirEntryCheckedLong+0x17>
leaveq 
retq   
mov    %rdx,%rdi
callq  8480 <TIFFSwabLong@plt>
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   0x0(%rax)

0000000000017420 <TIFFReadDirEntryCheckedSlong>:
push   %rbp
mov    %rsp,%rbp
movslq 0x10(%rsi),%rax
mov    %eax,(%rdx)
mov    0x10(%rdi),%eax
and    $0x80,%eax
test   %eax,%eax
jne    17438 <TIFFReadDirEntryCheckedSlong+0x18>
leaveq 
retq   
mov    %rdx,%rdi
callq  8480 <TIFFSwabLong@plt>
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   (%rax)

0000000000017450 <TIFFReadDirEntryCheckedLong8>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    0x10(%rdi),%eax
mov    %rax,%rcx
and    $0x80000,%ecx
test   %ecx,%ecx
jne    174ce <TIFFReadDirEntryCheckedLong8+0x7e>
mov    0x10(%rsi),%ecx
mov    %ecx,-0x14(%rbp)
and    $0x80,%eax
test   %eax,%eax
je     1749f <TIFFReadDirEntryCheckedLong8+0x4f>
lea    -0x14(%rbp),%rax
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rdi,%r14
mov    %rax,%rdi
mov    %rdx,%r15
callq  8480 <TIFFSwabLong@plt>
mov    %r15,%rdx
mov    %r14,%rdi
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
mov    -0x14(%rbp),%esi
mov    $0x8,%eax
mov    %rdi,%r8
mov    %rdx,%rcx
mov    %rdi,-0x10(%rbp)
mov    %rdx,-0x8(%rbp)
mov    %rax,%rdx
mov    %r8,%rdi
callq  17d40 <TIFFReadDirEntryData>
test   %eax,%eax
jne    174e6 <TIFFReadDirEntryCheckedLong8+0x96>
mov    -0x8(%rbp),%rdx
mov    -0x10(%rbp),%rdi
jmp    174d5 <TIFFReadDirEntryCheckedLong8+0x85>
mov    0x10(%rsi),%rax
mov    %rax,(%rdx)
xor    %eax,%eax
mov    0x10(%rdi),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
jne    174e8 <TIFFReadDirEntryCheckedLong8+0x98>
leaveq 
retq   
leaveq 
retq   
mov    %rdx,%rdi
callq  8730 <TIFFSwabLong8@plt>
xor    %eax,%eax
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nop

0000000000017500 <TIFFReadDirEntryCheckedSlong8>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    0x10(%rdi),%eax
mov    %rax,%rcx
and    $0x80000,%ecx
test   %ecx,%ecx
jne    1757e <TIFFReadDirEntryCheckedSlong8+0x7e>
mov    0x10(%rsi),%ecx
mov    %ecx,-0x14(%rbp)
and    $0x80,%eax
test   %eax,%eax
je     1754f <TIFFReadDirEntryCheckedSlong8+0x4f>
lea    -0x14(%rbp),%rax
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rdi,%r14
mov    %rax,%rdi
mov    %rdx,%r15
callq  8480 <TIFFSwabLong@plt>
mov    %r15,%rdx
mov    %r14,%rdi
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
mov    -0x14(%rbp),%esi
mov    $0x8,%eax
mov    %rdi,%r8
mov    %rdx,%rcx
mov    %rdi,-0x10(%rbp)
mov    %rdx,-0x8(%rbp)
mov    %rax,%rdx
mov    %r8,%rdi
callq  17d40 <TIFFReadDirEntryData>
test   %eax,%eax
jne    17596 <TIFFReadDirEntryCheckedSlong8+0x96>
mov    -0x8(%rbp),%rdx
mov    -0x10(%rbp),%rdi
jmp    17585 <TIFFReadDirEntryCheckedSlong8+0x85>
mov    0x10(%rsi),%rax
mov    %rax,(%rdx)
xor    %eax,%eax
mov    0x10(%rdi),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
jne    17598 <TIFFReadDirEntryCheckedSlong8+0x98>
leaveq 
retq   
leaveq 
retq   
mov    %rdx,%rdi
callq  8730 <TIFFSwabLong8@plt>
xor    %eax,%eax
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nop

00000000000175b0 <TIFFReadDirEntryCheckedRational>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    0x10(%rdi),%eax
mov    %rax,%rcx
and    $0x80000,%ecx
test   %ecx,%ecx
jne    17629 <TIFFReadDirEntryCheckedRational+0x79>
mov    0x10(%rsi),%ecx
mov    %ecx,-0x14(%rbp)
and    $0x80,%eax
test   %eax,%eax
je     175f9 <TIFFReadDirEntryCheckedRational+0x49>
lea    -0x14(%rbp),%rax
mov    %r15,-0x10(%rbp)
mov    %rdx,-0x8(%rbp)
mov    %rdi,%r15
mov    %rax,%rdi
callq  8480 <TIFFSwabLong@plt>
mov    %r15,%rdi
mov    -0x8(%rbp),%rdx
mov    -0x10(%rbp),%r15
mov    -0x14(%rbp),%esi
mov    $0x8,%eax
lea    -0x20(%rbp),%rcx
mov    %rdi,%r8
mov    %rdx,-0x8(%rbp)
mov    %rdi,-0x10(%rbp)
mov    %rax,%rdx
mov    %r8,%rdi
callq  17d40 <TIFFReadDirEntryData>
test   %eax,%eax
jne    17681 <TIFFReadDirEntryCheckedRational+0xd1>
mov    -0x10(%rbp),%rdi
mov    -0x8(%rbp),%rdx
jmp    17631 <TIFFReadDirEntryCheckedRational+0x81>
mov    0x10(%rsi),%rax
mov    %rax,-0x20(%rbp)
mov    0x10(%rdi),%eax
and    $0x80,%eax
test   %eax,%eax
je     17659 <TIFFReadDirEntryCheckedRational+0xa9>
lea    -0x20(%rbp),%rdi
mov    $0x2,%esi
mov    %r15,-0x10(%rbp)
mov    %rdx,%r15
callq  8b70 <TIFFSwabArrayOfLong@plt>
mov    %r15,%rdx
mov    -0x10(%rbp),%r15
xor    %eax,%eax
mov    -0x20(%rbp),%esi
test   %esi,%esi
je     17683 <TIFFReadDirEntryCheckedRational+0xd3>
mov    -0x1c(%rbp),%ecx
test   %ecx,%ecx
je     17683 <TIFFReadDirEntryCheckedRational+0xd3>
mov    %esi,%esi
cvtsi2sd %rsi,%xmm0
mov    %ecx,%ecx
cvtsi2sd %rcx,%xmm1
divsd  %xmm1,%xmm0
movsd  %xmm0,(%rdx)
leaveq 
retq   
leaveq 
retq   
xorpd  %xmm0,%xmm0
movsd  %xmm0,(%rdx)
leaveq 
retq   
nopl   (%rax)

0000000000017690 <TIFFReadDirEntryCheckedSrational>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    0x10(%rdi),%eax
mov    %rax,%rcx
and    $0x80000,%ecx
test   %ecx,%ecx
jne    17709 <TIFFReadDirEntryCheckedSrational+0x79>
mov    0x10(%rsi),%ecx
mov    %ecx,-0x14(%rbp)
and    $0x80,%eax
test   %eax,%eax
je     176d9 <TIFFReadDirEntryCheckedSrational+0x49>
lea    -0x14(%rbp),%rax
mov    %r15,-0x10(%rbp)
mov    %rdx,-0x8(%rbp)
mov    %rdi,%r15
mov    %rax,%rdi
callq  8480 <TIFFSwabLong@plt>
mov    %r15,%rdi
mov    -0x8(%rbp),%rdx
mov    -0x10(%rbp),%r15
mov    -0x14(%rbp),%esi
mov    $0x8,%eax
lea    -0x20(%rbp),%rcx
mov    %rdi,%r8
mov    %rdx,-0x8(%rbp)
mov    %rdi,-0x10(%rbp)
mov    %rax,%rdx
mov    %r8,%rdi
callq  17d40 <TIFFReadDirEntryData>
test   %eax,%eax
jne    1775f <TIFFReadDirEntryCheckedSrational+0xcf>
mov    -0x10(%rbp),%rdi
mov    -0x8(%rbp),%rdx
jmp    17711 <TIFFReadDirEntryCheckedSrational+0x81>
mov    0x10(%rsi),%rax
mov    %rax,-0x20(%rbp)
mov    0x10(%rdi),%eax
and    $0x80,%eax
test   %eax,%eax
je     17739 <TIFFReadDirEntryCheckedSrational+0xa9>
lea    -0x20(%rbp),%rdi
mov    $0x2,%esi
mov    %r15,-0x10(%rbp)
mov    %rdx,%r15
callq  8b70 <TIFFSwabArrayOfLong@plt>
mov    %r15,%rdx
mov    -0x10(%rbp),%r15
xor    %eax,%eax
movslq -0x20(%rbp),%rsi
test   %esi,%esi
je     17761 <TIFFReadDirEntryCheckedSrational+0xd1>
mov    -0x1c(%rbp),%ecx
test   %ecx,%ecx
je     17761 <TIFFReadDirEntryCheckedSrational+0xd1>
cvtsi2sd %esi,%xmm0
mov    %ecx,%ecx
cvtsi2sd %rcx,%xmm1
divsd  %xmm1,%xmm0
movsd  %xmm0,(%rdx)
leaveq 
retq   
leaveq 
retq   
xorpd  %xmm0,%xmm0
movsd  %xmm0,(%rdx)
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

0000000000017770 <TIFFReadDirEntryCheckedFloat>:
push   %rbp
mov    %rsp,%rbp
mov    0x10(%rsi),%eax
movq   %rax,%xmm0
movss  %xmm0,(%rdx)
mov    0x10(%rdi),%eax
and    $0x80,%eax
test   %eax,%eax
jne    1778e <TIFFReadDirEntryCheckedFloat+0x1e>
leaveq 
retq   
mov    %rdx,%rdi
callq  8480 <TIFFSwabLong@plt>
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

00000000000177a0 <TIFFReadDirEntryCheckedDouble>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    0x10(%rdi),%eax
mov    %rax,%rcx
and    $0x80000,%ecx
test   %ecx,%ecx
jne    1781e <TIFFReadDirEntryCheckedDouble+0x7e>
mov    0x10(%rsi),%ecx
mov    %ecx,-0x14(%rbp)
and    $0x80,%eax
test   %eax,%eax
je     177ef <TIFFReadDirEntryCheckedDouble+0x4f>
lea    -0x14(%rbp),%rax
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rdi,%r14
mov    %rax,%rdi
mov    %rdx,%r15
callq  8480 <TIFFSwabLong@plt>
mov    %r15,%rdx
mov    %r14,%rdi
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
mov    -0x14(%rbp),%esi
mov    $0x8,%eax
mov    %rdi,%r8
mov    %rdx,%rcx
mov    %rdi,-0x10(%rbp)
mov    %rdx,-0x8(%rbp)
mov    %rax,%rdx
mov    %r8,%rdi
callq  17d40 <TIFFReadDirEntryData>
test   %eax,%eax
jne    1783c <TIFFReadDirEntryCheckedDouble+0x9c>
mov    -0x8(%rbp),%rdx
mov    -0x10(%rbp),%rdi
jmp    1782b <TIFFReadDirEntryCheckedDouble+0x8b>
mov    0x10(%rsi),%rax
movq   %rax,%xmm0
movsd  %xmm0,(%rdx)
xor    %eax,%eax
mov    0x10(%rdi),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
jne    1783e <TIFFReadDirEntryCheckedDouble+0x9e>
leaveq 
retq   
leaveq 
retq   
mov    %rdx,%rdi
callq  8730 <TIFFSwabLong8@plt>
xor    %eax,%eax
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

0000000000017850 <TIFFReadDirEntryCheckRangeByteSbyte>:
push   %rbp
mov    %rsp,%rbp
test   %dil,%dil
jns    17860 <TIFFReadDirEntryCheckRangeByteSbyte+0x10>
mov    $0x4,%eax
leaveq 
retq   
xor    %eax,%eax
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nop

0000000000017870 <TIFFReadDirEntryCheckRangeByteShort>:
push   %rbp
mov    %rsp,%rbp
cmp    $0xff,%di
jbe    17882 <TIFFReadDirEntryCheckRangeByteShort+0x12>
mov    $0x4,%eax
leaveq 
retq   
xor    %eax,%eax
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)

0000000000017890 <TIFFReadDirEntryCheckRangeByteSshort>:
push   %rbp
mov    %rsp,%rbp
mov    $0x4,%eax
test   %di,%di
jns    178a0 <TIFFReadDirEntryCheckRangeByteSshort+0x10>
leaveq 
retq   
cmp    $0xff,%di
jle    178a9 <TIFFReadDirEntryCheckRangeByteSshort+0x19>
leaveq 
retq   
xor    %eax,%eax
leaveq 
retq   
nopl   (%rax)

00000000000178b0 <TIFFReadDirEntryCheckRangeByteLong>:
push   %rbp
mov    %rsp,%rbp
cmp    $0xff,%edi
jbe    178c3 <TIFFReadDirEntryCheckRangeByteLong+0x13>
mov    $0x4,%eax
leaveq 
retq   
xor    %eax,%eax
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

00000000000178d0 <TIFFReadDirEntryCheckRangeByteSlong>:
push   %rbp
mov    %rsp,%rbp
mov    $0x4,%eax
test   %edi,%edi
jns    178df <TIFFReadDirEntryCheckRangeByteSlong+0xf>
leaveq 
retq   
cmp    $0xff,%edi
jle    178e9 <TIFFReadDirEntryCheckRangeByteSlong+0x19>
leaveq 
retq   
xor    %eax,%eax
leaveq 
retq   
nopl   (%rax)

00000000000178f0 <TIFFReadDirEntryCheckRangeByteLong8>:
push   %rbp
mov    %rsp,%rbp
cmp    $0xff,%rdi
jbe    17904 <TIFFReadDirEntryCheckRangeByteLong8+0x14>
mov    $0x4,%eax
leaveq 
retq   
xor    %eax,%eax
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

0000000000017910 <TIFFReadDirEntryCheckRangeByteSlong8>:
push   %rbp
mov    %rsp,%rbp
mov    $0x4,%eax
test   %rdi,%rdi
jns    17920 <TIFFReadDirEntryCheckRangeByteSlong8+0x10>
leaveq 
retq   
cmp    $0xff,%rdi
jle    1792b <TIFFReadDirEntryCheckRangeByteSlong8+0x1b>
leaveq 
retq   
xor    %eax,%eax
leaveq 
retq   
nop

0000000000017930 <TIFFReadDirEntryCheckRangeSbyteByte>:
push   %rbp
mov    %rsp,%rbp
cmp    $0x7f,%dil
jbe    17941 <TIFFReadDirEntryCheckRangeSbyteByte+0x11>
mov    $0x4,%eax
leaveq 
retq   
xor    %eax,%eax
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)

0000000000017950 <TIFFReadDirEntryCheckRangeSbyteShort>:
push   %rbp
mov    %rsp,%rbp
cmp    $0x7f,%di
jbe    17961 <TIFFReadDirEntryCheckRangeSbyteShort+0x11>
mov    $0x4,%eax
leaveq 
retq   
xor    %eax,%eax
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)

0000000000017970 <TIFFReadDirEntryCheckRangeSbyteSshort>:
push   %rbp
mov    %rsp,%rbp
mov    $0x4,%eax
cmp    $0xff80,%di
jge    17981 <TIFFReadDirEntryCheckRangeSbyteSshort+0x11>
leaveq 
retq   
cmp    $0x7f,%di
jle    17989 <TIFFReadDirEntryCheckRangeSbyteSshort+0x19>
leaveq 
retq   
xor    %eax,%eax
leaveq 
retq   
nopl   (%rax)

0000000000017990 <TIFFReadDirEntryCheckRangeSbyteLong>:
push   %rbp
mov    %rsp,%rbp
cmp    $0x7f,%edi
jbe    179a0 <TIFFReadDirEntryCheckRangeSbyteLong+0x10>
mov    $0x4,%eax
leaveq 
retq   
xor    %eax,%eax
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nop

00000000000179b0 <TIFFReadDirEntryCheckRangeSbyteSlong>:
push   %rbp
mov    %rsp,%rbp
mov    $0x4,%eax
cmp    $0xffffff80,%edi
jge    179c0 <TIFFReadDirEntryCheckRangeSbyteSlong+0x10>
leaveq 
retq   
cmp    $0x7f,%edi
jle    179c7 <TIFFReadDirEntryCheckRangeSbyteSlong+0x17>
leaveq 
retq   
xor    %eax,%eax
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

00000000000179d0 <TIFFReadDirEntryCheckRangeSbyteLong8>:
push   %rbp
mov    %rsp,%rbp
cmp    $0x7f,%rdi
jbe    179e1 <TIFFReadDirEntryCheckRangeSbyteLong8+0x11>
mov    $0x4,%eax
leaveq 
retq   
xor    %eax,%eax
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)

00000000000179f0 <TIFFReadDirEntryCheckRangeSbyteSlong8>:
push   %rbp
mov    %rsp,%rbp
mov    $0x4,%eax
cmp    $0xffffffffffffff80,%rdi
jge    17a01 <TIFFReadDirEntryCheckRangeSbyteSlong8+0x11>
leaveq 
retq   
cmp    $0x7f,%rdi
jle    17a09 <TIFFReadDirEntryCheckRangeSbyteSlong8+0x19>
leaveq 
retq   
xor    %eax,%eax
leaveq 
retq   
nopl   (%rax)

0000000000017a10 <TIFFReadDirEntryCheckRangeShortSbyte>:
push   %rbp
mov    %rsp,%rbp
test   %dil,%dil
jns    17a20 <TIFFReadDirEntryCheckRangeShortSbyte+0x10>
mov    $0x4,%eax
leaveq 
retq   
xor    %eax,%eax
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nop

0000000000017a30 <TIFFReadDirEntryCheckRangeShortSshort>:
push   %rbp
mov    %rsp,%rbp
test   %di,%di
jns    17a40 <TIFFReadDirEntryCheckRangeShortSshort+0x10>
mov    $0x4,%eax
leaveq 
retq   
xor    %eax,%eax
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nop

0000000000017a50 <TIFFReadDirEntryCheckRangeShortLong>:
push   %rbp
mov    %rsp,%rbp
cmp    $0xffff,%edi
jbe    17a63 <TIFFReadDirEntryCheckRangeShortLong+0x13>
mov    $0x4,%eax
leaveq 
retq   
xor    %eax,%eax
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

0000000000017a70 <TIFFReadDirEntryCheckRangeShortSlong>:
push   %rbp
mov    %rsp,%rbp
mov    $0x4,%eax
test   %edi,%edi
jns    17a7f <TIFFReadDirEntryCheckRangeShortSlong+0xf>
leaveq 
retq   
cmp    $0xffff,%edi
jle    17a89 <TIFFReadDirEntryCheckRangeShortSlong+0x19>
leaveq 
retq   
xor    %eax,%eax
leaveq 
retq   
nopl   (%rax)

0000000000017a90 <TIFFReadDirEntryCheckRangeShortLong8>:
push   %rbp
mov    %rsp,%rbp
cmp    $0xffff,%rdi
jbe    17aa4 <TIFFReadDirEntryCheckRangeShortLong8+0x14>
mov    $0x4,%eax
leaveq 
retq   
xor    %eax,%eax
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

0000000000017ab0 <TIFFReadDirEntryCheckRangeShortSlong8>:
push   %rbp
mov    %rsp,%rbp
mov    $0x4,%eax
test   %rdi,%rdi
jns    17ac0 <TIFFReadDirEntryCheckRangeShortSlong8+0x10>
leaveq 
retq   
cmp    $0xffff,%rdi
jle    17acb <TIFFReadDirEntryCheckRangeShortSlong8+0x1b>
leaveq 
retq   
xor    %eax,%eax
leaveq 
retq   
nop

0000000000017ad0 <TIFFReadDirEntryCheckRangeSshortShort>:
push   %rbp
mov    %rsp,%rbp
cmp    $0x7fff,%di
jbe    17ae2 <TIFFReadDirEntryCheckRangeSshortShort+0x12>
mov    $0x4,%eax
leaveq 
retq   
xor    %eax,%eax
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)

0000000000017af0 <TIFFReadDirEntryCheckRangeSshortLong>:
push   %rbp
mov    %rsp,%rbp
cmp    $0x7fff,%edi
jbe    17b03 <TIFFReadDirEntryCheckRangeSshortLong+0x13>
mov    $0x4,%eax
leaveq 
retq   
xor    %eax,%eax
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

0000000000017b10 <TIFFReadDirEntryCheckRangeSshortSlong>:
push   %rbp
mov    %rsp,%rbp
mov    $0x4,%eax
cmp    $0xffff8000,%edi
jge    17b23 <TIFFReadDirEntryCheckRangeSshortSlong+0x13>
leaveq 
retq   
cmp    $0x7fff,%edi
jle    17b2d <TIFFReadDirEntryCheckRangeSshortSlong+0x1d>
leaveq 
retq   
xor    %eax,%eax
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   0x0(%rax)

0000000000017b40 <TIFFReadDirEntryCheckRangeSshortLong8>:
push   %rbp
mov    %rsp,%rbp
cmp    $0x7fff,%rdi
jbe    17b54 <TIFFReadDirEntryCheckRangeSshortLong8+0x14>
mov    $0x4,%eax
leaveq 
retq   
xor    %eax,%eax
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

0000000000017b60 <TIFFReadDirEntryCheckRangeSshortSlong8>:
push   %rbp
mov    %rsp,%rbp
mov    $0x4,%eax
cmp    $0xffffffffffff8000,%rdi
jge    17b74 <TIFFReadDirEntryCheckRangeSshortSlong8+0x14>
leaveq 
retq   
cmp    $0x7fff,%rdi
jle    17b7f <TIFFReadDirEntryCheckRangeSshortSlong8+0x1f>
leaveq 
retq   
xor    %eax,%eax
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

0000000000017b90 <TIFFReadDirEntryCheckRangeLongSbyte>:
push   %rbp
mov    %rsp,%rbp
test   %dil,%dil
jns    17ba0 <TIFFReadDirEntryCheckRangeLongSbyte+0x10>
mov    $0x4,%eax
leaveq 
retq   
xor    %eax,%eax
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nop

0000000000017bb0 <TIFFReadDirEntryCheckRangeLongSshort>:
push   %rbp
mov    %rsp,%rbp
test   %di,%di
jns    17bc0 <TIFFReadDirEntryCheckRangeLongSshort+0x10>
mov    $0x4,%eax
leaveq 
retq   
xor    %eax,%eax
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nop

0000000000017bd0 <TIFFReadDirEntryCheckRangeLongSlong>:
push   %rbp
mov    %rsp,%rbp
test   %edi,%edi
jns    17bdf <TIFFReadDirEntryCheckRangeLongSlong+0xf>
mov    $0x4,%eax
leaveq 
retq   
xor    %eax,%eax
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

0000000000017bf0 <TIFFReadDirEntryCheckRangeLongLong8>:
push   %rbp
mov    %rsp,%rbp
mov    $0xffffffff,%eax
cmp    %rax,%rdi
jbe    17c05 <TIFFReadDirEntryCheckRangeLongLong8+0x15>
mov    $0x4,%eax
leaveq 
retq   
xor    %eax,%eax
leaveq 
retq   
nopl   0x0(%rax)

0000000000017c10 <TIFFReadDirEntryCheckRangeLongSlong8>:
push   %rbp
mov    %rsp,%rbp
mov    $0x4,%eax
test   %rdi,%rdi
jns    17c20 <TIFFReadDirEntryCheckRangeLongSlong8+0x10>
leaveq 
retq   
mov    $0xffffffff,%ecx
cmp    %rcx,%rdi
jle    17c2c <TIFFReadDirEntryCheckRangeLongSlong8+0x1c>
leaveq 
retq   
xor    %eax,%eax
leaveq 
retq   

0000000000017c30 <TIFFReadDirEntryCheckRangeSlongLong>:
push   %rbp
mov    %rsp,%rbp
cmp    $0x7fffffff,%edi
jbe    17c43 <TIFFReadDirEntryCheckRangeSlongLong+0x13>
mov    $0x4,%eax
leaveq 
retq   
xor    %eax,%eax
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

0000000000017c50 <TIFFReadDirEntryCheckRangeSlongLong8>:
push   %rbp
mov    %rsp,%rbp
cmp    $0x7fffffff,%rdi
jbe    17c64 <TIFFReadDirEntryCheckRangeSlongLong8+0x14>
mov    $0x4,%eax
leaveq 
retq   
xor    %eax,%eax
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

0000000000017c70 <TIFFReadDirEntryCheckRangeSlongSlong8>:
push   %rbp
mov    %rsp,%rbp
mov    $0x4,%eax
cmp    $0xffffffff80000000,%rdi
jge    17c84 <TIFFReadDirEntryCheckRangeSlongSlong8+0x14>
leaveq 
retq   
cmp    $0x7fffffff,%rdi
jle    17c8f <TIFFReadDirEntryCheckRangeSlongSlong8+0x1f>
leaveq 
retq   
xor    %eax,%eax
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

0000000000017ca0 <TIFFReadDirEntryCheckRangeLong8Sbyte>:
push   %rbp
mov    %rsp,%rbp
test   %dil,%dil
jns    17cb0 <TIFFReadDirEntryCheckRangeLong8Sbyte+0x10>
mov    $0x4,%eax
leaveq 
retq   
xor    %eax,%eax
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nop

0000000000017cc0 <TIFFReadDirEntryCheckRangeLong8Sshort>:
push   %rbp
mov    %rsp,%rbp
test   %di,%di
jns    17cd0 <TIFFReadDirEntryCheckRangeLong8Sshort+0x10>
mov    $0x4,%eax
leaveq 
retq   
xor    %eax,%eax
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nop

0000000000017ce0 <TIFFReadDirEntryCheckRangeLong8Slong>:
push   %rbp
mov    %rsp,%rbp
test   %edi,%edi
jns    17cef <TIFFReadDirEntryCheckRangeLong8Slong+0xf>
mov    $0x4,%eax
leaveq 
retq   
xor    %eax,%eax
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

0000000000017d00 <TIFFReadDirEntryCheckRangeLong8Slong8>:
push   %rbp
mov    %rsp,%rbp
test   %rdi,%rdi
jns    17d10 <TIFFReadDirEntryCheckRangeLong8Slong8+0x10>
mov    $0x4,%eax
leaveq 
retq   
xor    %eax,%eax
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nop

0000000000017d20 <TIFFReadDirEntryCheckRangeSlong8Long8>:
push   %rbp
mov    %rsp,%rbp
movabs $0x7fffffffffffffff,%rax
cmp    %rax,%rdi
jbe    17d3a <TIFFReadDirEntryCheckRangeSlong8Long8+0x1a>
mov    $0x4,%eax
leaveq 
retq   
xor    %eax,%eax
leaveq 
retq   
xchg   %ax,%ax

0000000000017d40 <TIFFReadDirEntryData>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
test   %rdx,%rdx
jg     17d6c <TIFFReadDirEntryData+0x2c>
lea    0x3bd43(%rip),%rdi        # 53a97 <module.43+0x87>
lea    0x3b80b(%rip),%rsi        # 53566 <module.10+0xba>
mov    $0xd48,%edx
lea    0x3bd37(%rip),%rcx        # 53a9e <module.43+0x8e>
callq  8490 <__assert_fail@plt>
mov    $0x3,%eax
mov    0x10(%rdi),%r8d
and    $0x800,%r8d
test   %r8d,%r8d
jne    17da3 <TIFFReadDirEntryData+0x63>
mov    %rdi,%rax
mov    %rdi,-0x18(%rbp)
mov    %rdx,-0x10(%rbp)
mov    %rcx,-0x8(%rbp)
mov    %rax,%rdi
callq  82f0 <_TIFFSeekOK@plt>
test   %eax,%eax
jne    17dae <TIFFReadDirEntryData+0x6e>
mov    $0x3,%eax
leaveq 
retq   
lea    (%rsi,%rdx,1),%r8
cmp    %r8,%rsi
jbe    17de4 <TIFFReadDirEntryData+0xa4>
leaveq 
retq   
mov    -0x18(%rbp),%rcx
mov    0x3c0(%rcx),%rax
mov    0x3b8(%rcx),%rdi
mov    -0x10(%rbp),%rcx
mov    %rcx,%rdx
mov    %r15,-0x18(%rbp)
mov    %rcx,%r15
mov    -0x8(%rbp),%rsi
callq  *%rax
cmp    %rax,%r15
je     17deb <TIFFReadDirEntryData+0xab>
mov    -0x18(%rbp),%r15
mov    $0x3,%eax
leaveq 
retq   
cmp    %rdx,%r8
jae    17df3 <TIFFReadDirEntryData+0xb3>
leaveq 
retq   
mov    -0x18(%rbp),%r15
xor    %eax,%eax
leaveq 
retq   
cmp    0x3a0(%rdi),%r8
jbe    17dfe <TIFFReadDirEntryData+0xbe>
leaveq 
retq   
add    0x398(%rdi),%rsi
mov    %rcx,%rdi
callq  8790 <_TIFFmemcpy@plt>
xor    %eax,%eax
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   0x0(%rax)

0000000000017e20 <TIFFReadDirEntryOutputErr>:
push   %rbp
mov    %rsp,%rbp
lea    0x3bd70(%rip),%r9        # 53b9b <module.43+0x18b>
lea    0x3b734(%rip),%r10        # 53566 <module.10+0xba>
lea    0x3bd64(%rip),%r11        # 53b9d <module.43+0x18d>
test   %r8d,%r8d
jne    17e69 <TIFFReadDirEntryOutputErr+0x49>
lea    -0x1(%rsi),%eax
cmp    $0x6,%eax
ja     17e56 <TIFFReadDirEntryOutputErr+0x36>
lea    0x3b4f3(%rip),%rsi        # 53340 <reason.25+0x121a>
movslq (%rsi,%rax,4),%rax
add    %rsi,%rax
jmpq   *%rax
mov    %r11,%rcx
mov    %r10,%rsi
mov    %r9,%rdi
mov    $0xd86,%edx
callq  8490 <__assert_fail@plt>
lea    -0x1(%rsi),%eax
cmp    $0x6,%eax
ja     17e81 <TIFFReadDirEntryOutputErr+0x61>
lea    0x3b4e4(%rip),%rsi        # 5335c <reason.25+0x1236>
movslq (%rsi,%rax,4),%rax
add    %rsi,%rax
jmpq   *%rax
mov    %r11,%rcx
mov    %r10,%rsi
mov    %r9,%rdi
mov    $0xdaf,%edx
callq  8490 <__assert_fail@plt>
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
mov    %rdx,%rsi
lea    0x3bc0c(%rip),%rdx        # 53ab3 <module.43+0xa3>
callq  8a00 <TIFFErrorExt@plt>
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
mov    %rdx,%rsi
lea    0x3bc0b(%rip),%rdx        # 53acc <module.43+0xbc>
callq  8a00 <TIFFErrorExt@plt>
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
mov    %rdx,%rsi
lea    0x3bc0c(%rip),%rdx        # 53ae7 <module.43+0xd7>
callq  8a00 <TIFFErrorExt@plt>
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
mov    %rdx,%rsi
lea    0x3bc12(%rip),%rdx        # 53b07 <module.43+0xf7>
callq  8a00 <TIFFErrorExt@plt>
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
mov    %rdx,%rsi
lea    0x3bc11(%rip),%rdx        # 53b20 <module.43+0x110>
callq  8a00 <TIFFErrorExt@plt>
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
mov    %rdx,%rsi
lea    0x3bc2a(%rip),%rdx        # 53b53 <module.43+0x143>
callq  8a00 <TIFFErrorExt@plt>
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
mov    %rdx,%rsi
lea    0x3bc3a(%rip),%rdx        # 53b7d <module.43+0x16d>
callq  8a00 <TIFFErrorExt@plt>
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
mov    %rdx,%rsi
lea    0x3bc5a(%rip),%rdx        # 53bb7 <module.43+0x1a7>
callq  85a0 <TIFFWarningExt@plt>
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
mov    %rdx,%rsi
lea    0x3bc66(%rip),%rdx        # 53bdd <module.43+0x1cd>
callq  85a0 <TIFFWarningExt@plt>
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
mov    %rdx,%rsi
lea    0x3bc74(%rip),%rdx        # 53c05 <module.43+0x1f5>
callq  85a0 <TIFFWarningExt@plt>
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
mov    %rdx,%rsi
lea    0x3bc87(%rip),%rdx        # 53c32 <module.43+0x222>
callq  85a0 <TIFFWarningExt@plt>
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
mov    %rdx,%rsi
lea    0x3bc93(%rip),%rdx        # 53c58 <module.43+0x248>
callq  85a0 <TIFFWarningExt@plt>
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
mov    %rdx,%rsi
lea    0x3bcb9(%rip),%rdx        # 53c98 <module.43+0x288>
callq  85a0 <TIFFWarningExt@plt>
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
mov    %rdx,%rsi
lea    0x3bcd6(%rip),%rdx        # 53ccf <module.43+0x2bf>
callq  85a0 <TIFFWarningExt@plt>
leaveq 
retq   

0000000000018000 <TIFFReadDirectoryCheckOrder>:
push   %rbp
mov    %rsp,%rbp
xor    %eax,%eax
mov    %rax,%rcx
jmp    18020 <TIFFReadDirectoryCheckOrder+0x20>
movzwl (%rsi),%r8d
cmp    %ax,%r8w
jb     18027 <TIFFReadDirectoryCheckOrder+0x27>
add    $0x18,%rsi
add    $0x1,%ecx
lea    0x1(%r8),%eax
cmp    %dx,%cx
jb     1800b <TIFFReadDirectoryCheckOrder+0xb>
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
lea    0x3bcc3(%rip),%rsi        # 53cfa <module.66>
lea    0x3bcd8(%rip),%rdx        # 53d16 <module.66+0x1c>
callq  85a0 <TIFFWarningExt@plt>
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)

0000000000018050 <TIFFReadDirectoryFindEntry>:
push   %rbp
mov    %rsp,%rbp
xor    %eax,%eax
mov    %rax,%rdi
jmp    1806c <TIFFReadDirectoryFindEntry+0x1c>
movzwl (%rsi),%r8d
cmp    %cx,%r8w
je     18073 <TIFFReadDirectoryFindEntry+0x23>
add    $0x18,%rsi
add    $0x1,%edi
cmp    %dx,%di
jb     1805b <TIFFReadDirectoryFindEntry+0xb>
leaveq 
retq   
mov    %rsi,%rax
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

0000000000018080 <TIFFReadDirectoryFindFieldInfo>:
push   %rbp
mov    %rsp,%rbp
movslq 0x3f8(%rdi),%rcx
movzwl %si,%r10d
mov    $0xffffffffffffffff,%rsi
jmp    1809b <TIFFReadDirectoryFindFieldInfo+0x1b>
mov    %rax,%rsi
lea    0x1(%rsi),%eax
cmp    %eax,%ecx
jne    180ab <TIFFReadDirectoryFindFieldInfo+0x2b>
mov    $0xffffffff,%eax
mov    %eax,(%rdx)
leaveq 
retq   
lea    (%rcx,%rsi,1),%eax
mov    %rax,%r8
shr    $0x1f,%r8d
add    %r8d,%eax
sar    %eax
movslq %eax,%r9
mov    0x3f0(%rdi),%r8
mov    (%r8,%r9,8),%r8
mov    (%r8),%r8d
cmp    %r8d,%r10d
je     180f3 <TIFFReadDirectoryFindFieldInfo+0x73>
cmp    %r8d,%r10d
ja     18098 <TIFFReadDirectoryFindFieldInfo+0x18>
mov    %rax,%rcx
jmp    1809b <TIFFReadDirectoryFindFieldInfo+0x1b>
mov    0x3f0(%rdi),%r8
lea    -0x1(%rax),%esi
movslq %esi,%rcx
mov    (%r8,%rcx,8),%rcx
cmp    (%rcx),%r10d
jne    180a7 <TIFFReadDirectoryFindFieldInfo+0x27>
mov    %rsi,%rax
test   %eax,%eax
je     180a7 <TIFFReadDirectoryFindFieldInfo+0x27>
jmp    180da <TIFFReadDirectoryFindFieldInfo+0x5a>
nopl   0x0(%rax)

0000000000018100 <EstimateStripByteCounts>:
push   %rbp
mov    %rsp,%rbp
sub    $0x40,%rsp
mov    %rdi,-0x38(%rbp)
mov    %rdx,-0x30(%rbp)
mov    %rsi,-0x28(%rbp)
xor    %esi,%esi
callq  1b690 <_TIFFFillStrilesInternal>
test   %eax,%eax
jne    18128 <EstimateStripByteCounts+0x28>
mov    $0xffffffffffffffff,%rax
leaveq 
retq   
mov    -0x38(%rbp),%rax
mov    0xf0(%rax),%rdi
test   %rdi,%rdi
jne    18143 <EstimateStripByteCounts+0x43>
mov    %r15,%rcx
mov    %rax,%r15
mov    %rcx,%rax
jmp    18153 <EstimateStripByteCounts+0x53>
mov    %r15,-0x38(%rbp)
mov    %rax,%r15
callq  8bb0 <_TIFFfree@plt>
mov    -0x38(%rbp),%rax
mov    0xe4(%r15),%esi
mov    $0x8,%edx
lea    0x3bc07(%rip),%rcx        # 53d6d <module.68+0x18>
mov    %r15,%rdi
mov    %rax,-0x20(%rbp)
callq  8750 <_TIFFCheckMalloc@plt>
mov    %rax,0xf0(%r15)
test   %rax,%rax
jne    1818b <EstimateStripByteCounts+0x8b>
mov    -0x20(%rbp),%r15
mov    $0xffffffffffffffff,%rax
leaveq 
retq   
movzwl 0x78(%r15),%eax
cmp    $0x1,%ax
jne    181d5 <EstimateStripByteCounts+0xd5>
mov    0x10(%r15),%eax
and    $0x400,%eax
test   %eax,%eax
jne    1822f <EstimateStripByteCounts+0x12f>
xor    %eax,%eax
mov    %r15,%rdi
mov    %r14,-0x38(%rbp)
mov    %rax,%r14
callq  8220 <TIFFScanlineSize64@plt>
mov    %r14,%rdx
mov    %rax,%rsi
mov    0x5c(%r15),%eax
mov    0xe0(%r15),%ecx
div    %ecx
mov    %eax,%ecx
imul   %rsi,%rcx
xor    %eax,%eax
jmp    1824e <EstimateStripByteCounts+0x14e>
mov    0x3e0(%r15),%rax
mov    0x3b8(%r15),%rdi
callq  *%rax
mov    %rax,-0x38(%rbp)
mov    0x10(%r15),%eax
and    $0x80000,%eax
test   %eax,%eax
jne    1828a <EstimateStripByteCounts+0x18a>
mov    -0x30(%rbp),%rcx
movzwl %cx,%eax
lea    (%rax,%rax,2),%eax
shl    $0x2,%eax
movslq %eax,%rax
add    $0xe,%rax
mov    %r14,-0x30(%rbp)
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %rcx,%r12
mov    %rax,%r14
xor    %ebx,%ebx
mov    -0x28(%rbp),%r13
jmpq   182fe <EstimateStripByteCounts+0x1fe>
mov    %r15,%rdi
callq  8c40 <TIFFTileSize64@plt>
xor    %ecx,%ecx
jmpq   18348 <EstimateStripByteCounts+0x248>
mov    0xf0(%r15),%rsi
mov    %eax,%edx
mov    %rcx,(%rsi,%rdx,8)
add    $0x1,%eax
mov    0xe4(%r15),%edx
cmp    %eax,%edx
ja     1823e <EstimateStripByteCounts+0x13e>
mov    -0x38(%rbp),%r14
mov    0x38(%r15),%rax
or     $0x1000000,%rax
mov    %rax,0x38(%r15)
mov    $0x1,%eax
mov    0x38(%r15),%rcx
and    $0x20000,%rcx
test   %rcx,%rcx
je     18358 <EstimateStripByteCounts+0x258>
mov    -0x20(%rbp),%r15
leaveq 
retq   
mov    -0x30(%rbp),%rcx
movzwl %cx,%eax
lea    (%rax,%rax,4),%eax
shl    $0x2,%eax
movslq %eax,%rax
add    $0x20,%rax
mov    %r14,-0x30(%rbp)
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %rcx,%r12
mov    %rax,%r14
xor    %ebx,%ebx
mov    -0x28(%rbp),%r13
jmp    182fe <EstimateStripByteCounts+0x1fe>
movzwl 0x2(%r13),%edi
callq  8140 <TIFFDataWidth@plt>
test   %eax,%eax
je     18369 <EstimateStripByteCounts+0x269>
mov    %eax,%eax
imul   0x8(%r13),%rax
mov    0x10(%r15),%ecx
and    $0x80000,%ecx
test   %ecx,%ecx
jne    183a7 <EstimateStripByteCounts+0x2a7>
cmp    $0x4,%rax
ja     182f0 <EstimateStripByteCounts+0x1f0>
mov    %rbx,%rax
add    $0x18,%r13
add    $0xffff,%r12d
add    %rax,%r14
test   %r12w,%r12w
jne    182bc <EstimateStripByteCounts+0x1bc>
mov    -0x38(%rbp),%rcx
cmp    %rcx,%r14
jbe    183b9 <EstimateStripByteCounts+0x2b9>
mov    %rcx,%rax
movzwl 0xaa(%r15),%edx
cmp    $0x2,%dx
jne    183d4 <EstimateStripByteCounts+0x2d4>
movzwl 0x82(%r15),%esi
xor    %edx,%edx
div    %rsi
jmpq   183d4 <EstimateStripByteCounts+0x2d4>
mov    0xf0(%r15),%rsi
mov    %ecx,%edx
mov    %rax,(%rsi,%rdx,8)
add    $0x1,%ecx
mov    0xe4(%r15),%edx
cmp    %ecx,%edx
ja     18338 <EstimateStripByteCounts+0x238>
jmpq   1825d <EstimateStripByteCounts+0x15d>
mov    0x5c(%r15),%ecx
mov    %ecx,0x84(%r15)
mov    -0x20(%rbp),%r15
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
lea    0x3b9dc(%rip),%rsi        # 53d55 <module.68>
lea    0x3ba09(%rip),%rdx        # 53d89 <module.68+0x34>
movzwl 0x2(%r13),%ecx
callq  8a00 <TIFFErrorExt@plt>
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x30(%rbp),%r14
mov    -0x20(%rbp),%r15
mov    $0xffffffffffffffff,%rax
leaveq 
retq   
cmp    $0x8,%rax
ja     182f0 <EstimateStripByteCounts+0x1f0>
mov    %rbx,%rax
jmpq   182f0 <EstimateStripByteCounts+0x1f0>
mov    %rcx,%rax
sub    %r14,%rax
jmpq   18314 <EstimateStripByteCounts+0x214>
mov    0xf0(%r15),%rsi
mov    %ebx,%edx
mov    %rax,(%rsi,%rdx,8)
add    $0x1,%ebx
mov    0xe4(%r15),%edx
cmp    %ebx,%edx
ja     183c4 <EstimateStripByteCounts+0x2c4>
mov    0xe8(%r15),%rdx
lea    -0x1(%rbx),%eax
mov    %eax,%edi
mov    (%rdx,%rdi,8),%rsi
mov    0xf0(%r15),%rdx
mov    %rsi,%rax
add    (%rdx,%rdi,8),%rax
cmp    %rax,%rcx
jb     18417 <EstimateStripByteCounts+0x317>
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x30(%rbp),%r14
jmpq   1825d <EstimateStripByteCounts+0x15d>
sub    %rsi,%rcx
mov    %rcx,(%rdx,%rdi,8)
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x30(%rbp),%r14
jmpq   1825d <EstimateStripByteCounts+0x15d>
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

0000000000018440 <MissingRequired>:
push   %rbp
mov    %rsp,%rbp
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
mov    %rsi,%rcx
lea    0x3b95f(%rip),%rsi        # 53db6 <module.71>
lea    0x3b968(%rip),%rdx        # 53dc6 <module.71+0x10>
callq  8a00 <TIFFErrorExt@plt>
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)

0000000000018470 <TIFFCheckDirOffset>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
xor    %eax,%eax
test   %rsi,%rsi
jne    18481 <TIFFCheckDirOffset+0x11>
leaveq 
retq   
movzwl 0x32(%rdi),%ecx
cmp    $0xffff,%cx
je     18490 <TIFFCheckDirOffset+0x20>
mov    %rax,%rcx
jmp    184b3 <TIFFCheckDirOffset+0x43>
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
lea    0x3b954(%rip),%rsi        # 53df4 <module.71+0x3e>
lea    0x3b960(%rip),%rdx        # 53e07 <module.71+0x51>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
add    $0x1,%ecx
movzwl 0x32(%rdi),%edx
cmp    %dx,%cx
jae    184d0 <TIFFCheckDirOffset+0x60>
mov    0x28(%rdi),%r8
test   %r8,%r8
je     184d0 <TIFFCheckDirOffset+0x60>
movzwl %cx,%edx
cmp    (%r8,%rdx,8),%rsi
jne    184b0 <TIFFCheckDirOffset+0x40>
leaveq 
retq   
movzwl 0x32(%rdi),%eax
lea    0x1(%rax),%ecx
mov    %cx,0x32(%rdi)
mov    0x28(%rdi),%rax
test   %rax,%rax
je     184ed <TIFFCheckDirOffset+0x7d>
movzwl 0x30(%rdi),%eax
cmp    %ax,%cx
jbe    1852e <TIFFCheckDirOffset+0xbe>
mov    0x28(%rdi),%r9
movzwl 0x32(%rdi),%edx
mov    $0x10,%ecx
lea    0x3b935(%rip),%r8        # 53e36 <module.71+0x80>
mov    %rdi,%rax
mov    %rdi,-0x10(%rbp)
mov    %rsi,-0x8(%rbp)
mov    %r9,%rsi
mov    %rax,%rdi
callq  8d00 <_TIFFCheckRealloc@plt>
test   %rax,%rax
jne    18547 <TIFFCheckDirOffset+0xd7>
xor    %eax,%eax
leaveq 
retq   
movw   $0xffff,0x30(%rdi)
mov    %rax,0x28(%rdi)
mov    -0x8(%rbp),%rsi
mov    0x28(%rdi),%rcx
movzwl 0x32(%rdi),%eax
add    $0xffffffff,%eax
movslq %eax,%rax
mov    %rsi,(%rcx,%rax,8)
mov    $0x1,%eax
leaveq 
retq   
mov    -0x10(%rbp),%rdi
movzwl 0x32(%rdi),%ecx
cmp    $0x7fff,%cx
ja     18520 <TIFFCheckDirOffset+0xb0>
add    %ecx,%ecx
mov    %cx,0x30(%rdi)
jmp    18526 <TIFFCheckDirOffset+0xb6>
xchg   %ax,%ax

0000000000018560 <CheckDirCount>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %edx,%r8d
mov    0x8(%rsi),%rcx
cmp    %r8,%rcx
jb     18580 <CheckDirCount+0x20>
mov    $0x1,%eax
cmp    %r8,%rcx
ja     185be <CheckDirCount+0x5e>
leaveq 
retq   
movzwl (%rsi),%ecx
mov    %rdi,%rax
mov    %r13,-0x10(%rbp)
mov    %r14,-0x18(%rbp)
mov    %r15,-0x20(%rbp)
mov    %rsi,%r13
mov    %rcx,%rsi
mov    %rdx,%r14
mov    %rdi,%r15
mov    %rax,%rdi
callq  8ae0 <TIFFFieldWithTag@plt>
mov    0x3b8(%r15),%rdi
mov    (%r15),%rsi
test   %rax,%rax
jne    18603 <CheckDirCount+0xa3>
lea    0x3b070(%rip),%rcx        # 5362c <module.10+0x180>
jmp    18607 <CheckDirCount+0xa7>
movzwl (%rsi),%ecx
mov    %rdi,%rax
mov    %r12,-0x8(%rbp)
mov    %r13,-0x10(%rbp)
mov    %r14,-0x18(%rbp)
mov    %r15,-0x20(%rbp)
mov    %rsi,%r12
mov    %rcx,%rsi
mov    %r8,%r13
mov    %rdi,%r14
mov    %rax,%rdi
mov    %rdx,%r15
callq  8ae0 <TIFFFieldWithTag@plt>
mov    0x3b8(%r14),%rdi
mov    (%r14),%rsi
test   %rax,%rax
jne    18631 <CheckDirCount+0xd1>
lea    0x3b02b(%rip),%rcx        # 5362c <module.10+0x180>
jmp    18635 <CheckDirCount+0xd5>
mov    0x20(%rax),%rcx
lea    0x3b835(%rip),%rdx        # 53e43 <module.71+0x8d>
mov    0x8(%r13),%r8
mov    %r14,%r9
xor    %r13d,%r13d
mov    %r13,%rax
callq  85a0 <TIFFWarningExt@plt>
mov    %r13,%rax
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
leaveq 
retq   
mov    0x20(%rax),%rcx
mov    %r15,%r9
xor    %eax,%eax
lea    0x3b842(%rip),%rdx        # 53e83 <module.71+0xcd>
mov    0x8(%r12),%r8
callq  85a0 <TIFFWarningExt@plt>
mov    %r13,0x8(%r12)
mov    $0x1,%eax
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

0000000000018670 <TIFFFetchDirectory>:
push   %rbp
mov    %rsp,%rbp
sub    $0x80,%rsp
test   %rdx,%rdx
jne    1869f <TIFFFetchDirectory+0x2f>
lea    0x3b84f(%rip),%rdi        # 53ed6 <module.78+0x13>
lea    0x3aed8(%rip),%rsi        # 53566 <module.10+0xba>
mov    $0x1204,%edx
lea    0x3b841(%rip),%rcx        # 53edb <module.78+0x18>
callq  8490 <__assert_fail@plt>
mov    %rsi,0x18(%rdi)
test   %rcx,%rcx
je     186af <TIFFFetchDirectory+0x3f>
movq   $0x0,(%rcx)
lea    0x3b80d(%rip),%rsi        # 53ec3 <module.78>
mov    $0x2,%r11d
mov    $0x8,%r10d
mov    %rdx,-0x10(%rbp)
mov    $0xc,%eax
mov    %rax,-0x50(%rbp)
mov    $0x14,%eax
mov    %rax,-0x58(%rbp)
mov    0x10(%rdi),%eax
mov    %rax,%rdx
and    $0x800,%edx
test   %edx,%edx
jne    18731 <TIFFFetchDirectory+0xc1>
mov    0x18(%rdi),%rsi
mov    %rdi,%rax
mov    %r15,-0x38(%rbp)
mov    %rcx,-0x40(%rbp)
mov    %rdi,%r15
mov    %rax,%rdi
callq  82f0 <_TIFFSeekOK@plt>
test   %eax,%eax
jne    18801 <TIFFFetchDirectory+0x191>
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
lea    0x3b7d4(%rip),%rdx        # 53eee <module.78+0x2b>
mov    (%r15),%rcx
lea    0x3b79f(%rip),%rsi        # 53ec3 <module.78>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x38(%rbp),%r15
leaveq 
retq   
mov    0x18(%rdi),%r8
lea    0x3b88b(%rip),%rdx        # 53fc7 <module.78+0x104>
and    $0x80000,%eax
test   %eax,%eax
jne    1885c <TIFFFetchDirectory+0x1ec>
lea    0x2(%r8),%r9
cmp    %r8,%r9
jl     188da <TIFFFetchDirectory+0x26a>
cmp    $0x1,%r9
jle    188da <TIFFFetchDirectory+0x26a>
cmp    0x3a0(%rdi),%r9
jg     188da <TIFFFetchDirectory+0x26a>
add    0x398(%rdi),%r8
lea    -0x7a(%rbp),%rax
mov    %r14,-0x30(%rbp)
mov    %r15,-0x38(%rbp)
mov    %rcx,-0x48(%rbp)
mov    %r11,%rdx
mov    %r8,%rsi
mov    %rdi,%r14
mov    %rax,%rdi
mov    %r9,%r15
callq  8790 <_TIFFmemcpy@plt>
mov    0x10(%r14),%eax
and    $0x80,%eax
test   %eax,%eax
je     187ae <TIFFFetchDirectory+0x13e>
lea    -0x7a(%rbp),%rdi
callq  87c0 <TIFFSwabShort@plt>
movzwl -0x7a(%rbp),%eax
cmp    $0x1000,%ax
ja     188ec <TIFFFetchDirectory+0x27c>
pushq  -0x50(%rbp)
popq   -0x58(%rbp)
movzwl -0x7a(%rbp),%esi
test   %si,%si
je     18914 <TIFFFetchDirectory+0x2a4>
mov    %r14,%rdi
mov    -0x58(%rbp),%rax
mov    %rax,%rdx
lea    0x3b7ac(%rip),%rcx        # 53f8c <module.78+0xc9>
mov    %r14,-0x50(%rbp)
mov    %rax,%r14
callq  8750 <_TIFFCheckMalloc@plt>
test   %rax,%rax
jne    1893c <TIFFFetchDirectory+0x2cc>
xor    %eax,%eax
mov    -0x38(%rbp),%r15
mov    -0x30(%rbp),%r14
leaveq 
retq   
mov    0x10(%r15),%eax
and    $0x80000,%eax
test   %eax,%eax
jne    1898e <TIFFFetchDirectory+0x31e>
mov    0x3c0(%r15),%rax
mov    0x3b8(%r15),%rdi
lea    -0x7a(%rbp),%rsi
mov    $0x2,%edx
callq  *%rax
cmp    $0x2,%rax
je     189d8 <TIFFFetchDirectory+0x368>
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
mov    (%r15),%rcx
lea    0x3b6ce(%rip),%rdx        # 53f16 <module.78+0x53>
lea    0x3b674(%rip),%rsi        # 53ec3 <module.78>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x38(%rbp),%r15
leaveq 
retq   
lea    0x8(%r8),%r9
cmp    %r9,%r8
jg     18a34 <TIFFFetchDirectory+0x3c4>
cmp    $0x7,%r9
jle    18a34 <TIFFFetchDirectory+0x3c4>
cmp    0x3a0(%rdi),%r9
jg     18a34 <TIFFFetchDirectory+0x3c4>
add    0x398(%rdi),%r8
lea    -0x68(%rbp),%rax
mov    %r10,%rdx
mov    %r14,-0x30(%rbp)
mov    %r15,-0x38(%rbp)
mov    %rcx,-0x48(%rbp)
mov    %r8,%rsi
mov    %rdi,%r14
mov    %rax,%rdi
mov    %r9,%r15
callq  8790 <_TIFFmemcpy@plt>
mov    0x10(%r14),%eax
and    $0x80,%eax
test   %eax,%eax
je     188c1 <TIFFFetchDirectory+0x251>
lea    -0x68(%rbp),%rdi
callq  8730 <TIFFSwabLong8@plt>
mov    -0x68(%rbp),%rax
cmp    $0x1000,%rax
ja     18a46 <TIFFFetchDirectory+0x3d6>
mov    %ax,-0x7a(%rbp)
jmpq   187c2 <TIFFFetchDirectory+0x152>
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%r14),%rdi
lea    0x3b5c7(%rip),%rsi        # 53ec3 <module.78>
lea    0x3b639(%rip),%rdx        # 53f3c <module.78+0x79>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x38(%rbp),%r15
mov    -0x30(%rbp),%r14
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%r14),%rdi
lea    0x3b6c5(%rip),%rdx        # 53fe9 <module.78+0x126>
lea    0x3b598(%rip),%rsi        # 53ec3 <module.78>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x38(%rbp),%r15
mov    -0x30(%rbp),%r14
leaveq 
retq   
movzwl -0x7a(%rbp),%ecx
imul   %r14d,%ecx
mov    %ecx,%edx
lea    (%rdx,%r15,1),%rsi
cmp    %r15,%rsi
jge    18a6e <TIFFFetchDirectory+0x3fe>
mov    -0x50(%rbp),%rcx
xor    %r8d,%r8d
mov    0x3b8(%rcx),%rdi
mov    %rax,%r14
mov    %r8,%rax
lea    0x3b6c6(%rip),%rdx        # 54034 <module.78+0x171>
lea    0x3b54e(%rip),%rsi        # 53ec3 <module.78>
callq  8a00 <TIFFErrorExt@plt>
mov    %r14,%rdi
callq  8bb0 <_TIFFfree@plt>
xor    %eax,%eax
mov    -0x38(%rbp),%r15
mov    -0x30(%rbp),%r14
leaveq 
retq   
mov    0x3c0(%r15),%rax
mov    0x3b8(%r15),%rdi
lea    -0x78(%rbp),%rsi
mov    $0x8,%edx
callq  *%rax
cmp    $0x8,%rax
je     18a80 <TIFFFetchDirectory+0x410>
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
mov    (%r15),%rcx
lea    0x3b552(%rip),%rdx        # 53f16 <module.78+0x53>
lea    0x3b4f8(%rip),%rsi        # 53ec3 <module.78>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x38(%rbp),%r15
leaveq 
retq   
mov    0x10(%r15),%eax
and    $0x80,%eax
test   %eax,%eax
je     189ee <TIFFFetchDirectory+0x37e>
lea    -0x7a(%rbp),%rdi
callq  87c0 <TIFFSwabShort@plt>
movzwl -0x7a(%rbp),%eax
cmp    $0x1000,%ax
ja     18aaf <TIFFFetchDirectory+0x43f>
pushq  -0x50(%rbp)
popq   -0x58(%rbp)
movzwl -0x7a(%rbp),%esi
mov    %r15,%rdi
mov    -0x58(%rbp),%rax
mov    %rax,%rdx
lea    0x3b575(%rip),%rcx        # 53f8c <module.78+0xc9>
mov    %r15,-0x48(%rbp)
mov    %rax,%r15
callq  8750 <_TIFFCheckMalloc@plt>
test   %rax,%rax
jne    18ad3 <TIFFFetchDirectory+0x463>
xor    %eax,%eax
mov    -0x38(%rbp),%r15
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%r14),%rdi
lea    0x3b46d(%rip),%rsi        # 53ec3 <module.78>
lea    0x3b4df(%rip),%rdx        # 53f3c <module.78+0x79>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x38(%rbp),%r15
mov    -0x30(%rbp),%r14
leaveq 
retq   
cmp    %rdx,%rsi
jge    18b4c <TIFFFetchDirectory+0x4dc>
mov    -0x50(%rbp),%rcx
jmpq   18957 <TIFFFetchDirectory+0x2e7>
mov    0x10(%r15),%eax
and    $0x80,%eax
test   %eax,%eax
je     18a96 <TIFFFetchDirectory+0x426>
lea    -0x78(%rbp),%rdi
callq  8730 <TIFFSwabLong8@plt>
mov    -0x78(%rbp),%rax
cmp    $0x1000,%rax
ja     18b96 <TIFFFetchDirectory+0x526>
mov    %ax,-0x7a(%rbp)
jmpq   18a02 <TIFFFetchDirectory+0x392>
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
lea    0x3b404(%rip),%rsi        # 53ec3 <module.78>
lea    0x3b476(%rip),%rdx        # 53f3c <module.78+0x79>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x38(%rbp),%r15
leaveq 
retq   
movzwl -0x7a(%rbp),%ecx
imul   %r15d,%ecx
mov    %ecx,%edx
mov    -0x48(%rbp),%r8
mov    0x3c0(%r8),%rcx
mov    0x3b8(%r8),%rdi
mov    %rax,%rsi
mov    %r14,-0x30(%rbp)
mov    %r13,-0x58(%rbp)
mov    %rax,%r13
mov    %r8,%r14
callq  *%rcx
movzwl -0x7a(%rbp),%ecx
imul   %r15d,%ecx
mov    %ecx,%ecx
cmp    %rax,%rcx
je     18bba <TIFFFetchDirectory+0x54a>
xor    %eax,%eax
mov    0x3b8(%r14),%rdi
lea    0x3b47e(%rip),%rdx        # 53fa3 <module.78+0xe0>
mov    (%r14),%rcx
lea    0x3b394(%rip),%rsi        # 53ec3 <module.78>
callq  8a00 <TIFFErrorExt@plt>
mov    %r13,%rdi
callq  8bb0 <_TIFFfree@plt>
mov    -0x58(%rbp),%r13
xor    %eax,%eax
mov    -0x38(%rbp),%r15
mov    -0x30(%rbp),%r14
leaveq 
retq   
mov    -0x50(%rbp),%rcx
cmp    0x3a0(%rcx),%rsi
jg     18957 <TIFFFetchDirectory+0x2e7>
mov    %r15,%rsi
add    0x398(%rcx),%rsi
mov    %rax,%rdi
mov    %r12,-0x40(%rbp)
mov    %r13,-0x58(%rbp)
mov    %r14,%r12
mov    %rcx,%r14
mov    %rax,%r13
callq  8790 <_TIFFmemcpy@plt>
mov    -0x48(%rbp),%rdi
test   %rdi,%rdi
jne    18c51 <TIFFFetchDirectory+0x5e1>
mov    -0x40(%rbp),%r12
jmpq   18c16 <TIFFFetchDirectory+0x5a6>
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
lea    0x3b31d(%rip),%rsi        # 53ec3 <module.78>
lea    0x3b38f(%rip),%rdx        # 53f3c <module.78+0x79>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x38(%rbp),%r15
leaveq 
retq   
mov    -0x40(%rbp),%r15
test   %r15,%r15
je     18c16 <TIFFFetchDirectory+0x5a6>
mov    0x10(%r14),%eax
and    $0x80000,%eax
test   %eax,%eax
jne    18cb8 <TIFFFetchDirectory+0x648>
mov    0x3c0(%r14),%rax
mov    0x3b8(%r14),%rdi
lea    -0x6c(%rbp),%rsi
mov    $0x4,%edx
callq  *%rax
cmp    $0x4,%rax
je     18bfa <TIFFFetchDirectory+0x58a>
movl   $0x0,-0x6c(%rbp)
mov    0x10(%r14),%eax
and    $0x80,%eax
test   %eax,%eax
je     18c10 <TIFFFetchDirectory+0x5a0>
lea    -0x6c(%rbp),%rdi
callq  8480 <TIFFSwabLong@plt>
mov    -0x6c(%rbp),%eax
mov    %rax,(%r15)
movzwl -0x7a(%rbp),%esi
mov    $0x18,%edx
mov    %r14,%rdi
lea    0x3b363(%rip),%rcx        # 53f8c <module.78+0xc9>
callq  8750 <_TIFFCheckMalloc@plt>
test   %rax,%rax
je     18cfb <TIFFFetchDirectory+0x68b>
mov    %r12,-0x28(%rbp)
mov    %r13,-0x18(%rbp)
mov    %rax,-0x8(%rbp)
mov    %rbx,-0x20(%rbp)
mov    %rax,%r12
xor    %ebx,%ebx
jmpq   18d9b <TIFFFetchDirectory+0x72b>
movzwl -0x7a(%rbp),%eax
imul   %eax,%r12d
mov    %r12d,%eax
lea    (%r15,%rax,1),%rsi
mov    0x10(%r14),%eax
and    $0x80000,%eax
test   %eax,%eax
jne    18dd6 <TIFFFetchDirectory+0x766>
lea    -0x5c(%rbp),%r12
lea    0x4(%rsi),%rax
cmp    %rax,%rsi
jg     18e13 <TIFFFetchDirectory+0x7a3>
cmp    $0x3,%rax
jle    18e13 <TIFFFetchDirectory+0x7a3>
cmp    0x3a0(%r14),%rax
jg     18e13 <TIFFFetchDirectory+0x7a3>
add    0x398(%r14),%rsi
mov    %rdi,%r15
mov    %r12,%rdi
mov    $0x4,%edx
callq  8790 <_TIFFmemcpy@plt>
mov    %r15,%rdi
jmpq   18e1a <TIFFFetchDirectory+0x7aa>
mov    0x3c0(%r14),%rax
mov    0x3b8(%r14),%rdi
mov    %r15,%rsi
mov    $0x8,%edx
callq  *%rax
cmp    $0x8,%rax
je     18cdd <TIFFFetchDirectory+0x66d>
movq   $0x0,(%r15)
mov    0x10(%r14),%eax
and    $0x80,%eax
test   %eax,%eax
je     18c16 <TIFFFetchDirectory+0x5a6>
mov    %r15,%rdi
callq  8730 <TIFFSwabLong8@plt>
jmpq   18c16 <TIFFFetchDirectory+0x5a6>
mov    %r13,%rdi
callq  8bb0 <_TIFFfree@plt>
mov    -0x58(%rbp),%r13
xor    %eax,%eax
mov    -0x38(%rbp),%r15
mov    -0x30(%rbp),%r14
leaveq 
retq   
mov    0x10(%r14),%eax
and    $0x80,%eax
test   %eax,%eax
je     18d28 <TIFFFetchDirectory+0x6b8>
mov    %r13,%rdi
callq  87c0 <TIFFSwabShort@plt>
movzwl 0x0(%r13),%eax
mov    %ax,(%r12)
lea    0x2(%r13),%r15
mov    0x10(%r14),%eax
and    $0x80,%eax
test   %eax,%eax
je     18d4b <TIFFFetchDirectory+0x6db>
mov    %r15,%rdi
callq  87c0 <TIFFSwabShort@plt>
movzwl (%r15),%eax
mov    %ax,0x2(%r12)
lea    0x4(%r13),%r15
mov    0x10(%r14),%eax
mov    %rax,%rcx
and    $0x80000,%ecx
test   %ecx,%ecx
jne    18e47 <TIFFFetchDirectory+0x7d7>
and    $0x80,%eax
test   %eax,%eax
je     18d7f <TIFFFetchDirectory+0x70f>
mov    %r15,%rdi
callq  8480 <TIFFSwabLong@plt>
mov    (%r15),%eax
mov    %rax,0x8(%r12)
mov    0x8(%r13),%eax
mov    %eax,0x10(%r12)
add    $0xc,%r13
add    $0x1,%ebx
add    $0x18,%r12
movzwl -0x7a(%rbp),%eax
cmp    %bx,%ax
ja     18d13 <TIFFFetchDirectory+0x6a3>
mov    -0x18(%rbp),%rdi
callq  8bb0 <_TIFFfree@plt>
mov    -0x8(%rbp),%rax
mov    -0x10(%rbp),%rcx
mov    %rax,(%rcx)
movzwl -0x7a(%rbp),%eax
mov    -0x20(%rbp),%rbx
mov    -0x58(%rbp),%r13
mov    -0x28(%rbp),%r12
mov    -0x38(%rbp),%r15
mov    -0x30(%rbp),%r14
leaveq 
retq   
lea    0x8(%rsi),%rax
cmp    %rsi,%rax
jl     18e7c <TIFFFetchDirectory+0x80c>
cmp    $0x7,%rax
jle    18e7c <TIFFFetchDirectory+0x80c>
cmp    0x3a0(%r14),%rax
jg     18e7c <TIFFFetchDirectory+0x80c>
add    0x398(%r14),%rsi
mov    %rdi,%r12
mov    $0x8,%edx
callq  8790 <_TIFFmemcpy@plt>
mov    %r12,%rdi
jmp    18e83 <TIFFFetchDirectory+0x813>
movl   $0x0,-0x5c(%rbp)
mov    0x10(%r14),%eax
and    $0x80,%eax
test   %eax,%eax
je     18e38 <TIFFFetchDirectory+0x7c8>
mov    %r12,%rax
mov    %rdi,%r12
mov    %rax,%rdi
callq  8480 <TIFFSwabLong@plt>
mov    %r12,%rdi
mov    -0x5c(%rbp),%eax
mov    %rax,(%rdi)
mov    -0x40(%rbp),%r12
jmpq   18c16 <TIFFFetchDirectory+0x5a6>
and    $0x80,%eax
test   %eax,%eax
je     18e58 <TIFFFetchDirectory+0x7e8>
mov    %r15,%rdi
callq  8730 <TIFFSwabLong8@plt>
mov    %r15,%rdi
callq  1b640 <TIFFReadUInt64>
mov    %rax,0x8(%r12)
lea    0xc(%r13),%rdi
callq  1b640 <TIFFReadUInt64>
mov    %rax,0x10(%r12)
add    $0x14,%r13
jmpq   18d94 <TIFFFetchDirectory+0x724>
movq   $0x0,(%rdi)
mov    0x10(%r14),%eax
and    $0x80,%eax
test   %eax,%eax
jne    18e99 <TIFFFetchDirectory+0x829>
mov    -0x40(%rbp),%r12
jmpq   18c16 <TIFFFetchDirectory+0x5a6>
callq  8730 <TIFFSwabLong8@plt>
mov    -0x40(%rbp),%r12
jmpq   18c16 <TIFFFetchDirectory+0x5a6>
nopw   0x0(%rax,%rax,1)

0000000000018eb0 <TIFFFetchNormalTag>:
push   %rbp
mov    %rsp,%rbp
sub    $0x140,%rsp
mov    %r14,-0x28(%rbp)
mov    %r15,-0x30(%rbp)
mov    %rdx,-0x8(%rbp)
mov    %rsi,%r15
movzwl (%r15),%esi
lea    -0x134(%rbp),%rdx
mov    %rdi,%r14
callq  18080 <TIFFReadDirectoryFindFieldInfo>
lea    0x3b17f(%rip),%rsi        # 54063 <module.89+0x13>
xor    %r10d,%r10d
mov    -0x134(%rbp),%eax
cmp    $0xffffffff,%eax
je     18f20 <TIFFFetchNormalTag+0x70>
lea    0x3a66d(%rip),%r9        # 53566 <module.10+0xba>
mov    0x3f0(%r14),%rcx
mov    (%rcx,%rax,8),%r11
test   %r11,%r11
jne    18f49 <TIFFFetchNormalTag+0x99>
mov    %rsi,%rcx
mov    %r9,%rsi
lea    0x3b17f(%rip),%rdi        # 54095 <module.89+0x45>
mov    $0x1305,%edx
callq  8490 <__assert_fail@plt>
xor    %eax,%eax
mov    0x3b8(%r14),%rdi
lea    0x3b146(%rip),%rdx        # 54076 <module.89+0x26>
movzwl (%r15),%ecx
mov    %r10,%r14
callq  8a00 <TIFFErrorExt@plt>
mov    %r14,%rax
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
leaveq 
retq   
mov    0x10(%r11),%ecx
cmp    $0x33,%ecx
jne    18f69 <TIFFFetchNormalTag+0xb9>
mov    %rsi,%rcx
mov    %r9,%rsi
lea    0x3b142(%rip),%rdi        # 540a1 <module.89+0x51>
mov    $0x1306,%edx
callq  8490 <__assert_fail@plt>
cmp    $0xd,%ecx
jne    18f85 <TIFFFetchNormalTag+0xd5>
mov    %rsi,%rcx
mov    %r9,%rsi
lea    0x3b14d(%rip),%rdi        # 540c8 <module.89+0x78>
mov    $0x1307,%edx
callq  8490 <__assert_fail@plt>
cmp    $0x32,%ecx
ja     18fc5 <TIFFFetchNormalTag+0x115>
lea    0x3b0bf(%rip),%rdx        # 54050 <module.89>
mov    $0x1,%eax
lea    0x3b353(%rip),%rdi        # 542f0 <module.89+0x2a0>
lea    0x3a3d4(%rip),%r8        # 53378 <reason.25+0x1252>
movslq (%r8,%rcx,4),%rcx
add    %r8,%rcx
jmpq   *%rcx
mov    %r11,%r15
mov    %r10,%rsi
test   %esi,%esi
jne    19493 <TIFFFetchNormalTag+0x5e3>
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
leaveq 
retq   
mov    %rsi,%rcx
mov    %r9,%rsi
lea    0x3abc9(%rip),%rdi        # 53b9b <module.43+0x18b>
mov    $0x1592,%edx
callq  8490 <__assert_fail@plt>
movzbl 0x1b(%r11),%eax
test   %al,%al
je     194b3 <TIFFFetchNormalTag+0x603>
mov    %rsi,%rcx
mov    %r9,%rsi
mov    $0x1310,%edx
lea    0x3b0f2(%rip),%rdi        # 540ed <module.89+0x9d>
callq  8490 <__assert_fail@plt>
movb   $0x0,-0x127(%rbp)
movswq 0x4(%r11),%rax
cmp    $0x1,%ax
je     194f2 <TIFFFetchNormalTag+0x642>
mov    %rsi,%rcx
mov    %r9,%rsi
mov    $0x1341,%edx
lea    0x3b193(%rip),%rdi        # 541bb <module.89+0x16b>
callq  8490 <__assert_fail@plt>
movswq 0x4(%r11),%rax
cmp    $0x1,%ax
je     19516 <TIFFFetchNormalTag+0x666>
mov    %rsi,%rcx
mov    %r9,%rsi
mov    $0x134e,%edx
lea    0x3b16d(%rip),%rdi        # 541bb <module.89+0x16b>
callq  8490 <__assert_fail@plt>
movswq 0x4(%r11),%rax
cmp    $0x1,%ax
je     1953a <TIFFFetchNormalTag+0x68a>
mov    %rsi,%rcx
mov    %r9,%rsi
mov    $0x135b,%edx
lea    0x3b147(%rip),%rdi        # 541bb <module.89+0x16b>
callq  8490 <__assert_fail@plt>
movswq 0x4(%r11),%rax
cmp    $0x1,%ax
je     1955e <TIFFFetchNormalTag+0x6ae>
mov    %rsi,%rcx
mov    %r9,%rsi
mov    $0x1368,%edx
lea    0x3b121(%rip),%rdi        # 541bb <module.89+0x16b>
callq  8490 <__assert_fail@plt>
movswq 0x4(%r11),%rax
cmp    $0x1,%ax
je     19582 <TIFFFetchNormalTag+0x6d2>
mov    %rsi,%rcx
mov    %r9,%rsi
mov    $0x1375,%edx
lea    0x3b0fb(%rip),%rdi        # 541bb <module.89+0x16b>
callq  8490 <__assert_fail@plt>
movswq 0x4(%r11),%rax
cmp    $0x1,%ax
je     195a6 <TIFFFetchNormalTag+0x6f6>
mov    %rsi,%rcx
mov    %r9,%rsi
mov    $0x1382,%edx
lea    0x3b0d5(%rip),%rdi        # 541bb <module.89+0x16b>
callq  8490 <__assert_fail@plt>
movswq 0x4(%r11),%rax
cmp    $0x1,%ax
je     195ca <TIFFFetchNormalTag+0x71a>
mov    %rsi,%rcx
mov    %r9,%rsi
mov    $0x138f,%edx
lea    0x3b0af(%rip),%rdi        # 541bb <module.89+0x16b>
callq  8490 <__assert_fail@plt>
movswq 0x4(%r11),%rax
cmp    $0x2,%ax
je     195ee <TIFFFetchNormalTag+0x73e>
mov    %rsi,%rcx
mov    %r9,%rsi
lea    0x3b0a6(%rip),%rdi        # 541d3 <module.89+0x183>
mov    $0x139c,%edx
callq  8490 <__assert_fail@plt>
movswq 0x4(%r11),%r8
test   %r8w,%r8w
jg     19612 <TIFFFetchNormalTag+0x762>
mov    %rsi,%rcx
mov    %r9,%rsi
mov    $0x13b2,%edx
lea    0x3b0c6(%rip),%rdi        # 5421e <module.89+0x1ce>
callq  8490 <__assert_fail@plt>
movswq 0x4(%r11),%rdi
test   %di,%di
jg     19636 <TIFFFetchNormalTag+0x786>
mov    %rsi,%rcx
mov    %r9,%rsi
mov    $0x13cc,%edx
lea    0x3b0a1(%rip),%rdi        # 5421e <module.89+0x1ce>
callq  8490 <__assert_fail@plt>
movswq 0x4(%r11),%rdi
test   %di,%di
jg     1965a <TIFFFetchNormalTag+0x7aa>
mov    %rsi,%rcx
mov    %r9,%rsi
mov    $0x13e2,%edx
lea    0x3b07c(%rip),%rdi        # 5421e <module.89+0x1ce>
callq  8490 <__assert_fail@plt>
movswq 0x4(%r11),%rdi
test   %di,%di
jg     1967e <TIFFFetchNormalTag+0x7ce>
mov    %rsi,%rcx
mov    %r9,%rsi
mov    $0x13f8,%edx
lea    0x3b057(%rip),%rdi        # 5421e <module.89+0x1ce>
callq  8490 <__assert_fail@plt>
movswq 0x4(%r11),%rcx
cmp    $0xffff,%cx
je     196a2 <TIFFFetchNormalTag+0x7f2>
mov    %rsi,%rcx
mov    %r9,%rsi
mov    $0x140e,%edx
lea    0x3b07d(%rip),%rdi        # 5426a <module.89+0x21a>
callq  8490 <__assert_fail@plt>
movswq 0x4(%r11),%rcx
cmp    $0xffff,%cx
je     196c7 <TIFFFetchNormalTag+0x817>
mov    %rsi,%rcx
mov    %r9,%rsi
mov    $0x1429,%edx
lea    0x3b057(%rip),%rdi        # 5426a <module.89+0x21a>
callq  8490 <__assert_fail@plt>
movswq 0x4(%r11),%rcx
cmp    $0xffff,%cx
je     196ec <TIFFFetchNormalTag+0x83c>
mov    %rsi,%rcx
mov    %r9,%rsi
mov    $0x143f,%edx
lea    0x3b031(%rip),%rdi        # 5426a <module.89+0x21a>
callq  8490 <__assert_fail@plt>
movswq 0x4(%r11),%rcx
cmp    $0xffff,%cx
je     19711 <TIFFFetchNormalTag+0x861>
mov    %rsi,%rcx
mov    %r9,%rsi
mov    $0x1455,%edx
lea    0x3b00b(%rip),%rdi        # 5426a <module.89+0x21a>
callq  8490 <__assert_fail@plt>
movswq 0x4(%r11),%rcx
cmp    $0xffff,%cx
je     19736 <TIFFFetchNormalTag+0x886>
mov    %rsi,%rcx
mov    %r9,%rsi
mov    $0x146b,%edx
lea    0x3afe5(%rip),%rdi        # 5426a <module.89+0x21a>
callq  8490 <__assert_fail@plt>
movswq 0x4(%r11),%rcx
cmp    $0xffff,%cx
je     1975b <TIFFFetchNormalTag+0x8ab>
mov    %rsi,%rcx
mov    %r9,%rsi
mov    $0x1481,%edx
lea    0x3afbf(%rip),%rdi        # 5426a <module.89+0x21a>
callq  8490 <__assert_fail@plt>
movswq 0x4(%r11),%rcx
cmp    $0xffff,%cx
je     19780 <TIFFFetchNormalTag+0x8d0>
mov    %rsi,%rcx
mov    %r9,%rsi
mov    $0x1497,%edx
lea    0x3af99(%rip),%rdi        # 5426a <module.89+0x21a>
callq  8490 <__assert_fail@plt>
movswq 0x4(%r11),%rcx
cmp    $0xffff,%cx
je     197a5 <TIFFFetchNormalTag+0x8f5>
mov    %rsi,%rcx
mov    %r9,%rsi
mov    $0x14ad,%edx
lea    0x3af73(%rip),%rdi        # 5426a <module.89+0x21a>
callq  8490 <__assert_fail@plt>
movswq 0x4(%r11),%rax
cmp    $0xfffd,%ax
je     197ca <TIFFFetchNormalTag+0x91a>
mov    %rsi,%rcx
mov    %r9,%rsi
mov    $0x14c3,%edx
callq  8490 <__assert_fail@plt>
movswq 0x4(%r11),%rax
cmp    $0xfffd,%ax
je     197ee <TIFFFetchNormalTag+0x93e>
mov    %rsi,%rcx
mov    %r9,%rsi
mov    $0x14d9,%edx
callq  8490 <__assert_fail@plt>
movq   $0x0,-0x88(%rbp)
movswq 0x4(%r11),%rax
cmp    $0xfffd,%ax
je     19812 <TIFFFetchNormalTag+0x962>
mov    %rsi,%rcx
mov    %r9,%rsi
mov    $0x14ea,%edx
callq  8490 <__assert_fail@plt>
movswq 0x4(%r11),%rax
cmp    $0xfffd,%ax
je     19836 <TIFFFetchNormalTag+0x986>
mov    %rsi,%rcx
mov    %r9,%rsi
mov    $0x14fb,%edx
callq  8490 <__assert_fail@plt>
movq   $0x0,-0x78(%rbp)
movswq 0x4(%r11),%rax
cmp    $0xfffd,%ax
je     1985a <TIFFFetchNormalTag+0x9aa>
mov    %rsi,%rcx
mov    %r9,%rsi
mov    $0x150c,%edx
callq  8490 <__assert_fail@plt>
movswq 0x4(%r11),%rax
cmp    $0xfffd,%ax
je     1987e <TIFFFetchNormalTag+0x9ce>
mov    %rsi,%rcx
mov    %r9,%rsi
mov    $0x151d,%edx
callq  8490 <__assert_fail@plt>
movq   $0x0,-0x68(%rbp)
movswq 0x4(%r11),%rax
cmp    $0xfffd,%ax
je     198a2 <TIFFFetchNormalTag+0x9f2>
mov    %rsi,%rcx
mov    %r9,%rsi
mov    $0x152e,%edx
callq  8490 <__assert_fail@plt>
movswq 0x4(%r11),%rax
cmp    $0xfffd,%ax
je     198c6 <TIFFFetchNormalTag+0xa16>
mov    %rsi,%rcx
mov    %r9,%rsi
mov    $0x153f,%edx
callq  8490 <__assert_fail@plt>
movq   $0x0,-0x58(%rbp)
movswq 0x4(%r11),%rax
cmp    $0xfffd,%ax
je     198ea <TIFFFetchNormalTag+0xa3a>
mov    %rsi,%rcx
mov    %r9,%rsi
mov    $0x1550,%edx
callq  8490 <__assert_fail@plt>
movswq 0x4(%r11),%rax
cmp    $0xfffd,%ax
je     1990e <TIFFFetchNormalTag+0xa5e>
mov    %rsi,%rcx
mov    %r9,%rsi
mov    $0x1561,%edx
callq  8490 <__assert_fail@plt>
movswq 0x4(%r11),%rax
cmp    $0xfffd,%ax
je     19932 <TIFFFetchNormalTag+0xa82>
mov    %rsi,%rcx
mov    %r9,%rsi
mov    $0x1572,%edx
callq  8490 <__assert_fail@plt>
movswq 0x4(%r11),%rax
cmp    $0xfffd,%ax
je     19956 <TIFFFetchNormalTag+0xaa6>
mov    %rsi,%rcx
mov    %r9,%rsi
mov    $0x1583,%edx
callq  8490 <__assert_fail@plt>
mov    0x20(%r15),%rcx
mov    %r14,%rdi
mov    %r10,%r14
mov    -0x8(%rbp),%r8
callq  17e20 <TIFFReadDirEntryOutputErr>
mov    %r14,%rax
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
leaveq 
retq   
lea    -0x130(%rbp),%rdx
mov    %r14,%rdi
mov    %r15,%rsi
mov    %r14,-0x38(%rbp)
mov    %r15,%r14
mov    %r11,%r15
callq  14050 <TIFFReadDirEntryByteArray>
test   %eax,%eax
je     1997a <TIFFFetchNormalTag+0xaca>
mov    %rax,%rsi
xor    %r10d,%r10d
lea    0x3ab6c(%rip),%rdx        # 54050 <module.89>
mov    $0x1,%eax
mov    -0x38(%rbp),%r14
jmpq   18fb3 <TIFFFetchNormalTag+0x103>
movzbl 0x1b(%r11),%eax
test   %al,%al
je     19988 <TIFFFetchNormalTag+0xad8>
mov    %rsi,%rcx
mov    %r9,%rsi
mov    $0x1342,%edx
lea    0x3abdc(%rip),%rdi        # 540ed <module.89+0x9d>
callq  8490 <__assert_fail@plt>
movzbl 0x1b(%r11),%eax
test   %al,%al
je     199c1 <TIFFFetchNormalTag+0xb11>
mov    %rsi,%rcx
mov    %r9,%rsi
mov    $0x134f,%edx
lea    0x3abb8(%rip),%rdi        # 540ed <module.89+0x9d>
callq  8490 <__assert_fail@plt>
movzbl 0x1b(%r11),%eax
test   %al,%al
je     199fa <TIFFFetchNormalTag+0xb4a>
mov    %rsi,%rcx
mov    %r9,%rsi
mov    $0x135c,%edx
lea    0x3ab94(%rip),%rdi        # 540ed <module.89+0x9d>
callq  8490 <__assert_fail@plt>
movzbl 0x1b(%r11),%eax
test   %al,%al
je     19a33 <TIFFFetchNormalTag+0xb83>
mov    %rsi,%rcx
mov    %r9,%rsi
mov    $0x1369,%edx
lea    0x3ab70(%rip),%rdi        # 540ed <module.89+0x9d>
callq  8490 <__assert_fail@plt>
movzbl 0x1b(%r11),%eax
test   %al,%al
je     19a6c <TIFFFetchNormalTag+0xbbc>
mov    %rsi,%rcx
mov    %r9,%rsi
mov    $0x1376,%edx
lea    0x3ab4c(%rip),%rdi        # 540ed <module.89+0x9d>
callq  8490 <__assert_fail@plt>
movzbl 0x1b(%r11),%eax
test   %al,%al
je     19aab <TIFFFetchNormalTag+0xbfb>
mov    %rsi,%rcx
mov    %r9,%rsi
mov    $0x1383,%edx
lea    0x3ab28(%rip),%rdi        # 540ed <module.89+0x9d>
callq  8490 <__assert_fail@plt>
movzbl 0x1b(%r11),%eax
test   %al,%al
je     19ae4 <TIFFFetchNormalTag+0xc34>
mov    %rsi,%rcx
mov    %r9,%rsi
mov    $0x1390,%edx
lea    0x3ab04(%rip),%rdi        # 540ed <module.89+0x9d>
callq  8490 <__assert_fail@plt>
movzbl 0x1b(%r11),%eax
test   %al,%al
je     19b1d <TIFFFetchNormalTag+0xc6d>
mov    %rsi,%rcx
mov    %r9,%rsi
mov    $0x139d,%edx
lea    0x3aae0(%rip),%rdi        # 540ed <module.89+0x9d>
callq  8490 <__assert_fail@plt>
movzbl 0x1b(%r11),%eax
test   %al,%al
je     19b6a <TIFFFetchNormalTag+0xcba>
mov    %rsi,%rcx
mov    %r9,%rsi
mov    $0x13b3,%edx
lea    0x3aabc(%rip),%rdi        # 540ed <module.89+0x9d>
callq  8490 <__assert_fail@plt>
movzbl 0x1b(%r11),%ecx
test   %cl,%cl
je     19bb0 <TIFFFetchNormalTag+0xd00>
mov    %rsi,%rcx
mov    %r9,%rsi
mov    $0x13cd,%edx
lea    0x3aa98(%rip),%rdi        # 540ed <module.89+0x9d>
callq  8490 <__assert_fail@plt>
movzbl 0x1b(%r11),%ecx
test   %cl,%cl
je     19bc5 <TIFFFetchNormalTag+0xd15>
mov    %rsi,%rcx
mov    %r9,%rsi
mov    $0x13e3,%edx
lea    0x3aa74(%rip),%rdi        # 540ed <module.89+0x9d>
callq  8490 <__assert_fail@plt>
movzbl 0x1b(%r11),%ecx
test   %cl,%cl
je     19bda <TIFFFetchNormalTag+0xd2a>
mov    %rsi,%rcx
mov    %r9,%rsi
mov    $0x13f9,%edx
lea    0x3aa50(%rip),%rdi        # 540ed <module.89+0x9d>
callq  8490 <__assert_fail@plt>
movzbl 0x1b(%r11),%ecx
cmp    $0x1,%cl
je     19bef <TIFFFetchNormalTag+0xd3f>
mov    %rsi,%rcx
mov    %r9,%rsi
mov    $0x140f,%edx
lea    0x3abcc(%rip),%rdi        # 5428e <module.89+0x23e>
callq  8490 <__assert_fail@plt>
movzbl 0x1b(%r11),%ecx
cmp    $0x1,%cl
je     19c0b <TIFFFetchNormalTag+0xd5b>
mov    %rsi,%rcx
mov    %r9,%rsi
mov    $0x142a,%edx
lea    0x3aba7(%rip),%rdi        # 5428e <module.89+0x23e>
callq  8490 <__assert_fail@plt>
movzbl 0x1b(%r11),%ecx
cmp    $0x1,%cl
je     19c27 <TIFFFetchNormalTag+0xd77>
mov    %rsi,%rcx
mov    %r9,%rsi
mov    $0x1440,%edx
lea    0x3ab82(%rip),%rdi        # 5428e <module.89+0x23e>
callq  8490 <__assert_fail@plt>
movzbl 0x1b(%r11),%ecx
cmp    $0x1,%cl
je     19c43 <TIFFFetchNormalTag+0xd93>
mov    %rsi,%rcx
mov    %r9,%rsi
mov    $0x1456,%edx
lea    0x3ab5d(%rip),%rdi        # 5428e <module.89+0x23e>
callq  8490 <__assert_fail@plt>
movzbl 0x1b(%r11),%ecx
cmp    $0x1,%cl
je     19c5f <TIFFFetchNormalTag+0xdaf>
mov    %rsi,%rcx
mov    %r9,%rsi
mov    $0x146c,%edx
lea    0x3ab38(%rip),%rdi        # 5428e <module.89+0x23e>
callq  8490 <__assert_fail@plt>
movzbl 0x1b(%r11),%ecx
cmp    $0x1,%cl
je     19c7b <TIFFFetchNormalTag+0xdcb>
mov    %rsi,%rcx
mov    %r9,%rsi
mov    $0x1482,%edx
lea    0x3ab13(%rip),%rdi        # 5428e <module.89+0x23e>
callq  8490 <__assert_fail@plt>
movzbl 0x1b(%r11),%ecx
cmp    $0x1,%cl
je     19c97 <TIFFFetchNormalTag+0xde7>
mov    %rsi,%rcx
mov    %r9,%rsi
mov    $0x1498,%edx
lea    0x3aaee(%rip),%rdi        # 5428e <module.89+0x23e>
callq  8490 <__assert_fail@plt>
movzbl 0x1b(%r11),%ecx
cmp    $0x1,%cl
je     19cb3 <TIFFFetchNormalTag+0xe03>
mov    %rsi,%rcx
mov    %r9,%rsi
mov    $0x14ae,%edx
lea    0x3aac9(%rip),%rdi        # 5428e <module.89+0x23e>
callq  8490 <__assert_fail@plt>
movzbl 0x1b(%r11),%eax
cmp    $0x1,%al
je     19ccf <TIFFFetchNormalTag+0xe1f>
mov    %rsi,%rcx
mov    %r9,%rsi
mov    $0x14c4,%edx
lea    0x3aaa5(%rip),%rdi        # 5428e <module.89+0x23e>
callq  8490 <__assert_fail@plt>
movzbl 0x1b(%r11),%eax
cmp    $0x1,%al
je     19d0e <TIFFFetchNormalTag+0xe5e>
mov    %rsi,%rcx
mov    %r9,%rsi
mov    $0x14da,%edx
lea    0x3aa81(%rip),%rdi        # 5428e <module.89+0x23e>
callq  8490 <__assert_fail@plt>
movzbl 0x1b(%r11),%eax
cmp    $0x1,%al
je     19d4d <TIFFFetchNormalTag+0xe9d>
mov    %rsi,%rcx
mov    %r9,%rsi
mov    $0x14eb,%edx
lea    0x3aa5d(%rip),%rdi        # 5428e <module.89+0x23e>
callq  8490 <__assert_fail@plt>
movzbl 0x1b(%r11),%eax
cmp    $0x1,%al
je     19d8c <TIFFFetchNormalTag+0xedc>
mov    %rsi,%rcx
mov    %r9,%rsi
mov    $0x14fc,%edx
lea    0x3aa39(%rip),%rdi        # 5428e <module.89+0x23e>
callq  8490 <__assert_fail@plt>
movzbl 0x1b(%r11),%eax
cmp    $0x1,%al
je     19dc8 <TIFFFetchNormalTag+0xf18>
mov    %rsi,%rcx
mov    %r9,%rsi
mov    $0x150d,%edx
lea    0x3aa15(%rip),%rdi        # 5428e <module.89+0x23e>
callq  8490 <__assert_fail@plt>
movzbl 0x1b(%r11),%eax
cmp    $0x1,%al
je     19e04 <TIFFFetchNormalTag+0xf54>
mov    %rsi,%rcx
mov    %r9,%rsi
mov    $0x151e,%edx
lea    0x3a9f1(%rip),%rdi        # 5428e <module.89+0x23e>
callq  8490 <__assert_fail@plt>
movzbl 0x1b(%r11),%eax
cmp    $0x1,%al
je     19e40 <TIFFFetchNormalTag+0xf90>
mov    %rsi,%rcx
mov    %r9,%rsi
mov    $0x152f,%edx
lea    0x3a9cd(%rip),%rdi        # 5428e <module.89+0x23e>
callq  8490 <__assert_fail@plt>
movzbl 0x1b(%r11),%eax
cmp    $0x1,%al
je     19e7c <TIFFFetchNormalTag+0xfcc>
mov    %rsi,%rcx
mov    %r9,%rsi
mov    $0x1540,%edx
lea    0x3a9a9(%rip),%rdi        # 5428e <module.89+0x23e>
callq  8490 <__assert_fail@plt>
movzbl 0x1b(%r11),%eax
cmp    $0x1,%al
je     19eb8 <TIFFFetchNormalTag+0x1008>
mov    %rsi,%rcx
mov    %r9,%rsi
mov    $0x1551,%edx
lea    0x3a985(%rip),%rdi        # 5428e <module.89+0x23e>
callq  8490 <__assert_fail@plt>
movzbl 0x1b(%r11),%eax
cmp    $0x1,%al
je     19ef4 <TIFFFetchNormalTag+0x1044>
mov    %rsi,%rcx
mov    %r9,%rsi
mov    $0x1562,%edx
lea    0x3a961(%rip),%rdi        # 5428e <module.89+0x23e>
callq  8490 <__assert_fail@plt>
movzbl 0x1b(%r11),%eax
cmp    $0x1,%al
je     19f30 <TIFFFetchNormalTag+0x1080>
mov    %rsi,%rcx
mov    %r9,%rsi
mov    $0x1573,%edx
lea    0x3a93d(%rip),%rdi        # 5428e <module.89+0x23e>
callq  8490 <__assert_fail@plt>
movzbl 0x1b(%r11),%eax
cmp    $0x1,%al
je     19f6c <TIFFFetchNormalTag+0x10bc>
mov    %rsi,%rcx
mov    %r9,%rsi
mov    $0x1584,%edx
lea    0x3a919(%rip),%rdi        # 5428e <module.89+0x23e>
callq  8490 <__assert_fail@plt>
mov    -0x130(%rbp),%rax
xor    %ecx,%ecx
jmpq   19fb6 <TIFFFetchNormalTag+0x1106>
lea    -0x127(%rbp),%rdx
mov    %r14,%rdi
mov    %r15,%rsi
mov    %r11,-0x38(%rbp)
callq  134d0 <TIFFReadDirEntryByte>
test   %eax,%eax
je     19fe1 <TIFFFetchNormalTag+0x1131>
mov    %rax,%rsi
mov    -0x38(%rbp),%r15
xor    %r10d,%r10d
lea    0x3a699(%rip),%rdx        # 54050 <module.89>
mov    $0x1,%eax
jmpq   18fb3 <TIFFFetchNormalTag+0x103>
lea    -0x126(%rbp),%rdx
mov    %r14,%rdi
mov    %r15,%rsi
mov    %r11,-0x38(%rbp)
callq  13690 <TIFFReadDirEntryShort>
test   %eax,%eax
je     1a019 <TIFFFetchNormalTag+0x1169>
mov    %rax,%rsi
mov    -0x38(%rbp),%r15
xor    %r10d,%r10d
lea    0x3a660(%rip),%rdx        # 54050 <module.89>
mov    $0x1,%eax
jmpq   18fb3 <TIFFFetchNormalTag+0x103>
lea    -0x124(%rbp),%rdx
mov    %r14,%rdi
mov    %r15,%rsi
mov    %r11,-0x38(%rbp)
callq  13840 <TIFFReadDirEntryLong>
test   %eax,%eax
je     1a051 <TIFFFetchNormalTag+0x11a1>
mov    %rax,%rsi
mov    -0x38(%rbp),%r15
xor    %r10d,%r10d
lea    0x3a627(%rip),%rdx        # 54050 <module.89>
mov    $0x1,%eax
jmpq   18fb3 <TIFFFetchNormalTag+0x103>
lea    -0x120(%rbp),%rdx
mov    %r14,%rdi
mov    %r15,%rsi
mov    %r11,-0x38(%rbp)
callq  139e0 <TIFFReadDirEntryLong8>
test   %eax,%eax
je     1a088 <TIFFFetchNormalTag+0x11d8>
mov    %rax,%rsi
mov    -0x38(%rbp),%r15
xor    %r10d,%r10d
lea    0x3a5ee(%rip),%rdx        # 54050 <module.89>
mov    $0x1,%eax
jmpq   18fb3 <TIFFFetchNormalTag+0x103>
lea    -0x114(%rbp),%rdx
mov    %r14,%rdi
mov    %r15,%rsi
mov    %r14,-0x38(%rbp)
mov    %r15,%r14
mov    %r11,%r15
callq  13b60 <TIFFReadDirEntryFloat>
test   %eax,%eax
je     1a0c0 <TIFFFetchNormalTag+0x1210>
mov    %rax,%rsi
xor    %r10d,%r10d
lea    0x3a5b3(%rip),%rdx        # 54050 <module.89>
mov    $0x1,%eax
mov    -0x38(%rbp),%r14
jmpq   18fb3 <TIFFFetchNormalTag+0x103>
lea    -0x110(%rbp),%rdx
mov    %r14,%rdi
mov    %r15,%rsi
mov    %r11,-0x38(%rbp)
callq  13dd0 <TIFFReadDirEntryDouble>
test   %eax,%eax
je     1a100 <TIFFFetchNormalTag+0x1250>
mov    %rax,%rsi
mov    -0x38(%rbp),%r15
xor    %r10d,%r10d
lea    0x3a576(%rip),%rdx        # 54050 <module.89>
mov    $0x1,%eax
jmpq   18fb3 <TIFFFetchNormalTag+0x103>
lea    -0x108(%rbp),%rdx
mov    %r14,%rdi
mov    %r15,%rsi
mov    %r11,-0x38(%rbp)
callq  13fc0 <TIFFReadDirEntryIfd8>
test   %eax,%eax
je     1a13c <TIFFFetchNormalTag+0x128c>
mov    %rax,%rsi
mov    -0x38(%rbp),%r15
xor    %r10d,%r10d
lea    0x3a53d(%rip),%rdx        # 54050 <module.89>
mov    $0x1,%eax
jmpq   18fb3 <TIFFFetchNormalTag+0x103>
mov    0x8(%r15),%r8
cmp    $0x2,%r8
jne    1a174 <TIFFFetchNormalTag+0x12c4>
lea    -0x100(%rbp),%rdx
mov    %r14,%rdi
mov    %r15,%rsi
mov    %r14,-0x38(%rbp)
mov    %r15,%r14
mov    %r11,%r15
callq  14bc0 <TIFFReadDirEntryShortArray>
test   %eax,%eax
je     1a1a6 <TIFFFetchNormalTag+0x12f6>
mov    %rax,%rsi
xor    %r10d,%r10d
lea    0x3a4f4(%rip),%rdx        # 54050 <module.89>
mov    $0x1,%eax
mov    -0x38(%rbp),%r14
jmpq   18fb3 <TIFFFetchNormalTag+0x103>
mov    0x8(%r15),%r9
cmp    %r9,%r8
jne    1a1f6 <TIFFFetchNormalTag+0x1346>
lea    -0xf8(%rbp),%rdx
mov    %r14,%rdi
mov    %r15,%rsi
mov    %r11,-0x38(%rbp)
callq  14050 <TIFFReadDirEntryByteArray>
test   %eax,%eax
je     1a228 <TIFFFetchNormalTag+0x1378>
mov    %rax,%rsi
mov    -0x38(%rbp),%r15
xor    %r10d,%r10d
lea    0x3a4aa(%rip),%rdx        # 54050 <module.89>
mov    $0x1,%eax
jmpq   18fb3 <TIFFFetchNormalTag+0x103>
cmp    0x8(%r15),%rdi
je     1a277 <TIFFFetchNormalTag+0x13c7>
mov    %r11,%r15
mov    %r10,%rsi
jmpq   18fb3 <TIFFFetchNormalTag+0x103>
cmp    0x8(%r15),%rdi
je     1a2b0 <TIFFFetchNormalTag+0x1400>
mov    %r11,%r15
mov    %r10,%rsi
jmpq   18fb3 <TIFFFetchNormalTag+0x103>
cmp    0x8(%r15),%rdi
je     1a2e9 <TIFFFetchNormalTag+0x1439>
mov    %r11,%r15
mov    %r10,%rsi
jmpq   18fb3 <TIFFFetchNormalTag+0x103>
mov    0x8(%r15),%rcx
cmp    $0xffff,%rcx
jbe    1a322 <TIFFFetchNormalTag+0x1472>
mov    %r11,%r15
mov    %rax,%rsi
jmpq   18fb3 <TIFFFetchNormalTag+0x103>
mov    0x8(%r15),%rcx
cmp    $0xffff,%rcx
jbe    1a361 <TIFFFetchNormalTag+0x14b1>
mov    %r11,%r15
mov    %rax,%rsi
jmpq   18fb3 <TIFFFetchNormalTag+0x103>
mov    0x8(%r15),%rcx
cmp    $0xffff,%rcx
jbe    1a3a0 <TIFFFetchNormalTag+0x14f0>
mov    %r11,%r15
mov    %rax,%rsi
jmpq   18fb3 <TIFFFetchNormalTag+0x103>
mov    0x8(%r15),%rcx
cmp    $0xffff,%rcx
jbe    1a3df <TIFFFetchNormalTag+0x152f>
mov    %r11,%r15
mov    %rax,%rsi
jmpq   18fb3 <TIFFFetchNormalTag+0x103>
mov    0x8(%r15),%rcx
cmp    $0xffff,%rcx
jbe    1a41e <TIFFFetchNormalTag+0x156e>
mov    %r11,%r15
mov    %rax,%rsi
jmpq   18fb3 <TIFFFetchNormalTag+0x103>
mov    0x8(%r15),%rcx
cmp    $0xffff,%rcx
jbe    1a45d <TIFFFetchNormalTag+0x15ad>
mov    %r11,%r15
mov    %rax,%rsi
jmpq   18fb3 <TIFFFetchNormalTag+0x103>
mov    0x8(%r15),%rcx
cmp    $0xffff,%rcx
jbe    1a49c <TIFFFetchNormalTag+0x15ec>
mov    %r11,%r15
mov    %rax,%rsi
jmpq   18fb3 <TIFFFetchNormalTag+0x103>
mov    0x8(%r15),%rcx
cmp    $0xffff,%rcx
jbe    1a4db <TIFFFetchNormalTag+0x162b>
mov    %r11,%r15
mov    %rax,%rsi
jmpq   18fb3 <TIFFFetchNormalTag+0x103>
lea    -0x98(%rbp),%rdx
mov    %r14,%rdi
mov    %r15,%rsi
mov    %r14,-0x38(%rbp)
mov    %r15,%r14
mov    %r11,%r15
callq  14050 <TIFFReadDirEntryByteArray>
test   %eax,%eax
je     1a51a <TIFFFetchNormalTag+0x166a>
mov    %rax,%rsi
xor    %r10d,%r10d
lea    0x3a350(%rip),%rdx        # 54050 <module.89>
mov    $0x1,%eax
mov    -0x38(%rbp),%r14
jmpq   18fb3 <TIFFFetchNormalTag+0x103>
lea    -0x90(%rbp),%rdx
mov    %r14,%rdi
mov    %r15,%rsi
mov    %r14,-0x38(%rbp)
mov    %r15,%r14
mov    %r11,%r15
callq  14050 <TIFFReadDirEntryByteArray>
test   %eax,%eax
je     1a57f <TIFFFetchNormalTag+0x16cf>
mov    %rax,%rsi
xor    %r10d,%r10d
lea    0x3a311(%rip),%rdx        # 54050 <module.89>
mov    $0x1,%eax
mov    -0x38(%rbp),%r14
jmpq   18fb3 <TIFFFetchNormalTag+0x103>
lea    -0x88(%rbp),%rdx
mov    %r14,%rdi
mov    %r15,%rsi
mov    %r14,-0x38(%rbp)
mov    %r15,%r14
mov    %r11,%r15
callq  14600 <TIFFReadDirEntrySbyteArray>
test   %eax,%eax
je     1a5d6 <TIFFFetchNormalTag+0x1726>
mov    %rax,%rsi
xor    %r10d,%r10d
lea    0x3a2d2(%rip),%rdx        # 54050 <module.89>
mov    $0x1,%eax
mov    -0x38(%rbp),%r14
jmpq   18fb3 <TIFFFetchNormalTag+0x103>
lea    -0x80(%rbp),%rdx
mov    %r14,%rdi
mov    %r15,%rsi
mov    %r14,-0x38(%rbp)
mov    %r15,%r14
mov    %r11,%r15
callq  14bc0 <TIFFReadDirEntryShortArray>
test   %eax,%eax
je     1a62d <TIFFFetchNormalTag+0x177d>
mov    %rax,%rsi
xor    %r10d,%r10d
lea    0x3a296(%rip),%rdx        # 54050 <module.89>
mov    $0x1,%eax
mov    -0x38(%rbp),%r14
jmpq   18fb3 <TIFFFetchNormalTag+0x103>
lea    -0x78(%rbp),%rdx
mov    %r14,%rdi
mov    %r15,%rsi
mov    %r14,-0x38(%rbp)
mov    %r15,%r14
mov    %r11,%r15
callq  150e0 <TIFFReadDirEntrySshortArray>
test   %eax,%eax
je     1a67e <TIFFFetchNormalTag+0x17ce>
mov    %rax,%rsi
xor    %r10d,%r10d
lea    0x3a25a(%rip),%rdx        # 54050 <module.89>
mov    $0x1,%eax
mov    -0x38(%rbp),%r14
jmpq   18fb3 <TIFFFetchNormalTag+0x103>
lea    -0x70(%rbp),%rdx
mov    %r14,%rdi
mov    %r15,%rsi
mov    %r14,-0x38(%rbp)
mov    %r15,%r14
mov    %r11,%r15
callq  155c0 <TIFFReadDirEntryLongArray>
test   %eax,%eax
je     1a6cf <TIFFFetchNormalTag+0x181f>
mov    %rax,%rsi
xor    %r10d,%r10d
lea    0x3a21e(%rip),%rdx        # 54050 <module.89>
mov    $0x1,%eax
mov    -0x38(%rbp),%r14
jmpq   18fb3 <TIFFFetchNormalTag+0x103>
lea    -0x68(%rbp),%rdx
mov    %r14,%rdi
mov    %r15,%rsi
mov    %r14,-0x38(%rbp)
mov    %r15,%r14
mov    %r11,%r15
callq  15ab0 <TIFFReadDirEntrySlongArray>
test   %eax,%eax
je     1a720 <TIFFFetchNormalTag+0x1870>
mov    %rax,%rsi
xor    %r10d,%r10d
lea    0x3a1e2(%rip),%rdx        # 54050 <module.89>
mov    $0x1,%eax
mov    -0x38(%rbp),%r14
jmpq   18fb3 <TIFFFetchNormalTag+0x103>
lea    -0x60(%rbp),%rdx
mov    %r14,%rdi
mov    %r15,%rsi
mov    %r14,-0x38(%rbp)
mov    %r15,%r14
mov    %r11,%r15
callq  15f20 <TIFFReadDirEntryLong8Array>
test   %eax,%eax
je     1a771 <TIFFFetchNormalTag+0x18c1>
mov    %rax,%rsi
xor    %r10d,%r10d
lea    0x3a1a6(%rip),%rdx        # 54050 <module.89>
mov    $0x1,%eax
mov    -0x38(%rbp),%r14
jmpq   18fb3 <TIFFFetchNormalTag+0x103>
lea    -0x58(%rbp),%rdx
mov    %r14,%rdi
mov    %r15,%rsi
mov    %r14,-0x38(%rbp)
mov    %r15,%r14
mov    %r11,%r15
callq  15f40 <TIFFReadDirEntrySlong8Array>
test   %eax,%eax
je     1a7c2 <TIFFFetchNormalTag+0x1912>
mov    %rax,%rsi
xor    %r10d,%r10d
lea    0x3a16a(%rip),%rdx        # 54050 <module.89>
mov    $0x1,%eax
mov    -0x38(%rbp),%r14
jmpq   18fb3 <TIFFFetchNormalTag+0x103>
lea    -0x50(%rbp),%rdx
mov    %r14,%rdi
mov    %r15,%rsi
mov    %r14,-0x38(%rbp)
mov    %r15,%r14
mov    %r11,%r15
callq  16300 <TIFFReadDirEntryFloatArray>
test   %eax,%eax
je     1a813 <TIFFFetchNormalTag+0x1963>
mov    %rax,%rsi
xor    %r10d,%r10d
lea    0x3a12e(%rip),%rdx        # 54050 <module.89>
mov    $0x1,%eax
mov    -0x38(%rbp),%r14
jmpq   18fb3 <TIFFFetchNormalTag+0x103>
lea    -0x48(%rbp),%rdx
mov    %r14,%rdi
mov    %r15,%rsi
mov    %r14,-0x38(%rbp)
mov    %r15,%r14
mov    %r11,%r15
callq  16a40 <TIFFReadDirEntryDoubleArray>
test   %eax,%eax
je     1a864 <TIFFFetchNormalTag+0x19b4>
mov    %rax,%rsi
xor    %r10d,%r10d
lea    0x3a0f2(%rip),%rdx        # 54050 <module.89>
mov    $0x1,%eax
mov    -0x38(%rbp),%r14
jmpq   18fb3 <TIFFFetchNormalTag+0x103>
lea    -0x40(%rbp),%rdx
mov    %r14,%rdi
mov    %r15,%rsi
mov    %r14,-0x38(%rbp)
mov    %r15,%r14
mov    %r11,%r15
callq  17140 <TIFFReadDirEntryIfd8Array>
test   %eax,%eax
je     1a8b5 <TIFFFetchNormalTag+0x1a05>
mov    %rax,%rsi
xor    %r10d,%r10d
lea    0x3a0b6(%rip),%rdx        # 54050 <module.89>
mov    $0x1,%eax
mov    -0x38(%rbp),%r14
jmpq   18fb3 <TIFFFetchNormalTag+0x103>
movzbl (%rax),%ecx
test   %cl,%cl
je     19fc1 <TIFFFetchNormalTag+0x1111>
add    $0x1,%rax
mov    %rsi,%rcx
lea    0x1(%rcx),%esi
mov    0x8(%r14),%edx
cmp    %ecx,%edx
ja     19fa8 <TIFFFetchNormalTag+0x10f8>
mov    0x8(%r14),%eax
cmp    %eax,%esi
jb     1a906 <TIFFFetchNormalTag+0x1a56>
cmp    %eax,%esi
ja     1a98a <TIFFFetchNormalTag+0x1ada>
mov    %r14,%r8
mov    -0x38(%rbp),%r14
jmpq   1a93b <TIFFFetchNormalTag+0x1a8b>
xor    %eax,%eax
movzwl (%r15),%esi
movzbl -0x127(%rbp),%edx
mov    %r14,%rdi
callq  8290 <TIFFSetField@plt>
test   %eax,%eax
je     1aa15 <TIFFFetchNormalTag+0x1b65>
mov    -0x38(%rbp),%r15
xor    %r10d,%r10d
lea    0x3a044(%rip),%rdx        # 54050 <module.89>
mov    $0x1,%eax
mov    %r10,%rsi
jmpq   18fb3 <TIFFFetchNormalTag+0x103>
xor    %eax,%eax
movzwl (%r15),%esi
movzwl -0x126(%rbp),%edx
mov    %r14,%rdi
callq  8290 <TIFFSetField@plt>
test   %eax,%eax
je     1aa21 <TIFFFetchNormalTag+0x1b71>
mov    -0x38(%rbp),%r15
xor    %r10d,%r10d
lea    0x3a00c(%rip),%rdx        # 54050 <module.89>
mov    $0x1,%eax
mov    %r10,%rsi
jmpq   18fb3 <TIFFFetchNormalTag+0x103>
xor    %eax,%eax
movzwl (%r15),%esi
mov    -0x124(%rbp),%edx
mov    %r14,%rdi
callq  8290 <TIFFSetField@plt>
test   %eax,%eax
je     1aa2d <TIFFFetchNormalTag+0x1b7d>
mov    -0x38(%rbp),%r15
xor    %r10d,%r10d
lea    0x39fd5(%rip),%rdx        # 54050 <module.89>
mov    $0x1,%eax
mov    %r10,%rsi
jmpq   18fb3 <TIFFFetchNormalTag+0x103>
xor    %eax,%eax
movzwl (%r15),%esi
mov    -0x120(%rbp),%rdx
mov    %r14,%rdi
callq  8290 <TIFFSetField@plt>
test   %eax,%eax
je     1aa39 <TIFFFetchNormalTag+0x1b89>
mov    -0x38(%rbp),%r15
xor    %r10d,%r10d
lea    0x39f9d(%rip),%rdx        # 54050 <module.89>
mov    $0x1,%eax
mov    %r10,%rsi
jmpq   18fb3 <TIFFFetchNormalTag+0x103>
mov    $0x1,%eax
movzwl (%r14),%esi
movss  -0x114(%rbp),%xmm0
cvtss2sd %xmm0,%xmm0
mov    -0x38(%rbp),%r14
mov    %r14,%rdi
callq  8290 <TIFFSetField@plt>
test   %eax,%eax
je     1aa45 <TIFFFetchNormalTag+0x1b95>
xor    %r10d,%r10d
lea    0x39f5d(%rip),%rdx        # 54050 <module.89>
mov    $0x1,%eax
mov    %r10,%rsi
jmpq   18fb3 <TIFFFetchNormalTag+0x103>
mov    $0x1,%eax
movzwl (%r15),%esi
movsd  -0x110(%rbp),%xmm0
mov    %r14,%rdi
callq  8290 <TIFFSetField@plt>
test   %eax,%eax
je     1aa51 <TIFFFetchNormalTag+0x1ba1>
mov    -0x38(%rbp),%r15
xor    %r10d,%r10d
lea    0x39f21(%rip),%rdx        # 54050 <module.89>
mov    $0x1,%eax
mov    %r10,%rsi
jmpq   18fb3 <TIFFFetchNormalTag+0x103>
xor    %eax,%eax
movzwl (%r15),%esi
mov    -0x108(%rbp),%rdx
mov    %r14,%rdi
callq  8290 <TIFFSetField@plt>
test   %eax,%eax
je     1aa5d <TIFFFetchNormalTag+0x1bad>
mov    -0x38(%rbp),%r15
xor    %r10d,%r10d
lea    0x39ee9(%rip),%rdx        # 54050 <module.89>
mov    $0x1,%eax
mov    %r10,%rsi
jmpq   18fb3 <TIFFFetchNormalTag+0x103>
xor    %eax,%eax
mov    0x3b8(%r14),%rdi
lea    0x3a067(%rip),%rsi        # 541eb <module.89+0x19b>
mov    0x20(%r11),%rcx
mov    %r10,%r14
mov    %rsi,%r10
mov    %rdx,%rsi
mov    %r10,%rdx
callq  85a0 <TIFFWarningExt@plt>
mov    %r14,%rax
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
leaveq 
retq   
xor    %eax,%eax
movzwl (%r14),%esi
mov    -0x100(%rbp),%rcx
movzwl (%rcx),%edx
movzwl 0x2(%rcx),%ecx
mov    -0x38(%rbp),%rdi
callq  8290 <TIFFSetField@plt>
mov    %rax,%r14
mov    -0x100(%rbp),%rdi
callq  8bb0 <_TIFFfree@plt>
test   %r14d,%r14d
je     1aa69 <TIFFFetchNormalTag+0x1bb9>
xor    %r10d,%r10d
lea    0x39e6b(%rip),%rdx        # 54050 <module.89>
mov    $0x1,%eax
mov    -0x38(%rbp),%r14
mov    %r10,%rsi
jmpq   18fb3 <TIFFFetchNormalTag+0x103>
xor    %eax,%eax
mov    0x3b8(%r14),%rdi
lea    0x3a030(%rip),%rsi        # 54236 <module.89+0x1e6>
mov    0x20(%r11),%rcx
mov    %r10,%r15
mov    %rsi,%r10
mov    %rdx,%rsi
mov    %r10,%rdx
callq  85a0 <TIFFWarningExt@plt>
mov    %r15,%rax
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
leaveq 
retq   
xor    %eax,%eax
movzwl (%r15),%esi
mov    -0xf8(%rbp),%rdx
mov    %r14,%rdi
callq  8290 <TIFFSetField@plt>
mov    -0xf8(%rbp),%rdi
test   %rdi,%rdi
je     1a254 <TIFFFetchNormalTag+0x13a4>
mov    %rax,%r15
callq  8bb0 <_TIFFfree@plt>
mov    %r15,%rax
test   %eax,%eax
je     1aa75 <TIFFFetchNormalTag+0x1bc5>
mov    -0x38(%rbp),%r15
xor    %r10d,%r10d
lea    0x39de6(%rip),%rdx        # 54050 <module.89>
mov    $0x1,%eax
mov    %r10,%rsi
jmpq   18fb3 <TIFFFetchNormalTag+0x103>
lea    -0xf0(%rbp),%rdx
mov    %r14,%rdi
mov    %r15,%rsi
mov    %r11,-0x38(%rbp)
callq  14bc0 <TIFFReadDirEntryShortArray>
test   %eax,%eax
je     1aa81 <TIFFFetchNormalTag+0x1bd1>
mov    %rax,%rsi
mov    -0x38(%rbp),%r15
xor    %r10d,%r10d
lea    0x39daa(%rip),%rdx        # 54050 <module.89>
mov    $0x1,%eax
jmpq   18fb3 <TIFFFetchNormalTag+0x103>
lea    -0xe8(%rbp),%rdx
mov    %r14,%rdi
mov    %r15,%rsi
mov    %r11,-0x38(%rbp)
callq  155c0 <TIFFReadDirEntryLongArray>
test   %eax,%eax
je     1aad0 <TIFFFetchNormalTag+0x1c20>
mov    %rax,%rsi
mov    -0x38(%rbp),%r15
xor    %r10d,%r10d
lea    0x39d71(%rip),%rdx        # 54050 <module.89>
mov    $0x1,%eax
jmpq   18fb3 <TIFFFetchNormalTag+0x103>
lea    -0xe0(%rbp),%rdx
mov    %r14,%rdi
mov    %r15,%rsi
mov    %r11,-0x38(%rbp)
callq  16300 <TIFFReadDirEntryFloatArray>
test   %eax,%eax
je     1ab1f <TIFFFetchNormalTag+0x1c6f>
mov    %rax,%rsi
mov    -0x38(%rbp),%r15
xor    %r10d,%r10d
lea    0x39d38(%rip),%rdx        # 54050 <module.89>
mov    $0x1,%eax
jmpq   18fb3 <TIFFFetchNormalTag+0x103>
lea    -0xd8(%rbp),%rdx
mov    %r14,%rdi
mov    %r15,%rsi
mov    %r14,-0x38(%rbp)
mov    %r15,%r14
mov    %r11,%r15
callq  14050 <TIFFReadDirEntryByteArray>
test   %eax,%eax
je     1ab6e <TIFFFetchNormalTag+0x1cbe>
mov    %rax,%rsi
xor    %r10d,%r10d
lea    0x39cfd(%rip),%rdx        # 54050 <module.89>
mov    $0x1,%eax
mov    -0x38(%rbp),%r14
jmpq   18fb3 <TIFFFetchNormalTag+0x103>
lea    -0xd0(%rbp),%rdx
mov    %r14,%rdi
mov    %r15,%rsi
mov    %r14,-0x38(%rbp)
mov    %r15,%r14
mov    %r11,%r15
callq  14050 <TIFFReadDirEntryByteArray>
test   %eax,%eax
je     1abd4 <TIFFFetchNormalTag+0x1d24>
mov    %rax,%rsi
xor    %r10d,%r10d
lea    0x39cbe(%rip),%rdx        # 54050 <module.89>
mov    $0x1,%eax
mov    -0x38(%rbp),%r14
jmpq   18fb3 <TIFFFetchNormalTag+0x103>
lea    -0xc8(%rbp),%rdx
mov    %r14,%rdi
mov    %r15,%rsi
mov    %r14,-0x38(%rbp)
mov    %r15,%r14
mov    %r11,%r15
callq  14bc0 <TIFFReadDirEntryShortArray>
test   %eax,%eax
je     1ac2c <TIFFFetchNormalTag+0x1d7c>
mov    %rax,%rsi
xor    %r10d,%r10d
lea    0x39c7f(%rip),%rdx        # 54050 <module.89>
mov    $0x1,%eax
mov    -0x38(%rbp),%r14
jmpq   18fb3 <TIFFFetchNormalTag+0x103>
lea    -0xc0(%rbp),%rdx
mov    %r14,%rdi
mov    %r15,%rsi
mov    %r14,-0x38(%rbp)
mov    %r15,%r14
mov    %r11,%r15
callq  155c0 <TIFFReadDirEntryLongArray>
test   %eax,%eax
je     1ac84 <TIFFFetchNormalTag+0x1dd4>
mov    %rax,%rsi
xor    %r10d,%r10d
lea    0x39c40(%rip),%rdx        # 54050 <module.89>
mov    $0x1,%eax
mov    -0x38(%rbp),%r14
jmpq   18fb3 <TIFFFetchNormalTag+0x103>
lea    -0xb8(%rbp),%rdx
mov    %r14,%rdi
mov    %r15,%rsi
mov    %r14,-0x38(%rbp)
mov    %r15,%r14
mov    %r11,%r15
callq  15f20 <TIFFReadDirEntryLong8Array>
test   %eax,%eax
je     1acdc <TIFFFetchNormalTag+0x1e2c>
mov    %rax,%rsi
xor    %r10d,%r10d
lea    0x39c01(%rip),%rdx        # 54050 <module.89>
mov    $0x1,%eax
mov    -0x38(%rbp),%r14
jmpq   18fb3 <TIFFFetchNormalTag+0x103>
lea    -0xb0(%rbp),%rdx
mov    %r14,%rdi
mov    %r15,%rsi
mov    %r14,-0x38(%rbp)
mov    %r15,%r14
mov    %r11,%r15
callq  16300 <TIFFReadDirEntryFloatArray>
test   %eax,%eax
je     1ad34 <TIFFFetchNormalTag+0x1e84>
mov    %rax,%rsi
xor    %r10d,%r10d
lea    0x39bc2(%rip),%rdx        # 54050 <module.89>
mov    $0x1,%eax
mov    -0x38(%rbp),%r14
jmpq   18fb3 <TIFFFetchNormalTag+0x103>
lea    -0xa8(%rbp),%rdx
mov    %r14,%rdi
mov    %r15,%rsi
mov    %r14,-0x38(%rbp)
mov    %r15,%r14
mov    %r11,%r15
callq  16a40 <TIFFReadDirEntryDoubleArray>
test   %eax,%eax
je     1ad8c <TIFFFetchNormalTag+0x1edc>
mov    %rax,%rsi
xor    %r10d,%r10d
lea    0x39b83(%rip),%rdx        # 54050 <module.89>
mov    $0x1,%eax
mov    -0x38(%rbp),%r14
jmpq   18fb3 <TIFFFetchNormalTag+0x103>
lea    -0xa0(%rbp),%rdx
mov    %r14,%rdi
mov    %r15,%rsi
mov    %r14,-0x38(%rbp)
mov    %r15,%r14
mov    %r11,%r15
callq  17140 <TIFFReadDirEntryIfd8Array>
test   %eax,%eax
je     1ade4 <TIFFFetchNormalTag+0x1f34>
mov    %rax,%rsi
xor    %r10d,%r10d
lea    0x39b44(%rip),%rdx        # 54050 <module.89>
mov    $0x1,%eax
mov    -0x38(%rbp),%r14
jmpq   18fb3 <TIFFFetchNormalTag+0x103>
mov    0x8(%r14),%rax
test   %rax,%rax
jne    1ae3c <TIFFFetchNormalTag+0x1f8c>
mov    %r14,%rcx
mov    -0x38(%rbp),%r14
xor    %eax,%eax
movzwl (%rcx),%esi
mov    0x8(%rcx),%edx
mov    -0x98(%rbp),%rcx
mov    %r14,%rdi
callq  8290 <TIFFSetField@plt>
mov    -0x98(%rbp),%rdi
test   %rdi,%rdi
je     1a560 <TIFFFetchNormalTag+0x16b0>
mov    %rax,%r14
callq  8bb0 <_TIFFfree@plt>
mov    %r14,%rax
mov    -0x38(%rbp),%r14
test   %eax,%eax
je     1ae5c <TIFFFetchNormalTag+0x1fac>
xor    %r10d,%r10d
lea    0x39ade(%rip),%rdx        # 54050 <module.89>
mov    $0x1,%eax
mov    %r10,%rsi
jmpq   18fb3 <TIFFFetchNormalTag+0x103>
xor    %eax,%eax
movzwl (%r14),%esi
mov    0x8(%r14),%edx
mov    -0x90(%rbp),%rcx
mov    -0x38(%rbp),%r14
mov    %r14,%rdi
callq  8290 <TIFFSetField@plt>
mov    -0x90(%rbp),%rdi
test   %rdi,%rdi
je     1a5b7 <TIFFFetchNormalTag+0x1707>
mov    %rax,%r14
callq  8bb0 <_TIFFfree@plt>
mov    %r14,%rax
mov    -0x38(%rbp),%r14
test   %eax,%eax
je     1ae68 <TIFFFetchNormalTag+0x1fb8>
xor    %r10d,%r10d
lea    0x39a87(%rip),%rdx        # 54050 <module.89>
mov    $0x1,%eax
mov    %r10,%rsi
jmpq   18fb3 <TIFFFetchNormalTag+0x103>
xor    %eax,%eax
movzwl (%r14),%esi
mov    0x8(%r14),%edx
mov    -0x88(%rbp),%rcx
mov    -0x38(%rbp),%r14
mov    %r14,%rdi
callq  8290 <TIFFSetField@plt>
mov    -0x88(%rbp),%rdi
test   %rdi,%rdi
je     1a60e <TIFFFetchNormalTag+0x175e>
mov    %rax,%r14
callq  8bb0 <_TIFFfree@plt>
mov    %r14,%rax
mov    -0x38(%rbp),%r14
test   %eax,%eax
je     1ae74 <TIFFFetchNormalTag+0x1fc4>
xor    %r10d,%r10d
lea    0x39a30(%rip),%rdx        # 54050 <module.89>
mov    $0x1,%eax
mov    %r10,%rsi
jmpq   18fb3 <TIFFFetchNormalTag+0x103>
xor    %eax,%eax
movzwl (%r14),%esi
mov    0x8(%r14),%edx
mov    -0x80(%rbp),%rcx
mov    -0x38(%rbp),%r14
mov    %r14,%rdi
callq  8290 <TIFFSetField@plt>
mov    -0x80(%rbp),%rdi
test   %rdi,%rdi
je     1a65f <TIFFFetchNormalTag+0x17af>
mov    %rax,%r14
callq  8bb0 <_TIFFfree@plt>
mov    %r14,%rax
mov    -0x38(%rbp),%r14
test   %eax,%eax
je     1ae80 <TIFFFetchNormalTag+0x1fd0>
xor    %r10d,%r10d
lea    0x399df(%rip),%rdx        # 54050 <module.89>
mov    $0x1,%eax
mov    %r10,%rsi
jmpq   18fb3 <TIFFFetchNormalTag+0x103>
xor    %eax,%eax
movzwl (%r14),%esi
mov    0x8(%r14),%edx
mov    -0x78(%rbp),%rcx
mov    -0x38(%rbp),%r14
mov    %r14,%rdi
callq  8290 <TIFFSetField@plt>
mov    -0x78(%rbp),%rdi
test   %rdi,%rdi
je     1a6b0 <TIFFFetchNormalTag+0x1800>
mov    %rax,%r14
callq  8bb0 <_TIFFfree@plt>
mov    %r14,%rax
mov    -0x38(%rbp),%r14
test   %eax,%eax
je     1ae8c <TIFFFetchNormalTag+0x1fdc>
xor    %r10d,%r10d
lea    0x3998e(%rip),%rdx        # 54050 <module.89>
mov    $0x1,%eax
mov    %r10,%rsi
jmpq   18fb3 <TIFFFetchNormalTag+0x103>
xor    %eax,%eax
movzwl (%r14),%esi
mov    0x8(%r14),%edx
mov    -0x70(%rbp),%rcx
mov    -0x38(%rbp),%r14
mov    %r14,%rdi
callq  8290 <TIFFSetField@plt>
mov    -0x70(%rbp),%rdi
test   %rdi,%rdi
je     1a701 <TIFFFetchNormalTag+0x1851>
mov    %rax,%r14
callq  8bb0 <_TIFFfree@plt>
mov    %r14,%rax
mov    -0x38(%rbp),%r14
test   %eax,%eax
je     1ae98 <TIFFFetchNormalTag+0x1fe8>
xor    %r10d,%r10d
lea    0x3993d(%rip),%rdx        # 54050 <module.89>
mov    $0x1,%eax
mov    %r10,%rsi
jmpq   18fb3 <TIFFFetchNormalTag+0x103>
xor    %eax,%eax
movzwl (%r14),%esi
mov    0x8(%r14),%edx
mov    -0x68(%rbp),%rcx
mov    -0x38(%rbp),%r14
mov    %r14,%rdi
callq  8290 <TIFFSetField@plt>
mov    -0x68(%rbp),%rdi
test   %rdi,%rdi
je     1a752 <TIFFFetchNormalTag+0x18a2>
mov    %rax,%r14
callq  8bb0 <_TIFFfree@plt>
mov    %r14,%rax
mov    -0x38(%rbp),%r14
test   %eax,%eax
je     1aea4 <TIFFFetchNormalTag+0x1ff4>
xor    %r10d,%r10d
lea    0x398ec(%rip),%rdx        # 54050 <module.89>
mov    $0x1,%eax
mov    %r10,%rsi
jmpq   18fb3 <TIFFFetchNormalTag+0x103>
xor    %eax,%eax
movzwl (%r14),%esi
mov    0x8(%r14),%edx
mov    -0x60(%rbp),%rcx
mov    -0x38(%rbp),%r14
mov    %r14,%rdi
callq  8290 <TIFFSetField@plt>
mov    -0x60(%rbp),%rdi
test   %rdi,%rdi
je     1a7a3 <TIFFFetchNormalTag+0x18f3>
mov    %rax,%r14
callq  8bb0 <_TIFFfree@plt>
mov    %r14,%rax
mov    -0x38(%rbp),%r14
test   %eax,%eax
je     1aeb0 <TIFFFetchNormalTag+0x2000>
xor    %r10d,%r10d
lea    0x3989b(%rip),%rdx        # 54050 <module.89>
mov    $0x1,%eax
mov    %r10,%rsi
jmpq   18fb3 <TIFFFetchNormalTag+0x103>
xor    %eax,%eax
movzwl (%r14),%esi
mov    0x8(%r14),%edx
mov    -0x58(%rbp),%rcx
mov    -0x38(%rbp),%r14
mov    %r14,%rdi
callq  8290 <TIFFSetField@plt>
mov    -0x58(%rbp),%rdi
test   %rdi,%rdi
je     1a7f4 <TIFFFetchNormalTag+0x1944>
mov    %rax,%r14
callq  8bb0 <_TIFFfree@plt>
mov    %r14,%rax
mov    -0x38(%rbp),%r14
test   %eax,%eax
je     1aebc <TIFFFetchNormalTag+0x200c>
xor    %r10d,%r10d
lea    0x3984a(%rip),%rdx        # 54050 <module.89>
mov    $0x1,%eax
mov    %r10,%rsi
jmpq   18fb3 <TIFFFetchNormalTag+0x103>
xor    %eax,%eax
movzwl (%r14),%esi
mov    0x8(%r14),%edx
mov    -0x50(%rbp),%rcx
mov    -0x38(%rbp),%r14
mov    %r14,%rdi
callq  8290 <TIFFSetField@plt>
mov    -0x50(%rbp),%rdi
test   %rdi,%rdi
je     1a845 <TIFFFetchNormalTag+0x1995>
mov    %rax,%r14
callq  8bb0 <_TIFFfree@plt>
mov    %r14,%rax
mov    -0x38(%rbp),%r14
test   %eax,%eax
je     1aec8 <TIFFFetchNormalTag+0x2018>
xor    %r10d,%r10d
lea    0x397f9(%rip),%rdx        # 54050 <module.89>
mov    $0x1,%eax
mov    %r10,%rsi
jmpq   18fb3 <TIFFFetchNormalTag+0x103>
xor    %eax,%eax
movzwl (%r14),%esi
mov    0x8(%r14),%edx
mov    -0x48(%rbp),%rcx
mov    -0x38(%rbp),%r14
mov    %r14,%rdi
callq  8290 <TIFFSetField@plt>
mov    -0x48(%rbp),%rdi
test   %rdi,%rdi
je     1a896 <TIFFFetchNormalTag+0x19e6>
mov    %rax,%r14
callq  8bb0 <_TIFFfree@plt>
mov    %r14,%rax
mov    -0x38(%rbp),%r14
test   %eax,%eax
je     1aed4 <TIFFFetchNormalTag+0x2024>
xor    %r10d,%r10d
lea    0x397a8(%rip),%rdx        # 54050 <module.89>
mov    $0x1,%eax
mov    %r10,%rsi
jmpq   18fb3 <TIFFFetchNormalTag+0x103>
xor    %eax,%eax
movzwl (%r14),%esi
mov    0x8(%r14),%edx
mov    -0x40(%rbp),%rcx
mov    -0x38(%rbp),%r14
mov    %r14,%rdi
callq  8290 <TIFFSetField@plt>
mov    -0x40(%rbp),%rdi
test   %rdi,%rdi
je     1a8e7 <TIFFFetchNormalTag+0x1a37>
mov    %rax,%r14
callq  8bb0 <_TIFFfree@plt>
mov    %r14,%rax
mov    -0x38(%rbp),%r14
test   %eax,%eax
je     1aee0 <TIFFFetchNormalTag+0x2030>
xor    %r10d,%r10d
lea    0x39757(%rip),%rdx        # 54050 <module.89>
mov    $0x1,%eax
mov    %r10,%rsi
jmpq   18fb3 <TIFFFetchNormalTag+0x103>
xor    %eax,%eax
mov    -0x38(%rbp),%r8
mov    0x3b8(%r8),%rdi
lea    0x397eb(%rip),%rdx        # 54105 <module.89+0xb5>
mov    0x20(%r15),%rcx
lea    0x3972b(%rip),%rsi        # 54050 <module.89>
mov    %r15,-0x10(%rbp)
mov    %r14,%r15
mov    %r8,%r14
callq  85a0 <TIFFWarningExt@plt>
mov    %r15,%r8
mov    -0x10(%rbp),%r15
xor    %eax,%eax
movzwl (%r8),%esi
mov    -0x130(%rbp),%rdx
mov    %r14,%rdi
callq  8290 <TIFFSetField@plt>
mov    -0x130(%rbp),%rdi
test   %rdi,%rdi
je     1a96b <TIFFFetchNormalTag+0x1abb>
mov    %rax,%r14
callq  8bb0 <_TIFFfree@plt>
mov    %r14,%rax
mov    -0x38(%rbp),%r14
test   %eax,%eax
je     1aeec <TIFFFetchNormalTag+0x203c>
xor    %r10d,%r10d
lea    0x396d3(%rip),%rdx        # 54050 <module.89>
mov    $0x1,%eax
mov    %r10,%rsi
jmpq   18fb3 <TIFFFetchNormalTag+0x103>
xor    %eax,%eax
mov    -0x38(%rbp),%r8
mov    0x3b8(%r8),%rdi
lea    0x397ea(%rip),%rdx        # 54188 <module.89+0x138>
mov    0x20(%r15),%rcx
lea    0x396a7(%rip),%rsi        # 54050 <module.89>
mov    %r15,-0x18(%rbp)
mov    %r14,%r15
mov    %r8,%r14
callq  85a0 <TIFFWarningExt@plt>
mov    0x8(%r15),%rax
lea    0x1(%rax),%rcx
lea    0x1(%rax),%edx
mov    %edx,%eax
cmp    %rax,%rcx
je     1aef8 <TIFFFetchNormalTag+0x2048>
xor    %eax,%eax
test   %rax,%rax
je     1af04 <TIFFFetchNormalTag+0x2054>
mov    -0x130(%rbp),%rsi
mov    0x8(%r15),%edx
mov    %rax,%rdi
mov    %r13,-0x20(%rbp)
mov    %rax,%r13
callq  8790 <_TIFFmemcpy@plt>
mov    0x8(%r15),%eax
movb   $0x0,0x0(%r13,%rax,1)
mov    -0x130(%rbp),%rdi
test   %rdi,%rdi
jne    1af20 <TIFFFetchNormalTag+0x2070>
mov    %r15,%r8
jmpq   1af28 <TIFFFetchNormalTag+0x2078>
xor    %eax,%eax
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
leaveq 
retq   
xor    %eax,%eax
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
leaveq 
retq   
xor    %eax,%eax
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
leaveq 
retq   
xor    %eax,%eax
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
leaveq 
retq   
xor    %eax,%eax
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
leaveq 
retq   
xor    %eax,%eax
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
leaveq 
retq   
xor    %eax,%eax
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
leaveq 
retq   
xor    %eax,%eax
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
leaveq 
retq   
xor    %eax,%eax
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
leaveq 
retq   
xor    %eax,%eax
movzwl (%r15),%esi
mov    -0xf0(%rbp),%rdx
mov    %r14,%rdi
callq  8290 <TIFFSetField@plt>
mov    -0xf0(%rbp),%rdi
test   %rdi,%rdi
je     1aaad <TIFFFetchNormalTag+0x1bfd>
mov    %rax,%r15
callq  8bb0 <_TIFFfree@plt>
mov    %r15,%rax
test   %eax,%eax
je     1af3c <TIFFFetchNormalTag+0x208c>
mov    -0x38(%rbp),%r15
xor    %r10d,%r10d
lea    0x3958d(%rip),%rdx        # 54050 <module.89>
mov    $0x1,%eax
mov    %r10,%rsi
jmpq   18fb3 <TIFFFetchNormalTag+0x103>
xor    %eax,%eax
movzwl (%r15),%esi
mov    -0xe8(%rbp),%rdx
mov    %r14,%rdi
callq  8290 <TIFFSetField@plt>
mov    -0xe8(%rbp),%rdi
test   %rdi,%rdi
je     1aafc <TIFFFetchNormalTag+0x1c4c>
mov    %rax,%r15
callq  8bb0 <_TIFFfree@plt>
mov    %r15,%rax
test   %eax,%eax
je     1af48 <TIFFFetchNormalTag+0x2098>
mov    -0x38(%rbp),%r15
xor    %r10d,%r10d
lea    0x3953e(%rip),%rdx        # 54050 <module.89>
mov    $0x1,%eax
mov    %r10,%rsi
jmpq   18fb3 <TIFFFetchNormalTag+0x103>
xor    %eax,%eax
movzwl (%r15),%esi
mov    -0xe0(%rbp),%rdx
mov    %r14,%rdi
callq  8290 <TIFFSetField@plt>
mov    -0xe0(%rbp),%rdi
test   %rdi,%rdi
je     1ab4b <TIFFFetchNormalTag+0x1c9b>
mov    %rax,%r15
callq  8bb0 <_TIFFfree@plt>
mov    %r15,%rax
test   %eax,%eax
je     1af54 <TIFFFetchNormalTag+0x20a4>
mov    -0x38(%rbp),%r15
xor    %r10d,%r10d
lea    0x394ef(%rip),%rdx        # 54050 <module.89>
mov    $0x1,%eax
mov    %r10,%rsi
jmpq   18fb3 <TIFFFetchNormalTag+0x103>
mov    0x8(%r14),%rax
test   %rax,%rax
jne    1af60 <TIFFFetchNormalTag+0x20b0>
mov    %r14,%rcx
mov    -0x38(%rbp),%r14
xor    %eax,%eax
movzwl (%rcx),%esi
movzwl 0x8(%rcx),%edx
mov    -0xd8(%rbp),%rcx
mov    %r14,%rdi
callq  8290 <TIFFSetField@plt>
mov    -0xd8(%rbp),%rdi
test   %rdi,%rdi
je     1abb5 <TIFFFetchNormalTag+0x1d05>
mov    %rax,%r14
callq  8bb0 <_TIFFfree@plt>
mov    %r14,%rax
mov    -0x38(%rbp),%r14
test   %eax,%eax
je     1af80 <TIFFFetchNormalTag+0x20d0>
xor    %r10d,%r10d
lea    0x39489(%rip),%rdx        # 54050 <module.89>
mov    $0x1,%eax
mov    %r10,%rsi
jmpq   18fb3 <TIFFFetchNormalTag+0x103>
xor    %eax,%eax
movzwl (%r14),%esi
movzwl 0x8(%r14),%edx
mov    -0xd0(%rbp),%rcx
mov    -0x38(%rbp),%r14
mov    %r14,%rdi
callq  8290 <TIFFSetField@plt>
mov    -0xd0(%rbp),%rdi
test   %rdi,%rdi
je     1ac0d <TIFFFetchNormalTag+0x1d5d>
mov    %rax,%r14
callq  8bb0 <_TIFFfree@plt>
mov    %r14,%rax
mov    -0x38(%rbp),%r14
test   %eax,%eax
je     1af8c <TIFFFetchNormalTag+0x20dc>
xor    %r10d,%r10d
lea    0x39431(%rip),%rdx        # 54050 <module.89>
mov    $0x1,%eax
mov    %r10,%rsi
jmpq   18fb3 <TIFFFetchNormalTag+0x103>
xor    %eax,%eax
movzwl (%r14),%esi
movzwl 0x8(%r14),%edx
mov    -0xc8(%rbp),%rcx
mov    -0x38(%rbp),%r14
mov    %r14,%rdi
callq  8290 <TIFFSetField@plt>
mov    -0xc8(%rbp),%rdi
test   %rdi,%rdi
je     1ac65 <TIFFFetchNormalTag+0x1db5>
mov    %rax,%r14
callq  8bb0 <_TIFFfree@plt>
mov    %r14,%rax
mov    -0x38(%rbp),%r14
test   %eax,%eax
je     1af98 <TIFFFetchNormalTag+0x20e8>
xor    %r10d,%r10d
lea    0x393d9(%rip),%rdx        # 54050 <module.89>
mov    $0x1,%eax
mov    %r10,%rsi
jmpq   18fb3 <TIFFFetchNormalTag+0x103>
xor    %eax,%eax
movzwl (%r14),%esi
movzwl 0x8(%r14),%edx
mov    -0xc0(%rbp),%rcx
mov    -0x38(%rbp),%r14
mov    %r14,%rdi
callq  8290 <TIFFSetField@plt>
mov    -0xc0(%rbp),%rdi
test   %rdi,%rdi
je     1acbd <TIFFFetchNormalTag+0x1e0d>
mov    %rax,%r14
callq  8bb0 <_TIFFfree@plt>
mov    %r14,%rax
mov    -0x38(%rbp),%r14
test   %eax,%eax
je     1afa4 <TIFFFetchNormalTag+0x20f4>
xor    %r10d,%r10d
lea    0x39381(%rip),%rdx        # 54050 <module.89>
mov    $0x1,%eax
mov    %r10,%rsi
jmpq   18fb3 <TIFFFetchNormalTag+0x103>
xor    %eax,%eax
movzwl (%r14),%esi
movzwl 0x8(%r14),%edx
mov    -0xb8(%rbp),%rcx
mov    -0x38(%rbp),%r14
mov    %r14,%rdi
callq  8290 <TIFFSetField@plt>
mov    -0xb8(%rbp),%rdi
test   %rdi,%rdi
je     1ad15 <TIFFFetchNormalTag+0x1e65>
mov    %rax,%r14
callq  8bb0 <_TIFFfree@plt>
mov    %r14,%rax
mov    -0x38(%rbp),%r14
test   %eax,%eax
je     1afb0 <TIFFFetchNormalTag+0x2100>
xor    %r10d,%r10d
lea    0x39329(%rip),%rdx        # 54050 <module.89>
mov    $0x1,%eax
mov    %r10,%rsi
jmpq   18fb3 <TIFFFetchNormalTag+0x103>
xor    %eax,%eax
movzwl (%r14),%esi
movzwl 0x8(%r14),%edx
mov    -0xb0(%rbp),%rcx
mov    -0x38(%rbp),%r14
mov    %r14,%rdi
callq  8290 <TIFFSetField@plt>
mov    -0xb0(%rbp),%rdi
test   %rdi,%rdi
je     1ad6d <TIFFFetchNormalTag+0x1ebd>
mov    %rax,%r14
callq  8bb0 <_TIFFfree@plt>
mov    %r14,%rax
mov    -0x38(%rbp),%r14
test   %eax,%eax
je     1afbc <TIFFFetchNormalTag+0x210c>
xor    %r10d,%r10d
lea    0x392d1(%rip),%rdx        # 54050 <module.89>
mov    $0x1,%eax
mov    %r10,%rsi
jmpq   18fb3 <TIFFFetchNormalTag+0x103>
xor    %eax,%eax
movzwl (%r14),%esi
movzwl 0x8(%r14),%edx
mov    -0xa8(%rbp),%rcx
mov    -0x38(%rbp),%r14
mov    %r14,%rdi
callq  8290 <TIFFSetField@plt>
mov    -0xa8(%rbp),%rdi
test   %rdi,%rdi
je     1adc5 <TIFFFetchNormalTag+0x1f15>
mov    %rax,%r14
callq  8bb0 <_TIFFfree@plt>
mov    %r14,%rax
mov    -0x38(%rbp),%r14
test   %eax,%eax
je     1afc8 <TIFFFetchNormalTag+0x2118>
xor    %r10d,%r10d
lea    0x39279(%rip),%rdx        # 54050 <module.89>
mov    $0x1,%eax
mov    %r10,%rsi
jmpq   18fb3 <TIFFFetchNormalTag+0x103>
xor    %eax,%eax
movzwl (%r14),%esi
movzwl 0x8(%r14),%edx
mov    -0xa0(%rbp),%rcx
mov    -0x38(%rbp),%r14
mov    %r14,%rdi
callq  8290 <TIFFSetField@plt>
mov    -0xa0(%rbp),%rdi
test   %rdi,%rdi
je     1ae1d <TIFFFetchNormalTag+0x1f6d>
mov    %rax,%r14
callq  8bb0 <_TIFFfree@plt>
mov    %r14,%rax
mov    -0x38(%rbp),%r14
test   %eax,%eax
je     1afd4 <TIFFFetchNormalTag+0x2124>
xor    %r10d,%r10d
lea    0x39221(%rip),%rdx        # 54050 <module.89>
mov    $0x1,%eax
mov    %r10,%rsi
jmpq   18fb3 <TIFFFetchNormalTag+0x103>
mov    -0x98(%rbp),%rcx
movzbl -0x1(%rcx,%rax,1),%eax
test   %al,%al
jne    1afe0 <TIFFFetchNormalTag+0x2130>
mov    %r14,%rcx
mov    -0x38(%rbp),%r14
jmpq   1a52e <TIFFFetchNormalTag+0x167e>
xor    %eax,%eax
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
leaveq 
retq   
xor    %eax,%eax
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
leaveq 
retq   
xor    %eax,%eax
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
leaveq 
retq   
xor    %eax,%eax
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
leaveq 
retq   
xor    %eax,%eax
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
leaveq 
retq   
xor    %eax,%eax
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
leaveq 
retq   
xor    %eax,%eax
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
leaveq 
retq   
xor    %eax,%eax
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
leaveq 
retq   
xor    %eax,%eax
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
leaveq 
retq   
xor    %eax,%eax
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
leaveq 
retq   
xor    %eax,%eax
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
leaveq 
retq   
xor    %eax,%eax
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
leaveq 
retq   
xor    %eax,%eax
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
leaveq 
retq   
mov    %edx,%edi
callq  8440 <_TIFFmalloc@plt>
jmpq   1a9d0 <TIFFFetchNormalTag+0x1b20>
mov    -0x130(%rbp),%rdi
test   %rdi,%rdi
jne    1b02a <TIFFFetchNormalTag+0x217a>
xor    %eax,%eax
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
leaveq 
retq   
callq  8bb0 <_TIFFfree@plt>
mov    %r15,%r8
mov    %r13,-0x130(%rbp)
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r15
jmpq   1a93b <TIFFFetchNormalTag+0x1a8b>
xor    %eax,%eax
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
leaveq 
retq   
xor    %eax,%eax
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
leaveq 
retq   
xor    %eax,%eax
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
leaveq 
retq   
mov    -0xd8(%rbp),%rcx
movzbl -0x1(%rcx,%rax,1),%eax
test   %al,%al
jne    1b03b <TIFFFetchNormalTag+0x218b>
mov    %r14,%rcx
mov    -0x38(%rbp),%r14
jmpq   1ab82 <TIFFFetchNormalTag+0x1cd2>
xor    %eax,%eax
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
leaveq 
retq   
xor    %eax,%eax
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
leaveq 
retq   
xor    %eax,%eax
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
leaveq 
retq   
xor    %eax,%eax
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
leaveq 
retq   
xor    %eax,%eax
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
leaveq 
retq   
xor    %eax,%eax
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
leaveq 
retq   
xor    %eax,%eax
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
leaveq 
retq   
xor    %eax,%eax
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
leaveq 
retq   
xor    %eax,%eax
mov    -0x38(%rbp),%r8
mov    0x3b8(%r8),%rdi
mov    0x20(%r15),%rcx
lea    0x39058(%rip),%rsi        # 54050 <module.89>
mov    %r15,-0x20(%rbp)
mov    %r14,%r15
mov    %r8,%r14
lea    0x3929d(%rip),%rdx        # 542a6 <module.89+0x256>
callq  85a0 <TIFFWarningExt@plt>
mov    0x8(%r15),%rcx
mov    -0x98(%rbp),%rax
movb   $0x0,-0x1(%rcx,%rax,1)
mov    %r15,%rcx
mov    -0x20(%rbp),%r15
jmpq   1a52e <TIFFFetchNormalTag+0x167e>
callq  8bb0 <_TIFFfree@plt>
xor    %eax,%eax
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
leaveq 
retq   
xor    %eax,%eax
mov    -0x38(%rbp),%r8
mov    0x3b8(%r8),%rdi
mov    0x20(%r15),%rcx
lea    0x38ffd(%rip),%rsi        # 54050 <module.89>
mov    %r15,-0x18(%rbp)
mov    %r14,%r15
mov    %r8,%r14
lea    0x39242(%rip),%rdx        # 542a6 <module.89+0x256>
callq  85a0 <TIFFWarningExt@plt>
mov    0x8(%r15),%rcx
mov    -0xd8(%rbp),%rax
movb   $0x0,-0x1(%rcx,%rax,1)
mov    %r15,%rcx
mov    -0x18(%rbp),%r15
jmpq   1ab82 <TIFFFetchNormalTag+0x1cd2>
data16 nopw %cs:0x0(%rax,%rax,1)

000000000001b090 <TIFFFetchStripThing>:
push   %rbp
mov    %rsp,%rbp
sub    $0x40,%rsp
mov    %r12,-0x8(%rbp)
mov    %r13,-0x10(%rbp)
mov    %r14,-0x18(%rbp)
mov    %r15,-0x20(%rbp)
mov    %rdx,-0x38(%rbp)
xor    %eax,%eax
mov    %rax,-0x30(%rbp)
lea    -0x40(%rbp),%rax
mov    %edx,%r15d
mov    %rax,%rdx
mov    %rcx,%r14
mov    %rdi,%r12
mov    %rsi,%r13
mov    %r15,%rcx
callq  1bb50 <TIFFReadDirEntryLong8ArrayWithLimit>
test   %eax,%eax
jne    1b0f9 <TIFFFetchStripThing+0x69>
mov    $0x1,%eax
mov    %rax,-0x28(%rbp)
cmp    0x8(%r13),%r15
ja     1b117 <TIFFFetchStripThing+0x87>
mov    -0x40(%rbp),%rcx
mov    %rcx,(%r14)
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
leaveq 
retq   
movzwl 0x0(%r13),%esi
mov    %rax,%r14
mov    %r12,%rdi
callq  8ae0 <TIFFFieldWithTag@plt>
test   %rax,%rax
jne    1b13f <TIFFFetchStripThing+0xaf>
lea    0x38517(%rip),%rcx        # 5362c <module.10+0x180>
jmp    1b143 <TIFFFetchStripThing+0xb3>
movzwl 0x0(%r13),%esi
mov    %r12,%rdi
callq  8ae0 <TIFFFieldWithTag@plt>
mov    %rax,%r15
lea    0x391fb(%rip),%rdi        # 54329 <module.107+0x14>
callq  8040 <getenv@plt>
test   %rax,%rax
jne    1b170 <TIFFFetchStripThing+0xe0>
mov    $0xf4240,%eax
jmp    1b178 <TIFFFetchStripThing+0xe8>
mov    0x20(%rax),%rcx
mov    %r14,%rsi
mov    %r12,%rdi
xor    %r13d,%r13d
mov    %r13,%r8
lea    0x391bf(%rip),%rdx        # 54315 <module.107>
callq  17e20 <TIFFReadDirEntryOutputErr>
mov    %r13,%rax
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
leaveq 
retq   
mov    %rax,%rdi
callq  8b90 <atoi@plt>
test   %r15,%r15
jne    1b186 <TIFFFetchStripThing+0xf6>
lea    0x384a8(%rip),%rcx        # 5362c <module.10+0x180>
jmp    1b18a <TIFFFetchStripThing+0xfa>
mov    0x20(%r15),%rcx
mov    -0x38(%rbp),%r15
cmp    %eax,%r15d
ja     1b199 <TIFFFetchStripThing+0x109>
pushq  -0x28(%rbp)
popq   -0x30(%rbp)
mov    %r12,%rdi
mov    $0x1,%esi
mov    %r14,-0x38(%rbp)
mov    %rax,%r14
mov    -0x30(%rbp),%r8
lea    0x39162(%rip),%rdx        # 54315 <module.107>
callq  17e20 <TIFFReadDirEntryOutputErr>
cmp    %r14d,%r15d
ja     1b224 <TIFFFetchStripThing+0x194>
mov    %r12,%rdi
mov    %r15d,%esi
mov    $0x8,%edx
lea    0x39180(%rip),%rcx        # 5434f <module.107+0x3a>
callq  8750 <_TIFFCheckMalloc@plt>
test   %rax,%rax
je     1b241 <TIFFFetchStripThing+0x1b1>
mov    -0x40(%rbp),%rsi
mov    0x8(%r13),%edx
shl    $0x3,%rdx
mov    %rax,%r12
mov    %r12,%rdi
callq  8790 <_TIFFmemcpy@plt>
mov    0x8(%r13),%eax
lea    (%r12,%rax,8),%rdi
sub    %eax,%r15d
mov    %r15d,%edx
shl    $0x3,%rdx
xor    %esi,%esi
callq  88e0 <_TIFFmemset@plt>
mov    -0x40(%rbp),%rdi
callq  8bb0 <_TIFFfree@plt>
mov    %r12,-0x40(%rbp)
mov    -0x38(%rbp),%r14
mov    $0x1,%eax
jmpq   1b0e0 <TIFFFetchStripThing+0x50>
mov    -0x40(%rbp),%rdi
callq  8bb0 <_TIFFfree@plt>
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
xor    %eax,%eax
leaveq 
retq   
mov    -0x40(%rbp),%rdi
callq  8bb0 <_TIFFfree@plt>
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
xor    %eax,%eax
leaveq 
retq   
xchg   %ax,%ax

000000000001b260 <TIFFFetchSubjectDistance>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
movq   $0x0,-0x28(%rbp)
mov    $0x1,%r8d
xor    %eax,%eax
lea    -0x28(%rbp),%rcx
mov    $0x2,%edx
mov    0x8(%rsi),%r9
cmp    $0x1,%r9
je     1b2ac <TIFFFetchSubjectDistance+0x4c>
mov    %r8,%rax
test   %eax,%eax
je     1b2bd <TIFFFetchSubjectDistance+0x5d>
mov    %rax,%rsi
lea    0x390c3(%rip),%rdx        # 5435f <module.110>
lea    0x390d5(%rip),%rcx        # 54378 <module.110+0x19>
callq  17e20 <TIFFReadDirEntryOutputErr>
xor    %eax,%eax
leaveq 
retq   
movzwl 0x2(%rsi),%r9d
cmp    $0x5,%r9w
je     1b30e <TIFFFetchSubjectDistance+0xae>
mov    %rdx,%rax
jmp    1b28e <TIFFFetchSubjectDistance+0x2e>
mov    0x10(%rdi),%eax
and    $0x80,%eax
test   %eax,%eax
je     1b2f0 <TIFFFetchSubjectDistance+0x90>
mov    %r15,-0x18(%rbp)
mov    %r14,-0x10(%rbp)
mov    %rsi,%r14
mov    %rdx,%rsi
mov    %rdi,%r15
mov    %rcx,%rdi
callq  8b70 <TIFFSwabArrayOfLong@plt>
mov    %r14,%rsi
mov    %r15,%rdi
mov    -0x10(%rbp),%r14
mov    -0x18(%rbp),%r15
mov    -0x28(%rbp),%eax
test   %eax,%eax
jne    1b39d <TIFFFetchSubjectDistance+0x13d>
xorpd  %xmm0,%xmm0
mov    $0x1,%eax
movzwl (%rsi),%esi
callq  8290 <TIFFSetField@plt>
leaveq 
retq   
mov    0x10(%rdi),%r9d
mov    %r9,%r10
and    $0x80000,%r10d
test   %r10d,%r10d
jne    1b3af <TIFFFetchSubjectDistance+0x14f>
mov    0x10(%rsi),%eax
mov    %eax,-0x1c(%rbp)
and    $0x80,%r9d
test   %r9d,%r9d
je     1b35d <TIFFFetchSubjectDistance+0xfd>
lea    -0x1c(%rbp),%rax
mov    %r15,-0x18(%rbp)
mov    %rsi,-0x10(%rbp)
mov    %rdi,%r15
mov    %rax,%rdi
callq  8480 <TIFFSwabLong@plt>
mov    %r15,%rdi
lea    -0x28(%rbp),%rcx
mov    -0x10(%rbp),%rsi
mov    -0x18(%rbp),%r15
mov    -0x1c(%rbp),%eax
mov    $0x8,%edx
mov    %rdi,%r8
mov    %r15,-0x18(%rbp)
mov    %rsi,-0x8(%rbp)
mov    %rax,%rsi
mov    %rdi,%r15
mov    %r8,%rdi
callq  17d40 <TIFFReadDirEntryData>
mov    %r15,%rdi
mov    $0x2,%edx
mov    $0x1,%r8d
lea    -0x28(%rbp),%rcx
mov    -0x8(%rbp),%rsi
mov    -0x18(%rbp),%r15
jmpq   1b28e <TIFFFetchSubjectDistance+0x2e>
cmp    $0xffffffff,%eax
jne    1b3bc <TIFFFetchSubjectDistance+0x15c>
movsd  0x39186(%rip),%xmm0        # 54530 <module.110+0x1d1>
jmpq   1b2ff <TIFFFetchSubjectDistance+0x9f>
mov    0x10(%rsi),%r9
mov    %r9,-0x28(%rbp)
jmpq   1b28e <TIFFFetchSubjectDistance+0x2e>
mov    %eax,%eax
cvtsi2sd %rax,%xmm0
mov    -0x24(%rbp),%eax
mov    %eax,%eax
cvtsi2sd %rax,%xmm1
divsd  %xmm1,%xmm0
jmpq   1b2ff <TIFFFetchSubjectDistance+0x9f>
nopw   %cs:0x0(%rax,%rax,1)

000000000001b3e0 <ChopUpSingleUncompressedStrip>:
push   %rbp
mov    %rsp,%rbp
sub    $0x40,%rsp
mov    0xf0(%rdi),%rax
mov    (%rax),%r8
test   %r8,%r8
je     1b42d <ChopUpSingleUncompressedStrip+0x4d>
mov    0xe8(%rdi),%rax
mov    (%rax),%rdx
movzwl 0xaa(%rdi),%eax
cmp    $0x1,%ax
je     1b437 <ChopUpSingleUncompressedStrip+0x57>
lea    0x38f73(%rip),%rdi        # 54388 <module.110+0x29>
lea    0x3814a(%rip),%rsi        # 53566 <module.10+0xba>
mov    $0x1625,%edx
lea    0x38f8b(%rip),%rcx        # 543b3 <module.110+0x54>
callq  8490 <__assert_fail@plt>
movslq 0xc(%rdi),%rax
test   %eax,%eax
je     1b3f7 <ChopUpSingleUncompressedStrip+0x17>
leaveq 
retq   
mov    $0x1,%eax
movzwl 0x7a(%rdi),%ecx
cmp    $0x6,%cx
je     1b48b <ChopUpSingleUncompressedStrip+0xab>
mov    %rdi,%rcx
mov    %rax,%rsi
mov    %r14,-0x28(%rbp)
mov    %r15,-0x30(%rbp)
mov    %r8,-0x38(%rbp)
mov    %rdx,-0x10(%rbp)
mov    %rax,%r14
mov    %rdi,%r15
mov    %rcx,%rdi
callq  8770 <TIFFVTileSize64@plt>
cmp    $0x2000,%rax
jbe    1b4a1 <ChopUpSingleUncompressedStrip+0xc1>
mov    %rax,%r8
mov    0x84(%r15),%eax
cmp    %r14d,%eax
ja     1b4b0 <ChopUpSingleUncompressedStrip+0xd0>
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
leaveq 
retq   
mov    0x10(%rdi),%ecx
and    $0x4000,%ecx
test   %ecx,%ecx
jne    1b446 <ChopUpSingleUncompressedStrip+0x66>
movzwl 0x10a(%rdi),%eax
jmp    1b446 <ChopUpSingleUncompressedStrip+0x66>
test   %rax,%rax
jne    1b4d7 <ChopUpSingleUncompressedStrip+0xf7>
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
leaveq 
retq   
xor    %eax,%eax
mov    0x5c(%r15),%edx
mov    %r14,%rcx
neg    %ecx
cmp    %edx,%ecx
jbe    1b4c9 <ChopUpSingleUncompressedStrip+0xe9>
lea    -0x1(%r14,%rdx,1),%eax
xor    %edx,%edx
div    %r14d
test   %eax,%eax
jne    1b4f0 <ChopUpSingleUncompressedStrip+0x110>
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
leaveq 
retq   
mov    %rax,%r8
mov    $0x2000,%eax
xor    %edx,%edx
div    %r8
imul   %eax,%r14d
mov    %eax,%eax
imul   %rax,%r8
jmp    1b475 <ChopUpSingleUncompressedStrip+0x95>
mov    %eax,%esi
mov    $0x8,%edx
lea    0x38ed3(%rip),%rcx        # 543d1 <module.110+0x72>
mov    %r15,%rdi
mov    %rsi,%r9
mov    %r12,-0x18(%rbp)
mov    %r13,-0x20(%rbp)
mov    %r14,-0x8(%rbp)
mov    %r8,%r12
mov    %rsi,%r13
mov    %r9,%rsi
mov    %rax,%r14
callq  8750 <_TIFFCheckMalloc@plt>
mov    %r13,%rsi
mov    %rax,%r13
lea    0x38ec7(%rip),%rcx        # 543f5 <module.110+0x96>
mov    %r15,%rdi
mov    $0x8,%edx
callq  8750 <_TIFFCheckMalloc@plt>
test   %r13,%r13
je     1b559 <ChopUpSingleUncompressedStrip+0x179>
test   %rax,%rax
je     1b559 <ChopUpSingleUncompressedStrip+0x179>
mov    -0x8(%rbp),%rdx
xor    %r10d,%r10d
mov    -0x10(%rbp),%rsi
mov    -0x38(%rbp),%rcx
mov    %r10,%r8
jmp    1b598 <ChopUpSingleUncompressedStrip+0x1b8>
test   %r13,%r13
je     1b56c <ChopUpSingleUncompressedStrip+0x18c>
mov    %r13,%rdi
mov    %rax,%r12
callq  8bb0 <_TIFFfree@plt>
mov    %r12,%rax
test   %rax,%rax
jne    1b600 <ChopUpSingleUncompressedStrip+0x220>
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
leaveq 
retq   
mov    %rsi,%r9
sub    %r12,%rcx
mov    %r9,(%rax,%rdi,8)
add    $0x1,%r8d
add    %r12,%rsi
cmp    %r8d,%r14d
ja     1b61a <ChopUpSingleUncompressedStrip+0x23a>
mov    %r14d,0xe4(%r15)
mov    %r14d,0xe0(%r15)
mov    %rax,%r12
xor    %eax,%eax
mov    $0x116,%esi
mov    %r15,%rdi
callq  8290 <TIFFSetField@plt>
mov    0xf0(%r15),%rdi
callq  8bb0 <_TIFFfree@plt>
mov    0xe8(%r15),%rdi
callq  8bb0 <_TIFFfree@plt>
mov    %r13,0xf0(%r15)
mov    %r12,0xe8(%r15)
movl   $0x1,0xf8(%r15)
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
leaveq 
retq   
mov    %rax,%rdi
callq  8bb0 <_TIFFfree@plt>
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
leaveq 
retq   
cmp    %r12,%rcx
jae    1b622 <ChopUpSingleUncompressedStrip+0x242>
mov    %rcx,%r12
mov    %r8d,%edi
mov    %r12,0x0(%r13,%rdi,8)
test   %r12,%r12
jne    1b587 <ChopUpSingleUncompressedStrip+0x1a7>
mov    %r10,%r9
jmpq   1b58a <ChopUpSingleUncompressedStrip+0x1aa>
nopl   0x0(%rax,%rax,1)

000000000001b640 <TIFFReadUInt64>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
movzbl (%rdi),%eax
mov    %al,-0x8(%rbp)
movzbl 0x1(%rdi),%eax
mov    %al,-0x7(%rbp)
movzbl 0x2(%rdi),%eax
mov    %al,-0x6(%rbp)
movzbl 0x3(%rdi),%eax
mov    %al,-0x5(%rbp)
movzbl 0x4(%rdi),%eax
mov    %al,-0x4(%rbp)
movzbl 0x5(%rdi),%eax
mov    %al,-0x3(%rbp)
movzbl 0x6(%rdi),%eax
mov    %al,-0x2(%rbp)
movzbl 0x7(%rdi),%eax
mov    %al,-0x1(%rbp)
mov    -0x8(%rbp),%rax
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)

000000000001b690 <_TIFFFillStrilesInternal>:
push   %rbp
mov    %rsp,%rbp
mov    $0x1,%eax
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

000000000001b6a0 <TIFFReadDirEntryDataAndRealloc>:
push   %rbp
mov    %rsp,%rbp
sub    $0x40,%rsp
mov    0x10(%rdi),%eax
and    $0x800,%eax
test   %eax,%eax
jne    1b6d6 <TIFFReadDirEntryDataAndRealloc+0x36>
mov    %rdi,%rax
mov    %rdx,-0x40(%rbp)
mov    %rcx,-0x38(%rbp)
mov    %rdi,-0x30(%rbp)
mov    %rax,%rdi
callq  82f0 <_TIFFSeekOK@plt>
test   %eax,%eax
jne    1b6f5 <TIFFReadDirEntryDataAndRealloc+0x55>
mov    $0x3,%eax
leaveq 
retq   
lea    0x38d39(%rip),%rdi        # 54416 <module.110+0xb7>
lea    0x37e82(%rip),%rsi        # 53566 <module.10+0xba>
mov    $0x310,%edx
lea    0x38d35(%rip),%rcx        # 54425 <module.110+0xc6>
callq  8490 <__assert_fail@plt>
xor    %ecx,%ecx
mov    $0x100000,%eax
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rcx,%rbx
mov    -0x30(%rbp),%r12
mov    -0x38(%rbp),%r13
mov    -0x40(%rbp),%r14
jmp    1b773 <TIFFReadDirEntryDataAndRealloc+0xd3>
mov    %r14,%r15
sub    %rbx,%r15
cmp    %rax,%r15
jge    1b790 <TIFFReadDirEntryDataAndRealloc+0xf0>
mov    %rax,-0x40(%rbp)
lea    (%r15,%rbx,1),%rsi
mov    %rsi,-0x38(%rbp)
mov    0x0(%r13),%rdi
callq  8100 <_TIFFrealloc@plt>
test   %rax,%rax
je     1b7a7 <TIFFReadDirEntryDataAndRealloc+0x107>
mov    %rax,0x0(%r13)
lea    (%rax,%rbx,1),%rsi
mov    0x3c0(%r12),%rax
mov    0x3b8(%r12),%rdi
mov    %r15,%rdx
callq  *%rax
cmp    %rax,%r15
jne    1b7ed <TIFFReadDirEntryDataAndRealloc+0x14d>
add    %rax,%rbx
mov    -0x40(%rbp),%rax
cmp    %r14,%rbx
jl     1b721 <TIFFReadDirEntryDataAndRealloc+0x81>
xor    %eax,%eax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
cmp    $0x3e700000,%rax
jg     1b72c <TIFFReadDirEntryDataAndRealloc+0x8c>
lea    (%rax,%rax,4),%rcx
add    %rcx,%rcx
mov    %rax,%r15
mov    %rcx,%rax
jmp    1b72c <TIFFReadDirEntryDataAndRealloc+0x8c>
xor    %eax,%eax
mov    0x3b8(%r12),%rdi
mov    (%r12),%rsi
lea    0x38c88(%rip),%rdx        # 54444 <module.110+0xe5>
lea    0x38cc3(%rip),%rcx        # 54486 <module.110+0x127>
mov    $0x1,%r8d
mov    -0x38(%rbp),%r9
callq  8a00 <TIFFErrorExt@plt>
mov    $0x7,%eax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    $0x3,%eax
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

000000000001b810 <TIFFReadDirEntryArrayWithLimit>:
push   %rbp
mov    %rsp,%rbp
sub    $0x50,%rsp
mov    %r13,-0x8(%rbp)
mov    %r14,-0x10(%rbp)
mov    %r15,-0x18(%rbp)
mov    %rcx,-0x30(%rbp)
mov    %rdx,-0x28(%rbp)
mov    %rdi,-0x20(%rbp)
mov    %r9,%r13
mov    %rsi,%r14
mov    %r8,%r15
movzwl 0x2(%r14),%edi
callq  8140 <TIFFDataWidth@plt>
mov    0x8(%r14),%rcx
cmp    %r13,%rcx
ja     1b84f <TIFFReadDirEntryArrayWithLimit+0x3f>
mov    %rcx,%r13
xor    %r8d,%r8d
test   %r13,%r13
je     1b888 <TIFFReadDirEntryArrayWithLimit+0x78>
test   %eax,%eax
je     1b888 <TIFFReadDirEntryArrayWithLimit+0x78>
mov    %rax,%r9
mov    $0x6,%ecx
mov    $0x7fffffff,%eax
cltd   
mov    %rax,%rdi
idiv   %r9d
movslq %eax,%rax
cmp    %rax,%r13
jbe    1b8a0 <TIFFReadDirEntryArrayWithLimit+0x90>
mov    %rcx,%rax
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
leaveq 
retq   
movq   $0x0,(%r15)
mov    %r8,%rax
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
leaveq 
retq   
mov    %rdi,%rax
xor    %edx,%edx
mov    -0x30(%rbp),%rsi
div    %esi
mov    %eax,%eax
cmp    %rax,%r13
jbe    1b8c3 <TIFFReadDirEntryArrayWithLimit+0xb3>
mov    %rcx,%rax
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
leaveq 
retq   
mov    -0x28(%rbp),%rsi
mov    %r13d,(%rsi)
mov    %r9,%rax
imul   %r13d,%eax
test   %eax,%eax
jne    1b8f4 <TIFFReadDirEntryArrayWithLimit+0xe4>
lea    0x38bc0(%rip),%rdi        # 5449c <module.110+0x13d>
lea    0x37c83(%rip),%rsi        # 53566 <module.10+0xba>
mov    $0x35f,%edx
lea    0x38bc2(%rip),%rcx        # 544b1 <module.110+0x152>
callq  8490 <__assert_fail@plt>
mov    -0x20(%rbp),%r13
mov    0x10(%r13),%ecx
and    $0x800,%ecx
test   %ecx,%ecx
jne    1b93c <TIFFReadDirEntryArrayWithLimit+0x12c>
mov    0x10(%r13),%ecx
mov    %rcx,%rdx
and    $0x800,%edx
test   %edx,%edx
jne    1b958 <TIFFReadDirEntryArrayWithLimit+0x148>
and    $0x80000,%ecx
test   %ecx,%ecx
jne    1b9ff <TIFFReadDirEntryArrayWithLimit+0x1ef>
mov    %r8,%rcx
test   %rcx,%rcx
jne    1b958 <TIFFReadDirEntryArrayWithLimit+0x148>
cmp    $0x4,%eax
jbe    1b958 <TIFFReadDirEntryArrayWithLimit+0x148>
movq   $0x0,-0x48(%rbp)
jmp    1b98a <TIFFReadDirEntryArrayWithLimit+0x17a>
cmp    0x3a0(%r13),%eax
jbe    1b906 <TIFFReadDirEntryArrayWithLimit+0xf6>
mov    $0x3,%eax
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
leaveq 
retq   
mov    (%rsi),%esi
movslq %r9d,%rdx
lea    0x38b6c(%rip),%rcx        # 544d0 <module.110+0x171>
mov    %r13,%rdi
mov    %r15,-0x30(%rbp)
mov    %rax,%r15
callq  8750 <_TIFFCheckMalloc@plt>
mov    %rax,-0x48(%rbp)
test   %rax,%rax
je     1ba12 <TIFFReadDirEntryArrayWithLimit+0x202>
mov    %r15,%rax
xor    %r8d,%r8d
mov    -0x30(%rbp),%r15
mov    0x10(%r13),%ecx
mov    %rcx,%rdx
and    $0x80000,%edx
test   %edx,%edx
jne    1ba25 <TIFFReadDirEntryArrayWithLimit+0x215>
cmp    $0x4,%eax
jbe    1ba87 <TIFFReadDirEntryArrayWithLimit+0x277>
mov    0x10(%r14),%edx
mov    %edx,-0x3c(%rbp)
and    $0x80,%ecx
test   %ecx,%ecx
je     1b9cb <TIFFReadDirEntryArrayWithLimit+0x1bb>
mov    %rax,%r14
lea    -0x3c(%rbp),%rdi
callq  8480 <TIFFSwabLong@plt>
mov    %r14,%rax
xor    %r8d,%r8d
mov    0x10(%r13),%ecx
and    $0x800,%ecx
test   %ecx,%ecx
jne    1bab1 <TIFFReadDirEntryArrayWithLimit+0x2a1>
mov    -0x3c(%rbp),%esi
mov    %eax,%edx
mov    %r13,%rdi
mov    %r8,%r13
lea    -0x48(%rbp),%rcx
callq  1b6a0 <TIFFReadDirEntryDataAndRealloc>
mov    %r13,%rcx
mov    %rax,%r13
mov    %rcx,%rax
jmpq   1bace <TIFFReadDirEntryArrayWithLimit+0x2be>
cmp    $0x8,%eax
ja     1b932 <TIFFReadDirEntryArrayWithLimit+0x122>
mov    $0x1,%ecx
jmpq   1b928 <TIFFReadDirEntryArrayWithLimit+0x118>
mov    $0x7,%eax
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
leaveq 
retq   
cmp    $0x8,%eax
jbe    1baed <TIFFReadDirEntryArrayWithLimit+0x2dd>
mov    0x10(%r14),%rdx
mov    %rdx,-0x38(%rbp)
and    $0x80,%ecx
test   %ecx,%ecx
je     1ba52 <TIFFReadDirEntryArrayWithLimit+0x242>
mov    %rax,%r14
lea    -0x38(%rbp),%rdi
callq  8730 <TIFFSwabLong8@plt>
mov    %r14,%rax
xor    %r8d,%r8d
mov    0x10(%r13),%ecx
and    $0x800,%ecx
test   %ecx,%ecx
jne    1bb04 <TIFFReadDirEntryArrayWithLimit+0x2f4>
mov    -0x38(%rbp),%rsi
mov    %eax,%edx
mov    %r13,%rdi
mov    %r8,%r13
lea    -0x48(%rbp),%rcx
callq  1b6a0 <TIFFReadDirEntryDataAndRealloc>
mov    %r13,%rcx
mov    %rax,%r13
mov    %rcx,%rax
jmpq   1bb22 <TIFFReadDirEntryArrayWithLimit+0x312>
mov    -0x48(%rbp),%rdi
lea    0x10(%r14),%rsi
mov    %eax,%edx
mov    %r8,%r13
callq  8790 <_TIFFmemcpy@plt>
mov    %r13,%rax
mov    -0x48(%rbp),%rcx
mov    %rcx,(%r15)
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
leaveq 
retq   
mov    -0x3c(%rbp),%esi
mov    %eax,%edx
mov    %r13,%rdi
mov    %r8,%r13
mov    -0x48(%rbp),%rcx
callq  17d40 <TIFFReadDirEntryData>
mov    %r13,%rcx
mov    %rax,%r13
mov    %rcx,%rax
test   %r13d,%r13d
je     1ba9c <TIFFReadDirEntryArrayWithLimit+0x28c>
mov    -0x48(%rbp),%rdi
callq  8bb0 <_TIFFfree@plt>
mov    %r13,%rax
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
leaveq 
retq   
mov    -0x48(%rbp),%rdi
lea    0x10(%r14),%rsi
mov    %eax,%edx
mov    %r8,%r13
callq  8790 <_TIFFmemcpy@plt>
mov    %r13,%rax
jmp    1ba9c <TIFFReadDirEntryArrayWithLimit+0x28c>
mov    -0x38(%rbp),%rsi
mov    %eax,%edx
mov    %r13,%rdi
mov    %r8,%r13
mov    -0x48(%rbp),%rcx
callq  17d40 <TIFFReadDirEntryData>
mov    %r13,%rcx
mov    %rax,%r13
mov    %rcx,%rax
test   %r13d,%r13d
je     1ba9c <TIFFReadDirEntryArrayWithLimit+0x28c>
mov    -0x48(%rbp),%rdi
callq  8bb0 <_TIFFfree@plt>
mov    %r13,%rax
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)

000000000001bb50 <TIFFReadDirEntryLong8ArrayWithLimit>:
push   %rbp
mov    %rsp,%rbp
sub    $0x80,%rsp
mov    $0x2,%eax
movzwl 0x2(%rsi),%r8d
add    $0xffffffff,%r8d
cmp    $0x10,%r8d
jbe    1bb71 <TIFFReadDirEntryLong8ArrayWithLimit+0x21>
leaveq 
retq   
lea    0x378cc(%rip),%r9        # 53444 <reason.25+0x131e>
movslq (%r9,%r8,4),%r8
add    %r9,%r8
jmpq   *%r8
leaveq 
retq   
lea    -0x74(%rbp),%rax
mov    $0x8,%r9d
lea    -0x70(%rbp),%r8
mov    %rdi,%r10
mov    %rsi,%r11
mov    %r15,-0x58(%rbp)
mov    %rsi,-0x68(%rbp)
mov    %rdi,-0x60(%rbp)
mov    %r11,%rsi
mov    %r10,%rdi
mov    %rdx,%r15
mov    %rax,%rdx
mov    %r9,%r11
mov    %rcx,%r9
mov    %r11,%rcx
callq  1b810 <TIFFReadDirEntryArrayWithLimit>
test   %eax,%eax
jne    1bc46 <TIFFReadDirEntryLong8ArrayWithLimit+0xf6>
mov    -0x70(%rbp),%rdi
test   %rdi,%rdi
je     1bc46 <TIFFReadDirEntryLong8ArrayWithLimit+0xf6>
xor    %eax,%eax
mov    -0x68(%rbp),%rdx
movzwl 0x2(%rdx),%ecx
cmp    $0x10,%cx
je     1bc53 <TIFFReadDirEntryLong8ArrayWithLimit+0x103>
cmp    $0x11,%cx
je     1bc6d <TIFFReadDirEntryLong8ArrayWithLimit+0x11d>
mov    -0x74(%rbp),%eax
shl    $0x3,%eax
mov    %eax,%edi
mov    %r15,-0x20(%rbp)
mov    %rdx,%r15
callq  8440 <_TIFFmalloc@plt>
test   %rax,%rax
je     1bc88 <TIFFReadDirEntryLong8ArrayWithLimit+0x138>
movzwl 0x2(%r15),%ecx
add    $0xffffffff,%ecx
cmp    $0x8,%ecx
jbe    1bc9c <TIFFReadDirEntryLong8ArrayWithLimit+0x14c>
xor    %r15d,%r15d
mov    -0x70(%rbp),%rdi
mov    %r14,-0x68(%rbp)
mov    %rax,%r14
callq  8bb0 <_TIFFfree@plt>
test   %r15d,%r15d
jne    1bcb4 <TIFFReadDirEntryLong8ArrayWithLimit+0x164>
mov    -0x20(%rbp),%rax
mov    %r14,(%rax)
mov    -0x68(%rbp),%r14
xor    %eax,%eax
mov    -0x58(%rbp),%r15
leaveq 
retq   
movq   $0x0,(%r15)
mov    -0x58(%rbp),%r15
leaveq 
retq   
mov    %rdi,(%r15)
mov    -0x60(%rbp),%rcx
mov    0x10(%rcx),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
jne    1bcc9 <TIFFReadDirEntryLong8ArrayWithLimit+0x179>
mov    -0x58(%rbp),%r15
leaveq 
retq   
mov    %r15,-0x8(%rbp)
mov    %r14,-0x68(%rbp)
mov    %r13,-0x20(%rbp)
mov    %rax,%r13
mov    %rdi,%r14
mov    -0x60(%rbp),%r15
jmpq   1bd0a <TIFFReadDirEntryLong8ArrayWithLimit+0x1ba>
mov    -0x70(%rbp),%rdi
callq  8bb0 <_TIFFfree@plt>
mov    $0x7,%eax
mov    -0x58(%rbp),%r15
leaveq 
retq   
lea    0x377e5(%rip),%rdx        # 53488 <reason.25+0x1362>
movslq (%rdx,%rcx,4),%rcx
add    %rdx,%rcx
jmpq   *%rcx
xor    %r15d,%r15d
jmpq   1bc1a <TIFFReadDirEntryLong8ArrayWithLimit+0xca>
mov    %r14,%rdi
callq  8bb0 <_TIFFfree@plt>
mov    %r15,%rax
mov    -0x68(%rbp),%r14
mov    -0x58(%rbp),%r15
leaveq 
retq   
mov    %rax,%r15
mov    -0x74(%rbp),%esi
callq  8930 <TIFFSwabArrayOfLong8@plt>
mov    %r15,%rax
mov    -0x58(%rbp),%r15
leaveq 
retq   
mov    0x10(%r15),%eax
and    $0x80,%eax
test   %eax,%eax
je     1bcf2 <TIFFReadDirEntryLong8ArrayWithLimit+0x1a2>
mov    %r14,%rdi
callq  8730 <TIFFSwabLong8@plt>
mov    (%r14),%rdi
callq  17d00 <TIFFReadDirEntryCheckRangeLong8Slong8>
test   %eax,%eax
jne    1bdde <TIFFReadDirEntryLong8ArrayWithLimit+0x28e>
add    $0x8,%r14
add    $0x1,%r13d
mov    -0x74(%rbp),%eax
cmp    %r13d,%eax
ja     1bcdd <TIFFReadDirEntryLong8ArrayWithLimit+0x18d>
mov    -0x70(%rbp),%rax
mov    -0x8(%rbp),%rcx
mov    %rax,(%rcx)
mov    -0x20(%rbp),%r13
mov    -0x68(%rbp),%r14
xor    %eax,%eax
mov    -0x58(%rbp),%r15
leaveq 
retq   
mov    -0x70(%rbp),%rcx
xor    %edx,%edx
mov    %rax,%rsi
jmpq   1be0c <TIFFReadDirEntryLong8ArrayWithLimit+0x2bc>
mov    -0x70(%rbp),%r15
mov    %r14,-0x68(%rbp)
mov    %r13,-0x60(%rbp)
mov    %rax,-0x10(%rbp)
mov    %r12,-0x30(%rbp)
xor    %r12d,%r12d
jmpq   1be41 <TIFFReadDirEntryLong8ArrayWithLimit+0x2f1>
mov    -0x70(%rbp),%r15
mov    %r14,-0x68(%rbp)
mov    %r13,-0x48(%rbp)
mov    %rax,-0x10(%rbp)
mov    %r12,-0x38(%rbp)
xor    %r12d,%r12d
mov    -0x60(%rbp),%r13
jmpq   1be90 <TIFFReadDirEntryLong8ArrayWithLimit+0x340>
mov    -0x70(%rbp),%r15
mov    %r14,-0x68(%rbp)
mov    %r13,-0x48(%rbp)
mov    %rax,-0x18(%rbp)
mov    %r12,-0x38(%rbp)
mov    %rbx,-0x28(%rbp)
xor    %ebx,%ebx
mov    -0x60(%rbp),%r12
jmpq   1bef2 <TIFFReadDirEntryLong8ArrayWithLimit+0x3a2>
mov    -0x70(%rbp),%r15
mov    %r14,-0x68(%rbp)
mov    %r13,-0x50(%rbp)
mov    %rax,-0x18(%rbp)
mov    %r12,-0x40(%rbp)
xor    %r13d,%r13d
mov    -0x60(%rbp),%r12
jmpq   1bf44 <TIFFReadDirEntryLong8ArrayWithLimit+0x3f4>
mov    -0x70(%rbp),%r15
mov    %r14,-0x68(%rbp)
mov    %r13,-0x50(%rbp)
mov    %rax,-0x28(%rbp)
mov    %r12,-0x40(%rbp)
mov    %rbx,-0x30(%rbp)
xor    %r12d,%r12d
mov    -0x60(%rbp),%rbx
jmpq   1bfa0 <TIFFReadDirEntryLong8ArrayWithLimit+0x450>
mov    %rax,%r15
mov    -0x70(%rbp),%rdi
callq  8bb0 <_TIFFfree@plt>
mov    %r15,%rax
mov    -0x20(%rbp),%r13
mov    -0x68(%rbp),%r14
mov    -0x58(%rbp),%r15
leaveq 
retq   
movzbl (%rcx),%edi
mov    %rdi,(%rsi)
add    $0x1,%rcx
add    $0x8,%rsi
add    $0x1,%edx
mov    -0x74(%rbp),%edi
cmp    %edx,%edi
ja     1bdfb <TIFFReadDirEntryLong8ArrayWithLimit+0x2ab>
xor    %r15d,%r15d
jmpq   1bc1a <TIFFReadDirEntryLong8ArrayWithLimit+0xca>
mov    %rax,%r14
movsbq (%r15),%r13
mov    %r13,%rdi
callq  17ca0 <TIFFReadDirEntryCheckRangeLong8Sbyte>
test   %eax,%eax
jne    1bfc4 <TIFFReadDirEntryLong8ArrayWithLimit+0x474>
mov    %r13,(%r14)
add    $0x1,%r15
lea    0x8(%r14),%rax
add    $0x1,%r12d
mov    -0x74(%rbp),%ecx
cmp    %r12d,%ecx
ja     1be1b <TIFFReadDirEntryLong8ArrayWithLimit+0x2cb>
mov    -0x30(%rbp),%r12
mov    -0x10(%rbp),%rax
mov    -0x60(%rbp),%r13
mov    -0x68(%rbp),%r14
xor    %r15d,%r15d
jmpq   1bc1a <TIFFReadDirEntryLong8ArrayWithLimit+0xca>
mov    0x10(%r13),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
je     1be7d <TIFFReadDirEntryLong8ArrayWithLimit+0x32d>
mov    %rax,%r14
mov    %r15,%rdi
callq  87c0 <TIFFSwabShort@plt>
mov    %r14,%rax
movzwl (%r15),%ecx
mov    %rcx,(%rax)
add    $0x2,%r15
add    $0x8,%rax
add    $0x1,%r12d
mov    -0x74(%rbp),%ecx
cmp    %r12d,%ecx
ja     1be61 <TIFFReadDirEntryLong8ArrayWithLimit+0x311>
mov    -0x38(%rbp),%r12
mov    -0x10(%rbp),%rax
mov    -0x48(%rbp),%r13
mov    -0x68(%rbp),%r14
xor    %r15d,%r15d
jmpq   1bc1a <TIFFReadDirEntryLong8ArrayWithLimit+0xca>
mov    0x10(%r12),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
je     1becd <TIFFReadDirEntryLong8ArrayWithLimit+0x37d>
mov    %rax,%r13
mov    %r15,%rdi
callq  87c0 <TIFFSwabShort@plt>
mov    %r13,%rax
mov    %rax,%r14
movswq (%r15),%r13
mov    %r13,%rdi
callq  17cc0 <TIFFReadDirEntryCheckRangeLong8Sshort>
test   %eax,%eax
jne    1bfdc <TIFFReadDirEntryLong8ArrayWithLimit+0x48c>
mov    %r13,(%r14)
add    $0x2,%r15
lea    0x8(%r14),%rax
add    $0x1,%ebx
mov    -0x74(%rbp),%ecx
cmp    %ebx,%ecx
ja     1beb0 <TIFFReadDirEntryLong8ArrayWithLimit+0x360>
mov    -0x28(%rbp),%rbx
mov    -0x38(%rbp),%r12
mov    -0x18(%rbp),%rax
mov    -0x48(%rbp),%r13
mov    -0x68(%rbp),%r14
xor    %r15d,%r15d
jmpq   1bc1a <TIFFReadDirEntryLong8ArrayWithLimit+0xca>
mov    0x10(%r12),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
je     1bf32 <TIFFReadDirEntryLong8ArrayWithLimit+0x3e2>
mov    %rax,%r14
mov    %r15,%rdi
callq  8480 <TIFFSwabLong@plt>
mov    %r14,%rax
mov    (%r15),%ecx
mov    %rcx,(%rax)
add    $0x4,%r15
add    $0x8,%rax
add    $0x1,%r13d
mov    -0x74(%rbp),%ecx
cmp    %r13d,%ecx
ja     1bf15 <TIFFReadDirEntryLong8ArrayWithLimit+0x3c5>
mov    -0x40(%rbp),%r12
mov    -0x18(%rbp),%rax
mov    -0x50(%rbp),%r13
mov    -0x68(%rbp),%r14
xor    %r15d,%r15d
jmpq   1bc1a <TIFFReadDirEntryLong8ArrayWithLimit+0xca>
mov    0x10(%rbx),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
je     1bf7f <TIFFReadDirEntryLong8ArrayWithLimit+0x42f>
mov    %rax,%r13
mov    %r15,%rdi
callq  8480 <TIFFSwabLong@plt>
mov    %r13,%rax
mov    %rax,%r14
movslq (%r15),%r13
mov    %r13,%rdi
callq  17ce0 <TIFFReadDirEntryCheckRangeLong8Slong>
test   %eax,%eax
jne    1bff8 <TIFFReadDirEntryLong8ArrayWithLimit+0x4a8>
mov    %r13,(%r14)
add    $0x4,%r15
lea    0x8(%r14),%rax
add    $0x1,%r12d
mov    -0x74(%rbp),%ecx
cmp    %r12d,%ecx
ja     1bf64 <TIFFReadDirEntryLong8ArrayWithLimit+0x414>
mov    -0x30(%rbp),%rbx
mov    -0x40(%rbp),%r12
mov    -0x28(%rbp),%rax
mov    -0x50(%rbp),%r13
mov    -0x68(%rbp),%r14
xor    %r15d,%r15d
jmpq   1bc1a <TIFFReadDirEntryLong8ArrayWithLimit+0xca>
mov    %rax,%r15
mov    -0x30(%rbp),%r12
mov    -0x10(%rbp),%rax
mov    -0x60(%rbp),%r13
mov    -0x68(%rbp),%r14
jmpq   1bc1a <TIFFReadDirEntryLong8ArrayWithLimit+0xca>
mov    %rax,%r15
mov    -0x28(%rbp),%rbx
mov    -0x38(%rbp),%r12
mov    -0x18(%rbp),%rax
mov    -0x48(%rbp),%r13
mov    -0x68(%rbp),%r14
jmpq   1bc1a <TIFFReadDirEntryLong8ArrayWithLimit+0xca>
mov    %rax,%r15
mov    -0x30(%rbp),%rbx
mov    -0x40(%rbp),%r12
mov    -0x28(%rbp),%rax
mov    -0x50(%rbp),%r13
mov    -0x68(%rbp),%r14
jmpq   1bc1a <TIFFReadDirEntryLong8ArrayWithLimit+0xca>
nopw   %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

000000000001c020 <TIFFWriteDirectory>:
push   %rbp
mov    %rsp,%rbp
mov    $0x1,%esi
xor    %ecx,%ecx
mov    %rsi,%rdx
callq  1d140 <TIFFWriteDirectorySec>
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)

000000000001c040 <TIFFWriteCustomDirectory>:
push   %rbp
mov    %rsp,%rbp
mov    %rsi,%rcx
xor    %esi,%esi
mov    %rsi,%rdx
callq  1d140 <TIFFWriteDirectorySec>
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

000000000001c060 <TIFFCheckpointDirectory>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x10(%rbp)
mov    %r14,-0x8(%rbp)
mov    0xe8(%rdi),%rax
test   %rax,%rax
je     1c081 <TIFFCheckpointDirectory+0x21>
mov    %rdi,%r14
jmp    1c089 <TIFFCheckpointDirectory+0x29>
mov    %rdi,%r14
callq  86b0 <TIFFSetupStrips@plt>
mov    $0x1,%esi
xor    %edx,%edx
mov    %rdx,%rcx
mov    %r14,%rdi
callq  1d140 <TIFFWriteDirectorySec>
mov    %rax,%r15
mov    0x3d0(%r14),%rcx
mov    0x3b8(%r14),%rdi
mov    $0x2,%edx
xor    %esi,%esi
callq  *%rcx
mov    %rax,%rsi
mov    %r14,%rdi
callq  8a90 <TIFFSetWriteOffset@plt>
mov    %r15,%rax
mov    -0x8(%rbp),%r14
mov    -0x10(%rbp),%r15
leaveq 
retq   
nopl   (%rax)

000000000001c0d0 <TIFFRewriteDirectory>:
push   %rbp
mov    %rsp,%rbp
sub    $0x60,%rsp
mov    0x18(%rdi),%rcx
test   %rcx,%rcx
je     1c130 <TIFFRewriteDirectory+0x60>
xor    %edx,%edx
mov    0x10(%rdi),%eax
and    $0x80000,%eax
test   %eax,%eax
jne    1c137 <TIFFRewriteDirectory+0x67>
mov    $0x4,%esi
mov    0x26c(%rdi),%eax
cmp    %rax,%rcx
je     1c178 <TIFFRewriteDirectory+0xa8>
lea    -0x52(%rbp),%rcx
mov    $0x2,%esi
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rdi,%rbx
mov    %rdx,%r12
mov    %rcx,%r13
mov    %rsi,%r14
mov    %rax,%r15
jmpq   1c215 <TIFFRewriteDirectory+0x145>
callq  8af0 <TIFFWriteDirectory@plt>
leaveq 
retq   
mov    $0x8,%esi
mov    0x270(%rdi),%rax
cmp    %rax,%rcx
je     1c2df <TIFFRewriteDirectory+0x20f>
lea    -0x48(%rbp),%rcx
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rdi,%rbx
mov    %rdx,%r12
mov    %rsi,%r13
mov    %rcx,%r14
mov    %rax,%r15
jmpq   1c3b4 <TIFFRewriteDirectory+0x2e4>
movl   $0x0,0x26c(%rdi)
movq   $0x0,0x18(%rdi)
mov    0x3d0(%rdi),%rax
mov    0x3b8(%rdi),%rcx
mov    %r15,-0x28(%rbp)
mov    %rbx,%r15
mov    %rdi,%rbx
mov    %rcx,%rdi
callq  *%rax
mov    0x3c8(%rbx),%rax
mov    0x3b8(%rbx),%rdi
lea    0x26c(%rbx),%rsi
mov    $0x4,%edx
callq  *%rax
cmp    $0x4,%rax
je     1c335 <TIFFRewriteDirectory+0x265>
xor    %eax,%eax
mov    0x3b8(%rbx),%rdi
mov    (%rbx),%rsi
lea    0x383b5(%rip),%rdx        # 54595 <module.10+0x15>
callq  8a00 <TIFFErrorExt@plt>
mov    %r15,%rbx
xor    %eax,%eax
mov    -0x28(%rbp),%r15
leaveq 
retq   
mov    0x10(%rbx),%eax
and    $0x80,%eax
test   %eax,%eax
je     1c204 <TIFFRewriteDirectory+0x134>
mov    %r15,%rdi
callq  8480 <TIFFSwabLong@plt>
mov    -0x50(%rbp),%r15d
mov    0x18(%rbx),%rax
cmp    %r15,%rax
je     1c440 <TIFFRewriteDirectory+0x370>
mov    %r15d,%esi
mov    %rbx,%rdi
callq  82f0 <_TIFFSeekOK@plt>
test   %eax,%eax
je     1c4c3 <TIFFRewriteDirectory+0x3f3>
mov    0x3c0(%rbx),%rax
mov    0x3b8(%rbx),%rdi
mov    %r13,%rsi
mov    %r14,%rdx
callq  *%rax
cmp    $0x2,%rax
jne    1c4c3 <TIFFRewriteDirectory+0x3f3>
mov    0x10(%rbx),%eax
and    $0x80,%eax
test   %eax,%eax
je     1c25c <TIFFRewriteDirectory+0x18c>
mov    %r13,%rdi
callq  87c0 <TIFFSwabShort@plt>
movzwl -0x52(%rbp),%eax
lea    (%rax,%rax,2),%eax
lea    0x2(%r15,%rax,4),%eax
mov    %eax,%esi
mov    0x3d0(%rbx),%rax
mov    0x3b8(%rbx),%rdi
mov    %r12,%rdx
callq  *%rax
mov    0x3c0(%rbx),%rax
mov    0x3b8(%rbx),%rdi
lea    -0x50(%rbp),%rcx
mov    %rcx,%rsi
mov    $0x4,%edx
mov    %r15,-0x30(%rbp)
mov    %rcx,%r15
callq  *%rax
cmp    $0x4,%rax
je     1c1f0 <TIFFRewriteDirectory+0x120>
xor    %eax,%eax
mov    0x3b8(%rbx),%rdi
lea    0x38315(%rip),%rdx        # 545cf <module.10+0x4f>
lea    0x382bf(%rip),%rsi        # 54580 <module.10>
callq  8a00 <TIFFErrorExt@plt>
mov    %r12,%rax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
movq   $0x0,0x270(%rdi)
movq   $0x0,0x18(%rdi)
mov    0x3d0(%rdi),%rax
mov    0x3b8(%rdi),%rcx
mov    %r15,-0x28(%rbp)
mov    %rbx,%r15
mov    %rdi,%rbx
mov    %rcx,%rdi
callq  *%rax
mov    0x3c8(%rbx),%rax
mov    0x3b8(%rbx),%rdi
lea    0x270(%rbx),%rsi
mov    $0x8,%edx
callq  *%rax
cmp    $0x8,%rax
jne    1c4f8 <TIFFRewriteDirectory+0x428>
mov    %rbx,%rdi
callq  8af0 <TIFFWriteDirectory@plt>
mov    %r15,%rbx
mov    -0x28(%rbp),%r15
leaveq 
retq   
movzwl %ax,%eax
lea    (%rax,%rax,4),%eax
shl    $0x2,%eax
movslq %eax,%rax
lea    0x8(%r15,%rax,1),%rsi
mov    %rsi,-0x30(%rbp)
mov    0x3d0(%rbx),%rax
mov    0x3b8(%rbx),%rdi
mov    %r12,%rdx
callq  *%rax
mov    0x3c0(%rbx),%rax
mov    0x3b8(%rbx),%rdi
lea    -0x40(%rbp),%r15
mov    %r15,%rsi
mov    %r13,%rdx
callq  *%rax
cmp    $0x8,%rax
jne    1c51b <TIFFRewriteDirectory+0x44b>
mov    0x10(%rbx),%eax
and    $0x80,%eax
test   %eax,%eax
je     1c3a6 <TIFFRewriteDirectory+0x2d6>
mov    %r15,%rdi
callq  8730 <TIFFSwabLong8@plt>
mov    -0x40(%rbp),%r15
cmp    0x18(%rbx),%r15
je     1c550 <TIFFRewriteDirectory+0x480>
mov    %rbx,%rdi
mov    %r15,%rsi
callq  82f0 <_TIFFSeekOK@plt>
test   %eax,%eax
je     1c5c5 <TIFFRewriteDirectory+0x4f5>
mov    0x3c0(%rbx),%rax
mov    0x3b8(%rbx),%rdi
mov    %r14,%rsi
mov    %r13,%rdx
callq  *%rax
cmp    $0x8,%rax
jne    1c5c5 <TIFFRewriteDirectory+0x4f5>
mov    0x10(%rbx),%eax
and    $0x80,%eax
test   %eax,%eax
je     1c3fb <TIFFRewriteDirectory+0x32b>
mov    %r14,%rdi
callq  8730 <TIFFSwabLong8@plt>
mov    -0x48(%rbp),%rax
cmp    $0xffff,%rax
jbe    1c346 <TIFFRewriteDirectory+0x276>
xor    %eax,%eax
mov    0x3b8(%rbx),%rdi
lea    0x381ef(%rip),%rdx        # 5460a <module.10+0x8a>
lea    0x3815e(%rip),%rsi        # 54580 <module.10>
callq  8a00 <TIFFErrorExt@plt>
mov    %r12,%rax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
movl   $0x0,-0x4c(%rbp)
movzwl -0x52(%rbp),%eax
lea    (%rax,%rax,2),%eax
mov    -0x30(%rbp),%rcx
lea    0x2(%rcx,%rax,4),%eax
mov    %eax,%esi
mov    0x3d0(%rbx),%rax
mov    0x3b8(%rbx),%rdi
mov    %r12,%rdx
callq  *%rax
mov    0x3c8(%rbx),%rax
mov    0x3b8(%rbx),%rdi
lea    -0x4c(%rbp),%rsi
mov    $0x4,%edx
callq  *%rax
cmp    $0x4,%rax
je     1c5fa <TIFFRewriteDirectory+0x52a>
xor    %eax,%eax
mov    0x3b8(%rbx),%rdi
lea    0x380e2(%rip),%rsi        # 54580 <module.10>
lea    0x38148(%rip),%rdx        # 545ed <module.10+0x6d>
callq  8a00 <TIFFErrorExt@plt>
mov    %r12,%rax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rbx),%rdi
lea    0x380dd(%rip),%rdx        # 545b0 <module.10+0x30>
lea    0x380a6(%rip),%rsi        # 54580 <module.10>
callq  8a00 <TIFFErrorExt@plt>
mov    %r12,%rax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rbx),%rdi
mov    (%rbx),%rsi
lea    0x3808a(%rip),%rdx        # 54595 <module.10+0x15>
callq  8a00 <TIFFErrorExt@plt>
mov    %r15,%rbx
xor    %eax,%eax
mov    -0x28(%rbp),%r15
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rbx),%rdi
lea    0x380a4(%rip),%rdx        # 545cf <module.10+0x4f>
lea    0x3804e(%rip),%rsi        # 54580 <module.10>
callq  8a00 <TIFFErrorExt@plt>
mov    %r12,%rax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
movq   $0x0,-0x38(%rbp)
mov    0x3d0(%rbx),%rax
mov    0x3b8(%rbx),%rdi
mov    %r12,%rdx
mov    -0x30(%rbp),%rsi
callq  *%rax
mov    %r13,%rdx
mov    0x3c8(%rbx),%rax
mov    0x3b8(%rbx),%rdi
lea    -0x38(%rbp),%rsi
callq  *%rax
cmp    $0x8,%rax
je     1c617 <TIFFRewriteDirectory+0x547>
xor    %eax,%eax
mov    0x3b8(%rbx),%rdi
lea    0x37fe0(%rip),%rsi        # 54580 <module.10>
lea    0x38046(%rip),%rdx        # 545ed <module.10+0x6d>
callq  8a00 <TIFFErrorExt@plt>
mov    %r12,%rax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rbx),%rdi
lea    0x37fdb(%rip),%rdx        # 545b0 <module.10+0x30>
lea    0x37fa4(%rip),%rsi        # 54580 <module.10>
callq  8a00 <TIFFErrorExt@plt>
mov    %r12,%rax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
movq   $0x0,0x18(%rbx)
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%r15
jmpq   1c335 <TIFFRewriteDirectory+0x265>
movq   $0x0,0x18(%rbx)
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%r15
jmpq   1c335 <TIFFRewriteDirectory+0x265>
data16 nopw %cs:0x0(%rax,%rax,1)
nop

000000000001c640 <_TIFFRewriteField>:
push   %rbp
mov    %rsp,%rbp
sub    $0xa0,%rsp
mov    %r15,-0x28(%rbp)
mov    %rsi,-0x58(%rbp)
mov    %rdx,-0x50(%rbp)
mov    %rcx,-0x48(%rbp)
mov    %r8,-0x40(%rbp)
movw   $0x0,-0x7c(%rbp)
movw   $0x0,-0x7a(%rbp)
movq   $0x0,-0x78(%rbp)
movq   $0x0,-0x70(%rbp)
movzwl %si,%esi
xor    %edx,%edx
mov    %rdx,-0x30(%rbp)
mov    %rdi,%r15
callq  8680 <TIFFFindField@plt>
lea    0x37fad(%rip),%rsi        # 54640 <module.16>
mov    0x10(%r15),%eax
and    $0x800,%eax
test   %eax,%eax
jne    1c6df <_TIFFRewriteField+0x9f>
mov    0x18(%r15),%rax
test   %rax,%rax
je     1c6fc <_TIFFRewriteField+0xbc>
mov    %rax,%rsi
mov    %r15,%rdi
callq  82f0 <_TIFFSeekOK@plt>
test   %eax,%eax
jne    1c719 <_TIFFRewriteField+0xd9>
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
mov    (%r15),%rcx
lea    0x37ffd(%rip),%rdx        # 546c8 <module.16+0x88>
lea    0x37f6e(%rip),%rsi        # 54640 <module.16>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x28(%rbp),%r15
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
lea    0x37f60(%rip),%rdx        # 5464f <module.16+0xf>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x28(%rbp),%r15
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
lea    0x37f83(%rip),%rdx        # 5468f <module.16+0x4f>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x28(%rbp),%r15
leaveq 
retq   
mov    0x18(%r15),%rax
mov    %rax,-0x38(%rbp)
mov    $0x2,%edx
mov    $0x8,%ecx
mov    0x10(%r15),%eax
and    $0x80000,%eax
test   %eax,%eax
jne    1c77c <_TIFFRewriteField+0x13c>
mov    0x3c0(%r15),%rax
mov    0x3b8(%r15),%rdi
lea    -0x92(%rbp),%rsi
callq  *%rax
cmp    $0x2,%rax
je     1c7c0 <_TIFFRewriteField+0x180>
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
mov    (%r15),%rcx
lea    0x37f88(%rip),%rdx        # 546f0 <module.16+0xb0>
lea    0x37ed1(%rip),%rsi        # 54640 <module.16>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x28(%rbp),%r15
leaveq 
retq   
mov    0x3c0(%r15),%rax
mov    0x3b8(%r15),%rdi
lea    -0x68(%rbp),%rsi
mov    %rcx,%rdx
callq  *%rax
cmp    $0x8,%rax
je     1c814 <_TIFFRewriteField+0x1d4>
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
mov    (%r15),%rcx
lea    0x37f44(%rip),%rdx        # 546f0 <module.16+0xb0>
lea    0x37e8d(%rip),%rsi        # 54640 <module.16>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x28(%rbp),%r15
leaveq 
retq   
mov    0x10(%r15),%eax
and    $0x80,%eax
test   %eax,%eax
je     1c7d9 <_TIFFRewriteField+0x199>
lea    -0x92(%rbp),%rdi
callq  87c0 <TIFFSwabShort@plt>
mov    $0xc,%ecx
mov    -0x38(%rbp),%rax
add    $0x2,%rax
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %rax,%rbx
mov    %rcx,%r14
lea    -0x90(%rbp),%rsi
mov    $0x2,%edx
mov    -0x58(%rbp),%r12
mov    %r14,%r13
jmpq   1c8b1 <_TIFFRewriteField+0x271>
mov    0x10(%r15),%eax
and    $0x80,%eax
test   %eax,%eax
je     1c82a <_TIFFRewriteField+0x1ea>
lea    -0x68(%rbp),%rdi
callq  8730 <TIFFSwabLong8@plt>
movzwl -0x68(%rbp),%eax
mov    %ax,-0x92(%rbp)
mov    $0x14,%ecx
mov    -0x38(%rbp),%rax
add    $0x8,%rax
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %rax,%rbx
mov    %rcx,%r14
lea    -0x90(%rbp),%rsi
mov    $0x2,%edx
mov    -0x58(%rbp),%r12
mov    %r14,%r13
jmp    1c8b1 <_TIFFRewriteField+0x271>
lea    -0x7c(%rbp),%rdi
lea    -0x90(%rbp),%rsi
mov    $0x2,%edx
callq  8720 <memcpy@plt>
mov    0x10(%r15),%eax
and    $0x80,%eax
test   %eax,%eax
je     1c898 <_TIFFRewriteField+0x258>
lea    -0x7c(%rbp),%rdi
callq  87c0 <TIFFSwabShort@plt>
movzwl -0x7c(%rbp),%eax
cmp    %ax,%r12w
je     1c90c <_TIFFRewriteField+0x2cc>
add    %r13,%rbx
lea    -0x90(%rbp),%rsi
mov    $0x2,%edx
movzwl -0x92(%rbp),%eax
test   %ax,%ax
je     1c911 <_TIFFRewriteField+0x2d1>
mov    0x3c0(%r15),%rax
mov    0x3b8(%r15),%rdi
mov    %r14,%rdx
callq  *%rax
cmp    %rax,%r14
je     1c86d <_TIFFRewriteField+0x22d>
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
lea    0x37e31(%rip),%rdx        # 54716 <module.16+0xd6>
mov    (%r15),%rcx
lea    0x37d51(%rip),%rsi        # 54640 <module.16>
callq  8a00 <TIFFErrorExt@plt>
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
xor    %eax,%eax
mov    -0x28(%rbp),%r15
leaveq 
retq   
mov    $0x2,%edx
movzwl -0x7c(%rbp),%eax
cmp    %ax,%r12w
jne    1ca24 <_TIFFRewriteField+0x3e4>
lea    -0x7a(%rbp),%r12
lea    -0x8e(%rbp),%rsi
mov    %r12,%rdi
mov    %r14,-0x38(%rbp)
callq  8720 <memcpy@plt>
mov    0x10(%r15),%eax
and    $0x80,%eax
test   %eax,%eax
je     1c94b <_TIFFRewriteField+0x30b>
mov    %r12,%rdi
callq  87c0 <TIFFSwabShort@plt>
mov    $0x4,%r12d
lea    -0x70(%rbp),%r13
lea    -0x78(%rbp),%r14
mov    0x10(%r15),%eax
and    $0x80000,%eax
test   %eax,%eax
jne    1ca5f <_TIFFRewriteField+0x41f>
lea    -0x60(%rbp),%r13
lea    -0x8c(%rbp),%rsi
mov    %r13,%rdi
mov    %r12,%rdx
callq  8720 <memcpy@plt>
mov    0x10(%r15),%eax
and    $0x80,%eax
test   %eax,%eax
je     1c995 <_TIFFRewriteField+0x355>
mov    %r13,%rdi
callq  8480 <TIFFSwabLong@plt>
mov    -0x60(%rbp),%eax
mov    %rax,-0x78(%rbp)
lea    -0x88(%rbp),%rsi
mov    %r13,%rdi
mov    %r12,%rdx
callq  8720 <memcpy@plt>
mov    0x10(%r15),%eax
and    $0x80,%eax
test   %eax,%eax
je     1c9c3 <_TIFFRewriteField+0x383>
mov    %r13,%rdi
callq  8480 <TIFFSwabLong@plt>
mov    -0x60(%rbp),%eax
mov    %rax,-0x70(%rbp)
mov    -0x50(%rbp),%r14
mov    %r14,%rdi
callq  8140 <TIFFDataWidth@plt>
cmp    $0x8,%eax
je     1cab6 <_TIFFRewriteField+0x476>
mov    %r14,%r12
mov    %r12,%rdi
callq  8140 <TIFFDataWidth@plt>
movslq %eax,%rdx
lea    0x37d64(%rip),%rcx        # 54758 <module.16+0x118>
mov    %r15,%rdi
mov    -0x48(%rbp),%r13
mov    %r13,%rsi
callq  8750 <_TIFFCheckMalloc@plt>
test   %rax,%rax
jne    1cacb <_TIFFRewriteField+0x48b>
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
xor    %eax,%eax
mov    -0x28(%rbp),%r15
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
lea    0x37d09(%rip),%rdx        # 5473d <module.16+0xfd>
mov    (%r15),%rcx
movzwl %r12w,%r8d
lea    0x37bfe(%rip),%rsi        # 54640 <module.16>
callq  8a00 <TIFFErrorExt@plt>
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
xor    %eax,%eax
mov    -0x28(%rbp),%r15
leaveq 
retq   
lea    -0x8c(%rbp),%rsi
mov    %r14,%rdi
mov    $0x8,%r12d
mov    %r12,%rdx
callq  8720 <memcpy@plt>
mov    0x10(%r15),%eax
and    $0x80,%eax
test   %eax,%eax
je     1ca8c <_TIFFRewriteField+0x44c>
mov    %r14,%rdi
callq  8730 <TIFFSwabLong8@plt>
mov    %r12,%rdx
lea    -0x84(%rbp),%rsi
mov    %r13,%rdi
callq  8720 <memcpy@plt>
mov    0x10(%r15),%eax
and    $0x80,%eax
test   %eax,%eax
jne    1cb00 <_TIFFRewriteField+0x4c0>
mov    $0x4,%r12d
jmpq   1c9ca <_TIFFRewriteField+0x38a>
mov    0x10(%r15),%eax
and    $0x80000,%eax
test   %eax,%eax
je     1cb13 <_TIFFRewriteField+0x4d3>
mov    %r14,%r12
jmpq   1c9e2 <_TIFFRewriteField+0x3a2>
cmp    %r12d,%r14d
je     1cb32 <_TIFFRewriteField+0x4f2>
lea    0x37c93(%rip),%rdx        # 5476a <module.16+0x12a>
cmp    $0x9,%r12d
je     1cbae <_TIFFRewriteField+0x56e>
cmp    $0x4,%r12d
jne    1cbc3 <_TIFFRewriteField+0x583>
cmp    $0x10,%r14d
jne    1cbc3 <_TIFFRewriteField+0x583>
mov    -0x40(%rbp),%rsi
xor    %ecx,%ecx
jmpq   1cbee <_TIFFRewriteField+0x5ae>
mov    %r13,%rdi
callq  8730 <TIFFSwabLong8@plt>
mov    $0x4,%r12d
jmpq   1c9ca <_TIFFRewriteField+0x38a>
cmp    $0x10,%r14d
je     1c9e2 <_TIFFRewriteField+0x3a2>
cmp    $0x11,%r14d
jne    1cbfb <_TIFFRewriteField+0x5bb>
mov    $0x9,%r12d
jmpq   1c9e2 <_TIFFRewriteField+0x3a2>
mov    %rax,%r14
mov    %r12,%rdi
callq  8140 <TIFFDataWidth@plt>
movslq %eax,%rdx
imul   %r13,%rdx
mov    %r14,%rdi
mov    -0x40(%rbp),%rsi
callq  8720 <memcpy@plt>
mov    %r12,%rdi
callq  8140 <TIFFDataWidth@plt>
cmp    $0x1,%eax
jle    1cc18 <_TIFFRewriteField+0x5d8>
mov    0x10(%r15),%eax
and    $0x80,%eax
test   %eax,%eax
je     1cc18 <_TIFFRewriteField+0x5d8>
mov    %r12,%rdi
callq  8140 <TIFFDataWidth@plt>
cmp    $0x2,%eax
je     1cc0d <_TIFFRewriteField+0x5cd>
mov    %r12,%rdi
callq  8140 <TIFFDataWidth@plt>
cmp    $0x4,%eax
je     1ccc3 <_TIFFRewriteField+0x683>
mov    %r12,%rdi
callq  8140 <TIFFDataWidth@plt>
cmp    $0x8,%eax
jne    1cc18 <_TIFFRewriteField+0x5d8>
mov    %r14,%rdi
mov    %r13,%rsi
callq  8930 <TIFFSwabArrayOfLong8@plt>
jmp    1cc18 <_TIFFRewriteField+0x5d8>
cmp    $0x11,%r14d
jne    1cae1 <_TIFFRewriteField+0x4a1>
mov    -0x40(%rbp),%r8
xor    %ecx,%ecx
jmpq   1cceb <_TIFFRewriteField+0x6ab>
cmp    $0xd,%r12d
je     1ccf8 <_TIFFRewriteField+0x6b8>
mov    %rax,%r14
jmpq   1cb50 <_TIFFRewriteField+0x510>
mov    (%rsi,%rcx,8),%r8d
mov    %r8d,(%rax,%rcx,4)
mov    (%rsi,%rcx,8),%rdi
cmp    %r8,%rdi
jne    1cd0a <_TIFFRewriteField+0x6ca>
add    $0x1,%rcx
cmp    %rcx,%r13
jg     1cbd5 <_TIFFRewriteField+0x595>
mov    %rax,%r14
jmpq   1cb50 <_TIFFRewriteField+0x510>
cmp    $0x12,%r14d
je     1cd45 <_TIFFRewriteField+0x705>
mov    %r14,%r12
jmpq   1c9e2 <_TIFFRewriteField+0x3a2>
mov    %r14,%rdi
mov    %r13,%rsi
callq  83d0 <TIFFSwabArrayOfShort@plt>
mov    $0x1,%eax
mov    %rax,-0x58(%rbp)
mov    0x10(%r15),%eax
and    $0x80000,%eax
test   %eax,%eax
jne    1cd50 <_TIFFRewriteField+0x710>
mov    %r12,%rdi
callq  8140 <TIFFDataWidth@plt>
movslq %eax,%rax
imul   %r13,%rax
cmp    $0x4,%rax
jg     1cc55 <_TIFFRewriteField+0x615>
lea    0x8(%rbx),%rax
mov    %rax,-0x70(%rbp)
pushq  -0x58(%rbp)
popq   -0x30(%rbp)
mov    -0x78(%rbp),%rax
cmp    %r13,%rax
jne    1cd7c <_TIFFRewriteField+0x73c>
movzwl -0x7a(%rbp),%eax
cmp    %r12w,%ax
jne    1cd7c <_TIFFRewriteField+0x73c>
mov    -0x70(%rbp),%rsi
mov    %r15,%rdi
callq  82f0 <_TIFFSeekOK@plt>
test   %eax,%eax
jne    1ce08 <_TIFFRewriteField+0x7c8>
mov    %r14,%rdi
callq  8bb0 <_TIFFfree@plt>
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
mov    (%r15),%rcx
lea    0x37a29(%rip),%rdx        # 546c8 <module.16+0x88>
lea    0x3799a(%rip),%rsi        # 54640 <module.16>
callq  8a00 <TIFFErrorExt@plt>
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
xor    %eax,%eax
mov    -0x28(%rbp),%r15
leaveq 
retq   
mov    %r14,%rdi
mov    %r13,%rsi
callq  8b70 <TIFFSwabArrayOfLong@plt>
jmpq   1cc18 <_TIFFRewriteField+0x5d8>
movslq (%r8,%rcx,8),%rdi
mov    %edi,(%rax,%rcx,4)
mov    (%r8,%rcx,8),%rsi
cmp    %rdi,%rsi
jne    1ce95 <_TIFFRewriteField+0x855>
add    $0x1,%rcx
cmp    %rcx,%r13
jg     1ccd3 <_TIFFRewriteField+0x693>
mov    %rax,%r14
jmpq   1cb50 <_TIFFRewriteField+0x510>
cmp    $0x12,%r14d
je     1ced0 <_TIFFRewriteField+0x890>
mov    %rax,%r14
jmpq   1cb50 <_TIFFRewriteField+0x510>
mov    %rax,%rdi
mov    %rdx,%rbx
callq  8bb0 <_TIFFfree@plt>
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
mov    %rbx,%rdx
lea    0x37918(%rip),%rsi        # 54640 <module.16>
callq  8a00 <TIFFErrorExt@plt>
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
xor    %eax,%eax
mov    -0x28(%rbp),%r15
leaveq 
retq   
mov    $0xd,%r12d
jmpq   1c9e2 <_TIFFRewriteField+0x3a2>
mov    %r12,%rdi
callq  8140 <TIFFDataWidth@plt>
movslq %eax,%rax
imul   %r13,%rax
cmp    $0x8,%rax
jg     1cc55 <_TIFFRewriteField+0x615>
lea    0xc(%rbx),%rax
mov    %rax,-0x70(%rbp)
pushq  -0x58(%rbp)
popq   -0x30(%rbp)
jmpq   1cc55 <_TIFFRewriteField+0x615>
mov    -0x30(%rbp),%rax
test   %eax,%eax
jg     1cedb <_TIFFRewriteField+0x89b>
mov    0x3d0(%r15),%rax
mov    0x3b8(%r15),%rdi
xor    %esi,%esi
mov    $0x2,%edx
callq  *%rax
mov    %rax,-0x70(%rbp)
mov    0x3c8(%r15),%rax
mov    0x3b8(%r15),%rdi
mov    %r12,%rcx
mov    %r15,-0x58(%rbp)
mov    %rbx,-0x50(%rbp)
mov    %rax,%rbx
mov    %rdi,%r15
mov    %rcx,%rdi
callq  8140 <TIFFDataWidth@plt>
movslq %eax,%rax
mov    %r13,%rdx
imul   %rax,%rdx
mov    %r15,%rdi
mov    %r14,%rsi
callq  *%rbx
mov    %rax,%rbx
mov    %r12,%rdi
callq  8140 <TIFFDataWidth@plt>
movslq %eax,%rax
imul   %rax,%r13
cmp    %rbx,%r13
jne    1cff8 <_TIFFRewriteField+0x9b8>
mov    -0x50(%rbp),%rbx
mov    -0x58(%rbp),%r15
lea    -0x70(%rbp),%r13
jmpq   1cef9 <_TIFFRewriteField+0x8b9>
mov    0x3c8(%r15),%rbx
mov    0x3b8(%r15),%rdi
mov    %r12,%rax
mov    %r15,-0x58(%rbp)
mov    %rdi,%r15
mov    %rax,%rdi
callq  8140 <TIFFDataWidth@plt>
movslq %eax,%rax
mov    %r13,%rdx
imul   %rax,%rdx
mov    %r15,%rdi
mov    %r14,%rsi
callq  *%rbx
mov    %r12,%rdi
mov    %rax,%rbx
callq  8140 <TIFFDataWidth@plt>
movslq %eax,%rax
imul   %rax,%r13
cmp    %rbx,%r13
je     1d038 <_TIFFRewriteField+0x9f8>
mov    %r14,%rdi
callq  8bb0 <_TIFFfree@plt>
xor    %eax,%eax
mov    -0x58(%rbp),%rcx
mov    0x3b8(%rcx),%rdi
lea    0x3777c(%rip),%rdx        # 545ed <module.10+0x6d>
lea    0x377c8(%rip),%rsi        # 54640 <module.16>
callq  8a00 <TIFFErrorExt@plt>
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
xor    %eax,%eax
mov    -0x28(%rbp),%r15
leaveq 
retq   
mov    %rax,%rdi
mov    %rdx,%rbx
callq  8bb0 <_TIFFfree@plt>
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
mov    %rbx,%rdx
lea    0x3778d(%rip),%rsi        # 54640 <module.16>
callq  8a00 <TIFFErrorExt@plt>
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
xor    %eax,%eax
mov    -0x28(%rbp),%r15
leaveq 
retq   
mov    -0x40(%rbp),%rsi
xor    %ecx,%ecx
jmpq   1cbee <_TIFFRewriteField+0x5ae>
mov    %r12,%rdi
callq  8140 <TIFFDataWidth@plt>
movslq %eax,%rdx
imul   %r13,%rdx
lea    -0x70(%rbp),%r13
mov    %r13,%rdi
mov    %r14,%rsi
callq  8720 <memcpy@plt>
mov    %r14,%rdi
callq  8bb0 <_TIFFfree@plt>
mov    %r12w,-0x7a(%rbp)
lea    -0x8e(%rbp),%r12
mov    %r12,%rdi
lea    -0x7a(%rbp),%rsi
mov    $0x2,%edx
callq  8720 <memcpy@plt>
mov    0x10(%r15),%eax
and    $0x80,%eax
test   %eax,%eax
je     1cf33 <_TIFFRewriteField+0x8f3>
mov    %r12,%rdi
callq  87c0 <TIFFSwabShort@plt>
mov    0x10(%r15),%eax
and    $0x80000,%eax
test   %eax,%eax
jne    1d05b <_TIFFRewriteField+0xa1b>
mov    -0x78(%rbp),%eax
mov    %eax,-0x5c(%rbp)
lea    -0x5c(%rbp),%r13
lea    -0x8c(%rbp),%r14
mov    %r14,%rdi
mov    %r13,%rsi
mov    $0x4,%r12d
mov    %r12,%rdx
callq  8720 <memcpy@plt>
mov    0x10(%r15),%eax
and    $0x80,%eax
test   %eax,%eax
je     1cf7e <_TIFFRewriteField+0x93e>
mov    %r14,%rdi
callq  8480 <TIFFSwabLong@plt>
mov    -0x70(%rbp),%eax
mov    %eax,-0x5c(%rbp)
mov    %r12,%rdx
mov    %r13,%rsi
lea    -0x88(%rbp),%r14
mov    %r14,%rdi
callq  8720 <memcpy@plt>
mov    0x10(%r15),%eax
and    $0x80,%eax
test   %eax,%eax
je     1cfae <_TIFFRewriteField+0x96e>
mov    %r14,%rdi
callq  8480 <TIFFSwabLong@plt>
mov    %rbx,%rsi
mov    %r15,%rdi
callq  82f0 <_TIFFSeekOK@plt>
test   %eax,%eax
jne    1d0bf <_TIFFRewriteField+0xa7f>
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
mov    (%r15),%rcx
lea    0x376f4(%rip),%rdx        # 546c8 <module.16+0x88>
lea    0x37665(%rip),%rsi        # 54640 <module.16>
callq  8a00 <TIFFErrorExt@plt>
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
xor    %eax,%eax
mov    -0x28(%rbp),%r15
leaveq 
retq   
mov    %r14,%rdi
callq  8bb0 <_TIFFfree@plt>
xor    %eax,%eax
mov    -0x58(%rbp),%rcx
mov    0x3b8(%rcx),%rdi
lea    0x375d9(%rip),%rdx        # 545ed <module.10+0x6d>
lea    0x37625(%rip),%rsi        # 54640 <module.16>
callq  8a00 <TIFFErrorExt@plt>
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
xor    %eax,%eax
mov    -0x28(%rbp),%r15
leaveq 
retq   
mov    %r14,%rdi
callq  8bb0 <_TIFFfree@plt>
mov    $0x1,%eax
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x28(%rbp),%r15
leaveq 
retq   
lea    -0x8c(%rbp),%r14
mov    %r14,%rdi
mov    $0x8,%r12d
mov    %r12,%rdx
lea    -0x78(%rbp),%rsi
callq  8720 <memcpy@plt>
mov    0x10(%r15),%eax
and    $0x80,%eax
test   %eax,%eax
je     1d08c <_TIFFRewriteField+0xa4c>
mov    %r14,%rdi
callq  8730 <TIFFSwabLong8@plt>
mov    %r12,%rdx
mov    %r13,%rsi
lea    -0x84(%rbp),%r14
mov    %r14,%rdi
callq  8720 <memcpy@plt>
mov    0x10(%r15),%eax
and    $0x80,%eax
test   %eax,%eax
je     1cfae <_TIFFRewriteField+0x96e>
mov    %r14,%rdi
callq  8730 <TIFFSwabLong8@plt>
jmpq   1cfae <_TIFFRewriteField+0x96e>
mov    0x3c8(%r15),%rax
mov    0x3b8(%r15),%rdi
mov    -0x38(%rbp),%rbx
mov    %rbx,%rdx
lea    -0x90(%rbp),%rsi
callq  *%rax
cmp    %rax,%rbx
jne    1d0fd <_TIFFRewriteField+0xabd>
mov    $0x1,%eax
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x28(%rbp),%r15
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
lea    0x37687(%rip),%rdx        # 54794 <module.16+0x154>
mov    (%r15),%rcx
lea    0x37529(%rip),%rsi        # 54640 <module.16>
callq  8a00 <TIFFErrorExt@plt>
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
xor    %eax,%eax
mov    -0x28(%rbp),%r15
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nop

000000000001d140 <TIFFWriteDirectorySec>:
push   %rbp
mov    %rsp,%rbp
sub    $0xa0,%rsp
mov    $0x1,%eax
movslq 0xc(%rdi),%r8
test   %r8d,%r8d
jne    1d15b <TIFFWriteDirectorySec+0x1b>
leaveq 
retq   
mov    %rdi,%rax
mov    %r13,-0x20(%rbp)
mov    %r14,-0x28(%rbp)
mov    %r15,-0x30(%rbp)
mov    %rcx,-0x58(%rbp)
mov    %rbx,%r13
mov    %rdi,%rbx
mov    %rax,%rdi
mov    %rdx,%r14
mov    %rsi,%r15
callq  8c70 <_TIFFFillStriles@plt>
lea    0x37633(%rip),%rcx        # 547bc <module.26>
xor    %r10d,%r10d
mov    %r10,-0x38(%rbp)
lea    -0x98(%rbp),%r8
mov    $0x100,%edx
mov    $0x101,%esi
mov    $0x142,%r11d
mov    $0x143,%edi
mov    $0x11a,%r9d
lea    0xb4(%rbx),%rax
mov    %rax,-0x50(%rbp)
lea    0xd0(%rbx),%rax
mov    %rax,-0x48(%rbp)
lea    0x108(%rbx),%rax
mov    %rax,-0x40(%rbp)
test   %r14d,%r14d
jne    1d223 <TIFFWriteDirectorySec+0xe3>
mov    %r14,-0x8(%rbp)
mov    %r13,-0x10(%rbp)
mov    %r12,-0x18(%rbp)
mov    %r10,%r13
mov    %r8,%r14
mov    $0x102,%ecx
mov    $0xfe,%eax
mov    $0x11e,%r8d
mov    $0x11b,%r10d
mov    %r13,%r12
test   %r15d,%r15d
movl   $0x0,-0x98(%rbp)
jne    1d2bb <TIFFWriteDirectorySec+0x17b>
mov    %r15,-0x60(%rbp)
mov    -0x38(%rbp),%r15
jmpq   1d8a5 <TIFFWriteDirectorySec+0x765>
mov    %r14,-0x8(%rbp)
mov    0x10(%rbx),%eax
mov    %rax,%rdx
and    $0x1000,%edx
test   %edx,%edx
jne    1d8f2 <TIFFWriteDirectorySec+0x7b2>
mov    %r12,%r14
mov    %r10,%r12
mov    %rbx,%rdi
callq  *0x328(%rbx)
mov    0x390(%rbx),%rax
test   %rax,%rax
jg     1d91c <TIFFWriteDirectorySec+0x7dc>
mov    0x10(%rbx),%eax
and    $0x200,%eax
test   %eax,%eax
jne    1d96d <TIFFWriteDirectorySec+0x82d>
mov    0x10(%rbx),%eax
and    $0xffffffaf,%eax
mov    %eax,0x10(%rbx)
mov    %r13,-0x10(%rbp)
mov    %r14,-0x18(%rbp)
mov    $0x143,%edi
mov    $0x11a,%r9d
mov    $0x101,%esi
mov    $0x142,%r11d
mov    $0x100,%edx
lea    -0x98(%rbp),%r14
mov    $0x102,%ecx
mov    $0xfe,%eax
mov    $0x11e,%r8d
mov    $0x11b,%r10d
mov    %r12,%r13
jmpq   1d203 <TIFFWriteDirectorySec+0xc3>
mov    %r15,-0x60(%rbp)
mov    0x38(%rbx),%r15
and    $0x2,%r15
test   %r15,%r15
je     1d333 <TIFFWriteDirectorySec+0x1f3>
mov    %rdx,%rcx
mov    %rsi,%r12
mov    %r11,%r15
mov    0x58(%rbx),%r8d
mov    %rbx,%rdi
mov    %r14,%rsi
mov    %r13,%rdx
callq  1f300 <TIFFWriteDirectoryTagShortLong>
test   %eax,%eax
je     1d9be <TIFFWriteDirectorySec+0x87e>
mov    0x5c(%rbx),%r8d
mov    %rbx,%rdi
mov    %r14,%rsi
mov    %r13,%rdx
mov    %r12,%rcx
callq  1f300 <TIFFWriteDirectoryTagShortLong>
test   %eax,%eax
je     1d9c9 <TIFFWriteDirectorySec+0x889>
mov    %r15,%r11
mov    $0x143,%edi
mov    $0x11a,%r9d
xor    %r12d,%r12d
mov    $0x102,%ecx
mov    $0xfe,%eax
mov    $0x11e,%r8d
mov    $0x11b,%r10d
mov    0x38(%rbx),%rdx
and    $0x4,%rdx
test   %rdx,%rdx
je     1d39c <TIFFWriteDirectorySec+0x25c>
mov    %r11,%rcx
mov    %rdi,%r12
mov    %r9,%r15
mov    0x64(%rbx),%r8d
mov    %rbx,%rdi
mov    %r14,%rsi
mov    %r13,%rdx
callq  1f300 <TIFFWriteDirectoryTagShortLong>
test   %eax,%eax
je     1d9d4 <TIFFWriteDirectorySec+0x894>
mov    0x68(%rbx),%r8d
mov    %rbx,%rdi
mov    %r14,%rsi
mov    %r13,%rdx
mov    %r12,%rcx
callq  1f300 <TIFFWriteDirectoryTagShortLong>
test   %eax,%eax
je     1d9df <TIFFWriteDirectorySec+0x89f>
mov    %r15,%r9
xor    %r12d,%r12d
mov    $0x102,%ecx
mov    $0xfe,%eax
mov    $0x11e,%r8d
mov    $0x11b,%r10d
mov    0x38(%rbx),%rdx
and    $0x8,%rdx
test   %rdx,%rdx
je     1d409 <TIFFWriteDirectorySec+0x2c9>
mov    %r9,%rcx
mov    %r10,%r12
mov    %r8,%r15
movss  0xa0(%rbx),%xmm0
cvtss2sd %xmm0,%xmm0
mov    %rbx,%rdi
mov    %r14,%rsi
mov    %r13,%rdx
callq  1f240 <TIFFWriteDirectoryTagRational>
test   %eax,%eax
je     1d9ea <TIFFWriteDirectorySec+0x8aa>
movss  0xa4(%rbx),%xmm0
cvtss2sd %xmm0,%xmm0
mov    %rbx,%rdi
mov    %r14,%rsi
mov    %r13,%rdx
mov    %r12,%rcx
callq  1f240 <TIFFWriteDirectoryTagRational>
test   %eax,%eax
je     1d9f5 <TIFFWriteDirectorySec+0x8b5>
mov    %r15,%r8
xor    %r12d,%r12d
mov    $0x102,%ecx
mov    $0xfe,%eax
mov    0x38(%rbx),%rdx
and    $0x10,%rdx
test   %rdx,%rdx
je     1d471 <TIFFWriteDirectorySec+0x331>
mov    %rcx,%r12
mov    %r8,%rcx
mov    %rax,%r15
movss  0xac(%rbx),%xmm0
cvtss2sd %xmm0,%xmm0
mov    %rbx,%rdi
mov    %r14,%rsi
mov    %r13,%rdx
callq  1f240 <TIFFWriteDirectoryTagRational>
test   %eax,%eax
je     1da00 <TIFFWriteDirectorySec+0x8c0>
movss  0xb0(%rbx),%xmm0
cvtss2sd %xmm0,%xmm0
mov    %rbx,%rdi
mov    %r14,%rsi
mov    %r13,%rdx
mov    $0x11f,%ecx
callq  1f240 <TIFFWriteDirectoryTagRational>
test   %eax,%eax
je     1da0b <TIFFWriteDirectorySec+0x8cb>
mov    %r15,%rax
mov    %r12,%rcx
xor    %r12d,%r12d
mov    0x38(%rbx),%rdx
and    $0x20,%rdx
test   %rdx,%rdx
jne    1da16 <TIFFWriteDirectorySec+0x8d6>
mov    0x38(%rbx),%rax
and    $0x40,%rax
test   %rax,%rax
je     1d4aa <TIFFWriteDirectorySec+0x36a>
movzwl 0x74(%rbx),%r8d
mov    %rbx,%rdi
mov    %r14,%rsi
mov    %r13,%rdx
callq  1f0b0 <TIFFWriteDirectoryTagShortPerSample>
test   %eax,%eax
je     1da3e <TIFFWriteDirectorySec+0x8fe>
mov    0x38(%rbx),%rax
and    $0x80,%rax
test   %rax,%rax
jne    1da46 <TIFFWriteDirectorySec+0x906>
mov    0x38(%rbx),%rax
and    $0x100,%rax
test   %rax,%rax
jne    1da6e <TIFFWriteDirectorySec+0x92e>
mov    0x38(%rbx),%rax
and    $0x200,%rax
test   %rax,%rax
jne    1da96 <TIFFWriteDirectorySec+0x956>
mov    0x38(%rbx),%rax
and    $0x400,%rax
test   %rax,%rax
je     1d512 <TIFFWriteDirectorySec+0x3d2>
movzwl 0x7e(%rbx),%r8d
mov    %rbx,%rdi
mov    %r14,%rsi
mov    %r13,%rdx
mov    $0x10a,%ecx
callq  1f070 <TIFFWriteDirectoryTagShort>
test   %eax,%eax
je     1dabe <TIFFWriteDirectorySec+0x97e>
mov    0x38(%rbx),%rax
and    $0x8000,%rax
test   %rax,%rax
je     1d544 <TIFFWriteDirectorySec+0x404>
movzwl 0x80(%rbx),%r8d
mov    %rbx,%rdi
mov    %r14,%rsi
mov    %r13,%rdx
mov    $0x112,%ecx
callq  1f070 <TIFFWriteDirectoryTagShort>
test   %eax,%eax
je     1dac6 <TIFFWriteDirectorySec+0x986>
mov    0x38(%rbx),%rax
and    $0x10000,%rax
test   %rax,%rax
jne    1dace <TIFFWriteDirectorySec+0x98e>
mov    0x38(%rbx),%rax
and    $0x20000,%rax
test   %rax,%rax
je     1d588 <TIFFWriteDirectorySec+0x448>
mov    0x84(%rbx),%r8d
mov    %rbx,%rdi
mov    %r14,%rsi
mov    %r13,%rdx
mov    $0x116,%ecx
callq  1f300 <TIFFWriteDirectoryTagShortLong>
test   %eax,%eax
je     1daf9 <TIFFWriteDirectorySec+0x9b9>
mov    0x38(%rbx),%rax
and    $0x40000,%rax
test   %rax,%rax
je     1d5ba <TIFFWriteDirectorySec+0x47a>
movzwl 0x88(%rbx),%r8d
mov    %rbx,%rdi
mov    %r14,%rsi
mov    %r13,%rdx
mov    $0x118,%ecx
callq  1f0b0 <TIFFWriteDirectoryTagShortPerSample>
test   %eax,%eax
je     1db01 <TIFFWriteDirectorySec+0x9c1>
mov    0x38(%rbx),%rax
and    $0x80000,%rax
test   %rax,%rax
jne    1db09 <TIFFWriteDirectorySec+0x9c9>
mov    0x38(%rbx),%rax
and    $0x100000,%rax
test   %rax,%rax
jne    1db34 <TIFFWriteDirectorySec+0x9f4>
mov    0x38(%rbx),%rax
and    $0x400000,%rax
test   %rax,%rax
jne    1db5f <TIFFWriteDirectorySec+0xa1f>
mov    0x38(%rbx),%rax
and    $0x800000,%rax
test   %rax,%rax
jne    1db8a <TIFFWriteDirectorySec+0xa4a>
mov    $0x2,%r15d
mov    0x38(%rbx),%rax
and    $0x1000000,%rax
test   %rax,%rax
jne    1dbba <TIFFWriteDirectorySec+0xa7a>
mov    0x38(%rbx),%rax
and    $0x2000000,%rax
test   %rax,%rax
jne    1dbfb <TIFFWriteDirectorySec+0xabb>
mov    0x38(%rbx),%rax
and    $0x4000000,%rax
test   %rax,%rax
jne    1dc45 <TIFFWriteDirectorySec+0xb05>
mov    $0x80000000,%eax
and    0x38(%rbx),%rax
test   %rax,%rax
je     1d6ab <TIFFWriteDirectorySec+0x56b>
movzwl 0xd4(%rbx),%eax
test   %ax,%ax
je     1d6ab <TIFFWriteDirectorySec+0x56b>
xor    %eax,%eax
mov    %rbx,%rdi
mov    $0x152,%r12d
mov    %r12,%rsi
lea    -0x92(%rbp),%rdx
lea    -0x90(%rbp),%rcx
callq  8390 <TIFFGetFieldDefaulted@plt>
mov    %r12,%rcx
movzwl -0x92(%rbp),%r8d
mov    -0x90(%rbp),%r9
mov    %rbx,%rdi
mov    %r14,%rsi
mov    %r13,%rdx
callq  1f090 <TIFFWriteDirectoryTagShortArray>
test   %eax,%eax
je     1dc63 <TIFFWriteDirectorySec+0xb23>
xor    %r12d,%r12d
mov    0x40(%rbx),%rax
and    $0x1,%rax
test   %rax,%rax
jne    1dc6e <TIFFWriteDirectorySec+0xb2e>
mov    0x40(%rbx),%rax
and    $0x2,%rax
test   %rax,%rax
jne    1dc96 <TIFFWriteDirectorySec+0xb56>
mov    0x40(%rbx),%rax
and    $0x4,%rax
test   %rax,%rax
jne    1dcc8 <TIFFWriteDirectorySec+0xb88>
mov    0x40(%rbx),%rax
and    $0x8,%rax
test   %rax,%rax
je     1d70a <TIFFWriteDirectorySec+0x5ca>
mov    0x60(%rbx),%r8d
mov    %rbx,%rdi
mov    %r14,%rsi
mov    %r13,%rdx
mov    $0x80e5,%ecx
callq  1f1a0 <TIFFWriteDirectoryTagLong>
test   %eax,%eax
je     1dcfa <TIFFWriteDirectorySec+0xbba>
mov    0x40(%rbx),%rax
and    $0x10,%rax
test   %rax,%rax
je     1d736 <TIFFWriteDirectorySec+0x5f6>
mov    0x6c(%rbx),%r8d
mov    %rbx,%rdi
mov    %r14,%rsi
mov    %r13,%rdx
mov    $0x80e6,%ecx
callq  1f1a0 <TIFFWriteDirectoryTagLong>
test   %eax,%eax
je     1dd02 <TIFFWriteDirectorySec+0xbc2>
mov    0x40(%rbx),%rax
and    $0x20,%rax
test   %rax,%rax
je     1d765 <TIFFWriteDirectorySec+0x625>
mov    %rbx,%rdi
mov    %r14,%rsi
mov    %r13,%rdx
mov    $0x141,%ecx
mov    %r15,%r8
mov    -0x48(%rbp),%r9
callq  1f090 <TIFFWriteDirectoryTagShortArray>
test   %eax,%eax
je     1dd0a <TIFFWriteDirectorySec+0xbca>
mov    0x40(%rbx),%rax
and    $0x80,%rax
test   %rax,%rax
je     1d796 <TIFFWriteDirectorySec+0x656>
mov    %r15,%r8
mov    %rbx,%rdi
mov    %r14,%rsi
mov    %r13,%rdx
mov    $0x212,%ecx
mov    -0x40(%rbp),%r9
callq  1f090 <TIFFWriteDirectoryTagShortArray>
test   %eax,%eax
je     1dd12 <TIFFWriteDirectorySec+0xbd2>
mov    0x40(%rbx),%rax
and    $0x100,%rax
test   %rax,%rax
jne    1dd1a <TIFFWriteDirectorySec+0xbda>
mov    0x40(%rbx),%rax
and    $0x200,%rax
test   %rax,%rax
je     1d7e0 <TIFFWriteDirectorySec+0x6a0>
mov    0x128(%rbx),%r9
mov    %rbx,%rdi
mov    %r14,%rsi
mov    %r13,%rdx
mov    $0x214,%ecx
mov    $0x6,%r8d
callq  1f260 <TIFFWriteDirectoryTagRationalArray>
test   %eax,%eax
je     1dd45 <TIFFWriteDirectorySec+0xc05>
mov    0x40(%rbx),%rax
and    $0x1000,%rax
test   %rax,%rax
je     1d805 <TIFFWriteDirectorySec+0x6c5>
mov    %rbx,%rdi
mov    %r14,%rsi
mov    %r13,%rdx
callq  1f6e0 <TIFFWriteDirectoryTagTransferfunction>
test   %eax,%eax
je     1dd4d <TIFFWriteDirectorySec+0xc0d>
mov    0x40(%rbx),%rax
and    $0x4000,%rax
test   %rax,%rax
jne    1dd55 <TIFFWriteDirectorySec+0xc15>
mov    0x40(%rbx),%rax
and    $0x20000,%rax
test   %rax,%rax
jne    1dd86 <TIFFWriteDirectorySec+0xc46>
lea    -0x70(%rbp),%r9
lea    -0x74(%rbp),%r11
lea    -0x78(%rbp),%rdx
lea    -0x7a(%rbp),%r10
lea    -0x88(%rbp),%r8
mov    $0x1,%eax
jmpq   1de2e <TIFFWriteDirectorySec+0xcee>
mov    %r12d,%eax
lea    (%rax,%rax,2),%rax
shl    $0x3,%rax
add    0x148(%rbx),%rax
mov    (%rax),%rdx
movzwl (%rdx),%ecx
mov    0x8(%rax),%r8d
mov    0x8(%rdx),%edx
add    $0xffffffff,%edx
cmp    $0x11,%edx
ja     1de4d <TIFFWriteDirectorySec+0xd0d>
lea    0x36cba(%rip),%rsi        # 54538 <module.110+0x1d9>
movslq (%rsi,%rdx,4),%rdx
add    %rsi,%rdx
jmpq   *%rdx
mov    0x10(%rax),%r9
mov    %rbx,%rdi
mov    %r14,%rsi
mov    %r13,%rdx
callq  1f460 <TIFFWriteDirectoryTagIfdIfd8Array>
test   %eax,%eax
je     1e097 <TIFFWriteDirectorySec+0xf57>
add    $0x1,%r12d
mov    0x140(%rbx),%eax
cmp    %r12d,%eax
ja     1d84c <TIFFWriteDirectorySec+0x70c>
test   %r13,%r13
je     1e0a2 <TIFFWriteDirectorySec+0xf62>
mov    -0x60(%rbp),%rax
test   %eax,%eax
je     1e1d6 <TIFFWriteDirectorySec+0x1096>
mov    0x40(%rbx),%rax
and    $0x20000,%rax
test   %rax,%rax
je     1e1d6 <TIFFWriteDirectorySec+0x1096>
mov    0x2a0(%rbx),%rax
test   %rax,%rax
jne    1e1d6 <TIFFWriteDirectorySec+0x1096>
xor    %eax,%eax
mov    %r13,%rcx
jmpq   1e257 <TIFFWriteDirectorySec+0x1117>
and    $0xffffefff,%eax
mov    %eax,0x10(%rbx)
mov    %r12,%r14
mov    %rcx,%r12
mov    0x2f0(%rbx),%rax
mov    %rbx,%rdi
callq  *%rax
test   %eax,%eax
je     1e285 <TIFFWriteDirectorySec+0x1145>
xor    %r12d,%r12d
jmpq   1d241 <TIFFWriteDirectorySec+0x101>
mov    0x10(%rbx),%eax
and    $0x40,%eax
test   %eax,%eax
je     1d25a <TIFFWriteDirectorySec+0x11a>
mov    %rbx,%rdi
callq  86e0 <TIFFFlushData1@plt>
test   %eax,%eax
jne    1d25a <TIFFWriteDirectorySec+0x11a>
xor    %eax,%eax
mov    0x3b8(%rbx),%rdi
lea    0x36eb3(%rip),%rdx        # 547fd <module.26+0x41>
lea    0x36e6b(%rip),%rsi        # 547bc <module.26>
callq  8a00 <TIFFErrorExt@plt>
mov    %r12,%rax
mov    %r14,%r12
mov    %r13,%rbx
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r13
leaveq 
retq   
mov    0x368(%rbx),%rdi
test   %rdi,%rdi
je     1d26a <TIFFWriteDirectorySec+0x12a>
callq  8bb0 <_TIFFfree@plt>
movq   $0x0,0x368(%rbx)
movq   $0x0,0x390(%rbx)
movq   $0x0,0x370(%rbx)
movq   $0x0,0x378(%rbx)
movq   $0x0,0x380(%rbx)
jmpq   1d26a <TIFFWriteDirectorySec+0x12a>
xor    %r12d,%r12d
mov    %r12,%r14
jmpq   1e2d2 <TIFFWriteDirectorySec+0x1192>
xor    %r12d,%r12d
mov    %r12,%r14
jmpq   1e2d2 <TIFFWriteDirectorySec+0x1192>
xor    %r12d,%r12d
mov    %r12,%r14
jmpq   1e2d2 <TIFFWriteDirectorySec+0x1192>
xor    %r12d,%r12d
mov    %r12,%r14
jmpq   1e2d2 <TIFFWriteDirectorySec+0x1192>
xor    %r12d,%r12d
mov    %r12,%r14
jmpq   1e2d2 <TIFFWriteDirectorySec+0x1192>
xor    %r12d,%r12d
mov    %r12,%r14
jmpq   1e2d2 <TIFFWriteDirectorySec+0x1192>
xor    %r12d,%r12d
mov    %r12,%r14
jmpq   1e2d2 <TIFFWriteDirectorySec+0x1192>
xor    %r12d,%r12d
mov    %r12,%r14
jmpq   1e2d2 <TIFFWriteDirectorySec+0x1192>
mov    %rcx,%r15
mov    %rax,%rcx
mov    0x70(%rbx),%r8d
mov    %rbx,%rdi
mov    %r14,%rsi
mov    %r13,%rdx
callq  1f1a0 <TIFFWriteDirectoryTagLong>
test   %eax,%eax
je     1e301 <TIFFWriteDirectorySec+0x11c1>
mov    %r15,%rcx
jmpq   1d482 <TIFFWriteDirectorySec+0x342>
mov    %r12,%r14
jmpq   1e2d2 <TIFFWriteDirectorySec+0x1192>
movzwl 0x78(%rbx),%r8d
mov    %rbx,%rdi
mov    %r14,%rsi
mov    %r13,%rdx
mov    $0x103,%ecx
callq  1f070 <TIFFWriteDirectoryTagShort>
test   %eax,%eax
jne    1d4bd <TIFFWriteDirectorySec+0x37d>
mov    %r12,%r14
jmpq   1e2d2 <TIFFWriteDirectorySec+0x1192>
movzwl 0x7a(%rbx),%r8d
mov    %rbx,%rdi
mov    %r14,%rsi
mov    %r13,%rdx
mov    $0x106,%ecx
callq  1f070 <TIFFWriteDirectoryTagShort>
test   %eax,%eax
jne    1d4d0 <TIFFWriteDirectorySec+0x390>
mov    %r12,%r14
jmpq   1e2d2 <TIFFWriteDirectorySec+0x1192>
movzwl 0x7c(%rbx),%r8d
mov    %rbx,%rdi
mov    %r14,%rsi
mov    %r13,%rdx
mov    $0x107,%ecx
callq  1f070 <TIFFWriteDirectoryTagShort>
test   %eax,%eax
jne    1d4e3 <TIFFWriteDirectorySec+0x3a3>
mov    %r12,%r14
jmpq   1e2d2 <TIFFWriteDirectorySec+0x1192>
mov    %r12,%r14
jmpq   1e2d2 <TIFFWriteDirectorySec+0x1192>
mov    %r12,%r14
jmpq   1e2d2 <TIFFWriteDirectorySec+0x1192>
movzwl 0x82(%rbx),%r8d
mov    %rbx,%rdi
mov    %r14,%rsi
mov    %r13,%rdx
mov    $0x115,%ecx
callq  1f070 <TIFFWriteDirectoryTagShort>
test   %eax,%eax
jne    1d557 <TIFFWriteDirectorySec+0x417>
mov    %r12,%r14
jmpq   1e2d2 <TIFFWriteDirectorySec+0x1192>
mov    %r12,%r14
jmpq   1e2d2 <TIFFWriteDirectorySec+0x1192>
mov    %r12,%r14
jmpq   1e2d2 <TIFFWriteDirectorySec+0x1192>
movzwl 0x8a(%rbx),%r8d
mov    %rbx,%rdi
mov    %r14,%rsi
mov    %r13,%rdx
mov    $0x119,%ecx
callq  1f0b0 <TIFFWriteDirectoryTagShortPerSample>
test   %eax,%eax
jne    1d5cd <TIFFWriteDirectorySec+0x48d>
mov    %r12,%r14
jmpq   1e2d2 <TIFFWriteDirectorySec+0x1192>
movzwl 0xaa(%rbx),%r8d
mov    %rbx,%rdi
mov    %r14,%rsi
mov    %r13,%rdx
mov    $0x11c,%ecx
callq  1f070 <TIFFWriteDirectoryTagShort>
test   %eax,%eax
jne    1d5e0 <TIFFWriteDirectorySec+0x4a0>
mov    %r12,%r14
jmpq   1e2d2 <TIFFWriteDirectorySec+0x1192>
movzwl 0xa8(%rbx),%r8d
mov    %rbx,%rdi
mov    %r14,%rsi
mov    %r13,%rdx
mov    $0x128,%ecx
callq  1f070 <TIFFWriteDirectoryTagShort>
test   %eax,%eax
jne    1d5f3 <TIFFWriteDirectorySec+0x4b3>
mov    %r12,%r14
jmpq   1e2d2 <TIFFWriteDirectorySec+0x1192>
mov    %rbx,%rdi
mov    %r14,%rsi
mov    %r13,%rdx
mov    $0x129,%ecx
mov    $0x2,%r15d
mov    %r15,%r8
mov    -0x50(%rbp),%r9
callq  1f090 <TIFFWriteDirectoryTagShortArray>
test   %eax,%eax
jne    1d60c <TIFFWriteDirectorySec+0x4cc>
mov    %r12,%r14
jmpq   1e2d2 <TIFFWriteDirectorySec+0x1192>
mov    0x10(%rbx),%eax
and    $0x400,%eax
test   %eax,%eax
jne    1e306 <TIFFWriteDirectorySec+0x11c6>
mov    0xe4(%rbx),%r8d
mov    0xf0(%rbx),%r9
mov    %rbx,%rdi
mov    %r14,%rsi
mov    %r13,%rdx
mov    $0x117,%ecx
callq  1f330 <TIFFWriteDirectoryTagLongLong8Array>
test   %eax,%eax
jne    1d61f <TIFFWriteDirectorySec+0x4df>
mov    %r12,%r14
jmpq   1e2d2 <TIFFWriteDirectorySec+0x1192>
mov    0x10(%rbx),%eax
and    $0x400,%eax
test   %eax,%eax
jne    1e334 <TIFFWriteDirectorySec+0x11f4>
mov    0xe8(%rbx),%r9
test   %r9,%r9
je     1d632 <TIFFWriteDirectorySec+0x4f2>
mov    0xe4(%rbx),%r8d
mov    %rbx,%rdi
mov    %r14,%rsi
mov    %r13,%rdx
mov    $0x111,%ecx
callq  1f330 <TIFFWriteDirectoryTagLongLong8Array>
test   %eax,%eax
jne    1d632 <TIFFWriteDirectorySec+0x4f2>
mov    %r12,%r14
jmpq   1e2d2 <TIFFWriteDirectorySec+0x1192>
mov    %rbx,%rdi
mov    %r14,%rsi
mov    %r13,%rdx
callq  1f590 <TIFFWriteDirectoryTagColormap>
test   %eax,%eax
jne    1d645 <TIFFWriteDirectorySec+0x505>
mov    %r12,%r14
jmpq   1e2d2 <TIFFWriteDirectorySec+0x1192>
xor    %r12d,%r12d
mov    %r12,%r14
jmpq   1e2d2 <TIFFWriteDirectorySec+0x1192>
movzwl 0x76(%rbx),%r8d
mov    %rbx,%rdi
mov    %r14,%rsi
mov    %r13,%rdx
mov    $0x153,%ecx
callq  1f0b0 <TIFFWriteDirectoryTagShortPerSample>
test   %eax,%eax
jne    1d6bc <TIFFWriteDirectorySec+0x57c>
mov    %r12,%r14
jmpq   1e2d2 <TIFFWriteDirectorySec+0x1192>
movzwl 0x82(%rbx),%r8d
mov    0x90(%rbx),%r9
mov    %rbx,%rdi
mov    %r14,%rsi
mov    %r13,%rdx
mov    $0x154,%ecx
callq  1eb50 <TIFFWriteDirectoryTagSampleformatArray>
test   %eax,%eax
jne    1d6cd <TIFFWriteDirectorySec+0x58d>
mov    %r12,%r14
jmpq   1e2d2 <TIFFWriteDirectorySec+0x1192>
movzwl 0x82(%rbx),%r8d
mov    0x98(%rbx),%r9
mov    %rbx,%rdi
mov    %r14,%rsi
mov    %r13,%rdx
mov    $0x155,%ecx
callq  1eb50 <TIFFWriteDirectoryTagSampleformatArray>
test   %eax,%eax
jne    1d6de <TIFFWriteDirectorySec+0x59e>
mov    %r12,%r14
jmpq   1e2d2 <TIFFWriteDirectorySec+0x1192>
mov    %r12,%r14
jmpq   1e2d2 <TIFFWriteDirectorySec+0x1192>
mov    %r12,%r14
jmpq   1e2d2 <TIFFWriteDirectorySec+0x1192>
mov    %r12,%r14
jmpq   1e2d2 <TIFFWriteDirectorySec+0x1192>
mov    %r12,%r14
jmpq   1e2d2 <TIFFWriteDirectorySec+0x1192>
movzwl 0x10c(%rbx),%r8d
mov    %rbx,%rdi
mov    %r14,%rsi
mov    %r13,%rdx
mov    $0x213,%ecx
callq  1f070 <TIFFWriteDirectoryTagShort>
test   %eax,%eax
jne    1d7a9 <TIFFWriteDirectorySec+0x669>
mov    %r12,%r14
jmpq   1e2d2 <TIFFWriteDirectorySec+0x1192>
mov    %r12,%r14
jmpq   1e2d2 <TIFFWriteDirectorySec+0x1192>
mov    %r12,%r14
jmpq   1e2d2 <TIFFWriteDirectorySec+0x1192>
mov    0x130(%rbx),%r8d
mov    0x138(%rbx),%r9
mov    %rbx,%rdi
mov    %r14,%rsi
mov    %r13,%rdx
mov    $0x14d,%ecx
callq  1eff0 <TIFFWriteDirectoryTagAscii>
test   %eax,%eax
jne    1d818 <TIFFWriteDirectorySec+0x6d8>
mov    %r12,%r14
jmpq   1e2d2 <TIFFWriteDirectorySec+0x1192>
mov    %rbx,%rdi
mov    %r14,%rsi
mov    %r13,%rdx
callq  1f8f0 <TIFFWriteDirectoryTagSubifd>
test   %eax,%eax
je     1e365 <TIFFWriteDirectorySec+0x1225>
lea    -0x70(%rbp),%r9
lea    -0x74(%rbp),%r11
lea    -0x78(%rbp),%rdx
lea    -0x7a(%rbp),%r10
lea    -0x88(%rbp),%r8
mov    $0x1,%eax
jmp    1de2e <TIFFWriteDirectorySec+0xcee>
mov    0x8(%r15),%eax
cmp    $0x4,%eax
jne    1e36d <TIFFWriteDirectorySec+0x122d>
movswq 0x4(%r15),%rax
cmp    $0x1,%ax
jne    1e38c <TIFFWriteDirectorySec+0x124c>
movzbl 0x1b(%r15),%eax
test   %al,%al
jne    1e3ab <TIFFWriteDirectorySec+0x126b>
xor    %eax,%eax
mov    (%r15),%esi
mov    %rbx,%rdi
callq  8230 <TIFFGetField@plt>
movzwl (%r15),%ecx
mov    -0x78(%rbp),%r8d
mov    %rbx,%rdi
mov    %r14,%rsi
mov    %r13,%rdx
callq  1f1a0 <TIFFWriteDirectoryTagLong>
test   %eax,%eax
je     1e3ca <TIFFWriteDirectorySec+0x128a>
lea    -0x70(%rbp),%r9
lea    -0x74(%rbp),%r11
lea    -0x78(%rbp),%rdx
lea    -0x7a(%rbp),%r10
lea    -0x88(%rbp),%r8
mov    $0x1,%eax
add    $0x1,%r12d
mov    0x3f8(%rbx),%rsi
mov    %r12d,%ecx
cmp    %rcx,%rsi
ja     1e3d5 <TIFFWriteDirectorySec+0x1295>
mov    -0x38(%rbp),%r15
xor    %r12d,%r12d
jmpq   1d8a5 <TIFFWriteDirectorySec+0x765>
mov    $0x30a,%edx
lea    0x369e9(%rip),%rsi        # 54842 <module.26+0x86>
lea    0x369f1(%rip),%rcx        # 54851 <module.26+0x95>
lea    0x36ad8(%rip),%rdi        # 5493f <module.26+0x183>
callq  8490 <__assert_fail@plt>
mov    0x10(%rax),%r9
mov    %rbx,%rdi
mov    %r14,%rsi
mov    %r13,%rdx
callq  1eff0 <TIFFWriteDirectoryTagAscii>
test   %eax,%eax
jne    1d8a1 <TIFFWriteDirectorySec+0x761>
xor    %r12d,%r12d
mov    %r12,%r14
jmpq   1e2d2 <TIFFWriteDirectorySec+0x1192>
mov    0x10(%rax),%r9
mov    %rbx,%rdi
mov    %r14,%rsi
mov    %r13,%rdx
callq  1f010 <TIFFWriteDirectoryTagUndefinedArray>
test   %eax,%eax
jne    1d8a1 <TIFFWriteDirectorySec+0x761>
xor    %r12d,%r12d
mov    %r12,%r14
jmpq   1e2d2 <TIFFWriteDirectorySec+0x1192>
mov    0x10(%rax),%r9
mov    %rbx,%rdi
mov    %r14,%rsi
mov    %r13,%rdx
callq  1f030 <TIFFWriteDirectoryTagByteArray>
test   %eax,%eax
jne    1d8a1 <TIFFWriteDirectorySec+0x761>
xor    %r12d,%r12d
mov    %r12,%r14
jmpq   1e2d2 <TIFFWriteDirectorySec+0x1192>
mov    0x10(%rax),%r9
mov    %rbx,%rdi
mov    %r14,%rsi
mov    %r13,%rdx
callq  1f050 <TIFFWriteDirectoryTagSbyteArray>
test   %eax,%eax
jne    1d8a1 <TIFFWriteDirectorySec+0x761>
xor    %r12d,%r12d
mov    %r12,%r14
jmpq   1e2d2 <TIFFWriteDirectorySec+0x1192>
mov    0x10(%rax),%r9
mov    %rbx,%rdi
mov    %r14,%rsi
mov    %r13,%rdx
callq  1f090 <TIFFWriteDirectoryTagShortArray>
test   %eax,%eax
jne    1d8a1 <TIFFWriteDirectorySec+0x761>
xor    %r12d,%r12d
mov    %r12,%r14
jmpq   1e2d2 <TIFFWriteDirectorySec+0x1192>
mov    0x10(%rax),%r9
mov    %rbx,%rdi
mov    %r14,%rsi
mov    %r13,%rdx
callq  1f180 <TIFFWriteDirectoryTagSshortArray>
test   %eax,%eax
jne    1d8a1 <TIFFWriteDirectorySec+0x761>
xor    %r12d,%r12d
mov    %r12,%r14
jmpq   1e2d2 <TIFFWriteDirectorySec+0x1192>
mov    0x10(%rax),%r9
mov    %rbx,%rdi
mov    %r14,%rsi
mov    %r13,%rdx
callq  1f1c0 <TIFFWriteDirectoryTagLongArray>
test   %eax,%eax
jne    1d8a1 <TIFFWriteDirectorySec+0x761>
xor    %r12d,%r12d
mov    %r12,%r14
jmpq   1e2d2 <TIFFWriteDirectorySec+0x1192>
mov    0x10(%rax),%r9
mov    %rbx,%rdi
mov    %r14,%rsi
mov    %r13,%rdx
callq  1f1e0 <TIFFWriteDirectoryTagSlongArray>
test   %eax,%eax
jne    1d8a1 <TIFFWriteDirectorySec+0x761>
xor    %r12d,%r12d
mov    %r12,%r14
jmpq   1e2d2 <TIFFWriteDirectorySec+0x1192>
mov    0x10(%rax),%r9
mov    %rbx,%rdi
mov    %r14,%rsi
mov    %r13,%rdx
callq  1f200 <TIFFWriteDirectoryTagLong8Array>
test   %eax,%eax
jne    1d8a1 <TIFFWriteDirectorySec+0x761>
xor    %r12d,%r12d
mov    %r12,%r14
jmpq   1e2d2 <TIFFWriteDirectorySec+0x1192>
mov    0x10(%rax),%r9
mov    %rbx,%rdi
mov    %r14,%rsi
mov    %r13,%rdx
callq  1f220 <TIFFWriteDirectoryTagSlong8Array>
test   %eax,%eax
jne    1d8a1 <TIFFWriteDirectorySec+0x761>
xor    %r12d,%r12d
mov    %r12,%r14
jmpq   1e2d2 <TIFFWriteDirectorySec+0x1192>
mov    0x10(%rax),%r9
mov    %rbx,%rdi
mov    %r14,%rsi
mov    %r13,%rdx
callq  1f260 <TIFFWriteDirectoryTagRationalArray>
test   %eax,%eax
jne    1d8a1 <TIFFWriteDirectorySec+0x761>
xor    %r12d,%r12d
mov    %r12,%r14
jmpq   1e2d2 <TIFFWriteDirectorySec+0x1192>
mov    0x10(%rax),%r9
mov    %rbx,%rdi
mov    %r14,%rsi
mov    %r13,%rdx
callq  1f280 <TIFFWriteDirectoryTagSrationalArray>
test   %eax,%eax
jne    1d8a1 <TIFFWriteDirectorySec+0x761>
xor    %r12d,%r12d
mov    %r12,%r14
jmpq   1e2d2 <TIFFWriteDirectorySec+0x1192>
mov    0x10(%rax),%r9
mov    %rbx,%rdi
mov    %r14,%rsi
mov    %r13,%rdx
callq  1f2a0 <TIFFWriteDirectoryTagFloatArray>
test   %eax,%eax
jne    1d8a1 <TIFFWriteDirectorySec+0x761>
xor    %r12d,%r12d
mov    %r12,%r14
jmpq   1e2d2 <TIFFWriteDirectorySec+0x1192>
mov    0x10(%rax),%r9
mov    %rbx,%rdi
mov    %r14,%rsi
mov    %r13,%rdx
callq  1f2c0 <TIFFWriteDirectoryTagDoubleArray>
test   %eax,%eax
jne    1d8a1 <TIFFWriteDirectorySec+0x761>
xor    %r12d,%r12d
mov    %r12,%r14
jmpq   1e2d2 <TIFFWriteDirectorySec+0x1192>
mov    0x10(%rax),%r9
mov    %rbx,%rdi
mov    %r14,%rsi
mov    %r13,%rdx
callq  1f2e0 <TIFFWriteDirectoryTagIfdArray>
test   %eax,%eax
jne    1d8a1 <TIFFWriteDirectorySec+0x761>
xor    %r12d,%r12d
mov    %r12,%r14
jmpq   1e2d2 <TIFFWriteDirectorySec+0x1192>
xor    %r12d,%r12d
mov    %r12,%r14
jmpq   1e2d2 <TIFFWriteDirectorySec+0x1192>
mov    -0x98(%rbp),%eax
lea    (%rax,%rax,2),%rdi
shl    $0x3,%rdi
callq  8440 <_TIFFmalloc@plt>
test   %rax,%rax
je     1e4b2 <TIFFWriteDirectorySec+0x1372>
mov    -0x60(%rbp),%r15
test   %r15d,%r15d
jne    1e4dc <TIFFWriteDirectorySec+0x139c>
mov    %rax,%r13
mov    0x3d0(%rbx),%rcx
mov    0x3b8(%rbx),%rdi
xor    %r12d,%r12d
mov    %r12,%rsi
mov    $0x2,%edx
callq  *%rcx
add    $0x1,%rax
and    $0xfffffffffffffffe,%rax
mov    %rax,0x18(%rbx)
mov    -0x58(%rbp),%rcx
test   %rcx,%rcx
je     1e105 <TIFFWriteDirectorySec+0xfc5>
mov    0x18(%rbx),%rax
mov    %rax,(%rcx)
mov    0x10(%rbx),%eax
and    $0x80000,%eax
test   %eax,%eax
jne    1e4f4 <TIFFWriteDirectorySec+0x13b4>
mov    -0x98(%rbp),%eax
lea    (%rax,%rax,2),%eax
lea    0x6(,%rax,4),%eax
mov    %rax,-0x38(%rbp)
mov    %eax,%edx
mov    %rdx,%rcx
add    0x18(%rbx),%rcx
mov    %rcx,0x290(%rbx)
mov    0x10(%rbx),%eax
and    $0x80000,%eax
test   %eax,%eax
jne    1e14e <TIFFWriteDirectorySec+0x100e>
mov    %ecx,%eax
mov    %rax,0x290(%rbx)
mov    0x290(%rbx),%rcx
cmp    0x18(%rbx),%rcx
jb     1e2b3 <TIFFWriteDirectorySec+0x1173>
cmp    %rcx,%rdx
ja     1e2b3 <TIFFWriteDirectorySec+0x1173>
mov    %rcx,%rax
and    $0x1,%rax
test   %rax,%rax
je     1e17f <TIFFWriteDirectorySec+0x103f>
lea    0x1(%rcx),%rax
mov    %rax,0x290(%rbx)
test   %r15d,%r15d
jne    1e509 <TIFFWriteDirectorySec+0x13c9>
mov    $0x143,%edi
mov    $0x11a,%r9d
mov    $0x101,%esi
mov    $0x142,%r11d
mov    $0x100,%edx
mov    $0x102,%ecx
mov    $0xfe,%eax
mov    $0x11e,%r8d
mov    $0x11b,%r10d
jmpq   1d203 <TIFFWriteDirectorySec+0xc3>
lea    (%rax,%rax,4),%eax
shl    $0x2,%eax
mov    %eax,%ecx
mov    0x18(%rbx),%rax
lea    0x14(%rcx,%rax,1),%rax
mov    %rax,0x2a0(%rbx)
mov    %r15d,%r14d
mov    %r14,%rdi
callq  8440 <_TIFFmalloc@plt>
test   %rax,%rax
je     1e550 <TIFFWriteDirectorySec+0x1410>
mov    0x10(%rbx),%ecx
and    $0x80000,%ecx
test   %ecx,%ecx
jne    1e577 <TIFFWriteDirectorySec+0x1437>
movzwl -0x98(%rbp),%ecx
mov    %cx,(%rax)
mov    0x10(%rbx),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
je     1e220 <TIFFWriteDirectorySec+0x10e0>
mov    %rax,%r12
mov    %r12,%rdi
callq  87c0 <TIFFSwabShort@plt>
mov    %r12,%rax
lea    -0x64(%rbp),%rsi
mov    $0x4,%r15d
lea    0x2(%rax),%r12
mov    %r13,-0x60(%rbp)
mov    %rax,-0x50(%rbp)
mov    %r14,-0x58(%rbp)
xor    %r14d,%r14d
jmpq   1e662 <TIFFWriteDirectorySec+0x1522>
movzwl (%rcx),%edx
cmp    $0x14a,%dx
je     1e6e7 <TIFFWriteDirectorySec+0x15a7>
add    $0x18,%rcx
add    $0x1,%eax
mov    -0x98(%rbp),%edx
cmp    %eax,%edx
jne    1e242 <TIFFWriteDirectorySec+0x1102>
xor    %eax,%eax
mov    0x3b8(%rbx),%rdi
lea    0x366fe(%rip),%rdx        # 5496f <module.26+0x1b3>
lea    0x36544(%rip),%rsi        # 547bc <module.26>
callq  8a00 <TIFFErrorExt@plt>
xor    %r12d,%r12d
mov    %r12,%r14
jmp    1e2d2 <TIFFWriteDirectorySec+0x1192>
xor    %eax,%eax
mov    0x3b8(%rbx),%rdi
mov    %r12,%rsi
lea    0x3653a(%rip),%rdx        # 547d2 <module.26+0x16>
callq  8a00 <TIFFErrorExt@plt>
mov    %r13,%rbx
mov    %r14,%r12
xor    %eax,%eax
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r13
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rbx),%rdi
lea    0x3668c(%rip),%rdx        # 5494f <module.26+0x193>
lea    0x364f2(%rip),%rsi        # 547bc <module.26>
callq  8a00 <TIFFErrorExt@plt>
mov    %r12,%r14
test   %r13,%r13
je     1e2df <TIFFWriteDirectorySec+0x119f>
mov    %r13,%rdi
callq  8bb0 <_TIFFfree@plt>
test   %r14,%r14
jne    1e715 <TIFFWriteDirectorySec+0x15d5>
mov    %r12,%rax
mov    -0x18(%rbp),%r12
mov    -0x10(%rbp),%rbx
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r13
leaveq 
retq   
mov    %r12,%r14
jmp    1e2d2 <TIFFWriteDirectorySec+0x1192>
mov    0xe4(%rbx),%r8d
mov    0xf0(%rbx),%r9
mov    %rbx,%rdi
mov    %r14,%rsi
mov    %r13,%rdx
mov    $0x145,%ecx
callq  1f330 <TIFFWriteDirectoryTagLongLong8Array>
test   %eax,%eax
jne    1d61f <TIFFWriteDirectorySec+0x4df>
mov    %r12,%r14
jmp    1e2d2 <TIFFWriteDirectorySec+0x1192>
mov    0xe4(%rbx),%r8d
mov    0xe8(%rbx),%r9
mov    %rbx,%rdi
mov    %r14,%rsi
mov    %r13,%rdx
mov    $0x144,%ecx
callq  1f330 <TIFFWriteDirectoryTagLongLong8Array>
test   %eax,%eax
jne    1d632 <TIFFWriteDirectorySec+0x4f2>
mov    %r12,%r14
jmpq   1e2d2 <TIFFWriteDirectorySec+0x1192>
mov    %r12,%r14
jmpq   1e2d2 <TIFFWriteDirectorySec+0x1192>
lea    0x3655b(%rip),%rdi        # 548cf <module.26+0x113>
mov    $0x2a7,%edx
lea    0x364c2(%rip),%rsi        # 54842 <module.26+0x86>
lea    0x364ca(%rip),%rcx        # 54851 <module.26+0x95>
callq  8490 <__assert_fail@plt>
mov    $0x2a8,%edx
lea    0x364aa(%rip),%rsi        # 54842 <module.26+0x86>
lea    0x364b2(%rip),%rcx        # 54851 <module.26+0x95>
lea    0x36513(%rip),%rdi        # 548b9 <module.26+0xfd>
callq  8490 <__assert_fail@plt>
mov    $0x2a9,%edx
lea    0x3648b(%rip),%rsi        # 54842 <module.26+0x86>
lea    0x36493(%rip),%rcx        # 54851 <module.26+0x95>
lea    0x364c4(%rip),%rdi        # 54889 <module.26+0xcd>
callq  8490 <__assert_fail@plt>
xor    %r12d,%r12d
mov    %r12,%r14
jmpq   1e2d2 <TIFFWriteDirectorySec+0x1192>
mov    0x3f0(%rbx),%rsi
mov    %r12d,%ecx
mov    (%rsi,%rcx,8),%r15
movzwl 0x18(%r15),%esi
cmp    $0x41,%si
jbe    1de2a <TIFFWriteDirectorySec+0xcea>
movzwl 0x18(%r15),%ecx
and    $0x1f,%ecx
mov    %rax,%rdi
shl    %cl,%rdi
shr    $0x5,%esi
movslq %esi,%rcx
and    0x38(%rbx,%rcx,8),%rdi
test   %rdi,%rdi
je     1de2a <TIFFWriteDirectorySec+0xcea>
mov    0x14(%r15),%eax
cmp    $0x5,%eax
jbe    1e736 <TIFFWriteDirectorySec+0x15f6>
cmp    $0x6,%eax
je     1ddba <TIFFWriteDirectorySec+0xc7a>
cmp    $0x28,%eax
jne    1e7bd <TIFFWriteDirectorySec+0x167d>
mov    0x8(%r15),%eax
cmp    $0x7,%eax
jne    1e7dc <TIFFWriteDirectorySec+0x169c>
movswq 0x4(%r15),%rax
cmp    $0xfffd,%ax
jne    1e7fb <TIFFWriteDirectorySec+0x16bb>
movzbl 0x1b(%r15),%eax
cmp    $0x1,%al
jne    1e81a <TIFFWriteDirectorySec+0x16da>
mov    %r9,%rcx
mov    %r11,%rdx
xor    %eax,%eax
mov    (%r15),%esi
mov    %rbx,%rdi
callq  8230 <TIFFGetField@plt>
movzwl (%r15),%ecx
mov    -0x74(%rbp),%r8d
mov    -0x70(%rbp),%r9
mov    %rbx,%rdi
mov    %r14,%rsi
mov    %r13,%rdx
callq  1f010 <TIFFWriteDirectoryTagUndefinedArray>
test   %eax,%eax
je     1e839 <TIFFWriteDirectorySec+0x16f9>
lea    -0x70(%rbp),%r9
lea    -0x74(%rbp),%r11
lea    -0x78(%rbp),%rdx
lea    -0x7a(%rbp),%r10
lea    -0x88(%rbp),%r8
mov    $0x1,%eax
jmpq   1de2a <TIFFWriteDirectorySec+0xcea>
xor    %eax,%eax
mov    0x3b8(%rbx),%rdi
lea    0x362fa(%rip),%rsi        # 547bc <module.26>
lea    0x36478(%rip),%rdx        # 54941 <module.26+0x185>
callq  8a00 <TIFFErrorExt@plt>
xor    %r12d,%r12d
mov    %r12,%r13
mov    %r13,%r14
jmpq   1e2d2 <TIFFWriteDirectorySec+0x1192>
mov    0x18(%rbx),%rcx
test   %rcx,%rcx
je     1e844 <TIFFWriteDirectorySec+0x1704>
mov    %rax,%r13
xor    %r12d,%r12d
jmpq   1e0f5 <TIFFWriteDirectorySec+0xfb5>
mov    -0x98(%rbp),%eax
lea    (%rax,%rax,4),%eax
lea    0x10(,%rax,4),%eax
jmpq   1e125 <TIFFWriteDirectorySec+0xfe5>
movzwl 0x280(%rbx),%eax
add    $0x1,%eax
mov    %ax,0x280(%rbx)
mov    $0x143,%edi
mov    $0x11a,%r9d
mov    $0x101,%esi
mov    $0x142,%r11d
mov    $0x100,%edx
mov    $0x102,%ecx
mov    $0xfe,%eax
mov    $0x11e,%r8d
mov    $0x11b,%r10d
jmpq   1d203 <TIFFWriteDirectorySec+0xc3>
xor    %eax,%eax
mov    0x3b8(%rbx),%rdi
lea    0x3625c(%rip),%rsi        # 547bc <module.26>
lea    0x363da(%rip),%rdx        # 54941 <module.26+0x185>
callq  8a00 <TIFFErrorExt@plt>
xor    %r12d,%r12d
mov    %r12,%r14
jmpq   1e2d2 <TIFFWriteDirectorySec+0x1192>
mov    -0x98(%rbp),%ecx
mov    %rcx,(%rax)
mov    0x10(%rbx),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
je     1e59b <TIFFWriteDirectorySec+0x145b>
mov    %rax,%r12
mov    %r12,%rdi
callq  8730 <TIFFSwabLong8@plt>
mov    %r12,%rax
mov    $0x8,%r15d
lea    0x8(%rax),%r12
mov    %r13,-0x60(%rbp)
mov    %rax,-0x50(%rbp)
mov    %r14,-0x58(%rbp)
xor    %r14d,%r14d
jmpq   1e8e9 <TIFFWriteDirectorySec+0x17a9>
movzwl 0x0(%r13),%eax
mov    %ax,(%r12)
mov    0x10(%rbx),%eax
and    $0x80,%eax
test   %eax,%eax
je     1e5e3 <TIFFWriteDirectorySec+0x14a3>
mov    %rsi,%r15
mov    %r12,%rdi
callq  87c0 <TIFFSwabShort@plt>
mov    %r15,%rsi
mov    $0x4,%r15d
movzwl 0x2(%r13),%eax
mov    %ax,0x2(%r12)
mov    0x10(%rbx),%eax
and    $0x80,%eax
test   %eax,%eax
je     1e610 <TIFFWriteDirectorySec+0x14d0>
mov    %rsi,%r15
lea    0x2(%r12),%rdi
callq  87c0 <TIFFSwabShort@plt>
mov    %r15,%rsi
mov    $0x4,%r15d
mov    0x8(%r13),%eax
mov    %eax,-0x64(%rbp)
mov    %r15,%rdx
lea    0x4(%r12),%rdi
mov    %rdi,%r15
callq  8790 <_TIFFmemcpy@plt>
mov    0x10(%rbx),%eax
and    $0x80,%eax
test   %eax,%eax
je     1e63b <TIFFWriteDirectorySec+0x14fb>
mov    %r15,%rdi
callq  8480 <TIFFSwabLong@plt>
lea    0x8(%r12),%rdi
lea    0x10(%r13),%rsi
mov    $0x4,%r15d
mov    %r15,%rdx
callq  8790 <_TIFFmemcpy@plt>
add    $0xc,%r12
add    $0x18,%r13
add    $0x1,%r14d
lea    -0x64(%rbp),%rsi
mov    -0x98(%rbp),%eax
cmp    %r14d,%eax
ja     1e5b9 <TIFFWriteDirectorySec+0x1479>
mov    0x20(%rbx),%eax
mov    %eax,-0x64(%rbp)
mov    0x10(%rbx),%eax
and    $0x80,%eax
test   %eax,%eax
je     1e691 <TIFFWriteDirectorySec+0x1551>
mov    %rsi,%r13
mov    %r13,%rdi
callq  8480 <TIFFSwabLong@plt>
mov    %r13,%rsi
mov    %r15,%rdx
mov    %r12,%rdi
callq  8790 <_TIFFmemcpy@plt>
mov    -0x60(%rbp),%rdi
callq  8bb0 <_TIFFfree@plt>
lea    0x362da(%rip),%r12        # 54986 <module.26+0x1ca>
mov    0x18(%rbx),%rsi
mov    %rbx,%rdi
callq  82f0 <_TIFFSeekOK@plt>
test   %eax,%eax
jne    1e924 <TIFFWriteDirectorySec+0x17e4>
xor    %eax,%eax
mov    0x3b8(%rbx),%rdi
mov    %r12,%rdx
lea    0x360e9(%rip),%rsi        # 547bc <module.26>
callq  8a00 <TIFFErrorExt@plt>
mov    -0x50(%rbp),%r14
xor    %r12d,%r12d
mov    %r12,%r13
jmpq   1e2d2 <TIFFWriteDirectorySec+0x1192>
mov    0x10(%rbx),%ecx
and    $0x80000,%ecx
test   %ecx,%ecx
jne    1e1be <TIFFWriteDirectorySec+0x107e>
lea    (%rax,%rax,2),%eax
shl    $0x2,%eax
mov    %eax,%ecx
mov    0x18(%rbx),%rax
lea    0xa(%rcx,%rax,1),%rax
mov    %rax,0x2a0(%rbx)
jmpq   1e1d6 <TIFFWriteDirectorySec+0x1096>
mov    %r14,%rdi
callq  8bb0 <_TIFFfree@plt>
mov    %r12,%rax
mov    -0x18(%rbp),%r12
mov    -0x10(%rbp),%rbx
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r13
leaveq 
retq   
cmp    $0x1,%eax
je     1e96e <TIFFWriteDirectorySec+0x182e>
cmp    $0x4,%eax
jne    1e7bd <TIFFWriteDirectorySec+0x167d>
mov    0x8(%r15),%eax
cmp    $0x3,%eax
jne    1ea01 <TIFFWriteDirectorySec+0x18c1>
movswq 0x4(%r15),%rax
cmp    $0x1,%ax
jne    1ea20 <TIFFWriteDirectorySec+0x18e0>
movzbl 0x1b(%r15),%eax
test   %al,%al
jne    1ea3f <TIFFWriteDirectorySec+0x18ff>
mov    %r10,%rdx
xor    %eax,%eax
mov    (%r15),%esi
mov    %rbx,%rdi
callq  8230 <TIFFGetField@plt>
movzwl (%r15),%ecx
movzwl -0x7a(%rbp),%r8d
mov    %rbx,%rdi
mov    %r14,%rsi
mov    %r13,%rdx
callq  1f070 <TIFFWriteDirectoryTagShort>
test   %eax,%eax
je     1ea5e <TIFFWriteDirectorySec+0x191e>
lea    -0x70(%rbp),%r9
lea    -0x74(%rbp),%r11
lea    -0x78(%rbp),%rdx
lea    -0x7a(%rbp),%r10
lea    -0x88(%rbp),%r8
mov    $0x1,%eax
jmpq   1de2a <TIFFWriteDirectorySec+0xcea>
mov    $0x2bc,%edx
lea    0x36079(%rip),%rsi        # 54842 <module.26+0x86>
lea    0x36081(%rip),%rcx        # 54851 <module.26+0x95>
lea    0x36168(%rip),%rdi        # 5493f <module.26+0x183>
callq  8490 <__assert_fail@plt>
lea    0x36105(%rip),%rdi        # 548e8 <module.26+0x12c>
mov    $0x2b3,%edx
lea    0x36053(%rip),%rsi        # 54842 <module.26+0x86>
lea    0x3605b(%rip),%rcx        # 54851 <module.26+0x95>
callq  8490 <__assert_fail@plt>
lea    0x36104(%rip),%rdi        # 54906 <module.26+0x14a>
mov    $0x2b4,%edx
lea    0x36034(%rip),%rsi        # 54842 <module.26+0x86>
lea    0x3603c(%rip),%rcx        # 54851 <module.26+0x95>
callq  8490 <__assert_fail@plt>
lea    0x36108(%rip),%rdi        # 54929 <module.26+0x16d>
mov    $0x2b5,%edx
lea    0x36015(%rip),%rsi        # 54842 <module.26+0x86>
lea    0x3601d(%rip),%rcx        # 54851 <module.26+0x95>
callq  8490 <__assert_fail@plt>
xor    %r12d,%r12d
mov    %r12,%r14
jmpq   1e2d2 <TIFFWriteDirectorySec+0x1192>
mov    %rax,%r13
mov    %rbx,%rdi
callq  20d80 <TIFFLinkDirectory>
test   %eax,%eax
je     1ea69 <TIFFWriteDirectorySec+0x1929>
xor    %r12d,%r12d
jmpq   1e0f5 <TIFFWriteDirectorySec+0xfb5>
movzwl 0x0(%r13),%eax
mov    %ax,(%r12)
mov    0x10(%rbx),%eax
and    $0x80,%eax
test   %eax,%eax
je     1e87d <TIFFWriteDirectorySec+0x173d>
mov    %r12,%rdi
callq  87c0 <TIFFSwabShort@plt>
movzwl 0x2(%r13),%eax
mov    %ax,0x2(%r12)
mov    0x10(%rbx),%eax
and    $0x80,%eax
test   %eax,%eax
je     1e89e <TIFFWriteDirectorySec+0x175e>
lea    0x2(%r12),%rdi
callq  87c0 <TIFFSwabShort@plt>
mov    %r15,%rdx
lea    0x4(%r12),%rdi
lea    0x8(%r13),%rsi
mov    %rdi,%r15
callq  8790 <_TIFFmemcpy@plt>
mov    0x10(%rbx),%eax
and    $0x80,%eax
test   %eax,%eax
je     1e8c6 <TIFFWriteDirectorySec+0x1786>
mov    %r15,%rdi
callq  8730 <TIFFSwabLong8@plt>
lea    0xc(%r12),%rdi
lea    0x10(%r13),%rsi
mov    $0x8,%r15d
mov    %r15,%rdx
callq  8790 <_TIFFmemcpy@plt>
add    $0x14,%r12
add    $0x18,%r13
add    $0x1,%r14d
mov    -0x98(%rbp),%eax
cmp    %r14d,%eax
ja     1e85f <TIFFWriteDirectorySec+0x171f>
mov    %r15,%rdx
lea    0x20(%rbx),%rsi
mov    %r12,%rdi
callq  8790 <_TIFFmemcpy@plt>
mov    0x10(%rbx),%eax
and    $0x80,%eax
test   %eax,%eax
je     1e69c <TIFFWriteDirectorySec+0x155c>
mov    %r12,%rdi
callq  8730 <TIFFSwabLong8@plt>
jmpq   1e69c <TIFFWriteDirectorySec+0x155c>
mov    0x3c8(%rbx),%rax
mov    0x3b8(%rbx),%rdi
mov    -0x50(%rbp),%r14
mov    %r14,%rsi
mov    -0x58(%rbp),%r13
mov    %r13,%rdx
callq  *%rax
cmp    %r13,%rax
je     1ea74 <TIFFWriteDirectorySec+0x1934>
xor    %eax,%eax
mov    0x3b8(%rbx),%rdi
mov    %r12,%rdx
lea    0x35e5e(%rip),%rsi        # 547bc <module.26>
callq  8a00 <TIFFErrorExt@plt>
xor    %r12d,%r12d
mov    %r12,%r13
jmpq   1e2d2 <TIFFWriteDirectorySec+0x1192>
mov    0x8(%r15),%eax
cmp    $0x2,%eax
jne    1eaa3 <TIFFWriteDirectorySec+0x1963>
movswq 0x4(%r15),%rax
cmp    $0xffff,%ax
jne    1eac2 <TIFFWriteDirectorySec+0x1982>
movzbl 0x1b(%r15),%eax
test   %al,%al
jne    1eae1 <TIFFWriteDirectorySec+0x19a1>
mov    %r8,%rdx
xor    %eax,%eax
mov    (%r15),%esi
mov    %rbx,%rdi
callq  8230 <TIFFGetField@plt>
mov    %r15,%r14
mov    -0x88(%rbp),%r15
mov    %r15,%rdi
callq  8350 <strlen@plt>
movzwl (%r14),%ecx
mov    %rax,%r8
mov    %r15,%r9
mov    %rbx,%rdi
lea    -0x98(%rbp),%r14
mov    %r14,%rsi
mov    %r13,%rdx
callq  1eff0 <TIFFWriteDirectoryTagAscii>
test   %eax,%eax
je     1eb00 <TIFFWriteDirectorySec+0x19c0>
lea    -0x70(%rbp),%r9
lea    -0x74(%rbp),%r11
lea    -0x78(%rbp),%rdx
lea    -0x7a(%rbp),%r10
lea    -0x88(%rbp),%r8
mov    $0x1,%eax
jmpq   1de2a <TIFFWriteDirectorySec+0xcea>
lea    0x35e97(%rip),%rdi        # 5489f <module.26+0xe3>
mov    $0x29c,%edx
lea    0x35e2e(%rip),%rsi        # 54842 <module.26+0x86>
lea    0x35e36(%rip),%rcx        # 54851 <module.26+0x95>
callq  8490 <__assert_fail@plt>
mov    $0x29d,%edx
lea    0x35e16(%rip),%rsi        # 54842 <module.26+0x86>
lea    0x35e1e(%rip),%rcx        # 54851 <module.26+0x95>
lea    0x35e7f(%rip),%rdi        # 548b9 <module.26+0xfd>
callq  8490 <__assert_fail@plt>
mov    $0x29e,%edx
lea    0x35df7(%rip),%rsi        # 54842 <module.26+0x86>
lea    0x35dff(%rip),%rcx        # 54851 <module.26+0x95>
lea    0x35e30(%rip),%rdi        # 54889 <module.26+0xcd>
callq  8490 <__assert_fail@plt>
xor    %r12d,%r12d
mov    %r12,%r14
jmpq   1e2d2 <TIFFWriteDirectorySec+0x1192>
xor    %r12d,%r12d
mov    %r12,%r14
jmpq   1e2d2 <TIFFWriteDirectorySec+0x1192>
mov    %r14,%rdi
callq  8bb0 <_TIFFfree@plt>
mov    -0x8(%rbp),%rax
test   %eax,%eax
jne    1eb0b <TIFFWriteDirectorySec+0x19cb>
mov    -0x18(%rbp),%r12
mov    -0x10(%rbp),%rbx
mov    $0x1,%eax
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r13
leaveq 
retq   
lea    0x35d7e(%rip),%rdi        # 54828 <module.26+0x6c>
mov    $0x290,%edx
lea    0x35d8c(%rip),%rsi        # 54842 <module.26+0x86>
lea    0x35d94(%rip),%rcx        # 54851 <module.26+0x95>
callq  8490 <__assert_fail@plt>
lea    0x35d9e(%rip),%rdi        # 54867 <module.26+0xab>
mov    $0x291,%edx
lea    0x35d6d(%rip),%rsi        # 54842 <module.26+0x86>
lea    0x35d75(%rip),%rcx        # 54851 <module.26+0x95>
callq  8490 <__assert_fail@plt>
mov    $0x292,%edx
lea    0x35d55(%rip),%rsi        # 54842 <module.26+0x86>
lea    0x35d5d(%rip),%rcx        # 54851 <module.26+0x95>
lea    0x35d8e(%rip),%rdi        # 54889 <module.26+0xcd>
callq  8490 <__assert_fail@plt>
xor    %r12d,%r12d
mov    %r12,%r14
jmpq   1e2d2 <TIFFWriteDirectorySec+0x1192>
mov    %rbx,%rdi
callq  8510 <TIFFFreeDirectory@plt>
mov    0x10(%rbx),%eax
and    $0xffdffff7,%eax
mov    %eax,0x10(%rbx)
mov    0x338(%rbx),%rax
mov    %rbx,%rdi
callq  *%rax
mov    %rbx,%rdi
callq  8830 <TIFFCreateDirectory@plt>
mov    -0x18(%rbp),%r12
mov    -0x10(%rbp),%rbx
mov    $0x1,%eax
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r13
leaveq 
retq   
nopl   (%rax)

000000000001eb50 <TIFFWriteDirectoryTagSampleformatArray>:
push   %rbp
mov    %rsp,%rbp
sub    $0xc0,%rsp
mov    %r15,-0xb8(%rbp)
mov    %r8,-0xc0(%rbp)
mov    %rsi,-0x28(%rbp)
mov    %rdx,-0x30(%rbp)
mov    %rcx,-0x38(%rbp)
mov    %r9,-0x40(%rbp)
mov    %r8d,%eax
shl    $0x3,%rax
mov    %rdi,%r15
mov    %rax,%rdi
callq  8440 <_TIFFmalloc@plt>
test   %rax,%rax
je     1ebb2 <TIFFWriteDirectoryTagSampleformatArray+0x62>
movzwl 0x76(%r15),%ecx
cmp    $0x1,%cx
jbe    1ebd9 <TIFFWriteDirectoryTagSampleformatArray+0x89>
cmp    $0x2,%cx
je     1ebff <TIFFWriteDirectoryTagSampleformatArray+0xaf>
cmp    $0x3,%cx
je     1ec3b <TIFFWriteDirectoryTagSampleformatArray+0xeb>
mov    %rax,%r15
xor    %eax,%eax
jmp    1ebe8 <TIFFWriteDirectoryTagSampleformatArray+0x98>
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
lea    0x35ddf(%rip),%rsi        # 549a1 <module.45>
lea    0x35d78(%rip),%rdx        # 54941 <module.26+0x185>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0xb8(%rbp),%r15
leaveq 
retq   
cmp    $0x1,%cx
je     1ec77 <TIFFWriteDirectoryTagSampleformatArray+0x127>
mov    %rax,%r15
xor    %eax,%eax
mov    %r15,%rdi
mov    %rax,%r15
callq  8bb0 <_TIFFfree@plt>
mov    %r15,%rax
mov    -0xb8(%rbp),%r15
leaveq 
retq   
movzwl 0x74(%r15),%ecx
cmp    $0x8,%cx
ja     1ecb6 <TIFFWriteDirectoryTagSampleformatArray+0x166>
mov    %r15,-0x10(%rbp)
mov    %rbx,-0x48(%rbp)
mov    %r12,-0x68(%rbp)
mov    %r13,-0x80(%rbp)
mov    %r14,-0xa0(%rbp)
mov    %rax,%r15
xor    %r13d,%r13d
mov    -0x40(%rbp),%r12
mov    -0xc0(%rbp),%rbx
jmpq   1ed06 <TIFFWriteDirectoryTagSampleformatArray+0x1b6>
movzwl 0x74(%r15),%ecx
cmp    $0x20,%cx
ja     1ed3e <TIFFWriteDirectoryTagSampleformatArray+0x1ee>
mov    %r15,-0x8(%rbp)
mov    %rbx,-0x48(%rbp)
mov    %r12,-0x60(%rbp)
mov    %r13,-0x80(%rbp)
mov    %r14,-0x98(%rbp)
mov    %rax,%r15
xor    %r13d,%r13d
mov    -0x40(%rbp),%r12
mov    -0xc0(%rbp),%rbx
jmpq   1ed7d <TIFFWriteDirectoryTagSampleformatArray+0x22d>
movzwl 0x74(%r15),%ecx
cmp    $0x8,%cx
ja     1edb5 <TIFFWriteDirectoryTagSampleformatArray+0x265>
mov    %r15,-0x18(%rbp)
mov    %rbx,-0x58(%rbp)
mov    %r12,-0x70(%rbp)
mov    %r13,-0x90(%rbp)
mov    %r14,-0xa8(%rbp)
mov    %rax,%r15
xor    %r12d,%r12d
mov    -0x40(%rbp),%r13
mov    -0xc0(%rbp),%rbx
jmpq   1ee06 <TIFFWriteDirectoryTagSampleformatArray+0x2b6>
cmp    $0x10,%cx
ja     1ee41 <TIFFWriteDirectoryTagSampleformatArray+0x2f1>
mov    %r15,-0x10(%rbp)
mov    %rbx,-0x50(%rbp)
mov    %r12,-0x68(%rbp)
mov    %r13,-0x88(%rbp)
mov    %r14,-0xa0(%rbp)
mov    %rax,%r15
xor    %r13d,%r13d
mov    -0x40(%rbp),%r12
mov    -0xc0(%rbp),%rbx
jmpq   1ee88 <TIFFWriteDirectoryTagSampleformatArray+0x338>
mov    %r13d,%r14d
movsd  (%r12,%r14,8),%xmm0
callq  21570 <TIFFClampDoubleToInt8>
mov    %al,(%r15,%r14,1)
add    $0x1,%r13d
cmp    %r13d,%ebx
ja     1ecf0 <TIFFWriteDirectoryTagSampleformatArray+0x1a0>
mov    %rbx,%r8
mov    %r15,%r9
mov    -0x10(%rbp),%rdi
mov    -0x38(%rbp),%rcx
mov    -0x30(%rbp),%rdx
mov    -0x28(%rbp),%rsi
callq  1f050 <TIFFWriteDirectoryTagSbyteArray>
mov    -0xa0(%rbp),%r14
mov    -0x80(%rbp),%r13
mov    -0x68(%rbp),%r12
mov    -0x48(%rbp),%rbx
jmpq   1ebe8 <TIFFWriteDirectoryTagSampleformatArray+0x98>
mov    %r15,%rdi
mov    %rax,%r15
mov    -0x40(%rbp),%r9
mov    -0x38(%rbp),%rcx
mov    -0x30(%rbp),%rdx
mov    -0x28(%rbp),%rsi
mov    -0xc0(%rbp),%r8
callq  1f2c0 <TIFFWriteDirectoryTagDoubleArray>
jmpq   1ebe8 <TIFFWriteDirectoryTagSampleformatArray+0x98>
mov    %r13d,%r14d
movsd  (%r12,%r14,8),%xmm0
callq  21530 <TIFFClampDoubleToFloat>
movss  %xmm0,(%r15,%r14,4)
add    $0x1,%r13d
cmp    %r13d,%ebx
ja     1ed65 <TIFFWriteDirectoryTagSampleformatArray+0x215>
mov    %rbx,%r8
mov    %r15,%r9
mov    -0x8(%rbp),%rdi
mov    -0x38(%rbp),%rcx
mov    -0x30(%rbp),%rdx
mov    -0x28(%rbp),%rsi
callq  1f2a0 <TIFFWriteDirectoryTagFloatArray>
mov    -0x98(%rbp),%r14
mov    -0x80(%rbp),%r13
mov    -0x60(%rbp),%r12
mov    -0x48(%rbp),%rbx
jmpq   1ebe8 <TIFFWriteDirectoryTagSampleformatArray+0x98>
cmp    $0x10,%cx
ja     1eec3 <TIFFWriteDirectoryTagSampleformatArray+0x373>
mov    %r15,-0x20(%rbp)
mov    %rbx,-0x58(%rbp)
mov    %r12,-0x78(%rbp)
mov    %r13,-0x90(%rbp)
mov    %r14,-0xb0(%rbp)
mov    %rax,%r15
xor    %r13d,%r13d
mov    -0x40(%rbp),%r12
mov    -0xc0(%rbp),%rbx
jmpq   1ef0a <TIFFWriteDirectoryTagSampleformatArray+0x3ba>
mov    %r12d,%r14d
movsd  0x0(%r13,%r14,8),%xmm0
callq  21630 <TIFFClampDoubleToUInt8>
mov    %al,(%r15,%r14,1)
add    $0x1,%r12d
cmp    %r12d,%ebx
ja     1edef <TIFFWriteDirectoryTagSampleformatArray+0x29f>
mov    %rbx,%r8
mov    %r15,%r9
mov    -0x18(%rbp),%rdi
mov    -0x38(%rbp),%rcx
mov    -0x30(%rbp),%rdx
mov    -0x28(%rbp),%rsi
callq  1f030 <TIFFWriteDirectoryTagByteArray>
mov    -0xa8(%rbp),%r14
mov    -0x90(%rbp),%r13
mov    -0x70(%rbp),%r12
mov    -0x58(%rbp),%rbx
jmpq   1ebe8 <TIFFWriteDirectoryTagSampleformatArray+0x98>
mov    %r15,-0x18(%rbp)
mov    %rbx,-0x50(%rbp)
mov    %r12,-0x70(%rbp)
mov    %r13,-0x88(%rbp)
mov    %r14,-0xa8(%rbp)
mov    %rax,%r15
xor    %r12d,%r12d
mov    -0x40(%rbp),%r13
mov    -0xc0(%rbp),%rbx
jmpq   1ef5c <TIFFWriteDirectoryTagSampleformatArray+0x40c>
mov    %r13d,%r14d
movsd  (%r12,%r14,8),%xmm0
callq  215b0 <TIFFClampDoubleToInt16>
mov    %ax,(%r15,%r14,2)
add    $0x1,%r13d
cmp    %r13d,%ebx
ja     1ee71 <TIFFWriteDirectoryTagSampleformatArray+0x321>
mov    %rbx,%r8
mov    %r15,%r9
mov    -0x10(%rbp),%rdi
mov    -0x38(%rbp),%rcx
mov    -0x30(%rbp),%rdx
mov    -0x28(%rbp),%rsi
callq  1f180 <TIFFWriteDirectoryTagSshortArray>
mov    -0xa0(%rbp),%r14
mov    -0x88(%rbp),%r13
mov    -0x68(%rbp),%r12
mov    -0x50(%rbp),%rbx
jmpq   1ebe8 <TIFFWriteDirectoryTagSampleformatArray+0x98>
mov    %r15,-0x20(%rbp)
mov    %rbx,-0x60(%rbp)
mov    %r12,-0x78(%rbp)
mov    %r13,-0x98(%rbp)
mov    %r14,-0xb0(%rbp)
mov    %rax,%r15
xor    %r13d,%r13d
mov    -0x40(%rbp),%r12
mov    -0xc0(%rbp),%rbx
jmpq   1efad <TIFFWriteDirectoryTagSampleformatArray+0x45d>
mov    %r13d,%r14d
movsd  (%r12,%r14,8),%xmm0
callq  21670 <TIFFClampDoubleToUInt16>
mov    %ax,(%r15,%r14,2)
add    $0x1,%r13d
cmp    %r13d,%ebx
ja     1eef3 <TIFFWriteDirectoryTagSampleformatArray+0x3a3>
mov    %rbx,%r8
mov    %r15,%r9
mov    -0x20(%rbp),%rdi
mov    -0x38(%rbp),%rcx
mov    -0x30(%rbp),%rdx
mov    -0x28(%rbp),%rsi
callq  1f090 <TIFFWriteDirectoryTagShortArray>
mov    -0xb0(%rbp),%r14
mov    -0x90(%rbp),%r13
mov    -0x78(%rbp),%r12
mov    -0x58(%rbp),%rbx
jmpq   1ebe8 <TIFFWriteDirectoryTagSampleformatArray+0x98>
mov    %r12d,%r14d
movsd  0x0(%r13,%r14,8),%xmm0
callq  215f0 <TIFFClampDoubleToInt32>
mov    %eax,(%r15,%r14,4)
add    $0x1,%r12d
cmp    %r12d,%ebx
ja     1ef45 <TIFFWriteDirectoryTagSampleformatArray+0x3f5>
mov    %rbx,%r8
mov    %r15,%r9
mov    -0x18(%rbp),%rdi
mov    -0x38(%rbp),%rcx
mov    -0x30(%rbp),%rdx
mov    -0x28(%rbp),%rsi
callq  1f1e0 <TIFFWriteDirectoryTagSlongArray>
mov    -0xa8(%rbp),%r14
mov    -0x88(%rbp),%r13
mov    -0x70(%rbp),%r12
mov    -0x50(%rbp),%rbx
jmpq   1ebe8 <TIFFWriteDirectoryTagSampleformatArray+0x98>
mov    %r13d,%r14d
movsd  (%r12,%r14,8),%xmm0
callq  216b0 <TIFFClampDoubleToUInt32>
mov    %eax,(%r15,%r14,4)
add    $0x1,%r13d
cmp    %r13d,%ebx
ja     1ef97 <TIFFWriteDirectoryTagSampleformatArray+0x447>
mov    %rbx,%r8
mov    %r15,%r9
mov    -0x20(%rbp),%rdi
mov    -0x38(%rbp),%rcx
mov    -0x30(%rbp),%rdx
mov    -0x28(%rbp),%rsi
callq  1f1c0 <TIFFWriteDirectoryTagLongArray>
mov    -0xb0(%rbp),%r14
mov    -0x98(%rbp),%r13
mov    -0x78(%rbp),%r12
mov    -0x60(%rbp),%rbx
jmpq   1ebe8 <TIFFWriteDirectoryTagSampleformatArray+0x98>
nopl   0x0(%rax,%rax,1)

000000000001eff0 <TIFFWriteDirectoryTagAscii>:
push   %rbp
mov    %rsp,%rbp
test   %rdx,%rdx
je     1f000 <TIFFWriteDirectoryTagAscii+0x10>
callq  1fac0 <TIFFWriteDirectoryTagCheckedAscii>
leaveq 
retq   
mov    (%rsi),%eax
add    $0x1,%eax
mov    %eax,(%rsi)
mov    $0x1,%eax
leaveq 
retq   
xchg   %ax,%ax

000000000001f010 <TIFFWriteDirectoryTagUndefinedArray>:
push   %rbp
mov    %rsp,%rbp
test   %rdx,%rdx
je     1f020 <TIFFWriteDirectoryTagUndefinedArray+0x10>
callq  1faf0 <TIFFWriteDirectoryTagCheckedUndefinedArray>
leaveq 
retq   
mov    (%rsi),%eax
add    $0x1,%eax
mov    %eax,(%rsi)
mov    $0x1,%eax
leaveq 
retq   
xchg   %ax,%ax

000000000001f030 <TIFFWriteDirectoryTagByteArray>:
push   %rbp
mov    %rsp,%rbp
test   %rdx,%rdx
je     1f040 <TIFFWriteDirectoryTagByteArray+0x10>
callq  1fb20 <TIFFWriteDirectoryTagCheckedByteArray>
leaveq 
retq   
mov    (%rsi),%eax
add    $0x1,%eax
mov    %eax,(%rsi)
mov    $0x1,%eax
leaveq 
retq   
xchg   %ax,%ax

000000000001f050 <TIFFWriteDirectoryTagSbyteArray>:
push   %rbp
mov    %rsp,%rbp
test   %rdx,%rdx
je     1f060 <TIFFWriteDirectoryTagSbyteArray+0x10>
callq  1fb50 <TIFFWriteDirectoryTagCheckedSbyteArray>
leaveq 
retq   
mov    (%rsi),%eax
add    $0x1,%eax
mov    %eax,(%rsi)
mov    $0x1,%eax
leaveq 
retq   
xchg   %ax,%ax

000000000001f070 <TIFFWriteDirectoryTagShort>:
push   %rbp
mov    %rsp,%rbp
test   %rdx,%rdx
je     1f080 <TIFFWriteDirectoryTagShort+0x10>
callq  1fb80 <TIFFWriteDirectoryTagCheckedShort>
leaveq 
retq   
mov    (%rsi),%eax
add    $0x1,%eax
mov    %eax,(%rsi)
mov    $0x1,%eax
leaveq 
retq   
xchg   %ax,%ax

000000000001f090 <TIFFWriteDirectoryTagShortArray>:
push   %rbp
mov    %rsp,%rbp
test   %rdx,%rdx
je     1f0a0 <TIFFWriteDirectoryTagShortArray+0x10>
callq  1fc10 <TIFFWriteDirectoryTagCheckedShortArray>
leaveq 
retq   
mov    (%rsi),%eax
add    $0x1,%eax
mov    %eax,(%rsi)
mov    $0x1,%eax
leaveq 
retq   
xchg   %ax,%ax

000000000001f0b0 <TIFFWriteDirectoryTagShortPerSample>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
test   %rdx,%rdx
je     1f0f5 <TIFFWriteDirectoryTagShortPerSample+0x45>
movzwl 0x82(%rdi),%eax
add    %rax,%rax
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rsi,-0x8(%rbp)
mov    %rdx,-0x10(%rbp)
mov    %rcx,-0x18(%rbp)
mov    %rdi,%r14
mov    %rax,%rdi
mov    %r8,%r15
callq  8440 <_TIFFmalloc@plt>
test   %rax,%rax
je     1f103 <TIFFWriteDirectoryTagShortPerSample+0x53>
xor    %ecx,%ecx
mov    %rax,%rdx
jmp    1f136 <TIFFWriteDirectoryTagShortPerSample+0x86>
mov    (%rsi),%eax
add    $0x1,%eax
mov    %eax,(%rsi)
mov    $0x1,%eax
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%r14),%rdi
lea    0x358b5(%rip),%rsi        # 549c8 <module.46>
lea    0x35827(%rip),%rdx        # 54941 <module.26+0x185>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
leaveq 
retq   
mov    %r15w,(%rdx)
add    $0x1,%ecx
add    $0x2,%rdx
movzwl 0x82(%r14),%r8d
cmp    %cx,%r8w
ja     1f12b <TIFFWriteDirectoryTagShortPerSample+0x7b>
mov    %r14,%rdi
mov    %rax,%r14
mov    %r14,%r9
mov    -0x18(%rbp),%rcx
mov    -0x10(%rbp),%rdx
mov    -0x8(%rbp),%rsi
callq  1fc10 <TIFFWriteDirectoryTagCheckedShortArray>
mov    %r14,%rdi
mov    %rax,%r14
callq  8bb0 <_TIFFfree@plt>
mov    %r14,%rax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)

000000000001f180 <TIFFWriteDirectoryTagSshortArray>:
push   %rbp
mov    %rsp,%rbp
test   %rdx,%rdx
je     1f190 <TIFFWriteDirectoryTagSshortArray+0x10>
callq  1fce0 <TIFFWriteDirectoryTagCheckedSshortArray>
leaveq 
retq   
mov    (%rsi),%eax
add    $0x1,%eax
mov    %eax,(%rsi)
mov    $0x1,%eax
leaveq 
retq   
xchg   %ax,%ax

000000000001f1a0 <TIFFWriteDirectoryTagLong>:
push   %rbp
mov    %rsp,%rbp
test   %rdx,%rdx
je     1f1b0 <TIFFWriteDirectoryTagLong+0x10>
callq  1fdb0 <TIFFWriteDirectoryTagCheckedLong>
leaveq 
retq   
mov    (%rsi),%eax
add    $0x1,%eax
mov    %eax,(%rsi)
mov    $0x1,%eax
leaveq 
retq   
xchg   %ax,%ax

000000000001f1c0 <TIFFWriteDirectoryTagLongArray>:
push   %rbp
mov    %rsp,%rbp
test   %rdx,%rdx
je     1f1d0 <TIFFWriteDirectoryTagLongArray+0x10>
callq  1fe40 <TIFFWriteDirectoryTagCheckedLongArray>
leaveq 
retq   
mov    (%rsi),%eax
add    $0x1,%eax
mov    %eax,(%rsi)
mov    $0x1,%eax
leaveq 
retq   
xchg   %ax,%ax

000000000001f1e0 <TIFFWriteDirectoryTagSlongArray>:
push   %rbp
mov    %rsp,%rbp
test   %rdx,%rdx
je     1f1f0 <TIFFWriteDirectoryTagSlongArray+0x10>
callq  1ff10 <TIFFWriteDirectoryTagCheckedSlongArray>
leaveq 
retq   
mov    (%rsi),%eax
add    $0x1,%eax
mov    %eax,(%rsi)
mov    $0x1,%eax
leaveq 
retq   
xchg   %ax,%ax

000000000001f200 <TIFFWriteDirectoryTagLong8Array>:
push   %rbp
mov    %rsp,%rbp
test   %rdx,%rdx
je     1f210 <TIFFWriteDirectoryTagLong8Array+0x10>
callq  1ffe0 <TIFFWriteDirectoryTagCheckedLong8Array>
leaveq 
retq   
mov    (%rsi),%eax
add    $0x1,%eax
mov    %eax,(%rsi)
mov    $0x1,%eax
leaveq 
retq   
xchg   %ax,%ax

000000000001f220 <TIFFWriteDirectoryTagSlong8Array>:
push   %rbp
mov    %rsp,%rbp
test   %rdx,%rdx
je     1f230 <TIFFWriteDirectoryTagSlong8Array+0x10>
callq  200e0 <TIFFWriteDirectoryTagCheckedSlong8Array>
leaveq 
retq   
mov    (%rsi),%eax
add    $0x1,%eax
mov    %eax,(%rsi)
mov    $0x1,%eax
leaveq 
retq   
xchg   %ax,%ax

000000000001f240 <TIFFWriteDirectoryTagRational>:
push   %rbp
mov    %rsp,%rbp
test   %rdx,%rdx
je     1f250 <TIFFWriteDirectoryTagRational+0x10>
callq  201e0 <TIFFWriteDirectoryTagCheckedRational>
leaveq 
retq   
mov    (%rsi),%eax
add    $0x1,%eax
mov    %eax,(%rsi)
mov    $0x1,%eax
leaveq 
retq   
xchg   %ax,%ax

000000000001f260 <TIFFWriteDirectoryTagRationalArray>:
push   %rbp
mov    %rsp,%rbp
test   %rdx,%rdx
je     1f270 <TIFFWriteDirectoryTagRationalArray+0x10>
callq  20360 <TIFFWriteDirectoryTagCheckedRationalArray>
leaveq 
retq   
mov    (%rsi),%eax
add    $0x1,%eax
mov    %eax,(%rsi)
mov    $0x1,%eax
leaveq 
retq   
xchg   %ax,%ax

000000000001f280 <TIFFWriteDirectoryTagSrationalArray>:
push   %rbp
mov    %rsp,%rbp
test   %rdx,%rdx
je     1f290 <TIFFWriteDirectoryTagSrationalArray+0x10>
callq  20520 <TIFFWriteDirectoryTagCheckedSrationalArray>
leaveq 
retq   
mov    (%rsi),%eax
add    $0x1,%eax
mov    %eax,(%rsi)
mov    $0x1,%eax
leaveq 
retq   
xchg   %ax,%ax

000000000001f2a0 <TIFFWriteDirectoryTagFloatArray>:
push   %rbp
mov    %rsp,%rbp
test   %rdx,%rdx
je     1f2b0 <TIFFWriteDirectoryTagFloatArray+0x10>
callq  20730 <TIFFWriteDirectoryTagCheckedFloatArray>
leaveq 
retq   
mov    (%rsi),%eax
add    $0x1,%eax
mov    %eax,(%rsi)
mov    $0x1,%eax
leaveq 
retq   
xchg   %ax,%ax

000000000001f2c0 <TIFFWriteDirectoryTagDoubleArray>:
push   %rbp
mov    %rsp,%rbp
test   %rdx,%rdx
je     1f2d0 <TIFFWriteDirectoryTagDoubleArray+0x10>
callq  20800 <TIFFWriteDirectoryTagCheckedDoubleArray>
leaveq 
retq   
mov    (%rsi),%eax
add    $0x1,%eax
mov    %eax,(%rsi)
mov    $0x1,%eax
leaveq 
retq   
xchg   %ax,%ax

000000000001f2e0 <TIFFWriteDirectoryTagIfdArray>:
push   %rbp
mov    %rsp,%rbp
test   %rdx,%rdx
je     1f2f0 <TIFFWriteDirectoryTagIfdArray+0x10>
callq  208d0 <TIFFWriteDirectoryTagCheckedIfdArray>
leaveq 
retq   
mov    (%rsi),%eax
add    $0x1,%eax
mov    %eax,(%rsi)
mov    $0x1,%eax
leaveq 
retq   
xchg   %ax,%ax

000000000001f300 <TIFFWriteDirectoryTagShortLong>:
push   %rbp
mov    %rsp,%rbp
test   %rdx,%rdx
je     1f319 <TIFFWriteDirectoryTagShortLong+0x19>
cmp    $0xffff,%r8d
jbe    1f327 <TIFFWriteDirectoryTagShortLong+0x27>
callq  1fdb0 <TIFFWriteDirectoryTagCheckedLong>
leaveq 
retq   
mov    (%rsi),%eax
add    $0x1,%eax
mov    %eax,(%rsi)
mov    $0x1,%eax
leaveq 
retq   
callq  1fb80 <TIFFWriteDirectoryTagCheckedShort>
leaveq 
retq   
xchg   %ax,%ax

000000000001f330 <TIFFWriteDirectoryTagLongLong8Array>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
test   %rdx,%rdx
je     1f38a <TIFFWriteDirectoryTagLongLong8Array+0x5a>
mov    0x10(%rdi),%eax
and    $0x80000,%eax
test   %eax,%eax
jne    1f398 <TIFFWriteDirectoryTagLongLong8Array+0x68>
mov    %r8d,%eax
shl    $0x2,%rax
mov    %r13,-0x20(%rbp)
mov    %r14,-0x28(%rbp)
mov    %r15,-0x30(%rbp)
mov    %rsi,-0x8(%rbp)
mov    %rdx,-0x10(%rbp)
mov    %rcx,-0x18(%rbp)
mov    %r9,%r13
mov    %rdi,%r14
mov    %rax,%rdi
mov    %r8,%r15
callq  8440 <_TIFFmalloc@plt>
test   %rax,%rax
je     1f39f <TIFFWriteDirectoryTagLongLong8Array+0x6f>
mov    $0xffffffff,%esi
xor    %ecx,%ecx
mov    %rax,%rdx
jmp    1f3e1 <TIFFWriteDirectoryTagLongLong8Array+0xb1>
mov    (%rsi),%eax
add    $0x1,%eax
mov    %eax,(%rsi)
mov    $0x1,%eax
leaveq 
retq   
callq  1ffe0 <TIFFWriteDirectoryTagCheckedLong8Array>
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%r14),%rdi
lea    0x35592(%rip),%rdx        # 54941 <module.26+0x185>
lea    0x35636(%rip),%rsi        # 549ec <module.47>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r13
leaveq 
retq   
mov    0x0(%r13),%rdi
cmp    %rsi,%rdi
ja     1f41f <TIFFWriteDirectoryTagLongLong8Array+0xef>
mov    %edi,(%rdx)
add    $0x8,%r13
add    $0x1,%ecx
add    $0x4,%rdx
cmp    %ecx,%r15d
ja     1f3cb <TIFFWriteDirectoryTagLongLong8Array+0x9b>
mov    %r14,%rdi
mov    %r15,%r8
mov    %rax,%r13
mov    %r13,%r9
mov    -0x18(%rbp),%rcx
mov    -0x10(%rbp),%rdx
mov    -0x8(%rbp),%rsi
callq  1fe40 <TIFFWriteDirectoryTagCheckedLongArray>
mov    %r13,%rdi
mov    %rax,%r13
callq  8bb0 <_TIFFfree@plt>
mov    %r13,%rax
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r13
leaveq 
retq   
xor    %ecx,%ecx
mov    0x3b8(%r14),%rdi
mov    %rax,%r13
mov    %rcx,%rax
lea    0x355db(%rip),%rdx        # 54a10 <module.47+0x24>
lea    0x355b0(%rip),%rsi        # 549ec <module.47>
callq  8a00 <TIFFErrorExt@plt>
mov    %r13,%rdi
callq  8bb0 <_TIFFfree@plt>
xor    %eax,%eax
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r13
leaveq 
retq   
nopl   0x0(%rax)

000000000001f460 <TIFFWriteDirectoryTagIfdIfd8Array>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
test   %rdx,%rdx
je     1f4ba <TIFFWriteDirectoryTagIfdIfd8Array+0x5a>
mov    0x10(%rdi),%eax
and    $0x80000,%eax
test   %eax,%eax
jne    1f4c8 <TIFFWriteDirectoryTagIfdIfd8Array+0x68>
mov    %r8d,%eax
shl    $0x2,%rax
mov    %r13,-0x20(%rbp)
mov    %r14,-0x28(%rbp)
mov    %r15,-0x30(%rbp)
mov    %rsi,-0x8(%rbp)
mov    %rdx,-0x10(%rbp)
mov    %rcx,-0x18(%rbp)
mov    %r9,%r13
mov    %rdi,%r14
mov    %rax,%rdi
mov    %r8,%r15
callq  8440 <_TIFFmalloc@plt>
test   %rax,%rax
je     1f4cf <TIFFWriteDirectoryTagIfdIfd8Array+0x6f>
mov    $0xffffffff,%esi
xor    %ecx,%ecx
mov    %rax,%rdx
jmp    1f511 <TIFFWriteDirectoryTagIfdIfd8Array+0xb1>
mov    (%rsi),%eax
add    $0x1,%eax
mov    %eax,(%rsi)
mov    $0x1,%eax
leaveq 
retq   
callq  209a0 <TIFFWriteDirectoryTagCheckedIfd8Array>
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%r14),%rdi
lea    0x35462(%rip),%rdx        # 54941 <module.26+0x185>
lea    0x3556e(%rip),%rsi        # 54a54 <module.49>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r13
leaveq 
retq   
mov    0x0(%r13),%rdi
cmp    %rsi,%rdi
ja     1f54f <TIFFWriteDirectoryTagIfdIfd8Array+0xef>
mov    %edi,(%rdx)
add    $0x8,%r13
add    $0x1,%ecx
add    $0x4,%rdx
cmp    %ecx,%r15d
ja     1f4fb <TIFFWriteDirectoryTagIfdIfd8Array+0x9b>
mov    %r14,%rdi
mov    %r15,%r8
mov    %rax,%r13
mov    %r13,%r9
mov    -0x18(%rbp),%rcx
mov    -0x10(%rbp),%rdx
mov    -0x8(%rbp),%rsi
callq  208d0 <TIFFWriteDirectoryTagCheckedIfdArray>
mov    %r13,%rdi
mov    %rax,%r13
callq  8bb0 <_TIFFfree@plt>
mov    %r13,%rax
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r13
leaveq 
retq   
xor    %ecx,%ecx
mov    0x3b8(%r14),%rdi
mov    %rax,%r13
mov    %rcx,%rax
lea    0x354ab(%rip),%rdx        # 54a10 <module.47+0x24>
lea    0x354e8(%rip),%rsi        # 54a54 <module.49>
callq  8a00 <TIFFErrorExt@plt>
mov    %r13,%rdi
callq  8bb0 <_TIFFfree@plt>
xor    %eax,%eax
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r13
leaveq 
retq   
nopl   0x0(%rax)

000000000001f590 <TIFFWriteDirectoryTagColormap>:
push   %rbp
mov    %rsp,%rbp
sub    $0x40,%rsp
mov    $0x1,%eax
test   %rdx,%rdx
je     1f698 <TIFFWriteDirectoryTagColormap+0x108>
mov    %r14,%r8
mov    %r13,%r14
mov    %r12,%r13
mov    %rbx,%r12
mov    %rdi,%rbx
mov    $0x3,%eax
movzwl 0x74(%rbx),%ecx
shl    %cl,%eax
mov    %rax,-0x18(%rbp)
mov    %eax,%eax
lea    (%rax,%rax,1),%rdi
mov    %r8,-0x38(%rbp)
mov    %r15,-0x40(%rbp)
mov    %rsi,-0x8(%rbp)
mov    %rdx,-0x10(%rbp)
mov    %rcx,%r15
callq  8440 <_TIFFmalloc@plt>
test   %rax,%rax
je     1f6a1 <TIFFWriteDirectoryTagColormap+0x111>
mov    %r15,%rcx
mov    %rax,%r15
mov    $0x1,%edx
shl    %cl,%edx
mov    %edx,%r8d
lea    (%r8,%r8,1),%rax
mov    0xb8(%rbx),%rsi
mov    %r15,%rdi
mov    %rax,%rdx
mov    %r12,-0x20(%rbp)
mov    %r13,-0x28(%rbp)
mov    %r14,-0x30(%rbp)
mov    %rax,%r12
mov    %rcx,%r13
mov    %r8,%r14
callq  8790 <_TIFFmemcpy@plt>
lea    (%r15,%r14,2),%rdi
mov    0xc0(%rbx),%rsi
mov    %r12,%rdx
callq  8790 <_TIFFmemcpy@plt>
mov    %r13,%rcx
mov    $0x2,%eax
shl    %cl,%eax
mov    %eax,%eax
lea    (%r15,%rax,2),%rdi
mov    %r12,%rdx
mov    0xc8(%rbx),%rsi
callq  8790 <_TIFFmemcpy@plt>
mov    %rbx,%rdi
mov    $0x140,%ecx
mov    %r15,%r9
mov    -0x10(%rbp),%rdx
mov    -0x18(%rbp),%r8
mov    -0x8(%rbp),%rsi
callq  1fc10 <TIFFWriteDirectoryTagCheckedShortArray>
mov    %r15,%rdi
mov    %rax,%r14
callq  8bb0 <_TIFFfree@plt>
mov    %r14,%rax
mov    -0x30(%rbp),%r13
mov    -0x28(%rbp),%r12
mov    -0x20(%rbp),%rbx
mov    -0x40(%rbp),%r15
mov    -0x38(%rbp),%r14
leaveq 
retq   
mov    (%rsi),%ecx
add    $0x1,%ecx
mov    %ecx,(%rsi)
leaveq 
retq   
mov    0x3b8(%rbx),%rdi
lea    0x353c7(%rip),%rsi        # 54a76 <module.50>
lea    0x3528b(%rip),%rdx        # 54941 <module.26+0x185>
xor    %r15d,%r15d
mov    %r15,%rax
callq  8a00 <TIFFErrorExt@plt>
mov    %r15,%rax
mov    %r12,%rbx
mov    %r13,%r12
mov    %r14,%r13
mov    -0x40(%rbp),%r15
mov    -0x38(%rbp),%r14
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

000000000001f6e0 <TIFFWriteDirectoryTagTransferfunction>:
push   %rbp
mov    %rsp,%rbp
sub    $0x50,%rsp
mov    %r13,-0x38(%rbp)
mov    %r14,-0x40(%rbp)
mov    %r15,-0x48(%rbp)
mov    %rsi,-0x8(%rbp)
mov    %rdx,-0x10(%rbp)
mov    $0x1,%eax
test   %rdx,%rdx
je     1f822 <TIFFWriteDirectoryTagTransferfunction+0x142>
movzwl 0x74(%rdi),%ecx
mov    $0x3,%edx
movzwl 0x82(%rdi),%esi
movzwl 0xd4(%rdi),%r8d
sub    %r8w,%si
cmp    $0x3,%si
ja     1f72f <TIFFWriteDirectoryTagTransferfunction+0x4f>
mov    %rsi,%rdx
mov    %rbx,%r13
mov    %rdi,%rbx
mov    %rax,%rsi
shl    %cl,%esi
mov    %esi,%r14d
cmp    $0x3,%dx
je     1f82b <TIFFWriteDirectoryTagTransferfunction+0x14b>
cmp    $0x2,%dx
je     1f85b <TIFFWriteDirectoryTagTransferfunction+0x17b>
test   %dx,%dx
je     1f759 <TIFFWriteDirectoryTagTransferfunction+0x79>
mov    %rdx,%rax
movzwl %ax,%edx
shl    %cl,%edx
mov    %rcx,-0x20(%rbp)
mov    %rdx,-0x18(%rbp)
mov    %edx,%ecx
lea    (%rcx,%rcx,1),%rdi
mov    %rax,%r15
callq  8440 <_TIFFmalloc@plt>
test   %rax,%rax
je     1f88b <TIFFWriteDirectoryTagTransferfunction+0x1ab>
lea    (%r14,%r14,1),%rcx
mov    0x110(%rbx),%rsi
mov    %rax,%rdi
mov    %rcx,%rdx
mov    %r13,-0x28(%rbp)
mov    %r12,-0x30(%rbp)
mov    %rax,%r12
mov    %rcx,%r13
callq  8790 <_TIFFmemcpy@plt>
cmp    $0x1,%r15w
jbe    1f7bb <TIFFWriteDirectoryTagTransferfunction+0xdb>
lea    (%r12,%r14,2),%rdi
mov    0x118(%rbx),%rsi
mov    %r13,%rdx
callq  8790 <_TIFFmemcpy@plt>
cmp    $0x2,%r15w
jbe    1f7e2 <TIFFWriteDirectoryTagTransferfunction+0x102>
mov    -0x20(%rbp),%rcx
mov    $0x2,%eax
shl    %cl,%eax
mov    %eax,%eax
lea    (%r12,%rax,2),%rdi
mov    %r13,%rdx
mov    0x120(%rbx),%rsi
callq  8790 <_TIFFmemcpy@plt>
mov    %rbx,%rdi
mov    $0x12d,%ecx
mov    %r12,%r9
mov    -0x18(%rbp),%r8
mov    -0x10(%rbp),%rdx
mov    -0x8(%rbp),%rsi
callq  1fc10 <TIFFWriteDirectoryTagCheckedShortArray>
mov    %r12,%rdi
mov    %rax,%r15
callq  8bb0 <_TIFFfree@plt>
mov    %r15,%rax
mov    -0x30(%rbp),%r12
mov    -0x28(%rbp),%rbx
mov    -0x48(%rbp),%r15
mov    -0x40(%rbp),%r14
mov    -0x38(%rbp),%r13
leaveq 
retq   
mov    (%rsi),%ecx
add    $0x1,%ecx
mov    %ecx,(%rsi)
leaveq 
retq   
mov    %rcx,%r15
mov    0x110(%rbx),%rdi
mov    0x120(%rbx),%rsi
lea    (%r14,%r14,1),%rdx
callq  8900 <_TIFFmemcmp@plt>
test   %eax,%eax
je     1f8bf <TIFFWriteDirectoryTagTransferfunction+0x1df>
mov    %r15,%rcx
mov    $0x3,%edx
mov    $0x1,%eax
jmpq   1f747 <TIFFWriteDirectoryTagTransferfunction+0x67>
mov    %rcx,%r15
mov    0x110(%rbx),%rdi
mov    0x118(%rbx),%rsi
lea    (%r14,%r14,1),%rdx
callq  8900 <_TIFFmemcmp@plt>
test   %eax,%eax
je     1f8d1 <TIFFWriteDirectoryTagTransferfunction+0x1f1>
mov    %r15,%rcx
mov    $0x2,%edx
mov    $0x1,%eax
jmpq   1f751 <TIFFWriteDirectoryTagTransferfunction+0x71>
mov    0x3b8(%rbx),%rdi
lea    0x351fb(%rip),%rsi        # 54a94 <module.51>
lea    0x350a1(%rip),%rdx        # 54941 <module.26+0x185>
xor    %r14d,%r14d
mov    %r14,%rax
callq  8a00 <TIFFErrorExt@plt>
mov    %r14,%rax
mov    %r13,%rbx
mov    -0x48(%rbp),%r15
mov    -0x40(%rbp),%r14
mov    -0x38(%rbp),%r13
leaveq 
retq   
mov    %r15,%rcx
mov    $0x2,%edx
mov    $0x1,%eax
jmpq   1f747 <TIFFWriteDirectoryTagTransferfunction+0x67>
mov    %r15,%rcx
mov    $0x1,%eax
mov    %rax,%rdx
jmpq   1f751 <TIFFWriteDirectoryTagTransferfunction+0x71>
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   0x0(%rax)

000000000001f8f0 <TIFFWriteDirectoryTagSubifd>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    $0x1,%eax
movzwl 0xfc(%rdi),%r8d
test   %r8w,%r8w
jne    1f90d <TIFFWriteDirectoryTagSubifd+0x1d>
leaveq 
retq   
test   %rdx,%rdx
je     1f961 <TIFFWriteDirectoryTagSubifd+0x71>
mov    0x290(%rdi),%rax
mov    %rax,-0x8(%rbp)
mov    $0x14a,%ecx
mov    0x10(%rdi),%eax
and    $0x80000,%eax
test   %eax,%eax
jne    1f96a <TIFFWriteDirectoryTagSubifd+0x7a>
shl    $0x2,%r8
mov    %r15,-0x18(%rbp)
mov    %rsi,-0x20(%rbp)
mov    %rdx,-0x28(%rbp)
mov    %rdi,%r15
mov    %r8,%rdi
callq  8440 <_TIFFmalloc@plt>
test   %rax,%rax
je     1f993 <TIFFWriteDirectoryTagSubifd+0xa3>
mov    0x100(%r15),%rcx
mov    $0xffffffff,%edi
xor    %edx,%edx
mov    %rax,%rsi
jmp    1f9da <TIFFWriteDirectoryTagSubifd+0xea>
mov    (%rsi),%ecx
add    $0x1,%ecx
mov    %ecx,(%rsi)
leaveq 
retq   
mov    0x100(%rdi),%r9
mov    %rdi,%rax
mov    %r15,-0x18(%rbp)
mov    %rdi,%r15
mov    %rax,%rdi
callq  209a0 <TIFFWriteDirectoryTagCheckedIfd8Array>
test   %eax,%eax
jne    1fa1e <TIFFWriteDirectoryTagSubifd+0x12e>
xor    %eax,%eax
mov    -0x18(%rbp),%r15
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
lea    0x34f9e(%rip),%rdx        # 54941 <module.26+0x185>
lea    0x35110(%rip),%rsi        # 54aba <module.52>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x18(%rbp),%r15
leaveq 
retq   
test   %rcx,%rcx
je     1fa57 <TIFFWriteDirectoryTagSubifd+0x167>
mov    (%rcx),%r8
cmp    %rdi,%r8
ja     1fa76 <TIFFWriteDirectoryTagSubifd+0x186>
mov    %r8d,(%rsi)
add    $0x8,%rcx
add    $0x4,%rsi
add    $0x1,%edx
movzwl 0xfc(%r15),%r8d
cmp    %dx,%r8w
ja     1f9b7 <TIFFWriteDirectoryTagSubifd+0xc7>
mov    %r15,%rdi
mov    %rax,%r9
mov    %r14,-0x10(%rbp)
mov    %rax,%r14
mov    $0x14a,%ecx
mov    -0x28(%rbp),%rdx
mov    -0x20(%rbp),%rsi
callq  208d0 <TIFFWriteDirectoryTagCheckedIfdArray>
mov    %r14,%rdi
mov    %rax,%r14
callq  8bb0 <_TIFFfree@plt>
mov    %r14,%rax
mov    -0x10(%rbp),%r14
jmpq   1f983 <TIFFWriteDirectoryTagSubifd+0x93>
mov    0x10(%r15),%eax
or     $0x2000,%eax
mov    %eax,0x10(%r15)
movzwl 0xfc(%r15),%eax
mov    %ax,0x298(%r15)
cmp    $0x1,%ax
je     1faa8 <TIFFWriteDirectoryTagSubifd+0x1b8>
mov    -0x8(%rbp),%rax
mov    %rax,0x2a0(%r15)
mov    -0x18(%rbp),%r15
mov    $0x1,%eax
leaveq 
retq   
lea    0x35078(%rip),%rdi        # 54ad6 <module.52+0x1c>
lea    0x34ddd(%rip),%rsi        # 54842 <module.26+0x86>
mov    $0x79f,%edx
lea    0x3506d(%rip),%rcx        # 54ade <module.52+0x24>
callq  8490 <__assert_fail@plt>
xor    %ecx,%ecx
mov    0x3b8(%r15),%rdi
mov    %rax,%r15
mov    %rcx,%rax
lea    0x3506e(%rip),%rdx        # 54afa <module.52+0x40>
lea    0x35027(%rip),%rsi        # 54aba <module.52>
callq  8a00 <TIFFErrorExt@plt>
mov    %r15,%rdi
callq  8bb0 <_TIFFfree@plt>
xor    %eax,%eax
mov    -0x18(%rbp),%r15
leaveq 
retq   
movq   $0x0,0x2a0(%r15)
mov    -0x18(%rbp),%r15
mov    $0x1,%eax
leaveq 
retq   
xchg   %ax,%ax

000000000001fac0 <TIFFWriteDirectoryTagCheckedAscii>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r8d,(%rsp)
mov    %r9,0x8(%rsp)
mov    %r8,%r9
mov    $0x2,%r8d
callq  20aa0 <TIFFWriteDirectoryTagData>
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   0x0(%rax)

000000000001faf0 <TIFFWriteDirectoryTagCheckedUndefinedArray>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r8d,(%rsp)
mov    %r9,0x8(%rsp)
mov    %r8,%r9
mov    $0x7,%r8d
callq  20aa0 <TIFFWriteDirectoryTagData>
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   0x0(%rax)

000000000001fb20 <TIFFWriteDirectoryTagCheckedByteArray>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r8d,(%rsp)
mov    %r9,0x8(%rsp)
mov    %r8,%r9
mov    $0x1,%r8d
callq  20aa0 <TIFFWriteDirectoryTagData>
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   0x0(%rax)

000000000001fb50 <TIFFWriteDirectoryTagCheckedSbyteArray>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r8d,(%rsp)
mov    %r9,0x8(%rsp)
mov    %r8,%r9
mov    $0x6,%r8d
callq  20aa0 <TIFFWriteDirectoryTagData>
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   0x0(%rax)

000000000001fb80 <TIFFWriteDirectoryTagCheckedShort>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    %r8w,-0x22(%rbp)
lea    -0x22(%rbp),%rax
mov    0x10(%rdi),%r8d
and    $0x80,%r8d
test   %r8d,%r8d
je     1fbe5 <TIFFWriteDirectoryTagCheckedShort+0x65>
mov    %r12,-0x8(%rbp)
mov    %r13,-0x10(%rbp)
mov    %r14,-0x18(%rbp)
mov    %r15,-0x20(%rbp)
mov    %rcx,%r12
mov    %rdi,%r13
mov    %rax,%rdi
mov    %rdx,%r14
mov    %rsi,%r15
callq  87c0 <TIFFSwabShort@plt>
mov    %r12,%rcx
mov    %r14,%rdx
mov    %r15,%rsi
mov    %r13,%rdi
lea    -0x22(%rbp),%rax
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
sub    $0x10,%rsp
movl   $0x2,(%rsp)
mov    %rax,0x8(%rsp)
mov    $0x3,%r8d
mov    $0x1,%r9d
callq  20aa0 <TIFFWriteDirectoryTagData>
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

000000000001fc10 <TIFFWriteDirectoryTagCheckedShortArray>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
cmp    $0x7fffffff,%r8d
jbe    1fc40 <TIFFWriteDirectoryTagCheckedShortArray+0x30>
lea    0x34eef(%rip),%rdi        # 54b17 <module.52+0x5d>
lea    0x34c13(%rip),%rsi        # 54842 <module.26+0x86>
mov    $0x7fe,%edx
lea    0x34eed(%rip),%rcx        # 54b28 <module.52+0x6e>
callq  8490 <__assert_fail@plt>
mov    0x10(%rdi),%eax
and    $0x80,%eax
test   %eax,%eax
jne    1fc57 <TIFFWriteDirectoryTagCheckedShortArray+0x47>
mov    %r9,%rax
mov    %r8,%r9
mov    %rax,%r8
jmp    1fcb6 <TIFFWriteDirectoryTagCheckedShortArray+0xa6>
mov    %r8d,%eax
mov    %r9,%r10
mov    %rcx,-0x8(%rbp)
mov    %rbx,-0x10(%rbp)
mov    %r12,-0x18(%rbp)
mov    %r13,-0x20(%rbp)
mov    %r14,-0x28(%rbp)
mov    %r15,-0x30(%rbp)
mov    %r9,%rbx
mov    %r8,%r12
mov    %rdi,%r13
mov    %r10,%rdi
mov    %rsi,%r14
mov    %rax,%rsi
mov    %rdx,%r15
callq  83d0 <TIFFSwabArrayOfShort@plt>
mov    %r15,%rdx
mov    %r14,%rsi
mov    %r13,%rdi
mov    %rbx,%r8
mov    %r12,%r9
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
mov    -0x10(%rbp),%rbx
mov    -0x8(%rbp),%rcx
sub    $0x10,%rsp
lea    (%r9,%r9,1),%eax
mov    %eax,(%rsp)
mov    %r8,0x8(%rsp)
mov    $0x3,%r8d
callq  20aa0 <TIFFWriteDirectoryTagData>
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

000000000001fce0 <TIFFWriteDirectoryTagCheckedSshortArray>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
cmp    $0x7fffffff,%r8d
jbe    1fd10 <TIFFWriteDirectoryTagCheckedSshortArray+0x30>
lea    0x34e1f(%rip),%rdi        # 54b17 <module.52+0x5d>
lea    0x34b43(%rip),%rsi        # 54842 <module.26+0x86>
mov    $0x815,%edx
lea    0x34e44(%rip),%rcx        # 54b4f <module.52+0x95>
callq  8490 <__assert_fail@plt>
mov    0x10(%rdi),%eax
and    $0x80,%eax
test   %eax,%eax
jne    1fd27 <TIFFWriteDirectoryTagCheckedSshortArray+0x47>
mov    %r9,%rax
mov    %r8,%r9
mov    %rax,%r8
jmp    1fd86 <TIFFWriteDirectoryTagCheckedSshortArray+0xa6>
mov    %r8d,%eax
mov    %r9,%r10
mov    %rcx,-0x8(%rbp)
mov    %rbx,-0x10(%rbp)
mov    %r12,-0x18(%rbp)
mov    %r13,-0x20(%rbp)
mov    %r14,-0x28(%rbp)
mov    %r15,-0x30(%rbp)
mov    %r9,%rbx
mov    %r8,%r12
mov    %rdi,%r13
mov    %r10,%rdi
mov    %rsi,%r14
mov    %rax,%rsi
mov    %rdx,%r15
callq  83d0 <TIFFSwabArrayOfShort@plt>
mov    %r15,%rdx
mov    %r14,%rsi
mov    %r13,%rdi
mov    %rbx,%r8
mov    %r12,%r9
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
mov    -0x10(%rbp),%rbx
mov    -0x8(%rbp),%rcx
sub    $0x10,%rsp
lea    (%r9,%r9,1),%eax
mov    %eax,(%rsp)
mov    %r8,0x8(%rsp)
mov    $0x8,%r8d
callq  20aa0 <TIFFWriteDirectoryTagData>
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

000000000001fdb0 <TIFFWriteDirectoryTagCheckedLong>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    %r8d,-0x24(%rbp)
lea    -0x24(%rbp),%rax
mov    0x10(%rdi),%r8d
and    $0x80,%r8d
test   %r8d,%r8d
je     1fe14 <TIFFWriteDirectoryTagCheckedLong+0x64>
mov    %r12,-0x8(%rbp)
mov    %r13,-0x10(%rbp)
mov    %r14,-0x18(%rbp)
mov    %r15,-0x20(%rbp)
mov    %rcx,%r12
mov    %rdi,%r13
mov    %rax,%rdi
mov    %rdx,%r14
mov    %rsi,%r15
callq  8480 <TIFFSwabLong@plt>
mov    %r12,%rcx
mov    %r14,%rdx
mov    %r15,%rsi
mov    %r13,%rdi
lea    -0x24(%rbp),%rax
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
sub    $0x10,%rsp
movl   $0x4,(%rsp)
mov    %rax,0x8(%rsp)
mov    $0x4,%r8d
mov    $0x1,%r9d
callq  20aa0 <TIFFWriteDirectoryTagData>
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

000000000001fe40 <TIFFWriteDirectoryTagCheckedLongArray>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
cmp    $0x3fffffff,%r8d
jbe    1fe70 <TIFFWriteDirectoryTagCheckedLongArray+0x30>
lea    0x34d1f(%rip),%rdi        # 54b77 <module.52+0xbd>
lea    0x349e3(%rip),%rsi        # 54842 <module.26+0x86>
mov    $0x82a,%edx
lea    0x34d1d(%rip),%rcx        # 54b88 <module.52+0xce>
callq  8490 <__assert_fail@plt>
mov    0x10(%rdi),%eax
and    $0x80,%eax
test   %eax,%eax
jne    1fe87 <TIFFWriteDirectoryTagCheckedLongArray+0x47>
mov    %r9,%rax
mov    %r8,%r9
mov    %rax,%r8
jmp    1fee6 <TIFFWriteDirectoryTagCheckedLongArray+0xa6>
mov    %r8d,%eax
mov    %r9,%r10
mov    %rcx,-0x8(%rbp)
mov    %rbx,-0x10(%rbp)
mov    %r12,-0x18(%rbp)
mov    %r13,-0x20(%rbp)
mov    %r14,-0x28(%rbp)
mov    %r15,-0x30(%rbp)
mov    %r9,%rbx
mov    %r8,%r12
mov    %rdi,%r13
mov    %r10,%rdi
mov    %rsi,%r14
mov    %rax,%rsi
mov    %rdx,%r15
callq  8b70 <TIFFSwabArrayOfLong@plt>
mov    %r15,%rdx
mov    %r14,%rsi
mov    %r13,%rdi
mov    %rbx,%r8
mov    %r12,%r9
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
mov    -0x10(%rbp),%rbx
mov    -0x8(%rbp),%rcx
sub    $0x10,%rsp
mov    %r9,%rax
shl    $0x2,%eax
mov    %eax,(%rsp)
mov    %r8,0x8(%rsp)
mov    $0x4,%r8d
callq  20aa0 <TIFFWriteDirectoryTagData>
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)

000000000001ff10 <TIFFWriteDirectoryTagCheckedSlongArray>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
cmp    $0x3fffffff,%r8d
jbe    1ff40 <TIFFWriteDirectoryTagCheckedSlongArray+0x30>
lea    0x34c4f(%rip),%rdi        # 54b77 <module.52+0xbd>
lea    0x34913(%rip),%rsi        # 54842 <module.26+0x86>
mov    $0x841,%edx
lea    0x34c73(%rip),%rcx        # 54bae <module.52+0xf4>
callq  8490 <__assert_fail@plt>
mov    0x10(%rdi),%eax
and    $0x80,%eax
test   %eax,%eax
jne    1ff57 <TIFFWriteDirectoryTagCheckedSlongArray+0x47>
mov    %r9,%rax
mov    %r8,%r9
mov    %rax,%r8
jmp    1ffb6 <TIFFWriteDirectoryTagCheckedSlongArray+0xa6>
mov    %r8d,%eax
mov    %r9,%r10
mov    %rcx,-0x8(%rbp)
mov    %rbx,-0x10(%rbp)
mov    %r12,-0x18(%rbp)
mov    %r13,-0x20(%rbp)
mov    %r14,-0x28(%rbp)
mov    %r15,-0x30(%rbp)
mov    %r9,%rbx
mov    %r8,%r12
mov    %rdi,%r13
mov    %r10,%rdi
mov    %rsi,%r14
mov    %rax,%rsi
mov    %rdx,%r15
callq  8b70 <TIFFSwabArrayOfLong@plt>
mov    %r15,%rdx
mov    %r14,%rsi
mov    %r13,%rdi
mov    %rbx,%r8
mov    %r12,%r9
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
mov    -0x10(%rbp),%rbx
mov    -0x8(%rbp),%rcx
sub    $0x10,%rsp
mov    %r9,%rax
shl    $0x2,%eax
mov    %eax,(%rsp)
mov    %r8,0x8(%rsp)
mov    $0x9,%r8d
callq  20aa0 <TIFFWriteDirectoryTagData>
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)

000000000001ffe0 <TIFFWriteDirectoryTagCheckedLong8Array>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
lea    0x34bf7(%rip),%r11        # 54be6 <module.52+0x12c>
cmp    $0x1fffffff,%r8d
jbe    20013 <TIFFWriteDirectoryTagCheckedLong8Array+0x33>
mov    %r11,%rcx
lea    0x34bd3(%rip),%rdi        # 54bd5 <module.52+0x11b>
lea    0x34839(%rip),%rsi        # 54842 <module.26+0x86>
mov    $0x85c,%edx
callq  8490 <__assert_fail@plt>
mov    0x10(%rdi),%eax
mov    %rax,%r10
and    $0x80000,%r10d
test   %r10d,%r10d
jne    20041 <TIFFWriteDirectoryTagCheckedLong8Array+0x61>
mov    0x3b8(%rdi),%rdi
mov    %r11,%rsi
lea    0x34bd7(%rip),%rdx        # 54c0d <module.52+0x153>
xor    %eax,%eax
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
and    $0x80,%eax
test   %eax,%eax
jne    20052 <TIFFWriteDirectoryTagCheckedLong8Array+0x72>
mov    %r9,%rax
mov    %r8,%r9
jmp    200b1 <TIFFWriteDirectoryTagCheckedLong8Array+0xd1>
mov    %r8d,%r10d
mov    %r9,%rax
mov    %rcx,-0x8(%rbp)
mov    %rbx,-0x10(%rbp)
mov    %r12,-0x18(%rbp)
mov    %r13,-0x20(%rbp)
mov    %r14,-0x28(%rbp)
mov    %r15,-0x30(%rbp)
mov    %r9,%rbx
mov    %r8,%r12
mov    %rdx,%r13
mov    %rdi,%r14
mov    %rax,%rdi
mov    %rsi,%r15
mov    %r10,%rsi
callq  8930 <TIFFSwabArrayOfLong8@plt>
mov    %rbx,%rax
mov    %r13,%rdx
mov    %r15,%rsi
mov    %r14,%rdi
mov    %r12,%r9
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
mov    -0x10(%rbp),%rbx
mov    -0x8(%rbp),%rcx
sub    $0x10,%rsp
mov    %r9,%r8
shl    $0x3,%r8d
mov    %r8d,(%rsp)
mov    %rax,0x8(%rsp)
mov    $0x10,%r8d
callq  20aa0 <TIFFWriteDirectoryTagData>
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   (%rax)

00000000000200e0 <TIFFWriteDirectoryTagCheckedSlong8Array>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
lea    0x34b40(%rip),%r11        # 54c2f <module.52+0x175>
cmp    $0x1fffffff,%r8d
jbe    20113 <TIFFWriteDirectoryTagCheckedSlong8Array+0x33>
mov    %r11,%rcx
lea    0x34ad3(%rip),%rdi        # 54bd5 <module.52+0x11b>
lea    0x34739(%rip),%rsi        # 54842 <module.26+0x86>
mov    $0x87b,%edx
callq  8490 <__assert_fail@plt>
mov    0x10(%rdi),%eax
mov    %rax,%r10
and    $0x80000,%r10d
test   %r10d,%r10d
jne    20141 <TIFFWriteDirectoryTagCheckedSlong8Array+0x61>
mov    0x3b8(%rdi),%rdi
mov    %r11,%rsi
lea    0x34b21(%rip),%rdx        # 54c57 <module.52+0x19d>
xor    %eax,%eax
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
and    $0x80,%eax
test   %eax,%eax
jne    20152 <TIFFWriteDirectoryTagCheckedSlong8Array+0x72>
mov    %r9,%rax
mov    %r8,%r9
jmp    201b1 <TIFFWriteDirectoryTagCheckedSlong8Array+0xd1>
mov    %r8d,%r10d
mov    %r9,%rax
mov    %rcx,-0x8(%rbp)
mov    %rbx,-0x10(%rbp)
mov    %r12,-0x18(%rbp)
mov    %r13,-0x20(%rbp)
mov    %r14,-0x28(%rbp)
mov    %r15,-0x30(%rbp)
mov    %r9,%rbx
mov    %r8,%r12
mov    %rdx,%r13
mov    %rdi,%r14
mov    %rax,%rdi
mov    %rsi,%r15
mov    %r10,%rsi
callq  8930 <TIFFSwabArrayOfLong8@plt>
mov    %rbx,%rax
mov    %r13,%rdx
mov    %r15,%rsi
mov    %r14,%rdi
mov    %r12,%r9
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
mov    -0x10(%rbp),%rbx
mov    -0x8(%rbp),%rcx
sub    $0x10,%rsp
mov    %r9,%r8
shl    $0x3,%r8d
mov    %r8d,(%rsp)
mov    %rax,0x8(%rsp)
mov    $0x11,%r8d
callq  20aa0 <TIFFWriteDirectoryTagData>
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   (%rax)

00000000000201e0 <TIFFWriteDirectoryTagCheckedRational>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
lea    0x34a8b(%rip),%r8        # 54c7a <module.67>
xorpd  %xmm1,%xmm1
ucomisd %xmm1,%xmm0
jp     201fb <TIFFWriteDirectoryTagCheckedRational+0x1b>
jb     20246 <TIFFWriteDirectoryTagCheckedRational+0x66>
ucomisd %xmm0,%xmm0
jp     20262 <TIFFWriteDirectoryTagCheckedRational+0x82>
ucomisd %xmm1,%xmm0
jp     20209 <TIFFWriteDirectoryTagCheckedRational+0x29>
je     2027e <TIFFWriteDirectoryTagCheckedRational+0x9e>
movsd  0x34c9f(%rip),%xmm1        # 54eb0 <module.82+0x53>
ucomisd %xmm1,%xmm0
jp     2021d <TIFFWriteDirectoryTagCheckedRational+0x3d>
jbe    2030c <TIFFWriteDirectoryTagCheckedRational+0x12c>
movsd  0x34c93(%rip),%xmm2        # 54eb8 <module.82+0x5b>
ucomisd %xmm2,%xmm0
jp     20231 <TIFFWriteDirectoryTagCheckedRational+0x51>
jb     20339 <TIFFWriteDirectoryTagCheckedRational+0x159>
movl   $0xffffffff,-0x28(%rbp)
divsd  %xmm0,%xmm1
cvttsd2si %xmm1,%rax
mov    %eax,-0x24(%rbp)
jmp    2028c <TIFFWriteDirectoryTagCheckedRational+0xac>
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
mov    %r8,%rsi
lea    0x34a46(%rip),%rdx        # 54c9f <module.67+0x25>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
mov    %r8,%rsi
lea    0x34a44(%rip),%rdx        # 54cb9 <module.67+0x3f>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
movl   $0x0,-0x28(%rbp)
movl   $0x1,-0x24(%rbp)
mov    0x10(%rdi),%eax
and    $0x80,%eax
test   %eax,%eax
je     202e5 <TIFFWriteDirectoryTagCheckedRational+0x105>
lea    -0x28(%rbp),%rax
mov    %r12,-0x8(%rbp)
mov    %r13,-0x10(%rbp)
mov    %r14,-0x18(%rbp)
mov    %r15,-0x20(%rbp)
mov    %rcx,%r12
mov    %rdx,%r13
mov    %rdi,%r14
mov    %rax,%rdi
mov    %rsi,%r15
callq  8480 <TIFFSwabLong@plt>
lea    -0x24(%rbp),%rdi
callq  8480 <TIFFSwabLong@plt>
mov    %r12,%rcx
mov    %r13,%rdx
mov    %r15,%rsi
mov    %r14,%rdi
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
sub    $0x10,%rsp
movl   $0x8,(%rsp)
lea    -0x28(%rbp),%rax
mov    %rax,0x8(%rsp)
mov    $0x5,%r8d
mov    $0x1,%r9d
callq  20aa0 <TIFFWriteDirectoryTagData>
leaveq 
retq   
cvttsd2si %xmm0,%r8
mov    %r8d,%eax
cvtsi2sd %rax,%xmm2
ucomisd %xmm2,%xmm0
jp     2021d <TIFFWriteDirectoryTagCheckedRational+0x3d>
jne    2021d <TIFFWriteDirectoryTagCheckedRational+0x3d>
mov    %r8d,-0x28(%rbp)
movl   $0x1,-0x24(%rbp)
jmpq   2028c <TIFFWriteDirectoryTagCheckedRational+0xac>
mulsd  %xmm1,%xmm0
cvttsd2si %xmm0,%rax
mov    %eax,-0x28(%rbp)
movl   $0xffffffff,-0x24(%rbp)
jmpq   2028c <TIFFWriteDirectoryTagCheckedRational+0xac>
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   0x0(%rax)

0000000000020360 <TIFFWriteDirectoryTagCheckedRationalArray>:
push   %rbp
mov    %rsp,%rbp
sub    $0x40,%rsp
mov    %r13,-0x28(%rbp)
mov    %r14,-0x30(%rbp)
mov    %r15,-0x38(%rbp)
mov    %rsi,-0x8(%rbp)
mov    %rdx,-0x10(%rbp)
mov    %rcx,-0x18(%rbp)
lea    (%r8,%r8,1),%eax
mov    %eax,%eax
mov    %rax,-0x20(%rbp)
shl    $0x2,%rax
mov    %r12,%r13
mov    %rbx,%r12
mov    %r9,%rbx
mov    %rdi,%r14
mov    %rax,%rdi
mov    %r8,%r15
callq  8440 <_TIFFmalloc@plt>
test   %rax,%rax
je     203cd <TIFFWriteDirectoryTagCheckedRationalArray+0x6d>
movsd  0x34afe(%rip),%xmm5        # 54eb0 <module.82+0x53>
movss  0x34b06(%rip),%xmm3        # 54ec0 <module.82+0x63>
movss  0x34b02(%rip),%xmm2        # 54ec4 <module.82+0x67>
xorpd  %xmm1,%xmm1
xor    %ecx,%ecx
mov    %rax,%rdx
jmp    20417 <TIFFWriteDirectoryTagCheckedRationalArray+0xb7>
xor    %eax,%eax
mov    0x3b8(%r14),%rdi
lea    0x348fa(%rip),%rsi        # 54cd7 <module.70>
lea    0x3455d(%rip),%rdx        # 54941 <module.26+0x185>
callq  8a00 <TIFFErrorExt@plt>
mov    %r12,%rbx
mov    %r13,%r12
xor    %eax,%eax
mov    -0x38(%rbp),%r15
mov    -0x30(%rbp),%r14
mov    -0x28(%rbp),%r13
leaveq 
retq   
movl   $0x0,(%rdx)
movl   $0x1,0x4(%rdx)
add    $0x8,%rdx
add    $0x4,%rbx
add    $0x1,%ecx
cmp    %ecx,%r15d
ja     2042f <TIFFWriteDirectoryTagCheckedRationalArray+0xcf>
mov    0x10(%r14),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
jne    20475 <TIFFWriteDirectoryTagCheckedRationalArray+0x115>
mov    %rax,%rbx
jmp    20484 <TIFFWriteDirectoryTagCheckedRationalArray+0x124>
movss  (%rbx),%xmm4
ucomiss %xmm1,%xmm4
jp     2043a <TIFFWriteDirectoryTagCheckedRationalArray+0xda>
jbe    203ff <TIFFWriteDirectoryTagCheckedRationalArray+0x9f>
ucomiss %xmm4,%xmm4
jp     203ff <TIFFWriteDirectoryTagCheckedRationalArray+0x9f>
ucomiss %xmm1,%xmm4
jbe    204d9 <TIFFWriteDirectoryTagCheckedRationalArray+0x179>
ucomiss %xmm2,%xmm4
jp     204d9 <TIFFWriteDirectoryTagCheckedRationalArray+0x179>
ja     204d9 <TIFFWriteDirectoryTagCheckedRationalArray+0x179>
cvttss2si %xmm4,%rdi
mov    %edi,%esi
cvtsi2ss %rsi,%xmm0
ucomiss %xmm0,%xmm4
jp     204d9 <TIFFWriteDirectoryTagCheckedRationalArray+0x179>
jne    204d9 <TIFFWriteDirectoryTagCheckedRationalArray+0x179>
mov    %edi,(%rdx)
movl   $0x1,0x4(%rdx)
jmp    2040c <TIFFWriteDirectoryTagCheckedRationalArray+0xac>
mov    %rax,%rbx
mov    %rbx,%rdi
mov    -0x20(%rbp),%rsi
callq  8b70 <TIFFSwabArrayOfLong@plt>
sub    $0x10,%rsp
mov    %r15,%rax
shl    $0x3,%eax
mov    %eax,(%rsp)
mov    %r14,%rdi
mov    %r15,%r9
mov    %rbx,0x8(%rsp)
mov    $0x5,%r8d
mov    -0x18(%rbp),%rcx
mov    -0x10(%rbp),%rdx
mov    -0x8(%rbp),%rsi
callq  20aa0 <TIFFWriteDirectoryTagData>
mov    %rbx,%rdi
mov    %rax,%rbx
add    $0x10,%rsp
callq  8bb0 <_TIFFfree@plt>
mov    %rbx,%rax
mov    %r12,%rbx
mov    %r13,%r12
mov    -0x38(%rbp),%r15
mov    -0x30(%rbp),%r14
mov    -0x28(%rbp),%r13
leaveq 
retq   
ucomiss %xmm3,%xmm4
jp     204e0 <TIFFWriteDirectoryTagCheckedRationalArray+0x180>
jb     20503 <TIFFWriteDirectoryTagCheckedRationalArray+0x1a3>
movl   $0xffffffff,(%rdx)
movss  (%rbx),%xmm0
cvtss2sd %xmm0,%xmm0
movapd %xmm5,%xmm4
divsd  %xmm0,%xmm4
cvttsd2si %xmm4,%rsi
mov    %esi,0x4(%rdx)
jmpq   2040c <TIFFWriteDirectoryTagCheckedRationalArray+0xac>
cvtss2sd %xmm4,%xmm0
mulsd  %xmm5,%xmm0
cvttsd2si %xmm0,%rsi
mov    %esi,(%rdx)
movl   $0xffffffff,0x4(%rdx)
jmpq   2040c <TIFFWriteDirectoryTagCheckedRationalArray+0xac>
xchg   %ax,%ax

0000000000020520 <TIFFWriteDirectoryTagCheckedSrationalArray>:
push   %rbp
mov    %rsp,%rbp
sub    $0x40,%rsp
mov    %r13,-0x28(%rbp)
mov    %r14,-0x30(%rbp)
mov    %r15,-0x38(%rbp)
mov    %rsi,-0x8(%rbp)
mov    %rdx,-0x10(%rbp)
mov    %rcx,-0x18(%rbp)
lea    (%r8,%r8,1),%eax
mov    %eax,%eax
mov    %rax,-0x20(%rbp)
shl    $0x2,%rax
mov    %rbx,%r13
mov    %r9,%rbx
mov    %r8,%r14
mov    %rdi,%r15
mov    %rax,%rdi
callq  8440 <_TIFFmalloc@plt>
test   %rax,%rax
je     20592 <TIFFWriteDirectoryTagCheckedSrationalArray+0x72>
movsd  0x34961(%rip),%xmm6        # 54ed0 <module.82+0x73>
movss  0x34951(%rip),%xmm5        # 54ec8 <module.82+0x6b>
movss  0x34959(%rip),%xmm4        # 54ed8 <module.82+0x7b>
movss  0x34939(%rip),%xmm2        # 54ec0 <module.82+0x63>
xorpd  %xmm1,%xmm1
xor    %ecx,%ecx
mov    %rax,%rdx
jmp    205d5 <TIFFWriteDirectoryTagCheckedSrationalArray+0xb5>
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
lea    0x3475f(%rip),%rsi        # 54d01 <module.71>
lea    0x34398(%rip),%rdx        # 54941 <module.26+0x185>
callq  8a00 <TIFFErrorExt@plt>
mov    %r13,%rbx
xor    %eax,%eax
mov    -0x38(%rbp),%r15
mov    -0x30(%rbp),%r14
mov    -0x28(%rbp),%r13
leaveq 
retq   
mov    %esi,(%rdx)
movl   $0x1,0x4(%rdx)
add    $0x4,%rbx
add    $0x8,%rdx
add    $0x1,%ecx
cmp    %ecx,%r14d
ja     205f3 <TIFFWriteDirectoryTagCheckedSrationalArray+0xd3>
mov    0x10(%r15),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
jne    2063f <TIFFWriteDirectoryTagCheckedSrationalArray+0x11f>
mov    %r15,%rdi
mov    %rax,%rbx
mov    %r14,%r9
jmp    20654 <TIFFWriteDirectoryTagCheckedSrationalArray+0x134>
movss  (%rbx),%xmm0
ucomiss %xmm1,%xmm0
jp     20602 <TIFFWriteDirectoryTagCheckedSrationalArray+0xe2>
jb     206a0 <TIFFWriteDirectoryTagCheckedSrationalArray+0x180>
cvttss2si %xmm0,%esi
cvtsi2ss %esi,%xmm3
ucomiss %xmm3,%xmm0
jp     20615 <TIFFWriteDirectoryTagCheckedSrationalArray+0xf5>
je     206dd <TIFFWriteDirectoryTagCheckedSrationalArray+0x1bd>
ucomiss %xmm2,%xmm0
jp     20620 <TIFFWriteDirectoryTagCheckedSrationalArray+0x100>
jb     206eb <TIFFWriteDirectoryTagCheckedSrationalArray+0x1cb>
movl   $0x7fffffff,(%rdx)
movss  (%rbx),%xmm0
cvtss2sd %xmm0,%xmm0
movapd %xmm6,%xmm3
divsd  %xmm0,%xmm3
cvttsd2si %xmm3,%esi
mov    %esi,0x4(%rdx)
jmp    205ca <TIFFWriteDirectoryTagCheckedSrationalArray+0xaa>
mov    %rax,%rbx
mov    %rbx,%rdi
mov    -0x20(%rbp),%rsi
callq  8b70 <TIFFSwabArrayOfLong@plt>
mov    %r15,%rdi
mov    %r14,%r9
sub    $0x10,%rsp
mov    %r9,%rax
shl    $0x3,%eax
mov    %eax,(%rsp)
mov    %rbx,0x8(%rsp)
mov    $0xa,%r8d
mov    -0x18(%rbp),%rcx
mov    -0x10(%rbp),%rdx
mov    -0x8(%rbp),%rsi
callq  20aa0 <TIFFWriteDirectoryTagData>
mov    %rbx,%rdi
mov    %rax,%rbx
add    $0x10,%rsp
callq  8bb0 <_TIFFfree@plt>
mov    %rbx,%rax
mov    %r13,%rbx
mov    -0x38(%rbp),%r15
mov    -0x30(%rbp),%r14
mov    -0x28(%rbp),%r13
leaveq 
retq   
cvttss2si %xmm0,%esi
cvtsi2ss %esi,%xmm3
ucomiss %xmm3,%xmm0
jp     206b3 <TIFFWriteDirectoryTagCheckedSrationalArray+0x193>
je     205c1 <TIFFWriteDirectoryTagCheckedSrationalArray+0xa1>
ucomiss %xmm4,%xmm0
ja     20705 <TIFFWriteDirectoryTagCheckedSrationalArray+0x1e5>
movl   $0x80000001,(%rdx)
movss  (%rbx),%xmm0
xorps  %xmm5,%xmm0
cvtss2sd %xmm0,%xmm0
movapd %xmm6,%xmm3
divsd  %xmm0,%xmm3
cvttsd2si %xmm3,%esi
mov    %esi,0x4(%rdx)
jmpq   205ca <TIFFWriteDirectoryTagCheckedSrationalArray+0xaa>
mov    %esi,(%rdx)
movl   $0x1,0x4(%rdx)
jmpq   205ca <TIFFWriteDirectoryTagCheckedSrationalArray+0xaa>
cvtss2sd %xmm0,%xmm0
mulsd  %xmm6,%xmm0
cvttsd2si %xmm0,%esi
mov    %esi,(%rdx)
movl   $0x7fffffff,0x4(%rdx)
jmpq   205ca <TIFFWriteDirectoryTagCheckedSrationalArray+0xaa>
xorps  %xmm5,%xmm0
cvtss2sd %xmm0,%xmm0
mulsd  %xmm6,%xmm0
cvttsd2si %xmm0,%esi
neg    %esi
mov    %esi,(%rdx)
movl   $0x7fffffff,0x4(%rdx)
jmpq   205ca <TIFFWriteDirectoryTagCheckedSrationalArray+0xaa>
data16 nopw %cs:0x0(%rax,%rax,1)
nop

0000000000020730 <TIFFWriteDirectoryTagCheckedFloatArray>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
cmp    $0x3fffffff,%r8d
jbe    20760 <TIFFWriteDirectoryTagCheckedFloatArray+0x30>
lea    0x3442f(%rip),%rdi        # 54b77 <module.52+0xbd>
lea    0x340f3(%rip),%rsi        # 54842 <module.26+0x86>
mov    $0x930,%edx
lea    0x345d1(%rip),%rcx        # 54d2c <module.71+0x2b>
callq  8490 <__assert_fail@plt>
mov    0x10(%rdi),%eax
and    $0x80,%eax
test   %eax,%eax
jne    20777 <TIFFWriteDirectoryTagCheckedFloatArray+0x47>
mov    %r9,%rax
mov    %r8,%r9
mov    %rax,%r8
jmp    207d6 <TIFFWriteDirectoryTagCheckedFloatArray+0xa6>
mov    %r8d,%eax
mov    %r9,%r10
mov    %rcx,-0x8(%rbp)
mov    %rbx,-0x10(%rbp)
mov    %r12,-0x18(%rbp)
mov    %r13,-0x20(%rbp)
mov    %r14,-0x28(%rbp)
mov    %r15,-0x30(%rbp)
mov    %r9,%rbx
mov    %r8,%r12
mov    %rdi,%r13
mov    %r10,%rdi
mov    %rsi,%r14
mov    %rax,%rsi
mov    %rdx,%r15
callq  8060 <TIFFSwabArrayOfFloat@plt>
mov    %r15,%rdx
mov    %r14,%rsi
mov    %r13,%rdi
mov    %rbx,%r8
mov    %r12,%r9
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
mov    -0x10(%rbp),%rbx
mov    -0x8(%rbp),%rcx
sub    $0x10,%rsp
mov    %r9,%rax
shl    $0x2,%eax
mov    %eax,(%rsp)
mov    %r8,0x8(%rsp)
mov    $0xb,%r8d
callq  20aa0 <TIFFWriteDirectoryTagData>
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)

0000000000020800 <TIFFWriteDirectoryTagCheckedDoubleArray>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
cmp    $0x1fffffff,%r8d
jbe    20830 <TIFFWriteDirectoryTagCheckedDoubleArray+0x30>
lea    0x343bd(%rip),%rdi        # 54bd5 <module.52+0x11b>
lea    0x34023(%rip),%rsi        # 54842 <module.26+0x86>
mov    $0x949,%edx
lea    0x34528(%rip),%rcx        # 54d53 <module.71+0x52>
callq  8490 <__assert_fail@plt>
mov    0x10(%rdi),%eax
and    $0x80,%eax
test   %eax,%eax
jne    20847 <TIFFWriteDirectoryTagCheckedDoubleArray+0x47>
mov    %r9,%rax
mov    %r8,%r9
mov    %rax,%r8
jmp    208a6 <TIFFWriteDirectoryTagCheckedDoubleArray+0xa6>
mov    %r8d,%eax
mov    %r9,%r10
mov    %rcx,-0x8(%rbp)
mov    %rbx,-0x10(%rbp)
mov    %r12,-0x18(%rbp)
mov    %r13,-0x20(%rbp)
mov    %r14,-0x28(%rbp)
mov    %r15,-0x30(%rbp)
mov    %r9,%rbx
mov    %r8,%r12
mov    %rdi,%r13
mov    %r10,%rdi
mov    %rsi,%r14
mov    %rax,%rsi
mov    %rdx,%r15
callq  81b0 <TIFFSwabArrayOfDouble@plt>
mov    %r15,%rdx
mov    %r14,%rsi
mov    %r13,%rdi
mov    %rbx,%r8
mov    %r12,%r9
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
mov    -0x10(%rbp),%rbx
mov    -0x8(%rbp),%rcx
sub    $0x10,%rsp
mov    %r9,%rax
shl    $0x3,%eax
mov    %eax,(%rsp)
mov    %r8,0x8(%rsp)
mov    $0xc,%r8d
callq  20aa0 <TIFFWriteDirectoryTagData>
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)

00000000000208d0 <TIFFWriteDirectoryTagCheckedIfdArray>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
cmp    $0x3fffffff,%r8d
jbe    20900 <TIFFWriteDirectoryTagCheckedIfdArray+0x30>
lea    0x3428f(%rip),%rdi        # 54b77 <module.52+0xbd>
lea    0x33f53(%rip),%rsi        # 54842 <module.26+0x86>
mov    $0x954,%edx
lea    0x34480(%rip),%rcx        # 54d7b <module.71+0x7a>
callq  8490 <__assert_fail@plt>
mov    0x10(%rdi),%eax
and    $0x80,%eax
test   %eax,%eax
jne    20917 <TIFFWriteDirectoryTagCheckedIfdArray+0x47>
mov    %r9,%rax
mov    %r8,%r9
mov    %rax,%r8
jmp    20976 <TIFFWriteDirectoryTagCheckedIfdArray+0xa6>
mov    %r8d,%eax
mov    %r9,%r10
mov    %rcx,-0x8(%rbp)
mov    %rbx,-0x10(%rbp)
mov    %r12,-0x18(%rbp)
mov    %r13,-0x20(%rbp)
mov    %r14,-0x28(%rbp)
mov    %r15,-0x30(%rbp)
mov    %r9,%rbx
mov    %r8,%r12
mov    %rdi,%r13
mov    %r10,%rdi
mov    %rsi,%r14
mov    %rax,%rsi
mov    %rdx,%r15
callq  8b70 <TIFFSwabArrayOfLong@plt>
mov    %r15,%rdx
mov    %r14,%rsi
mov    %r13,%rdi
mov    %rbx,%r8
mov    %r12,%r9
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
mov    -0x10(%rbp),%rbx
mov    -0x8(%rbp),%rcx
sub    $0x10,%rsp
mov    %r9,%rax
shl    $0x2,%eax
mov    %eax,(%rsp)
mov    %r8,0x8(%rsp)
mov    $0xd,%r8d
callq  20aa0 <TIFFWriteDirectoryTagData>
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)

00000000000209a0 <TIFFWriteDirectoryTagCheckedIfd8Array>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
lea    0x33e93(%rip),%r11        # 54842 <module.26+0x86>
lea    0x343ea(%rip),%rax        # 54da0 <module.71+0x9f>
cmp    $0x1fffffff,%r8d
jbe    209d6 <TIFFWriteDirectoryTagCheckedIfd8Array+0x36>
mov    %rax,%rcx
mov    %r11,%rsi
lea    0x34209(%rip),%rdi        # 54bd5 <module.52+0x11b>
mov    $0x95e,%edx
callq  8490 <__assert_fail@plt>
mov    0x10(%rdi),%eax
mov    %rax,%r10
and    $0x80000,%r10d
test   %r10d,%r10d
jne    20a03 <TIFFWriteDirectoryTagCheckedIfd8Array+0x63>
mov    %r11,%rsi
lea    0x343d4(%rip),%rdi        # 54dc6 <module.71+0xc5>
mov    $0x960,%edx
lea    0x343a2(%rip),%rcx        # 54da0 <module.71+0x9f>
callq  8490 <__assert_fail@plt>
and    $0x80,%eax
test   %eax,%eax
jne    20a14 <TIFFWriteDirectoryTagCheckedIfd8Array+0x74>
mov    %r9,%rax
mov    %r8,%r9
jmp    20a73 <TIFFWriteDirectoryTagCheckedIfd8Array+0xd3>
mov    %r8d,%r10d
mov    %r9,%rax
mov    %rcx,-0x8(%rbp)
mov    %rbx,-0x10(%rbp)
mov    %r12,-0x18(%rbp)
mov    %r13,-0x20(%rbp)
mov    %r14,-0x28(%rbp)
mov    %r15,-0x30(%rbp)
mov    %r9,%rbx
mov    %r8,%r12
mov    %rdi,%r13
mov    %rax,%rdi
mov    %rsi,%r14
mov    %r10,%rsi
mov    %rdx,%r15
callq  8930 <TIFFSwabArrayOfLong8@plt>
mov    %rbx,%rax
mov    %r15,%rdx
mov    %r14,%rsi
mov    %r13,%rdi
mov    %r12,%r9
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
mov    -0x10(%rbp),%rbx
mov    -0x8(%rbp),%rcx
sub    $0x10,%rsp
mov    %r9,%r8
shl    $0x3,%r8d
mov    %r8d,(%rsp)
mov    %rax,0x8(%rsp)
mov    $0x12,%r8d
callq  20aa0 <TIFFWriteDirectoryTagData>
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nop

0000000000020aa0 <TIFFWriteDirectoryTagData>:
push   %rbp
mov    %rsp,%rbp
sub    $0x40,%rsp
mov    %r15,-0x18(%rbp)
xor    %r11d,%r11d
mov    %r11,%r10
jmp    20abe <TIFFWriteDirectoryTagData+0x1e>
cmp    %cx,%r15w
ja     20af4 <TIFFWriteDirectoryTagData+0x54>
add    $0x1,%r10d
mov    %r10d,%eax
cmp    (%rsi),%r10d
jae    20af4 <TIFFWriteDirectoryTagData+0x54>
lea    (%rax,%rax,2),%r15
movzwl (%rdx,%r15,8),%r15d
cmp    %cx,%r15w
jne    20ab4 <TIFFWriteDirectoryTagData+0x14>
lea    0x34320(%rip),%rdi        # 54dfc <module.77+0x1a>
mov    $0x96e,%edx
lea    0x34329(%rip),%rcx        # 54e11 <module.77+0x2f>
lea    0x33d53(%rip),%rsi        # 54842 <module.26+0x86>
callq  8490 <__assert_fail@plt>
mov    (%rsi),%r15d
cmp    %r15d,%r10d
jb     20b8c <TIFFWriteDirectoryTagData+0xec>
mov    %rsi,%r15
lea    (%rax,%rax,2),%rax
lea    (%rdx,%rax,8),%rdx
mov    %cx,(%rdx)
mov    %r8w,0x2(%rdx)
mov    %r9d,%eax
mov    %rax,0x8(%rdx)
movq   $0x0,0x10(%rdx)
mov    $0x4,%r8d
mov    0x10(%rdi),%ecx
and    $0x80000,%ecx
test   %ecx,%ecx
je     20b3b <TIFFWriteDirectoryTagData+0x9b>
mov    $0x8,%r8d
mov    0x18(%rbp),%rsi
lea    0x10(%rdx),%r9
mov    0x10(%rbp),%edx
cmp    %edx,%r8d
jae    20b9d <TIFFWriteDirectoryTagData+0xfd>
test   %ecx,%ecx
mov    0x290(%rdi),%rcx
lea    (%rdx,%rcx,1),%rax
jne    20b5c <TIFFWriteDirectoryTagData+0xbc>
mov    %eax,%eax
lea    0x3427f(%rip),%r8        # 54de2 <module.77>
cmp    %rcx,%rax
jae    20bb9 <TIFFWriteDirectoryTagData+0x119>
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
mov    %r8,%rsi
mov    %r11,%r15
lea    0x33dd1(%rip),%rdx        # 5494f <module.26+0x193>
callq  8a00 <TIFFErrorExt@plt>
mov    %r15,%rax
mov    -0x18(%rbp),%r15
leaveq 
retq   
mov    %r14,-0x38(%rbp)
mov    %rsi,-0x28(%rbp)
mov    %r13,-0x30(%rbp)
jmpq   20c4a <TIFFWriteDirectoryTagData+0x1aa>
mov    %r9,%rdi
callq  8790 <_TIFFmemcpy@plt>
mov    (%r15),%eax
add    $0x1,%eax
mov    %eax,(%r15)
mov    $0x1,%eax
mov    -0x18(%rbp),%r15
leaveq 
retq   
cmp    %rdx,%rax
jb     20b68 <TIFFWriteDirectoryTagData+0xc8>
mov    %rdi,%r8
mov    %rcx,%r10
mov    %r14,-0x10(%rbp)
mov    %rsi,-0x38(%rbp)
mov    %rax,-0x30(%rbp)
mov    %rcx,-0x20(%rbp)
mov    %r9,-0x28(%rbp)
mov    %r15,-0x8(%rbp)
mov    %r10,%rsi
mov    %rdi,%r14
mov    %r8,%rdi
mov    %rdx,%r15
callq  82f0 <_TIFFSeekOK@plt>
test   %eax,%eax
jne    20c60 <TIFFWriteDirectoryTagData+0x1c0>
xor    %eax,%eax
mov    0x3b8(%r14),%rdi
lea    0x341e1(%rip),%rsi        # 54de2 <module.77>
lea    0x34223(%rip),%rdx        # 54e2b <module.77+0x49>
callq  8a00 <TIFFErrorExt@plt>
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
xor    %eax,%eax
leaveq 
retq   
lea    -0x1(%r15),%r14d
mov    %r14d,%esi
lea    (%rsi,%rsi,2),%r13
mov    (%rdx,%r13,8),%rsi
mov    %r15d,%r15d
lea    (%r15,%r15,2),%r15
mov    %rsi,(%rdx,%r15,8)
mov    0x8(%rdx,%r13,8),%rsi
mov    %rsi,0x8(%rdx,%r15,8)
mov    0x10(%rdx,%r13,8),%rsi
mov    %rsi,0x10(%rdx,%r15,8)
mov    %r14,%r15
cmp    %r15d,%r10d
jb     20c19 <TIFFWriteDirectoryTagData+0x179>
mov    -0x30(%rbp),%r13
mov    -0x28(%rbp),%r15
mov    -0x38(%rbp),%r14
jmpq   20b03 <TIFFWriteDirectoryTagData+0x63>
cmp    $0x7fffffff,%r15d
jbe    20c88 <TIFFWriteDirectoryTagData+0x1e8>
lea    0x341d5(%rip),%rdi        # 54e45 <module.77+0x63>
mov    $0x990,%edx
lea    0x34195(%rip),%rcx        # 54e11 <module.77+0x2f>
lea    0x33bbf(%rip),%rsi        # 54842 <module.26+0x86>
callq  8490 <__assert_fail@plt>
mov    0x3c8(%r14),%rax
mov    0x3b8(%r14),%rdi
mov    %r15,%rdx
mov    -0x38(%rbp),%rsi
callq  *%rax
cmp    %r15,%rax
je     20ccc <TIFFWriteDirectoryTagData+0x22c>
xor    %eax,%eax
mov    0x3b8(%r14),%rdi
lea    0x3412e(%rip),%rsi        # 54de2 <module.77>
lea    0x34170(%rip),%rdx        # 54e2b <module.77+0x49>
callq  8a00 <TIFFErrorExt@plt>
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
xor    %eax,%eax
leaveq 
retq   
mov    -0x30(%rbp),%rcx
mov    %rcx,0x290(%r14)
mov    %rcx,%rax
and    $0x1,%rax
test   %rax,%rax
je     20cee <TIFFWriteDirectoryTagData+0x24e>
lea    0x1(%rcx),%rax
mov    %rax,0x290(%r14)
mov    0x10(%r14),%eax
mov    %rax,%rcx
and    $0x80000,%ecx
test   %ecx,%ecx
jne    20d3c <TIFFWriteDirectoryTagData+0x29c>
mov    -0x20(%rbp),%rcx
mov    %ecx,-0x3c(%rbp)
lea    -0x3c(%rbp),%rsi
and    $0x80,%eax
test   %eax,%eax
je     20d21 <TIFFWriteDirectoryTagData+0x281>
mov    %rsi,%r14
mov    %r14,%rdi
callq  8480 <TIFFSwabLong@plt>
mov    %r14,%rsi
mov    -0x28(%rbp),%rdi
mov    $0x4,%edx
callq  8790 <_TIFFmemcpy@plt>
mov    -0x8(%rbp),%r15
mov    -0x10(%rbp),%r14
jmpq   20ba5 <TIFFWriteDirectoryTagData+0x105>
mov    -0x28(%rbp),%rdi
mov    -0x20(%rbp),%rax
mov    %rax,(%rdi)
mov    0x10(%r14),%eax
and    $0x80,%eax
test   %eax,%eax
jne    20d61 <TIFFWriteDirectoryTagData+0x2c1>
mov    -0x8(%rbp),%r15
mov    -0x10(%rbp),%r14
jmpq   20ba5 <TIFFWriteDirectoryTagData+0x105>
callq  8730 <TIFFSwabLong8@plt>
mov    -0x8(%rbp),%r15
mov    -0x10(%rbp),%r14
jmpq   20ba5 <TIFFWriteDirectoryTagData+0x105>
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

0000000000020d80 <TIFFLinkDirectory>:
push   %rbp
mov    %rsp,%rbp
sub    $0x70,%rsp
mov    %r15,-0x28(%rbp)
mov    %r14,%r15
mov    %r13,%r14
mov    %r12,%r13
mov    %rbx,%r12
mov    %rdi,%rbx
xor    %esi,%esi
mov    0x3d0(%rbx),%rax
mov    0x3b8(%rbx),%rdi
mov    $0x2,%edx
callq  *%rax
add    $0x1,%rax
and    $0xfffffffffffffffe,%rax
mov    %rax,0x18(%rbx)
mov    $0x4,%r8d
mov    $0x8,%esi
mov    0x10(%rbx),%ecx
mov    %rcx,%rdx
and    $0x2000,%edx
test   %edx,%edx
jne    20e07 <TIFFLinkDirectory+0x87>
mov    %rcx,%rdx
and    $0x80000,%edx
test   %edx,%edx
jne    20e9a <TIFFLinkDirectory+0x11a>
mov    %eax,-0x54(%rbp)
lea    -0x54(%rbp),%rdi
and    $0x80,%ecx
test   %ecx,%ecx
jne    20eeb <TIFFLinkDirectory+0x16b>
mov    %r8,%rsi
jmpq   20ef5 <TIFFLinkDirectory+0x175>
mov    %rcx,%rdx
and    $0x80000,%edx
test   %edx,%edx
jne    20f2b <TIFFLinkDirectory+0x1ab>
mov    %eax,-0x64(%rbp)
lea    -0x64(%rbp),%rdi
and    $0x80,%ecx
test   %ecx,%ecx
je     20e2e <TIFFLinkDirectory+0xae>
callq  8480 <TIFFSwabLong@plt>
mov    0x3d0(%rbx),%rax
mov    0x3b8(%rbx),%rdi
mov    0x2a0(%rbx),%rsi
xor    %edx,%edx
callq  *%rax
mov    0x3c8(%rbx),%rax
mov    0x3b8(%rbx),%rdi
lea    -0x64(%rbp),%rsi
mov    $0x4,%edx
callq  *%rax
cmp    $0x4,%rax
je     20fae <TIFFLinkDirectory+0x22e>
xor    %eax,%eax
mov    0x3b8(%rbx),%rdi
lea    0x33ff5(%rip),%rdx        # 54e6f <module.82+0x12>
lea    0x33fdc(%rip),%rsi        # 54e5d <module.82>
callq  8a00 <TIFFErrorExt@plt>
mov    %r12,%rbx
mov    %r13,%r12
mov    %r14,%r13
mov    %r15,%r14
xor    %eax,%eax
mov    -0x28(%rbp),%r15
leaveq 
retq   
mov    %rax,-0x48(%rbp)
lea    -0x48(%rbp),%rdi
and    $0x80,%ecx
test   %ecx,%ecx
je     20eb6 <TIFFLinkDirectory+0x136>
callq  8730 <TIFFSwabLong8@plt>
mov    $0x8,%esi
mov    0x270(%rbx),%rcx
test   %rcx,%rcx
je     20fec <TIFFLinkDirectory+0x26c>
lea    -0x40(%rbp),%rax
mov    %r12,-0x8(%rbp)
mov    %r13,-0x10(%rbp)
mov    %r14,-0x18(%rbp)
mov    %r15,-0x20(%rbp)
mov    %rsi,%r12
mov    %rax,%r14
mov    %rcx,%r15
xor    %r13d,%r13d
jmpq   210b0 <TIFFLinkDirectory+0x330>
callq  8480 <TIFFSwabLong@plt>
mov    $0x4,%esi
mov    0x26c(%rbx),%ecx
test   %ecx,%ecx
je     2113c <TIFFLinkDirectory+0x3bc>
lea    -0x4e(%rbp),%rax
mov    %r12,-0x8(%rbp)
mov    %r13,-0x10(%rbp)
mov    %r14,-0x18(%rbp)
mov    %r15,-0x20(%rbp)
mov    %rax,%r13
mov    %rcx,%r15
mov    $0x2,%r14d
xor    %r12d,%r12d
jmpq   211b2 <TIFFLinkDirectory+0x432>
mov    %rax,-0x60(%rbp)
lea    -0x60(%rbp),%rdi
and    $0x80,%ecx
test   %ecx,%ecx
je     20f42 <TIFFLinkDirectory+0x1c2>
callq  8730 <TIFFSwabLong8@plt>
mov    0x3d0(%rbx),%rax
mov    0x3b8(%rbx),%rdi
mov    0x2a0(%rbx),%rsi
xor    %edx,%edx
callq  *%rax
mov    0x3c8(%rbx),%rax
mov    0x3b8(%rbx),%rdi
lea    -0x60(%rbp),%rsi
mov    $0x8,%edx
callq  *%rax
cmp    $0x8,%rax
je     2127c <TIFFLinkDirectory+0x4fc>
xor    %eax,%eax
mov    0x3b8(%rbx),%rdi
lea    0x33ee1(%rip),%rdx        # 54e6f <module.82+0x12>
lea    0x33ec8(%rip),%rsi        # 54e5d <module.82>
callq  8a00 <TIFFErrorExt@plt>
mov    %r12,%rbx
mov    %r13,%r12
mov    %r14,%r13
mov    %r15,%r14
xor    %eax,%eax
mov    -0x28(%rbp),%r15
leaveq 
retq   
movzwl 0x298(%rbx),%eax
add    $0xffff,%eax
mov    %ax,0x298(%rbx)
test   %ax,%ax
jne    212ba <TIFFLinkDirectory+0x53a>
mov    0x10(%rbx),%eax
and    $0xffffdfff,%eax
mov    %eax,0x10(%rbx)
mov    %r12,%rbx
mov    %r13,%r12
mov    %r14,%r13
mov    %r15,%r14
mov    $0x1,%eax
mov    -0x28(%rbp),%r15
leaveq 
retq   
mov    0x18(%rbx),%rax
mov    %rax,0x270(%rbx)
mov    0x3d0(%rbx),%rax
mov    0x3b8(%rbx),%rdi
xor    %edx,%edx
callq  *%rax
mov    0x3c8(%rbx),%rax
mov    0x3b8(%rbx),%rdi
lea    -0x48(%rbp),%rsi
mov    $0x8,%edx
callq  *%rax
cmp    $0x8,%rax
jne    212e3 <TIFFLinkDirectory+0x563>
mov    %r12,%rbx
mov    %r13,%r12
mov    %r14,%r13
mov    %r15,%r14
mov    $0x1,%eax
mov    -0x28(%rbp),%r15
leaveq 
retq   
movzwl %ax,%eax
lea    (%rax,%rax,4),%eax
shl    $0x2,%eax
movslq %eax,%rax
lea    0x8(%r15,%rax,1),%rsi
mov    %rsi,-0x30(%rbp)
mov    0x3d0(%rbx),%rax
mov    0x3b8(%rbx),%rdi
mov    %r13,%rdx
callq  *%rax
mov    0x3c0(%rbx),%rax
mov    0x3b8(%rbx),%rdi
lea    -0x38(%rbp),%r15
mov    %r15,%rsi
mov    %r12,%rdx
callq  *%rax
cmp    $0x8,%rax
jne    2130f <TIFFLinkDirectory+0x58f>
mov    0x10(%rbx),%eax
and    $0x80,%eax
test   %eax,%eax
je     210a3 <TIFFLinkDirectory+0x323>
mov    %r15,%rdi
callq  8730 <TIFFSwabLong8@plt>
mov    -0x38(%rbp),%r15
test   %r15,%r15
je     21344 <TIFFLinkDirectory+0x5c4>
mov    %rbx,%rdi
mov    %r15,%rsi
callq  82f0 <_TIFFSeekOK@plt>
test   %eax,%eax
je     21397 <TIFFLinkDirectory+0x617>
mov    0x3c0(%rbx),%rax
mov    0x3b8(%rbx),%rdi
mov    %r14,%rsi
mov    %r12,%rdx
callq  *%rax
cmp    $0x8,%rax
jne    21397 <TIFFLinkDirectory+0x617>
mov    0x10(%rbx),%eax
and    $0x80,%eax
test   %eax,%eax
je     210f7 <TIFFLinkDirectory+0x377>
mov    %r14,%rdi
callq  8730 <TIFFSwabLong8@plt>
mov    -0x40(%rbp),%rax
cmp    $0xffff,%rax
jbe    21043 <TIFFLinkDirectory+0x2c3>
xor    %eax,%eax
mov    0x3b8(%rbx),%rdi
lea    0x334f3(%rip),%rdx        # 5460a <module.10+0x8a>
lea    0x33d3f(%rip),%rsi        # 54e5d <module.82>
callq  8a00 <TIFFErrorExt@plt>
mov    %r13,%rax
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x28(%rbp),%r15
leaveq 
retq   
mov    0x18(%rbx),%eax
mov    %eax,0x26c(%rbx)
mov    0x3d0(%rbx),%rax
mov    0x3b8(%rbx),%rdi
xor    %edx,%edx
callq  *%rax
mov    0x3c8(%rbx),%rax
mov    0x3b8(%rbx),%rdi
lea    -0x54(%rbp),%rsi
mov    $0x4,%edx
callq  *%rax
cmp    $0x4,%rax
jne    213cc <TIFFLinkDirectory+0x64c>
mov    %r12,%rbx
mov    %r13,%r12
mov    %r14,%r13
mov    %r15,%r14
mov    $0x1,%eax
mov    -0x28(%rbp),%r15
leaveq 
retq   
mov    0x10(%rbx),%eax
and    $0x80,%eax
test   %eax,%eax
je     211a5 <TIFFLinkDirectory+0x425>
mov    %r15,%rdi
callq  8480 <TIFFSwabLong@plt>
mov    -0x4c(%rbp),%r15d
test   %r15d,%r15d
je     213f8 <TIFFLinkDirectory+0x678>
mov    %r15d,%esi
mov    %rbx,%rdi
callq  82f0 <_TIFFSeekOK@plt>
test   %eax,%eax
je     2145a <TIFFLinkDirectory+0x6da>
mov    0x3c0(%rbx),%rax
mov    0x3b8(%rbx),%rdi
mov    %r13,%rsi
mov    %r14,%rdx
callq  *%rax
cmp    $0x2,%rax
jne    2145a <TIFFLinkDirectory+0x6da>
mov    0x10(%rbx),%eax
and    $0x80,%eax
test   %eax,%eax
je     211f9 <TIFFLinkDirectory+0x479>
mov    %r13,%rdi
callq  87c0 <TIFFSwabShort@plt>
movzwl -0x4e(%rbp),%eax
lea    (%rax,%rax,2),%eax
lea    0x2(%r15,%rax,4),%eax
mov    %eax,%esi
mov    0x3d0(%rbx),%rax
mov    0x3b8(%rbx),%rdi
mov    %r12,%rdx
callq  *%rax
mov    0x3c0(%rbx),%rax
mov    0x3b8(%rbx),%rdi
lea    -0x4c(%rbp),%rcx
mov    %rcx,%rsi
mov    $0x4,%edx
mov    %r15,-0x30(%rbp)
mov    %rcx,%r15
callq  *%rax
cmp    $0x4,%rax
je     21191 <TIFFLinkDirectory+0x411>
xor    %eax,%eax
mov    0x3b8(%rbx),%rdi
lea    0x33c06(%rip),%rsi        # 54e5d <module.82>
lea    0x33371(%rip),%rdx        # 545cf <module.10+0x4f>
callq  8a00 <TIFFErrorExt@plt>
mov    %r12,%rax
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x28(%rbp),%r15
leaveq 
retq   
movzwl 0x298(%rbx),%eax
add    $0xffff,%eax
mov    %ax,0x298(%rbx)
test   %ax,%ax
jne    2148f <TIFFLinkDirectory+0x70f>
mov    0x10(%rbx),%eax
and    $0xffffdfff,%eax
mov    %eax,0x10(%rbx)
mov    %r12,%rbx
mov    %r13,%r12
mov    %r14,%r13
mov    %r15,%r14
mov    $0x1,%eax
mov    -0x28(%rbp),%r15
leaveq 
retq   
mov    0x2a0(%rbx),%rax
add    $0x4,%rax
mov    %rax,0x2a0(%rbx)
mov    %r12,%rbx
mov    %r13,%r12
mov    %r14,%r13
mov    %r15,%r14
mov    $0x1,%eax
mov    -0x28(%rbp),%r15
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rbx),%rdi
mov    (%rbx),%rsi
lea    0x33b9d(%rip),%rdx        # 54e93 <module.82+0x36>
callq  8a00 <TIFFErrorExt@plt>
mov    %r12,%rbx
mov    %r13,%r12
mov    %r14,%r13
mov    %r15,%r14
xor    %eax,%eax
mov    -0x28(%rbp),%r15
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rbx),%rdi
lea    0x33b3e(%rip),%rsi        # 54e5d <module.82>
lea    0x332a9(%rip),%rdx        # 545cf <module.10+0x4f>
callq  8a00 <TIFFErrorExt@plt>
mov    %r13,%rax
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x28(%rbp),%r15
leaveq 
retq   
mov    0x3d0(%rbx),%rax
mov    0x3b8(%rbx),%rdi
mov    %r13,%rdx
mov    -0x30(%rbp),%rsi
callq  *%rax
mov    %r12,%rdx
mov    0x3c8(%rbx),%rax
mov    0x3b8(%rbx),%rdi
lea    -0x48(%rbp),%rsi
callq  *%rax
cmp    $0x8,%rax
jne    214b8 <TIFFLinkDirectory+0x738>
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    $0x1,%eax
mov    -0x28(%rbp),%r15
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rbx),%rdi
lea    0x33209(%rip),%rdx        # 545b0 <module.10+0x30>
lea    0x33aaf(%rip),%rsi        # 54e5d <module.82>
callq  8a00 <TIFFErrorExt@plt>
mov    %r13,%rax
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x28(%rbp),%r15
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rbx),%rdi
mov    (%rbx),%rsi
lea    0x33ab4(%rip),%rdx        # 54e93 <module.82+0x36>
callq  8a00 <TIFFErrorExt@plt>
mov    %r12,%rbx
mov    %r13,%r12
mov    %r14,%r13
mov    %r15,%r14
xor    %eax,%eax
mov    -0x28(%rbp),%r15
leaveq 
retq   
movzwl -0x4e(%rbp),%eax
lea    (%rax,%rax,2),%eax
mov    -0x30(%rbp),%rcx
lea    0x2(%rcx,%rax,4),%eax
mov    %eax,%esi
mov    0x3d0(%rbx),%rax
mov    0x3b8(%rbx),%rdi
mov    %r12,%rdx
callq  *%rax
mov    0x3c8(%rbx),%rax
mov    0x3b8(%rbx),%rdi
lea    -0x54(%rbp),%rsi
mov    $0x4,%edx
callq  *%rax
cmp    $0x4,%rax
jne    214ed <TIFFLinkDirectory+0x76d>
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    $0x1,%eax
mov    -0x28(%rbp),%r15
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rbx),%rdi
lea    0x33146(%rip),%rdx        # 545b0 <module.10+0x30>
lea    0x339ec(%rip),%rsi        # 54e5d <module.82>
callq  8a00 <TIFFErrorExt@plt>
mov    %r12,%rax
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x28(%rbp),%r15
leaveq 
retq   
mov    0x2a0(%rbx),%rax
add    $0x8,%rax
mov    %rax,0x2a0(%rbx)
mov    %r12,%rbx
mov    %r13,%r12
mov    %r14,%r13
mov    %r15,%r14
mov    $0x1,%eax
mov    -0x28(%rbp),%r15
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rbx),%rdi
lea    0x33995(%rip),%rsi        # 54e5d <module.82>
lea    0x3311e(%rip),%rdx        # 545ed <module.10+0x6d>
callq  8a00 <TIFFErrorExt@plt>
mov    %r13,%rax
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x28(%rbp),%r15
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rbx),%rdi
lea    0x33960(%rip),%rsi        # 54e5d <module.82>
lea    0x330e9(%rip),%rdx        # 545ed <module.10+0x6d>
callq  8a00 <TIFFErrorExt@plt>
mov    %r12,%rax
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x28(%rbp),%r15
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   (%rax)

0000000000021530 <TIFFClampDoubleToFloat>:
push   %rbp
mov    %rsp,%rbp
movsd  0x339ac(%rip),%xmm1        # 54ee8 <module.82+0x8b>
ucomisd %xmm1,%xmm0
jbe    2154c <TIFFClampDoubleToFloat+0x1c>
movss  0x33992(%rip),%xmm0        # 54edc <module.82+0x7f>
leaveq 
retq   
movsd  0x3399c(%rip),%xmm1        # 54ef0 <module.82+0x93>
ucomisd %xmm1,%xmm0
jp     21566 <TIFFClampDoubleToFloat+0x36>
jae    21566 <TIFFClampDoubleToFloat+0x36>
movss  0x3397c(%rip),%xmm0        # 54ee0 <module.82+0x83>
leaveq 
retq   
cvtsd2ss %xmm0,%xmm0
leaveq 
retq   
nopl   0x0(%rax)

0000000000021570 <TIFFClampDoubleToInt8>:
push   %rbp
mov    %rsp,%rbp
movsd  0x3397c(%rip),%xmm1        # 54ef8 <module.82+0x9b>
ucomisd %xmm1,%xmm0
jbe    21589 <TIFFClampDoubleToInt8+0x19>
mov    $0x7f,%eax
leaveq 
retq   
mov    $0xffffffffffffff80,%rax
movsd  0x33968(%rip),%xmm1        # 54f00 <module.82+0xa3>
ucomisd %xmm1,%xmm0
jp     215a2 <TIFFClampDoubleToInt8+0x32>
jae    215a2 <TIFFClampDoubleToInt8+0x32>
leaveq 
retq   
ucomisd %xmm0,%xmm0
jnp    215aa <TIFFClampDoubleToInt8+0x3a>
leaveq 
retq   
cvttsd2si %xmm0,%eax
leaveq 
retq   

00000000000215b0 <TIFFClampDoubleToInt16>:
push   %rbp
mov    %rsp,%rbp
movsd  0x3394c(%rip),%xmm1        # 54f08 <module.82+0xab>
ucomisd %xmm1,%xmm0
jbe    215c9 <TIFFClampDoubleToInt16+0x19>
mov    $0x7fff,%eax
leaveq 
retq   
mov    $0xffffffffffff8000,%rax
movsd  0x33938(%rip),%xmm1        # 54f10 <module.82+0xb3>
ucomisd %xmm1,%xmm0
jp     215e2 <TIFFClampDoubleToInt16+0x32>
jae    215e2 <TIFFClampDoubleToInt16+0x32>
leaveq 
retq   
ucomisd %xmm0,%xmm0
jnp    215ea <TIFFClampDoubleToInt16+0x3a>
leaveq 
retq   
cvttsd2si %xmm0,%eax
leaveq 
retq   

00000000000215f0 <TIFFClampDoubleToInt32>:
push   %rbp
mov    %rsp,%rbp
movsd  0x338d4(%rip),%xmm1        # 54ed0 <module.82+0x73>
ucomisd %xmm1,%xmm0
jbe    21609 <TIFFClampDoubleToInt32+0x19>
mov    $0x7fffffff,%eax
leaveq 
retq   
mov    $0xffffffff80000000,%rax
movsd  0x33900(%rip),%xmm1        # 54f18 <module.82+0xbb>
ucomisd %xmm1,%xmm0
jp     21622 <TIFFClampDoubleToInt32+0x32>
jae    21622 <TIFFClampDoubleToInt32+0x32>
leaveq 
retq   
ucomisd %xmm0,%xmm0
jnp    2162a <TIFFClampDoubleToInt32+0x3a>
leaveq 
retq   
cvttsd2si %xmm0,%eax
leaveq 
retq   

0000000000021630 <TIFFClampDoubleToUInt8>:
push   %rbp
mov    %rsp,%rbp
xorpd  %xmm1,%xmm1
ucomisd %xmm1,%xmm0
jp     21644 <TIFFClampDoubleToUInt8+0x14>
jae    21644 <TIFFClampDoubleToUInt8+0x14>
xor    %eax,%eax
leaveq 
retq   
mov    $0xff,%eax
movsd  0x338cf(%rip),%xmm1        # 54f20 <module.82+0xc3>
ucomisd %xmm1,%xmm0
jbe    21659 <TIFFClampDoubleToUInt8+0x29>
leaveq 
retq   
ucomisd %xmm0,%xmm0
jnp    21661 <TIFFClampDoubleToUInt8+0x31>
leaveq 
retq   
cvttsd2si %xmm0,%rax
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

0000000000021670 <TIFFClampDoubleToUInt16>:
push   %rbp
mov    %rsp,%rbp
xorpd  %xmm1,%xmm1
ucomisd %xmm1,%xmm0
jp     21684 <TIFFClampDoubleToUInt16+0x14>
jae    21684 <TIFFClampDoubleToUInt16+0x14>
xor    %eax,%eax
leaveq 
retq   
mov    $0xffff,%eax
movsd  0x33897(%rip),%xmm1        # 54f28 <module.82+0xcb>
ucomisd %xmm1,%xmm0
jbe    21699 <TIFFClampDoubleToUInt16+0x29>
leaveq 
retq   
ucomisd %xmm0,%xmm0
jnp    216a1 <TIFFClampDoubleToUInt16+0x31>
leaveq 
retq   
cvttsd2si %xmm0,%rax
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

00000000000216b0 <TIFFClampDoubleToUInt32>:
push   %rbp
mov    %rsp,%rbp
xorpd  %xmm1,%xmm1
ucomisd %xmm1,%xmm0
jp     216c4 <TIFFClampDoubleToUInt32+0x14>
jae    216c4 <TIFFClampDoubleToUInt32+0x14>
xor    %eax,%eax
leaveq 
retq   
mov    $0xffffffff,%eax
movsd  0x337df(%rip),%xmm1        # 54eb0 <module.82+0x53>
ucomisd %xmm1,%xmm0
jbe    216d9 <TIFFClampDoubleToUInt32+0x29>
leaveq 
retq   
ucomisd %xmm0,%xmm0
jnp    216e1 <TIFFClampDoubleToUInt32+0x31>
leaveq 
retq   
cvttsd2si %xmm0,%rax
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

00000000000216f0 <TIFFInitDumpMode>:
push   %rbp
mov    %rsp,%rbp
lea    0x55(%rip),%rax        # 21750 <DumpFixupTags>
mov    %rax,0x2c0(%rdi)
lea    0x157(%rip),%rax        # 21860 <DumpModeDecode>
mov    %rax,0x2f8(%rdi)
mov    %rax,0x308(%rdi)
mov    %rax,0x318(%rdi)
lea    0x3b(%rip),%rax        # 21760 <DumpModeEncode>
mov    %rax,0x300(%rdi)
mov    %rax,0x310(%rdi)
mov    %rax,0x320(%rdi)
lea    0x1cf(%rip),%rax        # 21910 <DumpModeSeek>
mov    %rax,0x330(%rdi)
mov    $0x1,%eax
leaveq 
retq   
nop

0000000000021750 <DumpFixupTags>:
push   %rbp
mov    %rsp,%rbp
mov    $0x1,%eax
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

0000000000021760 <DumpModeEncode>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %r12,-0x8(%rbp)
mov    %r13,-0x10(%rbp)
mov    %r14,-0x18(%rbp)
mov    %r15,-0x20(%rbp)
mov    %rbx,%r12
mov    %rdx,%rbx
mov    %rsi,%r13
mov    %rdi,%r14
jmp    217e2 <DumpModeEncode+0x82>
sub    %rcx,%r15
test   %r15,%r15
jle    21801 <DumpModeEncode+0xa1>
mov    0x388(%r14),%rdi
cmp    %rdi,%r13
je     217a5 <DumpModeEncode+0x45>
mov    %r13,%rsi
mov    %r15,%rdx
callq  8790 <_TIFFmemcpy@plt>
mov    %r15,%rax
add    0x388(%r14),%rax
mov    %rax,0x388(%r14)
mov    %r15,%rax
add    0x390(%r14),%rax
mov    %rax,0x390(%r14)
sub    %r15,%rbx
add    %r15,%r13
cmp    0x370(%r14),%rax
jl     217e2 <DumpModeEncode+0x82>
mov    %r14,%rdi
callq  86e0 <TIFFFlushData1@plt>
test   %eax,%eax
je     21820 <DumpModeEncode+0xc0>
test   %rbx,%rbx
jg     21837 <DumpModeEncode+0xd7>
mov    %r12,%rbx
mov    $0x1,%eax
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
leaveq 
retq   
lea    0x33728(%rip),%rdi        # 54f30 <module.82+0xd3>
lea    0x33727(%rip),%rsi        # 54f36 <module.82+0xd9>
mov    $0x37,%edx
lea    0x3372a(%rip),%rcx        # 54f45 <module.82+0xe8>
callq  8490 <__assert_fail@plt>
mov    %r12,%rbx
xor    %eax,%eax
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
leaveq 
retq   
mov    0x390(%r14),%rcx
lea    (%rbx,%rcx,1),%rax
mov    0x370(%r14),%r15
cmp    %rax,%r15
jl     21786 <DumpModeEncode+0x26>
mov    %rbx,%r15
jmpq   21789 <DumpModeEncode+0x29>
nopw   0x0(%rax,%rax,1)

0000000000021860 <DumpModeDecode>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    0x390(%rdi),%r8
cmp    %rdx,%r8
jl     218d6 <DumpModeDecode+0x76>
mov    0x388(%rdi),%rax
cmp    %rsi,%rax
je     218ad <DumpModeDecode+0x4d>
mov    %rdx,%rcx
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rdi,%r14
mov    %rsi,%rdi
mov    %rax,%rsi
mov    %rdx,%r15
mov    %rcx,%rdx
callq  8790 <_TIFFmemcpy@plt>
mov    %r15,%rdx
mov    %r14,%rdi
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
mov    %rdx,%rax
add    0x388(%rdi),%rax
mov    %rax,0x388(%rdi)
mov    0x390(%rdi),%rax
sub    %rdx,%rax
mov    %rax,0x390(%rdi)
mov    $0x1,%eax
leaveq 
retq   
mov    0x3b8(%rdi),%r9
lea    0x33670(%rip),%rsi        # 54f54 <module.11>
lea    0x33678(%rip),%r10        # 54f63 <module.11+0xf>
mov    0x27c(%rdi),%ecx
mov    %r9,%rdi
mov    %rdx,%r9
mov    %r10,%rdx
xor    %eax,%eax
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)

0000000000021910 <DumpModeSeek>:
push   %rbp
mov    %rsp,%rbp
mov    %esi,%eax
imul   0x358(%rdi),%rax
mov    %rax,%rcx
add    0x388(%rdi),%rcx
mov    %rcx,0x388(%rdi)
mov    0x390(%rdi),%rcx
sub    %rax,%rcx
mov    %rcx,0x390(%rdi)
mov    $0x1,%eax
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

0000000000021950 <TIFFError>:
push   %rbp
mov    %rsp,%rbp
sub    $0xe0,%rsp
mov    %rdx,-0xb0(%rbp)
mov    %rcx,-0xa8(%rbp)
mov    %r8,-0xa0(%rbp)
mov    %r9,-0x98(%rbp)
movsd  %xmm0,-0x90(%rbp)
movsd  %xmm1,-0x80(%rbp)
movsd  %xmm2,-0x70(%rbp)
movsd  %xmm3,-0x60(%rbp)
movsd  %xmm4,-0x50(%rbp)
movsd  %xmm5,-0x40(%rbp)
movsd  %xmm6,-0x30(%rbp)
movsd  %xmm7,-0x20(%rbp)
mov    0x58607(%rip),%rax        # 79fb0 <_TIFFerrorHandler@@Base-0x8d8>
mov    (%rax),%rcx
test   %rcx,%rcx
je     219f6 <TIFFError+0xa6>
lea    -0xd8(%rbp),%rdx
movl   $0x10,(%rdx)
movl   $0x30,0x4(%rdx)
lea    -0xc0(%rbp),%rcx
mov    %rcx,0x10(%rdx)
lea    0x10(%rbp),%rcx
mov    %rcx,0x8(%rdx)
mov    %rdi,%rcx
mov    %rsi,%r8
mov    %rdi,-0x8(%rbp)
mov    %rsi,-0x10(%rbp)
mov    %r8,%rsi
mov    %rcx,%rdi
callq  *(%rax)
mov    -0x10(%rbp),%rsi
mov    -0x8(%rbp),%rdi
mov    0x58543(%rip),%rax        # 79f40 <_TIFFerrorHandlerExt@@Base-0x970>
mov    (%rax),%rcx
test   %rcx,%rcx
jne    21a07 <TIFFError+0xb7>
leaveq 
retq   
lea    -0xd8(%rbp),%rcx
movl   $0x10,(%rcx)
movl   $0x30,0x4(%rcx)
lea    -0xc0(%rbp),%rdx
mov    %rdx,0x10(%rcx)
lea    0x10(%rbp),%rdx
mov    %rdx,0x8(%rcx)
mov    %rsi,%rdx
mov    %rdi,%rsi
xor    %edi,%edi
callq  *(%rax)
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

0000000000021a40 <TIFFErrorExt>:
push   %rbp
mov    %rsp,%rbp
sub    $0xf0,%rsp
mov    %rcx,-0xb8(%rbp)
mov    %r8,-0xb0(%rbp)
mov    %r9,-0xa8(%rbp)
movsd  %xmm0,-0xa0(%rbp)
movsd  %xmm1,-0x90(%rbp)
movsd  %xmm2,-0x80(%rbp)
movsd  %xmm3,-0x70(%rbp)
movsd  %xmm4,-0x60(%rbp)
movsd  %xmm5,-0x50(%rbp)
movsd  %xmm6,-0x40(%rbp)
movsd  %xmm7,-0x30(%rbp)
mov    0x5851b(%rip),%rax        # 79fb0 <_TIFFerrorHandler@@Base-0x8d8>
mov    (%rax),%rcx
test   %rcx,%rcx
je     21aef <TIFFErrorExt+0xaf>
lea    -0xe8(%rbp),%r9
movl   $0x18,(%r9)
movl   $0x30,0x4(%r9)
lea    -0xd0(%rbp),%rcx
mov    %rcx,0x10(%r9)
lea    0x10(%rbp),%rcx
mov    %rcx,0x8(%r9)
mov    %rsi,%rcx
mov    %rdx,%r8
mov    %rdi,-0x8(%rbp)
mov    %rsi,-0x10(%rbp)
mov    %rdx,-0x18(%rbp)
mov    %r9,%rdx
mov    %r8,%rsi
mov    %rcx,%rdi
callq  *(%rax)
mov    -0x18(%rbp),%rdx
mov    -0x10(%rbp),%rsi
mov    -0x8(%rbp),%rdi
mov    0x5844a(%rip),%rax        # 79f40 <_TIFFerrorHandlerExt@@Base-0x970>
mov    (%rax),%rcx
test   %rcx,%rcx
jne    21b00 <TIFFErrorExt+0xc0>
leaveq 
retq   
lea    -0xe8(%rbp),%rcx
movl   $0x18,(%rcx)
movl   $0x30,0x4(%rcx)
lea    -0xd0(%rbp),%r8
mov    %r8,0x10(%rcx)
lea    0x10(%rbp),%r8
mov    %r8,0x8(%rcx)
callq  *(%rax)
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

0000000000021b30 <TIFFSetErrorHandler>:
push   %rbp
mov    %rsp,%rbp
mov    0x58475(%rip),%rcx        # 79fb0 <_TIFFerrorHandler@@Base-0x8d8>
mov    (%rcx),%rax
mov    %rdi,(%rcx)
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

0000000000021b50 <TIFFSetErrorHandlerExt>:
push   %rbp
mov    %rsp,%rbp
mov    0x583e5(%rip),%rcx        # 79f40 <_TIFFerrorHandlerExt@@Base-0x970>
mov    (%rcx),%rax
mov    %rdi,(%rcx)
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)
nopl   (%rax)

0000000000021b70 <TIFFGetTagListCount>:
push   %rbp
mov    %rsp,%rbp
movslq 0x140(%rdi),%rax
leaveq 
retq   
nopl   (%rax)

0000000000021b80 <TIFFGetTagListEntry>:
push   %rbp
mov    %rsp,%rbp
mov    $0xffffffff,%eax
test   %esi,%esi
jns    21b8f <TIFFGetTagListEntry+0xf>
leaveq 
retq   
cmp    0x140(%rdi),%esi
jl     21b99 <TIFFGetTagListEntry+0x19>
leaveq 
retq   
mov    0x148(%rdi),%rcx
movslq %esi,%rax
lea    (%rax,%rax,2),%rax
mov    (%rcx,%rax,8),%rax
mov    (%rax),%eax
leaveq 
retq   
nop

0000000000021bb0 <TIFFAccessTagMethods>:
push   %rbp
mov    %rsp,%rbp
lea    0x408(%rdi),%rax
leaveq 
retq   
nopl   (%rax)

0000000000021bc0 <TIFFGetClientInfo>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    0x420(%rdi),%r14
mov    %rsi,%r15
jmp    21bef <TIFFGetClientInfo+0x2f>
mov    0x10(%r14),%rdi
mov    %r15,%rsi
callq  8660 <strcmp@plt>
test   %eax,%eax
je     21c07 <TIFFGetClientInfo+0x47>
mov    (%r14),%r14
test   %r14,%r14
jne    21bdc <TIFFGetClientInfo+0x1c>
xor    %eax,%eax
test   %rax,%rax
jne    21c0e <TIFFGetClientInfo+0x4e>
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
xor    %eax,%eax
leaveq 
retq   
mov    $0x1,%eax
jmp    21bf6 <TIFFGetClientInfo+0x36>
mov    0x8(%r14),%rax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
nopl   0x0(%rax)

0000000000021c20 <TIFFSetClientInfo>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %rdi,-0x20(%rbp)
mov    %r13,-0x8(%rbp)
mov    %r14,-0x10(%rbp)
mov    %r15,-0x18(%rbp)
mov    0x420(%rdi),%r15
mov    %rsi,%r13
mov    %rdx,%r14
jmp    21c5a <TIFFSetClientInfo+0x3a>
mov    0x10(%r15),%rdi
mov    %r14,%rsi
callq  8660 <strcmp@plt>
test   %eax,%eax
je     21c97 <TIFFSetClientInfo+0x77>
mov    (%r15),%r15
test   %r15,%r15
jne    21c47 <TIFFSetClientInfo+0x27>
xor    %eax,%eax
test   %rax,%rax
jne    21c9e <TIFFSetClientInfo+0x7e>
lea    0x3336f(%rip),%r15        # 54fdc <module.11+0x88>
mov    $0x18,%edi
callq  8440 <_TIFFmalloc@plt>
test   %rax,%rax
jne    21cb0 <TIFFSetClientInfo+0x90>
mov    %r15,%rsi
lea    0x33347(%rip),%rdi        # 54fcd <module.11+0x79>
mov    $0x67,%edx
lea    0x3335a(%rip),%rcx        # 54fec <module.11+0x98>
callq  8490 <__assert_fail@plt>
mov    $0x1,%eax
jmp    21c61 <TIFFSetClientInfo+0x41>
mov    %r13,0x8(%r15)
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
leaveq 
retq   
mov    -0x20(%rbp),%r15
mov    0x420(%r15),%rcx
mov    %rcx,(%rax)
mov    %r14,%rdi
mov    %r12,-0x20(%rbp)
mov    %rax,%r12
callq  8350 <strlen@plt>
lea    0x1(%rax),%rdi
callq  8440 <_TIFFmalloc@plt>
mov    %rax,0x10(%r12)
test   %rax,%rax
jne    21cff <TIFFSetClientInfo+0xdf>
lea    0x33317(%rip),%rdi        # 54ffe <module.11+0xaa>
mov    $0x6a,%edx
lea    0x332e9(%rip),%rsi        # 54fdc <module.11+0x88>
lea    0x332f2(%rip),%rcx        # 54fec <module.11+0x98>
callq  8490 <__assert_fail@plt>
mov    %r14,%rsi
mov    %rax,%rdi
callq  8160 <strcpy@plt>
mov    %r13,0x8(%r12)
mov    %r12,0x420(%r15)
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
mov    -0x20(%rbp),%r12
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

0000000000021d30 <TIFFInitCCITTRLE>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x8(%rbp)
mov    %rdi,%r15
callq  26760 <InitCCITTFax3>
test   %eax,%eax
jne    21d50 <TIFFInitCCITTRLE+0x20>
xor    %eax,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
lea    0x5ef9(%rip),%rax        # 27c50 <Fax3DecodeRLE>
mov    %rax,0x2f8(%r15)
mov    %rax,0x308(%r15)
mov    %rax,0x318(%r15)
mov    %r15,%rdi
xor    %eax,%eax
mov    $0x10000,%esi
mov    $0x7,%edx
callq  8290 <TIFFSetField@plt>
mov    -0x8(%rbp),%r15
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)

0000000000021d90 <TIFFInitCCITTRLEW>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x8(%rbp)
mov    %rdi,%r15
callq  26760 <InitCCITTFax3>
test   %eax,%eax
jne    21db0 <TIFFInitCCITTRLEW+0x20>
xor    %eax,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
lea    0x5e99(%rip),%rax        # 27c50 <Fax3DecodeRLE>
mov    %rax,0x2f8(%r15)
mov    %rax,0x308(%r15)
mov    %rax,0x318(%r15)
mov    %r15,%rdi
xor    %eax,%eax
mov    $0x10000,%esi
mov    $0xb,%edx
callq  8290 <TIFFSetField@plt>
mov    -0x8(%rbp),%r15
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)

0000000000021df0 <TIFFInitCCITTFax3>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %rdi,-0x8(%rbp)
callq  26760 <InitCCITTFax3>
test   %eax,%eax
jne    21e0c <TIFFInitCCITTFax3+0x1c>
mov    $0x1,%eax
leaveq 
retq   
lea    0x57a75(%rip),%rsi        # 79888 <fax3Fields>
mov    -0x8(%rbp),%rdi
mov    %rdi,%rax
mov    $0x1,%edx
mov    %r15,-0x8(%rbp)
mov    %rdi,%r15
mov    %rax,%rdi
callq  8520 <_TIFFMergeFields@plt>
test   %eax,%eax
jne    21e5b <TIFFInitCCITTFax3+0x6b>
mov    0x3b8(%r15),%rdi
lea    0x33a16(%rip),%rsi        # 55856 <vcodes+0x2a>
lea    0x33a21(%rip),%rdx        # 55868 <vcodes+0x3c>
xor    %r15d,%r15d
mov    %r15,%rax
callq  8a00 <TIFFErrorExt@plt>
mov    %r15,%rax
mov    -0x8(%rbp),%r15
leaveq 
retq   
mov    %r15,%rdi
xor    %eax,%eax
mov    $0x10000,%esi
mov    $0x1,%edx
callq  8290 <TIFFSetField@plt>
mov    -0x8(%rbp),%r15
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)

0000000000021e80 <TIFFInitCCITTFax4>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %rdi,-0x8(%rbp)
callq  26760 <InitCCITTFax3>
test   %eax,%eax
jne    21e99 <TIFFInitCCITTFax4+0x19>
xor    %eax,%eax
leaveq 
retq   
lea    0x57a18(%rip),%rsi        # 798b8 <fax4Fields>
mov    $0x1,%edx
mov    -0x8(%rbp),%rax
mov    %rax,%rdi
mov    %r15,-0x8(%rbp)
mov    %rax,%r15
callq  8520 <_TIFFMergeFields@plt>
test   %eax,%eax
jne    21ee0 <TIFFInitCCITTFax4+0x60>
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
lea    0x339cb(%rip),%rsi        # 55897 <vcodes+0x6b>
lea    0x339d6(%rip),%rdx        # 558a9 <vcodes+0x7d>
callq  8a00 <TIFFErrorExt@plt>
mov    -0x8(%rbp),%r15
xor    %eax,%eax
leaveq 
retq   
lea    0x4a69(%rip),%rax        # 26950 <Fax4Decode>
mov    %rax,0x2f8(%r15)
mov    %rax,0x308(%r15)
mov    %rax,0x318(%r15)
lea    0x5b9d(%rip),%rax        # 27aa0 <Fax4Encode>
mov    %rax,0x300(%r15)
mov    %rax,0x310(%r15)
mov    %rax,0x320(%r15)
lea    0x5c71(%rip),%rax        # 27b90 <Fax4PostEncode>
mov    %rax,0x2f0(%r15)
mov    %r15,%rdi
xor    %eax,%eax
mov    $0x10000,%esi
mov    $0x1,%edx
callq  8290 <TIFFSetField@plt>
mov    -0x8(%rbp),%r15
leaveq 
retq   

0000000000021f40 <_TIFFFax3fillruns>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    %r15,-0x28(%rbp)
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    $0xff,%ebx
mov    $0x8,%r9d
lea    0x3396a(%rip),%r10        # 558d8 <_fillmasks.13>
mov    $0xff00,%r11d
xor    %eax,%eax
mov    %rdx,%r8
sub    %rsi,%r8
and    $0x4,%r8
test   %r8,%r8
jg     21f8d <_TIFFFax3fillruns+0x4d>
mov    %rcx,%r8
jmpq   2205b <_TIFFFax3fillruns+0x11b>
movl   $0x0,(%rdx)
add    $0x4,%rdx
mov    %rcx,%r8
jmpq   2205b <_TIFFFax3fillruns+0x11b>
mov    (%rsi),%ecx
lea    (%rax,%rcx,1),%r12d
cmp    %r8d,%r12d
ja     21faf <_TIFFFax3fillruns+0x6f>
cmp    %r8d,%ecx
jbe    21fb6 <_TIFFFax3fillruns+0x76>
mov    %r8,%rcx
sub    %eax,%ecx
mov    %ecx,(%rsi)
test   %ecx,%ecx
je     21ffb <_TIFFFax3fillruns+0xbb>
mov    %rax,%r12
shr    $0x3,%r12d
mov    %r12d,%r12d
add    %rdi,%r12
mov    %rax,%r14
and    $0x7,%r14d
mov    %r9,%r13
sub    %r14d,%r13d
cmp    %r13d,%ecx
ja     2208c <_TIFFFax3fillruns+0x14c>
mov    %ecx,%ecx
movzbl (%rcx,%r10,1),%r13d
mov    %r14,%rcx
shr    %cl,%r13d
not    %r13d
movzbl (%r12),%ecx
and    %cl,%r13b
mov    %r13b,(%r12)
add    (%rsi),%eax
mov    0x4(%rsi),%ecx
lea    (%rax,%rcx,1),%r12d
cmp    %r12d,%r8d
jb     2200c <_TIFFFax3fillruns+0xcc>
cmp    %ecx,%r8d
jae    22014 <_TIFFFax3fillruns+0xd4>
mov    %r8,%rcx
sub    %eax,%ecx
mov    %ecx,0x4(%rsi)
test   %ecx,%ecx
je     22057 <_TIFFFax3fillruns+0x117>
mov    %rax,%r12
shr    $0x3,%r12d
mov    %r12d,%r12d
add    %rdi,%r12
mov    %rax,%r14
and    $0x7,%r14d
mov    %r9,%r13
sub    %r14d,%r13d
cmp    %r13d,%ecx
ja     2217b <_TIFFFax3fillruns+0x23b>
mov    %ecx,%ecx
movzbl (%rcx,%r10,1),%r13d
mov    %r14,%rcx
shr    %cl,%r13d
movzbl (%r12),%ecx
or     %cl,%r13b
mov    %r13b,(%r12)
add    0x4(%rsi),%eax
add    $0x8,%rsi
cmp    %rsi,%rdx
ja     21f9f <_TIFFFax3fillruns+0x5f>
cmp    %r8d,%eax
je     2226d <_TIFFFax3fillruns+0x32d>
lea    0x3386d(%rip),%rdi        # 558e1 <_fillmasks.13+0x9>
lea    0x33871(%rip),%rsi        # 558ec <_fillmasks.13+0x14>
mov    $0x1e3,%edx
lea    0x33870(%rip),%rcx        # 558f7 <_fillmasks.13+0x1f>
callq  8490 <__assert_fail@plt>
test   %r14d,%r14d
je     220b6 <_TIFFFax3fillruns+0x176>
mov    %rcx,%r14
mov    %r13,%rcx
mov    %rbx,%r13
shl    %cl,%r13d
movzbl (%r12),%ecx
and    %cl,%r13b
mov    %r13b,(%r12)
mov    %rax,%rcx
or     $0xfffffff8,%ecx
add    %r14d,%ecx
add    $0x1,%r12
mov    %rcx,%r13
and    $0xfffffff8,%r13d
test   %r13d,%r13d
je     2215c <_TIFFFax3fillruns+0x21c>
mov    %rcx,%r14
shr    $0x3,%r14d
movslq %r14d,%r13
shr    $0x3,%r13
cmp    $0x1,%r13
ja     2229c <_TIFFFax3fillruns+0x35c>
lea    -0x1(%r14),%r15d
cmp    $0xe,%r15d
ja     22159 <_TIFFFax3fillruns+0x219>
lea    0x32f25(%rip),%r13        # 55014 <module.11+0xc0>
movslq 0x0(%r13,%r15,4),%r15
add    %r15,%r13
jmpq   *%r13
movb   $0x0,0xe(%r12)
movb   $0x0,0xd(%r12)
movb   $0x0,0xc(%r12)
movb   $0x0,0xb(%r12)
movb   $0x0,0xa(%r12)
movb   $0x0,0x9(%r12)
movb   $0x0,0x8(%r12)
movb   $0x0,0x7(%r12)
movb   $0x0,0x6(%r12)
movb   $0x0,0x5(%r12)
movb   $0x0,0x4(%r12)
movb   $0x0,0x3(%r12)
movb   $0x0,0x2(%r12)
movb   $0x0,0x1(%r12)
movb   $0x0,(%r12)
movslq %r14d,%r13
add    %r13,%r12
and    $0x7,%ecx
test   %ecx,%ecx
je     21ff9 <_TIFFFax3fillruns+0xb9>
mov    %rbx,%r13
shr    %cl,%r13d
movzbl (%r12),%ecx
and    %cl,%r13b
mov    %r13b,(%r12)
jmpq   21ff9 <_TIFFFax3fillruns+0xb9>
test   %r14d,%r14d
je     221a8 <_TIFFFax3fillruns+0x268>
mov    %r14,%r13
mov    %rcx,%r14
mov    %r13,%rcx
mov    %rbx,%r13
shr    %cl,%r13d
movzbl (%r12),%ecx
or     %cl,%r13b
mov    %r13b,(%r12)
mov    %rax,%rcx
or     $0xfffffff8,%ecx
add    %r14d,%ecx
add    $0x1,%r12
mov    %rcx,%r13
and    $0xfffffff8,%r13d
test   %r13d,%r13d
je     2224e <_TIFFFax3fillruns+0x30e>
mov    %rcx,%r14
shr    $0x3,%r14d
movslq %r14d,%r13
shr    $0x3,%r13
cmp    $0x1,%r13
ja     222e5 <_TIFFFax3fillruns+0x3a5>
lea    -0x1(%r14),%r15d
cmp    $0xe,%r15d
ja     2224b <_TIFFFax3fillruns+0x30b>
lea    0x32e6f(%rip),%r13        # 55050 <module.11+0xfc>
movslq 0x0(%r13,%r15,4),%r15
add    %r15,%r13
jmpq   *%r13
movb   $0xff,0xe(%r12)
movb   $0xff,0xd(%r12)
movb   $0xff,0xc(%r12)
movb   $0xff,0xb(%r12)
movb   $0xff,0xa(%r12)
movb   $0xff,0x9(%r12)
movb   $0xff,0x8(%r12)
movb   $0xff,0x7(%r12)
movb   $0xff,0x6(%r12)
movb   $0xff,0x5(%r12)
movb   $0xff,0x4(%r12)
movb   $0xff,0x3(%r12)
movb   $0xff,0x2(%r12)
movb   $0xff,0x1(%r12)
movb   $0xff,(%r12)
movslq %r14d,%r13
add    %r13,%r12
and    $0x7,%ecx
test   %ecx,%ecx
je     22054 <_TIFFFax3fillruns+0x114>
mov    %r11,%r13
shr    %cl,%r13d
movzbl (%r12),%ecx
or     %cl,%r13b
mov    %r13b,(%r12)
jmpq   22054 <_TIFFFax3fillruns+0x114>
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x28(%rbp),%r15
leaveq 
retq   
mov    %r12,%r13
and    $0x7,%r13
test   %r13,%r13
je     222a1 <_TIFFFax3fillruns+0x361>
movb   $0x0,(%r12)
add    $0x1,%r12
add    $0xffffffff,%r14d
test   %r14d,%r14d
jne    22283 <_TIFFFax3fillruns+0x343>
movslq %r14d,%r15
shr    $0x3,%r15
mov    %r15,%r13
movq   $0x0,(%r12)
add    $0x8,%r12
add    $0xffffffff,%r13d
test   %r13d,%r13d
jne    222ab <_TIFFFax3fillruns+0x36b>
shl    $0x3,%r15d
sub    %r15d,%r14d
jmpq   220de <_TIFFFax3fillruns+0x19e>
mov    %r12,%r13
and    $0x7,%r13
test   %r13,%r13
je     222ea <_TIFFFax3fillruns+0x3aa>
movb   $0xff,(%r12)
add    $0x1,%r12
add    $0xffffffff,%r14d
test   %r14d,%r14d
jne    222cc <_TIFFFax3fillruns+0x38c>
movslq %r14d,%r15
shr    $0x3,%r15
mov    %r15,%r13
movq   $0xffffffffffffffff,(%r12)
add    $0x8,%r12
add    $0xffffffff,%r13d
test   %r13d,%r13d
jne    222f4 <_TIFFFax3fillruns+0x3b4>
shl    $0x3,%r15d
sub    %r15d,%r14d
jmpq   221d0 <_TIFFFax3fillruns+0x290>
data16 nopw %cs:0x0(%rax,%rax,1)

0000000000022320 <Fax3PreDecode>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    0x350(%rdi),%rax
test   %rax,%rax
jne    22353 <Fax3PreDecode+0x33>
lea    0x335ce(%rip),%rdi        # 55909 <_fillmasks.13+0x31>
lea    0x335aa(%rip),%rsi        # 558ec <_fillmasks.13+0x14>
mov    $0x98,%edx
lea    0x335c6(%rip),%rcx        # 55914 <_fillmasks.13+0x3c>
callq  8490 <__assert_fail@plt>
movl   $0x0,0x4c(%rax)
movl   $0x0,0x48(%rax)
movl   $0x0,0x50(%rax)
mov    $0x1,%edx
movzwl 0x7e(%rdi),%ecx
cmp    $0x2,%cx
jne    2237b <Fax3PreDecode+0x5b>
xor    %edi,%edi
jmp    2237e <Fax3PreDecode+0x5e>
mov    %rdx,%rdi
mov    %r15,-0x8(%rbp)
mov    %rax,%r15
callq  87e0 <TIFFGetBitRevTable@plt>
mov    %rax,0x40(%r15)
mov    0x68(%r15),%rax
test   %rax,%rax
je     223a8 <Fax3PreDecode+0x88>
mov    0x10(%r15),%ecx
mov    %ecx,(%rax)
mov    0x68(%r15),%rax
movl   $0x0,0x4(%rax)
movl   $0x0,0x90(%r15)
mov    $0x1,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
xchg   %ax,%ax

00000000000223c0 <Fax3Unexpected>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    0x3b8(%rsi),%r10
mov    0x10(%rsi),%eax
and    $0x400,%eax
test   %eax,%eax
jne    223e6 <Fax3Unexpected+0x26>
lea    0x3356e(%rip),%r8        # 55950 <_fillmasks.13+0x78>
xor    %eax,%eax
jmp    223f2 <Fax3Unexpected+0x32>
lea    0x3355e(%rip),%r8        # 5594b <_fillmasks.13+0x73>
mov    $0x1,%eax
test   %rax,%rax
jne    22400 <Fax3Unexpected+0x40>
mov    0x284(%rsi),%r9d
jmp    22407 <Fax3Unexpected+0x47>
mov    0x2ac(%rsi),%r9d
mov    %ecx,(%rsp)
mov    %rdx,%rcx
mov    %rdi,%rsi
mov    %r10,%rdi
xor    %eax,%eax
lea    0x33506(%rip),%rdx        # 55922 <_fillmasks.13+0x4a>
callq  8a00 <TIFFErrorExt@plt>
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

0000000000022430 <Fax3Extension>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    0x3b8(%rsi),%r10
mov    0x10(%rsi),%eax
and    $0x400,%eax
test   %eax,%eax
jne    22456 <Fax3Extension+0x26>
lea    0x334fe(%rip),%r8        # 55950 <_fillmasks.13+0x78>
xor    %eax,%eax
jmp    22462 <Fax3Extension+0x32>
lea    0x334ee(%rip),%r8        # 5594b <_fillmasks.13+0x73>
mov    $0x1,%eax
test   %rax,%rax
jne    22470 <Fax3Extension+0x40>
mov    0x284(%rsi),%r9d
jmp    22477 <Fax3Extension+0x47>
mov    0x2ac(%rsi),%r9d
mov    %ecx,(%rsp)
mov    %rdx,%rcx
mov    %rdi,%rsi
mov    %r10,%rdi
xor    %eax,%eax
lea    0x334ca(%rip),%rdx        # 55956 <_fillmasks.13+0x7e>
callq  8a00 <TIFFErrorExt@plt>
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

00000000000224a0 <Fax3BadLength>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    0x3b8(%rsi),%r11
cmp    %ecx,%r8d
ja     224bd <Fax3BadLength+0x1d>
lea    0x33513(%rip),%r10        # 559ce <_fillmasks.13+0xf6>
jmp    224c4 <Fax3BadLength+0x24>
lea    0x334fc(%rip),%r10        # 559c0 <_fillmasks.13+0xe8>
mov    0x10(%rsi),%eax
and    $0x400,%eax
test   %eax,%eax
jne    224db <Fax3BadLength+0x3b>
lea    0x33479(%rip),%r9        # 55950 <_fillmasks.13+0x78>
xor    %eax,%eax
jmp    224e7 <Fax3BadLength+0x47>
lea    0x33469(%rip),%r9        # 5594b <_fillmasks.13+0x73>
mov    $0x1,%eax
test   %rax,%rax
jne    224f4 <Fax3BadLength+0x54>
mov    0x284(%rsi),%eax
jmp    224fa <Fax3BadLength+0x5a>
mov    0x2ac(%rsi),%eax
mov    %eax,(%rsp)
mov    %ecx,0x8(%rsp)
mov    %r8d,0x10(%rsp)
mov    %r10,%rcx
mov    %rdi,%rsi
mov    %r11,%rdi
mov    %rdx,%r8
xor    %eax,%eax
lea    0x33478(%rip),%rdx        # 55993 <_fillmasks.13+0xbb>
callq  85a0 <TIFFWarningExt@plt>
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   (%rax)

0000000000022530 <Fax3PrematureEOF>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    0x3b8(%rsi),%r10
mov    0x10(%rsi),%eax
and    $0x400,%eax
test   %eax,%eax
jne    22556 <Fax3PrematureEOF+0x26>
lea    0x333fe(%rip),%r8        # 55950 <_fillmasks.13+0x78>
xor    %eax,%eax
jmp    22562 <Fax3PrematureEOF+0x32>
lea    0x333ee(%rip),%r8        # 5594b <_fillmasks.13+0x73>
mov    $0x1,%eax
test   %rax,%rax
jne    22570 <Fax3PrematureEOF+0x40>
mov    0x284(%rsi),%r9d
jmp    22577 <Fax3PrematureEOF+0x47>
mov    0x2ac(%rsi),%r9d
mov    %ecx,(%rsp)
mov    %rdx,%rcx
mov    %rdi,%rsi
mov    %r10,%rdi
xor    %eax,%eax
lea    0x33457(%rip),%rdx        # 559e3 <_fillmasks.13+0x10b>
callq  85a0 <TIFFWarningExt@plt>
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

00000000000225a0 <Fax3Decode1D>:
push   %rbp
mov    %rsp,%rbp
sub    $0xa0,%rsp
mov    %rsi,-0x48(%rbp)
mov    0x350(%rdi),%r10
mov    0x10(%r10),%eax
mov    %rax,-0x90(%rbp)
mov    %rdx,%rax
mov    %r12,%r9
mov    %r14,%r12
mov    0x40(%r10),%r8
mov    %r8,-0x68(%rbp)
lea    0x33433(%rip),%rsi        # 55a0c <module.29>
mov    0x8(%r10),%rcx
cqto   
mov    %rbx,%r11
mov    %rcx,%rbx
mov    %r13,%rcx
mov    %rsi,%r13
mov    %r15,%rsi
mov    %rax,%r15
idiv   %rbx
test   %rdx,%rdx
jne    2267f <Fax3Decode1D+0xdf>
mov    0x70(%r10),%rax
mov    %rax,-0x88(%rbp)
movslq 0x4c(%r10),%rbx
mov    0x48(%r10),%r14d
movslq 0x50(%r10),%rax
mov    0x388(%rdi),%r13
mov    %rsi,-0x28(%rbp)
mov    %r13,%rsi
add    0x390(%rdi),%rsi
mov    %r12,-0x20(%rbp)
mov    %rsi,-0x70(%rbp)
mov    0x57960(%rip),%rdx        # 79f98 <TIFFFaxWhiteTable@@Base+0x23ddc>
mov    %rdx,-0x78(%rbp)
mov    0x5797d(%rip),%rdx        # 79fc0 <TIFFFaxBlackTable@@Base+0x1be04>
mov    %rdx,-0x98(%rbp)
mov    $0xb,%r12d
mov    %rcx,-0x18(%rbp)
mov    $0x8,%edx
mov    %r10,-0x58(%rbp)
mov    %rdi,-0x50(%rbp)
mov    %r11,-0x8(%rbp)
mov    %r9,-0x10(%rbp)
mov    $0xc,%r11d
mov    -0x98(%rbp),%r9
mov    -0x78(%rbp),%r10
jmpq   2278f <Fax3Decode1D+0x1ef>
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
mov    %r11,%rbx
mov    %r9,%r14
mov    %rsi,%r15
mov    %r13,%rsi
mov    %rcx,%r13
lea    0x3337b(%rip),%rdx        # 55a19 <module.29+0xd>
callq  8a00 <TIFFErrorExt@plt>
mov    %r14,%rcx
mov    %r12,%r14
mov    %rcx,%r12
mov    $0xffffffffffffffff,%rax
leaveq 
retq   
cmp    $0xc,%cl
je     227e4 <Fax3Decode1D+0x244>
mov    -0x58(%rbp),%rcx
mov    0x90(%rcx),%r8d
lea    0x3333c(%rip),%rdi        # 55a0c <module.29>
mov    -0x50(%rbp),%rsi
mov    %r14,%rcx
mov    %r13,-0x80(%rbp)
mov    %rdx,%r13
mov    %r8,%rdx
mov    %rax,%r15
callq  223c0 <Fax3Unexpected>
mov    %r15,%rax
mov    %r13,%rdx
mov    %r12,%r9
mov    -0x80(%rbp),%r13
mov    -0x48(%rbp),%r10
xor    %edi,%edi
mov    -0x90(%rbp),%r15
mov    %rdi,-0x38(%rbp)
mov    %r13,-0x60(%rbp)
test   %eax,%eax
je     22715 <Fax3Decode1D+0x175>
mov    %eax,(%rdx)
add    $0x4,%rdx
cmp    %r15d,%r14d
jne    227f5 <Fax3Decode1D+0x255>
mov    %r9,%r14
mov    -0x30(%rbp),%rax
mov    -0x58(%rbp),%r12
mov    -0x88(%rbp),%rsi
mov    %r15,%rcx
mov    %rax,%r15
mov    %r10,%r13
mov    %r13,%rdi
callq  *0x58(%r12)
movslq 0x90(%r12),%rax
add    $0x1,%eax
mov    %eax,0x90(%r12)
mov    0x8(%r12),%rax
sub    %rax,%r15
add    %r13,%rax
mov    %rax,-0x48(%rbp)
mov    $0x8,%edx
mov    $0xb,%r12d
mov    -0x60(%rbp),%r13
mov    -0x38(%rbp),%rax
mov    -0x70(%rbp),%rsi
mov    -0x68(%rbp),%r8
mov    $0xc,%r11d
mov    -0x98(%rbp),%r9
mov    -0x78(%rbp),%r10
test   %r15,%r15
jg     22840 <Fax3Decode1D+0x2a0>
mov    -0x58(%rbp),%rcx
mov    %ebx,0x4c(%rcx)
mov    %r14d,0x48(%rcx)
mov    %eax,0x50(%rcx)
mov    -0x50(%rbp),%rcx
mov    0x388(%rcx),%rax
sub    %r13,%rax
add    0x390(%rcx),%rax
mov    %rax,0x390(%rcx)
mov    %r13,0x388(%rcx)
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x18(%rbp),%r13
mov    $0x1,%eax
mov    -0x20(%rbp),%r14
mov    -0x28(%rbp),%r15
leaveq 
retq   
mov    %r12,%r9
mov    -0x48(%rbp),%r10
mov    $0x1,%edi
jmpq   22703 <Fax3Decode1D+0x163>
mov    -0x58(%rbp),%r12
mov    0x90(%r12),%eax
lea    0x33204(%rip),%rdi        # 55a0c <module.29>
mov    -0x50(%rbp),%rsi
mov    %r14,%rcx
mov    %r15,%r8
mov    %rbx,-0x48(%rbp)
mov    %r9,-0x40(%rbp)
mov    %r10,%rbx
mov    %rdx,%r13
mov    %rax,%rdx
callq  224a0 <Fax3BadLength>
mov    %r13,%rdx
mov    -0x30(%rbp),%rax
mov    -0x40(%rbp),%r8
mov    -0x48(%rbp),%rdi
mov    -0x88(%rbp),%rsi
jmp    22859 <Fax3Decode1D+0x2b9>
test   %eax,%eax
je     2287a <Fax3Decode1D+0x2da>
mov    -0x48(%rbp),%rdi
jmp    228b9 <Fax3Decode1D+0x319>
cmp    %rdx,%rsi
jae    2285e <Fax3Decode1D+0x2be>
add    $0xfffffffffffffffc,%rdx
movslq (%rdx),%rcx
sub    %ecx,%r14d
cmp    %r15d,%r14d
jg     2284a <Fax3Decode1D+0x2aa>
cmp    %r15d,%r14d
jl     228c0 <Fax3Decode1D+0x320>
cmp    %r15d,%r14d
jg     228fb <Fax3Decode1D+0x35b>
mov    %rbx,%r10
mov    %rdi,%rbx
mov    %r8,%r14
jmpq   22730 <Fax3Decode1D+0x190>
mov    -0x48(%rbp),%rdi
jmpq   2291d <Fax3Decode1D+0x37d>
cmp    %rsi,%r13
jae    2294d <Fax3Decode1D+0x3ad>
movzbl 0x0(%r13),%ecx
movzbl (%r8,%rcx,1),%r12d
mov    %rbx,%rcx
shl    %cl,%r12d
or     %r12d,%r14d
add    $0x1,%r13
lea    0x8(%rcx),%ebx
movzbl %r14b,%ecx
test   %ecx,%ecx
jne    2295c <Fax3Decode1D+0x3bc>
shr    $0x8,%r14d
add    $0xfffffff8,%ebx
cmp    $0x7,%ebx
jle    22883 <Fax3Decode1D+0x2e3>
jmp    228a6 <Fax3Decode1D+0x306>
test   %r14d,%r14d
jns    228c8 <Fax3Decode1D+0x328>
xor    %r14d,%r14d
mov    %rdx,%rcx
sub    %rsi,%rcx
and    $0x4,%rcx
test   %rcx,%rcx
jle    228e1 <Fax3Decode1D+0x341>
movl   $0x0,(%rdx)
add    $0x4,%rdx
mov    %r15,%rcx
sub    %r14d,%ecx
mov    %ecx,(%rdx)
add    $0x4,%rdx
mov    %rbx,%r10
mov    %rdi,%rbx
mov    %r8,%r14
jmpq   22730 <Fax3Decode1D+0x190>
mov    %r15d,(%rdx)
movl   $0x0,0x4(%rdx)
add    $0x8,%rdx
mov    %rbx,%r10
mov    %rdi,%rbx
mov    %r8,%r14
jmpq   22730 <Fax3Decode1D+0x190>
shr    %r14d
add    $0xffffffff,%ebx
cmp    $0xa,%ebx
jg     22994 <Fax3Decode1D+0x3f4>
cmp    %rsi,%r13
jae    2298d <Fax3Decode1D+0x3ed>
movzbl 0x0(%r13),%ecx
movzbl (%rcx,%r8,1),%edx
mov    %rbx,%rcx
shl    %cl,%edx
or     %edx,%r14d
lea    0x1(%r13),%rbx
lea    0x8(%rcx),%edx
cmp    $0xa,%edx
jle    229af <Fax3Decode1D+0x40f>
mov    %rbx,%r13
mov    %rdx,%rbx
jmp    22994 <Fax3Decode1D+0x3f4>
test   %ebx,%ebx
je     229c0 <Fax3Decode1D+0x420>
mov    %rdx,%rbx
jmpq   228a6 <Fax3Decode1D+0x306>
mov    %r12,%r14
mov    %r14,%r12
shr    %r12d
add    $0xffffffff,%ebx
and    $0x1,%r14d
test   %r14d,%r14d
je     22959 <Fax3Decode1D+0x3b9>
mov    %r15,-0x30(%rbp)
xor    %edi,%edi
mov    -0x88(%rbp),%rdx
mov    -0x90(%rbp),%r15
mov    %rdi,%rax
mov    %rax,%r14
jmpq   22a86 <Fax3Decode1D+0x4e6>
test   %ebx,%ebx
je     229c0 <Fax3Decode1D+0x420>
mov    %r12,%rbx
mov    %r14,%rcx
and    $0x7ff,%ecx
test   %ecx,%ecx
jne    22917 <Fax3Decode1D+0x377>
mov    $0x8,%edx
jmpq   228b9 <Fax3Decode1D+0x319>
cmp    %rsi,%rbx
jb     22ac2 <Fax3Decode1D+0x522>
mov    %rbx,%r13
mov    %r12,%rbx
jmp    22994 <Fax3Decode1D+0x3f4>
mov    -0x90(%rbp),%r15
test   %r15d,%r15d
jne    22ade <Fax3Decode1D+0x53e>
mov    -0x50(%rbp),%r12
mov    -0x58(%rbp),%rbx
mov    -0x88(%rbp),%rsi
mov    %rsi,%rdx
mov    %r15,%rcx
mov    %rax,%r15
callq  *0x58(%rbx)
movl   $0x0,0x4c(%rbx)
mov    %r14d,0x48(%rbx)
mov    %r15d,0x50(%rbx)
mov    0x388(%r12),%rax
sub    %r13,%rax
add    0x390(%r12),%rax
mov    %rax,0x390(%r12)
mov    %r13,0x388(%r12)
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x18(%rbp),%r13
mov    -0x20(%rbp),%r14
mov    -0x28(%rbp),%r15
mov    $0xffffffffffffffff,%rax
leaveq 
retq   
test   %ebx,%ebx
je     22b1a <Fax3Decode1D+0x57a>
mov    %r11,%rbx
mov    %r12,%rcx
and    $0xfff,%ecx
mov    %ecx,%ecx
movzbl 0x1(%r10,%rcx,8),%r11d
sub    %r11d,%ebx
xchg   %rcx,%r11
shr    %cl,%r12d
movzbl (%r10,%r11,8),%ecx
cmp    $0xa,%cl
jbe    22b55 <Fax3Decode1D+0x5b5>
cmp    $0xb,%cl
jne    226b5 <Fax3Decode1D+0x115>
movslq 0x4(%r10,%r11,8),%rcx
add    %ecx,%r14d
add    %ecx,%eax
mov    $0xc,%r11d
cmp    $0xb,%ebx
jg     22a45 <Fax3Decode1D+0x4a5>
cmp    %r13,%rsi
jbe    22a3a <Fax3Decode1D+0x49a>
movzbl 0x0(%r13),%ecx
movzbl (%r8,%rcx,1),%edi
mov    %rbx,%rcx
mov    %rdi,%rbx
shl    %cl,%ebx
mov    %rcx,%rdi
or     %ebx,%r12d
lea    0x1(%r13),%rbx
lea    0x8(%rdi),%ecx
cmp    $0xb,%ecx
jle    22b6c <Fax3Decode1D+0x5cc>
mov    %rbx,%r13
mov    %rcx,%rbx
xor    %edi,%edi
jmp    22a45 <Fax3Decode1D+0x4a5>
movzbl (%rbx),%ebx
movzbl (%rbx,%r8,1),%ebx
xchg   %rcx,%rdx
shl    %cl,%ebx
or     %ebx,%r14d
add    $0x2,%r13
lea    0x10(%rdx),%ebx
jmpq   22994 <Fax3Decode1D+0x3f4>
mov    -0x58(%rbp),%rcx
mov    0x90(%rcx),%edx
mov    %rax,%r12
mov    -0x50(%rbp),%rsi
xor    %ebx,%ebx
mov    %rbx,%rcx
mov    %r15,%r8
lea    0x32f0e(%rip),%rdi        # 55a0c <module.29>
callq  224a0 <Fax3BadLength>
mov    -0x48(%rbp),%rdi
mov    -0x88(%rbp),%rsi
mov    %rsi,%rdx
mov    %rbx,%rax
jmp    22b90 <Fax3Decode1D+0x5f0>
mov    -0x60(%rbp),%rdx
mov    %r12,-0x98(%rbp)
mov    %r13,-0x90(%rbp)
mov    %rax,%r12
mov    %rdx,%r13
mov    -0x58(%rbp),%rbx
mov    0x90(%rbx),%edx
lea    0x32ecd(%rip),%rdi        # 55a0c <module.29>
mov    -0x50(%rbp),%rsi
mov    %r14,%rcx
callq  22530 <Fax3PrematureEOF>
test   %r12d,%r12d
jne    22bb7 <Fax3Decode1D+0x617>
mov    %r13,%rdx
jmp    22bbf <Fax3Decode1D+0x61f>
cmp    $0x7,%cl
je     22bec <Fax3Decode1D+0x64c>
cmp    $0x9,%cl
je     22a76 <Fax3Decode1D+0x4d6>
jmpq   226be <Fax3Decode1D+0x11e>
cmp    %rbx,%rsi
ja     22c1e <Fax3Decode1D+0x67e>
mov    %rbx,%r13
mov    %r11,%rbx
xor    %edi,%edi
jmpq   22a45 <Fax3Decode1D+0x4a5>
cmp    %rdx,%rsi
jae    22b95 <Fax3Decode1D+0x5f5>
add    $0xfffffffffffffffc,%rdx
movslq (%rdx),%rcx
sub    %ecx,%eax
cmp    %r15d,%eax
jg     22b82 <Fax3Decode1D+0x5e2>
cmp    %r15d,%eax
jl     22c39 <Fax3Decode1D+0x699>
cmp    %r15d,%eax
jg     22c74 <Fax3Decode1D+0x6d4>
mov    %r12,%rax
mov    -0x50(%rbp),%r12
mov    -0x58(%rbp),%rbx
jmpq   229e2 <Fax3Decode1D+0x442>
mov    %r12d,0x0(%r13)
lea    0x4(%r13),%rdx
cmp    %r15d,%r14d
jne    22c92 <Fax3Decode1D+0x6f2>
mov    -0x90(%rbp),%r13
mov    -0x98(%rbp),%r14
mov    -0x50(%rbp),%r12
mov    -0x48(%rbp),%rdi
xor    %eax,%eax
mov    -0x88(%rbp),%rsi
jmpq   229e2 <Fax3Decode1D+0x442>
add    0x4(%r10,%r11,8),%eax
mov    %eax,(%rdx)
lea    0x4(%rdx),%rax
add    0x4(%r10,%r11,8),%r14d
cmp    %r15d,%r14d
jge    22cd2 <Fax3Decode1D+0x732>
mov    %rax,-0x60(%rbp)
mov    %rdx,-0x80(%rbp)
mov    -0x48(%rbp),%r10
mov    $0xd,%edx
mov    %rdi,%rax
jmpq   22d00 <Fax3Decode1D+0x760>
movzbl (%rbx),%ebx
movzbl (%r8,%rbx,1),%ebx
shl    %cl,%ebx
or     %ebx,%r12d
lea    0x10(%rdi),%ebx
add    $0x2,%r13
xor    %edi,%edi
jmpq   22a45 <Fax3Decode1D+0x4a5>
test   %eax,%eax
js     22c40 <Fax3Decode1D+0x6a0>
mov    %rax,%rbx
mov    %rdx,%rax
sub    %rsi,%rax
and    $0x4,%rax
test   %rax,%rax
jle    22c59 <Fax3Decode1D+0x6b9>
movl   $0x0,(%rdx)
add    $0x4,%rdx
mov    %r15,%rax
sub    %ebx,%eax
mov    %eax,(%rdx)
add    $0x4,%rdx
mov    %r12,%rax
mov    -0x50(%rbp),%r12
mov    -0x58(%rbp),%rbx
jmpq   229e2 <Fax3Decode1D+0x442>
mov    %r15d,(%rdx)
movl   $0x0,0x4(%rdx)
add    $0x8,%rdx
mov    %r12,%rax
mov    -0x50(%rbp),%r12
mov    -0x58(%rbp),%rbx
jmpq   229e2 <Fax3Decode1D+0x442>
mov    %rdx,%r13
mov    0x90(%rbx),%edx
mov    -0x50(%rbp),%r12
mov    %r12,%rsi
mov    %r14,%rcx
mov    %r15,%r8
lea    0x32d5d(%rip),%rdi        # 55a0c <module.29>
callq  224a0 <Fax3BadLength>
mov    %r13,%rdx
mov    -0x90(%rbp),%rcx
mov    -0x98(%rbp),%r8
mov    -0x48(%rbp),%rdi
mov    -0x88(%rbp),%rsi
jmp    22d49 <Fax3Decode1D+0x7a9>
mov    %rax,%rdx
mov    %r12,%r9
mov    -0x48(%rbp),%r10
mov    %rdi,%rax
jmpq   22703 <Fax3Decode1D+0x163>
cmp    $0x8,%cl
je     22d6d <Fax3Decode1D+0x7cd>
cmp    $0xa,%cl
jne    22ded <Fax3Decode1D+0x84d>
movslq 0x4(%r9,%r11,8),%rcx
add    %ecx,%r14d
add    %ecx,%eax
cmp    $0xc,%ebx
jg     22db3 <Fax3Decode1D+0x813>
cmp    %r13,%rsi
jbe    22da8 <Fax3Decode1D+0x808>
movzbl 0x0(%r13),%ecx
movzbl (%r8,%rcx,1),%r11d
mov    %rbx,%rcx
shl    %cl,%r11d
or     %r11d,%r12d
lea    0x1(%r13),%r11
lea    0x8(%rcx),%ebx
cmp    $0xc,%ebx
jle    22e29 <Fax3Decode1D+0x889>
mov    %r11,%r13
jmp    22db3 <Fax3Decode1D+0x813>
cmp    %rdx,%rsi
jae    22d4e <Fax3Decode1D+0x7ae>
add    $0xfffffffffffffffc,%rdx
movslq (%rdx),%rax
sub    %eax,%r14d
cmp    %r15d,%r14d
jg     22d3a <Fax3Decode1D+0x79a>
cmp    %r15d,%r14d
jl     22e3d <Fax3Decode1D+0x89d>
cmp    %r15d,%r14d
jg     22e77 <Fax3Decode1D+0x8d7>
mov    %rcx,%r13
mov    %r8,%r14
xor    %eax,%eax
jmpq   229e2 <Fax3Decode1D+0x442>
add    0x4(%r9,%r11,8),%eax
mov    -0x60(%rbp),%rcx
mov    %eax,(%rcx)
mov    -0x80(%rbp),%rcx
lea    0x8(%rcx),%rdx
add    0x4(%r9,%r11,8),%r14d
cmp    %r15d,%r14d
jge    22e92 <Fax3Decode1D+0x8f2>
test   %eax,%eax
je     22ea1 <Fax3Decode1D+0x901>
mov    $0xc,%r11d
mov    -0x78(%rbp),%r10
mov    %rdi,%rax
jmpq   22a86 <Fax3Decode1D+0x4e6>
test   %ebx,%ebx
je     22b16 <Fax3Decode1D+0x576>
mov    %rdx,%rbx
mov    %r12,%rcx
and    $0x1fff,%ecx
mov    %ecx,%ecx
movzbl 0x1(%r9,%rcx,8),%r11d
sub    %r11d,%ebx
xchg   %rcx,%r11
shr    %cl,%r12d
movzbl (%r9,%r11,8),%ecx
cmp    $0xa,%cl
jbe    22ce4 <Fax3Decode1D+0x744>
cmp    $0xb,%cl
je     22cf6 <Fax3Decode1D+0x756>
cmp    $0xc,%cl
je     22eb9 <Fax3Decode1D+0x919>
mov    -0x58(%rbp),%rcx
mov    0x90(%rcx),%edx
mov    %rax,%r15
lea    0x32c0b(%rip),%rdi        # 55a0c <module.29>
mov    -0x50(%rbp),%rsi
mov    %r14,%rcx
callq  223c0 <Fax3Unexpected>
mov    %r15,%rax
mov    %r12,%r9
mov    -0x60(%rbp),%rdx
mov    -0x48(%rbp),%r10
xor    %edi,%edi
mov    -0x90(%rbp),%r15
jmpq   22703 <Fax3Decode1D+0x163>
cmp    %r11,%rsi
ja     22eca <Fax3Decode1D+0x92a>
mov    %r11,%r13
mov    %rdx,%rbx
jmpq   22db3 <Fax3Decode1D+0x813>
test   %r14d,%r14d
jns    22e45 <Fax3Decode1D+0x8a5>
xor    %r14d,%r14d
mov    %rdx,%rax
sub    %rsi,%rax
and    $0x4,%rax
test   %rax,%rax
jle    22e5e <Fax3Decode1D+0x8be>
movl   $0x0,(%rdx)
add    $0x4,%rdx
mov    %r15,%rax
sub    %r14d,%eax
mov    %eax,(%rdx)
add    $0x4,%rdx
mov    %rcx,%r13
mov    %r8,%r14
xor    %eax,%eax
jmpq   229e2 <Fax3Decode1D+0x442>
mov    %r15d,(%rdx)
movl   $0x0,0x4(%rdx)
add    $0x8,%rdx
mov    %rcx,%r13
mov    %r8,%r14
xor    %eax,%eax
jmpq   229e2 <Fax3Decode1D+0x442>
mov    %r12,%r9
mov    -0x48(%rbp),%r10
mov    %rdi,%rax
jmpq   22703 <Fax3Decode1D+0x163>
mov    (%rcx),%eax
test   %eax,%eax
je     22ee8 <Fax3Decode1D+0x948>
mov    $0xc,%r11d
mov    -0x78(%rbp),%r10
mov    %rdi,%rax
jmpq   22a86 <Fax3Decode1D+0x4e6>
mov    %r12,%r9
mov    -0x60(%rbp),%rdx
mov    $0x1,%edi
jmpq   22703 <Fax3Decode1D+0x163>
movzbl (%r11),%r11d
movzbl (%r8,%r11,1),%r11d
xchg   %rcx,%rbx
shl    %cl,%r11d
or     %r11d,%r12d
add    $0x10,%ebx
add    $0x2,%r13
jmpq   22db3 <Fax3Decode1D+0x813>
mov    %rcx,%rdx
mov    $0xc,%r11d
mov    -0x78(%rbp),%r10
mov    %rdi,%rax
jmpq   22a86 <Fax3Decode1D+0x4e6>
nopl   (%rax)

0000000000022f00 <Fax3Decode2D>:
push   %rbp
mov    %rsp,%rbp
sub    $0x120,%rsp
mov    %rsi,-0x50(%rbp)
mov    0x350(%rdi),%rsi
mov    %rsi,-0xc0(%rbp)
mov    0x10(%rsi),%eax
mov    %rax,-0xd0(%rbp)
mov    %rdx,%rax
mov    %r15,%r10
mov    %rsi,%r15
mov    0x40(%r15),%r8
mov    %r8,-0xe8(%rbp)
lea    0x32afb(%rip),%r9        # 55a3d <module.31>
mov    0x8(%r15),%rcx
cqto   
mov    %r12,%rsi
mov    %rbx,%r11
mov    %rcx,%rbx
mov    %rdi,%rcx
mov    %rax,%rdi
idiv   %rbx
test   %rdx,%rdx
jne    22ff3 <Fax3Decode2D+0xf3>
mov    0x48(%r15),%r12d
movslq 0x4c(%r15),%rbx
movslq 0x50(%r15),%rax
mov    0x388(%rcx),%r9
mov    %r10,-0x28(%rbp)
mov    %r9,%r10
add    0x390(%rcx),%r10
mov    %r14,-0x20(%rbp)
mov    %r10,-0xf0(%rbp)
mov    0x56fc2(%rip),%rdx        # 79f58 <TIFFFaxMainTable@@Base+0x2419c>
mov    %rdx,-0x118(%rbp)
mov    0x5701c(%rip),%rdx        # 79fc0 <TIFFFaxBlackTable@@Base+0x1be04>
mov    %rdx,-0x108(%rbp)
mov    0x56fe6(%rip),%rdx        # 79f98 <TIFFFaxWhiteTable@@Base+0x23ddc>
mov    %rdx,-0xf8(%rbp)
mov    $0x1,%edx
mov    %rdx,-0x70(%rbp)
xor    %edx,%edx
mov    %rdx,-0x78(%rbp)
mov    $0xb,%r14d
mov    %r13,-0x18(%rbp)
mov    $0x8,%r13d
mov    %rcx,-0x88(%rbp)
mov    %r11,-0x8(%rbp)
mov    %rsi,-0x10(%rbp)
mov    -0x118(%rbp),%r11
jmpq   23124 <Fax3Decode2D+0x224>
xor    %eax,%eax
mov    0x3b8(%rcx),%rdi
mov    %r11,%rbx
mov    %rsi,%r12
mov    %r9,%rsi
mov    %r10,%r15
lea    0x32a0a(%rip),%rdx        # 55a19 <module.29+0xd>
callq  8a00 <TIFFErrorExt@plt>
mov    $0xffffffffffffffff,%rax
leaveq 
retq   
mov    %r9,-0x110(%rbp)
mov    -0xc0(%rbp),%rax
mov    0x90(%rax),%r8d
lea    0x32a04(%rip),%rdi        # 55a3d <module.31>
mov    -0x88(%rbp),%rax
mov    %r14,%rcx
mov    %rsi,-0x120(%rbp)
mov    %rax,%rsi
mov    %rdx,%r13
mov    %r8,%rdx
callq  223c0 <Fax3Unexpected>
mov    %r13,%rdx
mov    -0x110(%rbp),%r9
mov    -0x120(%rbp),%rsi
mov    -0xd0(%rbp),%r13
pushq  -0x78(%rbp)
popq   -0x80(%rbp)
test   %r15d,%r15d
je     23082 <Fax3Decode2D+0x182>
mov    %r15d,(%rdx)
add    $0x4,%rdx
cmp    %r13d,%r14d
jne    2317a <Fax3Decode2D+0x27a>
mov    -0x80(%rbp),%r11
mov    -0x48(%rbp),%r14
mov    -0x50(%rbp),%rdi
mov    %r12,-0x80(%rbp)
mov    %r11,-0x68(%rbp)
mov    %r9,-0xb0(%rbp)
mov    %r13,%rcx
mov    %rdi,%r12
mov    %rdx,%r13
mov    -0xc0(%rbp),%r15
callq  *0x58(%r15)
movl   $0x0,0x0(%r13)
mov    0x68(%r15),%rcx
mov    0x70(%r15),%rax
mov    %rcx,0x70(%r15)
mov    %rax,0x68(%r15)
movslq 0x90(%r15),%rax
add    $0x1,%eax
mov    %eax,0x90(%r15)
mov    0x8(%r15),%rax
mov    %r14,%rdi
sub    %rax,%rdi
add    %r12,%rax
mov    %rax,-0x50(%rbp)
mov    $0xb,%r14d
mov    -0xb0(%rbp),%r9
mov    -0x68(%rbp),%rax
mov    -0x80(%rbp),%r12
mov    -0xf0(%rbp),%r10
mov    -0xe8(%rbp),%r8
mov    $0x8,%r13d
mov    -0x118(%rbp),%r11
test   %rdi,%rdi
jg     231da <Fax3Decode2D+0x2da>
mov    %ebx,0x4c(%r15)
mov    %r12d,0x48(%r15)
mov    %eax,0x50(%r15)
mov    -0x88(%rbp),%rcx
mov    0x388(%rcx),%rax
sub    %r9,%rax
add    0x390(%rcx),%rax
mov    %rax,0x390(%rcx)
mov    %r9,0x388(%rcx)
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x18(%rbp),%r13
mov    $0x1,%eax
mov    -0x20(%rbp),%r14
mov    -0x28(%rbp),%r15
leaveq 
retq   
mov    -0xc0(%rbp),%rax
mov    0x90(%rax),%r10d
lea    0x328ae(%rip),%rdi        # 55a3d <module.31>
mov    -0x88(%rbp),%rax
mov    %r14,%rcx
mov    %r13,%r8
mov    %r12,-0x90(%rbp)
mov    %r9,-0xc8(%rbp)
mov    %rsi,%r12
mov    %rax,%rsi
mov    %rdx,%r15
mov    %r10,%rdx
callq  224a0 <Fax3BadLength>
mov    %r15,%rdx
mov    -0xc8(%rbp),%r9
mov    -0x90(%rbp),%rsi
mov    -0x80(%rbp),%r11
mov    -0x48(%rbp),%rcx
mov    -0x50(%rbp),%rdi
jmp    231fb <Fax3Decode2D+0x2fb>
mov    %rdi,-0x48(%rbp)
mov    0x70(%r15),%rsi
test   %eax,%eax
je     2321f <Fax3Decode2D+0x31f>
mov    -0x50(%rbp),%rdi
jmp    2323b <Fax3Decode2D+0x33b>
cmp    %rdx,%r12
jae    23200 <Fax3Decode2D+0x300>
add    $0xfffffffffffffffc,%rdx
movslq (%rdx),%rax
sub    %eax,%r14d
cmp    %r13d,%r14d
jg     231ec <Fax3Decode2D+0x2ec>
cmp    %r13d,%r14d
jl     23263 <Fax3Decode2D+0x363>
cmp    %r13d,%r14d
jg     232a1 <Fax3Decode2D+0x3a1>
mov    %rcx,%r14
mov    %r12,%rcx
mov    %rsi,%r12
mov    %rcx,%rsi
jmpq   23097 <Fax3Decode2D+0x197>
mov    -0x50(%rbp),%rdi
jmpq   232c6 <Fax3Decode2D+0x3c6>
movzbl %r12b,%ecx
test   %ecx,%ecx
jne    232ed <Fax3Decode2D+0x3ed>
shr    $0x8,%r12d
add    $0xfffffff8,%ebx
cmp    $0x7,%ebx
jg     23228 <Fax3Decode2D+0x328>
cmp    %r9,%r10
jbe    23366 <Fax3Decode2D+0x466>
movzbl (%r9),%ecx
movzbl (%r8,%rcx,1),%edx
mov    %rbx,%rcx
shl    %cl,%edx
or     %edx,%r12d
add    $0x1,%r9
lea    0x8(%rcx),%ebx
jmp    23228 <Fax3Decode2D+0x328>
test   %r14d,%r14d
jns    2326b <Fax3Decode2D+0x36b>
xor    %r14d,%r14d
mov    %rdx,%rax
sub    %r12,%rax
and    $0x4,%rax
test   %rax,%rax
jle    23284 <Fax3Decode2D+0x384>
movl   $0x0,(%rdx)
add    $0x4,%rdx
mov    %r13,%rax
sub    %r14d,%eax
mov    %eax,(%rdx)
add    $0x4,%rdx
mov    %rcx,%r14
mov    %r12,%rcx
mov    %rsi,%r12
mov    %rcx,%rsi
jmpq   23097 <Fax3Decode2D+0x197>
mov    %r13d,(%rdx)
movl   $0x0,0x4(%rdx)
add    $0x8,%rdx
mov    %rcx,%r14
mov    %r12,%rcx
mov    %rsi,%r12
mov    %rcx,%rsi
jmpq   23097 <Fax3Decode2D+0x197>
shr    %r12d
add    $0xffffffff,%ebx
cmp    $0xa,%ebx
jle    23376 <Fax3Decode2D+0x476>
mov    %r12,%rcx
and    $0x7ff,%ecx
test   %ecx,%ecx
jne    232c0 <Fax3Decode2D+0x3c0>
mov    $0x8,%r13d
jmpq   2323b <Fax3Decode2D+0x33b>
mov    %rcx,%rbx
mov    %rdx,%r12
mov    %r12,%rdx
shr    %edx
lea    -0x1(%rbx),%ecx
and    $0x1,%r12d
test   %r12d,%r12d
je     232e7 <Fax3Decode2D+0x3e7>
test   %ecx,%ecx
jg     2331f <Fax3Decode2D+0x41f>
cmp    %r9,%r10
jbe    233ab <Fax3Decode2D+0x4ab>
movzbl (%r9),%eax
movzbl (%r8,%rax,1),%eax
shl    %cl,%eax
or     %eax,%edx
add    $0x1,%r9
lea    0x7(%rbx),%ecx
mov    0x68(%r15),%rdi
movslq (%rdi),%rax
mov    %rdx,%r12
shr    %r12d
lea    -0x1(%rcx),%ebx
and    $0x1,%edx
test   %edx,%edx
jle    233bd <Fax3Decode2D+0x4bd>
mov    %rsi,-0x58(%rbp)
mov    $0xc,%edi
xor    %r11d,%r11d
mov    -0xf8(%rbp),%rdx
mov    -0x108(%rbp),%rax
mov    -0xd0(%rbp),%r13
mov    %r11,%r14
mov    %r14,%r15
jmpq   23438 <Fax3Decode2D+0x538>
test   %ebx,%ebx
je     23481 <Fax3Decode2D+0x581>
mov    %r13,%rbx
jmpq   23228 <Fax3Decode2D+0x328>
cmp    %r9,%r10
jbe    234fd <Fax3Decode2D+0x5fd>
movzbl (%r9),%ecx
movzbl (%r8,%rcx,1),%edx
mov    %rbx,%rcx
shl    %cl,%edx
or     %edx,%r12d
lea    0x1(%r9),%rbx
lea    0x8(%rcx),%edx
cmp    $0xa,%edx
jle    2350d <Fax3Decode2D+0x60d>
mov    %rbx,%r9
mov    %rdx,%rbx
jmpq   232cf <Fax3Decode2D+0x3cf>
test   %ecx,%ecx
je     2347c <Fax3Decode2D+0x57c>
mov    $0x1,%ecx
jmpq   2331f <Fax3Decode2D+0x41f>
add    $0x4,%rdi
mov    $0x7,%ecx
xor    %r15d,%r15d
mov    -0xd0(%rbp),%r13
mov    %rsi,%rdx
mov    %r15,%r14
mov    %rdx,-0x120(%rbp)
cmp    %r13d,%r14d
jl     23521 <Fax3Decode2D+0x621>
test   %r15d,%r15d
jne    235ca <Fax3Decode2D+0x6ca>
xor    %r15d,%r15d
pushq  -0x78(%rbp)
popq   -0x80(%rbp)
jmpq   23076 <Fax3Decode2D+0x176>
mov    %r12,%rcx
and    $0xfff,%ecx
mov    %ecx,%edi
movzbl 0x1(%rdx,%rdi,8),%ecx
shr    %cl,%r12d
sub    %ecx,%ebx
movzbl (%rdx,%rdi,8),%ecx
cmp    $0xa,%cl
jbe    235ec <Fax3Decode2D+0x6ec>
cmp    $0xb,%cl
jne    2366e <Fax3Decode2D+0x76e>
movslq 0x4(%rdx,%rdi,8),%rcx
add    %ecx,%r15d
add    %ecx,%r14d
mov    $0xc,%edi
cmp    $0xb,%ebx
jg     233fd <Fax3Decode2D+0x4fd>
cmp    %r9,%r10
jbe    23682 <Fax3Decode2D+0x782>
movzbl (%r9),%ecx
movzbl (%r8,%rcx,1),%ecx
mov    %rbx,%r11
mov    %rcx,%rbx
mov    %r11,%rcx
shl    %cl,%ebx
mov    %rcx,%r11
or     %ebx,%r12d
lea    0x1(%r9),%rbx
lea    0x8(%r11),%ecx
cmp    $0xb,%ecx
jle    23692 <Fax3Decode2D+0x792>
mov    %rbx,%r9
mov    %rcx,%rbx
xor    %r11d,%r11d
jmp    233fd <Fax3Decode2D+0x4fd>
mov    %rdx,%r12
xor    %eax,%eax
mov    -0xd0(%rbp),%r13
test   %r13d,%r13d
jne    236a9 <Fax3Decode2D+0x7a9>
mov    -0x88(%rbp),%r14
xor    %ebx,%ebx
mov    %rsi,%rdx
mov    %r9,-0xc0(%rbp)
mov    %r13,%rcx
mov    %rax,%r13
callq  *0x58(%r15)
mov    %ebx,0x4c(%r15)
mov    %r12d,0x48(%r15)
mov    %r13d,0x50(%r15)
mov    0x388(%r14),%rax
mov    -0xc0(%rbp),%rcx
sub    %rcx,%rax
add    0x390(%r14),%rax
mov    %rax,0x390(%r14)
mov    %rcx,0x388(%r14)
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x18(%rbp),%r13
mov    -0x20(%rbp),%r14
mov    -0x28(%rbp),%r15
mov    $0xffffffffffffffff,%rax
leaveq 
retq   
test   %ebx,%ebx
je     236f1 <Fax3Decode2D+0x7f1>
mov    %r14,%rbx
jmpq   232cf <Fax3Decode2D+0x3cf>
cmp    %rbx,%r10
ja     236f8 <Fax3Decode2D+0x7f8>
mov    %rbx,%r9
mov    %r14,%rbx
jmpq   232cf <Fax3Decode2D+0x3cf>
cmp    $0x6,%ebx
jle    2371a <Fax3Decode2D+0x81a>
mov    %rbx,-0xe0(%rbp)
mov    %r12,%rcx
and    $0x7f,%ecx
mov    %ecx,%r8d
movzbl 0x1(%r11,%r8,8),%ecx
sub    %ecx,%ebx
shr    %cl,%r12d
mov    %rcx,-0xd8(%rbp)
movzbl (%r11,%r8,8),%ecx
add    $0xffffffff,%ecx
cmp    $0xb,%ecx
ja     2301d <Fax3Decode2D+0x11d>
lea    0x31b28(%rip),%r10        # 5508c <module.11+0x138>
movslq (%r10,%rcx,4),%rcx
add    %r10,%rcx
jmpq   *%rcx
cmp    %rsi,%rdx
jne    2395d <Fax3Decode2D+0xa5d>
mov    0x4(%r11,%r8,8),%ecx
lea    (%r14,%rcx,1),%r10d
cmp    %r10d,%eax
jle    2396a <Fax3Decode2D+0xa6a>
mov    %rax,%r10
sub    %r14d,%r10d
sub    %ecx,%r10d
lea    (%r15,%r10,1),%ecx
mov    %ecx,(%rdx)
movslq 0x4(%r11,%r8,8),%rcx
mov    %rax,%r14
sub    %ecx,%r14d
add    $0xfffffffffffffffc,%rdi
movslq (%rdi),%rcx
sub    %ecx,%eax
add    $0x4,%rdx
mov    -0xf0(%rbp),%r10
mov    -0xe8(%rbp),%r8
mov    $0x7,%ecx
xor    %r15d,%r15d
jmpq   233d6 <Fax3Decode2D+0x4d6>
lea    (%r14,%r15,1),%eax
cmp    %r13d,%eax
jl     239dc <Fax3Decode2D+0xadc>
mov    %r15d,(%rdx)
add    $0x4,%rdx
xor    %r15d,%r15d
pushq  -0x78(%rbp)
popq   -0x80(%rbp)
jmpq   23076 <Fax3Decode2D+0x176>
cmp    $0x7,%cl
je     239fd <Fax3Decode2D+0xafd>
cmp    $0x9,%cl
je     23428 <Fax3Decode2D+0x528>
mov    -0xc0(%rbp),%rax
mov    0x90(%rax),%edx
lea    0x3242b(%rip),%rdi        # 55a3d <module.31>
mov    -0x88(%rbp),%rax
mov    %r14,%rcx
mov    %rbx,-0xb8(%rbp)
mov    %rsi,%rbx
mov    %rax,%rsi
mov    %r9,%r13
callq  223c0 <Fax3Unexpected>
mov    %rbx,%rdx
mov    %r13,%r9
mov    -0xb8(%rbp),%rbx
mov    -0x50(%rbp),%rdi
xor    %r11d,%r11d
mov    -0xd0(%rbp),%r13
test   %r15d,%r15d
je     23658 <Fax3Decode2D+0x758>
mov    %r15d,(%rdx)
add    $0x4,%rdx
cmp    %r13d,%r14d
jne    23a36 <Fax3Decode2D+0xb36>
mov    -0x58(%rbp),%rsi
mov    -0x48(%rbp),%r14
jmpq   23097 <Fax3Decode2D+0x197>
cmp    $0xc,%cl
jne    235fe <Fax3Decode2D+0x6fe>
mov    %rsi,%rdx
mov    -0x50(%rbp),%rdi
mov    $0x1,%r11d
jmp    2364c <Fax3Decode2D+0x74c>
test   %ebx,%ebx
je     23a93 <Fax3Decode2D+0xb93>
mov    %rdi,%rbx
jmpq   233fd <Fax3Decode2D+0x4fd>
cmp    %rbx,%r10
ja     23ad5 <Fax3Decode2D+0xbd5>
mov    %rbx,%r9
mov    %rdi,%rbx
xor    %r11d,%r11d
jmpq   233fd <Fax3Decode2D+0x4fd>
mov    0x90(%r15),%edx
mov    -0x88(%rbp),%r10
xor    %ebx,%ebx
mov    %rbx,%rcx
mov    %r13,%r8
mov    %r9,-0xe8(%rbp)
mov    %rax,%r14
mov    %rsi,%r15
mov    %r10,%rsi
lea    0x32367(%rip),%rdi        # 55a3d <module.31>
callq  224a0 <Fax3BadLength>
mov    -0xe8(%rbp),%r9
mov    -0x50(%rbp),%rdi
mov    %rbx,%rax
mov    %r15,%rdx
jmpq   23b00 <Fax3Decode2D+0xc00>
xor    %eax,%eax
jmpq   23481 <Fax3Decode2D+0x581>
movzbl (%rbx),%ebx
movzbl (%r8,%rbx,1),%ebx
mov    %rdx,%r13
mov    %rcx,%rdx
mov    %r13,%rcx
shl    %cl,%ebx
or     %ebx,%r12d
add    $0x2,%r9
lea    0x10(%rdx),%ebx
jmpq   232cf <Fax3Decode2D+0x3cf>
cmp    %r10,%r9
jae    23b30 <Fax3Decode2D+0xc30>
movzbl (%r9),%ecx
movzbl (%r8,%rcx,1),%r8d
mov    %rbx,%rcx
shl    %cl,%r8d
or     %r8d,%r12d
add    $0x1,%r9
lea    0x8(%rcx),%ebx
jmpq   2352a <Fax3Decode2D+0x62a>
sub    %r14d,%r13d
mov    %r13d,(%rdx)
mov    -0xc0(%rbp),%rax
mov    0x90(%rax),%r8d
lea    0x322e1(%rip),%rdi        # 55a3d <module.31>
mov    -0x88(%rbp),%rax
mov    %r14,%rcx
mov    %r12,-0xa8(%rbp)
mov    %rsi,-0x98(%rbp)
mov    %rax,%rsi
mov    %rdx,%r12
mov    %r8,%rdx
mov    %r9,%r13
callq  22430 <Fax3Extension>
lea    0x4(%r12),%rdx
mov    %r13,%r9
mov    -0x98(%rbp),%rsi
mov    -0xa8(%rbp),%r12
mov    -0xd0(%rbp),%r13
pushq  -0x78(%rbp)
popq   -0x80(%rbp)
jmpq   23076 <Fax3Decode2D+0x176>
mov    %r13,%rax
sub    %r14d,%eax
mov    %eax,(%rdx)
add    $0x4,%rdx
cmp    $0x3,%ebx
jg     237ec <Fax3Decode2D+0x8ec>
mov    -0xf0(%rbp),%rax
cmp    %rax,%r9
jae    23b40 <Fax3Decode2D+0xc40>
movzbl (%r9),%eax
mov    -0xe8(%rbp),%rcx
movzbl (%rcx,%rax,1),%eax
mov    %rbx,%rcx
shl    %cl,%eax
or     %eax,%r12d
lea    0x8(%rcx),%ebx
add    $0x1,%r9
mov    %r12,%rax
and    $0xf,%eax
test   %eax,%eax
je     23849 <Fax3Decode2D+0x949>
mov    -0xc0(%rbp),%rax
mov    0x90(%rax),%r8d
lea    0x32232(%rip),%rdi        # 55a3d <module.31>
mov    -0x88(%rbp),%rax
mov    %r14,%rcx
mov    %rsi,-0x98(%rbp)
mov    %r9,-0xd8(%rbp)
mov    %rax,%rsi
mov    %rdx,%r13
mov    %r8,%rdx
callq  223c0 <Fax3Unexpected>
mov    %r13,%rdx
mov    -0xd8(%rbp),%r9
mov    -0x98(%rbp),%rsi
mov    -0xd0(%rbp),%r13
shr    $0x4,%r12d
add    $0xfffffffc,%ebx
pushq  -0x70(%rbp)
popq   -0x80(%rbp)
jmpq   23076 <Fax3Decode2D+0x176>
cmp    %rsi,%rdx
jne    23b60 <Fax3Decode2D+0xc60>
mov    %rax,%rcx
add    (%rdi),%ecx
mov    %rcx,%rax
add    0x4(%rdi),%eax
mov    %rcx,%r8
sub    %r14d,%r8d
add    %r8d,%r15d
add    $0x8,%rdi
mov    %rcx,%r14
mov    -0xf0(%rbp),%r10
mov    -0xe8(%rbp),%r8
mov    $0x7,%ecx
jmpq   233d6 <Fax3Decode2D+0x4d6>
sub    %rsi,%rdx
and    $0x4,%rdx
test   %rdx,%rdx
jle    23b69 <Fax3Decode2D+0xc69>
mov    %rdi,-0x110(%rbp)
mov    %rax,-0x40(%rbp)
mov    -0xf0(%rbp),%r10
mov    -0xe8(%rbp),%r8
mov    $0xd,%eax
mov    -0x108(%rbp),%rdx
jmpq   23bac <Fax3Decode2D+0xcac>
cmp    %rsi,%rdx
jne    23bea <Fax3Decode2D+0xcea>
mov    %rax,%rcx
mov    %rcx,%rax
sub    %r14d,%eax
add    %r15d,%eax
mov    %eax,(%rdx)
mov    %rcx,%rax
add    (%rdi),%eax
add    $0x4,%rdx
add    $0x4,%rdi
mov    %rcx,%r14
mov    -0xf0(%rbp),%r10
mov    -0xe8(%rbp),%r8
mov    $0x7,%ecx
xor    %r15d,%r15d
jmpq   233d6 <Fax3Decode2D+0x4d6>
cmp    %rsi,%rdx
jne    23bf3 <Fax3Decode2D+0xcf3>
mov    %rax,%rcx
sub    %r14d,%ecx
mov    %rcx,%r10
add    0x4(%r11,%r8,8),%r10d
add    %r15d,%r10d
mov    %r10d,(%rdx)
add    (%rdi),%eax
add    0x4(%r11,%r8,8),%ecx
add    %ecx,%r14d
add    $0x4,%rdx
add    $0x4,%rdi
mov    -0xf0(%rbp),%r10
mov    -0xe8(%rbp),%r8
mov    $0x7,%ecx
xor    %r15d,%r15d
jmpq   233d6 <Fax3Decode2D+0x4d6>
mov    %r12,-0x40(%rbp)
mov    %rbx,-0x60(%rbp)
jmpq   23c17 <Fax3Decode2D+0xd17>
cmp    %r10d,%eax
jl     23978 <Fax3Decode2D+0xa78>
cmp    %rsi,%rdx
je     23588 <Fax3Decode2D+0x688>
mov    -0xc0(%rbp),%rax
mov    0x90(%rax),%r8d
lea    0x320b0(%rip),%rdi        # 55a3d <module.31>
mov    -0x88(%rbp),%rax
mov    %r14,%rcx
mov    %r12,-0xa8(%rbp)
mov    %rsi,-0x90(%rbp)
mov    %rax,%rsi
mov    %rdx,%r12
mov    %r8,%rdx
mov    %r9,%r13
callq  223c0 <Fax3Unexpected>
mov    %r12,%rdx
mov    %r13,%r9
mov    -0x90(%rbp),%rsi
mov    -0xa8(%rbp),%r12
mov    -0xd0(%rbp),%r13
pushq  -0x78(%rbp)
popq   -0x80(%rbp)
jmpq   23076 <Fax3Decode2D+0x176>
test   %ebx,%ebx
jle    23c29 <Fax3Decode2D+0xd29>
mov    %r12,%rax
and    $0x1,%eax
test   %eax,%eax
je     2301d <Fax3Decode2D+0x11d>
shr    %r12d
add    $0xffffffff,%ebx
jmpq   235d7 <Fax3Decode2D+0x6d7>
add    0x4(%rdx,%rdi,8),%r15d
mov    %r15d,(%rsi)
lea    0x4(%rsi),%rcx
add    0x4(%rdx,%rdi,8),%r14d
cmp    %r13d,%r14d
jge    23c4f <Fax3Decode2D+0xd4f>
mov    %rcx,-0xb8(%rbp)
mov    %rsi,-0xc8(%rbp)
mov    -0x50(%rbp),%rdi
mov    $0xd,%esi
mov    %r11,%r15
jmpq   23c7b <Fax3Decode2D+0xd7b>
mov    -0xc0(%rbp),%rax
mov    0x90(%rax),%eax
lea    0x31ff3(%rip),%rdi        # 55a3d <module.31>
mov    -0x88(%rbp),%rsi
mov    %r14,%rcx
mov    %r13,%r8
mov    %r11,-0x68(%rbp)
mov    %r9,-0xb0(%rbp)
mov    %rdx,%r15
mov    %rax,%rdx
callq  224a0 <Fax3BadLength>
mov    %r15,%rdx
mov    -0xb0(%rbp),%r9
mov    -0x68(%rbp),%r11
mov    -0x58(%rbp),%rsi
mov    -0x48(%rbp),%rcx
mov    -0x50(%rbp),%rdi
jmpq   23cc5 <Fax3Decode2D+0xdc5>
mov    -0xb8(%rbp),%rsi
mov    %r12,-0xf8(%rbp)
mov    %r9,-0x78(%rbp)
mov    %rsi,%r12
mov    -0xc0(%rbp),%rbx
mov    0x90(%rbx),%edx
lea    0x31f88(%rip),%rdi        # 55a3d <module.31>
mov    -0x88(%rbp),%rsi
mov    %r14,%rcx
callq  22530 <Fax3PrematureEOF>
test   %r15d,%r15d
jne    23ce4 <Fax3Decode2D+0xde4>
mov    %r12,%rdx
jmpq   23ced <Fax3Decode2D+0xded>
movzbl (%rbx),%edi
movzbl (%r8,%rdi,1),%edi
shl    %cl,%edi
or     %edi,%r12d
add    $0x2,%r9
lea    0x10(%r11),%ebx
xor    %r11d,%r11d
jmpq   233fd <Fax3Decode2D+0x4fd>
cmp    %rdx,%r15
jae    23b05 <Fax3Decode2D+0xc05>
add    $0xfffffffffffffffc,%rdx
movslq (%rdx),%rcx
sub    %ecx,%eax
cmp    %r13d,%eax
jg     23af2 <Fax3Decode2D+0xbf2>
cmp    %r13d,%eax
jl     23d1d <Fax3Decode2D+0xe1d>
cmp    %r13d,%eax
jg     23d61 <Fax3Decode2D+0xe61>
mov    %r14,%rax
mov    %r15,%rsi
mov    -0x88(%rbp),%r14
mov    -0xc0(%rbp),%r15
jmpq   2349d <Fax3Decode2D+0x59d>
test   %ebx,%ebx
je     23d88 <Fax3Decode2D+0xe88>
mov    %rcx,%rbx
jmpq   2352a <Fax3Decode2D+0x62a>
mov    -0xd8(%rbp),%rcx
mov    -0xe0(%rbp),%rax
cmp    %eax,%ecx
je     23de9 <Fax3Decode2D+0xee9>
mov    $0x4,%ebx
jmpq   237ec <Fax3Decode2D+0x8ec>
mov    %r12,-0x30(%rbp)
jmpq   23e05 <Fax3Decode2D+0xf05>
mov    %rdi,-0x110(%rbp)
mov    %rax,-0x40(%rbp)
mov    -0xf0(%rbp),%r10
mov    -0xe8(%rbp),%r8
mov    $0xc,%eax
mov    -0xf8(%rbp),%rdx
jmpq   23e2f <Fax3Decode2D+0xf2f>
cmp    $0xa,%cl
je     23ba1 <Fax3Decode2D+0xca1>
cmp    $0xb,%cl
jne    23e76 <Fax3Decode2D+0xf76>
movslq 0x4(%rdx,%rdi,8),%rcx
add    %ecx,%r15d
add    %ecx,%r14d
cmp    $0xc,%ebx
jg     23ed4 <Fax3Decode2D+0xfd4>
cmp    %r9,%r10
jbe    23ec9 <Fax3Decode2D+0xfc9>
movzbl (%r9),%ecx
movzbl (%r8,%rcx,1),%edi
mov    %rbx,%rcx
shl    %cl,%edi
or     %edi,%r12d
lea    0x1(%r9),%rbx
lea    0x8(%rcx),%edi
cmp    $0xc,%edi
jle    23f32 <Fax3Decode2D+0x1032>
mov    %rbx,%r9
mov    %rdi,%rbx
jmpq   23ed4 <Fax3Decode2D+0xfd4>
mov    %r12,-0x38(%rbp)
jmpq   23f5a <Fax3Decode2D+0x105a>
mov    %r12,-0x38(%rbp)
mov    %rbx,-0x60(%rbp)
jmpq   23f82 <Fax3Decode2D+0x1082>
cmp    %r13d,%eax
jge    23f94 <Fax3Decode2D+0x1094>
lea    0x8(%rdi),%rbx
mov    0x4(%rdi),%ecx
add    (%rdi),%ecx
add    %ecx,%eax
mov    %rbx,%rdi
cmp    %eax,%r14d
jge    23c00 <Fax3Decode2D+0xd00>
mov    -0x60(%rbp),%rbx
mov    -0x40(%rbp),%r12
jmpq   23576 <Fax3Decode2D+0x676>
cmp    %r10,%r9
jae    23fa1 <Fax3Decode2D+0x10a1>
movzbl (%r9),%eax
movzbl (%rax,%r8,1),%eax
mov    %rbx,%rcx
shl    %cl,%eax
or     %eax,%r12d
lea    0x8(%rcx),%ebx
add    $0x1,%r9
jmpq   239e4 <Fax3Decode2D+0xae4>
mov    %rcx,%rdx
mov    -0x50(%rbp),%rdi
mov    %r11,%r15
jmpq   2364c <Fax3Decode2D+0x74c>
cmp    $0x8,%cl
je     23fb3 <Fax3Decode2D+0x10b3>
cmp    $0xa,%cl
jne    24037 <Fax3Decode2D+0x1137>
movslq 0x4(%rax,%rdx,8),%rcx
add    %ecx,%r15d
add    %ecx,%r14d
cmp    $0xc,%ebx
jg     24003 <Fax3Decode2D+0x1103>
cmp    %r9,%r10
jbe    23ff8 <Fax3Decode2D+0x10f8>
movzbl (%r9),%ecx
movzbl (%r8,%rcx,1),%edx
mov    %rbx,%rcx
shl    %cl,%edx
or     %edx,%r12d
lea    0x1(%r9),%rdx
lea    0x8(%rcx),%ebx
cmp    $0xc,%ebx
jle    2407a <Fax3Decode2D+0x117a>
mov    %rdx,%r9
jmpq   24003 <Fax3Decode2D+0x1103>
cmp    %rdx,%rsi
jae    23cca <Fax3Decode2D+0xdca>
add    $0xfffffffffffffffc,%rdx
movslq (%rdx),%rax
sub    %eax,%r14d
cmp    %r13d,%r14d
jg     23cb6 <Fax3Decode2D+0xdb6>
cmp    %r13d,%r14d
jl     2408e <Fax3Decode2D+0x118e>
cmp    %r13d,%r14d
jg     240c3 <Fax3Decode2D+0x11c3>
mov    %rcx,%r14
jmpq   23097 <Fax3Decode2D+0x197>
mov    %r15d,(%r12)
lea    0x4(%r12),%rdx
cmp    %r13d,%r14d
jne    240d9 <Fax3Decode2D+0x11d9>
mov    %rbx,%r15
mov    -0x78(%rbp),%r9
mov    -0xf8(%rbp),%r12
mov    -0x58(%rbp),%rsi
mov    -0x88(%rbp),%r14
mov    -0x50(%rbp),%rdi
xor    %eax,%eax
mov    %rax,%rbx
jmpq   2349d <Fax3Decode2D+0x59d>
test   %eax,%eax
jns    23d24 <Fax3Decode2D+0xe24>
mov    %rbx,%rax
mov    %rdx,%rcx
sub    %r15,%rcx
and    $0x4,%rcx
test   %rcx,%rcx
jle    23d3d <Fax3Decode2D+0xe3d>
movl   $0x0,(%rdx)
add    $0x4,%rdx
neg    %eax
add    %r13d,%eax
mov    %eax,(%rdx)
add    $0x4,%rdx
mov    %r14,%rax
mov    %r15,%rsi
mov    -0x88(%rbp),%r14
mov    -0xc0(%rbp),%r15
jmpq   2349d <Fax3Decode2D+0x59d>
mov    %r13d,(%rdx)
movl   $0x0,0x4(%rdx)
add    $0x8,%rdx
mov    %r14,%rax
mov    %r15,%rsi
mov    -0x88(%rbp),%r14
mov    -0xc0(%rbp),%r15
jmpq   2349d <Fax3Decode2D+0x59d>
mov    %r15,%r8
xor    %ebx,%ebx
mov    %rbx,-0xf0(%rbp)
mov    %r12,-0x108(%rbp)
mov    %r9,-0xd0(%rbp)
mov    -0xc0(%rbp),%r15
mov    0x90(%r15),%ebx
lea    0x31c86(%rip),%rdi        # 55a3d <module.31>
mov    -0x88(%rbp),%rax
mov    %rsi,-0x118(%rbp)
mov    %rax,%rsi
mov    %rdx,%r12
mov    %rbx,%rdx
mov    %r8,%rbx
mov    %r14,%rcx
callq  22530 <Fax3PrematureEOF>
test   %ebx,%ebx
jne    2411d <Fax3Decode2D+0x121d>
mov    %r12,%rdx
jmpq   24126 <Fax3Decode2D+0x1226>
mov    %r15,%r8
jmp    23d8d <Fax3Decode2D+0xe8d>
cmp    %r13d,%eax
jge    2415d <Fax3Decode2D+0x125d>
lea    0x8(%rdi),%r8
mov    0x4(%rdi),%ecx
add    (%rdi),%ecx
add    %ecx,%eax
mov    %r8,%rdi
cmp    %eax,%r14d
jge    23dee <Fax3Decode2D+0xeee>
mov    %rax,%rcx
mov    -0x30(%rbp),%r12
jmpq   23867 <Fax3Decode2D+0x967>
cmp    $0x9,%cl
je     23e24 <Fax3Decode2D+0xf24>
cmp    $0xb,%cl
jne    24175 <Fax3Decode2D+0x1275>
movslq 0x4(%rdx,%rdi,8),%rcx
add    %ecx,%r15d
add    %ecx,%r14d
cmp    $0xb,%ebx
jg     241d3 <Fax3Decode2D+0x12d3>
cmp    %r10,%r9
jae    241c8 <Fax3Decode2D+0x12c8>
movzbl (%r9),%ecx
movzbl (%r8,%rcx,1),%edi
mov    %rbx,%rcx
shl    %cl,%edi
or     %edi,%r12d
lea    0x1(%r9),%rdi
lea    0x8(%rcx),%ebx
cmp    $0xb,%ebx
jle    24231 <Fax3Decode2D+0x1331>
mov    %rdi,%r9
jmpq   241d3 <Fax3Decode2D+0x12d3>
pushq  -0x100(%rbp)
popq   -0x120(%rbp)
mov    -0xc0(%rbp),%rax
mov    0x90(%rax),%edx
lea    0x31bb3(%rip),%rdi        # 55a3d <module.31>
mov    -0x88(%rbp),%rax
mov    %r14,%rcx
mov    %rsi,-0xa0(%rbp)
mov    %rax,%rsi
mov    %r9,%r13
callq  223c0 <Fax3Unexpected>
mov    %r13,%r9
mov    -0x120(%rbp),%rdx
mov    -0xa0(%rbp),%rsi
mov    -0xd0(%rbp),%r13
pushq  -0x78(%rbp)
popq   -0x80(%rbp)
jmpq   23076 <Fax3Decode2D+0x176>
test   %ebx,%ebx
je     24242 <Fax3Decode2D+0x1342>
mov    %rax,%rbx
mov    %r12,%rcx
and    $0x1fff,%ecx
mov    %ecx,%edi
movzbl 0x1(%rdx,%rdi,8),%ecx
shr    %cl,%r12d
sub    %ecx,%ebx
movzbl (%rdx,%rdi,8),%ecx
cmp    $0x9,%cl
ja     23b93 <Fax3Decode2D+0xc93>
cmp    $0x8,%cl
jne    23e76 <Fax3Decode2D+0xf76>
add    0x4(%rdx,%rdi,8),%r15d
mov    -0x120(%rbp),%rax
mov    %r15d,(%rax)
add    0x4(%rdx,%rdi,8),%r14d
add    $0x4,%rax
mov    %rax,-0x100(%rbp)
mov    $0xc,%eax
xor    %r15d,%r15d
mov    -0xf8(%rbp),%rdx
jmpq   2426c <Fax3Decode2D+0x136c>
cmp    %rbx,%r10
ja     242e3 <Fax3Decode2D+0x13e3>
mov    %rbx,%r9
mov    %rax,%rbx
jmp    23ed4 <Fax3Decode2D+0xfd4>
cmp    %r13d,%eax
jge    24305 <Fax3Decode2D+0x1405>
lea    0x8(%rdi),%r8
mov    0x4(%rdi),%ecx
add    (%rdi),%ecx
add    %ecx,%eax
mov    %r8,%rdi
cmp    %eax,%r14d
jge    23f43 <Fax3Decode2D+0x1043>
mov    %rax,%rcx
mov    -0x38(%rbp),%r12
jmpq   238dd <Fax3Decode2D+0x9dd>
cmp    %r13d,%eax
jge    24311 <Fax3Decode2D+0x1411>
lea    0x8(%rdi),%rbx
mov    0x4(%rdi),%ecx
add    (%rdi),%ecx
add    %ecx,%eax
mov    %rbx,%rdi
cmp    %eax,%r14d
jge    23f6b <Fax3Decode2D+0x106b>
mov    -0x60(%rbp),%rbx
mov    -0x38(%rbp),%r12
jmpq   2391c <Fax3Decode2D+0xa1c>
mov    -0x60(%rbp),%rbx
mov    -0x40(%rbp),%r12
jmpq   23576 <Fax3Decode2D+0x676>
test   %ebx,%ebx
je     2431e <Fax3Decode2D+0x141e>
mov    $0x1,%ebx
jmpq   239e4 <Fax3Decode2D+0xae4>
add    0x4(%rax,%rdx,8),%r15d
mov    -0xb8(%rbp),%rcx
mov    %r15d,(%rcx)
mov    -0xc8(%rbp),%rcx
lea    0x8(%rcx),%rsi
add    0x4(%rax,%rdx,8),%r14d
cmp    %r13d,%r14d
jge    24328 <Fax3Decode2D+0x1428>
test   %r15d,%r15d
je     24337 <Fax3Decode2D+0x1437>
mov    $0xc,%edi
mov    -0xf8(%rbp),%rdx
mov    %r11,%r15
jmpq   23438 <Fax3Decode2D+0x538>
test   %ebx,%ebx
je     23a8c <Fax3Decode2D+0xb8c>
mov    %rsi,%rbx
mov    %r12,%rcx
and    $0x1fff,%ecx
mov    %ecx,%edx
movzbl 0x1(%rax,%rdx,8),%ecx
shr    %cl,%r12d
sub    %ecx,%ebx
movzbl (%rax,%rdx,8),%ecx
cmp    $0xa,%cl
jbe    23c5e <Fax3Decode2D+0xd5e>
cmp    $0xb,%cl
je     23c70 <Fax3Decode2D+0xd70>
cmp    $0xc,%cl
je     24355 <Fax3Decode2D+0x1455>
mov    -0xc0(%rbp),%rax
mov    0x90(%rax),%edx
mov    %r9,%r13
lea    0x319ef(%rip),%rdi        # 55a3d <module.31>
mov    -0x88(%rbp),%rsi
mov    %r14,%rcx
callq  223c0 <Fax3Unexpected>
mov    %r13,%r9
mov    -0xb8(%rbp),%rdx
mov    -0x50(%rbp),%rdi
xor    %r11d,%r11d
mov    -0xd0(%rbp),%r13
jmpq   2364c <Fax3Decode2D+0x74c>
cmp    %rdx,%r10
ja     24367 <Fax3Decode2D+0x1467>
mov    %rdx,%r9
mov    %rsi,%rbx
jmpq   24003 <Fax3Decode2D+0x1103>
test   %r14d,%r14d
jns    24096 <Fax3Decode2D+0x1196>
xor    %r14d,%r14d
mov    %rdx,%rax
sub    %rsi,%rax
and    $0x4,%rax
test   %rax,%rax
jle    240af <Fax3Decode2D+0x11af>
movl   $0x0,(%rdx)
add    $0x4,%rdx
mov    %r13,%rax
sub    %r14d,%eax
mov    %eax,(%rdx)
add    $0x4,%rdx
mov    %rcx,%r14
jmpq   23097 <Fax3Decode2D+0x197>
mov    %r13d,(%rdx)
movl   $0x0,0x4(%rdx)
add    $0x8,%rdx
mov    %rcx,%r14
jmpq   23097 <Fax3Decode2D+0x197>
mov    %rbx,%r15
mov    %rdx,%rbx
mov    0x90(%r15),%edx
mov    -0x88(%rbp),%r12
mov    %r12,%rsi
mov    %r14,%rcx
mov    %r13,%r8
lea    0x31940(%rip),%rdi        # 55a3d <module.31>
callq  224a0 <Fax3BadLength>
mov    %rbx,%rdx
mov    -0x78(%rbp),%r9
mov    -0xf8(%rbp),%rcx
mov    -0x58(%rbp),%rsi
mov    -0x50(%rbp),%rdi
jmpq   24392 <Fax3Decode2D+0x1492>
mov    %ebx,(%r12)
lea    0x4(%r12),%rdx
cmp    %r13d,%r14d
jne    243b9 <Fax3Decode2D+0x14b9>
mov    -0xd0(%rbp),%r9
mov    -0x108(%rbp),%r12
mov    -0xf0(%rbp),%rbx
mov    -0x118(%rbp),%rsi
mov    -0x88(%rbp),%r14
mov    -0x50(%rbp),%rdi
xor    %eax,%eax
jmpq   2349d <Fax3Decode2D+0x59d>
mov    %rax,%rcx
mov    -0x30(%rbp),%r12
jmpq   23867 <Fax3Decode2D+0x967>
pushq  -0x100(%rbp)
popq   -0x120(%rbp)
mov    -0xc0(%rbp),%rax
mov    0x90(%rax),%edx
lea    0x318b4(%rip),%rdi        # 55a3d <module.31>
mov    -0x88(%rbp),%rax
mov    %r14,%rcx
mov    %rsi,-0xa0(%rbp)
mov    %rax,%rsi
mov    %r9,%r13
callq  223c0 <Fax3Unexpected>
mov    %r13,%r9
mov    -0x120(%rbp),%rdx
mov    -0xa0(%rbp),%rsi
mov    -0xd0(%rbp),%r13
pushq  -0x78(%rbp)
popq   -0x80(%rbp)
jmpq   23076 <Fax3Decode2D+0x176>
test   %ebx,%ebx
je     24407 <Fax3Decode2D+0x1507>
mov    %rax,%rbx
mov    %r12,%rcx
and    $0xfff,%ecx
mov    %ecx,%edi
movzbl 0x1(%rdx,%rdi,8),%ecx
shr    %cl,%r12d
sub    %ecx,%ebx
movzbl (%rdx,%rdi,8),%ecx
cmp    $0x8,%cl
ja     23e16 <Fax3Decode2D+0xf16>
cmp    $0x7,%cl
jne    24175 <Fax3Decode2D+0x1275>
add    0x4(%rdx,%rdi,8),%r15d
mov    -0x120(%rbp),%rax
mov    %r15d,(%rax)
add    0x4(%rdx,%rdi,8),%r14d
add    $0x4,%rax
mov    %rax,-0x100(%rbp)
mov    $0xd,%eax
xor    %r15d,%r15d
mov    -0x108(%rbp),%rdx
jmpq   24431 <Fax3Decode2D+0x1531>
cmp    %r10,%rdi
jb     24485 <Fax3Decode2D+0x1585>
mov    %rdi,%r9
mov    %rax,%rbx
jmp    241d3 <Fax3Decode2D+0x12d3>
mov    %r15,%r8
mov    -0x120(%rbp),%rdx
xor    %ebx,%ebx
jmpq   23d8d <Fax3Decode2D+0xe8d>
cmp    $0x9,%cl
je     24261 <Fax3Decode2D+0x1361>
cmp    $0xb,%cl
jne    244a7 <Fax3Decode2D+0x15a7>
movslq 0x4(%rdx,%rdi,8),%rcx
add    %ecx,%r15d
add    %ecx,%r14d
cmp    $0xb,%ebx
jle    244b8 <Fax3Decode2D+0x15b8>
mov    %r12,%rcx
and    $0xfff,%ecx
mov    %ecx,%edi
movzbl 0x1(%rdx,%rdi,8),%ecx
shr    %cl,%r12d
sub    %ecx,%ebx
movzbl (%rdx,%rdi,8),%ecx
cmp    $0x8,%cl
ja     24253 <Fax3Decode2D+0x1353>
cmp    $0x7,%cl
jne    24169 <Fax3Decode2D+0x1269>
add    0x4(%rdx,%rdi,8),%r15d
mov    -0x100(%rbp),%rax
mov    %r15d,(%rax)
add    0x4(%rdx,%rdi,8),%r14d
mov    -0x120(%rbp),%rax
lea    0x8(%rax),%rdx
cmp    %rdx,%rsi
jne    244ea <Fax3Decode2D+0x15ea>
mov    -0x40(%rbp),%rax
mov    -0x110(%rbp),%rdi
mov    $0x7,%ecx
xor    %r15d,%r15d
mov    -0x118(%rbp),%r11
jmpq   233d6 <Fax3Decode2D+0x4d6>
movzbl (%rbx),%ebx
movzbl (%r8,%rbx,1),%ebx
mov    %rdi,%r11
mov    %rcx,%rdi
mov    %r11,%rcx
shl    %cl,%ebx
or     %ebx,%r12d
add    $0x2,%r9
lea    0x10(%rdi),%ebx
jmpq   23ed4 <Fax3Decode2D+0xfd4>
mov    %rax,%rcx
mov    -0x38(%rbp),%r12
jmpq   238dd <Fax3Decode2D+0x9dd>
mov    -0x60(%rbp),%rbx
mov    -0x38(%rbp),%r12
jmpq   2391c <Fax3Decode2D+0xa1c>
mov    %r15,%r8
xor    %ebx,%ebx
jmpq   23d8d <Fax3Decode2D+0xe8d>
mov    %rsi,%rdx
mov    -0x50(%rbp),%rdi
mov    %r11,%r15
jmpq   2364c <Fax3Decode2D+0x74c>
mov    (%rcx),%edx
test   %edx,%edx
je     24509 <Fax3Decode2D+0x1609>
mov    $0xc,%edi
mov    -0xf8(%rbp),%rdx
mov    %r11,%r15
jmpq   23438 <Fax3Decode2D+0x538>
mov    -0xb8(%rbp),%rdx
mov    $0x1,%r11d
jmpq   2364c <Fax3Decode2D+0x74c>
movzbl (%rdx),%edx
movzbl (%r8,%rdx,1),%edx
xchg   %rcx,%rbx
shl    %cl,%edx
or     %edx,%r12d
add    $0x2,%r9
add    $0x10,%ebx
jmpq   24003 <Fax3Decode2D+0x1103>
cmp    %rdx,%rsi
jae    24397 <Fax3Decode2D+0x1497>
add    $0xfffffffffffffffc,%rdx
movslq (%rdx),%rax
sub    %eax,%r14d
cmp    %r13d,%r14d
jg     24383 <Fax3Decode2D+0x1483>
cmp    %r13d,%r14d
jl     24520 <Fax3Decode2D+0x1620>
cmp    %r13d,%r14d
jg     2455d <Fax3Decode2D+0x165d>
mov    %r12,%r14
mov    %rcx,%r12
xor    %eax,%eax
mov    %rax,%rbx
jmpq   2349d <Fax3Decode2D+0x59d>
mov    %rdx,%r12
mov    0x90(%r15),%edx
mov    -0x88(%rbp),%rbx
mov    %rbx,%rsi
mov    %r14,%rcx
mov    %r13,%r8
lea    0x31663(%rip),%rdi        # 55a3d <module.31>
callq  224a0 <Fax3BadLength>
mov    %r12,%rdx
mov    -0xd0(%rbp),%r9
mov    -0x108(%rbp),%rcx
mov    -0xf0(%rbp),%r8
mov    -0x118(%rbp),%rsi
mov    -0x50(%rbp),%rdi
jmpq   2458a <Fax3Decode2D+0x168a>
mov    %r15,%r8
mov    -0x120(%rbp),%rdx
xor    %ebx,%ebx
jmpq   23d8d <Fax3Decode2D+0xe8d>
cmp    $0xa,%cl
je     24426 <Fax3Decode2D+0x1526>
cmp    $0xb,%cl
jne    245b1 <Fax3Decode2D+0x16b1>
movslq 0x4(%rdx,%rdi,8),%rcx
add    %ecx,%r15d
add    %ecx,%r14d
cmp    $0xc,%ebx
jle    245c2 <Fax3Decode2D+0x16c2>
mov    %r12,%rcx
and    $0x1fff,%ecx
mov    %ecx,%edi
movzbl 0x1(%rdx,%rdi,8),%ecx
shr    %cl,%r12d
sub    %ecx,%ebx
movzbl (%rdx,%rdi,8),%ecx
cmp    $0x9,%cl
ja     24418 <Fax3Decode2D+0x1518>
cmp    $0x8,%cl
jne    23e6a <Fax3Decode2D+0xf6a>
add    0x4(%rdx,%rdi,8),%r15d
mov    -0x100(%rbp),%rax
mov    %r15d,(%rax)
add    0x4(%rdx,%rdi,8),%r14d
mov    -0x120(%rbp),%rax
lea    0x8(%rax),%rdx
jmpq   242bb <Fax3Decode2D+0x13bb>
movzbl (%rdi),%edi
movzbl (%r8,%rdi,1),%edi
mov    %rbx,%r11
mov    %rcx,%rbx
mov    %r11,%rcx
shl    %cl,%edi
or     %edi,%r12d
add    $0x2,%r9
add    $0x10,%ebx
jmpq   241d3 <Fax3Decode2D+0x12d3>
pushq  -0x100(%rbp)
popq   -0x120(%rbp)
jmpq   24175 <Fax3Decode2D+0x1275>
cmp    %r9,%r10
jbe    245f7 <Fax3Decode2D+0x16f7>
movzbl (%r9),%ecx
movzbl (%r8,%rcx,1),%edi
mov    %rbx,%rcx
shl    %cl,%edi
or     %edi,%r12d
lea    0x1(%r9),%rdi
lea    0x8(%rcx),%ebx
cmp    $0xb,%ebx
jle    24607 <Fax3Decode2D+0x1707>
mov    %rdi,%r9
jmpq   24275 <Fax3Decode2D+0x1375>
mov    %rbx,-0x58(%rbp)
mov    %r9,-0xe0(%rbp)
mov    %r12,-0x30(%rbp)
mov    -0x40(%rbp),%rax
mov    -0x110(%rbp),%rdi
jmpq   24632 <Fax3Decode2D+0x1732>
mov    %rcx,%rsi
mov    $0xc,%edi
mov    -0xf8(%rbp),%rdx
mov    %r11,%r15
jmpq   23438 <Fax3Decode2D+0x538>
test   %r14d,%r14d
jns    24528 <Fax3Decode2D+0x1628>
xor    %r14d,%r14d
mov    %rdx,%rax
sub    %rsi,%rax
and    $0x4,%rax
test   %rax,%rax
jle    24541 <Fax3Decode2D+0x1641>
movl   $0x0,(%rdx)
add    $0x4,%rdx
mov    %r13,%rax
sub    %r14d,%eax
mov    %eax,(%rdx)
add    $0x4,%rdx
mov    %r12,%r14
mov    %rcx,%r12
xor    %eax,%eax
mov    %rax,%rbx
jmpq   2349d <Fax3Decode2D+0x59d>
mov    %r13d,(%rdx)
movl   $0x0,0x4(%rdx)
add    $0x8,%rdx
mov    %r12,%r14
mov    %rcx,%r12
xor    %eax,%eax
mov    %rax,%rbx
jmpq   2349d <Fax3Decode2D+0x59d>
cmp    %rdx,%rsi
jae    2458f <Fax3Decode2D+0x168f>
add    $0xfffffffffffffffc,%rdx
movslq (%rdx),%rax
sub    %eax,%r14d
cmp    %r13d,%r14d
jg     2457b <Fax3Decode2D+0x167b>
cmp    %r13d,%r14d
jl     2465a <Fax3Decode2D+0x175a>
cmp    %r13d,%r14d
jg     24697 <Fax3Decode2D+0x1797>
mov    %rcx,%r12
mov    %rbx,%r14
mov    %r8,%rbx
xor    %eax,%eax
jmpq   2349d <Fax3Decode2D+0x59d>
pushq  -0x100(%rbp)
popq   -0x120(%rbp)
jmpq   23e76 <Fax3Decode2D+0xf76>
cmp    %r10,%r9
jae    246b5 <Fax3Decode2D+0x17b5>
movzbl (%r9),%ecx
movzbl (%r8,%rcx,1),%edi
mov    %rbx,%rcx
shl    %cl,%edi
or     %edi,%r12d
lea    0x1(%r9),%rbx
lea    0x8(%rcx),%edi
cmp    $0xc,%edi
jle    246c1 <Fax3Decode2D+0x17c1>
mov    %rbx,%r9
mov    %rdi,%rbx
jmpq   2443a <Fax3Decode2D+0x153a>
test   %ebx,%ebx
je     246d1 <Fax3Decode2D+0x17d1>
mov    %rax,%rbx
jmpq   24275 <Fax3Decode2D+0x1375>
cmp    %rdi,%r10
ja     246e2 <Fax3Decode2D+0x17e2>
mov    %rdi,%r9
mov    %rax,%rbx
jmpq   24275 <Fax3Decode2D+0x1375>
cmp    %r13d,%eax
jge    24704 <Fax3Decode2D+0x1804>
lea    0x8(%rdi),%rbx
mov    0x4(%rdi),%ecx
add    (%rdi),%ecx
add    %ecx,%eax
mov    %rbx,%rdi
cmp    %r14d,%eax
jle    2461b <Fax3Decode2D+0x171b>
mov    -0x30(%rbp),%r12
mov    -0xe0(%rbp),%r9
mov    -0x58(%rbp),%rbx
mov    $0x7,%ecx
xor    %r15d,%r15d
mov    -0x118(%rbp),%r11
jmpq   233d6 <Fax3Decode2D+0x4d6>
test   %r14d,%r14d
jns    24662 <Fax3Decode2D+0x1762>
xor    %r14d,%r14d
mov    %rdx,%rax
sub    %rsi,%rax
and    $0x4,%rax
test   %rax,%rax
jle    2467b <Fax3Decode2D+0x177b>
movl   $0x0,(%rdx)
add    $0x4,%rdx
mov    %r13,%rax
sub    %r14d,%eax
mov    %eax,(%rdx)
add    $0x4,%rdx
mov    %rcx,%r12
mov    %rbx,%r14
mov    %r8,%rbx
xor    %eax,%eax
jmpq   2349d <Fax3Decode2D+0x59d>
mov    %r13d,(%rdx)
movl   $0x0,0x4(%rdx)
add    $0x8,%rdx
mov    %rcx,%r12
mov    %rbx,%r14
mov    %r8,%rbx
xor    %eax,%eax
jmpq   2349d <Fax3Decode2D+0x59d>
test   %ebx,%ebx
je     24727 <Fax3Decode2D+0x1827>
mov    %rax,%rbx
jmpq   2443a <Fax3Decode2D+0x153a>
cmp    %r10,%rbx
jb     24738 <Fax3Decode2D+0x1838>
mov    %rbx,%r9
mov    %rax,%rbx
jmpq   2443a <Fax3Decode2D+0x153a>
mov    %r15,%r8
mov    -0x100(%rbp),%rdx
xor    %ebx,%ebx
jmpq   23d8d <Fax3Decode2D+0xe8d>
movzbl (%rdi),%edi
movzbl (%r8,%rdi,1),%edi
mov    %rbx,%r11
mov    %rcx,%rbx
mov    %r11,%rcx
shl    %cl,%edi
or     %edi,%r12d
add    $0x2,%r9
add    $0x10,%ebx
jmpq   24275 <Fax3Decode2D+0x1375>
mov    -0x30(%rbp),%r12
mov    -0xe0(%rbp),%r9
mov    -0x58(%rbp),%rbx
mov    $0x7,%ecx
xor    %r15d,%r15d
mov    -0x118(%rbp),%r11
jmpq   233d6 <Fax3Decode2D+0x4d6>
mov    %r15,%r8
mov    -0x100(%rbp),%rdx
xor    %ebx,%ebx
jmpq   23d8d <Fax3Decode2D+0xe8d>
movzbl (%rbx),%ebx
movzbl (%r8,%rbx,1),%ebx
mov    %rdi,%r11
mov    %rcx,%rdi
mov    %r11,%rcx
shl    %cl,%ebx
or     %ebx,%r12d
add    $0x2,%r9
lea    0x10(%rdi),%ebx
jmpq   2443a <Fax3Decode2D+0x153a>
nopw   0x0(%rax,%rax,1)

0000000000024760 <Fax3FixupTags>:
push   %rbp
mov    %rsp,%rbp
mov    $0x1,%eax
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

0000000000024770 <Fax3SetupState>:
push   %rbp
mov    %rsp,%rbp
sub    $0x40,%rsp
mov    0x350(%rdi),%rcx
lea    0x312c4(%rip),%rsi        # 55a4a <module.32>
xor    %eax,%eax
mov    %rax,-0x30(%rbp)
movzwl 0x74(%rdi),%eax
cmp    $0x1,%ax
jne    247c1 <Fax3SetupState+0x51>
mov    0x10(%rdi),%eax
and    $0x400,%eax
test   %eax,%eax
jne    247da <Fax3SetupState+0x6a>
mov    %rdi,%rax
mov    %r14,-0x10(%rbp)
mov    %r15,-0x18(%rbp)
mov    %rcx,%r14
mov    %rdi,%r15
mov    %rax,%rdi
callq  8410 <TIFFScanlineSize@plt>
mov    0x58(%r15),%ecx
jmp    247f7 <Fax3SetupState+0x87>
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
lea    0x31288(%rip),%rdx        # 55a59 <module.32+0xf>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
mov    %rdi,%rax
mov    %r14,-0x10(%rbp)
mov    %r15,-0x18(%rbp)
mov    %rcx,%r14
mov    %rdi,%r15
mov    %rax,%rdi
callq  80d0 <TIFFTileRowSize@plt>
mov    0x64(%r15),%ecx
mov    %rax,0x8(%r14)
mov    %ecx,0x10(%r14)
mov    $0x1,%r9d
mov    0x20(%r14),%edx
and    $0x1,%edx
test   %edx,%edx
je     24821 <Fax3SetupState+0xb1>
movq   $0x0,0x60(%r14)
cmp    $0xffffffdf,%ecx
jbe    24831 <Fax3SetupState+0xc1>
xor    %edx,%edx
jmp    24837 <Fax3SetupState+0xc7>
movzwl 0x78(%r15),%edx
cmp    $0x4,%dx
je     24810 <Fax3SetupState+0xa0>
xor    %r9d,%r9d
jmp    24810 <Fax3SetupState+0xa0>
lea    0x1f(%rcx),%edx
shr    $0x5,%edx
mov    %rdx,%r8
shl    $0x5,%r8d
test   %r9d,%r9d
jg     24863 <Fax3SetupState+0xf3>
test   %r8d,%r8d
je     24875 <Fax3SetupState+0x105>
lea    (%r8,%r8,1),%esi
mov    %rsi,-0x28(%rbp)
mov    %r8,%r10
and    $0x7fffffff,%r10d
cmp    %r10d,%r8d
je     24899 <Fax3SetupState+0x129>
xor    %edx,%edx
jmp    2489c <Fax3SetupState+0x12c>
shl    $0x6,%edx
mov    %rdx,%rsi
shr    %esi
cmp    %esi,%r8d
je     248e5 <Fax3SetupState+0x175>
xor    %r8d,%r8d
jmp    24843 <Fax3SetupState+0xd3>
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
mov    (%r15),%rsi
lea    0x31207(%rip),%rdx        # 55a8f <module.32+0x45>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
leaveq 
retq   
mov    %rsi,%rdx
test   %edx,%edx
je     24875 <Fax3SetupState+0x105>
cmp    %r10d,%r8d
je     248a7 <Fax3SetupState+0x137>
xor    %esi,%esi
mov    %esi,%esi
mov    $0x4,%edx
lea    0x31205(%rip),%rcx        # 55aba <module.32+0x70>
mov    %r15,%rdi
mov    %r10,-0x40(%rbp)
mov    %r9,-0x38(%rbp)
mov    %r15,-0x20(%rbp)
mov    %rax,-0x8(%rbp)
mov    %r8,%r15
callq  8750 <_TIFFCheckMalloc@plt>
mov    %rax,0x60(%r14)
test   %rax,%rax
jne    248ed <Fax3SetupState+0x17d>
xor    %eax,%eax
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
leaveq 
retq   
mov    %rdx,%r8
jmpq   24843 <Fax3SetupState+0xd3>
mov    -0x40(%rbp),%rcx
cmp    %ecx,%r15d
jne    248fc <Fax3SetupState+0x18c>
pushq  -0x28(%rbp)
popq   -0x30(%rbp)
mov    -0x30(%rbp),%rcx
mov    %ecx,%edx
shl    $0x2,%rdx
mov    %rax,%rdi
xor    %esi,%esi
callq  8550 <memset@plt>
mov    -0x38(%rbp),%rdx
test   %edx,%edx
mov    0x60(%r14),%rcx
mov    %rcx,0x70(%r14)
jg     2492a <Fax3SetupState+0x1ba>
movq   $0x0,0x68(%r14)
jmp    24935 <Fax3SetupState+0x1c5>
mov    %r15d,%eax
lea    (%rcx,%rax,4),%rax
mov    %rax,0x68(%r14)
mov    -0x20(%rbp),%r15
movzwl 0x78(%r15),%eax
cmp    $0x3,%ax
je     24969 <Fax3SetupState+0x1f9>
test   %edx,%edx
jg     24992 <Fax3SetupState+0x222>
mov    0x350(%r15),%rax
movq   $0x0,0x80(%rax)
mov    $0x1,%eax
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
leaveq 
retq   
mov    0x20(%r14),%eax
and    $0x1,%eax
test   %eax,%eax
je     24944 <Fax3SetupState+0x1d4>
lea    -0x1a7b(%rip),%rax        # 22f00 <Fax3Decode2D>
mov    %rax,0x2f8(%r15)
mov    %rax,0x308(%r15)
mov    %rax,0x318(%r15)
jmp    24944 <Fax3SetupState+0x1d4>
mov    0x350(%r15),%r14
mov    -0x8(%rbp),%rdi
callq  8440 <_TIFFmalloc@plt>
mov    %rax,0x80(%r14)
test   %rax,%rax
je     249bd <Fax3SetupState+0x24d>
mov    $0x1,%eax
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
lea    0x31106(%rip),%rdx        # 55ad3 <module.32+0x89>
lea    0x31076(%rip),%rsi        # 55a4a <module.32>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)

00000000000249f0 <Fax3PutBits>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    %rbx,-0x10(%rbp)
mov    %r12,-0x18(%rbp)
mov    %r13,-0x20(%rbp)
mov    %r14,-0x28(%rbp)
mov    %r15,-0x30(%rbp)
mov    0x350(%rdi),%rax
mov    %rax,-0x8(%rbp)
mov    0x4c(%rax),%r14d
movslq 0x48(%rax),%r13
mov    %rdx,%rcx
mov    %rsi,%rbx
mov    %rdi,%r12
xor    %r8d,%r8d
mov    $0x8,%eax
jmp    24a95 <Fax3PutBits+0xa5>
mov    0x370(%r12),%rdx
cmp    0x390(%r12),%rdx
jg     24a5a <Fax3PutBits+0x6a>
mov    %rcx,%r15
mov    %r12,%rdi
callq  86e0 <TIFFFlushData1@plt>
mov    %r15,%rcx
mov    $0x8,%eax
xor    %r8d,%r8d
mov    0x388(%r12),%rsi
lea    0x1(%rsi),%rdx
mov    %rdx,0x388(%r12)
sub    %r14d,%ecx
mov    %rbx,%rdx
shr    %cl,%edx
or     %r13b,%dl
mov    %dl,(%rsi)
mov    0x390(%r12),%rdx
add    $0x1,%rdx
mov    %rdx,0x390(%r12)
mov    %rax,%r14
mov    %r8,%r13
cmp    %ecx,%r14d
jb     24a32 <Fax3PutBits+0x42>
cmp    $0x8,%ecx
jbe    24abe <Fax3PutBits+0xce>
lea    0x31053(%rip),%rdi        # 55af9 <module.32+0xaf>
lea    0x30e3f(%rip),%rsi        # 558ec <_fillmasks.13+0x14>
mov    $0x27f,%edx
lea    0x3104b(%rip),%rcx        # 55b04 <module.32+0xba>
callq  8490 <__assert_fail@plt>
lea    0x30b43(%rip),%rsi        # 55608 <_msbmask>
mov    %ecx,%edx
and    (%rsi,%rdx,4),%ebx
mov    %rcx,%rdx
mov    %r14,%rcx
sub    %edx,%ecx
shl    %cl,%ebx
or     %r13d,%ebx
cmp    %edx,%r14d
jne    24b38 <Fax3PutBits+0x148>
mov    0x370(%r12),%rcx
cmp    0x390(%r12),%rcx
jle    24af9 <Fax3PutBits+0x109>
mov    %rax,%rcx
mov    %rbx,%r13
mov    %r8,%rbx
jmp    24b0d <Fax3PutBits+0x11d>
mov    %rbx,%r13
mov    %r8,%rbx
mov    %rax,%r14
mov    %r12,%rdi
callq  86e0 <TIFFFlushData1@plt>
mov    %r14,%rcx
mov    0x388(%r12),%rdx
lea    0x1(%rdx),%rax
mov    %rax,0x388(%r12)
mov    %r13b,(%rdx)
mov    0x390(%r12),%rax
add    $0x1,%rax
mov    %rax,0x390(%r12)
mov    -0x8(%rbp),%rax
mov    %ebx,0x48(%rax)
mov    %ecx,0x4c(%rax)
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
mov    -0x10(%rbp),%rbx
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

0000000000024b60 <putspan>:
push   %rbp
mov    %rsp,%rbp
sub    $0x50,%rsp
mov    %r15,-0x30(%rbp)
mov    %r14,-0x28(%rbp)
mov    %rdx,-0x48(%rbp)
mov    %rbx,-0x10(%rbp)
mov    %r12,-0x18(%rbp)
mov    %r13,-0x20(%rbp)
mov    0x350(%rdi),%rax
mov    %rax,-0x8(%rbp)
mov    0x4c(%rax),%r14d
movslq 0x48(%rax),%r12
mov    %rdi,%rbx
xor    %r8d,%r8d
mov    $0x8,%eax
jmp    24c03 <putspan+0xa3>
mov    0x370(%rbx),%rcx
cmp    0x390(%rbx),%rcx
jg     24bc4 <putspan+0x64>
mov    %rax,%r13
mov    %r8,%r14
mov    %rbx,%rdi
callq  86e0 <TIFFFlushData1@plt>
mov    %r13,%rax
mov    %r14,%r8
mov    0x388(%rbx),%rdx
lea    0x1(%rdx),%rcx
mov    %rcx,0x388(%rbx)
mov    %r12b,(%rdx)
mov    0x390(%rbx),%rcx
add    $0x1,%rcx
mov    %rcx,0x390(%rbx)
mov    %rax,%r14
mov    %r8,%r12
mov    -0x48(%rbp),%rdx
movswq 0x26e(%rdx),%rcx
mov    -0x40(%rbp),%rsi
sub    %ecx,%esi
cmp    $0xa3f,%esi
jg     24c57 <putspan+0xf7>
cmp    $0x3f,%esi
jle    24cd4 <putspan+0x174>
mov    %rsi,%rcx
sar    $0x6,%ecx
add    $0x3f,%ecx
movslq %ecx,%rcx
lea    (%rcx,%rcx,2),%r9
movswq 0x4(%rdx,%r9,2),%rdi
mov    %rsi,%rcx
and    $0xffffffc0,%ecx
cmp    %ecx,%edi
je     24cec <putspan+0x18c>
lea    0x30ed9(%rip),%rdi        # 55b18 <module.32+0xce>
mov    $0x2af,%edx
lea    0x30ec5(%rip),%rcx        # 55b10 <module.32+0xc6>
lea    0x30c9a(%rip),%rsi        # 558ec <_fillmasks.13+0x14>
callq  8490 <__assert_fail@plt>
movzwl 0x26c(%rdx),%r13d
movzwl 0x26a(%rdx),%ecx
mov    %rsi,-0x40(%rbp)
jmpq   24d62 <putspan+0x202>
mov    0x370(%rbx),%rcx
cmp    0x390(%rbx),%rcx
jg     24c93 <putspan+0x133>
mov    %r8,%r12
mov    %rax,%r14
mov    %rbx,%rdi
callq  86e0 <TIFFFlushData1@plt>
mov    %r14,%rax
mov    %r12,%r8
mov    0x388(%rbx),%rdx
lea    0x1(%rdx),%rcx
mov    %rcx,0x388(%rbx)
mov    %r13b,(%rdx)
mov    0x390(%rbx),%rcx
add    $0x1,%rcx
mov    %rcx,0x390(%rbx)
mov    %rax,%r14
mov    %r8,%r12
mov    -0x40(%rbp),%rcx
mov    -0x48(%rbp),%rdx
movswq 0x4(%rdx,%rcx,2),%rcx
mov    -0x38(%rbp),%rsi
sub    %ecx,%esi
movslq %esi,%rcx
lea    (%rcx,%rcx,2),%rcx
lea    (%rdx,%rcx,2),%rcx
movzwl 0x2(%rcx),%r13d
movzwl (%rcx),%ecx
jmpq   24df9 <putspan+0x299>
movzwl 0x2(%rdx,%r9,2),%r13d
movzwl (%rdx,%r9,2),%ecx
mov    %rsi,-0x38(%rbp)
mov    %r9,-0x40(%rbp)
jmpq   24e84 <putspan+0x324>
mov    0x370(%rbx),%rdx
cmp    0x390(%rbx),%rdx
jg     24d2a <putspan+0x1ca>
mov    %rcx,%r15
mov    %rbx,%rdi
callq  86e0 <TIFFFlushData1@plt>
mov    %r15,%rcx
mov    $0x8,%eax
xor    %r8d,%r8d
mov    0x388(%rbx),%rdx
lea    0x1(%rdx),%rsi
mov    %rsi,0x388(%rbx)
sub    %r14d,%ecx
mov    %r13,%rsi
shr    %cl,%esi
or     %esi,%r12d
mov    %r12b,(%rdx)
mov    0x390(%rbx),%rdx
add    $0x1,%rdx
mov    %rdx,0x390(%rbx)
mov    %rax,%r14
mov    %r8,%r12
cmp    %ecx,%r14d
jb     24d04 <putspan+0x1a4>
cmp    $0x8,%ecx
ja     24ead <putspan+0x34d>
mov    %ecx,%edx
lea    0x3088f(%rip),%rsi        # 55608 <_msbmask>
and    (%rsi,%rdx,4),%r13d
mov    %rcx,%rdx
mov    %r14,%rcx
sub    %edx,%ecx
shl    %cl,%r13d
or     %r13d,%r12d
cmp    %edx,%r14d
je     24ba0 <putspan+0x40>
mov    %rcx,%r14
jmpq   24bf1 <putspan+0x91>
mov    0x370(%rbx),%rdx
cmp    0x390(%rbx),%rdx
jg     24dc2 <putspan+0x262>
mov    %rcx,%r15
mov    %rbx,%rdi
callq  86e0 <TIFFFlushData1@plt>
mov    %r15,%rcx
mov    $0x8,%eax
xor    %r8d,%r8d
mov    0x388(%rbx),%rsi
lea    0x1(%rsi),%rdx
mov    %rdx,0x388(%rbx)
sub    %r14d,%ecx
mov    %r13,%rdx
shr    %cl,%edx
or     %r12b,%dl
mov    %dl,(%rsi)
mov    0x390(%rbx),%rdx
add    $0x1,%rdx
mov    %rdx,0x390(%rbx)
mov    %rax,%r14
mov    %r8,%r12
cmp    %ecx,%r14d
jb     24d9c <putspan+0x23c>
cmp    $0x8,%ecx
jbe    24ecc <putspan+0x36c>
mov    $0x2bd,%edx
lea    0x30cfd(%rip),%rcx        # 55b10 <module.32+0xc6>
lea    0x30ad2(%rip),%rsi        # 558ec <_fillmasks.13+0x14>
lea    0x30cd8(%rip),%rdi        # 55af9 <module.32+0xaf>
callq  8490 <__assert_fail@plt>
mov    0x370(%rbx),%rdx
cmp    0x390(%rbx),%rdx
jg     24e4c <putspan+0x2ec>
mov    %rcx,%r15
mov    %rbx,%rdi
callq  86e0 <TIFFFlushData1@plt>
mov    %r15,%rcx
mov    $0x8,%eax
xor    %r8d,%r8d
mov    0x388(%rbx),%rdx
lea    0x1(%rdx),%rsi
mov    %rsi,0x388(%rbx)
sub    %r14d,%ecx
mov    %r13,%rsi
shr    %cl,%esi
or     %r12b,%sil
mov    %sil,(%rdx)
mov    0x390(%rbx),%rdx
add    $0x1,%rdx
mov    %rdx,0x390(%rbx)
mov    %rax,%r14
mov    %r8,%r12
cmp    %ecx,%r14d
jb     24e26 <putspan+0x2c6>
cmp    $0x8,%ecx
jbe    24f0b <putspan+0x3ab>
mov    $0x2b5,%edx
lea    0x30c76(%rip),%rcx        # 55b10 <module.32+0xc6>
lea    0x30a4b(%rip),%rsi        # 558ec <_fillmasks.13+0x14>
lea    0x30c51(%rip),%rdi        # 55af9 <module.32+0xaf>
callq  8490 <__assert_fail@plt>
mov    $0x2aa,%edx
lea    0x30c57(%rip),%rcx        # 55b10 <module.32+0xc6>
lea    0x30a2c(%rip),%rsi        # 558ec <_fillmasks.13+0x14>
lea    0x30c32(%rip),%rdi        # 55af9 <module.32+0xaf>
callq  8490 <__assert_fail@plt>
mov    %ecx,%edx
lea    0x30733(%rip),%rsi        # 55608 <_msbmask>
and    (%rsi,%rdx,4),%r13d
mov    %rcx,%rdx
mov    %r14,%rcx
sub    %edx,%ecx
shl    %cl,%r13d
or     %r12d,%r13d
cmp    %edx,%r14d
jne    24f75 <putspan+0x415>
mov    0x370(%rbx),%rcx
cmp    0x390(%rbx),%rcx
jle    24f3a <putspan+0x3da>
mov    %rax,%rcx
mov    %r13,%r12
mov    %r8,%r13
jmp    24f4e <putspan+0x3ee>
mov    %ecx,%esi
lea    0x306f4(%rip),%rdx        # 55608 <_msbmask>
and    (%rdx,%rsi,4),%r13d
mov    %rcx,%rdx
mov    %r14,%rcx
sub    %edx,%ecx
shl    %cl,%r13d
or     %r12d,%r13d
cmp    %edx,%r14d
je     24c6f <putspan+0x10f>
mov    %r13,%r12
mov    %rcx,%r14
jmpq   24cc0 <putspan+0x160>
mov    %r13,%r12
mov    %r8,%r13
mov    %rax,%r14
mov    %rbx,%rdi
callq  86e0 <TIFFFlushData1@plt>
mov    %r14,%rcx
mov    0x388(%rbx),%rdx
lea    0x1(%rdx),%rax
mov    %rax,0x388(%rbx)
mov    %r12b,(%rdx)
mov    0x390(%rbx),%rax
add    $0x1,%rax
mov    %rax,0x390(%rbx)
mov    -0x8(%rbp),%rax
mov    %r13d,0x48(%rax)
mov    %ecx,0x4c(%rax)
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
mov    -0x10(%rbp),%rbx
mov    -0x28(%rbp),%r14
mov    -0x30(%rbp),%r15
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)

0000000000024fa0 <Fax3PutEOL>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    0x350(%rdi),%rsi
mov    %rsi,-0x30(%rbp)
movslq 0x4c(%rsi),%r14
movslq 0x48(%rsi),%r13
xor    %eax,%eax
mov    $0x8,%edx
mov    0x20(%rsi),%ecx
and    $0x4,%ecx
test   %ecx,%ecx
jne    24ffd <Fax3PutEOL+0x5d>
mov    %rdi,%rbx
mov    0x20(%rsi),%ecx
and    $0x1,%ecx
test   %ecx,%ecx
jne    2500c <Fax3PutEOL+0x6c>
mov    $0x1,%r12d
mov    $0xc,%ecx
jmpq   25081 <Fax3PutEOL+0xe1>
cmp    $0x4,%r14d
jne    250aa <Fax3PutEOL+0x10a>
mov    %rdi,%rbx
jmp    24fe3 <Fax3PutEOL+0x43>
mov    $0xd,%ecx
mov    0x78(%rsi),%esi
test   %esi,%esi
je     250b6 <Fax3PutEOL+0x116>
mov    $0x2,%r12d
jmp    25081 <Fax3PutEOL+0xe1>
mov    0x370(%rbx),%rsi
cmp    0x390(%rbx),%rsi
jg     25049 <Fax3PutEOL+0xa9>
mov    %rcx,%r15
mov    %rbx,%rdi
callq  86e0 <TIFFFlushData1@plt>
mov    %r15,%rcx
xor    %eax,%eax
mov    $0x8,%edx
mov    0x388(%rbx),%rdi
lea    0x1(%rdi),%rsi
mov    %rsi,0x388(%rbx)
sub    %r14d,%ecx
mov    %r12,%rsi
shr    %cl,%esi
or     %r13b,%sil
mov    %sil,(%rdi)
mov    0x390(%rbx),%rsi
add    $0x1,%rsi
mov    %rsi,0x390(%rbx)
mov    %rax,%r13
mov    %rdx,%r14
cmp    %ecx,%r14d
jb     25024 <Fax3PutEOL+0x84>
cmp    $0x8,%ecx
jbe    250be <Fax3PutEOL+0x11e>
lea    0x30a67(%rip),%rdi        # 55af9 <module.32+0xaf>
mov    $0x2e7,%edx
lea    0x3084e(%rip),%rsi        # 558ec <_fillmasks.13+0x14>
lea    0x30a98(%rip),%rcx        # 55b3d <module.32+0xf3>
callq  8490 <__assert_fail@plt>
cmp    $0x3,%r14d
jle    250f9 <Fax3PutEOL+0x159>
lea    -0x4(%r14),%r12d
jmp    250fd <Fax3PutEOL+0x15d>
mov    $0x3,%r12d
jmp    25081 <Fax3PutEOL+0xe1>
lea    0x30543(%rip),%rdi        # 55608 <_msbmask>
mov    %ecx,%esi
and    (%rdi,%rsi,4),%r12d
mov    %rcx,%rsi
mov    %r14,%rcx
sub    %esi,%ecx
shl    %cl,%r12d
or     %r13d,%r12d
cmp    %esi,%r14d
jne    25140 <Fax3PutEOL+0x1a0>
mov    0x370(%rbx),%rcx
cmp    0x390(%rbx),%rcx
jle    25105 <Fax3PutEOL+0x165>
mov    %rdx,%rcx
mov    %r12,%r13
mov    %rax,%r12
jmp    25119 <Fax3PutEOL+0x179>
lea    0x4(%r14),%r12d
mov    %rdi,%rbx
jmpq   251b4 <Fax3PutEOL+0x214>
mov    %r12,%r13
mov    %rax,%r12
mov    %rdx,%r14
mov    %rbx,%rdi
callq  86e0 <TIFFFlushData1@plt>
mov    %r14,%rcx
mov    0x388(%rbx),%rdx
lea    0x1(%rdx),%rax
mov    %rax,0x388(%rbx)
mov    %r13b,(%rdx)
mov    0x390(%rbx),%rax
add    $0x1,%rax
mov    %rax,0x390(%rbx)
mov    -0x30(%rbp),%rax
mov    %r12d,0x48(%rax)
mov    %ecx,0x4c(%rax)
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
mov    0x370(%rbx),%rcx
cmp    0x390(%rbx),%rcx
jg     25184 <Fax3PutEOL+0x1e4>
mov    %rax,%r15
mov    %rbx,%rdi
callq  86e0 <TIFFFlushData1@plt>
mov    %r15,%rax
mov    $0x8,%edx
mov    0x388(%rbx),%rsi
lea    0x1(%rsi),%rcx
mov    %rcx,0x388(%rbx)
mov    %r13b,(%rsi)
sub    %r14d,%r12d
mov    0x390(%rbx),%rcx
add    $0x1,%rcx
mov    %rcx,0x390(%rbx)
mov    %rax,%r13
mov    %rdx,%r14
cmp    %r12d,%r14d
jb     25161 <Fax3PutEOL+0x1c1>
cmp    $0x8,%r12d
jbe    251de <Fax3PutEOL+0x23e>
lea    0x3096d(%rip),%rdi        # 55b33 <module.32+0xe9>
mov    $0x2de,%edx
lea    0x3071a(%rip),%rsi        # 558ec <_fillmasks.13+0x14>
lea    0x30964(%rip),%rcx        # 55b3d <module.32+0xf3>
callq  8490 <__assert_fail@plt>
cmp    %r12d,%r14d
je     251ef <Fax3PutEOL+0x24f>
sub    %r12d,%r14d
mov    -0x30(%rbp),%rsi
jmpq   24fe3 <Fax3PutEOL+0x43>
mov    0x370(%rbx),%rcx
cmp    0x390(%rbx),%rcx
jg     25213 <Fax3PutEOL+0x273>
mov    %rdx,%r12
mov    %rax,%r14
mov    %rbx,%rdi
callq  86e0 <TIFFFlushData1@plt>
mov    %r14,%rax
mov    %r12,%rdx
mov    0x388(%rbx),%rsi
lea    0x1(%rsi),%rcx
mov    %rcx,0x388(%rbx)
mov    %r13b,(%rsi)
mov    0x390(%rbx),%rcx
add    $0x1,%rcx
mov    %rcx,0x390(%rbx)
mov    -0x30(%rbp),%rsi
mov    %rax,%r13
mov    %rdx,%r14
jmpq   24fe3 <Fax3PutEOL+0x43>
nopl   0x0(%rax)

0000000000025250 <Fax3PreEncode>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    0x350(%rdi),%rcx
test   %rcx,%rcx
jne    25283 <Fax3PreEncode+0x33>
lea    0x3069e(%rip),%rdi        # 55909 <_fillmasks.13+0x31>
lea    0x3067a(%rip),%rsi        # 558ec <_fillmasks.13+0x14>
mov    $0x2f6,%edx
lea    0x308ca(%rip),%rcx        # 55b48 <module.32+0xfe>
callq  8490 <__assert_fail@plt>
movl   $0x8,0x4c(%rcx)
movl   $0x0,0x48(%rcx)
movl   $0x0,0x78(%rcx)
mov    0x80(%rcx),%rax
test   %rax,%rax
je     252ce <Fax3PreEncode+0x7e>
xor    %esi,%esi
mov    0x8(%rcx),%rdx
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rdi,%r14
mov    %rax,%rdi
mov    %rcx,%r15
callq  88e0 <_TIFFmemset@plt>
mov    %r15,%rcx
mov    %r14,%rdi
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
mov    $0x1,%eax
mov    0x20(%rcx),%edx
and    $0x1,%edx
test   %edx,%edx
jne    252f3 <Fax3PreEncode+0xa3>
movl   $0x0,0x8c(%rcx)
movl   $0x0,0x88(%rcx)
jmp    25341 <Fax3PreEncode+0xf1>
movss  0xa4(%rdi),%xmm0
movzwl 0xa8(%rdi),%edx
cmp    $0x3,%dx
jne    25314 <Fax3PreEncode+0xc4>
movss  0x30aa8(%rip),%xmm1        # 55db8 <module.80+0x12>
mulss  %xmm1,%xmm0
movss  0x30a98(%rip),%xmm1        # 55db4 <module.80+0xe>
ucomiss %xmm1,%xmm0
ja     2532b <Fax3PreEncode+0xdb>
mov    $0x2,%edx
mov    %rax,%rsi
jmp    25335 <Fax3PreEncode+0xe5>
mov    $0x4,%edx
mov    $0x3,%esi
mov    %edx,0x8c(%rcx)
mov    %esi,0x88(%rcx)
movl   $0x0,0x90(%rcx)
leaveq 
retq   
nopl   (%rax)

0000000000025350 <find0span>:
push   %rbp
mov    %rsp,%rbp
mov    %rsi,%rax
sar    $0x3,%eax
movslq %eax,%rax
add    %rax,%rdi
lea    0x302c5(%rip),%r9        # 5562c <zeroruns>
xor    %r8d,%r8d
mov    %rdx,%rax
sub    %esi,%eax
test   %eax,%eax
jg     2537a <find0span+0x2a>
cmp    $0x7f,%eax
jg     253e4 <find0span+0x94>
jmp    253cb <find0span+0x7b>
mov    %rsi,%rcx
and    $0x7,%ecx
test   %ecx,%ecx
jle    25373 <find0span+0x23>
mov    $0x8,%r8d
sub    %ecx,%r8d
movzbl (%rdi),%r10d
shl    %cl,%r10d
movzbl %r10b,%r10d
movslq %r10d,%r10
movzbl (%r10,%r9,1),%r10d
cmp    %r10d,%r8d
jl     253a8 <find0span+0x58>
mov    %r10,%r8
cmp    %r8d,%eax
jl     253b0 <find0span+0x60>
mov    %r8,%rax
add    %eax,%ecx
cmp    $0x7,%ecx
jg     25401 <find0span+0xb1>
leaveq 
retq   
movzbl (%rdi),%ecx
test   %cl,%cl
jne    25415 <find0span+0xc5>
add    $0x1,%rdi
add    $0x8,%r8d
add    $0xfffffff8,%eax
cmp    $0x7,%eax
jg     253b9 <find0span+0x69>
test   %eax,%eax
jg     2541f <find0span+0xcf>
mov    %r8,%rax
leaveq 
retq   
add    $0x1,%rdi
add    $0x8,%r8d
add    $0xfffffff8,%eax
mov    %rdi,%rcx
and    $0x7,%rcx
test   %rcx,%rcx
je     25447 <find0span+0xf7>
movzbl (%rdi),%ecx
test   %cl,%cl
je     253d9 <find0span+0x89>
movzbl (%rcx,%r9,1),%eax
add    %r8d,%eax
leaveq 
retq   
lea    (%rsi,%rax,1),%ecx
sub    %ecx,%edx
add    $0x1,%rdi
mov    %rax,%r8
mov    %rdx,%rax
jmpq   25373 <find0span+0x23>
movzbl (%rcx,%r9,1),%eax
add    %r8d,%eax
leaveq 
retq   
movzbl (%rdi),%ecx
movzbl (%rcx,%r9,1),%ecx
cmp    %ecx,%eax
jge    2542e <find0span+0xde>
mov    %rax,%rcx
lea    (%r8,%rcx,1),%eax
leaveq 
retq   
mov    (%rdi),%rcx
test   %rcx,%rcx
jne    253cb <find0span+0x7b>
add    $0x8,%rdi
add    $0x40,%r8d
add    $0xffffffc0,%eax
cmp    $0x3f,%eax
jg     25434 <find0span+0xe4>
jmpq   253cb <find0span+0x7b>
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   0x0(%rax)

0000000000025460 <find1span>:
push   %rbp
mov    %rsp,%rbp
mov    %rsi,%rax
sar    $0x3,%eax
movslq %eax,%rax
add    %rax,%rdi
lea    0x302b5(%rip),%r9        # 5572c <oneruns>
xor    %r8d,%r8d
mov    %rdx,%rax
sub    %esi,%eax
test   %eax,%eax
jg     2548a <find1span+0x2a>
cmp    $0x7f,%eax
jg     254f5 <find1span+0x95>
jmp    254dc <find1span+0x7c>
mov    %rsi,%rcx
and    $0x7,%ecx
test   %ecx,%ecx
jle    25483 <find1span+0x23>
mov    $0x8,%r8d
sub    %ecx,%r8d
movzbl (%rdi),%r10d
shl    %cl,%r10d
movzbl %r10b,%r10d
movslq %r10d,%r10
movzbl (%r10,%r9,1),%r10d
cmp    %r10d,%r8d
jl     254b8 <find1span+0x58>
mov    %r10,%r8
cmp    %r8d,%eax
jl     254c0 <find1span+0x60>
mov    %r8,%rax
add    %eax,%ecx
cmp    $0x7,%ecx
jg     25513 <find1span+0xb3>
leaveq 
retq   
movzbl (%rdi),%ecx
cmp    $0xfe,%cl
jbe    25527 <find1span+0xc7>
add    $0x1,%rdi
add    $0x8,%r8d
add    $0xfffffff8,%eax
cmp    $0x7,%eax
jg     254c9 <find1span+0x69>
test   %eax,%eax
jg     25531 <find1span+0xd1>
mov    %r8,%rax
leaveq 
retq   
add    $0x1,%rdi
add    $0x8,%r8d
add    $0xfffffff8,%eax
mov    %rdi,%rcx
and    $0x7,%rcx
test   %rcx,%rcx
je     2555a <find1span+0xfa>
movzbl (%rdi),%ecx
cmp    $0xfe,%cl
ja     254ea <find1span+0x8a>
movzbl (%rcx,%r9,1),%eax
add    %r8d,%eax
leaveq 
retq   
lea    (%rsi,%rax,1),%ecx
sub    %ecx,%edx
add    $0x1,%rdi
mov    %rax,%r8
mov    %rdx,%rax
jmpq   25483 <find1span+0x23>
movzbl (%rcx,%r9,1),%eax
add    %r8d,%eax
leaveq 
retq   
movzbl (%rdi),%ecx
movzbl (%rcx,%r9,1),%ecx
cmp    %ecx,%eax
jge    25540 <find1span+0xe0>
mov    %rax,%rcx
lea    (%r8,%rcx,1),%eax
leaveq 
retq   
mov    (%rdi),%rcx
cmp    $0xffffffffffffffff,%rcx
jne    254dc <find1span+0x7c>
add    $0x8,%rdi
add    $0x40,%r8d
add    $0xffffffc0,%eax
cmp    $0x3f,%eax
jg     25546 <find1span+0xe6>
jmpq   254dc <find1span+0x7c>
data16 nopw %cs:0x0(%rax,%rax,1)
nop

0000000000025570 <Fax3Encode1DRow>:
push   %rbp
mov    %rsp,%rbp
sub    $0x40,%rsp
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    0x350(%rdi),%rax
mov    %rax,-0x30(%rbp)
mov    0x54a2a(%rip),%r14        # 79fc8 <TIFFFaxWhiteCodes@@Base+0x24edc>
mov    %r14,-0x40(%rbp)
mov    0x54987(%rip),%rax        # 79f30 <TIFFFaxBlackCodes@@Base+0x24bb6>
mov    %rax,-0x38(%rbp)
mov    %rdi,%rbx
mov    %rsi,%r12
mov    %rdx,%r13
xor    %r15d,%r15d
jmp    255e7 <Fax3Encode1DRow+0x77>
mov    %r12,%rdi
mov    %r14,%rsi
mov    %r13,%rdx
callq  25460 <find1span>
mov    %rax,%r15
mov    %rbx,%rdi
mov    %r15,%rsi
mov    -0x38(%rbp),%rdx
callq  24b60 <putspan>
add    %r14d,%r15d
cmp    %r13d,%r15d
jae    2560e <Fax3Encode1DRow+0x9e>
mov    -0x40(%rbp),%r14
mov    %r12,%rdi
mov    %r15,%rsi
mov    %r13,%rdx
callq  25350 <find0span>
mov    %r14,%rdx
mov    %rax,%r14
mov    %rbx,%rdi
mov    %r14,%rsi
callq  24b60 <putspan>
add    %r15d,%r14d
cmp    %r14d,%r13d
ja     255bb <Fax3Encode1DRow+0x4b>
mov    $0x1,%eax
mov    -0x30(%rbp),%r12
movslq 0x4(%r12),%rcx
and    $0xc,%ecx
test   %ecx,%ecx
jg     25639 <Fax3Encode1DRow+0xc9>
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
movslq 0x4c(%r12),%rcx
cmp    $0x8,%ecx
je     2569f <Fax3Encode1DRow+0x12f>
mov    0x370(%rbx),%rcx
cmp    0x390(%rbx),%rcx
jg     25661 <Fax3Encode1DRow+0xf1>
mov    %rax,%r13
mov    %rbx,%rdi
callq  86e0 <TIFFFlushData1@plt>
mov    %r13,%rax
mov    0x388(%rbx),%rdx
lea    0x1(%rdx),%rcx
mov    %rcx,0x388(%rbx)
movzbl 0x48(%r12),%ecx
mov    %cl,(%rdx)
mov    0x390(%rbx),%rcx
add    $0x1,%rcx
mov    %rcx,0x390(%rbx)
movl   $0x0,0x48(%r12)
movl   $0x8,0x4c(%r12)
movslq 0x4(%r12),%rcx
and    $0x8,%ecx
test   %ecx,%ecx
jg     256c1 <Fax3Encode1DRow+0x151>
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
mov    0x388(%rbx),%rcx
and    $0x1,%rcx
test   %rcx,%rcx
jne    256e7 <Fax3Encode1DRow+0x177>
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
mov    0x370(%rbx),%rcx
cmp    0x390(%rbx),%rcx
jg     25705 <Fax3Encode1DRow+0x195>
mov    %rax,%r13
mov    %rbx,%rdi
callq  86e0 <TIFFFlushData1@plt>
mov    %r13,%rax
mov    0x388(%rbx),%rdx
lea    0x1(%rdx),%rcx
mov    %rcx,0x388(%rbx)
movzbl 0x48(%r12),%ecx
mov    %cl,(%rdx)
mov    0x390(%rbx),%rcx
add    $0x1,%rcx
mov    %rcx,0x390(%rbx)
movl   $0x0,0x48(%r12)
movl   $0x8,0x4c(%r12)
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
nopl   0x0(%rax)

0000000000025760 <Fax3Encode2DRow>:
push   %rbp
mov    %rsp,%rbp
sub    $0x60,%rsp
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rdx,-0x50(%rbp)
mov    %rcx,-0x58(%rbp)
mov    %rdi,-0x40(%rbp)
xor    %r13d,%r13d
movzbl (%rsi),%eax
and    $0x80,%eax
test   %eax,%eax
jle    257eb <Fax3Encode2DRow+0x8b>
mov    %rsi,%rbx
mov    %rcx,%r12
mov    %rdi,%r14
mov    %rdx,%r15
mov    %r13,%rax
movzbl (%r15),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
jle    25807 <Fax3Encode2DRow+0xa7>
mov    %r13,%r8
mov    0x5480a(%rip),%rdx        # 79fc8 <TIFFFaxWhiteCodes@@Base+0x24edc>
mov    %rdx,-0x30(%rbp)
mov    0x54767(%rip),%rcx        # 79f30 <TIFFFaxBlackCodes@@Base+0x24bb6>
mov    %rcx,-0x38(%rbp)
mov    $0x1,%esi
mov    $0x3,%ecx
lea    0x3004e(%rip),%r10        # 5582c <vcodes>
mov    $0x4,%r9d
mov    $0x7fffffff,%edi
jmp    25867 <Fax3Encode2DRow+0x107>
mov    %rsi,%rbx
mov    %rcx,%r12
mov    %rdi,%r14
mov    %rdx,%r15
mov    %rbx,%rdi
mov    %r13,%rsi
mov    %r12,%rdx
callq  25350 <find0span>
jmp    257a6 <Fax3Encode2DRow+0x46>
mov    %r13,%rsi
mov    %rax,%r13
mov    %r15,%rdi
mov    %r12,%rdx
callq  25350 <find0span>
mov    %rax,%r8
mov    %r13,%rax
xor    %r13d,%r13d
jmp    257b7 <Fax3Encode2DRow+0x57>
mov    %r15,%rdi
mov    %r14,%rsi
mov    -0x58(%rbp),%r12
mov    %r12,%rdx
callq  25460 <find1span>
mov    %rax,%rcx
mov    -0x48(%rbp),%rax
add    %r13d,%eax
lea    (%rcx,%r14,1),%r8d
mov    -0x40(%rbp),%r14
mov    $0x4,%r9d
mov    $0x1,%esi
mov    -0x30(%rbp),%rdx
mov    $0x7fffffff,%edi
lea    0x2ffca(%rip),%r10        # 5582c <vcodes>
mov    $0x3,%ecx
cmp    %r8d,%r12d
ja     25874 <Fax3Encode2DRow+0x114>
mov    %r12,%r15
jmpq   258fe <Fax3Encode2DRow+0x19e>
mov    %r8,%rcx
shr    $0x3,%ecx
mov    %ecx,%ecx
movzbl (%r15,%rcx,1),%edx
mov    %r8,%rcx
not    %ecx
and    $0x7,%ecx
shr    %cl,%edx
and    $0x1,%edx
test   %edx,%edx
jg     258b5 <Fax3Encode2DRow+0x155>
mov    %r8,%rsi
mov    %r12,%rdx
mov    %r13,-0x48(%rbp)
mov    %r15,%rdi
mov    %r8,%r15
mov    %rax,%r13
callq  25350 <find0span>
mov    %rax,%rcx
mov    %r13,%rax
mov    %r15,%r8
jmp    258d6 <Fax3Encode2DRow+0x176>
mov    %r8,%rsi
mov    %r12,%rdx
mov    %r13,-0x48(%rbp)
mov    %r15,%rdi
mov    %r8,%r15
mov    %rax,%r13
callq  25460 <find1span>
mov    %rax,%rcx
mov    %r13,%rax
mov    %r15,%r8
lea    (%r8,%rcx,1),%r15d
mov    $0x4,%r9d
mov    $0x1,%esi
mov    -0x30(%rbp),%rdx
mov    -0x48(%rbp),%r13
mov    $0x7fffffff,%edi
lea    0x2ff33(%rip),%r10        # 5582c <vcodes>
mov    $0x3,%ecx
cmp    %eax,%r15d
jae    2592e <Fax3Encode2DRow+0x1ce>
mov    %r9,%rdx
mov    %r14,%rdi
callq  249f0 <Fax3PutBits>
cmp    %r12d,%r15d
jb     2597d <Fax3Encode2DRow+0x21d>
mov    $0x1,%eax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
cmp    %eax,%r8d
jb     259bc <Fax3Encode2DRow+0x25c>
mov    %r8,%r9
sub    %eax,%r9d
cmp    $0x3,%r9d
ja     259bc <Fax3Encode2DRow+0x25c>
mov    %r9,%rdi
cmp    $0xfffffffd,%edi
jl     259dc <Fax3Encode2DRow+0x27c>
cmp    $0x3,%edi
jg     259dc <Fax3Encode2DRow+0x27c>
lea    0x3(%rdi),%ecx
movslq %ecx,%rcx
lea    (%rcx,%rcx,2),%rcx
movzwl 0x2(%r10,%rcx,2),%esi
movzwl (%r10,%rcx,2),%edx
mov    %r14,%rdi
mov    %rax,%r13
callq  249f0 <Fax3PutBits>
mov    %r13,%r15
jmp    2590e <Fax3Encode2DRow+0x1ae>
mov    %r15,%rax
shr    $0x3,%eax
mov    %eax,%r14d
movzbl (%r14,%rbx,1),%eax
mov    %r15,%rcx
not    %ecx
and    $0x7,%ecx
shr    %cl,%eax
and    $0x1,%eax
test   %eax,%eax
jg     25a2b <Fax3Encode2DRow+0x2cb>
mov    %r15,%r13
mov    %rcx,%r15
mov    %rbx,%rdi
mov    %r13,%rsi
mov    %r12,%rdx
callq  25350 <find0span>
mov    %r15,%rcx
jmpq   25a42 <Fax3Encode2DRow+0x2e2>
cmp    %eax,%r8d
jae    25946 <Fax3Encode2DRow+0x1e6>
neg    %r8d
add    %eax,%r8d
cmp    $0x3,%r8d
ja     25946 <Fax3Encode2DRow+0x1e6>
neg    %r8d
mov    %r8,%rdi
jmpq   25946 <Fax3Encode2DRow+0x1e6>
cmp    %eax,%r12d
jbe    25ad2 <Fax3Encode2DRow+0x372>
mov    %rax,%rcx
shr    $0x3,%ecx
mov    %ecx,%ecx
movzbl (%rbx,%rcx,1),%esi
mov    %rax,%rcx
not    %ecx
and    $0x7,%ecx
shr    %cl,%esi
and    $0x1,%esi
test   %esi,%esi
jg     25aa4 <Fax3Encode2DRow+0x344>
mov    %rax,%r15
mov    %r12,%rax
mov    %rdx,%r12
mov    %rax,%rdx
mov    %rbx,%rdi
mov    %r15,%rsi
callq  25350 <find0span>
mov    %rax,%rcx
mov    %r15,%rax
mov    %r12,%rdx
jmpq   25ac4 <Fax3Encode2DRow+0x364>
mov    %r15,%r13
mov    %rcx,%r15
mov    %rbx,%rdi
mov    %r13,%rsi
mov    %r12,%rdx
callq  25460 <find1span>
mov    %r15,%rcx
mov    %rax,-0x48(%rbp)
movzbl (%r14,%rbx,1),%eax
shr    %cl,%eax
and    $0x1,%eax
test   %eax,%eax
jg     25b3f <Fax3Encode2DRow+0x3df>
mov    %r12,%rdx
mov    %rcx,%r12
mov    -0x50(%rbp),%r15
mov    %r15,%rdi
mov    %r13,%rsi
callq  25460 <find1span>
mov    %r12,%rcx
lea    0x0(%r13,%rax,1),%edx
movzbl (%r14,%rbx,1),%eax
mov    %rdx,%r14
shr    %cl,%eax
and    $0x1,%eax
test   %eax,%eax
jg     25823 <Fax3Encode2DRow+0xc3>
mov    %r15,%rdi
mov    %r14,%rsi
mov    -0x58(%rbp),%r12
mov    %r12,%rdx
callq  25350 <find0span>
mov    %rax,%rcx
jmpq   25838 <Fax3Encode2DRow+0xd8>
mov    %rax,%r15
mov    %r12,%rax
mov    %rdx,%r12
mov    %rax,%rdx
mov    %rbx,%rdi
mov    %r15,%rsi
callq  25460 <find1span>
mov    %rax,%rcx
mov    %r15,%rax
mov    %r12,%rdx
lea    (%rax,%rcx,1),%r12d
mov    $0x1,%esi
mov    $0x3,%ecx
mov    %r12,-0x48(%rbp)
mov    %rdx,%r12
mov    %rcx,%rdx
mov    %rax,%r15
mov    %r14,%rdi
callq  249f0 <Fax3PutBits>
lea    (%r15,%r13,1),%eax
test   %eax,%eax
je     25b5c <Fax3Encode2DRow+0x3fc>
mov    %r13,%rax
shr    $0x3,%eax
mov    %eax,%eax
movzbl (%rbx,%rax,1),%eax
mov    %r13,%rcx
not    %ecx
and    $0x7,%ecx
shr    %cl,%eax
and    $0x1,%eax
test   %eax,%eax
je     25b5c <Fax3Encode2DRow+0x3fc>
mov    %r15,%rsi
sub    %r13d,%esi
mov    %r15,%r13
mov    %r14,%rdi
mov    -0x38(%rbp),%rdx
callq  24b60 <putspan>
mov    -0x48(%rbp),%r15
mov    %r15,%rsi
sub    %r13d,%esi
mov    %r12,%rdx
mov    %r14,%rdi
callq  24b60 <putspan>
mov    -0x58(%rbp),%r12
jmpq   2590e <Fax3Encode2DRow+0x1ae>
mov    %r12,%rdx
mov    %rcx,%r12
mov    -0x50(%rbp),%r15
mov    %r15,%rdi
mov    %r13,%rsi
callq  25350 <find0span>
mov    %r12,%rcx
jmpq   25a70 <Fax3Encode2DRow+0x310>
mov    %r15,%rsi
sub    %r13d,%esi
mov    %r12,%rdx
mov    %r15,%r12
mov    %r14,%rdi
callq  24b60 <putspan>
mov    -0x48(%rbp),%r15
mov    %r15,%rsi
sub    %r12d,%esi
mov    %r14,%rdi
mov    -0x38(%rbp),%rdx
callq  24b60 <putspan>
mov    -0x58(%rbp),%r12
jmpq   2590e <Fax3Encode2DRow+0x1ae>
nop

0000000000025b90 <Fax3Encode>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    %rdx,%rax
mov    %r12,%r8
mov    %r13,%r9
mov    %r14,%r10
mov    %rdi,%r14
mov    %r15,%r11
mov    %rsi,%r15
xor    %r12d,%r12d
mov    0x350(%r14),%r13
mov    0x8(%r13),%rcx
cqto   
mov    %rbx,%rdi
mov    %rax,%rbx
idiv   %rcx
test   %rdx,%rdx
jne    25be1 <Fax3Encode+0x51>
mov    %rdi,-0x8(%rbp)
mov    %r8,-0x10(%rbp)
mov    %r9,-0x18(%rbp)
mov    %r10,-0x20(%rbp)
mov    %r11,-0x28(%rbp)
jmp    25c4e <Fax3Encode+0xbe>
xor    %eax,%eax
mov    0x3b8(%r14),%rcx
mov    %rdi,%rbx
mov    %rcx,%rdi
mov    %r8,%r12
mov    %r9,%r13
mov    %r10,%r14
mov    %r11,%r15
lea    0x2ff53(%rip),%rsi        # 55b56 <module.44>
lea    0x2ff57(%rip),%rdx        # 55b61 <module.44+0xb>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
movslq 0x4(%r13),%rax
and    $0x2,%eax
test   %eax,%eax
jne    25c26 <Fax3Encode+0x96>
mov    %r14,%rdi
callq  24fa0 <Fax3PutEOL>
mov    0x20(%r13),%eax
and    $0x1,%eax
test   %eax,%eax
jne    25c6e <Fax3Encode+0xde>
mov    0x10(%r13),%edx
mov    %r14,%rdi
mov    %r15,%rsi
callq  25570 <Fax3Encode1DRow>
test   %eax,%eax
je     25ca3 <Fax3Encode+0x113>
mov    0x8(%r13),%rax
sub    %rax,%rbx
add    %rax,%r15
test   %rbx,%rbx
jg     25c13 <Fax3Encode+0x83>
mov    $0x1,%eax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
mov    0x78(%r13),%eax
test   %eax,%eax
je     25cbc <Fax3Encode+0x12c>
mov    0x80(%r13),%rdx
mov    0x10(%r13),%ecx
mov    %r14,%rdi
mov    %r15,%rsi
callq  25760 <Fax3Encode2DRow>
test   %eax,%eax
je     25cfa <Fax3Encode+0x16a>
movslq 0x88(%r13),%rax
add    $0xffffffff,%eax
mov    %eax,0x88(%r13)
jmp    25cd7 <Fax3Encode+0x147>
mov    %r12,%rax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
mov    0x10(%r13),%edx
mov    %r14,%rdi
mov    %r15,%rsi
callq  25570 <Fax3Encode1DRow>
test   %eax,%eax
je     25d13 <Fax3Encode+0x183>
movl   $0x1,0x78(%r13)
movslq 0x88(%r13),%rax
test   %eax,%eax
je     25d2c <Fax3Encode+0x19c>
mov    0x80(%r13),%rdi
mov    0x8(%r13),%rdx
mov    %r15,%rsi
callq  8790 <_TIFFmemcpy@plt>
jmpq   25c44 <Fax3Encode+0xb4>
mov    %r12,%rax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
mov    %r12,%rax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
movl   $0x0,0x78(%r13)
movslq 0x8c(%r13),%rax
add    $0xffffffff,%eax
mov    %eax,0x88(%r13)
jmpq   25c44 <Fax3Encode+0xb4>
nopw   0x0(%rax,%rax,1)

0000000000025d50 <Fax3PostEncode>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    $0x1,%eax
mov    0x350(%rdi),%rcx
movslq 0x4c(%rcx),%rdx
cmp    $0x8,%edx
jne    25d6f <Fax3PostEncode+0x1f>
leaveq 
retq   
mov    0x370(%rdi),%rdx
cmp    0x390(%rdi),%rdx
jg     25dab <Fax3PostEncode+0x5b>
mov    %rdi,%rax
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rdi,%r14
mov    %rax,%rdi
mov    %rcx,%r15
callq  86e0 <TIFFFlushData1@plt>
mov    %r15,%rcx
mov    %r14,%rdi
mov    $0x1,%eax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
mov    0x388(%rdi),%rsi
lea    0x1(%rsi),%rdx
mov    %rdx,0x388(%rdi)
movzbl 0x48(%rcx),%edx
mov    %dl,(%rsi)
mov    0x390(%rdi),%rdx
add    $0x1,%rdx
mov    %rdx,0x390(%rdi)
movl   $0x0,0x48(%rcx)
movl   $0x8,0x4c(%rcx)
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)

0000000000025df0 <Fax3Close>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    0x350(%rdi),%rcx
movslq 0x4(%rcx),%rax
and    $0x1,%eax
test   %eax,%eax
je     25e0c <Fax3Close+0x1c>
leaveq 
retq   
mov    0x388(%rdi),%rax
test   %rax,%rax
jne    25e1a <Fax3Close+0x2a>
leaveq 
retq   
xor    %edx,%edx
mov    0x20(%rcx),%eax
and    $0x1,%eax
test   %eax,%eax
jne    25e55 <Fax3Close+0x65>
mov    $0x1,%eax
mov    $0xc,%esi
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rdi,%rbx
mov    %rcx,%r12
mov    %rdx,%r13
mov    %rax,%r14
mov    %rsi,%r15
jmp    25ea1 <Fax3Close+0xb1>
mov    $0xd,%esi
mov    0x78(%rcx),%eax
test   %eax,%eax
je     25f13 <Fax3Close+0x123>
mov    $0x2,%eax
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rdi,%rbx
mov    %rcx,%r12
mov    %rdx,%r13
mov    %rax,%r14
mov    %rsi,%r15
jmp    25ea1 <Fax3Close+0xb1>
mov    %rbx,%rdi
mov    %r14,%rsi
mov    %r15,%rdx
callq  249f0 <Fax3PutBits>
add    $0x1,%r13d
cmp    $0x5,%r13d
jle    25e8f <Fax3Close+0x9f>
mov    0x370(%rbx),%rax
cmp    0x390(%rbx),%rax
jg     25ebf <Fax3Close+0xcf>
mov    %rbx,%rdi
callq  86e0 <TIFFFlushData1@plt>
mov    0x388(%rbx),%rcx
lea    0x1(%rcx),%rax
mov    %rax,0x388(%rbx)
movzbl 0x48(%r12),%eax
mov    %al,(%rcx)
mov    0x390(%rbx),%rax
add    $0x1,%rax
mov    %rax,0x390(%rbx)
movl   $0x0,0x48(%r12)
movl   $0x8,0x4c(%r12)
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
mov    $0x3,%eax
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rdi,%rbx
mov    %rcx,%r12
mov    %rdx,%r13
mov    %rax,%r14
mov    %rsi,%r15
jmpq   25ea1 <Fax3Close+0xb1>

0000000000025f40 <Fax3Cleanup>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x10(%rbp)
mov    0x350(%rdi),%rax
test   %rax,%rax
jne    25f77 <Fax3Cleanup+0x37>
lea    0x2fc29(%rip),%rdi        # 55b88 <module.44+0x32>
lea    0x2f986(%rip),%rsi        # 558ec <_fillmasks.13+0x14>
mov    $0x485,%edx
lea    0x2fc1e(%rip),%rcx        # 55b90 <module.44+0x3a>
callq  8490 <__assert_fail@plt>
mov    0x28(%rax),%rcx
mov    %rcx,0x410(%rdi)
mov    0x30(%rax),%rcx
mov    %rcx,0x408(%rdi)
mov    0x38(%rax),%rcx
mov    %rcx,0x418(%rdi)
mov    0x60(%rax),%rcx
test   %rcx,%rcx
jne    25fa6 <Fax3Cleanup+0x66>
mov    %rdi,%r15
jmp    25fbf <Fax3Cleanup+0x7f>
mov    %r14,-0x8(%rbp)
mov    %rax,%r14
mov    %rdi,%r15
mov    %rcx,%rdi
callq  8bb0 <_TIFFfree@plt>
mov    %r14,%rax
mov    -0x8(%rbp),%r14
mov    0x80(%rax),%rdi
test   %rdi,%rdi
je     25fd0 <Fax3Cleanup+0x90>
callq  8bb0 <_TIFFfree@plt>
mov    0x350(%r15),%rdi
callq  8bb0 <_TIFFfree@plt>
mov    %r15,%rdi
movq   $0x0,0x350(%rdi)
callq  8740 <_TIFFSetDefaultCompressionState@plt>
mov    -0x10(%rbp),%r15
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)

0000000000026000 <Fax3VSetField>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
lea    0x2f8dd(%rip),%rax        # 558ec <_fillmasks.13+0x14>
lea    0x2fbe6(%rip),%rcx        # 55bfc <module.44+0xa6>
mov    0x350(%rdi),%r9
test   %r9,%r9
jne    26036 <Fax3VSetField+0x36>
mov    %rax,%rsi
lea    0x2fb5c(%rip),%rdi        # 55b88 <module.44+0x32>
mov    $0x4af,%edx
callq  8490 <__assert_fail@plt>
mov    0x30(%r9),%r8
test   %r8,%r8
jne    26053 <Fax3VSetField+0x53>
mov    %rax,%rsi
lea    0x2fbc1(%rip),%rdi        # 55c0a <module.44+0xb4>
mov    $0x4b0,%edx
callq  8490 <__assert_fail@plt>
mov    $0x1,%eax
cmp    $0x146,%esi
jbe    26094 <Fax3VSetField+0x94>
cmp    $0xffff,%esi
jbe    260d7 <Fax3VSetField+0xd7>
cmp    $0x10000,%esi
jne    26103 <Fax3VSetField+0x103>
movslq (%rdx),%rsi
cmp    $0x2f,%esi
jle    2612b <Fax3VSetField+0x12b>
mov    0x8(%rdx),%rsi
lea    0x8(%rsi),%rcx
mov    %rcx,0x8(%rdx)
movslq (%rsi),%rcx
jmpq   26138 <Fax3VSetField+0x138>
cmp    $0x124,%esi
jbe    2613e <Fax3VSetField+0x13e>
cmp    $0x125,%esi
je     2614f <Fax3VSetField+0x14f>
cmp    $0x146,%esi
jne    2614a <Fax3VSetField+0x14a>
movslq (%rdx),%rcx
cmp    $0x2f,%ecx
jle    26178 <Fax3VSetField+0x178>
mov    0x8(%rdx),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rdx)
mov    (%rcx),%eax
jmpq   26184 <Fax3VSetField+0x184>
cmp    $0x147,%esi
jne    2618a <Fax3VSetField+0x18a>
movslq (%rdx),%rcx
cmp    $0x2f,%ecx
jle    261ae <Fax3VSetField+0x1ae>
mov    0x8(%rdx),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rdx)
movslq (%rcx),%rax
jmpq   261bb <Fax3VSetField+0x1bb>
cmp    $0x10004,%esi
jne    2614a <Fax3VSetField+0x14a>
movslq (%rdx),%rsi
cmp    $0x2f,%esi
jle    261d8 <Fax3VSetField+0x1d8>
mov    0x8(%rdx),%rsi
lea    0x8(%rsi),%rcx
mov    %rcx,0x8(%rdx)
mov    (%rsi),%rcx
jmpq   261e5 <Fax3VSetField+0x1e5>
mov    0x10(%rdx),%rcx
movslq (%rcx,%rsi,1),%rcx
add    $0x8,%esi
mov    %esi,(%rdx)
mov    %ecx,0x4(%r9)
leaveq 
retq   
cmp    $0x124,%esi
je     261eb <Fax3VSetField+0x1eb>
callq  *%r8
leaveq 
retq   
movzwl 0x78(%rdi),%eax
cmp    $0x4,%ax
jne    261c0 <Fax3VSetField+0x1c0>
movslq (%rdx),%rcx
cmp    $0x2f,%ecx
jle    2620d <Fax3VSetField+0x20d>
mov    0x8(%rdx),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rdx)
mov    (%rcx),%eax
jmpq   26219 <Fax3VSetField+0x219>
mov    0x10(%rdx),%rax
mov    (%rax,%rcx,1),%eax
add    $0x8,%ecx
mov    %ecx,(%rdx)
mov    %eax,0x1c(%r9)
jmp    261c0 <Fax3VSetField+0x1c0>
cmp    $0x148,%esi
jne    2614a <Fax3VSetField+0x14a>
movslq (%rdx),%rcx
cmp    $0x2f,%ecx
jle    2621f <Fax3VSetField+0x21f>
mov    0x8(%rdx),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rdx)
mov    (%rcx),%eax
jmp    2622b <Fax3VSetField+0x22b>
mov    0x10(%rdx),%rax
movslq (%rax,%rcx,1),%rax
add    $0x8,%ecx
mov    %ecx,(%rdx)
mov    %ax,0x14(%r9)
mov    %rdi,%rax
mov    %rdi,-0x8(%rbp)
mov    %rax,%rdi
callq  8ae0 <TIFFFieldWithTag@plt>
test   %rax,%rax
jne    26231 <Fax3VSetField+0x231>
xor    %eax,%eax
leaveq 
retq   
mov    0x10(%rdx),%rcx
mov    (%rcx,%rsi,1),%rcx
add    $0x8,%esi
mov    %esi,(%rdx)
mov    %rcx,0x58(%r9)
leaveq 
retq   
movzwl 0x78(%rdi),%eax
cmp    $0x3,%ax
jne    261c0 <Fax3VSetField+0x1c0>
movslq (%rdx),%rcx
cmp    $0x2f,%ecx
jle    26265 <Fax3VSetField+0x265>
mov    0x8(%rdx),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rdx)
mov    (%rcx),%eax
jmp    26271 <Fax3VSetField+0x271>
mov    0x10(%rdx),%rax
mov    (%rax,%rcx,1),%eax
add    $0x8,%ecx
mov    %ecx,(%rdx)
mov    %eax,0x20(%r9)
jmp    261c0 <Fax3VSetField+0x1c0>
mov    0x10(%rdx),%rax
mov    (%rax,%rcx,1),%eax
add    $0x8,%ecx
mov    %ecx,(%rdx)
mov    %eax,0x18(%r9)
jmp    261c0 <Fax3VSetField+0x1c0>
movzwl 0x18(%rax),%edx
mov    %rdx,%rcx
and    $0x1f,%ecx
mov    $0x1,%eax
mov    %rax,%rsi
shl    %cl,%rsi
shr    $0x5,%edx
movslq %edx,%rcx
mov    -0x8(%rbp),%rdx
or     0x38(%rdx,%rcx,8),%rsi
mov    %rsi,0x38(%rdx,%rcx,8)
mov    0x10(%rdx),%ecx
or     $0x8,%ecx
mov    %ecx,0x10(%rdx)
leaveq 
retq   
mov    0x10(%rdx),%rax
mov    (%rax,%rcx,1),%eax
add    $0x8,%ecx
mov    %ecx,(%rdx)
mov    %eax,0x20(%r9)
jmpq   261c0 <Fax3VSetField+0x1c0>
nopw   0x0(%rax,%rax,1)

0000000000026280 <Fax3VGetField>:
push   %rbp
mov    %rsp,%rbp
mov    0x350(%rdi),%rcx
test   %rcx,%rcx
jne    262af <Fax3VGetField+0x2f>
lea    0x2f8f1(%rip),%rdi        # 55b88 <module.44+0x32>
lea    0x2f64e(%rip),%rsi        # 558ec <_fillmasks.13+0x14>
mov    $0x4de,%edx
lea    0x2f974(%rip),%rcx        # 55c1e <module.44+0xc8>
callq  8490 <__assert_fail@plt>
mov    $0x1,%eax
cmp    $0x146,%esi
jbe    262f0 <Fax3VGetField+0x70>
cmp    $0xffff,%esi
jbe    26328 <Fax3VGetField+0xa8>
cmp    $0x10000,%esi
jne    26354 <Fax3VGetField+0xd4>
movslq (%rdx),%rdi
cmp    $0x2f,%edi
jle    2637c <Fax3VGetField+0xfc>
mov    0x8(%rdx),%rdi
lea    0x8(%rdi),%rsi
mov    %rsi,0x8(%rdx)
mov    (%rdi),%rsi
jmpq   26389 <Fax3VGetField+0x109>
cmp    $0x124,%esi
jbe    26391 <Fax3VGetField+0x111>
cmp    $0x125,%esi
jne    263a2 <Fax3VGetField+0x122>
movslq (%rdx),%rdi
cmp    $0x2f,%edi
jle    263c3 <Fax3VGetField+0x143>
mov    0x8(%rdx),%rdi
lea    0x8(%rdi),%rsi
mov    %rsi,0x8(%rdx)
mov    (%rdi),%rsi
jmpq   263d0 <Fax3VGetField+0x150>
cmp    $0x147,%esi
jne    263d7 <Fax3VGetField+0x157>
movslq (%rdx),%rdi
cmp    $0x2f,%edi
jle    263f8 <Fax3VGetField+0x178>
mov    0x8(%rdx),%rdi
lea    0x8(%rdi),%rsi
mov    %rsi,0x8(%rdx)
mov    (%rdi),%rsi
jmpq   26405 <Fax3VGetField+0x185>
cmp    $0x10004,%esi
jne    2639d <Fax3VGetField+0x11d>
movslq (%rdx),%rsi
cmp    $0x2f,%esi
jle    2640e <Fax3VGetField+0x18e>
mov    0x8(%rdx),%rsi
lea    0x8(%rsi),%rcx
mov    %rcx,0x8(%rdx)
mov    (%rsi),%rcx
jmpq   2641b <Fax3VGetField+0x19b>
mov    0x10(%rdx),%rsi
mov    (%rsi,%rdi,1),%rsi
add    $0x8,%edi
mov    %edi,(%rdx)
movslq 0x4(%rcx),%rcx
mov    %ecx,(%rsi)
leaveq 
retq   
cmp    $0x124,%esi
je     26308 <Fax3VGetField+0x88>
callq  *0x28(%rcx)
leaveq 
retq   
cmp    $0x146,%esi
jne    2639d <Fax3VGetField+0x11d>
movslq (%rdx),%rdi
cmp    $0x2f,%edi
jle    2642b <Fax3VGetField+0x1ab>
mov    0x8(%rdx),%rdi
lea    0x8(%rdi),%rsi
mov    %rsi,0x8(%rdx)
mov    (%rdi),%rsi
jmp    26438 <Fax3VGetField+0x1b8>
mov    0x10(%rdx),%rsi
mov    (%rsi,%rdi,1),%rsi
add    $0x8,%edi
mov    %edi,(%rdx)
mov    0x20(%rcx),%ecx
mov    %ecx,(%rsi)
leaveq 
retq   
cmp    $0x148,%esi
jne    2639d <Fax3VGetField+0x11d>
movslq (%rdx),%rdi
cmp    $0x2f,%edi
jle    2643f <Fax3VGetField+0x1bf>
mov    0x8(%rdx),%rsi
lea    0x8(%rsi),%rdi
mov    %rdi,0x8(%rdx)
mov    (%rsi),%rsi
jmp    2644c <Fax3VGetField+0x1cc>
mov    0x10(%rdx),%rsi
mov    (%rsi,%rdi,1),%rsi
add    $0x8,%edi
mov    %edi,(%rdx)
movzwl 0x14(%rcx),%ecx
mov    %cx,(%rsi)
leaveq 
retq   
mov    0x10(%rdx),%rcx
mov    (%rcx,%rsi,1),%rcx
add    $0x8,%esi
mov    %esi,(%rdx)
mov    0x350(%rdi),%rdx
mov    0x58(%rdx),%rdx
mov    %rdx,(%rcx)
leaveq 
retq   
mov    0x10(%rdx),%rsi
mov    (%rsi,%rdi,1),%rsi
add    $0x8,%edi
mov    %edi,(%rdx)
mov    0x1c(%rcx),%ecx
mov    %ecx,(%rsi)
leaveq 
retq   
mov    0x10(%rdx),%rsi
mov    (%rsi,%rdi,1),%rsi
add    $0x8,%edi
mov    %edi,(%rdx)
mov    0x18(%rcx),%ecx
mov    %ecx,(%rsi)
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

0000000000026460 <Fax3PrintDir>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    %r15,-0x20(%rbp)
mov    %rdx,-0x8(%rbp)
mov    0x350(%rdi),%rcx
test   %rcx,%rcx
jne    2649b <Fax3PrintDir+0x3b>
lea    0x2f705(%rip),%rdi        # 55b88 <module.44+0x32>
lea    0x2f462(%rip),%rsi        # 558ec <_fillmasks.13+0x14>
mov    $0x4ff,%edx
lea    0x2f796(%rip),%rcx        # 55c2c <module.44+0xd6>
callq  8490 <__assert_fail@plt>
mov    0x48(%rdi),%rax
and    $0x200,%rax
test   %rax,%rax
jne    264c1 <Fax3PrintDir+0x61>
mov    %r15,%rax
mov    %rcx,%r15
mov    %r14,%rcx
mov    %rdi,%r14
mov    %r13,%r8
mov    %rsi,%r13
jmpq   265bf <Fax3PrintDir+0x15f>
lea    0x2f771(%rip),%rax        # 55c39 <module.44+0xe3>
mov    %rax,-0x30(%rbp)
movzwl 0x78(%rdi),%eax
cmp    $0x4,%ax
je     2654c <Fax3PrintDir+0xec>
xor    %eax,%eax
lea    0x2f783(%rip),%r8        # 55c62 <module.44+0x10c>
mov    %rsi,%rdx
mov    %r13,-0x10(%rbp)
mov    %r14,-0x18(%rbp)
mov    %rsi,%r13
mov    %r8,%rsi
mov    %rdi,%r14
mov    %rdx,%rdi
mov    %rcx,%r15
callq  86f0 <fprintf@plt>
lea    0x2f77f(%rip),%rax        # 55c84 <module.44+0x12e>
mov    %rax,-0x28(%rbp)
mov    0x20(%r15),%eax
and    $0x1,%eax
test   %eax,%eax
je     26532 <Fax3PrintDir+0xd2>
xor    %eax,%eax
lea    0x2f758(%rip),%rsi        # 55c75 <module.44+0x11f>
mov    %r13,%rdi
lea    0x2f712(%rip),%rdx        # 55c39 <module.44+0xe3>
callq  86f0 <fprintf@plt>
pushq  -0x28(%rbp)
popq   -0x30(%rbp)
mov    0x20(%r15),%eax
and    $0x4,%eax
test   %eax,%eax
jne    26616 <Fax3PrintDir+0x1b6>
pushq  -0x30(%rbp)
popq   -0x28(%rbp)
jmpq   2662b <Fax3PrintDir+0x1cb>
xor    %eax,%eax
lea    0x2f6e6(%rip),%r8        # 55c3b <module.44+0xe5>
mov    %rsi,%rdx
mov    %r13,-0x10(%rbp)
mov    %r14,-0x18(%rbp)
mov    %rsi,%r13
mov    %r8,%rsi
mov    %rdi,%r14
mov    %rdx,%rdi
mov    %rcx,%r15
callq  86f0 <fprintf@plt>
mov    0x20(%r15),%eax
and    $0x2,%eax
test   %eax,%eax
je     26597 <Fax3PrintDir+0x137>
xor    %eax,%eax
mov    %r13,%rdi
lea    0x2f6c3(%rip),%rsi        # 55c4e <module.44+0xf8>
lea    0x2f6a7(%rip),%rdx        # 55c39 <module.44+0xe3>
callq  86f0 <fprintf@plt>
xor    %eax,%eax
lea    0x2f6f4(%rip),%rsi        # 55c94 <module.44+0x13e>
mov    0x20(%r15),%edx
mov    %rdx,%rcx
mov    %r13,%rdi
callq  86f0 <fprintf@plt>
mov    -0x8(%rbp),%rdx
mov    -0x20(%rbp),%rax
mov    -0x18(%rbp),%rcx
mov    -0x10(%rbp),%r8
mov    0x48(%r14),%rsi
and    $0x8,%rsi
test   %rsi,%rsi
je     26693 <Fax3PrintDir+0x233>
xor    %eax,%eax
lea    0x2f6cb(%rip),%rsi        # 55ca4 <module.44+0x14e>
mov    %r13,%rdi
mov    %r8,-0x28(%rbp)
mov    %rcx,-0x30(%rbp)
callq  86f0 <fprintf@plt>
movzwl 0x14(%r15),%eax
test   %ax,%ax
je     26654 <Fax3PrintDir+0x1f4>
cmp    $0x1,%ax
je     26727 <Fax3PrintDir+0x2c7>
cmp    $0x2,%ax
jne    2666a <Fax3PrintDir+0x20a>
xor    %eax,%eax
lea    0x2f6c1(%rip),%rsi        # 55ccd <module.44+0x177>
mov    %r13,%rdi
callq  86f0 <fprintf@plt>
jmp    2666a <Fax3PrintDir+0x20a>
xor    %eax,%eax
lea    0x2f667(%rip),%rsi        # 55c86 <module.44+0x130>
mov    %r13,%rdi
mov    -0x30(%rbp),%rdx
callq  86f0 <fprintf@plt>
mov    0x20(%r15),%eax
and    $0x2,%eax
test   %eax,%eax
je     26597 <Fax3PrintDir+0x137>
xor    %eax,%eax
mov    %r13,%rdi
mov    -0x28(%rbp),%rdx
lea    0x2f604(%rip),%rsi        # 55c4e <module.44+0xf8>
callq  86f0 <fprintf@plt>
jmpq   26597 <Fax3PrintDir+0x137>
test   %ax,%ax
jne    2666a <Fax3PrintDir+0x20a>
xor    %eax,%eax
lea    0x2f64e(%rip),%rsi        # 55cb0 <module.44+0x15a>
mov    %r13,%rdi
callq  86f0 <fprintf@plt>
xor    %eax,%eax
lea    0x2f66e(%rip),%rsi        # 55ce1 <module.44+0x18b>
movzwl 0x14(%r15),%edx
mov    %rdx,%rcx
mov    %r13,%rdi
callq  86f0 <fprintf@plt>
mov    -0x8(%rbp),%rdx
mov    -0x20(%rbp),%rax
mov    -0x30(%rbp),%rcx
mov    -0x28(%rbp),%r8
mov    0x48(%r14),%rsi
and    $0x4,%rsi
test   %rsi,%rsi
je     266cd <Fax3PrintDir+0x26d>
xor    %eax,%eax
lea    0x2f646(%rip),%rsi        # 55cef <module.44+0x199>
mov    0x1c(%r15),%edx
mov    %r13,%rdi
mov    %r8,-0x18(%rbp)
mov    %rcx,-0x30(%rbp)
callq  86f0 <fprintf@plt>
mov    -0x8(%rbp),%rdx
mov    -0x20(%rbp),%rax
mov    -0x30(%rbp),%rcx
mov    -0x18(%rbp),%r8
mov    0x48(%r14),%rsi
and    $0x10,%rsi
test   %rsi,%rsi
je     26713 <Fax3PrintDir+0x2b3>
xor    %eax,%eax
lea    0x2f622(%rip),%rsi        # 55d05 <module.44+0x1af>
mov    0x18(%r15),%edx
mov    %r13,%rdi
mov    %r14,-0x10(%rbp)
mov    %r13,-0x30(%rbp)
mov    %r8,%r13
mov    %rcx,%r14
callq  86f0 <fprintf@plt>
mov    %r14,%rcx
mov    %r13,%r8
mov    -0x30(%rbp),%r13
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%rdx
mov    -0x20(%rbp),%rax
mov    0x38(%r15),%r9
test   %r9,%r9
jne    2673d <Fax3PrintDir+0x2dd>
mov    %r8,%r13
mov    %rcx,%r14
mov    %rax,%r15
leaveq 
retq   
xor    %eax,%eax
lea    0x2f587(%rip),%rsi        # 55cb7 <module.44+0x161>
mov    %r13,%rdi
callq  86f0 <fprintf@plt>
jmpq   2666a <Fax3PrintDir+0x20a>
mov    %r13,%rsi
mov    %r8,%r13
mov    %r14,%rdi
mov    %rcx,%r14
mov    %rax,%r15
callq  *%r9
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   0x0(%rax)

0000000000026760 <InitCCITTFax3>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x8(%rbp)
lea    0x53025(%rip),%rsi        # 79798 <faxFields>
mov    $0x5,%edx
mov    %rdi,%r15
callq  8520 <_TIFFMergeFields@plt>
test   %eax,%eax
jne    267a8 <InitCCITTFax3+0x48>
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
lea    0x2f5a1(%rip),%rsi        # 55d35 <module.74+0xe>
lea    0x2f5a8(%rip),%rdx        # 55d43 <module.74+0x1c>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
mov    $0x98,%edi
callq  8440 <_TIFFmalloc@plt>
mov    %rax,0x350(%r15)
test   %rax,%rax
je     26927 <InitCCITTFax3+0x1c7>
mov    %rax,%rdi
mov    $0x98,%edx
xor    %esi,%esi
callq  88e0 <_TIFFmemset@plt>
mov    0x350(%r15),%rcx
movslq 0xc(%r15),%rax
mov    %eax,(%rcx)
mov    0x410(%r15),%rax
mov    %rax,0x28(%rcx)
lea    -0x570(%rip),%rax        # 26280 <Fax3VGetField>
mov    %rax,0x410(%r15)
mov    0x408(%r15),%rax
mov    %rax,0x30(%rcx)
lea    -0x809(%rip),%rax        # 26000 <Fax3VSetField>
mov    %rax,0x408(%r15)
mov    0x418(%r15),%rax
mov    %rax,0x38(%rcx)
lea    -0x3c2(%rip),%rax        # 26460 <Fax3PrintDir>
mov    %rax,0x418(%r15)
movl   $0x0,0x20(%rcx)
movslq (%rcx),%rax
test   %eax,%eax
jne    26844 <InitCCITTFax3+0xe4>
mov    0x10(%r15),%eax
or     $0x100,%eax
mov    %eax,0x10(%r15)
mov    0x350(%r15),%rax
movq   $0x0,0x60(%rax)
xor    %eax,%eax
mov    $0x10004,%esi
mov    0x5377f(%rip),%rdx        # 79fe0 <_TIFFFax3fillruns@@Base+0x580a0>
mov    %r15,%rdi
callq  8290 <TIFFSetField@plt>
mov    0x350(%r15),%rax
movq   $0x0,0x80(%rax)
lea    -0x2122(%rip),%rax        # 24760 <Fax3FixupTags>
mov    %rax,0x2c0(%r15)
lea    -0x2120(%rip),%rcx        # 24770 <Fax3SetupState>
mov    %rcx,0x2c8(%r15)
lea    -0x457e(%rip),%rax        # 22320 <Fax3PreDecode>
mov    %rax,0x2d0(%r15)
lea    -0x430c(%rip),%rax        # 225a0 <Fax3Decode1D>
mov    %rax,0x2f8(%r15)
mov    %rax,0x308(%r15)
mov    %rax,0x318(%r15)
mov    %rcx,0x2d8(%r15)
lea    -0x167f(%rip),%rax        # 25250 <Fax3PreEncode>
mov    %rax,0x2e8(%r15)
lea    -0xb8d(%rip),%rax        # 25d50 <Fax3PostEncode>
mov    %rax,0x2f0(%r15)
lea    -0xd5b(%rip),%rax        # 25b90 <Fax3Encode>
mov    %rax,0x300(%r15)
mov    %rax,0x310(%r15)
mov    %rax,0x320(%r15)
lea    -0xb17(%rip),%rax        # 25df0 <Fax3Close>
mov    %rax,0x328(%r15)
lea    -0x9d5(%rip),%rax        # 25f40 <Fax3Cleanup>
mov    %rax,0x338(%r15)
mov    $0x1,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
lea    0x2f3f0(%rip),%rsi        # 55d27 <module.74>
lea    0x2f439(%rip),%rdx        # 55d77 <module.74+0x50>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

0000000000026950 <Fax4Decode>:
push   %rbp
mov    %rsp,%rbp
sub    $0x110,%rsp
mov    %rsi,-0x70(%rbp)
mov    %rdx,%rax
mov    %r14,%r11
mov    0x350(%rdi),%r14
mov    %r14,-0x88(%rbp)
mov    0x10(%r14),%r9d
mov    %r9,-0xa8(%rbp)
mov    0x40(%r14),%r10
mov    %r10,-0xd0(%rbp)
mov    0x8(%r14),%rcx
cqto   
mov    %rdi,%rsi
mov    %r13,%rdi
mov    %rbx,%r13
mov    %rcx,%rbx
mov    %r12,%rcx
mov    %r15,%r8
mov    %rax,%r15
idiv   %rbx
test   %rdx,%rdx
jne    26a36 <Fax4Decode+0xe6>
mov    0x48(%r14),%ebx
movslq 0x4c(%r14),%r12
movslq 0x50(%r14),%rax
mov    %r8,-0x28(%rbp)
mov    %rax,-0x40(%rbp)
mov    0x388(%rsi),%r8
mov    %r11,-0x20(%rbp)
mov    %r8,%r11
add    0x390(%rsi),%r11
mov    %rdi,-0x18(%rbp)
mov    %r11,-0xe0(%rbp)
mov    0x5356d(%rip),%rdi        # 79f58 <TIFFFaxMainTable@@Base+0x2419c>
mov    %rcx,-0x10(%rbp)
mov    %rdi,-0x108(%rbp)
mov    0x535c3(%rip),%rax        # 79fc0 <TIFFFaxBlackTable@@Base+0x1be04>
mov    %r13,-0x8(%rbp)
mov    %rax,-0xf8(%rbp)
mov    0x53589(%rip),%rax        # 79f98 <TIFFFaxWhiteTable@@Base+0x23ddc>
mov    %rsi,-0x80(%rbp)
mov    %rax,-0xe8(%rbp)
mov    $0x1,%eax
mov    %rax,-0x38(%rbp)
xor    %eax,%eax
mov    %rax,-0x30(%rbp)
mov    $0x7,%ecx
xor    %r13d,%r13d
jmpq   26b6c <Fax4Decode+0x21c>
xor    %eax,%eax
mov    0x3b8(%rsi),%rbx
mov    %rcx,%r12
mov    %r11,%r14
mov    %r8,%r15
mov    %rbx,%rcx
mov    %r13,%rbx
mov    %rdi,%r13
mov    %rcx,%rdi
lea    0x2efbe(%rip),%rdx        # 55a19 <module.29+0xd>
lea    0x2f32e(%rip),%rsi        # 55d90 <module.78>
callq  8a00 <TIFFErrorExt@plt>
mov    $0xffffffffffffffff,%rax
leaveq 
retq   
mov    %r8,-0xc8(%rbp)
mov    -0x88(%rbp),%rax
mov    0x90(%rax),%edx
lea    0x2f305(%rip),%rdi        # 55d90 <module.78>
mov    -0x80(%rbp),%rax
mov    %r13,%rcx
mov    %rsi,-0x98(%rbp)
mov    %rax,%rsi
callq  223c0 <Fax3Unexpected>
mov    -0xc8(%rbp),%r8
mov    -0x98(%rbp),%rsi
mov    -0xa8(%rbp),%r9
mov    %rbx,-0x48(%rbp)
mov    %r8,-0xc0(%rbp)
test   %r14d,%r14d
je     26acd <Fax4Decode+0x17d>
mov    %r14d,(%r15)
add    $0x4,%r15
cmp    %r9d,%r13d
jne    26bc3 <Fax4Decode+0x273>
mov    -0x40(%rbp),%rax
mov    -0x88(%rbp),%r14
mov    -0x68(%rbp),%r13
mov    -0x70(%rbp),%rdi
test   %eax,%eax
jne    26c14 <Fax4Decode+0x2c4>
mov    %r9,%rcx
mov    %rdi,%rbx
mov    %r15,%rdx
callq  *0x58(%r14)
movl   $0x0,(%r15)
mov    0x68(%r14),%rcx
mov    0x70(%r14),%rax
mov    %rcx,0x70(%r14)
mov    %rax,0x68(%r14)
movslq 0x90(%r14),%rax
add    $0x1,%eax
mov    %eax,0x90(%r14)
mov    0x8(%r14),%rax
mov    %r13,%r15
sub    %rax,%r15
add    %rbx,%rax
mov    %rax,-0x70(%rbp)
mov    -0xc0(%rbp),%r8
mov    -0x48(%rbp),%rbx
mov    -0xa8(%rbp),%r9
mov    -0x108(%rbp),%rdi
mov    -0xe0(%rbp),%r11
mov    -0xd0(%rbp),%r10
mov    $0x7,%ecx
xor    %r13d,%r13d
pushq  -0x30(%rbp)
popq   -0x40(%rbp)
test   %r15,%r15
jg     26cd2 <Fax4Decode+0x382>
mov    %r12d,0x4c(%r14)
mov    %ebx,0x48(%r14)
mov    -0x40(%rbp),%rax
mov    %eax,0x50(%r14)
mov    -0x80(%rbp),%rcx
mov    0x388(%rcx),%rax
sub    %r8,%rax
add    0x390(%rcx),%rax
mov    %rax,0x390(%rcx)
mov    %r8,0x388(%rcx)
mov    $0x1,%eax
mov    -0x8(%rbp),%rbx
mov    -0x10(%rbp),%r12
mov    -0x18(%rbp),%r13
mov    -0x20(%rbp),%r14
mov    -0x28(%rbp),%r15
leaveq 
retq   
mov    -0x88(%rbp),%r14
mov    0x90(%r14),%edx
lea    0x2f1b8(%rip),%rdi        # 55d90 <module.78>
mov    -0x80(%rbp),%rax
mov    %r13,%rcx
mov    %r9,%r8
mov    %r12,-0x78(%rbp)
mov    %r9,%rbx
mov    %rsi,%r12
mov    %rax,%rsi
callq  224a0 <Fax3BadLength>
mov    -0xc0(%rbp),%r8
mov    -0x48(%rbp),%rdx
mov    -0x78(%rbp),%rsi
mov    -0x40(%rbp),%rax
mov    -0x68(%rbp),%r9
mov    -0x70(%rbp),%rdi
jmpq   26d1b <Fax4Decode+0x3cb>
mov    -0x80(%rbp),%r13
cmp    $0xc,%r12d
jg     26c5a <Fax4Decode+0x30a>
mov    -0xe0(%rbp),%r10
cmp    %r8,%r10
jbe    26d49 <Fax4Decode+0x3f9>
movzbl (%r8),%ecx
mov    -0xd0(%rbp),%r11
movzbl (%r11,%rcx,1),%edx
mov    %r12,%rcx
shl    %cl,%edx
or     %edx,%ebx
lea    0x1(%r8),%rdx
lea    0x8(%rcx),%r12d
cmp    $0xc,%r12d
jle    26d5d <Fax4Decode+0x40d>
mov    %rdx,%r8
mov    %r8,-0xe0(%rbp)
mov    %r9,%rcx
mov    %r15,%rdx
mov    %rax,%r15
callq  *0x58(%r14)
lea    -0xd(%r12),%eax
mov    %eax,0x4c(%r14)
shr    $0xd,%ebx
mov    %ebx,0x48(%r14)
mov    %r15d,0x50(%r14)
mov    0x388(%r13),%rax
mov    -0xe0(%rbp),%rcx
sub    %rcx,%rax
add    0x390(%r13),%rax
mov    %rax,0x390(%r13)
mov    %rcx,0x388(%r13)
movslq 0x90(%r14),%rax
test   %eax,%eax
je     26d74 <Fax4Decode+0x424>
mov    $0x1,%eax
mov    -0x8(%rbp),%rbx
mov    -0x10(%rbp),%r12
mov    -0x18(%rbp),%r13
mov    -0x20(%rbp),%r14
mov    -0x28(%rbp),%r15
leaveq 
retq   
mov    %r15,-0x68(%rbp)
mov    0x70(%r14),%rsi
mov    0x68(%r14),%rdx
movslq (%rdx),%rax
add    $0x4,%rdx
mov    %rsi,%r15
mov    %r13,%r14
mov    %r15,-0x110(%rbp)
cmp    %r9d,%r13d
jl     26d91 <Fax4Decode+0x441>
test   %r14d,%r14d
jne    26e1d <Fax4Decode+0x4cd>
xor    %r14d,%r14d
jmpq   26ab6 <Fax4Decode+0x166>
cmp    %r15,%r12
jae    26d20 <Fax4Decode+0x3d0>
add    $0xfffffffffffffffc,%r15
movslq (%r15),%rcx
sub    %ecx,%r13d
cmp    %ebx,%r13d
jg     26d0c <Fax4Decode+0x3bc>
cmp    %ebx,%r13d
jl     26e70 <Fax4Decode+0x520>
cmp    %ebx,%r13d
jg     26eb6 <Fax4Decode+0x566>
mov    %r9,%r13
mov    %rbx,%r9
mov    %rdx,%rbx
mov    %r12,%rdx
mov    %rsi,%r12
mov    %rdx,%rsi
jmpq   26ae9 <Fax4Decode+0x199>
test   %r12d,%r12d
je     26edc <Fax4Decode+0x58c>
mov    $0xd,%r12d
jmpq   26c5a <Fax4Decode+0x30a>
cmp    %rdx,%r10
ja     26ee4 <Fax4Decode+0x594>
mov    %rdx,%r8
mov    $0xd,%r12d
jmpq   26c5a <Fax4Decode+0x30a>
mov    -0x8(%rbp),%rbx
mov    -0x10(%rbp),%r12
mov    -0x18(%rbp),%r13
mov    -0x20(%rbp),%r14
mov    -0x28(%rbp),%r15
mov    $0xffffffffffffffff,%rax
leaveq 
retq   
cmp    $0x6,%r12d
jg     26dba <Fax4Decode+0x46a>
cmp    %r11,%r8
jae    26f03 <Fax4Decode+0x5b3>
movzbl (%r8),%ecx
movzbl (%r10,%rcx,1),%r10d
mov    %r12,%rcx
shl    %cl,%r10d
or     %r10d,%ebx
add    $0x1,%r8
lea    0x8(%rcx),%r12d
mov    %r12,-0xc8(%rbp)
mov    %rbx,%rcx
and    $0x7f,%ecx
mov    %ecx,%r10d
movzbl 0x1(%rdi,%r10,8),%ecx
sub    %ecx,%r12d
shr    %cl,%ebx
mov    %rcx,-0xc0(%rbp)
movzbl (%rdi,%r10,8),%ecx
add    $0xffffffff,%ecx
cmp    $0xb,%ecx
ja     26a70 <Fax4Decode+0x120>
lea    0x2e2c8(%rip),%r11        # 550bc <module.11+0x168>
movslq (%r11,%rcx,4),%rcx
add    %r11,%rcx
jmpq   *%rcx
cmp    %rsi,%r15
je     2711f <Fax4Decode+0x7cf>
mov    %rbx,-0x78(%rbp)
mov    %r8,-0x100(%rbp)
mov    %r12,-0xb8(%rbp)
jmpq   27108 <Fax4Decode+0x7b8>
lea    0x0(%r13,%r14,1),%eax
cmp    %r9d,%eax
jge    26e61 <Fax4Decode+0x511>
test   %r12d,%r12d
jg     26e4d <Fax4Decode+0x4fd>
cmp    %r11,%r8
jae    27180 <Fax4Decode+0x830>
movzbl (%r8),%eax
movzbl (%rax,%r10,1),%eax
mov    %r12,%rcx
shl    %cl,%eax
or     %eax,%ebx
lea    0x8(%rcx),%r12d
add    $0x1,%r8
mov    %rbx,%rax
and    $0x1,%eax
test   %eax,%eax
je     26a70 <Fax4Decode+0x120>
shr    %ebx
add    $0xffffffff,%r12d
mov    %r14d,(%r15)
add    $0x4,%r15
xor    %r14d,%r14d
jmpq   26ab6 <Fax4Decode+0x166>
test   %r13d,%r13d
jns    26e78 <Fax4Decode+0x528>
xor    %r13d,%r13d
mov    %r15,%rcx
sub    %r12,%rcx
and    $0x4,%rcx
test   %rcx,%rcx
jle    26e92 <Fax4Decode+0x542>
movl   $0x0,(%r15)
add    $0x4,%r15
mov    %rbx,%rcx
sub    %r13d,%ecx
mov    %ecx,(%r15)
add    $0x4,%r15
mov    %r9,%r13
mov    %rbx,%r9
mov    %rdx,%rbx
mov    %r12,%rdx
mov    %rsi,%r12
mov    %rdx,%rsi
jmpq   26ae9 <Fax4Decode+0x199>
mov    %ebx,(%r15)
movl   $0x0,0x4(%r15)
add    $0x8,%r15
mov    %r9,%r13
mov    %rbx,%r9
mov    %rdx,%rbx
mov    %r12,%rdx
mov    %rsi,%r12
mov    %rdx,%rsi
jmpq   26ae9 <Fax4Decode+0x199>
xor    %r12d,%r12d
jmpq   26c5a <Fax4Decode+0x30a>
movzbl (%rdx),%edx
movzbl (%r11,%rdx,1),%edx
mov    %rcx,%r10
mov    %r12,%rcx
shl    %cl,%edx
or     %edx,%ebx
lea    0x10(%r10),%r12d
add    $0x2,%r8
jmpq   26c5a <Fax4Decode+0x30a>
test   %r12d,%r12d
je     27194 <Fax4Decode+0x844>
mov    %rcx,%r12
jmpq   26dba <Fax4Decode+0x46a>
sub    %r13d,%r9d
mov    %r9d,(%r15)
mov    -0x88(%rbp),%rax
mov    0x90(%rax),%edx
lea    0x2ee62(%rip),%rdi        # 55d90 <module.78>
mov    -0x80(%rbp),%rax
mov    %r13,%rcx
mov    %rbx,-0x50(%rbp)
mov    %rsi,-0x90(%rbp)
mov    %rax,%rsi
mov    %r15,%rbx
mov    %r8,%r15
callq  22430 <Fax3Extension>
lea    0x4(%rbx),%rax
mov    %r15,%r8
mov    %rax,%r15
mov    -0x90(%rbp),%rsi
mov    -0xa8(%rbp),%r9
mov    -0x50(%rbp),%rbx
jmpq   26ab6 <Fax4Decode+0x166>
mov    %r9,%rax
sub    %r13d,%eax
mov    %eax,(%r15)
add    $0x4,%r15
cmp    $0x3,%r12d
jg     26fb0 <Fax4Decode+0x660>
mov    -0xe0(%rbp),%rax
cmp    %rax,%r8
jae    271ef <Fax4Decode+0x89f>
movzbl (%r8),%eax
mov    -0xd0(%rbp),%rcx
movzbl (%rcx,%rax,1),%eax
mov    %r12,%rcx
shl    %cl,%eax
or     %eax,%ebx
lea    0x8(%rcx),%r12d
add    $0x1,%r8
mov    %rbx,%rax
and    $0xf,%eax
test   %eax,%eax
je     27006 <Fax4Decode+0x6b6>
mov    -0x88(%rbp),%rax
mov    0x90(%rax),%edx
lea    0x2edc2(%rip),%rdi        # 55d90 <module.78>
mov    -0x80(%rbp),%rax
mov    %r13,%rcx
mov    %rsi,-0x98(%rbp)
mov    %r15,-0x110(%rbp)
mov    %rax,%rsi
mov    %r8,%r15
callq  223c0 <Fax3Unexpected>
mov    %r15,%r8
mov    -0x110(%rbp),%r15
mov    -0x98(%rbp),%rsi
mov    -0xa8(%rbp),%r9
shr    $0x4,%ebx
add    $0xfffffffc,%r12d
pushq  -0x38(%rbp)
popq   -0x40(%rbp)
jmpq   26ab6 <Fax4Decode+0x166>
cmp    %rsi,%r15
jne    2720c <Fax4Decode+0x8bc>
mov    %rax,%rcx
add    (%rdx),%ecx
mov    %rcx,%rax
add    0x4(%rdx),%eax
mov    %rcx,%r10
sub    %r13d,%r10d
add    %r10d,%r14d
add    $0x8,%rdx
mov    %rcx,%r13
mov    -0xe0(%rbp),%r11
mov    -0xd0(%rbp),%r10
mov    $0x7,%ecx
jmpq   26ceb <Fax4Decode+0x39b>
sub    %rsi,%r15
and    $0x4,%r15
test   %r15,%r15
jle    2721c <Fax4Decode+0x8cc>
mov    %rdx,-0x100(%rbp)
mov    %rax,-0x78(%rbp)
mov    -0xf8(%rbp),%rax
mov    -0xe0(%rbp),%r11
mov    -0xd0(%rbp),%r10
mov    $0xd,%edx
jmpq   2725a <Fax4Decode+0x90a>
cmp    %rsi,%r15
jne    27298 <Fax4Decode+0x948>
mov    %rax,%rcx
mov    %rcx,%rax
sub    %r13d,%eax
add    %r14d,%eax
mov    %eax,(%r15)
mov    %rcx,%rax
add    (%rdx),%eax
add    $0x4,%r15
add    $0x4,%rdx
mov    %rcx,%r13
mov    -0xe0(%rbp),%r11
mov    -0xd0(%rbp),%r10
mov    $0x7,%ecx
xor    %r14d,%r14d
jmpq   26ceb <Fax4Decode+0x39b>
cmp    %rsi,%r15
je     272d6 <Fax4Decode+0x986>
mov    %rbx,-0x60(%rbp)
mov    %r8,-0xd8(%rbp)
mov    %r12,-0xb8(%rbp)
jmpq   272bf <Fax4Decode+0x96f>
cmp    %r9d,%eax
jge    27317 <Fax4Decode+0x9c7>
lea    0x8(%rdx),%rbx
mov    0x4(%rdx),%ecx
add    (%rdx),%ecx
add    %ecx,%eax
mov    %rbx,%rdx
cmp    %eax,%r13d
jge    270f1 <Fax4Decode+0x7a1>
mov    -0xb8(%rbp),%r12
mov    -0x100(%rbp),%r8
mov    -0x78(%rbp),%rbx
mov    0x4(%rdi,%r10,8),%r11d
lea    0x0(%r13,%r11,1),%ecx
cmp    %ecx,%eax
jg     2713e <Fax4Decode+0x7ee>
cmp    %ecx,%eax
jl     2732e <Fax4Decode+0x9de>
cmp    %rsi,%r15
jne    2732e <Fax4Decode+0x9de>
mov    %rax,%rcx
sub    %r13d,%ecx
sub    %r11d,%ecx
add    %r14d,%ecx
mov    %ecx,(%r15)
movslq 0x4(%rdi,%r10,8),%rcx
mov    %rax,%r13
sub    %ecx,%r13d
add    $0xfffffffffffffffc,%rdx
movslq (%rdx),%rcx
sub    %ecx,%eax
add    $0x4,%r15
mov    -0xe0(%rbp),%r11
mov    -0xd0(%rbp),%r10
mov    $0x7,%ecx
xor    %r14d,%r14d
jmpq   26ceb <Fax4Decode+0x39b>
test   %r12d,%r12d
je     27379 <Fax4Decode+0xa29>
mov    $0x1,%r12d
jmpq   26e4d <Fax4Decode+0x4fd>
xor    %r12d,%r12d
mov    %r12,-0xf8(%rbp)
mov    %r8,-0xe8(%rbp)
mov    %rbx,-0xa8(%rbp)
mov    -0x88(%rbp),%rax
mov    0x90(%rax),%edx
lea    0x2ebd0(%rip),%rdi        # 55d90 <module.78>
mov    %rsi,-0x108(%rbp)
mov    %r14,%rbx
mov    %rax,%r14
mov    %r15,%r12
mov    %r9,%r15
mov    -0x80(%rbp),%rsi
mov    %r13,%rcx
callq  22530 <Fax3PrematureEOF>
test   %ebx,%ebx
jne    27381 <Fax4Decode+0xa31>
mov    %r12,%r9
jmpq   2738a <Fax4Decode+0xa3a>
mov    -0xc0(%rbp),%rcx
mov    -0xc8(%rbp),%rax
cmp    %eax,%ecx
je     27197 <Fax4Decode+0x847>
mov    $0x4,%r12d
jmpq   26fb0 <Fax4Decode+0x660>
mov    %rbx,-0x50(%rbp)
mov    %r12,-0x110(%rbp)
jmpq   273e0 <Fax4Decode+0xa90>
mov    %rdx,-0x100(%rbp)
mov    %rax,-0x78(%rbp)
mov    -0xe8(%rbp),%rax
mov    $0xc,%edx
mov    -0xe0(%rbp),%r11
mov    -0xd0(%rbp),%r10
jmpq   2740c <Fax4Decode+0xabc>
cmp    $0xa,%cl
jne    27449 <Fax4Decode+0xaf9>
movslq 0x4(%rax,%rdi,8),%rcx
add    %ecx,%r14d
add    %ecx,%r13d
cmp    $0xc,%r12d
jg     27463 <Fax4Decode+0xb13>
cmp    %r8,%r11
jbe    27457 <Fax4Decode+0xb07>
movzbl (%r8),%ecx
movzbl (%r10,%rcx,1),%edi
mov    %r12,%rcx
shl    %cl,%edi
or     %edi,%ebx
lea    0x1(%r8),%r12
lea    0x8(%rcx),%edi
cmp    $0xc,%edi
jle    274c1 <Fax4Decode+0xb71>
mov    %r12,%r8
mov    %rdi,%r12
jmpq   27463 <Fax4Decode+0xb13>
mov    %rbx,-0x58(%rbp)
mov    %r12,-0xb0(%rbp)
jmpq   274e9 <Fax4Decode+0xb99>
cmp    %r9d,%eax
jge    27501 <Fax4Decode+0xbb1>
lea    0x8(%rdx),%rbx
mov    0x4(%rdx),%ecx
add    (%rdx),%ecx
add    %ecx,%eax
mov    %rbx,%rdx
cmp    %eax,%r13d
jge    272a8 <Fax4Decode+0x958>
mov    -0xb8(%rbp),%r12
mov    -0xd8(%rbp),%r8
mov    -0x60(%rbp),%rbx
mov    %rax,%rcx
sub    %r13d,%ecx
mov    %rcx,%r11
add    0x4(%rdi,%r10,8),%r11d
add    %r14d,%r11d
mov    %r11d,(%r15)
add    (%rdx),%eax
add    0x4(%rdi,%r10,8),%ecx
add    %ecx,%r13d
add    $0x4,%r15
add    $0x4,%rdx
mov    -0xe0(%rbp),%r11
mov    -0xd0(%rbp),%r10
mov    $0x7,%ecx
xor    %r14d,%r14d
jmpq   26ceb <Fax4Decode+0x39b>
mov    -0xb8(%rbp),%r12
mov    -0x100(%rbp),%r8
mov    -0x78(%rbp),%rbx
jmpq   2711f <Fax4Decode+0x7cf>
mov    -0x88(%rbp),%rax
mov    0x90(%rax),%edx
lea    0x2ea4e(%rip),%rdi        # 55d90 <module.78>
mov    -0x80(%rbp),%rax
mov    %r13,%rcx
mov    %rbx,-0x48(%rbp)
mov    %rsi,-0x90(%rbp)
mov    %rax,%rsi
mov    %r8,%rbx
callq  223c0 <Fax3Unexpected>
mov    %rbx,%r8
mov    -0x90(%rbp),%rsi
mov    -0xa8(%rbp),%r9
mov    -0x48(%rbp),%rbx
jmpq   26ab6 <Fax4Decode+0x166>
xor    %r12d,%r12d
jmpq   27197 <Fax4Decode+0x847>
mov    %ebx,(%r12)
lea    0x4(%r12),%r9
cmp    %r15d,%r13d
jne    27518 <Fax4Decode+0xbc8>
mov    %r15,%rax
mov    %r9,%r15
mov    %rax,%r9
mov    -0xa8(%rbp),%rbx
mov    -0xe8(%rbp),%r8
mov    -0xf8(%rbp),%r12
mov    -0x108(%rbp),%rsi
mov    -0x70(%rbp),%rdi
mov    -0x40(%rbp),%rax
mov    -0x80(%rbp),%r13
jmpq   26c18 <Fax4Decode+0x2c8>
cmp    %r9d,%eax
jge    27567 <Fax4Decode+0xc17>
lea    0x8(%rdx),%rbx
mov    0x4(%rdx),%ecx
add    (%rdx),%ecx
add    %ecx,%eax
mov    %rbx,%rdx
cmp    %eax,%r13d
jge    273c9 <Fax4Decode+0xa79>
mov    %rax,%rcx
mov    -0x110(%rbp),%r12
mov    -0x50(%rbp),%rbx
jmpq   27024 <Fax4Decode+0x6d4>
cmp    $0x9,%cl
jne    2757a <Fax4Decode+0xc2a>
movslq 0x4(%rax,%rdi,8),%rcx
add    %ecx,%r14d
add    %ecx,%r13d
cmp    $0xb,%r12d
jg     27594 <Fax4Decode+0xc44>
cmp    %r11,%r8
jae    27588 <Fax4Decode+0xc38>
movzbl (%r8),%ecx
movzbl (%r10,%rcx,1),%edi
mov    %r12,%rcx
shl    %cl,%edi
or     %edi,%ebx
lea    0x1(%r8),%rdi
lea    0x8(%rcx),%r12d
cmp    $0xb,%r12d
jle    275f2 <Fax4Decode+0xca2>
mov    %rdi,%r8
jmpq   27594 <Fax4Decode+0xc44>
cmp    $0xb,%cl
je     2724f <Fax4Decode+0x8ff>
jmpq   2760f <Fax4Decode+0xcbf>
test   %r12d,%r12d
je     27659 <Fax4Decode+0xd09>
mov    %rdx,%r12
mov    %rbx,%rcx
and    $0x1fff,%ecx
mov    %ecx,%edi
movzbl 0x1(%rax,%rdi,8),%ecx
sub    %ecx,%r12d
shr    %cl,%ebx
movzbl (%rax,%rdi,8),%ecx
cmp    $0x9,%cl
ja     27246 <Fax4Decode+0x8f6>
cmp    $0x8,%cl
jne    2760f <Fax4Decode+0xcbf>
add    0x4(%rax,%rdi,8),%r14d
mov    -0x110(%rbp),%rcx
mov    %r14d,(%rcx)
add    0x4(%rax,%rdi,8),%r13d
lea    0x4(%rcx),%rax
mov    %rax,-0xf0(%rbp)
mov    -0xe8(%rbp),%rax
mov    $0xc,%edx
xor    %r14d,%r14d
jmpq   27681 <Fax4Decode+0xd31>
cmp    %r12,%r11
ja     276d6 <Fax4Decode+0xd86>
mov    %r12,%r8
mov    %rdx,%r12
jmp    27463 <Fax4Decode+0xb13>
cmp    %r9d,%eax
jge    276fc <Fax4Decode+0xdac>
lea    0x8(%rdx),%rbx
mov    0x4(%rdx),%ecx
add    (%rdx),%ecx
add    %ecx,%eax
mov    %rbx,%rdx
cmp    %eax,%r13d
jge    274d2 <Fax4Decode+0xb82>
mov    %rax,%rcx
mov    -0xb0(%rbp),%r12
mov    -0x58(%rbp),%rbx
jmpq   2709a <Fax4Decode+0x74a>
mov    -0xb8(%rbp),%r12
mov    -0xd8(%rbp),%r8
mov    -0x60(%rbp),%rbx
jmpq   272d6 <Fax4Decode+0x986>
mov    %r15,%r12
mov    %r9,%r15
mov    0x90(%r14),%edx
mov    -0x80(%rbp),%rbx
mov    %rbx,%rsi
mov    %r13,%rcx
mov    %r12,%r8
lea    0x2e857(%rip),%rdi        # 55d90 <module.78>
callq  224a0 <Fax3BadLength>
mov    -0xa8(%rbp),%r9
mov    -0xe8(%rbp),%r8
mov    -0xf8(%rbp),%rdx
mov    -0x108(%rbp),%rsi
mov    -0x70(%rbp),%rdi
mov    -0x40(%rbp),%rax
jmpq   2771e <Fax4Decode+0xdce>
mov    %rax,%rcx
mov    -0x110(%rbp),%r12
mov    -0x50(%rbp),%rbx
jmpq   27024 <Fax4Decode+0x6d4>
cmp    $0xb,%cl
je     27401 <Fax4Decode+0xab1>
jmpq   27752 <Fax4Decode+0xe02>
test   %r12d,%r12d
je     2779c <Fax4Decode+0xe4c>
mov    %rdx,%r12
mov    %rbx,%rcx
and    $0xfff,%ecx
mov    %ecx,%edi
movzbl 0x1(%rax,%rdi,8),%ecx
sub    %ecx,%r12d
shr    %cl,%ebx
movzbl (%rax,%rdi,8),%ecx
cmp    $0x8,%cl
ja     273f8 <Fax4Decode+0xaa8>
cmp    $0x7,%cl
jne    27752 <Fax4Decode+0xe02>
add    0x4(%rax,%rdi,8),%r14d
mov    -0x110(%rbp),%rcx
mov    %r14d,(%rcx)
add    0x4(%rax,%rdi,8),%r13d
lea    0x4(%rcx),%rax
mov    %rax,-0xf0(%rbp)
mov    -0xf8(%rbp),%rdx
mov    $0xd,%eax
xor    %r14d,%r14d
jmpq   277c4 <Fax4Decode+0xe74>
cmp    %r11,%rdi
jb     2783c <Fax4Decode+0xeec>
mov    %rdi,%r8
mov    %rdx,%r12
jmp    27594 <Fax4Decode+0xc44>
pushq  -0xf0(%rbp)
popq   -0x110(%rbp)
mov    -0x88(%rbp),%rax
mov    0x90(%rax),%edx
lea    0x2e76d(%rip),%rdi        # 55d90 <module.78>
mov    -0x80(%rbp),%rax
mov    %r13,%rcx
mov    %rsi,-0xa0(%rbp)
mov    %rax,%rsi
mov    %r8,%r15
callq  223c0 <Fax3Unexpected>
mov    %r15,%r8
mov    -0x110(%rbp),%r15
mov    -0xa0(%rbp),%rsi
mov    -0xa8(%rbp),%r9
jmpq   26ab6 <Fax4Decode+0x166>
mov    -0x110(%rbp),%r15
xor    %r12d,%r12d
jmpq   27197 <Fax4Decode+0x847>
cmp    $0x9,%cl
je     27676 <Fax4Decode+0xd26>
cmp    $0xb,%cl
jne    2785e <Fax4Decode+0xf0e>
movslq 0x4(%rax,%rdi,8),%rcx
add    %ecx,%r14d
add    %ecx,%r13d
cmp    $0xb,%r12d
jle    2786f <Fax4Decode+0xf1f>
mov    %rbx,%rcx
and    $0xfff,%ecx
mov    %ecx,%edi
movzbl 0x1(%rax,%rdi,8),%ecx
sub    %ecx,%r12d
shr    %cl,%ebx
movzbl (%rax,%rdi,8),%ecx
cmp    $0x8,%cl
ja     27668 <Fax4Decode+0xd18>
cmp    $0x7,%cl
jne    27746 <Fax4Decode+0xdf6>
add    0x4(%rax,%rdi,8),%r14d
mov    -0xf0(%rbp),%rcx
mov    %r14d,(%rcx)
add    0x4(%rax,%rdi,8),%r13d
mov    -0x110(%rbp),%rax
lea    0x8(%rax),%r15
jmpq   27814 <Fax4Decode+0xec4>
movzbl (%r12),%r12d
movzbl (%r10,%r12,1),%r12d
mov    %rdi,%r15
mov    %rcx,%rdi
mov    %r15,%rcx
shl    %cl,%r12d
or     %r12d,%ebx
add    $0x2,%r8
lea    0x10(%rdi),%r12d
jmpq   27463 <Fax4Decode+0xb13>
mov    %rax,%rcx
mov    -0xb0(%rbp),%r12
mov    -0x58(%rbp),%rbx
jmpq   2709a <Fax4Decode+0x74a>
cmp    %r15,%rsi
jae    27723 <Fax4Decode+0xdd3>
add    $0xfffffffffffffffc,%r15
movslq (%r15),%rcx
sub    %ecx,%r13d
cmp    %r12d,%r13d
jg     2770f <Fax4Decode+0xdbf>
cmp    %r12d,%r13d
jl     278a3 <Fax4Decode+0xf53>
cmp    %r12d,%r13d
jg     278e3 <Fax4Decode+0xf93>
mov    %rbx,%r13
mov    %r9,%rbx
mov    %r12,%r9
mov    %rdx,%r12
jmpq   26c18 <Fax4Decode+0x2c8>
pushq  -0xf0(%rbp)
popq   -0x110(%rbp)
mov    -0x88(%rbp),%rax
mov    0x90(%rax),%edx
lea    0x2e62a(%rip),%rdi        # 55d90 <module.78>
mov    -0x80(%rbp),%rax
mov    %r13,%rcx
mov    %rsi,-0xa0(%rbp)
mov    %rax,%rsi
mov    %r8,%r15
callq  223c0 <Fax3Unexpected>
mov    %r15,%r8
mov    -0x110(%rbp),%r15
mov    -0xa0(%rbp),%rsi
mov    -0xa8(%rbp),%r9
jmpq   26ab6 <Fax4Decode+0x166>
mov    -0x110(%rbp),%r15
xor    %r12d,%r12d
jmpq   27197 <Fax4Decode+0x847>
cmp    $0xa,%cl
je     277b9 <Fax4Decode+0xe69>
cmp    $0xb,%cl
jne    27903 <Fax4Decode+0xfb3>
movslq 0x4(%rdx,%rdi,8),%rcx
add    %ecx,%r14d
add    %ecx,%r13d
cmp    $0xc,%r12d
jle    27914 <Fax4Decode+0xfc4>
mov    %rbx,%rcx
and    $0x1fff,%ecx
mov    %ecx,%edi
movzbl 0x1(%rdx,%rdi,8),%ecx
sub    %ecx,%r12d
shr    %cl,%ebx
movzbl (%rdx,%rdi,8),%ecx
cmp    $0x9,%cl
ja     277ab <Fax4Decode+0xe5b>
cmp    $0x8,%cl
jne    27603 <Fax4Decode+0xcb3>
add    0x4(%rdx,%rdi,8),%r14d
mov    -0xf0(%rbp),%rax
mov    %r14d,(%rax)
add    0x4(%rdx,%rdi,8),%r13d
mov    -0x110(%rbp),%rax
lea    0x8(%rax),%r15
cmp    %r15,%rsi
jne    27940 <Fax4Decode+0xff0>
mov    -0x78(%rbp),%rax
mov    -0x100(%rbp),%rdx
mov    -0x108(%rbp),%rdi
mov    $0x7,%ecx
xor    %r14d,%r14d
jmpq   26ceb <Fax4Decode+0x39b>
movzbl (%rdi),%edi
movzbl (%r10,%rdi,1),%edi
mov    %r12,%r15
mov    %rcx,%r12
mov    %r15,%rcx
shl    %cl,%edi
or     %edi,%ebx
add    $0x2,%r8
add    $0x10,%r12d
jmpq   27594 <Fax4Decode+0xc44>
pushq  -0xf0(%rbp)
popq   -0x110(%rbp)
jmpq   27752 <Fax4Decode+0xe02>
cmp    %r8,%r11
jbe    27963 <Fax4Decode+0x1013>
movzbl (%r8),%ecx
movzbl (%r10,%rcx,1),%edi
mov    %r12,%rcx
shl    %cl,%edi
or     %edi,%ebx
lea    0x1(%r8),%r12
lea    0x8(%rcx),%edi
cmp    $0xb,%edi
jle    27974 <Fax4Decode+0x1024>
mov    %r12,%r8
mov    %rdi,%r12
jmpq   2768b <Fax4Decode+0xd3b>
test   %r13d,%r13d
jns    278ab <Fax4Decode+0xf5b>
xor    %r13d,%r13d
mov    %r15,%rcx
sub    %rsi,%rcx
and    $0x4,%rcx
test   %rcx,%rcx
jle    278c5 <Fax4Decode+0xf75>
movl   $0x0,(%r15)
add    $0x4,%r15
mov    %r12,%rcx
sub    %r13d,%ecx
mov    %ecx,(%r15)
add    $0x4,%r15
mov    %rbx,%r13
mov    %r9,%rbx
mov    %r12,%r9
mov    %rdx,%r12
jmpq   26c18 <Fax4Decode+0x2c8>
mov    %r12d,(%r15)
movl   $0x0,0x4(%r15)
add    $0x8,%r15
mov    %rbx,%r13
mov    %r9,%rbx
mov    %r12,%r9
mov    %rdx,%r12
jmpq   26c18 <Fax4Decode+0x2c8>
pushq  -0xf0(%rbp)
popq   -0x110(%rbp)
jmpq   2760f <Fax4Decode+0xcbf>
cmp    %r11,%r8
jae    27988 <Fax4Decode+0x1038>
movzbl (%r8),%ecx
movzbl (%r10,%rcx,1),%edi
mov    %r12,%rcx
shl    %cl,%edi
or     %edi,%ebx
lea    0x1(%r8),%r12
lea    0x8(%rcx),%edi
cmp    $0xc,%edi
jle    27999 <Fax4Decode+0x1049>
mov    %r12,%r8
mov    %rdi,%r12
jmpq   277ce <Fax4Decode+0xe7e>
mov    %r12,-0xb0(%rbp)
mov    %r8,-0xd8(%rbp)
mov    %rbx,-0x58(%rbp)
mov    %r15,-0x60(%rbp)
mov    -0x78(%rbp),%rax
mov    -0x100(%rbp),%rdx
jmp    279c4 <Fax4Decode+0x1074>
test   %r12d,%r12d
je     279fa <Fax4Decode+0x10aa>
mov    %rdx,%r12
jmpq   2768b <Fax4Decode+0xd3b>
cmp    %r12,%r11
ja     27a09 <Fax4Decode+0x10b9>
mov    %r12,%r8
mov    %rdx,%r12
jmpq   2768b <Fax4Decode+0xd3b>
test   %r12d,%r12d
je     27a2f <Fax4Decode+0x10df>
mov    %rax,%r12
jmpq   277ce <Fax4Decode+0xe7e>
cmp    %r11,%r12
jb     27a3e <Fax4Decode+0x10ee>
mov    %r12,%r8
mov    %rax,%r12
jmpq   277ce <Fax4Decode+0xe7e>
cmp    %r9d,%eax
jge    27a64 <Fax4Decode+0x1114>
lea    0x8(%rdx),%rdi
mov    0x4(%rdx),%ecx
add    (%rdx),%ecx
add    %ecx,%eax
mov    %rdi,%rdx
cmp    %r13d,%eax
jle    279ad <Fax4Decode+0x105d>
mov    -0x60(%rbp),%r15
mov    -0x58(%rbp),%rbx
mov    -0xd8(%rbp),%r8
mov    -0xb0(%rbp),%r12
mov    -0x108(%rbp),%rdi
mov    -0xe0(%rbp),%r11
mov    $0x7,%ecx
xor    %r14d,%r14d
jmpq   26ceb <Fax4Decode+0x39b>
mov    -0xf0(%rbp),%r15
xor    %r12d,%r12d
jmpq   27197 <Fax4Decode+0x847>
movzbl (%r12),%r12d
movzbl (%r10,%r12,1),%r12d
mov    %rdi,%r15
mov    %rcx,%rdi
mov    %r15,%rcx
shl    %cl,%r12d
or     %r12d,%ebx
add    $0x2,%r8
lea    0x10(%rdi),%r12d
jmpq   2768b <Fax4Decode+0xd3b>
mov    -0xf0(%rbp),%r15
xor    %r12d,%r12d
jmpq   27197 <Fax4Decode+0x847>
movzbl (%r12),%r12d
movzbl (%r10,%r12,1),%r12d
mov    %rdi,%r15
mov    %rcx,%rdi
mov    %r15,%rcx
shl    %cl,%r12d
or     %r12d,%ebx
add    $0x2,%r8
lea    0x10(%rdi),%r12d
jmpq   277ce <Fax4Decode+0xe7e>
mov    -0x60(%rbp),%r15
mov    -0x58(%rbp),%rbx
mov    -0xd8(%rbp),%r8
mov    -0xb0(%rbp),%r12
mov    -0x108(%rbp),%rdi
mov    -0xe0(%rbp),%r11
mov    $0x7,%ecx
xor    %r14d,%r14d
jmpq   26ceb <Fax4Decode+0x39b>
data16 nopw %cs:0x0(%rax,%rax,1)

0000000000027aa0 <Fax4Encode>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    %rdx,%rax
mov    %r12,%r8
mov    %r13,%r9
mov    %rdi,%r13
mov    %r14,%r10
mov    %r15,%r11
mov    %rsi,%r15
xor    %r12d,%r12d
mov    0x350(%r13),%r14
mov    0x8(%r14),%rcx
cqto   
mov    %rbx,%rsi
mov    %rax,%rbx
idiv   %rcx
test   %rdx,%rdx
jne    27af1 <Fax4Encode+0x51>
mov    %rsi,-0x8(%rbp)
mov    %r8,-0x10(%rbp)
mov    %r9,-0x18(%rbp)
mov    %r10,-0x20(%rbp)
mov    %r11,-0x28(%rbp)
jmp    27b57 <Fax4Encode+0xb7>
xor    %eax,%eax
mov    0x3b8(%r13),%rdi
mov    %rsi,%rbx
mov    %r8,%r12
mov    %r9,%r13
mov    %r10,%r14
mov    %r11,%r15
lea    0x2e28b(%rip),%rsi        # 55d9b <module.79>
lea    0x2e04a(%rip),%rdx        # 55b61 <module.44+0xb>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
mov    0x80(%r14),%rdx
mov    0x10(%r14),%ecx
mov    %r13,%rdi
mov    %r15,%rsi
callq  25760 <Fax3Encode2DRow>
test   %eax,%eax
je     27b77 <Fax4Encode+0xd7>
mov    0x80(%r14),%rdi
mov    0x8(%r14),%rdx
mov    %r15,%rsi
callq  8790 <_TIFFmemcpy@plt>
mov    0x8(%r14),%rax
sub    %rax,%rbx
add    %rax,%r15
test   %rbx,%rbx
jg     27b20 <Fax4Encode+0x80>
mov    $0x1,%eax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
mov    %r12,%rax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   

0000000000027b90 <Fax4PostEncode>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    $0x1,%esi
mov    $0xc,%edx
mov    0x350(%rdi),%r15
mov    %rdi,%r14
callq  249f0 <Fax3PutBits>
mov    %r14,%rdi
mov    $0x1,%esi
mov    $0xc,%edx
callq  249f0 <Fax3PutBits>
movslq 0x4c(%r15),%rax
cmp    $0x8,%eax
jne    27be3 <Fax4PostEncode+0x53>
mov    $0x1,%eax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
mov    0x370(%r14),%rax
cmp    0x390(%r14),%rax
jg     27bfb <Fax4PostEncode+0x6b>
mov    %r14,%rdi
callq  86e0 <TIFFFlushData1@plt>
mov    0x388(%r14),%rcx
lea    0x1(%rcx),%rax
mov    %rax,0x388(%r14)
movzbl 0x48(%r15),%eax
mov    %al,(%rcx)
mov    0x390(%r14),%rax
add    $0x1,%rax
mov    %rax,0x390(%r14)
movl   $0x0,0x48(%r15)
movl   $0x8,0x4c(%r15)
mov    $0x1,%eax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)

0000000000027c50 <Fax3DecodeRLE>:
push   %rbp
mov    %rsp,%rbp
sub    $0xb0,%rsp
mov    %rsi,-0x78(%rbp)
mov    0x350(%rdi),%r11
mov    0x10(%r11),%eax
mov    %rax,-0xb0(%rbp)
mov    %rdx,%rax
mov    %r12,%r9
mov    %rbx,%r12
mov    0x40(%r11),%rsi
mov    %rsi,-0x60(%rbp)
movslq 0x4(%r11),%rcx
mov    0x8(%r11),%r8
cqto   
mov    %rax,%rbx
idiv   %r8
test   %rdx,%rdx
jne    27d2e <Fax3DecodeRLE+0xde>
mov    0x70(%r11),%rdx
mov    %rdx,-0x88(%rbp)
movslq 0x50(%r11),%rax
mov    %rax,-0x8(%rbp)
movslq 0x4c(%r11),%r8
mov    %r15,-0x30(%rbp)
mov    0x48(%r11),%r15d
mov    %r14,-0x28(%rbp)
mov    0x388(%rdi),%r14
mov    %r13,-0x20(%rbp)
mov    %r14,%r10
add    0x390(%rdi),%r10
mov    %r9,-0x18(%rbp)
mov    %r10,-0x58(%rbp)
mov    0x522b6(%rip),%rax        # 79f98 <TIFFFaxWhiteTable@@Base+0x23ddc>
mov    %r12,-0x10(%rbp)
mov    %rax,-0xa0(%rbp)
mov    0x522cc(%rip),%r9        # 79fc0 <TIFFFaxBlackTable@@Base+0x1be04>
mov    %rdi,-0x90(%rbp)
mov    %r9,-0xa8(%rbp)
mov    %rcx,%rdi
and    $0x4,%edi
mov    %rdi,-0x40(%rbp)
and    $0x8,%ecx
mov    %rcx,-0x50(%rbp)
xor    %r13d,%r13d
mov    %r11,-0x98(%rbp)
mov    $0xc,%edi
mov    -0xb0(%rbp),%r12
jmpq   27dc2 <Fax3DecodeRLE+0x172>
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
mov    %r9,%rbx
lea    0x2dcd8(%rip),%rdx        # 55a19 <module.29+0xd>
lea    0x2e05e(%rip),%rsi        # 55da6 <module.80>
callq  8a00 <TIFFErrorExt@plt>
mov    %r12,%rcx
mov    %rbx,%r12
mov    %rcx,%rbx
mov    $0xffffffffffffffff,%rax
leaveq 
retq   
mov    %r13,%r8
and    $0xfffffff8,%r8d
and    $0x7,%r13d
mov    %r13,%rcx
shr    %cl,%r15d
movslq 0x90(%r12),%rax
add    $0x1,%eax
mov    %eax,0x90(%r12)
mov    0x8(%r12),%rax
sub    %rax,%rbx
mov    -0x78(%rbp),%rcx
add    %rcx,%rax
mov    %rax,-0x78(%rbp)
mov    -0x88(%rbp),%rdx
mov    -0x58(%rbp),%r10
mov    -0xa0(%rbp),%rax
mov    -0x60(%rbp),%rsi
mov    -0xa8(%rbp),%r9
mov    $0xc,%edi
xor    %r13d,%r13d
mov    -0xb0(%rbp),%r12
test   %rbx,%rbx
jg     27e1e <Fax3DecodeRLE+0x1ce>
mov    -0x98(%rbp),%rax
mov    %r8d,0x4c(%rax)
mov    %r15d,0x48(%rax)
mov    -0x8(%rbp),%rcx
mov    %ecx,0x50(%rax)
mov    -0x90(%rbp),%rcx
mov    0x388(%rcx),%rax
sub    %r14,%rax
add    0x390(%rcx),%rax
mov    %rax,0x390(%rcx)
mov    %r14,0x388(%rcx)
mov    $0x1,%eax
mov    -0x10(%rbp),%rbx
mov    -0x18(%rbp),%r12
mov    -0x20(%rbp),%r13
mov    -0x28(%rbp),%r14
mov    -0x30(%rbp),%r15
leaveq 
retq   
mov    %rbx,-0x70(%rbp)
mov    %r13,%rbx
mov    %rbx,%r11
jmp    27e71 <Fax3DecodeRLE+0x221>
test   %r8d,%r8d
je     27eb9 <Fax3DecodeRLE+0x269>
mov    %rdi,%r8
mov    %r15,%rcx
and    $0xfff,%ecx
mov    %ecx,%edi
movzbl 0x1(%rax,%rdi,8),%ecx
shr    %cl,%r15d
sub    %ecx,%r8d
movzbl (%rax,%rdi,8),%ecx
cmp    $0xa,%cl
jbe    27f87 <Fax3DecodeRLE+0x337>
cmp    $0xb,%cl
jne    28038 <Fax3DecodeRLE+0x3e8>
movslq 0x4(%rax,%rdi,8),%rcx
add    %ecx,%ebx
add    %ecx,%r11d
mov    $0xc,%edi
cmp    $0xb,%r8d
jg     27e36 <Fax3DecodeRLE+0x1e6>
cmp    %r10,%r14
jae    27e2a <Fax3DecodeRLE+0x1da>
movzbl (%r14),%ecx
movzbl (%rcx,%rsi,1),%ecx
mov    %r8,%r13
mov    %rcx,%r8
mov    %r13,%rcx
shl    %cl,%r8d
mov    %rcx,%r13
or     %r8d,%r15d
lea    0x1(%r14),%r8
lea    0x8(%r13),%ecx
cmp    $0xb,%ecx
jle    2804f <Fax3DecodeRLE+0x3ff>
mov    %r8,%r14
mov    %rcx,%r8
xor    %r13d,%r13d
jmp    27e36 <Fax3DecodeRLE+0x1e6>
mov    %r13,%r11
mov    -0x80(%rbp),%rdx
mov    %r15,-0xb0(%rbp)
mov    %r14,-0xa8(%rbp)
mov    %rdx,%r13
mov    %r11,%r15
mov    -0x98(%rbp),%r14
mov    0x90(%r14),%edx
lea    0x2dec4(%rip),%rdi        # 55da6 <module.80>
mov    -0x90(%rbp),%rsi
mov    %rbx,%rcx
callq  22530 <Fax3PrematureEOF>
test   %r15d,%r15d
je     27efe <Fax3DecodeRLE+0x2ae>
mov    %r15d,0x0(%r13)
add    $0x4,%r13
cmp    %r12d,%ebx
jne    28066 <Fax3DecodeRLE+0x416>
mov    -0xa8(%rbp),%rax
mov    -0xb0(%rbp),%r8
mov    -0x88(%rbp),%rsi
mov    -0x78(%rbp),%rdi
mov    -0x8(%rbp),%rbx
mov    -0x90(%rbp),%r15
mov    %r12,%rcx
mov    %r8,%r12
mov    %r13,%rdx
mov    %rax,%r13
callq  *0x58(%r14)
movl   $0x0,0x4c(%r14)
mov    %r12d,0x48(%r14)
mov    %ebx,0x50(%r14)
mov    0x388(%r15),%rax
sub    %r13,%rax
add    0x390(%r15),%rax
mov    %rax,0x390(%r15)
mov    %r13,0x388(%r15)
mov    -0x10(%rbp),%rbx
mov    -0x18(%rbp),%r12
mov    -0x20(%rbp),%r13
mov    -0x28(%rbp),%r14
mov    -0x30(%rbp),%r15
mov    $0xffffffffffffffff,%rax
leaveq 
retq   
cmp    $0x7,%cl
je     280ab <Fax3DecodeRLE+0x45b>
cmp    $0x9,%cl
je     27e62 <Fax3DecodeRLE+0x212>
mov    -0x98(%rbp),%rax
mov    0x90(%rax),%eax
lea    0x2ddf9(%rip),%rdi        # 55da6 <module.80>
mov    -0x90(%rbp),%rsi
mov    %rbx,%rcx
mov    %r8,-0x48(%rbp)
mov    %rdx,%r12
mov    %rax,%rdx
mov    %r11,%r13
callq  223c0 <Fax3Unexpected>
mov    %r12,%rdx
mov    %r13,%r11
mov    -0x48(%rbp),%r13
mov    -0x78(%rbp),%rdi
mov    -0x8(%rbp),%rax
mov    -0xb0(%rbp),%r12
mov    %rax,-0x8(%rbp)
test   %r11d,%r11d
je     27ff2 <Fax3DecodeRLE+0x3a2>
mov    %r11d,(%rdx)
add    $0x4,%rdx
cmp    %r12d,%ebx
jne    280de <Fax3DecodeRLE+0x48e>
mov    -0x70(%rbp),%rbx
mov    -0x88(%rbp),%rsi
mov    -0x98(%rbp),%rax
mov    %r12,%rcx
mov    %rax,%r12
callq  *0x58(%r12)
mov    -0x40(%rbp),%rax
test   %eax,%eax
jg     27d5f <Fax3DecodeRLE+0x10f>
mov    -0x50(%rbp),%rax
test   %eax,%eax
jg     2813f <Fax3DecodeRLE+0x4ef>
mov    %r13,%r8
jmpq   27d70 <Fax3DecodeRLE+0x120>
cmp    $0xc,%cl
jne    27f99 <Fax3DecodeRLE+0x349>
mov    %r8,%r13
mov    -0x78(%rbp),%rdi
mov    $0x1,%eax
jmp    27fe2 <Fax3DecodeRLE+0x392>
cmp    %r10,%r8
jb     2815d <Fax3DecodeRLE+0x50d>
mov    %r8,%r14
mov    %rdi,%r8
xor    %r13d,%r13d
jmpq   27e36 <Fax3DecodeRLE+0x1e6>
mov    0x90(%r14),%edx
mov    -0x90(%rbp),%r15
mov    %r15,%rsi
mov    %rbx,%rcx
mov    %r12,%r8
lea    0x2dd22(%rip),%rdi        # 55da6 <module.80>
callq  224a0 <Fax3BadLength>
mov    -0xa8(%rbp),%rax
mov    -0xb0(%rbp),%r8
mov    -0x88(%rbp),%rsi
mov    -0x78(%rbp),%rdi
mov    -0x8(%rbp),%rdx
jmpq   28189 <Fax3DecodeRLE+0x539>
add    0x4(%rax,%rdi,8),%r11d
mov    %r11d,(%rdx)
lea    0x4(%rdx),%rcx
add    0x4(%rax,%rdi,8),%ebx
cmp    %r12d,%ebx
jge    281a8 <Fax3DecodeRLE+0x558>
mov    %rcx,-0x80(%rbp)
mov    %rdx,-0x68(%rbp)
mov    $0xd,%edx
mov    -0x78(%rbp),%rdi
mov    -0x8(%rbp),%rax
jmpq   281d6 <Fax3DecodeRLE+0x586>
mov    -0x98(%rbp),%r9
mov    0x90(%r9),%r10d
lea    0x2dcb3(%rip),%rax        # 55da6 <module.80>
mov    -0x90(%rbp),%rsi
mov    %rbx,%rcx
mov    %r12,%r8
mov    %r13,-0x48(%rbp)
mov    %r15,-0x38(%rbp)
mov    %r14,-0x80(%rbp)
mov    %r9,%r13
mov    %rdi,%r14
mov    %rax,%rdi
mov    %rdx,%r15
mov    %r10,%rdx
callq  224a0 <Fax3BadLength>
mov    %r15,%rdx
mov    -0x70(%rbp),%r8
mov    -0x88(%rbp),%rsi
mov    -0x80(%rbp),%rdi
mov    -0x38(%rbp),%rcx
mov    -0x48(%rbp),%r9
jmpq   28266 <Fax3DecodeRLE+0x616>
mov    %r13,%rcx
and    $0xf,%ecx
shr    %cl,%r15d
and    $0xfffffff0,%r13d
test   %r13d,%r13d
je     28297 <Fax3DecodeRLE+0x647>
mov    %r13,%r8
jmpq   27d70 <Fax3DecodeRLE+0x120>
movzbl (%r8),%edi
movzbl (%rsi,%rdi,1),%edi
shl    %cl,%edi
or     %edi,%r15d
add    $0x2,%r14
lea    0x10(%r13),%r8d
xor    %r13d,%r13d
jmpq   27e36 <Fax3DecodeRLE+0x1e6>
cmp    %r13,%rsi
jae    2818e <Fax3DecodeRLE+0x53e>
add    $0xfffffffffffffffc,%r13
movslq 0x0(%r13),%rcx
sub    %ecx,%ebx
cmp    %r12d,%ebx
jg     2817a <Fax3DecodeRLE+0x52a>
cmp    %r12d,%ebx
jl     282af <Fax3DecodeRLE+0x65f>
cmp    %r12d,%ebx
jg     282e5 <Fax3DecodeRLE+0x695>
mov    %rdx,%rbx
jmpq   27f2b <Fax3DecodeRLE+0x2db>
mov    %rcx,%rdx
mov    %r13,%r11
mov    %r8,%r13
mov    -0x78(%rbp),%rdi
mov    -0x8(%rbp),%rax
jmpq   27fe2 <Fax3DecodeRLE+0x392>
cmp    $0x8,%cl
je     282fd <Fax3DecodeRLE+0x6ad>
cmp    $0xa,%cl
jne    28210 <Fax3DecodeRLE+0x5c0>
movslq 0x4(%r9,%r11,8),%rcx
add    %ecx,%ebx
add    %ecx,%r13d
cmp    $0xc,%r8d
jle    2833f <Fax3DecodeRLE+0x6ef>
mov    %r15,%rcx
and    $0x1fff,%ecx
mov    %ecx,%r11d
movzbl 0x1(%r9,%r11,8),%ecx
shr    %cl,%r15d
sub    %ecx,%r8d
movzbl (%r9,%r11,8),%ecx
cmp    $0xa,%cl
jbe    281be <Fax3DecodeRLE+0x56e>
cmp    $0xb,%cl
je     281cc <Fax3DecodeRLE+0x57c>
cmp    $0xc,%cl
je     28377 <Fax3DecodeRLE+0x727>
mov    -0x98(%rbp),%rcx
mov    0x90(%rcx),%edx
lea    0x2db82(%rip),%rdi        # 55da6 <module.80>
mov    -0x90(%rbp),%rsi
mov    %rbx,%rcx
mov    %r8,-0x68(%rbp)
mov    %rax,%r12
callq  223c0 <Fax3Unexpected>
mov    %r12,%rax
mov    %r13,%r11
mov    -0x80(%rbp),%rdx
mov    -0x68(%rbp),%r13
mov    -0x78(%rbp),%rdi
mov    -0xb0(%rbp),%r12
jmpq   27fe2 <Fax3DecodeRLE+0x392>
cmp    %rdx,%rsi
jae    2826b <Fax3DecodeRLE+0x61b>
add    $0xfffffffffffffffc,%rdx
movslq (%rdx),%rax
sub    %eax,%ebx
cmp    %r12d,%ebx
jg     28258 <Fax3DecodeRLE+0x608>
cmp    %r12d,%ebx
jl     2838b <Fax3DecodeRLE+0x73b>
cmp    %r12d,%ebx
jg     283cf <Fax3DecodeRLE+0x77f>
mov    %r13,%rax
mov    %r9,%r13
mov    %r8,%rbx
mov    %rcx,%r15
mov    %r14,%r9
mov    %rdi,%r14
mov    %r9,%rdi
jmpq   2800d <Fax3DecodeRLE+0x3bd>
mov    %r14,%rax
and    $0x1,%rax
test   %rax,%rax
jne    283f7 <Fax3DecodeRLE+0x7a7>
xor    %r8d,%r8d
jmpq   27d70 <Fax3DecodeRLE+0x120>
test   %ebx,%ebx
jns    282b5 <Fax3DecodeRLE+0x665>
xor    %ebx,%ebx
mov    %r13,%rcx
sub    %rsi,%rcx
and    $0x4,%rcx
test   %rcx,%rcx
jle    282d0 <Fax3DecodeRLE+0x680>
movl   $0x0,0x0(%r13)
add    $0x4,%r13
mov    %r12,%rcx
sub    %ebx,%ecx
mov    %ecx,0x0(%r13)
add    $0x4,%r13
mov    %rdx,%rbx
jmpq   27f2b <Fax3DecodeRLE+0x2db>
mov    %r12d,0x0(%r13)
movl   $0x0,0x4(%r13)
add    $0x8,%r13
mov    %rdx,%rbx
jmpq   27f2b <Fax3DecodeRLE+0x2db>
add    0x4(%r9,%r11,8),%r13d
mov    -0x80(%rbp),%rcx
mov    %r13d,(%rcx)
mov    -0x68(%rbp),%rcx
lea    0x8(%rcx),%rdx
add    0x4(%r9,%r11,8),%ebx
cmp    %r12d,%ebx
jge    28403 <Fax3DecodeRLE+0x7b3>
test   %r13d,%r13d
je     28412 <Fax3DecodeRLE+0x7c2>
mov    -0xa0(%rbp),%rax
mov    $0xc,%edi
xor    %r13d,%r13d
mov    %r13,%r11
jmpq   27e71 <Fax3DecodeRLE+0x221>
cmp    %r14,%r10
jbe    2842f <Fax3DecodeRLE+0x7df>
movzbl (%r14),%ecx
movzbl (%rsi,%rcx,1),%r11d
mov    %r8,%rcx
shl    %cl,%r11d
or     %r11d,%r15d
lea    0x1(%r14),%r8
lea    0x8(%rcx),%r11d
cmp    $0xc,%r11d
jle    28440 <Fax3DecodeRLE+0x7f0>
mov    %r8,%r14
mov    %r11,%r8
jmpq   281e0 <Fax3DecodeRLE+0x590>
mov    %r13,%r11
mov    %r8,%r13
mov    -0x80(%rbp),%rdx
mov    $0x1,%eax
jmpq   27fe2 <Fax3DecodeRLE+0x392>
test   %ebx,%ebx
jns    28391 <Fax3DecodeRLE+0x741>
xor    %ebx,%ebx
mov    %rdx,%rax
sub    %rsi,%rax
and    $0x4,%rax
test   %rax,%rax
jle    283aa <Fax3DecodeRLE+0x75a>
movl   $0x0,(%rdx)
add    $0x4,%rdx
mov    %r12,%rax
sub    %ebx,%eax
mov    %eax,(%rdx)
add    $0x4,%rdx
mov    %r13,%rax
mov    %r9,%r13
mov    %r8,%rbx
mov    %rcx,%r15
mov    %r14,%r9
mov    %rdi,%r14
mov    %r9,%rdi
jmpq   2800d <Fax3DecodeRLE+0x3bd>
mov    %r12d,(%rdx)
movl   $0x0,0x4(%rdx)
add    $0x8,%rdx
mov    %r13,%rax
mov    %r9,%r13
mov    %r8,%rbx
mov    %rcx,%r15
mov    %r14,%r9
mov    %rdi,%r14
mov    %r9,%rdi
jmpq   2800d <Fax3DecodeRLE+0x3bd>
add    $0x1,%r14
xor    %r8d,%r8d
jmpq   27d70 <Fax3DecodeRLE+0x120>
mov    %r8,%r13
xor    %r11d,%r11d
mov    -0x78(%rbp),%rdi
jmpq   27fe2 <Fax3DecodeRLE+0x392>
mov    (%rcx),%eax
test   %eax,%eax
je     28450 <Fax3DecodeRLE+0x800>
mov    -0xa0(%rbp),%rax
mov    $0xc,%edi
xor    %r13d,%r13d
mov    %r13,%r11
jmpq   27e71 <Fax3DecodeRLE+0x221>
test   %r8d,%r8d
je     27eb2 <Fax3DecodeRLE+0x262>
mov    %rdx,%r8
jmpq   281e0 <Fax3DecodeRLE+0x590>
cmp    %r8,%r10
ja     2846a <Fax3DecodeRLE+0x81a>
mov    %r8,%r14
mov    %rdx,%r8
jmpq   281e0 <Fax3DecodeRLE+0x590>
mov    %rcx,%rdx
mov    -0xa0(%rbp),%rax
mov    $0xc,%edi
xor    %r13d,%r13d
mov    %r13,%r11
jmpq   27e71 <Fax3DecodeRLE+0x221>
movzbl (%r8),%r8d
movzbl (%rsi,%r8,1),%r8d
xchg   %rcx,%r11
shl    %cl,%r8d
or     %r8d,%r15d
add    $0x2,%r14
lea    0x10(%r11),%r8d
jmpq   281e0 <Fax3DecodeRLE+0x590>
nopl   0x0(%rax)

0000000000028490 <TIFFFlush>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    $0x1,%eax
movslq 0xc(%rdi),%rcx
test   %ecx,%ecx
jne    284a7 <TIFFFlush+0x17>
leaveq 
retq   
mov    %rdi,%rax
mov    %r15,-0x8(%rbp)
mov    %rdi,%r15
mov    %rax,%rdi
callq  84a0 <TIFFFlushData@plt>
test   %eax,%eax
jne    284c5 <TIFFFlush+0x35>
xor    %eax,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
mov    0x10(%r15),%eax
mov    %rax,%rcx
and    $0x200000,%ecx
test   %ecx,%ecx
jne    284f2 <TIFFFlush+0x62>
mov    0x10(%r15),%eax
and    $0x200008,%eax
test   %eax,%eax
jne    285b2 <TIFFFlush+0x122>
mov    $0x1,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
and    $0x8,%eax
test   %eax,%eax
jne    284d6 <TIFFFlush+0x46>
movslq 0xc(%r15),%rax
cmp    $0x2,%eax
jne    284d6 <TIFFFlush+0x46>
movq   $0x0,-0x18(%rbp)
movq   $0x0,-0x10(%rbp)
mov    %r15,%rdi
callq  8890 <TIFFIsTiled@plt>
test   %eax,%eax
jne    285ca <TIFFFlush+0x13a>
xor    %eax,%eax
mov    $0x111,%esi
mov    %r15,%rdi
lea    -0x18(%rbp),%rdx
callq  8230 <TIFFGetField@plt>
test   %eax,%eax
je     284d6 <TIFFFlush+0x46>
xor    %eax,%eax
mov    $0x117,%esi
mov    %r15,%rdi
lea    -0x10(%rbp),%rdx
callq  8230 <TIFFGetField@plt>
test   %eax,%eax
je     284d6 <TIFFFlush+0x46>
mov    0xe4(%r15),%ecx
mov    -0x18(%rbp),%r8
mov    %r15,%rdi
mov    $0x10,%edx
mov    $0x111,%esi
callq  85c0 <_TIFFRewriteField@plt>
test   %eax,%eax
je     284d6 <TIFFFlush+0x46>
mov    0xe4(%r15),%ecx
mov    -0x10(%rbp),%r8
mov    %r15,%rdi
mov    $0x117,%esi
mov    $0x10,%edx
callq  85c0 <_TIFFRewriteField@plt>
test   %eax,%eax
je     284d6 <TIFFFlush+0x46>
mov    0x10(%r15),%eax
and    $0xffdfffbf,%eax
mov    %eax,0x10(%r15)
mov    $0x1,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
mov    %r15,%rdi
callq  80a0 <TIFFRewriteDirectory@plt>
test   %eax,%eax
jne    28662 <TIFFFlush+0x1d2>
xor    %eax,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
xor    %eax,%eax
mov    $0x144,%esi
mov    %r15,%rdi
lea    -0x18(%rbp),%rdx
callq  8230 <TIFFGetField@plt>
test   %eax,%eax
je     284d6 <TIFFFlush+0x46>
xor    %eax,%eax
mov    $0x145,%esi
mov    %r15,%rdi
lea    -0x10(%rbp),%rdx
callq  8230 <TIFFGetField@plt>
test   %eax,%eax
je     284d6 <TIFFFlush+0x46>
mov    0xe4(%r15),%ecx
mov    -0x18(%rbp),%r8
mov    %r15,%rdi
mov    $0x10,%edx
mov    $0x144,%esi
callq  85c0 <_TIFFRewriteField@plt>
test   %eax,%eax
je     284d6 <TIFFFlush+0x46>
mov    0xe4(%r15),%ecx
mov    -0x10(%rbp),%r8
mov    %r15,%rdi
mov    $0x145,%esi
mov    $0x10,%edx
callq  85c0 <_TIFFRewriteField@plt>
test   %eax,%eax
je     284d6 <TIFFFlush+0x46>
mov    0x10(%r15),%eax
and    $0xffdfffbf,%eax
mov    %eax,0x10(%r15)
mov    $0x1,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
mov    $0x1,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
nopl   (%rax)

0000000000028670 <TIFFFlushData>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    0x10(%rdi),%eax
mov    %rax,%rcx
and    $0x40,%ecx
test   %ecx,%ecx
jne    2868c <TIFFFlushData+0x1c>
mov    $0x1,%eax
leaveq 
retq   
mov    %rax,%rcx
and    $0x1000,%ecx
test   %ecx,%ecx
jne    286a0 <TIFFFlushData+0x30>
callq  86e0 <TIFFFlushData1@plt>
leaveq 
retq   
and    $0xffffefff,%eax
mov    %eax,0x10(%rdi)
mov    0x2f0(%rdi),%rax
mov    %rdi,%rcx
mov    %rdi,-0x8(%rbp)
mov    %rcx,%rdi
callq  *%rax
test   %eax,%eax
je     286c5 <TIFFFlushData+0x55>
mov    -0x8(%rbp),%rdi
jmp    28699 <TIFFFlushData+0x29>
xor    %eax,%eax
leaveq 
retq   
nopl   0x0(%rax)

00000000000286d0 <TIFFReadRGBAImage>:
push   %rbp
mov    %rsp,%rbp
mov    %r8,%r9
mov    $0x4,%r8d
callq  8710 <TIFFReadRGBAImageOriented@plt>
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nop

00000000000286f0 <TIFFReadRGBAImageOriented>:
push   %rbp
mov    %rsp,%rbp
sub    $0x4c0,%rsp
mov    %r13,-0x20(%rbp)
mov    %r14,-0x28(%rbp)
mov    %r15,-0x30(%rbp)
mov    %rdx,-0x10(%rbp)
mov    %rsi,-0x18(%rbp)
mov    %rcx,-0x8(%rbp)
mov    %rdi,%r13
mov    %r8,%r14
mov    %r9,%r15
lea    -0x4c0(%rbp),%rdi
lea    0x45e12(%rip),%rsi        # 6e53c <display_sRGB+0x54>
mov    $0x400,%edx
callq  8720 <memcpy@plt>
mov    %r13,%rdi
lea    -0x4c0(%rbp),%rsi
callq  8850 <TIFFRGBAImageOK@plt>
test   %eax,%eax
jne    28786 <TIFFReadRGBAImageOriented+0x96>
mov    %r13,%rdi
mov    0x3b8(%rdi),%r14
callq  85f0 <TIFFFileName@plt>
mov    %rax,%rsi
mov    %r14,%rdi
lea    0x461d9(%rip),%rdx        # 6e93c <display_sRGB+0x454>
xor    %r13d,%r13d
mov    %r13,%rax
lea    -0x4c0(%rbp),%rcx
callq  8a00 <TIFFErrorExt@plt>
mov    %r13,%rax
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r13
leaveq 
retq   
mov    %r15,%rdx
lea    -0xc0(%rbp),%r15
mov    %r15,%rdi
mov    %r13,%rsi
lea    -0x4c0(%rbp),%rcx
callq  8bf0 <TIFFRGBAImageBegin@plt>
test   %eax,%eax
je     28747 <TIFFReadRGBAImageOriented+0x57>
mov    %r14w,-0x9e(%rbp)
mov    -0xa8(%rbp),%ecx
mov    -0x10(%rbp),%rax
sub    %ecx,%eax
mov    -0x18(%rbp),%rdx
imul   %edx,%eax
mov    %eax,%eax
mov    -0x8(%rbp),%rsi
lea    (%rsi,%rax,4),%rsi
mov    %r15,%rdi
callq  86a0 <TIFFRGBAImageGet@plt>
mov    %r15,%rdi
mov    %rax,%r13
callq  87b0 <TIFFRGBAImageEnd@plt>
mov    %r13,%rax
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r13
leaveq 
retq   
nop

00000000000287f0 <TIFFReadRGBAStrip>:
push   %rbp
mov    %rsp,%rbp
xor    %ecx,%ecx
callq  8990 <TIFFReadRGBAStripExt@plt>
leaveq 
retq   
nopl   (%rax)

0000000000028800 <TIFFReadRGBATile>:
push   %rbp
mov    %rsp,%rbp
xor    %r8d,%r8d
callq  83a0 <TIFFReadRGBATileExt@plt>
leaveq 
retq   
xchg   %ax,%ax

0000000000028810 <TIFFReadRGBAStripExt>:
push   %rbp
mov    %rsp,%rbp
sub    $0x4c0,%rsp
mov    %r15,-0x10(%rbp)
mov    %rsi,-0x20(%rbp)
mov    %rcx,-0x18(%rbp)
mov    %rdx,-0x8(%rbp)
mov    %rdi,%r15
lea    -0x4b8(%rbp),%rdi
lea    0x46103(%rip),%rsi        # 6e93f <display_sRGB+0x457>
mov    $0x400,%edx
callq  8720 <memcpy@plt>
mov    %r15,%rdi
callq  8890 <TIFFIsTiled@plt>
test   %eax,%eax
jne    288bd <TIFFReadRGBAStripExt+0xad>
xor    %eax,%eax
mov    $0x116,%esi
lea    -0x24(%rbp),%rdx
mov    %r15,%rdi
callq  8390 <TIFFGetFieldDefaulted@plt>
mov    -0x24(%rbp),%ecx
mov    -0x20(%rbp),%rax
xor    %edx,%edx
div    %ecx
test   %edx,%edx
jne    288e8 <TIFFReadRGBAStripExt+0xd8>
mov    %r15,%rdi
lea    -0x4b8(%rbp),%rsi
callq  8850 <TIFFRGBAImageOK@plt>
test   %eax,%eax
jne    28913 <TIFFReadRGBAStripExt+0x103>
mov    %r15,%rdi
mov    0x3b8(%rdi),%r15
callq  85f0 <TIFFFileName@plt>
mov    %rax,%rsi
mov    %r15,%rdi
lea    0x46095(%rip),%rdx        # 6e93c <display_sRGB+0x454>
xor    %eax,%eax
lea    -0x4b8(%rbp),%rcx
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x10(%rbp),%r15
leaveq 
retq   
mov    %r15,%rdi
mov    0x3b8(%rdi),%r15
callq  85f0 <TIFFFileName@plt>
mov    %rax,%rsi
mov    %r15,%rdi
lea    0x46466(%rip),%rdx        # 6ed3f <display_sRGB+0x857>
xor    %eax,%eax
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x10(%rbp),%r15
leaveq 
retq   
mov    %r15,%rdi
mov    0x3b8(%rdi),%r15
callq  85f0 <TIFFFileName@plt>
mov    %rax,%rsi
mov    %r15,%rdi
lea    0x4646a(%rip),%rdx        # 6ed6e <display_sRGB+0x886>
xor    %eax,%eax
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x10(%rbp),%r15
leaveq 
retq   
lea    -0xb8(%rbp),%rdi
mov    %r15,%rsi
lea    -0x4b8(%rbp),%rcx
mov    -0x18(%rbp),%rdx
callq  8bf0 <TIFFRGBAImageBegin@plt>
test   %eax,%eax
je     2888b <TIFFReadRGBAStripExt+0x7b>
mov    -0x24(%rbp),%ecx
mov    -0x20(%rbp),%rsi
lea    (%rsi,%rcx,1),%edx
mov    -0xa0(%rbp),%eax
cmp    %edx,%eax
jae    2894e <TIFFReadRGBAStripExt+0x13e>
sub    %esi,%eax
mov    %rax,%rcx
mov    %esi,-0x30(%rbp)
movl   $0x0,-0x2c(%rbp)
mov    -0xa4(%rbp),%edx
lea    -0xb8(%rbp),%r15
mov    %r15,%rdi
mov    -0x8(%rbp),%rsi
callq  86a0 <TIFFRGBAImageGet@plt>
mov    %r15,%rdi
mov    %rax,%r15
callq  87b0 <TIFFRGBAImageEnd@plt>
mov    %r15,%rax
mov    -0x10(%rbp),%r15
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)

0000000000028990 <TIFFReadRGBATileExt>:
push   %rbp
mov    %rsp,%rbp
sub    $0x4e0,%rsp
mov    %r15,-0x20(%rbp)
mov    %rsi,-0x40(%rbp)
mov    %rdx,-0x38(%rbp)
mov    %r8,-0x30(%rbp)
mov    %rcx,-0x28(%rbp)
mov    %rdi,%r15
lea    -0x4d8(%rbp),%rdi
lea    0x463ea(%rip),%rsi        # 6edaa <display_sRGB+0x8c2>
mov    $0x400,%edx
callq  8720 <memcpy@plt>
mov    %r15,%rdi
callq  8890 <TIFFIsTiled@plt>
test   %eax,%eax
jne    28a01 <TIFFReadRGBATileExt+0x71>
mov    %r15,%rdi
mov    0x3b8(%rdi),%r15
callq  85f0 <TIFFFileName@plt>
mov    %rax,%rsi
mov    %r15,%rdi
lea    0x467b8(%rip),%rdx        # 6f1aa <display_sRGB+0xcc2>
xor    %eax,%eax
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x20(%rbp),%r15
leaveq 
retq   
xor    %eax,%eax
mov    $0x142,%esi
lea    -0x48(%rbp),%rdx
mov    %r15,%rdi
callq  8390 <TIFFGetFieldDefaulted@plt>
mov    $0x143,%esi
lea    -0x44(%rbp),%rdx
xor    %eax,%eax
mov    %r15,%rdi
callq  8390 <TIFFGetFieldDefaulted@plt>
mov    -0x48(%rbp),%ecx
mov    -0x40(%rbp),%rax
xor    %edx,%edx
div    %ecx
test   %edx,%edx
jne    28a8a <TIFFReadRGBATileExt+0xfa>
mov    -0x44(%rbp),%ecx
xor    %edx,%edx
mov    -0x38(%rbp),%rax
div    %ecx
test   %edx,%edx
jne    28a8a <TIFFReadRGBATileExt+0xfa>
mov    %r15,%rdi
lea    -0x4d8(%rbp),%rsi
callq  8850 <TIFFRGBAImageOK@plt>
test   %eax,%eax
jne    28ab5 <TIFFReadRGBATileExt+0x125>
mov    %r15,%rdi
mov    0x3b8(%rdi),%r15
callq  85f0 <TIFFFileName@plt>
mov    %rax,%rsi
mov    %r15,%rdi
lea    0x45ec8(%rip),%rdx        # 6e93c <display_sRGB+0x454>
xor    %eax,%eax
lea    -0x4d8(%rbp),%rcx
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x20(%rbp),%r15
leaveq 
retq   
mov    %r15,%rdi
mov    0x3b8(%rdi),%r15
callq  85f0 <TIFFFileName@plt>
mov    %rax,%rsi
mov    %r15,%rdi
lea    0x46735(%rip),%rdx        # 6f1db <display_sRGB+0xcf3>
xor    %eax,%eax
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x20(%rbp),%r15
leaveq 
retq   
lea    -0xd8(%rbp),%rdi
mov    %r15,%rsi
lea    -0x4d8(%rbp),%rcx
mov    -0x30(%rbp),%rdx
callq  8bf0 <TIFFRGBAImageBegin@plt>
test   %eax,%eax
je     28a58 <TIFFReadRGBATileExt+0xc8>
mov    -0x44(%rbp),%r15d
mov    -0x38(%rbp),%rsi
lea    (%rsi,%r15,1),%ecx
mov    -0xc0(%rbp),%eax
cmp    %ecx,%eax
jae    28aee <TIFFReadRGBATileExt+0x15e>
sub    %esi,%eax
mov    %rax,%r15
mov    -0x48(%rbp),%eax
mov    -0x40(%rbp),%rdx
lea    (%rdx,%rax,1),%edi
mov    -0xc4(%rbp),%ecx
cmp    %edi,%ecx
jae    28b07 <TIFFReadRGBATileExt+0x177>
sub    %edx,%ecx
mov    %rcx,%rax
mov    %esi,-0x50(%rbp)
mov    %edx,-0x4c(%rbp)
lea    -0xd8(%rbp),%rdi
mov    -0x28(%rbp),%rsi
mov    %rax,%rdx
mov    %r15,%rcx
mov    %r14,-0x38(%rbp)
mov    %rax,%r14
callq  86a0 <TIFFRGBAImageGet@plt>
mov    %rax,-0x8(%rbp)
lea    -0xd8(%rbp),%rdi
callq  87b0 <TIFFRGBAImageEnd@plt>
mov    %r14d,%ecx
mov    %rcx,%rdx
shl    $0x2,%rdx
mov    %rdx,-0x40(%rbp)
mov    -0x48(%rbp),%eax
cmp    %r14d,%eax
je     28b6e <TIFFReadRGBATileExt+0x1de>
mov    %rbx,-0x10(%rbp)
mov    %r12,-0x18(%rbp)
mov    %r13,-0x30(%rbp)
mov    %rcx,%r13
xor    %r12d,%r12d
mov    -0x28(%rbp),%rbx
mov    %r12,%rax
jmpq   28bf4 <TIFFReadRGBATileExt+0x264>
cmp    -0x44(%rbp),%r15d
je     28bfb <TIFFReadRGBATileExt+0x26b>
mov    %rbx,-0x10(%rbp)
mov    %r12,-0x18(%rbp)
mov    %r13,-0x30(%rbp)
mov    %rcx,%r13
xor    %r12d,%r12d
mov    -0x28(%rbp),%rbx
mov    %r12,%rax
jmp    28bf4 <TIFFReadRGBATileExt+0x264>
mov    -0x44(%rbp),%ecx
sub    %eax,%ecx
add    $0xffffffff,%ecx
imul   -0x48(%rbp),%ecx
mov    %ecx,%ecx
lea    (%rbx,%rcx,4),%rdi
mov    %r15,%rcx
sub    %eax,%ecx
add    $0xffffffff,%ecx
imul   %r14d,%ecx
mov    %ecx,%ecx
lea    (%rbx,%rcx,4),%rsi
mov    %rax,%r12
callq  8a50 <memmove@plt>
mov    -0x44(%rbp),%eax
sub    %r12d,%eax
lea    -0x1(%rax),%ecx
mov    -0x48(%rbp),%eax
imul   %eax,%ecx
mov    %ecx,%ecx
lea    (%rbx,%rcx,4),%rcx
lea    (%rcx,%r13,4),%rdi
sub    %r14d,%eax
mov    %eax,%edx
shl    $0x2,%rdx
xor    %esi,%esi
callq  88e0 <_TIFFmemset@plt>
lea    0x1(%r12),%eax
mov    -0x40(%rbp),%rdx
xor    %r12d,%r12d
cmp    %eax,%r15d
ja     28b93 <TIFFReadRGBATileExt+0x203>
jmp    28c2b <TIFFReadRGBATileExt+0x29b>
mov    -0x8(%rbp),%rax
mov    -0x38(%rbp),%r14
mov    -0x20(%rbp),%r15
leaveq 
retq   
sub    %r15d,%eax
add    $0xffffffff,%eax
mov    -0x48(%rbp),%edx
imul   %edx,%eax
mov    %eax,%eax
lea    (%rbx,%rax,4),%rdi
shl    $0x2,%rdx
mov    %r12,%rsi
callq  88e0 <_TIFFmemset@plt>
add    $0x1,%r15d
mov    -0x44(%rbp),%eax
cmp    %r15d,%eax
ja     28c09 <TIFFReadRGBATileExt+0x279>
mov    -0x30(%rbp),%r13
mov    -0x18(%rbp),%r12
mov    -0x10(%rbp),%rbx
mov    -0x8(%rbp),%rax
mov    -0x38(%rbp),%r14
mov    -0x20(%rbp),%r15
leaveq 
retq   
nopl   (%rax)

0000000000028c50 <TIFFRGBAImageOK>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
movslq 0x2b8(%rdi),%rax
test   %eax,%eax
jne    28c78 <TIFFRGBAImageOK+0x28>
mov    %rsi,%rdi
xor    %eax,%eax
lea    0x465b3(%rip),%rsi        # 6f222 <display_sRGB+0xd3a>
callq  8c10 <sprintf@plt>
xor    %eax,%eax
leaveq 
retq   
movzwl 0x74(%rdi),%edx
lea    -0x1(%rdx),%eax
cmp    $0xf,%eax
ja     28c94 <TIFFRGBAImageOK+0x44>
lea    0x45531(%rip),%rcx        # 6e1bc <TIFFFaxBlackTable+0x10000>
movslq (%rcx,%rax,4),%rax
add    %rcx,%rax
jmpq   *%rax
mov    %rsi,%rdi
xor    %eax,%eax
lea    0x465b8(%rip),%rsi        # 6f258 <display_sRGB+0xd70>
callq  8c10 <sprintf@plt>
xor    %eax,%eax
leaveq 
retq   
movzwl 0x76(%rdi),%eax
cmp    $0x3,%ax
je     28d9d <TIFFRGBAImageOK+0x14d>
movzwl 0x82(%rdi),%r9d
movzwl 0xd4(%rdi),%eax
sub    %eax,%r9d
xor    %eax,%eax
mov    $0x106,%ecx
lea    -0x1c(%rbp),%rdx
mov    %rdi,%r8
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rdi,-0x18(%rbp)
mov    %r8,%rdi
mov    %rsi,%r14
mov    %rcx,%rsi
mov    %r9,%r15
callq  8230 <TIFFGetField@plt>
test   %eax,%eax
je     28db2 <TIFFRGBAImageOK+0x162>
lea    0x46629(%rip),%rdx        # 6f32c <display_sRGB+0xe44>
mov    $0x1,%eax
movzwl -0x1c(%rbp),%ecx
cmp    $0x4,%cx
jbe    28dea <TIFFRGBAImageOK+0x19a>
cmp    $0x7,%cx
jbe    28e23 <TIFFRGBAImageOK+0x1d3>
lea    0x4674c(%rip),%r8        # 6f473 <display_sRGB+0xf8b>
cmp    $0x804b,%cx
jbe    28e3d <TIFFRGBAImageOK+0x1ed>
lea    0x46694(%rip),%r9        # 6f3cd <display_sRGB+0xee5>
mov    $0x8774,%edi
cmp    $0x804c,%cx
je     28e6b <TIFFRGBAImageOK+0x21b>
cmp    $0x804d,%cx
jne    28e47 <TIFFRGBAImageOK+0x1f7>
mov    -0x18(%rbp),%rsi
movzwl 0x78(%rsi),%ecx
cmp    $0x8774,%cx
jne    28e88 <TIFFRGBAImageOK+0x238>
movzwl 0xaa(%rsi),%ecx
cmp    $0x1,%cx
jne    28ebc <TIFFRGBAImageOK+0x26c>
movzwl 0x82(%rsi),%ecx
cmp    $0x3,%cx
jne    28ee0 <TIFFRGBAImageOK+0x290>
cmp    $0x3,%r15d
jne    28ee0 <TIFFRGBAImageOK+0x290>
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
mov    %rsi,%rdi
xor    %eax,%eax
lea    0x464e0(%rip),%rsi        # 6f289 <display_sRGB+0xda1>
callq  8c10 <sprintf@plt>
xor    %eax,%eax
leaveq 
retq   
cmp    $0x1,%r15d
je     28f00 <TIFFRGBAImageOK+0x2b0>
cmp    $0x3,%r15d
je     28f0b <TIFFRGBAImageOK+0x2bb>
mov    %r14,%rdi
xor    %eax,%eax
lea    0x464f5(%rip),%rsi        # 6f2c7 <display_sRGB+0xddf>
lea    0x456f3(%rip),%rdx        # 6e4cc <photoTag>
callq  8c10 <sprintf@plt>
xor    %eax,%eax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
cmp    $0x1,%cx
jbe    28f16 <TIFFRGBAImageOK+0x2c6>
cmp    $0x2,%cx
je     28f2e <TIFFRGBAImageOK+0x2de>
cmp    $0x3,%cx
jne    28e47 <TIFFRGBAImageOK+0x1f7>
mov    -0x18(%rbp),%rdi
movzwl 0xaa(%rdi),%esi
cmp    $0x1,%si
je     28f42 <TIFFRGBAImageOK+0x2f2>
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
cmp    $0x5,%cx
je     28f5f <TIFFRGBAImageOK+0x30f>
cmp    $0x6,%cx
jne    28e47 <TIFFRGBAImageOK+0x1f7>
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
cmp    $0x8,%cx
je     28fac <TIFFRGBAImageOK+0x35c>
mov    %r14,%rdi
xor    %eax,%eax
lea    0x46672(%rip),%rsi        # 6f4c5 <display_sRGB+0xfdd>
lea    0x45672(%rip),%rdx        # 6e4cc <photoTag>
callq  8c10 <sprintf@plt>
xor    %eax,%eax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
mov    -0x18(%rbp),%rcx
movzwl 0x78(%rcx),%ecx
cmp    $0x8774,%cx
jne    28fe5 <TIFFRGBAImageOK+0x395>
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
cmp    $0x8775,%cx
je     28d67 <TIFFRGBAImageOK+0x117>
mov    %rdi,%rcx
mov    %r14,%rdi
mov    %r9,%rdx
xor    %eax,%eax
lea    0x46534(%rip),%rsi        # 6f3d9 <display_sRGB+0xef1>
mov    $0x8775,%r8d
callq  8c10 <sprintf@plt>
xor    %eax,%eax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
mov    %r14,%rdi
xor    %eax,%eax
lea    0x4653a(%rip),%rsi        # 6f402 <display_sRGB+0xf1a>
lea    0x46562(%rip),%rdx        # 6f431 <display_sRGB+0xf49>
callq  8c10 <sprintf@plt>
xor    %eax,%eax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
mov    %r14,%rdi
mov    %r15,%r9
xor    %eax,%eax
lea    0x46556(%rip),%rsi        # 6f445 <display_sRGB+0xf5d>
callq  8c10 <sprintf@plt>
xor    %eax,%eax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
movw   $0x1,-0x1c(%rbp)
jmpq   28cfc <TIFFRGBAImageOK+0xac>
movw   $0x2,-0x1c(%rbp)
jmpq   28cfc <TIFFRGBAImageOK+0xac>
test   %cx,%cx
je     28e04 <TIFFRGBAImageOK+0x1b4>
cmp    $0x1,%cx
je     28e04 <TIFFRGBAImageOK+0x1b4>
jmpq   28e47 <TIFFRGBAImageOK+0x1f7>
cmp    $0x2,%r15d
jle    29008 <TIFFRGBAImageOK+0x3b8>
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
movzwl 0x82(%rdi),%r9d
cmp    $0x1,%r9w
jne    2902f <TIFFRGBAImageOK+0x3df>
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
xor    %eax,%eax
mov    $0x14c,%esi
lea    -0x1a(%rbp),%rdx
mov    -0x18(%rbp),%r15
mov    %r15,%rdi
callq  8390 <TIFFGetFieldDefaulted@plt>
lea    0x463f7(%rip),%rsi        # 6f374 <display_sRGB+0xe8c>
movzwl -0x1a(%rbp),%ecx
cmp    $0x1,%cx
jne    29047 <TIFFRGBAImageOK+0x3f7>
movzwl 0x82(%r15),%ecx
cmp    $0x3,%cx
jbe    29064 <TIFFRGBAImageOK+0x414>
mov    $0x1,%eax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
mov    -0x18(%rbp),%r10
movzwl 0x82(%r10),%ecx
cmp    $0x3,%cx
jne    29081 <TIFFRGBAImageOK+0x431>
cmp    $0x3,%r15d
jne    29081 <TIFFRGBAImageOK+0x431>
movzwl 0x74(%r10),%ecx
cmp    $0x8,%cx
jne    29081 <TIFFRGBAImageOK+0x431>
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
mov    %rdi,%rcx
mov    %r14,%rdi
mov    %r9,%rdx
xor    %eax,%eax
lea    0x463b5(%rip),%rsi        # 6f3ac <display_sRGB+0xec4>
callq  8c10 <sprintf@plt>
xor    %eax,%eax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
mov    %r15,%rcx
mov    %r14,%rdi
xor    %eax,%eax
lea    0x46323(%rip),%rsi        # 6f33a <display_sRGB+0xe52>
lea    0x46347(%rip),%rdx        # 6f365 <display_sRGB+0xe7d>
callq  8c10 <sprintf@plt>
xor    %eax,%eax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
movzwl 0x74(%rdi),%esi
cmp    $0x7,%si
jbe    290c1 <TIFFRGBAImageOK+0x471>
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
mov    %r14,%rdi
xor    %eax,%eax
lea    0x46352(%rip),%rdx        # 6f3a5 <display_sRGB+0xebd>
callq  8c10 <sprintf@plt>
xor    %eax,%eax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
mov    %r14,%rdi
xor    %eax,%eax
lea    0x462bc(%rip),%rdx        # 6f32c <display_sRGB+0xe44>
callq  8c10 <sprintf@plt>
xor    %eax,%eax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
sub    $0x10,%rsp
lea    0x4642d(%rip),%r9        # 6f4b9 <display_sRGB+0xfd1>
movzwl 0x74(%r10),%edi
xor    %eax,%eax
lea    0x463e7(%rip),%rsi        # 6f481 <display_sRGB+0xf99>
movzwl 0x82(%r10),%ecx
mov    %r9,(%rsp)
mov    %edi,0x8(%rsp)
mov    %r14,%rdi
mov    %r15,%r9
callq  8c10 <sprintf@plt>
xor    %eax,%eax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
sub    $0x10,%rsp
mov    %esi,(%rsp)
mov    %r14,%rdi
mov    %rdx,%r8
xor    %eax,%eax
lea    0x46206(%rip),%rsi        # 6f2dd <display_sRGB+0xdf5>
lea    0x453ee(%rip),%rdx        # 6e4cc <photoTag>
callq  8c10 <sprintf@plt>
xor    %eax,%eax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
nop

00000000000290f0 <TIFFRGBAImageBegin>:
push   %rbp
mov    %rsp,%rbp
sub    $0x70,%rsp
mov    %rdi,-0x38(%rbp)
mov    %rsi,-0x28(%rbp)
mov    %rdx,-0x30(%rbp)
mov    %rsi,%rdi
mov    %rcx,%rsi
mov    %rsi,-0x8(%rbp)
callq  8850 <TIFFRGBAImageOK@plt>
test   %eax,%eax
jne    2911b <TIFFRGBAImageBegin+0x2b>
xor    %eax,%eax
leaveq 
retq   
mov    -0x38(%rbp),%rcx
movl   $0x0,0x88(%rcx)
movl   $0x0,0x8c(%rcx)
movq   $0x0,0x28(%rcx)
movq   $0x0,0x30(%rcx)
movq   $0x0,0x38(%rcx)
movq   $0x0,0x50(%rcx)
movq   $0x0,0x58(%rcx)
movq   $0x0,0x60(%rcx)
movq   $0x0,0x68(%rcx)
movq   $0x0,0x70(%rcx)
movq   $0x0,0x78(%rcx)
movq   $0x0,0x80(%rcx)
movw   $0x4,0x22(%rcx)
mov    -0x28(%rbp),%r8
mov    %r8,(%rcx)
mov    -0x30(%rbp),%rax
mov    %eax,0x8(%rcx)
xor    %eax,%eax
mov    $0x102,%esi
lea    0x1c(%rcx),%rdx
mov    %rdx,-0x38(%rbp)
mov    %r8,%rdi
mov    %r14,-0x28(%rbp)
mov    %r15,-0x30(%rbp)
mov    %rcx,%r14
mov    %r8,%r15
callq  8390 <TIFFGetFieldDefaulted@plt>
movzwl 0x1c(%r14),%edx
lea    -0x1(%rdx),%eax
cmp    $0xf,%eax
ja     291dc <TIFFRGBAImageBegin+0xec>
lea    0x45029(%rip),%rcx        # 6e1fc <TIFFFaxBlackTable+0x10040>
movslq (%rcx,%rax,4),%rax
add    %rcx,%rax
jmpq   *%rax
xor    %eax,%eax
lea    0x46073(%rip),%rsi        # 6f258 <display_sRGB+0xd70>
mov    -0x8(%rbp),%rdi
callq  8c10 <sprintf@plt>
mov    %r14,%rdi
callq  87b0 <TIFFRGBAImageEnd@plt>
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
xor    %eax,%eax
leaveq 
retq   
movl   $0x0,0x10(%r14)
xor    %eax,%eax
mov    $0x115,%esi
lea    0x1e(%r14),%rcx
mov    %rax,%r8
mov    %r15,%rdi
mov    %rcx,%rdx
mov    %r12,-0x18(%rbp)
mov    %r13,-0x20(%rbp)
mov    %rax,%r12
mov    %r8,%rax
mov    %rcx,%r13
callq  8390 <TIFFGetFieldDefaulted@plt>
mov    %r12,%rax
mov    $0x152,%esi
lea    -0x5e(%rbp),%rdx
lea    -0x68(%rbp),%rcx
mov    %r15,%rdi
callq  8390 <TIFFGetFieldDefaulted@plt>
movzwl -0x5e(%rbp),%eax
test   %ax,%ax
jne    2937d <TIFFRGBAImageBegin+0x28d>
mov    $0x106,%esi
lea    0x24(%r14),%r12
xor    %eax,%eax
mov    %r15,%rdi
mov    %r12,%rdx
callq  8230 <TIFFGetField@plt>
test   %eax,%eax
jne    2927a <TIFFRGBAImageBegin+0x18a>
movw   $0x0,(%r12)
movzwl -0x5e(%rbp),%eax
test   %ax,%ax
je     293a6 <TIFFRGBAImageBegin+0x2b6>
xor    %eax,%eax
mov    $0x103,%esi
lea    -0x5a(%rbp),%rdx
movzwl 0x1e(%r14),%r13d
movzwl -0x5e(%rbp),%ecx
mov    %r15,%rdi
mov    %rbx,-0x10(%rbp)
mov    %rcx,%rbx
callq  8390 <TIFFGetFieldDefaulted@plt>
xor    %eax,%eax
mov    %r15,%rdi
lea    -0x5c(%rbp),%rdx
mov    $0x11c,%esi
callq  8390 <TIFFGetFieldDefaulted@plt>
sub    %ebx,%r13d
lea    0x45205(%rip),%rbx        # 6e4cc <photoTag>
mov    %r15,%rdi
mov    %r12,%rdx
xor    %eax,%eax
mov    $0x106,%esi
callq  8230 <TIFFGetField@plt>
test   %eax,%eax
je     293d7 <TIFFRGBAImageBegin+0x2e7>
mov    $0x1,%r9d
lea    0x4603e(%rip),%r8        # 6f32c <display_sRGB+0xe44>
movzwl 0x24(%r14),%ecx
cmp    $0x4,%cx
jbe    29411 <TIFFRGBAImageBegin+0x321>
cmp    $0x7,%cx
jbe    29474 <TIFFRGBAImageBegin+0x384>
cmp    $0x804b,%cx
jbe    294ae <TIFFRGBAImageBegin+0x3be>
lea    0x460b4(%rip),%r11        # 6f3cd <display_sRGB+0xee5>
mov    $0x8774,%r10d
mov    $0x10018,%esi
mov    $0x3,%edx
cmp    $0x804c,%cx
je     294bc <TIFFRGBAImageBegin+0x3cc>
cmp    $0x804d,%cx
jne    29488 <TIFFRGBAImageBegin+0x398>
movzwl -0x5a(%rbp),%eax
cmp    $0x8774,%ax
jne    294ec <TIFFRGBAImageBegin+0x3fc>
movzwl -0x5c(%rbp),%ecx
cmp    $0x1,%cx
jne    29525 <TIFFRGBAImageBegin+0x435>
mov    %r9,%r13
xor    %eax,%eax
mov    %r15,%rdi
callq  8290 <TIFFSetField@plt>
movw   $0x2,(%r12)
mov    -0x38(%rbp),%rax
movw   $0x8,(%rax)
jmpq   29574 <TIFFRGBAImageBegin+0x484>
mov    -0x68(%rbp),%rax
movzwl (%rax),%eax
test   %ax,%ax
je     295ff <TIFFRGBAImageBegin+0x50f>
cmp    $0x1,%ax
je     2939d <TIFFRGBAImageBegin+0x2ad>
cmp    $0x2,%ax
jne    29259 <TIFFRGBAImageBegin+0x169>
mov    %eax,0x10(%r14)
jmpq   29259 <TIFFRGBAImageBegin+0x169>
movzwl 0x0(%r13),%eax
cmp    $0x4,%ax
jne    29287 <TIFFRGBAImageBegin+0x197>
movzwl (%r12),%eax
cmp    $0x2,%ax
jne    29287 <TIFFRGBAImageBegin+0x197>
movl   $0x1,0x10(%r14)
movw   $0x1,-0x5e(%rbp)
jmpq   29287 <TIFFRGBAImageBegin+0x197>
cmp    $0x1,%r13d
je     29624 <TIFFRGBAImageBegin+0x534>
cmp    $0x3,%r13d
je     29640 <TIFFRGBAImageBegin+0x550>
mov    %rbx,%rdx
xor    %eax,%eax
lea    0x45ed0(%rip),%rsi        # 6f2c7 <display_sRGB+0xddf>
mov    -0x8(%rbp),%rdi
callq  8c10 <sprintf@plt>
mov    -0x10(%rbp),%rbx
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
jmpq   291ee <TIFFRGBAImageBegin+0xfe>
cmp    $0x1,%cx
jbe    29556 <TIFFRGBAImageBegin+0x466>
cmp    $0x2,%cx
je     2964c <TIFFRGBAImageBegin+0x55c>
cmp    $0x3,%cx
jne    29488 <TIFFRGBAImageBegin+0x398>
mov    %r9,%r13
xor    %eax,%eax
mov    $0x140,%esi
lea    -0x58(%rbp),%rdx
lea    -0x50(%rbp),%rcx
lea    -0x48(%rbp),%r8
mov    %r15,%rdi
callq  8230 <TIFFGetField@plt>
test   %eax,%eax
jne    2965e <TIFFRGBAImageBegin+0x56e>
xor    %eax,%eax
lea    0x46092(%rip),%rsi        # 6f4ec <display_sRGB+0x1004>
mov    -0x8(%rbp),%rdi
callq  8c10 <sprintf@plt>
mov    -0x10(%rbp),%rbx
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
jmpq   291ee <TIFFRGBAImageBegin+0xfe>
cmp    $0x5,%cx
je     296cf <TIFFRGBAImageBegin+0x5df>
cmp    $0x6,%cx
je     2972b <TIFFRGBAImageBegin+0x63b>
mov    %rbx,%rdx
xor    %eax,%eax
lea    0x46031(%rip),%rsi        # 6f4c5 <display_sRGB+0xfdd>
mov    -0x8(%rbp),%rdi
callq  8c10 <sprintf@plt>
mov    -0x10(%rbp),%rbx
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
jmpq   291ee <TIFFRGBAImageBegin+0xfe>
cmp    $0x8,%cx
jne    29488 <TIFFRGBAImageBegin+0x398>
mov    %r9,%r13
jmpq   29574 <TIFFRGBAImageBegin+0x484>
movzwl -0x5a(%rbp),%eax
cmp    $0x8774,%ax
jne    29741 <TIFFRGBAImageBegin+0x651>
mov    %r9,%r13
xor    %eax,%eax
mov    %r15,%rdi
callq  8290 <TIFFSetField@plt>
movw   $0x1,(%r12)
mov    -0x38(%rbp),%rax
movw   $0x8,(%rax)
jmpq   29574 <TIFFRGBAImageBegin+0x484>
cmp    $0x8775,%ax
je     2934d <TIFFRGBAImageBegin+0x25d>
mov    %r10,%rcx
mov    %r11,%rdx
xor    %eax,%eax
lea    0x45ed4(%rip),%rsi        # 6f3d9 <display_sRGB+0xef1>
mov    $0x8775,%r8d
mov    -0x8(%rbp),%rdi
callq  8c10 <sprintf@plt>
mov    -0x10(%rbp),%rbx
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
jmpq   291ee <TIFFRGBAImageBegin+0xfe>
xor    %eax,%eax
lea    0x45ed4(%rip),%rsi        # 6f402 <display_sRGB+0xf1a>
lea    0x45efc(%rip),%rdx        # 6f431 <display_sRGB+0xf49>
mov    -0x8(%rbp),%rdi
callq  8c10 <sprintf@plt>
mov    -0x10(%rbp),%rbx
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
xor    %eax,%eax
leaveq 
retq   
test   %cx,%cx
jne    2976a <TIFFRGBAImageBegin+0x67a>
mov    %r9,%r13
mov    -0x38(%rbp),%rax
movzwl -0x5c(%rbp),%ecx
cmp    $0x1,%cx
je     29780 <TIFFRGBAImageBegin+0x690>
xor    %ebx,%ebx
mov    $0x100,%esi
lea    0x14(%r14),%rdx
mov    %rbx,%rax
mov    %r15,%rdi
callq  8230 <TIFFGetField@plt>
mov    $0x101,%esi
lea    0x18(%r14),%rdx
mov    %rbx,%rax
mov    %r15,%rdi
callq  8230 <TIFFGetField@plt>
mov    %rbx,%rax
mov    %r15,%rdi
mov    $0x112,%esi
lea    0x20(%r14),%rdx
callq  8390 <TIFFGetFieldDefaulted@plt>
movzwl -0x5c(%rbp),%eax
cmp    $0x2,%ax
je     297cb <TIFFRGBAImageBegin+0x6db>
mov    %r13,%rax
mov    %eax,0xc(%r14)
lea    0x45f5e(%rip),%rbx        # 6f52c <display_sRGB+0x1044>
test   %eax,%eax
jg     297e1 <TIFFRGBAImageBegin+0x6f1>
mov    %r14,%rdi
callq  2b970 <PickSeparateCase>
test   %eax,%eax
je     2980a <TIFFRGBAImageBegin+0x71a>
mov    %r13,%rax
mov    -0x10(%rbp),%rbx
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
leaveq 
retq   
test   %ax,%ax
jne    29259 <TIFFRGBAImageBegin+0x169>
movzwl 0x1e(%r14),%eax
cmp    $0x3,%ax
jbe    29259 <TIFFRGBAImageBegin+0x169>
movl   $0x1,0x10(%r14)
jmpq   29259 <TIFFRGBAImageBegin+0x169>
mov    %r15,%rdi
callq  2bcf0 <isCCITTCompression>
test   %eax,%eax
jne    29829 <TIFFRGBAImageBegin+0x739>
movw   $0x1,(%r12)
jmpq   292e1 <TIFFRGBAImageBegin+0x1f1>
movw   $0x2,(%r12)
jmpq   292e1 <TIFFRGBAImageBegin+0x1f1>
cmp    $0x2,%r13d
jle    29835 <TIFFRGBAImageBegin+0x745>
mov    %r9,%r13
jmpq   29574 <TIFFRGBAImageBegin+0x484>
mov    -0x38(%rbp),%rax
movzwl (%rax),%ecx
shl    %cl,%r13d
mov    %rcx,%rbx
movslq %r13d,%rcx
add    %rcx,%rcx
mov    %rcx,%rdi
mov    %r12,-0x38(%rbp)
mov    %rcx,%r12
mov    %rax,%r13
callq  8440 <_TIFFmalloc@plt>
mov    %rax,0x28(%r14)
mov    %r12,%rdi
callq  8440 <_TIFFmalloc@plt>
mov    %rax,0x30(%r14)
mov    %r12,%rdi
callq  8440 <_TIFFmalloc@plt>
mov    %rax,0x38(%r14)
mov    0x28(%r14),%rdi
test   %rdi,%rdi
jne    29862 <TIFFRGBAImageBegin+0x772>
xor    %eax,%eax
lea    0x45e57(%rip),%rsi        # 6f50c <display_sRGB+0x1024>
mov    -0x8(%rbp),%rdi
callq  8c10 <sprintf@plt>
mov    -0x10(%rbp),%rbx
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
jmpq   291ee <TIFFRGBAImageBegin+0xfe>
mov    %r8,%rbx
mov    %r9,%r13
xor    %eax,%eax
mov    $0x14c,%esi
lea    -0x3a(%rbp),%rdx
mov    %r15,%rdi
callq  8390 <TIFFGetFieldDefaulted@plt>
lea    0x45c85(%rip),%rsi        # 6f374 <display_sRGB+0xe8c>
movzwl -0x3a(%rbp),%ecx
cmp    $0x1,%cx
jne    298d1 <TIFFRGBAImageBegin+0x7e1>
movzwl 0x1e(%r14),%ecx
cmp    $0x3,%cx
ja     29574 <TIFFRGBAImageBegin+0x484>
mov    %rbx,%rdx
xor    %eax,%eax
mov    -0x8(%rbp),%rdi
callq  8c10 <sprintf@plt>
mov    -0x10(%rbp),%rbx
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
jmpq   291ee <TIFFRGBAImageBegin+0xfe>
movzwl -0x5c(%rbp),%eax
cmp    $0x1,%ax
je     298f4 <TIFFRGBAImageBegin+0x804>
mov    %r9,%r13
jmpq   29574 <TIFFRGBAImageBegin+0x484>
mov    %r10,%rcx
mov    %r11,%rdx
xor    %eax,%eax
lea    0x45c5c(%rip),%rsi        # 6f3ac <display_sRGB+0xec4>
mov    -0x8(%rbp),%rdi
callq  8c10 <sprintf@plt>
mov    -0x10(%rbp),%rbx
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
jmpq   291ee <TIFFRGBAImageBegin+0xfe>
cmp    $0x1,%cx
jne    29488 <TIFFRGBAImageBegin+0x398>
mov    %r9,%r13
mov    -0x38(%rbp),%rax
jmpq   29566 <TIFFRGBAImageBegin+0x476>
movzwl 0x1e(%r14),%r9d
cmp    $0x1,%r9w
je     29574 <TIFFRGBAImageBegin+0x484>
movzwl (%rax),%edx
cmp    $0x7,%dx
ja     29574 <TIFFRGBAImageBegin+0x484>
xor    %eax,%eax
lea    0x45b37(%rip),%rsi        # 6f2dd <display_sRGB+0xdf5>
movzwl (%r12),%ecx
mov    %edx,(%rsp)
mov    %rbx,%rdx
mov    -0x8(%rbp),%rdi
callq  8c10 <sprintf@plt>
mov    -0x10(%rbp),%rbx
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
jmpq   291ee <TIFFRGBAImageBegin+0xfe>
movzwl 0x1e(%r14),%eax
cmp    $0x1,%ax
jbe    29906 <TIFFRGBAImageBegin+0x816>
xor    %eax,%eax
jmpq   295c3 <TIFFRGBAImageBegin+0x4d3>
mov    %r14,%rdi
callq  2b500 <PickContigCase>
test   %eax,%eax
je     2990e <TIFFRGBAImageBegin+0x81e>
mov    %r13,%rax
mov    -0x10(%rbp),%rbx
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
leaveq 
retq   
mov    %rbx,%rsi
xor    %eax,%eax
mov    -0x8(%rbp),%rdi
callq  8c10 <sprintf@plt>
mov    -0x10(%rbp),%rbx
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
jmpq   291ee <TIFFRGBAImageBegin+0xfe>
movw   $0x0,0x24(%r14)
jmpq   292e1 <TIFFRGBAImageBegin+0x1f1>
mov    %r13,%rcx
xor    %eax,%eax
lea    0x45af9(%rip),%rsi        # 6f33a <display_sRGB+0xe52>
lea    0x45b1d(%rip),%rdx        # 6f365 <display_sRGB+0xe7d>
mov    -0x8(%rbp),%rdi
callq  8c10 <sprintf@plt>
mov    -0x10(%rbp),%rbx
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
jmpq   291ee <TIFFRGBAImageBegin+0xfe>
mov    0x30(%r14),%rcx
test   %rcx,%rcx
je     296ac <TIFFRGBAImageBegin+0x5bc>
test   %rax,%rax
je     296ac <TIFFRGBAImageBegin+0x5bc>
mov    %rbx,%rcx
mov    $0x2,%eax
shl    %cl,%eax
movslq %eax,%rbx
mov    -0x58(%rbp),%rsi
mov    %rbx,%rdx
callq  8790 <_TIFFmemcpy@plt>
mov    0x30(%r14),%rdi
mov    -0x50(%rbp),%rsi
mov    %rbx,%rdx
callq  8790 <_TIFFmemcpy@plt>
mov    %rbx,%rdx
mov    0x38(%r14),%rdi
mov    -0x48(%rbp),%rsi
callq  8790 <_TIFFmemcpy@plt>
mov    %r13,%rax
mov    $0x1,%r13d
lea    0x44c0b(%rip),%rbx        # 6e4cc <photoTag>
mov    -0x38(%rbp),%r12
lea    0x45a60(%rip),%r8        # 6f32c <display_sRGB+0xe44>
jmpq   29566 <TIFFRGBAImageBegin+0x476>
xor    %eax,%eax
lea    0x45acb(%rip),%rdx        # 6f3a5 <display_sRGB+0xebd>
mov    -0x8(%rbp),%rdi
callq  8c10 <sprintf@plt>
mov    -0x10(%rbp),%rbx
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
jmpq   291ee <TIFFRGBAImageBegin+0xfe>
movzwl -0x5a(%rbp),%eax
cmp    $0x7,%ax
je     2992d <TIFFRGBAImageBegin+0x83d>
mov    %r9,%r13
jmpq   29574 <TIFFRGBAImageBegin+0x484>
mov    %r13,%rax
jmpq   295c3 <TIFFRGBAImageBegin+0x4d3>
mov    %rbx,%rsi
xor    %eax,%eax
mov    -0x8(%rbp),%rdi
callq  8c10 <sprintf@plt>
mov    -0x10(%rbp),%rbx
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
jmpq   291ee <TIFFRGBAImageBegin+0xfe>
mov    %r9,%r13
xor    %eax,%eax
mov    $0x10002,%esi
mov    %r15,%rdi
mov    %r13,%rdx
callq  8290 <TIFFSetField@plt>
movw   $0x2,(%r12)
jmpq   29574 <TIFFRGBAImageBegin+0x484>
xchg   %ax,%ax

0000000000029950 <TIFFRGBAImageGet>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    0x40(%rdi),%rax
test   %rax,%rax
je     2996e <TIFFRGBAImageGet+0x1e>
mov    0x48(%rdi),%r8
test   %r8,%r8
je     299a0 <TIFFRGBAImageGet+0x50>
callq  *%rax
leaveq 
retq   
mov    (%rdi),%rdi
mov    0x3b8(%rdi),%rax
mov    %r15,-0x8(%rbp)
mov    %rax,%r15
callq  85f0 <TIFFFileName@plt>
mov    %rax,%rsi
mov    %r15,%rdi
lea    0x45bb7(%rip),%rdx        # 6f548 <display_sRGB+0x1060>
xor    %eax,%eax
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
mov    (%rdi),%rdi
mov    0x3b8(%rdi),%rax
mov    %r15,-0x8(%rbp)
mov    %rax,%r15
callq  85f0 <TIFFFileName@plt>
mov    %rax,%rsi
mov    %r15,%rdi
lea    0x45b9c(%rip),%rdx        # 6f55f <display_sRGB+0x1077>
xor    %eax,%eax
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   (%rax)

00000000000299e0 <TIFFRGBAImageEnd>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x8(%rbp)
mov    0x50(%rdi),%rax
test   %rax,%rax
jne    299fd <TIFFRGBAImageEnd+0x1d>
mov    %r15,%rax
mov    %rdi,%r15
jmp    29a14 <TIFFRGBAImageEnd+0x34>
mov    %rdi,%r15
mov    %rax,%rdi
callq  8bb0 <_TIFFfree@plt>
movq   $0x0,0x50(%r15)
mov    -0x8(%rbp),%rax
mov    0x58(%r15),%rdi
test   %rdi,%rdi
je     29a2e <TIFFRGBAImageEnd+0x4e>
callq  8bb0 <_TIFFfree@plt>
movq   $0x0,0x58(%r15)
mov    -0x8(%rbp),%rax
mov    0x60(%r15),%rdi
test   %rdi,%rdi
je     29a48 <TIFFRGBAImageEnd+0x68>
callq  8bb0 <_TIFFfree@plt>
movq   $0x0,0x60(%r15)
mov    -0x8(%rbp),%rax
mov    0x68(%r15),%rdi
test   %rdi,%rdi
je     29a62 <TIFFRGBAImageEnd+0x82>
callq  8bb0 <_TIFFfree@plt>
movq   $0x0,0x68(%r15)
mov    -0x8(%rbp),%rax
mov    0x70(%r15),%rdi
test   %rdi,%rdi
je     29a7c <TIFFRGBAImageEnd+0x9c>
callq  8bb0 <_TIFFfree@plt>
movq   $0x0,0x70(%r15)
mov    -0x8(%rbp),%rax
mov    0x78(%r15),%rdi
test   %rdi,%rdi
je     29a96 <TIFFRGBAImageEnd+0xb6>
callq  8bb0 <_TIFFfree@plt>
movq   $0x0,0x78(%r15)
mov    -0x8(%rbp),%rax
mov    0x80(%r15),%rdi
test   %rdi,%rdi
je     29ab6 <TIFFRGBAImageEnd+0xd6>
callq  8bb0 <_TIFFfree@plt>
movq   $0x0,0x80(%r15)
mov    -0x8(%rbp),%rax
mov    0x28(%r15),%rdi
test   %rdi,%rdi
jne    29ac4 <TIFFRGBAImageEnd+0xe4>
mov    %rax,%r15
leaveq 
retq   
callq  8bb0 <_TIFFfree@plt>
mov    0x30(%r15),%rdi
callq  8bb0 <_TIFFfree@plt>
mov    0x38(%r15),%rdi
callq  8bb0 <_TIFFfree@plt>
movq   $0x0,0x38(%r15)
movq   $0x0,0x30(%r15)
movq   $0x0,0x28(%r15)
mov    -0x8(%rbp),%r15
leaveq 
retq   
nopl   0x0(%rax)

0000000000029b00 <gtTileContig>:
push   %rbp
mov    %rsp,%rbp
sub    $0xe0,%rsp
mov    %r15,-0x28(%rbp)
mov    %rdi,-0xd0(%rbp)
mov    %rdx,-0xc0(%rbp)
mov    %rcx,-0xb8(%rbp)
mov    %rsi,-0x68(%rbp)
mov    0x48(%rdi),%rax
mov    %rax,-0x58(%rbp)
xor    %eax,%eax
mov    %rax,-0x38(%rbp)
mov    (%rdi),%r15
mov    %r15,-0xc8(%rbp)
movq   $0x0,-0xd8(%rbp)
mov    %r15,%rdi
callq  8910 <TIFFTileSize@plt>
mov    %rax,-0x48(%rbp)
test   %rax,%rax
je     29be0 <gtTileContig+0xe0>
xor    %r8d,%r8d
mov    $0x142,%esi
lea    -0xe0(%rbp),%rdx
mov    %r8,%rcx
mov    %r15,%rdi
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %rax,%r13
mov    %rcx,%rax
mov    %r8,%r14
callq  8230 <TIFFGetField@plt>
mov    %r14,%rax
mov    $0x143,%esi
lea    -0xdc(%rbp),%rdx
mov    %r15,%rdi
callq  8230 <TIFFGetField@plt>
mov    -0xd0(%rbp),%r14
mov    %r14,%rdi
callq  2bd40 <setorientation>
mov    %rax,-0x30(%rbp)
and    $0x1,%eax
mov    %rax,-0xb0(%rbp)
test   %eax,%eax
jg     29c12 <gtTileContig+0x112>
mov    -0xe0(%rbp),%esi
mov    -0xc0(%rbp),%r9
sub    %r9d,%esi
neg    %esi
xor    %edi,%edi
mov    -0xb8(%rbp),%rcx
jmp    29c2e <gtTileContig+0x12e>
mov    %r15,%rdi
mov    0x3b8(%rdi),%r15
callq  85f0 <TIFFFileName@plt>
mov    %rax,%rsi
mov    %r15,%rdi
lea    0x44d40(%rip),%rdx        # 6e93c <display_sRGB+0x454>
lea    0x4599a(%rip),%rcx        # 6f59d <display_sRGB+0x10b5>
xor    %eax,%eax
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x28(%rbp),%r15
leaveq 
retq   
mov    -0xc0(%rbp),%r9
mov    %r9,%rsi
add    -0xe0(%rbp),%esi
neg    %esi
mov    -0xb8(%rbp),%rcx
lea    -0x1(%rcx),%edi
mov    %r13,%r10
mov    %r9,%r13
mov    %r10,%r9
mov    %rsi,-0x88(%rbp)
mov    0x8c(%r14),%eax
mov    -0xe0(%rbp),%r8d
xor    %edx,%edx
div    %r8d
mov    %rdx,-0x98(%rbp)
mov    -0xe0(%rbp),%r10d
sub    %edx,%r10d
mov    %r10,-0xd0(%rbp)
mov    $0x1,%eax
mov    %r12,-0x10(%rbp)
lea    (%rdx,%rsi,1),%r12d
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x80(%rbp)
mov    %rdx,%r11
mov    %r9,%rdx
mov    -0x68(%rbp),%rbx
xor    %esi,%esi
mov    %rsi,%r8
jmp    29cc6 <gtTileContig+0x1c6>
mov    -0xc0(%rbp),%rax
mov    %rax,%rcx
neg    %ecx
add    %eax,%r8d
mov    -0x70(%rbp),%rax
lea    (%rax,%rcx,1),%edi
mov    -0x80(%rbp),%r12
mov    -0xd0(%rbp),%r10
mov    -0x98(%rbp),%r11
mov    -0x40(%rbp),%rax
mov    -0x68(%rbp),%rbx
mov    -0xb8(%rbp),%rcx
mov    %r8,-0xa8(%rbp)
mov    %rax,-0x40(%rbp)
test   %eax,%eax
jle    29d30 <gtTileContig+0x230>
cmp    %r8d,%ecx
jbe    29d30 <gtTileContig+0x230>
mov    %rdx,%r9
mov    %r8,%rax
add    0x88(%r14),%eax
mov    -0xdc(%rbp),%esi
xor    %edx,%edx
div    %esi
sub    %edx,%esi
lea    (%r8,%rsi,1),%eax
cmp    %eax,%ecx
jae    29d01 <gtTileContig+0x201>
sub    %r8d,%ecx
mov    %rcx,%rsi
mov    %rsi,-0xc0(%rbp)
mov    0x8c(%r14),%ecx
mov    %r13,%rax
imul   %edi,%eax
mov    %eax,%eax
lea    (%rbx,%rax,4),%rax
mov    %rax,-0x60(%rbp)
mov    %rdi,-0x70(%rbp)
mov    %r9,%rdx
xor    %esi,%esi
mov    %rsi,%rbx
jmpq   29e2a <gtTileContig+0x32a>
mov    %rsi,%r12
mov    %rax,%r14
mov    %rcx,%r15
mov    -0xd8(%rbp),%rdi
callq  8bb0 <_TIFFfree@plt>
mov    -0x30(%rbp),%rcx
and    $0x2,%ecx
test   %ecx,%ecx
jg     29ebe <gtTileContig+0x3be>
mov    %r14,%rax
mov    -0x8(%rbp),%rbx
mov    -0x10(%rbp),%r12
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x28(%rbp),%r15
leaveq 
retq   
mov    %r13,%r10
sub    %ebx,%r10d
mov    %rbx,%rcx
sub    %r13d,%ecx
add    -0xe0(%rbp),%ecx
mov    -0x88(%rbp),%r12
lea    (%r12,%rcx,1),%edi
sub    $0x20,%rsp
mov    -0xa8(%rbp),%rdx
lea    (%r15,%rdx,1),%r9d
mov    %rax,%r15
mov    %r9,%rax
xor    %edx,%edx
mov    -0xa0(%rbp),%r8
div    %r8d
mov    %edx,%eax
imul   %rax,%r15
mov    -0x90(%rbp),%rax
movslq %eax,%rax
imul   %rax,%rsi
lea    (%rsi,%r15,1),%rax
add    -0xd8(%rbp),%rax
mov    %ecx,(%rsp)
mov    %edi,0x8(%rsp)
mov    %rax,0x10(%rsp)
mov    %ebx,%eax
mov    -0x60(%rbp),%rcx
lea    (%rcx,%rax,4),%rsi
mov    %r10,%r15
mov    %r14,%rdi
mov    %rbx,%rdx
mov    -0x70(%rbp),%rcx
mov    %r15,%r8
mov    -0xc0(%rbp),%r9
mov    -0x58(%rbp),%rax
callq  *%rax
mov    -0xe0(%rbp),%r10d
add    $0x20,%rsp
mov    -0x50(%rbp),%rax
lea    (%r15,%rax,1),%ecx
add    %r15d,%ebx
mov    -0xc8(%rbp),%r15
mov    -0xa8(%rbp),%r8
mov    -0x48(%rbp),%rdx
xor    %esi,%esi
mov    %rsi,%r11
cmp    %r13d,%ebx
jae    29ee5 <gtTileContig+0x3e5>
sub    $0x10,%rsp
add    0x88(%r14),%r8d
movl   $0x0,(%rsp)
mov    %r15,%rdi
lea    -0xd8(%rbp),%rsi
mov    %rcx,-0x50(%rbp)
xor    %r9d,%r9d
mov    %r11,-0x90(%rbp)
mov    %r12,-0x78(%rbp)
mov    %r10,%r12
callq  8310 <_TIFFReadTileAndAllocBuffer@plt>
add    $0x10,%rsp
cmp    $0xffffffffffffffff,%rax
je     29ec6 <gtTileContig+0x3c6>
mov    0x88(%r14),%ecx
mov    -0xdc(%rbp),%eax
mov    %rax,-0xa0(%rbp)
mov    %r15,%rdi
mov    %rcx,%r15
callq  80d0 <TIFFTileRowSize@plt>
movzwl 0x1e(%r14),%esi
lea    (%r12,%rbx,1),%ecx
cmp    %r13d,%ecx
ja     29d6d <gtTileContig+0x26d>
mov    %r12,%r10
mov    -0x78(%rbp),%rdi
mov    -0x90(%rbp),%rcx
mov    -0x88(%rbp),%r12
jmpq   29d8a <gtTileContig+0x28a>
mov    %r13d,%eax
mov    %r12,%rsi
jmp    29f20 <gtTileContig+0x420>
mov    -0xd8(%rbp),%rax
test   %rax,%rax
jne    29f3e <gtTileContig+0x43e>
mov    -0xa8(%rbp),%r8
mov    -0x48(%rbp),%rdx
xor    %esi,%esi
pushq  -0x38(%rbp)
popq   -0x40(%rbp)
mov    -0xb0(%rbp),%rax
test   %eax,%eax
jg     29c8f <gtTileContig+0x18f>
mov    -0xc0(%rbp),%rax
mov    %rax,%rcx
jmpq   29c9b <gtTileContig+0x19b>
mov    (%rdx),%edi
mov    (%rcx),%r8d
mov    %edi,(%rcx)
mov    %r8d,(%rdx)
add    $0x4,%rcx
add    $0xfffffffffffffffc,%rdx
cmp    %rcx,%rdx
ja     29f03 <gtTileContig+0x403>
add    $0x1,%esi
add    %r13d,%r12d
cmp    %r15d,%esi
jb     29f5f <gtTileContig+0x45f>
mov    %r14,%rax
mov    -0x8(%rbp),%rbx
mov    -0x10(%rbp),%r12
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x28(%rbp),%r15
leaveq 
retq   
movslq 0x8(%r14),%rax
test   %eax,%eax
je     29e73 <gtTileContig+0x373>
mov    -0xa8(%rbp),%r8
mov    -0x48(%rbp),%rdx
xor    %esi,%esi
pushq  -0x38(%rbp)
popq   -0x40(%rbp)
jmp    29ee5 <gtTileContig+0x3e5>
mov    %r12d,%ecx
lea    (%rbx,%rcx,4),%rcx
lea    -0x4(%rcx,%rax,4),%rdx
jmp    29f15 <gtTileContig+0x415>
nopl   (%rax)

0000000000029f70 <gtTileSeparate>:
push   %rbp
mov    %rsp,%rbp
sub    $0x150,%rsp
mov    %rsi,-0x50(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rdi,-0x138(%rbp)
mov    %rdx,-0x118(%rbp)
mov    %rcx,-0x110(%rbp)
mov    0x48(%rdi),%rax
mov    %rax,-0x40(%rbp)
xor    %eax,%eax
mov    %rax,-0x120(%rbp)
mov    $0x1,%eax
mov    %rax,-0x128(%rbp)
mov    $0x3,%eax
mov    %rax,-0xc0(%rbp)
mov    (%rdi),%r14
movq   $0x0,-0x140(%rbp)
movslq 0x10(%rdi),%r15
mov    %r14,%rdi
callq  8910 <TIFFTileSize@plt>
test   %rax,%rax
jne    2a07c <gtTileSeparate+0x10c>
mov    %rax,%rcx
xor    %r8d,%r8d
test   %r8,%r8
je     2a0a0 <gtTileSeparate+0x130>
xor    %eax,%eax
mov    $0x142,%esi
lea    -0x148(%rbp),%rdx
mov    %rax,%r9
mov    %r14,%rdi
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %rax,%rbx
mov    %r9,%rax
mov    %rcx,%r12
mov    %r8,%r13
callq  8230 <TIFFGetField@plt>
mov    %rbx,%rax
mov    $0x143,%esi
lea    -0x144(%rbp),%rdx
mov    %r14,%rdi
callq  8230 <TIFFGetField@plt>
mov    -0x138(%rbp),%rbx
mov    %rbx,%rdi
callq  2bd40 <setorientation>
mov    %rax,-0x30(%rbp)
and    $0x1,%eax
mov    %rax,-0xd0(%rbp)
test   %eax,%eax
jg     2a0da <gtTileSeparate+0x16a>
mov    -0x148(%rbp),%edi
mov    -0x118(%rbp),%rsi
sub    %esi,%edi
neg    %edi
xor    %ecx,%ecx
mov    -0x110(%rbp),%r11
jmp    2a0f7 <gtTileSeparate+0x187>
mov    $0x4,%edi
test   %r15d,%r15d
jne    2a11c <gtTileSeparate+0x1ac>
mov    $0x3,%ecx
pushq  -0x120(%rbp)
popq   -0x130(%rbp)
jmpq   2a12b <gtTileSeparate+0x1bb>
mov    %r14,%rdi
xor    %r14d,%r14d
mov    0x3b8(%rdi),%r15
callq  85f0 <TIFFFileName@plt>
mov    %rax,%rsi
mov    %r14,%rax
mov    %r15,%rdi
lea    0x454f4(%rip),%rdx        # 6f5b6 <display_sRGB+0x10ce>
lea    0x45504(%rip),%rcx        # 6f5cd <display_sRGB+0x10e5>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
leaveq 
retq   
mov    -0x118(%rbp),%rsi
mov    %rsi,%rdi
add    -0x148(%rbp),%edi
neg    %edi
mov    -0x110(%rbp),%r11
lea    -0x1(%r11),%ecx
mov    %rdi,-0x60(%rbp)
movzwl 0x24(%rbx),%eax
test   %ax,%ax
je     2a145 <gtTileSeparate+0x1d5>
cmp    $0x1,%ax
jne    2a1c9 <gtTileSeparate+0x259>
pushq  -0x128(%rbp)
popq   -0xc0(%rbp)
jmp    2a156 <gtTileSeparate+0x1e6>
mov    %rdi,%rcx
pushq  -0x128(%rbp)
popq   -0x130(%rbp)
mov    -0x130(%rbp),%rdx
test   %rdx,%rdx
jne    2a1e0 <gtTileSeparate+0x270>
mov    $0x3,%esi
jmpq   2a1e3 <gtTileSeparate+0x273>
test   %ax,%ax
jne    2a156 <gtTileSeparate+0x1e6>
pushq  -0x128(%rbp)
popq   -0xc0(%rbp)
mov    0x8c(%rbx),%eax
mov    -0x148(%rbp),%r8d
xor    %edx,%edx
div    %r8d
mov    %rdx,-0x90(%rbp)
mov    -0x148(%rbp),%eax
sub    %edx,%eax
mov    %rax,-0xf8(%rbp)
lea    (%r12,%r12,2),%rax
mov    %rax,-0xa0(%rbp)
lea    (%rdx,%rdi,1),%eax
mov    %r13,-0xe0(%rbp)
mov    %r14,-0x130(%rbp)
mov    %r15,-0xc8(%rbp)
mov    %r12,-0xa8(%rbp)
mov    %rax,-0x68(%rbp)
mov    $0x1,%eax
xor    %r9d,%r9d
mov    -0x50(%rbp),%r12
mov    %r9,%r8
mov    %r8,%r10
mov    %r10,%r13
mov    %r13,%r14
mov    %r14,%r15
jmp    2a22a <gtTileSeparate+0x2ba>
cmp    $0x3,%ax
jne    2a156 <gtTileSeparate+0x1e6>
pushq  -0x128(%rbp)
popq   -0xc0(%rbp)
jmpq   2a156 <gtTileSeparate+0x1e6>
mov    %rdi,%rsi
imul   %rax,%rcx
mov    %rcx,%rdx
mov    %rax,%rcx
mov    %rdx,%rax
cqto   
idiv   %rcx
cmp    %rax,%rsi
je     2a2ca <gtTileSeparate+0x35a>
xor    %r8d,%r8d
jmpq   29fee <gtTileSeparate+0x7e>
mov    -0xd8(%rbp),%rax
mov    %rax,%rcx
neg    %ecx
add    %eax,%r13d
mov    -0x58(%rbp),%rax
add    %eax,%ecx
mov    -0x38(%rbp),%rax
mov    -0x110(%rbp),%r11
mov    -0x50(%rbp),%r12
mov    %r13,-0x108(%rbp)
mov    %rax,-0x38(%rbp)
test   %eax,%eax
jle    2a2e0 <gtTileSeparate+0x370>
cmp    %r11d,%r13d
jae    2a2e0 <gtTileSeparate+0x370>
mov    %r13,%rax
add    0x88(%rbx),%eax
mov    -0x144(%rbp),%edi
xor    %edx,%edx
div    %edi
sub    %edx,%edi
lea    0x0(%r13,%rdi,1),%eax
cmp    %eax,%r11d
jae    2a26b <gtTileSeparate+0x2fb>
sub    %r13d,%r11d
mov    %r11,%rdi
mov    %rdi,-0xd8(%rbp)
mov    0x8c(%rbx),%edx
mov    %rsi,%rax
imul   %ecx,%eax
mov    %eax,%eax
lea    (%r12,%rax,4),%rax
mov    %rax,-0x48(%rbp)
mov    %rcx,-0x58(%rbp)
mov    -0x130(%rbp),%r12
mov    -0xe0(%rbp),%rax
mov    -0xc0(%rbp),%r11
xor    %r9d,%r9d
mov    %r9,%rcx
pushq  -0x68(%rbp)
pushq  -0x90(%rbp)
pushq  -0xf8(%rbp)
popq   -0x100(%rbp)
popq   -0x98(%rbp)
popq   -0x70(%rbp)
jmpq   2a3d1 <gtTileSeparate+0x461>
test   %r15d,%r15d
jne    2a2d4 <gtTileSeparate+0x364>
mov    $0x3,%edi
mov    %rcx,%r8
imul   %rdi,%r8
jmpq   29fee <gtTileSeparate+0x7e>
mov    -0x30(%rbp),%rcx
and    $0x2,%ecx
test   %ecx,%ecx
jle    2a519 <gtTileSeparate+0x5a9>
mov    %esi,%ebx
mov    %r9,%rdi
jmpq   2a560 <gtTileSeparate+0x5f0>
mov    -0xb8(%rbp),%r14
lea    (%rdx,%r14,1),%rax
sub    $0x30,%rsp
mov    %ecx,(%rsp)
mov    %edi,0x8(%rsp)
mov    -0x80(%rbp),%rcx
add    %rdx,%rcx
mov    %rcx,0x10(%rsp)
mov    -0x88(%rbp),%r13
lea    (%rdx,%r13,1),%rcx
mov    %rcx,0x18(%rsp)
mov    -0xb0(%rbp),%r15
lea    (%rdx,%r15,1),%rcx
mov    %rcx,0x20(%rsp)
mov    %rax,0x28(%rsp)
mov    %r11d,%eax
mov    -0x48(%rbp),%rcx
lea    (%rcx,%rax,4),%rsi
mov    %rbx,%rdi
mov    %r11,%rbx
mov    %r10,%r12
mov    %rbx,%rdx
mov    -0x58(%rbp),%rcx
mov    %r12,%r8
mov    -0xd8(%rbp),%r9
mov    -0x40(%rbp),%rax
callq  *%rax
mov    -0x148(%rbp),%eax
mov    %rax,-0x100(%rbp)
add    $0x30,%rsp
mov    -0xe8(%rbp),%rax
lea    (%rax,%r12,1),%edx
lea    (%r12,%rbx,1),%ecx
mov    %r13,%r8
mov    -0x80(%rbp),%r10
mov    -0x130(%rbp),%r12
mov    -0x108(%rbp),%r13
mov    -0xe0(%rbp),%rax
mov    -0xc0(%rbp),%r11
xor    %r9d,%r9d
mov    -0x118(%rbp),%rsi
mov    -0x138(%rbp),%rbx
pushq  -0x60(%rbp)
pushq  -0x120(%rbp)
popq   -0x98(%rbp)
popq   -0x70(%rbp)
mov    %rcx,-0xf0(%rbp)
mov    %rdx,-0xe8(%rbp)
cmp    %esi,%ecx
jae    2a5a6 <gtTileSeparate+0x636>
mov    -0x140(%rbp),%rcx
test   %rcx,%rcx
je     2a5c4 <gtTileSeparate+0x654>
add    0x88(%rbx),%r13d
mov    %r10,%rsi
xor    %eax,%eax
mov    %r14,-0xb8(%rbp)
mov    %r13,%rcx
mov    %r11,%r13
mov    %r12,%rdi
mov    %r10,%r12
mov    %r8,%r14
mov    %rax,%r8
callq  8820 <TIFFReadTile@plt>
cmp    $0xffffffffffffffff,%rax
je     2a573 <gtTileSeparate+0x603>
mov    %r15,%rax
mov    %r14,%rsi
mov    %r13,%r9
mov    %r12,%r10
mov    -0xc8(%rbp),%r15
mov    -0x130(%rbp),%r12
mov    -0x108(%rbp),%r13
mov    -0xb8(%rbp),%r14
mov    -0xe8(%rbp),%rdx
mov    %rsi,-0x88(%rbp)
mov    %r10,-0x80(%rbp)
mov    %r14,-0xb8(%rbp)
mov    %rax,-0xb0(%rbp)
cmp    $0x1,%r9w
ja     2a66e <gtTileSeparate+0x6fe>
pushq  -0x120(%rbp)
popq   -0x78(%rbp)
mov    -0x78(%rbp),%rcx
test   %rcx,%rcx
je     2a4c5 <gtTileSeparate+0x555>
mov    %rax,%rsi
mov    %r13,%rcx
add    0x88(%rbx),%ecx
mov    %r12,%rdi
xor    %r8d,%r8d
mov    $0x2,%r9d
callq  8820 <TIFFReadTile@plt>
cmp    $0xffffffffffffffff,%rax
je     2a6c1 <gtTileSeparate+0x751>
mov    -0xe8(%rbp),%rdx
mov    -0xc0(%rbp),%r9
test   %r15d,%r15d
jne    2a6e0 <gtTileSeparate+0x770>
mov    %r12,%rdi
mov    0x88(%rbx),%r12d
mov    -0x144(%rbp),%r14d
callq  80d0 <TIFFTileRowSize@plt>
movzwl 0x1e(%rbx),%esi
mov    -0xf0(%rbp),%r11
mov    -0x100(%rbp),%r10
lea    (%r10,%r11,1),%ecx
mov    -0x118(%rbp),%rdx
cmp    %edx,%ecx
ja     2a737 <gtTileSeparate+0x7c7>
mov    -0x70(%rbp),%rdi
mov    -0x98(%rbp),%rcx
jmpq   2a74f <gtTileSeparate+0x7df>
mov    %rax,%r14
mov    -0x140(%rbp),%rdi
callq  8bb0 <_TIFFfree@plt>
mov    %r14,%rax
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
leaveq 
retq   
mov    (%rdx),%r8d
mov    (%rcx),%r10d
mov    %r8d,(%rcx)
mov    %r10d,(%rdx)
add    $0x4,%rcx
add    $0xfffffffffffffffc,%rdx
cmp    %rcx,%rdx
ja     2a541 <gtTileSeparate+0x5d1>
add    $0x1,%edi
add    %esi,%r9d
cmp    %edi,%r11d
jbe    2a519 <gtTileSeparate+0x5a9>
mov    %r9d,%ecx
lea    (%r12,%rcx,4),%rcx
lea    -0x4(%rcx,%rbx,4),%rdx
jmp    2a555 <gtTileSeparate+0x5e5>
movslq 0x8(%rbx),%rax
test   %eax,%eax
je     2a78d <gtTileSeparate+0x81d>
mov    %r14,%r8
mov    %r12,%r10
mov    -0x108(%rbp),%r13
mov    -0xb8(%rbp),%r14
xor    %r9d,%r9d
mov    -0x118(%rbp),%rsi
pushq  -0x120(%rbp)
popq   -0x38(%rbp)
mov    -0xd0(%rbp),%rax
test   %eax,%eax
jg     2a206 <gtTileSeparate+0x296>
mov    -0xd8(%rbp),%rax
mov    %rax,%rcx
jmpq   2a212 <gtTileSeparate+0x2a2>
mov    %r13,%rdi
add    0x88(%rbx),%edi
movl   $0x0,(%rsp)
mov    %r14,-0xb0(%rbp)
mov    %r12,%r14
mov    %r15,-0x88(%rbp)
mov    %r8,-0x80(%rbp)
lea    -0x140(%rbp),%rsi
mov    %r10,-0x78(%rbp)
mov    %rdi,%r8
mov    %r14,%rdi
mov    %rdx,%r14
mov    %rax,%rdx
mov    %r11,%r15
mov    %r14,%rcx
callq  8310 <_TIFFReadTileAndAllocBuffer@plt>
cmp    $0xffffffffffffffff,%rax
jne    2a62d <gtTileSeparate+0x6bd>
mov    -0x140(%rbp),%rax
test   %rax,%rax
je     2a7c1 <gtTileSeparate+0x851>
movslq 0x8(%rbx),%rax
test   %eax,%eax
jne    2a7ef <gtTileSeparate+0x87f>
cmp    $0x1,%r15w
mov    -0x140(%rbp),%r10
je     2a81d <gtTileSeparate+0x8ad>
mov    -0xc8(%rbp),%rcx
test   %ecx,%ecx
mov    -0xa8(%rbp),%rdx
lea    (%rdx,%r10,1),%rsi
lea    (%rdx,%rsi,1),%rax
jne    2a843 <gtTileSeparate+0x8d3>
mov    %r14,%rdx
mov    %r15,%r9
mov    %rcx,%r15
xor    %r14d,%r14d
jmpq   2a45a <gtTileSeparate+0x4ea>
mov    %r15,%r14
mov    %rax,%r15
mov    %r13,%rcx
add    0x88(%rbx),%ecx
mov    %r12,%rdi
xor    %r8d,%r8d
mov    $0x1,%r9d
callq  8820 <TIFFReadTile@plt>
cmp    $0xffffffffffffffff,%rax
je     2a85a <gtTileSeparate+0x8ea>
mov    %r15,%rax
mov    %r14,%r15
mov    -0xb8(%rbp),%r14
mov    -0xe8(%rbp),%rdx
mov    -0xc0(%rbp),%r9
pushq  -0x128(%rbp)
popq   -0x78(%rbp)
jmpq   2a487 <gtTileSeparate+0x517>
movslq 0x8(%rbx),%rax
test   %eax,%eax
jne    2a88b <gtTileSeparate+0x91b>
mov    -0xe8(%rbp),%rdx
mov    -0xc0(%rbp),%r9
jmpq   2a4c5 <gtTileSeparate+0x555>
mov    %r13,%rcx
add    0x88(%rbx),%ecx
mov    %r12,%rdi
mov    %r14,%rsi
xor    %r8d,%r8d
callq  8820 <TIFFReadTile@plt>
cmp    $0xffffffffffffffff,%rax
jne    2a4ce <gtTileSeparate+0x55e>
movslq 0x8(%rbx),%rax
test   %eax,%eax
je     2a4ce <gtTileSeparate+0x55e>
mov    -0xb0(%rbp),%r15
mov    -0x80(%rbp),%r10
mov    -0x88(%rbp),%r8
xor    %r9d,%r9d
mov    -0x118(%rbp),%rsi
pushq  -0x120(%rbp)
popq   -0x38(%rbp)
jmpq   2a5a6 <gtTileSeparate+0x636>
mov    %rdx,%r10
sub    %r11d,%r10d
mov    %r11,%rcx
sub    %edx,%ecx
add    -0x148(%rbp),%ecx
mov    -0x60(%rbp),%rdx
lea    (%rdx,%rcx,1),%edi
lea    (%r12,%r13,1),%r8d
mov    %rax,%r12
mov    %r8,%rax
xor    %edx,%edx
div    %r14d
mov    %edx,%eax
imul   %rax,%r12
mov    -0x98(%rbp),%rax
movslq %eax,%rax
imul   %rax,%rsi
test   %r15d,%r15d
lea    (%rsi,%r12,1),%rdx
jne    2a2f9 <gtTileSeparate+0x389>
mov    -0xb8(%rbp),%r14
xor    %eax,%eax
jmpq   2a304 <gtTileSeparate+0x394>
mov    %r15,%rax
mov    %r14,%rsi
mov    %r13,%r9
mov    %r12,%r10
mov    -0xc8(%rbp),%r15
mov    -0x130(%rbp),%r12
mov    -0x108(%rbp),%r13
mov    -0xb8(%rbp),%r14
mov    -0xe8(%rbp),%rdx
jmpq   2a45a <gtTileSeparate+0x4ea>
mov    -0x78(%rbp),%r10
mov    -0x80(%rbp),%r8
mov    -0x88(%rbp),%r15
mov    -0xb0(%rbp),%r14
xor    %r9d,%r9d
mov    -0x118(%rbp),%rsi
pushq  -0x120(%rbp)
popq   -0x38(%rbp)
jmpq   2a5a6 <gtTileSeparate+0x636>
mov    -0x78(%rbp),%r10
mov    -0x80(%rbp),%r8
mov    -0x88(%rbp),%r15
mov    -0xb0(%rbp),%r14
xor    %r9d,%r9d
mov    -0x118(%rbp),%rsi
pushq  -0x120(%rbp)
popq   -0x38(%rbp)
jmpq   2a5a6 <gtTileSeparate+0x636>
mov    -0xc8(%rbp),%rax
test   %eax,%eax
jne    2a8b5 <gtTileSeparate+0x945>
mov    %r14,%rdx
mov    %r15,%r9
mov    %rax,%r15
xor    %r14d,%r14d
mov    %r10,%rax
mov    %rax,%rsi
jmpq   2a45a <gtTileSeparate+0x4ea>
add    %rax,%rdx
mov    %r15,%r9
mov    %rcx,%r15
mov    %r14,%rcx
mov    %rdx,%r14
mov    %rcx,%rdx
jmpq   2a45a <gtTileSeparate+0x4ea>
movslq 0x8(%rbx),%rax
test   %eax,%eax
jne    2a8d6 <gtTileSeparate+0x966>
mov    %r15,%rax
mov    %r14,%r15
mov    -0xb8(%rbp),%r14
mov    -0xe8(%rbp),%rdx
mov    -0xc0(%rbp),%r9
pushq  -0x128(%rbp)
popq   -0x78(%rbp)
jmpq   2a487 <gtTileSeparate+0x517>
mov    -0xb0(%rbp),%r15
mov    -0x80(%rbp),%r10
mov    -0x88(%rbp),%r8
xor    %r9d,%r9d
mov    -0x118(%rbp),%rsi
pushq  -0x120(%rbp)
popq   -0x38(%rbp)
jmpq   2a5a6 <gtTileSeparate+0x636>
mov    -0xa0(%rbp),%rcx
add    %r10,%rcx
mov    %r14,%rdx
mov    %rcx,%r14
mov    %r15,%r9
mov    %rax,%r15
mov    %r10,%rax
mov    %rax,%rsi
jmpq   2a45a <gtTileSeparate+0x4ea>
mov    -0xb8(%rbp),%r14
mov    -0x80(%rbp),%r10
mov    -0x88(%rbp),%r8
xor    %r9d,%r9d
mov    -0x118(%rbp),%rsi
pushq  -0x120(%rbp)
popq   -0x38(%rbp)
jmpq   2a5a6 <gtTileSeparate+0x636>

000000000002a900 <gtStripContig>:
push   %rbp
mov    %rsp,%rbp
sub    $0xa0,%rsp
mov    %rsi,-0x48(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rdx,-0x80(%rbp)
mov    %rcx,-0x88(%rbp)
mov    0x48(%rdi),%rax
mov    %rax,-0x40(%rbp)
mov    (%rdi),%r14
movq   $0x0,-0x98(%rbp)
mov    0x14(%rdi),%eax
mov    %rax,-0x78(%rbp)
mov    %r13,%r15
mov    %r12,%r13
mov    %rbx,%r12
mov    %rdi,%rbx
xor    %eax,%eax
mov    $0x212,%esi
lea    -0x8c(%rbp),%rdx
mov    %r14,%rdi
lea    -0x8a(%rbp),%rcx
callq  8390 <TIFFGetFieldDefaulted@plt>
movzwl -0x8a(%rbp),%eax
test   %ax,%ax
je     2a9ae <gtStripContig+0xae>
mov    %r14,%rdi
callq  8070 <TIFFStripSize@plt>
mov    %rax,-0x38(%rbp)
mov    %rbx,%rdi
mov    %r15,-0x18(%rbp)
callq  2bd40 <setorientation>
mov    %rax,-0x30(%rbp)
and    $0x1,%eax
mov    %rax,-0x58(%rbp)
test   %eax,%eax
jg     2a9e9 <gtStripContig+0xe9>
mov    -0x88(%rbp),%rcx
mov    -0x80(%rbp),%r15
xor    %r8d,%r8d
mov    %r8,%rax
jmp    2a9fe <gtStripContig+0xfe>
mov    %r14,%rdi
xor    %ebx,%ebx
mov    0x3b8(%rdi),%r14
callq  85f0 <TIFFFileName@plt>
mov    %rax,%rsi
mov    %rbx,%rax
mov    %r14,%rdi
lea    0x44c0d(%rip),%rdx        # 6f5dc <display_sRGB+0x10f4>
callq  8a00 <TIFFErrorExt@plt>
mov    %r12,%rbx
mov    %r13,%r12
mov    %r15,%r13
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
xor    %eax,%eax
leaveq 
retq   
mov    -0x80(%rbp),%r15
lea    (%r15,%r15,1),%eax
neg    %eax
mov    -0x88(%rbp),%rcx
lea    -0x1(%rcx),%r8d
mov    %rax,-0x68(%rbp)
xor    %eax,%eax
mov    $0x116,%esi
lea    -0x90(%rbp),%rdx
mov    %r13,-0x10(%rbp)
mov    %r14,%rdi
mov    %r12,-0x8(%rbp)
mov    %rcx,%r12
mov    %r8,%r13
callq  8390 <TIFFGetFieldDefaulted@plt>
mov    %r14,%rdi
callq  8410 <TIFFScanlineSize@plt>
mov    %rax,-0x70(%rbp)
mov    -0x78(%rbp),%rcx
cmp    %r15d,%ecx
ja     2aa3f <gtStripContig+0x13f>
xor    %ecx,%ecx
jmp    2aa42 <gtStripContig+0x142>
sub    %r15d,%ecx
mov    %rcx,-0x60(%rbp)
mov    %r13,%rcx
mov    %rax,%r13
mov    %r12,%r8
xor    %esi,%esi
mov    -0x48(%rbp),%rdi
mov    %rsi,%r12
jmp    2aa7c <gtStripContig+0x17c>
mov    %r15,%rax
neg    %eax
add    %r15d,%r12d
lea    0x0(%r13,%rax,1),%ecx
mov    -0x70(%rbp),%r13
mov    -0x88(%rbp),%r8
mov    -0x80(%rbp),%r15
xor    %esi,%esi
mov    -0x48(%rbp),%rdi
cmp    %r8d,%r12d
jb     2aaa1 <gtStripContig+0x1a1>
mov    $0x1,%r12d
mov    -0x30(%rbp),%rax
and    $0x2,%eax
test   %eax,%eax
jle    2abee <gtStripContig+0x2ee>
mov    %r15d,%eax
mov    %rsi,%rbx
jmpq   2ac32 <gtStripContig+0x332>
mov    %r12,%rax
add    0x88(%rbx),%eax
mov    -0x90(%rbp),%r15d
xor    %edx,%edx
div    %r15d
sub    %edx,%r15d
lea    (%r15,%r12,1),%eax
cmp    %eax,%r8d
jae    2aac8 <gtStripContig+0x1c8>
sub    %r12d,%r8d
mov    %r8,%r15
mov    %r15,-0x78(%rbp)
movzwl -0x8a(%rbp),%esi
xor    %edx,%edx
mov    %r15,%rax
div    %esi
test   %edx,%edx
je     2aaf1 <gtStripContig+0x1f1>
movzwl -0x8a(%rbp),%esi
xor    %edx,%edx
mov    %r15,%rax
div    %esi
sub    %edx,%esi
add    %esi,%r15d
mov    %r12,%rsi
add    0x88(%rbx),%esi
mov    %r14,%rdi
xor    %edx,%edx
mov    %rcx,-0x50(%rbp)
callq  8280 <TIFFComputeStrip@plt>
mov    %rax,%rsi
mov    %r12,%rax
add    0x88(%rbx),%eax
mov    -0x90(%rbp),%ecx
xor    %edx,%edx
div    %ecx
lea    (%r15,%rdx,1),%eax
mov    %eax,%r8d
imul   %r13,%r8
mov    %r14,%rdi
lea    -0x98(%rbp),%rdx
mov    -0x38(%rbp),%rcx
callq  8ab0 <_TIFFReadEncodedStripAndAllocBuffer@plt>
cmp    $0xffffffffffffffff,%rax
jne    2ab5e <gtStripContig+0x25e>
mov    -0x98(%rbp),%rax
test   %rax,%rax
je     2ac44 <gtStripContig+0x344>
movslq 0x8(%rbx),%rax
test   %eax,%eax
jne    2ac5d <gtStripContig+0x35d>
sub    $0x10,%rsp
mov    %r12,%rax
add    0x88(%rbx),%eax
mov    -0x90(%rbp),%ecx
xor    %edx,%edx
div    %ecx
mov    %edx,%ecx
imul   %r13,%rcx
movzwl 0x1e(%rbx),%eax
movslq 0x8c(%rbx),%rdx
imul   %rdx,%rax
add    %rcx,%rax
add    -0x98(%rbp),%rax
mov    -0x60(%rbp),%rcx
mov    %ecx,(%rsp)
mov    -0x68(%rbp),%rcx
mov    %ecx,0x8(%rsp)
mov    %rax,0x10(%rsp)
mov    -0x50(%rbp),%r13
mov    -0x80(%rbp),%r8
mov    %r8,%rax
imul   %r13d,%eax
mov    %eax,%eax
mov    -0x48(%rbp),%rcx
lea    (%rcx,%rax,4),%rsi
mov    %rbx,%rdi
xor    %edx,%edx
mov    %r13,%rcx
mov    -0x78(%rbp),%r15
mov    %r15,%r9
mov    -0x40(%rbp),%rax
callq  *%rax
add    $0x10,%rsp
mov    -0x58(%rbp),%rax
test   %eax,%eax
jg     2aa5a <gtStripContig+0x15a>
mov    %r15,%rax
jmpq   2aa5f <gtStripContig+0x15f>
mov    -0x98(%rbp),%rdi
callq  8bb0 <_TIFFfree@plt>
mov    %r12,%rax
mov    -0x8(%rbp),%rbx
mov    -0x10(%rbp),%r12
mov    -0x18(%rbp),%r13
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
leaveq 
retq   
mov    (%rdx),%r9d
mov    (%rcx),%r10d
mov    %r9d,(%rcx)
mov    %r10d,(%rdx)
add    $0x4,%rcx
add    $0xfffffffffffffffc,%rdx
cmp    %rcx,%rdx
ja     2ac13 <gtStripContig+0x313>
add    $0x1,%ebx
add    %r15d,%esi
cmp    %ebx,%r8d
jbe    2abee <gtStripContig+0x2ee>
mov    %esi,%ecx
lea    (%rdi,%rcx,4),%rcx
lea    -0x4(%rcx,%rax,4),%rdx
jmp    2ac27 <gtStripContig+0x327>
mov    -0x88(%rbp),%r8
mov    -0x80(%rbp),%r15
xor    %esi,%esi
mov    -0x48(%rbp),%rdi
mov    %rsi,%r12
jmpq   2aa87 <gtStripContig+0x187>
mov    -0x88(%rbp),%r8
mov    -0x80(%rbp),%r15
xor    %esi,%esi
mov    -0x48(%rbp),%rdi
mov    %rsi,%r12
jmpq   2aa87 <gtStripContig+0x187>
nopw   %cs:0x0(%rax,%rax,1)

000000000002ac80 <gtStripSeparate>:
push   %rbp
mov    %rsp,%rbp
sub    $0x110,%rsp
mov    %rsi,-0x48(%rbp)
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rcx,-0xc8(%rbp)
mov    0x48(%rdi),%rax
mov    %rax,-0x40(%rbp)
xor    %eax,%eax
mov    %rax,-0xe8(%rbp)
mov    $0x1,%eax
mov    %rax,-0xf0(%rbp)
mov    $0x3,%eax
mov    %rax,-0xd0(%rbp)
mov    (%rdi),%r13
mov    %r13,-0xc0(%rbp)
movq   $0x0,-0x108(%rbp)
mov    0x14(%rdi),%eax
mov    %rax,-0xd8(%rbp)
mov    %rdx,%rbx
mov    %rcx,%r12
mov    %rdi,%r14
movslq 0x10(%r14),%r15
mov    %r13,%rdi
callq  8070 <TIFFStripSize@plt>
test   %rax,%rax
jne    2ad45 <gtStripSeparate+0xc5>
mov    %r15,%r8
mov    %rax,%r15
xor    %ecx,%ecx
test   %rcx,%rcx
je     2ad69 <gtStripSeparate+0xe9>
mov    %r14,%rdi
mov    %rcx,-0xb0(%rbp)
mov    %r8,-0xf8(%rbp)
callq  2bd40 <setorientation>
mov    %rax,-0x30(%rbp)
and    $0x1,%eax
mov    %rax,-0x58(%rbp)
test   %eax,%eax
jg     2adae <gtStripSeparate+0x12e>
xor    %eax,%eax
mov    %rax,%rcx
jmp    2adb8 <gtStripSeparate+0x138>
mov    $0x4,%esi
test   %r15d,%r15d
jne    2adde <gtStripSeparate+0x15e>
mov    $0x3,%edx
pushq  -0xe8(%rbp)
popq   -0xf8(%rbp)
jmpq   2aded <gtStripSeparate+0x16d>
mov    %r13,%rdi
xor    %ebx,%ebx
mov    0x3b8(%rdi),%r12
callq  85f0 <TIFFFileName@plt>
mov    %rax,%rsi
mov    %rbx,%rax
mov    %r12,%rdi
lea    0x4482c(%rip),%rdx        # 6f5b6 <display_sRGB+0x10ce>
lea    0x4486e(%rip),%rcx        # 6f5ff <display_sRGB+0x1117>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
lea    (%rbx,%rbx,1),%ecx
neg    %ecx
lea    -0x1(%r12),%eax
mov    %rcx,-0x70(%rbp)
mov    %rax,-0x50(%rbp)
movzwl 0x24(%r14),%eax
test   %ax,%ax
je     2ae00 <gtStripSeparate+0x180>
cmp    $0x1,%ax
jne    2ae4c <gtStripSeparate+0x1cc>
pushq  -0xf0(%rbp)
popq   -0xd0(%rbp)
jmp    2ae11 <gtStripSeparate+0x191>
mov    %rsi,%rdx
pushq  -0xf0(%rbp)
popq   -0xf8(%rbp)
mov    -0xf8(%rbp),%rcx
test   %rcx,%rcx
jne    2ae60 <gtStripSeparate+0x1e0>
mov    $0x3,%ecx
jmp    2ae63 <gtStripSeparate+0x1e3>
test   %ax,%ax
jne    2ae11 <gtStripSeparate+0x191>
pushq  -0xf0(%rbp)
popq   -0xd0(%rbp)
xor    %eax,%eax
mov    $0x116,%esi
lea    -0xfc(%rbp),%rdx
mov    %r13,%rdi
mov    %r14,-0xe0(%rbp)
callq  8390 <TIFFGetFieldDefaulted@plt>
mov    %r13,%rdi
callq  8410 <TIFFScanlineSize@plt>
mov    %rax,-0xb8(%rbp)
mov    -0xd8(%rbp),%rcx
cmp    %ebx,%ecx
ja     2ae81 <gtStripSeparate+0x201>
xor    %ecx,%ecx
jmp    2ae83 <gtStripSeparate+0x203>
cmp    $0x3,%ax
jne    2ae11 <gtStripSeparate+0x191>
pushq  -0xf0(%rbp)
popq   -0xd0(%rbp)
jmp    2ae11 <gtStripSeparate+0x191>
mov    %rsi,%rcx
imul   %rax,%rdx
mov    %r15,%r8
mov    %rax,%r15
mov    %rdx,%rax
cqto   
idiv   %r15
cmp    %rax,%rcx
je     2aebd <gtStripSeparate+0x23d>
xor    %ecx,%ecx
jmpq   2ad14 <gtStripSeparate+0x94>
sub    %ebx,%ecx
mov    %rcx,-0x68(%rbp)
lea    (%r15,%r15,2),%rcx
mov    %r15,-0xa0(%rbp)
mov    %rcx,-0x98(%rbp)
mov    %rbx,-0x60(%rbp)
mov    %r12,%rcx
mov    %rax,%r15
mov    -0xe0(%rbp),%rbx
xor    %edi,%edi
mov    %rdi,%r8
mov    %r8,%r9
mov    %r9,%r10
mov    %r10,%r11
mov    %r11,%r14
jmp    2af15 <gtStripSeparate+0x295>
test   %r8d,%r8d
jne    2aec7 <gtStripSeparate+0x247>
mov    $0x3,%esi
mov    %r15,%rcx
imul   %rsi,%rcx
jmpq   2ad14 <gtStripSeparate+0x94>
mov    %r12,%rax
neg    %eax
lea    (%rbx,%r12,1),%edx
add    %r13d,%eax
mov    %rax,-0x50(%rbp)
mov    %r14,%r10
mov    %rdx,%r14
mov    %r15,%r11
mov    -0xc0(%rbp),%r13
mov    -0xa8(%rbp),%r9
mov    -0x78(%rbp),%r8
mov    -0xb8(%rbp),%r15
mov    -0xc8(%rbp),%rcx
mov    -0xe0(%rbp),%rbx
xor    %edi,%edi
cmp    %ecx,%r14d
jb     2af61 <gtStripSeparate+0x2e1>
pushq  -0xf0(%rbp)
popq   -0xe8(%rbp)
mov    -0x30(%rbp),%rax
and    $0x2,%eax
test   %eax,%eax
jg     2b0bd <gtStripSeparate+0x43d>
mov    -0xe8(%rbp),%r12
mov    -0x108(%rbp),%rdi
callq  8bb0 <_TIFFfree@plt>
mov    %r12,%rax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
mov    %r14,%rax
add    0x88(%rbx),%eax
mov    -0xfc(%rbp),%r12d
xor    %edx,%edx
div    %r12d
sub    %edx,%r12d
lea    (%r14,%r12,1),%eax
cmp    %ecx,%eax
jbe    2af87 <gtStripSeparate+0x307>
sub    %r14d,%ecx
mov    %rcx,%r12
mov    %r14,%rsi
add    0x88(%rbx),%esi
mov    %rsi,-0xd8(%rbp)
mov    -0x108(%rbp),%rax
test   %rax,%rax
je     2b0db <gtStripSeparate+0x45b>
mov    %r13,%rdi
xor    %edx,%edx
mov    %r8,-0x80(%rbp)
mov    %r11,-0x88(%rbp)
mov    %r10,-0x90(%rbp)
mov    %r9,-0xa8(%rbp)
callq  8280 <TIFFComputeStrip@plt>
mov    %rax,%rsi
mov    %r14,%rax
add    0x88(%rbx),%eax
mov    -0xfc(%rbp),%ecx
xor    %edx,%edx
div    %ecx
lea    (%rdx,%r12,1),%eax
mov    %eax,%ecx
imul   %r15,%rcx
mov    %r13,%rdi
mov    -0x80(%rbp),%r15
mov    %r15,%rdx
callq  8810 <TIFFReadEncodedStrip@plt>
cmp    $0xffffffffffffffff,%rax
je     2b17e <gtStripSeparate+0x4fe>
mov    %r15,%r8
mov    -0xb8(%rbp),%r15
mov    -0xa8(%rbp),%r9
mov    -0x90(%rbp),%r10
mov    -0x88(%rbp),%r11
mov    -0xd0(%rbp),%rdx
mov    -0xf8(%rbp),%rax
mov    %r8,-0x78(%rbp)
mov    %r11,-0x80(%rbp)
mov    %r10,-0x88(%rbp)
mov    %r9,-0xa8(%rbp)
cmp    $0x1,%dx
ja     2b1bc <gtStripSeparate+0x53c>
pushq  -0xe8(%rbp)
popq   -0x38(%rbp)
mov    -0x38(%rbp),%rcx
test   %rcx,%rcx
jne    2b238 <gtStripSeparate+0x5b8>
test   %eax,%eax
jne    2b2ae <gtStripSeparate+0x62e>
pushq  -0xe8(%rbp)
popq   -0x90(%rbp)
mov    %r14,%rax
add    0x88(%rbx),%eax
mov    -0xfc(%rbp),%ecx
xor    %edx,%edx
div    %ecx
mov    %edx,%eax
imul   %rax,%r15
movzwl 0x1e(%rbx),%eax
movslq 0x8c(%rbx),%rcx
imul   %rcx,%rax
lea    (%rax,%r15,1),%rdx
mov    -0x90(%rbp),%rax
test   %rax,%rax
jne    2b31c <gtStripSeparate+0x69c>
xor    %eax,%eax
jmpq   2b320 <gtStripSeparate+0x6a0>
mov    -0x60(%rbp),%r10
mov    %r10d,%eax
mov    -0x48(%rbp),%r11
lea    (%r11,%rax,4),%rax
mov    -0xe8(%rbp),%r12
mov    %rdi,%rbx
jmpq   2b3bd <gtStripSeparate+0x73d>
mov    %r13,%rdi
xor    %edx,%edx
callq  8280 <TIFFComputeStrip@plt>
mov    %rax,%rsi
mov    %r14,%rax
add    0x88(%rbx),%eax
mov    -0xfc(%rbp),%ecx
xor    %edx,%edx
div    %ecx
lea    (%r12,%rdx,1),%eax
mov    %eax,%eax
mov    %r15,%r8
imul   %rax,%r8
mov    %r13,%rdi
lea    -0x108(%rbp),%rdx
mov    -0xb0(%rbp),%rcx
callq  8ab0 <_TIFFReadEncodedStripAndAllocBuffer@plt>
cmp    $0xffffffffffffffff,%rax
jne    2b140 <gtStripSeparate+0x4c0>
mov    -0x108(%rbp),%rax
test   %rax,%rax
je     2b3d2 <gtStripSeparate+0x752>
movslq 0x8(%rbx),%rax
test   %eax,%eax
jne    2b3e0 <gtStripSeparate+0x760>
mov    -0xd0(%rbp),%rdx
cmp    $0x1,%dx
mov    -0x108(%rbp),%r8
je     2b3ee <gtStripSeparate+0x76e>
mov    -0xf8(%rbp),%rax
test   %eax,%eax
mov    -0xa0(%rbp),%rcx
lea    (%rcx,%r8,1),%r11
lea    (%rcx,%r11,1),%r10
jne    2b40b <gtStripSeparate+0x78b>
xor    %r9d,%r9d
jmpq   2b030 <gtStripSeparate+0x3b0>
movslq 0x8(%rbx),%rax
test   %eax,%eax
jne    2b414 <gtStripSeparate+0x794>
mov    %r15,%r8
mov    -0xb8(%rbp),%r15
mov    -0xa8(%rbp),%r9
mov    -0x90(%rbp),%r10
mov    -0x88(%rbp),%r11
mov    -0xd0(%rbp),%rdx
mov    -0xf8(%rbp),%rax
jmpq   2b030 <gtStripSeparate+0x3b0>
mov    %r13,%rdi
mov    -0xd8(%rbp),%rsi
mov    $0x1,%edx
callq  8280 <TIFFComputeStrip@plt>
mov    %rax,%rsi
mov    %r14,%rax
add    0x88(%rbx),%eax
mov    -0xfc(%rbp),%ecx
xor    %edx,%edx
div    %ecx
lea    (%rdx,%r12,1),%eax
mov    %eax,%ecx
imul   %r15,%rcx
mov    %r13,%rdi
mov    -0x80(%rbp),%rdx
callq  8810 <TIFFReadEncodedStrip@plt>
cmp    $0xffffffffffffffff,%rax
je     2b422 <gtStripSeparate+0x7a2>
mov    -0xa8(%rbp),%r9
mov    -0x88(%rbp),%r10
mov    -0x80(%rbp),%r11
mov    -0x78(%rbp),%r8
mov    -0xd0(%rbp),%rdx
mov    -0xf8(%rbp),%rax
pushq  -0xf0(%rbp)
popq   -0x38(%rbp)
jmpq   2b059 <gtStripSeparate+0x3d9>
mov    %r13,%rdi
mov    -0xd8(%rbp),%rsi
mov    $0x2,%edx
callq  8280 <TIFFComputeStrip@plt>
mov    %rax,%rsi
mov    %r14,%rax
add    0x88(%rbx),%eax
mov    -0xfc(%rbp),%ecx
xor    %edx,%edx
div    %ecx
lea    (%rdx,%r12,1),%eax
mov    %eax,%ecx
imul   %r15,%rcx
mov    %r13,%rdi
mov    -0x88(%rbp),%rdx
callq  8810 <TIFFReadEncodedStrip@plt>
cmp    $0xffffffffffffffff,%rax
je     2b460 <gtStripSeparate+0x7e0>
mov    -0xa8(%rbp),%r9
mov    -0x88(%rbp),%r10
mov    -0x80(%rbp),%r11
mov    -0x78(%rbp),%r8
mov    -0xd0(%rbp),%rdx
mov    -0xf8(%rbp),%rax
jmpq   2b066 <gtStripSeparate+0x3e6>
mov    %r13,%rdi
mov    -0xd8(%rbp),%rsi
callq  8280 <TIFFComputeStrip@plt>
mov    %rax,%rsi
mov    %r14,%rax
add    0x88(%rbx),%eax
mov    -0xfc(%rbp),%ecx
xor    %edx,%edx
div    %ecx
lea    (%rdx,%r12,1),%eax
mov    %eax,%ecx
imul   %r15,%rcx
mov    %r13,%rdi
mov    -0xa8(%rbp),%r13
mov    %r13,%rdx
callq  8810 <TIFFReadEncodedStrip@plt>
cmp    $0xffffffffffffffff,%rax
je     2b491 <gtStripSeparate+0x811>
mov    %r13,%r9
mov    -0x88(%rbp),%r10
mov    -0x80(%rbp),%r11
mov    -0x78(%rbp),%r8
pushq  -0xf0(%rbp)
popq   -0x90(%rbp)
jmpq   2b07a <gtStripSeparate+0x3fa>
lea    (%rdx,%r9,1),%rax
sub    $0x30,%rsp
mov    -0x68(%rbp),%rcx
mov    %ecx,(%rsp)
mov    -0x70(%rbp),%rcx
mov    %ecx,0x8(%rsp)
lea    (%rdx,%r8,1),%rcx
mov    %rcx,0x10(%rsp)
lea    (%rdx,%r11,1),%rcx
mov    %rcx,0x18(%rsp)
lea    (%rdx,%r10,1),%rcx
mov    %rcx,0x20(%rsp)
mov    %rax,0x28(%rsp)
mov    -0x60(%rbp),%r8
mov    -0x50(%rbp),%r13
mov    %r8,%rax
imul   %r13d,%eax
mov    %eax,%eax
mov    -0x48(%rbp),%rcx
lea    (%rcx,%rax,4),%rsi
mov    %rbx,%rdi
mov    %r14,%rbx
mov    %r10,%r14
mov    %r11,%r15
xor    %edx,%edx
mov    %r13,%rcx
mov    %r12,%r9
mov    -0x40(%rbp),%rax
callq  *%rax
add    $0x30,%rsp
mov    -0x58(%rbp),%rax
test   %eax,%eax
jg     2aed3 <gtStripSeparate+0x253>
mov    %r12,%rax
jmpq   2aed8 <gtStripSeparate+0x258>
mov    (%rsi),%r8d
mov    (%rdx),%r9d
mov    %r8d,(%rdx)
mov    %r9d,(%rsi)
add    $0x4,%rdx
add    $0xfffffffffffffffc,%rsi
cmp    %rdx,%rsi
ja     2b39e <gtStripSeparate+0x71e>
add    $0x1,%ebx
add    %r10d,%edi
cmp    %ebx,%ecx
jbe    2af3c <gtStripSeparate+0x2bc>
mov    %edi,%esi
lea    (%r11,%rsi,4),%rdx
lea    -0x4(%rax,%rsi,4),%rsi
jmp    2b3b2 <gtStripSeparate+0x732>
mov    -0xc8(%rbp),%rcx
xor    %edi,%edi
jmpq   2af26 <gtStripSeparate+0x2a6>
mov    -0xc8(%rbp),%rcx
xor    %edi,%edi
jmpq   2af26 <gtStripSeparate+0x2a6>
mov    -0xf8(%rbp),%rax
test   %eax,%eax
jne    2b4bc <gtStripSeparate+0x83c>
xor    %r9d,%r9d
mov    %r8,%r10
mov    %r10,%r11
jmpq   2b030 <gtStripSeparate+0x3b0>
lea    (%rcx,%r10,1),%r9
jmpq   2b030 <gtStripSeparate+0x3b0>
mov    -0xc8(%rbp),%rcx
xor    %edi,%edi
jmpq   2af26 <gtStripSeparate+0x2a6>
movslq 0x8(%rbx),%rax
test   %eax,%eax
jne    2b4d2 <gtStripSeparate+0x852>
mov    -0xa8(%rbp),%r9
mov    -0x88(%rbp),%r10
mov    -0x80(%rbp),%r11
mov    -0x78(%rbp),%r8
mov    -0xd0(%rbp),%rdx
mov    -0xf8(%rbp),%rax
pushq  -0xf0(%rbp)
popq   -0x38(%rbp)
jmpq   2b059 <gtStripSeparate+0x3d9>
movslq 0x8(%rbx),%rax
test   %eax,%eax
jne    2b4e0 <gtStripSeparate+0x860>
mov    -0xa8(%rbp),%r9
mov    -0x88(%rbp),%r10
mov    -0x80(%rbp),%r11
mov    -0x78(%rbp),%r8
mov    -0xd0(%rbp),%rdx
mov    -0xf8(%rbp),%rax
jmpq   2b066 <gtStripSeparate+0x3e6>
movslq 0x8(%rbx),%rax
test   %eax,%eax
jne    2b4ee <gtStripSeparate+0x86e>
mov    %r13,%r9
mov    -0x88(%rbp),%r10
mov    -0x80(%rbp),%r11
mov    -0x78(%rbp),%r8
pushq  -0xf0(%rbp)
popq   -0x90(%rbp)
jmpq   2b07a <gtStripSeparate+0x3fa>
mov    -0x98(%rbp),%rcx
lea    (%r8,%rcx,1),%r9
mov    %r8,%r10
mov    %r10,%r11
jmpq   2b030 <gtStripSeparate+0x3b0>
mov    -0xc8(%rbp),%rcx
xor    %edi,%edi
jmpq   2af26 <gtStripSeparate+0x2a6>
mov    -0xc8(%rbp),%rcx
xor    %edi,%edi
jmpq   2af26 <gtStripSeparate+0x2a6>
mov    -0xc8(%rbp),%rcx
xor    %edi,%edi
jmpq   2af26 <gtStripSeparate+0x2a6>
nopl   0x0(%rax)

000000000002b500 <PickContigCase>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x8(%rbp)
mov    %rdi,%r15
mov    (%r15),%rdi
callq  8890 <TIFFIsTiled@plt>
test   %eax,%eax
jne    2b524 <PickContigCase+0x24>
lea    -0xc22(%rip),%rax        # 2a900 <gtStripContig>
jmp    2b52b <PickContigCase+0x2b>
lea    -0x1a2b(%rip),%rax        # 29b00 <gtTileContig>
mov    %rax,0x40(%r15)
movq   $0x0,0x48(%r15)
movzwl 0x24(%r15),%eax
cmp    $0x8,%ax
ja     2b591 <PickContigCase+0x91>
lea    0x42cf3(%rip),%rcx        # 6e23c <TIFFFaxBlackTable+0x10080>
movslq (%rcx,%rax,4),%rax
add    %rcx,%rax
jmpq   *%rax
movzwl 0x1e(%r15),%eax
cmp    $0x3,%ax
jne    2b591 <PickContigCase+0x91>
mov    %r15,%rdi
callq  317d0 <buildMap>
test   %eax,%eax
je     2b591 <PickContigCase+0x91>
movzwl 0x1c(%r15),%eax
cmp    $0x8,%ax
jne    2b591 <PickContigCase+0x91>
mov    %r15,%rdi
callq  30cb0 <initCIELabConversion>
mov    %rax,0x48(%r15)
jmp    2b591 <PickContigCase+0x91>
movzwl 0x1e(%r15),%eax
cmp    $0x2,%ax
ja     2b735 <PickContigCase+0x235>
xor    %eax,%eax
mov    0x40(%r15),%rcx
test   %rcx,%rcx
jne    2b745 <PickContigCase+0x245>
mov    -0x8(%rbp),%r15
leaveq 
retq   
movzwl 0x1c(%r15),%eax
cmp    $0x8,%ax
je     2b75d <PickContigCase+0x25d>
cmp    $0x10,%ax
jne    2b591 <PickContigCase+0x91>
movslq 0x10(%r15),%rax
cmp    $0x1,%eax
jne    2b789 <PickContigCase+0x289>
movzwl 0x1e(%r15),%eax
cmp    $0x3,%ax
jbe    2b789 <PickContigCase+0x289>
mov    %r15,%rdi
callq  2bc30 <BuildMapBitdepth16To8>
test   %eax,%eax
je     2b591 <PickContigCase+0x91>
lea    0x15b6(%rip),%rax        # 2cba0 <putRGBAAcontig16bittile>
mov    %rax,0x48(%r15)
jmp    2b591 <PickContigCase+0x91>
movzwl 0x1e(%r15),%eax
cmp    $0x3,%ax
jbe    2b591 <PickContigCase+0x91>
mov    %r15,%rdi
callq  317d0 <buildMap>
test   %eax,%eax
je     2b591 <PickContigCase+0x91>
movzwl 0x1c(%r15),%eax
cmp    $0x8,%ax
jne    2b591 <PickContigCase+0x91>
mov    0x50(%r15),%rax
test   %rax,%rax
jne    2b7d5 <PickContigCase+0x2d5>
lea    0x16e6(%rip),%rax        # 2cd10 <putRGBcontig8bitCMYKtile>
mov    %rax,0x48(%r15)
jmpq   2b591 <PickContigCase+0x91>
mov    %r15,%rdi
callq  317d0 <buildMap>
test   %eax,%eax
je     2b591 <PickContigCase+0x91>
movzwl 0x1c(%r15),%eax
cmp    $0x3,%ax
jbe    2b7e5 <PickContigCase+0x2e5>
cmp    $0x4,%ax
je     2b809 <PickContigCase+0x309>
cmp    $0x8,%ax
jne    2b591 <PickContigCase+0x91>
lea    0x833(%rip),%rax        # 2bea0 <put8bitcmaptile>
mov    %rax,0x48(%r15)
jmpq   2b591 <PickContigCase+0x91>
mov    %r15,%rdi
callq  317d0 <buildMap>
test   %eax,%eax
je     2b591 <PickContigCase+0x91>
movzwl 0x1c(%r15),%eax
add    $0xffffffff,%eax
cmp    $0xf,%eax
ja     2b591 <PickContigCase+0x91>
lea    0x42bc2(%rip),%rcx        # 6e260 <TIFFFaxBlackTable+0x100a4>
movslq (%rcx,%rax,4),%rax
add    %rcx,%rax
jmpq   *%rax
lea    0xbf2(%rip),%rax        # 2c2a0 <put1bitbwtile>
mov    %rax,0x48(%r15)
jmpq   2b591 <PickContigCase+0x91>
movzwl 0x1c(%r15),%eax
cmp    $0x8,%ax
jne    2b591 <PickContigCase+0x91>
movzwl 0x1e(%r15),%eax
cmp    $0x3,%ax
jne    2b591 <PickContigCase+0x91>
mov    %r15,%rdi
callq  30af0 <initYCbCrConversion>
test   %eax,%eax
je     2b591 <PickContigCase+0x91>
xor    %eax,%eax
mov    (%r15),%rdi
mov    $0x212,%esi
lea    -0xc(%rbp),%rdx
lea    -0xa(%rbp),%rcx
callq  8390 <TIFFGetFieldDefaulted@plt>
movzwl -0xa(%rbp),%eax
movzwl -0xc(%rbp),%ecx
shl    $0x4,%ecx
or     %ecx,%eax
add    $0xffffffef,%eax
cmp    $0x33,%eax
ja     2b591 <PickContigCase+0x91>
lea    0x42b84(%rip),%rcx        # 6e2a0 <TIFFFaxBlackTable+0x100e4>
movslq (%rcx,%rax,4),%rax
add    %rcx,%rax
jmpq   *%rax
lea    0x5184(%rip),%rax        # 308b0 <putcontig8bitYCbCr11tile>
mov    %rax,0x48(%r15)
jmpq   2b591 <PickContigCase+0x91>
lea    0xdb4(%rip),%rax        # 2c4f0 <putRGBcontig8bittile>
mov    %rax,0x48(%r15)
jmpq   2b591 <PickContigCase+0x91>
mov    0x48(%r15),%rcx
test   %rcx,%rcx
je     2b8d4 <PickContigCase+0x3d4>
mov    $0x1,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
movslq 0x10(%r15),%rax
cmp    $0x1,%eax
jne    2b8da <PickContigCase+0x3da>
movzwl 0x1e(%r15),%eax
cmp    $0x3,%ax
jbe    2b8da <PickContigCase+0x3da>
lea    0x1000(%rip),%rax        # 2c780 <putRGBAAcontig8bittile>
mov    %rax,0x48(%r15)
jmpq   2b591 <PickContigCase+0x91>
movslq 0x10(%r15),%rax
cmp    $0x2,%eax
jne    2b916 <PickContigCase+0x416>
movzwl 0x1e(%r15),%eax
cmp    $0x3,%ax
jbe    2b916 <PickContigCase+0x416>
mov    %r15,%rdi
callq  2bc30 <BuildMapBitdepth16To8>
test   %eax,%eax
je     2b591 <PickContigCase+0x91>
mov    %r15,%rdi
callq  2bb50 <BuildMapUaToAa>
test   %eax,%eax
je     2b591 <PickContigCase+0x91>
lea    0x1474(%rip),%rax        # 2cc40 <putRGBUAcontig16bittile>
mov    %rax,0x48(%r15)
jmpq   2b591 <PickContigCase+0x91>
lea    0x1f44(%rip),%rax        # 2d720 <putRGBcontig8bitCMYKMaptile>
mov    %rax,0x48(%r15)
jmpq   2b591 <PickContigCase+0x91>
cmp    $0x1,%ax
je     2b945 <PickContigCase+0x445>
cmp    $0x2,%ax
jne    2b591 <PickContigCase+0x91>
lea    0x780(%rip),%rax        # 2bf80 <put2bitcmaptile>
mov    %rax,0x48(%r15)
jmpq   2b591 <PickContigCase+0x91>
lea    0x6f0(%rip),%rax        # 2bf00 <put4bitcmaptile>
mov    %rax,0x48(%r15)
jmpq   2b591 <PickContigCase+0x91>
lea    0xa00(%rip),%rax        # 2c220 <put16bitbwtile>
mov    %rax,0x48(%r15)
jmpq   2b591 <PickContigCase+0x91>
movslq 0x10(%r15),%rax
test   %eax,%eax
je     2b955 <PickContigCase+0x455>
movzwl 0x1e(%r15),%eax
cmp    $0x2,%ax
jne    2b955 <PickContigCase+0x455>
lea    0x965(%rip),%rax        # 2c1b0 <putagreytile>
mov    %rax,0x48(%r15)
jmpq   2b591 <PickContigCase+0x91>
lea    0xc15(%rip),%rax        # 2c470 <put4bitbwtile>
mov    %rax,0x48(%r15)
jmpq   2b591 <PickContigCase+0x91>
lea    0xb45(%rip),%rax        # 2c3b0 <put2bitbwtile>
mov    %rax,0x48(%r15)
jmpq   2b591 <PickContigCase+0x91>
lea    0x2c55(%rip),%rax        # 2e4d0 <putcontig8bitYCbCr44tile>
mov    %rax,0x48(%r15)
jmpq   2b591 <PickContigCase+0x91>
lea    0x3b85(%rip),%rax        # 2f410 <putcontig8bitYCbCr42tile>
mov    %rax,0x48(%r15)
jmpq   2b591 <PickContigCase+0x91>
lea    0x43e5(%rip),%rax        # 2fc80 <putcontig8bitYCbCr41tile>
mov    %rax,0x48(%r15)
jmpq   2b591 <PickContigCase+0x91>
lea    0x47b5(%rip),%rax        # 30060 <putcontig8bitYCbCr22tile>
mov    %rax,0x48(%r15)
jmpq   2b591 <PickContigCase+0x91>
lea    0x4bf5(%rip),%rax        # 304b0 <putcontig8bitYCbCr21tile>
mov    %rax,0x48(%r15)
jmpq   2b591 <PickContigCase+0x91>
lea    0x4de5(%rip),%rax        # 306b0 <putcontig8bitYCbCr12tile>
mov    %rax,0x48(%r15)
jmpq   2b591 <PickContigCase+0x91>
mov    -0x8(%rbp),%r15
leaveq 
retq   
movslq 0x10(%r15),%rax
cmp    $0x2,%eax
jne    2b582 <PickContigCase+0x82>
movzwl 0x1e(%r15),%eax
cmp    $0x3,%ax
jbe    2b582 <PickContigCase+0x82>
mov    %r15,%rdi
callq  2bb50 <BuildMapUaToAa>
test   %eax,%eax
je     2b591 <PickContigCase+0x91>
lea    0x1143(%rip),%rax        # 2ca50 <putRGBUAcontig8bittile>
mov    %rax,0x48(%r15)
jmpq   2b591 <PickContigCase+0x91>
movzwl 0x1e(%r15),%eax
cmp    $0x2,%ax
jbe    2b591 <PickContigCase+0x91>
mov    %r15,%rdi
callq  2bc30 <BuildMapBitdepth16To8>
test   %eax,%eax
je     2b591 <PickContigCase+0x91>
lea    0x11c4(%rip),%rax        # 2cb00 <putRGBcontig16bittile>
mov    %rax,0x48(%r15)
jmpq   2b591 <PickContigCase+0x91>
lea    0x6f4(%rip),%rax        # 2c040 <put1bitcmaptile>
mov    %rax,0x48(%r15)
jmpq   2b591 <PickContigCase+0x91>
lea    0x7f4(%rip),%rax        # 2c150 <putgreytile>
mov    %rax,0x48(%r15)
jmpq   2b591 <PickContigCase+0x91>
data16 nopw %cs:0x0(%rax,%rax,1)

000000000002b970 <PickSeparateCase>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x8(%rbp)
mov    %rdi,%r15
mov    (%r15),%rdi
callq  8890 <TIFFIsTiled@plt>
test   %eax,%eax
jne    2b994 <PickSeparateCase+0x24>
lea    -0xd12(%rip),%rax        # 2ac80 <gtStripSeparate>
jmp    2b99b <PickSeparateCase+0x2b>
lea    -0x1a2b(%rip),%rax        # 29f70 <gtTileSeparate>
mov    %rax,0x40(%r15)
movq   $0x0,0x48(%r15)
movzwl 0x24(%r15),%eax
cmp    $0x6,%ax
ja     2ba25 <PickSeparateCase+0xb5>
lea    0x429b7(%rip),%rcx        # 6e370 <TIFFFaxBlackTable+0x101b4>
movslq (%rcx,%rax,4),%rax
add    %rcx,%rax
jmpq   *%rax
movzwl 0x1c(%r15),%eax
cmp    $0x8,%ax
jne    2ba25 <PickSeparateCase+0xb5>
movzwl 0x1e(%r15),%eax
cmp    $0x3,%ax
jne    2ba25 <PickSeparateCase+0xb5>
mov    %r15,%rdi
callq  30af0 <initYCbCrConversion>
test   %eax,%eax
je     2ba25 <PickSeparateCase+0xb5>
xor    %eax,%eax
mov    (%r15),%rdi
mov    $0x212,%esi
lea    -0xc(%rbp),%rdx
lea    -0xa(%rbp),%rcx
callq  8390 <TIFFGetFieldDefaulted@plt>
movzwl -0xa(%rbp),%eax
movzwl -0xc(%rbp),%ecx
shl    $0x4,%ecx
or     %ecx,%eax
cmp    $0x11,%eax
jne    2ba25 <PickSeparateCase+0xb5>
lea    0x4f8c(%rip),%rax        # 309a0 <putseparate8bitYCbCr11tile>
mov    %rax,0x48(%r15)
jmp    2ba25 <PickSeparateCase+0xb5>
movzwl 0x1c(%r15),%eax
cmp    $0x8,%ax
je     2ba72 <PickSeparateCase+0x102>
xor    %eax,%eax
mov    0x40(%r15),%rcx
test   %rcx,%rcx
jne    2ba92 <PickSeparateCase+0x122>
mov    -0x8(%rbp),%r15
leaveq 
retq   
movzwl 0x1c(%r15),%eax
cmp    $0x8,%ax
je     2baa6 <PickSeparateCase+0x136>
cmp    $0x10,%ax
jne    2ba25 <PickSeparateCase+0xb5>
movslq 0x10(%r15),%rax
cmp    $0x1,%eax
je     2bac4 <PickSeparateCase+0x154>
cmp    $0x2,%eax
je     2bae4 <PickSeparateCase+0x174>
mov    %r15,%rdi
callq  2bc30 <BuildMapBitdepth16To8>
test   %eax,%eax
je     2ba25 <PickSeparateCase+0xb5>
lea    0x2694(%rip),%rax        # 2e100 <putRGBseparate16bittile>
mov    %rax,0x48(%r15)
jmp    2ba25 <PickSeparateCase+0xb5>
movzwl 0x1e(%r15),%eax
cmp    $0x4,%ax
jne    2ba25 <PickSeparateCase+0xb5>
movl   $0x1,0x10(%r15)
lea    0x2474(%rip),%rax        # 2df00 <putCMYKseparate8bittile>
mov    %rax,0x48(%r15)
jmp    2ba25 <PickSeparateCase+0xb5>
mov    0x48(%r15),%rcx
test   %rcx,%rcx
je     2bb14 <PickSeparateCase+0x1a4>
mov    $0x1,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
movslq 0x10(%r15),%rax
cmp    $0x1,%eax
je     2bb1a <PickSeparateCase+0x1aa>
cmp    $0x2,%eax
je     2bb2a <PickSeparateCase+0x1ba>
lea    0x1da5(%rip),%rax        # 2d860 <putRGBseparate8bittile>
mov    %rax,0x48(%r15)
jmpq   2ba25 <PickSeparateCase+0xb5>
mov    %r15,%rdi
callq  2bc30 <BuildMapBitdepth16To8>
test   %eax,%eax
je     2ba25 <PickSeparateCase+0xb5>
lea    0x26e5(%rip),%rax        # 2e1c0 <putRGBAAseparate16bittile>
mov    %rax,0x48(%r15)
jmpq   2ba25 <PickSeparateCase+0xb5>
mov    %r15,%rdi
callq  2bc30 <BuildMapBitdepth16To8>
test   %eax,%eax
je     2ba25 <PickSeparateCase+0xb5>
mov    %r15,%rdi
callq  2bb50 <BuildMapUaToAa>
test   %eax,%eax
je     2ba25 <PickSeparateCase+0xb5>
lea    0x27a5(%rip),%rax        # 2e2b0 <putRGBUAseparate16bittile>
mov    %rax,0x48(%r15)
jmpq   2ba25 <PickSeparateCase+0xb5>
mov    -0x8(%rbp),%r15
leaveq 
retq   
lea    0x201f(%rip),%rax        # 2db40 <putRGBAAseparate8bittile>
mov    %rax,0x48(%r15)
jmpq   2ba25 <PickSeparateCase+0xb5>
mov    %r15,%rdi
callq  2bb50 <BuildMapUaToAa>
test   %eax,%eax
je     2ba25 <PickSeparateCase+0xb5>
lea    0x24df(%rip),%rax        # 2e020 <putRGBUAseparate8bittile>
mov    %rax,0x48(%r15)
jmpq   2ba25 <PickSeparateCase+0xb5>
nopw   0x0(%rax,%rax,1)

000000000002bb50 <BuildMapUaToAa>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    0x78(%rdi),%rax
test   %rax,%rax
je     2bb80 <BuildMapUaToAa+0x30>
lea    0x43ab6(%rip),%rdi        # 6f61e <module.50+0xf>
lea    0x43ac1(%rip),%rsi        # 6f630 <module.50+0x21>
mov    $0xb12,%edx
lea    0x43ac4(%rip),%rcx        # 6f63f <module.50+0x30>
callq  8490 <__assert_fail@plt>
mov    $0x10000,%eax
mov    %r15,-0x8(%rbp)
mov    %rdi,%r15
mov    %rax,%rdi
callq  8440 <_TIFFmalloc@plt>
mov    %rax,0x78(%r15)
xor    %ecx,%ecx
test   %rax,%rax
je     2bbae <BuildMapUaToAa+0x5e>
mov    %rax,%r15
mov    $0xffffffff80808081,%rsi
mov    %rcx,%rdi
jmp    2bc10 <BuildMapUaToAa+0xc0>
xor    %eax,%eax
mov    (%r15),%rdx
mov    0x3b8(%rdx),%rdi
mov    %rcx,%r15
lea    0x43a4b(%rip),%rsi        # 6f60f <module.50>
lea    0x43a83(%rip),%rdx        # 6f64e <module.50+0x3f>
callq  8a00 <TIFFErrorExt@plt>
mov    %r15,%rax
mov    -0x8(%rbp),%r15
leaveq 
retq   
movzwl %r9w,%r10d
imul   %r8d,%r10d
lea    0x7f(%r10),%edx
mov    %rsi,%rax
imul   %edx
lea    0x7f(%r10,%rdx,1),%eax
mov    %rax,%rdx
sar    $0x7,%edx
shr    $0x1f,%eax
add    %edx,%eax
mov    %al,(%r15)
add    $0x1,%r9d
add    $0x1,%r15
cmp    $0xff,%r9w
jbe    2bbd9 <BuildMapUaToAa+0x89>
add    $0x1,%edi
cmp    $0xff,%di
jbe    2bc22 <BuildMapUaToAa+0xd2>
mov    $0x1,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
movzwl %di,%r8d
mov    %rcx,%r9
jmp    2bc05 <BuildMapUaToAa+0xb5>
nopl   0x0(%rax,%rax,1)

000000000002bc30 <BuildMapBitdepth16To8>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    0x80(%rdi),%rax
test   %rax,%rax
je     2bc63 <BuildMapBitdepth16To8+0x33>
lea    0x43a27(%rip),%rdi        # 6f672 <module.55+0x16>
lea    0x439de(%rip),%rsi        # 6f630 <module.50+0x21>
mov    $0xb28,%edx
lea    0x43a2d(%rip),%rcx        # 6f68b <module.55+0x2f>
callq  8490 <__assert_fail@plt>
mov    $0x10000,%eax
mov    %r15,-0x8(%rbp)
mov    %rdi,%r15
mov    %rax,%rdi
callq  8440 <_TIFFmalloc@plt>
mov    %rax,0x80(%r15)
xor    %ecx,%ecx
test   %rax,%rax
je     2bc94 <BuildMapBitdepth16To8+0x64>
mov    %rax,%r15
mov    $0xff00ff01,%edi
mov    $0x80,%esi
jmp    2bcd4 <BuildMapBitdepth16To8+0xa4>
xor    %eax,%eax
mov    (%r15),%rdx
mov    0x3b8(%rdx),%rdi
mov    %rcx,%r15
lea    0x439b2(%rip),%rsi        # 6f65c <module.55>
lea    0x4399d(%rip),%rdx        # 6f64e <module.50+0x3f>
callq  8a00 <TIFFErrorExt@plt>
mov    %r15,%rax
mov    -0x8(%rbp),%r15
leaveq 
retq   
mov    %rdi,%rax
mul    %esi
shr    $0x8,%edx
mov    %dl,(%r15)
add    $0x1,%ecx
add    $0x1,%esi
add    $0x1,%r15
cmp    $0xffff,%ecx
jbe    2bcbf <BuildMapBitdepth16To8+0x8f>
mov    $0x1,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

000000000002bcf0 <isCCITTCompression>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
xor    %eax,%eax
mov    $0x103,%esi
lea    -0x2(%rbp),%rdx
callq  8230 <TIFFGetField@plt>
mov    $0x1,%eax
movzwl -0x2(%rbp),%ecx
cmp    $0x3,%cx
jne    2bd19 <isCCITTCompression+0x29>
leaveq 
retq   
cmp    $0x4,%cx
jne    2bd21 <isCCITTCompression+0x31>
leaveq 
retq   
cmp    $0x2,%cx
jne    2bd29 <isCCITTCompression+0x39>
leaveq 
retq   
cmp    $0x8003,%cx
jne    2bd32 <isCCITTCompression+0x42>
leaveq 
retq   
xor    %eax,%eax
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)

000000000002bd40 <setorientation>:
push   %rbp
mov    %rsp,%rbp
xor    %eax,%eax
movzwl 0x20(%rdi),%ecx
lea    -0x1(%rcx),%esi
cmp    $0x7,%esi
jbe    2bd54 <setorientation+0x14>
leaveq 
retq   
mov    $0x2,%edx
mov    $0x3,%ecx
mov    $0x1,%r9d
lea    0x42621(%rip),%r8        # 6e38c <TIFFFaxBlackTable+0x101d0>
movslq (%r8,%rsi,4),%rsi
add    %r8,%rsi
jmpq   *%rsi
leaveq 
retq   
movzwl 0x22(%rdi),%esi
cmp    $0x2,%si
jne    2bdb2 <setorientation+0x72>
mov    %rdx,%rax
leaveq 
retq   
movzwl 0x22(%rdi),%esi
cmp    $0x1,%si
jne    2bdbd <setorientation+0x7d>
mov    %rdx,%rax
leaveq 
retq   
movzwl 0x22(%rdi),%esi
cmp    $0x1,%si
jne    2bdc8 <setorientation+0x88>
mov    %rcx,%rax
leaveq 
retq   
movzwl 0x22(%rdi),%esi
cmp    $0x1,%si
jne    2bdd3 <setorientation+0x93>
mov    %r9,%rax
leaveq 
retq   
cmp    $0x6,%si
jne    2bdde <setorientation+0x9e>
mov    %rdx,%rax
leaveq 
retq   
cmp    $0x5,%si
jne    2bde9 <setorientation+0xa9>
mov    %rdx,%rax
leaveq 
retq   
cmp    $0x5,%si
jne    2bdf4 <setorientation+0xb4>
mov    %rcx,%rax
leaveq 
retq   
cmp    $0x5,%si
jne    2bdff <setorientation+0xbf>
mov    %r9,%rax
leaveq 
retq   
cmp    $0x3,%si
jne    2be0a <setorientation+0xca>
mov    %rcx,%rax
leaveq 
retq   
cmp    $0x3,%si
jne    2be15 <setorientation+0xd5>
mov    %r9,%rax
leaveq 
retq   
cmp    $0x2,%si
jne    2be20 <setorientation+0xe0>
mov    %r9,%rax
leaveq 
retq   
cmp    $0x2,%si
jne    2be2b <setorientation+0xeb>
mov    %rcx,%rax
leaveq 
retq   
cmp    $0x7,%si
jne    2be36 <setorientation+0xf6>
mov    %rcx,%rax
leaveq 
retq   
cmp    $0x7,%si
jne    2be41 <setorientation+0x101>
mov    %r9,%rax
leaveq 
retq   
cmp    $0x6,%si
jne    2be4c <setorientation+0x10c>
mov    %r9,%rax
leaveq 
retq   
cmp    $0x6,%si
jne    2be57 <setorientation+0x117>
mov    %rcx,%rax
leaveq 
retq   
cmp    $0x4,%si
jne    2be62 <setorientation+0x122>
mov    %r9,%rax
leaveq 
retq   
cmp    $0x4,%si
jne    2be6d <setorientation+0x12d>
mov    %rcx,%rax
leaveq 
retq   
cmp    $0x4,%si
jne    2be78 <setorientation+0x138>
mov    %rdx,%rax
leaveq 
retq   
cmp    $0x3,%si
jne    2be83 <setorientation+0x143>
mov    %rdx,%rax
leaveq 
retq   
cmp    $0x8,%si
jne    2be8e <setorientation+0x14e>
mov    %r9,%rax
leaveq 
retq   
cmp    $0x8,%si
jne    2be90 <setorientation+0x150>
mov    %rcx,%rax
leaveq 
retq   
cmp    $0x8,%si
jne    2be92 <setorientation+0x152>
mov    %rdx,%rax
leaveq 
retq   
cmp    $0x7,%si
jne    2be94 <setorientation+0x154>
mov    %rdx,%rax
leaveq 
retq   
leaveq 
retq   
leaveq 
retq   
leaveq 
retq   
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)

000000000002bea0 <put8bitcmaptile>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x8(%rbp)
mov    0x60(%rdi),%r10
movzwl 0x1e(%rdi),%edi
mov    0x20(%rbp),%rax
movslq 0x10(%rbp),%r11
movslq 0x18(%rbp),%r15
jmp    2bee6 <put8bitcmaptile+0x46>
movzbl (%rax),%edx
mov    (%r10,%rdx,8),%rdx
mov    (%rdx),%edx
mov    %edx,(%rsi)
add    %rdi,%rax
add    $0x4,%rsi
add    $0xffffffff,%ecx
test   %ecx,%ecx
jne    2bec2 <put8bitcmaptile+0x22>
add    $0xffffffff,%r9d
add    %r11,%rax
lea    (%rsi,%r15,4),%rsi
test   %r9d,%r9d
jne    2bef1 <put8bitcmaptile+0x51>
mov    -0x8(%rbp),%r15
leaveq 
retq   
mov    %r8,%rcx
jmp    2bed7 <put8bitcmaptile+0x37>
nopw   %cs:0x0(%rax,%rax,1)

000000000002bf00 <put4bitcmaptile>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x8(%rbp)
mov    0x60(%rdi),%r10
mov    0x20(%rbp),%rax
movslq 0x10(%rbp),%rcx
mov    %rcx,%rdx
shr    $0x1f,%edx
add    %edx,%ecx
sar    %ecx
movslq %ecx,%r11
movslq 0x18(%rbp),%r15
jmp    2bf6e <put4bitcmaptile+0x6e>
movzbl (%rax),%edx
mov    (%r10,%rdx,8),%rdi
mov    (%rdi),%edx
mov    %edx,(%rsi)
mov    0x4(%rdi),%edx
mov    %edx,0x4(%rsi)
add    $0x1,%rax
add    $0x8,%rsi
add    $0xfffffffe,%ecx
cmp    $0x1,%ecx
ja     2bf2b <put4bitcmaptile+0x2b>
test   %ecx,%ecx
je     2bf63 <put4bitcmaptile+0x63>
movzbl (%rax),%ecx
mov    (%r10,%rcx,8),%rcx
mov    (%rcx),%ecx
mov    %ecx,(%rsi)
add    $0x1,%rax
add    $0x4,%rsi
add    $0xffffffff,%r9d
add    %r11,%rax
lea    (%rsi,%r15,4),%rsi
test   %r9d,%r9d
jne    2bf79 <put4bitcmaptile+0x79>
mov    -0x8(%rbp),%r15
leaveq 
retq   
mov    %r8,%rcx
jmp    2bf47 <put4bitcmaptile+0x47>
xchg   %ax,%ax

000000000002bf80 <put2bitcmaptile>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x8(%rbp)
mov    0x60(%rdi),%r10
mov    0x20(%rbp),%rax
movslq 0x10(%rbp),%rdx
mov    %rdx,%rcx
sar    %ecx
shr    $0x1e,%ecx
add    %edx,%ecx
sar    $0x2,%ecx
movslq %ecx,%r11
movslq 0x18(%rbp),%r15
jmp    2c024 <put2bitcmaptile+0xa4>
movzbl (%rax),%edx
mov    (%r10,%rdx,8),%rdi
mov    (%rdi),%edx
mov    %edx,(%rsi)
mov    0x4(%rdi),%edx
mov    %edx,0x4(%rsi)
mov    0x8(%rdi),%edx
mov    %edx,0x8(%rsi)
mov    0xc(%rdi),%edx
mov    %edx,0xc(%rsi)
add    $0x1,%rax
add    $0x10,%rsi
add    $0xfffffffc,%ecx
cmp    $0x3,%ecx
ja     2bfae <put2bitcmaptile+0x2e>
test   %ecx,%ecx
je     2c019 <put2bitcmaptile+0x99>
movzbl (%rax),%edx
mov    (%r10,%rdx,8),%rdx
add    $0x1,%rax
cmp    $0x1,%ecx
jbe    2c02f <put2bitcmaptile+0xaf>
cmp    $0x2,%ecx
je     2c005 <put2bitcmaptile+0x85>
cmp    $0x3,%ecx
jne    2c019 <put2bitcmaptile+0x99>
mov    (%rdx),%ecx
mov    %ecx,(%rsi)
add    $0x4,%rdx
add    $0x4,%rsi
mov    (%rdx),%ecx
mov    %ecx,(%rsi)
add    $0x4,%rdx
add    $0x4,%rsi
mov    (%rdx),%ecx
mov    %ecx,(%rsi)
add    $0x4,%rsi
add    $0xffffffff,%r9d
add    %r11,%rax
lea    (%rsi,%r15,4),%rsi
test   %r9d,%r9d
jne    2c036 <put2bitcmaptile+0xb6>
mov    -0x8(%rbp),%r15
leaveq 
retq   
cmp    $0x1,%ecx
je     2c011 <put2bitcmaptile+0x91>
jmp    2c019 <put2bitcmaptile+0x99>
mov    %r8,%rcx
jmp    2bfd6 <put2bitcmaptile+0x56>
nopl   0x0(%rax,%rax,1)

000000000002c040 <put1bitcmaptile>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x8(%rbp)
mov    0x60(%rdi),%r10
mov    0x20(%rbp),%rax
movslq 0x10(%rbp),%rdx
mov    %rdx,%rcx
sar    $0x2,%ecx
shr    $0x1d,%ecx
add    %edx,%ecx
sar    $0x3,%ecx
movslq %ecx,%r11
movslq 0x18(%rbp),%r15
jmpq   2c139 <put1bitcmaptile+0xf9>
movzbl (%rax),%edx
mov    (%r10,%rdx,8),%rdi
mov    (%rdi),%edx
mov    %edx,(%rsi)
mov    0x4(%rdi),%edx
mov    %edx,0x4(%rsi)
mov    0x8(%rdi),%edx
mov    %edx,0x8(%rsi)
mov    0xc(%rdi),%edx
mov    %edx,0xc(%rsi)
mov    0x10(%rdi),%edx
mov    %edx,0x10(%rsi)
mov    0x14(%rdi),%edx
mov    %edx,0x14(%rsi)
mov    0x18(%rdi),%edx
mov    %edx,0x18(%rsi)
mov    0x1c(%rdi),%edx
mov    %edx,0x1c(%rsi)
add    $0x1,%rax
add    $0x20,%rsi
add    $0xfffffff8,%ecx
cmp    $0x7,%ecx
ja     2c072 <put1bitcmaptile+0x32>
test   %ecx,%ecx
je     2c12e <put1bitcmaptile+0xee>
movzbl (%rax),%edx
mov    (%r10,%rdx,8),%rdx
add    $0x1,%rax
lea    -0x1(%rcx),%edi
cmp    $0x6,%edi
ja     2c12e <put1bitcmaptile+0xee>
lea    0x422d7(%rip),%rcx        # 6e3ac <TIFFFaxBlackTable+0x101f0>
movslq (%rcx,%rdi,4),%rdi
add    %rdi,%rcx
jmpq   *%rcx
mov    (%rdx),%ecx
mov    %ecx,(%rsi)
add    $0x4,%rdx
add    $0x4,%rsi
mov    (%rdx),%ecx
mov    %ecx,(%rsi)
add    $0x4,%rdx
add    $0x4,%rsi
mov    (%rdx),%ecx
mov    %ecx,(%rsi)
add    $0x4,%rdx
add    $0x4,%rsi
mov    (%rdx),%ecx
mov    %ecx,(%rsi)
add    $0x4,%rdx
add    $0x4,%rsi
mov    (%rdx),%ecx
mov    %ecx,(%rsi)
add    $0x4,%rdx
add    $0x4,%rsi
mov    (%rdx),%ecx
mov    %ecx,(%rsi)
add    $0x4,%rdx
add    $0x4,%rsi
mov    (%rdx),%ecx
mov    %ecx,(%rsi)
add    $0x4,%rsi
add    $0xffffffff,%r9d
add    %r11,%rax
lea    (%rsi,%r15,4),%rsi
test   %r9d,%r9d
jne    2c144 <put1bitcmaptile+0x104>
mov    -0x8(%rbp),%r15
leaveq 
retq   
mov    %r8,%rcx
jmpq   2c0b2 <put1bitcmaptile+0x72>
nopl   0x0(%rax)

000000000002c150 <putgreytile>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x8(%rbp)
movzwl 0x1e(%rdi),%r10d
mov    0x58(%rdi),%rdi
mov    0x20(%rbp),%rax
movslq 0x10(%rbp),%r11
movslq 0x18(%rbp),%r15
jmp    2c197 <putgreytile+0x47>
movzbl (%rax),%edx
mov    (%rdi,%rdx,8),%rdx
mov    (%rdx),%edx
mov    %edx,(%rsi)
add    %r10,%rax
add    $0x4,%rsi
add    $0xffffffff,%ecx
test   %ecx,%ecx
jne    2c173 <putgreytile+0x23>
add    $0xffffffff,%r9d
add    %r11,%rax
lea    (%rsi,%r15,4),%rsi
test   %r9d,%r9d
jne    2c1a2 <putgreytile+0x52>
mov    -0x8(%rbp),%r15
leaveq 
retq   
mov    %r8,%rcx
jmp    2c188 <putgreytile+0x38>
nopw   0x0(%rax,%rax,1)

000000000002c1b0 <putagreytile>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
movzwl 0x1e(%rdi),%r11d
mov    0x58(%rdi),%r14
mov    0x20(%rbp),%rax
movslq 0x10(%rbp),%r10
movslq 0x18(%rbp),%rdi
jmp    2c209 <putagreytile+0x59>
movzbl (%rax),%ecx
mov    (%r14,%rcx,8),%r15
movzbl 0x1(%rax),%ecx
shl    $0x18,%ecx
add    $0xffffff,%ecx
and    (%r15),%ecx
mov    %ecx,(%rsi)
add    %r11,%rax
add    $0x4,%rsi
add    $0xffffffff,%edx
test   %edx,%edx
jne    2c1d7 <putagreytile+0x27>
add    $0xffffffff,%r9d
add    %r10,%rax
lea    (%rsi,%rdi,4),%rsi
test   %r9d,%r9d
jne    2c218 <putagreytile+0x68>
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
mov    %r8,%rdx
jmp    2c1fa <putagreytile+0x4a>
nopl   (%rax)

000000000002c220 <put16bitbwtile>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %r13,-0x8(%rbp)
mov    %r14,-0x10(%rbp)
mov    %r15,-0x18(%rbp)
mov    0x58(%rdi),%r10
mov    0x20(%rbp),%rax
movslq 0x10(%rbp),%r14
movslq 0x18(%rbp),%r15
movzwl 0x1e(%rdi),%r13d
lea    0x0(%r13,%r13,1),%ecx
movslq %ecx,%r11
jmp    2c281 <put16bitbwtile+0x61>
movzwl (%rcx),%edx
shr    $0x8,%edx
movslq %edx,%rdx
mov    (%r10,%rdx,8),%rdx
mov    (%rdx),%edx
mov    %edx,(%rsi)
lea    (%rcx,%r13,2),%rcx
add    $0x4,%rsi
add    $0xffffffff,%edi
add    %r11,%rax
test   %edi,%edi
jne    2c253 <put16bitbwtile+0x33>
add    $0xffffffff,%r9d
add    %r14,%rax
lea    (%rsi,%r15,4),%rsi
test   %r9d,%r9d
jne    2c294 <put16bitbwtile+0x74>
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
leaveq 
retq   
mov    %rax,%rcx
mov    %r8,%rdi
jmp    2c272 <put16bitbwtile+0x52>
nopl   0x0(%rax)

000000000002c2a0 <put1bitbwtile>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x8(%rbp)
mov    0x58(%rdi),%r10
mov    0x20(%rbp),%rax
movslq 0x10(%rbp),%rdx
mov    %rdx,%rcx
sar    $0x2,%ecx
shr    $0x1d,%ecx
add    %edx,%ecx
sar    $0x3,%ecx
movslq %ecx,%r11
movslq 0x18(%rbp),%r15
jmpq   2c399 <put1bitbwtile+0xf9>
movzbl (%rax),%edx
mov    (%r10,%rdx,8),%rdi
mov    (%rdi),%edx
mov    %edx,(%rsi)
mov    0x4(%rdi),%edx
mov    %edx,0x4(%rsi)
mov    0x8(%rdi),%edx
mov    %edx,0x8(%rsi)
mov    0xc(%rdi),%edx
mov    %edx,0xc(%rsi)
mov    0x10(%rdi),%edx
mov    %edx,0x10(%rsi)
mov    0x14(%rdi),%edx
mov    %edx,0x14(%rsi)
mov    0x18(%rdi),%edx
mov    %edx,0x18(%rsi)
mov    0x1c(%rdi),%edx
mov    %edx,0x1c(%rsi)
add    $0x1,%rax
add    $0x20,%rsi
add    $0xfffffff8,%ecx
cmp    $0x7,%ecx
ja     2c2d2 <put1bitbwtile+0x32>
test   %ecx,%ecx
je     2c38e <put1bitbwtile+0xee>
movzbl (%rax),%edx
mov    (%r10,%rdx,8),%rdx
add    $0x1,%rax
lea    -0x1(%rcx),%edi
cmp    $0x6,%edi
ja     2c38e <put1bitbwtile+0xee>
lea    0x42093(%rip),%rcx        # 6e3c8 <TIFFFaxBlackTable+0x1020c>
movslq (%rcx,%rdi,4),%rdi
add    %rdi,%rcx
jmpq   *%rcx
mov    (%rdx),%ecx
mov    %ecx,(%rsi)
add    $0x4,%rdx
add    $0x4,%rsi
mov    (%rdx),%ecx
mov    %ecx,(%rsi)
add    $0x4,%rdx
add    $0x4,%rsi
mov    (%rdx),%ecx
mov    %ecx,(%rsi)
add    $0x4,%rdx
add    $0x4,%rsi
mov    (%rdx),%ecx
mov    %ecx,(%rsi)
add    $0x4,%rdx
add    $0x4,%rsi
mov    (%rdx),%ecx
mov    %ecx,(%rsi)
add    $0x4,%rdx
add    $0x4,%rsi
mov    (%rdx),%ecx
mov    %ecx,(%rsi)
add    $0x4,%rdx
add    $0x4,%rsi
mov    (%rdx),%ecx
mov    %ecx,(%rsi)
add    $0x4,%rsi
add    $0xffffffff,%r9d
add    %r11,%rax
lea    (%rsi,%r15,4),%rsi
test   %r9d,%r9d
jne    2c3a4 <put1bitbwtile+0x104>
mov    -0x8(%rbp),%r15
leaveq 
retq   
mov    %r8,%rcx
jmpq   2c312 <put1bitbwtile+0x72>
nopl   0x0(%rax)

000000000002c3b0 <put2bitbwtile>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x8(%rbp)
mov    0x58(%rdi),%r10
mov    0x20(%rbp),%rax
movslq 0x10(%rbp),%rdx
mov    %rdx,%rcx
sar    %ecx
shr    $0x1e,%ecx
add    %edx,%ecx
sar    $0x2,%ecx
movslq %ecx,%r11
movslq 0x18(%rbp),%r15
jmp    2c454 <put2bitbwtile+0xa4>
movzbl (%rax),%edx
mov    (%r10,%rdx,8),%rdi
mov    (%rdi),%edx
mov    %edx,(%rsi)
mov    0x4(%rdi),%edx
mov    %edx,0x4(%rsi)
mov    0x8(%rdi),%edx
mov    %edx,0x8(%rsi)
mov    0xc(%rdi),%edx
mov    %edx,0xc(%rsi)
add    $0x1,%rax
add    $0x10,%rsi
add    $0xfffffffc,%ecx
cmp    $0x3,%ecx
ja     2c3de <put2bitbwtile+0x2e>
test   %ecx,%ecx
je     2c449 <put2bitbwtile+0x99>
movzbl (%rax),%edx
mov    (%r10,%rdx,8),%rdx
add    $0x1,%rax
cmp    $0x1,%ecx
jbe    2c45f <put2bitbwtile+0xaf>
cmp    $0x2,%ecx
je     2c435 <put2bitbwtile+0x85>
cmp    $0x3,%ecx
jne    2c449 <put2bitbwtile+0x99>
mov    (%rdx),%ecx
mov    %ecx,(%rsi)
add    $0x4,%rdx
add    $0x4,%rsi
mov    (%rdx),%ecx
mov    %ecx,(%rsi)
add    $0x4,%rdx
add    $0x4,%rsi
mov    (%rdx),%ecx
mov    %ecx,(%rsi)
add    $0x4,%rsi
add    $0xffffffff,%r9d
add    %r11,%rax
lea    (%rsi,%r15,4),%rsi
test   %r9d,%r9d
jne    2c466 <put2bitbwtile+0xb6>
mov    -0x8(%rbp),%r15
leaveq 
retq   
cmp    $0x1,%ecx
je     2c441 <put2bitbwtile+0x91>
jmp    2c449 <put2bitbwtile+0x99>
mov    %r8,%rcx
jmp    2c406 <put2bitbwtile+0x56>
nopl   0x0(%rax,%rax,1)

000000000002c470 <put4bitbwtile>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x8(%rbp)
mov    0x58(%rdi),%r10
mov    0x20(%rbp),%rax
movslq 0x10(%rbp),%rcx
mov    %rcx,%rdx
shr    $0x1f,%edx
add    %edx,%ecx
sar    %ecx
movslq %ecx,%r11
movslq 0x18(%rbp),%r15
jmp    2c4de <put4bitbwtile+0x6e>
movzbl (%rax),%edx
mov    (%r10,%rdx,8),%rdi
mov    (%rdi),%edx
mov    %edx,(%rsi)
mov    0x4(%rdi),%edx
mov    %edx,0x4(%rsi)
add    $0x1,%rax
add    $0x8,%rsi
add    $0xfffffffe,%ecx
cmp    $0x1,%ecx
ja     2c49b <put4bitbwtile+0x2b>
test   %ecx,%ecx
je     2c4d3 <put4bitbwtile+0x63>
movzbl (%rax),%ecx
mov    (%r10,%rcx,8),%rcx
mov    (%rcx),%ecx
mov    %ecx,(%rsi)
add    $0x1,%rax
add    $0x4,%rsi
add    $0xffffffff,%r9d
add    %r11,%rax
lea    (%rsi,%r15,4),%rsi
test   %r9d,%r9d
jne    2c4e9 <put4bitbwtile+0x79>
mov    -0x8(%rbp),%r15
leaveq 
retq   
mov    %r8,%rcx
jmp    2c4b7 <put4bitbwtile+0x47>
xchg   %ax,%ax

000000000002c4f0 <putRGBcontig8bittile>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    0x20(%rbp),%rax
movzwl 0x1e(%rdi),%r11d
mov    %r11,%rcx
imul   0x10(%rbp),%ecx
movslq %ecx,%r14
movslq 0x18(%rbp),%r15
jmpq   2c762 <putRGBcontig8bittile+0x272>
movzbl (%rax),%edi
movzbl 0x1(%rax),%ecx
shl    $0x8,%ecx
add    %ecx,%edi
movzbl 0x2(%rax),%ecx
shl    $0x10,%ecx
lea    -0x1000000(%rdi,%rcx,1),%ecx
mov    %ecx,(%rsi)
movzbl (%r11,%rax,1),%edi
movzbl 0x1(%r11,%rax,1),%ecx
shl    $0x8,%ecx
add    %ecx,%edi
movzbl 0x2(%r11,%rax,1),%ecx
shl    $0x10,%ecx
lea    -0x1000000(%rdi,%rcx,1),%ecx
mov    %ecx,0x4(%rsi)
lea    (%rax,%r11,2),%r10
movzbl (%r10),%edi
movzbl 0x1(%r10),%ecx
shl    $0x8,%ecx
add    %ecx,%edi
movzbl 0x2(%r10),%ecx
shl    $0x10,%ecx
lea    -0x1000000(%rdi,%rcx,1),%ecx
mov    %ecx,0x8(%rsi)
movzbl (%r11,%r10,1),%edi
movzbl 0x1(%r11,%r10,1),%ecx
shl    $0x8,%ecx
add    %ecx,%edi
movzbl 0x2(%r11,%r10,1),%ecx
shl    $0x10,%ecx
lea    -0x1000000(%rdi,%rcx,1),%ecx
mov    %ecx,0xc(%rsi)
lea    (%rax,%r11,4),%rdi
movzbl (%rdi),%ecx
movzbl 0x1(%rdi),%eax
shl    $0x8,%eax
add    %eax,%ecx
movzbl 0x2(%rdi),%eax
shl    $0x10,%eax
lea    -0x1000000(%rcx,%rax,1),%eax
mov    %eax,0x10(%rsi)
movzbl (%r11,%rdi,1),%ecx
movzbl 0x1(%r11,%rdi,1),%eax
shl    $0x8,%eax
add    %eax,%ecx
movzbl 0x2(%r11,%rdi,1),%eax
shl    $0x10,%eax
lea    -0x1000000(%rcx,%rax,1),%eax
mov    %eax,0x14(%rsi)
lea    (%rdi,%r11,2),%rcx
movzbl (%rcx),%edi
movzbl 0x1(%rcx),%eax
shl    $0x8,%eax
add    %eax,%edi
movzbl 0x2(%rcx),%eax
shl    $0x10,%eax
lea    -0x1000000(%rdi,%rax,1),%eax
mov    %eax,0x18(%rsi)
movzbl (%rcx,%r11,1),%edi
movzbl 0x1(%rcx,%r11,1),%eax
shl    $0x8,%eax
add    %eax,%edi
movzbl 0x2(%rcx,%r11,1),%eax
shl    $0x10,%eax
lea    -0x1000000(%rdi,%rax,1),%eax
mov    %eax,0x1c(%rsi)
lea    (%rcx,%r11,2),%rax
add    $0x20,%rsi
add    $0xfffffff8,%edx
cmp    $0x7,%edx
ja     2c51c <putRGBcontig8bittile+0x2c>
test   %edx,%edx
je     2c757 <putRGBcontig8bittile+0x267>
lea    -0x1(%rdx),%ecx
cmp    $0x6,%ecx
ja     2c757 <putRGBcontig8bittile+0x267>
lea    0x41d8b(%rip),%rdx        # 6e3e4 <TIFFFaxBlackTable+0x10228>
movslq (%rdx,%rcx,4),%rcx
add    %rdx,%rcx
jmpq   *%rcx
movzbl (%rax),%edx
movzbl 0x1(%rax),%ecx
shl    $0x8,%ecx
add    %ecx,%edx
movzbl 0x2(%rax),%ecx
shl    $0x10,%ecx
lea    -0x1000000(%rdx,%rcx,1),%ecx
mov    %ecx,(%rsi)
add    %r11,%rax
add    $0x4,%rsi
movzbl (%rax),%edx
movzbl 0x1(%rax),%ecx
shl    $0x8,%ecx
add    %ecx,%edx
movzbl 0x2(%rax),%ecx
shl    $0x10,%ecx
lea    -0x1000000(%rdx,%rcx,1),%ecx
mov    %ecx,(%rsi)
add    %r11,%rax
add    $0x4,%rsi
movzbl (%rax),%edx
movzbl 0x1(%rax),%ecx
shl    $0x8,%ecx
add    %ecx,%edx
movzbl 0x2(%rax),%ecx
shl    $0x10,%ecx
lea    -0x1000000(%rdx,%rcx,1),%ecx
mov    %ecx,(%rsi)
add    %r11,%rax
add    $0x4,%rsi
movzbl (%rax),%edx
movzbl 0x1(%rax),%ecx
shl    $0x8,%ecx
add    %ecx,%edx
movzbl 0x2(%rax),%ecx
shl    $0x10,%ecx
lea    -0x1000000(%rdx,%rcx,1),%ecx
mov    %ecx,(%rsi)
add    %r11,%rax
add    $0x4,%rsi
movzbl (%rax),%edx
movzbl 0x1(%rax),%ecx
shl    $0x8,%ecx
add    %ecx,%edx
movzbl 0x2(%rax),%ecx
shl    $0x10,%ecx
lea    -0x1000000(%rdx,%rcx,1),%ecx
mov    %ecx,(%rsi)
add    %r11,%rax
add    $0x4,%rsi
movzbl (%rax),%edx
movzbl 0x1(%rax),%ecx
shl    $0x8,%ecx
add    %ecx,%edx
movzbl 0x2(%rax),%ecx
shl    $0x10,%ecx
lea    -0x1000000(%rdx,%rcx,1),%ecx
mov    %ecx,(%rsi)
add    %r11,%rax
add    $0x4,%rsi
movzbl (%rax),%edx
movzbl 0x1(%rax),%ecx
shl    $0x8,%ecx
add    %ecx,%edx
movzbl 0x2(%rax),%ecx
shl    $0x10,%ecx
lea    -0x1000000(%rdx,%rcx,1),%ecx
mov    %ecx,(%rsi)
add    %r11,%rax
add    $0x4,%rsi
add    $0xffffffff,%r9d
add    %r14,%rax
lea    (%rsi,%r15,4),%rsi
test   %r9d,%r9d
jne    2c771 <putRGBcontig8bittile+0x281>
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
mov    %r8,%rdx
jmpq   2c635 <putRGBcontig8bittile+0x145>
nopl   0x0(%rax)

000000000002c780 <putRGBAAcontig8bittile>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    0x20(%rbp),%rax
movzwl 0x1e(%rdi),%r11d
mov    %r11,%rcx
imul   0x10(%rbp),%ecx
movslq %ecx,%r14
movslq 0x18(%rbp),%r15
jmpq   2ca37 <putRGBAAcontig8bittile+0x2b7>
movzbl (%rax),%edi
movzbl 0x1(%rax),%ecx
shl    $0x8,%ecx
add    %ecx,%edi
movzbl 0x2(%rax),%ecx
shl    $0x10,%ecx
add    %ecx,%edi
movzbl 0x3(%rax),%ecx
shl    $0x18,%ecx
add    %edi,%ecx
mov    %ecx,(%rsi)
movzbl (%r11,%rax,1),%edi
movzbl 0x1(%r11,%rax,1),%ecx
shl    $0x8,%ecx
add    %ecx,%edi
movzbl 0x2(%r11,%rax,1),%ecx
shl    $0x10,%ecx
add    %ecx,%edi
movzbl 0x3(%r11,%rax,1),%ecx
shl    $0x18,%ecx
add    %edi,%ecx
mov    %ecx,0x4(%rsi)
lea    (%rax,%r11,2),%r10
movzbl (%r10),%edi
movzbl 0x1(%r10),%ecx
shl    $0x8,%ecx
add    %ecx,%edi
movzbl 0x2(%r10),%ecx
shl    $0x10,%ecx
add    %ecx,%edi
movzbl 0x3(%r10),%ecx
shl    $0x18,%ecx
add    %edi,%ecx
mov    %ecx,0x8(%rsi)
movzbl (%r11,%r10,1),%edi
movzbl 0x1(%r11,%r10,1),%ecx
shl    $0x8,%ecx
add    %ecx,%edi
movzbl 0x2(%r11,%r10,1),%ecx
shl    $0x10,%ecx
add    %ecx,%edi
movzbl 0x3(%r11,%r10,1),%ecx
shl    $0x18,%ecx
add    %edi,%ecx
mov    %ecx,0xc(%rsi)
lea    (%rax,%r11,4),%rdi
movzbl (%rdi),%ecx
movzbl 0x1(%rdi),%eax
shl    $0x8,%eax
add    %eax,%ecx
movzbl 0x2(%rdi),%eax
shl    $0x10,%eax
add    %eax,%ecx
movzbl 0x3(%rdi),%eax
shl    $0x18,%eax
add    %ecx,%eax
mov    %eax,0x10(%rsi)
movzbl (%r11,%rdi,1),%ecx
movzbl 0x1(%r11,%rdi,1),%eax
shl    $0x8,%eax
add    %eax,%ecx
movzbl 0x2(%r11,%rdi,1),%eax
shl    $0x10,%eax
add    %eax,%ecx
movzbl 0x3(%r11,%rdi,1),%eax
shl    $0x18,%eax
add    %ecx,%eax
mov    %eax,0x14(%rsi)
lea    (%rdi,%r11,2),%rcx
movzbl (%rcx),%edi
movzbl 0x1(%rcx),%eax
shl    $0x8,%eax
add    %eax,%edi
movzbl 0x2(%rcx),%eax
shl    $0x10,%eax
add    %eax,%edi
movzbl 0x3(%rcx),%eax
shl    $0x18,%eax
add    %edi,%eax
mov    %eax,0x18(%rsi)
movzbl (%rcx,%r11,1),%edi
movzbl 0x1(%rcx,%r11,1),%eax
shl    $0x8,%eax
add    %eax,%edi
movzbl 0x2(%rcx,%r11,1),%eax
shl    $0x10,%eax
add    %eax,%edi
movzbl 0x3(%rcx,%r11,1),%eax
shl    $0x18,%eax
add    %edi,%eax
mov    %eax,0x1c(%rsi)
lea    (%rcx,%r11,2),%rax
add    $0x20,%rsi
add    $0xfffffff8,%edx
cmp    $0x7,%edx
ja     2c7ac <putRGBAAcontig8bittile+0x2c>
test   %edx,%edx
je     2ca2c <putRGBAAcontig8bittile+0x2ac>
lea    -0x1(%rdx),%ecx
cmp    $0x6,%ecx
ja     2ca2c <putRGBAAcontig8bittile+0x2ac>
lea    0x41aee(%rip),%rdx        # 6e400 <TIFFFaxBlackTable+0x10244>
movslq (%rdx,%rcx,4),%rcx
add    %rdx,%rcx
jmpq   *%rcx
movzbl (%rax),%edx
movzbl 0x1(%rax),%ecx
shl    $0x8,%ecx
add    %ecx,%edx
movzbl 0x2(%rax),%ecx
shl    $0x10,%ecx
add    %ecx,%edx
movzbl 0x3(%rax),%ecx
shl    $0x18,%ecx
add    %edx,%ecx
mov    %ecx,(%rsi)
add    %r11,%rax
add    $0x4,%rsi
movzbl (%rax),%edx
movzbl 0x1(%rax),%ecx
shl    $0x8,%ecx
add    %ecx,%edx
movzbl 0x2(%rax),%ecx
shl    $0x10,%ecx
add    %ecx,%edx
movzbl 0x3(%rax),%ecx
shl    $0x18,%ecx
add    %edx,%ecx
mov    %ecx,(%rsi)
add    %r11,%rax
add    $0x4,%rsi
movzbl (%rax),%edx
movzbl 0x1(%rax),%ecx
shl    $0x8,%ecx
add    %ecx,%edx
movzbl 0x2(%rax),%ecx
shl    $0x10,%ecx
add    %ecx,%edx
movzbl 0x3(%rax),%ecx
shl    $0x18,%ecx
add    %edx,%ecx
mov    %ecx,(%rsi)
add    %r11,%rax
add    $0x4,%rsi
movzbl (%rax),%edx
movzbl 0x1(%rax),%ecx
shl    $0x8,%ecx
add    %ecx,%edx
movzbl 0x2(%rax),%ecx
shl    $0x10,%ecx
add    %ecx,%edx
movzbl 0x3(%rax),%ecx
shl    $0x18,%ecx
add    %edx,%ecx
mov    %ecx,(%rsi)
add    %r11,%rax
add    $0x4,%rsi
movzbl (%rax),%edx
movzbl 0x1(%rax),%ecx
shl    $0x8,%ecx
add    %ecx,%edx
movzbl 0x2(%rax),%ecx
shl    $0x10,%ecx
add    %ecx,%edx
movzbl 0x3(%rax),%ecx
shl    $0x18,%ecx
add    %edx,%ecx
mov    %ecx,(%rsi)
add    %r11,%rax
add    $0x4,%rsi
movzbl (%rax),%edx
movzbl 0x1(%rax),%ecx
shl    $0x8,%ecx
add    %ecx,%edx
movzbl 0x2(%rax),%ecx
shl    $0x10,%ecx
add    %ecx,%edx
movzbl 0x3(%rax),%ecx
shl    $0x18,%ecx
add    %edx,%ecx
mov    %ecx,(%rsi)
add    %r11,%rax
add    $0x4,%rsi
movzbl (%rax),%edx
movzbl 0x1(%rax),%ecx
shl    $0x8,%ecx
add    %ecx,%edx
movzbl 0x2(%rax),%ecx
shl    $0x10,%ecx
add    %ecx,%edx
movzbl 0x3(%rax),%ecx
shl    $0x18,%ecx
add    %edx,%ecx
mov    %ecx,(%rsi)
add    %r11,%rax
add    $0x4,%rsi
add    $0xffffffff,%r9d
add    %r14,%rax
lea    (%rsi,%r15,4),%rsi
test   %r9d,%r9d
jne    2ca46 <putRGBAAcontig8bittile+0x2c6>
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
mov    %r8,%rdx
jmpq   2c8ee <putRGBAAcontig8bittile+0x16e>
xchg   %ax,%ax

000000000002ca50 <putRGBUAcontig8bittile>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %r12,-0x8(%rbp)
mov    %r13,-0x10(%rbp)
mov    %r14,-0x18(%rbp)
mov    %r15,-0x20(%rbp)
mov    0x20(%rbp),%rax
movzwl 0x1e(%rdi),%r15d
mov    %r15,%rcx
imul   0x10(%rbp),%ecx
movslq %ecx,%r14
movslq 0x18(%rbp),%r13
jmp    2cad8 <putRGBUAcontig8bittile+0x88>
movzbl 0x3(%rax),%ecx
mov    %rcx,%r10
shl    $0x8,%r10
add    0x78(%rdi),%r10
movzbl (%rax),%edx
movzbl (%rdx,%r10,1),%r12d
movzbl 0x1(%rax),%edx
movzbl (%rdx,%r10,1),%edx
shl    $0x8,%edx
add    %edx,%r12d
movzbl 0x2(%rax),%edx
movzbl (%r10,%rdx,1),%edx
shl    $0x10,%edx
add    %r12d,%edx
shl    $0x18,%ecx
add    %edx,%ecx
mov    %ecx,(%rsi)
add    %r15,%rax
add    $0x4,%rsi
add    $0xffffffff,%r11d
test   %r11d,%r11d
jne    2ca81 <putRGBUAcontig8bittile+0x31>
add    $0xffffffff,%r9d
add    %r14,%rax
lea    (%rsi,%r13,4),%rsi
test   %r9d,%r9d
jne    2caef <putRGBUAcontig8bittile+0x9f>
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
leaveq 
retq   
mov    %r8,%r11
jmp    2cac8 <putRGBUAcontig8bittile+0x78>
data16 nopw %cs:0x0(%rax,%rax,1)
nop

000000000002cb00 <putRGBcontig16bittile>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %r13,-0x8(%rbp)
mov    %r14,-0x10(%rbp)
mov    %r15,-0x18(%rbp)
mov    0x20(%rbp),%rax
movzwl 0x1e(%rdi),%r15d
mov    %r15,%rcx
imul   0x10(%rbp),%ecx
movslq %ecx,%r14
movslq 0x18(%rbp),%r13
jmp    2cb7c <putRGBcontig16bittile+0x7c>
movzwl (%rax),%ecx
mov    0x80(%rdi),%r11
movzbl (%rcx,%r11,1),%r10d
movzwl 0x2(%rax),%ecx
movzbl (%rcx,%r11,1),%ecx
shl    $0x8,%ecx
add    %ecx,%r10d
movzwl 0x4(%rax),%ecx
movzbl (%r11,%rcx,1),%ecx
shl    $0x10,%ecx
lea    -0x1000000(%r10,%rcx,1),%ecx
mov    %ecx,(%rsi)
lea    (%rax,%r15,2),%rax
add    $0x4,%rsi
add    $0xffffffff,%edx
test   %edx,%edx
jne    2cb2d <putRGBcontig16bittile+0x2d>
add    $0xffffffff,%r9d
lea    (%rax,%r14,2),%rax
lea    (%rsi,%r13,4),%rsi
test   %r9d,%r9d
jne    2cb8f <putRGBcontig16bittile+0x8f>
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
leaveq 
retq   
mov    %r8,%rdx
jmp    2cb6c <putRGBcontig16bittile+0x6c>
data16 nopw %cs:0x0(%rax,%rax,1)
nop

000000000002cba0 <putRGBAAcontig16bittile>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %r13,-0x8(%rbp)
mov    %r14,-0x10(%rbp)
mov    %r15,-0x18(%rbp)
mov    0x20(%rbp),%rax
movzwl 0x1e(%rdi),%r15d
mov    %r15,%rcx
imul   0x10(%rbp),%ecx
movslq %ecx,%r14
movslq 0x18(%rbp),%r13
jmp    2cc26 <putRGBAAcontig16bittile+0x86>
movzwl (%rax),%ecx
mov    0x80(%rdi),%r11
movzbl (%rcx,%r11,1),%r10d
movzwl 0x2(%rax),%ecx
movzbl (%rcx,%r11,1),%ecx
shl    $0x8,%ecx
add    %ecx,%r10d
movzwl 0x4(%rax),%ecx
movzbl (%r11,%rcx,1),%ecx
shl    $0x10,%ecx
add    %ecx,%r10d
movzwl 0x6(%rax),%ecx
movzbl (%r11,%rcx,1),%ecx
shl    $0x18,%ecx
add    %r10d,%ecx
mov    %ecx,(%rsi)
lea    (%rax,%r15,2),%rax
add    $0x4,%rsi
add    $0xffffffff,%edx
test   %edx,%edx
jne    2cbcd <putRGBAAcontig16bittile+0x2d>
add    $0xffffffff,%r9d
lea    (%rax,%r14,2),%rax
lea    (%rsi,%r13,4),%rsi
test   %r9d,%r9d
jne    2cc39 <putRGBAAcontig16bittile+0x99>
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
leaveq 
retq   
mov    %r8,%rdx
jmp    2cc16 <putRGBAAcontig16bittile+0x76>
xchg   %ax,%ax

000000000002cc40 <putRGBUAcontig16bittile>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    0x20(%rbp),%rax
movzwl 0x1e(%rdi),%r15d
mov    %r15,%rcx
imul   0x10(%rbp),%ecx
movslq %ecx,%r14
movslq 0x18(%rbp),%r13
jmp    2cce7 <putRGBUAcontig16bittile+0xa7>
movzwl (%rax),%ecx
mov    0x80(%rdi),%r12
movzbl (%rcx,%r12,1),%edx
movzwl 0x6(%rax),%ecx
movzbl (%rcx,%r12,1),%ecx
mov    %rcx,%rbx
shl    $0x8,%rbx
add    0x78(%rdi),%rbx
movzbl (%rdx,%rbx,1),%r11d
movzwl 0x2(%rax),%edx
movzbl (%rdx,%r12,1),%edx
movzbl (%rdx,%rbx,1),%edx
shl    $0x8,%edx
add    %edx,%r11d
movzwl 0x4(%rax),%edx
movzbl (%r12,%rdx,1),%edx
movzbl (%rbx,%rdx,1),%edx
shl    $0x10,%edx
add    %r11d,%edx
shl    $0x18,%ecx
add    %edx,%ecx
mov    %ecx,(%rsi)
lea    (%rax,%r15,2),%rax
add    $0x4,%rsi
add    $0xffffffff,%r10d
test   %r10d,%r10d
jne    2cc75 <putRGBUAcontig16bittile+0x35>
add    $0xffffffff,%r9d
lea    (%rax,%r14,2),%rax
lea    (%rsi,%r13,4),%rsi
test   %r9d,%r9d
jne    2cd02 <putRGBUAcontig16bittile+0xc2>
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
mov    %r8,%r10
jmp    2ccd6 <putRGBUAcontig16bittile+0x96>
nopw   0x0(%rax,%rax,1)

000000000002cd10 <putRGBcontig8bitCMYKtile>:
push   %rbp
mov    %rsp,%rbp
sub    $0x40,%rsp
mov    %rbx,-0x18(%rbp)
mov    %r12,-0x20(%rbp)
mov    %r13,-0x28(%rbp)
mov    %r14,-0x30(%rbp)
mov    %r15,-0x38(%rbp)
mov    0x20(%rbp),%r11
movzwl 0x1e(%rdi),%edi
mov    %rdi,%rax
imul   0x10(%rbp),%eax
movslq %eax,%rax
mov    %rax,-0x10(%rbp)
movslq 0x18(%rbp),%rax
mov    %rax,-0x8(%rbp)
mov    $0xff,%ecx
mov    $0xffffffff80808081,%rbx
jmpq   2d6f4 <putRGBcontig8bitCMYKtile+0x9e4>
movzbl 0x3(%r11),%eax
mov    %rcx,%r13
sub    %eax,%r13d
movzbl (%r11),%eax
neg    %eax
add    %ecx,%eax
mov    %r13,%r12
imul   %eax,%r12d
mov    %rbx,%rax
imul   %r12d
lea    (%r12,%rdx,1),%eax
mov    %rax,%rdx
sar    $0x7,%edx
shr    $0x1f,%eax
add    %edx,%eax
movzwl %ax,%r12d
movzbl 0x1(%r11),%eax
neg    %eax
add    %ecx,%eax
mov    %r13,%r14
imul   %eax,%r14d
mov    %rbx,%rax
imul   %r14d
lea    (%r14,%rdx,1),%eax
mov    %rax,%rdx
sar    $0x7,%edx
shr    $0x1f,%eax
add    %edx,%eax
movzwl %ax,%eax
shl    $0x8,%eax
or     %eax,%r12d
movzbl 0x2(%r11),%eax
mov    %rcx,%r14
sub    %eax,%r14d
imul   %r13d,%r14d
mov    %rbx,%rax
imul   %r14d
lea    (%r14,%rdx,1),%eax
mov    %rax,%rdx
sar    $0x7,%edx
shr    $0x1f,%eax
add    %edx,%eax
movzwl %ax,%eax
shl    $0x10,%eax
or     %eax,%r12d
or     $0xff000000,%r12d
mov    %r12d,(%rsi)
movzbl 0x3(%rdi,%r11,1),%eax
mov    %rcx,%r13
sub    %eax,%r13d
movzbl (%rdi,%r11,1),%eax
neg    %eax
add    %ecx,%eax
mov    %r13,%r12
imul   %eax,%r12d
mov    %rbx,%rax
imul   %r12d
lea    (%r12,%rdx,1),%eax
mov    %rax,%rdx
sar    $0x7,%edx
shr    $0x1f,%eax
add    %edx,%eax
movzwl %ax,%r12d
movzbl 0x1(%rdi,%r11,1),%eax
neg    %eax
add    %ecx,%eax
mov    %r13,%r14
imul   %eax,%r14d
mov    %rbx,%rax
imul   %r14d
lea    (%r14,%rdx,1),%eax
mov    %rax,%rdx
sar    $0x7,%edx
shr    $0x1f,%eax
add    %edx,%eax
movzwl %ax,%eax
shl    $0x8,%eax
or     %eax,%r12d
movzbl 0x2(%rdi,%r11,1),%eax
mov    %rcx,%r14
sub    %eax,%r14d
imul   %r13d,%r14d
mov    %rbx,%rax
imul   %r14d
lea    (%r14,%rdx,1),%eax
mov    %rax,%rdx
sar    $0x7,%edx
shr    $0x1f,%eax
add    %edx,%eax
movzwl %ax,%eax
shl    $0x10,%eax
or     %eax,%r12d
or     $0xff000000,%r12d
mov    %r12d,0x4(%rsi)
lea    (%r11,%rdi,2),%r13
movzbl 0x3(%r13),%eax
mov    %rcx,%r14
sub    %eax,%r14d
movzbl 0x0(%r13),%eax
neg    %eax
add    %ecx,%eax
mov    %r14,%r12
imul   %eax,%r12d
mov    %rbx,%rax
imul   %r12d
lea    (%r12,%rdx,1),%eax
mov    %rax,%rdx
sar    $0x7,%edx
shr    $0x1f,%eax
add    %edx,%eax
movzwl %ax,%r12d
movzbl 0x1(%r13),%eax
neg    %eax
add    %ecx,%eax
mov    %r14,%r15
imul   %eax,%r15d
mov    %rbx,%rax
imul   %r15d
lea    (%r15,%rdx,1),%eax
mov    %rax,%rdx
sar    $0x7,%edx
shr    $0x1f,%eax
add    %edx,%eax
movzwl %ax,%eax
shl    $0x8,%eax
or     %eax,%r12d
movzbl 0x2(%r13),%eax
mov    %rcx,%r15
sub    %eax,%r15d
imul   %r14d,%r15d
mov    %rbx,%rax
imul   %r15d
lea    (%r15,%rdx,1),%eax
mov    %rax,%rdx
sar    $0x7,%edx
shr    $0x1f,%eax
add    %edx,%eax
movzwl %ax,%eax
shl    $0x10,%eax
or     %eax,%r12d
or     $0xff000000,%r12d
mov    %r12d,0x8(%rsi)
movzbl 0x3(%rdi,%r13,1),%eax
mov    %rcx,%r14
sub    %eax,%r14d
movzbl (%rdi,%r13,1),%eax
neg    %eax
add    %ecx,%eax
mov    %r14,%r12
imul   %eax,%r12d
mov    %rbx,%rax
imul   %r12d
lea    (%r12,%rdx,1),%eax
mov    %rax,%rdx
sar    $0x7,%edx
shr    $0x1f,%eax
add    %edx,%eax
movzwl %ax,%r12d
movzbl 0x1(%rdi,%r13,1),%eax
neg    %eax
add    %ecx,%eax
mov    %r14,%r15
imul   %eax,%r15d
mov    %rbx,%rax
imul   %r15d
lea    (%r15,%rdx,1),%eax
mov    %rax,%rdx
sar    $0x7,%edx
shr    $0x1f,%eax
add    %edx,%eax
movzwl %ax,%eax
shl    $0x8,%eax
or     %eax,%r12d
movzbl 0x2(%rdi,%r13,1),%eax
mov    %rcx,%r13
sub    %eax,%r13d
imul   %r14d,%r13d
mov    %rbx,%rax
imul   %r13d
lea    0x0(%r13,%rdx,1),%eax
mov    %rax,%rdx
sar    $0x7,%edx
shr    $0x1f,%eax
add    %edx,%eax
movzwl %ax,%eax
shl    $0x10,%eax
or     %eax,%r12d
or     $0xff000000,%r12d
mov    %r12d,0xc(%rsi)
lea    (%r11,%rdi,4),%r11
movzbl 0x3(%r11),%eax
mov    %rcx,%r14
sub    %eax,%r14d
movzbl (%r11),%eax
neg    %eax
add    %ecx,%eax
mov    %r14,%r12
imul   %eax,%r12d
mov    %rbx,%rax
imul   %r12d
lea    (%r12,%rdx,1),%eax
mov    %rax,%rdx
sar    $0x7,%edx
shr    $0x1f,%eax
add    %edx,%eax
movzwl %ax,%r12d
movzbl 0x1(%r11),%eax
neg    %eax
add    %ecx,%eax
mov    %r14,%r13
imul   %eax,%r13d
mov    %rbx,%rax
imul   %r13d
lea    0x0(%r13,%rdx,1),%eax
mov    %rax,%rdx
sar    $0x7,%edx
shr    $0x1f,%eax
add    %edx,%eax
movzwl %ax,%eax
shl    $0x8,%eax
or     %eax,%r12d
movzbl 0x2(%r11),%eax
mov    %rcx,%r13
sub    %eax,%r13d
imul   %r14d,%r13d
mov    %rbx,%rax
imul   %r13d
lea    0x0(%r13,%rdx,1),%eax
mov    %rax,%rdx
sar    $0x7,%edx
shr    $0x1f,%eax
add    %edx,%eax
movzwl %ax,%eax
shl    $0x10,%eax
or     %eax,%r12d
or     $0xff000000,%r12d
mov    %r12d,0x10(%rsi)
movzbl 0x3(%rdi,%r11,1),%eax
mov    %rcx,%r14
sub    %eax,%r14d
movzbl (%rdi,%r11,1),%eax
neg    %eax
add    %ecx,%eax
mov    %r14,%r12
imul   %eax,%r12d
mov    %rbx,%rax
imul   %r12d
lea    (%r12,%rdx,1),%eax
mov    %rax,%rdx
sar    $0x7,%edx
shr    $0x1f,%eax
add    %edx,%eax
movzwl %ax,%r12d
movzbl 0x1(%rdi,%r11,1),%eax
neg    %eax
add    %ecx,%eax
mov    %r14,%r13
imul   %eax,%r13d
mov    %rbx,%rax
imul   %r13d
lea    0x0(%r13,%rdx,1),%eax
mov    %rax,%rdx
sar    $0x7,%edx
shr    $0x1f,%eax
add    %edx,%eax
movzwl %ax,%eax
shl    $0x8,%eax
or     %eax,%r12d
movzbl 0x2(%rdi,%r11,1),%eax
mov    %rcx,%r13
sub    %eax,%r13d
imul   %r14d,%r13d
mov    %rbx,%rax
imul   %r13d
lea    0x0(%r13,%rdx,1),%eax
mov    %rax,%rdx
sar    $0x7,%edx
shr    $0x1f,%eax
add    %edx,%eax
movzwl %ax,%eax
shl    $0x10,%eax
or     %eax,%r12d
or     $0xff000000,%r12d
mov    %r12d,0x14(%rsi)
lea    (%r11,%rdi,2),%r11
movzbl 0x3(%r11),%eax
mov    %rcx,%r14
sub    %eax,%r14d
movzbl (%r11),%eax
neg    %eax
add    %ecx,%eax
mov    %r14,%r12
imul   %eax,%r12d
mov    %rbx,%rax
imul   %r12d
lea    (%r12,%rdx,1),%eax
mov    %rax,%rdx
sar    $0x7,%edx
shr    $0x1f,%eax
add    %edx,%eax
movzwl %ax,%r12d
movzbl 0x1(%r11),%eax
neg    %eax
add    %ecx,%eax
mov    %r14,%r13
imul   %eax,%r13d
mov    %rbx,%rax
imul   %r13d
lea    0x0(%r13,%rdx,1),%eax
mov    %rax,%rdx
sar    $0x7,%edx
shr    $0x1f,%eax
add    %edx,%eax
movzwl %ax,%eax
shl    $0x8,%eax
or     %eax,%r12d
movzbl 0x2(%r11),%eax
mov    %rcx,%r13
sub    %eax,%r13d
imul   %r14d,%r13d
mov    %rbx,%rax
imul   %r13d
lea    0x0(%r13,%rdx,1),%eax
mov    %rax,%rdx
sar    $0x7,%edx
shr    $0x1f,%eax
add    %edx,%eax
movzwl %ax,%eax
shl    $0x10,%eax
or     %eax,%r12d
or     $0xff000000,%r12d
mov    %r12d,0x18(%rsi)
movzbl 0x3(%r11,%rdi,1),%eax
mov    %rcx,%r14
sub    %eax,%r14d
movzbl (%r11,%rdi,1),%eax
neg    %eax
add    %ecx,%eax
mov    %r14,%r12
imul   %eax,%r12d
mov    %rbx,%rax
imul   %r12d
lea    (%r12,%rdx,1),%eax
mov    %rax,%rdx
sar    $0x7,%edx
shr    $0x1f,%eax
add    %edx,%eax
movzwl %ax,%r12d
movzbl 0x1(%r11,%rdi,1),%eax
neg    %eax
add    %ecx,%eax
mov    %r14,%r13
imul   %eax,%r13d
mov    %rbx,%rax
imul   %r13d
lea    0x0(%r13,%rdx,1),%eax
mov    %rax,%rdx
sar    $0x7,%edx
shr    $0x1f,%eax
add    %edx,%eax
movzwl %ax,%eax
shl    $0x8,%eax
or     %eax,%r12d
movzbl 0x2(%r11,%rdi,1),%eax
mov    %rcx,%r13
sub    %eax,%r13d
imul   %r14d,%r13d
mov    %rbx,%rax
imul   %r13d
lea    0x0(%r13,%rdx,1),%eax
mov    %rax,%rdx
sar    $0x7,%edx
shr    $0x1f,%eax
add    %edx,%eax
movzwl %ax,%eax
shl    $0x10,%eax
or     %eax,%r12d
or     $0xff000000,%r12d
mov    %r12d,0x1c(%rsi)
lea    (%r11,%rdi,2),%r11
add    $0x20,%rsi
add    $0xfffffff8,%r10d
cmp    $0x7,%r10d
ja     2cd5b <putRGBcontig8bitCMYKtile+0x4b>
test   %r10d,%r10d
je     2d6e1 <putRGBcontig8bitCMYKtile+0x9d1>
lea    -0x1(%r10),%eax
cmp    $0x6,%eax
ja     2d6e1 <putRGBcontig8bitCMYKtile+0x9d1>
lea    0x411a1(%rip),%rdx        # 6e41c <TIFFFaxBlackTable+0x10260>
movslq (%rdx,%rax,4),%rax
add    %rdx,%rax
jmpq   *%rax
movzbl 0x3(%r11),%eax
mov    %rcx,%r12
sub    %eax,%r12d
movzbl (%r11),%eax
neg    %eax
add    %ecx,%eax
mov    %r12,%r10
imul   %eax,%r10d
mov    %rbx,%rax
imul   %r10d
lea    (%r10,%rdx,1),%eax
mov    %rax,%rdx
sar    $0x7,%edx
shr    $0x1f,%eax
add    %edx,%eax
movzwl %ax,%r10d
movzbl 0x1(%r11),%eax
neg    %eax
add    %ecx,%eax
mov    %r12,%r13
imul   %eax,%r13d
mov    %rbx,%rax
imul   %r13d
lea    0x0(%r13,%rdx,1),%eax
mov    %rax,%rdx
sar    $0x7,%edx
shr    $0x1f,%eax
add    %edx,%eax
movzwl %ax,%eax
shl    $0x8,%eax
or     %eax,%r10d
movzbl 0x2(%r11),%eax
mov    %rcx,%r13
sub    %eax,%r13d
imul   %r12d,%r13d
mov    %rbx,%rax
imul   %r13d
lea    0x0(%r13,%rdx,1),%eax
mov    %rax,%rdx
sar    $0x7,%edx
shr    $0x1f,%eax
add    %edx,%eax
movzwl %ax,%eax
shl    $0x10,%eax
or     %eax,%r10d
or     $0xff000000,%r10d
mov    %r10d,(%rsi)
add    %rdi,%r11
add    $0x4,%rsi
movzbl 0x3(%r11),%eax
mov    %rcx,%r13
sub    %eax,%r13d
movzbl (%r11),%eax
neg    %eax
add    %ecx,%eax
mov    %r13,%r10
imul   %eax,%r10d
mov    %rbx,%rax
imul   %r10d
lea    (%r10,%rdx,1),%eax
mov    %rax,%rdx
sar    $0x7,%edx
shr    $0x1f,%eax
add    %edx,%eax
movzwl %ax,%r10d
movzbl 0x1(%r11),%eax
neg    %eax
add    %ecx,%eax
mov    %r13,%r12
imul   %eax,%r12d
mov    %rbx,%rax
imul   %r12d
lea    (%r12,%rdx,1),%eax
mov    %rax,%rdx
sar    $0x7,%edx
shr    $0x1f,%eax
add    %edx,%eax
movzwl %ax,%eax
shl    $0x8,%eax
or     %eax,%r10d
movzbl 0x2(%r11),%eax
mov    %rcx,%r12
sub    %eax,%r12d
imul   %r13d,%r12d
mov    %rbx,%rax
imul   %r12d
lea    (%r12,%rdx,1),%eax
mov    %rax,%rdx
sar    $0x7,%edx
shr    $0x1f,%eax
add    %edx,%eax
movzwl %ax,%eax
shl    $0x10,%eax
or     %eax,%r10d
or     $0xff000000,%r10d
mov    %r10d,(%rsi)
add    %rdi,%r11
add    $0x4,%rsi
movzbl 0x3(%r11),%eax
mov    %rcx,%r13
sub    %eax,%r13d
movzbl (%r11),%eax
neg    %eax
add    %ecx,%eax
mov    %r13,%r10
imul   %eax,%r10d
mov    %rbx,%rax
imul   %r10d
lea    (%r10,%rdx,1),%eax
mov    %rax,%rdx
sar    $0x7,%edx
shr    $0x1f,%eax
add    %edx,%eax
movzwl %ax,%r10d
movzbl 0x1(%r11),%eax
neg    %eax
add    %ecx,%eax
mov    %r13,%r12
imul   %eax,%r12d
mov    %rbx,%rax
imul   %r12d
lea    (%r12,%rdx,1),%eax
mov    %rax,%rdx
sar    $0x7,%edx
shr    $0x1f,%eax
add    %edx,%eax
movzwl %ax,%eax
shl    $0x8,%eax
or     %eax,%r10d
movzbl 0x2(%r11),%eax
mov    %rcx,%r12
sub    %eax,%r12d
imul   %r13d,%r12d
mov    %rbx,%rax
imul   %r12d
lea    (%r12,%rdx,1),%eax
mov    %rax,%rdx
sar    $0x7,%edx
shr    $0x1f,%eax
add    %edx,%eax
movzwl %ax,%eax
shl    $0x10,%eax
or     %eax,%r10d
or     $0xff000000,%r10d
mov    %r10d,(%rsi)
add    %rdi,%r11
add    $0x4,%rsi
movzbl 0x3(%r11),%eax
mov    %rcx,%r13
sub    %eax,%r13d
movzbl (%r11),%eax
neg    %eax
add    %ecx,%eax
mov    %r13,%r10
imul   %eax,%r10d
mov    %rbx,%rax
imul   %r10d
lea    (%r10,%rdx,1),%eax
mov    %rax,%rdx
sar    $0x7,%edx
shr    $0x1f,%eax
add    %edx,%eax
movzwl %ax,%r10d
movzbl 0x1(%r11),%eax
neg    %eax
add    %ecx,%eax
mov    %r13,%r12
imul   %eax,%r12d
mov    %rbx,%rax
imul   %r12d
lea    (%r12,%rdx,1),%eax
mov    %rax,%rdx
sar    $0x7,%edx
shr    $0x1f,%eax
add    %edx,%eax
movzwl %ax,%eax
shl    $0x8,%eax
or     %eax,%r10d
movzbl 0x2(%r11),%eax
mov    %rcx,%r12
sub    %eax,%r12d
imul   %r13d,%r12d
mov    %rbx,%rax
imul   %r12d
lea    (%r12,%rdx,1),%eax
mov    %rax,%rdx
sar    $0x7,%edx
shr    $0x1f,%eax
add    %edx,%eax
movzwl %ax,%eax
shl    $0x10,%eax
or     %eax,%r10d
or     $0xff000000,%r10d
mov    %r10d,(%rsi)
add    %rdi,%r11
add    $0x4,%rsi
movzbl 0x3(%r11),%eax
mov    %rcx,%r12
sub    %eax,%r12d
movzbl (%r11),%eax
neg    %eax
add    %ecx,%eax
mov    %r12,%r10
imul   %eax,%r10d
mov    %rbx,%rax
imul   %r10d
lea    (%r10,%rdx,1),%eax
mov    %rax,%rdx
sar    $0x7,%edx
shr    $0x1f,%eax
add    %edx,%eax
movzwl %ax,%r10d
movzbl 0x1(%r11),%eax
neg    %eax
add    %ecx,%eax
mov    %r12,%r13
imul   %eax,%r13d
mov    %rbx,%rax
imul   %r13d
lea    0x0(%r13,%rdx,1),%eax
mov    %rax,%rdx
sar    $0x7,%edx
shr    $0x1f,%eax
add    %edx,%eax
movzwl %ax,%eax
shl    $0x8,%eax
or     %eax,%r10d
movzbl 0x2(%r11),%eax
mov    %rcx,%r13
sub    %eax,%r13d
imul   %r12d,%r13d
mov    %rbx,%rax
imul   %r13d
lea    0x0(%r13,%rdx,1),%eax
mov    %rax,%rdx
sar    $0x7,%edx
shr    $0x1f,%eax
add    %edx,%eax
movzwl %ax,%eax
shl    $0x10,%eax
or     %eax,%r10d
or     $0xff000000,%r10d
mov    %r10d,(%rsi)
add    %rdi,%r11
add    $0x4,%rsi
movzbl 0x3(%r11),%eax
mov    %rcx,%r13
sub    %eax,%r13d
movzbl (%r11),%eax
neg    %eax
add    %ecx,%eax
mov    %r13,%r10
imul   %eax,%r10d
mov    %rbx,%rax
imul   %r10d
lea    (%r10,%rdx,1),%eax
mov    %rax,%rdx
sar    $0x7,%edx
shr    $0x1f,%eax
add    %edx,%eax
movzwl %ax,%r10d
movzbl 0x1(%r11),%eax
neg    %eax
add    %ecx,%eax
mov    %r13,%r12
imul   %eax,%r12d
mov    %rbx,%rax
imul   %r12d
lea    (%r12,%rdx,1),%eax
mov    %rax,%rdx
sar    $0x7,%edx
shr    $0x1f,%eax
add    %edx,%eax
movzwl %ax,%eax
shl    $0x8,%eax
or     %eax,%r10d
movzbl 0x2(%r11),%eax
mov    %rcx,%r12
sub    %eax,%r12d
imul   %r13d,%r12d
mov    %rbx,%rax
imul   %r12d
lea    (%r12,%rdx,1),%eax
mov    %rax,%rdx
sar    $0x7,%edx
shr    $0x1f,%eax
add    %edx,%eax
movzwl %ax,%eax
shl    $0x10,%eax
or     %eax,%r10d
or     $0xff000000,%r10d
mov    %r10d,(%rsi)
add    %rdi,%r11
add    $0x4,%rsi
movzbl 0x3(%r11),%eax
mov    %rcx,%r13
sub    %eax,%r13d
movzbl (%r11),%eax
neg    %eax
add    %ecx,%eax
mov    %r13,%r10
imul   %eax,%r10d
mov    %rbx,%rax
imul   %r10d
lea    (%r10,%rdx,1),%eax
mov    %rax,%rdx
sar    $0x7,%edx
shr    $0x1f,%eax
add    %edx,%eax
movzwl %ax,%r10d
movzbl 0x1(%r11),%eax
neg    %eax
add    %ecx,%eax
mov    %r13,%r12
imul   %eax,%r12d
mov    %rbx,%rax
imul   %r12d
lea    (%r12,%rdx,1),%eax
mov    %rax,%rdx
sar    $0x7,%edx
shr    $0x1f,%eax
add    %edx,%eax
movzwl %ax,%eax
shl    $0x8,%eax
or     %eax,%r10d
movzbl 0x2(%r11),%eax
mov    %rcx,%r12
sub    %eax,%r12d
imul   %r13d,%r12d
mov    %rbx,%rax
imul   %r12d
lea    (%r12,%rdx,1),%eax
mov    %rax,%rdx
sar    $0x7,%edx
shr    $0x1f,%eax
add    %edx,%eax
movzwl %ax,%eax
shl    $0x10,%eax
or     %eax,%r10d
or     $0xff000000,%r10d
mov    %r10d,(%rsi)
add    %rdi,%r11
add    $0x4,%rsi
add    $0xffffffff,%r9d
mov    -0x10(%rbp),%rax
add    %rax,%r11
mov    -0x8(%rbp),%rax
lea    (%rsi,%rax,4),%rsi
test   %r9d,%r9d
jne    2d70f <putRGBcontig8bitCMYKtile+0x9ff>
mov    -0x38(%rbp),%r15
mov    -0x30(%rbp),%r14
mov    -0x28(%rbp),%r13
mov    -0x20(%rbp),%r12
mov    -0x18(%rbp),%rbx
leaveq 
retq   
mov    %r8,%r10
jmpq   2d254 <putRGBcontig8bitCMYKtile+0x544>
nopw   0x0(%rax,%rax,1)

000000000002d720 <putRGBcontig8bitCMYKMaptile>:
push   %rbp
mov    %rsp,%rbp
sub    $0x40,%rsp
mov    %rbx,-0x18(%rbp)
mov    %r12,-0x20(%rbp)
mov    %r13,-0x28(%rbp)
mov    %r14,-0x30(%rbp)
mov    %r15,-0x38(%rbp)
mov    0x50(%rdi),%rcx
mov    0x20(%rbp),%rbx
movzwl 0x1e(%rdi),%r11d
mov    %r11,%rax
imul   0x10(%rbp),%eax
movslq %eax,%rax
mov    %rax,-0x10(%rbp)
movslq 0x18(%rbp),%rax
mov    %rax,-0x8(%rbp)
mov    $0xff,%edi
mov    $0xffffffff80808081,%r10
jmpq   2d833 <putRGBcontig8bitCMYKMaptile+0x113>
movzbl 0x3(%rbx),%eax
mov    %rdi,%r12
sub    %eax,%r12d
movzbl (%rbx),%eax
neg    %eax
add    %edi,%eax
mov    %r12,%r14
imul   %eax,%r14d
mov    %r10,%rax
imul   %r14d
lea    (%r14,%rdx,1),%eax
mov    %rax,%rdx
sar    $0x7,%edx
shr    $0x1f,%eax
add    %edx,%eax
movzwl %ax,%r15d
movzbl 0x1(%rbx),%eax
mov    %rdi,%r14
sub    %eax,%r14d
imul   %r12d,%r14d
mov    %r10,%rax
imul   %r14d
lea    (%r14,%rdx,1),%eax
mov    %rax,%rdx
sar    $0x7,%edx
shr    $0x1f,%eax
add    %edx,%eax
movzwl %ax,%eax
movzbl 0x2(%rbx),%edx
movzbl (%rcx,%r15,1),%r14d
movzbl (%rax,%rcx,1),%eax
shl    $0x8,%eax
add    %eax,%r14d
mov    %rdi,%rax
sub    %edx,%eax
imul   %eax,%r12d
mov    %r10,%rax
imul   %r12d
lea    (%r12,%rdx,1),%eax
mov    %rax,%rdx
sar    $0x7,%edx
shr    $0x1f,%eax
add    %edx,%eax
movzwl %ax,%eax
movzbl (%rcx,%rax,1),%eax
shl    $0x10,%eax
lea    -0x1000000(%r14,%rax,1),%eax
mov    %eax,(%rsi)
add    %r11,%rbx
add    $0x4,%rsi
add    $0xffffffff,%r13d
test   %r13d,%r13d
jne    2d770 <putRGBcontig8bitCMYKMaptile+0x50>
add    $0xffffffff,%r9d
mov    -0x10(%rbp),%rax
add    %rax,%rbx
mov    -0x8(%rbp),%rax
lea    (%rsi,%rax,4),%rsi
test   %r9d,%r9d
jne    2d84e <putRGBcontig8bitCMYKMaptile+0x12e>
mov    -0x38(%rbp),%r15
mov    -0x30(%rbp),%r14
mov    -0x28(%rbp),%r13
mov    -0x20(%rbp),%r12
mov    -0x18(%rbp),%rbx
leaveq 
retq   
mov    %r8,%r13
jmp    2d817 <putRGBcontig8bitCMYKMaptile+0xf7>
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

000000000002d860 <putRGBseparate8bittile>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    0x20(%rbp),%rax
movslq 0x10(%rbp),%r14
mov    0x28(%rbp),%rcx
mov    0x30(%rbp),%rdx
movslq 0x18(%rbp),%r15
jmpq   2db1d <putRGBseparate8bittile+0x2bd>
movzbl (%rax),%r11d
movzbl (%rcx),%edi
shl    $0x8,%edi
add    %edi,%r11d
movzbl (%rdx),%edi
shl    $0x10,%edi
lea    -0x1000000(%r11,%rdi,1),%edi
mov    %edi,(%rsi)
movzbl 0x1(%rax),%r11d
movzbl 0x1(%rcx),%edi
shl    $0x8,%edi
add    %edi,%r11d
movzbl 0x1(%rdx),%edi
shl    $0x10,%edi
lea    -0x1000000(%r11,%rdi,1),%edi
mov    %edi,0x4(%rsi)
movzbl 0x2(%rax),%r11d
movzbl 0x2(%rcx),%edi
shl    $0x8,%edi
add    %edi,%r11d
movzbl 0x2(%rdx),%edi
shl    $0x10,%edi
lea    -0x1000000(%r11,%rdi,1),%edi
mov    %edi,0x8(%rsi)
movzbl 0x3(%rax),%r11d
movzbl 0x3(%rcx),%edi
shl    $0x8,%edi
add    %edi,%r11d
movzbl 0x3(%rdx),%edi
shl    $0x10,%edi
lea    -0x1000000(%r11,%rdi,1),%edi
mov    %edi,0xc(%rsi)
movzbl 0x4(%rax),%r11d
movzbl 0x4(%rcx),%edi
shl    $0x8,%edi
add    %edi,%r11d
movzbl 0x4(%rdx),%edi
shl    $0x10,%edi
lea    -0x1000000(%r11,%rdi,1),%edi
mov    %edi,0x10(%rsi)
movzbl 0x5(%rax),%r11d
movzbl 0x5(%rcx),%edi
shl    $0x8,%edi
add    %edi,%r11d
movzbl 0x5(%rdx),%edi
shl    $0x10,%edi
lea    -0x1000000(%r11,%rdi,1),%edi
mov    %edi,0x14(%rsi)
movzbl 0x6(%rax),%r11d
movzbl 0x6(%rcx),%edi
shl    $0x8,%edi
add    %edi,%r11d
movzbl 0x6(%rdx),%edi
shl    $0x10,%edi
lea    -0x1000000(%r11,%rdi,1),%edi
mov    %edi,0x18(%rsi)
movzbl 0x7(%rax),%r11d
movzbl 0x7(%rcx),%edi
shl    $0x8,%edi
add    %edi,%r11d
movzbl 0x7(%rdx),%edi
shl    $0x10,%edi
lea    -0x1000000(%r11,%rdi,1),%edi
mov    %edi,0x1c(%rsi)
add    $0x8,%rax
add    $0x8,%rcx
add    $0x8,%rdx
add    $0x20,%rsi
add    $0xfffffff8,%r10d
cmp    $0x7,%r10d
ja     2d889 <putRGBseparate8bittile+0x29>
test   %r10d,%r10d
je     2db0c <putRGBseparate8bittile+0x2ac>
lea    -0x1(%r10),%edi
cmp    $0x6,%edi
ja     2db0c <putRGBseparate8bittile+0x2ac>
lea    0x40a70(%rip),%r10        # 6e438 <TIFFFaxBlackTable+0x1027c>
movslq (%r10,%rdi,4),%rdi
add    %r10,%rdi
jmpq   *%rdi
movzbl (%rax),%r10d
movzbl (%rcx),%edi
shl    $0x8,%edi
add    %edi,%r10d
movzbl (%rdx),%edi
shl    $0x10,%edi
lea    -0x1000000(%r10,%rdi,1),%edi
mov    %edi,(%rsi)
add    $0x1,%rax
add    $0x1,%rcx
add    $0x1,%rdx
add    $0x4,%rsi
movzbl (%rax),%r10d
movzbl (%rcx),%edi
shl    $0x8,%edi
add    %edi,%r10d
movzbl (%rdx),%edi
shl    $0x10,%edi
lea    -0x1000000(%r10,%rdi,1),%edi
mov    %edi,(%rsi)
add    $0x1,%rax
add    $0x1,%rcx
add    $0x1,%rdx
add    $0x4,%rsi
movzbl (%rax),%r10d
movzbl (%rcx),%edi
shl    $0x8,%edi
add    %edi,%r10d
movzbl (%rdx),%edi
shl    $0x10,%edi
lea    -0x1000000(%r10,%rdi,1),%edi
mov    %edi,(%rsi)
add    $0x1,%rax
add    $0x1,%rcx
add    $0x1,%rdx
add    $0x4,%rsi
movzbl (%rax),%r10d
movzbl (%rcx),%edi
shl    $0x8,%edi
add    %edi,%r10d
movzbl (%rdx),%edi
shl    $0x10,%edi
lea    -0x1000000(%r10,%rdi,1),%edi
mov    %edi,(%rsi)
add    $0x1,%rax
add    $0x1,%rcx
add    $0x1,%rdx
add    $0x4,%rsi
movzbl (%rax),%r10d
movzbl (%rcx),%edi
shl    $0x8,%edi
add    %edi,%r10d
movzbl (%rdx),%edi
shl    $0x10,%edi
lea    -0x1000000(%r10,%rdi,1),%edi
mov    %edi,(%rsi)
add    $0x1,%rax
add    $0x1,%rcx
add    $0x1,%rdx
add    $0x4,%rsi
movzbl (%rax),%r10d
movzbl (%rcx),%edi
shl    $0x8,%edi
add    %edi,%r10d
movzbl (%rdx),%edi
shl    $0x10,%edi
lea    -0x1000000(%r10,%rdi,1),%edi
mov    %edi,(%rsi)
add    $0x1,%rax
add    $0x1,%rcx
add    $0x1,%rdx
add    $0x4,%rsi
movzbl (%rax),%r10d
movzbl (%rcx),%edi
shl    $0x8,%edi
add    %edi,%r10d
movzbl (%rdx),%edi
shl    $0x10,%edi
lea    -0x1000000(%r10,%rdi,1),%edi
mov    %edi,(%rsi)
add    $0x1,%rax
add    $0x1,%rcx
add    $0x1,%rdx
add    $0x4,%rsi
add    $0xffffffff,%r9d
add    %r14,%rax
add    %r14,%rcx
add    %r14,%rdx
lea    (%rsi,%r15,4),%rsi
test   %r9d,%r9d
jne    2db2c <putRGBseparate8bittile+0x2cc>
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
mov    %r8,%r10
jmpq   2d9a1 <putRGBseparate8bittile+0x141>
data16 nopw %cs:0x0(%rax,%rax,1)
nop

000000000002db40 <putRGBAAseparate8bittile>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %r13,-0x8(%rbp)
mov    %r14,-0x10(%rbp)
mov    %r15,-0x18(%rbp)
mov    0x20(%rbp),%rax
movslq 0x10(%rbp),%r14
mov    0x28(%rbp),%rcx
mov    0x30(%rbp),%rdi
mov    0x38(%rbp),%rdx
movslq 0x18(%rbp),%r15
jmpq   2ded6 <putRGBAAseparate8bittile+0x396>
movzbl (%rax),%r13d
movzbl (%rcx),%r10d
shl    $0x8,%r10d
add    %r10d,%r13d
movzbl (%rdi),%r10d
shl    $0x10,%r10d
add    %r10d,%r13d
movzbl (%rdx),%r10d
shl    $0x18,%r10d
add    %r13d,%r10d
mov    %r10d,(%rsi)
movzbl 0x1(%rax),%r13d
movzbl 0x1(%rcx),%r10d
shl    $0x8,%r10d
add    %r10d,%r13d
movzbl 0x1(%rdi),%r10d
shl    $0x10,%r10d
add    %r10d,%r13d
movzbl 0x1(%rdx),%r10d
shl    $0x18,%r10d
add    %r13d,%r10d
mov    %r10d,0x4(%rsi)
movzbl 0x2(%rax),%r13d
movzbl 0x2(%rcx),%r10d
shl    $0x8,%r10d
add    %r10d,%r13d
movzbl 0x2(%rdi),%r10d
shl    $0x10,%r10d
add    %r10d,%r13d
movzbl 0x2(%rdx),%r10d
shl    $0x18,%r10d
add    %r13d,%r10d
mov    %r10d,0x8(%rsi)
movzbl 0x3(%rax),%r13d
movzbl 0x3(%rcx),%r10d
shl    $0x8,%r10d
add    %r10d,%r13d
movzbl 0x3(%rdi),%r10d
shl    $0x10,%r10d
add    %r10d,%r13d
movzbl 0x3(%rdx),%r10d
shl    $0x18,%r10d
add    %r13d,%r10d
mov    %r10d,0xc(%rsi)
movzbl 0x4(%rax),%r13d
movzbl 0x4(%rcx),%r10d
shl    $0x8,%r10d
add    %r10d,%r13d
movzbl 0x4(%rdi),%r10d
shl    $0x10,%r10d
add    %r10d,%r13d
movzbl 0x4(%rdx),%r10d
shl    $0x18,%r10d
add    %r13d,%r10d
mov    %r10d,0x10(%rsi)
movzbl 0x5(%rax),%r13d
movzbl 0x5(%rcx),%r10d
shl    $0x8,%r10d
add    %r10d,%r13d
movzbl 0x5(%rdi),%r10d
shl    $0x10,%r10d
add    %r10d,%r13d
movzbl 0x5(%rdx),%r10d
shl    $0x18,%r10d
add    %r13d,%r10d
mov    %r10d,0x14(%rsi)
movzbl 0x6(%rax),%r13d
movzbl 0x6(%rcx),%r10d
shl    $0x8,%r10d
add    %r10d,%r13d
movzbl 0x6(%rdi),%r10d
shl    $0x10,%r10d
add    %r10d,%r13d
movzbl 0x6(%rdx),%r10d
shl    $0x18,%r10d
add    %r13d,%r10d
mov    %r10d,0x18(%rsi)
movzbl 0x7(%rax),%r13d
movzbl 0x7(%rcx),%r10d
shl    $0x8,%r10d
add    %r10d,%r13d
movzbl 0x7(%rdi),%r10d
shl    $0x10,%r10d
add    %r10d,%r13d
movzbl 0x7(%rdx),%r10d
shl    $0x18,%r10d
add    %r13d,%r10d
mov    %r10d,0x1c(%rsi)
add    $0x8,%rax
add    $0x8,%rcx
add    $0x8,%rdi
add    $0x8,%rdx
add    $0x20,%rsi
add    $0xfffffff8,%r11d
cmp    $0x7,%r11d
ja     2db71 <putRGBAAseparate8bittile+0x31>
test   %r11d,%r11d
je     2dec2 <putRGBAAseparate8bittile+0x382>
add    $0xffffffff,%r11d
cmp    $0x6,%r11d
ja     2dec2 <putRGBAAseparate8bittile+0x382>
lea    0x40740(%rip),%r10        # 6e454 <TIFFFaxBlackTable+0x10298>
movslq (%r10,%r11,4),%r11
add    %r11,%r10
jmpq   *%r10
movzbl (%rax),%r11d
movzbl (%rcx),%r10d
shl    $0x8,%r10d
add    %r10d,%r11d
movzbl (%rdi),%r10d
shl    $0x10,%r10d
add    %r10d,%r11d
movzbl (%rdx),%r10d
shl    $0x18,%r10d
add    %r11d,%r10d
mov    %r10d,(%rsi)
add    $0x1,%rax
add    $0x1,%rcx
add    $0x1,%rdi
add    $0x1,%rdx
add    $0x4,%rsi
movzbl (%rax),%r11d
movzbl (%rcx),%r10d
shl    $0x8,%r10d
add    %r10d,%r11d
movzbl (%rdi),%r10d
shl    $0x10,%r10d
add    %r10d,%r11d
movzbl (%rdx),%r10d
shl    $0x18,%r10d
add    %r11d,%r10d
mov    %r10d,(%rsi)
add    $0x1,%rax
add    $0x1,%rcx
add    $0x1,%rdi
add    $0x1,%rdx
add    $0x4,%rsi
movzbl (%rax),%r11d
movzbl (%rcx),%r10d
shl    $0x8,%r10d
add    %r10d,%r11d
movzbl (%rdi),%r10d
shl    $0x10,%r10d
add    %r10d,%r11d
movzbl (%rdx),%r10d
shl    $0x18,%r10d
add    %r11d,%r10d
mov    %r10d,(%rsi)
add    $0x1,%rax
add    $0x1,%rcx
add    $0x1,%rdi
add    $0x1,%rdx
add    $0x4,%rsi
movzbl (%rax),%r11d
movzbl (%rcx),%r10d
shl    $0x8,%r10d
add    %r10d,%r11d
movzbl (%rdi),%r10d
shl    $0x10,%r10d
add    %r10d,%r11d
movzbl (%rdx),%r10d
shl    $0x18,%r10d
add    %r11d,%r10d
mov    %r10d,(%rsi)
add    $0x1,%rax
add    $0x1,%rcx
add    $0x1,%rdi
add    $0x1,%rdx
add    $0x4,%rsi
movzbl (%rax),%r11d
movzbl (%rcx),%r10d
shl    $0x8,%r10d
add    %r10d,%r11d
movzbl (%rdi),%r10d
shl    $0x10,%r10d
add    %r10d,%r11d
movzbl (%rdx),%r10d
shl    $0x18,%r10d
add    %r11d,%r10d
mov    %r10d,(%rsi)
add    $0x1,%rax
add    $0x1,%rcx
add    $0x1,%rdi
add    $0x1,%rdx
add    $0x4,%rsi
movzbl (%rax),%r11d
movzbl (%rcx),%r10d
shl    $0x8,%r10d
add    %r10d,%r11d
movzbl (%rdi),%r10d
shl    $0x10,%r10d
add    %r10d,%r11d
movzbl (%rdx),%r10d
shl    $0x18,%r10d
add    %r11d,%r10d
mov    %r10d,(%rsi)
add    $0x1,%rax
add    $0x1,%rcx
add    $0x1,%rdi
add    $0x1,%rdx
add    $0x4,%rsi
movzbl (%rax),%r11d
movzbl (%rcx),%r10d
shl    $0x8,%r10d
add    %r10d,%r11d
movzbl (%rdi),%r10d
shl    $0x10,%r10d
add    %r10d,%r11d
movzbl (%rdx),%r10d
shl    $0x18,%r10d
add    %r11d,%r10d
mov    %r10d,(%rsi)
add    $0x1,%rax
add    $0x1,%rcx
add    $0x1,%rdi
add    $0x1,%rdx
add    $0x4,%rsi
add    $0xffffffff,%r9d
add    %r14,%rax
add    %r14,%rcx
add    %r14,%rdi
add    %r14,%rdx
lea    (%rsi,%r15,4),%rsi
test   %r9d,%r9d
jne    2dee9 <putRGBAAseparate8bittile+0x3a9>
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
leaveq 
retq   
mov    %r8,%r11
jmpq   2dcec <putRGBAAseparate8bittile+0x1ac>
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   0x0(%rax)

000000000002df00 <putCMYKseparate8bittile>:
push   %rbp
mov    %rsp,%rbp
sub    $0x40,%rsp
mov    %rbx,-0x18(%rbp)
mov    %r12,-0x20(%rbp)
mov    %r13,-0x28(%rbp)
mov    %r14,-0x30(%rbp)
mov    %r15,-0x38(%rbp)
mov    0x38(%rbp),%rdi
movslq 0x10(%rbp),%rax
mov    %rax,-0x10(%rbp)
mov    0x20(%rbp),%rbx
mov    0x28(%rbp),%r11
mov    0x30(%rbp),%r12
movslq 0x18(%rbp),%rax
mov    %rax,-0x8(%rbp)
mov    $0xff,%r13d
mov    $0x80808081,%r10d
jmpq   2dff2 <putCMYKseparate8bittile+0xf2>
movzbl (%rdi),%eax
mov    %r13,%r15
sub    %eax,%r15d
movzbl (%rbx),%eax
neg    %eax
add    %r13d,%eax
mov    %r15,%rcx
imul   %eax,%ecx
mov    %r10,%rax
mul    %ecx
mov    %rdx,%rcx
shr    $0x7,%ecx
movzbl (%r11),%eax
neg    %eax
add    %r13d,%eax
mov    %r15,%rdx
imul   %eax,%edx
mov    %r10,%rax
mul    %edx
and    $0x7fffff80,%edx
lea    (%rdx,%rdx,1),%eax
or     %eax,%ecx
movzbl (%r12),%eax
neg    %eax
add    %r13d,%eax
imul   %eax,%r15d
mov    %r10,%rax
mul    %r15d
and    $0x7fff80,%edx
shl    $0x9,%edx
or     %edx,%ecx
or     $0xff000000,%ecx
mov    %ecx,(%rsi)
add    $0x1,%rdi
add    $0x1,%rbx
add    $0x1,%r11
add    $0x1,%r12
add    $0x4,%rsi
add    $0xffffffff,%r14d
test   %r14d,%r14d
jne    2df4d <putCMYKseparate8bittile+0x4d>
add    $0xffffffff,%r9d
mov    -0x10(%rbp),%rax
add    %rax,%rdi
add    %rax,%rbx
add    %rax,%r11
add    %rax,%r12
mov    -0x8(%rbp),%rax
lea    (%rsi,%rax,4),%rsi
test   %r9d,%r9d
jne    2e00d <putCMYKseparate8bittile+0x10d>
mov    -0x38(%rbp),%r15
mov    -0x30(%rbp),%r14
mov    -0x28(%rbp),%r13
mov    -0x20(%rbp),%r12
mov    -0x18(%rbp),%rbx
leaveq 
retq   
mov    %r8,%r14
jmp    2dfcd <putCMYKseparate8bittile+0xcd>
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   (%rax)

000000000002e020 <putRGBUAseparate8bittile>:
push   %rbp
mov    %rsp,%rbp
sub    $0x40,%rsp
mov    %rbx,-0x18(%rbp)
mov    %r12,-0x20(%rbp)
mov    %r13,-0x28(%rbp)
mov    %r14,-0x30(%rbp)
mov    %r15,-0x38(%rbp)
mov    0x20(%rbp),%rax
movslq 0x10(%rbp),%rcx
mov    %rcx,-0x10(%rbp)
mov    0x38(%rbp),%rcx
mov    0x28(%rbp),%rdx
mov    0x30(%rbp),%rbx
movslq 0x18(%rbp),%r10
mov    %r10,-0x8(%rbp)
mov    -0x10(%rbp),%r14
jmp    2e0d9 <putRGBUAseparate8bittile+0xb9>
movzbl (%rcx),%r11d
mov    %r11,%r10
shl    $0x8,%r10
add    0x78(%rdi),%r10
movzbl (%rax),%r12d
movzbl (%r12,%r10,1),%r15d
movzbl (%rdx),%r12d
movzbl (%r12,%r10,1),%r12d
shl    $0x8,%r12d
add    %r15d,%r12d
movzbl (%rbx),%r15d
movzbl (%r10,%r15,1),%r10d
shl    $0x10,%r10d
add    %r12d,%r10d
shl    $0x18,%r11d
add    %r11d,%r10d
mov    %r10d,(%rsi)
add    $0x1,%rax
add    $0x1,%rcx
add    $0x1,%rdx
add    $0x1,%rbx
add    $0x4,%rsi
add    $0xffffffff,%r13d
test   %r13d,%r13d
jne    2e062 <putRGBUAseparate8bittile+0x42>
add    $0xffffffff,%r9d
add    %r14,%rax
add    %r14,%rcx
add    %r14,%rdx
add    %r14,%rbx
mov    -0x8(%rbp),%r10
lea    (%rsi,%r10,4),%rsi
test   %r9d,%r9d
jne    2e0f4 <putRGBUAseparate8bittile+0xd4>
mov    -0x38(%rbp),%r15
mov    -0x30(%rbp),%r14
mov    -0x28(%rbp),%r13
mov    -0x20(%rbp),%r12
mov    -0x18(%rbp),%rbx
leaveq 
retq   
mov    %r8,%r13
jmp    2e0bc <putRGBUAseparate8bittile+0x9c>
nopl   0x0(%rax)

000000000002e100 <putRGBseparate16bittile>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    %rbx,-0x10(%rbp)
mov    %r12,-0x18(%rbp)
mov    %r13,-0x20(%rbp)
mov    %r14,-0x28(%rbp)
mov    %r15,-0x30(%rbp)
mov    0x20(%rbp),%rax
movslq 0x10(%rbp),%r12
mov    0x28(%rbp),%rcx
mov    0x30(%rbp),%rdx
movslq 0x18(%rbp),%rbx
mov    %rbx,-0x8(%rbp)
xor    %r15d,%r15d
mov    -0x8(%rbp),%r13
jmp    2e19c <putRGBseparate16bittile+0x9c>
movzwl (%rax),%ebx
mov    0x80(%rdi),%r11
movzbl (%rbx,%r11,1),%r14d
movzwl (%rcx),%ebx
movzbl (%rbx,%r11,1),%ebx
shl    $0x8,%ebx
add    %ebx,%r14d
movzwl (%rdx),%ebx
movzbl (%r11,%rbx,1),%ebx
shl    $0x10,%ebx
lea    -0x1000000(%r14,%rbx,1),%ebx
mov    %ebx,(%rsi)
add    $0x2,%rax
add    $0x2,%rcx
add    $0x2,%rdx
add    $0x4,%rsi
add    $0x1,%r10d
cmp    %r8d,%r10d
jb     2e13d <putRGBseparate16bittile+0x3d>
add    $0xffffffff,%r9d
lea    (%rax,%r12,2),%rax
lea    (%rcx,%r12,2),%rcx
lea    (%rdx,%r12,2),%rdx
lea    (%rsi,%r13,4),%rsi
test   %r9d,%r9d
jne    2e1b7 <putRGBseparate16bittile+0xb7>
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
mov    -0x10(%rbp),%rbx
leaveq 
retq   
mov    %r15,%r10
jmp    2e183 <putRGBseparate16bittile+0x83>
nopl   0x0(%rax)

000000000002e1c0 <putRGBAAseparate16bittile>:
push   %rbp
mov    %rsp,%rbp
sub    $0x40,%rsp
mov    %rbx,-0x18(%rbp)
mov    %r12,-0x20(%rbp)
mov    %r13,-0x28(%rbp)
mov    %r14,-0x30(%rbp)
mov    %r15,-0x38(%rbp)
mov    0x20(%rbp),%rax
movslq 0x10(%rbp),%rcx
mov    %rcx,-0x10(%rbp)
mov    0x28(%rbp),%rcx
mov    0x30(%rbp),%rdx
mov    0x38(%rbp),%rbx
movslq 0x18(%rbp),%r10
mov    %r10,-0x8(%rbp)
xor    %r14d,%r14d
mov    -0x10(%rbp),%r15
jmp    2e283 <putRGBAAseparate16bittile+0xc3>
movzwl (%rax),%r10d
mov    0x80(%rdi),%r13
movzbl (%r10,%r13,1),%r12d
movzwl (%rcx),%r10d
movzbl (%r10,%r13,1),%r10d
shl    $0x8,%r10d
add    %r10d,%r12d
movzwl (%rdx),%r10d
movzbl 0x0(%r13,%r10,1),%r10d
shl    $0x10,%r10d
add    %r10d,%r12d
movzwl (%rbx),%r10d
movzbl 0x0(%r13,%r10,1),%r10d
shl    $0x18,%r10d
add    %r12d,%r10d
mov    %r10d,(%rsi)
add    $0x2,%rax
add    $0x2,%rcx
add    $0x2,%rdx
add    $0x2,%rbx
add    $0x4,%rsi
add    $0x1,%r11d
cmp    %r8d,%r11d
jb     2e205 <putRGBAAseparate16bittile+0x45>
add    $0xffffffff,%r9d
lea    (%rax,%r15,2),%rax
lea    (%rcx,%r15,2),%rcx
lea    (%rdx,%r15,2),%rdx
lea    (%rbx,%r15,2),%rbx
mov    -0x8(%rbp),%r10
lea    (%rsi,%r10,4),%rsi
test   %r9d,%r9d
jne    2e29e <putRGBAAseparate16bittile+0xde>
mov    -0x38(%rbp),%r15
mov    -0x30(%rbp),%r14
mov    -0x28(%rbp),%r13
mov    -0x20(%rbp),%r12
mov    -0x18(%rbp),%rbx
leaveq 
retq   
mov    %r14,%r11
jmp    2e262 <putRGBAAseparate16bittile+0xa2>
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

000000000002e2b0 <putRGBUAseparate16bittile>:
push   %rbp
mov    %rsp,%rbp
sub    $0x40,%rsp
mov    %rbx,-0x18(%rbp)
mov    %r12,-0x20(%rbp)
mov    %r13,-0x28(%rbp)
mov    %r14,-0x30(%rbp)
mov    %r15,-0x38(%rbp)
mov    0x20(%rbp),%rax
movslq 0x10(%rbp),%rcx
mov    %rcx,-0x10(%rbp)
mov    0x38(%rbp),%rcx
mov    0x28(%rbp),%rdx
mov    0x30(%rbp),%rbx
movslq 0x18(%rbp),%r10
mov    %r10,-0x8(%rbp)
jmpq   2e38b <putRGBUAseparate16bittile+0xdb>
movzwl (%rax),%r10d
mov    0x80(%rdi),%r14
movzbl (%r10,%r14,1),%r12d
movzwl (%rcx),%r10d
movzbl (%r10,%r14,1),%r11d
mov    %r11,%r10
shl    $0x8,%r10
add    0x78(%rdi),%r10
movzbl (%r12,%r10,1),%r15d
movzwl (%rdx),%r12d
movzbl (%r12,%r14,1),%r12d
movzbl (%r12,%r10,1),%r12d
shl    $0x8,%r12d
add    %r12d,%r15d
movzwl (%rbx),%r12d
movzbl (%r14,%r12,1),%r12d
movzbl (%r10,%r12,1),%r10d
shl    $0x10,%r10d
add    %r15d,%r10d
shl    $0x18,%r11d
add    %r11d,%r10d
mov    %r10d,(%rsi)
add    $0x2,%rax
add    $0x2,%rcx
add    $0x2,%rdx
add    $0x2,%rbx
add    $0x4,%rsi
add    $0xffffffff,%r13d
test   %r13d,%r13d
jne    2e2f1 <putRGBUAseparate16bittile+0x41>
add    $0xffffffff,%r9d
mov    -0x10(%rbp),%r10
lea    (%rax,%r10,2),%rax
lea    (%rcx,%r10,2),%rcx
lea    (%rdx,%r10,2),%rdx
lea    (%rbx,%r10,2),%rbx
mov    -0x8(%rbp),%r10
lea    (%rsi,%r10,4),%rsi
test   %r9d,%r9d
jne    2e3a6 <putRGBUAseparate16bittile+0xf6>
mov    -0x38(%rbp),%r15
mov    -0x30(%rbp),%r14
mov    -0x28(%rbp),%r13
mov    -0x20(%rbp),%r12
mov    -0x18(%rbp),%rbx
leaveq 
retq   
mov    %r8,%r13
jmp    2e366 <putRGBUAseparate16bittile+0xb6>
nopl   0x0(%rax,%rax,1)

000000000002e3b0 <putcontig8bitCIELab>:
push   %rbp
mov    %rsp,%rbp
sub    $0x60,%rsp
mov    %r15,-0x38(%rbp)
mov    %r14,-0x30(%rbp)
mov    %rbx,-0x18(%rbp)
mov    %r12,-0x20(%rbp)
mov    %r13,-0x28(%rbp)
mov    %r8,-0x48(%rbp)
mov    0x20(%rbp),%r12
movslq 0x10(%rbp),%rax
lea    (%rax,%rax,2),%eax
movslq %eax,%rax
mov    %rax,-0x10(%rbp)
movslq 0x18(%rbp),%rax
mov    %rax,-0x8(%rbp)
mov    %rdi,%rbx
mov    %r9,%r10
mov    %rsi,%r14
mov    %r8,%r15
lea    -0x60(%rbp),%r8
lea    -0x5c(%rbp),%r9
lea    -0x58(%rbp),%rax
lea    -0x54(%rbp),%r13
jmpq   2e4a5 <putcontig8bitCIELab+0xf5>
sub    $0x10,%rsp
mov    0x70(%rbx),%rdi
movzbl (%r12),%esi
movsbq 0x1(%r12),%rdx
movsbq 0x2(%r12),%rcx
mov    %rax,(%rsp)
callq  8320 <TIFFCIELabToXYZ@plt>
add    $0x10,%rsp
mov    0x70(%rbx),%rdi
movss  -0x60(%rbp),%xmm0
movss  -0x5c(%rbp),%xmm1
movss  -0x58(%rbp),%xmm2
mov    %r13,%rsi
lea    -0x50(%rbp),%rdx
lea    -0x4c(%rbp),%rcx
callq  8d30 <TIFFXYZToRGB@plt>
mov    -0x50(%rbp),%eax
shl    $0x8,%eax
or     -0x54(%rbp),%eax
mov    -0x4c(%rbp),%ecx
shl    $0x10,%ecx
or     %ecx,%eax
or     $0xff000000,%eax
mov    %eax,(%r14)
add    $0x3,%r12
add    $0x4,%r14
add    $0xffffffff,%r15d
lea    -0x58(%rbp),%rax
lea    -0x5c(%rbp),%r9
lea    -0x60(%rbp),%r8
test   %r15d,%r15d
jne    2e40b <putcontig8bitCIELab+0x5b>
mov    -0x40(%rbp),%rcx
lea    -0x1(%rcx),%r10d
mov    -0x10(%rbp),%rcx
add    %rcx,%r12
mov    -0x8(%rbp),%rcx
lea    (%r14,%rcx,4),%r14
mov    -0x48(%rbp),%r15
test   %r10d,%r10d
jne    2e4c0 <putcontig8bitCIELab+0x110>
mov    -0x28(%rbp),%r13
mov    -0x20(%rbp),%r12
mov    -0x18(%rbp),%rbx
mov    -0x30(%rbp),%r14
mov    -0x38(%rbp),%r15
leaveq 
retq   
mov    %r10,-0x40(%rbp)
jmp    2e485 <putcontig8bitCIELab+0xd5>
nopw   %cs:0x0(%rax,%rax,1)

000000000002e4d0 <putcontig8bitYCbCr44tile>:
push   %rbp
mov    %rsp,%rbp
sub    $0x200,%rsp
mov    %r15,-0x68(%rbp)
mov    %r14,-0x60(%rbp)
mov    %r13,-0x58(%rbp)
mov    %r12,-0x50(%rbp)
mov    %rbx,-0x48(%rbp)
mov    %rdi,-0x38(%rbp)
mov    %r8,-0x70(%rbp)
mov    0x20(%rbp),%rbx
movslq 0x10(%rbp),%rcx
mov    %rcx,%rax
sar    %eax
shr    $0x1e,%eax
add    %ecx,%eax
sar    $0x2,%eax
lea    (%rax,%rax,4),%eax
add    %eax,%eax
movslq %eax,%rax
mov    %rax,-0x40(%rbp)
lea    (%r8,%r8,2),%eax
movslq 0x18(%rbp),%r10
lea    (%rax,%r10,4),%eax
movslq %eax,%rax
mov    %rax,-0x28(%rbp)
lea    -0x84(%rbp),%rax
lea    -0x138(%rbp),%r15
lea    -0x120(%rbp),%r14
lea    -0x114(%rbp),%r12
lea    -0xd8(%rbp),%r11
mov    %r8d,%edx
lea    (%rsi,%rdx,4),%rcx
lea    (%rcx,%r10,4),%r13
lea    0x0(%r13,%rdx,4),%rcx
lea    (%rcx,%r10,4),%rcx
lea    (%rcx,%rdx,4),%rdx
lea    (%rdx,%r10,4),%r10
mov    %r9,%rdx
and    $0x3,%edx
test   %edx,%edx
je     2e58f <putcontig8bitYCbCr44tile+0xbf>
mov    %r12,%rdx
mov    %rdi,%r12
mov    %r14,%rdi
mov    %rsi,%r14
mov    %rdx,%rsi
lea    -0xc0(%rbp),%rdx
jmpq   2e674 <putcontig8bitYCbCr44tile+0x1a4>
mov    %r8,%rdx
and    $0x3,%edx
test   %edx,%edx
je     2e6a3 <putcontig8bitYCbCr44tile+0x1d3>
mov    %r12,%rdx
mov    %rdi,%r12
mov    %r14,%rdi
mov    %rsi,%r14
mov    %rdx,%rsi
lea    -0xc0(%rbp),%rdx
jmpq   2e674 <putcontig8bitYCbCr44tile+0x1a4>
mov    %r12d,%esi
lea    (%r15,%rsi,4),%rax
mov    -0x30(%rbp),%rcx
lea    (%rcx,%rsi,4),%rcx
mov    -0x20(%rbp),%rdx
lea    (%rdx,%rsi,4),%rdx
lea    (%r14,%rsi,4),%rsi
xor    %r8d,%r8d
mov    %rax,-0x10(%rbp)
mov    %rcx,-0x30(%rbp)
mov    %rsi,-0x18(%rbp)
mov    %rdx,-0x20(%rbp)
add    $0x12,%rbx
mov    %r13,%r9
mov    -0x38(%rbp),%r12
lea    -0xd8(%rbp),%r11
lea    -0x114(%rbp),%rsi
lea    -0x120(%rbp),%rdi
lea    -0x138(%rbp),%r15
lea    -0x84(%rbp),%rax
lea    -0xc0(%rbp),%rdx
lea    -0xb4(%rbp),%rcx
lea    -0xa8(%rbp),%r10
mov    %r8,-0x78(%rbp)
test   %r8d,%r8d
jne    2e6cb <putcontig8bitYCbCr44tile+0x1fb>
cmp    $0x4,%r9d
jbe    2e6f6 <putcontig8bitYCbCr44tile+0x226>
add    $0xfffffffc,%r9d
mov    -0x40(%rbp),%rcx
add    %rcx,%rbx
mov    -0x10(%rbp),%rcx
mov    -0x28(%rbp),%r8
lea    (%rcx,%r8,4),%r14
mov    -0x30(%rbp),%rcx
lea    (%rcx,%r8,4),%r10
mov    -0x20(%rbp),%rcx
lea    (%rcx,%r8,4),%rcx
mov    -0x18(%rbp),%r13
lea    0x0(%r13,%r8,4),%r13
mov    -0x70(%rbp),%r8
mov    %r9,-0x80(%rbp)
mov    %r14,-0x10(%rbp)
mov    %r10,-0x30(%rbp)
mov    %r13,-0x18(%rbp)
mov    %rcx,-0x20(%rbp)
test   %r9d,%r9d
jne    2e70c <putcontig8bitYCbCr44tile+0x23c>
mov    -0x48(%rbp),%rbx
mov    -0x50(%rbp),%r12
mov    -0x58(%rbp),%r13
mov    -0x60(%rbp),%r14
mov    -0x68(%rbp),%r15
leaveq 
retq   
shr    $0x2,%r8d
mov    %r8,-0x78(%rbp)
mov    %rdi,%r12
mov    %rsi,%r15
lea    -0x200(%rbp),%r8
lea    -0x1fc(%rbp),%rdx
lea    -0x1f8(%rbp),%rax
jmpq   2ecc8 <putcontig8bitYCbCr44tile+0x7f8>
movzbl 0x10(%rbx),%r14d
movzbl 0x11(%rbx),%r13d
mov    %r13,-0x8(%rbp)
cmp    $0x1,%r8d
jbe    2ecf4 <putcontig8bitYCbCr44tile+0x824>
cmp    $0x2,%r8d
jne    2ed21 <putcontig8bitYCbCr44tile+0x851>
mov    -0x10(%rbp),%r15
jmpq   2eec6 <putcontig8bitYCbCr44tile+0x9f6>
mov    -0x48(%rbp),%rbx
mov    -0x50(%rbp),%r12
mov    -0x58(%rbp),%r13
mov    -0x60(%rbp),%r14
mov    -0x68(%rbp),%r15
leaveq 
retq   
lea    -0xb4(%rbp),%rcx
lea    -0xa8(%rbp),%r10
jmpq   2e629 <putcontig8bitYCbCr44tile+0x159>
add    $0x12,%rbx
mov    -0x38(%rbp),%rax
lea    0x10(%rax),%r15
mov    -0x30(%rbp),%rax
add    $0x10,%rax
mov    %rax,-0x30(%rbp)
mov    -0x20(%rbp),%rax
add    $0x10,%rax
mov    %rax,-0x20(%rbp)
lea    0x10(%r14),%rax
mov    %rax,-0x18(%rbp)
lea    -0x1fc(%rbp),%r9
lea    -0x200(%rbp),%r8
lea    -0x1f8(%rbp),%rax
mov    %r15,-0x38(%rbp)
sub    $0x10,%rsp
mov    0x68(%r12),%rdi
movzbl (%rbx),%esi
movzbl 0x10(%rbx),%r14d
movzbl 0x11(%rbx),%r13d
mov    %rax,(%rsp)
mov    %r14,%rdx
mov    %r13,%rcx
callq  8370 <TIFFYCbCrtoRGB@plt>
mov    -0x1fc(%rbp),%eax
shl    $0x8,%eax
or     -0x200(%rbp),%eax
mov    -0x1f8(%rbp),%ecx
shl    $0x10,%ecx
or     %ecx,%eax
or     $0xff000000,%eax
mov    %eax,(%r15)
mov    0x68(%r12),%rdi
movzbl 0x1(%rbx),%esi
lea    -0x1ec(%rbp),%rax
mov    %rax,(%rsp)
mov    %r14,%rdx
mov    %r13,%rcx
lea    -0x1f4(%rbp),%r8
lea    -0x1f0(%rbp),%r9
callq  8370 <TIFFYCbCrtoRGB@plt>
mov    -0x1f0(%rbp),%eax
shl    $0x8,%eax
or     -0x1f4(%rbp),%eax
mov    -0x1ec(%rbp),%ecx
shl    $0x10,%ecx
or     %ecx,%eax
or     $0xff000000,%eax
mov    %eax,0x4(%r15)
mov    0x68(%r12),%rdi
movzbl 0x2(%rbx),%esi
lea    -0x1e0(%rbp),%rax
mov    %rax,(%rsp)
mov    %r14,%rdx
mov    %r13,%rcx
lea    -0x1e8(%rbp),%r8
lea    -0x1e4(%rbp),%r9
callq  8370 <TIFFYCbCrtoRGB@plt>
mov    -0x1e4(%rbp),%eax
shl    $0x8,%eax
or     -0x1e8(%rbp),%eax
mov    -0x1e0(%rbp),%ecx
shl    $0x10,%ecx
or     %ecx,%eax
or     $0xff000000,%eax
mov    %eax,0x8(%r15)
mov    0x68(%r12),%rdi
movzbl 0x3(%rbx),%esi
lea    -0x1d4(%rbp),%rax
mov    %rax,(%rsp)
mov    %r14,%rdx
mov    %r13,%rcx
lea    -0x1dc(%rbp),%r8
lea    -0x1d8(%rbp),%r9
callq  8370 <TIFFYCbCrtoRGB@plt>
mov    -0x1d8(%rbp),%eax
shl    $0x8,%eax
or     -0x1dc(%rbp),%eax
mov    -0x1d4(%rbp),%ecx
shl    $0x10,%ecx
or     %ecx,%eax
or     $0xff000000,%eax
mov    %eax,0xc(%r15)
mov    0x68(%r12),%rdi
movzbl 0x4(%rbx),%esi
lea    -0x1c8(%rbp),%rax
mov    %rax,(%rsp)
mov    %r14,%rdx
mov    %r13,%rcx
lea    -0x1d0(%rbp),%r8
lea    -0x1cc(%rbp),%r9
callq  8370 <TIFFYCbCrtoRGB@plt>
mov    -0x1cc(%rbp),%eax
shl    $0x8,%eax
or     -0x1d0(%rbp),%eax
mov    -0x1c8(%rbp),%ecx
shl    $0x10,%ecx
or     %ecx,%eax
or     $0xff000000,%eax
mov    -0x30(%rbp),%r15
mov    %eax,(%r15)
mov    0x68(%r12),%rdi
movzbl 0x5(%rbx),%esi
lea    -0x1bc(%rbp),%rax
mov    %rax,(%rsp)
mov    %r14,%rdx
mov    %r13,%rcx
lea    -0x1c4(%rbp),%r8
lea    -0x1c0(%rbp),%r9
callq  8370 <TIFFYCbCrtoRGB@plt>
mov    -0x1c0(%rbp),%eax
shl    $0x8,%eax
or     -0x1c4(%rbp),%eax
mov    -0x1bc(%rbp),%ecx
shl    $0x10,%ecx
or     %ecx,%eax
or     $0xff000000,%eax
mov    %eax,0x4(%r15)
mov    0x68(%r12),%rdi
movzbl 0x6(%rbx),%esi
lea    -0x1b0(%rbp),%rax
mov    %rax,(%rsp)
mov    %r14,%rdx
mov    %r13,%rcx
lea    -0x1b8(%rbp),%r8
lea    -0x1b4(%rbp),%r9
callq  8370 <TIFFYCbCrtoRGB@plt>
mov    -0x1b4(%rbp),%eax
shl    $0x8,%eax
or     -0x1b8(%rbp),%eax
mov    -0x1b0(%rbp),%ecx
shl    $0x10,%ecx
or     %ecx,%eax
or     $0xff000000,%eax
mov    %eax,0x8(%r15)
mov    0x68(%r12),%rdi
movzbl 0x7(%rbx),%esi
lea    -0x1a4(%rbp),%rax
mov    %rax,(%rsp)
mov    %r14,%rdx
mov    %r13,%rcx
lea    -0x1ac(%rbp),%r8
lea    -0x1a8(%rbp),%r9
callq  8370 <TIFFYCbCrtoRGB@plt>
mov    -0x1a8(%rbp),%eax
shl    $0x8,%eax
or     -0x1ac(%rbp),%eax
mov    -0x1a4(%rbp),%ecx
shl    $0x10,%ecx
or     %ecx,%eax
or     $0xff000000,%eax
mov    %eax,0xc(%r15)
mov    0x68(%r12),%rdi
movzbl 0x8(%rbx),%esi
lea    -0x198(%rbp),%rax
mov    %rax,(%rsp)
mov    %r14,%rdx
mov    %r13,%rcx
lea    -0x1a0(%rbp),%r8
lea    -0x19c(%rbp),%r9
callq  8370 <TIFFYCbCrtoRGB@plt>
mov    -0x19c(%rbp),%eax
shl    $0x8,%eax
or     -0x1a0(%rbp),%eax
mov    -0x198(%rbp),%ecx
shl    $0x10,%ecx
or     %ecx,%eax
or     $0xff000000,%eax
mov    -0x20(%rbp),%r15
mov    %eax,(%r15)
mov    0x68(%r12),%rdi
movzbl 0x9(%rbx),%esi
lea    -0x18c(%rbp),%rax
mov    %rax,(%rsp)
mov    %r14,%rdx
mov    %r13,%rcx
lea    -0x194(%rbp),%r8
lea    -0x190(%rbp),%r9
callq  8370 <TIFFYCbCrtoRGB@plt>
mov    -0x190(%rbp),%eax
shl    $0x8,%eax
or     -0x194(%rbp),%eax
mov    -0x18c(%rbp),%ecx
shl    $0x10,%ecx
or     %ecx,%eax
or     $0xff000000,%eax
mov    %eax,0x4(%r15)
mov    0x68(%r12),%rdi
movzbl 0xa(%rbx),%esi
lea    -0x180(%rbp),%rax
mov    %rax,(%rsp)
mov    %r14,%rdx
mov    %r13,%rcx
lea    -0x188(%rbp),%r8
lea    -0x184(%rbp),%r9
callq  8370 <TIFFYCbCrtoRGB@plt>
mov    -0x184(%rbp),%eax
shl    $0x8,%eax
or     -0x188(%rbp),%eax
mov    -0x180(%rbp),%ecx
shl    $0x10,%ecx
or     %ecx,%eax
or     $0xff000000,%eax
mov    %eax,0x8(%r15)
mov    0x68(%r12),%rdi
movzbl 0xb(%rbx),%esi
lea    -0x174(%rbp),%rax
mov    %rax,(%rsp)
mov    %r14,%rdx
mov    %r13,%rcx
lea    -0x17c(%rbp),%r8
lea    -0x178(%rbp),%r9
callq  8370 <TIFFYCbCrtoRGB@plt>
mov    -0x178(%rbp),%eax
shl    $0x8,%eax
or     -0x17c(%rbp),%eax
mov    -0x174(%rbp),%ecx
shl    $0x10,%ecx
or     %ecx,%eax
or     $0xff000000,%eax
mov    %eax,0xc(%r15)
mov    0x68(%r12),%rdi
movzbl 0xc(%rbx),%esi
lea    -0x168(%rbp),%rax
mov    %rax,(%rsp)
mov    %r14,%rdx
mov    %r13,%rcx
lea    -0x170(%rbp),%r8
lea    -0x16c(%rbp),%r9
callq  8370 <TIFFYCbCrtoRGB@plt>
mov    -0x16c(%rbp),%eax
shl    $0x8,%eax
or     -0x170(%rbp),%eax
mov    -0x168(%rbp),%ecx
shl    $0x10,%ecx
or     %ecx,%eax
or     $0xff000000,%eax
mov    -0x18(%rbp),%r15
mov    %eax,(%r15)
mov    0x68(%r12),%rdi
movzbl 0xd(%rbx),%esi
lea    -0x15c(%rbp),%rax
mov    %rax,(%rsp)
mov    %r14,%rdx
mov    %r13,%rcx
lea    -0x164(%rbp),%r8
lea    -0x160(%rbp),%r9
callq  8370 <TIFFYCbCrtoRGB@plt>
mov    -0x160(%rbp),%eax
shl    $0x8,%eax
or     -0x164(%rbp),%eax
mov    -0x15c(%rbp),%ecx
shl    $0x10,%ecx
or     %ecx,%eax
or     $0xff000000,%eax
mov    %eax,0x4(%r15)
mov    0x68(%r12),%rdi
movzbl 0xe(%rbx),%esi
lea    -0x150(%rbp),%rax
mov    %rax,(%rsp)
mov    %r14,%rdx
mov    %r13,%rcx
lea    -0x158(%rbp),%r8
lea    -0x154(%rbp),%r9
callq  8370 <TIFFYCbCrtoRGB@plt>
mov    -0x154(%rbp),%eax
shl    $0x8,%eax
or     -0x158(%rbp),%eax
mov    -0x150(%rbp),%ecx
shl    $0x10,%ecx
or     %ecx,%eax
or     $0xff000000,%eax
mov    %eax,0x8(%r15)
mov    0x68(%r12),%rdi
movzbl 0xf(%rbx),%esi
lea    -0x144(%rbp),%rax
mov    %rax,(%rsp)
mov    %r13,%rcx
mov    %r14,%rdx
mov    %r15,%r14
lea    -0x14c(%rbp),%r8
lea    -0x148(%rbp),%r9
callq  8370 <TIFFYCbCrtoRGB@plt>
add    $0x10,%rsp
mov    -0x148(%rbp),%eax
shl    $0x8,%eax
or     -0x14c(%rbp),%eax
mov    -0x144(%rbp),%ecx
shl    $0x10,%ecx
or     %ecx,%eax
or     $0xff000000,%eax
mov    %eax,0xc(%r14)
mov    -0x80(%rbp),%rax
add    $0xffffffff,%eax
mov    %rax,-0x80(%rbp)
test   %eax,%eax
jne    2e71f <putcontig8bitYCbCr44tile+0x24f>
mov    -0x70(%rbp),%rax
lea    -0x4(%rax),%r9d
mov    -0x40(%rbp),%rax
lea    0x12(%rbx,%rax,1),%rbx
mov    -0x38(%rbp),%rcx
mov    -0x28(%rbp),%rax
lea    0x10(%rcx,%rax,4),%r15
mov    -0x30(%rbp),%rcx
lea    0x10(%rcx,%rax,4),%r13
mov    -0x20(%rbp),%rcx
lea    0x10(%rcx,%rax,4),%rcx
lea    0x10(%r14,%rax,4),%r10
lea    -0x1fc(%rbp),%rdx
lea    -0x200(%rbp),%r8
lea    -0x1f8(%rbp),%rax
mov    %r13,-0x30(%rbp)
mov    %rcx,-0x20(%rbp)
mov    %r10,-0x18(%rbp)
cmp    $0x3,%r9d
ja     2eee9 <putcontig8bitYCbCr44tile+0xa19>
mov    -0x48(%rbp),%rbx
mov    -0x50(%rbp),%r12
mov    -0x58(%rbp),%r13
mov    -0x60(%rbp),%r14
mov    -0x68(%rbp),%r15
leaveq 
retq   
cmp    $0x1,%r8d
je     2eefb <putcontig8bitYCbCr44tile+0xa2b>
cmp    $0x1,%r9d
jbe    2ef04 <putcontig8bitYCbCr44tile+0xa34>
cmp    $0x2,%r9d
je     2efd0 <putcontig8bitYCbCr44tile+0xb00>
cmp    $0x3,%r9d
je     2ef68 <putcontig8bitYCbCr44tile+0xa98>
jmpq   2ef0e <putcontig8bitYCbCr44tile+0xa3e>
cmp    $0x3,%r8d
jne    2ecfe <putcontig8bitYCbCr44tile+0x82e>
mov    -0x10(%rbp),%r15
jmpq   2f095 <putcontig8bitYCbCr44tile+0xbc5>
cmp    $0x1,%r9d
je     2ee4f <putcontig8bitYCbCr44tile+0x97f>
sub    $0x10,%rsp
mov    0x68(%r12),%rdi
movzbl 0xe(%rbx),%esi
lea    -0x108(%rbp),%rax
mov    %rax,(%rsp)
mov    %r14,%rdx
mov    %r13,%rcx
lea    -0x110(%rbp),%r8
lea    -0x10c(%rbp),%r9
callq  8370 <TIFFYCbCrtoRGB@plt>
add    $0x10,%rsp
mov    -0x10c(%rbp),%eax
shl    $0x8,%eax
or     -0x110(%rbp),%eax
mov    -0x108(%rbp),%ecx
shl    $0x10,%ecx
or     %ecx,%eax
or     $0xff000000,%eax
mov    -0x30(%rbp),%rcx
mov    %eax,0x8(%rcx)
sub    $0x10,%rsp
mov    0x68(%r12),%rdi
movzbl 0xa(%rbx),%esi
lea    -0xfc(%rbp),%rax
mov    %rax,(%rsp)
mov    %r14,%rdx
mov    %r13,%rcx
lea    -0x104(%rbp),%r8
lea    -0x100(%rbp),%r9
callq  8370 <TIFFYCbCrtoRGB@plt>
add    $0x10,%rsp
mov    -0x100(%rbp),%eax
shl    $0x8,%eax
or     -0x104(%rbp),%eax
mov    -0xfc(%rbp),%ecx
shl    $0x10,%ecx
or     %ecx,%eax
or     $0xff000000,%eax
mov    -0x20(%rbp),%rcx
mov    %eax,0x8(%rcx)
sub    $0x10,%rsp
mov    0x68(%r12),%rdi
movzbl 0x6(%rbx),%esi
lea    -0xf0(%rbp),%rax
mov    %rax,(%rsp)
mov    %r14,%rdx
mov    %r13,%rcx
lea    -0xf8(%rbp),%r8
lea    -0xf4(%rbp),%r9
callq  8370 <TIFFYCbCrtoRGB@plt>
add    $0x10,%rsp
mov    -0xf4(%rbp),%eax
shl    $0x8,%eax
or     -0xf8(%rbp),%eax
mov    -0xf0(%rbp),%ecx
shl    $0x10,%ecx
or     %ecx,%eax
or     $0xff000000,%eax
mov    -0x18(%rbp),%rcx
mov    %eax,0x8(%rcx)
mov    -0x80(%rbp),%r9
sub    $0x10,%rsp
mov    0x68(%r12),%rdi
movzbl 0x2(%rbx),%esi
lea    -0xe4(%rbp),%rax
mov    %rax,(%rsp)
mov    %r13,%rcx
mov    %r9,%r13
mov    %r14,%rdx
lea    -0xec(%rbp),%r8
lea    -0xe8(%rbp),%r9
callq  8370 <TIFFYCbCrtoRGB@plt>
add    $0x10,%rsp
mov    -0xe8(%rbp),%eax
shl    $0x8,%eax
or     -0xec(%rbp),%eax
mov    -0xe4(%rbp),%ecx
shl    $0x10,%ecx
or     %ecx,%eax
or     $0xff000000,%eax
mov    %eax,0x8(%r15)
mov    %r13,%r9
mov    -0x8(%rbp),%r13
lea    -0xd8(%rbp),%r11
lea    -0xc0(%rbp),%rdx
lea    -0xb4(%rbp),%rcx
cmp    $0x1,%r9d
jbe    2f0b8 <putcontig8bitYCbCr44tile+0xbe8>
cmp    $0x2,%r9d
je     2f178 <putcontig8bitYCbCr44tile+0xca8>
cmp    $0x3,%r9d
je     2f116 <putcontig8bitYCbCr44tile+0xc46>
jmpq   2f0c2 <putcontig8bitYCbCr44tile+0xbf2>
mov    %r9,-0x70(%rbp)
mov    %rdx,%r9
pushq  -0x78(%rbp)
popq   -0x80(%rbp)
jmpq   2e760 <putcontig8bitYCbCr44tile+0x290>
mov    -0x10(%rbp),%r15
jmpq   2f244 <putcontig8bitYCbCr44tile+0xd74>
cmp    $0x1,%r9d
je     2f034 <putcontig8bitYCbCr44tile+0xb64>
sub    $0x10,%rsp
mov    0x68(%r12),%rdi
movzbl 0xf(%rbx),%esi
mov    %r15,(%rsp)
mov    %r9,%r15
mov    %r14,%rdx
mov    %r13,%rcx
lea    -0x140(%rbp),%r8
lea    -0x13c(%rbp),%r9
callq  8370 <TIFFYCbCrtoRGB@plt>
add    $0x10,%rsp
mov    -0x13c(%rbp),%eax
shl    $0x8,%eax
or     -0x140(%rbp),%eax
mov    -0x138(%rbp),%ecx
shl    $0x10,%ecx
or     %ecx,%eax
or     $0xff000000,%eax
mov    -0x30(%rbp),%rcx
mov    %eax,0xc(%rcx)
mov    %r15,%r9
sub    $0x10,%rsp
mov    0x68(%r12),%rdi
movzbl 0xb(%rbx),%esi
lea    -0x12c(%rbp),%rax
mov    %rax,(%rsp)
mov    %r9,%r15
mov    %r14,%rdx
mov    %r13,%rcx
lea    -0x134(%rbp),%r8
lea    -0x130(%rbp),%r9
callq  8370 <TIFFYCbCrtoRGB@plt>
add    $0x10,%rsp
mov    -0x130(%rbp),%eax
shl    $0x8,%eax
or     -0x134(%rbp),%eax
mov    -0x12c(%rbp),%ecx
shl    $0x10,%ecx
or     %ecx,%eax
or     $0xff000000,%eax
mov    -0x20(%rbp),%rcx
mov    %eax,0xc(%rcx)
mov    %r15,%r9
lea    -0x120(%rbp),%rdi
sub    $0x10,%rsp
mov    0x68(%r12),%r10
movzbl 0x7(%rbx),%esi
mov    %rdi,(%rsp)
mov    %r10,%rdi
mov    %r9,%r15
mov    %r14,%rdx
mov    %r13,%rcx
lea    -0x128(%rbp),%r8
lea    -0x124(%rbp),%r9
callq  8370 <TIFFYCbCrtoRGB@plt>
add    $0x10,%rsp
mov    -0x124(%rbp),%eax
shl    $0x8,%eax
or     -0x128(%rbp),%eax
mov    -0x120(%rbp),%ecx
shl    $0x10,%ecx
or     %ecx,%eax
or     $0xff000000,%eax
mov    -0x18(%rbp),%rcx
mov    %eax,0xc(%rcx)
mov    %r15,%r9
lea    -0x114(%rbp),%rsi
sub    $0x10,%rsp
mov    0x68(%r12),%rdi
movzbl 0x3(%rbx),%r10d
mov    %rsi,(%rsp)
mov    %r10,%rsi
mov    %r9,%r15
mov    %r14,%rdx
mov    %r13,%rcx
lea    -0x11c(%rbp),%r8
lea    -0x118(%rbp),%r9
callq  8370 <TIFFYCbCrtoRGB@plt>
add    $0x10,%rsp
mov    -0x118(%rbp),%eax
shl    $0x8,%eax
or     -0x11c(%rbp),%eax
mov    -0x114(%rbp),%ecx
shl    $0x10,%ecx
or     %ecx,%eax
or     $0xff000000,%eax
mov    -0x10(%rbp),%rcx
mov    %eax,0xc(%rcx)
mov    %r15,%r9
mov    %rcx,%r15
cmp    $0x1,%r9d
jbe    2ed30 <putcontig8bitYCbCr44tile+0x860>
cmp    $0x2,%r9d
je     2edf0 <putcontig8bitYCbCr44tile+0x920>
cmp    $0x3,%r9d
je     2ed95 <putcontig8bitYCbCr44tile+0x8c5>
jmpq   2ed3a <putcontig8bitYCbCr44tile+0x86a>
cmp    $0x1,%r9d
je     2f1d7 <putcontig8bitYCbCr44tile+0xd07>
sub    $0x10,%rsp
mov    0x68(%r12),%rdi
movzbl 0xd(%rbx),%esi
mov    %r11,(%rsp)
mov    %r14,%rdx
mov    %r13,%rcx
lea    -0xe0(%rbp),%r8
lea    -0xdc(%rbp),%r9
callq  8370 <TIFFYCbCrtoRGB@plt>
add    $0x10,%rsp
mov    -0xdc(%rbp),%eax
shl    $0x8,%eax
or     -0xe0(%rbp),%eax
mov    -0xd8(%rbp),%ecx
shl    $0x10,%ecx
or     %ecx,%eax
or     $0xff000000,%eax
mov    -0x30(%rbp),%rcx
mov    %eax,0x4(%rcx)
sub    $0x10,%rsp
mov    0x68(%r12),%rdi
movzbl 0x9(%rbx),%esi
lea    -0xcc(%rbp),%rax
mov    %rax,(%rsp)
mov    %r14,%rdx
mov    %r13,%rcx
lea    -0xd4(%rbp),%r8
lea    -0xd0(%rbp),%r9
callq  8370 <TIFFYCbCrtoRGB@plt>
add    $0x10,%rsp
mov    -0xd0(%rbp),%eax
shl    $0x8,%eax
or     -0xd4(%rbp),%eax
mov    -0xcc(%rbp),%ecx
shl    $0x10,%ecx
or     %ecx,%eax
or     $0xff000000,%eax
mov    -0x20(%rbp),%rcx
mov    %eax,0x4(%rcx)
lea    -0xc0(%rbp),%rdx
sub    $0x10,%rsp
mov    0x68(%r12),%rdi
movzbl 0x5(%rbx),%esi
mov    %rdx,(%rsp)
mov    %r14,%rdx
mov    %r13,%rcx
lea    -0xc8(%rbp),%r8
lea    -0xc4(%rbp),%r9
callq  8370 <TIFFYCbCrtoRGB@plt>
add    $0x10,%rsp
mov    -0xc4(%rbp),%eax
shl    $0x8,%eax
or     -0xc8(%rbp),%eax
mov    -0xc0(%rbp),%ecx
shl    $0x10,%ecx
or     %ecx,%eax
or     $0xff000000,%eax
mov    -0x18(%rbp),%rcx
mov    %eax,0x4(%rcx)
mov    -0x80(%rbp),%r9
lea    -0xb4(%rbp),%rcx
sub    $0x10,%rsp
mov    0x68(%r12),%rdi
movzbl 0x1(%rbx),%esi
mov    %rcx,(%rsp)
mov    %r13,%rcx
mov    %r9,%r13
mov    %r14,%rdx
lea    -0xbc(%rbp),%r8
lea    -0xb8(%rbp),%r9
callq  8370 <TIFFYCbCrtoRGB@plt>
add    $0x10,%rsp
mov    -0xb8(%rbp),%eax
shl    $0x8,%eax
or     -0xbc(%rbp),%eax
mov    -0xb4(%rbp),%ecx
shl    $0x10,%ecx
or     %ecx,%eax
or     $0xff000000,%eax
mov    %eax,0x4(%r15)
mov    %r13,%r9
mov    -0x8(%rbp),%r13
mov    -0x78(%rbp),%r8
lea    -0x84(%rbp),%rax
lea    -0xa8(%rbp),%r10
cmp    $0x1,%r9d
jbe    2f25c <putcontig8bitYCbCr44tile+0xd8c>
cmp    $0x2,%r9d
je     2f313 <putcontig8bitYCbCr44tile+0xe43>
cmp    $0x3,%r9d
je     2f2b9 <putcontig8bitYCbCr44tile+0xde9>
jmp    2f266 <putcontig8bitYCbCr44tile+0xd96>
cmp    $0x1,%r9d
je     2f401 <putcontig8bitYCbCr44tile+0xf31>
sub    $0x10,%rsp
mov    0x68(%r12),%rdi
movzbl 0xc(%rbx),%esi
mov    %r10,(%rsp)
mov    %r14,%rdx
mov    %r13,%rcx
lea    -0xb0(%rbp),%r8
lea    -0xac(%rbp),%r9
callq  8370 <TIFFYCbCrtoRGB@plt>
add    $0x10,%rsp
mov    -0xac(%rbp),%eax
shl    $0x8,%eax
or     -0xb0(%rbp),%eax
mov    -0xa8(%rbp),%ecx
shl    $0x10,%ecx
or     %ecx,%eax
or     $0xff000000,%eax
mov    -0x30(%rbp),%rcx
mov    %eax,(%rcx)
sub    $0x10,%rsp
mov    0x68(%r12),%rdi
movzbl 0x8(%rbx),%esi
lea    -0x9c(%rbp),%rax
mov    %rax,(%rsp)
mov    %r14,%rdx
mov    %r13,%rcx
lea    -0xa4(%rbp),%r8
lea    -0xa0(%rbp),%r9
callq  8370 <TIFFYCbCrtoRGB@plt>
add    $0x10,%rsp
mov    -0xa0(%rbp),%eax
shl    $0x8,%eax
or     -0xa4(%rbp),%eax
mov    -0x9c(%rbp),%ecx
shl    $0x10,%ecx
or     %ecx,%eax
or     $0xff000000,%eax
mov    -0x20(%rbp),%rcx
mov    %eax,(%rcx)
sub    $0x10,%rsp
mov    0x68(%r12),%rdi
movzbl 0x4(%rbx),%esi
lea    -0x90(%rbp),%rax
mov    %rax,(%rsp)
mov    %r14,%rdx
mov    %r13,%rcx
lea    -0x98(%rbp),%r8
lea    -0x94(%rbp),%r9
callq  8370 <TIFFYCbCrtoRGB@plt>
add    $0x10,%rsp
mov    -0x94(%rbp),%eax
shl    $0x8,%eax
or     -0x98(%rbp),%eax
mov    -0x90(%rbp),%ecx
shl    $0x10,%ecx
or     %ecx,%eax
or     $0xff000000,%eax
mov    -0x18(%rbp),%r11
mov    %eax,(%r11)
mov    -0x80(%rbp),%r9
mov    -0x78(%rbp),%r8
lea    -0x84(%rbp),%rax
sub    $0x10,%rsp
mov    0x68(%r12),%rdi
movzbl (%rbx),%esi
mov    %rax,(%rsp)
mov    %r13,%rcx
mov    %r9,%r13
mov    %r14,%rdx
mov    %r11,%r14
mov    %r8,%r12
lea    -0x8c(%rbp),%r8
lea    -0x88(%rbp),%r9
callq  8370 <TIFFYCbCrtoRGB@plt>
add    $0x10,%rsp
mov    -0x88(%rbp),%eax
shl    $0x8,%eax
or     -0x8c(%rbp),%eax
mov    -0x84(%rbp),%ecx
shl    $0x10,%ecx
or     %ecx,%eax
or     $0xff000000,%eax
mov    %eax,(%r15)
cmp    $0x3,%r12d
jbe    2e5b8 <putcontig8bitYCbCr44tile+0xe8>
lea    0x10(%r15),%rax
mov    -0x30(%rbp),%rcx
add    $0x10,%rcx
mov    -0x20(%rbp),%rdx
add    $0x10,%rdx
lea    0x10(%r14),%rsi
lea    -0x4(%r12),%r8d
jmpq   2e5d6 <putcontig8bitYCbCr44tile+0x106>
mov    -0x18(%rbp),%r11
jmpq   2f37d <putcontig8bitYCbCr44tile+0xead>
nopw   0x0(%rax,%rax,1)

000000000002f410 <putcontig8bitYCbCr42tile>:
push   %rbp
mov    %rsp,%rbp
sub    $0x130,%rsp
mov    %r15,-0x58(%rbp)
mov    %r14,-0x50(%rbp)
mov    %r13,-0x48(%rbp)
mov    %r12,-0x40(%rbp)
mov    %rbx,-0x38(%rbp)
mov    %rdi,-0x28(%rbp)
mov    %r8,-0x60(%rbp)
mov    0x20(%rbp),%rbx
movslq 0x10(%rbp),%rcx
mov    %rcx,%rax
sar    %eax
shr    $0x1e,%eax
add    %ecx,%eax
sar    $0x2,%eax
lea    (%rax,%rax,4),%eax
add    %eax,%eax
movslq %eax,%rax
mov    %rax,-0x30(%rbp)
movslq 0x18(%rbp),%rcx
lea    (%r8,%rcx,2),%eax
movslq %eax,%rax
mov    %rax,-0x18(%rbp)
lea    -0x7c(%rbp),%r12
lea    -0x74(%rbp),%rdx
lea    -0xc8(%rbp),%r15
lea    -0xbc(%rbp),%r13
lea    -0x98(%rbp),%r14
lea    -0x8c(%rbp),%r10
lea    -0x80(%rbp),%r11
mov    %r8d,%eax
lea    (%rsi,%rax,4),%rax
lea    (%rax,%rcx,4),%rcx
mov    %r8,%rax
and    $0x3,%eax
test   %eax,%eax
je     2f4c5 <putcontig8bitYCbCr42tile+0xb5>
mov    %r8,%rax
mov    %r12,%r8
mov    %rdi,%r12
mov    %r13,%rdi
mov    %r9,%r13
mov    %r14,%r9
mov    %rsi,%r14
lea    -0xb0(%rbp),%rsi
jmpq   2f575 <putcontig8bitYCbCr42tile+0x165>
mov    %r9,%rax
and    $0x1,%eax
test   %eax,%eax
je     2f59c <putcontig8bitYCbCr42tile+0x18c>
mov    %r8,%rax
mov    %r12,%r8
mov    %rdi,%r12
mov    %r13,%rdi
mov    %r9,%r13
mov    %r14,%r9
mov    %rsi,%r14
lea    -0xb0(%rbp),%rsi
jmpq   2f575 <putcontig8bitYCbCr42tile+0x165>
mov    %r14d,%eax
lea    (%r15,%rax,4),%rcx
lea    (%r12,%rax,4),%rdx
xor    %eax,%eax
mov    %rcx,-0x10(%rbp)
mov    %rdx,-0x20(%rbp)
add    $0xa,%rbx
mov    -0x28(%rbp),%r12
lea    -0x98(%rbp),%r9
lea    -0xbc(%rbp),%rdi
lea    -0x8c(%rbp),%r10
lea    -0x80(%rbp),%r11
lea    -0xc8(%rbp),%r15
lea    -0x74(%rbp),%rdx
lea    -0x7c(%rbp),%r8
lea    -0xb0(%rbp),%rsi
mov    %rax,-0x68(%rbp)
test   %eax,%eax
jne    2f5c7 <putcontig8bitYCbCr42tile+0x1b7>
cmp    $0x2,%r13d
jbe    2f5ef <putcontig8bitYCbCr42tile+0x1df>
add    $0xfffffffe,%r13d
mov    -0x30(%rbp),%rax
add    %rax,%rbx
mov    -0x10(%rbp),%rcx
mov    -0x18(%rbp),%rax
lea    (%rcx,%rax,4),%r14
mov    -0x20(%rbp),%rcx
lea    (%rcx,%rax,4),%rcx
mov    -0x60(%rbp),%rax
mov    %r13,-0x70(%rbp)
mov    %r14,-0x10(%rbp)
mov    %rcx,-0x20(%rbp)
test   %r13d,%r13d
jne    2f540 <putcontig8bitYCbCr42tile+0x130>
mov    -0x38(%rbp),%rbx
mov    -0x40(%rbp),%r12
mov    -0x48(%rbp),%r13
mov    -0x50(%rbp),%r14
mov    -0x58(%rbp),%r15
leaveq 
retq   
shr    $0x2,%r8d
mov    %r8,-0x68(%rbp)
mov    %r9,%r10
mov    %rdi,%r12
mov    %rsi,%r15
lea    -0x130(%rbp),%r8
lea    -0x12c(%rbp),%r9
lea    -0x128(%rbp),%rax
jmpq   2f8fe <putcontig8bitYCbCr42tile+0x4ee>
movzbl 0x8(%rbx),%r14d
movzbl 0x9(%rbx),%ecx
mov    %rcx,-0x8(%rbp)
cmp    $0x1,%eax
jbe    2f922 <putcontig8bitYCbCr42tile+0x512>
cmp    $0x2,%eax
jne    2fb9a <putcontig8bitYCbCr42tile+0x78a>
mov    -0x10(%rbp),%r15
jmpq   2fac1 <putcontig8bitYCbCr42tile+0x6b1>
mov    -0x38(%rbp),%rbx
mov    -0x40(%rbp),%r12
mov    -0x48(%rbp),%r13
mov    -0x50(%rbp),%r14
mov    -0x58(%rbp),%r15
leaveq 
retq   
add    $0xa,%rbx
mov    -0x28(%rbp),%rax
lea    0x10(%rax),%r15
lea    0x10(%r13),%rax
mov    %rax,-0x20(%rbp)
lea    -0x12c(%rbp),%r9
lea    -0x130(%rbp),%r8
lea    -0x128(%rbp),%rax
mov    %r15,-0x28(%rbp)
sub    $0x10,%rsp
mov    0x68(%r12),%rdi
movzbl (%rbx),%esi
movzbl 0x8(%rbx),%r13d
movzbl 0x9(%rbx),%r14d
mov    %rax,(%rsp)
mov    %r13,%rdx
mov    %r14,%rcx
callq  8370 <TIFFYCbCrtoRGB@plt>
mov    -0x12c(%rbp),%eax
shl    $0x8,%eax
or     -0x130(%rbp),%eax
mov    -0x128(%rbp),%ecx
shl    $0x10,%ecx
or     %ecx,%eax
or     $0xff000000,%eax
mov    %eax,(%r15)
mov    0x68(%r12),%rdi
movzbl 0x1(%rbx),%esi
lea    -0x11c(%rbp),%rax
mov    %rax,(%rsp)
mov    %r13,%rdx
mov    %r14,%rcx
lea    -0x124(%rbp),%r8
lea    -0x120(%rbp),%r9
callq  8370 <TIFFYCbCrtoRGB@plt>
mov    -0x120(%rbp),%eax
shl    $0x8,%eax
or     -0x124(%rbp),%eax
mov    -0x11c(%rbp),%ecx
shl    $0x10,%ecx
or     %ecx,%eax
or     $0xff000000,%eax
mov    %eax,0x4(%r15)
mov    0x68(%r12),%rdi
movzbl 0x2(%rbx),%esi
lea    -0x110(%rbp),%rax
mov    %rax,(%rsp)
mov    %r13,%rdx
mov    %r14,%rcx
lea    -0x118(%rbp),%r8
lea    -0x114(%rbp),%r9
callq  8370 <TIFFYCbCrtoRGB@plt>
mov    -0x114(%rbp),%eax
shl    $0x8,%eax
or     -0x118(%rbp),%eax
mov    -0x110(%rbp),%ecx
shl    $0x10,%ecx
or     %ecx,%eax
or     $0xff000000,%eax
mov    %eax,0x8(%r15)
mov    0x68(%r12),%rdi
movzbl 0x3(%rbx),%esi
lea    -0x104(%rbp),%rax
mov    %rax,(%rsp)
mov    %r13,%rdx
mov    %r14,%rcx
lea    -0x10c(%rbp),%r8
lea    -0x108(%rbp),%r9
callq  8370 <TIFFYCbCrtoRGB@plt>
mov    -0x108(%rbp),%eax
shl    $0x8,%eax
or     -0x10c(%rbp),%eax
mov    -0x104(%rbp),%ecx
shl    $0x10,%ecx
or     %ecx,%eax
or     $0xff000000,%eax
mov    %eax,0xc(%r15)
mov    0x68(%r12),%rdi
movzbl 0x4(%rbx),%esi
lea    -0xf8(%rbp),%rax
mov    %rax,(%rsp)
mov    %r13,%rdx
mov    %r14,%rcx
lea    -0x100(%rbp),%r8
lea    -0xfc(%rbp),%r9
callq  8370 <TIFFYCbCrtoRGB@plt>
mov    -0xfc(%rbp),%eax
shl    $0x8,%eax
or     -0x100(%rbp),%eax
mov    -0xf8(%rbp),%ecx
shl    $0x10,%ecx
or     %ecx,%eax
or     $0xff000000,%eax
mov    -0x20(%rbp),%r15
mov    %eax,(%r15)
mov    0x68(%r12),%rdi
movzbl 0x5(%rbx),%esi
lea    -0xec(%rbp),%rax
mov    %rax,(%rsp)
mov    %r13,%rdx
mov    %r14,%rcx
lea    -0xf4(%rbp),%r8
lea    -0xf0(%rbp),%r9
callq  8370 <TIFFYCbCrtoRGB@plt>
mov    -0xf0(%rbp),%eax
shl    $0x8,%eax
or     -0xf4(%rbp),%eax
mov    -0xec(%rbp),%ecx
shl    $0x10,%ecx
or     %ecx,%eax
or     $0xff000000,%eax
mov    %eax,0x4(%r15)
mov    0x68(%r12),%rdi
movzbl 0x6(%rbx),%esi
lea    -0xe0(%rbp),%rax
mov    %rax,(%rsp)
mov    %r13,%rdx
mov    %r14,%rcx
lea    -0xe8(%rbp),%r8
lea    -0xe4(%rbp),%r9
callq  8370 <TIFFYCbCrtoRGB@plt>
mov    -0xe4(%rbp),%eax
shl    $0x8,%eax
or     -0xe8(%rbp),%eax
mov    -0xe0(%rbp),%ecx
shl    $0x10,%ecx
or     %ecx,%eax
or     $0xff000000,%eax
mov    %eax,0x8(%r15)
mov    0x68(%r12),%rdi
movzbl 0x7(%rbx),%esi
lea    -0xd4(%rbp),%rax
mov    %rax,(%rsp)
mov    %r14,%rcx
mov    %r13,%rdx
mov    %r15,%r13
lea    -0xdc(%rbp),%r8
lea    -0xd8(%rbp),%r9
callq  8370 <TIFFYCbCrtoRGB@plt>
add    $0x10,%rsp
mov    -0xd8(%rbp),%eax
shl    $0x8,%eax
or     -0xdc(%rbp),%eax
mov    -0xd4(%rbp),%ecx
shl    $0x10,%ecx
or     %ecx,%eax
or     $0xff000000,%eax
mov    %eax,0xc(%r13)
mov    -0x70(%rbp),%rax
add    $0xffffffff,%eax
mov    %rax,-0x70(%rbp)
test   %eax,%eax
jne    2f605 <putcontig8bitYCbCr42tile+0x1f5>
mov    -0x60(%rbp),%rax
lea    -0x2(%rax),%r10d
mov    -0x30(%rbp),%rax
lea    0xa(%rbx,%rax,1),%rbx
mov    -0x28(%rbp),%rcx
mov    -0x18(%rbp),%rax
lea    0x10(%rcx,%rax,4),%r15
lea    0x10(%r13,%rax,4),%rcx
lea    -0x12c(%rbp),%r9
lea    -0x130(%rbp),%r8
lea    -0x128(%rbp),%rax
mov    %rcx,-0x20(%rbp)
cmp    $0x1,%r10d
ja     2fbac <putcontig8bitYCbCr42tile+0x79c>
mov    -0x38(%rbp),%rbx
mov    -0x40(%rbp),%r12
mov    -0x48(%rbp),%r13
mov    -0x50(%rbp),%r14
mov    -0x58(%rbp),%r15
leaveq 
retq   
cmp    $0x1,%eax
je     2fbbb <putcontig8bitYCbCr42tile+0x7ab>
cmp    $0x1,%r13d
je     2f98f <putcontig8bitYCbCr42tile+0x57f>
sub    $0x10,%rsp
mov    0x68(%r12),%rdi
movzbl 0x7(%rbx),%esi
mov    %r15,(%rsp)
mov    %r14,%rdx
mov    %rcx,%r15
lea    -0xd0(%rbp),%r8
lea    -0xcc(%rbp),%r9
callq  8370 <TIFFYCbCrtoRGB@plt>
add    $0x10,%rsp
mov    -0xcc(%rbp),%eax
shl    $0x8,%eax
or     -0xd0(%rbp),%eax
mov    -0xc8(%rbp),%ecx
shl    $0x10,%ecx
or     %ecx,%eax
or     $0xff000000,%eax
mov    -0x20(%rbp),%rcx
mov    %eax,0xc(%rcx)
mov    %r15,%rcx
lea    -0xbc(%rbp),%rdi
sub    $0x10,%rsp
mov    0x68(%r12),%rax
movzbl 0x3(%rbx),%esi
mov    %rdi,(%rsp)
mov    %rax,%rdi
mov    %r14,%rdx
mov    %rcx,%r15
lea    -0xc4(%rbp),%r8
lea    -0xc0(%rbp),%r9
callq  8370 <TIFFYCbCrtoRGB@plt>
add    $0x10,%rsp
mov    -0xc0(%rbp),%eax
shl    $0x8,%eax
or     -0xc4(%rbp),%eax
mov    -0xbc(%rbp),%ecx
shl    $0x10,%ecx
or     %ecx,%eax
or     $0xff000000,%eax
mov    -0x10(%rbp),%rcx
mov    %eax,0xc(%rcx)
mov    %r15,%rax
mov    %rcx,%r15
mov    %rax,%rcx
lea    -0xb0(%rbp),%rsi
cmp    $0x1,%r13d
je     2fa5a <putcontig8bitYCbCr42tile+0x64a>
sub    $0x10,%rsp
mov    0x68(%r12),%rdi
movzbl 0x6(%rbx),%eax
mov    %rsi,(%rsp)
mov    %rax,%rsi
mov    %r14,%rdx
mov    %rcx,%r13
lea    -0xb8(%rbp),%r8
lea    -0xb4(%rbp),%r9
callq  8370 <TIFFYCbCrtoRGB@plt>
add    $0x10,%rsp
mov    -0xb4(%rbp),%eax
shl    $0x8,%eax
or     -0xb8(%rbp),%eax
mov    -0xb0(%rbp),%ecx
shl    $0x10,%ecx
or     %ecx,%eax
or     $0xff000000,%eax
mov    -0x20(%rbp),%rcx
mov    %eax,0x8(%rcx)
mov    %r13,%rcx
mov    -0x70(%rbp),%r13
sub    $0x10,%rsp
mov    0x68(%r12),%rdi
movzbl 0x2(%rbx),%esi
lea    -0xa4(%rbp),%rax
mov    %rax,(%rsp)
mov    %r14,%rdx
lea    -0xac(%rbp),%r8
lea    -0xa8(%rbp),%r9
callq  8370 <TIFFYCbCrtoRGB@plt>
add    $0x10,%rsp
mov    -0xa8(%rbp),%eax
shl    $0x8,%eax
or     -0xac(%rbp),%eax
mov    -0xa4(%rbp),%ecx
shl    $0x10,%ecx
or     %ecx,%eax
or     $0xff000000,%eax
mov    %eax,0x8(%r15)
mov    -0x8(%rbp),%rcx
lea    -0x98(%rbp),%r9
lea    -0x8c(%rbp),%r10
cmp    $0x1,%r13d
je     2fb29 <putcontig8bitYCbCr42tile+0x719>
sub    $0x10,%rsp
mov    0x68(%r12),%rdi
movzbl 0x5(%rbx),%esi
mov    %r9,(%rsp)
mov    %r14,%rdx
mov    %rcx,%r13
lea    -0xa0(%rbp),%r8
lea    -0x9c(%rbp),%r9
callq  8370 <TIFFYCbCrtoRGB@plt>
add    $0x10,%rsp
mov    -0x9c(%rbp),%eax
shl    $0x8,%eax
or     -0xa0(%rbp),%eax
mov    -0x98(%rbp),%ecx
shl    $0x10,%ecx
or     %ecx,%eax
or     $0xff000000,%eax
mov    -0x20(%rbp),%rcx
mov    %eax,0x4(%rcx)
mov    %r13,%rcx
mov    -0x70(%rbp),%r13
lea    -0x8c(%rbp),%r10
sub    $0x10,%rsp
mov    0x68(%r12),%rdi
movzbl 0x1(%rbx),%esi
mov    %r10,(%rsp)
mov    %r14,%rdx
lea    -0x94(%rbp),%r8
lea    -0x90(%rbp),%r9
callq  8370 <TIFFYCbCrtoRGB@plt>
add    $0x10,%rsp
mov    -0x90(%rbp),%eax
shl    $0x8,%eax
or     -0x94(%rbp),%eax
mov    -0x8c(%rbp),%ecx
shl    $0x10,%ecx
or     %ecx,%eax
or     $0xff000000,%eax
mov    %eax,0x4(%r15)
mov    -0x8(%rbp),%rcx
mov    -0x68(%rbp),%rax
lea    -0x80(%rbp),%r11
lea    -0x74(%rbp),%rdx
lea    -0x7c(%rbp),%r8
cmp    $0x1,%r13d
jne    2fbc1 <putcontig8bitYCbCr42tile+0x7b1>
mov    -0x20(%rbp),%r10
jmpq   2fc25 <putcontig8bitYCbCr42tile+0x815>
cmp    $0x3,%eax
jne    2f92b <putcontig8bitYCbCr42tile+0x51b>
mov    -0x10(%rbp),%r15
jmpq   2f9f6 <putcontig8bitYCbCr42tile+0x5e6>
mov    %r10,-0x60(%rbp)
pushq  -0x68(%rbp)
popq   -0x70(%rbp)
jmpq   2f62e <putcontig8bitYCbCr42tile+0x21e>
mov    -0x10(%rbp),%r15
jmp    2fb8b <putcontig8bitYCbCr42tile+0x77b>
sub    $0x10,%rsp
mov    0x68(%r12),%rdi
movzbl 0x4(%rbx),%esi
mov    %r11,(%rsp)
mov    %r14,%rdx
mov    %rcx,%r13
lea    -0x88(%rbp),%r8
lea    -0x84(%rbp),%r9
callq  8370 <TIFFYCbCrtoRGB@plt>
add    $0x10,%rsp
mov    -0x84(%rbp),%eax
shl    $0x8,%eax
or     -0x88(%rbp),%eax
mov    -0x80(%rbp),%ecx
shl    $0x10,%ecx
or     %ecx,%eax
or     $0xff000000,%eax
mov    -0x20(%rbp),%r10
mov    %eax,(%r10)
mov    %r13,%rcx
mov    -0x70(%rbp),%r13
mov    -0x68(%rbp),%rax
lea    -0x74(%rbp),%rdx
lea    -0x7c(%rbp),%r8
sub    $0x10,%rsp
mov    0x68(%r12),%rdi
movzbl (%rbx),%esi
mov    %rdx,(%rsp)
mov    %r14,%rdx
mov    %rax,%r14
mov    %r10,%r12
lea    -0x78(%rbp),%r9
callq  8370 <TIFFYCbCrtoRGB@plt>
add    $0x10,%rsp
mov    -0x78(%rbp),%eax
shl    $0x8,%eax
or     -0x7c(%rbp),%eax
mov    -0x74(%rbp),%ecx
shl    $0x10,%ecx
or     %ecx,%eax
or     $0xff000000,%eax
mov    %eax,(%r15)
cmp    $0x3,%r14d
jbe    2f4f4 <putcontig8bitYCbCr42tile+0xe4>
lea    0x10(%r15),%rcx
lea    0x10(%r12),%rdx
lea    -0x4(%r14),%eax
jmpq   2f501 <putcontig8bitYCbCr42tile+0xf1>

000000000002fc80 <putcontig8bitYCbCr41tile>:
push   %rbp
mov    %rsp,%rbp
sub    $0xc0,%rsp
mov    %r15,-0x48(%rbp)
mov    %r14,-0x40(%rbp)
mov    %r13,-0x38(%rbp)
mov    %r12,-0x30(%rbp)
mov    %rbx,-0x28(%rbp)
mov    %rdi,-0x18(%rbp)
mov    %r8,%rcx
and    $0x3,%ecx
mov    %rcx,-0x58(%rbp)
mov    0x20(%rbp),%rbx
movslq 0x10(%rbp),%rdx
mov    %rdx,%rax
sar    %eax
shr    $0x1e,%eax
add    %edx,%eax
sar    $0x2,%eax
lea    (%rax,%rax,2),%eax
add    %eax,%eax
movslq %eax,%r14
mov    %r14,-0x20(%rbp)
movslq 0x18(%rbp),%rax
mov    %rax,-0x10(%rbp)
mov    %ecx,%r15d
mov    %r15,-0x8(%rbp)
mov    %r8,%r11
shr    $0x2,%r11d
mov    %r11,-0x50(%rbp)
mov    %rsi,%r12
mov    %rax,%rsi
mov    %r9,%rax
mov    %rdi,%r13
lea    -0x6c(%rbp),%r10
lea    -0xbc(%rbp),%r8
lea    -0xb8(%rbp),%r9
lea    -0xb4(%rbp),%rdx
mov    %r11,%rdi
jmpq   2fe9b <putcontig8bitYCbCr41tile+0x21b>
sub    $0x10,%rsp
mov    0x68(%r13),%r10
movzbl (%rbx),%esi
movzbl 0x4(%rbx),%r14d
movzbl 0x5(%rbx),%r15d
mov    %rdx,(%rsp)
mov    %r14,%rdx
mov    %r15,%rcx
mov    %rdi,-0x68(%rbp)
mov    %rax,-0x60(%rbp)
mov    %r10,%rdi
callq  8370 <TIFFYCbCrtoRGB@plt>
mov    -0xb8(%rbp),%eax
shl    $0x8,%eax
or     -0xbc(%rbp),%eax
mov    -0xb4(%rbp),%ecx
shl    $0x10,%ecx
or     %ecx,%eax
or     $0xff000000,%eax
mov    %eax,(%r12)
mov    0x68(%r13),%rdi
movzbl 0x1(%rbx),%esi
lea    -0xa8(%rbp),%rax
mov    %rax,(%rsp)
mov    %r14,%rdx
mov    %r15,%rcx
lea    -0xb0(%rbp),%r8
lea    -0xac(%rbp),%r9
callq  8370 <TIFFYCbCrtoRGB@plt>
mov    -0xac(%rbp),%eax
shl    $0x8,%eax
or     -0xb0(%rbp),%eax
mov    -0xa8(%rbp),%ecx
shl    $0x10,%ecx
or     %ecx,%eax
or     $0xff000000,%eax
mov    %eax,0x4(%r12)
mov    0x68(%r13),%rdi
movzbl 0x2(%rbx),%esi
lea    -0x9c(%rbp),%rax
mov    %rax,(%rsp)
mov    %r14,%rdx
mov    %r15,%rcx
lea    -0xa4(%rbp),%r8
lea    -0xa0(%rbp),%r9
callq  8370 <TIFFYCbCrtoRGB@plt>
mov    -0xa0(%rbp),%eax
shl    $0x8,%eax
or     -0xa4(%rbp),%eax
mov    -0x9c(%rbp),%ecx
shl    $0x10,%ecx
or     %ecx,%eax
or     $0xff000000,%eax
mov    %eax,0x8(%r12)
mov    0x68(%r13),%rdi
movzbl 0x3(%rbx),%esi
lea    -0x90(%rbp),%rax
mov    %rax,(%rsp)
mov    %r15,%rcx
mov    %r14,%rdx
lea    -0x98(%rbp),%r8
lea    -0x94(%rbp),%r9
callq  8370 <TIFFYCbCrtoRGB@plt>
add    $0x10,%rsp
mov    -0x94(%rbp),%eax
shl    $0x8,%eax
or     -0x98(%rbp),%eax
mov    -0x90(%rbp),%ecx
shl    $0x10,%ecx
or     %ecx,%eax
or     $0xff000000,%eax
mov    %eax,0xc(%r12)
add    $0x6,%rbx
add    $0x10,%r12
mov    -0x68(%rbp),%rax
lea    -0x1(%rax),%edi
mov    -0x58(%rbp),%rcx
mov    -0x60(%rbp),%rax
lea    -0xb8(%rbp),%r9
lea    -0xbc(%rbp),%r8
mov    -0x20(%rbp),%r14
lea    -0xb4(%rbp),%rdx
mov    -0x10(%rbp),%rsi
mov    -0x50(%rbp),%r11
mov    -0x8(%rbp),%r15
lea    -0x6c(%rbp),%r10
test   %edi,%edi
jne    2fd15 <putcontig8bitYCbCr41tile+0x95>
test   %ecx,%ecx
je     2ff9d <putcontig8bitYCbCr41tile+0x31d>
cmp    $0x1,%ecx
movzbl 0x4(%rbx),%edi
movzbl 0x5(%rbx),%r9d
jbe    2ffbe <putcontig8bitYCbCr41tile+0x33e>
cmp    $0x2,%ecx
jne    2ffce <putcontig8bitYCbCr41tile+0x34e>
mov    %rdi,%r14
mov    %r9,%r15
sub    $0x10,%rsp
mov    0x68(%r13),%rdi
movzbl 0x1(%rbx),%esi
lea    -0x78(%rbp),%rcx
mov    %rcx,(%rsp)
mov    %r14,%rdx
mov    %r15,%rcx
lea    -0x80(%rbp),%r8
lea    -0x7c(%rbp),%r9
mov    %rax,-0x68(%rbp)
callq  8370 <TIFFYCbCrtoRGB@plt>
add    $0x10,%rsp
mov    -0x7c(%rbp),%eax
shl    $0x8,%eax
or     -0x80(%rbp),%eax
mov    -0x78(%rbp),%ecx
shl    $0x10,%ecx
or     %ecx,%eax
or     $0xff000000,%eax
mov    %eax,0x4(%r12)
mov    %r15,%rcx
mov    %r14,%rdx
mov    -0x68(%rbp),%rax
mov    -0x20(%rbp),%r14
mov    -0x8(%rbp),%r15
lea    -0x6c(%rbp),%r10
sub    $0x10,%rsp
mov    0x68(%r13),%rdi
movzbl (%rbx),%esi
mov    %r10,(%rsp)
mov    %rax,%r13
lea    -0x74(%rbp),%r8
lea    -0x70(%rbp),%r9
callq  8370 <TIFFYCbCrtoRGB@plt>
add    $0x10,%rsp
mov    -0x70(%rbp),%eax
shl    $0x8,%eax
or     -0x74(%rbp),%eax
mov    -0x6c(%rbp),%ecx
shl    $0x10,%ecx
or     %ecx,%eax
or     $0xff000000,%eax
mov    %eax,(%r12)
mov    %r13,%rax
mov    -0x18(%rbp),%r13
mov    -0x58(%rbp),%rcx
lea    -0xbc(%rbp),%r8
lea    -0xb4(%rbp),%rdx
mov    -0x10(%rbp),%rsi
mov    -0x50(%rbp),%r11
lea    -0x6c(%rbp),%r10
add    $0x6,%rbx
lea    (%r12,%r15,4),%r12
lea    -0xb8(%rbp),%r9
add    $0xffffffff,%eax
test   %eax,%eax
jne    30044 <putcontig8bitYCbCr41tile+0x3c4>
mov    -0x28(%rbp),%rbx
mov    -0x30(%rbp),%r12
mov    -0x38(%rbp),%r13
mov    -0x40(%rbp),%r14
mov    -0x48(%rbp),%r15
leaveq 
retq   
cmp    $0x1,%ecx
jne    2ff8e <putcontig8bitYCbCr41tile+0x30e>
mov    %r9,%rcx
mov    %rdi,%rdx
jmpq   2ff2c <putcontig8bitYCbCr41tile+0x2ac>
cmp    $0x3,%ecx
jne    2ff8e <putcontig8bitYCbCr41tile+0x30e>
sub    $0x10,%rsp
mov    0x68(%r13),%r11
movzbl 0x2(%rbx),%esi
lea    -0x84(%rbp),%rcx
mov    %rcx,(%rsp)
mov    %rdi,%rdx
mov    %r9,%rcx
lea    -0x8c(%rbp),%r8
lea    -0x88(%rbp),%r10
mov    %rax,-0x68(%rbp)
mov    %rdi,%r14
mov    %r11,%rdi
mov    %r9,%r15
mov    %r10,%r9
callq  8370 <TIFFYCbCrtoRGB@plt>
add    $0x10,%rsp
mov    -0x88(%rbp),%eax
shl    $0x8,%eax
or     -0x8c(%rbp),%eax
mov    -0x84(%rbp),%ecx
shl    $0x10,%ecx
or     %ecx,%eax
or     $0xff000000,%eax
mov    %eax,0x8(%r12)
mov    -0x68(%rbp),%rax
jmpq   2fecc <putcontig8bitYCbCr41tile+0x24c>
add    %r14,%rbx
lea    (%r12,%rsi,4),%r12
mov    %r11,%rdi
jmpq   2fe9b <putcontig8bitYCbCr41tile+0x21b>
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

0000000000030060 <putcontig8bitYCbCr22tile>:
push   %rbp
mov    %rsp,%rbp
sub    $0xd0,%rsp
mov    %r15,-0x40(%rbp)
mov    %r14,-0x38(%rbp)
mov    %r13,-0x30(%rbp)
mov    %r12,-0x28(%rbp)
mov    %rbx,-0x20(%rbp)
mov    %r8,-0x50(%rbp)
mov    0x20(%rbp),%r12
movslq 0x10(%rbp),%rcx
mov    %rcx,%rax
shr    $0x1f,%eax
add    %ecx,%eax
sar    %eax
lea    (%rax,%rax,2),%eax
add    %eax,%eax
movslq %eax,%rax
mov    %rax,-0x18(%rbp)
movslq 0x18(%rbp),%rdx
lea    (%r8,%rdx,2),%eax
movslq %eax,%rax
mov    %rax,-0x10(%rbp)
lea    -0xc4(%rbp),%rbx
lea    -0xc0(%rbp),%r10
lea    -0xbc(%rbp),%rcx
mov    %r8d,%eax
lea    (%rsi,%rax,4),%rax
lea    (%rax,%rdx,4),%rax
mov    %r9,%r11
mov    %r10,%r9
mov    %r8,%r10
mov    %rbx,%r8
mov    %rsi,%rbx
mov    %rdi,%r13
jmpq   30353 <putcontig8bitYCbCr22tile+0x2f3>
mov    0x68(%r13),%rdi
movzbl (%r12),%esi
movzbl 0x4(%r12),%r14d
mov    %r10,-0x58(%rbp)
movzbl 0x5(%r12),%r15d
mov    %rcx,(%rsp)
mov    %r14,%rdx
mov    %r15,%rcx
mov    %rax,-0x8(%rbp)
callq  8370 <TIFFYCbCrtoRGB@plt>
mov    -0xc0(%rbp),%eax
shl    $0x8,%eax
or     -0xc4(%rbp),%eax
mov    -0xbc(%rbp),%ecx
shl    $0x10,%ecx
or     %ecx,%eax
or     $0xff000000,%eax
mov    %eax,(%rbx)
mov    0x68(%r13),%rdi
movzbl 0x1(%r12),%esi
lea    -0xb0(%rbp),%rax
mov    %rax,(%rsp)
mov    %r14,%rdx
mov    %r15,%rcx
lea    -0xb8(%rbp),%r8
lea    -0xb4(%rbp),%r9
callq  8370 <TIFFYCbCrtoRGB@plt>
mov    -0xb4(%rbp),%eax
shl    $0x8,%eax
or     -0xb8(%rbp),%eax
mov    -0xb0(%rbp),%ecx
shl    $0x10,%ecx
or     %ecx,%eax
or     $0xff000000,%eax
mov    %eax,0x4(%rbx)
mov    0x68(%r13),%rdi
movzbl 0x2(%r12),%esi
lea    -0xa4(%rbp),%rax
mov    %rax,(%rsp)
mov    %r14,%rdx
mov    %r15,%rcx
lea    -0xac(%rbp),%r8
lea    -0xa8(%rbp),%r9
callq  8370 <TIFFYCbCrtoRGB@plt>
mov    -0xa8(%rbp),%eax
shl    $0x8,%eax
or     -0xac(%rbp),%eax
mov    -0xa4(%rbp),%ecx
shl    $0x10,%ecx
or     %ecx,%eax
or     $0xff000000,%eax
mov    -0x8(%rbp),%rcx
mov    %eax,(%rcx)
mov    0x68(%r13),%rdi
movzbl 0x3(%r12),%esi
lea    -0x98(%rbp),%rax
mov    %rax,(%rsp)
mov    %r14,%rdx
mov    %rcx,%r14
mov    %r15,%rcx
lea    -0xa0(%rbp),%r8
lea    -0x9c(%rbp),%r9
callq  8370 <TIFFYCbCrtoRGB@plt>
mov    -0x9c(%rbp),%eax
shl    $0x8,%eax
or     -0xa0(%rbp),%eax
mov    -0x98(%rbp),%ecx
shl    $0x10,%ecx
or     %ecx,%eax
or     $0xff000000,%eax
mov    %eax,0x4(%r14)
add    $0x6,%r12
add    $0x8,%rbx
lea    0x8(%r14),%rax
mov    -0x58(%rbp),%rcx
lea    -0x2(%rcx),%r10d
lea    -0xc0(%rbp),%r9
lea    -0xc4(%rbp),%r8
lea    -0xbc(%rbp),%rcx
cmp    $0x1,%r10d
ja     300e7 <putcontig8bitYCbCr22tile+0x87>
cmp    $0x1,%r10d
jne    30334 <putcontig8bitYCbCr22tile+0x2d4>
mov    0x68(%r13),%rdi
movzbl (%r12),%esi
movzbl 0x4(%r12),%r14d
movzbl 0x5(%r12),%r15d
lea    -0x8c(%rbp),%rcx
mov    %rcx,(%rsp)
mov    %r14,%rdx
mov    %r15,%rcx
lea    -0x94(%rbp),%r8
lea    -0x90(%rbp),%r9
mov    %rax,-0x58(%rbp)
callq  8370 <TIFFYCbCrtoRGB@plt>
mov    -0x90(%rbp),%eax
shl    $0x8,%eax
or     -0x94(%rbp),%eax
mov    -0x8c(%rbp),%ecx
shl    $0x10,%ecx
or     %ecx,%eax
or     $0xff000000,%eax
mov    %eax,(%rbx)
mov    0x68(%r13),%rdi
movzbl 0x2(%r12),%esi
lea    -0x80(%rbp),%rax
mov    %rax,(%rsp)
mov    %r15,%rcx
mov    %r14,%rdx
lea    -0x88(%rbp),%r8
lea    -0x84(%rbp),%r9
callq  8370 <TIFFYCbCrtoRGB@plt>
mov    -0x84(%rbp),%eax
shl    $0x8,%eax
or     -0x88(%rbp),%eax
mov    -0x80(%rbp),%ecx
shl    $0x10,%ecx
or     %ecx,%eax
or     $0xff000000,%eax
mov    -0x58(%rbp),%rcx
mov    %eax,(%rcx)
add    $0x6,%r12
add    $0x4,%rbx
lea    0x4(%rcx),%rax
lea    -0xc0(%rbp),%r9
lea    -0xc4(%rbp),%r8
lea    -0xbc(%rbp),%rcx
mov    -0x18(%rbp),%rdx
add    %rdx,%r12
mov    -0x10(%rbp),%rsi
lea    (%rbx,%rsi,4),%rbx
mov    -0x48(%rbp),%rdx
lea    -0x2(%rdx),%r11d
lea    (%rax,%rsi,4),%rax
mov    -0x50(%rbp),%r10
cmp    $0x1,%r11d
ja     30375 <putcontig8bitYCbCr22tile+0x315>
cmp    $0x1,%r11d
je     3037e <putcontig8bitYCbCr22tile+0x31e>
mov    -0x20(%rbp),%rbx
mov    -0x28(%rbp),%r12
mov    -0x30(%rbp),%r13
mov    -0x38(%rbp),%r14
mov    -0x40(%rbp),%r15
leaveq 
retq   
mov    %r11,-0x48(%rbp)
jmpq   30254 <putcontig8bitYCbCr22tile+0x1f4>
lea    -0x7c(%rbp),%r8
lea    -0x78(%rbp),%r9
lea    -0x74(%rbp),%rax
jmpq   30429 <putcontig8bitYCbCr22tile+0x3c9>
mov    0x68(%r13),%rdi
movzbl (%r12),%esi
movzbl 0x4(%r12),%r14d
movzbl 0x5(%r12),%r15d
mov    %rax,(%rsp)
mov    %r14,%rdx
mov    %r15,%rcx
mov    %r10,-0x58(%rbp)
callq  8370 <TIFFYCbCrtoRGB@plt>
mov    -0x78(%rbp),%eax
shl    $0x8,%eax
or     -0x7c(%rbp),%eax
mov    -0x74(%rbp),%ecx
shl    $0x10,%ecx
or     %ecx,%eax
or     $0xff000000,%eax
mov    %eax,(%rbx)
mov    0x68(%r13),%rdi
movzbl 0x1(%r12),%esi
lea    -0x68(%rbp),%rax
mov    %rax,(%rsp)
mov    %r15,%rcx
mov    %r14,%rdx
lea    -0x70(%rbp),%r8
lea    -0x6c(%rbp),%r9
callq  8370 <TIFFYCbCrtoRGB@plt>
mov    -0x6c(%rbp),%eax
shl    $0x8,%eax
or     -0x70(%rbp),%eax
mov    -0x68(%rbp),%ecx
shl    $0x10,%ecx
or     %ecx,%eax
or     $0xff000000,%eax
mov    %eax,0x4(%rbx)
add    $0x6,%r12
add    $0x8,%rbx
mov    -0x58(%rbp),%rax
lea    -0x2(%rax),%r10d
lea    -0x78(%rbp),%r9
lea    -0x7c(%rbp),%r8
lea    -0x74(%rbp),%rax
cmp    $0x1,%r10d
ja     3038f <putcontig8bitYCbCr22tile+0x32f>
cmp    $0x1,%r10d
je     3044f <putcontig8bitYCbCr22tile+0x3ef>
mov    -0x20(%rbp),%rbx
mov    -0x28(%rbp),%r12
mov    -0x30(%rbp),%r13
mov    -0x38(%rbp),%r14
mov    -0x40(%rbp),%r15
leaveq 
retq   
lea    -0x5c(%rbp),%rax
mov    0x68(%r13),%rdi
movzbl (%r12),%esi
movzbl 0x4(%r12),%edx
movzbl 0x5(%r12),%ecx
mov    %rax,(%rsp)
lea    -0x64(%rbp),%r8
lea    -0x60(%rbp),%r9
callq  8370 <TIFFYCbCrtoRGB@plt>
mov    -0x60(%rbp),%eax
shl    $0x8,%eax
or     -0x64(%rbp),%eax
mov    -0x5c(%rbp),%ecx
shl    $0x10,%ecx
or     %ecx,%eax
or     $0xff000000,%eax
mov    %eax,(%rbx)
mov    -0x20(%rbp),%rbx
mov    -0x28(%rbp),%r12
mov    -0x30(%rbp),%r13
mov    -0x38(%rbp),%r14
mov    -0x40(%rbp),%r15
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

00000000000304b0 <putcontig8bitYCbCr21tile>:
push   %rbp
mov    %rsp,%rbp
sub    $0x90,%rsp
mov    %r15,-0x40(%rbp)
mov    %r14,-0x38(%rbp)
mov    %r13,-0x30(%rbp)
mov    %r12,-0x28(%rbp)
mov    %rbx,-0x20(%rbp)
mov    %rdi,-0x10(%rbp)
mov    %r8,%rcx
and    $0x1,%ecx
mov    %rcx,-0x50(%rbp)
mov    0x20(%rbp),%rbx
movslq 0x10(%rbp),%rdx
mov    %rdx,%rax
shr    $0x1f,%eax
add    %edx,%eax
and    $0x7ffffffe,%eax
add    %eax,%eax
movslq %eax,%r14
mov    %r14,-0x18(%rbp)
movslq 0x18(%rbp),%r15
mov    %r15,-0x8(%rbp)
mov    %r8,%r13
shr    %r13d
mov    %r9,%r11
mov    %rsi,%r12
mov    %r13,%r9
mov    %rdi,%r13
mov    %r9,%rdi
mov    %rdi,-0x48(%rbp)
lea    -0x6c(%rbp),%r10
lea    -0x68(%rbp),%rax
lea    -0x64(%rbp),%rsi
lea    -0x84(%rbp),%r8
lea    -0x7c(%rbp),%rdx
lea    -0x80(%rbp),%r9
jmpq   305fc <putcontig8bitYCbCr21tile+0x14c>
mov    0x68(%r13),%rax
movzbl (%rbx),%esi
movzbl 0x2(%rbx),%r14d
movzbl 0x3(%rbx),%r15d
mov    %rdx,(%rsp)
mov    %r14,%rdx
mov    %r15,%rcx
mov    %rdi,-0x60(%rbp)
mov    %r11,-0x58(%rbp)
mov    %rax,%rdi
callq  8370 <TIFFYCbCrtoRGB@plt>
mov    -0x80(%rbp),%eax
shl    $0x8,%eax
or     -0x84(%rbp),%eax
mov    -0x7c(%rbp),%ecx
shl    $0x10,%ecx
or     %ecx,%eax
or     $0xff000000,%eax
mov    %eax,(%r12)
mov    0x68(%r13),%rdi
movzbl 0x1(%rbx),%esi
lea    -0x70(%rbp),%rax
mov    %rax,(%rsp)
mov    %r15,%rcx
mov    %r14,%rdx
lea    -0x78(%rbp),%r8
lea    -0x74(%rbp),%r9
callq  8370 <TIFFYCbCrtoRGB@plt>
mov    -0x74(%rbp),%eax
shl    $0x8,%eax
or     -0x78(%rbp),%eax
mov    -0x70(%rbp),%ecx
shl    $0x10,%ecx
or     %ecx,%eax
or     $0xff000000,%eax
mov    %eax,0x4(%r12)
add    $0x4,%rbx
add    $0x8,%r12
mov    -0x60(%rbp),%rax
lea    -0x1(%rax),%edi
mov    -0x50(%rbp),%rcx
mov    -0x58(%rbp),%r11
lea    -0x84(%rbp),%r8
mov    -0x18(%rbp),%r14
lea    -0x7c(%rbp),%rdx
mov    -0x8(%rbp),%r15
lea    -0x64(%rbp),%rsi
lea    -0x6c(%rbp),%r10
lea    -0x68(%rbp),%rax
lea    -0x80(%rbp),%r9
test   %edi,%edi
jne    3053c <putcontig8bitYCbCr21tile+0x8c>
test   %ecx,%ecx
je     30675 <putcontig8bitYCbCr21tile+0x1c5>
mov    0x68(%r13),%rdi
movzbl (%rbx),%r8d
movzbl 0x2(%rbx),%edx
movzbl 0x3(%rbx),%ecx
mov    %rsi,(%rsp)
mov    %r8,%rsi
mov    %r10,%r8
mov    %rax,%r9
mov    %r11,%r13
callq  8370 <TIFFYCbCrtoRGB@plt>
mov    -0x68(%rbp),%eax
shl    $0x8,%eax
or     -0x6c(%rbp),%eax
mov    -0x64(%rbp),%ecx
shl    $0x10,%ecx
or     %ecx,%eax
or     $0xff000000,%eax
mov    %eax,(%r12)
add    $0x4,%rbx
add    $0x4,%r12
mov    %r13,%r11
mov    -0x10(%rbp),%r13
mov    -0x50(%rbp),%rcx
lea    -0x84(%rbp),%r8
lea    -0x7c(%rbp),%rdx
lea    -0x64(%rbp),%rsi
lea    -0x6c(%rbp),%r10
lea    -0x68(%rbp),%rax
lea    -0x80(%rbp),%r9
add    $0xffffffff,%r11d
test   %r11d,%r11d
jne    30694 <putcontig8bitYCbCr21tile+0x1e4>
mov    -0x20(%rbp),%rbx
mov    -0x28(%rbp),%r12
mov    -0x30(%rbp),%r13
mov    -0x38(%rbp),%r14
mov    -0x40(%rbp),%r15
leaveq 
retq   
add    %r14,%rbx
lea    (%r12,%r15,4),%r12
mov    -0x48(%rbp),%rdi
jmpq   305fc <putcontig8bitYCbCr21tile+0x14c>
data16 nopw %cs:0x0(%rax,%rax,1)
nop

00000000000306b0 <putcontig8bitYCbCr12tile>:
push   %rbp
mov    %rsp,%rbp
sub    $0x80,%rsp
mov    %r15,-0x40(%rbp)
mov    %r14,-0x38(%rbp)
mov    %r13,-0x30(%rbp)
mov    %r12,-0x28(%rbp)
mov    %rbx,-0x20(%rbp)
mov    %r8,-0x58(%rbp)
mov    0x20(%rbp),%rbx
movslq 0x10(%rbp),%rax
shl    $0x2,%eax
movslq %eax,%rax
mov    %rax,-0x18(%rbp)
movslq 0x18(%rbp),%rdx
lea    (%r8,%rdx,2),%eax
movslq %eax,%rax
mov    %rax,-0x10(%rbp)
lea    -0x7c(%rbp),%r10
lea    -0x78(%rbp),%r11
lea    -0x74(%rbp),%rax
mov    %r8d,%ecx
lea    (%rsi,%rcx,4),%rcx
lea    (%rcx,%rdx,4),%rcx
mov    %rdi,%r12
mov    %rsi,%r13
mov    %r8,%r14
mov    %r10,%r8
mov    %r9,%r10
mov    %r11,%r9
jmpq   30805 <putcontig8bitYCbCr12tile+0x155>
add    $0x4,%rbx
add    $0x4,%r13
add    $0x4,%rcx
lea    -0x78(%rbp),%r9
lea    -0x7c(%rbp),%r8
lea    -0x74(%rbp),%rax
mov    %rcx,-0x8(%rbp)
mov    %r14,-0x50(%rbp)
sub    $0x10,%rsp
mov    0x68(%r12),%rdi
movzbl (%rbx),%esi
movzbl 0x2(%rbx),%r14d
movzbl 0x3(%rbx),%r15d
mov    %rax,(%rsp)
mov    %r14,%rdx
mov    %r15,%rcx
callq  8370 <TIFFYCbCrtoRGB@plt>
mov    -0x78(%rbp),%eax
shl    $0x8,%eax
or     -0x7c(%rbp),%eax
mov    -0x74(%rbp),%ecx
shl    $0x10,%ecx
or     %ecx,%eax
or     $0xff000000,%eax
mov    %eax,0x0(%r13)
mov    0x68(%r12),%rdi
movzbl 0x1(%rbx),%esi
lea    -0x68(%rbp),%rax
mov    %rax,(%rsp)
mov    %r15,%rcx
mov    %r14,%rdx
lea    -0x70(%rbp),%r8
lea    -0x6c(%rbp),%r9
callq  8370 <TIFFYCbCrtoRGB@plt>
add    $0x10,%rsp
mov    -0x6c(%rbp),%eax
shl    $0x8,%eax
or     -0x70(%rbp),%eax
mov    -0x68(%rbp),%ecx
shl    $0x10,%ecx
or     %ecx,%eax
or     $0xff000000,%eax
mov    -0x8(%rbp),%rcx
mov    %eax,(%rcx)
mov    -0x50(%rbp),%rax
lea    -0x1(%rax),%r14d
test   %r14d,%r14d
jne    30722 <putcontig8bitYCbCr12tile+0x72>
mov    -0x18(%rbp),%rax
lea    0x4(%rax,%rbx,1),%rbx
mov    -0x48(%rbp),%rax
lea    -0x2(%rax),%r10d
mov    -0x10(%rbp),%rax
lea    0x4(%r13,%rax,4),%r13
lea    0x4(%rcx,%rax,4),%rcx
mov    -0x58(%rbp),%r14
lea    -0x78(%rbp),%r9
lea    -0x7c(%rbp),%r8
lea    -0x74(%rbp),%rax
cmp    $0x1,%r10d
ja     30827 <putcontig8bitYCbCr12tile+0x177>
cmp    $0x1,%r10d
je     30830 <putcontig8bitYCbCr12tile+0x180>
mov    -0x20(%rbp),%rbx
mov    -0x28(%rbp),%r12
mov    -0x30(%rbp),%r13
mov    -0x38(%rbp),%r14
mov    -0x40(%rbp),%r15
leaveq 
retq   
mov    %r10,-0x48(%rbp)
jmpq   3073a <putcontig8bitYCbCr12tile+0x8a>
lea    -0x64(%rbp),%r8
lea    -0x60(%rbp),%r9
lea    -0x5c(%rbp),%r15
jmp    3084e <putcontig8bitYCbCr12tile+0x19e>
add    $0x4,%rbx
add    $0x4,%r13
lea    -0x60(%rbp),%r9
lea    -0x64(%rbp),%r8
sub    $0x10,%rsp
mov    0x68(%r12),%rdi
movzbl (%rbx),%esi
movzbl 0x2(%rbx),%edx
movzbl 0x3(%rbx),%ecx
mov    %r15,(%rsp)
callq  8370 <TIFFYCbCrtoRGB@plt>
add    $0x10,%rsp
mov    -0x60(%rbp),%eax
shl    $0x8,%eax
or     -0x64(%rbp),%eax
mov    -0x5c(%rbp),%ecx
shl    $0x10,%ecx
or     %ecx,%eax
or     $0xff000000,%eax
mov    %eax,0x0(%r13)
add    $0xffffffff,%r14d
test   %r14d,%r14d
jne    3083e <putcontig8bitYCbCr12tile+0x18e>
mov    -0x20(%rbp),%rbx
mov    -0x28(%rbp),%r12
mov    -0x30(%rbp),%r13
mov    -0x38(%rbp),%r14
mov    -0x40(%rbp),%r15
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

00000000000308b0 <putcontig8bitYCbCr11tile>:
push   %rbp
mov    %rsp,%rbp
sub    $0x50,%rsp
mov    %r15,-0x38(%rbp)
mov    %r8,-0x40(%rbp)
mov    %rdi,-0x10(%rbp)
mov    %rbx,-0x18(%rbp)
mov    %r12,-0x20(%rbp)
mov    %r13,-0x28(%rbp)
mov    %r14,-0x30(%rbp)
mov    0x20(%rbp),%rbx
movslq 0x10(%rbp),%rax
lea    (%rax,%rax,2),%eax
movslq %eax,%r13
movslq 0x18(%rbp),%rax
mov    %rax,-0x8(%rbp)
mov    %r9,%r12
mov    %rsi,%r14
mov    %r8,%r15
lea    -0x4c(%rbp),%r8
lea    -0x44(%rbp),%rax
jmp    30911 <putcontig8bitYCbCr11tile+0x61>
add    $0x3,%rbx
add    $0x4,%r14
mov    -0x10(%rbp),%rdi
lea    -0x44(%rbp),%rax
lea    -0x4c(%rbp),%r8
sub    $0x10,%rsp
movzbl (%rbx),%esi
movzbl 0x1(%rbx),%edx
movzbl 0x2(%rbx),%ecx
mov    0x68(%rdi),%rdi
mov    %rax,(%rsp)
lea    -0x48(%rbp),%r9
callq  8370 <TIFFYCbCrtoRGB@plt>
add    $0x10,%rsp
mov    -0x48(%rbp),%eax
shl    $0x8,%eax
or     -0x4c(%rbp),%eax
mov    -0x44(%rbp),%ecx
shl    $0x10,%ecx
or     %ecx,%eax
or     $0xff000000,%eax
mov    %eax,(%r14)
add    $0xffffffff,%r15d
test   %r15d,%r15d
jne    308fd <putcontig8bitYCbCr11tile+0x4d>
add    $0xffffffff,%r12d
test   %r12d,%r12d
jne    30976 <putcontig8bitYCbCr11tile+0xc6>
mov    -0x30(%rbp),%r14
mov    -0x28(%rbp),%r13
mov    -0x20(%rbp),%r12
mov    -0x18(%rbp),%rbx
mov    -0x38(%rbp),%r15
leaveq 
retq   
lea    0x3(%rbx,%r13,1),%rbx
mov    -0x8(%rbp),%rax
lea    0x4(%r14,%rax,4),%r14
mov    -0x10(%rbp),%rdi
mov    -0x40(%rbp),%r15
lea    -0x44(%rbp),%rax
lea    -0x4c(%rbp),%r8
jmpq   30911 <putcontig8bitYCbCr11tile+0x61>
nopl   0x0(%rax)

00000000000309a0 <putseparate8bitYCbCr11tile>:
push   %rbp
mov    %rsp,%rbp
sub    $0x60,%rsp
mov    %r15,-0x40(%rbp)
mov    %rdi,-0x10(%rbp)
mov    %rbx,-0x20(%rbp)
mov    %r12,-0x28(%rbp)
mov    %r13,-0x30(%rbp)
mov    %r14,-0x38(%rbp)
mov    %r8,-0x50(%rbp)
mov    0x20(%rbp),%r15
movslq 0x10(%rbp),%rax
mov    %rax,-0x18(%rbp)
mov    0x28(%rbp),%rbx
mov    0x30(%rbp),%r13
movslq 0x18(%rbp),%rax
mov    %rax,-0x8(%rbp)
mov    %r9,%r10
mov    %rsi,%r12
mov    %r8,%r14
lea    -0x5c(%rbp),%r8
lea    -0x58(%rbp),%r9
lea    -0x54(%rbp),%rax
jmpq   30a96 <putseparate8bitYCbCr11tile+0xf6>
add    $0x1,%r15
add    $0x1,%rbx
add    $0x1,%r13
add    $0x4,%r12
lea    -0x5c(%rbp),%r8
lea    -0x54(%rbp),%rax
mov    -0x10(%rbp),%rdi
lea    -0x58(%rbp),%r9
sub    $0x10,%rsp
mov    0x68(%rdi),%rdi
movzbl (%r15),%esi
movzbl (%rbx),%edx
movzbl 0x0(%r13),%ecx
mov    %rax,(%rsp)
callq  8370 <TIFFYCbCrtoRGB@plt>
add    $0x10,%rsp
mov    -0x58(%rbp),%eax
shl    $0x8,%eax
or     -0x5c(%rbp),%eax
mov    -0x54(%rbp),%ecx
shl    $0x10,%ecx
or     %ecx,%eax
or     $0xff000000,%eax
mov    %eax,(%r12)
add    $0xffffffff,%r14d
test   %r14d,%r14d
jne    309fa <putseparate8bitYCbCr11tile+0x5a>
mov    -0x48(%rbp),%rax
lea    -0x1(%rax),%r10d
mov    -0x18(%rbp),%rax
lea    0x1(%rax,%r15,1),%r15
lea    0x1(%rax,%rbx,1),%rbx
lea    0x1(%r13,%rax,1),%r13
mov    -0x8(%rbp),%rax
lea    0x4(%r12,%rax,4),%r12
mov    -0x50(%rbp),%r14
lea    -0x5c(%rbp),%r8
lea    -0x54(%rbp),%rax
mov    -0x10(%rbp),%rdi
lea    -0x58(%rbp),%r9
test   %r10d,%r10d
jne    30ab1 <putseparate8bitYCbCr11tile+0x111>
mov    -0x38(%rbp),%r14
mov    -0x30(%rbp),%r13
mov    -0x28(%rbp),%r12
mov    -0x20(%rbp),%rbx
mov    -0x40(%rbp),%r15
leaveq 
retq   
mov    %r10,-0x48(%rbp)
jmpq   30a1a <putseparate8bitYCbCr11tile+0x7a>
nopw   0x0(%rax,%rax,1)

0000000000030ac0 <isInRefBlackWhiteRange>:
push   %rbp
mov    %rsp,%rbp
xor    %eax,%eax
movss  0x3ed8a(%rip),%xmm1        # 6f858 <module.62+0x126>
ucomiss %xmm1,%xmm0
ja     30ad5 <isInRefBlackWhiteRange+0x15>
leaveq 
retq   
movss  0x3ed77(%rip),%xmm1        # 6f854 <module.62+0x122>
ucomiss %xmm1,%xmm0
jp     30aeb <isInRefBlackWhiteRange+0x2b>
jae    30aeb <isInRefBlackWhiteRange+0x2b>
mov    $0x1,%eax
leaveq 
retq   
leaveq 
retq   
nopl   (%rax)

0000000000030af0 <initYCbCrConversion>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    %r15,-0x10(%rbp)
mov    0x68(%rdi),%rax
test   %rax,%rax
je     30bb9 <initYCbCrConversion+0xc9>
mov    %rdi,%r15
xor    %eax,%eax
mov    (%r15),%rdi
mov    $0x211,%esi
lea    -0x28(%rbp),%rdx
callq  8390 <TIFFGetFieldDefaulted@plt>
mov    (%r15),%rdi
mov    $0x214,%esi
lea    -0x20(%rbp),%rdx
xor    %eax,%eax
callq  8390 <TIFFGetFieldDefaulted@plt>
mov    -0x28(%rbp),%rax
movss  (%rax),%xmm0
ucomiss %xmm0,%xmm0
jp     30bfa <initYCbCrConversion+0x10a>
movss  0x4(%rax),%xmm1
ucomiss %xmm1,%xmm1
jp     30bfa <initYCbCrConversion+0x10a>
xorpd  %xmm0,%xmm0
ucomiss %xmm0,%xmm1
jp     30b60 <initYCbCrConversion+0x70>
je     30bfa <initYCbCrConversion+0x10a>
movss  0x8(%rax),%xmm0
ucomiss %xmm0,%xmm0
jp     30bfa <initYCbCrConversion+0x10a>
mov    -0x20(%rbp),%rcx
movss  (%rcx),%xmm0
mov    %r14,-0x8(%rbp)
mov    %rax,-0x18(%rbp)
mov    %rcx,%r14
callq  30ac0 <isInRefBlackWhiteRange>
test   %eax,%eax
jne    30c21 <initYCbCrConversion+0x131>
xor    %eax,%eax
mov    (%r15),%rcx
mov    0x3b8(%rcx),%rdi
lea    0x3eb66(%rip),%rdx        # 6f707 <module.58+0x66>
lea    0x3eaf9(%rip),%rsi        # 6f6a1 <module.58>
callq  8a00 <TIFFErrorExt@plt>
mov    -0x8(%rbp),%r14
xor    %eax,%eax
mov    -0x10(%rbp),%r15
leaveq 
retq   
mov    %rdi,%r15
mov    $0x1830,%edi
callq  8440 <_TIFFmalloc@plt>
mov    %rax,0x68(%r15)
test   %rax,%rax
jne    30b0c <initYCbCrConversion+0x1c>
xor    %eax,%eax
mov    (%r15),%rcx
mov    0x3b8(%rcx),%rdi
lea    0x3eacf(%rip),%rdx        # 6f6b5 <module.58+0x14>
lea    0x3eab4(%rip),%rsi        # 6f6a1 <module.58>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x10(%rbp),%r15
leaveq 
retq   
xor    %eax,%eax
mov    (%r15),%rcx
mov    0x3b8(%rcx),%rdi
lea    0x3ead1(%rip),%rdx        # 6f6de <module.58+0x3d>
lea    0x3ea8d(%rip),%rsi        # 6f6a1 <module.58>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x10(%rbp),%r15
leaveq 
retq   
movss  0x4(%r14),%xmm0
callq  30ac0 <isInRefBlackWhiteRange>
test   %eax,%eax
je     30b8e <initYCbCrConversion+0x9e>
movss  0x8(%r14),%xmm0
callq  30ac0 <isInRefBlackWhiteRange>
test   %eax,%eax
je     30b8e <initYCbCrConversion+0x9e>
movss  0xc(%r14),%xmm0
callq  30ac0 <isInRefBlackWhiteRange>
test   %eax,%eax
je     30b8e <initYCbCrConversion+0x9e>
movss  0x10(%r14),%xmm0
callq  30ac0 <isInRefBlackWhiteRange>
test   %eax,%eax
je     30b8e <initYCbCrConversion+0x9e>
movss  0x14(%r14),%xmm0
callq  30ac0 <isInRefBlackWhiteRange>
test   %eax,%eax
je     30b8e <initYCbCrConversion+0x9e>
mov    0x68(%r15),%rdi
mov    %r14,%rdx
mov    -0x18(%rbp),%rsi
callq  8980 <TIFFYCbCrToRGBInit@plt>
test   %eax,%eax
jns    30ca0 <initYCbCrConversion+0x1b0>
mov    -0x8(%rbp),%r14
xor    %eax,%eax
mov    -0x10(%rbp),%r15
leaveq 
retq   
mov    $0x1,%eax
mov    -0x8(%rbp),%r14
mov    -0x10(%rbp),%r15
leaveq 
retq   
nop

0000000000030cb0 <initCIELabConversion>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %r15,-0x8(%rbp)
mov    %rdi,%r15
xor    %eax,%eax
mov    (%r15),%rdi
mov    $0x13e,%esi
lea    -0x20(%rbp),%rdx
callq  8390 <TIFFGetFieldDefaulted@plt>
lea    0x3ea59(%rip),%rsi        # 6f732 <module.62>
mov    -0x20(%rbp),%rax
movss  0x4(%rax),%xmm1
xorpd  %xmm0,%xmm0
ucomiss %xmm0,%xmm1
jp     30ced <initCIELabConversion+0x3d>
je     30d6a <initCIELabConversion+0xba>
mov    0x70(%r15),%rax
test   %rax,%rax
je     30d8a <initCIELabConversion+0xda>
movss  0x3eb5a(%rip),%xmm0        # 6f85c <module.62+0x12a>
movss  %xmm0,-0x10(%rbp)
mov    -0x20(%rbp),%rax
movss  (%rax),%xmm0
divss  0x4(%rax),%xmm0
mulss  -0x10(%rbp),%xmm0
movss  %xmm0,-0x14(%rbp)
mov    -0x20(%rbp),%rax
movss  0x3eb36(%rip),%xmm0        # 6f860 <module.62+0x12e>
subss  (%rax),%xmm0
movss  0x4(%rax),%xmm1
subss  %xmm1,%xmm0
divss  %xmm1,%xmm0
mulss  -0x10(%rbp),%xmm0
movss  %xmm0,-0xc(%rbp)
mov    0x70(%r15),%rdi
lea    0x3d798(%rip),%rsi        # 6e4e8 <display_sRGB>
lea    -0x14(%rbp),%rdx
callq  8b40 <TIFFCIELabToRGBInit@plt>
test   %eax,%eax
js     30dc8 <initCIELabConversion+0x118>
lea    -0x29b4(%rip),%rax        # 2e3b0 <putcontig8bitCIELab>
mov    -0x8(%rbp),%r15
leaveq 
retq   
xor    %eax,%eax
mov    (%r15),%rcx
mov    0x3b8(%rcx),%rdi
lea    0x3e9ca(%rip),%rdx        # 6f747 <module.62+0x15>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
mov    $0x46cc,%edi
callq  8440 <_TIFFmalloc@plt>
mov    %rax,0x70(%r15)
test   %rax,%rax
jne    30cfa <initCIELabConversion+0x4a>
xor    %eax,%eax
mov    (%r15),%rcx
mov    0x3b8(%rcx),%rdi
lea    0x3e9b5(%rip),%rdx        # 6f769 <module.62+0x37>
lea    0x3e977(%rip),%rsi        # 6f732 <module.62>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
xor    %eax,%eax
mov    (%r15),%rcx
mov    0x3b8(%rcx),%rdi
lea    0x3e9bd(%rip),%rdx        # 6f798 <module.62+0x66>
lea    0x3e950(%rip),%rsi        # 6f732 <module.62>
callq  8a00 <TIFFErrorExt@plt>
mov    0x70(%r15),%rdi
callq  8bb0 <_TIFFfree@plt>
xor    %eax,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

0000000000030e00 <makebwmap>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %r14,-0x10(%rbp)
mov    %r15,-0x18(%rbp)
mov    0x50(%rdi),%rax
mov    %rax,-0x8(%rbp)
mov    $0x1,%ecx
mov    $0x8,%eax
movzwl 0x1c(%rdi),%r14d
cltd   
idiv   %r14d
test   %eax,%eax
je     30e32 <makebwmap+0x32>
mov    %rax,%rcx
shl    $0x8,%ecx
movslq %ecx,%rax
lea    0x800(,%rax,4),%rax
mov    %rdi,%r15
mov    %rax,%rdi
callq  8440 <_TIFFmalloc@plt>
mov    %rax,0x58(%r15)
xor    %ecx,%ecx
test   %rax,%rax
je     30e66 <makebwmap+0x66>
lea    -0x1(%r14),%edi
add    $0x800,%rax
mov    -0x8(%rbp),%r9
jmp    30eac <makebwmap+0xac>
mov    (%r15),%rdi
xor    %r14d,%r14d
mov    0x3b8(%rdi),%r15
callq  85f0 <TIFFFileName@plt>
mov    %rax,%rsi
mov    %r14,%rax
mov    %r15,%rdi
lea    0x3e947(%rip),%rdx        # 6f7cf <module.62+0x9d>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
leaveq 
retq   
cmp    $0xf,%edi
mov    0x58(%r15),%rdx
movslq %ecx,%r8
mov    %rax,(%rdx,%r8,8)
jbe    30ec3 <makebwmap+0xc3>
add    $0x1,%ecx
cmp    $0xff,%ecx
jle    30e99 <makebwmap+0x99>
mov    $0x1,%eax
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
leaveq 
retq   
lea    0x3d5a6(%rip),%rsi        # 6e470 <TIFFFaxBlackTable+0x102b4>
movslq (%rsi,%rdi,4),%rdx
add    %rsi,%rdx
jmpq   *%rdx
movzbl (%r9,%r8,1),%r8d
mov    %r8,%rsi
shl    $0x8,%esi
mov    %r8,%rdx
shl    $0x10,%edx
add    %esi,%edx
lea    -0x1000000(%r8,%rdx,1),%edx
mov    %edx,(%rax)
add    $0x4,%rax
jmp    30ea9 <makebwmap+0xa9>
mov    %rcx,%rdx
sar    $0x7,%edx
movslq %edx,%rdx
movzbl (%r9,%rdx,1),%r8d
mov    %r8,%rsi
shl    $0x8,%esi
mov    %r8,%rdx
shl    $0x10,%edx
add    %esi,%edx
lea    -0x1000000(%r8,%rdx,1),%edx
mov    %edx,(%rax)
mov    %rcx,%rdx
and    $0x40,%edx
shr    $0x6,%edx
movslq %edx,%rdx
movzbl (%r9,%rdx,1),%r8d
mov    %r8,%rsi
shl    $0x8,%esi
mov    %r8,%rdx
shl    $0x10,%edx
add    %esi,%edx
lea    -0x1000000(%r8,%rdx,1),%edx
mov    %edx,0x4(%rax)
mov    %rcx,%rdx
and    $0x20,%edx
shr    $0x5,%edx
movslq %edx,%rdx
movzbl (%r9,%rdx,1),%r8d
mov    %r8,%rsi
shl    $0x8,%esi
mov    %r8,%rdx
shl    $0x10,%edx
add    %esi,%edx
lea    -0x1000000(%r8,%rdx,1),%edx
mov    %edx,0x8(%rax)
mov    %rcx,%rdx
and    $0x10,%edx
shr    $0x4,%edx
movslq %edx,%rdx
movzbl (%r9,%rdx,1),%r8d
mov    %r8,%rsi
shl    $0x8,%esi
mov    %r8,%rdx
shl    $0x10,%edx
add    %esi,%edx
lea    -0x1000000(%r8,%rdx,1),%edx
mov    %edx,0xc(%rax)
mov    %rcx,%rdx
and    $0x8,%edx
shr    $0x3,%edx
movslq %edx,%rdx
movzbl (%r9,%rdx,1),%r8d
mov    %r8,%rsi
shl    $0x8,%esi
mov    %r8,%rdx
shl    $0x10,%edx
add    %esi,%edx
lea    -0x1000000(%r8,%rdx,1),%edx
mov    %edx,0x10(%rax)
mov    %rcx,%rdx
and    $0x4,%edx
shr    $0x2,%edx
movslq %edx,%rdx
movzbl (%r9,%rdx,1),%r8d
mov    %r8,%rsi
shl    $0x8,%esi
mov    %r8,%rdx
shl    $0x10,%edx
add    %esi,%edx
lea    -0x1000000(%r8,%rdx,1),%edx
mov    %edx,0x14(%rax)
mov    %rcx,%rdx
and    $0x2,%edx
shr    %edx
movslq %edx,%rdx
movzbl (%r9,%rdx,1),%r8d
mov    %r8,%rsi
shl    $0x8,%esi
mov    %r8,%rdx
shl    $0x10,%edx
add    %esi,%edx
lea    -0x1000000(%r8,%rdx,1),%edx
mov    %edx,0x18(%rax)
mov    %rcx,%rdx
and    $0x1,%edx
movslq %edx,%rdx
movzbl (%r9,%rdx,1),%r8d
mov    %r8,%rsi
shl    $0x8,%esi
mov    %r8,%rdx
shl    $0x10,%edx
add    %esi,%edx
lea    -0x1000000(%r8,%rdx,1),%edx
mov    %edx,0x1c(%rax)
add    $0x20,%rax
jmpq   30ea9 <makebwmap+0xa9>
mov    %rcx,%rdx
sar    $0x6,%edx
movslq %edx,%rdx
movzbl (%r9,%rdx,1),%r8d
mov    %r8,%rsi
shl    $0x8,%esi
mov    %r8,%rdx
shl    $0x10,%edx
add    %esi,%edx
lea    -0x1000000(%r8,%rdx,1),%edx
mov    %edx,(%rax)
mov    %rcx,%rdx
and    $0x30,%edx
shr    $0x4,%edx
movslq %edx,%rdx
movzbl (%r9,%rdx,1),%r8d
mov    %r8,%rsi
shl    $0x8,%esi
mov    %r8,%rdx
shl    $0x10,%edx
add    %esi,%edx
lea    -0x1000000(%r8,%rdx,1),%edx
mov    %edx,0x4(%rax)
mov    %rcx,%rdx
and    $0xc,%edx
shr    $0x2,%edx
movslq %edx,%rdx
movzbl (%r9,%rdx,1),%r8d
mov    %r8,%rsi
shl    $0x8,%esi
mov    %r8,%rdx
shl    $0x10,%edx
add    %esi,%edx
lea    -0x1000000(%r8,%rdx,1),%edx
mov    %edx,0x8(%rax)
mov    %rcx,%rdx
and    $0x3,%edx
movslq %edx,%rdx
movzbl (%r9,%rdx,1),%r8d
mov    %r8,%rsi
shl    $0x8,%esi
mov    %r8,%rdx
shl    $0x10,%edx
add    %esi,%edx
lea    -0x1000000(%r8,%rdx,1),%edx
mov    %edx,0xc(%rax)
add    $0x10,%rax
jmpq   30ea9 <makebwmap+0xa9>
mov    %rcx,%rdx
sar    $0x4,%edx
movslq %edx,%rdx
movzbl (%r9,%rdx,1),%r8d
mov    %r8,%rsi
shl    $0x8,%esi
mov    %r8,%rdx
shl    $0x10,%edx
add    %esi,%edx
lea    -0x1000000(%r8,%rdx,1),%edx
mov    %edx,(%rax)
mov    %rcx,%rdx
and    $0xf,%edx
movslq %edx,%rdx
movzbl (%r9,%rdx,1),%r8d
mov    %r8,%rsi
shl    $0x8,%esi
mov    %r8,%rdx
shl    $0x10,%edx
add    %esi,%edx
lea    -0x1000000(%r8,%rdx,1),%edx
mov    %edx,0x4(%rax)
add    $0x8,%rax
jmpq   30ea9 <makebwmap+0xa9>
nopw   0x0(%rax,%rax,1)

0000000000031150 <setupMap>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    $0x1,%eax
movzwl 0x1c(%rdi),%ecx
cmp    $0x10,%cx
jne    3119e <setupMap+0x4e>
mov    %rdi,%r14
mov    $0xff,%r15d
lea    0x1(%r15),%eax
movslq %eax,%rdi
callq  8440 <_TIFFmalloc@plt>
mov    %rax,0x50(%r14)
xor    %ecx,%ecx
test   %rax,%rax
je     311aa <setupMap+0x5a>
movzwl 0x24(%r14),%eax
test   %ax,%ax
jne    311dd <setupMap+0x8d>
mov    %rcx,%rsi
jmp    31203 <setupMap+0xb3>
mov    %rdi,%r14
shl    %cl,%rax
lea    -0x1(%rax),%r15d
jmp    31178 <setupMap+0x28>
mov    (%r14),%rdi
xor    %r14d,%r14d
mov    0x3b8(%rdi),%r15
callq  85f0 <TIFFFileName@plt>
mov    %rax,%rsi
mov    %r14,%rax
mov    %r15,%rdi
lea    0x3e622(%rip),%rdx        # 6f7ee <module.62+0xbc>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
mov    %rcx,%rsi
jmp    3123b <setupMap+0xeb>
mov    %r15,%rax
sub    %esi,%eax
shl    $0x8,%eax
mov    %rsi,%rdx
sub    %r15d,%edx
add    %edx,%eax
cltd   
mov    0x50(%r14),%rdi
idiv   %r15d
movslq %esi,%rdx
mov    %al,(%rdi,%rdx,1)
add    $0x1,%esi
cmp    %esi,%r15d
jge    311e2 <setupMap+0x92>
movzwl 0x1c(%r14),%eax
cmp    $0x10,%ax
jbe    31242 <setupMap+0xf2>
mov    $0x1,%eax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
mov    %rsi,%rax
shl    $0x8,%eax
sub    %esi,%eax
cltd   
mov    0x50(%r14),%rdi
idiv   %r15d
movslq %esi,%rdx
mov    %al,(%rdi,%rdx,1)
add    $0x1,%esi
cmp    %esi,%r15d
jge    31222 <setupMap+0xd2>
jmp    31208 <setupMap+0xb8>
movzwl 0x24(%r14),%eax
cmp    $0x1,%ax
je     31261 <setupMap+0x111>
test   %ax,%ax
je     31261 <setupMap+0x111>
mov    $0x1,%eax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
mov    %rcx,%r15
mov    %r14,%rdi
callq  30e00 <makebwmap>
test   %eax,%eax
jne    3127d <setupMap+0x12d>
mov    %r15,%rax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
mov    0x50(%r14),%rdi
callq  8bb0 <_TIFFfree@plt>
movq   $0x0,0x50(%r14)
mov    $0x1,%eax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
nopl   (%rax)

00000000000312a0 <checkcmap>:
push   %rbp
mov    %rsp,%rbp
mov    0x28(%rdi),%rsi
mov    0x30(%rdi),%r8
mov    0x38(%rdi),%r9
mov    $0x1,%edx
movzwl 0x1c(%rdi),%ecx
shl    %cl,%rdx
mov    $0x10,%eax
jmp    312f3 <checkcmap+0x53>
movzwl (%rsi),%ecx
cmp    $0xff,%cx
ja     312ff <checkcmap+0x5f>
movzwl (%r8),%ecx
cmp    $0xff,%cx
ja     31301 <checkcmap+0x61>
movzwl (%r9),%ecx
cmp    $0xff,%cx
ja     31303 <checkcmap+0x63>
add    $0x2,%rsi
add    $0x2,%r8
add    $0x2,%r9
add    $0xffffffffffffffff,%rdx
test   %rdx,%rdx
jg     312c3 <checkcmap+0x23>
mov    $0x8,%eax
leaveq 
retq   
leaveq 
retq   
leaveq 
retq   
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)

0000000000031310 <cvtcmap>:
push   %rbp
mov    %rsp,%rbp
mov    0x28(%rdi),%rdx
mov    0x30(%rdi),%rsi
mov    0x38(%rdi),%r8
mov    $0x1,%eax
movzwl 0x1c(%rdi),%ecx
shl    %cl,%rax
add    $0xffffffffffffffff,%rax
jmp    31359 <cvtcmap+0x49>
movzwl (%rdx,%rax,2),%ecx
shr    $0x8,%ecx
mov    %cx,(%rdx,%rax,2)
movzwl (%rsi,%rax,2),%ecx
shr    $0x8,%ecx
mov    %cx,(%rsi,%rax,2)
movzwl (%r8,%rax,2),%ecx
shr    $0x8,%ecx
mov    %cx,(%r8,%rax,2)
add    $0xffffffffffffffff,%rax
test   %rax,%rax
jns    31332 <cvtcmap+0x22>
leaveq 
retq   

0000000000031360 <makecmap>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    $0x8,%eax
movzwl 0x1c(%rdi),%r14d
mov    0x28(%rdi),%rcx
mov    %rcx,-0x8(%rbp)
mov    0x30(%rdi),%rcx
mov    %rcx,-0x10(%rbp)
mov    0x38(%rdi),%rcx
mov    %rcx,-0x18(%rbp)
cltd   
idiv   %r14d
shl    $0x8,%eax
movslq %eax,%rax
lea    0x800(,%rax,4),%rax
mov    %rdi,%r15
mov    %rax,%rdi
callq  8440 <_TIFFmalloc@plt>
mov    %rax,0x60(%r15)
xor    %ecx,%ecx
test   %rax,%rax
je     313d1 <makecmap+0x71>
add    $0x800,%rax
mov    -0x18(%rbp),%r10
mov    -0x10(%rbp),%r9
mov    -0x8(%rbp),%r8
jmpq   315fb <makecmap+0x29b>
mov    (%r15),%rdi
xor    %r14d,%r14d
mov    0x3b8(%rdi),%r15
callq  85f0 <TIFFFileName@plt>
mov    %rax,%rsi
mov    %r14,%rax
mov    %r15,%rdi
lea    0x3e425(%rip),%rdx        # 6f818 <module.62+0xe6>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
leaveq 
retq   
movzbl %cl,%edx
shr    $0x7,%edx
movzbl %dl,%edx
neg    %rdx
and    $0x2,%rdx
movzwl (%r8,%rdx,1),%esi
movzbl %sil,%edi
movzwl (%r9,%rdx,1),%esi
movzbl %sil,%esi
shl    $0x8,%esi
add    %edi,%esi
movzwl (%r10,%rdx,1),%edx
movzbl %dl,%edx
shl    $0x10,%edx
lea    -0x1000000(%rsi,%rdx,1),%edx
mov    %edx,(%rax)
mov    %rcx,%rdx
sar    $0x6,%edx
and    $0x1,%dl
movzbl %dl,%edx
neg    %rdx
and    $0x2,%rdx
movzwl (%r8,%rdx,1),%esi
movzbl %sil,%edi
movzwl (%r9,%rdx,1),%esi
movzbl %sil,%esi
shl    $0x8,%esi
add    %edi,%esi
movzwl (%r10,%rdx,1),%edx
movzbl %dl,%edx
shl    $0x10,%edx
lea    -0x1000000(%rsi,%rdx,1),%edx
mov    %edx,0x4(%rax)
mov    %rcx,%rdx
sar    $0x5,%edx
and    $0x1,%dl
movzbl %dl,%edx
neg    %rdx
and    $0x2,%rdx
movzwl (%r8,%rdx,1),%esi
movzbl %sil,%edi
movzwl (%r9,%rdx,1),%esi
movzbl %sil,%esi
shl    $0x8,%esi
add    %edi,%esi
movzwl (%r10,%rdx,1),%edx
movzbl %dl,%edx
shl    $0x10,%edx
lea    -0x1000000(%rsi,%rdx,1),%edx
mov    %edx,0x8(%rax)
mov    %rcx,%rdx
sar    $0x4,%edx
and    $0x1,%dl
movzbl %dl,%edx
neg    %rdx
and    $0x2,%rdx
movzwl (%r8,%rdx,1),%esi
movzbl %sil,%edi
movzwl (%r9,%rdx,1),%esi
movzbl %sil,%esi
shl    $0x8,%esi
add    %edi,%esi
movzwl (%r10,%rdx,1),%edx
movzbl %dl,%edx
shl    $0x10,%edx
lea    -0x1000000(%rsi,%rdx,1),%edx
mov    %edx,0xc(%rax)
mov    %rcx,%rdx
sar    $0x3,%edx
and    $0x1,%dl
movzbl %dl,%edx
neg    %rdx
and    $0x2,%rdx
movzwl (%r8,%rdx,1),%esi
movzbl %sil,%edi
movzwl (%r9,%rdx,1),%esi
movzbl %sil,%esi
shl    $0x8,%esi
add    %edi,%esi
movzwl (%r10,%rdx,1),%edx
movzbl %dl,%edx
shl    $0x10,%edx
lea    -0x1000000(%rsi,%rdx,1),%edx
mov    %edx,0x10(%rax)
mov    %rcx,%rdx
sar    $0x2,%edx
and    $0x1,%dl
movzbl %dl,%edx
neg    %rdx
and    $0x2,%rdx
movzwl (%r8,%rdx,1),%esi
movzbl %sil,%edi
movzwl (%r9,%rdx,1),%esi
movzbl %sil,%esi
shl    $0x8,%esi
add    %edi,%esi
movzwl (%r10,%rdx,1),%edx
movzbl %dl,%edx
shl    $0x10,%edx
lea    -0x1000000(%rsi,%rdx,1),%edx
mov    %edx,0x14(%rax)
mov    %rcx,%rdx
sar    %edx
and    $0x1,%dl
movzbl %dl,%edx
neg    %rdx
and    $0x2,%rdx
movzwl (%r8,%rdx,1),%esi
movzbl %sil,%edi
movzwl (%r9,%rdx,1),%esi
movzbl %sil,%esi
shl    $0x8,%esi
add    %edi,%esi
movzwl (%r10,%rdx,1),%edx
movzbl %dl,%edx
shl    $0x10,%edx
lea    -0x1000000(%rsi,%rdx,1),%edx
mov    %edx,0x18(%rax)
mov    %rcx,%rdx
and    $0x1,%dl
movzbl %dl,%edx
neg    %rdx
and    $0x2,%rdx
movzwl (%r8,%rdx,1),%esi
movzbl %sil,%edi
movzwl (%r9,%rdx,1),%esi
movzbl %sil,%esi
shl    $0x8,%esi
add    %edi,%esi
movzwl (%r10,%rdx,1),%edx
movzbl %dl,%edx
shl    $0x10,%edx
lea    -0x1000000(%rsi,%rdx,1),%edx
mov    %edx,0x1c(%rax)
add    $0x20,%rax
add    $0x1,%ecx
cmp    $0xff,%ecx
jle    31612 <makecmap+0x2b2>
mov    $0x1,%eax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
leaveq 
retq   
cmp    $0x3,%r14w
mov    0x60(%r15),%rsi
movslq %ecx,%rdx
mov    %rax,(%rsi,%rdx,8)
jbe    31668 <makecmap+0x308>
cmp    $0x4,%r14w
je     31758 <makecmap+0x3f8>
cmp    $0x8,%r14w
jne    315f8 <makecmap+0x298>
movzbl %cl,%esi
movzwl (%r8,%rsi,2),%edx
movzbl %dl,%edi
movzwl (%r9,%rsi,2),%edx
movzbl %dl,%edx
shl    $0x8,%edx
add    %edx,%edi
movzwl (%r10,%rsi,2),%edx
movzbl %dl,%edx
shl    $0x10,%edx
lea    -0x1000000(%rdi,%rdx,1),%edx
mov    %edx,(%rax)
add    $0x4,%rax
jmp    315f8 <makecmap+0x298>
cmp    $0x1,%r14w
je     31404 <makecmap+0xa4>
cmp    $0x2,%r14w
jne    315f8 <makecmap+0x298>
movzbl %cl,%edx
shr    $0x6,%edx
movzbl %dl,%edi
movzwl (%r8,%rdi,2),%edx
movzbl %dl,%esi
movzwl (%r9,%rdi,2),%edx
movzbl %dl,%edx
shl    $0x8,%edx
add    %edx,%esi
movzwl (%r10,%rdi,2),%edx
movzbl %dl,%edx
shl    $0x10,%edx
lea    -0x1000000(%rsi,%rdx,1),%edx
mov    %edx,(%rax)
mov    %rcx,%rdx
sar    $0x4,%edx
and    $0x3,%dl
movzbl %dl,%edi
movzwl (%r8,%rdi,2),%edx
movzbl %dl,%esi
movzwl (%r9,%rdi,2),%edx
movzbl %dl,%edx
shl    $0x8,%edx
add    %edx,%esi
movzwl (%r10,%rdi,2),%edx
movzbl %dl,%edx
shl    $0x10,%edx
lea    -0x1000000(%rsi,%rdx,1),%edx
mov    %edx,0x4(%rax)
mov    %rcx,%rdx
sar    $0x2,%edx
and    $0x3,%dl
movzbl %dl,%esi
movzwl (%r8,%rsi,2),%edx
movzbl %dl,%edi
movzwl (%r9,%rsi,2),%edx
movzbl %dl,%edx
shl    $0x8,%edx
add    %edx,%edi
movzwl (%r10,%rsi,2),%edx
movzbl %dl,%edx
shl    $0x10,%edx
lea    -0x1000000(%rdi,%rdx,1),%edx
mov    %edx,0x8(%rax)
mov    %rcx,%rdx
and    $0x3,%dl
movzbl %dl,%esi
movzwl (%r8,%rsi,2),%edx
movzbl %dl,%edi
movzwl (%r9,%rsi,2),%edx
movzbl %dl,%edx
shl    $0x8,%edx
add    %edx,%edi
movzwl (%r10,%rsi,2),%edx
movzbl %dl,%edx
shl    $0x10,%edx
lea    -0x1000000(%rdi,%rdx,1),%edx
mov    %edx,0xc(%rax)
add    $0x10,%rax
jmpq   315f8 <makecmap+0x298>
movzbl %cl,%edx
shr    $0x4,%edx
movzbl %dl,%esi
movzwl (%r8,%rsi,2),%edx
movzbl %dl,%edi
movzwl (%r9,%rsi,2),%edx
movzbl %dl,%edx
shl    $0x8,%edx
add    %edx,%edi
movzwl (%r10,%rsi,2),%edx
movzbl %dl,%edx
shl    $0x10,%edx
lea    -0x1000000(%rdi,%rdx,1),%edx
mov    %edx,(%rax)
mov    %rcx,%rdx
and    $0xf,%dl
movzbl %dl,%edi
movzwl (%r8,%rdi,2),%edx
movzbl %dl,%esi
movzwl (%r9,%rdi,2),%edx
movzbl %dl,%edx
shl    $0x8,%edx
add    %edx,%esi
movzwl (%r10,%rdi,2),%edx
movzbl %dl,%edx
shl    $0x10,%edx
lea    -0x1000000(%rsi,%rdx,1),%edx
mov    %edx,0x4(%rax)
add    $0x8,%rax
jmpq   315f8 <makecmap+0x298>
nopw   %cs:0x0(%rax,%rax,1)

00000000000317d0 <buildMap>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    $0x1,%eax
movzwl 0x24(%rdi),%ecx
cmp    $0x6,%cx
jbe    317e9 <buildMap+0x19>
leaveq 
retq   
lea    0x3ccc0(%rip),%rdx        # 6e4b0 <TIFFFaxBlackTable+0x102f4>
movslq (%rdx,%rcx,4),%rcx
add    %rdx,%rcx
jmpq   *%rcx
leaveq 
retq   
callq  31150 <setupMap>
test   %eax,%eax
jne    3185e <buildMap+0x8e>
xor    %eax,%eax
leaveq 
retq   
movzwl 0x1c(%rdi),%ecx
cmp    $0x8,%cx
jne    317fb <buildMap+0x2b>
leaveq 
retq   
mov    %rdi,%rax
mov    %r15,-0x10(%rbp)
mov    %rdi,%r15
mov    %rax,%rdi
callq  312a0 <checkcmap>
cmp    $0x10,%eax
je     31865 <buildMap+0x95>
mov    (%r15),%rax
mov    0x3b8(%rax),%rdi
mov    %r14,-0x8(%rbp)
mov    %rdi,%r14
mov    %rax,%rdi
callq  85f0 <TIFFFileName@plt>
mov    %rax,%rsi
mov    %r14,%rdi
lea    0x3dfea(%rip),%rdx        # 6f83b <module.62+0x109>
xor    %eax,%eax
callq  85a0 <TIFFWarningExt@plt>
mov    -0x8(%rbp),%r14
jmp    3186d <buildMap+0x9d>
mov    $0x1,%eax
leaveq 
retq   
mov    %r15,%rdi
callq  31310 <cvtcmap>
movzwl 0x1c(%r15),%eax
cmp    $0x8,%ax
jbe    31883 <buildMap+0xb3>
mov    $0x1,%eax
mov    -0x10(%rbp),%r15
leaveq 
retq   
mov    %r15,%rdi
callq  31360 <makecmap>
test   %eax,%eax
jne    31897 <buildMap+0xc7>
xor    %eax,%eax
mov    -0x10(%rbp),%r15
leaveq 
retq   
mov    $0x1,%eax
mov    -0x10(%rbp),%r15
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)
nopl   0x0(%rax)

00000000000318b0 <TIFFInitJPEG>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
lea    0x3e0c7(%rip),%rcx        # 6f986 <module.62+0x254>
cmp    $0x7,%esi
je     318dc <TIFFInitJPEG+0x2c>
lea    0x3e095(%rip),%rdi        # 6f960 <module.62+0x22e>
lea    0x3e0a9(%rip),%rsi        # 6f97b <module.62+0x249>
mov    $0x9b7,%edx
callq  8490 <__assert_fail@plt>
lea    0x48005(%rip),%rsi        # 798e8 <jpegFields>
mov    $0x4,%edx
mov    %rdi,%rax
mov    %r15,-0x10(%rbp)
mov    %rdi,%r15
mov    %rax,%rdi
callq  8520 <_TIFFMergeFields@plt>
test   %eax,%eax
jne    31922 <TIFFInitJPEG+0x72>
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
lea    0x3e085(%rip),%rdx        # 6f993 <module.62+0x261>
lea    0x3e071(%rip),%rsi        # 6f986 <module.62+0x254>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x10(%rbp),%r15
leaveq 
retq   
mov    $0x540,%edi
callq  8440 <_TIFFmalloc@plt>
mov    %rax,0x350(%r15)
test   %rax,%rax
je     31ae7 <TIFFInitJPEG+0x237>
mov    %rax,%rdi
xor    %esi,%esi
mov    $0x540,%edx
callq  88e0 <_TIFFmemset@plt>
mov    0x350(%r15),%rdx
mov    %r15,0x488(%rdx)
mov    0x410(%r15),%rax
mov    %rax,0x4f8(%rdx)
lea    0x3c72(%rip),%rax        # 355e0 <JPEGVGetField>
mov    %rax,0x410(%r15)
mov    0x408(%r15),%rax
mov    %rax,0x500(%rdx)
lea    0x39d6(%rip),%rax        # 35360 <JPEGVSetField>
mov    %rax,0x408(%r15)
mov    0x418(%r15),%rax
mov    %rax,0x508(%rdx)
lea    0x3daa(%rip),%rax        # 35750 <JPEGPrintDir>
mov    %rax,0x418(%r15)
movq   $0x0,0x520(%rdx)
movl   $0x0,0x528(%rdx)
movl   $0x4b,0x52c(%rdx)
movl   $0x0,0x530(%rdx)
movl   $0x3,0x534(%rdx)
movl   $0x0,0x538(%rdx)
lea    0x225f(%rip),%rax        # 33c50 <JPEGFixupTags>
mov    %rax,0x2c0(%r15)
lea    0x22b1(%rip),%rax        # 33cb0 <JPEGSetupDecode>
mov    %rax,0x2c8(%r15)
lea    0x23d3(%rip),%rax        # 33de0 <JPEGPreDecode>
mov    %rax,0x2d0(%r15)
lea    0x1f5(%rip),%rax        # 31c10 <JPEGDecode>
mov    %rax,0x2f8(%r15)
mov    %rax,0x308(%r15)
mov    %rax,0x318(%r15)
lea    0x2c79(%rip),%rax        # 346b0 <JPEGSetupEncode>
mov    %rax,0x2d8(%r15)
lea    0x315b(%rip),%rax        # 34ba0 <JPEGPreEncode>
mov    %rax,0x2e8(%r15)
lea    0x365d(%rip),%rax        # 350b0 <JPEGPostEncode>
mov    %rax,0x2f0(%r15)
lea    0x70f(%rip),%rax        # 32170 <JPEGEncode>
mov    %rax,0x300(%r15)
mov    %rax,0x310(%r15)
mov    %rax,0x320(%r15)
lea    0x3753(%rip),%rax        # 351d0 <JPEGCleanup>
mov    %rax,0x338(%r15)
mov    0x340(%r15),%rax
mov    %rax,0x510(%rdx)
lea    0x3d57(%rip),%rax        # 357f0 <JPEGDefaultStripSize>
mov    %rax,0x340(%r15)
mov    0x348(%r15),%rax
mov    %rax,0x518(%rdx)
lea    0x3dab(%rip),%rax        # 35860 <JPEGDefaultTileSize>
mov    %rax,0x348(%r15)
mov    0x10(%r15),%eax
or     $0x100,%eax
mov    %eax,0x10(%r15)
movl   $0x0,0x290(%rdx)
mov    $0x1,%eax
mov    0x18(%r15),%rcx
test   %rcx,%rcx
je     31b0b <TIFFInitJPEG+0x25b>
mov    -0x10(%rbp),%r15
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
lea    0x3dec4(%rip),%rdx        # 6f9bb <module.62+0x289>
lea    0x3de88(%rip),%rsi        # 6f986 <module.62+0x254>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x10(%rbp),%r15
leaveq 
retq   
movl   $0x7d0,0x528(%rdx)
mov    $0x7d0,%edi
mov    %r14,-0x8(%rbp)
mov    %rdx,%r14
callq  8440 <_TIFFmalloc@plt>
mov    %rax,0x520(%r14)
test   %rax,%rax
jne    31b5a <TIFFInitJPEG+0x2aa>
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
lea    0x3de97(%rip),%rdx        # 6f9d9 <module.62+0x2a7>
lea    0x3de3d(%rip),%rsi        # 6f986 <module.62+0x254>
callq  8a00 <TIFFErrorExt@plt>
mov    -0x8(%rbp),%r14
xor    %eax,%eax
mov    -0x10(%rbp),%r15
leaveq 
retq   
mov    %rax,%rdi
mov    $0x7d0,%edx
xor    %esi,%esi
callq  88e0 <_TIFFmemset@plt>
mov    $0x1,%eax
mov    -0x8(%rbp),%r14
mov    -0x10(%rbp),%r15
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

0000000000031b80 <TIFFJPEGIsFullStripRequired>:
push   %rbp
mov    %rsp,%rbp
sub    $0x550,%rsp
mov    %r15,-0x8(%rbp)
mov    %rdi,%r15
lea    -0x548(%rbp),%rdi
xor    %esi,%esi
mov    $0x540,%edx
callq  8550 <memset@plt>
mov    %r15,-0xc0(%rbp)
lea    -0x548(%rbp),%r15
mov    %r15,%rdi
callq  32ac0 <TIFFjpeg_create_decompress>
mov    %r15,%rdi
callq  33460 <TIFFjpeg_data_src>
mov    $0x1,%esi
mov    %r15,%rdi
callq  32df0 <TIFFjpeg_read_header>
cmp    $0x1,%eax
jne    31bf1 <TIFFJPEGIsFullStripRequired+0x71>
mov    %r15,%rdi
callq  32e40 <TIFFjpeg_has_multiple_scans>
mov    %r15,%rdi
mov    %rax,%r15
callq  33020 <TIFFjpeg_destroy>
mov    %r15,%rax
mov    -0x8(%rbp),%r15
leaveq 
retq   
mov    %r15,%rdi
callq  33020 <TIFFjpeg_destroy>
xor    %eax,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   0x0(%rax)

0000000000031c10 <JPEGDecode>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    0x388(%rdi),%rax
mov    0x350(%rdi),%r8
mov    %rax,0x450(%r8)
mov    0x390(%rdi),%rax
mov    %rax,0x458(%r8)
xor    %eax,%eax
mov    0x498(%r8),%rcx
test   %rcx,%rcx
jne    31c4b <JPEGDecode+0x3b>
leaveq 
retq   
mov    %rdx,%rax
mov    %r12,%r9
mov    %rdi,%r12
mov    %rbx,%r10
mov    %r8,%rbx
mov    %r13,%r8
mov    %rsi,%r13
mov    0x498(%rbx),%r11
cqto   
mov    %rax,%rsi
idiv   %r11
test   %rdx,%rdx
jne    31c79 <JPEGDecode+0x69>
mov    %rsi,%rax
jmp    31cca <JPEGDecode+0xba>
xor    %eax,%eax
mov    0x3b8(%r12),%rdi
mov    (%r12),%r11
lea    0x3dd75(%rip),%rdx        # 6fa03 <module.62+0x2d1>
mov    %r10,-0x8(%rbp)
mov    %r9,-0x10(%rbp)
mov    %r8,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rsi,%r14
mov    %r11,%rsi
mov    %rcx,%r15
callq  85a0 <TIFFWarningExt@plt>
mov    %r14,%rax
mov    %r15,%rcx
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r8
mov    -0x10(%rbp),%r9
mov    -0x8(%rbp),%r10
cqto   
idiv   %rcx
mov    0x34(%rbx),%ecx
cmp    %rax,%rcx
jge    31cda <JPEGDecode+0xca>
mov    %rcx,%rax
mov    $0x1,%edx
test   %rax,%rax
je     31d1d <JPEGDecode+0x10d>
lea    -0x30(%rbp),%rcx
mov    %r10,-0x8(%rbp)
mov    %r9,-0x10(%rbp)
mov    %r8,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rax,%r14
mov    %rcx,%r15
jmp    31d82 <JPEGDecode+0x172>
mov    $0x1,%edx
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r8
mov    -0x10(%rbp),%r9
mov    -0x8(%rbp),%r10
mov    0x450(%rbx),%rax
mov    %rax,0x388(%r12)
mov    0x458(%rbx),%rax
mov    %rax,0x390(%r12)
mov    0x8c(%rbx),%eax
cmp    0xa8(%rbx),%eax
jbe    31dae <JPEGDecode+0x19e>
mov    %rdx,%rax
mov    %r10,%rbx
mov    %r9,%r12
mov    %r8,%r13
leaveq 
retq   
mov    0x27c(%r12),%eax
add    $0x1,%eax
mov    %eax,0x27c(%r12)
mov    0x498(%rbx),%rax
add    $0xffffffffffffffff,%r14
test   %r14,%r14
jle    31d04 <JPEGDecode+0xf4>
add    %rax,%r13
mov    $0x1,%edx
mov    %r13,-0x30(%rbp)
mov    %rbx,%rdi
mov    %r15,%rsi
callq  32f00 <TIFFjpeg_read_scanlines>
cmp    $0x1,%eax
je     31d57 <JPEGDecode+0x147>
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
xor    %eax,%eax
leaveq 
retq   
mov    %rbx,%rdi
mov    %r10,%rbx
mov    %r9,%r12
mov    %r8,%r13
callq  32fa0 <TIFFjpeg_finish_decompress>
test   %eax,%eax
je     31dca <JPEGDecode+0x1ba>
mov    $0x1,%eax
leaveq 
retq   
xor    %eax,%eax
leaveq 
retq   
xchg   %ax,%ax

0000000000031dd0 <JPEGDecodeRaw>:
push   %rbp
mov    %rsp,%rbp
sub    $0x90,%rsp
mov    0x5c(%rdi),%eax
mov    0x27c(%rdi),%ecx
sub    %ecx,%eax
mov    0x350(%rdi),%r11
mov    %r11,-0x80(%rbp)
mov    0x34(%r11),%ecx
cmp    %ecx,%eax
jb     31e2e <JPEGDecodeRaw+0x5e>
xor    %eax,%eax
test   %rcx,%rcx
jg     31e42 <JPEGDecodeRaw+0x72>
mov    %r14,%rsi
mov    %r13,%r14
mov    %r12,%r13
mov    %r11,%r12
mov    $0x1,%eax
mov    0x8c(%r12),%ecx
cmp    0xa8(%r12),%ecx
jbe    31e98 <JPEGDecodeRaw+0xc8>
mov    %r13,%r12
mov    %r14,%r13
mov    %rsi,%r14
leaveq 
retq   
mov    0x10(%rdi),%r8d
and    $0x400,%r8d
test   %r8d,%r8d
jne    31df9 <JPEGDecodeRaw+0x29>
mov    %eax,%ecx
jmp    31df9 <JPEGDecodeRaw+0x29>
mov    0x130(%r11),%r8
mov    0x8c(%r8),%r8d
mov    %r8,-0x68(%rbp)
lea    -0x1(%r8),%r9d
movslq 0x4f4(%r11),%r10
mov    %r10,-0x60(%rbp)
imul   %r10d,%r9d
mov    %r15,-0x28(%rbp)
mov    %r9,-0x50(%rbp)
lea    0x4a0(%r11),%r15
mov    %rdi,-0x38(%rbp)
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %rdx,%rbx
mov    %r11,%r12
mov    %r9,%r13
jmpq   31f8b <JPEGDecodeRaw+0x1bb>
mov    %r12,%rdi
mov    %rsi,%r12
callq  32fa0 <TIFFjpeg_finish_decompress>
test   %eax,%eax
je     31fe7 <JPEGDecodeRaw+0x217>
mov    %r13,%rcx
mov    %r14,%r13
mov    %r12,%r14
mov    %rcx,%r12
mov    $0x1,%eax
leaveq 
retq   
movzbl (%rcx),%ebx
movslq %edx,%rdi
mov    %bl,(%rsi,%rdi,1)
add    $0x1,%rcx
add    $0x1,%edx
cmp    %r11d,%edx
jl     31ebe <JPEGDecodeRaw+0xee>
add    %r10,%rsi
mov    -0x70(%rbp),%rdx
lea    -0x1(%rdx),%r8d
test   %r8d,%r8d
jne    31ff7 <JPEGDecodeRaw+0x227>
mov    -0x48(%rbp),%rbx
mov    -0x78(%rbp),%rdx
add    $0x1,%r9d
mov    -0x58(%rbp),%rcx
lea    (%r11,%rcx,1),%edi
mov    -0x50(%rbp),%r13
mov    -0x80(%rbp),%r12
mov    -0x68(%rbp),%r8
mov    -0x40(%rbp),%rsi
cmp    %edx,%r9d
jl     32003 <JPEGDecodeRaw+0x233>
mov    -0x90(%rbp),%rcx
lea    0x1(%rcx),%r9d
mov    -0x88(%rbp),%rcx
add    $0x60,%rcx
movslq 0x38(%r12),%rdx
cmp    %r9d,%edx
jg     3204b <JPEGDecodeRaw+0x27b>
movslq 0x4f0(%r12),%rcx
add    $0x1,%ecx
mov    %ecx,0x4f0(%r12)
movzwl 0x494(%r12),%ecx
mov    -0x38(%rbp),%rdx
add    0x27c(%rdx),%ecx
mov    %ecx,0x27c(%rdx)
mov    0x498(%r12),%rdi
movzwl 0x494(%r12),%edx
mov    -0x30(%rbp),%rcx
sub    %rdx,%rcx
test   %rcx,%rcx
jle    32070 <JPEGDecodeRaw+0x2a0>
sub    %rdi,%rbx
add    %rdi,%rsi
mov    %rsi,-0x40(%rbp)
mov    %rcx,-0x30(%rbp)
mov    %rbx,-0x48(%rbp)
mov    0x498(%r12),%rcx
cmp    %rbx,%rcx
jle    32089 <JPEGDecodeRaw+0x2b9>
xor    %ebx,%ebx
mov    -0x38(%rbp),%rcx
mov    0x3b8(%rcx),%rdi
mov    %rax,%r15
mov    %rbx,%rax
lea    0x3da6c(%rip),%rdx        # 6fa2e <module.62+0x2fc>
lea    0x3da57(%rip),%rsi        # 6fa20 <module.62+0x2ee>
callq  8a00 <TIFFErrorExt@plt>
mov    %r15,%rax
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x28(%rbp),%r15
leaveq 
retq   
mov    %r13,%rcx
mov    %r14,%r13
mov    %r12,%r14
mov    %rcx,%r12
xor    %eax,%eax
leaveq 
retq   
mov    %r8,-0x70(%rbp)
mov    %rax,%rdx
jmpq   31ece <JPEGDecodeRaw+0xfe>
mov    (%r15,%r14,8),%rcx
mov    0x4f0(%r12),%r12d
imul   %edx,%r12d
add    %r9d,%r12d
movslq %r12d,%r12
mov    (%rcx,%r12,8),%rcx
lea    0x0(%r13,%rdi,1),%r12d
add    %r11d,%r12d
mov    %r12d,%r12d
cmp    %r12,%rbx
jl     320e6 <JPEGDecodeRaw+0x316>
cmp    $0x1,%r11d
movslq %edi,%r12
lea    (%rsi,%r12,1),%rsi
jne    32125 <JPEGDecodeRaw+0x355>
mov    %rdi,-0x58(%rbp)
jmpq   3213f <JPEGDecodeRaw+0x36f>
movslq 0xc(%rcx),%rdx
mov    %rdx,-0x78(%rbp)
movslq %r9d,%r14
movslq 0x8(%rcx),%r11
mov    %r9,-0x90(%rbp)
mov    %rcx,-0x88(%rbp)
mov    %rax,%r9
jmpq   31f0b <JPEGDecodeRaw+0x13b>
mov    -0x20(%rbp),%rsi
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%rbx
mov    -0x28(%rbp),%r15
jmpq   31e0c <JPEGDecodeRaw+0x3c>
movslq 0x4f0(%r12),%rcx
cmp    $0x7,%ecx
jle    320d3 <JPEGDecodeRaw+0x303>
movslq 0x19c(%r12),%r14
shl    $0x3,%r14d
mov    %r12,%rdi
mov    %r15,%rsi
mov    %r14,%rdx
callq  32f50 <TIFFjpeg_read_raw_data>
cmp    %r14d,%eax
jne    32149 <JPEGDecodeRaw+0x379>
movl   $0x0,0x4f0(%r12)
xor    %eax,%eax
mov    -0x60(%rbp),%r10
mov    -0x68(%rbp),%r8
mov    -0x40(%rbp),%rsi
mov    0x130(%r12),%rcx
mov    %rax,%rdi
mov    %rdi,%r9
jmpq   31f2a <JPEGDecodeRaw+0x15a>
xor    %ebx,%ebx
mov    -0x38(%rbp),%rcx
mov    0x3b8(%rcx),%rdi
mov    %rax,%r15
mov    %rbx,%rax
lea    0x3d960(%rip),%rdx        # 6fa60 <module.62+0x32e>
lea    0x3d919(%rip),%rsi        # 6fa20 <module.62+0x2ee>
callq  8a00 <TIFFErrorExt@plt>
mov    %r15,%rax
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x28(%rbp),%r15
leaveq 
retq   
mov    %rdi,-0x58(%rbp)
jmpq   31ede <JPEGDecodeRaw+0x10e>
movzbl (%rcx),%edi
mov    %dil,(%rsi)
add    $0x1,%rcx
add    %r10,%rsi
add    $0xffffffff,%r8d
test   %r8d,%r8d
jne    3212e <JPEGDecodeRaw+0x35e>
jmpq   31eef <JPEGDecodeRaw+0x11f>
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
xor    %eax,%eax
mov    -0x28(%rbp),%r15
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   0x0(%rax)

0000000000032170 <JPEGEncode>:
push   %rbp
mov    %rsp,%rbp
sub    $0x40,%rsp
lea    0x3d939(%rip),%rcx        # 6fab8 <module.62+0x386>
mov    0x350(%rdi),%rax
test   %rax,%rax
jne    321a3 <JPEGEncode+0x33>
lea    0x3d91b(%rip),%rdi        # 6faad <module.62+0x37b>
lea    0x3d7e2(%rip),%rsi        # 6f97b <module.62+0x249>
mov    $0x7fd,%edx
callq  8490 <__assert_fail@plt>
mov    %r14,%r8
mov    %rax,%r14
mov    %rdx,%rax
mov    %r13,%r9
mov    %rdi,%r13
mov    %r12,%r10
mov    %rsi,%r12
mov    %r15,%r11
mov    0x498(%r14),%rcx
mov    0x498(%r14),%rsi
cqto   
mov    %rax,%r15
idiv   %rsi
test   %rdx,%rdx
jne    321db <JPEGEncode+0x6b>
mov    %r15,%rax
jmp    32225 <JPEGEncode+0xb5>
xor    %eax,%eax
mov    0x3b8(%r13),%rdi
mov    0x0(%r13),%rsi
lea    0x3d8d4(%rip),%rdx        # 6fac3 <module.62+0x391>
mov    %rbx,-0x10(%rbp)
mov    %r10,-0x18(%rbp)
mov    %r9,-0x20(%rbp)
mov    %r8,-0x28(%rbp)
mov    %r11,-0x30(%rbp)
mov    %rcx,%rbx
callq  85a0 <TIFFWarningExt@plt>
mov    %r15,%rax
mov    %rbx,%rcx
mov    -0x30(%rbp),%r11
mov    -0x28(%rbp),%r8
mov    -0x20(%rbp),%r9
mov    -0x18(%rbp),%r10
mov    -0x10(%rbp),%rbx
cqto   
idiv   %rcx
mov    0x10(%r13),%ecx
and    $0x400,%ecx
test   %ecx,%ecx
je     3226e <JPEGEncode+0xfe>
mov    %rax,%r15
xor    %ecx,%ecx
lea    -0x38(%rbp),%rsi
mov    $0x1,%edx
movslq 0x58(%r14),%rax
cmp    $0xc,%eax
je     3228b <JPEGEncode+0x11b>
mov    %rbx,-0x8(%rbp)
mov    %r10,-0x10(%rbp)
mov    %r9,-0x18(%rbp)
mov    %r8,-0x20(%rbp)
mov    %r11,-0x28(%rbp)
mov    %rcx,%rax
mov    %rax,%r8
jmpq   32333 <JPEGEncode+0x1c3>
mov    0x27c(%r13),%esi
lea    (%rsi,%rax,1),%rdx
mov    0x5c(%r13),%ecx
cmp    %rdx,%rcx
jl     32362 <JPEGEncode+0x1f2>
mov    %rax,%r15
jmp    3223b <JPEGEncode+0xcb>
mov    0x498(%r14),%rax
add    %rax,%rax
mov    $0x3,%ecx
cqto   
idiv   %rcx
movslq %eax,%rcx
lea    (%rcx,%rcx,1),%rdi
mov    %rbx,-0x8(%rbp)
mov    %r10,-0x10(%rbp)
mov    %r9,-0x18(%rbp)
mov    %r8,-0x20(%rbp)
mov    %r11,-0x28(%rbp)
mov    %rax,%rbx
callq  8440 <_TIFFmalloc@plt>
test   %rax,%rax
je     3236c <JPEGEncode+0x1fc>
mov    %rbx,%r8
xor    %ecx,%ecx
lea    -0x38(%rbp),%rsi
mov    $0x1,%edx
jmp    32333 <JPEGEncode+0x1c3>
movslq 0x58(%r14),%rdi
cmp    $0xc,%edi
je     323a0 <JPEGEncode+0x230>
mov    %r12,-0x38(%rbp)
mov    %rax,%rbx
mov    %r14,%rdi
callq  32cd0 <TIFFjpeg_write_scanlines>
cmp    $0x1,%eax
jne    323b1 <JPEGEncode+0x241>
add    $0xffffffffffffffff,%r15
test   %r15,%r15
jle    3231a <JPEGEncode+0x1aa>
mov    0x27c(%r13),%eax
add    $0x1,%eax
mov    %eax,0x27c(%r13)
add    0x498(%r14),%r12
mov    %rbx,%rax
mov    -0x30(%rbp),%r8
xor    %ecx,%ecx
lea    -0x38(%rbp),%rsi
mov    $0x1,%edx
mov    %r8,-0x30(%rbp)
test   %r15,%r15
jg     322db <JPEGEncode+0x16b>
movslq 0x58(%r14),%rcx
cmp    $0xc,%ecx
je     323c9 <JPEGEncode+0x259>
mov    %rdx,%rax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
sub    %esi,%ecx
mov    %ecx,%r15d
jmpq   3223b <JPEGEncode+0xcb>
xor    %eax,%eax
mov    0x3b8(%r13),%rdi
lea    0x3d765(%rip),%rdx        # 6fae1 <module.62+0x3af>
lea    0x3d735(%rip),%rsi        # 6fab8 <module.62+0x386>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
mov    %r8,%rdi
shr    $0x1f,%edi
add    %r8d,%edi
sar    %edi
mov    %rax,-0x38(%rbp)
jmp    32422 <JPEGEncode+0x2b2>
xor    %eax,%eax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
mov    %rax,%rdi
mov    %rdx,%r15
callq  8bb0 <_TIFFfree@plt>
mov    %r15,%rax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
lea    (%rcx,%rcx,1),%r10d
lea    (%rcx,%r10,1),%ebx
movslq %ebx,%r9
movzbl 0x1(%r12,%r9,1),%ebx
shr    $0x4,%ebx
movzbl (%r12,%r9,1),%r8d
shl    $0x4,%r8d
add    %r8d,%ebx
movslq %r10d,%r8
mov    %bl,(%rax,%r8,2)
movzbl 0x2(%r12,%r9,1),%ebx
mov    %bl,0x1(%rax,%r8,2)
add    $0x1,%ecx
cmp    %edi,%ecx
jl     323ed <JPEGEncode+0x27d>
jmpq   322ec <JPEGEncode+0x17c>
nopl   0x0(%rax,%rax,1)

0000000000032430 <JPEGEncodeRaw>:
push   %rbp
mov    %rsp,%rbp
sub    $0x90,%rsp
mov    0x350(%rdi),%r10
movslq 0x4f4(%r10),%rcx
mov    %rcx,-0x68(%rbp)
test   %r10,%r10
jne    32471 <JPEGEncodeRaw+0x41>
lea    0x3d654(%rip),%rdi        # 6faad <module.62+0x37b>
lea    0x3d51b(%rip),%rsi        # 6f97b <module.62+0x249>
mov    $0x84f,%edx
lea    0x3d68f(%rip),%rcx        # 6fafb <module.62+0x3c9>
callq  8490 <__assert_fail@plt>
movzwl 0x492(%r10),%r8d
mov    0x30(%r10),%eax
lea    -0x1(%r8,%rax,1),%eax
mov    %r13,%r9
mov    %r10,%r13
mov    %rdi,%r10
mov    %rbx,%rdi
mov    %rdx,%rbx
mov    %r12,%r11
mov    %rsi,%r12
mov    %r15,%rsi
mov    %r14,%rdx
mov    %r8,%r14
mov    %rdx,%r8
xor    %edx,%edx
div    %r14d
movzwl 0x494(%r13),%r14d
movzwl 0x492(%r13),%edx
imul   %edx,%r14d
lea    0x2(%r14),%r15d
imul   %eax,%r15d
imul   0x58(%r13),%r15d
movzwl 0x494(%r13),%r14d
lea    0x7(%r15),%eax
shr    $0x3,%eax
mov    %eax,%r15d
mov    %rbx,%rax
mov    %r15,-0x58(%rbp)
cqto   
mov    %rax,%rbx
idiv   %r15
test   %rdx,%rdx
jne    324f4 <JPEGEncodeRaw+0xc4>
mov    %rbx,%rax
jmp    32555 <JPEGEncodeRaw+0x125>
xor    %eax,%eax
mov    0x3b8(%r10),%rcx
mov    %r10,-0x90(%rbp)
mov    (%r10),%r10
mov    %rsi,-0x88(%rbp)
lea    0x3d5ae(%rip),%rdx        # 6fac3 <module.62+0x391>
mov    %rdi,-0x50(%rbp)
mov    %r11,-0x60(%rbp)
mov    %r9,-0x78(%rbp)
mov    %r8,-0x80(%rbp)
mov    %r10,%rsi
mov    %rcx,%rdi
callq  85a0 <TIFFWarningExt@plt>
mov    %rbx,%rax
mov    -0x80(%rbp),%r8
mov    -0x78(%rbp),%r9
mov    -0x60(%rbp),%r11
mov    -0x50(%rbp),%rdi
mov    -0x68(%rbp),%rcx
mov    -0x88(%rbp),%rsi
mov    -0x90(%rbp),%r10
mov    0x68(%r13),%rdx
mov    0x8c(%rdx),%ebx
mov    %r10,-0x48(%rbp)
mov    %rbx,-0x78(%rbp)
cqto   
idiv   %r15
imul   %rax,%r14
lea    0x4a0(%r13),%r15
xor    %r10d,%r10d
mov    %rsi,-0x28(%rbp)
mov    %rdi,-0x8(%rbp)
mov    %r11,-0x10(%rbp)
mov    %r9,-0x18(%rbp)
mov    %r8,-0x20(%rbp)
jmpq   32660 <JPEGEncodeRaw+0x230>
movzbl -0x1(%rax),%edi
mov    %dil,(%rax)
add    $0x1,%rax
add    $0x1,%ecx
cmp    %ecx,%esi
jg     32593 <JPEGEncodeRaw+0x163>
add    $0x1,%r8d
mov    -0x38(%rbp),%rdi
lea    (%rdi,%rdx,1),%esi
mov    -0x78(%rbp),%rbx
mov    -0x80(%rbp),%rax
mov    -0x68(%rbp),%rcx
cmp    %eax,%r8d
jl     32688 <JPEGEncodeRaw+0x258>
mov    -0x90(%rbp),%rax
lea    0x1(%rax),%r9d
mov    -0x88(%rbp),%rax
lea    0x60(%rax),%r8
movslq 0x5c(%r13),%rax
cmp    %r9d,%eax
jg     326b1 <JPEGEncodeRaw+0x281>
movslq 0x4f0(%r13),%rax
add    $0x1,%eax
mov    %eax,0x4f0(%r13)
cmp    $0x7,%eax
jle    32632 <JPEGEncodeRaw+0x202>
movslq 0x160(%r13),%r14
shl    $0x3,%r14d
mov    %r13,%rdi
mov    %r15,%rsi
mov    %r14,%rdx
callq  32d20 <TIFFjpeg_write_raw_data>
cmp    %r14d,%eax
jne    326ef <JPEGEncodeRaw+0x2bf>
movl   $0x0,0x4f0(%r13)
xor    %r10d,%r10d
mov    -0x68(%rbp),%rcx
movzwl 0x494(%r13),%eax
mov    -0x48(%rbp),%rdx
add    0x27c(%rdx),%eax
mov    %eax,0x27c(%rdx)
movzwl 0x494(%r13),%eax
mov    -0x40(%rbp),%r14
sub    %rax,%r14
mov    -0x58(%rbp),%rax
add    %rax,%r12
mov    %r12,-0x50(%rbp)
test   %r14,%r14
jg     32707 <JPEGEncodeRaw+0x2d7>
mov    $0x1,%eax
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x28(%rbp),%r15
leaveq 
retq   
mov    (%r15,%r11,8),%rdx
imul   0x4f0(%r13),%eax
cmp    $0x1,%edi
lea    (%r8,%rax,1),%eax
movslq %eax,%rax
mov    (%rdx,%rax,8),%rax
movslq %esi,%rdx
lea    (%r12,%rdx,1),%rdx
jne    3271a <JPEGEncodeRaw+0x2ea>
mov    %rsi,-0x70(%rbp)
jmp    32730 <JPEGEncodeRaw+0x300>
movslq 0xc(%r8),%rax
mov    %rax,-0x80(%rbp)
movslq %r9d,%r11
movslq 0x8(%r8),%rdi
mov    %rdi,-0x38(%rbp)
mov    %rdi,%r14
imul   %ebx,%r14d
movslq 0x1c(%r8),%rdx
shl    $0x3,%edx
sub    %r14d,%edx
mov    %r9,-0x90(%rbp)
mov    %r8,-0x88(%rbp)
mov    %rdx,-0x30(%rbp)
mov    %r10,%r8
jmpq   325bc <JPEGEncodeRaw+0x18c>
xor    %eax,%eax
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x28(%rbp),%r15
leaveq 
retq   
mov    0x68(%r13),%r8
mov    %r14,-0x40(%rbp)
mov    %r10,%rsi
mov    %rsi,%r9
jmpq   325db <JPEGEncodeRaw+0x1ab>
mov    %rsi,-0x60(%rbp)
jmp    3276b <JPEGEncodeRaw+0x33b>
movzbl (%rdx),%esi
mov    %sil,(%rax)
add    %rcx,%rdx
add    $0x1,%rax
add    $0xffffffff,%ebx
test   %ebx,%ebx
jne    32720 <JPEGEncodeRaw+0x2f0>
mov    -0x70(%rbp),%rdx
mov    -0x50(%rbp),%r12
mov    -0x30(%rbp),%rsi
mov    %r10,%rcx
jmpq   325a1 <JPEGEncodeRaw+0x171>
movslq %ecx,%rsi
movzbl (%rdx,%rsi,1),%esi
mov    %sil,(%rax)
add    $0x1,%ecx
add    $0x1,%rax
cmp    %edi,%ecx
jl     32748 <JPEGEncodeRaw+0x318>
mov    -0x68(%rbp),%rcx
add    %rcx,%rdx
mov    -0x70(%rbp),%rcx
lea    -0x1(%rcx),%ebx
test   %ebx,%ebx
jne    32783 <JPEGEncodeRaw+0x353>
mov    -0x60(%rbp),%rdx
mov    -0x50(%rbp),%r12
mov    -0x30(%rbp),%rsi
mov    %r10,%rcx
jmpq   325a1 <JPEGEncodeRaw+0x171>
mov    %rbx,-0x70(%rbp)
mov    %r10,%rcx
jmp    32759 <JPEGEncodeRaw+0x329>
nopl   0x0(%rax)

0000000000032790 <JPEGInitializeLibJPEG>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    $0x1,%eax
xor    %edx,%edx
mov    0x350(%rdi),%rcx
movslq 0x290(%rcx),%rdi
test   %edi,%edi
jne    327c9 <JPEGInitializeLibJPEG+0x39>
test   %esi,%esi
jne    327db <JPEGInitializeLibJPEG+0x4b>
mov    %rcx,%rdi
mov    %rcx,-0x10(%rbp)
callq  32a30 <TIFFjpeg_create_compress>
test   %eax,%eax
jne    32804 <JPEGInitializeLibJPEG+0x74>
xor    %eax,%eax
leaveq 
retq   
test   %esi,%esi
je     32836 <JPEGInitializeLibJPEG+0xa6>
mov    %rax,%rdx
test   %rdx,%rdx
jne    32871 <JPEGInitializeLibJPEG+0xe1>
leaveq 
retq   
mov    %rcx,%rdi
mov    %rcx,-0x8(%rbp)
callq  32ac0 <TIFFjpeg_create_decompress>
test   %eax,%eax
je     3287b <JPEGInitializeLibJPEG+0xeb>
mov    -0x8(%rbp),%rax
movl   $0x1,0x290(%rax)
mov    $0x1,%eax
leaveq 
retq   
mov    -0x10(%rbp),%rax
mov    0x8(%rax),%rcx
mov    0x58(%rcx),%rcx
test   %rcx,%rcx
jle    327f3 <JPEGInitializeLibJPEG+0x63>
lea    0x3d2ed(%rip),%rdi        # 6fb09 <module.62+0x3d7>
mov    %r15,-0x10(%rbp)
mov    %rax,%r15
callq  8040 <getenv@plt>
test   %rax,%rax
je     3287f <JPEGInitializeLibJPEG+0xef>
mov    %r15,%rax
mov    -0x10(%rbp),%r15
jmp    327f3 <JPEGInitializeLibJPEG+0x63>
movslq 0x20(%rcx),%rdi
test   %edi,%edi
je     327d0 <JPEGInitializeLibJPEG+0x40>
mov    %rcx,%rdi
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rcx,%r14
mov    %rsi,%r15
callq  33020 <TIFFjpeg_destroy>
mov    %r14,%rcx
mov    %r15,%rsi
movl   $0x0,0x290(%rcx)
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
jmpq   327b1 <JPEGInitializeLibJPEG+0x21>
movslq 0x20(%rcx),%rdx
test   %edx,%edx
je     3289b <JPEGInitializeLibJPEG+0x10b>
leaveq 
retq   
xor    %eax,%eax
leaveq 
retq   
mov    0x8(%r15),%rcx
mov    0x58(%rcx),%rax
cmp    $0x9fffff,%rax
jle    328b9 <JPEGInitializeLibJPEG+0x129>
mov    %r15,%rax
mov    -0x10(%rbp),%r15
jmpq   327f3 <JPEGInitializeLibJPEG+0x63>
mov    %rcx,%rdi
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rsi,%r14
mov    %rcx,%r15
callq  33020 <TIFFjpeg_destroy>
mov    %r15,%rcx
mov    %r14,%rsi
jmp    3285a <JPEGInitializeLibJPEG+0xca>
movq   $0xa00000,0x58(%rcx)
mov    %r15,%rax
mov    -0x10(%rbp),%r15
jmpq   327f3 <JPEGInitializeLibJPEG+0x63>
nopl   (%rax)

00000000000328d0 <DecodeRowError>:
push   %rbp
mov    %rsp,%rbp
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
lea    0x3d22d(%rip),%rsi        # 6fb11 <module.62+0x3df>
lea    0x3d237(%rip),%rdx        # 6fb22 <module.62+0x3f0>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nop

0000000000032900 <TIFFjpeg_error_exit>:
push   %rbp
mov    %rsp,%rbp
sub    $0xd0,%rsp
mov    (%rdi),%rax
mov    0x18(%rax),%rax
lea    -0xc8(%rbp),%r12
mov    %rdi,%rbx
mov    %r12,%rsi
callq  *%rax
xor    %eax,%eax
mov    0x488(%rbx),%rcx
mov    0x3b8(%rcx),%rdi
mov    %r12,%rcx
lea    0x3d280(%rip),%rsi        # 6fbbb <module.62+0x489>
lea    0x3d281(%rip),%rdx        # 6fbc3 <module.62+0x491>
callq  8a00 <TIFFErrorExt@plt>
mov    %rbx,%rdi
callq  81c0 <jpeg_abort@plt>
lea    0x340(%rbx),%rdi
mov    $0x1,%esi
callq  8a40 <longjmp@plt>

0000000000032960 <TIFFjpeg_output_message>:
push   %rbp
mov    %rsp,%rbp
sub    $0xd0,%rsp
mov    %r15,-0x8(%rbp)
mov    (%rdi),%rax
mov    0x18(%rax),%rax
lea    -0xd0(%rbp),%rsi
mov    %rdi,%r15
callq  *%rax
xor    %eax,%eax
mov    0x488(%r15),%rcx
mov    0x3b8(%rcx),%rdi
lea    0x3d222(%rip),%rsi        # 6fbbb <module.62+0x489>
lea    0x3d223(%rip),%rdx        # 6fbc3 <module.62+0x491>
lea    -0xd0(%rbp),%rcx
callq  85a0 <TIFFWarningExt@plt>
mov    -0x8(%rbp),%r15
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   (%rax)

00000000000329c0 <TIFFjpeg_progress_monitor>:
push   %rbp
mov    %rsp,%rbp
movslq 0x20(%rdi),%rax
test   %eax,%eax
jne    329ce <TIFFjpeg_progress_monitor+0xe>
leaveq 
retq   
movslq 0xac(%rdi),%rcx
movslq 0x53c(%rdi),%r8
cmp    %ecx,%r8d
jle    329e3 <TIFFjpeg_progress_monitor+0x23>
leaveq 
retq   
xor    %eax,%eax
mov    0x488(%rdi),%rdx
mov    0x3b8(%rdx),%rbx
mov    %rbx,%r9
mov    %rdi,%rbx
mov    %r9,%rdi
lea    0x3d1c3(%rip),%rsi        # 6fbc6 <module.62+0x494>
lea    0x3d1d6(%rip),%rdx        # 6fbe0 <module.62+0x4ae>
callq  8a00 <TIFFErrorExt@plt>
mov    %rbx,%rdi
callq  81c0 <jpeg_abort@plt>
lea    0x340(%rbx),%rdi
mov    $0x1,%esi
callq  8a40 <longjmp@plt>
nopl   0x0(%rax,%rax,1)

0000000000032a30 <TIFFjpeg_create_compress>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rdi,%r14
lea    0x298(%r14),%r15
mov    %r15,%rdi
callq  89f0 <jpeg_std_error@plt>
mov    %rax,(%r14)
lea    -0x15c(%rip),%rax        # 32900 <TIFFjpeg_error_exit>
mov    %rax,(%r15)
lea    -0x106(%rip),%rax        # 32960 <TIFFjpeg_output_message>
mov    %rax,0x2a8(%r14)
movq   $0x0,0x18(%r14)
lea    0x340(%r14),%rdi
callq  8630 <_setjmp@plt>
test   %eax,%eax
je     32a91 <TIFFjpeg_create_compress+0x61>
xor    %eax,%eax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
mov    %r14,%rdi
mov    $0x50,%esi
mov    $0x248,%edx
callq  89c0 <jpeg_CreateCompress@plt>
mov    $0x1,%eax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   (%rax)

0000000000032ac0 <TIFFjpeg_create_decompress>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rdi,%r14
lea    0x298(%r14),%r15
mov    %r15,%rdi
callq  89f0 <jpeg_std_error@plt>
mov    %rax,(%r14)
lea    -0x1ec(%rip),%rax        # 32900 <TIFFjpeg_error_exit>
mov    %rax,(%r15)
lea    -0x196(%rip),%rax        # 32960 <TIFFjpeg_output_message>
mov    %rax,0x2a8(%r14)
movq   $0x0,0x18(%r14)
lea    0x340(%r14),%rdi
callq  8630 <_setjmp@plt>
test   %eax,%eax
je     32b21 <TIFFjpeg_create_decompress+0x61>
xor    %eax,%eax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
mov    %r14,%rdi
mov    $0x50,%esi
mov    $0x290,%edx
callq  87a0 <jpeg_CreateDecompress@plt>
mov    $0x1,%eax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   (%rax)

0000000000032b50 <TIFFjpeg_set_defaults>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x8(%rbp)
mov    %rdi,%r15
lea    0x340(%r15),%rdi
callq  8630 <_setjmp@plt>
test   %eax,%eax
je     32b77 <TIFFjpeg_set_defaults+0x27>
xor    %eax,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
mov    %r15,%rdi
callq  8b20 <jpeg_set_defaults@plt>
mov    $0x1,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

0000000000032b90 <TIFFjpeg_set_colorspace>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x10(%rbp)
mov    %rsi,-0x8(%rbp)
mov    %rdi,%r15
lea    0x340(%r15),%rdi
callq  8630 <_setjmp@plt>
test   %eax,%eax
je     32bbb <TIFFjpeg_set_colorspace+0x2b>
xor    %eax,%eax
mov    -0x10(%rbp),%r15
leaveq 
retq   
mov    %r15,%rdi
mov    -0x8(%rbp),%rsi
callq  88b0 <jpeg_set_colorspace@plt>
mov    $0x1,%eax
mov    -0x10(%rbp),%r15
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   (%rax)

0000000000032be0 <TIFFjpeg_set_quality>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %r15,-0x18(%rbp)
mov    %rsi,-0x8(%rbp)
mov    %rdx,-0x10(%rbp)
mov    %rdi,%r15
lea    0x340(%r15),%rdi
callq  8630 <_setjmp@plt>
test   %eax,%eax
je     32c0f <TIFFjpeg_set_quality+0x2f>
xor    %eax,%eax
mov    -0x18(%rbp),%r15
leaveq 
retq   
mov    %r15,%rdi
mov    -0x10(%rbp),%rdx
mov    -0x8(%rbp),%rsi
callq  8090 <jpeg_set_quality@plt>
mov    $0x1,%eax
mov    -0x18(%rbp),%r15
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

0000000000032c30 <TIFFjpeg_suppress_tables>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x10(%rbp)
mov    %rsi,-0x8(%rbp)
mov    %rdi,%r15
lea    0x340(%r15),%rdi
callq  8630 <_setjmp@plt>
test   %eax,%eax
je     32c5b <TIFFjpeg_suppress_tables+0x2b>
xor    %eax,%eax
mov    -0x10(%rbp),%r15
leaveq 
retq   
mov    %r15,%rdi
mov    -0x8(%rbp),%rsi
callq  82c0 <jpeg_suppress_tables@plt>
mov    $0x1,%eax
mov    -0x10(%rbp),%r15
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   (%rax)

0000000000032c80 <TIFFjpeg_start_compress>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x10(%rbp)
mov    %rsi,-0x8(%rbp)
mov    %rdi,%r15
lea    0x340(%r15),%rdi
callq  8630 <_setjmp@plt>
test   %eax,%eax
je     32cab <TIFFjpeg_start_compress+0x2b>
xor    %eax,%eax
mov    -0x10(%rbp),%r15
leaveq 
retq   
mov    %r15,%rdi
mov    -0x8(%rbp),%rsi
callq  8bc0 <jpeg_start_compress@plt>
mov    $0x1,%eax
mov    -0x10(%rbp),%r15
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   (%rax)

0000000000032cd0 <TIFFjpeg_write_scanlines>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %r15,-0x18(%rbp)
mov    %rsi,-0x8(%rbp)
mov    %rdx,-0x10(%rbp)
mov    %rdi,%r15
lea    0x340(%r15),%rdi
callq  8630 <_setjmp@plt>
test   %eax,%eax
je     32d04 <TIFFjpeg_write_scanlines+0x34>
mov    $0xffffffffffffffff,%rax
mov    -0x18(%rbp),%r15
leaveq 
retq   
mov    %r15,%rdi
mov    -0x10(%rbp),%rdx
mov    -0x8(%rbp),%rsi
callq  8330 <jpeg_write_scanlines@plt>
mov    -0x18(%rbp),%r15
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

0000000000032d20 <TIFFjpeg_write_raw_data>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %r15,-0x18(%rbp)
mov    %rsi,-0x8(%rbp)
mov    %rdx,-0x10(%rbp)
mov    %rdi,%r15
lea    0x340(%r15),%rdi
callq  8630 <_setjmp@plt>
test   %eax,%eax
je     32d54 <TIFFjpeg_write_raw_data+0x34>
mov    $0xffffffffffffffff,%rax
mov    -0x18(%rbp),%r15
leaveq 
retq   
mov    %r15,%rdi
mov    -0x10(%rbp),%rdx
mov    -0x8(%rbp),%rsi
callq  86c0 <jpeg_write_raw_data@plt>
mov    -0x18(%rbp),%r15
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

0000000000032d70 <TIFFjpeg_finish_compress>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x8(%rbp)
mov    %rdi,%r15
lea    0x340(%r15),%rdi
callq  8630 <_setjmp@plt>
test   %eax,%eax
je     32d97 <TIFFjpeg_finish_compress+0x27>
xor    %eax,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
mov    %r15,%rdi
callq  8c90 <jpeg_finish_compress@plt>
mov    $0x1,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

0000000000032db0 <TIFFjpeg_write_tables>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x8(%rbp)
mov    %rdi,%r15
lea    0x340(%r15),%rdi
callq  8630 <_setjmp@plt>
test   %eax,%eax
je     32dd7 <TIFFjpeg_write_tables+0x27>
xor    %eax,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
mov    %r15,%rdi
callq  80b0 <jpeg_write_tables@plt>
mov    $0x1,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

0000000000032df0 <TIFFjpeg_read_header>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x10(%rbp)
mov    %rsi,-0x8(%rbp)
mov    %rdi,%r15
lea    0x340(%r15),%rdi
callq  8630 <_setjmp@plt>
test   %eax,%eax
je     32e20 <TIFFjpeg_read_header+0x30>
mov    $0xffffffffffffffff,%rax
mov    -0x10(%rbp),%r15
leaveq 
retq   
mov    %r15,%rdi
mov    -0x8(%rbp),%rsi
callq  8a30 <jpeg_read_header@plt>
mov    -0x10(%rbp),%r15
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   (%rax)

0000000000032e40 <TIFFjpeg_has_multiple_scans>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x8(%rbp)
mov    %rdi,%r15
lea    0x340(%r15),%rdi
callq  8630 <_setjmp@plt>
test   %eax,%eax
je     32e67 <TIFFjpeg_has_multiple_scans+0x27>
xor    %eax,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
mov    %r15,%rdi
callq  83b0 <jpeg_has_multiple_scans@plt>
mov    -0x8(%rbp),%r15
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)

0000000000032e80 <TIFFjpeg_start_decompress>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x8(%rbp)
lea    0x408(%rdi),%rcx
mov    %rcx,0x10(%rdi)
lea    -0x4de(%rip),%rax        # 329c0 <TIFFjpeg_progress_monitor>
mov    %rax,(%rcx)
mov    %rdi,%r15
movl   $0x64,0x53c(%r15)
lea    0x3cdb5(%rip),%rdi        # 6fc6b <module.62+0x539>
callq  8040 <getenv@plt>
test   %rax,%rax
je     32ecf <TIFFjpeg_start_decompress+0x4f>
mov    %rax,%rdi
callq  8b90 <atoi@plt>
mov    %eax,0x53c(%r15)
lea    0x340(%r15),%rdi
callq  8630 <_setjmp@plt>
test   %eax,%eax
je     32ee7 <TIFFjpeg_start_decompress+0x67>
xor    %eax,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
mov    %r15,%rdi
callq  8670 <jpeg_start_decompress@plt>
mov    $0x1,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

0000000000032f00 <TIFFjpeg_read_scanlines>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %r15,-0x18(%rbp)
mov    %rsi,-0x8(%rbp)
mov    %rdx,-0x10(%rbp)
mov    %rdi,%r15
lea    0x340(%r15),%rdi
callq  8630 <_setjmp@plt>
test   %eax,%eax
je     32f34 <TIFFjpeg_read_scanlines+0x34>
mov    $0xffffffffffffffff,%rax
mov    -0x18(%rbp),%r15
leaveq 
retq   
mov    %r15,%rdi
mov    -0x10(%rbp),%rdx
mov    -0x8(%rbp),%rsi
callq  86d0 <jpeg_read_scanlines@plt>
mov    -0x18(%rbp),%r15
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

0000000000032f50 <TIFFjpeg_read_raw_data>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %r15,-0x18(%rbp)
mov    %rsi,-0x8(%rbp)
mov    %rdx,-0x10(%rbp)
mov    %rdi,%r15
lea    0x340(%r15),%rdi
callq  8630 <_setjmp@plt>
test   %eax,%eax
je     32f84 <TIFFjpeg_read_raw_data+0x34>
mov    $0xffffffffffffffff,%rax
mov    -0x18(%rbp),%r15
leaveq 
retq   
mov    %r15,%rdi
mov    -0x10(%rbp),%rdx
mov    -0x8(%rbp),%rsi
callq  8420 <jpeg_read_raw_data@plt>
mov    -0x18(%rbp),%r15
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

0000000000032fa0 <TIFFjpeg_finish_decompress>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x8(%rbp)
mov    %rdi,%r15
lea    0x340(%r15),%rdi
callq  8630 <_setjmp@plt>
test   %eax,%eax
je     32fcc <TIFFjpeg_finish_decompress+0x2c>
mov    $0xffffffffffffffff,%rax
mov    -0x8(%rbp),%r15
leaveq 
retq   
mov    %r15,%rdi
callq  8380 <jpeg_finish_decompress@plt>
mov    -0x8(%rbp),%r15
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

0000000000032fe0 <TIFFjpeg_abort>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x8(%rbp)
mov    %rdi,%r15
lea    0x340(%r15),%rdi
callq  8630 <_setjmp@plt>
test   %eax,%eax
je     33007 <TIFFjpeg_abort+0x27>
xor    %eax,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
mov    %r15,%rdi
callq  81c0 <jpeg_abort@plt>
mov    $0x1,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

0000000000033020 <TIFFjpeg_destroy>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x8(%rbp)
mov    %rdi,%r15
lea    0x340(%r15),%rdi
callq  8630 <_setjmp@plt>
test   %eax,%eax
je     33047 <TIFFjpeg_destroy+0x27>
xor    %eax,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
mov    %r15,%rdi
callq  81f0 <jpeg_destroy@plt>
mov    $0x1,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

0000000000033060 <TIFFjpeg_alloc_sarray>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %r15,-0x20(%rbp)
mov    %rsi,-0x8(%rbp)
mov    %rdx,-0x10(%rbp)
mov    %rcx,-0x18(%rbp)
mov    %rdi,%r15
lea    0x340(%r15),%rdi
callq  8630 <_setjmp@plt>
test   %eax,%eax
je     33093 <TIFFjpeg_alloc_sarray+0x33>
xor    %eax,%eax
mov    -0x20(%rbp),%r15
leaveq 
retq   
mov    0x8(%r15),%rax
mov    0x10(%rax),%rax
mov    %r15,%rdi
mov    -0x18(%rbp),%rcx
mov    -0x10(%rbp),%rdx
mov    -0x8(%rbp),%rsi
callq  *%rax
mov    -0x20(%rbp),%r15
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   (%rax)

00000000000330c0 <std_init_destination>:
push   %rbp
mov    %rsp,%rbp
mov    0x488(%rdi),%rax
mov    0x368(%rax),%rcx
mov    %rcx,0x428(%rdi)
mov    0x370(%rax),%rax
mov    %rax,0x430(%rdi)
leaveq 
retq   
nopl   0x0(%rax)

00000000000330f0 <std_empty_output_buffer>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    0x488(%rdi),%r14
mov    0x370(%r14),%rax
mov    %rax,0x390(%r14)
mov    %rdi,%r15
mov    %r14,%rdi
callq  86e0 <TIFFFlushData1@plt>
mov    0x368(%r14),%rax
mov    %rax,0x428(%r15)
mov    0x370(%r14),%rax
mov    %rax,0x430(%r15)
mov    $0x1,%eax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

0000000000033150 <std_term_destination>:
push   %rbp
mov    %rsp,%rbp
mov    0x488(%rdi),%rdx
mov    0x428(%rdi),%rax
mov    %rax,0x388(%rdx)
mov    0x370(%rdx),%rax
mov    0x430(%rdi),%rcx
sub    %rcx,%rax
mov    %rax,0x390(%rdx)
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

0000000000033190 <TIFFjpeg_data_dest>:
push   %rbp
mov    %rsp,%rbp
lea    0x428(%rdi),%rax
mov    %rax,0x28(%rdi)
lea    -0xe6(%rip),%rax        # 330c0 <std_init_destination>
mov    %rax,0x438(%rdi)
lea    -0xc4(%rip),%rax        # 330f0 <std_empty_output_buffer>
mov    %rax,0x440(%rdi)
lea    -0x72(%rip),%rax        # 33150 <std_term_destination>
mov    %rax,0x448(%rdi)
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

00000000000331d0 <tables_init_destination>:
push   %rbp
mov    %rsp,%rbp
mov    0x520(%rdi),%rax
mov    %rax,0x428(%rdi)
mov    0x528(%rdi),%eax
mov    %rax,0x430(%rdi)
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   0x0(%rax)

0000000000033200 <tables_empty_output_buffer>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x10(%rbp)
mov    0x520(%rdi),%rcx
mov    0x528(%rdi),%eax
add    $0x3e8,%eax
mov    %eax,%esi
mov    %rdi,%r15
mov    %rcx,%rdi
callq  8100 <_TIFFrealloc@plt>
test   %rax,%rax
jne    3325d <tables_empty_output_buffer+0x5d>
mov    (%r15),%rcx
movl   $0x38,0x28(%rcx)
mov    (%r15),%rcx
movl   $0x64,0x2c(%rcx)
mov    (%r15),%rcx
mov    (%rcx),%rcx
mov    %r15,%rdi
mov    %r14,-0x8(%rbp)
mov    %rax,%r14
callq  *%rcx
mov    %r14,%rax
mov    -0x8(%rbp),%r14
mov    0x528(%r15),%edx
lea    (%rax,%rdx,1),%rcx
mov    %rcx,0x428(%r15)
movq   $0x3e8,0x430(%r15)
mov    %rax,0x520(%r15)
lea    0x3e8(%rdx),%eax
mov    %eax,0x528(%r15)
mov    $0x1,%eax
mov    -0x10(%rbp),%r15
leaveq 
retq   
nopl   0x0(%rax)

00000000000332a0 <tables_term_destination>:
push   %rbp
mov    %rsp,%rbp
mov    0x528(%rdi),%eax
mov    0x430(%rdi),%ecx
sub    %ecx,%eax
mov    %eax,0x528(%rdi)
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

00000000000332c0 <TIFFjpeg_tables_dest>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x8(%rbp)
mov    0x520(%rdi),%rax
test   %rax,%rax
jne    332dd <TIFFjpeg_tables_dest+0x1d>
mov    %rdi,%r15
jmp    332e8 <TIFFjpeg_tables_dest+0x28>
mov    %rdi,%r15
mov    %rax,%rdi
callq  8bb0 <_TIFFfree@plt>
movl   $0x3e8,0x528(%r15)
mov    $0x3e8,%edi
callq  8440 <_TIFFmalloc@plt>
mov    %rax,0x520(%r15)
test   %rax,%rax
je     33349 <TIFFjpeg_tables_dest+0x89>
lea    0x428(%r15),%rax
mov    %rax,0x28(%r15)
lea    -0x14b(%rip),%rax        # 331d0 <tables_init_destination>
mov    %rax,0x438(%r15)
lea    -0x129(%rip),%rax        # 33200 <tables_empty_output_buffer>
mov    %rax,0x440(%r15)
lea    -0x97(%rip),%rax        # 332a0 <tables_term_destination>
mov    %rax,0x448(%r15)
mov    $0x1,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
movl   $0x0,0x528(%r15)
mov    0x488(%r15),%rax
mov    0x3b8(%rax),%rdi
lea    0x3c927(%rip),%rsi        # 6fc90 <module.62+0x55e>
lea    0x3c935(%rip),%rdx        # 6fca5 <module.62+0x573>
xor    %r15d,%r15d
mov    %r15,%rax
callq  8a00 <TIFFErrorExt@plt>
mov    %r15,%rax
mov    -0x8(%rbp),%r15
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nop

0000000000033390 <std_init_source>:
push   %rbp
mov    %rsp,%rbp
mov    0x488(%rdi),%rax
mov    0x368(%rax),%rcx
mov    %rcx,0x450(%rdi)
mov    0x390(%rax),%rax
mov    %rax,0x458(%rdi)
leaveq 
retq   
nopl   0x0(%rax)

00000000000333c0 <std_fill_input_buffer>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x8(%rbp)
mov    (%rdi),%rax
movl   $0x7b,0x28(%rax)
mov    (%rdi),%rax
mov    0x8(%rax),%rax
mov    $0xffffffffffffffff,%rsi
mov    %rdi,%r15
callq  *%rax
lea    0x3c8cd(%rip),%rax        # 6fcbd <dummy_EOI.43>
mov    %rax,0x450(%r15)
movq   $0x2,0x458(%r15)
mov    $0x1,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
nopl   (%rax)

0000000000033410 <std_skip_input_data>:
push   %rbp
mov    %rsp,%rbp
test   %rsi,%rsi
jg     3341b <std_skip_input_data+0xb>
leaveq 
retq   
mov    0x458(%rdi),%rax
cmp    %rsi,%rax
jb     33444 <std_skip_input_data+0x34>
mov    %rsi,%rcx
add    0x450(%rdi),%rcx
mov    %rcx,0x450(%rdi)
sub    %rsi,%rax
mov    %rax,0x458(%rdi)
leaveq 
retq   
callq  333c0 <std_fill_input_buffer>
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

0000000000033450 <std_term_source>:
push   %rbp
mov    %rsp,%rbp
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)

0000000000033460 <TIFFjpeg_data_src>:
push   %rbp
mov    %rsp,%rbp
lea    0x450(%rdi),%rcx
mov    %rcx,0x28(%rdi)
lea    -0xe6(%rip),%rax        # 33390 <std_init_source>
mov    %rax,0x460(%rdi)
lea    -0xc4(%rip),%rax        # 333c0 <std_fill_input_buffer>
mov    %rax,0x468(%rdi)
lea    -0x82(%rip),%rax        # 33410 <std_skip_input_data>
mov    %rax,0x470(%rdi)
mov    0x46ae8(%rip),%rax        # 79f88 <jpeg_resync_to_restart@LIBJPEG_8.0>
mov    %rax,0x478(%rdi)
lea    -0x5e(%rip),%rax        # 33450 <std_term_source>
mov    %rax,0x480(%rdi)
movq   $0x0,0x458(%rdi)
movq   $0x0,(%rcx)
leaveq 
retq   
nopl   0x0(%rax)

00000000000334d0 <tables_init_source>:
push   %rbp
mov    %rsp,%rbp
mov    0x520(%rdi),%rax
mov    %rax,0x450(%rdi)
mov    0x528(%rdi),%eax
mov    %rax,0x458(%rdi)
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   0x0(%rax)

0000000000033500 <TIFFjpeg_tables_src>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x8(%rbp)
mov    %rdi,%r15
callq  33460 <TIFFjpeg_data_src>
lea    -0x4b(%rip),%rax        # 334d0 <tables_init_source>
mov    %rax,0x460(%r15)
mov    -0x8(%rbp),%r15
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

0000000000033530 <alloc_downsampled_buffers>:
push   %rbp
mov    %rsp,%rbp
sub    $0x40,%rsp
mov    %rdx,-0x38(%rbp)
mov    %rbx,-0x10(%rbp)
mov    %r12,-0x18(%rbp)
mov    %r13,-0x20(%rbp)
mov    %r14,-0x28(%rbp)
mov    %r15,-0x30(%rbp)
mov    0x350(%rdi),%r13
mov    %rsi,%rbx
mov    $0x1,%esi
xor    %r12d,%r12d
mov    %r12,%rax
jmp    335b3 <alloc_downsampled_buffers+0x83>
movslq 0x8(%rbx),%r15
mov    0x1c(%rbx),%edx
shl    $0x3,%edx
movslq 0xc(%rbx),%r14
mov    %r14,%rcx
shl    $0x3,%ecx
mov    %r13,%rdi
mov    %rax,-0x8(%rbp)
callq  33060 <TIFFjpeg_alloc_sarray>
test   %rax,%rax
je     335d8 <alloc_downsampled_buffers+0xa8>
movslq %r12d,%rcx
mov    %rax,0x4a0(%r13,%rcx,8)
add    $0x60,%rbx
imul   %r15d,%r14d
mov    -0x8(%rbp),%rax
add    %r14d,%eax
add    $0x1,%r12d
mov    $0x1,%esi
mov    -0x38(%rbp),%rdx
cmp    %edx,%r12d
jl     33567 <alloc_downsampled_buffers+0x37>
mov    %eax,0x4f4(%r13)
mov    %rsi,%rax
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
mov    -0x10(%rbp),%rbx
leaveq 
retq   
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
mov    -0x10(%rbp),%rbx
xor    %eax,%eax
leaveq 
retq   

00000000000335f0 <JPEGFixupTagsSubsampling>:
push   %rbp
mov    %rsp,%rbp
sub    $0x50,%rsp
mov    %r15,-0x8(%rbp)
mov    %rdi,%r15
callq  8c70 <_TIFFFillStriles@plt>
mov    0xf0(%r15),%rcx
test   %rcx,%rcx
jne    33616 <JPEGFixupTagsSubsampling+0x26>
mov    -0x8(%rbp),%r15
leaveq 
retq   
mov    0xe8(%r15),%rax
test   %rax,%rax
jne    33628 <JPEGFixupTagsSubsampling+0x38>
mov    -0x8(%rbp),%r15
leaveq 
retq   
mov    (%rcx),%rax
test   %rax,%rax
jne    33636 <JPEGFixupTagsSubsampling+0x46>
mov    -0x8(%rbp),%r15
leaveq 
retq   
mov    %r15,-0x48(%rbp)
movl   $0x800,-0x38(%rbp)
mov    $0x800,%edi
callq  8440 <_TIFFmalloc@plt>
mov    %rax,-0x40(%rbp)
lea    0x3c669(%rip),%rsi        # 6fcbf <module.44>
test   %rax,%rax
je     336c2 <JPEGFixupTagsSubsampling+0xd2>
movq   $0x0,-0x30(%rbp)
movl   $0x0,-0x28(%rbp)
mov    0xe8(%r15),%rax
mov    (%rax),%rax
mov    %rax,-0x20(%rbp)
movb   $0x0,-0x10(%rbp)
mov    0xf0(%r15),%rax
mov    (%rax),%rax
mov    %rax,-0x18(%rbp)
lea    -0x48(%rbp),%rdi
callq  336e0 <JPEGFixupTagsSubsamplingSec>
test   %eax,%eax
jne    336b3 <JPEGFixupTagsSubsampling+0xc3>
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
lea    0x3c68e(%rip),%rdx        # 6fd35 <module.44+0x76>
lea    0x3c611(%rip),%rsi        # 6fcbf <module.44>
callq  85a0 <TIFFWarningExt@plt>
mov    -0x40(%rbp),%rdi
callq  8bb0 <_TIFFfree@plt>
mov    -0x8(%rbp),%r15
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
lea    0x3c606(%rip),%rdx        # 6fcd8 <module.44+0x19>
callq  85a0 <TIFFWarningExt@plt>
mov    -0x8(%rbp),%r15
leaveq 
retq   
nopl   (%rax)

00000000000336e0 <JPEGFixupTagsSubsamplingSec>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rdi,%r13
lea    -0x2f(%rbp),%r14
xor    %r12d,%r12d
lea    -0x2e(%rbp),%r15
jmp    33710 <JPEGFixupTagsSubsamplingSec+0x30>
movzbl -0x2f(%rbp),%eax
cmp    $0xff,%al
je     3373c <JPEGFixupTagsSubsamplingSec+0x5c>
mov    %r13,%rdi
mov    %r14,%rsi
callq  33a50 <JPEGFixupTagsSubsamplingReadByte>
test   %eax,%eax
jne    33708 <JPEGFixupTagsSubsamplingSec+0x28>
mov    %r12,%rax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
leaveq 
retq   
movzbl -0x2f(%rbp),%eax
cmp    $0xfe,%al
jbe    33760 <JPEGFixupTagsSubsamplingSec+0x80>
mov    %r13,%rdi
mov    %r14,%rsi
callq  33a50 <JPEGFixupTagsSubsamplingReadByte>
test   %eax,%eax
jne    33734 <JPEGFixupTagsSubsamplingSec+0x54>
mov    %r12,%rax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
leaveq 
retq   
add    $0xffffff40,%eax
cmp    $0x3e,%eax
ja     337b7 <JPEGFixupTagsSubsamplingSec+0xd7>
lea    0x3c0f3(%rip),%rcx        # 6f864 <module.62+0x132>
movslq (%rcx,%rax,4),%rax
add    %rcx,%rax
jmpq   *%rax
mov    %r13,%rdi
mov    %r15,%rsi
callq  33b90 <JPEGFixupTagsSubsamplingReadWord>
test   %eax,%eax
je     33806 <JPEGFixupTagsSubsamplingSec+0x126>
movzwl -0x2e(%rbp),%eax
cmp    $0x1,%ax
jbe    3381b <JPEGFixupTagsSubsamplingSec+0x13b>
lea    0xfffe(%rax),%esi
mov    %si,-0x2e(%rbp)
test   %si,%si
je     33710 <JPEGFixupTagsSubsamplingSec+0x30>
mov    %r13,%rdi
callq  33bf0 <JPEGFixupTagsSubsamplingSkip>
jmpq   33710 <JPEGFixupTagsSubsamplingSec+0x30>
mov    %r12,%rax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
leaveq 
retq   
lea    -0x2c(%rbp),%rsi
mov    %r13,%rdi
callq  33b90 <JPEGFixupTagsSubsamplingReadWord>
test   %eax,%eax
jne    33830 <JPEGFixupTagsSubsamplingSec+0x150>
mov    %r12,%rax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
leaveq 
retq   
mov    %r12,%rax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
leaveq 
retq   
mov    %r12,%rax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
leaveq 
retq   
mov    %r12,%rax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
leaveq 
retq   
mov    0x0(%r13),%rax
movzwl 0x82(%rax),%eax
lea    0x8(%rax,%rax,2),%ecx
movzwl -0x2c(%rbp),%eax
cmp    %eax,%ecx
je     3385c <JPEGFixupTagsSubsamplingSec+0x17c>
mov    %r12,%rax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
leaveq 
retq   
mov    $0x7,%esi
mov    %r13,%rdi
callq  33bf0 <JPEGFixupTagsSubsamplingSkip>
lea    -0x29(%rbp),%r14
mov    %r13,%rdi
mov    %r14,%rsi
callq  33a50 <JPEGFixupTagsSubsamplingReadByte>
test   %eax,%eax
jne    33891 <JPEGFixupTagsSubsamplingSec+0x1b1>
mov    %r12,%rax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
leaveq 
retq   
movzbl -0x29(%rbp),%eax
mov    %rax,-0x8(%rbp)
mov    $0x1,%r12d
mov    %r13,%rdi
mov    %r12,%rsi
callq  33bf0 <JPEGFixupTagsSubsamplingSkip>
mov    %r12,%r15
jmp    338e8 <JPEGFixupTagsSubsamplingSec+0x208>
mov    %r13,%rdi
mov    %r12,%rsi
callq  33bf0 <JPEGFixupTagsSubsamplingSkip>
mov    %r13,%rdi
mov    %r14,%rsi
callq  33a50 <JPEGFixupTagsSubsamplingReadByte>
test   %eax,%eax
je     3394f <JPEGFixupTagsSubsamplingSec+0x26f>
movzbl -0x29(%rbp),%eax
cmp    $0x11,%al
jne    33963 <JPEGFixupTagsSubsamplingSec+0x283>
mov    %r13,%rdi
mov    %r12,%rsi
callq  33bf0 <JPEGFixupTagsSubsamplingSkip>
add    $0x1,%r15d
mov    0x0(%r13),%rdx
movzwl 0x82(%rdx),%eax
cmp    %r15w,%ax
ja     338af <JPEGFixupTagsSubsamplingSec+0x1cf>
mov    -0x8(%rbp),%r14
mov    %r14,%r9
shr    $0x4,%r9d
cmp    $0x1,%r9b
je     33998 <JPEGFixupTagsSubsamplingSec+0x2b8>
cmp    $0x2,%r9b
je     33998 <JPEGFixupTagsSubsamplingSec+0x2b8>
cmp    $0x4,%r9b
je     33998 <JPEGFixupTagsSubsamplingSec+0x2b8>
xor    %eax,%eax
mov    0x3b8(%rdx),%rdi
lea    0x3c49f(%rip),%rdx        # 6fdcd <module.47+0x1c>
lea    0x3c47c(%rip),%rsi        # 6fdb1 <module.47>
callq  85a0 <TIFFWarningExt@plt>
mov    %r12,%rax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
leaveq 
retq   
xor    %eax,%eax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
leaveq 
retq   
xor    %eax,%eax
mov    0x0(%r13),%rcx
mov    0x3b8(%rcx),%rdi
lea    0x3c456(%rip),%rdx        # 6fdcd <module.47+0x1c>
lea    0x3c433(%rip),%rsi        # 6fdb1 <module.47>
callq  85a0 <TIFFWarningExt@plt>
mov    %r12,%rax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
leaveq 
retq   
and    $0xf,%r14d
cmp    $0x1,%r14b
je     339b2 <JPEGFixupTagsSubsamplingSec+0x2d2>
cmp    $0x2,%r14b
je     339b2 <JPEGFixupTagsSubsamplingSec+0x2d2>
cmp    $0x4,%r14b
jne    3391e <JPEGFixupTagsSubsamplingSec+0x23e>
movzbl %r9b,%r15d
movzwl 0x108(%rdx),%eax
cmp    %ax,%r15w
je     33a2a <JPEGFixupTagsSubsamplingSec+0x34a>
sub    $0x10,%rsp
xor    %eax,%eax
mov    0x0(%r13),%rsi
mov    0x3b8(%rsi),%rdi
lea    0x3c46c(%rip),%rdx        # 6fe47 <module.47+0x96>
movzwl 0x108(%rsi),%ecx
movzwl 0x10a(%rsi),%r8d
mov    %r14d,(%rsp)
lea    0x3c3bc(%rip),%rsi        # 6fdb1 <module.47>
callq  85a0 <TIFFWarningExt@plt>
mov    0x0(%r13),%rax
mov    %r15w,0x108(%rax)
movzbl %r14b,%ecx
mov    0x0(%r13),%rax
mov    %cx,0x10a(%rax)
mov    %r12,%rax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
leaveq 
retq   
movzbl %r14b,%ecx
movzwl 0x10a(%rdx),%eax
cmp    %ax,%cx
jne    339c3 <JPEGFixupTagsSubsamplingSec+0x2e3>
mov    %r12,%rax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
leaveq 
retq   
nop

0000000000033a50 <JPEGFixupTagsSubsamplingReadByte>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    0x20(%rdi),%eax
test   %eax,%eax
je     33a84 <JPEGFixupTagsSubsamplingReadByte+0x34>
mov    0x18(%rdi),%rax
movzbl (%rax),%eax
mov    %al,(%rsi)
mov    0x18(%rdi),%rax
add    $0x1,%rax
mov    %rax,0x18(%rdi)
mov    0x20(%rdi),%eax
add    $0xffffffff,%eax
mov    %eax,0x20(%rdi)
mov    $0x1,%eax
leaveq 
retq   
xor    %eax,%eax
mov    0x30(%rdi),%rcx
test   %rcx,%rcx
jne    33a91 <JPEGFixupTagsSubsamplingReadByte+0x41>
leaveq 
retq   
movzbl 0x38(%rdi),%ecx
test   %cl,%cl
jne    33ad3 <JPEGFixupTagsSubsamplingReadByte+0x83>
mov    (%rdi),%rdx
mov    0x3d0(%rdx),%rcx
mov    0x3b8(%rdx),%rdx
mov    0x28(%rdi),%r8
mov    %r15,-0x20(%rbp)
mov    %rsi,-0x18(%rbp)
mov    %r8,%rsi
mov    %rdi,%r15
mov    %rdx,%rdi
mov    %rax,%rdx
callq  *%rcx
mov    %r15,%rdi
movb   $0x1,0x38(%rdi)
mov    -0x18(%rbp),%rsi
mov    -0x20(%rbp),%r15
mov    0x30(%rdi),%rax
mov    0x10(%rdi),%ecx
cmp    %rcx,%rax
jae    33ae2 <JPEGFixupTagsSubsamplingReadByte+0x92>
mov    %rax,%rcx
cmp    $0x7fffffff,%ecx
jbe    33b09 <JPEGFixupTagsSubsamplingReadByte+0xb9>
lea    0x3c3cc(%rip),%rdi        # 6febd <module.47+0x10c>
lea    0x3be83(%rip),%rsi        # 6f97b <module.62+0x249>
mov    $0x3b7,%edx
lea    0x3c3c8(%rip),%rcx        # 6fecc <module.47+0x11b>
callq  8490 <__assert_fail@plt>
mov    (%rdi),%rdx
mov    0x3c0(%rdx),%rax
mov    0x3b8(%rdx),%r10
mov    0x8(%rdi),%r8
mov    %ecx,%r9d
mov    %r9,%rdx
mov    %r15,-0x20(%rbp)
mov    %rsi,-0x8(%rbp)
mov    %r14,-0x18(%rbp)
mov    %rcx,-0x10(%rbp)
mov    %r8,%rsi
mov    %r9,%r14
mov    %rdi,%r15
mov    %r10,%rdi
callq  *%rax
cmp    %r14,%rax
je     33b53 <JPEGFixupTagsSubsamplingReadByte+0x103>
mov    -0x18(%rbp),%r14
xor    %eax,%eax
mov    -0x20(%rbp),%r15
leaveq 
retq   
mov    0x8(%r15),%rax
mov    %rax,0x18(%r15)
mov    -0x10(%rbp),%rax
mov    %eax,0x20(%r15)
mov    %eax,%ecx
mov    %rcx,%rax
add    0x28(%r15),%rax
mov    %rax,0x28(%r15)
mov    0x30(%r15),%rax
sub    %rcx,%rax
mov    %rax,0x30(%r15)
mov    %r15,%rdi
mov    -0x18(%rbp),%r14
mov    -0x8(%rbp),%rsi
mov    -0x20(%rbp),%r15
jmpq   33a5f <JPEGFixupTagsSubsamplingReadByte+0xf>
nop

0000000000033b90 <JPEGFixupTagsSubsamplingReadWord>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %rdi,-0x10(%rbp)
mov    %rsi,-0x8(%rbp)
lea    -0x12(%rbp),%rsi
callq  33a50 <JPEGFixupTagsSubsamplingReadByte>
test   %eax,%eax
jne    33bb1 <JPEGFixupTagsSubsamplingReadWord+0x21>
xor    %eax,%eax
leaveq 
retq   
lea    -0x11(%rbp),%rsi
mov    -0x10(%rbp),%rdi
callq  33a50 <JPEGFixupTagsSubsamplingReadByte>
test   %eax,%eax
jne    33bc6 <JPEGFixupTagsSubsamplingReadWord+0x36>
xor    %eax,%eax
leaveq 
retq   
movzbl -0x11(%rbp),%ecx
movzbl -0x12(%rbp),%eax
shl    $0x8,%eax
add    %ecx,%eax
mov    -0x8(%rbp),%rcx
mov    %ax,(%rcx)
mov    $0x1,%eax
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   0x0(%rax)

0000000000033bf0 <JPEGFixupTagsSubsamplingSkip>:
push   %rbp
mov    %rsp,%rbp
mov    0x20(%rdi),%ecx
movzwl %si,%edx
cmp    %edx,%ecx
jae    33c1e <JPEGFixupTagsSubsamplingSkip+0x2e>
sub    %cx,%si
movzwl %si,%edx
mov    0x30(%rdi),%rax
cmp    %rdx,%rax
jae    33c30 <JPEGFixupTagsSubsamplingSkip+0x40>
movl   $0x0,0x20(%rdi)
movq   $0x0,0x30(%rdi)
leaveq 
retq   
movzwl %si,%eax
add    0x18(%rdi),%rax
mov    %rax,0x18(%rdi)
sub    %edx,%ecx
mov    %ecx,0x20(%rdi)
leaveq 
retq   
movl   $0x0,0x20(%rdi)
mov    %rdx,%rcx
add    0x28(%rdi),%rcx
mov    %rcx,0x28(%rdi)
sub    %rdx,%rax
mov    %rax,0x30(%rdi)
movb   $0x0,0x38(%rdi)
leaveq 
retq   
nop

0000000000033c50 <JPEGFixupTags>:
push   %rbp
mov    %rsp,%rbp
mov    0x350(%rdi),%rdx
mov    $0x1,%eax
movzwl 0x7a(%rdi),%ecx
cmp    $0x6,%cx
je     33c6c <JPEGFixupTags+0x1c>
leaveq 
retq   
movzwl 0xaa(%rdi),%ecx
cmp    $0x1,%cx
je     33c7b <JPEGFixupTags+0x2b>
leaveq 
retq   
movzwl 0x82(%rdi),%ecx
cmp    $0x3,%cx
je     33c8a <JPEGFixupTags+0x3a>
leaveq 
retq   
movslq 0x538(%rdx),%rcx
test   %ecx,%ecx
je     33c97 <JPEGFixupTags+0x47>
leaveq 
retq   
callq  335f0 <JPEGFixupTagsSubsampling>
mov    $0x1,%eax
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

0000000000033cb0 <JPEGSetupDecode>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    $0x1,%esi
mov    0x350(%rdi),%r15
mov    %rdi,%r14
callq  32790 <JPEGInitializeLibJPEG>
test   %r15,%r15
jne    33cf8 <JPEGSetupDecode+0x48>
lea    0x3bdcd(%rip),%rdi        # 6faad <module.62+0x37b>
mov    $0x3fd,%edx
lea    0x3bc8f(%rip),%rsi        # 6f97b <module.62+0x249>
lea    0x3c1fa(%rip),%rcx        # 6feed <module.47+0x13c>
callq  8490 <__assert_fail@plt>
movslq 0x20(%r15),%rax
test   %eax,%eax
jne    33d1f <JPEGSetupDecode+0x6f>
lea    0x3c1f6(%rip),%rdi        # 6fefd <module.47+0x14c>
mov    $0x3fe,%edx
lea    0x3bc68(%rip),%rsi        # 6f97b <module.62+0x249>
lea    0x3c1d3(%rip),%rcx        # 6feed <module.47+0x13c>
callq  8490 <__assert_fail@plt>
mov    0x48(%r14),%rax
and    $0x4,%rax
test   %rax,%rax
jne    33d55 <JPEGSetupDecode+0xa5>
movzwl 0x7a(%r14),%eax
mov    %ax,0x490(%r15)
cmp    $0x6,%ax
je     33d94 <JPEGSetupDecode+0xe4>
movw   $0x1,0x492(%r15)
movw   $0x1,0x494(%r15)
jmp    33db4 <JPEGSetupDecode+0x104>
mov    %r15,%rdi
callq  33500 <TIFFjpeg_tables_src>
xor    %esi,%esi
mov    %r15,%rdi
callq  32df0 <TIFFjpeg_read_header>
cmp    $0x2,%eax
je     33d2c <JPEGSetupDecode+0x7c>
xor    %eax,%eax
mov    0x3b8(%r14),%rdi
lea    0x3c1a0(%rip),%rdx        # 6ff1c <module.47+0x16b>
lea    0x3c16a(%rip),%rsi        # 6feed <module.47+0x13c>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
movzwl 0x108(%r14),%eax
mov    %ax,0x492(%r15)
movzwl 0x10a(%r14),%eax
mov    %ax,0x494(%r15)
mov    %r15,%rdi
callq  33460 <TIFFjpeg_data_src>
mov    0x46185(%rip),%rax        # 79f48 <_TIFFNoPostDecode@@Base+0x2f598>
mov    %rax,0x3e8(%r14)
mov    $0x1,%eax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
nopl   0x0(%rax)

0000000000033de0 <JPEGPreDecode>:
push   %rbp
mov    %rsp,%rbp
sub    $0x40,%rsp
lea    0x3bb8c(%rip),%r8        # 6f97b <module.62+0x249>
lea    0x3c14b(%rip),%rcx        # 6ff41 <module.55+0xe>
mov    0x350(%rdi),%rax
test   %rax,%rax
jne    33e16 <JPEGPreDecode+0x36>
mov    %r8,%rsi
lea    0x3bca1(%rip),%rdi        # 6faad <module.62+0x37b>
mov    $0x44e,%edx
callq  8490 <__assert_fail@plt>
movslq 0x20(%rax),%rdx
test   %edx,%edx
je     33e26 <JPEGPreDecode+0x46>
mov    %rsi,%rdx
mov    %r8,%rsi
jmp    33e61 <JPEGPreDecode+0x81>
mov    %rdi,%rcx
mov    %r15,-0x30(%rbp)
mov    %rdi,-0x40(%rbp)
mov    %rsi,-0x38(%rbp)
mov    %rax,%r15
mov    %rdi,%rax
mov    %rcx,%rdi
callq  *0x2c8(%rax)
mov    %r15,%rax
lea    0x3c0f3(%rip),%rcx        # 6ff41 <module.55+0xe>
lea    0x3bb26(%rip),%rsi        # 6f97b <module.62+0x249>
mov    -0x38(%rbp),%rdx
mov    -0x40(%rbp),%rdi
mov    -0x30(%rbp),%r15
movslq 0x20(%rax),%r8
test   %r8d,%r8d
jne    33e7b <JPEGPreDecode+0x9b>
lea    0x3c08c(%rip),%rdi        # 6fefd <module.47+0x14c>
mov    $0x455,%edx
callq  8490 <__assert_fail@plt>
xor    %ecx,%ecx
mov    %rcx,-0x28(%rbp)
mov    %rax,%rcx
mov    %rdi,-0x38(%rbp)
mov    %rdx,-0x30(%rbp)
mov    %rax,-0x40(%rbp)
mov    %rcx,%rdi
callq  32fe0 <TIFFjpeg_abort>
test   %eax,%eax
jne    33ea0 <JPEGPreDecode+0xc0>
xor    %eax,%eax
leaveq 
retq   
mov    $0x1,%esi
mov    %rsi,-0x20(%rbp)
mov    -0x40(%rbp),%rax
mov    %rax,%rdi
mov    %r15,-0x40(%rbp)
mov    %rax,%r15
callq  32df0 <TIFFjpeg_read_header>
cmp    $0x1,%eax
je     33ec9 <JPEGPreDecode+0xe9>
xor    %eax,%eax
mov    -0x40(%rbp),%r15
leaveq 
retq   
mov    0x450(%r15),%rax
mov    -0x38(%rbp),%rdx
mov    %rax,0x388(%rdx)
mov    0x458(%r15),%rax
mov    %rax,0x390(%rdx)
mov    0x10(%rdx),%eax
and    $0x400,%eax
test   %eax,%eax
jne    33f36 <JPEGPreDecode+0x156>
mov    0x58(%rdx),%esi
mov    0x5c(%rdx),%eax
mov    0x27c(%rdx),%ecx
sub    %ecx,%eax
mov    0x84(%rdx),%ecx
cmp    %eax,%ecx
jae    33f10 <JPEGPreDecode+0x130>
mov    %rcx,%rax
mov    %rdx,%rdi
mov    %r12,-0x8(%rbp)
mov    %r13,-0x10(%rbp)
mov    %r14,-0x18(%rbp)
mov    %rax,%r12
mov    %rsi,%r13
mov    %rdx,%r14
callq  8410 <TIFFScanlineSize@plt>
mov    %rax,0x498(%r15)
jmp    33f60 <JPEGPreDecode+0x180>
mov    0x64(%rdx),%eax
mov    0x68(%rdx),%ecx
mov    %rdx,%rdi
mov    %r12,-0x8(%rbp)
mov    %r13,-0x10(%rbp)
mov    %r14,-0x18(%rbp)
mov    %rcx,%r12
mov    %rax,%r13
mov    %rdx,%r14
callq  80d0 <TIFFTileRowSize@plt>
mov    %rax,0x498(%r15)
movzwl 0xaa(%r14),%eax
cmp    $0x2,%ax
je     33ff7 <JPEGPreDecode+0x217>
lea    0x3bfba(%rip),%rsi        # 6ff33 <module.55>
cmp    0x30(%r15),%r13d
ja     33f85 <JPEGPreDecode+0x1a5>
cmp    0x34(%r15),%r12d
jbe    33fba <JPEGPreDecode+0x1da>
sub    $0x10,%rsp
mov    0x34(%r15),%ecx
xor    %eax,%eax
mov    0x3b8(%r14),%rdi
lea    0x3bfb2(%rip),%rdx        # 6ff4f <module.55+0x1c>
mov    0x30(%r15),%r9d
mov    %ecx,(%rsp)
mov    %r13,%rcx
mov    %r12,%r8
callq  85a0 <TIFFWarningExt@plt>
add    $0x10,%rsp
lea    0x3bf79(%rip),%rsi        # 6ff33 <module.55>
mov    0x30(%r15),%ecx
cmp    %ecx,%r13d
je     34022 <JPEGPreDecode+0x242>
cmp    0x30(%r15),%r13d
jb     34080 <JPEGPreDecode+0x2a0>
cmp    0x34(%r15),%r12d
jb     34080 <JPEGPreDecode+0x2a0>
movslq 0x38(%r15),%rcx
movzwl 0xaa(%r14),%eax
cmp    $0x1,%ax
je     340be <JPEGPreDecode+0x2de>
mov    $0x1,%eax
jmpq   340c6 <JPEGPreDecode+0x2e6>
mov    -0x30(%rbp),%rax
test   %ax,%ax
je     33f72 <JPEGPreDecode+0x192>
movzwl 0x492(%r15),%ecx
mov    %rcx,%rax
neg    %eax
cmp    %r13d,%eax
ja     34176 <JPEGPreDecode+0x396>
xor    %r13d,%r13d
jmpq   34182 <JPEGPreDecode+0x3a2>
mov    0x34(%r15),%r8d
cmp    %r8d,%r12d
jae    33fc3 <JPEGPreDecode+0x1e3>
mov    %r12,%rax
add    0x27c(%r14),%eax
mov    0x5c(%r14),%edx
cmp    %eax,%edx
jne    33fc3 <JPEGPreDecode+0x1e3>
mov    0x10(%r14),%eax
and    $0x400,%eax
test   %eax,%eax
jne    33fc3 <JPEGPreDecode+0x1e3>
sub    $0x10,%rsp
xor    %eax,%eax
mov    0x3b8(%r14),%rdi
mov    %r8d,(%rsp)
mov    %r12,%r8
lea    0x3bf1f(%rip),%rdx        # 6ff88 <module.55+0x55>
mov    %rcx,%r9
mov    %rsi,%r12
callq  85a0 <TIFFWarningExt@plt>
add    $0x10,%rsp
mov    %r12,%rsi
jmpq   33fd7 <JPEGPreDecode+0x1f7>
sub    $0x10,%rsp
mov    0x34(%r15),%ecx
xor    %eax,%eax
mov    0x3b8(%r14),%rdi
lea    0x3bf37(%rip),%rdx        # 6ffcf <module.55+0x9c>
mov    0x30(%r15),%r9d
mov    %ecx,(%rsp)
mov    %r13,%rcx
mov    %r12,%r8
callq  8a00 <TIFFErrorExt@plt>
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
xor    %eax,%eax
mov    -0x40(%rbp),%r15
leaveq 
retq   
movzwl 0x82(%r14),%eax
cmp    %ecx,%eax
jne    341a0 <JPEGPreDecode+0x3c0>
movzwl 0x74(%r14),%eax
cmp    0x128(%r15),%eax
jne    341c9 <JPEGPreDecode+0x3e9>
mov    %rsi,%r12
mov    %r15,%rdi
callq  32e40 <TIFFjpeg_has_multiple_scans>
test   %eax,%eax
jne    341f2 <JPEGPreDecode+0x412>
lea    0x3c10d(%rip),%rdx        # 70207 <module.55+0x2d4>
movzwl 0xaa(%r14),%eax
cmp    $0x1,%ax
je     34282 <JPEGPreDecode+0x4a2>
mov    0x130(%r15),%rax
movslq 0x8(%rax),%rcx
cmp    $0x1,%ecx
jne    342b5 <JPEGPreDecode+0x4d5>
movslq 0xc(%rax),%rax
cmp    $0x1,%eax
jne    342b5 <JPEGPreDecode+0x4d5>
movzwl 0xaa(%r14),%eax
cmp    $0x1,%ax
jne    342da <JPEGPreDecode+0x4fa>
movzwl 0x490(%r15),%eax
cmp    $0x6,%ax
jne    342da <JPEGPreDecode+0x4fa>
movslq 0x530(%r15),%rax
cmp    $0x1,%eax
jne    342da <JPEGPreDecode+0x4fa>
movl   $0x3,0x3c(%r15)
movl   $0x2,0x40(%r15)
jmpq   342fc <JPEGPreDecode+0x51c>
lea    -0x1(%rcx,%r13,1),%eax
xor    %edx,%edx
div    %ecx
mov    %rax,%r13
movzwl 0x494(%r15),%ecx
mov    %rcx,%rax
neg    %eax
cmp    %r12d,%eax
ja     34332 <JPEGPreDecode+0x552>
xor    %r12d,%r12d
jmpq   33f72 <JPEGPreDecode+0x192>
xor    %eax,%eax
mov    0x3b8(%r14),%rdi
lea    0x3be6b(%rip),%rdx        # 7001b <module.55+0xe8>
callq  8a00 <TIFFErrorExt@plt>
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
xor    %eax,%eax
mov    -0x40(%rbp),%r15
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%r14),%rdi
lea    0x3be60(%rip),%rdx        # 70039 <module.55+0x106>
callq  8a00 <TIFFErrorExt@plt>
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
xor    %eax,%eax
mov    -0x40(%rbp),%r15
leaveq 
retq   
mov    0x34(%r15),%eax
mov    0x30(%r15),%ecx
imul   %rcx,%rax
movslq 0x38(%r15),%rcx
imul   %rax,%rcx
movzwl 0x74(%r14),%eax
add    $0x7,%eax
shr    $0x3,%eax
movslq %eax,%r13
imul   %rcx,%r13
movslq 0x13c(%r15),%rax
test   %eax,%eax
je     34228 <JPEGPreDecode+0x448>
lea    0x0(%r13,%r13,2),%r13
cmp    $0x6400000,%r13
jbe    340f3 <JPEGPreDecode+0x313>
lea    0x3be1a(%rip),%rdi        # 70056 <module.55+0x123>
callq  8040 <getenv@plt>
test   %rax,%rax
jne    340f3 <JPEGPreDecode+0x313>
xor    %eax,%eax
mov    0x3b8(%r14),%rdi
mov    %r13,%rcx
mov    %r12,%rsi
lea    0x3be1c(%rip),%rdx        # 7007c <module.55+0x149>
mov    $0x6400000,%r8d
mov    %r8,%r9
callq  8a00 <TIFFErrorExt@plt>
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
xor    %eax,%eax
mov    -0x40(%rbp),%r15
leaveq 
retq   
mov    0x130(%r15),%rcx
movzwl 0x492(%r15),%eax
cmp    0x8(%rcx),%eax
jne    34343 <JPEGPreDecode+0x563>
movzwl 0x494(%r15),%eax
cmp    0xc(%rcx),%eax
jne    34343 <JPEGPreDecode+0x563>
mov    $0x1,%ecx
jmpq   343c0 <JPEGPreDecode+0x5e0>
xor    %eax,%eax
mov    0x3b8(%r14),%rdi
mov    %r12,%rsi
callq  8a00 <TIFFErrorExt@plt>
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
xor    %eax,%eax
mov    -0x40(%rbp),%r15
leaveq 
retq   
movl   $0x0,0x3c(%r15)
movl   $0x0,0x40(%r15)
movzwl 0xaa(%r14),%eax
cmp    $0x1,%ax
je     343cb <JPEGPreDecode+0x5eb>
mov    -0x28(%rbp),%r12
test   %r12d,%r12d
jg     343e8 <JPEGPreDecode+0x608>
movl   $0x0,0x5c(%r15)
lea    -0x2708(%rip),%rax        # 31c10 <JPEGDecode>
mov    %rax,0x2f8(%r14)
mov    %rax,0x308(%r14)
mov    %rax,0x318(%r14)
jmpq   3441b <JPEGPreDecode+0x63b>
lea    -0x1(%rcx,%r12,1),%eax
xor    %edx,%edx
div    %ecx
mov    %rax,%r12
jmpq   33f72 <JPEGPreDecode+0x192>
sub    $0x10,%rsp
movzwl 0x494(%r15),%esi
xor    %eax,%eax
mov    0x3b8(%r14),%rdi
lea    0x3be67(%rip),%rdx        # 701c6 <module.55+0x293>
mov    0x130(%r15),%r8
movslq 0x8(%r8),%rcx
movslq 0xc(%r8),%r8
movzwl 0x492(%r15),%r9d
mov    %esi,(%rsp)
mov    %r12,%rsi
callq  8a00 <TIFFErrorExt@plt>
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
xor    %eax,%eax
mov    -0x40(%rbp),%r15
leaveq 
retq   
movslq %ecx,%rax
lea    (%rax,%rax,2),%rax
shl    $0x5,%rax
add    0x130(%r15),%rax
movslq 0x8(%rax),%rsi
cmp    $0x1,%esi
jne    3443b <JPEGPreDecode+0x65b>
movslq 0xc(%rax),%rax
cmp    $0x1,%eax
jne    3443b <JPEGPreDecode+0x65b>
add    $0x1,%ecx
cmp    0x38(%r15),%ecx
jl     34395 <JPEGPreDecode+0x5b5>
jmpq   3412d <JPEGPreDecode+0x34d>
movzwl 0x492(%r15),%eax
cmp    $0x1,%ax
je     34460 <JPEGPreDecode+0x680>
pushq  -0x20(%rbp)
popq   -0x28(%rbp)
jmpq   342fc <JPEGPreDecode+0x51c>
movl   $0x1,0x5c(%r15)
movl   $0x0,0x64(%r15)
lea    -0x1b2f(%rip),%rax        # 328d0 <DecodeRowError>
mov    %rax,0x2f8(%r14)
lea    -0x263d(%rip),%rax        # 31dd0 <JPEGDecodeRaw>
mov    %rax,0x308(%r14)
mov    %rax,0x318(%r14)
mov    %r15,%rdi
callq  32e80 <TIFFjpeg_start_decompress>
test   %eax,%eax
jne    3447d <JPEGPreDecode+0x69d>
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
xor    %eax,%eax
mov    -0x40(%rbp),%r15
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%r14),%rdi
mov    %r12,%rsi
callq  8a00 <TIFFErrorExt@plt>
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
xor    %eax,%eax
mov    -0x40(%rbp),%r15
leaveq 
retq   
movzwl 0x494(%r15),%eax
cmp    $0x1,%ax
je     342fc <JPEGPreDecode+0x51c>
pushq  -0x20(%rbp)
popq   -0x28(%rbp)
jmpq   342fc <JPEGPreDecode+0x51c>
test   %r12d,%r12d
jg     34499 <JPEGPreDecode+0x6b9>
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
mov    $0x1,%eax
mov    -0x40(%rbp),%r15
leaveq 
retq   
mov    %r14,%rdi
mov    0x130(%r15),%rsi
movslq 0x38(%r15),%rdx
callq  33530 <alloc_downsampled_buffers>
test   %eax,%eax
jne    344c4 <JPEGPreDecode+0x6e4>
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
xor    %eax,%eax
mov    -0x40(%rbp),%r15
leaveq 
retq   
movl   $0x8,0x4f0(%r15)
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
mov    $0x1,%eax
mov    -0x40(%rbp),%r15
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)

00000000000344f0 <unsuppress_quant_table>:
push   %rbp
mov    %rsp,%rbp
movslq %esi,%rax
mov    0x70(%rdi,%rax,8),%rax
test   %rax,%rax
jne    34503 <unsuppress_quant_table+0x13>
leaveq 
retq   
movl   $0x0,0x80(%rax)
leaveq 
retq   
nop

0000000000034510 <suppress_quant_table>:
push   %rbp
mov    %rsp,%rbp
movslq %esi,%rax
mov    0x70(%rdi,%rax,8),%rax
test   %rax,%rax
jne    34523 <suppress_quant_table+0x13>
leaveq 
retq   
movl   $0x1,0x80(%rax)
leaveq 
retq   
nop

0000000000034530 <unsuppress_huff_table>:
push   %rbp
mov    %rsp,%rbp
movslq %esi,%rax
lea    (%rdi,%rax,8),%rcx
mov    0xa0(%rcx),%rax
test   %rax,%rax
je     34551 <unsuppress_huff_table+0x21>
movl   $0x0,0x114(%rax)
mov    0xc0(%rcx),%rax
test   %rax,%rax
jne    3455f <unsuppress_huff_table+0x2f>
leaveq 
retq   
movl   $0x0,0x114(%rax)
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

0000000000034570 <suppress_huff_table>:
push   %rbp
mov    %rsp,%rbp
movslq %esi,%rax
lea    (%rdi,%rax,8),%rcx
mov    0xa0(%rcx),%rax
test   %rax,%rax
je     34591 <suppress_huff_table+0x21>
movl   $0x1,0x114(%rax)
mov    0xc0(%rcx),%rax
test   %rax,%rax
jne    3459f <suppress_huff_table+0x2f>
leaveq 
retq   
movl   $0x1,0x114(%rax)
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

00000000000345b0 <prepare_JPEGTables>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %rdi,-0x8(%rbp)
mov    0x350(%rdi),%rdi
mov    %rdi,-0x10(%rbp)
movslq 0x52c(%rdi),%rsi
xor    %edx,%edx
callq  32be0 <TIFFjpeg_set_quality>
test   %eax,%eax
jne    345dd <prepare_JPEGTables+0x2d>
xor    %eax,%eax
leaveq 
retq   
mov    $0x1,%esi
mov    -0x10(%rbp),%rax
mov    %rax,%rdi
mov    %r15,-0x10(%rbp)
mov    %rax,%r15
callq  32c30 <TIFFjpeg_suppress_tables>
test   %eax,%eax
jne    34601 <prepare_JPEGTables+0x51>
mov    -0x10(%rbp),%r15
xor    %eax,%eax
leaveq 
retq   
movslq 0x534(%r15),%rax
and    $0x1,%eax
test   %eax,%eax
jg     34635 <prepare_JPEGTables+0x85>
movslq 0x534(%r15),%rax
and    $0x2,%eax
test   %eax,%eax
jg     3465c <prepare_JPEGTables+0xac>
mov    %r15,%rdi
mov    -0x8(%rbp),%rsi
callq  332c0 <TIFFjpeg_tables_dest>
test   %eax,%eax
jne    34683 <prepare_JPEGTables+0xd3>
mov    -0x10(%rbp),%r15
xor    %eax,%eax
leaveq 
retq   
mov    %r15,%rdi
xor    %esi,%esi
callq  344f0 <unsuppress_quant_table>
movzwl 0x490(%r15),%eax
cmp    $0x6,%ax
jne    3460f <prepare_JPEGTables+0x5f>
mov    %r15,%rdi
mov    $0x1,%esi
callq  344f0 <unsuppress_quant_table>
jmp    3460f <prepare_JPEGTables+0x5f>
mov    %r15,%rdi
xor    %esi,%esi
callq  34530 <unsuppress_huff_table>
movzwl 0x490(%r15),%eax
cmp    $0x6,%ax
jne    3461d <prepare_JPEGTables+0x6d>
mov    %r15,%rdi
mov    $0x1,%esi
callq  34530 <unsuppress_huff_table>
jmp    3461d <prepare_JPEGTables+0x6d>
mov    %r15,%rdi
callq  32db0 <TIFFjpeg_write_tables>
test   %eax,%eax
jne    34697 <prepare_JPEGTables+0xe7>
mov    -0x10(%rbp),%r15
xor    %eax,%eax
leaveq 
retq   
mov    $0x1,%eax
mov    -0x10(%rbp),%r15
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   (%rax)

00000000000346b0 <JPEGSetupEncode>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
xor    %esi,%esi
mov    0x350(%rdi),%r15
mov    %rdi,%r14
callq  32790 <JPEGInitializeLibJPEG>
test   %r15,%r15
jne    346f5 <JPEGSetupEncode+0x45>
lea    0x3b3d0(%rip),%rdi        # 6faad <module.62+0x37b>
mov    $0x6ca,%edx
lea    0x3bb4d(%rip),%rcx        # 70236 <module.66+0x10>
lea    0x3b28b(%rip),%rsi        # 6f97b <module.62+0x249>
callq  8490 <__assert_fail@plt>
movslq 0x20(%r15),%rax
test   %eax,%eax
jne    34744 <JPEGSetupEncode+0x94>
movzwl 0x7a(%r14),%ecx
mov    %cx,0x490(%r15)
movzwl 0xaa(%r14),%eax
cmp    $0x1,%ax
je     34763 <JPEGSetupEncode+0xb3>
movl   $0x1,0x38(%r15)
movl   $0x0,0x3c(%r15)
mov    %r15,%rdi
callq  32b50 <TIFFjpeg_set_defaults>
test   %eax,%eax
jne    347bc <JPEGSetupEncode+0x10c>
xor    %eax,%eax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
lea    0x3bafb(%rip),%rdi        # 70246 <module.66+0x20>
mov    $0x6cb,%edx
lea    0x3badf(%rip),%rcx        # 70236 <module.66+0x10>
lea    0x3b21d(%rip),%rsi        # 6f97b <module.62+0x249>
callq  8490 <__assert_fail@plt>
movzwl 0x82(%r14),%eax
mov    %eax,0x38(%r15)
cmp    $0x6,%cx
je     3486b <JPEGSetupEncode+0x1bb>
movzwl 0x7a(%r14),%eax
test   %ax,%ax
je     34888 <JPEGSetupEncode+0x1d8>
cmp    $0x1,%ax
je     34888 <JPEGSetupEncode+0x1d8>
movzwl 0x7a(%r14),%eax
cmp    $0x2,%ax
je     348a7 <JPEGSetupEncode+0x1f7>
movzwl 0x7a(%r14),%eax
cmp    $0x5,%ax
je     348c6 <JPEGSetupEncode+0x216>
movl   $0x0,0x3c(%r15)
jmpq   34728 <JPEGSetupEncode+0x78>
lea    0x3ba63(%rip),%rsi        # 70226 <module.66>
lea    0x3bac7(%rip),%rdx        # 70291 <module.66+0x6b>
mov    $0x1,%r8d
movzwl 0x490(%r15),%ecx
cmp    $0x3,%cx
jbe    348e5 <JPEGSetupEncode+0x235>
cmp    $0x4,%cx
je     34977 <JPEGSetupEncode+0x2c7>
cmp    $0x6,%cx
jne    348ef <JPEGSetupEncode+0x23f>
movzwl 0x108(%r14),%ecx
mov    %cx,0x492(%r15)
movzwl 0x10a(%r14),%eax
mov    %ax,0x494(%r15)
test   %cx,%cx
je     34998 <JPEGSetupEncode+0x2e8>
test   %ax,%ax
je     34998 <JPEGSetupEncode+0x2e8>
movzwl 0x74(%r14),%ecx
cmp    $0x10,%cx
ja     349b9 <JPEGSetupEncode+0x309>
xor    %eax,%eax
mov    $0x214,%esi
lea    -0x30(%rbp),%rdx
mov    %r14,%rdi
callq  8230 <TIFFGetField@plt>
test   %eax,%eax
je     349d3 <JPEGSetupEncode+0x323>
lea    0x3ba38(%rip),%rdx        # 70291 <module.66+0x6b>
lea    0x3b9c6(%rip),%rsi        # 70226 <module.66>
mov    $0x1,%r8d
jmpq   34903 <JPEGSetupEncode+0x253>
movslq 0x530(%r15),%rax
cmp    $0x1,%eax
je     34a3f <JPEGSetupEncode+0x38f>
movl   $0x3,0x3c(%r15)
jmpq   34728 <JPEGSetupEncode+0x78>
movzwl 0x82(%r14),%eax
cmp    $0x1,%ax
jne    34791 <JPEGSetupEncode+0xe1>
movl   $0x1,0x3c(%r15)
jmpq   34728 <JPEGSetupEncode+0x78>
movzwl 0x82(%r14),%eax
cmp    $0x3,%ax
jne    347a0 <JPEGSetupEncode+0xf0>
movl   $0x2,0x3c(%r15)
jmpq   34728 <JPEGSetupEncode+0x78>
movzwl 0x82(%r14),%eax
cmp    $0x4,%ax
jne    347af <JPEGSetupEncode+0xff>
movl   $0x4,0x3c(%r15)
jmpq   34728 <JPEGSetupEncode+0x78>
cmp    $0x3,%cx
je     34977 <JPEGSetupEncode+0x2c7>
movw   $0x1,0x492(%r15)
movw   $0x1,0x494(%r15)
movzwl 0x74(%r14),%ecx
cmp    $0x8,%cx
jne    34a4c <JPEGSetupEncode+0x39c>
movl   $0x8,0x58(%r15)
mov    0x10(%r14),%eax
and    $0x400,%eax
test   %eax,%eax
jne    34a66 <JPEGSetupEncode+0x3b6>
mov    0x84(%r14),%eax
mov    0x5c(%r14),%ecx
cmp    %eax,%ecx
ja     34ac8 <JPEGSetupEncode+0x418>
movslq 0x534(%r15),%rax
and    $0x3,%eax
test   %eax,%eax
jg     34b0b <JPEGSetupEncode+0x45b>
mov    0x48(%r14),%rax
and    $0xfffffffffffffffb,%rax
mov    %rax,0x48(%r14)
mov    %r14,%rsi
mov    %r8,%r14
mov    %r15,%rdi
callq  33190 <TIFFjpeg_data_dest>
mov    %r14,%rax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%r14),%rdi
lea    0x3b930(%rip),%rdx        # 702b7 <module.66+0x91>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%r14),%rdi
lea    0x3b8be(%rip),%rdx        # 70266 <module.66+0x40>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%r14),%rdi
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
xorpd  %xmm0,%xmm0
movzwl 0x74(%r14),%ecx
movss  %xmm0,-0x28(%rbp)
mov    $0x1,%eax
shl    %cl,%rax
lea    -0x1(%rax),%rcx
cvtsi2ss %rcx,%xmm1
movss  %xmm1,-0x24(%rbp)
sar    %rax
cvtsi2ss %rax,%xmm0
movss  %xmm0,-0x20(%rbp)
movss  %xmm1,-0x1c(%rbp)
movss  %xmm0,-0x18(%rbp)
movss  %xmm1,-0x14(%rbp)
xor    %eax,%eax
lea    -0x28(%rbp),%rdx
mov    %r14,%rdi
mov    $0x214,%esi
callq  8290 <TIFFSetField@plt>
lea    0x3b864(%rip),%rdx        # 70291 <module.66+0x6b>
lea    0x3b7f2(%rip),%rsi        # 70226 <module.66>
mov    $0x1,%r8d
jmpq   34903 <JPEGSetupEncode+0x253>
movl   $0x2,0x3c(%r15)
jmpq   34728 <JPEGSetupEncode+0x78>
xor    %eax,%eax
mov    0x3b8(%r14),%rdi
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
mov    0x68(%r14),%eax
movzwl 0x494(%r15),%ecx
shl    $0x3,%ecx
xor    %edx,%edx
div    %ecx
test   %edx,%edx
jne    34b37 <JPEGSetupEncode+0x487>
mov    0x64(%r14),%eax
movzwl 0x492(%r15),%ecx
shl    $0x3,%ecx
xor    %edx,%edx
div    %ecx
test   %edx,%edx
je     3493e <JPEGSetupEncode+0x28e>
xor    %eax,%eax
mov    0x3b8(%r14),%rdi
lea    0x3b865(%rip),%rdx        # 70311 <module.66+0xeb>
movzwl 0x492(%r15),%ecx
shl    $0x3,%ecx
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
movzwl 0x494(%r15),%ecx
shl    $0x3,%ecx
xor    %edx,%edx
div    %ecx
test   %edx,%edx
je     3493e <JPEGSetupEncode+0x28e>
xor    %eax,%eax
mov    0x3b8(%r14),%rdi
lea    0x3b849(%rip),%rdx        # 70338 <module.66+0x112>
movzwl 0x494(%r15),%ecx
shl    $0x3,%ecx
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
mov    0x520(%r15),%rdi
test   %rdi,%rdi
je     34b63 <JPEGSetupEncode+0x4b3>
lea    0x3b847(%rip),%rsi        # 70365 <module.66+0x13f>
mov    $0x8,%edx
callq  8610 <memcmp@plt>
test   %eax,%eax
je     34b63 <JPEGSetupEncode+0x4b3>
mov    $0x1,%r8d
jmpq   3495c <JPEGSetupEncode+0x2ac>
xor    %eax,%eax
mov    0x3b8(%r14),%rdi
lea    0x3b7a2(%rip),%rdx        # 702e9 <module.66+0xc3>
movzwl 0x494(%r15),%ecx
shl    $0x3,%ecx
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
mov    %r14,%rdi
callq  345b0 <prepare_JPEGTables>
test   %eax,%eax
jne    34b7b <JPEGSetupEncode+0x4cb>
xor    %eax,%eax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
mov    0x10(%r14),%eax
or     $0x8,%eax
mov    %eax,0x10(%r14)
mov    0x48(%r14),%rax
or     $0x4,%rax
mov    %rax,0x48(%r14)
mov    $0x1,%r8d
jmpq   3495c <JPEGSetupEncode+0x2ac>
nopl   (%rax)

0000000000034ba0 <JPEGPreEncode>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
lea    0x3adcc(%rip),%rax        # 6f97b <module.62+0x249>
lea    0x3b7c7(%rip),%rcx        # 7037d <module.76+0xe>
mov    0x350(%rdi),%r8
test   %r8,%r8
jne    34bd6 <JPEGPreEncode+0x36>
mov    %rax,%rsi
lea    0x3aee1(%rip),%rdi        # 6faad <module.62+0x37b>
mov    $0x773,%edx
callq  8490 <__assert_fail@plt>
movslq 0x20(%r8),%rdx
cmp    $0x1,%edx
je     34bfc <JPEGPreEncode+0x5c>
mov    %r13,%rdx
mov    %rsi,%r13
mov    %rax,%rsi
mov    %r14,%rax
mov    %rbx,%r14
mov    %r8,%rbx
mov    %r15,%r8
mov    %r12,%r9
mov    %rdi,%r12
jmp    34c42 <JPEGPreEncode+0xa2>
mov    %rdi,%rax
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rsi,%r13
mov    %rbx,%r14
mov    %r8,%rbx
mov    %r12,%r15
mov    %rdi,%r12
mov    %rax,%rdi
callq  *0x2d8(%r12)
mov    %r15,%r9
lea    0x3b74e(%rip),%rcx        # 7037d <module.76+0xe>
lea    0x3ad45(%rip),%rsi        # 6f97b <module.62+0x249>
mov    -0x28(%rbp),%r8
mov    -0x20(%rbp),%rax
mov    -0x18(%rbp),%rdx
movslq 0x20(%rbx),%rdi
test   %edi,%edi
jne    34ca9 <JPEGPreEncode+0x109>
mov    0x10(%r12),%ecx
and    $0x400,%ecx
test   %ecx,%ecx
jne    34cba <JPEGPreEncode+0x11a>
mov    0x58(%r12),%esi
mov    0x5c(%r12),%r15d
mov    0x27c(%r12),%ecx
sub    %ecx,%r15d
mov    0x84(%r12),%ecx
cmp    %r15d,%ecx
jae    34c7e <JPEGPreEncode+0xde>
mov    %rcx,%r15
mov    %r12,%rdi
mov    %rdx,-0x18(%rbp)
mov    %rax,-0x20(%rbp)
mov    %r8,-0x28(%rbp)
mov    %r14,-0x8(%rbp)
mov    %r9,-0x10(%rbp)
mov    %rsi,%r14
callq  8410 <TIFFScanlineSize@plt>
mov    %rax,0x498(%rbx)
mov    %r14,%rcx
jmp    34ced <JPEGPreEncode+0x14d>
lea    0x3b596(%rip),%rdi        # 70246 <module.66+0x20>
mov    $0x77a,%edx
callq  8490 <__assert_fail@plt>
mov    0x64(%r12),%ecx
mov    0x68(%r12),%r15d
mov    %r12,%rdi
mov    %rdx,-0x18(%rbp)
mov    %rax,-0x20(%rbp)
mov    %r8,-0x28(%rbp)
mov    %r14,-0x8(%rbp)
mov    %r9,-0x10(%rbp)
mov    %rcx,%r14
callq  80d0 <TIFFTileRowSize@plt>
mov    %rax,0x498(%rbx)
mov    %r14,%rcx
xor    %r14d,%r14d
movzwl 0xaa(%r12),%eax
cmp    $0x2,%ax
je     34d5c <JPEGPreEncode+0x1bc>
cmp    $0xffff,%ecx
ja     34d7e <JPEGPreEncode+0x1de>
cmp    $0xffff,%r15d
ja     34d7e <JPEGPreEncode+0x1de>
mov    %ecx,0x30(%rbx)
mov    %r15d,0x34(%rbx)
mov    $0x1,%r15d
movzwl 0xaa(%r12),%eax
cmp    $0x1,%ax
je     34db4 <JPEGPreEncode+0x214>
mov    %rbx,%rdi
mov    %r14,%rsi
callq  32b90 <TIFFjpeg_set_colorspace>
test   %eax,%eax
jne    34de8 <JPEGPreEncode+0x248>
mov    %r14,%rax
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
leaveq 
retq   
test   %r13w,%r13w
je     34cff <JPEGPreEncode+0x15f>
movzwl 0x492(%rbx),%esi
mov    %rsi,%rax
neg    %eax
cmp    %ecx,%eax
ja     34e0b <JPEGPreEncode+0x26b>
mov    %r14,%rcx
jmpq   34e16 <JPEGPreEncode+0x276>
xor    %eax,%eax
mov    0x3b8(%r12),%rdi
lea    0x3b5e0(%rip),%rsi        # 7036f <module.76>
lea    0x3b5f5(%rip),%rdx        # 7038b <module.76+0x1c>
callq  8a00 <TIFFErrorExt@plt>
mov    %r14,%rax
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
leaveq 
retq   
movzwl 0x82(%r12),%eax
mov    %eax,0x38(%rbx)
movzwl 0x490(%rbx),%eax
cmp    $0x6,%ax
je     34e33 <JPEGPreEncode+0x293>
mov    0x3c(%rbx),%esi
mov    %rbx,%rdi
callq  32b90 <TIFFjpeg_set_colorspace>
test   %eax,%eax
je     34e70 <JPEGPreEncode+0x2d0>
mov    %r14,%r13
jmpq   34ea5 <JPEGPreEncode+0x305>
movzwl %r13w,%ecx
mov    0x68(%rbx),%rax
mov    %ecx,(%rax)
movzwl 0x490(%rbx),%eax
cmp    $0x6,%ax
je     34ee8 <JPEGPreEncode+0x348>
mov    %r14,%r13
jmpq   34ea5 <JPEGPreEncode+0x305>
lea    -0x1(%rsi,%rcx,1),%eax
xor    %edx,%edx
div    %esi
mov    %rax,%rcx
movzwl 0x494(%rbx),%esi
mov    %rsi,%rax
neg    %eax
cmp    %r15d,%eax
ja     34ef3 <JPEGPreEncode+0x353>
mov    %r14,%r15
jmpq   34cff <JPEGPreEncode+0x15f>
movslq 0x530(%rbx),%rax
cmp    $0x1,%eax
jne    34f04 <JPEGPreEncode+0x364>
mov    %r14,%r13
mov    $0x3,%esi
mov    %rbx,%rdi
callq  32b90 <TIFFjpeg_set_colorspace>
test   %eax,%eax
jne    34e89 <JPEGPreEncode+0x2e9>
mov    %r14,%rax
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
leaveq 
retq   
mov    %r14,%rax
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
leaveq 
retq   
movzwl 0x492(%rbx),%ecx
mov    0x68(%rbx),%rax
mov    %ecx,0x8(%rax)
movzwl 0x494(%rbx),%ecx
mov    0x68(%rbx),%rax
mov    %ecx,0xc(%rax)
movl   $0x0,0x144(%rbx)
movl   $0x0,0x150(%rbx)
movslq 0x52c(%rbx),%rsi
mov    %rbx,%rdi
mov    %r14,%rdx
callq  32be0 <TIFFjpeg_set_quality>
test   %eax,%eax
jne    34f19 <JPEGPreEncode+0x379>
mov    %r14,%rax
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
leaveq 
retq   
test   %r13w,%r13w
jne    34f3f <JPEGPreEncode+0x39f>
mov    %r14,%r13
jmp    34ea5 <JPEGPreEncode+0x305>
lea    -0x1(%rsi,%r15,1),%eax
xor    %edx,%edx
div    %esi
mov    %rax,%r15
jmpq   34cff <JPEGPreEncode+0x15f>
movzwl 0x492(%rbx),%eax
cmp    $0x1,%ax
je     34f68 <JPEGPreEncode+0x3c8>
mov    %r15,%r13
jmpq   34e46 <JPEGPreEncode+0x2a6>
movslq 0x534(%rbx),%rax
and    $0x1,%eax
test   %eax,%eax
jg     34f7d <JPEGPreEncode+0x3dd>
mov    %rbx,%rdi
mov    %r14,%rsi
callq  344f0 <unsuppress_quant_table>
mov    %rbx,%rdi
mov    %r15,%rsi
callq  344f0 <unsuppress_quant_table>
jmp    34f93 <JPEGPreEncode+0x3f3>
mov    0x68(%rbx),%rax
movl   $0x1,0x10(%rax)
mov    0x68(%rbx),%rax
movl   $0x1,0x14(%rax)
mov    0x68(%rbx),%rax
movl   $0x1,0x18(%rax)
mov    %r14,%r13
jmpq   34ea5 <JPEGPreEncode+0x305>
movzwl 0x494(%rbx),%eax
cmp    $0x1,%ax
jne    34fad <JPEGPreEncode+0x40d>
mov    %r14,%r13
jmpq   34e46 <JPEGPreEncode+0x2a6>
mov    %rbx,%rdi
mov    %r14,%rsi
callq  34510 <suppress_quant_table>
mov    %rbx,%rdi
mov    %r15,%rsi
callq  34510 <suppress_quant_table>
movslq 0x534(%rbx),%rax
and    $0x2,%eax
test   %eax,%eax
jg     34fb5 <JPEGPreEncode+0x415>
movl   $0x1,0x128(%rbx)
jmp    34fd5 <JPEGPreEncode+0x435>
mov    %r15,%r13
jmpq   34e46 <JPEGPreEncode+0x2a6>
mov    %rbx,%rdi
mov    %r14,%rsi
callq  34570 <suppress_huff_table>
mov    %rbx,%rdi
mov    %r15,%rsi
callq  34570 <suppress_huff_table>
movl   $0x0,0x128(%rbx)
test   %r13d,%r13d
jg     35005 <JPEGPreEncode+0x465>
movl   $0x0,0x120(%rbx)
lea    -0x2e7b(%rip),%rax        # 32170 <JPEGEncode>
mov    %rax,0x300(%r12)
mov    %rax,0x310(%r12)
mov    %rax,0x320(%r12)
jmp    3502e <JPEGPreEncode+0x48e>
movl   $0x1,0x120(%rbx)
lea    -0x2be6(%rip),%rax        # 32430 <JPEGEncodeRaw>
mov    %rax,0x300(%r12)
mov    %rax,0x310(%r12)
mov    %rax,0x320(%r12)
mov    %rbx,%rdi
mov    %r14,%rsi
callq  32c80 <TIFFjpeg_start_compress>
test   %eax,%eax
jne    35056 <JPEGPreEncode+0x4b6>
mov    %r14,%rax
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
leaveq 
retq   
test   %r13d,%r13d
jg     3507e <JPEGPreEncode+0x4de>
movl   $0x0,0x4f0(%rbx)
mov    %r15,%rax
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
leaveq 
retq   
mov    %r12,%rdi
mov    0x68(%rbx),%rsi
movslq 0x5c(%rbx),%rdx
callq  33530 <alloc_downsampled_buffers>
test   %eax,%eax
jne    3505b <JPEGPreEncode+0x4bb>
mov    %r14,%rax
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

00000000000350b0 <JPEGPostEncode>:
push   %rbp
mov    %rsp,%rbp
sub    $0x50,%rsp
mov    0x350(%rdi),%rsi
mov    %rsi,-0x40(%rbp)
movslq 0x4f0(%rsi),%rax
test   %eax,%eax
jg     350dc <JPEGPostEncode+0x2c>
mov    0x350(%rdi),%rdi
callq  32d70 <TIFFjpeg_finish_compress>
leaveq 
retq   
mov    0x68(%rsi),%rax
lea    0x4a0(%rsi),%rdx
xor    %ecx,%ecx
mov    %rbx,-0x10(%rbp)
mov    %r12,-0x18(%rbp)
mov    %r13,-0x20(%rbp)
mov    %r14,-0x28(%rbp)
mov    %r15,-0x30(%rbp)
mov    %rdi,-0x8(%rbp)
mov    %rsi,%rdi
mov    %rdx,%rbx
jmp    35143 <JPEGPostEncode+0x93>
mov    (%rbx,%r14,8),%rcx
movslq %r13d,%rax
mov    (%rcx,%rax,8),%rdi
lea    -0x1(%r13),%eax
movslq %eax,%rax
mov    (%rcx,%rax,8),%rsi
mov    %r15,%rdx
callq  8790 <_TIFFmemcpy@plt>
add    $0x1,%r13d
cmp    %r12d,%r13d
jl     35109 <JPEGPostEncode+0x59>
mov    -0x48(%rbp),%rax
lea    0x1(%rax),%ecx
mov    -0x38(%rbp),%rax
add    $0x60,%rax
mov    -0x40(%rbp),%rdi
movslq 0x5c(%rdi),%rdx
cmp    %ecx,%edx
jg     35183 <JPEGPostEncode+0xd3>
movslq 0x160(%rdi),%r12
shl    $0x3,%r12d
mov    %rbx,%rsi
mov    %r12,%rdx
callq  32d20 <TIFFjpeg_write_raw_data>
cmp    %r12d,%eax
jne    351af <JPEGPostEncode+0xff>
mov    -0x8(%rbp),%rdi
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
mov    -0x10(%rbp),%rbx
jmpq   350ce <JPEGPostEncode+0x1e>
movslq 0xc(%rax),%r12
mov    %r12,%r13
imul   0x4f0(%rdi),%r13d
movslq %ecx,%r14
mov    0x1c(%rax),%edx
shl    $0x3,%edx
mov    %edx,%r15d
shl    $0x3,%r12d
mov    %rcx,-0x48(%rbp)
mov    %rax,-0x38(%rbp)
jmpq   3512b <JPEGPostEncode+0x7b>
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
mov    -0x10(%rbp),%rbx
xor    %eax,%eax
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

00000000000351d0 <JPEGCleanup>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x10(%rbp)
mov    0x350(%rdi),%rax
test   %rax,%rax
jne    35207 <JPEGCleanup+0x37>
lea    0x3b1ba(%rip),%rdi        # 703a9 <module.76+0x3a>
lea    0x3a785(%rip),%rsi        # 6f97b <module.62+0x249>
mov    $0x8bd,%edx
lea    0x3b1af(%rip),%rcx        # 703b1 <module.76+0x42>
callq  8490 <__assert_fail@plt>
mov    0x4f8(%rax),%rcx
mov    %rcx,0x410(%rdi)
mov    0x500(%rax),%rcx
mov    %rcx,0x408(%rdi)
mov    0x508(%rax),%rcx
mov    %rcx,0x418(%rdi)
movslq 0x290(%rax),%rcx
test   %ecx,%ecx
jne    35241 <JPEGCleanup+0x71>
mov    %rdi,%r15
jmp    3525d <JPEGCleanup+0x8d>
mov    %rax,%rcx
mov    %r14,-0x8(%rbp)
mov    %rax,%r14
mov    %rdi,%r15
mov    %rcx,%rdi
callq  33020 <TIFFjpeg_destroy>
mov    %r14,%rax
mov    -0x8(%rbp),%r14
mov    0x520(%rax),%rdi
test   %rdi,%rdi
je     3526e <JPEGCleanup+0x9e>
callq  8bb0 <_TIFFfree@plt>
mov    0x350(%r15),%rdi
callq  8bb0 <_TIFFfree@plt>
mov    %r15,%rdi
movq   $0x0,0x350(%rdi)
callq  8740 <_TIFFSetDefaultCompressionState@plt>
mov    -0x10(%rbp),%r15
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

00000000000352a0 <JPEGResetUpsampled>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    0x350(%rdi),%rdx
mov    0x10(%rdi),%eax
mov    %rax,%rcx
and    $0xffffbfff,%ecx
mov    %ecx,0x10(%rdi)
movzwl 0xaa(%rdi),%ecx
cmp    $0x1,%cx
je     352ec <JPEGResetUpsampled+0x4c>
mov    0x2b0(%rdi),%rax
test   %rax,%rax
jle    3532c <JPEGResetUpsampled+0x8c>
mov    0x10(%rdi),%eax
and    $0x400,%eax
test   %eax,%eax
jne    3530c <JPEGResetUpsampled+0x6c>
mov    $0xffffffffffffffff,%rax
jmp    35325 <JPEGResetUpsampled+0x85>
movzwl 0x7a(%rdi),%ecx
cmp    $0x6,%cx
jne    352cb <JPEGResetUpsampled+0x2b>
movslq 0x530(%rdx),%rcx
cmp    $0x1,%ecx
jne    352cb <JPEGResetUpsampled+0x2b>
or     $0x4000,%eax
mov    %eax,0x10(%rdi)
jmp    352cb <JPEGResetUpsampled+0x2b>
mov    %rdi,%rax
mov    %r15,-0x8(%rbp)
mov    %rdi,%r15
mov    %rax,%rdi
callq  8910 <TIFFTileSize@plt>
mov    %r15,%rdi
mov    -0x8(%rbp),%r15
mov    %rax,0x2b0(%rdi)
mov    0x358(%rdi),%rax
test   %rax,%rax
jg     3533a <JPEGResetUpsampled+0x9a>
leaveq 
retq   
mov    %rdi,%rax
mov    %r15,-0x8(%rbp)
mov    %rdi,%r15
mov    %rax,%rdi
callq  8410 <TIFFScanlineSize@plt>
mov    %rax,0x358(%r15)
mov    -0x8(%rbp),%r15
leaveq 
retq   
nopl   0x0(%rax)

0000000000035360 <JPEGVSetField>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    0x350(%rdi),%rcx
test   %rcx,%rcx
jne    35393 <JPEGVSetField+0x33>
lea    0x3a732(%rip),%rdi        # 6faad <module.62+0x37b>
lea    0x3a5f9(%rip),%rsi        # 6f97b <module.62+0x249>
mov    $0x8f6,%edx
lea    0x3b02f(%rip),%rcx        # 703bd <module.76+0x4e>
callq  8490 <__assert_fail@plt>
mov    $0x1,%eax
cmp    $0x10000,%esi
jbe    353d4 <JPEGVSetField+0x74>
cmp    $0x10001,%esi
jbe    3540c <JPEGVSetField+0xac>
cmp    $0x10002,%esi
jne    35434 <JPEGVSetField+0xd4>
movslq (%rdx),%rsi
cmp    $0x2f,%esi
jle    3545c <JPEGVSetField+0xfc>
mov    0x8(%rdx),%rsi
lea    0x8(%rsi),%rax
mov    %rax,0x8(%rdx)
movslq (%rsi),%rax
jmpq   35469 <JPEGVSetField+0x109>
cmp    $0x15a,%esi
jbe    3547b <JPEGVSetField+0x11b>
cmp    $0x15b,%esi
jne    3548b <JPEGVSetField+0x12b>
movslq (%rdx),%rsi
cmp    $0x2f,%esi
jle    354ad <JPEGVSetField+0x14d>
mov    0x8(%rdx),%rsi
lea    0x8(%rsi),%rax
mov    %rax,0x8(%rdx)
mov    (%rsi),%r8d
jmpq   354ba <JPEGVSetField+0x15a>
cmp    $0x10001,%esi
jne    35483 <JPEGVSetField+0x123>
movslq (%rdx),%rdi
cmp    $0x2f,%edi
jle    354c3 <JPEGVSetField+0x163>
mov    0x8(%rdx),%rdi
lea    0x8(%rdi),%rsi
mov    %rsi,0x8(%rdx)
movslq (%rdi),%rsi
jmpq   354d0 <JPEGVSetField+0x170>
cmp    $0x10003,%esi
jne    35483 <JPEGVSetField+0x123>
movslq (%rdx),%rdi
cmp    $0x2f,%edi
jle    354d8 <JPEGVSetField+0x178>
mov    0x8(%rdx),%rdi
lea    0x8(%rdi),%rsi
mov    %rsi,0x8(%rdx)
movslq (%rdi),%rsi
jmpq   354e5 <JPEGVSetField+0x185>
mov    0x10(%rdx),%rax
movslq (%rax,%rsi,1),%rax
add    $0x8,%esi
mov    %esi,(%rdx)
mov    %eax,0x530(%rcx)
callq  352a0 <JPEGResetUpsampled>
mov    $0x1,%eax
leaveq 
retq   
cmp    $0x106,%esi
je     354ed <JPEGVSetField+0x18d>
callq  *0x500(%rcx)
leaveq 
retq   
cmp    $0x212,%esi
jne    35483 <JPEGVSetField+0x123>
movl   $0x1,0x538(%rcx)
mov    0x500(%rcx),%rax
mov    $0x212,%esi
callq  *%rax
leaveq 
retq   
mov    0x10(%rdx),%rax
mov    (%rax,%rsi,1),%r8d
lea    0x8(%rsi),%eax
mov    %eax,(%rdx)
xor    %eax,%eax
test   %r8d,%r8d
jne    35519 <JPEGVSetField+0x1b9>
leaveq 
retq   
mov    0x10(%rdx),%rsi
movslq (%rsi,%rdi,1),%rsi
add    $0x8,%edi
mov    %edi,(%rdx)
mov    %esi,0x52c(%rcx)
leaveq 
retq   
mov    0x10(%rdx),%rsi
movslq (%rsi,%rdi,1),%rsi
add    $0x8,%edi
mov    %edi,(%rdx)
mov    %esi,0x534(%rcx)
leaveq 
retq   
mov    $0x106,%esi
mov    %rdi,%rax
mov    %r15,-0x18(%rbp)
mov    %rdi,%r15
mov    %rax,%rdi
callq  *0x500(%rcx)
mov    %r15,%rdi
mov    %rax,%r15
callq  352a0 <JPEGResetUpsampled>
mov    %r15,%rax
mov    -0x18(%rbp),%r15
leaveq 
retq   
movslq (%rdx),%r9
cmp    $0x2f,%r9d
jle    35533 <JPEGVSetField+0x1d3>
mov    0x8(%rdx),%rsi
lea    0x8(%rsi),%rax
mov    %rax,0x8(%rdx)
mov    (%rsi),%rsi
jmp    35541 <JPEGVSetField+0x1e1>
mov    0x10(%rdx),%rax
mov    (%rax,%r9,1),%rsi
lea    0x8(%r9),%eax
mov    %eax,(%rdx)
lea    0x520(%rcx),%rax
mov    %r8,%rdx
mov    %r13,-0x8(%rbp)
mov    %r14,-0x10(%rbp)
mov    %r15,-0x18(%rbp)
mov    %rdi,%r13
mov    %rax,%rdi
mov    %rcx,%r14
mov    %r8,%r15
callq  8aa0 <_TIFFsetByteArray@plt>
mov    %r15d,0x528(%r14)
mov    0x48(%r13),%rax
or     $0x4,%rax
mov    %rax,0x48(%r13)
mov    $0x15b,%esi
mov    %r13,%rdi
callq  8ae0 <TIFFFieldWithTag@plt>
test   %rax,%rax
jne    3559d <JPEGVSetField+0x23d>
xor    %eax,%eax
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
leaveq 
retq   
movzwl 0x18(%rax),%edx
mov    %rdx,%rcx
and    $0x1f,%ecx
mov    $0x1,%eax
mov    %rax,%rsi
shl    %cl,%rsi
shr    $0x5,%edx
movslq %edx,%rcx
or     0x38(%r13,%rcx,8),%rsi
mov    %rsi,0x38(%r13,%rcx,8)
mov    0x10(%r13),%ecx
or     $0x8,%ecx
mov    %ecx,0x10(%r13)
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

00000000000355e0 <JPEGVGetField>:
push   %rbp
mov    %rsp,%rbp
mov    0x350(%rdi),%r8
test   %r8,%r8
jne    3560f <JPEGVGetField+0x2f>
lea    0x3a4b6(%rip),%rdi        # 6faad <module.62+0x37b>
lea    0x3a37d(%rip),%rsi        # 6f97b <module.62+0x249>
mov    $0x92b,%edx
lea    0x3adc1(%rip),%rcx        # 703cb <module.76+0x5c>
callq  8490 <__assert_fail@plt>
mov    $0x1,%eax
cmp    $0x10001,%esi
jbe    3563d <JPEGVGetField+0x5d>
cmp    $0x10002,%esi
jne    3565e <JPEGVGetField+0x7e>
movslq (%rdx),%rsi
cmp    $0x2f,%esi
jle    35687 <JPEGVGetField+0xa7>
mov    0x8(%rdx),%rsi
lea    0x8(%rsi),%rcx
mov    %rcx,0x8(%rdx)
mov    (%rsi),%rcx
jmp    35694 <JPEGVGetField+0xb4>
cmp    $0x15b,%esi
jne    3569f <JPEGVGetField+0xbf>
movslq (%rdx),%rsi
cmp    $0x2f,%esi
jle    356c0 <JPEGVGetField+0xe0>
mov    0x8(%rdx),%rsi
lea    0x8(%rsi),%rcx
mov    %rcx,0x8(%rdx)
mov    (%rsi),%rcx
jmp    356cd <JPEGVGetField+0xed>
cmp    $0x10003,%esi
jne    356ef <JPEGVGetField+0x10f>
movslq (%rdx),%rsi
cmp    $0x2f,%esi
jle    356f8 <JPEGVGetField+0x118>
mov    0x8(%rdx),%rsi
lea    0x8(%rsi),%rcx
mov    %rcx,0x8(%rdx)
mov    (%rsi),%rcx
jmp    35705 <JPEGVGetField+0x125>
mov    0x10(%rdx),%rcx
mov    (%rcx,%rsi,1),%rcx
add    $0x8,%esi
mov    %esi,(%rdx)
movslq 0x530(%r8),%rdx
mov    %edx,(%rcx)
leaveq 
retq   
cmp    $0x10001,%esi
jne    356ef <JPEGVGetField+0x10f>
movslq (%rdx),%rsi
cmp    $0x2f,%esi
jle    35710 <JPEGVGetField+0x130>
mov    0x8(%rdx),%rsi
lea    0x8(%rsi),%rcx
mov    %rcx,0x8(%rdx)
mov    (%rsi),%rcx
jmp    3571d <JPEGVGetField+0x13d>
mov    0x10(%rdx),%rcx
mov    (%rcx,%rsi,1),%rcx
add    $0x8,%esi
mov    %esi,(%rdx)
mov    0x528(%r8),%esi
mov    %esi,(%rcx)
movslq (%rdx),%rsi
cmp    $0x2f,%esi
jle    35728 <JPEGVGetField+0x148>
mov    0x8(%rdx),%rsi
lea    0x8(%rsi),%rcx
mov    %rcx,0x8(%rdx)
mov    (%rsi),%rcx
jmp    35735 <JPEGVGetField+0x155>
callq  *0x4f8(%r8)
leaveq 
retq   
mov    0x10(%rdx),%rcx
mov    (%rcx,%rsi,1),%rcx
add    $0x8,%esi
mov    %esi,(%rdx)
movslq 0x534(%r8),%rdx
mov    %edx,(%rcx)
leaveq 
retq   
mov    0x10(%rdx),%rcx
mov    (%rcx,%rsi,1),%rcx
add    $0x8,%esi
mov    %esi,(%rdx)
movslq 0x52c(%r8),%rdx
mov    %edx,(%rcx)
leaveq 
retq   
mov    0x10(%rdx),%rcx
mov    (%rcx,%rsi,1),%rcx
add    $0x8,%esi
mov    %esi,(%rdx)
mov    0x520(%r8),%rdx
mov    %rdx,(%rcx)
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   0x0(%rax)

0000000000035750 <JPEGPrintDir>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    0x350(%rdi),%rcx
test   %rcx,%rcx
jne    35783 <JPEGPrintDir+0x33>
lea    0x3a342(%rip),%rdi        # 6faad <module.62+0x37b>
lea    0x3a209(%rip),%rsi        # 6f97b <module.62+0x249>
mov    $0x946,%edx
lea    0x3ac5b(%rip),%rcx        # 703d9 <module.76+0x6a>
callq  8490 <__assert_fail@plt>
mov    0x48(%rdi),%rax
and    $0x4,%rax
test   %rax,%rax
je     357d7 <JPEGPrintDir+0x87>
xor    %eax,%eax
lea    0x3ac4d(%rip),%r10        # 703e6 <module.76+0x77>
mov    0x528(%rcx),%r8d
mov    %rsi,%r9
mov    %r15,-0x20(%rbp)
mov    %rdi,-0x8(%rbp)
mov    %rsi,-0x10(%rbp)
mov    %rdx,-0x18(%rbp)
mov    %r8,%rdx
mov    %r10,%rsi
mov    %r9,%rdi
mov    %rcx,%r15
callq  86f0 <fprintf@plt>
mov    %r15,%rcx
mov    -0x18(%rbp),%rdx
mov    -0x10(%rbp),%rsi
mov    -0x8(%rbp),%rdi
mov    -0x20(%rbp),%r15
mov    0x508(%rcx),%rax
test   %rax,%rax
jne    357e5 <JPEGPrintDir+0x95>
leaveq 
retq   
callq  *%rax
leaveq 
retq   
nopl   0x0(%rax)

00000000000357f0 <JPEGDefaultStripSize>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x8(%rbp)
mov    0x350(%rdi),%rax
mov    0x510(%rax),%rax
mov    %rdi,%r15
callq  *%rax
mov    0x5c(%r15),%ecx
cmp    %eax,%ecx
ja     3581d <JPEGDefaultStripSize+0x2d>
mov    -0x8(%rbp),%r15
leaveq 
retq   
movzwl 0x10a(%r15),%ecx
shl    $0x3,%ecx
mov    %rcx,%rdx
neg    %edx
cmp    %edx,%eax
jb     35835 <JPEGDefaultStripSize+0x45>
xor    %ecx,%ecx
jmp    35840 <JPEGDefaultStripSize+0x50>
lea    -0x1(%rax,%rcx,1),%eax
xor    %edx,%edx
div    %ecx
mov    %rax,%rcx
movzwl 0x10a(%r15),%eax
imul   %ecx,%eax
shl    $0x3,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nop

0000000000035860 <JPEGDefaultTileSize>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %r13,-0x8(%rbp)
mov    %r14,-0x10(%rbp)
mov    %r15,-0x18(%rbp)
mov    0x350(%rdi),%rax
mov    0x518(%rax),%rax
mov    %rdi,%r13
mov    %rsi,%r15
mov    %rdx,%r14
callq  *%rax
xor    %ecx,%ecx
mov    (%r15),%edx
movzwl 0x108(%r13),%esi
shl    $0x3,%esi
mov    %rsi,%rax
neg    %eax
cmp    %eax,%edx
jb     358ab <JPEGDefaultTileSize+0x4b>
mov    %rcx,%rax
jmp    358b3 <JPEGDefaultTileSize+0x53>
lea    -0x1(%rdx,%rsi,1),%eax
xor    %edx,%edx
div    %esi
movzwl 0x108(%r13),%edx
imul   %eax,%edx
shl    $0x3,%edx
mov    %edx,(%r15)
mov    (%r14),%eax
movzwl 0x10a(%r13),%esi
shl    $0x3,%esi
mov    %rsi,%rdx
neg    %edx
cmp    %edx,%eax
jae    358e6 <JPEGDefaultTileSize+0x86>
lea    -0x1(%rax,%rsi,1),%eax
xor    %edx,%edx
div    %esi
mov    %rax,%rcx
movzwl 0x10a(%r13),%eax
imul   %ecx,%eax
shl    $0x3,%eax
mov    %eax,(%r14)
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)
nop

0000000000035910 <LogL16toY>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %rdi,%rax
and    $0x7fff,%eax
test   %eax,%eax
jg     3592a <LogL16toY+0x1a>
xorpd  %xmm0,%xmm0
leaveq 
retq   
cvtsi2sd %eax,%xmm0
movsd  0x3b81a(%rip),%xmm1        # 71150 <module.60+0x87>
addsd  %xmm1,%xmm0
movsd  0x3b816(%rip),%xmm1        # 71158 <module.60+0x8f>
mulsd  %xmm1,%xmm0
movsd  0x3b812(%rip),%xmm1        # 71160 <module.60+0x97>
subsd  %xmm1,%xmm0
mov    %r15,-0x8(%rbp)
mov    %rdi,%r15
callq  8210 <exp@plt>
and    $0x8000,%r15d
test   %r15d,%r15d
jg     35970 <LogL16toY+0x60>
mov    -0x8(%rbp),%r15
leaveq 
retq   
movsd  0x3b7f0(%rip),%xmm1        # 71168 <module.60+0x9f>
xorpd  %xmm1,%xmm0
mov    -0x8(%rbp),%r15
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   (%rax)

0000000000035990 <LogL10toY>:
push   %rbp
mov    %rsp,%rbp
test   %edi,%edi
jne    3599e <LogL10toY+0xe>
xorpd  %xmm0,%xmm0
leaveq 
retq   
cvtsi2sd %edi,%xmm0
movsd  0x3b7a6(%rip),%xmm1        # 71150 <module.60+0x87>
addsd  %xmm1,%xmm0
movsd  0x3b7ba(%rip),%xmm1        # 71170 <module.60+0xa7>
mulsd  %xmm1,%xmm0
movsd  0x3b7b6(%rip),%xmm1        # 71178 <module.60+0xaf>
subsd  %xmm1,%xmm0
callq  8210 <exp@plt>
leaveq 
retq   
nopl   (%rax)

00000000000359d0 <XYZtoRGB24>:
push   %rbp
mov    %rsp,%rbp
sub    $0x40,%rsp
movsd  0x3b7f0(%rip),%xmm4        # 711d0 <module.60+0x107>
xor    %eax,%eax
mov    $0xff,%ecx
movss  0x4(%rdi),%xmm0
cvtss2sd %xmm0,%xmm1
movsd  0x3b7c8(%rip),%xmm0        # 711c0 <module.60+0xf7>
movapd %xmm1,%xmm3
mulsd  %xmm0,%xmm3
movss  (%rdi),%xmm0
cvtss2sd %xmm0,%xmm2
movsd  0x3b7b8(%rip),%xmm0        # 711c8 <module.60+0xff>
mulsd  %xmm2,%xmm0
addsd  %xmm0,%xmm3
movss  0x8(%rdi),%xmm0
cvtss2sd %xmm0,%xmm0
movsd  0x3b78f(%rip),%xmm5        # 711b8 <module.60+0xef>
mulsd  %xmm0,%xmm5
addsd  %xmm3,%xmm5
xorpd  %xmm3,%xmm3
ucomisd %xmm3,%xmm5
jp     35ab9 <XYZtoRGB24+0xe9>
ja     35ab9 <XYZtoRGB24+0xe9>
mov    %rax,%rdx
mov    %dl,(%rsi)
movsd  0x3b75e(%rip),%xmm5        # 711a8 <module.60+0xdf>
movapd %xmm1,%xmm6
mulsd  %xmm5,%xmm6
movsd  0x3b756(%rip),%xmm5        # 711b0 <module.60+0xe7>
mulsd  %xmm2,%xmm5
addsd  %xmm5,%xmm6
movsd  0x3b736(%rip),%xmm5        # 711a0 <module.60+0xd7>
mulsd  %xmm0,%xmm5
addsd  %xmm6,%xmm5
ucomisd %xmm3,%xmm5
jp     35ac7 <XYZtoRGB24+0xf7>
ja     35ac7 <XYZtoRGB24+0xf7>
mov    %rax,%rdx
mov    %dl,0x1(%rsi)
movsd  0x3b700(%rip),%xmm5        # 71188 <module.60+0xbf>
mulsd  %xmm5,%xmm1
movsd  0x3b6fc(%rip),%xmm5        # 71190 <module.60+0xc7>
mulsd  %xmm5,%xmm2
addsd  %xmm2,%xmm1
movsd  0x3b6dc(%rip),%xmm2        # 71180 <module.60+0xb7>
mulsd  %xmm2,%xmm0
addsd  %xmm1,%xmm0
ucomisd %xmm3,%xmm0
jp     35ad2 <XYZtoRGB24+0x102>
ja     35ad2 <XYZtoRGB24+0x102>
mov    %al,0x2(%rsi)
leaveq 
retq   
ucomisd %xmm4,%xmm5
jb     35ae1 <XYZtoRGB24+0x111>
mov    %rcx,%rdx
jmpq   35a40 <XYZtoRGB24+0x70>
ucomisd %xmm4,%xmm5
jb     35b3e <XYZtoRGB24+0x16e>
mov    %rcx,%rdx
jmp    35a7d <XYZtoRGB24+0xad>
ucomisd %xmm4,%xmm0
jb     35b9b <XYZtoRGB24+0x1cb>
mov    %rcx,%rax
jmp    35ab4 <XYZtoRGB24+0xe4>
mov    %r15,-0x8(%rbp)
mov    %rsi,%r15
movdqu %xmm1,-0x30(%rbp)
movdqu %xmm2,-0x40(%rbp)
movdqu %xmm0,-0x20(%rbp)
movapd %xmm5,%xmm0
callq  8c60 <sqrt@plt>
mov    %r15,%rsi
movsd  0x3b68d(%rip),%xmm1        # 71198 <module.60+0xcf>
mulsd  %xmm1,%xmm0
cvttsd2si %xmm0,%edx
mov    $0xff,%ecx
xor    %eax,%eax
mov    -0x8(%rbp),%r15
movsd  0x3b6aa(%rip),%xmm4        # 711d0 <module.60+0x107>
xorpd  %xmm3,%xmm3
movdqu -0x20(%rbp),%xmm0
movdqu -0x40(%rbp),%xmm2
movdqu -0x30(%rbp),%xmm1
jmpq   35a40 <XYZtoRGB24+0x70>
mov    %r15,-0x8(%rbp)
mov    %rsi,%r15
movdqu %xmm1,-0x30(%rbp)
movdqu %xmm2,-0x40(%rbp)
movdqu %xmm0,-0x20(%rbp)
movapd %xmm5,%xmm0
callq  8c60 <sqrt@plt>
mov    %r15,%rsi
movsd  0x3b630(%rip),%xmm1        # 71198 <module.60+0xcf>
mulsd  %xmm1,%xmm0
cvttsd2si %xmm0,%edx
mov    $0xff,%ecx
xor    %eax,%eax
mov    -0x8(%rbp),%r15
movsd  0x3b64d(%rip),%xmm4        # 711d0 <module.60+0x107>
xorpd  %xmm3,%xmm3
movdqu -0x20(%rbp),%xmm0
movdqu -0x40(%rbp),%xmm2
movdqu -0x30(%rbp),%xmm1
jmpq   35a7d <XYZtoRGB24+0xad>
mov    %r15,-0x40(%rbp)
mov    %rsi,%r15
callq  8c60 <sqrt@plt>
mov    %r15,%rsi
movsd  0x3b5e6(%rip),%xmm1        # 71198 <module.60+0xcf>
mulsd  %xmm1,%xmm0
cvttsd2si %xmm0,%eax
mov    -0x40(%rbp),%r15
jmpq   35ab4 <XYZtoRGB24+0xe4>
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

0000000000035bd0 <uv_decode>:
push   %rbp
mov    %rsp,%rbp
mov    $0xffffffffffffffff,%rax
test   %edx,%edx
jns    35be1 <uv_decode+0x11>
leaveq 
retq   
cmp    $0x3fa0,%edx
jle    35beb <uv_decode+0x1b>
leaveq 
retq   
lea    0x3ab2e(%rip),%r11        # 70720 <uv_row>
xor    %eax,%eax
mov    $0xa3,%r8d
mov    %rax,%r9
jmp    35c1c <uv_decode+0x4c>
lea    (%r9,%r8,1),%ecx
shr    %ecx
movslq %ecx,%r10
movswq 0x6(%r11,%r10,8),%r10
neg    %r10d
add    %edx,%r10d
test   %r10d,%r10d
jle    35c29 <uv_decode+0x59>
mov    %rcx,%r9
mov    %r8,%rcx
sub    %r9d,%ecx
cmp    $0x1,%ecx
jg     35bff <uv_decode+0x2f>
jmp    35c31 <uv_decode+0x61>
test   %r10d,%r10d
js     35c89 <uv_decode+0xb9>
mov    %rcx,%r9
movslq %r9d,%r8
movswq 0x6(%r11,%r8,8),%rcx
sub    %ecx,%edx
cvtsi2sd %edx,%xmm0
movsd  0x3b508(%rip),%xmm3        # 71150 <module.60+0x87>
addsd  %xmm3,%xmm0
movsd  0x3b584(%rip),%xmm2        # 711d8 <module.60+0x10f>
mulsd  %xmm2,%xmm0
movss  (%r11,%r8,8),%xmm1
cvtss2sd %xmm1,%xmm1
addsd  %xmm1,%xmm0
movsd  %xmm0,(%rdi)
cvtsi2sd %r9d,%xmm0
addsd  %xmm3,%xmm0
mulsd  %xmm2,%xmm0
movsd  0x3b561(%rip),%xmm1        # 711e0 <module.60+0x117>
addsd  %xmm1,%xmm0
movsd  %xmm0,(%rsi)
leaveq 
retq   
mov    %rcx,%r8
jmp    35c1c <uv_decode+0x4c>
xchg   %ax,%ax

0000000000035c90 <LogLuv24toXYZ>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    %r14,-0x18(%rbp)
mov    %r15,-0x20(%rbp)
mov    %rdi,%rax
and    $0xffc000,%eax
shr    $0xe,%eax
mov    %rsi,%r14
mov    %rdi,%r15
mov    %rax,%rdi
callq  80c0 <LogL10toY@plt>
xorpd  %xmm1,%xmm1
ucomisd %xmm1,%xmm0
jp     35cc9 <LogLuv24toXYZ+0x39>
jbe    35daa <LogLuv24toXYZ+0x11a>
lea    -0x30(%rbp),%rdi
lea    -0x28(%rbp),%rsi
mov    %r15,%rdx
and    $0x3fff,%edx
movdqu %xmm0,-0x10(%rbp)
callq  8340 <uv_decode@plt>
test   %eax,%eax
jns    35d02 <LogLuv24toXYZ+0x72>
movsd  0x3b520(%rip),%xmm0        # 71210 <module.60+0x147>
movsd  %xmm0,-0x30(%rbp)
movsd  0x3b51b(%rip),%xmm0        # 71218 <module.60+0x14f>
movsd  %xmm0,-0x28(%rbp)
movsd  0x3b4de(%rip),%xmm0        # 711e8 <module.60+0x11f>
mulsd  -0x30(%rbp),%xmm0
movsd  0x3b4d9(%rip),%xmm1        # 711f0 <module.60+0x127>
mulsd  -0x28(%rbp),%xmm1
subsd  %xmm1,%xmm0
movsd  0x3b4d0(%rip),%xmm1        # 711f8 <module.60+0x12f>
addsd  %xmm1,%xmm0
movsd  0x3b49c(%rip),%xmm1        # 711d0 <module.60+0x107>
movapd %xmm1,%xmm2
divsd  %xmm0,%xmm2
movsd  0x3b4bc(%rip),%xmm0        # 71200 <module.60+0x137>
mulsd  -0x30(%rbp),%xmm0
movapd %xmm2,%xmm4
mulsd  %xmm0,%xmm4
movsd  0x3b4af(%rip),%xmm0        # 71208 <module.60+0x13f>
mulsd  -0x28(%rbp),%xmm0
mulsd  %xmm2,%xmm0
movapd %xmm4,%xmm3
divsd  %xmm0,%xmm3
movdqu -0x10(%rbp),%xmm2
mulsd  %xmm2,%xmm3
cvtsd2ss %xmm3,%xmm3
movss  %xmm3,(%r14)
cvtsd2ss %xmm2,%xmm3
movss  %xmm3,0x4(%r14)
subsd  %xmm4,%xmm1
subsd  %xmm0,%xmm1
divsd  %xmm0,%xmm1
mulsd  %xmm1,%xmm2
cvtsd2ss %xmm2,%xmm0
movss  %xmm0,0x8(%r14)
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
leaveq 
retq   
movss  %xmm1,0x8(%r14)
movss  %xmm1,0x4(%r14)
movss  %xmm1,(%r14)
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)

0000000000035dd0 <LogLuv32toXYZ>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rsi,%r14
mov    %rdi,%r15
mov    %r15,%rdi
sar    $0x10,%edi
callq  8ce0 <LogL16toY@plt>
xorpd  %xmm1,%xmm1
ucomisd %xmm1,%xmm0
jp     35e01 <LogLuv32toXYZ+0x31>
jbe    35ecd <LogLuv32toXYZ+0xfd>
mov    %r15,%rax
and    $0xff00,%eax
shr    $0x8,%eax
mov    %eax,%eax
cvtsi2sd %rax,%xmm4
movsd  0x3b335(%rip),%xmm3        # 71150 <module.60+0x87>
addsd  %xmm3,%xmm4
movsd  0x3b3f9(%rip),%xmm1        # 71220 <module.60+0x157>
movapd %xmm4,%xmm2
mulsd  %xmm1,%xmm2
movzbl %r15b,%eax
mov    %eax,%eax
cvtsi2sd %rax,%xmm1
addsd  %xmm3,%xmm1
movsd  0x3b3e2(%rip),%xmm3        # 71228 <module.60+0x15f>
mulsd  %xmm1,%xmm3
subsd  %xmm3,%xmm2
movsd  0x3b3a2(%rip),%xmm3        # 711f8 <module.60+0x12f>
addsd  %xmm3,%xmm2
movsd  0x3b36e(%rip),%xmm3        # 711d0 <module.60+0x107>
movapd %xmm3,%xmm5
divsd  %xmm2,%xmm5
movsd  0x3b3be(%rip),%xmm2        # 71230 <module.60+0x167>
mulsd  %xmm2,%xmm4
mulsd  %xmm5,%xmm4
movsd  0x3b3b6(%rip),%xmm2        # 71238 <module.60+0x16f>
mulsd  %xmm2,%xmm1
mulsd  %xmm5,%xmm1
movapd %xmm4,%xmm2
divsd  %xmm1,%xmm2
mulsd  %xmm0,%xmm2
cvtsd2ss %xmm2,%xmm2
movss  %xmm2,(%r14)
cvtsd2ss %xmm0,%xmm2
movss  %xmm2,0x4(%r14)
subsd  %xmm4,%xmm3
subsd  %xmm1,%xmm3
divsd  %xmm1,%xmm3
mulsd  %xmm3,%xmm0
cvtsd2ss %xmm0,%xmm0
movss  %xmm0,0x8(%r14)
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
movss  %xmm1,0x8(%r14)
movss  %xmm1,0x4(%r14)
movss  %xmm1,(%r14)
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

0000000000035ef0 <LogL16fromY>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
movsd  0x3b358(%rip),%xmm1        # 71258 <module.60+0x18f>
ucomisd %xmm1,%xmm0
jb     35f0d <LogL16fromY+0x1d>
mov    $0x7fff,%eax
leaveq 
retq   
movsd  0x3b34b(%rip),%xmm1        # 71260 <module.60+0x197>
ucomisd %xmm1,%xmm0
jp     35f24 <LogL16fromY+0x34>
ja     35f24 <LogL16fromY+0x34>
mov    $0xffff,%eax
leaveq 
retq   
movsd  0x3b344(%rip),%xmm1        # 71270 <module.60+0x1a7>
ucomisd %xmm1,%xmm0
ja     35f46 <LogL16fromY+0x56>
movsd  0x3b32e(%rip),%xmm1        # 71268 <module.60+0x19f>
ucomisd %xmm1,%xmm0
jp     35f42 <LogL16fromY+0x52>
jb     35fac <LogL16fromY+0xbc>
xor    %eax,%eax
leaveq 
retq   
test   %edi,%edi
je     3601e <LogL16fromY+0x12e>
callq  8570 <log@plt>
movdqu %xmm0,-0x10(%rbp)
callq  8d10 <rand@plt>
cvtsi2sd %eax,%xmm1
movsd  0x3b2e7(%rip),%xmm0        # 71250 <module.60+0x187>
mulsd  %xmm0,%xmm1
movdqu -0x10(%rbp),%xmm0
movsd  0x3b2c6(%rip),%xmm2        # 71240 <module.60+0x177>
mulsd  %xmm2,%xmm0
movsd  0x3b2c2(%rip),%xmm2        # 71248 <module.60+0x17f>
addsd  %xmm2,%xmm0
movsd  0x3b206(%rip),%xmm2        # 71198 <module.60+0xcf>
mulsd  %xmm2,%xmm0
addsd  %xmm0,%xmm1
movsd  0x3b1ae(%rip),%xmm0        # 71150 <module.60+0x87>
subsd  %xmm0,%xmm1
cvttsd2si %xmm1,%eax
leaveq 
retq   
test   %edi,%edi
je     3604d <LogL16fromY+0x15d>
movsd  0x3b1ac(%rip),%xmm1        # 71168 <module.60+0x9f>
xorpd  %xmm1,%xmm0
callq  8570 <log@plt>
movdqu %xmm0,-0x10(%rbp)
callq  8d10 <rand@plt>
cvtsi2sd %eax,%xmm0
movsd  0x3b275(%rip),%xmm1        # 71250 <module.60+0x187>
mulsd  %xmm1,%xmm0
movdqu -0x10(%rbp),%xmm1
movsd  0x3b254(%rip),%xmm2        # 71240 <module.60+0x177>
mulsd  %xmm2,%xmm1
movsd  0x3b250(%rip),%xmm2        # 71248 <module.60+0x17f>
addsd  %xmm2,%xmm1
movsd  0x3b194(%rip),%xmm2        # 71198 <module.60+0xcf>
mulsd  %xmm2,%xmm1
addsd  %xmm1,%xmm0
movsd  0x3b13c(%rip),%xmm1        # 71150 <module.60+0x87>
subsd  %xmm1,%xmm0
cvttsd2si %xmm0,%eax
jmp    36086 <LogL16fromY+0x196>
callq  8570 <log@plt>
movsd  0x3b215(%rip),%xmm1        # 71240 <module.60+0x177>
mulsd  %xmm1,%xmm0
movsd  0x3b211(%rip),%xmm1        # 71248 <module.60+0x17f>
addsd  %xmm1,%xmm0
movsd  0x3b155(%rip),%xmm1        # 71198 <module.60+0xcf>
mulsd  %xmm1,%xmm0
cvttsd2si %xmm0,%eax
leaveq 
retq   
movsd  0x3b113(%rip),%xmm1        # 71168 <module.60+0x9f>
xorpd  %xmm1,%xmm0
callq  8570 <log@plt>
movsd  0x3b1da(%rip),%xmm1        # 71240 <module.60+0x177>
mulsd  %xmm1,%xmm0
movsd  0x3b1d6(%rip),%xmm1        # 71248 <module.60+0x17f>
addsd  %xmm1,%xmm0
movsd  0x3b11a(%rip),%xmm1        # 71198 <module.60+0xcf>
mulsd  %xmm1,%xmm0
cvttsd2si %xmm0,%eax
or     $0xffff8000,%eax
leaveq 
retq   
nopl   (%rax)

0000000000036090 <LogL10fromY>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
movsd  0x3b1d8(%rip),%xmm1        # 71278 <module.60+0x1af>
ucomisd %xmm1,%xmm0
jb     360ad <LogL10fromY+0x1d>
mov    $0x3ff,%eax
leaveq 
retq   
movsd  0x3b1cb(%rip),%xmm1        # 71280 <module.60+0x1b7>
ucomisd %xmm1,%xmm0
jp     360c1 <LogL10fromY+0x31>
ja     360c1 <LogL10fromY+0x31>
xor    %eax,%eax
leaveq 
retq   
test   %edi,%edi
je     36123 <LogL10fromY+0x93>
callq  8570 <log@plt>
movdqu %xmm0,-0x10(%rbp)
callq  8d10 <rand@plt>
cvtsi2sd %eax,%xmm1
movsd  0x3b170(%rip),%xmm0        # 71250 <module.60+0x187>
mulsd  %xmm0,%xmm1
movdqu -0x10(%rbp),%xmm0
movsd  0x3b14f(%rip),%xmm2        # 71240 <module.60+0x177>
mulsd  %xmm2,%xmm0
movsd  0x3b0fb(%rip),%xmm2        # 711f8 <module.60+0x12f>
addsd  %xmm2,%xmm0
movsd  0x3b13f(%rip),%xmm2        # 71248 <module.60+0x17f>
mulsd  %xmm2,%xmm0
addsd  %xmm0,%xmm1
movsd  0x3b037(%rip),%xmm0        # 71150 <module.60+0x87>
subsd  %xmm0,%xmm1
cvttsd2si %xmm1,%eax
leaveq 
retq   
callq  8570 <log@plt>
movsd  0x3b110(%rip),%xmm1        # 71240 <module.60+0x177>
mulsd  %xmm1,%xmm0
movsd  0x3b0bc(%rip),%xmm1        # 711f8 <module.60+0x12f>
addsd  %xmm1,%xmm0
movsd  0x3b100(%rip),%xmm1        # 71248 <module.60+0x17f>
mulsd  %xmm1,%xmm0
cvttsd2si %xmm0,%eax
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   (%rax)

0000000000036160 <uv_encode>:
push   %rbp
mov    %rsp,%rbp
sub    $0x40,%rsp
movsd  0x3b070(%rip),%xmm3        # 711e0 <module.60+0x117>
ucomisd %xmm3,%xmm1
jp     36178 <uv_encode+0x18>
jb     361e7 <uv_encode+0x87>
movsd  0x3b108(%rip),%xmm2        # 71288 <module.60+0x1bf>
test   %edi,%edi
je     361ee <uv_encode+0x8e>
mov    %rdi,-0x20(%rbp)
movdqu %xmm1,-0x40(%rbp)
movdqu %xmm0,-0x30(%rbp)
callq  8d10 <rand@plt>
cvtsi2sd %eax,%xmm0
movsd  0x3b0ad(%rip),%xmm1        # 71250 <module.60+0x187>
mulsd  %xmm1,%xmm0
movsd  0x3b031(%rip),%xmm2        # 711e0 <module.60+0x117>
movdqu -0x40(%rbp),%xmm1
movapd %xmm1,%xmm3
subsd  %xmm2,%xmm3
movsd  0x3b0c4(%rip),%xmm2        # 71288 <module.60+0x1bf>
mulsd  %xmm2,%xmm3
addsd  %xmm3,%xmm0
movsd  0x3af7c(%rip),%xmm3        # 71150 <module.60+0x87>
subsd  %xmm3,%xmm0
cvttsd2si %xmm0,%eax
mov    -0x20(%rbp),%rdi
movdqu -0x30(%rbp),%xmm0
jmp    36207 <uv_encode+0xa7>
callq  37c50 <oog_encode>
leaveq 
retq   
xorpd  0x3b09a(%rip),%xmm3        # 71290 <module.60+0x1c7>
addsd  %xmm1,%xmm3
mulsd  %xmm2,%xmm3
cvttsd2si %xmm3,%eax
movdqu %xmm1,-0x40(%rbp)
cmp    $0xa2,%eax
jg     362a0 <uv_encode+0x140>
lea    0x3a507(%rip),%rcx        # 70720 <uv_row>
movslq %eax,%rax
movss  (%rcx,%rax,8),%xmm3
cvtss2sd %xmm3,%xmm3
ucomisd %xmm0,%xmm3
ja     362a7 <uv_encode+0x147>
test   %edi,%edi
je     362ae <uv_encode+0x14e>
mov    %r15,-0x8(%rbp)
mov    %rax,%r15
movdqu %xmm0,-0x20(%rbp)
movdqu %xmm3,-0x30(%rbp)
callq  8d10 <rand@plt>
cvtsi2sd %eax,%xmm1
mov    %r15,%rax
movsd  0x3affc(%rip),%xmm0        # 71250 <module.60+0x187>
mulsd  %xmm0,%xmm1
movdqu -0x30(%rbp),%xmm2
movdqu -0x20(%rbp),%xmm0
xorpd  0x3b026(%rip),%xmm2        # 71290 <module.60+0x1c7>
addsd  %xmm0,%xmm2
movsd  0x3b012(%rip),%xmm3        # 71288 <module.60+0x1bf>
mulsd  %xmm3,%xmm2
addsd  %xmm2,%xmm1
movsd  0x3aeca(%rip),%xmm2        # 71150 <module.60+0x87>
subsd  %xmm2,%xmm1
cvttsd2si %xmm1,%edx
lea    0x3a48b(%rip),%rcx        # 70720 <uv_row>
mov    -0x8(%rbp),%r15
movdqu -0x40(%rbp),%xmm1
jmp    362c2 <uv_encode+0x162>
callq  37c50 <oog_encode>
leaveq 
retq   
callq  37c50 <oog_encode>
leaveq 
retq   
xorpd  0x3afda(%rip),%xmm3        # 71290 <module.60+0x1c7>
addsd  %xmm0,%xmm3
mulsd  %xmm2,%xmm3
cvttsd2si %xmm3,%edx
movswq 0x4(%rcx,%rax,8),%rsi
cmp    %edx,%esi
jle    362d6 <uv_encode+0x176>
movswq 0x6(%rcx,%rax,8),%rax
add    %edx,%eax
leaveq 
retq   
callq  37c50 <oog_encode>
leaveq 
retq   
nopl   (%rax)

00000000000362e0 <LogLuv24fromXYZ>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rdi,%r14
mov    %rsi,%r15
movss  0x4(%r14),%xmm0
cvtss2sd %xmm0,%xmm0
mov    %r15,%rdi
callq  88f0 <LogL10fromY@plt>
movss  (%r14),%xmm3
movss  0x4(%r14),%xmm0
movss  0x8(%r14),%xmm1
test   %eax,%eax
jne    36364 <LogLuv24fromXYZ+0x84>
movsd  0x3aef3(%rip),%xmm1        # 71218 <module.60+0x14f>
movsd  0x3aee3(%rip),%xmm0        # 71210 <module.60+0x147>
mov    %r15,%rdi
mov    %rax,%r14
callq  8840 <uv_encode@plt>
test   %eax,%eax
jns    36353 <LogLuv24fromXYZ+0x73>
xor    %edi,%edi
movsd  0x3aed2(%rip),%xmm1        # 71218 <module.60+0x14f>
movsd  0x3aec2(%rip),%xmm0        # 71210 <module.60+0x147>
callq  8840 <uv_encode@plt>
shl    $0xe,%r14d
or     %r14d,%eax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
cvtss2sd %xmm1,%xmm2
movsd  0x3af30(%rip),%xmm1        # 712a0 <module.60+0x1d7>
mulsd  %xmm1,%xmm2
cvtss2sd %xmm0,%xmm1
movsd  0x3af28(%rip),%xmm0        # 712a8 <module.60+0x1df>
mulsd  %xmm0,%xmm1
cvtss2sd %xmm3,%xmm0
addsd  %xmm0,%xmm1
addsd  %xmm1,%xmm2
xorpd  %xmm1,%xmm1
ucomisd %xmm1,%xmm2
jp     363b1 <LogLuv24fromXYZ+0xd1>
ja     363b1 <LogLuv24fromXYZ+0xd1>
movsd  0x3ae74(%rip),%xmm1        # 71218 <module.60+0x14f>
movsd  0x3ae64(%rip),%xmm0        # 71210 <module.60+0x147>
jmpq   3632d <LogLuv24fromXYZ+0x4d>
movsd  0x3ae4f(%rip),%xmm1        # 71208 <module.60+0x13f>
mulsd  %xmm1,%xmm0
divsd  %xmm2,%xmm0
movss  0x4(%r14),%xmm1
cvtss2sd %xmm1,%xmm1
movsd  0x3ae2d(%rip),%xmm3        # 71200 <module.60+0x137>
mulsd  %xmm3,%xmm1
divsd  %xmm2,%xmm1
jmpq   3632d <LogLuv24fromXYZ+0x4d>

00000000000363e0 <LogLuv32fromXYZ>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rdi,%r14
mov    %rsi,%r15
movss  0x4(%r14),%xmm0
cvtss2sd %xmm0,%xmm0
mov    %r15,%rdi
callq  8640 <LogL16fromY@plt>
movss  (%r14),%xmm1
movss  0x4(%r14),%xmm0
movss  0x8(%r14),%xmm2
test   %eax,%eax
jne    364c7 <LogLuv32fromXYZ+0xe7>
xorpd  %xmm1,%xmm1
movsd  0x3ade3(%rip),%xmm3        # 71210 <module.60+0x147>
movsd  0x3ade3(%rip),%xmm0        # 71218 <module.60+0x14f>
movsd  0x3ae73(%rip),%xmm2        # 712b0 <module.60+0x1e7>
xor    %edx,%edx
ucomisd %xmm1,%xmm3
jp     3651c <LogLuv32fromXYZ+0x13c>
ja     3651c <LogLuv32fromXYZ+0x13c>
mov    %rdx,%r14
mov    $0xff,%ecx
cmp    $0xff,%r14d
jbe    36463 <LogLuv32fromXYZ+0x83>
mov    %rcx,%r14
ucomisd %xmm1,%xmm0
jp     3646f <LogLuv32fromXYZ+0x8f>
jbe    36585 <LogLuv32fromXYZ+0x1a5>
test   %r15d,%r15d
je     3657d <LogLuv32fromXYZ+0x19d>
mov    %rax,%r15
movdqu %xmm0,-0x30(%rbp)
callq  8d10 <rand@plt>
cvtsi2sd %eax,%xmm0
mov    %r15,%rax
movsd  0x3adbc(%rip),%xmm1        # 71250 <module.60+0x187>
mulsd  %xmm1,%xmm0
movsd  0x3ae10(%rip),%xmm2        # 712b0 <module.60+0x1e7>
movdqu -0x30(%rbp),%xmm1
mulsd  %xmm2,%xmm1
addsd  %xmm1,%xmm0
movsd  0x3ac9b(%rip),%xmm1        # 71150 <module.60+0x87>
subsd  %xmm1,%xmm0
cvttsd2si %xmm0,%edx
mov    $0xff,%ecx
jmpq   36585 <LogLuv32fromXYZ+0x1a5>
cvtss2sd %xmm2,%xmm2
movsd  0x3adcd(%rip),%xmm3        # 712a0 <module.60+0x1d7>
mulsd  %xmm3,%xmm2
cvtss2sd %xmm0,%xmm0
movsd  0x3adc5(%rip),%xmm3        # 712a8 <module.60+0x1df>
mulsd  %xmm3,%xmm0
cvtss2sd %xmm1,%xmm3
addsd  %xmm3,%xmm0
addsd  %xmm0,%xmm2
xorpd  %xmm1,%xmm1
ucomisd %xmm1,%xmm2
jp     365a9 <LogLuv32fromXYZ+0x1c9>
ja     365a9 <LogLuv32fromXYZ+0x1c9>
movsd  0x3ad01(%rip),%xmm3        # 71210 <module.60+0x147>
movsd  0x3ad01(%rip),%xmm0        # 71218 <module.60+0x14f>
jmpq   36435 <LogLuv32fromXYZ+0x55>
test   %r15d,%r15d
je     365d8 <LogLuv32fromXYZ+0x1f8>
mov    %rax,%r14
movdqu %xmm3,-0x30(%rbp)
movdqu %xmm0,-0x20(%rbp)
callq  8d10 <rand@plt>
cvtsi2sd %eax,%xmm0
mov    %r14,%rax
movsd  0x3ad0a(%rip),%xmm1        # 71250 <module.60+0x187>
mulsd  %xmm1,%xmm0
movsd  0x3ad5e(%rip),%xmm2        # 712b0 <module.60+0x1e7>
movdqu -0x30(%rbp),%xmm1
mulsd  %xmm2,%xmm1
addsd  %xmm1,%xmm0
movsd  0x3abe9(%rip),%xmm1        # 71150 <module.60+0x87>
subsd  %xmm1,%xmm0
cvttsd2si %xmm0,%r14d
xor    %edx,%edx
movdqu -0x20(%rbp),%xmm0
xorpd  %xmm1,%xmm1
jmp    365e1 <LogLuv32fromXYZ+0x201>
mulsd  %xmm2,%xmm0
cvttsd2si %xmm0,%edx
cmp    $0xff,%edx
ja     36590 <LogLuv32fromXYZ+0x1b0>
mov    %rdx,%rcx
shl    $0x10,%eax
shl    $0x8,%r14d
or     %r14d,%eax
or     %eax,%ecx
mov    %rcx,%rax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
movss  0x4(%r14),%xmm0
cvtss2sd %xmm0,%xmm0
movsd  0x3ac45(%rip),%xmm4        # 71200 <module.60+0x137>
mulsd  %xmm4,%xmm0
divsd  %xmm2,%xmm0
movsd  0x3ac3d(%rip),%xmm4        # 71208 <module.60+0x13f>
mulsd  %xmm4,%xmm3
divsd  %xmm2,%xmm3
jmpq   36435 <LogLuv32fromXYZ+0x55>
mulsd  %xmm2,%xmm3
cvttsd2si %xmm3,%r14d
jmpq   36452 <LogLuv32fromXYZ+0x72>
nopw   %cs:0x0(%rax,%rax,1)

00000000000365f0 <TIFFInitSGILog>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
cmp    $0x8775,%esi
je     36627 <TIFFInitSGILog+0x37>
cmp    $0x8774,%esi
je     36627 <TIFFInitSGILog+0x37>
lea    0x3a638(%rip),%rdi        # 70c47 <module.9+0xf>
lea    0x3a670(%rip),%rsi        # 70c86 <module.9+0x4e>
mov    $0x6a6,%edx
lea    0x3a66e(%rip),%rcx        # 70c90 <module.9+0x58>
callq  8490 <__assert_fail@plt>
lea    0x4337a(%rip),%rcx        # 799a8 <LogLuvFields>
mov    $0x2,%edx
mov    %rdi,%rax
mov    %r15,-0x18(%rbp)
mov    %rsi,-0x10(%rbp)
mov    %rcx,%rsi
mov    %rdi,%r15
mov    %rax,%rdi
callq  8520 <_TIFFMergeFields@plt>
test   %eax,%eax
jne    36674 <TIFFInitSGILog+0x84>
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
lea    0x3a63f(%rip),%rdx        # 70c9f <module.9+0x67>
lea    0x3a5d1(%rip),%rsi        # 70c38 <module.9>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x18(%rbp),%r15
leaveq 
retq   
mov    $0x38,%edi
callq  8440 <_TIFFmalloc@plt>
mov    %rax,0x350(%r15)
test   %rax,%rax
je     366bc <TIFFInitSGILog+0xcc>
mov    %rax,%rdi
xor    %esi,%esi
mov    %r14,-0x8(%rbp)
mov    %rax,%r14
mov    $0x38,%edx
callq  88e0 <_TIFFmemset@plt>
mov    -0x10(%rbp),%rax
cmp    $0x8775,%eax
movl   $0xffffffff,0x4(%r14)
mov    $0x1,%eax
je     366e3 <TIFFInitSGILog+0xf3>
xor    %ecx,%ecx
jmp    366e6 <TIFFInitSGILog+0xf6>
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
lea    0x3a5fd(%rip),%rdx        # 70cc9 <module.9+0x91>
mov    (%r15),%rcx
lea    0x3a562(%rip),%rsi        # 70c38 <module.9>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x18(%rbp),%r15
leaveq 
retq   
mov    %rax,%rcx
mov    %ecx,0x8(%r14)
lea    0x1f6f(%rip),%rcx        # 38660 <_logLuvNop>
mov    %rcx,0x20(%r14)
lea    0x24c4(%rip),%rcx        # 38bc0 <LogLuvFixupTags>
mov    %rcx,0x2c0(%r15)
lea    0x24c6(%rip),%rcx        # 38bd0 <LogLuvSetupDecode>
mov    %rcx,0x2c8(%r15)
lea    0x698(%rip),%rcx        # 36db0 <LogLuvDecodeStrip>
mov    %rcx,0x308(%r15)
lea    0x76a(%rip),%rcx        # 36e90 <LogLuvDecodeTile>
mov    %rcx,0x318(%r15)
lea    0x268c(%rip),%rcx        # 38dc0 <LogLuvSetupEncode>
mov    %rcx,0x2d8(%r15)
lea    0x11de(%rip),%rcx        # 37920 <LogLuvEncodeStrip>
mov    %rcx,0x310(%r15)
lea    0x12b0(%rip),%rcx        # 37a00 <LogLuvEncodeTile>
mov    %rcx,0x320(%r15)
lea    0x2832(%rip),%rcx        # 38f90 <LogLuvClose>
mov    %rcx,0x328(%r15)
lea    0x2894(%rip),%rcx        # 39000 <LogLuvCleanup>
mov    %rcx,0x338(%r15)
mov    0x410(%r15),%rcx
mov    %rcx,0x28(%r14)
lea    0x2aeb(%rip),%rcx        # 39270 <LogLuvVGetField>
mov    %rcx,0x410(%r15)
mov    0x408(%r15),%rcx
mov    %rcx,0x30(%r14)
lea    0x2902(%rip),%rcx        # 390a0 <LogLuvVSetField>
mov    %rcx,0x408(%r15)
mov    -0x8(%rbp),%r14
mov    -0x18(%rbp),%r15
leaveq 
retq   
nop

00000000000367b0 <LogL16Decode>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    0x350(%rdi),%rax
lea    0x3a4c0(%rip),%r8        # 70c86 <module.9+0x4e>
lea    0x3a534(%rip),%r9        # 70d01 <module.15+0x14>
test   %cx,%cx
je     367e9 <LogL16Decode+0x39>
mov    %r9,%rcx
mov    %r8,%rsi
lea    0x3a51b(%rip),%rdi        # 70cfa <module.15+0xd>
mov    $0xc6,%edx
callq  8490 <__assert_fail@plt>
test   %rax,%rax
jne    36805 <LogL16Decode+0x55>
mov    %r9,%rcx
mov    %r8,%rsi
lea    0x3a513(%rip),%rdi        # 70d0e <module.15+0x21>
mov    $0xc7,%edx
callq  8490 <__assert_fail@plt>
mov    %r13,%r8
mov    %r12,%r13
mov    %rax,%r12
mov    %rdx,%rax
mov    %rbx,%r9
mov    %rdi,%rbx
movslq 0xc(%r12),%rcx
cqto   
mov    %r15,%r10
mov    %r14,%r11
idiv   %rcx
lea    0x3a4bf(%rip),%r15        # 70ced <module.15>
xor    %r14d,%r14d
movslq 0x4(%r12),%rcx
cmp    $0x1,%ecx
jne    36880 <LogL16Decode+0xd0>
mov    %rsi,%r15
lea    (%rax,%rax,1),%rdx
mov    %r15,%rdi
mov    %r14,%rcx
mov    %rsi,-0x8(%rbp)
mov    %r9,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r8,-0x20(%rbp)
mov    %r11,-0x28(%rbp)
mov    %r10,-0x30(%rbp)
mov    %rcx,%rsi
mov    %rax,%r13
callq  88e0 <_TIFFmemset@plt>
mov    0x388(%rbx),%r9
mov    0x390(%rbx),%r10
mov    $0x10,%ecx
jmp    36896 <LogL16Decode+0xe6>
mov    0x18(%r12),%rcx
cmp    %rax,%rcx
jl     368dd <LogL16Decode+0x12d>
mov    0x10(%r12),%r15
jmp    3683e <LogL16Decode+0x8e>
cmp    %rsi,%r13
jne    3690e <LogL16Decode+0x15e>
add    $0xfffffff8,%ecx
test   %ecx,%ecx
jns    36963 <LogL16Decode+0x1b3>
mov    %r13,%rdx
mov    %r10,%r13
mov    %r12,%rdi
mov    %r9,%r12
mov    -0x8(%rbp),%rsi
callq  *0x20(%rdi)
mov    %r12,0x388(%rbx)
mov    %r13,0x390(%rbx)
mov    $0x1,%eax
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
mov    -0x10(%rbp),%rbx
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rbx),%rdi
mov    %r15,%rsi
mov    %r10,%r15
mov    %r9,%rbx
mov    %r8,%r12
mov    %r11,%r14
lea    0x3a41d(%rip),%rdx        # 70d19 <module.15+0x2c>
callq  8a00 <TIFFErrorExt@plt>
mov    %r13,%rcx
mov    %r12,%r13
mov    %rcx,%r12
xor    %eax,%eax
leaveq 
retq   
sub    %rsi,%r13
mov    %r13,%r8
mov    %r10,%r13
mov    %r9,%r12
xor    %eax,%eax
mov    0x3b8(%rbx),%rdi
lea    0x3a40c(%rip),%rdx        # 70d36 <module.15+0x49>
mov    0x27c(%rbx),%ecx
lea    0x3a3b6(%rip),%rsi        # 70ced <module.15>
callq  8a00 <TIFFErrorExt@plt>
mov    %r12,0x388(%rbx)
mov    %r13,0x390(%rbx)
mov    %r14,%rax
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
mov    -0x10(%rbp),%rbx
leaveq 
retq   
mov    %r14,%rsi
cmp    %rsi,%r13
jle    36891 <LogL16Decode+0xe1>
test   %r10,%r10
jle    36891 <LogL16Decode+0xe1>
movzbl (%r9),%edx
cmp    $0x7f,%dl
ja     36987 <LogL16Decode+0x1d7>
add    $0x1,%r9
jmp    369cc <LogL16Decode+0x21c>
cmp    $0x1,%r10
jle    36891 <LogL16Decode+0xe1>
movzbl 0x1(%r9),%edi
shl    %cl,%edi
add    $0x2,%r9
add    $0xfffffffffffffffe,%r10
lea    -0x7e(%rdx),%eax
jmp    369f3 <LogL16Decode+0x243>
test   %edx,%edx
je     36966 <LogL16Decode+0x1b6>
cmp    %rsi,%r13
jle    36966 <LogL16Decode+0x1b6>
movzbl (%r9),%eax
shl    %cl,%eax
movswq (%r15,%rsi,2),%rdi
or     %di,%ax
mov    %ax,(%r15,%rsi,2)
add    $0x1,%r9
add    $0x1,%rsi
add    $0xffffffff,%edx
add    $0xffffffffffffffff,%r10
test   %r10,%r10
jne    369a5 <LogL16Decode+0x1f5>
mov    %r14,%r10
jmp    36966 <LogL16Decode+0x1b6>
cmp    %rsi,%r13
jle    36966 <LogL16Decode+0x1b6>
movswq (%r15,%rsi,2),%rdx
or     %di,%dx
mov    %dx,(%r15,%rsi,2)
add    $0x1,%rsi
add    $0xffffffff,%eax
test   %eax,%eax
jne    369da <LogL16Decode+0x22a>
jmpq   36966 <LogL16Decode+0x1b6>
nopl   0x0(%rax)

0000000000036a00 <LogLuvDecode24>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    0x350(%rdi),%r8
lea    0x3a270(%rip),%rax        # 70c86 <module.9+0x4e>
lea    0x3a357(%rip),%r9        # 70d74 <module.21+0xf>
test   %cx,%cx
je     36a39 <LogLuvDecode24+0x39>
mov    %r9,%rcx
mov    %rax,%rsi
lea    0x3a2cb(%rip),%rdi        # 70cfa <module.15+0xd>
mov    $0x10f,%edx
callq  8490 <__assert_fail@plt>
test   %r8,%r8
jne    36a55 <LogLuvDecode24+0x55>
mov    %r9,%rcx
mov    %rax,%rsi
lea    0x3a2c3(%rip),%rdi        # 70d0e <module.15+0x21>
mov    $0x110,%edx
callq  8490 <__assert_fail@plt>
mov    %rdx,%rax
movslq 0xc(%r8),%rcx
cqto   
mov    %rsi,%r10
mov    %r15,%r11
idiv   %rcx
lea    0x3a2f7(%rip),%rsi        # 70d65 <module.21>
xor    %r15d,%r15d
movslq 0x4(%r8),%rcx
cmp    $0x2,%ecx
jne    36a9c <LogLuvDecode24+0x9c>
mov    %r10,%rdx
mov    0x388(%rdi),%rcx
mov    0x390(%rdi),%r9
mov    %r10,-0x8(%rbp)
mov    %r14,-0x10(%rbp)
mov    %r11,-0x18(%rbp)
mov    %r15,%r10
jmp    36add <LogLuvDecode24+0xdd>
mov    0x18(%r8),%rcx
cmp    %rax,%rcx
jl     36b11 <LogLuvDecode24+0x111>
mov    0x10(%r8),%rdx
jmp    36a7d <LogLuvDecode24+0x7d>
cmp    $0x2,%r9
jle    36ae2 <LogLuvDecode24+0xe2>
movzbl (%rcx),%r11d
shl    $0x10,%r11d
movzbl 0x1(%rcx),%r14d
shl    $0x8,%r14d
add    %r14d,%r11d
movzbl 0x2(%rcx),%r14d
add    %r14d,%r11d
mov    %r11d,(%rdx,%r10,4)
add    $0x3,%rcx
add    $0xfffffffffffffffd,%r9
add    $0x1,%r10
cmp    %r10,%rax
jg     36aab <LogLuvDecode24+0xab>
mov    %rcx,0x388(%rdi)
mov    %r9,0x390(%rdi)
cmp    %r10,%rax
jne    36b2d <LogLuvDecode24+0x12d>
mov    %rax,%rdx
mov    %r8,%rdi
mov    -0x8(%rbp),%rsi
callq  *0x20(%rdi)
mov    $0x1,%eax
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
mov    %r11,%r15
lea    0x3a1f5(%rip),%rdx        # 70d19 <module.15+0x2c>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
mov    %rax,%r8
sub    %r10,%r8
xor    %eax,%eax
mov    0x3b8(%rdi),%r9
lea    0x3a1f3(%rip),%rdx        # 70d36 <module.15+0x49>
mov    0x27c(%rdi),%ecx
mov    %r9,%rdi
callq  8a00 <TIFFErrorExt@plt>
mov    %r15,%rax
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
leaveq 
retq   
xchg   %ax,%ax

0000000000036b60 <LogLuvDecode32>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
lea    0x3a117(%rip),%r8        # 70c86 <module.9+0x4e>
lea    0x3a21c(%rip),%r9        # 70d92 <module.23+0xf>
test   %cx,%cx
je     36b92 <LogLuvDecode32+0x32>
mov    %r9,%rcx
mov    %r8,%rsi
lea    0x3a172(%rip),%rdi        # 70cfa <module.15+0xd>
mov    $0x14b,%edx
callq  8490 <__assert_fail@plt>
mov    0x350(%rdi),%rax
test   %rax,%rax
jne    36bb5 <LogLuvDecode32+0x55>
mov    %r9,%rcx
mov    %r8,%rsi
lea    0x3a163(%rip),%rdi        # 70d0e <module.15+0x21>
mov    $0x14d,%edx
callq  8490 <__assert_fail@plt>
mov    %r13,%r8
mov    %r12,%r13
mov    %rax,%r12
mov    %rdx,%rax
mov    %rbx,%r9
mov    %rdi,%rbx
movslq 0xc(%r12),%rcx
cqto   
mov    %r14,%r10
mov    %r15,%r11
idiv   %rcx
lea    0x3a1a5(%rip),%r15        # 70d83 <module.23>
xor    %r14d,%r14d
movslq 0x4(%r12),%rcx
cmp    $0x2,%ecx
jne    36c33 <LogLuvDecode32+0xd3>
mov    %rsi,%r15
mov    %rax,%rdx
shl    $0x2,%rdx
mov    %r15,%rdi
mov    %r14,%rcx
mov    %rsi,-0x8(%rbp)
mov    %r9,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r8,-0x20(%rbp)
mov    %r10,-0x28(%rbp)
mov    %r11,-0x30(%rbp)
mov    %rcx,%rsi
mov    %rax,%r13
callq  88e0 <_TIFFmemset@plt>
mov    0x388(%rbx),%r9
mov    0x390(%rbx),%r10
mov    $0x20,%ecx
jmp    36c49 <LogLuvDecode32+0xe9>
mov    0x18(%r12),%rcx
cmp    %rax,%rcx
jl     36c90 <LogLuvDecode32+0x130>
mov    0x10(%r12),%r15
jmp    36bee <LogLuvDecode32+0x8e>
cmp    %rsi,%r13
jne    36cc1 <LogLuvDecode32+0x161>
add    $0xfffffff8,%ecx
test   %ecx,%ecx
jns    36d16 <LogLuvDecode32+0x1b6>
mov    %r13,%rdx
mov    %r10,%r13
mov    %r12,%rdi
mov    %r9,%r12
mov    -0x8(%rbp),%rsi
callq  *0x20(%rdi)
mov    %r12,0x388(%rbx)
mov    %r13,0x390(%rbx)
mov    $0x1,%eax
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
mov    -0x10(%rbp),%rbx
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rbx),%rdi
mov    %r15,%rsi
mov    %r11,%r15
mov    %r9,%rbx
mov    %r8,%r12
mov    %r10,%r14
lea    0x3a06a(%rip),%rdx        # 70d19 <module.15+0x2c>
callq  8a00 <TIFFErrorExt@plt>
mov    %r13,%rcx
mov    %r12,%r13
mov    %rcx,%r12
xor    %eax,%eax
leaveq 
retq   
sub    %rsi,%r13
mov    %r13,%r8
mov    %r10,%r13
mov    %r9,%r12
xor    %eax,%eax
mov    0x3b8(%rbx),%rdi
lea    0x3a059(%rip),%rdx        # 70d36 <module.15+0x49>
mov    0x27c(%rbx),%ecx
lea    0x3a099(%rip),%rsi        # 70d83 <module.23>
callq  8a00 <TIFFErrorExt@plt>
mov    %r12,0x388(%rbx)
mov    %r13,0x390(%rbx)
mov    %r14,%rax
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
mov    -0x10(%rbp),%rbx
leaveq 
retq   
mov    %r14,%rsi
cmp    %rsi,%r13
jle    36c44 <LogLuvDecode32+0xe4>
test   %r10,%r10
jle    36c44 <LogLuvDecode32+0xe4>
movzbl (%r9),%edx
cmp    $0x7f,%dl
ja     36d3a <LogLuvDecode32+0x1da>
add    $0x1,%r9
jmp    36d7a <LogLuvDecode32+0x21a>
cmp    $0x1,%r10
jle    36c44 <LogLuvDecode32+0xe4>
movzbl 0x1(%r9),%edi
shl    %cl,%edi
add    $0x2,%r9
add    $0xfffffffffffffffe,%r10
lea    -0x7e(%rdx),%eax
jmp    36d9f <LogLuvDecode32+0x23f>
test   %edx,%edx
je     36d19 <LogLuvDecode32+0x1b9>
cmp    %rsi,%r13
jle    36d19 <LogLuvDecode32+0x1b9>
movzbl (%r9),%eax
shl    %cl,%eax
or     (%r15,%rsi,4),%eax
mov    %eax,(%r15,%rsi,4)
add    $0x1,%r9
add    $0x1,%rsi
add    $0xffffffff,%edx
add    $0xffffffffffffffff,%r10
test   %r10,%r10
jne    36d58 <LogLuvDecode32+0x1f8>
mov    %r14,%r10
jmp    36d19 <LogLuvDecode32+0x1b9>
cmp    %rsi,%r13
jle    36d19 <LogLuvDecode32+0x1b9>
mov    %rdi,%rdx
or     (%r15,%rsi,4),%edx
mov    %edx,(%r15,%rsi,4)
add    $0x1,%rsi
add    $0xffffffff,%eax
test   %eax,%eax
jne    36d88 <LogLuvDecode32+0x228>
jmpq   36d19 <LogLuvDecode32+0x1b9>
nopl   0x0(%rax,%rax,1)

0000000000036db0 <LogLuvDecodeStrip>:
push   %rbp
mov    %rsp,%rbp
sub    $0x40,%rsp
mov    %rdx,-0x40(%rbp)
mov    %rsi,-0x30(%rbp)
mov    %rdi,-0x28(%rbp)
mov    %rcx,-0x38(%rbp)
callq  8410 <TIFFScanlineSize@plt>
test   %rax,%rax
jne    36dd6 <LogLuvDecodeStrip+0x26>
xor    %eax,%eax
leaveq 
retq   
mov    %r12,%rcx
mov    %rax,%r12
mov    -0x40(%rbp),%rax
cqto   
mov    %rbx,%rsi
mov    %rax,%rbx
idiv   %r12
test   %rdx,%rdx
jne    36e12 <LogLuvDecodeStrip+0x62>
mov    %rsi,-0x8(%rbp)
mov    %rcx,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x40(%rbp)
mov    -0x38(%rbp),%r13
mov    -0x28(%rbp),%r14
mov    -0x30(%rbp),%r15
jmp    36e4e <LogLuvDecodeStrip+0x9e>
lea    0x39f88(%rip),%rdi        # 70da1 <module.23+0x1e>
lea    0x39e66(%rip),%rsi        # 70c86 <module.9+0x4e>
mov    $0x194,%edx
lea    0x39f84(%rip),%rcx        # 70db0 <module.23+0x2d>
callq  8490 <__assert_fail@plt>
mov    %r14,%rdi
mov    %r15,%rsi
mov    %r12,%rdx
mov    %r13,%rcx
callq  *0x2f8(%r14)
test   %eax,%eax
je     36e53 <LogLuvDecodeStrip+0xa3>
sub    %r12,%rbx
add    %r12,%r15
test   %rbx,%rbx
jne    36e31 <LogLuvDecodeStrip+0x81>
test   %rbx,%rbx
jne    36e73 <LogLuvDecodeStrip+0xc3>
mov    $0x1,%eax
mov    -0x40(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
mov    -0x40(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
xor    %eax,%eax
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

0000000000036e90 <LogLuvDecodeTile>:
push   %rbp
mov    %rsp,%rbp
sub    $0x40,%rsp
mov    %rdx,-0x40(%rbp)
mov    %rsi,-0x30(%rbp)
mov    %rdi,-0x28(%rbp)
mov    %rcx,-0x38(%rbp)
callq  80d0 <TIFFTileRowSize@plt>
test   %rax,%rax
jne    36eb6 <LogLuvDecodeTile+0x26>
xor    %eax,%eax
leaveq 
retq   
mov    %r12,%rcx
mov    %rax,%r12
mov    -0x40(%rbp),%rax
cqto   
mov    %rbx,%rsi
mov    %rax,%rbx
idiv   %r12
test   %rdx,%rdx
jne    36ef2 <LogLuvDecodeTile+0x62>
mov    %rsi,-0x8(%rbp)
mov    %rcx,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x40(%rbp)
mov    -0x38(%rbp),%r13
mov    -0x28(%rbp),%r14
mov    -0x30(%rbp),%r15
jmp    36f2e <LogLuvDecodeTile+0x9e>
lea    0x39ea8(%rip),%rdi        # 70da1 <module.23+0x1e>
lea    0x39d86(%rip),%rsi        # 70c86 <module.9+0x4e>
mov    $0x1a9,%edx
lea    0x39eb6(%rip),%rcx        # 70dc2 <module.23+0x3f>
callq  8490 <__assert_fail@plt>
mov    %r14,%rdi
mov    %r15,%rsi
mov    %r12,%rdx
mov    %r13,%rcx
callq  *0x2f8(%r14)
test   %eax,%eax
je     36f33 <LogLuvDecodeTile+0xa3>
sub    %r12,%rbx
add    %r12,%r15
test   %rbx,%rbx
jne    36f11 <LogLuvDecodeTile+0x81>
test   %rbx,%rbx
jne    36f53 <LogLuvDecodeTile+0xc3>
mov    $0x1,%eax
mov    -0x40(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
mov    -0x40(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
xor    %eax,%eax
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

0000000000036f70 <LogL16Encode>:
push   %rbp
mov    %rsp,%rbp
sub    $0x50,%rsp
mov    0x350(%rdi),%r8
lea    0x39d00(%rip),%r9        # 70c86 <module.9+0x4e>
lea    0x39e53(%rip),%rax        # 70de0 <module.28+0xd>
test   %cx,%cx
je     36fa9 <LogL16Encode+0x39>
mov    %rax,%rcx
mov    %r9,%rsi
lea    0x39d5b(%rip),%rdi        # 70cfa <module.15+0xd>
mov    $0x1c4,%edx
callq  8490 <__assert_fail@plt>
test   %r8,%r8
jne    36fc5 <LogL16Encode+0x55>
mov    %rax,%rcx
mov    %r9,%rsi
lea    0x39d53(%rip),%rdi        # 70d0e <module.15+0x21>
mov    $0x1c5,%edx
callq  8490 <__assert_fail@plt>
mov    %rdx,%rax
mov    %r13,%r9
mov    %r14,%r10
mov    %rbx,%r14
mov    %rdi,%rbx
mov    %r12,%r11
mov    %rsi,%r12
movslq 0xc(%r8),%rcx
cqto   
idiv   %rcx
mov    %rax,-0x40(%rbp)
xor    %r13d,%r13d
movslq 0x4(%r8),%rcx
cmp    $0x1,%ecx
jne    3703d <LogL16Encode+0xcd>
mov    %r15,%rsi
mov    %rax,%r15
mov    0x388(%rbx),%rdi
mov    0x370(%rbx),%rdx
mov    0x390(%rbx),%rax
sub    %rax,%rdx
mov    $0x1,%eax
mov    $0xff,%r8d
mov    $0x10,%ecx
mov    %r11,-0x10(%rbp)
mov    %r9,-0x18(%rbp)
mov    %r10,-0x20(%rbp)
mov    %rsi,-0x28(%rbp)
mov    %r14,-0x8(%rbp)
mov    %r13,%r14
jmpq   370c9 <LogL16Encode+0x159>
mov    0x10(%r8),%rsi
mov    0x18(%r8),%rcx
cmp    %rax,%rcx
jl     370fe <LogL16Encode+0x18e>
mov    %rax,%rdx
mov    %r11,-0x28(%rbp)
mov    %r9,-0x30(%rbp)
mov    %r10,-0x38(%rbp)
mov    %r15,-0x48(%rbp)
mov    %r8,%rdi
mov    %rax,%r15
mov    %r12,%r8
mov    %rsi,%r12
mov    %r8,%rsi
callq  *0x20(%rdi)
mov    -0x48(%rbp),%rsi
mov    -0x38(%rbp),%r10
mov    -0x30(%rbp),%r9
mov    -0x28(%rbp),%r11
jmpq   36ff9 <LogL16Encode+0x89>
lea    0x7e(%r14),%eax
mov    %al,(%rdi)
movswq (%r12,%rsi,2),%rax
sar    %cl,%eax
mov    %al,0x1(%rdi)
add    $0x2,%rdi
add    $0xfffffffffffffffe,%rdx
mov    %rcx,-0x48(%rbp)
movslq %r14d,%rax
add    %rax,%r13
mov    -0x40(%rbp),%r15
mov    $0x1,%eax
mov    -0x38(%rbp),%r8
cmp    %r13,%r15
jg     37130 <LogL16Encode+0x1c0>
mov    $0xff,%r8d
mov    -0x48(%rbp),%rcx
xor    %r13d,%r13d
add    $0xfffffff8,%ecx
test   %ecx,%ecx
jns    3713f <LogL16Encode+0x1cf>
mov    %rdi,0x388(%rbx)
mov    0x370(%rbx),%rcx
sub    %rdx,%rcx
mov    %rcx,0x390(%rbx)
mov    -0x8(%rbp),%rbx
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rbx),%rdi
mov    %r10,%rbx
mov    %r11,%r12
mov    %r9,%r13
lea    0x39cbc(%rip),%rsi        # 70dd3 <module.28>
lea    0x39bfb(%rip),%rdx        # 70d19 <module.15+0x2c>
callq  8a00 <TIFFErrorExt@plt>
mov    %r14,%rcx
mov    %rbx,%r14
mov    %rcx,%rbx
xor    %eax,%eax
leaveq 
retq   
cmp    $0x3,%rdx
jle    3714f <LogL16Encode+0x1df>
mov    -0x48(%rbp),%rcx
mov    %r13,%rsi
jmp    371a6 <LogL16Encode+0x236>
shl    %cl,%r8d
mov    %r8,-0x38(%rbp)
mov    %rcx,-0x48(%rbp)
jmpq   370b7 <LogL16Encode+0x147>
mov    %rdi,0x388(%rbx)
mov    0x370(%rbx),%rax
sub    %rdx,%rax
mov    %rax,0x390(%rbx)
mov    %rbx,%rdi
callq  86e0 <TIFFFlushData1@plt>
test   %eax,%eax
je     371bd <LogL16Encode+0x24d>
mov    0x388(%rbx),%rdi
mov    0x370(%rbx),%rdx
mov    0x390(%rbx),%rax
sub    %rax,%rdx
mov    $0x1,%eax
mov    -0x38(%rbp),%r8
mov    -0x48(%rbp),%rcx
mov    %r13,%rsi
jmp    371a6 <LogL16Encode+0x236>
cmp    $0x3,%r14d
jg     371d5 <LogL16Encode+0x265>
add    %r11,%rsi
cmp    %rsi,%r15
jle    371d5 <LogL16Encode+0x265>
movswq (%r12,%rsi,2),%r9
and    %r8w,%r9w
movswq %r9w,%r10
mov    %rax,%r14
jmp    3721f <LogL16Encode+0x2af>
mov    -0x8(%rbp),%rbx
xor    %eax,%eax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
leaveq 
retq   
mov    %r14,-0x48(%rbp)
mov    %rsi,%rax
sub    %r13,%rax
cmp    $0x1,%rax
jg     37230 <LogL16Encode+0x2c0>
mov    $0x7f,%eax
cmp    %rsi,%r13
jl     3723d <LogL16Encode+0x2cd>
mov    -0x48(%rbp),%r14
cmp    $0x3,%r14d
jg     37088 <LogL16Encode+0x118>
xor    %r14d,%r14d
jmpq   370a0 <LogL16Encode+0x130>
lea    (%rsi,%r11,1),%r9
cmp    %r9,%r15
jle    3719d <LogL16Encode+0x22d>
movswq (%r12,%r9,2),%r9
and    %r8d,%r9d
cmp    %r9d,%r10d
jne    3719d <LogL16Encode+0x22d>
add    $0x1,%r14d
movslq %r14d,%r11
cmp    $0x80,%r14d
jle    37205 <LogL16Encode+0x295>
jmpq   3719d <LogL16Encode+0x22d>
cmp    $0x3,%rax
jle    372b1 <LogL16Encode+0x341>
mov    $0x7f,%eax
jmp    371ea <LogL16Encode+0x27a>
mov    %rsi,%r14
sub    %r13,%r14
cmp    $0x7f,%r14
jle    3724c <LogL16Encode+0x2dc>
mov    %rax,%r14
lea    0x3(%r14),%r8
cmp    %r8,%rdx
jge    372a4 <LogL16Encode+0x334>
mov    %rdi,0x388(%rbx)
mov    0x370(%rbx),%rax
sub    %rdx,%rax
mov    %rax,0x390(%rbx)
mov    %rbx,%rdi
mov    %rsi,-0x30(%rbp)
mov    %rcx,%r15
callq  86e0 <TIFFFlushData1@plt>
test   %eax,%eax
je     372c4 <LogL16Encode+0x354>
mov    0x388(%rbx),%rdi
mov    0x370(%rbx),%rdx
mov    0x390(%rbx),%rax
sub    %rax,%rdx
mov    %r15,%rcx
mov    -0x30(%rbp),%rsi
mov    $0x7f,%eax
mov    %r14b,(%rdi)
add    $0x1,%rdi
add    $0xffffffffffffffff,%rdx
jmp    372f7 <LogL16Encode+0x387>
movswq (%r12,%r13,2),%rax
and    %r8w,%ax
movswq %ax,%r9
lea    0x1(%r13),%rax
jmp    3730d <LogL16Encode+0x39d>
mov    -0x8(%rbp),%rbx
xor    %eax,%eax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
leaveq 
retq   
movswq (%r12,%r13,2),%r8
sar    %cl,%r8d
mov    %r8b,(%rdi)
add    $0x1,%rdi
add    $0xffffffffffffffff,%rdx
add    $0x1,%r13
add    $0xffffffffffffffff,%r14
test   %r14,%r14
jne    372dc <LogL16Encode+0x36c>
jmpq   371ea <LogL16Encode+0x27a>
lea    0x1(%rax),%r10
cmp    %r10,%rsi
je     37324 <LogL16Encode+0x3b4>
mov    %r10,%rax
movswq (%r12,%rax,2),%r10
and    %r8d,%r10d
cmp    %r10d,%r9d
je     37301 <LogL16Encode+0x391>
mov    $0x7f,%eax
jmpq   371ea <LogL16Encode+0x27a>
add    $0x7f,%rax
sub    %r13,%rax
mov    %al,(%rdi)
sar    %cl,%r9d
mov    %r9b,0x1(%rdi)
add    $0x2,%rdi
add    $0xfffffffffffffffe,%rdx
mov    %r10,%r13
mov    $0x7f,%eax
jmpq   371ea <LogL16Encode+0x27a>
nopl   0x0(%rax)

0000000000037350 <LogLuvEncode24>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    0x350(%rdi),%r11
lea    0x39920(%rip),%r8        # 70c86 <module.9+0x4e>
lea    0x39a8f(%rip),%rax        # 70dfc <module.30+0xf>
test   %cx,%cx
je     37389 <LogLuvEncode24+0x39>
mov    %rax,%rcx
mov    %r8,%rsi
lea    0x3997b(%rip),%rdi        # 70cfa <module.15+0xd>
mov    $0x221,%edx
callq  8490 <__assert_fail@plt>
test   %r11,%r11
jne    373a5 <LogLuvEncode24+0x55>
mov    %rax,%rcx
mov    %r8,%rsi
lea    0x39973(%rip),%rdi        # 70d0e <module.15+0x21>
mov    $0x222,%edx
callq  8490 <__assert_fail@plt>
mov    %rdx,%rax
mov    %r12,%r8
mov    %rdi,%r12
mov    %r15,%r9
mov    %r13,%r10
mov    %rsi,%r13
movslq 0xc(%r11),%rcx
cqto   
idiv   %rcx
xor    %r15d,%r15d
movslq 0x4(%r11),%rcx
cmp    $0x2,%ecx
jne    37402 <LogLuvEncode24+0xb2>
mov    %r14,%rdx
mov    %rax,%r14
mov    0x388(%r12),%rcx
mov    0x370(%r12),%rax
mov    0x390(%r12),%rsi
sub    %rsi,%rax
mov    %r10,-0x10(%rbp)
mov    %rdx,-0x18(%rbp)
mov    %r9,-0x20(%rbp)
mov    %r8,-0x8(%rbp)
jmpq   374bf <LogLuvEncode24+0x16f>
mov    0x10(%r11),%r15
mov    0x18(%r11),%rcx
cmp    %rax,%rcx
jl     374f6 <LogLuvEncode24+0x1a6>
mov    %rax,%rdx
mov    %r10,-0x10(%rbp)
mov    %r14,-0x18(%rbp)
mov    %r9,-0x20(%rbp)
mov    %r13,%rsi
mov    %r8,%r13
mov    %r11,%rdi
mov    %rax,%r14
callq  *0x20(%rdi)
mov    %r13,%r8
mov    %r15,%r13
xor    %r15d,%r15d
mov    -0x20(%rbp),%r9
mov    -0x18(%rbp),%rdx
mov    -0x10(%rbp),%r10
jmp    373d2 <LogLuvEncode24+0x82>
cmp    $0x2,%rax
jg     37494 <LogLuvEncode24+0x144>
mov    %rcx,0x388(%r12)
mov    0x370(%r12),%rcx
sub    %rax,%rcx
mov    %rcx,0x390(%r12)
mov    %r12,%rdi
callq  86e0 <TIFFFlushData1@plt>
test   %eax,%eax
je     37520 <LogLuvEncode24+0x1d0>
mov    0x388(%r12),%rcx
mov    0x370(%r12),%rax
mov    0x390(%r12),%rdx
sub    %rdx,%rax
mov    0x0(%r13),%edx
shr    $0x10,%edx
mov    %dl,(%rcx)
mov    0x0(%r13),%edx
shr    $0x8,%edx
mov    %dl,0x1(%rcx)
movzbl 0x0(%r13),%edx
mov    %dl,0x2(%rcx)
add    $0x3,%rcx
add    $0xfffffffffffffffd,%rax
add    $0x4,%r13
add    $0xffffffffffffffff,%r14
test   %r14,%r14
jne    37448 <LogLuvEncode24+0xf8>
mov    %rcx,0x388(%r12)
mov    0x370(%r12),%rcx
sub    %rax,%rcx
mov    %rcx,0x390(%r12)
mov    $0x1,%eax
mov    -0x8(%rbp),%r12
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%r12),%rdi
mov    %r8,%r12
mov    %r10,%r13
mov    %r9,%r15
lea    0x398dd(%rip),%rsi        # 70ded <module.30>
lea    0x39802(%rip),%rdx        # 70d19 <module.15+0x2c>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
mov    %r15,%rax
mov    -0x8(%rbp),%r12
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)

0000000000037540 <LogLuvEncode32>:
push   %rbp
mov    %rsp,%rbp
sub    $0x50,%rsp
mov    0x350(%rdi),%r8
lea    0x39730(%rip),%r9        # 70c86 <module.9+0x4e>
lea    0x398bd(%rip),%rax        # 70e1a <module.32+0xf>
test   %cx,%cx
je     37579 <LogLuvEncode32+0x39>
mov    %rax,%rcx
mov    %r9,%rsi
lea    0x3978b(%rip),%rdi        # 70cfa <module.15+0xd>
mov    $0x25a,%edx
callq  8490 <__assert_fail@plt>
test   %r8,%r8
jne    37595 <LogLuvEncode32+0x55>
mov    %rax,%rcx
mov    %r9,%rsi
lea    0x39783(%rip),%rdi        # 70d0e <module.15+0x21>
mov    $0x25b,%edx
callq  8490 <__assert_fail@plt>
mov    %rdx,%rax
mov    %r13,%r9
mov    %r14,%r10
mov    %rbx,%r14
mov    %rdi,%rbx
mov    %r12,%r11
mov    %rsi,%r12
movslq 0xc(%r8),%rcx
cqto   
idiv   %rcx
mov    %rax,-0x40(%rbp)
xor    %r13d,%r13d
movslq 0x4(%r8),%rcx
cmp    $0x2,%ecx
jne    3760d <LogLuvEncode32+0xcd>
mov    %r15,%rsi
mov    %rax,%r15
mov    0x388(%rbx),%rdi
mov    0x370(%rbx),%rdx
mov    0x390(%rbx),%rax
sub    %rax,%rdx
mov    $0x1,%eax
mov    $0xff,%r8d
mov    $0x20,%ecx
mov    %r11,-0x10(%rbp)
mov    %r9,-0x18(%rbp)
mov    %r10,-0x20(%rbp)
mov    %rsi,-0x28(%rbp)
mov    %r14,-0x8(%rbp)
mov    %r13,%r14
jmpq   37698 <LogLuvEncode32+0x158>
mov    0x10(%r8),%rsi
mov    0x18(%r8),%rcx
cmp    %rax,%rcx
jl     376cd <LogLuvEncode32+0x18d>
mov    %rax,%rdx
mov    %r11,-0x20(%rbp)
mov    %r9,-0x28(%rbp)
mov    %r10,-0x30(%rbp)
mov    %r15,-0x48(%rbp)
mov    %r8,%rdi
mov    %rax,%r15
mov    %r12,%r8
mov    %rsi,%r12
mov    %r8,%rsi
callq  *0x20(%rdi)
mov    -0x48(%rbp),%rsi
mov    -0x30(%rbp),%r10
mov    -0x28(%rbp),%r9
mov    -0x20(%rbp),%r11
jmpq   375c9 <LogLuvEncode32+0x89>
lea    0x7e(%r14),%eax
mov    %al,(%rdi)
mov    (%r12,%rsi,4),%eax
shr    %cl,%eax
mov    %al,0x1(%rdi)
add    $0x2,%rdi
add    $0xfffffffffffffffe,%rdx
mov    %rcx,-0x38(%rbp)
movslq %r14d,%rax
add    %rax,%r13
mov    -0x40(%rbp),%r15
mov    $0x1,%eax
mov    -0x30(%rbp),%r8
cmp    %r13,%r15
jg     376ff <LogLuvEncode32+0x1bf>
mov    $0xff,%r8d
mov    -0x38(%rbp),%rcx
xor    %r13d,%r13d
add    $0xfffffff8,%ecx
test   %ecx,%ecx
jns    3770e <LogLuvEncode32+0x1ce>
mov    %rdi,0x388(%rbx)
mov    0x370(%rbx),%rcx
sub    %rdx,%rcx
mov    %rcx,0x390(%rbx)
mov    -0x8(%rbp),%rbx
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rbx),%rdi
mov    %r10,%rbx
mov    %r11,%r12
mov    %r9,%r13
lea    0x39725(%rip),%rsi        # 70e0b <module.32>
lea    0x3962c(%rip),%rdx        # 70d19 <module.15+0x2c>
callq  8a00 <TIFFErrorExt@plt>
mov    %r14,%rcx
mov    %rbx,%r14
mov    %rcx,%rbx
xor    %eax,%eax
leaveq 
retq   
cmp    $0x3,%rdx
jle    3771e <LogLuvEncode32+0x1de>
mov    -0x38(%rbp),%rcx
mov    %r13,%rsi
jmp    37775 <LogLuvEncode32+0x235>
shl    %cl,%r8d
mov    %r8,-0x30(%rbp)
mov    %rcx,-0x38(%rbp)
jmpq   37686 <LogLuvEncode32+0x146>
mov    %rdi,0x388(%rbx)
mov    0x370(%rbx),%rax
sub    %rdx,%rax
mov    %rax,0x390(%rbx)
mov    %rbx,%rdi
callq  86e0 <TIFFFlushData1@plt>
test   %eax,%eax
je     37786 <LogLuvEncode32+0x246>
mov    0x388(%rbx),%rdi
mov    0x370(%rbx),%rdx
mov    0x390(%rbx),%rax
sub    %rax,%rdx
mov    $0x1,%eax
mov    -0x30(%rbp),%r8
mov    -0x38(%rbp),%rcx
mov    %r13,%rsi
jmp    37775 <LogLuvEncode32+0x235>
cmp    $0x3,%r14d
jg     3779e <LogLuvEncode32+0x25e>
add    %r11,%rsi
cmp    %rsi,%r15
jle    3779e <LogLuvEncode32+0x25e>
mov    %r8,%r9
and    (%r12,%rsi,4),%r9d
mov    %rax,%r14
jmp    377e7 <LogLuvEncode32+0x2a7>
mov    -0x8(%rbp),%rbx
xor    %eax,%eax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
leaveq 
retq   
mov    %r14,-0x48(%rbp)
mov    %rsi,%rax
sub    %r13,%rax
cmp    $0x1,%rax
jg     377f8 <LogLuvEncode32+0x2b8>
mov    $0x7f,%eax
cmp    %rsi,%r13
jl     37805 <LogLuvEncode32+0x2c5>
mov    -0x48(%rbp),%r14
cmp    $0x3,%r14d
jg     37658 <LogLuvEncode32+0x118>
xor    %r14d,%r14d
jmpq   3766f <LogLuvEncode32+0x12f>
lea    (%rsi,%r11,1),%r10
cmp    %r10,%r15
jle    3776c <LogLuvEncode32+0x22c>
mov    (%r12,%r10,4),%r10d
and    %r8d,%r10d
cmp    %r9d,%r10d
jne    3776c <LogLuvEncode32+0x22c>
add    $0x1,%r14d
movslq %r14d,%r11
cmp    $0x80,%r14d
jle    377ce <LogLuvEncode32+0x28e>
jmpq   3776c <LogLuvEncode32+0x22c>
cmp    $0x3,%rax
jle    37879 <LogLuvEncode32+0x339>
mov    $0x7f,%eax
jmp    377b3 <LogLuvEncode32+0x273>
mov    %rsi,%r14
sub    %r13,%r14
cmp    $0x7f,%r14
jle    37814 <LogLuvEncode32+0x2d4>
mov    %rax,%r14
lea    0x3(%r14),%r8
cmp    %r8,%rdx
jge    3786c <LogLuvEncode32+0x32c>
mov    %rdi,0x388(%rbx)
mov    0x370(%rbx),%rax
sub    %rdx,%rax
mov    %rax,0x390(%rbx)
mov    %rbx,%rdi
mov    %rsi,-0x38(%rbp)
mov    %rcx,%r15
callq  86e0 <TIFFFlushData1@plt>
test   %eax,%eax
je     37886 <LogLuvEncode32+0x346>
mov    0x388(%rbx),%rdi
mov    0x370(%rbx),%rdx
mov    0x390(%rbx),%rax
sub    %rax,%rdx
mov    %r15,%rcx
mov    -0x38(%rbp),%rsi
mov    $0x7f,%eax
mov    %r14b,(%rdi)
add    $0x1,%rdi
add    $0xffffffffffffffff,%rdx
jmp    378b8 <LogLuvEncode32+0x378>
mov    %r8,%rcx
and    (%r12,%r13,4),%ecx
lea    0x1(%r13),%rax
jmp    378ce <LogLuvEncode32+0x38e>
mov    -0x8(%rbp),%rbx
xor    %eax,%eax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
leaveq 
retq   
mov    (%r12,%r13,4),%r8d
shr    %cl,%r8d
mov    %r8b,(%rdi)
add    $0x1,%rdi
add    $0xffffffffffffffff,%rdx
add    $0x1,%r13
add    $0xffffffffffffffff,%r14
test   %r14,%r14
jne    3789e <LogLuvEncode32+0x35e>
jmpq   377b3 <LogLuvEncode32+0x273>
lea    0x1(%rax),%r10
cmp    %r10,%rsi
je     378e8 <LogLuvEncode32+0x3a8>
mov    %r10,%rax
mov    %r8,%r9
and    (%r12,%rax,4),%r9d
cmp    %ecx,%r9d
je     378c2 <LogLuvEncode32+0x382>
mov    -0x38(%rbp),%rcx
mov    $0x7f,%eax
jmpq   377b3 <LogLuvEncode32+0x273>
add    $0x7f,%rax
sub    %r13,%rax
mov    %al,(%rdi)
mov    -0x38(%rbp),%rcx
shr    %cl,%r9d
mov    %r9b,0x1(%rdi)
add    $0x2,%rdi
add    $0xfffffffffffffffe,%rdx
mov    %r10,%r13
mov    $0x7f,%eax
jmpq   377b3 <LogLuvEncode32+0x273>
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   0x0(%rax)

0000000000037920 <LogLuvEncodeStrip>:
push   %rbp
mov    %rsp,%rbp
sub    $0x40,%rsp
mov    %rdx,-0x40(%rbp)
mov    %rsi,-0x30(%rbp)
mov    %rdi,-0x28(%rbp)
mov    %rcx,-0x38(%rbp)
callq  8410 <TIFFScanlineSize@plt>
test   %rax,%rax
jne    37946 <LogLuvEncodeStrip+0x26>
xor    %eax,%eax
leaveq 
retq   
mov    %r12,%rcx
mov    %rax,%r12
mov    -0x40(%rbp),%rax
cqto   
mov    %rbx,%rsi
mov    %rax,%rbx
idiv   %r12
test   %rdx,%rdx
jne    37982 <LogLuvEncodeStrip+0x62>
mov    %rsi,-0x8(%rbp)
mov    %rcx,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x40(%rbp)
mov    -0x38(%rbp),%r13
mov    -0x28(%rbp),%r14
mov    -0x30(%rbp),%r15
jmp    379bf <LogLuvEncodeStrip+0x9f>
lea    0x39418(%rip),%rdi        # 70da1 <module.23+0x1e>
lea    0x392f6(%rip),%rsi        # 70c86 <module.9+0x4e>
mov    $0x2b6,%edx
lea    0x3948d(%rip),%rcx        # 70e29 <module.32+0x1e>
callq  8490 <__assert_fail@plt>
mov    %r14,%rdi
mov    %r15,%rsi
mov    %r12,%rdx
mov    %r13,%rcx
callq  *0x300(%r14)
cmp    $0x1,%eax
jne    379c4 <LogLuvEncodeStrip+0xa4>
sub    %r12,%rbx
add    %r12,%r15
test   %rbx,%rbx
jne    379a1 <LogLuvEncodeStrip+0x81>
test   %rbx,%rbx
jne    379e4 <LogLuvEncodeStrip+0xc4>
mov    $0x1,%eax
mov    -0x40(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
mov    -0x40(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
xor    %eax,%eax
leaveq 
retq   
nopl   0x0(%rax)

0000000000037a00 <LogLuvEncodeTile>:
push   %rbp
mov    %rsp,%rbp
sub    $0x40,%rsp
mov    %rdx,-0x40(%rbp)
mov    %rsi,-0x30(%rbp)
mov    %rdi,-0x28(%rbp)
mov    %rcx,-0x38(%rbp)
callq  80d0 <TIFFTileRowSize@plt>
test   %rax,%rax
jne    37a26 <LogLuvEncodeTile+0x26>
xor    %eax,%eax
leaveq 
retq   
mov    %r12,%rcx
mov    %rax,%r12
mov    -0x40(%rbp),%rax
cqto   
mov    %rbx,%rsi
mov    %rax,%rbx
idiv   %r12
test   %rdx,%rdx
jne    37a62 <LogLuvEncodeTile+0x62>
mov    %rsi,-0x8(%rbp)
mov    %rcx,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x40(%rbp)
mov    -0x38(%rbp),%r13
mov    -0x28(%rbp),%r14
mov    -0x30(%rbp),%r15
jmp    37a9f <LogLuvEncodeTile+0x9f>
lea    0x39338(%rip),%rdi        # 70da1 <module.23+0x1e>
lea    0x39216(%rip),%rsi        # 70c86 <module.9+0x4e>
mov    $0x2ca,%edx
lea    0x393bf(%rip),%rcx        # 70e3b <module.32+0x30>
callq  8490 <__assert_fail@plt>
mov    %r14,%rdi
mov    %r15,%rsi
mov    %r12,%rdx
mov    %r13,%rcx
callq  *0x300(%r14)
cmp    $0x1,%eax
jne    37aa4 <LogLuvEncodeTile+0xa4>
sub    %r12,%rbx
add    %r12,%r15
test   %rbx,%rbx
jne    37a81 <LogLuvEncodeTile+0x81>
test   %rbx,%rbx
jne    37ac4 <LogLuvEncodeTile+0xc4>
mov    $0x1,%eax
mov    -0x40(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
mov    -0x40(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
xor    %eax,%eax
leaveq 
retq   
nopl   0x0(%rax)

0000000000037ae0 <L16toY>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %r13,-0x8(%rbp)
mov    %r14,-0x10(%rbp)
mov    %r15,-0x18(%rbp)
mov    0x10(%rdi),%r14
mov    %rdx,%r13
mov    %rsi,%r15
jmp    37b1e <L16toY+0x3e>
movswq (%r14),%rdi
callq  8ce0 <LogL16toY@plt>
cvtsd2ss %xmm0,%xmm0
movss  %xmm0,(%r15)
add    $0xffffffffffffffff,%r13
add    $0x2,%r14
add    $0x4,%r15
test   %r13,%r13
jg     37b00 <L16toY+0x20>
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   0x0(%rax)

0000000000037b40 <L16toGry>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    0x10(%rdi),%r13
mov    %rdx,%rbx
mov    %rsi,%r12
xor    %r14d,%r14d
mov    $0xff,%r15d
jmp    37b9a <L16toGry+0x5a>
movswq 0x0(%r13),%rdi
callq  8ce0 <LogL16toY@plt>
xorpd  %xmm1,%xmm1
ucomisd %xmm1,%xmm0
jp     37bb5 <L16toGry+0x75>
ja     37bb5 <L16toGry+0x75>
mov    %r14,%rax
mov    %al,(%r12)
add    $0xffffffffffffffff,%rbx
add    $0x1,%r12
add    $0x2,%r13
test   %rbx,%rbx
jg     37b71 <L16toGry+0x31>
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
movsd  0x39613(%rip),%xmm1        # 711d0 <module.60+0x107>
ucomisd %xmm1,%xmm0
jb     37bc8 <L16toGry+0x88>
mov    %r15,%rax
jmp    37b8a <L16toGry+0x4a>
callq  8c60 <sqrt@plt>
movsd  0x395c3(%rip),%xmm1        # 71198 <module.60+0xcf>
mulsd  %xmm1,%xmm0
cvttsd2si %xmm0,%eax
jmp    37b8a <L16toGry+0x4a>
nop

0000000000037be0 <L16fromY>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %r12,-0x8(%rbp)
mov    %r13,-0x10(%rbp)
mov    %r14,-0x18(%rbp)
mov    %r15,-0x20(%rbp)
mov    %rdx,%r12
mov    %rsi,%r13
mov    %rdi,%r14
mov    0x10(%r14),%r15
jmp    37c2a <L16fromY+0x4a>
movss  0x0(%r13),%xmm0
cvtss2sd %xmm0,%xmm0
movslq 0x8(%r14),%rdi
callq  8640 <LogL16fromY@plt>
mov    %ax,(%r15)
add    $0xffffffffffffffff,%r12
add    $0x4,%r13
add    $0x2,%r15
test   %r12,%r12
jg     37c07 <L16fromY+0x27>
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   0x0(%rax)

0000000000037c50 <oog_encode>:
push   %rbp
mov    %rsp,%rbp
sub    $0x390,%rsp
movsd  0x395b5(%rip),%xmm5        # 71218 <module.60+0x14f>
movsd  0x395a5(%rip),%xmm2        # 71210 <module.60+0x147>
lea    0x42c46(%rip),%rcx        # 7a8b8 <oog_table.36>
movslq 0x42dcf(%rip),%rax        # 7aa48 <initialized.37>
test   %eax,%eax
je     37cbf <oog_encode+0x6f>
movapd %xmm1,%xmm3
movapd %xmm0,%xmm1
movapd %xmm3,%xmm0
subsd  %xmm5,%xmm0
subsd  %xmm2,%xmm1
callq  8920 <atan2@plt>
movsd  0x3961a(%rip),%xmm1        # 712b8 <module.60+0x1ef>
mulsd  %xmm1,%xmm0
movsd  0x39616(%rip),%xmm1        # 712c0 <module.60+0x1f7>
addsd  %xmm1,%xmm0
cvttsd2si %xmm0,%eax
lea    0x42bff(%rip),%rcx        # 7a8b8 <oog_table.36>
movslq (%rcx,%rax,4),%rax
leaveq 
retq   
movsd  0x39601(%rip),%xmm3        # 712c8 <module.60+0x1ff>
mov    $0x64,%eax
jmp    37cdd <oog_encode+0x8d>
add    $0xffffffff,%eax
movslq %eax,%rdx
movsd  %xmm3,-0x388(%rbp,%rdx,8)
test   %eax,%eax
jne    37cce <oog_encode+0x7e>
movsd  0x39467(%rip),%xmm4        # 71150 <module.60+0x87>
movsd  0x394e7(%rip),%xmm3        # 711d8 <module.60+0x10f>
movsd  0x394e7(%rip),%xmm6        # 711e0 <module.60+0x117>
lea    0x38a20(%rip),%rsi        # 70720 <uv_row>
mov    $0xa3,%eax
mov    $0x1,%edx
mov    %rbx,-0x28(%rbp)
mov    %r12,-0x30(%rbp)
mov    %r13,-0x38(%rbp)
mov    %r14,-0x40(%rbp)
mov    %r15,-0x48(%rbp)
mov    %rdx,%rbx
mov    %rsi,%r13
movdqu %xmm1,-0x10(%rbp)
movdqu %xmm0,-0x20(%rbp)
jmp    37d8c <oog_encode+0x13c>
movswq 0x6(%r13,%r14,8),%rax
add    %r12d,%eax
lea    0x42b78(%rip),%rcx        # 7a8b8 <oog_table.36>
mov    %eax,(%rcx,%r15,4)
movsd  %xmm0,-0x388(%rbp,%r15,8)
sub    %ebx,%r12d
movsd  0x394b7(%rip),%xmm2        # 71210 <module.60+0x147>
movsd  0x39477(%rip),%xmm3        # 711d8 <module.60+0x10f>
movsd  0x393e7(%rip),%xmm4        # 71150 <module.60+0x87>
movdqu -0x60(%rbp),%xmm0
test   %r12d,%r12d
jns    37dac <oog_encode+0x15c>
mov    $0x1,%ebx
mov    -0x68(%rbp),%rax
movsd  0x39494(%rip),%xmm5        # 71218 <module.60+0x14f>
movsd  0x39454(%rip),%xmm6        # 711e0 <module.60+0x117>
test   %eax,%eax
jne    37e28 <oog_encode+0x1d8>
movsd  0x39534(%rip),%xmm1        # 712d0 <module.60+0x207>
mov    $0x51eb851f,%esi
mov    $0x64,%r10d
jmpq   37e88 <oog_encode+0x238>
cvtsi2sd %r12d,%xmm1
addsd  %xmm4,%xmm1
mulsd  %xmm3,%xmm1
movss  0x0(%r13,%r14,8),%xmm3
cvtss2sd %xmm3,%xmm3
addsd  %xmm3,%xmm1
subsd  %xmm2,%xmm1
callq  8920 <atan2@plt>
movsd  0x394df(%rip),%xmm1        # 712b8 <module.60+0x1ef>
mulsd  %xmm1,%xmm0
movsd  0x394db(%rip),%xmm1        # 712c0 <module.60+0x1f7>
addsd  %xmm1,%xmm0
cvttsd2si %xmm0,%r15d
cvtsi2sd %r15d,%xmm1
movsd  0x39355(%rip),%xmm2        # 71150 <module.60+0x87>
addsd  %xmm2,%xmm1
subsd  %xmm1,%xmm0
callq  8be0 <fabs@plt>
movsd  -0x388(%rbp,%r15,8),%xmm1
ucomisd %xmm0,%xmm1
ja     37d30 <oog_encode+0xe0>
lea    0x42a95(%rip),%rcx        # 7a8b8 <oog_table.36>
jmpq   37d4e <oog_encode+0xfe>
lea    -0x1(%rax),%edx
mov    %rdx,-0x68(%rbp)
movslq %edx,%r14
movswq 0x4(%r13,%r14,8),%rax
lea    -0x1(%rax),%r12d
cmp    $0xa2,%edx
je     37e50 <oog_encode+0x200>
test   %edx,%edx
je     37e50 <oog_encode+0x200>
test   %r12d,%r12d
jle    37e50 <oog_encode+0x200>
mov    %r12,%rbx
cvtsi2sd %edx,%xmm0
addsd  %xmm4,%xmm0
mulsd  %xmm3,%xmm0
addsd  %xmm6,%xmm0
subsd  %xmm5,%xmm0
movdqu %xmm0,-0x60(%rbp)
jmpq   37d6e <oog_encode+0x11e>
lea    -0x1(%r10),%r9d
movslq %r9d,%r8
movsd  -0x388(%rbp,%r8,8),%xmm0
ucomisd %xmm1,%xmm0
ja     37eba <oog_encode+0x26a>
mov    %r9,%r10
test   %r10d,%r10d
jne    37e6e <oog_encode+0x21e>
movl   $0x1,0x42bb1(%rip)        # 7aa48 <initialized.37>
mov    -0x48(%rbp),%r15
mov    -0x40(%rbp),%r14
mov    -0x38(%rbp),%r13
mov    -0x30(%rbp),%r12
mov    -0x28(%rbp),%rbx
movdqu -0x20(%rbp),%xmm1
movdqu -0x10(%rbp),%xmm0
jmpq   37c89 <oog_encode+0x39>
lea    0x63(%r10),%edi
mov    %rbx,%r11
jmp    37f00 <oog_encode+0x2b0>
lea    -0x1(%r10,%r11,1),%r12d
mov    %rsi,%rax
imul   %r12d
mov    %rdx,%rax
sar    $0x5,%eax
shr    $0x1f,%edx
add    %edx,%eax
lea    (%rax,%rax,4),%edx
mov    %rdx,%rax
shl    $0x4,%eax
lea    (%rax,%rdx,4),%eax
sub    %eax,%r12d
movslq %r12d,%rax
movsd  -0x388(%rbp,%rax,8),%xmm0
ucomisd %xmm1,%xmm0
jp     37efc <oog_encode+0x2ac>
jb     37f0b <oog_encode+0x2bb>
add    $0x1,%r11d
cmp    $0x31,%r11d
jle    37ec3 <oog_encode+0x273>
mov    %rbx,%r12
jmp    37f51 <oog_encode+0x301>
mov    %rbx,%r12
jmp    37f51 <oog_encode+0x301>
mov    %rdi,%rdx
sub    %r12d,%edx
mov    %rsi,%rax
imul   %edx
mov    %rdx,%rax
sar    $0x5,%eax
shr    $0x1f,%edx
add    %edx,%eax
lea    (%rax,%rax,4),%edx
mov    %rdx,%rax
shl    $0x4,%eax
lea    (%rax,%rdx,4),%eax
add    %r12d,%eax
neg    %eax
add    %edi,%eax
movslq %eax,%rax
movsd  -0x388(%rbp,%rax,8),%xmm0
ucomisd %xmm1,%xmm0
jp     37f4d <oog_encode+0x2fd>
jb     37f57 <oog_encode+0x307>
add    $0x1,%r12d
cmp    $0x31,%r12d
jle    37f10 <oog_encode+0x2c0>
cmp    %r11d,%r12d
jg     37f96 <oog_encode+0x346>
mov    %rdi,%rdx
sub    %r12d,%edx
mov    %rsi,%rax
imul   %edx
mov    %rdx,%rax
sar    $0x5,%eax
shr    $0x1f,%edx
add    %edx,%eax
lea    (%rax,%rax,4),%edx
mov    %rdx,%rax
shl    $0x4,%eax
lea    (%rax,%rdx,4),%eax
add    %r12d,%eax
sub    %eax,%edi
movslq %edi,%rax
movslq (%rcx,%rax,4),%rax
mov    %eax,(%rcx,%r8,4)
mov    %r9,%r10
jmpq   37e88 <oog_encode+0x238>
lea    -0x1(%r10,%r11,1),%edi
mov    %rsi,%rax
imul   %edi
mov    %rdx,%rax
sar    $0x5,%eax
shr    $0x1f,%edx
add    %edx,%eax
lea    (%rax,%rax,4),%edx
mov    %rdx,%rax
shl    $0x4,%eax
lea    (%rax,%rdx,4),%eax
sub    %eax,%edi
movslq %edi,%rax
movslq (%rcx,%rax,4),%rax
mov    %eax,(%rcx,%r8,4)
mov    %r9,%r10
jmpq   37e88 <oog_encode+0x238>
nopl   0x0(%rax)

0000000000037fd0 <Luv24toXYZ>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %r13,-0x8(%rbp)
mov    %r14,-0x10(%rbp)
mov    %r15,-0x18(%rbp)
mov    0x10(%rdi),%r14
mov    %rdx,%r13
mov    %rsi,%r15
jmp    38007 <Luv24toXYZ+0x37>
mov    (%r14),%edi
mov    %r15,%rsi
callq  8c80 <LogLuv24toXYZ@plt>
add    $0xffffffffffffffff,%r13
add    $0x4,%r14
add    $0xc,%r15
test   %r13,%r13
jg     37ff0 <Luv24toXYZ+0x20>
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

0000000000038020 <Luv24toLuv48>:
push   %rbp
mov    %rsp,%rbp
sub    $0x40,%rsp
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    0x10(%rdi),%r13
mov    %rdx,%rbx
mov    %rsi,%r12
lea    -0x38(%rbp),%r14
lea    -0x30(%rbp),%r15
jmp    380ce <Luv24toLuv48+0xae>
mov    0x0(%r13),%eax
shr    $0xc,%eax
and    $0xffd,%ax
add    $0x3402,%eax
mov    %ax,(%r12)
movslq 0x0(%r13),%rdx
and    $0x3fff,%edx
mov    %r14,%rdi
mov    %r15,%rsi
callq  8340 <uv_decode@plt>
test   %eax,%eax
jns    38098 <Luv24toLuv48+0x78>
movsd  0x3918a(%rip),%xmm0        # 71210 <module.60+0x147>
movsd  %xmm0,-0x38(%rbp)
movsd  0x39185(%rip),%xmm0        # 71218 <module.60+0x14f>
movsd  %xmm0,-0x30(%rbp)
movsd  0x39238(%rip),%xmm0        # 712d8 <module.60+0x20f>
movapd %xmm0,%xmm1
mulsd  -0x38(%rbp),%xmm1
cvttsd2si %xmm1,%eax
mov    %ax,0x2(%r12)
mulsd  -0x30(%rbp),%xmm0
cvttsd2si %xmm0,%eax
mov    %ax,0x4(%r12)
add    $0xffffffffffffffff,%rbx
add    $0x6,%r12
add    $0x4,%r13
test   %rbx,%rbx
jg     38050 <Luv24toLuv48+0x30>
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
nopl   (%rax)

00000000000380f0 <Luv24toRGB>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    %r12,-0x8(%rbp)
mov    %r13,-0x10(%rbp)
mov    %r14,-0x18(%rbp)
mov    %r15,-0x20(%rbp)
mov    0x10(%rdi),%r13
mov    %rdx,%r12
mov    %rsi,%r15
lea    -0x2c(%rbp),%r14
jmp    3813b <Luv24toRGB+0x4b>
mov    0x0(%r13),%edi
mov    %r14,%rsi
callq  8c80 <LogLuv24toXYZ@plt>
mov    %r14,%rdi
mov    %r15,%rsi
callq  82e0 <XYZtoRGB24@plt>
add    $0xffffffffffffffff,%r12
add    $0x4,%r13
add    $0x3,%r15
test   %r12,%r12
jg     38118 <Luv24toRGB+0x28>
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   (%rax)

0000000000038160 <Luv24fromXYZ>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %r12,-0x8(%rbp)
mov    %r13,-0x10(%rbp)
mov    %r14,-0x18(%rbp)
mov    %r15,-0x20(%rbp)
mov    %rdx,%r12
mov    %rsi,%r13
mov    %rdi,%r14
mov    0x10(%r14),%r15
jmp    381a2 <Luv24fromXYZ+0x42>
movslq 0x8(%r14),%rsi
mov    %r13,%rdi
callq  81a0 <LogLuv24fromXYZ@plt>
mov    %eax,(%r15)
add    $0xffffffffffffffff,%r12
add    $0xc,%r13
add    $0x4,%r15
test   %r12,%r12
jg     38187 <Luv24fromXYZ+0x27>
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
leaveq 
retq   
nopl   0x0(%rax)

00000000000381c0 <Luv24fromLuv48>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rdx,%r12
mov    %rsi,%r14
mov    %rdi,%r15
mov    0x10(%r15),%r13
movsd  0x38f5f(%rip),%xmm3        # 71150 <module.60+0x87>
movsd  0x390e7(%rip),%xmm2        # 712e0 <module.60+0x217>
xor    %ebx,%ebx
mov    $0x3ff,%eax
jmpq   3828e <Luv24fromLuv48+0xce>
movswq (%r14),%rcx
test   %cx,%cx
jle    3821c <Luv24fromLuv48+0x5c>
cmp    $0x1cf1,%cx
jle    382ad <Luv24fromLuv48+0xed>
mov    %rax,%rbx
movswq 0x2(%r14),%rax
cvtsi2sd %eax,%xmm0
addsd  %xmm3,%xmm0
mulsd  %xmm2,%xmm0
movswq 0x4(%r14),%rax
cvtsi2sd %eax,%xmm1
addsd  %xmm3,%xmm1
mulsd  %xmm2,%xmm1
movslq 0x8(%r15),%rdi
callq  8840 <uv_encode@plt>
test   %eax,%eax
jns    38262 <Luv24fromLuv48+0xa2>
movsd  0x38fbd(%rip),%xmm0        # 71210 <module.60+0x147>
movsd  0x38fbd(%rip),%xmm1        # 71218 <module.60+0x14f>
xor    %edi,%edi
callq  8840 <uv_encode@plt>
shl    $0xe,%ebx
or     %ebx,%eax
mov    %eax,0x0(%r13)
add    $0xffffffffffffffff,%r12
add    $0x4,%r13
add    $0x6,%r14
mov    $0x3ff,%eax
xor    %ebx,%ebx
movsd  0x3905a(%rip),%xmm2        # 712e0 <module.60+0x217>
movsd  0x38ec2(%rip),%xmm3        # 71150 <module.60+0x87>
test   %r12,%r12
jg     38205 <Luv24fromLuv48+0x45>
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
movslq 0x8(%r15),%rax
test   %eax,%eax
je     3830a <Luv24fromLuv48+0x14a>
mov    %rcx,%rbx
callq  8d10 <rand@plt>
cvtsi2sd %eax,%xmm0
movsd  0x38f87(%rip),%xmm1        # 71250 <module.60+0x187>
mulsd  %xmm1,%xmm0
cvtsi2sd %ebx,%xmm1
movsd  0x3900f(%rip),%xmm2        # 712e8 <module.60+0x21f>
subsd  %xmm2,%xmm1
movsd  0x3900b(%rip),%xmm2        # 712f0 <module.60+0x227>
mulsd  %xmm2,%xmm1
addsd  %xmm1,%xmm0
movsd  0x38e5b(%rip),%xmm3        # 71150 <module.60+0x87>
subsd  %xmm3,%xmm0
cvttsd2si %xmm0,%ebx
movsd  0x38fdb(%rip),%xmm2        # 712e0 <module.60+0x217>
jmpq   3821c <Luv24fromLuv48+0x5c>
lea    -0xcf2(%rcx),%ebx
sar    $0x2,%ebx
jmpq   3821c <Luv24fromLuv48+0x5c>
nopl   0x0(%rax,%rax,1)

0000000000038320 <Luv32toXYZ>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %r13,-0x8(%rbp)
mov    %r14,-0x10(%rbp)
mov    %r15,-0x18(%rbp)
mov    0x10(%rdi),%r14
mov    %rdx,%r13
mov    %rsi,%r15
jmp    38357 <Luv32toXYZ+0x37>
mov    (%r14),%edi
mov    %r15,%rsi
callq  8360 <LogLuv32toXYZ@plt>
add    $0xffffffffffffffff,%r13
add    $0x4,%r14
add    $0xc,%r15
test   %r13,%r13
jg     38340 <Luv32toXYZ+0x20>
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

0000000000038370 <Luv32toLuv48>:
push   %rbp
mov    %rsp,%rbp
mov    0x10(%rdi),%rcx
movsd  0x38dd0(%rip),%xmm1        # 71150 <module.60+0x87>
movsd  0x38f70(%rip),%xmm2        # 712f8 <module.60+0x22f>
jmp    383d9 <Luv32toLuv48+0x69>
mov    (%rcx),%eax
shr    $0x10,%eax
mov    %ax,(%rsi)
mov    (%rcx),%eax
and    $0xff00,%eax
shr    $0x8,%eax
mov    %eax,%eax
cvtsi2sd %rax,%xmm0
addsd  %xmm1,%xmm0
mulsd  %xmm2,%xmm0
cvttsd2si %xmm0,%edi
movzbl (%rcx),%eax
mov    %di,0x2(%rsi)
mov    %eax,%eax
cvtsi2sd %rax,%xmm0
addsd  %xmm1,%xmm0
mulsd  %xmm2,%xmm0
cvttsd2si %xmm0,%eax
mov    %ax,0x4(%rsi)
add    $0xffffffffffffffff,%rdx
add    $0x4,%rcx
add    $0x6,%rsi
test   %rdx,%rdx
jg     3838a <Luv32toLuv48+0x1a>
leaveq 
retq   

00000000000383e0 <Luv32toRGB>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    %r12,-0x8(%rbp)
mov    %r13,-0x10(%rbp)
mov    %r14,-0x18(%rbp)
mov    %r15,-0x20(%rbp)
mov    0x10(%rdi),%r13
mov    %rdx,%r12
mov    %rsi,%r15
lea    -0x2c(%rbp),%r14
jmp    3842b <Luv32toRGB+0x4b>
mov    0x0(%r13),%edi
mov    %r14,%rsi
callq  8360 <LogLuv32toXYZ@plt>
mov    %r14,%rdi
mov    %r15,%rsi
callq  82e0 <XYZtoRGB24@plt>
add    $0xffffffffffffffff,%r12
add    $0x4,%r13
add    $0x3,%r15
test   %r12,%r12
jg     38408 <Luv32toRGB+0x28>
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   (%rax)

0000000000038450 <Luv32fromXYZ>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %r12,-0x8(%rbp)
mov    %r13,-0x10(%rbp)
mov    %r14,-0x18(%rbp)
mov    %r15,-0x20(%rbp)
mov    %rdx,%r12
mov    %rsi,%r13
mov    %rdi,%r14
mov    0x10(%r14),%r15
jmp    38492 <Luv32fromXYZ+0x42>
movslq 0x8(%r14),%rsi
mov    %r13,%rdi
callq  8ba0 <LogLuv32fromXYZ@plt>
mov    %eax,(%r15)
add    $0xffffffffffffffff,%r12
add    $0xc,%r13
add    $0x4,%r15
test   %r12,%r12
jg     38477 <Luv32fromXYZ+0x27>
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
leaveq 
retq   
nopl   0x0(%rax)

00000000000384b0 <Luv32fromLuv48>:
push   %rbp
mov    %rsp,%rbp
sub    $0x40,%rsp
mov    %rdi,-0x30(%rbp)
mov    0x10(%rdi),%rcx
movslq 0x8(%rdi),%rax
test   %eax,%eax
je     3853c <Luv32fromLuv48+0x8c>
movsd  0x38e30(%rip),%xmm0        # 71300 <module.60+0x237>
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rcx,%rbx
mov    %rdi,%r13
jmpq   38575 <Luv32fromLuv48+0xc5>
movswq 0x4(%rsi),%rdi
lea    (%rdi,%rdi,4),%eax
shl    $0x4,%eax
lea    (%rax,%rdi,2),%eax
lea    (%rax,%rax,4),%eax
and    $0x7f8000,%eax
shr    $0xf,%eax
movswq (%rsi),%rdi
shl    $0x10,%edi
add    %eax,%edi
movswq 0x2(%rsi),%r8
lea    (%r8,%r8,4),%eax
shl    $0x4,%eax
lea    (%rax,%r8,2),%eax
lea    (%rax,%rax,4),%eax
and    $0x7f8000,%eax
shr    $0x7,%eax
add    %edi,%eax
mov    %eax,(%rcx)
add    $0xffffffffffffffff,%rdx
add    $0x6,%rsi
add    $0x4,%rcx
test   %rdx,%rdx
jg     384ef <Luv32fromLuv48+0x3f>
leaveq 
retq   
movswq 0x4(%rsi),%rax
cvtsi2sd %eax,%xmm1
mulsd  %xmm0,%xmm1
cvttsd2si %xmm1,%ecx
shl    $0x10,%r12d
movzbl %r14b,%eax
shl    $0x8,%eax
add    %r12d,%eax
movzbl %cl,%ecx
add    %ecx,%eax
mov    %eax,(%rbx)
add    $0xffffffffffffffff,%rdx
add    $0x6,%rsi
add    $0x4,%rbx
test   %rdx,%rdx
jg     38590 <Luv32fromLuv48+0xe0>
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
movswq (%rsi),%r12
movslq 0x8(%r13),%rax
test   %eax,%eax
je     385ec <Luv32fromLuv48+0x13c>
movswq 0x2(%rsi),%r14
mov    %rdx,-0x38(%rbp)
mov    %rsi,%r15
callq  8d10 <rand@plt>
cvtsi2sd %eax,%xmm1
movsd  0x38c97(%rip),%xmm0        # 71250 <module.60+0x187>
mulsd  %xmm0,%xmm1
cvtsi2sd %r14d,%xmm2
mov    %r15,%rsi
movsd  0x38d33(%rip),%xmm0        # 71300 <module.60+0x237>
mulsd  %xmm0,%xmm2
addsd  %xmm2,%xmm1
movsd  0x38b73(%rip),%xmm2        # 71150 <module.60+0x87>
subsd  %xmm2,%xmm1
cvttsd2si %xmm1,%r14d
mov    -0x38(%rbp),%rdx
jmp    385fe <Luv32fromLuv48+0x14e>
movswq 0x2(%rsi),%rax
cvtsi2sd %eax,%xmm1
mulsd  %xmm0,%xmm1
cvttsd2si %xmm1,%r14d
movslq 0x8(%r13),%rax
test   %eax,%eax
je     38543 <Luv32fromLuv48+0x93>
movswq 0x4(%rsi),%r13
mov    %rsi,-0x38(%rbp)
mov    %rdx,%r15
callq  8d10 <rand@plt>
cvtsi2sd %eax,%xmm1
movsd  0x38c29(%rip),%xmm0        # 71250 <module.60+0x187>
mulsd  %xmm0,%xmm1
cvtsi2sd %r13d,%xmm2
mov    %r15,%rdx
movsd  0x38cc5(%rip),%xmm0        # 71300 <module.60+0x237>
mulsd  %xmm0,%xmm2
addsd  %xmm2,%xmm1
movsd  0x38b05(%rip),%xmm2        # 71150 <module.60+0x87>
subsd  %xmm2,%xmm1
cvttsd2si %xmm1,%ecx
mov    -0x30(%rbp),%r13
mov    -0x38(%rbp),%rsi
jmpq   38554 <Luv32fromLuv48+0xa4>

0000000000038660 <_logLuvNop>:
push   %rbp
mov    %rsp,%rbp
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)

0000000000038670 <LogL16GuessDataFmt>:
push   %rbp
mov    %rsp,%rbp
mov    $0x1,%esi
mov    $0xffffffffffffffff,%rax
movzwl 0x3c(%rdi),%ecx
shl    $0x6,%ecx
movzwl 0x4a(%rdi),%edx
shl    $0x3,%edx
or     %edx,%ecx
movzwl 0x3e(%rdi),%edx
or     %ecx,%edx
cmp    $0x409,%edx
jle    386b3 <LogL16GuessDataFmt+0x43>
cmp    $0x40b,%edx
jle    386cd <LogL16GuessDataFmt+0x5d>
cmp    $0x40c,%edx
jne    386da <LogL16GuessDataFmt+0x6a>
mov    %rsi,%rax
leaveq 
retq   
mov    $0x3,%ecx
cmp    $0x20b,%edx
jle    386e6 <LogL16GuessDataFmt+0x76>
cmp    $0x20c,%edx
jne    386f3 <LogL16GuessDataFmt+0x83>
mov    %rcx,%rax
leaveq 
retq   
cmp    $0x40a,%edx
jne    38700 <LogL16GuessDataFmt+0x90>
mov    %rsi,%rax
leaveq 
retq   
cmp    $0x80b,%edx
jne    38702 <LogL16GuessDataFmt+0x92>
xor    %eax,%eax
leaveq 
retq   
cmp    $0x209,%edx
jne    38704 <LogL16GuessDataFmt+0x94>
mov    %rcx,%rax
leaveq 
retq   
cmp    $0x409,%edx
jne    38706 <LogL16GuessDataFmt+0x96>
mov    %rsi,%rax
leaveq 
retq   
leaveq 
retq   
leaveq 
retq   
leaveq 
retq   
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

0000000000038710 <multiply_ms>:
push   %rbp
mov    %rsp,%rbp
xor    %ecx,%ecx
test   %rdi,%rdi
jne    38720 <multiply_ms+0x10>
mov    %rcx,%rax
leaveq 
retq   
movabs $0x7fffffffffffffff,%rax
cqto   
idiv   %rdi
cmp    %rsi,%rax
jge    38739 <multiply_ms+0x29>
mov    %rcx,%rax
leaveq 
retq   
imul   %rsi,%rdi
mov    %rdi,%rax
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   (%rax)

0000000000038750 <LogL16InitState>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
lea    0x38527(%rip),%rsi        # 70c86 <module.9+0x4e>
lea    0x386f6(%rip),%rcx        # 70e5c <module.38+0x10>
mov    0x350(%rdi),%rax
test   %rax,%rax
jne    38783 <LogL16InitState+0x33>
lea    0x38595(%rip),%rdi        # 70d0e <module.15+0x21>
mov    $0x506,%edx
callq  8490 <__assert_fail@plt>
movzwl 0x7a(%rdi),%edx
cmp    $0x804c,%dx
je     3879f <LogL16InitState+0x4f>
lea    0x386d7(%rip),%rdi        # 70e6c <module.38+0x20>
mov    $0x507,%edx
callq  8490 <__assert_fail@plt>
lea    0x386a6(%rip),%rsi        # 70e4c <module.38>
movzwl 0x82(%rdi),%r8d
cmp    $0x1,%r8w
jne    3880c <LogL16InitState+0xbc>
movslq 0x4(%rax),%rcx
cmp    $0xffffffff,%ecx
jne    387f1 <LogL16InitState+0xa1>
lea    0x38(%rdi),%rcx
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rdi,%r14
mov    %rcx,%rdi
mov    %rax,%r15
callq  38670 <LogL16GuessDataFmt>
mov    %eax,0x4(%r15)
mov    %r15,%rax
mov    %r14,%rdi
lea    0x38663(%rip),%rsi        # 70e4c <module.38>
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
movslq 0x4(%rax),%rcx
test   %ecx,%ecx
jle    3882c <LogL16InitState+0xdc>
cmp    $0x1,%ecx
je     38849 <LogL16InitState+0xf9>
cmp    $0x3,%ecx
jne    38830 <LogL16InitState+0xe0>
movl   $0x1,0xc(%rax)
jmp    38859 <LogL16InitState+0x109>
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
lea    0x38677(%rip),%rdx        # 70e93 <module.38+0x47>
lea    0x3869c(%rip),%rcx        # 70ebf <module.38+0x73>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
test   %ecx,%ecx
je     38852 <LogL16InitState+0x102>
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
lea    0x3868d(%rip),%rdx        # 70ecd <module.38+0x81>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
movl   $0x2,0xc(%rax)
jmp    38859 <LogL16InitState+0x109>
movl   $0x4,0xc(%rax)
mov    0x10(%rdi),%ecx
and    $0x400,%ecx
test   %ecx,%ecx
jne    38891 <LogL16InitState+0x141>
mov    0x84(%rdi),%edx
mov    0x5c(%rdi),%esi
cmp    %edx,%esi
ja     388e8 <LogL16InitState+0x198>
mov    0x58(%rdi),%ecx
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rdi,%r14
mov    %rcx,%rdi
mov    %rax,%r15
callq  38710 <multiply_ms>
mov    %rax,%rdi
jmp    388b0 <LogL16InitState+0x160>
mov    0x64(%rdi),%ecx
mov    0x68(%rdi),%esi
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rdi,%r14
mov    %rcx,%rdi
mov    %rax,%r15
callq  38710 <multiply_ms>
mov    %rax,%rdi
mov    %rdi,0x18(%r15)
mov    $0x2,%esi
callq  38710 <multiply_ms>
test   %rax,%rax
je     38909 <LogL16InitState+0x1b9>
mov    0x18(%r15),%rax
lea    (%rax,%rax,1),%rdi
callq  8440 <_TIFFmalloc@plt>
mov    %rax,0x10(%r15)
test   %rax,%rax
je     38909 <LogL16InitState+0x1b9>
mov    $0x1,%eax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
mov    0x58(%rdi),%ecx
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rdx,%rsi
mov    %rdi,%r14
mov    %rcx,%rdi
mov    %rax,%r15
callq  38710 <multiply_ms>
mov    %rax,%rdi
jmp    388b0 <LogL16InitState+0x160>
xor    %eax,%eax
mov    0x3b8(%r14),%rdi
lea    0x385e7(%rip),%rdx        # 70f00 <module.38+0xb4>
lea    0x3852c(%rip),%rsi        # 70e4c <module.38>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   0x0(%rax)

0000000000038940 <LogLuvGuessDataFmt>:
push   %rbp
mov    %rsp,%rbp
mov    $0xffffffffffffffff,%rax
mov    $0x2,%esi
movzwl 0x3e(%rdi),%ecx
movzwl 0x3c(%rdi),%edx
shl    $0x3,%edx
or     %edx,%ecx
lea    -0x41(%rcx),%edx
cmp    $0xc3,%edx
jbe    3897d <LogLuvGuessDataFmt+0x3d>
mov    %rax,%rcx
movzwl 0x4a(%rdi),%edx
cmp    $0x1,%dx
je     38992 <LogLuvGuessDataFmt+0x52>
cmp    $0x3,%dx
je     38999 <LogLuvGuessDataFmt+0x59>
leaveq 
retq   
lea    0x37a8c(%rip),%rcx        # 70410 <module.76+0xa1>
movslq (%rcx,%rdx,4),%rdx
add    %rdx,%rcx
jmpq   *%rcx
mov    %rax,%rcx
jmp    3896b <LogLuvGuessDataFmt+0x2b>
cmp    $0x2,%ecx
je     389b7 <LogLuvGuessDataFmt+0x77>
leaveq 
retq   
cmp    $0x2,%ecx
jne    389bc <LogLuvGuessDataFmt+0x7c>
leaveq 
retq   
xor    %ecx,%ecx
jmp    3896b <LogLuvGuessDataFmt+0x2b>
mov    %rsi,%rcx
jmp    3896b <LogLuvGuessDataFmt+0x2b>
mov    $0x1,%ecx
jmp    3896b <LogLuvGuessDataFmt+0x2b>
mov    $0x3,%ecx
jmp    3896b <LogLuvGuessDataFmt+0x2b>
mov    %rsi,%rax
leaveq 
retq   
mov    %rcx,%rax
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   0x0(%rax)

00000000000389d0 <LogLuvInitState>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
lea    0x382a7(%rip),%rsi        # 70c86 <module.9+0x4e>
lea    0x38551(%rip),%rcx        # 70f37 <module.45+0x10>
mov    0x350(%rdi),%rdx
test   %rdx,%rdx
jne    38a03 <LogLuvInitState+0x33>
lea    0x38315(%rip),%rdi        # 70d0e <module.15+0x21>
mov    $0x56c,%edx
callq  8490 <__assert_fail@plt>
movzwl 0x7a(%rdi),%eax
cmp    $0x804d,%ax
je     38a1e <LogLuvInitState+0x4e>
lea    0x38533(%rip),%rdi        # 70f47 <module.45+0x20>
mov    $0x56d,%edx
callq  8490 <__assert_fail@plt>
lea    0x38502(%rip),%rsi        # 70f27 <module.45>
movzwl 0xaa(%rdi),%eax
cmp    $0x1,%ax
jne    38a49 <LogLuvInitState+0x79>
movslq 0x4(%rdx),%rax
cmp    $0xffffffff,%eax
je     38a62 <LogLuvInitState+0x92>
mov    %r14,%rcx
mov    %rdi,%r14
mov    %r15,%r8
mov    %rdx,%r15
jmp    38a8f <LogLuvInitState+0xbf>
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
lea    0x38517(%rip),%rdx        # 70f70 <module.45+0x49>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
lea    0x38(%rdi),%rax
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rdi,%r14
mov    %rax,%rdi
mov    %rdx,%r15
callq  38940 <LogLuvGuessDataFmt>
mov    %eax,0x4(%r15)
lea    0x384a0(%rip),%rsi        # 70f27 <module.45>
mov    -0x10(%rbp),%r8
mov    -0x8(%rbp),%rcx
movslq 0x4(%r15),%rax
cmp    $0x1,%eax
jle    38ac1 <LogLuvInitState+0xf1>
cmp    $0x2,%eax
je     38ad4 <LogLuvInitState+0x104>
cmp    $0x3,%eax
je     38ade <LogLuvInitState+0x10e>
xor    %eax,%eax
mov    0x3b8(%r14),%rdi
mov    %rcx,%r14
mov    %r8,%r15
lea    0x384ed(%rip),%rdx        # 70fa5 <module.45+0x7e>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
test   %eax,%eax
je     38ae8 <LogLuvInitState+0x118>
cmp    $0x1,%eax
jne    38aa2 <LogLuvInitState+0xd2>
movl   $0x6,0xc(%r15)
jmp    38af0 <LogLuvInitState+0x120>
movl   $0x4,0xc(%r15)
jmp    38af0 <LogLuvInitState+0x120>
movl   $0x3,0xc(%r15)
jmp    38af0 <LogLuvInitState+0x120>
movl   $0xc,0xc(%r15)
mov    0x10(%r14),%eax
and    $0x400,%eax
test   %eax,%eax
jne    38b22 <LogLuvInitState+0x152>
mov    0x84(%r14),%eax
mov    0x5c(%r14),%esi
cmp    %eax,%esi
ja     38b72 <LogLuvInitState+0x1a2>
mov    0x58(%r14),%edi
mov    %rcx,-0x8(%rbp)
mov    %r8,-0x10(%rbp)
callq  38710 <multiply_ms>
mov    %rax,%rdi
jmp    38b3a <LogLuvInitState+0x16a>
mov    0x64(%r14),%edi
mov    0x68(%r14),%esi
mov    %rcx,-0x8(%rbp)
mov    %r8,-0x10(%rbp)
callq  38710 <multiply_ms>
mov    %rax,%rdi
mov    %rdi,0x18(%r15)
mov    $0x4,%esi
callq  38710 <multiply_ms>
test   %rax,%rax
je     38b8b <LogLuvInitState+0x1bb>
mov    0x18(%r15),%rdi
shl    $0x2,%rdi
callq  8440 <_TIFFmalloc@plt>
mov    %rax,0x10(%r15)
test   %rax,%rax
je     38b8b <LogLuvInitState+0x1bb>
mov    $0x1,%eax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
mov    0x58(%r14),%edi
mov    %rcx,-0x8(%rbp)
mov    %r8,-0x10(%rbp)
mov    %rax,%rsi
callq  38710 <multiply_ms>
mov    %rax,%rdi
jmp    38b3a <LogLuvInitState+0x16a>
xor    %eax,%eax
mov    0x3b8(%r14),%rdi
lea    0x38365(%rip),%rdx        # 70f00 <module.38+0xb4>
lea    0x38385(%rip),%rsi        # 70f27 <module.45>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

0000000000038bc0 <LogLuvFixupTags>:
push   %rbp
mov    %rsp,%rbp
mov    $0x1,%eax
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

0000000000038bd0 <LogLuvSetupDecode>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    0x350(%rdi),%rdx
mov    0x41362(%rip),%rax        # 79f48 <_TIFFNoPostDecode@@Base+0x2f598>
mov    %rax,0x3e8(%rdi)
movzwl 0x7a(%rdi),%ecx
cmp    $0x804c,%cx
je     38c26 <LogLuvSetupDecode+0x56>
cmp    $0x804d,%cx
je     38c41 <LogLuvSetupDecode+0x71>
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
lea    0x383cb(%rip),%rsi        # 70fda <module.50>
lea    0x383d6(%rip),%rdx        # 70fec <module.50+0x12>
lea    0x38416(%rip),%r8        # 71033 <module.50+0x59>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
mov    %rdi,%rax
mov    %rdx,-0x8(%rbp)
mov    %rdi,-0x10(%rbp)
mov    %rax,%rdi
callq  38750 <LogL16InitState>
test   %eax,%eax
jne    38c63 <LogLuvSetupDecode+0x93>
xor    %eax,%eax
leaveq 
retq   
mov    %rdi,%rax
mov    %r15,-0x10(%rbp)
mov    %rdx,-0x8(%rbp)
mov    %rdi,%r15
mov    %rax,%rdi
callq  389d0 <LogLuvInitState>
test   %eax,%eax
jne    38c8d <LogLuvSetupDecode+0xbd>
mov    -0x10(%rbp),%r15
xor    %eax,%eax
leaveq 
retq   
lea    -0x24ba(%rip),%rcx        # 367b0 <LogL16Decode>
mov    -0x10(%rbp),%rax
mov    %rcx,0x2f8(%rax)
mov    -0x8(%rbp),%rcx
movslq 0x4(%rcx),%rax
test   %eax,%eax
je     38ccb <LogLuvSetupDecode+0xfb>
cmp    $0x3,%eax
je     38cdd <LogLuvSetupDecode+0x10d>
mov    $0x1,%eax
leaveq 
retq   
movzwl 0x78(%r15),%eax
cmp    $0x8775,%ax
je     38cef <LogLuvSetupDecode+0x11f>
lea    -0x213f(%rip),%rax        # 36b60 <LogLuvDecode32>
mov    %rax,0x2f8(%r15)
mov    -0x8(%rbp),%rcx
movslq 0x4(%rcx),%rax
test   %eax,%eax
jle    38d1e <LogLuvSetupDecode+0x14e>
cmp    $0x1,%eax
je     38d2d <LogLuvSetupDecode+0x15d>
cmp    $0x3,%eax
je     38d43 <LogLuvSetupDecode+0x173>
mov    $0x1,%eax
mov    -0x10(%rbp),%r15
leaveq 
retq   
lea    -0x11f2(%rip),%rax        # 37ae0 <L16toY>
mov    %rax,0x20(%rcx)
mov    $0x1,%eax
leaveq 
retq   
lea    -0x11a4(%rip),%rax        # 37b40 <L16toGry>
mov    %rax,0x20(%rcx)
mov    $0x1,%eax
leaveq 
retq   
lea    -0x22f6(%rip),%rax        # 36a00 <LogLuvDecode24>
mov    %rax,0x2f8(%r15)
mov    -0x8(%rbp),%rcx
movslq 0x4(%rcx),%rax
test   %eax,%eax
jle    38d59 <LogLuvSetupDecode+0x189>
cmp    $0x1,%eax
je     38d68 <LogLuvSetupDecode+0x198>
cmp    $0x3,%eax
je     38d7e <LogLuvSetupDecode+0x1ae>
mov    $0x1,%eax
mov    -0x10(%rbp),%r15
leaveq 
retq   
test   %eax,%eax
je     38d94 <LogLuvSetupDecode+0x1c4>
mov    $0x1,%eax
mov    -0x10(%rbp),%r15
leaveq 
retq   
lea    -0x9c4(%rip),%rax        # 38370 <Luv32toLuv48>
mov    %rax,0x20(%rcx)
mov    $0x1,%eax
mov    -0x10(%rbp),%r15
leaveq 
retq   
lea    -0x96a(%rip),%rax        # 383e0 <Luv32toRGB>
mov    %rax,0x20(%rcx)
mov    $0x1,%eax
mov    -0x10(%rbp),%r15
leaveq 
retq   
test   %eax,%eax
je     38daa <LogLuvSetupDecode+0x1da>
mov    $0x1,%eax
mov    -0x10(%rbp),%r15
leaveq 
retq   
lea    -0xd4f(%rip),%rax        # 38020 <Luv24toLuv48>
mov    %rax,0x20(%rcx)
mov    $0x1,%eax
mov    -0x10(%rbp),%r15
leaveq 
retq   
lea    -0xc95(%rip),%rax        # 380f0 <Luv24toRGB>
mov    %rax,0x20(%rcx)
mov    $0x1,%eax
mov    -0x10(%rbp),%r15
leaveq 
retq   
lea    -0xa7b(%rip),%rax        # 38320 <Luv32toXYZ>
mov    %rax,0x20(%rcx)
mov    $0x1,%eax
mov    -0x10(%rbp),%r15
leaveq 
retq   
lea    -0xde1(%rip),%rax        # 37fd0 <Luv24toXYZ>
mov    %rax,0x20(%rcx)
mov    $0x1,%eax
mov    -0x10(%rbp),%r15
leaveq 
retq   

0000000000038dc0 <LogLuvSetupEncode>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x10(%rbp)
mov    0x350(%rdi),%r15
lea    0x38277(%rip),%rsi        # 71051 <module.53>
movzwl 0x7a(%rdi),%ecx
cmp    $0x804c,%cx
je     38e0a <LogLuvSetupEncode+0x4a>
cmp    $0x804d,%cx
je     38e36 <LogLuvSetupEncode+0x76>
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
lea    0x381f0(%rip),%rdx        # 70fec <module.50+0x12>
lea    0x38230(%rip),%r8        # 71033 <module.50+0x59>
callq  8a00 <TIFFErrorExt@plt>
jmp    38e24 <LogLuvSetupEncode+0x64>
mov    %rdi,%rax
mov    %r14,-0x8(%rbp)
mov    %rdi,%r14
mov    %rax,%rdi
callq  38750 <LogL16InitState>
test   %eax,%eax
jne    38e52 <LogLuvSetupEncode+0x92>
mov    -0x8(%rbp),%r14
movl   $0x1,(%r15)
mov    $0x1,%eax
mov    -0x10(%rbp),%r15
leaveq 
retq   
mov    %rdi,%rax
mov    %r14,-0x8(%rbp)
mov    %rdi,%r14
mov    %rax,%rdi
callq  389d0 <LogLuvInitState>
test   %eax,%eax
jne    38e73 <LogLuvSetupEncode+0xb3>
mov    -0x8(%rbp),%r14
jmp    38e24 <LogLuvSetupEncode+0x64>
lea    -0x1ee9(%rip),%rax        # 36f70 <LogL16Encode>
mov    %rax,0x300(%r14)
movslq 0x4(%r15),%rax
test   %eax,%eax
je     38ea4 <LogLuvSetupEncode+0xe4>
cmp    $0x1,%eax
jne    38ebc <LogLuvSetupEncode+0xfc>
mov    -0x8(%rbp),%r14
jmp    38e24 <LogLuvSetupEncode+0x64>
movzwl 0x78(%r14),%eax
cmp    $0x8775,%ax
je     38ed7 <LogLuvSetupEncode+0x117>
lea    -0x1945(%rip),%rax        # 37540 <LogLuvEncode32>
mov    %rax,0x300(%r14)
movslq 0x4(%r15),%rax
test   %eax,%eax
jle    38eb8 <LogLuvSetupEncode+0xf8>
cmp    $0x1,%eax
je     38f00 <LogLuvSetupEncode+0x140>
cmp    $0x2,%eax
jne    38ebc <LogLuvSetupEncode+0xfc>
mov    -0x8(%rbp),%r14
jmp    38e24 <LogLuvSetupEncode+0x64>
lea    -0x12cb(%rip),%rax        # 37be0 <L16fromY>
mov    %rax,0x20(%r15)
mov    -0x8(%rbp),%r14
jmpq   38e24 <LogLuvSetupEncode+0x64>
test   %eax,%eax
je     38f14 <LogLuvSetupEncode+0x154>
mov    0x3b8(%r14),%rdi
movzwl 0x7a(%r14),%eax
cmp    $0x804c,%ax
je     38f28 <LogLuvSetupEncode+0x168>
lea    0x381c9(%rip),%rcx        # 7109e <module.53+0x4d>
jmp    38f2f <LogLuvSetupEncode+0x16f>
lea    -0x1b8e(%rip),%rax        # 37350 <LogLuvEncode24>
mov    %rax,0x300(%r14)
movslq 0x4(%r15),%rax
test   %eax,%eax
jle    38f55 <LogLuvSetupEncode+0x195>
cmp    $0x1,%eax
je     38f71 <LogLuvSetupEncode+0x1b1>
cmp    $0x2,%eax
jne    38ebc <LogLuvSetupEncode+0xfc>
mov    -0x8(%rbp),%r14
jmpq   38e24 <LogLuvSetupEncode+0x64>
lea    -0xa57(%rip),%rax        # 384b0 <Luv32fromLuv48>
mov    %rax,0x20(%r15)
mov    -0x8(%rbp),%r14
jmpq   38e24 <LogLuvSetupEncode+0x64>
lea    -0xacb(%rip),%rax        # 38450 <Luv32fromXYZ>
mov    %rax,0x20(%r15)
mov    -0x8(%rbp),%r14
jmpq   38e24 <LogLuvSetupEncode+0x64>
lea    0x3816a(%rip),%rcx        # 71099 <module.53+0x48>
lea    0x3812d(%rip),%rdx        # 71063 <module.53+0x12>
xor    %r14d,%r14d
mov    %r14,%rax
lea    0x3810e(%rip),%rsi        # 71051 <module.53>
callq  8a00 <TIFFErrorExt@plt>
mov    %r14,%rax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
test   %eax,%eax
jne    38ebc <LogLuvSetupEncode+0xfc>
lea    -0xe04(%rip),%rax        # 38160 <Luv24fromXYZ>
mov    %rax,0x20(%r15)
mov    -0x8(%rbp),%r14
jmpq   38e24 <LogLuvSetupEncode+0x64>
lea    -0xdb8(%rip),%rax        # 381c0 <Luv24fromLuv48>
mov    %rax,0x20(%r15)
mov    -0x8(%rbp),%r14
jmpq   38e24 <LogLuvSetupEncode+0x64>
data16 nopw %cs:0x0(%rax,%rax,1)

0000000000038f90 <LogLuvClose>:
push   %rbp
mov    %rsp,%rbp
mov    0x350(%rdi),%rax
test   %rax,%rax
jne    38fbf <LogLuvClose+0x2f>
lea    0x38100(%rip),%rdi        # 710a7 <module.53+0x56>
lea    0x37cd8(%rip),%rsi        # 70c86 <module.9+0x4e>
mov    $0x628,%edx
lea    0x380f5(%rip),%rcx        # 710af <module.53+0x5e>
callq  8490 <__assert_fail@plt>
movslq (%rax),%rax
test   %eax,%eax
jne    38fc8 <LogLuvClose+0x38>
leaveq 
retq   
movzwl 0x7a(%rdi),%eax
cmp    $0x804c,%ax
je     38fd9 <LogLuvClose+0x49>
mov    $0x3,%eax
jmp    38fde <LogLuvClose+0x4e>
mov    $0x1,%eax
mov    %ax,0x82(%rdi)
movw   $0x10,0x74(%rdi)
movw   $0x2,0x76(%rdi)
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

0000000000039000 <LogLuvCleanup>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    0x350(%rdi),%rcx
test   %rcx,%rcx
jne    39033 <LogLuvCleanup+0x33>
lea    0x3808c(%rip),%rdi        # 710a7 <module.53+0x56>
lea    0x37c64(%rip),%rsi        # 70c86 <module.9+0x4e>
mov    $0x641,%edx
lea    0x3808d(%rip),%rcx        # 710bb <module.53+0x6a>
callq  8490 <__assert_fail@plt>
mov    0x28(%rcx),%rax
mov    %rax,0x410(%rdi)
mov    0x30(%rcx),%rax
mov    %rax,0x408(%rdi)
mov    0x10(%rcx),%rax
test   %rax,%rax
jne    3905d <LogLuvCleanup+0x5d>
mov    %r15,%rax
mov    %rdi,%r15
mov    %rcx,%rdi
jmp    3907e <LogLuvCleanup+0x7e>
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rcx,%r14
mov    %rdi,%r15
mov    %rax,%rdi
callq  8bb0 <_TIFFfree@plt>
mov    %r14,%rdi
mov    -0x10(%rbp),%rax
mov    -0x8(%rbp),%r14
mov    %rax,-0x10(%rbp)
callq  8bb0 <_TIFFfree@plt>
mov    %r15,%rdi
movq   $0x0,0x350(%rdi)
callq  8740 <_TIFFSetDefaultCompressionState@plt>
mov    -0x10(%rbp),%r15
leaveq 
retq   

00000000000390a0 <LogLuvVSetField>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    0x350(%rdi),%r8
mov    $0x1,%eax
cmp    $0x10018,%esi
jne    390d5 <LogLuvVSetField+0x35>
movslq (%rdx),%rsi
cmp    $0x2f,%esi
jle    390f6 <LogLuvVSetField+0x56>
mov    0x8(%rdx),%rsi
lea    0x8(%rsi),%rcx
mov    %rcx,0x8(%rdx)
movslq (%rsi),%rcx
jmp    39103 <LogLuvVSetField+0x63>
cmp    $0x10019,%esi
jne    39130 <LogLuvVSetField+0x90>
movslq (%rdx),%rsi
cmp    $0x2f,%esi
jle    39136 <LogLuvVSetField+0x96>
mov    0x8(%rdx),%rsi
lea    0x8(%rsi),%rcx
mov    %rcx,0x8(%rdx)
movslq (%rsi),%rcx
jmp    39143 <LogLuvVSetField+0xa3>
mov    0x10(%rdx),%rcx
movslq (%rcx,%rsi,1),%rcx
add    $0x8,%esi
mov    %esi,(%rdx)
mov    %ecx,0x4(%r8)
mov    $0x20,%edx
cmp    $0x1,%ecx
jle    39151 <LogLuvVSetField+0xb1>
cmp    $0x2,%ecx
je     391a9 <LogLuvVSetField+0x109>
cmp    $0x3,%ecx
jne    391de <LogLuvVSetField+0x13e>
mov    %r14,%r8
mov    %rdi,%r14
mov    $0x8,%edx
jmp    39164 <LogLuvVSetField+0xc4>
callq  *0x30(%r8)
leaveq 
retq   
mov    0x10(%rdx),%rcx
movslq (%rcx,%rsi,1),%rcx
add    $0x8,%esi
mov    %esi,(%rdx)
mov    %ecx,0x8(%r8)
test   %ecx,%ecx
jne    391fd <LogLuvVSetField+0x15d>
leaveq 
retq   
test   %ecx,%ecx
jne    39204 <LogLuvVSetField+0x164>
mov    %r14,%r8
mov    %rdi,%r14
mov    $0x3,%eax
xor    %ecx,%ecx
mov    $0x102,%esi
mov    %r14,%rdi
mov    %r15,-0x10(%rbp)
mov    %r8,-0x8(%rbp)
mov    %rax,%r15
mov    %rcx,%rax
callq  8290 <TIFFSetField@plt>
mov    %r15,%rdx
mov    $0x153,%esi
mov    %r14,%rdi
xor    %eax,%eax
callq  8290 <TIFFSetField@plt>
mov    0x10(%r14),%eax
and    $0x400,%eax
test   %eax,%eax
jne    3921e <LogLuvVSetField+0x17e>
mov    $0xffffffffffffffff,%rax
jmp    39226 <LogLuvVSetField+0x186>
xor    %ecx,%ecx
mov    $0x115,%esi
mov    %rdi,%rdx
mov    %r15,-0x10(%rbp)
mov    %r14,%r15
mov    %rdi,%r14
mov    %rdx,%rdi
mov    %rax,%rdx
mov    %rcx,%rax
callq  8290 <TIFFSetField@plt>
mov    %r15,%r8
mov    $0x20,%edx
mov    $0x1,%eax
mov    -0x10(%rbp),%r15
jmp    39164 <LogLuvVSetField+0xc4>
xor    %eax,%eax
mov    0x3b8(%rdi),%r8
mov    (%rdi),%rsi
mov    %r8,%rdi
lea    0x37ee5(%rip),%rdx        # 710d9 <module.60+0x10>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
cmp    $0x1,%ecx
jne    3924b <LogLuvVSetField+0x1ab>
leaveq 
retq   
cmp    $0x1,%ecx
jne    391de <LogLuvVSetField+0x13e>
mov    %r14,%r8
mov    %rdi,%r14
mov    $0x10,%edx
mov    $0x2,%eax
jmpq   39164 <LogLuvVSetField+0xc4>
mov    %r14,%rdi
callq  8910 <TIFFTileSize@plt>
mov    %rax,0x2b0(%r14)
mov    %r14,%rdi
callq  8410 <TIFFScanlineSize@plt>
mov    %rax,0x358(%r14)
mov    -0x8(%rbp),%r14
mov    $0x1,%eax
mov    -0x10(%rbp),%r15
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
lea    0x37e6e(%rip),%rsi        # 710c9 <module.60>
lea    0x37ea5(%rip),%rdx        # 71107 <module.60+0x3e>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

0000000000039270 <LogLuvVGetField>:
push   %rbp
mov    %rsp,%rbp
mov    0x350(%rdi),%rcx
cmp    $0x10018,%esi
jne    3929c <LogLuvVGetField+0x2c>
movslq (%rdx),%rsi
cmp    $0x2f,%esi
jle    392a1 <LogLuvVGetField+0x31>
mov    0x8(%rdx),%rsi
lea    0x8(%rsi),%rax
mov    %rax,0x8(%rdx)
mov    (%rsi),%rax
jmp    392ae <LogLuvVGetField+0x3e>
callq  *0x28(%rcx)
leaveq 
retq   
mov    0x10(%rdx),%rax
mov    (%rax,%rsi,1),%rax
add    $0x8,%esi
mov    %esi,(%rdx)
movslq 0x4(%rcx),%rcx
mov    %ecx,(%rax)
mov    $0x1,%eax
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

00000000000392c0 <TIFFInitLZMA>:
push   %rbp
mov    %rsp,%rbp
sub    $0xa0,%rsp
mov    %r14,-0x10(%rbp)
mov    %r15,-0x18(%rbp)
mov    %rdi,%r14
mov    %rsi,%r15
lea    -0xa0(%rbp),%rdi
lea    0x38061(%rip),%rsi        # 71348 <module.12+0x10>
mov    $0x88,%edx
callq  8720 <memcpy@plt>
cmp    $0x886d,%r15d
je     39319 <TIFFInitLZMA+0x59>
lea    0x380cf(%rip),%rdi        # 713d0 <module.12+0x98>
lea    0x380e3(%rip),%rsi        # 713eb <module.12+0xb3>
mov    $0x1a0,%edx
lea    0x380e2(%rip),%rcx        # 713f6 <module.12+0xbe>
callq  8490 <__assert_fail@plt>
lea    0x38018(%rip),%r15        # 71338 <module.12>
lea    0x406e1(%rip),%rsi        # 79a08 <lzmaFields>
mov    $0x1,%edx
mov    %r14,%rdi
callq  8520 <_TIFFMergeFields@plt>
test   %eax,%eax
jne    3935c <TIFFInitLZMA+0x9c>
xor    %eax,%eax
mov    0x3b8(%r14),%rdi
mov    %r15,%rsi
lea    0x380b8(%rip),%rdx        # 71403 <module.12+0xcb>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
leaveq 
retq   
mov    $0x210,%edi
callq  8440 <_TIFFmalloc@plt>
mov    %rax,0x350(%r14)
test   %rax,%rax
je     3951f <TIFFInitLZMA+0x25f>
mov    %rax,%r15
lea    0x80(%r15),%rdi
mov    $0x88,%edx
lea    -0xa0(%rbp),%rsi
callq  8720 <memcpy@plt>
mov    0x410(%r14),%rax
mov    %rax,0x200(%r15)
lea    0xb5a(%rip),%rax        # 39f00 <LZMAVGetField>
mov    %rax,0x410(%r14)
mov    0x408(%r14),%rax
mov    %rax,0x208(%r15)
lea    0xa5e(%rip),%rax        # 39e20 <LZMAVSetField>
mov    %rax,0x408(%r14)
movl   $0x6,0x1f0(%r15)
movl   $0x0,0x1f4(%r15)
movl   $0x0,0x1f8(%r15)
lea    0x158(%r15),%rcx
movl   $0x0,(%rcx)
movzwl 0x74(%r14),%eax
and    $0x7,%eax
test   %eax,%eax
jle    39543 <TIFFInitLZMA+0x283>
mov    $0x1,%eax
mov    %eax,0x15c(%r15)
movq   $0x3,0x108(%r15)
mov    %rcx,0x110(%r15)
lea    0x180(%r15),%rax
mov    0x1f0(%r15),%esi
mov    %rax,%rdi
mov    %r13,-0x8(%rbp)
mov    %rax,%r13
callq  8cb0 <lzma_lzma_preset@plt>
movq   $0x21,0x118(%r15)
mov    %r13,0x120(%r15)
movq   $0xffffffffffffffff,0x128(%r15)
movq   $0x0,0x130(%r15)
lea    0x4ef(%rip),%rax        # 39960 <LZMAFixupTags>
mov    %rax,0x2c0(%r14)
lea    0x4f1(%rip),%rax        # 39970 <LZMASetupDecode>
mov    %rax,0x2c8(%r14)
lea    0x563(%rip),%rax        # 399f0 <LZMAPreDecode>
mov    %rax,0x2d0(%r14)
lea    0x205(%rip),%rax        # 396a0 <LZMADecode>
mov    %rax,0x2f8(%r14)
mov    %rax,0x308(%r14)
mov    %rax,0x318(%r14)
lea    0x649(%rip),%rax        # 39b00 <LZMASetupEncode>
mov    %rax,0x2d8(%r14)
lea    0x6bb(%rip),%rax        # 39b80 <LZMAPreEncode>
mov    %rax,0x2e8(%r14)
lea    0x78d(%rip),%rax        # 39c60 <LZMAPostEncode>
mov    %rax,0x2f0(%r14)
lea    0x6f(%rip),%rax        # 39550 <LZMAEncode>
mov    %rax,0x300(%r14)
mov    %rax,0x310(%r14)
mov    %rax,0x320(%r14)
lea    0x873(%rip),%rax        # 39d70 <LZMACleanup>
mov    %rax,0x338(%r14)
mov    %r14,%rdi
callq  8ac0 <TIFFPredictorInit@plt>
mov    -0x8(%rbp),%r13
mov    $0x1,%eax
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%r14),%rdi
mov    %r15,%rsi
lea    0x37efa(%rip),%rdx        # 7142c <module.12+0xf4>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
leaveq 
retq   
movzwl 0x74(%r14),%eax
shr    $0x3,%eax
jmpq   3940c <TIFFInitLZMA+0x14c>

0000000000039550 <LZMAEncode>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
lea    0x37e8c(%rip),%r9        # 713eb <module.12+0xb3>
lea    0x37efb(%rip),%rcx        # 71461 <module.22+0x16>
mov    0x350(%rdi),%r8
test   %r8,%r8
jne    39586 <LZMAEncode+0x36>
mov    %r9,%rsi
lea    0x37eda(%rip),%rdi        # 71456 <module.22+0xb>
mov    $0x115,%edx
callq  8490 <__assert_fail@plt>
movslq 0x1f8(%r8),%rax
cmp    $0x2,%eax
je     395a6 <LZMAEncode+0x56>
mov    %r9,%rsi
lea    0x37ed0(%rip),%rdi        # 7146c <module.22+0x21>
mov    $0x116,%edx
callq  8490 <__assert_fail@plt>
lea    0x80(%r8),%rcx
mov    %rsi,(%rcx)
mov    %rdx,0x88(%r8)
xor    %eax,%eax
mov    %r12,-0x8(%rbp)
mov    %r13,-0x10(%rbp)
mov    %r14,-0x18(%rbp)
mov    %r15,-0x20(%rbp)
mov    %rax,%r12
mov    %rdi,%r13
mov    %r8,%r14
mov    %rcx,%r15
jmp    39621 <LZMAEncode+0xd1>
mov    0xa0(%r14),%rax
test   %rax,%rax
jne    39615 <LZMAEncode+0xc5>
mov    0x370(%r13),%rax
mov    %rax,0x390(%r13)
mov    %r13,%rdi
callq  86e0 <TIFFFlushData1@plt>
mov    0x368(%r13),%rax
mov    %rax,0x98(%r14)
mov    0x370(%r13),%rax
mov    %rax,0xa0(%r14)
mov    0x88(%r14),%rax
test   %rax,%rax
je     3967a <LZMAEncode+0x12a>
mov    %r15,%rdi
mov    %r12,%rsi
callq  8130 <lzma_code@plt>
test   %eax,%eax
je     395d7 <LZMAEncode+0x87>
mov    %rax,%rdi
callq  398d0 <LZMAStrerror>
xor    %r8d,%r8d
mov    0x3b8(%r13),%rdi
lea    0x37e02(%rip),%rsi        # 7144b <module.22>
lea    0x37e3c(%rip),%rdx        # 7148c <module.22+0x41>
mov    0x27c(%r13),%ecx
mov    %r8,%r9
mov    %rax,%r8
mov    %r9,%rax
callq  8a00 <TIFFErrorExt@plt>
mov    %r12,%rax
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
leaveq 
retq   
mov    $0x1,%eax
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   0x0(%rax)

00000000000396a0 <LZMADecode>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
lea    0x37d3c(%rip),%r9        # 713eb <module.12+0xb3>
lea    0x37e04(%rip),%rcx        # 714ba <module.27+0xb>
mov    0x350(%rdi),%r8
test   %r8,%r8
jne    396d6 <LZMADecode+0x36>
mov    %r9,%rsi
lea    0x37d8a(%rip),%rdi        # 71456 <module.22+0xb>
mov    $0xab,%edx
callq  8490 <__assert_fail@plt>
movslq 0x1f8(%r8),%rax
cmp    $0x1,%eax
je     396f6 <LZMADecode+0x56>
mov    %r9,%rsi
lea    0x37dd9(%rip),%rdi        # 714c5 <module.27+0x16>
mov    $0xac,%edx
callq  8490 <__assert_fail@plt>
lea    0x80(%r8),%rcx
mov    0x388(%rdi),%rax
mov    %rax,(%rcx)
mov    0x390(%rdi),%rax
mov    %rax,0x88(%r8)
mov    %rsi,0x98(%r8)
mov    %rdx,0xa0(%r8)
xor    %eax,%eax
mov    %rdi,-0x30(%rbp)
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rax,%rbx
mov    %r8,%r12
mov    %rcx,%r13
jmp    39783 <LZMADecode+0xe3>
mov    %r13,%rdi
callq  83e0 <lzma_memusage@plt>
mov    %rax,%rsi
mov    %r13,%rdi
mov    %rbx,%rdx
callq  8800 <lzma_stream_decoder@plt>
test   %eax,%eax
jne    397fc <LZMADecode+0x15c>
mov    %r14,0x0(%r13)
mov    %r15,0x88(%r12)
mov    0xa0(%r12),%rax
test   %rax,%rax
je     3982f <LZMADecode+0x18f>
mov    0x80(%r12),%r14
mov    0x88(%r12),%r15
mov    %r13,%rdi
mov    %rbx,%rsi
callq  8130 <lzma_code@plt>
cmp    $0x1,%eax
jne    3983f <LZMADecode+0x19f>
lea    0x37d01(%rip),%rsi        # 714af <module.27>
mov    -0x30(%rbp),%r13
mov    0xa0(%r12),%r8
test   %r8,%r8
jne    3988d <LZMADecode+0x1ed>
mov    0x80(%r12),%rax
mov    %rax,0x388(%r13)
mov    0x88(%r12),%rax
mov    %rax,0x390(%r13)
mov    $0x1,%eax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
mov    %rax,%rdi
callq  398d0 <LZMAStrerror>
mov    %rax,%rcx
xor    %eax,%eax
mov    -0x30(%rbp),%r13
mov    0x3b8(%r13),%rdi
lea    0x37cca(%rip),%rdx        # 714e5 <module.27+0x36>
lea    0x37c8d(%rip),%r14        # 714af <module.27>
mov    %r14,%rsi
callq  8a00 <TIFFErrorExt@plt>
mov    %r14,%rsi
jmp    397b2 <LZMADecode+0x112>
lea    0x37c79(%rip),%rsi        # 714af <module.27>
mov    -0x30(%rbp),%r13
jmpq   397b2 <LZMADecode+0x112>
cmp    $0x6,%eax
je     39748 <LZMADecode+0xa8>
test   %eax,%eax
je     39772 <LZMADecode+0xd2>
mov    %rax,%rdi
callq  398d0 <LZMAStrerror>
mov    %rax,%r8
xor    %eax,%eax
mov    -0x30(%rbp),%r13
mov    0x3b8(%r13),%rdi
lea    0x37ca0(%rip),%rdx        # 7150f <module.27+0x60>
mov    0x27c(%r13),%ecx
lea    0x37c32(%rip),%r14        # 714af <module.27>
mov    %r14,%rsi
callq  8a00 <TIFFErrorExt@plt>
mov    %r14,%rsi
jmpq   397b2 <LZMADecode+0x112>
xor    %eax,%eax
mov    0x3b8(%r13),%rdi
lea    0x37c95(%rip),%rdx        # 71532 <module.27+0x83>
mov    0x27c(%r13),%ecx
callq  8a00 <TIFFErrorExt@plt>
mov    %rbx,%rax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   (%rax)

00000000000398d0 <LZMAStrerror>:
push   %rbp
mov    %rsp,%rbp
lea    0x37dfe(%rip),%rax        # 716d9 <module.27+0x22a>
cmp    $0xb,%edi
jbe    398e2 <LZMAStrerror+0x12>
leaveq 
retq   
lea    0x37a1f(%rip),%rdx        # 71308 <module.60+0x23f>
movslq (%rdx,%rdi,4),%rcx
add    %rdx,%rcx
jmpq   *%rcx
lea    0x37c6b(%rip),%rax        # 71564 <module.27+0xb5>
leaveq 
retq   
lea    0x37c83(%rip),%rax        # 71585 <module.27+0xd6>
leaveq 
retq   
lea    0x37c94(%rip),%rax        # 7159f <module.27+0xf0>
leaveq 
retq   
lea    0x37caf(%rip),%rax        # 715c3 <module.27+0x114>
leaveq 
retq   
lea    0x37ccb(%rip),%rax        # 715e8 <module.27+0x139>
leaveq 
retq   
lea    0x37ce8(%rip),%rax        # 7160e <module.27+0x15f>
leaveq 
retq   
lea    0x37cf6(%rip),%rax        # 71625 <module.27+0x176>
leaveq 
retq   
lea    0x37d0c(%rip),%rax        # 71644 <module.27+0x195>
leaveq 
retq   
lea    0x37d1e(%rip),%rax        # 7165f <module.27+0x1b0>
leaveq 
retq   
lea    0x37d34(%rip),%rax        # 7167e <module.27+0x1cf>
leaveq 
retq   
lea    0x37d3b(%rip),%rax        # 7168e <module.27+0x1df>
leaveq 
retq   
lea    0x37d6b(%rip),%rax        # 716c7 <module.27+0x218>
leaveq 
retq   
leaveq 
retq   

0000000000039960 <LZMAFixupTags>:
push   %rbp
mov    %rsp,%rbp
mov    $0x1,%eax
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

0000000000039970 <LZMASetupDecode>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    0x350(%rdi),%rax
test   %rax,%rax
jne    399a3 <LZMASetupDecode+0x33>
lea    0x37acb(%rip),%rdi        # 71456 <module.22+0xb>
lea    0x37a59(%rip),%rsi        # 713eb <module.12+0xb3>
mov    $0x72,%edx
lea    0x37d56(%rip),%rcx        # 716f4 <module.27+0x245>
callq  8490 <__assert_fail@plt>
movslq 0x1f8(%rax),%rcx
and    $0x2,%ecx
test   %ecx,%ecx
jle    399d5 <LZMASetupDecode+0x65>
lea    0x80(%rax),%rdi
mov    %r15,-0x8(%rbp)
mov    %rax,%r15
callq  8870 <lzma_end@plt>
mov    %r15,%rax
movl   $0x0,0x1f8(%rax)
mov    -0x8(%rbp),%r15
movslq 0x1f8(%rax),%rcx
or     $0x1,%ecx
mov    %ecx,0x1f8(%rax)
mov    $0x1,%eax
leaveq 
retq   
nopl   0x0(%rax)

00000000000399f0 <LZMAPreDecode>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    0x350(%rdi),%rax
test   %rax,%rax
jne    39a23 <LZMAPreDecode+0x33>
lea    0x37a4b(%rip),%rdi        # 71456 <module.22+0xb>
lea    0x379d9(%rip),%rsi        # 713eb <module.12+0xb3>
mov    $0x89,%edx
lea    0x37cf4(%rip),%rcx        # 71712 <module.47+0xe>
callq  8490 <__assert_fail@plt>
movslq 0x1f8(%rax),%rcx
and    $0x1,%ecx
test   %ecx,%ecx
jne    39a5a <LZMAPreDecode+0x6a>
mov    %rdi,%rcx
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rax,%r14
mov    %rdi,%r15
mov    %rcx,%rdi
callq  *0x2c8(%r15)
mov    %r14,%rax
mov    %r15,%rdi
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
mov    0x368(%rdi),%rcx
mov    %rcx,0x80(%rax)
mov    0x390(%rdi),%r8
mov    %r8,0x88(%rax)
lea    0x37c87(%rip),%rsi        # 71704 <module.47>
xor    %edx,%edx
mov    0x390(%rdi),%rcx
cmp    %r8,%rcx
jne    39aaf <LZMAPreDecode+0xbf>
add    $0x80,%rax
mov    $0xffffffffffffffff,%rsi
mov    %rdi,-0x10(%rbp)
mov    %rax,%rdi
callq  8800 <lzma_stream_decoder@plt>
test   %eax,%eax
jne    39ac8 <LZMAPreDecode+0xd8>
mov    $0x1,%eax
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
lea    0x37c61(%rip),%rdx        # 71720 <module.47+0x1c>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
mov    %rax,%rdi
callq  398d0 <LZMAStrerror>
xor    %r8d,%r8d
mov    -0x10(%rbp),%rcx
mov    0x3b8(%rcx),%rdi
mov    %rax,%rcx
mov    %r8,%rax
lea    0x379fa(%rip),%rdx        # 714e5 <module.27+0x36>
lea    0x37c12(%rip),%rsi        # 71704 <module.47>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

0000000000039b00 <LZMASetupEncode>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    0x350(%rdi),%rax
test   %rax,%rax
jne    39b33 <LZMASetupEncode+0x33>
lea    0x3793b(%rip),%rdi        # 71456 <module.22+0xb>
lea    0x378c9(%rip),%rsi        # 713eb <module.12+0xb3>
mov    $0xea,%edx
lea    0x37c1d(%rip),%rcx        # 7174b <module.47+0x47>
callq  8490 <__assert_fail@plt>
movslq 0x1f8(%rax),%rcx
and    $0x1,%ecx
test   %ecx,%ecx
jle    39b65 <LZMASetupEncode+0x65>
lea    0x80(%rax),%rdi
mov    %r15,-0x8(%rbp)
mov    %rax,%r15
callq  8870 <lzma_end@plt>
mov    %r15,%rax
movl   $0x0,0x1f8(%rax)
mov    -0x8(%rbp),%r15
movslq 0x1f8(%rax),%rcx
or     $0x2,%ecx
mov    %ecx,0x1f8(%rax)
mov    $0x1,%eax
leaveq 
retq   
nopl   0x0(%rax)

0000000000039b80 <LZMAPreEncode>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    0x350(%rdi),%rax
test   %rax,%rax
jne    39bb3 <LZMAPreEncode+0x33>
lea    0x378bb(%rip),%rdi        # 71456 <module.22+0xb>
lea    0x37849(%rip),%rsi        # 713eb <module.12+0xb3>
mov    $0xfe,%edx
lea    0x37bbb(%rip),%rcx        # 71769 <module.51+0xe>
callq  8490 <__assert_fail@plt>
movslq 0x1f8(%rax),%rcx
cmp    $0x2,%ecx
je     39be8 <LZMAPreEncode+0x68>
mov    %rdi,%rcx
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rax,%r14
mov    %rdi,%r15
mov    %rcx,%rdi
callq  *0x2d8(%r15)
mov    %r14,%rax
mov    %r15,%rdi
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
mov    0x368(%rdi),%rcx
mov    %rcx,0x98(%rax)
mov    0x370(%rdi),%rdx
mov    %rdx,0xa0(%rax)
mov    0x370(%rdi),%rcx
cmp    %rdx,%rcx
jne    39c34 <LZMAPreEncode+0xb4>
lea    0x80(%rax),%rdi
lea    0x108(%rax),%rsi
mov    0x1f4(%rax),%edx
callq  8c30 <lzma_stream_encoder@plt>
test   %eax,%eax
jne    39c54 <LZMAPreEncode+0xd4>
mov    $0x1,%eax
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
lea    0x37b17(%rip),%rsi        # 7175b <module.51>
lea    0x37ad5(%rip),%rdx        # 71720 <module.47+0x1c>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
xor    %eax,%eax
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

0000000000039c60 <LZMAPostEncode>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    0x350(%rdi),%r12
movq   $0x0,0x88(%r12)
lea    0x80(%r12),%r13
mov    %rdi,%rbx
mov    $0x3,%r14d
mov    %r13,%rdi
mov    %r14,%rsi
callq  8130 <lzma_code@plt>
test   %eax,%eax
je     39cb4 <LZMAPostEncode+0x54>
cmp    $0x1,%eax
jne    39d1e <LZMAPostEncode+0xbe>
mov    0x370(%rbx),%rcx
mov    0xa0(%r12),%rdx
cmp    %rdx,%rcx
je     39cfe <LZMAPostEncode+0x9e>
sub    %rdx,%rcx
mov    %rcx,0x390(%rbx)
mov    %rax,%r15
mov    %rbx,%rdi
callq  86e0 <TIFFFlushData1@plt>
mov    0x368(%rbx),%rax
mov    %rax,0x98(%r12)
mov    0x370(%rbx),%rax
mov    %rax,0xa0(%r12)
mov    %r15,%rax
cmp    $0x1,%eax
jne    39ca0 <LZMAPostEncode+0x40>
mov    $0x1,%eax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
mov    %rax,%rdi
callq  398d0 <LZMAStrerror>
mov    0x3b8(%rbx),%rdi
mov    %rax,%rcx
lea    0x37a40(%rip),%rsi        # 71777 <module.53>
lea    0x37a48(%rip),%rdx        # 71786 <module.53+0xf>
xor    %ebx,%ebx
mov    %rbx,%rax
callq  8a00 <TIFFErrorExt@plt>
mov    %rbx,%rax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   0x0(%rax)

0000000000039d70 <LZMACleanup>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    0x350(%rdi),%rcx
test   %rcx,%rcx
jne    39da3 <LZMACleanup+0x33>
lea    0x37a0d(%rip),%rdi        # 71798 <module.53+0x21>
lea    0x37659(%rip),%rsi        # 713eb <module.12+0xb3>
mov    $0x159,%edx
lea    0x37a02(%rip),%rcx        # 717a0 <module.53+0x29>
callq  8490 <__assert_fail@plt>
mov    %rdi,%rax
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rdi,%r14
mov    %rax,%rdi
mov    %rcx,%r15
callq  8180 <TIFFPredictorCleanup@plt>
mov    0x200(%r15),%rax
mov    %rax,0x410(%r14)
mov    0x208(%r15),%rax
mov    %rax,0x408(%r14)
movslq 0x1f8(%r15),%rax
test   %eax,%eax
je     39dfa <LZMACleanup+0x8a>
lea    0x80(%r15),%rdi
callq  8870 <lzma_end@plt>
movl   $0x0,0x1f8(%r15)
mov    %r15,%rdi
callq  8bb0 <_TIFFfree@plt>
mov    %r14,%rdi
movq   $0x0,0x350(%rdi)
callq  8740 <_TIFFSetDefaultCompressionState@plt>
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
nop

0000000000039e20 <LZMAVSetField>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    0x350(%rdi),%rax
cmp    $0x1001a,%esi
jne    39e50 <LZMAVSetField+0x30>
movslq (%rdx),%rcx
cmp    $0x2f,%ecx
jle    39e58 <LZMAVSetField+0x38>
mov    0x8(%rdx),%rsi
lea    0x8(%rsi),%rcx
mov    %rcx,0x8(%rdx)
movslq (%rsi),%rsi
jmp    39e65 <LZMAVSetField+0x45>
callq  *0x208(%rax)
leaveq 
retq   
mov    0x10(%rdx),%rsi
movslq (%rsi,%rcx,1),%rsi
add    $0x8,%ecx
mov    %ecx,(%rdx)
mov    %esi,0x1f0(%rax)
lea    0x180(%rax),%rcx
mov    %r15,-0x10(%rbp)
mov    %rdi,-0x8(%rbp)
mov    %rcx,%rdi
mov    %rax,%r15
callq  8cb0 <lzma_lzma_preset@plt>
mov    $0x1,%eax
movslq 0x1f8(%r15),%rcx
and    $0x2,%ecx
test   %ecx,%ecx
jg     39e9e <LZMAVSetField+0x7e>
mov    -0x10(%rbp),%r15
leaveq 
retq   
lea    0x80(%r15),%rdi
lea    0x108(%r15),%rsi
mov    0x1f4(%r15),%edx
mov    %rax,%r15
callq  8c30 <lzma_stream_encoder@plt>
test   %eax,%eax
jne    39ec8 <LZMAVSetField+0xa8>
mov    %r15,%rax
mov    -0x10(%rbp),%r15
leaveq 
retq   
mov    %rax,%rdi
callq  398d0 <LZMAStrerror>
xor    %r8d,%r8d
mov    -0x8(%rbp),%rcx
mov    0x3b8(%rcx),%rdi
mov    %rax,%rcx
mov    %r8,%rax
lea    0x378c1(%rip),%rsi        # 717ac <module.57>
lea    0x37894(%rip),%rdx        # 71786 <module.53+0xf>
callq  8a00 <TIFFErrorExt@plt>
mov    %r15,%rax
mov    -0x10(%rbp),%r15
leaveq 
retq   

0000000000039f00 <LZMAVGetField>:
push   %rbp
mov    %rsp,%rbp
mov    0x350(%rdi),%rax
cmp    $0x1001a,%esi
jne    39f2c <LZMAVGetField+0x2c>
movslq (%rdx),%rsi
cmp    $0x2f,%esi
jle    39f34 <LZMAVGetField+0x34>
mov    0x8(%rdx),%rsi
lea    0x8(%rsi),%rcx
mov    %rcx,0x8(%rdx)
mov    (%rsi),%rcx
jmp    39f41 <LZMAVGetField+0x41>
callq  *0x200(%rax)
leaveq 
retq   
mov    0x10(%rdx),%rcx
mov    (%rcx,%rsi,1),%rcx
add    $0x8,%esi
mov    %esi,(%rdx)
movslq 0x1f0(%rax),%rax
mov    %eax,(%rcx)
mov    $0x1,%eax
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)
nopl   0x0(%rax,%rax,1)

0000000000039f60 <TIFFInitLZW>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
cmp    $0x5,%esi
je     39f8c <TIFFInitLZW+0x2c>
lea    0x3786b(%rip),%rdi        # 717df <module.12+0xc>
lea    0x3787e(%rip),%rsi        # 717f9 <module.12+0x26>
mov    $0x47e,%edx
lea    0x3787c(%rip),%rcx        # 71803 <module.12+0x30>
callq  8490 <__assert_fail@plt>
mov    $0x120,%eax
mov    %r15,-0x8(%rbp)
mov    %rdi,%r15
mov    %rax,%rdi
callq  8440 <_TIFFmalloc@plt>
mov    %rax,0x350(%r15)
test   %rax,%rax
je     3a09d <TIFFInitLZW+0x13d>
movq   $0x0,0xe0(%rax)
mov    0x350(%r15),%rax
movq   $0x0,0xb8(%rax)
mov    0x350(%r15),%rax
movq   $0x0,0x118(%rax)
movslq 0xc(%r15),%rcx
mov    0x350(%r15),%rax
mov    %ecx,0x98(%rax)
lea    0x1139(%rip),%rax        # 3b130 <LZWFixupTags>
mov    %rax,0x2c0(%r15)
lea    0x113b(%rip),%rax        # 3b140 <LZWSetupDecode>
mov    %rax,0x2c8(%r15)
lea    0x12bd(%rip),%rax        # 3b2d0 <LZWPreDecode>
mov    %rax,0x2d0(%r15)
lea    0xaf(%rip),%rax        # 3a0d0 <LZWDecode>
mov    %rax,0x2f8(%r15)
mov    %rax,0x308(%r15)
mov    %rax,0x318(%r15)
lea    0x14c3(%rip),%rax        # 3b500 <LZWSetupEncode>
mov    %rax,0x2d8(%r15)
lea    0x1555(%rip),%rax        # 3b5a0 <LZWPreEncode>
mov    %rax,0x2e8(%r15)
lea    0x1d47(%rip),%rax        # 3bda0 <LZWPostEncode>
mov    %rax,0x2f0(%r15)
lea    0x1649(%rip),%rax        # 3b6b0 <LZWEncode>
mov    %rax,0x300(%r15)
mov    %rax,0x310(%r15)
mov    %rax,0x320(%r15)
lea    0x1f4d(%rip),%rax        # 3bfd0 <LZWCleanup>
mov    %rax,0x338(%r15)
mov    %r15,%rdi
callq  8ac0 <TIFFPredictorInit@plt>
mov    $0x1,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
mov    0x3b8(%r15),%rdi
lea    0x37728(%rip),%rsi        # 717d3 <module.12>
lea    0x3775d(%rip),%rdx        # 7180f <module.12+0x3c>
xor    %r15d,%r15d
mov    %r15,%rax
callq  8a00 <TIFFErrorExt@plt>
mov    %r15,%rax
mov    -0x8(%rbp),%r15
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)

000000000003a0d0 <LZWDecode>:
push   %rbp
mov    %rsp,%rbp
sub    $0x80,%rsp
mov    %rdi,-0x78(%rbp)
lea    0x37713(%rip),%r9        # 717f9 <module.12+0x26>
lea    0x37754(%rip),%rcx        # 71841 <module.17+0x15>
mov    0x350(%rdi),%rax
test   %rax,%rax
jne    3a10d <LZWDecode+0x3d>
mov    %r9,%rsi
lea    0x37733(%rip),%rdi        # 71836 <module.17+0xa>
mov    $0x178,%edx
callq  8490 <__assert_fail@plt>
mov    0xe0(%rax),%r8
test   %r8,%r8
jne    3a12d <LZWDecode+0x5d>
mov    %r9,%rsi
lea    0x37728(%rip),%rdi        # 7184b <module.17+0x1f>
mov    $0x179,%edx
callq  8490 <__assert_fail@plt>
mov    $0x1,%r11d
mov    %r11,-0x68(%rbp)
mov    0xa8(%rax),%r9
test   %r9,%r9
jne    3a258 <LZWDecode+0x188>
mov    %rdx,%r8
mov    %rsi,-0x60(%rbp)
mov    0x388(%rdi),%rcx
mov    0xc8(%rax),%r9
mov    0xd0(%rax),%r10
movzwl 0x80(%rax),%r11d
mov    %r15,-0x38(%rbp)
mov    0x88(%rax),%r15
mov    %r14,-0x30(%rbp)
mov    0x90(%rax),%r14
mov    %r13,-0x28(%rbp)
mov    0xa0(%rax),%r13
mov    %r12,-0x20(%rbp)
mov    0xd8(%rax),%rdx
mov    %rbx,-0x18(%rbp)
mov    %rdx,-0x48(%rbp)
mov    0x390(%rdi),%rdx
shl    $0x3,%rdx
mov    %rdx,0xb0(%rax)
xor    %edx,%edx
mov    %rdx,-0x70(%rbp)
mov    %rcx,%rbx
mov    %rax,%r12
mov    %r13,%rax
mov    %rdi,%r13
lea    0x37662(%rip),%rsi        # 7182c <module.17>
lea    0x37692(%rip),%rdx        # 71863 <module.17+0x37>
xor    %edi,%edi
test   %r8,%r8
jg     3a283 <LZWDecode+0x1b3>
mov    -0x48(%rbp),%rcx
mov    0x388(%r13),%rdx
sub    %rbx,%rdx
add    0x390(%r13),%rdx
mov    %rdx,0x390(%r13)
mov    %rbx,0x388(%r13)
mov    %r11w,0x80(%r12)
mov    %r15,0x88(%r12)
mov    %r14,0x90(%r12)
mov    %rax,0xa0(%r12)
mov    %r9,0xc8(%r12)
mov    %r10,0xd0(%r12)
mov    %rcx,0xd8(%r12)
test   %r8,%r8
jg     3a2ba <LZWDecode+0x1ea>
mov    $0x1,%eax
mov    -0x18(%rbp),%rbx
mov    -0x20(%rbp),%r12
mov    -0x28(%rbp),%r13
mov    -0x30(%rbp),%r14
mov    -0x38(%rbp),%r15
leaveq 
retq   
mov    0xc0(%rax),%r8
movzwl 0x8(%r8),%r10d
mov    %r10,%rcx
sub    %r9,%rcx
cmp    %rcx,%rdx
jl     3a2f5 <LZWDecode+0x225>
add    %rcx,%rsi
mov    %r10,-0x70(%rbp)
mov    %rsi,-0x80(%rbp)
jmpq   3a30d <LZWDecode+0x23d>
mov    0xb0(%r12),%rcx
cmp    %r11,%rcx
jb     3a344 <LZWDecode+0x274>
lea    0x1(%rbx),%rcx
movzbl (%rbx),%edi
shl    $0x8,%r15
add    %rdi,%r15
lea    0x8(%r14),%rdi
cmp    %rdi,%r11
jg     3a3be <LZWDecode+0x2ee>
mov    %rcx,%rbx
mov    %rdi,%rcx
jmpq   3a3d0 <LZWDecode+0x300>
xor    %eax,%eax
mov    0x3b8(%r13),%rbx
lea    0x3766d(%rip),%rdx        # 71937 <module.17+0x10b>
mov    0x27c(%r13),%ecx
mov    %rdi,%r15
mov    %rbx,%rdi
callq  8a00 <TIFFErrorExt@plt>
mov    %r15,%rax
mov    -0x18(%rbp),%rbx
mov    -0x20(%rbp),%r12
mov    -0x28(%rbp),%r13
mov    -0x30(%rbp),%r14
mov    -0x38(%rbp),%r15
leaveq 
retq   
lea    (%rdx,%r9,1),%rdi
mov    %rdi,0xa8(%rax)
jmpq   3a3f9 <LZWDecode+0x329>
test   %r10,%r10
je     3a325 <LZWDecode+0x255>
mov    %r10,%r8
mov    (%r8),%r10
movsbq 0xa(%r8),%r8
add    $0xffffffffffffffff,%rsi
mov    %r8b,(%rsi)
add    $0xffffffffffffffff,%rcx
test   %rcx,%rcx
jne    3a305 <LZWDecode+0x235>
movq   $0x0,0xa8(%rax)
mov    -0x70(%rbp),%rcx
sub    %rcx,%r9
lea    (%rdx,%r9,1),%r8
mov    -0x80(%rbp),%rsi
jmpq   3a14a <LZWDecode+0x7a>
xor    %ecx,%ecx
mov    0x3b8(%r13),%rdi
mov    %r8,-0x50(%rbp)
mov    0x284(%r13),%r8d
mov    %r9,-0x58(%rbp)
mov    %r11,-0x80(%rbp)
mov    %rax,-0x40(%rbp)
mov    %rcx,%rax
mov    %r8,%rcx
mov    %r10,%r13
callq  85a0 <TIFFWarningExt@plt>
mov    %r13,%r10
mov    -0x40(%rbp),%rax
mov    -0x80(%rbp),%r11
mov    -0x78(%rbp),%r13
mov    -0x58(%rbp),%r9
lea    0x374a0(%rip),%rsi        # 7182c <module.17>
mov    -0x50(%rbp),%r8
mov    $0x101,%edi
lea    0x374c7(%rip),%rdx        # 71863 <module.17+0x37>
cmp    $0x101,%di
je     3a413 <LZWDecode+0x343>
cmp    $0x100,%di
jne    3a41e <LZWDecode+0x34e>
mov    %r8,-0x80(%rbp)
mov    %r9,-0x40(%rbp)
mov    $0x12fd0,%edx
xor    %esi,%esi
jmpq   3a509 <LZWDecode+0x439>
movzbl (%rcx),%ecx
shl    $0x8,%r15
add    %rcx,%r15
lea    0x10(%r14),%rcx
add    $0x2,%rbx
sub    %r11,%rcx
mov    %r15,%rdi
shr    %cl,%rdi
mov    %rcx,%r14
and    %ax,%di
mov    0xb0(%r12),%rcx
sub    %r11,%rcx
mov    %rcx,0xb0(%r12)
jmp    3a39c <LZWDecode+0x2cc>
test   %r8,%r8
je     3a405 <LZWDecode+0x335>
mov    (%r8),%r8
add    $0xffffffffffffffff,%rcx
cmp    %rcx,%rdx
jl     3a3f4 <LZWDecode+0x324>
test   %r8,%r8
jne    3a563 <LZWDecode+0x493>
mov    %r11,%rax
leaveq 
retq   
mov    -0x48(%rbp),%rcx
xor    %edi,%edi
jmpq   3a1e0 <LZWDecode+0x110>
mov    0xe0(%r12),%rcx
cmp    %r10,%rcx
ja     3a573 <LZWDecode+0x4a3>
lea    0x13ff0(%rcx),%rsi
cmp    %rsi,%r10
jae    3a56c <LZWDecode+0x49c>
mov    %r9,(%r10)
mov    0xe0(%r12),%rsi
cmp    %rsi,%r9
jb     3a5a7 <LZWDecode+0x4d7>
add    $0x13ff0,%rsi
cmp    %rsi,%r9
jae    3a5a7 <LZWDecode+0x4d7>
movzbl 0xb(%r9),%esi
mov    %sil,0xb(%r10)
movzwl 0x8(%r9),%r9d
add    $0x1,%r9d
mov    %r9w,0x8(%r10)
movzwl %di,%r9d
shl    $0x4,%r9
add    %rcx,%r9
cmp    %r10,%r9
jae    3a48f <LZWDecode+0x3bf>
movzbl 0xb(%r9),%esi
mov    %sil,0xa(%r10)
add    $0x10,%r10
mov    -0x48(%rbp),%rcx
cmp    %r10,%rcx
jae    3a4d2 <LZWDecode+0x402>
lea    0x1(%r11),%rcx
cmp    $0xc,%rcx
jle    3a4af <LZWDecode+0x3df>
mov    $0xc,%ecx
mov    $0x1,%eax
shl    %cl,%rax
mov    %rcx,%r11
add    $0xffffffffffffffff,%rax
mov    %rax,%rcx
shl    $0x4,%rcx
mov    0xe0(%r12),%rsi
lea    -0x10(%rsi,%rcx,1),%rcx
mov    %rcx,-0x48(%rbp)
cmp    $0xff,%di
ja     3a5e2 <LZWDecode+0x512>
mov    -0x60(%rbp),%rcx
mov    %dil,(%rcx)
add    $0x1,%rcx
mov    %rcx,-0x60(%rbp)
add    $0xffffffffffffffff,%r8
lea    0x37331(%rip),%rsi        # 7182c <module.17>
xor    %edi,%edi
jmpq   3a1d3 <LZWDecode+0x103>
mov    $0x12fd0,%edx
xor    %esi,%esi
mov    0xe0(%r12),%rdi
add    $0x1020,%rdi
mov    %rdi,-0x50(%rbp)
callq  88e0 <_TIFFmemset@plt>
mov    0xe0(%r12),%rax
mov    %rax,-0x48(%rbp)
mov    0xb0(%r12),%rax
cmp    $0x8,%rax
jbe    3a612 <LZWDecode+0x542>
lea    0x1(%rbx),%rcx
movzbl (%rbx),%eax
shl    $0x8,%r15
add    %rax,%r15
lea    0x8(%r14),%rax
cmp    $0x8,%rax
jle    3a6b4 <LZWDecode+0x5e4>
mov    %rcx,%rbx
jmpq   3a6c6 <LZWDecode+0x5f6>
lea    (%rdx,%rsi,1),%rcx
jmpq   3a700 <LZWDecode+0x630>
lea    0x372b9(%rip),%rsi        # 7182c <module.17>
xor    %eax,%eax
mov    0x3b8(%r13),%rdi
mov    0x27c(%r13),%ecx
lea    0x37338(%rip),%rdx        # 718c2 <module.17+0x96>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x18(%rbp),%rbx
mov    -0x20(%rbp),%r12
mov    -0x28(%rbp),%r13
mov    -0x30(%rbp),%r14
mov    -0x38(%rbp),%r15
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%r13),%rdi
mov    0x27c(%r13),%ecx
lea    0x3726e(%rip),%rsi        # 7182c <module.17>
lea    0x372fd(%rip),%rdx        # 718c2 <module.17+0x96>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x18(%rbp),%rbx
mov    -0x20(%rbp),%r12
mov    -0x28(%rbp),%r13
mov    -0x30(%rbp),%r14
mov    -0x38(%rbp),%r15
leaveq 
retq   
movzwl 0x8(%r9),%edi
test   %di,%di
je     3a71c <LZWDecode+0x64c>
cmp    %r8,%rdi
jg     3a757 <LZWDecode+0x687>
mov    -0x60(%rbp),%r13
lea    0x0(%r13,%rdi,1),%rcx
mov    %r8,-0x58(%rbp)
mov    %rcx,-0x60(%rbp)
mov    %r9,%rsi
jmpq   3a774 <LZWDecode+0x6a4>
xor    %eax,%eax
mov    0x3b8(%r13),%rdi
mov    0x284(%r13),%ecx
lea    0x37203(%rip),%rsi        # 7182c <module.17>
lea    0x37233(%rip),%r13        # 71863 <module.17+0x37>
mov    %r13,%rdx
callq  85a0 <TIFFWarningExt@plt>
mov    %r13,%rdx
mov    -0x78(%rbp),%r13
mov    $0x101,%eax
cmp    $0x100,%ax
je     3a502 <LZWDecode+0x432>
mov    -0x48(%rbp),%rcx
add    $0x1fe0,%rcx
mov    %rcx,-0x48(%rbp)
cmp    $0x101,%ax
je     3a7bd <LZWDecode+0x6ed>
cmp    $0x100,%ax
ja     3a7e2 <LZWDecode+0x712>
mov    -0x60(%rbp),%rcx
mov    %al,(%rcx)
movzwl %ax,%r9d
shl    $0x4,%r9
add    0xe0(%r12),%r9
lea    0x1(%rcx),%rax
mov    %rax,-0x60(%rbp)
mov    -0x80(%rbp),%rax
lea    -0x1(%rax),%r8
mov    -0x50(%rbp),%r10
lea    0x3718a(%rip),%rsi        # 7182c <module.17>
mov    $0x1ff,%eax
mov    $0x9,%r11d
xor    %edi,%edi
jmpq   3a1d3 <LZWDecode+0x103>
movzbl (%rcx),%eax
shl    $0x8,%r15
add    %rax,%r15
lea    0x10(%r14),%rax
add    $0x2,%rbx
lea    -0x9(%rax),%rcx
mov    %r15,%rax
shr    %cl,%rax
mov    %rcx,%r14
and    $0x1ff,%ax
mov    0xb0(%r12),%rcx
add    $0xfffffffffffffff7,%rcx
mov    %rcx,0xb0(%r12)
lea    0x37171(%rip),%rdx        # 71863 <module.17+0x37>
jmpq   3a644 <LZWDecode+0x574>
test   %r8,%r8
je     3a81a <LZWDecode+0x74a>
movsbq 0xa(%r8),%rax
add    $0xffffffffffffffff,%rcx
mov    %al,(%rcx)
mov    (%r8),%r8
add    $0xffffffffffffffff,%rdx
test   %rdx,%rdx
jne    3a6f7 <LZWDecode+0x627>
mov    %r11,%rax
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%r13),%rdi
lea    0x371b9(%rip),%rdx        # 718e5 <module.17+0xb9>
mov    0x27c(%r13),%ecx
lea    0x370f2(%rip),%rsi        # 7182c <module.17>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x18(%rbp),%rbx
mov    -0x20(%rbp),%r12
mov    -0x28(%rbp),%r13
mov    -0x30(%rbp),%r14
mov    -0x38(%rbp),%r15
leaveq 
retq   
mov    %r9,0xc0(%r12)
mov    -0x60(%rbp),%rsi
mov    %r9,%rdx
jmpq   3a828 <LZWDecode+0x758>
cmp    %rcx,%r13
jae    3a851 <LZWDecode+0x781>
movsbq 0xa(%rsi),%r8
add    $0xffffffffffffffff,%rcx
mov    (%rsi),%rsi
mov    %r8b,(%rcx)
test   %rsi,%rsi
jne    3a76b <LZWDecode+0x69b>
pushq  -0x70(%rbp)
popq   -0x80(%rbp)
mov    -0x80(%rbp),%rcx
test   %rcx,%rcx
jne    3a85c <LZWDecode+0x78c>
mov    -0x58(%rbp),%r8
cmp    %r8,%rdi
jg     3a8b7 <LZWDecode+0x7e7>
sub    %rdi,%r8
mov    -0x78(%rbp),%r13
lea    0x37076(%rip),%rsi        # 7182c <module.17>
xor    %edi,%edi
jmpq   3a1d3 <LZWDecode+0x103>
mov    -0x50(%rbp),%r10
mov    -0x40(%rbp),%r9
lea    0x37060(%rip),%rsi        # 7182c <module.17>
mov    -0x80(%rbp),%r8
mov    $0x1ff,%eax
mov    $0x9,%r11d
xor    %edi,%edi
jmpq   3a1e0 <LZWDecode+0x110>
xor    %eax,%eax
mov    0x3b8(%r13),%rdi
mov    0x0(%r13),%rsi
lea    0x3709e(%rip),%rdx        # 71894 <module.17+0x68>
mov    0x27c(%r13),%ecx
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x18(%rbp),%rbx
mov    -0x20(%rbp),%r12
mov    -0x28(%rbp),%r13
mov    -0x30(%rbp),%r14
mov    -0x38(%rbp),%r15
leaveq 
retq   
mov    %r11,%rax
leaveq 
retq   
movzwl 0x8(%rdx),%edi
cmp    %rdi,%r8
jge    3a836 <LZWDecode+0x766>
mov    (%rdx),%rdx
test   %rdx,%rdx
jne    3a81f <LZWDecode+0x74f>
pushq  -0x70(%rbp)
popq   -0x68(%rbp)
mov    -0x68(%rbp),%rdi
test   %rdi,%rdi
jne    3a8d6 <LZWDecode+0x806>
lea    0x36fe2(%rip),%rsi        # 7182c <module.17>
xor    %edi,%edi
jmpq   3a1e0 <LZWDecode+0x110>
pushq  -0x68(%rbp)
popq   -0x80(%rbp)
jmpq   3a78e <LZWDecode+0x6be>
mov    -0x78(%rbp),%r13
mov    %r13,%rdi
lea    0x36fc2(%rip),%rsi        # 7182c <module.17>
mov    %r15,-0x8(%rbp)
mov    %r14,-0x10(%rbp)
mov    %rax,-0x60(%rbp)
mov    %r12,-0x80(%rbp)
mov    %r9,%r12
mov    %r11,%r14
mov    %r10,%r15
callq  3b4d0 <codeLoop>
mov    %r12,%r9
mov    %r15,%r10
mov    %r14,%r11
mov    -0x80(%rbp),%r12
mov    -0x60(%rbp),%rax
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r15
lea    0x36f84(%rip),%rsi        # 7182c <module.17>
mov    -0x58(%rbp),%r8
mov    -0x48(%rbp),%rcx
xor    %edi,%edi
jmpq   3a1e0 <LZWDecode+0x110>
lea    0x3706e(%rip),%rdi        # 7192c <module.17+0x100>
mov    $0x223,%edx
lea    0x36f2f(%rip),%rsi        # 717f9 <module.12+0x26>
lea    0x36f70(%rip),%rcx        # 71841 <module.17+0x15>
callq  8490 <__assert_fail@plt>
mov    %r8,0xa8(%r12)
add    %r8,%rsi
jmp    3a8e8 <LZWDecode+0x818>
test   %rdx,%rdx
je     3a900 <LZWDecode+0x830>
movsbq 0xa(%rdx),%rdi
add    $0xffffffffffffffff,%rsi
mov    %dil,(%rsi)
mov    (%rdx),%rdx
add    $0xffffffffffffffff,%r8
test   %r8,%r8
jne    3a8e3 <LZWDecode+0x813>
test   %rdx,%rdx
jne    3a913 <LZWDecode+0x843>
lea    0x36f20(%rip),%rsi        # 7182c <module.17>
xor    %edi,%edi
jmpq   3a1e0 <LZWDecode+0x110>
mov    %r13,%rdi
lea    0x36f0f(%rip),%rsi        # 7182c <module.17>
mov    %r15,-0x8(%rbp)
mov    %r14,-0x10(%rbp)
mov    %rax,-0x68(%rbp)
mov    %r12,-0x78(%rbp)
mov    %r8,-0x80(%rbp)
mov    %r11,%r12
mov    %r10,%r14
mov    %r9,%r15
callq  3b4d0 <codeLoop>
mov    %r15,%r9
mov    %r14,%r10
mov    %r12,%r11
mov    -0x80(%rbp),%r8
mov    -0x78(%rbp),%r12
mov    -0x68(%rbp),%rax
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r15
lea    0x36ec9(%rip),%rsi        # 7182c <module.17>
mov    -0x48(%rbp),%rcx
xor    %edi,%edi
jmpq   3a1e0 <LZWDecode+0x110>
xchg   %ax,%ax

000000000003a970 <LZWDecodeCompat>:
push   %rbp
mov    %rsp,%rbp
sub    $0x70,%rsp
mov    %rdi,-0x68(%rbp)
lea    0x36e76(%rip),%r8        # 717f9 <module.12+0x26>
lea    0x36fef(%rip),%rcx        # 71979 <module.27+0x10>
mov    0x350(%rdi),%rax
test   %rax,%rax
jne    3a9aa <LZWDecodeCompat+0x3a>
mov    %r8,%rsi
lea    0x36e96(%rip),%rdi        # 71836 <module.17+0xa>
mov    $0x263,%edx
callq  8490 <__assert_fail@plt>
mov    $0x1,%r10d
mov    0xa8(%rax),%r9
test   %r9,%r9
jne    3aac1 <LZWDecodeCompat+0x151>
mov    %rdx,%r8
mov    %rsi,-0x60(%rbp)
mov    0x388(%rdi),%rsi
mov    0xc8(%rax),%r9
mov    0xd0(%rax),%r10
movzwl 0x80(%rax),%ecx
mov    %r15,-0x30(%rbp)
mov    0x88(%rax),%r15
mov    %r14,-0x28(%rbp)
mov    0x90(%rax),%r14
mov    %r13,-0x20(%rbp)
mov    0xa0(%rax),%r11
mov    %r12,-0x18(%rbp)
mov    0xd8(%rax),%rdx
mov    %rbx,-0x10(%rbp)
mov    %rdx,-0x48(%rbp)
mov    0x390(%rdi),%rdx
shl    $0x3,%rdx
mov    %rdx,0xb0(%rax)
mov    %rax,%rbx
mov    %rsi,%r12
mov    %rdi,%r13
lea    0x36f30(%rip),%rsi        # 71969 <module.27>
lea    0x36e23(%rip),%rdx        # 71863 <module.17+0x37>
test   %r8,%r8
jg     3ab1e <LZWDecodeCompat+0x1ae>
mov    -0x48(%rbp),%rdx
mov    $0x1,%eax
mov    0x388(%r13),%rdi
sub    %r12,%rdi
add    0x390(%r13),%rdi
mov    %rdi,0x390(%r13)
mov    %r12,0x388(%r13)
mov    %cx,0x80(%rbx)
mov    %r15,0x88(%rbx)
mov    %r14,0x90(%rbx)
mov    %r11,0xa0(%rbx)
mov    %r9,0xc8(%rbx)
mov    %r10,0xd0(%rbx)
mov    %rdx,0xd8(%rbx)
test   %r8,%r8
jg     3ab68 <LZWDecodeCompat+0x1f8>
mov    -0x10(%rbp),%rbx
mov    -0x18(%rbp),%r12
mov    -0x20(%rbp),%r13
mov    -0x28(%rbp),%r14
mov    -0x30(%rbp),%r15
leaveq 
retq   
mov    0xc0(%rax),%rcx
movzwl 0x8(%rcx),%r11d
mov    %r11,%r8
sub    %r9,%r8
cmp    %r8,%rdx
jl     3ab9c <LZWDecodeCompat+0x22c>
add    %r8,%rsi
mov    %r11,-0x48(%rbp)
mov    %rsi,-0x60(%rbp)
movsbq 0xa(%rcx),%r10
add    $0xffffffffffffffff,%rsi
mov    %r10b,(%rsi)
mov    (%rcx),%rcx
add    $0xffffffffffffffff,%r8
test   %r8,%r8
jne    3aae7 <LZWDecodeCompat+0x177>
movq   $0x0,0xa8(%rax)
mov    -0x48(%rbp),%rcx
sub    %rcx,%r9
lea    (%rdx,%r9,1),%r8
mov    -0x60(%rbp),%rsi
jmpq   3a9c3 <LZWDecodeCompat+0x53>
movslq %ecx,%rax
mov    0xb0(%rbx),%rdi
cmp    %rax,%rdi
jb     3abd2 <LZWDecodeCompat+0x262>
mov    %r14,%rsi
mov    %rcx,%r14
mov    %rsi,%rcx
movzbl (%r12),%edx
shl    %cl,%rdx
or     %rdx,%r15
lea    0x1(%r12),%rdx
lea    0x8(%rcx),%rdi
movslq %r14d,%rsi
cmp    %rsi,%rdi
jl     3ac3d <LZWDecodeCompat+0x2cd>
mov    %r14,%rcx
mov    %rdi,%r14
mov    %rdx,%r12
jmpq   3ac5a <LZWDecodeCompat+0x2ea>
xor    %eax,%eax
mov    0x3b8(%r13),%rdi
lea    0x36dbf(%rip),%rdx        # 71937 <module.17+0x10b>
mov    0x27c(%r13),%ecx
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x10(%rbp),%rbx
mov    -0x18(%rbp),%r12
mov    -0x20(%rbp),%r13
mov    -0x28(%rbp),%r14
mov    -0x30(%rbp),%r15
leaveq 
retq   
lea    (%rdx,%r9,1),%rdi
mov    %rdi,0xa8(%rax)
mov    (%rcx),%rcx
add    $0xffffffffffffffff,%r8
cmp    %r8,%rdx
jl     3aba7 <LZWDecodeCompat+0x237>
add    %rdx,%rsi
movsbq 0xa(%rcx),%rax
add    $0xffffffffffffffff,%rsi
mov    %al,(%rsi)
mov    (%rcx),%rcx
add    $0xffffffffffffffff,%rdx
test   %rdx,%rdx
jne    3abb6 <LZWDecodeCompat+0x246>
mov    %r10,%rax
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%r13),%rdi
mov    %r8,-0x38(%rbp)
mov    0x284(%r13),%r8d
mov    %r10,-0x58(%rbp)
mov    %r9,-0x50(%rbp)
mov    %r11,-0x40(%rbp)
mov    %rcx,%r13
mov    %r8,%rcx
callq  85a0 <TIFFWarningExt@plt>
mov    %r13,%rcx
mov    -0x40(%rbp),%r11
mov    -0x68(%rbp),%r13
mov    -0x50(%rbp),%r9
mov    -0x58(%rbp),%r10
mov    -0x38(%rbp),%r8
mov    $0x101,%edx
cmp    $0x101,%edx
je     3ac7c <LZWDecodeCompat+0x30c>
cmp    $0x100,%edx
jne    3ac91 <LZWDecodeCompat+0x321>
mov    %r8,-0x38(%rbp)
mov    %r9,-0x8(%rbp)
mov    $0x12fd0,%edx
xor    %esi,%esi
jmpq   3ad24 <LZWDecodeCompat+0x3b4>
movzbl (%rdx),%edx
xchg   %r14,%rdi
xchg   %rcx,%r14
shl    %cl,%rdx
or     %r15,%rdx
add    $0x2,%r12
add    $0x10,%r14
mov    %rdi,%rcx
mov    %rdx,%r15
mov    %r11,%rdx
and    %r15,%rdx
movzwl %dx,%edx
sar    %cl,%r15
sub    %rsi,%r14
mov    0xb0(%rbx),%rsi
sub    %rax,%rsi
mov    %rsi,0xb0(%rbx)
jmp    3ac19 <LZWDecodeCompat+0x2a9>
lea    0x36ce6(%rip),%rsi        # 71969 <module.27>
mov    -0x48(%rbp),%rdx
mov    $0x1,%eax
jmpq   3aa52 <LZWDecodeCompat+0xe2>
mov    0xe0(%rbx),%rdi
cmp    %r10,%rdi
ja     3ad83 <LZWDecodeCompat+0x413>
lea    0x13ff0(%rdi),%rax
cmp    %rax,%r10
jae    3ad83 <LZWDecodeCompat+0x413>
mov    %r9,(%r10)
mov    0xe0(%rbx),%rax
cmp    %rax,%r9
jb     3adbe <LZWDecodeCompat+0x44e>
add    $0x13ff0,%rax
cmp    %rax,%r9
jae    3adbe <LZWDecodeCompat+0x44e>
movzbl 0xb(%r9),%esi
mov    %sil,0xb(%r10)
movzwl 0x8(%r9),%eax
add    $0x1,%eax
mov    %ax,0x8(%r10)
movslq %edx,%rax
shl    $0x4,%rax
lea    (%rdi,%rax,1),%r9
cmp    %r10,%r9
jae    3acfe <LZWDecodeCompat+0x38e>
movzbl 0xb(%r9),%esi
mov    %sil,0xa(%r10)
add    $0x10,%r10
mov    -0x48(%rbp),%rsi
cmp    %r10,%rsi
jb     3adf9 <LZWDecodeCompat+0x489>
mov    $0x1,%eax
jmpq   3ae23 <LZWDecodeCompat+0x4b3>
mov    $0x12fd0,%edx
xor    %esi,%esi
mov    0xe0(%rbx),%rdi
add    $0x1020,%rdi
mov    %rdi,-0x58(%rbp)
callq  88e0 <_TIFFmemset@plt>
mov    0xe0(%rbx),%rax
mov    %rax,-0x50(%rbp)
mov    0xb0(%rbx),%rax
cmp    $0x8,%rax
jbe    3ae58 <LZWDecodeCompat+0x4e8>
mov    %r14,%rcx
movzbl (%r12),%eax
shl    %cl,%rax
mov    %rcx,%rdx
or     %rax,%r15
lea    0x1(%r12),%rax
lea    0x8(%rdx),%rcx
cmp    $0x8,%rcx
jle    3aef9 <LZWDecodeCompat+0x589>
mov    %rax,%r12
jmpq   3af0d <LZWDecodeCompat+0x59d>
xor    %eax,%eax
mov    0x3b8(%r13),%rdi
mov    0x27c(%r13),%ecx
lea    0x36bcf(%rip),%rsi        # 71969 <module.27>
lea    0x36b21(%rip),%rdx        # 718c2 <module.17+0x96>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x10(%rbp),%rbx
mov    -0x18(%rbp),%r12
mov    -0x20(%rbp),%r13
mov    -0x28(%rbp),%r14
mov    -0x30(%rbp),%r15
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%r13),%rdi
mov    0x27c(%r13),%ecx
lea    0x36b94(%rip),%rsi        # 71969 <module.27>
lea    0x36ae6(%rip),%rdx        # 718c2 <module.17+0x96>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x10(%rbp),%rbx
mov    -0x18(%rbp),%r12
mov    -0x20(%rbp),%r13
mov    -0x28(%rbp),%r14
mov    -0x30(%rbp),%r15
leaveq 
retq   
add    $0x1,%ecx
cmp    $0xc,%ecx
jle    3ae06 <LZWDecodeCompat+0x496>
mov    $0xc,%ecx
mov    $0x1,%eax
mov    %rax,%rsi
shl    %cl,%rsi
lea    -0x1(%rsi),%r11
mov    %r11,%rsi
shl    $0x4,%rsi
add    0xe0(%rbx),%rsi
mov    %rsi,-0x48(%rbp)
cmp    $0xff,%edx
jg     3af3d <LZWDecodeCompat+0x5cd>
mov    -0x60(%rbp),%rax
mov    %dl,(%rax)
add    $0x1,%rax
mov    %rax,-0x60(%rbp)
add    $0xffffffffffffffff,%r8
lea    0x36b1d(%rip),%rsi        # 71969 <module.27>
lea    0x36a10(%rip),%rdx        # 71863 <module.17+0x37>
jmpq   3aa40 <LZWDecodeCompat+0xd0>
xor    %eax,%eax
mov    0x3b8(%r13),%rdi
mov    0x284(%r13),%ecx
lea    0x36afa(%rip),%rsi        # 71969 <module.27>
lea    0x369ed(%rip),%r13        # 71863 <module.17+0x37>
mov    %r13,%rdx
callq  85a0 <TIFFWarningExt@plt>
mov    %r13,%rdx
mov    -0x68(%rbp),%r13
mov    $0x101,%eax
cmp    $0x100,%eax
je     3ad1d <LZWDecodeCompat+0x3ad>
mov    -0x50(%rbp),%rcx
lea    0x1ff0(%rcx),%rdi
mov    %rdi,-0x48(%rbp)
cmp    $0x101,%eax
je     3af9d <LZWDecodeCompat+0x62d>
cmp    $0x100,%eax
jg     3afc8 <LZWDecodeCompat+0x658>
mov    -0x60(%rbp),%rcx
mov    %al,(%rcx)
movslq %eax,%r9
shl    $0x4,%r9
add    0xe0(%rbx),%r9
lea    0x1(%rcx),%rax
mov    %rax,-0x60(%rbp)
mov    -0x38(%rbp),%rax
lea    -0x1(%rax),%r8
mov    -0x58(%rbp),%r10
lea    0x36a80(%rip),%rsi        # 71969 <module.27>
mov    $0x1ff,%r11d
mov    $0x9,%ecx
jmpq   3aa40 <LZWDecodeCompat+0xd0>
movzbl (%rax),%eax
shl    %cl,%rax
or     %r15,%rax
add    $0x2,%r12
lea    0x10(%rdx),%rcx
mov    %rax,%r15
mov    %r15,%rax
and    $0x1ff,%ax
movzwl %ax,%eax
sar    $0x9,%r15
mov    0xb0(%rbx),%rdx
add    $0xfffffffffffffff7,%rdx
mov    %rdx,0xb0(%rbx)
lea    -0x9(%rcx),%r14
lea    0x3692b(%rip),%rdx        # 71863 <module.17+0x37>
jmpq   3ae8a <LZWDecodeCompat+0x51a>
movzwl 0x8(%r9),%edi
test   %di,%di
je     3b000 <LZWDecodeCompat+0x690>
cmp    %r8,%rdi
jg     3b03b <LZWDecodeCompat+0x6cb>
cmp    %r8,%rdi
jg     3b08a <LZWDecodeCompat+0x71a>
mov    -0x60(%rbp),%rax
add    %rdi,%rax
mov    %r8,-0x40(%rbp)
mov    %rax,-0x60(%rbp)
mov    %r9,%rdx
movsbq 0xa(%rdx),%rsi
add    $0xffffffffffffffff,%rax
mov    %sil,(%rax)
mov    (%rdx),%rdx
test   %rdx,%rdx
jne    3af6f <LZWDecodeCompat+0x5ff>
mov    -0x40(%rbp),%r8
sub    %rdi,%r8
lea    0x369d8(%rip),%rsi        # 71969 <module.27>
lea    0x368cb(%rip),%rdx        # 71863 <module.17+0x37>
jmpq   3aa40 <LZWDecodeCompat+0xd0>
mov    %rdi,%rdx
mov    -0x58(%rbp),%r10
mov    -0x8(%rbp),%r9
mov    -0x38(%rbp),%r8
lea    0x369b6(%rip),%rsi        # 71969 <module.27>
mov    $0x1ff,%r11d
mov    $0x9,%ecx
mov    $0x1,%eax
jmpq   3aa52 <LZWDecodeCompat+0xe2>
xor    %eax,%eax
mov    0x3b8(%r13),%rdi
mov    0x0(%r13),%rsi
lea    0x368b8(%rip),%rdx        # 71894 <module.17+0x68>
mov    0x27c(%r13),%ecx
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x10(%rbp),%rbx
mov    -0x18(%rbp),%r12
mov    -0x20(%rbp),%r13
mov    -0x28(%rbp),%r14
mov    -0x30(%rbp),%r15
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%r13),%rdi
lea    0x368d5(%rip),%rdx        # 718e5 <module.17+0xb9>
mov    0x27c(%r13),%ecx
lea    0x3694b(%rip),%rsi        # 71969 <module.27>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x10(%rbp),%rbx
mov    -0x18(%rbp),%r12
mov    -0x20(%rbp),%r13
mov    -0x28(%rbp),%r14
mov    -0x30(%rbp),%r15
leaveq 
retq   
mov    %r9,0xc0(%rbx)
mov    -0x60(%rbp),%rsi
mov    %r9,%rdx
mov    (%rdx),%rdx
movzwl 0x8(%rdx),%edi
cmp    %rdi,%r8
jl     3b049 <LZWDecodeCompat+0x6d9>
mov    %r8,0xa8(%rbx)
add    %r8,%rsi
movsbq 0xa(%rdx),%rdi
add    $0xffffffffffffffff,%rsi
mov    %dil,(%rsi)
mov    (%rdx),%rdx
add    $0xffffffffffffffff,%r8
test   %r8,%r8
jne    3b05f <LZWDecodeCompat+0x6ef>
lea    0x368eb(%rip),%rsi        # 71969 <module.27>
mov    -0x48(%rbp),%rdx
xor    %r8d,%r8d
jmpq   3aa52 <LZWDecodeCompat+0xe2>
lea    0x368f8(%rip),%rdi        # 71989 <module.27+0x20>
mov    $0x2f6,%edx
lea    0x3675c(%rip),%rsi        # 717f9 <module.12+0x26>
lea    0x368d5(%rip),%rcx        # 71979 <module.27+0x10>
callq  8490 <__assert_fail@plt>
nopl   0x0(%rax)

000000000003b0b0 <cl_hash>:
push   %rbp
mov    %rsp,%rbp
mov    0x118(%rdi),%rax
add    $0x23280,%rax
mov    $0x2321,%ecx
jmp    3b0cb <cl_hash+0x1b>
mov    %rdx,%rcx
movq   $0xffffffffffffffff,-0x70(%rax)
movq   $0xffffffffffffffff,-0x60(%rax)
movq   $0xffffffffffffffff,-0x50(%rax)
movq   $0xffffffffffffffff,-0x40(%rax)
movq   $0xffffffffffffffff,-0x30(%rax)
movq   $0xffffffffffffffff,-0x20(%rax)
movq   $0xffffffffffffffff,-0x10(%rax)
movq   $0xffffffffffffffff,(%rax)
add    $0xffffffffffffff80,%rax
lea    -0x8(%rcx),%rdx
test   %rdx,%rdx
jg     3b0c8 <cl_hash+0x18>
jmp    3b128 <cl_hash+0x78>
movq   $0xffffffffffffffff,(%rax)
add    $0xffffffffffffffff,%rcx
add    $0xfffffffffffffff0,%rax
test   %rcx,%rcx
jg     3b119 <cl_hash+0x69>
leaveq 
retq   
nop

000000000003b130 <LZWFixupTags>:
push   %rbp
mov    %rsp,%rbp
mov    $0x1,%eax
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

000000000003b140 <LZWSetupDecode>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    0x350(%rdi),%rdx
test   %rdx,%rdx
je     3b17e <LZWSetupDecode+0x3e>
mov    %r15,%rcx
mov    %rdi,%r15
test   %rdx,%rdx
jne    3b1d0 <LZWSetupDecode+0x90>
lea    0x366d0(%rip),%rdi        # 71836 <module.17+0xa>
lea    0x3668c(%rip),%rsi        # 717f9 <module.12+0x26>
mov    $0xe5,%edx
lea    0x36834(%rip),%rcx        # 719ad <module.30+0xf>
callq  8490 <__assert_fail@plt>
mov    $0x120,%eax
mov    %r15,-0x10(%rbp)
mov    %rdi,%r15
mov    %rax,%rdi
callq  8440 <_TIFFmalloc@plt>
mov    %rax,0x350(%r15)
test   %rax,%rax
je     3b1e6 <LZWSetupDecode+0xa6>
movq   $0x0,0xe0(%rax)
mov    0x350(%r15),%rax
movq   $0x0,0xb8(%rax)
mov    %r15,%rdi
callq  8ac0 <TIFFPredictorInit@plt>
mov    0x350(%r15),%rdx
mov    -0x10(%rbp),%rcx
jmp    3b15a <LZWSetupDecode+0x1a>
mov    $0x1,%eax
mov    0xe0(%rdx),%rsi
test   %rsi,%rsi
je     3b20a <LZWSetupDecode+0xca>
mov    %rcx,%r15
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
lea    0x36619(%rip),%rdx        # 7180f <module.12+0x3c>
lea    0x367a1(%rip),%rsi        # 7199e <module.30>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x10(%rbp),%r15
leaveq 
retq   
mov    $0x13ff0,%edi
mov    %rcx,-0x10(%rbp)
mov    %r14,-0x8(%rbp)
mov    %rdx,%r14
callq  8440 <_TIFFmalloc@plt>
mov    %rax,0xe0(%r14)
test   %rax,%rax
je     3b232 <LZWSetupDecode+0xf2>
mov    $0xff,%ecx
jmp    3b25d <LZWSetupDecode+0x11d>
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
lea    0x3677a(%rip),%rdx        # 719bc <module.30+0x1e>
lea    0x36755(%rip),%rsi        # 7199e <module.30>
callq  8a00 <TIFFErrorExt@plt>
mov    -0x8(%rbp),%r14
xor    %eax,%eax
mov    -0x10(%rbp),%r15
leaveq 
retq   
add    $0xffffffff,%ecx
mov    0xe0(%r14),%rdx
movslq %ecx,%rax
shl    $0x4,%rax
mov    %cl,0xa(%rdx,%rax,1)
mov    0xe0(%r14),%rdx
mov    %cl,0xb(%rdx,%rax,1)
mov    0xe0(%r14),%rdx
movw   $0x1,0x8(%rdx,%rax,1)
mov    0xe0(%r14),%rdx
movq   $0x0,(%rdx,%rax,1)
test   %ecx,%ecx
jne    3b25a <LZWSetupDecode+0x11a>
mov    0xe0(%r14),%rdi
add    $0x1000,%rdi
mov    $0x20,%edx
xor    %esi,%esi
callq  88e0 <_TIFFmemset@plt>
mov    $0x1,%eax
mov    -0x8(%rbp),%r14
mov    -0x10(%rbp),%r15
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nop

000000000003b2d0 <LZWPreDecode>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    0x350(%rdi),%rcx
test   %rcx,%rcx
jne    3b303 <LZWPreDecode+0x33>
lea    0x3654b(%rip),%rdi        # 71836 <module.17+0xa>
lea    0x36507(%rip),%rsi        # 717f9 <module.12+0x26>
mov    $0x10b,%edx
lea    0x366e7(%rip),%rcx        # 719e5 <module.33+0xd>
callq  8490 <__assert_fail@plt>
xor    %esi,%esi
mov    0xe0(%rcx),%rax
test   %rax,%rax
je     3b3df <LZWPreDecode+0x10f>
mov    %r15,%rax
mov    %rcx,%r15
mov    %rax,%rcx
mov    0x390(%rdi),%rax
cmp    $0x1,%rax
jg     3b41b <LZWPreDecode+0x14b>
movw   $0x1fe,0x82(%r15)
lea    -0x1270(%rip),%rax        # 3a0d0 <LZWDecode>
mov    %rax,0xb8(%r15)
movw   $0x9,0x80(%r15)
movq   $0x0,0x90(%r15)
movq   $0x0,0x88(%r15)
movq   $0x0,0xa8(%r15)
movq   $0x1ff,0xa0(%r15)
movq   $0x0,0xb0(%r15)
mov    0xe0(%r15),%rdi
add    $0x1020,%rdi
mov    %rdi,0xd0(%r15)
mov    $0x12fd0,%edx
mov    %rcx,-0x10(%rbp)
callq  88e0 <_TIFFmemset@plt>
mov    0xe0(%r15),%rcx
lea    -0x10(%rcx),%rax
mov    %rax,0xc8(%r15)
mov    0xa0(%r15),%rax
shl    $0x4,%rax
lea    -0x10(%rcx,%rax,1),%rax
mov    %rax,0xd8(%r15)
mov    $0x1,%eax
mov    -0x10(%rbp),%r15
leaveq 
retq   
mov    %rdi,%rax
mov    %r15,-0x8(%rbp)
mov    %rcx,%r15
mov    %rdi,%rcx
mov    %rax,%rdi
mov    %rcx,%rax
mov    %rax,-0x10(%rbp)
callq  *0x2c8(%rax)
mov    0xe0(%r15),%rax
test   %rax,%rax
je     3b4ba <LZWPreDecode+0x1ea>
xor    %esi,%esi
mov    -0x10(%rbp),%rdi
mov    -0x8(%rbp),%rcx
jmpq   3b31e <LZWPreDecode+0x4e>
mov    0x368(%rdi),%rdx
movzbl (%rdx),%eax
test   %al,%al
jne    3b32f <LZWPreDecode+0x5f>
movzbl 0x1(%rdx),%eax
and    $0x1,%eax
test   %eax,%eax
jle    3b32f <LZWPreDecode+0x5f>
mov    0xb8(%r15),%rax
test   %rax,%rax
jne    3b4ab <LZWPreDecode+0x1db>
xor    %eax,%eax
mov    0x3b8(%rdi),%r8
lea    0x36580(%rip),%rsi        # 719d8 <module.33>
lea    0x36593(%rip),%rdx        # 719f2 <module.33+0x1a>
mov    %rcx,-0x10(%rbp)
mov    %r14,-0x8(%rbp)
mov    %rdi,%r14
mov    %r8,%rdi
callq  85a0 <TIFFWarningExt@plt>
mov    %r14,%rdi
lea    -0xb0c(%rip),%r14        # 3a970 <LZWDecodeCompat>
mov    %r14,0x2f8(%rdi)
mov    %r14,0x308(%rdi)
mov    %r14,0x318(%rdi)
mov    0x2c8(%rdi),%rax
callq  *%rax
mov    %r14,0xb8(%r15)
mov    -0x8(%rbp),%r14
xor    %esi,%esi
mov    -0x10(%rbp),%rcx
movw   $0x1ff,0x82(%r15)
jmpq   3b347 <LZWPreDecode+0x77>
xor    %eax,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   (%rax)

000000000003b4d0 <codeLoop>:
push   %rbp
mov    %rsp,%rbp
xor    %eax,%eax
mov    0x3b8(%rdi),%r8
lea    0x36530(%rip),%rdx        # 71a14 <module.33+0x3c>
mov    0x27c(%rdi),%ecx
mov    %r8,%rdi
callq  8a00 <TIFFErrorExt@plt>
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nop

000000000003b500 <LZWSetupEncode>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    0x350(%rdi),%rax
test   %rax,%rax
jne    3b533 <LZWSetupEncode+0x33>
lea    0x3631b(%rip),%rdi        # 71836 <module.17+0xa>
lea    0x362d7(%rip),%rsi        # 717f9 <module.12+0x26>
mov    $0x327,%edx
lea    0x36529(%rip),%rcx        # 71a57 <module.37+0xf>
callq  8490 <__assert_fail@plt>
mov    $0x23290,%ecx
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rdi,%r14
mov    %rcx,%rdi
mov    %rax,%r15
callq  8440 <_TIFFmalloc@plt>
mov    %rax,0x118(%r15)
test   %rax,%rax
je     3b569 <LZWSetupEncode+0x69>
mov    $0x1,%eax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
mov    0x3b8(%r14),%rdi
lea    0x364d1(%rip),%rsi        # 71a48 <module.37>
lea    0x364e8(%rip),%rdx        # 71a66 <module.37+0x1e>
xor    %r14d,%r14d
mov    %r14,%rax
callq  8a00 <TIFFErrorExt@plt>
mov    %r14,%rax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)

000000000003b5a0 <LZWPreEncode>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    0x350(%rdi),%rcx
test   %rcx,%rcx
jne    3b5d3 <LZWPreEncode+0x33>
lea    0x3627b(%rip),%rdi        # 71836 <module.17+0xa>
lea    0x36237(%rip),%rsi        # 717f9 <module.12+0x26>
mov    $0x33a,%edx
lea    0x364b4(%rip),%rcx        # 71a82 <module.37+0x3a>
callq  8490 <__assert_fail@plt>
mov    0x118(%rcx),%rax
test   %rax,%rax
je     3b5e7 <LZWPreEncode+0x47>
mov    %r15,%rax
mov    %rcx,%r15
jmp    3b60d <LZWPreEncode+0x6d>
mov    %rdi,%rax
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rdi,%r14
mov    %rax,%rdi
mov    %rcx,%r15
callq  *0x2d8(%r14)
mov    %r14,%rdi
mov    -0x10(%rbp),%rax
mov    -0x8(%rbp),%r14
movw   $0x9,0x80(%r15)
movw   $0x1ff,0x82(%r15)
movw   $0x102,0x84(%r15)
movq   $0x0,0x90(%r15)
movq   $0x0,0x88(%r15)
movq   $0x2710,0xf0(%r15)
movq   $0x0,0xf8(%r15)
movq   $0x0,0x100(%r15)
movq   $0x0,0x108(%r15)
mov    0x370(%rdi),%rdx
mov    0x368(%rdi),%rcx
lea    -0x5(%rdx,%rcx,1),%rcx
mov    %rcx,0x110(%r15)
mov    %r15,%rdi
mov    %rax,-0x10(%rbp)
callq  3b0b0 <cl_hash>
movl   $0xffff,0xe8(%r15)
mov    $0x1,%eax
mov    -0x10(%rbp),%r15
leaveq 
retq   
nopl   0x0(%rax)

000000000003b6b0 <LZWEncode>:
push   %rbp
mov    %rsp,%rbp
sub    $0xb0,%rsp
xor    %eax,%eax
mov    0x350(%rdi),%r10
mov    %r10,-0xa0(%rbp)
test   %r10,%r10
jne    3b6d2 <LZWEncode+0x22>
leaveq 
retq   
lea    0x36120(%rip),%r8        # 717f9 <module.12+0x26>
lea    0x363c7(%rip),%rcx        # 71aa7 <module.37+0x5f>
mov    0x118(%r10),%rax
test   %rax,%rax
jne    3b700 <LZWEncode+0x50>
mov    %r8,%rsi
lea    0x36399(%rip),%rdi        # 71a8f <module.37+0x47>
mov    $0x38b,%edx
callq  8490 <__assert_fail@plt>
mov    0x110(%r10),%rax
mov    %rax,-0x90(%rbp)
mov    0x388(%rdi),%rax
mov    0x100(%r10),%rcx
mov    0x108(%r10),%r11
mov    %r15,-0x28(%rbp)
mov    0xf0(%r10),%r15
mov    %r14,-0x20(%rbp)
mov    0x88(%r10),%r14
mov    %r13,-0x18(%rbp)
mov    0x90(%r10),%r13
mov    %r12,-0x10(%rbp)
movzwl 0x84(%r10),%r9d
mov    %rbx,-0x8(%rbp)
movzwl 0x82(%r10),%r8d
movzwl 0x80(%r10),%ebx
mov    %rdi,-0x88(%rbp)
movzwl 0xe8(%r10),%edi
cmp    $0xffff,%di
je     3b78a <LZWEncode+0xda>
mov    %r10,%r12
mov    %r15,%r10
mov    %rsi,%r15
mov    %rax,%rsi
mov    %r15,%rax
jmp    3b7c2 <LZWEncode+0x112>
test   %rdx,%rdx
jg     3b843 <LZWEncode+0x193>
mov    %r10,%r12
mov    %r15,%r10
mov    %rsi,%r15
mov    %rax,%rsi
mov    %r15,%rax
mov    $0xffff,%edi
jmp    3b7c2 <LZWEncode+0x112>
movzwl 0x8(%rax),%edi
mov    %rcx,%rax
mov    -0xa0(%rbp),%r12
mov    -0xa8(%rbp),%rdx
mov    -0x40(%rbp),%rcx
movzwl %di,%r15d
test   %rdx,%rdx
jg     3b886 <LZWEncode+0x1d6>
mov    %rcx,0x100(%r12)
mov    %r11,0x108(%r12)
mov    %r10,0xf0(%r12)
mov    %r15d,0xe8(%r12)
mov    %r14,0x88(%r12)
mov    %r13,0x90(%r12)
mov    %r9w,0x84(%r12)
mov    %r8w,0x82(%r12)
mov    %bx,0x80(%r12)
mov    -0x88(%rbp),%rax
mov    %rsi,0x388(%rax)
mov    $0x1,%eax
mov    -0x8(%rbp),%rbx
mov    -0x10(%rbp),%r12
mov    -0x18(%rbp),%r13
mov    -0x20(%rbp),%r14
mov    -0x28(%rbp),%r15
leaveq 
retq   
mov    %r10,%r12
mov    %r15,%r10
mov    %rcx,%r15
mov    %rbx,%rcx
shl    %cl,%r14
mov    %rcx,%rbx
or     $0x100,%r14
lea    -0x8(%rbx,%r13,1),%rcx
mov    %r14,%rdi
shr    %cl,%rdi
mov    %dil,(%rax)
lea    0x1(%rax),%rdi
cmp    $0x7,%rcx
jg     3b9bb <LZWEncode+0x30b>
mov    %rsi,%rax
mov    %rdi,%rsi
mov    %rcx,%r13
jmpq   3b9d6 <LZWEncode+0x326>
mov    %rcx,-0x38(%rbp)
add    $0x1,%rcx
mov    %rcx,-0x40(%rbp)
lea    0x1(%rax),%rcx
add    $0xffffffffffffffff,%rdx
mov    %rdx,-0xa8(%rbp)
movzbl (%rax),%edx
mov    %rdx,-0x80(%rbp)
mov    %rdx,%rax
shl    $0xc,%rax
mov    %rdi,-0x70(%rbp)
movzwl %di,%edi
add    %rax,%rdi
shl    $0x5,%edx
mov    %r15,%rax
xor    %edx,%eax
mov    %rax,-0x58(%rbp)
movslq %eax,%rax
mov    %rax,-0x60(%rbp)
shl    $0x4,%rax
add    0x118(%r12),%rax
mov    (%rax),%r12
cmp    %r12,%rdi
je     3b7a9 <LZWEncode+0xf9>
test   %r12,%r12
jns    3b9ed <LZWEncode+0x33d>
mov    %rcx,%rdx
mov    -0xa0(%rbp),%r12
mov    -0x70(%rbp),%r15
mov    -0x90(%rbp),%rcx
cmp    %rcx,%rsi
jbe    3b981 <LZWEncode+0x2d1>
mov    %rdx,-0x68(%rbp)
mov    -0x88(%rbp),%r12
mov    0x368(%r12),%rcx
sub    %rcx,%rsi
mov    %rsi,0x390(%r12)
mov    %r12,%rcx
mov    %r9,-0x98(%rbp)
mov    %rax,-0x58(%rbp)
mov    %rdi,-0x50(%rbp)
mov    %r11,-0x48(%rbp)
mov    %r8,-0x78(%rbp)
mov    %r10,-0x30(%rbp)
mov    %rcx,%rdi
callq  86e0 <TIFFFlushData1@plt>
test   %eax,%eax
je     3ba1e <LZWEncode+0x36e>
mov    0x368(%r12),%rsi
mov    -0x30(%rbp),%r10
mov    -0x78(%rbp),%r8
mov    -0x48(%rbp),%r11
mov    -0x50(%rbp),%rdi
mov    -0x58(%rbp),%rax
mov    -0x98(%rbp),%r9
mov    -0x68(%rbp),%rdx
mov    -0xa0(%rbp),%r12
mov    %rbx,%rcx
shl    %cl,%r14
mov    %rcx,%rbx
movzwl %r15w,%ecx
or     %rcx,%r14
movslq %ebx,%r15
lea    -0x8(%r13,%r15,1),%rcx
mov    %rdx,-0x60(%rbp)
mov    %r14,%rdx
shr    %cl,%rdx
mov    %dl,(%rsi)
lea    0x1(%rsi),%rdx
cmp    $0x7,%rcx
jg     3ba36 <LZWEncode+0x386>
mov    %rdx,%r13
jmpq   3ba48 <LZWEncode+0x398>
lea    -0x10(%rbx,%r13,1),%rcx
mov    %rsi,%r13
mov    %r14,%rsi
shr    %cl,%rsi
mov    %sil,(%rdi)
lea    0x2(%rax),%rsi
mov    %r13,%rax
mov    %rcx,%r13
movzbl (%rax),%edi
lea    0x1(%r15),%rcx
add    %rbx,%r11
add    $0x1,%rax
add    $0xffffffffffffffff,%rdx
jmpq   3b7c2 <LZWEncode+0x112>
cmp    %edx,%r15d
jne    3ba9a <LZWEncode+0x3ea>
mov    %rcx,-0x98(%rbp)
mov    %r8,-0x78(%rbp)
mov    %rbx,-0x50(%rbp)
mov    -0xa0(%rbp),%r12
mov    -0x58(%rbp),%rdx
mov    -0x70(%rbp),%r15
mov    $0x1,%ecx
jmpq   3bad2 <LZWEncode+0x422>
xor    %eax,%eax
mov    -0x8(%rbp),%rbx
mov    -0x10(%rbp),%r12
mov    -0x18(%rbp),%r13
mov    -0x20(%rbp),%r14
mov    -0x28(%rbp),%r15
leaveq 
retq   
lea    -0x10(%r13,%r15,1),%rcx
mov    %r14,%r13
shr    %cl,%r13
mov    %r13b,(%rdx)
lea    0x2(%rsi),%r13
mov    %r9w,0x8(%rax)
mov    %rdi,(%rax)
add    $0x1,%r9d
cmp    $0xffe,%r9d
je     3bb18 <LZWEncode+0x468>
add    %r15,%r11
cmp    %r8d,%r9d
jg     3bb97 <LZWEncode+0x4e7>
mov    -0x40(%rbp),%rsi
cmp    %rsi,%r10
jle    3bbd9 <LZWEncode+0x529>
mov    %rsi,%rax
mov    %r13,%rsi
mov    %rcx,%r13
mov    %rax,%rcx
mov    -0x60(%rbp),%rax
mov    -0x80(%rbp),%rdi
mov    -0xa8(%rbp),%rdx
jmpq   3b7c2 <LZWEncode+0x112>
mov    -0x60(%rbp),%rdx
mov    $0x2329,%eax
sub    %rdx,%rax
mov    %rcx,-0x98(%rbp)
mov    %r8,-0x78(%rbp)
mov    %rbx,-0x50(%rbp)
mov    %rax,%rcx
mov    -0xa0(%rbp),%r12
mov    -0x58(%rbp),%rdx
mov    -0x70(%rbp),%r15
jmp    3bad2 <LZWEncode+0x422>
test   %rbx,%rbx
js     3bc36 <LZWEncode+0x586>
sub    %ecx,%edx
test   %edx,%edx
jns    3bade <LZWEncode+0x42e>
add    $0x2329,%edx
movslq %edx,%rax
shl    $0x4,%rax
add    0x118(%r12),%rax
mov    (%rax),%rbx
cmp    %rbx,%rdi
jne    3bac9 <LZWEncode+0x419>
movzwl 0x8(%rax),%edi
mov    -0x50(%rbp),%rbx
mov    -0x78(%rbp),%r8
mov    -0x98(%rbp),%rax
mov    -0xa8(%rbp),%rdx
mov    -0x40(%rbp),%rcx
jmpq   3b7c2 <LZWEncode+0x112>
mov    %r12,%rdi
mov    %r10,-0x48(%rbp)
mov    %r13,-0x68(%rbp)
mov    %rcx,%r13
callq  3b0b0 <cl_hash>
mov    %rbx,%rcx
mov    %r13,%rbx
movq   $0x0,0xf8(%r12)
shl    %cl,%r14
or     $0x100,%r14
lea    -0x8(%rbx,%r15,1),%rcx
mov    %r14,%rdx
shr    %cl,%rdx
mov    %rcx,%r13
mov    -0x68(%rbp),%rax
mov    %dl,(%rax)
lea    0x1(%rax),%rsi
cmp    $0x7,%r13
jg     3bc4a <LZWEncode+0x59a>
mov    %r15,%r11
mov    -0x48(%rbp),%r10
mov    -0x60(%rbp),%rax
mov    -0x80(%rbp),%rdi
mov    -0xa8(%rbp),%rdx
mov    $0x9,%ebx
mov    $0x1ff,%r8d
mov    $0x102,%r9d
xor    %ecx,%ecx
jmpq   3b7c2 <LZWEncode+0x112>
lea    0x1(%rbx),%edx
cmp    $0xc,%edx
jg     3bc8c <LZWEncode+0x5dc>
mov    %rcx,%rsi
mov    %rdx,%rcx
mov    $0x1,%eax
shl    %cl,%rax
mov    %rcx,%rbx
lea    -0x1(%rax),%r8d
mov    %r13,%rax
mov    %rsi,%r13
mov    %rax,%rsi
mov    -0x60(%rbp),%rax
mov    -0x80(%rbp),%rdi
mov    -0xa8(%rbp),%rdx
mov    -0x40(%rbp),%rcx
jmpq   3b7c2 <LZWEncode+0x112>
cmp    $0x7fffff,%rsi
jg     3bcab <LZWEncode+0x5fb>
mov    %rsi,%rax
shl    $0x8,%rax
cqto   
idiv   %r11
mov    -0x38(%rbp),%rdx
lea    0x2711(%rdx),%r10
mov    0xf8(%r12),%rdx
cmp    %rax,%rdx
jge    3bcc7 <LZWEncode+0x617>
mov    %rax,0xf8(%r12)
mov    %rsi,%rax
mov    %r13,%rsi
mov    %rcx,%r13
mov    %rax,%rcx
mov    -0x60(%rbp),%rax
mov    -0x80(%rbp),%rdi
mov    -0xa8(%rbp),%rdx
jmpq   3b7c2 <LZWEncode+0x112>
mov    -0x50(%rbp),%rbx
mov    -0x78(%rbp),%r8
mov    -0x98(%rbp),%rdx
jmpq   3b8fb <LZWEncode+0x24b>
lea    -0x10(%rbx,%r15,1),%rcx
mov    %r14,%rdx
shr    %cl,%rdx
mov    %rcx,%r13
mov    %dl,(%rsi)
lea    0x2(%rax),%rsi
mov    %r15,%r11
mov    -0x48(%rbp),%r10
mov    -0x60(%rbp),%rax
mov    -0x80(%rbp),%rdi
mov    -0xa8(%rbp),%rdx
mov    $0x9,%ebx
mov    $0x1ff,%r8d
mov    $0x102,%r9d
xor    %ecx,%ecx
jmpq   3b7c2 <LZWEncode+0x112>
lea    0x35e1e(%rip),%rdi        # 71ab1 <module.37+0x69>
mov    $0x3ee,%edx
lea    0x35b5a(%rip),%rsi        # 717f9 <module.12+0x26>
lea    0x35e01(%rip),%rcx        # 71aa7 <module.37+0x5f>
callq  8490 <__assert_fail@plt>
mov    %r11,%rax
and    $0xffffffffffffff00,%rax
test   %rax,%rax
jne    3bd42 <LZWEncode+0x692>
mov    $0x7fffffff,%eax
jmpq   3bbf2 <LZWEncode+0x542>
mov    %r12,%rdi
mov    %r13,-0x70(%rbp)
mov    %r10,-0x50(%rbp)
mov    %rcx,%r13
callq  3b0b0 <cl_hash>
mov    %rbx,%rcx
mov    %r13,%rbx
movq   $0x0,0xf8(%r12)
shl    %cl,%r14
or     $0x100,%r14
lea    -0x8(%rbx,%r15,1),%rcx
mov    %r14,%rdx
shr    %cl,%rdx
mov    %rcx,%r13
mov    -0x70(%rbp),%rax
mov    %dl,(%rax)
lea    0x1(%rax),%rsi
cmp    $0x7,%r13
jg     3bd59 <LZWEncode+0x6a9>
mov    %r15,%r11
mov    -0x50(%rbp),%r10
mov    -0x60(%rbp),%rax
mov    -0x80(%rbp),%rdi
mov    -0xa8(%rbp),%rdx
mov    $0x9,%ebx
mov    $0x1ff,%r8d
mov    $0x102,%r9d
xor    %ecx,%ecx
jmpq   3b7c2 <LZWEncode+0x112>
mov    %rsi,%rax
mov    %r11,%rdi
sar    $0x8,%rdi
cqto   
mov    %rax,%rsi
idiv   %rdi
jmpq   3bbf2 <LZWEncode+0x542>
lea    -0x10(%rbx,%r15,1),%rcx
mov    %r14,%rdx
shr    %cl,%rdx
mov    %rcx,%r13
mov    %dl,(%rsi)
lea    0x2(%rax),%rsi
mov    %r15,%r11
mov    -0x50(%rbp),%r10
mov    -0x60(%rbp),%rax
mov    -0x80(%rbp),%rdi
mov    -0xa8(%rbp),%rdx
mov    $0x9,%ebx
mov    $0x1ff,%r8d
mov    $0x102,%r9d
xor    %ecx,%ecx
jmpq   3b7c2 <LZWEncode+0x112>
nopl   0x0(%rax,%rax,1)

000000000003bda0 <LZWPostEncode>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    0x350(%rdi),%r9
mov    0x90(%r9),%rsi
mov    0x88(%r9),%rax
movzwl 0x80(%r9),%ecx
mov    0x388(%rdi),%rdx
mov    0x110(%r9),%r8
cmp    %rdx,%r8
jb     3be53 <LZWPostEncode+0xb3>
movslq 0xe8(%r9),%r8
cmp    $0xffff,%r8d
jne    3be92 <LZWPostEncode+0xf2>
shl    %cl,%rax
or     $0x101,%rax
movslq %ecx,%rcx
lea    (%rsi,%rcx,1),%r8
lea    -0x8(%r8),%rcx
mov    %rax,%rsi
shr    %cl,%rsi
mov    %sil,(%rdx)
lea    0x1(%rdx),%rsi
cmp    $0x7,%rcx
jle    3be24 <LZWPostEncode+0x84>
lea    -0x10(%r8),%rcx
mov    %rax,%r8
shr    %cl,%r8
mov    %r8b,(%rsi)
lea    0x2(%rdx),%rsi
test   %rcx,%rcx
jle    3be3b <LZWPostEncode+0x9b>
mov    $0x8,%edx
neg    %ecx
add    %edx,%ecx
shl    %cl,%rax
mov    %al,(%rsi)
add    $0x1,%rsi
mov    0x368(%rdi),%rax
sub    %rax,%rsi
mov    %rsi,0x390(%rdi)
mov    $0x1,%eax
leaveq 
retq   
mov    0x368(%rdi),%r8
sub    %r8,%rdx
mov    %rdx,0x390(%rdi)
mov    %rdi,%rdx
mov    %r15,-0x8(%rbp)
mov    %r9,-0x28(%rbp)
mov    %rax,-0x10(%rbp)
mov    %rcx,-0x18(%rbp)
mov    %rsi,-0x20(%rbp)
mov    %rdi,%r15
mov    %rdx,%rdi
callq  86e0 <TIFFFlushData1@plt>
test   %eax,%eax
jne    3bec6 <LZWPostEncode+0x126>
xor    %eax,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
movzwl 0x84(%r9),%r10d
shl    %cl,%rax
or     %rax,%r8
mov    %rcx,%rax
lea    -0x8(%rax,%rsi,1),%rcx
mov    %r8,%r11
shr    %cl,%r11
mov    %r11b,(%rdx)
lea    0x1(%rdx),%r11
cmp    $0x7,%rcx
jg     3bee9 <LZWPostEncode+0x149>
mov    %rcx,%rdx
mov    %rax,%rcx
mov    %rdx,%rax
jmp    3bf04 <LZWPostEncode+0x164>
mov    %r15,%rdi
mov    0x368(%rdi),%rdx
mov    -0x20(%rbp),%rsi
mov    -0x18(%rbp),%rcx
mov    -0x10(%rbp),%rax
mov    -0x28(%rbp),%r9
mov    -0x8(%rbp),%r15
jmpq   3bdd8 <LZWPostEncode+0x38>
lea    -0x10(%rax,%rsi,1),%rcx
mov    %r8,%rsi
shr    %cl,%rsi
mov    %sil,(%r11)
lea    0x2(%rdx),%r11
mov    %rcx,%rdx
mov    %rax,%rcx
mov    %rdx,%rax
movl   $0xffff,0xe8(%r9)
lea    0x1(%r10),%edx
cmp    $0xffe,%edx
je     3bf35 <LZWPostEncode+0x195>
movzwl 0x82(%r9),%esi
cmp    %esi,%edx
jg     3bf69 <LZWPostEncode+0x1c9>
mov    %r11,%rdx
mov    %rax,%rsi
mov    %r8,%rax
jmpq   3bdec <LZWPostEncode+0x4c>
shl    %cl,%r8
or     $0x100,%r8
add    %rcx,%rax
lea    -0x8(%rax),%rcx
mov    %r8,%rdx
shr    %cl,%rdx
mov    %rcx,%rsi
mov    %dl,(%r11)
lea    0x1(%r11),%rdx
mov    $0x9,%ecx
cmp    $0x7,%rsi
jg     3bf7f <LZWPostEncode+0x1df>
mov    %r8,%rax
jmpq   3bdec <LZWPostEncode+0x4c>
add    $0x1,%ecx
cmp    $0xc,%ecx
jg     3bfa3 <LZWPostEncode+0x203>
mov    %r11,%rdx
mov    %rax,%rsi
mov    %r8,%rax
jmpq   3bdec <LZWPostEncode+0x4c>
add    $0xfffffffffffffff0,%rax
mov    %rcx,%r9
mov    %rax,%rcx
mov    %r8,%rax
shr    %cl,%rax
mov    %rcx,%rsi
mov    %al,(%rdx)
lea    0x2(%r11),%rdx
mov    %r8,%rax
mov    %r9,%rcx
jmpq   3bdec <LZWPostEncode+0x4c>
lea    0x35b07(%rip),%rdi        # 71ab1 <module.37+0x69>
lea    0x35848(%rip),%rsi        # 717f9 <module.12+0x26>
mov    $0x442,%edx
lea    0x35b06(%rip),%rcx        # 71ac3 <module.37+0x7b>
callq  8490 <__assert_fail@plt>
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   (%rax)

000000000003bfd0 <LZWCleanup>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x8(%rbp)
mov    %rdi,%r15
callq  8180 <TIFFPredictorCleanup@plt>
mov    0x350(%r15),%rax
test   %rax,%rax
jne    3c00f <LZWCleanup+0x3f>
lea    0x35ada(%rip),%rdi        # 71ad1 <module.37+0x89>
lea    0x357fb(%rip),%rsi        # 717f9 <module.12+0x26>
mov    $0x46c,%edx
lea    0x35ada(%rip),%rcx        # 71ae4 <module.37+0x9c>
callq  8490 <__assert_fail@plt>
mov    0xe0(%rax),%rdi
test   %rdi,%rdi
je     3c020 <LZWCleanup+0x50>
callq  8bb0 <_TIFFfree@plt>
mov    0x350(%r15),%rax
mov    0x118(%rax),%rdi
test   %rdi,%rdi
je     3c038 <LZWCleanup+0x68>
callq  8bb0 <_TIFFfree@plt>
mov    0x350(%r15),%rdi
callq  8bb0 <_TIFFfree@plt>
mov    %r15,%rdi
movq   $0x0,0x350(%rdi)
callq  8740 <_TIFFSetDefaultCompressionState@plt>
mov    -0x8(%rbp),%r15
leaveq 
retq   
nopl   (%rax)

000000000003c060 <TIFFInitNeXT>:
push   %rbp
mov    %rsp,%rbp
lea    0x365(%rip),%rax        # 3c3d0 <NeXTPreDecode>
mov    %rax,0x2d0(%rdi)
lea    0x27(%rip),%rax        # 3c0a0 <NeXTDecode>
mov    %rax,0x2f8(%rdi)
mov    %rax,0x308(%rdi)
mov    %rax,0x318(%rdi)
mov    $0x1,%eax
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)

000000000003c0a0 <NeXTDecode>:
push   %rbp
mov    %rsp,%rbp
sub    $0x40,%rsp
mov    %rdx,%rcx
mov    %rsi,%r8
jmp    3c0bc <NeXTDecode+0x1c>
movb   $0xff,(%r8)
add    $0xffffffffffffffff,%rcx
add    $0x1,%r8
test   %rcx,%rcx
jg     3c0b0 <NeXTDecode+0x10>
mov    %rdx,%rax
mov    %r12,%r9
mov    %rsi,%r12
mov    %r15,%r10
mov    %r13,%r11
mov    0x388(%rdi),%r8
mov    0x390(%rdi),%r13
lea    0x35a0a(%rip),%rcx        # 71aef <module.8>
mov    0x358(%rdi),%r15
cqto   
mov    %r14,%rsi
mov    %rax,%r14
idiv   %r15
test   %rdx,%rdx
jne    3c114 <NeXTDecode+0x74>
mov    %rbx,-0x8(%rbp)
mov    %r9,-0x10(%rbp)
mov    %r11,-0x18(%rbp)
mov    %rsi,-0x20(%rbp)
mov    %r10,-0x28(%rbp)
xor    %ebx,%ebx
jmp    3c16a <NeXTDecode+0xca>
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
mov    %r9,%r12
mov    %r11,%r13
mov    %rsi,%r14
mov    %rcx,%rsi
mov    %r10,%r15
lea    0x359c7(%rip),%rdx        # 71afa <module.8+0xb>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
cmp    %r13,%r15
jg     3c1b2 <NeXTDecode+0x112>
mov    %r12,%rax
mov    %r15,%rdx
mov    %rdi,-0x40(%rbp)
mov    %rax,%rdi
mov    %r8,%rbx
callq  8790 <_TIFFmemcpy@plt>
sub    %r15,%r13
lea    0x1(%r15,%rbx,1),%r8
mov    -0x40(%rbp),%rdi
sub    %r15,%r14
add    %r15,%r12
xor    %ebx,%ebx
mov    %r12,-0x40(%rbp)
test   %r13,%r13
jle    3c1f0 <NeXTDecode+0x150>
test   %r14,%r14
jle    3c1f0 <NeXTDecode+0x150>
lea    0x1(%r8),%rsi
add    $0xffffffffffffffff,%r13
movzbl (%r8),%ecx
test   %cl,%cl
je     3c13c <NeXTDecode+0x9c>
cmp    $0x40,%cl
je     3c219 <NeXTDecode+0x179>
mov    0x58(%rdi),%edx
mov    0x10(%rdi),%eax
and    $0x400,%eax
test   %eax,%eax
jne    3c28b <NeXTDecode+0x1eb>
mov    %r14,-0x30(%rbp)
mov    %rbx,%rax
jmpq   3c2b4 <NeXTDecode+0x214>
xor    %ebx,%ebx
xor    %eax,%eax
mov    0x3b8(%rdi),%r8
lea    0x3597a(%rip),%rdx        # 71b3c <module.8+0x4d>
mov    0x27c(%rdi),%ecx
mov    %r8,%rdi
lea    0x3591d(%rip),%rsi        # 71aef <module.8>
callq  8a00 <TIFFErrorExt@plt>
mov    %rbx,%rax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
mov    %r8,0x388(%rdi)
mov    %r13,0x390(%rdi)
mov    $0x1,%eax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
cmp    $0x3,%r13
jle    3c1b2 <NeXTDecode+0x112>
movzbl (%rsi),%ecx
movzbl 0x2(%r8),%esi
movzbl 0x4(%r8),%edx
movzbl 0x3(%r8),%eax
shl    $0x8,%eax
add    %edx,%eax
movslq %eax,%rdx
lea    0x4(%rdx),%r9
cmp    %r9,%r13
jl     3c1b2 <NeXTDecode+0x112>
shl    $0x8,%ecx
lea    (%rsi,%rcx,1),%eax
movslq %eax,%rcx
lea    (%rdx,%rcx,1),%rax
cmp    %rax,%r15
jl     3c1b2 <NeXTDecode+0x112>
lea    (%rcx,%r12,1),%rax
lea    0x5(%r8),%rsi
mov    %rdi,-0x38(%rbp)
mov    %rax,%rdi
mov    %r9,%rbx
mov    %r8,%r12
callq  8790 <_TIFFmemcpy@plt>
sub    %rbx,%r13
lea    0x1(%r12,%rbx,1),%r8
mov    -0x40(%rbp),%r12
mov    -0x38(%rbp),%rdi
jmpq   3c162 <NeXTDecode+0xc2>
mov    0x64(%rdi),%edx
mov    %r14,-0x30(%rbp)
mov    %rbx,%rax
jmp    3c2b4 <NeXTDecode+0x214>
cmp    %rax,%r15
jle    3c30d <NeXTDecode+0x26d>
mov    -0x38(%rbp),%r8
test   %r8,%r8
je     3c1b0 <NeXTDecode+0x110>
movzbl (%rsi),%ecx
add    $0x1,%rsi
lea    -0x1(%r8),%r13
mov    %r13,-0x38(%rbp)
mov    %rcx,%r14
shr    $0x6,%r14
mov    %r14,%r13
shl    $0x6,%r13d
mov    %r14,%r10
shl    $0x4,%r10d
mov    %r14,%r9
shl    $0x2,%r9d
and    $0x3f,%rcx
mov    -0x40(%rbp),%r11
test   %rcx,%rcx
jle    3c34a <NeXTDecode+0x2aa>
cmp    %edx,%ebx
jae    3c34a <NeXTDecode+0x2aa>
cmp    %rax,%r15
jle    3c34a <NeXTDecode+0x2aa>
lea    0x1(%rbx),%r8d
add    $0xffffffffffffffff,%rcx
and    $0x3,%ebx
cmp    $0x1,%ebx
jbe    3c365 <NeXTDecode+0x2c5>
cmp    $0x2,%ebx
je     3c376 <NeXTDecode+0x2d6>
cmp    $0x3,%ebx
je     3c38a <NeXTDecode+0x2ea>
mov    %r8,%rbx
jmp    3c2dc <NeXTDecode+0x23c>
xor    %eax,%eax
mov    0x3b8(%rdi),%rbx
lea    0x35801(%rip),%rdx        # 71b1e <module.8+0x2f>
mov    0x27c(%rdi),%ecx
mov    %rbx,%rdi
lea    0x357c2(%rip),%rsi        # 71aef <module.8>
callq  8a00 <TIFFErrorExt@plt>
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
xor    %eax,%eax
leaveq 
retq   
cmp    %edx,%ebx
jb     3c297 <NeXTDecode+0x1f7>
mov    %rsi,%r8
mov    %r11,%r12
mov    -0x30(%rbp),%r14
mov    -0x38(%rbp),%r13
jmpq   3c162 <NeXTDecode+0xc2>
test   %ebx,%ebx
je     3c3a6 <NeXTDecode+0x306>
cmp    $0x1,%ebx
je     3c3b2 <NeXTDecode+0x312>
mov    %r8,%rbx
jmpq   3c2dc <NeXTDecode+0x23c>
movzbl (%r12),%ebx
or     %r9b,%bl
mov    %bl,(%r12)
mov    %r8,%rbx
jmpq   3c2dc <NeXTDecode+0x23c>
movzbl (%r12),%ebx
or     %r14b,%bl
mov    %bl,(%r12)
add    $0x1,%rax
add    $0x1,%r12
mov    %r8,%rbx
jmpq   3c2dc <NeXTDecode+0x23c>
mov    %r13b,(%r12)
mov    %r8,%rbx
jmpq   3c2dc <NeXTDecode+0x23c>
movzbl (%r12),%ebx
or     %r10b,%bl
mov    %bl,(%r12)
mov    %r8,%rbx
jmpq   3c2dc <NeXTDecode+0x23c>
nopw   %cs:0x0(%rax,%rax,1)

000000000003c3d0 <NeXTPreDecode>:
push   %rbp
mov    %rsp,%rbp
movzwl 0x74(%rdi),%ecx
cmp    $0x2,%cx
jne    3c3e5 <NeXTPreDecode+0x15>
mov    $0x1,%eax
leaveq 
retq   
mov    0x3b8(%rdi),%rdi
lea    0x3576a(%rip),%rsi        # 71b5d <module.12>
lea    0x35771(%rip),%rdx        # 71b6b <module.12+0xe>
xor    %eax,%eax
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)
nop

000000000003c410 <TIFFInitOJPEG>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
cmp    $0x6,%esi
je     3c43c <TIFFInitOJPEG+0x2c>
lea    0x35956(%rip),%rdi        # 71d7a <module.15+0xe>
lea    0x35969(%rip),%rsi        # 71d94 <module.15+0x28>
mov    $0x1a9,%edx
lea    0x35969(%rip),%rcx        # 71da0 <module.15+0x34>
callq  8490 <__assert_fail@plt>
lea    0x3d5f5(%rip),%rsi        # 79a38 <ojpegFields>
mov    $0x7,%edx
mov    %rdi,%rax
mov    %r15,-0x10(%rbp)
mov    %rdi,%r15
mov    %rax,%rdi
callq  8520 <_TIFFMergeFields@plt>
test   %eax,%eax
jne    3c482 <TIFFInitOJPEG+0x72>
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
lea    0x35940(%rip),%rdx        # 71dae <module.15+0x42>
lea    0x358f7(%rip),%rsi        # 71d6c <module.15>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x10(%rbp),%r15
leaveq 
retq   
mov    $0x1680,%edi
callq  8440 <_TIFFmalloc@plt>
test   %rax,%rax
je     3c5fc <TIFFInitOJPEG+0x1ec>
mov    %rax,%rdi
mov    %r14,-0x8(%rbp)
mov    %rax,%r14
mov    $0x1680,%edx
xor    %esi,%esi
callq  88e0 <_TIFFmemset@plt>
mov    %r15,(%r14)
movb   $0x1,0x120(%r14)
movb   $0x2,0x124(%r14)
movb   $0x2,0x125(%r14)
xor    %eax,%eax
mov    $0x212,%esi
mov    $0x2,%edx
mov    %rdx,%rcx
mov    %r15,%rdi
callq  8290 <TIFFSetField@plt>
lea    0xbdc(%rip),%rax        # 3d0c0 <OJPEGFixupTags>
mov    %rax,0x2c0(%r15)
lea    0xbde(%rip),%rax        # 3d0d0 <OJPEGSetupDecode>
mov    %rax,0x2c8(%r15)
lea    0xc00(%rip),%rax        # 3d100 <OJPEGPreDecode>
mov    %rax,0x2d0(%r15)
lea    0x1512(%rip),%rax        # 3da20 <OJPEGPostDecode>
mov    %rax,0x3e8(%r15)
lea    0x1134(%rip),%rax        # 3d650 <OJPEGDecode>
mov    %rax,0x2f8(%r15)
mov    %rax,0x308(%r15)
mov    %rax,0x318(%r15)
lea    0x1568(%rip),%rax        # 3daa0 <OJPEGSetupEncode>
mov    %rax,0x2d8(%r15)
lea    0x158a(%rip),%rax        # 3dad0 <OJPEGPreEncode>
mov    %rax,0x2e8(%r15)
lea    0x15dc(%rip),%rax        # 3db30 <OJPEGPostEncode>
mov    %rax,0x2f0(%r15)
lea    0x159e(%rip),%rax        # 3db00 <OJPEGEncode>
mov    %rax,0x300(%r15)
mov    %rax,0x310(%r15)
mov    %rax,0x320(%r15)
lea    0x15e2(%rip),%rax        # 3db60 <OJPEGCleanup>
mov    %rax,0x338(%r15)
mov    %r14,0x350(%r15)
mov    0x410(%r15),%rax
mov    %rax,0xd8(%r14)
lea    0x7f(%rip),%rax        # 3c620 <OJPEGVGetField>
mov    %rax,0x410(%r15)
mov    0x408(%r15),%rax
mov    %rax,0xe0(%r14)
lea    0x373(%rip),%rax        # 3c930 <OJPEGVSetField>
mov    %rax,0x408(%r15)
mov    0x418(%r15),%rax
mov    %rax,0xe8(%r14)
lea    0x787(%rip),%rax        # 3cd60 <OJPEGPrintDir>
mov    %rax,0x418(%r15)
mov    0x10(%r15),%eax
or     $0x20000,%eax
mov    %eax,0x10(%r15)
mov    $0x1,%eax
mov    -0x8(%rbp),%r14
mov    -0x10(%rbp),%r15
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
lea    0x357ce(%rip),%rdx        # 71dda <module.15+0x6e>
lea    0x35759(%rip),%rsi        # 71d6c <module.15>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x10(%rbp),%r15
leaveq 
retq   

000000000003c620 <OJPEGVGetField>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    0x350(%rdi),%rcx
lea    -0x200(%rsi),%r8d
cmp    $0x12,%r8d
ja     3c672 <OJPEGVGetField+0x52>
mov    $0x1,%eax
lea    0x35544(%rip),%r9        # 71b8c <module.12+0x2f>
movslq (%r9,%r8,4),%r8
add    %r9,%r8
jmpq   *%r8
movslq (%rdx),%rdi
cmp    $0x2f,%edi
jle    3c78c <OJPEGVGetField+0x16c>
mov    0x8(%rdx),%rdi
lea    0x8(%rdi),%rsi
mov    %rsi,0x8(%rdx)
mov    (%rdi),%rsi
jmpq   3c799 <OJPEGVGetField+0x179>
callq  *0xd8(%rcx)
leaveq 
retq   
movslq (%rdx),%rdi
cmp    $0x2f,%edi
jle    3c7a5 <OJPEGVGetField+0x185>
mov    0x8(%rdx),%rdi
lea    0x8(%rdi),%rsi
mov    %rsi,0x8(%rdx)
mov    (%rdi),%rsi
jmpq   3c7b2 <OJPEGVGetField+0x192>
movslq (%rdx),%rdi
cmp    $0x2f,%edi
jle    3c7be <OJPEGVGetField+0x19e>
mov    0x8(%rdx),%rdi
lea    0x8(%rdi),%rsi
mov    %rsi,0x8(%rdx)
mov    (%rdi),%rsi
jmpq   3c7cb <OJPEGVGetField+0x1ab>
movzbl 0x122(%rcx),%esi
test   %sil,%sil
jne    3c6ec <OJPEGVGetField+0xcc>
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rdx,%r14
mov    %rcx,%r15
callq  3dd40 <OJPEGSubsamplingCorrect>
mov    %r15,%rcx
mov    %r14,%rdx
mov    $0x1,%eax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
movslq (%rdx),%rdi
cmp    $0x2f,%edi
jle    3c7d7 <OJPEGVGetField+0x1b7>
mov    0x8(%rdx),%rdi
lea    0x8(%rdi),%rsi
mov    %rsi,0x8(%rdx)
mov    (%rdi),%rsi
jmpq   3c7e4 <OJPEGVGetField+0x1c4>
movslq (%rdx),%rdi
cmp    $0x2f,%edi
jle    3c80e <OJPEGVGetField+0x1ee>
mov    0x8(%rdx),%rdi
lea    0x8(%rdi),%rsi
mov    %rsi,0x8(%rdx)
mov    (%rdi),%rsi
jmpq   3c81b <OJPEGVGetField+0x1fb>
movslq (%rdx),%rdi
cmp    $0x2f,%edi
jle    3c844 <OJPEGVGetField+0x224>
mov    0x8(%rdx),%rdi
lea    0x8(%rdi),%rsi
mov    %rsi,0x8(%rdx)
mov    (%rdi),%rsi
jmpq   3c851 <OJPEGVGetField+0x231>
movslq (%rdx),%rdi
cmp    $0x2f,%edi
jle    3c87a <OJPEGVGetField+0x25a>
mov    0x8(%rdx),%rdi
lea    0x8(%rdi),%rsi
mov    %rsi,0x8(%rdx)
mov    (%rdi),%rsi
jmpq   3c887 <OJPEGVGetField+0x267>
movslq (%rdx),%rdi
cmp    $0x2f,%edi
jle    3c8a9 <OJPEGVGetField+0x289>
mov    0x8(%rdx),%rdi
lea    0x8(%rdi),%rsi
mov    %rsi,0x8(%rdx)
mov    (%rdi),%rsi
jmpq   3c8b6 <OJPEGVGetField+0x296>
mov    0x10(%rdx),%rsi
mov    (%rsi,%rdi,1),%rsi
add    $0x8,%edi
mov    %edi,(%rdx)
movzwl 0x1d8(%rcx),%ecx
mov    %cx,(%rsi)
leaveq 
retq   
mov    0x10(%rdx),%rsi
mov    (%rsi,%rdi,1),%rsi
add    $0x8,%edi
mov    %edi,(%rdx)
mov    0x110(%rcx),%rcx
mov    %rcx,(%rsi)
leaveq 
retq   
mov    0x10(%rdx),%rsi
mov    (%rsi,%rdi,1),%rsi
add    $0x8,%edi
mov    %edi,(%rdx)
mov    0x118(%rcx),%rcx
mov    %rcx,(%rsi)
leaveq 
retq   
mov    0x10(%rdx),%rsi
mov    (%rsi,%rdi,1),%rsi
add    $0x8,%edi
mov    %edi,(%rdx)
movzbl 0x124(%rcx),%edi
mov    %di,(%rsi)
movslq (%rdx),%rdi
cmp    $0x2f,%edi
jle    3c8c2 <OJPEGVGetField+0x2a2>
mov    0x8(%rdx),%rdi
lea    0x8(%rdi),%rsi
mov    %rsi,0x8(%rdx)
mov    (%rdi),%rsi
jmpq   3c8cf <OJPEGVGetField+0x2af>
mov    0x10(%rdx),%rsi
mov    (%rsi,%rdi,1),%rsi
add    $0x8,%edi
mov    %edi,(%rdx)
movzbl 0x127(%rcx),%edi
mov    %edi,(%rsi)
movslq (%rdx),%rdi
cmp    $0x2f,%edi
jle    3c8db <OJPEGVGetField+0x2bb>
mov    0x8(%rdx),%rdi
lea    0x8(%rdi),%rsi
mov    %rsi,0x8(%rdx)
mov    (%rdi),%rsi
jmpq   3c8e8 <OJPEGVGetField+0x2c8>
mov    0x10(%rdx),%rsi
mov    (%rsi,%rdi,1),%rsi
add    $0x8,%edi
mov    %edi,(%rdx)
movzbl 0x128(%rcx),%edi
mov    %edi,(%rsi)
movslq (%rdx),%rdi
cmp    $0x2f,%edi
jle    3c8f4 <OJPEGVGetField+0x2d4>
mov    0x8(%rdx),%rdi
lea    0x8(%rdi),%rsi
mov    %rsi,0x8(%rdx)
mov    (%rdi),%rsi
jmpq   3c901 <OJPEGVGetField+0x2e1>
mov    0x10(%rdx),%rsi
mov    (%rsi,%rdi,1),%rsi
add    $0x8,%edi
mov    %edi,(%rdx)
movzbl 0x129(%rcx),%edi
mov    %edi,(%rsi)
movslq (%rdx),%rdi
cmp    $0x2f,%edi
jle    3c90d <OJPEGVGetField+0x2ed>
mov    0x8(%rdx),%rdi
lea    0x8(%rdi),%rsi
mov    %rsi,0x8(%rdx)
mov    (%rdi),%rsi
jmp    3c91a <OJPEGVGetField+0x2fa>
mov    0x10(%rdx),%rsi
mov    (%rsi,%rdi,1),%rsi
add    $0x8,%edi
mov    %edi,(%rdx)
movzbl 0x120(%rcx),%ecx
mov    %cx,(%rsi)
leaveq 
retq   
mov    0x10(%rdx),%rsi
mov    (%rsi,%rdi,1),%rsi
add    $0x8,%edi
mov    %edi,(%rdx)
movzbl 0x125(%rcx),%ecx
mov    %cx,(%rsi)
leaveq 
retq   
mov    0x10(%rdx),%rsi
mov    (%rsi,%rdi,1),%rsi
add    $0x8,%edi
mov    %edi,(%rdx)
add    $0x130,%rcx
mov    %rcx,(%rsi)
leaveq 
retq   
mov    0x10(%rdx),%rsi
mov    (%rsi,%rdi,1),%rsi
add    $0x8,%edi
mov    %edi,(%rdx)
add    $0x148,%rcx
mov    %rcx,(%rsi)
leaveq 
retq   
mov    0x10(%rdx),%rsi
mov    (%rsi,%rdi,1),%rsi
add    $0x8,%edi
mov    %edi,(%rdx)
add    $0x160,%rcx
mov    %rcx,(%rsi)
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)

000000000003c930 <OJPEGVSetField>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    0x350(%rdi),%rax
lea    -0x200(%rsi),%r8d
cmp    $0x12,%r8d
ja     3c987 <OJPEGVSetField+0x57>
lea    0x3551b(%rip),%r10        # 71e6e <module.28>
xor    %ecx,%ecx
lea    0x3527c(%rip),%r9        # 71bd8 <module.12+0x7b>
movslq (%r9,%r8,4),%r8
add    %r9,%r8
jmpq   *%r8
movslq (%rdx),%r8
cmp    $0x2f,%r8d
jle    3ca7d <OJPEGVSetField+0x14d>
mov    0x8(%rdx),%r8
lea    0x8(%r8),%rcx
mov    %rcx,0x8(%rdx)
mov    (%r8),%rcx
jmpq   3ca8c <OJPEGVSetField+0x15c>
callq  *0xe0(%rax)
leaveq 
retq   
movslq (%rdx),%r8
cmp    $0x2f,%r8d
jle    3caaf <OJPEGVSetField+0x17f>
mov    0x8(%rdx),%r8
lea    0x8(%r8),%rcx
mov    %rcx,0x8(%rdx)
mov    (%r8),%rcx
jmpq   3cabe <OJPEGVSetField+0x18e>
movb   $0x1,0x123(%rax)
movslq (%rdx),%r8
cmp    $0x2f,%r8d
jle    3cac7 <OJPEGVSetField+0x197>
mov    0x8(%rdx),%r8
lea    0x8(%r8),%rcx
mov    %rcx,0x8(%rdx)
movslq (%r8),%rcx
jmpq   3cad6 <OJPEGVSetField+0x1a6>
movslq (%rdx),%r9
cmp    $0x2f,%r9d
jle    3cafd <OJPEGVSetField+0x1cd>
mov    0x8(%rdx),%r9
lea    0x8(%r9),%r8
mov    %r8,0x8(%rdx)
mov    (%r9),%r8d
jmpq   3cb0c <OJPEGVSetField+0x1dc>
movslq (%rdx),%r9
cmp    $0x2f,%r9d
jle    3cb43 <OJPEGVSetField+0x213>
mov    0x8(%rdx),%r9
lea    0x8(%r9),%r8
mov    %r8,0x8(%rdx)
mov    (%r9),%r8d
jmpq   3cb52 <OJPEGVSetField+0x222>
movslq (%rdx),%r9
cmp    $0x2f,%r9d
jle    3cb8d <OJPEGVSetField+0x25d>
mov    0x8(%rdx),%r9
lea    0x8(%r9),%r8
mov    %r8,0x8(%rdx)
mov    (%r9),%r8d
jmpq   3cb9c <OJPEGVSetField+0x26c>
movslq (%rdx),%r8
cmp    $0x2f,%r8d
jle    3cbd7 <OJPEGVSetField+0x2a7>
mov    0x8(%rdx),%r8
lea    0x8(%r8),%rcx
mov    %rcx,0x8(%rdx)
movslq (%r8),%rcx
jmpq   3cbe6 <OJPEGVSetField+0x2b6>
movslq (%rdx),%r8
cmp    $0x2f,%r8d
jle    3cbf1 <OJPEGVSetField+0x2c1>
mov    0x8(%rdx),%r8
lea    0x8(%r8),%rcx
mov    %rcx,0x8(%rdx)
movslq (%r8),%rcx
jmpq   3cc00 <OJPEGVSetField+0x2d0>
mov    0x10(%rdx),%rcx
mov    (%rcx,%r8,1),%rcx
add    $0x8,%r8d
mov    %r8d,(%rdx)
mov    %rcx,0x110(%rax)
mov    %rdi,%rax
mov    %rdi,-0x8(%rbp)
mov    %rax,%rdi
callq  8ae0 <TIFFFieldWithTag@plt>
test   %rax,%rax
jne    3cc0c <OJPEGVSetField+0x2dc>
xor    %eax,%eax
leaveq 
retq   
mov    0x10(%rdx),%rcx
mov    (%rcx,%r8,1),%rcx
add    $0x8,%r8d
mov    %r8d,(%rdx)
mov    %rcx,0x118(%rax)
jmp    3ca93 <OJPEGVSetField+0x163>
mov    0x10(%rdx),%rcx
movslq (%rcx,%r8,1),%rcx
add    $0x8,%r8d
mov    %r8d,(%rdx)
mov    %cl,0x124(%rax)
movslq (%rdx),%r8
cmp    $0x2f,%r8d
jle    3cc43 <OJPEGVSetField+0x313>
mov    0x8(%rdx),%r8
lea    0x8(%r8),%rcx
mov    %rcx,0x8(%rdx)
movslq (%r8),%rcx
jmpq   3cc52 <OJPEGVSetField+0x322>
mov    0x10(%rdx),%r8
mov    (%r8,%r9,1),%r8d
add    $0x8,%r9d
mov    %r9d,(%rdx)
test   %r8d,%r8d
je     3ca93 <OJPEGVSetField+0x163>
cmp    $0x3,%r8d
ja     3cc79 <OJPEGVSetField+0x349>
mov    %r8b,0x127(%rax)
movslq (%rdx),%r10
cmp    $0x2f,%r10d
jle    3cc95 <OJPEGVSetField+0x365>
mov    0x8(%rdx),%r10
lea    0x8(%r10),%r9
mov    %r9,0x8(%rdx)
mov    (%r10),%r9
jmpq   3cca4 <OJPEGVSetField+0x374>
mov    0x10(%rdx),%r8
mov    (%r8,%r9,1),%r8d
add    $0x8,%r9d
mov    %r9d,(%rdx)
test   %r8d,%r8d
je     3ca93 <OJPEGVSetField+0x163>
cmp    $0x3,%r8d
ja     3cca6 <OJPEGVSetField+0x376>
mov    %r8b,0x128(%rax)
movslq (%rdx),%r10
cmp    $0x2f,%r10d
jle    3ccc2 <OJPEGVSetField+0x392>
mov    0x8(%rdx),%r10
lea    0x8(%r10),%r9
mov    %r9,0x8(%rdx)
mov    (%r10),%r9
jmpq   3ccd1 <OJPEGVSetField+0x3a1>
mov    0x10(%rdx),%r8
mov    (%r8,%r9,1),%r8d
add    $0x8,%r9d
mov    %r9d,(%rdx)
test   %r8d,%r8d
je     3ca93 <OJPEGVSetField+0x163>
cmp    $0x3,%r8d
ja     3ccd3 <OJPEGVSetField+0x3a3>
mov    %r8b,0x129(%rax)
movslq (%rdx),%r10
cmp    $0x2f,%r10d
jle    3ccef <OJPEGVSetField+0x3bf>
mov    0x8(%rdx),%r10
lea    0x8(%r10),%r9
mov    %r9,0x8(%rdx)
mov    (%r10),%r9
jmpq   3ccfe <OJPEGVSetField+0x3ce>
mov    0x10(%rdx),%rcx
movslq (%rcx,%r8,1),%rcx
add    $0x8,%r8d
mov    %r8d,(%rdx)
mov    %cl,0x120(%rax)
jmpq   3ca93 <OJPEGVSetField+0x163>
mov    0x10(%rdx),%rcx
movslq (%rcx,%r8,1),%rcx
add    $0x8,%r8d
mov    %r8d,(%rdx)
mov    %cx,0x1d8(%rax)
jmpq   3ca93 <OJPEGVSetField+0x163>
mov    $0x1,%esi
movzwl 0x18(%rax),%edx
mov    %rsi,%rax
mov    %rdx,%rcx
and    $0x1f,%ecx
mov    %rax,%rsi
shl    %cl,%rsi
shr    $0x5,%edx
movslq %edx,%rcx
mov    -0x8(%rbp),%rdx
or     0x38(%rdx,%rcx,8),%rsi
mov    %rsi,0x38(%rdx,%rcx,8)
mov    0x10(%rdx),%ecx
or     $0x8,%ecx
mov    %ecx,0x10(%rdx)
leaveq 
retq   
mov    0x10(%rdx),%rcx
movslq (%rcx,%r8,1),%rcx
add    $0x8,%r8d
mov    %r8d,(%rdx)
mov    %cl,0x125(%rax)
movzbl 0x124(%rax),%ecx
mov    %cx,0x108(%rdi)
movzbl 0x125(%rax),%eax
mov    %ax,0x10a(%rdi)
jmpq   3ca93 <OJPEGVSetField+0x163>
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
mov    %r10,%rsi
lea    0x351f1(%rip),%rdx        # 71e7d <module.28+0xf>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
mov    0x10(%rdx),%r9
mov    (%r9,%r10,1),%r9
add    $0x8,%r10d
mov    %r10d,(%rdx)
jmp    3cd12 <OJPEGVSetField+0x3e2>
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
mov    %r10,%rsi
lea    0x351e8(%rip),%rdx        # 71ea1 <module.28+0x33>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
mov    0x10(%rdx),%r9
mov    (%r9,%r10,1),%r9
add    $0x8,%r10d
mov    %r10d,(%rdx)
jmp    3cd2e <OJPEGVSetField+0x3fe>
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
mov    %r10,%rsi
lea    0x351e0(%rip),%rdx        # 71ec6 <module.28+0x58>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
mov    0x10(%rdx),%r9
mov    (%r9,%r10,1),%r9
add    $0x8,%r10d
mov    %r10d,(%rdx)
jmp    3cd49 <OJPEGVSetField+0x419>
mov    %ecx,%r10d
mov    (%r9,%r10,8),%rdx
mov    %rdx,0x130(%rax,%r10,8)
add    $0x1,%ecx
cmp    %r8d,%ecx
jb     3cd00 <OJPEGVSetField+0x3d0>
jmpq   3ca93 <OJPEGVSetField+0x163>
mov    %ecx,%r10d
mov    (%r9,%r10,8),%rdx
mov    %rdx,0x148(%rax,%r10,8)
add    $0x1,%ecx
cmp    %r8d,%ecx
jb     3cd1c <OJPEGVSetField+0x3ec>
jmpq   3ca93 <OJPEGVSetField+0x163>
mov    %ecx,%edx
mov    (%r9,%rdx,8),%r10
mov    %r10,0x160(%rax,%rdx,8)
add    $0x1,%ecx
cmp    %r8d,%ecx
jb     3cd38 <OJPEGVSetField+0x408>
jmpq   3ca93 <OJPEGVSetField+0x163>
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

000000000003cd60 <OJPEGPrintDir>:
push   %rbp
mov    %rsp,%rbp
sub    $0x40,%rsp
mov    %r13,-0x28(%rbp)
mov    %r14,-0x30(%rbp)
mov    %r15,-0x38(%rbp)
mov    %rdx,-0x8(%rbp)
mov    0x350(%rdi),%r8
test   %r8,%r8
jne    3cda3 <OJPEGPrintDir+0x43>
lea    0x35160(%rip),%rdi        # 71eeb <module.28+0x7d>
lea    0x35002(%rip),%rsi        # 71d94 <module.15+0x28>
mov    $0x269,%edx
lea    0x35156(%rip),%rcx        # 71ef4 <module.28+0x86>
callq  8490 <__assert_fail@plt>
mov    0x48(%rdi),%rax
and    $0x4,%rax
test   %rax,%rax
jne    3cdca <OJPEGPrintDir+0x6a>
mov    %r15,%rax
mov    %rbx,%rcx
mov    %rsi,%rbx
mov    %r14,%r9
mov    %r13,%r10
mov    %r8,%r13
mov    %r12,%r8
mov    %rdi,%r12
jmp    3ce07 <OJPEGPrintDir+0xa7>
mov    %r8,%r13
mov    %r12,%r14
mov    %rdi,%r12
mov    %rbx,%r15
mov    %rsi,%rbx
xor    %eax,%eax
lea    0x35120(%rip),%rsi        # 71f02 <module.28+0x94>
mov    0x110(%r13),%rdx
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
mov    %r15,%rcx
mov    %r14,%r8
mov    -0x8(%rbp),%rdx
mov    -0x38(%rbp),%rax
mov    -0x30(%rbp),%r9
mov    -0x28(%rbp),%r10
mov    0x48(%r12),%rsi
and    $0x8,%rsi
test   %rsi,%rsi
je     3ce49 <OJPEGPrintDir+0xe9>
mov    %rcx,%r14
mov    %r8,%r15
xor    %eax,%eax
lea    0x350fc(%rip),%rsi        # 71f20 <module.28+0xb2>
mov    0x118(%r13),%rdx
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
mov    %r14,%rcx
mov    %r15,%r8
mov    -0x8(%rbp),%rdx
mov    -0x38(%rbp),%rax
mov    -0x30(%rbp),%r9
mov    -0x28(%rbp),%r10
lea    0x35103(%rip),%r14        # 71f53 <module.28+0xe5>
xor    %r15d,%r15d
mov    0x48(%r12),%rsi
and    $0x10,%rsi
test   %rsi,%rsi
jne    3ce8e <OJPEGPrintDir+0x12e>
mov    0x48(%r12),%rsi
and    $0x20,%rsi
test   %rsi,%rsi
je     3cf02 <OJPEGPrintDir+0x1a2>
xor    %eax,%eax
lea    0x350de(%rip),%rsi        # 71f5a <module.28+0xec>
mov    %rbx,%rdi
mov    %rcx,-0x10(%rbp)
mov    %r8,-0x20(%rbp)
callq  86f0 <fprintf@plt>
jmp    3cec9 <OJPEGPrintDir+0x169>
xor    %eax,%eax
lea    0x350ad(%rip),%rsi        # 71f44 <module.28+0xd6>
mov    %rbx,%rdi
mov    %rcx,-0x18(%rbp)
mov    %r8,-0x20(%rbp)
callq  86f0 <fprintf@plt>
jmpq   3cf4c <OJPEGPrintDir+0x1ec>
movzbl %r15b,%eax
mov    0x148(%r13,%rax,8),%rdx
xor    %eax,%eax
mov    %rbx,%rdi
mov    %r14,%rsi
callq  86f0 <fprintf@plt>
add    $0x1,%r15d
movzbl 0x128(%r13),%eax
cmp    %r15b,%al
ja     3ceac <OJPEGPrintDir+0x14c>
xor    %eax,%eax
mov    %rbx,%rdi
lea    0x35076(%rip),%rsi        # 71f58 <module.28+0xea>
callq  86f0 <fprintf@plt>
xor    %r15d,%r15d
mov    -0x20(%rbp),%r8
mov    -0x10(%rbp),%rcx
mov    -0x8(%rbp),%rdx
mov    -0x38(%rbp),%rax
mov    -0x30(%rbp),%r9
mov    -0x28(%rbp),%r10
mov    0x48(%r12),%rsi
and    $0x40,%rsi
test   %rsi,%rsi
je     3cfdd <OJPEGPrintDir+0x27d>
xor    %eax,%eax
lea    0x3504d(%rip),%rsi        # 71f6a <module.28+0xfc>
mov    %rbx,%rdi
mov    %rcx,-0x10(%rbp)
mov    %r8,-0x18(%rbp)
callq  86f0 <fprintf@plt>
jmp    3cfa7 <OJPEGPrintDir+0x247>
movzbl %r15b,%eax
mov    0x130(%r13,%rax,8),%rdx
xor    %eax,%eax
mov    %rbx,%rdi
mov    %r14,%rsi
callq  86f0 <fprintf@plt>
add    $0x1,%r15d
movzbl 0x127(%r13),%eax
cmp    %r15b,%al
ja     3cf2f <OJPEGPrintDir+0x1cf>
xor    %eax,%eax
mov    %rbx,%rdi
lea    0x34ff3(%rip),%rsi        # 71f58 <module.28+0xea>
callq  86f0 <fprintf@plt>
xor    %r15d,%r15d
mov    -0x20(%rbp),%r8
mov    -0x18(%rbp),%rcx
mov    -0x8(%rbp),%rdx
mov    -0x38(%rbp),%rax
mov    -0x30(%rbp),%r9
mov    -0x28(%rbp),%r10
jmpq   3ce61 <OJPEGPrintDir+0x101>
movzbl %r15b,%eax
mov    0x160(%r13,%rax,8),%rdx
xor    %eax,%eax
mov    %rbx,%rdi
mov    %r14,%rsi
callq  86f0 <fprintf@plt>
add    $0x1,%r15d
movzbl 0x129(%r13),%eax
cmp    %r15b,%al
ja     3cf8a <OJPEGPrintDir+0x22a>
xor    %eax,%eax
mov    %rbx,%rdi
lea    0x34f98(%rip),%rsi        # 71f58 <module.28+0xea>
callq  86f0 <fprintf@plt>
mov    -0x18(%rbp),%r8
mov    -0x10(%rbp),%rcx
mov    -0x8(%rbp),%rdx
mov    -0x38(%rbp),%rax
mov    -0x30(%rbp),%r9
mov    -0x28(%rbp),%r10
mov    0x48(%r12),%rsi
and    $0x80,%rsi
test   %rsi,%rsi
je     3d023 <OJPEGPrintDir+0x2c3>
mov    %r8,%r14
mov    %rcx,%r15
xor    %eax,%eax
lea    0x34f7d(%rip),%rsi        # 71f7a <module.28+0x10c>
movzbl 0x120(%r13),%edx
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
mov    %r15,%rcx
mov    %r14,%r8
mov    -0x8(%rbp),%rdx
mov    -0x38(%rbp),%rax
mov    -0x30(%rbp),%r9
mov    -0x28(%rbp),%r10
mov    0x48(%r12),%rsi
and    $0x100,%rsi
test   %rsi,%rsi
je     3d07d <OJPEGPrintDir+0x31d>
xor    %eax,%eax
lea    0x34f4d(%rip),%rsi        # 71f8a <module.28+0x11c>
movzwl 0x1d8(%r13),%edx
mov    %rbx,%rdi
mov    %r12,-0x28(%rbp)
mov    %rbx,-0x30(%rbp)
mov    %r10,%rbx
mov    %r8,%r12
mov    %r9,%r14
mov    %rcx,%r15
callq  86f0 <fprintf@plt>
mov    %r15,%rcx
mov    %r12,%r8
mov    %r14,%r9
mov    %rbx,%r10
mov    -0x30(%rbp),%rbx
mov    -0x28(%rbp),%r12
mov    -0x8(%rbp),%rdx
mov    -0x38(%rbp),%rax
mov    0xe8(%r13),%r11
test   %r11,%r11
jne    3d09a <OJPEGPrintDir+0x33a>
mov    %rcx,%rbx
mov    %r8,%r12
mov    %r10,%r13
mov    %r9,%r14
mov    %rax,%r15
leaveq 
retq   
mov    %rbx,%rsi
mov    %rcx,%rbx
mov    %r12,%rdi
mov    %r8,%r12
mov    %r10,%r13
mov    %r9,%r14
mov    %rax,%r15
callq  *%r11
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nop

000000000003d0c0 <OJPEGFixupTags>:
push   %rbp
mov    %rsp,%rbp
mov    $0x1,%eax
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

000000000003d0d0 <OJPEGSetupDecode>:
push   %rbp
mov    %rsp,%rbp
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
lea    0x34ec1(%rip),%rsi        # 71fa5 <module.43>
lea    0x34ecb(%rip),%rdx        # 71fb6 <module.43+0x11>
callq  85a0 <TIFFWarningExt@plt>
mov    $0x1,%eax
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

000000000003d100 <OJPEGPreDecode>:
push   %rbp
mov    %rsp,%rbp
sub    $0x40,%rsp
mov    %r13,-0x8(%rbp)
mov    %r14,-0x10(%rbp)
mov    %r15,-0x18(%rbp)
mov    %rdi,-0x28(%rbp)
mov    0x350(%rdi),%rax
mov    %rax,-0x30(%rbp)
movzbl 0x122(%rax),%ecx
test   %cl,%cl
je     3d13c <OJPEGPreDecode+0x3c>
mov    %r14,%rcx
mov    %rax,%r14
mov    %r13,%rdx
mov    %rdi,%r13
jmp    3d159 <OJPEGPreDecode+0x59>
mov    %rax,%r14
mov    %rsi,%r15
mov    %rdi,%r13
callq  3dd40 <OJPEGSubsamplingCorrect>
mov    %r15,%rsi
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%rcx
mov    -0x8(%rbp),%rdx
movzbl 0x258(%r14),%eax
test   %al,%al
jne    3d18d <OJPEGPreDecode+0x8d>
mov    %rsi,-0x38(%rbp)
mov    %r13,%rdi
mov    %rdx,%r13
mov    %rcx,%r14
callq  3dfe0 <OJPEGReadHeaderInfo>
test   %eax,%eax
je     3d1bc <OJPEGPreDecode+0xbc>
mov    %r14,%rcx
mov    %r13,%rdx
mov    -0x28(%rbp),%r13
mov    -0x30(%rbp),%r14
mov    -0x38(%rbp),%rsi
movzwl %si,%eax
shl    $0x5,%rax
movzbl 0x1f8(%r14,%rax,1),%edi
test   %dil,%dil
je     3d1c0 <OJPEGPreDecode+0xc0>
mov    %r15,%r8
mov    0x10(%r13),%edi
and    $0x400,%edi
test   %edi,%edi
jne    3d1ff <OJPEGPreDecode+0xff>
mov    0x284(%r13),%r15d
jmp    3d206 <OJPEGPreDecode+0x106>
xor    %eax,%eax
leaveq 
retq   
mov    %rsi,%rdi
mov    %rsi,-0x38(%rbp)
mov    %rax,-0x20(%rbp)
mov    %rdi,%rsi
mov    %r13,%rdi
mov    %rdx,%r13
mov    %rcx,%r14
callq  3e210 <OJPEGReadSecondarySos>
test   %eax,%eax
je     3d34c <OJPEGPreDecode+0x24c>
mov    %r14,%rcx
mov    %r13,%rdx
mov    %r15,%r8
mov    -0x20(%rbp),%rax
mov    -0x28(%rbp),%r13
mov    -0x30(%rbp),%r14
mov    -0x38(%rbp),%rsi
jmp    3d1a5 <OJPEGPreDecode+0xa5>
mov    0x2ac(%r13),%r15d
movzbl 0x259(%r14),%edi
test   %dil,%dil
je     3d26e <OJPEGPreDecode+0x16e>
movzwl 0x25a(%r14),%edi
cmp    %di,%si
jne    3d229 <OJPEGPreDecode+0x129>
cmp    0x25c(%r14),%r15d
jae    3d26e <OJPEGPreDecode+0x16e>
movzbl 0x260(%r14),%edi
test   %dil,%dil
je     3d266 <OJPEGPreDecode+0x166>
mov    %r13,%rdi
mov    %rbx,-0x20(%rbp)
mov    %r12,-0x38(%rbp)
mov    %rax,%rbx
mov    %rsi,%r12
callq  3e990 <OJPEGLibjpegSessionAbort>
mov    %rbx,%rax
mov    %r12,%rsi
mov    -0x38(%rbp),%r12
mov    -0x20(%rbp),%rbx
mov    -0x18(%rbp),%r8
mov    -0x10(%rbp),%rcx
mov    -0x8(%rbp),%rdx
movb   $0x0,0x259(%r14)
movzbl 0x259(%r14),%edi
test   %dil,%dil
jne    3d379 <OJPEGPreDecode+0x279>
mov    %sil,0x10d(%r14)
mov    %si,0x25a(%r14)
movzwl %si,%esi
imul   0xe0(%r13),%esi
mov    %esi,0x25c(%r14)
movzbl 0x650(%r14),%esi
test   %sil,%sil
je     3d2cc <OJPEGPreDecode+0x1cc>
mov    0x208(%r14,%rax,1),%r9
mov    0x648(%r14),%rsi
movzwl 0x660(%r14),%edi
sub    %rdi,%rsi
cmp    %rsi,%r9
je     3d325 <OJPEGPreDecode+0x225>
mov    0x1fc(%r14,%rax,1),%esi
mov    %esi,0x638(%r14)
mov    0x200(%r14,%rax,1),%esi
mov    %esi,0x63c(%r14)
mov    0x208(%r14,%rax,1),%rsi
mov    %rsi,0x648(%r14)
movb   $0x0,0x650(%r14)
mov    0x210(%r14,%rax,1),%rax
mov    %rax,0x658(%r14)
movw   $0x0,0x660(%r14)
movq   $0x0,0x668(%r14)
mov    %r15,-0x38(%rbp)
mov    %r13,%rdi
mov    %rdx,%r13
mov    %rcx,%r14
mov    %r8,%r15
callq  3e4c0 <OJPEGWriteHeaderInfo>
test   %eax,%eax
je     3d39d <OJPEGPreDecode+0x29d>
mov    -0x38(%rbp),%r15
mov    -0x28(%rbp),%r13
mov    -0x30(%rbp),%r14
jmp    3d379 <OJPEGPreDecode+0x279>
xor    %eax,%eax
leaveq 
retq   
movzbl 0x261(%r14),%eax
test   %al,%al
je     3d3a1 <OJPEGPreDecode+0x2a1>
mov    %r13,%rdi
callq  3d540 <OJPEGPreDecodeSkipScanlines>
test   %eax,%eax
je     3d3bd <OJPEGPreDecode+0x2bd>
mov    0x25c(%r14),%eax
add    $0x1,%eax
mov    %eax,0x25c(%r14)
cmp    0x25c(%r14),%r15d
ja     3d350 <OJPEGPreDecode+0x250>
movl   $0x1,0x8(%r14)
mov    $0x1,%eax
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
leaveq 
retq   
xor    %eax,%eax
leaveq 
retq   
mov    %r13,%rdi
callq  3d3d0 <OJPEGPreDecodeSkipRaw>
test   %eax,%eax
jne    3d368 <OJPEGPreDecode+0x268>
xor    %eax,%eax
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
leaveq 
retq   
xor    %eax,%eax
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
leaveq 
retq   
nopl   (%rax)

000000000003d3d0 <OJPEGPreDecodeSkipRaw>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    0x350(%rdi),%r8
mov    0x634(%r8),%edi
mov    $0x1,%eax
lea    0x310(%r8),%r9
mov    0x62c(%r8),%ecx
test   %ecx,%ecx
jne    3d41e <OJPEGPreDecodeSkipRaw+0x4e>
mov    %r12,-0x8(%rbp)
mov    %r13,-0x10(%rbp)
mov    %r14,-0x18(%rbp)
mov    %r15,-0x20(%rbp)
mov    %rbx,%r12
mov    %rdi,%rbx
mov    %rax,%r13
mov    %r8,%r14
mov    %r9,%r15
jmp    3d48c <OJPEGPreDecodeSkipRaw+0xbc>
mov    0x5e8(%r8),%esi
mov    %rsi,%rdx
sub    %ecx,%edx
cmp    %edi,%edx
jae    3d4b3 <OJPEGPreDecodeSkipRaw+0xe3>
movl   $0x0,0x62c(%r8)
sub    %esi,%ecx
add    %edi,%ecx
mov    %r12,-0x8(%rbp)
mov    %r13,-0x10(%rbp)
mov    %r14,-0x18(%rbp)
mov    %r15,-0x20(%rbp)
mov    %rbx,%r12
mov    %rcx,%rbx
mov    %rax,%r13
mov    %r8,%r14
mov    %r9,%r15
jmp    3d48c <OJPEGPreDecodeSkipRaw+0xbc>
mov    0x620(%r14),%rdx
movzbl 0x125(%r14),%ecx
shl    $0x3,%ecx
mov    %r14,%rdi
mov    %r15,%rsi
callq  414d0 <jpeg_read_raw_data_encap>
test   %eax,%eax
je     3d4c2 <OJPEGPreDecodeSkipRaw+0xf2>
mov    0x5e8(%r14),%eax
sub    %eax,%ebx
mov    0x5e8(%r14),%eax
cmp    %ebx,%eax
jbe    3d462 <OJPEGPreDecodeSkipRaw+0x92>
test   %ebx,%ebx
jne    3d4d9 <OJPEGPreDecodeSkipRaw+0x109>
mov    %r13,%rax
mov    %r12,%rbx
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
leaveq 
retq   
add    %edi,%ecx
mov    %ecx,0x62c(%r8)
cmp    %ecx,%esi
je     3d511 <OJPEGPreDecodeSkipRaw+0x141>
leaveq 
retq   
mov    %r12,%rbx
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
xor    %eax,%eax
leaveq 
retq   
mov    0x620(%r14),%rdx
movzbl 0x125(%r14),%ecx
shl    $0x3,%ecx
mov    %r15,%rsi
mov    %r14,%rdi
callq  414d0 <jpeg_read_raw_data_encap>
test   %eax,%eax
jne    3d51e <OJPEGPreDecodeSkipRaw+0x14e>
mov    %r12,%rbx
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
xor    %eax,%eax
leaveq 
retq   
movl   $0x0,0x62c(%r8)
leaveq 
retq   
mov    %ebx,0x62c(%r14)
mov    %r13,%rax
mov    %r12,%rbx
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
leaveq 
retq   
nopl   (%rax)

000000000003d540 <OJPEGPreDecodeSkipScanlines>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
xor    %ecx,%ecx
mov    0x350(%rdi),%r13
lea    0x310(%r13),%r14
lea    0x1678(%r13),%rdx
mov    $0x1,%r15d
mov    0x1678(%r13),%rax
test   %rax,%rax
je     3d58d <OJPEGPreDecodeSkipScanlines+0x4d>
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %rcx,%rbx
mov    %rdx,%r12
jmp    3d5dd <OJPEGPreDecodeSkipScanlines+0x9d>
mov    0x630(%r13),%eax
mov    %rdx,-0x30(%rbp)
mov    %rdi,%r15
mov    %rax,%rdi
callq  8440 <_TIFFmalloc@plt>
mov    %rax,0x1678(%r13)
test   %rax,%rax
je     3d601 <OJPEGPreDecodeSkipScanlines+0xc1>
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    $0x1,%r15d
xor    %ebx,%ebx
mov    -0x30(%rbp),%r12
jmp    3d5dd <OJPEGPreDecodeSkipScanlines+0x9d>
mov    %r13,%rdi
mov    %r14,%rsi
mov    %r12,%rdx
mov    %r15,%rcx
callq  41490 <jpeg_read_scanlines_encap>
test   %eax,%eax
je     3d62d <OJPEGPreDecodeSkipScanlines+0xed>
add    $0x1,%ebx
mov    0x634(%r13),%eax
cmp    %ebx,%eax
ja     3d5c5 <OJPEGPreDecodeSkipScanlines+0x85>
mov    %r15,%rax
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
lea    0x34a35(%rip),%rsi        # 72046 <module.45>
lea    0x34a4a(%rip),%rdx        # 72062 <module.45+0x1c>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
leaveq 
retq   
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
xor    %eax,%eax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)

000000000003d650 <OJPEGDecode>:
push   %rbp
mov    %rsp,%rbp
mov    0x350(%rdi),%rcx
movslq 0x8(%rcx),%rax
test   %eax,%eax
jne    3d683 <OJPEGDecode+0x33>
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
lea    0x349fd(%rip),%rsi        # 72070 <module.47>
lea    0x34a02(%rip),%rdx        # 7207c <module.47+0xc>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
movzbl 0x261(%rcx),%eax
test   %al,%al
je     3d69b <OJPEGDecode+0x4b>
callq  3d8f0 <OJPEGDecodeScanlines>
test   %eax,%eax
jne    3d6a8 <OJPEGDecode+0x58>
xor    %eax,%eax
leaveq 
retq   
callq  3d6c0 <OJPEGDecodeRaw>
test   %eax,%eax
jne    3d6af <OJPEGDecode+0x5f>
xor    %eax,%eax
leaveq 
retq   
mov    $0x1,%eax
leaveq 
retq   
mov    $0x1,%eax
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)

000000000003d6c0 <OJPEGDecodeRaw>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    %rdx,%rax
mov    %r14,%rcx
mov    %rsi,%r14
mov    %rbx,%r8
mov    %r15,%rbx
mov    %r13,%r9
xor    %r13d,%r13d
mov    0x350(%rdi),%r15
mov    0x630(%r15),%r10d
cqto   
mov    %r12,%r11
mov    %rax,%r12
idiv   %r10
test   %rdx,%rdx
jne    3d71d <OJPEGDecodeRaw+0x5d>
test   %r12,%r12
jle    3d752 <OJPEGDecodeRaw+0x92>
lea    0x310(%r15),%rax
mov    %r8,-0x8(%rbp)
mov    %r11,-0x10(%rbp)
mov    %r9,-0x18(%rbp)
mov    %rcx,-0x20(%rbp)
mov    %rbx,-0x28(%rbp)
jmp    3d774 <OJPEGDecodeRaw+0xb4>
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
mov    %r11,%r12
mov    %r9,%r13
mov    %rcx,%r14
mov    %r8,%r15
lea    0x34974(%rip),%rsi        # 720ad <module.49>
lea    0x3497c(%rip),%rdx        # 720bc <module.49+0xf>
callq  8a00 <TIFFErrorExt@plt>
mov    %r15,%rcx
mov    %rbx,%r15
mov    %rcx,%rbx
xor    %eax,%eax
leaveq 
retq   
lea    0x34980(%rip),%rdi        # 720d9 <module.49+0x2c>
lea    0x34634(%rip),%rsi        # 71d94 <module.15+0x28>
mov    $0x33d,%edx
lea    0x34972(%rip),%rcx        # 720de <module.49+0x31>
callq  8490 <__assert_fail@plt>
add    %rcx,%r14
mov    0x62c(%r15),%ecx
test   %ecx,%ecx
jne    3d7a6 <OJPEGDecodeRaw+0xe6>
mov    0x620(%r15),%rdx
movzbl 0x125(%r15),%ecx
shl    $0x3,%ecx
mov    %rax,%rbx
mov    %r15,%rdi
mov    %rbx,%rsi
callq  414d0 <jpeg_read_raw_data_encap>
test   %eax,%eax
je     3d7f4 <OJPEGDecodeRaw+0x134>
mov    %rbx,%rax
mov    0x62c(%r15),%ecx
mov    %rcx,%rdx
imul   0x5e4(%r15),%edx
mov    %edx,%r9d
mov    %r9,%rdx
add    0x610(%r15),%rdx
add    0x608(%r15),%r9
movzbl 0x125(%r15),%esi
imul   %esi,%ecx
imul   0x5dc(%r15),%ecx
mov    %ecx,%r10d
add    0x600(%r15),%r10
mov    %r13,%r11
mov    %r14,%rcx
jmpq   3d879 <OJPEGDecodeRaw+0x1b9>
mov    %r13,%rax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
movzbl (%rcx),%esi
mov    %sil,(%rdi)
add    $0x1,%rcx
add    $0x1,%rdi
add    $0x1,%ebx
movzbl 0x124(%r15),%esi
cmp    %bl,%sil
ja     3d80d <OJPEGDecodeRaw+0x14d>
add    $0x1,%r8d
mov    0x5dc(%r15),%ebx
sub    %esi,%ebx
mov    %ebx,%esi
add    %rsi,%rcx
movzbl 0x125(%r15),%esi
cmp    %r8b,%sil
ja     3d8d8 <OJPEGDecodeRaw+0x218>
movzbl (%r9),%esi
lea    0x1(%rdx),%r8
add    $0x1,%r9
add    $0x1,%r11d
lea    0x2(%rdi),%rcx
movzbl 0x124(%r15),%ebx
mov    %sil,(%rdi)
movzbl (%rdx),%edx
mov    %dl,0x1(%rdi)
add    %rbx,%r10
mov    %r8,%rdx
mov    0x628(%r15),%esi
cmp    %r11d,%esi
ja     3d8e0 <OJPEGDecodeRaw+0x220>
mov    0x62c(%r15),%ecx
add    $0x1,%ecx
mov    %ecx,0x62c(%r15)
cmp    0x5e8(%r15),%ecx
jne    3d8aa <OJPEGDecodeRaw+0x1ea>
movl   $0x0,0x62c(%r15)
mov    0x630(%r15),%ecx
sub    %rcx,%r12
test   %r12,%r12
jg     3d771 <OJPEGDecodeRaw+0xb1>
mov    $0x1,%eax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
mov    %r13,%rbx
jmpq   3d81e <OJPEGDecodeRaw+0x15e>
mov    %rcx,%rdi
mov    %r10,%rcx
mov    %r13,%r8
jmpq   3d83d <OJPEGDecodeRaw+0x17d>
xchg   %ax,%ax

000000000003d8f0 <OJPEGDecodeScanlines>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    %rdx,%rax
mov    %r12,%rcx
mov    %r15,%r8
mov    %r14,%r15
mov    %r13,%r14
mov    %rbx,%r13
mov    0x350(%rdi),%r12
mov    0x630(%r12),%r9d
cqto   
mov    %rax,%rbx
idiv   %r9
test   %rdx,%rdx
jne    3d94a <OJPEGDecodeScanlines+0x5a>
test   %rbx,%rbx
jg     3d97f <OJPEGDecodeScanlines+0x8f>
lea    0x347a7(%rip),%rdi        # 720d9 <module.49+0x2c>
lea    0x3445b(%rip),%rsi        # 71d94 <module.15+0x28>
mov    $0x36d,%edx
lea    0x347bd(%rip),%rcx        # 72102 <module.53+0x15>
callq  8490 <__assert_fail@plt>
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
mov    %r8,%rbx
mov    %rcx,%r12
lea    0x3478d(%rip),%rsi        # 720ed <module.53>
lea    0x34755(%rip),%rdx        # 720bc <module.49+0xf>
callq  8a00 <TIFFErrorExt@plt>
mov    %r13,%rcx
mov    %r14,%r13
mov    %r15,%r14
mov    %rbx,%r15
mov    %rcx,%rbx
xor    %eax,%eax
leaveq 
retq   
mov    %rsi,-0x30(%rbp)
lea    0x310(%r12),%rdx
lea    -0x30(%rbp),%rsi
mov    $0x1,%eax
mov    %r13,-0x8(%rbp)
mov    %rcx,-0x10(%rbp)
mov    %r14,-0x18(%rbp)
mov    %r15,-0x20(%rbp)
mov    %r8,-0x28(%rbp)
mov    %rax,%r13
mov    %rdx,%r14
mov    %rsi,%r15
jmp    3d9ce <OJPEGDecodeScanlines+0xde>
mov    0x630(%r12),%ecx
mov    %rcx,%rax
add    -0x30(%rbp),%rax
mov    %rax,-0x30(%rbp)
sub    %rcx,%rbx
test   %rbx,%rbx
jle    3d9fb <OJPEGDecodeScanlines+0x10b>
mov    %r12,%rdi
mov    %r14,%rsi
mov    %r15,%rdx
mov    %r13,%rcx
callq  41490 <jpeg_read_scanlines_encap>
test   %eax,%eax
jne    3d9b3 <OJPEGDecodeScanlines+0xc3>
xor    %eax,%eax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
mov    %r13,%rax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nop

000000000003da20 <OJPEGPostDecode>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    0x350(%rdi),%rcx
mov    0x25c(%rcx),%eax
add    $0x1,%eax
mov    %eax,0x25c(%rcx)
mov    0xe0(%rdi),%esi
xor    %edx,%edx
div    %esi
test   %edx,%edx
je     3da4e <OJPEGPostDecode+0x2e>
leaveq 
retq   
movzbl 0x260(%rcx),%eax
test   %al,%al
jne    3da78 <OJPEGPostDecode+0x58>
lea    0x346b7(%rip),%rdi        # 72117 <module.53+0x2a>
lea    0x3432d(%rip),%rsi        # 71d94 <module.15+0x28>
mov    $0x383,%edx
lea    0x346c2(%rip),%rcx        # 72135 <module.53+0x48>
callq  8490 <__assert_fail@plt>
mov    %r15,-0x8(%rbp)
mov    %rcx,%r15
callq  3e990 <OJPEGLibjpegSessionAbort>
movb   $0x0,0x259(%r15)
mov    -0x8(%rbp),%r15
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   (%rax)

000000000003daa0 <OJPEGSetupEncode>:
push   %rbp
mov    %rsp,%rbp
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
lea    0x34691(%rip),%rsi        # 72145 <module.57>
lea    0x3469b(%rip),%rdx        # 72156 <module.57+0x11>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nop

000000000003dad0 <OJPEGPreEncode>:
push   %rbp
mov    %rsp,%rbp
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
lea    0x346b7(%rip),%rsi        # 7219b <module.59>
lea    0x3466b(%rip),%rdx        # 72156 <module.57+0x11>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nop

000000000003db00 <OJPEGEncode>:
push   %rbp
mov    %rsp,%rbp
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
lea    0x34696(%rip),%rsi        # 721aa <module.60>
lea    0x3463b(%rip),%rdx        # 72156 <module.57+0x11>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nop

000000000003db30 <OJPEGPostEncode>:
push   %rbp
mov    %rsp,%rbp
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
lea    0x34672(%rip),%rsi        # 721b6 <module.61>
lea    0x3460b(%rip),%rdx        # 72156 <module.57+0x11>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nop

000000000003db60 <OJPEGCleanup>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    0x350(%rdi),%rcx
test   %rcx,%rcx
jne    3db7e <OJPEGCleanup+0x1e>
leaveq 
retq   
mov    0xd8(%rcx),%rax
mov    %rax,0x410(%rdi)
mov    0xe0(%rcx),%rax
mov    %rax,0x408(%rdi)
mov    0xe8(%rcx),%rax
mov    %rax,0x418(%rdi)
mov    0x178(%rcx),%rax
test   %rax,%rax
jne    3dbbf <OJPEGCleanup+0x5f>
mov    %r14,%rax
mov    %rdi,%r14
mov    %rcx,%r15
jmp    3dbd1 <OJPEGCleanup+0x71>
mov    %rdi,%r14
mov    %rax,%rdi
mov    %rcx,%r15
callq  8bb0 <_TIFFfree@plt>
mov    -0x8(%rbp),%rax
mov    0x180(%r15),%rdi
test   %rdi,%rdi
je     3dbe6 <OJPEGCleanup+0x86>
callq  8bb0 <_TIFFfree@plt>
mov    -0x8(%rbp),%rax
mov    0x188(%r15),%rdi
test   %rdi,%rdi
je     3dbfb <OJPEGCleanup+0x9b>
callq  8bb0 <_TIFFfree@plt>
mov    -0x8(%rbp),%rax
mov    0x190(%r15),%rdi
test   %rdi,%rdi
je     3dc10 <OJPEGCleanup+0xb0>
callq  8bb0 <_TIFFfree@plt>
mov    -0x8(%rbp),%rax
mov    0x198(%r15),%rdi
test   %rdi,%rdi
je     3dc25 <OJPEGCleanup+0xc5>
callq  8bb0 <_TIFFfree@plt>
mov    -0x8(%rbp),%rax
mov    0x1a0(%r15),%rdi
test   %rdi,%rdi
je     3dc3a <OJPEGCleanup+0xda>
callq  8bb0 <_TIFFfree@plt>
mov    -0x8(%rbp),%rax
mov    0x1a8(%r15),%rdi
test   %rdi,%rdi
je     3dc4f <OJPEGCleanup+0xef>
callq  8bb0 <_TIFFfree@plt>
mov    -0x8(%rbp),%rax
mov    0x1b0(%r15),%rdi
test   %rdi,%rdi
je     3dc64 <OJPEGCleanup+0x104>
callq  8bb0 <_TIFFfree@plt>
mov    -0x8(%rbp),%rax
mov    0x1b8(%r15),%rdi
test   %rdi,%rdi
je     3dc79 <OJPEGCleanup+0x119>
callq  8bb0 <_TIFFfree@plt>
mov    -0x8(%rbp),%rax
mov    0x1c0(%r15),%rdi
test   %rdi,%rdi
je     3dc8e <OJPEGCleanup+0x12e>
callq  8bb0 <_TIFFfree@plt>
mov    -0x8(%rbp),%rax
mov    0x1c8(%r15),%rdi
test   %rdi,%rdi
je     3dca3 <OJPEGCleanup+0x143>
callq  8bb0 <_TIFFfree@plt>
mov    -0x8(%rbp),%rax
mov    0x1d0(%r15),%rdi
test   %rdi,%rdi
je     3dcb8 <OJPEGCleanup+0x158>
callq  8bb0 <_TIFFfree@plt>
mov    -0x8(%rbp),%rax
movzbl 0x260(%r15),%ecx
test   %cl,%cl
je     3dcd0 <OJPEGCleanup+0x170>
mov    %r14,%rdi
callq  3e990 <OJPEGLibjpegSessionAbort>
mov    -0x8(%rbp),%rax
mov    0x5f8(%r15),%rdi
test   %rdi,%rdi
je     3dce5 <OJPEGCleanup+0x185>
callq  8bb0 <_TIFFfree@plt>
mov    -0x8(%rbp),%rax
mov    0x620(%r15),%rdi
test   %rdi,%rdi
je     3dcfa <OJPEGCleanup+0x19a>
callq  8bb0 <_TIFFfree@plt>
mov    -0x8(%rbp),%rax
mov    0x1678(%r15),%rdi
test   %rdi,%rdi
je     3dd0f <OJPEGCleanup+0x1af>
callq  8bb0 <_TIFFfree@plt>
mov    -0x8(%rbp),%rax
mov    %r15,%rdi
mov    %rax,%r15
callq  8bb0 <_TIFFfree@plt>
mov    %r14,%rdi
mov    %r15,%r14
movq   $0x0,0x350(%rdi)
callq  8740 <_TIFFSetDefaultCompressionState@plt>
mov    -0x10(%rbp),%r15
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)

000000000003dd40 <OJPEGSubsamplingCorrect>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %r14,-0x18(%rbp)
mov    %r15,-0x20(%rbp)
mov    0x350(%rdi),%r14
mov    %rdi,%r15
callq  8c70 <_TIFFFillStriles@plt>
movzbl 0x122(%r14),%eax
test   %al,%al
je     3dd8a <OJPEGSubsamplingCorrect+0x4a>
lea    0x3446c(%rip),%rdi        # 721de <module.62+0x18>
lea    0x3401b(%rip),%rsi        # 71d94 <module.15+0x28>
mov    $0x3e5,%edx
lea    0x34478(%rip),%rcx        # 721fd <module.62+0x37>
callq  8490 <__assert_fail@plt>
lea    0x34435(%rip),%rsi        # 721c6 <module.62>
movzwl 0x82(%r15),%eax
cmp    $0x3,%ax
jne    3de71 <OJPEGSubsamplingCorrect+0x131>
movzwl 0x7a(%r15),%eax
cmp    $0x6,%ax
jne    3de67 <OJPEGSubsamplingCorrect+0x127>
movzbl 0x124(%r14),%ecx
movzbl 0x125(%r14),%eax
movb   $0x1,0x122(%r14)
movb   $0x1,0x121(%r14)
mov    %r15,%rdi
mov    %r12,-0x8(%rbp)
mov    %r13,-0x10(%rbp)
mov    %rax,%r12
mov    %rcx,%r13
callq  3e9f0 <OJPEGReadHeaderInfoSec>
movzbl 0x126(%r14),%eax
test   %al,%al
je     3de04 <OJPEGSubsamplingCorrect+0xc4>
movb   $0x1,0x124(%r14)
movb   $0x1,0x125(%r14)
movb   $0x0,0x121(%r14)
movzbl 0x124(%r14),%eax
cmp    %r13b,%al
jne    3de26 <OJPEGSubsamplingCorrect+0xe6>
movzbl 0x125(%r14),%eax
cmp    %r12b,%al
je     3de36 <OJPEGSubsamplingCorrect+0xf6>
movzbl 0x126(%r14),%eax
test   %al,%al
je     3debc <OJPEGSubsamplingCorrect+0x17c>
movzbl 0x126(%r14),%eax
test   %al,%al
jne    3df0c <OJPEGSubsamplingCorrect+0x1cc>
lea    0x34379(%rip),%r12        # 721c6 <module.62>
movzbl 0x126(%r14),%eax
test   %al,%al
je     3df42 <OJPEGSubsamplingCorrect+0x202>
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
jmp    3deaa <OJPEGSubsamplingCorrect+0x16a>
cmp    $0xa,%ax
je     3ddb2 <OJPEGSubsamplingCorrect+0x72>
movzbl 0x123(%r14),%eax
test   %al,%al
je     3de92 <OJPEGSubsamplingCorrect+0x152>
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
lea    0x34388(%rip),%rdx        # 72215 <module.62+0x4f>
callq  85a0 <TIFFWarningExt@plt>
movb   $0x1,0x124(%r14)
movb   $0x1,0x125(%r14)
movb   $0x0,0x126(%r14)
movb   $0x1,0x122(%r14)
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
leaveq 
retq   
movzbl 0x123(%r14),%eax
test   %al,%al
je     3df64 <OJPEGSubsamplingCorrect+0x224>
sub    $0x10,%rsp
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
lea    0x3441c(%rip),%rdx        # 722fc <module.62+0x136>
movzbl 0x124(%r14),%ecx
movzbl 0x125(%r14),%r8d
mov    %r12d,(%rsp)
lea    0x342cb(%rip),%rsi        # 721c6 <module.62>
mov    %r13,%r9
callq  85a0 <TIFFWarningExt@plt>
add    $0x10,%rsp
jmpq   3de36 <OJPEGSubsamplingCorrect+0xf6>
movzbl 0x123(%r14),%eax
test   %al,%al
je     3df95 <OJPEGSubsamplingCorrect+0x255>
mov    %r13,%rcx
mov    %r12,%r8
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
lea    0x34539(%rip),%rdx        # 72467 <module.62+0x2a1>
lea    0x34291(%rip),%r12        # 721c6 <module.62>
mov    %r12,%rsi
callq  85a0 <TIFFWarningExt@plt>
jmpq   3de4d <OJPEGSubsamplingCorrect+0x10d>
movzbl 0x124(%r14),%ecx
movzbl 0x125(%r14),%r8d
cmp    %cl,%r8b
ja     3dfb9 <OJPEGSubsamplingCorrect+0x279>
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
jmpq   3deaa <OJPEGSubsamplingCorrect+0x16a>
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
lea    0x342ed(%rip),%rdx        # 72261 <module.62+0x9b>
movzbl 0x124(%r14),%ecx
movzbl 0x125(%r14),%r8d
lea    0x3423b(%rip),%rsi        # 721c6 <module.62>
callq  85a0 <TIFFWarningExt@plt>
jmpq   3de36 <OJPEGSubsamplingCorrect+0xf6>
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
lea    0x343dc(%rip),%rdx        # 72381 <module.62+0x1bb>
lea    0x3421a(%rip),%r12        # 721c6 <module.62>
mov    %r12,%rsi
callq  85a0 <TIFFWarningExt@plt>
jmpq   3de4d <OJPEGSubsamplingCorrect+0x10d>
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
mov    %r12,%rsi
lea    0x3456b(%rip),%rdx        # 72537 <module.62+0x371>
callq  85a0 <TIFFWarningExt@plt>
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
jmpq   3deaa <OJPEGSubsamplingCorrect+0x16a>
xchg   %ax,%ax

000000000003dfe0 <OJPEGReadHeaderInfo>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    0x350(%rdi),%rcx
movzbl 0x258(%rcx),%eax
test   %al,%al
je     3e019 <OJPEGReadHeaderInfo+0x39>
lea    0x3457d(%rip),%rdi        # 7257e <module.71+0x14>
lea    0x33d8c(%rip),%rsi        # 71d94 <module.15+0x28>
mov    $0x418,%edx
lea    0x34581(%rip),%rcx        # 72595 <module.71+0x2b>
callq  8490 <__assert_fail@plt>
mov    0x58(%rdi),%esi
mov    %esi,0xf8(%rcx)
mov    0x5c(%rdi),%edx
mov    %edx,0xfc(%rcx)
mov    0x10(%rdi),%eax
and    $0x400,%eax
test   %eax,%eax
jne    3e051 <OJPEGReadHeaderInfo+0x71>
mov    %esi,0x100(%rcx)
mov    0x84(%rdi),%eax
mov    %eax,0x104(%rcx)
mov    %edx,0x108(%rcx)
jmp    3e078 <OJPEGReadHeaderInfo+0x98>
mov    0x64(%rdi),%eax
mov    %eax,0x100(%rcx)
mov    0x68(%rdi),%esi
mov    %esi,0x104(%rcx)
lea    -0x1(%rdx,%rsi,1),%eax
xor    %edx,%edx
div    %esi
imul   0x104(%rcx),%eax
mov    %eax,0x108(%rcx)
lea    0x344eb(%rip),%rsi        # 7256a <module.71>
movzwl 0x82(%rdi),%eax
cmp    $0x1,%ax
je     3e0b6 <OJPEGReadHeaderInfo+0xd6>
cmp    $0x3,%ax
jne    3e105 <OJPEGReadHeaderInfo+0x125>
movb   $0x3,0x10c(%rcx)
movb   $0x0,0x10d(%rcx)
movzwl 0xaa(%rdi),%eax
cmp    $0x1,%ax
je     3e125 <OJPEGReadHeaderInfo+0x145>
movb   $0x1,0x10e(%rcx)
jmp    3e0d9 <OJPEGReadHeaderInfo+0xf9>
movb   $0x1,0x10c(%rcx)
movb   $0x0,0x10d(%rcx)
movb   $0x1,0x10e(%rcx)
movb   $0x1,0x124(%rcx)
movb   $0x1,0x125(%rcx)
mov    0x104(%rcx),%eax
mov    0xfc(%rcx),%edx
cmp    %eax,%edx
ja     3e12e <OJPEGReadHeaderInfo+0x14e>
mov    %r15,-0x8(%rbp)
mov    %rcx,%r15
callq  3e9f0 <OJPEGReadHeaderInfoSec>
test   %eax,%eax
jne    3e194 <OJPEGReadHeaderInfo+0x1b4>
mov    -0x8(%rbp),%r15
xor    %eax,%eax
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
lea    0x34494(%rip),%rdx        # 725a9 <module.71+0x3f>
movzbl 0x10c(%rcx),%ecx
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
movb   $0x3,0x10e(%rcx)
jmp    3e0d9 <OJPEGReadHeaderInfo+0xf9>
movzbl 0x125(%rcx),%r8d
shl    $0x3,%r8d
xor    %edx,%edx
div    %r8d
test   %edx,%edx
jne    3e1f2 <OJPEGReadHeaderInfo+0x212>
xor    %r9d,%r9d
mov    0x100(%rcx),%r10d
movzbl 0x124(%rcx),%esi
mov    0x104(%rcx),%eax
movzbl 0x125(%rcx),%r8d
shl    $0x3,%r8d
mov    %r9,%rdx
div    %r8d
lea    -0x1(%r10,%rsi,8),%edx
shl    $0x3,%esi
mov    %rax,%r8
mov    %rdx,%rax
mov    %r9,%rdx
div    %esi
imul   %eax,%r8d
mov    %r8w,0x1d8(%rcx)
jmpq   3e0e9 <OJPEGReadHeaderInfo+0x109>
movb   $0x1,0x1f8(%r15)
mov    0x638(%r15),%eax
mov    %eax,0x1fc(%r15)
mov    0x63c(%r15),%eax
mov    %eax,0x200(%r15)
mov    0x648(%r15),%rax
movzwl 0x660(%r15),%ecx
sub    %rcx,%rax
mov    %rax,0x208(%r15)
add    0x658(%r15),%rcx
mov    %rcx,0x210(%r15)
movb   $0x1,0x258(%r15)
mov    $0x1,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
lea    0x343e4(%rip),%rdx        # 725e6 <module.71+0x7c>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

000000000003e210 <OJPEGReadSecondarySos>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    0x350(%rdi),%r8
lea    0x33b6e(%rip),%r9        # 71d94 <module.15+0x28>
lea    0x343fb(%rip),%rcx        # 72628 <module.71+0xbe>
test   %si,%si
jne    3e246 <OJPEGReadSecondarySos+0x36>
mov    %r9,%rsi
lea    0x343e8(%rip),%rdi        # 72624 <module.71+0xba>
mov    $0x456,%edx
callq  8490 <__assert_fail@plt>
cmp    $0x2,%si
jbe    3e260 <OJPEGReadSecondarySos+0x50>
mov    %r9,%rsi
lea    0x343e8(%rip),%rdi        # 7263e <module.71+0xd4>
mov    $0x457,%edx
callq  8490 <__assert_fail@plt>
movzbl 0x1f8(%r8),%eax
test   %al,%al
jne    3e280 <OJPEGReadSecondarySos+0x70>
mov    %r9,%rsi
lea    0x343cc(%rip),%rdi        # 72642 <module.71+0xd8>
mov    $0x458,%edx
callq  8490 <__assert_fail@plt>
movzwl %si,%eax
shl    $0x5,%rax
movzbl 0x1f8(%r8,%rax,1),%eax
test   %al,%al
je     3e2a8 <OJPEGReadSecondarySos+0x98>
mov    %r9,%rsi
lea    0x343ba(%rip),%rdi        # 72658 <module.71+0xee>
mov    $0x459,%edx
callq  8490 <__assert_fail@plt>
lea    0xff(%rsi),%ecx
jmp    3e2b6 <OJPEGReadSecondarySos+0xa6>
add    $0xff,%ecx
mov    %cl,0x10d(%r8)
movzbl %cl,%eax
shl    $0x5,%rax
movzbl 0x1f8(%r8,%rax,1),%edx
test   %dl,%dl
je     3e2b0 <OJPEGReadSecondarySos+0xa0>
lea    0x1f8(%r8),%rdx
mov    0x4(%rdx,%rax,1),%ecx
mov    %ecx,0x638(%r8)
mov    0x8(%rdx,%rax,1),%ecx
mov    %ecx,0x63c(%r8)
mov    0x10(%rdx,%rax,1),%rcx
mov    %rcx,0x648(%r8)
movb   $0x0,0x650(%r8)
mov    0x18(%rdx,%rax,1),%rax
mov    %rax,0x658(%r8)
movw   $0x0,0x660(%r8)
movq   $0x0,0x668(%r8)
lea    -0x29(%rbp),%rax
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rdi,%rbx
mov    %r8,%r12
mov    %rax,%r13
mov    %rsi,%r14
mov    %rdx,%r15
jmpq   3e416 <OJPEGReadSecondarySos+0x206>
cmp    $0xda,%al
jne    3e448 <OJPEGReadSecondarySos+0x238>
movzbl 0x10d(%r12),%eax
add    $0x1,%eax
mov    %al,0x10d(%r12)
mov    %rbx,%rdi
callq  3fa70 <OJPEGReadHeaderInfoSecStreamSos>
test   %eax,%eax
je     3e46f <OJPEGReadSecondarySos+0x25f>
movzbl 0x10d(%r12),%eax
shl    $0x5,%rax
movb   $0x1,(%r15,%rax,1)
mov    0x638(%r12),%ecx
movzbl 0x10d(%r12),%eax
shl    $0x5,%rax
mov    %ecx,0x1fc(%r12,%rax,1)
mov    0x63c(%r12),%ecx
movzbl 0x10d(%r12),%eax
shl    $0x5,%rax
mov    %ecx,0x200(%r12,%rax,1)
mov    0x648(%r12),%rax
movzwl 0x660(%r12),%ecx
sub    %rcx,%rax
movzbl 0x10d(%r12),%ecx
shl    $0x5,%rcx
mov    %rax,0x208(%r12,%rcx,1)
movzwl 0x660(%r12),%ecx
add    0x658(%r12),%rcx
movzbl 0x10d(%r12),%eax
shl    $0x5,%rax
mov    %rcx,0x210(%r12,%rax,1)
movzbl 0x10d(%r12),%eax
cmp    %ax,%r14w
ja     3e448 <OJPEGReadSecondarySos+0x238>
mov    $0x1,%eax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
movzbl -0x29(%rbp),%eax
cmp    $0xff,%al
je     3e493 <OJPEGReadSecondarySos+0x283>
mov    %r12,%rdi
mov    %r13,%rsi
callq  40730 <OJPEGReadByte>
test   %eax,%eax
jne    3e440 <OJPEGReadSecondarySos+0x230>
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
xor    %eax,%eax
leaveq 
retq   
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
xor    %eax,%eax
leaveq 
retq   
movzbl -0x29(%rbp),%eax
cmp    $0xfe,%al
jbe    3e34f <OJPEGReadSecondarySos+0x13f>
mov    %r12,%rdi
mov    %r13,%rsi
callq  40730 <OJPEGReadByte>
test   %eax,%eax
jne    3e487 <OJPEGReadSecondarySos+0x277>
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
xor    %eax,%eax
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

000000000003e4c0 <OJPEGWriteHeaderInfo>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
xor    %eax,%eax
mov    0x350(%rdi),%rdx
movzbl 0x260(%rdx),%ecx
test   %cl,%cl
je     3e4de <OJPEGWriteHeaderInfo+0x1e>
leaveq 
retq   
movl   $0x0,0xe70(%rdx)
movb   $0x0,0x1da(%rdx)
lea    0x268(%rdx),%rax
mov    %rax,%rcx
mov    %r13,-0x8(%rbp)
mov    %r14,-0x10(%rbp)
mov    %r15,-0x18(%rbp)
mov    %rdx,%r13
mov    %rdi,%r14
mov    %rcx,%rdi
mov    %rax,%r15
callq  89f0 <jpeg_std_error@plt>
lea    0x3013(%rip),%rax        # 41530 <OJPEGLibjpegJpegErrorMgrOutputMessage>
mov    %rax,0x278(%r13)
lea    0x3055(%rip),%rax        # 41580 <OJPEGLibjpegJpegErrorMgrErrorExit>
mov    %rax,(%r15)
mov    %r15,0x310(%r13)
mov    %r14,0x328(%r13)
lea    0x310(%r13),%r15
mov    %r13,%rdi
mov    %r15,%rsi
callq  413e0 <jpeg_create_decompress_encap>
test   %eax,%eax
jne    3e562 <OJPEGWriteHeaderInfo+0xa2>
xor    %eax,%eax
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
leaveq 
retq   
movb   $0x1,0x260(%r13)
movq   $0x0,0x5a8(%r13)
lea    0x3064(%rip),%rax        # 415e0 <OJPEGLibjpegJpegSourceMgrInitSource>
mov    %rax,0x5b0(%r13)
lea    0x3066(%rip),%rax        # 415f0 <OJPEGLibjpegJpegSourceMgrFillInputBuffer>
mov    %rax,0x5b8(%r13)
lea    0x30e8(%rip),%rax        # 41680 <OJPEGLibjpegJpegSourceMgrSkipInputData>
mov    %rax,0x5c0(%r13)
lea    0x311a(%rip),%rax        # 416c0 <OJPEGLibjpegJpegSourceMgrResyncToRestart>
mov    %rax,0x5c8(%r13)
lea    0x314c(%rip),%rax        # 41700 <OJPEGLibjpegJpegSourceMgrTermSource>
mov    %rax,0x5d0(%r13)
lea    0x5a0(%r13),%rax
mov    %rax,0x338(%r13)
mov    $0x1,%edx
mov    %r13,%rdi
mov    %r15,%rsi
callq  41420 <jpeg_read_header_encap>
test   %eax,%eax
jne    3e5ed <OJPEGWriteHeaderInfo+0x12d>
xor    %eax,%eax
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
leaveq 
retq   
movzbl 0x126(%r13),%eax
test   %al,%al
jne    3e65a <OJPEGWriteHeaderInfo+0x19a>
movzbl 0x10e(%r13),%eax
cmp    $0x1,%al
jbe    3e65a <OJPEGWriteHeaderInfo+0x19a>
movl   $0x1,0x36c(%r13)
movl   $0x0,0x374(%r13)
movb   $0x0,0x261(%r13)
movzbl 0x5d8(%r13),%eax
test   %al,%al
jne    3e69d <OJPEGWriteHeaderInfo+0x1dd>
lea    0x3375e(%rip),%rsi        # 71d94 <module.15+0x28>
lea    0x3406a(%rip),%rcx        # 726a7 <module.81+0x39>
mov    0x5f8(%r13),%rax
test   %rax,%rax
je     3e6bc <OJPEGWriteHeaderInfo+0x1fc>
lea    0x34033(%rip),%rdi        # 72683 <module.81+0x15>
mov    $0x4a9,%edx
callq  8490 <__assert_fail@plt>
movl   $0x0,0x34c(%r13)
movl   $0x0,0x350(%r13)
movb   $0x1,0x261(%r13)
movzbl 0x10e(%r13),%eax
imul   0x100(%r13),%eax
mov    %eax,0x630(%r13)
mov    0x104(%r13),%eax
mov    %eax,0x634(%r13)
mov    %r15,%rsi
mov    %r13,%rdi
callq  41460 <jpeg_start_decompress_encap>
test   %eax,%eax
jne    3e6d9 <OJPEGWriteHeaderInfo+0x219>
xor    %eax,%eax
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
leaveq 
retq   
mov    0x620(%r13),%rax
test   %rax,%rax
je     3e6f4 <OJPEGWriteHeaderInfo+0x234>
lea    0x33fed(%rip),%rdi        # 726bc <module.81+0x4e>
mov    $0x4aa,%edx
callq  8490 <__assert_fail@plt>
movb   $0x1,0x259(%r13)
mov    $0x1,%eax
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
leaveq 
retq   
mov    0x100(%r13),%eax
movzbl 0x124(%r13),%esi
lea    -0x1(%rax,%rsi,8),%eax
shl    $0x3,%esi
xor    %ecx,%ecx
mov    %rcx,%rdx
div    %esi
movzbl 0x124(%r13),%esi
imul   %esi,%eax
shl    $0x3,%eax
mov    %eax,0x5dc(%r13)
movzbl 0x125(%r13),%edx
shl    $0x3,%edx
mov    %edx,0x5e0(%r13)
mov    %rcx,%rdx
div    %esi
mov    %eax,0x5e4(%r13)
movl   $0x8,0x5e8(%r13)
mov    0x5e0(%r13),%ecx
imul   0x5dc(%r13),%ecx
mov    %ecx,0x5ec(%r13)
mov    %rax,%rdx
shl    $0x3,%edx
mov    %edx,0x5f0(%r13)
shl    $0x4,%eax
add    %ecx,%eax
mov    %eax,0x5f4(%r13)
mov    %eax,%edi
callq  8440 <_TIFFmalloc@plt>
mov    %rax,0x5f8(%r13)
lea    0x33edb(%rip),%rsi        # 7266e <module.81>
lea    0x338c8(%rip),%rdx        # 72062 <module.45+0x1c>
test   %rax,%rax
je     3e847 <OJPEGWriteHeaderInfo+0x387>
mov    %rax,0x600(%r13)
mov    0x5ec(%r13),%ecx
add    %rax,%rcx
mov    %rcx,0x608(%r13)
mov    0x5f0(%r13),%eax
add    %rcx,%rax
mov    %rax,0x610(%r13)
mov    0x5e0(%r13),%ecx
mov    0x5e8(%r13),%eax
lea    0x3(%rcx,%rax,2),%eax
mov    %eax,0x618(%r13)
mov    %eax,%edi
shl    $0x3,%rdi
mov    %r15,-0x20(%rbp)
mov    %rsi,%r15
callq  8440 <_TIFFmalloc@plt>
mov    %rax,0x620(%r13)
test   %rax,%rax
je     3e865 <OJPEGWriteHeaderInfo+0x3a5>
lea    0x18(%rax),%rcx
mov    %rcx,(%rax)
mov    0x620(%r13),%rsi
mov    0x5e0(%r13),%edx
lea    0x18(%rsi,%rdx,8),%rdx
mov    %rdx,0x8(%rax)
mov    0x5e0(%r13),%edx
shl    $0x3,%rdx
add    0x620(%r13),%rdx
mov    0x5e8(%r13),%esi
lea    0x18(%rdx,%rsi,8),%rdx
mov    %rdx,0x10(%rax)
xor    %eax,%eax
jmp    3e8ab <OJPEGWriteHeaderInfo+0x3eb>
xor    %eax,%eax
mov    0x3b8(%r14),%rdi
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%r14),%rdi
mov    %r15,%rsi
lea    0x337ea(%rip),%rdx        # 72062 <module.45+0x1c>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
leaveq 
retq   
mov    %rax,%rdx
imul   0x5dc(%r13),%edx
mov    %edx,%edx
add    0x600(%r13),%rdx
mov    %rdx,(%rcx)
add    $0x1,%eax
add    $0x8,%rcx
mov    0x5e0(%r13),%edx
cmp    %eax,%edx
ja     3e88d <OJPEGWriteHeaderInfo+0x3cd>
xor    %eax,%eax
jmp    3e8d8 <OJPEGWriteHeaderInfo+0x418>
mov    %rax,%rdx
imul   0x5e4(%r13),%edx
mov    %edx,%edx
add    0x608(%r13),%rdx
mov    %rdx,(%rcx)
add    $0x1,%eax
add    $0x8,%rcx
mov    0x5e8(%r13),%edx
cmp    %eax,%edx
ja     3e8ba <OJPEGWriteHeaderInfo+0x3fa>
xor    %eax,%eax
jmp    3e905 <OJPEGWriteHeaderInfo+0x445>
mov    %rax,%rdx
imul   0x5e4(%r13),%edx
mov    %edx,%edx
add    0x610(%r13),%rdx
mov    %rdx,(%rcx)
add    $0x1,%eax
add    $0x8,%rcx
mov    0x5e8(%r13),%edx
cmp    %eax,%edx
ja     3e8e7 <OJPEGWriteHeaderInfo+0x427>
movzbl 0x124(%r13),%esi
mov    0x100(%r13),%eax
lea    -0x1(%rsi,%rax,1),%eax
xor    %ecx,%ecx
mov    %rcx,%rdx
div    %esi
mov    %eax,0x628(%r13)
movl   $0x0,0x62c(%r13)
movzbl 0x125(%r13),%esi
movzbl 0x124(%r13),%edx
imul   %esi,%edx
add    $0x2,%edx
imul   %edx,%eax
mov    %eax,0x630(%r13)
mov    0x104(%r13),%eax
lea    -0x1(%rsi,%rax,1),%eax
mov    %rcx,%rdx
div    %esi
mov    %eax,0x634(%r13)
movb   $0x1,0x5d8(%r13)
mov    -0x20(%rbp),%r15
jmpq   3e69d <OJPEGWriteHeaderInfo+0x1dd>
data16 nopw %cs:0x0(%rax,%rax,1)
nop

000000000003e990 <OJPEGLibjpegSessionAbort>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    0x350(%rdi),%rax
movzbl 0x260(%rax),%ecx
test   %cl,%cl
jne    3e9c9 <OJPEGLibjpegSessionAbort+0x39>
lea    0x33766(%rip),%rdi        # 72117 <module.53+0x2a>
lea    0x333dc(%rip),%rsi        # 71d94 <module.15+0x28>
mov    $0x4e5,%edx
lea    0x33d1e(%rip),%rcx        # 726e2 <module.81+0x74>
callq  8490 <__assert_fail@plt>
lea    0x310(%rax),%rdi
mov    %r15,-0x8(%rbp)
mov    %rax,%r15
callq  81f0 <jpeg_destroy@plt>
movb   $0x0,0x260(%r15)
mov    -0x8(%rbp),%r15
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

000000000003e9f0 <OJPEGReadHeaderInfoSec>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    0x350(%rdi),%r12
mov    0xf0(%r12),%rax
test   %rax,%rax
je     3ea25 <OJPEGReadHeaderInfoSec+0x35>
mov    %rdi,%rbx
jmp    3ea40 <OJPEGReadHeaderInfoSec+0x50>
mov    %rdi,%rbx
mov    0x3e0(%rbx),%rax
mov    0x3b8(%rbx),%rdi
callq  *%rax
mov    %rax,0xf0(%r12)
mov    0x110(%r12),%rdx
test   %rdx,%rdx
jne    3ea97 <OJPEGReadHeaderInfoSec+0xa7>
movl   $0x0,0x638(%r12)
movl   $0x0,0x63c(%r12)
mov    0xe4(%rbx),%eax
mov    %eax,0x640(%r12)
movq   $0x0,0x658(%r12)
movw   $0x0,0x660(%r12)
lea    -0x2b(%rbp),%r14
xor    %r13d,%r13d
lea    -0x2a(%rbp),%r15
jmp    3eada <OJPEGReadHeaderInfoSec+0xea>
mov    0xf0(%r12),%rax
cmp    %rax,%rdx
jae    3eafe <OJPEGReadHeaderInfoSec+0x10e>
mov    0x118(%r12),%rcx
test   %rcx,%rcx
je     3eab9 <OJPEGReadHeaderInfoSec+0xc9>
add    %rdx,%rcx
cmp    %rcx,%rax
jae    3ea4d <OJPEGReadHeaderInfoSec+0x5d>
sub    %rdx,%rax
mov    %rax,0x118(%r12)
jmp    3ea4d <OJPEGReadHeaderInfoSec+0x5d>
mov    %rbx,%rdi
callq  3f230 <OJPEGReadHeaderInfoSecStreamDht>
test   %eax,%eax
je     3eb1b <OJPEGReadHeaderInfoSec+0x12b>
movzbl -0x2b(%rbp),%eax
cmp    $0xda,%al
je     3eb34 <OJPEGReadHeaderInfoSec+0x144>
mov    %r12,%rdi
mov    %r14,%rsi
callq  407e0 <OJPEGReadBytePeek>
test   %eax,%eax
je     3eb5c <OJPEGReadHeaderInfoSec+0x16c>
movzbl -0x2b(%rbp),%eax
cmp    $0xfe,%al
jbe    3eb34 <OJPEGReadHeaderInfoSec+0x144>
mov    %r12,%rdi
callq  40870 <OJPEGReadByteAdvance>
jmpq   3eb7f <OJPEGReadHeaderInfoSec+0x18f>
movq   $0x0,0x110(%r12)
movq   $0x0,0x118(%r12)
jmpq   3ea4d <OJPEGReadHeaderInfoSec+0x5d>
mov    %r13,%rax
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
leaveq 
retq   
movzbl 0x121(%r12),%eax
test   %al,%al
je     3eba7 <OJPEGReadHeaderInfoSec+0x1b7>
mov    $0x1,%eax
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
leaveq 
retq   
mov    %r13,%rax
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
leaveq 
retq   
movzbl -0x2b(%rbp),%esi
cmp    $0xff,%sil
jne    3ebd3 <OJPEGReadHeaderInfoSec+0x1e3>
mov    %r12,%rdi
mov    %r14,%rsi
callq  40730 <OJPEGReadByte>
test   %eax,%eax
jne    3eb75 <OJPEGReadHeaderInfoSec+0x185>
mov    %r13,%rax
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
leaveq 
retq   
movzbl 0x1db(%r12),%eax
test   %al,%al
je     3ec3d <OJPEGReadHeaderInfoSec+0x24d>
mov    $0x1,%eax
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
leaveq 
retq   
lea    -0xc0(%rsi),%eax
cmp    $0x3e,%eax
ja     3ec66 <OJPEGReadHeaderInfoSec+0x276>
lea    0x3303b(%rip),%rcx        # 71c24 <module.12+0xc7>
movslq (%rcx,%rax,4),%rax
add    %rcx,%rax
jmpq   *%rax
movzbl 0x121(%r12),%eax
test   %al,%al
jne    3ed6a <OJPEGReadHeaderInfoSec+0x37a>
movzbl 0x10d(%r12),%eax
test   %al,%al
jne    3ed85 <OJPEGReadHeaderInfoSec+0x395>
mov    %rbx,%rdi
callq  3fa70 <OJPEGReadHeaderInfoSecStreamSos>
test   %eax,%eax
jne    3ead2 <OJPEGReadHeaderInfoSec+0xe2>
mov    %r13,%rax
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
leaveq 
retq   
mov    %rbx,%rdi
callq  3fc60 <OJPEGReadHeaderInfoSecTablesQTable>
test   %eax,%eax
jne    3eda4 <OJPEGReadHeaderInfoSec+0x3b4>
mov    %r13,%rax
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rbx),%rdi
mov    %rsi,%rcx
lea    0x33add(%rip),%rdx        # 72756 <module.86+0x5b>
lea    0x33a7b(%rip),%rsi        # 726fb <module.86>
callq  8a00 <TIFFErrorExt@plt>
mov    %r13,%rax
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
leaveq 
retq   
mov    %r12,%rdi
mov    %r15,%rsi
callq  408c0 <OJPEGReadWord>
test   %eax,%eax
je     3edb2 <OJPEGReadHeaderInfoSec+0x3c2>
movzwl -0x2a(%rbp),%eax
cmp    $0x1,%ax
jbe    3edcb <OJPEGReadHeaderInfoSec+0x3db>
cmp    $0x2,%ax
jbe    3ead2 <OJPEGReadHeaderInfoSec+0xe2>
lea    0xfffe(%rax),%esi
mov    %r12,%rdi
callq  40a50 <OJPEGReadSkip>
jmpq   3ead2 <OJPEGReadHeaderInfoSec+0xe2>
mov    %rbx,%rdi
callq  3ef50 <OJPEGReadHeaderInfoSecStreamDri>
test   %eax,%eax
jne    3ead2 <OJPEGReadHeaderInfoSec+0xe2>
mov    %r13,%rax
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
leaveq 
retq   
mov    %rbx,%rdi
callq  3efe0 <OJPEGReadHeaderInfoSecStreamDqt>
test   %eax,%eax
jne    3ead2 <OJPEGReadHeaderInfoSec+0xe2>
mov    %r13,%rax
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
leaveq 
retq   
mov    %rbx,%rdi
callq  3f4b0 <OJPEGReadHeaderInfoSecStreamSof>
test   %eax,%eax
je     3edf1 <OJPEGReadHeaderInfoSec+0x401>
movzbl 0x121(%r12),%eax
test   %al,%al
je     3ead2 <OJPEGReadHeaderInfoSec+0xe2>
mov    $0x1,%eax
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
leaveq 
retq   
mov    $0x1,%eax
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
leaveq 
retq   
lea    0x33998(%rip),%rdi        # 72724 <module.86+0x29>
lea    0x33001(%rip),%rsi        # 71d94 <module.15+0x28>
mov    $0x54b,%edx
lea    0x339a0(%rip),%rcx        # 7273f <module.86+0x44>
callq  8490 <__assert_fail@plt>
movb   $0xc0,0x1dc(%r12)
mov    %r13,%rax
jmp    3ee18 <OJPEGReadHeaderInfoSec+0x428>
mov    %r13,%rax
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
leaveq 
retq   
movzbl 0x121(%r12),%eax
test   %al,%al
je     3ee4b <OJPEGReadHeaderInfoSec+0x45b>
mov    %r13,%rax
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
leaveq 
retq   
mov    %r13,%rax
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
leaveq 
retq   
movzbl %al,%ecx
mov    %al,0x1e8(%r12,%rcx,1)
add    $0x1,%eax
movzbl 0x10c(%r12),%ecx
cmp    %al,%cl
ja     3ee0a <OJPEGReadHeaderInfoSec+0x41a>
movzbl 0x125(%r12),%eax
movzbl 0x124(%r12),%ecx
shl    $0x4,%ecx
or     %cl,%al
mov    %al,0x1eb(%r12)
mov    $0x1,%eax
jmp    3ee8f <OJPEGReadHeaderInfoSec+0x49f>
xor    %eax,%eax
mov    0x3b8(%rbx),%rdi
lea    0x338b7(%rip),%rdx        # 72712 <module.86+0x17>
lea    0x33899(%rip),%rsi        # 726fb <module.86>
callq  8a00 <TIFFErrorExt@plt>
mov    %r13,%rax
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
leaveq 
retq   
movzbl %al,%ecx
movb   $0x11,0x1eb(%r12,%rcx,1)
add    $0x1,%eax
movzbl 0x10c(%r12),%ecx
cmp    %al,%cl
ja     3ee80 <OJPEGReadHeaderInfoSec+0x490>
mov    0x100(%r12),%eax
mov    %eax,0x1e0(%r12)
mov    0x108(%r12),%eax
mov    %eax,0x1e4(%r12)
movb   $0x1,0x1db(%r12)
mov    %rbx,%rdi
callq  3fe90 <OJPEGReadHeaderInfoSecTablesDcTable>
test   %eax,%eax
jne    3eeea <OJPEGReadHeaderInfoSec+0x4fa>
mov    %r13,%rax
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
leaveq 
retq   
mov    %rbx,%rdi
callq  40140 <OJPEGReadHeaderInfoSecTablesAcTable>
test   %eax,%eax
jne    3ef0f <OJPEGReadHeaderInfoSec+0x51f>
mov    %r13,%rax
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
leaveq 
retq   
mov    $0x1,%eax
jmp    3ef24 <OJPEGReadHeaderInfoSec+0x534>
movzbl %al,%ecx
mov    %al,0x1f1(%r12,%rcx,1)
add    $0x1,%eax
movzbl 0x10c(%r12),%ecx
cmp    %al,%cl
ja     3ef16 <OJPEGReadHeaderInfoSec+0x526>
mov    $0x1,%eax
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
leaveq 
retq   
nopl   0x0(%rax)

000000000003ef50 <OJPEGReadHeaderInfoSecStreamDri>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %rdi,-0x8(%rbp)
mov    0x350(%rdi),%rdi
mov    %rdi,-0x10(%rbp)
lea    -0x12(%rbp),%rsi
callq  408c0 <OJPEGReadWord>
test   %eax,%eax
jne    3ef78 <OJPEGReadHeaderInfoSecStreamDri+0x28>
xor    %eax,%eax
leaveq 
retq   
movzwl -0x12(%rbp),%eax
cmp    $0x4,%ax
jne    3ef97 <OJPEGReadHeaderInfoSecStreamDri+0x47>
mov    -0x10(%rbp),%rdi
lea    -0x12(%rbp),%rsi
callq  408c0 <OJPEGReadWord>
test   %eax,%eax
jne    3efbb <OJPEGReadHeaderInfoSecStreamDri+0x6b>
xor    %eax,%eax
leaveq 
retq   
xor    %eax,%eax
mov    -0x8(%rbp),%rcx
mov    0x3b8(%rcx),%rdi
lea    0x337cf(%rip),%rsi        # 7277a <module.91>
lea    0x337e8(%rip),%rdx        # 7279a <module.91+0x20>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
movzwl -0x12(%rbp),%eax
mov    -0x10(%rbp),%rcx
mov    %ax,0x1d8(%rcx)
mov    $0x1,%eax
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   0x0(%rax)

000000000003efe0 <OJPEGReadHeaderInfoSecStreamDqt>:
push   %rbp
mov    %rsp,%rbp
sub    $0x40,%rsp
mov    %rdi,-0x8(%rbp)
mov    0x350(%rdi),%rdi
mov    %rdi,-0x30(%rbp)
lea    -0x32(%rbp),%rsi
callq  408c0 <OJPEGReadWord>
test   %eax,%eax
jne    3f008 <OJPEGReadHeaderInfoSecStreamDqt+0x28>
xor    %eax,%eax
leaveq 
retq   
lea    0x337ab(%rip),%rsi        # 727ba <module.93>
lea    0x337c4(%rip),%rdx        # 727da <module.93+0x20>
movzwl -0x32(%rbp),%ecx
cmp    $0x2,%cx
jbe    3f065 <OJPEGReadHeaderInfoSecStreamDqt+0x85>
mov    -0x30(%rbp),%rdi
movzbl 0x121(%rdi),%eax
test   %al,%al
jne    3f07c <OJPEGReadHeaderInfoSecStreamDqt+0x9c>
lea    0xfffe(%rcx),%eax
mov    %ax,-0x32(%rbp)
mov    $0x49,%eax
mov    $0x41,%ecx
mov    %rbx,-0x10(%rbp)
mov    %r12,-0x18(%rbp)
mov    %r13,-0x20(%rbp)
mov    %r14,-0x28(%rbp)
mov    %r15,-0x30(%rbp)
mov    %rdi,%rbx
mov    %rax,%r12
mov    %rcx,%r13
jmpq   3f119 <OJPEGReadHeaderInfoSecStreamDqt+0x139>
mov    -0x30(%rbp),%rax
movzbl 0x121(%rax),%eax
test   %al,%al
je     3f15f <OJPEGReadHeaderInfoSecStreamDqt+0x17f>
xor    %eax,%eax
leaveq 
retq   
lea    0xfffe(%rcx),%esi
callq  40a50 <OJPEGReadSkip>
mov    $0x1,%eax
leaveq 
retq   
mov    %r12,%rdi
callq  8440 <_TIFFmalloc@plt>
test   %rax,%rax
je     3f175 <OJPEGReadHeaderInfoSecStreamDqt+0x195>
mov    %rax,%r14
movl   $0x49,(%r14)
movb   $0xff,0x4(%r14)
movb   $0xdb,0x5(%r14)
movb   $0x0,0x6(%r14)
movb   $0x43,0x7(%r14)
lea    0x8(%r14),%r15
mov    %rbx,%rdi
mov    %r13,%rsi
mov    %r15,%rdx
callq  40920 <OJPEGReadBlock>
test   %eax,%eax
je     3f1ad <OJPEGReadHeaderInfoSecStreamDqt+0x1cd>
movzbl (%r15),%eax
and    $0xf,%al
cmp    $0x3,%al
ja     3f1cd <OJPEGReadHeaderInfoSecStreamDqt+0x1ed>
movzbl %al,%r15d
mov    0x178(%rbx,%r15,8),%rdi
test   %rdi,%rdi
je     3f0fb <OJPEGReadHeaderInfoSecStreamDqt+0x11b>
callq  8bb0 <_TIFFfree@plt>
mov    %r14,0x178(%rbx,%r15,8)
movzwl -0x32(%rbp),%eax
add    $0xffbf,%eax
mov    %ax,-0x32(%rbp)
test   %ax,%ax
je     3f20d <OJPEGReadHeaderInfoSecStreamDqt+0x22d>
movzwl -0x32(%rbp),%eax
cmp    $0x40,%ax
ja     3f08e <OJPEGReadHeaderInfoSecStreamDqt+0xae>
xor    %eax,%eax
mov    -0x8(%rbp),%rcx
mov    0x3b8(%rcx),%rdi
lea    0x3369f(%rip),%rdx        # 727da <module.93+0x20>
lea    0x33678(%rip),%rsi        # 727ba <module.93>
callq  8a00 <TIFFErrorExt@plt>
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
mov    -0x10(%rbp),%rbx
xor    %eax,%eax
leaveq 
retq   
xor    %eax,%eax
mov    -0x8(%rbp),%rcx
mov    0x3b8(%rcx),%rdi
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
xor    %eax,%eax
mov    -0x8(%rbp),%rcx
mov    0x3b8(%rcx),%rdi
lea    0x32ed9(%rip),%rdx        # 72062 <module.45+0x1c>
lea    0x3362a(%rip),%rsi        # 727ba <module.93>
callq  8a00 <TIFFErrorExt@plt>
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
mov    -0x10(%rbp),%rbx
xor    %eax,%eax
leaveq 
retq   
mov    %r14,%rdi
callq  8bb0 <_TIFFfree@plt>
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
mov    -0x10(%rbp),%rbx
xor    %eax,%eax
leaveq 
retq   
xor    %eax,%eax
mov    -0x8(%rbp),%rcx
mov    0x3b8(%rcx),%rdi
lea    0x335f9(%rip),%rdx        # 727da <module.93+0x20>
lea    0x335d2(%rip),%rsi        # 727ba <module.93>
callq  8a00 <TIFFErrorExt@plt>
mov    %r14,%rdi
callq  8bb0 <_TIFFfree@plt>
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
mov    -0x10(%rbp),%rbx
xor    %eax,%eax
leaveq 
retq   
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
mov    -0x10(%rbp),%rbx
mov    $0x1,%eax
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

000000000003f230 <OJPEGReadHeaderInfoSecStreamDht>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    %rdi,-0x8(%rbp)
mov    0x350(%rdi),%rdi
mov    %rdi,-0x20(%rbp)
lea    -0x22(%rbp),%rsi
callq  408c0 <OJPEGReadWord>
test   %eax,%eax
jne    3f258 <OJPEGReadHeaderInfoSecStreamDht+0x28>
xor    %eax,%eax
leaveq 
retq   
lea    0x3359b(%rip),%rsi        # 727fa <module.95>
lea    0x335b4(%rip),%rdx        # 7281a <module.95+0x20>
movzwl -0x22(%rbp),%ecx
cmp    $0x2,%cx
jbe    3f350 <OJPEGReadHeaderInfoSecStreamDht+0x120>
mov    -0x20(%rbp),%rdi
movzbl 0x121(%rdi),%eax
test   %al,%al
jne    3f367 <OJPEGReadHeaderInfoSecStreamDht+0x137>
lea    0x6(%rcx),%eax
mov    %eax,%edi
mov    %r15,-0x18(%rbp)
mov    %rax,%r15
callq  8440 <_TIFFmalloc@plt>
test   %rax,%rax
je     3f379 <OJPEGReadHeaderInfoSecStreamDht+0x149>
mov    %r15d,(%rax)
movb   $0xff,0x4(%rax)
movb   $0xc4,0x5(%rax)
movzwl -0x22(%rbp),%ecx
shr    $0x8,%ecx
mov    %cl,0x6(%rax)
movzbl -0x22(%rbp),%ecx
mov    %cl,0x7(%rax)
movzwl -0x22(%rbp),%ecx
lea    0xfffe(%rcx),%esi
lea    0x8(%rax),%r15
mov    -0x20(%rbp),%rdi
mov    %r15,%rdx
mov    %r14,-0x10(%rbp)
mov    %rax,%r14
callq  40920 <OJPEGReadBlock>
test   %eax,%eax
je     3f3a1 <OJPEGReadHeaderInfoSecStreamDht+0x171>
movzbl (%r15),%r15d
mov    %r15,%rax
and    $0xf0,%eax
test   %eax,%eax
je     3f3b5 <OJPEGReadHeaderInfoSecStreamDht+0x185>
cmp    $0x10,%eax
jne    3f3fa <OJPEGReadHeaderInfoSecStreamDht+0x1ca>
and    $0xf,%r15b
cmp    $0x3,%r15b
ja     3f42e <OJPEGReadHeaderInfoSecStreamDht+0x1fe>
movzbl %r15b,%r15d
mov    -0x20(%rbp),%rax
mov    0x1b8(%rax,%r15,8),%rdi
test   %rdi,%rdi
je     3f339 <OJPEGReadHeaderInfoSecStreamDht+0x109>
mov    %r13,-0x20(%rbp)
mov    %rax,%r13
callq  8bb0 <_TIFFfree@plt>
mov    %r13,%rax
mov    -0x20(%rbp),%r13
mov    %r14,0x1b8(%rax,%r15,8)
mov    -0x10(%rbp),%r14
mov    $0x1,%eax
mov    -0x18(%rbp),%r15
leaveq 
retq   
mov    -0x20(%rbp),%rax
movzbl 0x121(%rax),%eax
test   %al,%al
je     3f462 <OJPEGReadHeaderInfoSecStreamDht+0x232>
xor    %eax,%eax
leaveq 
retq   
lea    0xfffe(%rcx),%esi
callq  40a50 <OJPEGReadSkip>
mov    $0x1,%eax
leaveq 
retq   
xor    %eax,%eax
mov    -0x8(%rbp),%rcx
mov    0x3b8(%rcx),%rdi
lea    0x32cd5(%rip),%rdx        # 72062 <module.45+0x1c>
lea    0x33466(%rip),%rsi        # 727fa <module.95>
callq  8a00 <TIFFErrorExt@plt>
mov    -0x18(%rbp),%r15
xor    %eax,%eax
leaveq 
retq   
mov    %r14,%rdi
callq  8bb0 <_TIFFfree@plt>
mov    -0x10(%rbp),%r14
mov    -0x18(%rbp),%r15
xor    %eax,%eax
leaveq 
retq   
cmp    $0x3,%r15b
ja     3f478 <OJPEGReadHeaderInfoSecStreamDht+0x248>
mov    -0x20(%rbp),%rax
mov    0x198(%rax,%r15,8),%rdi
test   %rdi,%rdi
je     3f3e3 <OJPEGReadHeaderInfoSecStreamDht+0x1b3>
mov    %r13,-0x20(%rbp)
mov    %rax,%r13
callq  8bb0 <_TIFFfree@plt>
mov    %r13,%rax
mov    -0x20(%rbp),%r13
mov    %r14,0x198(%rax,%r15,8)
mov    -0x10(%rbp),%r14
mov    $0x1,%eax
mov    -0x18(%rbp),%r15
leaveq 
retq   
xor    %eax,%eax
mov    -0x8(%rbp),%rcx
mov    0x3b8(%rcx),%rdi
lea    0x3340c(%rip),%rdx        # 7281a <module.95+0x20>
lea    0x333e5(%rip),%rsi        # 727fa <module.95>
callq  8a00 <TIFFErrorExt@plt>
mov    %r14,%rdi
callq  8bb0 <_TIFFfree@plt>
mov    -0x10(%rbp),%r14
mov    -0x18(%rbp),%r15
xor    %eax,%eax
leaveq 
retq   
xor    %eax,%eax
mov    -0x8(%rbp),%rcx
mov    0x3b8(%rcx),%rdi
lea    0x333d8(%rip),%rdx        # 7281a <module.95+0x20>
lea    0x333b1(%rip),%rsi        # 727fa <module.95>
callq  8a00 <TIFFErrorExt@plt>
mov    %r14,%rdi
callq  8bb0 <_TIFFfree@plt>
mov    -0x10(%rbp),%r14
mov    -0x18(%rbp),%r15
xor    %eax,%eax
leaveq 
retq   
xor    %eax,%eax
mov    -0x8(%rbp),%rcx
mov    0x3b8(%rcx),%rdi
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
xor    %eax,%eax
mov    -0x8(%rbp),%rcx
mov    0x3b8(%rcx),%rdi
lea    0x3338e(%rip),%rdx        # 7281a <module.95+0x20>
lea    0x33367(%rip),%rsi        # 727fa <module.95>
callq  8a00 <TIFFErrorExt@plt>
mov    %r14,%rdi
callq  8bb0 <_TIFFfree@plt>
mov    -0x10(%rbp),%r14
mov    -0x18(%rbp),%r15
xor    %eax,%eax
leaveq 
retq   
nopl   0x0(%rax)

000000000003f4b0 <OJPEGReadHeaderInfoSecStreamSof>:
push   %rbp
mov    %rsp,%rbp
sub    $0x40,%rsp
lea    0x3337b(%rip),%r8        # 7283a <module.97>
mov    0x350(%rdi),%rcx
movzbl 0x1db(%rcx),%eax
test   %al,%al
jne    3f502 <OJPEGReadHeaderInfoSecStreamSof+0x52>
movzbl 0x121(%rcx),%eax
test   %al,%al
jne    3f4e3 <OJPEGReadHeaderInfoSecStreamSof+0x33>
mov    %sil,0x1dc(%rcx)
lea    -0x3e(%rbp),%rsi
mov    %rcx,%rax
mov    %rcx,-0x38(%rbp)
mov    %rdi,-0x8(%rbp)
mov    %rax,%rdi
callq  408c0 <OJPEGReadWord>
test   %eax,%eax
jne    3f51e <OJPEGReadHeaderInfoSecStreamSof+0x6e>
xor    %eax,%eax
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
mov    %r8,%rsi
lea    0x331fd(%rip),%rdx        # 72712 <module.86+0x17>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
lea    0x33335(%rip),%rcx        # 7285a <module.97+0x20>
movzwl -0x3e(%rbp),%eax
cmp    $0xa,%ax
jbe    3f58a <OJPEGReadHeaderInfoSecStreamSof+0xda>
add    $0xfff8,%eax
mov    %ax,-0x3e(%rbp)
movzwl %ax,%edi
mov    $0x55555556,%esi
mov    %rsi,%rax
imul   %edi
mov    %rdx,%rax
shr    $0x1f,%eax
add    %edx,%eax
lea    (%rax,%rax,2),%eax
cmp    %eax,%edi
jne    3f59d <OJPEGReadHeaderInfoSecStreamSof+0xed>
mov    %rsi,%rax
movzwl -0x3e(%rbp),%ecx
imul   %ecx
mov    %rdx,%rax
shr    $0x1f,%eax
lea    (%rdx,%rax,1),%ecx
mov    -0x38(%rbp),%rdi
movzbl 0x121(%rdi),%eax
test   %al,%al
je     3f5b4 <OJPEGReadHeaderInfoSecStreamSof+0x104>
lea    -0x3b(%rbp),%rsi
mov    %rcx,-0x30(%rbp)
callq  40730 <OJPEGReadByte>
test   %eax,%eax
jne    3f5e4 <OJPEGReadHeaderInfoSecStreamSof+0x134>
xor    %eax,%eax
leaveq 
retq   
mov    -0x38(%rbp),%rax
movzbl 0x121(%rax),%eax
test   %al,%al
je     3f610 <OJPEGReadHeaderInfoSecStreamSof+0x160>
xor    %eax,%eax
leaveq 
retq   
mov    -0x38(%rbp),%rax
movzbl 0x121(%rax),%eax
test   %al,%al
je     3f630 <OJPEGReadHeaderInfoSecStreamSof+0x180>
xor    %eax,%eax
leaveq 
retq   
movzbl 0x10c(%rdi),%eax
cmp    %cx,%ax
je     3f575 <OJPEGReadHeaderInfoSecStreamSof+0xc5>
xor    %eax,%eax
mov    -0x8(%rbp),%rcx
mov    0x3b8(%rcx),%rdi
lea    0x332a6(%rip),%rdx        # 7287a <module.97+0x40>
lea    0x3325f(%rip),%rsi        # 7283a <module.97>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
movzbl -0x3b(%rbp),%eax
cmp    $0x8,%al
jne    3f650 <OJPEGReadHeaderInfoSecStreamSof+0x1a0>
mov    -0x38(%rbp),%rdi
movzbl 0x121(%rdi),%eax
test   %al,%al
jne    3f663 <OJPEGReadHeaderInfoSecStreamSof+0x1b3>
lea    -0x3a(%rbp),%rsi
callq  408c0 <OJPEGReadWord>
test   %eax,%eax
jne    3f692 <OJPEGReadHeaderInfoSecStreamSof+0x1e2>
xor    %eax,%eax
leaveq 
retq   
xor    %eax,%eax
mov    -0x8(%rbp),%rdx
mov    0x3b8(%rdx),%rdi
mov    %rcx,%rdx
lea    0x33213(%rip),%rsi        # 7283a <module.97>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
xor    %eax,%eax
mov    -0x8(%rbp),%rdx
mov    0x3b8(%rdx),%rdi
mov    %rcx,%rdx
lea    0x331f3(%rip),%rsi        # 7283a <module.97>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
mov    -0x38(%rbp),%rax
movzbl 0x121(%rax),%eax
test   %al,%al
je     3f6c3 <OJPEGReadHeaderInfoSecStreamSof+0x213>
xor    %eax,%eax
leaveq 
retq   
mov    $0x4,%esi
mov    %rdi,%rax
mov    %r15,-0x28(%rbp)
mov    %rdi,%r15
mov    %rax,%rdi
callq  40a50 <OJPEGReadSkip>
mov    %r15,%rdi
mov    -0x28(%rbp),%r15
lea    -0x3b(%rbp),%rsi
callq  40730 <OJPEGReadByte>
test   %eax,%eax
jne    3f6e7 <OJPEGReadHeaderInfoSecStreamSof+0x237>
xor    %eax,%eax
leaveq 
retq   
movzwl -0x3a(%rbp),%ecx
mov    -0x38(%rbp),%rdi
mov    0xfc(%rdi),%eax
cmp    %ecx,%eax
ja     3f71f <OJPEGReadHeaderInfoSecStreamSof+0x26f>
movzwl -0x3a(%rbp),%eax
mov    %eax,0x1e4(%rdi)
lea    -0x3a(%rbp),%rsi
callq  408c0 <OJPEGReadWord>
test   %eax,%eax
jne    3f74f <OJPEGReadHeaderInfoSecStreamSof+0x29f>
xor    %eax,%eax
leaveq 
retq   
xor    %eax,%eax
mov    -0x8(%rbp),%rcx
mov    0x3b8(%rcx),%rdi
lea    0x331df(%rip),%rdx        # 728b6 <module.97+0x7c>
lea    0x3315c(%rip),%rsi        # 7283a <module.97>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
movzbl -0x3b(%rbp),%eax
mov    -0x30(%rbp),%rcx
cmp    %ax,%cx
jne    3f782 <OJPEGReadHeaderInfoSecStreamSof+0x2d2>
mov    %r15,-0x30(%rbp)
mov    %rbx,-0x10(%rbp)
mov    %r12,-0x18(%rbp)
mov    %r13,-0x20(%rbp)
mov    %r14,-0x28(%rbp)
mov    %rcx,%r12
lea    -0x3b(%rbp),%rbx
xor    %r14d,%r14d
mov    -0x38(%rbp),%r13
jmpq   3f7e2 <OJPEGReadHeaderInfoSecStreamSof+0x332>
cmp    0x108(%rdi),%ecx
jae    3f6a4 <OJPEGReadHeaderInfoSecStreamSof+0x1f4>
xor    %eax,%eax
mov    -0x8(%rbp),%rcx
mov    0x3b8(%rcx),%rdi
lea    0x331bb(%rip),%rdx        # 728fa <module.97+0xc0>
lea    0x330f4(%rip),%rsi        # 7283a <module.97>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
movzwl -0x3a(%rbp),%ecx
mov    -0x38(%rbp),%rdi
mov    0xf8(%rdi),%eax
cmp    %ecx,%eax
ja     3f817 <OJPEGReadHeaderInfoSecStreamSof+0x367>
mov    0x100(%rdi),%ecx
movzwl -0x3a(%rbp),%eax
cmp    %eax,%ecx
jb     3f847 <OJPEGReadHeaderInfoSecStreamSof+0x397>
mov    %eax,0x1e0(%rdi)
jmpq   3f681 <OJPEGReadHeaderInfoSecStreamSof+0x1d1>
mov    -0x38(%rbp),%rax
movzbl 0x121(%rax),%eax
test   %al,%al
je     3f86b <OJPEGReadHeaderInfoSecStreamSof+0x3bb>
xor    %eax,%eax
leaveq 
retq   
test   %r14w,%r14w
je     3f88f <OJPEGReadHeaderInfoSecStreamSof+0x3df>
movzbl -0x3b(%rbp),%eax
cmp    $0x11,%al
je     3f7b3 <OJPEGReadHeaderInfoSecStreamSof+0x303>
movb   $0x1,0x126(%r13)
mov    %r13,%rdi
mov    %rbx,%rsi
callq  40730 <OJPEGReadByte>
test   %eax,%eax
je     3f8d1 <OJPEGReadHeaderInfoSecStreamSof+0x421>
movzbl 0x121(%r13),%eax
test   %al,%al
jne    3f7de <OJPEGReadHeaderInfoSecStreamSof+0x32e>
movzbl -0x3b(%rbp),%eax
mov    %al,0x1ee(%r13,%r15,1)
add    $0x1,%r14d
cmp    %r14w,%r12w
ja     3f8e9 <OJPEGReadHeaderInfoSecStreamSof+0x439>
mov    $0x1,%eax
movzbl 0x121(%r13),%ecx
test   %cl,%cl
je     3f9a2 <OJPEGReadHeaderInfoSecStreamSof+0x4f2>
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
mov    -0x10(%rbp),%rbx
mov    -0x30(%rbp),%r15
leaveq 
retq   
cmp    0x100(%rdi),%ecx
jae    3f765 <OJPEGReadHeaderInfoSecStreamSof+0x2b5>
xor    %eax,%eax
mov    -0x8(%rbp),%rcx
mov    0x3b8(%rcx),%rdi
lea    0x330f4(%rip),%rdx        # 7292b <module.97+0xf1>
lea    0x32ffc(%rip),%rsi        # 7283a <module.97>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
xor    %eax,%eax
mov    -0x8(%rbp),%rcx
mov    0x3b8(%rcx),%rdi
lea    0x33100(%rip),%rdx        # 7295b <module.97+0x121>
lea    0x32fd8(%rip),%rsi        # 7283a <module.97>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
xor    %eax,%eax
mov    -0x8(%rbp),%rcx
mov    0x3b8(%rcx),%rdi
lea    0x32fdb(%rip),%rdx        # 7285a <module.97+0x20>
lea    0x32fb4(%rip),%rsi        # 7283a <module.97>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
movzbl -0x3b(%rbp),%eax
mov    %rax,%rcx
shr    $0x4,%ecx
mov    %cl,0x124(%r13)
and    $0xf,%al
mov    %al,0x125(%r13)
cmp    $0x1,%cl
je     3f9c0 <OJPEGReadHeaderInfoSecStreamSof+0x510>
cmp    $0x2,%cl
je     3f9c0 <OJPEGReadHeaderInfoSecStreamSof+0x510>
cmp    $0x4,%cl
je     3f9c0 <OJPEGReadHeaderInfoSecStreamSof+0x510>
movb   $0x1,0x126(%r13)
jmpq   3f7b3 <OJPEGReadHeaderInfoSecStreamSof+0x303>
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
mov    -0x10(%rbp),%rbx
mov    -0x30(%rbp),%r15
xor    %eax,%eax
leaveq 
retq   
mov    %r13,%rdi
mov    %rbx,%rsi
callq  40730 <OJPEGReadByte>
test   %eax,%eax
je     3f9dd <OJPEGReadHeaderInfoSecStreamSof+0x52d>
movzwl %r14w,%r15d
movzbl 0x121(%r13),%eax
test   %al,%al
jne    3f918 <OJPEGReadHeaderInfoSecStreamSof+0x468>
movzbl -0x3b(%rbp),%eax
mov    %al,0x1e8(%r13,%r15,1)
mov    %r13,%rdi
mov    %rbx,%rsi
callq  40730 <OJPEGReadByte>
test   %eax,%eax
je     3f9f5 <OJPEGReadHeaderInfoSecStreamSof+0x545>
movzbl 0x121(%r13),%eax
test   %al,%al
jne    3f799 <OJPEGReadHeaderInfoSecStreamSof+0x2e9>
movzbl -0x3b(%rbp),%edx
mov    %dl,0x1eb(%r13,%r15,1)
movzbl 0x126(%r13),%eax
test   %al,%al
jne    3f7b3 <OJPEGReadHeaderInfoSecStreamSof+0x303>
test   %r14w,%r14w
je     3fa0d <OJPEGReadHeaderInfoSecStreamSof+0x55d>
cmp    $0x11,%dl
je     3f7b3 <OJPEGReadHeaderInfoSecStreamSof+0x303>
xor    %eax,%eax
mov    -0x8(%rbp),%rcx
mov    0x3b8(%rcx),%rdi
lea    0x3301b(%rip),%rdx        # 72999 <module.97+0x15f>
lea    0x32eb5(%rip),%rsi        # 7283a <module.97>
callq  8a00 <TIFFErrorExt@plt>
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
mov    -0x10(%rbp),%rbx
mov    -0x30(%rbp),%r15
xor    %eax,%eax
leaveq 
retq   
movb   $0x1,0x1db(%r13)
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
mov    -0x10(%rbp),%rbx
mov    -0x30(%rbp),%r15
leaveq 
retq   
cmp    $0x1,%al
je     3f7b3 <OJPEGReadHeaderInfoSecStreamSof+0x303>
cmp    $0x2,%al
je     3f7b3 <OJPEGReadHeaderInfoSecStreamSof+0x303>
cmp    $0x4,%al
jne    3f8c4 <OJPEGReadHeaderInfoSecStreamSof+0x414>
jmpq   3f7b3 <OJPEGReadHeaderInfoSecStreamSof+0x303>
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
mov    -0x10(%rbp),%rbx
mov    -0x30(%rbp),%r15
xor    %eax,%eax
leaveq 
retq   
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
mov    -0x10(%rbp),%rbx
mov    -0x30(%rbp),%r15
xor    %eax,%eax
leaveq 
retq   
movzbl 0x125(%r13),%eax
movzbl 0x124(%r13),%ecx
shl    $0x4,%ecx
or     %ecx,%eax
cmp    %edx,%eax
je     3f7b3 <OJPEGReadHeaderInfoSecStreamSof+0x303>
xor    %eax,%eax
mov    -0x8(%rbp),%rcx
mov    0x3b8(%rcx),%rdi
lea    0x32f5b(%rip),%rdx        # 72999 <module.97+0x15f>
lea    0x32df5(%rip),%rsi        # 7283a <module.97>
callq  8a00 <TIFFErrorExt@plt>
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
mov    -0x10(%rbp),%rbx
mov    -0x30(%rbp),%r15
xor    %eax,%eax
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   (%rax)

000000000003fa70 <OJPEGReadHeaderInfoSecStreamSos>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    0x350(%rdi),%rcx
movzbl 0x121(%rcx),%eax
test   %al,%al
je     3faa9 <OJPEGReadHeaderInfoSecStreamSos+0x39>
lea    0x32f65(%rip),%rdi        # 729f6 <module.105+0x20>
lea    0x322fc(%rip),%rsi        # 71d94 <module.15+0x28>
mov    $0x6ae,%edx
lea    0x32f6c(%rip),%rcx        # 72a10 <module.105+0x3a>
callq  8490 <__assert_fail@plt>
lea    0x32f26(%rip),%rsi        # 729d6 <module.105>
lea    0x32f79(%rip),%rdx        # 72a30 <module.105+0x5a>
movzbl 0x1db(%rcx),%eax
test   %al,%al
je     3fae8 <OJPEGReadHeaderInfoSecStreamSos+0x78>
lea    -0x24(%rbp),%rsi
mov    %rcx,%rax
mov    %r15,-0x20(%rbp)
mov    %rdi,-0x18(%rbp)
mov    %rax,%rdi
mov    %rcx,%r15
callq  408c0 <OJPEGReadWord>
test   %eax,%eax
jne    3fafa <OJPEGReadHeaderInfoSecStreamSos+0x8a>
xor    %eax,%eax
mov    -0x20(%rbp),%r15
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
movzbl 0x10e(%r15),%eax
lea    0x6(%rax,%rax,1),%ecx
movzwl -0x24(%rbp),%eax
cmp    %eax,%ecx
jne    3fb26 <OJPEGReadHeaderInfoSecStreamSos+0xb6>
lea    -0x21(%rbp),%rsi
mov    %r15,%rdi
callq  40730 <OJPEGReadByte>
test   %eax,%eax
jne    3fb4e <OJPEGReadHeaderInfoSecStreamSos+0xde>
xor    %eax,%eax
mov    -0x20(%rbp),%r15
leaveq 
retq   
xor    %eax,%eax
mov    -0x18(%rbp),%rcx
mov    0x3b8(%rcx),%rdi
lea    0x32ef6(%rip),%rdx        # 72a30 <module.105+0x5a>
lea    0x32e95(%rip),%rsi        # 729d6 <module.105>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x20(%rbp),%r15
leaveq 
retq   
movzbl 0x10e(%r15),%ecx
movzbl -0x21(%rbp),%eax
cmp    %al,%cl
jne    3fb76 <OJPEGReadHeaderInfoSecStreamSos+0x106>
mov    %r12,-0x8(%rbp)
mov    %r13,-0x10(%rbp)
mov    %r14,-0x18(%rbp)
lea    -0x21(%rbp),%r12
xor    %r13d,%r13d
jmpq   3fbf8 <OJPEGReadHeaderInfoSecStreamSos+0x188>
xor    %eax,%eax
mov    -0x18(%rbp),%rcx
mov    0x3b8(%rcx),%rdi
lea    0x32ea6(%rip),%rdx        # 72a30 <module.105+0x5a>
lea    0x32e45(%rip),%rsi        # 729d6 <module.105>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x20(%rbp),%r15
leaveq 
retq   
mov    %r15,%rdi
mov    %r12,%rsi
callq  40730 <OJPEGReadByte>
test   %eax,%eax
je     3fc29 <OJPEGReadHeaderInfoSecStreamSos+0x1b9>
movzbl 0x10d(%r15),%eax
movzbl %r13b,%r14d
add    %r14d,%eax
movslq %eax,%rax
movzbl -0x21(%rbp),%ecx
mov    %cl,0x1f1(%r15,%rax,1)
mov    %r15,%rdi
mov    %r12,%rsi
callq  40730 <OJPEGReadByte>
test   %eax,%eax
je     3fc3d <OJPEGReadHeaderInfoSecStreamSos+0x1cd>
movzbl 0x10d(%r15),%eax
add    %r14d,%eax
movslq %eax,%rax
movzbl -0x21(%rbp),%ecx
mov    %cl,0x1f4(%r15,%rax,1)
add    $0x1,%r13d
movzbl 0x10e(%r15),%eax
cmp    %al,%r13b
jb     3fb9e <OJPEGReadHeaderInfoSecStreamSos+0x12e>
mov    %r15,%rdi
mov    $0x3,%esi
callq  40a50 <OJPEGReadSkip>
mov    $0x1,%eax
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
mov    -0x20(%rbp),%r15
leaveq 
retq   
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
xor    %eax,%eax
mov    -0x20(%rbp),%r15
leaveq 
retq   
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
xor    %eax,%eax
mov    -0x20(%rbp),%r15
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   0x0(%rax)

000000000003fc60 <OJPEGReadHeaderInfoSecTablesQTable>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
lea    0x32de1(%rip),%rsi        # 72a50 <module.109>
xor    %edx,%edx
mov    0x350(%rdi),%rcx
mov    0x130(%rcx),%rax
test   %rax,%rax
je     3fcb5 <OJPEGReadHeaderInfoSecTablesQTable+0x55>
movb   $0x0,0x650(%rcx)
mov    $0x49,%eax
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rdi,%rbx
mov    %rax,%rdi
mov    %rcx,%r12
mov    %rdx,%r14
mov    %r14,%r13
jmp    3fcfb <OJPEGReadHeaderInfoSecTablesQTable+0x9b>
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
lea    0x32dae(%rip),%rdx        # 72a73 <module.109+0x23>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
movzbl %r13b,%r15d
mov    0x130(%r12,%r15,8),%rax
test   %rax,%rax
jne    3fd24 <OJPEGReadHeaderInfoSecTablesQTable+0xc4>
lea    -0x1(%r15),%eax
movslq %eax,%rax
movzbl 0x1ee(%r12,%rax,1),%eax
mov    %al,0x1ee(%r12,%r15,1)
add    $0x1,%r13d
movzbl 0x10c(%r12),%eax
cmp    %al,%r13b
jb     3fcce <OJPEGReadHeaderInfoSecTablesQTable+0x6e>
mov    $0x1,%eax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
lea    -0x1(%r15),%edx
test   %r13b,%r13b
jne    3fd32 <OJPEGReadHeaderInfoSecTablesQTable+0xd2>
mov    %r14,%rcx
jmp    3fd60 <OJPEGReadHeaderInfoSecTablesQTable+0x100>
movslq %edx,%rcx
cmp    0x130(%r12,%rcx,8),%rax
je     3fcdf <OJPEGReadHeaderInfoSecTablesQTable+0x7f>
mov    %r14,%rcx
jmp    3fd60 <OJPEGReadHeaderInfoSecTablesQTable+0x100>
movzbl %cl,%eax
mov    0x130(%r12,%rax,8),%rax
cmp    0x130(%r12,%r15,8),%rax
je     3fe03 <OJPEGReadHeaderInfoSecTablesQTable+0x1a3>
add    $0x1,%ecx
movzbl %cl,%eax
cmp    %eax,%edx
jg     3fd44 <OJPEGReadHeaderInfoSecTablesQTable+0xe4>
callq  8440 <_TIFFmalloc@plt>
test   %rax,%rax
je     3fe38 <OJPEGReadHeaderInfoSecTablesQTable+0x1d8>
mov    %r14,%rdx
mov    %rax,%r14
movl   $0x49,(%r14)
movb   $0xff,0x4(%r14)
movb   $0xdb,0x5(%r14)
movb   $0x0,0x6(%r14)
movb   $0x43,0x7(%r14)
mov    %r13b,0x8(%r14)
mov    0x130(%r12,%r15,8),%rsi
mov    0x3d0(%rbx),%rcx
mov    0x3b8(%rbx),%rdi
callq  *%rcx
mov    0x3c0(%rbx),%rax
mov    0x3b8(%rbx),%rdi
lea    0x9(%r14),%rsi
mov    $0x40,%edx
callq  *%rax
cmp    $0x40,%eax
jne    3fe6d <OJPEGReadHeaderInfoSecTablesQTable+0x20d>
mov    0x178(%r12,%r15,8),%rdi
test   %rdi,%rdi
je     3fde6 <OJPEGReadHeaderInfoSecTablesQTable+0x186>
callq  8bb0 <_TIFFfree@plt>
mov    %r14,0x178(%r12,%r15,8)
mov    %r13b,0x1ee(%r12,%r15,1)
xor    %r14d,%r14d
mov    $0x49,%edi
jmpq   3fcf7 <OJPEGReadHeaderInfoSecTablesQTable+0x97>
xor    %eax,%eax
mov    0x3b8(%rbx),%rdi
lea    0x32c74(%rip),%rdx        # 72a87 <module.109+0x37>
lea    0x32c36(%rip),%rsi        # 72a50 <module.109>
callq  8a00 <TIFFErrorExt@plt>
mov    %r14,%rax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rbx),%rdi
lea    0x3221a(%rip),%rdx        # 72062 <module.45+0x1c>
lea    0x32c01(%rip),%rsi        # 72a50 <module.109>
callq  8a00 <TIFFErrorExt@plt>
mov    %r14,%rax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
mov    %r14,%rdi
callq  8bb0 <_TIFFfree@plt>
xor    %eax,%eax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
nopl   (%rax)

000000000003fe90 <OJPEGReadHeaderInfoSecTablesDcTable>:
push   %rbp
mov    %rsp,%rbp
sub    $0x50,%rsp
lea    0x32c06(%rip),%rsi        # 72aa5 <module.112>
xor    %edx,%edx
mov    0x350(%rdi),%rcx
mov    0x148(%rcx),%rax
test   %rax,%rax
je     3fee9 <OJPEGReadHeaderInfoSecTablesDcTable+0x59>
movb   $0x0,0x650(%rcx)
lea    -0x48(%rbp),%rax
mov    $0x10,%esi
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rax,%rbx
mov    %rdi,%r13
mov    %rdx,%r14
mov    %rsi,%r15
mov    %r14,%r12
jmp    3ff1d <OJPEGReadHeaderInfoSecTablesDcTable+0x8d>
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
lea    0x32b7a(%rip),%rdx        # 72a73 <module.109+0x23>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
lea    -0x1(%r8),%eax
movslq %eax,%rax
movzbl 0x1f4(%rcx,%rax,1),%eax
mov    %al,0x1f4(%rcx,%r8,1)
add    $0x1,%r14d
movzbl 0x10c(%rcx),%eax
cmp    %al,%r14b
jb     3ff44 <OJPEGReadHeaderInfoSecTablesDcTable+0xb4>
mov    $0x1,%eax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
movzbl %r14b,%r8d
mov    0x148(%rcx,%r8,8),%rax
test   %rax,%rax
je     3ff02 <OJPEGReadHeaderInfoSecTablesDcTable+0x72>
lea    -0x1(%r8),%esi
test   %r14b,%r14b
jne    3ff63 <OJPEGReadHeaderInfoSecTablesDcTable+0xd3>
mov    %r12,%rax
jmp    3ff8d <OJPEGReadHeaderInfoSecTablesDcTable+0xfd>
movslq %esi,%rdx
cmp    0x148(%rcx,%rdx,8),%rax
je     3ff02 <OJPEGReadHeaderInfoSecTablesDcTable+0x72>
mov    %r12,%rax
jmp    3ff8d <OJPEGReadHeaderInfoSecTablesDcTable+0xfd>
movzbl %al,%edx
mov    0x148(%rcx,%rdx,8),%rdx
cmp    0x148(%rcx,%r8,8),%rdx
je     3ffda <OJPEGReadHeaderInfoSecTablesDcTable+0x14a>
add    $0x1,%eax
movzbl %al,%edx
cmp    %edx,%esi
jg     3ff75 <OJPEGReadHeaderInfoSecTablesDcTable+0xe5>
mov    0x148(%rcx,%r8,8),%rsi
mov    0x3d0(%r13),%rax
mov    0x3b8(%r13),%rdi
mov    %r12,%rdx
mov    %rcx,-0x38(%rbp)
mov    %r8,-0x30(%rbp)
callq  *%rax
mov    %r15,%rdx
mov    %rbx,%rsi
mov    0x3c0(%r13),%rax
mov    0x3b8(%r13),%rdi
callq  *%rax
cmp    $0x10,%eax
jne    4000f <OJPEGReadHeaderInfoSecTablesDcTable+0x17f>
mov    %r12,%rax
mov    %rax,%rbx
jmp    40035 <OJPEGReadHeaderInfoSecTablesDcTable+0x1a5>
xor    %eax,%eax
mov    0x3b8(%r13),%rdi
lea    0x32adf(%rip),%rdx        # 72ac9 <module.112+0x24>
lea    0x32ab4(%rip),%rsi        # 72aa5 <module.112>
callq  8a00 <TIFFErrorExt@plt>
mov    %r12,%rax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
mov    %r12,%rax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
movzbl %al,%ecx
movzbl -0x48(%rbp,%rcx,1),%ecx
add    %ecx,%ebx
add    $0x1,%eax
cmp    $0xf,%al
jbe    40028 <OJPEGReadHeaderInfoSecTablesDcTable+0x198>
lea    0x19(%rbx),%r15d
mov    %r15d,%edi
callq  8440 <_TIFFmalloc@plt>
test   %rax,%rax
je     4006d <OJPEGReadHeaderInfoSecTablesDcTable+0x1dd>
mov    %r15d,(%rax)
movb   $0xff,0x4(%rax)
movb   $0xc4,0x5(%rax)
lea    0x13(%rbx),%edx
mov    %rdx,%rcx
shr    $0x8,%ecx
mov    %cl,0x6(%rax)
mov    %dl,0x7(%rax)
mov    %r14b,0x8(%rax)
mov    %r12,%rcx
jmp    400b1 <OJPEGReadHeaderInfoSecTablesDcTable+0x221>
xor    %eax,%eax
mov    0x3b8(%r13),%rdi
lea    0x31fe5(%rip),%rdx        # 72062 <module.45+0x1c>
lea    0x32a21(%rip),%rsi        # 72aa5 <module.112>
callq  8a00 <TIFFErrorExt@plt>
mov    %r12,%rax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
movzbl %cl,%esi
movzbl -0x48(%rbp,%rsi,1),%edx
mov    %dl,0x9(%rax,%rsi,1)
add    $0x1,%ecx
cmp    $0xf,%cl
jbe    400a2 <OJPEGReadHeaderInfoSecTablesDcTable+0x212>
mov    %rax,%r15
mov    0x3c0(%r13),%rcx
mov    0x3b8(%r13),%rdi
lea    0x19(%r15),%rsi
mov    %ebx,%edx
callq  *%rcx
cmp    %eax,%ebx
jne    4011f <OJPEGReadHeaderInfoSecTablesDcTable+0x28f>
mov    -0x30(%rbp),%rbx
mov    -0x38(%rbp),%rcx
mov    0x198(%rcx,%rbx,8),%rdi
test   %rdi,%rdi
je     400fb <OJPEGReadHeaderInfoSecTablesDcTable+0x26b>
mov    %r13,-0x38(%rbp)
mov    %rcx,%r13
callq  8bb0 <_TIFFfree@plt>
mov    %r13,%rcx
mov    -0x38(%rbp),%r13
mov    %r15,0x198(%rcx,%rbx,8)
mov    %r14,%rax
shl    $0x4,%eax
mov    %al,0x1f4(%rcx,%rbx,1)
mov    $0x10,%r15d
lea    -0x48(%rbp),%rbx
jmpq   3ff19 <OJPEGReadHeaderInfoSecTablesDcTable+0x89>
mov    %r15,%rdi
callq  8bb0 <_TIFFfree@plt>
mov    %r12,%rax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   

0000000000040140 <OJPEGReadHeaderInfoSecTablesAcTable>:
push   %rbp
mov    %rsp,%rbp
sub    $0x50,%rsp
lea    0x32999(%rip),%rsi        # 72ae8 <module.114>
xor    %edx,%edx
mov    0x350(%rdi),%rcx
mov    0x160(%rcx),%rax
test   %rax,%rax
je     40199 <OJPEGReadHeaderInfoSecTablesAcTable+0x59>
movb   $0x0,0x650(%rcx)
lea    -0x48(%rbp),%rsi
mov    $0x10,%eax
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rsi,%rbx
mov    %rdi,%r13
mov    %rdx,%r14
mov    %rax,%r15
mov    %r14,%r12
jmp    401da <OJPEGReadHeaderInfoSecTablesAcTable+0x9a>
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
lea    0x328ca(%rip),%rdx        # 72a73 <module.109+0x23>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
lea    -0x1(%r8),%eax
movslq %eax,%rax
movzbl 0x1f4(%rcx,%rax,1),%eax
and    $0xf,%al
movzbl 0x1f4(%rcx,%r8,1),%edx
or     %dl,%al
mov    %al,0x1f4(%rcx,%r8,1)
add    $0x1,%r14d
movzbl 0x10c(%rcx),%eax
cmp    %al,%r14b
jb     40201 <OJPEGReadHeaderInfoSecTablesAcTable+0xc1>
mov    $0x1,%eax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
movzbl %r14b,%r8d
mov    0x160(%rcx,%r8,8),%rax
test   %rax,%rax
je     401b2 <OJPEGReadHeaderInfoSecTablesAcTable+0x72>
lea    -0x1(%r8),%esi
test   %r14b,%r14b
jne    40220 <OJPEGReadHeaderInfoSecTablesAcTable+0xe0>
mov    %r12,%rax
jmp    4024a <OJPEGReadHeaderInfoSecTablesAcTable+0x10a>
movslq %esi,%rdx
cmp    0x160(%rcx,%rdx,8),%rax
je     401b2 <OJPEGReadHeaderInfoSecTablesAcTable+0x72>
mov    %r12,%rax
jmp    4024a <OJPEGReadHeaderInfoSecTablesAcTable+0x10a>
movzbl %al,%edx
mov    0x160(%rcx,%rdx,8),%rdx
cmp    0x160(%rcx,%r8,8),%rdx
je     40297 <OJPEGReadHeaderInfoSecTablesAcTable+0x157>
add    $0x1,%eax
movzbl %al,%edx
cmp    %edx,%esi
jg     40232 <OJPEGReadHeaderInfoSecTablesAcTable+0xf2>
mov    0x160(%rcx,%r8,8),%rsi
mov    0x3d0(%r13),%rax
mov    0x3b8(%r13),%rdi
mov    %r12,%rdx
mov    %rcx,-0x38(%rbp)
mov    %r8,-0x30(%rbp)
callq  *%rax
mov    %r15,%rdx
mov    %rbx,%rsi
mov    0x3c0(%r13),%rax
mov    0x3b8(%r13),%rdi
callq  *%rax
cmp    $0x10,%eax
jne    402cc <OJPEGReadHeaderInfoSecTablesAcTable+0x18c>
mov    %r12,%rax
mov    %rax,%rbx
jmp    402f2 <OJPEGReadHeaderInfoSecTablesAcTable+0x1b2>
xor    %eax,%eax
mov    0x3b8(%r13),%rdi
lea    0x32865(%rip),%rdx        # 72b0c <module.114+0x24>
lea    0x3283a(%rip),%rsi        # 72ae8 <module.114>
callq  8a00 <TIFFErrorExt@plt>
mov    %r12,%rax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
mov    %r12,%rax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
movzbl %al,%ecx
movzbl -0x48(%rbp,%rcx,1),%ecx
add    %ecx,%ebx
add    $0x1,%eax
cmp    $0xf,%al
jbe    402e5 <OJPEGReadHeaderInfoSecTablesAcTable+0x1a5>
lea    0x19(%rbx),%r15d
mov    %r15d,%edi
callq  8440 <_TIFFmalloc@plt>
test   %rax,%rax
je     4032f <OJPEGReadHeaderInfoSecTablesAcTable+0x1ef>
mov    %r15d,(%rax)
movb   $0xff,0x4(%rax)
movb   $0xc4,0x5(%rax)
lea    0x13(%rbx),%edx
mov    %rdx,%rcx
shr    $0x8,%ecx
mov    %cl,0x6(%rax)
mov    %dl,0x7(%rax)
mov    %r14,%rcx
or     $0x10,%cl
mov    %cl,0x8(%rax)
mov    %r12,%rcx
jmp    40373 <OJPEGReadHeaderInfoSecTablesAcTable+0x233>
xor    %eax,%eax
mov    0x3b8(%r13),%rdi
lea    0x31d23(%rip),%rdx        # 72062 <module.45+0x1c>
lea    0x327a2(%rip),%rsi        # 72ae8 <module.114>
callq  8a00 <TIFFErrorExt@plt>
mov    %r12,%rax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
movzbl %cl,%esi
movzbl -0x48(%rbp,%rsi,1),%edx
mov    %dl,0x9(%rax,%rsi,1)
add    $0x1,%ecx
cmp    $0xf,%cl
jbe    40364 <OJPEGReadHeaderInfoSecTablesAcTable+0x224>
mov    %rax,%r15
mov    0x3c0(%r13),%rcx
mov    0x3b8(%r13),%rdi
lea    0x19(%r15),%rsi
mov    %ebx,%edx
callq  *%rcx
cmp    %eax,%ebx
jne    403e6 <OJPEGReadHeaderInfoSecTablesAcTable+0x2a6>
mov    -0x30(%rbp),%rbx
mov    -0x38(%rbp),%rcx
mov    0x1b8(%rcx,%rbx,8),%rdi
test   %rdi,%rdi
je     403bd <OJPEGReadHeaderInfoSecTablesAcTable+0x27d>
mov    %r13,-0x38(%rbp)
mov    %rcx,%r13
callq  8bb0 <_TIFFfree@plt>
mov    %r13,%rcx
mov    -0x38(%rbp),%r13
mov    %r15,0x1b8(%rcx,%rbx,8)
movzbl 0x1f4(%rcx,%rbx,1),%eax
or     %r14b,%al
mov    %al,0x1f4(%rcx,%rbx,1)
mov    $0x10,%r15d
lea    -0x48(%rbp),%rbx
jmpq   401d6 <OJPEGReadHeaderInfoSecTablesAcTable+0x96>
mov    %r15,%rdi
callq  8bb0 <_TIFFfree@plt>
mov    %r12,%rax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

0000000000040410 <OJPEGReadBufferFill>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rdi,%r14
xor    %r15d,%r15d
jmp    4045c <OJPEGReadBufferFill+0x4c>
test   %eax,%eax
jne    404e7 <OJPEGReadBufferFill+0xd7>
mov    0x110(%r14),%rax
test   %rax,%rax
je     40451 <OJPEGReadBufferFill+0x41>
mov    %rax,0x648(%r14)
mov    0x118(%r14),%rax
mov    %rax,0x658(%r14)
movl   $0x1,0x638(%r14)
mov    0x658(%r14),%rax
test   %rax,%rax
je     404f4 <OJPEGReadBufferFill+0xe4>
movzbl 0x650(%r14),%eax
test   %al,%al
jne    4049d <OJPEGReadBufferFill+0x8d>
mov    (%r14),%rcx
mov    0x3d0(%rcx),%rax
mov    0x3b8(%rcx),%rdi
mov    %r15,%rdx
mov    0x648(%r14),%rsi
callq  *%rax
movb   $0x1,0x650(%r14)
mov    0x658(%r14),%rcx
cmp    $0x7ff,%rcx
jbe    404b2 <OJPEGReadBufferFill+0xa2>
mov    $0x800,%ecx
mov    (%r14),%rdx
mov    0x3c0(%rdx),%rax
mov    0x3b8(%rdx),%rdi
lea    0x670(%r14),%r15
movzwl %cx,%edx
mov    %r15,%rsi
callq  *%rax
test   %rax,%rax
jne    4058e <OJPEGReadBufferFill+0x17e>
xor    %eax,%eax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
mov    %r15,%rax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
movb   $0x0,0x650(%r14)
mov    0x638(%r14),%eax
test   %eax,%eax
je     40428 <OJPEGReadBufferFill+0x18>
cmp    $0x1,%eax
je     405b6 <OJPEGReadBufferFill+0x1a6>
cmp    $0x2,%eax
jne    405c6 <OJPEGReadBufferFill+0x1b6>
mov    (%r14),%rdi
callq  8c70 <_TIFFFillStriles@plt>
test   %eax,%eax
je     405d3 <OJPEGReadBufferFill+0x1c3>
mov    (%r14),%r8
mov    0xe8(%r8),%rcx
test   %rcx,%rcx
je     405e0 <OJPEGReadBufferFill+0x1d0>
mov    0xf0(%r8),%rax
test   %rax,%rax
je     405ed <OJPEGReadBufferFill+0x1dd>
mov    0x63c(%r14),%esi
cmp    0x640(%r14),%esi
je     405fa <OJPEGReadBufferFill+0x1ea>
mov    (%rcx,%rsi,8),%rdx
mov    %rdx,0x648(%r14)
test   %rdx,%rdx
jne    4060a <OJPEGReadBufferFill+0x1fa>
mov    0x63c(%r14),%eax
add    $0x1,%eax
mov    %eax,0x63c(%r14)
jmpq   4045c <OJPEGReadBufferFill+0x4c>
lea    0x317ff(%rip),%rsi        # 71d94 <module.15+0x28>
lea    0x32593(%rip),%rcx        # 72b2f <module.114+0x47>
test   %rax,%rax
jg     40652 <OJPEGReadBufferFill+0x242>
lea    0x3257f(%rip),%rdi        # 72b2b <module.114+0x43>
mov    $0x7b0,%edx
callq  8490 <__assert_fail@plt>
movl   $0x2,0x638(%r14)
jmpq   4045c <OJPEGReadBufferFill+0x4c>
mov    %r15,%rax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
mov    %r15,%rax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
mov    %r15,%rax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
mov    %r15,%rax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
movl   $0x3,0x638(%r14)
jmpq   4045c <OJPEGReadBufferFill+0x4c>
mov    0xf0(%r14),%rax
cmp    %rax,%rdx
jae    4066b <OJPEGReadBufferFill+0x25b>
mov    0xf0(%r8),%rcx
test   %rcx,%rcx
je     4067b <OJPEGReadBufferFill+0x26b>
test   %rcx,%rcx
je     4068a <OJPEGReadBufferFill+0x27a>
mov    (%rcx,%rsi,8),%rcx
mov    %rcx,0x658(%r14)
test   %rcx,%rcx
je     406af <OJPEGReadBufferFill+0x29f>
add    %rdx,%rcx
cmp    %rcx,%rax
jae    40578 <OJPEGReadBufferFill+0x168>
sub    %rdx,%rax
mov    %rax,0x658(%r14)
jmpq   40578 <OJPEGReadBufferFill+0x168>
cmp    $0x800,%rax
jle    406bf <OJPEGReadBufferFill+0x2af>
lea    0x324e2(%rip),%rdi        # 72b43 <module.114+0x5b>
mov    $0x7b1,%edx
callq  8490 <__assert_fail@plt>
movq   $0x0,0x648(%r14)
jmpq   40578 <OJPEGReadBufferFill+0x168>
sub    %rdx,%rax
mov    %rax,0x658(%r14)
jmpq   40578 <OJPEGReadBufferFill+0x168>
xor    %eax,%eax
mov    0x3b8(%r8),%rdi
mov    (%r8),%rsi
lea    0x324e1(%rip),%rdx        # 72b7e <module.114+0x96>
callq  8a00 <TIFFErrorExt@plt>
mov    %r15,%rax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
movq   $0x0,0x648(%r14)
jmpq   40578 <OJPEGReadBufferFill+0x168>
cmp    $0xffff,%rax
jle    406d8 <OJPEGReadBufferFill+0x2c8>
lea    0x32485(%rip),%rdi        # 72b53 <module.114+0x6b>
mov    $0x7b2,%edx
callq  8490 <__assert_fail@plt>
mov    0x658(%r14),%rdx
cmp    %rax,%rdx
jae    406f5 <OJPEGReadBufferFill+0x2e5>
lea    0x32470(%rip),%rdi        # 72b5b <module.114+0x73>
mov    $0x7b3,%edx
callq  8490 <__assert_fail@plt>
mov    %ax,0x660(%r14)
mov    %r15,0x668(%r14)
movzwl %ax,%eax
sub    %rax,%rdx
mov    %rdx,0x658(%r14)
add    0x648(%r14),%rax
mov    %rax,0x648(%r14)
mov    $0x1,%eax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
xchg   %ax,%ax

0000000000040730 <OJPEGReadByte>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
movzwl 0x660(%rdi),%eax
test   %ax,%ax
je     4077c <OJPEGReadByte+0x4c>
mov    0x668(%rdi),%rax
movzbl (%rax),%eax
mov    %al,(%rsi)
mov    0x668(%rdi),%rax
add    $0x1,%rax
mov    %rax,0x668(%rdi)
movzwl 0x660(%rdi),%eax
add    $0xffff,%eax
mov    %ax,0x660(%rdi)
mov    $0x1,%eax
leaveq 
retq   
mov    %rdi,%rax
mov    %r15,-0x10(%rbp)
mov    %rsi,-0x8(%rbp)
mov    %rdi,%r15
mov    %rax,%rdi
callq  40410 <OJPEGReadBufferFill>
test   %eax,%eax
jne    4079e <OJPEGReadByte+0x6e>
xor    %eax,%eax
mov    -0x10(%rbp),%r15
leaveq 
retq   
movzwl 0x660(%r15),%eax
test   %ax,%ax
je     407b8 <OJPEGReadByte+0x88>
mov    %r15,%rdi
mov    -0x8(%rbp),%rsi
mov    -0x10(%rbp),%r15
jmp    40744 <OJPEGReadByte+0x14>
lea    0x323dd(%rip),%rdi        # 72b9c <module.114+0xb4>
lea    0x315ce(%rip),%rsi        # 71d94 <module.15+0x28>
mov    $0x7f8,%edx
lea    0x323df(%rip),%rcx        # 72bb1 <module.114+0xc9>
callq  8490 <__assert_fail@plt>
nopw   0x0(%rax,%rax,1)

00000000000407e0 <OJPEGReadBytePeek>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
movzwl 0x660(%rdi),%eax
test   %ax,%ax
je     40807 <OJPEGReadBytePeek+0x27>
mov    0x668(%rdi),%rax
movzbl (%rax),%eax
mov    %al,(%rsi)
mov    $0x1,%eax
leaveq 
retq   
mov    %rdi,%rax
mov    %r15,-0x10(%rbp)
mov    %rsi,-0x8(%rbp)
mov    %rdi,%r15
mov    %rax,%rdi
callq  40410 <OJPEGReadBufferFill>
test   %eax,%eax
jne    40829 <OJPEGReadBytePeek+0x49>
xor    %eax,%eax
mov    -0x10(%rbp),%r15
leaveq 
retq   
movzwl 0x660(%r15),%eax
test   %ax,%ax
je     40843 <OJPEGReadBytePeek+0x63>
mov    %r15,%rdi
mov    -0x8(%rbp),%rsi
mov    -0x10(%rbp),%r15
jmp    407f4 <OJPEGReadBytePeek+0x14>
lea    0x32352(%rip),%rdi        # 72b9c <module.114+0xb4>
lea    0x31543(%rip),%rsi        # 71d94 <module.15+0x28>
mov    $0x807,%edx
lea    0x32362(%rip),%rcx        # 72bbf <module.114+0xd7>
callq  8490 <__assert_fail@plt>
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   (%rax)

0000000000040870 <OJPEGReadByteAdvance>:
push   %rbp
mov    %rsp,%rbp
movzwl 0x660(%rdi),%ecx
test   %cx,%cx
jne    4089f <OJPEGReadByteAdvance+0x2f>
lea    0x32315(%rip),%rdi        # 72b9c <module.114+0xb4>
lea    0x31506(%rip),%rsi        # 71d94 <module.15+0x28>
mov    $0x810,%edx
lea    0x32337(%rip),%rcx        # 72bd1 <module.114+0xe9>
callq  8490 <__assert_fail@plt>
mov    0x668(%rdi),%rax
add    $0x1,%rax
mov    %rax,0x668(%rdi)
lea    0xffff(%rcx),%eax
mov    %ax,0x660(%rdi)
leaveq 
retq   

00000000000408c0 <OJPEGReadWord>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %rsi,-0x10(%rbp)
mov    %rdi,-0x8(%rbp)
lea    -0x11(%rbp),%rsi
callq  40730 <OJPEGReadByte>
test   %eax,%eax
jne    408e1 <OJPEGReadWord+0x21>
xor    %eax,%eax
leaveq 
retq   
movzbl -0x11(%rbp),%eax
shl    $0x8,%eax
mov    -0x10(%rbp),%rcx
mov    %ax,(%rcx)
lea    -0x11(%rbp),%rsi
mov    -0x8(%rbp),%rdi
callq  40730 <OJPEGReadByte>
test   %eax,%eax
jne    40904 <OJPEGReadWord+0x44>
xor    %eax,%eax
leaveq 
retq   
movzbl -0x11(%rbp),%eax
mov    -0x10(%rbp),%rdx
movzwl (%rdx),%ecx
or     %cx,%ax
mov    %ax,(%rdx)
mov    $0x1,%eax
leaveq 
retq   
nopl   0x0(%rax)

0000000000040920 <OJPEGReadBlock>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
lea    0x31465(%rip),%rax        # 71d94 <module.15+0x28>
lea    0x322b6(%rip),%rcx        # 72bec <module.114+0x104>
test   %si,%si
je     4095a <OJPEGReadBlock+0x3a>
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rsi,%rbx
mov    %rdx,%r12
mov    %rdi,%r13
jmp    40975 <OJPEGReadBlock+0x55>
mov    %rax,%rsi
lea    0x32282(%rip),%rdi        # 72be6 <module.114+0xfe>
mov    $0x828,%edx
callq  8490 <__assert_fail@plt>
sub    %r14w,%bx
add    %r15,%r12
movzwl 0x660(%r13),%eax
test   %ax,%ax
je     409ef <OJPEGReadBlock+0xcf>
movzwl 0x660(%r13),%r14d
cmp    %r14w,%bx
ja     40993 <OJPEGReadBlock+0x73>
mov    %rbx,%r14
movzwl %r14w,%r15d
mov    0x668(%r13),%rsi
mov    %r12,%rdi
mov    %r15,%rdx
callq  8790 <_TIFFmemcpy@plt>
mov    %r15,%rax
add    0x668(%r13),%rax
mov    %rax,0x668(%r13)
movzwl 0x660(%r13),%eax
sub    %r14w,%ax
mov    %ax,0x660(%r13)
cmp    %bx,%r14w
jne    4096e <OJPEGReadBlock+0x4e>
mov    $0x1,%eax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
mov    %r13,%rdi
callq  40410 <OJPEGReadBufferFill>
test   %eax,%eax
je     40a2b <OJPEGReadBlock+0x10b>
movzwl 0x660(%r13),%eax
test   %ax,%ax
jne    40982 <OJPEGReadBlock+0x62>
lea    0x32189(%rip),%rdi        # 72b9c <module.114+0xb4>
mov    $0x831,%edx
lea    0x321cd(%rip),%rcx        # 72bec <module.114+0x104>
lea    0x3136e(%rip),%rsi        # 71d94 <module.15+0x28>
callq  8490 <__assert_fail@plt>
xor    %eax,%eax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

0000000000040a50 <OJPEGReadSkip>:
push   %rbp
mov    %rsp,%rbp
movzwl 0x660(%rdi),%ecx
cmp    %si,%cx
jb     40a65 <OJPEGReadSkip+0x15>
mov    %rsi,%rdx
jmp    40a68 <OJPEGReadSkip+0x18>
mov    %rcx,%rdx
movzwl %dx,%eax
add    0x668(%rdi),%rax
mov    %rax,0x668(%rdi)
mov    %rcx,%rax
sub    %dx,%ax
mov    %ax,0x660(%rdi)
cmp    %dx,%si
jne    40a8d <OJPEGReadSkip+0x3d>
leaveq 
retq   
cmp    %dx,%cx
je     40ab1 <OJPEGReadSkip+0x61>
lea    0x32162(%rip),%rdi        # 72bfb <module.114+0x113>
lea    0x312f4(%rip),%rsi        # 71d94 <module.15+0x28>
mov    $0x84d,%edx
lea    0x32165(%rip),%rcx        # 72c11 <module.114+0x129>
callq  8490 <__assert_fail@plt>
sub    %dx,%si
movzwl %si,%ecx
mov    0x658(%rdi),%rax
cmp    %rcx,%rax
jae    40ac6 <OJPEGReadSkip+0x76>
mov    %rax,%rsi
movzwl %si,%ecx
mov    %rcx,%rdx
add    0x648(%rdi),%rdx
mov    %rdx,0x648(%rdi)
sub    %rcx,%rax
mov    %rax,0x658(%rdi)
movb   $0x0,0x650(%rdi)
leaveq 
retq   
nopl   (%rax)

0000000000040af0 <OJPEGWriteStream>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rdi,%r12
mov    %rsi,%r14
mov    %rdx,%r15
mov    0x350(%r12),%r13
movl   $0x0,(%r15)
xor    %ebx,%ebx
mov    $0x1,%eax
mov    $0x2,%r9d
mov    $0x3,%r8d
jmp    40b78 <OJPEGWriteStream+0x88>
cmp    $0x12,%ecx
ja     40b6d <OJPEGWriteStream+0x7d>
lea    0x311db(%rip),%rdx        # 71d20 <module.12+0x1c3>
movslq (%rdx,%rcx,4),%rcx
add    %rdx,%rcx
jmpq   *%rcx
mov    %r12,%rdi
mov    %r14,%rsi
mov    %r15,%rdx
callq  413b0 <OJPEGWriteStreamEoi>
mov    $0x1,%eax
mov    $0x3,%r8d
mov    $0x2,%r9d
mov    (%r15),%ecx
test   %ecx,%ecx
jne    40e4d <OJPEGWriteStream+0x35d>
mov    0xe70(%r13),%ecx
cmp    $0x12,%ecx
jbe    40b39 <OJPEGWriteStream+0x49>
lea    0x32094(%rip),%rdi        # 72c1f <module.114+0x137>
lea    0x31202(%rip),%rsi        # 71d94 <module.15+0x28>
mov    $0x864,%edx
lea    0x32098(%rip),%rcx        # 72c36 <module.114+0x14e>
callq  8490 <__assert_fail@plt>
mov    %r12,%rdi
mov    %r14,%rsi
mov    %r15,%rdx
callq  40e80 <OJPEGWriteStreamSoi>
mov    $0x1,%eax
mov    $0x3,%r8d
mov    $0x2,%r9d
jmp    40b6d <OJPEGWriteStream+0x7d>
mov    %r12,%rdi
mov    %rbx,%rsi
mov    %r14,%rdx
mov    %r15,%rcx
callq  40ec0 <OJPEGWriteStreamQTable>
mov    $0x1,%eax
mov    $0x3,%r8d
mov    $0x2,%r9d
jmp    40b6d <OJPEGWriteStream+0x7d>
mov    %rax,%rsi
mov    %r12,%rdi
mov    %r14,%rdx
mov    %r15,%rcx
callq  40ec0 <OJPEGWriteStreamQTable>
mov    $0x1,%eax
mov    $0x3,%r8d
mov    $0x2,%r9d
jmpq   40b6d <OJPEGWriteStream+0x7d>
mov    %r9,%rsi
mov    %r12,%rdi
mov    %r14,%rdx
mov    %r15,%rcx
callq  40ec0 <OJPEGWriteStreamQTable>
mov    $0x1,%eax
mov    $0x3,%r8d
mov    $0x2,%r9d
jmpq   40b6d <OJPEGWriteStream+0x7d>
mov    %r8,%rsi
mov    %r12,%rdi
mov    %r14,%rdx
mov    %r15,%rcx
callq  40ec0 <OJPEGWriteStreamQTable>
mov    $0x1,%eax
mov    $0x3,%r8d
mov    $0x2,%r9d
jmpq   40b6d <OJPEGWriteStream+0x7d>
mov    %r12,%rdi
mov    %rbx,%rsi
mov    %r14,%rdx
mov    %r15,%rcx
callq  40f10 <OJPEGWriteStreamDcTable>
mov    $0x1,%eax
mov    $0x3,%r8d
mov    $0x2,%r9d
jmpq   40b6d <OJPEGWriteStream+0x7d>
mov    %rax,%rsi
mov    %r12,%rdi
mov    %r14,%rdx
mov    %r15,%rcx
callq  40f10 <OJPEGWriteStreamDcTable>
mov    $0x1,%eax
mov    $0x3,%r8d
mov    $0x2,%r9d
jmpq   40b6d <OJPEGWriteStream+0x7d>
mov    %r9,%rsi
mov    %r12,%rdi
mov    %r14,%rdx
mov    %r15,%rcx
callq  40f10 <OJPEGWriteStreamDcTable>
mov    $0x1,%eax
mov    $0x3,%r8d
mov    $0x2,%r9d
jmpq   40b6d <OJPEGWriteStream+0x7d>
mov    %r8,%rsi
mov    %r12,%rdi
mov    %r14,%rdx
mov    %r15,%rcx
callq  40f10 <OJPEGWriteStreamDcTable>
mov    $0x1,%eax
mov    $0x3,%r8d
mov    $0x2,%r9d
jmpq   40b6d <OJPEGWriteStream+0x7d>
mov    %r12,%rdi
mov    %rbx,%rsi
mov    %r14,%rdx
mov    %r15,%rcx
callq  40f60 <OJPEGWriteStreamAcTable>
mov    $0x1,%eax
mov    $0x3,%r8d
mov    $0x2,%r9d
jmpq   40b6d <OJPEGWriteStream+0x7d>
mov    %rax,%rsi
mov    %r12,%rdi
mov    %r14,%rdx
mov    %r15,%rcx
callq  40f60 <OJPEGWriteStreamAcTable>
mov    $0x1,%eax
mov    $0x3,%r8d
mov    $0x2,%r9d
jmpq   40b6d <OJPEGWriteStream+0x7d>
mov    %r9,%rsi
mov    %r12,%rdi
mov    %r14,%rdx
mov    %r15,%rcx
callq  40f60 <OJPEGWriteStreamAcTable>
mov    $0x1,%eax
mov    $0x3,%r8d
mov    $0x2,%r9d
jmpq   40b6d <OJPEGWriteStream+0x7d>
mov    %r8,%rsi
mov    %r12,%rdi
mov    %r14,%rdx
mov    %r15,%rcx
callq  40f60 <OJPEGWriteStreamAcTable>
mov    $0x1,%eax
mov    $0x3,%r8d
mov    $0x2,%r9d
jmpq   40b6d <OJPEGWriteStream+0x7d>
mov    %r12,%rdi
mov    %r14,%rsi
mov    %r15,%rdx
callq  40fb0 <OJPEGWriteStreamDri>
mov    $0x1,%eax
mov    $0x3,%r8d
mov    $0x2,%r9d
jmpq   40b6d <OJPEGWriteStream+0x7d>
mov    %r12,%rdi
mov    %r14,%rsi
mov    %r15,%rdx
callq  41020 <OJPEGWriteStreamSof>
mov    $0x1,%eax
mov    $0x3,%r8d
mov    $0x2,%r9d
jmpq   40b6d <OJPEGWriteStream+0x7d>
mov    %r12,%rdi
mov    %r14,%rsi
mov    %r15,%rdx
callq  41150 <OJPEGWriteStreamSos>
mov    $0x1,%eax
mov    $0x3,%r8d
mov    $0x2,%r9d
jmpq   40b6d <OJPEGWriteStream+0x7d>
mov    %r12,%rdi
mov    %r14,%rsi
mov    %r15,%rdx
callq  41250 <OJPEGWriteStreamCompressed>
test   %eax,%eax
je     40e63 <OJPEGWriteStream+0x373>
mov    $0x1,%eax
mov    $0x3,%r8d
mov    $0x2,%r9d
jmpq   40b6d <OJPEGWriteStream+0x7d>
mov    %r12,%rdi
mov    %r14,%rsi
mov    %r15,%rdx
callq  41350 <OJPEGWriteStreamRst>
mov    $0x1,%eax
mov    $0x3,%r8d
mov    $0x2,%r9d
jmpq   40b6d <OJPEGWriteStream+0x7d>
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
mov    %rbx,%rax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
nopl   0x0(%rax)

0000000000040e80 <OJPEGWriteStreamSoi>:
push   %rbp
mov    %rsp,%rbp
mov    0x350(%rdi),%rcx
lea    0xe74(%rcx),%rax
movb   $0xff,(%rax)
movb   $0xd8,0xe75(%rcx)
movl   $0x2,(%rdx)
mov    %rax,(%rsi)
mov    0xe70(%rcx),%eax
add    $0x1,%eax
mov    %eax,0xe70(%rcx)
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)

0000000000040ec0 <OJPEGWriteStreamQTable>:
push   %rbp
mov    %rsp,%rbp
mov    0x350(%rdi),%rdi
movzbl %sil,%esi
mov    0x178(%rdi,%rsi,8),%rax
test   %rax,%rax
je     40ef2 <OJPEGWriteStreamQTable+0x32>
add    $0x4,%rax
mov    %rax,(%rdx)
mov    0x178(%rdi,%rsi,8),%rax
mov    (%rax),%eax
add    $0xfffffffc,%eax
mov    %eax,(%rcx)
mov    0xe70(%rdi),%eax
add    $0x1,%eax
mov    %eax,0xe70(%rdi)
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

0000000000040f10 <OJPEGWriteStreamDcTable>:
push   %rbp
mov    %rsp,%rbp
mov    0x350(%rdi),%rdi
movzbl %sil,%esi
mov    0x198(%rdi,%rsi,8),%rax
test   %rax,%rax
je     40f42 <OJPEGWriteStreamDcTable+0x32>
add    $0x4,%rax
mov    %rax,(%rdx)
mov    0x198(%rdi,%rsi,8),%rax
mov    (%rax),%eax
add    $0xfffffffc,%eax
mov    %eax,(%rcx)
mov    0xe70(%rdi),%eax
add    $0x1,%eax
mov    %eax,0xe70(%rdi)
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

0000000000040f60 <OJPEGWriteStreamAcTable>:
push   %rbp
mov    %rsp,%rbp
mov    0x350(%rdi),%rdi
movzbl %sil,%esi
mov    0x1b8(%rdi,%rsi,8),%rax
test   %rax,%rax
je     40f92 <OJPEGWriteStreamAcTable+0x32>
add    $0x4,%rax
mov    %rax,(%rdx)
mov    0x1b8(%rdi,%rsi,8),%rax
mov    (%rax),%eax
add    $0xfffffffc,%eax
mov    %eax,(%rcx)
mov    0xe70(%rdi),%eax
add    $0x1,%eax
mov    %eax,0xe70(%rdi)
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

0000000000040fb0 <OJPEGWriteStreamDri>:
push   %rbp
mov    %rsp,%rbp
mov    0x350(%rdi),%rcx
movzwl 0x1d8(%rcx),%eax
test   %ax,%ax
je     41003 <OJPEGWriteStreamDri+0x53>
lea    0xe74(%rcx),%r8
movb   $0xff,(%r8)
movb   $0xdd,0xe75(%rcx)
movb   $0x0,0xe76(%rcx)
movb   $0x4,0xe77(%rcx)
mov    %rax,%rdi
shr    $0x8,%edi
mov    %dil,0xe78(%rcx)
mov    %al,0xe79(%rcx)
movl   $0x6,(%rdx)
mov    %r8,(%rsi)
mov    0xe70(%rcx),%eax
add    $0x1,%eax
mov    %eax,0xe70(%rcx)
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nop

0000000000041020 <OJPEGWriteStreamSof>:
push   %rbp
mov    %rsp,%rbp
mov    0x350(%rdi),%r11
movzbl 0x10e(%r11),%edi
lea    0x8(%rdi,%rdi,2),%eax
cmp    $0xff,%eax
jle    4105d <OJPEGWriteStreamSof+0x3d>
lea    0x31c16(%rip),%rdi        # 72c5b <module.114+0x173>
lea    0x30d48(%rip),%rsi        # 71d94 <module.15+0x28>
mov    $0x8ef,%edx
lea    0x31bef(%rip),%rcx        # 72c47 <module.114+0x15f>
callq  8490 <__assert_fail@plt>
lea    0xe74(%r11),%r10
movb   $0xff,(%r10)
movzbl 0x1dc(%r11),%eax
mov    %al,0xe75(%r11)
movb   $0x0,0xe76(%r11)
lea    0x8(%rdi,%rdi,2),%eax
mov    %al,0xe77(%r11)
movb   $0x8,0xe78(%r11)
mov    0x1e4(%r11),%ecx
mov    %rcx,%rax
shr    $0x8,%eax
mov    %al,0xe79(%r11)
mov    %cl,0xe7a(%r11)
mov    0x1e0(%r11),%ecx
mov    %rcx,%rax
shr    $0x8,%eax
mov    %al,0xe7b(%r11)
mov    %cl,0xe7c(%r11)
mov    %dil,0xe7d(%r11)
xor    %eax,%eax
jmp    41127 <OJPEGWriteStreamSof+0x107>
movzbl 0x10d(%r11),%ecx
movzbl %al,%r9d
add    %r9d,%ecx
movslq %ecx,%r8
movzbl 0x1e8(%r8,%r11,1),%edi
lea    0xa(%r9,%r9,2),%ecx
movslq %ecx,%rcx
mov    %dil,(%r10,%rcx,1)
movzbl 0x1eb(%r8,%r11,1),%edi
lea    0xb(%r9,%r9,2),%ecx
movslq %ecx,%rcx
mov    %dil,(%r10,%rcx,1)
movzbl 0x1ee(%r11,%r8,1),%edi
lea    0xc(%r9,%r9,2),%ecx
movslq %ecx,%rcx
mov    %dil,(%r10,%rcx,1)
add    $0x1,%eax
movzbl 0x10e(%r11),%ecx
cmp    %al,%cl
ja     410d3 <OJPEGWriteStreamSof+0xb3>
lea    0xa(%rcx,%rcx,2),%eax
mov    %eax,(%rdx)
mov    %r10,(%rsi)
mov    0xe70(%r11),%eax
add    $0x1,%eax
mov    %eax,0xe70(%r11)
leaveq 
retq   
nop

0000000000041150 <OJPEGWriteStreamSos>:
push   %rbp
mov    %rsp,%rbp
mov    0x350(%rdi),%r11
movzbl 0x10e(%r11),%ecx
lea    0x6(%rcx,%rcx,1),%eax
cmp    $0xfe,%eax
jle    4118d <OJPEGWriteStreamSos+0x3d>
lea    0x31b23(%rip),%rdi        # 72c98 <module.114+0x1b0>
lea    0x30c18(%rip),%rsi        # 71d94 <module.15+0x28>
mov    $0x913,%edx
lea    0x31afc(%rip),%rcx        # 72c84 <module.114+0x19c>
callq  8490 <__assert_fail@plt>
lea    0xe74(%r11),%r10
movb   $0xff,(%r10)
movb   $0xda,0xe75(%r11)
movb   $0x0,0xe76(%r11)
lea    0x6(%rcx,%rcx,1),%eax
mov    %al,0xe77(%r11)
mov    %cl,0xe78(%r11)
xor    %eax,%eax
jmp    411fd <OJPEGWriteStreamSos+0xad>
movzbl 0x10d(%r11),%ecx
movzbl %al,%r9d
add    %r9d,%ecx
movslq %ecx,%r8
movzbl 0x1f1(%r8,%r11,1),%edi
lea    0x5(%r9,%r9,1),%ecx
movslq %ecx,%rcx
mov    %dil,(%r10,%rcx,1)
movzbl 0x1f4(%r11,%r8,1),%edi
lea    0x6(%r9,%r9,1),%ecx
movslq %ecx,%rcx
mov    %dil,(%r10,%rcx,1)
add    $0x1,%eax
movzbl 0x10e(%r11),%ecx
cmp    %al,%cl
ja     411be <OJPEGWriteStreamSos+0x6e>
lea    0x5(%rcx,%rcx,1),%eax
movslq %eax,%rax
movb   $0x0,(%r10,%rax,1)
lea    0x6(%rcx,%rcx,1),%eax
movslq %eax,%rax
movb   $0x3f,(%r10,%rax,1)
lea    0x7(%rcx,%rcx,1),%eax
movslq %eax,%rax
movb   $0x0,(%r10,%rax,1)
lea    0x8(%rcx,%rcx,1),%eax
mov    %eax,(%rdx)
mov    %r10,(%rsi)
mov    0xe70(%r11),%eax
add    $0x1,%eax
mov    %eax,0xe70(%r11)
leaveq 
retq   
nopl   0x0(%rax)

0000000000041250 <OJPEGWriteStreamCompressed>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    0x350(%rdi),%rcx
movzwl 0x660(%rcx),%eax
test   %ax,%ax
je     4129a <OJPEGWriteStreamCompressed+0x4a>
movzwl 0x660(%rcx),%eax
mov    %eax,(%rdx)
mov    0x668(%rcx),%rax
mov    %rax,(%rsi)
movw   $0x0,0x660(%rcx)
mov    $0x1,%eax
mov    0x658(%rcx),%rdx
test   %rdx,%rdx
je     412bd <OJPEGWriteStreamCompressed+0x6d>
leaveq 
retq   
mov    %rcx,%rdi
mov    %r15,-0x8(%rbp)
mov    %rdx,-0x18(%rbp)
mov    %rsi,-0x10(%rbp)
mov    %rcx,%r15
callq  40410 <OJPEGReadBufferFill>
test   %eax,%eax
jne    412cf <OJPEGWriteStreamCompressed+0x7f>
xor    %eax,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
mov    0x638(%rcx),%edx
cmp    $0x2,%edx
je     412f0 <OJPEGWriteStreamCompressed+0xa0>
cmp    $0x3,%edx
je     4130a <OJPEGWriteStreamCompressed+0xba>
leaveq 
retq   
movzwl 0x660(%r15),%eax
test   %ax,%ax
je     41316 <OJPEGWriteStreamCompressed+0xc6>
mov    %r15,%rcx
mov    -0x10(%rbp),%rsi
mov    -0x18(%rbp),%rdx
mov    -0x8(%rbp),%r15
jmpq   4126b <OJPEGWriteStreamCompressed+0x1b>
mov    0x640(%rcx),%edx
cmp    0x63c(%rcx),%edx
ja     41335 <OJPEGWriteStreamCompressed+0xe5>
movl   $0x12,0xe70(%rcx)
leaveq 
retq   
movl   $0x12,0xe70(%rcx)
leaveq 
retq   
lea    0x3187f(%rip),%rdi        # 72b9c <module.114+0xb4>
lea    0x30a70(%rip),%rsi        # 71d94 <module.15+0x28>
mov    $0x935,%edx
lea    0x31991(%rip),%rcx        # 72cc1 <module.114+0x1d9>
callq  8490 <__assert_fail@plt>
movl   $0x11,0xe70(%rcx)
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   0x0(%rax)

0000000000041350 <OJPEGWriteStreamRst>:
push   %rbp
mov    %rsp,%rbp
mov    0x350(%rdi),%rcx
lea    0xe74(%rcx),%rax
movb   $0xff,(%rax)
movzbl 0x1da(%rcx),%edi
lea    0xd0(%rdi),%r8d
mov    %r8b,0xe75(%rcx)
add    $0x1,%edi
mov    %dil,0x1da(%rcx)
cmp    $0x8,%dil
jne    41391 <OJPEGWriteStreamRst+0x41>
movb   $0x0,0x1da(%rcx)
movl   $0x2,(%rdx)
mov    %rax,(%rsi)
movl   $0x10,0xe70(%rcx)
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)

00000000000413b0 <OJPEGWriteStreamEoi>:
push   %rbp
mov    %rsp,%rbp
mov    0x350(%rdi),%rcx
lea    0xe74(%rcx),%rax
movb   $0xff,(%rax)
movb   $0xd9,0xe75(%rcx)
movl   $0x2,(%rdx)
mov    %rax,(%rsi)
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

00000000000413e0 <jpeg_create_decompress_encap>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %rsi,-0x8(%rbp)
add    $0x10,%rdi
callq  8630 <_setjmp@plt>
test   %eax,%eax
je     413fd <jpeg_create_decompress_encap+0x1d>
xor    %eax,%eax
leaveq 
retq   
mov    $0x50,%esi
mov    $0x290,%edx
mov    -0x8(%rbp),%rdi
callq  87a0 <jpeg_CreateDecompress@plt>
mov    $0x1,%eax
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

0000000000041420 <jpeg_read_header_encap>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %rdx,-0x10(%rbp)
mov    %rsi,-0x8(%rbp)
add    $0x10,%rdi
callq  8630 <_setjmp@plt>
test   %eax,%eax
je     41441 <jpeg_read_header_encap+0x21>
xor    %eax,%eax
leaveq 
retq   
mov    -0x10(%rbp),%rax
movzbl %al,%esi
mov    -0x8(%rbp),%rdi
callq  8a30 <jpeg_read_header@plt>
mov    $0x1,%eax
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

0000000000041460 <jpeg_start_decompress_encap>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %rsi,-0x8(%rbp)
add    $0x10,%rdi
callq  8630 <_setjmp@plt>
test   %eax,%eax
je     4147d <jpeg_start_decompress_encap+0x1d>
xor    %eax,%eax
leaveq 
retq   
mov    -0x8(%rbp),%rdi
callq  8670 <jpeg_start_decompress@plt>
mov    $0x1,%eax
leaveq 
retq   
nopl   (%rax)

0000000000041490 <jpeg_read_scanlines_encap>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %rsi,-0x8(%rbp)
mov    %rdx,-0x10(%rbp)
mov    %rcx,-0x18(%rbp)
add    $0x10,%rdi
callq  8630 <_setjmp@plt>
test   %eax,%eax
je     414b5 <jpeg_read_scanlines_encap+0x25>
xor    %eax,%eax
leaveq 
retq   
mov    -0x18(%rbp),%rdx
mov    -0x10(%rbp),%rsi
mov    -0x8(%rbp),%rdi
callq  86d0 <jpeg_read_scanlines@plt>
mov    $0x1,%eax
leaveq 
retq   
nopl   (%rax)

00000000000414d0 <jpeg_read_raw_data_encap>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %rsi,-0x8(%rbp)
mov    %rdx,-0x10(%rbp)
mov    %rcx,-0x18(%rbp)
add    $0x10,%rdi
callq  8630 <_setjmp@plt>
test   %eax,%eax
je     414f5 <jpeg_read_raw_data_encap+0x25>
xor    %eax,%eax
leaveq 
retq   
mov    -0x18(%rbp),%rdx
mov    -0x10(%rbp),%rsi
mov    -0x8(%rbp),%rdi
callq  8420 <jpeg_read_raw_data@plt>
mov    $0x1,%eax
leaveq 
retq   
nopl   (%rax)

0000000000041510 <jpeg_encap_unwind>:
push   %rbp
mov    %rsp,%rbp
mov    0x350(%rdi),%rdi
add    $0x10,%rdi
mov    $0x1,%esi
callq  8a40 <longjmp@plt>
nopl   0x0(%rax)

0000000000041530 <OJPEGLibjpegJpegErrorMgrOutputMessage>:
push   %rbp
mov    %rsp,%rbp
sub    $0xd0,%rsp
mov    %r15,-0x8(%rbp)
mov    (%rdi),%rax
mov    0x18(%rax),%rax
lea    -0xd0(%rbp),%rsi
mov    %rdi,%r15
callq  *%rax
xor    %eax,%eax
mov    0x18(%r15),%rcx
mov    0x3b8(%rcx),%rdi
lea    0x31776(%rip),%rsi        # 72cdc <module.114+0x1f4>
lea    0x31777(%rip),%rdx        # 72ce4 <module.114+0x1fc>
lea    -0xd0(%rbp),%rcx
callq  85a0 <TIFFWarningExt@plt>
mov    -0x8(%rbp),%r15
leaveq 
retq   
nop

0000000000041580 <OJPEGLibjpegJpegErrorMgrErrorExit>:
push   %rbp
mov    %rsp,%rbp
sub    $0xd0,%rsp
mov    %r15,-0x8(%rbp)
mov    (%rdi),%rax
mov    0x18(%rax),%rax
lea    -0xd0(%rbp),%rsi
mov    %rdi,%r15
callq  *%rax
xor    %eax,%eax
mov    0x18(%r15),%rcx
mov    0x3b8(%rcx),%rdi
lea    0x31726(%rip),%rsi        # 72cdc <module.114+0x1f4>
lea    0x31727(%rip),%rdx        # 72ce4 <module.114+0x1fc>
lea    -0xd0(%rbp),%rcx
callq  8a00 <TIFFErrorExt@plt>
mov    0x18(%r15),%rdi
callq  41510 <jpeg_encap_unwind>
mov    -0x8(%rbp),%r15
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

00000000000415e0 <OJPEGLibjpegJpegSourceMgrInitSource>:
push   %rbp
mov    %rsp,%rbp
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)

00000000000415f0 <OJPEGLibjpegJpegSourceMgrFillInputBuffer>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    0x18(%rdi),%r15
mov    0x350(%r15),%r14
movq   $0x0,-0x20(%rbp)
movl   $0x0,-0x14(%rbp)
lea    -0x20(%rbp),%rsi
lea    -0x14(%rbp),%rdx
mov    %r15,%rdi
callq  40af0 <OJPEGWriteStream>
test   %eax,%eax
jne    41652 <OJPEGLibjpegJpegSourceMgrFillInputBuffer+0x62>
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
lea    0x3169e(%rip),%rsi        # 72cdc <module.114+0x1f4>
lea    0x316a2(%rip),%rdx        # 72ce7 <module.114+0x1ff>
callq  8a00 <TIFFErrorExt@plt>
mov    %r15,%rdi
callq  41510 <jpeg_encap_unwind>
mov    -0x14(%rbp),%eax
mov    %rax,0x5a8(%r14)
mov    -0x20(%rbp),%rax
mov    %rax,0x5a0(%r14)
mov    $0x1,%eax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)

0000000000041680 <OJPEGLibjpegJpegSourceMgrSkipInputData>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x8(%rbp)
xor    %eax,%eax
mov    0x18(%rdi),%r15
mov    0x3b8(%r15),%rdi
lea    0x3163c(%rip),%rsi        # 72cdc <module.114+0x1f4>
lea    0x3165b(%rip),%rdx        # 72d02 <module.114+0x21a>
callq  8a00 <TIFFErrorExt@plt>
mov    %r15,%rdi
callq  41510 <jpeg_encap_unwind>
mov    -0x8(%rbp),%r15
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

00000000000416c0 <OJPEGLibjpegJpegSourceMgrResyncToRestart>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x8(%rbp)
xor    %eax,%eax
mov    0x18(%rdi),%r15
mov    0x3b8(%r15),%rdi
lea    0x315fc(%rip),%rsi        # 72cdc <module.114+0x1f4>
lea    0x3161b(%rip),%rdx        # 72d02 <module.114+0x21a>
callq  8a00 <TIFFErrorExt@plt>
mov    %r15,%rdi
callq  41510 <jpeg_encap_unwind>
xor    %eax,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
nopl   0x0(%rax)

0000000000041700 <OJPEGLibjpegJpegSourceMgrTermSource>:
push   %rbp
mov    %rsp,%rbp
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)

0000000000041710 <TIFFFileno>:
push   %rbp
mov    %rsp,%rbp
movslq 0x8(%rdi),%rax
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

0000000000041720 <TIFFSetFileno>:
push   %rbp
mov    %rsp,%rbp
movslq 0x8(%rdi),%rax
mov    %esi,0x8(%rdi)
leaveq 
retq   
nopl   (%rax)

0000000000041730 <TIFFClientdata>:
push   %rbp
mov    %rsp,%rbp
mov    0x3b8(%rdi),%rax
leaveq 
retq   
nopl   (%rax)

0000000000041740 <TIFFSetClientdata>:
push   %rbp
mov    %rsp,%rbp
mov    0x3b8(%rdi),%rax
mov    %rsi,0x3b8(%rdi)
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nop

0000000000041760 <TIFFGetMode>:
push   %rbp
mov    %rsp,%rbp
movslq 0xc(%rdi),%rax
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

0000000000041770 <TIFFSetMode>:
push   %rbp
mov    %rsp,%rbp
movslq 0xc(%rdi),%rax
mov    %esi,0xc(%rdi)
leaveq 
retq   
nopl   (%rax)

0000000000041780 <TIFFIsTiled>:
push   %rbp
mov    %rsp,%rbp
mov    0x10(%rdi),%eax
and    $0x400,%eax
test   %eax,%eax
je     41797 <TIFFIsTiled+0x17>
mov    $0x1,%eax
leaveq 
retq   
xor    %eax,%eax
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

00000000000417a0 <TIFFIsByteSwapped>:
push   %rbp
mov    %rsp,%rbp
mov    0x10(%rdi),%eax
and    $0x80,%eax
test   %eax,%eax
je     417b7 <TIFFIsByteSwapped+0x17>
mov    $0x1,%eax
leaveq 
retq   
xor    %eax,%eax
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

00000000000417c0 <TIFFIsUpSampled>:
push   %rbp
mov    %rsp,%rbp
mov    0x10(%rdi),%eax
and    $0x4000,%eax
test   %eax,%eax
je     417d7 <TIFFIsUpSampled+0x17>
mov    $0x1,%eax
leaveq 
retq   
xor    %eax,%eax
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

00000000000417e0 <TIFFIsMSB2LSB>:
push   %rbp
mov    %rsp,%rbp
mov    0x10(%rdi),%eax
and    $0x1,%eax
test   %eax,%eax
je     417f5 <TIFFIsMSB2LSB+0x15>
mov    $0x1,%eax
leaveq 
retq   
xor    %eax,%eax
leaveq 
retq   
nopl   0x0(%rax)

0000000000041800 <TIFFIsBigEndian>:
push   %rbp
mov    %rsp,%rbp
movzwl 0x268(%rdi),%eax
cmp    $0x4d4d,%ax
jne    41818 <TIFFIsBigEndian+0x18>
mov    $0x1,%eax
leaveq 
retq   
xor    %eax,%eax
leaveq 
retq   
nopl   0x0(%rax)

0000000000041820 <TIFFGetReadProc>:
push   %rbp
mov    %rsp,%rbp
mov    0x3c0(%rdi),%rax
leaveq 
retq   
nopl   (%rax)

0000000000041830 <TIFFGetWriteProc>:
push   %rbp
mov    %rsp,%rbp
mov    0x3c8(%rdi),%rax
leaveq 
retq   
nopl   (%rax)

0000000000041840 <TIFFGetSeekProc>:
push   %rbp
mov    %rsp,%rbp
mov    0x3d0(%rdi),%rax
leaveq 
retq   
nopl   (%rax)

0000000000041850 <TIFFGetCloseProc>:
push   %rbp
mov    %rsp,%rbp
mov    0x3d8(%rdi),%rax
leaveq 
retq   
nopl   (%rax)

0000000000041860 <TIFFGetSizeProc>:
push   %rbp
mov    %rsp,%rbp
mov    0x3e0(%rdi),%rax
leaveq 
retq   
nopl   (%rax)

0000000000041870 <TIFFGetMapFileProc>:
push   %rbp
mov    %rsp,%rbp
mov    0x3a8(%rdi),%rax
leaveq 
retq   
nopl   (%rax)

0000000000041880 <TIFFGetUnmapFileProc>:
push   %rbp
mov    %rsp,%rbp
mov    0x3b0(%rdi),%rax
leaveq 
retq   
nopl   (%rax)

0000000000041890 <TIFFCurrentRow>:
push   %rbp
mov    %rsp,%rbp
mov    0x27c(%rdi),%eax
leaveq 
retq   
nopl   0x0(%rax)

00000000000418a0 <TIFFCurrentDirectory>:
push   %rbp
mov    %rsp,%rbp
movzwl 0x280(%rdi),%eax
leaveq 
retq   
nopl   (%rax)

00000000000418b0 <TIFFCurrentStrip>:
push   %rbp
mov    %rsp,%rbp
mov    0x284(%rdi),%eax
leaveq 
retq   
nopl   0x0(%rax)

00000000000418c0 <TIFFCurrentTile>:
push   %rbp
mov    %rsp,%rbp
mov    0x2ac(%rdi),%eax
leaveq 
retq   
nopl   0x0(%rax)

00000000000418d0 <TIFFClientOpen>:
push   %rbp
mov    %rsp,%rbp
sub    $0x50,%rsp
movb   $0x1,-0x4a(%rbp)
movb   $0x0,-0x49(%rbp)
movzwl -0x4a(%rbp),%eax
cmp    $0x1,%ax
je     41909 <TIFFClientOpen+0x39>
lea    0x3150a(%rip),%rdi        # 72dfb <module.8+0xf>
lea    0x3150c(%rip),%rsi        # 72e04 <module.8+0x18>
mov    $0x70,%edx
lea    0x3150b(%rip),%rcx        # 72e0f <module.8+0x23>
callq  8490 <__assert_fail@plt>
lea    0x314dc(%rip),%rax        # 72dec <module.8>
mov    %rsi,%r10
mov    %rsi,-0x18(%rbp)
mov    %rax,%rsi
mov    %rdi,-0x40(%rbp)
mov    %rdx,-0x20(%rbp)
mov    %rcx,-0x38(%rbp)
mov    %r8,-0x30(%rbp)
mov    %r9,-0x28(%rbp)
mov    %r10,%rdi
callq  8950 <_TIFFgetMode@plt>
cmp    $0xffffffff,%eax
jne    4193f <TIFFClientOpen+0x6f>
xor    %eax,%eax
leaveq 
retq   
mov    -0x40(%rbp),%rcx
mov    %rcx,%rdi
mov    %r15,-0x10(%rbp)
mov    %rax,-0x40(%rbp)
mov    %rcx,%r15
callq  8350 <strlen@plt>
lea    0x439(%rax),%rdi
callq  8440 <_TIFFmalloc@plt>
test   %rax,%rax
je     41a46 <TIFFClientOpen+0x176>
mov    $0x438,%edx
mov    %rax,%rdi
xor    %esi,%esi
mov    %r14,-0x8(%rbp)
mov    %rax,%r14
callq  88e0 <_TIFFmemset@plt>
lea    0x438(%r14),%rdi
mov    %rdi,(%r14)
mov    %r15,%rsi
callq  8160 <strcpy@plt>
mov    -0x40(%rbp),%r9
mov    %r9,%rax
and    $0xfffffdbf,%eax
mov    %eax,0xc(%r14)
movw   $0xffff,0x280(%r14)
movq   $0x0,0x288(%r14)
movl   $0xffffffff,0x284(%r14)
movl   $0xffffffff,0x27c(%r14)
mov    -0x20(%rbp),%rdi
mov    %rdi,0x3b8(%r14)
mov    -0x38(%rbp),%rsi
test   %rsi,%rsi
je     41a6a <TIFFClientOpen+0x19a>
mov    -0x30(%rbp),%rdx
test   %rdx,%rdx
je     41a6a <TIFFClientOpen+0x19a>
mov    -0x28(%rbp),%r8
test   %r8,%r8
je     41a6a <TIFFClientOpen+0x19a>
mov    0x10(%rbp),%rcx
test   %rcx,%rcx
je     41a6a <TIFFClientOpen+0x19a>
mov    0x18(%rbp),%rax
test   %rax,%rax
je     41a6a <TIFFClientOpen+0x19a>
mov    %rsi,0x3c0(%r14)
mov    %rdx,0x3c8(%r14)
mov    %r8,0x3d0(%r14)
mov    %rcx,0x3d8(%r14)
mov    %rax,0x3e0(%r14)
mov    0x20(%rbp),%rax
test   %rax,%rax
jne    41a8b <TIFFClientOpen+0x1bb>
lea    0x783(%rip),%rax        # 421c0 <_tiffDummyMapProc>
mov    %rax,0x3a8(%r14)
jmp    41a92 <TIFFClientOpen+0x1c2>
mov    %r15,%rcx
xor    %eax,%eax
lea    0x313cc(%rip),%rdx        # 72e1e <module.8+0x32>
lea    0x31393(%rip),%rsi        # 72dec <module.8>
mov    -0x20(%rbp),%rdi
callq  8a00 <TIFFErrorExt@plt>
mov    -0x10(%rbp),%r15
xor    %eax,%eax
leaveq 
retq   
xor    %eax,%eax
lea    0x313ce(%rip),%rdx        # 72e41 <module.8+0x55>
lea    0x31372(%rip),%rsi        # 72dec <module.8>
callq  8a00 <TIFFErrorExt@plt>
mov    -0x8(%rbp),%r14
mov    -0x10(%rbp),%r15
xor    %eax,%eax
leaveq 
retq   
mov    %rax,0x3a8(%r14)
mov    0x28(%rbp),%rax
test   %rax,%rax
jne    41aab <TIFFClientOpen+0x1db>
lea    0x72e(%rip),%rax        # 421d0 <_tiffDummyUnmapProc>
mov    %rax,0x3b0(%r14)
jmp    41ab2 <TIFFClientOpen+0x1e2>
mov    %rax,0x3b0(%r14)
mov    %r14,%rdi
mov    %r13,-0x40(%rbp)
mov    %r9,%r13
callq  8740 <_TIFFSetDefaultCompressionState@plt>
movl   $0x1,0x10(%r14)
test   %r13d,%r13d
je     41ad2 <TIFFClientOpen+0x202>
xor    %eax,%eax
jmp    41adf <TIFFClientOpen+0x20f>
movl   $0x801,0x10(%r14)
mov    $0x1,%eax
mov    %r13,%rsi
and    $0x40,%esi
test   %rax,%rax
jne    41af6 <TIFFClientOpen+0x226>
cmp    $0x2,%r13d
je     41af6 <TIFFClientOpen+0x226>
mov    -0x18(%rbp),%rax
jmp    41b1b <TIFFClientOpen+0x24b>
mov    0x10(%r14),%eax
or     $0x8000,%eax
mov    %eax,0x10(%r14)
mov    -0x18(%rbp),%rax
jmp    41b1b <TIFFClientOpen+0x24b>
mov    0x10(%r14),%ecx
or     $0x10000,%ecx
mov    %ecx,0x10(%r14)
add    $0x1,%rax
movsbq (%rax),%rcx
test   %cl,%cl
jne    41b8e <TIFFClientOpen+0x2be>
lea    0x31345(%rip),%rcx        # 72e6f <module.8+0x83>
mov    $0x8,%edx
and    $0x200,%r13d
test   %r13d,%r13d
jg     41b63 <TIFFClientOpen+0x293>
mov    %rcx,%r13
mov    0x3c0(%r14),%rax
mov    0x3b8(%r14),%rdi
lea    0x268(%r14),%rsi
callq  *%rax
cmp    $0x8,%rax
je     41bc1 <TIFFClientOpen+0x2f1>
mov    %r13,%rcx
mov    $0x8,%edx
movslq 0xc(%r14),%rax
test   %eax,%eax
je     41c07 <TIFFClientOpen+0x337>
mov    0x10(%r14),%eax
mov    %rax,%rsi
and    $0x80,%esi
test   %esi,%esi
jne    41c3a <TIFFClientOpen+0x36a>
mov    $0x4949,%ecx
jmpq   41c3f <TIFFClientOpen+0x36f>
add    $0xffffffc8,%ecx
cmp    $0x35,%ecx
ja     41b17 <TIFFClientOpen+0x247>
lea    0x31177(%rip),%rdx        # 72d14 <module.114+0x22c>
movslq (%rdx,%rcx,4),%rcx
add    %rdx,%rcx
jmpq   *%rcx
test   %esi,%esi
jle    41b17 <TIFFClientOpen+0x247>
mov    0x10(%r14),%ecx
or     $0x80000,%ecx
mov    %ecx,0x10(%r14)
jmpq   41b17 <TIFFClientOpen+0x247>
movzwl 0x268(%r14),%ecx
cmp    $0x4d4d,%cx
je     41dac <TIFFClientOpen+0x4dc>
cmp    $0x4949,%cx
je     41dac <TIFFClientOpen+0x4dc>
cmp    $0x5045,%cx
je     41dac <TIFFClientOpen+0x4dc>
mov    %r15,%rsi
xor    %eax,%eax
mov    0x3b8(%r14),%rdi
lea    0x312a4(%rip),%rdx        # 72ea1 <module.8+0xb5>
mov    %rcx,%r8
callq  8a00 <TIFFErrorExt@plt>
jmp    41c1b <TIFFClientOpen+0x34b>
mov    %rcx,%rdx
mov    %r15,%rsi
xor    %eax,%eax
mov    0x3b8(%r14),%rdi
callq  8a00 <TIFFErrorExt@plt>
mov    %r14,%rdi
movl   $0x0,0xc(%rdi)
callq  8a70 <TIFFCleanup@plt>
mov    -0x40(%rbp),%r13
mov    -0x8(%rbp),%r14
mov    -0x10(%rbp),%r15
xor    %eax,%eax
leaveq 
retq   
mov    $0x4d4d,%ecx
lea    0x268(%r14),%r13
mov    %cx,0x0(%r13)
and    $0x80000,%eax
test   %eax,%eax
jne    41e15 <TIFFClientOpen+0x545>
test   %esi,%esi
movw   $0x2a,0x26a(%r14)
movl   $0x0,0x26c(%r14)
je     41c82 <TIFFClientOpen+0x3b2>
lea    0x26a(%r14),%rdi
callq  87c0 <TIFFSwabShort@plt>
mov    $0x8,%edx
mov    %dx,0x278(%r14)
mov    0x3d0(%r14),%rax
mov    0x3b8(%r14),%rdi
xor    %esi,%esi
mov    %rsi,%rdx
callq  *%rax
mov    %r13,%rsi
mov    0x3c8(%r14),%rax
mov    0x3b8(%r14),%rdi
movzwl 0x278(%r14),%edx
callq  *%rax
movzwl 0x278(%r14),%ecx
cmp    %rax,%rcx
je     41e6d <TIFFClientOpen+0x59d>
mov    %r15,%rsi
xor    %eax,%eax
mov    0x3b8(%r14),%rdi
lea    0x311a9(%rip),%rdx        # 72e87 <module.8+0x9b>
callq  8a00 <TIFFErrorExt@plt>
jmpq   41c1b <TIFFClientOpen+0x34b>
test   %esi,%esi
jle    41b17 <TIFFClientOpen+0x247>
mov    0x10(%r14),%ecx
or     $0x80,%ecx
mov    %ecx,0x10(%r14)
jmpq   41b17 <TIFFClientOpen+0x247>
mov    0x10(%r14),%ecx
and    $0xfffffffc,%ecx
add    $0x1,%ecx
mov    %ecx,0x10(%r14)
jmpq   41b17 <TIFFClientOpen+0x247>
mov    0x10(%r14),%ecx
and    $0xfffffffc,%ecx
add    $0x2,%ecx
mov    %ecx,0x10(%r14)
jmpq   41b17 <TIFFClientOpen+0x247>
mov    0x10(%r14),%ecx
and    $0xfffffffc,%ecx
add    $0x2,%ecx
mov    %ecx,0x10(%r14)
jmpq   41b17 <TIFFClientOpen+0x247>
test   %r13d,%r13d
jne    41b17 <TIFFClientOpen+0x247>
mov    0x10(%r14),%ecx
or     $0x800,%ecx
mov    %ecx,0x10(%r14)
jmpq   41b17 <TIFFClientOpen+0x247>
test   %r13d,%r13d
jne    41b17 <TIFFClientOpen+0x247>
mov    0x10(%r14),%ecx
and    $0xfffff7ff,%ecx
mov    %ecx,0x10(%r14)
jmpq   41b17 <TIFFClientOpen+0x247>
test   %r13d,%r13d
jne    41b17 <TIFFClientOpen+0x247>
mov    0x10(%r14),%ecx
or     $0x8000,%ecx
mov    %ecx,0x10(%r14)
jmpq   41b17 <TIFFClientOpen+0x247>
test   %r13d,%r13d
jne    41b17 <TIFFClientOpen+0x247>
mov    0x10(%r14),%ecx
and    $0xffff7fff,%ecx
mov    %ecx,0x10(%r14)
jmpq   41b17 <TIFFClientOpen+0x247>
cmp    $0x4d4d,%cx
jne    41dc0 <TIFFClientOpen+0x4f0>
mov    0x10(%r14),%eax
or     $0x80,%eax
mov    %eax,0x10(%r14)
mov    0x10(%r14),%eax
and    $0x80,%eax
test   %eax,%eax
je     41dd9 <TIFFClientOpen+0x509>
lea    0x26a(%r14),%rdi
callq  87c0 <TIFFSwabShort@plt>
movzwl 0x26a(%r14),%ecx
cmp    $0x2a,%cx
je     41ec5 <TIFFClientOpen+0x5f5>
cmp    $0x2b,%cx
je     41ec5 <TIFFClientOpen+0x5f5>
mov    %r15,%rsi
xor    %eax,%eax
mov    0x3b8(%r14),%rdi
lea    0x310cc(%rip),%rdx        # 72ed4 <module.8+0xe8>
mov    %rcx,%r8
callq  8a00 <TIFFErrorExt@plt>
jmpq   41c1b <TIFFClientOpen+0x34b>
test   %esi,%esi
movw   $0x2b,0x26a(%r14)
movw   $0x8,0x26c(%r14)
movw   $0x0,0x26e(%r14)
movq   $0x0,0x270(%r14)
mov    $0x10,%edx
je     41c82 <TIFFClientOpen+0x3b2>
lea    0x26a(%r14),%rdi
callq  87c0 <TIFFSwabShort@plt>
lea    0x26c(%r14),%rdi
callq  87c0 <TIFFSwabShort@plt>
mov    $0x10,%edx
jmpq   41c82 <TIFFClientOpen+0x3b2>
movzwl 0x268(%r14),%eax
cmp    $0x4d4d,%ax
jne    41e88 <TIFFClientOpen+0x5b8>
mov    0x10(%r14),%eax
or     $0x80,%eax
mov    %eax,0x10(%r14)
mov    %r14,%rdi
callq  88d0 <TIFFDefaultDirectory@plt>
test   %eax,%eax
je     41c1b <TIFFClientOpen+0x34b>
mov    %r14,%rax
movq   $0x0,0x18(%rax)
movq   $0x0,0x28(%rax)
movw   $0x0,0x30(%rax)
movw   $0x0,0x32(%rax)
mov    -0x40(%rbp),%r13
mov    -0x8(%rbp),%r14
mov    -0x10(%rbp),%r15
leaveq 
retq   
cmp    $0x2a,%cx
je     41f11 <TIFFClientOpen+0x641>
mov    0x3c0(%r14),%rax
mov    0x3b8(%r14),%rdi
lea    0x270(%r14),%r13
mov    %r13,%rsi
mov    $0x8,%edx
callq  *%rax
cmp    $0x8,%rax
je     4200d <TIFFClientOpen+0x73d>
mov    %r15,%rsi
xor    %eax,%eax
mov    0x3b8(%r14),%rdi
lea    0x30f68(%rip),%rdx        # 72e6f <module.8+0x83>
callq  8a00 <TIFFErrorExt@plt>
jmpq   41c1b <TIFFClientOpen+0x34b>
mov    0x10(%r14),%eax
and    $0x80,%eax
test   %eax,%eax
je     41f2a <TIFFClientOpen+0x65a>
lea    0x26c(%r14),%rdi
callq  8480 <TIFFSwabLong@plt>
movw   $0x8,0x278(%r14)
mov    0x10(%r14),%eax
mov    %rax,%rcx
or     $0x200,%ecx
mov    %ecx,0x10(%r14)
movq   $0x0,0x368(%r14)
movq   $0x0,0x388(%r14)
movq   $0x0,0x370(%r14)
movq   $0x0,0x378(%r14)
movq   $0x0,0x380(%r14)
mov    -0x18(%rbp),%rcx
movsbq (%rcx),%rcx
cmp    $0x61,%cl
je     4206d <TIFFClientOpen+0x79d>
cmp    $0x72,%cl
jne    41c1b <TIFFClientOpen+0x34b>
and    $0x80000,%eax
test   %eax,%eax
jne    4208e <TIFFClientOpen+0x7be>
mov    0x26c(%r14),%eax
mov    %rax,0x20(%r14)
mov    0x10(%r14),%eax
and    $0x800,%eax
test   %eax,%eax
je     41feb <TIFFClientOpen+0x71b>
mov    0x3a8(%r14),%rax
mov    0x3b8(%r14),%rdi
lea    0x398(%r14),%rsi
lea    -0x48(%rbp),%rdx
callq  *%rax
test   %eax,%eax
jne    4209e <TIFFClientOpen+0x7ce>
mov    0x10(%r14),%eax
and    $0xfffff7ff,%eax
mov    %eax,0x10(%r14)
mov    0x10(%r14),%eax
and    $0x10000,%eax
test   %eax,%eax
je     420ae <TIFFClientOpen+0x7de>
mov    %r14,%rax
mov    -0x40(%rbp),%r13
mov    -0x8(%rbp),%r14
mov    -0x10(%rbp),%r15
leaveq 
retq   
mov    0x10(%r14),%eax
and    $0x80,%eax
test   %eax,%eax
je     4202e <TIFFClientOpen+0x75e>
lea    0x26c(%r14),%rdi
callq  87c0 <TIFFSwabShort@plt>
mov    %r13,%rdi
callq  8730 <TIFFSwabLong8@plt>
movzwl 0x26c(%r14),%ecx
cmp    $0x8,%cx
jne    420e5 <TIFFClientOpen+0x815>
movzwl 0x26e(%r14),%ecx
test   %cx,%cx
jne    42105 <TIFFClientOpen+0x835>
movw   $0x10,0x278(%r14)
mov    0x10(%r14),%eax
or     $0x80000,%eax
mov    %eax,0x10(%r14)
jmpq   41f34 <TIFFClientOpen+0x664>
mov    %r14,%rdi
callq  88d0 <TIFFDefaultDirectory@plt>
test   %eax,%eax
je     41c1b <TIFFClientOpen+0x34b>
mov    %r14,%rax
mov    -0x40(%rbp),%r13
mov    -0x8(%rbp),%r14
mov    -0x10(%rbp),%r15
leaveq 
retq   
mov    0x270(%r14),%rax
mov    %rax,0x20(%r14)
jmpq   41fae <TIFFClientOpen+0x6de>
mov    -0x48(%rbp),%rax
mov    %rax,0x3a0(%r14)
jmpq   41feb <TIFFClientOpen+0x71b>
mov    %r14,%rdi
callq  8b30 <TIFFReadDirectory@plt>
test   %eax,%eax
je     41c1b <TIFFClientOpen+0x34b>
movq   $0xffffffffffffffff,0x390(%r14)
mov    0x10(%r14),%eax
or     $0x10,%eax
mov    %eax,0x10(%r14)
mov    %r14,%rax
mov    -0x40(%rbp),%r13
mov    -0x8(%rbp),%r14
mov    -0x10(%rbp),%r15
leaveq 
retq   
mov    %r15,%rsi
xor    %eax,%eax
mov    0x3b8(%r14),%rdi
lea    0x30e0a(%rip),%rdx        # 72f02 <module.8+0x116>
mov    %rcx,%r8
callq  8a00 <TIFFErrorExt@plt>
jmpq   41c1b <TIFFClientOpen+0x34b>
mov    %r15,%rsi
xor    %eax,%eax
mov    0x3b8(%r14),%rdi
lea    0x30e1c(%rip),%rdx        # 72f34 <module.8+0x148>
mov    %rcx,%r8
callq  8a00 <TIFFErrorExt@plt>
jmpq   41c1b <TIFFClientOpen+0x34b>
data16 nopw %cs:0x0(%rax,%rax,1)

0000000000042130 <TIFFFileName>:
push   %rbp
mov    %rsp,%rbp
mov    (%rdi),%rax
leaveq 
retq   
nopl   0x0(%rax)

0000000000042140 <TIFFSetFileName>:
push   %rbp
mov    %rsp,%rbp
mov    (%rdi),%rax
mov    %rsi,(%rdi)
leaveq 
retq   
nopl   0x0(%rax)

0000000000042150 <_TIFFgetMode>:
push   %rbp
mov    %rsp,%rbp
xor    %eax,%eax
movsbq (%rdi),%rcx
cmp    $0x71,%cl
jle    42175 <_TIFFgetMode+0x25>
cmp    $0x72,%cl
je     42197 <_TIFFgetMode+0x47>
cmp    $0x77,%cl
jne    4217a <_TIFFgetMode+0x2a>
cmp    $0x77,%cl
jne    421a8 <_TIFFgetMode+0x58>
mov    $0x242,%eax
leaveq 
retq   
cmp    $0x61,%cl
je     42169 <_TIFFgetMode+0x19>
mov    %rdi,%rcx
mov    %rax,%rdi
xor    %eax,%eax
lea    0x30dd9(%rip),%rdx        # 72f62 <module.8+0x176>
callq  8a00 <TIFFErrorExt@plt>
mov    $0xffffffffffffffff,%rax
leaveq 
retq   
movsbq 0x1(%rdi),%rcx
cmp    $0x2b,%cl
jne    421af <_TIFFgetMode+0x5f>
mov    $0x2,%eax
leaveq 
retq   
mov    $0x42,%eax
leaveq 
retq   
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   0x0(%rax)

00000000000421c0 <_tiffDummyMapProc>:
push   %rbp
mov    %rsp,%rbp
xor    %eax,%eax
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

00000000000421d0 <_tiffDummyUnmapProc>:
push   %rbp
mov    %rsp,%rbp
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)

00000000000421e0 <TIFFInitPackBits>:
push   %rbp
mov    %rsp,%rbp
lea    0x5d5(%rip),%rax        # 427c0 <PackBitsDecode>
mov    %rax,0x2f8(%rdi)
mov    %rax,0x308(%rdi)
mov    %rax,0x318(%rdi)
lea    0x49(%rip),%rax        # 42250 <PackBitsPreEncode>
mov    %rax,0x2e8(%rdi)
lea    0xab(%rip),%rax        # 422c0 <PackBitsPostEncode>
mov    %rax,0x2f0(%rdi)
lea    0xcd(%rip),%rax        # 422f0 <PackBitsEncode>
mov    %rax,0x300(%rdi)
lea    0x4ef(%rip),%rax        # 42720 <PackBitsEncodeChunk>
mov    %rax,0x310(%rdi)
mov    %rax,0x320(%rdi)
mov    $0x1,%eax
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)

0000000000042250 <PackBitsPreEncode>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x8(%rbp)
mov    %rdi,%r15
mov    $0x8,%edi
callq  8440 <_TIFFmalloc@plt>
mov    %rax,0x350(%r15)
test   %rax,%rax
jne    4227d <PackBitsPreEncode+0x2d>
xor    %eax,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
mov    0x10(%r15),%ecx
and    $0x400,%ecx
test   %ecx,%ecx
jne    422a4 <PackBitsPreEncode+0x54>
mov    %r15,%rdi
mov    %rax,%r15
callq  8410 <TIFFScanlineSize@plt>
mov    %rax,(%r15)
mov    $0x1,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
mov    %r15,%rdi
mov    %rax,%r15
callq  80d0 <TIFFTileRowSize@plt>
mov    %rax,(%r15)
mov    $0x1,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
nopl   (%rax)

00000000000422c0 <PackBitsPostEncode>:
push   %rbp
mov    %rsp,%rbp
mov    $0x1,%eax
mov    0x350(%rdi),%rdi
test   %rdi,%rdi
jne    422d7 <PackBitsPostEncode+0x17>
leaveq 
retq   
callq  8bb0 <_TIFFfree@plt>
mov    $0x1,%eax
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

00000000000422f0 <PackBitsEncode>:
push   %rbp
mov    %rsp,%rbp
sub    $0x60,%rsp
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rdi,-0x30(%rbp)
mov    0x388(%rdi),%rax
mov    %rax,-0x48(%rbp)
mov    0x370(%rdi),%r8
add    0x368(%rdi),%r8
mov    %r8,-0x58(%rbp)
xor    %r9d,%r9d
mov    $0x1,%eax
mov    $0x2,%edi
mov    $0x3,%r10d
mov    %r9,%r12
mov    %r12,%r15
jmp    42365 <PackBitsEncode+0x75>
movb   $0x0,(%rbx)
mov    %r11b,0x1(%rbx)
lea    0x2(%rbx),%rcx
mov    %rcx,-0x48(%rbp)
mov    %rbx,%r12
mov    -0x38(%rbp),%rsi
mov    -0x50(%rbp),%rdx
mov    %rax,%r15
test   %rdx,%rdx
jle    42383 <PackBitsEncode+0x93>
movzbl (%rsi),%r11d
mov    %r11,-0x40(%rbp)
lea    0x1(%rsi),%rcx
add    $0xffffffffffffffff,%rdx
mov    -0x48(%rbp),%rbx
mov    %rax,%r13
jmp    423d7 <PackBitsEncode+0xe7>
mov    -0x30(%rbp),%rsi
mov    0x388(%rsi),%rcx
mov    -0x48(%rbp),%rdx
neg    %rcx
add    %rdx,%rcx
add    0x390(%rsi),%rcx
mov    %rcx,0x390(%rsi)
mov    %rdx,0x388(%rsi)
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
movzbl (%rcx),%esi
cmp    %r11b,%sil
jne    423ea <PackBitsEncode+0xfa>
add    $0x1,%rcx
add    $0xffffffffffffffff,%rdx
add    $0x1,%r13
test   %rdx,%rdx
jg     423c3 <PackBitsEncode+0xd3>
mov    %rdx,-0x50(%rbp)
mov    %rcx,-0x38(%rbp)
mov    -0x30(%rbp),%r14
jmp    42419 <PackBitsEncode+0x129>
mov    %rdx,-0x50(%rbp)
mov    %rcx,-0x38(%rbp)
mov    -0x30(%rbp),%r14
jmp    42419 <PackBitsEncode+0x129>
cmp    $0x1,%r13
jle    42453 <PackBitsEncode+0x163>
cmp    $0x80,%r13
jle    42475 <PackBitsEncode+0x185>
movb   $0x81,(%rbx)
mov    %r11b,0x1(%rbx)
add    $0x2,%rbx
add    $0xffffffffffffff80,%r13
mov    %rdi,%r15
lea    0x2(%rbx),%rcx
cmp    %r8,%rcx
jae    42499 <PackBitsEncode+0x1a9>
mov    %rbx,-0x48(%rbp)
cmp    $0x1,%r15d
jbe    424e6 <PackBitsEncode+0x1f6>
cmp    $0x2,%r15d
je     42527 <PackBitsEncode+0x237>
cmp    $0x3,%r15d
jne    42555 <PackBitsEncode+0x265>
cmp    $0x1,%r13
je     42562 <PackBitsEncode+0x272>
mov    %rdi,%r15
jmp    42419 <PackBitsEncode+0x129>
movb   $0x0,(%rbx)
mov    %r11b,0x1(%rbx)
lea    0x2(%rbx),%rcx
mov    %rcx,-0x48(%rbp)
mov    %rbx,%r12
mov    -0x38(%rbp),%rsi
mov    -0x50(%rbp),%rdx
mov    %rax,%r15
jmpq   42365 <PackBitsEncode+0x75>
mov    %rax,%rcx
sub    %r13b,%cl
mov    %cl,(%rbx)
mov    %r11b,0x1(%rbx)
lea    0x2(%rbx),%rcx
mov    %rcx,-0x48(%rbp)
mov    -0x38(%rbp),%rsi
mov    -0x50(%rbp),%rdx
mov    %rdi,%r15
jmpq   42365 <PackBitsEncode+0x75>
cmp    $0x1,%r15d
jne    4257a <PackBitsEncode+0x28a>
mov    0x388(%r14),%rax
neg    %rax
add    %r12,%rax
add    0x390(%r14),%rax
mov    %rax,0x390(%r14)
mov    %r14,%rdi
callq  86e0 <TIFFFlushData1@plt>
test   %eax,%eax
jne    425d8 <PackBitsEncode+0x2e8>
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
xor    %eax,%eax
leaveq 
retq   
test   %r15d,%r15d
je     423f8 <PackBitsEncode+0x108>
cmp    $0x1,%r15d
jne    425ef <PackBitsEncode+0x2ff>
cmp    $0x1,%r13
jle    425fc <PackBitsEncode+0x30c>
cmp    $0x80,%r13
jle    42619 <PackBitsEncode+0x329>
movb   $0x81,(%rbx)
mov    %r11b,0x1(%rbx)
add    $0x2,%rbx
add    $0xffffffffffffff80,%r13
mov    %r10,%r15
jmpq   42419 <PackBitsEncode+0x129>
cmp    $0x1,%r13
jle    42348 <PackBitsEncode+0x58>
cmp    $0x80,%r13
jle    4263d <PackBitsEncode+0x34d>
movb   $0x81,(%rbx)
mov    %r11b,0x1(%rbx)
add    $0x2,%rbx
add    $0xffffffffffffff80,%r13
mov    %rdi,%r15
jmpq   42419 <PackBitsEncode+0x129>
mov    -0x38(%rbp),%rsi
mov    -0x50(%rbp),%rdx
jmpq   42365 <PackBitsEncode+0x75>
movzbl -0x2(%rbx),%ecx
cmp    $0xff,%cl
je     42661 <PackBitsEncode+0x371>
mov    %rax,%r13
mov    %rdi,%r15
jmpq   42419 <PackBitsEncode+0x129>
cmp    $0x3,%r15d
je     424a3 <PackBitsEncode+0x1b3>
mov    0x388(%r14),%rax
sub    %rax,%rbx
add    0x390(%r14),%rbx
mov    %rbx,0x390(%r14)
mov    %r11,%rbx
mov    %r14,%rdi
callq  86e0 <TIFFFlushData1@plt>
test   %eax,%eax
je     4267a <PackBitsEncode+0x38a>
mov    0x388(%r14),%rcx
mov    %rbx,%r11
mov    %rcx,%rbx
xor    %r9d,%r9d
mov    $0x3,%r10d
mov    $0x1,%eax
mov    $0x2,%edi
mov    -0x58(%rbp),%r8
jmpq   42422 <PackBitsEncode+0x132>
mov    0x388(%r14),%rcx
sub    %r12,%rbx
mov    -0x38(%rbp),%rdx
mov    -0x50(%rbp),%rax
jmpq   426a6 <PackBitsEncode+0x3b6>
mov    -0x38(%rbp),%rsi
mov    -0x50(%rbp),%rdx
jmpq   42365 <PackBitsEncode+0x75>
movzbl (%r12),%ecx
add    $0x1,%ecx
mov    %cl,(%r12)
cmp    $0x7f,%cl
je     426dd <PackBitsEncode+0x3ed>
mov    %rax,%r15
jmpq   426e0 <PackBitsEncode+0x3f0>
mov    %rax,%rcx
sub    %r13b,%cl
mov    %cl,(%rbx)
mov    %r11b,0x1(%rbx)
lea    0x2(%rbx),%rcx
mov    %rcx,-0x48(%rbp)
mov    -0x38(%rbp),%rsi
mov    -0x50(%rbp),%rdx
mov    %r10,%r15
jmpq   42365 <PackBitsEncode+0x75>
mov    %rax,%rcx
sub    %r13b,%cl
mov    %cl,(%rbx)
mov    %r11b,0x1(%rbx)
lea    0x2(%rbx),%rcx
mov    %rcx,-0x48(%rbp)
mov    -0x38(%rbp),%rsi
mov    -0x50(%rbp),%rdx
mov    %rdi,%r15
jmpq   42365 <PackBitsEncode+0x75>
movzbl (%r12),%ecx
cmp    $0x7d,%cl
jbe    426f8 <PackBitsEncode+0x408>
mov    %rax,%r13
mov    %rdi,%r15
jmpq   42419 <PackBitsEncode+0x129>
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
xor    %eax,%eax
leaveq 
retq   
movzbl (%r12),%esi
mov    %sil,(%rcx)
add    $0x1,%r12
add    $0x1,%rcx
add    $0xffffffffffffffff,%rbx
test   %rbx,%rbx
jg     42692 <PackBitsEncode+0x3a2>
mov    0x388(%r14),%r12
mov    %rax,-0x50(%rbp)
mov    %rdx,-0x38(%rbp)
mov    %rcx,%rbx
mov    -0x40(%rbp),%r11
xor    %r9d,%r9d
mov    $0x3,%r10d
mov    $0x1,%eax
mov    $0x2,%edi
mov    -0x58(%rbp),%r8
jmpq   42422 <PackBitsEncode+0x132>
mov    %r9,%r15
mov    %r11b,(%rbx)
lea    0x1(%rbx),%rcx
mov    %rcx,-0x48(%rbp)
mov    -0x38(%rbp),%rsi
mov    -0x50(%rbp),%rdx
jmpq   42365 <PackBitsEncode+0x75>
add    $0x2,%ecx
mov    %cl,(%r12)
cmp    $0x7f,%cl
je     42709 <PackBitsEncode+0x419>
mov    %rax,%r15
jmp    4270c <PackBitsEncode+0x41c>
mov    %r9,%r15
movzbl -0x1(%rbx),%ecx
mov    %cl,-0x2(%rbx)
mov    %rax,%r13
jmpq   42419 <PackBitsEncode+0x129>
nopl   0x0(%rax,%rax,1)

0000000000042720 <PackBitsEncodeChunk>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    %rcx,-0x30(%rbp)
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    0x350(%rdi),%rax
mov    (%rax),%r14
mov    %rdx,%rbx
mov    %rsi,%r12
mov    %rdi,%r13
jmp    42774 <PackBitsEncodeChunk+0x54>
mov    %rbx,%r15
mov    %r13,%rdi
mov    %r12,%rsi
mov    %r15,%rdx
callq  422f0 <PackBitsEncode>
test   %eax,%eax
js     42794 <PackBitsEncodeChunk+0x74>
sub    %r15,%rbx
add    %r15,%r12
mov    -0x30(%rbp),%rcx
test   %rbx,%rbx
jg     427b1 <PackBitsEncodeChunk+0x91>
mov    $0x1,%eax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
mov    $0xffffffffffffffff,%rax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
cmp    %rbx,%r14
jg     42755 <PackBitsEncodeChunk+0x35>
mov    %r14,%r15
jmp    42758 <PackBitsEncodeChunk+0x38>
nopl   0x0(%rax,%rax,1)

00000000000427c0 <PackBitsDecode>:
push   %rbp
mov    %rsp,%rbp
sub    $0x40,%rsp
mov    %rdi,-0x40(%rbp)
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rsi,%rbx
mov    %rdx,%r12
mov    %rdi,%r14
mov    0x388(%r14),%rcx
mov    0x390(%r14),%r13
lea    0x30773(%rip),%rsi        # 72f71 <module.8>
mov    $0x1,%eax
lea    0x30776(%rip),%rdx        # 72f80 <module.8+0xf>
jmp    4284f <PackBitsDecode+0x8f>
mov    %rbx,%rdi
mov    %r15,%rsi
mov    %rcx,%rdx
mov    %rbx,-0x38(%rbp)
mov    %rcx,%rbx
mov    %r8,%r14
callq  8790 <_TIFFmemcpy@plt>
sub    %rbx,%r12
sub    %rbx,%r13
lea    0x1(%r14,%r15,1),%rcx
mov    -0x38(%rbp),%rax
lea    0x1(%r14,%rax,1),%rbx
mov    -0x40(%rbp),%r14
mov    $0x1,%eax
lea    0x30729(%rip),%rsi        # 72f71 <module.8>
lea    0x30731(%rip),%rdx        # 72f80 <module.8+0xf>
test   %r13,%r13
jle    428e3 <PackBitsDecode+0x123>
test   %r12,%r12
jle    428e3 <PackBitsDecode+0x123>
lea    0x1(%rcx),%r15
lea    -0x1(%r13),%r9
movsbq (%rcx),%r8
test   %r8b,%r8b
js     4290c <PackBitsDecode+0x14c>
lea    0x1(%r8),%rcx
cmp    %rcx,%r12
jl     42884 <PackBitsDecode+0xc4>
mov    %r9,%r13
jmp    428b1 <PackBitsDecode+0xf1>
sub    %r12,%r8
lea    0x1(%r8),%rcx
xor    %eax,%eax
mov    0x3b8(%r14),%rdi
mov    %r9,%r13
callq  85a0 <TIFFWarningExt@plt>
lea    -0x1(%r12),%r8
mov    -0x40(%rbp),%r14
mov    $0x1,%eax
lea    0x306c0(%rip),%rsi        # 72f71 <module.8>
lea    0x1(%r8),%rcx
cmp    %r13,%rcx
jle    4280c <PackBitsDecode+0x4c>
mov    %rax,%rbx
xor    %eax,%eax
mov    0x3b8(%r14),%rdi
lea    0x306dc(%rip),%rdx        # 72fad <module.8+0x3c>
callq  85a0 <TIFFWarningExt@plt>
mov    %rbx,%rax
mov    %r15,%rcx
lea    0x3068e(%rip),%rsi        # 72f71 <module.8>
test   %r12,%r12
mov    %rcx,0x388(%r14)
mov    %r13,0x390(%r14)
jg     4291d <PackBitsDecode+0x15d>
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
cmp    $0x80,%r8b
jne    42951 <PackBitsDecode+0x191>
mov    %r15,%rcx
mov    %r9,%r13
jmpq   4284f <PackBitsDecode+0x8f>
xor    %eax,%eax
mov    0x3b8(%r14),%rdi
lea    0x306b0(%rip),%rdx        # 72fdd <module.8+0x6c>
mov    0x27c(%r14),%ecx
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
mov    %rax,%rdi
sub    %r8,%rdi
cmp    %r12,%rdi
jle    42998 <PackBitsDecode+0x1d8>
lea    (%r8,%r12,1),%rdi
sub    %rdi,%rax
xor    %r8d,%r8d
mov    0x3b8(%r14),%rdi
mov    %rcx,-0x38(%rbp)
mov    %r13,-0x30(%rbp)
mov    %rax,%rcx
mov    %r8,%rax
mov    %r9,%r13
callq  85a0 <TIFFWarningExt@plt>
mov    %r13,%r9
mov    -0x30(%rbp),%r13
mov    -0x38(%rbp),%rcx
lea    0x305eb(%rip),%rdx        # 72f80 <module.8+0xf>
mov    %r12,%rdi
test   %r9,%r9
je     429a6 <PackBitsDecode+0x1e6>
movzbl (%r15),%esi
mov    %rdi,%rax
jmp    429e3 <PackBitsDecode+0x223>
xor    %eax,%eax
mov    0x3b8(%r14),%rdi
lea    0x305bb(%rip),%rbx        # 72f71 <module.8>
mov    %rbx,%rsi
lea    0x305ed(%rip),%rdx        # 72fad <module.8+0x3c>
callq  85a0 <TIFFWarningExt@plt>
mov    %r15,%rcx
mov    %rbx,%rsi
xor    %r13d,%r13d
mov    $0x1,%eax
jmpq   428e3 <PackBitsDecode+0x123>
mov    %sil,(%rbx)
add    $0x1,%rbx
add    $0xffffffffffffffff,%rax
test   %rax,%rax
jg     429d8 <PackBitsDecode+0x218>
sub    %rdi,%r12
add    $0x2,%rcx
add    $0xfffffffffffffffe,%r13
mov    $0x1,%eax
lea    0x30572(%rip),%rsi        # 72f71 <module.8>
jmpq   4284f <PackBitsDecode+0x8f>
nopw   %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

0000000000042a10 <TIFFInitPixarLog>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
cmp    $0x808d,%esi
je     42a3f <TIFFInitPixarLog+0x2f>
lea    0x306ae(%rip),%rdi        # 730d5 <module.10+0x11>
lea    0x306c6(%rip),%rsi        # 730f4 <module.10+0x30>
mov    $0x581,%edx
lea    0x306c9(%rip),%rcx        # 73103 <module.10+0x3f>
callq  8490 <__assert_fail@plt>
lea    0x37142(%rip),%rsi        # 79b88 <pixarlogFields>
mov    $0x2,%edx
mov    %rdi,%rax
mov    %r15,-0x10(%rbp)
mov    %rdi,%r15
mov    %rax,%rdi
callq  8520 <_TIFFMergeFields@plt>
test   %eax,%eax
jne    42a85 <TIFFInitPixarLog+0x75>
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
lea    0x306a3(%rip),%rdx        # 73114 <module.10+0x50>
lea    0x3064c(%rip),%rsi        # 730c4 <module.10>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x10(%rbp),%r15
leaveq 
retq   
mov    $0x150,%edi
callq  8440 <_TIFFmalloc@plt>
mov    %rax,0x350(%r15)
test   %rax,%rax
je     42be0 <TIFFInitPixarLog+0x1d0>
mov    %rax,%rdi
mov    %r14,-0x8(%rbp)
mov    %rax,%r14
mov    $0x150,%edx
xor    %esi,%esi
callq  88e0 <_TIFFmemset@plt>
movl   $0x0,0xd8(%r14)
movl   $0xffffffff,0x108(%r14)
lea    0x1dde(%rip),%rax        # 448b0 <PixarLogFixupTags>
mov    %rax,0x2c0(%r15)
lea    0x1de0(%rip),%rax        # 448c0 <PixarLogSetupDecode>
mov    %rax,0x2c8(%r15)
lea    0x2002(%rip),%rax        # 44af0 <PixarLogPreDecode>
mov    %rax,0x2d0(%r15)
lea    0x17e4(%rip),%rax        # 442e0 <PixarLogDecode>
mov    %rax,0x2f8(%r15)
mov    %rax,0x308(%r15)
mov    %rax,0x318(%r15)
lea    0x2068(%rip),%rax        # 44b80 <PixarLogSetupEncode>
mov    %rax,0x2d8(%r15)
lea    0x21fa(%rip),%rax        # 44d20 <PixarLogPreEncode>
mov    %rax,0x2e8(%r15)
lea    0x3a8c(%rip),%rax        # 465c0 <PixarLogPostEncode>
mov    %rax,0x2f0(%r15)
lea    0x149e(%rip),%rax        # 43fe0 <PixarLogEncode>
mov    %rax,0x300(%r15)
mov    %rax,0x310(%r15)
mov    %rax,0x320(%r15)
lea    0x3b72(%rip),%rax        # 466d0 <PixarLogClose>
mov    %rax,0x328(%r15)
lea    0x3bb4(%rip),%rax        # 46720 <PixarLogCleanup>
mov    %rax,0x338(%r15)
mov    0x410(%r15),%rax
mov    %rax,0x110(%r14)
lea    0x3f08(%rip),%rax        # 46a90 <PixarLogVGetField>
mov    %rax,0x410(%r15)
mov    0x408(%r15),%rax
mov    %rax,0x118(%r14)
lea    0x3cbc(%rip),%rax        # 46860 <PixarLogVSetField>
mov    %rax,0x408(%r15)
mov    %r15,%rdi
movl   $0xffffffff,0x10c(%r14)
movl   $0x0,0x104(%r14)
callq  8ac0 <TIFFPredictorInit@plt>
mov    %r14,%rdi
callq  43b10 <PixarLogMakeTables>
mov    $0x1,%eax
mov    -0x8(%rbp),%r14
mov    -0x10(%rbp),%r15
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
lea    0x30550(%rip),%rdx        # 73140 <module.10+0x7c>
lea    0x304cd(%rip),%rsi        # 730c4 <module.10>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x10(%rbp),%r15
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nop

0000000000042c10 <horizontalAccumulateF>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
cmp    %esi,%edx
jle    42c1e <horizontalAccumulateF+0xe>
leaveq 
retq   
cmp    $0x3,%edx
je     42c5e <horizontalAccumulateF+0x4e>
cmp    $0x4,%edx
je     42cb0 <horizontalAccumulateF+0xa0>
mov    %rdx,%r9
movzwl (%rdi),%eax
and    $0x7ff,%eax
mov    %eax,%eax
movss  (%r8,%rax,4),%xmm0
movss  %xmm0,(%rcx)
add    $0x2,%rdi
add    $0x4,%rcx
add    $0xffffffff,%r9d
test   %r9d,%r9d
jg     42c2f <horizontalAccumulateF+0x1f>
movslq %edx,%r11
sub    %edx,%esi
jmpq   42d5a <horizontalAccumulateF+0x14a>
movzwl (%rdi),%edx
and    $0x7ff,%edx
mov    %edx,%eax
movss  (%r8,%rax,4),%xmm0
movzwl 0x2(%rdi),%eax
and    $0x7ff,%eax
mov    %eax,%r9d
movss  (%r8,%r9,4),%xmm2
movzwl 0x4(%rdi),%r9d
and    $0x7ff,%r9d
mov    %r9d,%r10d
movss  (%r8,%r10,4),%xmm1
movss  %xmm0,(%rcx)
movss  %xmm2,0x4(%rcx)
movss  %xmm1,0x8(%rcx)
add    $0xfffffffd,%esi
mov    %r15,-0x10(%rbp)
jmpq   42dcd <horizontalAccumulateF+0x1bd>
movzwl (%rdi),%eax
and    $0x7ff,%eax
mov    %eax,%edx
movss  (%r8,%rdx,4),%xmm3
movzwl 0x2(%rdi),%edx
and    $0x7ff,%edx
mov    %edx,%r9d
movss  (%r8,%r9,4),%xmm2
movzwl 0x4(%rdi),%r9d
and    $0x7ff,%r9d
mov    %r9d,%r10d
movss  (%r8,%r10,4),%xmm1
movzwl 0x6(%rdi),%r10d
and    $0x7ff,%r10d
mov    %r10d,%r11d
movss  (%r8,%r11,4),%xmm0
movss  %xmm3,(%rcx)
movss  %xmm2,0x4(%rcx)
movss  %xmm1,0x8(%rcx)
movss  %xmm0,0xc(%rcx)
add    $0xfffffffc,%esi
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
jmpq   42e64 <horizontalAccumulateF+0x254>
mov    %rdx,%r9
movzwl (%rdi,%r11,2),%r10d
movzwl (%rdi),%eax
add    %r10d,%eax
mov    %ax,(%rdi,%r11,2)
movzwl (%rdi),%eax
and    $0x7ff,%eax
mov    %eax,%eax
movss  (%r8,%rax,4),%xmm0
movss  %xmm0,(%rcx)
add    $0x2,%rdi
add    $0x4,%rcx
add    $0xffffffff,%r9d
test   %r9d,%r9d
jg     42d23 <horizontalAccumulateF+0x113>
sub    %edx,%esi
test   %esi,%esi
jg     42d20 <horizontalAccumulateF+0x110>
leaveq 
retq   
lea    0x6(%rdi),%r15
movzwl (%r15),%r10d
add    %r10d,%edx
mov    %rdx,%r10
and    $0x7ff,%r10d
mov    %r10d,%r10d
movss  (%r8,%r10,4),%xmm2
lea    0xc(%rcx),%r11
movzwl 0x8(%rdi),%r10d
add    %r10d,%eax
mov    %rax,%r10
and    $0x7ff,%r10d
mov    %r10d,%r10d
movss  (%r8,%r10,4),%xmm1
movzwl 0xa(%rdi),%edi
add    %edi,%r9d
mov    %r9,%rdi
and    $0x7ff,%edi
mov    %edi,%edi
movss  (%r8,%rdi,4),%xmm0
movss  %xmm2,(%r11)
movss  %xmm1,0x10(%rcx)
movss  %xmm0,0x14(%rcx)
add    $0xfffffffd,%esi
mov    %r11,%rcx
mov    %r15,%rdi
test   %esi,%esi
jg     42d60 <horizontalAccumulateF+0x150>
mov    -0x10(%rbp),%r15
leaveq 
retq   
lea    0x8(%rdi),%r15
movzwl (%r15),%r11d
add    %r11d,%eax
mov    %rax,%r11
and    $0x7ff,%r11d
mov    %r11d,%r11d
movss  (%r8,%r11,4),%xmm3
lea    0x10(%rcx),%r14
movzwl 0xa(%rdi),%r11d
add    %r11d,%edx
mov    %rdx,%r11
and    $0x7ff,%r11d
mov    %r11d,%r11d
movss  (%r8,%r11,4),%xmm2
movzwl 0xc(%rdi),%r11d
add    %r11d,%r9d
mov    %r9,%r11
and    $0x7ff,%r11d
mov    %r11d,%r11d
movss  (%r8,%r11,4),%xmm1
movzwl 0xe(%rdi),%edi
add    %edi,%r10d
mov    %r10,%rdi
and    $0x7ff,%edi
mov    %edi,%edi
movss  (%r8,%rdi,4),%xmm0
movss  %xmm3,(%r14)
movss  %xmm2,0x14(%rcx)
movss  %xmm1,0x18(%rcx)
movss  %xmm0,0x1c(%rcx)
add    $0xfffffffc,%esi
mov    %r14,%rcx
mov    %r15,%rdi
test   %esi,%esi
jg     42dd7 <horizontalAccumulateF+0x1c7>
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)

0000000000042e80 <horizontalAccumulate12>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
cmp    %esi,%edx
jle    42e8e <horizontalAccumulate12+0xe>
leaveq 
retq   
movss  0x305ee(%rip),%xmm4        # 73484 <module.47+0x16>
movss  0x305ea(%rip),%xmm5        # 73488 <module.47+0x1a>
mov    $0xbff,%r11d
cmp    $0x3,%edx
je     42ed8 <horizontalAccumulate12+0x58>
cmp    $0x4,%edx
je     42f27 <horizontalAccumulate12+0xa7>
mov    %rdx,%r9
movzwl (%rdi),%eax
and    $0x7ff,%eax
mov    %eax,%eax
movapd %xmm4,%xmm0
mulss  (%r8,%rax,4),%xmm0
ucomiss %xmm5,%xmm0
jp     42ed0 <horizontalAccumulate12+0x50>
jb     42f88 <horizontalAccumulate12+0x108>
mov    %r11,%rax
jmpq   42f8d <horizontalAccumulate12+0x10d>
movzwl 0x2(%rdi),%edx
and    $0x7ff,%edx
mov    %edx,%eax
movss  (%r8,%rax,4),%xmm0
movzwl 0x4(%rdi),%r9d
and    $0x7ff,%r9d
mov    %r9d,%eax
movss  (%r8,%rax,4),%xmm1
movzwl (%rdi),%eax
and    $0x7ff,%eax
mov    %eax,%r10d
movapd %xmm4,%xmm2
mulss  (%r8,%r10,4),%xmm2
ucomiss %xmm5,%xmm2
jp     42f1f <horizontalAccumulate12+0x9f>
jb     42fb0 <horizontalAccumulate12+0x130>
mov    %r11,%r10
jmpq   42fb5 <horizontalAccumulate12+0x135>
movzwl 0x2(%rdi),%edx
and    $0x7ff,%edx
mov    %edx,%eax
movss  (%r8,%rax,4),%xmm0
movzwl 0x4(%rdi),%r9d
and    $0x7ff,%r9d
mov    %r9d,%eax
movss  (%r8,%rax,4),%xmm2
movzwl 0x6(%rdi),%r10d
and    $0x7ff,%r10d
mov    %r10d,%eax
movss  (%r8,%rax,4),%xmm1
movzwl (%rdi),%eax
and    $0x7ff,%eax
mov    %r15,-0x10(%rbp)
mov    %eax,%r15d
movapd %xmm4,%xmm3
mulss  (%r8,%r15,4),%xmm3
ucomiss %xmm5,%xmm3
jp     42f83 <horizontalAccumulate12+0x103>
jb     42fc9 <horizontalAccumulate12+0x149>
mov    %r11,%r15
jmp    42fce <horizontalAccumulate12+0x14e>
cvttss2si %xmm0,%rax
mov    %ax,(%rcx)
add    $0x2,%rcx
add    $0x2,%rdi
add    $0xffffffff,%r9d
test   %r9d,%r9d
jg     42eb1 <horizontalAccumulate12+0x31>
movslq %edx,%r10
sub    %edx,%esi
mov    %r15,-0x10(%rbp)
jmp    42ffd <horizontalAccumulate12+0x17d>
cvttss2si %xmm2,%r10
mov    %r10w,(%rcx)
mulss  %xmm4,%xmm0
ucomiss %xmm5,%xmm0
jp     42fc4 <horizontalAccumulate12+0x144>
jb     43007 <horizontalAccumulate12+0x187>
mov    %r11,%r10
jmp    4300c <horizontalAccumulate12+0x18c>
cvttss2si %xmm3,%r15
mov    %r15w,(%rcx)
mulss  %xmm4,%xmm0
ucomiss %xmm5,%xmm0
jp     42fdd <horizontalAccumulate12+0x15d>
jb     43021 <horizontalAccumulate12+0x1a1>
mov    %r11,%r15
jmp    43026 <horizontalAccumulate12+0x1a6>
cvttss2si %xmm0,%rax
mov    %ax,(%rcx)
add    $0x2,%rcx
add    $0x2,%rdi
add    $0xffffffff,%r9d
test   %r9d,%r9d
jg     4303e <horizontalAccumulate12+0x1be>
sub    %edx,%esi
test   %esi,%esi
jg     4303b <horizontalAccumulate12+0x1bb>
mov    -0x10(%rbp),%r15
leaveq 
retq   
cvttss2si %xmm0,%r10
mov    %r10w,0x2(%rcx)
mulss  %xmm4,%xmm1
ucomiss %xmm5,%xmm1
jp     4301c <horizontalAccumulate12+0x19c>
jb     43075 <horizontalAccumulate12+0x1f5>
mov    %r11,%r10
jmp    4307a <horizontalAccumulate12+0x1fa>
cvttss2si %xmm0,%r15
mov    %r15w,0x2(%rcx)
mulss  %xmm4,%xmm2
ucomiss %xmm5,%xmm2
jp     43036 <horizontalAccumulate12+0x1b6>
jb     43088 <horizontalAccumulate12+0x208>
mov    %r11,%r15
jmp    4308d <horizontalAccumulate12+0x20d>
mov    %rdx,%r9
movzwl (%rdi,%r10,2),%r15d
movzwl (%rdi),%eax
add    %r15d,%eax
mov    %ax,(%rdi,%r10,2)
movzwl %ax,%eax
and    $0x7ff,%eax
mov    %eax,%eax
movapd %xmm4,%xmm0
mulss  (%r8,%rax,4),%xmm0
ucomiss %xmm5,%xmm0
jp     4306d <horizontalAccumulate12+0x1ed>
jb     42fe2 <horizontalAccumulate12+0x162>
mov    %r11,%rax
jmpq   42fe7 <horizontalAccumulate12+0x167>
cvttss2si %xmm1,%r10
mov    %r10w,0x4(%rcx)
add    $0xfffffffd,%esi
mov    %r15,-0x10(%rbp)
jmp    430b2 <horizontalAccumulate12+0x232>
cvttss2si %xmm2,%r15
mov    %r15w,0x4(%rcx)
mulss  %xmm4,%xmm1
ucomiss %xmm5,%xmm1
jp     4309d <horizontalAccumulate12+0x21d>
jb     430bc <horizontalAccumulate12+0x23c>
mov    %r11,%r15
jmp    430c1 <horizontalAccumulate12+0x241>
cvttss2si %xmm0,%r10
mov    %r10w,0xa(%rcx)
add    $0xfffffffd,%esi
mov    %r15,%rcx
test   %esi,%esi
jg     430cf <horizontalAccumulate12+0x24f>
mov    -0x10(%rbp),%r15
leaveq 
retq   
cvttss2si %xmm1,%r15
mov    %r15w,0x6(%rcx)
add    $0xfffffffc,%esi
mov    %r14,-0x8(%rbp)
jmp    43143 <horizontalAccumulate12+0x2c3>
movzwl 0x8(%rdi),%r10d
add    %r10d,%edx
mov    %rdx,%r10
and    $0x7ff,%r10d
mov    %r10d,%r10d
movss  (%r8,%r10,4),%xmm1
movzwl 0xa(%rdi),%r10d
add    %r10d,%r9d
mov    %r9,%r10
and    $0x7ff,%r10d
mov    %r10d,%r10d
movss  (%r8,%r10,4),%xmm0
add    $0x6,%rdi
movzwl (%rdi),%r10d
add    %r10d,%eax
mov    %rax,%r10
and    $0x7ff,%r10d
mov    %r10d,%r10d
movapd %xmm4,%xmm2
mulss  (%r8,%r10,4),%xmm2
ucomiss %xmm5,%xmm2
jp     4312e <horizontalAccumulate12+0x2ae>
jb     43151 <horizontalAccumulate12+0x2d1>
mov    %r11,%r10
jmp    43156 <horizontalAccumulate12+0x2d6>
cvttss2si %xmm0,%r14
mov    %r14w,0xe(%rcx)
add    $0xfffffffc,%esi
mov    %r15,%rcx
test   %esi,%esi
jg     43175 <horizontalAccumulate12+0x2f5>
mov    -0x8(%rbp),%r14
mov    -0x10(%rbp),%r15
leaveq 
retq   
cvttss2si %xmm2,%r10
lea    0x6(%rcx),%r15
mov    %r10w,(%r15)
mulss  %xmm4,%xmm1
ucomiss %xmm5,%xmm1
jp     4316d <horizontalAccumulate12+0x2ed>
jb     431f4 <horizontalAccumulate12+0x374>
mov    %r11,%r10
jmpq   431f9 <horizontalAccumulate12+0x379>
movzwl 0xa(%rdi),%r14d
add    %r14d,%edx
mov    %rdx,%r14
and    $0x7ff,%r14d
mov    %r14d,%r14d
movss  (%r8,%r14,4),%xmm2
movzwl 0xc(%rdi),%r14d
add    %r14d,%r9d
mov    %r9,%r14
and    $0x7ff,%r14d
mov    %r14d,%r14d
movss  (%r8,%r14,4),%xmm1
movzwl 0xe(%rdi),%r14d
add    %r14d,%r10d
mov    %r10,%r14
and    $0x7ff,%r14d
mov    %r14d,%r14d
movss  (%r8,%r14,4),%xmm0
add    $0x8,%rdi
movzwl (%rdi),%r14d
add    %r14d,%eax
mov    %rax,%r14
and    $0x7ff,%r14d
mov    %r14d,%r14d
movapd %xmm4,%xmm3
mulss  (%r8,%r14,4),%xmm3
ucomiss %xmm5,%xmm3
jp     431ef <horizontalAccumulate12+0x36f>
jb     43215 <horizontalAccumulate12+0x395>
mov    %r11,%r14
jmp    4321a <horizontalAccumulate12+0x39a>
cvttss2si %xmm1,%r10
mov    %r10w,0x8(%rcx)
mulss  %xmm4,%xmm0
ucomiss %xmm5,%xmm0
jp     4320d <horizontalAccumulate12+0x38d>
jb     430a2 <horizontalAccumulate12+0x222>
mov    %r11,%r10
jmpq   430a7 <horizontalAccumulate12+0x227>
cvttss2si %xmm3,%r14
lea    0x8(%rcx),%r15
mov    %r14w,(%r15)
mulss  %xmm4,%xmm2
ucomiss %xmm5,%xmm2
jp     4322d <horizontalAccumulate12+0x3ad>
jb     43232 <horizontalAccumulate12+0x3b2>
mov    %r11,%r14
jmp    43237 <horizontalAccumulate12+0x3b7>
cvttss2si %xmm2,%r14
mov    %r14w,0xa(%rcx)
mulss  %xmm4,%xmm1
ucomiss %xmm5,%xmm1
jp     43247 <horizontalAccumulate12+0x3c7>
jb     4324c <horizontalAccumulate12+0x3cc>
mov    %r11,%r14
jmp    43251 <horizontalAccumulate12+0x3d1>
cvttss2si %xmm1,%r14
mov    %r14w,0xc(%rcx)
mulss  %xmm4,%xmm0
ucomiss %xmm5,%xmm0
jp     43265 <horizontalAccumulate12+0x3e5>
jb     43133 <horizontalAccumulate12+0x2b3>
mov    %r11,%r14
jmpq   43138 <horizontalAccumulate12+0x2b8>
nopl   (%rax)

0000000000043270 <horizontalAccumulate16>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
cmp    %esi,%edx
jle    4327e <horizontalAccumulate16+0xe>
leaveq 
retq   
cmp    $0x3,%edx
je     432b8 <horizontalAccumulate16+0x48>
cmp    $0x4,%edx
je     43305 <horizontalAccumulate16+0x95>
mov    %rdx,%r9
movzwl (%rdi),%eax
and    $0x7ff,%eax
mov    %eax,%eax
movzwl (%r8,%rax,2),%eax
mov    %ax,(%rcx)
add    $0x2,%rdi
add    $0x2,%rcx
add    $0xffffffff,%r9d
test   %r9d,%r9d
jg     4328b <horizontalAccumulate16+0x1b>
movslq %edx,%r10
sub    %edx,%esi
jmpq   433a6 <horizontalAccumulate16+0x136>
movzwl (%rdi),%r9d
and    $0x7ff,%r9d
mov    %r9d,%eax
movzwl (%r8,%rax,2),%eax
mov    %ax,(%rcx)
movzwl 0x2(%rdi),%eax
and    $0x7ff,%eax
mov    %eax,%edx
movzwl (%r8,%rdx,2),%edx
mov    %dx,0x2(%rcx)
movzwl 0x4(%rdi),%edx
and    $0x7ff,%edx
mov    %edx,%r10d
movzwl (%r8,%r10,2),%r10d
mov    %r10w,0x4(%rcx)
add    $0xfffffffd,%esi
mov    %r15,-0x10(%rbp)
jmpq   43413 <horizontalAccumulate16+0x1a3>
movzwl (%rdi),%r10d
and    $0x7ff,%r10d
mov    %r10d,%eax
movzwl (%r8,%rax,2),%eax
mov    %ax,(%rcx)
movzwl 0x2(%rdi),%r9d
and    $0x7ff,%r9d
mov    %r9d,%eax
movzwl (%r8,%rax,2),%eax
mov    %ax,0x2(%rcx)
movzwl 0x4(%rdi),%edx
and    $0x7ff,%edx
mov    %edx,%eax
movzwl (%r8,%rax,2),%eax
mov    %ax,0x4(%rcx)
movzwl 0x6(%rdi),%eax
and    $0x7ff,%eax
mov    %eax,%r11d
movzwl (%r8,%r11,2),%r11d
mov    %r11w,0x6(%rcx)
add    $0xfffffffc,%esi
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
jmpq   434a3 <horizontalAccumulate16+0x233>
mov    %rdx,%r9
movzwl (%rdi,%r10,2),%r11d
movzwl (%rdi),%eax
add    %r11d,%eax
mov    %ax,(%rdi,%r10,2)
movzwl (%rdi),%eax
and    $0x7ff,%eax
mov    %eax,%eax
movzwl (%r8,%rax,2),%eax
mov    %ax,(%rcx)
add    $0x2,%rdi
add    $0x2,%rcx
add    $0xffffffff,%r9d
test   %r9d,%r9d
jg     43371 <horizontalAccumulate16+0x101>
sub    %edx,%esi
test   %esi,%esi
jg     4336e <horizontalAccumulate16+0xfe>
leaveq 
retq   
lea    0x6(%rdi),%r15
movzwl (%r15),%r10d
add    %r10d,%r9d
mov    %r9,%r10
and    $0x7ff,%r10d
mov    %r10d,%r10d
movzwl (%r8,%r10,2),%r10d
lea    0x6(%rcx),%r11
mov    %r10w,(%r11)
movzwl 0x8(%rdi),%r10d
add    %r10d,%eax
mov    %rax,%r10
and    $0x7ff,%r10d
mov    %r10d,%r10d
movzwl (%r8,%r10,2),%r10d
mov    %r10w,0x8(%rcx)
movzwl 0xa(%rdi),%edi
add    %edi,%edx
mov    %rdx,%rdi
and    $0x7ff,%edi
mov    %edi,%edi
movzwl (%r8,%rdi,2),%edi
mov    %di,0xa(%rcx)
add    $0xfffffffd,%esi
mov    %r11,%rcx
mov    %r15,%rdi
test   %esi,%esi
jg     433ac <horizontalAccumulate16+0x13c>
mov    -0x10(%rbp),%r15
leaveq 
retq   
lea    0x8(%rdi),%r14
movzwl (%r14),%r11d
add    %r11d,%r10d
mov    %r10,%r11
and    $0x7ff,%r11d
mov    %r11d,%r11d
movzwl (%r8,%r11,2),%r11d
lea    0x8(%rcx),%r15
mov    %r11w,(%r15)
movzwl 0xa(%rdi),%r11d
add    %r11d,%r9d
mov    %r9,%r11
and    $0x7ff,%r11d
mov    %r11d,%r11d
movzwl (%r8,%r11,2),%r11d
mov    %r11w,0xa(%rcx)
movzwl 0xc(%rdi),%r11d
add    %r11d,%edx
mov    %rdx,%r11
and    $0x7ff,%r11d
mov    %r11d,%r11d
movzwl (%r8,%r11,2),%r11d
mov    %r11w,0xc(%rcx)
movzwl 0xe(%rdi),%edi
add    %edi,%eax
mov    %rax,%rdi
and    $0x7ff,%edi
mov    %edi,%edi
movzwl (%r8,%rdi,2),%edi
mov    %di,0xe(%rcx)
add    $0xfffffffc,%esi
mov    %r15,%rcx
mov    %r14,%rdi
test   %esi,%esi
jg     4341d <horizontalAccumulate16+0x1ad>
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)

00000000000434c0 <horizontalAccumulate11>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
cmp    %esi,%edx
jle    434ce <horizontalAccumulate11+0xe>
leaveq 
retq   
cmp    $0x3,%edx
je     43500 <horizontalAccumulate11+0x40>
cmp    $0x4,%edx
je     4352a <horizontalAccumulate11+0x6a>
mov    %rdx,%r8
movzwl (%rdi),%eax
and    $0x7ff,%ax
mov    %ax,(%rcx)
add    $0x2,%rdi
add    $0x2,%rcx
add    $0xffffffff,%r8d
test   %r8d,%r8d
jg     434db <horizontalAccumulate11+0x1b>
movslq %edx,%r10
sub    %edx,%esi
jmpq   43596 <horizontalAccumulate11+0xd6>
movzwl (%rdi),%eax
mov    %ax,(%rcx)
movzwl 0x2(%rdi),%eax
mov    %ax,0x2(%rcx)
movzwl 0x4(%rdi),%eax
mov    %ax,0x4(%rcx)
movzwl (%rdi),%edx
movzwl 0x2(%rdi),%eax
movzwl 0x4(%rdi),%r8d
add    $0xfffffffd,%esi
jmpq   435ea <horizontalAccumulate11+0x12a>
movzwl (%rdi),%eax
mov    %ax,(%rcx)
movzwl 0x2(%rdi),%eax
mov    %ax,0x2(%rcx)
movzwl 0x4(%rdi),%eax
mov    %ax,0x4(%rcx)
movzwl 0x6(%rdi),%eax
mov    %ax,0x6(%rcx)
movzwl (%rdi),%r10d
movzwl 0x2(%rdi),%r9d
movzwl 0x4(%rdi),%r8d
movzwl 0x6(%rdi),%edx
lea    -0x4(%rsi),%eax
mov    %r15,-0x8(%rbp)
jmpq   4364c <horizontalAccumulate11+0x18c>
mov    %rdx,%r8
movzwl (%rdi,%r10,2),%r9d
movzwl (%rdi),%eax
add    %r9d,%eax
mov    %ax,(%rdi,%r10,2)
movzwl (%rdi),%eax
and    $0x7ff,%ax
mov    %ax,(%rcx)
add    $0x2,%rdi
add    $0x2,%rcx
add    $0xffffffff,%r8d
test   %r8d,%r8d
jg     43569 <horizontalAccumulate11+0xa9>
sub    %edx,%esi
test   %esi,%esi
jg     43566 <horizontalAccumulate11+0xa6>
leaveq 
retq   
lea    0x6(%rdi),%r11
movzwl (%r11),%r9d
add    %r9d,%edx
mov    %rdx,%r9
and    $0x7ff,%r9w
lea    0x6(%rcx),%r10
mov    %r9w,(%r10)
movzwl 0x8(%rdi),%r9d
add    %r9d,%eax
mov    %rax,%r9
and    $0x7ff,%r9w
mov    %r9w,0x8(%rcx)
movzwl 0xa(%rdi),%edi
add    %edi,%r8d
mov    %r8,%rdi
and    $0x7ff,%di
mov    %di,0xa(%rcx)
add    $0xfffffffd,%esi
mov    %r10,%rcx
mov    %r11,%rdi
test   %esi,%esi
jg     4359c <horizontalAccumulate11+0xdc>
leaveq 
retq   
lea    0x8(%rdi),%r15
movzwl (%r15),%esi
add    %esi,%r10d
mov    %r10,%rsi
and    $0x7ff,%si
lea    0x8(%rcx),%r11
mov    %si,(%r11)
movzwl 0xa(%rdi),%esi
add    %esi,%r9d
mov    %r9,%rsi
and    $0x7ff,%si
mov    %si,0xa(%rcx)
movzwl 0xc(%rdi),%esi
add    %esi,%r8d
mov    %r8,%rsi
and    $0x7ff,%si
mov    %si,0xc(%rcx)
movzwl 0xe(%rdi),%esi
add    %esi,%edx
mov    %rdx,%rsi
and    $0x7ff,%si
mov    %si,0xe(%rcx)
add    $0xfffffffc,%eax
mov    %r11,%rcx
mov    %r15,%rdi
test   %eax,%eax
jg     435f0 <horizontalAccumulate11+0x130>
mov    -0x8(%rbp),%r15
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)

0000000000043660 <horizontalAccumulate8>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
cmp    %esi,%edx
jle    4366e <horizontalAccumulate8+0xe>
leaveq 
retq   
cmp    $0x3,%edx
je     436a7 <horizontalAccumulate8+0x47>
cmp    $0x4,%edx
je     436f1 <horizontalAccumulate8+0x91>
mov    %rdx,%r9
movzwl (%rdi),%eax
and    $0x7ff,%eax
mov    %eax,%eax
movzbl (%r8,%rax,1),%eax
mov    %al,(%rcx)
add    $0x2,%rdi
add    $0x1,%rcx
add    $0xffffffff,%r9d
test   %r9d,%r9d
jg     4367b <horizontalAccumulate8+0x1b>
movslq %edx,%r10
sub    %edx,%esi
jmpq   4378d <horizontalAccumulate8+0x12d>
movzwl (%rdi),%r9d
and    $0x7ff,%r9d
mov    %r9d,%eax
movzbl (%rax,%r8,1),%eax
mov    %al,(%rcx)
movzwl 0x2(%rdi),%eax
and    $0x7ff,%eax
mov    %eax,%edx
movzbl (%rdx,%r8,1),%edx
mov    %dl,0x1(%rcx)
movzwl 0x4(%rdi),%edx
and    $0x7ff,%edx
mov    %edx,%r10d
movzbl (%r8,%r10,1),%r10d
mov    %r10b,0x2(%rcx)
add    $0xfffffffd,%esi
mov    %r15,-0x10(%rbp)
jmpq   437f8 <horizontalAccumulate8+0x198>
movzwl (%rdi),%r10d
and    $0x7ff,%r10d
mov    %r10d,%eax
movzbl (%r8,%rax,1),%eax
mov    %al,(%rcx)
movzwl 0x2(%rdi),%r9d
and    $0x7ff,%r9d
mov    %r9d,%eax
movzbl (%r8,%rax,1),%eax
mov    %al,0x1(%rcx)
movzwl 0x4(%rdi),%edx
and    $0x7ff,%edx
mov    %edx,%eax
movzbl (%r8,%rax,1),%eax
mov    %al,0x2(%rcx)
movzwl 0x6(%rdi),%eax
and    $0x7ff,%eax
mov    %eax,%r11d
movzbl (%r8,%r11,1),%r11d
mov    %r11b,0x3(%rcx)
add    $0xfffffffc,%esi
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
jmpq   43885 <horizontalAccumulate8+0x225>
mov    %rdx,%r9
movzwl (%rdi,%r10,2),%r11d
movzwl (%rdi),%eax
add    %r11d,%eax
mov    %ax,(%rdi,%r10,2)
movzwl (%rdi),%eax
and    $0x7ff,%eax
mov    %eax,%eax
movzbl (%r8,%rax,1),%eax
mov    %al,(%rcx)
add    $0x2,%rdi
add    $0x1,%rcx
add    $0xffffffff,%r9d
test   %r9d,%r9d
jg     43759 <horizontalAccumulate8+0xf9>
sub    %edx,%esi
test   %esi,%esi
jg     43756 <horizontalAccumulate8+0xf6>
leaveq 
retq   
lea    0x6(%rdi),%r15
movzwl (%r15),%r10d
add    %r10d,%r9d
mov    %r9,%r10
and    $0x7ff,%r10d
mov    %r10d,%r10d
movzbl (%r8,%r10,1),%r10d
lea    0x3(%rcx),%r11
mov    %r10b,(%r11)
movzwl 0x8(%rdi),%r10d
add    %r10d,%eax
mov    %rax,%r10
and    $0x7ff,%r10d
mov    %r10d,%r10d
movzbl (%r8,%r10,1),%r10d
mov    %r10b,0x4(%rcx)
movzwl 0xa(%rdi),%edi
add    %edi,%edx
mov    %rdx,%rdi
and    $0x7ff,%edi
mov    %edi,%edi
movzbl (%rdi,%r8,1),%edi
mov    %dil,0x5(%rcx)
add    $0xfffffffd,%esi
mov    %r11,%rcx
mov    %r15,%rdi
test   %esi,%esi
jg     43793 <horizontalAccumulate8+0x133>
mov    -0x10(%rbp),%r15
leaveq 
retq   
lea    0x8(%rdi),%r14
movzwl (%r14),%r11d
add    %r11d,%r10d
mov    %r10,%r11
and    $0x7ff,%r11d
mov    %r11d,%r11d
movzbl (%r8,%r11,1),%r11d
lea    0x4(%rcx),%r15
mov    %r11b,(%r15)
movzwl 0xa(%rdi),%r11d
add    %r11d,%r9d
mov    %r9,%r11
and    $0x7ff,%r11d
mov    %r11d,%r11d
movzbl (%r8,%r11,1),%r11d
mov    %r11b,0x5(%rcx)
movzwl 0xc(%rdi),%r11d
add    %r11d,%edx
mov    %rdx,%r11
and    $0x7ff,%r11d
mov    %r11d,%r11d
movzbl (%r8,%r11,1),%r11d
mov    %r11b,0x6(%rcx)
movzwl 0xe(%rdi),%edi
add    %edi,%eax
mov    %rax,%rdi
and    $0x7ff,%edi
mov    %edi,%edi
movzbl (%r8,%rdi,1),%edi
mov    %dil,0x7(%rcx)
add    $0xfffffffc,%esi
mov    %r15,%rcx
mov    %r14,%rdi
test   %esi,%esi
jg     43802 <horizontalAccumulate8+0x1a2>
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

00000000000438a0 <horizontalAccumulate8abgr>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
cmp    %esi,%edx
jle    438ae <horizontalAccumulate8abgr+0xe>
leaveq 
retq   
cmp    $0x3,%edx
je     438eb <horizontalAccumulate8abgr+0x4b>
cmp    $0x4,%edx
je     4393f <horizontalAccumulate8abgr+0x9f>
mov    %rdx,%r9
movzwl (%rdi),%eax
and    $0x7ff,%eax
mov    %eax,%eax
movzbl (%r8,%rax,1),%eax
mov    %al,(%rcx)
add    $0x2,%rdi
add    $0x1,%rcx
add    $0xffffffff,%r9d
test   %r9d,%r9d
jg     438bf <horizontalAccumulate8abgr+0x1f>
movslq %edx,%r11
sub    %edx,%esi
jmpq   439e6 <horizontalAccumulate8abgr+0x146>
movb   $0x0,(%rcx)
movzwl 0x4(%rdi),%eax
and    $0x7ff,%eax
mov    %eax,%edx
movzbl (%rdx,%r8,1),%r11d
movzwl 0x2(%rdi),%edx
and    $0x7ff,%edx
mov    %edx,%r9d
movzbl (%r9,%r8,1),%r10d
movzwl (%rdi),%r9d
and    $0x7ff,%r9d
mov    %r15,-0x20(%rbp)
mov    %r9d,%r15d
movzbl (%r8,%r15,1),%r15d
mov    %r11b,0x1(%rcx)
mov    %r10b,0x2(%rcx)
mov    %r15b,0x3(%rcx)
add    $0xfffffffd,%esi
mov    %r14,-0x18(%rbp)
jmpq   43a57 <horizontalAccumulate8abgr+0x1b7>
movzwl 0x6(%rdi),%eax
and    $0x7ff,%eax
mov    %eax,%edx
movzbl (%r8,%rdx,1),%r11d
movzwl 0x4(%rdi),%edx
and    $0x7ff,%edx
mov    %edx,%r9d
movzbl (%r8,%r9,1),%r10d
movzwl 0x2(%rdi),%r9d
and    $0x7ff,%r9d
mov    %r15,-0x20(%rbp)
mov    %r9d,%r15d
movzbl (%r8,%r15,1),%r15d
mov    %r14,-0x18(%rbp)
movzwl (%rdi),%r14d
and    $0x7ff,%r14d
mov    %r13,-0x10(%rbp)
mov    %r14d,%r13d
movzbl (%r8,%r13,1),%r13d
mov    %r11b,(%rcx)
mov    %r10b,0x1(%rcx)
mov    %r15b,0x2(%rcx)
mov    %r13b,0x3(%rcx)
add    $0xfffffffc,%esi
mov    %r12,-0x8(%rbp)
jmpq   43ae9 <horizontalAccumulate8abgr+0x249>
mov    %rdx,%r9
movzwl (%rdi,%r11,2),%r10d
movzwl (%rdi),%eax
add    %r10d,%eax
mov    %ax,(%rdi,%r11,2)
movzwl (%rdi),%eax
and    $0x7ff,%eax
mov    %eax,%eax
movzbl (%r8,%rax,1),%eax
mov    %al,(%rcx)
add    $0x2,%rdi
add    $0x1,%rcx
add    $0xffffffff,%r9d
test   %r9d,%r9d
jg     439b2 <horizontalAccumulate8abgr+0x112>
sub    %edx,%esi
test   %esi,%esi
jg     439af <horizontalAccumulate8abgr+0x10f>
leaveq 
retq   
lea    0x4(%rcx),%r15
movb   $0x0,(%r15)
movzwl 0xa(%rdi),%r10d
add    %r10d,%eax
mov    %rax,%r10
and    $0x7ff,%r10d
mov    %r10d,%r10d
movzbl (%r8,%r10,1),%r14d
movzwl 0x8(%rdi),%r10d
add    %r10d,%edx
mov    %rdx,%r10
and    $0x7ff,%r10d
mov    %r10d,%r10d
movzbl (%r8,%r10,1),%r11d
add    $0x6,%rdi
movzwl (%rdi),%r10d
add    %r10d,%r9d
mov    %r9,%r10
and    $0x7ff,%r10d
mov    %r10d,%r10d
movzbl (%r10,%r8,1),%r10d
mov    %r14b,0x5(%rcx)
mov    %r11b,0x6(%rcx)
mov    %r10b,0x7(%rcx)
add    $0xfffffffd,%esi
mov    %r15,%rcx
test   %esi,%esi
jg     439ec <horizontalAccumulate8abgr+0x14c>
mov    -0x18(%rbp),%r14
mov    -0x20(%rbp),%r15
leaveq 
retq   
movzwl 0xe(%rdi),%r10d
add    %r10d,%eax
mov    %rax,%r10
and    $0x7ff,%r10d
mov    %r10d,%r10d
movzbl (%r8,%r10,1),%r13d
lea    0x4(%rcx),%r15
movzwl 0xc(%rdi),%r10d
add    %r10d,%edx
mov    %rdx,%r10
and    $0x7ff,%r10d
mov    %r10d,%r10d
movzbl (%r8,%r10,1),%r10d
movzwl 0xa(%rdi),%r11d
add    %r11d,%r9d
mov    %r9,%r11
and    $0x7ff,%r11d
mov    %r11d,%r11d
movzbl (%r8,%r11,1),%r12d
add    $0x8,%rdi
movzwl (%rdi),%r11d
add    %r11d,%r14d
mov    %r14,%r11
and    $0x7ff,%r11d
mov    %r11d,%r11d
movzbl (%r8,%r11,1),%r11d
mov    %r13b,(%r15)
mov    %r10b,0x5(%rcx)
mov    %r12b,0x6(%rcx)
mov    %r11b,0x7(%rcx)
add    $0xfffffffc,%esi
mov    %r15,%rcx
test   %esi,%esi
jg     43a65 <horizontalAccumulate8abgr+0x1c5>
mov    -0x8(%rbp),%r12
mov    -0x10(%rbp),%r13
mov    -0x18(%rbp),%r14
mov    -0x20(%rbp),%r15
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

0000000000043b10 <PixarLogMakeTables>:
push   %rbp
mov    %rsp,%rbp
sub    $0xa0,%rsp
mov    %r15,-0x38(%rbp)
mov    %r14,-0x30(%rbp)
mov    %r13,-0x28(%rbp)
mov    %r12,-0x20(%rbp)
mov    %rbx,-0x18(%rbp)
mov    %rdi,-0x10(%rbp)
movsd  0x2f95d(%rip),%xmm0        # 73498 <module.47+0x2a>
callq  8570 <log@plt>
movsd  0x2f958(%rip),%xmm2        # 734a0 <module.47+0x32>
movapd %xmm2,%xmm1
divsd  %xmm0,%xmm1
cvttsd2si %xmm1,%eax
mov    %rax,-0x58(%rbp)
cvtsi2sd %eax,%xmm1
movapd %xmm2,%xmm0
divsd  %xmm1,%xmm0
movdqu %xmm0,-0xa0(%rbp)
movsd  0x2f934(%rip),%xmm1        # 734a8 <module.47+0x3a>
mulsd  %xmm1,%xmm0
callq  8210 <exp@plt>
movdqu -0xa0(%rbp),%xmm1
movsd  0x2f913(%rip),%xmm3        # 734a0 <module.47+0x32>
movapd %xmm3,%xmm2
divsd  %xmm1,%xmm2
movdqu %xmm1,-0x70(%rbp)
cvtsd2ss %xmm2,%xmm1
movdqu %xmm1,-0xa0(%rbp)
movapd %xmm3,%xmm1
divsd  %xmm0,%xmm1
movdqu %xmm0,-0x80(%rbp)
cvtsd2ss %xmm1,%xmm0
movdqu %xmm0,-0x90(%rbp)
movapd %xmm3,%xmm0
callq  8210 <exp@plt>
movdqu -0xa0(%rbp),%xmm1
movss  %xmm1,0x36e78(%rip)        # 7aa50 <LogK1>
movdqu -0x90(%rbp),%xmm1
movss  %xmm1,0x36e6c(%rip)        # 7aa54 <LogK2>
movdqu -0x70(%rbp),%xmm1
movdqu -0x80(%rbp),%xmm2
mulsd  %xmm2,%xmm1
mulsd  %xmm1,%xmm0
movsd  0x2f88e(%rip),%xmm1        # 73490 <module.47+0x22>
divsd  %xmm0,%xmm1
movdqu %xmm0,-0x90(%rbp)
cvttsd2si %xmm1,%eax
mov    %rax,-0x8(%rbp)
add    $0x1,%eax
mov    %rax,-0x50(%rbp)
movslq %eax,%rax
lea    (%rax,%rax,1),%rdi
callq  8440 <_TIFFmalloc@plt>
mov    %rax,%r12
mov    $0x8000,%edi
callq  8440 <_TIFFmalloc@plt>
mov    %rax,%rbx
mov    $0x200,%edi
callq  8440 <_TIFFmalloc@plt>
mov    %rax,%r15
mov    $0x2004,%edi
callq  8440 <_TIFFmalloc@plt>
mov    %rax,%r14
mov    $0x1002,%edi
callq  8440 <_TIFFmalloc@plt>
mov    %rax,%r13
mov    $0x801,%edi
callq  8440 <_TIFFmalloc@plt>
xor    %esi,%esi
test   %r12,%r12
je     43c9b <PixarLogMakeTables+0x18b>
test   %rbx,%rbx
je     43c9b <PixarLogMakeTables+0x18b>
test   %r15,%r15
je     43c9b <PixarLogMakeTables+0x18b>
test   %r14,%r14
je     43c9b <PixarLogMakeTables+0x18b>
test   %r13,%r13
je     43c9b <PixarLogMakeTables+0x18b>
test   %rax,%rax
je     43c9b <PixarLogMakeTables+0x18b>
mov    -0x58(%rbp),%rdi
mov    %rsi,%rcx
movdqu -0x90(%rbp),%xmm1
jmp    43cc3 <PixarLogMakeTables+0x1b3>
test   %r12,%r12
jne    43cea <PixarLogMakeTables+0x1da>
mov    %rbx,%rdi
mov    %rsi,%rbx
mov    %rax,%r12
jmp    43cfa <PixarLogMakeTables+0x1ea>
cvtsi2sd %ecx,%xmm0
mulsd  %xmm1,%xmm0
cvtsd2ss %xmm0,%xmm0
movslq %ecx,%rdx
movss  %xmm0,(%r14,%rdx,4)
add    $0x1,%ecx
cmp    %ecx,%edi
jg     43cab <PixarLogMakeTables+0x19b>
mov    %r15,-0x40(%rbp)
mov    %rbx,-0x48(%rbp)
mov    %r12,-0x58(%rbp)
mov    %rax,-0xa0(%rbp)
mov    %rsi,%rbx
mov    %rdi,%r12
movdqu -0x70(%rbp),%xmm0
jmpq   43dcb <PixarLogMakeTables+0x2bb>
mov    %r12,%rdi
mov    %rax,%r12
callq  8bb0 <_TIFFfree@plt>
mov    %rbx,%rdi
xor    %ebx,%ebx
test   %rdi,%rdi
je     43d04 <PixarLogMakeTables+0x1f4>
callq  8bb0 <_TIFFfree@plt>
test   %r15,%r15
je     43d11 <PixarLogMakeTables+0x201>
mov    %r15,%rdi
callq  8bb0 <_TIFFfree@plt>
test   %r14,%r14
je     43d1e <PixarLogMakeTables+0x20e>
mov    %r14,%rdi
callq  8bb0 <_TIFFfree@plt>
test   %r13,%r13
je     43d2b <PixarLogMakeTables+0x21b>
mov    %r13,%rdi
callq  8bb0 <_TIFFfree@plt>
test   %r12,%r12
je     43d38 <PixarLogMakeTables+0x228>
mov    %r12,%rdi
callq  8bb0 <_TIFFfree@plt>
mov    -0x10(%rbp),%rax
movq   $0x0,0x138(%rax)
movq   $0x0,0x140(%rax)
movq   $0x0,0x148(%rax)
movq   $0x0,0x120(%rax)
movq   $0x0,0x128(%rax)
movq   $0x0,0x130(%rax)
mov    %rbx,%rax
mov    -0x18(%rbp),%rbx
mov    -0x20(%rbp),%r12
mov    -0x28(%rbp),%r13
mov    -0x30(%rbp),%r14
mov    -0x38(%rbp),%r15
leaveq 
retq   
mov    %rcx,%r15
cvtsi2sd %r12d,%xmm1
mulsd  %xmm1,%xmm0
callq  8210 <exp@plt>
movdqu -0x80(%rbp),%xmm1
mulsd  %xmm0,%xmm1
cvtsd2ss %xmm1,%xmm0
movslq %r15d,%rax
movss  %xmm0,(%r14,%rax,4)
add    $0x1,%r12d
lea    0x1(%r15),%ecx
movdqu -0x70(%rbp),%xmm0
cmp    $0x7ff,%r12d
jle    43d97 <PixarLogMakeTables+0x287>
movss  0x1ffc(%r14),%xmm0
movss  %xmm0,0x2000(%r14)
movsd  0x2f6c2(%rip),%xmm1        # 734b0 <module.47+0x42>
movsd  0x2f6c2(%rip),%xmm3        # 734b8 <module.47+0x4a>
movsd  0x2f6c2(%rip),%xmm2        # 734c0 <module.47+0x52>
mov    $0xff,%edi
mov    $0xffff,%esi
mov    -0xa0(%rbp),%r10
mov    %rbx,%rax
jmp    43e5a <PixarLogMakeTables+0x34a>
movslq %eax,%rdx
movss  (%r14,%rdx,4),%xmm0
cvtss2sd %xmm0,%xmm0
mulsd  %xmm2,%xmm0
addsd  %xmm3,%xmm0
ucomisd %xmm2,%xmm0
jbe    43e79 <PixarLogMakeTables+0x369>
mov    %rsi,%rcx
mov    %cx,0x0(%r13,%rdx,2)
movss  (%r14,%rdx,4),%xmm0
cvtss2sd %xmm0,%xmm0
mulsd  %xmm1,%xmm0
addsd  %xmm3,%xmm0
ucomisd %xmm1,%xmm0
jbe    43e80 <PixarLogMakeTables+0x370>
mov    %rdi,%rcx
mov    %cl,(%r10,%rdx,1)
add    $0x1,%eax
cmp    $0x800,%eax
jle    43e14 <PixarLogMakeTables+0x304>
mov    -0x58(%rbp),%r9
mov    -0x50(%rbp),%rdx
mov    %rbx,%rax
mov    %rax,%rcx
movdqu -0x90(%rbp),%xmm3
jmp    43ec2 <PixarLogMakeTables+0x3b2>
cvttsd2si %xmm0,%rcx
jmp    43e32 <PixarLogMakeTables+0x322>
cvttsd2si %xmm0,%rcx
jmp    43e53 <PixarLogMakeTables+0x343>
lea    0x1(%rax),%edi
movslq %edi,%rsi
movss  (%r14,%rsi,4),%xmm0
movslq %eax,%rsi
mulss  (%r14,%rsi,4),%xmm0
cvtss2sd %xmm0,%xmm2
cvtsi2sd %ecx,%xmm0
mulsd  %xmm3,%xmm0
mulsd  %xmm0,%xmm0
ucomisd %xmm0,%xmm2
jp     43eb7 <PixarLogMakeTables+0x3a7>
jae    43eb7 <PixarLogMakeTables+0x3a7>
mov    %rdi,%rax
movslq %ecx,%rsi
mov    %ax,(%r9,%rsi,2)
add    $0x1,%ecx
cmp    %ecx,%edx
jg     43e87 <PixarLogMakeTables+0x377>
movsd  0x2f5fa(%rip),%xmm2        # 734c8 <module.47+0x5a>
mov    -0x48(%rbp),%r8
mov    %rbx,%rax
mov    %rax,%rcx
jmp    43f09 <PixarLogMakeTables+0x3f9>
mov    %rdi,%rax
lea    0x1(%rax),%edi
movslq %edi,%rsi
movss  (%r14,%rsi,4),%xmm0
movslq %eax,%rsi
mulss  (%r14,%rsi,4),%xmm0
cvtss2sd %xmm0,%xmm0
ucomisd %xmm3,%xmm0
jp     43efe <PixarLogMakeTables+0x3ee>
jb     43eda <PixarLogMakeTables+0x3ca>
movslq %ecx,%rsi
mov    %ax,(%r8,%rsi,2)
add    $0x1,%ecx
cmp    $0x3fff,%ecx
jle    43f16 <PixarLogMakeTables+0x406>
mov    %rbx,%rax
jmp    43f56 <PixarLogMakeTables+0x446>
cvtsi2sd %ecx,%xmm3
divsd  %xmm2,%xmm3
mulsd  %xmm3,%xmm3
jmp    43edd <PixarLogMakeTables+0x3cd>
mov    %rsi,%rbx
lea    0x1(%rbx),%esi
movslq %esi,%rcx
movss  (%r14,%rcx,4),%xmm0
movslq %ebx,%rcx
mulss  (%r14,%rcx,4),%xmm0
cvtss2sd %xmm0,%xmm0
ucomisd %xmm2,%xmm0
jp     43f48 <PixarLogMakeTables+0x438>
jb     43f24 <PixarLogMakeTables+0x414>
movslq %eax,%rcx
mov    -0x40(%rbp),%rsi
mov    %bx,(%rsi,%rcx,2)
add    $0x1,%eax
cmp    $0xff,%eax
jle    43fc3 <PixarLogMakeTables+0x4b3>
shr    $0x1f,%edx
mov    -0x8(%rbp),%rax
lea    0x1(%rax,%rdx,1),%eax
sar    %eax
cvtsi2ss %eax,%xmm0
movss  %xmm0,0x36ad6(%rip)        # 7aa4c <Fltsize>
mov    -0x10(%rbp),%rax
mov    %r14,0x120(%rax)
mov    %r13,0x128(%rax)
mov    %r10,0x130(%rax)
mov    %r9,0x138(%rax)
mov    %r8,0x140(%rax)
mov    -0x40(%rbp),%rcx
mov    %rcx,0x148(%rax)
mov    $0x1,%eax
mov    -0x18(%rbp),%rbx
mov    -0x20(%rbp),%r12
mov    -0x28(%rbp),%r13
mov    -0x30(%rbp),%r14
mov    -0x38(%rbp),%r15
leaveq 
retq   
cvtsi2sd %eax,%xmm2
divsd  %xmm1,%xmm2
mulsd  %xmm2,%xmm2
jmpq   43f27 <PixarLogMakeTables+0x417>
data16 nopw %cs:0x0(%rax,%rax,1)
nop

0000000000043fe0 <PixarLogEncode>:
push   %rbp
mov    %rsp,%rbp
sub    $0x40,%rsp
lea    0x2f173(%rip),%r11        # 73162 <module.16>
lea    0x2f17b(%rip),%r9        # 73171 <module.16+0xf>
xor    %r10d,%r10d
mov    0x350(%rdi),%rcx
mov    %rcx,-0x40(%rbp)
mov    0x108(%rcx),%eax
cmp    $0x5,%eax
ja     4401f <PixarLogEncode+0x3f>
lea    0x2efea(%rip),%r8        # 73000 <module.8+0x8f>
movslq (%r8,%rax,4),%rax
add    %r8,%rax
jmpq   *%rax
xor    %eax,%eax
mov    0x3b8(%rdi),%rdx
movzwl 0x74(%rdi),%ecx
mov    %r11,%rsi
mov    %rdx,%rdi
mov    %r9,%rdx
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
shr    $0x2,%rdx
movzwl 0x100(%rcx),%eax
imul   0x58(%rdi),%eax
mov    %rax,-0x38(%rbp)
mov    %rax,%r8
imul   0x84(%rdi),%r8d
mov    %r8d,%r8d
cmp    %rdx,%r8
jl     4409f <PixarLogEncode+0xbf>
mov    0xf8(%rcx),%r8
movslq %eax,%r9
mov    %rdi,-0x30(%rbp)
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rdx,%rbx
mov    %r10,%r12
mov    %rsi,%r13
mov    %rax,%rsi
mov    %r8,%r14
mov    %r9,%r15
jmp    440ea <PixarLogEncode+0x10a>
shr    %rdx
jmp    44042 <PixarLogEncode+0x62>
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
mov    %r11,%rsi
lea    0x2f0e6(%rip),%rdx        # 73198 <module.16+0x36>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
test   %eax,%eax
jne    44128 <PixarLogEncode+0x148>
movzwl 0x100(%rcx),%edx
mov    0x148(%rcx),%r8
mov    %r13,%rdi
mov    %r14,%rcx
callq  463c0 <horizontalDifference8>
add    %r15,%r13
add    %r15,%r12
lea    (%r14,%r15,2),%r14
mov    -0x38(%rbp),%rsi
mov    -0x40(%rbp),%rcx
cmp    %r12,%rbx
jg     44164 <PixarLogEncode+0x184>
mov    0xf8(%rcx),%rax
mov    %rax,0x80(%rcx)
lea    (%rbx,%rbx,1),%eax
mov    %eax,0x88(%rcx)
mov    %ebx,%edx
mov    %eax,%eax
shr    %rax
cmp    %rax,%rdx
jne    441a5 <PixarLogEncode+0x1c5>
lea    0x80(%rcx),%r12
xor    %ebx,%ebx
mov    -0x30(%rbp),%r13
jmpq   44220 <PixarLogEncode+0x240>
xor    %eax,%eax
mov    -0x30(%rbp),%rcx
mov    0x3b8(%rcx),%rdi
movzwl 0x74(%rcx),%ecx
lea    0x2f022(%rip),%rsi        # 73162 <module.16>
lea    0x2f02a(%rip),%rdx        # 73171 <module.16+0xf>
callq  8a00 <TIFFErrorExt@plt>
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
xor    %eax,%eax
leaveq 
retq   
movslq 0x108(%rcx),%rax
cmp    $0x3,%eax
jle    440bb <PixarLogEncode+0xdb>
cmp    $0x4,%eax
je     4427e <PixarLogEncode+0x29e>
cmp    $0x5,%eax
jne    44128 <PixarLogEncode+0x148>
movzwl 0x100(%rcx),%edx
mov    0x138(%rcx),%r8
mov    %r13,%rdi
mov    %r14,%rcx
callq  44db0 <horizontalDifferenceF>
lea    0x0(%r13,%r15,4),%r13
jmpq   440db <PixarLogEncode+0xfb>
xor    %eax,%eax
mov    -0x30(%rbp),%rcx
mov    0x3b8(%rcx),%rdi
lea    0x2effd(%rip),%rdx        # 731b6 <module.16+0x54>
lea    0x2efa2(%rip),%rsi        # 73162 <module.16>
callq  8a00 <TIFFErrorExt@plt>
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
xor    %eax,%eax
leaveq 
retq   
mov    0x370(%r13),%rax
mov    %rax,0x390(%r13)
mov    %r13,%rdi
callq  86e0 <TIFFFlushData1@plt>
mov    0x368(%r13),%rax
mov    %rax,0x98(%r14)
mov    0x370(%r13),%eax
mov    %eax,0xa0(%r14)
mov    %r14,%rcx
mov    0x88(%rcx),%eax
test   %eax,%eax
je     442a1 <PixarLogEncode+0x2c1>
mov    %rcx,%r14
mov    %r12,%rdi
mov    %rbx,%rsi
callq  84e0 <deflate@plt>
test   %eax,%eax
je     442bc <PixarLogEncode+0x2dc>
mov    0x3b8(%r13),%rdi
mov    0xb0(%r14),%rcx
test   %rcx,%rcx
jne    44250 <PixarLogEncode+0x270>
lea    0x2efa0(%rip),%rcx        # 731f0 <module.16+0x8e>
xor    %eax,%eax
lea    0x2ef85(%rip),%rdx        # 731de <module.16+0x7c>
lea    0x2ef02(%rip),%rsi        # 73162 <module.16>
callq  8a00 <TIFFErrorExt@plt>
mov    %rbx,%rax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
movzwl 0x100(%rcx),%edx
mov    0x140(%rcx),%r8
mov    %r13,%rdi
mov    %r14,%rcx
callq  46150 <horizontalDifference16>
lea    0x0(%r13,%r15,2),%r13
jmpq   440db <PixarLogEncode+0xfb>
mov    $0x1,%eax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
mov    0xa0(%r14),%eax
test   %eax,%eax
je     441dd <PixarLogEncode+0x1fd>
mov    %r14,%rcx
jmpq   44212 <PixarLogEncode+0x232>
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

00000000000442e0 <PixarLogDecode>:
push   %rbp
mov    %rsp,%rbp
sub    $0x50,%rsp
lea    0x2ef08(%rip),%r11        # 731f7 <module.22>
mov    0x350(%rdi),%r10
mov    0x108(%r10),%eax
cmp    $0x5,%eax
ja     44312 <PixarLogDecode+0x32>
lea    0x2ed0f(%rip),%rcx        # 73018 <module.8+0xa7>
movslq (%rcx,%rax,4),%rax
add    %rcx,%rax
jmpq   *%rax
xor    %eax,%eax
mov    0x3b8(%rdi),%rsi
lea    0x2ee4f(%rip),%rdx        # 73171 <module.16+0xf>
movzwl 0x74(%rdi),%ecx
mov    %rsi,%rdi
mov    %r11,%rsi
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
shr    $0x2,%rdx
movzwl 0x100(%r10),%eax
movslq 0x58(%rdi),%rcx
test   %r10,%r10
jne    4436e <PixarLogDecode+0x8e>
lea    0x2eeb5(%rip),%rdi        # 73206 <module.22+0xf>
lea    0x2ed9c(%rip),%rsi        # 730f4 <module.10+0x30>
mov    $0x317,%edx
lea    0x2eead(%rip),%rcx        # 73211 <module.22+0x1a>
callq  8490 <__assert_fail@plt>
shr    %rdx
jmp    44339 <PixarLogDecode+0x59>
mov    0x388(%rdi),%r8
mov    %r8,0x80(%r10)
mov    0x390(%rdi),%r8d
mov    %r8d,0x88(%r10)
mov    0xf8(%r10),%r8
mov    %r8,0x98(%r10)
lea    (%rdx,%rdx,1),%r9
mov    %r9d,0xa0(%r10)
mov    %rsi,-0x30(%rbp)
mov    %r9d,%esi
cmp    %r9,%rsi
jne    44402 <PixarLogDecode+0x122>
mov    0xf0(%r10),%r8
mov    %r9d,%esi
cmp    %rsi,%r8
jl     4441e <PixarLogDecode+0x13e>
lea    0x80(%r10),%r8
mov    $0x1,%esi
mov    %rdx,-0x48(%rbp)
lea    0x2ee1b(%rip),%rdx        # 731f0 <module.16+0x8e>
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rcx,-0x38(%rbp)
mov    %rax,-0x40(%rbp)
mov    %r11,%rbx
mov    %r10,%r12
mov    %rdi,%r13
mov    %r8,%r14
mov    %rdx,%r15
jmp    44452 <PixarLogDecode+0x172>
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
mov    %r11,%rsi
lea    0x2eda1(%rip),%rdx        # 731b6 <module.16+0x54>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
mov    %r11,%rsi
lea    0x2edef(%rip),%rdx        # 73220 <module.22+0x29>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
lea    0x2edb6(%rip),%rbx        # 731f7 <module.22>
mov    0xa0(%r12),%eax
test   %eax,%eax
je     444af <PixarLogDecode+0x1cf>
mov    $0x1,%esi
mov    %r14,%rdi
callq  8170 <inflate@plt>
cmp    $0x1,%eax
je     444af <PixarLogDecode+0x1cf>
cmp    $0xfffffffd,%eax
je     444fb <PixarLogDecode+0x21b>
test   %eax,%eax
je     44441 <PixarLogDecode+0x161>
mov    0x3b8(%r13),%rdi
mov    0xb0(%r12),%rax
test   %rax,%rax
je     44483 <PixarLogDecode+0x1a3>
mov    %rax,%r15
mov    %r15,%rcx
mov    %rbx,%rsi
xor    %eax,%eax
lea    0x2edd6(%rip),%rdx        # 73268 <module.22+0x71>
callq  8a00 <TIFFErrorExt@plt>
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
xor    %eax,%eax
leaveq 
retq   
mov    0xa0(%r12),%r8d
test   %r8d,%r8d
jne    44552 <PixarLogDecode+0x272>
mov    (%r14),%rax
mov    %rax,0x388(%r13)
mov    0x88(%r12),%eax
mov    %rax,0x390(%r13)
mov    0xf8(%r12),%r15
mov    0x10(%r13),%eax
and    $0x80,%eax
test   %eax,%eax
jne    44589 <PixarLogDecode+0x2a9>
mov    -0x48(%rbp),%rax
jmpq   4459b <PixarLogDecode+0x2bb>
mov    0x3b8(%r13),%rdi
mov    0x27c(%r13),%ecx
mov    0xb0(%r12),%r8
test   %r8,%r8
jne    44519 <PixarLogDecode+0x239>
mov    %r15,%r8
mov    %rbx,%rsi
xor    %eax,%eax
lea    0x2ed20(%rip),%rdx        # 73245 <module.22+0x4e>
callq  8a00 <TIFFErrorExt@plt>
mov    %r14,%rdi
callq  8cd0 <inflateSync@plt>
test   %eax,%eax
je     4443a <PixarLogDecode+0x15a>
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
xor    %eax,%eax
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%r13),%rdi
lea    0x2ed15(%rip),%rdx        # 73277 <module.22+0x80>
mov    0x27c(%r13),%ecx
mov    %rbx,%rsi
callq  8a00 <TIFFErrorExt@plt>
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
xor    %eax,%eax
leaveq 
retq   
mov    %r15,%rdi
mov    -0x48(%rbp),%r14
mov    %r14,%rsi
callq  83d0 <TIFFSwabArrayOfShort@plt>
mov    %r14,%rax
mov    -0x40(%rbp),%rcx
mov    -0x38(%rbp),%rsi
imul   %ecx,%esi
mov    %rsi,-0x40(%rbp)
movslq %esi,%r9
cqto   
mov    %rax,%r14
idiv   %r9
test   %rdx,%rdx
jne    445ca <PixarLogDecode+0x2ea>
mov    %r13,-0x38(%rbp)
mov    %r9,%rbx
xor    %r13d,%r13d
mov    -0x30(%rbp),%rax
jmp    44642 <PixarLogDecode+0x362>
xor    %eax,%eax
mov    0x3b8(%r13),%rdi
lea    0x2eccf(%rip),%rdx        # 732a9 <module.22+0xb2>
movslq %esi,%rcx
mov    %r14,%r8
mov    %r13,-0x38(%rbp)
mov    %rsi,%r13
mov    %rbx,%rsi
mov    %r9,%rbx
callq  85a0 <TIFFWarningExt@plt>
mov    %r14,%rax
mov    %r13,%rsi
cqto   
mov    %rax,%r14
idiv   %rbx
sub    %rdx,%r14
xor    %r13d,%r13d
mov    -0x30(%rbp),%rax
jmp    44642 <PixarLogDecode+0x362>
movzwl 0x100(%r12),%edx
mov    0x120(%r12),%r8
mov    %r15,%rdi
mov    %rax,%rcx
mov    %r12,-0x48(%rbp)
mov    %rax,%r12
callq  42c10 <horizontalAccumulateF>
lea    (%r12,%rbx,4),%rax
add    %rbx,%r13
lea    (%r15,%rbx,2),%r15
mov    -0x40(%rbp),%rsi
mov    -0x48(%rbp),%r12
cmp    %r13,%r14
jg     44662 <PixarLogDecode+0x382>
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    $0x1,%eax
leaveq 
retq   
mov    0x108(%r12),%ecx
cmp    $0x5,%ecx
ja     446a8 <PixarLogDecode+0x3c8>
lea    0x2e9ba(%rip),%rdx        # 73030 <module.8+0xbf>
movslq (%rdx,%rcx,4),%rcx
add    %rdx,%rcx
jmpq   *%rcx
movzwl 0x100(%r12),%edx
mov    0x130(%r12),%r8
mov    %r15,%rdi
mov    %rax,%rcx
mov    %r12,-0x48(%rbp)
mov    %rax,%r12
callq  438a0 <horizontalAccumulate8abgr>
lea    (%r12,%rbx,1),%rax
jmp    44633 <PixarLogDecode+0x353>
xor    %eax,%eax
mov    -0x38(%rbp),%rcx
mov    0x3b8(%rcx),%rdi
lea    0x2ec30(%rip),%rdx        # 732ec <module.22+0xf5>
movzwl 0x74(%rcx),%ecx
lea    0x2eb30(%rip),%rsi        # 731f7 <module.22>
callq  8a00 <TIFFErrorExt@plt>
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
xor    %eax,%eax
leaveq 
retq   
movzwl 0x100(%r12),%edx
mov    0x128(%r12),%r8
mov    %r15,%rdi
mov    %rax,%rcx
mov    %r12,-0x48(%rbp)
mov    %rax,%r12
callq  43270 <horizontalAccumulate16>
lea    (%r12,%rbx,2),%rax
jmpq   44633 <PixarLogDecode+0x353>
movzwl 0x100(%r12),%edx
mov    0x120(%r12),%r8
mov    %r15,%rdi
mov    %rax,%rcx
mov    %r12,-0x48(%rbp)
mov    %rax,%r12
callq  42e80 <horizontalAccumulate12>
lea    (%r12,%rbx,2),%rax
jmpq   44633 <PixarLogDecode+0x353>
movzwl 0x100(%r12),%edx
mov    %r15,%rdi
mov    %rax,%rcx
mov    %r12,-0x48(%rbp)
mov    %rax,%r12
callq  434c0 <horizontalAccumulate11>
lea    (%r12,%rbx,2),%rax
jmpq   44633 <PixarLogDecode+0x353>
movzwl 0x100(%r12),%edx
mov    0x130(%r12),%r8
mov    %r15,%rdi
mov    %rax,%rcx
mov    %r12,-0x48(%rbp)
mov    %rax,%r12
callq  43660 <horizontalAccumulate8>
lea    (%r12,%rbx,1),%rax
jmpq   44633 <PixarLogDecode+0x353>
nopl   0x0(%rax)

0000000000044790 <PixarLogGuessDataFmt>:
push   %rbp
mov    %rsp,%rbp
movzwl 0x3e(%rdi),%esi
mov    $0xffffffffffffffff,%rax
movzwl 0x3c(%rdi),%ecx
add    $0xfffffff8,%ecx
cmp    $0x18,%ecx
jbe    447ad <PixarLogGuessDataFmt+0x1d>
leaveq 
retq   
lea    0x2e894(%rip),%rdx        # 73048 <module.8+0xd7>
movslq (%rdx,%rcx,4),%rcx
add    %rdx,%rcx
jmpq   *%rcx
leaveq 
retq   
cmp    $0x3,%si
jne    44809 <PixarLogGuessDataFmt+0x79>
mov    $0x5,%eax
leaveq 
retq   
mov    $0x4,%ecx
cmp    $0x4,%si
jne    4480b <PixarLogGuessDataFmt+0x7b>
mov    %rcx,%rax
leaveq 
retq   
mov    $0x3,%ecx
cmp    $0x4,%si
jne    44816 <PixarLogGuessDataFmt+0x86>
mov    %rcx,%rax
leaveq 
retq   
mov    $0x2,%ecx
cmp    $0x4,%si
jne    44821 <PixarLogGuessDataFmt+0x91>
mov    %rcx,%rax
leaveq 
retq   
xor    %ecx,%ecx
cmp    $0x4,%si
jne    4482c <PixarLogGuessDataFmt+0x9c>
mov    %rcx,%rax
leaveq 
retq   
leaveq 
retq   
cmp    $0x1,%si
jne    44837 <PixarLogGuessDataFmt+0xa7>
mov    %rcx,%rax
leaveq 
retq   
cmp    $0x2,%si
jne    44839 <PixarLogGuessDataFmt+0xa9>
mov    %rcx,%rax
leaveq 
retq   
cmp    $0x1,%si
jne    4483b <PixarLogGuessDataFmt+0xab>
mov    %rcx,%rax
leaveq 
retq   
cmp    $0x1,%si
jne    4483d <PixarLogGuessDataFmt+0xad>
mov    %rcx,%rax
leaveq 
retq   
leaveq 
retq   
leaveq 
retq   
leaveq 
retq   
leaveq 
retq   
nop

0000000000044840 <multiply_ms>:
push   %rbp
mov    %rsp,%rbp
xor    %ecx,%ecx
test   %rdi,%rdi
jne    44850 <multiply_ms+0x10>
mov    %rcx,%rax
leaveq 
retq   
movabs $0x7fffffffffffffff,%rax
cqto   
idiv   %rdi
cmp    %rsi,%rax
jge    44869 <multiply_ms+0x29>
mov    %rcx,%rax
leaveq 
retq   
imul   %rsi,%rdi
mov    %rdi,%rax
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   (%rax)

0000000000044880 <add_ms>:
push   %rbp
mov    %rsp,%rbp
xor    %eax,%eax
test   %rdi,%rdi
jne    4488d <add_ms+0xd>
leaveq 
retq   
test   %rsi,%rsi
jne    44894 <add_ms+0x14>
leaveq 
retq   
movabs $0x7fffffffffffffff,%rcx
xor    %rsi,%rcx
cmp    %rcx,%rdi
jle    448a8 <add_ms+0x28>
leaveq 
retq   
lea    (%rdi,%rsi,1),%rax
leaveq 
retq   
xchg   %ax,%ax

00000000000448b0 <PixarLogFixupTags>:
push   %rbp
mov    %rsp,%rbp
mov    $0x1,%eax
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

00000000000448c0 <PixarLogSetupDecode>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    0x350(%rdi),%r8
test   %r8,%r8
jne    448f3 <PixarLogSetupDecode+0x33>
lea    0x2e92b(%rip),%rdi        # 73206 <module.22+0xf>
lea    0x2e812(%rip),%rsi        # 730f4 <module.10+0x30>
mov    $0x2a6,%edx
lea    0x2ea2e(%rip),%rcx        # 7331c <module.31+0x14>
callq  8490 <__assert_fail@plt>
mov    $0x1,%eax
movslq 0x104(%r8),%rcx
and    $0x1,%ecx
test   %ecx,%ecx
jle    44908 <PixarLogSetupDecode+0x48>
leaveq 
retq   
mov    0x5c(%rdi),%edx
mov    0x84(%rdi),%ecx
cmp    %ecx,%edx
jae    44918 <PixarLogSetupDecode+0x58>
mov    %rdx,%rcx
mov    0x35629(%rip),%rdx        # 79f48 <_TIFFNoPostDecode@@Base+0x2f598>
mov    %rdx,0x3e8(%rdi)
movzwl 0xaa(%rdi),%edx
cmp    $0x1,%dx
jne    4493a <PixarLogSetupDecode+0x7a>
movzwl 0x82(%rdi),%eax
mov    %ax,0x100(%r8)
movzwl %ax,%eax
mov    0x58(%rdi),%esi
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rdi,-0x18(%rbp)
mov    %rax,%rdi
mov    %r8,%r14
mov    %rcx,%r15
callq  44840 <multiply_ms>
mov    %r15d,%esi
mov    %rax,%rdi
callq  44840 <multiply_ms>
mov    %rax,%rdi
mov    $0x2,%esi
callq  44840 <multiply_ms>
xor    %r15d,%r15d
movzwl 0x100(%r14),%ecx
lea    (%rcx,%rcx,1),%rsi
mov    %rax,%rdi
callq  44880 <add_ms>
test   %rax,%rax
jne    449a3 <PixarLogSetupDecode+0xe3>
mov    %r15,%rax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
mov    %rax,%r15
mov    %r15,%rdi
callq  8440 <_TIFFmalloc@plt>
mov    %rax,0xf8(%r14)
test   %rax,%rax
jne    449c6 <PixarLogSetupDecode+0x106>
xor    %eax,%eax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
mov    %r15,0xf0(%r14)
movslq 0x108(%r14),%rax
cmp    $0xffffffff,%eax
je     449df <PixarLogSetupDecode+0x11f>
mov    -0x18(%rbp),%r15
jmp    449f3 <PixarLogSetupDecode+0x133>
mov    -0x18(%rbp),%r15
lea    0x38(%r15),%rdi
callq  44790 <PixarLogGuessDataFmt>
mov    %eax,0x108(%r14)
movslq 0x108(%r14),%rax
cmp    $0xffffffff,%eax
je     44a3b <PixarLogSetupDecode+0x17b>
lea    0x80(%r14),%rdi
lea    0x2e974(%rip),%rsi        # 73381 <module.31+0x79>
mov    $0x70,%edx
callq  8a20 <inflateInit_@plt>
test   %eax,%eax
jne    44a8a <PixarLogSetupDecode+0x1ca>
movslq 0x104(%r14),%rax
or     $0x1,%eax
mov    %eax,0x104(%r14)
mov    $0x1,%eax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
mov    0xf8(%r14),%rdi
callq  8bb0 <_TIFFfree@plt>
movq   $0x0,0xf8(%r14)
movq   $0x0,0xf0(%r14)
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
lea    0x2e8c3(%rip),%rdx        # 73330 <module.31+0x28>
movzwl 0x74(%r15),%ecx
lea    0x2e88f(%rip),%rsi        # 73308 <module.31>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
mov    0xf8(%r14),%rdi
callq  8bb0 <_TIFFfree@plt>
movq   $0x0,0xf8(%r14)
movq   $0x0,0xf0(%r14)
mov    0x3b8(%r15),%rdi
mov    0xb0(%r14),%rcx
test   %rcx,%rcx
jne    44ac6 <PixarLogSetupDecode+0x206>
lea    0x2e72a(%rip),%rcx        # 731f0 <module.16+0x8e>
xor    %eax,%eax
lea    0x2e8b9(%rip),%rdx        # 73388 <module.31+0x80>
lea    0x2e832(%rip),%rsi        # 73308 <module.31>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

0000000000044af0 <PixarLogPreDecode>:
push   %rbp
mov    %rsp,%rbp
mov    0x350(%rdi),%rdx
test   %rdx,%rdx
jne    44b1f <PixarLogPreDecode+0x2f>
lea    0x2e6ff(%rip),%rdi        # 73206 <module.22+0xf>
lea    0x2e5e6(%rip),%rsi        # 730f4 <module.10+0x30>
mov    $0x2e6,%edx
lea    0x2e883(%rip),%rcx        # 7339d <module.36+0x12>
callq  8490 <__assert_fail@plt>
mov    0x368(%rdi),%rax
mov    %rax,0x80(%rdx)
mov    0x390(%rdi),%ecx
mov    %ecx,0x88(%rdx)
mov    0x390(%rdi),%rax
cmp    %rcx,%rax
jne    44b5c <PixarLogPreDecode+0x6c>
lea    0x80(%rdx),%rdi
callq  8bd0 <inflateReset@plt>
test   %eax,%eax
jne    44b7c <PixarLogPreDecode+0x8c>
mov    $0x1,%eax
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
lea    0x2e81f(%rip),%rsi        # 7338b <module.36>
lea    0x2e643(%rip),%rdx        # 731b6 <module.16+0x54>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
xor    %eax,%eax
leaveq 
retq   

0000000000044b80 <PixarLogSetupEncode>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    0x350(%rdi),%rdx
test   %rdx,%rdx
jne    44bb3 <PixarLogSetupEncode+0x33>
lea    0x2e66b(%rip),%rdi        # 73206 <module.22+0xf>
lea    0x2e552(%rip),%rsi        # 730f4 <module.10+0x30>
mov    $0x390,%edx
lea    0x2e815(%rip),%rcx        # 733c3 <module.38+0x14>
callq  8490 <__assert_fail@plt>
mov    $0x1,%eax
movzwl 0xaa(%rdi),%ecx
cmp    $0x1,%cx
jne    44bcc <PixarLogSetupEncode+0x4c>
movzwl 0x82(%rdi),%eax
mov    %ax,0x100(%rdx)
movzwl %ax,%eax
mov    0x58(%rdi),%esi
mov    %r15,-0x8(%rbp)
mov    %rdx,-0x10(%rbp)
mov    %rdi,%r15
mov    %rax,%rdi
callq  44840 <multiply_ms>
mov    %rax,%rdi
mov    0x84(%r15),%esi
callq  44840 <multiply_ms>
mov    %rax,%rdi
mov    $0x2,%esi
callq  44840 <multiply_ms>
test   %rax,%rax
jne    44c15 <PixarLogSetupEncode+0x95>
xor    %eax,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
mov    %rax,%rdi
callq  8440 <_TIFFmalloc@plt>
mov    -0x10(%rbp),%r8
mov    %rax,0xf8(%r8)
test   %rax,%rax
jne    44c35 <PixarLogSetupEncode+0xb5>
xor    %eax,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
movslq 0x108(%r8),%rax
cmp    $0xffffffff,%eax
jne    44c5f <PixarLogSetupEncode+0xdf>
lea    0x38(%r15),%rdi
mov    %r14,-0x10(%rbp)
mov    %r8,%r14
callq  44790 <PixarLogGuessDataFmt>
mov    %eax,0x108(%r14)
mov    %r14,%r8
mov    -0x10(%rbp),%r14
lea    0x2e749(%rip),%rsi        # 733af <module.38>
movslq 0x108(%r8),%rax
cmp    $0xffffffff,%eax
je     44cbc <PixarLogSetupEncode+0x13c>
lea    0x80(%r8),%rdi
movslq 0x10c(%r8),%rsi
lea    0x2e6fa(%rip),%rdx        # 73381 <module.31+0x79>
mov    $0x70,%ecx
mov    %r14,-0x10(%rbp)
mov    %r8,%r14
callq  8690 <deflateInit_@plt>
test   %eax,%eax
jne    44cde <PixarLogSetupEncode+0x15e>
movslq 0x104(%r14),%rax
or     $0x1,%eax
mov    %eax,0x104(%r14)
mov    -0x10(%rbp),%r14
mov    $0x1,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
lea    0x2e70b(%rip),%rdx        # 733d7 <module.38+0x28>
movzwl 0x74(%r15),%ecx
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
mov    0x3b8(%r15),%rdi
mov    0xb0(%r14),%rcx
test   %rcx,%rcx
jne    44cf8 <PixarLogSetupEncode+0x178>
lea    0x2e4f8(%rip),%rcx        # 731f0 <module.16+0x8e>
xor    %eax,%eax
lea    0x2e687(%rip),%rdx        # 73388 <module.31+0x80>
lea    0x2e6a7(%rip),%rsi        # 733af <module.38>
callq  8a00 <TIFFErrorExt@plt>
mov    -0x10(%rbp),%r14
xor    %eax,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
nopl   0x0(%rax)

0000000000044d20 <PixarLogPreEncode>:
push   %rbp
mov    %rsp,%rbp
mov    0x350(%rdi),%rdx
test   %rdx,%rdx
jne    44d4f <PixarLogPreEncode+0x2f>
lea    0x2e4cf(%rip),%rdi        # 73206 <module.22+0xf>
lea    0x2e3b6(%rip),%rsi        # 730f4 <module.10+0x30>
mov    $0x3b7,%edx
lea    0x2e6d9(%rip),%rcx        # 73423 <module.41+0x12>
callq  8490 <__assert_fail@plt>
mov    0x368(%rdi),%rax
mov    %rax,0x98(%rdx)
mov    0x370(%rdi),%ecx
mov    %ecx,0xa0(%rdx)
mov    0x370(%rdi),%rax
cmp    %rcx,%rax
jne    44d8c <PixarLogPreEncode+0x6c>
lea    0x80(%rdx),%rdi
callq  8460 <deflateReset@plt>
test   %eax,%eax
jne    44dac <PixarLogPreEncode+0x8c>
mov    $0x1,%eax
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
lea    0x2e675(%rip),%rsi        # 73411 <module.41>
lea    0x2e413(%rip),%rdx        # 731b6 <module.16+0x54>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
xor    %eax,%eax
leaveq 
retq   

0000000000044db0 <horizontalDifferenceF>:
push   %rbp
mov    %rsp,%rbp
sub    $0x1e0,%rsp
movss  0x35c89(%rip),%xmm5        # 7aa4c <Fltsize>
movdqu %xmm5,-0x1d0(%rbp)
cmp    %esi,%edx
jle    44dd1 <horizontalDifferenceF+0x21>
leaveq 
retq   
movsd  0x2e6f7(%rip),%xmm1        # 734d0 <module.47+0x62>
movss  0x2e6f7(%rip),%xmm3        # 734d8 <module.47+0x6a>
movss  0x2e6f3(%rip),%xmm2        # 734dc <module.47+0x6e>
xorpd  %xmm4,%xmm4
cmp    $0x3,%edx
je     44e81 <horizontalDifferenceF+0xd1>
cmp    $0x4,%edx
je     44f09 <horizontalDifferenceF+0x159>
mov    %rdx,-0x1e0(%rbp)
mov    %rsi,-0x1b0(%rbp)
mov    %r12,-0x170(%rbp)
mov    %r13,-0x178(%rbp)
mov    %r14,-0x180(%rbp)
mov    %r15,-0x188(%rbp)
mov    %rdx,%r12
movss  (%rdi),%xmm0
ucomiss %xmm4,%xmm0
jp     44fc1 <horizontalDifferenceF+0x211>
jae    44fc1 <horizontalDifferenceF+0x211>
movapd %xmm4,%xmm0
cvttsd2si %xmm0,%rax
mov    %ax,(%rcx)
add    $0x2,%rcx
add    $0x4,%rdi
add    $0xffffffff,%r12d
test   %r12d,%r12d
jg     44e2c <horizontalDifferenceF+0x7c>
mov    -0x1e0(%rbp),%r12
mov    %r12,%rax
neg    %eax
movslq %eax,%r13
mov    -0x1b0(%rbp),%rax
sub    %r12d,%eax
mov    %rbx,-0x160(%rbp)
jmpq   45048 <horizontalDifferenceF+0x298>
movss  (%rdi),%xmm0
ucomiss %xmm4,%xmm0
jp     45071 <horizontalDifferenceF+0x2c1>
jae    45071 <horizontalDifferenceF+0x2c1>
mov    %r12,%rdx
movapd %xmm4,%xmm0
cvttsd2si %xmm0,%r12
mov    %r12w,(%rcx)
movss  0x4(%rdi),%xmm0
ucomiss %xmm4,%xmm0
jp     45091 <horizontalDifferenceF+0x2e1>
jae    45091 <horizontalDifferenceF+0x2e1>
mov    %r13,%r9
movapd %xmm4,%xmm0
cvttsd2si %xmm0,%r13
mov    %r13w,0x2(%rcx)
movss  0x8(%rdi),%xmm0
ucomiss %xmm4,%xmm0
jp     450b1 <horizontalDifferenceF+0x301>
jae    450b1 <horizontalDifferenceF+0x301>
mov    %rbx,%r10
movapd %xmm4,%xmm0
cvttsd2si %xmm0,%rax
mov    %ax,0x4(%rcx)
lea    -0x3(%rsi),%ebx
mov    %r10,-0x8(%rbp)
mov    %rdx,-0x10(%rbp)
mov    %r9,-0x20(%rbp)
mov    %r14,-0x30(%rbp)
mov    %r15,-0x40(%rbp)
jmpq   45172 <horizontalDifferenceF+0x3c2>
movss  (%rdi),%xmm0
ucomiss %xmm4,%xmm0
jp     45190 <horizontalDifferenceF+0x3e0>
jae    45190 <horizontalDifferenceF+0x3e0>
mov    %rbx,%r9
movapd %xmm4,%xmm0
cvttsd2si %xmm0,%rbx
mov    %bx,(%rcx)
movss  0x4(%rdi),%xmm0
ucomiss %xmm4,%xmm0
jp     451b0 <horizontalDifferenceF+0x400>
jae    451b0 <horizontalDifferenceF+0x400>
mov    %r12,%r10
movapd %xmm4,%xmm0
cvttsd2si %xmm0,%r12
mov    %r12w,0x2(%rcx)
movss  0x8(%rdi),%xmm0
ucomiss %xmm4,%xmm0
jp     451d0 <horizontalDifferenceF+0x420>
jae    451d0 <horizontalDifferenceF+0x420>
mov    %r13,%r11
movapd %xmm4,%xmm0
cvttsd2si %xmm0,%r13
mov    %r13w,0x4(%rcx)
movss  0xc(%rdi),%xmm0
ucomiss %xmm4,%xmm0
jp     451f0 <horizontalDifferenceF+0x440>
jae    451f0 <horizontalDifferenceF+0x440>
movapd %xmm4,%xmm0
cvttsd2si %xmm0,%rdx
mov    %dx,0x6(%rcx)
lea    -0x4(%rsi),%eax
mov    %r9,-0xa0(%rbp)
mov    %r10,-0xb0(%rbp)
mov    %r11,-0xc0(%rbp)
mov    %r14,-0xd8(%rbp)
mov    %r15,-0xe8(%rbp)
jmpq   452e1 <horizontalDifferenceF+0x531>
ucomiss %xmm3,%xmm0
jp     44fcc <horizontalDifferenceF+0x21c>
jb     4530e <horizontalDifferenceF+0x55e>
ucomiss %xmm2,%xmm0
jbe    45328 <horizontalDifferenceF+0x578>
movapd %xmm1,%xmm0
jmpq   44e43 <horizontalDifferenceF+0x93>
mov    %rax,-0x1c0(%rbp)
movss  (%rdi),%xmm0
ucomiss %xmm4,%xmm0
jp     453a0 <horizontalDifferenceF+0x5f0>
jae    453a0 <horizontalDifferenceF+0x5f0>
movapd %xmm4,%xmm0
movss  (%rdi,%r13,4),%xmm6
ucomiss %xmm4,%xmm6
jp     453bd <horizontalDifferenceF+0x60d>
jae    453bd <horizontalDifferenceF+0x60d>
movapd %xmm4,%xmm6
cvttsd2si %xmm6,%edx
cvttsd2si %xmm0,%eax
sub    %edx,%eax
and    $0x7ff,%ax
mov    %ax,(%rcx)
add    $0x2,%rcx
add    $0x4,%rdi
add    $0xffffffff,%r12d
test   %r12d,%r12d
jg     44fe5 <horizontalDifferenceF+0x235>
mov    -0x1c0(%rbp),%rax
mov    -0x1e0(%rbp),%r12
sub    %r12d,%eax
test   %eax,%eax
jg     44fde <horizontalDifferenceF+0x22e>
mov    -0x188(%rbp),%r15
mov    -0x180(%rbp),%r14
mov    -0x178(%rbp),%r13
mov    -0x170(%rbp),%r12
mov    -0x160(%rbp),%rbx
leaveq 
retq   
ucomiss %xmm3,%xmm0
jp     4507c <horizontalDifferenceF+0x2cc>
jb     453da <horizontalDifferenceF+0x62a>
ucomiss %xmm2,%xmm0
jbe    453f7 <horizontalDifferenceF+0x647>
mov    %r12,%rdx
movapd %xmm1,%xmm0
jmpq   44e9b <horizontalDifferenceF+0xeb>
ucomiss %xmm3,%xmm0
jp     4509c <horizontalDifferenceF+0x2ec>
jb     45495 <horizontalDifferenceF+0x6e5>
ucomiss %xmm2,%xmm0
jbe    454b2 <horizontalDifferenceF+0x702>
mov    %r13,%r9
movapd %xmm1,%xmm0
jmpq   44ebf <horizontalDifferenceF+0x10f>
ucomiss %xmm3,%xmm0
jp     450bc <horizontalDifferenceF+0x30c>
jb     45558 <horizontalDifferenceF+0x7a8>
ucomiss %xmm2,%xmm0
jbe    45575 <horizontalDifferenceF+0x7c5>
mov    %rbx,%r10
movapd %xmm1,%xmm0
jmpq   44ee4 <horizontalDifferenceF+0x134>
lea    0xc(%rdi),%rsi
movss  (%rsi),%xmm0
ucomiss %xmm4,%xmm0
jp     4561d <horizontalDifferenceF+0x86d>
jae    4561d <horizontalDifferenceF+0x86d>
mov    %rax,%r14
mov    %rdi,%rax
mov    %rsi,%rdi
mov    %rcx,%r15
movapd %xmm4,%xmm0
cvttsd2si %xmm0,%esi
mov    %rsi,%rdx
sub    %r12w,%dx
and    $0x7ff,%dx
lea    0x6(%r15),%rcx
mov    %dx,(%rcx)
movss  0x10(%rax),%xmm0
ucomiss %xmm4,%xmm0
jp     45646 <horizontalDifferenceF+0x896>
jae    45646 <horizontalDifferenceF+0x896>
mov    %rsi,%r12
movapd %xmm4,%xmm0
cvttsd2si %xmm0,%esi
mov    %rsi,%rdx
sub    %r13w,%dx
and    $0x7ff,%dx
mov    %dx,0x8(%r15)
movss  0x14(%rax),%xmm0
ucomiss %xmm4,%xmm0
jp     45666 <horizontalDifferenceF+0x8b6>
jae    45666 <horizontalDifferenceF+0x8b6>
mov    %rsi,%r13
movapd %xmm4,%xmm0
cvttsd2si %xmm0,%eax
mov    %rax,%rdx
sub    %r14w,%dx
and    $0x7ff,%dx
mov    %dx,0xa(%r15)
add    $0xfffffffd,%ebx
test   %ebx,%ebx
jg     450d1 <horizontalDifferenceF+0x321>
mov    -0x40(%rbp),%r15
mov    -0x30(%rbp),%r14
mov    -0x20(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
ucomiss %xmm3,%xmm0
jp     4519b <horizontalDifferenceF+0x3eb>
jb     45686 <horizontalDifferenceF+0x8d6>
ucomiss %xmm2,%xmm0
jbe    456a3 <horizontalDifferenceF+0x8f3>
mov    %rbx,%r9
movapd %xmm1,%xmm0
jmpq   44f23 <horizontalDifferenceF+0x173>
ucomiss %xmm3,%xmm0
jp     451bb <horizontalDifferenceF+0x40b>
jb     4575c <horizontalDifferenceF+0x9ac>
ucomiss %xmm2,%xmm0
jbe    45779 <horizontalDifferenceF+0x9c9>
mov    %r12,%r10
movapd %xmm1,%xmm0
jmpq   44f46 <horizontalDifferenceF+0x196>
ucomiss %xmm3,%xmm0
jp     451db <horizontalDifferenceF+0x42b>
jb     4583d <horizontalDifferenceF+0xa8d>
ucomiss %xmm2,%xmm0
jbe    4585a <horizontalDifferenceF+0xaaa>
mov    %r13,%r11
movapd %xmm1,%xmm0
jmpq   44f6b <horizontalDifferenceF+0x1bb>
ucomiss %xmm3,%xmm0
jp     451fb <horizontalDifferenceF+0x44b>
jb     4592c <horizontalDifferenceF+0xb7c>
ucomiss %xmm2,%xmm0
jbe    45946 <horizontalDifferenceF+0xb96>
movapd %xmm1,%xmm0
jmpq   44f8d <horizontalDifferenceF+0x1dd>
lea    0x10(%rdi),%r9
movss  (%r9),%xmm0
ucomiss %xmm4,%xmm0
jp     45a20 <horizontalDifferenceF+0xc70>
jae    45a20 <horizontalDifferenceF+0xc70>
mov    %rcx,%r14
mov    %rdx,%r15
mov    %rdi,%rdx
mov    %r9,%rdi
movapd %xmm4,%xmm0
cvttsd2si %xmm0,%r9d
mov    %r9,%rsi
sub    %bx,%si
and    $0x7ff,%si
lea    0x8(%r14),%rcx
mov    %si,(%rcx)
movss  0x14(%rdx),%xmm0
ucomiss %xmm4,%xmm0
jp     45a49 <horizontalDifferenceF+0xc99>
jae    45a49 <horizontalDifferenceF+0xc99>
mov    %r9,%rbx
movapd %xmm4,%xmm0
cvttsd2si %xmm0,%r9d
mov    %r9,%rsi
sub    %r12w,%si
and    $0x7ff,%si
mov    %si,0xa(%r14)
movss  0x18(%rdx),%xmm0
ucomiss %xmm4,%xmm0
jp     45a69 <horizontalDifferenceF+0xcb9>
jae    45a69 <horizontalDifferenceF+0xcb9>
mov    %r9,%r12
movapd %xmm4,%xmm0
cvttsd2si %xmm0,%r9d
mov    %r9,%rsi
sub    %r13w,%si
and    $0x7ff,%si
mov    %si,0xc(%r14)
movss  0x1c(%rdx),%xmm0
ucomiss %xmm4,%xmm0
jp     45a89 <horizontalDifferenceF+0xcd9>
jae    45a89 <horizontalDifferenceF+0xcd9>
mov    %r9,%r13
movapd %xmm4,%xmm0
cvttsd2si %xmm0,%edx
mov    %rdx,%rsi
sub    %r15w,%si
and    $0x7ff,%si
mov    %si,0xe(%r14)
add    $0xfffffffc,%eax
test   %eax,%eax
jg     4520d <horizontalDifferenceF+0x45d>
mov    -0xe8(%rbp),%r15
mov    -0xd8(%rbp),%r14
mov    -0xc0(%rbp),%r13
mov    -0xb0(%rbp),%r12
mov    -0xa0(%rbp),%rbx
leaveq 
retq   
mulss  %xmm5,%xmm0
cvttss2si %xmm0,%eax
movzwl (%r8,%rax,2),%eax
movzwl %ax,%eax
cvtsi2sd %rax,%xmm0
jmpq   44e43 <horizontalDifferenceF+0x93>
mov    %rdi,%r13
mov    %r8,%r14
mov    %rcx,%r15
mulss  0x3571b(%rip),%xmm0        # 7aa54 <LogK2>
cvtss2sd %xmm0,%xmm0
movss  0x3570b(%rip),%xmm1        # 7aa50 <LogK1>
movdqu %xmm1,-0x1c0(%rbp)
callq  8570 <log@plt>
mov    %r15,%rcx
mov    %r13,%rdi
mov    %r14,%r8
movdqu -0x1c0(%rbp),%xmm1
cvtss2sd %xmm1,%xmm1
mulsd  %xmm1,%xmm0
movsd  0x2e145(%rip),%xmm1        # 734b8 <module.47+0x4a>
addsd  %xmm1,%xmm0
movsd  0x2e151(%rip),%xmm1        # 734d0 <module.47+0x62>
movss  0x2e155(%rip),%xmm2        # 734dc <module.47+0x6e>
movss  0x2e149(%rip),%xmm3        # 734d8 <module.47+0x6a>
xorpd  %xmm4,%xmm4
movdqu -0x1d0(%rbp),%xmm5
jmpq   44e43 <horizontalDifferenceF+0x93>
ucomiss %xmm3,%xmm0
jp     453ab <horizontalDifferenceF+0x5fb>
jb     45aa9 <horizontalDifferenceF+0xcf9>
ucomiss %xmm2,%xmm0
jbe    45ac3 <horizontalDifferenceF+0xd13>
movapd %xmm1,%xmm0
jmpq   44ffc <horizontalDifferenceF+0x24c>
ucomiss %xmm3,%xmm6
jp     453c8 <horizontalDifferenceF+0x618>
jb     45b3b <horizontalDifferenceF+0xd8b>
ucomiss %xmm2,%xmm6
jbe    45b55 <horizontalDifferenceF+0xda5>
movapd %xmm1,%xmm6
jmpq   45015 <horizontalDifferenceF+0x265>
mulss  %xmm5,%xmm0
cvttss2si %xmm0,%eax
movzwl (%r8,%rax,2),%eax
movzwl %ax,%eax
cvtsi2sd %rax,%xmm0
mov    %r12,%rdx
jmpq   44e9b <horizontalDifferenceF+0xeb>
mulss  0x35655(%rip),%xmm0        # 7aa54 <LogK2>
cvtss2sd %xmm0,%xmm0
movss  0x35645(%rip),%xmm1        # 7aa50 <LogK1>
movdqu %xmm1,-0x1e0(%rbp)
mov    %r12,-0x20(%rbp)
mov    %r13,-0x30(%rbp)
mov    %r14,-0x40(%rbp)
mov    %r15,-0x50(%rbp)
mov    %rcx,%r12
mov    %rdi,%r13
mov    %r8,%r14
mov    %rsi,%r15
callq  8570 <log@plt>
mov    %r12,%rcx
mov    %r15,%rsi
mov    %r13,%rdi
mov    %r14,%r8
movdqu -0x1e0(%rbp),%xmm1
cvtss2sd %xmm1,%xmm1
mulsd  %xmm1,%xmm0
movsd  0x2e060(%rip),%xmm1        # 734b8 <module.47+0x4a>
addsd  %xmm1,%xmm0
mov    -0x50(%rbp),%r15
mov    -0x40(%rbp),%r14
mov    -0x30(%rbp),%r13
mov    -0x20(%rbp),%rdx
movsd  0x2e05c(%rip),%xmm1        # 734d0 <module.47+0x62>
movss  0x2e060(%rip),%xmm2        # 734dc <module.47+0x6e>
movss  0x2e054(%rip),%xmm3        # 734d8 <module.47+0x6a>
xorpd  %xmm4,%xmm4
movdqu -0x1d0(%rbp),%xmm5
jmpq   44e9b <horizontalDifferenceF+0xeb>
mulss  %xmm5,%xmm0
cvttss2si %xmm0,%eax
movzwl (%r8,%rax,2),%eax
movzwl %ax,%eax
cvtsi2sd %rax,%xmm0
mov    %r13,%r9
jmpq   44ebf <horizontalDifferenceF+0x10f>
mulss  0x3559a(%rip),%xmm0        # 7aa54 <LogK2>
cvtss2sd %xmm0,%xmm0
movss  0x3558a(%rip),%xmm1        # 7aa50 <LogK1>
movdqu %xmm1,-0x1e0(%rbp)
mov    %rbx,-0x10(%rbp)
mov    %rdx,-0x18(%rbp)
mov    %r13,-0x28(%rbp)
mov    %r14,-0x38(%rbp)
mov    %r15,-0x48(%rbp)
mov    %rcx,%rbx
mov    %rdi,%r13
mov    %r8,%r14
mov    %rsi,%r15
callq  8570 <log@plt>
mov    %rbx,%rcx
mov    %r15,%rsi
mov    %r13,%rdi
mov    %r14,%r8
movdqu -0x1e0(%rbp),%xmm1
cvtss2sd %xmm1,%xmm1
mulsd  %xmm1,%xmm0
movsd  0x2dfa1(%rip),%xmm1        # 734b8 <module.47+0x4a>
addsd  %xmm1,%xmm0
mov    -0x48(%rbp),%r15
mov    -0x38(%rbp),%r14
mov    -0x28(%rbp),%r9
mov    -0x18(%rbp),%rdx
mov    -0x10(%rbp),%rbx
movsd  0x2df99(%rip),%xmm1        # 734d0 <module.47+0x62>
movss  0x2df9d(%rip),%xmm2        # 734dc <module.47+0x6e>
movss  0x2df91(%rip),%xmm3        # 734d8 <module.47+0x6a>
xorpd  %xmm4,%xmm4
movdqu -0x1d0(%rbp),%xmm5
jmpq   44ebf <horizontalDifferenceF+0x10f>
mulss  %xmm5,%xmm0
cvttss2si %xmm0,%eax
movzwl (%r8,%rax,2),%eax
movzwl %ax,%eax
cvtsi2sd %rax,%xmm0
mov    %rbx,%r10
jmpq   44ee4 <horizontalDifferenceF+0x134>
mulss  0x354d7(%rip),%xmm0        # 7aa54 <LogK2>
cvtss2sd %xmm0,%xmm0
movss  0x354c7(%rip),%xmm1        # 7aa50 <LogK1>
movdqu %xmm1,-0x60(%rbp)
mov    %rbx,-0x8(%rbp)
mov    %rdx,-0x18(%rbp)
mov    %r9,-0x28(%rbp)
mov    %r14,-0x38(%rbp)
mov    %r15,-0x48(%rbp)
mov    %r8,-0x1e0(%rbp)
mov    %rcx,%rbx
mov    %rdi,%r14
mov    %rsi,%r15
callq  8570 <log@plt>
mov    %rbx,%rcx
mov    %r15,%rsi
mov    %r14,%rdi
movdqu -0x60(%rbp),%xmm1
cvtss2sd %xmm1,%xmm1
mulsd  %xmm1,%xmm0
movsd  0x2dee3(%rip),%xmm1        # 734b8 <module.47+0x4a>
addsd  %xmm1,%xmm0
mov    -0x1e0(%rbp),%r8
mov    -0x48(%rbp),%r15
mov    -0x38(%rbp),%r14
mov    -0x28(%rbp),%r9
mov    -0x18(%rbp),%rdx
mov    -0x8(%rbp),%r10
movsd  0x2ded4(%rip),%xmm1        # 734d0 <module.47+0x62>
movss  0x2ded8(%rip),%xmm2        # 734dc <module.47+0x6e>
movss  0x2decc(%rip),%xmm3        # 734d8 <module.47+0x6a>
xorpd  %xmm4,%xmm4
movdqu -0x1d0(%rbp),%xmm5
jmpq   44ee4 <horizontalDifferenceF+0x134>
ucomiss %xmm3,%xmm0
jp     45628 <horizontalDifferenceF+0x878>
jb     45be5 <horizontalDifferenceF+0xe35>
ucomiss %xmm2,%xmm0
jbe    45c0b <horizontalDifferenceF+0xe5b>
mov    %rax,%r14
mov    %rdi,%rax
mov    %rsi,%rdi
mov    %rcx,%r15
movapd %xmm1,%xmm0
jmpq   450f8 <horizontalDifferenceF+0x348>
ucomiss %xmm3,%xmm0
jp     45651 <horizontalDifferenceF+0x8a1>
jb     45c9e <horizontalDifferenceF+0xeee>
ucomiss %xmm2,%xmm0
jbe    45cbb <horizontalDifferenceF+0xf0b>
mov    %rsi,%r12
movapd %xmm1,%xmm0
jmpq   4512a <horizontalDifferenceF+0x37a>
ucomiss %xmm3,%xmm0
jp     45671 <horizontalDifferenceF+0x8c1>
jb     45d59 <horizontalDifferenceF+0xfa9>
ucomiss %xmm2,%xmm0
jbe    45d76 <horizontalDifferenceF+0xfc6>
mov    %rsi,%r13
movapd %xmm1,%xmm0
jmpq   4515a <horizontalDifferenceF+0x3aa>
mulss  %xmm5,%xmm0
cvttss2si %xmm0,%eax
movzwl (%r8,%rax,2),%eax
movzwl %ax,%eax
cvtsi2sd %rax,%xmm0
mov    %rbx,%r9
jmpq   44f23 <horizontalDifferenceF+0x173>
mulss  0x353a9(%rip),%xmm0        # 7aa54 <LogK2>
cvtss2sd %xmm0,%xmm0
movss  0x35399(%rip),%xmm1        # 7aa50 <LogK1>
movdqu %xmm1,-0x1e0(%rbp)
mov    %r12,-0xc0(%rbp)
mov    %r13,-0xd0(%rbp)
mov    %r14,-0xe8(%rbp)
mov    %r15,-0xf8(%rbp)
mov    %rdi,%r12
mov    %r8,%r13
mov    %rcx,%r14
mov    %rsi,%r15
callq  8570 <log@plt>
mov    %r14,%rcx
mov    %r15,%rsi
mov    %r12,%rdi
mov    %r13,%r8
mov    %rbx,%r9
movdqu -0x1e0(%rbp),%xmm1
cvtss2sd %xmm1,%xmm1
mulsd  %xmm1,%xmm0
movsd  0x2dda5(%rip),%xmm1        # 734b8 <module.47+0x4a>
addsd  %xmm1,%xmm0
mov    -0xf8(%rbp),%r15
mov    -0xe8(%rbp),%r14
mov    -0xd0(%rbp),%r13
mov    -0xc0(%rbp),%r12
movsd  0x2dd95(%rip),%xmm1        # 734d0 <module.47+0x62>
movss  0x2dd99(%rip),%xmm2        # 734dc <module.47+0x6e>
movss  0x2dd8d(%rip),%xmm3        # 734d8 <module.47+0x6a>
xorpd  %xmm4,%xmm4
movdqu -0x1d0(%rbp),%xmm5
jmpq   44f23 <horizontalDifferenceF+0x173>
mulss  %xmm5,%xmm0
cvttss2si %xmm0,%eax
movzwl (%r8,%rax,2),%eax
movzwl %ax,%eax
cvtsi2sd %rax,%xmm0
mov    %r12,%r10
jmpq   44f46 <horizontalDifferenceF+0x196>
mulss  0x352d3(%rip),%xmm0        # 7aa54 <LogK2>
cvtss2sd %xmm0,%xmm0
movss  0x352c3(%rip),%xmm1        # 7aa50 <LogK1>
movdqu %xmm1,-0x1e0(%rbp)
mov    %r9,-0xa8(%rbp)
mov    %r12,-0xb8(%rbp)
mov    %r13,-0xd0(%rbp)
mov    %r14,-0xe0(%rbp)
mov    %r15,-0xf8(%rbp)
mov    %rcx,%r12
mov    %rdi,%r13
mov    %r8,%r14
mov    %rsi,%r15
callq  8570 <log@plt>
mov    %r12,%rcx
mov    %r15,%rsi
mov    %r13,%rdi
mov    %r14,%r8
movdqu -0x1e0(%rbp),%xmm1
cvtss2sd %xmm1,%xmm1
mulsd  %xmm1,%xmm0
movsd  0x2dccb(%rip),%xmm1        # 734b8 <module.47+0x4a>
addsd  %xmm1,%xmm0
mov    -0xf8(%rbp),%r15
mov    -0xe0(%rbp),%r14
mov    -0xd0(%rbp),%r13
mov    -0xb8(%rbp),%r10
mov    -0xa8(%rbp),%r9
movsd  0x2dcb4(%rip),%xmm1        # 734d0 <module.47+0x62>
movss  0x2dcb8(%rip),%xmm2        # 734dc <module.47+0x6e>
movss  0x2dcac(%rip),%xmm3        # 734d8 <module.47+0x6a>
xorpd  %xmm4,%xmm4
movdqu -0x1d0(%rbp),%xmm5
jmpq   44f46 <horizontalDifferenceF+0x196>
mulss  %xmm5,%xmm0
cvttss2si %xmm0,%eax
movzwl (%r8,%rax,2),%eax
movzwl %ax,%eax
cvtsi2sd %rax,%xmm0
mov    %r13,%r11
jmpq   44f6b <horizontalDifferenceF+0x1bb>
mulss  0x351f2(%rip),%xmm0        # 7aa54 <LogK2>
cvtss2sd %xmm0,%xmm0
movss  0x351e2(%rip),%xmm1        # 7aa50 <LogK1>
movdqu %xmm1,-0x1e0(%rbp)
mov    %r9,-0xa8(%rbp)
mov    %r10,-0xb8(%rbp)
mov    %r13,-0xc8(%rbp)
mov    %r14,-0xe0(%rbp)
mov    %r15,-0xf0(%rbp)
mov    %rbx,-0x158(%rbp)
mov    %rcx,%rbx
mov    %rdi,%r13
mov    %r8,%r14
mov    %rsi,%r15
callq  8570 <log@plt>
mov    %rbx,%rcx
mov    %r15,%rsi
mov    %r13,%rdi
mov    %r14,%r8
movdqu -0x1e0(%rbp),%xmm1
cvtss2sd %xmm1,%xmm1
mulsd  %xmm1,%xmm0
movsd  0x2dbe3(%rip),%xmm1        # 734b8 <module.47+0x4a>
addsd  %xmm1,%xmm0
mov    -0x158(%rbp),%rbx
mov    -0xf0(%rbp),%r15
mov    -0xe0(%rbp),%r14
mov    -0xc8(%rbp),%r11
mov    -0xb8(%rbp),%r10
mov    -0xa8(%rbp),%r9
movsd  0x2dbc5(%rip),%xmm1        # 734d0 <module.47+0x62>
movss  0x2dbc9(%rip),%xmm2        # 734dc <module.47+0x6e>
movss  0x2dbbd(%rip),%xmm3        # 734d8 <module.47+0x6a>
xorpd  %xmm4,%xmm4
movdqu -0x1d0(%rbp),%xmm5
jmpq   44f6b <horizontalDifferenceF+0x1bb>
mulss  %xmm5,%xmm0
cvttss2si %xmm0,%eax
movzwl (%r8,%rax,2),%eax
movzwl %ax,%eax
cvtsi2sd %rax,%xmm0
jmpq   44f8d <horizontalDifferenceF+0x1dd>
mulss  0x35106(%rip),%xmm0        # 7aa54 <LogK2>
cvtss2sd %xmm0,%xmm0
movss  0x350f6(%rip),%xmm1        # 7aa50 <LogK1>
movdqu %xmm1,-0x110(%rbp)
mov    %r9,-0xa0(%rbp)
mov    %r10,-0xb0(%rbp)
mov    %r11,-0xc8(%rbp)
mov    %r14,-0xd8(%rbp)
mov    %r15,-0xf0(%rbp)
mov    %rbx,-0x150(%rbp)
mov    %r8,-0x1e0(%rbp)
mov    %rcx,%rbx
mov    %rdi,%r14
mov    %rsi,%r15
callq  8570 <log@plt>
mov    %rbx,%rcx
mov    %r15,%rsi
mov    %r14,%rdi
movdqu -0x110(%rbp),%xmm1
cvtss2sd %xmm1,%xmm1
mulsd  %xmm1,%xmm0
movsd  0x2daf6(%rip),%xmm1        # 734b8 <module.47+0x4a>
addsd  %xmm1,%xmm0
mov    -0x1e0(%rbp),%r8
mov    -0x150(%rbp),%rbx
mov    -0xf0(%rbp),%r15
mov    -0xd8(%rbp),%r14
mov    -0xc8(%rbp),%r11
mov    -0xb0(%rbp),%r10
mov    -0xa0(%rbp),%r9
movsd  0x2dad1(%rip),%xmm1        # 734d0 <module.47+0x62>
movss  0x2dad5(%rip),%xmm2        # 734dc <module.47+0x6e>
movss  0x2dac9(%rip),%xmm3        # 734d8 <module.47+0x6a>
xorpd  %xmm4,%xmm4
movdqu -0x1d0(%rbp),%xmm5
jmpq   44f8d <horizontalDifferenceF+0x1dd>
ucomiss %xmm3,%xmm0
jp     45a2b <horizontalDifferenceF+0xc7b>
jb     45e00 <horizontalDifferenceF+0x1050>
ucomiss %xmm2,%xmm0
jbe    45e26 <horizontalDifferenceF+0x1076>
mov    %rcx,%r14
mov    %rdx,%r15
mov    %rdi,%rdx
mov    %r9,%rdi
movapd %xmm1,%xmm0
jmpq   45235 <horizontalDifferenceF+0x485>
ucomiss %xmm3,%xmm0
jp     45a54 <horizontalDifferenceF+0xca4>
jb     45ed3 <horizontalDifferenceF+0x1123>
ucomiss %xmm2,%xmm0
jbe    45ef0 <horizontalDifferenceF+0x1140>
mov    %r9,%rbx
movapd %xmm1,%xmm0
jmpq   45267 <horizontalDifferenceF+0x4b7>
ucomiss %xmm3,%xmm0
jp     45a74 <horizontalDifferenceF+0xcc4>
jb     45fa8 <horizontalDifferenceF+0x11f8>
ucomiss %xmm2,%xmm0
jbe    45fc5 <horizontalDifferenceF+0x1215>
mov    %r9,%r12
movapd %xmm1,%xmm0
jmpq   45298 <horizontalDifferenceF+0x4e8>
ucomiss %xmm3,%xmm0
jp     45a94 <horizontalDifferenceF+0xce4>
jb     4607d <horizontalDifferenceF+0x12cd>
ucomiss %xmm2,%xmm0
jbe    4609a <horizontalDifferenceF+0x12ea>
mov    %r9,%r13
movapd %xmm1,%xmm0
jmpq   452c9 <horizontalDifferenceF+0x519>
mulss  %xmm5,%xmm0
cvttss2si %xmm0,%eax
movzwl (%r8,%rax,2),%eax
movzwl %ax,%eax
cvtsi2sd %rax,%xmm0
jmpq   44ffc <horizontalDifferenceF+0x24c>
mov    %rdi,%rbx
mov    %r8,%r14
mov    %rcx,%r15
mulss  0x34f80(%rip),%xmm0        # 7aa54 <LogK2>
cvtss2sd %xmm0,%xmm0
movss  0x34f70(%rip),%xmm1        # 7aa50 <LogK1>
movdqu %xmm1,-0x1a0(%rbp)
callq  8570 <log@plt>
mov    %r15,%rcx
mov    %rbx,%rdi
mov    %r14,%r8
movdqu -0x1a0(%rbp),%xmm1
cvtss2sd %xmm1,%xmm1
mulsd  %xmm1,%xmm0
movsd  0x2d9aa(%rip),%xmm1        # 734b8 <module.47+0x4a>
addsd  %xmm1,%xmm0
movsd  0x2d9b6(%rip),%xmm1        # 734d0 <module.47+0x62>
movss  0x2d9ba(%rip),%xmm2        # 734dc <module.47+0x6e>
movss  0x2d9ae(%rip),%xmm3        # 734d8 <module.47+0x6a>
xorpd  %xmm4,%xmm4
movdqu -0x1d0(%rbp),%xmm5
jmpq   44ffc <horizontalDifferenceF+0x24c>
mulss  %xmm5,%xmm6
cvttss2si %xmm6,%eax
movzwl (%r8,%rax,2),%eax
movzwl %ax,%eax
cvtsi2sd %rax,%xmm6
jmpq   45015 <horizontalDifferenceF+0x265>
mov    %rdi,%rbx
mov    %r8,%r14
mov    %rcx,%r15
mulss  0x34eee(%rip),%xmm6        # 7aa54 <LogK2>
cvtss2sd %xmm6,%xmm2
movss  0x34ede(%rip),%xmm1        # 7aa50 <LogK1>
movdqu %xmm1,-0x1b0(%rbp)
movdqu %xmm0,-0x1a0(%rbp)
movapd %xmm2,%xmm0
callq  8570 <log@plt>
mov    %r15,%rcx
mov    %rbx,%rdi
mov    %r14,%r8
movdqu -0x1b0(%rbp),%xmm1
cvtss2sd %xmm1,%xmm1
movapd %xmm0,%xmm6
mulsd  %xmm1,%xmm6
movsd  0x2d908(%rip),%xmm0        # 734b8 <module.47+0x4a>
addsd  %xmm0,%xmm6
movdqu -0x1a0(%rbp),%xmm0
movsd  0x2d90c(%rip),%xmm1        # 734d0 <module.47+0x62>
movss  0x2d910(%rip),%xmm2        # 734dc <module.47+0x6e>
movss  0x2d904(%rip),%xmm3        # 734d8 <module.47+0x6a>
xorpd  %xmm4,%xmm4
movdqu -0x1d0(%rbp),%xmm5
jmpq   45015 <horizontalDifferenceF+0x265>
mulss  %xmm5,%xmm0
cvttss2si %xmm0,%edx
movzwl (%r8,%rdx,2),%edx
movzwl %dx,%edx
cvtsi2sd %rdx,%xmm0
mov    %rax,%r14
mov    %rdi,%rax
mov    %rsi,%rdi
mov    %rcx,%r15
jmpq   450f8 <horizontalDifferenceF+0x348>
mulss  0x34e41(%rip),%xmm0        # 7aa54 <LogK2>
cvtss2sd %xmm0,%xmm0
movss  0x34e31(%rip),%xmm1        # 7aa50 <LogK1>
movdqu %xmm1,-0x90(%rbp)
mov    %rax,-0x50(%rbp)
mov    %rbx,-0x1e0(%rbp)
mov    %rsi,-0x78(%rbp)
mov    %r8,%rbx
mov    %rdi,%r14
mov    %rcx,%r15
callq  8570 <log@plt>
mov    %r14,%rax
mov    %rbx,%r8
movdqu -0x90(%rbp),%xmm1
cvtss2sd %xmm1,%xmm1
mulsd  %xmm1,%xmm0
movsd  0x2d856(%rip),%xmm1        # 734b8 <module.47+0x4a>
addsd  %xmm1,%xmm0
mov    -0x78(%rbp),%rdi
mov    -0x1e0(%rbp),%rbx
mov    -0x50(%rbp),%r14
movsd  0x2d853(%rip),%xmm1        # 734d0 <module.47+0x62>
movss  0x2d857(%rip),%xmm2        # 734dc <module.47+0x6e>
movss  0x2d84b(%rip),%xmm3        # 734d8 <module.47+0x6a>
xorpd  %xmm4,%xmm4
movdqu -0x1d0(%rbp),%xmm5
jmpq   450f8 <horizontalDifferenceF+0x348>
mulss  %xmm5,%xmm0
cvttss2si %xmm0,%edx
movzwl (%r8,%rdx,2),%edx
movzwl %dx,%edx
cvtsi2sd %rdx,%xmm0
mov    %rsi,%r12
jmpq   4512a <horizontalDifferenceF+0x37a>
mulss  0x34d91(%rip),%xmm0        # 7aa54 <LogK2>
cvtss2sd %xmm0,%xmm0
movss  0x34d81(%rip),%xmm1        # 7aa50 <LogK1>
movdqu %xmm1,-0x70(%rbp)
mov    %rbx,-0x1e0(%rbp)
mov    %rdi,-0x78(%rbp)
mov    %rsi,-0x90(%rbp)
mov    %rcx,-0x98(%rbp)
mov    %r8,%rbx
mov    %rax,%r12
callq  8570 <log@plt>
mov    %r12,%rax
mov    %rbx,%r8
movdqu -0x70(%rbp),%xmm1
cvtss2sd %xmm1,%xmm1
mulsd  %xmm1,%xmm0
movsd  0x2d7a5(%rip),%xmm1        # 734b8 <module.47+0x4a>
addsd  %xmm1,%xmm0
mov    -0x98(%rbp),%rcx
mov    -0x90(%rbp),%r12
mov    -0x78(%rbp),%rdi
mov    -0x1e0(%rbp),%rbx
movsd  0x2d798(%rip),%xmm1        # 734d0 <module.47+0x62>
movss  0x2d79c(%rip),%xmm2        # 734dc <module.47+0x6e>
movss  0x2d790(%rip),%xmm3        # 734d8 <module.47+0x6a>
xorpd  %xmm4,%xmm4
movdqu -0x1d0(%rbp),%xmm5
jmpq   4512a <horizontalDifferenceF+0x37a>
mulss  %xmm5,%xmm0
cvttss2si %xmm0,%eax
movzwl (%r8,%rax,2),%eax
movzwl %ax,%eax
cvtsi2sd %rax,%xmm0
mov    %rsi,%r13
jmpq   4515a <horizontalDifferenceF+0x3aa>
mulss  0x34cd6(%rip),%xmm0        # 7aa54 <LogK2>
cvtss2sd %xmm0,%xmm0
movss  0x34cc6(%rip),%xmm1        # 7aa50 <LogK1>
movdqu %xmm1,-0x60(%rbp)
mov    %r8,-0x1e0(%rbp)
mov    %rcx,-0x98(%rbp)
mov    %rsi,-0x70(%rbp)
mov    %rdi,%r13
callq  8570 <log@plt>
mov    %r13,%rdi
movdqu -0x60(%rbp),%xmm1
cvtss2sd %xmm1,%xmm1
mulsd  %xmm1,%xmm0
movsd  0x2d6f7(%rip),%xmm1        # 734b8 <module.47+0x4a>
addsd  %xmm1,%xmm0
mov    -0x70(%rbp),%r13
mov    -0x98(%rbp),%rcx
mov    -0x1e0(%rbp),%r8
movsd  0x2d6f1(%rip),%xmm1        # 734d0 <module.47+0x62>
movss  0x2d6f5(%rip),%xmm2        # 734dc <module.47+0x6e>
movss  0x2d6e9(%rip),%xmm3        # 734d8 <module.47+0x6a>
xorpd  %xmm4,%xmm4
movdqu -0x1d0(%rbp),%xmm5
jmpq   4515a <horizontalDifferenceF+0x3aa>
mulss  %xmm5,%xmm0
cvttss2si %xmm0,%esi
movzwl (%r8,%rsi,2),%esi
movzwl %si,%esi
cvtsi2sd %rsi,%xmm0
mov    %rcx,%r14
mov    %rdx,%r15
mov    %rdi,%rdx
mov    %r9,%rdi
jmpq   45235 <horizontalDifferenceF+0x485>
mulss  0x34c26(%rip),%xmm0        # 7aa54 <LogK2>
cvtss2sd %xmm0,%xmm0
movss  0x34c16(%rip),%xmm1        # 7aa50 <LogK1>
movdqu %xmm1,-0x170(%rbp)
mov    %r13,-0x118(%rbp)
mov    %rdx,-0x100(%rbp)
mov    %rax,-0x1e0(%rbp)
mov    %r9,-0x150(%rbp)
mov    %r8,%r13
mov    %rcx,%r14
mov    %rdi,%r15
callq  8570 <log@plt>
mov    %r15,%rdx
mov    %r13,%r8
movdqu -0x170(%rbp),%xmm1
cvtss2sd %xmm1,%xmm1
mulsd  %xmm1,%xmm0
movsd  0x2d62e(%rip),%xmm1        # 734b8 <module.47+0x4a>
addsd  %xmm1,%xmm0
mov    -0x150(%rbp),%rdi
mov    -0x1e0(%rbp),%rax
mov    -0x100(%rbp),%r15
mov    -0x118(%rbp),%r13
movsd  0x2d61e(%rip),%xmm1        # 734d0 <module.47+0x62>
movss  0x2d622(%rip),%xmm2        # 734dc <module.47+0x6e>
movss  0x2d616(%rip),%xmm3        # 734d8 <module.47+0x6a>
xorpd  %xmm4,%xmm4
movdqu -0x1d0(%rbp),%xmm5
jmpq   45235 <horizontalDifferenceF+0x485>
mulss  %xmm5,%xmm0
cvttss2si %xmm0,%esi
movzwl (%r8,%rsi,2),%esi
movzwl %si,%esi
cvtsi2sd %rsi,%xmm0
mov    %r9,%rbx
jmpq   45267 <horizontalDifferenceF+0x4b7>
mulss  0x34b5c(%rip),%xmm0        # 7aa54 <LogK2>
cvtss2sd %xmm0,%xmm0
movss  0x34b4c(%rip),%xmm1        # 7aa50 <LogK1>
movdqu %xmm1,-0x140(%rbp)
mov    %r15,-0x100(%rbp)
mov    %rax,-0x1e0(%rbp)
mov    %rdi,-0x148(%rbp)
mov    %r9,-0x160(%rbp)
mov    %rcx,-0x188(%rbp)
mov    %r8,%rbx
mov    %rdx,%r15
callq  8570 <log@plt>
mov    %r15,%rdx
mov    %rbx,%r8
movdqu -0x140(%rbp),%xmm1
cvtss2sd %xmm1,%xmm1
mulsd  %xmm1,%xmm0
movsd  0x2d560(%rip),%xmm1        # 734b8 <module.47+0x4a>
addsd  %xmm1,%xmm0
mov    -0x188(%rbp),%rcx
mov    -0x160(%rbp),%rbx
mov    -0x148(%rbp),%rdi
mov    -0x1e0(%rbp),%rax
mov    -0x100(%rbp),%r15
movsd  0x2d549(%rip),%xmm1        # 734d0 <module.47+0x62>
movss  0x2d54d(%rip),%xmm2        # 734dc <module.47+0x6e>
movss  0x2d541(%rip),%xmm3        # 734d8 <module.47+0x6a>
xorpd  %xmm4,%xmm4
movdqu -0x1d0(%rbp),%xmm5
jmpq   45267 <horizontalDifferenceF+0x4b7>
mulss  %xmm5,%xmm0
cvttss2si %xmm0,%esi
movzwl (%r8,%rsi,2),%esi
movzwl %si,%esi
cvtsi2sd %rsi,%xmm0
mov    %r9,%r12
jmpq   45298 <horizontalDifferenceF+0x4e8>
mulss  0x34a87(%rip),%xmm0        # 7aa54 <LogK2>
cvtss2sd %xmm0,%xmm0
movss  0x34a77(%rip),%xmm1        # 7aa50 <LogK1>
movdqu %xmm1,-0x130(%rbp)
mov    %rax,-0x1e0(%rbp)
mov    %rdi,-0x148(%rbp)
mov    %rbx,-0x158(%rbp)
mov    %rcx,-0x180(%rbp)
mov    %r9,-0x140(%rbp)
mov    %r8,%rbx
mov    %rdx,%r12
callq  8570 <log@plt>
mov    %r12,%rdx
mov    %rbx,%r8
movdqu -0x130(%rbp),%xmm1
cvtss2sd %xmm1,%xmm1
mulsd  %xmm1,%xmm0
movsd  0x2d48b(%rip),%xmm1        # 734b8 <module.47+0x4a>
addsd  %xmm1,%xmm0
mov    -0x140(%rbp),%r12
mov    -0x180(%rbp),%rcx
mov    -0x158(%rbp),%rbx
mov    -0x148(%rbp),%rdi
mov    -0x1e0(%rbp),%rax
movsd  0x2d474(%rip),%xmm1        # 734d0 <module.47+0x62>
movss  0x2d478(%rip),%xmm2        # 734dc <module.47+0x6e>
movss  0x2d46c(%rip),%xmm3        # 734d8 <module.47+0x6a>
xorpd  %xmm4,%xmm4
movdqu -0x1d0(%rbp),%xmm5
jmpq   45298 <horizontalDifferenceF+0x4e8>
mulss  %xmm5,%xmm0
cvttss2si %xmm0,%edx
movzwl (%r8,%rdx,2),%edx
movzwl %dx,%edx
cvtsi2sd %rdx,%xmm0
mov    %r9,%r13
jmpq   452c9 <horizontalDifferenceF+0x519>
mulss  0x349b2(%rip),%xmm0        # 7aa54 <LogK2>
cvtss2sd %xmm0,%xmm0
movss  0x349a2(%rip),%xmm1        # 7aa50 <LogK1>
movdqu %xmm1,-0x110(%rbp)
mov    %r8,-0x1e0(%rbp)
mov    %rcx,-0x178(%rbp)
mov    %r12,-0x130(%rbp)
mov    %r9,-0x118(%rbp)
mov    %rdi,%r12
mov    %rax,%r13
callq  8570 <log@plt>
mov    %r13,%rax
mov    %r12,%rdi
movdqu -0x110(%rbp),%xmm1
cvtss2sd %xmm1,%xmm1
mulsd  %xmm1,%xmm0
movsd  0x2d3bd(%rip),%xmm1        # 734b8 <module.47+0x4a>
addsd  %xmm1,%xmm0
mov    -0x118(%rbp),%r13
mov    -0x130(%rbp),%r12
mov    -0x178(%rbp),%rcx
mov    -0x1e0(%rbp),%r8
movsd  0x2d3ad(%rip),%xmm1        # 734d0 <module.47+0x62>
movss  0x2d3b1(%rip),%xmm2        # 734dc <module.47+0x6e>
movss  0x2d3a5(%rip),%xmm3        # 734d8 <module.47+0x6a>
xorpd  %xmm4,%xmm4
movdqu -0x1d0(%rbp),%xmm5
jmpq   452c9 <horizontalDifferenceF+0x519>
data16 nopw %cs:0x0(%rax,%rax,1)
nop

0000000000046150 <horizontalDifference16>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
cmp    %esi,%edx
jle    4615e <horizontalDifference16+0xe>
leaveq 
retq   
cmp    $0x3,%edx
je     4619c <horizontalDifference16+0x4c>
cmp    $0x4,%edx
je     461e4 <horizontalDifference16+0x94>
mov    %rdx,%r9
movzwl (%rdi),%eax
shr    $0x2,%eax
movslq %eax,%rax
movzwl (%r8,%rax,2),%eax
mov    %ax,(%rcx)
add    $0x2,%rdi
add    $0x2,%rcx
add    $0xffffffff,%r9d
test   %r9d,%r9d
jg     4616b <horizontalDifference16+0x1b>
mov    %rdx,%rax
neg    %eax
movslq %eax,%r11
sub    %edx,%esi
jmpq   46281 <horizontalDifference16+0x131>
movzwl (%rdi),%eax
shr    $0x2,%eax
movslq %eax,%rax
movzwl (%r8,%rax,2),%r10d
mov    %r10w,(%rcx)
movzwl 0x2(%rdi),%eax
shr    $0x2,%eax
movslq %eax,%rax
movzwl (%r8,%rax,2),%edx
mov    %dx,0x2(%rcx)
movzwl 0x4(%rdi),%eax
shr    $0x2,%eax
movslq %eax,%rax
movzwl (%r8,%rax,2),%r9d
mov    %r9w,0x4(%rcx)
lea    -0x3(%rsi),%eax
mov    %r15,-0x10(%rbp)
mov    %rdx,%rsi
jmpq   462fd <horizontalDifference16+0x1ad>
movzwl (%rdi),%eax
shr    $0x2,%eax
movslq %eax,%rax
movzwl (%r8,%rax,2),%r10d
mov    %r10w,(%rcx)
movzwl 0x2(%rdi),%eax
shr    $0x2,%eax
movslq %eax,%rax
movzwl (%r8,%rax,2),%r9d
mov    %r9w,0x2(%rcx)
movzwl 0x4(%rdi),%eax
shr    $0x2,%eax
movslq %eax,%rax
movzwl (%r8,%rax,2),%edx
mov    %dx,0x4(%rcx)
movzwl 0x6(%rdi),%eax
shr    $0x2,%eax
movslq %eax,%rax
movzwl (%r8,%rax,2),%r11d
mov    %r11w,0x6(%rcx)
lea    -0x4(%rsi),%eax
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
jmpq   463a5 <horizontalDifference16+0x255>
mov    %rdx,%r10
movzwl (%rdi),%eax
shr    $0x2,%eax
movslq %eax,%rax
movzwl (%r8,%rax,2),%eax
movzwl (%rdi,%r11,2),%r9d
shr    $0x2,%r9d
movslq %r9d,%r9
movzwl (%r8,%r9,2),%r9d
sub    %r9w,%ax
and    $0x7ff,%ax
mov    %ax,(%rcx)
add    $0x2,%rdi
add    $0x2,%rcx
add    $0xffffffff,%r10d
test   %r10d,%r10d
jg     46244 <horizontalDifference16+0xf4>
sub    %edx,%esi
test   %esi,%esi
jg     46241 <horizontalDifference16+0xf1>
leaveq 
retq   
lea    0x6(%rdi),%r15
movzwl (%r15),%edx
shr    $0x2,%edx
movslq %edx,%rdx
movzwl (%r8,%rdx,2),%r11d
mov    %r11,%rdx
sub    %r10w,%dx
and    $0x7ff,%dx
lea    0x6(%rcx),%r10
mov    %dx,(%r10)
movzwl 0x8(%rdi),%edx
shr    $0x2,%edx
movslq %edx,%rdx
movzwl (%r8,%rdx,2),%edx
neg    %si
add    %dx,%si
and    $0x7ff,%si
mov    %si,0x8(%rcx)
movzwl 0xa(%rdi),%esi
shr    $0x2,%esi
movslq %esi,%rsi
movzwl (%r8,%rsi,2),%edi
mov    %rdi,%rsi
sub    %r9w,%si
and    $0x7ff,%si
mov    %si,0xa(%rcx)
add    $0xfffffffd,%eax
mov    %r10,%rcx
mov    %r11,%r10
mov    %rdx,%rsi
mov    %rdi,%r9
mov    %r15,%rdi
test   %eax,%eax
jg     46287 <horizontalDifference16+0x137>
mov    -0x10(%rbp),%r15
leaveq 
retq   
lea    0x8(%rdi),%r15
movzwl (%r15),%esi
shr    $0x2,%esi
movslq %esi,%rsi
movzwl (%r8,%rsi,2),%r14d
mov    %r14,%rsi
sub    %r10w,%si
and    $0x7ff,%si
lea    0x8(%rcx),%r10
mov    %si,(%r10)
movzwl 0xa(%rdi),%esi
shr    $0x2,%esi
movslq %esi,%rsi
movzwl (%r8,%rsi,2),%esi
neg    %r9w
add    %si,%r9w
and    $0x7ff,%r9w
mov    %r9w,0xa(%rcx)
movzwl 0xc(%rdi),%r9d
shr    $0x2,%r9d
movslq %r9d,%r9
movzwl (%r8,%r9,2),%r9d
neg    %dx
add    %r9w,%dx
and    $0x7ff,%dx
mov    %dx,0xc(%rcx)
movzwl 0xe(%rdi),%edx
shr    $0x2,%edx
movslq %edx,%rdx
movzwl (%r8,%rdx,2),%edi
mov    %rdi,%rdx
sub    %r11w,%dx
and    $0x7ff,%dx
mov    %dx,0xe(%rcx)
add    $0xfffffffc,%eax
mov    %r10,%rcx
mov    %r14,%r10
mov    %r9,%rdx
mov    %rsi,%r9
mov    %rdi,%r11
mov    %r15,%rdi
test   %eax,%eax
jg     46307 <horizontalDifference16+0x1b7>
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

00000000000463c0 <horizontalDifference8>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
cmp    %esi,%edx
jle    463ce <horizontalDifference8+0xe>
leaveq 
retq   
cmp    $0x3,%edx
je     46406 <horizontalDifference8+0x46>
cmp    $0x4,%edx
je     4643c <horizontalDifference8+0x7c>
mov    %rdx,%rax
movzbl (%rdi),%r9d
movzwl (%r8,%r9,2),%r9d
mov    %r9w,(%rcx)
add    $0x1,%rdi
add    $0x2,%rcx
add    $0xffffffff,%eax
test   %eax,%eax
jg     463db <horizontalDifference8+0x1b>
mov    %rdx,%rax
neg    %eax
movslq %eax,%r11
sub    %edx,%esi
jmpq   464b7 <horizontalDifference8+0xf7>
movzbl (%rdi),%eax
movzwl (%r8,%rax,2),%edx
mov    %dx,(%rcx)
movzbl 0x1(%rdi),%eax
movzwl (%r8,%rax,2),%r10d
mov    %r10w,0x2(%rcx)
movzbl 0x2(%rdi),%eax
movzwl (%r8,%rax,2),%r9d
mov    %r9w,0x4(%rcx)
lea    -0x3(%rsi),%eax
mov    %r15,-0x10(%rbp)
mov    %r10,%rsi
jmpq   46521 <horizontalDifference8+0x161>
movzbl (%rdi),%eax
movzwl (%r8,%rax,2),%edx
mov    %dx,(%rcx)
movzbl 0x1(%rdi),%eax
movzwl (%r8,%rax,2),%r11d
mov    %r11w,0x2(%rcx)
movzbl 0x2(%rdi),%eax
movzwl (%r8,%rax,2),%r9d
mov    %r9w,0x4(%rcx)
movzbl 0x3(%rdi),%eax
movzwl (%r8,%rax,2),%r10d
mov    %r10w,0x6(%rcx)
lea    -0x4(%rsi),%eax
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %r11,%rsi
jmpq   465ae <horizontalDifference8+0x1ee>
mov    %rdx,%r9
movzbl (%rdi),%eax
movzwl (%r8,%rax,2),%eax
movzbl (%r11,%rdi,1),%r10d
movzwl (%r8,%r10,2),%r10d
sub    %r10w,%ax
and    $0x7ff,%ax
mov    %ax,(%rcx)
add    $0x1,%rdi
add    $0x2,%rcx
add    $0xffffffff,%r9d
test   %r9d,%r9d
jg     46487 <horizontalDifference8+0xc7>
sub    %edx,%esi
test   %esi,%esi
jg     46484 <horizontalDifference8+0xc4>
leaveq 
retq   
lea    0x3(%rdi),%r11
movzbl (%r11),%r10d
movzwl (%r8,%r10,2),%r15d
neg    %dx
add    %r15w,%dx
and    $0x7ff,%dx
lea    0x6(%rcx),%r10
mov    %dx,(%r10)
movzbl 0x4(%rdi),%edx
movzwl (%r8,%rdx,2),%edx
neg    %si
add    %dx,%si
and    $0x7ff,%si
mov    %si,0x8(%rcx)
movzbl 0x5(%rdi),%esi
movzwl (%r8,%rsi,2),%edi
mov    %rdi,%rsi
sub    %r9w,%si
and    $0x7ff,%si
mov    %si,0xa(%rcx)
add    $0xfffffffd,%eax
mov    %r10,%rcx
mov    %rdx,%rsi
mov    %r15,%rdx
mov    %rdi,%r9
mov    %r11,%rdi
test   %eax,%eax
jg     464bd <horizontalDifference8+0xfd>
mov    -0x10(%rbp),%r15
leaveq 
retq   
lea    0x4(%rdi),%r11
movzbl (%r11),%r14d
movzwl (%r8,%r14,2),%r15d
neg    %dx
add    %r15w,%dx
and    $0x7ff,%dx
lea    0x8(%rcx),%r14
mov    %dx,(%r14)
movzbl 0x5(%rdi),%edx
movzwl (%r8,%rdx,2),%edx
neg    %si
add    %dx,%si
and    $0x7ff,%si
mov    %si,0xa(%rcx)
movzbl 0x6(%rdi),%esi
movzwl (%r8,%rsi,2),%esi
neg    %r9w
add    %si,%r9w
and    $0x7ff,%r9w
mov    %r9w,0xc(%rcx)
movzbl 0x7(%rdi),%edi
movzwl (%r8,%rdi,2),%r9d
mov    %r9,%rdi
sub    %r10w,%di
and    $0x7ff,%di
mov    %di,0xe(%rcx)
add    $0xfffffffc,%eax
mov    %r14,%rcx
mov    %r11,%rdi
mov    %r9,%r10
mov    %rsi,%r9
mov    %rdx,%rsi
mov    %r15,%rdx
test   %eax,%eax
jg     4652b <horizontalDifference8+0x16b>
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   

00000000000465c0 <PixarLogPostEncode>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    0x350(%rdi),%r12
movl   $0x0,0x88(%r12)
lea    0x80(%r12),%r13
mov    %rdi,%rbx
mov    $0x4,%r14d
mov    %r13,%rdi
mov    %r14,%rsi
callq  84e0 <deflate@plt>
test   %eax,%eax
je     46614 <PixarLogPostEncode+0x54>
cmp    $0x1,%eax
jne    4667d <PixarLogPostEncode+0xbd>
mov    0x370(%rbx),%rcx
mov    0xa0(%r12),%edx
cmp    %rdx,%rcx
je     4665d <PixarLogPostEncode+0x9d>
sub    %rdx,%rcx
mov    %rcx,0x390(%rbx)
mov    %rax,%r15
mov    %rbx,%rdi
callq  86e0 <TIFFFlushData1@plt>
mov    0x368(%rbx),%rax
mov    %rax,0x98(%r12)
mov    0x370(%rbx),%eax
mov    %eax,0xa0(%r12)
mov    %r15,%rax
cmp    $0x1,%eax
jne    46600 <PixarLogPostEncode+0x40>
mov    $0x1,%eax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
mov    0x3b8(%rbx),%rdi
mov    0xb0(%r12),%rcx
test   %rcx,%rcx
jne    46698 <PixarLogPostEncode+0xd8>
lea    0x2cb58(%rip),%rcx        # 731f0 <module.16+0x8e>
lea    0x2cd96(%rip),%rsi        # 73435 <module.43>
lea    0x2cbc2(%rip),%rdx        # 73268 <module.22+0x71>
xor    %ebx,%ebx
mov    %rbx,%rax
callq  8a00 <TIFFErrorExt@plt>
mov    %rbx,%rax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
nopl   0x0(%rax)

00000000000466d0 <PixarLogClose>:
push   %rbp
mov    %rsp,%rbp
mov    0x350(%rdi),%rax
test   %rax,%rax
jne    466ff <PixarLogClose+0x2f>
lea    0x2cd61(%rip),%rdi        # 73448 <module.43+0x13>
lea    0x2ca06(%rip),%rsi        # 730f4 <module.10+0x30>
mov    $0x4ed,%edx
lea    0x2cd56(%rip),%rcx        # 73450 <module.43+0x1b>
callq  8490 <__assert_fail@plt>
movslq 0x104(%rax),%rax
and    $0x1,%eax
test   %eax,%eax
jg     4670f <PixarLogClose+0x3f>
leaveq 
retq   
movw   $0x8,0x74(%rdi)
movw   $0x1,0x76(%rdi)
leaveq 
retq   
nopl   (%rax)

0000000000046720 <PixarLogCleanup>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    0x350(%rdi),%rax
test   %rax,%rax
jne    46753 <PixarLogCleanup+0x33>
lea    0x2cd0d(%rip),%rdi        # 73448 <module.43+0x13>
lea    0x2c9b2(%rip),%rsi        # 730f4 <module.10+0x30>
mov    $0x50a,%edx
lea    0x2cd10(%rip),%rcx        # 7345e <module.43+0x29>
callq  8490 <__assert_fail@plt>
mov    %rdi,%rcx
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rdi,%r14
mov    %rcx,%rdi
mov    %rax,%r15
callq  8180 <TIFFPredictorCleanup@plt>
mov    0x110(%r15),%rax
mov    %rax,0x410(%r14)
mov    0x118(%r15),%rax
mov    %rax,0x408(%r14)
mov    0x138(%r15),%rdi
test   %rdi,%rdi
je     46799 <PixarLogCleanup+0x79>
callq  8bb0 <_TIFFfree@plt>
mov    0x140(%r15),%rdi
test   %rdi,%rdi
je     467aa <PixarLogCleanup+0x8a>
callq  8bb0 <_TIFFfree@plt>
mov    0x148(%r15),%rdi
test   %rdi,%rdi
je     467bb <PixarLogCleanup+0x9b>
callq  8bb0 <_TIFFfree@plt>
mov    0x120(%r15),%rdi
test   %rdi,%rdi
je     467cc <PixarLogCleanup+0xac>
callq  8bb0 <_TIFFfree@plt>
mov    0x128(%r15),%rdi
test   %rdi,%rdi
je     467dd <PixarLogCleanup+0xbd>
callq  8bb0 <_TIFFfree@plt>
mov    0x130(%r15),%rdi
test   %rdi,%rdi
je     467ee <PixarLogCleanup+0xce>
callq  8bb0 <_TIFFfree@plt>
movslq 0x104(%r15),%rax
and    $0x1,%eax
test   %eax,%eax
jg     46832 <PixarLogCleanup+0x112>
mov    0xf8(%r15),%rdi
test   %rdi,%rdi
je     4680d <PixarLogCleanup+0xed>
callq  8bb0 <_TIFFfree@plt>
mov    %r15,%rdi
callq  8bb0 <_TIFFfree@plt>
mov    %r14,%rdi
movq   $0x0,0x350(%rdi)
callq  8740 <_TIFFSetDefaultCompressionState@plt>
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
movslq 0xc(%r14),%rax
test   %eax,%eax
je     46848 <PixarLogCleanup+0x128>
lea    0x80(%r15),%rdi
callq  8960 <deflateEnd@plt>
jmp    467fc <PixarLogCleanup+0xdc>
lea    0x80(%r15),%rdi
callq  8780 <inflateEnd@plt>
jmp    467fc <PixarLogCleanup+0xdc>
nopw   %cs:0x0(%rax,%rax,1)

0000000000046860 <PixarLogVSetField>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x10(%rbp)
mov    0x350(%rdi),%rcx
mov    $0x1,%eax
cmp    $0x1000d,%esi
jne    46899 <PixarLogVSetField+0x39>
movslq (%rdx),%rsi
cmp    $0x2f,%esi
jle    468bb <PixarLogVSetField+0x5b>
mov    0x8(%rdx),%rsi
lea    0x8(%rsi),%rax
mov    %rax,0x8(%rdx)
movslq (%rsi),%rax
jmp    468c8 <PixarLogVSetField+0x68>
cmp    $0x10016,%esi
jne    468ec <PixarLogVSetField+0x8c>
movslq (%rdx),%r8
cmp    $0x2f,%r8d
jle    468f4 <PixarLogVSetField+0x94>
mov    0x8(%rdx),%r8
lea    0x8(%r8),%rsi
mov    %rsi,0x8(%rdx)
movslq (%r8),%rsi
jmp    46903 <PixarLogVSetField+0xa3>
mov    0x10(%rdx),%rax
movslq (%rax,%rsi,1),%rax
add    $0x8,%esi
mov    %esi,(%rdx)
mov    %eax,0x108(%rcx)
cmp    $0x5,%eax
jbe    46913 <PixarLogVSetField+0xb3>
mov    %rdi,%r15
mov    0x10(%r15),%eax
and    $0x400,%eax
test   %eax,%eax
jne    46932 <PixarLogVSetField+0xd2>
mov    $0xffffffffffffffff,%rax
jmp    4693a <PixarLogVSetField+0xda>
callq  *0x118(%rcx)
leaveq 
retq   
mov    0x10(%rdx),%rsi
movslq (%rsi,%r8,1),%rsi
add    $0x8,%r8d
mov    %r8d,(%rdx)
mov    %esi,0x10c(%rcx)
movslq 0xc(%rdi),%rdx
test   %edx,%edx
jne    4695b <PixarLogVSetField+0xfb>
leaveq 
retq   
mov    $0x102,%esi
mov    $0x10,%edx
lea    0x2c788(%rip),%rcx        # 730ac <module.8+0x13b>
movslq (%rcx,%rax,4),%rax
add    %rcx,%rax
jmpq   *%rax
mov    %rdi,%r15
jmp    468d6 <PixarLogVSetField+0x76>
mov    %r15,%rdi
callq  8910 <TIFFTileSize@plt>
mov    %rax,0x2b0(%r15)
mov    %r15,%rdi
callq  8410 <TIFFScanlineSize@plt>
mov    %rax,0x358(%r15)
mov    $0x1,%eax
mov    -0x10(%rbp),%r15
leaveq 
retq   
movslq 0x104(%rcx),%rdx
and    $0x1,%edx
test   %edx,%edx
jg     46a28 <PixarLogVSetField+0x1c8>
leaveq 
retq   
xor    %eax,%eax
mov    $0x8,%edx
mov    %rdi,%r15
callq  8290 <TIFFSetField@plt>
mov    %r15,%rdi
mov    $0x1,%edx
xor    %eax,%eax
mov    $0x153,%esi
callq  8290 <TIFFSetField@plt>
jmpq   468d6 <PixarLogVSetField+0x76>
xor    %eax,%eax
mov    %rdi,%r15
callq  8290 <TIFFSetField@plt>
mov    %r15,%rdi
mov    $0x1,%edx
xor    %eax,%eax
mov    $0x153,%esi
callq  8290 <TIFFSetField@plt>
jmpq   468d6 <PixarLogVSetField+0x76>
xor    %eax,%eax
mov    %rdi,%r15
callq  8290 <TIFFSetField@plt>
mov    $0x2,%edx
mov    %r15,%rdi
xor    %eax,%eax
mov    $0x153,%esi
callq  8290 <TIFFSetField@plt>
jmpq   468d6 <PixarLogVSetField+0x76>
xor    %eax,%eax
mov    %rdi,%r15
callq  8290 <TIFFSetField@plt>
mov    %r15,%rdi
mov    $0x1,%edx
xor    %eax,%eax
mov    $0x153,%esi
callq  8290 <TIFFSetField@plt>
jmpq   468d6 <PixarLogVSetField+0x76>
xor    %eax,%eax
mov    $0x20,%edx
mov    %rdi,%r15
callq  8290 <TIFFSetField@plt>
mov    $0x3,%edx
mov    %r15,%rdi
xor    %eax,%eax
mov    $0x153,%esi
callq  8290 <TIFFSetField@plt>
jmpq   468d6 <PixarLogVSetField+0x76>
lea    0x80(%rcx),%rax
xor    %edx,%edx
mov    %rcx,-0x8(%rbp)
mov    %rdi,%r15
mov    %rax,%rdi
callq  8620 <deflateParams@plt>
test   %eax,%eax
jne    46a4f <PixarLogVSetField+0x1ef>
mov    $0x1,%eax
mov    -0x10(%rbp),%r15
leaveq 
retq   
mov    0x3b8(%r15),%rdi
mov    -0x8(%rbp),%rax
mov    0xb0(%rax),%rcx
test   %rcx,%rcx
jne    46a6d <PixarLogVSetField+0x20d>
lea    0x2c783(%rip),%rcx        # 731f0 <module.16+0x8e>
xor    %eax,%eax
lea    0x2c9f8(%rip),%rsi        # 7346e <module.47>
lea    0x2c7eb(%rip),%rdx        # 73268 <module.22+0x71>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x10(%rbp),%r15
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

0000000000046a90 <PixarLogVGetField>:
push   %rbp
mov    %rsp,%rbp
mov    0x350(%rdi),%r8
mov    $0x1,%eax
cmp    $0x1000d,%esi
jne    46ac1 <PixarLogVGetField+0x31>
movslq (%rdx),%rsi
cmp    $0x2f,%esi
jle    46ae2 <PixarLogVGetField+0x52>
mov    0x8(%rdx),%rcx
lea    0x8(%rcx),%rsi
mov    %rsi,0x8(%rdx)
mov    (%rcx),%rcx
jmp    46aef <PixarLogVGetField+0x5f>
cmp    $0x10016,%esi
jne    46afa <PixarLogVGetField+0x6a>
movslq (%rdx),%rsi
cmp    $0x2f,%esi
jle    46b03 <PixarLogVGetField+0x73>
mov    0x8(%rdx),%rsi
lea    0x8(%rsi),%rcx
mov    %rcx,0x8(%rdx)
mov    (%rsi),%rcx
jmp    46b10 <PixarLogVGetField+0x80>
mov    0x10(%rdx),%rcx
mov    (%rcx,%rsi,1),%rcx
add    $0x8,%esi
mov    %esi,(%rdx)
movslq 0x108(%r8),%rdx
mov    %edx,(%rcx)
leaveq 
retq   
callq  *0x110(%r8)
leaveq 
retq   
mov    0x10(%rdx),%rcx
mov    (%rcx,%rsi,1),%rcx
add    $0x8,%esi
mov    %esi,(%rdx)
movslq 0x10c(%r8),%rdx
mov    %edx,(%rcx)
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

0000000000046b20 <TIFFPredictorInit>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
lea    0x2ca67(%rip),%rcx        # 73596 <module.47+0x128>
mov    0x350(%rdi),%rax
test   %rax,%rax
jne    46b53 <TIFFPredictorInit+0x33>
lea    0x2ca3e(%rip),%rdi        # 73580 <module.47+0x112>
lea    0x2ca3f(%rip),%rsi        # 73588 <module.47+0x11a>
mov    $0x336,%edx
callq  8490 <__assert_fail@plt>
lea    0x3308e(%rip),%rsi        # 79be8 <predictFields>
mov    $0x1,%edx
mov    %rdi,%rcx
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rax,%r14
mov    %rdi,%r15
mov    %rcx,%rdi
callq  8520 <_TIFFMergeFields@plt>
test   %eax,%eax
jne    46ba9 <TIFFPredictorInit+0x89>
mov    0x3b8(%r15),%rdi
lea    0x2ca1e(%rip),%rdx        # 735a8 <module.47+0x13a>
xor    %r14d,%r14d
mov    %r14,%rax
lea    0x2c9ff(%rip),%rsi        # 73596 <module.47+0x128>
callq  8a00 <TIFFErrorExt@plt>
mov    %r14,%rax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
mov    0x410(%r15),%rax
mov    %rax,0x58(%r14)
lea    0x1805(%rip),%rax        # 483c0 <PredictorVGetField>
mov    %rax,0x410(%r15)
mov    0x408(%r15),%rax
mov    %rax,0x60(%r14)
lea    0x173c(%rip),%rax        # 48310 <PredictorVSetField>
mov    %rax,0x408(%r15)
mov    0x418(%r15),%rax
mov    %rax,0x68(%r14)
lea    0x1863(%rip),%rax        # 48450 <PredictorPrintDir>
mov    %rax,0x418(%r15)
mov    0x2c8(%r15),%rax
mov    %rax,0x70(%r14)
lea    0x13ea(%rip),%rax        # 47ff0 <PredictorSetupDecode>
mov    %rax,0x2c8(%r15)
mov    0x2d8(%r15),%rax
mov    %rax,0x78(%r14)
lea    0x1571(%rip),%rax        # 48190 <PredictorSetupEncode>
mov    %rax,0x2d8(%r15)
movl   $0x1,(%r14)
movq   $0x0,0x30(%r14)
movq   $0x0,0x50(%r14)
mov    $0x1,%eax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
nopl   0x0(%rax)

0000000000046c50 <TIFFPredictorCleanup>:
push   %rbp
mov    %rsp,%rbp
mov    0x350(%rdi),%rcx
test   %rcx,%rcx
jne    46c7f <TIFFPredictorCleanup+0x2f>
lea    0x2c919(%rip),%rdi        # 73580 <module.47+0x112>
lea    0x2c91a(%rip),%rsi        # 73588 <module.47+0x11a>
mov    $0x35f,%edx
lea    0x2c95b(%rip),%rcx        # 735d5 <module.47+0x167>
callq  8490 <__assert_fail@plt>
mov    0x58(%rcx),%rax
mov    %rax,0x410(%rdi)
mov    0x60(%rcx),%rax
mov    %rax,0x408(%rdi)
mov    0x68(%rcx),%rax
mov    %rax,0x418(%rdi)
mov    0x70(%rcx),%rax
mov    %rax,0x2c8(%rdi)
mov    0x78(%rcx),%rax
mov    %rax,0x2d8(%rdi)
mov    $0x1,%eax
leaveq 
retq   
nopl   (%rax)

0000000000046cc0 <horAcc8>:
push   %rbp
mov    %rsp,%rbp
mov    0x350(%rdi),%rax
mov    0x8(%rax),%r9
mov    %rdx,%rax
cqto   
mov    %rax,%r8
idiv   %r9
test   %rdx,%rdx
jne    46ceb <horAcc8+0x2b>
mov    $0x1,%eax
cmp    %r8,%r9
jl     46d12 <horAcc8+0x52>
leaveq 
retq   
mov    0x3b8(%rdi),%rdi
lea    0x2c8f1(%rip),%rsi        # 735ea <module.47+0x17c>
lea    0x2c8f2(%rip),%rdx        # 735f2 <module.47+0x184>
lea    0x2c8ee(%rip),%rcx        # 735f5 <module.47+0x187>
xor    %eax,%eax
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
cmp    $0x3,%r9
je     46d30 <horAcc8+0x70>
cmp    $0x4,%r9
je     46d4a <horAcc8+0x8a>
sub    %r9,%r8
lea    -0x4(%r9),%rdi
cmp    $0x4,%r9
jbe    46d68 <horAcc8+0xa8>
mov    %rdi,%rcx
jmp    46d95 <horAcc8+0xd5>
movzbl (%rsi),%r10d
movzbl 0x1(%rsi),%edi
movzbl 0x2(%rsi),%r9d
lea    -0x3(%r8),%rcx
lea    0x3(%rsi),%rdx
jmpq   46e16 <horAcc8+0x156>
movzbl (%rsi),%edx
movzbl 0x1(%rsi),%edi
movzbl 0x2(%rsi),%r10d
movzbl 0x3(%rsi),%r9d
lea    -0x4(%r8),%rcx
add    $0x4,%rsi
jmpq   46e52 <horAcc8+0x192>
lea    0x2c771(%rip),%rdx        # 734e0 <module.47+0x72>
movslq (%rdx,%r9,4),%rcx
add    %rdx,%rcx
jmpq   *%rcx
mov    %rdi,%rcx
jmp    46d95 <horAcc8+0xd5>
movzbl (%r9,%rsi,1),%edx
movzbl (%rsi),%r10d
add    %r10d,%edx
mov    %dl,(%r9,%rsi,1)
add    $0x1,%rsi
add    $0xffffffffffffffff,%rcx
test   %rcx,%rcx
jg     46d7d <horAcc8+0xbd>
movzbl (%r9,%rsi,1),%edx
movzbl (%rsi),%ecx
add    %edx,%ecx
mov    %cl,(%r9,%rsi,1)
add    $0x1,%rsi
movzbl (%r9,%rsi,1),%ecx
movzbl (%rsi),%edx
add    %edx,%ecx
mov    %cl,(%r9,%rsi,1)
add    $0x1,%rsi
movzbl (%r9,%rsi,1),%edx
movzbl (%rsi),%ecx
add    %edx,%ecx
mov    %cl,(%r9,%rsi,1)
add    $0x1,%rsi
movzbl (%r9,%rsi,1),%ecx
movzbl (%rsi),%edx
add    %edx,%ecx
mov    %cl,(%r9,%rsi,1)
add    $0x1,%rsi
sub    %r9,%r8
test   %r8,%r8
jg     46d25 <horAcc8+0x65>
leaveq 
retq   
movzbl (%rdx),%esi
add    %esi,%r10d
mov    %r10b,(%rdx)
movzbl 0x1(%rdx),%esi
add    %esi,%edi
mov    %dil,0x1(%rdx)
movzbl 0x2(%rdx),%esi
add    %esi,%r9d
mov    %r9b,0x2(%rdx)
add    $0xfffffffffffffffd,%rcx
add    $0x3,%rdx
test   %rcx,%rcx
jg     46df0 <horAcc8+0x130>
leaveq 
retq   
movzbl (%rsi),%r8d
add    %r8d,%edx
mov    %dl,(%rsi)
movzbl 0x1(%rsi),%r8d
add    %r8d,%edi
mov    %dil,0x1(%rsi)
movzbl 0x2(%rsi),%r8d
add    %r8d,%r10d
mov    %r10b,0x2(%rsi)
movzbl 0x3(%rsi),%r8d
add    %r8d,%r9d
mov    %r9b,0x3(%rsi)
add    $0xfffffffffffffffc,%rcx
add    $0x4,%rsi
test   %rcx,%rcx
jg     46e1d <horAcc8+0x15d>
leaveq 
retq   
nopl   0x0(%rax)

0000000000046e60 <horAcc16>:
push   %rbp
mov    %rsp,%rbp
mov    0x350(%rdi),%rax
mov    0x8(%rax),%r8
mov    %rdx,%rax
lea    (%r8,%r8,1),%rcx
cqto   
mov    %rax,%r9
idiv   %rcx
test   %rdx,%rdx
jne    46e9d <horAcc16+0x3d>
mov    $0x1,%eax
mov    %r9,%rcx
shr    $0x3f,%rcx
lea    (%r9,%rcx,1),%rdx
sar    %rdx
cmp    %rdx,%r8
jl     46ec4 <horAcc16+0x64>
leaveq 
retq   
mov    0x3b8(%rdi),%rdi
lea    0x2c759(%rip),%rsi        # 73604 <module.47+0x196>
lea    0x2c740(%rip),%rdx        # 735f2 <module.47+0x184>
lea    0x2c754(%rip),%rcx        # 7360d <module.47+0x19f>
xor    %eax,%eax
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
sub    %r8,%rdx
lea    -0x4(%r8),%r10
cmp    $0x4,%r8
jbe    46ed6 <horAcc16+0x76>
mov    %r10,%rcx
jmp    46f04 <horAcc16+0xa4>
lea    0x2c617(%rip),%rdi        # 734f4 <module.47+0x86>
movslq (%rdi,%r8,4),%rcx
add    %rdi,%rcx
jmpq   *%rcx
mov    %r10,%rcx
jmp    46f04 <horAcc16+0xa4>
movzwl (%rsi,%r8,2),%edi
movzwl (%rsi),%r9d
add    %r9d,%edi
mov    %di,(%rsi,%r8,2)
add    $0x2,%rsi
add    $0xffffffffffffffff,%rcx
test   %rcx,%rcx
jg     46eeb <horAcc16+0x8b>
movzwl (%rsi,%r8,2),%ecx
movzwl (%rsi),%edi
add    %edi,%ecx
mov    %cx,(%rsi,%r8,2)
add    $0x2,%rsi
movzwl (%rsi,%r8,2),%ecx
movzwl (%rsi),%edi
add    %edi,%ecx
mov    %cx,(%rsi,%r8,2)
add    $0x2,%rsi
movzwl (%rsi,%r8,2),%ecx
movzwl (%rsi),%edi
add    %edi,%ecx
mov    %cx,(%rsi,%r8,2)
add    $0x2,%rsi
movzwl (%rsi,%r8,2),%ecx
movzwl (%rsi),%edi
add    %edi,%ecx
mov    %cx,(%rsi,%r8,2)
add    $0x2,%rsi
sub    %r8,%rdx
test   %rdx,%rdx
jg     46ecb <horAcc16+0x6b>
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

0000000000046f70 <horAcc32>:
push   %rbp
mov    %rsp,%rbp
mov    0x350(%rdi),%rax
mov    0x8(%rax),%r8
mov    %rdx,%rax
mov    %r8,%rcx
shl    $0x2,%rcx
cqto   
mov    %rax,%r9
idiv   %rcx
test   %rdx,%rdx
jne    46fb4 <horAcc32+0x44>
mov    $0x1,%eax
mov    %r9,%rcx
sar    %rcx
shr    $0x3e,%rcx
lea    (%r9,%rcx,1),%rdi
sar    $0x2,%rdi
cmp    %rdi,%r8
jl     46fdb <horAcc32+0x6b>
leaveq 
retq   
mov    0x3b8(%rdi),%rdi
lea    0x2c65d(%rip),%rsi        # 7361f <module.47+0x1b1>
lea    0x2c629(%rip),%rdx        # 735f2 <module.47+0x184>
lea    0x2c658(%rip),%rcx        # 73628 <module.47+0x1ba>
xor    %eax,%eax
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
sub    %r8,%rdi
lea    -0x4(%r8),%r9
cmp    $0x4,%r8
jbe    46fed <horAcc32+0x7d>
mov    %r9,%rdx
jmp    47014 <horAcc32+0xa4>
lea    0x2c514(%rip),%rdx        # 73508 <module.47+0x9a>
movslq (%rdx,%r8,4),%rcx
add    %rdx,%rcx
jmpq   *%rcx
mov    %r9,%rdx
jmp    47014 <horAcc32+0xa4>
mov    (%rsi,%r8,4),%ecx
add    (%rsi),%ecx
mov    %ecx,(%rsi,%r8,4)
add    $0x4,%rsi
add    $0xffffffffffffffff,%rdx
test   %rdx,%rdx
jg     47002 <horAcc32+0x92>
mov    (%rsi,%r8,4),%ecx
add    (%rsi),%ecx
mov    %ecx,(%rsi,%r8,4)
add    $0x4,%rsi
mov    (%rsi,%r8,4),%ecx
add    (%rsi),%ecx
mov    %ecx,(%rsi,%r8,4)
add    $0x4,%rsi
mov    (%rsi,%r8,4),%ecx
add    (%rsi),%ecx
mov    %ecx,(%rsi,%r8,4)
add    $0x4,%rsi
mov    (%rsi,%r8,4),%ecx
add    (%rsi),%ecx
mov    %ecx,(%rsi,%r8,4)
add    $0x4,%rsi
sub    %r8,%rdi
test   %rdi,%rdi
jg     46fe2 <horAcc32+0x72>
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

0000000000047060 <swabHorAcc16>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %r13,-0x8(%rbp)
mov    %r14,-0x10(%rbp)
mov    %r15,-0x18(%rbp)
mov    %rdx,%rax
shr    $0x3f,%rax
add    %rdx,%rax
sar    %rax
mov    %rdi,%r13
mov    %rsi,%r14
mov    %rax,%rsi
mov    %rdx,%r15
mov    %r14,%rdi
callq  83d0 <TIFFSwabArrayOfShort@plt>
mov    %r15,%rdx
mov    %r14,%rsi
mov    %r13,%rdi
callq  46e60 <horAcc16>
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   0x0(%rax)

00000000000470c0 <swabHorAcc32>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %r13,-0x8(%rbp)
mov    %r14,-0x10(%rbp)
mov    %r15,-0x18(%rbp)
mov    %rdx,%rax
sar    %rax
shr    $0x3e,%rax
add    %rdx,%rax
sar    $0x2,%rax
mov    %rdi,%r13
mov    %rsi,%r14
mov    %rax,%rsi
mov    %rdx,%r15
mov    %r14,%rdi
callq  8b70 <TIFFSwabArrayOfLong@plt>
mov    %r15,%rdx
mov    %r14,%rsi
mov    %r13,%rdi
callq  46f70 <horAcc32>
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)

0000000000047120 <horDiff8>:
push   %rbp
mov    %rsp,%rbp
mov    0x350(%rdi),%rax
mov    0x8(%rax),%r9
mov    %rdx,%rax
cqto   
mov    %rax,%r8
idiv   %r9
test   %rdx,%rdx
jne    4714b <horDiff8+0x2b>
mov    $0x1,%eax
cmp    %r8,%r9
jl     47172 <horDiff8+0x52>
leaveq 
retq   
mov    0x3b8(%rdi),%rdi
lea    0x2c4e1(%rip),%rsi        # 7363a <module.47+0x1cc>
lea    0x2c492(%rip),%rdx        # 735f2 <module.47+0x184>
lea    0x2c48e(%rip),%rcx        # 735f5 <module.47+0x187>
xor    %eax,%eax
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
cmp    $0x3,%r9
je     47195 <horDiff8+0x75>
cmp    $0x4,%r9
je     471aa <horDiff8+0x8a>
sub    %r9,%r8
lea    -0x1(%r8,%rsi,1),%rcx
lea    -0x4(%r9),%r10
cmp    $0x4,%r9
jbe    471c4 <horDiff8+0xa4>
mov    %r10,%rdi
jmp    471f0 <horDiff8+0xd0>
movzbl (%rsi),%edx
movzbl 0x1(%rsi),%edi
movzbl 0x2(%rsi),%r9d
lea    -0x3(%r8),%rcx
jmpq   4725b <horDiff8+0x13b>
movzbl (%rsi),%edi
movzbl 0x1(%rsi),%r9d
movzbl 0x2(%rsi),%edx
movzbl 0x3(%rsi),%r10d
lea    -0x4(%r8),%rcx
jmpq   472a0 <horDiff8+0x180>
lea    0x2c351(%rip),%rsi        # 7351c <module.47+0xae>
movslq (%rsi,%r9,4),%rdx
add    %rsi,%rdx
jmpq   *%rdx
mov    %r10,%rdi
jmp    471f0 <horDiff8+0xd0>
movzbl (%r9,%rcx,1),%esi
movzbl (%rcx),%edx
sub    %dl,%sil
mov    %sil,(%r9,%rcx,1)
add    $0xffffffffffffffff,%rcx
add    $0xffffffffffffffff,%rdi
test   %rdi,%rdi
jg     471d9 <horDiff8+0xb9>
movzbl (%r9,%rcx,1),%edx
movzbl (%rcx),%esi
sub    %sil,%dl
mov    %dl,(%r9,%rcx,1)
add    $0xffffffffffffffff,%rcx
movzbl (%r9,%rcx,1),%edx
movzbl (%rcx),%esi
sub    %sil,%dl
mov    %dl,(%r9,%rcx,1)
add    $0xffffffffffffffff,%rcx
movzbl (%r9,%rcx,1),%edx
movzbl (%rcx),%esi
sub    %sil,%dl
mov    %dl,(%r9,%rcx,1)
add    $0xffffffffffffffff,%rcx
movzbl (%r9,%rcx,1),%edx
movzbl (%rcx),%esi
sub    %sil,%dl
mov    %dl,(%r9,%rcx,1)
add    $0xffffffffffffffff,%rcx
sub    %r9,%r8
test   %r8,%r8
jg     4718a <horDiff8+0x6a>
leaveq 
retq   
mov    %r10,%rdx
mov    %r11,%rsi
mov    %rdi,%r9
mov    %r8,%rdi
lea    0x3(%rsi),%r11
movzbl (%r11),%r10d
neg    %dl
add    %r10b,%dl
mov    %dl,(%r11)
movzbl 0x4(%rsi),%r8d
mov    %r8,%rdx
sub    %dil,%dl
mov    %dl,0x4(%rsi)
movzbl 0x5(%rsi),%edi
mov    %rdi,%rdx
sub    %r9b,%dl
mov    %dl,0x5(%rsi)
add    $0xfffffffffffffffd,%rcx
test   %rcx,%rcx
jg     4724f <horDiff8+0x12f>
leaveq 
retq   
mov    %r11,%rsi
mov    %rdx,%r10
mov    %r9,%rdx
mov    %rdi,%r9
mov    %r8,%rdi
lea    0x4(%rsi),%r11
movzbl (%r11),%r8d
neg    %dil
add    %r8b,%dil
mov    %dil,(%r11)
movzbl 0x5(%rsi),%edi
neg    %r9b
add    %dil,%r9b
mov    %r9b,0x5(%rsi)
movzbl 0x6(%rsi),%r9d
neg    %dl
add    %r9b,%dl
mov    %dl,0x6(%rsi)
movzbl 0x7(%rsi),%edx
neg    %r10b
add    %dl,%r10b
mov    %r10b,0x7(%rsi)
add    $0xfffffffffffffffc,%rcx
test   %rcx,%rcx
jg     47291 <horDiff8+0x171>
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)

00000000000472f0 <horDiff16>:
push   %rbp
mov    %rsp,%rbp
mov    0x350(%rdi),%rax
mov    0x8(%rax),%r8
mov    %rdx,%rax
lea    (%r8,%r8,1),%rcx
cqto   
mov    %rax,%r9
idiv   %rcx
test   %rdx,%rdx
jne    4732d <horDiff16+0x3d>
mov    $0x1,%eax
mov    %r9,%rcx
shr    $0x3f,%rcx
lea    (%r9,%rcx,1),%rdi
sar    %rdi
cmp    %rdi,%r8
jl     47354 <horDiff16+0x64>
leaveq 
retq   
mov    0x3b8(%rdi),%rdi
lea    0x2c2ff(%rip),%rsi        # 7363a <module.47+0x1cc>
lea    0x2c2b0(%rip),%rdx        # 735f2 <module.47+0x184>
lea    0x2c2fa(%rip),%rcx        # 73643 <module.47+0x1d5>
xor    %eax,%eax
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
sub    %r8,%rdi
lea    -0x2(%rsi,%rdi,2),%rcx
lea    -0x4(%r8),%r9
cmp    $0x4,%r8
jbe    4736b <horDiff16+0x7b>
mov    %r9,%rsi
jmp    4739a <horDiff16+0xaa>
lea    0x2c1be(%rip),%rsi        # 73530 <module.47+0xc2>
movslq (%rsi,%r8,4),%rdx
add    %rsi,%rdx
jmpq   *%rdx
mov    %r9,%rsi
jmp    4739a <horDiff16+0xaa>
movzwl (%rcx,%r8,2),%edx
movzwl (%rcx),%r10d
sub    %r10w,%dx
mov    %dx,(%rcx,%r8,2)
add    $0xfffffffffffffffe,%rcx
add    $0xffffffffffffffff,%rsi
test   %rsi,%rsi
jg     47380 <horDiff16+0x90>
movzwl (%rcx,%r8,2),%edx
movzwl (%rcx),%esi
sub    %si,%dx
mov    %dx,(%rcx,%r8,2)
add    $0xfffffffffffffffe,%rcx
movzwl (%rcx,%r8,2),%edx
movzwl (%rcx),%esi
sub    %si,%dx
mov    %dx,(%rcx,%r8,2)
add    $0xfffffffffffffffe,%rcx
movzwl (%rcx,%r8,2),%edx
movzwl (%rcx),%esi
sub    %si,%dx
mov    %dx,(%rcx,%r8,2)
add    $0xfffffffffffffffe,%rcx
movzwl (%rcx,%r8,2),%edx
movzwl (%rcx),%esi
sub    %si,%dx
mov    %dx,(%rcx,%r8,2)
add    $0xfffffffffffffffe,%rcx
sub    %r8,%rdi
test   %rdi,%rdi
jg     47360 <horDiff16+0x70>
leaveq 
retq   
nopl   (%rax)

0000000000047400 <horDiff32>:
push   %rbp
mov    %rsp,%rbp
mov    0x350(%rdi),%rax
mov    0x8(%rax),%r8
mov    %rdx,%rax
mov    %r8,%rcx
shl    $0x2,%rcx
cqto   
mov    %rax,%r9
idiv   %rcx
test   %rdx,%rdx
jne    47444 <horDiff32+0x44>
mov    $0x1,%eax
mov    %r9,%rcx
sar    %rcx
shr    $0x3e,%rcx
lea    (%r9,%rcx,1),%rdi
sar    $0x2,%rdi
cmp    %rdi,%r8
jl     4746b <horDiff32+0x6b>
leaveq 
retq   
mov    0x3b8(%rdi),%rdi
lea    0x2c204(%rip),%rsi        # 73656 <module.47+0x1e8>
lea    0x2c199(%rip),%rdx        # 735f2 <module.47+0x184>
lea    0x2c200(%rip),%rcx        # 73660 <module.47+0x1f2>
xor    %eax,%eax
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
sub    %r8,%rdi
lea    -0x4(%rsi,%rdi,4),%rcx
lea    -0x4(%r8),%r9
cmp    $0x4,%r8
jbe    47482 <horDiff32+0x82>
mov    %r9,%rsi
jmp    474ad <horDiff32+0xad>
lea    0x2c0bb(%rip),%rdx        # 73544 <module.47+0xd6>
movslq (%rdx,%r8,4),%rsi
add    %rsi,%rdx
jmpq   *%rdx
mov    %r9,%rsi
jmp    474ad <horDiff32+0xad>
mov    (%rcx,%r8,4),%edx
mov    (%rcx),%r10d
sub    %r10d,%edx
mov    %edx,(%rcx,%r8,4)
add    $0xfffffffffffffffc,%rcx
add    $0xffffffffffffffff,%rsi
test   %rsi,%rsi
jg     47497 <horDiff32+0x97>
mov    (%rcx,%r8,4),%edx
mov    (%rcx),%esi
sub    %esi,%edx
mov    %edx,(%rcx,%r8,4)
add    $0xfffffffffffffffc,%rcx
mov    (%rcx,%r8,4),%edx
mov    (%rcx),%esi
sub    %esi,%edx
mov    %edx,(%rcx,%r8,4)
add    $0xfffffffffffffffc,%rcx
mov    (%rcx,%r8,4),%edx
mov    (%rcx),%esi
sub    %esi,%edx
mov    %edx,(%rcx,%r8,4)
add    $0xfffffffffffffffc,%rcx
mov    (%rcx,%r8,4),%edx
mov    (%rcx),%esi
sub    %esi,%edx
mov    %edx,(%rcx,%r8,4)
add    $0xfffffffffffffffc,%rcx
sub    %r8,%rdi
test   %rdi,%rdi
jg     47477 <horDiff32+0x77>
leaveq 
retq   

0000000000047500 <swabHorDiff16>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x10(%rbp)
mov    %rsi,-0x8(%rbp)
mov    %rdx,%r15
callq  472f0 <horDiff16>
test   %eax,%eax
jne    47524 <swabHorDiff16+0x24>
xor    %eax,%eax
mov    -0x10(%rbp),%r15
leaveq 
retq   
mov    %r15,%rax
shr    $0x3f,%rax
lea    (%r15,%rax,1),%rsi
sar    %rsi
mov    -0x8(%rbp),%rdi
callq  83d0 <TIFFSwabArrayOfShort@plt>
mov    $0x1,%eax
mov    -0x10(%rbp),%r15
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)

0000000000047550 <swabHorDiff32>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x10(%rbp)
mov    %rsi,-0x8(%rbp)
mov    %rdx,%r15
callq  47400 <horDiff32>
test   %eax,%eax
jne    47574 <swabHorDiff32+0x24>
xor    %eax,%eax
mov    -0x10(%rbp),%r15
leaveq 
retq   
mov    %r15,%rax
sar    %rax
shr    $0x3e,%rax
lea    (%r15,%rax,1),%rsi
sar    $0x2,%rsi
mov    -0x8(%rbp),%rdi
callq  8b70 <TIFFSwabArrayOfLong@plt>
mov    $0x1,%eax
mov    -0x10(%rbp),%r15
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

00000000000475a0 <fpAcc>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
movzwl 0x74(%rdi),%eax
shr    $0x3,%eax
mov    %rax,-0x18(%rbp)
mov    %eax,%r9d
mov    0x350(%rdi),%rax
mov    0x8(%rax),%r8
mov    %rdx,%rax
mov    %r9,%rcx
imul   %r8,%rcx
cqto   
mov    %rax,%r10
idiv   %rcx
test   %rdx,%rdx
jne    475f9 <fpAcc+0x59>
mov    %r10,%rdi
mov    %r8,-0x28(%rbp)
mov    %r10,-0x20(%rbp)
mov    %rsi,-0x8(%rbp)
mov    %r9,-0x10(%rbp)
callq  8440 <_TIFFmalloc@plt>
test   %rax,%rax
jne    47620 <fpAcc+0x80>
xor    %eax,%eax
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
lea    0x2c06a(%rip),%rsi        # 73673 <module.47+0x205>
lea    0x2bfe2(%rip),%rdx        # 735f2 <module.47+0x184>
lea    0x2c062(%rip),%rcx        # 73679 <module.47+0x20b>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
mov    -0x28(%rbp),%r9
lea    -0x4(%r9),%rdi
mov    -0x8(%rbp),%rcx
mov    -0x20(%rbp),%rsi
jmp    47695 <fpAcc+0xf5>
lea    0x2bf1f(%rip),%r8        # 73558 <module.47+0xea>
movslq (%r8,%r9,4),%rdx
add    %r8,%rdx
jmpq   *%rdx
movzbl (%r9,%rcx,1),%edx
movzbl (%rcx),%r8d
add    %r8d,%edx
mov    %dl,(%r9,%rcx,1)
add    $0x1,%rcx
movzbl (%r9,%rcx,1),%edx
movzbl (%rcx),%r8d
add    %r8d,%edx
mov    %dl,(%r9,%rcx,1)
add    $0x1,%rcx
movzbl (%r9,%rcx,1),%edx
movzbl (%rcx),%r8d
add    %r8d,%edx
mov    %dl,(%r9,%rcx,1)
add    $0x1,%rcx
movzbl (%r9,%rcx,1),%edx
movzbl (%rcx),%r8d
add    %r8d,%edx
mov    %dl,(%r9,%rcx,1)
add    $0x1,%rcx
sub    %r9,%rsi
cmp    %rsi,%r9
jl     476ef <fpAcc+0x14f>
mov    %rax,%rdi
mov    -0x20(%rbp),%rax
cqto   
mov    %rax,%r9
mov    -0x10(%rbp),%rcx
idiv   %rcx
mov    %rdi,%rdx
mov    -0x8(%rbp),%r8
mov    %r8,%rsi
mov    %r12,-0x8(%rbp)
mov    %r13,-0x10(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %r8,%r12
mov    %rax,%r13
mov    %rdi,%r14
mov    %rdx,%rdi
mov    %r9,%rdx
mov    %rcx,%r15
callq  8790 <_TIFFmemcpy@plt>
xor    %r9d,%r9d
mov    -0x18(%rbp),%r8
mov    %r9,%rdx
jmp    47729 <fpAcc+0x189>
mov    %rdi,%rdx
jmp    47765 <fpAcc+0x1c5>
cmp    $0x4,%r9
jbe    47632 <fpAcc+0x92>
mov    %rdi,%rdx
jmp    47765 <fpAcc+0x1c5>
mov    %r8,%rsi
sub    %ecx,%esi
add    $0xffffffff,%esi
mov    %esi,%esi
imul   %r13,%rsi
add    %rdx,%rsi
movzbl (%r14,%rsi,1),%edi
mov    %ecx,%esi
add    %r12,%rsi
mov    %dil,(%rsi,%rax,1)
add    $0x1,%ecx
cmp    %r8d,%ecx
jb     476fe <fpAcc+0x15e>
add    $0x1,%rdx
cmp    %r13,%rdx
jl     4776f <fpAcc+0x1cf>
mov    %r14,%rdi
callq  8bb0 <_TIFFfree@plt>
mov    $0x1,%eax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
leaveq 
retq   
movzbl (%r9,%rcx,1),%r10d
movzbl (%rcx),%r8d
add    %r10d,%r8d
mov    %r8b,(%r9,%rcx,1)
add    $0x1,%rcx
add    $0xffffffffffffffff,%rdx
test   %rdx,%rdx
jg     4774d <fpAcc+0x1ad>
jmpq   47642 <fpAcc+0xa2>
mov    %r15,%rax
imul   %rdx,%rax
mov    %r9,%rcx
jmp    47720 <fpAcc+0x180>
nopl   0x0(%rax,%rax,1)

0000000000047780 <fpDiff>:
push   %rbp
mov    %rsp,%rbp
sub    $0x40,%rsp
movzwl 0x74(%rdi),%ecx
shr    $0x3,%ecx
mov    %ecx,%r9d
mov    0x350(%rdi),%rax
mov    0x8(%rax),%rax
mov    %rax,-0x20(%rbp)
mov    %r9,%r8
imul   %rax,%r8
mov    %rdx,%rax
cqto   
mov    %rax,%r10
idiv   %r8
test   %rdx,%rdx
jne    477d9 <fpDiff+0x59>
mov    %r10,%rdi
mov    %r10,-0x30(%rbp)
mov    %r9,-0x28(%rbp)
mov    %rsi,-0x18(%rbp)
mov    %rcx,-0x38(%rbp)
callq  8440 <_TIFFmalloc@plt>
test   %rax,%rax
jne    47800 <fpDiff+0x80>
xor    %eax,%eax
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
lea    0x2bea4(%rip),%rsi        # 7368d <module.47+0x21f>
lea    0x2be02(%rip),%rdx        # 735f2 <module.47+0x184>
lea    0x2be9d(%rip),%rcx        # 73694 <module.47+0x226>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
mov    %rax,%rdi
mov    -0x30(%rbp),%rax
cqto   
mov    %rbx,%r8
mov    %rax,%rbx
mov    -0x28(%rbp),%rcx
idiv   %rcx
mov    %rdi,%r9
mov    -0x18(%rbp),%r10
mov    %r10,%rsi
mov    %rbx,%rdx
mov    %r8,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x28(%rbp)
mov    %r15,-0x30(%rbp)
mov    %r10,%r12
mov    %rdi,%r13
mov    %r9,%rdi
mov    %rax,%r14
mov    %rcx,%r15
callq  8790 <_TIFFmemcpy@plt>
xor    %edi,%edi
mov    -0x38(%rbp),%r8
mov    %rdi,%rdx
jmp    47881 <fpDiff+0x101>
mov    %ecx,%eax
add    %r13,%rax
movzbl (%rax,%r9,1),%esi
mov    %r8,%rax
sub    %ecx,%eax
add    $0xffffffff,%eax
mov    %eax,%eax
imul   %r14,%rax
add    %rdx,%rax
mov    %sil,(%r12,%rax,1)
add    $0x1,%ecx
cmp    %r8d,%ecx
jb     47856 <fpDiff+0xd6>
add    $0x1,%rdx
cmp    %r14,%rdx
jl     478a3 <fpDiff+0x123>
mov    %r13,%rdi
callq  8bb0 <_TIFFfree@plt>
mov    -0x20(%rbp),%r8
lea    -0x4(%r8),%rdi
mov    %rbx,%rax
sub    %r8,%rax
lea    -0x1(%rax,%r12,1),%rcx
jmp    4790a <fpDiff+0x18a>
mov    %r15,%r9
imul   %rdx,%r9
mov    %rdi,%rcx
jmp    47878 <fpDiff+0xf8>
lea    0x2bcb6(%rip),%rdx        # 7356c <module.47+0xfe>
movslq (%rdx,%r8,4),%rax
add    %rdx,%rax
jmpq   *%rax
movzbl (%r8,%rcx,1),%eax
movzbl (%rcx),%edx
sub    %dl,%al
mov    %al,(%r8,%rcx,1)
add    $0xffffffffffffffff,%rcx
movzbl (%r8,%rcx,1),%eax
movzbl (%rcx),%edx
sub    %dl,%al
mov    %al,(%r8,%rcx,1)
add    $0xffffffffffffffff,%rcx
movzbl (%r8,%rcx,1),%eax
movzbl (%rcx),%edx
sub    %dl,%al
mov    %al,(%r8,%rcx,1)
add    $0xffffffffffffffff,%rcx
movzbl (%r8,%rcx,1),%eax
movzbl (%rcx),%edx
sub    %dl,%al
mov    %al,(%r8,%rcx,1)
add    $0xffffffffffffffff,%rcx
sub    %r8,%rbx
cmp    %rbx,%r8
jl     4792f <fpDiff+0x1af>
mov    $0x1,%eax
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
mov    %rdi,%rsi
jmp    47954 <fpDiff+0x1d4>
cmp    $0x4,%r8
jbe    478af <fpDiff+0x12f>
mov    %rdi,%rsi
jmp    47954 <fpDiff+0x1d4>
movzbl (%r8,%rcx,1),%edx
movzbl (%rcx),%eax
sub    %al,%dl
mov    %dl,(%r8,%rcx,1)
add    $0xffffffffffffffff,%rcx
add    $0xffffffffffffffff,%rsi
test   %rsi,%rsi
jg     4793e <fpDiff+0x1be>
jmpq   478bf <fpDiff+0x13f>
xchg   %ax,%ax

0000000000047960 <PredictorDecodeRow>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
lea    0x2bc19(%rip),%r9        # 73588 <module.47+0x11a>
lea    0x2bd3e(%rip),%r10        # 736b4 <module.47+0x246>
mov    0x350(%rdi),%r11
test   %r11,%r11
jne    47999 <PredictorDecodeRow+0x39>
mov    %r10,%rcx
mov    %r9,%rsi
lea    0x2bd1a(%rip),%rdi        # 736a9 <module.47+0x23b>
mov    $0x1cf,%edx
callq  8490 <__assert_fail@plt>
mov    0x38(%r11),%rax
test   %rax,%rax
jne    479b9 <PredictorDecodeRow+0x59>
mov    %r10,%rcx
mov    %r9,%rsi
lea    0x2bd18(%rip),%rdi        # 736c7 <module.47+0x259>
mov    $0x1d0,%edx
callq  8490 <__assert_fail@plt>
mov    0x50(%r11),%r8
test   %r8,%r8
jne    479d9 <PredictorDecodeRow+0x79>
mov    %r10,%rcx
mov    %r9,%rsi
lea    0x2bd0e(%rip),%rdi        # 736dd <module.47+0x26f>
mov    $0x1d1,%edx
callq  8490 <__assert_fail@plt>
mov    %rdi,%r9
mov    %rsi,%r8
mov    %rdx,%r10
mov    %r12,-0x8(%rbp)
mov    %r13,-0x10(%rbp)
mov    %r14,-0x18(%rbp)
mov    %r15,-0x20(%rbp)
mov    %r11,%r12
mov    %rdi,%r13
mov    %r9,%rdi
mov    %rsi,%r14
mov    %r8,%rsi
mov    %rdx,%r15
mov    %r10,%rdx
callq  *%rax
test   %eax,%eax
jne    47a21 <PredictorDecodeRow+0xc1>
xor    %eax,%eax
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
leaveq 
retq   
mov    %r15,%rdx
mov    %r14,%rsi
mov    %r13,%rdi
callq  *0x50(%r12)
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   0x0(%rax)

0000000000047a50 <PredictorDecodeTile>:
push   %rbp
mov    %rsp,%rbp
sub    $0x40,%rsp
lea    0x2bc96(%rip),%r10        # 736f5 <module.47+0x287>
lea    0x2bb22(%rip),%r8        # 73588 <module.47+0x11a>
mov    0x350(%rdi),%r9
test   %r9,%r9
jne    47a89 <PredictorDecodeTile+0x39>
mov    %r10,%rcx
mov    %r8,%rsi
lea    0x2bc2a(%rip),%rdi        # 736a9 <module.47+0x23b>
mov    $0x1e5,%edx
callq  8490 <__assert_fail@plt>
mov    0x48(%r9),%rax
test   %rax,%rax
jne    47aa9 <PredictorDecodeTile+0x59>
mov    %r10,%rcx
mov    %r8,%rsi
lea    0x2bc6a(%rip),%rdi        # 73709 <module.47+0x29b>
mov    $0x1e6,%edx
callq  8490 <__assert_fail@plt>
mov    %rdi,%r10
mov    %rsi,%r8
mov    %rdx,%r11
mov    %r15,-0x38(%rbp)
mov    %rdx,-0x30(%rbp)
mov    %rdi,-0x20(%rbp)
mov    %rsi,-0x28(%rbp)
mov    %r11,%rdx
mov    %r8,%rsi
mov    %r10,%rdi
mov    %r9,%r15
callq  *%rax
test   %eax,%eax
jne    47adc <PredictorDecodeTile+0x8c>
mov    -0x38(%rbp),%r15
xor    %eax,%eax
leaveq 
retq   
mov    0x10(%r15),%rcx
test   %rcx,%rcx
jg     47b04 <PredictorDecodeTile+0xb4>
lea    0x2bc34(%rip),%rdi        # 73720 <module.47+0x2b2>
mov    $0x1ea,%edx
lea    0x2bbfd(%rip),%rcx        # 736f5 <module.47+0x287>
lea    0x2ba89(%rip),%rsi        # 73588 <module.47+0x11a>
callq  8490 <__assert_fail@plt>
mov    -0x30(%rbp),%rax
cqto   
mov    %rax,%rsi
idiv   %rcx
test   %rdx,%rdx
jne    47b3e <PredictorDecodeTile+0xee>
mov    0x50(%r15),%rax
test   %rax,%rax
je     47b6d <PredictorDecodeTile+0x11d>
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x30(%rbp)
mov    %rsi,%rbx
mov    %rcx,%r12
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r13
jmp    47ba3 <PredictorDecodeTile+0x153>
xor    %eax,%eax
mov    -0x20(%rbp),%rcx
mov    0x3b8(%rcx),%rdi
lea    0x2baa0(%rip),%rdx        # 735f2 <module.47+0x184>
lea    0x2bbd3(%rip),%rcx        # 7372c <module.47+0x2be>
lea    0x2bb95(%rip),%rsi        # 736f5 <module.47+0x287>
callq  8a00 <TIFFErrorExt@plt>
mov    -0x38(%rbp),%r15
xor    %eax,%eax
leaveq 
retq   
lea    0x2bb69(%rip),%rdi        # 736dd <module.47+0x26f>
mov    $0x1f1,%edx
lea    0x2bb75(%rip),%rcx        # 736f5 <module.47+0x287>
lea    0x2ba01(%rip),%rsi        # 73588 <module.47+0x11a>
callq  8490 <__assert_fail@plt>
mov    %r13,%rdi
mov    %r14,%rsi
mov    %r12,%rdx
callq  *0x50(%r15)
test   %eax,%eax
je     47bc3 <PredictorDecodeTile+0x173>
sub    %r12,%rbx
add    %r12,%r14
test   %rbx,%rbx
jg     47b8c <PredictorDecodeTile+0x13c>
mov    $0x1,%eax
mov    -0x30(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x38(%rbp),%r15
leaveq 
retq   
mov    -0x30(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x38(%rbp),%r15
xor    %eax,%eax
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

0000000000047be0 <PredictorEncodeRow>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
lea    0x2b999(%rip),%r9        # 73588 <module.47+0x11a>
lea    0x2bb48(%rip),%r10        # 7373e <module.47+0x2d0>
mov    0x350(%rdi),%r11
test   %r11,%r11
jne    47c19 <PredictorEncodeRow+0x39>
mov    %r10,%rcx
mov    %r9,%rsi
lea    0x2ba9a(%rip),%rdi        # 736a9 <module.47+0x23b>
mov    $0x2b6,%edx
callq  8490 <__assert_fail@plt>
mov    0x30(%r11),%rax
test   %rax,%rax
jne    47c39 <PredictorEncodeRow+0x59>
mov    %r10,%rcx
mov    %r9,%rsi
lea    0x2bb22(%rip),%rdi        # 73751 <module.47+0x2e3>
mov    $0x2b7,%edx
callq  8490 <__assert_fail@plt>
mov    0x18(%r11),%r8
test   %r8,%r8
jne    47c59 <PredictorEncodeRow+0x79>
mov    %r10,%rcx
mov    %r9,%rsi
lea    0x2bb1a(%rip),%rdi        # 73769 <module.47+0x2fb>
mov    $0x2b8,%edx
callq  8490 <__assert_fail@plt>
mov    %rdi,%r9
mov    %rsi,%r8
mov    %rdx,%r10
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rcx,-0x8(%rbp)
mov    %r11,%r12
mov    %rdi,%r13
mov    %r9,%rdi
mov    %rdx,%r14
mov    %r10,%rdx
mov    %rsi,%r15
mov    %r8,%rsi
callq  *%rax
test   %eax,%eax
jne    47ca5 <PredictorEncodeRow+0xc5>
xor    %eax,%eax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
leaveq 
retq   
mov    %r14,%rdx
mov    %r15,%rsi
mov    %r13,%rdi
mov    -0x8(%rbp),%rcx
callq  *0x18(%r12)
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
leaveq 
retq   
nopl   0x0(%rax)

0000000000047cd0 <PredictorEncodeTile>:
push   %rbp
mov    %rsp,%rbp
sub    $0x40,%rsp
lea    0x2bab4(%rip),%r8        # 73793 <module.40+0x14>
lea    0x2b8a2(%rip),%r10        # 73588 <module.47+0x11a>
mov    0x350(%rdi),%r9
test   %r9,%r9
jne    47d09 <PredictorEncodeTile+0x39>
mov    %r8,%rcx
mov    %r10,%rsi
lea    0x2b9aa(%rip),%rdi        # 736a9 <module.47+0x23b>
mov    $0x2ca,%edx
callq  8490 <__assert_fail@plt>
mov    0x30(%r9),%rax
test   %rax,%rax
jne    47d29 <PredictorEncodeTile+0x59>
mov    %r8,%rcx
mov    %r10,%rsi
lea    0x2ba32(%rip),%rdi        # 73751 <module.47+0x2e3>
mov    $0x2cb,%edx
callq  8490 <__assert_fail@plt>
mov    0x28(%r9),%rax
test   %rax,%rax
jne    47d49 <PredictorEncodeTile+0x79>
mov    %r8,%rcx
mov    %r10,%rsi
lea    0x2ba68(%rip),%rdi        # 737a7 <module.40+0x28>
mov    $0x2cc,%edx
callq  8490 <__assert_fail@plt>
mov    %rdx,%rax
mov    %r12,-0x28(%rbp)
mov    %r13,-0x30(%rbp)
mov    %r14,-0x38(%rbp)
mov    %r15,-0x40(%rbp)
mov    %rcx,-0x18(%rbp)
mov    %r9,%r12
mov    %rdi,%r13
mov    %rax,%rdi
mov    %rsi,%r14
mov    %rdx,%r15
callq  8440 <_TIFFmalloc@plt>
test   %rax,%rax
je     47db3 <PredictorEncodeTile+0xe3>
mov    %r14,%rsi
mov    %rax,%r14
mov    %r14,%rdi
mov    %r15,%rdx
callq  8720 <memcpy@plt>
mov    0x10(%r12),%rax
test   %rax,%rax
jg     47de6 <PredictorEncodeTile+0x116>
lea    0x2b985(%rip),%rdi        # 73720 <module.47+0x2b2>
mov    $0x2de,%edx
lea    0x2b7e1(%rip),%rsi        # 73588 <module.47+0x11a>
lea    0x2b9e5(%rip),%rcx        # 73793 <module.40+0x14>
callq  8490 <__assert_fail@plt>
xor    %eax,%eax
mov    0x3b8(%r13),%rdi
mov    %r15,%rcx
lea    0x2b9b9(%rip),%rsi        # 7377f <module.40>
lea    0x2b9f1(%rip),%rdx        # 737be <module.40+0x3f>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x40(%rbp),%r15
mov    -0x38(%rbp),%r14
mov    -0x30(%rbp),%r13
mov    -0x28(%rbp),%r12
leaveq 
retq   
mov    %r15,%rcx
mov    %rax,%r15
mov    %rcx,%rax
cqto   
mov    %rbx,%r8
mov    %rax,%rbx
idiv   %r15
test   %rdx,%rdx
jne    47e0d <PredictorEncodeTile+0x13d>
mov    %r14,-0x8(%rbp)
mov    %rbx,-0x10(%rbp)
mov    %r8,-0x20(%rbp)
jmp    47e63 <PredictorEncodeTile+0x193>
xor    %eax,%eax
mov    0x3b8(%r13),%rdi
mov    %r8,%rbx
lea    0x2b7d2(%rip),%rdx        # 735f2 <module.47+0x184>
lea    0x2b9c6(%rip),%rcx        # 737ed <module.40+0x6e>
lea    0x2b965(%rip),%rsi        # 73793 <module.40+0x14>
callq  8a00 <TIFFErrorExt@plt>
mov    %r14,%rdi
callq  8bb0 <_TIFFfree@plt>
xor    %eax,%eax
mov    -0x40(%rbp),%r15
mov    -0x38(%rbp),%r14
mov    -0x30(%rbp),%r13
mov    -0x28(%rbp),%r12
leaveq 
retq   
mov    %r13,%rdi
mov    %r14,%rsi
mov    %r15,%rdx
callq  *0x30(%r12)
sub    %r15,%rbx
add    %r15,%r14
test   %rbx,%rbx
jg     47e4f <PredictorEncodeTile+0x17f>
mov    %r13,%rdi
mov    -0x8(%rbp),%rbx
mov    %rbx,%rsi
mov    -0x10(%rbp),%rdx
mov    -0x18(%rbp),%rcx
callq  *0x28(%r12)
mov    %rbx,%rdi
mov    %rax,%r13
callq  8bb0 <_TIFFfree@plt>
mov    %r13,%rax
mov    -0x20(%rbp),%rbx
mov    -0x40(%rbp),%r15
mov    -0x38(%rbp),%r14
mov    -0x30(%rbp),%r13
mov    -0x28(%rbp),%r12
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

0000000000047eb0 <PredictorSetup>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    $0x1,%eax
lea    0x2b93a(%rip),%rsi        # 737fe <module.45>
mov    0x350(%rdi),%rdx
movslq (%rdx),%rcx
cmp    $0x1,%ecx
jle    47ef6 <PredictorSetup+0x46>
cmp    $0x2,%ecx
je     47efd <PredictorSetup+0x4d>
cmp    $0x3,%ecx
je     47f3c <PredictorSetup+0x8c>
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
lea    0x2b9e0(%rip),%rdx        # 738cd <module.45+0xcf>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
cmp    $0x1,%ecx
jne    47edd <PredictorSetup+0x2d>
leaveq 
retq   
movzwl 0x74(%rdi),%ecx
cmp    $0x8,%cx
jne    47f7b <PredictorSetup+0xcb>
movzwl 0xaa(%rdi),%ecx
cmp    $0x1,%cx
jne    47f1b <PredictorSetup+0x6b>
movzwl 0x82(%rdi),%eax
movslq %eax,%rax
mov    %rax,0x8(%rdx)
mov    0x10(%rdi),%eax
and    $0x400,%eax
test   %eax,%eax
jne    47fa0 <PredictorSetup+0xf0>
mov    %r15,-0x8(%rbp)
mov    %rdx,%r15
callq  8410 <TIFFScanlineSize@plt>
jmp    47fac <PredictorSetup+0xfc>
movzwl 0x76(%rdi),%ecx
cmp    $0x3,%cx
jne    47fbd <PredictorSetup+0x10d>
movzwl 0x74(%rdi),%ecx
cmp    $0x10,%cx
je     47f07 <PredictorSetup+0x57>
cmp    $0x18,%cx
je     47f07 <PredictorSetup+0x57>
cmp    $0x20,%cx
je     47f07 <PredictorSetup+0x57>
cmp    $0x40,%cx
je     47f07 <PredictorSetup+0x57>
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
lea    0x2b91e(%rip),%rdx        # 73890 <module.45+0x92>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
cmp    $0x10,%cx
je     47f07 <PredictorSetup+0x57>
cmp    $0x20,%cx
je     47f07 <PredictorSetup+0x57>
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
lea    0x2b876(%rip),%rdx        # 7380d <module.45+0xf>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
mov    %r15,-0x8(%rbp)
mov    %rdx,%r15
callq  80d0 <TIFFTileRowSize@plt>
mov    %rax,0x10(%r15)
test   %rax,%rax
jne    47fd6 <PredictorSetup+0x126>
mov    -0x8(%rbp),%r15
xor    %eax,%eax
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
lea    0x2b886(%rip),%rdx        # 73853 <module.45+0x55>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
mov    $0x1,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   0x0(%rax)

0000000000047ff0 <PredictorSetupDecode>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %rdi,-0x10(%rbp)
mov    0x350(%rdi),%rax
mov    %rax,-0x8(%rbp)
mov    0x70(%rax),%rax
callq  *%rax
test   %eax,%eax
jne    48015 <PredictorSetupDecode+0x25>
xor    %eax,%eax
leaveq 
retq   
mov    -0x10(%rbp),%rdi
callq  47eb0 <PredictorSetup>
test   %eax,%eax
jne    48026 <PredictorSetupDecode+0x36>
xor    %eax,%eax
leaveq 
retq   
mov    0x31f1b(%rip),%r9        # 79f48 <_TIFFNoPostDecode@@Base+0x2f598>
mov    $0x1,%eax
lea    -0x5e9(%rip),%rdi        # 47a50 <PredictorDecodeTile>
lea    -0x6e0(%rip),%rsi        # 47960 <PredictorDecodeRow>
mov    -0x8(%rbp),%r11
movslq (%r11),%rcx
cmp    $0x2,%ecx
je     48053 <PredictorSetupDecode+0x63>
cmp    $0x3,%ecx
je     48086 <PredictorSetupDecode+0x96>
leaveq 
retq   
lea    -0x11fa(%rip),%r8        # 46e60 <horAcc16>
lea    -0x10f1(%rip),%rdx        # 46f70 <horAcc32>
mov    -0x10(%rbp),%r10
movzwl 0x74(%r10),%ecx
cmp    $0xf,%cx
jbe    480df <PredictorSetupDecode+0xef>
cmp    $0x10,%cx
je     4813b <PredictorSetupDecode+0x14b>
cmp    $0x20,%cx
jne    480f0 <PredictorSetupDecode+0x100>
mov    %rdx,0x50(%r11)
jmp    480f0 <PredictorSetupDecode+0x100>
lea    -0xaed(%rip),%rcx        # 475a0 <fpAcc>
mov    %rcx,0x50(%r11)
mov    -0x10(%rbp),%rdx
mov    0x2f8(%rdx),%rcx
cmp    %rsi,%rcx
je     480d0 <PredictorSetupDecode+0xe0>
mov    %rcx,0x38(%r11)
mov    %rsi,0x2f8(%rdx)
mov    0x308(%rdx),%rcx
mov    %rcx,0x40(%r11)
mov    %rdi,0x308(%rdx)
mov    0x318(%rdx),%rcx
mov    %rcx,0x48(%r11)
mov    %rdi,0x318(%rdx)
mov    0x10(%rdx),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
jne    48141 <PredictorSetupDecode+0x151>
leaveq 
retq   
cmp    $0x8,%cx
jne    480f0 <PredictorSetupDecode+0x100>
lea    -0x142c(%rip),%rcx        # 46cc0 <horAcc8>
mov    %rcx,0x50(%r11)
mov    0x2f8(%r10),%rcx
cmp    %rsi,%rcx
je     4812b <PredictorSetupDecode+0x13b>
mov    %rcx,0x38(%r11)
mov    %rsi,0x2f8(%r10)
mov    0x308(%r10),%rcx
mov    %rcx,0x40(%r11)
mov    %rdi,0x308(%r10)
mov    0x318(%r10),%rcx
mov    %rcx,0x48(%r11)
mov    %rdi,0x318(%r10)
mov    0x10(%r10),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
jne    4814a <PredictorSetupDecode+0x15a>
leaveq 
retq   
mov    %r8,0x50(%r11)
jmp    480f0 <PredictorSetupDecode+0x100>
mov    %r9,0x3e8(%rdx)
leaveq 
retq   
mov    0x50(%r11),%rcx
cmp    %r8,%rcx
je     4815a <PredictorSetupDecode+0x16a>
cmp    %rdx,%rcx
je     4816e <PredictorSetupDecode+0x17e>
leaveq 
retq   
lea    -0x1101(%rip),%rcx        # 47060 <swabHorAcc16>
mov    %rcx,0x50(%r11)
mov    %r9,0x3e8(%r10)
leaveq 
retq   
lea    -0x10b5(%rip),%rcx        # 470c0 <swabHorAcc32>
mov    %rcx,0x50(%r11)
mov    %r9,0x3e8(%r10)
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   (%rax)

0000000000048190 <PredictorSetupEncode>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %rdi,-0x10(%rbp)
mov    0x350(%rdi),%rax
mov    %rax,-0x8(%rbp)
mov    0x78(%rax),%rax
callq  *%rax
test   %eax,%eax
jne    481b5 <PredictorSetupEncode+0x25>
xor    %eax,%eax
leaveq 
retq   
mov    -0x10(%rbp),%rdi
callq  47eb0 <PredictorSetup>
test   %eax,%eax
jne    481c6 <PredictorSetupEncode+0x36>
xor    %eax,%eax
leaveq 
retq   
mov    $0x1,%eax
lea    -0x502(%rip),%r8        # 47cd0 <PredictorEncodeTile>
lea    -0x5f9(%rip),%rdi        # 47be0 <PredictorEncodeRow>
mov    -0x8(%rbp),%r10
movslq (%r10),%rcx
cmp    $0x2,%ecx
je     481ec <PredictorSetupEncode+0x5c>
cmp    $0x3,%ecx
je     4821f <PredictorSetupEncode+0x8f>
leaveq 
retq   
lea    -0xf03(%rip),%rsi        # 472f0 <horDiff16>
lea    -0xdfa(%rip),%rdx        # 47400 <horDiff32>
mov    -0x10(%rbp),%r9
movzwl 0x74(%r9),%ecx
cmp    $0xf,%cx
jbe    4823c <PredictorSetupEncode+0xac>
cmp    $0x10,%cx
je     48298 <PredictorSetupEncode+0x108>
cmp    $0x20,%cx
jne    4824d <PredictorSetupEncode+0xbd>
mov    %rdx,0x30(%r10)
jmp    4824d <PredictorSetupEncode+0xbd>
lea    -0xaa6(%rip),%rcx        # 47780 <fpDiff>
mov    %rcx,0x30(%r10)
mov    -0x10(%rbp),%rdx
mov    0x300(%rdx),%rcx
cmp    %rdi,%rcx
jne    4829e <PredictorSetupEncode+0x10e>
leaveq 
retq   
cmp    $0x8,%cx
jne    4824d <PredictorSetupEncode+0xbd>
lea    -0x1129(%rip),%rcx        # 47120 <horDiff8>
mov    %rcx,0x30(%r10)
mov    0x300(%r9),%rcx
cmp    %rdi,%rcx
je     48288 <PredictorSetupEncode+0xf8>
mov    %rcx,0x18(%r10)
mov    %rdi,0x300(%r9)
mov    0x310(%r9),%rcx
mov    %rcx,0x20(%r10)
mov    %r8,0x310(%r9)
mov    0x320(%r9),%rcx
mov    %rcx,0x28(%r10)
mov    %r8,0x320(%r9)
mov    0x10(%r9),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
jne    482cf <PredictorSetupEncode+0x13f>
leaveq 
retq   
mov    %rsi,0x30(%r10)
jmp    4824d <PredictorSetupEncode+0xbd>
mov    %rcx,0x18(%r10)
mov    %rdi,0x300(%rdx)
mov    0x310(%rdx),%rcx
mov    %rcx,0x20(%r10)
mov    %r8,0x310(%rdx)
mov    0x320(%rdx),%rcx
mov    %rcx,0x28(%r10)
mov    %r8,0x320(%rdx)
leaveq 
retq   
mov    0x31c72(%rip),%rdi        # 79f48 <_TIFFNoPostDecode@@Base+0x2f598>
mov    0x30(%r10),%rcx
cmp    %rsi,%rcx
je     482e6 <PredictorSetupEncode+0x156>
cmp    %rdx,%rcx
je     482fa <PredictorSetupEncode+0x16a>
leaveq 
retq   
lea    -0xded(%rip),%rcx        # 47500 <swabHorDiff16>
mov    %rcx,0x30(%r10)
mov    %rdi,0x3e8(%r9)
leaveq 
retq   
lea    -0xdb1(%rip),%rcx        # 47550 <swabHorDiff32>
mov    %rcx,0x30(%r10)
mov    %rdi,0x3e8(%r9)
leaveq 
retq   
xchg   %ax,%ax

0000000000048310 <PredictorVSetField>:
push   %rbp
mov    %rsp,%rbp
lea    0x2b26d(%rip),%r9        # 73588 <module.47+0x11a>
lea    0x2b5d8(%rip),%rcx        # 738fa <module.45+0xfc>
mov    0x350(%rdi),%r8
test   %r8,%r8
jne    48342 <PredictorVSetField+0x32>
mov    %r9,%rsi
lea    0x2b371(%rip),%rdi        # 736a9 <module.47+0x23b>
mov    $0x2fd,%edx
callq  8490 <__assert_fail@plt>
mov    0x60(%r8),%rax
test   %rax,%rax
jne    4835f <PredictorVSetField+0x4f>
mov    %r9,%rsi
lea    0x2b5b8(%rip),%rdi        # 7390d <module.45+0x10f>
mov    $0x2fe,%edx
callq  8490 <__assert_fail@plt>
cmp    $0x13d,%esi
jne    48380 <PredictorVSetField+0x70>
movslq (%rdx),%rcx
cmp    $0x2f,%ecx
jle    48384 <PredictorVSetField+0x74>
mov    0x8(%rdx),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rdx)
movslq (%rcx),%rax
jmp    48391 <PredictorVSetField+0x81>
callq  *%rax
leaveq 
retq   
mov    0x10(%rdx),%rax
movslq (%rax,%rcx,1),%rax
add    $0x8,%ecx
mov    %ecx,(%rdx)
movzwl %ax,%eax
mov    %eax,(%r8)
mov    0x48(%rdi),%rax
or     $0x4,%rax
mov    %rax,0x48(%rdi)
mov    0x10(%rdi),%eax
or     $0x8,%eax
mov    %eax,0x10(%rdi)
mov    $0x1,%eax
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

00000000000483c0 <PredictorVGetField>:
push   %rbp
mov    %rsp,%rbp
lea    0x2b1bd(%rip),%r9        # 73588 <module.47+0x11a>
lea    0x2b552(%rip),%rcx        # 73924 <module.45+0x126>
mov    0x350(%rdi),%r8
test   %r8,%r8
jne    483f2 <PredictorVGetField+0x32>
mov    %r9,%rsi
lea    0x2b2c1(%rip),%rdi        # 736a9 <module.47+0x23b>
mov    $0x311,%edx
callq  8490 <__assert_fail@plt>
mov    0x58(%r8),%rax
test   %rax,%rax
jne    4840f <PredictorVGetField+0x4f>
mov    %r9,%rsi
lea    0x2b532(%rip),%rdi        # 73937 <module.45+0x139>
mov    $0x312,%edx
callq  8490 <__assert_fail@plt>
cmp    $0x13d,%esi
jne    48430 <PredictorVGetField+0x70>
movslq (%rdx),%rcx
cmp    $0x2f,%ecx
jle    48434 <PredictorVGetField+0x74>
mov    0x8(%rdx),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rdx)
mov    (%rcx),%rax
jmp    48441 <PredictorVGetField+0x81>
callq  *%rax
leaveq 
retq   
mov    0x10(%rdx),%rax
mov    (%rax,%rcx,1),%rax
add    $0x8,%ecx
mov    %ecx,(%rdx)
movzwl (%r8),%ecx
mov    %cx,(%rax)
mov    $0x1,%eax
leaveq 
retq   
nop

0000000000048450 <PredictorPrintDir>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    0x350(%rdi),%rcx
mov    0x48(%rdi),%rax
and    $0x4,%rax
test   %rax,%rax
jne    48480 <PredictorPrintDir+0x30>
mov    %r14,%r8
mov    %rsi,%r14
mov    %r15,%rsi
mov    %rcx,%r15
mov    %rsi,%rcx
jmpq   4850f <PredictorPrintDir+0xbf>
xor    %eax,%eax
lea    0x2b4c5(%rip),%r8        # 7394e <module.45+0x150>
mov    %rsi,%r9
mov    %r14,-0x18(%rbp)
mov    %r15,-0x20(%rbp)
mov    %rdi,-0x8(%rbp)
mov    %rdx,-0x10(%rbp)
mov    %r9,%rdi
mov    %rsi,%r14
mov    %r8,%rsi
mov    %rcx,%r15
callq  86f0 <fprintf@plt>
movslq (%r15),%rax
cmp    $0x1,%eax
jle    484d2 <PredictorPrintDir+0x82>
cmp    $0x2,%eax
je     48520 <PredictorPrintDir+0xd0>
cmp    $0x3,%eax
jne    484e8 <PredictorPrintDir+0x98>
xor    %eax,%eax
lea    0x2b4b3(%rip),%rsi        # 7397b <module.45+0x17d>
mov    %r14,%rdi
callq  86f0 <fprintf@plt>
jmp    484e8 <PredictorPrintDir+0x98>
cmp    $0x1,%eax
jne    484e8 <PredictorPrintDir+0x98>
xor    %eax,%eax
lea    0x2b47c(%rip),%rsi        # 7395c <module.45+0x15e>
mov    %r14,%rdi
callq  86f0 <fprintf@plt>
xor    %eax,%eax
lea    0x2b4a4(%rip),%rsi        # 73995 <module.45+0x197>
movslq (%r15),%rdx
mov    %rdx,%rcx
mov    %r14,%rdi
callq  86f0 <fprintf@plt>
mov    -0x10(%rbp),%rdx
mov    -0x8(%rbp),%rdi
mov    -0x20(%rbp),%rcx
mov    -0x18(%rbp),%r8
mov    0x68(%r15),%rax
test   %rax,%rax
jne    48533 <PredictorPrintDir+0xe3>
mov    %r8,%r14
mov    %rcx,%r15
leaveq 
retq   
xor    %eax,%eax
lea    0x2b439(%rip),%rsi        # 73962 <module.45+0x164>
mov    %r14,%rdi
callq  86f0 <fprintf@plt>
jmp    484e8 <PredictorPrintDir+0x98>
mov    %r14,%rsi
mov    %r8,%r14
mov    %rcx,%r15
callq  *%rax
leaveq 
retq   

0000000000048540 <TIFFPrintDirectory>:
push   %rbp
mov    %rsp,%rbp
sub    $0x70,%rsp
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rbx,-0x8(%rbp)
mov    %rdi,%r12
mov    %rsi,%rdi
mov    %rdx,%r14
mov    %r14,-0x50(%rbp)
mov    %r12,-0x58(%rbp)
xor    %r13d,%r13d
mov    %r13,-0x38(%rbp)
lea    0x2b43d(%rip),%rsi        # 739b8 <module.45+0x1ba>
mov    0x18(%r12),%rdx
mov    %rdx,%rcx
mov    %r13,%rax
mov    %rdi,%rbx
callq  86f0 <fprintf@plt>
mov    0x38(%r12),%rax
and    $0x20,%rax
test   %rax,%rax
je     4863a <TIFFPrintDirectory+0xfa>
xor    %eax,%eax
lea    0x2b437(%rip),%rsi        # 739e0 <module.45+0x1e2>
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
lea    0x2b438(%rip),%rdx        # 739f0 <module.45+0x1f2>
lea    0x2b44e(%rip),%r15        # 73a0d <module.45+0x20f>
mov    0x70(%r12),%eax
and    $0x1,%eax
test   %eax,%eax
je     485df <TIFFPrintDirectory+0x9f>
xor    %eax,%eax
lea    0x2b41e(%rip),%rsi        # 739f2 <module.45+0x1f4>
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
mov    %r15,%rdx
mov    0x70(%r12),%eax
and    $0x2,%eax
test   %eax,%eax
jne    485f0 <TIFFPrintDirectory+0xb0>
mov    %rdx,%r15
jmp    48601 <TIFFPrintDirectory+0xc1>
xor    %eax,%eax
lea    0x2b416(%rip),%rsi        # 73a0f <module.45+0x211>
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
mov    0x70(%r12),%eax
and    $0x4,%eax
test   %eax,%eax
je     48621 <TIFFPrintDirectory+0xe1>
mov    %r15,%rdx
xor    %eax,%eax
lea    0x2b40c(%rip),%rsi        # 73a25 <module.45+0x227>
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
xor    %eax,%eax
lea    0x2b40f(%rip),%rsi        # 73a39 <module.45+0x23b>
mov    0x70(%r12),%edx
mov    %rdx,%rcx
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
lea    0x2b43f(%rip),%r15        # 73a80 <module.45+0x282>
mov    0x38(%r12),%rax
and    $0x2,%rax
test   %rax,%rax
je     4869b <TIFFPrintDirectory+0x15b>
xor    %eax,%eax
lea    0x2b3f1(%rip),%rsi        # 73a49 <module.45+0x24b>
mov    0x58(%r12),%edx
mov    0x5c(%r12),%ecx
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
mov    0x40(%r12),%rax
and    $0x8,%rax
test   %rax,%rax
je     4868e <TIFFPrintDirectory+0x14e>
xor    %eax,%eax
lea    0x2b3ed(%rip),%rsi        # 73a6e <module.45+0x270>
mov    0x60(%r12),%edx
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
xor    %eax,%eax
mov    %rbx,%rdi
mov    %r15,%rsi
callq  86f0 <fprintf@plt>
mov    0x38(%r12),%rax
and    $0x4,%rax
test   %rax,%rax
je     486f5 <TIFFPrintDirectory+0x1b5>
xor    %eax,%eax
lea    0x2b3d0(%rip),%rsi        # 73a82 <module.45+0x284>
mov    0x64(%r12),%edx
mov    0x68(%r12),%ecx
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
mov    0x40(%r12),%rax
and    $0x10,%rax
test   %rax,%rax
je     486e8 <TIFFPrintDirectory+0x1a8>
xor    %eax,%eax
lea    0x2b3ca(%rip),%rsi        # 73aa5 <module.45+0x2a7>
mov    0x6c(%r12),%edx
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
xor    %eax,%eax
mov    %rbx,%rdi
mov    %r15,%rsi
callq  86f0 <fprintf@plt>
mov    0x38(%r12),%rax
and    $0x8,%rax
test   %rax,%rax
je     48754 <TIFFPrintDirectory+0x214>
mov    $0x2,%eax
lea    0x2b3a7(%rip),%rsi        # 73ab6 <module.45+0x2b8>
movss  0xa0(%r12),%xmm0
cvtss2sd %xmm0,%xmm0
movss  0xa4(%r12),%xmm1
cvtss2sd %xmm1,%xmm1
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
mov    0x38(%r12),%rax
and    $0x400000,%rax
test   %rax,%rax
jne    488bc <TIFFPrintDirectory+0x37c>
xor    %eax,%eax
mov    %rbx,%rdi
mov    %r15,%rsi
callq  86f0 <fprintf@plt>
mov    0x38(%r12),%rax
and    $0x10,%rax
test   %rax,%rax
je     48792 <TIFFPrintDirectory+0x252>
mov    $0x2,%eax
lea    0x2b393(%rip),%rsi        # 73b01 <module.45+0x303>
movss  0xac(%r12),%xmm0
cvtss2sd %xmm0,%xmm0
movss  0xb0(%r12),%xmm1
cvtss2sd %xmm1,%xmm1
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
mov    0x38(%r12),%rax
and    $0x40,%rax
test   %rax,%rax
je     487b7 <TIFFPrintDirectory+0x277>
xor    %eax,%eax
lea    0x2b36c(%rip),%rsi        # 73b15 <module.45+0x317>
movzwl 0x74(%r12),%edx
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
lea    0x2b3ee(%rip),%rsi        # 73bac <module.45+0x3ae>
mov    0x40(%r12),%rax
and    $0x1,%rax
test   %rax,%rax
jne    488f9 <TIFFPrintDirectory+0x3b9>
lea    0x2b3f7(%rip),%r8        # 73bce <module.45+0x3d0>
mov    0x38(%r12),%rax
and    $0x80,%rax
test   %rax,%rax
je     4883f <TIFFPrintDirectory+0x2ff>
mov    %rsi,%r14
mov    %r8,%r15
movzwl 0x78(%r12),%edi
callq  8530 <TIFFFindCODEC@plt>
mov    %rax,%r13
xor    %eax,%eax
lea    0x2b3b3(%rip),%rsi        # 73bb7 <module.45+0x3b9>
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
test   %r13,%r13
jne    4894f <TIFFPrintDirectory+0x40f>
xor    %eax,%eax
movzwl 0x78(%r12),%edx
mov    %rdx,%rcx
mov    %rbx,%rdi
mov    %r14,%rsi
callq  86f0 <fprintf@plt>
mov    %r14,%rsi
mov    %r15,%r8
xor    %r13d,%r13d
mov    -0x50(%rbp),%r14
lea    0x2b241(%rip),%r15        # 73a80 <module.45+0x282>
mov    0x38(%r12),%rax
and    $0x100,%rax
test   %rax,%rax
je     489a8 <TIFFPrintDirectory+0x468>
mov    %r8,%r14
mov    %rsi,%r15
xor    %eax,%eax
lea    0x2b370(%rip),%rsi        # 73bd2 <module.45+0x3d4>
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
movzwl 0x7a(%r12),%eax
cmp    $0xa,%ax
jbe    48979 <TIFFPrintDirectory+0x439>
movzwl 0x7a(%r12),%edx
cmp    $0x804c,%dx
je     48a16 <TIFFPrintDirectory+0x4d6>
cmp    $0x804d,%dx
je     48a3d <TIFFPrintDirectory+0x4fd>
xor    %eax,%eax
mov    %rdx,%rcx
mov    %rbx,%rdi
mov    %r15,%rsi
callq  86f0 <fprintf@plt>
mov    %r15,%rsi
mov    %r14,%r8
mov    -0x50(%rbp),%r14
lea    0x2b1c9(%rip),%r15        # 73a80 <module.45+0x282>
jmpq   489a8 <TIFFPrintDirectory+0x468>
movzwl 0xa8(%r12),%edx
cmp    $0x1,%dx
jbe    48a64 <TIFFPrintDirectory+0x524>
cmp    $0x2,%dx
je     48a87 <TIFFPrintDirectory+0x547>
cmp    $0x3,%dx
jne    48a6e <TIFFPrintDirectory+0x52e>
xor    %eax,%eax
lea    0x2b1f8(%rip),%rsi        # 73ae4 <module.45+0x2e6>
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
jmpq   48747 <TIFFPrintDirectory+0x207>
mov    %rsi,%r15
xor    %eax,%eax
lea    0x2b223(%rip),%rsi        # 73b28 <module.45+0x32a>
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
movzwl 0x76(%r12),%edx
lea    -0x1(%rdx),%eax
cmp    $0x5,%eax
ja     48a9d <TIFFPrintDirectory+0x55d>
lea    0x2b07a(%rip),%rcx        # 739a0 <module.45+0x1a2>
movslq (%rcx,%rax,4),%rax
add    %rcx,%rax
jmpq   *%rax
xor    %eax,%eax
lea    0x2b257(%rip),%rsi        # 73b8f <module.45+0x391>
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
mov    %r15,%rsi
lea    0x2b136(%rip),%r15        # 73a80 <module.45+0x282>
jmpq   487d0 <TIFFPrintDirectory+0x290>
xor    %eax,%eax
mov    0x0(%r13),%rdx
mov    %rbx,%rdi
mov    %r15,%rsi
callq  86f0 <fprintf@plt>
mov    %r14,%rsi
mov    %r15,%r8
xor    %r13d,%r13d
mov    -0x50(%rbp),%r14
lea    0x2b10c(%rip),%r15        # 73a80 <module.45+0x282>
jmpq   4883f <TIFFPrintDirectory+0x2ff>
lea    0x31298(%rip),%rcx        # 79c18 <photoNames>
movzwl 0x7a(%r12),%eax
mov    (%rcx,%rax,8),%rdx
xor    %eax,%eax
mov    %rbx,%rdi
mov    %r14,%rsi
callq  86f0 <fprintf@plt>
mov    %r15,%rsi
mov    %r14,%r8
mov    -0x50(%rbp),%r14
lea    0x2b0d8(%rip),%r15        # 73a80 <module.45+0x282>
lea    0x2b279(%rip),%rcx        # 73c28 <module.45+0x42a>
lea    0x2b2ab(%rip),%r9        # 73c61 <module.45+0x463>
mov    $0x80000000,%eax
and    0x38(%r12),%rax
test   %rax,%rax
je     48bcc <TIFFPrintDirectory+0x68c>
movzwl 0xd4(%r12),%edx
test   %dx,%dx
je     48bcc <TIFFPrintDirectory+0x68c>
mov    %r9,%r14
mov    %rcx,%r15
xor    %eax,%eax
lea    0x2b229(%rip),%rsi        # 73c13 <module.45+0x415>
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
mov    %r15,%rdx
lea    0x2b22d(%rip),%r15        # 73c29 <module.45+0x42b>
lea    0x2b234(%rip),%r8        # 73c37 <module.45+0x439>
lea    0x2b23b(%rip),%r9        # 73c45 <module.45+0x447>
lea    0x2b244(%rip),%rsi        # 73c55 <module.45+0x457>
jmpq   48b85 <TIFFPrintDirectory+0x645>
xor    %eax,%eax
lea    0x2b1d2(%rip),%rsi        # 73bf1 <module.45+0x3f3>
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
mov    %r15,%rsi
mov    %r14,%r8
mov    -0x50(%rbp),%r14
lea    0x2b048(%rip),%r15        # 73a80 <module.45+0x282>
jmpq   489a8 <TIFFPrintDirectory+0x468>
xor    %eax,%eax
lea    0x2b1b8(%rip),%rsi        # 73bfe <module.45+0x400>
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
mov    %r15,%rsi
mov    %r14,%r8
mov    -0x50(%rbp),%r14
lea    0x2b021(%rip),%r15        # 73a80 <module.45+0x282>
jmpq   489a8 <TIFFPrintDirectory+0x468>
cmp    $0x1,%dx
je     48c10 <TIFFPrintDirectory+0x6d0>
xor    %eax,%eax
lea    0x2b078(%rip),%rsi        # 73aef <module.45+0x2f1>
mov    %rdx,%rcx
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
jmpq   48747 <TIFFPrintDirectory+0x207>
xor    %eax,%eax
lea    0x2b047(%rip),%rsi        # 73ad7 <module.45+0x2d9>
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
jmpq   48747 <TIFFPrintDirectory+0x207>
xor    %eax,%eax
mov    %rdx,%rcx
mov    %rbx,%rdi
mov    %r15,%rsi
callq  86f0 <fprintf@plt>
mov    %r15,%rsi
lea    0x2afc9(%rip),%r15        # 73a80 <module.45+0x282>
jmpq   487d0 <TIFFPrintDirectory+0x290>
xor    %eax,%eax
lea    0x2b075(%rip),%rsi        # 73b3a <module.45+0x33c>
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
mov    %r15,%rsi
lea    0x2afa9(%rip),%r15        # 73a80 <module.45+0x282>
jmpq   487d0 <TIFFPrintDirectory+0x290>
xor    %eax,%eax
lea    0x2b05b(%rip),%rsi        # 73b40 <module.45+0x342>
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
mov    %r15,%rsi
lea    0x2af89(%rip),%r15        # 73a80 <module.45+0x282>
jmpq   487d0 <TIFFPrintDirectory+0x290>
xor    %eax,%eax
lea    0x2b04b(%rip),%rsi        # 73b50 <module.45+0x352>
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
mov    %r15,%rsi
lea    0x2af69(%rip),%r15        # 73a80 <module.45+0x282>
jmpq   487d0 <TIFFPrintDirectory+0x290>
xor    %eax,%eax
lea    0x2b03d(%rip),%rsi        # 73b62 <module.45+0x364>
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
mov    %r15,%rsi
lea    0x2af49(%rip),%r15        # 73a80 <module.45+0x282>
jmpq   487d0 <TIFFPrintDirectory+0x290>
xor    %eax,%eax
lea    0x2b032(%rip),%rsi        # 73b77 <module.45+0x379>
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
mov    %r15,%rsi
lea    0x2af29(%rip),%r15        # 73a80 <module.45+0x282>
jmpq   487d0 <TIFFPrintDirectory+0x290>
xor    %eax,%eax
mov    %rcx,%r8
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
add    $0x1,%r13d
lea    0x2b0e1(%rip),%rsi        # 73c55 <module.45+0x457>
lea    0x2b0ca(%rip),%r9        # 73c45 <module.45+0x447>
lea    0x2b0b5(%rip),%r8        # 73c37 <module.45+0x439>
mov    %r14,%rdx
movzwl 0xd4(%r12),%eax
cmp    %r13w,%ax
ja     48c26 <TIFFPrintDirectory+0x6e6>
xor    %eax,%eax
lea    0x2b0c3(%rip),%rsi        # 73c64 <module.45+0x466>
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
lea    0x2b078(%rip),%rcx        # 73c28 <module.45+0x42a>
lea    0x2b017(%rip),%r8        # 73bce <module.45+0x3d0>
lea    0x2afee(%rip),%rsi        # 73bac <module.45+0x3ae>
xor    %r13d,%r13d
mov    -0x50(%rbp),%r14
lea    0x2aeb4(%rip),%r15        # 73a80 <module.45+0x282>
mov    0x40(%r12),%rax
and    $0x4000,%rax
test   %rax,%rax
je     48c89 <TIFFPrintDirectory+0x749>
mov    %rcx,%r15
xor    %eax,%eax
lea    0x2b07b(%rip),%rsi        # 73c67 <module.45+0x469>
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
movzwl 0x82(%r12),%r14d
mov    0x138(%r12),%rax
mov    %r15,%rdi
mov    %rax,%r15
jmpq   48d60 <TIFFPrintDirectory+0x820>
xor    %eax,%eax
lea    0x2aeb2(%rip),%rsi        # 73acb <module.45+0x2cd>
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
jmpq   48747 <TIFFPrintDirectory+0x207>
mov    0xd8(%r12),%rcx
movzwl %r13w,%eax
movzwl (%rcx,%rax,2),%ecx
test   %cx,%cx
je     48d6b <TIFFPrintDirectory+0x82b>
cmp    $0x1,%cx
je     48d86 <TIFFPrintDirectory+0x846>
cmp    $0x2,%cx
jne    48b5c <TIFFPrintDirectory+0x61c>
mov    %r9,%rsi
xor    %eax,%eax
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
jmpq   48b69 <TIFFPrintDirectory+0x629>
lea    0x2ae14(%rip),%r15        # 73a80 <module.45+0x282>
mov    %r15,%rdi
mov    %rbx,%rsi
callq  84b0 <fputs@plt>
lea    0x2af50(%rip),%r8        # 73bce <module.45+0x3d0>
lea    0x2af27(%rip),%rsi        # 73bac <module.45+0x3ae>
mov    -0x50(%rbp),%r14
mov    0x38(%r12),%rax
and    $0x200,%rax
test   %rax,%rax
je     48db8 <TIFFPrintDirectory+0x878>
mov    %rsi,%r13
mov    %r8,%r15
xor    %eax,%eax
lea    0x2afc9(%rip),%rsi        # 73c75 <module.45+0x477>
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
movzwl 0x7c(%r12),%edx
cmp    $0x1,%dx
jbe    48e1f <TIFFPrintDirectory+0x8df>
cmp    $0x2,%dx
je     48e4f <TIFFPrintDirectory+0x90f>
cmp    $0x3,%dx
jne    48d98 <TIFFPrintDirectory+0x858>
xor    %eax,%eax
lea    0x2afd2(%rip),%rsi        # 73cb3 <module.45+0x4b5>
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
mov    %r13,%rsi
mov    %r15,%r8
xor    %r13d,%r13d
lea    0x2ad87(%rip),%r15        # 73a80 <module.45+0x282>
jmpq   48db8 <TIFFPrintDirectory+0x878>
movslq 0x130(%r12),%rdx
mov    0x138(%r12),%rcx
lea    (%rdx,%rcx,1),%rax
cmp    %r15,%rax
jbe    48c65 <TIFFPrintDirectory+0x725>
mov    %rcx,%r12
mov    %rdx,%r13
mov    %rbx,%rsi
callq  84b0 <fputs@plt>
sub    %r15,%r12
lea    0x0(%r13,%r12,1),%rdx
mov    %rbx,%rdi
mov    %r15,%rsi
callq  49ac0 <_TIFFprintAsciiBounded>
mov    %r15,%rdi
xor    %r13d,%r13d
mov    %r13,%rsi
callq  8400 <strchr@plt>
lea    0x1(%rax),%r15
add    $0xffff,%r14d
lea    0x2af05(%rip),%rdi        # 73c61 <module.45+0x463>
mov    -0x58(%rbp),%r12
test   %r14w,%r14w
jne    48cfe <TIFFPrintDirectory+0x7be>
jmpq   48c65 <TIFFPrintDirectory+0x725>
test   %cx,%cx
jne    48b5c <TIFFPrintDirectory+0x61c>
xor    %eax,%eax
mov    %rbx,%rdi
mov    %r15,%rsi
callq  86f0 <fprintf@plt>
jmpq   48b69 <TIFFPrintDirectory+0x629>
mov    %r8,%rsi
xor    %eax,%eax
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
jmpq   48b69 <TIFFPrintDirectory+0x629>
xor    %eax,%eax
mov    %rdx,%rcx
mov    %rbx,%rdi
mov    %r13,%rsi
callq  86f0 <fprintf@plt>
mov    %r13,%rsi
mov    %r15,%r8
xor    %r13d,%r13d
lea    0x2acc8(%rip),%r15        # 73a80 <module.45+0x282>
mov    0x38(%r12),%rax
and    $0x400,%rax
test   %rax,%rax
je     48e96 <TIFFPrintDirectory+0x956>
mov    %rsi,%r13
mov    %r8,%r15
xor    %eax,%eax
lea    0x2aee8(%rip),%rsi        # 73cc3 <module.45+0x4c5>
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
movzwl 0x7e(%r12),%edx
cmp    $0x1,%dx
je     48e75 <TIFFPrintDirectory+0x935>
cmp    $0x2,%dx
je     48f45 <TIFFPrintDirectory+0xa05>
xor    %eax,%eax
mov    %rdx,%rcx
mov    %rbx,%rdi
mov    %r13,%rsi
callq  86f0 <fprintf@plt>
mov    %r13,%rsi
mov    %r15,%r8
xor    %r13d,%r13d
lea    0x2ac63(%rip),%r15        # 73a80 <module.45+0x282>
jmp    48e96 <TIFFPrintDirectory+0x956>
cmp    $0x1,%dx
jne    48d98 <TIFFPrintDirectory+0x858>
xor    %eax,%eax
lea    0x2ae54(%rip),%rsi        # 73c86 <module.45+0x488>
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
mov    %r13,%rsi
mov    %r15,%r8
xor    %r13d,%r13d
lea    0x2ac36(%rip),%r15        # 73a80 <module.45+0x282>
jmpq   48db8 <TIFFPrintDirectory+0x878>
xor    %eax,%eax
lea    0x2ae40(%rip),%rsi        # 73c98 <module.45+0x49a>
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
mov    %r13,%rsi
mov    %r15,%r8
xor    %r13d,%r13d
lea    0x2ac10(%rip),%r15        # 73a80 <module.45+0x282>
jmpq   48db8 <TIFFPrintDirectory+0x878>
xor    %eax,%eax
lea    0x2ae53(%rip),%rsi        # 73cd1 <module.45+0x4d3>
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
mov    %r13,%rsi
mov    %r15,%r8
xor    %r13d,%r13d
lea    0x2abea(%rip),%r15        # 73a80 <module.45+0x282>
mov    0x40(%r12),%rax
and    $0x80,%rax
test   %rax,%rax
je     48edf <TIFFPrintDirectory+0x99f>
mov    %rsi,%r13
mov    %r8,%r15
xor    %eax,%eax
lea    0x2ae34(%rip),%rsi        # 73ce9 <module.45+0x4eb>
movzwl 0x108(%r12),%edx
movzwl 0x10a(%r12),%ecx
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
mov    %r13,%rsi
mov    %r15,%r8
xor    %r13d,%r13d
lea    0x2aba1(%rip),%r15        # 73a80 <module.45+0x282>
mov    0x40(%r12),%rax
and    $0x100,%rax
test   %rax,%rax
je     48f8c <TIFFPrintDirectory+0xa4c>
mov    %rsi,%r13
mov    %r8,%r15
xor    %eax,%eax
lea    0x2ae04(%rip),%rsi        # 73d06 <module.45+0x508>
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
movzwl 0x10c(%r12),%edx
cmp    $0x1,%dx
je     48f6b <TIFFPrintDirectory+0xa2b>
cmp    $0x2,%dx
je     49164 <TIFFPrintDirectory+0xc24>
xor    %eax,%eax
mov    %rdx,%rcx
mov    %rbx,%rdi
mov    %r13,%rsi
callq  86f0 <fprintf@plt>
mov    %r13,%rsi
mov    %r15,%r8
xor    %r13d,%r13d
lea    0x2ab3d(%rip),%r15        # 73a80 <module.45+0x282>
jmp    48f8c <TIFFPrintDirectory+0xa4c>
xor    %eax,%eax
lea    0x2ad8f(%rip),%rsi        # 73cdd <module.45+0x4df>
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
mov    %r13,%rsi
mov    %r15,%r8
xor    %r13d,%r13d
lea    0x2ab1a(%rip),%r15        # 73a80 <module.45+0x282>
jmpq   48e96 <TIFFPrintDirectory+0x956>
xor    %eax,%eax
lea    0x2ada8(%rip),%rsi        # 73d1c <module.45+0x51e>
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
mov    %r13,%rsi
mov    %r15,%r8
xor    %r13d,%r13d
lea    0x2aaf4(%rip),%r15        # 73a80 <module.45+0x282>
mov    0x40(%r12),%rax
and    $0x20,%rax
test   %rax,%rax
je     48fd3 <TIFFPrintDirectory+0xa93>
mov    %r8,%r13
mov    %rsi,%r15
xor    %eax,%eax
lea    0x2ad86(%rip),%rsi        # 73d2f <module.45+0x531>
movzwl 0xd0(%r12),%edx
movzwl 0xd2(%r12),%ecx
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
mov    %r15,%rsi
mov    %r13,%r8
xor    %r13d,%r13d
lea    0x2aaad(%rip),%r15        # 73a80 <module.45+0x282>
mov    0x38(%r12),%rax
and    $0x8000,%rax
test   %rax,%rax
je     49033 <TIFFPrintDirectory+0xaf3>
mov    %r8,%r13
mov    %rsi,%r15
xor    %eax,%eax
lea    0x2ad61(%rip),%rsi        # 73d53 <module.45+0x555>
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
movzwl 0x80(%r12),%eax
cmp    $0x8,%ax
jbe    4918a <TIFFPrintDirectory+0xc4a>
xor    %eax,%eax
movzwl 0x80(%r12),%edx
mov    %rdx,%rcx
mov    %rbx,%rdi
mov    %r15,%rsi
callq  86f0 <fprintf@plt>
mov    %r15,%rsi
xor    %r13d,%r13d
lea    0x2aa4d(%rip),%r15        # 73a80 <module.45+0x282>
mov    0x38(%r12),%rax
and    $0x10000,%rax
test   %rax,%rax
je     4906a <TIFFPrintDirectory+0xb2a>
mov    %rsi,%r15
xor    %eax,%eax
lea    0x2ad14(%rip),%rsi        # 73d63 <module.45+0x565>
movzwl 0x82(%r12),%edx
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
mov    %r15,%rsi
lea    0x2aa16(%rip),%r15        # 73a80 <module.45+0x282>
mov    0x38(%r12),%rax
and    $0x20000,%rax
test   %rax,%rax
je     490ba <TIFFPrintDirectory+0xb7a>
mov    %rsi,%r15
xor    %eax,%eax
lea    0x2acf2(%rip),%rsi        # 73d78 <module.45+0x57a>
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
mov    0x84(%r12),%edx
cmp    $0xffffffff,%edx
je     491bd <TIFFPrintDirectory+0xc7d>
xor    %eax,%eax
lea    0x2aceb(%rip),%rsi        # 73d93 <module.45+0x595>
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
mov    %r15,%rsi
lea    0x2a9c6(%rip),%r15        # 73a80 <module.45+0x282>
mov    0x38(%r12),%rax
and    $0x40000,%rax
test   %rax,%rax
je     490f1 <TIFFPrintDirectory+0xbb1>
mov    %rsi,%r15
xor    %eax,%eax
lea    0x2acc2(%rip),%rsi        # 73d98 <module.45+0x59a>
movzwl 0x88(%r12),%edx
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
mov    %r15,%rsi
lea    0x2a98f(%rip),%r15        # 73a80 <module.45+0x282>
mov    0x38(%r12),%rax
and    $0x80000,%rax
test   %rax,%rax
je     49128 <TIFFPrintDirectory+0xbe8>
mov    %rsi,%r15
xor    %eax,%eax
lea    0x2aca3(%rip),%rsi        # 73db0 <module.45+0x5b2>
movzwl 0x8a(%r12),%edx
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
mov    %r15,%rsi
lea    0x2a958(%rip),%r15        # 73a80 <module.45+0x282>
lea    0x2acae(%rip),%rcx        # 73ddd <module.45+0x5df>
mov    $0x1,%edx
mov    %rdx,-0x30(%rbp)
mov    0x40(%r12),%rax
and    $0x2,%rax
test   %rax,%rax
je     49239 <TIFFPrintDirectory+0xcf9>
mov    0x10(%r12),%eax
and    $0x400000,%eax
test   %eax,%eax
jne    49265 <TIFFPrintDirectory+0xd25>
mov    %rdx,%r14
jmpq   4926e <TIFFPrintDirectory+0xd2e>
xor    %eax,%eax
lea    0x2abb9(%rip),%rsi        # 73d26 <module.45+0x528>
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
mov    %r13,%rsi
mov    %r15,%r8
xor    %r13d,%r13d
lea    0x2a8fb(%rip),%r15        # 73a80 <module.45+0x282>
jmpq   48f8c <TIFFPrintDirectory+0xa4c>
lea    0x30adf(%rip),%rcx        # 79c70 <orientNames>
movzwl 0x80(%r12),%eax
mov    (%rcx,%rax,8),%rdx
mov    %r13,%rsi
xor    %eax,%eax
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
mov    %r15,%rsi
xor    %r13d,%r13d
lea    0x2a8c8(%rip),%r15        # 73a80 <module.45+0x282>
jmpq   49033 <TIFFPrintDirectory+0xaf3>
xor    %eax,%eax
lea    0x2abc1(%rip),%rsi        # 73d87 <module.45+0x589>
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
mov    %r15,%rsi
lea    0x2a8a8(%rip),%r15        # 73a80 <module.45+0x282>
jmpq   490ba <TIFFPrintDirectory+0xb7a>
mov    0x90(%r12),%rcx
movslq %r13d,%rax
movsd  (%rcx,%rax,8),%xmm0
mov    %rdx,%r15
mov    $0x1,%eax
mov    %rbx,%rdi
mov    %r15,%rsi
callq  86f0 <fprintf@plt>
add    $0x1,%r13d
mov    %r15,%rdx
cmp    %r14d,%r13d
jl     491dd <TIFFPrintDirectory+0xc9d>
mov    %rdx,%r14
xor    %eax,%eax
mov    %rbx,%rdi
lea    0x2a865(%rip),%r15        # 73a80 <module.45+0x282>
mov    %r15,%rsi
callq  86f0 <fprintf@plt>
mov    %r14,%rcx
mov    $0x1,%edx
lea    0x2a97a(%rip),%rsi        # 73bac <module.45+0x3ae>
xor    %r13d,%r13d
mov    -0x50(%rbp),%r14
mov    0x40(%r12),%rax
and    $0x4,%rax
test   %rax,%rax
je     492d2 <TIFFPrintDirectory+0xd92>
mov    0x10(%r12),%eax
and    $0x400000,%eax
test   %eax,%eax
jne    49324 <TIFFPrintDirectory+0xde4>
mov    %rdx,%r15
jmpq   4932d <TIFFPrintDirectory+0xded>
movzwl 0x82(%r12),%r14d
mov    %rcx,%r15
xor    %eax,%eax
lea    0x2ab4e(%rip),%rsi        # 73dc8 <module.45+0x5ca>
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
mov    %r15,%rdx
jmp    49207 <TIFFPrintDirectory+0xcc7>
mov    0x98(%r12),%rcx
movslq %r13d,%rax
movsd  (%rcx,%rax,8),%xmm0
mov    $0x1,%eax
mov    %rbx,%rdi
mov    %r14,%rsi
callq  86f0 <fprintf@plt>
add    $0x1,%r13d
cmp    %r15d,%r13d
jl     49287 <TIFFPrintDirectory+0xd47>
xor    %eax,%eax
mov    %rbx,%rdi
lea    0x2a7c4(%rip),%r15        # 73a80 <module.45+0x282>
mov    %r15,%rsi
callq  86f0 <fprintf@plt>
lea    0x2a8e1(%rip),%rsi        # 73bac <module.45+0x3ae>
xor    %r13d,%r13d
mov    -0x50(%rbp),%r14
mov    0x38(%r12),%rax
and    $0x100000,%rax
test   %rax,%rax
je     4935a <TIFFPrintDirectory+0xe1a>
mov    %rsi,%r13
xor    %eax,%eax
lea    0x2ab08(%rip),%rsi        # 73df6 <module.45+0x5f8>
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
movzwl 0xaa(%r12),%edx
cmp    $0x1,%dx
je     49346 <TIFFPrintDirectory+0xe06>
cmp    $0x2,%dx
je     49408 <TIFFPrintDirectory+0xec8>
mov    %r13,%rsi
xor    %eax,%eax
mov    %rdx,%rcx
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
xor    %r13d,%r13d
jmp    4935a <TIFFPrintDirectory+0xe1a>
movzwl 0x82(%r12),%r15d
mov    %rcx,%r14
xor    %eax,%eax
lea    0x2aaa8(%rip),%rsi        # 73de1 <module.45+0x5e3>
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
jmpq   492ab <TIFFPrintDirectory+0xd6b>
xor    %eax,%eax
lea    0x2aac0(%rip),%rsi        # 73e0f <module.45+0x611>
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
xor    %r13d,%r13d
mov    0x38(%r12),%rax
and    $0x800000,%rax
test   %rax,%rax
je     4938d <TIFFPrintDirectory+0xe4d>
xor    %eax,%eax
lea    0x2aac7(%rip),%rsi        # 73e3a <module.45+0x63c>
movzwl 0xb4(%r12),%edx
movzwl 0xb6(%r12),%ecx
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
lea    0x2aae0(%rip),%rsi        # 73e74 <module.45+0x676>
mov    0x38(%r12),%rax
and    $0x4000000,%rax
test   %rax,%rax
je     493d7 <TIFFPrintDirectory+0xe97>
mov    %rsi,%r13
xor    %eax,%eax
lea    0x2aaa0(%rip),%rsi        # 73e50 <module.45+0x652>
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
mov    %r14,%rax
and    $0x4,%rax
test   %rax,%rax
jg     49421 <TIFFPrintDirectory+0xee1>
xor    %eax,%eax
mov    %rbx,%rdi
mov    %r13,%rsi
callq  86f0 <fprintf@plt>
mov    %r13,%rsi
xor    %r13d,%r13d
mov    0x40(%r12),%rax
and    $0x200,%rax
test   %rax,%rax
je     494a2 <TIFFPrintDirectory+0xf62>
xor    %eax,%eax
lea    0x2aa8b(%rip),%rsi        # 73e7f <module.45+0x681>
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
lea    0x2aa96(%rip),%r15        # 73e99 <module.45+0x69b>
jmpq   4948b <TIFFPrintDirectory+0xf4b>
xor    %eax,%eax
lea    0x2aa12(%rip),%rsi        # 73e23 <module.45+0x625>
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
xor    %r13d,%r13d
jmpq   4935a <TIFFPrintDirectory+0xe1a>
mov    %r15,%rsi
xor    %eax,%eax
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
movzwl 0x74(%r12),%ecx
mov    $0x1,%r13d
shl    %cl,%r13
lea    0x2aa1a(%rip),%r15        # 73e5e <module.45+0x660>
xor    %r14d,%r14d
jmpq   49563 <TIFFPrintDirectory+0x1023>
mov    0x128(%r12),%rdx
lea    0x0(%r13,%r13,1),%ecx
movslq %ecx,%rax
movss  (%rdx,%rax,4),%xmm0
cvtss2sd %xmm0,%xmm0
lea    0x1(%rcx),%eax
movslq %eax,%rax
movss  (%rdx,%rax,4),%xmm1
cvtss2sd %xmm1,%xmm1
mov    $0x2,%eax
mov    %rbx,%rdi
mov    %r15,%rsi
mov    %r13,%rdx
callq  86f0 <fprintf@plt>
add    $0x1,%r13d
cmp    $0x2,%r13d
jle    4944c <TIFFPrintDirectory+0xf0c>
lea    0x2a9dc(%rip),%rsi        # 73e74 <module.45+0x676>
xor    %r13d,%r13d
lea    0x2a5de(%rip),%r15        # 73a80 <module.45+0x282>
mov    0x40(%r12),%rax
and    $0x1000,%rax
test   %rax,%rax
je     494e3 <TIFFPrintDirectory+0xfa3>
mov    %rsi,%r13
xor    %eax,%eax
lea    0x2a9ed(%rip),%rsi        # 73eab <module.45+0x6ad>
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
and    $0x2,%r14
test   %r14,%r14
jg     49582 <TIFFPrintDirectory+0x1042>
mov    %r13,%rsi
xor    %eax,%eax
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
xor    %r13d,%r13d
mov    0x40(%r12),%rax
and    $0x20000,%rax
test   %rax,%rax
je     495f8 <TIFFPrintDirectory+0x10b8>
mov    0x100(%r12),%rax
test   %rax,%rax
je     495f8 <TIFFPrintDirectory+0x10b8>
xor    %eax,%eax
lea    0x2a9c3(%rip),%rsi        # 73ed4 <module.45+0x6d6>
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
lea    0x2a9c6(%rip),%r14        # 73ee6 <module.45+0x6e8>
mov    %r13,%r15
jmpq   495dc <TIFFPrintDirectory+0x109c>
mov    0xb8(%r12),%rax
movzwl (%rax,%r14,2),%ecx
mov    0xc0(%r12),%rax
movzwl (%rax,%r14,2),%r8d
mov    0xc8(%r12),%rax
movzwl (%rax,%r14,2),%r9d
xor    %eax,%eax
mov    %rbx,%rdi
mov    %r15,%rsi
mov    %r14,%rdx
callq  86f0 <fprintf@plt>
add    $0x1,%r14
cmp    %r13,%r14
jl     49528 <TIFFPrintDirectory+0xfe8>
lea    0x2a905(%rip),%rsi        # 73e74 <module.45+0x676>
xor    %r13d,%r13d
mov    -0x50(%rbp),%r14
lea    0x2a503(%rip),%r15        # 73a80 <module.45+0x282>
jmpq   493d7 <TIFFPrintDirectory+0xe97>
mov    %r15,%rsi
xor    %eax,%eax
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
movzwl 0x74(%r12),%ecx
mov    $0x1,%r15d
mov    %r15,%rax
shl    %cl,%rax
mov    %rax,-0x58(%rbp)
lea    0x2a915(%rip),%rsi        # 73ec1 <module.45+0x6c3>
lea    0x2a91c(%rip),%r14        # 73ecf <module.45+0x6d1>
xor    %r13d,%r13d
jmpq   49663 <TIFFPrintDirectory+0x1123>
mov    0x100(%r12),%rcx
movzwl %r15w,%eax
mov    (%rcx,%rax,8),%rdx
xor    %eax,%eax
mov    %rbx,%rdi
mov    %r14,%rsi
callq  86f0 <fprintf@plt>
add    $0x1,%r15d
movzwl 0xfc(%r12),%eax
cmp    %r15w,%ax
ja     495bb <TIFFPrintDirectory+0x107b>
mov    %rbx,%rsi
mov    $0xa,%edi
callq  85e0 <fputc@plt>
mov    %r12,%rdi
callq  8c50 <TIFFGetTagListCount@plt>
movswq %ax,%r15
mov    %r15,-0x58(%rbp)
mov    %r13,%r14
jmpq   49695 <TIFFPrintDirectory+0x1155>
movzwl %r15w,%eax
mov    0x110(%r12,%rax,8),%rax
movzwl (%rax,%r13,2),%edx
xor    %eax,%eax
mov    %rbx,%rdi
mov    %r14,%rsi
callq  86f0 <fprintf@plt>
add    $0x1,%r15d
movzwl 0x82(%r12),%eax
cmp    %r15w,%ax
ja     49610 <TIFFPrintDirectory+0x10d0>
mov    $0xa,%edi
mov    %rbx,%rsi
callq  85e0 <fputc@plt>
add    $0x1,%r13
lea    0x2a868(%rip),%rsi        # 73ec1 <module.45+0x6c3>
mov    -0x58(%rbp),%rax
mov    $0x1,%r15d
cmp    %rax,%r13
jl     496b4 <TIFFPrintDirectory+0x1174>
xor    %r13d,%r13d
jmpq   494e3 <TIFFPrintDirectory+0xfa3>
mov    %r12,%rdi
mov    %r14,%rsi
callq  88c0 <TIFFGetTagListEntry@plt>
mov    %rax,%r13
mov    %r12,%rdi
mov    %r13,%rsi
callq  8ae0 <TIFFFieldWithTag@plt>
test   %rax,%rax
jne    496d3 <TIFFPrintDirectory+0x1193>
add    $0x1,%r14d
xor    %r13d,%r13d
cmp    %r14d,%r15d
jg     49670 <TIFFPrintDirectory+0x1130>
mov    0x418(%r12),%rax
test   %rax,%rax
jne    49788 <TIFFPrintDirectory+0x1248>
mov    -0x50(%rbp),%r14
jmpq   49797 <TIFFPrintDirectory+0x1257>
mov    0x110(%r12),%rax
movzwl (%rax,%r13,2),%ecx
xor    %eax,%eax
mov    %rbx,%rdi
mov    %r13,%rdx
callq  86f0 <fprintf@plt>
jmpq   49632 <TIFFPrintDirectory+0x10f2>
movzbl 0x1b(%rax),%ecx
test   %cl,%cl
jne    497c2 <TIFFPrintDirectory+0x1282>
movswq 0x4(%rax),%rcx
cmp    $0xffff,%cx
jne    49817 <TIFFPrintDirectory+0x12d7>
mov    $0x1,%ecx
mov    %ecx,-0x6c(%rbp)
mov    (%rax),%ecx
cmp    $0x150,%ecx
je     4982b <TIFFPrintDirectory+0x12eb>
mov    %r13,%rcx
mov    %rax,%r13
mov    0x8(%r13),%edi
cmp    $0x2,%edi
je     49855 <TIFFPrintDirectory+0x1315>
movswq 0x4(%r13),%rax
cmp    $0xffff,%ax
je     49855 <TIFFPrintDirectory+0x1315>
cmp    $0xfffd,%ax
je     49855 <TIFFPrintDirectory+0x1315>
cmp    $0xfffe,%ax
je     49855 <TIFFPrintDirectory+0x1315>
mov    -0x6c(%rbp),%eax
cmp    $0x1,%eax
ja     49855 <TIFFPrintDirectory+0x1315>
mov    %rcx,%r15
callq  80f0 <_TIFFDataSize@plt>
imul   -0x6c(%rbp),%eax
mov    %eax,%edi
callq  8440 <_TIFFmalloc@plt>
mov    %rax,%rdx
mov    %rdx,-0x68(%rbp)
xor    %eax,%eax
mov    %r12,%rdi
mov    %r15,%rsi
callq  8230 <TIFFGetField@plt>
cmp    $0x1,%eax
jne    498c3 <TIFFPrintDirectory+0x1383>
mov    %r15,%rcx
mov    -0x58(%rbp),%r15
pushq  -0x30(%rbp)
popq   -0x40(%rbp)
jmpq   4987d <TIFFPrintDirectory+0x133d>
mov    %r12,%rdi
mov    %rbx,%rsi
mov    -0x50(%rbp),%r14
mov    %r14,%rdx
callq  *%rax
mov    %r12,%rdi
callq  8c70 <_TIFFFillStriles@plt>
and    $0x1,%r14
test   %r14,%r14
jg     498d5 <TIFFPrintDirectory+0x1395>
mov    -0x8(%rbp),%rbx
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
leaveq 
retq   
movswq 0x4(%rax),%rcx
cmp    $0xfffd,%cx
je     498ff <TIFFPrintDirectory+0x13bf>
cmp    $0xffff,%cx
jne    49937 <TIFFPrintDirectory+0x13f7>
xor    %r8d,%r8d
mov    %r12,%rdi
mov    %r13,%rsi
lea    -0x5a(%rbp),%rdx
lea    -0x68(%rbp),%rcx
mov    %r13,-0x48(%rbp)
mov    %rax,%r13
mov    %r8,%rax
callq  8230 <TIFFGetField@plt>
cmp    $0x1,%eax
jne    4968e <TIFFPrintDirectory+0x114e>
movzwl -0x5a(%rbp),%eax
mov    %eax,-0x6c(%rbp)
mov    -0x48(%rbp),%rcx
pushq  -0x38(%rbp)
popq   -0x40(%rbp)
jmp    4987d <TIFFPrintDirectory+0x133d>
cmp    $0xfffd,%cx
jne    49956 <TIFFPrintDirectory+0x1416>
mov    $0x1,%ecx
jmpq   496f3 <TIFFPrintDirectory+0x11b3>
mov    %r13,%r15
mov    %rax,%r13
mov    0x20(%r13),%rdi
lea    0x2a720(%rip),%rsi        # 73f5c <module.45+0x75e>
callq  8660 <strcmp@plt>
test   %eax,%eax
je     4996e <TIFFPrintDirectory+0x142e>
mov    %r15,%rcx
mov    -0x58(%rbp),%r15
jmpq   4970a <TIFFPrintDirectory+0x11ca>
xor    %eax,%eax
mov    %r12,%rdi
mov    %rcx,%rsi
lea    -0x68(%rbp),%rdx
mov    %rcx,-0x48(%rbp)
callq  8230 <TIFFGetField@plt>
cmp    $0x1,%eax
jne    4968e <TIFFPrintDirectory+0x114e>
mov    -0x48(%rbp),%rcx
pushq  -0x38(%rbp)
popq   -0x40(%rbp)
mov    -0x6c(%rbp),%r8d
mov    -0x68(%rbp),%r9
mov    %r12,%rdi
mov    %r13,%rsi
mov    %rbx,%rdx
callq  49e90 <_TIFFPrettyPrintField>
test   %eax,%eax
jne    498a9 <TIFFPrintDirectory+0x1369>
mov    %r13,%rsi
mov    -0x6c(%rbp),%edx
mov    -0x68(%rbp),%rcx
mov    %rbx,%rdi
callq  49bc0 <_TIFFPrintField>
mov    -0x40(%rbp),%rax
test   %eax,%eax
jle    4968e <TIFFPrintDirectory+0x114e>
mov    -0x68(%rbp),%rdi
callq  8bb0 <_TIFFfree@plt>
jmpq   4968e <TIFFPrintDirectory+0x114e>
mov    -0x68(%rbp),%rdi
callq  8bb0 <_TIFFfree@plt>
mov    -0x58(%rbp),%r15
jmpq   4968e <TIFFPrintDirectory+0x114e>
mov    0x38(%r12),%rax
and    $0x2000000,%rax
test   %rax,%rax
jne    4999f <TIFFPrintDirectory+0x145f>
mov    -0x8(%rbp),%rbx
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
leaveq 
retq   
xor    %r8d,%r8d
mov    %r12,%rdi
mov    %r13,%rsi
lea    -0x6c(%rbp),%rdx
lea    -0x68(%rbp),%rcx
mov    %r13,-0x40(%rbp)
mov    %rax,%r13
mov    %r8,%rax
callq  8230 <TIFFGetField@plt>
cmp    $0x1,%eax
jne    4968e <TIFFPrintDirectory+0x114e>
mov    -0x40(%rbp),%rcx
pushq  -0x38(%rbp)
popq   -0x40(%rbp)
jmpq   4987d <TIFFPrintDirectory+0x133d>
lea    0x2a5af(%rip),%rdi        # 73eed <module.45+0x6ef>
lea    0x2a5f8(%rip),%rsi        # 73f3d <module.45+0x73f>
mov    $0x258,%edx
lea    0x2a5f8(%rip),%rcx        # 73f49 <module.45+0x74b>
callq  8490 <__assert_fail@plt>
cmp    $0xfffe,%cx
jne    496f3 <TIFFPrintDirectory+0x11b3>
movzwl 0x82(%r12),%ecx
jmpq   496f3 <TIFFPrintDirectory+0x11b3>
lea    0x310e3(%rip),%rdx        # 7aa58 <dotrange.90>
mov    %rdx,-0x68(%rbp)
xor    %eax,%eax
mov    %r12,%rdi
mov    %r15,%rsi
lea    0x310d2(%rip),%rcx        # 7aa5a <dotrange.90+0x2>
callq  8230 <TIFFGetField@plt>
mov    %r15,%rcx
mov    -0x58(%rbp),%r15
pushq  -0x38(%rbp)
popq   -0x40(%rbp)
jmpq   4987d <TIFFPrintDirectory+0x133d>
mov    0xe4(%r12),%edx
mov    0x10(%r12),%eax
and    $0x400,%eax
test   %eax,%eax
jne    499be <TIFFPrintDirectory+0x147e>
lea    0x2a5ba(%rip),%rcx        # 73f76 <module.45+0x778>
jmp    499c5 <TIFFPrintDirectory+0x1485>
lea    0x2a5ab(%rip),%rcx        # 73f70 <module.45+0x772>
xor    %eax,%eax
lea    0x2a597(%rip),%rsi        # 73f65 <module.45+0x767>
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
lea    0x2a5a0(%rip),%r14        # 73f7d <module.45+0x77f>
jmp    49a0b <TIFFPrintDirectory+0x14cb>
mov    0xe8(%r12),%rax
mov    %r13d,%edx
mov    (%rax,%rdx,8),%rcx
mov    0xf0(%r12),%rax
mov    (%rax,%rdx,8),%r8
xor    %eax,%eax
mov    %rbx,%rdi
mov    %r14,%rsi
callq  86f0 <fprintf@plt>
add    $0x1,%r13d
mov    0xe4(%r12),%eax
cmp    %r13d,%eax
ja     499df <TIFFPrintDirectory+0x149f>
mov    -0x8(%rbp),%rbx
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
leaveq 
retq   
xchg   %ax,%ax

0000000000049a30 <_TIFFprintAscii>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rsi,%r14
mov    %rdi,%r15
mov    %r14,%rdi
callq  8350 <strlen@plt>
mov    %rax,%rdx
mov    %r14,%rsi
mov    %r15,%rdi
callq  49ac0 <_TIFFprintAsciiBounded>
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)

0000000000049a70 <_TIFFprintAsciiTag>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rdx,%r15
mov    %rsi,%rdx
xor    %eax,%eax
lea    0x2a508(%rip),%rsi        # 73f97 <module.45+0x799>
mov    %rdi,%r14
callq  86f0 <fprintf@plt>
mov    %r15,%rsi
mov    %r14,%rdi
callq  8cc0 <_TIFFprintAscii@plt>
mov    %r14,%rdi
lea    0x2a4f3(%rip),%rsi        # 73f9f <module.45+0x7a1>
xor    %eax,%eax
callq  86f0 <fprintf@plt>
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
nopl   (%rax)

0000000000049ac0 <_TIFFprintAsciiBounded>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %rsi,%rbx
mov    %rdx,%r12
mov    %rdi,%r13
callq  8d20 <__ctype_b_loc@plt>
mov    %rax,%r14
lea    0x2a4b9(%rip),%r8        # 73fad <module.45+0x7af>
lea    0x2a4b6(%rip),%rsi        # 73fb1 <module.45+0x7b3>
lea    0x2a4a0(%rip),%r15        # 73fa2 <module.45+0x7a4>
jmp    49b22 <_TIFFprintAsciiBounded+0x62>
mov    %r13,%rsi
callq  85e0 <fputc@plt>
add    $0x1,%rbx
add    $0xffffffffffffffff,%r12
lea    0x2a496(%rip),%rsi        # 73fb1 <module.45+0x7b3>
lea    0x2a48b(%rip),%r8        # 73fad <module.45+0x7af>
test   %r12,%r12
jne    49b3d <_TIFFprintAsciiBounded+0x7d>
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
leaveq 
retq   
movsbq (%rbx),%rdi
test   %dil,%dil
je     49b5b <_TIFFprintAsciiBounded+0x9b>
mov    (%r14),%rax
movzwl (%rax,%rdi,2),%eax
and    $0x4000,%eax
test   %eax,%eax
jg     49b04 <_TIFFprintAsciiBounded+0x44>
mov    %r15,%rcx
jmp    49b75 <_TIFFprintAsciiBounded+0xb5>
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
leaveq 
retq   
add    $0x2,%rcx
movsbq (%rcx),%rax
test   %al,%al
je     49b89 <_TIFFprintAsciiBounded+0xc9>
movsbq (%rbx),%rdx
cmp    %al,%dl
jne    49b71 <_TIFFprintAsciiBounded+0xb1>
add    $0x1,%rcx
movsbq (%rcx),%rdx
test   %dl,%dl
jne    49ba7 <_TIFFprintAsciiBounded+0xe7>
xor    %eax,%eax
movsbq (%rbx),%rcx
movzbl %cl,%edx
mov    %r13,%rdi
callq  86f0 <fprintf@plt>
jmpq   49b0c <_TIFFprintAsciiBounded+0x4c>
mov    %r8,%rsi
xor    %eax,%eax
mov    %r13,%rdi
callq  86f0 <fprintf@plt>
jmpq   49b0c <_TIFFprintAsciiBounded+0x4c>
nopl   0x0(%rax)

0000000000049bc0 <_TIFFPrintField>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rsi,%r12
mov    %rdx,%r13
mov    %rcx,%r15
mov    %r15,-0x30(%rbp)
xor    %r14d,%r14d
lea    0x2a511(%rip),%rsi        # 74104 <module.45+0x906>
mov    0x20(%r12),%rdx
mov    %r14,%rax
mov    %rdi,%rbx
callq  86f0 <fprintf@plt>
lea    0x2a501(%rip),%rsi        # 7410b <module.45+0x90d>
lea    0x2a4fd(%rip),%r8        # 7410e <module.45+0x910>
lea    0x2a4fb(%rip),%r9        # 74113 <module.45+0x915>
lea    0x2a4f7(%rip),%r10        # 74116 <module.45+0x918>
lea    0x2a4f4(%rip),%r11        # 7411a <module.45+0x91c>
lea    -0x1(%r13),%eax
mov    %r15,%rdx
mov    %rax,%r15
jmp    49c81 <_TIFFPrintField+0xc1>
movzbl (%rdx,%rcx,1),%edx
xor    %eax,%eax
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
cmp    %r15d,%r14d
jae    49c56 <_TIFFPrintField+0x96>
xor    %eax,%eax
mov    %rbx,%rdi
lea    0x2a50f(%rip),%rsi        # 74160 <module.45+0x962>
callq  86f0 <fprintf@plt>
add    $0x1,%r14d
lea    0x2a4b2(%rip),%r9        # 74113 <module.45+0x915>
lea    0x2a4a6(%rip),%r8        # 7410e <module.45+0x910>
lea    0x2a49c(%rip),%rsi        # 7410b <module.45+0x90d>
mov    -0x30(%rbp),%rdx
lea    0x2a49c(%rip),%r10        # 74116 <module.45+0x918>
lea    0x2a499(%rip),%r11        # 7411a <module.45+0x91c>
cmp    %r13d,%r14d
jae    49d45 <_TIFFPrintField+0x185>
mov    %r14d,%ecx
mov    0x8(%r12),%eax
cmp    $0x1,%eax
je     49c32 <_TIFFPrintField+0x72>
cmp    $0x7,%eax
je     49d6c <_TIFFPrintField+0x1ac>
cmp    $0x6,%eax
je     49d82 <_TIFFPrintField+0x1c2>
cmp    $0x3,%eax
je     49d99 <_TIFFPrintField+0x1d9>
cmp    $0x8,%eax
je     49dac <_TIFFPrintField+0x1ec>
cmp    $0x4,%eax
je     49dc3 <_TIFFPrintField+0x203>
cmp    $0x9,%eax
je     49dd8 <_TIFFPrintField+0x218>
cmp    $0xd,%eax
je     49dee <_TIFFPrintField+0x22e>
cmp    $0x5,%eax
jne    49cfd <_TIFFPrintField+0x13d>
movss  (%rdx,%rcx,4),%xmm0
cvtss2sd %xmm0,%xmm0
mov    $0x1,%eax
mov    %rbx,%rdi
lea    0x2a431(%rip),%rsi        # 74124 <module.45+0x926>
callq  86f0 <fprintf@plt>
jmpq   49c40 <_TIFFPrintField+0x80>
cmp    $0xa,%eax
je     49cdb <_TIFFPrintField+0x11b>
cmp    $0xb,%eax
je     49cdb <_TIFFPrintField+0x11b>
cmp    $0x10,%eax
je     49e07 <_TIFFPrintField+0x247>
cmp    $0x11,%eax
je     49e21 <_TIFFPrintField+0x261>
cmp    $0x12,%eax
je     49e3b <_TIFFPrintField+0x27b>
cmp    $0xc,%eax
je     49e55 <_TIFFPrintField+0x295>
cmp    $0x2,%eax
je     49e73 <_TIFFPrintField+0x2b3>
xor    %eax,%eax
lea    0x2a3fe(%rip),%rsi        # 7413b <module.45+0x93d>
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
mov    %rbx,%rdi
xor    %eax,%eax
lea    0x29d2f(%rip),%rsi        # 73a80 <module.45+0x282>
callq  86f0 <fprintf@plt>
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
movzbl (%rdx,%rcx,1),%edx
mov    %r8,%rsi
xor    %eax,%eax
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
jmpq   49c40 <_TIFFPrintField+0x80>
movsbq (%rdx,%rcx,1),%rdx
mov    %r9,%rsi
xor    %eax,%eax
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
jmpq   49c40 <_TIFFPrintField+0x80>
movzwl (%rdx,%rcx,2),%edx
xor    %eax,%eax
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
jmpq   49c40 <_TIFFPrintField+0x80>
movswq (%rdx,%rcx,2),%rdx
mov    %r9,%rsi
xor    %eax,%eax
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
jmpq   49c40 <_TIFFPrintField+0x80>
mov    (%rdx,%rcx,4),%edx
mov    %r10,%rsi
xor    %eax,%eax
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
jmpq   49c40 <_TIFFPrintField+0x80>
movslq (%rdx,%rcx,4),%rdx
mov    %r11,%rsi
xor    %eax,%eax
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
jmpq   49c40 <_TIFFPrintField+0x80>
mov    (%rdx,%rcx,4),%edx
xor    %eax,%eax
mov    %rbx,%rdi
lea    0x2a321(%rip),%rsi        # 7411e <module.45+0x920>
callq  86f0 <fprintf@plt>
jmpq   49c40 <_TIFFPrintField+0x80>
mov    (%rdx,%rcx,8),%rdx
xor    %eax,%eax
mov    %rbx,%rdi
lea    0x2a310(%rip),%rsi        # 74127 <module.45+0x929>
callq  86f0 <fprintf@plt>
jmpq   49c40 <_TIFFPrintField+0x80>
mov    (%rdx,%rcx,8),%rdx
xor    %eax,%eax
mov    %rbx,%rdi
lea    0x2a2fb(%rip),%rsi        # 7412c <module.45+0x92e>
callq  86f0 <fprintf@plt>
jmpq   49c40 <_TIFFPrintField+0x80>
mov    (%rdx,%rcx,8),%rdx
xor    %eax,%eax
mov    %rbx,%rdi
lea    0x2a2e6(%rip),%rsi        # 74131 <module.45+0x933>
callq  86f0 <fprintf@plt>
jmpq   49c40 <_TIFFPrintField+0x80>
movsd  (%rdx,%rcx,8),%xmm0
mov    $0x1,%eax
mov    %rbx,%rdi
lea    0x2a2bb(%rip),%rsi        # 74124 <module.45+0x926>
callq  86f0 <fprintf@plt>
jmpq   49c40 <_TIFFPrintField+0x80>
xor    %eax,%eax
lea    0x2a2bc(%rip),%rsi        # 74138 <module.45+0x93a>
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
jmpq   49d45 <_TIFFPrintField+0x185>
nopl   0x0(%rax)

0000000000049e90 <_TIFFPrettyPrintField>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    %rcx,-0x30(%rbp)
mov    %r8,-0x28(%rbp)
mov    %rsi,-0x20(%rbp)
mov    %rdx,-0x10(%rbp)
mov    %r9,-0x18(%rbp)
mov    0x20(%rsi),%rdi
lea    0x2a2ab(%rip),%rsi        # 74162 <module.45+0x964>
mov    $0x4,%edx
callq  8120 <strncmp@plt>
test   %eax,%eax
jne    49ec9 <_TIFFPrettyPrintField+0x39>
xor    %eax,%eax
leaveq 
retq   
mov    -0x30(%rbp),%rax
cmp    $0x83ba,%eax
jbe    49eed <_TIFFPrettyPrintField+0x5d>
cmp    $0x8772,%eax
jbe    49f06 <_TIFFPrettyPrintField+0x76>
cmp    $0x8773,%eax
je     49f20 <_TIFFPrettyPrintField+0x90>
cmp    $0x923f,%eax
je     49f3f <_TIFFPrettyPrintField+0xaf>
xor    %eax,%eax
leaveq 
retq   
cmp    $0x14f,%eax
jbe    49f50 <_TIFFPrettyPrintField+0xc0>
cmp    $0x150,%eax
je     49f6a <_TIFFPrettyPrintField+0xda>
cmp    $0x2bc,%eax
je     49f7b <_TIFFPrettyPrintField+0xeb>
xor    %eax,%eax
leaveq 
retq   
cmp    $0x83bb,%eax
je     49fb3 <_TIFFPrettyPrintField+0x123>
cmp    $0x8649,%eax
je     49fd6 <_TIFFPrettyPrintField+0x146>
xor    %eax,%eax
leaveq 
retq   
xor    %eax,%eax
lea    0x2a2ea(%rip),%rsi        # 74213 <module.45+0xa15>
mov    -0x28(%rbp),%rcx
mov    %ecx,%edx
mov    -0x10(%rbp),%rdi
callq  86f0 <fprintf@plt>
mov    $0x1,%eax
leaveq 
retq   
mov    -0x28(%rbp),%rax
cmp    $0x1,%eax
je     49ff5 <_TIFFPrettyPrintField+0x165>
xor    %eax,%eax
leaveq 
retq   
cmp    $0x13e,%eax
je     4a005 <_TIFFPrettyPrintField+0x175>
cmp    $0x14c,%eax
je     4a016 <_TIFFPrettyPrintField+0x186>
xor    %eax,%eax
leaveq 
retq   
mov    -0x28(%rbp),%rax
cmp    $0x2,%eax
je     4a027 <_TIFFPrettyPrintField+0x197>
xor    %eax,%eax
leaveq 
retq   
xor    %eax,%eax
lea    0x2a21f(%rip),%rsi        # 741a3 <module.45+0x9a5>
mov    -0x10(%rbp),%rcx
mov    %rcx,%rdi
mov    %r15,-0x30(%rbp)
mov    %rcx,%r15
callq  86f0 <fprintf@plt>
mov    %r12,-0x8(%rbp)
mov    %r13,-0x10(%rbp)
mov    %r14,-0x20(%rbp)
xor    %r12d,%r12d
mov    -0x18(%rbp),%r13
mov    -0x28(%rbp),%r14
jmpq   4a050 <_TIFFPrettyPrintField+0x1c0>
xor    %eax,%eax
lea    0x2a204(%rip),%rsi        # 741c0 <module.45+0x9c2>
mov    -0x28(%rbp),%rcx
mov    %ecx,%edx
shl    $0x2,%rdx
mov    -0x10(%rbp),%rdi
callq  86f0 <fprintf@plt>
mov    $0x1,%eax
leaveq 
retq   
xor    %eax,%eax
lea    0x2a20c(%rip),%rsi        # 741eb <module.45+0x9ed>
mov    -0x28(%rbp),%rcx
mov    %ecx,%edx
mov    -0x10(%rbp),%rdi
callq  86f0 <fprintf@plt>
mov    $0x1,%eax
leaveq 
retq   
mov    -0x20(%rbp),%rax
mov    0x8(%rax),%eax
cmp    $0xc,%eax
je     4a07d <_TIFFPrettyPrintField+0x1ed>
xor    %eax,%eax
leaveq 
retq   
mov    -0x28(%rbp),%rax
cmp    $0x2,%eax
je     4a0a1 <_TIFFPrettyPrintField+0x211>
xor    %eax,%eax
leaveq 
retq   
mov    -0x28(%rbp),%rax
cmp    $0x2,%eax
je     4a0b1 <_TIFFPrettyPrintField+0x221>
xor    %eax,%eax
leaveq 
retq   
mov    -0x20(%rbp),%rax
mov    0x8(%rax),%eax
cmp    $0x3,%eax
je     4a0c1 <_TIFFPrettyPrintField+0x231>
xor    %eax,%eax
leaveq 
retq   
mov    %r12d,%eax
movsbq 0x0(%r13,%rax,1),%rdi
mov    %r15,%rsi
callq  85e0 <fputc@plt>
add    $0x1,%r12d
cmp    %r12d,%r14d
ja     4a03b <_TIFFPrettyPrintField+0x1ab>
mov    %r15,%rdi
xor    %eax,%eax
lea    0x29a1f(%rip),%rsi        # 73a80 <module.45+0x282>
callq  86f0 <fprintf@plt>
mov    -0x20(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
mov    $0x1,%eax
mov    -0x30(%rbp),%r15
leaveq 
retq   
mov    $0x1,%eax
lea    0x2a1af(%rip),%rsi        # 74238 <module.45+0xa3a>
mov    -0x18(%rbp),%rcx
movsd  (%rcx),%xmm0
mov    -0x10(%rbp),%rdi
callq  86f0 <fprintf@plt>
mov    $0x1,%eax
leaveq 
retq   
mov    -0x20(%rbp),%rax
mov    0x8(%rax),%eax
cmp    $0x5,%eax
je     4a0e5 <_TIFFPrettyPrintField+0x255>
xor    %eax,%eax
leaveq 
retq   
mov    -0x20(%rbp),%rax
mov    0x8(%rax),%eax
cmp    $0x3,%eax
je     4a116 <_TIFFPrettyPrintField+0x286>
xor    %eax,%eax
leaveq 
retq   
xor    %eax,%eax
lea    0x2a0af(%rip),%rsi        # 74179 <module.45+0x97b>
mov    -0x18(%rbp),%rcx
movzwl (%rcx),%edx
movzwl 0x2(%rcx),%ecx
mov    -0x10(%rbp),%rdi
callq  86f0 <fprintf@plt>
mov    $0x1,%eax
leaveq 
retq   
mov    $0x2,%eax
lea    0x2a09c(%rip),%rsi        # 7418d <module.45+0x98f>
mov    -0x18(%rbp),%rcx
movss  (%rcx),%xmm0
cvtss2sd %xmm0,%xmm0
movss  0x4(%rcx),%xmm1
cvtss2sd %xmm1,%xmm1
mov    -0x10(%rbp),%rdi
callq  86f0 <fprintf@plt>
mov    $0x1,%eax
leaveq 
retq   
xor    %eax,%eax
lea    0x2a048(%rip),%rsi        # 74167 <module.45+0x969>
mov    -0x10(%rbp),%rdi
mov    %rdi,%rcx
mov    %r15,-0x30(%rbp)
mov    %rdi,%r15
mov    %rcx,%rdi
callq  86f0 <fprintf@plt>
mov    -0x18(%rbp),%rax
movzwl (%rax),%edx
cmp    $0x1,%dx
je     4a161 <_TIFFPrettyPrintField+0x2d1>
mov    %r15,%rdi
xor    %eax,%eax
lea    0x29a5e(%rip),%rsi        # 73bac <module.45+0x3ae>
mov    %rdx,%rcx
callq  86f0 <fprintf@plt>
mov    $0x1,%eax
mov    -0x30(%rbp),%r15
leaveq 
retq   
mov    %r15,%rdi
xor    %eax,%eax
lea    0x2a006(%rip),%rsi        # 74173 <module.45+0x975>
callq  86f0 <fprintf@plt>
mov    $0x1,%eax
mov    -0x30(%rbp),%r15
leaveq 
retq   
nopl   (%rax)

000000000004a180 <TIFFReadBufferSetup>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    0x10(%rdi),%eax
mov    %rax,%rcx
and    $0x20000,%ecx
test   %ecx,%ecx
je     4a1b7 <TIFFReadBufferSetup+0x37>
lea    0x2a0d7(%rip),%rdi        # 74276 <module.8+0x14>
lea    0x2a0f3(%rip),%rsi        # 74299 <module.8+0x37>
mov    $0x56c,%edx
lea    0x2a0f2(%rip),%rcx        # 742a4 <module.8+0x42>
callq  8490 <__assert_fail@plt>
mov    %rax,%rcx
and    $0xff7fffff,%ecx
mov    %ecx,0x10(%rdi)
mov    0x368(%rdi),%rcx
test   %rcx,%rcx
jne    4a1d7 <TIFFReadBufferSetup+0x57>
mov    %r15,%r8
mov    %rdi,%r15
jmp    4a22d <TIFFReadBufferSetup+0xad>
and    $0x200,%eax
test   %eax,%eax
jne    4a1e8 <TIFFReadBufferSetup+0x68>
mov    %r15,%r8
mov    %rdi,%r15
jmp    4a217 <TIFFReadBufferSetup+0x97>
mov    %r13,-0x8(%rbp)
mov    %r14,-0x10(%rbp)
mov    %r15,-0x18(%rbp)
mov    %rsi,%r13
mov    %rdx,%r14
mov    %rdi,%r15
mov    %rcx,%rdi
callq  8bb0 <_TIFFfree@plt>
mov    %r14,%rdx
mov    %r13,%rsi
mov    -0x18(%rbp),%r8
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
movq   $0x0,0x368(%r15)
movq   $0x0,0x370(%r15)
lea    0x2a02e(%rip),%r9        # 74262 <module.8>
mov    $0x1,%eax
test   %rsi,%rsi
jne    4a287 <TIFFReadBufferSetup+0x107>
lea    0x3ff(%rdx),%rsi
and    $0xfffffffffffffc00,%rsi
mov    %rsi,0x370(%r15)
test   %rsi,%rsi
je     4a2b4 <TIFFReadBufferSetup+0x134>
mov    %r8,-0x18(%rbp)
mov    %rax,%rdi
callq  84d0 <_TIFFcalloc@plt>
mov    %rax,0x368(%r15)
mov    0x10(%r15),%ecx
or     $0x200,%ecx
lea    0x29fe6(%rip),%r9        # 74262 <module.8>
mov    $0x1,%eax
mov    -0x18(%rbp),%r8
jmp    4a29f <TIFFReadBufferSetup+0x11f>
mov    %rdx,0x370(%r15)
mov    %rsi,0x368(%r15)
mov    0x10(%r15),%ecx
and    $0xfffffdff,%ecx
mov    %ecx,0x10(%r15)
mov    0x368(%r15),%rcx
test   %rcx,%rcx
je     4a2d3 <TIFFReadBufferSetup+0x153>
mov    %r8,%r15
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
mov    %r9,%rsi
mov    %r8,%r15
lea    0x29fee(%rip),%rdx        # 742b8 <module.8+0x56>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
lea    0x29fe9(%rip),%rdx        # 742cc <module.8+0x6a>
mov    0x27c(%r15),%ecx
mov    %r8,-0x18(%rbp)
mov    %r9,%rsi
callq  8a00 <TIFFErrorExt@plt>
movq   $0x0,0x370(%r15)
xor    %eax,%eax
mov    -0x18(%rbp),%r15
leaveq 
retq   
nopl   0x0(%rax)

000000000004a310 <TIFFReadScanline>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %rdi,-0x10(%rbp)
mov    %rdx,-0x18(%rbp)
mov    %rcx,-0x20(%rbp)
mov    %rsi,-0x8(%rbp)
xor    %esi,%esi
callq  4ba80 <TIFFCheckRead>
test   %eax,%eax
jne    4a33c <TIFFReadScanline+0x2c>
mov    $0xffffffffffffffff,%rax
leaveq 
retq   
mov    -0x10(%rbp),%rax
mov    %rax,%rdi
mov    -0x18(%rbp),%rcx
mov    %rcx,%rsi
mov    -0x20(%rbp),%rdx
mov    %r14,-0x10(%rbp)
mov    %r15,-0x18(%rbp)
mov    %rax,%r14
mov    %rcx,%r15
callq  4c5b0 <TIFFSeek>
test   %eax,%eax
jne    4a37c <TIFFReadScanline+0x6c>
xor    %r14d,%r14d
test   %r14d,%r14d
jle    4a3ab <TIFFReadScanline+0x9b>
mov    $0x1,%eax
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
leaveq 
retq   
add    $0x1,%r15d
mov    0x2f8(%r14),%rax
mov    0x358(%r14),%rdx
mov    %r14,%rdi
mov    -0x8(%rbp),%rsi
mov    -0x20(%rbp),%rcx
callq  *%rax
mov    %r15d,0x27c(%r14)
test   %eax,%eax
jne    4a3bc <TIFFReadScanline+0xac>
xor    %r14d,%r14d
jmp    4a368 <TIFFReadScanline+0x58>
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
mov    $0xffffffffffffffff,%rax
leaveq 
retq   
mov    %r14,%rdi
mov    %rax,%r14
mov    0x3e8(%rdi),%rcx
mov    0x358(%rdi),%rdx
mov    -0x8(%rbp),%rsi
callq  *%rcx
jmp    4a368 <TIFFReadScanline+0x58>
nopl   0x0(%rax,%rax,1)

000000000004a3e0 <TIFFReadTile>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    %rdi,-0x10(%rbp)
mov    %rdx,-0x18(%rbp)
mov    %rcx,-0x20(%rbp)
mov    %r8,-0x28(%rbp)
mov    %r9,-0x30(%rbp)
mov    %rsi,-0x8(%rbp)
mov    $0x1,%esi
callq  4ba80 <TIFFCheckRead>
test   %eax,%eax
jne    4a417 <TIFFReadTile+0x37>
mov    $0xffffffffffffffff,%rax
leaveq 
retq   
mov    -0x10(%rbp),%rdi
mov    -0x18(%rbp),%rsi
mov    -0x20(%rbp),%rdx
mov    -0x28(%rbp),%rcx
mov    -0x30(%rbp),%r8
callq  8030 <TIFFCheckTile@plt>
test   %eax,%eax
jne    4a43d <TIFFReadTile+0x5d>
mov    $0xffffffffffffffff,%rax
leaveq 
retq   
mov    -0x10(%rbp),%rax
mov    %rax,%rdi
mov    %r15,-0x10(%rbp)
mov    %rax,%r15
mov    -0x30(%rbp),%r8
mov    -0x28(%rbp),%rcx
mov    -0x20(%rbp),%rdx
mov    -0x18(%rbp),%rsi
callq  8110 <TIFFComputeTile@plt>
mov    %rax,%rsi
mov    %r15,%rdi
mov    $0xffffffffffffffff,%rcx
mov    -0x8(%rbp),%rdx
callq  89d0 <TIFFReadEncodedTile@plt>
mov    -0x10(%rbp),%r15
leaveq 
retq   
nopl   0x0(%rax)

000000000004a480 <TIFFReadEncodedStrip>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    %r15,-0x8(%rbp)
mov    %rcx,-0x20(%rbp)
mov    %rsi,-0x18(%rbp)
mov    %rdx,-0x10(%rbp)
lea    -0x22(%rbp),%rdx
mov    %rdi,%r15
callq  4c790 <TIFFReadEncodedStripGetStripSize>
cmp    $0xffffffffffffffff,%rax
jne    4a4b7 <TIFFReadEncodedStrip+0x37>
mov    $0xffffffffffffffff,%rax
mov    -0x8(%rbp),%r15
leaveq 
retq   
movzwl 0x78(%r15),%ecx
cmp    $0x1,%cx
je     4a4f1 <TIFFReadEncodedStrip+0x71>
mov    -0x20(%rbp),%rcx
cmp    $0xffffffffffffffff,%rcx
jne    4a552 <TIFFReadEncodedStrip+0xd2>
mov    %rax,-0x20(%rbp)
mov    %r15,%rdi
mov    -0x18(%rbp),%rsi
callq  8880 <TIFFFillStrip@plt>
test   %eax,%eax
jne    4a563 <TIFFReadEncodedStrip+0xe3>
mov    $0xffffffffffffffff,%rax
mov    -0x8(%rbp),%r15
leaveq 
retq   
mov    -0x20(%rbp),%rcx
cmp    $0xffffffffffffffff,%rcx
je     4a4c6 <TIFFReadEncodedStrip+0x46>
cmp    %rcx,%rax
jg     4a4c6 <TIFFReadEncodedStrip+0x46>
mov    0x10(%r15),%edx
mov    %rdx,%rsi
and    $0x800,%esi
test   %esi,%esi
jne    4a4c6 <TIFFReadEncodedStrip+0x46>
and    $0x20000,%edx
test   %edx,%edx
jne    4a4c6 <TIFFReadEncodedStrip+0x46>
lea    0x29dd3(%rip),%r8        # 742f5 <module.14>
mov    %r15,%rdi
mov    -0x10(%rbp),%rdx
mov    %rax,%rcx
mov    %r14,-0x20(%rbp)
mov    %rax,%r14
mov    -0x18(%rbp),%rsi
callq  4bb00 <TIFFReadRawStrip1>
cmp    %rax,%r14
je     4a596 <TIFFReadEncodedStrip+0x116>
mov    -0x20(%rbp),%r14
mov    $0xffffffffffffffff,%rax
mov    -0x8(%rbp),%r15
leaveq 
retq   
cmp    %rcx,%rax
jle    4a4d0 <TIFFReadEncodedStrip+0x50>
mov    %rcx,%rax
jmpq   4a4d0 <TIFFReadEncodedStrip+0x50>
mov    0x308(%r15),%rax
movzwl -0x22(%rbp),%ecx
mov    %r15,%rdi
mov    -0x10(%rbp),%rsi
mov    -0x20(%rbp),%r8
mov    %r8,%rdx
mov    %r15,-0x20(%rbp)
mov    %r8,%r15
callq  *%rax
test   %eax,%eax
jg     4a5c2 <TIFFReadEncodedStrip+0x142>
mov    $0xffffffffffffffff,%rax
mov    -0x8(%rbp),%r15
leaveq 
retq   
mov    0x10(%r15),%ecx
movzwl 0x7e(%r15),%eax
and    %ecx,%eax
test   %eax,%eax
je     4a5dc <TIFFReadEncodedStrip+0x15c>
mov    -0x10(%rbp),%rsi
mov    %r15,%rdi
mov    %r14,%rdx
callq  *0x3e8(%rdi)
mov    %r14,%rax
mov    -0x20(%rbp),%r14
mov    -0x8(%rbp),%r15
leaveq 
retq   
mov    %r15,%rdx
mov    -0x20(%rbp),%rdi
mov    -0x10(%rbp),%rsi
callq  *0x3e8(%rdi)
mov    %r15,%rax
mov    -0x8(%rbp),%r15
leaveq 
retq   
and    $0x100,%ecx
test   %ecx,%ecx
je     4a5ec <TIFFReadEncodedStrip+0x16c>
mov    -0x10(%rbp),%rsi
jmp    4a5a9 <TIFFReadEncodedStrip+0x129>
mov    -0x10(%rbp),%rax
mov    %rax,%rdi
mov    %r14,%rsi
mov    %r13,-0x18(%rbp)
mov    %rax,%r13
callq  8700 <TIFFReverseBits@plt>
mov    %r13,%rsi
mov    -0x18(%rbp),%r13
jmp    4a5a9 <TIFFReadEncodedStrip+0x129>
nopl   0x0(%rax,%rax,1)

000000000004a610 <TIFFReadRawStrip>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %rdi,-0x18(%rbp)
mov    %rsi,-0x20(%rbp)
mov    %rcx,-0x10(%rbp)
mov    %rdx,-0x8(%rbp)
xor    %esi,%esi
callq  4ba80 <TIFFCheckRead>
test   %eax,%eax
jne    4a63c <TIFFReadRawStrip+0x2c>
mov    $0xffffffffffffffff,%rax
leaveq 
retq   
lea    0x29cc7(%rip),%rsi        # 7430a <module.15>
mov    -0x18(%rbp),%rdi
mov    0xe4(%rdi),%r8d
mov    -0x20(%rbp),%r9
cmp    %r9d,%r8d
jbe    4a691 <TIFFReadRawStrip+0x81>
mov    0x10(%rdi),%eax
and    $0x20000,%eax
test   %eax,%eax
jne    4a6b2 <TIFFReadRawStrip+0xa2>
mov    0xf0(%rdi),%rcx
mov    %r9d,%eax
mov    (%rcx,%rax,8),%rcx
test   %rcx,%rcx
jle    4a6d0 <TIFFReadRawStrip+0xc0>
mov    -0x10(%rbp),%rax
cmp    $0xffffffffffffffff,%rax
jne    4a6f1 <TIFFReadRawStrip+0xe1>
mov    %rsi,%r8
mov    %r9,%rsi
mov    -0x8(%rbp),%rdx
callq  4bb00 <TIFFReadRawStrip1>
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
lea    0x29c7a(%rip),%rdx        # 7431b <module.15+0x11>
mov    %r9d,%ecx
callq  8a00 <TIFFErrorExt@plt>
mov    $0xffffffffffffffff,%rax
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
lea    0x29c7a(%rip),%rdx        # 7433c <module.15+0x32>
callq  8a00 <TIFFErrorExt@plt>
mov    $0xffffffffffffffff,%rax
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
lea    0x29ca0(%rip),%rdx        # 74380 <module.15+0x76>
mov    %r9d,%r8d
callq  8a00 <TIFFErrorExt@plt>
mov    $0xffffffffffffffff,%rax
leaveq 
retq   
cmp    %rax,%rcx
jle    4a680 <TIFFReadRawStrip+0x70>
mov    %rax,%rcx
jmp    4a680 <TIFFReadRawStrip+0x70>
nopl   0x0(%rax,%rax,1)

000000000004a700 <TIFFReadEncodedTile>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    %rdi,-0x20(%rbp)
mov    %rsi,-0x28(%rbp)
mov    %rcx,-0x18(%rbp)
mov    %rdx,-0x8(%rbp)
mov    0x2b0(%rdi),%rax
mov    %rax,-0x10(%rbp)
mov    $0x1,%esi
callq  4ba80 <TIFFCheckRead>
test   %eax,%eax
jne    4a73a <TIFFReadEncodedTile+0x3a>
mov    $0xffffffffffffffff,%rax
leaveq 
retq   
lea    0x29c69(%rip),%r8        # 743aa <module.19>
mov    -0x20(%rbp),%rdi
mov    0xe4(%rdi),%r9d
mov    -0x28(%rbp),%rsi
cmp    %esi,%r9d
jbe    4a783 <TIFFReadEncodedTile+0x83>
movzwl 0x78(%rdi),%eax
cmp    $0x1,%ax
je     4a7a9 <TIFFReadEncodedTile+0xa9>
mov    -0x10(%rbp),%rax
mov    -0x18(%rbp),%rcx
cmp    $0xffffffffffffffff,%rcx
jne    4a7b9 <TIFFReadEncodedTile+0xb9>
mov    %rax,-0x18(%rbp)
callq  8a10 <TIFFFillTile@plt>
test   %eax,%eax
jne    4a7c3 <TIFFReadEncodedTile+0xc3>
mov    $0xffffffffffffffff,%rax
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
lea    0x29c2b(%rip),%rdx        # 743be <module.19+0x14>
mov    %esi,%ecx
mov    %r8,%rsi
mov    %r9,%r8
callq  8a00 <TIFFErrorExt@plt>
mov    $0xffffffffffffffff,%rax
leaveq 
retq   
mov    -0x18(%rbp),%rcx
cmp    $0xffffffffffffffff,%rcx
jne    4a7f7 <TIFFReadEncodedTile+0xf7>
mov    -0x10(%rbp),%rax
jmp    4a767 <TIFFReadEncodedTile+0x67>
cmp    %rax,%rcx
jg     4a76d <TIFFReadEncodedTile+0x6d>
mov    %rcx,%rax
jmp    4a76d <TIFFReadEncodedTile+0x6d>
mov    -0x20(%rbp),%rdi
mov    0xe0(%rdi),%ecx
xor    %edx,%edx
mov    0x318(%rdi),%r8
mov    -0x28(%rbp),%rax
div    %ecx
mov    %rax,%rcx
mov    -0x8(%rbp),%rsi
mov    -0x18(%rbp),%rdx
callq  *%r8
test   %eax,%eax
jne    4a85e <TIFFReadEncodedTile+0x15e>
mov    $0xffffffffffffffff,%rax
leaveq 
retq   
mov    -0x10(%rbp),%rax
cmp    %rax,%rcx
jl     4a767 <TIFFReadEncodedTile+0x67>
mov    0x10(%rdi),%edx
mov    %rdx,%r9
and    $0x800,%r9d
test   %r9d,%r9d
jne    4a767 <TIFFReadEncodedTile+0x67>
and    $0x20000,%edx
test   %edx,%edx
jne    4a767 <TIFFReadEncodedTile+0x67>
mov    %rdi,%r9
mov    -0x8(%rbp),%rdx
mov    %rax,%rcx
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rax,%r14
mov    %rdi,%r15
mov    %r9,%rdi
callq  4bd00 <TIFFReadRawTile1>
cmp    %rax,%r14
je     4a876 <TIFFReadEncodedTile+0x176>
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    $0xffffffffffffffff,%rax
leaveq 
retq   
mov    -0x18(%rbp),%rdx
mov    -0x8(%rbp),%rsi
mov    -0x20(%rbp),%rdi
callq  *0x3e8(%rdi)
mov    -0x18(%rbp),%rax
leaveq 
retq   
mov    0x10(%r15),%ecx
movzwl 0x7e(%r15),%eax
and    %ecx,%eax
test   %eax,%eax
je     4a8a2 <TIFFReadEncodedTile+0x1a2>
mov    -0x8(%rbp),%rsi
mov    %r15,%rdi
mov    %r14,%rdx
callq  *0x3e8(%rdi)
mov    %r14,%rax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
leaveq 
retq   
and    $0x100,%ecx
test   %ecx,%ecx
je     4a8b2 <TIFFReadEncodedTile+0x1b2>
mov    -0x8(%rbp),%rsi
jmp    4a889 <TIFFReadEncodedTile+0x189>
mov    -0x8(%rbp),%rax
mov    %rax,%rdi
mov    %r14,%rsi
mov    %r13,-0x10(%rbp)
mov    %rax,%r13
callq  8700 <TIFFReverseBits@plt>
mov    %r13,%rsi
mov    -0x10(%rbp),%r13
jmp    4a889 <TIFFReadEncodedTile+0x189>
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   0x0(%rax)

000000000004a8e0 <TIFFReadRawTile>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %rdi,-0x18(%rbp)
mov    %rsi,-0x20(%rbp)
mov    %rcx,-0x10(%rbp)
mov    %rdx,-0x8(%rbp)
mov    $0x1,%esi
callq  4ba80 <TIFFCheckRead>
test   %eax,%eax
jne    4a90f <TIFFReadRawTile+0x2f>
mov    $0xffffffffffffffff,%rax
leaveq 
retq   
lea    0x29ac8(%rip),%rsi        # 743de <module.21>
mov    -0x18(%rbp),%rdi
mov    0xe4(%rdi),%r8d
mov    -0x20(%rbp),%r9
cmp    %r9d,%r8d
jbe    4a95f <TIFFReadRawTile+0x7f>
mov    0x10(%rdi),%eax
and    $0x20000,%eax
test   %eax,%eax
jne    4a980 <TIFFReadRawTile+0xa0>
mov    0xf0(%rdi),%rcx
mov    %r9d,%eax
mov    (%rcx,%rax,8),%rcx
mov    -0x10(%rbp),%rax
cmp    $0xffffffffffffffff,%rax
jne    4a99e <TIFFReadRawTile+0xbe>
mov    %rsi,%r8
mov    %r9,%rsi
mov    -0x8(%rbp),%rdx
callq  4bd00 <TIFFReadRawTile1>
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
lea    0x29a4f(%rip),%rdx        # 743be <module.19+0x14>
mov    %r9d,%ecx
callq  8a00 <TIFFErrorExt@plt>
mov    $0xffffffffffffffff,%rax
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
lea    0x299ac(%rip),%rdx        # 7433c <module.15+0x32>
callq  8a00 <TIFFErrorExt@plt>
mov    $0xffffffffffffffff,%rax
leaveq 
retq   
cmp    %rax,%rcx
jbe    4a94e <TIFFReadRawTile+0x6e>
mov    %rax,%rcx
jmp    4a94e <TIFFReadRawTile+0x6e>
nopl   0x0(%rax,%rax,1)

000000000004a9b0 <_TIFFNoPostDecode>:
push   %rbp
mov    %rsp,%rbp
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)

000000000004a9c0 <_TIFFSwab16BitData>:
push   %rbp
mov    %rsp,%rbp
mov    %rdx,%rax
and    $0x1,%rax
test   %rax,%rax
je     4a9ef <_TIFFSwab16BitData+0x2f>
lea    0x29a17(%rip),%rdi        # 743ee <module.21+0x10>
lea    0x298bb(%rip),%rsi        # 74299 <module.8+0x37>
mov    $0x601,%edx
lea    0x29a12(%rip),%rcx        # 743fc <module.21+0x1e>
callq  8490 <__assert_fail@plt>
mov    %rdx,%rax
shr    $0x3f,%rax
add    %rdx,%rax
sar    %rax
mov    %rsi,%rdi
mov    %rax,%rsi
callq  83d0 <TIFFSwabArrayOfShort@plt>
leaveq 
retq   
nopl   0x0(%rax)

000000000004aa10 <_TIFFSwab24BitData>:
push   %rbp
mov    %rsp,%rbp
mov    %rdx,%rax
mov    $0x3,%ecx
cqto   
mov    %rax,%rdi
idiv   %rcx
test   %rdx,%rdx
je     4aa48 <_TIFFSwab24BitData+0x38>
lea    0x299df(%rip),%rdi        # 7440f <module.21+0x31>
lea    0x29862(%rip),%rsi        # 74299 <module.8+0x37>
mov    $0x609,%edx
lea    0x299da(%rip),%rcx        # 7441d <module.21+0x3f>
callq  8490 <__assert_fail@plt>
mov    %rdi,%rax
cqto   
idiv   %rcx
mov    %rsi,%rdi
mov    %rax,%rsi
callq  8a60 <TIFFSwabArrayOfTriples@plt>
leaveq 
retq   
nopl   (%rax)

000000000004aa60 <_TIFFSwab32BitData>:
push   %rbp
mov    %rsp,%rbp
mov    %rdx,%rax
and    $0x3,%rax
test   %rax,%rax
je     4aa8f <_TIFFSwab32BitData+0x2f>
lea    0x299b9(%rip),%rdi        # 74430 <module.21+0x52>
lea    0x2981b(%rip),%rsi        # 74299 <module.8+0x37>
mov    $0x611,%edx
lea    0x299b4(%rip),%rcx        # 7443e <module.21+0x60>
callq  8490 <__assert_fail@plt>
mov    %rdx,%rax
sar    %rax
shr    $0x3e,%rax
add    %rdx,%rax
sar    $0x2,%rax
mov    %rsi,%rdi
mov    %rax,%rsi
callq  8b70 <TIFFSwabArrayOfLong@plt>
leaveq 
retq   
nopl   (%rax)

000000000004aab0 <_TIFFSwab64BitData>:
push   %rbp
mov    %rsp,%rbp
mov    %rdx,%rax
and    $0x7,%rax
test   %rax,%rax
je     4aadf <_TIFFSwab64BitData+0x2f>
lea    0x2998a(%rip),%rdi        # 74451 <module.21+0x73>
lea    0x297cb(%rip),%rsi        # 74299 <module.8+0x37>
mov    $0x619,%edx
lea    0x29985(%rip),%rcx        # 7445f <module.21+0x81>
callq  8490 <__assert_fail@plt>
mov    %rdx,%rax
sar    $0x2,%rax
shr    $0x3d,%rax
add    %rdx,%rax
sar    $0x3,%rax
mov    %rsi,%rdi
mov    %rax,%rsi
callq  81b0 <TIFFSwabArrayOfDouble@plt>
leaveq 
retq   
xchg   %ax,%ax

000000000004ab00 <_TIFFReadEncodedStripAndAllocBuffer>:
push   %rbp
mov    %rsp,%rbp
sub    $0x40,%rsp
mov    (%rdx),%rax
test   %rax,%rax
jne    4ab52 <_TIFFReadEncodedStripAndAllocBuffer+0x52>
lea    -0x32(%rbp),%rax
mov    %rdi,%r10
mov    %rsi,%r9
mov    %r15,-0x8(%rbp)
mov    %rdi,-0x28(%rbp)
mov    %rsi,-0x30(%rbp)
mov    %rcx,-0x20(%rbp)
mov    %rdx,-0x18(%rbp)
mov    %rax,%rdx
mov    %r9,%rsi
mov    %r10,%rdi
mov    %r8,%r15
callq  4c790 <TIFFReadEncodedStripGetStripSize>
cmp    $0xffffffffffffffff,%rax
jne    4ab5f <_TIFFReadEncodedStripAndAllocBuffer+0x5f>
mov    $0xffffffffffffffff,%rax
mov    -0x8(%rbp),%r15
leaveq 
retq   
mov    %r8,%rcx
mov    %rax,%rdx
callq  8810 <TIFFReadEncodedStrip@plt>
leaveq 
retq   
cmp    $0xffffffffffffffff,%r15
jne    4ab8a <_TIFFReadEncodedStripAndAllocBuffer+0x8a>
mov    %rax,-0x10(%rbp)
mov    -0x28(%rbp),%r15
mov    %r15,%rdi
mov    -0x30(%rbp),%rsi
callq  8880 <TIFFFillStrip@plt>
test   %eax,%eax
jne    4ab94 <_TIFFReadEncodedStripAndAllocBuffer+0x94>
mov    $0xffffffffffffffff,%rax
mov    -0x8(%rbp),%r15
leaveq 
retq   
cmp    %r15,%rax
jle    4ab65 <_TIFFReadEncodedStripAndAllocBuffer+0x65>
mov    %r15,%rax
jmp    4ab65 <_TIFFReadEncodedStripAndAllocBuffer+0x65>
mov    -0x20(%rbp),%rax
mov    %rax,%rdi
mov    %r14,-0x30(%rbp)
mov    %rax,%r14
callq  8440 <_TIFFmalloc@plt>
mov    -0x18(%rbp),%rcx
mov    %rax,(%rcx)
test   %rax,%rax
je     4abef <_TIFFReadEncodedStripAndAllocBuffer+0xef>
mov    %r14,%rdx
mov    %rcx,%r14
mov    %rax,%rdi
xor    %esi,%esi
callq  88e0 <_TIFFmemset@plt>
mov    0x308(%r15),%rax
mov    (%r14),%rsi
movzwl -0x32(%rbp),%ecx
mov    %r15,%rdi
mov    -0x10(%rbp),%rdx
callq  *%rax
test   %eax,%eax
jg     4ac27 <_TIFFReadEncodedStripAndAllocBuffer+0x127>
mov    -0x30(%rbp),%r14
mov    $0xffffffffffffffff,%rax
mov    -0x8(%rbp),%r15
leaveq 
retq   
mov    %r15,%rdi
xor    %r15d,%r15d
mov    0x3b8(%rdi),%r14
callq  85f0 <TIFFFileName@plt>
mov    %rax,%rsi
mov    %r15,%rax
mov    %r14,%rdi
lea    0x29861(%rip),%rdx        # 74472 <module.21+0x94>
callq  8a00 <TIFFErrorExt@plt>
mov    -0x30(%rbp),%r14
mov    $0xffffffffffffffff,%rax
mov    -0x8(%rbp),%r15
leaveq 
retq   
mov    0x3e8(%r15),%rax
mov    (%r14),%rsi
mov    %r15,%rdi
mov    -0x10(%rbp),%r14
mov    %r14,%rdx
callq  *%rax
mov    %r14,%rax
mov    -0x30(%rbp),%r14
mov    -0x8(%rbp),%r15
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

000000000004ac50 <_TIFFReadEncodedTileAndAllocBuffer>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    0x2b0(%rdi),%rax
mov    (%rdx),%r9
test   %r9,%r9
jne    4aca7 <_TIFFReadEncodedTileAndAllocBuffer+0x57>
mov    $0x1,%r10d
mov    %rdi,%r9
mov    %r15,-0x8(%rbp)
mov    %rsi,-0x30(%rbp)
mov    %rcx,-0x28(%rbp)
mov    %rdx,-0x10(%rbp)
mov    %r8,-0x20(%rbp)
mov    %rax,-0x18(%rbp)
mov    %r10,%rsi
mov    %rdi,%r15
mov    %r9,%rdi
callq  4ba80 <TIFFCheckRead>
test   %eax,%eax
jne    4acb4 <_TIFFReadEncodedTileAndAllocBuffer+0x64>
mov    $0xffffffffffffffff,%rax
mov    -0x8(%rbp),%r15
leaveq 
retq   
mov    %r8,%rcx
mov    %r9,%rdx
callq  89d0 <TIFFReadEncodedTile@plt>
leaveq 
retq   
mov    0xe4(%r15),%r8d
mov    -0x30(%rbp),%rsi
cmp    %esi,%r8d
jbe    4acdd <_TIFFReadEncodedTileAndAllocBuffer+0x8d>
mov    %r15,%rdi
callq  8a10 <TIFFFillTile@plt>
test   %eax,%eax
jne    4ad0b <_TIFFReadEncodedTileAndAllocBuffer+0xbb>
mov    $0xffffffffffffffff,%rax
mov    -0x8(%rbp),%r15
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
lea    0x2979f(%rip),%r9        # 7448c <module.31>
lea    0x296ca(%rip),%rdx        # 743be <module.19+0x14>
mov    %esi,%ecx
mov    %r9,%rsi
callq  8a00 <TIFFErrorExt@plt>
mov    $0xffffffffffffffff,%rax
mov    -0x8(%rbp),%r15
leaveq 
retq   
mov    -0x28(%rbp),%rdx
mov    %rdx,%rdi
mov    %r14,-0x28(%rbp)
mov    %rdx,%r14
callq  8440 <_TIFFmalloc@plt>
mov    -0x10(%rbp),%rcx
mov    %rax,(%rcx)
test   %rax,%rax
je     4ad86 <_TIFFReadEncodedTileAndAllocBuffer+0x136>
mov    %r14,%rdx
mov    %rcx,%r14
mov    %rax,%rdi
xor    %esi,%esi
callq  88e0 <_TIFFmemset@plt>
mov    -0x20(%rbp),%r8
cmp    $0xffffffffffffffff,%r8
jne    4adbe <_TIFFReadEncodedTileAndAllocBuffer+0x16e>
mov    -0x18(%rbp),%r8
mov    %r8,-0x20(%rbp)
mov    0xe0(%r15),%ecx
xor    %edx,%edx
mov    0x318(%r15),%r9
mov    (%r14),%rsi
mov    -0x30(%rbp),%rax
div    %ecx
mov    %rax,%rcx
mov    %r8,%rdx
mov    %r15,%rdi
callq  *%r9
test   %eax,%eax
jne    4adcf <_TIFFReadEncodedTileAndAllocBuffer+0x17f>
mov    -0x28(%rbp),%r14
mov    $0xffffffffffffffff,%rax
mov    -0x8(%rbp),%r15
leaveq 
retq   
mov    %r15,%rdi
xor    %r15d,%r15d
mov    0x3b8(%rdi),%r14
callq  85f0 <TIFFFileName@plt>
mov    %rax,%rsi
mov    %r15,%rax
mov    %r14,%rdi
lea    0x29707(%rip),%rdx        # 744af <module.31+0x23>
callq  8a00 <TIFFErrorExt@plt>
mov    -0x28(%rbp),%r14
mov    $0xffffffffffffffff,%rax
mov    -0x8(%rbp),%r15
leaveq 
retq   
mov    -0x18(%rbp),%rax
cmp    %rax,%r8
jle    4ad48 <_TIFFReadEncodedTileAndAllocBuffer+0xf8>
mov    %rax,%r8
jmpq   4ad48 <_TIFFReadEncodedTileAndAllocBuffer+0xf8>
mov    0x3e8(%r15),%rax
mov    (%r14),%rsi
mov    %r15,%rdi
mov    -0x20(%rbp),%r14
mov    %r14,%rdx
callq  *%rax
mov    %r14,%rax
mov    -0x28(%rbp),%r14
mov    -0x8(%rbp),%r15
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   (%rax)

000000000004ae00 <_TIFFReadTileAndAllocBuffer>:
push   %rbp
mov    %rsp,%rbp
sub    $0x40,%rsp
mov    %rdi,-0x20(%rbp)
mov    %rcx,-0x28(%rbp)
mov    %r8,-0x30(%rbp)
mov    %r9,-0x38(%rbp)
mov    %rsi,-0x8(%rbp)
mov    %rdx,-0x10(%rbp)
mov    $0x1,%esi
callq  4ba80 <TIFFCheckRead>
test   %eax,%eax
jne    4ae37 <_TIFFReadTileAndAllocBuffer+0x37>
mov    $0xffffffffffffffff,%rax
leaveq 
retq   
movzwl 0x10(%rbp),%r8d
mov    %r8,-0x18(%rbp)
mov    -0x20(%rbp),%rdi
mov    -0x28(%rbp),%rsi
mov    -0x30(%rbp),%rdx
mov    -0x38(%rbp),%rcx
callq  8030 <TIFFCheckTile@plt>
test   %eax,%eax
jne    4ae62 <_TIFFReadTileAndAllocBuffer+0x62>
mov    $0xffffffffffffffff,%rax
leaveq 
retq   
mov    -0x20(%rbp),%rax
mov    %rax,%rdi
mov    %r15,-0x20(%rbp)
mov    %rax,%r15
mov    -0x18(%rbp),%r8
mov    -0x38(%rbp),%rcx
mov    -0x30(%rbp),%rdx
mov    -0x28(%rbp),%rsi
callq  8110 <TIFFComputeTile@plt>
mov    %rax,%rsi
mov    %r15,%rdi
mov    $0xffffffffffffffff,%r8
mov    -0x10(%rbp),%rcx
mov    -0x8(%rbp),%rdx
callq  83f0 <_TIFFReadEncodedTileAndAllocBuffer@plt>
mov    -0x20(%rbp),%r15
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)

000000000004aeb0 <TIFFFillStrip>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    %r15,-0x18(%rbp)
mov    %rsi,-0x28(%rbp)
mov    %rdi,%r15
callq  8c70 <_TIFFFillStriles@plt>
test   %eax,%eax
jne    4aed4 <TIFFFillStrip+0x24>
xor    %eax,%eax
mov    -0x18(%rbp),%r15
leaveq 
retq   
mov    0xf0(%r15),%rcx
test   %rcx,%rcx
jne    4aee8 <TIFFFillStrip+0x38>
xor    %eax,%eax
mov    -0x18(%rbp),%r15
leaveq 
retq   
mov    0x10(%r15),%eax
and    $0x20000,%eax
test   %eax,%eax
je     4af07 <TIFFFillStrip+0x57>
mov    -0x28(%rbp),%rsi
mov    %r15,%rdi
callq  4b7b0 <TIFFStartStrip>
mov    -0x18(%rbp),%r15
leaveq 
retq   
lea    0x295ba(%rip),%r8        # 744c8 <module.33>
mov    -0x28(%rbp),%rsi
mov    %esi,%r10d
mov    (%rcx,%r10,8),%rcx
test   %rcx,%rcx
jle    4b009 <TIFFFillStrip+0x159>
cmp    $0x100000,%rcx
ja     4b031 <TIFFFillStrip+0x181>
mov    0x10(%r15),%eax
and    $0x800,%eax
test   %eax,%eax
jne    4b078 <TIFFFillStrip+0x1c8>
mov    0x10(%r15),%eax
mov    %rax,%rdx
and    $0x800,%edx
test   %edx,%edx
jne    4b0e3 <TIFFFillStrip+0x233>
mov    0x370(%r15),%rax
cmp    %rcx,%rax
jl     4b162 <TIFFFillStrip+0x2b2>
mov    0x10(%r15),%eax
mov    %rax,%rdx
and    $0x800000,%edx
test   %edx,%edx
je     4afa0 <TIFFFillStrip+0xf0>
movl   $0xffffffff,0x284(%r15)
movq   $0x0,0x368(%r15)
movq   $0x0,0x370(%r15)
and    $0xff7fffff,%eax
mov    %eax,0x10(%r15)
mov    0x10(%r15),%eax
and    $0x800,%eax
test   %eax,%eax
jne    4b1a0 <TIFFFillStrip+0x2f0>
mov    $0x1,%edx
mov    %r15,%rdi
mov    %rcx,%rax
mov    %r15,-0x20(%rbp)
mov    %rcx,%r15
mov    %rax,%rcx
callq  4c880 <TIFFReadRawStripOrTile2>
cmp    %r15,%rax
jne    4b1dd <TIFFFillStrip+0x32d>
mov    %r15,%rsi
mov    -0x20(%rbp),%r15
movq   $0x0,0x378(%r15)
mov    %rsi,0x380(%r15)
mov    0x10(%r15),%ecx
movzwl 0x7e(%r15),%eax
and    %ecx,%eax
test   %eax,%eax
je     4b1e5 <TIFFFillStrip+0x335>
mov    -0x28(%rbp),%rsi
jmpq   4aef9 <TIFFFillStrip+0x49>
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
lea    0x294bd(%rip),%rdx        # 744d6 <module.33+0xe>
mov    %esi,%esi
mov    %r8,%r9
mov    %rsi,%r8
mov    %r9,%rsi
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x18(%rbp),%r15
leaveq 
retq   
mov    %r15,%rdi
mov    %r12,-0x8(%rbp)
mov    %r13,-0x10(%rbp)
mov    %r14,-0x20(%rbp)
mov    %rsi,%r12
mov    %r10,%r13
mov    %rcx,%r14
callq  8070 <TIFFStripSize@plt>
test   %rax,%rax
jne    4b1fc <TIFFFillStrip+0x34c>
mov    %r14,%rcx
mov    %r12,%rsi
mov    %r13,%r10
lea    0x29461(%rip),%r8        # 744c8 <module.33>
mov    -0x20(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
jmpq   4af2f <TIFFFillStrip+0x7f>
mov    0x3a0(%r15),%rax
cmp    %rcx,%rax
jb     4b098 <TIFFFillStrip+0x1e8>
sub    %rcx,%rax
mov    0xe8(%r15),%rdx
cmp    (%rdx,%r10,8),%rax
jae    4af40 <TIFFFillStrip+0x90>
mov    0xe8(%r15),%rax
mov    (%rax,%r10,8),%rax
mov    0x3a0(%r15),%r10
sub    %rax,%r10
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
lea    0x2947f(%rip),%rdx        # 7453c <module.33+0x74>
mov    %esi,%esi
mov    %rcx,%r9
mov    %rsi,%rcx
mov    %r8,%rsi
mov    %r10,%r8
callq  8a00 <TIFFErrorExt@plt>
movl   $0xffffffff,0x284(%r15)
xor    %eax,%eax
mov    -0x18(%rbp),%r15
leaveq 
retq   
movzwl 0x7e(%r15),%edx
and    %eax,%edx
test   %edx,%edx
jne    4b0ff <TIFFFillStrip+0x24f>
mov    %rax,%rdx
and    $0x100,%edx
test   %edx,%edx
je     4af55 <TIFFFillStrip+0xa5>
and    $0x200,%eax
test   %eax,%eax
jne    4b23a <TIFFFillStrip+0x38a>
mov    0x10(%r15),%eax
mov    %rax,%rdx
and    $0xfffffdff,%edx
mov    %edx,0x10(%r15)
mov    %rcx,0x370(%r15)
mov    0xe8(%r15),%rdx
mov    (%rdx,%r10,8),%rdx
add    0x398(%r15),%rdx
mov    %rdx,0x368(%r15)
movq   $0x0,0x378(%r15)
mov    %rcx,0x380(%r15)
and    $0xff7ffdff,%eax
add    $0x800000,%eax
mov    %eax,0x10(%r15)
jmpq   4aef9 <TIFFFillStrip+0x49>
movl   $0xffffffff,0x284(%r15)
mov    0x10(%r15),%eax
and    $0x200,%eax
test   %eax,%eax
jne    4af65 <TIFFFillStrip+0xb5>
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
lea    0x293e5(%rip),%rdx        # 74573 <module.33+0xab>
mov    %esi,%ecx
mov    %r8,%rsi
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x18(%rbp),%r15
leaveq 
retq   
mov    0x370(%r15),%rax
cmp    %rcx,%rax
jl     4b294 <TIFFFillStrip+0x3e4>
mov    0x368(%r15),%rdx
mov    %r15,%rdi
mov    %rcx,%rax
mov    %r15,-0x20(%rbp)
mov    %rcx,%r15
mov    %rax,%rcx
callq  4bb00 <TIFFReadRawStrip1>
cmp    %r15,%rax
jne    4b2bd <TIFFFillStrip+0x40d>
mov    %r15,%rsi
jmpq   4afd7 <TIFFFillStrip+0x127>
xor    %eax,%eax
mov    -0x18(%rbp),%r15
leaveq 
retq   
and    $0x100,%ecx
test   %ecx,%ecx
je     4b2c5 <TIFFFillStrip+0x415>
mov    -0x28(%rbp),%rsi
jmpq   4aef9 <TIFFFillStrip+0x49>
mov    %r14,%rcx
mov    %r12,%rsi
mov    %rax,%r8
mov    %r13,%r10
lea    -0x1000(%rcx),%rax
mov    $0xa,%edi
xor    %edx,%edx
div    %rdi
cmp    %r8,%rax
ja     4b2da <TIFFFillStrip+0x42a>
lea    0x2929f(%rip),%r8        # 744c8 <module.33>
mov    -0x20(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
jmpq   4af2f <TIFFFillStrip+0x7f>
mov    0x368(%r15),%rdi
test   %rdi,%rdi
je     4b10c <TIFFFillStrip+0x25c>
mov    %r12,-0x8(%rbp)
mov    %r13,-0x10(%rbp)
mov    %r14,-0x28(%rbp)
mov    %rsi,%r12
mov    %rcx,%r13
mov    %r10,%r14
callq  8bb0 <_TIFFfree@plt>
movq   $0x0,0x368(%r15)
movq   $0x0,0x370(%r15)
mov    %r13,%rcx
mov    %r12,%rsi
mov    %r14,%r10
mov    -0x28(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
jmpq   4b10c <TIFFFillStrip+0x25c>
mov    %r15,%rdi
xor    %esi,%esi
mov    %rcx,%rdx
mov    %rcx,-0x20(%rbp)
callq  8270 <TIFFReadBufferSetup@plt>
test   %eax,%eax
je     4b303 <TIFFFillStrip+0x453>
mov    -0x20(%rbp),%rcx
lea    0x29214(%rip),%r8        # 744c8 <module.33>
mov    -0x28(%rbp),%rsi
jmpq   4b1b0 <TIFFFillStrip+0x300>
xor    %eax,%eax
mov    -0x18(%rbp),%r15
leaveq 
retq   
mov    0x368(%r15),%rdi
callq  8700 <TIFFReverseBits@plt>
mov    -0x28(%rbp),%rsi
jmpq   4aef9 <TIFFFillStrip+0x49>
lea    (%r8,%r8,4),%rax
lea    0x1000(%rax,%rax,1),%r12
test   %r12,%r12
jns    4b30b <TIFFFillStrip+0x45b>
lea    0x291d6(%rip),%r8        # 744c8 <module.33>
mov    -0x20(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
jmpq   4af2f <TIFFFillStrip+0x7f>
xor    %eax,%eax
mov    -0x18(%rbp),%r15
leaveq 
retq   
mov    %rsi,%r13
mov    %r10,%r14
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
lea    0x291de(%rip),%rdx        # 744ff <module.33+0x37>
mov    %r13d,%r8d
lea    0x2919d(%rip),%rsi        # 744c8 <module.33>
mov    %r12,%r9
callq  8a00 <TIFFErrorExt@plt>
mov    %r12,%rcx
mov    %r13,%rsi
mov    %r14,%r10
lea    0x29185(%rip),%r8        # 744c8 <module.33>
mov    -0x20(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
jmpq   4af2f <TIFFFillStrip+0x7f>
data16 nopw %cs:0x0(%rax,%rax,1)
nop

000000000004b360 <TIFFFillTile>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    %r15,-0x18(%rbp)
mov    %rsi,-0x30(%rbp)
mov    %rdi,%r15
callq  8c70 <_TIFFFillStriles@plt>
test   %eax,%eax
jne    4b384 <TIFFFillTile+0x24>
xor    %eax,%eax
mov    -0x18(%rbp),%r15
leaveq 
retq   
mov    0xf0(%r15),%rcx
test   %rcx,%rcx
jne    4b398 <TIFFFillTile+0x38>
xor    %eax,%eax
mov    -0x18(%rbp),%r15
leaveq 
retq   
mov    0x10(%r15),%eax
and    $0x20000,%eax
test   %eax,%eax
je     4b3b7 <TIFFFillTile+0x57>
mov    -0x30(%rbp),%rsi
mov    %r15,%rdi
callq  4b8d0 <TIFFStartTile>
mov    -0x18(%rbp),%r15
leaveq 
retq   
lea    0x291dd(%rip),%r8        # 7459b <module.38>
mov    -0x30(%rbp),%rsi
mov    %esi,%eax
mov    (%rcx,%rax,8),%rcx
test   %rcx,%rcx
jle    4b4b6 <TIFFFillTile+0x156>
cmp    $0x100000,%rcx
ja     4b4de <TIFFFillTile+0x17e>
mov    0x10(%r15),%edx
and    $0x800,%edx
test   %edx,%edx
jne    4b515 <TIFFFillTile+0x1b5>
mov    0x10(%r15),%edx
mov    %rdx,%rdi
and    $0x800,%edi
test   %edi,%edi
jne    4b548 <TIFFFillTile+0x1e8>
mov    0x370(%r15),%rax
cmp    %rcx,%rax
jl     4b5ca <TIFFFillTile+0x26a>
mov    0x10(%r15),%eax
mov    %rax,%rdx
and    $0x800000,%edx
test   %edx,%edx
je     4b450 <TIFFFillTile+0xf0>
movl   $0xffffffff,0x2ac(%r15)
movq   $0x0,0x368(%r15)
movq   $0x0,0x370(%r15)
and    $0xff7fffff,%eax
mov    %eax,0x10(%r15)
mov    0x10(%r15),%eax
and    $0x800,%eax
test   %eax,%eax
jne    4b608 <TIFFFillTile+0x2a8>
mov    %r15,%rdi
xor    %edx,%edx
mov    %rcx,%rax
mov    %r15,-0x20(%rbp)
mov    %rcx,%r15
mov    %rax,%rcx
callq  4c880 <TIFFReadRawStripOrTile2>
cmp    %r15,%rax
jne    4b645 <TIFFFillTile+0x2e5>
mov    %r15,%rsi
mov    -0x20(%rbp),%r15
movq   $0x0,0x378(%r15)
mov    %rsi,0x380(%r15)
mov    0x10(%r15),%ecx
movzwl 0x7e(%r15),%eax
and    %ecx,%eax
test   %eax,%eax
je     4b64d <TIFFFillTile+0x2ed>
mov    -0x30(%rbp),%rsi
jmpq   4b3a9 <TIFFFillTile+0x49>
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
lea    0x290e2(%rip),%rdx        # 745a8 <module.38+0xd>
mov    %esi,%esi
mov    %r8,%r9
mov    %rsi,%r8
mov    %r9,%rsi
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x18(%rbp),%r15
leaveq 
retq   
mov    %r15,%rdi
mov    %r14,-0x20(%rbp)
mov    %rax,-0x28(%rbp)
mov    %rcx,%r14
callq  8910 <TIFFTileSize@plt>
test   %rax,%rax
jne    4b664 <TIFFFillTile+0x304>
mov    %r14,%rcx
lea    0x29097(%rip),%r8        # 7459b <module.38>
mov    -0x28(%rbp),%rax
mov    -0x20(%rbp),%r14
mov    -0x30(%rbp),%rsi
jmpq   4b3de <TIFFFillTile+0x7e>
mov    0x3a0(%r15),%rdx
cmp    %rcx,%rdx
jb     4b535 <TIFFFillTile+0x1d5>
sub    %rcx,%rdx
mov    0xe8(%r15),%rdi
cmp    (%rdi,%rax,8),%rdx
jae    4b3f0 <TIFFFillTile+0x90>
movl   $0xffffffff,0x2ac(%r15)
xor    %eax,%eax
mov    -0x18(%rbp),%r15
leaveq 
retq   
movzwl 0x7e(%r15),%edi
and    %edx,%edi
test   %edi,%edi
jne    4b564 <TIFFFillTile+0x204>
mov    %rdx,%rdi
and    $0x100,%edi
test   %edi,%edi
je     4b405 <TIFFFillTile+0xa5>
and    $0x200,%edx
test   %edx,%edx
jne    4b69c <TIFFFillTile+0x33c>
mov    0x10(%r15),%edx
mov    %rdx,%rdi
and    $0xfffffdff,%edi
mov    %edi,0x10(%r15)
mov    %rcx,0x370(%r15)
mov    0xe8(%r15),%rdi
mov    (%rdi,%rax,8),%rax
add    0x398(%r15),%rax
mov    %rax,0x368(%r15)
movq   $0x0,0x378(%r15)
mov    %rcx,0x380(%r15)
and    $0xff7ffdff,%edx
lea    0x800000(%rdx),%eax
mov    %eax,0x10(%r15)
jmpq   4b3a9 <TIFFFillTile+0x49>
movl   $0xffffffff,0x2ac(%r15)
mov    0x10(%r15),%eax
and    $0x200,%eax
test   %eax,%eax
jne    4b415 <TIFFFillTile+0xb5>
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
lea    0x29015(%rip),%rdx        # 7460b <module.38+0x70>
mov    %esi,%ecx
mov    %r8,%rsi
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x18(%rbp),%r15
leaveq 
retq   
mov    0x370(%r15),%rax
cmp    %rcx,%rax
jl     4b6f6 <TIFFFillTile+0x396>
mov    0x368(%r15),%rdx
mov    %r15,%rdi
mov    %rcx,%rax
mov    %r15,-0x20(%rbp)
mov    %rcx,%r15
mov    %rax,%rcx
callq  4bd00 <TIFFReadRawTile1>
cmp    %r15,%rax
jne    4b71f <TIFFFillTile+0x3bf>
mov    %r15,%rsi
jmpq   4b484 <TIFFFillTile+0x124>
xor    %eax,%eax
mov    -0x18(%rbp),%r15
leaveq 
retq   
and    $0x100,%ecx
test   %ecx,%ecx
je     4b727 <TIFFFillTile+0x3c7>
mov    -0x30(%rbp),%rsi
jmpq   4b3a9 <TIFFFillTile+0x49>
mov    %r14,%rcx
mov    %rax,%rdi
lea    -0x1000(%rcx),%rax
mov    $0xa,%esi
xor    %edx,%edx
div    %rsi
cmp    %rdi,%rax
ja     4b73c <TIFFFillTile+0x3dc>
lea    0x28f10(%rip),%r8        # 7459b <module.38>
mov    -0x28(%rbp),%rax
mov    -0x20(%rbp),%r14
mov    -0x30(%rbp),%rsi
jmpq   4b3de <TIFFFillTile+0x7e>
mov    0x368(%r15),%rdi
test   %rdi,%rdi
je     4b572 <TIFFFillTile+0x212>
mov    %r14,-0x30(%rbp)
mov    %r12,-0x8(%rbp)
mov    %r13,-0x10(%rbp)
mov    %rsi,%r12
mov    %rax,%r13
mov    %rcx,%r14
callq  8bb0 <_TIFFfree@plt>
movq   $0x0,0x368(%r15)
movq   $0x0,0x370(%r15)
mov    %r13,%rax
mov    %r14,%rcx
mov    %r12,%rsi
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
mov    -0x30(%rbp),%r14
jmpq   4b572 <TIFFFillTile+0x212>
mov    %r15,%rdi
xor    %esi,%esi
mov    %rcx,%rdx
mov    %rcx,-0x28(%rbp)
callq  8270 <TIFFReadBufferSetup@plt>
test   %eax,%eax
je     4b765 <TIFFFillTile+0x405>
mov    -0x28(%rbp),%rcx
lea    0x28e85(%rip),%r8        # 7459b <module.38>
mov    -0x30(%rbp),%rsi
jmpq   4b618 <TIFFFillTile+0x2b8>
xor    %eax,%eax
mov    -0x18(%rbp),%r15
leaveq 
retq   
mov    0x368(%r15),%rdi
callq  8700 <TIFFReverseBits@plt>
mov    -0x30(%rbp),%rsi
jmpq   4b3a9 <TIFFFillTile+0x49>
lea    (%rdi,%rdi,4),%rax
lea    0x1000(%rax,%rax,1),%r14
test   %r14,%r14
jns    4b76d <TIFFFillTile+0x40d>
lea    0x28e47(%rip),%r8        # 7459b <module.38>
mov    -0x28(%rbp),%rax
mov    -0x20(%rbp),%r14
mov    -0x30(%rbp),%rsi
jmpq   4b3de <TIFFFillTile+0x7e>
xor    %eax,%eax
mov    -0x18(%rbp),%r15
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
lea    0x28e53(%rip),%rdx        # 745d0 <module.38+0x35>
mov    -0x30(%rbp),%rsi
mov    %esi,%r8d
lea    0x28e10(%rip),%rsi        # 7459b <module.38>
mov    %r14,%r9
callq  8a00 <TIFFErrorExt@plt>
mov    %r14,%rcx
lea    0x28dfe(%rip),%r8        # 7459b <module.38>
mov    -0x28(%rbp),%rax
mov    -0x20(%rbp),%r14
mov    -0x30(%rbp),%rsi
jmpq   4b3de <TIFFFillTile+0x7e>
xchg   %ax,%ax

000000000004b7b0 <TIFFStartStrip>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x8(%rbp)
mov    %rsi,-0x10(%rbp)
mov    %rdi,%r15
callq  8c70 <_TIFFFillStriles@plt>
test   %eax,%eax
jne    4b7d4 <TIFFStartStrip+0x24>
xor    %eax,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
mov    0xf0(%r15),%rax
test   %rax,%rax
jne    4b7e8 <TIFFStartStrip+0x38>
xor    %eax,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
mov    0x10(%r15),%eax
and    $0x20,%eax
test   %eax,%eax
je     4b865 <TIFFStartStrip+0xb5>
mov    -0x10(%rbp),%rsi
mov    %esi,0x284(%r15)
mov    0xe0(%r15),%ecx
xor    %edx,%edx
mov    %rsi,%rax
div    %ecx
imul   0x84(%r15),%edx
mov    %edx,0x27c(%r15)
mov    0x10(%r15),%eax
mov    %rax,%rcx
and    $0xffefffff,%ecx
mov    %ecx,0x10(%r15)
and    $0x20000,%eax
test   %eax,%eax
jne    4b87b <TIFFStartStrip+0xcb>
mov    0x368(%r15),%rax
mov    %rax,0x388(%r15)
mov    0x380(%r15),%rax
test   %rax,%rax
jg     4b8b4 <TIFFStartStrip+0x104>
mov    0xf0(%r15),%rcx
mov    %esi,%eax
mov    (%rcx,%rax,8),%rax
mov    %rax,0x390(%r15)
jmp    4b891 <TIFFStartStrip+0xe1>
mov    %r15,%rdi
callq  *0x2c8(%r15)
test   %eax,%eax
jne    4b8bd <TIFFStartStrip+0x10d>
xor    %eax,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
movq   $0x0,0x388(%r15)
movq   $0x0,0x390(%r15)
mov    %rsi,%rax
mov    0xe0(%r15),%edi
xor    %edx,%edx
mov    0x2d0(%r15),%rcx
div    %edi
mov    %rax,%rsi
mov    %r15,%rdi
callq  *%rcx
mov    -0x8(%rbp),%r15
leaveq 
retq   
mov    %rax,0x390(%r15)
jmp    4b891 <TIFFStartStrip+0xe1>
mov    0x10(%r15),%eax
or     $0x20,%eax
mov    %eax,0x10(%r15)
jmpq   4b7f3 <TIFFStartStrip+0x43>
nopl   (%rax)

000000000004b8d0 <TIFFStartTile>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x8(%rbp)
mov    %rsi,-0x10(%rbp)
mov    %rdi,%r15
callq  8c70 <_TIFFFillStriles@plt>
test   %eax,%eax
jne    4b8f4 <TIFFStartTile+0x24>
xor    %eax,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
mov    0xf0(%r15),%rax
test   %rax,%rax
jne    4b908 <TIFFStartTile+0x38>
xor    %eax,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
mov    0x10(%r15),%eax
and    $0x20,%eax
test   %eax,%eax
je     4b933 <TIFFStartTile+0x63>
mov    -0x10(%rbp),%rcx
mov    %ecx,0x2ac(%r15)
mov    0x58(%r15),%edx
mov    0x64(%r15),%esi
mov    %rsi,%rax
neg    %eax
cmp    %edx,%eax
ja     4b949 <TIFFStartTile+0x79>
xor    %eax,%eax
jmp    4b951 <TIFFStartTile+0x81>
mov    %r15,%rdi
callq  *0x2c8(%r15)
test   %eax,%eax
jne    4b98f <TIFFStartTile+0xbf>
xor    %eax,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
lea    -0x1(%rsi,%rdx,1),%eax
xor    %edx,%edx
div    %esi
lea    0x28cda(%rip),%rsi        # 74632 <module.42>
lea    0x28ce1(%rip),%r8        # 74640 <module.42+0xe>
test   %eax,%eax
je     4b99f <TIFFStartTile+0xcf>
mov    %rax,%rdi
xor    %edx,%edx
mov    %rcx,%rax
div    %edi
mov    0x68(%r15),%edi
mov    %rdi,%rax
imul   %edx,%eax
mov    %eax,0x27c(%r15)
mov    0x5c(%r15),%edx
mov    %rdi,%rax
neg    %eax
cmp    %edx,%eax
ja     4b9b8 <TIFFStartTile+0xe8>
xor    %eax,%eax
jmp    4b9c0 <TIFFStartTile+0xf0>
mov    0x10(%r15),%eax
or     $0x20,%eax
mov    %eax,0x10(%r15)
jmpq   4b913 <TIFFStartTile+0x43>
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
mov    %r8,%rdx
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
lea    -0x1(%rdi,%rdx,1),%eax
xor    %edx,%edx
div    %edi
test   %eax,%eax
je     4ba24 <TIFFStartTile+0x154>
mov    %rax,%rsi
xor    %edx,%edx
mov    %rcx,%rax
div    %esi
imul   0x64(%r15),%edx
mov    %edx,0x2a8(%r15)
mov    0x10(%r15),%eax
mov    %rax,%rdx
and    $0xffefffff,%edx
mov    %edx,0x10(%r15)
and    $0x20000,%eax
test   %eax,%eax
jne    4ba3d <TIFFStartTile+0x16d>
mov    0x368(%r15),%rax
mov    %rax,0x388(%r15)
mov    0x380(%r15),%rax
test   %rax,%rax
jg     4ba77 <TIFFStartTile+0x1a7>
mov    0xf0(%r15),%rdx
mov    %ecx,%eax
mov    (%rdx,%rax,8),%rax
mov    %rax,0x390(%r15)
jmp    4ba53 <TIFFStartTile+0x183>
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
mov    %r8,%rdx
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
movq   $0x0,0x388(%r15)
movq   $0x0,0x390(%r15)
mov    %rcx,%rax
mov    0xe0(%r15),%esi
xor    %edx,%edx
mov    0x2d0(%r15),%r8
div    %esi
mov    %rax,%rsi
mov    %r15,%rdi
callq  *%r8
mov    -0x8(%rbp),%r15
leaveq 
retq   
mov    %rax,0x390(%r15)
jmp    4ba53 <TIFFStartTile+0x183>

000000000004ba80 <TIFFCheckRead>:
push   %rbp
mov    %rsp,%rbp
xor    %edx,%edx
movslq 0xc(%rdi),%rax
cmp    $0x1,%eax
je     4baaa <TIFFCheckRead+0x2a>
mov    $0x1,%eax
mov    0x10(%rdi),%ecx
and    $0x400,%ecx
test   %ecx,%ecx
je     4baa4 <TIFFCheckRead+0x24>
mov    %rax,%rdx
cmp    %esi,%edx
jne    4bac9 <TIFFCheckRead+0x49>
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rdi),%rcx
mov    (%rdi),%rsi
mov    %rcx,%rdi
lea    0x28b8b(%rip),%rdx        # 7464b <module.42+0x19>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
mov    0x3b8(%rdi),%r8
mov    (%rdi),%rcx
test   %esi,%esi
jne    4bae0 <TIFFCheckRead+0x60>
lea    0x28bb0(%rip),%rdx        # 7468e <module.42+0x5c>
jmp    4bae7 <TIFFCheckRead+0x67>
lea    0x28b7e(%rip),%rdx        # 74665 <module.42+0x33>
mov    %rcx,%rsi
mov    %r8,%rdi
xor    %eax,%eax
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

000000000004bb00 <TIFFReadRawStrip1>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    %r15,-0x18(%rbp)
mov    %rsi,-0x28(%rbp)
mov    %rcx,-0x20(%rbp)
mov    %rdx,-0x10(%rbp)
mov    %r8,-0x8(%rbp)
mov    %rdi,%r15
callq  8c70 <_TIFFFillStriles@plt>
test   %eax,%eax
jne    4bb35 <TIFFReadRawStrip1+0x35>
mov    $0xffffffffffffffff,%rax
mov    -0x18(%rbp),%r15
leaveq 
retq   
mov    0x10(%r15),%eax
mov    %rax,%rcx
and    $0x20000,%ecx
test   %ecx,%ecx
je     4bb65 <TIFFReadRawStrip1+0x65>
lea    0x28729(%rip),%rdi        # 74276 <module.8+0x14>
lea    0x28745(%rip),%rsi        # 74299 <module.8+0x37>
mov    $0x255,%edx
lea    0x28b58(%rip),%rcx        # 746b8 <module.42+0x86>
callq  8490 <__assert_fail@plt>
and    $0x800,%eax
test   %eax,%eax
jne    4bbca <TIFFReadRawStrip1+0xca>
mov    0xe8(%r15),%rcx
mov    -0x28(%rbp),%rdx
mov    %edx,%eax
mov    (%rcx,%rax,8),%rsi
mov    %r15,%rdi
mov    %r14,-0x28(%rbp)
mov    %rdx,%r14
callq  82f0 <_TIFFSeekOK@plt>
test   %eax,%eax
jne    4bc19 <TIFFReadRawStrip1+0x119>
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
lea    0x28b24(%rip),%rdx        # 746ca <module.42+0x98>
mov    0x27c(%r15),%ecx
mov    %r14d,%r8d
mov    -0x8(%rbp),%rsi
callq  8a00 <TIFFErrorExt@plt>
mov    -0x28(%rbp),%r14
mov    $0xffffffffffffffff,%rax
mov    -0x18(%rbp),%r15
leaveq 
retq   
xor    %r9d,%r9d
mov    0xe8(%r15),%rcx
mov    -0x28(%rbp),%r8
mov    %r8d,%eax
mov    (%rcx,%rax,8),%rsi
movabs $0x7fffffffffffffff,%rdx
cmp    %rdx,%rsi
jbe    4bc46 <TIFFReadRawStrip1+0x146>
mov    -0x20(%rbp),%rax
mov    %r9,%rsi
cmp    %r9,%rax
jne    4bc58 <TIFFReadRawStrip1+0x158>
add    0x398(%r15),%rsi
mov    %rax,%r15
mov    %r15,%rdx
mov    -0x10(%rbp),%rdi
callq  8790 <_TIFFmemcpy@plt>
mov    %r15,%rax
mov    -0x18(%rbp),%r15
leaveq 
retq   
mov    0x3c0(%r15),%rax
mov    0x3b8(%r15),%rdi
mov    -0x20(%rbp),%r14
mov    %r14,%rdx
mov    -0x10(%rbp),%rsi
callq  *%rax
cmp    %r14,%rax
jne    4bc90 <TIFFReadRawStrip1+0x190>
mov    %r14,%rax
mov    -0x28(%rbp),%r14
mov    -0x18(%rbp),%r15
leaveq 
retq   
mov    0x3a0(%r15),%rcx
cmp    %rsi,%rcx
jge    4bcce <TIFFReadRawStrip1+0x1ce>
mov    -0x20(%rbp),%rax
jmp    4bbf5 <TIFFReadRawStrip1+0xf5>
xor    %r10d,%r10d
mov    0x3b8(%r15),%rdi
lea    0x28ac1(%rip),%rdx        # 7472a <module.42+0xf8>
mov    0x27c(%r15),%ecx
mov    %rax,(%rsp)
mov    %r8d,%r8d
mov    %r10,%rax
mov    -0x8(%rbp),%rsi
callq  8a00 <TIFFErrorExt@plt>
mov    $0xffffffffffffffff,%rax
mov    -0x18(%rbp),%r15
leaveq 
retq   
xor    %r8d,%r8d
mov    0x3b8(%r15),%rdi
lea    0x28a4f(%rip),%rdx        # 746f0 <module.42+0xbe>
mov    0x27c(%r15),%ecx
mov    %r14,%r9
mov    %r8,%r14
mov    %rax,%r8
mov    %r14,%rax
mov    -0x8(%rbp),%rsi
callq  8a00 <TIFFErrorExt@plt>
mov    -0x28(%rbp),%r14
mov    $0xffffffffffffffff,%rax
mov    -0x18(%rbp),%r15
leaveq 
retq   
mov    -0x20(%rbp),%rax
xor    %rax,%rdx
cmp    %rsi,%rdx
jl     4bbf5 <TIFFReadRawStrip1+0xf5>
lea    (%rax,%rsi,1),%rdx
cmp    %rdx,%rcx
jl     4bcef <TIFFReadRawStrip1+0x1ef>
mov    %rax,%r9
jmpq   4bbf5 <TIFFReadRawStrip1+0xf5>
sub    %rsi,%rcx
mov    %rcx,%r9
jmpq   4bbf5 <TIFFReadRawStrip1+0xf5>
nopw   0x0(%rax,%rax,1)

000000000004bd00 <TIFFReadRawTile1>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    %r15,-0x18(%rbp)
mov    %rsi,-0x28(%rbp)
mov    %rcx,-0x20(%rbp)
mov    %rdx,-0x10(%rbp)
mov    %r8,-0x8(%rbp)
mov    %rdi,%r15
callq  8c70 <_TIFFFillStriles@plt>
test   %eax,%eax
jne    4bd35 <TIFFReadRawTile1+0x35>
mov    $0xffffffffffffffff,%rax
mov    -0x18(%rbp),%r15
leaveq 
retq   
mov    0x10(%r15),%eax
mov    %rax,%rcx
and    $0x20000,%ecx
test   %ecx,%ecx
je     4bd65 <TIFFReadRawTile1+0x65>
lea    0x28529(%rip),%rdi        # 74276 <module.8+0x14>
lea    0x28545(%rip),%rsi        # 74299 <module.8+0x37>
mov    $0x44b,%edx
lea    0x28a0f(%rip),%rcx        # 7476f <module.42+0x13d>
callq  8490 <__assert_fail@plt>
and    $0x800,%eax
test   %eax,%eax
jne    4bdd1 <TIFFReadRawTile1+0xd1>
mov    0xe8(%r15),%rcx
mov    -0x28(%rbp),%rdx
mov    %edx,%eax
mov    (%rcx,%rax,8),%rsi
mov    %r15,%rdi
mov    %r14,-0x28(%rbp)
mov    %rdx,%r14
callq  82f0 <_TIFFSeekOK@plt>
test   %eax,%eax
jne    4be1d <TIFFReadRawTile1+0x11d>
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
lea    0x289da(%rip),%rdx        # 74780 <module.42+0x14e>
mov    0x27c(%r15),%ecx
mov    0x2a8(%r15),%r8d
mov    %r14d,%r9d
mov    -0x8(%rbp),%rsi
callq  8a00 <TIFFErrorExt@plt>
mov    -0x28(%rbp),%r14
mov    $0xffffffffffffffff,%rax
mov    -0x18(%rbp),%r15
leaveq 
retq   
xor    %r9d,%r9d
mov    0xe8(%r15),%rcx
mov    -0x28(%rbp),%r10
mov    %r10d,%eax
mov    (%rcx,%rax,8),%rsi
movabs $0x7fffffffffffffff,%rax
cmp    %rax,%rsi
jbe    4be4a <TIFFReadRawTile1+0x14a>
mov    -0x20(%rbp),%rax
cmp    %r9,%rax
jne    4be60 <TIFFReadRawTile1+0x160>
add    0x398(%r15),%rsi
mov    %rax,%r15
mov    %r15,%rdx
mov    -0x10(%rbp),%rdi
callq  8790 <_TIFFmemcpy@plt>
mov    %r15,%rax
mov    -0x18(%rbp),%r15
leaveq 
retq   
mov    0x3c0(%r15),%rax
mov    0x3b8(%r15),%rdi
mov    -0x20(%rbp),%r14
mov    %r14,%rdx
mov    -0x10(%rbp),%rsi
callq  *%rax
cmp    %r14,%rax
jne    4bea8 <TIFFReadRawTile1+0x1a8>
mov    %r14,%rax
mov    -0x28(%rbp),%r14
mov    -0x18(%rbp),%r15
leaveq 
retq   
mov    0x3a0(%r15),%rcx
cmp    %rcx,%rsi
jle    4beee <TIFFReadRawTile1+0x1ee>
mov    -0x20(%rbp),%rax
jmp    4bdf9 <TIFFReadRawTile1+0xf9>
sub    $0x10,%rsp
xor    %r11d,%r11d
mov    0x3b8(%r15),%rdi
lea    0x28972(%rip),%rdx        # 747e7 <module.42+0x1b5>
mov    0x27c(%r15),%ecx
mov    0x2a8(%r15),%r8d
mov    %r9,(%rsp)
mov    %rax,0x8(%rsp)
mov    %r10d,%r9d
mov    %r11,%rax
mov    -0x8(%rbp),%rsi
callq  8a00 <TIFFErrorExt@plt>
mov    $0xffffffffffffffff,%rax
mov    -0x18(%rbp),%r15
leaveq 
retq   
xor    %r9d,%r9d
mov    0x3b8(%r15),%rdi
lea    0x288f0(%rip),%rdx        # 747a9 <module.42+0x177>
mov    0x27c(%r15),%ecx
mov    0x2a8(%r15),%r8d
mov    %r14,(%rsp)
mov    %r9,%r10
mov    %rax,%r9
mov    %r10,%rax
mov    -0x8(%rbp),%rsi
callq  8a00 <TIFFErrorExt@plt>
mov    -0x28(%rbp),%r14
mov    $0xffffffffffffffff,%rax
mov    -0x18(%rbp),%r15
leaveq 
retq   
mov    -0x20(%rbp),%rax
lea    (%rax,%rsi,1),%rdx
cmp    %rdx,%rsi
jg     4bf0d <TIFFReadRawTile1+0x20d>
cmp    %rdx,%rax
jg     4bf0d <TIFFReadRawTile1+0x20d>
cmp    %rdx,%rcx
jl     4bf0d <TIFFReadRawTile1+0x20d>
mov    %rax,%r9
jmpq   4bdf9 <TIFFReadRawTile1+0xf9>
sub    %rsi,%rcx
mov    %rcx,%r9
jmpq   4bdf9 <TIFFReadRawTile1+0xf9>
nopl   0x0(%rax,%rax,1)

000000000004bf20 <TIFFReadAndRealloc>:
push   %rbp
mov    %rsp,%rbp
sub    $0x60,%rsp
mov    %rdi,-0x58(%rbp)
mov    %rcx,-0x18(%rbp)
mov    %r8,-0x10(%rbp)
mov    %r9,-0x8(%rbp)
mov    %rbx,-0x20(%rbp)
mov    %r12,-0x28(%rbp)
mov    %r13,-0x30(%rbp)
mov    %r14,-0x38(%rbp)
mov    %r15,-0x40(%rbp)
xor    %r12d,%r12d
lea    (%rdx,%rsi,1),%rax
mov    %rax,-0x50(%rbp)
mov    %rsi,%r13
mov    %rdx,%r14
mov    $0x100000,%ebx
jmp    4bfb8 <TIFFReadAndRealloc+0x98>
mov    %r13,%r15
sub    %r12,%r15
cmp    %rbx,%r15
jge    4bfd8 <TIFFReadAndRealloc+0xb8>
lea    (%r15,%r14,1),%rax
lea    (%r12,%rax,1),%rcx
mov    0x370(%rdi),%rax
cmp    %rcx,%rax
jl     4bfff <TIFFReadAndRealloc+0xdf>
mov    %r14,%rax
add    0x368(%rdi),%rax
lea    (%r12,%rax,1),%rsi
mov    0x3c0(%rdi),%rax
mov    0x3b8(%rdi),%rdi
mov    %r15,%rdx
callq  *%rax
add    %rax,%r12
cmp    %rax,%r15
jne    4c05f <TIFFReadAndRealloc+0x13f>
mov    -0x58(%rbp),%rdi
mov    -0x50(%rbp),%rax
cmp    %r13,%r12
jl     4bf64 <TIFFReadAndRealloc+0x44>
mov    $0x1,%eax
mov    -0x40(%rbp),%r15
mov    -0x38(%rbp),%r14
mov    -0x30(%rbp),%r13
mov    -0x28(%rbp),%r12
mov    -0x20(%rbp),%rbx
leaveq 
retq   
cmp    $0x3e700000,%rbx
jg     4bf6f <TIFFReadAndRealloc+0x4f>
mov    0x370(%rdi),%rcx
cmp    %rax,%rcx
jge    4bf6f <TIFFReadAndRealloc+0x4f>
lea    (%rbx,%rbx,4),%rax
add    %rax,%rax
mov    %rbx,%r15
mov    %rax,%rbx
jmpq   4bf6f <TIFFReadAndRealloc+0x4f>
mov    0x10(%rdi),%eax
and    $0x200,%eax
test   %eax,%eax
je     4c0e9 <TIFFReadAndRealloc+0x1c9>
lea    0x3ff(%rcx),%rsi
and    $0xfffffffffffffc00,%rsi
mov    %rsi,0x370(%rdi)
test   %rsi,%rsi
je     4c108 <TIFFReadAndRealloc+0x1e8>
mov    0x368(%rdi),%rax
mov    %rbx,-0x48(%rbp)
mov    %rdi,%rbx
mov    %rax,%rdi
callq  8100 <_TIFFrealloc@plt>
test   %rax,%rax
je     4c139 <TIFFReadAndRealloc+0x219>
mov    %rax,0x368(%rbx)
mov    %rbx,%rdi
mov    -0x48(%rbp),%rbx
jmpq   4bf83 <TIFFReadAndRealloc+0x63>
mov    -0x58(%rbp),%r15
mov    %r14,%rax
add    0x368(%r15),%rax
lea    (%r12,%rax,1),%rdi
lea    (%r12,%r14,1),%rax
mov    0x370(%r15),%rdx
sub    %rax,%rdx
xor    %ebx,%ebx
mov    %rbx,%rsi
callq  8550 <memset@plt>
mov    -0x18(%rbp),%rax
test   %eax,%eax
jne    4c192 <TIFFReadAndRealloc+0x272>
sub    $0x10,%rsp
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
lea    0x2873e(%rip),%rdx        # 747e7 <module.42+0x1b5>
mov    0x27c(%r15),%ecx
mov    0x2a8(%r15),%r8d
mov    %r12,(%rsp)
mov    %r13,0x8(%rsp)
mov    -0x10(%rbp),%rsi
mov    %esi,%r9d
mov    -0x8(%rbp),%rsi
callq  8a00 <TIFFErrorExt@plt>
mov    %rbx,%rax
mov    -0x40(%rbp),%r15
mov    -0x38(%rbp),%r14
mov    -0x30(%rbp),%r13
mov    -0x28(%rbp),%r12
mov    -0x20(%rbp),%rbx
leaveq 
retq   
lea    0x2873f(%rip),%rdi        # 7482f <module.42+0x1fd>
lea    0x281a2(%rip),%rsi        # 74299 <module.8+0x37>
mov    $0x56,%edx
lea    0x28752(%rip),%rcx        # 74855 <module.42+0x223>
callq  8490 <__assert_fail@plt>
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
lea    0x281a0(%rip),%rdx        # 742b8 <module.8+0x56>
mov    -0x8(%rbp),%rsi
callq  8a00 <TIFFErrorExt@plt>
mov    -0x40(%rbp),%r15
mov    -0x38(%rbp),%r14
mov    -0x30(%rbp),%r13
mov    -0x28(%rbp),%r12
mov    -0x20(%rbp),%rbx
xor    %eax,%eax
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rbx),%rdi
lea    0x28183(%rip),%rdx        # 742cc <module.8+0x6a>
mov    0x27c(%rbx),%ecx
mov    -0x8(%rbp),%rsi
callq  8a00 <TIFFErrorExt@plt>
mov    0x368(%rbx),%rdi
callq  8bb0 <_TIFFfree@plt>
movq   $0x0,0x368(%rbx)
movq   $0x0,0x370(%rbx)
mov    -0x40(%rbp),%r15
mov    -0x38(%rbp),%r14
mov    -0x30(%rbp),%r13
mov    -0x28(%rbp),%r12
mov    -0x20(%rbp),%rbx
xor    %eax,%eax
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
lea    0x2854e(%rip),%rdx        # 746f0 <module.42+0xbe>
mov    0x27c(%r15),%ecx
mov    %r12,%r8
mov    %r13,%r9
mov    -0x8(%rbp),%rsi
callq  8a00 <TIFFErrorExt@plt>
mov    %rbx,%rax
mov    -0x40(%rbp),%r15
mov    -0x38(%rbp),%r14
mov    -0x30(%rbp),%r13
mov    -0x28(%rbp),%r12
mov    -0x20(%rbp),%rbx
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   0x0(%rax)

000000000004c1e0 <TIFFFillStripPartial>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    %r15,-0x18(%rbp)
mov    %rdx,-0x30(%rbp)
mov    %rcx,-0x28(%rbp)
mov    %rsi,-0x20(%rbp)
mov    %rdi,%r15
callq  8c70 <_TIFFFillStriles@plt>
test   %eax,%eax
jne    4c20c <TIFFFillStripPartial+0x2c>
xor    %eax,%eax
mov    -0x18(%rbp),%r15
leaveq 
retq   
mov    0xf0(%r15),%rax
test   %rax,%rax
jne    4c220 <TIFFFillStripPartial+0x40>
xor    %eax,%eax
mov    -0x18(%rbp),%r15
leaveq 
retq   
movabs $0x3ffffffffffffffe,%rcx
mov    -0x30(%rbp),%rax
cmp    %rcx,%rax
jg     4c236 <TIFFFillStripPartial+0x56>
add    %rax,%rax
lea    0x2862b(%rip),%r8        # 74868 <module.57>
lea    0x28055(%rip),%rsi        # 74299 <module.8+0x37>
lea    0x2863a(%rip),%rcx        # 74885 <module.57+0x1d>
mov    0x370(%r15),%rdx
cmp    %rax,%rdx
jl     4c286 <TIFFFillStripPartial+0xa6>
mov    -0x28(%rbp),%rdx
test   %edx,%edx
je     4c275 <TIFFFillStripPartial+0x95>
movq   $0x0,0x380(%r15)
movq   $0x0,0x378(%r15)
mov    0x380(%r15),%r8
test   %r8,%r8
jg     4c2a3 <TIFFFillStripPartial+0xc3>
xor    %r10d,%r10d
jmp    4c2b8 <TIFFFillStripPartial+0xd8>
mov    -0x28(%rbp),%rdx
test   %edx,%edx
jne    4c352 <TIFFFillStripPartial+0x172>
lea    0x285e4(%rip),%rdi        # 7487d <module.57+0x15>
mov    $0xc2,%edx
callq  8490 <__assert_fail@plt>
mov    0x368(%r15),%rdx
mov    0x388(%r15),%rdi
sub    %rdi,%rdx
lea    (%r8,%rdx,1),%r10
lea    0x2860b(%rip),%rdi        # 748ca <module.57+0x62>
test   %r10,%r10
jg     4c396 <TIFFFillStripPartial+0x1b6>
mov    0xe8(%r15),%rcx
mov    -0x20(%rbp),%rdx
movslq %edx,%r8
mov    0x378(%r15),%rsi
add    (%rcx,%r8,8),%rsi
add    0x380(%r15),%rsi
mov    %r15,%rdi
mov    %r13,-0x20(%rbp)
mov    %r14,-0x30(%rbp)
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %rdx,%rbx
mov    %r8,%r12
mov    %rax,%r13
mov    %r10,%r14
callq  82f0 <_TIFFSeekOK@plt>
test   %eax,%eax
jne    4c3ae <TIFFFillStripPartial+0x1ce>
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
lea    0x283a6(%rip),%rdx        # 746ca <module.42+0x98>
mov    0x27c(%r15),%ecx
movslq %ebx,%r8
lea    0x28533(%rip),%rsi        # 74868 <module.57>
callq  8a00 <TIFFErrorExt@plt>
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x30(%rbp),%r14
mov    -0x20(%rbp),%r13
xor    %eax,%eax
mov    -0x18(%rbp),%r15
leaveq 
retq   
movl   $0xffffffff,0x284(%r15)
mov    0x10(%r15),%edi
and    $0x200,%edi
test   %edi,%edi
jne    4c25b <TIFFFillStripPartial+0x7b>
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
lea    0x2851b(%rip),%rdx        # 7489a <module.57+0x32>
mov    -0x20(%rbp),%rcx
movslq %ecx,%rcx
mov    %r8,%rsi
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x18(%rbp),%r15
leaveq 
retq   
mov    0x10(%r15),%edx
and    $0x800000,%edx
test   %edx,%edx
je     4c3bf <TIFFFillStripPartial+0x1df>
mov    $0xde,%edx
callq  8490 <__assert_fail@plt>
mov    0x370(%r15),%rsi
cmp    %rsi,%r13
jg     4c3f6 <TIFFFillStripPartial+0x216>
sub    %r14,%rsi
jmp    4c3fc <TIFFFillStripPartial+0x21c>
mov    0x368(%r15),%rdi
mov    0x388(%r15),%rsi
mov    %r10,%rdx
mov    %r13,-0x10(%rbp)
mov    %r14,-0x30(%rbp)
mov    %rax,%r13
mov    %r10,%r14
callq  8a50 <memmove@plt>
mov    %r13,%rax
mov    %r14,%r10
mov    -0x30(%rbp),%r14
mov    -0x10(%rbp),%r13
jmpq   4c2c8 <TIFFFillStripPartial+0xe8>
sub    %r14,%r13
mov    %r13,%rsi
mov    0xf0(%r15),%rax
mov    (%rax,%r12,8),%rax
mov    0x380(%r15),%rdi
mov    0x378(%r15),%rdx
lea    (%rdi,%rdx,1),%rcx
neg    %rcx
add    %rax,%rcx
cmp    %rsi,%rcx
jae    4c42e <TIFFFillStripPartial+0x24e>
lea    (%rdi,%rdx,1),%rcx
sub    %rcx,%rax
mov    %rax,%rsi
mov    0x10(%r15),%eax
and    $0x800000,%eax
test   %eax,%eax
je     4c45a <TIFFFillStripPartial+0x27a>
mov    $0xfd,%edx
lea    0x27e52(%rip),%rsi        # 74299 <module.8+0x37>
lea    0x2847c(%rip),%rdi        # 748ca <module.57+0x62>
lea    0x28430(%rip),%rcx        # 74885 <module.57+0x1d>
callq  8490 <__assert_fail@plt>
mov    $0x1,%ecx
mov    %r15,%rdi
mov    %rsi,%r13
mov    %r14,%rdx
xor    %r8d,%r8d
lea    0x283f6(%rip),%r9        # 74868 <module.57>
callq  4bf20 <TIFFReadAndRealloc>
test   %eax,%eax
jne    4c493 <TIFFFillStripPartial+0x2b3>
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x30(%rbp),%r14
mov    -0x20(%rbp),%r13
xor    %eax,%eax
mov    -0x18(%rbp),%r15
leaveq 
retq   
mov    0x380(%r15),%rax
add    0x378(%r15),%rax
sub    %r14,%rax
mov    %rax,0x378(%r15)
lea    (%r14,%r13,1),%rax
mov    %rax,0x380(%r15)
mov    %rax,0x390(%r15)
mov    0x368(%r15),%rdx
mov    %rdx,0x388(%r15)
mov    0x10(%r15),%ecx
movzwl 0x7e(%r15),%eax
and    %ecx,%eax
test   %eax,%eax
je     4c4fd <TIFFFillStripPartial+0x31d>
mov    -0x28(%rbp),%rax
test   %eax,%eax
jne    4c532 <TIFFFillStripPartial+0x352>
mov    $0x1,%eax
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x30(%rbp),%r14
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r15
leaveq 
retq   
mov    %rcx,%rax
and    $0x100,%eax
test   %eax,%eax
jne    4c4da <TIFFFillStripPartial+0x2fa>
and    $0x800000,%ecx
test   %ecx,%ecx
je     4c55e <TIFFFillStripPartial+0x37e>
mov    $0x10e,%edx
lea    0x27d7a(%rip),%rsi        # 74299 <module.8+0x37>
lea    0x283a4(%rip),%rdi        # 748ca <module.57+0x62>
lea    0x28358(%rip),%rcx        # 74885 <module.57+0x1d>
callq  8490 <__assert_fail@plt>
movzwl 0x78(%r15),%eax
cmp    $0x7,%ax
je     4c56f <TIFFFillStripPartial+0x38f>
mov    %rbx,%rsi
mov    %r15,%rdi
callq  4b7b0 <TIFFStartStrip>
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x30(%rbp),%r14
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r15
leaveq 
retq   
lea    (%r14,%rdx,1),%rdi
mov    %r13,%rsi
callq  8700 <TIFFReverseBits@plt>
jmpq   4c4da <TIFFFillStripPartial+0x2fa>
mov    0xf0(%r15),%rax
mov    (%rax,%r12,8),%rax
cmp    0x390(%r15),%rax
jbe    4c53d <TIFFFillStripPartial+0x35d>
mov    %r15,%rdi
callq  85b0 <TIFFJPEGIsFullStripRequired@plt>
test   %eax,%eax
je     4c53d <TIFFFillStripPartial+0x35d>
mov    %rbx,%rsi
mov    %r15,%rdi
callq  8880 <TIFFFillStrip@plt>
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x30(%rbp),%r14
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r15
leaveq 
retq   

000000000004c5b0 <TIFFSeek>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
xor    %r9d,%r9d
mov    0x5c(%rdi),%r8d
cmp    %esi,%r8d
jbe    4c60c <TIFFSeek+0x5c>
movzwl 0xaa(%rdi),%eax
cmp    $0x2,%ax
je     4c630 <TIFFSeek+0x80>
mov    0x84(%rdi),%ecx
xor    %edx,%edx
mov    %rsi,%rax
div    %ecx
mov    0x284(%rdi),%ecx
cmp    %eax,%ecx
jne    4c666 <TIFFSeek+0xb6>
mov    $0x1,%ecx
cmp    0x27c(%rdi),%esi
jb     4c69f <TIFFSeek+0xef>
mov    0x27c(%rdi),%eax
cmp    %eax,%esi
jne    4c6df <TIFFSeek+0x12f>
mov    %rcx,%rax
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rdi),%r9
mov    (%rdi),%rdi
lea    0x282cf(%rip),%rdx        # 748ee <module.57+0x86>
mov    %esi,%ecx
mov    %rdi,%rsi
mov    %r9,%rdi
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
movzwl 0x82(%rdi),%r8d
cmp    %dx,%r8w
jbe    4c711 <TIFFSeek+0x161>
mov    0x84(%rdi),%r8d
xor    %r10d,%r10d
movzwl %dx,%ecx
imul   0xe0(%rdi),%ecx
mov    %r10,%rdx
mov    %rsi,%rax
div    %r8d
add    %ecx,%eax
jmpq   4c5de <TIFFSeek+0x2e>
mov    %rdi,%rcx
mov    %rax,%rdx
mov    %rdi,-0x20(%rbp)
mov    %rsi,-0x18(%rbp)
mov    %rax,-0x10(%rbp)
mov    %rdx,%rsi
mov    %rcx,%rdi
callq  8880 <TIFFFillStrip@plt>
test   %eax,%eax
je     4c736 <TIFFSeek+0x186>
xor    %r9d,%r9d
mov    -0x10(%rbp),%rax
mov    -0x18(%rbp),%rsi
mov    -0x20(%rbp),%rdi
jmpq   4c5e8 <TIFFSeek+0x38>
mov    0x378(%rdi),%rdx
test   %rdx,%rdx
jne    4c73a <TIFFSeek+0x18a>
mov    %rdi,%rcx
mov    %rdi,-0x20(%rbp)
mov    %rsi,-0x18(%rbp)
mov    %rax,%rsi
mov    %rcx,%rdi
callq  4b7b0 <TIFFStartStrip>
test   %eax,%eax
je     4c769 <TIFFSeek+0x1b9>
mov    $0x1,%ecx
mov    -0x18(%rbp),%rsi
mov    -0x20(%rbp),%rdi
jmpq   4c5f9 <TIFFSeek+0x49>
neg    %eax
add    %esi,%eax
mov    %rdi,%rcx
mov    %r14,-0x8(%rbp)
mov    %r15,-0x20(%rbp)
mov    %rdi,%r14
mov    %rcx,%rdi
mov    %rsi,%r15
mov    %rax,%rsi
callq  *0x330(%r14)
test   %eax,%eax
jne    4c76d <TIFFSeek+0x1bd>
mov    -0x20(%rbp),%r15
mov    -0x8(%rbp),%r14
xor    %eax,%eax
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rdi),%r9
mov    (%rdi),%rsi
lea    0x281e9(%rip),%rdi        # 7490d <module.57+0xa5>
movzwl %dx,%ecx
mov    %rdi,%rdx
mov    %r9,%rdi
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
xor    %eax,%eax
leaveq 
retq   
mov    %rdi,%rdx
mov    %rdi,-0x20(%rbp)
mov    %rsi,-0x10(%rbp)
mov    %rax,%rsi
mov    %rdx,%rdi
mov    %r9,%rdx
callq  4c1e0 <TIFFFillStripPartial>
test   %eax,%eax
je     4c783 <TIFFSeek+0x1d3>
mov    $0x1,%ecx
mov    -0x10(%rbp),%rsi
mov    -0x20(%rbp),%rdi
jmpq   4c5f9 <TIFFSeek+0x49>
xor    %eax,%eax
leaveq 
retq   
mov    %r15d,0x27c(%r14)
mov    -0x20(%rbp),%r15
mov    -0x8(%rbp),%r14
mov    $0x1,%eax
leaveq 
retq   
xor    %eax,%eax
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

000000000004c790 <TIFFReadEncodedStripGetStripSize>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %r15,-0x8(%rbp)
mov    %rsi,-0x18(%rbp)
mov    %rdx,-0x10(%rbp)
xor    %esi,%esi
mov    %rdi,%r15
callq  4ba80 <TIFFCheckRead>
test   %eax,%eax
jne    4c7bf <TIFFReadEncodedStripGetStripSize+0x2f>
mov    $0xffffffffffffffff,%rax
mov    -0x8(%rbp),%r15
leaveq 
retq   
mov    0xe4(%r15),%r8d
mov    -0x18(%rbp),%rcx
cmp    %ecx,%r8d
jbe    4c7f5 <TIFFReadEncodedStripGetStripSize+0x65>
mov    0x5c(%r15),%r9d
mov    0x84(%r15),%esi
cmp    %esi,%r9d
jae    4c7e2 <TIFFReadEncodedStripGetStripSize+0x52>
mov    %r9,%rsi
mov    %r15,%rdi
mov    0x5c(%rdi),%eax
xor    %edx,%edx
div    %esi
test   %edx,%edx
jne    4c820 <TIFFReadEncodedStripGetStripSize+0x90>
xor    %r8d,%r8d
jmp    4c826 <TIFFReadEncodedStripGetStripSize+0x96>
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
lea    0x2812a(%rip),%rsi        # 7492f <module.64>
lea    0x27b0f(%rip),%rdx        # 7431b <module.15+0x11>
mov    %ecx,%ecx
callq  8a00 <TIFFErrorExt@plt>
mov    $0xffffffffffffffff,%rax
mov    -0x8(%rbp),%r15
leaveq 
retq   
mov    $0x1,%r8d
mov    %r9,%rax
xor    %edx,%edx
div    %esi
add    %eax,%r8d
mov    -0x10(%rbp),%r9
test   %r9,%r9
je     4c845 <TIFFReadEncodedStripGetStripSize+0xb5>
xor    %edx,%edx
mov    %rcx,%rax
div    %r8d
mov    %ax,(%r9)
mov    %rcx,%rax
xor    %edx,%edx
div    %r8d
mov    %rsi,%rcx
imul   %edx,%ecx
mov    0x5c(%rdi),%eax
sub    %ecx,%eax
cmp    %eax,%esi
jb     4c85f <TIFFReadEncodedStripGetStripSize+0xcf>
mov    %rax,%rsi
callq  82b0 <TIFFVStripSize@plt>
test   %rax,%rax
jne    4c876 <TIFFReadEncodedStripGetStripSize+0xe6>
mov    $0xffffffffffffffff,%rax
mov    -0x8(%rbp),%r15
leaveq 
retq   
mov    -0x8(%rbp),%r15
leaveq 
retq   
nopl   0x0(%rax)

000000000004c880 <TIFFReadRawStripOrTile2>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
lea    0x27a0a(%rip),%r11        # 74299 <module.8+0x37>
lea    0x280bd(%rip),%r9        # 74953 <module.64+0x24>
mov    0x10(%rdi),%r10d
mov    %r10,%rax
and    $0x800,%eax
test   %eax,%eax
jne    4c8c9 <TIFFReadRawStripOrTile2+0x49>
and    $0x20000,%r10d
test   %r10d,%r10d
je     4c8e0 <TIFFReadRawStripOrTile2+0x60>
mov    %r9,%rcx
mov    %r11,%rsi
lea    0x279b7(%rip),%rdi        # 74276 <module.8+0x14>
mov    $0x2a3,%edx
callq  8490 <__assert_fail@plt>
mov    %r9,%rcx
mov    %r11,%rsi
lea    0x2806e(%rip),%rdi        # 74944 <module.64+0x15>
mov    $0x2a2,%edx
callq  8490 <__assert_fail@plt>
mov    0xe8(%rdi),%r9
mov    %esi,%eax
mov    (%r9,%rax,8),%rax
mov    %rdi,%r9
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rcx,%rbx
mov    %rdi,%r12
mov    %r9,%rdi
mov    %rdx,%r13
mov    %rsi,%r14
mov    %rax,%rsi
mov    %r8,%r15
callq  82f0 <_TIFFSeekOK@plt>
test   %eax,%eax
jne    4c974 <TIFFReadRawStripOrTile2+0xf4>
test   %r13d,%r13d
jne    4c9ab <TIFFReadRawStripOrTile2+0x12b>
xor    %eax,%eax
mov    0x3b8(%r12),%rdi
lea    0x27e44(%rip),%rdx        # 74780 <module.42+0x14e>
mov    0x27c(%r12),%ecx
mov    0x2a8(%r12),%r8d
mov    %r14d,%r9d
mov    %r15,%rsi
callq  8a00 <TIFFErrorExt@plt>
mov    $0xffffffffffffffff,%rax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
mov    %r13,%rcx
mov    %r12,%rdi
mov    %r14,%r8
mov    %r15,%r9
xor    %edx,%edx
mov    %rbx,%rsi
callq  4bf20 <TIFFReadAndRealloc>
test   %eax,%eax
jne    4c9ec <TIFFReadRawStripOrTile2+0x16c>
mov    $0xffffffffffffffff,%rax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%r12),%rdi
lea    0x27d0e(%rip),%rdx        # 746ca <module.42+0x98>
mov    0x27c(%r12),%ecx
mov    %r14d,%r8d
mov    %r15,%rsi
callq  8a00 <TIFFErrorExt@plt>
mov    $0xffffffffffffffff,%rax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
mov    %rbx,%rax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)
nop

000000000004ca10 <TIFFScanlineSize64>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
lea    0x27f4c(%rip),%rcx        # 7496b <module.8>
movzwl 0xaa(%rdi),%eax
cmp    $0x1,%ax
je     4ca55 <TIFFScanlineSize64+0x45>
mov    0x58(%rdi),%esi
movzwl 0x74(%rdi),%edx
mov    %rdi,%rax
mov    %rdi,-0x8(%rbp)
mov    %rax,%rdi
callq  8300 <_TIFFMultiply64@plt>
add    $0x7,%rax
shr    $0x3,%rax
mov    -0x8(%rbp),%rdi
test   %rax,%rax
je     4caa3 <TIFFScanlineSize64+0x93>
leaveq 
retq   
movzwl 0x7a(%rdi),%eax
cmp    $0x6,%ax
je     4cac3 <TIFFScanlineSize64+0xb3>
mov    0x58(%rdi),%esi
movzwl 0x82(%rdi),%edx
mov    %rdi,%rax
mov    %r15,-0x8(%rbp)
mov    %rdi,%r15
mov    %rax,%rdi
callq  8300 <_TIFFMultiply64@plt>
mov    %rax,%rsi
movzwl 0x74(%r15),%edx
mov    %r15,%rdi
lea    0x27ede(%rip),%rcx        # 7496b <module.8>
callq  8300 <_TIFFMultiply64@plt>
add    $0x7,%rax
shr    $0x3,%rax
mov    %r15,%rdi
mov    -0x8(%rbp),%r15
jmp    4ca4e <TIFFScanlineSize64+0x3e>
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
lea    0x27f06(%rip),%rdx        # 749b9 <module.8+0x4e>
lea    0x27eb1(%rip),%rsi        # 7496b <module.8>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
movzwl 0x82(%rdi),%edx
cmp    $0x3,%dx
jne    4ca5f <TIFFScanlineSize64+0x4f>
mov    0x10(%rdi),%eax
and    $0x4000,%eax
test   %eax,%eax
jne    4ca5f <TIFFScanlineSize64+0x4f>
cmp    $0x3,%dx
jne    4cb2b <TIFFScanlineSize64+0x11b>
xor    %eax,%eax
mov    $0x212,%esi
lea    -0xc(%rbp),%rdx
lea    -0xa(%rbp),%rcx
mov    %rdi,%r8
mov    %r15,-0x8(%rbp)
mov    %rdi,%r15
mov    %r8,%rdi
callq  8390 <TIFFGetFieldDefaulted@plt>
movzwl -0xc(%rbp),%ecx
cmp    $0x1,%cx
jne    4cb47 <TIFFScanlineSize64+0x137>
lea    -0xa(%rbp),%rax
movzwl (%rax),%esi
cmp    $0x1,%si
jne    4cb77 <TIFFScanlineSize64+0x167>
mov    0x58(%r15),%edx
mov    %rcx,%rax
neg    %eax
cmp    %edx,%eax
ja     4cb85 <TIFFScanlineSize64+0x175>
xor    %eax,%eax
jmp    4cb8d <TIFFScanlineSize64+0x17d>
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
mov    %rcx,%rsi
lea    0x27e40(%rip),%rdx        # 7497e <module.8+0x13>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
cmp    $0x2,%cx
je     4cb0d <TIFFScanlineSize64+0xfd>
cmp    $0x4,%cx
je     4cb0d <TIFFScanlineSize64+0xfd>
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
lea    0x27e3c(%rip),%rdx        # 7499f <module.8+0x34>
lea    0x27e01(%rip),%rsi        # 7496b <module.8>
callq  8a00 <TIFFErrorExt@plt>
mov    -0x8(%rbp),%r15
xor    %eax,%eax
leaveq 
retq   
cmp    $0x2,%si
je     4cb1a <TIFFScanlineSize64+0x10a>
cmp    $0x4,%si
jne    4cb53 <TIFFScanlineSize64+0x143>
jmp    4cb1a <TIFFScanlineSize64+0x10a>
lea    -0x1(%rcx,%rdx,1),%eax
xor    %edx,%edx
div    %ecx
imul   %si,%cx
add    $0x2,%ecx
movzwl %cx,%edx
mov    %eax,%esi
mov    %r15,%rdi
lea    0x27dc8(%rip),%rcx        # 7496b <module.8>
callq  8300 <_TIFFMultiply64@plt>
mov    %rax,%rsi
movzwl 0x74(%r15),%edx
mov    %r15,%rdi
lea    0x27db1(%rip),%rcx        # 7496b <module.8>
callq  8300 <_TIFFMultiply64@plt>
add    $0x7,%rax
shr    $0x3,%rax
lea    -0xa(%rbp),%rcx
movzwl (%rcx),%ecx
mov    %r15,%rdi
xor    %edx,%edx
div    %rcx
mov    -0x8(%rbp),%r15
jmpq   4ca4e <TIFFScanlineSize64+0x3e>
nop

000000000004cbe0 <TIFFScanlineSize>:
push   %rbp
mov    %rsp,%rbp
callq  8220 <TIFFScanlineSize64@plt>
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

000000000004cbf0 <TIFFRasterScanlineSize64>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x8(%rbp)
movzwl 0x74(%rdi),%esi
mov    0x58(%rdi),%edx
lea    0x27dce(%rip),%rcx        # 749d8 <module.13>
mov    %rdi,%r15
callq  8300 <_TIFFMultiply64@plt>
movzwl 0xaa(%r15),%ecx
cmp    $0x1,%cx
je     4cc35 <TIFFRasterScanlineSize64+0x45>
mov    %rax,%rcx
and    $0x7,%rcx
test   %rcx,%rcx
jne    4cc64 <TIFFRasterScanlineSize64+0x74>
mov    %rax,%rsi
shr    $0x3,%rsi
jmp    4cc6c <TIFFRasterScanlineSize64+0x7c>
mov    %rax,%rsi
mov    %r15,%rdi
movzwl 0x82(%rdi),%edx
lea    0x27d8f(%rip),%rcx        # 749d8 <module.13>
callq  8300 <_TIFFMultiply64@plt>
mov    %rax,%rcx
and    $0x7,%rcx
test   %rcx,%rcx
jne    4cc88 <TIFFRasterScanlineSize64+0x98>
shr    $0x3,%rax
mov    -0x8(%rbp),%r15
leaveq 
retq   
shr    $0x3,%rax
lea    0x1(%rax),%rsi
mov    %r15,%rdi
movzwl 0x82(%rdi),%edx
lea    0x27d5b(%rip),%rcx        # 749d8 <module.13>
callq  8300 <_TIFFMultiply64@plt>
mov    -0x8(%rbp),%r15
leaveq 
retq   
shr    $0x3,%rax
add    $0x1,%rax
mov    -0x8(%rbp),%r15
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)

000000000004cca0 <TIFFRasterScanlineSize>:
push   %rbp
mov    %rsp,%rbp
callq  8500 <TIFFRasterScanlineSize64@plt>
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

000000000004ccb0 <TIFFStripSize64>:
push   %rbp
mov    %rsp,%rbp
mov    0x5c(%rdi),%eax
mov    0x84(%rdi),%esi
cmp    %esi,%eax
jae    4ccc4 <TIFFStripSize64+0x14>
mov    %rax,%rsi
callq  8c00 <TIFFVStripSize64@plt>
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

000000000004ccd0 <TIFFStripSize>:
push   %rbp
mov    %rsp,%rbp
callq  82a0 <TIFFStripSize64@plt>
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

000000000004cce0 <TIFFRawStripSize64>:
push   %rbp
mov    %rsp,%rbp
mov    0xf0(%rdi),%rcx
mov    %esi,%eax
mov    (%rcx,%rax,8),%rax
test   %rax,%rax
je     4ccf8 <TIFFRawStripSize64+0x18>
leaveq 
retq   
mov    0x3b8(%rdi),%rdi
lea    0x27ceb(%rip),%r9        # 749f1 <module.16>
lea    0x27cf7(%rip),%rdx        # 74a04 <module.16+0x13>
xor    %eax,%eax
mov    %esi,%r8d
mov    %r9,%rsi
mov    %rax,%rcx
callq  8a00 <TIFFErrorExt@plt>
mov    $0xffffffffffffffff,%rax
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)

000000000004cd30 <TIFFRawStripSize>:
push   %rbp
mov    %rsp,%rbp
callq  84c0 <TIFFRawStripSize64@plt>
cmp    $0xffffffffffffffff,%rax
jne    4cd48 <TIFFRawStripSize+0x18>
mov    $0xffffffffffffffff,%rax
leaveq 
retq   
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

000000000004cd50 <TIFFVStripSize64>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
cmp    $0xffffffff,%esi
jne    4cd60 <TIFFVStripSize64+0x10>
mov    0x5c(%rdi),%esi
lea    0x27cc7(%rip),%rcx        # 74a2e <module.19>
movzwl 0xaa(%rdi),%eax
cmp    $0x1,%ax
je     4cdac <TIFFVStripSize64+0x5c>
mov    %rdi,%rax
mov    %r14,-0x10(%rbp)
mov    %r15,-0x18(%rbp)
mov    %rsi,%r14
mov    %rdi,%r15
mov    %rax,%rdi
callq  8220 <TIFFScanlineSize64@plt>
mov    %r14d,%esi
mov    %rax,%rdx
mov    %r15,%rdi
lea    0x27c91(%rip),%rcx        # 74a2e <module.19>
callq  8300 <_TIFFMultiply64@plt>
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
leaveq 
retq   
movzwl 0x7a(%rdi),%eax
cmp    $0x6,%ax
jne    4cd74 <TIFFVStripSize64+0x24>
mov    0x10(%rdi),%eax
and    $0x4000,%eax
test   %eax,%eax
jne    4cd74 <TIFFVStripSize64+0x24>
movzwl 0x82(%rdi),%eax
cmp    $0x3,%ax
jne    4ce24 <TIFFVStripSize64+0xd4>
xor    %eax,%eax
mov    $0x212,%r9d
lea    -0x1c(%rbp),%rdx
lea    -0x1a(%rbp),%rcx
mov    %rdi,%r8
mov    %r14,-0x10(%rbp)
mov    %r15,-0x18(%rbp)
mov    %rdi,%r14
mov    %r8,%rdi
mov    %rsi,%r15
mov    %r9,%rsi
callq  8390 <TIFFGetFieldDefaulted@plt>
movzwl -0x1c(%rbp),%ecx
cmp    $0x1,%cx
jne    4ce40 <TIFFVStripSize64+0xf0>
lea    -0x1a(%rbp),%r8
movzwl (%r8),%esi
cmp    $0x1,%si
jne    4ce7d <TIFFVStripSize64+0x12d>
mov    0x58(%r14),%eax
mov    %rcx,%rdx
neg    %edx
cmp    %eax,%edx
ja     4ce8b <TIFFVStripSize64+0x13b>
xor    %edi,%edi
jmp    4ce96 <TIFFVStripSize64+0x146>
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
mov    %rcx,%rsi
lea    0x27b47(%rip),%rdx        # 7497e <module.8+0x13>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
cmp    $0x2,%cx
je     4ce05 <TIFFVStripSize64+0xb5>
cmp    $0x4,%cx
je     4ce05 <TIFFVStripSize64+0xb5>
xor    %eax,%eax
mov    0x3b8(%r14),%rdi
lea    0x27be3(%rip),%rdx        # 74a3f <module.19+0x11>
movzwl -0x1c(%rbp),%ecx
movzwl -0x1a(%rbp),%r8d
lea    0x27bc2(%rip),%rsi        # 74a2e <module.19>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
leaveq 
retq   
cmp    $0x2,%si
je     4ce13 <TIFFVStripSize64+0xc3>
cmp    $0x4,%si
jne    4ce4c <TIFFVStripSize64+0xfc>
jmp    4ce13 <TIFFVStripSize64+0xc3>
lea    -0x1(%rcx,%rax,1),%eax
xor    %edx,%edx
div    %ecx
mov    %rax,%rdi
movzwl (%r8),%r8d
mov    %r8,%rax
neg    %eax
cmp    %r15d,%eax
ja     4cea9 <TIFFVStripSize64+0x159>
xor    %r15d,%r15d
jmp    4ceb6 <TIFFVStripSize64+0x166>
lea    -0x1(%r8,%r15,1),%eax
xor    %edx,%edx
div    %r8d
mov    %rax,%r15
imul   %si,%cx
lea    0x2(%rcx),%eax
movzwl %ax,%edx
mov    %edi,%esi
mov    %r14,%rdi
lea    0x27b62(%rip),%rcx        # 74a2e <module.19>
callq  8300 <_TIFFMultiply64@plt>
movzwl 0x74(%r14),%edx
mov    %r14,%rdi
mov    %rax,%rsi
lea    0x27b4b(%rip),%rcx        # 74a2e <module.19>
mov    %r13,-0x8(%rbp)
mov    %rax,%r13
callq  8300 <_TIFFMultiply64@plt>
and    $0x7,%rax
test   %rax,%rax
jne    4cf1e <TIFFVStripSize64+0x1ce>
mov    %r13,%rsi
movzwl 0x74(%r14),%edx
mov    %r14,%rdi
lea    0x27b24(%rip),%r13        # 74a2e <module.19>
mov    %r13,%rcx
callq  8300 <_TIFFMultiply64@plt>
mov    %rax,%rsi
shr    $0x3,%rsi
mov    %r13,%rcx
jmp    4cf43 <TIFFVStripSize64+0x1f3>
mov    %r13,%rsi
movzwl 0x74(%r14),%edx
mov    %r14,%rdi
lea    0x27afe(%rip),%r13        # 74a2e <module.19>
mov    %r13,%rcx
callq  8300 <_TIFFMultiply64@plt>
shr    $0x3,%rax
lea    0x1(%rax),%rsi
mov    %r13,%rcx
mov    %r15d,%edx
mov    %r14,%rdi
callq  8300 <_TIFFMultiply64@plt>
mov    -0x8(%rbp),%r13
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
leaveq 
retq   
nopl   0x0(%rax)

000000000004cf60 <TIFFVStripSize>:
push   %rbp
mov    %rsp,%rbp
callq  8c00 <TIFFVStripSize64@plt>
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

000000000004cf70 <TIFFDefaultStripSize>:
push   %rbp
mov    %rsp,%rbp
callq  *0x340(%rdi)
leaveq 
retq   
nopl   0x0(%rax)

000000000004cf80 <TIFFComputeStrip>:
push   %rbp
mov    %rsp,%rbp
mov    %rsi,%rax
mov    %rdx,%rcx
xor    %edx,%edx
mov    0x84(%rdi),%r8d
div    %r8d
movzwl 0xaa(%rdi),%edx
cmp    $0x2,%dx
je     4cfa5 <TIFFComputeStrip+0x25>
leaveq 
retq   
movzwl 0x82(%rdi),%r8d
cmp    %cx,%r8w
jbe    4cfc1 <TIFFComputeStrip+0x41>
movzwl %cx,%ecx
imul   0xe0(%rdi),%ecx
add    %ecx,%eax
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
lea    0x27a90(%rip),%rsi        # 74a61 <module.22>
lea    0x27a9a(%rip),%rdx        # 74a72 <module.22+0x11>
movzwl %cx,%ecx
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nop

000000000004cff0 <TIFFNumberOfStrips>:
push   %rbp
mov    %rsp,%rbp
mov    0x84(%rdi),%ecx
cmp    $0xffffffff,%ecx
jne    4d013 <TIFFNumberOfStrips+0x23>
mov    $0x1,%eax
movzwl 0xaa(%rdi),%ecx
cmp    $0x2,%cx
je     4d023 <TIFFNumberOfStrips+0x33>
leaveq 
retq   
mov    0x5c(%rdi),%edx
mov    %rcx,%rax
neg    %eax
cmp    %edx,%eax
ja     4d03b <TIFFNumberOfStrips+0x4b>
xor    %eax,%eax
jmp    4d004 <TIFFNumberOfStrips+0x14>
mov    %rax,%rsi
movzwl 0x82(%rdi),%edx
lea    0x27a60(%rip),%rcx        # 74a94 <module.22+0x33>
callq  84f0 <_TIFFMultiply32@plt>
leaveq 
retq   
lea    -0x1(%rcx,%rdx,1),%eax
xor    %edx,%edx
div    %ecx
jmp    4d004 <TIFFNumberOfStrips+0x14>
data16 nopw %cs:0x0(%rax,%rax,1)

000000000004d050 <_TIFFDefaultStripSize>:
push   %rbp
mov    %rsp,%rbp
test   %esi,%esi
jle    4d05d <_TIFFDefaultStripSize+0xd>
mov    %rsi,%rax
leaveq 
retq   
callq  8220 <TIFFScanlineSize64@plt>
test   %rax,%rax
je     4d06c <_TIFFDefaultStripSize+0x1c>
mov    %rax,%rcx
jmp    4d071 <_TIFFDefaultStripSize+0x21>
mov    $0x1,%ecx
mov    $0x2000,%eax
xor    %edx,%edx
div    %rcx
test   %rax,%rax
jne    4d087 <_TIFFDefaultStripSize+0x37>
mov    $0x1,%eax
leaveq 
retq   
mov    $0xffffffff,%ecx
cmp    %rcx,%rax
jbe    4d096 <_TIFFDefaultStripSize+0x46>
mov    %rcx,%rax
leaveq 
retq   
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

000000000004d0a0 <TIFFSwabShort>:
push   %rbp
mov    %rsp,%rbp
movzbl (%rdi),%eax
movzbl 0x1(%rdi),%ecx
mov    %al,0x1(%rdi)
mov    %cl,(%rdi)
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   (%rax)

000000000004d0c0 <TIFFSwabLong>:
push   %rbp
mov    %rsp,%rbp
movzbl (%rdi),%ecx
movzbl 0x3(%rdi),%eax
mov    %cl,0x3(%rdi)
mov    %al,(%rdi)
movzbl 0x1(%rdi),%ecx
movzbl 0x2(%rdi),%eax
mov    %cl,0x2(%rdi)
mov    %al,0x1(%rdi)
leaveq 
retq   

000000000004d0e0 <TIFFSwabLong8>:
push   %rbp
mov    %rsp,%rbp
movzbl (%rdi),%ecx
movzbl 0x7(%rdi),%eax
mov    %cl,0x7(%rdi)
mov    %al,(%rdi)
movzbl 0x1(%rdi),%ecx
movzbl 0x6(%rdi),%eax
mov    %cl,0x6(%rdi)
mov    %al,0x1(%rdi)
movzbl 0x2(%rdi),%ecx
movzbl 0x5(%rdi),%eax
mov    %cl,0x5(%rdi)
mov    %al,0x2(%rdi)
movzbl 0x3(%rdi),%ecx
movzbl 0x4(%rdi),%eax
mov    %cl,0x4(%rdi)
mov    %al,0x3(%rdi)
leaveq 
retq   
nopl   0x0(%rax)

000000000004d120 <TIFFSwabFloat>:
push   %rbp
mov    %rsp,%rbp
movzbl (%rdi),%ecx
movzbl 0x3(%rdi),%eax
mov    %cl,0x3(%rdi)
mov    %al,(%rdi)
movzbl 0x1(%rdi),%ecx
movzbl 0x2(%rdi),%eax
mov    %cl,0x2(%rdi)
mov    %al,0x1(%rdi)
leaveq 
retq   

000000000004d140 <TIFFSwabDouble>:
push   %rbp
mov    %rsp,%rbp
movzbl (%rdi),%ecx
movzbl 0x7(%rdi),%eax
mov    %cl,0x7(%rdi)
mov    %al,(%rdi)
movzbl 0x1(%rdi),%ecx
movzbl 0x6(%rdi),%eax
mov    %cl,0x6(%rdi)
mov    %al,0x1(%rdi)
movzbl 0x2(%rdi),%ecx
movzbl 0x5(%rdi),%eax
mov    %cl,0x5(%rdi)
mov    %al,0x2(%rdi)
movzbl 0x3(%rdi),%ecx
movzbl 0x4(%rdi),%eax
mov    %cl,0x4(%rdi)
mov    %al,0x3(%rdi)
leaveq 
retq   
nopl   0x0(%rax)

000000000004d180 <TIFFSwabArrayOfShort>:
push   %rbp
mov    %rsp,%rbp
jmp    4d19a <TIFFSwabArrayOfShort+0x1a>
movzbl (%rdi),%eax
movzbl 0x1(%rdi),%ecx
mov    %al,0x1(%rdi)
mov    %cl,(%rdi)
add    $0xffffffffffffffff,%rsi
add    $0x2,%rdi
test   %rsi,%rsi
jg     4d186 <TIFFSwabArrayOfShort+0x6>
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   0x0(%rax)

000000000004d1b0 <TIFFSwabArrayOfTriples>:
push   %rbp
mov    %rsp,%rbp
jmp    4d1ca <TIFFSwabArrayOfTriples+0x1a>
movzbl (%rdi),%eax
movzbl 0x2(%rdi),%ecx
mov    %al,0x2(%rdi)
mov    %cl,(%rdi)
add    $0xffffffffffffffff,%rsi
add    $0x3,%rdi
test   %rsi,%rsi
jg     4d1b6 <TIFFSwabArrayOfTriples+0x6>
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   0x0(%rax)

000000000004d1e0 <TIFFSwabArrayOfLong>:
push   %rbp
mov    %rsp,%rbp
jmp    4d208 <TIFFSwabArrayOfLong+0x28>
movzbl (%rdi),%eax
movzbl 0x3(%rdi),%ecx
mov    %al,0x3(%rdi)
mov    %cl,(%rdi)
movzbl 0x1(%rdi),%ecx
movzbl 0x2(%rdi),%eax
mov    %cl,0x2(%rdi)
mov    %al,0x1(%rdi)
add    $0xffffffffffffffff,%rsi
add    $0x4,%rdi
test   %rsi,%rsi
jg     4d1e6 <TIFFSwabArrayOfLong+0x6>
leaveq 
retq   
nop

000000000004d210 <TIFFSwabArrayOfLong8>:
push   %rbp
mov    %rsp,%rbp
jmp    4d254 <TIFFSwabArrayOfLong8+0x44>
movzbl (%rdi),%ecx
movzbl 0x7(%rdi),%eax
mov    %cl,0x7(%rdi)
mov    %al,(%rdi)
movzbl 0x1(%rdi),%ecx
movzbl 0x6(%rdi),%eax
mov    %cl,0x6(%rdi)
mov    %al,0x1(%rdi)
movzbl 0x2(%rdi),%eax
movzbl 0x5(%rdi),%ecx
mov    %al,0x5(%rdi)
mov    %cl,0x2(%rdi)
movzbl 0x3(%rdi),%eax
movzbl 0x4(%rdi),%ecx
mov    %al,0x4(%rdi)
mov    %cl,0x3(%rdi)
add    $0xffffffffffffffff,%rsi
add    $0x8,%rdi
test   %rsi,%rsi
jg     4d216 <TIFFSwabArrayOfLong8+0x6>
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

000000000004d260 <TIFFSwabArrayOfFloat>:
push   %rbp
mov    %rsp,%rbp
jmp    4d288 <TIFFSwabArrayOfFloat+0x28>
movzbl (%rdi),%eax
movzbl 0x3(%rdi),%ecx
mov    %al,0x3(%rdi)
mov    %cl,(%rdi)
movzbl 0x1(%rdi),%ecx
movzbl 0x2(%rdi),%eax
mov    %cl,0x2(%rdi)
mov    %al,0x1(%rdi)
add    $0xffffffffffffffff,%rsi
add    $0x4,%rdi
test   %rsi,%rsi
jg     4d266 <TIFFSwabArrayOfFloat+0x6>
leaveq 
retq   
nop

000000000004d290 <TIFFSwabArrayOfDouble>:
push   %rbp
mov    %rsp,%rbp
jmp    4d2d4 <TIFFSwabArrayOfDouble+0x44>
movzbl (%rdi),%ecx
movzbl 0x7(%rdi),%eax
mov    %cl,0x7(%rdi)
mov    %al,(%rdi)
movzbl 0x1(%rdi),%ecx
movzbl 0x6(%rdi),%eax
mov    %cl,0x6(%rdi)
mov    %al,0x1(%rdi)
movzbl 0x2(%rdi),%eax
movzbl 0x5(%rdi),%ecx
mov    %al,0x5(%rdi)
mov    %cl,0x2(%rdi)
movzbl 0x3(%rdi),%eax
movzbl 0x4(%rdi),%ecx
mov    %al,0x4(%rdi)
mov    %cl,0x3(%rdi)
add    $0xffffffffffffffff,%rsi
add    $0x8,%rdi
test   %rsi,%rsi
jg     4d296 <TIFFSwabArrayOfDouble+0x6>
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

000000000004d2e0 <TIFFReverseBits>:
push   %rbp
mov    %rsp,%rbp
lea    0x277bc(%rip),%rcx        # 74aa7 <TIFFBitRevTable>
jmp    4d34b <TIFFReverseBits+0x6b>
movzbl (%rdi),%eax
movzbl (%rax,%rcx,1),%eax
mov    %al,(%rdi)
movzbl 0x1(%rdi),%eax
movzbl (%rax,%rcx,1),%eax
mov    %al,0x1(%rdi)
movzbl 0x2(%rdi),%eax
movzbl (%rax,%rcx,1),%eax
mov    %al,0x2(%rdi)
movzbl 0x3(%rdi),%eax
movzbl (%rax,%rcx,1),%eax
mov    %al,0x3(%rdi)
movzbl 0x4(%rdi),%eax
movzbl (%rax,%rcx,1),%eax
mov    %al,0x4(%rdi)
movzbl 0x5(%rdi),%eax
movzbl (%rax,%rcx,1),%eax
mov    %al,0x5(%rdi)
movzbl 0x6(%rdi),%eax
movzbl (%rax,%rcx,1),%eax
mov    %al,0x6(%rdi)
movzbl 0x7(%rdi),%eax
movzbl (%rax,%rcx,1),%eax
mov    %al,0x7(%rdi)
add    $0x8,%rdi
add    $0xfffffffffffffff8,%rsi
cmp    $0x8,%rsi
jg     4d2ed <TIFFReverseBits+0xd>
jmp    4d364 <TIFFReverseBits+0x84>
movzbl (%rdi),%eax
movzbl (%rax,%rcx,1),%eax
mov    %al,(%rdi)
add    $0xffffffffffffffff,%rsi
add    $0x1,%rdi
test   %rsi,%rsi
jg     4d353 <TIFFReverseBits+0x73>
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

000000000004d370 <TIFFGetBitRevTable>:
push   %rbp
mov    %rsp,%rbp
test   %edi,%edi
je     4d381 <TIFFGetBitRevTable+0x11>
lea    0x27728(%rip),%rax        # 74aa7 <TIFFBitRevTable>
leaveq 
retq   
lea    0x2781f(%rip),%rax        # 74ba7 <TIFFNoBitRevTable>
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

000000000004d390 <TIFFInitThunderScan>:
push   %rbp
mov    %rsp,%rbp
lea    0x25(%rip),%rax        # 4d3c0 <ThunderSetupDecode>
mov    %rax,0x2c8(%rdi)
lea    0x3f7(%rip),%rax        # 4d7a0 <ThunderDecodeRow>
mov    %rax,0x2f8(%rdi)
mov    %rax,0x308(%rdi)
mov    $0x1,%eax
leaveq 
retq   
xchg   %ax,%ax

000000000004d3c0 <ThunderSetupDecode>:
push   %rbp
mov    %rsp,%rbp
movzwl 0x74(%rdi),%ecx
cmp    $0x4,%cx
jne    4d3d5 <ThunderSetupDecode+0x15>
mov    $0x1,%eax
leaveq 
retq   
mov    0x3b8(%rdi),%rdi
lea    0x278f5(%rip),%rsi        # 74cd8 <module.8>
lea    0x27901(%rip),%rdx        # 74ceb <module.8+0x13>
xor    %eax,%eax
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)

000000000004d400 <ThunderDecode>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %r13,-0x8(%rbp)
mov    %r14,-0x10(%rbp)
mov    %r15,-0x18(%rbp)
mov    0x388(%rdi),%rcx
mov    0x390(%rdi),%r10
xor    %r13d,%r13d
lea    0x2787c(%rip),%r14        # 74ca8 <twobitdeltas>
lea    0x27885(%rip),%r11        # 74cb8 <threebitdeltas>
mov    %r13,%r8
mov    %r8,%r9
jmp    4d471 <ThunderDecode+0x71>
movzbl (%rsi),%eax
or     %eax,%r8d
mov    %r8b,(%rsi)
add    $0x1,%r9
add    $0xffffffff,%ecx
add    $0x1,%rsi
movslq %ecx,%rax
add    %rax,%r9
cmp    %r9,%rdx
jg     4d4b0 <ThunderDecode+0xb0>
cmp    $0xffffffff,%ecx
jne    4d46a <ThunderDecode+0x6a>
add    $0xffffffffffffffff,%rsi
movzbl (%rsi),%eax
and    $0xf0,%al
mov    %al,(%rsi)
and    $0xf,%r8d
mov    %r15,%rcx
test   %r10,%r10
jle    4d4b6 <ThunderDecode+0xb6>
cmp    %rdx,%r9
jge    4d4b6 <ThunderDecode+0xb6>
lea    0x1(%rcx),%r15
add    $0xffffffffffffffff,%r10
movzbl (%rcx),%ecx
mov    %rcx,%rax
and    $0xc0,%eax
cmp    $0x40,%eax
jle    4d4dc <ThunderDecode+0xdc>
cmp    $0x80,%eax
je     4d4ee <ThunderDecode+0xee>
cmp    $0xc0,%eax
je     4d511 <ThunderDecode+0x111>
mov    %r15,%rcx
jmp    4d471 <ThunderDecode+0x71>
mov    %r8b,(%rsi)
add    $0x1,%rsi
add    $0xfffffffe,%ecx
test   %ecx,%ecx
jg     4d4a6 <ThunderDecode+0xa6>
jmp    4d45a <ThunderDecode+0x5a>
mov    %rcx,0x388(%rdi)
mov    %r10,0x390(%rdi)
cmp    %rdx,%r9
jne    4d53b <ThunderDecode+0x13b>
mov    $0x1,%eax
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
leaveq 
retq   
test   %eax,%eax
je     4d557 <ThunderDecode+0x157>
cmp    $0x40,%eax
je     4d575 <ThunderDecode+0x175>
mov    %r15,%rcx
jmp    4d471 <ThunderDecode+0x71>
mov    %rcx,%rax
and    $0x38,%eax
cmp    $0x20,%eax
jne    4d5a7 <ThunderDecode+0x1a7>
and    $0x7,%ecx
cmp    $0x4,%ecx
jne    4d5e7 <ThunderDecode+0x1e7>
mov    %r15,%rcx
jmpq   4d471 <ThunderDecode+0x71>
and    $0xf,%ecx
lea    0x1(%r9),%r8
and    $0x1,%r9
test   %r9,%r9
jg     4d603 <ThunderDecode+0x203>
mov    %rcx,%rax
shl    $0x4,%eax
mov    %al,(%rsi)
mov    %r8,%r9
mov    %rcx,%r8
mov    %r15,%rcx
jmpq   4d471 <ThunderDecode+0x71>
mov    0x3b8(%rdi),%r10
cmp    %rdx,%r9
jl     4d61c <ThunderDecode+0x21c>
lea    0x27829(%rip),%rcx        # 74d7b <module.10+0x40>
jmpq   4d623 <ThunderDecode+0x223>
mov    %r9,%rax
and    $0x1,%rax
test   %rax,%rax
jg     4d43b <ThunderDecode+0x3b>
mov    %r8,%rax
shl    $0x4,%eax
add    %eax,%r8d
jmpq   4d44f <ThunderDecode+0x4f>
mov    %rcx,%rax
and    $0x30,%eax
cmp    $0x20,%eax
jne    4d65a <ThunderDecode+0x25a>
mov    %rcx,%rax
and    $0xc,%eax
cmp    $0x8,%eax
jne    4d69a <ThunderDecode+0x29a>
and    $0x3,%ecx
cmp    $0x2,%ecx
jne    4d6d6 <ThunderDecode+0x2d6>
mov    %r15,%rcx
jmpq   4d471 <ThunderDecode+0x71>
mov    %rcx,%rax
and    $0x38,%eax
shr    $0x3,%eax
movslq %eax,%rax
add    (%r11,%rax,4),%r8d
and    $0xf,%r8d
cmp    %rdx,%r9
jge    4d4fd <ThunderDecode+0xfd>
lea    0x1(%r9),%rax
and    $0x1,%r9
test   %r9,%r9
jg     4d6ee <ThunderDecode+0x2ee>
mov    %r8,%r9
shl    $0x4,%r9d
mov    %r9b,(%rsi)
mov    %rax,%r9
jmpq   4d4fd <ThunderDecode+0xfd>
movslq %ecx,%rax
add    (%r11,%rax,4),%r8d
and    $0xf,%r8d
cmp    %r9,%rdx
jg     4d704 <ThunderDecode+0x304>
mov    %r15,%rcx
jmpq   4d471 <ThunderDecode+0x71>
movzbl (%rsi),%eax
or     %cl,%al
mov    %al,(%rsi)
add    $0x1,%rsi
mov    %r8,%r9
mov    %rcx,%r8
mov    %r15,%rcx
jmpq   4d471 <ThunderDecode+0x71>
lea    0x2774d(%rip),%rcx        # 74d70 <module.10+0x35>
xor    %eax,%eax
lea    0x2770f(%rip),%rsi        # 74d3b <module.10>
lea    0x27716(%rip),%r11        # 74d49 <module.10+0xe>
mov    0x27c(%rdi),%r8d
mov    %rdx,(%rsp)
mov    %r11,%rdx
mov    %r10,%rdi
callq  8a00 <TIFFErrorExt@plt>
mov    %r13,%rax
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
leaveq 
retq   
mov    %rcx,%rax
and    $0x30,%eax
shr    $0x4,%eax
movslq %eax,%rax
add    (%r14,%rax,4),%r8d
and    $0xf,%r8d
cmp    %rdx,%r9
jge    4d584 <ThunderDecode+0x184>
lea    0x1(%r9),%rax
and    $0x1,%r9
test   %r9,%r9
jg     4d724 <ThunderDecode+0x324>
mov    %r8,%r9
shl    $0x4,%r9d
mov    %r9b,(%rsi)
mov    %rax,%r9
jmpq   4d584 <ThunderDecode+0x184>
mov    %rcx,%rax
and    $0xc,%eax
shr    $0x2,%eax
movslq %eax,%rax
add    (%r14,%rax,4),%r8d
and    $0xf,%r8d
cmp    %r9,%rdx
jle    4d593 <ThunderDecode+0x193>
lea    0x1(%r9),%rax
and    $0x1,%r9
test   %r9,%r9
jg     4d73a <ThunderDecode+0x33a>
mov    %r8,%r9
shl    $0x4,%r9d
mov    %r9b,(%rsi)
mov    %rax,%r9
jmpq   4d593 <ThunderDecode+0x193>
movslq %ecx,%rax
add    (%r14,%rax,4),%r8d
and    $0xf,%r8d
cmp    %r9,%rdx
jg     4d750 <ThunderDecode+0x350>
mov    %r15,%rcx
jmpq   4d471 <ThunderDecode+0x71>
movzbl (%rsi),%r9d
or     %r8b,%r9b
mov    %r9b,(%rsi)
add    $0x1,%rsi
mov    %rax,%r9
jmpq   4d4fd <ThunderDecode+0xfd>
lea    0x1(%r9),%rcx
and    $0x1,%r9
test   %r9,%r9
jg     4d770 <ThunderDecode+0x370>
mov    %r8,%rax
shl    $0x4,%eax
mov    %al,(%rsi)
mov    %rcx,%r9
mov    %r15,%rcx
jmpq   4d471 <ThunderDecode+0x71>
movzbl (%rsi),%r9d
or     %r8b,%r9b
mov    %r9b,(%rsi)
add    $0x1,%rsi
mov    %rax,%r9
jmpq   4d584 <ThunderDecode+0x184>
movzbl (%rsi),%r9d
or     %r8b,%r9b
mov    %r9b,(%rsi)
add    $0x1,%rsi
mov    %rax,%r9
jmpq   4d593 <ThunderDecode+0x193>
lea    0x1(%r9),%rcx
and    $0x1,%r9
test   %r9,%r9
jg     4d787 <ThunderDecode+0x387>
mov    %r8,%rax
shl    $0x4,%eax
mov    %al,(%rsi)
mov    %rcx,%r9
mov    %r15,%rcx
jmpq   4d471 <ThunderDecode+0x71>
movzbl (%rsi),%eax
or     %r8b,%al
mov    %al,(%rsi)
add    $0x1,%rsi
mov    %rcx,%r9
mov    %r15,%rcx
jmpq   4d471 <ThunderDecode+0x71>
movzbl (%rsi),%eax
or     %r8b,%al
mov    %al,(%rsi)
add    $0x1,%rsi
mov    %rcx,%r9
mov    %r15,%rcx
jmpq   4d471 <ThunderDecode+0x71>
xchg   %ax,%ax

000000000004d7a0 <ThunderDecodeRow>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %rdx,%rax
mov    %r13,%r8
mov    %r14,%r9
mov    %rdi,%r14
mov    %r15,%r10
mov    %rsi,%r15
xor    %r13d,%r13d
mov    0x358(%r14),%rcx
cqto   
mov    %r12,%r11
mov    %rax,%r12
idiv   %rcx
test   %rdx,%rdx
jne    4d7e6 <ThunderDecodeRow+0x46>
mov    %r11,-0x8(%rbp)
mov    %r8,-0x10(%rbp)
mov    %r9,-0x18(%rbp)
mov    %r10,-0x20(%rbp)
jmp    4d832 <ThunderDecodeRow+0x92>
xor    %eax,%eax
mov    0x3b8(%r14),%rdi
mov    %r11,%r12
mov    %r8,%r13
mov    %r9,%r14
mov    %r10,%r15
lea    0x27582(%rip),%rsi        # 74d84 <module.14>
lea    0x2758c(%rip),%rdx        # 74d95 <module.14+0x11>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
mov    0x58(%r14),%edx
mov    %r14,%rdi
mov    %r15,%rsi
callq  4d400 <ThunderDecode>
test   %eax,%eax
je     4d84e <ThunderDecodeRow+0xae>
mov    0x358(%r14),%rax
sub    %rax,%r12
add    %rax,%r15
test   %r12,%r12
jg     4d812 <ThunderDecodeRow+0x72>
mov    $0x1,%eax
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
leaveq 
retq   
mov    %r13,%rax
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)
nopl   (%rax)

000000000004d870 <TIFFTileRowSize64>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
lea    0x2753a(%rip),%rsi        # 74db9 <module.8>
mov    0x68(%rdi),%eax
test   %eax,%eax
je     4d8ca <TIFFTileRowSize64+0x5a>
mov    0x64(%rdi),%edx
test   %edx,%edx
je     4d8e3 <TIFFTileRowSize64+0x73>
movzwl 0x74(%rdi),%esi
lea    0x2755a(%rip),%rcx        # 74df2 <module.8+0x39>
mov    %rdi,%rax
mov    %r15,-0x8(%rbp)
mov    %rdi,%r15
mov    %rax,%rdi
callq  8300 <_TIFFMultiply64@plt>
movzwl 0xaa(%r15),%ecx
cmp    $0x1,%cx
je     4d8fc <TIFFTileRowSize64+0x8c>
mov    %rax,%rcx
and    $0x7,%rcx
test   %rcx,%rcx
jne    4d91d <TIFFTileRowSize64+0xad>
shr    $0x3,%rax
jmp    4d925 <TIFFTileRowSize64+0xb5>
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
lea    0x274f1(%rip),%rdx        # 74dcb <module.8+0x12>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
lea    0x274ec(%rip),%rdx        # 74ddf <module.8+0x26>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
movzwl 0x82(%r15),%edx
test   %dx,%dx
je     4d930 <TIFFTileRowSize64+0xc0>
mov    %rax,%rsi
mov    %r15,%rdi
lea    0x274dc(%rip),%rcx        # 74df2 <module.8+0x39>
callq  8300 <_TIFFMultiply64@plt>
jmp    4d8b8 <TIFFTileRowSize64+0x48>
shr    $0x3,%rax
add    $0x1,%rax
test   %rax,%rax
je     4d954 <TIFFTileRowSize64+0xe4>
mov    -0x8(%rbp),%r15
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
lea    0x274c2(%rip),%rdx        # 74e02 <module.8+0x49>
lea    0x27472(%rip),%rsi        # 74db9 <module.8>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
lea    0x274b8(%rip),%rdx        # 74e1c <module.8+0x63>
lea    0x2744e(%rip),%rsi        # 74db9 <module.8>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

000000000004d980 <TIFFTileRowSize>:
push   %rbp
mov    %rsp,%rbp
callq  8b10 <TIFFTileRowSize64@plt>
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

000000000004d990 <TIFFTileSize64>:
push   %rbp
mov    %rsp,%rbp
mov    0x68(%rdi),%esi
callq  8770 <TIFFVTileSize64@plt>
leaveq 
retq   
xchg   %ax,%ax

000000000004d9a0 <TIFFTileSize>:
push   %rbp
mov    %rsp,%rbp
callq  8c40 <TIFFTileSize64@plt>
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

000000000004d9b0 <TIFFVTileSize64>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
xor    %eax,%eax
mov    0x68(%rdi),%ecx
test   %ecx,%ecx
jne    4d9c3 <TIFFVTileSize64+0x13>
leaveq 
retq   
mov    0x64(%rdi),%ecx
test   %ecx,%ecx
jne    4d9cc <TIFFVTileSize64+0x1c>
leaveq 
retq   
mov    0x6c(%rdi),%ecx
test   %ecx,%ecx
jne    4d9d5 <TIFFVTileSize64+0x25>
leaveq 
retq   
movzwl 0xaa(%rdi),%eax
cmp    $0x1,%ax
je     4da1a <TIFFVTileSize64+0x6a>
mov    %rdi,%rax
mov    %r14,-0x10(%rbp)
mov    %r15,-0x18(%rbp)
mov    %rsi,%r14
mov    %rdi,%r15
mov    %rax,%rdi
callq  8b10 <TIFFTileRowSize64@plt>
mov    %r14d,%esi
mov    %rax,%rdx
mov    %r15,%rdi
lea    0x27430(%rip),%rcx        # 74e3b <module.16>
callq  8300 <_TIFFMultiply64@plt>
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
leaveq 
retq   
movzwl 0x7a(%rdi),%eax
cmp    $0x6,%ax
jne    4d9e2 <TIFFVTileSize64+0x32>
movzwl 0x82(%rdi),%eax
cmp    $0x3,%ax
jne    4d9e2 <TIFFVTileSize64+0x32>
mov    0x10(%rdi),%eax
and    $0x4000,%eax
test   %eax,%eax
jne    4d9e2 <TIFFVTileSize64+0x32>
xor    %eax,%eax
mov    $0x212,%r8d
lea    -0x1c(%rbp),%rdx
lea    -0x1a(%rbp),%rcx
mov    %rdi,%r9
mov    %r14,-0x10(%rbp)
mov    %r15,-0x18(%rbp)
mov    %rdi,%r14
mov    %r9,%rdi
mov    %rsi,%r15
mov    %r8,%rsi
callq  8390 <TIFFGetFieldDefaulted@plt>
movzwl -0x1c(%rbp),%ecx
cmp    $0x1,%cx
jne    4da92 <TIFFVTileSize64+0xe2>
lea    -0x1a(%rbp),%r8
movzwl (%r8),%esi
cmp    $0x1,%si
jne    4dacf <TIFFVTileSize64+0x11f>
mov    0x64(%r14),%edx
mov    %rcx,%rax
neg    %eax
cmp    %edx,%eax
ja     4dadd <TIFFVTileSize64+0x12d>
xor    %edi,%edi
jmp    4dae8 <TIFFVTileSize64+0x138>
cmp    $0x2,%cx
je     4da73 <TIFFVTileSize64+0xc3>
cmp    $0x4,%cx
je     4da73 <TIFFVTileSize64+0xc3>
xor    %eax,%eax
mov    0x3b8(%r14),%rdi
lea    0x2739d(%rip),%rdx        # 74e4b <module.16+0x10>
movzwl -0x1c(%rbp),%ecx
movzwl -0x1a(%rbp),%r8d
lea    0x2737d(%rip),%rsi        # 74e3b <module.16>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
leaveq 
retq   
cmp    $0x2,%si
je     4da81 <TIFFVTileSize64+0xd1>
cmp    $0x4,%si
jne    4da9e <TIFFVTileSize64+0xee>
jmp    4da81 <TIFFVTileSize64+0xd1>
lea    -0x1(%rcx,%rdx,1),%eax
xor    %edx,%edx
div    %ecx
mov    %rax,%rdi
movzwl (%r8),%r8d
mov    %r8,%rax
neg    %eax
cmp    %r15d,%eax
ja     4dafb <TIFFVTileSize64+0x14b>
xor    %r15d,%r15d
jmp    4db08 <TIFFVTileSize64+0x158>
lea    -0x1(%r8,%r15,1),%eax
xor    %edx,%edx
div    %r8d
mov    %rax,%r15
imul   %si,%cx
lea    0x2(%rcx),%eax
movzwl %ax,%edx
mov    %edi,%esi
mov    %r14,%rdi
lea    0x2731d(%rip),%rcx        # 74e3b <module.16>
callq  8300 <_TIFFMultiply64@plt>
movzwl 0x74(%r14),%edx
mov    %r14,%rdi
mov    %rax,%rsi
lea    0x27306(%rip),%rcx        # 74e3b <module.16>
mov    %r13,-0x8(%rbp)
mov    %rax,%r13
callq  8300 <_TIFFMultiply64@plt>
and    $0x7,%rax
test   %rax,%rax
jne    4db70 <TIFFVTileSize64+0x1c0>
mov    %r13,%rsi
movzwl 0x74(%r14),%edx
mov    %r14,%rdi
lea    0x272df(%rip),%r13        # 74e3b <module.16>
mov    %r13,%rcx
callq  8300 <_TIFFMultiply64@plt>
mov    %rax,%rsi
shr    $0x3,%rsi
mov    %r13,%rcx
jmp    4db95 <TIFFVTileSize64+0x1e5>
mov    %r13,%rsi
movzwl 0x74(%r14),%edx
mov    %r14,%rdi
lea    0x272b9(%rip),%r13        # 74e3b <module.16>
mov    %r13,%rcx
callq  8300 <_TIFFMultiply64@plt>
shr    $0x3,%rax
lea    0x1(%rax),%rsi
mov    %r13,%rcx
mov    %r15d,%edx
mov    %r14,%rdi
callq  8300 <_TIFFMultiply64@plt>
mov    -0x8(%rbp),%r13
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
leaveq 
retq   
xchg   %ax,%ax

000000000004dbb0 <TIFFVTileSize>:
push   %rbp
mov    %rsp,%rbp
callq  8770 <TIFFVTileSize64@plt>
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

000000000004dbc0 <TIFFDefaultTileSize>:
push   %rbp
mov    %rsp,%rbp
callq  *0x348(%rdi)
leaveq 
retq   
nopl   0x0(%rax)

000000000004dbd0 <TIFFComputeTile>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %r8,-0x8(%rbp)
mov    0x64(%rdi),%r8d
mov    0x68(%rdi),%r10d
mov    0x6c(%rdi),%r9d
xor    %r11d,%r11d
mov    0x60(%rdi),%eax
cmp    $0x1,%eax
jne    4dbf6 <TIFFComputeTile+0x26>
mov    %r11,%rcx
cmp    $0xffffffff,%r8d
jne    4dc00 <TIFFComputeTile+0x30>
mov    0x58(%rdi),%r8d
cmp    $0xffffffff,%r10d
jne    4dc0a <TIFFComputeTile+0x3a>
mov    0x5c(%rdi),%r10d
cmp    $0xffffffff,%r9d
jne    4dc14 <TIFFComputeTile+0x44>
mov    0x60(%rdi),%r9d
mov    $0x1,%eax
test   %r8d,%r8d
jne    4dc20 <TIFFComputeTile+0x50>
leaveq 
retq   
test   %r10d,%r10d
jne    4dc27 <TIFFComputeTile+0x57>
leaveq 
retq   
test   %r9d,%r9d
jne    4dc2e <TIFFComputeTile+0x5e>
leaveq 
retq   
mov    0x58(%rdi),%eax
mov    %r8,%r11
neg    %r11d
cmp    %eax,%r11d
ja     4dc47 <TIFFComputeTile+0x77>
mov    %rdi,%rax
mov    %rdx,%rdi
xor    %r11d,%r11d
jmp    4dc60 <TIFFComputeTile+0x90>
lea    -0x1(%r8,%rax,1),%eax
mov    %rdi,%r11
mov    %rdx,%rdi
xor    %edx,%edx
div    %r8d
mov    %r11,%rdx
mov    %rax,%r11
mov    %rdx,%rax
mov    0x5c(%rax),%edx
mov    %r15,-0x18(%rbp)
mov    %r10,%r15
neg    %r15d
cmp    %edx,%r15d
ja     4dc79 <TIFFComputeTile+0xa9>
mov    %rax,%r15
xor    %edx,%edx
jmp    4dc88 <TIFFComputeTile+0xb8>
lea    -0x1(%r10,%rdx,1),%r15d
xchg   %rax,%r15
xor    %edx,%edx
div    %r10d
mov    %rax,%rdx
mov    0x60(%r15),%eax
mov    %r14,-0x10(%rbp)
mov    %r9,%r14
neg    %r14d
cmp    %eax,%r14d
ja     4dca2 <TIFFComputeTile+0xd2>
mov    %rdx,%r14
xor    %eax,%eax
jmp    4dcaf <TIFFComputeTile+0xdf>
lea    -0x1(%r9,%rax,1),%eax
mov    %rdx,%r14
xor    %edx,%edx
div    %r9d
movzwl 0xaa(%r15),%edx
cmp    $0x2,%dx
je     4dcf8 <TIFFComputeTile+0x128>
mov    %rdi,%rax
xor    %r15d,%r15d
mov    %r15,%rdx
div    %r10d
mov    %r11,%rdi
imul   %eax,%edi
mov    %rcx,%rax
mov    %r15,%rdx
div    %r9d
imul   %r14d,%r11d
imul   %r11d,%eax
lea    (%rdi,%rax,1),%ecx
mov    %rsi,%rax
mov    %r15,%rdx
div    %r8d
add    %ecx,%eax
mov    -0x10(%rbp),%r14
mov    -0x18(%rbp),%r15
leaveq 
retq   
xchg   %rax,%rdi
xor    %r15d,%r15d
mov    %r15,%rdx
div    %r10d
imul   %r11d,%eax
mov    %rax,%r10
mov    %rcx,%rax
mov    %r15,%rdx
div    %r9d
imul   %r14d,%r11d
imul   %r11d,%eax
imul   %edi,%r11d
mov    -0x8(%rbp),%rcx
movzwl %cx,%ecx
imul   %r11d,%ecx
add    %ecx,%eax
lea    (%r10,%rax,1),%ecx
mov    %rsi,%rax
mov    %r15,%rdx
div    %r8d
add    %ecx,%eax
mov    -0x10(%rbp),%r14
mov    -0x18(%rbp),%r15
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)

000000000004dd50 <TIFFCheckTile>:
push   %rbp
mov    %rsp,%rbp
mov    0x58(%rdi),%r9d
cmp    %esi,%r9d
jbe    4dd87 <TIFFCheckTile+0x37>
mov    0x5c(%rdi),%r9d
cmp    %edx,%r9d
jbe    4ddb2 <TIFFCheckTile+0x62>
mov    0x60(%rdi),%r9d
cmp    %ecx,%r9d
jbe    4dddd <TIFFCheckTile+0x8d>
mov    $0x1,%eax
movzwl 0xaa(%rdi),%ecx
cmp    $0x2,%cx
je     4de05 <TIFFCheckTile+0xb5>
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rdi),%r10
mov    (%rdi),%rdi
lea    0x270d3(%rip),%rdx        # 74e6d <module.16+0x32>
mov    %esi,%ecx
lea    -0x1(%r9),%esi
mov    %esi,%r8d
mov    %rdi,%rsi
mov    %r10,%rdi
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rdi),%r10
mov    (%rdi),%rsi
lea    0x270c7(%rip),%rdi        # 74e8c <module.16+0x51>
mov    %edx,%ecx
lea    -0x1(%r9),%edx
mov    %edx,%r8d
mov    %rdi,%rdx
mov    %r10,%rdi
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rdi),%r10
mov    (%rdi),%rsi
lea    0x270bb(%rip),%rdx        # 74eab <module.16+0x70>
mov    %ecx,%ecx
lea    -0x1(%r9),%edi
mov    %edi,%r8d
mov    %r10,%rdi
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
movzwl 0x82(%rdi),%r10d
cmp    %r8w,%r10w
jbe    4de15 <TIFFCheckTile+0xc5>
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rdi),%r9
mov    (%rdi),%rsi
lea    0x270a4(%rip),%rdx        # 74ecc <module.16+0x91>
movzwl %r8w,%ecx
lea    -0x1(%r10),%edi
movslq %edi,%r8
mov    %r9,%rdi
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
nop

000000000004de40 <TIFFNumberOfTiles>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    0x68(%rdi),%r9d
mov    0x6c(%rdi),%r8d
mov    0x64(%rdi),%esi
cmp    $0xffffffff,%esi
jne    4de5b <TIFFNumberOfTiles+0x1b>
mov    0x58(%rdi),%esi
cmp    $0xffffffff,%r9d
jne    4de65 <TIFFNumberOfTiles+0x25>
mov    0x5c(%rdi),%r9d
cmp    $0xffffffff,%r8d
jne    4de6f <TIFFNumberOfTiles+0x2f>
mov    0x60(%rdi),%r8d
lea    0x27078(%rip),%rcx        # 74eee <module.16+0xb3>
xor    %eax,%eax
test   %esi,%esi
jne    4de8b <TIFFNumberOfTiles+0x4b>
movzwl 0xaa(%rdi),%edx
cmp    $0x2,%dx
je     4dea8 <TIFFNumberOfTiles+0x68>
leaveq 
retq   
test   %r9d,%r9d
je     4de7c <TIFFNumberOfTiles+0x3c>
test   %r8d,%r8d
je     4de7c <TIFFNumberOfTiles+0x3c>
mov    0x58(%rdi),%r10d
mov    %rsi,%rdx
neg    %edx
cmp    %r10d,%edx
ja     4deb9 <TIFFNumberOfTiles+0x79>
mov    %rax,%rsi
jmp    4ded1 <TIFFNumberOfTiles+0x91>
mov    %rax,%rsi
movzwl 0x82(%rdi),%edx
callq  84f0 <_TIFFMultiply32@plt>
leaveq 
retq   
lea    -0x1(%rsi,%r10,1),%r10d
mov    %r10,%r11
mov    %rax,%r10
mov    %r11,%rax
xor    %edx,%edx
div    %esi
mov    %rax,%rsi
mov    %r10,%rax
mov    0x5c(%rdi),%r10d
mov    %r9,%rdx
neg    %edx
cmp    %r10d,%edx
jbe    4dee9 <TIFFNumberOfTiles+0xa9>
lea    -0x1(%r9,%r10,1),%eax
xor    %edx,%edx
div    %r9d
mov    %rdi,%rdx
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rdi,%r14
mov    %rdx,%rdi
mov    %rax,%rdx
mov    %r8,%r15
callq  84f0 <_TIFFMultiply32@plt>
mov    0x60(%r14),%edx
mov    %r15,%rcx
neg    %ecx
cmp    %edx,%ecx
ja     4df19 <TIFFNumberOfTiles+0xd9>
mov    %rax,%rsi
xor    %edx,%edx
jmp    4df2c <TIFFNumberOfTiles+0xec>
lea    -0x1(%r15,%rdx,1),%ecx
mov    %rax,%rsi
mov    %rcx,%rax
xor    %edx,%edx
div    %r15d
mov    %rax,%rdx
mov    %r14,%rdi
lea    0x26fb8(%rip),%r15        # 74eee <module.16+0xb3>
mov    %r15,%rcx
callq  84f0 <_TIFFMultiply32@plt>
mov    %r15,%rcx
mov    %r14,%rdi
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
jmpq   4de7c <TIFFNumberOfTiles+0x3c>
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   0x0(%rax)

000000000004df60 <_TIFFDefaultTileSize>:
push   %rbp
mov    %rsp,%rbp
movslq (%rsi),%rax
test   %eax,%eax
jg     4df71 <_TIFFDefaultTileSize+0x11>
movl   $0x100,(%rsi)
movslq (%rdx),%rax
test   %eax,%eax
jg     4df7e <_TIFFDefaultTileSize+0x1e>
movl   $0x100,(%rdx)
xor    %eax,%eax
mov    (%rsi),%edi
mov    %rdi,%rcx
and    $0xf,%ecx
test   %ecx,%ecx
je     4dfa1 <_TIFFDefaultTileSize+0x41>
cmp    $0xffffffef,%edi
jbe    4df96 <_TIFFDefaultTileSize+0x36>
mov    %rax,%rcx
jmp    4df9c <_TIFFDefaultTileSize+0x3c>
lea    0xf(%rdi),%ecx
shr    $0x4,%ecx
shl    $0x4,%ecx
mov    %ecx,(%rsi)
mov    (%rdx),%esi
mov    %rsi,%rcx
and    $0xf,%ecx
test   %ecx,%ecx
jne    4dfaf <_TIFFDefaultTileSize+0x4f>
leaveq 
retq   
cmp    $0xffffffef,%esi
ja     4dfba <_TIFFDefaultTileSize+0x5a>
lea    0xf(%rsi),%eax
shr    $0x4,%eax
shl    $0x4,%eax
mov    %eax,(%rdx)
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)
nopl   0x0(%rax,%rax,1)

000000000004dfd0 <TIFFGetVersion>:
push   %rbp
mov    %rsp,%rbp
lea    0x26f25(%rip),%rax        # 74f00 <TIFFVersion>
leaveq 
retq   
nopl   (%rax)

000000000004dfe0 <TIFFWarning>:
push   %rbp
mov    %rsp,%rbp
sub    $0xe0,%rsp
mov    %rdx,-0xb0(%rbp)
mov    %rcx,-0xa8(%rbp)
mov    %r8,-0xa0(%rbp)
mov    %r9,-0x98(%rbp)
movsd  %xmm0,-0x90(%rbp)
movsd  %xmm1,-0x80(%rbp)
movsd  %xmm2,-0x70(%rbp)
movsd  %xmm3,-0x60(%rbp)
movsd  %xmm4,-0x50(%rbp)
movsd  %xmm5,-0x40(%rbp)
movsd  %xmm6,-0x30(%rbp)
movsd  %xmm7,-0x20(%rbp)
mov    0x2bf7f(%rip),%rax        # 79fb8 <_TIFFwarningHandler@@Base-0x8c8>
mov    (%rax),%rcx
test   %rcx,%rcx
je     4e086 <TIFFWarning+0xa6>
lea    -0xd8(%rbp),%rdx
movl   $0x10,(%rdx)
movl   $0x30,0x4(%rdx)
lea    -0xc0(%rbp),%rcx
mov    %rcx,0x10(%rdx)
lea    0x10(%rbp),%rcx
mov    %rcx,0x8(%rdx)
mov    %rdi,%rcx
mov    %rsi,%r8
mov    %rdi,-0x8(%rbp)
mov    %rsi,-0x10(%rbp)
mov    %r8,%rsi
mov    %rcx,%rdi
callq  *(%rax)
mov    -0x10(%rbp),%rsi
mov    -0x8(%rbp),%rdi
mov    0x2be7b(%rip),%rax        # 79f08 <_TIFFwarningHandlerExt@@Base-0xb58>
mov    (%rax),%rcx
test   %rcx,%rcx
jne    4e097 <TIFFWarning+0xb7>
leaveq 
retq   
lea    -0xd8(%rbp),%rcx
movl   $0x10,(%rcx)
movl   $0x30,0x4(%rcx)
lea    -0xc0(%rbp),%rdx
mov    %rdx,0x10(%rcx)
lea    0x10(%rbp),%rdx
mov    %rdx,0x8(%rcx)
mov    %rsi,%rdx
mov    %rdi,%rsi
xor    %edi,%edi
callq  *(%rax)
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

000000000004e0d0 <TIFFWarningExt>:
push   %rbp
mov    %rsp,%rbp
sub    $0xf0,%rsp
mov    %rcx,-0xb8(%rbp)
mov    %r8,-0xb0(%rbp)
mov    %r9,-0xa8(%rbp)
movsd  %xmm0,-0xa0(%rbp)
movsd  %xmm1,-0x90(%rbp)
movsd  %xmm2,-0x80(%rbp)
movsd  %xmm3,-0x70(%rbp)
movsd  %xmm4,-0x60(%rbp)
movsd  %xmm5,-0x50(%rbp)
movsd  %xmm6,-0x40(%rbp)
movsd  %xmm7,-0x30(%rbp)
mov    0x2be93(%rip),%rax        # 79fb8 <_TIFFwarningHandler@@Base-0x8c8>
mov    (%rax),%rcx
test   %rcx,%rcx
je     4e17f <TIFFWarningExt+0xaf>
lea    -0xe8(%rbp),%r9
movl   $0x18,(%r9)
movl   $0x30,0x4(%r9)
lea    -0xd0(%rbp),%rcx
mov    %rcx,0x10(%r9)
lea    0x10(%rbp),%rcx
mov    %rcx,0x8(%r9)
mov    %rsi,%rcx
mov    %rdx,%r8
mov    %rdi,-0x8(%rbp)
mov    %rsi,-0x10(%rbp)
mov    %rdx,-0x18(%rbp)
mov    %r9,%rdx
mov    %r8,%rsi
mov    %rcx,%rdi
callq  *(%rax)
mov    -0x18(%rbp),%rdx
mov    -0x10(%rbp),%rsi
mov    -0x8(%rbp),%rdi
mov    0x2bd82(%rip),%rax        # 79f08 <_TIFFwarningHandlerExt@@Base-0xb58>
mov    (%rax),%rcx
test   %rcx,%rcx
jne    4e190 <TIFFWarningExt+0xc0>
leaveq 
retq   
lea    -0xe8(%rbp),%rcx
movl   $0x18,(%rcx)
movl   $0x30,0x4(%rcx)
lea    -0xd0(%rbp),%r8
mov    %r8,0x10(%rcx)
lea    0x10(%rbp),%r8
mov    %r8,0x8(%rcx)
callq  *(%rax)
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

000000000004e1c0 <TIFFSetWarningHandler>:
push   %rbp
mov    %rsp,%rbp
mov    0x2bded(%rip),%rcx        # 79fb8 <_TIFFwarningHandler@@Base-0x8c8>
mov    (%rcx),%rax
mov    %rdi,(%rcx)
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

000000000004e1e0 <TIFFSetWarningHandlerExt>:
push   %rbp
mov    %rsp,%rbp
mov    0x2bd1d(%rip),%rcx        # 79f08 <_TIFFwarningHandlerExt@@Base-0xb58>
mov    (%rcx),%rax
mov    %rdi,(%rcx)
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)
nopl   (%rax)

000000000004e200 <TIFFWriteBufferSetup>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %r15,-0x18(%rbp)
mov    0x368(%rdi),%rcx
test   %rcx,%rcx
jne    4e223 <TIFFWriteBufferSetup+0x23>
mov    %r15,%rcx
mov    %r14,%r15
mov    %rdi,%r14
jmp    4e27d <TIFFWriteBufferSetup+0x7d>
mov    0x10(%rdi),%eax
and    $0x200,%eax
test   %eax,%eax
jne    4e23a <TIFFWriteBufferSetup+0x3a>
mov    %r15,%rcx
mov    %r14,%r15
mov    %rdi,%r14
jmp    4e272 <TIFFWriteBufferSetup+0x72>
mov    %r13,-0x8(%rbp)
mov    %r14,-0x10(%rbp)
mov    %rsi,%r13
mov    %rdi,%r14
mov    %rcx,%rdi
mov    %rdx,%r15
callq  8bb0 <_TIFFfree@plt>
mov    0x10(%r14),%eax
and    $0xfffffdff,%eax
mov    %eax,0x10(%r14)
mov    %r15,%rdx
mov    %r13,%rsi
mov    -0x18(%rbp),%rcx
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r13
movq   $0x0,0x368(%r14)
xor    %edi,%edi
cmp    $0xffffffffffffffff,%rdx
je     4e2cf <TIFFWriteBufferSetup+0xcf>
test   %rsi,%rsi
je     4e2ef <TIFFWriteBufferSetup+0xef>
mov    0x10(%r14),%eax
and    $0xfffffdff,%eax
mov    %eax,0x10(%r14)
mov    %rsi,0x368(%r14)
mov    %rdx,0x370(%r14)
movq   $0x0,0x390(%r14)
mov    %rsi,0x388(%r14)
mov    0x10(%r14),%eax
or     $0x10,%eax
mov    %eax,0x10(%r14)
mov    %r15,%r14
mov    %rcx,%r15
mov    $0x1,%eax
leaveq 
retq   
mov    0x10(%r14),%eax
and    $0x400,%eax
test   %eax,%eax
jne    4e324 <TIFFWriteBufferSetup+0x124>
mov    %r14,%rdi
callq  8070 <TIFFStripSize@plt>
mov    %rax,%rdx
xor    %esi,%esi
mov    -0x18(%rbp),%rcx
jmp    4e32e <TIFFWriteBufferSetup+0x12e>
mov    %rdx,%rdi
mov    %r15,-0x10(%rbp)
mov    %rdx,%r15
callq  8440 <_TIFFmalloc@plt>
test   %rax,%rax
je     4e345 <TIFFWriteBufferSetup+0x145>
mov    0x10(%r14),%ecx
or     $0x200,%ecx
mov    %ecx,0x10(%r14)
mov    %r15,%rdx
mov    %rax,%rsi
mov    -0x18(%rbp),%rcx
mov    -0x10(%rbp),%r15
jmpq   4e297 <TIFFWriteBufferSetup+0x97>
mov    0x2b0(%r14),%rdx
mov    %rdi,%rsi
cmp    $0x1fff,%rdx
jg     4e285 <TIFFWriteBufferSetup+0x85>
mov    $0x2000,%edx
jmpq   4e285 <TIFFWriteBufferSetup+0x85>
xor    %eax,%eax
mov    0x3b8(%r14),%rdi
lea    0x26c15(%rip),%rsi        # 74f6a <module.8>
lea    0x26c23(%rip),%rdx        # 74f7f <module.8+0x15>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
leaveq 
retq   
nopl   (%rax)

000000000004e370 <TIFFSetupStrips>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x8(%rbp)
mov    0x10(%rdi),%eax
and    $0x400,%eax
test   %eax,%eax
jne    4e3a5 <TIFFSetupStrips+0x35>
mov    0x38(%rdi),%rax
and    $0x20000,%rax
test   %rax,%rax
jne    4e432 <TIFFSetupStrips+0xc2>
mov    %rdi,%r15
callq  8260 <TIFFNumberOfStrips@plt>
jmp    4e3be <TIFFSetupStrips+0x4e>
mov    0x38(%rdi),%rax
and    $0x4,%rax
test   %rax,%rax
jne    4e44d <TIFFSetupStrips+0xdd>
mov    %rdi,%r15
callq  87d0 <TIFFNumberOfTiles@plt>
mov    %eax,0xe4(%r15)
mov    %eax,0xe0(%r15)
movzwl 0xaa(%r15),%ecx
cmp    $0x2,%cx
jne    4e3ed <TIFFSetupStrips+0x7d>
movzwl 0x82(%r15),%ecx
xor    %edx,%edx
div    %ecx
mov    %eax,0xe0(%r15)
mov    0xe4(%r15),%edi
shl    $0x3,%rdi
callq  8440 <_TIFFmalloc@plt>
mov    %rax,0xe8(%r15)
mov    0xe4(%r15),%edi
shl    $0x3,%rdi
callq  8440 <_TIFFmalloc@plt>
mov    %rax,0xf0(%r15)
xor    %esi,%esi
mov    0xe8(%r15),%rdi
test   %rdi,%rdi
jne    4e468 <TIFFSetupStrips+0xf8>
mov    %rsi,%rax
mov    -0x8(%rbp),%r15
leaveq 
retq   
mov    0x5c(%rdi),%eax
test   %eax,%eax
jne    4e39b <TIFFSetupStrips+0x2b>
mov    %rdi,%r15
movzwl 0x82(%r15),%eax
jmpq   4e3be <TIFFSetupStrips+0x4e>
mov    0x5c(%rdi),%eax
test   %eax,%eax
jne    4e3b6 <TIFFSetupStrips+0x46>
mov    %rdi,%r15
movzwl 0x82(%r15),%eax
jmpq   4e3be <TIFFSetupStrips+0x4e>
test   %rax,%rax
jne    4e476 <TIFFSetupStrips+0x106>
mov    %rsi,%rax
mov    -0x8(%rbp),%r15
leaveq 
retq   
mov    0xe4(%r15),%edx
shl    $0x3,%rdx
callq  88e0 <_TIFFmemset@plt>
mov    0xf0(%r15),%rdi
mov    0xe4(%r15),%edx
shl    $0x3,%rdx
xor    %esi,%esi
callq  88e0 <_TIFFmemset@plt>
mov    0x38(%r15),%rax
or     $0x2000000,%rax
mov    %rax,0x38(%r15)
mov    0x38(%r15),%rax
or     $0x1000000,%rax
mov    %rax,0x38(%r15)
mov    $0x1,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)

000000000004e4d0 <TIFFWriteCheck>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
xor    %r8d,%r8d
movslq 0xc(%rdi),%rax
test   %eax,%eax
je     4e545 <TIFFWriteCheck+0x75>
mov    $0x1,%ecx
mov    0x10(%rdi),%eax
and    $0x400,%eax
test   %eax,%eax
jne    4e4f7 <TIFFWriteCheck+0x27>
mov    %r8,%rcx
cmp    %esi,%ecx
jne    4e561 <TIFFWriteCheck+0x91>
mov    %rdi,%rax
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rdx,%r14
mov    %rdi,%r15
mov    %rax,%rdi
callq  8c70 <_TIFFFillStriles@plt>
mov    0x38(%r15),%rax
and    $0x2,%rax
test   %rax,%rax
jne    4e575 <TIFFWriteCheck+0xa5>
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
mov    %r14,%rsi
lea    0x26ad1(%rip),%rdx        # 75005 <module.8+0x9b>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
mov    %rdx,%rsi
lea    0x26a42(%rip),%rdx        # 74f9a <module.8+0x30>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
mov    0x3b8(%rdi),%rdi
test   %esi,%esi
jne    4e5b6 <TIFFWriteCheck+0xe6>
lea    0x26a69(%rip),%rcx        # 74fdc <module.8+0x72>
jmp    4e5bd <TIFFWriteCheck+0xed>
movzwl 0x82(%r15),%eax
cmp    $0x1,%ax
je     4e5ce <TIFFWriteCheck+0xfe>
mov    0x38(%r15),%rax
and    $0x100000,%rax
test   %rax,%rax
jne    4e5e7 <TIFFWriteCheck+0x117>
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
mov    %r14,%rsi
lea    0x26a8a(%rip),%rdx        # 7502f <module.8+0xc5>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
lea    0x269f7(%rip),%rcx        # 74fb4 <module.8+0x4a>
mov    %rdx,%rsi
mov    %rcx,%rdx
xor    %eax,%eax
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
mov    0x38(%r15),%rax
and    $0x100000,%rax
test   %rax,%rax
jne    4e5e7 <TIFFWriteCheck+0x117>
movw   $0x1,0xaa(%r15)
mov    0xe8(%r15),%rax
test   %rax,%rax
je     4e62b <TIFFWriteCheck+0x15b>
mov    0x10(%r15),%eax
and    $0x400,%eax
test   %eax,%eax
jne    4e65f <TIFFWriteCheck+0x18f>
movq   $0xffffffffffffffff,0x2b0(%r15)
mov    %r15,%rdi
callq  8410 <TIFFScanlineSize@plt>
mov    %rax,0x358(%r15)
test   %rax,%rax
jne    4e67f <TIFFWriteCheck+0x1af>
xor    %eax,%eax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
mov    %r15,%rdi
callq  86b0 <TIFFSetupStrips@plt>
test   %eax,%eax
jne    4e5f3 <TIFFWriteCheck+0x123>
mov    0x3b8(%r15),%rdi
movl   $0x0,0xe4(%r15)
mov    0x10(%r15),%eax
and    $0x400,%eax
test   %eax,%eax
jne    4e699 <TIFFWriteCheck+0x1c9>
lea    0x26a21(%rip),%rcx        # 7507e <module.8+0x114>
jmp    4e6a0 <TIFFWriteCheck+0x1d0>
mov    %r15,%rdi
callq  8910 <TIFFTileSize@plt>
mov    %rax,0x2b0(%r15)
test   %rax,%rax
jne    4e60b <TIFFWriteCheck+0x13b>
xor    %eax,%eax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
mov    0x10(%r15),%eax
or     $0x40,%eax
mov    %eax,0x10(%r15)
mov    $0x1,%eax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
lea    0x269d9(%rip),%rcx        # 75079 <module.8+0x10f>
mov    %r14,%rsi
xor    %eax,%eax
lea    0x269b6(%rip),%rdx        # 75062 <module.8+0xf8>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
nopl   (%rax)

000000000004e6c0 <TIFFWriteScanline>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    %rdi,-0x30(%rbp)
mov    %rdx,-0x28(%rbp)
mov    %rcx,-0x20(%rbp)
mov    %rsi,-0x8(%rbp)
xor    %r9d,%r9d
lea    0x269a2(%rip),%r10        # 75084 <module.18>
mov    $0xffffffffffffffff,%r8
mov    0x10(%rdi),%eax
and    $0x40,%eax
test   %eax,%eax
je     4e809 <TIFFWriteScanline+0x149>
mov    %rsi,%r11
mov    %rdx,%rsi
mov    %r8,%rdx
mov    0x10(%rdi),%eax
and    $0x10,%eax
test   %eax,%eax
jne    4e842 <TIFFWriteScanline+0x182>
mov    %r9,%rsi
callq  8970 <TIFFWriteBufferSetup@plt>
test   %eax,%eax
je     4e857 <TIFFWriteScanline+0x197>
xor    %r9d,%r9d
mov    -0x8(%rbp),%r11
mov    -0x20(%rbp),%rcx
mov    -0x28(%rbp),%rsi
mov    -0x30(%rbp),%rdi
lea    0x2694c(%rip),%r10        # 75084 <module.18>
mov    0x10(%rdi),%eax
or     $0x100000,%eax
mov    %eax,0x10(%rdi)
mov    $0x1,%edx
mov    0x5c(%rdi),%eax
cmp    %esi,%eax
jbe    4e860 <TIFFWriteScanline+0x1a0>
movzwl 0xaa(%rdi),%eax
cmp    $0x2,%ax
je     4e87f <TIFFWriteScanline+0x1bf>
mov    0x84(%rdi),%r8d
xor    %edx,%edx
mov    %rsi,%rax
div    %r8d
mov    0xe4(%rdi),%edx
cmp    %eax,%edx
jbe    4e8bb <TIFFWriteScanline+0x1fb>
cmp    0x284(%rdi),%eax
jne    4e8f5 <TIFFWriteScanline+0x235>
mov    0x27c(%rdi),%edx
cmp    %edx,%esi
jne    4e924 <TIFFWriteScanline+0x264>
mov    0x3e8(%rdi),%rax
mov    0x358(%rdi),%rdx
mov    %rdi,%r8
mov    %r11,%r9
mov    %r15,-0x30(%rbp)
mov    %r12,-0x8(%rbp)
mov    %r13,-0x20(%rbp)
mov    %r14,-0x28(%rbp)
mov    %rsi,%r12
mov    %r9,%rsi
mov    %rdi,%r13
mov    %r8,%rdi
mov    %r11,%r14
mov    %rcx,%r15
callq  *%rax
add    $0x1,%r12d
mov    %r15,%rcx
mov    %r14,%rsi
mov    0x300(%r13),%rax
mov    0x358(%r13),%rdx
mov    %r13,%rdi
callq  *%rax
mov    %r12d,0x27c(%r13)
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r13
mov    -0x8(%rbp),%r12
mov    -0x30(%rbp),%r15
leaveq 
retq   
mov    %r10,%rdx
mov    %r9,%rsi
callq  81d0 <TIFFWriteCheck@plt>
test   %eax,%eax
je     4e980 <TIFFWriteScanline+0x2c0>
xor    %r9d,%r9d
mov    -0x8(%rbp),%r11
mov    $0xffffffffffffffff,%rdx
mov    -0x20(%rbp),%rcx
mov    -0x28(%rbp),%rsi
mov    -0x30(%rbp),%rdi
lea    0x26847(%rip),%r10        # 75084 <module.18>
jmpq   4e700 <TIFFWriteScanline+0x40>
mov    0x368(%rdi),%rax
test   %rax,%rax
jne    4e738 <TIFFWriteScanline+0x78>
jmpq   4e70e <TIFFWriteScanline+0x4e>
mov    $0xffffffffffffffff,%rax
leaveq 
retq   
movzwl 0xaa(%rdi),%eax
cmp    $0x2,%ax
je     4e989 <TIFFWriteScanline+0x2c9>
lea    0x1(%rsi),%eax
mov    %eax,0x5c(%rdi)
mov    %rdx,%r9
jmpq   4e753 <TIFFWriteScanline+0x93>
movzwl 0x82(%rdi),%r8d
cmp    %cx,%r8w
jbe    4e9aa <TIFFWriteScanline+0x2ea>
mov    0x84(%rdi),%r10d
xor    %edx,%edx
movzwl %cx,%r8d
imul   0xe0(%rdi),%r8d
mov    %rsi,%rax
div    %r10d
add    %r8d,%eax
lea    0x267ce(%rip),%r10        # 75084 <module.18>
jmpq   4e773 <TIFFWriteScanline+0xb3>
mov    %rax,-0x18(%rbp)
mov    %r9,-0x10(%rbp)
mov    %r10,%rdx
mov    $0x1,%esi
callq  4f980 <TIFFGrowStrips>
test   %eax,%eax
je     4e9ce <TIFFWriteScanline+0x30e>
mov    -0x10(%rbp),%r9
mov    -0x18(%rbp),%rax
mov    -0x8(%rbp),%r11
mov    -0x20(%rbp),%rcx
mov    -0x28(%rbp),%rsi
mov    -0x30(%rbp),%rdi
jmpq   4e781 <TIFFWriteScanline+0xc1>
mov    %rdi,%rcx
mov    %rax,-0x30(%rbp)
mov    %r9,-0x18(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rdi,%r15
mov    %rcx,%rdi
callq  84a0 <TIFFFlushData@plt>
test   %eax,%eax
jne    4e9d7 <TIFFWriteScanline+0x317>
mov    -0x10(%rbp),%r15
mov    $0xffffffffffffffff,%rax
leaveq 
retq   
cmp    %edx,%esi
jae    4e94d <TIFFWriteScanline+0x28d>
mov    0xe0(%rdi),%ecx
xor    %edx,%edx
div    %ecx
imul   0x84(%rdi),%edx
mov    %edx,0x27c(%rdi)
mov    0x368(%rdi),%rax
mov    %rax,0x388(%rdi)
mov    0x27c(%rdi),%eax
sub    %eax,%esi
mov    0x330(%rdi),%rax
mov    %rdi,%rcx
mov    %r15,-0x30(%rbp)
mov    %rdi,%r15
mov    %rcx,%rdi
callq  *%rax
test   %eax,%eax
jne    4ea86 <TIFFWriteScanline+0x3c6>
mov    -0x30(%rbp),%r15
mov    $0xffffffffffffffff,%rax
leaveq 
retq   
mov    $0xffffffffffffffff,%rax
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
mov    %r10,%rsi
lea    0x266fa(%rip),%rdx        # 75096 <module.18+0x12>
callq  8a00 <TIFFErrorExt@plt>
mov    $0xffffffffffffffff,%rax
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
lea    0x26714(%rip),%rdx        # 750ce <module.18+0x4a>
movzwl %cx,%ecx
mov    %r10,%rsi
callq  8a00 <TIFFErrorExt@plt>
mov    $0xffffffffffffffff,%rax
leaveq 
retq   
mov    $0xffffffffffffffff,%rax
leaveq 
retq   
mov    -0x30(%rbp),%rcx
mov    %ecx,0x284(%r15)
cmp    0xe0(%r15),%ecx
jae    4eaa5 <TIFFWriteScanline+0x3e5>
mov    0xe0(%r15),%esi
test   %esi,%esi
je     4eac9 <TIFFWriteScanline+0x409>
xor    %edx,%edx
mov    %rcx,%rax
div    %esi
imul   0x84(%r15),%edx
mov    %edx,0x27c(%r15)
mov    0x10(%r15),%eax
and    $0x20,%eax
test   %eax,%eax
je     4eaf2 <TIFFWriteScanline+0x432>
movq   $0x0,0x390(%r15)
mov    0x368(%r15),%rax
mov    %rax,0x388(%r15)
mov    %ecx,%eax
shl    $0x3,%rax
add    0xf0(%r15),%rax
mov    (%rax),%rcx
test   %rcx,%rcx
je     4ea63 <TIFFWriteScanline+0x3a3>
movq   $0x0,(%rax)
movq   $0x0,0x288(%r15)
mov    %r15,%rdi
mov    -0x20(%rbp),%rsi
callq  *0x2e8(%r15)
test   %eax,%eax
jne    4eb0d <TIFFWriteScanline+0x44d>
mov    -0x10(%rbp),%r15
mov    $0xffffffffffffffff,%rax
leaveq 
retq   
mov    -0x28(%rbp),%rsi
mov    %esi,0x27c(%r15)
mov    %r15,%rdi
mov    -0x30(%rbp),%r15
mov    -0x8(%rbp),%r11
mov    -0x20(%rbp),%rcx
jmpq   4e79b <TIFFWriteScanline+0xdb>
mov    -0x18(%rbp),%rax
test   %eax,%eax
jle    4e9ef <TIFFWriteScanline+0x32f>
mov    0x5c(%r15),%eax
mov    0x84(%r15),%esi
mov    %rsi,%rdx
neg    %edx
cmp    %eax,%edx
ja     4eb36 <TIFFWriteScanline+0x476>
xor    %eax,%eax
jmp    4eb3e <TIFFWriteScanline+0x47e>
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
lea    0x26617(%rip),%rdx        # 750f0 <module.18+0x6c>
lea    0x265a4(%rip),%rsi        # 75084 <module.18>
callq  8a00 <TIFFErrorExt@plt>
mov    -0x10(%rbp),%r15
mov    $0xffffffffffffffff,%rax
leaveq 
retq   
mov    %r15,%rdi
callq  *0x2d8(%r15)
test   %eax,%eax
jne    4eb4a <TIFFWriteScanline+0x48a>
mov    -0x10(%rbp),%r15
mov    $0xffffffffffffffff,%rax
leaveq 
retq   
mov    0x10(%r15),%eax
or     $0x1000,%eax
mov    %eax,0x10(%r15)
mov    %r15,%rdi
mov    -0x10(%rbp),%r15
mov    -0x30(%rbp),%rax
mov    -0x8(%rbp),%r11
mov    -0x20(%rbp),%rcx
mov    -0x28(%rbp),%rsi
jmpq   4e78d <TIFFWriteScanline+0xcd>
lea    -0x1(%rsi,%rax,1),%eax
xor    %edx,%edx
div    %esi
mov    %eax,0xe0(%r15)
jmpq   4e9ef <TIFFWriteScanline+0x32f>
mov    0x10(%r15),%eax
or     $0x20,%eax
mov    %eax,0x10(%r15)
mov    -0x30(%rbp),%rcx
jmpq   4ea23 <TIFFWriteScanline+0x363>
xchg   %ax,%ax

000000000004eb60 <TIFFWriteTile>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    %rsi,-0x8(%rbp)
mov    %rdx,%rsi
mov    %rcx,%rdx
mov    %r8,%rcx
mov    %r9,%r8
mov    %r8,-0x28(%rbp)
mov    %rdi,-0x30(%rbp)
mov    %rsi,-0x10(%rbp)
mov    %rdx,-0x18(%rbp)
mov    %rcx,-0x20(%rbp)
callq  8030 <TIFFCheckTile@plt>
test   %eax,%eax
jne    4eb9e <TIFFWriteTile+0x3e>
mov    $0xffffffffffffffff,%rax
leaveq 
retq   
mov    -0x30(%rbp),%rax
mov    %rax,%rdi
mov    %r15,-0x30(%rbp)
mov    %rax,%r15
mov    -0x20(%rbp),%rcx
mov    -0x18(%rbp),%rdx
mov    -0x10(%rbp),%rsi
mov    -0x28(%rbp),%r8
callq  8110 <TIFFComputeTile@plt>
mov    %rax,%rsi
mov    %r15,%rdi
mov    -0x8(%rbp),%rdx
mov    $0xffffffffffffffff,%rcx
callq  8cf0 <TIFFWriteEncodedTile@plt>
mov    -0x30(%rbp),%r15
leaveq 
retq   
nopl   (%rax)

000000000004ebe0 <TIFFWriteEncodedStrip>:
push   %rbp
mov    %rsp,%rbp
sub    $0x50,%rsp
mov    %rsi,-0x48(%rbp)
mov    %rdx,-0x28(%rbp)
mov    %rcx,-0x30(%rbp)
xor    %r8d,%r8d
lea    0x26508(%rip),%r9        # 75106 <module.22>
mov    $0xffffffffffffffff,%rax
mov    0x10(%rdi),%r10d
and    $0x40,%r10d
test   %r10d,%r10d
jne    4ec50 <TIFFWriteEncodedStrip+0x70>
mov    %rdi,%rax
mov    %rdi,-0x40(%rbp)
mov    %r9,%rdx
mov    %r8,%rsi
mov    %rax,%rdi
callq  81d0 <TIFFWriteCheck@plt>
test   %eax,%eax
je     4ed69 <TIFFWriteEncodedStrip+0x189>
lea    0x264d0(%rip),%r9        # 75106 <module.22>
mov    -0x30(%rbp),%rcx
mov    -0x28(%rbp),%rdx
mov    $0xffffffffffffffff,%rax
mov    -0x48(%rbp),%rsi
mov    -0x40(%rbp),%rdi
xor    %r8d,%r8d
mov    0xe4(%rdi),%r10d
cmp    %esi,%r10d
jbe    4ed72 <TIFFWriteEncodedStrip+0x192>
mov    0x10(%rdi),%r10d
and    $0x10,%r10d
test   %r10d,%r10d
jne    4edb2 <TIFFWriteEncodedStrip+0x1d2>
mov    %rdi,%rcx
mov    %rdi,-0x40(%rbp)
mov    %rax,%rdx
mov    %r8,%rsi
mov    %rcx,%rdi
callq  8970 <TIFFWriteBufferSetup@plt>
test   %eax,%eax
je     4edc7 <TIFFWriteEncodedStrip+0x1e7>
lea    0x26471(%rip),%r9        # 75106 <module.22>
mov    -0x30(%rbp),%rcx
mov    -0x28(%rbp),%rdx
mov    -0x48(%rbp),%rsi
mov    -0x40(%rbp),%rdi
xor    %r8d,%r8d
mov    0x10(%rdi),%eax
or     $0x100000,%eax
mov    %eax,0x10(%rdi)
mov    %esi,0x284(%rdi)
mov    0xe0(%rdi),%r10d
test   %r10d,%r10d
je     4edd0 <TIFFWriteEncodedStrip+0x1f0>
mov    %rdx,%r9
xor    %edx,%edx
mov    %rsi,%rax
div    %r10d
imul   0x84(%rdi),%edx
mov    %edx,0x27c(%rdi)
mov    0x10(%rdi),%eax
and    $0x20,%eax
test   %eax,%eax
je     4edf1 <TIFFWriteEncodedStrip+0x211>
mov    0xf0(%rdi),%rdx
mov    %esi,%eax
mov    (%rdx,%rax,8),%rdx
test   %rdx,%rdx
jne    4ee1a <TIFFWriteEncodedStrip+0x23a>
movq   $0x0,0x390(%rdi)
mov    0x368(%rdi),%rax
mov    %rax,0x388(%rdi)
mov    0x10(%rdi),%eax
and    $0xffffefff,%eax
mov    %eax,0x10(%rdi)
movzwl 0x78(%rdi),%eax
cmp    $0x1,%ax
je     4ee3a <TIFFWriteEncodedStrip+0x25a>
mov    %rsi,%rax
mov    0xe0(%rdi),%ecx
xor    %edx,%edx
div    %ecx
mov    %rax,%rsi
mov    %rsi,-0x20(%rbp)
mov    %rdi,%rax
mov    %rax,-0x38(%rbp)
callq  *0x2e8(%rax)
test   %eax,%eax
jne    4ee84 <TIFFWriteEncodedStrip+0x2a4>
mov    $0xffffffffffffffff,%rax
leaveq 
retq   
mov    $0xffffffffffffffff,%rax
leaveq 
retq   
movzwl 0xaa(%rdi),%eax
cmp    $0x2,%ax
je     4eee9 <TIFFWriteEncodedStrip+0x309>
mov    $0x1,%esi
mov    %rdi,%rax
mov    %r15,-0x20(%rbp)
mov    %r9,%rdx
mov    %rdi,%r15
mov    %rax,%rdi
callq  4f980 <TIFFGrowStrips>
test   %eax,%eax
jne    4ef0a <TIFFWriteEncodedStrip+0x32a>
mov    -0x20(%rbp),%r15
mov    $0xffffffffffffffff,%rax
leaveq 
retq   
mov    0x368(%rdi),%r10
test   %r10,%r10
jne    4eca8 <TIFFWriteEncodedStrip+0xc8>
jmpq   4ec71 <TIFFWriteEncodedStrip+0x91>
mov    $0xffffffffffffffff,%rax
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
mov    %r9,%rsi
lea    0x2630d(%rip),%rdx        # 750f0 <module.18+0x6c>
callq  8a00 <TIFFErrorExt@plt>
mov    $0xffffffffffffffff,%rax
leaveq 
retq   
mov    %rdi,%rax
mov    %r15,-0x18(%rbp)
mov    %rdi,%r15
mov    %rax,%rdi
callq  *0x2d8(%r15)
test   %eax,%eax
jne    4ef2c <TIFFWriteEncodedStrip+0x34c>
mov    -0x18(%rbp),%r15
mov    $0xffffffffffffffff,%rax
leaveq 
retq   
mov    0x370(%rdi),%rax
cmp    %rdx,%rax
jle    4ef52 <TIFFWriteEncodedStrip+0x372>
movq   $0x0,0x288(%rdi)
jmpq   4ed05 <TIFFWriteEncodedStrip+0x125>
mov    %rdi,%rax
mov    %rcx,%rdx
mov    %r15,-0x10(%rbp)
mov    %r14,-0x8(%rbp)
mov    %r9,%rsi
mov    %rcx,%r14
mov    %rdi,%r15
mov    %rax,%rdi
callq  *0x3e8(%r15)
mov    0x10(%r15),%ecx
movzwl 0x7e(%r15),%eax
and    %ecx,%eax
test   %eax,%eax
je     4ef8f <TIFFWriteEncodedStrip+0x3af>
test   %r14,%r14
jg     4efae <TIFFWriteEncodedStrip+0x3ce>
mov    %r14,%rax
mov    -0x8(%rbp),%r14
mov    -0x10(%rbp),%r15
leaveq 
retq   
mov    -0x38(%rbp),%rcx
mov    %rcx,%rdi
mov    -0x28(%rbp),%rsi
mov    %rsi,%r8
mov    -0x30(%rbp),%rax
mov    %rax,%rdx
mov    %r15,-0x30(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x28(%rbp)
mov    %rax,%r13
mov    %rcx,%r14
mov    %rsi,%r15
mov    %r8,%rsi
callq  *0x3e8(%r14)
mov    %r15,%rsi
mov    %r14,%rdi
mov    %r13,%rdx
mov    -0x20(%rbp),%rcx
callq  *0x310(%r14)
test   %eax,%eax
jne    4efd6 <TIFFWriteEncodedStrip+0x3f6>
mov    -0x28(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x30(%rbp),%r15
mov    $0xffffffffffffffff,%rax
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
mov    %r9,%rsi
lea    0x26220(%rip),%rdx        # 7511c <module.22+0x16>
callq  8a00 <TIFFErrorExt@plt>
mov    $0xffffffffffffffff,%rax
leaveq 
retq   
mov    0x84(%r15),%ecx
mov    %rcx,%rdx
neg    %edx
mov    0x5c(%r15),%eax
cmp    %eax,%edx
ja     4eff9 <TIFFWriteEncodedStrip+0x419>
mov    %r15,%rdi
xor    %eax,%eax
jmpq   4f004 <TIFFWriteEncodedStrip+0x424>
mov    0x10(%r15),%eax
or     $0x20,%eax
mov    %eax,0x10(%r15)
mov    %r15,%rdi
mov    -0x18(%rbp),%r15
mov    -0x30(%rbp),%rcx
mov    -0x28(%rbp),%r9
mov    -0x48(%rbp),%rsi
xor    %r8d,%r8d
jmpq   4ecef <TIFFWriteEncodedStrip+0x10f>
add    $0x400,%rdx
and    $0xfffffffffffffc00,%rdx
mov    %rdi,%rax
mov    %rdi,-0x38(%rbp)
mov    %r8,%rsi
mov    %rax,%rdi
callq  8970 <TIFFWriteBufferSetup@plt>
test   %eax,%eax
je     4f030 <TIFFWriteEncodedStrip+0x450>
mov    -0x30(%rbp),%rcx
mov    -0x28(%rbp),%r9
mov    -0x48(%rbp),%rsi
mov    -0x38(%rbp),%rdi
jmpq   4ee2a <TIFFWriteEncodedStrip+0x24a>
and    $0x100,%ecx
test   %ecx,%ecx
jne    4ee6e <TIFFWriteEncodedStrip+0x28e>
mov    -0x28(%rbp),%rdi
mov    %r14,%rsi
callq  8700 <TIFFReverseBits@plt>
jmpq   4ee6e <TIFFWriteEncodedStrip+0x28e>
mov    %r15,%rdi
mov    %r14,%rcx
mov    -0x28(%rbp),%rdx
mov    -0x48(%rbp),%rsi
callq  4fb00 <TIFFAppendToStrip>
test   %eax,%eax
jne    4f039 <TIFFWriteEncodedStrip+0x459>
mov    -0x8(%rbp),%r14
mov    -0x10(%rbp),%r15
mov    $0xffffffffffffffff,%rax
leaveq 
retq   
mov    %r14,%rdi
callq  *0x2f0(%r14)
test   %eax,%eax
jne    4f046 <TIFFWriteEncodedStrip+0x466>
mov    -0x28(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x30(%rbp),%r15
mov    $0xffffffffffffffff,%rax
leaveq 
retq   
lea    -0x1(%rcx,%rax,1),%eax
mov    %r15,%rdi
xor    %edx,%edx
div    %ecx
mov    %eax,0xe0(%rdi)
mov    -0x20(%rbp),%r15
lea    0x260f1(%rip),%r9        # 75106 <module.22>
mov    -0x30(%rbp),%rcx
mov    -0x28(%rbp),%rdx
mov    $0xffffffffffffffff,%rax
mov    -0x48(%rbp),%rsi
xor    %r8d,%r8d
jmpq   4ec60 <TIFFWriteEncodedStrip+0x80>
mov    $0xffffffffffffffff,%rax
leaveq 
retq   
mov    %r14,%rax
mov    -0x8(%rbp),%r14
mov    -0x10(%rbp),%r15
leaveq 
retq   
mov    0x10(%r14),%ecx
movzwl 0x7e(%r14),%eax
and    %ecx,%eax
test   %eax,%eax
je     4f08b <TIFFWriteEncodedStrip+0x4ab>
mov    0x390(%r14),%rcx
test   %rcx,%rcx
jg     4f0aa <TIFFWriteEncodedStrip+0x4ca>
movq   $0x0,0x390(%r14)
mov    0x368(%r14),%rax
mov    %rax,0x388(%r14)
mov    %r13,%rax
mov    -0x28(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x30(%rbp),%r15
leaveq 
retq   
and    $0x100,%ecx
test   %ecx,%ecx
jne    4f055 <TIFFWriteEncodedStrip+0x475>
mov    0x368(%r14),%rdi
mov    0x390(%r14),%rsi
callq  8700 <TIFFReverseBits@plt>
jmp    4f055 <TIFFWriteEncodedStrip+0x475>
mov    0x368(%r14),%rdx
mov    %r14,%rdi
mov    -0x48(%rbp),%rsi
callq  4fb00 <TIFFAppendToStrip>
test   %eax,%eax
jne    4f061 <TIFFWriteEncodedStrip+0x481>
mov    -0x28(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x30(%rbp),%r15
mov    $0xffffffffffffffff,%rax
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)

000000000004f0e0 <TIFFWriteRawStrip>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
xor    %eax,%eax
lea    0x26063(%rip),%r8        # 75154 <module.24>
mov    0x10(%rdi),%r9d
and    $0x40,%r9d
test   %r9d,%r9d
jne    4f13c <TIFFWriteRawStrip+0x5c>
mov    %rdi,%r9
mov    %rdi,-0x18(%rbp)
mov    %rsi,-0x20(%rbp)
mov    %rcx,-0x10(%rbp)
mov    %rdx,-0x8(%rbp)
mov    %r8,%rdx
mov    %rax,%rsi
mov    %r9,%rdi
callq  81d0 <TIFFWriteCheck@plt>
test   %eax,%eax
je     4f196 <TIFFWriteRawStrip+0xb6>
lea    0x2602a(%rip),%r8        # 75154 <module.24>
mov    -0x8(%rbp),%rdx
mov    -0x10(%rbp),%rcx
mov    -0x20(%rbp),%rsi
mov    -0x18(%rbp),%rdi
xor    %eax,%eax
mov    0xe4(%rdi),%r9d
cmp    %esi,%r9d
jbe    4f19f <TIFFWriteRawStrip+0xbf>
mov    %esi,0x284(%rdi)
mov    0xe0(%rdi),%r9d
test   %r9d,%r9d
je     4f22c <TIFFWriteRawStrip+0x14c>
mov    %rdx,%r8
xor    %edx,%edx
mov    %rsi,%rax
div    %r9d
imul   0x84(%rdi),%edx
mov    %edx,0x27c(%rdi)
mov    %rcx,%rax
mov    %rcx,-0x20(%rbp)
mov    %rax,%rcx
mov    %r8,%rdx
callq  4fb00 <TIFFAppendToStrip>
test   %eax,%eax
je     4f24d <TIFFWriteRawStrip+0x16d>
mov    -0x20(%rbp),%rax
leaveq 
retq   
mov    $0xffffffffffffffff,%rax
leaveq 
retq   
movzwl 0xaa(%rdi),%r9d
cmp    $0x2,%r9w
je     4f256 <TIFFWriteRawStrip+0x176>
cmp    0xe0(%rdi),%esi
jb     4f1e6 <TIFFWriteRawStrip+0x106>
mov    0x5c(%rdi),%r11d
mov    0x84(%rdi),%r9d
mov    %r9,%r10
neg    %r10d
cmp    %r11d,%r10d
jbe    4f1e0 <TIFFWriteRawStrip+0x100>
lea    -0x1(%r9,%r11,1),%eax
mov    %rdx,%r10
xor    %edx,%edx
div    %r9d
mov    %r10,%rdx
mov    %eax,0xe0(%rdi)
mov    $0x1,%eax
mov    %rdi,%r9
mov    %rdi,-0x20(%rbp)
mov    %rsi,-0x18(%rbp)
mov    %rcx,-0x10(%rbp)
mov    %rdx,-0x8(%rbp)
mov    %r8,%rdx
mov    %rax,%rsi
mov    %r9,%rdi
callq  4f980 <TIFFGrowStrips>
test   %eax,%eax
je     4f277 <TIFFWriteRawStrip+0x197>
lea    0x25f3d(%rip),%r8        # 75154 <module.24>
mov    -0x8(%rbp),%rdx
mov    -0x10(%rbp),%rcx
mov    -0x18(%rbp),%rsi
mov    -0x20(%rbp),%rdi
jmpq   4f148 <TIFFWriteRawStrip+0x68>
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
mov    %r8,%rsi
lea    0x25eb1(%rip),%rdx        # 750f0 <module.18+0x6c>
callq  8a00 <TIFFErrorExt@plt>
mov    $0xffffffffffffffff,%rax
leaveq 
retq   
mov    $0xffffffffffffffff,%rax
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
mov    %r8,%rsi
lea    0x25eb3(%rip),%rdx        # 7511c <module.22+0x16>
callq  8a00 <TIFFErrorExt@plt>
mov    $0xffffffffffffffff,%rax
leaveq 
retq   
mov    $0xffffffffffffffff,%rax
leaveq 
retq   

000000000004f280 <TIFFWriteEncodedTile>:
push   %rbp
mov    %rsp,%rbp
sub    $0x60,%rsp
lea    0x25ed7(%rip),%r9        # 75166 <module.25>
mov    $0xffffffffffffffff,%rax
mov    0x10(%rdi),%r8d
and    $0x40,%r8d
test   %r8d,%r8d
je     4f36a <TIFFWriteEncodedTile+0xea>
mov    %rdx,%r10
mov    0xe4(%rdi),%r8d
cmp    %esi,%r8d
jbe    4f3bb <TIFFWriteEncodedTile+0x13b>
xor    %r8d,%r8d
mov    0x10(%rdi),%edx
and    $0x10,%edx
test   %edx,%edx
jne    4f3de <TIFFWriteEncodedTile+0x15e>
mov    %rdi,%rdx
mov    %rdi,-0x60(%rbp)
mov    %rsi,-0x58(%rbp)
mov    %rcx,-0x48(%rbp)
mov    %r10,-0x38(%rbp)
mov    %r8,%rsi
mov    %rdx,%rdi
mov    %rax,%rdx
callq  8970 <TIFFWriteBufferSetup@plt>
test   %eax,%eax
je     4f3f3 <TIFFWriteEncodedTile+0x173>
xor    %r8d,%r8d
mov    -0x38(%rbp),%r10
mov    -0x48(%rbp),%rcx
lea    0x25e60(%rip),%r9        # 75166 <module.25>
mov    -0x58(%rbp),%rsi
mov    -0x60(%rbp),%rdi
mov    0x10(%rdi),%eax
or     $0x100000,%eax
mov    %eax,0x10(%rdi)
mov    %esi,0x2ac(%rdi)
mov    0xf0(%rdi),%rdx
mov    %esi,%eax
mov    (%rdx,%rax,8),%rdx
test   %rdx,%rdx
jne    4f3fc <TIFFWriteEncodedTile+0x17c>
movq   $0x0,0x390(%rdi)
mov    0x368(%rdi),%rax
mov    %rax,0x388(%rdi)
mov    0x5c(%rdi),%edx
mov    0x68(%rdi),%r11d
mov    %r11,%rax
neg    %eax
cmp    %edx,%eax
ja     4f41c <TIFFWriteEncodedTile+0x19c>
mov    %r8,%rax
jmpq   4f426 <TIFFWriteEncodedTile+0x1a6>
mov    $0x1,%eax
mov    %rdi,%r8
mov    %rdi,-0x58(%rbp)
mov    %rsi,-0x60(%rbp)
mov    %rcx,-0x50(%rbp)
mov    %rdx,-0x40(%rbp)
mov    %r9,%rdx
mov    %rax,%rsi
mov    %r8,%rdi
callq  81d0 <TIFFWriteCheck@plt>
test   %eax,%eax
je     4f504 <TIFFWriteEncodedTile+0x284>
mov    -0x40(%rbp),%r10
mov    -0x50(%rbp),%rcx
lea    0x25dbf(%rip),%r9        # 75166 <module.25>
mov    $0xffffffffffffffff,%rax
mov    -0x60(%rbp),%rsi
mov    -0x58(%rbp),%rdi
jmpq   4f2aa <TIFFWriteEncodedTile+0x2a>
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
lea    0x25db0(%rip),%rdx        # 7517b <module.25+0x15>
mov    %esi,%ecx
mov    %r9,%rsi
callq  8a00 <TIFFErrorExt@plt>
mov    $0xffffffffffffffff,%rax
leaveq 
retq   
mov    0x368(%rdi),%rdx
test   %rdx,%rdx
jne    4f30e <TIFFWriteEncodedTile+0x8e>
jmpq   4f2cb <TIFFWriteEncodedTile+0x4b>
mov    $0xffffffffffffffff,%rax
leaveq 
retq   
mov    0x370(%rdi),%rax
cmp    %rdx,%rax
jle    4f50d <TIFFWriteEncodedTile+0x28d>
movq   $0x0,0x288(%rdi)
jmpq   4f335 <TIFFWriteEncodedTile+0xb5>
lea    -0x1(%r11,%rdx,1),%eax
xor    %edx,%edx
div    %r11d
lea    0x25d6d(%rip),%rdx        # 7519a <module.25+0x34>
test   %eax,%eax
je     4f560 <TIFFWriteEncodedTile+0x2e0>
mov    %rax,%r11
xor    %edx,%edx
mov    %rsi,%rax
div    %r11d
imul   0x68(%rdi),%edx
mov    %edx,0x27c(%rdi)
mov    0x58(%rdi),%edx
mov    0x64(%rdi),%r11d
mov    %r11,%rax
neg    %eax
cmp    %edx,%eax
jbe    4f467 <TIFFWriteEncodedTile+0x1e7>
lea    -0x1(%r11,%rdx,1),%eax
xor    %edx,%edx
div    %r11d
mov    %rax,%r8
test   %r8d,%r8d
je     4f57a <TIFFWriteEncodedTile+0x2fa>
xor    %edx,%edx
mov    %rsi,%rax
div    %r8d
imul   0x64(%rdi),%edx
mov    %edx,0x2a8(%rdi)
mov    0x10(%rdi),%eax
and    $0x20,%eax
test   %eax,%eax
je     4f59b <TIFFWriteEncodedTile+0x31b>
mov    0x10(%rdi),%eax
and    $0xffffefff,%eax
mov    %eax,0x10(%rdi)
test   %rcx,%rcx
jle    4f4a9 <TIFFWriteEncodedTile+0x229>
cmp    0x2b0(%rdi),%rcx
jle    4f4b0 <TIFFWriteEncodedTile+0x230>
mov    0x2b0(%rdi),%rcx
movzwl 0x78(%rdi),%eax
cmp    $0x1,%ax
je     4f5d0 <TIFFWriteEncodedTile+0x350>
mov    0xe0(%rdi),%r8d
xor    %edx,%edx
mov    %rsi,%rax
div    %r8d
mov    %rax,-0x20(%rbp)
mov    %rdi,%rdx
mov    %rdi,-0x28(%rbp)
mov    %rsi,-0x18(%rbp)
mov    %r10,-0x30(%rbp)
mov    %rcx,-0x60(%rbp)
mov    %rax,%rsi
mov    %rdi,%rax
mov    %rdx,%rdi
callq  *0x2e8(%rax)
test   %eax,%eax
jne    4f625 <TIFFWriteEncodedTile+0x3a5>
mov    $0xffffffffffffffff,%rax
leaveq 
retq   
mov    $0xffffffffffffffff,%rax
leaveq 
retq   
add    $0x400,%rdx
and    $0xfffffffffffffc00,%rdx
mov    %rdi,%rax
mov    %rdi,-0x60(%rbp)
mov    %rsi,-0x50(%rbp)
mov    %rcx,-0x48(%rbp)
mov    %r10,-0x38(%rbp)
mov    %r8,%rsi
mov    %rax,%rdi
callq  8970 <TIFFWriteBufferSetup@plt>
test   %eax,%eax
je     4f687 <TIFFWriteEncodedTile+0x407>
xor    %r8d,%r8d
mov    -0x38(%rbp),%r10
mov    -0x48(%rbp),%rcx
lea    0x25c13(%rip),%r9        # 75166 <module.25>
mov    -0x50(%rbp),%rsi
mov    -0x60(%rbp),%rdi
jmpq   4f40c <TIFFWriteEncodedTile+0x18c>
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
mov    %r9,%rsi
callq  8a00 <TIFFErrorExt@plt>
mov    $0xffffffffffffffff,%rax
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
mov    %r9,%rsi
lea    0x25c0d(%rip),%rdx        # 7519a <module.25+0x34>
callq  8a00 <TIFFErrorExt@plt>
mov    $0xffffffffffffffff,%rax
leaveq 
retq   
mov    %rdi,%rax
mov    %rsi,-0x40(%rbp)
mov    %rcx,-0x60(%rbp)
mov    %r10,-0x30(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rdi,%r15
mov    %rax,%rdi
callq  *0x2d8(%r15)
test   %eax,%eax
jne    4f690 <TIFFWriteEncodedTile+0x410>
mov    -0x28(%rbp),%r15
mov    $0xffffffffffffffff,%rax
leaveq 
retq   
mov    %rdi,%rax
mov    %r10,%r8
mov    %rcx,%rdx
mov    %rsi,-0x20(%rbp)
mov    %r10,-0x60(%rbp)
mov    %r15,-0x18(%rbp)
mov    %r14,-0x10(%rbp)
mov    %r8,%rsi
mov    %rcx,%r14
mov    %rdi,%r15
mov    %rax,%rdi
callq  *0x3e8(%r15)
mov    0x10(%r15),%ecx
movzwl 0x7e(%r15),%eax
and    %ecx,%eax
test   %eax,%eax
je     4f6b3 <TIFFWriteEncodedTile+0x433>
test   %r14,%r14
jg     4f6d2 <TIFFWriteEncodedTile+0x452>
mov    %r14,%rax
mov    -0x10(%rbp),%r14
mov    -0x18(%rbp),%r15
leaveq 
retq   
mov    -0x28(%rbp),%rax
mov    %rax,%rdi
mov    -0x30(%rbp),%r8
mov    %r8,%rsi
mov    -0x60(%rbp),%rcx
mov    %rcx,%rdx
mov    %r15,-0x60(%rbp)
mov    %r13,-0x8(%rbp)
mov    %r14,-0x10(%rbp)
mov    %rcx,%r13
mov    %rax,%r14
mov    %r8,%r15
callq  *0x3e8(%r14)
mov    %r15,%rsi
mov    %r14,%rdi
mov    %r13,%rdx
mov    -0x20(%rbp),%rcx
callq  *0x320(%r14)
test   %eax,%eax
jne    4f6fa <TIFFWriteEncodedTile+0x47a>
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
mov    -0x60(%rbp),%r15
mov    $0xffffffffffffffff,%rax
leaveq 
retq   
mov    $0xffffffffffffffff,%rax
leaveq 
retq   
mov    0x10(%r15),%eax
or     $0x20,%eax
mov    %eax,0x10(%r15)
mov    %r15,%rdi
mov    -0x28(%rbp),%r15
mov    -0x30(%rbp),%r10
mov    -0x60(%rbp),%rcx
mov    -0x40(%rbp),%rsi
jmpq   4f490 <TIFFWriteEncodedTile+0x210>
and    $0x100,%ecx
test   %ecx,%ecx
jne    4f60f <TIFFWriteEncodedTile+0x38f>
mov    -0x60(%rbp),%rdi
mov    %r14,%rsi
callq  8700 <TIFFReverseBits@plt>
jmpq   4f60f <TIFFWriteEncodedTile+0x38f>
mov    %r15,%rdi
mov    %r14,%rcx
mov    -0x60(%rbp),%rdx
mov    -0x20(%rbp),%rsi
callq  4fb00 <TIFFAppendToStrip>
test   %eax,%eax
jne    4f71d <TIFFWriteEncodedTile+0x49d>
mov    -0x10(%rbp),%r14
mov    -0x18(%rbp),%r15
mov    $0xffffffffffffffff,%rax
leaveq 
retq   
mov    %r14,%rdi
callq  *0x2f0(%r14)
test   %eax,%eax
jne    4f72a <TIFFWriteEncodedTile+0x4aa>
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
mov    -0x60(%rbp),%r15
mov    $0xffffffffffffffff,%rax
leaveq 
retq   
mov    %r14,%rax
mov    -0x10(%rbp),%r14
mov    -0x18(%rbp),%r15
leaveq 
retq   
mov    0x10(%r14),%ecx
movzwl 0x7e(%r14),%eax
and    %ecx,%eax
test   %eax,%eax
je     4f76f <TIFFWriteEncodedTile+0x4ef>
mov    0x390(%r14),%rcx
test   %rcx,%rcx
jg     4f78e <TIFFWriteEncodedTile+0x50e>
movq   $0x0,0x390(%r14)
mov    0x368(%r14),%rax
mov    %rax,0x388(%r14)
mov    %r13,%rax
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
mov    -0x60(%rbp),%r15
leaveq 
retq   
and    $0x100,%ecx
test   %ecx,%ecx
jne    4f739 <TIFFWriteEncodedTile+0x4b9>
mov    0x368(%r14),%rdi
mov    0x390(%r14),%rsi
callq  8700 <TIFFReverseBits@plt>
jmp    4f739 <TIFFWriteEncodedTile+0x4b9>
mov    0x368(%r14),%rdx
mov    %r14,%rdi
mov    -0x18(%rbp),%rsi
callq  4fb00 <TIFFAppendToStrip>
test   %eax,%eax
jne    4f745 <TIFFWriteEncodedTile+0x4c5>
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
mov    -0x60(%rbp),%r15
mov    $0xffffffffffffffff,%rax
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

000000000004f7c0 <TIFFWriteRawTile>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
lea    0x259d6(%rip),%r9        # 751a5 <module.28>
mov    0x10(%rdi),%eax
and    $0x40,%eax
test   %eax,%eax
jne    4f81a <TIFFWriteRawTile+0x5a>
mov    $0x1,%eax
mov    %rdi,%r8
mov    %rdi,-0x18(%rbp)
mov    %rsi,-0x20(%rbp)
mov    %rcx,-0x10(%rbp)
mov    %rdx,-0x8(%rbp)
mov    %r9,%rdx
mov    %rax,%rsi
mov    %r8,%rdi
callq  81d0 <TIFFWriteCheck@plt>
test   %eax,%eax
je     4f83f <TIFFWriteRawTile+0x7f>
lea    0x2599b(%rip),%r9        # 751a5 <module.28>
mov    -0x8(%rbp),%rdx
mov    -0x10(%rbp),%rcx
mov    -0x20(%rbp),%rsi
mov    -0x18(%rbp),%rdi
mov    0xe4(%rdi),%r8d
cmp    %esi,%r8d
jbe    4f848 <TIFFWriteRawTile+0x88>
mov    %rcx,%rax
mov    %rcx,-0x20(%rbp)
mov    %rax,%rcx
callq  4fb00 <TIFFAppendToStrip>
test   %eax,%eax
je     4f86b <TIFFWriteRawTile+0xab>
mov    -0x20(%rbp),%rax
leaveq 
retq   
mov    $0xffffffffffffffff,%rax
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
lea    0x25923(%rip),%rdx        # 7517b <module.25+0x15>
mov    %esi,%ecx
mov    %r9,%rsi
callq  8a00 <TIFFErrorExt@plt>
mov    $0xffffffffffffffff,%rax
leaveq 
retq   
mov    $0xffffffffffffffff,%rax
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nop

000000000004f880 <TIFFSetWriteOffset>:
push   %rbp
mov    %rsp,%rbp
mov    %rsi,0x288(%rdi)
leaveq 
retq   
nopl   (%rax)

000000000004f890 <TIFFFlushData1>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    $0x1,%eax
mov    0x390(%rdi),%rsi
test   %rsi,%rsi
jg     4f8ab <TIFFFlushData1+0x1b>
leaveq 
retq   
mov    0x10(%rdi),%ecx
mov    %rcx,%rdx
and    $0x100000,%edx
test   %edx,%edx
jne    4f8bd <TIFFFlushData1+0x2d>
leaveq 
retq   
movzwl 0x7e(%rdi),%eax
and    %ecx,%eax
test   %eax,%eax
je     4f8db <TIFFFlushData1+0x4b>
mov    0x10(%rdi),%eax
and    $0x400,%eax
test   %eax,%eax
jne    4f904 <TIFFFlushData1+0x74>
mov    0x284(%rdi),%esi
jmp    4f90a <TIFFFlushData1+0x7a>
and    $0x100,%ecx
test   %ecx,%ecx
jne    4f8c7 <TIFFFlushData1+0x37>
mov    0x368(%rdi),%rax
mov    %r15,-0x8(%rbp)
mov    %rdi,%r15
mov    %rax,%rdi
callq  8700 <TIFFReverseBits@plt>
mov    %r15,%rdi
mov    -0x8(%rbp),%r15
jmp    4f8c7 <TIFFFlushData1+0x37>
mov    0x2ac(%rdi),%esi
mov    0x368(%rdi),%rdx
mov    0x390(%rdi),%rcx
mov    %rdi,%rax
mov    %r15,-0x8(%rbp)
mov    %rdi,%r15
mov    %rax,%rdi
callq  4fb00 <TIFFAppendToStrip>
test   %eax,%eax
jne    4f94f <TIFFFlushData1+0xbf>
movq   $0x0,0x390(%r15)
mov    0x368(%r15),%rax
mov    %rax,0x388(%r15)
xor    %eax,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
movq   $0x0,0x390(%r15)
mov    0x368(%r15),%rax
mov    %rax,0x388(%r15)
mov    $0x1,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

000000000004f980 <TIFFGrowStrips>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
movzwl 0xaa(%rdi),%eax
cmp    $0x1,%ax
je     4f9b4 <TIFFGrowStrips+0x34>
lea    0x2581a(%rip),%rdi        # 751b6 <module.28+0x11>
lea    0x2583e(%rip),%rsi        # 751e1 <module.28+0x3c>
mov    $0x2ae,%edx
lea    0x2583e(%rip),%rcx        # 751ed <module.28+0x48>
callq  8490 <__assert_fail@plt>
mov    %rsi,%rax
add    0xe4(%rdi),%eax
mov    %eax,%eax
shl    $0x3,%rax
mov    0xe8(%rdi),%rcx
mov    %r13,-0x10(%rbp)
mov    %r14,-0x18(%rbp)
mov    %r15,-0x20(%rbp)
mov    %rdi,%r13
mov    %rcx,%rdi
mov    %rsi,%r14
mov    %rax,%rsi
mov    %r12,%r15
mov    %rdx,%r12
callq  8100 <_TIFFrealloc@plt>
mov    %r14,%rcx
add    0xe4(%r13),%ecx
mov    %ecx,%esi
shl    $0x3,%rsi
mov    0xf0(%r13),%rdi
mov    %r15,-0x8(%rbp)
mov    %rax,%r15
callq  8100 <_TIFFrealloc@plt>
xor    %esi,%esi
test   %r15,%r15
je     4fa94 <TIFFGrowStrips+0x114>
test   %rax,%rax
je     4fa94 <TIFFGrowStrips+0x114>
mov    %r15,0xe8(%r13)
mov    %rax,0xf0(%r13)
mov    0xe4(%r13),%eax
lea    (%r15,%rax,8),%rdi
mov    %r14d,%r12d
shl    $0x3,%r12
mov    %rsi,%r15
mov    %r12,%rdx
callq  88e0 <_TIFFmemset@plt>
mov    0xe4(%r13),%edi
shl    $0x3,%rdi
add    0xf0(%r13),%rdi
mov    %r12,%rdx
mov    %r15,%rsi
callq  88e0 <_TIFFmemset@plt>
add    0xe4(%r13),%r14d
mov    %r14d,0xe4(%r13)
mov    0x10(%r13),%eax
or     $0x8,%eax
mov    %eax,0x10(%r13)
mov    $0x1,%eax
mov    -0x8(%rbp),%r12
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
leaveq 
retq   
test   %r15,%r15
jne    4fa9e <TIFFGrowStrips+0x11e>
mov    %rsi,%r14
jmp    4faaf <TIFFGrowStrips+0x12f>
mov    %r15,%rdi
mov    %rax,%r15
mov    %rsi,%r14
callq  8bb0 <_TIFFfree@plt>
mov    %r15,%rax
test   %rax,%rax
je     4fabc <TIFFGrowStrips+0x13c>
mov    %rax,%rdi
callq  8bb0 <_TIFFfree@plt>
movl   $0x0,0xe4(%r13)
xor    %eax,%eax
mov    0x3b8(%r13),%rdi
mov    %r12,%rsi
lea    0x25722(%rip),%rdx        # 751fc <module.28+0x57>
callq  8a00 <TIFFErrorExt@plt>
mov    %r14,%rax
mov    -0x8(%rbp),%r12
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nop

000000000004fb00 <TIFFAppendToStrip>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
lea    0x2570d(%rip),%r10        # 7521c <module.33>
xor    %eax,%eax
mov    %esi,%r8d
mov    0xe8(%rdi),%rsi
mov    (%rsi,%r8,8),%rsi
test   %rsi,%rsi
je     4fb3f <TIFFAppendToStrip+0x3f>
mov    0x288(%rdi),%rsi
test   %rsi,%rsi
je     4fb3f <TIFFAppendToStrip+0x3f>
mov    %r10,%rsi
mov    $0xffffffffffffffff,%r9
jmpq   4fc25 <TIFFAppendToStrip+0x125>
mov    0xe4(%rdi),%esi
test   %esi,%esi
jne    4fb68 <TIFFAppendToStrip+0x68>
lea    0x256de(%rip),%rdi        # 7522e <module.33+0x12>
lea    0x2568a(%rip),%rsi        # 751e1 <module.28+0x3c>
mov    $0x2d4,%edx
lea    0x256de(%rip),%rcx        # 75241 <module.33+0x25>
callq  8490 <__assert_fail@plt>
mov    0xf0(%rdi),%rsi
mov    (%rsi,%r8,8),%r9
test   %r9,%r9
jne    4fcd8 <TIFFAppendToStrip+0x1d8>
mov    0x3d0(%rdi),%r9
mov    0x3b8(%rdi),%r10
mov    $0x2,%esi
mov    0xe8(%rdi),%r11
mov    %r14,-0x18(%rbp)
mov    %r15,-0x20(%rbp)
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x30(%rbp)
mov    %rdx,%rbx
mov    %rsi,%rdx
mov    %rax,%rsi
mov    %rdi,%r12
mov    %r10,%rdi
mov    %r11,%r13
mov    %r8,%r14
mov    %rcx,%r15
callq  *%r9
mov    %rax,0x0(%r13,%r14,8)
mov    0x10(%r12),%eax
or     $0x200000,%eax
mov    %eax,0x10(%r12)
mov    %r15,%rcx
mov    %rbx,%rdx
mov    %r12,%rdi
mov    %r14,%r8
mov    -0x30(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    0xe8(%rdi),%rax
mov    (%rax,%r8,8),%rax
mov    %rax,0x288(%rdi)
mov    0xf0(%rdi),%rax
mov    (%rax,%r8,8),%r9
movq   $0x0,(%rax,%r8,8)
lea    0x255ff(%rip),%rsi        # 7521c <module.33>
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    0x288(%rdi),%r10
lea    (%rcx,%r10,1),%rax
mov    0x10(%rdi),%r11d
and    $0x80000,%r11d
test   %r11d,%r11d
jne    4fc42 <TIFFAppendToStrip+0x142>
mov    %eax,%eax
cmp    %r10,%rax
jb     4fd2d <TIFFAppendToStrip+0x22d>
cmp    %rax,%rcx
ja     4fd2d <TIFFAppendToStrip+0x22d>
mov    0x3c8(%rdi),%r10
mov    0x3b8(%rdi),%rsi
mov    %rcx,%r11
mov    %r14,-0x28(%rbp)
mov    %r15,-0x30(%rbp)
mov    %rbx,-0x10(%rbp)
mov    %r12,-0x18(%rbp)
mov    %r13,-0x20(%rbp)
mov    %rcx,%rbx
mov    %r9,%r12
mov    %rax,%r13
mov    %r8,%r14
mov    %rdi,%r15
mov    %rsi,%rdi
mov    %rdx,%rsi
mov    %r11,%rdx
callq  *%r10
cmp    %rax,%rbx
je     4fd46 <TIFFAppendToStrip+0x246>
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
lea    0x255e1(%rip),%rdx        # 7528e <module.33+0x72>
mov    0x27c(%r15),%ecx
lea    0x25561(%rip),%rsi        # 7521c <module.33>
callq  8a00 <TIFFErrorExt@plt>
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
mov    -0x10(%rbp),%rbx
xor    %eax,%eax
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
leaveq 
retq   
mov    0xe8(%rdi),%rsi
mov    (%rsi,%r8,8),%rsi
test   %rsi,%rsi
je     4fb7c <TIFFAppendToStrip+0x7c>
cmp    %rcx,%r9
jb     4fb7c <TIFFAppendToStrip+0x7c>
mov    %rdi,%rax
mov    %r14,-0x18(%rbp)
mov    %r15,-0x20(%rbp)
mov    %rcx,-0x30(%rbp)
mov    %rdx,-0x28(%rbp)
mov    %r8,%r14
mov    %rdi,%r15
mov    %rax,%rdi
callq  82f0 <_TIFFSeekOK@plt>
test   %eax,%eax
je     4fd84 <TIFFAppendToStrip+0x284>
mov    %r15,%rdi
mov    %r14,%r8
mov    -0x28(%rbp),%rdx
mov    -0x30(%rbp),%rcx
jmpq   4fbf1 <TIFFAppendToStrip+0xf1>
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
lea    0x25531(%rip),%rdx        # 7526e <module.33+0x52>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
mov    %r13,0x288(%r15)
mov    0xf0(%r15),%rax
add    (%rax,%r14,8),%rbx
mov    %rbx,(%rax,%r14,8)
mov    $0x1,%eax
mov    0xf0(%r15),%rcx
cmp    (%rcx,%r14,8),%r12
jne    4fdb3 <TIFFAppendToStrip+0x2b3>
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
mov    -0x10(%rbp),%rbx
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
lea    0x254bf(%rip),%rdx        # 75253 <module.33+0x37>
mov    0x27c(%r15),%ecx
lea    0x2547a(%rip),%rsi        # 7521c <module.33>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
leaveq 
retq   
mov    0x10(%r15),%ecx
or     $0x200000,%ecx
mov    %ecx,0x10(%r15)
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
mov    -0x10(%rbp),%rbx
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

000000000004fde0 <TIFFInitZIP>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
cmp    $0x80b2,%esi
je     4fe14 <TIFFInitZIP+0x34>
cmp    $0x8,%esi
je     4fe14 <TIFFInitZIP+0x34>
lea    0x254ba(%rip),%rdi        # 752b6 <module.8+0xc>
lea    0x254fc(%rip),%rsi        # 752ff <module.8+0x55>
mov    $0x195,%edx
lea    0x254fa(%rip),%rcx        # 75309 <module.8+0x5f>
callq  8490 <__assert_fail@plt>
lea    0x29e9d(%rip),%rsi        # 79cb8 <zipFields>
mov    $0x1,%edx
mov    %rdi,%rax
mov    %r15,-0x8(%rbp)
mov    %rdi,%r15
mov    %rax,%rdi
callq  8520 <_TIFFMergeFields@plt>
test   %eax,%eax
jne    4fe5a <TIFFInitZIP+0x7a>
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
lea    0x254cf(%rip),%rdx        # 75315 <module.8+0x6b>
lea    0x2545d(%rip),%rsi        # 752aa <module.8>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
mov    $0x108,%edi
callq  8440 <_TIFFmalloc@plt>
mov    %rax,0x350(%r15)
test   %rax,%rax
je     4ff98 <TIFFInitZIP+0x1b8>
movq   $0x0,0xc0(%rax)
movq   $0x0,0xc8(%rax)
movq   $0x0,0xd0(%rax)
movl   $0x0,0xd8(%rax)
mov    0x410(%r15),%rcx
mov    %rcx,0xf8(%rax)
lea    0xb5c(%rip),%rcx        # 50a10 <ZIPVGetField>
mov    %rcx,0x410(%r15)
mov    0x408(%r15),%rcx
mov    %rcx,0x100(%rax)
lea    0xa70(%rip),%rcx        # 50940 <ZIPVSetField>
mov    %rcx,0x408(%r15)
movl   $0xffffffff,0xf0(%rax)
movl   $0x0,0xf4(%rax)
lea    0x46e(%rip),%rax        # 50360 <ZIPFixupTags>
mov    %rax,0x2c0(%r15)
lea    0x470(%rip),%rax        # 50370 <ZIPSetupDecode>
mov    %rax,0x2c8(%r15)
lea    0x582(%rip),%rax        # 50490 <ZIPPreDecode>
mov    %rax,0x2d0(%r15)
lea    0x214(%rip),%rax        # 50130 <ZIPDecode>
mov    %rax,0x2f8(%r15)
mov    %rax,0x308(%r15)
mov    %rax,0x318(%r15)
lea    0x628(%rip),%rax        # 50560 <ZIPSetupEncode>
mov    %rax,0x2d8(%r15)
lea    0x73a(%rip),%rax        # 50680 <ZIPPreEncode>
mov    %rax,0x2e8(%r15)
lea    0x7fc(%rip),%rax        # 50750 <ZIPPostEncode>
mov    %rax,0x2f0(%r15)
lea    0x5e(%rip),%rax        # 4ffc0 <ZIPEncode>
mov    %rax,0x300(%r15)
mov    %rax,0x310(%r15)
mov    %rax,0x320(%r15)
lea    0x8e2(%rip),%rax        # 50860 <ZIPCleanup>
mov    %rax,0x338(%r15)
mov    %r15,%rdi
callq  8ac0 <TIFFPredictorInit@plt>
mov    $0x1,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
lea    0x25398(%rip),%rdx        # 75340 <module.8+0x96>
lea    0x252fb(%rip),%rsi        # 752aa <module.8>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
nopl   0x0(%rax)

000000000004ffc0 <ZIPEncode>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
lea    0x25330(%rip),%r9        # 752ff <module.8+0x55>
lea    0x2539c(%rip),%rcx        # 75372 <module.16+0x15>
mov    0x350(%rdi),%r8
test   %r8,%r8
jne    4fff6 <ZIPEncode+0x36>
mov    %r9,%rsi
lea    0x2537b(%rip),%rdi        # 75367 <module.16+0xa>
mov    $0x109,%edx
callq  8490 <__assert_fail@plt>
movslq 0xf4(%r8),%rax
cmp    $0x2,%eax
je     50016 <ZIPEncode+0x56>
mov    %r9,%rsi
lea    0x25370(%rip),%rdi        # 7537c <module.16+0x1f>
mov    $0x10a,%edx
callq  8490 <__assert_fail@plt>
mov    %rsi,0x80(%r8)
mov    %edx,0x88(%r8)
lea    0x25332(%rip),%rsi        # 7535d <module.16>
xor    %ecx,%ecx
mov    %edx,%eax
cmp    %rdx,%rax
jne    50060 <ZIPEncode+0xa0>
lea    0x80(%r8),%rax
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rsi,%rbx
mov    %rcx,%r12
mov    %rdi,%r13
mov    %r8,%r14
mov    %rax,%r15
jmp    500c1 <ZIPEncode+0x101>
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
lea    0x2532c(%rip),%rdx        # 7539c <module.16+0x3f>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
mov    0xa0(%r14),%eax
test   %eax,%eax
jne    500b6 <ZIPEncode+0xf6>
mov    0x370(%r13),%rax
mov    %rax,0x390(%r13)
mov    %r13,%rdi
callq  86e0 <TIFFFlushData1@plt>
mov    0x368(%r13),%rax
mov    %rax,0x98(%r14)
mov    0x370(%r13),%eax
mov    %eax,0xa0(%r14)
mov    0x88(%r14),%eax
test   %eax,%eax
je     50114 <ZIPEncode+0x154>
mov    %r15,%rdi
mov    %r12,%rsi
callq  84e0 <deflate@plt>
test   %eax,%eax
je     50079 <ZIPEncode+0xb9>
mov    0x3b8(%r13),%rdi
mov    0xb0(%r14),%rcx
test   %rcx,%rcx
jne    500ea <ZIPEncode+0x12a>
lea    0x252ec(%rip),%rcx        # 753d6 <module.16+0x79>
mov    %rbx,%rsi
xor    %eax,%eax
lea    0x252ce(%rip),%rdx        # 753c4 <module.16+0x67>
callq  8a00 <TIFFErrorExt@plt>
mov    %r12,%rax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
mov    $0x1,%eax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
nop

0000000000050130 <ZIPDecode>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
lea    0x251c0(%rip),%r9        # 752ff <module.8+0x55>
lea    0x2529b(%rip),%rcx        # 753e1 <module.23+0xa>
mov    0x350(%rdi),%r8
test   %r8,%r8
jne    50166 <ZIPDecode+0x36>
mov    %r9,%rsi
lea    0x2520b(%rip),%rdi        # 75367 <module.16+0xa>
mov    $0x9f,%edx
callq  8490 <__assert_fail@plt>
movslq 0xf4(%r8),%rax
cmp    $0x1,%eax
je     50186 <ZIPDecode+0x56>
mov    %r9,%rsi
lea    0x2526f(%rip),%rdi        # 753eb <module.23+0x14>
mov    $0xa0,%edx
callq  8490 <__assert_fail@plt>
mov    0x388(%rdi),%rax
mov    %rax,0x80(%r8)
mov    0x390(%rdi),%eax
mov    %eax,0x88(%r8)
mov    %rsi,0x98(%r8)
mov    %edx,0xa0(%r8)
lea    0x25221(%rip),%rcx        # 753d7 <module.23>
mov    %edx,%eax
cmp    %rdx,%rax
jne    501f5 <ZIPDecode+0xc5>
lea    0x80(%r8),%rax
mov    $0x1,%esi
lea    0x25206(%rip),%rdx        # 753d6 <module.16+0x79>
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rcx,%rbx
mov    %rdi,%r12
mov    %r8,%r13
mov    %rax,%r14
mov    %rdx,%r15
jmp    50228 <ZIPDecode+0xf8>
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
mov    %rcx,%rsi
lea    0x25194(%rip),%rdx        # 7539c <module.16+0x3f>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
lea    0x251bf(%rip),%rbx        # 753d7 <module.23>
mov    0xa0(%r13),%eax
test   %eax,%eax
je     50285 <ZIPDecode+0x155>
mov    $0x1,%esi
mov    %r14,%rdi
callq  8170 <inflate@plt>
cmp    $0x1,%eax
je     50285 <ZIPDecode+0x155>
cmp    $0xfffffffd,%eax
je     502ca <ZIPDecode+0x19a>
test   %eax,%eax
je     50218 <ZIPDecode+0xe8>
mov    0x3b8(%r12),%rdi
mov    0xb0(%r13),%rax
test   %rax,%rax
je     50259 <ZIPDecode+0x129>
mov    %rax,%r15
mov    %r15,%rcx
mov    %rbx,%rsi
xor    %eax,%eax
lea    0x251c6(%rip),%rdx        # 7542e <module.23+0x57>
callq  8a00 <TIFFErrorExt@plt>
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
xor    %eax,%eax
leaveq 
retq   
mov    0xa0(%r13),%r8d
test   %r8d,%r8d
jne    50322 <ZIPDecode+0x1f2>
mov    (%r14),%rax
mov    %rax,0x388(%r12)
mov    0x88(%r13),%eax
mov    %rax,0x390(%r12)
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    $0x1,%eax
leaveq 
retq   
mov    0x3b8(%r12),%rdi
mov    0x27c(%r12),%ecx
mov    0xb0(%r13),%r8
test   %r8,%r8
jne    502e9 <ZIPDecode+0x1b9>
mov    %r15,%r8
mov    %rbx,%rsi
xor    %eax,%eax
lea    0x25116(%rip),%rdx        # 7540b <module.23+0x34>
callq  8a00 <TIFFErrorExt@plt>
mov    %r14,%rdi
callq  8cd0 <inflateSync@plt>
test   %eax,%eax
je     50211 <ZIPDecode+0xe1>
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
xor    %eax,%eax
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%r12),%rdi
lea    0x2510a(%rip),%rdx        # 7543d <module.23+0x66>
mov    0x27c(%r12),%ecx
mov    %rbx,%rsi
callq  8a00 <TIFFErrorExt@plt>
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
xor    %eax,%eax
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

0000000000050360 <ZIPFixupTags>:
push   %rbp
mov    %rsp,%rbp
mov    $0x1,%eax
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

0000000000050370 <ZIPSetupDecode>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    0x350(%rdi),%rcx
test   %rcx,%rcx
jne    503a3 <ZIPSetupDecode+0x33>
lea    0x24fdc(%rip),%rdi        # 75367 <module.16+0xa>
lea    0x24f6d(%rip),%rsi        # 752ff <module.8+0x55>
mov    $0x66,%edx
lea    0x250e0(%rip),%rcx        # 7547e <module.29+0xf>
callq  8490 <__assert_fail@plt>
movslq 0xf4(%rcx),%rax
and    $0x2,%eax
test   %eax,%eax
jg     503bc <ZIPSetupDecode+0x4c>
mov    %r15,%rax
mov    %rcx,%r15
mov    %rax,%rcx
jmp    503e9 <ZIPSetupDecode+0x79>
lea    0x80(%rcx),%rax
mov    %r15,-0x10(%rbp)
mov    %rdi,-0x8(%rbp)
mov    %rax,%rdi
mov    %rcx,%r15
callq  8960 <deflateEnd@plt>
movl   $0x0,0xf4(%r15)
mov    -0x8(%rbp),%rdi
mov    -0x10(%rbp),%rcx
movslq 0xf4(%r15),%rax
and    $0x1,%eax
test   %eax,%eax
je     50412 <ZIPSetupDecode+0xa2>
movslq 0xf4(%r15),%rax
or     $0x1,%eax
mov    %eax,0xf4(%r15)
mov    %rcx,%r15
mov    $0x1,%eax
leaveq 
retq   
lea    0x80(%r15),%rax
lea    0x2506d(%rip),%rsi        # 7548d <module.29+0x1e>
mov    $0x70,%edx
mov    %rcx,-0x10(%rbp)
mov    %r14,-0x8(%rbp)
mov    %rdi,%r14
mov    %rax,%rdi
callq  8a20 <inflateInit_@plt>
test   %eax,%eax
jne    50446 <ZIPSetupDecode+0xd6>
mov    -0x8(%rbp),%r14
mov    -0x10(%rbp),%rcx
jmp    503f7 <ZIPSetupDecode+0x87>
mov    0x3b8(%r14),%rdi
mov    0xb0(%r15),%rcx
test   %rcx,%rcx
jne    50460 <ZIPSetupDecode+0xf0>
lea    0x24f76(%rip),%rcx        # 753d6 <module.16+0x79>
lea    0x25008(%rip),%rsi        # 7546f <module.29>
lea    0x25026(%rip),%rdx        # 75494 <module.29+0x25>
xor    %r14d,%r14d
mov    %r14,%rax
callq  8a00 <TIFFErrorExt@plt>
mov    %r14,%rax
mov    -0x8(%rbp),%r14
mov    -0x10(%rbp),%r15
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)

0000000000050490 <ZIPPreDecode>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    0x350(%rdi),%rax
test   %rax,%rax
jne    504c3 <ZIPPreDecode+0x33>
lea    0x24ebc(%rip),%rdi        # 75367 <module.16+0xa>
lea    0x24e4d(%rip),%rsi        # 752ff <module.8+0x55>
mov    $0x85,%edx
lea    0x24fe6(%rip),%rcx        # 754a4 <module.33+0xd>
callq  8490 <__assert_fail@plt>
movslq 0xf4(%rax),%rcx
and    $0x1,%ecx
test   %ecx,%ecx
jne    504fa <ZIPPreDecode+0x6a>
mov    %rdi,%rcx
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rdi,%r14
mov    %rcx,%rdi
mov    %rax,%r15
callq  *0x2c8(%r14)
mov    %r15,%rax
mov    %r14,%rdi
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
mov    0x368(%rdi),%rcx
mov    %rcx,0x80(%rax)
mov    0x390(%rdi),%edx
mov    %edx,0x88(%rax)
mov    0x390(%rdi),%rcx
cmp    %rdx,%rcx
jne    50537 <ZIPPreDecode+0xa7>
lea    0x80(%rax),%rdi
callq  8bd0 <inflateReset@plt>
test   %eax,%eax
jne    50557 <ZIPPreDecode+0xc7>
mov    $0x1,%eax
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
lea    0x24f50(%rip),%rsi        # 75497 <module.33>
lea    0x24e4e(%rip),%rdx        # 7539c <module.16+0x3f>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
xor    %eax,%eax
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

0000000000050560 <ZIPSetupEncode>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    0x350(%rdi),%rdx
test   %rdx,%rdx
jne    50593 <ZIPSetupEncode+0x33>
lea    0x24dec(%rip),%rdi        # 75367 <module.16+0xa>
lea    0x24d7d(%rip),%rsi        # 752ff <module.8+0x55>
mov    $0xd5,%edx
lea    0x24f32(%rip),%rcx        # 754c0 <module.35+0xf>
callq  8490 <__assert_fail@plt>
lea    0x80(%rdx),%rcx
movslq 0xf4(%rdx),%rax
and    $0x1,%eax
test   %eax,%eax
jg     505b9 <ZIPSetupEncode+0x59>
mov    %r15,%rax
mov    %rdi,%r15
mov    %rcx,%rdi
mov    %r14,%r8
mov    %rdx,%r14
jmp    505f3 <ZIPSetupEncode+0x93>
mov    %rcx,%rax
mov    %r13,-0x8(%rbp)
mov    %r14,-0x10(%rbp)
mov    %r15,-0x18(%rbp)
mov    %rcx,%r13
mov    %rdx,%r14
mov    %rdi,%r15
mov    %rax,%rdi
callq  8780 <inflateEnd@plt>
movl   $0x0,0xf4(%r14)
mov    %r13,%rdi
mov    -0x18(%rbp),%rax
mov    -0x10(%rbp),%r8
mov    -0x8(%rbp),%r13
movslq 0xf0(%r14),%rsi
lea    0x24e8c(%rip),%rdx        # 7548d <module.29+0x1e>
mov    $0x70,%ecx
mov    %r8,-0x10(%rbp)
mov    %rax,-0x18(%rbp)
callq  8690 <deflateInit_@plt>
test   %eax,%eax
jne    50637 <ZIPSetupEncode+0xd7>
movslq 0xf4(%r14),%rax
or     $0x2,%eax
mov    %eax,0xf4(%r14)
mov    $0x1,%eax
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
leaveq 
retq   
mov    0x3b8(%r15),%rdi
mov    0xb0(%r14),%rcx
test   %rcx,%rcx
jne    50651 <ZIPSetupEncode+0xf1>
lea    0x24d85(%rip),%rcx        # 753d6 <module.16+0x79>
lea    0x24e59(%rip),%rsi        # 754b1 <module.35>
lea    0x24e35(%rip),%rdx        # 75494 <module.29+0x25>
xor    %r14d,%r14d
mov    %r14,%rax
callq  8a00 <TIFFErrorExt@plt>
mov    %r14,%rax
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

0000000000050680 <ZIPPreEncode>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    0x350(%rdi),%rax
test   %rax,%rax
jne    506b3 <ZIPPreEncode+0x33>
lea    0x24ccc(%rip),%rdi        # 75367 <module.16+0xa>
lea    0x24c5d(%rip),%rsi        # 752ff <module.8+0x55>
mov    $0xee,%edx
lea    0x24e2e(%rip),%rcx        # 754dc <module.37+0xd>
callq  8490 <__assert_fail@plt>
movslq 0xf4(%rax),%rcx
cmp    $0x2,%ecx
je     506e8 <ZIPPreEncode+0x68>
mov    %rdi,%rcx
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rdi,%r14
mov    %rcx,%rdi
mov    %rax,%r15
callq  *0x2d8(%r14)
mov    %r15,%rax
mov    %r14,%rdi
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
mov    0x368(%rdi),%rcx
mov    %rcx,0x98(%rax)
mov    0x370(%rdi),%edx
mov    %edx,0xa0(%rax)
mov    0x370(%rdi),%rcx
cmp    %rdx,%rcx
jne    50725 <ZIPPreEncode+0xa5>
lea    0x80(%rax),%rdi
callq  8460 <deflateReset@plt>
test   %eax,%eax
jne    50745 <ZIPPreEncode+0xc5>
mov    $0x1,%eax
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
lea    0x24d9a(%rip),%rsi        # 754cf <module.37>
lea    0x24c60(%rip),%rdx        # 7539c <module.16+0x3f>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
xor    %eax,%eax
leaveq 
retq   
nopl   0x0(%rax)

0000000000050750 <ZIPPostEncode>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    0x350(%rdi),%r12
movl   $0x0,0x88(%r12)
lea    0x80(%r12),%r13
mov    %rdi,%rbx
mov    $0x4,%r14d
mov    %r13,%rdi
mov    %r14,%rsi
callq  84e0 <deflate@plt>
test   %eax,%eax
je     507a4 <ZIPPostEncode+0x54>
cmp    $0x1,%eax
jne    5080d <ZIPPostEncode+0xbd>
mov    0x370(%rbx),%rcx
mov    0xa0(%r12),%edx
cmp    %rdx,%rcx
je     507ed <ZIPPostEncode+0x9d>
sub    %rdx,%rcx
mov    %rcx,0x390(%rbx)
mov    %rax,%r15
mov    %rbx,%rdi
callq  86e0 <TIFFFlushData1@plt>
mov    0x368(%rbx),%rax
mov    %rax,0x98(%r12)
mov    0x370(%rbx),%eax
mov    %eax,0xa0(%r12)
mov    %r15,%rax
cmp    $0x1,%eax
jne    50790 <ZIPPostEncode+0x40>
mov    $0x1,%eax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
mov    0x3b8(%rbx),%rdi
mov    0xb0(%r12),%rcx
test   %rcx,%rcx
jne    50828 <ZIPPostEncode+0xd8>
lea    0x24bae(%rip),%rcx        # 753d6 <module.16+0x79>
lea    0x24cba(%rip),%rsi        # 754e9 <module.39>
lea    0x24bf8(%rip),%rdx        # 7542e <module.23+0x57>
xor    %ebx,%ebx
mov    %rbx,%rax
callq  8a00 <TIFFErrorExt@plt>
mov    %rbx,%rax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
nopl   0x0(%rax)

0000000000050860 <ZIPCleanup>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    0x350(%rdi),%rax
test   %rax,%rax
jne    50893 <ZIPCleanup+0x33>
lea    0x24c7c(%rip),%rdi        # 754f7 <module.39+0xe>
lea    0x24a7d(%rip),%rsi        # 752ff <module.8+0x55>
mov    $0x150,%edx
lea    0x24c71(%rip),%rcx        # 754ff <module.39+0x16>
callq  8490 <__assert_fail@plt>
mov    %rdi,%rcx
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rdi,%r14
mov    %rcx,%rdi
mov    %rax,%r15
callq  8180 <TIFFPredictorCleanup@plt>
mov    0xf8(%r15),%rax
mov    %rax,0x410(%r14)
mov    0x100(%r15),%rax
mov    %rax,0x408(%r14)
movslq 0xf4(%r15),%rax
mov    %rax,%rcx
and    $0x2,%ecx
test   %ecx,%ecx
jg     508f9 <ZIPCleanup+0x99>
and    $0x1,%eax
test   %eax,%eax
jle    50910 <ZIPCleanup+0xb0>
lea    0x80(%r15),%rdi
callq  8780 <inflateEnd@plt>
movl   $0x0,0xf4(%r15)
jmp    50910 <ZIPCleanup+0xb0>
lea    0x80(%r15),%rdi
callq  8960 <deflateEnd@plt>
movl   $0x0,0xf4(%r15)
mov    %r15,%rdi
callq  8bb0 <_TIFFfree@plt>
mov    %r14,%rdi
movq   $0x0,0x350(%rdi)
callq  8740 <_TIFFSetDefaultCompressionState@plt>
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)

0000000000050940 <ZIPVSetField>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    0x350(%rdi),%r8
cmp    $0x10015,%esi
jne    50970 <ZIPVSetField+0x30>
movslq (%rdx),%rax
cmp    $0x2f,%eax
jle    50979 <ZIPVSetField+0x39>
mov    0x8(%rdx),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rdx)
movslq (%rcx),%rsi
jmp    50986 <ZIPVSetField+0x46>
callq  *0x100(%r8)
leaveq 
retq   
mov    0x10(%rdx),%rcx
movslq (%rcx,%rax,1),%rsi
add    $0x8,%eax
mov    %eax,(%rdx)
mov    %esi,0xf0(%r8)
mov    $0x1,%eax
movslq 0xf4(%r8),%rcx
and    $0x2,%ecx
test   %ecx,%ecx
jg     509a2 <ZIPVSetField+0x62>
leaveq 
retq   
lea    0x80(%r8),%rax
xor    %edx,%edx
mov    %r15,-0x10(%rbp)
mov    %r8,-0x8(%rbp)
mov    %rdi,%r15
mov    %rax,%rdi
callq  8620 <deflateParams@plt>
test   %eax,%eax
jne    509cd <ZIPVSetField+0x8d>
mov    $0x1,%eax
mov    -0x10(%rbp),%r15
leaveq 
retq   
mov    0x3b8(%r15),%rdi
mov    -0x8(%rbp),%rax
mov    0xb0(%rax),%rcx
test   %rcx,%rcx
jne    509eb <ZIPVSetField+0xab>
lea    0x249eb(%rip),%rcx        # 753d6 <module.16+0x79>
xor    %eax,%eax
lea    0x24b16(%rip),%rsi        # 7550a <module.42>
lea    0x24a33(%rip),%rdx        # 7542e <module.23+0x57>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x10(%rbp),%r15
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

0000000000050a10 <ZIPVGetField>:
push   %rbp
mov    %rsp,%rbp
mov    0x350(%rdi),%rax
cmp    $0x10015,%esi
jne    50a3c <ZIPVGetField+0x2c>
movslq (%rdx),%rsi
cmp    $0x2f,%esi
jle    50a44 <ZIPVGetField+0x34>
mov    0x8(%rdx),%rsi
lea    0x8(%rsi),%rcx
mov    %rcx,0x8(%rdx)
mov    (%rsi),%rcx
jmp    50a51 <ZIPVGetField+0x41>
callq  *0xf8(%rax)
leaveq 
retq   
mov    0x10(%rdx),%rcx
mov    (%rcx,%rsi,1),%rcx
add    $0x8,%esi
mov    %esi,(%rdx)
movslq 0xf0(%rax),%rax
mov    %eax,(%rcx)
mov    $0x1,%eax
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)
nopl   0x0(%rax,%rax,1)

0000000000050a70 <_TIFFmalloc>:
push   %rbp
mov    %rsp,%rbp
test   %rdi,%rdi
jne    50a7d <_TIFFmalloc+0xd>
xor    %eax,%eax
leaveq 
retq   
callq  88a0 <malloc@plt>
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nop

0000000000050a90 <_TIFFcalloc>:
push   %rbp
mov    %rsp,%rbp
xor    %eax,%eax
test   %rdi,%rdi
jne    50a9d <_TIFFcalloc+0xd>
leaveq 
retq   
test   %rsi,%rsi
jne    50aa4 <_TIFFcalloc+0x14>
leaveq 
retq   
callq  8650 <calloc@plt>
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

0000000000050ab0 <_TIFFrealloc>:
push   %rbp
mov    %rsp,%rbp
callq  89b0 <realloc@plt>
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

0000000000050ac0 <_TIFFmemset>:
push   %rbp
mov    %rsp,%rbp
callq  8550 <memset@plt>
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

0000000000050ad0 <_TIFFmemcpy>:
push   %rbp
mov    %rsp,%rbp
callq  8720 <memcpy@plt>
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

0000000000050ae0 <_TIFFmemcmp>:
push   %rbp
mov    %rsp,%rbp
callq  8610 <memcmp@plt>
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

0000000000050af0 <_TIFFfree>:
push   %rbp
mov    %rsp,%rbp
callq  8080 <free@plt>
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

0000000000050b00 <TIFFOpen>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %rdi,-0x10(%rbp)
mov    %rsi,%rdi
mov    %rdi,-0x8(%rbp)
lea    0x249fd(%rip),%rsi        # 75517 <module.8>
callq  8950 <_TIFFgetMode@plt>
cmp    $0xffffffff,%eax
jne    50b28 <TIFFOpen+0x28>
xor    %eax,%eax
leaveq 
retq   
xor    %esi,%esi
mov    $0x1b6,%edx
mov    -0x10(%rbp),%rcx
mov    %rcx,%rdi
mov    %r15,-0x10(%rbp)
mov    %rcx,%r15
mov    %rsi,%rcx
mov    %rax,%rsi
mov    %rcx,%rax
callq  8b00 <open@plt>
test   %eax,%eax
js     50b6c <TIFFOpen+0x6c>
mov    %r15,%rsi
mov    %rax,%r15
mov    %r15,%rdi
mov    -0x8(%rbp),%rdx
callq  8150 <TIFFFdOpen@plt>
test   %rax,%rax
je     50b9f <TIFFOpen+0x9f>
mov    -0x10(%rbp),%r15
leaveq 
retq   
callq  80e0 <__errno_location@plt>
movslq (%rax),%rdi
test   %edi,%edi
jg     50baf <TIFFOpen+0xaf>
mov    %r15,%rcx
xor    %eax,%eax
lea    0x249a3(%rip),%rdx        # 75527 <module.8+0x10>
xor    %r15d,%r15d
mov    %r15,%rdi
lea    0x24986(%rip),%rsi        # 75517 <module.8>
callq  8a00 <TIFFErrorExt@plt>
mov    %r15,%rax
mov    -0x10(%rbp),%r15
leaveq 
retq   
mov    %r15,%rdi
callq  8580 <close@plt>
mov    -0x10(%rbp),%r15
xor    %eax,%eax
leaveq 
retq   
mov    %r14,-0x8(%rbp)
mov    %rax,%r14
callq  8ca0 <strerror@plt>
test   %rax,%rax
jne    50bc6 <TIFFOpen+0xc6>
mov    -0x8(%rbp),%r14
jmp    50b78 <TIFFOpen+0x78>
movslq (%r14),%rdi
callq  8ca0 <strerror@plt>
mov    %r15,%rcx
mov    %rax,%r8
xor    %eax,%eax
lea    0x24943(%rip),%rdx        # 75520 <module.8+0x9>
xor    %r14d,%r14d
mov    %r14,%rdi
lea    0x2492d(%rip),%rsi        # 75517 <module.8>
callq  8a00 <TIFFErrorExt@plt>
mov    %r14,%rax
mov    -0x8(%rbp),%r14
mov    -0x10(%rbp),%r15
leaveq 
retq   
nopl   0x0(%rax)

0000000000050c00 <TIFFFdOpen>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    %r15,-0x8(%rbp)
mov    %edi,-0x10(%rbp)
lea    0x1ea(%rip),%r9        # 50e00 <_tiffCloseProc>
lea    0x1f3(%rip),%r8        # 50e10 <_tiffSizeProc>
lea    0x21c(%rip),%rcx        # 50e40 <_tiffMapProc>
lea    0x285(%rip),%rax        # 50eb0 <_tiffUnmapProc>
mov    -0x10(%rbp),%r10
mov    %r9,(%rsp)
mov    %r8,0x8(%rsp)
mov    %rcx,0x10(%rsp)
mov    %rax,0x18(%rsp)
mov    %rdi,%r15
mov    %rsi,%rdi
mov    %rdx,%rsi
mov    %r10,%rdx
lea    0x3b(%rip),%rcx        # 50c90 <_tiffReadProc>
lea    0xe4(%rip),%r8        # 50d40 <_tiffWriteProc>
lea    0x18d(%rip),%r9        # 50df0 <_tiffSeekProc>
callq  8a80 <TIFFClientOpen@plt>
add    $0x20,%rsp
test   %rax,%rax
jne    50c77 <TIFFFdOpen+0x77>
mov    -0x8(%rbp),%r15
leaveq 
retq   
mov    %r15d,0x8(%rax)
mov    -0x8(%rbp),%r15
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   0x0(%rax)

0000000000050c90 <_tiffReadProc>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    %r12,-0x8(%rbp)
mov    %r13,-0x10(%rbp)
mov    %r14,-0x18(%rbp)
mov    %r15,-0x20(%rbp)
mov    %rdi,-0x30(%rbp)
mov    $0xffffffffffffffff,%rax
mov    %rax,-0x28(%rbp)
mov    %rdx,%r13
mov    %rsi,%r15
xor    %r12d,%r12d
mov    $0x7fffffff,%r14d
jmp    50cfa <_tiffReadProc+0x6a>
mov    %r13,%rdx
sub    %r12,%rdx
cmp    $0x7fffffff,%rdx
jbe    50cda <_tiffReadProc+0x4a>
mov    %r14,%rdx
lea    (%r12,%r15,1),%rsi
movslq -0x30(%rbp),%rdi
callq  8600 <read@plt>
mov    %rax,-0x28(%rbp)
test   %rax,%rax
jle    50d1a <_tiffReadProc+0x8a>
add    %rax,%r12
mov    $0xffffffffffffffff,%rax
cmp    %r13,%r12
jb     50cc8 <_tiffReadProc+0x38>
mov    -0x28(%rbp),%r13
test   %r13,%r13
jns    50d26 <_tiffReadProc+0x96>
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
leaveq 
retq   
mov    %rax,%r13
mov    $0xffffffffffffffff,%rax
jmp    50d03 <_tiffReadProc+0x73>
mov    %r12,%rax
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

0000000000050d40 <_tiffWriteProc>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    %r12,-0x8(%rbp)
mov    %r13,-0x10(%rbp)
mov    %r14,-0x18(%rbp)
mov    %r15,-0x20(%rbp)
mov    %rdi,-0x30(%rbp)
mov    $0xffffffffffffffff,%rax
mov    %rax,-0x28(%rbp)
mov    %rdx,%r13
mov    %rsi,%r15
xor    %r12d,%r12d
mov    $0x7fffffff,%r14d
jmp    50daa <_tiffWriteProc+0x6a>
mov    %r13,%rdx
sub    %r12,%rdx
cmp    $0x7fffffff,%rdx
jbe    50d8a <_tiffWriteProc+0x4a>
mov    %r14,%rdx
lea    (%r12,%r15,1),%rsi
movslq -0x30(%rbp),%rdi
callq  8240 <write@plt>
mov    %rax,-0x28(%rbp)
test   %rax,%rax
jle    50dca <_tiffWriteProc+0x8a>
add    %rax,%r12
mov    $0xffffffffffffffff,%rax
cmp    %r13,%r12
jb     50d78 <_tiffWriteProc+0x38>
mov    -0x28(%rbp),%r13
test   %r13,%r13
jns    50dd6 <_tiffWriteProc+0x96>
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
leaveq 
retq   
mov    %rax,%r13
mov    $0xffffffffffffffff,%rax
jmp    50db3 <_tiffWriteProc+0x73>
mov    %r12,%rax
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

0000000000050df0 <_tiffSeekProc>:
push   %rbp
mov    %rsp,%rbp
callq  8470 <lseek@plt>
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

0000000000050e00 <_tiffCloseProc>:
push   %rbp
mov    %rsp,%rbp
callq  8580 <close@plt>
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

0000000000050e10 <_tiffSizeProc>:
push   %rbp
mov    %rsp,%rbp
sub    $0x90,%rsp
lea    -0x90(%rbp),%rsi
callq  50fd0 <__fstat>
test   %eax,%eax
jns    50e2f <_tiffSizeProc+0x1f>
xor    %eax,%eax
leaveq 
retq   
mov    -0x60(%rbp),%rax
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)

0000000000050e40 <_tiffMapProc>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %r13,-0x8(%rbp)
mov    %r14,-0x10(%rbp)
mov    %r15,-0x18(%rbp)
mov    %rdx,%r13
mov    %rsi,%r14
mov    %rdi,%r15
callq  50e10 <_tiffSizeProc>
mov    %r15,%r8
mov    %rax,%r15
xor    %edi,%edi
mov    $0x1,%edx
mov    %rdi,%r9
mov    %rdx,%rcx
mov    %r15,%rsi
callq  83c0 <mmap@plt>
mov    %rax,(%r14)
cmp    $0xffffffffffffffff,%rax
jne    50e96 <_tiffMapProc+0x56>
xor    %eax,%eax
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
leaveq 
retq   
mov    %r15,0x0(%r13)
mov    $0x1,%eax
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
leaveq 
retq   
nopl   (%rax)

0000000000050eb0 <_tiffUnmapProc>:
push   %rbp
mov    %rsp,%rbp
mov    %rsi,%rdi
mov    %rdx,%rsi
callq  89e0 <munmap@plt>
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   0x0(%rax)

0000000000050ed0 <unixWarningHandler>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %r13,-0x8(%rbp)
mov    %r14,-0x10(%rbp)
mov    %r15,-0x18(%rbp)
mov    0x2910d(%rip),%r13        # 79ff8 <stderr@GLIBC_2.2.5>
test   %rdi,%rdi
jne    50ef8 <unixWarningHandler+0x28>
mov    %rsi,%r14
mov    %rdx,%r15
jmp    50f13 <unixWarningHandler+0x43>
mov    %rsi,%r14
mov    %rdx,%r15
mov    %rdi,%rdx
xor    %eax,%eax
mov    0x0(%r13),%rdi
lea    0x24629(%rip),%rsi        # 75537 <module.8+0x20>
callq  86f0 <fprintf@plt>
xor    %eax,%eax
mov    0x0(%r13),%rdi
lea    0x2461c(%rip),%rsi        # 7553c <module.8+0x25>
callq  86f0 <fprintf@plt>
mov    %r15,%rdx
mov    %r14,%rsi
mov    0x0(%r13),%rdi
callq  8b50 <vfprintf@plt>
mov    0x0(%r13),%rdi
lea    0x24607(%rip),%rsi        # 75546 <module.8+0x2f>
xor    %eax,%eax
callq  86f0 <fprintf@plt>
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nop

0000000000050f60 <unixErrorHandler>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %r15,-0x18(%rbp)
mov    0x29085(%rip),%r15        # 79ff8 <stderr@GLIBC_2.2.5>
test   %rdi,%rdi
je     50fae <unixErrorHandler+0x4e>
xor    %eax,%eax
mov    (%r15),%rcx
lea    0x245b3(%rip),%r8        # 75537 <module.8+0x20>
mov    %r13,-0x8(%rbp)
mov    %r14,-0x10(%rbp)
mov    %rdx,%r13
mov    %rdi,%rdx
mov    %rcx,%rdi
mov    %rsi,%r14
mov    %r8,%rsi
callq  86f0 <fprintf@plt>
mov    %r13,%rdx
mov    %r14,%rsi
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
mov    (%r15),%rdi
callq  8b50 <vfprintf@plt>
xor    %eax,%eax
mov    (%r15),%rdi
lea    0x24584(%rip),%rsi        # 75546 <module.8+0x2f>
callq  86f0 <fprintf@plt>
mov    -0x18(%rbp),%r15
leaveq 
retq   
nopl   (%rax)

0000000000050fd0 <__fstat>:
endbr64 
mov    %rsi,%rdx
mov    %edi,%esi
mov    $0x1,%edi
jmpq   *0x28fbc(%rip)        # 79fa0 <__fxstat@GLIBC_2.2.5>

Disassembly of section .fini:

0000000000050fe4 <_fini>:
endbr64 
sub    $0x8,%rsp
add    $0x8,%rsp
retq   
