
libtiff/after.so:     file format elf64-x86-64


Disassembly of section .init:

0000000000008000 <_init>:
endbr64 
sub    $0x8,%rsp
mov    0x71f71(%rip),%rax        # 79f80 <__gmon_start__>
test   %rax,%rax
je     8016 <_init+0x16>
callq  *%rax
add    $0x8,%rsp
retq   

Disassembly of section .plt:

0000000000008020 <.plt>:
pushq  0x71fe2(%rip)        # 7a008 <_GLOBAL_OFFSET_TABLE_+0x8>
jmpq   *0x71fe4(%rip)        # 7a010 <_GLOBAL_OFFSET_TABLE_+0x10>
nopl   0x0(%rax)

0000000000008030 <TIFFCheckTile@plt>:
jmpq   *0x71fe2(%rip)        # 7a018 <TIFFCheckTile@@Base+0x2c388>
pushq  $0x0
jmpq   8020 <.plt>

0000000000008040 <getenv@plt>:
jmpq   *0x71fda(%rip)        # 7a020 <getenv@GLIBC_2.2.5>
pushq  $0x1
jmpq   8020 <.plt>

0000000000008050 <_TIFFsetDoubleArray@plt>:
jmpq   *0x71fd2(%rip)        # 7a028 <_TIFFsetDoubleArray@@Base+0x6df68>
pushq  $0x2
jmpq   8020 <.plt>

0000000000008060 <TIFFSwabArrayOfFloat@plt>:
jmpq   *0x71fca(%rip)        # 7a030 <TIFFSwabArrayOfFloat@@Base+0x2ce90>
pushq  $0x3
jmpq   8020 <.plt>

0000000000008070 <TIFFStripSize@plt>:
jmpq   *0x71fc2(%rip)        # 7a038 <TIFFStripSize@@Base+0x2d428>
pushq  $0x4
jmpq   8020 <.plt>

0000000000008080 <free@plt>:
jmpq   *0x71fba(%rip)        # 7a040 <free@GLIBC_2.2.5>
pushq  $0x5
jmpq   8020 <.plt>

0000000000008090 <jpeg_set_quality@plt>:
jmpq   *0x71fb2(%rip)        # 7a048 <jpeg_set_quality@LIBJPEG_8.0>
pushq  $0x6
jmpq   8020 <.plt>

00000000000080a0 <TIFFRewriteDirectory@plt>:
jmpq   *0x71faa(%rip)        # 7a050 <TIFFRewriteDirectory@@Base+0x5e000>
pushq  $0x7
jmpq   8020 <.plt>

00000000000080b0 <jpeg_write_tables@plt>:
jmpq   *0x71fa2(%rip)        # 7a058 <jpeg_write_tables@LIBJPEG_8.0>
pushq  $0x8
jmpq   8020 <.plt>

00000000000080c0 <LogL10toY@plt>:
jmpq   *0x71f9a(%rip)        # 7a060 <LogL10toY@@Base+0x44740>
pushq  $0x9
jmpq   8020 <.plt>

00000000000080d0 <TIFFTileRowSize@plt>:
jmpq   *0x71f92(%rip)        # 7a068 <TIFFTileRowSize@@Base+0x2c7a8>
pushq  $0xa
jmpq   8020 <.plt>

00000000000080e0 <__errno_location@plt>:
jmpq   *0x71f8a(%rip)        # 7a070 <__errno_location@GLIBC_2.2.5>
pushq  $0xb
jmpq   8020 <.plt>

00000000000080f0 <_TIFFDataSize@plt>:
jmpq   *0x71f82(%rip)        # 7a078 <_TIFFDataSize@@Base+0x68de8>
pushq  $0xc
jmpq   8020 <.plt>

0000000000008100 <_TIFFrealloc@plt>:
jmpq   *0x71f7a(%rip)        # 7a080 <_TIFFrealloc@@Base+0x29690>
pushq  $0xd
jmpq   8020 <.plt>

0000000000008110 <TIFFComputeTile@plt>:
jmpq   *0x71f72(%rip)        # 7a088 <TIFFComputeTile@@Base+0x2c578>
pushq  $0xe
jmpq   8020 <.plt>

0000000000008120 <strncmp@plt>:
jmpq   *0x71f6a(%rip)        # 7a090 <strncmp@GLIBC_2.2.5>
pushq  $0xf
jmpq   8020 <.plt>

0000000000008130 <lzma_code@plt>:
jmpq   *0x71f62(%rip)        # 7a098 <lzma_code@XZ_5.0>
pushq  $0x10
jmpq   8020 <.plt>

0000000000008140 <TIFFDataWidth@plt>:
jmpq   *0x71f5a(%rip)        # 7a0a0 <TIFFDataWidth@@Base+0x69870>
pushq  $0x11
jmpq   8020 <.plt>

0000000000008150 <TIFFFdOpen@plt>:
jmpq   *0x71f52(%rip)        # 7a0a8 <TIFFFdOpen@@Base+0x29568>
pushq  $0x12
jmpq   8020 <.plt>

0000000000008160 <strcpy@plt>:
jmpq   *0x71f4a(%rip)        # 7a0b0 <strcpy@GLIBC_2.2.5>
pushq  $0x13
jmpq   8020 <.plt>

0000000000008170 <inflate@plt>:
jmpq   *0x71f42(%rip)        # 7a0b8 <inflate>
pushq  $0x14
jmpq   8020 <.plt>

0000000000008180 <TIFFPredictorCleanup@plt>:
jmpq   *0x71f3a(%rip)        # 7a0c0 <TIFFPredictorCleanup@@Base+0x334f0>
pushq  $0x15
jmpq   8020 <.plt>

0000000000008190 <TIFFReadCustomDirectory@plt>:
jmpq   *0x71f32(%rip)        # 7a0c8 <TIFFReadCustomDirectory@@Base+0x67028>
pushq  $0x16
jmpq   8020 <.plt>

00000000000081a0 <LogLuv24fromXYZ@plt>:
jmpq   *0x71f2a(%rip)        # 7a0d0 <LogLuv24fromXYZ@@Base+0x43e60>
pushq  $0x17
jmpq   8020 <.plt>

00000000000081b0 <TIFFSwabArrayOfDouble@plt>:
jmpq   *0x71f22(%rip)        # 7a0d8 <TIFFSwabArrayOfDouble@@Base+0x2cf08>
pushq  $0x18
jmpq   8020 <.plt>

00000000000081c0 <jpeg_abort@plt>:
jmpq   *0x71f1a(%rip)        # 7a0e0 <jpeg_abort@LIBJPEG_8.0>
pushq  $0x19
jmpq   8020 <.plt>

00000000000081d0 <TIFFWriteCheck@plt>:
jmpq   *0x71f12(%rip)        # 7a0e8 <TIFFWriteCheck@@Base+0x2bcd8>
pushq  $0x1a
jmpq   8020 <.plt>

00000000000081e0 <qsort@plt>:
jmpq   *0x71f0a(%rip)        # 7a0f0 <qsort@GLIBC_2.2.5>
pushq  $0x1b
jmpq   8020 <.plt>

00000000000081f0 <jpeg_destroy@plt>:
jmpq   *0x71f02(%rip)        # 7a0f8 <jpeg_destroy@LIBJPEG_8.0>
pushq  $0x1c
jmpq   8020 <.plt>

0000000000008200 <_TIFFGetExifFields@plt>:
jmpq   *0x71efa(%rip)        # 7a100 <_TIFFGetExifFields@@Base+0x695f0>
pushq  $0x1d
jmpq   8020 <.plt>

0000000000008210 <exp@plt>:
jmpq   *0x71ef2(%rip)        # 7a108 <exp@GLIBC_2.2.5>
pushq  $0x1e
jmpq   8020 <.plt>

0000000000008220 <TIFFScanlineSize64@plt>:
jmpq   *0x71eea(%rip)        # 7a110 <TIFFScanlineSize64@@Base+0x2d7a0>
pushq  $0x1f
jmpq   8020 <.plt>

0000000000008230 <TIFFGetField@plt>:
jmpq   *0x71ee2(%rip)        # 7a118 <TIFFGetField@@Base+0x6ee58>
pushq  $0x20
jmpq   8020 <.plt>

0000000000008240 <write@plt>:
jmpq   *0x71eda(%rip)        # 7a120 <write@GLIBC_2.2.5>
pushq  $0x21
jmpq   8020 <.plt>

0000000000008250 <TIFFVGetField@plt>:
jmpq   *0x71ed2(%rip)        # 7a128 <TIFFVGetField@@Base+0x6ede8>
pushq  $0x22
jmpq   8020 <.plt>

0000000000008260 <TIFFNumberOfStrips@plt>:
jmpq   *0x71eca(%rip)        # 7a130 <TIFFNumberOfStrips@@Base+0x2d200>
pushq  $0x23
jmpq   8020 <.plt>

0000000000008270 <TIFFReadBufferSetup@plt>:
jmpq   *0x71ec2(%rip)        # 7a138 <TIFFReadBufferSetup@@Base+0x30038>
pushq  $0x24
jmpq   8020 <.plt>

0000000000008280 <TIFFComputeStrip@plt>:
jmpq   *0x71eba(%rip)        # 7a140 <TIFFComputeStrip@@Base+0x2d280>
pushq  $0x25
jmpq   8020 <.plt>

0000000000008290 <TIFFSetField@plt>:
jmpq   *0x71eb2(%rip)        # 7a148 <TIFFSetField@@Base+0x6e518>
pushq  $0x26
jmpq   8020 <.plt>

00000000000082a0 <TIFFStripSize64@plt>:
jmpq   *0x71eaa(%rip)        # 7a150 <TIFFStripSize64@@Base+0x2d560>
pushq  $0x27
jmpq   8020 <.plt>

00000000000082b0 <TIFFVStripSize@plt>:
jmpq   *0x71ea2(%rip)        # 7a158 <TIFFVStripSize@@Base+0x2d2b8>
pushq  $0x28
jmpq   8020 <.plt>

00000000000082c0 <jpeg_suppress_tables@plt>:
jmpq   *0x71e9a(%rip)        # 7a160 <jpeg_suppress_tables@LIBJPEG_8.0>
pushq  $0x29
jmpq   8020 <.plt>

00000000000082d0 <_TIFFSetupFields@plt>:
jmpq   *0x71e92(%rip)        # 7a168 <_TIFFSetupFields@@Base+0x69648>
pushq  $0x2a
jmpq   8020 <.plt>

00000000000082e0 <XYZtoRGB24@plt>:
jmpq   *0x71e8a(%rip)        # 7a170 <XYZtoRGB24@@Base+0x44810>
pushq  $0x2b
jmpq   8020 <.plt>

00000000000082f0 <_TIFFSeekOK@plt>:
jmpq   *0x71e82(%rip)        # 7a178 <_TIFFSeekOK@@Base+0x705f8>
pushq  $0x2c
jmpq   8020 <.plt>

0000000000008300 <_TIFFMultiply64@plt>:
jmpq   *0x71e7a(%rip)        # 7a180 <_TIFFMultiply64@@Base+0x70740>
pushq  $0x2d
jmpq   8020 <.plt>

0000000000008310 <_TIFFReadTileAndAllocBuffer@plt>:
jmpq   *0x71e72(%rip)        # 7a188 <_TIFFReadTileAndAllocBuffer@@Base+0x2f3f8>
pushq  $0x2e
jmpq   8020 <.plt>

0000000000008320 <TIFFCIELabToXYZ@plt>:
jmpq   *0x71e6a(%rip)        # 7a190 <TIFFCIELabToXYZ@@Base+0x6fda0>
pushq  $0x2f
jmpq   8020 <.plt>

0000000000008330 <jpeg_write_scanlines@plt>:
jmpq   *0x71e62(%rip)        # 7a198 <jpeg_write_scanlines@LIBJPEG_8.0>
pushq  $0x30
jmpq   8020 <.plt>

0000000000008340 <uv_decode@plt>:
jmpq   *0x71e5a(%rip)        # 7a1a0 <uv_decode@@Base+0x44640>
pushq  $0x31
jmpq   8020 <.plt>

0000000000008350 <strlen@plt>:
jmpq   *0x71e52(%rip)        # 7a1a8 <strlen@GLIBC_2.2.5>
pushq  $0x32
jmpq   8020 <.plt>

0000000000008360 <LogLuv32toXYZ@plt>:
jmpq   *0x71e4a(%rip)        # 7a1b0 <LogLuv32toXYZ@@Base+0x44450>
pushq  $0x33
jmpq   8020 <.plt>

0000000000008370 <TIFFYCbCrtoRGB@plt>:
jmpq   *0x71e42(%rip)        # 7a1b8 <TIFFYCbCrtoRGB@@Base+0x6f678>
pushq  $0x34
jmpq   8020 <.plt>

0000000000008380 <jpeg_finish_decompress@plt>:
jmpq   *0x71e3a(%rip)        # 7a1c0 <jpeg_finish_decompress@LIBJPEG_8.0>
pushq  $0x35
jmpq   8020 <.plt>

0000000000008390 <TIFFGetFieldDefaulted@plt>:
jmpq   *0x71e32(%rip)        # 7a1c8 <TIFFGetFieldDefaulted@@Base+0x713b8>
pushq  $0x36
jmpq   8020 <.plt>

00000000000083a0 <TIFFReadRGBATileExt@plt>:
jmpq   *0x71e2a(%rip)        # 7a1d0 <TIFFReadRGBATileExt@@Base+0x518d0>
pushq  $0x37
jmpq   8020 <.plt>

00000000000083b0 <jpeg_has_multiple_scans@plt>:
jmpq   *0x71e22(%rip)        # 7a1d8 <jpeg_has_multiple_scans@LIBJPEG_8.0>
pushq  $0x38
jmpq   8020 <.plt>

00000000000083c0 <mmap@plt>:
jmpq   *0x71e1a(%rip)        # 7a1e0 <mmap@GLIBC_2.2.5>
pushq  $0x39
jmpq   8020 <.plt>

00000000000083d0 <TIFFSwabArrayOfShort@plt>:
jmpq   *0x71e12(%rip)        # 7a1e8 <TIFFSwabArrayOfShort@@Base+0x2d128>
pushq  $0x3a
jmpq   8020 <.plt>

00000000000083e0 <lzma_memusage@plt>:
jmpq   *0x71e0a(%rip)        # 7a1f0 <lzma_memusage@XZ_5.0>
pushq  $0x3b
jmpq   8020 <.plt>

00000000000083f0 <_TIFFReadEncodedTileAndAllocBuffer@plt>:
jmpq   *0x71e02(%rip)        # 7a1f8 <_TIFFReadEncodedTileAndAllocBuffer@@Base+0x2f618>
pushq  $0x3c
jmpq   8020 <.plt>

0000000000008400 <strchr@plt>:
jmpq   *0x71dfa(%rip)        # 7a200 <strchr@GLIBC_2.2.5>
pushq  $0x3d
jmpq   8020 <.plt>

0000000000008410 <TIFFScanlineSize@plt>:
jmpq   *0x71df2(%rip)        # 7a208 <TIFFScanlineSize@@Base+0x2d6e8>
pushq  $0x3e
jmpq   8020 <.plt>

0000000000008420 <jpeg_read_raw_data@plt>:
jmpq   *0x71dea(%rip)        # 7a210 <jpeg_read_raw_data@LIBJPEG_8.0>
pushq  $0x3f
jmpq   8020 <.plt>

0000000000008430 <snprintf@plt>:
jmpq   *0x71de2(%rip)        # 7a218 <snprintf@GLIBC_2.2.5>
pushq  $0x40
jmpq   8020 <.plt>

0000000000008440 <_TIFFmalloc@plt>:
jmpq   *0x71dda(%rip)        # 7a220 <_TIFFmalloc@@Base+0x29870>
pushq  $0x41
jmpq   8020 <.plt>

0000000000008450 <TIFFVGetFieldDefaulted@plt>:
jmpq   *0x71dd2(%rip)        # 7a228 <TIFFVGetFieldDefaulted@@Base+0x71398>
pushq  $0x42
jmpq   8020 <.plt>

0000000000008460 <deflateReset@plt>:
jmpq   *0x71dca(%rip)        # 7a230 <deflateReset>
pushq  $0x43
jmpq   8020 <.plt>

0000000000008470 <lseek@plt>:
jmpq   *0x71dc2(%rip)        # 7a238 <lseek@GLIBC_2.2.5>
pushq  $0x44
jmpq   8020 <.plt>

0000000000008480 <TIFFSwabLong@plt>:
jmpq   *0x71dba(%rip)        # 7a240 <TIFFSwabLong@@Base+0x2d240>
pushq  $0x45
jmpq   8020 <.plt>

0000000000008490 <__assert_fail@plt>:
jmpq   *0x71db2(%rip)        # 7a248 <__assert_fail@GLIBC_2.2.5>
pushq  $0x46
jmpq   8020 <.plt>

00000000000084a0 <TIFFFlushData@plt>:
jmpq   *0x71daa(%rip)        # 7a250 <TIFFFlushData@@Base+0x51c70>
pushq  $0x47
jmpq   8020 <.plt>

00000000000084b0 <fputs@plt>:
jmpq   *0x71da2(%rip)        # 7a258 <fputs@GLIBC_2.2.5>
pushq  $0x48
jmpq   8020 <.plt>

00000000000084c0 <TIFFRawStripSize64@plt>:
jmpq   *0x71d9a(%rip)        # 7a260 <TIFFRawStripSize64@@Base+0x2d640>
pushq  $0x49
jmpq   8020 <.plt>

00000000000084d0 <_TIFFcalloc@plt>:
jmpq   *0x71d92(%rip)        # 7a268 <_TIFFcalloc@@Base+0x29898>
pushq  $0x4a
jmpq   8020 <.plt>

00000000000084e0 <deflate@plt>:
jmpq   *0x71d8a(%rip)        # 7a270 <deflate>
pushq  $0x4b
jmpq   8020 <.plt>

00000000000084f0 <_TIFFMultiply32@plt>:
jmpq   *0x71d82(%rip)        # 7a278 <_TIFFMultiply32@@Base+0x70878>
pushq  $0x4c
jmpq   8020 <.plt>

0000000000008500 <TIFFRasterScanlineSize64@plt>:
jmpq   *0x71d7a(%rip)        # 7a280 <TIFFRasterScanlineSize64@@Base+0x2d750>
pushq  $0x4d
jmpq   8020 <.plt>

0000000000008510 <TIFFFreeDirectory@plt>:
jmpq   *0x71d72(%rip)        # 7a288 <TIFFFreeDirectory@@Base+0x6edd8>
pushq  $0x4e
jmpq   8020 <.plt>

0000000000008520 <_TIFFMergeFields@plt>:
jmpq   *0x71d6a(%rip)        # 7a290 <_TIFFMergeFields@@Base+0x69530>
pushq  $0x4f
jmpq   8020 <.plt>

0000000000008530 <TIFFFindCODEC@plt>:
jmpq   *0x71d62(%rip)        # 7a298 <TIFFFindCODEC@@Base+0x6f658>
pushq  $0x50
jmpq   8020 <.plt>

0000000000008540 <_TIFFsetShortArray@plt>:
jmpq   *0x71d5a(%rip)        # 7a2a0 <_TIFFsetShortArray@@Base+0x6e240>
pushq  $0x51
jmpq   8020 <.plt>

0000000000008550 <memset@plt>:
jmpq   *0x71d52(%rip)        # 7a2a8 <memset@GLIBC_2.2.5>
pushq  $0x52
jmpq   8020 <.plt>

0000000000008560 <pow@plt>:
jmpq   *0x71d4a(%rip)        # 7a2b0 <pow@GLIBC_2.2.5>
pushq  $0x53
jmpq   8020 <.plt>

0000000000008570 <log@plt>:
jmpq   *0x71d42(%rip)        # 7a2b8 <log@GLIBC_2.2.5>
pushq  $0x54
jmpq   8020 <.plt>

0000000000008580 <close@plt>:
jmpq   *0x71d3a(%rip)        # 7a2c0 <close@GLIBC_2.2.5>
pushq  $0x55
jmpq   8020 <.plt>

0000000000008590 <_TIFFCreateAnonField@plt>:
jmpq   *0x71d32(%rip)        # 7a2c8 <_TIFFCreateAnonField@@Base+0x69388>
pushq  $0x56
jmpq   8020 <.plt>

00000000000085a0 <TIFFWarningExt@plt>:
jmpq   *0x71d2a(%rip)        # 7a2d0 <TIFFWarningExt@@Base+0x2c2c0>
pushq  $0x57
jmpq   8020 <.plt>

00000000000085b0 <TIFFJPEGIsFullStripRequired@plt>:
jmpq   *0x71d22(%rip)        # 7a2d8 <TIFFJPEGIsFullStripRequired@@Base+0x487c8>
pushq  $0x58
jmpq   8020 <.plt>

00000000000085c0 <_TIFFRewriteField@plt>:
jmpq   *0x71d1a(%rip)        # 7a2e0 <_TIFFRewriteField@@Base+0x5dd20>
pushq  $0x59
jmpq   8020 <.plt>

00000000000085d0 <TIFFCreateCustomDirectory@plt>:
jmpq   *0x71d12(%rip)        # 7a2e8 <TIFFCreateCustomDirectory@@Base+0x6eba8>
pushq  $0x5a
jmpq   8020 <.plt>

00000000000085e0 <fputc@plt>:
jmpq   *0x71d0a(%rip)        # 7a2f0 <fputc@GLIBC_2.2.5>
pushq  $0x5b
jmpq   8020 <.plt>

00000000000085f0 <TIFFFileName@plt>:
jmpq   *0x71d02(%rip)        # 7a2f8 <TIFFFileName@@Base+0x38248>
pushq  $0x5c
jmpq   8020 <.plt>

0000000000008600 <read@plt>:
jmpq   *0x71cfa(%rip)        # 7a300 <read@GLIBC_2.2.5>
pushq  $0x5d
jmpq   8020 <.plt>

0000000000008610 <memcmp@plt>:
jmpq   *0x71cf2(%rip)        # 7a308 <memcmp@GLIBC_2.2.5>
pushq  $0x5e
jmpq   8020 <.plt>

0000000000008620 <deflateParams@plt>:
jmpq   *0x71cea(%rip)        # 7a310 <deflateParams>
pushq  $0x5f
jmpq   8020 <.plt>

0000000000008630 <_setjmp@plt>:
jmpq   *0x71ce2(%rip)        # 7a318 <_setjmp@GLIBC_2.2.5>
pushq  $0x60
jmpq   8020 <.plt>

0000000000008640 <LogL16fromY@plt>:
jmpq   *0x71cda(%rip)        # 7a320 <LogL16fromY@@Base+0x444a0>
pushq  $0x61
jmpq   8020 <.plt>

0000000000008650 <calloc@plt>:
jmpq   *0x71cd2(%rip)        # 7a328 <calloc@GLIBC_2.2.5>
pushq  $0x62
jmpq   8020 <.plt>

0000000000008660 <strcmp@plt>:
jmpq   *0x71cca(%rip)        # 7a330 <strcmp@GLIBC_2.2.5>
pushq  $0x63
jmpq   8020 <.plt>

0000000000008670 <jpeg_start_decompress@plt>:
jmpq   *0x71cc2(%rip)        # 7a338 <jpeg_start_decompress@LIBJPEG_8.0>
pushq  $0x64
jmpq   8020 <.plt>

0000000000008680 <TIFFFindField@plt>:
jmpq   *0x71cba(%rip)        # 7a340 <TIFFFindField@@Base+0x69cf0>
pushq  $0x65
jmpq   8020 <.plt>

0000000000008690 <deflateInit_@plt>:
jmpq   *0x71cb2(%rip)        # 7a348 <deflateInit_>
pushq  $0x66
jmpq   8020 <.plt>

00000000000086a0 <TIFFRGBAImageGet@plt>:
jmpq   *0x71caa(%rip)        # 7a350 <TIFFRGBAImageGet@@Base+0x50a90>
pushq  $0x67
jmpq   8020 <.plt>

00000000000086b0 <TIFFSetupStrips@plt>:
jmpq   *0x71ca2(%rip)        # 7a358 <TIFFSetupStrips@@Base+0x2c0a8>
pushq  $0x68
jmpq   8020 <.plt>

00000000000086c0 <jpeg_write_raw_data@plt>:
jmpq   *0x71c9a(%rip)        # 7a360 <jpeg_write_raw_data@LIBJPEG_8.0>
pushq  $0x69
jmpq   8020 <.plt>

00000000000086d0 <jpeg_read_scanlines@plt>:
jmpq   *0x71c92(%rip)        # 7a368 <jpeg_read_scanlines@LIBJPEG_8.0>
pushq  $0x6a
jmpq   8020 <.plt>

00000000000086e0 <TIFFFlushData1@plt>:
jmpq   *0x71c8a(%rip)        # 7a370 <TIFFFlushData1@@Base+0x2aba0>
pushq  $0x6b
jmpq   8020 <.plt>

00000000000086f0 <fprintf@plt>:
jmpq   *0x71c82(%rip)        # 7a378 <fprintf@GLIBC_2.2.5>
pushq  $0x6c
jmpq   8020 <.plt>

0000000000008700 <TIFFReverseBits@plt>:
jmpq   *0x71c7a(%rip)        # 7a380 <TIFFReverseBits@@Base+0x2d160>
pushq  $0x6d
jmpq   8020 <.plt>

0000000000008710 <TIFFReadRGBAImageOriented@plt>:
jmpq   *0x71c72(%rip)        # 7a388 <TIFFReadRGBAImageOriented@@Base+0x51d28>
pushq  $0x6e
jmpq   8020 <.plt>

0000000000008720 <memcpy@plt>:
jmpq   *0x71c6a(%rip)        # 7a390 <memcpy@GLIBC_2.14>
pushq  $0x6f
jmpq   8020 <.plt>

0000000000008730 <TIFFSwabLong8@plt>:
jmpq   *0x71c62(%rip)        # 7a398 <TIFFSwabLong8@@Base+0x2d378>
pushq  $0x70
jmpq   8020 <.plt>

0000000000008740 <_TIFFSetDefaultCompressionState@plt>:
jmpq   *0x71c5a(%rip)        # 7a3a0 <_TIFFSetDefaultCompressionState@@Base+0x6f3a0>
pushq  $0x71
jmpq   8020 <.plt>

0000000000008750 <_TIFFCheckMalloc@plt>:
jmpq   *0x71c52(%rip)        # 7a3a8 <_TIFFCheckMalloc@@Base+0x70918>
pushq  $0x72
jmpq   8020 <.plt>

0000000000008760 <TIFFFlush@plt>:
jmpq   *0x71c4a(%rip)        # 7a3b0 <TIFFFlush@@Base+0x51fb0>
pushq  $0x73
jmpq   8020 <.plt>

0000000000008770 <TIFFVTileSize64@plt>:
jmpq   *0x71c42(%rip)        # 7a3b8 <TIFFVTileSize64@@Base+0x2cac8>
pushq  $0x74
jmpq   8020 <.plt>

0000000000008780 <inflateEnd@plt>:
jmpq   *0x71c3a(%rip)        # 7a3c0 <inflateEnd>
pushq  $0x75
jmpq   8020 <.plt>

0000000000008790 <_TIFFmemcpy@plt>:
jmpq   *0x71c32(%rip)        # 7a3c8 <_TIFFmemcpy@@Base+0x299b8>
pushq  $0x76
jmpq   8020 <.plt>

00000000000087a0 <jpeg_CreateDecompress@plt>:
jmpq   *0x71c2a(%rip)        # 7a3d0 <jpeg_CreateDecompress@LIBJPEG_8.0>
pushq  $0x77
jmpq   8020 <.plt>

00000000000087b0 <TIFFRGBAImageEnd@plt>:
jmpq   *0x71c22(%rip)        # 7a3d8 <TIFFRGBAImageEnd@@Base+0x50a88>
pushq  $0x78
jmpq   8020 <.plt>

00000000000087c0 <TIFFSwabShort@plt>:
jmpq   *0x71c1a(%rip)        # 7a3e0 <TIFFSwabShort@@Base+0x2d400>
pushq  $0x79
jmpq   8020 <.plt>

00000000000087d0 <TIFFNumberOfTiles@plt>:
jmpq   *0x71c12(%rip)        # 7a3e8 <TIFFNumberOfTiles@@Base+0x2c668>
pushq  $0x7a
jmpq   8020 <.plt>

00000000000087e0 <TIFFGetBitRevTable@plt>:
jmpq   *0x71c0a(%rip)        # 7a3f0 <TIFFGetBitRevTable@@Base+0x2d140>
pushq  $0x7b
jmpq   8020 <.plt>

00000000000087f0 <_TIFFsetFloatArray@plt>:
jmpq   *0x71c02(%rip)        # 7a3f8 <_TIFFsetFloatArray@@Base+0x6e358>
pushq  $0x7c
jmpq   8020 <.plt>

0000000000008800 <lzma_stream_decoder@plt>:
jmpq   *0x71bfa(%rip)        # 7a400 <lzma_stream_decoder@XZ_5.0>
pushq  $0x7d
jmpq   8020 <.plt>

0000000000008810 <TIFFReadEncodedStrip@plt>:
jmpq   *0x71bf2(%rip)        # 7a408 <TIFFReadEncodedStrip@@Base+0x2fff8>
pushq  $0x7e
jmpq   8020 <.plt>

0000000000008820 <TIFFReadTile@plt>:
jmpq   *0x71bea(%rip)        # 7a410 <TIFFReadTile@@Base+0x300a0>
pushq  $0x7f
jmpq   8020 <.plt>

0000000000008830 <TIFFCreateDirectory@plt>:
jmpq   *0x71be2(%rip)        # 7a418 <TIFFCreateDirectory@@Base+0x6ed28>
pushq  $0x80
jmpq   8020 <.plt>

0000000000008840 <uv_encode@plt>:
jmpq   *0x71bda(%rip)        # 7a420 <uv_encode@@Base+0x44330>
pushq  $0x81
jmpq   8020 <.plt>

0000000000008850 <TIFFRGBAImageOK@plt>:
jmpq   *0x71bd2(%rip)        # 7a428 <TIFFRGBAImageOK@@Base+0x51868>
pushq  $0x82
jmpq   8020 <.plt>

0000000000008860 <TIFFSetCompressionScheme@plt>:
jmpq   *0x71bca(%rip)        # 7a430 <TIFFSetCompressionScheme@@Base+0x6f330>
pushq  $0x83
jmpq   8020 <.plt>

0000000000008870 <lzma_end@plt>:
jmpq   *0x71bc2(%rip)        # 7a438 <lzma_end@XZ_5.0>
pushq  $0x84
jmpq   8020 <.plt>

0000000000008880 <TIFFFillStrip@plt>:
jmpq   *0x71bba(%rip)        # 7a440 <TIFFFillStrip@@Base+0x2f600>
pushq  $0x85
jmpq   8020 <.plt>

0000000000008890 <TIFFIsTiled@plt>:
jmpq   *0x71bb2(%rip)        # 7a448 <TIFFIsTiled@@Base+0x38d48>
pushq  $0x86
jmpq   8020 <.plt>

00000000000088a0 <malloc@plt>:
jmpq   *0x71baa(%rip)        # 7a450 <malloc@GLIBC_2.2.5>
pushq  $0x87
jmpq   8020 <.plt>

00000000000088b0 <jpeg_set_colorspace@plt>:
jmpq   *0x71ba2(%rip)        # 7a458 <jpeg_set_colorspace@LIBJPEG_8.0>
pushq  $0x88
jmpq   8020 <.plt>

00000000000088c0 <TIFFGetTagListEntry@plt>:
jmpq   *0x71b9a(%rip)        # 7a460 <TIFFGetTagListEntry@@Base+0x58960>
pushq  $0x89
jmpq   8020 <.plt>

00000000000088d0 <TIFFDefaultDirectory@plt>:
jmpq   *0x71b92(%rip)        # 7a468 <TIFFDefaultDirectory@@Base+0x6e618>
pushq  $0x8a
jmpq   8020 <.plt>

00000000000088e0 <_TIFFmemset@plt>:
jmpq   *0x71b8a(%rip)        # 7a470 <_TIFFmemset@@Base+0x29a70>
pushq  $0x8b
jmpq   8020 <.plt>

00000000000088f0 <LogL10fromY@plt>:
jmpq   *0x71b82(%rip)        # 7a478 <LogL10fromY@@Base+0x44458>
pushq  $0x8c
jmpq   8020 <.plt>

0000000000008900 <_TIFFmemcmp@plt>:
jmpq   *0x71b7a(%rip)        # 7a480 <_TIFFmemcmp@@Base+0x29a60>
pushq  $0x8d
jmpq   8020 <.plt>

0000000000008910 <TIFFTileSize@plt>:
jmpq   *0x71b72(%rip)        # 7a488 <TIFFTileSize@@Base+0x2cba8>
pushq  $0x8e
jmpq   8020 <.plt>

0000000000008920 <atan2@plt>:
jmpq   *0x71b6a(%rip)        # 7a490 <atan2@GLIBC_2.2.5>
pushq  $0x8f
jmpq   8020 <.plt>

0000000000008930 <TIFFSwabArrayOfLong8@plt>:
jmpq   *0x71b62(%rip)        # 7a498 <TIFFSwabArrayOfLong8@@Base+0x2d348>
pushq  $0x90
jmpq   8020 <.plt>

0000000000008940 <_TIFFGetFields@plt>:
jmpq   *0x71b5a(%rip)        # 7a4a0 <_TIFFGetFields@@Base+0x699a0>
pushq  $0x91
jmpq   8020 <.plt>

0000000000008950 <_TIFFgetMode@plt>:
jmpq   *0x71b52(%rip)        # 7a4a8 <_TIFFgetMode@@Base+0x383d8>
pushq  $0x92
jmpq   8020 <.plt>

0000000000008960 <deflateEnd@plt>:
jmpq   *0x71b4a(%rip)        # 7a4b0 <deflateEnd>
pushq  $0x93
jmpq   8020 <.plt>

0000000000008970 <TIFFWriteBufferSetup@plt>:
jmpq   *0x71b42(%rip)        # 7a4b8 <TIFFWriteBufferSetup@@Base+0x2c378>
pushq  $0x94
jmpq   8020 <.plt>

0000000000008980 <TIFFYCbCrToRGBInit@plt>:
jmpq   *0x71b3a(%rip)        # 7a4c0 <TIFFYCbCrToRGBInit@@Base+0x6fdc0>
pushq  $0x95
jmpq   8020 <.plt>

0000000000008990 <TIFFReadRGBAStripExt@plt>:
jmpq   *0x71b32(%rip)        # 7a4c8 <TIFFReadRGBAStripExt@@Base+0x51d48>
pushq  $0x96
jmpq   8020 <.plt>

00000000000089a0 <TIFFVSetField@plt>:
jmpq   *0x71b2a(%rip)        # 7a4d0 <TIFFVSetField@@Base+0x6e820>
pushq  $0x97
jmpq   8020 <.plt>

00000000000089b0 <realloc@plt>:
jmpq   *0x71b22(%rip)        # 7a4d8 <realloc@GLIBC_2.2.5>
pushq  $0x98
jmpq   8020 <.plt>

00000000000089c0 <jpeg_CreateCompress@plt>:
jmpq   *0x71b1a(%rip)        # 7a4e0 <jpeg_CreateCompress@LIBJPEG_8.0>
pushq  $0x99
jmpq   8020 <.plt>

00000000000089d0 <TIFFReadEncodedTile@plt>:
jmpq   *0x71b12(%rip)        # 7a4e8 <TIFFReadEncodedTile@@Base+0x2fe58>
pushq  $0x9a
jmpq   8020 <.plt>

00000000000089e0 <munmap@plt>:
jmpq   *0x71b0a(%rip)        # 7a4f0 <munmap@GLIBC_2.2.5>
pushq  $0x9b
jmpq   8020 <.plt>

00000000000089f0 <jpeg_std_error@plt>:
jmpq   *0x71b02(%rip)        # 7a4f8 <jpeg_std_error@LIBJPEG_8.0>
pushq  $0x9c
jmpq   8020 <.plt>

0000000000008a00 <TIFFErrorExt@plt>:
jmpq   *0x71afa(%rip)        # 7a500 <TIFFErrorExt@@Base+0x58b40>
pushq  $0x9d
jmpq   8020 <.plt>

0000000000008a10 <TIFFFillTile@plt>:
jmpq   *0x71af2(%rip)        # 7a508 <TIFFFillTile@@Base+0x2f238>
pushq  $0x9e
jmpq   8020 <.plt>

0000000000008a20 <inflateInit_@plt>:
jmpq   *0x71aea(%rip)        # 7a510 <inflateInit_>
pushq  $0x9f
jmpq   8020 <.plt>

0000000000008a30 <jpeg_read_header@plt>:
jmpq   *0x71ae2(%rip)        # 7a518 <jpeg_read_header@LIBJPEG_8.0>
pushq  $0xa0
jmpq   8020 <.plt>

0000000000008a40 <longjmp@plt>:
jmpq   *0x71ada(%rip)        # 7a520 <longjmp@GLIBC_2.2.5>
pushq  $0xa1
jmpq   8020 <.plt>

0000000000008a50 <memmove@plt>:
jmpq   *0x71ad2(%rip)        # 7a528 <memmove@GLIBC_2.2.5>
pushq  $0xa2
jmpq   8020 <.plt>

0000000000008a60 <TIFFSwabArrayOfTriples@plt>:
jmpq   *0x71aca(%rip)        # 7a530 <TIFFSwabArrayOfTriples@@Base+0x2d440>
pushq  $0xa3
jmpq   8020 <.plt>

0000000000008a70 <TIFFCleanup@plt>:
jmpq   *0x71ac2(%rip)        # 7a538 <TIFFCleanup@@Base+0x70658>
pushq  $0xa4
jmpq   8020 <.plt>

0000000000008a80 <TIFFClientOpen@plt>:
jmpq   *0x71aba(%rip)        # 7a540 <TIFFClientOpen@@Base+0x38cf0>
pushq  $0xa5
jmpq   8020 <.plt>

0000000000008a90 <TIFFSetWriteOffset@plt>:
jmpq   *0x71ab2(%rip)        # 7a548 <TIFFSetWriteOffset@@Base+0x2ad88>
pushq  $0xa6
jmpq   8020 <.plt>

0000000000008aa0 <_TIFFsetByteArray@plt>:
jmpq   *0x71aaa(%rip)        # 7a550 <_TIFFsetByteArray@@Base+0x6e550>
pushq  $0xa7
jmpq   8020 <.plt>

0000000000008ab0 <_TIFFReadEncodedStripAndAllocBuffer@plt>:
jmpq   *0x71aa2(%rip)        # 7a558 <_TIFFReadEncodedStripAndAllocBuffer@@Base+0x2fac8>
pushq  $0xa8
jmpq   8020 <.plt>

0000000000008ac0 <TIFFPredictorInit@plt>:
jmpq   *0x71a9a(%rip)        # 7a560 <TIFFPredictorInit@@Base+0x33ac0>
pushq  $0xa9
jmpq   8020 <.plt>

0000000000008ad0 <TIFFIsCODECConfigured@plt>:
jmpq   *0x71a92(%rip)        # 7a568 <TIFFIsCODECConfigured@@Base+0x70468>
pushq  $0xaa
jmpq   8020 <.plt>

0000000000008ae0 <TIFFFieldWithTag@plt>:
jmpq   *0x71a8a(%rip)        # 7a570 <TIFFFieldWithTag@@Base+0x69e60>
pushq  $0xab
jmpq   8020 <.plt>

0000000000008af0 <TIFFWriteDirectory@plt>:
jmpq   *0x71a82(%rip)        # 7a578 <TIFFWriteDirectory@@Base+0x5e5d8>
pushq  $0xac
jmpq   8020 <.plt>

0000000000008b00 <open@plt>:
jmpq   *0x71a7a(%rip)        # 7a580 <open@GLIBC_2.2.5>
pushq  $0xad
jmpq   8020 <.plt>

0000000000008b10 <TIFFTileRowSize64@plt>:
jmpq   *0x71a72(%rip)        # 7a588 <TIFFTileRowSize64@@Base+0x2cdd8>
pushq  $0xae
jmpq   8020 <.plt>

0000000000008b20 <jpeg_set_defaults@plt>:
jmpq   *0x71a6a(%rip)        # 7a590 <jpeg_set_defaults@LIBJPEG_8.0>
pushq  $0xaf
jmpq   8020 <.plt>

0000000000008b30 <TIFFReadDirectory@plt>:
jmpq   *0x71a62(%rip)        # 7a598 <TIFFReadDirectory@@Base+0x68e88>
pushq  $0xb0
jmpq   8020 <.plt>

0000000000008b40 <TIFFCIELabToRGBInit@plt>:
jmpq   *0x71a5a(%rip)        # 7a5a0 <TIFFCIELabToRGBInit@@Base+0x703b0>
pushq  $0xb1
jmpq   8020 <.plt>

0000000000008b50 <vfprintf@plt>:
jmpq   *0x71a52(%rip)        # 7a5a8 <vfprintf@GLIBC_2.2.5>
pushq  $0xb2
jmpq   8020 <.plt>

0000000000008b60 <_TIFFCheckFieldIsValidForCodec@plt>:
jmpq   *0x71a4a(%rip)        # 7a5b0 <_TIFFCheckFieldIsValidForCodec@@Base+0x69490>
pushq  $0xb3
jmpq   8020 <.plt>

0000000000008b70 <TIFFSwabArrayOfLong@plt>:
jmpq   *0x71a42(%rip)        # 7a5b8 <TIFFSwabArrayOfLong@@Base+0x2d498>
pushq  $0xb4
jmpq   8020 <.plt>

0000000000008b80 <floor@plt>:
jmpq   *0x71a3a(%rip)        # 7a5c0 <floor@GLIBC_2.2.5>
pushq  $0xb5
jmpq   8020 <.plt>

0000000000008b90 <atoi@plt>:
jmpq   *0x71a32(%rip)        # 7a5c8 <atoi@GLIBC_2.2.5>
pushq  $0xb6
jmpq   8020 <.plt>

0000000000008ba0 <LogLuv32fromXYZ@plt>:
jmpq   *0x71a2a(%rip)        # 7a5d0 <LogLuv32fromXYZ@@Base+0x44260>
pushq  $0xb7
jmpq   8020 <.plt>

0000000000008bb0 <_TIFFfree@plt>:
jmpq   *0x71a22(%rip)        # 7a5d8 <_TIFFfree@@Base+0x29ba8>
pushq  $0xb8
jmpq   8020 <.plt>

0000000000008bc0 <jpeg_start_compress@plt>:
jmpq   *0x71a1a(%rip)        # 7a5e0 <jpeg_start_compress@LIBJPEG_8.0>
pushq  $0xb9
jmpq   8020 <.plt>

0000000000008bd0 <inflateReset@plt>:
jmpq   *0x71a12(%rip)        # 7a5e8 <inflateReset>
pushq  $0xba
jmpq   8020 <.plt>

0000000000008be0 <fabs@plt>:
jmpq   *0x71a0a(%rip)        # 7a5f0 <fabs@GLIBC_2.2.5>
pushq  $0xbb
jmpq   8020 <.plt>

0000000000008bf0 <TIFFRGBAImageBegin@plt>:
jmpq   *0x71a02(%rip)        # 7a5f8 <TIFFRGBAImageBegin@@Base+0x51598>
pushq  $0xbc
jmpq   8020 <.plt>

0000000000008c00 <TIFFVStripSize64@plt>:
jmpq   *0x719fa(%rip)        # 7a600 <TIFFVStripSize64@@Base+0x2d970>
pushq  $0xbd
jmpq   8020 <.plt>

0000000000008c10 <sprintf@plt>:
jmpq   *0x719f2(%rip)        # 7a608 <sprintf@GLIBC_2.2.5>
pushq  $0xbe
jmpq   8020 <.plt>

0000000000008c20 <bsearch@plt>:
jmpq   *0x719ea(%rip)        # 7a610 <bsearch@GLIBC_2.2.5>
pushq  $0xbf
jmpq   8020 <.plt>

0000000000008c30 <lzma_stream_encoder@plt>:
jmpq   *0x719e2(%rip)        # 7a618 <lzma_stream_encoder@XZ_5.0>
pushq  $0xc0
jmpq   8020 <.plt>

0000000000008c40 <TIFFTileSize64@plt>:
jmpq   *0x719da(%rip)        # 7a620 <TIFFTileSize64@@Base+0x2cd50>
pushq  $0xc1
jmpq   8020 <.plt>

0000000000008c50 <TIFFGetTagListCount@plt>:
jmpq   *0x719d2(%rip)        # 7a628 <TIFFGetTagListCount@@Base+0x58b38>
pushq  $0xc2
jmpq   8020 <.plt>

0000000000008c60 <sqrt@plt>:
jmpq   *0x719ca(%rip)        # 7a630 <sqrt@GLIBC_2.2.5>
pushq  $0xc3
jmpq   8020 <.plt>

0000000000008c70 <_TIFFFillStriles@plt>:
jmpq   *0x719c2(%rip)        # 7a638 <_TIFFFillStriles@@Base+0x671d8>
pushq  $0xc4
jmpq   8020 <.plt>

0000000000008c80 <LogLuv24toXYZ@plt>:
jmpq   *0x719ba(%rip)        # 7a640 <LogLuv24toXYZ@@Base+0x44a20>
pushq  $0xc5
jmpq   8020 <.plt>

0000000000008c90 <jpeg_finish_compress@plt>:
jmpq   *0x719b2(%rip)        # 7a648 <jpeg_finish_compress@LIBJPEG_8.0>
pushq  $0xc6
jmpq   8020 <.plt>

0000000000008ca0 <strerror@plt>:
jmpq   *0x719aa(%rip)        # 7a650 <strerror@GLIBC_2.2.5>
pushq  $0xc7
jmpq   8020 <.plt>

0000000000008cb0 <lzma_lzma_preset@plt>:
jmpq   *0x719a2(%rip)        # 7a658 <lzma_lzma_preset@XZ_5.0>
pushq  $0xc8
jmpq   8020 <.plt>

0000000000008cc0 <_TIFFprintAscii@plt>:
jmpq   *0x7199a(%rip)        # 7a660 <_TIFFprintAscii@@Base+0x30cb0>
pushq  $0xc9
jmpq   8020 <.plt>

0000000000008cd0 <inflateSync@plt>:
jmpq   *0x71992(%rip)        # 7a668 <inflateSync>
pushq  $0xca
jmpq   8020 <.plt>

0000000000008ce0 <LogL16toY@plt>:
jmpq   *0x7198a(%rip)        # 7a670 <LogL16toY@@Base+0x44dd0>
pushq  $0xcb
jmpq   8020 <.plt>

0000000000008cf0 <TIFFWriteEncodedTile@plt>:
jmpq   *0x71982(%rip)        # 7a678 <TIFFWriteEncodedTile@@Base+0x2b4b8>
pushq  $0xcc
jmpq   8020 <.plt>

0000000000008d00 <_TIFFCheckRealloc@plt>:
jmpq   *0x7197a(%rip)        # 7a680 <_TIFFCheckRealloc@@Base+0x70bd0>
pushq  $0xcd
jmpq   8020 <.plt>

0000000000008d10 <rand@plt>:
jmpq   *0x71972(%rip)        # 7a688 <rand@GLIBC_2.2.5>
pushq  $0xce
jmpq   8020 <.plt>

0000000000008d20 <__ctype_b_loc@plt>:
jmpq   *0x7196a(%rip)        # 7a690 <__ctype_b_loc@GLIBC_2.3>
pushq  $0xcf
jmpq   8020 <.plt>

0000000000008d30 <TIFFXYZToRGB@plt>:
jmpq   *0x71962(%rip)        # 7a698 <TIFFXYZToRGB@@Base+0x70178>
pushq  $0xd0
jmpq   8020 <.plt>

Disassembly of section .text:

0000000000008d40 <deregister_tm_clones>:
lea    0x71b49(%rip),%rdi        # 7a890 <_edata>
lea    0x71b42(%rip),%rax        # 7a890 <_edata>
cmp    %rdi,%rax
je     8d68 <deregister_tm_clones+0x28>
mov    0x7119e(%rip),%rax        # 79ef8 <_ITM_deregisterTMCloneTable>
test   %rax,%rax
je     8d68 <deregister_tm_clones+0x28>
jmpq   *%rax
nopl   0x0(%rax)
retq   
nopl   0x0(%rax)

0000000000008d70 <register_tm_clones>:
lea    0x71b19(%rip),%rdi        # 7a890 <_edata>
lea    0x71b12(%rip),%rsi        # 7a890 <_edata>
sub    %rdi,%rsi
sar    $0x3,%rsi
mov    %rsi,%rax
shr    $0x3f,%rax
add    %rax,%rsi
sar    %rsi
je     8da8 <register_tm_clones+0x38>
mov    0x7124d(%rip),%rax        # 79fe8 <_ITM_registerTMCloneTable>
test   %rax,%rax
je     8da8 <register_tm_clones+0x38>
jmpq   *%rax
nopw   0x0(%rax,%rax,1)
retq   
nopl   0x0(%rax)

0000000000008db0 <__do_global_dtors_aux>:
endbr64 
cmpb   $0x0,0x71ad5(%rip)        # 7a890 <_edata>
jne    8df0 <__do_global_dtors_aux+0x40>
push   %rbp
cmpq   $0x0,0x7122a(%rip)        # 79ff0 <__cxa_finalize@GLIBC_2.2.5>
mov    %rsp,%rbp
je     8dd8 <__do_global_dtors_aux+0x28>
mov    0x718ce(%rip),%rdi        # 7a6a0 <__dso_handle>
callq  *0x71218(%rip)        # 79ff0 <__cxa_finalize@GLIBC_2.2.5>
callq  8d40 <deregister_tm_clones>
movb   $0x1,0x71aac(%rip)        # 7a890 <_edata>
pop    %rbp
retq   
nopw   %cs:0x0(%rax,%rax,1)
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   0x0(%rax)

0000000000008e00 <frame_dummy>:
endbr64 
jmpq   8d70 <register_tm_clones>
nopl   0x0(%rax)

0000000000008e10 <TIFFGetFieldDefaulted>:
push   %rbp
mov    %rsp,%rbp
sub    $0xd0,%rsp
mov    %rdx,-0xa0(%rbp)
mov    %rcx,-0x98(%rbp)
mov    %r8,-0x90(%rbp)
mov    %r9,-0x88(%rbp)
movsd  %xmm0,-0x80(%rbp)
movsd  %xmm1,-0x70(%rbp)
movsd  %xmm2,-0x60(%rbp)
movsd  %xmm3,-0x50(%rbp)
movsd  %xmm4,-0x40(%rbp)
movsd  %xmm5,-0x30(%rbp)
movsd  %xmm6,-0x20(%rbp)
movsd  %xmm7,-0x10(%rbp)
lea    -0xc8(%rbp),%rdx
movl   $0x10,(%rdx)
movl   $0x30,0x4(%rdx)
lea    -0xb0(%rbp),%rax
mov    %rax,0x10(%rdx)
lea    0x10(%rbp),%rax
mov    %rax,0x8(%rdx)
callq  8450 <TIFFVGetFieldDefaulted@plt>
leaveq 
retq   
nopl   (%rax)

0000000000008e90 <TIFFVGetFieldDefaulted>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %rdi,-0x10(%rbp)
mov    %rsi,-0x18(%rbp)
mov    %rdx,-0x8(%rbp)
callq  8250 <TIFFVGetField@plt>
test   %eax,%eax
je     8eb4 <TIFFVGetFieldDefaulted+0x24>
mov    $0x1,%eax
leaveq 
retq   
xor    %eax,%eax
mov    -0x10(%rbp),%rcx
lea    0x38(%rcx),%rdi
mov    -0x18(%rbp),%rdx
cmp    $0x13d,%edx
jbe    8f1e <TIFFVGetFieldDefaulted+0x8e>
cmp    $0x211,%edx
jbe    8f5c <TIFFVGetFieldDefaulted+0xcc>
cmp    $0x80e2,%edx
jbe    8fa4 <TIFFVGetFieldDefaulted+0x114>
cmp    $0x80e4,%edx
jbe    8fe0 <TIFFVGetFieldDefaulted+0x150>
cmp    $0x80e5,%edx
jne    9010 <TIFFVGetFieldDefaulted+0x180>
mov    -0x8(%rbp),%rsi
movslq (%rsi),%rdx
cmp    $0x2f,%edx
jle    901e <TIFFVGetFieldDefaulted+0x18e>
mov    0x8(%rsi),%rdx
lea    0x8(%rdx),%rax
mov    %rax,0x8(%rsi)
mov    (%rdx),%rax
jmpq   902b <TIFFVGetFieldDefaulted+0x19b>
cmp    $0x115,%edx
jbe    9037 <TIFFVGetFieldDefaulted+0x1a7>
cmp    $0x11b,%edx
jbe    907f <TIFFVGetFieldDefaulted+0x1ef>
cmp    $0x12c,%edx
jbe    90bb <TIFFVGetFieldDefaulted+0x22b>
cmp    $0x12d,%edx
je     90eb <TIFFVGetFieldDefaulted+0x25b>
cmp    $0x13d,%edx
je     911f <TIFFVGetFieldDefaulted+0x28f>
leaveq 
retq   
cmp    $0x14f,%edx
jbe    9153 <TIFFVGetFieldDefaulted+0x2c3>
cmp    $0x152,%edx
jbe    918f <TIFFVGetFieldDefaulted+0x2ff>
cmp    $0x153,%edx
jne    91bf <TIFFVGetFieldDefaulted+0x32f>
mov    -0x8(%rbp),%rsi
movslq (%rsi),%rdx
cmp    $0x2f,%edx
jle    91cd <TIFFVGetFieldDefaulted+0x33d>
mov    0x8(%rsi),%rdx
lea    0x8(%rdx),%rax
mov    %rax,0x8(%rsi)
mov    (%rdx),%rax
jmpq   91da <TIFFVGetFieldDefaulted+0x34a>
cmp    $0x212,%edx
jbe    91e8 <TIFFVGetFieldDefaulted+0x358>
cmp    $0x213,%edx
jne    91f6 <TIFFVGetFieldDefaulted+0x366>
mov    -0x8(%rbp),%rsi
movslq (%rsi),%rdx
cmp    $0x2f,%edx
jle    9204 <TIFFVGetFieldDefaulted+0x374>
mov    0x8(%rsi),%rdx
lea    0x8(%rdx),%rax
mov    %rax,0x8(%rsi)
mov    (%rdx),%rax
jmpq   9211 <TIFFVGetFieldDefaulted+0x381>
cmp    $0x80e3,%edx
jne    9222 <TIFFVGetFieldDefaulted+0x392>
mov    -0x8(%rbp),%rdi
movslq (%rdi),%rsi
cmp    $0x2f,%esi
jle    9230 <TIFFVGetFieldDefaulted+0x3a0>
mov    0x8(%rdi),%rsi
lea    0x8(%rsi),%rdx
mov    %rdx,0x8(%rdi)
mov    (%rsi),%rdx
jmpq   923d <TIFFVGetFieldDefaulted+0x3ad>
cmp    $0x80e6,%edx
je     9258 <TIFFVGetFieldDefaulted+0x3c8>
leaveq 
retq   
mov    0x10(%rsi),%rax
mov    (%rax,%rdx,1),%rax
add    $0x8,%edx
mov    %edx,(%rsi)
mov    0x60(%rcx),%ecx
mov    %ecx,(%rax)
mov    $0x1,%eax
leaveq 
retq   
cmp    $0x109,%edx
jbe    927c <TIFFVGetFieldDefaulted+0x3ec>
cmp    $0x111,%edx
jbe    92b8 <TIFFVGetFieldDefaulted+0x428>
cmp    $0x112,%edx
jne    92c6 <TIFFVGetFieldDefaulted+0x436>
mov    -0x8(%rbp),%rsi
movslq (%rsi),%rdx
cmp    $0x2f,%edx
jle    92d4 <TIFFVGetFieldDefaulted+0x444>
mov    0x8(%rsi),%rdx
lea    0x8(%rdx),%rax
mov    %rax,0x8(%rsi)
mov    (%rdx),%rax
jmpq   92e1 <TIFFVGetFieldDefaulted+0x451>
cmp    $0x117,%edx
jbe    92f2 <TIFFVGetFieldDefaulted+0x462>
cmp    $0x118,%edx
jne    9300 <TIFFVGetFieldDefaulted+0x470>
mov    -0x8(%rbp),%rsi
movslq (%rsi),%rdx
cmp    $0x2f,%edx
jle    930e <TIFFVGetFieldDefaulted+0x47e>
mov    0x8(%rsi),%rdx
lea    0x8(%rdx),%rax
mov    %rax,0x8(%rsi)
mov    (%rdx),%rax
jmpq   931b <TIFFVGetFieldDefaulted+0x48b>
cmp    $0x11c,%edx
jne    932c <TIFFVGetFieldDefaulted+0x49c>
mov    -0x8(%rbp),%rsi
movslq (%rsi),%rdx
cmp    $0x2f,%edx
jle    933a <TIFFVGetFieldDefaulted+0x4aa>
mov    0x8(%rsi),%rdx
lea    0x8(%rdx),%rax
mov    %rax,0x8(%rsi)
mov    (%rdx),%rax
jmpq   9347 <TIFFVGetFieldDefaulted+0x4b7>
mov    0x110(%rcx),%rax
test   %rax,%rax
je     9358 <TIFFVGetFieldDefaulted+0x4c8>
mov    -0x8(%rbp),%rsi
movslq (%rsi),%rdx
cmp    $0x2f,%edx
jle    9378 <TIFFVGetFieldDefaulted+0x4e8>
mov    0x8(%rsi),%rdx
lea    0x8(%rdx),%rax
mov    %rax,0x8(%rsi)
mov    (%rdx),%rax
jmpq   9385 <TIFFVGetFieldDefaulted+0x4f5>
mov    0x350(%rcx),%rdx
test   %rdx,%rdx
je     93af <TIFFVGetFieldDefaulted+0x51f>
mov    -0x8(%rbp),%rsi
movslq (%rsi),%rcx
cmp    $0x2f,%ecx
jle    93eb <TIFFVGetFieldDefaulted+0x55b>
mov    0x8(%rsi),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rsi)
mov    (%rcx),%rax
jmpq   93f8 <TIFFVGetFieldDefaulted+0x568>
cmp    $0x14b,%edx
jbe    9405 <TIFFVGetFieldDefaulted+0x575>
cmp    $0x14c,%edx
jne    9413 <TIFFVGetFieldDefaulted+0x583>
mov    -0x8(%rbp),%rdx
movslq (%rdx),%rcx
cmp    $0x2f,%ecx
jle    9421 <TIFFVGetFieldDefaulted+0x591>
mov    0x8(%rdx),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rdx)
mov    (%rcx),%rax
jmpq   942e <TIFFVGetFieldDefaulted+0x59e>
cmp    $0x150,%edx
jne    943a <TIFFVGetFieldDefaulted+0x5aa>
mov    -0x8(%rbp),%rdi
movslq (%rdi),%rdx
cmp    $0x2f,%edx
jle    9448 <TIFFVGetFieldDefaulted+0x5b8>
mov    0x8(%rdi),%rdx
lea    0x8(%rdx),%rax
mov    %rax,0x8(%rdi)
mov    (%rdx),%rax
jmpq   9455 <TIFFVGetFieldDefaulted+0x5c5>
cmp    $0x211,%edx
je     947a <TIFFVGetFieldDefaulted+0x5ea>
leaveq 
retq   
mov    0x10(%rsi),%rax
mov    (%rax,%rdx,1),%rax
add    $0x8,%edx
mov    %edx,(%rsi)
movzwl 0x76(%rcx),%ecx
mov    %cx,(%rax)
mov    $0x1,%eax
leaveq 
retq   
cmp    $0x212,%edx
je     949e <TIFFVGetFieldDefaulted+0x60e>
leaveq 
retq   
cmp    $0x214,%edx
je     94c2 <TIFFVGetFieldDefaulted+0x632>
leaveq 
retq   
mov    0x10(%rsi),%rax
mov    (%rax,%rdx,1),%rax
add    $0x8,%edx
mov    %edx,(%rsi)
movzwl 0x10c(%rcx),%ecx
mov    %cx,(%rax)
mov    $0x1,%eax
leaveq 
retq   
cmp    $0x80e4,%edx
je     94f6 <TIFFVGetFieldDefaulted+0x666>
leaveq 
retq   
mov    0x10(%rdi),%rdx
mov    (%rdx,%rsi,1),%rdx
add    $0x8,%esi
mov    %esi,(%rdi)
movzwl 0xd4(%rcx),%esi
cmp    $0x1,%si
je     951a <TIFFVGetFieldDefaulted+0x68a>
mov    %ax,(%rdx)
mov    $0x1,%eax
leaveq 
retq   
mov    -0x8(%rbp),%rsi
movslq (%rsi),%rdx
cmp    $0x2f,%edx
jle    9538 <TIFFVGetFieldDefaulted+0x6a8>
mov    0x8(%rsi),%rdx
lea    0x8(%rdx),%rax
mov    %rax,0x8(%rsi)
mov    (%rdx),%rax
jmpq   9545 <TIFFVGetFieldDefaulted+0x6b5>
cmp    $0x101,%edx
jbe    9551 <TIFFVGetFieldDefaulted+0x6c1>
cmp    $0x102,%edx
jne    955f <TIFFVGetFieldDefaulted+0x6cf>
mov    -0x8(%rbp),%rsi
movslq (%rsi),%rdx
cmp    $0x2f,%edx
jle    956d <TIFFVGetFieldDefaulted+0x6dd>
mov    0x8(%rsi),%rdx
lea    0x8(%rdx),%rax
mov    %rax,0x8(%rsi)
mov    (%rdx),%rax
jmpq   957a <TIFFVGetFieldDefaulted+0x6ea>
cmp    $0x10a,%edx
je     9588 <TIFFVGetFieldDefaulted+0x6f8>
leaveq 
retq   
cmp    $0x115,%edx
je     95ac <TIFFVGetFieldDefaulted+0x71c>
leaveq 
retq   
mov    0x10(%rsi),%rax
mov    (%rax,%rdx,1),%rax
add    $0x8,%edx
mov    %edx,(%rsi)
movzwl 0x80(%rcx),%ecx
mov    %cx,(%rax)
mov    $0x1,%eax
leaveq 
retq   
cmp    $0x116,%edx
je     95d0 <TIFFVGetFieldDefaulted+0x740>
leaveq 
retq   
cmp    $0x119,%edx
je     95f4 <TIFFVGetFieldDefaulted+0x764>
leaveq 
retq   
mov    0x10(%rsi),%rax
mov    (%rax,%rdx,1),%rax
add    $0x8,%edx
mov    %edx,(%rsi)
movzwl 0x88(%rcx),%ecx
mov    %cx,(%rax)
mov    $0x1,%eax
leaveq 
retq   
cmp    $0x128,%edx
je     9618 <TIFFVGetFieldDefaulted+0x788>
leaveq 
retq   
mov    0x10(%rsi),%rax
mov    (%rax,%rdx,1),%rax
add    $0x8,%edx
mov    %edx,(%rsi)
movzwl 0xaa(%rcx),%ecx
mov    %cx,(%rax)
mov    $0x1,%eax
leaveq 
retq   
mov    %r15,-0x18(%rbp)
mov    %rcx,%r15
callq  9be0 <TIFFDefaultTransferFunction>
test   %eax,%eax
je     963c <TIFFVGetFieldDefaulted+0x7ac>
mov    %r15,%rcx
mov    -0x18(%rbp),%r15
jmpq   90fb <TIFFVGetFieldDefaulted+0x26b>
mov    0x10(%rsi),%rax
mov    (%rax,%rdx,1),%rax
add    $0x8,%edx
mov    %edx,(%rsi)
mov    0x110(%rcx),%rdx
mov    %rdx,(%rax)
movzwl 0x82(%rcx),%eax
movzwl 0xd4(%rcx),%edx
sub    %edx,%eax
cmp    $0x1,%eax
jg     965c <TIFFVGetFieldDefaulted+0x7cc>
mov    $0x1,%eax
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rcx),%rdi
mov    (%rcx),%rsi
lea    0x47c3e(%rip),%rdx        # 51000 <_fini+0xdc>
callq  8a00 <TIFFErrorExt@plt>
mov    -0x8(%rbp),%rdx
movslq (%rdx),%rcx
cmp    $0x2f,%ecx
jle    967c <TIFFVGetFieldDefaulted+0x7ec>
mov    0x8(%rdx),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rdx)
mov    (%rcx),%rax
jmpq   9689 <TIFFVGetFieldDefaulted+0x7f9>
mov    0x10(%rsi),%rax
mov    (%rax,%rcx,1),%rax
add    $0x8,%ecx
mov    %ecx,(%rsi)
movzwl (%rdx),%ecx
mov    %cx,(%rax)
mov    $0x1,%eax
leaveq 
retq   
cmp    $0x13e,%edx
je     9692 <TIFFVGetFieldDefaulted+0x802>
leaveq 
retq   
cmp    $0x14e,%edx
je     96d6 <TIFFVGetFieldDefaulted+0x846>
leaveq 
retq   
mov    0x10(%rdx),%rax
mov    (%rax,%rcx,1),%rax
add    $0x8,%ecx
mov    %ecx,(%rdx)
movw   $0x1,(%rax)
mov    $0x1,%eax
leaveq 
retq   
cmp    $0x152,%edx
je     96fa <TIFFVGetFieldDefaulted+0x86a>
leaveq 
retq   
mov    0x10(%rdi),%rax
mov    (%rax,%rdx,1),%rax
add    $0x8,%edx
mov    %edx,(%rdi)
movw   $0x0,(%rax)
movslq (%rdi),%rsi
cmp    $0x2f,%esi
jle    971e <TIFFVGetFieldDefaulted+0x88e>
mov    0x8(%rdi),%rdx
lea    0x8(%rdx),%rax
mov    %rax,0x8(%rdi)
mov    (%rdx),%rdx
jmpq   972b <TIFFVGetFieldDefaulted+0x89b>
mov    -0x8(%rbp),%rdx
movslq (%rdx),%rcx
cmp    $0x2f,%ecx
jle    9744 <TIFFVGetFieldDefaulted+0x8b4>
mov    0x8(%rdx),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rdx)
mov    (%rcx),%rax
jmpq   9751 <TIFFVGetFieldDefaulted+0x8c1>
mov    -0x8(%rbp),%rsi
movslq (%rsi),%rdx
cmp    $0x2f,%edx
jle    9762 <TIFFVGetFieldDefaulted+0x8d2>
mov    0x8(%rsi),%rdx
lea    0x8(%rdx),%rax
mov    %rax,0x8(%rsi)
mov    (%rdx),%rax
jmpq   976f <TIFFVGetFieldDefaulted+0x8df>
mov    0x128(%rcx),%rax
test   %rax,%rax
je     9799 <TIFFVGetFieldDefaulted+0x909>
mov    -0x8(%rbp),%rsi
movslq (%rsi),%rdx
cmp    $0x2f,%edx
jle    97af <TIFFVGetFieldDefaulted+0x91f>
mov    0x8(%rsi),%rdx
lea    0x8(%rdx),%rax
mov    %rax,0x8(%rsi)
mov    (%rdx),%rax
jmpq   97bc <TIFFVGetFieldDefaulted+0x92c>
mov    -0x8(%rbp),%rsi
movslq (%rsi),%rdx
cmp    $0x2f,%edx
jle    97cd <TIFFVGetFieldDefaulted+0x93d>
mov    0x8(%rsi),%rdx
lea    0x8(%rdx),%rax
mov    %rax,0x8(%rsi)
mov    (%rdx),%rax
jmpq   97da <TIFFVGetFieldDefaulted+0x94a>
mov    0xd8(%rcx),%rcx
movzwl (%rcx),%ecx
cmp    $0x1,%cx
jne    924e <TIFFVGetFieldDefaulted+0x3be>
mov    $0x1,%eax
jmpq   924e <TIFFVGetFieldDefaulted+0x3be>
mov    0x10(%rsi),%rax
mov    (%rax,%rdx,1),%rax
add    $0x8,%edx
mov    %edx,(%rsi)
mov    0x6c(%rcx),%ecx
mov    %ecx,(%rax)
mov    $0x1,%eax
leaveq 
retq   
cmp    $0xfe,%edx
je     97ee <TIFFVGetFieldDefaulted+0x95e>
leaveq 
retq   
cmp    $0x107,%edx
je     9812 <TIFFVGetFieldDefaulted+0x982>
leaveq 
retq   
mov    0x10(%rsi),%rax
mov    (%rax,%rdx,1),%rax
add    $0x8,%edx
mov    %edx,(%rsi)
movzwl 0x74(%rcx),%ecx
mov    %cx,(%rax)
mov    $0x1,%eax
leaveq 
retq   
mov    -0x8(%rbp),%rsi
movslq (%rsi),%rdx
cmp    $0x2f,%edx
jle    9836 <TIFFVGetFieldDefaulted+0x9a6>
mov    0x8(%rsi),%rdx
lea    0x8(%rdx),%rax
mov    %rax,0x8(%rsi)
mov    (%rdx),%rax
jmpq   9843 <TIFFVGetFieldDefaulted+0x9b3>
mov    -0x8(%rbp),%rsi
movslq (%rsi),%rdx
cmp    $0x2f,%edx
jle    9851 <TIFFVGetFieldDefaulted+0x9c1>
mov    0x8(%rsi),%rdx
lea    0x8(%rdx),%rax
mov    %rax,0x8(%rsi)
mov    (%rdx),%rax
jmpq   985e <TIFFVGetFieldDefaulted+0x9ce>
mov    -0x8(%rbp),%rsi
movslq (%rsi),%rdx
cmp    $0x2f,%edx
jle    986f <TIFFVGetFieldDefaulted+0x9df>
mov    0x8(%rsi),%rdx
lea    0x8(%rdx),%rax
mov    %rax,0x8(%rsi)
mov    (%rdx),%rax
jmpq   987c <TIFFVGetFieldDefaulted+0x9ec>
mov    -0x8(%rbp),%rsi
movslq (%rsi),%rdx
cmp    $0x2f,%edx
jle    988b <TIFFVGetFieldDefaulted+0x9fb>
mov    0x8(%rsi),%rdx
lea    0x8(%rdx),%rax
mov    %rax,0x8(%rsi)
mov    (%rdx),%rax
jmpq   9898 <TIFFVGetFieldDefaulted+0xa08>
mov    -0x8(%rbp),%rsi
movslq (%rsi),%rdx
cmp    $0x2f,%edx
jle    98a9 <TIFFVGetFieldDefaulted+0xa19>
mov    0x8(%rsi),%rdx
lea    0x8(%rdx),%rax
mov    %rax,0x8(%rsi)
mov    (%rdx),%rax
jmpq   98b6 <TIFFVGetFieldDefaulted+0xa26>
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
mov    (%r15),%rsi
lea    0x479e8(%rip),%rdx        # 51037 <_fini+0x113>
callq  8a00 <TIFFErrorExt@plt>
mov    -0x18(%rbp),%r15
xor    %eax,%eax
leaveq 
retq   
movslq (%rsi),%rdx
cmp    $0x2f,%edx
jle    98c7 <TIFFVGetFieldDefaulted+0xa37>
mov    0x8(%rsi),%rdx
lea    0x8(%rdx),%rax
mov    %rax,0x8(%rsi)
mov    (%rdx),%rax
jmpq   98d4 <TIFFVGetFieldDefaulted+0xa44>
mov    0x10(%rdx),%rax
mov    (%rax,%rcx,1),%rax
add    $0x8,%ecx
mov    %ecx,(%rdx)
movw   $0x0,(%rax)
xor    %eax,%eax
leaveq 
retq   
movss  0x47a1e(%rip),%xmm0        # 510b8 <_fini+0x194>
movss  %xmm0,0x711f2(%rip)        # 7a894 <whitepoint.11>
movss  0x47a0a(%rip),%xmm0        # 510b4 <_fini+0x190>
movss  %xmm0,0x711e6(%rip)        # 7a898 <whitepoint.11+0x4>
mov    -0x8(%rbp),%rdx
movslq (%rdx),%rcx
cmp    $0x2f,%ecx
jle    98fe <TIFFVGetFieldDefaulted+0xa6e>
mov    0x8(%rdx),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rdx)
mov    (%rcx),%rax
jmpq   990b <TIFFVGetFieldDefaulted+0xa7b>
mov    -0x8(%rbp),%rdx
movslq (%rdx),%rcx
cmp    $0x2f,%ecx
jle    991c <TIFFVGetFieldDefaulted+0xa8c>
mov    0x8(%rdx),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rdx)
mov    (%rcx),%rax
jmpq   9929 <TIFFVGetFieldDefaulted+0xa99>
mov    -0x8(%rbp),%rsi
movslq (%rsi),%rdx
cmp    $0x2f,%edx
jle    9935 <TIFFVGetFieldDefaulted+0xaa5>
mov    0x8(%rsi),%rdx
lea    0x8(%rdx),%rax
mov    %rax,0x8(%rsi)
mov    (%rdx),%rax
jmpq   9942 <TIFFVGetFieldDefaulted+0xab2>
mov    0x10(%rdi),%rax
mov    (%rax,%rsi,1),%rdx
lea    0x8(%rsi),%eax
mov    %eax,(%rdi)
movzwl 0x74(%rcx),%ecx
mov    $0x1,%eax
mov    %rax,%rsi
shl    %cl,%esi
lea    0xffff(%rsi),%ecx
mov    %cx,(%rdx)
leaveq 
retq   
mov    0x10(%rdx),%rax
mov    (%rax,%rcx,1),%rax
add    $0x8,%ecx
mov    %ecx,(%rdx)
lea    0x70f50(%rip),%rcx        # 7a6a8 <ycbcrcoeffs.10>
mov    %rcx,(%rax)
mov    $0x1,%eax
leaveq 
retq   
mov    0x10(%rsi),%rax
mov    (%rax,%rdx,1),%rax
add    $0x8,%edx
mov    %edx,(%rsi)
movzwl 0x108(%rcx),%edx
mov    %dx,(%rax)
movslq (%rsi),%rdx
cmp    $0x2f,%edx
jle    996c <TIFFVGetFieldDefaulted+0xadc>
mov    0x8(%rsi),%rdx
lea    0x8(%rdx),%rax
mov    %rax,0x8(%rsi)
mov    (%rdx),%rax
jmpq   9979 <TIFFVGetFieldDefaulted+0xae9>
callq  9e00 <TIFFDefaultRefBlackWhite>
test   %eax,%eax
je     998a <TIFFVGetFieldDefaulted+0xafa>
mov    -0x10(%rbp),%rcx
jmpq   94d2 <TIFFVGetFieldDefaulted+0x642>
mov    0x10(%rsi),%rax
mov    (%rax,%rdx,1),%rax
add    $0x8,%edx
mov    %edx,(%rsi)
mov    0x128(%rcx),%rcx
mov    %rcx,(%rax)
mov    $0x1,%eax
leaveq 
retq   
mov    0x10(%rsi),%rax
mov    (%rax,%rdx,1),%rax
add    $0x8,%edx
mov    %edx,(%rsi)
movzwl 0x76(%rcx),%ecx
add    $0xffff,%ecx
mov    %cx,(%rax)
mov    $0x1,%eax
leaveq 
retq   
mov    -0x8(%rbp),%rsi
movslq (%rsi),%rdx
cmp    $0x2f,%edx
jle    998e <TIFFVGetFieldDefaulted+0xafe>
mov    0x8(%rsi),%rdx
lea    0x8(%rdx),%rax
mov    %rax,0x8(%rsi)
mov    (%rdx),%rax
jmpq   999b <TIFFVGetFieldDefaulted+0xb0b>
mov    -0x8(%rbp),%rsi
movslq (%rsi),%rdx
cmp    $0x2f,%edx
jle    99a7 <TIFFVGetFieldDefaulted+0xb17>
mov    0x8(%rsi),%rdx
lea    0x8(%rdx),%rax
mov    %rax,0x8(%rsi)
mov    (%rdx),%rax
jmpq   99b4 <TIFFVGetFieldDefaulted+0xb24>
mov    0x10(%rsi),%rax
mov    (%rax,%rdx,1),%rax
add    $0x8,%edx
mov    %edx,(%rsi)
movzwl 0x7e(%rcx),%ecx
mov    %cx,(%rax)
mov    $0x1,%eax
leaveq 
retq   
mov    0x10(%rsi),%rax
mov    (%rax,%rdx,1),%rax
add    $0x8,%edx
mov    %edx,(%rsi)
movzwl 0x82(%rcx),%ecx
mov    %cx,(%rax)
mov    $0x1,%eax
leaveq 
retq   
mov    0x10(%rsi),%rax
mov    (%rax,%rdx,1),%rax
add    $0x8,%edx
mov    %edx,(%rsi)
mov    0x84(%rcx),%ecx
mov    %ecx,(%rax)
mov    $0x1,%eax
leaveq 
retq   
mov    0x10(%rsi),%rax
mov    (%rax,%rdx,1),%rax
add    $0x8,%edx
mov    %edx,(%rsi)
movzwl 0x8a(%rcx),%ecx
mov    %cx,(%rax)
mov    $0x1,%eax
leaveq 
retq   
mov    0x10(%rsi),%rax
mov    (%rax,%rdx,1),%rax
add    $0x8,%edx
mov    %edx,(%rsi)
movzwl 0xa8(%rcx),%ecx
mov    %cx,(%rax)
mov    $0x1,%eax
leaveq 
retq   
mov    0x10(%rsi),%rax
mov    (%rax,%rdx,1),%rax
add    $0x8,%edx
mov    %edx,(%rsi)
mov    0x118(%rcx),%rdx
mov    %rdx,(%rax)
movslq (%rsi),%rdx
cmp    $0x2f,%edx
jle    99c2 <TIFFVGetFieldDefaulted+0xb32>
mov    0x8(%rsi),%rdx
lea    0x8(%rdx),%rax
mov    %rax,0x8(%rsi)
mov    (%rdx),%rax
jmpq   99cf <TIFFVGetFieldDefaulted+0xb3f>
mov    0x10(%rdx),%rax
mov    (%rax,%rcx,1),%rax
add    $0x8,%ecx
mov    %ecx,(%rdx)
lea    0x70f82(%rip),%rcx        # 7a894 <whitepoint.11>
mov    %rcx,(%rax)
mov    $0x1,%eax
leaveq 
retq   
mov    0x10(%rdx),%rax
mov    (%rax,%rcx,1),%rax
add    $0x8,%ecx
mov    %ecx,(%rdx)
movw   $0x4,(%rax)
mov    $0x1,%eax
leaveq 
retq   
mov    0x10(%rsi),%rax
mov    (%rax,%rdx,1),%rax
add    $0x8,%edx
mov    %edx,(%rsi)
movzwl 0xd4(%rcx),%edx
mov    %dx,(%rax)
movslq (%rsi),%rdx
cmp    $0x2f,%edx
jle    99e0 <TIFFVGetFieldDefaulted+0xb50>
mov    0x8(%rsi),%rdx
lea    0x8(%rdx),%rax
mov    %rax,0x8(%rsi)
mov    (%rdx),%rax
jmpq   99ed <TIFFVGetFieldDefaulted+0xb5d>
mov    0x10(%rsi),%rax
mov    (%rax,%rdx,1),%rax
add    $0x8,%edx
mov    %edx,(%rsi)
movzwl 0x10a(%rcx),%ecx
mov    %cx,(%rax)
mov    $0x1,%eax
leaveq 
retq   
xor    %eax,%eax
leaveq 
retq   
mov    0x10(%rsi),%rax
mov    (%rax,%rdx,1),%rax
add    $0x8,%edx
mov    %edx,(%rsi)
mov    0x70(%rcx),%ecx
mov    %ecx,(%rax)
mov    $0x1,%eax
leaveq 
retq   
mov    0x10(%rsi),%rax
mov    (%rax,%rdx,1),%rax
add    $0x8,%edx
mov    %edx,(%rsi)
movzwl 0x7c(%rcx),%ecx
mov    %cx,(%rax)
mov    $0x1,%eax
leaveq 
retq   
mov    0x10(%rsi),%rax
mov    (%rax,%rdx,1),%rax
add    $0x8,%edx
mov    %edx,(%rsi)
mov    0x120(%rcx),%rcx
mov    %rcx,(%rax)
mov    $0x1,%eax
leaveq 
retq   
mov    0x10(%rsi),%rax
mov    (%rax,%rdx,1),%rax
add    $0x8,%edx
mov    %edx,(%rsi)
mov    0xd8(%rcx),%rcx
mov    %rcx,(%rax)
mov    $0x1,%eax
leaveq 
retq   
xchg   %ax,%ax

0000000000009a00 <_TIFFMultiply32>:
push   %rbp
mov    %rsp,%rbp
mov    %rdx,%rax
imul   %esi,%eax
test   %edx,%edx
jne    9a10 <_TIFFMultiply32+0x10>
leaveq 
retq   
mov    %rdx,%r9
xor    %edx,%edx
mov    %rax,%r8
div    %r9d
cmp    %esi,%eax
jne    9a24 <_TIFFMultiply32+0x24>
mov    %r8,%rax
leaveq 
retq   
mov    0x3b8(%rdi),%rdi
lea    0x47629(%rip),%rdx        # 5105b <_fini+0x137>
xor    %eax,%eax
mov    %rcx,%rsi
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   

0000000000009a40 <_TIFFMultiply64>:
push   %rbp
mov    %rsp,%rbp
mov    %rdx,%rax
imul   %rsi,%rax
test   %rdx,%rdx
jne    9a52 <_TIFFMultiply64+0x12>
leaveq 
retq   
mov    %rdx,%r9
xor    %edx,%edx
mov    %rax,%r8
div    %r9
cmp    %rsi,%rax
jne    9a67 <_TIFFMultiply64+0x27>
mov    %r8,%rax
leaveq 
retq   
mov    0x3b8(%rdi),%rdi
lea    0x475e6(%rip),%rdx        # 5105b <_fini+0x137>
xor    %eax,%eax
mov    %rcx,%rsi
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

0000000000009a90 <_TIFFCheckMalloc>:
push   %rbp
mov    %rsp,%rbp
mov    %rcx,%r8
mov    %rdx,%rcx
mov    %rsi,%rdx
xor    %esi,%esi
callq  8d00 <_TIFFCheckRealloc@plt>
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)

0000000000009ab0 <_TIFFCheckRealloc>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
xor    %eax,%eax
test   %rdx,%rdx
jne    9ac6 <_TIFFCheckRealloc+0x16>
test   %rax,%rax
je     9aed <_TIFFCheckRealloc+0x3d>
leaveq 
retq   
test   %rcx,%rcx
je     9abf <_TIFFCheckRealloc+0xf>
mov    %rax,%r9
mov    %rdx,%r10
mov    %r10,%rax
imul   %rcx,%rax
cqto   
mov    %rax,%r11
idiv   %rcx
cmp    %rax,%r10
je     9b2b <_TIFFCheckRealloc+0x7b>
mov    %r9,%rax
mov    %r10,%rdx
jmp    9abf <_TIFFCheckRealloc+0xf>
xor    %r10d,%r10d
mov    0x3b8(%rdi),%r9
mov    (%rdi),%rsi
lea    0x47571(%rip),%rdi        # 51072 <_fini+0x14e>
mov    %r15,-0x20(%rbp)
mov    %rax,%r15
mov    %r10,%rax
mov    %r8,%r10
mov    %rdx,%r8
mov    %rdi,%rdx
mov    %r9,%rdi
mov    %rcx,%r9
mov    %r10,%rcx
callq  8a00 <TIFFErrorExt@plt>
mov    %r15,%rax
mov    -0x20(%rbp),%r15
leaveq 
retq   
mov    %rdi,-0x20(%rbp)
mov    %r8,-0x8(%rbp)
mov    %r10,-0x10(%rbp)
mov    %rcx,-0x18(%rbp)
mov    %rsi,%rdi
mov    %r11,%rsi
callq  8100 <_TIFFrealloc@plt>
mov    -0x18(%rbp),%rcx
mov    -0x10(%rbp),%rdx
mov    -0x8(%rbp),%r8
mov    -0x20(%rbp),%rdi
jmpq   9abf <_TIFFCheckRealloc+0xf>
nopl   0x0(%rax,%rax,1)

0000000000009b60 <_TIFFUInt64ToDouble>:
push   %rbp
mov    %rsp,%rbp
cvtsi2sd %rdi,%xmm0
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

0000000000009b70 <_TIFFUInt64ToFloat>:
push   %rbp
mov    %rsp,%rbp
cvtsi2ss %rdi,%xmm0
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

0000000000009b80 <_TIFFSeekOK>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
xor    %eax,%eax
movabs $0x7fffffffffffffff,%rcx
cmp    %rcx,%rsi
jbe    9b9b <_TIFFSeekOK+0x1b>
leaveq 
retq   
mov    0x3d0(%rdi),%rcx
mov    0x3b8(%rdi),%rdi
mov    %rsi,%rdx
mov    %r15,-0x8(%rbp)
mov    %rsi,%r15
mov    %rdx,%rsi
mov    %rax,%rdx
callq  *%rcx
cmp    %rax,%r15
jne    9bcb <_TIFFSeekOK+0x4b>
mov    $0x1,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
xor    %eax,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

0000000000009be0 <TIFFDefaultTransferFunction>:
push   %rbp
mov    %rsp,%rbp
sub    $0x40,%rsp
movq   $0x0,0xe8(%rdi)
movq   $0x0,0xe0(%rdi)
movq   $0x0,0xd8(%rdi)
xor    %eax,%eax
movzwl 0x3c(%rdi),%ecx
cmp    $0x3d,%cx
jbe    9c17 <TIFFDefaultTransferFunction+0x37>
leaveq 
retq   
mov    %r14,%rax
mov    %r12,%r14
mov    %rdi,%r12
mov    $0x2,%edi
shl    %cl,%rdi
mov    %rcx,-0x40(%rbp)
mov    %rdi,-0x28(%rbp)
mov    %r15,-0x20(%rbp)
mov    %rax,%r15
callq  8440 <_TIFFmalloc@plt>
mov    %rax,0xd8(%r12)
test   %rax,%rax
jne    9c57 <TIFFDefaultTransferFunction+0x77>
mov    %r14,%r12
mov    %r15,%r14
xor    %eax,%eax
mov    -0x20(%rbp),%r15
leaveq 
retq   
mov    %r13,%rdx
mov    %r15,%rsi
mov    $0x1,%r15d
mov    -0x40(%rbp),%rcx
mov    %r15,%r13
shl    %cl,%r13
cvtsi2sd %r13,%xmm2
movsd  0x47446(%rip),%xmm0        # 510c0 <_fini+0x19c>
subsd  %xmm0,%xmm2
movsd  0x47442(%rip),%xmm1        # 510c8 <_fini+0x1a4>
movw   $0x0,(%rax)
mov    %r14,-0x8(%rbp)
mov    %rdx,-0x10(%rbp)
mov    %rsi,-0x18(%rbp)
jmp    9cec <TIFFDefaultTransferFunction+0x10c>
cvtsi2sd %r15,%xmm0
divsd  %xmm2,%xmm0
movdqu %xmm2,-0x40(%rbp)
mov    0xd8(%r12),%r14
callq  8560 <pow@plt>
movsd  0x47414(%rip),%xmm1        # 510d0 <_fini+0x1ac>
mulsd  %xmm1,%xmm0
movsd  0x47410(%rip),%xmm1        # 510d8 <_fini+0x1b4>
addsd  %xmm1,%xmm0
callq  8b80 <floor@plt>
cvttsd2si %xmm0,%rax
mov    %ax,(%r14,%r15,2)
add    $0x1,%r15
movsd  0x473e1(%rip),%xmm1        # 510c8 <_fini+0x1a4>
movdqu -0x40(%rbp),%xmm2
cmp    %r13,%r15
jl     9c99 <TIFFDefaultTransferFunction+0xb9>
movzwl 0x4a(%r12),%eax
movzwl 0x9c(%r12),%ecx
sub    %ecx,%eax
cmp    $0x1,%eax
jg     9d1e <TIFFDefaultTransferFunction+0x13e>
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
mov    $0x1,%eax
mov    -0x20(%rbp),%r15
leaveq 
retq   
mov    -0x28(%rbp),%r13
mov    %r13,%rdi
callq  8440 <_TIFFmalloc@plt>
mov    %rax,0xe0(%r12)
test   %rax,%rax
je     9d89 <TIFFDefaultTransferFunction+0x1a9>
mov    %rax,%rdi
mov    0xd8(%r12),%rsi
mov    %r13,%rdx
callq  8790 <_TIFFmemcpy@plt>
mov    %r13,%rdi
callq  8440 <_TIFFmalloc@plt>
mov    %rax,0xe8(%r12)
test   %rax,%rax
je     9d89 <TIFFDefaultTransferFunction+0x1a9>
mov    0xd8(%r12),%rsi
mov    %r13,%rdx
mov    %rax,%rdi
callq  8790 <_TIFFmemcpy@plt>
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
mov    $0x1,%eax
mov    -0x20(%rbp),%r15
leaveq 
retq   
mov    0xd8(%r12),%rdi
test   %rdi,%rdi
je     9d9b <TIFFDefaultTransferFunction+0x1bb>
callq  8bb0 <_TIFFfree@plt>
mov    0xe0(%r12),%rdi
test   %rdi,%rdi
je     9dad <TIFFDefaultTransferFunction+0x1cd>
callq  8bb0 <_TIFFfree@plt>
mov    0xe8(%r12),%rdi
test   %rdi,%rdi
je     9dbf <TIFFDefaultTransferFunction+0x1df>
callq  8bb0 <_TIFFfree@plt>
movq   $0x0,0xe8(%r12)
movq   $0x0,0xe0(%r12)
movq   $0x0,0xd8(%r12)
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
xor    %eax,%eax
mov    -0x20(%rbp),%r15
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

0000000000009e00 <TIFFDefaultRefBlackWhite>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x8(%rbp)
mov    %rdi,%r15
mov    $0x18,%edi
callq  8440 <_TIFFmalloc@plt>
mov    %rax,0xf0(%r15)
xor    %edx,%edx
test   %rax,%rax
jne    9e30 <TIFFDefaultRefBlackWhite+0x30>
mov    %rdx,%rax
mov    -0x8(%rbp),%r15
leaveq 
retq   
xorpd  %xmm1,%xmm1
mov    $0x1,%ecx
movzwl 0x42(%r15),%esi
cmp    $0x6,%si
je     9e4c <TIFFDefaultRefBlackWhite+0x4c>
mov    %rcx,%rax
mov    %rdx,%rsi
jmp    9ecb <TIFFDefaultRefBlackWhite+0xcb>
movss  %xmm1,(%rax)
movss  0x4728c(%rip),%xmm0        # 510e4 <_fini+0x1c0>
mov    0xf0(%r15),%rax
movss  %xmm0,0x14(%rax)
movss  %xmm0,0xc(%rax)
movss  %xmm0,0x4(%rax)
movss  0x4726a(%rip),%xmm0        # 510e0 <_fini+0x1bc>
mov    0xf0(%r15),%rax
movss  %xmm0,0x10(%rax)
movss  %xmm0,0x8(%rax)
mov    %rcx,%rax
mov    -0x8(%rbp),%r15
leaveq 
retq   
mov    0xf0(%r15),%rdi
movslq %edx,%rcx
movss  %xmm1,(%rdi,%rcx,4)
movzwl 0x3c(%r15),%ecx
mov    %rax,%rdi
shl    %cl,%rdi
lea    -0x1(%rdi),%rcx
cvtsi2ss %rcx,%xmm0
mov    0xf0(%r15),%rdi
lea    0x1(%rdx),%ecx
movslq %ecx,%rcx
movss  %xmm0,(%rdi,%rcx,4)
add    $0x1,%esi
add    $0x2,%edx
cmp    $0x2,%esi
jle    9e90 <TIFFDefaultRefBlackWhite+0x90>
mov    -0x8(%rbp),%r15
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)

0000000000009ee0 <TIFFCleanup>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    %r15,-0x28(%rbp)
mov    %r14,-0x20(%rbp)
movslq 0xc(%rdi),%rax
test   %eax,%eax
jne    9f03 <TIFFCleanup+0x23>
mov    %r12,%r14
mov    %rbx,%r12
mov    %rdi,%rbx
jmp    9f11 <TIFFCleanup+0x31>
mov    %r12,%r14
mov    %rbx,%r12
mov    %rdi,%rbx
callq  8760 <TIFFFlush@plt>
mov    %rbx,%rdi
callq  *0x338(%rbx)
mov    %rbx,%rdi
callq  8510 <TIFFFreeDirectory@plt>
mov    0x28(%rbx),%rdi
test   %rdi,%rdi
je     9f4d <TIFFCleanup+0x6d>
callq  8bb0 <_TIFFfree@plt>
jmp    9f4d <TIFFCleanup+0x6d>
mov    (%r15),%rax
mov    %rax,0x420(%rbx)
mov    0x10(%r15),%rdi
callq  8bb0 <_TIFFfree@plt>
mov    %r15,%rdi
callq  8bb0 <_TIFFfree@plt>
mov    0x420(%rbx),%r15
test   %r15,%r15
jne    9f32 <TIFFCleanup+0x52>
mov    0x368(%rbx),%rdi
test   %rdi,%rdi
je     9f76 <TIFFCleanup+0x96>
mov    0x10(%rbx),%eax
and    $0x200,%eax
test   %eax,%eax
je     9f76 <TIFFCleanup+0x96>
callq  8bb0 <_TIFFfree@plt>
mov    0x10(%rbx),%eax
and    $0x800,%eax
test   %eax,%eax
je     9fa0 <TIFFCleanup+0xc0>
mov    0x3b0(%rbx),%rax
mov    0x3b8(%rbx),%rdi
mov    0x398(%rbx),%rsi
mov    0x3a0(%rbx),%rdx
callq  *%rax
xor    %r15d,%r15d
mov    0x3f0(%rbx),%rax
test   %rax,%rax
je     a03b <TIFFCleanup+0x15b>
mov    0x3f8(%rbx),%rax
test   %rax,%rax
je     a03b <TIFFCleanup+0x15b>
lea    0x47122(%rip),%rax        # 510e8 <_fini+0x1c4>
mov    $0x4,%edx
mov    %r12,-0x8(%rbp)
mov    %r14,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %rax,%r12
jmp    a011 <TIFFCleanup+0x131>
mov    0x3f0(%rbx),%rcx
mov    %r15d,%eax
mov    (%rcx,%rax,8),%r13
movzwl 0x18(%r13),%eax
cmp    $0x41,%ax
jne    a00d <TIFFCleanup+0x12d>
mov    0x20(%r13),%r14
mov    %r12,%rdi
mov    %r14,%rsi
callq  8120 <strncmp@plt>
test   %eax,%eax
je     a05f <TIFFCleanup+0x17f>
mov    $0x4,%edx
add    $0x1,%r15d
mov    0x3f8(%rbx),%rcx
mov    %r15d,%eax
cmp    %rax,%rcx
ja     9fdc <TIFFCleanup+0xfc>
mov    0x3f0(%rbx),%rdi
callq  8bb0 <_TIFFfree@plt>
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r12
xor    %r15d,%r15d
mov    0x430(%rbx),%rax
test   %rax,%rax
jne    a09c <TIFFCleanup+0x1bc>
mov    %rbx,%rdi
callq  8bb0 <_TIFFfree@plt>
mov    %r12,%rbx
mov    %r14,%r12
mov    -0x20(%rbp),%r14
mov    -0x28(%rbp),%r15
leaveq 
retq   
mov    %r14,%rdi
callq  8bb0 <_TIFFfree@plt>
mov    %r13,%rdi
callq  8bb0 <_TIFFfree@plt>
mov    $0x4,%edx
jmp    a00d <TIFFCleanup+0x12d>
mov    %r15d,%eax
lea    (%rax,%rax,2),%rax
shl    $0x3,%rax
add    0x428(%rbx),%rax
mov    0x4(%rax),%ecx
test   %ecx,%ecx
je     a098 <TIFFCleanup+0x1b8>
mov    0x10(%rax),%rdi
callq  8bb0 <_TIFFfree@plt>
add    $0x1,%r15d
mov    0x430(%rbx),%rcx
mov    %r15d,%eax
cmp    %rax,%rcx
ja     a076 <TIFFCleanup+0x196>
mov    0x428(%rbx),%rdi
callq  8bb0 <_TIFFfree@plt>
jmp    a047 <TIFFCleanup+0x167>
nopl   0x0(%rax)

000000000000a0c0 <TIFFClose>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    0x3d8(%rdi),%r15
mov    0x3b8(%rdi),%r14
callq  8a70 <TIFFCleanup@plt>
mov    %r14,%rdi
callq  *%r15
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)
nopl   (%rax)

000000000000a100 <TIFFIsCODECConfigured>:
push   %rbp
mov    %rsp,%rbp
callq  8530 <TIFFFindCODEC@plt>
test   %rax,%rax
jne    a112 <TIFFIsCODECConfigured+0x12>
xor    %eax,%eax
leaveq 
retq   
mov    0x10(%rax),%rax
test   %rax,%rax
jne    a11f <TIFFIsCODECConfigured+0x1f>
xor    %eax,%eax
leaveq 
retq   
lea    0x1a(%rip),%rcx        # a140 <NotConfigured>
cmp    %rcx,%rax
je     a132 <TIFFIsCODECConfigured+0x32>
mov    $0x1,%eax
leaveq 
retq   
xor    %eax,%eax
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)

000000000000a140 <NotConfigured>:
push   %rbp
mov    %rsp,%rbp
lea    0x35(%rip),%rax        # a180 <_notConfigured>
mov    %rax,0x2c0(%rdi)
movl   $0x0,0x2b8(%rdi)
mov    %rax,0x2c8(%rdi)
movl   $0x0,0x2e0(%rdi)
mov    %rax,0x2d8(%rdi)
mov    $0x1,%eax
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

000000000000a180 <_notConfigured>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    %r15,-0x10(%rbp)
mov    %r14,-0x8(%rbp)
mov    %rdi,%r14
movzwl 0x78(%r14),%edi
callq  8530 <TIFFFindCODEC@plt>
mov    %rax,%r15
xor    %eax,%eax
lea    -0x24(%rbp),%rdi
lea    0x46fe5(%rip),%rsi        # 51192 <_fini+0x26e>
movzwl 0x78(%r14),%edx
callq  8c10 <sprintf@plt>
mov    0x3b8(%r14),%rdi
mov    (%r14),%rsi
test   %r15,%r15
jne    a1cc <_notConfigured+0x4c>
lea    -0x24(%rbp),%rcx
jmp    a1cf <_notConfigured+0x4f>
mov    (%r15),%rcx
xor    %eax,%eax
lea    0x46fbd(%rip),%rdx        # 51195 <_fini+0x271>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x8(%rbp),%r14
mov    -0x10(%rbp),%r15
leaveq 
retq   
nopl   0x0(%rax)

000000000000a1f0 <TIFFCIELabToRGBInit>:
push   %rbp
mov    %rsp,%rbp
sub    $0x40,%rsp
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %rdx,%r12
mov    %rdi,%r13
movl   $0x5dc,0x0(%r13)
lea    0x1c(%r13),%rdi
mov    $0x54,%edx
callq  8790 <_TIFFmemcpy@plt>
movsd  0x46f90(%rip),%xmm1        # 511c0 <_fini+0x29c>
movss  0x64(%r13),%xmm0
cvtss2sd %xmm0,%xmm0
divsd  %xmm0,%xmm1
movdqu %xmm1,-0x40(%rbp)
movss  0x40(%r13),%xmm0
subss  0x58(%r13),%xmm0
movslq 0x0(%r13),%rax
cvtsi2ss %eax,%xmm2
divss  %xmm2,%xmm0
movss  %xmm0,0x4(%r13)
xor    %ebx,%ebx
mov    %rbx,%r14
jmp    a2a1 <TIFFCIELabToRGBInit+0xb1>
cvtsi2sd %r14d,%xmm0
cvtsi2sd %eax,%xmm2
divsd  %xmm2,%xmm0
mov    0x4c(%r13),%r15d
callq  8560 <pow@plt>
cvtsd2ss %xmm0,%xmm0
mov    %r15d,%eax
cvtsi2ss %rax,%xmm1
mulss  %xmm1,%xmm0
movslq %r14d,%rax
movss  %xmm0,0x70(%r13,%rax,4)
add    $0x1,%r14d
movdqu -0x40(%rbp),%xmm1
movslq 0x0(%r13),%rax
cmp    %r14d,%eax
jge    a268 <TIFFCIELabToRGBInit+0x78>
movss  0x68(%r13),%xmm0
cvtss2sd %xmm0,%xmm0
movsd  0x46f04(%rip),%xmm1        # 511c0 <_fini+0x29c>
divsd  %xmm0,%xmm1
movdqu %xmm1,-0x40(%rbp)
movss  0x40(%r13),%xmm0
subss  0x58(%r13),%xmm0
movslq 0x0(%r13),%rax
cvtsi2ss %eax,%xmm2
divss  %xmm2,%xmm0
movss  %xmm0,0x8(%r13)
mov    %rbx,%r14
jmp    a324 <TIFFCIELabToRGBInit+0x134>
cvtsi2sd %r14d,%xmm0
cvtsi2sd %eax,%xmm2
divsd  %xmm2,%xmm0
mov    0x50(%r13),%r15d
callq  8560 <pow@plt>
cvtsd2ss %xmm0,%xmm0
mov    %r15d,%eax
cvtsi2ss %rax,%xmm1
mulss  %xmm1,%xmm0
movslq %r14d,%rax
movss  %xmm0,0x17e4(%r13,%rax,4)
add    $0x1,%r14d
movdqu -0x40(%rbp),%xmm1
movslq 0x0(%r13),%rax
cmp    %r14d,%eax
jge    a2e8 <TIFFCIELabToRGBInit+0xf8>
movss  0x6c(%r13),%xmm0
cvtss2sd %xmm0,%xmm0
movsd  0x46e81(%rip),%xmm1        # 511c0 <_fini+0x29c>
divsd  %xmm0,%xmm1
movdqu %xmm1,-0x40(%rbp)
movss  0x40(%r13),%xmm0
subss  0x58(%r13),%xmm0
movslq 0x0(%r13),%rax
cvtsi2ss %eax,%xmm2
divss  %xmm2,%xmm0
movss  %xmm0,0xc(%r13)
mov    %rbx,%r14
jmp    a3a7 <TIFFCIELabToRGBInit+0x1b7>
cvtsi2sd %r14d,%xmm0
cvtsi2sd %eax,%xmm2
divsd  %xmm2,%xmm0
mov    0x54(%r13),%r15d
callq  8560 <pow@plt>
cvtsd2ss %xmm0,%xmm0
mov    %r15d,%eax
cvtsi2ss %rax,%xmm1
mulss  %xmm1,%xmm0
movslq %r14d,%rax
movss  %xmm0,0x2f58(%r13,%rax,4)
add    $0x1,%r14d
movdqu -0x40(%rbp),%xmm1
movslq 0x0(%r13),%rax
cmp    %r14d,%eax
jge    a36b <TIFFCIELabToRGBInit+0x17b>
movss  (%r12),%xmm0
movss  %xmm0,0x10(%r13)
movss  0x4(%r12),%xmm0
movss  %xmm0,0x14(%r13)
movss  0x8(%r12),%xmm0
movss  %xmm0,0x18(%r13)
mov    %rbx,%rax
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
leaveq 
retq   
nop

000000000000a3f0 <TIFFCIELabToXYZ>:
push   %rbp
mov    %rsp,%rbp
movss  0x46dd4(%rip),%xmm2        # 511d0 <_fini+0x2ac>
mov    %esi,%eax
cvtsi2ss %rax,%xmm0
movss  0x46dc9(%rip),%xmm1        # 511d4 <_fini+0x2b0>
mulss  %xmm1,%xmm0
movss  0x46dc1(%rip),%xmm1        # 511d8 <_fini+0x2b4>
divss  %xmm1,%xmm0
movss  0x46dd1(%rip),%xmm1        # 511f4 <_fini+0x2d0>
ucomiss %xmm1,%xmm0
jp     a42a <TIFFCIELabToXYZ+0x3a>
jb     a45a <TIFFCIELabToXYZ+0x6a>
movss  0x46dae(%rip),%xmm1        # 511e0 <_fini+0x2bc>
addss  %xmm1,%xmm0
movss  0x46da6(%rip),%xmm1        # 511e4 <_fini+0x2c0>
divss  %xmm1,%xmm0
movapd %xmm0,%xmm1
mulss  0x14(%rdi),%xmm1
mulss  %xmm0,%xmm1
mulss  %xmm0,%xmm1
movss  %xmm1,(%r9)
jmp    a485 <TIFFCIELabToXYZ+0x95>
mulss  0x14(%rdi),%xmm0
movss  0x46d75(%rip),%xmm1        # 511dc <_fini+0x2b8>
divss  %xmm1,%xmm0
movss  %xmm0,(%r9)
divss  0x14(%rdi),%xmm0
mulss  %xmm2,%xmm0
movss  0x46d6b(%rip),%xmm1        # 511ec <_fini+0x2c8>
addss  %xmm1,%xmm0
movss  0x46d3f(%rip),%xmm4        # 511cc <_fini+0x2a8>
cvtsi2ss %edx,%xmm1
movss  0x46d57(%rip),%xmm3        # 511f0 <_fini+0x2cc>
divss  %xmm3,%xmm1
addss  %xmm0,%xmm1
movss  0x46d3f(%rip),%xmm5        # 511e8 <_fini+0x2c4>
ucomiss %xmm5,%xmm1
jp     a4b0 <TIFFCIELabToXYZ+0xc0>
jb     a4c3 <TIFFCIELabToXYZ+0xd3>
movapd %xmm1,%xmm3
mulss  0x10(%rdi),%xmm3
mulss  %xmm1,%xmm3
mulss  %xmm3,%xmm1
jmp    a4d0 <TIFFCIELabToXYZ+0xe0>
subss  %xmm4,%xmm1
mulss  0x10(%rdi),%xmm1
divss  %xmm2,%xmm1
movss  %xmm1,(%r8)
cvtsi2ss %ecx,%xmm1
movss  0x46ce7(%rip),%xmm3        # 511c8 <_fini+0x2a4>
divss  %xmm3,%xmm1
subss  %xmm1,%xmm0
ucomiss %xmm5,%xmm0
jp     a4f0 <TIFFCIELabToXYZ+0x100>
jb     a50b <TIFFCIELabToXYZ+0x11b>
movapd %xmm0,%xmm1
mulss  0x18(%rdi),%xmm1
mulss  %xmm0,%xmm1
mulss  %xmm1,%xmm0
mov    0x10(%rbp),%rax
movss  %xmm0,(%rax)
leaveq 
retq   
subss  %xmm4,%xmm0
mulss  0x18(%rdi),%xmm0
divss  %xmm2,%xmm0
jmp    a501 <TIFFCIELabToXYZ+0x111>
nopw   0x0(%rax,%rax,1)

000000000000a520 <TIFFXYZToRGB>:
push   %rbp
mov    %rsp,%rbp
movss  0x28(%rdi),%xmm4
movss  0x2c(%rdi),%xmm7
movss  0x30(%rdi),%xmm8
movss  0x34(%rdi),%xmm6
movss  0x38(%rdi),%xmm10
movss  0x3c(%rdi),%xmm9
movapd %xmm1,%xmm3
mulss  0x20(%rdi),%xmm3
movapd %xmm0,%xmm5
mulss  0x1c(%rdi),%xmm5
addss  %xmm5,%xmm3
movapd %xmm2,%xmm5
mulss  0x24(%rdi),%xmm5
addss  %xmm3,%xmm5
movss  0x58(%rdi),%xmm11
ucomiss %xmm5,%xmm11
jp     a576 <TIFFXYZToRGB+0x56>
jb     a57b <TIFFXYZToRGB+0x5b>
movapd %xmm11,%xmm5
movapd %xmm1,%xmm3
mulss  %xmm7,%xmm3
mulss  %xmm0,%xmm4
addss  %xmm4,%xmm3
movapd %xmm2,%xmm4
mulss  %xmm8,%xmm4
addss  %xmm3,%xmm4
movss  0x5c(%rdi),%xmm3
ucomiss %xmm4,%xmm3
jp     a5a4 <TIFFXYZToRGB+0x84>
jb     a5a8 <TIFFXYZToRGB+0x88>
movapd %xmm3,%xmm4
mulss  %xmm10,%xmm1
mulss  %xmm6,%xmm0
addss  %xmm0,%xmm1
mulss  %xmm9,%xmm2
addss  %xmm1,%xmm2
movss  0x60(%rdi),%xmm0
ucomiss %xmm2,%xmm0
jp     a5ca <TIFFXYZToRGB+0xaa>
jb     a5ce <TIFFXYZToRGB+0xae>
movapd %xmm0,%xmm2
movss  0x40(%rdi),%xmm3
ucomiss %xmm5,%xmm3
jbe    a5dc <TIFFXYZToRGB+0xbc>
movapd %xmm5,%xmm3
movss  0x44(%rdi),%xmm1
ucomiss %xmm4,%xmm1
jbe    a5ea <TIFFXYZToRGB+0xca>
movapd %xmm4,%xmm1
movss  0x48(%rdi),%xmm0
ucomiss %xmm2,%xmm0
jbe    a5f8 <TIFFXYZToRGB+0xd8>
movapd %xmm2,%xmm0
subss  %xmm11,%xmm3
divss  0x4(%rdi),%xmm3
cvttss2si %xmm3,%eax
movslq (%rdi),%r8
cmp    %eax,%r8d
jge    a611 <TIFFXYZToRGB+0xf1>
mov    %r8,%rax
movsd  0x46bdf(%rip),%xmm3        # 511f8 <_fini+0x2d4>
movslq %eax,%rax
movss  0x70(%rdi,%rax,4),%xmm2
xorpd  %xmm4,%xmm4
ucomiss %xmm4,%xmm2
ja     a635 <TIFFXYZToRGB+0x115>
cvtss2sd %xmm2,%xmm2
subsd  %xmm3,%xmm2
jmp    a63d <TIFFXYZToRGB+0x11d>
cvtss2sd %xmm2,%xmm2
addsd  %xmm3,%xmm2
cvttsd2si %xmm2,%rax
mov    %eax,(%rsi)
subss  0x5c(%rdi),%xmm1
divss  0x8(%rdi),%xmm1
cvttss2si %xmm1,%eax
movslq (%rdi),%r8
cmp    %eax,%r8d
jge    a65d <TIFFXYZToRGB+0x13d>
mov    %r8,%rax
movslq %eax,%rax
movss  0x17e4(%rdi,%rax,4),%xmm1
ucomiss %xmm4,%xmm1
ja     a678 <TIFFXYZToRGB+0x158>
cvtss2sd %xmm1,%xmm1
subsd  %xmm3,%xmm1
jmp    a680 <TIFFXYZToRGB+0x160>
cvtss2sd %xmm1,%xmm1
addsd  %xmm3,%xmm1
cvttsd2si %xmm1,%rax
mov    %eax,(%rdx)
subss  0x60(%rdi),%xmm0
divss  0xc(%rdi),%xmm0
cvttss2si %xmm0,%eax
movslq (%rdi),%r8
cmp    %eax,%r8d
jge    a6a0 <TIFFXYZToRGB+0x180>
mov    %r8,%rax
movslq %eax,%rax
movss  0x2f58(%rdi,%rax,4),%xmm0
ucomiss %xmm4,%xmm0
ja     a6bb <TIFFXYZToRGB+0x19b>
cvtss2sd %xmm0,%xmm0
subsd  %xmm3,%xmm0
jmp    a6c3 <TIFFXYZToRGB+0x1a3>
cvtss2sd %xmm0,%xmm0
addsd  %xmm3,%xmm0
cvttsd2si %xmm0,%rax
mov    %eax,(%rcx)
mov    (%rsi),%r8d
mov    0x4c(%rdi),%eax
cmp    %r8d,%eax
jbe    a6d8 <TIFFXYZToRGB+0x1b8>
mov    %r8,%rax
mov    %eax,(%rsi)
mov    (%rdx),%esi
mov    0x50(%rdi),%eax
cmp    %esi,%eax
jbe    a6e6 <TIFFXYZToRGB+0x1c6>
mov    %rsi,%rax
mov    %eax,(%rdx)
mov    (%rcx),%edx
mov    0x54(%rdi),%eax
cmp    %edx,%eax
jbe    a6f4 <TIFFXYZToRGB+0x1d4>
mov    %rdx,%rax
mov    %eax,(%rcx)
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

000000000000a700 <TIFFYCbCrToRGBInit>:
push   %rbp
mov    %rsp,%rbp
sub    $0x80,%rsp
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rsi,%r12
mov    %rbx,%r13
mov    %rdi,%rbx
mov    %rdx,%r15
mov    %r15,-0x68(%rbp)
xor    %r14d,%r14d
lea    0x30(%rbx),%rdi
mov    $0x100,%edx
mov    %r14,%rsi
callq  88e0 <_TIFFmemset@plt>
lea    0x130(%rbx),%rdx
mov    %rdx,(%rbx)
mov    %r14,%rax
jmp    a757 <TIFFYCbCrToRGBInit+0x57>
movslq %eax,%rcx
mov    %al,(%rdx,%rcx,1)
add    $0x1,%eax
cmp    $0xff,%eax
jle    a74e <TIFFYCbCrToRGBInit+0x4e>
lea    0x230(%rbx),%rdi
mov    $0xff,%esi
mov    $0x200,%edx
callq  88e0 <_TIFFmemset@plt>
lea    0x430(%rbx),%rax
mov    %rax,0x8(%rbx)
lea    0x830(%rbx),%rax
mov    %rax,0x10(%rbx)
lea    0xc30(%rbx),%rax
mov    %rax,0x18(%rbx)
lea    0x1030(%rbx),%rax
mov    %rax,0x20(%rbx)
lea    0x1430(%rbx),%rax
mov    %rax,0x28(%rbx)
movss  0x46a65(%rip),%xmm5        # 51218 <_fini+0x2f4>
movss  (%r12),%xmm1
movapd %xmm1,%xmm0
addss  %xmm1,%xmm0
xorpd  0x46a57(%rip),%xmm0        # 51220 <_fini+0x2fc>
addss  %xmm5,%xmm0
xorpd  %xmm6,%xmm6
ucomiss %xmm6,%xmm0
jp     a8f5 <TIFFYCbCrToRGBInit+0x1f5>
jae    a8f5 <TIFFYCbCrToRGBInit+0x1f5>
movapd %xmm6,%xmm8
mulss  %xmm1,%xmm0
divss  0x4(%r12),%xmm0
ucomiss %xmm6,%xmm0
jp     a908 <TIFFYCbCrToRGBInit+0x208>
jae    a908 <TIFFYCbCrToRGBInit+0x208>
movapd %xmm6,%xmm0
movss  0x8(%r12),%xmm2
movapd %xmm2,%xmm1
addss  %xmm2,%xmm1
movapd %xmm5,%xmm3
subss  %xmm1,%xmm3
ucomiss %xmm6,%xmm3
jp     a91a <TIFFYCbCrToRGBInit+0x21a>
jae    a91a <TIFFYCbCrToRGBInit+0x21a>
movapd %xmm6,%xmm4
mulss  %xmm2,%xmm3
divss  0x4(%r12),%xmm3
ucomiss %xmm6,%xmm3
jp     a92c <TIFFYCbCrToRGBInit+0x22c>
jae    a92c <TIFFYCbCrToRGBInit+0x22c>
movapd %xmm6,%xmm3
movss  0x469ad(%rip),%xmm5        # 51200 <_fini+0x2dc>
movss  0x469a9(%rip),%xmm7        # 51204 <_fini+0x2e0>
movss  0x469a5(%rip),%xmm1        # 51208 <_fini+0x2e4>
movss  0x469a1(%rip),%xmm2        # 5120c <_fini+0x2e8>
movss  0x4699c(%rip),%xmm10        # 51210 <_fini+0x2ec>
mulss  %xmm10,%xmm3
cvtss2sd %xmm3,%xmm3
movsd  0x46972(%rip),%xmm9        # 511f8 <_fini+0x2d4>
addsd  %xmm9,%xmm3
cvttsd2si %xmm3,%eax
neg    %eax
mov    %rax,-0x30(%rbp)
mulss  %xmm10,%xmm0
cvtss2sd %xmm0,%xmm0
addsd  %xmm9,%xmm0
cvttsd2si %xmm0,%eax
neg    %eax
mov    %rax,-0x38(%rbp)
mulss  %xmm10,%xmm4
cvtss2sd %xmm4,%xmm0
addsd  %xmm9,%xmm0
cvttsd2si %xmm0,%ecx
mov    %rcx,-0x58(%rbp)
mulss  %xmm10,%xmm8
cvtss2sd %xmm8,%xmm0
addsd  %xmm9,%xmm0
cvttsd2si %xmm0,%eax
mov    %rax,-0x60(%rbp)
movss  0x46932(%rip),%xmm4        # 51214 <_fini+0x2f0>
mov    $0xffffffffffffff80,%r12
mov    %r13,-0x8(%rbp)
mov    %rcx,%r13
jmpq   aaff <TIFFYCbCrToRGBInit+0x3ff>
ucomiss %xmm5,%xmm0
ja     ab24 <TIFFYCbCrToRGBInit+0x424>
movapd %xmm0,%xmm8
jmpq   a7e5 <TIFFYCbCrToRGBInit+0xe5>
ucomiss %xmm5,%xmm0
jbe    a803 <TIFFYCbCrToRGBInit+0x103>
movapd %xmm5,%xmm0
jmpq   a803 <TIFFYCbCrToRGBInit+0x103>
ucomiss %xmm5,%xmm3
ja     ab2e <TIFFYCbCrToRGBInit+0x42e>
movapd %xmm3,%xmm4
jmpq   a82d <TIFFYCbCrToRGBInit+0x12d>
ucomiss %xmm5,%xmm3
jbe    a84b <TIFFYCbCrToRGBInit+0x14b>
movapd %xmm5,%xmm3
jmpq   a84b <TIFFYCbCrToRGBInit+0x14b>
movss  0x10(%r15),%xmm9
subss  %xmm5,%xmm9
movss  0x14(%r15),%xmm3
subss  %xmm5,%xmm3
subss  %xmm9,%xmm3
ucomiss %xmm6,%xmm3
jp     a963 <TIFFYCbCrToRGBInit+0x263>
jne    a963 <TIFFYCbCrToRGBInit+0x263>
movapd %xmm4,%xmm3
movss  0x8(%r15),%xmm8
subss  %xmm5,%xmm8
movdqu %xmm8,-0x50(%rbp)
movss  0xc(%r15),%xmm0
subss  %xmm5,%xmm0
subss  %xmm8,%xmm0
ucomiss %xmm6,%xmm0
jp     a98a <TIFFYCbCrToRGBInit+0x28a>
je     a98e <TIFFYCbCrToRGBInit+0x28e>
movapd %xmm0,%xmm4
movdqu %xmm4,-0x80(%rbp)
cvttss2si %xmm9,%ecx
neg    %ecx
add    %r12d,%ecx
cvtsi2ss %ecx,%xmm0
mulss  %xmm7,%xmm0
divss  %xmm3,%xmm0
mov    %rax,%r15
callq  ac20 <CLAMPw>
cvttss2si %xmm0,%esi
mov    %rsi,%rax
imul   %r15d,%eax
add    $0x8000,%eax
sar    $0x10,%eax
mov    0x8(%rbx),%rcx
movslq %r14d,%rdx
mov    %eax,(%rcx,%rdx,4)
movdqu -0x50(%rbp),%xmm0
cvttss2si %xmm0,%eax
neg    %eax
add    %r12d,%eax
cvtsi2ss %eax,%xmm0
movss  0x4681c(%rip),%xmm1        # 51204 <_fini+0x2e0>
mulss  %xmm1,%xmm0
movdqu -0x80(%rbp),%xmm1
divss  %xmm1,%xmm0
movss  0x4680b(%rip),%xmm1        # 51208 <_fini+0x2e4>
movss  0x46807(%rip),%xmm2        # 5120c <_fini+0x2e8>
mov    %r14,-0x80(%rbp)
mov    %rdx,%r14
mov    %rsi,%r15
callq  ac20 <CLAMPw>
cvttss2si %xmm0,%eax
mov    %rax,%rcx
imul   %r13d,%ecx
add    $0x8000,%ecx
sar    $0x10,%ecx
mov    0x10(%rbx),%rdx
mov    %ecx,(%rdx,%r14,4)
mov    -0x38(%rbp),%rcx
imul   %ecx,%r15d
mov    0x18(%rbx),%rcx
mov    %r15d,(%rcx,%r14,4)
mov    -0x30(%rbp),%rcx
imul   %ecx,%eax
lea    0x8000(%rax),%ecx
mov    0x20(%rbx),%rax
mov    %ecx,(%rax,%r14,4)
mov    0x28(%rbx),%r13
mov    -0x68(%rbp),%r15
movss  (%r15),%xmm0
movss  0x4(%r15),%xmm1
subss  %xmm0,%xmm1
xorpd  %xmm2,%xmm2
ucomiss %xmm2,%xmm1
jp     aa7f <TIFFYCbCrToRGBInit+0x37f>
jne    aa7f <TIFFYCbCrToRGBInit+0x37f>
movss  0x46795(%rip),%xmm1        # 51214 <_fini+0x2f0>
lea    0x80(%r12),%eax
cvttss2si %xmm0,%ecx
sub    %ecx,%eax
cvtsi2ss %eax,%xmm0
movss  0x4673f(%rip),%xmm2        # 511d8 <_fini+0x2b4>
mulss  %xmm2,%xmm0
divss  %xmm1,%xmm0
movss  0x4675f(%rip),%xmm1        # 51208 <_fini+0x2e4>
movss  0x4675b(%rip),%xmm2        # 5120c <_fini+0x2e8>
callq  ac20 <CLAMPw>
cvttss2si %xmm0,%eax
mov    %eax,0x0(%r13,%r14,4)
mov    -0x80(%rbp),%rax
lea    0x1(%rax),%r14d
add    $0x1,%r12d
mov    -0x58(%rbp),%r13
mov    -0x60(%rbp),%rax
movss  0x46725(%rip),%xmm5        # 51200 <_fini+0x2dc>
movss  0x46731(%rip),%xmm4        # 51214 <_fini+0x2f0>
xorpd  %xmm6,%xmm6
movss  0x4671d(%rip),%xmm2        # 5120c <_fini+0x2e8>
movss  0x46711(%rip),%xmm1        # 51208 <_fini+0x2e4>
movss  0x46705(%rip),%xmm7        # 51204 <_fini+0x2e0>
cmp    $0xff,%r14d
jle    a93e <TIFFYCbCrToRGBInit+0x23e>
mov    -0x8(%rbp),%rbx
xor    %eax,%eax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
leaveq 
retq   
movapd %xmm5,%xmm8
jmpq   a7e5 <TIFFYCbCrToRGBInit+0xe5>
movapd %xmm5,%xmm4
jmpq   a82d <TIFFYCbCrToRGBInit+0x12d>
nopw   0x0(%rax,%rax,1)

000000000000ab40 <TIFFYCbCrtoRGB>:
push   %rbp
mov    %rsp,%rbp
mov    $0xff,%eax
cmp    $0xff,%esi
jbe    ab54 <TIFFYCbCrtoRGB+0x14>
mov    %rax,%rsi
xor    %r10d,%r10d
test   %edx,%edx
jns    abc7 <TIFFYCbCrtoRGB+0x87>
mov    %r10,%rdx
test   %ecx,%ecx
jns    abd4 <TIFFYCbCrtoRGB+0x94>
mov    %r10,%rcx
movslq %ecx,%rcx
mov    0x8(%rdi),%rax
movslq (%rax,%rcx,4),%rax
mov    0x28(%rdi),%r11
mov    %esi,%esi
add    (%r11,%rsi,4),%eax
test   %eax,%eax
jns    abe1 <TIFFYCbCrtoRGB+0xa1>
mov    %r10,%rax
mov    %eax,(%r8)
mov    0x18(%rdi),%rax
movslq (%rax,%rcx,4),%rax
mov    0x20(%rdi),%r8
movslq %edx,%rcx
add    (%r8,%rcx,4),%eax
sar    $0x10,%eax
mov    0x28(%rdi),%rdx
add    (%rdx,%rsi,4),%eax
test   %eax,%eax
jns    abef <TIFFYCbCrtoRGB+0xaf>
mov    %r10,%rax
mov    %eax,(%r9)
mov    0x10(%rdi),%rax
movslq (%rax,%rcx,4),%rax
mov    0x28(%rdi),%rcx
add    (%rcx,%rsi,4),%eax
test   %eax,%eax
jns    abfd <TIFFYCbCrtoRGB+0xbd>
mov    0x10(%rbp),%rax
mov    %r10d,(%rax)
leaveq 
retq   
cmp    $0xff,%edx
jle    ab5e <TIFFYCbCrtoRGB+0x1e>
mov    %rax,%rdx
jmp    ab5e <TIFFYCbCrtoRGB+0x1e>
cmp    $0xff,%ecx
jle    ab65 <TIFFYCbCrtoRGB+0x25>
mov    %rax,%rcx
jmp    ab65 <TIFFYCbCrtoRGB+0x25>
cmp    $0xff,%eax
jle    ab81 <TIFFYCbCrtoRGB+0x41>
mov    $0xff,%eax
jmp    ab81 <TIFFYCbCrtoRGB+0x41>
cmp    $0xff,%eax
jle    aba8 <TIFFYCbCrtoRGB+0x68>
mov    $0xff,%eax
jmp    aba8 <TIFFYCbCrtoRGB+0x68>
cmp    $0xff,%eax
jle    ac0c <TIFFYCbCrtoRGB+0xcc>
mov    $0xff,%r10d
jmp    abbe <TIFFYCbCrtoRGB+0x7e>
mov    %rax,%r10
jmp    abbe <TIFFYCbCrtoRGB+0x7e>
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   0x0(%rax)

000000000000ac20 <CLAMPw>:
push   %rbp
mov    %rsp,%rbp
ucomiss %xmm0,%xmm1
jbe    ac2f <CLAMPw+0xf>
movapd %xmm1,%xmm0
leaveq 
retq   
ucomiss %xmm2,%xmm0
jbe    ac3a <CLAMPw+0x1a>
movapd %xmm2,%xmm0
leaveq 
retq   
leaveq 
retq   
nopl   0x0(%rax)

000000000000ac40 <TIFFFindCODEC>:
push   %rbp
mov    %rsp,%rbp
mov    0x6fc55(%rip),%rcx        # 7a8a0 <registeredCODECS>
jmp    ac5d <TIFFFindCODEC+0x1d>
mov    0x8(%rcx),%rax
movzwl 0x8(%rax),%edx
cmp    %di,%dx
je     ac6b <TIFFFindCODEC+0x2b>
mov    (%rcx),%rcx
test   %rcx,%rcx
jne    ac4d <TIFFFindCODEC+0xd>
mov    0x6f33f(%rip),%rax        # 79fa8 <_TIFFBuiltinCODECS@@Base-0x710>
jmp    ac7a <TIFFFindCODEC+0x3a>
leaveq 
retq   
movzwl 0x8(%rax),%ecx
cmp    %cx,%di
je     ac86 <TIFFFindCODEC+0x46>
add    $0x18,%rax
mov    (%rax),%rcx
test   %rcx,%rcx
jne    ac6d <TIFFFindCODEC+0x2d>
xor    %eax,%eax
leaveq 
retq   
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

000000000000ac90 <TIFFRegisterCODEC>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %r15,-0x18(%rbp)
mov    %rdi,-0x10(%rbp)
mov    %rdx,-0x8(%rbp)
mov    %rsi,%r15
mov    %r15,%rdi
callq  8350 <strlen@plt>
lea    0x29(%rax),%rdi
callq  8440 <_TIFFmalloc@plt>
test   %rax,%rax
jne    ace4 <TIFFRegisterCODEC+0x54>
mov    %r15,%rcx
xor    %eax,%eax
lea    0x46567(%rip),%rsi        # 51230 <_fini+0x30c>
lea    0x46572(%rip),%rdx        # 51242 <_fini+0x31e>
mov    %rax,%rdi
mov    %rax,%r15
callq  8a00 <TIFFErrorExt@plt>
mov    %r15,%rax
mov    -0x18(%rbp),%r15
leaveq 
retq   
lea    0x10(%rax),%rcx
mov    %rcx,0x8(%rax)
lea    0x28(%rax),%rdi
mov    %rdi,(%rcx)
mov    %r15,%rsi
mov    %rax,%r15
callq  8160 <strcpy@plt>
mov    0x8(%r15),%rax
mov    -0x10(%rbp),%rcx
mov    %cx,0x8(%rax)
mov    0x8(%r15),%rax
mov    -0x8(%rbp),%rcx
mov    %rcx,0x10(%rax)
mov    0x6fb83(%rip),%rax        # 7a8a0 <registeredCODECS>
mov    %rax,(%r15)
mov    %r15,0x6fb79(%rip)        # 7a8a0 <registeredCODECS>
mov    0x8(%r15),%rax
mov    -0x18(%rbp),%r15
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   0x0(%rax)

000000000000ad40 <TIFFUnRegisterCODEC>:
push   %rbp
mov    %rsp,%rbp
lea    0x6fb55(%rip),%rax        # 7a8a0 <registeredCODECS>
jmp    ad59 <TIFFUnRegisterCODEC+0x19>
mov    0x8(%rcx),%rdx
cmp    %rdi,%rdx
je     ad7e <TIFFUnRegisterCODEC+0x3e>
mov    %rcx,%rax
mov    (%rax),%rcx
test   %rcx,%rcx
jne    ad4d <TIFFUnRegisterCODEC+0xd>
xor    %eax,%eax
lea    0x46503(%rip),%rsi        # 5126d <_fini+0x349>
lea    0x46510(%rip),%rdx        # 51281 <_fini+0x35d>
mov    (%rdi),%rcx
mov    %rax,%rdi
callq  8a00 <TIFFErrorExt@plt>
leaveq 
retq   
mov    (%rcx),%rdx
mov    %rdx,(%rax)
mov    %rcx,%rdi
callq  8bb0 <_TIFFfree@plt>
leaveq 
retq   
xchg   %ax,%ax

000000000000ad90 <TIFFGetConfiguredCODECs>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    0x6faed(%rip),%r14        # 7a8a0 <registeredCODECS>
xor    %r13d,%r13d
mov    $0x18,%ebx
mov    $0x1,%r12d
jmp    adf8 <TIFFGetConfiguredCODECs+0x68>
movslq %r12d,%rax
lea    (%rax,%rax,2),%r15
mov    %r15,%rsi
shl    $0x3,%rsi
mov    %r13,%rdi
callq  8100 <_TIFFrealloc@plt>
test   %rax,%rax
je     ae06 <TIFFGetConfiguredCODECs+0x76>
lea    -0x18(%rax,%r15,8),%rdi
mov    %rax,%r13
mov    %r14,%rsi
mov    %rbx,%rdx
callq  8790 <_TIFFmemcpy@plt>
mov    (%r14),%r14
add    $0x1,%r12d
test   %r14,%r14
jne    adc3 <TIFFGetConfiguredCODECs+0x33>
mov    0x6f1a4(%rip),%r14        # 79fa8 <_TIFFBuiltinCODECS@@Base-0x710>
jmp    ae67 <TIFFGetConfiguredCODECs+0xd7>
mov    %r13,%rdi
callq  8bb0 <_TIFFfree@plt>
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
xor    %eax,%eax
leaveq 
retq   
movzwl 0x8(%r14),%edi
callq  8ad0 <TIFFIsCODECConfigured@plt>
test   %eax,%eax
je     ae63 <TIFFGetConfiguredCODECs+0xd3>
lea    (%r15,%r15,2),%r15
mov    %r15,%rsi
shl    $0x3,%rsi
mov    %r13,%rdi
callq  8100 <_TIFFrealloc@plt>
test   %rax,%rax
je     aeaa <TIFFGetConfiguredCODECs+0x11a>
lea    -0x18(%rax,%r15,8),%rdi
mov    %rax,%r13
mov    %r14,%rsi
mov    %rbx,%rdx
callq  8790 <_TIFFmemcpy@plt>
add    $0x1,%r12d
add    $0x18,%r14
movslq %r12d,%r15
mov    (%r14),%rax
test   %rax,%rax
jne    ae26 <TIFFGetConfiguredCODECs+0x96>
lea    (%r15,%r15,2),%r12
mov    %r12,%rsi
shl    $0x3,%rsi
mov    %r13,%rdi
callq  8100 <_TIFFrealloc@plt>
test   %rax,%rax
jne    aeca <TIFFGetConfiguredCODECs+0x13a>
mov    %r13,%rdi
callq  8bb0 <_TIFFfree@plt>
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
xor    %eax,%eax
leaveq 
retq   
mov    %r13,%rdi
callq  8bb0 <_TIFFfree@plt>
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
xor    %eax,%eax
leaveq 
retq   
lea    -0x18(%rax,%r12,8),%rdi
mov    %rbx,%rdx
mov    %rax,%r12
xor    %esi,%esi
callq  88e0 <_TIFFmemset@plt>
mov    %r12,%rax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)

000000000000af00 <_TIFFNoRowEncode>:
push   %rbp
mov    %rsp,%rbp
lea    0x463aa(%rip),%rsi        # 512b5 <_fini+0x391>
callq  b160 <TIFFNoEncode>
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   (%rax)

000000000000af20 <_TIFFNoStripEncode>:
push   %rbp
mov    %rsp,%rbp
lea    0x46393(%rip),%rsi        # 512be <_fini+0x39a>
callq  b160 <TIFFNoEncode>
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   (%rax)

000000000000af40 <_TIFFNoTileEncode>:
push   %rbp
mov    %rsp,%rbp
lea    0x46379(%rip),%rsi        # 512c4 <_fini+0x3a0>
callq  b160 <TIFFNoEncode>
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   (%rax)

000000000000af60 <_TIFFNoRowDecode>:
push   %rbp
mov    %rsp,%rbp
lea    0x4634a(%rip),%rsi        # 512b5 <_fini+0x391>
callq  b200 <TIFFNoDecode>
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   (%rax)

000000000000af80 <_TIFFNoStripDecode>:
push   %rbp
mov    %rsp,%rbp
lea    0x46333(%rip),%rsi        # 512be <_fini+0x39a>
callq  b200 <TIFFNoDecode>
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   (%rax)

000000000000afa0 <_TIFFNoTileDecode>:
push   %rbp
mov    %rsp,%rbp
lea    0x46319(%rip),%rsi        # 512c4 <_fini+0x3a0>
callq  b200 <TIFFNoDecode>
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   (%rax)

000000000000afc0 <_TIFFNoPreCode>:
push   %rbp
mov    %rsp,%rbp
mov    $0x1,%eax
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

000000000000afd0 <_TIFFNoSeek>:
push   %rbp
mov    %rsp,%rbp
xor    %eax,%eax
mov    0x3b8(%rdi),%rcx
mov    (%rdi),%rsi
mov    %rcx,%rdi
lea    0x462df(%rip),%rdx        # 512c9 <_fini+0x3a5>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

000000000000b000 <_TIFFSetDefaultCompressionState>:
push   %rbp
mov    %rsp,%rbp
lea    0x285(%rip),%rax        # b290 <_TIFFNoFixupTags>
mov    %rax,0x2c0(%rdi)
movl   $0x1,0x2b8(%rdi)
lea    0x27d(%rip),%rdx        # b2a0 <_TIFFtrue>
mov    %rdx,0x2c8(%rdi)
mov    0x6ef37(%rip),%rcx        # 79f68 <_TIFFNoPreCode@@Base+0x6efa8>
mov    %rcx,0x2d0(%rdi)
mov    0x6ef11(%rip),%rax        # 79f50 <_TIFFNoRowDecode@@Base+0x6eff0>
mov    %rax,0x2f8(%rdi)
mov    0x6ef83(%rip),%rax        # 79fd0 <_TIFFNoStripDecode@@Base+0x6f050>
mov    %rax,0x308(%rdi)
mov    0x6eec5(%rip),%rax        # 79f20 <_TIFFNoTileDecode@@Base+0x6ef80>
mov    %rax,0x318(%rdi)
movl   $0x1,0x2e0(%rdi)
mov    %rdx,0x2d8(%rdi)
mov    %rcx,0x2e8(%rdi)
mov    %rdx,0x2f0(%rdi)
mov    0x6ef08(%rip),%rax        # 79f90 <_TIFFNoRowEncode@@Base+0x6f090>
mov    %rax,0x300(%rdi)
mov    0x6ee82(%rip),%rax        # 79f18 <_TIFFNoStripEncode@@Base+0x6eff8>
mov    %rax,0x310(%rdi)
mov    0x6ee94(%rip),%rax        # 79f38 <_TIFFNoTileEncode@@Base+0x6eff8>
mov    %rax,0x320(%rdi)
lea    0x1fe(%rip),%rax        # b2b0 <_TIFFvoid>
mov    %rax,0x328(%rdi)
mov    0x6ef18(%rip),%rcx        # 79fd8 <_TIFFNoSeek@@Base+0x6f008>
mov    %rcx,0x330(%rdi)
mov    %rax,0x338(%rdi)
mov    0x6ee8b(%rip),%rax        # 79f60 <_TIFFDefaultStripSize@@Base+0x2cfd0>
mov    %rax,0x340(%rdi)
mov    0x6ee45(%rip),%rax        # 79f28 <_TIFFDefaultTileSize@@Base+0x2c088>
mov    %rax,0x348(%rdi)
mov    0x10(%rdi),%eax
and    $0xfffdfeff,%eax
mov    %eax,0x10(%rdi)
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

000000000000b100 <TIFFSetCompressionScheme>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %r14,-0x10(%rbp)
mov    %r15,-0x18(%rbp)
mov    %r13,-0x8(%rbp)
mov    %rsi,%r13
mov    %rdi,%r14
mov    %r13,%rdi
callq  8530 <TIFFFindCODEC@plt>
mov    %rax,%r15
mov    %r14,%rdi
callq  8740 <_TIFFSetDefaultCompressionState@plt>
test   %r15,%r15
jne    b145 <TIFFSetCompressionScheme+0x45>
mov    $0x1,%eax
mov    -0x8(%rbp),%r13
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
leaveq 
retq   
mov    %r13,%rsi
mov    %r14,%rdi
callq  *0x10(%r15)
mov    -0x8(%rbp),%r13
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
leaveq 
retq   
nopl   (%rax)

000000000000b160 <TIFFNoEncode>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %r13,-0x8(%rbp)
mov    %r14,-0x10(%rbp)
mov    %r15,-0x18(%rbp)
mov    %rsi,%r14
mov    %rdi,%r15
movzwl 0x78(%r15),%r13d
mov    %r13,%rdi
callq  8530 <TIFFFindCODEC@plt>
test   %rax,%rax
jne    b1bf <TIFFNoEncode+0x5f>
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
mov    (%r15),%rsi
mov    %r13,%rcx
mov    %r14,%r8
lea    0x4617b(%rip),%rdx        # 51320 <_fini+0x3fc>
callq  8a00 <TIFFErrorExt@plt>
mov    $0xffffffffffffffff,%rax
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
leaveq 
retq   
xor    %r8d,%r8d
mov    0x3b8(%r15),%rdi
mov    (%r15),%rsi
lea    0x4612b(%rip),%rdx        # 512fe <_fini+0x3da>
mov    (%rax),%rcx
mov    %r8,%rax
mov    %r14,%r8
callq  8a00 <TIFFErrorExt@plt>
mov    $0xffffffffffffffff,%rax
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)

000000000000b200 <TIFFNoDecode>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %r13,-0x8(%rbp)
mov    %r14,-0x10(%rbp)
mov    %r15,-0x18(%rbp)
mov    %rsi,%r14
mov    %rdi,%r15
movzwl 0x78(%r15),%r13d
mov    %r13,%rdi
callq  8530 <TIFFFindCODEC@plt>
test   %rax,%rax
jne    b25a <TIFFNoDecode+0x5a>
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
mov    (%r15),%rsi
mov    %r13,%rcx
mov    %r14,%r8
lea    0x46132(%rip),%rdx        # 51377 <_fini+0x453>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
leaveq 
retq   
xor    %r8d,%r8d
mov    0x3b8(%r15),%rdi
mov    (%r15),%rsi
lea    0x460e7(%rip),%rdx        # 51355 <_fini+0x431>
mov    (%rax),%rcx
mov    %r8,%rax
mov    %r14,%r8
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
leaveq 
retq   
nopl   0x0(%rax)

000000000000b290 <_TIFFNoFixupTags>:
push   %rbp
mov    %rsp,%rbp
mov    $0x1,%eax
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

000000000000b2a0 <_TIFFtrue>:
push   %rbp
mov    %rsp,%rbp
mov    $0x1,%eax
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

000000000000b2b0 <_TIFFvoid>:
push   %rbp
mov    %rsp,%rbp
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)

000000000000b2c0 <TIFFGetField>:
push   %rbp
mov    %rsp,%rbp
sub    $0xd0,%rsp
mov    %rdx,-0xa0(%rbp)
mov    %rcx,-0x98(%rbp)
mov    %r8,-0x90(%rbp)
mov    %r9,-0x88(%rbp)
movsd  %xmm0,-0x80(%rbp)
movsd  %xmm1,-0x70(%rbp)
movsd  %xmm2,-0x60(%rbp)
movsd  %xmm3,-0x50(%rbp)
movsd  %xmm4,-0x40(%rbp)
movsd  %xmm5,-0x30(%rbp)
movsd  %xmm6,-0x20(%rbp)
movsd  %xmm7,-0x10(%rbp)
lea    -0xc8(%rbp),%rdx
movl   $0x10,(%rdx)
movl   $0x30,0x4(%rdx)
lea    -0xb0(%rbp),%rax
mov    %rax,0x10(%rdx)
lea    0x10(%rbp),%rax
mov    %rax,0x8(%rdx)
callq  8250 <TIFFVGetField@plt>
leaveq 
retq   
nopl   (%rax)

000000000000b340 <TIFFVGetField>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %r15,-0x10(%rbp)
mov    %rdi,-0x18(%rbp)
mov    %rdx,-0x8(%rbp)
xor    %edx,%edx
mov    %rsi,%r15
callq  8680 <TIFFFindField@plt>
test   %rax,%rax
jne    b36b <TIFFVGetField+0x2b>
xor    %eax,%eax
mov    -0x10(%rbp),%r15
leaveq 
retq   
cmp    $0xffff,%r15d
jbe    b38b <TIFFVGetField+0x4b>
mov    -0x18(%rbp),%rdi
mov    %r15,%rsi
mov    -0x8(%rbp),%rdx
callq  *0x410(%rdi)
mov    -0x10(%rbp),%r15
leaveq 
retq   
mov    $0x1,%edx
movzwl 0x18(%rax),%esi
movzwl 0x18(%rax),%ecx
and    $0x1f,%ecx
shl    %cl,%rdx
shr    $0x5,%esi
movslq %esi,%rax
mov    -0x18(%rbp),%rdi
and    0x38(%rdi,%rax,8),%rdx
test   %rdx,%rdx
jne    b378 <TIFFVGetField+0x38>
xor    %eax,%eax
mov    -0x10(%rbp),%r15
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

000000000000b3c0 <TIFFNumberOfDirectories>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    %r12,-0x8(%rbp)
mov    %r13,-0x10(%rbp)
mov    %r14,-0x18(%rbp)
mov    %r15,-0x20(%rbp)
lea    -0x28(%rbp),%r13
xor    %r14d,%r14d
mov    0x10(%rdi),%eax
and    $0x80000,%eax
test   %eax,%eax
jne    b3fd <TIFFNumberOfDirectories+0x3d>
mov    0x26c(%rdi),%eax
mov    %rax,-0x28(%rbp)
mov    %rdi,%r12
mov    %r14,%r15
jmp    b42d <TIFFNumberOfDirectories+0x6d>
mov    0x270(%rdi),%rax
mov    %rax,-0x28(%rbp)
mov    %rdi,%r12
mov    %r14,%r15
jmp    b42d <TIFFNumberOfDirectories+0x6d>
mov    %r12,%rdi
mov    %r13,%rsi
mov    %r14,%rdx
callq  10010 <TIFFAdvanceDirectory>
test   %eax,%eax
je     b44b <TIFFNumberOfDirectories+0x8b>
cmp    $0xfffe,%r15w
ja     b460 <TIFFNumberOfDirectories+0xa0>
add    $0x1,%r15d
mov    -0x28(%rbp),%rax
test   %rax,%rax
jne    b410 <TIFFNumberOfDirectories+0x50>
mov    %r15,%rax
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
leaveq 
retq   
mov    %r15,%rax
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%r12),%rdi
lea    0x45fcf(%rip),%rsi        # 51440 <module.8>
lea    0x45fe0(%rip),%rdx        # 51458 <module.8+0x18>
callq  8a00 <TIFFErrorExt@plt>
mov    $0xffff,%eax
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nop

000000000000b4a0 <TIFFCurrentDirOffset>:
push   %rbp
mov    %rsp,%rbp
mov    0x18(%rdi),%rax
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

000000000000b4b0 <TIFFFreeDirectory>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rdi,%r14
lea    0x38(%r14),%rdi
xor    %r15d,%r15d
mov    $0x4,%edx
mov    %r15,%rsi
callq  88e0 <_TIFFmemset@plt>
mov    0x90(%r14),%rdi
test   %rdi,%rdi
je     b4f3 <TIFFFreeDirectory+0x43>
callq  8bb0 <_TIFFfree@plt>
movq   $0x0,0x90(%r14)
mov    0x98(%r14),%rdi
test   %rdi,%rdi
je     b50f <TIFFFreeDirectory+0x5f>
callq  8bb0 <_TIFFfree@plt>
movq   $0x0,0x98(%r14)
mov    0xb8(%r14),%rdi
test   %rdi,%rdi
je     b52b <TIFFFreeDirectory+0x7b>
callq  8bb0 <_TIFFfree@plt>
movq   $0x0,0xb8(%r14)
mov    0xc0(%r14),%rdi
test   %rdi,%rdi
je     b547 <TIFFFreeDirectory+0x97>
callq  8bb0 <_TIFFfree@plt>
movq   $0x0,0xc0(%r14)
mov    0xc8(%r14),%rdi
test   %rdi,%rdi
je     b563 <TIFFFreeDirectory+0xb3>
callq  8bb0 <_TIFFfree@plt>
movq   $0x0,0xc8(%r14)
mov    0xd8(%r14),%rdi
test   %rdi,%rdi
je     b57f <TIFFFreeDirectory+0xcf>
callq  8bb0 <_TIFFfree@plt>
movq   $0x0,0xd8(%r14)
mov    0x100(%r14),%rdi
test   %rdi,%rdi
je     b59b <TIFFFreeDirectory+0xeb>
callq  8bb0 <_TIFFfree@plt>
movq   $0x0,0x100(%r14)
mov    0x138(%r14),%rdi
test   %rdi,%rdi
je     b5b7 <TIFFFreeDirectory+0x107>
callq  8bb0 <_TIFFfree@plt>
movq   $0x0,0x138(%r14)
mov    0x128(%r14),%rdi
test   %rdi,%rdi
je     b5d3 <TIFFFreeDirectory+0x123>
callq  8bb0 <_TIFFfree@plt>
movq   $0x0,0x128(%r14)
mov    0x110(%r14),%rdi
test   %rdi,%rdi
je     b5ef <TIFFFreeDirectory+0x13f>
callq  8bb0 <_TIFFfree@plt>
movq   $0x0,0x110(%r14)
mov    0x118(%r14),%rdi
test   %rdi,%rdi
je     b60b <TIFFFreeDirectory+0x15b>
callq  8bb0 <_TIFFfree@plt>
movq   $0x0,0x118(%r14)
mov    0x120(%r14),%rdi
test   %rdi,%rdi
je     b627 <TIFFFreeDirectory+0x177>
callq  8bb0 <_TIFFfree@plt>
movq   $0x0,0x120(%r14)
mov    0xe8(%r14),%rdi
test   %rdi,%rdi
je     b643 <TIFFFreeDirectory+0x193>
callq  8bb0 <_TIFFfree@plt>
movq   $0x0,0xe8(%r14)
mov    0xf0(%r14),%rdi
test   %rdi,%rdi
je     b65f <TIFFFreeDirectory+0x1af>
callq  8bb0 <_TIFFfree@plt>
movq   $0x0,0xf0(%r14)
mov    0x40(%r14),%rax
and    $0xffffffffffffff7f,%rax
mov    %rax,0x40(%r14)
mov    0x40(%r14),%rax
and    $0xfffffffffffffeff,%rax
mov    %rax,0x40(%r14)
jmp    b69e <TIFFFreeDirectory+0x1ee>
mov    0x148(%r14),%rcx
movslq %r15d,%rax
lea    (%rax,%rax,2),%rax
mov    0x10(%rcx,%rax,8),%rdi
test   %rdi,%rdi
je     b69a <TIFFFreeDirectory+0x1ea>
callq  8bb0 <_TIFFfree@plt>
add    $0x1,%r15d
movslq 0x140(%r14),%rax
cmp    %r15d,%eax
jg     b67d <TIFFFreeDirectory+0x1cd>
movl   $0x0,0x140(%r14)
mov    0x148(%r14),%rdi
test   %rdi,%rdi
jne    b6cb <TIFFFreeDirectory+0x21b>
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
callq  8bb0 <_TIFFfree@plt>
movq   $0x0,0x148(%r14)
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)

000000000000b6f0 <TIFFCreateDirectory>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x8(%rbp)
mov    %rdi,%r15
callq  88d0 <TIFFDefaultDirectory@plt>
movq   $0x0,0x18(%r15)
movq   $0x0,0x20(%r15)
movq   $0x0,0x288(%r15)
movl   $0xffffffff,0x27c(%r15)
movl   $0xffffffff,0x284(%r15)
xor    %eax,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
nopl   (%rax)

000000000000b740 <TIFFCreateCustomDirectory>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rsi,%r15
mov    %rdi,%r14
callq  88d0 <TIFFDefaultDirectory@plt>
mov    %r15,%rsi
mov    %r14,%rdi
callq  82d0 <_TIFFSetupFields@plt>
movq   $0x0,0x18(%r14)
movq   $0x0,0x20(%r14)
movq   $0x0,0x288(%r14)
movl   $0xffffffff,0x27c(%r14)
movl   $0xffffffff,0x284(%r14)
xor    %eax,%eax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

000000000000b7b0 <TIFFCreateEXIFDirectory>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x8(%rbp)
mov    %rdi,%r15
callq  8200 <_TIFFGetExifFields@plt>
mov    %rax,%rsi
mov    %r15,%rdi
callq  85d0 <TIFFCreateCustomDirectory@plt>
mov    -0x8(%rbp),%r15
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)

000000000000b7e0 <TIFFLastDirectory>:
push   %rbp
mov    %rsp,%rbp
mov    0x20(%rdi),%rax
test   %rax,%rax
jne    b7f4 <TIFFLastDirectory+0x14>
mov    $0x1,%eax
leaveq 
retq   
xor    %eax,%eax
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

000000000000b800 <TIFFSetDirectory>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rsi,-0x8(%rbp)
lea    -0x30(%rbp),%r15
xor    %r13d,%r13d
mov    0x10(%rdi),%eax
and    $0x80000,%eax
test   %eax,%eax
jne    b841 <TIFFSetDirectory+0x41>
mov    0x26c(%rdi),%eax
mov    %rax,-0x30(%rbp)
mov    %rdi,%r12
mov    %rsi,%r14
jmp    b85b <TIFFSetDirectory+0x5b>
mov    0x270(%rdi),%rax
mov    %rax,-0x30(%rbp)
mov    %rdi,%r12
mov    %rsi,%r14
jmp    b85b <TIFFSetDirectory+0x5b>
add    $0xffff,%r14d
test   %r14w,%r14w
je     b891 <TIFFSetDirectory+0x91>
mov    -0x30(%rbp),%rax
test   %rax,%rax
je     b891 <TIFFSetDirectory+0x91>
mov    %r12,%rdi
mov    %r15,%rsi
mov    %r13,%rdx
callq  10010 <TIFFAdvanceDirectory>
test   %eax,%eax
jne    b854 <TIFFSetDirectory+0x54>
mov    %r13,%rax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
leaveq 
retq   
mov    -0x30(%rbp),%rax
mov    %rax,0x20(%r12)
mov    -0x8(%rbp),%rax
sub    %r14w,%ax
add    $0xffff,%eax
mov    %ax,0x280(%r12)
mov    %r12,%rdi
movw   $0x0,0x32(%rdi)
callq  8b30 <TIFFReadDirectory@plt>
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
leaveq 
retq   

000000000000b8d0 <TIFFSetSubDirectory>:
push   %rbp
mov    %rsp,%rbp
mov    %rsi,0x20(%rdi)
movw   $0x0,0x32(%rdi)
callq  8b30 <TIFFReadDirectory@plt>
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)

000000000000b8f0 <TIFFUnlinkDirectory>:
push   %rbp
mov    %rsp,%rbp
sub    $0x50,%rsp
lea    0x45b96(%rip),%r8        # 51495 <module.10>
movslq 0xc(%rdi),%rax
test   %eax,%eax
je     b965 <TIFFUnlinkDirectory+0x75>
mov    $0x4,%edx
mov    $0x8,%ecx
mov    0x10(%rdi),%eax
and    $0x80000,%eax
test   %eax,%eax
jne    b981 <TIFFUnlinkDirectory+0x91>
mov    0x26c(%rdi),%eax
mov    %rdx,%rcx
mov    %rcx,-0x40(%rbp)
mov    %rax,-0x48(%rbp)
lea    -0x48(%rbp),%rcx
lea    -0x40(%rbp),%rax
lea    0xffff(%rsi),%edx
mov    %rbx,-0x10(%rbp)
mov    %r12,-0x18(%rbp)
mov    %r13,-0x20(%rbp)
mov    %r14,-0x28(%rbp)
mov    %r15,-0x30(%rbp)
mov    %rsi,-0x8(%rbp)
mov    %r8,%rbx
mov    %rdi,%r12
mov    %rcx,%r13
mov    %rdx,%r14
mov    %rax,%r15
jmp    b9ac <TIFFUnlinkDirectory+0xbc>
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
mov    %r8,%rsi
lea    0x45b31(%rip),%rdx        # 514a9 <module.10+0x14>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
mov    0x270(%rdi),%rax
jmp    b926 <TIFFUnlinkDirectory+0x36>
mov    -0x48(%rbp),%rax
test   %rax,%rax
je     b9e0 <TIFFUnlinkDirectory+0xf0>
mov    %r12,%rdi
mov    %r13,%rsi
mov    %r15,%rdx
callq  10010 <TIFFAdvanceDirectory>
test   %eax,%eax
je     ba18 <TIFFUnlinkDirectory+0x128>
add    $0xffff,%r14d
test   %r14w,%r14w
jne    b98a <TIFFUnlinkDirectory+0x9a>
mov    %r12,%rdi
mov    %r13,%rsi
xor    %r14d,%r14d
mov    %r14,%rdx
callq  10010 <TIFFAdvanceDirectory>
test   %eax,%eax
jne    ba30 <TIFFUnlinkDirectory+0x140>
mov    %r14,%rax
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
mov    -0x10(%rbp),%rbx
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%r12),%rdi
lea    0x45ae3(%rip),%rdx        # 514d4 <module.10+0x3f>
mov    -0x8(%rbp),%rcx
movzwl %cx,%ecx
mov    %rbx,%rsi
callq  8a00 <TIFFErrorExt@plt>
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
mov    -0x10(%rbp),%rbx
xor    %eax,%eax
leaveq 
retq   
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
mov    -0x10(%rbp),%rbx
xor    %eax,%eax
leaveq 
retq   
mov    0x3d0(%r12),%rax
mov    0x3b8(%r12),%rdi
mov    -0x40(%rbp),%rsi
mov    %r14,%rdx
callq  *%rax
lea    0x45ad9(%rip),%r15        # 51529 <module.10+0x94>
mov    0x10(%r12),%eax
mov    %rax,%rcx
and    $0x80000,%ecx
test   %ecx,%ecx
jne    ba93 <TIFFUnlinkDirectory+0x1a3>
mov    -0x48(%rbp),%rdx
mov    %edx,-0x34(%rbp)
mov    %edx,%ecx
cmp    %rcx,%rdx
je     baf6 <TIFFUnlinkDirectory+0x206>
lea    0x45a75(%rip),%rdi        # 514f0 <module.10+0x5b>
lea    0x45a89(%rip),%rsi        # 5150b <module.10+0x76>
mov    $0x6b5,%edx
lea    0x45a87(%rip),%rcx        # 51515 <module.10+0x80>
callq  8490 <__assert_fail@plt>
and    $0x80,%eax
test   %eax,%eax
je     baa4 <TIFFUnlinkDirectory+0x1b4>
mov    %r13,%rdi
callq  8730 <TIFFSwabLong8@plt>
mov    %r13,%rsi
mov    0x3c8(%r12),%rax
mov    0x3b8(%r12),%rdi
mov    $0x8,%edx
callq  *%rax
cmp    $0x8,%rax
je     bb5c <TIFFUnlinkDirectory+0x26c>
xor    %eax,%eax
mov    0x3b8(%r12),%rdi
mov    %r15,%rdx
mov    %rbx,%rsi
callq  8a00 <TIFFErrorExt@plt>
mov    %r14,%rax
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
mov    -0x10(%rbp),%rbx
leaveq 
retq   
lea    -0x34(%rbp),%rsi
and    $0x80,%eax
test   %eax,%eax
je     bb11 <TIFFUnlinkDirectory+0x221>
mov    %rsi,%r13
mov    %r13,%rdi
callq  8480 <TIFFSwabLong@plt>
mov    %r13,%rsi
mov    0x3c8(%r12),%rax
mov    0x3b8(%r12),%rdi
mov    $0x4,%edx
callq  *%rax
cmp    $0x4,%rax
je     bb5c <TIFFUnlinkDirectory+0x26c>
xor    %eax,%eax
mov    0x3b8(%r12),%rdi
mov    %r15,%rdx
mov    %rbx,%rsi
callq  8a00 <TIFFErrorExt@plt>
mov    %r14,%rax
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
mov    -0x10(%rbp),%rbx
leaveq 
retq   
mov    %r12,%rdi
callq  *0x338(%r12)
mov    0x10(%r12),%eax
and    $0x200,%eax
test   %eax,%eax
jne    bbe5 <TIFFUnlinkDirectory+0x2f5>
mov    0x10(%r12),%eax
and    $0xffefefaf,%eax
mov    %eax,0x10(%r12)
mov    %r12,%rdi
callq  8510 <TIFFFreeDirectory@plt>
mov    %r12,%rdi
callq  88d0 <TIFFDefaultDirectory@plt>
movq   $0x0,0x18(%r12)
movq   $0x0,0x20(%r12)
movq   $0x0,0x288(%r12)
movl   $0xffffffff,0x27c(%r12)
movl   $0xffffffff,0x284(%r12)
mov    $0x1,%eax
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
mov    -0x10(%rbp),%rbx
leaveq 
retq   
mov    0x368(%r12),%rdi
test   %rdi,%rdi
je     bb75 <TIFFUnlinkDirectory+0x285>
callq  8bb0 <_TIFFfree@plt>
movq   $0x0,0x368(%r12)
movq   $0x0,0x390(%r12)
movq   $0x0,0x378(%r12)
movq   $0x0,0x380(%r12)
jmpq   bb75 <TIFFUnlinkDirectory+0x285>
nopl   0x0(%rax)

000000000000bc30 <TIFFSetField>:
push   %rbp
mov    %rsp,%rbp
sub    $0xd0,%rsp
mov    %rdx,-0xa0(%rbp)
mov    %rcx,-0x98(%rbp)
mov    %r8,-0x90(%rbp)
mov    %r9,-0x88(%rbp)
movsd  %xmm0,-0x80(%rbp)
movsd  %xmm1,-0x70(%rbp)
movsd  %xmm2,-0x60(%rbp)
movsd  %xmm3,-0x50(%rbp)
movsd  %xmm4,-0x40(%rbp)
movsd  %xmm5,-0x30(%rbp)
movsd  %xmm6,-0x20(%rbp)
movsd  %xmm7,-0x10(%rbp)
lea    -0xc8(%rbp),%rdx
movl   $0x10,(%rdx)
movl   $0x30,0x4(%rdx)
lea    -0xb0(%rbp),%rax
mov    %rax,0x10(%rdx)
lea    0x10(%rbp),%rax
mov    %rax,0x8(%rdx)
callq  89a0 <TIFFVSetField@plt>
leaveq 
retq   
nopl   (%rax)

000000000000bcb0 <TIFFVSetField>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %r13,-0x8(%rbp)
mov    %r14,-0x10(%rbp)
mov    %r15,-0x18(%rbp)
mov    %rdx,%r14
mov    %rdi,%r15
mov    %rsi,%r13
callq  e6e0 <OkToChangeTag>
test   %eax,%eax
jne    bce6 <TIFFVSetField+0x36>
xor    %eax,%eax
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
leaveq 
retq   
mov    %r14,%rdx
mov    %r13,%rsi
mov    %r15,%rdi
callq  *0x408(%rdi)
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

000000000000bd10 <TIFFUnsetField>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %rdi,-0x10(%rbp)
mov    %rsi,-0x8(%rbp)
callq  8ae0 <TIFFFieldWithTag@plt>
test   %rax,%rax
jne    bd2e <TIFFUnsetField+0x1e>
xor    %eax,%eax
leaveq 
retq   
mov    $0x1,%edi
movzwl 0x18(%rax),%edx
cmp    $0x41,%dx
jne    bd4c <TIFFUnsetField+0x3c>
xor    %ecx,%ecx
mov    -0x8(%rbp),%rsi
mov    -0x10(%rbp),%r8
mov    %rcx,%rdx
jmp    bd9b <TIFFUnsetField+0x8b>
mov    %rdi,%rax
mov    %rdx,%rcx
and    $0x1f,%ecx
mov    %rax,%rsi
shl    %cl,%rsi
not    %rsi
shr    $0x5,%edx
movslq %edx,%rcx
mov    -0x10(%rbp),%r8
and    0x38(%r8,%rcx,8),%rsi
mov    %rsi,0x38(%r8,%rcx,8)
mov    0x10(%r8),%ecx
or     $0x8,%ecx
mov    %ecx,0x10(%r8)
leaveq 
retq   
movslq %edx,%rax
lea    (%rax,%rax,2),%rcx
shl    $0x3,%rcx
add    0x148(%r8),%rcx
mov    (%rcx),%rax
cmp    (%rax),%esi
je     bda4 <TIFFUnsetField+0x94>
add    $0x1,%edx
cmp    0x140(%r8),%edx
jl     bd7f <TIFFUnsetField+0x6f>
cmp    0x140(%r8),%edx
jl     bdb2 <TIFFUnsetField+0xa2>
mov    %rdi,%rax
jmp    bd72 <TIFFUnsetField+0x62>
mov    0x10(%rcx),%rdi
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %r8,%r14
mov    %rdx,%r15
callq  8bb0 <_TIFFfree@plt>
jmp    be03 <TIFFUnsetField+0xf3>
mov    0x148(%r14),%r8
lea    0x1(%r15),%edi
movslq %edi,%rax
lea    (%rax,%rax,2),%rsi
mov    (%r8,%rsi,8),%rdx
movslq %r15d,%rax
lea    (%rax,%rax,2),%rcx
mov    %rdx,(%r8,%rcx,8)
mov    0x8(%r8,%rsi,8),%rax
mov    %rax,0x8(%r8,%rcx,8)
mov    0x10(%r8,%rsi,8),%rax
mov    %rax,0x10(%r8,%rcx,8)
mov    %rdi,%r15
movslq 0x140(%r14),%rax
add    $0xffffffff,%eax
cmp    %r15d,%eax
jg     bdcb <TIFFUnsetField+0xbb>
mov    %eax,0x140(%r14)
mov    %r14,%r8
mov    $0x1,%eax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
jmpq   bd72 <TIFFUnsetField+0x62>
xchg   %ax,%ax

000000000000be30 <TIFFSetTagExtender>:
push   %rbp
mov    %rsp,%rbp
mov    0x6ea6d(%rip),%rax        # 7a8a8 <_TIFFextender>
mov    %rdi,0x6ea66(%rip)        # 7a8a8 <_TIFFextender>
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nop

000000000000be50 <TIFFDefaultDirectory>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x10(%rbp)
mov    %r14,%r15
mov    %rdi,%r14
callq  8940 <_TIFFGetFields@plt>
mov    %rax,%rsi
mov    %r14,%rdi
callq  82d0 <_TIFFSetupFields@plt>
lea    0x38(%r14),%rdi
xor    %esi,%esi
mov    $0x118,%edx
callq  88e0 <_TIFFmemset@plt>
movw   $0x1,0x7e(%r14)
movw   $0x1,0x74(%r14)
movw   $0x1,0x7c(%r14)
movw   $0x1,0x80(%r14)
movw   $0x1,0x82(%r14)
movl   $0xffffffff,0x84(%r14)
movl   $0x0,0x64(%r14)
movl   $0x0,0x68(%r14)
movl   $0x1,0x6c(%r14)
movl   $0x1,0xf8(%r14)
movw   $0x2,0xa8(%r14)
movw   $0x1,0x76(%r14)
movl   $0x1,0x60(%r14)
movw   $0x2,0x108(%r14)
movw   $0x2,0x10a(%r14)
movw   $0x1,0x10c(%r14)
mov    0x6e031(%rip),%rax        # 79f48 <_TIFFNoPostDecode@@Base+0x2f608>
mov    %rax,0x3e8(%r14)
movq   $0x0,0x400(%r14)
lea    0x4c0(%rip),%rax        # c3f0 <_TIFFVSetField>
mov    %rax,0x408(%r14)
lea    0x2892(%rip),%rax        # e7d0 <_TIFFVGetField>
mov    %rax,0x410(%r14)
movq   $0x0,0x418(%r14)
mov    0x430(%r14),%rax
test   %rax,%rax
je     bfc0 <TIFFDefaultDirectory+0x170>
mov    %r15,-0x8(%rbp)
xor    %r15d,%r15d
jmp    bf8b <TIFFDefaultDirectory+0x13b>
mov    %r15d,%eax
lea    (%rax,%rax,2),%rax
shl    $0x3,%rax
add    0x428(%r14),%rax
mov    0x4(%rax),%ecx
test   %ecx,%ecx
je     bf87 <TIFFDefaultDirectory+0x137>
mov    0x10(%rax),%rdi
callq  8bb0 <_TIFFfree@plt>
add    $0x1,%r15d
mov    0x430(%r14),%rcx
mov    %r15d,%eax
cmp    %rax,%rcx
ja     bf65 <TIFFDefaultDirectory+0x115>
mov    0x428(%r14),%rdi
callq  8bb0 <_TIFFfree@plt>
movq   $0x0,0x430(%r14)
movq   $0x0,0x428(%r14)
mov    -0x8(%rbp),%r15
mov    0x6e8e1(%rip),%rax        # 7a8a8 <_TIFFextender>
test   %rax,%rax
je     bfd1 <TIFFDefaultDirectory+0x181>
mov    %r14,%rdi
callq  *%rax
xor    %eax,%eax
mov    $0x103,%esi
mov    $0x1,%edx
mov    %r14,%rdi
callq  8290 <TIFFSetField@plt>
mov    0x10(%r14),%eax
and    $0xfffffbf7,%eax
mov    %eax,0x10(%r14)
mov    %r15,%r14
mov    $0x1,%eax
mov    -0x10(%rbp),%r15
leaveq 
retq   

000000000000c000 <_TIFFsetByteArray>:
push   %rbp
mov    %rsp,%rbp
mov    %edx,%edx
mov    $0x1,%ecx
callq  c0e0 <setByteArray>
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   (%rax)

000000000000c020 <_TIFFsetString>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rdi,%r14
mov    %rsi,%r15
mov    %r15,%rdi
callq  8350 <strlen@plt>
lea    0x1(%rax),%rdx
mov    %r15,%rsi
mov    %r14,%rdi
mov    $0x1,%ecx
callq  c0e0 <setByteArray>
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
nopl   0x0(%rax)

000000000000c060 <_TIFFsetShortArray>:
push   %rbp
mov    %rsp,%rbp
mov    %edx,%edx
mov    $0x2,%ecx
callq  c0e0 <setByteArray>
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   (%rax)

000000000000c080 <_TIFFsetLongArray>:
push   %rbp
mov    %rsp,%rbp
mov    %edx,%edx
mov    $0x4,%ecx
callq  c0e0 <setByteArray>
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   (%rax)

000000000000c0a0 <_TIFFsetFloatArray>:
push   %rbp
mov    %rsp,%rbp
mov    %edx,%edx
mov    $0x4,%ecx
callq  c0e0 <setByteArray>
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   (%rax)

000000000000c0c0 <_TIFFsetDoubleArray>:
push   %rbp
mov    %rsp,%rbp
mov    %edx,%edx
mov    $0x8,%ecx
callq  c0e0 <setByteArray>
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   (%rax)

000000000000c0e0 <setByteArray>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    (%rdi),%rax
test   %rax,%rax
je     c137 <setByteArray+0x57>
mov    %r12,-0x8(%rbp)
mov    %r13,-0x10(%rbp)
mov    %r14,-0x18(%rbp)
mov    %r15,-0x20(%rbp)
mov    %rsi,%r12
mov    %rdi,%r13
mov    %rax,%rdi
mov    %rdx,%r14
mov    %rcx,%r15
callq  8bb0 <_TIFFfree@plt>
mov    %r15,%rcx
mov    %r14,%rdx
mov    %r12,%rsi
mov    %r13,%rdi
movq   $0x0,(%rdi)
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
test   %rsi,%rsi
jne    c13e <setByteArray+0x5e>
leaveq 
retq   
mov    %rcx,%r8
imul   %rdx,%r8
test   %rcx,%rcx
jne    c154 <setByteArray+0x74>
mov    (%rdi),%rdi
test   %rdi,%rdi
jne    c192 <setByteArray+0xb2>
leaveq 
retq   
mov    %rdx,%r9
xor    %edx,%edx
mov    %r8,%rax
div    %rcx
cmp    %r9,%rax
jne    c14a <setByteArray+0x6a>
mov    %r8,%rax
mov    %r15,-0x20(%rbp)
mov    %rsi,-0x10(%rbp)
mov    %r8,-0x18(%rbp)
mov    %rdi,%r15
mov    %rax,%rdi
callq  8440 <_TIFFmalloc@plt>
mov    %rax,(%r15)
mov    %r15,%rdi
mov    -0x18(%rbp),%r8
mov    -0x10(%rbp),%rsi
mov    -0x20(%rbp),%r15
jmp    c14a <setByteArray+0x6a>
mov    %r8,%rdx
callq  8790 <_TIFFmemcpy@plt>
leaveq 
retq   
nopl   0x0(%rax)

000000000000c1a0 <_TIFFsetNString>:
push   %rbp
mov    %rsp,%rbp
mov    %edx,%edx
mov    $0x1,%ecx
callq  c0e0 <setByteArray>
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   (%rax)

000000000000c1c0 <_TIFFsetLong8Array>:
push   %rbp
mov    %rsp,%rbp
mov    %edx,%edx
mov    $0x8,%ecx
callq  c0e0 <setByteArray>
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   (%rax)

000000000000c1e0 <setDoubleArrayOneValue>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
movdqu %xmm0,-0x10(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rsi,-0x18(%rbp)
mov    (%rdi),%rax
test   %rax,%rax
jne    c205 <setDoubleArrayOneValue+0x25>
mov    %rdi,%r15
mov    %rsi,%rdi
jmp    c21e <setDoubleArrayOneValue+0x3e>
mov    %r14,-0x20(%rbp)
mov    %rsi,%r14
mov    %rdi,%r15
mov    %rax,%rdi
callq  8bb0 <_TIFFfree@plt>
mov    %r14,%rdi
mov    -0x20(%rbp),%r14
shl    $0x3,%rdi
callq  8440 <_TIFFmalloc@plt>
mov    %rax,(%r15)
test   %rax,%rax
je     c23a <setDoubleArrayOneValue+0x5a>
mov    -0x18(%rbp),%rax
movdqu -0x10(%rbp),%xmm0
jmp    c24c <setDoubleArrayOneValue+0x6c>
mov    -0x28(%rbp),%r15
leaveq 
retq   
mov    (%r15),%rcx
add    $0xffffffffffffffff,%rax
movsd  %xmm0,(%rcx,%rax,8)
test   %rax,%rax
jne    c240 <setDoubleArrayOneValue+0x60>
mov    -0x28(%rbp),%r15
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

000000000000c260 <setExtraSamples>:
push   %rbp
mov    %rsp,%rbp
movslq (%rsi),%rax
cmp    $0x2f,%eax
jle    c27d <setExtraSamples+0x1d>
mov    0x8(%rsi),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rsi)
movslq (%rcx),%rcx
jmp    c28a <setExtraSamples+0x2a>
mov    0x10(%rsi),%rcx
movslq (%rcx,%rax,1),%rcx
add    $0x8,%eax
mov    %eax,(%rsi)
movzwl %cx,%eax
mov    %eax,(%rdx)
xor    %eax,%eax
movzwl 0x4a(%rdi),%r8d
cmp    %cx,%r8w
jae    c29e <setExtraSamples+0x3e>
leaveq 
retq   
movslq (%rsi),%r8
cmp    $0x2f,%r8d
jle    c2b8 <setExtraSamples+0x58>
mov    0x8(%rsi),%r8
lea    0x8(%r8),%rcx
mov    %rcx,0x8(%rsi)
mov    (%r8),%rsi
jmp    c2c9 <setExtraSamples+0x69>
mov    0x10(%rsi),%rcx
mov    (%rcx,%r8,1),%r9
lea    0x8(%r8),%ecx
mov    %ecx,(%rsi)
mov    %r9,%rsi
mov    (%rdx),%ecx
test   %ecx,%ecx
jne    c2d4 <setExtraSamples+0x74>
mov    %rax,%rcx
jmp    c2ff <setExtraSamples+0x9f>
test   %rsi,%rsi
je     c326 <setExtraSamples+0xc6>
mov    %rax,%rcx
jmp    c2ff <setExtraSamples+0x9f>
mov    %ecx,%r9d
movzwl (%rsi,%r9,2),%r8d
cmp    $0x2,%r8w
jbe    c2fc <setExtraSamples+0x9c>
cmp    $0x3e7,%r8w
jne    c328 <setExtraSamples+0xc8>
movw   $0x2,(%rsi,%r9,2)
add    $0x1,%ecx
mov    (%rdx),%r8d
cmp    %r8d,%ecx
jb     c2de <setExtraSamples+0x7e>
mov    %r8w,0x9c(%rdi)
add    $0xa0,%rdi
movzwl %r8w,%edx
callq  8540 <_TIFFsetShortArray@plt>
mov    $0x1,%eax
leaveq 
retq   
leaveq 
retq   
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

000000000000c330 <checkInkNamesString>:
push   %rbp
mov    %rsp,%rbp
movzwl 0x82(%rdi),%ecx
test   %esi,%esi
jne    c376 <checkInkNamesString+0x46>
movzwl 0x82(%rdi),%r8d
movzwl %cx,%eax
mov    %r8,%r9
sub    %eax,%r9d
mov    0x3b8(%rdi),%r10
lea    0x451e8(%rip),%rsi        # 51546 <module.10+0xb1>
lea    0x451ee(%rip),%rdx        # 51553 <module.10+0xbe>
mov    (%rdi),%rcx
mov    %r10,%rdi
xor    %eax,%eax
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
mov    %esi,%eax
lea    (%rdx,%rax,1),%rsi
mov    %rdx,%rax
jmp    c390 <checkInkNamesString+0x60>
cmp    %rsi,%rax
jae    c33f <checkInkNamesString+0xf>
add    $0x1,%rax
add    $0xffff,%ecx
test   %cx,%cx
jne    c3a7 <checkInkNamesString+0x77>
sub    %rdx,%rax
leaveq 
retq   
movsbq (%rax),%r8
test   %r8b,%r8b
je     c381 <checkInkNamesString+0x51>
add    $0x1,%rax
cmp    %rsi,%rax
jb     c39a <checkInkNamesString+0x6a>
jmp    c381 <checkInkNamesString+0x51>
xchg   %ax,%ax

000000000000c3b0 <TIFFClampDoubleToFloat>:
push   %rbp
mov    %rsp,%rbp
movsd  0x455dc(%rip),%xmm1        # 51998 <module.43+0xc6>
ucomisd %xmm1,%xmm0
jbe    c3cc <TIFFClampDoubleToFloat+0x1c>
movss  0x455c6(%rip),%xmm0        # 51990 <module.43+0xbe>
leaveq 
retq   
movsd  0x455cc(%rip),%xmm1        # 519a0 <module.43+0xce>
ucomisd %xmm1,%xmm0
jp     c3e6 <TIFFClampDoubleToFloat+0x36>
jae    c3e6 <TIFFClampDoubleToFloat+0x36>
movss  0x455b0(%rip),%xmm0        # 51994 <module.43+0xc2>
leaveq 
retq   
cvtsd2ss %xmm0,%xmm0
leaveq 
retq   
nopl   0x0(%rax)

000000000000c3f0 <_TIFFVSetField>:
push   %rbp
mov    %rsp,%rbp
sub    $0xb0,%rsp
mov    %rdi,-0x48(%rbp)
mov    %rdx,-0x60(%rbp)
mov    %rsi,-0x68(%rbp)
xor    %edx,%edx
mov    %rdx,-0x70(%rbp)
callq  8680 <TIFFFindField@plt>
test   %rax,%rax
jne    c41b <_TIFFVSetField+0x2b>
xor    %eax,%eax
leaveq 
retq   
movzwl 0x18(%rax),%ecx
cmp    $0x41,%cx
je     c42d <_TIFFVSetField+0x3d>
pushq  -0x68(%rbp)
popq   -0x78(%rbp)
jmp    c433 <_TIFFVSetField+0x43>
pushq  -0x70(%rbp)
popq   -0x78(%rbp)
mov    0x6dad6(%rip),%r10        # 79f10 <_TIFFSwab16BitData@@Base+0x2f5c0>
mov    0x6db2f(%rip),%r9        # 79f70 <_TIFFSwab32BitData@@Base+0x2f580>
mov    0x6dab8(%rip),%r8        # 79f00 <_TIFFSwab64BitData@@Base+0x2f4c0>
lea    0x4513d(%rip),%rsi        # 5158c <module.19>
mov    $0x1,%edx
mov    %rdx,-0x40(%rbp)
mov    -0x78(%rbp),%rdi
cmp    $0x128,%edi
jbe    c4c3 <_TIFFVSetField+0xd3>
cmp    $0x153,%edi
jbe    c52b <_TIFFVSetField+0x13b>
cmp    $0x80e2,%edi
jbe    c58b <_TIFFVSetField+0x19b>
cmp    $0x80e4,%edi
jbe    c5d3 <_TIFFVSetField+0x1e3>
cmp    $0x80e5,%edi
jbe    c603 <_TIFFVSetField+0x213>
cmp    $0x80e6,%edi
jne    c632 <_TIFFVSetField+0x242>
mov    -0x60(%rbp),%rsi
movslq (%rsi),%rcx
cmp    $0x2f,%ecx
jle    c662 <_TIFFVSetField+0x272>
mov    0x8(%rsi),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rsi)
mov    (%rcx),%eax
jmpq   c66e <_TIFFVSetField+0x27e>
cmp    $0x114,%edi
jbe    c682 <_TIFFVSetField+0x292>
xorpd  %xmm1,%xmm1
cmp    $0x11a,%edi
jbe    c6d6 <_TIFFVSetField+0x2e6>
cmp    $0x11d,%edi
jbe    c71e <_TIFFVSetField+0x32e>
cmp    $0x11e,%edi
jbe    c752 <_TIFFVSetField+0x362>
cmp    $0x11f,%edi
jne    c786 <_TIFFVSetField+0x396>
mov    -0x60(%rbp),%rdx
movslq 0x4(%rdx),%rax
cmp    $0xaf,%eax
jle    c7b6 <_TIFFVSetField+0x3c6>
mov    0x8(%rdx),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rdx)
movsd  (%rcx),%xmm0
jmpq   c7c5 <_TIFFVSetField+0x3d5>
cmp    $0x142,%edi
jbe    c7e2 <_TIFFVSetField+0x3f2>
cmp    $0x14c,%edi
jbe    c82a <_TIFFVSetField+0x43a>
cmp    $0x151,%edi
jbe    c85a <_TIFFVSetField+0x46a>
cmp    $0x152,%edi
je     c886 <_TIFFVSetField+0x496>
cmp    $0x153,%edi
jne    c8d8 <_TIFFVSetField+0x4e8>
mov    -0x60(%rbp),%rsi
movslq (%rsi),%rcx
cmp    $0x2f,%ecx
jle    c8f1 <_TIFFVSetField+0x501>
mov    0x8(%rsi),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rsi)
movslq (%rcx),%rax
jmpq   c8fe <_TIFFVSetField+0x50e>
cmp    $0x211,%edi
jbe    c8c0 <_TIFFVSetField+0x4d0>
cmp    $0x212,%edi
jbe    c919 <_TIFFVSetField+0x529>
cmp    $0x213,%edi
jne    c945 <_TIFFVSetField+0x555>
mov    -0x60(%rbp),%rsi
movslq (%rsi),%rcx
cmp    $0x2f,%ecx
jle    c971 <_TIFFVSetField+0x581>
mov    0x8(%rsi),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rsi)
movslq (%rcx),%rax
jmpq   c97e <_TIFFVSetField+0x58e>
cmp    $0x80e3,%edi
jne    c990 <_TIFFVSetField+0x5a0>
mov    -0x60(%rbp),%rsi
movslq (%rsi),%rcx
cmp    $0x2f,%ecx
jle    c9c0 <_TIFFVSetField+0x5d0>
mov    0x8(%rsi),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rsi)
movslq (%rcx),%rax
jmpq   c9cd <_TIFFVSetField+0x5dd>
cmp    $0x80e5,%edi
jne    c8d8 <_TIFFVSetField+0x4e8>
mov    -0x60(%rbp),%rsi
movslq (%rsi),%rcx
cmp    $0x2f,%ecx
jle    c9dd <_TIFFVSetField+0x5ed>
mov    0x8(%rsi),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rsi)
mov    (%rcx),%eax
jmpq   c9e9 <_TIFFVSetField+0x5f9>
cmp    $0x1001b,%edi
jne    c8d8 <_TIFFVSetField+0x4e8>
mov    -0x60(%rbp),%rsi
movslq (%rsi),%rcx
cmp    $0x2f,%ecx
jle    c9f7 <_TIFFVSetField+0x607>
mov    0x8(%rsi),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rsi)
movslq (%rcx),%rax
jmpq   ca04 <_TIFFVSetField+0x614>
mov    0x10(%rsi),%rax
mov    (%rax,%rcx,1),%eax
add    $0x8,%ecx
mov    %ecx,(%rsi)
test   %eax,%eax
jne    ca2d <_TIFFVSetField+0x63d>
xor    %r8d,%r8d
mov    -0x48(%rbp),%r9
jmpq   ca56 <_TIFFVSetField+0x666>
cmp    $0x102,%edi
jbe    ca8f <_TIFFVSetField+0x69f>
cmp    $0x106,%edi
jbe    caca <_TIFFVSetField+0x6da>
cmp    $0x109,%edi
jbe    cafa <_TIFFVSetField+0x70a>
cmp    $0x10a,%edi
jne    cb2a <_TIFFVSetField+0x73a>
mov    -0x60(%rbp),%rsi
movslq (%rsi),%rcx
cmp    $0x2f,%ecx
jle    cb5a <_TIFFVSetField+0x76a>
mov    0x8(%rsi),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rsi)
movslq (%rcx),%rax
jmpq   cb67 <_TIFFVSetField+0x777>
cmp    $0x117,%edi
jbe    cb89 <_TIFFVSetField+0x799>
cmp    $0x118,%edi
jbe    cbb9 <_TIFFVSetField+0x7c9>
cmp    $0x119,%edi
jne    cbe9 <_TIFFVSetField+0x7f9>
mov    -0x60(%rbp),%rsi
movslq (%rsi),%rcx
cmp    $0x2f,%ecx
jle    cc1d <_TIFFVSetField+0x82d>
mov    0x8(%rsi),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rsi)
movslq (%rcx),%rax
jmpq   cc2a <_TIFFVSetField+0x83a>
cmp    $0x11b,%edi
jne    cc3c <_TIFFVSetField+0x84c>
mov    -0x60(%rbp),%rdx
movslq 0x4(%rdx),%rax
cmp    $0xaf,%eax
jle    cc6c <_TIFFVSetField+0x87c>
mov    0x8(%rdx),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rdx)
movsd  (%rcx),%xmm0
jmpq   cc7b <_TIFFVSetField+0x88b>
cmp    $0x11e,%edi
jne    c8d8 <_TIFFVSetField+0x4e8>
mov    -0x60(%rbp),%rdx
movslq 0x4(%rdx),%rax
cmp    $0xaf,%eax
jle    ccc6 <_TIFFVSetField+0x8d6>
mov    0x8(%rdx),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rdx)
movsd  (%rcx),%xmm0
jmpq   ccd5 <_TIFFVSetField+0x8e5>
cmp    $0x128,%edi
jne    c8d8 <_TIFFVSetField+0x4e8>
mov    -0x60(%rbp),%rsi
movslq (%rsi),%rcx
cmp    $0x2f,%ecx
jle    ccef <_TIFFVSetField+0x8ff>
mov    0x8(%rsi),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rsi)
movslq (%rcx),%rax
jmpq   ccfc <_TIFFVSetField+0x90c>
mov    0x10(%rdx),%rcx
movsd  (%rcx,%rax,1),%xmm0
add    $0x10,%eax
mov    %eax,0x4(%rdx)
callq  c3b0 <TIFFClampDoubleToFloat>
mov    -0x48(%rbp),%rdi
movss  %xmm0,0xb0(%rdi)
mov    $0x1,%edx
xor    %eax,%eax
jmpq   cd3d <_TIFFVSetField+0x94d>
cmp    $0x13f,%edi
jbe    cd47 <_TIFFVSetField+0x957>
cmp    $0x140,%edi
jbe    cd77 <_TIFFVSetField+0x987>
cmp    $0x141,%edi
jne    cdb0 <_TIFFVSetField+0x9c0>
mov    -0x60(%rbp),%rsi
movslq (%rsi),%rcx
cmp    $0x2f,%ecx
jle    cde0 <_TIFFVSetField+0x9f0>
mov    0x8(%rsi),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rsi)
movslq (%rcx),%rax
jmpq   cded <_TIFFVSetField+0x9fd>
cmp    $0x143,%edi
jne    ce18 <_TIFFVSetField+0xa28>
mov    -0x60(%rbp),%rsi
movslq (%rsi),%rax
cmp    $0x2f,%eax
jle    ce5d <_TIFFVSetField+0xa6d>
mov    0x8(%rsi),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rsi)
mov    (%rcx),%r8d
jmpq   ce6a <_TIFFVSetField+0xa7a>
cmp    $0x14d,%edi
jne    c8d8 <_TIFFVSetField+0x4e8>
mov    -0x60(%rbp),%rdx
movslq (%rdx),%rcx
cmp    $0x2f,%ecx
jle    ce92 <_TIFFVSetField+0xaa2>
mov    0x8(%rdx),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rdx)
movslq (%rcx),%rax
jmpq   ce9f <_TIFFVSetField+0xaaf>
mov    -0x48(%rbp),%rax
lea    0x38(%rax),%rdi
lea    -0xb0(%rbp),%rdx
mov    %r15,-0x78(%rbp)
mov    %rax,%r15
mov    -0x60(%rbp),%rsi
callq  c260 <setExtraSamples>
test   %eax,%eax
je     cec8 <_TIFFVSetField+0xad8>
mov    %r15,%rdi
mov    -0x78(%rbp),%r15
mov    $0x1,%edx
xor    %eax,%eax
jmpq   cd3d <_TIFFVSetField+0x94d>
cmp    $0x154,%edi
je     ced4 <_TIFFVSetField+0xae4>
cmp    $0x155,%edi
je     cf0d <_TIFFVSetField+0xb1d>
cmp    $0x41,%cx
jne    cf46 <_TIFFVSetField+0xb56>
xor    %edx,%edx
mov    -0x48(%rbp),%rdi
mov    -0x68(%rbp),%r8
jmpq   cf91 <_TIFFVSetField+0xba1>
mov    0x10(%rsi),%rax
movslq (%rax,%rcx,1),%rax
add    $0x8,%ecx
mov    %ecx,(%rsi)
movzwl %ax,%ecx
mov    %ecx,-0xb0(%rbp)
test   %ax,%ax
jne    d010 <_TIFFVSetField+0xc20>
mov    -0x48(%rbp),%rax
jmpq   d043 <_TIFFVSetField+0xc53>
cmp    $0x212,%edi
jne    c8d8 <_TIFFVSetField+0x4e8>
mov    -0x60(%rbp),%rsi
movslq (%rsi),%rcx
cmp    $0x2f,%ecx
jle    d07c <_TIFFVSetField+0xc8c>
mov    0x8(%rsi),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rsi)
movslq (%rcx),%rax
jmpq   d089 <_TIFFVSetField+0xc99>
cmp    $0x214,%edi
jne    c8d8 <_TIFFVSetField+0x4e8>
mov    -0x60(%rbp),%rdx
movslq (%rdx),%rcx
cmp    $0x2f,%ecx
jle    d0b4 <_TIFFVSetField+0xcc4>
mov    0x8(%rdx),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rdx)
mov    (%rcx),%rsi
jmpq   d0c1 <_TIFFVSetField+0xcd1>
mov    0x10(%rsi),%rax
movslq (%rax,%rcx,1),%rax
add    $0x8,%ecx
mov    %ecx,(%rsi)
mov    -0x48(%rbp),%rdi
mov    %ax,0x10c(%rdi)
xor    %eax,%eax
jmpq   cd3d <_TIFFVSetField+0x94d>
cmp    $0x80e4,%edi
jne    c8d8 <_TIFFVSetField+0x4e8>
mov    -0x60(%rbp),%rsi
movslq (%rsi),%rcx
cmp    $0x2f,%ecx
jle    d0e6 <_TIFFVSetField+0xcf6>
mov    0x8(%rsi),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rsi)
movslq (%rcx),%rax
jmpq   d0f3 <_TIFFVSetField+0xd03>
mov    0x10(%rsi),%rax
movslq (%rax,%rcx,1),%rax
add    $0x8,%ecx
mov    %ecx,(%rsi)
test   %ax,%ax
jne    d123 <_TIFFVSetField+0xd33>
xor    %eax,%eax
jmpq   d126 <_TIFFVSetField+0xd36>
mov    0x10(%rsi),%rax
mov    (%rax,%rcx,1),%eax
add    $0x8,%ecx
mov    %ecx,(%rsi)
mov    -0x48(%rbp),%rdi
mov    %eax,0x60(%rdi)
xor    %eax,%eax
jmpq   cd3d <_TIFFVSetField+0x94d>
mov    0x10(%rsi),%rax
movslq (%rax,%rcx,1),%rax
add    $0x8,%ecx
mov    %ecx,(%rsi)
movzwl %ax,%ecx
mov    %ecx,-0xb0(%rbp)
cmp    $0x1,%ax
je     d141 <_TIFFVSetField+0xd51>
mov    -0x48(%rbp),%rdi
mov    0x10(%rdi),%eax
and    $0xffbfffff,%eax
mov    %eax,0x10(%rdi)
xor    %eax,%eax
jmpq   cd3d <_TIFFVSetField+0x94d>
mov    -0x48(%rbp),%rdi
mov    %eax,0x6c(%rdi)
xor    %eax,%eax
jmpq   cd3d <_TIFFVSetField+0x94d>
mov    0x10(%rsi),%rax
mov    (%rax,%rcx,1),%eax
add    $0x8,%ecx
mov    %ecx,(%rsi)
test   %eax,%eax
jne    d157 <_TIFFVSetField+0xd67>
xor    %r8d,%r8d
mov    -0x48(%rbp),%r9
mov    %r9,%rdi
mov    %r15,-0x78(%rbp)
mov    %r14,-0x48(%rbp)
mov    %r9,%r14
mov    %r8,%r15
mov    -0x68(%rbp),%rsi
callq  8ae0 <TIFFFieldWithTag@plt>
mov    0x3b8(%r14),%rdi
mov    (%r14),%rcx
test   %rax,%rax
jne    d179 <_TIFFVSetField+0xd89>
lea    0x44daf(%rip),%r9        # 51839 <module.19+0x2ad>
jmpq   d17d <_TIFFVSetField+0xd8d>
cmp    $0x100,%edi
jbe    d1a1 <_TIFFVSetField+0xdb1>
cmp    $0x101,%edi
jne    d1d0 <_TIFFVSetField+0xde0>
mov    -0x60(%rbp),%rsi
movslq (%rsi),%rcx
cmp    $0x2f,%ecx
jle    d200 <_TIFFVSetField+0xe10>
mov    0x8(%rsi),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rsi)
mov    (%rcx),%eax
jmpq   d20c <_TIFFVSetField+0xe1c>
cmp    $0x103,%edi
jne    d21a <_TIFFVSetField+0xe2a>
mov    -0x60(%rbp),%rsi
movslq (%rsi),%rcx
cmp    $0x2f,%ecx
jle    d24a <_TIFFVSetField+0xe5a>
mov    0x8(%rsi),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rsi)
movslq (%rcx),%rax
jmpq   d257 <_TIFFVSetField+0xe67>
cmp    $0x107,%edi
jne    c8d8 <_TIFFVSetField+0x4e8>
mov    -0x60(%rbp),%rsi
movslq (%rsi),%rcx
cmp    $0x2f,%ecx
jle    d2a9 <_TIFFVSetField+0xeb9>
mov    0x8(%rsi),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rsi)
movslq (%rcx),%rax
jmpq   d2b6 <_TIFFVSetField+0xec6>
cmp    $0x112,%edi
jne    c8d8 <_TIFFVSetField+0x4e8>
mov    -0x60(%rbp),%rsi
movslq (%rsi),%rcx
cmp    $0x2f,%ecx
jle    d2c5 <_TIFFVSetField+0xed5>
mov    0x8(%rsi),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rsi)
movslq (%rcx),%rax
jmpq   d2d2 <_TIFFVSetField+0xee2>
mov    0x10(%rsi),%rax
movslq (%rax,%rcx,1),%rax
add    $0x8,%ecx
mov    %ecx,(%rsi)
movzwl %ax,%ecx
mov    %ecx,-0xb0(%rbp)
cmp    $0x2,%ax
jne    d2ed <_TIFFVSetField+0xefd>
mov    -0x48(%rbp),%rdi
mov    %ax,0x7e(%rdi)
xor    %eax,%eax
jmpq   cd3d <_TIFFVSetField+0x94d>
cmp    $0x115,%edi
jne    d300 <_TIFFVSetField+0xf10>
mov    -0x60(%rbp),%rdi
movslq (%rdi),%rcx
cmp    $0x2f,%ecx
jle    d020 <_TIFFVSetField+0xc30>
mov    0x8(%rdi),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rdi)
movslq (%rcx),%rax
jmpq   d02d <_TIFFVSetField+0xc3d>
cmp    $0x118,%edi
jne    c8d8 <_TIFFVSetField+0x4e8>
mov    -0x60(%rbp),%rsi
movslq (%rsi),%rcx
cmp    $0x2f,%ecx
jle    d32f <_TIFFVSetField+0xf3f>
mov    0x8(%rsi),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rsi)
movslq (%rcx),%rax
jmpq   d33c <_TIFFVSetField+0xf4c>
cmp    $0x11a,%edi
jne    c8d8 <_TIFFVSetField+0x4e8>
mov    -0x60(%rbp),%rdx
movslq 0x4(%rdx),%rax
cmp    $0xaf,%eax
jle    d34e <_TIFFVSetField+0xf5e>
mov    0x8(%rdx),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rdx)
movsd  (%rcx),%xmm0
jmpq   d35d <_TIFFVSetField+0xf6d>
mov    0x10(%rsi),%rax
movslq (%rax,%rcx,1),%rax
add    $0x8,%ecx
mov    %ecx,(%rsi)
mov    -0x48(%rbp),%rdi
mov    %ax,0x8a(%rdi)
xor    %eax,%eax
jmpq   cd3d <_TIFFVSetField+0x94d>
cmp    $0x11c,%edi
jne    c8d8 <_TIFFVSetField+0x4e8>
mov    -0x60(%rbp),%rsi
movslq (%rsi),%rcx
cmp    $0x2f,%ecx
jle    d386 <_TIFFVSetField+0xf96>
mov    0x8(%rsi),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rsi)
movslq (%rcx),%rax
jmpq   d393 <_TIFFVSetField+0xfa3>
mov    0x10(%rdx),%rcx
movsd  (%rcx,%rax,1),%xmm0
add    $0x10,%eax
mov    %eax,0x4(%rdx)
ucomisd %xmm1,%xmm0
jp     d3b8 <_TIFFVSetField+0xfc8>
jae    d3b8 <_TIFFVSetField+0xfc8>
movdqu %xmm0,-0x60(%rbp)
mov    -0x48(%rbp),%rax
mov    %rax,%rdi
mov    %r15,-0x78(%rbp)
mov    %rax,%r15
mov    -0x68(%rbp),%rsi
callq  8ae0 <TIFFFieldWithTag@plt>
mov    0x3b8(%r15),%rdi
mov    (%r15),%rcx
test   %rax,%rax
jne    d3d5 <_TIFFVSetField+0xfe5>
lea    0x44b78(%rip),%r8        # 51839 <module.19+0x2ad>
jmpq   d3d9 <_TIFFVSetField+0xfe9>
mov    0x10(%rdx),%rcx
movsd  (%rcx,%rax,1),%xmm0
add    $0x10,%eax
mov    %eax,0x4(%rdx)
callq  c3b0 <TIFFClampDoubleToFloat>
mov    -0x48(%rbp),%rdi
movss  %xmm0,0xac(%rdi)
mov    $0x1,%edx
xor    %eax,%eax
jmp    cd3d <_TIFFVSetField+0x94d>
mov    0x10(%rsi),%rax
movslq (%rax,%rcx,1),%rax
add    $0x8,%ecx
mov    %ecx,(%rsi)
movzwl %ax,%ecx
mov    %ecx,-0xb0(%rbp)
test   %ax,%ax
jne    d3fe <_TIFFVSetField+0x100e>
mov    -0x48(%rbp),%rax
jmpq   d043 <_TIFFVSetField+0xc53>
lea    0x449f9(%rip),%r8        # 51717 <module.19+0x18b>
xor    %r10d,%r10d
lea    0x449bf(%rip),%rdx        # 516e7 <module.19+0x15b>
mov    0x20(%rax),%r9
mov    %r10,%rax
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x48(%rbp),%rdi
mov    %rax,%rdx
test   %edx,%edx
jne    d411 <_TIFFVSetField+0x1021>
leaveq 
retq   
cmp    $0x129,%edi
jne    d468 <_TIFFVSetField+0x1078>
mov    -0x60(%rbp),%rsi
movslq (%rsi),%rcx
cmp    $0x2f,%ecx
jle    d499 <_TIFFVSetField+0x10a9>
mov    0x8(%rsi),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rsi)
movslq (%rcx),%rax
jmpq   d4a6 <_TIFFVSetField+0x10b6>
cmp    $0x140,%edi
jne    c8d8 <_TIFFVSetField+0x4e8>
mov    -0x48(%rbp),%r8
movzwl 0x74(%r8),%ecx
mov    -0x60(%rbp),%rax
movslq (%rax),%rdi
cmp    $0x2f,%edi
jle    d4d1 <_TIFFVSetField+0x10e1>
mov    0x8(%rax),%rdi
lea    0x8(%rdi),%rsi
mov    %rsi,0x8(%rax)
mov    (%rdi),%rsi
jmpq   d4de <_TIFFVSetField+0x10ee>
cmp    $0x142,%edi
jne    c8d8 <_TIFFVSetField+0x4e8>
mov    -0x60(%rbp),%rsi
movslq (%rsi),%rax
cmp    $0x2f,%eax
jle    d529 <_TIFFVSetField+0x1139>
mov    0x8(%rsi),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rsi)
mov    (%rcx),%r8d
jmpq   d536 <_TIFFVSetField+0x1146>
mov    0x10(%rsi),%rax
movslq (%rax,%rcx,1),%rax
add    $0x8,%ecx
mov    %ecx,(%rsi)
mov    -0x48(%rbp),%rdi
mov    %ax,0xd0(%rdi)
movslq (%rsi),%rcx
cmp    $0x2f,%ecx
jle    d55e <_TIFFVSetField+0x116e>
mov    0x8(%rsi),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rsi)
movslq (%rcx),%rax
jmpq   d56b <_TIFFVSetField+0x117b>
cmp    $0x14a,%edi
jne    c8d8 <_TIFFVSetField+0x4e8>
mov    -0x48(%rbp),%r8
mov    0x10(%r8),%eax
and    $0x2000,%eax
test   %eax,%eax
jne    d579 <_TIFFVSetField+0x1189>
mov    -0x60(%rbp),%rdx
movslq (%rdx),%rcx
cmp    $0x2f,%ecx
jle    d59f <_TIFFVSetField+0x11af>
mov    0x8(%rdx),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rdx)
movslq (%rcx),%rax
jmpq   d5ac <_TIFFVSetField+0x11bc>
mov    0x10(%rsi),%rcx
mov    (%rcx,%rax,1),%r8d
add    $0x8,%eax
mov    %eax,(%rsi)
mov    %r8,%rax
and    $0xf,%eax
test   %eax,%eax
jne    d5d4 <_TIFFVSetField+0x11e4>
mov    -0x48(%rbp),%rdi
mov    %r8d,0x68(%rdi)
mov    0x10(%rdi),%eax
or     $0x400,%eax
mov    %eax,0x10(%rdi)
xor    %eax,%eax
jmpq   cd3d <_TIFFVSetField+0x94d>
mov    0x10(%rdx),%rax
movslq (%rax,%rcx,1),%rax
add    $0x8,%ecx
mov    %ecx,(%rdx)
movzwl %ax,%eax
mov    %eax,-0xb0(%rbp)
movslq (%rdx),%rcx
cmp    $0x2f,%ecx
jle    d625 <_TIFFVSetField+0x1235>
mov    0x8(%rdx),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rdx)
mov    (%rcx),%rsi
jmpq   d632 <_TIFFVSetField+0x1242>
mov    %r15,%rax
mov    -0x78(%rbp),%r15
jmpq   d043 <_TIFFVSetField+0xc53>
mov    -0x48(%rbp),%r8
mov    0x10(%r8),%eax
and    $0x400000,%eax
test   %eax,%eax
je     d687 <_TIFFVSetField+0x1297>
mov    -0x60(%rbp),%rdx
movslq (%rdx),%rcx
cmp    $0x2f,%ecx
jle    d6b0 <_TIFFVSetField+0x12c0>
mov    0x8(%rdx),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rdx)
mov    (%rcx),%rsi
jmpq   d6bd <_TIFFVSetField+0x12cd>
mov    -0x48(%rbp),%r8
mov    0x10(%r8),%eax
and    $0x400000,%eax
test   %eax,%eax
je     d6e1 <_TIFFVSetField+0x12f1>
mov    -0x60(%rbp),%rdx
movslq (%rdx),%rcx
cmp    $0x2f,%ecx
jle    d70a <_TIFFVSetField+0x131a>
mov    0x8(%rdx),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rdx)
mov    (%rcx),%rsi
jmpq   d717 <_TIFFVSetField+0x1327>
mov    -0x48(%rbp),%rcx
mov    0x3b8(%rcx),%rdi
mov    (%rcx),%rcx
mov    -0x68(%rbp),%rdx
cmp    $0xffff,%edx
ja     cd17 <_TIFFVSetField+0x927>
lea    0x447b4(%rip),%r8        # 5171f <module.19+0x193>
jmpq   cd1e <_TIFFVSetField+0x92e>
movslq %edx,%rcx
lea    (%rcx,%rcx,2),%rcx
shl    $0x3,%rcx
add    0x148(%rdi),%rcx
mov    (%rcx),%rsi
cmp    (%rsi),%r8d
je     d73b <_TIFFVSetField+0x134b>
add    $0x1,%edx
cmp    0x140(%rdi),%edx
jl     cf70 <_TIFFVSetField+0xb80>
xor    %ecx,%ecx
test   %rcx,%rcx
jne    d7c3 <_TIFFVSetField+0x13d3>
movslq 0x140(%rdi),%rcx
add    $0x1,%ecx
mov    %ecx,0x140(%rdi)
mov    0x148(%rdi),%rdx
movslq %ecx,%rcx
lea    (%rcx,%rcx,2),%rsi
shl    $0x3,%rsi
mov    %r15,-0x78(%rbp)
mov    %r14,-0x38(%rbp)
mov    %rax,%r14
mov    %rdi,%r15
mov    %rdx,%rdi
callq  8100 <_TIFFrealloc@plt>
test   %rax,%rax
jne    d787 <_TIFFVSetField+0x1397>
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
lea    0x4472b(%rip),%rdx        # 51720 <module.19+0x194>
mov    (%r15),%rcx
lea    0x4458d(%rip),%rsi        # 5158c <module.19>
callq  8a00 <TIFFErrorExt@plt>
mov    -0x38(%rbp),%r14
mov    -0x78(%rbp),%r15
xor    %eax,%eax
leaveq 
retq   
cmp    $0x6,%ax
jbe    d829 <_TIFFVSetField+0x1439>
mov    -0x48(%rbp),%rax
jmp    d043 <_TIFFVSetField+0xc53>
mov    0x10(%rdi),%rax
movslq (%rax,%rcx,1),%rax
add    $0x8,%ecx
mov    %ecx,(%rdi)
movzwl %ax,%ecx
mov    %ecx,-0xb0(%rbp)
test   %ax,%ax
jne    d85a <_TIFFVSetField+0x146a>
mov    -0x48(%rbp),%rax
mov    %rax,%rdi
mov    %r15,-0x78(%rbp)
mov    %rax,%r15
mov    -0x68(%rbp),%rsi
callq  8ae0 <TIFFFieldWithTag@plt>
mov    0x3b8(%r15),%rdi
mov    (%r15),%rcx
mov    -0xb0(%rbp),%r8d
test   %rax,%rax
jne    d883 <_TIFFVSetField+0x1493>
lea    0x447c2(%rip),%r9        # 51839 <module.19+0x2ad>
jmpq   d887 <_TIFFVSetField+0x1497>
mov    0x10(%rsi),%rax
movslq (%rax,%rcx,1),%rax
add    $0x8,%ecx
mov    %ecx,(%rsi)
mov    -0x48(%rbp),%rdi
mov    %ax,0x108(%rdi)
movslq (%rsi),%rcx
cmp    $0x2f,%ecx
jle    d8a4 <_TIFFVSetField+0x14b4>
mov    0x8(%rsi),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rsi)
movslq (%rcx),%rax
jmpq   d8b1 <_TIFFVSetField+0x14c1>
mov    0x10(%rdx),%rax
mov    (%rax,%rcx,1),%rsi
lea    0x8(%rcx),%eax
mov    %eax,(%rdx)
mov    -0x48(%rbp),%rax
lea    0x128(%rax),%rdi
mov    $0x6,%edx
callq  87f0 <_TIFFsetFloatArray@plt>
mov    $0x1,%edx
xor    %eax,%eax
mov    -0x48(%rbp),%rdi
jmpq   cd3d <_TIFFVSetField+0x94d>
mov    0x10(%rsi),%rax
movslq (%rax,%rcx,1),%rax
add    $0x8,%ecx
mov    %ecx,(%rsi)
movzwl %ax,%ecx
mov    %ecx,-0xb0(%rbp)
cmp    $0x1,%ax
jbe    d8bf <_TIFFVSetField+0x14cf>
cmp    $0x2,%ax
je     d8db <_TIFFVSetField+0x14eb>
cmp    $0x3,%ax
je     d8ea <_TIFFVSetField+0x14fa>
mov    -0x48(%rbp),%rax
jmpq   d043 <_TIFFVSetField+0xc53>
mov    %rdx,%rax
mov    -0x48(%rbp),%rdi
mov    %ax,0xd4(%rdi)
test   %ax,%ax
jne    d8f9 <_TIFFVSetField+0x1509>
xor    %eax,%eax
jmpq   cd3d <_TIFFVSetField+0x94d>
mov    -0x48(%rbp),%rdi
mov    0x10(%rdi),%eax
or     $0x400000,%eax
mov    %eax,0x10(%rdi)
xor    %eax,%eax
jmpq   cd3d <_TIFFVSetField+0x94d>
mov    -0x48(%rbp),%rdi
mov    %eax,0x84(%rdi)
mov    0x38(%rdi),%rcx
and    $0x4,%rcx
test   %rcx,%rcx
je     d925 <_TIFFVSetField+0x1535>
xor    %eax,%eax
jmpq   cd3d <_TIFFVSetField+0x94d>
mov    0x20(%rax),%r9
mov    %r15,%r8
xor    %eax,%eax
lea    0x44403(%rip),%rsi        # 5158c <module.19>
lea    0x4468b(%rip),%rdx        # 5181b <module.19+0x28f>
callq  8a00 <TIFFErrorExt@plt>
mov    -0x48(%rbp),%r14
mov    -0x78(%rbp),%r15
xor    %eax,%eax
leaveq 
retq   
cmp    $0xfe,%edi
jne    d935 <_TIFFVSetField+0x1545>
mov    -0x60(%rbp),%rsi
movslq (%rsi),%rcx
cmp    $0x2f,%ecx
jle    d964 <_TIFFVSetField+0x1574>
mov    0x8(%rsi),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rsi)
mov    (%rcx),%eax
jmpq   d970 <_TIFFVSetField+0x1580>
cmp    $0x102,%edi
jne    c8d8 <_TIFFVSetField+0x4e8>
mov    -0x60(%rbp),%rcx
movslq (%rcx),%rsi
cmp    $0x2f,%esi
jle    d97e <_TIFFVSetField+0x158e>
mov    0x8(%rcx),%rsi
lea    0x8(%rsi),%rax
mov    %rax,0x8(%rcx)
movslq (%rsi),%rax
jmpq   d98b <_TIFFVSetField+0x159b>
mov    0x10(%rsi),%rax
mov    (%rax,%rcx,1),%eax
add    $0x8,%ecx
mov    %ecx,(%rsi)
mov    -0x48(%rbp),%rdi
mov    %eax,0x5c(%rdi)
xor    %eax,%eax
jmpq   cd3d <_TIFFVSetField+0x94d>
cmp    $0x106,%edi
jne    c8d8 <_TIFFVSetField+0x4e8>
mov    -0x60(%rbp),%rsi
movslq (%rsi),%rcx
cmp    $0x2f,%ecx
jle    d9ab <_TIFFVSetField+0x15bb>
mov    0x8(%rsi),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rsi)
movslq (%rcx),%rax
jmpq   d9b8 <_TIFFVSetField+0x15c8>
mov    0x10(%rsi),%rax
movslq (%rax,%rcx,1),%rax
add    $0x8,%ecx
mov    %ecx,(%rsi)
movzwl %ax,%eax
mov    %eax,-0xb0(%rbp)
mov    -0x48(%rbp),%rdi
mov    0x38(%rdi),%rax
and    $0x80,%rax
test   %rax,%rax
jne    d9c7 <_TIFFVSetField+0x15d7>
movslq -0xb0(%rbp),%rsi
mov    %rdi,%rax
mov    %r15,-0x78(%rbp)
mov    %rdi,%r15
mov    %rax,%rdi
callq  8860 <TIFFSetCompressionScheme@plt>
test   %eax,%eax
jne    d9e0 <_TIFFVSetField+0x15f0>
mov    %r15,%rdi
mov    -0x78(%rbp),%r15
xor    %eax,%eax
mov    %rax,%rdx
jmpq   cd3d <_TIFFVSetField+0x94d>
mov    0x10(%rsi),%rax
movslq (%rax,%rcx,1),%rax
add    $0x8,%ecx
mov    %ecx,(%rsi)
mov    -0x48(%rbp),%rdi
mov    %ax,0x7c(%rdi)
xor    %eax,%eax
jmpq   cd3d <_TIFFVSetField+0x94d>
mov    0x10(%rsi),%rax
movslq (%rax,%rcx,1),%rax
add    $0x8,%ecx
mov    %ecx,(%rsi)
movzwl %ax,%ecx
mov    %ecx,-0xb0(%rbp)
test   %ax,%ax
jne    d9fd <_TIFFVSetField+0x160d>
mov    -0x48(%rbp),%rax
jmpq   d043 <_TIFFVSetField+0xc53>
cmp    $0x1,%ax
je     cb7a <_TIFFVSetField+0x78a>
mov    -0x48(%rbp),%rax
jmpq   d043 <_TIFFVSetField+0xc53>
cmp    $0x116,%edi
jne    c8d8 <_TIFFVSetField+0x4e8>
mov    -0x60(%rbp),%rsi
movslq (%rsi),%rcx
cmp    $0x2f,%ecx
jle    ca3b <_TIFFVSetField+0x64b>
mov    0x8(%rsi),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rsi)
mov    (%rcx),%eax
jmpq   ca47 <_TIFFVSetField+0x657>
mov    0x10(%rsi),%rax
movslq (%rax,%rcx,1),%rax
add    $0x8,%ecx
mov    %ecx,(%rsi)
mov    -0x48(%rbp),%rdi
mov    %ax,0x88(%rdi)
xor    %eax,%eax
jmpq   cd3d <_TIFFVSetField+0x94d>
mov    0x10(%rdx),%rcx
movsd  (%rcx,%rax,1),%xmm0
add    $0x10,%eax
mov    %eax,0x4(%rdx)
ucomisd %xmm1,%xmm0
jp     d369 <_TIFFVSetField+0xf79>
jb     cc8b <_TIFFVSetField+0x89b>
callq  c3b0 <TIFFClampDoubleToFloat>
mov    -0x48(%rbp),%rdi
movss  %xmm0,0xa0(%rdi)
mov    $0x1,%edx
xor    %eax,%eax
jmpq   cd3d <_TIFFVSetField+0x94d>
mov    0x10(%rsi),%rax
movslq (%rax,%rcx,1),%rax
add    $0x8,%ecx
mov    %ecx,(%rsi)
movzwl %ax,%ecx
mov    %ecx,-0xb0(%rbp)
cmp    $0x1,%ax
jne    da10 <_TIFFVSetField+0x1620>
mov    -0x48(%rbp),%rdi
mov    %ax,0xaa(%rdi)
xor    %eax,%eax
jmpq   cd3d <_TIFFVSetField+0x94d>
callq  c3b0 <TIFFClampDoubleToFloat>
mov    -0x48(%rbp),%rdi
movss  %xmm0,0xa4(%rdi)
mov    $0x1,%edx
xor    %eax,%eax
jmpq   cd3d <_TIFFVSetField+0x94d>
mov    0x20(%rax),%r8
mov    $0x1,%eax
lea    0x4445c(%rip),%rdx        # 51841 <module.19+0x2b5>
lea    0x441a0(%rip),%rsi        # 5158c <module.19>
movdqu -0x60(%rbp),%xmm0
callq  8a00 <TIFFErrorExt@plt>
mov    -0x78(%rbp),%r15
xor    %eax,%eax
leaveq 
retq   
cmp    $0x3,%ax
jbe    da23 <_TIFFVSetField+0x1633>
mov    -0x48(%rbp),%rax
jmpq   d043 <_TIFFVSetField+0xc53>
mov    %rdi,%rax
mov    %r15,-0x78(%rbp)
mov    %rdx,-0x8(%rbp)
mov    %rdi,%r15
mov    %rax,%rdi
mov    -0x68(%rbp),%rsi
callq  8ae0 <TIFFFieldWithTag@plt>
test   %rax,%rax
je     d453 <_TIFFVSetField+0x1063>
movzwl 0x18(%rax),%edx
mov    %rdx,%rcx
and    $0x1f,%ecx
mov    $0x1,%eax
shl    %cl,%rax
shr    $0x5,%edx
movslq %edx,%rcx
lea    0x38(%r15,%rcx,8),%rcx
or     (%rcx),%rax
mov    %rax,(%rcx)
mov    0x10(%r15),%eax
or     $0x8,%eax
mov    %eax,0x10(%r15)
mov    -0x8(%rbp),%rax
mov    -0x78(%rbp),%r15
leaveq 
retq   
cmp    $0x12d,%edi
jne    c8d8 <_TIFFVSetField+0x4e8>
mov    -0x48(%rbp),%rdi
movzwl 0x82(%rdi),%eax
movzwl 0xd4(%rdi),%ecx
sub    %ecx,%eax
cmp    $0x1,%eax
jg     da35 <_TIFFVSetField+0x1645>
mov    %rdx,%rax
jmpq   da3a <_TIFFVSetField+0x164a>
mov    0x10(%rsi),%rax
movslq (%rax,%rcx,1),%rax
add    $0x8,%ecx
mov    %ecx,(%rsi)
mov    -0x48(%rbp),%rdi
mov    %ax,0xb4(%rdi)
movslq (%rsi),%rcx
cmp    $0x2f,%ecx
jle    da5c <_TIFFVSetField+0x166c>
mov    0x8(%rsi),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rsi)
movslq (%rcx),%rax
jmpq   da69 <_TIFFVSetField+0x1679>
mov    0x10(%rax),%rsi
mov    (%rsi,%rdi,1),%rsi
add    $0x8,%edi
mov    %edi,(%rax)
shl    %cl,%rdx
lea    0xb8(%r8),%rdi
mov    %rdx,%rcx
mov    %r15,-0x78(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r13,-0x18(%rbp)
mov    %rax,%r13
mov    %rdx,%r14
mov    %rcx,%rdx
mov    %r8,%r15
callq  8540 <_TIFFsetShortArray@plt>
movslq 0x0(%r13),%rcx
cmp    $0x2f,%ecx
jle    da77 <_TIFFVSetField+0x1687>
mov    0x8(%r13),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%r13)
mov    (%rcx),%rsi
jmpq   da86 <_TIFFVSetField+0x1696>
mov    0x10(%rsi),%rcx
mov    (%rcx,%rax,1),%r8d
add    $0x8,%eax
mov    %eax,(%rsi)
mov    %r8,%rax
and    $0xf,%eax
test   %eax,%eax
jne    dab6 <_TIFFVSetField+0x16c6>
mov    -0x48(%rbp),%rdi
mov    %r8d,0x64(%rdi)
mov    0x10(%rdi),%eax
or     $0x400,%eax
mov    %eax,0x10(%rdi)
xor    %eax,%eax
jmpq   cd3d <_TIFFVSetField+0x94d>
mov    0x10(%rsi),%rax
movslq (%rax,%rcx,1),%rax
add    $0x8,%ecx
mov    %ecx,(%rsi)
mov    %ax,0xd2(%rdi)
xor    %eax,%eax
jmpq   cd3d <_TIFFVSetField+0x94d>
xor    %eax,%eax
mov    0x3b8(%r8),%rdi
lea    0x4413f(%rip),%rdx        # 516c8 <module.19+0x13c>
mov    (%r8),%rcx
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x48(%rbp),%rdi
mov    %rax,%rdx
jmpq   cd3d <_TIFFVSetField+0x94d>
mov    0x10(%rdx),%rax
movslq (%rax,%rcx,1),%rax
add    $0x8,%ecx
mov    %ecx,(%rdx)
mov    %ax,0xfc(%r8)
movslq (%rdx),%rcx
cmp    $0x2f,%ecx
jle    db07 <_TIFFVSetField+0x1717>
mov    0x8(%rdx),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rdx)
mov    (%rcx),%rsi
jmpq   db14 <_TIFFVSetField+0x1724>
mov    -0x48(%rbp),%r9
movslq 0xc(%r9),%rax
test   %eax,%eax
jne    ca56 <_TIFFVSetField+0x666>
xor    %eax,%eax
mov    0x3b8(%r9),%rdi
mov    (%r9),%rsi
lea    0x440a8(%rip),%rdx        # 5169f <module.19+0x113>
mov    %r8,%rcx
mov    %r15,-0x78(%rbp)
mov    %r14,-0x28(%rbp)
mov    %r8,%r14
mov    %r9,%r15
callq  85a0 <TIFFWarningExt@plt>
mov    %r15,%rdi
mov    %r14,%r8
mov    -0x28(%rbp),%r14
mov    -0x78(%rbp),%r15
mov    $0x1,%edx
jmpq   ce7c <_TIFFVSetField+0xa8c>
mov    0x10(%rdx),%rax
mov    (%rax,%rcx,1),%rsi
lea    0x8(%rcx),%eax
mov    %eax,(%rdx)
mov    -0xb0(%rbp),%ecx
mov    -0x48(%rbp),%rax
mov    %rax,%rdi
mov    %rsi,%rdx
mov    %r15,-0x78(%rbp)
mov    %r14,-0x30(%rbp)
mov    %rsi,%r14
mov    %rcx,%rsi
mov    %rax,%r15
callq  c330 <checkInkNamesString>
test   %eax,%eax
je     d662 <_TIFFVSetField+0x1272>
pushq  -0x40(%rbp)
popq   -0x70(%rbp)
mov    %eax,-0xb0(%rbp)
mov    -0x70(%rbp),%rdx
test   %rdx,%rdx
jne    db38 <_TIFFVSetField+0x1748>
mov    %r15,%rdi
mov    -0x30(%rbp),%r14
mov    -0x78(%rbp),%r15
xor    %eax,%eax
jmpq   cd3d <_TIFFVSetField+0x94d>
mov    -0x60(%rbp),%rdx
movslq 0x4(%rdx),%rcx
cmp    $0xaf,%ecx
jle    db70 <_TIFFVSetField+0x1780>
mov    0x8(%rdx),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rdx)
movsd  (%rcx),%xmm0
jmpq   db7f <_TIFFVSetField+0x178f>
mov    0x10(%rdx),%rax
mov    (%rax,%rcx,1),%rsi
lea    0x8(%rcx),%eax
mov    %eax,(%rdx)
lea    0x90(%r8),%rdi
movzwl 0x82(%r8),%edx
callq  8050 <_TIFFsetDoubleArray@plt>
mov    $0x1,%edx
xor    %eax,%eax
mov    -0x48(%rbp),%rdi
jmpq   cd3d <_TIFFVSetField+0x94d>
mov    -0x60(%rbp),%rdx
movslq 0x4(%rdx),%rcx
cmp    $0xaf,%ecx
jle    dba3 <_TIFFVSetField+0x17b3>
mov    0x8(%rdx),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rdx)
movsd  (%rcx),%xmm0
jmpq   dbb2 <_TIFFVSetField+0x17c2>
mov    0x10(%rdx),%rax
mov    (%rax,%rcx,1),%rsi
lea    0x8(%rcx),%eax
mov    %eax,(%rdx)
lea    0x98(%r8),%rdi
movzwl 0x82(%r8),%edx
callq  8050 <_TIFFsetDoubleArray@plt>
mov    $0x1,%edx
xor    %eax,%eax
mov    -0x48(%rbp),%rdi
jmpq   cd3d <_TIFFVSetField+0x94d>
mov    0x10(%rcx),%rdx
test   %rdx,%rdx
je     cf9b <_TIFFVSetField+0xbab>
mov    %r15,-0x78(%rbp)
mov    %r14,-0x40(%rbp)
mov    %r13,-0x20(%rbp)
mov    %rax,%r13
mov    %rcx,%r14
mov    %rdi,%r15
mov    %rdx,%rdi
callq  8bb0 <_TIFFfree@plt>
mov    %r13,%rax
mov    %r14,%rcx
mov    %r15,%rdi
movq   $0x0,0x10(%rcx)
mov    -0x20(%rbp),%r13
mov    -0x40(%rbp),%r14
mov    -0x78(%rbp),%r15
jmpq   cf9b <_TIFFVSetField+0xbab>
mov    %rax,0x148(%r15)
movslq 0x140(%r15),%rcx
add    $0xffffffff,%ecx
movslq %ecx,%rcx
lea    (%rcx,%rcx,2),%rcx
lea    (%rax,%rcx,8),%rcx
mov    %r14,(%rcx)
movq   $0x0,0x10(%rcx)
movl   $0x0,0x8(%rcx)
mov    %r14,%rax
mov    %r15,%rdi
mov    -0x38(%rbp),%r14
mov    -0x78(%rbp),%r15
mov    %rcx,-0x78(%rbp)
mov    0x8(%rax),%ecx
mov    %r15,-0x70(%rbp)
mov    %r14,-0x38(%rbp)
mov    %rdi,%r14
mov    %rcx,%rdi
mov    %rax,%r15
callq  80f0 <_TIFFDataSize@plt>
test   %eax,%eax
je     dbd6 <_TIFFVSetField+0x17e6>
lea    0x43d1c(%rip),%rsi        # 5150b <module.10+0x76>
lea    0x43fa6(%rip),%rcx        # 5179c <module.19+0x210>
mov    0x8(%r15),%edx
cmp    $0x2,%edx
je     dc09 <_TIFFVSetField+0x1819>
movzbl 0x1b(%r15),%ecx
test   %cl,%cl
jne    dc3a <_TIFFVSetField+0x184a>
movswq 0x6(%r15),%rcx
cmp    $0xffff,%cx
jne    dc65 <_TIFFVSetField+0x1875>
mov    $0x1,%ecx
jmpq   dc82 <_TIFFVSetField+0x1892>
mov    -0x48(%rbp),%rdi
mov    %ax,0x76(%rdi)
cmp    $0x5,%ax
je     dccd <_TIFFVSetField+0x18dd>
movzwl 0x76(%rdi),%eax
cmp    $0x5,%ax
je     dcf9 <_TIFFVSetField+0x1909>
cmp    $0x6,%ax
je     dcf9 <_TIFFVSetField+0x1909>
xor    %eax,%eax
jmpq   cd3d <_TIFFVSetField+0x94d>
mov    -0x48(%rbp),%rdi
movzwl 0x82(%rdi),%ecx
cmp    %cx,%ax
jne    dd0e <_TIFFVSetField+0x191e>
movzwl -0xb0(%rbp),%eax
mov    %ax,0x82(%rdi)
xor    %eax,%eax
jmpq   cd3d <_TIFFVSetField+0x94d>
mov    0x20(%rax),%r9
xor    %eax,%eax
lea    0x43cfc(%rip),%rsi        # 5158c <module.19>
lea    0x43f84(%rip),%rdx        # 5181b <module.19+0x28f>
callq  8a00 <TIFFErrorExt@plt>
mov    -0x78(%rbp),%r15
xor    %eax,%eax
leaveq 
retq   
mov    0x10(%rsi),%rax
movslq (%rax,%rcx,1),%rax
add    $0x8,%ecx
mov    %ecx,(%rsi)
mov    %ax,0x10a(%rdi)
xor    %eax,%eax
jmpq   cd3d <_TIFFVSetField+0x94d>
test   %ax,%ax
je     ddd2 <_TIFFVSetField+0x19e2>
cmp    $0x1,%ax
je     ddf2 <_TIFFVSetField+0x1a02>
mov    -0x48(%rbp),%rax
jmpq   d043 <_TIFFVSetField+0xc53>
movl   $0x1,-0xb0(%rbp)
jmpq   dddc <_TIFFVSetField+0x19ec>
movl   $0x3,-0xb0(%rbp)
jmpq   dddc <_TIFFVSetField+0x19ec>
movw   $0x1,-0xac(%rbp)
add    $0xd8,%rdi
lea    -0xac(%rbp),%rsi
callq  8540 <_TIFFsetShortArray@plt>
mov    $0x1,%edx
xor    %eax,%eax
mov    -0x48(%rbp),%rdi
jmpq   cd3d <_TIFFVSetField+0x94d>
mov    %eax,0x68(%rdi)
mov    0x58(%rdi),%eax
mov    %eax,0x64(%rdi)
xor    %eax,%eax
jmpq   cd3d <_TIFFVSetField+0x94d>
cmp    $0x100,%edi
jne    c8d8 <_TIFFVSetField+0x4e8>
mov    -0x60(%rbp),%rsi
movslq (%rsi),%rcx
cmp    $0x2f,%ecx
jle    ddfe <_TIFFVSetField+0x1a0e>
mov    0x8(%rsi),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rsi)
mov    (%rcx),%eax
jmpq   de0a <_TIFFVSetField+0x1a1a>
mov    0x10(%rsi),%rax
mov    (%rax,%rcx,1),%eax
add    $0x8,%ecx
mov    %ecx,(%rsi)
mov    -0x48(%rbp),%rdi
mov    %eax,0x70(%rdi)
xor    %eax,%eax
jmpq   cd3d <_TIFFVSetField+0x94d>
mov    0x10(%rcx),%rax
movslq (%rax,%rsi,1),%rax
add    $0x8,%esi
mov    %esi,(%rcx)
mov    -0x48(%rbp),%rdi
mov    %ax,0x74(%rdi)
mov    0x10(%rdi),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
jne    de18 <_TIFFVSetField+0x1a28>
xor    %eax,%eax
jmpq   cd3d <_TIFFVSetField+0x94d>
mov    0x10(%rsi),%rax
movslq (%rax,%rcx,1),%rax
add    $0x8,%ecx
mov    %ecx,(%rsi)
mov    -0x48(%rbp),%rdi
mov    %ax,0x7a(%rdi)
xor    %eax,%eax
jmpq   cd3d <_TIFFVSetField+0x94d>
mov    -0xb0(%rbp),%ecx
movzwl 0x78(%rdi),%eax
cmp    %eax,%ecx
jne    de5b <_TIFFVSetField+0x1a6b>
xor    %eax,%eax
jmpq   cd3d <_TIFFVSetField+0x94d>
movzwl -0xb0(%rbp),%ecx
mov    %cx,0x78(%r15)
mov    %rax,%rdx
mov    %r15,%rdi
mov    -0x78(%rbp),%r15
xor    %eax,%eax
jmpq   cd3d <_TIFFVSetField+0x94d>
cmp    $0x8,%ax
jbe    de86 <_TIFFVSetField+0x1a96>
mov    -0x48(%rbp),%rax
jmpq   d043 <_TIFFVSetField+0xc53>
cmp    $0x2,%ax
je     d3a6 <_TIFFVSetField+0xfb6>
mov    -0x48(%rbp),%rax
jmpq   d043 <_TIFFVSetField+0xc53>
mov    -0x48(%rbp),%rdi
mov    %ax,0xa8(%rdi)
xor    %eax,%eax
jmpq   cd3d <_TIFFVSetField+0x94d>
mov    $0x3,%eax
mov    %eax,-0xb0(%rbp)
mov    %r15,-0x78(%rbp)
mov    %r14,-0x30(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r12,-0x10(%rbp)
xor    %r13d,%r13d
mov    -0x60(%rbp),%r12
jmpq   ded8 <_TIFFVSetField+0x1ae8>
mov    0x10(%rsi),%rax
movslq (%rax,%rcx,1),%rax
add    $0x8,%ecx
mov    %ecx,(%rsi)
mov    %ax,0xb6(%rdi)
xor    %eax,%eax
jmpq   cd3d <_TIFFVSetField+0x94d>
mov    0x10(%r13),%rax
mov    (%rax,%rcx,1),%rsi
lea    0x8(%rcx),%eax
mov    %eax,0x0(%r13)
lea    0xc0(%r15),%rdi
mov    %r14,%rdx
callq  8540 <_TIFFsetShortArray@plt>
movslq 0x0(%r13),%rcx
cmp    $0x2f,%ecx
jle    defe <_TIFFVSetField+0x1b0e>
mov    0x8(%r13),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%r13)
mov    (%rcx),%rsi
jmpq   df0d <_TIFFVSetField+0x1b1d>
mov    -0x48(%rbp),%r9
movslq 0xc(%r9),%rax
test   %eax,%eax
jne    ca56 <_TIFFVSetField+0x666>
xor    %eax,%eax
mov    0x3b8(%r9),%rdi
mov    (%r9),%rsi
lea    0x43b9e(%rip),%rdx        # 51677 <module.19+0xeb>
mov    %r8,%rcx
mov    %r15,-0x78(%rbp)
mov    %r14,-0x28(%rbp)
mov    %r8,%r14
mov    %r9,%r15
callq  85a0 <TIFFWarningExt@plt>
mov    %r15,%rdi
mov    %r14,%r8
mov    -0x28(%rbp),%r14
mov    -0x78(%rbp),%r15
mov    $0x1,%edx
jmpq   d548 <_TIFFVSetField+0x1158>
mov    0x10(%rdx),%rax
mov    (%rax,%rcx,1),%rsi
lea    0x8(%rcx),%eax
mov    %eax,(%rdx)
lea    0x100(%r8),%rdi
movzwl 0xfc(%r8),%edx
callq  c1c0 <_TIFFsetLong8Array>
mov    $0x1,%edx
xor    %eax,%eax
mov    -0x48(%rbp),%rdi
jmpq   cd3d <_TIFFVSetField+0x94d>
mov    %r14,%rsi
mov    %rdx,%r14
mov    %rax,%rdx
lea    0x138(%r15),%rdi
callq  c1a0 <_TIFFsetNString>
movslq -0xb0(%rbp),%rax
mov    %eax,0x130(%r15)
mov    %r14,%rdx
mov    %r15,%rdi
mov    -0x30(%rbp),%r14
mov    -0x78(%rbp),%r15
xor    %eax,%eax
jmpq   cd3d <_TIFFVSetField+0x94d>
mov    0x10(%rdx),%rax
movsd  (%rax,%rcx,1),%xmm0
lea    0x10(%rcx),%eax
mov    %eax,0x4(%rdx)
lea    0x90(%r8),%rdi
movzwl 0x82(%r8),%esi
callq  c1e0 <setDoubleArrayOneValue>
mov    $0x1,%edx
xor    %eax,%eax
mov    -0x48(%rbp),%rdi
jmpq   cd3d <_TIFFVSetField+0x94d>
mov    0x10(%rdx),%rax
movsd  (%rax,%rcx,1),%xmm0
lea    0x10(%rcx),%eax
mov    %eax,0x4(%rdx)
lea    0x98(%r8),%rdi
movzwl 0x82(%r8),%esi
callq  c1e0 <setDoubleArrayOneValue>
mov    $0x1,%edx
xor    %eax,%eax
mov    -0x48(%rbp),%rdi
jmpq   cd3d <_TIFFVSetField+0x94d>
xor    %eax,%eax
mov    0x3b8(%r14),%rdi
lea    0x43b71(%rip),%rdx        # 51757 <module.19+0x1cb>
mov    (%r14),%rcx
mov    0x8(%r15),%r8d
mov    0x20(%r15),%r9
lea    0x43994(%rip),%rsi        # 5158c <module.19>
callq  8a00 <TIFFErrorExt@plt>
mov    -0x38(%rbp),%r14
mov    -0x70(%rbp),%r15
xor    %eax,%eax
leaveq 
retq   
movzbl 0x1b(%r15),%eax
test   %al,%al
jne    df37 <_TIFFVSetField+0x1b47>
mov    -0x60(%rbp),%rdx
movslq (%rdx),%rcx
cmp    $0x2f,%ecx
jle    df69 <_TIFFVSetField+0x1b79>
mov    0x8(%rdx),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rdx)
mov    (%rcx),%r15
jmpq   df76 <_TIFFVSetField+0x1b86>
movswq 0x6(%r15),%rcx
cmp    $0xfffd,%cx
jne    dfb4 <_TIFFVSetField+0x1bc4>
mov    -0x60(%rbp),%rdx
movslq (%rdx),%rsi
cmp    $0x2f,%esi
jle    dc76 <_TIFFVSetField+0x1886>
mov    0x8(%rdx),%rsi
lea    0x8(%rsi),%rcx
mov    %rcx,0x8(%rdx)
mov    (%rsi),%ecx
jmp    dc82 <_TIFFVSetField+0x1892>
cmp    $0xfffd,%cx
jne    dfd8 <_TIFFVSetField+0x1be8>
mov    $0x1,%ecx
jmp    dc82 <_TIFFVSetField+0x1892>
mov    0x10(%rdx),%rcx
mov    (%rcx,%rsi,1),%ecx
add    $0x8,%esi
mov    %esi,(%rdx)
mov    -0x78(%rbp),%rdi
mov    %ecx,0x8(%rdi)
test   %ecx,%ecx
je     dfef <_TIFFVSetField+0x1bff>
movslq %ecx,%rsi
movslq %eax,%rdx
mov    %rdx,-0x78(%rbp)
lea    0x43b48(%rip),%rcx        # 517ea <module.19+0x25e>
mov    %rax,-0x10(%rbp)
mov    %r14,%rax
mov    %rdi,%r14
mov    %rax,%rdi
callq  8750 <_TIFFCheckMalloc@plt>
mov    %rax,0x10(%r14)
test   %rax,%rax
jne    e038 <_TIFFVSetField+0x1c48>
mov    -0x38(%rbp),%r14
mov    -0x70(%rbp),%r15
xor    %eax,%eax
leaveq 
retq   
movzwl 0x74(%rdi),%eax
cmp    $0x20,%ax
jne    d83b <_TIFFVSetField+0x144b>
mov    0x3e8(%rdi),%rax
cmp    %r9,%rax
jne    d83b <_TIFFVSetField+0x144b>
mov    %r10,0x3e8(%rdi)
xor    %eax,%eax
jmpq   cd3d <_TIFFVSetField+0x94d>
movzwl 0x74(%rdi),%eax
cmp    $0x40,%ax
je     e082 <_TIFFVSetField+0x1c92>
xor    %eax,%eax
jmpq   cd3d <_TIFFVSetField+0x94d>
mov    0x90(%rdi),%rax
test   %rax,%rax
je     dd6f <_TIFFVSetField+0x197f>
xor    %eax,%eax
mov    0x3b8(%rdi),%rcx
lea    0x43871(%rip),%rdx        # 5159b <module.19+0xf>
mov    %r15,-0x78(%rbp)
mov    %rdi,%r15
mov    %rcx,%rdi
callq  85a0 <TIFFWarningExt@plt>
mov    0x40(%r15),%rax
and    $0xfffffffffffffffd,%rax
mov    %rax,0x40(%r15)
mov    0x90(%r15),%rdi
callq  8bb0 <_TIFFfree@plt>
mov    %r15,%rdi
movq   $0x0,0x90(%rdi)
lea    0x43826(%rip),%rsi        # 5158c <module.19>
mov    -0x78(%rbp),%r15
mov    $0x1,%edx
mov    0x98(%rdi),%rax
test   %rax,%rax
je     d86e <_TIFFVSetField+0x147e>
xor    %eax,%eax
mov    0x3b8(%rdi),%rcx
lea    0x4387a(%rip),%rdx        # 51609 <module.19+0x7d>
mov    %r15,-0x78(%rbp)
mov    %rdi,%r15
mov    %rcx,%rdi
callq  85a0 <TIFFWarningExt@plt>
mov    0x40(%r15),%rax
and    $0xfffffffffffffffb,%rax
mov    %rax,0x40(%r15)
mov    0x98(%r15),%rdi
callq  8bb0 <_TIFFfree@plt>
mov    %r15,%rdi
movq   $0x0,0x98(%rdi)
mov    -0x78(%rbp),%r15
mov    $0x1,%edx
jmpq   d86e <_TIFFVSetField+0x147e>
movl   $0x4,-0xb0(%rbp)
movzwl -0xb0(%rbp),%eax
mov    -0x48(%rbp),%rdi
mov    %ax,0x76(%rdi)
xor    %eax,%eax
jmpq   cd3d <_TIFFVSetField+0x94d>
movl   $0x2,-0xb0(%rbp)
jmp    dddc <_TIFFVSetField+0x19ec>
mov    0x10(%rsi),%rax
mov    (%rax,%rcx,1),%eax
add    $0x8,%ecx
mov    %ecx,(%rsi)
mov    -0x48(%rbp),%rdi
mov    %eax,0x58(%rdi)
xor    %eax,%eax
jmpq   cd3d <_TIFFVSetField+0x94d>
cmp    $0x8,%ax
je     e099 <_TIFFVSetField+0x1ca9>
cmp    $0x10,%ax
je     e0ae <_TIFFVSetField+0x1cbe>
cmp    $0x18,%ax
je     e0bc <_TIFFVSetField+0x1ccc>
cmp    $0x20,%ax
je     e0d1 <_TIFFVSetField+0x1ce1>
cmp    $0x40,%ax
je     e0df <_TIFFVSetField+0x1cef>
cmp    $0x80,%ax
je     e0ed <_TIFFVSetField+0x1cfd>
xor    %eax,%eax
jmpq   cd3d <_TIFFVSetField+0x94d>
mov    %rdi,%rax
mov    %r15,-0x78(%rbp)
mov    %rdi,%r15
mov    %rax,%rdi
callq  *0x338(%r15)
mov    0x10(%r15),%eax
and    $0xffffffdf,%eax
mov    %eax,0x10(%r15)
mov    %r15,%rdi
mov    -0x78(%rbp),%r15
jmpq   d277 <_TIFFVSetField+0xe87>
mov    -0x48(%rbp),%rdi
mov    %ax,0x80(%rdi)
xor    %eax,%eax
jmpq   cd3d <_TIFFVSetField+0x94d>
mov    0x10(%r12),%rax
mov    (%rax,%rcx,1),%rsi
lea    0x8(%rcx),%eax
mov    %eax,(%r12)
mov    %r13d,%eax
lea    0x110(%rdi,%rax,8),%rax
movzwl 0x74(%rdi),%ecx
mov    %rdx,%r8
shl    %cl,%r8d
mov    %rdx,%r14
mov    %r8,%rdx
mov    %rdi,%r15
mov    %rax,%rdi
callq  8540 <_TIFFsetShortArray@plt>
add    $0x1,%r13d
mov    %r14,%rdx
mov    %r15,%rdi
mov    -0xb0(%rbp),%eax
cmp    %r13d,%eax
ja     e0fb <_TIFFVSetField+0x1d0b>
mov    -0x10(%rbp),%r12
mov    -0x18(%rbp),%r13
mov    -0x30(%rbp),%r14
mov    -0x78(%rbp),%r15
xor    %eax,%eax
jmpq   cd3d <_TIFFVSetField+0x94d>
mov    0x10(%r13),%rax
mov    (%rax,%rcx,1),%rsi
lea    0x8(%rcx),%eax
mov    %eax,0x0(%r13)
mov    %r14,%rdx
lea    0xc8(%r15),%rdi
callq  8540 <_TIFFsetShortArray@plt>
mov    %r15,%rdi
mov    -0x18(%rbp),%r13
mov    -0x20(%rbp),%r14
mov    -0x78(%rbp),%r15
mov    $0x1,%edx
xor    %eax,%eax
jmpq   cd3d <_TIFFVSetField+0x94d>
movswq 0x6(%r15),%rax
cmp    $0xfffd,%ax
jne    e11e <_TIFFVSetField+0x1d2e>
mov    -0x60(%rbp),%rsi
movslq (%rsi),%rcx
cmp    $0x2f,%ecx
jle    e12f <_TIFFVSetField+0x1d3f>
mov    0x8(%rsi),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rsi)
mov    (%rcx),%eax
jmpq   e13b <_TIFFVSetField+0x1d4b>
mov    0x10(%rdx),%rax
mov    (%rax,%rcx,1),%r15
lea    0x8(%rcx),%eax
mov    %eax,(%rdx)
mov    %r15,%rdi
callq  8350 <strlen@plt>
add    $0x1,%eax
mov    -0x78(%rbp),%rcx
mov    %eax,0x8(%rcx)
lea    0x10(%rcx),%rdi
mov    %eax,%edx
mov    %r15,%rsi
mov    $0x1,%r15d
mov    %r15,%rcx
callq  c0e0 <setByteArray>
mov    %r15,%rdx
mov    %r14,%rdi
mov    -0x38(%rbp),%r14
mov    -0x70(%rbp),%r15
xor    %eax,%eax
jmpq   cd3d <_TIFFVSetField+0x94d>
mov    -0x60(%rbp),%rsi
movslq (%rsi),%rdx
cmp    $0x2f,%edx
jle    e15b <_TIFFVSetField+0x1d6b>
mov    0x8(%rsi),%rdx
lea    0x8(%rdx),%rcx
mov    %rcx,0x8(%rsi)
movslq (%rdx),%rcx
jmpq   dc82 <_TIFFVSetField+0x1892>
cmp    $0xfffe,%cx
jne    dc82 <_TIFFVSetField+0x1892>
movzwl 0x82(%r14),%ecx
jmpq   dc82 <_TIFFVSetField+0x1892>
sub    $0x10,%rsp
movswq 0x6(%r15),%r10
movzbl 0x1b(%r15),%esi
xor    %eax,%eax
mov    0x3b8(%r14),%rdi
lea    0x4379e(%rip),%rdx        # 517ab <module.19+0x21f>
mov    (%r14),%rcx
mov    0x20(%r15),%r8
mov    0x8(%r15),%r9d
mov    %r10d,(%rsp)
mov    %esi,0x8(%rsp)
lea    0x43565(%rip),%rsi        # 5158c <module.19>
callq  8a00 <TIFFErrorExt@plt>
mov    -0x38(%rbp),%r14
mov    -0x70(%rbp),%r15
xor    %eax,%eax
leaveq 
retq   
mov    (%r15),%eax
cmp    $0x150,%eax
jne    e16d <_TIFFVSetField+0x1d7d>
mov    0x20(%r15),%rdi
lea    0x437b2(%rip),%rsi        # 51803 <module.19+0x277>
callq  8660 <strcmp@plt>
test   %eax,%eax
jne    e16d <_TIFFVSetField+0x1d7d>
mov    -0x60(%rbp),%rdx
movslq (%rdx),%rcx
cmp    $0x2f,%ecx
jle    e1d6 <_TIFFVSetField+0x1de6>
mov    0x8(%rdx),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rdx)
movslq (%rcx),%rax
jmpq   e1e3 <_TIFFVSetField+0x1df3>
mov    0x3e8(%rdi),%rax
cmp    %r8,%rax
je     e20a <_TIFFVSetField+0x1e1a>
xor    %eax,%eax
jmpq   cd3d <_TIFFVSetField+0x94d>
mov    0x6bea8(%rip),%rax        # 79f48 <_TIFFNoPostDecode@@Base+0x2f608>
mov    %rax,0x3e8(%rdi)
xor    %eax,%eax
jmpq   cd3d <_TIFFVSetField+0x94d>
mov    %r10,0x3e8(%rdi)
xor    %eax,%eax
jmpq   cd3d <_TIFFVSetField+0x94d>
mov    0x6beb5(%rip),%rax        # 79f78 <_TIFFSwab24BitData@@Base+0x2f5d8>
mov    %rax,0x3e8(%rdi)
xor    %eax,%eax
jmpq   cd3d <_TIFFVSetField+0x94d>
mov    %r9,0x3e8(%rdi)
xor    %eax,%eax
jmpq   cd3d <_TIFFVSetField+0x94d>
mov    %r8,0x3e8(%rdi)
xor    %eax,%eax
jmpq   cd3d <_TIFFVSetField+0x94d>
mov    %r8,0x3e8(%rdi)
xor    %eax,%eax
jmpq   cd3d <_TIFFVSetField+0x94d>
movslq (%r12),%rcx
cmp    $0x2f,%ecx
jle    de98 <_TIFFVSetField+0x1aa8>
mov    0x8(%r12),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%r12)
mov    (%rcx),%rsi
jmpq   dea8 <_TIFFVSetField+0x1ab8>
lea    0x43651(%rip),%rdi        # 51776 <module.19+0x1ea>
mov    $0x233,%edx
callq  8490 <__assert_fail@plt>
mov    0x10(%rsi),%rax
mov    (%rax,%rcx,1),%eax
add    $0x8,%ecx
mov    %ecx,(%rsi)
movslq (%rsi),%rcx
cmp    $0x2f,%ecx
jle    e218 <_TIFFVSetField+0x1e28>
mov    0x8(%rsi),%rdx
lea    0x8(%rdx),%rcx
mov    %rcx,0x8(%rsi)
mov    (%rdx),%r15
jmpq   df81 <_TIFFVSetField+0x1b91>
mov    0x10(%rsi),%rcx
movslq (%rcx,%rdx,1),%rcx
add    $0x8,%edx
mov    %edx,(%rsi)
jmpq   dc82 <_TIFFVSetField+0x1892>
movzbl 0x1b(%r15),%eax
test   %al,%al
jne    e22a <_TIFFVSetField+0x1e3a>
movswq 0x6(%r15),%rax
cmp    $0xffff,%ax
je     e22a <_TIFFVSetField+0x1e3a>
cmp    $0xfffd,%ax
je     e22a <_TIFFVSetField+0x1e3a>
cmp    $0xfffe,%ax
je     e22a <_TIFFVSetField+0x1e3a>
movslq 0x8(%r14),%rax
cmp    $0x1,%eax
jg     e22a <_TIFFVSetField+0x1e3a>
mov    0x10(%r14),%rdi
cmp    $0x1,%eax
je     e252 <_TIFFVSetField+0x1e62>
lea    0x4364e(%rip),%rdi        # 5180c <module.19+0x280>
mov    $0x277,%edx
lea    0x43341(%rip),%rsi        # 5150b <module.10+0x76>
lea    0x435cb(%rip),%rcx        # 5179c <module.19+0x210>
callq  8490 <__assert_fail@plt>
mov    0x10(%rdx),%rax
movslq (%rax,%rcx,1),%rax
add    $0x8,%ecx
mov    %ecx,(%rdx)
mov    %ax,-0xaa(%rbp)
movslq (%rdx),%rcx
cmp    $0x2f,%ecx
jle    e294 <_TIFFVSetField+0x1ea4>
mov    0x8(%rdx),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rdx)
movslq (%rcx),%rax
jmpq   e2a1 <_TIFFVSetField+0x1eb1>
mov    %r9,0x3e8(%rdi)
xor    %eax,%eax
jmpq   cd3d <_TIFFVSetField+0x94d>
mov    0x10(%rsi),%rdx
mov    (%rdx,%rcx,1),%r15
add    $0x8,%ecx
mov    %ecx,(%rsi)
jmpq   df81 <_TIFFVSetField+0x1b91>
mov    0x10(%r14),%rdi
mov    -0x60(%rbp),%rdx
movslq (%rdx),%rcx
cmp    $0x2f,%ecx
jle    e2d5 <_TIFFVSetField+0x1ee5>
mov    0x8(%rdx),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rdx)
mov    (%rcx),%rsi
jmpq   e2e2 <_TIFFVSetField+0x1ef2>
mov    0x8(%r15),%eax
add    $0xffffffff,%eax
cmp    $0x11,%eax
ja     e26e <_TIFFVSetField+0x1e7e>
lea    0x4314b(%rip),%rcx        # 513b0 <_fini+0x48c>
movslq (%rcx,%rax,4),%rax
add    %rcx,%rax
jmpq   *%rax
xor    %r15d,%r15d
mov    %r15,%rsi
mov    -0x78(%rbp),%rdx
callq  88e0 <_TIFFmemset@plt>
mov    %r15,%rdx
mov    -0x38(%rbp),%r14
mov    -0x70(%rbp),%r15
mov    -0x48(%rbp),%rdi
mov    %rdx,%rax
jmpq   cd3d <_TIFFVSetField+0x94d>
mov    0x10(%rdx),%rax
movslq (%rax,%rcx,1),%rax
add    $0x8,%ecx
mov    %ecx,(%rdx)
mov    %ax,-0xa8(%rbp)
mov    0x10(%r14),%rdi
lea    -0xaa(%rbp),%rsi
mov    $0x4,%edx
callq  8790 <_TIFFmemcpy@plt>
mov    -0x38(%rbp),%r14
mov    -0x70(%rbp),%r15
mov    $0x1,%edx
xor    %eax,%eax
mov    -0x48(%rbp),%rdi
jmpq   cd3d <_TIFFVSetField+0x94d>
mov    0x10(%rdx),%rax
mov    (%rax,%rcx,1),%rsi
lea    0x8(%rcx),%eax
mov    %eax,(%rdx)
mov    -0x10(%rbp),%rax
imul   0x8(%r14),%eax
movslq %eax,%rdx
callq  8790 <_TIFFmemcpy@plt>
mov    -0x38(%rbp),%r14
mov    -0x70(%rbp),%r15
mov    $0x1,%edx
xor    %eax,%eax
mov    -0x48(%rbp),%rdi
jmpq   cd3d <_TIFFVSetField+0x94d>
mov    -0x60(%rbp),%rdx
movslq (%rdx),%rcx
cmp    $0x2f,%ecx
jle    e47a <_TIFFVSetField+0x208a>
mov    0x8(%rdx),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rdx)
movslq (%rcx),%rax
jmpq   e487 <_TIFFVSetField+0x2097>
mov    -0x60(%rbp),%rdx
movslq (%rdx),%rcx
cmp    $0x2f,%ecx
jle    e4b5 <_TIFFVSetField+0x20c5>
mov    0x8(%rdx),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rdx)
movslq (%rcx),%rax
jmpq   e4c2 <_TIFFVSetField+0x20d2>
mov    -0x60(%rbp),%rdx
movslq (%rdx),%rcx
cmp    $0x2f,%ecx
jle    e4f0 <_TIFFVSetField+0x2100>
mov    0x8(%rdx),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rdx)
movslq (%rcx),%rax
jmpq   e4fd <_TIFFVSetField+0x210d>
mov    -0x60(%rbp),%rdx
movslq (%rdx),%rcx
cmp    $0x2f,%ecx
jle    e52c <_TIFFVSetField+0x213c>
mov    0x8(%rdx),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rdx)
movslq (%rcx),%rax
jmpq   e539 <_TIFFVSetField+0x2149>
mov    -0x60(%rbp),%rdx
movslq (%rdx),%rcx
cmp    $0x2f,%ecx
jle    e568 <_TIFFVSetField+0x2178>
mov    0x8(%rdx),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rdx)
mov    (%rcx),%eax
jmpq   e574 <_TIFFVSetField+0x2184>
mov    -0x60(%rbp),%rdx
movslq (%rdx),%rcx
cmp    $0x2f,%ecx
jle    e5a2 <_TIFFVSetField+0x21b2>
mov    0x8(%rdx),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rdx)
movslq (%rcx),%rax
jmpq   e5af <_TIFFVSetField+0x21bf>
mov    -0x60(%rbp),%rdx
movslq (%rdx),%rcx
cmp    $0x2f,%ecx
jle    e5dd <_TIFFVSetField+0x21ed>
mov    0x8(%rdx),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rdx)
mov    (%rcx),%rax
jmpq   e5ea <_TIFFVSetField+0x21fa>
mov    -0x60(%rbp),%rdx
movslq (%rdx),%rcx
cmp    $0x2f,%ecx
jle    e619 <_TIFFVSetField+0x2229>
mov    0x8(%rdx),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rdx)
mov    (%rcx),%rax
jmpq   e626 <_TIFFVSetField+0x2236>
mov    -0x60(%rbp),%rdx
movslq 0x4(%rdx),%rax
cmp    $0xaf,%eax
jle    e655 <_TIFFVSetField+0x2265>
mov    0x8(%rdx),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rdx)
movsd  (%rcx),%xmm0
jmpq   e664 <_TIFFVSetField+0x2274>
mov    -0x60(%rbp),%rdx
movslq 0x4(%rdx),%rax
cmp    $0xaf,%eax
jle    e69f <_TIFFVSetField+0x22af>
mov    0x8(%rdx),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rdx)
movsd  (%rcx),%xmm0
jmpq   e6ae <_TIFFVSetField+0x22be>
mov    0x10(%rdx),%rax
movslq (%rax,%rcx,1),%rax
add    $0x8,%ecx
mov    %ecx,(%rdx)
mov    %al,-0xa6(%rbp)
lea    -0xa6(%rbp),%rsi
mov    -0x78(%rbp),%rdx
callq  8790 <_TIFFmemcpy@plt>
mov    -0x38(%rbp),%r14
mov    -0x70(%rbp),%r15
mov    $0x1,%edx
xor    %eax,%eax
mov    -0x48(%rbp),%rdi
jmpq   cd3d <_TIFFVSetField+0x94d>
mov    0x10(%rdx),%rax
movslq (%rax,%rcx,1),%rax
add    $0x8,%ecx
mov    %ecx,(%rdx)
mov    %al,-0xa5(%rbp)
lea    -0xa5(%rbp),%rsi
mov    -0x78(%rbp),%rdx
callq  8790 <_TIFFmemcpy@plt>
mov    -0x38(%rbp),%r14
mov    -0x70(%rbp),%r15
mov    $0x1,%edx
xor    %eax,%eax
mov    -0x48(%rbp),%rdi
jmpq   cd3d <_TIFFVSetField+0x94d>
mov    0x10(%rdx),%rax
movslq (%rax,%rcx,1),%rax
add    $0x8,%ecx
mov    %ecx,(%rdx)
mov    %ax,-0xa4(%rbp)
lea    -0xa4(%rbp),%rsi
mov    -0x78(%rbp),%rdx
callq  8790 <_TIFFmemcpy@plt>
mov    -0x38(%rbp),%r14
mov    -0x70(%rbp),%r15
mov    $0x1,%edx
xor    %eax,%eax
mov    -0x48(%rbp),%rdi
jmpq   cd3d <_TIFFVSetField+0x94d>
mov    0x10(%rdx),%rax
movslq (%rax,%rcx,1),%rax
add    $0x8,%ecx
mov    %ecx,(%rdx)
mov    %ax,-0xa2(%rbp)
lea    -0xa2(%rbp),%rsi
mov    -0x78(%rbp),%rdx
callq  8790 <_TIFFmemcpy@plt>
mov    -0x38(%rbp),%r14
mov    -0x70(%rbp),%r15
mov    $0x1,%edx
xor    %eax,%eax
mov    -0x48(%rbp),%rdi
jmpq   cd3d <_TIFFVSetField+0x94d>
mov    0x10(%rdx),%rax
mov    (%rax,%rcx,1),%eax
add    $0x8,%ecx
mov    %ecx,(%rdx)
mov    %eax,-0xa0(%rbp)
lea    -0xa0(%rbp),%rsi
mov    -0x78(%rbp),%rdx
callq  8790 <_TIFFmemcpy@plt>
mov    -0x38(%rbp),%r14
mov    -0x70(%rbp),%r15
mov    $0x1,%edx
xor    %eax,%eax
mov    -0x48(%rbp),%rdi
jmpq   cd3d <_TIFFVSetField+0x94d>
mov    0x10(%rdx),%rax
movslq (%rax,%rcx,1),%rax
add    $0x8,%ecx
mov    %ecx,(%rdx)
mov    %eax,-0x9c(%rbp)
lea    -0x9c(%rbp),%rsi
mov    -0x78(%rbp),%rdx
callq  8790 <_TIFFmemcpy@plt>
mov    -0x38(%rbp),%r14
mov    -0x70(%rbp),%r15
mov    $0x1,%edx
xor    %eax,%eax
mov    -0x48(%rbp),%rdi
jmpq   cd3d <_TIFFVSetField+0x94d>
mov    0x10(%rdx),%rax
mov    (%rax,%rcx,1),%rax
add    $0x8,%ecx
mov    %ecx,(%rdx)
mov    %rax,-0x98(%rbp)
lea    -0x98(%rbp),%rsi
mov    -0x78(%rbp),%rdx
callq  8790 <_TIFFmemcpy@plt>
mov    -0x38(%rbp),%r14
mov    -0x70(%rbp),%r15
mov    $0x1,%edx
xor    %eax,%eax
mov    -0x48(%rbp),%rdi
jmpq   cd3d <_TIFFVSetField+0x94d>
mov    0x10(%rdx),%rax
mov    (%rax,%rcx,1),%rax
add    $0x8,%ecx
mov    %ecx,(%rdx)
mov    %rax,-0x90(%rbp)
lea    -0x90(%rbp),%rsi
mov    -0x78(%rbp),%rdx
callq  8790 <_TIFFmemcpy@plt>
mov    -0x38(%rbp),%r14
mov    -0x70(%rbp),%r15
mov    $0x1,%edx
xor    %eax,%eax
mov    -0x48(%rbp),%rdi
jmpq   cd3d <_TIFFVSetField+0x94d>
mov    0x10(%rdx),%rcx
movsd  (%rcx,%rax,1),%xmm0
add    $0x10,%eax
mov    %eax,0x4(%rdx)
mov    %rdi,%r14
callq  c3b0 <TIFFClampDoubleToFloat>
mov    %r14,%rdi
movss  %xmm0,-0x84(%rbp)
lea    -0x84(%rbp),%rsi
mov    -0x78(%rbp),%rdx
callq  8790 <_TIFFmemcpy@plt>
mov    -0x38(%rbp),%r14
mov    -0x70(%rbp),%r15
mov    $0x1,%edx
xor    %eax,%eax
mov    -0x48(%rbp),%rdi
jmpq   cd3d <_TIFFVSetField+0x94d>
mov    0x10(%rdx),%rcx
movsd  (%rcx,%rax,1),%xmm0
add    $0x10,%eax
mov    %eax,0x4(%rdx)
movsd  %xmm0,-0x80(%rbp)
lea    -0x80(%rbp),%rsi
mov    -0x78(%rbp),%rdx
callq  8790 <_TIFFmemcpy@plt>
mov    -0x38(%rbp),%r14
mov    -0x70(%rbp),%r15
mov    $0x1,%edx
xor    %eax,%eax
mov    -0x48(%rbp),%rdi
jmpq   cd3d <_TIFFVSetField+0x94d>
nopl   0x0(%rax,%rax,1)

000000000000e6e0 <OkToChangeTag>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
xor    %edx,%edx
mov    %rdi,%r14
mov    %rsi,%r15
callq  8680 <TIFFFindField@plt>
test   %rax,%rax
jne    e71e <OkToChangeTag+0x3e>
mov    0x3b8(%r14),%rdi
mov    (%r14),%rcx
cmp    $0xffff,%r15d
ja     e739 <OkToChangeTag+0x59>
lea    0x43003(%rip),%r8        # 5171f <module.19+0x193>
jmp    e740 <OkToChangeTag+0x60>
mov    $0x1,%edx
cmp    $0x101,%r15d
jne    e764 <OkToChangeTag+0x84>
mov    %rdx,%rax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
lea    0x42fd7(%rip),%r8        # 51717 <module.19+0x18b>
mov    %r15,%r9
xor    %eax,%eax
lea    0x43113(%rip),%rdx        # 5185f <module.19+0x2d3>
lea    0x42df3(%rip),%rsi        # 51546 <module.10+0xb1>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
mov    0x10(%r14),%ecx
and    $0x40,%ecx
test   %ecx,%ecx
jne    e77c <OkToChangeTag+0x9c>
mov    %rdx,%rax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
movzbl 0x1a(%rax),%ecx
test   %cl,%cl
je     e791 <OkToChangeTag+0xb1>
mov    %rdx,%rax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
xor    %r9d,%r9d
mov    0x3b8(%r14),%rdi
lea    0x430d2(%rip),%rdx        # 51874 <module.19+0x2e8>
mov    (%r14),%rcx
mov    0x20(%rax),%r8
mov    %r9,%rax
lea    0x42d93(%rip),%rsi        # 51546 <module.10+0xb1>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nop

000000000000e7d0 <_TIFFVGetField>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %rsi,-0x18(%rbp)
mov    %rdi,-0x10(%rbp)
mov    %rdx,-0x8(%rbp)
xor    %edx,%edx
callq  8680 <TIFFFindField@plt>
test   %rax,%rax
jne    e7f4 <_TIFFVGetField+0x24>
xor    %eax,%eax
leaveq 
retq   
mov    $0x1,%r10d
lea    0x4309c(%rip),%rsi        # 5189d <module.19+0x311>
mov    -0x18(%rbp),%r8
cmp    $0x14e,%r8d
jne    e816 <_TIFFVGetField+0x46>
xor    %edi,%edi
mov    -0x10(%rbp),%r9
jmp    e846 <_TIFFVGetField+0x76>
movzwl 0x18(%rax),%ecx
cmp    $0x41,%cx
je     e853 <_TIFFVGetField+0x83>
mov    %r8,%rdx
jmp    e855 <_TIFFVGetField+0x85>
movslq %edi,%rax
lea    (%rax,%rax,2),%rdx
shl    $0x3,%rdx
add    0x148(%r9),%rdx
mov    (%rdx),%rax
mov    (%rax),%eax
cmp    $0x14e,%eax
je     e8bd <_TIFFVGetField+0xed>
add    $0x1,%edi
cmp    0x140(%r9),%edi
jl     e825 <_TIFFVGetField+0x55>
xor    %eax,%eax
leaveq 
retq   
xor    %edx,%edx
cmp    $0x128,%edx
jbe    e8ce <_TIFFVGetField+0xfe>
cmp    $0x151,%edx
jbe    e92e <_TIFFVGetField+0x15e>
cmp    $0x212,%edx
jbe    e982 <_TIFFVGetField+0x1b2>
cmp    $0x80e3,%edx
jbe    e9d2 <_TIFFVGetField+0x202>
cmp    $0x80e4,%edx
jbe    ea0e <_TIFFVGetField+0x23e>
cmp    $0x80e5,%edx
jne    ea2f <_TIFFVGetField+0x25f>
mov    -0x8(%rbp),%rdx
movslq (%rdx),%rcx
cmp    $0x2f,%ecx
jle    ea5b <_TIFFVGetField+0x28b>
mov    0x8(%rdx),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rdx)
mov    (%rcx),%rax
jmpq   ea68 <_TIFFVGetField+0x298>
mov    0x10(%rdx),%rax
test   %rax,%rax
jne    ea76 <_TIFFVGetField+0x2a6>
xor    %eax,%eax
leaveq 
retq   
cmp    $0x114,%edx
jbe    ea93 <_TIFFVGetField+0x2c3>
cmp    $0x119,%edx
jbe    eaf3 <_TIFFVGetField+0x323>
cmp    $0x11d,%edx
jbe    eb3b <_TIFFVGetField+0x36b>
cmp    $0x11e,%edx
jbe    eb77 <_TIFFVGetField+0x3a7>
cmp    $0x11f,%edx
jne    eba7 <_TIFFVGetField+0x3d7>
mov    -0x8(%rbp),%rdx
movslq (%rdx),%rcx
cmp    $0x2f,%ecx
jle    ebd7 <_TIFFVGetField+0x407>
mov    0x8(%rdx),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rdx)
mov    (%rcx),%rax
jmpq   ebe4 <_TIFFVGetField+0x414>
cmp    $0x142,%edx
jbe    ebf9 <_TIFFVGetField+0x429>
cmp    $0x144,%edx
jbe    ec41 <_TIFFVGetField+0x471>
cmp    $0x149,%edx
jbe    ec71 <_TIFFVGetField+0x4a1>
cmp    $0x14a,%edx
jne    ecb4 <_TIFFVGetField+0x4e4>
mov    -0x8(%rbp),%rsi
movslq (%rsi),%rcx
cmp    $0x2f,%ecx
jle    ece4 <_TIFFVGetField+0x514>
mov    0x8(%rsi),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rsi)
mov    (%rcx),%rax
jmpq   ecf1 <_TIFFVGetField+0x521>
cmp    $0x153,%edx
jbe    ed1f <_TIFFVGetField+0x54f>
cmp    $0x154,%edx
jbe    ed4f <_TIFFVGetField+0x57f>
cmp    $0x155,%edx
je     ed94 <_TIFFVGetField+0x5c4>
cmp    $0x212,%edx
jne    ea1a <_TIFFVGetField+0x24a>
mov    -0x8(%rbp),%rsi
movslq (%rsi),%rcx
cmp    $0x2f,%ecx
jle    edcd <_TIFFVGetField+0x5fd>
mov    0x8(%rsi),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rsi)
mov    (%rcx),%rax
jmpq   edda <_TIFFVGetField+0x60a>
cmp    $0x213,%edx
jbe    ee08 <_TIFFVGetField+0x638>
cmp    $0x214,%edx
jne    ee38 <_TIFFVGetField+0x668>
mov    -0x8(%rbp),%rdx
movslq (%rdx),%rcx
cmp    $0x2f,%ecx
jle    ee68 <_TIFFVGetField+0x698>
mov    0x8(%rdx),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rdx)
mov    (%rcx),%rax
jmpq   ee75 <_TIFFVGetField+0x6a5>
cmp    $0x80e4,%edx
je     ee88 <_TIFFVGetField+0x6b8>
cmp    $0x41,%cx
jne    eec8 <_TIFFVGetField+0x6f8>
xor    %edi,%edi
mov    -0x10(%rbp),%r9
jmpq   ef10 <_TIFFVGetField+0x740>
cmp    $0x80e6,%edx
jne    ea1a <_TIFFVGetField+0x24a>
mov    -0x8(%rbp),%rdx
movslq (%rdx),%rcx
cmp    $0x2f,%ecx
jle    ef1f <_TIFFVGetField+0x74f>
mov    0x8(%rdx),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rdx)
mov    (%rcx),%rax
jmpq   ef2c <_TIFFVGetField+0x75c>
mov    0x10(%rdx),%rax
mov    (%rax,%rcx,1),%rax
add    $0x8,%ecx
mov    %ecx,(%rdx)
mov    -0x10(%rbp),%rcx
mov    0x60(%rcx),%ecx
mov    %ecx,(%rax)
mov    %r10,%rax
leaveq 
retq   
movzwl (%rax),%ecx
movzwl 0x82(%r9),%r8d
cmp    %cx,%r8w
jb     ef3a <_TIFFVGetField+0x76a>
mov    %r10,%rax
jmpq   ef67 <_TIFFVGetField+0x797>
cmp    $0x105,%edx
jbe    ef8b <_TIFFVGetField+0x7bb>
cmp    $0x109,%edx
jbe    efd3 <_TIFFVGetField+0x803>
cmp    $0x110,%edx
jbe    f003 <_TIFFVGetField+0x833>
cmp    $0x111,%edx
je     f03f <_TIFFVGetField+0x86f>
cmp    $0x112,%edx
jne    ea1a <_TIFFVGetField+0x24a>
mov    -0x8(%rbp),%rdx
movslq (%rdx),%rcx
cmp    $0x2f,%ecx
jle    f076 <_TIFFVGetField+0x8a6>
mov    0x8(%rdx),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rdx)
mov    (%rcx),%rax
jmpq   f083 <_TIFFVGetField+0x8b3>
cmp    $0x116,%edx
jbe    f096 <_TIFFVGetField+0x8c6>
cmp    $0x117,%edx
jbe    f0c6 <_TIFFVGetField+0x8f6>
cmp    $0x118,%edx
jne    f0d7 <_TIFFVGetField+0x907>
mov    -0x8(%rbp),%rdx
movslq (%rdx),%rcx
cmp    $0x2f,%ecx
jle    f107 <_TIFFVGetField+0x937>
mov    0x8(%rdx),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rdx)
mov    (%rcx),%rax
jmpq   f114 <_TIFFVGetField+0x944>
cmp    $0x11a,%edx
jbe    f127 <_TIFFVGetField+0x957>
cmp    $0x11b,%edx
jne    f157 <_TIFFVGetField+0x987>
mov    -0x8(%rbp),%rdx
movslq (%rdx),%rcx
cmp    $0x2f,%ecx
jle    f187 <_TIFFVGetField+0x9b7>
mov    0x8(%rdx),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rdx)
mov    (%rcx),%rax
jmpq   f194 <_TIFFVGetField+0x9c4>
cmp    $0x11e,%edx
jne    ea1a <_TIFFVGetField+0x24a>
mov    -0x8(%rbp),%rdx
movslq (%rdx),%rcx
cmp    $0x2f,%ecx
jle    f1a9 <_TIFFVGetField+0x9d9>
mov    0x8(%rdx),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rdx)
mov    (%rcx),%rax
jmpq   f1b6 <_TIFFVGetField+0x9e6>
cmp    $0x128,%edx
jne    ea1a <_TIFFVGetField+0x24a>
mov    -0x8(%rbp),%rdx
movslq (%rdx),%rcx
cmp    $0x2f,%ecx
jle    f1cb <_TIFFVGetField+0x9fb>
mov    0x8(%rdx),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rdx)
mov    (%rcx),%rax
jmpq   f1d8 <_TIFFVGetField+0xa08>
mov    0x10(%rdx),%rax
mov    (%rax,%rcx,1),%rax
add    $0x8,%ecx
mov    %ecx,(%rdx)
mov    -0x10(%rbp),%rcx
movss  0xb0(%rcx),%xmm0
movss  %xmm0,(%rax)
mov    %r10,%rax
leaveq 
retq   
cmp    $0x13f,%edx
jbe    f1eb <_TIFFVGetField+0xa1b>
cmp    $0x140,%edx
jbe    f21b <_TIFFVGetField+0xa4b>
cmp    $0x141,%edx
jne    f24b <_TIFFVGetField+0xa7b>
mov    -0x8(%rbp),%rsi
movslq (%rsi),%rcx
cmp    $0x2f,%ecx
jle    f27b <_TIFFVGetField+0xaab>
mov    0x8(%rsi),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rsi)
mov    (%rcx),%rax
jmpq   f288 <_TIFFVGetField+0xab8>
cmp    $0x143,%edx
jne    f033 <_TIFFVGetField+0x863>
mov    -0x8(%rbp),%rsi
movslq (%rsi),%rdx
cmp    $0x2f,%edx
jle    f2b6 <_TIFFVGetField+0xae6>
mov    0x8(%rsi),%rax
lea    0x8(%rax),%rcx
mov    %rcx,0x8(%rsi)
mov    (%rax),%rcx
jmpq   f2c3 <_TIFFVGetField+0xaf3>
cmp    $0x145,%edx
jne    ea1a <_TIFFVGetField+0x24a>
mov    -0x10(%rbp),%rax
mov    %rax,%rdi
mov    %r15,-0x18(%rbp)
mov    %rax,%r15
callq  8c70 <_TIFFFillStriles@plt>
mov    -0x8(%rbp),%rdx
movslq (%rdx),%rcx
cmp    $0x2f,%ecx
jle    f2d1 <_TIFFVGetField+0xb01>
mov    0x8(%rdx),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rdx)
mov    (%rcx),%rax
jmpq   f2de <_TIFFVGetField+0xb0e>
cmp    $0x14d,%edx
jne    ea1a <_TIFFVGetField+0x24a>
mov    -0x8(%rbp),%rdx
movslq (%rdx),%rcx
cmp    $0x2f,%ecx
jle    f2f3 <_TIFFVGetField+0xb23>
mov    0x8(%rdx),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rdx)
mov    (%rcx),%rax
jmpq   f300 <_TIFFVGetField+0xb30>
mov    0x10(%rsi),%rax
mov    (%rax,%rcx,1),%rax
add    $0x8,%ecx
mov    %ecx,(%rsi)
mov    -0x10(%rbp),%rdx
movzwl 0xfc(%rdx),%ecx
mov    %cx,(%rax)
movslq (%rsi),%rcx
cmp    $0x2f,%ecx
jle    f313 <_TIFFVGetField+0xb43>
mov    0x8(%rsi),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rsi)
mov    (%rcx),%rax
jmpq   f320 <_TIFFVGetField+0xb50>
cmp    $0x152,%edx
jne    f32f <_TIFFVGetField+0xb5f>
mov    -0x8(%rbp),%rdi
movslq (%rdi),%rdx
cmp    $0x2f,%edx
jle    f35f <_TIFFVGetField+0xb8f>
mov    0x8(%rdi),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rdi)
mov    (%rcx),%rcx
jmpq   f36c <_TIFFVGetField+0xb9c>
cmp    $0x154,%edx
jne    ea1a <_TIFFVGetField+0x24a>
mov    -0x10(%rbp),%rsi
mov    0x10(%rsi),%ecx
and    $0x400000,%ecx
test   %ecx,%ecx
je     f39a <_TIFFVGetField+0xbca>
mov    -0x8(%rbp),%rdx
movslq (%rdx),%rcx
cmp    $0x2f,%ecx
jle    f3ad <_TIFFVGetField+0xbdd>
mov    0x8(%rdx),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rdx)
mov    (%rcx),%rax
jmpq   f3ba <_TIFFVGetField+0xbea>
mov    -0x10(%rbp),%rsi
mov    0x10(%rsi),%ecx
and    $0x400000,%ecx
test   %ecx,%ecx
je     f3c9 <_TIFFVGetField+0xbf9>
mov    -0x8(%rbp),%rdx
movslq (%rdx),%rcx
cmp    $0x2f,%ecx
jle    f3dc <_TIFFVGetField+0xc0c>
mov    0x8(%rdx),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rdx)
mov    (%rcx),%rax
jmpq   f3e9 <_TIFFVGetField+0xc19>
mov    0x10(%rsi),%rax
mov    (%rax,%rcx,1),%rax
add    $0x8,%ecx
mov    %ecx,(%rsi)
mov    -0x10(%rbp),%rdx
movzwl 0x108(%rdx),%ecx
mov    %cx,(%rax)
movslq (%rsi),%rcx
cmp    $0x2f,%ecx
jle    f3f8 <_TIFFVGetField+0xc28>
mov    0x8(%rsi),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rsi)
mov    (%rcx),%rax
jmpq   f405 <_TIFFVGetField+0xc35>
cmp    $0x213,%edx
jne    ea1a <_TIFFVGetField+0x24a>
mov    -0x8(%rbp),%rdx
movslq (%rdx),%rcx
cmp    $0x2f,%ecx
jle    f414 <_TIFFVGetField+0xc44>
mov    0x8(%rdx),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rdx)
mov    (%rcx),%rax
jmpq   f421 <_TIFFVGetField+0xc51>
cmp    $0x80e3,%edx
jne    ea1a <_TIFFVGetField+0x24a>
mov    -0x8(%rbp),%rdx
movslq (%rdx),%rcx
cmp    $0x2f,%ecx
jle    f434 <_TIFFVGetField+0xc64>
mov    0x8(%rdx),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rdx)
mov    (%rcx),%rax
jmpq   f441 <_TIFFVGetField+0xc71>
mov    0x10(%rdx),%rax
mov    (%rax,%rcx,1),%rax
add    $0x8,%ecx
mov    %ecx,(%rdx)
mov    -0x10(%rbp),%rcx
mov    0x128(%rcx),%rcx
mov    %rcx,(%rax)
mov    %r10,%rax
leaveq 
retq   
mov    -0x10(%rbp),%rax
movzwl 0x76(%rax),%eax
cmp    $0x2,%ax
jbe    f460 <_TIFFVGetField+0xc90>
cmp    $0x3,%ax
jne    f48e <_TIFFVGetField+0xcbe>
mov    -0x8(%rbp),%rdx
movslq (%rdx),%rcx
cmp    $0x2f,%ecx
jle    f49d <_TIFFVGetField+0xccd>
mov    0x8(%rdx),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rdx)
mov    (%rcx),%rax
jmpq   f4aa <_TIFFVGetField+0xcda>
mov    -0x10(%rbp),%rcx
mov    0x3b8(%rcx),%rdi
mov    (%rcx),%rcx
cmp    $0xffff,%r8d
ja     f4b4 <_TIFFVGetField+0xce4>
lea    0x42835(%rip),%r8        # 5171f <module.19+0x193>
jmpq   f4bb <_TIFFVGetField+0xceb>
movslq %edi,%rcx
lea    (%rcx,%rcx,2),%rdx
shl    $0x3,%rdx
add    0x148(%r9),%rdx
mov    (%rdx),%rcx
cmp    (%rcx),%r8d
je     f4d5 <_TIFFVGetField+0xd05>
add    $0x1,%edi
movslq 0x140(%r9),%rcx
cmp    %edi,%ecx
jg     eeef <_TIFFVGetField+0x71f>
xor    %eax,%eax
leaveq 
retq   
mov    0x10(%rdx),%rax
mov    (%rax,%rcx,1),%rax
add    $0x8,%ecx
mov    %ecx,(%rdx)
mov    -0x10(%rbp),%rcx
mov    0x6c(%rcx),%ecx
mov    %ecx,(%rax)
mov    %r10,%rax
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%r9),%rdi
lea    0x42962(%rip),%rdx        # 518ac <module.19+0x320>
mov    %r15,-0x18(%rbp)
mov    %r9,%r15
callq  85a0 <TIFFWarningExt@plt>
movzwl 0x82(%r15),%ecx
mov    $0x1,%eax
mov    -0x18(%rbp),%r15
mov    -0x8(%rbp),%rdi
movslq (%rdi),%rsi
cmp    $0x2f,%esi
jle    f559 <_TIFFVGetField+0xd89>
mov    0x8(%rdi),%rsi
lea    0x8(%rsi),%rdx
mov    %rdx,0x8(%rdi)
mov    (%rsi),%rdx
jmpq   f566 <_TIFFVGetField+0xd96>
cmp    $0x100,%edx
jbe    f56b <_TIFFVGetField+0xd9b>
cmp    $0x101,%edx
jbe    f59b <_TIFFVGetField+0xdcb>
cmp    $0x102,%edx
jne    f5cb <_TIFFVGetField+0xdfb>
mov    -0x8(%rbp),%rsi
movslq (%rsi),%rdx
cmp    $0x2f,%edx
jle    f5fb <_TIFFVGetField+0xe2b>
mov    0x8(%rsi),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rsi)
mov    (%rcx),%rcx
jmpq   f608 <_TIFFVGetField+0xe38>
cmp    $0x106,%edx
jne    f618 <_TIFFVGetField+0xe48>
mov    -0x8(%rbp),%rsi
movslq (%rsi),%rdx
cmp    $0x2f,%edx
jle    f648 <_TIFFVGetField+0xe78>
mov    0x8(%rsi),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rsi)
mov    (%rcx),%rcx
jmpq   f655 <_TIFFVGetField+0xe85>
cmp    $0x10a,%edx
jne    ea1a <_TIFFVGetField+0x24a>
mov    -0x8(%rbp),%rsi
movslq (%rsi),%rdx
cmp    $0x2f,%edx
jle    f665 <_TIFFVGetField+0xe95>
mov    0x8(%rsi),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rsi)
mov    (%rcx),%rcx
jmpq   f672 <_TIFFVGetField+0xea2>
cmp    $0x144,%edx
jne    ea1a <_TIFFVGetField+0x24a>
mov    -0x10(%rbp),%rax
mov    %rax,%rdi
mov    %r15,-0x18(%rbp)
mov    %rax,%r15
callq  8c70 <_TIFFFillStriles@plt>
mov    -0x8(%rbp),%rdx
movslq (%rdx),%rcx
cmp    $0x2f,%ecx
jle    f682 <_TIFFVGetField+0xeb2>
mov    0x8(%rdx),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rdx)
mov    (%rcx),%rax
jmpq   f68f <_TIFFVGetField+0xebf>
mov    0x10(%rdx),%rax
mov    (%rax,%rcx,1),%rax
add    $0x8,%ecx
mov    %ecx,(%rdx)
mov    -0x10(%rbp),%rcx
movzwl 0x80(%rcx),%ecx
mov    %cx,(%rax)
mov    %r10,%rax
leaveq 
retq   
cmp    $0x115,%edx
jne    f6a4 <_TIFFVGetField+0xed4>
mov    -0x8(%rbp),%rsi
movslq (%rsi),%rdx
cmp    $0x2f,%edx
jle    f6d4 <_TIFFVGetField+0xf04>
mov    0x8(%rsi),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rsi)
mov    (%rcx),%rcx
jmpq   f6e1 <_TIFFVGetField+0xf11>
cmp    $0x117,%edx
je     ec7d <_TIFFVGetField+0x4ad>
jmpq   ea1a <_TIFFVGetField+0x24a>
cmp    $0x119,%edx
jne    ea1a <_TIFFVGetField+0x24a>
mov    -0x8(%rbp),%rdx
movslq (%rdx),%rcx
cmp    $0x2f,%ecx
jle    f6f4 <_TIFFVGetField+0xf24>
mov    0x8(%rdx),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rdx)
mov    (%rcx),%rax
jmpq   f701 <_TIFFVGetField+0xf31>
mov    0x10(%rdx),%rax
mov    (%rax,%rcx,1),%rax
add    $0x8,%ecx
mov    %ecx,(%rdx)
mov    -0x10(%rbp),%rcx
movzwl 0x88(%rcx),%ecx
mov    %cx,(%rax)
mov    %r10,%rax
leaveq 
retq   
cmp    $0x11a,%edx
jne    ea1a <_TIFFVGetField+0x24a>
mov    -0x8(%rbp),%rdx
movslq (%rdx),%rcx
cmp    $0x2f,%ecx
jle    f714 <_TIFFVGetField+0xf44>
mov    0x8(%rdx),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rdx)
mov    (%rcx),%rax
jmpq   f721 <_TIFFVGetField+0xf51>
cmp    $0x11c,%edx
jne    ea1a <_TIFFVGetField+0x24a>
mov    -0x8(%rbp),%rdx
movslq (%rdx),%rcx
cmp    $0x2f,%ecx
jle    f736 <_TIFFVGetField+0xf66>
mov    0x8(%rdx),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rdx)
mov    (%rcx),%rax
jmpq   f743 <_TIFFVGetField+0xf73>
mov    0x10(%rdx),%rax
mov    (%rax,%rcx,1),%rax
add    $0x8,%ecx
mov    %ecx,(%rdx)
mov    -0x10(%rbp),%rcx
movss  0xa4(%rcx),%xmm0
movss  %xmm0,(%rax)
mov    %r10,%rax
leaveq 
retq   
mov    0x10(%rdx),%rax
mov    (%rax,%rcx,1),%rax
add    $0x8,%ecx
mov    %ecx,(%rdx)
mov    -0x10(%rbp),%rcx
movss  0xac(%rcx),%xmm0
movss  %xmm0,(%rax)
mov    %r10,%rax
leaveq 
retq   
mov    0x10(%rdx),%rax
mov    (%rax,%rcx,1),%rax
add    $0x8,%ecx
mov    %ecx,(%rdx)
mov    -0x10(%rbp),%rcx
movzwl 0xa8(%rcx),%ecx
mov    %cx,(%rax)
mov    %r10,%rax
leaveq 
retq   
cmp    $0x129,%edx
jne    f756 <_TIFFVGetField+0xf86>
mov    -0x8(%rbp),%rdi
movslq (%rdi),%rdx
cmp    $0x2f,%edx
jle    f786 <_TIFFVGetField+0xfb6>
mov    0x8(%rdi),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rdi)
mov    (%rcx),%rcx
jmpq   f793 <_TIFFVGetField+0xfc3>
cmp    $0x140,%edx
jne    ea1a <_TIFFVGetField+0x24a>
mov    -0x8(%rbp),%rsi
movslq (%rsi),%rcx
cmp    $0x2f,%ecx
jle    f7c1 <_TIFFVGetField+0xff1>
mov    0x8(%rsi),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rsi)
mov    (%rcx),%rax
jmpq   f7ce <_TIFFVGetField+0xffe>
cmp    $0x142,%edx
jne    ea1a <_TIFFVGetField+0x24a>
mov    -0x8(%rbp),%rdx
movslq (%rdx),%rcx
cmp    $0x2f,%ecx
jle    f7fc <_TIFFVGetField+0x102c>
mov    0x8(%rdx),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rdx)
mov    (%rcx),%rax
jmpq   f809 <_TIFFVGetField+0x1039>
mov    0x10(%rsi),%rax
mov    (%rax,%rcx,1),%rax
add    $0x8,%ecx
mov    %ecx,(%rsi)
mov    -0x10(%rbp),%rdx
movzwl 0xd0(%rdx),%ecx
mov    %cx,(%rax)
movslq (%rsi),%rcx
cmp    $0x2f,%ecx
jle    f817 <_TIFFVGetField+0x1047>
mov    0x8(%rsi),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rsi)
mov    (%rcx),%rax
jmpq   f824 <_TIFFVGetField+0x1054>
mov    0x10(%rsi),%rax
mov    (%rax,%rdx,1),%rcx
lea    0x8(%rdx),%eax
mov    %eax,(%rsi)
mov    -0x10(%rbp),%rax
mov    0x68(%rax),%eax
mov    %eax,(%rcx)
mov    %r10,%rax
leaveq 
retq   
mov    0x10(%rdx),%rax
mov    (%rax,%rcx,1),%rax
add    $0x8,%ecx
mov    %ecx,(%rdx)
mov    0xf0(%r15),%rcx
mov    %rcx,(%rax)
mov    $0x1,%eax
mov    -0x18(%rbp),%r15
leaveq 
retq   
mov    0x10(%rdx),%rax
mov    (%rax,%rcx,1),%rax
add    $0x8,%ecx
mov    %ecx,(%rdx)
mov    -0x10(%rbp),%rcx
mov    0x138(%rcx),%rcx
mov    %rcx,(%rax)
mov    %r10,%rax
leaveq 
retq   
mov    0x10(%rsi),%rax
mov    (%rax,%rcx,1),%rax
add    $0x8,%ecx
mov    %ecx,(%rsi)
mov    0x100(%rdx),%rcx
mov    %rcx,(%rax)
mov    %r10,%rax
leaveq 
retq   
cmp    $0x153,%edx
jne    ea1a <_TIFFVGetField+0x24a>
mov    -0x8(%rbp),%rdx
movslq (%rdx),%rcx
cmp    $0x2f,%ecx
jle    f833 <_TIFFVGetField+0x1063>
mov    0x8(%rdx),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rdx)
mov    (%rcx),%rax
jmpq   f840 <_TIFFVGetField+0x1070>
mov    0x10(%rdi),%rax
mov    (%rax,%rdx,1),%rcx
lea    0x8(%rdx),%eax
mov    %eax,(%rdi)
mov    -0x10(%rbp),%rsi
movzwl 0xd4(%rsi),%eax
mov    %ax,(%rcx)
movslq (%rdi),%rdx
cmp    $0x2f,%edx
jle    f850 <_TIFFVGetField+0x1080>
mov    0x8(%rdi),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rdi)
mov    (%rcx),%rcx
jmpq   f85d <_TIFFVGetField+0x108d>
mov    0x90(%rsi),%rax
movsd  (%rax),%xmm0
mov    %r10,%rcx
jmpq   f88a <_TIFFVGetField+0x10ba>
mov    0x10(%rdx),%rax
mov    (%rax,%rcx,1),%rax
add    $0x8,%ecx
mov    %ecx,(%rdx)
mov    0x90(%rsi),%rcx
mov    %rcx,(%rax)
mov    %r10,%rax
leaveq 
retq   
mov    0x98(%rsi),%rax
movsd  (%rax),%xmm0
mov    %r10,%rcx
jmpq   f8d6 <_TIFFVGetField+0x1106>
mov    0x10(%rdx),%rax
mov    (%rax,%rcx,1),%rax
add    $0x8,%ecx
mov    %ecx,(%rdx)
mov    0x98(%rsi),%rcx
mov    %rcx,(%rax)
mov    %r10,%rax
leaveq 
retq   
mov    0x10(%rsi),%rax
mov    (%rax,%rcx,1),%rax
add    $0x8,%ecx
mov    %ecx,(%rsi)
movzwl 0x10a(%rdx),%ecx
mov    %cx,(%rax)
mov    %r10,%rax
leaveq 
retq   
mov    0x10(%rdx),%rax
mov    (%rax,%rcx,1),%rax
add    $0x8,%ecx
mov    %ecx,(%rdx)
mov    -0x10(%rbp),%rcx
movzwl 0x10c(%rcx),%ecx
mov    %cx,(%rax)
mov    %r10,%rax
leaveq 
retq   
mov    0x10(%rdx),%rax
mov    (%rax,%rcx,1),%rax
add    $0x8,%ecx
mov    %ecx,(%rdx)
mov    -0x10(%rbp),%rdx
movzwl 0xd4(%rdx),%ecx
cmp    $0x1,%cx
je     f906 <_TIFFVGetField+0x1136>
xor    %ecx,%ecx
mov    %cx,(%rax)
mov    %r10,%rax
leaveq 
retq   
cmp    $0x1,%ax
jne    f921 <_TIFFVGetField+0x1151>
mov    -0x8(%rbp),%rdx
movslq (%rdx),%rcx
cmp    $0x2f,%ecx
jle    f930 <_TIFFVGetField+0x1160>
mov    0x8(%rdx),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rdx)
mov    (%rcx),%rax
jmpq   f93d <_TIFFVGetField+0x116d>
cmp    $0x4,%ax
je     f947 <_TIFFVGetField+0x1177>
mov    %r10,%rax
leaveq 
retq   
mov    0x10(%rdx),%rax
mov    (%rax,%rcx,1),%rax
add    $0x8,%ecx
mov    %ecx,(%rdx)
movw   $0x3,(%rax)
mov    %r10,%rax
leaveq 
retq   
lea    0x4225c(%rip),%r8        # 51717 <module.19+0x18b>
xor    %r10d,%r10d
lea    0x42222(%rip),%rdx        # 516e7 <module.19+0x15b>
mov    0x20(%rax),%r9
mov    %r10,%rax
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
movzbl 0x1b(%rax),%ecx
test   %cl,%cl
jne    f96b <_TIFFVGetField+0x119b>
mov    (%rax),%ecx
cmp    $0x150,%ecx
je     f99e <_TIFFVGetField+0x11ce>
mov    %rax,%rdi
mov    %r10,%rax
mov    0x8(%rdi),%ecx
cmp    $0x2,%ecx
je     f9e3 <_TIFFVGetField+0x1213>
movswq 0x4(%rdi),%rdi
cmp    $0xffff,%di
je     f9e3 <_TIFFVGetField+0x1213>
cmp    $0xfffd,%di
je     f9e3 <_TIFFVGetField+0x1213>
cmp    $0xfffe,%di
je     f9e3 <_TIFFVGetField+0x1213>
movslq 0x8(%rdx),%rdi
cmp    $0x1,%edi
jg     f9e3 <_TIFFVGetField+0x1213>
mov    0x10(%rdx),%r8
cmp    $0x1,%edi
je     fa07 <_TIFFVGetField+0x1237>
mov    %rsi,%rcx
lea    0x422c4(%rip),%rdi        # 5180c <module.19+0x280>
lea    0x41fbc(%rip),%rsi        # 5150b <module.10+0x76>
mov    $0x473,%edx
callq  8490 <__assert_fail@plt>
mov    0x10(%rdi),%rdx
mov    (%rdx,%rsi,1),%rdx
add    $0x8,%esi
mov    %esi,(%rdi)
mov    %cx,(%rdx)
leaveq 
retq   
cmp    $0xfe,%edx
jne    fa17 <_TIFFVGetField+0x1247>
mov    -0x8(%rbp),%rsi
movslq (%rsi),%rdx
cmp    $0x2f,%edx
jle    fa47 <_TIFFVGetField+0x1277>
mov    0x8(%rsi),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rsi)
mov    (%rcx),%rcx
jmpq   fa54 <_TIFFVGetField+0x1284>
cmp    $0x101,%edx
jne    ea1a <_TIFFVGetField+0x24a>
mov    -0x8(%rbp),%rdx
movslq (%rdx),%rcx
cmp    $0x2f,%ecx
jle    fa62 <_TIFFVGetField+0x1292>
mov    0x8(%rdx),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rdx)
mov    (%rcx),%rax
jmpq   fa6f <_TIFFVGetField+0x129f>
cmp    $0x103,%edx
jne    ea1a <_TIFFVGetField+0x24a>
mov    -0x8(%rbp),%rdx
movslq (%rdx),%rcx
cmp    $0x2f,%ecx
jle    fa7d <_TIFFVGetField+0x12ad>
mov    0x8(%rdx),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rdx)
mov    (%rcx),%rax
jmpq   fa8a <_TIFFVGetField+0x12ba>
mov    0x10(%rsi),%rax
mov    (%rax,%rdx,1),%rcx
lea    0x8(%rdx),%eax
mov    %eax,(%rsi)
mov    -0x10(%rbp),%rax
movzwl 0x74(%rax),%eax
mov    %ax,(%rcx)
mov    %r10,%rax
leaveq 
retq   
cmp    $0x107,%edx
jne    ea1a <_TIFFVGetField+0x24a>
mov    -0x8(%rbp),%rsi
movslq (%rsi),%rdx
cmp    $0x2f,%edx
jle    fa9a <_TIFFVGetField+0x12ca>
mov    0x8(%rsi),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rsi)
mov    (%rcx),%rcx
jmpq   faa7 <_TIFFVGetField+0x12d7>
mov    0x10(%rsi),%rax
mov    (%rax,%rdx,1),%rcx
lea    0x8(%rdx),%eax
mov    %eax,(%rsi)
mov    -0x10(%rbp),%rax
movzwl 0x7a(%rax),%eax
mov    %ax,(%rcx)
mov    %r10,%rax
leaveq 
retq   
mov    0x10(%rsi),%rax
mov    (%rax,%rdx,1),%rcx
lea    0x8(%rdx),%eax
mov    %eax,(%rsi)
mov    -0x10(%rbp),%rax
movzwl 0x7e(%rax),%eax
mov    %ax,(%rcx)
mov    %r10,%rax
leaveq 
retq   
mov    0x10(%rdx),%rax
mov    (%rax,%rcx,1),%rax
add    $0x8,%ecx
mov    %ecx,(%rdx)
mov    0xe8(%r15),%rcx
mov    %rcx,(%rax)
mov    $0x1,%eax
mov    -0x18(%rbp),%r15
leaveq 
retq   
cmp    $0x116,%edx
jne    ea1a <_TIFFVGetField+0x24a>
mov    -0x8(%rbp),%rdx
movslq (%rdx),%rcx
cmp    $0x2f,%ecx
jle    fab7 <_TIFFVGetField+0x12e7>
mov    0x8(%rdx),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rdx)
mov    (%rcx),%rax
jmpq   fac4 <_TIFFVGetField+0x12f4>
mov    0x10(%rsi),%rax
mov    (%rax,%rdx,1),%rcx
lea    0x8(%rdx),%eax
mov    %eax,(%rsi)
mov    -0x10(%rbp),%rax
movzwl 0x82(%rax),%eax
mov    %ax,(%rcx)
mov    %r10,%rax
leaveq 
retq   
mov    0x10(%rdx),%rax
mov    (%rax,%rcx,1),%rax
add    $0x8,%ecx
mov    %ecx,(%rdx)
mov    -0x10(%rbp),%rcx
movzwl 0x8a(%rcx),%ecx
mov    %cx,(%rax)
mov    %r10,%rax
leaveq 
retq   
mov    0x10(%rdx),%rax
mov    (%rax,%rcx,1),%rax
add    $0x8,%ecx
mov    %ecx,(%rdx)
mov    -0x10(%rbp),%rcx
movss  0xa0(%rcx),%xmm0
movss  %xmm0,(%rax)
mov    %r10,%rax
leaveq 
retq   
mov    0x10(%rdx),%rax
mov    (%rax,%rcx,1),%rax
add    $0x8,%ecx
mov    %ecx,(%rdx)
mov    -0x10(%rbp),%rcx
movzwl 0xaa(%rcx),%ecx
mov    %cx,(%rax)
mov    %r10,%rax
leaveq 
retq   
cmp    $0x12d,%edx
jne    ea1a <_TIFFVGetField+0x24a>
mov    -0x8(%rbp),%rsi
movslq (%rsi),%rcx
cmp    $0x2f,%ecx
jle    fad5 <_TIFFVGetField+0x1305>
mov    0x8(%rsi),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rsi)
mov    (%rcx),%rax
jmpq   fae2 <_TIFFVGetField+0x1312>
mov    0x10(%rdi),%rax
mov    (%rax,%rdx,1),%rcx
lea    0x8(%rdx),%eax
mov    %eax,(%rdi)
mov    -0x10(%rbp),%rsi
movzwl 0xb4(%rsi),%eax
mov    %ax,(%rcx)
movslq (%rdi),%rdx
cmp    $0x2f,%edx
jle    fb0e <_TIFFVGetField+0x133e>
mov    0x8(%rdi),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rdi)
mov    (%rcx),%rcx
jmpq   fb1b <_TIFFVGetField+0x134b>
mov    0x10(%rsi),%rax
mov    (%rax,%rcx,1),%rax
add    $0x8,%ecx
mov    %ecx,(%rsi)
mov    -0x10(%rbp),%rdx
mov    0xb8(%rdx),%rcx
mov    %rcx,(%rax)
movslq (%rsi),%rcx
cmp    $0x2f,%ecx
jle    fb2a <_TIFFVGetField+0x135a>
mov    0x8(%rsi),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rsi)
mov    (%rcx),%rax
jmpq   fb37 <_TIFFVGetField+0x1367>
mov    0x10(%rdx),%rax
mov    (%rax,%rcx,1),%rax
add    $0x8,%ecx
mov    %ecx,(%rdx)
mov    -0x10(%rbp),%rcx
mov    0x64(%rcx),%ecx
mov    %ecx,(%rax)
mov    %r10,%rax
leaveq 
retq   
mov    0x10(%rsi),%rax
mov    (%rax,%rcx,1),%rax
add    $0x8,%ecx
mov    %ecx,(%rsi)
movzwl 0xd2(%rdx),%ecx
mov    %cx,(%rax)
mov    %r10,%rax
leaveq 
retq   
mov    0x10(%rdx),%rax
mov    (%rax,%rcx,1),%rax
add    $0x8,%ecx
mov    %ecx,(%rdx)
mov    -0x10(%rbp),%rcx
movzwl 0x76(%rcx),%ecx
mov    %cx,(%rax)
mov    %r10,%rax
leaveq 
retq   
mov    0x10(%rdi),%rax
mov    (%rax,%rdx,1),%rcx
lea    0x8(%rdx),%eax
mov    %eax,(%rdi)
mov    0xd8(%rsi),%rax
mov    %rax,(%rcx)
mov    %r10,%rax
leaveq 
retq   
mov    0x90(%rsi),%rdx
movzwl %cx,%eax
movsd  (%rdx,%rax,8),%xmm1
ucomisd %xmm0,%xmm1
jp     f887 <_TIFFVGetField+0x10b7>
jae    f887 <_TIFFVGetField+0x10b7>
movapd %xmm1,%xmm0
add    $0x1,%ecx
movzwl 0x82(%rsi),%eax
cmp    %cx,%ax
ja     f86c <_TIFFVGetField+0x109c>
mov    -0x8(%rbp),%rdx
movslq (%rdx),%rcx
cmp    $0x2f,%ecx
jle    fb61 <_TIFFVGetField+0x1391>
mov    0x8(%rdx),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rdx)
mov    (%rcx),%rax
jmpq   fb6e <_TIFFVGetField+0x139e>
mov    0x98(%rsi),%rdx
movzwl %cx,%eax
movsd  (%rdx,%rax,8),%xmm1
ucomisd %xmm0,%xmm1
jbe    f8d3 <_TIFFVGetField+0x1103>
movapd %xmm1,%xmm0
add    $0x1,%ecx
movzwl 0x82(%rsi),%eax
cmp    %cx,%ax
ja     f8ba <_TIFFVGetField+0x10ea>
mov    -0x8(%rbp),%rdx
movslq (%rdx),%rcx
cmp    $0x2f,%ecx
jle    fb77 <_TIFFVGetField+0x13a7>
mov    0x8(%rdx),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rdx)
mov    (%rcx),%rax
jmpq   fb84 <_TIFFVGetField+0x13b4>
mov    0xd8(%rdx),%rcx
movzwl (%rcx),%ecx
cmp    $0x1,%cx
je     fb8d <_TIFFVGetField+0x13bd>
xor    %ecx,%ecx
jmpq   f458 <_TIFFVGetField+0xc88>
cmp    $0x2,%ax
je     fb95 <_TIFFVGetField+0x13c5>
mov    %r10,%rax
leaveq 
retq   
mov    0x10(%rdx),%rax
mov    (%rax,%rcx,1),%rax
add    $0x8,%ecx
mov    %ecx,(%rdx)
movw   $0x2,(%rax)
mov    %r10,%rax
leaveq 
retq   
mov    -0x8(%rbp),%rdx
movslq (%rdx),%rcx
cmp    $0x2f,%ecx
jle    fbb9 <_TIFFVGetField+0x13e9>
mov    0x8(%rdx),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rdx)
mov    (%rcx),%rax
jmpq   fbc6 <_TIFFVGetField+0x13f6>
movswq 0x4(%rax),%rax
cmp    $0xfffd,%ax
jne    fbd0 <_TIFFVGetField+0x1400>
mov    -0x8(%rbp),%rcx
movslq (%rcx),%rdi
cmp    $0x2f,%edi
jle    fbf4 <_TIFFVGetField+0x1424>
mov    0x8(%rcx),%rsi
lea    0x8(%rsi),%rax
mov    %rax,0x8(%rcx)
mov    (%rsi),%rsi
jmpq   fc01 <_TIFFVGetField+0x1431>
mov    0x20(%rax),%rdi
lea    0x41e5a(%rip),%rsi        # 51803 <module.19+0x277>
mov    %r15,-0x18(%rbp)
mov    %r14,-0x10(%rbp)
mov    %rax,%r14
mov    %rdx,%r15
callq  8660 <strcmp@plt>
test   %eax,%eax
je     fc26 <_TIFFVGetField+0x1456>
mov    %r15,%rdx
mov    %r14,%rdi
lea    0x41ecc(%rip),%rsi        # 5189d <module.19+0x311>
mov    -0x10(%rbp),%r14
mov    $0x1,%eax
mov    -0x18(%rbp),%r15
jmpq   f4f5 <_TIFFVGetField+0xd25>
mov    -0x8(%rbp),%rdi
movslq (%rdi),%rsi
cmp    $0x2f,%esi
jle    fc4a <_TIFFVGetField+0x147a>
mov    0x8(%rdi),%rsi
lea    0x8(%rsi),%rcx
mov    %rcx,0x8(%rdi)
mov    (%rsi),%rcx
jmpq   fc57 <_TIFFVGetField+0x1487>
add    $0xffffffff,%ecx
cmp    $0x11,%ecx
jbe    fc60 <_TIFFVGetField+0x1490>
xor    %eax,%eax
leaveq 
retq   
cmp    $0x100,%edx
jne    ea1a <_TIFFVGetField+0x24a>
mov    -0x8(%rbp),%rdx
movslq (%rdx),%rcx
cmp    $0x2f,%ecx
jle    fc74 <_TIFFVGetField+0x14a4>
mov    0x8(%rdx),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rdx)
mov    (%rcx),%rax
jmpq   fc81 <_TIFFVGetField+0x14b1>
mov    0x10(%rsi),%rax
mov    (%rax,%rdx,1),%rcx
lea    0x8(%rdx),%eax
mov    %eax,(%rsi)
mov    -0x10(%rbp),%rax
mov    0x70(%rax),%eax
mov    %eax,(%rcx)
mov    %r10,%rax
leaveq 
retq   
mov    0x10(%rdx),%rax
mov    (%rax,%rcx,1),%rax
add    $0x8,%ecx
mov    %ecx,(%rdx)
mov    -0x10(%rbp),%rcx
mov    0x5c(%rcx),%ecx
mov    %ecx,(%rax)
mov    %r10,%rax
leaveq 
retq   
mov    0x10(%rdx),%rax
mov    (%rax,%rcx,1),%rax
add    $0x8,%ecx
mov    %ecx,(%rdx)
mov    -0x10(%rbp),%rcx
movzwl 0x78(%rcx),%ecx
mov    %cx,(%rax)
mov    %r10,%rax
leaveq 
retq   
mov    0x10(%rsi),%rax
mov    (%rax,%rdx,1),%rcx
lea    0x8(%rdx),%eax
mov    %eax,(%rsi)
mov    -0x10(%rbp),%rax
movzwl 0x7c(%rax),%eax
mov    %ax,(%rcx)
mov    %r10,%rax
leaveq 
retq   
mov    0x10(%rdx),%rax
mov    (%rax,%rcx,1),%rax
add    $0x8,%ecx
mov    %ecx,(%rdx)
mov    -0x10(%rbp),%rcx
mov    0x84(%rcx),%ecx
mov    %ecx,(%rax)
mov    %r10,%rax
leaveq 
retq   
mov    0x10(%rsi),%rax
mov    (%rax,%rcx,1),%rax
add    $0x8,%ecx
mov    %ecx,(%rsi)
mov    -0x10(%rbp),%rdx
mov    0x110(%rdx),%rcx
mov    %rcx,(%rax)
movzwl 0x82(%rdx),%ecx
movzwl 0xd4(%rdx),%eax
sub    %eax,%ecx
cmp    $0x1,%ecx
jg     fc8f <_TIFFVGetField+0x14bf>
mov    %r10,%rax
leaveq 
retq   
mov    0x10(%rdi),%rax
mov    (%rax,%rdx,1),%rcx
lea    0x8(%rdx),%eax
mov    %eax,(%rdi)
movzwl 0xb6(%rsi),%eax
mov    %ax,(%rcx)
mov    %r10,%rax
leaveq 
retq   
mov    0x10(%rsi),%rax
mov    (%rax,%rcx,1),%rax
add    $0x8,%ecx
mov    %ecx,(%rsi)
mov    0xc0(%rdx),%rcx
mov    %rcx,(%rax)
movslq (%rsi),%rcx
cmp    $0x2f,%ecx
jle    fcaf <_TIFFVGetField+0x14df>
mov    0x8(%rsi),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rsi)
mov    (%rcx),%rax
jmpq   fcbc <_TIFFVGetField+0x14ec>
mov    0x10(%rdx),%rax
mov    (%rax,%rcx,1),%rax
add    $0x8,%ecx
mov    %ecx,(%rdx)
movsd  %xmm0,(%rax)
mov    %r10,%rax
leaveq 
retq   
mov    0x10(%rdx),%rax
mov    (%rax,%rcx,1),%rax
add    $0x8,%ecx
mov    %ecx,(%rdx)
movsd  %xmm0,(%rax)
mov    %r10,%rax
leaveq 
retq   
mov    %r10,%rcx
jmpq   f458 <_TIFFVGetField+0xc88>
mov    -0x8(%rbp),%rdx
movslq (%rdx),%rcx
cmp    $0x2f,%ecx
jle    fccb <_TIFFVGetField+0x14fb>
mov    0x8(%rdx),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rdx)
mov    (%rcx),%rax
jmpq   fcd8 <_TIFFVGetField+0x1508>
mov    0x10(%rdx),%rax
mov    (%rax,%rcx,1),%rax
add    $0x8,%ecx
mov    %ecx,(%rdx)
movw   $0x0,(%rax)
mov    %r10,%rax
leaveq 
retq   
mov    -0x8(%rbp),%rcx
movslq (%rcx),%rdi
cmp    $0x2f,%edi
jle    fce2 <_TIFFVGetField+0x1512>
mov    0x8(%rcx),%rsi
lea    0x8(%rsi),%rax
mov    %rax,0x8(%rcx)
mov    (%rsi),%rsi
jmpq   fcef <_TIFFVGetField+0x151f>
mov    0x10(%rcx),%rax
mov    (%rax,%rdi,1),%rsi
lea    0x8(%rdi),%eax
mov    %eax,(%rcx)
mov    0x8(%rdx),%eax
mov    %eax,(%rsi)
movslq (%rcx),%rdi
cmp    $0x2f,%edi
jle    fcfb <_TIFFVGetField+0x152b>
mov    0x8(%rcx),%rsi
lea    0x8(%rsi),%rax
mov    %rax,0x8(%rcx)
mov    (%rsi),%rsi
jmpq   fd08 <_TIFFVGetField+0x1538>
mov    -0x8(%rbp),%rdx
movslq (%rdx),%rcx
cmp    $0x2f,%ecx
jle    fd14 <_TIFFVGetField+0x1544>
mov    0x8(%rdx),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rdx)
mov    (%rcx),%rax
jmpq   fd21 <_TIFFVGetField+0x1551>
mov    0x10(%rdi),%rcx
mov    (%rcx,%rsi,1),%rcx
add    $0x8,%esi
mov    %esi,(%rdi)
mov    0x10(%rdx),%rdx
mov    %rdx,(%rcx)
leaveq 
retq   
lea    0x41791(%rip),%rdx        # 513f8 <_fini+0x4d4>
movslq (%rdx,%rcx,4),%rcx
add    %rdx,%rcx
jmpq   *%rcx
xor    %eax,%eax
leaveq 
retq   
mov    0x10(%rdx),%rax
mov    (%rax,%rcx,1),%rax
add    $0x8,%ecx
mov    %ecx,(%rdx)
mov    -0x10(%rbp),%rcx
mov    0x58(%rcx),%ecx
mov    %ecx,(%rax)
mov    %r10,%rax
leaveq 
retq   
movslq (%rsi),%rcx
cmp    $0x2f,%ecx
jle    feb3 <_TIFFVGetField+0x16e3>
mov    0x8(%rsi),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rsi)
mov    (%rcx),%rax
jmpq   fec0 <_TIFFVGetField+0x16f0>
mov    0x10(%rsi),%rax
mov    (%rax,%rcx,1),%rax
add    $0x8,%ecx
mov    %ecx,(%rsi)
mov    0xc8(%rdx),%rcx
mov    %rcx,(%rax)
mov    %r10,%rax
leaveq 
retq   
mov    0x10(%rdx),%rax
mov    (%rax,%rcx,1),%rax
add    $0x8,%ecx
mov    %ecx,(%rdx)
movw   $0x1,(%rax)
mov    %r10,%rax
leaveq 
retq   
mov    0x10(%rcx),%rax
mov    (%rax,%rdi,1),%rsi
lea    0x8(%rdi),%eax
mov    %eax,(%rcx)
movzwl 0x8(%rdx),%eax
mov    %ax,(%rsi)
jmpq   fc06 <_TIFFVGetField+0x1436>
mov    0x10(%rcx),%rax
mov    (%rax,%rdi,1),%rsi
lea    0x8(%rdi),%eax
mov    %eax,(%rcx)
mov    0x10(%rdx),%rax
mov    %rax,(%rsi)
mov    %r10,%rax
leaveq 
retq   
mov    0x10(%rdx),%rax
mov    (%rax,%rcx,1),%rax
add    $0x8,%ecx
mov    %ecx,(%rdx)
mov    0x10(%r15),%rcx
movzwl (%rcx),%ecx
mov    %cx,(%rax)
movslq (%rdx),%rcx
cmp    $0x2f,%ecx
jle    feea <_TIFFVGetField+0x171a>
mov    0x8(%rdx),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rdx)
mov    (%rcx),%rax
jmpq   fef7 <_TIFFVGetField+0x1727>
mov    -0x8(%rbp),%rsi
movslq (%rsi),%rdx
cmp    $0x2f,%edx
jle    ff11 <_TIFFVGetField+0x1741>
mov    0x8(%rsi),%rdx
lea    0x8(%rdx),%rcx
mov    %rcx,0x8(%rsi)
mov    (%rdx),%rcx
jmpq   ff1e <_TIFFVGetField+0x174e>
mov    -0x8(%rbp),%rsi
movslq (%rsi),%rdx
cmp    $0x2f,%edx
jle    ff26 <_TIFFVGetField+0x1756>
mov    0x8(%rsi),%rdx
lea    0x8(%rdx),%rcx
mov    %rcx,0x8(%rsi)
mov    (%rdx),%rcx
jmpq   ff33 <_TIFFVGetField+0x1763>
mov    -0x8(%rbp),%rsi
movslq (%rsi),%rdx
cmp    $0x2f,%edx
jle    ff3b <_TIFFVGetField+0x176b>
mov    0x8(%rsi),%rdx
lea    0x8(%rdx),%rcx
mov    %rcx,0x8(%rsi)
mov    (%rdx),%rcx
jmpq   ff48 <_TIFFVGetField+0x1778>
mov    -0x8(%rbp),%rsi
movslq (%rsi),%rdx
cmp    $0x2f,%edx
jle    ff51 <_TIFFVGetField+0x1781>
mov    0x8(%rsi),%rdx
lea    0x8(%rdx),%rcx
mov    %rcx,0x8(%rsi)
mov    (%rdx),%rcx
jmpq   ff5e <_TIFFVGetField+0x178e>
mov    -0x8(%rbp),%rsi
movslq (%rsi),%rdx
cmp    $0x2f,%edx
jle    ff67 <_TIFFVGetField+0x1797>
mov    0x8(%rsi),%rdx
lea    0x8(%rdx),%rcx
mov    %rcx,0x8(%rsi)
mov    (%rdx),%rcx
jmpq   ff74 <_TIFFVGetField+0x17a4>
mov    -0x8(%rbp),%rsi
movslq (%rsi),%rdx
cmp    $0x2f,%edx
jle    ff7b <_TIFFVGetField+0x17ab>
mov    0x8(%rsi),%rdx
lea    0x8(%rdx),%rcx
mov    %rcx,0x8(%rsi)
mov    (%rdx),%rcx
jmpq   ff88 <_TIFFVGetField+0x17b8>
mov    -0x8(%rbp),%rsi
movslq (%rsi),%rdx
cmp    $0x2f,%edx
jle    ff8f <_TIFFVGetField+0x17bf>
mov    0x8(%rsi),%rdx
lea    0x8(%rdx),%rcx
mov    %rcx,0x8(%rsi)
mov    (%rdx),%rcx
jmpq   ff9c <_TIFFVGetField+0x17cc>
mov    -0x8(%rbp),%rsi
movslq (%rsi),%rdx
cmp    $0x2f,%edx
jle    ffa4 <_TIFFVGetField+0x17d4>
mov    0x8(%rsi),%rdx
lea    0x8(%rdx),%rcx
mov    %rcx,0x8(%rsi)
mov    (%rdx),%rcx
jmpq   ffb1 <_TIFFVGetField+0x17e1>
mov    -0x8(%rbp),%rsi
movslq (%rsi),%rdx
cmp    $0x2f,%edx
jle    ffb9 <_TIFFVGetField+0x17e9>
mov    0x8(%rsi),%rdx
lea    0x8(%rdx),%rcx
mov    %rcx,0x8(%rsi)
mov    (%rdx),%rcx
jmpq   ffc6 <_TIFFVGetField+0x17f6>
mov    -0x8(%rbp),%rsi
movslq (%rsi),%rdx
cmp    $0x2f,%edx
jle    ffd1 <_TIFFVGetField+0x1801>
mov    0x8(%rsi),%rdx
lea    0x8(%rdx),%rcx
mov    %rcx,0x8(%rsi)
mov    (%rdx),%rcx
jmpq   ffde <_TIFFVGetField+0x180e>
mov    0x10(%rsi),%rax
mov    (%rax,%rcx,1),%rax
add    $0x8,%ecx
mov    %ecx,(%rsi)
mov    0x118(%rdx),%rcx
mov    %rcx,(%rax)
movslq (%rsi),%rcx
cmp    $0x2f,%ecx
jle    ffe9 <_TIFFVGetField+0x1819>
mov    0x8(%rsi),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rsi)
mov    (%rcx),%rax
jmpq   fff6 <_TIFFVGetField+0x1826>
mov    0x10(%rdx),%rax
mov    (%rax,%rcx,1),%rax
add    $0x8,%ecx
mov    %ecx,(%rdx)
mov    0x10(%r15),%rcx
movzwl 0x2(%rcx),%ecx
mov    %cx,(%rax)
mov    -0x10(%rbp),%r14
mov    $0x1,%eax
mov    -0x18(%rbp),%r15
leaveq 
retq   
mov    0x10(%rsi),%rcx
mov    (%rcx,%rdx,1),%rcx
add    $0x8,%edx
mov    %edx,(%rsi)
movzbl (%r8),%edx
mov    %dl,(%rcx)
leaveq 
retq   
mov    0x10(%rsi),%rcx
mov    (%rcx,%rdx,1),%rcx
add    $0x8,%edx
mov    %edx,(%rsi)
movsbq (%r8),%rdx
mov    %dl,(%rcx)
leaveq 
retq   
mov    0x10(%rsi),%rcx
mov    (%rcx,%rdx,1),%rcx
add    $0x8,%edx
mov    %edx,(%rsi)
movzwl (%r8),%edx
mov    %dx,(%rcx)
leaveq 
retq   
mov    0x10(%rsi),%rcx
mov    (%rcx,%rdx,1),%rcx
add    $0x8,%edx
mov    %edx,(%rsi)
movswq (%r8),%rdx
mov    %dx,(%rcx)
leaveq 
retq   
mov    0x10(%rsi),%rcx
mov    (%rcx,%rdx,1),%rcx
add    $0x8,%edx
mov    %edx,(%rsi)
mov    (%r8),%edx
mov    %edx,(%rcx)
leaveq 
retq   
mov    0x10(%rsi),%rcx
mov    (%rcx,%rdx,1),%rcx
add    $0x8,%edx
mov    %edx,(%rsi)
movslq (%r8),%rdx
mov    %edx,(%rcx)
leaveq 
retq   
mov    0x10(%rsi),%rcx
mov    (%rcx,%rdx,1),%rcx
add    $0x8,%edx
mov    %edx,(%rsi)
mov    (%r8),%rdx
mov    %rdx,(%rcx)
leaveq 
retq   
mov    0x10(%rsi),%rcx
mov    (%rcx,%rdx,1),%rcx
add    $0x8,%edx
mov    %edx,(%rsi)
mov    (%r8),%rdx
mov    %rdx,(%rcx)
leaveq 
retq   
mov    0x10(%rsi),%rcx
mov    (%rcx,%rdx,1),%rcx
add    $0x8,%edx
mov    %edx,(%rsi)
movss  (%r8),%xmm0
movss  %xmm0,(%rcx)
leaveq 
retq   
mov    0x10(%rsi),%rcx
mov    (%rcx,%rdx,1),%rcx
add    $0x8,%edx
mov    %edx,(%rsi)
movsd  (%r8),%xmm0
movsd  %xmm0,(%rcx)
leaveq 
retq   
mov    0x10(%rsi),%rax
mov    (%rax,%rcx,1),%rax
add    $0x8,%ecx
mov    %ecx,(%rsi)
mov    0x120(%rdx),%rcx
mov    %rcx,(%rax)
mov    %r10,%rax
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)

0000000000010010 <TIFFAdvanceDirectory>:
push   %rbp
mov    %rsp,%rbp
sub    $0x60,%rsp
lea    0x418b3(%rip),%r9        # 518d2 <module.43>
lea    0x418c1(%rip),%r8        # 518e7 <module.43+0x15>
mov    0x10(%rdi),%eax
mov    %rax,%rcx
and    $0x800,%ecx
test   %ecx,%ecx
jne    10092 <TIFFAdvanceDirectory+0x82>
and    $0x80000,%eax
test   %eax,%eax
jne    101b5 <TIFFAdvanceDirectory+0x1a5>
mov    (%rsi),%rcx
mov    %rdi,%rax
mov    %r15,-0x30(%rbp)
mov    %rdx,-0x38(%rbp)
mov    %rsi,-0x28(%rbp)
mov    %rcx,%rsi
mov    %rdi,%r15
mov    %rax,%rdi
callq  82f0 <_TIFFSeekOK@plt>
test   %eax,%eax
jne    10204 <TIFFAdvanceDirectory+0x1f4>
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
mov    (%r15),%rcx
lea    0x418cd(%rip),%rdx        # 5194b <module.43+0x79>
lea    0x4184d(%rip),%rsi        # 518d2 <module.43>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x30(%rbp),%r15
leaveq 
retq   
mov    (%rsi),%r11
and    $0x80000,%eax
test   %eax,%eax
jne    10271 <TIFFAdvanceDirectory+0x261>
lea    0x2(%r11),%rcx
cmp    %r11,%rcx
jl     10388 <TIFFAdvanceDirectory+0x378>
cmp    $0x1,%rcx
jle    10388 <TIFFAdvanceDirectory+0x378>
cmp    0x3a0(%rdi),%rcx
jg     10388 <TIFFAdvanceDirectory+0x378>
mov    %r11,%r8
add    0x398(%rdi),%r8
lea    -0x56(%rbp),%rax
mov    %r15,-0x20(%rbp)
mov    %rdx,-0x38(%rbp)
mov    %rsi,-0x8(%rbp)
mov    %r14,-0x18(%rbp)
mov    %r13,-0x10(%rbp)
mov    %r8,%rsi
mov    %rdi,%r13
mov    %rax,%rdi
mov    %r11,%r14
mov    %rcx,%r15
mov    $0x2,%edx
callq  8790 <_TIFFmemcpy@plt>
mov    0x10(%r13),%eax
and    $0x80,%eax
test   %eax,%eax
je     10117 <TIFFAdvanceDirectory+0x107>
lea    -0x56(%rbp),%rdi
callq  87c0 <TIFFSwabShort@plt>
movzwl -0x56(%rbp),%eax
lea    (%rax,%rax,2),%eax
shl    $0x2,%eax
movslq %eax,%rax
lea    0x2(%r14,%rax,1),%rsi
cmp    %rsi,%r15
jg     103b2 <TIFFAdvanceDirectory+0x3a2>
cmp    %rax,%rsi
jl     103b2 <TIFFAdvanceDirectory+0x3a2>
lea    0x4(%rsi),%rax
cmp    %rax,%rsi
jg     103b2 <TIFFAdvanceDirectory+0x3a2>
cmp    $0x3,%rax
jle    103b2 <TIFFAdvanceDirectory+0x3a2>
cmp    0x3a0(%r13),%rax
jg     103b2 <TIFFAdvanceDirectory+0x3a2>
mov    -0x38(%rbp),%rax
test   %rax,%rax
je     1016b <TIFFAdvanceDirectory+0x15b>
mov    %rsi,(%rax)
add    0x398(%r13),%rsi
lea    -0x54(%rbp),%r14
mov    %r14,%rdi
mov    $0x4,%edx
callq  8790 <_TIFFmemcpy@plt>
mov    0x10(%r13),%eax
and    $0x80,%eax
test   %eax,%eax
je     10198 <TIFFAdvanceDirectory+0x188>
mov    %r14,%rdi
callq  8480 <TIFFSwabLong@plt>
mov    -0x54(%rbp),%eax
mov    -0x8(%rbp),%rcx
mov    %rax,(%rcx)
mov    -0x10(%rbp),%r13
mov    -0x18(%rbp),%r14
mov    -0x20(%rbp),%r15
mov    $0x1,%eax
leaveq 
retq   
mov    (%rsi),%rcx
mov    %rdi,%rax
mov    %r15,-0x28(%rbp)
mov    %rdx,-0x38(%rbp)
mov    %rsi,-0x30(%rbp)
mov    %rcx,%rsi
mov    %rdi,%r15
mov    %rax,%rdi
callq  82f0 <_TIFFSeekOK@plt>
test   %eax,%eax
jne    103de <TIFFAdvanceDirectory+0x3ce>
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
mov    (%r15),%rcx
lea    0x4175b(%rip),%rdx        # 5194b <module.43+0x79>
lea    0x416db(%rip),%rsi        # 518d2 <module.43>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x28(%rbp),%r15
leaveq 
retq   
mov    0x3c0(%r15),%rax
mov    0x3b8(%r15),%rdi
lea    -0x46(%rbp),%rsi
mov    $0x2,%edx
callq  *%rax
cmp    $0x2,%rax
jne    1006b <TIFFAdvanceDirectory+0x5b>
mov    0x10(%r15),%eax
and    $0x80,%eax
test   %eax,%eax
je     1023d <TIFFAdvanceDirectory+0x22d>
lea    -0x46(%rbp),%rdi
callq  87c0 <TIFFSwabShort@plt>
mov    -0x38(%rbp),%r8
test   %r8,%r8
jne    1045b <TIFFAdvanceDirectory+0x44b>
mov    0x3d0(%r15),%rcx
mov    0x3b8(%r15),%rdi
movzwl -0x46(%rbp),%eax
lea    (%rax,%rax,2),%eax
shl    $0x2,%eax
movslq %eax,%rsi
mov    $0x1,%edx
callq  *%rcx
jmpq   1048b <TIFFAdvanceDirectory+0x47b>
lea    0x8(%r11),%r10
cmp    %r10,%r11
jg     104d5 <TIFFAdvanceDirectory+0x4c5>
cmp    $0x7,%r10
jle    104d5 <TIFFAdvanceDirectory+0x4c5>
cmp    0x3a0(%rdi),%r10
jg     104d5 <TIFFAdvanceDirectory+0x4c5>
mov    %r11,%r8
add    0x398(%rdi),%r8
lea    -0x50(%rbp),%rax
mov    $0x8,%ecx
mov    %r15,-0x18(%rbp)
mov    %rdx,-0x38(%rbp)
mov    %rsi,-0x20(%rbp)
mov    %r14,-0x10(%rbp)
mov    %r13,-0x8(%rbp)
mov    %rcx,%rdx
mov    %r8,%rsi
mov    %r11,%r13
mov    %rdi,%r14
mov    %rax,%rdi
mov    %r10,%r15
callq  8790 <_TIFFmemcpy@plt>
mov    0x10(%r14),%eax
and    $0x80,%eax
test   %eax,%eax
je     102e9 <TIFFAdvanceDirectory+0x2d9>
lea    -0x50(%rbp),%rdi
callq  8730 <TIFFSwabLong8@plt>
mov    -0x50(%rbp),%rax
cmp    $0xffff,%rax
ja     104ed <TIFFAdvanceDirectory+0x4dd>
movzwl %ax,%eax
lea    (%rax,%rax,4),%eax
shl    $0x2,%eax
movslq %eax,%rax
lea    0x8(%r13,%rax,1),%rsi
cmp    %rsi,%r15
jg     10519 <TIFFAdvanceDirectory+0x509>
cmp    %rax,%rsi
jl     10519 <TIFFAdvanceDirectory+0x509>
lea    0x8(%rsi),%rax
cmp    %rax,%rsi
jg     10519 <TIFFAdvanceDirectory+0x509>
cmp    $0x7,%rax
jle    10519 <TIFFAdvanceDirectory+0x509>
cmp    0x3a0(%r14),%rax
jg     10519 <TIFFAdvanceDirectory+0x509>
mov    -0x38(%rbp),%rax
test   %rax,%rax
je     1034c <TIFFAdvanceDirectory+0x33c>
mov    %rsi,(%rax)
add    0x398(%r14),%rsi
mov    -0x20(%rbp),%r13
mov    %r13,%rdi
mov    $0x8,%edx
callq  8790 <_TIFFmemcpy@plt>
mov    0x10(%r14),%eax
and    $0x80,%eax
test   %eax,%eax
jne    10545 <TIFFAdvanceDirectory+0x535>
mov    -0x8(%rbp),%r13
mov    -0x10(%rbp),%r14
mov    -0x18(%rbp),%r15
mov    $0x1,%eax
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
mov    %r15,-0x38(%rbp)
mov    %r8,%rdx
mov    %rsi,%r15
mov    %r9,%rsi
callq  8a00 <TIFFErrorExt@plt>
movq   $0x0,(%r15)
xor    %eax,%eax
mov    -0x38(%rbp),%r15
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%r13),%rdi
lea    0x41544(%rip),%rdx        # 51906 <module.43+0x34>
lea    0x41509(%rip),%rsi        # 518d2 <module.43>
callq  8a00 <TIFFErrorExt@plt>
mov    -0x10(%rbp),%r13
mov    -0x18(%rbp),%r14
xor    %eax,%eax
mov    -0x20(%rbp),%r15
leaveq 
retq   
mov    0x3c0(%r15),%rax
mov    0x3b8(%r15),%rdi
lea    -0x40(%rbp),%rsi
mov    $0x8,%edx
callq  *%rax
cmp    $0x8,%rax
jne    101dd <TIFFAdvanceDirectory+0x1cd>
mov    0x10(%r15),%eax
and    $0x80,%eax
test   %eax,%eax
je     10417 <TIFFAdvanceDirectory+0x407>
lea    -0x40(%rbp),%rdi
callq  8730 <TIFFSwabLong8@plt>
mov    -0x40(%rbp),%rcx
cmp    $0xffff,%rcx
ja     10560 <TIFFAdvanceDirectory+0x550>
mov    -0x38(%rbp),%r8
test   %r8,%r8
jne    10584 <TIFFAdvanceDirectory+0x574>
mov    0x3d0(%r15),%rax
mov    0x3b8(%r15),%rdi
movzwl %cx,%ecx
lea    (%rcx,%rcx,4),%ecx
shl    $0x2,%ecx
movslq %ecx,%rsi
mov    $0x1,%edx
callq  *%rax
jmpq   105b3 <TIFFAdvanceDirectory+0x5a3>
mov    0x3d0(%r15),%rax
mov    0x3b8(%r15),%rdi
movzwl -0x46(%rbp),%ecx
lea    (%rcx,%rcx,2),%ecx
shl    $0x2,%ecx
movslq %ecx,%rsi
mov    $0x1,%edx
mov    %r14,-0x38(%rbp)
mov    %r8,%r14
callq  *%rax
mov    %rax,(%r14)
mov    -0x38(%rbp),%r14
mov    0x3c0(%r15),%rax
mov    0x3b8(%r15),%rdi
lea    -0x44(%rbp),%rsi
mov    $0x4,%edx
callq  *%rax
cmp    $0x4,%rax
je     105f9 <TIFFAdvanceDirectory+0x5e9>
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
mov    (%r15),%rcx
lea    0x41411(%rip),%rsi        # 518d2 <module.43>
lea    0x414a6(%rip),%rdx        # 5196e <module.43+0x9c>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x30(%rbp),%r15
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
mov    %r8,%rdx
mov    %r9,%rsi
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%r14),%rdi
lea    0x41427(%rip),%rdx        # 51924 <module.43+0x52>
lea    0x413ce(%rip),%rsi        # 518d2 <module.43>
callq  8a00 <TIFFErrorExt@plt>
mov    -0x8(%rbp),%r13
mov    -0x10(%rbp),%r14
xor    %eax,%eax
mov    -0x18(%rbp),%r15
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%r14),%rdi
lea    0x413dd(%rip),%rdx        # 51906 <module.43+0x34>
lea    0x413a2(%rip),%rsi        # 518d2 <module.43>
callq  8a00 <TIFFErrorExt@plt>
mov    -0x8(%rbp),%r13
mov    -0x10(%rbp),%r14
xor    %eax,%eax
mov    -0x18(%rbp),%r15
leaveq 
retq   
mov    %r13,%rdi
callq  8730 <TIFFSwabLong8@plt>
mov    -0x8(%rbp),%r13
mov    -0x10(%rbp),%r14
mov    -0x18(%rbp),%r15
mov    $0x1,%eax
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
lea    0x41362(%rip),%rsi        # 518d2 <module.43>
lea    0x41370(%rip),%rdx        # 518e7 <module.43+0x15>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x28(%rbp),%r15
leaveq 
retq   
mov    0x3d0(%r15),%rax
mov    0x3b8(%r15),%rdi
movzwl %cx,%ecx
lea    (%rcx,%rcx,4),%ecx
shl    $0x2,%ecx
movslq %ecx,%rsi
mov    $0x1,%edx
mov    %r14,-0x38(%rbp)
mov    %r8,%r14
callq  *%rax
mov    %rax,(%r14)
mov    -0x38(%rbp),%r14
mov    0x3c0(%r15),%rax
mov    0x3b8(%r15),%rdi
mov    -0x30(%rbp),%rsi
mov    $0x8,%edx
callq  *%rax
cmp    $0x8,%rax
je     10624 <TIFFAdvanceDirectory+0x614>
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
mov    (%r15),%rcx
lea    0x412ed(%rip),%rsi        # 518d2 <module.43>
lea    0x41382(%rip),%rdx        # 5196e <module.43+0x9c>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x28(%rbp),%r15
leaveq 
retq   
mov    0x10(%r15),%eax
and    $0x80,%eax
test   %eax,%eax
je     1060f <TIFFAdvanceDirectory+0x5ff>
lea    -0x44(%rbp),%rdi
callq  8480 <TIFFSwabLong@plt>
mov    -0x44(%rbp),%eax
mov    -0x28(%rbp),%rcx
mov    %rax,(%rcx)
mov    -0x30(%rbp),%r15
mov    $0x1,%eax
leaveq 
retq   
mov    0x10(%r15),%eax
and    $0x80,%eax
test   %eax,%eax
jne    1063c <TIFFAdvanceDirectory+0x62c>
mov    -0x28(%rbp),%r15
mov    $0x1,%eax
leaveq 
retq   
mov    -0x30(%rbp),%rdi
callq  8730 <TIFFSwabLong8@plt>
mov    -0x28(%rbp),%r15
mov    $0x1,%eax
leaveq 
retq   

0000000000010650 <TIFFFindField>:
push   %rbp
mov    %rsp,%rbp
sub    $0x40,%rsp
lea    -0x40(%rbp),%r8
mov    %r8,-0x10(%rbp)
movq   $0x0,(%r8)
movq   $0x0,0x8(%r8)
movq   $0x0,0x10(%r8)
movq   $0x0,0x18(%r8)
movq   $0x0,0x20(%r8)
movq   $0x0,0x28(%r8)
mov    0x400(%rdi),%rax
test   %rax,%rax
jne    106ab <TIFFFindField+0x5b>
xor    %eax,%eax
mov    0x3f0(%rdi),%rcx
test   %rcx,%rcx
jne    106c3 <TIFFFindField+0x73>
leaveq 
retq   
mov    (%rax),%ecx
cmp    %esi,%ecx
jne    1069b <TIFFFindField+0x4b>
test   %edx,%edx
je     106ba <TIFFFindField+0x6a>
cmp    0x8(%rax),%edx
jne    1069b <TIFFFindField+0x4b>
mov    0x400(%rdi),%rax
leaveq 
retq   
mov    %esi,(%r8)
mov    %edx,0x8(%r8)
lea    -0x10(%rbp),%rax
mov    0x3f0(%rdi),%rsi
mov    0x3f8(%rdi),%rdx
mov    $0x8,%ecx
lea    0xc68(%rip),%r8        # 11350 <tagCompare>
mov    %r15,-0x8(%rbp)
mov    %rdi,%r15
mov    %rax,%rdi
callq  8c20 <bsearch@plt>
test   %rax,%rax
jne    10700 <TIFFFindField+0xb0>
xor    %eax,%eax
jmp    10703 <TIFFFindField+0xb3>
mov    (%rax),%rax
mov    %rax,0x400(%r15)
mov    -0x8(%rbp),%r15
leaveq 
retq   

0000000000010710 <TIFFFieldWithTag>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %rdi,-0x10(%rbp)
mov    %rsi,-0x8(%rbp)
xor    %edx,%edx
callq  8680 <TIFFFindField@plt>
test   %rax,%rax
je     1072e <TIFFFieldWithTag+0x1e>
leaveq 
retq   
xor    %r8d,%r8d
mov    -0x10(%rbp),%rcx
mov    0x3b8(%rcx),%rdi
lea    0x418b5(%rip),%rsi        # 51ff8 <module.43+0x726>
lea    0x418bf(%rip),%rdx        # 52009 <module.43+0x737>
mov    %r15,-0x10(%rbp)
mov    %rax,%r15
mov    %r8,%rax
mov    -0x8(%rbp),%rcx
callq  8a00 <TIFFErrorExt@plt>
mov    %r15,%rax
mov    -0x10(%rbp),%r15
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)

0000000000010770 <TIFFFieldWithName>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %rdi,-0x10(%rbp)
mov    %rsi,-0x8(%rbp)
xor    %edx,%edx
callq  113d0 <_TIFFFindFieldByName>
test   %rax,%rax
je     1078e <TIFFFieldWithName+0x1e>
leaveq 
retq   
xor    %r8d,%r8d
mov    -0x10(%rbp),%rcx
mov    0x3b8(%rcx),%rdi
lea    0x41887(%rip),%rsi        # 5202a <module.43+0x758>
lea    0x41892(%rip),%rdx        # 5203c <module.43+0x76a>
mov    %r15,-0x10(%rbp)
mov    %rax,%r15
mov    %r8,%rax
mov    -0x8(%rbp),%rcx
callq  8a00 <TIFFErrorExt@plt>
mov    %r15,%rax
mov    -0x10(%rbp),%r15
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)

00000000000107d0 <TIFFFieldTag>:
push   %rbp
mov    %rsp,%rbp
mov    (%rdi),%eax
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

00000000000107e0 <TIFFFieldName>:
push   %rbp
mov    %rsp,%rbp
mov    0x20(%rdi),%rax
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

00000000000107f0 <TIFFFieldDataType>:
push   %rbp
mov    %rsp,%rbp
mov    0x8(%rdi),%eax
leaveq 
retq   
nopl   0x0(%rax)

0000000000010800 <TIFFFieldPassCount>:
push   %rbp
mov    %rsp,%rbp
movzbl 0x1b(%rdi),%eax
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

0000000000010810 <TIFFFieldReadCount>:
push   %rbp
mov    %rsp,%rbp
movswq 0x4(%rdi),%rax
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

0000000000010820 <TIFFFieldWriteCount>:
push   %rbp
mov    %rsp,%rbp
movswq 0x6(%rdi),%rax
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

0000000000010830 <TIFFDataWidth>:
push   %rbp
mov    %rsp,%rbp
xor    %eax,%eax
cmp    $0x12,%edi
jbe    1083d <TIFFDataWidth+0xd>
leaveq 
retq   
lea    0x41164(%rip),%rcx        # 519a8 <module.43+0xd6>
movslq (%rcx,%rdi,4),%rdx
add    %rdx,%rcx
jmpq   *%rcx
mov    $0x1,%eax
leaveq 
retq   
mov    $0x2,%eax
leaveq 
retq   
mov    $0x4,%eax
leaveq 
retq   
mov    $0x8,%eax
leaveq 
retq   
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

0000000000010870 <TIFFMergeFieldInfo>:
push   %rbp
mov    %rsp,%rbp
sub    $0x40,%rsp
mov    %r15,-0x28(%rbp)
mov    %rdx,-0x40(%rbp)
mov    %rsi,-0x38(%rbp)
lea    0x417e3(%rip),%r8        # 5206e <reason.15>
mov    $0x18,%edx
mov    0x430(%rdi),%rax
test   %rax,%rax
jne    108b1 <TIFFMergeFieldInfo+0x41>
mov    %r8,%rcx
mov    $0x1,%esi
mov    %rdi,%r15
callq  8750 <_TIFFCheckMalloc@plt>
mov    %r15,%r8
jmp    108cd <TIFFMergeFieldInfo+0x5d>
mov    0x428(%rdi),%rsi
add    $0x1,%rax
mov    %rdx,%rcx
mov    %rax,%rdx
mov    %rdi,%r15
callq  8d00 <_TIFFCheckRealloc@plt>
mov    %r15,%r8
mov    %rax,0x428(%r8)
lea    0x41780(%rip),%rsi        # 5205b <module.14>
lea    0x4179d(%rip),%rdx        # 5207f <reason.15+0x11>
mov    $0xffffffffffffffff,%r15
test   %rax,%rax
jne    10905 <TIFFMergeFieldInfo+0x95>
xor    %eax,%eax
mov    0x3b8(%r8),%rdi
callq  8a00 <TIFFErrorExt@plt>
mov    %r15,%rax
mov    -0x28(%rbp),%r15
leaveq 
retq   
mov    0x430(%r8),%rdx
lea    0x1(%rdx),%rcx
mov    %rcx,0x430(%r8)
lea    (%rdx,%rdx,2),%r9
movl   $0x2,(%rax,%r9,8)
mov    0x428(%r8),%rax
mov    -0x40(%rbp),%r15
mov    %r15d,0x4(%rax,%r9,8)
mov    0x428(%r8),%rax
mov    %r15d,0x8(%rax,%r9,8)
mov    %r15d,%esi
mov    $0x30,%edx
mov    0x428(%r8),%rax
mov    %r8,%rdi
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %rax,%r12
mov    %r8,%r13
mov    %r9,%r14
lea    0x41701(%rip),%rcx        # 5206e <reason.15>
callq  8750 <_TIFFCheckMalloc@plt>
mov    %rax,0x10(%r12,%r14,8)
mov    0x428(%r13),%rax
mov    0x10(%rax,%r14,8),%rax
test   %rax,%rax
je     109a3 <TIFFMergeFieldInfo+0x133>
xor    %r12d,%r12d
mov    %r13,-0x30(%rbp)
mov    %r14,-0x40(%rbp)
mov    %rbx,-0x8(%rbp)
mov    %rax,%r13
mov    -0x38(%rbp),%rbx
jmpq   10a7a <TIFFMergeFieldInfo+0x20a>
xor    %eax,%eax
mov    0x3b8(%r13),%rdi
lea    0x416cc(%rip),%rdx        # 5207f <reason.15+0x11>
lea    0x416a1(%rip),%rsi        # 5205b <module.14>
callq  8a00 <TIFFErrorExt@plt>
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    $0xffffffffffffffff,%rax
mov    -0x28(%rbp),%r15
leaveq 
retq   
mov    %r12d,%eax
lea    (%rax,%rax,2),%r14
mov    (%rbx,%r14,8),%eax
mov    %eax,0x0(%r13)
movswq 0x4(%rbx,%r14,8),%rax
mov    %ax,0x4(%r13)
movswq 0x6(%rbx,%r14,8),%rax
mov    %ax,0x6(%r13)
mov    0x8(%rbx,%r14,8),%eax
mov    %eax,0x8(%r13)
movl   $0x0,0xc(%r13)
mov    0x8(%rbx,%r14,8),%edi
movswq 0x4(%rbx,%r14,8),%rsi
movzbl 0xf(%rbx,%r14,8),%edx
callq  11500 <_TIFFSetGetType>
mov    %eax,0x10(%r13)
mov    0x8(%rbx,%r14,8),%edi
movswq 0x4(%rbx,%r14,8),%rsi
movzbl 0xf(%rbx,%r14,8),%edx
callq  11500 <_TIFFSetGetType>
mov    %eax,0x14(%r13)
movzwl 0xc(%rbx,%r14,8),%eax
mov    %ax,0x18(%r13)
movzbl 0xe(%rbx,%r14,8),%eax
mov    %al,0x1a(%r13)
movzbl 0xf(%rbx,%r14,8),%eax
mov    %al,0x1b(%r13)
mov    0x10(%rbx,%r14,8),%rax
mov    %rax,0x20(%r13)
movq   $0x0,0x28(%r13)
add    $0x1,%r12d
add    $0x30,%r13
cmp    %r12d,%r15d
ja     109d8 <TIFFMergeFieldInfo+0x168>
mov    -0x30(%rbp),%rbx
mov    0x428(%rbx),%rax
mov    -0x40(%rbp),%rcx
mov    0x10(%rax,%rcx,8),%rsi
mov    %r15,%rdx
mov    %rbx,%rdi
callq  8520 <_TIFFMergeFields@plt>
test   %eax,%eax
je     10abe <TIFFMergeFieldInfo+0x24e>
mov    -0x8(%rbp),%rbx
xor    %eax,%eax
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x28(%rbp),%r15
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rbx),%rdi
lea    0x415d1(%rip),%rdx        # 5209f <reason.15+0x31>
lea    0x41586(%rip),%rsi        # 5205b <module.14>
callq  8a00 <TIFFErrorExt@plt>
mov    -0x8(%rbp),%rbx
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    $0xffffffffffffffff,%rax
mov    -0x28(%rbp),%r15
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

0000000000010b00 <_TIFFGetFields>:
push   %rbp
mov    %rsp,%rbp
lea    0x6652d(%rip),%rax        # 77038 <tiffFieldArray>
leaveq 
retq   
nopl   (%rax)

0000000000010b10 <_TIFFGetExifFields>:
push   %rbp
mov    %rsp,%rbp
lea    0x66535(%rip),%rax        # 77050 <exifFieldArray>
leaveq 
retq   
nopl   (%rax)

0000000000010b20 <_TIFFSetupFields>:
push   %rbp
mov    %rsp,%rbp
sub    $0x40,%rsp
mov    %rdi,-0x8(%rbp)
mov    0x3f0(%rdi),%rax
test   %rax,%rax
jne    10b59 <_TIFFSetupFields+0x39>
mov    %rbx,%rax
mov    %rdi,%rbx
mov    %rsi,%rcx
mov    0x10(%rcx),%rsi
mov    0x8(%rcx),%edx
mov    %rbx,%rdi
mov    %rax,%rbx
callq  8520 <_TIFFMergeFields@plt>
test   %eax,%eax
je     10b70 <_TIFFSetupFields+0x50>
leaveq 
retq   
mov    0x3f8(%rdi),%rax
test   %rax,%rax
jne    10b92 <_TIFFSetupFields+0x72>
mov    %rbx,%rax
mov    %rdi,%rbx
mov    %rsi,%rcx
jmp    10b41 <_TIFFSetupFields+0x21>
xor    %eax,%eax
mov    -0x8(%rbp),%rcx
mov    0x3b8(%rcx),%rdi
lea    0x4153d(%rip),%rsi        # 520c1 <reason.15+0x53>
lea    0x41514(%rip),%rdx        # 5209f <reason.15+0x31>
callq  8a00 <TIFFErrorExt@plt>
leaveq 
retq   
lea    0x41523(%rip),%rcx        # 520bc <reason.15+0x4e>
mov    $0x4,%edx
xor    %eax,%eax
mov    %rsi,-0x38(%rbp)
mov    %rbx,-0x10(%rbp)
mov    %r12,-0x18(%rbp)
mov    %r13,-0x20(%rbp)
mov    %r14,-0x28(%rbp)
mov    %r15,-0x30(%rbp)
mov    %rdi,%rbx
mov    %rax,%r12
mov    %rcx,%r13
jmp    10bf8 <_TIFFSetupFields+0xd8>
mov    0x3f0(%rbx),%rcx
mov    %r12d,%eax
mov    (%rcx,%rax,8),%r14
movzwl 0x18(%r14),%eax
cmp    $0x41,%ax
jne    10bf4 <_TIFFSetupFields+0xd4>
mov    0x20(%r14),%r15
mov    %r13,%rdi
mov    %r15,%rsi
callq  8120 <strncmp@plt>
test   %eax,%eax
je     10c46 <_TIFFSetupFields+0x126>
mov    $0x4,%edx
add    $0x1,%r12d
mov    0x3f8(%rbx),%rcx
mov    %r12d,%eax
cmp    %rax,%rcx
ja     10bc3 <_TIFFSetupFields+0xa3>
mov    0x3f0(%rbx),%rdi
callq  8bb0 <_TIFFfree@plt>
movq   $0x0,0x3f0(%rbx)
movq   $0x0,0x3f8(%rbx)
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
mov    -0x10(%rbp),%rax
mov    -0x38(%rbp),%rcx
jmpq   10b41 <_TIFFSetupFields+0x21>
mov    %r15,%rdi
callq  8bb0 <_TIFFfree@plt>
mov    %r14,%rdi
callq  8bb0 <_TIFFfree@plt>
mov    $0x4,%edx
jmp    10bf4 <_TIFFSetupFields+0xd4>
nopl   (%rax)

0000000000010c60 <_TIFFPrintFieldInfo>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %rdi,%r12
mov    %rsi,%r13
xor    %ebx,%ebx
lea    0x41447(%rip),%rsi        # 520d2 <reason.15+0x64>
mov    (%r12),%rdx
mov    %rbx,%rax
mov    %r13,%rdi
callq  86f0 <fprintf@plt>
lea    0x41437(%rip),%rsi        # 520d8 <reason.15+0x6a>
lea    0x41462(%rip),%r14        # 5210a <reason.15+0x9c>
lea    0x41460(%rip),%r15        # 5210f <reason.15+0xa1>
jmp    10cef <_TIFFPrintFieldInfo+0x8f>
mov    %r14,%rax
sub    $0x20,%rsp
mov    0x20(%rdx),%rdx
mov    %r11d,(%rsp)
mov    %r10d,0x8(%rsp)
mov    %rdi,0x10(%rsp)
mov    %rax,0x18(%rsp)
mov    %rdx,0x20(%rsp)
xor    %eax,%eax
mov    %r13,%rdi
mov    %rbx,%rdx
callq  86f0 <fprintf@plt>
add    $0x20,%rsp
add    $0x1,%ebx
lea    0x413e9(%rip),%rsi        # 520d8 <reason.15+0x6a>
mov    0x3f8(%r12),%rcx
mov    %ebx,%eax
cmp    %rax,%rcx
ja     10d14 <_TIFFPrintFieldInfo+0xb4>
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
leaveq 
retq   
mov    0x3f0(%r12),%rcx
mov    %ebx,%eax
mov    (%rcx,%rax,8),%rdx
mov    (%rdx),%ecx
movswq 0x4(%rdx),%r8
movswq 0x6(%rdx),%r9
mov    0x8(%rdx),%r11d
movzwl 0x18(%rdx),%r10d
movzbl 0x1a(%rdx),%eax
test   %al,%al
jne    10d44 <_TIFFPrintFieldInfo+0xe4>
mov    %r15,%rdi
jmp    10d47 <_TIFFPrintFieldInfo+0xe7>
mov    %r14,%rdi
movzbl 0x1b(%rdx),%eax
test   %al,%al
jne    10cb1 <_TIFFPrintFieldInfo+0x51>
mov    %r15,%rax
jmpq   10cb4 <_TIFFPrintFieldInfo+0x54>
nopl   0x0(%rax,%rax,1)

0000000000010d60 <_TIFFMergeFields>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rsi,-0x30(%rbp)
movq   $0x0,0x400(%rdi)
mov    %edx,%esi
mov    $0x8,%ecx
lea    0x41399(%rip),%r8        # 52126 <reason.25>
mov    0x3f0(%rdi),%r9
test   %r9,%r9
jne    10dda <_TIFFMergeFields+0x7a>
mov    %r13,%r14
mov    %r12,%r13
mov    %rbx,%r15
mov    %rdx,%rbx
mov    %rcx,%rdx
mov    %r8,%rcx
mov    %rdi,%r12
callq  8750 <_TIFFCheckMalloc@plt>
mov    %rax,0x3f0(%r12)
xor    %edx,%edx
test   %rax,%rax
je     10e05 <_TIFFMergeFields+0xa5>
mov    %r15,-0x8(%rbp)
mov    %r13,-0x10(%rbp)
mov    %r14,-0x18(%rbp)
mov    -0x30(%rbp),%r13
mov    %rdx,%r14
jmpq   10e89 <_TIFFMergeFields+0x129>
mov    0x3f8(%rdi),%rax
test   %rax,%rax
je     10d99 <_TIFFMergeFields+0x39>
add    %rax,%rsi
mov    %r13,%r14
mov    %r12,%r13
mov    %rbx,%r15
mov    %rdx,%rbx
mov    %rsi,%rdx
mov    %r9,%rsi
mov    %rdi,%r12
callq  8d00 <_TIFFCheckRealloc@plt>
jmp    10db3 <_TIFFMergeFields+0x53>
xor    %eax,%eax
mov    0x3b8(%r12),%rdi
mov    %rdx,%rbx
lea    0x412fc(%rip),%rsi        # 52115 <module.24>
lea    0x4125f(%rip),%rdx        # 5207f <reason.15+0x11>
callq  8a00 <TIFFErrorExt@plt>
mov    %rbx,%rax
mov    %r15,%rbx
mov    %r13,%r12
mov    %r14,%r13
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
leaveq 
retq   
mov    %r14d,%eax
lea    (%rax,%rax,2),%rax
shl    $0x4,%rax
lea    0x0(%r13,%rax,1),%r15
mov    (%r15),%esi
mov    %r12,%rdi
callq  8680 <TIFFFindField@plt>
test   %rax,%rax
jne    10e83 <_TIFFMergeFields+0x123>
mov    0x3f0(%r12),%rax
mov    0x3f8(%r12),%rcx
mov    %r15,(%rax,%rcx,8)
mov    0x3f8(%r12),%rax
add    $0x1,%rax
mov    %rax,0x3f8(%r12)
add    $0x1,%r14d
xor    %edx,%edx
cmp    %r14d,%ebx
ja     10e3b <_TIFFMergeFields+0xdb>
mov    0x3f0(%r12),%rdi
mov    0x3f8(%r12),%rsi
lea    0x4ab(%rip),%rcx        # 11350 <tagCompare>
mov    $0x8,%edx
callq  81e0 <qsort@plt>
mov    %rbx,%rax
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

0000000000010ed0 <_TIFFFindOrRegisterField>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %rdi,-0x8(%rbp)
mov    %rsi,-0x10(%rbp)
mov    %rdx,-0x18(%rbp)
callq  8680 <TIFFFindField@plt>
test   %rax,%rax
je     10ef0 <_TIFFFindOrRegisterField+0x20>
leaveq 
retq   
mov    -0x8(%rbp),%rax
mov    %rax,%rdi
mov    %r15,-0x8(%rbp)
mov    %rax,%r15
mov    -0x18(%rbp),%rdx
mov    -0x10(%rbp),%rsi
callq  8590 <_TIFFCreateAnonField@plt>
mov    %r15,%rdi
mov    %rax,%r15
mov    $0x1,%edx
mov    %r15,%rsi
callq  8520 <_TIFFMergeFields@plt>
test   %eax,%eax
jne    10f2a <_TIFFFindOrRegisterField+0x5a>
xor    %eax,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
mov    %r15,%rax
mov    -0x8(%rbp),%r15
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

0000000000010f40 <_TIFFCreateAnonField>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %rsi,-0x10(%rbp)
mov    %rdx,-0x18(%rbp)
mov    $0x30,%edi
callq  8440 <_TIFFmalloc@plt>
test   %rax,%rax
jne    10f63 <_TIFFCreateAnonField+0x23>
xor    %eax,%eax
leaveq 
retq   
mov    %rax,%rdi
xor    %esi,%esi
mov    %r15,-0x8(%rbp)
mov    %rax,%r15
mov    $0x30,%edx
callq  88e0 <_TIFFmemset@plt>
mov    -0x10(%rbp),%rax
mov    %eax,(%r15)
movw   $0xfffd,0x4(%r15)
movw   $0xfffd,0x6(%r15)
mov    -0x18(%rbp),%rax
mov    %eax,0x8(%r15)
movl   $0x0,0xc(%r15)
add    $0xffffffff,%eax
cmp    $0x11,%eax
ja     10fc8 <_TIFFCreateAnonField+0x88>
lea    0x40a47(%rip),%rcx        # 519f4 <module.43+0x122>
movslq (%rcx,%rax,4),%rax
add    %rcx,%rax
jmpq   *%rax
movl   $0x2f,0x10(%r15)
movl   $0x2f,0x14(%r15)
jmp    10fd8 <_TIFFCreateAnonField+0x98>
movl   $0x0,0x10(%r15)
movl   $0x0,0x14(%r15)
movw   $0x41,0x18(%r15)
movb   $0x1,0x1a(%r15)
movb   $0x1,0x1b(%r15)
mov    $0x20,%edi
callq  8440 <_TIFFmalloc@plt>
mov    %rax,0x20(%r15)
test   %rax,%rax
je     1110c <_TIFFCreateAnonField+0x1cc>
mov    %rax,%rdi
movq   $0x0,0x28(%r15)
xor    %eax,%eax
lea    0x41123(%rip),%rdx        # 52137 <reason.25+0x11>
mov    $0x20,%esi
mov    -0x10(%rbp),%rcx
callq  8430 <snprintf@plt>
mov    %r15,%rax
mov    -0x8(%rbp),%r15
leaveq 
retq   
movl   $0x28,0x10(%r15)
movl   $0x28,0x14(%r15)
jmp    10fd8 <_TIFFCreateAnonField+0x98>
movl   $0x27,0x10(%r15)
movl   $0x27,0x14(%r15)
jmp    10fd8 <_TIFFCreateAnonField+0x98>
movl   $0x2a,0x10(%r15)
movl   $0x2a,0x14(%r15)
jmpq   10fd8 <_TIFFCreateAnonField+0x98>
movl   $0x2c,0x10(%r15)
movl   $0x2c,0x14(%r15)
jmpq   10fd8 <_TIFFCreateAnonField+0x98>
movl   $0x30,0x10(%r15)
movl   $0x30,0x14(%r15)
jmpq   10fd8 <_TIFFCreateAnonField+0x98>
movl   $0x29,0x10(%r15)
movl   $0x29,0x14(%r15)
jmpq   10fd8 <_TIFFCreateAnonField+0x98>
movl   $0x2b,0x10(%r15)
movl   $0x2b,0x14(%r15)
jmpq   10fd8 <_TIFFCreateAnonField+0x98>
movl   $0x2d,0x10(%r15)
movl   $0x2d,0x14(%r15)
jmpq   10fd8 <_TIFFCreateAnonField+0x98>
movl   $0x31,0x10(%r15)
movl   $0x31,0x14(%r15)
jmpq   10fd8 <_TIFFCreateAnonField+0x98>
movl   $0x32,0x10(%r15)
movl   $0x32,0x14(%r15)
jmpq   10fd8 <_TIFFCreateAnonField+0x98>
movl   $0x2e,0x10(%r15)
movl   $0x2e,0x14(%r15)
jmpq   10fd8 <_TIFFCreateAnonField+0x98>
mov    %r15,%rdi
callq  8bb0 <_TIFFfree@plt>
mov    -0x8(%rbp),%r15
xor    %eax,%eax
leaveq 
retq   
nopl   0x0(%rax)

0000000000011120 <_TIFFCheckFieldIsValidForCodec>:
push   %rbp
mov    %rsp,%rbp
mov    $0x1,%eax
lea    -0x124(%rsi),%r8d
cmp    $0xe5,%r8d
jbe    1113b <_TIFFCheckFieldIsValidForCodec+0x1b>
leaveq 
retq   
lea    0x408fa(%rip),%rdx        # 51a3c <module.43+0x16a>
movslq (%rdx,%r8,4),%rcx
add    %rdx,%rcx
jmpq   *%rcx
leaveq 
retq   
xor    %ecx,%ecx
movzwl 0x78(%rdi),%edi
cmp    $0x6,%di
jbe    1117a <_TIFFCheckFieldIsValidForCodec+0x5a>
cmp    $0x808c,%di
jbe    11197 <_TIFFCheckFieldIsValidForCodec+0x77>
cmp    $0x80b1,%di
jbe    111af <_TIFFCheckFieldIsValidForCodec+0x8f>
cmp    $0x80b2,%di
je     111bb <_TIFFCheckFieldIsValidForCodec+0x9b>
cmp    $0x886d,%di
je     111c5 <_TIFFCheckFieldIsValidForCodec+0xa5>
mov    %rcx,%rax
leaveq 
retq   
cmp    $0x3,%di
jbe    111cf <_TIFFCheckFieldIsValidForCodec+0xaf>
cmp    $0x4,%di
jbe    111e0 <_TIFFCheckFieldIsValidForCodec+0xc0>
cmp    $0x5,%di
je     111eb <_TIFFCheckFieldIsValidForCodec+0xcb>
cmp    $0x6,%di
je     111f5 <_TIFFCheckFieldIsValidForCodec+0xd5>
mov    %rcx,%rax
leaveq 
retq   
cmp    $0x7,%di
jbe    11205 <_TIFFCheckFieldIsValidForCodec+0xe5>
cmp    $0x8,%di
je     111bb <_TIFFCheckFieldIsValidForCodec+0x9b>
cmp    $0x8003,%di
je     11210 <_TIFFCheckFieldIsValidForCodec+0xf0>
mov    %rcx,%rax
leaveq 
retq   
cmp    $0x808d,%di
je     1121b <_TIFFCheckFieldIsValidForCodec+0xfb>
mov    %rcx,%rax
leaveq 
retq   
cmp    $0x13d,%esi
jne    11225 <_TIFFCheckFieldIsValidForCodec+0x105>
leaveq 
retq   
cmp    $0x13d,%esi
jne    1122a <_TIFFCheckFieldIsValidForCodec+0x10a>
leaveq 
retq   
cmp    $0x2,%di
je     11210 <_TIFFCheckFieldIsValidForCodec+0xf0>
cmp    $0x3,%di
je     11210 <_TIFFCheckFieldIsValidForCodec+0xf0>
mov    %rcx,%rax
leaveq 
retq   
cmp    $0x4,%di
je     11210 <_TIFFCheckFieldIsValidForCodec+0xf0>
mov    %rcx,%rax
leaveq 
retq   
cmp    $0x13d,%esi
jne    1122f <_TIFFCheckFieldIsValidForCodec+0x10f>
leaveq 
retq   
lea    -0x200(%rsi),%edx
cmp    $0x9,%edx
jbe    11234 <_TIFFCheckFieldIsValidForCodec+0x114>
mov    %rcx,%rax
leaveq 
retq   
cmp    $0x7,%di
je     11246 <_TIFFCheckFieldIsValidForCodec+0x126>
mov    %rcx,%rax
leaveq 
retq   
cmp    $0x24,%r8d
jbe    11250 <_TIFFCheckFieldIsValidForCodec+0x130>
mov    %rcx,%rax
leaveq 
retq   
cmp    $0x13d,%esi
jne    11262 <_TIFFCheckFieldIsValidForCodec+0x142>
leaveq 
retq   
mov    %rcx,%rax
leaveq 
retq   
mov    %rcx,%rax
leaveq 
retq   
mov    %rcx,%rax
leaveq 
retq   
lea    0x40b99(%rip),%rsi        # 51dd4 <module.43+0x502>
movslq (%rsi,%rdx,4),%rdx
add    %rsi,%rdx
jmpq   *%rdx
leaveq 
retq   
cmp    $0x15b,%esi
jne    1126c <_TIFFCheckFieldIsValidForCodec+0x14c>
leaveq 
retq   
lea    0x40ba5(%rip),%rdx        # 51dfc <module.43+0x52a>
movslq (%rdx,%r8,4),%rsi
add    %rsi,%rdx
jmpq   *%rdx
leaveq 
retq   
mov    %rcx,%rax
leaveq 
retq   
mov    %rcx,%rax
leaveq 
retq   
mov    %rcx,%rax
leaveq 
retq   
cmp    $0x3,%di
jne    11286 <_TIFFCheckFieldIsValidForCodec+0x166>
leaveq 
retq   
cmp    $0x4,%di
jne    1128b <_TIFFCheckFieldIsValidForCodec+0x16b>
leaveq 
retq   
mov    %rcx,%rax
leaveq 
retq   
mov    %rcx,%rax
leaveq 
retq   
mov    %rcx,%rax
leaveq 
retq   

0000000000011290 <_TIFFDataSize>:
push   %rbp
mov    %rsp,%rbp
xor    %eax,%eax
lea    -0x1(%rdi),%ecx
cmp    $0x11,%ecx
jbe    112a0 <_TIFFDataSize+0x10>
leaveq 
retq   
lea    0x40be9(%rip),%rdx        # 51e90 <module.43+0x5be>
movslq (%rdx,%rcx,4),%rcx
add    %rdx,%rcx
jmpq   *%rcx
mov    $0x1,%eax
leaveq 
retq   
mov    $0x2,%eax
leaveq 
retq   
mov    $0x4,%eax
leaveq 
retq   
mov    $0x8,%eax
leaveq 
retq   
leaveq 
retq   
xchg   %ax,%ax

00000000000112d0 <td_lfind>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rcx,%rax
imul   (%rdx),%rax
lea    (%rsi,%rax,1),%r14
mov    %rsi,%rbx
mov    %r8,%r12
mov    %rcx,%r13
mov    %rdi,%r15
jmp    11315 <td_lfind+0x45>
mov    %r15,%rdi
mov    %rbx,%rsi
callq  *%r12
test   %eax,%eax
je     11332 <td_lfind+0x62>
add    %r13,%rbx
cmp    %r14,%rbx
jb     11305 <td_lfind+0x35>
xor    %eax,%eax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
mov    %rbx,%rax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

0000000000011350 <tagCompare>:
push   %rbp
mov    %rsp,%rbp
mov    (%rdi),%rcx
mov    (%rcx),%eax
mov    (%rsi),%rsi
mov    (%rsi),%edx
cmp    %eax,%edx
jne    1136d <tagCompare+0x1d>
mov    0x8(%rcx),%ecx
test   %ecx,%ecx
jne    11371 <tagCompare+0x21>
xor    %eax,%eax
leaveq 
retq   
sub    %edx,%eax
leaveq 
retq   
movslq 0x8(%rsi),%rax
sub    %ecx,%eax
leaveq 
retq   
nopl   0x0(%rax)

0000000000011380 <tagNameCompare>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x10(%rbp)
mov    (%rdi),%r15
mov    0x20(%r15),%rdi
mov    (%rsi),%rax
mov    %rax,-0x8(%rbp)
mov    0x20(%rax),%rsi
callq  8660 <strcmp@plt>
test   %eax,%eax
je     113ad <tagNameCompare+0x2d>
mov    -0x10(%rbp),%r15
leaveq 
retq   
mov    0x8(%r15),%ecx
test   %ecx,%ecx
jne    113bd <tagNameCompare+0x3d>
xor    %eax,%eax
mov    -0x10(%rbp),%r15
leaveq 
retq   
mov    -0x8(%rbp),%rax
movslq 0x8(%rax),%rax
sub    %ecx,%eax
mov    -0x10(%rbp),%r15
leaveq 
retq   
nopl   (%rax)

00000000000113d0 <_TIFFFindFieldByName>:
push   %rbp
mov    %rsp,%rbp
sub    $0x60,%rsp
lea    -0x58(%rbp),%rcx
mov    %rcx,-0x28(%rbp)
movq   $0x0,(%rcx)
movq   $0x0,0x8(%rcx)
movq   $0x0,0x10(%rcx)
movq   $0x0,0x18(%rcx)
movq   $0x0,0x20(%rcx)
movq   $0x0,0x28(%rcx)
mov    0x400(%rdi),%r8
test   %r8,%r8
jne    11434 <_TIFFFindFieldByName+0x64>
mov    %r15,%r9
mov    %rdi,%r15
xor    %eax,%eax
mov    0x3f0(%r15),%rdi
test   %rdi,%rdi
jne    1147c <_TIFFFindFieldByName+0xac>
mov    %r9,%r15
leaveq 
retq   
mov    0x20(%r8),%rax
mov    %rsi,%rcx
mov    %r13,-0x8(%rbp)
mov    %r14,-0x10(%rbp)
mov    %r15,-0x18(%rbp)
mov    %rsi,-0x20(%rbp)
mov    %rcx,%rsi
mov    %rdx,%r13
mov    %r8,%r14
mov    %rdi,%r15
mov    %rax,%rdi
callq  8660 <strcmp@plt>
test   %eax,%eax
je     114b3 <_TIFFFindFieldByName+0xe3>
mov    %r13,%rdx
lea    -0x58(%rbp),%rcx
mov    -0x20(%rbp),%rsi
mov    -0x18(%rbp),%r9
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
jmp    11421 <_TIFFFindFieldByName+0x51>
mov    %rsi,0x20(%rcx)
mov    %edx,0x8(%rcx)
lea    -0x28(%rbp),%rdi
mov    0x3f0(%r15),%rsi
lea    0x3f8(%r15),%rdx
mov    $0x8,%ecx
lea    -0x121(%rip),%r8        # 11380 <tagNameCompare>
mov    %r9,-0x20(%rbp)
callq  112d0 <td_lfind>
test   %rax,%rax
jne    114da <_TIFFFindFieldByName+0x10a>
xor    %eax,%eax
jmp    114dd <_TIFFFindFieldByName+0x10d>
test   %r13d,%r13d
je     114ea <_TIFFFindFieldByName+0x11a>
cmp    0x8(%r14),%r13d
je     114ea <_TIFFFindFieldByName+0x11a>
mov    %r13,%rdx
lea    -0x58(%rbp),%rcx
mov    -0x20(%rbp),%rsi
mov    -0x18(%rbp),%r9
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
jmpq   11421 <_TIFFFindFieldByName+0x51>
mov    (%rax),%rax
mov    %rax,0x400(%r15)
mov    -0x20(%rbp),%r15
leaveq 
retq   
mov    0x400(%r15),%rax
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
leaveq 
retq   
nop

0000000000011500 <_TIFFSetGetType>:
push   %rbp
mov    %rsp,%rbp
mov    $0x1,%ecx
cmp    $0x2,%edi
je     11529 <_TIFFSetGetType+0x29>
xor    %eax,%eax
cmp    $0x1,%si
je     11538 <_TIFFSetGetType+0x38>
test   %si,%si
jg     11546 <_TIFFSetGetType+0x46>
cmp    $0xffff,%si
je     11554 <_TIFFSetGetType+0x54>
cmp    $0xfffd,%si
je     11563 <_TIFFSetGetType+0x63>
leaveq 
retq   
cmp    $0xffff,%si
jne    1150e <_TIFFSetGetType+0xe>
test   %dl,%dl
jne    1150e <_TIFFSetGetType+0xe>
mov    %rcx,%rax
leaveq 
retq   
test   %dl,%dl
jne    11516 <_TIFFSetGetType+0x16>
lea    -0x1(%rdi),%esi
cmp    $0x11,%esi
jbe    1156a <_TIFFSetGetType+0x6a>
leaveq 
retq   
test   %dl,%dl
jne    1151b <_TIFFSetGetType+0x1b>
lea    -0x1(%rdi),%edx
cmp    $0x11,%edx
jbe    11581 <_TIFFSetGetType+0x81>
leaveq 
retq   
cmp    $0x1,%dl
jne    11521 <_TIFFSetGetType+0x21>
lea    -0x1(%rdi),%ecx
cmp    $0x11,%ecx
jbe    11598 <_TIFFSetGetType+0x98>
leaveq 
retq   
cmp    $0x1,%dl
je     115af <_TIFFSetGetType+0xaf>
leaveq 
retq   
lea    0x40967(%rip),%rdx        # 51ed8 <module.43+0x606>
movslq (%rdx,%rsi,4),%rsi
add    %rsi,%rdx
jmpq   *%rdx
mov    $0x2,%eax
leaveq 
retq   
lea    0x40998(%rip),%rcx        # 51f20 <module.43+0x64e>
movslq (%rcx,%rdx,4),%rdx
add    %rdx,%rcx
jmpq   *%rcx
mov    $0x10,%eax
leaveq 
retq   
lea    0x409c9(%rip),%rdx        # 51f68 <module.43+0x696>
movslq (%rdx,%rcx,4),%rcx
add    %rdx,%rcx
jmpq   *%rcx
mov    $0x1c,%eax
leaveq 
retq   
lea    -0x1(%rdi),%ecx
cmp    $0x11,%ecx
jbe    116a8 <_TIFFSetGetType+0x1a8>
leaveq 
retq   
mov    %rcx,%rax
leaveq 
retq   
mov    $0x4,%eax
leaveq 
retq   
mov    $0x6,%eax
leaveq 
retq   
mov    $0xa,%eax
leaveq 
retq   
mov    $0x3,%eax
leaveq 
retq   
mov    $0x5,%eax
leaveq 
retq   
mov    $0x7,%eax
leaveq 
retq   
mov    $0xb,%eax
leaveq 
retq   
mov    $0xc,%eax
leaveq 
retq   
mov    $0x8,%eax
leaveq 
retq   
mov    $0x9,%eax
leaveq 
retq   
leaveq 
retq   
mov    $0xf,%eax
leaveq 
retq   
mov    $0x12,%eax
leaveq 
retq   
mov    $0x14,%eax
leaveq 
retq   
mov    $0x18,%eax
leaveq 
retq   
mov    $0x11,%eax
leaveq 
retq   
mov    $0x13,%eax
leaveq 
retq   
mov    $0x15,%eax
leaveq 
retq   
mov    $0x19,%eax
leaveq 
retq   
mov    $0x1a,%eax
leaveq 
retq   
mov    $0x16,%eax
leaveq 
retq   
mov    $0x17,%eax
leaveq 
retq   
leaveq 
retq   
mov    $0x1b,%eax
leaveq 
retq   
mov    $0x1e,%eax
leaveq 
retq   
mov    $0x20,%eax
leaveq 
retq   
mov    $0x24,%eax
leaveq 
retq   
mov    $0x1d,%eax
leaveq 
retq   
mov    $0x1f,%eax
leaveq 
retq   
mov    $0x21,%eax
leaveq 
retq   
mov    $0x25,%eax
leaveq 
retq   
mov    $0x26,%eax
leaveq 
retq   
mov    $0x22,%eax
leaveq 
retq   
mov    $0x23,%eax
leaveq 
retq   
leaveq 
retq   
lea    0x40901(%rip),%rdx        # 51fb0 <module.43+0x6de>
movslq (%rdx,%rcx,4),%rcx
add    %rdx,%rcx
jmpq   *%rcx
mov    $0x28,%eax
leaveq 
retq   
mov    $0x27,%eax
leaveq 
retq   
mov    $0x2a,%eax
leaveq 
retq   
mov    $0x2c,%eax
leaveq 
retq   
mov    $0x30,%eax
leaveq 
retq   
mov    $0x29,%eax
leaveq 
retq   
mov    $0x2b,%eax
leaveq 
retq   
mov    $0x2d,%eax
leaveq 
retq   
mov    $0x31,%eax
leaveq 
retq   
mov    $0x32,%eax
leaveq 
retq   
mov    $0x2e,%eax
leaveq 
retq   
mov    $0x2f,%eax
leaveq 
retq   
leaveq 
retq   
xchg   %ax,%ax

0000000000011710 <TIFFReadDirectory>:
push   %rbp
mov    %rsp,%rbp
sub    $0x80,%rsp
mov    %rdi,-0x58(%rbp)
movl   $0xffffffff,-0x78(%rbp)
mov    0x20(%rdi),%rsi
mov    %rsi,0x18(%rdi)
xor    %eax,%eax
mov    %rax,-0x40(%rbp)
mov    %r15,%rax
mov    %r14,%r15
mov    %rbx,%r14
mov    %rax,%rbx
callq  183f0 <TIFFCheckDirOffset>
test   %eax,%eax
jne    11759 <TIFFReadDirectory+0x49>
mov    %r14,%rcx
mov    %r15,%r14
mov    %rbx,%r15
mov    %rcx,%rbx
xor    %eax,%eax
leaveq 
retq   
mov    -0x58(%rbp),%rax
mov    %rax,%rdi
mov    %rbx,-0x28(%rbp)
mov    %rax,%rbx
callq  *0x338(%rbx)
movzwl 0x280(%rbx),%eax
add    $0x1,%eax
mov    %ax,0x280(%rbx)
mov    0x20(%rbx),%rcx
lea    -0x80(%rbp),%rdx
lea    0x20(%rbx),%rax
mov    %rbx,%rdi
mov    %rcx,%rsi
mov    %r15,-0x20(%rbp)
mov    %rcx,%r15
mov    %rax,%rcx
callq  185f0 <TIFFFetchDirectory>
test   %ax,%ax
jne    117d2 <TIFFReadDirectory+0xc2>
xor    %eax,%eax
mov    0x3b8(%rbx),%rdi
mov    %r15,%rcx
lea    0x41d07(%rip),%rdx        # 534be <module.10+0x12>
lea    0x41cee(%rip),%rsi        # 534ac <module.10>
callq  8a00 <TIFFErrorExt@plt>
mov    %r14,%rbx
mov    -0x20(%rbp),%r14
mov    -0x28(%rbp),%r15
xor    %eax,%eax
leaveq 
retq   
mov    %rax,%r15
mov    -0x80(%rbp),%rsi
mov    %rbx,%rdi
mov    %r15,%rdx
callq  17f80 <TIFFReadDirectoryCheckOrder>
mov    -0x80(%rbp),%rdx
xor    %eax,%eax
jmp    1180f <TIFFReadDirectory+0xff>
movzwl (%rcx),%r9d
movzwl (%rdx),%r8d
cmp    %r8w,%r9w
jne    117ff <TIFFReadDirectory+0xef>
movw   $0x0,(%rcx)
add    $0x18,%rcx
add    $0x1,%esi
cmp    %si,%r15w
ja     117ec <TIFFReadDirectory+0xdc>
mov    %rdi,%rdx
cmp    %ax,%r15w
ja     11899 <TIFFReadDirectory+0x189>
mov    0x10(%rbx),%eax
and    $0xffefffbf,%eax
mov    %eax,0x10(%rbx)
mov    %rbx,%rdi
callq  8510 <TIFFFreeDirectory@plt>
mov    %rbx,%rdi
callq  88d0 <TIFFDefaultDirectory@plt>
mov    $0x1,%edx
mov    %rdx,-0x50(%rbp)
xor    %eax,%eax
mov    $0x11c,%esi
mov    %rbx,%rdi
callq  8290 <TIFFSetField@plt>
mov    -0x80(%rbp),%rsi
mov    $0x115,%ecx
mov    %rbx,%rdi
mov    %r15,%rdx
callq  17fd0 <TIFFReadDirectoryFindEntry>
test   %rax,%rax
je     118b5 <TIFFReadDirectory+0x1a5>
mov    %rbx,%rdi
mov    %rax,%rsi
xor    %edx,%edx
mov    %r15,-0x58(%rbp)
mov    %rax,%r15
callq  18e30 <TIFFFetchNormalTag>
test   %eax,%eax
jne    118ab <TIFFReadDirectory+0x19b>
xor    %r15d,%r15d
mov    -0x80(%rbp),%rdi
test   %rdi,%rdi
jne    118eb <TIFFReadDirectory+0x1db>
mov    %r15,%rax
mov    %r14,%rbx
mov    -0x20(%rbp),%r14
mov    -0x28(%rbp),%r15
leaveq 
retq   
lea    0x18(%rdx),%rdi
add    $0x1,%eax
mov    %rax,%rsi
mov    %rdi,%rcx
jmpq   11806 <TIFFReadDirectory+0xf6>
movw   $0x0,(%r15)
mov    -0x58(%rbp),%r15
mov    $0x103,%ecx
mov    -0x80(%rbp),%rsi
mov    %rbx,%rdi
mov    %r15,%rdx
callq  17fd0 <TIFFReadDirectoryFindEntry>
test   %rax,%rax
jne    11900 <TIFFReadDirectory+0x1f0>
xor    %eax,%eax
mov    %rbx,%rdi
mov    $0x1,%edx
mov    $0x103,%esi
callq  8290 <TIFFSetField@plt>
test   %eax,%eax
jne    11957 <TIFFReadDirectory+0x247>
xor    %r15d,%r15d
jmp    11880 <TIFFReadDirectory+0x170>
callq  8bb0 <_TIFFfree@plt>
mov    %r15,%rax
mov    %r14,%rbx
mov    -0x20(%rbp),%r14
mov    -0x28(%rbp),%r15
leaveq 
retq   
lea    -0x74(%rbp),%rdx
mov    %rbx,%rdi
mov    %rax,%rsi
mov    %r15,-0x58(%rbp)
mov    %rax,%r15
callq  13630 <TIFFReadDirEntryShort>
cmp    $0x1,%eax
jne    1192a <TIFFReadDirectory+0x21a>
mov    %rbx,%rdi
mov    %r15,%rsi
lea    -0x74(%rbp),%rdx
callq  17250 <TIFFReadDirEntryPersampleShort>
test   %eax,%eax
jne    11981 <TIFFReadDirectory+0x271>
xor    %eax,%eax
movzwl -0x74(%rbp),%edx
mov    %rbx,%rdi
mov    $0x103,%esi
callq  8290 <TIFFSetField@plt>
test   %eax,%eax
jne    1194d <TIFFReadDirectory+0x23d>
xor    %r15d,%r15d
jmpq   11880 <TIFFReadDirectory+0x170>
movw   $0x0,(%r15)
mov    -0x58(%rbp),%r15
mov    -0x80(%rbp),%rcx
lea    -0x78(%rbp),%rdx
mov    %r14,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %rcx,%r13
mov    $0x1,%esi
lea    0x41b32(%rip),%r12        # 534ac <module.10>
xor    %eax,%eax
mov    %rax,%r14
jmp    119e6 <TIFFReadDirectory+0x2d6>
mov    %rax,%rsi
mov    %rbx,%rdi
lea    0x41b57(%rip),%rcx        # 534e5 <module.10+0x39>
xor    %r15d,%r15d
mov    %r15,%r8
lea    0x41b11(%rip),%rdx        # 534ac <module.10>
callq  17da0 <TIFFReadDirEntryOutputErr>
jmpq   11880 <TIFFReadDirectory+0x170>
movzwl 0x0(%r13),%ecx
test   %cx,%cx
je     119cd <TIFFReadDirectory+0x2bd>
mov    %rcx,%rsi
mov    %rbx,%rdi
callq  18000 <TIFFReadDirectoryFindFieldInfo>
mov    -0x78(%rbp),%eax
cmp    $0xffffffff,%eax
je     11a32 <TIFFReadDirectory+0x322>
lea    -0x78(%rbp),%rdx
mov    $0x1,%esi
xor    %eax,%eax
movzwl 0x0(%r13),%r8d
test   %r8w,%r8w
jne    11ab3 <TIFFReadDirectory+0x3a3>
add    $0x18,%r13
add    $0x1,%r14d
xor    %eax,%eax
cmp    %r14w,%r15w
ja     119a5 <TIFFReadDirectory+0x295>
movzwl 0x78(%rbx),%ecx
cmp    $0x6,%cx
jne    11b63 <TIFFReadDirectory+0x453>
movzwl 0xaa(%rbx),%ecx
cmp    $0x2,%cx
jne    11b63 <TIFFReadDirectory+0x453>
mov    %r15,%r14
mov    %rax,%r15
mov    %rbx,%rdi
callq  8c70 <_TIFFFillStriles@plt>
test   %eax,%eax
jne    11b32 <TIFFReadDirectory+0x422>
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%r14
jmpq   11880 <TIFFReadDirectory+0x170>
xor    %eax,%eax
mov    0x3b8(%rbx),%rdi
movzwl 0x0(%r13),%ecx
mov    %rcx,%r8
mov    %r12,%rsi
lea    0x41aa4(%rip),%rdx        # 534f1 <module.10+0x45>
callq  85a0 <TIFFWarningExt@plt>
movzwl 0x0(%r13),%esi
movzwl 0x2(%r13),%edx
mov    %rbx,%rdi
callq  8590 <_TIFFCreateAnonField@plt>
mov    %rax,%rsi
mov    %rbx,%rdi
mov    $0x1,%edx
callq  8520 <_TIFFMergeFields@plt>
test   %eax,%eax
jne    11b97 <TIFFReadDirectory+0x487>
xor    %eax,%eax
mov    0x3b8(%rbx),%rdi
movzwl 0x0(%r13),%ecx
mov    %rcx,%r8
mov    %r12,%rsi
lea    0x41a87(%rip),%rdx        # 5351e <module.10+0x72>
callq  85a0 <TIFFWarningExt@plt>
movw   $0x0,0x0(%r13)
lea    -0x78(%rbp),%rdx
mov    $0x1,%esi
xor    %eax,%eax
jmpq   119cd <TIFFReadDirectory+0x2bd>
mov    0x3f0(%rbx),%rdi
mov    -0x78(%rbp),%ecx
mov    (%rdi,%rcx,8),%rcx
movzwl 0x18(%rcx),%edi
test   %di,%di
je     11bcd <TIFFReadDirectory+0x4bd>
cmp    $0x141,%r8w
jbe    11bd9 <TIFFReadDirectory+0x4c9>
cmp    $0x144,%r8w
jbe    11c0a <TIFFReadDirectory+0x4fa>
cmp    $0x80e4,%r8w
jbe    11c2f <TIFFReadDirectory+0x51f>
cmp    $0x80e5,%r8w
jne    11c5c <TIFFReadDirectory+0x54c>
mov    %rdx,%r12
mov    %rax,%rdx
mov    %rbx,%rdi
mov    %r13,%rsi
callq  18e30 <TIFFFetchNormalTag>
test   %eax,%eax
je     11c6d <TIFFReadDirectory+0x55d>
movw   $0x0,0x0(%r13)
mov    %r12,%rdx
mov    $0x1,%esi
lea    0x4197f(%rip),%r12        # 534ac <module.10>
jmpq   119dc <TIFFReadDirectory+0x2cc>
mov    %r15,%rax
mov    %r14,%r15
mov    %rax,%r14
mov    -0x80(%rbp),%r13
mov    $0x111,%ecx
mov    %rbx,%rdi
mov    %r13,%rsi
mov    %r15,%rdx
callq  17fd0 <TIFFReadDirectoryFindEntry>
test   %rax,%rax
jne    11c81 <TIFFReadDirectory+0x571>
mov    %r14,%rax
mov    $0x1,%esi
mov    0x38(%rbx),%rcx
and    $0x2,%rcx
test   %rcx,%rcx
jne    11c9c <TIFFReadDirectory+0x58c>
mov    %rbx,%rdi
mov    %rax,%r15
lea    0x41a59(%rip),%rsi        # 535da <module.10+0x12e>
callq  183c0 <MissingRequired>
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%r14
jmpq   11880 <TIFFReadDirectory+0x170>
movzwl 0x0(%r13),%esi
mov    %rbx,%rdi
lea    -0x78(%rbp),%r12
mov    %r12,%rdx
callq  18000 <TIFFReadDirectoryFindFieldInfo>
mov    -0x78(%rbp),%eax
cmp    $0xfffffffe,%eax
ja     11d14 <TIFFReadDirectory+0x604>
mov    %r12,%rdx
mov    $0x1,%esi
lea    0x418e6(%rip),%r12        # 534ac <module.10>
xor    %eax,%eax
jmpq   119cd <TIFFReadDirectory+0x2bd>
movw   $0x0,0x0(%r13)
jmpq   119dc <TIFFReadDirectory+0x2cc>
cmp    $0x115,%r8w
jbe    11d33 <TIFFReadDirectory+0x623>
cmp    $0x116,%r8w
jbe    11d59 <TIFFReadDirectory+0x649>
cmp    $0x117,%r8w
je     11c3b <TIFFReadDirectory+0x52b>
cmp    $0x11c,%r8w
je     11afe <TIFFReadDirectory+0x3ee>
jmpq   11d73 <TIFFReadDirectory+0x663>
cmp    $0x142,%r8w
jbe    11d67 <TIFFReadDirectory+0x657>
cmp    $0x143,%r8w
je     11afe <TIFFReadDirectory+0x3ee>
cmp    $0x144,%r8w
je     11c3b <TIFFReadDirectory+0x52b>
jmpq   11d73 <TIFFReadDirectory+0x663>
cmp    $0x145,%r8w
jne    11d9d <TIFFReadDirectory+0x68d>
mov    %rdi,%rcx
and    $0x1f,%ecx
mov    %rsi,%rax
shl    %cl,%rax
shr    $0x5,%edi
movslq %edi,%rcx
or     0x38(%rbx,%rcx,8),%rax
mov    %rax,0x38(%rbx,%rcx,8)
jmpq   119dc <TIFFReadDirectory+0x2cc>
cmp    $0x80e6,%r8w
je     11afe <TIFFReadDirectory+0x3ee>
jmpq   11d73 <TIFFReadDirectory+0x663>
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%r14
xor    %r15d,%r15d
jmpq   11880 <TIFFReadDirectory+0x170>
mov    0x8(%rax),%rax
cmp    $0x1,%rax
je     11dab <TIFFReadDirectory+0x69b>
mov    %r14,%rax
mov    $0x1,%esi
jmpq   11b63 <TIFFReadDirectory+0x453>
mov    0x38(%rbx),%rcx
and    $0x4,%rcx
test   %rcx,%rcx
jne    11dd4 <TIFFReadDirectory+0x6c4>
mov    %rsi,%r13
mov    %rax,%r14
mov    %rbx,%rdi
callq  8260 <TIFFNumberOfStrips@plt>
mov    %eax,0xe4(%rbx)
mov    0x58(%rbx),%eax
mov    %eax,0x64(%rbx)
mov    0x84(%rbx),%eax
mov    %eax,0x68(%rbx)
mov    0x60(%rbx),%eax
mov    %eax,0x6c(%rbx)
mov    0x10(%rbx),%ecx
and    $0xfffffbff,%ecx
mov    %r14,%r8
mov    %ecx,0x10(%rbx)
mov    0xe4(%rbx),%eax
test   %eax,%eax
jne    11df9 <TIFFReadDirectory+0x6e9>
mov    0x3b8(%rbx),%rdi
and    $0x400,%ecx
test   %ecx,%ecx
jne    11e4f <TIFFReadDirectory+0x73f>
lea    0x418fd(%rip),%rcx        # 5360c <module.10+0x160>
jmpq   11e56 <TIFFReadDirectory+0x746>
lea    0x41839(%rip),%rdi        # 53554 <module.10+0xa8>
lea    0x41844(%rip),%rsi        # 53566 <module.10+0xba>
mov    $0xe44,%edx
lea    0x41846(%rip),%rcx        # 53574 <module.10+0xc8>
callq  8490 <__assert_fail@plt>
cmp    $0x100,%r8w
jbe    11e7b <TIFFReadDirectory+0x76b>
cmp    $0x101,%r8w
je     11afe <TIFFReadDirectory+0x3ee>
cmp    $0x111,%r8w
je     11c3b <TIFFReadDirectory+0x52b>
jmp    11d73 <TIFFReadDirectory+0x663>
cmp    $0x116,%r8w
je     11afe <TIFFReadDirectory+0x3ee>
jmp    11d73 <TIFFReadDirectory+0x663>
cmp    $0x142,%r8w
je     11afe <TIFFReadDirectory+0x3ee>
mov    %r8,%rsi
mov    %rdx,%r12
mov    %rbx,%rdi
callq  8b60 <_TIFFCheckFieldIsValidForCodec@plt>
test   %eax,%eax
je     11e8c <TIFFReadDirectory+0x77c>
mov    %r12,%rdx
mov    $0x1,%esi
lea    0x41714(%rip),%r12        # 534ac <module.10>
jmpq   119dc <TIFFReadDirectory+0x2cc>
cmp    $0x152,%r8w
je     11afe <TIFFReadDirectory+0x3ee>
jmp    11d73 <TIFFReadDirectory+0x663>
mov    %r13,%rsi
mov    $0x117,%ecx
mov    %rbx,%rdi
mov    %r15,%rdx
callq  17fd0 <TIFFReadDirectoryFindEntry>
test   %rax,%rax
jne    11ea7 <TIFFReadDirectory+0x797>
mov    %r14,%rax
mov    $0x1,%esi
jmpq   11b63 <TIFFReadDirectory+0x453>
mov    %rsi,%r13
mov    %rax,%r14
mov    %rbx,%rdi
callq  87d0 <TIFFNumberOfTiles@plt>
mov    %eax,0xe4(%rbx)
mov    0x10(%rbx),%ecx
or     $0x400,%ecx
mov    %r14,%r8
jmpq   11ce2 <TIFFReadDirectory+0x5d2>
mov    %eax,0xe0(%rbx)
movzwl 0xaa(%rbx),%ecx
cmp    $0x2,%cx
jne    11e1d <TIFFReadDirectory+0x70d>
movzwl 0x82(%rbx),%ecx
xor    %edx,%edx
div    %ecx
mov    %eax,0xe0(%rbx)
mov    0x38(%rbx),%rax
and    $0x2000000,%rax
test   %rax,%rax
jne    11ee2 <TIFFReadDirectory+0x7d2>
movzwl 0x78(%rbx),%eax
cmp    $0x6,%ax
jne    11f23 <TIFFReadDirectory+0x813>
mov    0x10(%rbx),%eax
and    $0x400,%eax
test   %eax,%eax
jne    11ec2 <TIFFReadDirectory+0x7b2>
mov    %r8,%rax
jmp    11ec5 <TIFFReadDirectory+0x7b5>
lea    0x417b0(%rip),%rcx        # 53606 <module.10+0x15a>
mov    %r12,%rsi
mov    %r8,%r15
xor    %eax,%eax
lea    0x41781(%rip),%rdx        # 535e6 <module.10+0x13a>
callq  8a00 <TIFFErrorExt@plt>
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%r14
jmpq   11880 <TIFFReadDirectory+0x170>
cmp    $0x100,%r8w
je     11afe <TIFFReadDirectory+0x3ee>
jmpq   11d73 <TIFFReadDirectory+0x663>
movw   $0x0,0x0(%r13)
mov    %r12,%rdx
mov    $0x1,%esi
lea    0x4160a(%rip),%r12        # 534ac <module.10>
jmpq   119dc <TIFFReadDirectory+0x2cc>
mov    0x8(%rax),%rax
cmp    $0x1,%rax
je     11f3f <TIFFReadDirectory+0x82f>
mov    %r14,%rax
mov    $0x1,%esi
jmpq   11b63 <TIFFReadDirectory+0x453>
mov    %r13,%rax
test   %eax,%eax
jne    11f23 <TIFFReadDirectory+0x813>
mov    0xe4(%rbx),%eax
cmp    $0x1,%eax
jne    11f23 <TIFFReadDirectory+0x813>
mov    0x38(%rbx),%rax
or     $0x2000000,%rax
mov    %rax,0x38(%rbx)
mov    -0x80(%rbp),%r14
lea    0xe8(%rbx),%rcx
mov    %rcx,-0x30(%rbp)
lea    0xf0(%rbx),%r10
mov    %r10,-0x38(%rbp)
lea    -0x72(%rbp),%rdx
lea    -0x70(%rbp),%rdi
lea    -0x5a(%rbp),%rax
lea    0x4171d(%rip),%r11        # 5362c <module.10+0x180>
mov    $0x2,%esi
mov    %rsi,-0x48(%rbp)
mov    %r8,%rsi
mov    %rsi,%r9
jmpq   11fc2 <TIFFReadDirectory+0x8b2>
mov    0x10(%rbx),%eax
and    $0x400,%eax
test   %eax,%eax
jne    12025 <TIFFReadDirectory+0x915>
lea    0x416e5(%rip),%rsi        # 5361f <module.10+0x173>
jmpq   1202c <TIFFReadDirectory+0x91c>
movw   $0x1,0xaa(%rbx)
xor    %eax,%eax
mov    0x3b8(%rbx),%rdi
lea    0x4162e(%rip),%rdx        # 53586 <module.10+0xda>
mov    %r12,%rsi
callq  85a0 <TIFFWarningExt@plt>
mov    %r14,%rax
mov    $0x1,%esi
jmpq   11b63 <TIFFReadDirectory+0x453>
test   %r12w,%r12w
je     12048 <TIFFReadDirectory+0x938>
mov    %r13,%rdx
mov    %r9,%r13
mov    %rsi,%r12
mov    %rbx,%rdi
mov    %r14,%rsi
callq  18e30 <TIFFFetchNormalTag>
mov    %r13,%r9
lea    -0x70(%rbp),%rdi
lea    -0x72(%rbp),%rdx
lea    -0x5a(%rbp),%rax
mov    -0x38(%rbp),%r10
mov    -0x30(%rbp),%rcx
lea    0x41683(%rip),%r11        # 5362c <module.10+0x180>
mov    $0x1,%r13d
add    $0x18,%r14
lea    0x1(%r12),%esi
lea    0x414ed(%rip),%r12        # 534ac <module.10>
xor    %r8d,%r8d
cmp    %si,%r15w
ja     12050 <TIFFReadDirectory+0x940>
movzwl 0x78(%rbx),%eax
cmp    $0x6,%ax
je     1211a <TIFFReadDirectory+0xa0a>
movzwl 0x7a(%rbx),%eax
cmp    $0x3,%ax
jne    12189 <TIFFReadDirectory+0xa79>
mov    0x38(%rbx),%rax
and    $0x4000000,%rax
test   %rax,%rax
jne    12189 <TIFFReadDirectory+0xa79>
movzwl 0x74(%rbx),%eax
cmp    $0x7,%ax
jbe    12200 <TIFFReadDirectory+0xaf0>
movzwl 0x82(%rbx),%eax
cmp    $0x3,%ax
jne    12200 <TIFFReadDirectory+0xaf0>
movw   $0x2,0x7a(%rbx)
jmpq   12189 <TIFFReadDirectory+0xa79>
lea    0x415e7(%rip),%rsi        # 53613 <module.10+0x167>
mov    %rbx,%rdi
mov    %r8,%r15
callq  183c0 <MissingRequired>
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%r14
jmpq   11880 <TIFFReadDirectory+0x170>
mov    %rsi,%r12
jmpq   11faf <TIFFReadDirectory+0x89f>
movzwl (%r14),%r12d
cmp    $0x12c,%r12w
jbe    12231 <TIFFReadDirectory+0xb21>
cmp    $0x152,%r12w
jbe    12266 <TIFFReadDirectory+0xb56>
cmp    $0x154,%r12w
jbe    122d6 <TIFFReadDirectory+0xbc6>
cmp    $0x155,%r12w
jne    12360 <TIFFReadDirectory+0xc50>
movq   $0x0,-0x70(%rbp)
movzwl 0x82(%rbx),%eax
cmp    0x8(%r14),%rax
je     12371 <TIFFReadDirectory+0xc61>
mov    %rsi,%r12
test   %r13d,%r13d
jne    12397 <TIFFReadDirectory+0xc87>
mov    0x10(%rbx),%r13d
mov    %r13,%rax
or     $0x400000,%eax
mov    %eax,0x10(%rbx)
xor    %eax,%eax
movzwl (%r14),%esi
mov    -0x70(%rbp),%rdx
mov    %rbx,%rdi
mov    %r15,-0x58(%rbp)
mov    %r13,%r15
mov    %r9,%r13
callq  8290 <TIFFSetField@plt>
mov    %r15d,0x10(%rbx)
mov    %rax,%r15
mov    -0x70(%rbp),%rdi
callq  8bb0 <_TIFFfree@plt>
test   %r15d,%r15d
je     123b7 <TIFFReadDirectory+0xca7>
mov    %r13,%r9
lea    -0x70(%rbp),%rdi
lea    -0x72(%rbp),%rdx
lea    -0x5a(%rbp),%rax
mov    -0x38(%rbp),%r10
mov    -0x30(%rbp),%rcx
lea    0x41521(%rip),%r11        # 5362c <module.10+0x180>
mov    -0x58(%rbp),%r15
mov    $0x1,%r13d
jmpq   11faf <TIFFReadDirectory+0x89f>
mov    0x38(%rbx),%rax
and    $0x100,%rax
test   %rax,%rax
jne    123cb <TIFFReadDirectory+0xcbb>
mov    %r12,%rsi
mov    %r10,%r12
mov    %rcx,%r14
xor    %r13d,%r13d
mov    0x3b8(%rbx),%rdi
lea    0x41616(%rip),%rdx        # 5375d <module.10+0x2b1>
mov    %r13,%rax
callq  85a0 <TIFFWarningExt@plt>
mov    %r13,%rax
mov    %r12,%r13
mov    $0x106,%esi
mov    $0x6,%edx
mov    %rbx,%rdi
callq  8290 <TIFFSetField@plt>
test   %eax,%eax
jne    1240a <TIFFReadDirectory+0xcfa>
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%r14
xor    %r15d,%r15d
jmpq   11880 <TIFFReadDirectory+0x170>
movw   $0x1,0x7a(%rbx)
movzwl 0x78(%rbx),%eax
cmp    $0x6,%ax
jne    12487 <TIFFReadDirectory+0xd77>
mov    %r8,%r15
mov    -0x80(%rbp),%rdi
test   %rdi,%rdi
je     121b0 <TIFFReadDirectory+0xaa0>
callq  8bb0 <_TIFFfree@plt>
movq   $0x0,-0x80(%rbp)
mov    0x38(%rbx),%rax
and    $0x80000,%rax
test   %rax,%rax
jne    121df <TIFFReadDirectory+0xacf>
movzwl 0x74(%rbx),%ecx
cmp    $0xf,%cx
ja     124dd <TIFFReadDirectory+0xdcd>
mov    %r13,%rax
shl    %cl,%rax
add    $0xffff,%eax
mov    %ax,0x8a(%rbx)
mov    0xe4(%rbx),%eax
cmp    $0x1,%eax
jbe    12518 <TIFFReadDirectory+0xe08>
movl   $0x1,0xf8(%rbx)
mov    %r13,%rax
jmpq   124ee <TIFFReadDirectory+0xdde>
movzwl 0x74(%rbx),%eax
cmp    $0x7,%ax
ja     12183 <TIFFReadDirectory+0xa73>
mov    %rbx,%rdi
mov    %r8,%r15
lea    0x41695(%rip),%rsi        # 538b0 <module.10+0x404>
callq  183c0 <MissingRequired>
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%r14
jmpq   11880 <TIFFReadDirectory+0x170>
cmp    $0x110,%r12w
jbe    1258b <TIFFReadDirectory+0xe7b>
cmp    $0x117,%r12w
jbe    125b4 <TIFFReadDirectory+0xea4>
cmp    $0x118,%r12w
je     122e2 <TIFFReadDirectory+0xbd2>
cmp    $0x119,%r12w
je     122e2 <TIFFReadDirectory+0xbd2>
jmpq   11f77 <TIFFReadDirectory+0x867>
cmp    $0x143,%r12w
jbe    125cd <TIFFReadDirectory+0xebd>
cmp    $0x144,%r12w
jne    1261a <TIFFReadDirectory+0xf0a>
mov    0xe8(%rbx),%rax
test   %rax,%rax
jne    12681 <TIFFReadDirectory+0xf71>
mov    %rsi,%r12
mov    %r9,%r13
mov    0xe4(%rbx),%edx
mov    %rbx,%rdi
mov    %r14,%rsi
callq  1b010 <TIFFFetchStripThing>
test   %eax,%eax
je     126b1 <TIFFReadDirectory+0xfa1>
mov    %r13,%r9
lea    -0x70(%rbp),%rdi
lea    -0x72(%rbp),%rdx
lea    -0x5a(%rbp),%rax
mov    -0x38(%rbp),%r10
mov    -0x30(%rbp),%rcx
lea    0x41361(%rip),%r11        # 5362c <module.10+0x180>
mov    $0x1,%r13d
jmpq   11faf <TIFFReadDirectory+0x89f>
cmp    $0x153,%r12w
jne    126c5 <TIFFReadDirectory+0xfb5>
mov    %rsi,%r12
mov    %r9,%r13
mov    %rbx,%rdi
mov    %r14,%rsi
callq  13630 <TIFFReadDirEntryShort>
cmp    $0x1,%eax
jne    12307 <TIFFReadDirectory+0xbf7>
mov    %rbx,%rdi
mov    %r14,%rsi
lea    -0x72(%rbp),%rdx
callq  17250 <TIFFReadDirEntryPersampleShort>
test   %eax,%eax
jne    126d6 <TIFFReadDirectory+0xfc6>
xor    %eax,%eax
movzwl (%r14),%esi
movzwl -0x72(%rbp),%edx
mov    %rbx,%rdi
callq  8290 <TIFFSetField@plt>
test   %eax,%eax
je     126fa <TIFFReadDirectory+0xfea>
movzwl (%r14),%eax
cmp    $0x102,%ax
je     1270e <TIFFReadDirectory+0xffe>
mov    %r13,%r9
lea    -0x70(%rbp),%rdi
lea    -0x72(%rbp),%rdx
lea    -0x5a(%rbp),%rax
mov    -0x38(%rbp),%r10
mov    -0x30(%rbp),%rcx
lea    0x412d7(%rip),%r11        # 5362c <module.10+0x180>
mov    $0x1,%r13d
jmpq   11faf <TIFFReadDirectory+0x89f>
cmp    $0x80e4,%r12w
je     122e2 <TIFFReadDirectory+0xbd2>
jmpq   11f77 <TIFFReadDirectory+0x867>
mov    %rdi,%rdx
mov    %rsi,%r12
mov    %r9,%r13
mov    %rbx,%rdi
mov    %r14,%rsi
callq  169d0 <TIFFReadDirEntryDoubleArray>
mov    %r13,%r9
mov    %rax,%r13
lea    0x4129a(%rip),%r11        # 5362c <module.10+0x180>
jmpq   120a0 <TIFFReadDirectory+0x990>
movzwl (%r14),%esi
mov    %r11,%r12
mov    %rbx,%rdi
callq  8ae0 <TIFFFieldWithTag@plt>
test   %rax,%rax
jne    12737 <TIFFReadDirectory+0x1027>
mov    %r12,%rcx
jmpq   1273b <TIFFReadDirectory+0x102b>
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%r14
xor    %r15d,%r15d
jmpq   11880 <TIFFReadDirectory+0x170>
movzwl 0x7a(%rbx),%eax
cmp    $0x2,%ax
jne    12420 <TIFFReadDirectory+0xd10>
mov    %rcx,%r13
mov    %r10,%r14
movw   $0x6,0x7a(%rbx)
xor    %eax,%eax
mov    0x3b8(%rbx),%rdi
lea    0x4139f(%rip),%rdx        # 53790 <module.10+0x2e4>
mov    %r12,%rsi
callq  85a0 <TIFFWarningExt@plt>
mov    %r13,%rcx
mov    %r14,%r10
mov    $0x1,%r13d
xor    %r8d,%r8d
jmp    12420 <TIFFReadDirectory+0xd10>
mov    %r14,%rcx
mov    %r13,%r10
mov    $0x1,%r13d
lea    0x4108f(%rip),%r12        # 534ac <module.10>
xor    %r8d,%r8d
mov    0x38(%rbx),%rax
and    $0x40,%rax
test   %rax,%rax
jne    1277a <TIFFReadDirectory+0x106a>
mov    %r12,%rsi
mov    %r10,%r12
mov    %rcx,%r14
xor    %r13d,%r13d
mov    0x3b8(%rbx),%rdi
lea    0x41394(%rip),%rdx        # 537df <module.10+0x333>
mov    %r13,%rax
callq  85a0 <TIFFWarningExt@plt>
mov    %r13,%rax
mov    %r12,%r13
mov    $0x102,%esi
mov    $0x8,%edx
mov    %rbx,%rdi
callq  8290 <TIFFSetField@plt>
test   %eax,%eax
jne    12764 <TIFFReadDirectory+0x1054>
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%r14
xor    %r15d,%r15d
jmpq   11880 <TIFFReadDirectory+0x170>
mov    0x38(%rbx),%rax
and    $0x1000000,%rax
test   %rax,%rax
jne    127f3 <TIFFReadDirectory+0x10e3>
movzwl 0xaa(%rbx),%eax
cmp    $0x1,%ax
jne    12845 <TIFFReadDirectory+0x1135>
mov    0xe4(%rbx),%eax
cmp    $0x1,%eax
jbe    12845 <TIFFReadDirectory+0x1135>
mov    %rbx,%rdi
mov    %r8,%r15
lea    0x413f2(%rip),%rsi        # 538b9 <module.10+0x40d>
callq  183c0 <MissingRequired>
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%r14
jmpq   11880 <TIFFReadDirectory+0x170>
movw   $0xffff,0x8a(%rbx)
jmpq   121df <TIFFReadDirectory+0xacf>
add    $0x1,%eax
cmp    0xe4(%rbx),%eax
jae    12518 <TIFFReadDirectory+0xe08>
mov    0xe8(%rbx),%rsi
mov    %eax,%ecx
mov    (%rsi,%rcx,8),%rcx
lea    -0x1(%rax),%edx
mov    %edx,%edx
cmp    (%rsi,%rdx,8),%rcx
jae    124eb <TIFFReadDirectory+0xddb>
movl   $0x0,0xf8(%rbx)
mov    %rbx,%rdi
callq  *0x2c0(%rbx)
movzwl 0xaa(%rbx),%eax
cmp    $0x1,%ax
jne    128b3 <TIFFReadDirectory+0x11a3>
mov    0xe4(%rbx),%eax
cmp    $0x1,%eax
jne    128b3 <TIFFReadDirectory+0x11a3>
movzwl 0x78(%rbx),%eax
cmp    $0x1,%ax
jne    128b3 <TIFFReadDirectory+0x11a3>
mov    0x10(%rbx),%eax
and    $0x8400,%eax
cmp    $0x8000,%eax
jne    128b3 <TIFFReadDirectory+0x11a3>
mov    %rbx,%rdi
callq  8c70 <_TIFFFillStriles@plt>
test   %eax,%eax
jne    1293a <TIFFReadDirectory+0x122a>
mov    %r15,%rax
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x20(%rbp),%r14
mov    -0x28(%rbp),%r15
leaveq 
retq   
cmp    $0xfe,%r12w
jbe    11f6d <TIFFReadDirectory+0x85d>
cmp    $0xff,%r12w
je     12963 <TIFFReadDirectory+0x1253>
cmp    $0x102,%r12w
je     122e2 <TIFFReadDirectory+0xbd2>
jmpq   11f77 <TIFFReadDirectory+0x867>
cmp    $0x111,%r12w
je     1227e <TIFFReadDirectory+0xb6e>
cmp    $0x117,%r12w
je     12626 <TIFFReadDirectory+0xf16>
jmpq   11f77 <TIFFReadDirectory+0x867>
cmp    $0x12d,%r12w
jne    129a8 <TIFFReadDirectory+0x1298>
movq   $0x0,-0x68(%rbp)
test   %r9d,%r9d
jg     129b9 <TIFFReadDirectory+0x12a9>
mov    %rcx,%r13
mov    %r12,%rcx
mov    %rsi,%r12
mov    %rcx,%rsi
mov    %rbx,%rdi
callq  8ae0 <TIFFFieldWithTag@plt>
mov    0x3b8(%rbx),%rdi
test   %rax,%rax
jne    129f7 <TIFFReadDirectory+0x12e7>
lea    0x41017(%rip),%rcx        # 5362c <module.10+0x180>
jmpq   129fb <TIFFReadDirectory+0x12eb>
cmp    $0x145,%r12w
jne    11f77 <TIFFReadDirectory+0x867>
mov    0xf0(%rbx),%rax
test   %rax,%rax
jne    12a38 <TIFFReadDirectory+0x1328>
mov    %r10,%rcx
mov    %rsi,%r12
mov    %r9,%r13
mov    0xe4(%rbx),%edx
mov    %rbx,%rdi
mov    %r14,%rsi
callq  1b010 <TIFFFetchStripThing>
test   %eax,%eax
je     12a68 <TIFFReadDirectory+0x1358>
mov    %r13,%r9
lea    -0x70(%rbp),%rdi
lea    -0x72(%rbp),%rdx
lea    -0x5a(%rbp),%rax
mov    -0x38(%rbp),%r10
mov    -0x30(%rbp),%rcx
lea    0x40fb6(%rip),%r11        # 5362c <module.10+0x180>
mov    $0x1,%r13d
jmpq   11faf <TIFFReadDirectory+0x89f>
xor    %eax,%eax
mov    0x3b8(%rbx),%rdi
mov    %r8,%r15
lea    0x40fa8(%rip),%rdx        # 5363c <module.10+0x190>
lea    0x40e11(%rip),%rsi        # 534ac <module.10>
callq  8a00 <TIFFErrorExt@plt>
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%r14
jmpq   11880 <TIFFReadDirectory+0x170>
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%r14
xor    %r15d,%r15d
jmpq   11880 <TIFFReadDirectory+0x170>
cmp    $0x154,%r12w
je     12084 <TIFFReadDirectory+0x974>
jmpq   11f77 <TIFFReadDirectory+0x867>
movzwl (%r14),%esi
mov    %rax,%r12
mov    %rbx,%rdi
callq  8ae0 <TIFFFieldWithTag@plt>
test   %rax,%rax
jne    12a7c <TIFFReadDirectory+0x136c>
lea    0x40f37(%rip),%rcx        # 5362c <module.10+0x180>
jmpq   12a80 <TIFFReadDirectory+0x1370>
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%r14
xor    %r15d,%r15d
jmpq   11880 <TIFFReadDirectory+0x170>
lea    -0x70(%rbp),%rdi
lea    -0x72(%rbp),%rdx
lea    -0x5a(%rbp),%rax
mov    -0x38(%rbp),%r10
mov    -0x30(%rbp),%rcx
lea    0x40f03(%rip),%r11        # 5362c <module.10+0x180>
mov    $0x1,%r13d
mov    %r13,%r9
jmpq   11faf <TIFFReadDirectory+0x89f>
mov    0x20(%rax),%rcx
mov    %r13,%rsi
mov    %rbx,%rdi
xor    %r15d,%r15d
mov    %r15,%r8
lea    0x40d5e(%rip),%rdx        # 534ac <module.10>
callq  17da0 <TIFFReadDirEntryOutputErr>
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%r14
jmpq   11880 <TIFFReadDirectory+0x170>
mov    %r14,%rcx
mov    %r13,%r10
mov    $0x1,%r13d
lea    0x40d35(%rip),%r12        # 534ac <module.10>
xor    %r8d,%r8d
mov    0x38(%rbx),%rax
and    $0x10000,%rax
test   %rax,%rax
jne    11fda <TIFFReadDirectory+0x8ca>
movzwl 0x7a(%rbx),%eax
cmp    $0x2,%ax
je     12aa9 <TIFFReadDirectory+0x1399>
mov    $0x115,%r14d
movzwl 0x7a(%rbx),%eax
cmp    $0x6,%ax
je     12b03 <TIFFReadDirectory+0x13f3>
test   %ax,%ax
je     127be <TIFFReadDirectory+0x10ae>
cmp    $0x1,%ax
jne    11fda <TIFFReadDirectory+0x8ca>
mov    %r13,%rdx
mov    %r10,%r13
mov    %r14,%rsi
mov    %rcx,%r14
mov    %r15,%r12
mov    %r8,%r15
xor    %eax,%eax
mov    %rbx,%rdi
callq  8290 <TIFFSetField@plt>
test   %eax,%eax
jne    12b52 <TIFFReadDirectory+0x1442>
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%r14
jmpq   11880 <TIFFReadDirectory+0x170>
mov    0xe4(%rbx),%eax
cmp    $0x1,%eax
jne    1282c <TIFFReadDirectory+0x111c>
mov    0x10(%rbx),%eax
and    $0x400,%eax
test   %eax,%eax
jne    1282c <TIFFReadDirectory+0x111c>
mov    %rcx,%r13
mov    %r10,%r14
mov    %rbx,%rdi
callq  8c70 <_TIFFFillStriles@plt>
test   %eax,%eax
jne    12b70 <TIFFReadDirectory+0x1460>
mov    %r14,%r10
mov    $0x1,%r13d
xor    %r8d,%r8d
movzwl 0xaa(%rbx),%eax
cmp    $0x1,%ax
je     12b91 <TIFFReadDirectory+0x1481>
mov    %r8,%r15
jmpq   1219a <TIFFReadDirectory+0xa8a>
movzwl 0xaa(%rbx),%eax
cmp    $0x2,%ax
jne    12865 <TIFFReadDirectory+0x1155>
movzwl 0x82(%rbx),%eax
cmp    0xe4(%rbx),%eax
jne    124ba <TIFFReadDirectory+0xdaa>
mov    %r8,%r14
xor    %eax,%eax
mov    0x3b8(%rbx),%rdi
lea    0x41051(%rip),%rdx        # 538c9 <module.10+0x41d>
mov    %r12,%rsi
callq  85a0 <TIFFWarningExt@plt>
mov    %r15,%rdx
mov    %r14,%r15
mov    -0x80(%rbp),%rsi
mov    %rbx,%rdi
callq  18080 <EstimateStripByteCounts>
test   %eax,%eax
jns    1219a <TIFFReadDirectory+0xa8a>
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%r14
jmpq   11880 <TIFFReadDirectory+0x170>
mov    %rbx,%rdi
callq  1b360 <ChopUpSingleUncompressedStrip>
mov    0x10(%rbx),%eax
and    $0xffdffff7,%eax
mov    %eax,0x10(%rbx)
movl   $0xffffffff,0x27c(%rbx)
movl   $0xffffffff,0x284(%rbx)
movl   $0xffffffff,0x2a8(%rbx)
movl   $0xffffffff,0x2ac(%rbx)
movq   $0xffffffffffffffff,0x2b0(%rbx)
mov    %rbx,%rdi
callq  8410 <TIFFScanlineSize@plt>
mov    %rax,0x358(%rbx)
test   %rax,%rax
jne    12ba8 <TIFFReadDirectory+0x1498>
xor    %eax,%eax
mov    0x3b8(%rbx),%rdi
mov    %r12,%rsi
lea    0x41098(%rip),%rdx        # 539b4 <module.10+0x508>
callq  8a00 <TIFFErrorExt@plt>
mov    %r15,%rax
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x20(%rbp),%r14
mov    -0x28(%rbp),%r15
leaveq 
retq   
mov    0xf0(%rbx),%rax
test   %rax,%rax
jne    128ab <TIFFReadDirectory+0x119b>
mov    %r15,%rax
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x20(%rbp),%r14
mov    -0x28(%rbp),%r15
leaveq 
retq   
mov    %rax,%rdx
mov    %rsi,%r12
mov    %r9,%r13
mov    %rbx,%rdi
mov    %r14,%rsi
callq  13630 <TIFFReadDirEntryShort>
test   %eax,%eax
je     12be2 <TIFFReadDirectory+0x14d2>
mov    %r13,%r9
lea    -0x70(%rbp),%rdi
lea    -0x72(%rbp),%rdx
lea    -0x5a(%rbp),%rax
mov    -0x38(%rbp),%r10
mov    -0x30(%rbp),%rcx
lea    0x40c8f(%rip),%r11        # 5362c <module.10+0x180>
mov    $0x1,%r13d
jmpq   11faf <TIFFReadDirectory+0x89f>
cmp    $0x140,%r12w
je     125d9 <TIFFReadDirectory+0xec9>
jmpq   11f77 <TIFFReadDirectory+0x867>
movzwl 0x74(%rbx),%ecx
cmp    $0x18,%cx
ja     12c2b <TIFFReadDirectory+0x151b>
mov    %r12,%rax
mov    %rsi,%r12
mov    %rax,%rsi
mov    %r13,%rax
shl    %cl,%eax
cmp    $0x12d,%si
jne    12c5b <TIFFReadDirectory+0x154b>
mov    %eax,%edx
cmp    0x8(%r14),%rdx
jne    12c5b <TIFFReadDirectory+0x154b>
mov    %rax,%rdx
mov    %r8,%rax
jmpq   12c62 <TIFFReadDirectory+0x1552>
mov    0x20(%rax),%rcx
xor    %eax,%eax
lea    0x40aa8(%rip),%rsi        # 534ac <module.10>
lea    0x40cfc(%rip),%rdx        # 53707 <module.10+0x25b>
callq  85a0 <TIFFWarningExt@plt>
mov    %r13,%rcx
lea    -0x70(%rbp),%rdi
lea    -0x72(%rbp),%rdx
lea    -0x5a(%rbp),%rax
mov    -0x38(%rbp),%r10
lea    0x40c02(%rip),%r11        # 5362c <module.10+0x180>
mov    $0x1,%r13d
xor    %r9d,%r9d
jmpq   11faf <TIFFReadDirectory+0x89f>
xor    %eax,%eax
mov    0x3b8(%rbx),%rdi
mov    %r8,%r15
lea    0x40c52(%rip),%rdx        # 5369d <module.10+0x1f1>
lea    0x40a5a(%rip),%rsi        # 534ac <module.10>
callq  8a00 <TIFFErrorExt@plt>
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%r14
jmpq   11880 <TIFFReadDirectory+0x170>
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%r14
xor    %r15d,%r15d
jmpq   11880 <TIFFReadDirectory+0x170>
mov    0x20(%rax),%rcx
mov    %r12,%rsi
mov    %rbx,%rdi
xor    %r15d,%r15d
mov    %r15,%r8
lea    0x40a19(%rip),%rdx        # 534ac <module.10>
callq  17da0 <TIFFReadDirEntryOutputErr>
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%r14
jmpq   11880 <TIFFReadDirectory+0x170>
mov    %r12,%rsi
mov    %r10,%r12
mov    %rcx,%r14
xor    %r13d,%r13d
mov    0x3b8(%rbx),%rdi
lea    0x40d55(%rip),%rdx        # 53818 <module.10+0x36c>
mov    %r13,%rax
callq  85a0 <TIFFWarningExt@plt>
mov    %r13,%rax
mov    %r14,%r13
mov    %rbx,%rdi
mov    $0x115,%r14d
mov    %r14,%rsi
mov    $0x3,%edx
callq  8290 <TIFFSetField@plt>
test   %eax,%eax
jne    12cee <TIFFReadDirectory+0x15de>
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%r14
xor    %r15d,%r15d
jmpq   11880 <TIFFReadDirectory+0x170>
mov    %r12,%rsi
mov    %rcx,%r12
mov    %r10,%r13
xor    %eax,%eax
mov    0x3b8(%rbx),%rdi
lea    0x40d48(%rip),%rdx        # 53864 <module.10+0x3b8>
callq  85a0 <TIFFWarningExt@plt>
mov    %r14,%rsi
mov    %r12,%r14
mov    %rbx,%rdi
xor    %eax,%eax
mov    $0x3,%edx
callq  8290 <TIFFSetField@plt>
test   %eax,%eax
jne    12d09 <TIFFReadDirectory+0x15f9>
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%r14
xor    %r15d,%r15d
jmpq   11880 <TIFFReadDirectory+0x170>
mov    %r14,%rcx
mov    %r15,%r8
mov    %r12,%r15
mov    %r13,%r10
mov    $0x1,%r13d
lea    0x40941(%rip),%r12        # 534ac <module.10>
jmpq   11fda <TIFFReadDirectory+0x8ca>
mov    0x0(%r13),%rax
mov    (%rax),%rcx
test   %rcx,%rcx
jne    12d24 <TIFFReadDirectory+0x1614>
mov    %r14,%r10
mov    $0x1,%r13d
xor    %r8d,%r8d
jmpq   1282c <TIFFReadDirectory+0x111c>
mov    0xe4(%rbx),%eax
cmp    $0x2,%eax
ja     12d79 <TIFFReadDirectory+0x1669>
mov    %r8,%r15
jmpq   1219a <TIFFReadDirectory+0xa8a>
mov    0x10(%rbx),%eax
and    $0x400,%eax
test   %eax,%eax
jne    12d8f <TIFFReadDirectory+0x167f>
mov    %rbx,%rdi
callq  8070 <TIFFStripSize@plt>
test   %rax,%rax
je     12dc0 <TIFFReadDirectory+0x16b0>
mov    %r13,%rax
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x20(%rbp),%r14
mov    -0x28(%rbp),%r15
leaveq 
retq   
movzwl -0x5a(%rbp),%eax
cmp    $0x2,%ax
jne    12df1 <TIFFReadDirectory+0x16e1>
pushq  -0x50(%rbp)
popq   -0x58(%rbp)
mov    -0x58(%rbp),%rdx
test   %edx,%edx
jne    12e06 <TIFFReadDirectory+0x16f6>
mov    %r13,%r9
lea    -0x70(%rbp),%rdi
lea    -0x72(%rbp),%rdx
lea    -0x5a(%rbp),%rax
mov    -0x38(%rbp),%r10
mov    -0x30(%rbp),%rcx
lea    0x40a0c(%rip),%r11        # 5362c <module.10+0x180>
mov    $0x1,%r13d
jmpq   11faf <TIFFReadDirectory+0x89f>
mov    %r9,%r13
mov    %r12,%r9
mov    %rsi,%r12
mov    %r9,%rsi
mov    %rbx,%rdi
callq  8ae0 <TIFFFieldWithTag@plt>
mov    0x3b8(%rbx),%rdi
test   %rax,%rax
jne    12e3e <TIFFReadDirectory+0x172e>
lea    0x409d6(%rip),%rcx        # 5362c <module.10+0x180>
jmpq   12e42 <TIFFReadDirectory+0x1732>
mov    $0x3,%edx
shl    %cl,%edx
mov    %edx,%ecx
cmp    0x8(%r14),%rcx
jne    12c90 <TIFFReadDirectory+0x1580>
mov    %rbx,%rdi
mov    %r14,%rsi
lea    -0x68(%rbp),%rdx
mov    %r15,-0x58(%rbp)
mov    %r9,%r13
mov    %rax,%r15
callq  14b60 <TIFFReadDirEntryShortArray>
mov    %r13,%r9
mov    %rax,%r13
mov    %r15,%rax
mov    -0x58(%rbp),%r15
test   %r13d,%r13d
jne    12e85 <TIFFReadDirectory+0x1775>
mov    -0x68(%rbp),%rdx
mov    %eax,%ecx
lea    (%rdx,%rcx,2),%rcx
add    %eax,%eax
mov    %eax,%eax
lea    (%rdx,%rax,2),%r8
mov    %r9,%r13
xor    %eax,%eax
movzwl (%r14),%esi
mov    %rbx,%rdi
callq  8290 <TIFFSetField@plt>
mov    -0x68(%rbp),%rdi
callq  8bb0 <_TIFFfree@plt>
mov    %r13,%r9
lea    -0x70(%rbp),%rdi
lea    -0x72(%rbp),%rdx
lea    -0x5a(%rbp),%rax
mov    -0x38(%rbp),%r10
mov    -0x30(%rbp),%rcx
lea    0x40949(%rip),%r11        # 5362c <module.10+0x180>
mov    $0x1,%r13d
jmpq   11faf <TIFFReadDirectory+0x89f>
mov    %r13,%rcx
mov    %r12,%r10
mov    $0x1,%r13d
lea    0x407ab(%rip),%r12        # 534ac <module.10>
xor    %r8d,%r8d
jmpq   127a1 <TIFFReadDirectory+0x1091>
mov    %r14,%rcx
mov    %r13,%r10
mov    $0x1,%r13d
lea    0x40790(%rip),%r12        # 534ac <module.10>
xor    %r8d,%r8d
jmpq   11fda <TIFFReadDirectory+0x8ca>
mov    (%r14),%rax
mov    (%rax),%rax
test   %rax,%rax
jne    12ead <TIFFReadDirectory+0x179d>
test   %rcx,%rcx
je     12ead <TIFFReadDirectory+0x179d>
xor    %eax,%eax
mov    0x3b8(%rbx),%rdi
lea    0x40bd6(%rip),%rdx        # 53922 <module.10+0x476>
mov    %r12,%rsi
callq  85a0 <TIFFWarningExt@plt>
mov    %r15,%rdx
mov    -0x80(%rbp),%rsi
mov    %rbx,%rdi
callq  18080 <EstimateStripByteCounts>
test   %eax,%eax
js     12ed8 <TIFFReadDirectory+0x17c8>
mov    $0x1,%r13d
xor    %r15d,%r15d
jmpq   1219a <TIFFReadDirectory+0xa8a>
movzwl 0x78(%rbx),%eax
cmp    $0x1,%ax
je     12eec <TIFFReadDirectory+0x17dc>
mov    %r8,%r15
jmpq   1219a <TIFFReadDirectory+0xa8a>
mov    %rbx,%rdi
callq  8910 <TIFFTileSize@plt>
mov    %rax,0x2b0(%rbx)
test   %rax,%rax
je     12f07 <TIFFReadDirectory+0x17f7>
mov    %r13,%rax
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x20(%rbp),%r14
mov    -0x28(%rbp),%r15
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rbx),%rdi
mov    %r12,%rsi
lea    0x40c1f(%rip),%rdx        # 539f2 <module.10+0x546>
callq  8a00 <TIFFErrorExt@plt>
mov    %r15,%rax
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x20(%rbp),%r14
mov    -0x28(%rbp),%r15
leaveq 
retq   
cmp    $0x3,%ax
je     12f38 <TIFFReadDirectory+0x1828>
pushq  -0x40(%rbp)
popq   -0x58(%rbp)
jmpq   12bf6 <TIFFReadDirectory+0x14e6>
xor    %eax,%eax
mov    %rbx,%rdi
mov    $0xfe,%esi
callq  8290 <TIFFSetField@plt>
mov    %r13,%r9
lea    -0x70(%rbp),%rdi
lea    -0x72(%rbp),%rdx
lea    -0x5a(%rbp),%rax
mov    -0x38(%rbp),%r10
mov    -0x30(%rbp),%rcx
lea    0x407f9(%rip),%r11        # 5362c <module.10+0x180>
mov    $0x1,%r13d
jmpq   11faf <TIFFReadDirectory+0x89f>
mov    0x20(%rax),%rcx
xor    %eax,%eax
movzwl 0x74(%rbx),%r8d
lea    0x4065c(%rip),%rsi        # 534ac <module.10>
lea    0x408de(%rip),%rdx        # 53735 <module.10+0x289>
callq  85a0 <TIFFWarningExt@plt>
mov    %r13,%r9
lea    -0x70(%rbp),%rdi
lea    -0x72(%rbp),%rdx
lea    -0x5a(%rbp),%rax
mov    -0x38(%rbp),%r10
mov    -0x30(%rbp),%rcx
lea    0x407b2(%rip),%r11        # 5362c <module.10+0x180>
mov    $0x1,%r13d
jmpq   11faf <TIFFReadDirectory+0x89f>
movzwl (%r14),%esi
mov    %rbx,%rdi
mov    %r15,-0x58(%rbp)
mov    %r9,%r15
callq  8ae0 <TIFFFieldWithTag@plt>
test   %rax,%rax
jne    12f43 <TIFFReadDirectory+0x1833>
lea    0x40784(%rip),%rcx        # 5362c <module.10+0x180>
jmpq   12f47 <TIFFReadDirectory+0x1837>
movzwl 0x78(%rbx),%eax
cmp    $0x1,%ax
je     12f89 <TIFFReadDirectory+0x1879>
mov    %r14,%r10
movslq 0xc(%rbx),%rax
test   %eax,%eax
je     12fb0 <TIFFReadDirectory+0x18a0>
mov    $0x1,%r13d
xor    %r8d,%r8d
jmpq   1282c <TIFFReadDirectory+0x111c>
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%r14
xor    %r15d,%r15d
jmpq   11880 <TIFFReadDirectory+0x170>
mov    (%r10),%rax
mov    0x8(%rax),%rcx
mov    (%rax),%rax
cmp    %rax,%rcx
jne    12fc8 <TIFFReadDirectory+0x18b8>
mov    %r8,%r15
jmpq   1219a <TIFFReadDirectory+0xa8a>
xor    %eax,%eax
mov    0x3b8(%rbx),%rdi
mov    %r12,%rsi
lea    0x40abb(%rip),%rdx        # 539d5 <module.10+0x529>
callq  8a00 <TIFFErrorExt@plt>
mov    %r15,%rax
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x20(%rbp),%r14
mov    -0x28(%rbp),%r15
leaveq 
retq   
pushq  -0x48(%rbp)
popq   -0x58(%rbp)
jmpq   12bf6 <TIFFReadDirectory+0x14e6>
mov    0x20(%rax),%rcx
mov    %r13,%rsi
mov    %rbx,%rdi
lea    0x40558(%rip),%rdx        # 534ac <module.10>
mov    $0x1,%r13d
mov    %r13,%r8
callq  17da0 <TIFFReadDirEntryOutputErr>
mov    %r15,%r9
lea    -0x70(%rbp),%rdi
lea    -0x72(%rbp),%rdx
lea    -0x5a(%rbp),%rax
mov    -0x38(%rbp),%r10
mov    -0x30(%rbp),%rcx
lea    0x406ac(%rip),%r11        # 5362c <module.10+0x180>
mov    -0x58(%rbp),%r15
jmpq   11faf <TIFFReadDirectory+0x89f>
mov    %rcx,%r12
mov    0x3e0(%rbx),%rax
mov    0x3b8(%rbx),%rdi
callq  *%rax
cmp    %rax,%r12
jbe    12fd5 <TIFFReadDirectory+0x18c5>
mov    %r14,%r10
lea    0x40501(%rip),%r12        # 534ac <module.10>
jmpq   12ebe <TIFFReadDirectory+0x17ae>
movzwl 0x78(%rbx),%eax
cmp    $0x1,%ax
je     13006 <TIFFReadDirectory+0x18f6>
mov    $0x1,%r13d
xor    %r8d,%r8d
jmpq   1282c <TIFFReadDirectory+0x111c>
test   %rax,%rax
jne    13038 <TIFFReadDirectory+0x1928>
mov    %r8,%r15
jmpq   1219a <TIFFReadDirectory+0xa8a>
mov    0x3e0(%rbx),%rax
mov    0x3b8(%rbx),%rdi
mov    (%r14),%rcx
mov    (%rcx),%r12
callq  *%rax
mov    0x0(%r13),%rcx
mov    (%rcx),%rcx
sub    %rcx,%rax
cmp    %r12,%rax
jae    13045 <TIFFReadDirectory+0x1935>
lea    0x404ab(%rip),%r12        # 534ac <module.10>
jmpq   12d3c <TIFFReadDirectory+0x162c>
mov    (%r10),%rax
mov    (%rax),%r13
mov    %r10,%r14
mov    %rbx,%rdi
callq  8220 <TIFFScanlineSize64@plt>
mov    0x5c(%rbx),%ecx
imul   %rax,%rcx
cmp    %r13,%rcx
ja     12d3c <TIFFReadDirectory+0x162c>
mov    %r14,%r10
mov    $0x1,%r13d
xor    %r8d,%r8d
jmpq   1282c <TIFFReadDirectory+0x111c>
test   %rcx,%rcx
jne    13054 <TIFFReadDirectory+0x1944>
mov    %r8,%r15
jmpq   1219a <TIFFReadDirectory+0xa8a>
mov    %r14,%r10
lea    0x4045d(%rip),%r12        # 534ac <module.10>
jmpq   12ebe <TIFFReadDirectory+0x17ae>
mov    %r8,%r14
xor    %eax,%eax
mov    0x3b8(%rbx),%rdi
lea    0x40904(%rip),%rdx        # 5396b <module.10+0x4bf>
mov    %r12,%rsi
callq  85a0 <TIFFWarningExt@plt>
mov    %r15,%rdx
mov    %r14,%r15
mov    -0x80(%rbp),%rsi
mov    %rbx,%rdi
callq  18080 <EstimateStripByteCounts>
test   %eax,%eax
jns    1219a <TIFFReadDirectory+0xa8a>
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%r14
jmpq   11880 <TIFFReadDirectory+0x170>
nopw   0x0(%rax,%rax,1)

00000000000130a0 <TIFFReadCustomDirectory>:
push   %rbp
mov    %rsp,%rbp
sub    $0x40,%rsp
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rsi,%r14
mov    %rdx,%rsi
mov    %r13,%r15
mov    %r12,%r13
mov    %rbx,%r12
mov    %rdi,%rbx
callq  82d0 <_TIFFSetupFields@plt>
lea    -0x38(%rbp),%rdx
xor    %ecx,%ecx
mov    %rbx,%rdi
mov    %r14,%rsi
callq  185f0 <TIFFFetchDirectory>
test   %ax,%ax
jne    13111 <TIFFReadCustomDirectory+0x71>
xor    %eax,%eax
mov    0x3b8(%rbx),%rdi
mov    %r14,%rcx
lea    0x40938(%rip),%rdx        # 53a28 <module.43+0x18>
lea    0x40919(%rip),%rsi        # 53a10 <module.43>
callq  8a00 <TIFFErrorExt@plt>
mov    %r12,%rbx
mov    %r13,%r12
mov    %r15,%r13
xor    %eax,%eax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
leaveq 
retq   
mov    %rax,%r14
mov    %rbx,%rdi
callq  8510 <TIFFFreeDirectory@plt>
lea    0x38(%rbx),%rdi
mov    $0x118,%edx
xor    %eax,%eax
mov    %rax,%rsi
mov    %r15,-0x18(%rbp)
mov    %rax,%r15
callq  88e0 <_TIFFmemset@plt>
mov    -0x38(%rbp),%rsi
mov    %rbx,%rdi
mov    %r14,%rdx
callq  17f80 <TIFFReadDirectoryCheckOrder>
mov    -0x38(%rbp),%rcx
mov    $0x1,%eax
lea    -0x2c(%rbp),%rdx
mov    %r12,-0x8(%rbp)
mov    %r13,-0x10(%rbp)
mov    %rcx,%r13
lea    0x408ac(%rip),%r12        # 53a10 <module.43>
jmpq   131f0 <TIFFReadCustomDirectory+0x150>
movzwl 0x0(%r13),%esi
mov    %rbx,%rdi
callq  18000 <TIFFReadDirectoryFindFieldInfo>
mov    -0x2c(%rbp),%eax
cmp    $0xffffffff,%eax
je     1321d <TIFFReadCustomDirectory+0x17d>
lea    -0x2c(%rbp),%rdx
movzwl 0x0(%r13),%eax
test   %ax,%ax
je     131e3 <TIFFReadCustomDirectory+0x143>
mov    0x3f0(%rbx),%rcx
mov    -0x2c(%rbp),%eax
mov    (%rcx,%rax,8),%rsi
movzwl 0x18(%rsi),%eax
test   %ax,%ax
jne    132df <TIFFReadCustomDirectory+0x23f>
movw   $0x0,0x0(%r13)
movzwl 0x0(%r13),%eax
test   %ax,%ax
je     131e3 <TIFFReadCustomDirectory+0x143>
cmp    $0x9206,%ax
je     132e8 <TIFFReadCustomDirectory+0x248>
mov    %rdx,%r12
mov    %rbx,%rdi
mov    %r13,%rsi
mov    $0x1,%edx
callq  18e30 <TIFFFetchNormalTag>
mov    %r12,%rdx
lea    0x4082d(%rip),%r12        # 53a10 <module.43>
add    $0x18,%r13
add    $0x1,%r15d
mov    $0x1,%eax
cmp    %r15w,%r14w
ja     13169 <TIFFReadCustomDirectory+0xc9>
mov    -0x38(%rbp),%rdi
test   %rdi,%rdi
jne    13305 <TIFFReadCustomDirectory+0x265>
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x18(%rbp),%r13
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rbx),%rdi
movzwl 0x0(%r13),%ecx
mov    %rcx,%r8
mov    %r12,%rsi
lea    0x402b9(%rip),%rdx        # 534f1 <module.10+0x45>
callq  85a0 <TIFFWarningExt@plt>
movzwl 0x0(%r13),%esi
movzwl 0x2(%r13),%edx
mov    %rbx,%rdi
callq  8590 <_TIFFCreateAnonField@plt>
mov    %rax,%rsi
mov    %rbx,%rdi
mov    $0x1,%edx
callq  8520 <_TIFFMergeFields@plt>
test   %eax,%eax
jne    13326 <TIFFReadCustomDirectory+0x286>
mov    %r12,%rsi
xor    %eax,%eax
mov    0x3b8(%rbx),%rdi
movzwl 0x0(%r13),%ecx
mov    %rcx,%r8
lea    0x4029c(%rip),%rdx        # 5351e <module.10+0x72>
callq  85a0 <TIFFWarningExt@plt>
movw   $0x0,0x0(%r13)
lea    -0x2c(%rbp),%rdx
lea    0x40777(%rip),%r12        # 53a10 <module.43>
jmpq   13186 <TIFFReadCustomDirectory+0xe6>
movzwl 0x2(%r13),%eax
cmp    %eax,%ecx
je     13358 <TIFFReadCustomDirectory+0x2b8>
mov    -0x2c(%rbp),%eax
add    $0x1,%eax
mov    %eax,-0x2c(%rbp)
mov    0x3f8(%rbx),%rdi
mov    %eax,%ecx
cmp    %rcx,%rdi
je     13351 <TIFFReadCustomDirectory+0x2b1>
mov    0x3f0(%rbx),%rcx
mov    %eax,%eax
mov    (%rcx,%rax,8),%rcx
movzwl 0x0(%r13),%eax
cmp    (%rcx),%eax
jne    13351 <TIFFReadCustomDirectory+0x2b1>
mov    %rcx,%rsi
mov    0x8(%rsi),%ecx
test   %ecx,%ecx
jne    1329e <TIFFReadCustomDirectory+0x1fe>
jmp    13358 <TIFFReadCustomDirectory+0x2b8>
mov    %rdx,%r12
mov    %rbx,%rdi
mov    %r13,%rsi
callq  1b1e0 <TIFFFetchSubjectDistance>
mov    %r12,%rdx
lea    0x40710(%rip),%r12        # 53a10 <module.43>
jmpq   131e3 <TIFFReadCustomDirectory+0x143>
mov    %rax,%r15
callq  8bb0 <_TIFFfree@plt>
mov    %r15,%rax
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x18(%rbp),%r13
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
leaveq 
retq   
movzwl 0x0(%r13),%esi
mov    %rbx,%rdi
lea    -0x2c(%rbp),%r12
mov    %r12,%rdx
callq  18000 <TIFFReadDirectoryFindFieldInfo>
mov    -0x2c(%rbp),%eax
cmp    $0xfffffffe,%eax
ja     133ac <TIFFReadCustomDirectory+0x30c>
mov    %r12,%rdx
lea    0x406c4(%rip),%r12        # 53a10 <module.43>
jmpq   13186 <TIFFReadCustomDirectory+0xe6>
movl   $0xffff,-0x2c(%rbp)
mov    -0x2c(%rbp),%eax
cmp    $0xffff,%eax
je     133cb <TIFFReadCustomDirectory+0x32b>
movswq 0x4(%rsi),%rax
cmp    $0xffff,%ax
je     131b2 <TIFFReadCustomDirectory+0x112>
cmp    $0xfffd,%ax
je     131b2 <TIFFReadCustomDirectory+0x112>
cmp    $0xfffe,%ax
jne    13388 <TIFFReadCustomDirectory+0x2e8>
movzwl 0x82(%rbx),%eax
mov    %rdx,%r12
mov    %rax,%rdx
mov    %rbx,%rdi
mov    %r13,%rsi
callq  184e0 <CheckDirCount>
test   %eax,%eax
je     13405 <TIFFReadCustomDirectory+0x365>
mov    %r12,%rdx
lea    0x40669(%rip),%r12        # 53a10 <module.43>
jmpq   131b2 <TIFFReadCustomDirectory+0x112>
lea    0x401a1(%rip),%rdi        # 53554 <module.10+0xa8>
lea    0x401ac(%rip),%rsi        # 53566 <module.10+0xba>
mov    $0x10f6,%edx
lea    0x40690(%rip),%rcx        # 53a56 <module.43+0x46>
callq  8490 <__assert_fail@plt>
xor    %eax,%eax
mov    0x3b8(%rbx),%rdi
movzwl 0x2(%r13),%ecx
mov    0x20(%rsi),%r8
mov    %r12,%rsi
mov    %rdx,%r12
lea    0x40684(%rip),%rdx        # 53a6e <module.43+0x5e>
callq  85a0 <TIFFWarningExt@plt>
movw   $0x0,0x0(%r13)
mov    %r12,%rdx
lea    0x40610(%rip),%r12        # 53a10 <module.43>
jmpq   131b2 <TIFFReadCustomDirectory+0x112>
movw   $0x0,0x0(%r13)
mov    %r12,%rdx
lea    0x405fa(%rip),%r12        # 53a10 <module.43>
jmpq   131b2 <TIFFReadCustomDirectory+0x112>
nopl   0x0(%rax,%rax,1)

0000000000013420 <TIFFReadEXIFDirectory>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rsi,%r14
mov    %rdi,%r15
callq  8200 <_TIFFGetExifFields@plt>
mov    %rax,%rdx
mov    %r14,%rsi
mov    %r15,%rdi
callq  8190 <TIFFReadCustomDirectory@plt>
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

0000000000013460 <_TIFFFillStriles>:
push   %rbp
mov    %rsp,%rbp
mov    $0x1,%esi
callq  1b610 <_TIFFFillStrilesInternal>
leaveq 
retq   

0000000000013470 <TIFFReadDirEntryByte>:
push   %rbp
mov    %rsp,%rbp
sub    $0x50,%rsp
mov    0x8(%rsi),%rax
cmp    $0x1,%rax
je     13489 <TIFFReadDirEntryByte+0x19>
mov    $0x1,%eax
leaveq 
retq   
mov    $0x2,%eax
movzwl 0x2(%rsi),%ecx
add    $0xffffffff,%ecx
cmp    $0x10,%ecx
jbe    1349c <TIFFReadDirEntryByte+0x2c>
leaveq 
retq   
lea    0x3f86d(%rip),%r8        # 52d10 <reason.25+0xbea>
movslq (%r8,%rcx,4),%rcx
add    %r8,%rcx
jmpq   *%rcx
leaveq 
retq   
callq  172f0 <TIFFReadDirEntryCheckedByte>
xor    %eax,%eax
leaveq 
retq   
lea    -0x45(%rbp),%rax
mov    %rdx,-0x28(%rbp)
mov    %rax,%rdx
callq  17300 <TIFFReadDirEntryCheckedSbyte>
movsbq -0x45(%rbp),%rdi
mov    %rdi,-0x8(%rbp)
callq  177d0 <TIFFReadDirEntryCheckRangeByteSbyte>
test   %eax,%eax
je     1359f <TIFFReadDirEntryByte+0x12f>
leaveq 
retq   
lea    -0x44(%rbp),%rax
mov    %rdx,-0x28(%rbp)
mov    %rax,%rdx
callq  17310 <TIFFReadDirEntryCheckedShort>
movzwl -0x44(%rbp),%edi
mov    %rdi,-0x10(%rbp)
callq  177f0 <TIFFReadDirEntryCheckRangeByteShort>
test   %eax,%eax
je     135ad <TIFFReadDirEntryByte+0x13d>
leaveq 
retq   
lea    -0x42(%rbp),%rax
mov    %rdx,-0x28(%rbp)
mov    %rax,%rdx
callq  17340 <TIFFReadDirEntryCheckedSshort>
movswq -0x42(%rbp),%rdi
mov    %rdi,-0x10(%rbp)
callq  17810 <TIFFReadDirEntryCheckRangeByteSshort>
test   %eax,%eax
je     135bb <TIFFReadDirEntryByte+0x14b>
leaveq 
retq   
lea    -0x40(%rbp),%rax
mov    %rdx,-0x28(%rbp)
mov    %rax,%rdx
callq  17370 <TIFFReadDirEntryCheckedLong>
mov    -0x40(%rbp),%edi
mov    %rdi,-0x18(%rbp)
callq  17830 <TIFFReadDirEntryCheckRangeByteLong>
test   %eax,%eax
je     135c9 <TIFFReadDirEntryByte+0x159>
leaveq 
retq   
lea    -0x3c(%rbp),%rax
mov    %rdx,-0x28(%rbp)
mov    %rax,%rdx
callq  173a0 <TIFFReadDirEntryCheckedSlong>
movslq -0x3c(%rbp),%rdi
mov    %rdi,-0x18(%rbp)
callq  17850 <TIFFReadDirEntryCheckRangeByteSlong>
test   %eax,%eax
je     135d7 <TIFFReadDirEntryByte+0x167>
leaveq 
retq   
lea    -0x38(%rbp),%rax
mov    %rdx,-0x28(%rbp)
mov    %rax,%rdx
callq  173d0 <TIFFReadDirEntryCheckedLong8>
test   %eax,%eax
je     135e5 <TIFFReadDirEntryByte+0x175>
leaveq 
retq   
lea    -0x30(%rbp),%rax
mov    %rdx,-0x28(%rbp)
mov    %rax,%rdx
callq  17480 <TIFFReadDirEntryCheckedSlong8>
test   %eax,%eax
je     135f8 <TIFFReadDirEntryByte+0x188>
leaveq 
retq   
mov    -0x8(%rbp),%rcx
mov    -0x28(%rbp),%rax
mov    %cl,(%rax)
xor    %eax,%eax
leaveq 
retq   
mov    -0x10(%rbp),%rcx
mov    -0x28(%rbp),%rax
mov    %cl,(%rax)
xor    %eax,%eax
leaveq 
retq   
mov    -0x10(%rbp),%rcx
mov    -0x28(%rbp),%rax
mov    %cl,(%rax)
xor    %eax,%eax
leaveq 
retq   
mov    -0x18(%rbp),%rcx
mov    -0x28(%rbp),%rax
mov    %cl,(%rax)
xor    %eax,%eax
leaveq 
retq   
mov    -0x18(%rbp),%rcx
mov    -0x28(%rbp),%rax
mov    %cl,(%rax)
xor    %eax,%eax
leaveq 
retq   
mov    -0x38(%rbp),%rdi
mov    %rdi,-0x20(%rbp)
callq  17870 <TIFFReadDirEntryCheckRangeByteLong8>
test   %eax,%eax
je     1360b <TIFFReadDirEntryByte+0x19b>
leaveq 
retq   
mov    -0x30(%rbp),%rdi
mov    %rdi,-0x20(%rbp)
callq  17890 <TIFFReadDirEntryCheckRangeByteSlong8>
test   %eax,%eax
je     13619 <TIFFReadDirEntryByte+0x1a9>
leaveq 
retq   
mov    -0x20(%rbp),%rcx
mov    -0x28(%rbp),%rax
mov    %cl,(%rax)
xor    %eax,%eax
leaveq 
retq   
mov    -0x20(%rbp),%rcx
mov    -0x28(%rbp),%rax
mov    %cl,(%rax)
xor    %eax,%eax
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

0000000000013630 <TIFFReadDirEntryShort>:
push   %rbp
mov    %rsp,%rbp
sub    $0x40,%rsp
mov    0x8(%rsi),%rax
cmp    $0x1,%rax
je     13649 <TIFFReadDirEntryShort+0x19>
mov    $0x1,%eax
leaveq 
retq   
mov    $0x2,%eax
movzwl 0x2(%rsi),%ecx
add    $0xffffffff,%ecx
cmp    $0x10,%ecx
jbe    1365c <TIFFReadDirEntryShort+0x2c>
leaveq 
retq   
lea    0x3f6f1(%rip),%r8        # 52d54 <reason.25+0xc2e>
movslq (%r8,%rcx,4),%rcx
add    %r8,%rcx
jmpq   *%rcx
leaveq 
retq   
lea    -0x3c(%rbp),%rax
mov    %r15,-0x20(%rbp)
mov    %rdx,%r15
mov    %rax,%rdx
callq  172f0 <TIFFReadDirEntryCheckedByte>
movzbl -0x3c(%rbp),%eax
mov    %ax,(%r15)
mov    -0x20(%rbp),%r15
xor    %eax,%eax
leaveq 
retq   
lea    -0x3b(%rbp),%rax
mov    %rdx,-0x20(%rbp)
mov    %rax,%rdx
callq  17300 <TIFFReadDirEntryCheckedSbyte>
movsbq -0x3b(%rbp),%rdi
mov    %rdi,-0x8(%rbp)
callq  17990 <TIFFReadDirEntryCheckRangeShortSbyte>
test   %eax,%eax
je     1375b <TIFFReadDirEntryShort+0x12b>
leaveq 
retq   
callq  17310 <TIFFReadDirEntryCheckedShort>
xor    %eax,%eax
leaveq 
retq   
lea    -0x3a(%rbp),%rax
mov    %rdx,-0x20(%rbp)
mov    %rax,%rdx
callq  17340 <TIFFReadDirEntryCheckedSshort>
movswq -0x3a(%rbp),%rdi
mov    %rdi,-0x8(%rbp)
callq  179b0 <TIFFReadDirEntryCheckRangeShortSshort>
test   %eax,%eax
je     1376a <TIFFReadDirEntryShort+0x13a>
leaveq 
retq   
lea    -0x38(%rbp),%rax
mov    %rdx,-0x20(%rbp)
mov    %rax,%rdx
callq  17370 <TIFFReadDirEntryCheckedLong>
mov    -0x38(%rbp),%edi
mov    %rdi,-0x10(%rbp)
callq  179d0 <TIFFReadDirEntryCheckRangeShortLong>
test   %eax,%eax
je     13779 <TIFFReadDirEntryShort+0x149>
leaveq 
retq   
lea    -0x34(%rbp),%rax
mov    %rdx,-0x20(%rbp)
mov    %rax,%rdx
callq  173a0 <TIFFReadDirEntryCheckedSlong>
movslq -0x34(%rbp),%rdi
mov    %rdi,-0x10(%rbp)
callq  179f0 <TIFFReadDirEntryCheckRangeShortSlong>
test   %eax,%eax
je     13788 <TIFFReadDirEntryShort+0x158>
leaveq 
retq   
lea    -0x30(%rbp),%rax
mov    %rdx,-0x20(%rbp)
mov    %rax,%rdx
callq  173d0 <TIFFReadDirEntryCheckedLong8>
test   %eax,%eax
je     13797 <TIFFReadDirEntryShort+0x167>
leaveq 
retq   
lea    -0x28(%rbp),%rax
mov    %rdx,-0x20(%rbp)
mov    %rax,%rdx
callq  17480 <TIFFReadDirEntryCheckedSlong8>
test   %eax,%eax
je     137aa <TIFFReadDirEntryShort+0x17a>
leaveq 
retq   
mov    -0x8(%rbp),%rcx
mov    -0x20(%rbp),%rax
mov    %cx,(%rax)
xor    %eax,%eax
leaveq 
retq   
mov    -0x8(%rbp),%rcx
mov    -0x20(%rbp),%rax
mov    %cx,(%rax)
xor    %eax,%eax
leaveq 
retq   
mov    -0x10(%rbp),%rcx
mov    -0x20(%rbp),%rax
mov    %cx,(%rax)
xor    %eax,%eax
leaveq 
retq   
mov    -0x10(%rbp),%rcx
mov    -0x20(%rbp),%rax
mov    %cx,(%rax)
xor    %eax,%eax
leaveq 
retq   
mov    -0x30(%rbp),%rdi
mov    %rdi,-0x18(%rbp)
callq  17a10 <TIFFReadDirEntryCheckRangeShortLong8>
test   %eax,%eax
je     137bd <TIFFReadDirEntryShort+0x18d>
leaveq 
retq   
mov    -0x28(%rbp),%rdi
mov    %rdi,-0x18(%rbp)
callq  17a30 <TIFFReadDirEntryCheckRangeShortSlong8>
test   %eax,%eax
je     137cc <TIFFReadDirEntryShort+0x19c>
leaveq 
retq   
mov    -0x18(%rbp),%rcx
mov    -0x20(%rbp),%rax
mov    %cx,(%rax)
xor    %eax,%eax
leaveq 
retq   
mov    -0x18(%rbp),%rcx
mov    -0x20(%rbp),%rax
mov    %cx,(%rax)
xor    %eax,%eax
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

00000000000137e0 <TIFFReadDirEntryLong>:
push   %rbp
mov    %rsp,%rbp
sub    $0x40,%rsp
mov    0x8(%rsi),%rax
cmp    $0x1,%rax
je     137f9 <TIFFReadDirEntryLong+0x19>
mov    $0x1,%eax
leaveq 
retq   
mov    $0x2,%eax
movzwl 0x2(%rsi),%ecx
add    $0xffffffff,%ecx
cmp    $0x10,%ecx
jbe    1380c <TIFFReadDirEntryLong+0x2c>
leaveq 
retq   
lea    0x3f585(%rip),%r8        # 52d98 <reason.25+0xc72>
movslq (%r8,%rcx,4),%rcx
add    %r8,%rcx
jmpq   *%rcx
leaveq 
retq   
lea    -0x3a(%rbp),%rax
mov    %r15,-0x20(%rbp)
mov    %rdx,%r15
mov    %rax,%rdx
callq  172f0 <TIFFReadDirEntryCheckedByte>
movzbl -0x3a(%rbp),%eax
mov    %eax,(%r15)
mov    -0x20(%rbp),%r15
xor    %eax,%eax
leaveq 
retq   
lea    -0x39(%rbp),%rax
mov    %rdx,-0x20(%rbp)
mov    %rax,%rdx
callq  17300 <TIFFReadDirEntryCheckedSbyte>
movsbq -0x39(%rbp),%rdi
mov    %rdi,-0x8(%rbp)
callq  17b10 <TIFFReadDirEntryCheckRangeLongSbyte>
test   %eax,%eax
je     13906 <TIFFReadDirEntryLong+0x126>
leaveq 
retq   
lea    -0x38(%rbp),%rax
mov    %r15,-0x20(%rbp)
mov    %rdx,%r15
mov    %rax,%rdx
callq  17310 <TIFFReadDirEntryCheckedShort>
movzwl -0x38(%rbp),%eax
mov    %eax,(%r15)
mov    -0x20(%rbp),%r15
xor    %eax,%eax
leaveq 
retq   
lea    -0x36(%rbp),%rax
mov    %rdx,-0x20(%rbp)
mov    %rax,%rdx
callq  17340 <TIFFReadDirEntryCheckedSshort>
movswq -0x36(%rbp),%rdi
mov    %rdi,-0x10(%rbp)
callq  17b30 <TIFFReadDirEntryCheckRangeLongSshort>
test   %eax,%eax
je     13914 <TIFFReadDirEntryLong+0x134>
leaveq 
retq   
callq  17370 <TIFFReadDirEntryCheckedLong>
xor    %eax,%eax
leaveq 
retq   
lea    -0x34(%rbp),%rax
mov    %rdx,-0x20(%rbp)
mov    %rax,%rdx
callq  173a0 <TIFFReadDirEntryCheckedSlong>
movslq -0x34(%rbp),%rdi
mov    %rdi,-0x10(%rbp)
callq  17b50 <TIFFReadDirEntryCheckRangeLongSlong>
test   %eax,%eax
je     13922 <TIFFReadDirEntryLong+0x142>
leaveq 
retq   
lea    -0x30(%rbp),%rax
mov    %rdx,-0x20(%rbp)
mov    %rax,%rdx
callq  173d0 <TIFFReadDirEntryCheckedLong8>
test   %eax,%eax
je     13930 <TIFFReadDirEntryLong+0x150>
leaveq 
retq   
lea    -0x28(%rbp),%rax
mov    %rdx,-0x20(%rbp)
mov    %rax,%rdx
callq  17480 <TIFFReadDirEntryCheckedSlong8>
test   %eax,%eax
je     13943 <TIFFReadDirEntryLong+0x163>
leaveq 
retq   
mov    -0x8(%rbp),%rcx
mov    -0x20(%rbp),%rax
mov    %ecx,(%rax)
xor    %eax,%eax
leaveq 
retq   
mov    -0x10(%rbp),%rcx
mov    -0x20(%rbp),%rax
mov    %ecx,(%rax)
xor    %eax,%eax
leaveq 
retq   
mov    -0x10(%rbp),%rcx
mov    -0x20(%rbp),%rax
mov    %ecx,(%rax)
xor    %eax,%eax
leaveq 
retq   
mov    -0x30(%rbp),%rdi
mov    %rdi,-0x18(%rbp)
callq  17b70 <TIFFReadDirEntryCheckRangeLongLong8>
test   %eax,%eax
je     13956 <TIFFReadDirEntryLong+0x176>
leaveq 
retq   
mov    -0x28(%rbp),%rdi
mov    %rdi,-0x18(%rbp)
callq  17b90 <TIFFReadDirEntryCheckRangeLongSlong8>
test   %eax,%eax
je     13964 <TIFFReadDirEntryLong+0x184>
leaveq 
retq   
mov    -0x18(%rbp),%rcx
mov    -0x20(%rbp),%rax
mov    %ecx,(%rax)
xor    %eax,%eax
leaveq 
retq   
mov    -0x18(%rbp),%rcx
mov    -0x20(%rbp),%rax
mov    %ecx,(%rax)
xor    %eax,%eax
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   (%rax)

0000000000013980 <TIFFReadDirEntryLong8>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    0x8(%rsi),%rax
cmp    $0x1,%rax
je     13999 <TIFFReadDirEntryLong8+0x19>
mov    $0x1,%eax
leaveq 
retq   
mov    $0x2,%eax
movzwl 0x2(%rsi),%ecx
add    $0xffffffff,%ecx
cmp    $0x10,%ecx
jbe    139ac <TIFFReadDirEntryLong8+0x2c>
leaveq 
retq   
lea    0x3f429(%rip),%r8        # 52ddc <reason.25+0xcb6>
movslq (%r8,%rcx,4),%rcx
add    %r8,%rcx
jmpq   *%rcx
leaveq 
retq   
lea    -0x2e(%rbp),%rax
mov    %r15,-0x18(%rbp)
mov    %rdx,%r15
mov    %rax,%rdx
callq  172f0 <TIFFReadDirEntryCheckedByte>
movzbl -0x2e(%rbp),%eax
mov    %rax,(%r15)
mov    -0x18(%rbp),%r15
xor    %eax,%eax
leaveq 
retq   
lea    -0x2d(%rbp),%rax
mov    %rdx,-0x18(%rbp)
mov    %rax,%rdx
callq  17300 <TIFFReadDirEntryCheckedSbyte>
movsbq -0x2d(%rbp),%rdi
mov    %rdi,-0x8(%rbp)
callq  17c20 <TIFFReadDirEntryCheckRangeLong8Sbyte>
test   %eax,%eax
je     13aaf <TIFFReadDirEntryLong8+0x12f>
leaveq 
retq   
lea    -0x2c(%rbp),%rax
mov    %r15,-0x18(%rbp)
mov    %rdx,%r15
mov    %rax,%rdx
callq  17310 <TIFFReadDirEntryCheckedShort>
movzwl -0x2c(%rbp),%eax
mov    %rax,(%r15)
mov    -0x18(%rbp),%r15
xor    %eax,%eax
leaveq 
retq   
lea    -0x2a(%rbp),%rax
mov    %rdx,-0x18(%rbp)
mov    %rax,%rdx
callq  17340 <TIFFReadDirEntryCheckedSshort>
movswq -0x2a(%rbp),%rdi
mov    %rdi,-0x8(%rbp)
callq  17c40 <TIFFReadDirEntryCheckRangeLong8Sshort>
test   %eax,%eax
je     13abe <TIFFReadDirEntryLong8+0x13e>
leaveq 
retq   
lea    -0x28(%rbp),%rax
mov    %r15,-0x18(%rbp)
mov    %rdx,%r15
mov    %rax,%rdx
callq  17370 <TIFFReadDirEntryCheckedLong>
mov    -0x28(%rbp),%eax
mov    %rax,(%r15)
mov    -0x18(%rbp),%r15
xor    %eax,%eax
leaveq 
retq   
lea    -0x24(%rbp),%rax
mov    %rdx,-0x18(%rbp)
mov    %rax,%rdx
callq  173a0 <TIFFReadDirEntryCheckedSlong>
movslq -0x24(%rbp),%rdi
mov    %rdi,-0x10(%rbp)
callq  17c60 <TIFFReadDirEntryCheckRangeLong8Slong>
test   %eax,%eax
je     13acd <TIFFReadDirEntryLong8+0x14d>
leaveq 
retq   
callq  173d0 <TIFFReadDirEntryCheckedLong8>
leaveq 
retq   
lea    -0x20(%rbp),%rax
mov    %rdx,-0x18(%rbp)
mov    %rax,%rdx
callq  17480 <TIFFReadDirEntryCheckedSlong8>
test   %eax,%eax
je     13adc <TIFFReadDirEntryLong8+0x15c>
leaveq 
retq   
mov    -0x8(%rbp),%rcx
mov    -0x18(%rbp),%rax
mov    %rcx,(%rax)
xor    %eax,%eax
leaveq 
retq   
mov    -0x8(%rbp),%rcx
mov    -0x18(%rbp),%rax
mov    %rcx,(%rax)
xor    %eax,%eax
leaveq 
retq   
mov    -0x10(%rbp),%rcx
mov    -0x18(%rbp),%rax
mov    %rcx,(%rax)
xor    %eax,%eax
leaveq 
retq   
mov    -0x20(%rbp),%rdi
mov    %rdi,-0x10(%rbp)
callq  17c80 <TIFFReadDirEntryCheckRangeLong8Slong8>
test   %eax,%eax
je     13aef <TIFFReadDirEntryLong8+0x16f>
leaveq 
retq   
mov    -0x10(%rbp),%rcx
mov    -0x18(%rbp),%rax
mov    %rcx,(%rax)
xor    %eax,%eax
leaveq 
retq   
xchg   %ax,%ax

0000000000013b00 <TIFFReadDirEntryFloat>:
push   %rbp
mov    %rsp,%rbp
sub    $0x40,%rsp
mov    0x8(%rsi),%rax
cmp    $0x1,%rax
je     13b19 <TIFFReadDirEntryFloat+0x19>
mov    $0x1,%eax
leaveq 
retq   
mov    $0x2,%eax
movzwl 0x2(%rsi),%ecx
add    $0xffffffff,%ecx
cmp    $0x10,%ecx
jbe    13b2c <TIFFReadDirEntryFloat+0x2c>
leaveq 
retq   
lea    0x3f2ed(%rip),%r8        # 52e20 <reason.25+0xcfa>
movslq (%r8,%rcx,4),%rcx
add    %r8,%rcx
jmpq   *%rcx
leaveq 
retq   
lea    -0x3e(%rbp),%rax
mov    %r15,-0x8(%rbp)
mov    %rdx,%r15
mov    %rax,%rdx
callq  172f0 <TIFFReadDirEntryCheckedByte>
movzbl -0x3e(%rbp),%eax
movzbl %al,%eax
cvtsi2ss %rax,%xmm0
movss  %xmm0,(%r15)
mov    -0x8(%rbp),%r15
xor    %eax,%eax
leaveq 
retq   
lea    -0x3d(%rbp),%rax
mov    %r15,-0x8(%rbp)
mov    %rdx,%r15
mov    %rax,%rdx
callq  17300 <TIFFReadDirEntryCheckedSbyte>
movsbq -0x3d(%rbp),%rax
cvtsi2ss %eax,%xmm0
movss  %xmm0,(%r15)
mov    -0x8(%rbp),%r15
xor    %eax,%eax
leaveq 
retq   
lea    -0x3c(%rbp),%rax
mov    %r15,-0x8(%rbp)
mov    %rdx,%r15
mov    %rax,%rdx
callq  17310 <TIFFReadDirEntryCheckedShort>
movzwl -0x3c(%rbp),%eax
movzwl %ax,%eax
cvtsi2ss %rax,%xmm0
movss  %xmm0,(%r15)
mov    -0x8(%rbp),%r15
xor    %eax,%eax
leaveq 
retq   
lea    -0x3a(%rbp),%rax
mov    %r15,-0x8(%rbp)
mov    %rdx,%r15
mov    %rax,%rdx
callq  17340 <TIFFReadDirEntryCheckedSshort>
movswq -0x3a(%rbp),%rax
cvtsi2ss %eax,%xmm0
movss  %xmm0,(%r15)
mov    -0x8(%rbp),%r15
xor    %eax,%eax
leaveq 
retq   
lea    -0x38(%rbp),%rax
mov    %r15,-0x8(%rbp)
mov    %rdx,%r15
mov    %rax,%rdx
callq  17370 <TIFFReadDirEntryCheckedLong>
mov    -0x38(%rbp),%eax
mov    %eax,%eax
cvtsi2ss %rax,%xmm0
movss  %xmm0,(%r15)
mov    -0x8(%rbp),%r15
xor    %eax,%eax
leaveq 
retq   
lea    -0x34(%rbp),%rax
mov    %r15,-0x8(%rbp)
mov    %rdx,%r15
mov    %rax,%rdx
callq  173a0 <TIFFReadDirEntryCheckedSlong>
movslq -0x34(%rbp),%rax
cvtsi2ss %eax,%xmm0
movss  %xmm0,(%r15)
mov    -0x8(%rbp),%r15
xor    %eax,%eax
leaveq 
retq   
lea    -0x30(%rbp),%rax
mov    %rdx,-0x8(%rbp)
mov    %rax,%rdx
callq  173d0 <TIFFReadDirEntryCheckedLong8>
test   %eax,%eax
je     13cbd <TIFFReadDirEntryFloat+0x1bd>
leaveq 
retq   
lea    -0x28(%rbp),%rax
mov    %rdx,-0x8(%rbp)
mov    %rax,%rdx
callq  17480 <TIFFReadDirEntryCheckedSlong8>
test   %eax,%eax
je     13cf2 <TIFFReadDirEntryFloat+0x1f2>
leaveq 
retq   
lea    -0x20(%rbp),%rax
mov    %rdx,-0x8(%rbp)
mov    %rax,%rdx
callq  17530 <TIFFReadDirEntryCheckedRational>
test   %eax,%eax
je     13d07 <TIFFReadDirEntryFloat+0x207>
leaveq 
retq   
lea    -0x18(%rbp),%rax
mov    %rdx,-0x8(%rbp)
mov    %rax,%rdx
callq  17610 <TIFFReadDirEntryCheckedSrational>
test   %eax,%eax
je     13d1c <TIFFReadDirEntryFloat+0x21c>
leaveq 
retq   
callq  176f0 <TIFFReadDirEntryCheckedFloat>
xor    %eax,%eax
leaveq 
retq   
lea    -0x10(%rbp),%rax
mov    %rdx,-0x8(%rbp)
mov    %rax,%rdx
callq  17720 <TIFFReadDirEntryCheckedDouble>
test   %eax,%eax
je     13d31 <TIFFReadDirEntryFloat+0x231>
leaveq 
retq   
mov    -0x30(%rbp),%rax
movq   %rax,%xmm0
movdqa 0x40822(%rip),%xmm1        # 544f0 <module.110+0x191>
punpckldq %xmm1,%xmm0
movdqa 0x40826(%rip),%xmm1        # 54500 <module.110+0x1a1>
subpd  %xmm1,%xmm0
haddpd %xmm0,%xmm0
cvtsd2ss %xmm0,%xmm0
mov    -0x8(%rbp),%rax
movss  %xmm0,(%rax)
xor    %eax,%eax
leaveq 
retq   
mov    -0x28(%rbp),%rax
cvtsi2ss %rax,%xmm0
mov    -0x8(%rbp),%rax
movss  %xmm0,(%rax)
xor    %eax,%eax
leaveq 
retq   
movsd  -0x20(%rbp),%xmm0
cvtsd2ss %xmm0,%xmm0
mov    -0x8(%rbp),%rax
movss  %xmm0,(%rax)
xor    %eax,%eax
leaveq 
retq   
movsd  -0x18(%rbp),%xmm0
cvtsd2ss %xmm0,%xmm0
mov    -0x8(%rbp),%rax
movss  %xmm0,(%rax)
xor    %eax,%eax
leaveq 
retq   
mov    $0x4,%eax
movsd  -0x10(%rbp),%xmm1
movsd  0x407cd(%rip),%xmm0        # 54510 <module.110+0x1b1>
ucomisd %xmm0,%xmm1
jbe    13d4b <TIFFReadDirEntryFloat+0x24b>
leaveq 
retq   
movsd  0x407c5(%rip),%xmm0        # 54518 <module.110+0x1b9>
ucomisd %xmm0,%xmm1
jp     13d5d <TIFFReadDirEntryFloat+0x25d>
jae    13d5d <TIFFReadDirEntryFloat+0x25d>
leaveq 
retq   
cvtsd2ss %xmm1,%xmm0
mov    -0x8(%rbp),%rax
movss  %xmm0,(%rax)
xor    %eax,%eax
leaveq 
retq   
nopl   (%rax)

0000000000013d70 <TIFFReadDirEntryDouble>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    0x8(%rsi),%rax
cmp    $0x1,%rax
je     13d89 <TIFFReadDirEntryDouble+0x19>
mov    $0x1,%eax
leaveq 
retq   
mov    $0x2,%eax
movzwl 0x2(%rsi),%ecx
add    $0xffffffff,%ecx
cmp    $0x10,%ecx
jbe    13d9c <TIFFReadDirEntryDouble+0x2c>
leaveq 
retq   
lea    0x3f0c1(%rip),%r8        # 52e64 <reason.25+0xd3e>
movslq (%r8,%rcx,4),%rcx
add    %r8,%rcx
jmpq   *%rcx
leaveq 
retq   
lea    -0x2e(%rbp),%rax
mov    %r15,-0x8(%rbp)
mov    %rdx,%r15
mov    %rax,%rdx
callq  172f0 <TIFFReadDirEntryCheckedByte>
movzbl -0x2e(%rbp),%eax
movzbl %al,%eax
cvtsi2sd %rax,%xmm0
movsd  %xmm0,(%r15)
xor    %eax,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
lea    -0x2d(%rbp),%rax
mov    %r15,-0x8(%rbp)
mov    %rdx,%r15
mov    %rax,%rdx
callq  17300 <TIFFReadDirEntryCheckedSbyte>
movsbq -0x2d(%rbp),%rax
cvtsi2sd %eax,%xmm0
movsd  %xmm0,(%r15)
xor    %eax,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
lea    -0x2c(%rbp),%rax
mov    %r15,-0x8(%rbp)
mov    %rdx,%r15
mov    %rax,%rdx
callq  17310 <TIFFReadDirEntryCheckedShort>
movzwl -0x2c(%rbp),%eax
movzwl %ax,%eax
cvtsi2sd %rax,%xmm0
movsd  %xmm0,(%r15)
xor    %eax,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
lea    -0x2a(%rbp),%rax
mov    %r15,-0x8(%rbp)
mov    %rdx,%r15
mov    %rax,%rdx
callq  17340 <TIFFReadDirEntryCheckedSshort>
movswq -0x2a(%rbp),%rax
cvtsi2sd %eax,%xmm0
movsd  %xmm0,(%r15)
xor    %eax,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
lea    -0x28(%rbp),%rax
mov    %r15,-0x8(%rbp)
mov    %rdx,%r15
mov    %rax,%rdx
callq  17370 <TIFFReadDirEntryCheckedLong>
mov    -0x28(%rbp),%eax
mov    %eax,%eax
cvtsi2sd %rax,%xmm0
movsd  %xmm0,(%r15)
xor    %eax,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
lea    -0x24(%rbp),%rax
mov    %r15,-0x8(%rbp)
mov    %rdx,%r15
mov    %rax,%rdx
callq  173a0 <TIFFReadDirEntryCheckedSlong>
movslq -0x24(%rbp),%rax
cvtsi2sd %eax,%xmm0
movsd  %xmm0,(%r15)
xor    %eax,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
lea    -0x20(%rbp),%rax
mov    %rdx,-0x8(%rbp)
mov    %rax,%rdx
callq  173d0 <TIFFReadDirEntryCheckedLong8>
test   %eax,%eax
je     13f14 <TIFFReadDirEntryDouble+0x1a4>
leaveq 
retq   
lea    -0x18(%rbp),%rax
mov    %rdx,-0x8(%rbp)
mov    %rax,%rdx
callq  17480 <TIFFReadDirEntryCheckedSlong8>
test   %eax,%eax
je     13f45 <TIFFReadDirEntryDouble+0x1d5>
leaveq 
retq   
callq  17530 <TIFFReadDirEntryCheckedRational>
leaveq 
retq   
callq  17610 <TIFFReadDirEntryCheckedSrational>
leaveq 
retq   
lea    -0xc(%rbp),%rax
mov    %r15,-0x8(%rbp)
mov    %rdx,%r15
mov    %rax,%rdx
callq  176f0 <TIFFReadDirEntryCheckedFloat>
movss  -0xc(%rbp),%xmm0
cvtss2sd %xmm0,%xmm0
movsd  %xmm0,(%r15)
xor    %eax,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
callq  17720 <TIFFReadDirEntryCheckedDouble>
leaveq 
retq   
mov    -0x20(%rbp),%rax
movq   %rax,%xmm0
movdqa 0x405cb(%rip),%xmm1        # 544f0 <module.110+0x191>
punpckldq %xmm1,%xmm0
movdqa 0x405cf(%rip),%xmm1        # 54500 <module.110+0x1a1>
subpd  %xmm1,%xmm0
haddpd %xmm0,%xmm0
mov    -0x8(%rbp),%rax
movsd  %xmm0,(%rax)
xor    %eax,%eax
leaveq 
retq   
mov    -0x18(%rbp),%rax
cvtsi2sd %rax,%xmm0
mov    -0x8(%rbp),%rax
movsd  %xmm0,(%rax)
xor    %eax,%eax
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

0000000000013f60 <TIFFReadDirEntryIfd8>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    0x8(%rsi),%rax
cmp    $0x1,%rax
je     13f79 <TIFFReadDirEntryIfd8+0x19>
mov    $0x1,%eax
leaveq 
retq   
mov    $0x2,%eax
movzwl 0x2(%rsi),%ecx
cmp    $0xf,%cx
jbe    13f96 <TIFFReadDirEntryIfd8+0x36>
cmp    $0x10,%cx
je     13fa4 <TIFFReadDirEntryIfd8+0x44>
cmp    $0x12,%cx
je     13fa4 <TIFFReadDirEntryIfd8+0x44>
leaveq 
retq   
cmp    $0x4,%cx
je     13fab <TIFFReadDirEntryIfd8+0x4b>
cmp    $0xd,%cx
je     13fab <TIFFReadDirEntryIfd8+0x4b>
leaveq 
retq   
callq  173d0 <TIFFReadDirEntryCheckedLong8>
leaveq 
retq   
lea    -0xc(%rbp),%rax
mov    %r15,-0x8(%rbp)
mov    %rdx,%r15
mov    %rax,%rdx
callq  17370 <TIFFReadDirEntryCheckedLong>
mov    -0xc(%rbp),%eax
mov    %rax,(%r15)
xor    %eax,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
nopl   0x0(%rax)

0000000000013fd0 <TIFFReadDirEntryArray>:
push   %rbp
mov    %rsp,%rbp
mov    $0xffffffffffffffff,%r9
callq  1b790 <TIFFReadDirEntryArrayWithLimit>
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   (%rax)

0000000000013ff0 <TIFFReadDirEntryByteArray>:
push   %rbp
mov    %rsp,%rbp
sub    $0x90,%rsp
mov    $0x2,%eax
movzwl 0x2(%rsi),%ecx
add    $0xffffffff,%ecx
cmp    $0x10,%ecx
jbe    1400e <TIFFReadDirEntryByteArray+0x1e>
leaveq 
retq   
lea    0x3ee93(%rip),%r8        # 52ea8 <reason.25+0xd82>
movslq (%r8,%rcx,4),%rcx
add    %r8,%rcx
jmpq   *%rcx
leaveq 
retq   
lea    -0x8c(%rbp),%r10
mov    $0x1,%ecx
lea    -0x88(%rbp),%r8
mov    %rdi,%rax
mov    %rsi,%r9
mov    %r15,-0x70(%rbp)
mov    %rsi,-0x80(%rbp)
mov    %rdi,-0x78(%rbp)
mov    %r9,%rsi
mov    %rax,%rdi
mov    %rdx,%r15
mov    %r10,%rdx
callq  13fd0 <TIFFReadDirEntryArray>
test   %eax,%eax
jne    1408f <TIFFReadDirEntryByteArray+0x9f>
mov    -0x88(%rbp),%rsi
test   %rsi,%rsi
je     1408f <TIFFReadDirEntryByteArray+0x9f>
xor    %eax,%eax
mov    -0x80(%rbp),%rdx
movzwl 0x2(%rdx),%ecx
cmp    $0x5,%cx
jbe    1409c <TIFFReadDirEntryByteArray+0xac>
cmp    $0x6,%cx
jne    140b1 <TIFFReadDirEntryByteArray+0xc1>
mov    %r14,-0x80(%rbp)
mov    %r15,-0x78(%rbp)
mov    %rax,%r14
mov    %rsi,%r15
jmpq   1411e <TIFFReadDirEntryByteArray+0x12e>
movq   $0x0,(%r15)
mov    -0x70(%rbp),%r15
leaveq 
retq   
cmp    $0x1,%cx
je     140a8 <TIFFReadDirEntryByteArray+0xb8>
cmp    $0x2,%cx
jne    140b7 <TIFFReadDirEntryByteArray+0xc7>
mov    %rsi,(%r15)
mov    -0x70(%rbp),%r15
leaveq 
retq   
cmp    $0x7,%cx
je     140a8 <TIFFReadDirEntryByteArray+0xb8>
mov    -0x8c(%rbp),%edi
mov    %r15,-0x20(%rbp)
mov    %rdx,%r15
callq  8440 <_TIFFmalloc@plt>
test   %rax,%rax
je     14143 <TIFFReadDirEntryByteArray+0x153>
movzwl 0x2(%r15),%ecx
add    $0xfffffffd,%ecx
cmp    $0xe,%ecx
jbe    1415a <TIFFReadDirEntryByteArray+0x16a>
xor    %r15d,%r15d
mov    -0x88(%rbp),%rdi
mov    %r14,-0x80(%rbp)
mov    %rax,%r14
callq  8bb0 <_TIFFfree@plt>
test   %r15d,%r15d
jne    14172 <TIFFReadDirEntryByteArray+0x182>
mov    -0x20(%rbp),%rax
mov    %r14,(%rax)
xor    %eax,%eax
mov    -0x80(%rbp),%r14
mov    -0x70(%rbp),%r15
leaveq 
retq   
movsbq (%r15),%rdi
callq  177d0 <TIFFReadDirEntryCheckRangeByteSbyte>
test   %eax,%eax
jne    14187 <TIFFReadDirEntryByteArray+0x197>
add    $0x1,%r15
add    $0x1,%r14d
mov    -0x8c(%rbp),%eax
cmp    %r14d,%eax
ja     14109 <TIFFReadDirEntryByteArray+0x119>
mov    -0x88(%rbp),%rax
mov    -0x78(%rbp),%rcx
mov    %rax,(%rcx)
xor    %eax,%eax
mov    -0x80(%rbp),%r14
mov    -0x70(%rbp),%r15
leaveq 
retq   
mov    -0x88(%rbp),%rdi
callq  8bb0 <_TIFFfree@plt>
mov    $0x7,%eax
mov    -0x70(%rbp),%r15
leaveq 
retq   
lea    0x3ed8b(%rip),%rdx        # 52eec <reason.25+0xdc6>
movslq (%rdx,%rcx,4),%rcx
add    %rdx,%rcx
jmpq   *%rcx
xor    %r15d,%r15d
jmpq   140de <TIFFReadDirEntryByteArray+0xee>
mov    %r14,%rdi
callq  8bb0 <_TIFFfree@plt>
mov    %r15,%rax
mov    -0x80(%rbp),%r14
mov    -0x70(%rbp),%r15
leaveq 
retq   
mov    %rax,%r14
mov    -0x88(%rbp),%rdi
callq  8bb0 <_TIFFfree@plt>
mov    %r14,%rax
mov    -0x80(%rbp),%r14
mov    -0x70(%rbp),%r15
leaveq 
retq   
mov    -0x88(%rbp),%r15
mov    %r14,-0x80(%rbp)
mov    %rax,-0x8(%rbp)
mov    %rbx,-0x28(%rbp)
mov    %r12,-0x40(%rbp)
mov    %r13,-0x58(%rbp)
xor    %r12d,%r12d
mov    -0x78(%rbp),%rbx
jmpq   142cc <TIFFReadDirEntryByteArray+0x2dc>
mov    -0x88(%rbp),%r15
mov    %r14,-0x80(%rbp)
mov    %rax,-0x8(%rbp)
mov    %rbx,-0x28(%rbp)
mov    %r12,-0x40(%rbp)
mov    %r13,-0x58(%rbp)
xor    %r12d,%r12d
mov    -0x78(%rbp),%rbx
jmpq   14334 <TIFFReadDirEntryByteArray+0x344>
mov    -0x88(%rbp),%r15
mov    %r14,-0x80(%rbp)
mov    %rax,-0x10(%rbp)
mov    %rbx,-0x30(%rbp)
mov    %r12,-0x48(%rbp)
mov    %r13,-0x60(%rbp)
xor    %r12d,%r12d
mov    -0x78(%rbp),%rbx
jmpq   1439b <TIFFReadDirEntryByteArray+0x3ab>
mov    -0x88(%rbp),%r15
mov    %r14,-0x80(%rbp)
mov    %rax,-0x10(%rbp)
mov    %rbx,-0x30(%rbp)
mov    %r12,-0x48(%rbp)
mov    %r13,-0x60(%rbp)
xor    %r12d,%r12d
mov    -0x78(%rbp),%rbx
jmpq   14402 <TIFFReadDirEntryByteArray+0x412>
mov    -0x88(%rbp),%r15
mov    %r14,-0x80(%rbp)
mov    %rax,-0x18(%rbp)
mov    %rbx,-0x38(%rbp)
mov    %r12,-0x50(%rbp)
mov    %r13,-0x68(%rbp)
xor    %ebx,%ebx
mov    -0x78(%rbp),%r12
jmpq   1446a <TIFFReadDirEntryByteArray+0x47a>
mov    -0x88(%rbp),%r15
mov    %r14,-0x80(%rbp)
mov    %rax,-0x18(%rbp)
mov    %rbx,-0x38(%rbp)
mov    %r12,-0x50(%rbp)
mov    %r13,-0x68(%rbp)
xor    %ebx,%ebx
mov    -0x78(%rbp),%r12
jmpq   144d1 <TIFFReadDirEntryByteArray+0x4e1>
mov    0x10(%rbx),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
je     142a6 <TIFFReadDirEntryByteArray+0x2b6>
mov    %rax,%r13
mov    %r15,%rdi
callq  87c0 <TIFFSwabShort@plt>
mov    %r13,%rax
mov    %rax,%r14
movzwl (%r15),%r13d
mov    %r13,%rdi
callq  177f0 <TIFFReadDirEntryCheckRangeByteShort>
test   %eax,%eax
jne    144f7 <TIFFReadDirEntryByteArray+0x507>
mov    %r13b,(%r14)
add    $0x2,%r15
lea    0x1(%r14),%rax
add    $0x1,%r12d
mov    -0x8c(%rbp),%ecx
cmp    %r12d,%ecx
ja     1428b <TIFFReadDirEntryByteArray+0x29b>
mov    -0x58(%rbp),%r13
mov    -0x40(%rbp),%r12
mov    -0x28(%rbp),%rbx
mov    -0x8(%rbp),%rax
xor    %r15d,%r15d
mov    -0x80(%rbp),%r14
jmpq   140de <TIFFReadDirEntryByteArray+0xee>
mov    0x10(%rbx),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
je     1430e <TIFFReadDirEntryByteArray+0x31e>
mov    %rax,%r13
mov    %r15,%rdi
callq  87c0 <TIFFSwabShort@plt>
mov    %r13,%rax
mov    %rax,%r14
movswq (%r15),%r13
mov    %r13,%rdi
callq  17810 <TIFFReadDirEntryCheckRangeByteSshort>
test   %eax,%eax
jne    14513 <TIFFReadDirEntryByteArray+0x523>
mov    %r13b,(%r14)
add    $0x2,%r15
lea    0x1(%r14),%rax
add    $0x1,%r12d
mov    -0x8c(%rbp),%ecx
cmp    %r12d,%ecx
ja     142f3 <TIFFReadDirEntryByteArray+0x303>
mov    -0x58(%rbp),%r13
mov    -0x40(%rbp),%r12
mov    -0x28(%rbp),%rbx
mov    -0x8(%rbp),%rax
xor    %r15d,%r15d
mov    -0x80(%rbp),%r14
jmpq   140de <TIFFReadDirEntryByteArray+0xee>
mov    0x10(%rbx),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
je     14376 <TIFFReadDirEntryByteArray+0x386>
mov    %rax,%r13
mov    %r15,%rdi
callq  8480 <TIFFSwabLong@plt>
mov    %r13,%rax
mov    %rax,%r14
mov    (%r15),%r13d
mov    %r13,%rdi
callq  17830 <TIFFReadDirEntryCheckRangeByteLong>
test   %eax,%eax
jne    1452f <TIFFReadDirEntryByteArray+0x53f>
mov    %r13b,(%r14)
add    $0x4,%r15
lea    0x1(%r14),%rax
add    $0x1,%r12d
mov    -0x8c(%rbp),%ecx
cmp    %r12d,%ecx
ja     1435b <TIFFReadDirEntryByteArray+0x36b>
mov    -0x60(%rbp),%r13
mov    -0x48(%rbp),%r12
mov    -0x30(%rbp),%rbx
mov    -0x10(%rbp),%rax
xor    %r15d,%r15d
mov    -0x80(%rbp),%r14
jmpq   140de <TIFFReadDirEntryByteArray+0xee>
mov    0x10(%rbx),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
je     143dd <TIFFReadDirEntryByteArray+0x3ed>
mov    %rax,%r13
mov    %r15,%rdi
callq  8480 <TIFFSwabLong@plt>
mov    %r13,%rax
mov    %rax,%r14
movslq (%r15),%r13
mov    %r13,%rdi
callq  17850 <TIFFReadDirEntryCheckRangeByteSlong>
test   %eax,%eax
jne    1454b <TIFFReadDirEntryByteArray+0x55b>
mov    %r13b,(%r14)
add    $0x4,%r15
lea    0x1(%r14),%rax
add    $0x1,%r12d
mov    -0x8c(%rbp),%ecx
cmp    %r12d,%ecx
ja     143c2 <TIFFReadDirEntryByteArray+0x3d2>
mov    -0x60(%rbp),%r13
mov    -0x48(%rbp),%r12
mov    -0x30(%rbp),%rbx
mov    -0x10(%rbp),%rax
xor    %r15d,%r15d
mov    -0x80(%rbp),%r14
jmpq   140de <TIFFReadDirEntryByteArray+0xee>
mov    0x10(%r12),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
je     14446 <TIFFReadDirEntryByteArray+0x456>
mov    %rax,%r13
mov    %r15,%rdi
callq  8730 <TIFFSwabLong8@plt>
mov    %r13,%rax
mov    %rax,%r14
mov    (%r15),%r13
mov    %r13,%rdi
callq  17870 <TIFFReadDirEntryCheckRangeByteLong8>
test   %eax,%eax
jne    14567 <TIFFReadDirEntryByteArray+0x577>
mov    %r13b,(%r14)
add    $0x8,%r15
lea    0x1(%r14),%rax
add    $0x1,%ebx
mov    -0x8c(%rbp),%ecx
cmp    %ebx,%ecx
ja     14429 <TIFFReadDirEntryByteArray+0x439>
mov    -0x68(%rbp),%r13
mov    -0x50(%rbp),%r12
mov    -0x38(%rbp),%rbx
mov    -0x18(%rbp),%rax
xor    %r15d,%r15d
mov    -0x80(%rbp),%r14
jmpq   140de <TIFFReadDirEntryByteArray+0xee>
mov    0x10(%r12),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
je     144ad <TIFFReadDirEntryByteArray+0x4bd>
mov    %rax,%r13
mov    %r15,%rdi
callq  8730 <TIFFSwabLong8@plt>
mov    %r13,%rax
mov    %rax,%r14
mov    (%r15),%r13
mov    %r13,%rdi
callq  17890 <TIFFReadDirEntryCheckRangeByteSlong8>
test   %eax,%eax
jne    14583 <TIFFReadDirEntryByteArray+0x593>
mov    %r13b,(%r14)
add    $0x8,%r15
lea    0x1(%r14),%rax
add    $0x1,%ebx
mov    -0x8c(%rbp),%ecx
cmp    %ebx,%ecx
ja     14490 <TIFFReadDirEntryByteArray+0x4a0>
mov    -0x68(%rbp),%r13
mov    -0x50(%rbp),%r12
mov    -0x38(%rbp),%rbx
mov    -0x18(%rbp),%rax
xor    %r15d,%r15d
mov    -0x80(%rbp),%r14
jmpq   140de <TIFFReadDirEntryByteArray+0xee>
mov    %rax,%r15
mov    -0x58(%rbp),%r13
mov    -0x40(%rbp),%r12
mov    -0x28(%rbp),%rbx
mov    -0x8(%rbp),%rax
mov    -0x80(%rbp),%r14
jmpq   140de <TIFFReadDirEntryByteArray+0xee>
mov    %rax,%r15
mov    -0x58(%rbp),%r13
mov    -0x40(%rbp),%r12
mov    -0x28(%rbp),%rbx
mov    -0x8(%rbp),%rax
mov    -0x80(%rbp),%r14
jmpq   140de <TIFFReadDirEntryByteArray+0xee>
mov    %rax,%r15
mov    -0x60(%rbp),%r13
mov    -0x48(%rbp),%r12
mov    -0x30(%rbp),%rbx
mov    -0x10(%rbp),%rax
mov    -0x80(%rbp),%r14
jmpq   140de <TIFFReadDirEntryByteArray+0xee>
mov    %rax,%r15
mov    -0x60(%rbp),%r13
mov    -0x48(%rbp),%r12
mov    -0x30(%rbp),%rbx
mov    -0x10(%rbp),%rax
mov    -0x80(%rbp),%r14
jmpq   140de <TIFFReadDirEntryByteArray+0xee>
mov    %rax,%r15
mov    -0x68(%rbp),%r13
mov    -0x50(%rbp),%r12
mov    -0x38(%rbp),%rbx
mov    -0x18(%rbp),%rax
mov    -0x80(%rbp),%r14
jmpq   140de <TIFFReadDirEntryByteArray+0xee>
mov    %rax,%r15
mov    -0x68(%rbp),%r13
mov    -0x50(%rbp),%r12
mov    -0x38(%rbp),%rbx
mov    -0x18(%rbp),%rax
mov    -0x80(%rbp),%r14
jmpq   140de <TIFFReadDirEntryByteArray+0xee>
nop

00000000000145a0 <TIFFReadDirEntrySbyteArray>:
push   %rbp
mov    %rsp,%rbp
sub    $0x90,%rsp
mov    $0x2,%eax
movzwl 0x2(%rsi),%ecx
add    $0xffffffff,%ecx
cmp    $0x10,%ecx
jbe    145be <TIFFReadDirEntrySbyteArray+0x1e>
leaveq 
retq   
lea    0x3e963(%rip),%r8        # 52f28 <reason.25+0xe02>
movslq (%r8,%rcx,4),%rcx
add    %r8,%rcx
jmpq   *%rcx
leaveq 
retq   
lea    -0x8c(%rbp),%r10
mov    $0x1,%ecx
lea    -0x88(%rbp),%r8
mov    %rdi,%rax
mov    %rsi,%r9
mov    %r15,-0x70(%rbp)
mov    %rsi,-0x80(%rbp)
mov    %rdi,-0x78(%rbp)
mov    %r9,%rsi
mov    %rax,%rdi
mov    %rdx,%r15
mov    %r10,%rdx
callq  13fd0 <TIFFReadDirEntryArray>
test   %eax,%eax
jne    14645 <TIFFReadDirEntrySbyteArray+0xa5>
mov    -0x88(%rbp),%rdx
test   %rdx,%rdx
je     14645 <TIFFReadDirEntrySbyteArray+0xa5>
xor    %eax,%eax
mov    -0x80(%rbp),%rsi
movzwl 0x2(%rsi),%ecx
cmp    $0x5,%cx
jbe    14652 <TIFFReadDirEntrySbyteArray+0xb2>
cmp    $0x6,%cx
je     14668 <TIFFReadDirEntrySbyteArray+0xc8>
cmp    $0x7,%cx
jne    14671 <TIFFReadDirEntrySbyteArray+0xd1>
mov    %r15,-0x78(%rbp)
mov    %r14,-0x80(%rbp)
mov    %rax,%r14
mov    %rdx,%r15
jmpq   146d8 <TIFFReadDirEntrySbyteArray+0x138>
movq   $0x0,(%r15)
mov    -0x70(%rbp),%r15
leaveq 
retq   
cmp    $0x1,%cx
jne    14671 <TIFFReadDirEntrySbyteArray+0xd1>
mov    %r15,-0x78(%rbp)
mov    %r14,-0x80(%rbp)
mov    %rax,%r14
mov    %rdx,%r15
jmp    146d8 <TIFFReadDirEntrySbyteArray+0x138>
mov    %rdx,(%r15)
mov    -0x70(%rbp),%r15
leaveq 
retq   
mov    -0x8c(%rbp),%edi
mov    %r15,-0x20(%rbp)
mov    %rsi,%r15
callq  8440 <_TIFFmalloc@plt>
test   %rax,%rax
je     146fd <TIFFReadDirEntrySbyteArray+0x15d>
movzwl 0x2(%r15),%ecx
add    $0xfffffffd,%ecx
cmp    $0xe,%ecx
jbe    14714 <TIFFReadDirEntrySbyteArray+0x174>
xor    %r15d,%r15d
mov    -0x88(%rbp),%rdi
mov    %r14,-0x80(%rbp)
mov    %rax,%r14
callq  8bb0 <_TIFFfree@plt>
test   %r15d,%r15d
jne    1472c <TIFFReadDirEntrySbyteArray+0x18c>
mov    -0x20(%rbp),%rax
mov    %r14,(%rax)
mov    -0x80(%rbp),%r14
xor    %eax,%eax
mov    -0x70(%rbp),%r15
leaveq 
retq   
movzbl (%r15),%edi
callq  178b0 <TIFFReadDirEntryCheckRangeSbyteByte>
test   %eax,%eax
jne    14741 <TIFFReadDirEntrySbyteArray+0x1a1>
add    $0x1,%r15
add    $0x1,%r14d
mov    -0x8c(%rbp),%eax
cmp    %r14d,%eax
ja     146c3 <TIFFReadDirEntrySbyteArray+0x123>
mov    -0x88(%rbp),%rax
mov    -0x78(%rbp),%rcx
mov    %rax,(%rcx)
mov    -0x80(%rbp),%r14
xor    %eax,%eax
mov    -0x70(%rbp),%r15
leaveq 
retq   
mov    -0x88(%rbp),%rdi
callq  8bb0 <_TIFFfree@plt>
mov    $0x7,%eax
mov    -0x70(%rbp),%r15
leaveq 
retq   
lea    0x3e851(%rip),%rdx        # 52f6c <reason.25+0xe46>
movslq (%rdx,%rcx,4),%rcx
add    %rdx,%rcx
jmpq   *%rcx
xor    %r15d,%r15d
jmpq   14698 <TIFFReadDirEntrySbyteArray+0xf8>
mov    %r14,%rdi
callq  8bb0 <_TIFFfree@plt>
mov    %r15,%rax
mov    -0x80(%rbp),%r14
mov    -0x70(%rbp),%r15
leaveq 
retq   
mov    %rax,%r14
mov    -0x88(%rbp),%rdi
callq  8bb0 <_TIFFfree@plt>
mov    %r14,%rax
mov    -0x80(%rbp),%r14
mov    -0x70(%rbp),%r15
leaveq 
retq   
mov    -0x88(%rbp),%r15
mov    %r14,-0x80(%rbp)
mov    %rax,-0x8(%rbp)
mov    %rbx,-0x28(%rbp)
mov    %r12,-0x40(%rbp)
mov    %r13,-0x58(%rbp)
xor    %r12d,%r12d
mov    -0x78(%rbp),%rbx
jmpq   14886 <TIFFReadDirEntrySbyteArray+0x2e6>
mov    -0x88(%rbp),%r15
mov    %r14,-0x80(%rbp)
mov    %rax,-0x8(%rbp)
mov    %rbx,-0x28(%rbp)
mov    %r12,-0x40(%rbp)
mov    %r13,-0x58(%rbp)
xor    %r12d,%r12d
mov    -0x78(%rbp),%rbx
jmpq   148ee <TIFFReadDirEntrySbyteArray+0x34e>
mov    -0x88(%rbp),%r15
mov    %r14,-0x80(%rbp)
mov    %rax,-0x10(%rbp)
mov    %rbx,-0x30(%rbp)
mov    %r12,-0x48(%rbp)
mov    %r13,-0x60(%rbp)
xor    %r12d,%r12d
mov    -0x78(%rbp),%rbx
jmpq   14955 <TIFFReadDirEntrySbyteArray+0x3b5>
mov    -0x88(%rbp),%r15
mov    %r14,-0x80(%rbp)
mov    %rax,-0x10(%rbp)
mov    %rbx,-0x30(%rbp)
mov    %r12,-0x48(%rbp)
mov    %r13,-0x60(%rbp)
xor    %r12d,%r12d
mov    -0x78(%rbp),%rbx
jmpq   149bc <TIFFReadDirEntrySbyteArray+0x41c>
mov    -0x88(%rbp),%r15
mov    %r14,-0x80(%rbp)
mov    %rax,-0x18(%rbp)
mov    %rbx,-0x38(%rbp)
mov    %r12,-0x50(%rbp)
mov    %r13,-0x68(%rbp)
xor    %ebx,%ebx
mov    -0x78(%rbp),%r12
jmpq   14a24 <TIFFReadDirEntrySbyteArray+0x484>
mov    -0x88(%rbp),%r15
mov    %r14,-0x80(%rbp)
mov    %rax,-0x18(%rbp)
mov    %rbx,-0x38(%rbp)
mov    %r12,-0x50(%rbp)
mov    %r13,-0x68(%rbp)
xor    %ebx,%ebx
mov    -0x78(%rbp),%r12
jmpq   14a8b <TIFFReadDirEntrySbyteArray+0x4eb>
mov    0x10(%rbx),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
je     14860 <TIFFReadDirEntrySbyteArray+0x2c0>
mov    %rax,%r13
mov    %r15,%rdi
callq  87c0 <TIFFSwabShort@plt>
mov    %r13,%rax
mov    %rax,%r14
movzwl (%r15),%r13d
mov    %r13,%rdi
callq  178d0 <TIFFReadDirEntryCheckRangeSbyteShort>
test   %eax,%eax
jne    14ab1 <TIFFReadDirEntrySbyteArray+0x511>
mov    %r13b,(%r14)
add    $0x2,%r15
lea    0x1(%r14),%rax
add    $0x1,%r12d
mov    -0x8c(%rbp),%ecx
cmp    %r12d,%ecx
ja     14845 <TIFFReadDirEntrySbyteArray+0x2a5>
mov    -0x58(%rbp),%r13
mov    -0x40(%rbp),%r12
mov    -0x28(%rbp),%rbx
mov    -0x8(%rbp),%rax
mov    -0x80(%rbp),%r14
xor    %r15d,%r15d
jmpq   14698 <TIFFReadDirEntrySbyteArray+0xf8>
mov    0x10(%rbx),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
je     148c8 <TIFFReadDirEntrySbyteArray+0x328>
mov    %rax,%r13
mov    %r15,%rdi
callq  87c0 <TIFFSwabShort@plt>
mov    %r13,%rax
mov    %rax,%r14
movswq (%r15),%r13
mov    %r13,%rdi
callq  178f0 <TIFFReadDirEntryCheckRangeSbyteSshort>
test   %eax,%eax
jne    14acd <TIFFReadDirEntrySbyteArray+0x52d>
mov    %r13b,(%r14)
add    $0x2,%r15
lea    0x1(%r14),%rax
add    $0x1,%r12d
mov    -0x8c(%rbp),%ecx
cmp    %r12d,%ecx
ja     148ad <TIFFReadDirEntrySbyteArray+0x30d>
mov    -0x58(%rbp),%r13
mov    -0x40(%rbp),%r12
mov    -0x28(%rbp),%rbx
mov    -0x8(%rbp),%rax
mov    -0x80(%rbp),%r14
xor    %r15d,%r15d
jmpq   14698 <TIFFReadDirEntrySbyteArray+0xf8>
mov    0x10(%rbx),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
je     14930 <TIFFReadDirEntrySbyteArray+0x390>
mov    %rax,%r13
mov    %r15,%rdi
callq  8480 <TIFFSwabLong@plt>
mov    %r13,%rax
mov    %rax,%r14
mov    (%r15),%r13d
mov    %r13,%rdi
callq  17910 <TIFFReadDirEntryCheckRangeSbyteLong>
test   %eax,%eax
jne    14ae9 <TIFFReadDirEntrySbyteArray+0x549>
mov    %r13b,(%r14)
add    $0x4,%r15
lea    0x1(%r14),%rax
add    $0x1,%r12d
mov    -0x8c(%rbp),%ecx
cmp    %r12d,%ecx
ja     14915 <TIFFReadDirEntrySbyteArray+0x375>
mov    -0x60(%rbp),%r13
mov    -0x48(%rbp),%r12
mov    -0x30(%rbp),%rbx
mov    -0x10(%rbp),%rax
mov    -0x80(%rbp),%r14
xor    %r15d,%r15d
jmpq   14698 <TIFFReadDirEntrySbyteArray+0xf8>
mov    0x10(%rbx),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
je     14997 <TIFFReadDirEntrySbyteArray+0x3f7>
mov    %rax,%r13
mov    %r15,%rdi
callq  8480 <TIFFSwabLong@plt>
mov    %r13,%rax
mov    %rax,%r14
movslq (%r15),%r13
mov    %r13,%rdi
callq  17930 <TIFFReadDirEntryCheckRangeSbyteSlong>
test   %eax,%eax
jne    14b05 <TIFFReadDirEntrySbyteArray+0x565>
mov    %r13b,(%r14)
add    $0x4,%r15
lea    0x1(%r14),%rax
add    $0x1,%r12d
mov    -0x8c(%rbp),%ecx
cmp    %r12d,%ecx
ja     1497c <TIFFReadDirEntrySbyteArray+0x3dc>
mov    -0x60(%rbp),%r13
mov    -0x48(%rbp),%r12
mov    -0x30(%rbp),%rbx
mov    -0x10(%rbp),%rax
mov    -0x80(%rbp),%r14
xor    %r15d,%r15d
jmpq   14698 <TIFFReadDirEntrySbyteArray+0xf8>
mov    0x10(%r12),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
je     14a00 <TIFFReadDirEntrySbyteArray+0x460>
mov    %rax,%r13
mov    %r15,%rdi
callq  8730 <TIFFSwabLong8@plt>
mov    %r13,%rax
mov    %rax,%r14
mov    (%r15),%r13
mov    %r13,%rdi
callq  17950 <TIFFReadDirEntryCheckRangeSbyteLong8>
test   %eax,%eax
jne    14b21 <TIFFReadDirEntrySbyteArray+0x581>
mov    %r13b,(%r14)
add    $0x8,%r15
lea    0x1(%r14),%rax
add    $0x1,%ebx
mov    -0x8c(%rbp),%ecx
cmp    %ebx,%ecx
ja     149e3 <TIFFReadDirEntrySbyteArray+0x443>
mov    -0x68(%rbp),%r13
mov    -0x50(%rbp),%r12
mov    -0x38(%rbp),%rbx
mov    -0x18(%rbp),%rax
mov    -0x80(%rbp),%r14
xor    %r15d,%r15d
jmpq   14698 <TIFFReadDirEntrySbyteArray+0xf8>
mov    0x10(%r12),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
je     14a67 <TIFFReadDirEntrySbyteArray+0x4c7>
mov    %rax,%r13
mov    %r15,%rdi
callq  8730 <TIFFSwabLong8@plt>
mov    %r13,%rax
mov    %rax,%r14
mov    (%r15),%r13
mov    %r13,%rdi
callq  17970 <TIFFReadDirEntryCheckRangeSbyteSlong8>
test   %eax,%eax
jne    14b3d <TIFFReadDirEntrySbyteArray+0x59d>
mov    %r13b,(%r14)
add    $0x8,%r15
lea    0x1(%r14),%rax
add    $0x1,%ebx
mov    -0x8c(%rbp),%ecx
cmp    %ebx,%ecx
ja     14a4a <TIFFReadDirEntrySbyteArray+0x4aa>
mov    -0x68(%rbp),%r13
mov    -0x50(%rbp),%r12
mov    -0x38(%rbp),%rbx
mov    -0x18(%rbp),%rax
mov    -0x80(%rbp),%r14
xor    %r15d,%r15d
jmpq   14698 <TIFFReadDirEntrySbyteArray+0xf8>
mov    %rax,%r15
mov    -0x58(%rbp),%r13
mov    -0x40(%rbp),%r12
mov    -0x28(%rbp),%rbx
mov    -0x8(%rbp),%rax
mov    -0x80(%rbp),%r14
jmpq   14698 <TIFFReadDirEntrySbyteArray+0xf8>
mov    %rax,%r15
mov    -0x58(%rbp),%r13
mov    -0x40(%rbp),%r12
mov    -0x28(%rbp),%rbx
mov    -0x8(%rbp),%rax
mov    -0x80(%rbp),%r14
jmpq   14698 <TIFFReadDirEntrySbyteArray+0xf8>
mov    %rax,%r15
mov    -0x60(%rbp),%r13
mov    -0x48(%rbp),%r12
mov    -0x30(%rbp),%rbx
mov    -0x10(%rbp),%rax
mov    -0x80(%rbp),%r14
jmpq   14698 <TIFFReadDirEntrySbyteArray+0xf8>
mov    %rax,%r15
mov    -0x60(%rbp),%r13
mov    -0x48(%rbp),%r12
mov    -0x30(%rbp),%rbx
mov    -0x10(%rbp),%rax
mov    -0x80(%rbp),%r14
jmpq   14698 <TIFFReadDirEntrySbyteArray+0xf8>
mov    %rax,%r15
mov    -0x68(%rbp),%r13
mov    -0x50(%rbp),%r12
mov    -0x38(%rbp),%rbx
mov    -0x18(%rbp),%rax
mov    -0x80(%rbp),%r14
jmpq   14698 <TIFFReadDirEntrySbyteArray+0xf8>
mov    %rax,%r15
mov    -0x68(%rbp),%r13
mov    -0x50(%rbp),%r12
mov    -0x38(%rbp),%rbx
mov    -0x18(%rbp),%rax
mov    -0x80(%rbp),%r14
jmpq   14698 <TIFFReadDirEntrySbyteArray+0xf8>
nopl   0x0(%rax)

0000000000014b60 <TIFFReadDirEntryShortArray>:
push   %rbp
mov    %rsp,%rbp
sub    $0x80,%rsp
mov    $0x2,%eax
movzwl 0x2(%rsi),%ecx
add    $0xffffffff,%ecx
cmp    $0x10,%ecx
jbe    14b7e <TIFFReadDirEntryShortArray+0x1e>
leaveq 
retq   
lea    0x3e423(%rip),%r8        # 52fa8 <reason.25+0xe82>
movslq (%r8,%rcx,4),%rcx
add    %r8,%rcx
jmpq   *%rcx
leaveq 
retq   
lea    -0x7c(%rbp),%r10
lea    -0x78(%rbp),%r8
mov    %rdi,%rcx
mov    %rsi,%r9
mov    %r15,-0x60(%rbp)
mov    %rsi,-0x70(%rbp)
mov    %rdi,-0x68(%rbp)
mov    %r9,%rsi
mov    %rcx,%rdi
mov    %rax,%rcx
mov    %rdx,%r15
mov    %r10,%rdx
callq  13fd0 <TIFFReadDirEntryArray>
test   %eax,%eax
jne    14c41 <TIFFReadDirEntryShortArray+0xe1>
mov    -0x78(%rbp),%rdi
test   %rdi,%rdi
je     14c41 <TIFFReadDirEntryShortArray+0xe1>
xor    %eax,%eax
mov    -0x70(%rbp),%rdx
movzwl 0x2(%rdx),%ecx
cmp    $0x3,%cx
je     14c4e <TIFFReadDirEntryShortArray+0xee>
cmp    $0x8,%cx
je     14c68 <TIFFReadDirEntryShortArray+0x108>
mov    -0x7c(%rbp),%eax
add    %eax,%eax
mov    %eax,%edi
mov    %r15,-0x20(%rbp)
mov    %rdx,%r15
callq  8440 <_TIFFmalloc@plt>
test   %rax,%rax
je     14c83 <TIFFReadDirEntryShortArray+0x123>
movzwl 0x2(%r15),%ecx
add    $0xffffffff,%ecx
cmp    $0x10,%ecx
jbe    14c97 <TIFFReadDirEntryShortArray+0x137>
xor    %r15d,%r15d
mov    -0x78(%rbp),%rdi
mov    %r14,-0x70(%rbp)
mov    %rax,%r14
callq  8bb0 <_TIFFfree@plt>
test   %r15d,%r15d
jne    14caf <TIFFReadDirEntryShortArray+0x14f>
mov    -0x20(%rbp),%rax
mov    %r14,(%rax)
mov    -0x70(%rbp),%r14
xor    %eax,%eax
mov    -0x60(%rbp),%r15
leaveq 
retq   
movq   $0x0,(%r15)
mov    -0x60(%rbp),%r15
leaveq 
retq   
mov    %rdi,(%r15)
mov    -0x68(%rbp),%rcx
mov    0x10(%rcx),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
jne    14cc4 <TIFFReadDirEntryShortArray+0x164>
mov    -0x60(%rbp),%r15
leaveq 
retq   
mov    %r15,-0x8(%rbp)
mov    %r14,-0x70(%rbp)
mov    %r13,-0x20(%rbp)
mov    %rax,%r13
mov    %rdi,%r14
mov    -0x68(%rbp),%r15
jmpq   14d06 <TIFFReadDirEntryShortArray+0x1a6>
mov    -0x78(%rbp),%rdi
callq  8bb0 <_TIFFfree@plt>
mov    $0x7,%eax
mov    -0x60(%rbp),%r15
leaveq 
retq   
lea    0x3e34e(%rip),%rdx        # 52fec <reason.25+0xec6>
movslq (%rdx,%rcx,4),%rcx
add    %rdx,%rcx
jmpq   *%rcx
xor    %r15d,%r15d
jmpq   14c15 <TIFFReadDirEntryShortArray+0xb5>
mov    %r14,%rdi
callq  8bb0 <_TIFFfree@plt>
mov    %r15,%rax
mov    -0x70(%rbp),%r14
mov    -0x60(%rbp),%r15
leaveq 
retq   
mov    %rax,%r15
mov    -0x7c(%rbp),%esi
callq  83d0 <TIFFSwabArrayOfShort@plt>
mov    %r15,%rax
mov    -0x60(%rbp),%r15
leaveq 
retq   
mov    0x10(%r15),%eax
and    $0x80,%eax
test   %eax,%eax
je     14ced <TIFFReadDirEntryShortArray+0x18d>
mov    %r14,%rdi
callq  87c0 <TIFFSwabShort@plt>
movswq (%r14),%rdi
callq  179b0 <TIFFReadDirEntryCheckRangeShortSshort>
test   %eax,%eax
jne    14ddf <TIFFReadDirEntryShortArray+0x27f>
add    $0x2,%r14
add    $0x1,%r13d
mov    -0x7c(%rbp),%eax
cmp    %r13d,%eax
ja     14cd8 <TIFFReadDirEntryShortArray+0x178>
mov    -0x78(%rbp),%rax
mov    -0x8(%rbp),%rcx
mov    %rax,(%rcx)
mov    -0x20(%rbp),%r13
mov    -0x70(%rbp),%r14
xor    %eax,%eax
mov    -0x60(%rbp),%r15
leaveq 
retq   
mov    -0x78(%rbp),%rcx
xor    %edx,%edx
mov    %rax,%rsi
jmpq   14e0d <TIFFReadDirEntryShortArray+0x2ad>
mov    -0x78(%rbp),%r15
mov    %r14,-0x70(%rbp)
mov    %r13,-0x68(%rbp)
mov    %rax,-0x10(%rbp)
mov    %r12,-0x38(%rbp)
xor    %r12d,%r12d
jmpq   14e43 <TIFFReadDirEntryShortArray+0x2e3>
mov    -0x78(%rbp),%r15
mov    %r14,-0x70(%rbp)
mov    %r13,-0x50(%rbp)
mov    %rax,-0x10(%rbp)
mov    %r12,-0x40(%rbp)
mov    %rbx,-0x28(%rbp)
xor    %ebx,%ebx
mov    -0x68(%rbp),%r12
jmpq   14ea5 <TIFFReadDirEntryShortArray+0x345>
mov    -0x78(%rbp),%r15
mov    %r14,-0x70(%rbp)
mov    %r13,-0x50(%rbp)
mov    %rax,-0x18(%rbp)
mov    %r12,-0x40(%rbp)
mov    %rbx,-0x30(%rbp)
xor    %ebx,%ebx
mov    -0x68(%rbp),%r12
jmpq   14f0a <TIFFReadDirEntryShortArray+0x3aa>
mov    -0x78(%rbp),%r15
mov    %r14,-0x70(%rbp)
mov    %r13,-0x58(%rbp)
mov    %rax,-0x18(%rbp)
mov    %r12,-0x48(%rbp)
mov    %rbx,-0x30(%rbp)
xor    %ebx,%ebx
mov    -0x68(%rbp),%r12
jmpq   14f6f <TIFFReadDirEntryShortArray+0x40f>
mov    -0x78(%rbp),%r15
mov    %r14,-0x70(%rbp)
mov    %r13,-0x58(%rbp)
mov    %rax,-0x28(%rbp)
mov    %r12,-0x48(%rbp)
mov    %rbx,-0x38(%rbp)
xor    %ebx,%ebx
mov    -0x68(%rbp),%r12
jmpq   14fd4 <TIFFReadDirEntryShortArray+0x474>
mov    %rax,%r15
mov    -0x78(%rbp),%rdi
callq  8bb0 <_TIFFfree@plt>
mov    %r15,%rax
mov    -0x20(%rbp),%r13
mov    -0x70(%rbp),%r14
mov    -0x60(%rbp),%r15
leaveq 
retq   
movzbl (%rcx),%edi
mov    %di,(%rsi)
add    $0x1,%rcx
add    $0x2,%rsi
add    $0x1,%edx
mov    -0x7c(%rbp),%edi
cmp    %edx,%edi
ja     14dfc <TIFFReadDirEntryShortArray+0x29c>
xor    %r15d,%r15d
jmpq   14c15 <TIFFReadDirEntryShortArray+0xb5>
mov    %rax,%r14
movsbq (%r15),%r13
mov    %r13,%rdi
callq  17990 <TIFFReadDirEntryCheckRangeShortSbyte>
test   %eax,%eax
jne    14ff7 <TIFFReadDirEntryShortArray+0x497>
mov    %r13w,(%r14)
add    $0x1,%r15
lea    0x2(%r14),%rax
add    $0x1,%r12d
mov    -0x7c(%rbp),%ecx
cmp    %r12d,%ecx
ja     14e1c <TIFFReadDirEntryShortArray+0x2bc>
mov    -0x38(%rbp),%r12
mov    -0x10(%rbp),%rax
mov    -0x68(%rbp),%r13
mov    -0x70(%rbp),%r14
xor    %r15d,%r15d
jmpq   14c15 <TIFFReadDirEntryShortArray+0xb5>
mov    0x10(%r12),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
je     14e80 <TIFFReadDirEntryShortArray+0x320>
mov    %rax,%r13
mov    %r15,%rdi
callq  8480 <TIFFSwabLong@plt>
mov    %r13,%rax
mov    %rax,%r14
mov    (%r15),%r13d
mov    %r13,%rdi
callq  179d0 <TIFFReadDirEntryCheckRangeShortLong>
test   %eax,%eax
jne    1500f <TIFFReadDirEntryShortArray+0x4af>
mov    %r13w,(%r14)
add    $0x4,%r15
lea    0x2(%r14),%rax
add    $0x1,%ebx
mov    -0x7c(%rbp),%ecx
cmp    %ebx,%ecx
ja     14e63 <TIFFReadDirEntryShortArray+0x303>
mov    -0x28(%rbp),%rbx
mov    -0x40(%rbp),%r12
mov    -0x10(%rbp),%rax
mov    -0x50(%rbp),%r13
mov    -0x70(%rbp),%r14
xor    %r15d,%r15d
jmpq   14c15 <TIFFReadDirEntryShortArray+0xb5>
mov    0x10(%r12),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
je     14ee5 <TIFFReadDirEntryShortArray+0x385>
mov    %rax,%r13
mov    %r15,%rdi
callq  8480 <TIFFSwabLong@plt>
mov    %r13,%rax
mov    %rax,%r14
movslq (%r15),%r13
mov    %r13,%rdi
callq  179f0 <TIFFReadDirEntryCheckRangeShortSlong>
test   %eax,%eax
jne    1502b <TIFFReadDirEntryShortArray+0x4cb>
mov    %r13w,(%r14)
add    $0x4,%r15
lea    0x2(%r14),%rax
add    $0x1,%ebx
mov    -0x7c(%rbp),%ecx
cmp    %ebx,%ecx
ja     14ec8 <TIFFReadDirEntryShortArray+0x368>
mov    -0x30(%rbp),%rbx
mov    -0x40(%rbp),%r12
mov    -0x18(%rbp),%rax
mov    -0x50(%rbp),%r13
mov    -0x70(%rbp),%r14
xor    %r15d,%r15d
jmpq   14c15 <TIFFReadDirEntryShortArray+0xb5>
mov    0x10(%r12),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
je     14f4a <TIFFReadDirEntryShortArray+0x3ea>
mov    %rax,%r13
mov    %r15,%rdi
callq  8730 <TIFFSwabLong8@plt>
mov    %r13,%rax
mov    %rax,%r14
mov    (%r15),%r13
mov    %r13,%rdi
callq  17a10 <TIFFReadDirEntryCheckRangeShortLong8>
test   %eax,%eax
jne    15047 <TIFFReadDirEntryShortArray+0x4e7>
mov    %r13w,(%r14)
add    $0x8,%r15
lea    0x2(%r14),%rax
add    $0x1,%ebx
mov    -0x7c(%rbp),%ecx
cmp    %ebx,%ecx
ja     14f2d <TIFFReadDirEntryShortArray+0x3cd>
mov    -0x30(%rbp),%rbx
mov    -0x48(%rbp),%r12
mov    -0x18(%rbp),%rax
mov    -0x58(%rbp),%r13
mov    -0x70(%rbp),%r14
xor    %r15d,%r15d
jmpq   14c15 <TIFFReadDirEntryShortArray+0xb5>
mov    0x10(%r12),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
je     14faf <TIFFReadDirEntryShortArray+0x44f>
mov    %rax,%r13
mov    %r15,%rdi
callq  8730 <TIFFSwabLong8@plt>
mov    %r13,%rax
mov    %rax,%r14
mov    (%r15),%r13
mov    %r13,%rdi
callq  17a30 <TIFFReadDirEntryCheckRangeShortSlong8>
test   %eax,%eax
jne    15063 <TIFFReadDirEntryShortArray+0x503>
mov    %r13w,(%r14)
add    $0x8,%r15
lea    0x2(%r14),%rax
add    $0x1,%ebx
mov    -0x7c(%rbp),%ecx
cmp    %ebx,%ecx
ja     14f92 <TIFFReadDirEntryShortArray+0x432>
mov    -0x38(%rbp),%rbx
mov    -0x48(%rbp),%r12
mov    -0x28(%rbp),%rax
mov    -0x58(%rbp),%r13
mov    -0x70(%rbp),%r14
xor    %r15d,%r15d
jmpq   14c15 <TIFFReadDirEntryShortArray+0xb5>
mov    %rax,%r15
mov    -0x38(%rbp),%r12
mov    -0x10(%rbp),%rax
mov    -0x68(%rbp),%r13
mov    -0x70(%rbp),%r14
jmpq   14c15 <TIFFReadDirEntryShortArray+0xb5>
mov    %rax,%r15
mov    -0x28(%rbp),%rbx
mov    -0x40(%rbp),%r12
mov    -0x10(%rbp),%rax
mov    -0x50(%rbp),%r13
mov    -0x70(%rbp),%r14
jmpq   14c15 <TIFFReadDirEntryShortArray+0xb5>
mov    %rax,%r15
mov    -0x30(%rbp),%rbx
mov    -0x40(%rbp),%r12
mov    -0x18(%rbp),%rax
mov    -0x50(%rbp),%r13
mov    -0x70(%rbp),%r14
jmpq   14c15 <TIFFReadDirEntryShortArray+0xb5>
mov    %rax,%r15
mov    -0x30(%rbp),%rbx
mov    -0x48(%rbp),%r12
mov    -0x18(%rbp),%rax
mov    -0x58(%rbp),%r13
mov    -0x70(%rbp),%r14
jmpq   14c15 <TIFFReadDirEntryShortArray+0xb5>
mov    %rax,%r15
mov    -0x38(%rbp),%rbx
mov    -0x48(%rbp),%r12
mov    -0x28(%rbp),%rax
mov    -0x58(%rbp),%r13
mov    -0x70(%rbp),%r14
jmpq   14c15 <TIFFReadDirEntryShortArray+0xb5>
nop

0000000000015080 <TIFFReadDirEntrySshortArray>:
push   %rbp
mov    %rsp,%rbp
sub    $0x80,%rsp
mov    $0x2,%eax
movzwl 0x2(%rsi),%ecx
add    $0xffffffff,%ecx
cmp    $0x10,%ecx
jbe    1509e <TIFFReadDirEntrySshortArray+0x1e>
leaveq 
retq   
lea    0x3df8b(%rip),%r8        # 53030 <reason.25+0xf0a>
movslq (%r8,%rcx,4),%rcx
add    %r8,%rcx
jmpq   *%rcx
leaveq 
retq   
lea    -0x74(%rbp),%r10
lea    -0x70(%rbp),%r8
mov    %rdi,%rcx
mov    %rsi,%r9
mov    %r15,-0x58(%rbp)
mov    %rsi,-0x68(%rbp)
mov    %rdi,-0x60(%rbp)
mov    %r9,%rsi
mov    %rcx,%rdi
mov    %rax,%rcx
mov    %rdx,%r15
mov    %r10,%rdx
callq  13fd0 <TIFFReadDirEntryArray>
test   %eax,%eax
jne    15161 <TIFFReadDirEntrySshortArray+0xe1>
mov    -0x70(%rbp),%rdi
test   %rdi,%rdi
je     15161 <TIFFReadDirEntrySshortArray+0xe1>
xor    %eax,%eax
mov    -0x68(%rbp),%rdx
movzwl 0x2(%rdx),%ecx
cmp    $0x3,%cx
je     1516e <TIFFReadDirEntrySshortArray+0xee>
cmp    $0x8,%cx
je     15189 <TIFFReadDirEntrySshortArray+0x109>
mov    -0x74(%rbp),%eax
add    %eax,%eax
mov    %eax,%edi
mov    %r15,-0x20(%rbp)
mov    %rdx,%r15
callq  8440 <_TIFFmalloc@plt>
test   %rax,%rax
je     151a7 <TIFFReadDirEntrySshortArray+0x127>
movzwl 0x2(%r15),%ecx
add    $0xffffffff,%ecx
cmp    $0x10,%ecx
jbe    151bb <TIFFReadDirEntrySshortArray+0x13b>
xor    %r15d,%r15d
mov    -0x70(%rbp),%rdi
mov    %r14,-0x68(%rbp)
mov    %rax,%r14
callq  8bb0 <_TIFFfree@plt>
test   %r15d,%r15d
jne    151d3 <TIFFReadDirEntrySshortArray+0x153>
mov    -0x20(%rbp),%rax
mov    %r14,(%rax)
mov    -0x68(%rbp),%r14
xor    %eax,%eax
mov    -0x58(%rbp),%r15
leaveq 
retq   
movq   $0x0,(%r15)
mov    -0x58(%rbp),%r15
leaveq 
retq   
mov    %r15,-0x8(%rbp)
mov    %r14,-0x68(%rbp)
mov    %r13,-0x20(%rbp)
mov    %rax,%r13
mov    %rdi,%r14
mov    -0x60(%rbp),%r15
jmpq   15216 <TIFFReadDirEntrySshortArray+0x196>
mov    %rdi,(%r15)
mov    -0x60(%rbp),%rcx
mov    0x10(%rcx),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
jne    15239 <TIFFReadDirEntrySshortArray+0x1b9>
mov    -0x58(%rbp),%r15
leaveq 
retq   
mov    -0x70(%rbp),%rdi
callq  8bb0 <_TIFFfree@plt>
mov    $0x7,%eax
mov    -0x58(%rbp),%r15
leaveq 
retq   
lea    0x3deb2(%rip),%rdx        # 53074 <reason.25+0xf4e>
movslq (%rdx,%rcx,4),%rcx
add    %rdx,%rcx
jmpq   *%rcx
xor    %r15d,%r15d
jmpq   15135 <TIFFReadDirEntrySshortArray+0xb5>
mov    %r14,%rdi
callq  8bb0 <_TIFFfree@plt>
mov    %r15,%rax
mov    -0x68(%rbp),%r14
mov    -0x58(%rbp),%r15
leaveq 
retq   
mov    0x10(%r15),%eax
and    $0x80,%eax
test   %eax,%eax
je     151fd <TIFFReadDirEntrySshortArray+0x17d>
mov    %r14,%rdi
callq  87c0 <TIFFSwabShort@plt>
movzwl (%r14),%edi
callq  17a50 <TIFFReadDirEntryCheckRangeSshortShort>
test   %eax,%eax
jne    152f5 <TIFFReadDirEntrySshortArray+0x275>
add    $0x2,%r14
add    $0x1,%r13d
mov    -0x74(%rbp),%eax
cmp    %r13d,%eax
ja     151e8 <TIFFReadDirEntrySshortArray+0x168>
mov    -0x70(%rbp),%rax
mov    -0x8(%rbp),%rcx
mov    %rax,(%rcx)
mov    -0x20(%rbp),%r13
mov    -0x68(%rbp),%r14
xor    %eax,%eax
mov    -0x58(%rbp),%r15
leaveq 
retq   
mov    %rax,%r15
mov    -0x74(%rbp),%esi
callq  83d0 <TIFFSwabArrayOfShort@plt>
mov    %r15,%rax
mov    -0x58(%rbp),%r15
leaveq 
retq   
mov    -0x70(%rbp),%rcx
xor    %edx,%edx
mov    %rax,%rsi
jmpq   15323 <TIFFReadDirEntrySshortArray+0x2a3>
mov    -0x70(%rbp),%rcx
xor    %edx,%edx
mov    %rax,%rsi
jmpq   15344 <TIFFReadDirEntrySshortArray+0x2c4>
mov    -0x70(%rbp),%r15
mov    %r14,-0x68(%rbp)
mov    %r13,-0x48(%rbp)
mov    %rax,-0x10(%rbp)
mov    %rbx,-0x28(%rbp)
mov    %r12,-0x38(%rbp)
xor    %ebx,%ebx
mov    -0x60(%rbp),%r12
jmpq   15395 <TIFFReadDirEntrySshortArray+0x315>
mov    -0x70(%rbp),%r15
mov    %r14,-0x68(%rbp)
mov    %r13,-0x48(%rbp)
mov    %rax,-0x10(%rbp)
mov    %rbx,-0x28(%rbp)
mov    %r12,-0x38(%rbp)
xor    %ebx,%ebx
mov    -0x60(%rbp),%r12
jmpq   153fa <TIFFReadDirEntrySshortArray+0x37a>
mov    -0x70(%rbp),%r15
mov    %r14,-0x68(%rbp)
mov    %r13,-0x50(%rbp)
mov    %rax,-0x18(%rbp)
mov    %rbx,-0x30(%rbp)
mov    %r12,-0x40(%rbp)
xor    %ebx,%ebx
mov    -0x60(%rbp),%r12
jmpq   1545f <TIFFReadDirEntrySshortArray+0x3df>
mov    -0x70(%rbp),%r15
mov    %r14,-0x68(%rbp)
mov    %r13,-0x50(%rbp)
mov    %rax,-0x18(%rbp)
mov    %rbx,-0x30(%rbp)
mov    %r12,-0x40(%rbp)
xor    %ebx,%ebx
mov    -0x60(%rbp),%r12
jmpq   154c4 <TIFFReadDirEntrySshortArray+0x444>
mov    %rax,%r15
mov    -0x70(%rbp),%rdi
callq  8bb0 <_TIFFfree@plt>
mov    %r15,%rax
mov    -0x20(%rbp),%r13
mov    -0x68(%rbp),%r14
mov    -0x58(%rbp),%r15
leaveq 
retq   
movzbl (%rcx),%edi
mov    %di,(%rsi)
add    $0x1,%rcx
add    $0x2,%rsi
add    $0x1,%edx
mov    -0x74(%rbp),%edi
cmp    %edx,%edi
ja     15312 <TIFFReadDirEntrySshortArray+0x292>
xor    %r15d,%r15d
jmpq   15135 <TIFFReadDirEntrySshortArray+0xb5>
movsbq (%rcx),%rdi
mov    %di,(%rsi)
add    $0x1,%rcx
add    $0x2,%rsi
add    $0x1,%edx
mov    -0x74(%rbp),%edi
cmp    %edx,%edi
ja     15332 <TIFFReadDirEntrySshortArray+0x2b2>
xor    %r15d,%r15d
jmpq   15135 <TIFFReadDirEntrySshortArray+0xb5>
mov    0x10(%r12),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
je     15370 <TIFFReadDirEntrySshortArray+0x2f0>
mov    %rax,%r13
mov    %r15,%rdi
callq  8480 <TIFFSwabLong@plt>
mov    %r13,%rax
mov    %rax,%r14
mov    (%r15),%r13d
mov    %r13,%rdi
callq  17a70 <TIFFReadDirEntryCheckRangeSshortLong>
test   %eax,%eax
jne    154e7 <TIFFReadDirEntrySshortArray+0x467>
mov    %r13w,(%r14)
add    $0x4,%r15
lea    0x2(%r14),%rax
add    $0x1,%ebx
mov    -0x74(%rbp),%ecx
cmp    %ebx,%ecx
ja     15353 <TIFFReadDirEntrySshortArray+0x2d3>
mov    -0x38(%rbp),%r12
mov    -0x28(%rbp),%rbx
mov    -0x10(%rbp),%rax
mov    -0x48(%rbp),%r13
mov    -0x68(%rbp),%r14
xor    %r15d,%r15d
jmpq   15135 <TIFFReadDirEntrySshortArray+0xb5>
mov    0x10(%r12),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
je     153d5 <TIFFReadDirEntrySshortArray+0x355>
mov    %rax,%r13
mov    %r15,%rdi
callq  8480 <TIFFSwabLong@plt>
mov    %r13,%rax
mov    %rax,%r14
movslq (%r15),%r13
mov    %r13,%rdi
callq  17a90 <TIFFReadDirEntryCheckRangeSshortSlong>
test   %eax,%eax
jne    15503 <TIFFReadDirEntrySshortArray+0x483>
mov    %r13w,(%r14)
add    $0x4,%r15
lea    0x2(%r14),%rax
add    $0x1,%ebx
mov    -0x74(%rbp),%ecx
cmp    %ebx,%ecx
ja     153b8 <TIFFReadDirEntrySshortArray+0x338>
mov    -0x38(%rbp),%r12
mov    -0x28(%rbp),%rbx
mov    -0x10(%rbp),%rax
mov    -0x48(%rbp),%r13
mov    -0x68(%rbp),%r14
xor    %r15d,%r15d
jmpq   15135 <TIFFReadDirEntrySshortArray+0xb5>
mov    0x10(%r12),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
je     1543a <TIFFReadDirEntrySshortArray+0x3ba>
mov    %rax,%r13
mov    %r15,%rdi
callq  8730 <TIFFSwabLong8@plt>
mov    %r13,%rax
mov    %rax,%r14
mov    (%r15),%r13
mov    %r13,%rdi
callq  17ac0 <TIFFReadDirEntryCheckRangeSshortLong8>
test   %eax,%eax
jne    1551f <TIFFReadDirEntrySshortArray+0x49f>
mov    %r13w,(%r14)
add    $0x8,%r15
lea    0x2(%r14),%rax
add    $0x1,%ebx
mov    -0x74(%rbp),%ecx
cmp    %ebx,%ecx
ja     1541d <TIFFReadDirEntrySshortArray+0x39d>
mov    -0x40(%rbp),%r12
mov    -0x30(%rbp),%rbx
mov    -0x18(%rbp),%rax
mov    -0x50(%rbp),%r13
mov    -0x68(%rbp),%r14
xor    %r15d,%r15d
jmpq   15135 <TIFFReadDirEntrySshortArray+0xb5>
mov    0x10(%r12),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
je     1549f <TIFFReadDirEntrySshortArray+0x41f>
mov    %rax,%r13
mov    %r15,%rdi
callq  8730 <TIFFSwabLong8@plt>
mov    %r13,%rax
mov    %rax,%r14
mov    (%r15),%r13
mov    %r13,%rdi
callq  17ae0 <TIFFReadDirEntryCheckRangeSshortSlong8>
test   %eax,%eax
jne    1553b <TIFFReadDirEntrySshortArray+0x4bb>
mov    %r13w,(%r14)
add    $0x8,%r15
lea    0x2(%r14),%rax
add    $0x1,%ebx
mov    -0x74(%rbp),%ecx
cmp    %ebx,%ecx
ja     15482 <TIFFReadDirEntrySshortArray+0x402>
mov    -0x40(%rbp),%r12
mov    -0x30(%rbp),%rbx
mov    -0x18(%rbp),%rax
mov    -0x50(%rbp),%r13
mov    -0x68(%rbp),%r14
xor    %r15d,%r15d
jmpq   15135 <TIFFReadDirEntrySshortArray+0xb5>
mov    %rax,%r15
mov    -0x38(%rbp),%r12
mov    -0x28(%rbp),%rbx
mov    -0x10(%rbp),%rax
mov    -0x48(%rbp),%r13
mov    -0x68(%rbp),%r14
jmpq   15135 <TIFFReadDirEntrySshortArray+0xb5>
mov    %rax,%r15
mov    -0x38(%rbp),%r12
mov    -0x28(%rbp),%rbx
mov    -0x10(%rbp),%rax
mov    -0x48(%rbp),%r13
mov    -0x68(%rbp),%r14
jmpq   15135 <TIFFReadDirEntrySshortArray+0xb5>
mov    %rax,%r15
mov    -0x40(%rbp),%r12
mov    -0x30(%rbp),%rbx
mov    -0x18(%rbp),%rax
mov    -0x50(%rbp),%r13
mov    -0x68(%rbp),%r14
jmpq   15135 <TIFFReadDirEntrySshortArray+0xb5>
mov    %rax,%r15
mov    -0x40(%rbp),%r12
mov    -0x30(%rbp),%rbx
mov    -0x18(%rbp),%rax
mov    -0x50(%rbp),%r13
mov    -0x68(%rbp),%r14
jmpq   15135 <TIFFReadDirEntrySshortArray+0xb5>
nopw   0x0(%rax,%rax,1)

0000000000015560 <TIFFReadDirEntryLongArray>:
push   %rbp
mov    %rsp,%rbp
sub    $0x80,%rsp
mov    $0x2,%eax
movzwl 0x2(%rsi),%ecx
add    $0xffffffff,%ecx
cmp    $0x10,%ecx
jbe    1557e <TIFFReadDirEntryLongArray+0x1e>
leaveq 
retq   
lea    0x3db33(%rip),%r8        # 530b8 <reason.25+0xf92>
movslq (%r8,%rcx,4),%rcx
add    %r8,%rcx
jmpq   *%rcx
leaveq 
retq   
lea    -0x74(%rbp),%r10
mov    $0x4,%ecx
lea    -0x70(%rbp),%r8
mov    %rdi,%rax
mov    %rsi,%r9
mov    %r15,-0x58(%rbp)
mov    %rsi,-0x68(%rbp)
mov    %rdi,-0x60(%rbp)
mov    %r9,%rsi
mov    %rax,%rdi
mov    %rdx,%r15
mov    %r10,%rdx
callq  13fd0 <TIFFReadDirEntryArray>
test   %eax,%eax
jne    15648 <TIFFReadDirEntryLongArray+0xe8>
mov    -0x70(%rbp),%rdi
test   %rdi,%rdi
je     15648 <TIFFReadDirEntryLongArray+0xe8>
xor    %eax,%eax
mov    -0x68(%rbp),%rdx
movzwl 0x2(%rdx),%ecx
cmp    $0x4,%cx
je     15655 <TIFFReadDirEntryLongArray+0xf5>
cmp    $0x9,%cx
je     1566f <TIFFReadDirEntryLongArray+0x10f>
mov    -0x74(%rbp),%eax
shl    $0x2,%eax
mov    %eax,%edi
mov    %r15,-0x20(%rbp)
mov    %rdx,%r15
callq  8440 <_TIFFmalloc@plt>
test   %rax,%rax
je     1568a <TIFFReadDirEntryLongArray+0x12a>
movzwl 0x2(%r15),%ecx
add    $0xffffffff,%ecx
cmp    $0x10,%ecx
jbe    1569e <TIFFReadDirEntryLongArray+0x13e>
xor    %r15d,%r15d
mov    -0x70(%rbp),%rdi
mov    %r14,-0x68(%rbp)
mov    %rax,%r14
callq  8bb0 <_TIFFfree@plt>
test   %r15d,%r15d
jne    156b6 <TIFFReadDirEntryLongArray+0x156>
mov    -0x20(%rbp),%rax
mov    %r14,(%rax)
mov    -0x68(%rbp),%r14
xor    %eax,%eax
mov    -0x58(%rbp),%r15
leaveq 
retq   
movq   $0x0,(%r15)
mov    -0x58(%rbp),%r15
leaveq 
retq   
mov    %rdi,(%r15)
mov    -0x60(%rbp),%rcx
mov    0x10(%rcx),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
jne    156cb <TIFFReadDirEntryLongArray+0x16b>
mov    -0x58(%rbp),%r15
leaveq 
retq   
mov    %r15,-0x8(%rbp)
mov    %r14,-0x68(%rbp)
mov    %r13,-0x20(%rbp)
mov    %rax,%r13
mov    %rdi,%r14
mov    -0x60(%rbp),%r15
jmpq   1570c <TIFFReadDirEntryLongArray+0x1ac>
mov    -0x70(%rbp),%rdi
callq  8bb0 <_TIFFfree@plt>
mov    $0x7,%eax
mov    -0x58(%rbp),%r15
leaveq 
retq   
lea    0x3da57(%rip),%rdx        # 530fc <reason.25+0xfd6>
movslq (%rdx,%rcx,4),%rcx
add    %rdx,%rcx
jmpq   *%rcx
xor    %r15d,%r15d
jmpq   1561c <TIFFReadDirEntryLongArray+0xbc>
mov    %r14,%rdi
callq  8bb0 <_TIFFfree@plt>
mov    %r15,%rax
mov    -0x68(%rbp),%r14
mov    -0x58(%rbp),%r15
leaveq 
retq   
mov    %rax,%r15
mov    -0x74(%rbp),%esi
callq  8b70 <TIFFSwabArrayOfLong@plt>
mov    %r15,%rax
mov    -0x58(%rbp),%r15
leaveq 
retq   
mov    0x10(%r15),%eax
and    $0x80,%eax
test   %eax,%eax
je     156f4 <TIFFReadDirEntryLongArray+0x194>
mov    %r14,%rdi
callq  8480 <TIFFSwabLong@plt>
movslq (%r14),%rdi
callq  17b50 <TIFFReadDirEntryCheckRangeLongSlong>
test   %eax,%eax
jne    157e4 <TIFFReadDirEntryLongArray+0x284>
add    $0x4,%r14
add    $0x1,%r13d
mov    -0x74(%rbp),%eax
cmp    %r13d,%eax
ja     156df <TIFFReadDirEntryLongArray+0x17f>
mov    -0x70(%rbp),%rax
mov    -0x8(%rbp),%rcx
mov    %rax,(%rcx)
mov    -0x20(%rbp),%r13
mov    -0x68(%rbp),%r14
xor    %eax,%eax
mov    -0x58(%rbp),%r15
leaveq 
retq   
mov    -0x70(%rbp),%rdx
xor    %ecx,%ecx
mov    %rax,%rsi
jmpq   15811 <TIFFReadDirEntryLongArray+0x2b1>
mov    -0x70(%rbp),%r15
mov    %r14,-0x68(%rbp)
mov    %r13,-0x60(%rbp)
mov    %rax,-0x8(%rbp)
mov    %r12,-0x30(%rbp)
xor    %r12d,%r12d
jmpq   15846 <TIFFReadDirEntryLongArray+0x2e6>
mov    -0x70(%rbp),%r15
mov    %r14,-0x68(%rbp)
mov    %r13,-0x48(%rbp)
mov    %rax,-0x10(%rbp)
mov    %r12,-0x38(%rbp)
xor    %r12d,%r12d
mov    -0x60(%rbp),%r13
jmpq   15894 <TIFFReadDirEntryLongArray+0x334>
mov    -0x70(%rbp),%r15
mov    %r14,-0x68(%rbp)
mov    %r13,-0x48(%rbp)
mov    %rax,-0x10(%rbp)
mov    %r12,-0x38(%rbp)
mov    %rbx,-0x28(%rbp)
xor    %r12d,%r12d
mov    -0x60(%rbp),%rbx
jmpq   158f5 <TIFFReadDirEntryLongArray+0x395>
mov    -0x70(%rbp),%r15
mov    %r14,-0x68(%rbp)
mov    %r13,-0x50(%rbp)
mov    %rax,-0x18(%rbp)
mov    %r12,-0x40(%rbp)
mov    %rbx,-0x28(%rbp)
xor    %r12d,%r12d
mov    -0x60(%rbp),%rbx
jmpq   15959 <TIFFReadDirEntryLongArray+0x3f9>
mov    -0x70(%rbp),%r15
mov    %r14,-0x68(%rbp)
mov    %r13,-0x50(%rbp)
mov    %rax,-0x18(%rbp)
mov    %r12,-0x40(%rbp)
mov    %rbx,-0x30(%rbp)
xor    %ebx,%ebx
mov    -0x60(%rbp),%r12
jmpq   159be <TIFFReadDirEntryLongArray+0x45e>
mov    %rax,%r15
mov    -0x70(%rbp),%rdi
callq  8bb0 <_TIFFfree@plt>
mov    %r15,%rax
mov    -0x20(%rbp),%r13
mov    -0x68(%rbp),%r14
mov    -0x58(%rbp),%r15
leaveq 
retq   
movzbl (%rdx),%edi
mov    %edi,(%rsi)
add    $0x1,%rdx
add    $0x4,%rsi
add    $0x1,%ecx
mov    -0x74(%rbp),%edi
cmp    %ecx,%edi
ja     15801 <TIFFReadDirEntryLongArray+0x2a1>
xor    %r15d,%r15d
jmpq   1561c <TIFFReadDirEntryLongArray+0xbc>
mov    %rax,%r14
movsbq (%r15),%r13
mov    %r13,%rdi
callq  17b10 <TIFFReadDirEntryCheckRangeLongSbyte>
test   %eax,%eax
jne    159e1 <TIFFReadDirEntryLongArray+0x481>
mov    %r13d,(%r14)
add    $0x1,%r15
lea    0x4(%r14),%rax
add    $0x1,%r12d
mov    -0x74(%rbp),%ecx
cmp    %r12d,%ecx
ja     15820 <TIFFReadDirEntryLongArray+0x2c0>
mov    -0x30(%rbp),%r12
mov    -0x8(%rbp),%rax
mov    -0x60(%rbp),%r13
mov    -0x68(%rbp),%r14
xor    %r15d,%r15d
jmpq   1561c <TIFFReadDirEntryLongArray+0xbc>
mov    0x10(%r13),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
je     15882 <TIFFReadDirEntryLongArray+0x322>
mov    %rax,%r14
mov    %r15,%rdi
callq  87c0 <TIFFSwabShort@plt>
mov    %r14,%rax
movzwl (%r15),%ecx
mov    %ecx,(%rax)
add    $0x2,%r15
add    $0x4,%rax
add    $0x1,%r12d
mov    -0x74(%rbp),%ecx
cmp    %r12d,%ecx
ja     15866 <TIFFReadDirEntryLongArray+0x306>
mov    -0x38(%rbp),%r12
mov    -0x10(%rbp),%rax
mov    -0x48(%rbp),%r13
mov    -0x68(%rbp),%r14
xor    %r15d,%r15d
jmpq   1561c <TIFFReadDirEntryLongArray+0xbc>
mov    0x10(%rbx),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
je     158cf <TIFFReadDirEntryLongArray+0x36f>
mov    %rax,%r13
mov    %r15,%rdi
callq  87c0 <TIFFSwabShort@plt>
mov    %r13,%rax
mov    %rax,%r14
movswq (%r15),%r13
mov    %r13,%rdi
callq  17b30 <TIFFReadDirEntryCheckRangeLongSshort>
test   %eax,%eax
jne    159f9 <TIFFReadDirEntryLongArray+0x499>
mov    %r13d,(%r14)
add    $0x2,%r15
lea    0x4(%r14),%rax
add    $0x1,%r12d
mov    -0x74(%rbp),%ecx
cmp    %r12d,%ecx
ja     158b4 <TIFFReadDirEntryLongArray+0x354>
mov    -0x28(%rbp),%rbx
mov    -0x38(%rbp),%r12
mov    -0x10(%rbp),%rax
mov    -0x48(%rbp),%r13
mov    -0x68(%rbp),%r14
xor    %r15d,%r15d
jmpq   1561c <TIFFReadDirEntryLongArray+0xbc>
mov    0x10(%rbx),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
je     15934 <TIFFReadDirEntryLongArray+0x3d4>
mov    %rax,%r13
mov    %r15,%rdi
callq  8730 <TIFFSwabLong8@plt>
mov    %r13,%rax
mov    %rax,%r14
mov    (%r15),%r13
mov    %r13,%rdi
callq  17b70 <TIFFReadDirEntryCheckRangeLongLong8>
test   %eax,%eax
jne    15a15 <TIFFReadDirEntryLongArray+0x4b5>
mov    %r13d,(%r14)
add    $0x8,%r15
lea    0x4(%r14),%rax
add    $0x1,%r12d
mov    -0x74(%rbp),%ecx
cmp    %r12d,%ecx
ja     15919 <TIFFReadDirEntryLongArray+0x3b9>
mov    -0x28(%rbp),%rbx
mov    -0x40(%rbp),%r12
mov    -0x18(%rbp),%rax
mov    -0x50(%rbp),%r13
mov    -0x68(%rbp),%r14
xor    %r15d,%r15d
jmpq   1561c <TIFFReadDirEntryLongArray+0xbc>
mov    0x10(%r12),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
je     1599a <TIFFReadDirEntryLongArray+0x43a>
mov    %rax,%r13
mov    %r15,%rdi
callq  8730 <TIFFSwabLong8@plt>
mov    %r13,%rax
mov    %rax,%r14
mov    (%r15),%r13
mov    %r13,%rdi
callq  17b90 <TIFFReadDirEntryCheckRangeLongSlong8>
test   %eax,%eax
jne    15a31 <TIFFReadDirEntryLongArray+0x4d1>
mov    %r13d,(%r14)
add    $0x8,%r15
lea    0x4(%r14),%rax
add    $0x1,%ebx
mov    -0x74(%rbp),%ecx
cmp    %ebx,%ecx
ja     1597d <TIFFReadDirEntryLongArray+0x41d>
mov    -0x30(%rbp),%rbx
mov    -0x40(%rbp),%r12
mov    -0x18(%rbp),%rax
mov    -0x50(%rbp),%r13
mov    -0x68(%rbp),%r14
xor    %r15d,%r15d
jmpq   1561c <TIFFReadDirEntryLongArray+0xbc>
mov    %rax,%r15
mov    -0x30(%rbp),%r12
mov    -0x8(%rbp),%rax
mov    -0x60(%rbp),%r13
mov    -0x68(%rbp),%r14
jmpq   1561c <TIFFReadDirEntryLongArray+0xbc>
mov    %rax,%r15
mov    -0x28(%rbp),%rbx
mov    -0x38(%rbp),%r12
mov    -0x10(%rbp),%rax
mov    -0x48(%rbp),%r13
mov    -0x68(%rbp),%r14
jmpq   1561c <TIFFReadDirEntryLongArray+0xbc>
mov    %rax,%r15
mov    -0x28(%rbp),%rbx
mov    -0x40(%rbp),%r12
mov    -0x18(%rbp),%rax
mov    -0x50(%rbp),%r13
mov    -0x68(%rbp),%r14
jmpq   1561c <TIFFReadDirEntryLongArray+0xbc>
mov    %rax,%r15
mov    -0x30(%rbp),%rbx
mov    -0x40(%rbp),%r12
mov    -0x18(%rbp),%rax
mov    -0x50(%rbp),%r13
mov    -0x68(%rbp),%r14
jmpq   1561c <TIFFReadDirEntryLongArray+0xbc>
nopl   (%rax)

0000000000015a50 <TIFFReadDirEntrySlongArray>:
push   %rbp
mov    %rsp,%rbp
sub    $0x70,%rsp
mov    $0x2,%eax
movzwl 0x2(%rsi),%ecx
add    $0xffffffff,%ecx
cmp    $0x10,%ecx
jbe    15a6b <TIFFReadDirEntrySlongArray+0x1b>
leaveq 
retq   
lea    0x3d6ce(%rip),%r8        # 53140 <reason.25+0x101a>
movslq (%r8,%rcx,4),%rcx
add    %r8,%rcx
jmpq   *%rcx
leaveq 
retq   
lea    -0x6c(%rbp),%rax
mov    $0x4,%ecx
lea    -0x68(%rbp),%r8
mov    %rdi,%r9
mov    %rsi,%r10
mov    %r15,-0x50(%rbp)
mov    %rsi,-0x60(%rbp)
mov    %rdi,-0x58(%rbp)
mov    %r10,%rsi
mov    %r9,%rdi
mov    %rdx,%r15
mov    %rax,%rdx
callq  13fd0 <TIFFReadDirEntryArray>
test   %eax,%eax
jne    15b35 <TIFFReadDirEntrySlongArray+0xe5>
mov    -0x68(%rbp),%rdi
test   %rdi,%rdi
je     15b35 <TIFFReadDirEntrySlongArray+0xe5>
xor    %eax,%eax
mov    -0x60(%rbp),%rdx
movzwl 0x2(%rdx),%ecx
cmp    $0x4,%cx
je     15b42 <TIFFReadDirEntrySlongArray+0xf2>
cmp    $0x9,%cx
je     15b5d <TIFFReadDirEntrySlongArray+0x10d>
mov    -0x6c(%rbp),%eax
shl    $0x2,%eax
mov    %eax,%edi
mov    %r15,-0x20(%rbp)
mov    %rdx,%r15
callq  8440 <_TIFFmalloc@plt>
test   %rax,%rax
je     15b7b <TIFFReadDirEntrySlongArray+0x12b>
movzwl 0x2(%r15),%ecx
add    $0xffffffff,%ecx
cmp    $0x10,%ecx
jbe    15b8f <TIFFReadDirEntrySlongArray+0x13f>
xor    %r15d,%r15d
mov    -0x68(%rbp),%rdi
mov    %r14,-0x60(%rbp)
mov    %rax,%r14
callq  8bb0 <_TIFFfree@plt>
test   %r15d,%r15d
jne    15ba7 <TIFFReadDirEntrySlongArray+0x157>
mov    -0x20(%rbp),%rax
mov    %r14,(%rax)
mov    -0x60(%rbp),%r14
xor    %eax,%eax
mov    -0x50(%rbp),%r15
leaveq 
retq   
movq   $0x0,(%r15)
mov    -0x50(%rbp),%r15
leaveq 
retq   
mov    %r15,-0x8(%rbp)
mov    %r14,-0x60(%rbp)
mov    %r13,-0x20(%rbp)
mov    %rax,%r13
mov    %rdi,%r14
mov    -0x58(%rbp),%r15
jmpq   15be9 <TIFFReadDirEntrySlongArray+0x199>
mov    %rdi,(%r15)
mov    -0x58(%rbp),%rcx
mov    0x10(%rcx),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
jne    15c0c <TIFFReadDirEntrySlongArray+0x1bc>
mov    -0x50(%rbp),%r15
leaveq 
retq   
mov    -0x68(%rbp),%rdi
callq  8bb0 <_TIFFfree@plt>
mov    $0x7,%eax
mov    -0x50(%rbp),%r15
leaveq 
retq   
lea    0x3d5ee(%rip),%rdx        # 53184 <reason.25+0x105e>
movslq (%rdx,%rcx,4),%rcx
add    %rdx,%rcx
jmpq   *%rcx
xor    %r15d,%r15d
jmpq   15b09 <TIFFReadDirEntrySlongArray+0xb9>
mov    %r14,%rdi
callq  8bb0 <_TIFFfree@plt>
mov    %r15,%rax
mov    -0x60(%rbp),%r14
mov    -0x50(%rbp),%r15
leaveq 
retq   
mov    0x10(%r15),%eax
and    $0x80,%eax
test   %eax,%eax
je     15bd1 <TIFFReadDirEntrySlongArray+0x181>
mov    %r14,%rdi
callq  8480 <TIFFSwabLong@plt>
mov    (%r14),%edi
callq  17bb0 <TIFFReadDirEntryCheckRangeSlongLong>
test   %eax,%eax
jne    15cc2 <TIFFReadDirEntrySlongArray+0x272>
add    $0x4,%r14
add    $0x1,%r13d
mov    -0x6c(%rbp),%eax
cmp    %r13d,%eax
ja     15bbc <TIFFReadDirEntrySlongArray+0x16c>
mov    -0x68(%rbp),%rax
mov    -0x8(%rbp),%rcx
mov    %rax,(%rcx)
mov    -0x20(%rbp),%r13
mov    -0x60(%rbp),%r14
xor    %eax,%eax
mov    -0x50(%rbp),%r15
leaveq 
retq   
mov    %rax,%r15
mov    -0x6c(%rbp),%esi
callq  8b70 <TIFFSwabArrayOfLong@plt>
mov    %r15,%rax
mov    -0x50(%rbp),%r15
leaveq 
retq   
mov    -0x68(%rbp),%rcx
xor    %edx,%edx
mov    %rax,%rsi
jmpq   15cef <TIFFReadDirEntrySlongArray+0x29f>
mov    -0x68(%rbp),%rcx
xor    %edx,%edx
mov    %rax,%rsi
jmpq   15d0f <TIFFReadDirEntrySlongArray+0x2bf>
mov    -0x68(%rbp),%r15
mov    %r14,-0x60(%rbp)
mov    %r13,-0x40(%rbp)
mov    %rax,-0x10(%rbp)
mov    %r12,-0x30(%rbp)
xor    %r13d,%r13d
mov    -0x58(%rbp),%r12
jmpq   15d4d <TIFFReadDirEntrySlongArray+0x2fd>
mov    -0x68(%rbp),%r15
mov    %r14,-0x60(%rbp)
mov    %r13,-0x40(%rbp)
mov    %rax,-0x10(%rbp)
mov    %r12,-0x30(%rbp)
xor    %r13d,%r13d
mov    -0x58(%rbp),%r12
jmpq   15d9c <TIFFReadDirEntrySlongArray+0x34c>
mov    -0x68(%rbp),%r15
mov    %r14,-0x60(%rbp)
mov    %r13,-0x48(%rbp)
mov    %rax,-0x18(%rbp)
mov    %r12,-0x38(%rbp)
mov    %rbx,-0x28(%rbp)
xor    %ebx,%ebx
mov    -0x58(%rbp),%r12
jmpq   15dfd <TIFFReadDirEntrySlongArray+0x3ad>
mov    -0x68(%rbp),%r15
mov    %r14,-0x60(%rbp)
mov    %r13,-0x48(%rbp)
mov    %rax,-0x18(%rbp)
mov    %r12,-0x38(%rbp)
mov    %rbx,-0x28(%rbp)
xor    %ebx,%ebx
mov    -0x58(%rbp),%r12
jmpq   15e5d <TIFFReadDirEntrySlongArray+0x40d>
mov    %rax,%r13
mov    -0x68(%rbp),%rdi
callq  8bb0 <_TIFFfree@plt>
mov    %r13,%rax
mov    -0x20(%rbp),%r13
mov    -0x60(%rbp),%r14
mov    -0x50(%rbp),%r15
leaveq 
retq   
movzbl (%rcx),%edi
mov    %edi,(%rsi)
add    $0x1,%rcx
add    $0x4,%rsi
add    $0x1,%edx
mov    -0x6c(%rbp),%edi
cmp    %edx,%edi
ja     15cdf <TIFFReadDirEntrySlongArray+0x28f>
xor    %r15d,%r15d
jmpq   15b09 <TIFFReadDirEntrySlongArray+0xb9>
movsbq (%rcx),%rdi
mov    %edi,(%rsi)
add    $0x1,%rcx
add    $0x4,%rsi
add    $0x1,%edx
mov    -0x6c(%rbp),%edi
cmp    %edx,%edi
ja     15cfe <TIFFReadDirEntrySlongArray+0x2ae>
xor    %r15d,%r15d
jmpq   15b09 <TIFFReadDirEntrySlongArray+0xb9>
mov    0x10(%r12),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
je     15d3b <TIFFReadDirEntrySlongArray+0x2eb>
mov    %rax,%r14
mov    %r15,%rdi
callq  87c0 <TIFFSwabShort@plt>
mov    %r14,%rax
movzwl (%r15),%ecx
mov    %ecx,(%rax)
add    $0x2,%r15
add    $0x4,%rax
add    $0x1,%r13d
mov    -0x6c(%rbp),%ecx
cmp    %r13d,%ecx
ja     15d1e <TIFFReadDirEntrySlongArray+0x2ce>
mov    -0x30(%rbp),%r12
mov    -0x10(%rbp),%rax
mov    -0x40(%rbp),%r13
mov    -0x60(%rbp),%r14
xor    %r15d,%r15d
jmpq   15b09 <TIFFReadDirEntrySlongArray+0xb9>
mov    0x10(%r12),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
je     15d8a <TIFFReadDirEntrySlongArray+0x33a>
mov    %rax,%r14
mov    %r15,%rdi
callq  87c0 <TIFFSwabShort@plt>
mov    %r14,%rax
movswq (%r15),%rcx
mov    %ecx,(%rax)
add    $0x2,%r15
add    $0x4,%rax
add    $0x1,%r13d
mov    -0x6c(%rbp),%ecx
cmp    %r13d,%ecx
ja     15d6d <TIFFReadDirEntrySlongArray+0x31d>
mov    -0x30(%rbp),%r12
mov    -0x10(%rbp),%rax
mov    -0x40(%rbp),%r13
mov    -0x60(%rbp),%r14
xor    %r15d,%r15d
jmpq   15b09 <TIFFReadDirEntrySlongArray+0xb9>
mov    0x10(%r12),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
je     15dd9 <TIFFReadDirEntrySlongArray+0x389>
mov    %rax,%r13
mov    %r15,%rdi
callq  8730 <TIFFSwabLong8@plt>
mov    %r13,%rax
mov    %rax,%r14
mov    (%r15),%r13
mov    %r13,%rdi
callq  17bd0 <TIFFReadDirEntryCheckRangeSlongLong8>
test   %eax,%eax
jne    15e80 <TIFFReadDirEntrySlongArray+0x430>
mov    %r13d,(%r14)
add    $0x8,%r15
lea    0x4(%r14),%rax
add    $0x1,%ebx
mov    -0x6c(%rbp),%ecx
cmp    %ebx,%ecx
ja     15dbc <TIFFReadDirEntrySlongArray+0x36c>
mov    -0x28(%rbp),%rbx
mov    -0x38(%rbp),%r12
mov    -0x18(%rbp),%rax
mov    -0x48(%rbp),%r13
mov    -0x60(%rbp),%r14
xor    %r15d,%r15d
jmpq   15b09 <TIFFReadDirEntrySlongArray+0xb9>
mov    0x10(%r12),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
je     15e3d <TIFFReadDirEntrySlongArray+0x3ed>
mov    %rax,%r13
mov    %r15,%rdi
callq  8730 <TIFFSwabLong8@plt>
mov    %r13,%rax
mov    %rax,%r14
mov    (%r15),%r13
mov    %r13,%rdi
callq  17bf0 <TIFFReadDirEntryCheckRangeSlongSlong8>
test   %eax,%eax
jne    15e9c <TIFFReadDirEntrySlongArray+0x44c>
mov    %r13d,(%r14)
add    $0x8,%r15
lea    0x4(%r14),%rax
add    $0x1,%ebx
mov    -0x6c(%rbp),%ecx
cmp    %ebx,%ecx
ja     15e20 <TIFFReadDirEntrySlongArray+0x3d0>
mov    -0x28(%rbp),%rbx
mov    -0x38(%rbp),%r12
mov    -0x18(%rbp),%rax
mov    -0x48(%rbp),%r13
mov    -0x60(%rbp),%r14
xor    %r15d,%r15d
jmpq   15b09 <TIFFReadDirEntrySlongArray+0xb9>
mov    %rax,%r15
mov    -0x28(%rbp),%rbx
mov    -0x38(%rbp),%r12
mov    -0x18(%rbp),%rax
mov    -0x48(%rbp),%r13
mov    -0x60(%rbp),%r14
jmpq   15b09 <TIFFReadDirEntrySlongArray+0xb9>
mov    %rax,%r15
mov    -0x28(%rbp),%rbx
mov    -0x38(%rbp),%r12
mov    -0x18(%rbp),%rax
mov    -0x48(%rbp),%r13
mov    -0x60(%rbp),%r14
jmpq   15b09 <TIFFReadDirEntrySlongArray+0xb9>
nopl   0x0(%rax,%rax,1)

0000000000015ec0 <TIFFReadDirEntryLong8Array>:
push   %rbp
mov    %rsp,%rbp
mov    $0xffffffffffffffff,%rcx
callq  1bad0 <TIFFReadDirEntryLong8ArrayWithLimit>
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   (%rax)

0000000000015ee0 <TIFFReadDirEntrySlong8Array>:
push   %rbp
mov    %rsp,%rbp
sub    $0x70,%rsp
mov    $0x2,%eax
movzwl 0x2(%rsi),%ecx
add    $0xffffffff,%ecx
cmp    $0x10,%ecx
jbe    15efb <TIFFReadDirEntrySlong8Array+0x1b>
leaveq 
retq   
lea    0x3d2c6(%rip),%r8        # 531c8 <reason.25+0x10a2>
movslq (%r8,%rcx,4),%rcx
add    %r8,%rcx
jmpq   *%rcx
leaveq 
retq   
lea    -0x64(%rbp),%r10
mov    $0x8,%ecx
lea    -0x60(%rbp),%r8
mov    %rdi,%r9
mov    %rsi,%rax
mov    %r15,-0x48(%rbp)
mov    %rsi,-0x58(%rbp)
mov    %rdi,-0x50(%rbp)
mov    %rax,%rsi
mov    %r9,%rdi
mov    %rdx,%r15
mov    %r10,%rdx
callq  13fd0 <TIFFReadDirEntryArray>
test   %eax,%eax
jne    15fc6 <TIFFReadDirEntrySlong8Array+0xe6>
mov    -0x60(%rbp),%rdi
test   %rdi,%rdi
je     15fc6 <TIFFReadDirEntrySlong8Array+0xe6>
xor    %eax,%eax
mov    -0x58(%rbp),%rdx
movzwl 0x2(%rdx),%ecx
cmp    $0x10,%cx
je     15fd3 <TIFFReadDirEntrySlong8Array+0xf3>
cmp    $0x11,%cx
je     15fee <TIFFReadDirEntrySlong8Array+0x10e>
mov    -0x64(%rbp),%eax
shl    $0x3,%eax
mov    %eax,%edi
mov    %r15,-0x20(%rbp)
mov    %rdx,%r15
callq  8440 <_TIFFmalloc@plt>
test   %rax,%rax
je     1600c <TIFFReadDirEntrySlong8Array+0x12c>
movzwl 0x2(%r15),%ecx
add    $0xffffffff,%ecx
cmp    $0x8,%ecx
ja     16068 <TIFFReadDirEntrySlong8Array+0x188>
lea    0x3d26f(%rip),%rdx        # 5320c <reason.25+0x10e6>
movslq (%rdx,%rcx,4),%rcx
add    %rdx,%rcx
jmpq   *%rcx
mov    -0x60(%rbp),%r15
mov    %r13,-0x40(%rbp)
mov    %r14,-0x58(%rbp)
mov    %rax,-0x18(%rbp)
mov    %r12,-0x30(%rbp)
xor    %r12d,%r12d
mov    -0x50(%rbp),%r13
jmpq   1612d <TIFFReadDirEntrySlong8Array+0x24d>
movq   $0x0,(%r15)
mov    -0x48(%rbp),%r15
leaveq 
retq   
mov    %r15,-0x8(%rbp)
mov    %r13,-0x20(%rbp)
mov    %r14,-0x58(%rbp)
mov    %rax,%r13
mov    %rdi,%r14
mov    -0x50(%rbp),%r15
jmpq   16177 <TIFFReadDirEntrySlong8Array+0x297>
mov    %rdi,(%r15)
mov    -0x50(%rbp),%rcx
mov    0x10(%rcx),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
jne    1619a <TIFFReadDirEntrySlong8Array+0x2ba>
mov    -0x48(%rbp),%r15
leaveq 
retq   
mov    -0x60(%rbp),%rdi
callq  8bb0 <_TIFFfree@plt>
mov    $0x7,%eax
mov    -0x48(%rbp),%r15
leaveq 
retq   
mov    0x10(%r12),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
je     1603d <TIFFReadDirEntrySlong8Array+0x15d>
mov    %rax,%r14
mov    %r15,%rdi
callq  87c0 <TIFFSwabShort@plt>
mov    %r14,%rax
movswq (%r15),%rcx
mov    %rcx,(%rax)
add    $0x2,%r15
add    $0x8,%rax
add    $0x1,%r13d
mov    -0x64(%rbp),%ecx
cmp    %r13d,%ecx
ja     16020 <TIFFReadDirEntrySlong8Array+0x140>
mov    -0x28(%rbp),%r12
mov    -0x10(%rbp),%rax
mov    -0x58(%rbp),%r14
mov    -0x38(%rbp),%r13
mov    %rax,%r15
mov    -0x60(%rbp),%rdi
callq  8bb0 <_TIFFfree@plt>
mov    -0x20(%rbp),%rax
mov    %r15,(%rax)
xor    %eax,%eax
mov    -0x48(%rbp),%r15
leaveq 
retq   
mov    -0x60(%rbp),%rcx
xor    %edx,%edx
mov    %rax,%rsi
jmpq   161bf <TIFFReadDirEntrySlong8Array+0x2df>
mov    -0x60(%rbp),%rcx
xor    %edx,%edx
mov    %rax,%rsi
jmpq   161dd <TIFFReadDirEntrySlong8Array+0x2fd>
mov    -0x60(%rbp),%r15
mov    %r13,-0x38(%rbp)
mov    %r14,-0x58(%rbp)
mov    %rax,-0x10(%rbp)
mov    %r12,-0x28(%rbp)
xor    %r13d,%r13d
mov    -0x50(%rbp),%r12
jmpq   16219 <TIFFReadDirEntrySlong8Array+0x339>
mov    -0x60(%rbp),%r15
mov    %r13,-0x38(%rbp)
mov    %r14,-0x58(%rbp)
mov    %rax,-0x10(%rbp)
mov    %r12,-0x28(%rbp)
xor    %r13d,%r13d
mov    -0x50(%rbp),%r12
jmpq   16050 <TIFFReadDirEntrySlong8Array+0x170>
mov    -0x60(%rbp),%r15
mov    %r13,-0x40(%rbp)
mov    %r14,-0x58(%rbp)
mov    %rax,-0x18(%rbp)
mov    %r12,-0x30(%rbp)
xor    %r12d,%r12d
mov    -0x50(%rbp),%r13
jmpq   16264 <TIFFReadDirEntrySlong8Array+0x384>
mov    0x10(%r13),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
je     1611b <TIFFReadDirEntrySlong8Array+0x23b>
mov    %rax,%r14
mov    %r15,%rdi
callq  8480 <TIFFSwabLong@plt>
mov    %r14,%rax
movslq (%r15),%rcx
mov    %rcx,(%rax)
add    $0x4,%r15
add    $0x8,%rax
add    $0x1,%r12d
mov    -0x64(%rbp),%ecx
cmp    %r12d,%ecx
ja     160ff <TIFFReadDirEntrySlong8Array+0x21f>
mov    -0x30(%rbp),%r12
mov    -0x18(%rbp),%rax
mov    -0x58(%rbp),%r14
mov    -0x40(%rbp),%r13
jmpq   16068 <TIFFReadDirEntrySlong8Array+0x188>
mov    0x10(%r15),%eax
and    $0x80,%eax
test   %eax,%eax
je     1615f <TIFFReadDirEntrySlong8Array+0x27f>
mov    %r14,%rdi
callq  8730 <TIFFSwabLong8@plt>
mov    (%r14),%rdi
callq  17ca0 <TIFFReadDirEntryCheckRangeSlong8Long8>
test   %eax,%eax
jne    16281 <TIFFReadDirEntrySlong8Array+0x3a1>
add    $0x8,%r14
add    $0x1,%r13d
mov    -0x64(%rbp),%eax
cmp    %r13d,%eax
ja     1614a <TIFFReadDirEntrySlong8Array+0x26a>
mov    -0x60(%rbp),%rax
mov    -0x8(%rbp),%rcx
mov    %rax,(%rcx)
mov    -0x58(%rbp),%r14
mov    -0x20(%rbp),%r13
xor    %eax,%eax
mov    -0x48(%rbp),%r15
leaveq 
retq   
mov    %rax,%r15
mov    -0x64(%rbp),%esi
callq  8930 <TIFFSwabArrayOfLong8@plt>
mov    %r15,%rax
mov    -0x48(%rbp),%r15
leaveq 
retq   
movzbl (%rcx),%edi
mov    %rdi,(%rsi)
add    $0x1,%rcx
add    $0x8,%rsi
add    $0x1,%edx
mov    -0x64(%rbp),%edi
cmp    %edx,%edi
ja     161ae <TIFFReadDirEntrySlong8Array+0x2ce>
jmpq   16068 <TIFFReadDirEntrySlong8Array+0x188>
movsbq (%rcx),%rdi
mov    %rdi,(%rsi)
add    $0x1,%rcx
add    $0x8,%rsi
add    $0x1,%edx
mov    -0x64(%rbp),%edi
cmp    %edx,%edi
ja     161cb <TIFFReadDirEntrySlong8Array+0x2eb>
jmpq   16068 <TIFFReadDirEntrySlong8Array+0x188>
mov    0x10(%r12),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
je     16206 <TIFFReadDirEntrySlong8Array+0x326>
mov    %rax,%r14
mov    %r15,%rdi
callq  87c0 <TIFFSwabShort@plt>
mov    %r14,%rax
movzwl (%r15),%ecx
mov    %rcx,(%rax)
add    $0x2,%r15
add    $0x8,%rax
add    $0x1,%r13d
mov    -0x64(%rbp),%ecx
cmp    %r13d,%ecx
ja     161e9 <TIFFReadDirEntrySlong8Array+0x309>
mov    -0x28(%rbp),%r12
mov    -0x10(%rbp),%rax
mov    -0x58(%rbp),%r14
mov    -0x38(%rbp),%r13
jmpq   16068 <TIFFReadDirEntrySlong8Array+0x188>
mov    0x10(%r13),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
je     16252 <TIFFReadDirEntrySlong8Array+0x372>
mov    %rax,%r14
mov    %r15,%rdi
callq  8480 <TIFFSwabLong@plt>
mov    %r14,%rax
mov    (%r15),%ecx
mov    %rcx,(%rax)
add    $0x4,%r15
add    $0x8,%rax
add    $0x1,%r12d
mov    -0x64(%rbp),%ecx
cmp    %r12d,%ecx
ja     16236 <TIFFReadDirEntrySlong8Array+0x356>
mov    -0x30(%rbp),%r12
mov    -0x18(%rbp),%rax
mov    -0x58(%rbp),%r14
mov    -0x40(%rbp),%r13
jmpq   16068 <TIFFReadDirEntrySlong8Array+0x188>
mov    %rax,%r15
mov    -0x60(%rbp),%rdi
callq  8bb0 <_TIFFfree@plt>
mov    %r15,%rax
mov    -0x58(%rbp),%r14
mov    -0x20(%rbp),%r13
mov    -0x48(%rbp),%r15
leaveq 
retq   
xchg   %ax,%ax

00000000000162a0 <TIFFReadDirEntryFloatArray>:
push   %rbp
mov    %rsp,%rbp
sub    $0xa0,%rsp
mov    $0x2,%eax
movzwl 0x2(%rsi),%ecx
add    $0xffffffff,%ecx
cmp    $0x10,%ecx
jbe    162be <TIFFReadDirEntryFloatArray+0x1e>
leaveq 
retq   
lea    0x3cf6b(%rip),%r8        # 53230 <reason.25+0x110a>
movslq (%r8,%rcx,4),%rcx
add    %r8,%rcx
jmpq   *%rcx
leaveq 
retq   
lea    -0x94(%rbp),%r9
mov    $0x4,%ecx
lea    -0x90(%rbp),%r8
mov    %rdi,%rax
mov    %rsi,%r10
mov    %r15,-0x78(%rbp)
mov    %rsi,-0x88(%rbp)
mov    %rdi,-0x80(%rbp)
mov    %r10,%rsi
mov    %rax,%rdi
mov    %rdx,%r15
mov    %r9,%rdx
callq  13fd0 <TIFFReadDirEntryArray>
test   %eax,%eax
jne    163d6 <TIFFReadDirEntryFloatArray+0x136>
mov    -0x90(%rbp),%rdi
test   %rdi,%rdi
je     163d6 <TIFFReadDirEntryFloatArray+0x136>
xor    %eax,%eax
mov    -0x88(%rbp),%rdx
movzwl 0x2(%rdx),%ecx
cmp    $0xb,%cx
je     163e3 <TIFFReadDirEntryFloatArray+0x143>
mov    -0x94(%rbp),%edi
shl    $0x2,%rdi
mov    %r15,-0x28(%rbp)
mov    %rdx,%r15
callq  8440 <_TIFFmalloc@plt>
test   %rax,%rax
je     16411 <TIFFReadDirEntryFloatArray+0x171>
movzwl 0x2(%r15),%ecx
add    $0xffffffff,%ecx
cmp    $0x10,%ecx
ja     16462 <TIFFReadDirEntryFloatArray+0x1c2>
xorpd  %xmm0,%xmm0
lea    0x3cf01(%rip),%rdx        # 53274 <reason.25+0x114e>
movslq (%rdx,%rcx,4),%rcx
add    %rdx,%rcx
jmpq   *%rcx
mov    -0x80(%rbp),%rcx
mov    0x10(%rcx),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
je     163a5 <TIFFReadDirEntryFloatArray+0x105>
mov    %rax,%r15
mov    -0x90(%rbp),%rdi
mov    -0x94(%rbp),%esi
callq  8930 <TIFFSwabArrayOfLong8@plt>
mov    %r15,%rax
mov    -0x90(%rbp),%rdx
movss  0x3e16c(%rip),%xmm4        # 54520 <module.110+0x1c1>
movss  0x3e168(%rip),%xmm3        # 54524 <module.110+0x1c5>
movsd  0x3e14c(%rip),%xmm2        # 54510 <module.110+0x1b1>
movsd  0x3e15c(%rip),%xmm1        # 54528 <module.110+0x1c9>
xor    %ecx,%ecx
mov    %rax,%rsi
jmpq   16609 <TIFFReadDirEntryFloatArray+0x369>
movq   $0x0,(%r15)
mov    -0x78(%rbp),%r15
leaveq 
retq   
mov    -0x80(%rbp),%rcx
mov    0x10(%rcx),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
je     16401 <TIFFReadDirEntryFloatArray+0x161>
mov    -0x94(%rbp),%esi
callq  8b70 <TIFFSwabArrayOfLong@plt>
xor    %eax,%eax
mov    -0x90(%rbp),%rcx
mov    %rcx,(%r15)
mov    -0x78(%rbp),%r15
leaveq 
retq   
mov    -0x90(%rbp),%rdi
callq  8bb0 <_TIFFfree@plt>
mov    $0x7,%eax
mov    -0x78(%rbp),%r15
leaveq 
retq   
lea    0x4(%r13),%rax
movapd %xmm0,%xmm1
movss  %xmm1,0x0(%r13)
add    $0x8,%r15
add    $0x1,%ebx
mov    -0x94(%rbp),%ecx
cmp    %ebx,%ecx
ja     16618 <TIFFReadDirEntryFloatArray+0x378>
mov    -0x30(%rbp),%rbx
mov    -0x88(%rbp),%r14
mov    -0x70(%rbp),%r13
mov    -0x50(%rbp),%r12
mov    -0x20(%rbp),%rax
mov    %rax,%r15
mov    -0x90(%rbp),%rdi
callq  8bb0 <_TIFFfree@plt>
mov    -0x28(%rbp),%rax
mov    %r15,(%rax)
xor    %eax,%eax
mov    -0x78(%rbp),%r15
leaveq 
retq   
mov    -0x90(%rbp),%rdx
xor    %ecx,%ecx
mov    %rax,%rsi
jmpq   1664e <TIFFReadDirEntryFloatArray+0x3ae>
mov    -0x90(%rbp),%rdx
xor    %ecx,%ecx
mov    %rax,%rsi
jmpq   16674 <TIFFReadDirEntryFloatArray+0x3d4>
mov    -0x90(%rbp),%r15
mov    %rax,-0x8(%rbp)
mov    %r12,-0x38(%rbp)
mov    %r13,-0x58(%rbp)
mov    %r14,-0x88(%rbp)
xor    %r12d,%r12d
mov    -0x80(%rbp),%r13
jmpq   166bb <TIFFReadDirEntryFloatArray+0x41b>
mov    -0x90(%rbp),%r15
mov    %rax,-0x8(%rbp)
mov    %r12,-0x38(%rbp)
mov    %r13,-0x58(%rbp)
mov    %r14,-0x88(%rbp)
xor    %r12d,%r12d
mov    -0x80(%rbp),%r13
jmpq   16712 <TIFFReadDirEntryFloatArray+0x472>
mov    -0x90(%rbp),%r15
mov    %rax,-0x10(%rbp)
mov    %r12,-0x40(%rbp)
mov    %r13,-0x60(%rbp)
mov    %r14,-0x88(%rbp)
xor    %r12d,%r12d
mov    -0x80(%rbp),%r13
jmpq   1676b <TIFFReadDirEntryFloatArray+0x4cb>
mov    -0x90(%rbp),%r15
mov    %rax,-0x10(%rbp)
mov    %r12,-0x40(%rbp)
mov    %r13,-0x60(%rbp)
mov    %r14,-0x88(%rbp)
xor    %r12d,%r12d
mov    -0x80(%rbp),%r13
jmpq   167c1 <TIFFReadDirEntryFloatArray+0x521>
mov    -0x90(%rbp),%r15
movdqa 0x3dfa7(%rip),%xmm1        # 544f0 <module.110+0x191>
movdqa 0x3dfaf(%rip),%xmm2        # 54500 <module.110+0x1a1>
mov    %rax,-0x18(%rbp)
mov    %r12,-0x48(%rbp)
mov    %r13,-0x68(%rbp)
mov    %r14,-0x88(%rbp)
xor    %r12d,%r12d
mov    -0x80(%rbp),%r13
jmpq   16838 <TIFFReadDirEntryFloatArray+0x598>
mov    -0x90(%rbp),%r15
mov    %rax,-0x18(%rbp)
mov    %r12,-0x48(%rbp)
mov    %r13,-0x68(%rbp)
mov    %r14,-0x88(%rbp)
xor    %r12d,%r12d
mov    -0x80(%rbp),%r13
jmpq   1688f <TIFFReadDirEntryFloatArray+0x5ef>
mov    -0x90(%rbp),%r15
mov    %rax,-0x20(%rbp)
mov    %r12,-0x50(%rbp)
mov    %r13,-0x70(%rbp)
mov    %r14,-0x88(%rbp)
mov    %rbx,-0x30(%rbp)
xor    %ebx,%ebx
mov    -0x80(%rbp),%r12
jmpq   168c7 <TIFFReadDirEntryFloatArray+0x627>
mov    -0x90(%rbp),%r15
mov    %rax,-0x20(%rbp)
mov    %r12,-0x50(%rbp)
mov    %r13,-0x70(%rbp)
mov    %r14,-0x88(%rbp)
mov    %rbx,-0x30(%rbp)
xor    %ebx,%ebx
mov    -0x80(%rbp),%r12
jmpq   1643d <TIFFReadDirEntryFloatArray+0x19d>
movsd  (%rdx),%xmm0
ucomisd %xmm2,%xmm0
jbe    168ed <TIFFReadDirEntryFloatArray+0x64d>
movapd %xmm4,%xmm0
movss  %xmm0,(%rsi)
add    $0x4,%rsi
add    $0x8,%rdx
add    $0x1,%ecx
mov    -0x94(%rbp),%edi
cmp    %ecx,%edi
ja     165e8 <TIFFReadDirEntryFloatArray+0x348>
jmpq   16462 <TIFFReadDirEntryFloatArray+0x1c2>
mov    0x10(%r12),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
jne    168fe <TIFFReadDirEntryFloatArray+0x65e>
mov    %rax,%r13
jmpq   1690d <TIFFReadDirEntryFloatArray+0x66d>
movzbl (%rdx),%edi
movzbl %dil,%edi
cvtsi2ss %rdi,%xmm0
movss  %xmm0,(%rsi)
add    $0x1,%rdx
add    $0x4,%rsi
add    $0x1,%ecx
mov    -0x94(%rbp),%edi
cmp    %ecx,%edi
ja     16633 <TIFFReadDirEntryFloatArray+0x393>
jmpq   16462 <TIFFReadDirEntryFloatArray+0x1c2>
movsbq (%rdx),%rdi
cvtsi2ss %edi,%xmm0
movss  %xmm0,(%rsi)
add    $0x1,%rdx
add    $0x4,%rsi
add    $0x1,%ecx
mov    -0x94(%rbp),%edi
cmp    %ecx,%edi
ja     1665d <TIFFReadDirEntryFloatArray+0x3bd>
jmpq   16462 <TIFFReadDirEntryFloatArray+0x1c2>
mov    0x10(%r13),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
je     1669f <TIFFReadDirEntryFloatArray+0x3ff>
mov    %rax,%r14
mov    %r15,%rdi
callq  87c0 <TIFFSwabShort@plt>
mov    %r14,%rax
movzwl (%r15),%ecx
movzwl %cx,%ecx
cvtsi2ss %rcx,%xmm0
movss  %xmm0,(%rax)
add    $0x2,%r15
add    $0x4,%rax
add    $0x1,%r12d
mov    -0x94(%rbp),%ecx
cmp    %r12d,%ecx
ja     16683 <TIFFReadDirEntryFloatArray+0x3e3>
mov    -0x88(%rbp),%r14
mov    -0x58(%rbp),%r13
mov    -0x38(%rbp),%r12
mov    -0x8(%rbp),%rax
jmpq   16462 <TIFFReadDirEntryFloatArray+0x1c2>
mov    0x10(%r13),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
je     166fa <TIFFReadDirEntryFloatArray+0x45a>
mov    %rax,%r14
mov    %r15,%rdi
callq  87c0 <TIFFSwabShort@plt>
mov    %r14,%rax
movswq (%r15),%rcx
cvtsi2ss %ecx,%xmm0
movss  %xmm0,(%rax)
add    $0x2,%r15
add    $0x4,%rax
add    $0x1,%r12d
mov    -0x94(%rbp),%ecx
cmp    %r12d,%ecx
ja     166de <TIFFReadDirEntryFloatArray+0x43e>
mov    -0x88(%rbp),%r14
mov    -0x58(%rbp),%r13
mov    -0x38(%rbp),%r12
mov    -0x8(%rbp),%rax
jmpq   16462 <TIFFReadDirEntryFloatArray+0x1c2>
mov    0x10(%r13),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
je     16751 <TIFFReadDirEntryFloatArray+0x4b1>
mov    %rax,%r14
mov    %r15,%rdi
callq  8480 <TIFFSwabLong@plt>
mov    %r14,%rax
mov    (%r15),%ecx
mov    %ecx,%ecx
cvtsi2ss %rcx,%xmm0
movss  %xmm0,(%rax)
add    $0x4,%r15
add    $0x4,%rax
add    $0x1,%r12d
mov    -0x94(%rbp),%ecx
cmp    %r12d,%ecx
ja     16735 <TIFFReadDirEntryFloatArray+0x495>
mov    -0x88(%rbp),%r14
mov    -0x60(%rbp),%r13
mov    -0x40(%rbp),%r12
mov    -0x10(%rbp),%rax
jmpq   16462 <TIFFReadDirEntryFloatArray+0x1c2>
mov    0x10(%r13),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
je     167aa <TIFFReadDirEntryFloatArray+0x50a>
mov    %rax,%r14
mov    %r15,%rdi
callq  8480 <TIFFSwabLong@plt>
mov    %r14,%rax
movslq (%r15),%rcx
cvtsi2ss %ecx,%xmm0
movss  %xmm0,(%rax)
add    $0x4,%r15
add    $0x4,%rax
add    $0x1,%r12d
mov    -0x94(%rbp),%ecx
cmp    %r12d,%ecx
ja     1678e <TIFFReadDirEntryFloatArray+0x4ee>
mov    -0x88(%rbp),%r14
mov    -0x60(%rbp),%r13
mov    -0x40(%rbp),%r12
mov    -0x10(%rbp),%rax
jmpq   16462 <TIFFReadDirEntryFloatArray+0x1c2>
mov    0x10(%r13),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
je     16810 <TIFFReadDirEntryFloatArray+0x570>
mov    %rax,%r14
mov    %r15,%rdi
callq  8730 <TIFFSwabLong8@plt>
mov    %r14,%rax
movdqa 0x3dcf8(%rip),%xmm2        # 54500 <module.110+0x1a1>
movdqa 0x3dce0(%rip),%xmm1        # 544f0 <module.110+0x191>
mov    (%r15),%rcx
movq   %rcx,%xmm0
punpckldq %xmm1,%xmm0
subpd  %xmm2,%xmm0
haddpd %xmm0,%xmm0
cvtsd2ss %xmm0,%xmm0
movss  %xmm0,(%rax)
add    $0x8,%r15
add    $0x4,%rax
add    $0x1,%r12d
mov    -0x94(%rbp),%ecx
cmp    %r12d,%ecx
ja     167e4 <TIFFReadDirEntryFloatArray+0x544>
mov    -0x88(%rbp),%r14
mov    -0x68(%rbp),%r13
mov    -0x48(%rbp),%r12
mov    -0x18(%rbp),%rax
jmpq   16462 <TIFFReadDirEntryFloatArray+0x1c2>
mov    0x10(%r13),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
je     16877 <TIFFReadDirEntryFloatArray+0x5d7>
mov    %rax,%r14
mov    %r15,%rdi
callq  8730 <TIFFSwabLong8@plt>
mov    %r14,%rax
mov    (%r15),%rcx
cvtsi2ss %rcx,%xmm0
movss  %xmm0,(%rax)
add    $0x8,%r15
add    $0x4,%rax
add    $0x1,%r12d
mov    -0x94(%rbp),%ecx
cmp    %r12d,%ecx
ja     1685b <TIFFReadDirEntryFloatArray+0x5bb>
mov    -0x88(%rbp),%r14
mov    -0x68(%rbp),%r13
mov    -0x48(%rbp),%r12
mov    -0x18(%rbp),%rax
jmpq   16462 <TIFFReadDirEntryFloatArray+0x1c2>
lea    0x4(%r13),%rax
movapd %xmm0,%xmm1
movss  %xmm1,0x0(%r13)
add    $0x8,%r15
add    $0x1,%ebx
mov    -0x94(%rbp),%ecx
cmp    %ebx,%ecx
ja     16950 <TIFFReadDirEntryFloatArray+0x6b0>
mov    -0x30(%rbp),%rbx
mov    -0x88(%rbp),%r14
mov    -0x70(%rbp),%r13
mov    -0x50(%rbp),%r12
mov    -0x20(%rbp),%rax
jmpq   16462 <TIFFReadDirEntryFloatArray+0x1c2>
ucomisd %xmm1,%xmm0
jp     16964 <TIFFReadDirEntryFloatArray+0x6c4>
jae    16964 <TIFFReadDirEntryFloatArray+0x6c4>
movapd %xmm3,%xmm0
jmpq   165fa <TIFFReadDirEntryFloatArray+0x35a>
mov    %rax,%r13
mov    %r15,%rdi
callq  8480 <TIFFSwabLong@plt>
xorpd  %xmm0,%xmm0
movslq (%r15),%r14
mov    0x10(%r12),%eax
and    $0x80,%eax
test   %eax,%eax
je     1692b <TIFFReadDirEntryFloatArray+0x68b>
lea    0x4(%r15),%rdi
callq  8480 <TIFFSwabLong@plt>
xorpd  %xmm0,%xmm0
mov    0x4(%r15),%eax
test   %eax,%eax
je     16428 <TIFFReadDirEntryFloatArray+0x188>
cvtsi2ss %r14d,%xmm1
mov    %eax,%eax
cvtsi2ss %rax,%xmm2
divss  %xmm2,%xmm1
lea    0x4(%r13),%rax
jmpq   16430 <TIFFReadDirEntryFloatArray+0x190>
mov    0x10(%r12),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
jne    1696d <TIFFReadDirEntryFloatArray+0x6cd>
mov    %rax,%r13
jmp    1697c <TIFFReadDirEntryFloatArray+0x6dc>
cvtsd2ss %xmm0,%xmm0
jmpq   165fa <TIFFReadDirEntryFloatArray+0x35a>
mov    %rax,%r13
mov    %r15,%rdi
callq  8480 <TIFFSwabLong@plt>
xorpd  %xmm0,%xmm0
mov    (%r15),%eax
lea    0x4(%r15),%r14
mov    0x10(%r12),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
je     169a8 <TIFFReadDirEntryFloatArray+0x708>
mov    %rax,%r12
mov    %r14,%rdi
callq  8480 <TIFFSwabLong@plt>
mov    %r12,%rax
mov    -0x80(%rbp),%r12
xorpd  %xmm0,%xmm0
mov    (%r14),%ecx
test   %ecx,%ecx
je     168b2 <TIFFReadDirEntryFloatArray+0x612>
mov    %eax,%eax
cvtsi2ss %rax,%xmm1
mov    %ecx,%eax
cvtsi2ss %rax,%xmm2
divss  %xmm2,%xmm1
lea    0x4(%r13),%rax
jmpq   168ba <TIFFReadDirEntryFloatArray+0x61a>
xchg   %ax,%ax

00000000000169d0 <TIFFReadDirEntryDoubleArray>:
push   %rbp
mov    %rsp,%rbp
sub    $0xa0,%rsp
mov    $0x2,%eax
movzwl 0x2(%rsi),%ecx
add    $0xffffffff,%ecx
cmp    $0x10,%ecx
jbe    169ee <TIFFReadDirEntryDoubleArray+0x1e>
leaveq 
retq   
lea    0x3c8c3(%rip),%r8        # 532b8 <reason.25+0x1192>
movslq (%r8,%rcx,4),%rcx
add    %r8,%rcx
jmpq   *%rcx
leaveq 
retq   
lea    -0x94(%rbp),%r9
mov    $0x8,%ecx
lea    -0x90(%rbp),%r8
mov    %rdi,%rax
mov    %rsi,%r10
mov    %r15,-0x78(%rbp)
mov    %rsi,-0x88(%rbp)
mov    %rdi,-0x80(%rbp)
mov    %r10,%rsi
mov    %rax,%rdi
mov    %rdx,%r15
mov    %r9,%rdx
callq  13fd0 <TIFFReadDirEntryArray>
test   %eax,%eax
jne    16ae6 <TIFFReadDirEntryDoubleArray+0x116>
mov    -0x90(%rbp),%rdi
test   %rdi,%rdi
je     16ae6 <TIFFReadDirEntryDoubleArray+0x116>
xor    %eax,%eax
mov    -0x88(%rbp),%rdx
movzwl 0x2(%rdx),%ecx
cmp    $0xc,%cx
je     16af3 <TIFFReadDirEntryDoubleArray+0x123>
mov    -0x94(%rbp),%edi
shl    $0x3,%rdi
mov    %r15,-0x28(%rbp)
mov    %rdx,%r15
callq  8440 <_TIFFmalloc@plt>
test   %rax,%rax
je     16b21 <TIFFReadDirEntryDoubleArray+0x151>
movzwl 0x2(%r15),%ecx
add    $0xffffffff,%ecx
cmp    $0x10,%ecx
ja     16b72 <TIFFReadDirEntryDoubleArray+0x1a2>
xorpd  %xmm0,%xmm0
lea    0x3c859(%rip),%rdx        # 532fc <reason.25+0x11d6>
movslq (%rdx,%rcx,4),%rcx
add    %rdx,%rcx
jmpq   *%rcx
mov    -0x80(%rbp),%rcx
mov    0x10(%rcx),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
je     16ad5 <TIFFReadDirEntryDoubleArray+0x105>
mov    %rax,%r15
mov    -0x90(%rbp),%rdi
mov    -0x94(%rbp),%esi
callq  8b70 <TIFFSwabArrayOfLong@plt>
mov    %r15,%rax
mov    -0x90(%rbp),%rdx
xor    %ecx,%ecx
mov    %rax,%rsi
jmpq   16d0f <TIFFReadDirEntryDoubleArray+0x33f>
movq   $0x0,(%r15)
mov    -0x78(%rbp),%r15
leaveq 
retq   
mov    -0x80(%rbp),%rcx
mov    0x10(%rcx),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
je     16b11 <TIFFReadDirEntryDoubleArray+0x141>
mov    -0x94(%rbp),%esi
callq  8930 <TIFFSwabArrayOfLong8@plt>
xor    %eax,%eax
mov    -0x90(%rbp),%rcx
mov    %rcx,(%r15)
mov    -0x78(%rbp),%r15
leaveq 
retq   
mov    -0x90(%rbp),%rdi
callq  8bb0 <_TIFFfree@plt>
mov    $0x7,%eax
mov    -0x78(%rbp),%r15
leaveq 
retq   
lea    0x8(%r13),%rax
movapd %xmm0,%xmm1
movsd  %xmm1,0x0(%r13)
add    $0x8,%r15
add    $0x1,%ebx
mov    -0x94(%rbp),%ecx
cmp    %ebx,%ecx
ja     16d1e <TIFFReadDirEntryDoubleArray+0x34e>
mov    -0x30(%rbp),%rbx
mov    -0x88(%rbp),%r14
mov    -0x70(%rbp),%r13
mov    -0x50(%rbp),%r12
mov    -0x20(%rbp),%rax
mov    %rax,%r15
mov    -0x90(%rbp),%rdi
callq  8bb0 <_TIFFfree@plt>
mov    -0x28(%rbp),%rax
mov    %r15,(%rax)
xor    %eax,%eax
mov    -0x78(%rbp),%r15
leaveq 
retq   
mov    -0x90(%rbp),%rdx
xor    %ecx,%ecx
mov    %rax,%rsi
jmpq   16d54 <TIFFReadDirEntryDoubleArray+0x384>
mov    -0x90(%rbp),%rdx
xor    %ecx,%ecx
mov    %rax,%rsi
jmpq   16d7a <TIFFReadDirEntryDoubleArray+0x3aa>
mov    -0x90(%rbp),%r15
mov    %rax,-0x8(%rbp)
mov    %r12,-0x38(%rbp)
mov    %r13,-0x58(%rbp)
mov    %r14,-0x88(%rbp)
xor    %r12d,%r12d
mov    -0x80(%rbp),%r13
jmpq   16dc1 <TIFFReadDirEntryDoubleArray+0x3f1>
mov    -0x90(%rbp),%r15
mov    %rax,-0x8(%rbp)
mov    %r12,-0x38(%rbp)
mov    %r13,-0x58(%rbp)
mov    %r14,-0x88(%rbp)
xor    %r12d,%r12d
mov    -0x80(%rbp),%r13
jmpq   16e18 <TIFFReadDirEntryDoubleArray+0x448>
mov    -0x90(%rbp),%r15
mov    %rax,-0x10(%rbp)
mov    %r12,-0x40(%rbp)
mov    %r13,-0x60(%rbp)
mov    %r14,-0x88(%rbp)
xor    %r12d,%r12d
mov    -0x80(%rbp),%r13
jmpq   16e71 <TIFFReadDirEntryDoubleArray+0x4a1>
mov    -0x90(%rbp),%r15
mov    %rax,-0x10(%rbp)
mov    %r12,-0x40(%rbp)
mov    %r13,-0x60(%rbp)
mov    %r14,-0x88(%rbp)
xor    %r12d,%r12d
mov    -0x80(%rbp),%r13
jmpq   16ec7 <TIFFReadDirEntryDoubleArray+0x4f7>
mov    -0x90(%rbp),%r15
movdqa 0x3d897(%rip),%xmm2        # 544f0 <module.110+0x191>
movdqa 0x3d89f(%rip),%xmm1        # 54500 <module.110+0x1a1>
mov    %rax,-0x18(%rbp)
mov    %r12,-0x48(%rbp)
mov    %r13,-0x68(%rbp)
mov    %r14,-0x88(%rbp)
xor    %r12d,%r12d
mov    -0x80(%rbp),%r13
jmpq   16f3a <TIFFReadDirEntryDoubleArray+0x56a>
mov    -0x90(%rbp),%r15
mov    %rax,-0x18(%rbp)
mov    %r12,-0x48(%rbp)
mov    %r13,-0x68(%rbp)
mov    %r14,-0x88(%rbp)
xor    %r12d,%r12d
mov    -0x80(%rbp),%r13
jmpq   16f91 <TIFFReadDirEntryDoubleArray+0x5c1>
mov    -0x90(%rbp),%r15
mov    %rax,-0x20(%rbp)
mov    %r12,-0x50(%rbp)
mov    %r13,-0x70(%rbp)
mov    %r14,-0x88(%rbp)
mov    %rbx,-0x30(%rbp)
xor    %ebx,%ebx
mov    -0x80(%rbp),%r12
jmpq   16fc9 <TIFFReadDirEntryDoubleArray+0x5f9>
mov    -0x90(%rbp),%r15
mov    %rax,-0x20(%rbp)
mov    %r12,-0x50(%rbp)
mov    %r13,-0x70(%rbp)
mov    %r14,-0x88(%rbp)
mov    %rbx,-0x30(%rbp)
xor    %ebx,%ebx
mov    -0x80(%rbp),%r12
jmpq   16b4d <TIFFReadDirEntryDoubleArray+0x17d>
movss  (%rdx),%xmm0
cvtss2sd %xmm0,%xmm0
movsd  %xmm0,(%rsi)
add    $0x4,%rdx
add    $0x8,%rsi
add    $0x1,%ecx
mov    -0x94(%rbp),%edi
cmp    %ecx,%edi
ja     16cf8 <TIFFReadDirEntryDoubleArray+0x328>
jmpq   16b72 <TIFFReadDirEntryDoubleArray+0x1a2>
mov    0x10(%r12),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
jne    16fef <TIFFReadDirEntryDoubleArray+0x61f>
mov    %rax,%r13
jmpq   16ffe <TIFFReadDirEntryDoubleArray+0x62e>
movzbl (%rdx),%edi
movzbl %dil,%edi
cvtsi2sd %rdi,%xmm0
movsd  %xmm0,(%rsi)
add    $0x1,%rdx
add    $0x8,%rsi
add    $0x1,%ecx
mov    -0x94(%rbp),%edi
cmp    %ecx,%edi
ja     16d39 <TIFFReadDirEntryDoubleArray+0x369>
jmpq   16b72 <TIFFReadDirEntryDoubleArray+0x1a2>
movsbq (%rdx),%rdi
cvtsi2sd %edi,%xmm0
movsd  %xmm0,(%rsi)
add    $0x1,%rdx
add    $0x8,%rsi
add    $0x1,%ecx
mov    -0x94(%rbp),%edi
cmp    %ecx,%edi
ja     16d63 <TIFFReadDirEntryDoubleArray+0x393>
jmpq   16b72 <TIFFReadDirEntryDoubleArray+0x1a2>
mov    0x10(%r13),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
je     16da5 <TIFFReadDirEntryDoubleArray+0x3d5>
mov    %rax,%r14
mov    %r15,%rdi
callq  87c0 <TIFFSwabShort@plt>
mov    %r14,%rax
movzwl (%r15),%ecx
movzwl %cx,%ecx
cvtsi2sd %rcx,%xmm0
movsd  %xmm0,(%rax)
add    $0x2,%r15
add    $0x8,%rax
add    $0x1,%r12d
mov    -0x94(%rbp),%ecx
cmp    %r12d,%ecx
ja     16d89 <TIFFReadDirEntryDoubleArray+0x3b9>
mov    -0x88(%rbp),%r14
mov    -0x58(%rbp),%r13
mov    -0x38(%rbp),%r12
mov    -0x8(%rbp),%rax
jmpq   16b72 <TIFFReadDirEntryDoubleArray+0x1a2>
mov    0x10(%r13),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
je     16e00 <TIFFReadDirEntryDoubleArray+0x430>
mov    %rax,%r14
mov    %r15,%rdi
callq  87c0 <TIFFSwabShort@plt>
mov    %r14,%rax
movswq (%r15),%rcx
cvtsi2sd %ecx,%xmm0
movsd  %xmm0,(%rax)
add    $0x2,%r15
add    $0x8,%rax
add    $0x1,%r12d
mov    -0x94(%rbp),%ecx
cmp    %r12d,%ecx
ja     16de4 <TIFFReadDirEntryDoubleArray+0x414>
mov    -0x88(%rbp),%r14
mov    -0x58(%rbp),%r13
mov    -0x38(%rbp),%r12
mov    -0x8(%rbp),%rax
jmpq   16b72 <TIFFReadDirEntryDoubleArray+0x1a2>
mov    0x10(%r13),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
je     16e57 <TIFFReadDirEntryDoubleArray+0x487>
mov    %rax,%r14
mov    %r15,%rdi
callq  8480 <TIFFSwabLong@plt>
mov    %r14,%rax
mov    (%r15),%ecx
mov    %ecx,%ecx
cvtsi2sd %rcx,%xmm0
movsd  %xmm0,(%rax)
add    $0x4,%r15
add    $0x8,%rax
add    $0x1,%r12d
mov    -0x94(%rbp),%ecx
cmp    %r12d,%ecx
ja     16e3b <TIFFReadDirEntryDoubleArray+0x46b>
mov    -0x88(%rbp),%r14
mov    -0x60(%rbp),%r13
mov    -0x40(%rbp),%r12
mov    -0x10(%rbp),%rax
jmpq   16b72 <TIFFReadDirEntryDoubleArray+0x1a2>
mov    0x10(%r13),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
je     16eb0 <TIFFReadDirEntryDoubleArray+0x4e0>
mov    %rax,%r14
mov    %r15,%rdi
callq  8480 <TIFFSwabLong@plt>
mov    %r14,%rax
movslq (%r15),%rcx
cvtsi2sd %ecx,%xmm0
movsd  %xmm0,(%rax)
add    $0x4,%r15
add    $0x8,%rax
add    $0x1,%r12d
mov    -0x94(%rbp),%ecx
cmp    %r12d,%ecx
ja     16e94 <TIFFReadDirEntryDoubleArray+0x4c4>
mov    -0x88(%rbp),%r14
mov    -0x60(%rbp),%r13
mov    -0x40(%rbp),%r12
mov    -0x10(%rbp),%rax
jmpq   16b72 <TIFFReadDirEntryDoubleArray+0x1a2>
mov    0x10(%r13),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
je     16f16 <TIFFReadDirEntryDoubleArray+0x546>
mov    %rax,%r14
mov    %r15,%rdi
callq  8730 <TIFFSwabLong8@plt>
mov    %r14,%rax
movdqa 0x3d5f2(%rip),%xmm1        # 54500 <module.110+0x1a1>
movdqa 0x3d5da(%rip),%xmm2        # 544f0 <module.110+0x191>
mov    (%r15),%rcx
movq   %rcx,%xmm0
punpckldq %xmm2,%xmm0
subpd  %xmm1,%xmm0
haddpd %xmm0,%xmm0
movsd  %xmm0,(%rax)
add    $0x8,%r15
add    $0x8,%rax
add    $0x1,%r12d
mov    -0x94(%rbp),%ecx
cmp    %r12d,%ecx
ja     16eea <TIFFReadDirEntryDoubleArray+0x51a>
mov    -0x88(%rbp),%r14
mov    -0x68(%rbp),%r13
mov    -0x48(%rbp),%r12
mov    -0x18(%rbp),%rax
jmpq   16b72 <TIFFReadDirEntryDoubleArray+0x1a2>
mov    0x10(%r13),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
je     16f79 <TIFFReadDirEntryDoubleArray+0x5a9>
mov    %rax,%r14
mov    %r15,%rdi
callq  8730 <TIFFSwabLong8@plt>
mov    %r14,%rax
mov    (%r15),%rcx
cvtsi2sd %rcx,%xmm0
movsd  %xmm0,(%rax)
add    $0x8,%r15
add    $0x8,%rax
add    $0x1,%r12d
mov    -0x94(%rbp),%ecx
cmp    %r12d,%ecx
ja     16f5d <TIFFReadDirEntryDoubleArray+0x58d>
mov    -0x88(%rbp),%r14
mov    -0x68(%rbp),%r13
mov    -0x48(%rbp),%r12
mov    -0x18(%rbp),%rax
jmpq   16b72 <TIFFReadDirEntryDoubleArray+0x1a2>
lea    0x8(%r13),%rax
movapd %xmm0,%xmm1
movsd  %xmm1,0x0(%r13)
add    $0x8,%r15
add    $0x1,%ebx
mov    -0x94(%rbp),%ecx
cmp    %ebx,%ecx
ja     17041 <TIFFReadDirEntryDoubleArray+0x671>
mov    -0x30(%rbp),%rbx
mov    -0x88(%rbp),%r14
mov    -0x70(%rbp),%r13
mov    -0x50(%rbp),%r12
mov    -0x20(%rbp),%rax
jmpq   16b72 <TIFFReadDirEntryDoubleArray+0x1a2>
mov    %rax,%r13
mov    %r15,%rdi
callq  8480 <TIFFSwabLong@plt>
xorpd  %xmm0,%xmm0
movslq (%r15),%r14
mov    0x10(%r12),%eax
and    $0x80,%eax
test   %eax,%eax
je     1701c <TIFFReadDirEntryDoubleArray+0x64c>
lea    0x4(%r15),%rdi
callq  8480 <TIFFSwabLong@plt>
xorpd  %xmm0,%xmm0
mov    0x4(%r15),%eax
test   %eax,%eax
je     16b38 <TIFFReadDirEntryDoubleArray+0x168>
cvtsi2sd %r14d,%xmm1
mov    %eax,%eax
cvtsi2sd %rax,%xmm2
divsd  %xmm2,%xmm1
lea    0x8(%r13),%rax
jmpq   16b40 <TIFFReadDirEntryDoubleArray+0x170>
mov    0x10(%r12),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
jne    17055 <TIFFReadDirEntryDoubleArray+0x685>
mov    %rax,%r13
jmp    17064 <TIFFReadDirEntryDoubleArray+0x694>
mov    %rax,%r13
mov    %r15,%rdi
callq  8480 <TIFFSwabLong@plt>
xorpd  %xmm0,%xmm0
mov    (%r15),%eax
lea    0x4(%r15),%r14
mov    0x10(%r12),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
je     17090 <TIFFReadDirEntryDoubleArray+0x6c0>
mov    %rax,%r12
mov    %r14,%rdi
callq  8480 <TIFFSwabLong@plt>
mov    %r12,%rax
mov    -0x80(%rbp),%r12
xorpd  %xmm0,%xmm0
mov    (%r14),%ecx
test   %ecx,%ecx
je     16fb4 <TIFFReadDirEntryDoubleArray+0x5e4>
mov    %eax,%eax
cvtsi2sd %rax,%xmm1
mov    %ecx,%eax
cvtsi2sd %rax,%xmm2
divsd  %xmm2,%xmm1
lea    0x8(%r13),%rax
jmpq   16fbc <TIFFReadDirEntryDoubleArray+0x5ec>
nopw   %cs:0x0(%rax,%rax,1)

00000000000170c0 <TIFFReadDirEntryIfd8Array>:
push   %rbp
mov    %rsp,%rbp
sub    $0x50,%rsp
mov    $0x2,%eax
movzwl 0x2(%rsi),%ecx
cmp    $0xf,%cx
jbe    170e5 <TIFFReadDirEntryIfd8Array+0x25>
cmp    $0x10,%cx
je     170f3 <TIFFReadDirEntryIfd8Array+0x33>
cmp    $0x12,%cx
je     170f3 <TIFFReadDirEntryIfd8Array+0x33>
leaveq 
retq   
cmp    $0x4,%cx
je     170f3 <TIFFReadDirEntryIfd8Array+0x33>
cmp    $0xd,%cx
je     170f3 <TIFFReadDirEntryIfd8Array+0x33>
leaveq 
retq   
lea    -0x44(%rbp),%r10
mov    $0x8,%ecx
lea    -0x40(%rbp),%r8
mov    %rdi,%rax
mov    %rsi,%r9
mov    %r15,-0x28(%rbp)
mov    %rsi,-0x38(%rbp)
mov    %rdi,-0x30(%rbp)
mov    %r9,%rsi
mov    %rax,%rdi
mov    %rdx,%r15
mov    %r10,%rdx
callq  13fd0 <TIFFReadDirEntryArray>
test   %eax,%eax
jne    17178 <TIFFReadDirEntryIfd8Array+0xb8>
mov    -0x40(%rbp),%rdi
test   %rdi,%rdi
je     17178 <TIFFReadDirEntryIfd8Array+0xb8>
xor    %eax,%eax
mov    -0x38(%rbp),%rdx
movzwl 0x2(%rdx),%ecx
cmp    $0x10,%cx
je     17185 <TIFFReadDirEntryIfd8Array+0xc5>
cmp    $0x12,%cx
je     17185 <TIFFReadDirEntryIfd8Array+0xc5>
mov    -0x44(%rbp),%eax
shl    $0x3,%eax
mov    %eax,%edi
mov    %r15,-0x10(%rbp)
mov    %rdx,%r15
callq  8440 <_TIFFmalloc@plt>
test   %rax,%rax
je     171a3 <TIFFReadDirEntryIfd8Array+0xe3>
movzwl 0x2(%r15),%ecx
cmp    $0x4,%cx
je     171b7 <TIFFReadDirEntryIfd8Array+0xf7>
cmp    $0xd,%cx
je     171b7 <TIFFReadDirEntryIfd8Array+0xf7>
mov    %rax,%r15
jmpq   17217 <TIFFReadDirEntryIfd8Array+0x157>
movq   $0x0,(%r15)
mov    -0x28(%rbp),%r15
leaveq 
retq   
mov    %rdi,(%r15)
mov    -0x30(%rbp),%rcx
mov    0x10(%rcx),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
jne    1722f <TIFFReadDirEntryIfd8Array+0x16f>
mov    -0x28(%rbp),%r15
leaveq 
retq   
mov    -0x40(%rbp),%rdi
callq  8bb0 <_TIFFfree@plt>
mov    $0x7,%eax
mov    -0x28(%rbp),%r15
leaveq 
retq   
mov    -0x40(%rbp),%r15
mov    %rax,-0x8(%rbp)
mov    %r12,-0x18(%rbp)
mov    %r13,-0x20(%rbp)
mov    %r14,-0x38(%rbp)
mov    %rax,%r12
xor    %r13d,%r13d
mov    -0x30(%rbp),%r14
jmp    171ff <TIFFReadDirEntryIfd8Array+0x13f>
mov    0x10(%r14),%eax
and    $0x80,%eax
test   %eax,%eax
je     171ec <TIFFReadDirEntryIfd8Array+0x12c>
mov    %r15,%rdi
callq  8480 <TIFFSwabLong@plt>
mov    (%r15),%eax
mov    %rax,(%r12)
add    $0x4,%r15
add    $0x8,%r12
add    $0x1,%r13d
mov    -0x44(%rbp),%eax
cmp    %r13d,%eax
ja     171d7 <TIFFReadDirEntryIfd8Array+0x117>
mov    -0x38(%rbp),%r14
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
mov    -0x8(%rbp),%r15
mov    -0x40(%rbp),%rdi
callq  8bb0 <_TIFFfree@plt>
mov    -0x10(%rbp),%rax
mov    %r15,(%rax)
xor    %eax,%eax
mov    -0x28(%rbp),%r15
leaveq 
retq   
mov    %rax,%r15
mov    -0x44(%rbp),%esi
callq  8930 <TIFFSwabArrayOfLong8@plt>
mov    %r15,%rax
mov    -0x28(%rbp),%r15
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

0000000000017250 <TIFFReadDirEntryPersampleShort>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
movzwl 0x82(%rdi),%eax
cmp    0x8(%rsi),%rax
jbe    1726c <TIFFReadDirEntryPersampleShort+0x1c>
mov    $0x1,%eax
leaveq 
retq   
lea    -0x18(%rbp),%rax
mov    %rdi,%rcx
mov    %rdi,-0x8(%rbp)
mov    %rdx,-0x10(%rbp)
mov    %rax,%rdx
mov    %rcx,%rdi
callq  14b60 <TIFFReadDirEntryShortArray>
test   %eax,%eax
je     1728c <TIFFReadDirEntryPersampleShort+0x3c>
leaveq 
retq   
xor    %eax,%eax
mov    -0x18(%rbp),%rcx
test   %rcx,%rcx
jne    17299 <TIFFReadDirEntryPersampleShort+0x49>
leaveq 
retq   
movzwl (%rcx),%esi
add    $0x2,%rcx
mov    -0x8(%rbp),%rdx
movzwl 0x82(%rdx),%edx
mov    -0x10(%rbp),%r8
mov    %si,(%r8)
add    $0xffff,%edx
jmp    172c5 <TIFFReadDirEntryPersampleShort+0x75>
add    $0x2,%rcx
add    $0xffff,%edx
test   %dx,%dx
je     172db <TIFFReadDirEntryPersampleShort+0x8b>
movzwl (%r8),%edi
movzwl (%rcx),%esi
cmp    %si,%di
je     172bb <TIFFReadDirEntryPersampleShort+0x6b>
mov    $0x5,%eax
mov    %rax,-0x10(%rbp)
mov    -0x18(%rbp),%rdi
callq  8bb0 <_TIFFfree@plt>
mov    -0x10(%rbp),%rax
leaveq 
retq   
xchg   %ax,%ax

00000000000172f0 <TIFFReadDirEntryCheckedByte>:
push   %rbp
mov    %rsp,%rbp
movzbl 0x10(%rsi),%eax
mov    %al,(%rdx)
leaveq 
retq   
nopl   0x0(%rax)

0000000000017300 <TIFFReadDirEntryCheckedSbyte>:
push   %rbp
mov    %rsp,%rbp
movsbq 0x10(%rsi),%rax
mov    %al,(%rdx)
leaveq 
retq   
nopl   (%rax)

0000000000017310 <TIFFReadDirEntryCheckedShort>:
push   %rbp
mov    %rsp,%rbp
movzwl 0x10(%rsi),%eax
mov    %ax,(%rdx)
mov    0x10(%rdi),%eax
and    $0x80,%eax
test   %eax,%eax
jne    17329 <TIFFReadDirEntryCheckedShort+0x19>
leaveq 
retq   
mov    %rdx,%rdi
callq  87c0 <TIFFSwabShort@plt>
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

0000000000017340 <TIFFReadDirEntryCheckedSshort>:
push   %rbp
mov    %rsp,%rbp
movswq 0x10(%rsi),%rax
mov    %ax,(%rdx)
mov    0x10(%rdi),%eax
and    $0x80,%eax
test   %eax,%eax
jne    1735a <TIFFReadDirEntryCheckedSshort+0x1a>
leaveq 
retq   
mov    %rdx,%rdi
callq  87c0 <TIFFSwabShort@plt>
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nop

0000000000017370 <TIFFReadDirEntryCheckedLong>:
push   %rbp
mov    %rsp,%rbp
mov    0x10(%rsi),%eax
mov    %eax,(%rdx)
mov    0x10(%rdi),%eax
and    $0x80,%eax
test   %eax,%eax
jne    17387 <TIFFReadDirEntryCheckedLong+0x17>
leaveq 
retq   
mov    %rdx,%rdi
callq  8480 <TIFFSwabLong@plt>
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   0x0(%rax)

00000000000173a0 <TIFFReadDirEntryCheckedSlong>:
push   %rbp
mov    %rsp,%rbp
movslq 0x10(%rsi),%rax
mov    %eax,(%rdx)
mov    0x10(%rdi),%eax
and    $0x80,%eax
test   %eax,%eax
jne    173b8 <TIFFReadDirEntryCheckedSlong+0x18>
leaveq 
retq   
mov    %rdx,%rdi
callq  8480 <TIFFSwabLong@plt>
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   (%rax)

00000000000173d0 <TIFFReadDirEntryCheckedLong8>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    0x10(%rdi),%eax
mov    %rax,%rcx
and    $0x80000,%ecx
test   %ecx,%ecx
jne    1744e <TIFFReadDirEntryCheckedLong8+0x7e>
mov    0x10(%rsi),%ecx
mov    %ecx,-0x14(%rbp)
and    $0x80,%eax
test   %eax,%eax
je     1741f <TIFFReadDirEntryCheckedLong8+0x4f>
lea    -0x14(%rbp),%rax
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rdi,%r14
mov    %rax,%rdi
mov    %rdx,%r15
callq  8480 <TIFFSwabLong@plt>
mov    %r15,%rdx
mov    %r14,%rdi
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
mov    -0x14(%rbp),%esi
mov    $0x8,%eax
mov    %rdi,%r8
mov    %rdx,%rcx
mov    %rdi,-0x10(%rbp)
mov    %rdx,-0x8(%rbp)
mov    %rax,%rdx
mov    %r8,%rdi
callq  17cc0 <TIFFReadDirEntryData>
test   %eax,%eax
jne    17466 <TIFFReadDirEntryCheckedLong8+0x96>
mov    -0x8(%rbp),%rdx
mov    -0x10(%rbp),%rdi
jmp    17455 <TIFFReadDirEntryCheckedLong8+0x85>
mov    0x10(%rsi),%rax
mov    %rax,(%rdx)
xor    %eax,%eax
mov    0x10(%rdi),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
jne    17468 <TIFFReadDirEntryCheckedLong8+0x98>
leaveq 
retq   
leaveq 
retq   
mov    %rdx,%rdi
callq  8730 <TIFFSwabLong8@plt>
xor    %eax,%eax
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nop

0000000000017480 <TIFFReadDirEntryCheckedSlong8>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    0x10(%rdi),%eax
mov    %rax,%rcx
and    $0x80000,%ecx
test   %ecx,%ecx
jne    174fe <TIFFReadDirEntryCheckedSlong8+0x7e>
mov    0x10(%rsi),%ecx
mov    %ecx,-0x14(%rbp)
and    $0x80,%eax
test   %eax,%eax
je     174cf <TIFFReadDirEntryCheckedSlong8+0x4f>
lea    -0x14(%rbp),%rax
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rdi,%r14
mov    %rax,%rdi
mov    %rdx,%r15
callq  8480 <TIFFSwabLong@plt>
mov    %r15,%rdx
mov    %r14,%rdi
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
mov    -0x14(%rbp),%esi
mov    $0x8,%eax
mov    %rdi,%r8
mov    %rdx,%rcx
mov    %rdi,-0x10(%rbp)
mov    %rdx,-0x8(%rbp)
mov    %rax,%rdx
mov    %r8,%rdi
callq  17cc0 <TIFFReadDirEntryData>
test   %eax,%eax
jne    17516 <TIFFReadDirEntryCheckedSlong8+0x96>
mov    -0x8(%rbp),%rdx
mov    -0x10(%rbp),%rdi
jmp    17505 <TIFFReadDirEntryCheckedSlong8+0x85>
mov    0x10(%rsi),%rax
mov    %rax,(%rdx)
xor    %eax,%eax
mov    0x10(%rdi),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
jne    17518 <TIFFReadDirEntryCheckedSlong8+0x98>
leaveq 
retq   
leaveq 
retq   
mov    %rdx,%rdi
callq  8730 <TIFFSwabLong8@plt>
xor    %eax,%eax
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nop

0000000000017530 <TIFFReadDirEntryCheckedRational>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    0x10(%rdi),%eax
mov    %rax,%rcx
and    $0x80000,%ecx
test   %ecx,%ecx
jne    175a9 <TIFFReadDirEntryCheckedRational+0x79>
mov    0x10(%rsi),%ecx
mov    %ecx,-0x14(%rbp)
and    $0x80,%eax
test   %eax,%eax
je     17579 <TIFFReadDirEntryCheckedRational+0x49>
lea    -0x14(%rbp),%rax
mov    %r15,-0x10(%rbp)
mov    %rdx,-0x8(%rbp)
mov    %rdi,%r15
mov    %rax,%rdi
callq  8480 <TIFFSwabLong@plt>
mov    %r15,%rdi
mov    -0x8(%rbp),%rdx
mov    -0x10(%rbp),%r15
mov    -0x14(%rbp),%esi
mov    $0x8,%eax
lea    -0x20(%rbp),%rcx
mov    %rdi,%r8
mov    %rdx,-0x8(%rbp)
mov    %rdi,-0x10(%rbp)
mov    %rax,%rdx
mov    %r8,%rdi
callq  17cc0 <TIFFReadDirEntryData>
test   %eax,%eax
jne    17601 <TIFFReadDirEntryCheckedRational+0xd1>
mov    -0x10(%rbp),%rdi
mov    -0x8(%rbp),%rdx
jmp    175b1 <TIFFReadDirEntryCheckedRational+0x81>
mov    0x10(%rsi),%rax
mov    %rax,-0x20(%rbp)
mov    0x10(%rdi),%eax
and    $0x80,%eax
test   %eax,%eax
je     175d9 <TIFFReadDirEntryCheckedRational+0xa9>
lea    -0x20(%rbp),%rdi
mov    $0x2,%esi
mov    %r15,-0x10(%rbp)
mov    %rdx,%r15
callq  8b70 <TIFFSwabArrayOfLong@plt>
mov    %r15,%rdx
mov    -0x10(%rbp),%r15
xor    %eax,%eax
mov    -0x20(%rbp),%esi
test   %esi,%esi
je     17603 <TIFFReadDirEntryCheckedRational+0xd3>
mov    -0x1c(%rbp),%ecx
test   %ecx,%ecx
je     17603 <TIFFReadDirEntryCheckedRational+0xd3>
mov    %esi,%esi
cvtsi2sd %rsi,%xmm0
mov    %ecx,%ecx
cvtsi2sd %rcx,%xmm1
divsd  %xmm1,%xmm0
movsd  %xmm0,(%rdx)
leaveq 
retq   
leaveq 
retq   
xorpd  %xmm0,%xmm0
movsd  %xmm0,(%rdx)
leaveq 
retq   
nopl   (%rax)

0000000000017610 <TIFFReadDirEntryCheckedSrational>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    0x10(%rdi),%eax
mov    %rax,%rcx
and    $0x80000,%ecx
test   %ecx,%ecx
jne    17689 <TIFFReadDirEntryCheckedSrational+0x79>
mov    0x10(%rsi),%ecx
mov    %ecx,-0x14(%rbp)
and    $0x80,%eax
test   %eax,%eax
je     17659 <TIFFReadDirEntryCheckedSrational+0x49>
lea    -0x14(%rbp),%rax
mov    %r15,-0x10(%rbp)
mov    %rdx,-0x8(%rbp)
mov    %rdi,%r15
mov    %rax,%rdi
callq  8480 <TIFFSwabLong@plt>
mov    %r15,%rdi
mov    -0x8(%rbp),%rdx
mov    -0x10(%rbp),%r15
mov    -0x14(%rbp),%esi
mov    $0x8,%eax
lea    -0x20(%rbp),%rcx
mov    %rdi,%r8
mov    %rdx,-0x8(%rbp)
mov    %rdi,-0x10(%rbp)
mov    %rax,%rdx
mov    %r8,%rdi
callq  17cc0 <TIFFReadDirEntryData>
test   %eax,%eax
jne    176df <TIFFReadDirEntryCheckedSrational+0xcf>
mov    -0x10(%rbp),%rdi
mov    -0x8(%rbp),%rdx
jmp    17691 <TIFFReadDirEntryCheckedSrational+0x81>
mov    0x10(%rsi),%rax
mov    %rax,-0x20(%rbp)
mov    0x10(%rdi),%eax
and    $0x80,%eax
test   %eax,%eax
je     176b9 <TIFFReadDirEntryCheckedSrational+0xa9>
lea    -0x20(%rbp),%rdi
mov    $0x2,%esi
mov    %r15,-0x10(%rbp)
mov    %rdx,%r15
callq  8b70 <TIFFSwabArrayOfLong@plt>
mov    %r15,%rdx
mov    -0x10(%rbp),%r15
xor    %eax,%eax
movslq -0x20(%rbp),%rsi
test   %esi,%esi
je     176e1 <TIFFReadDirEntryCheckedSrational+0xd1>
mov    -0x1c(%rbp),%ecx
test   %ecx,%ecx
je     176e1 <TIFFReadDirEntryCheckedSrational+0xd1>
cvtsi2sd %esi,%xmm0
mov    %ecx,%ecx
cvtsi2sd %rcx,%xmm1
divsd  %xmm1,%xmm0
movsd  %xmm0,(%rdx)
leaveq 
retq   
leaveq 
retq   
xorpd  %xmm0,%xmm0
movsd  %xmm0,(%rdx)
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

00000000000176f0 <TIFFReadDirEntryCheckedFloat>:
push   %rbp
mov    %rsp,%rbp
mov    0x10(%rsi),%eax
movq   %rax,%xmm0
movss  %xmm0,(%rdx)
mov    0x10(%rdi),%eax
and    $0x80,%eax
test   %eax,%eax
jne    1770e <TIFFReadDirEntryCheckedFloat+0x1e>
leaveq 
retq   
mov    %rdx,%rdi
callq  8480 <TIFFSwabLong@plt>
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

0000000000017720 <TIFFReadDirEntryCheckedDouble>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    0x10(%rdi),%eax
mov    %rax,%rcx
and    $0x80000,%ecx
test   %ecx,%ecx
jne    1779e <TIFFReadDirEntryCheckedDouble+0x7e>
mov    0x10(%rsi),%ecx
mov    %ecx,-0x14(%rbp)
and    $0x80,%eax
test   %eax,%eax
je     1776f <TIFFReadDirEntryCheckedDouble+0x4f>
lea    -0x14(%rbp),%rax
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rdi,%r14
mov    %rax,%rdi
mov    %rdx,%r15
callq  8480 <TIFFSwabLong@plt>
mov    %r15,%rdx
mov    %r14,%rdi
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
mov    -0x14(%rbp),%esi
mov    $0x8,%eax
mov    %rdi,%r8
mov    %rdx,%rcx
mov    %rdi,-0x10(%rbp)
mov    %rdx,-0x8(%rbp)
mov    %rax,%rdx
mov    %r8,%rdi
callq  17cc0 <TIFFReadDirEntryData>
test   %eax,%eax
jne    177bc <TIFFReadDirEntryCheckedDouble+0x9c>
mov    -0x8(%rbp),%rdx
mov    -0x10(%rbp),%rdi
jmp    177ab <TIFFReadDirEntryCheckedDouble+0x8b>
mov    0x10(%rsi),%rax
movq   %rax,%xmm0
movsd  %xmm0,(%rdx)
xor    %eax,%eax
mov    0x10(%rdi),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
jne    177be <TIFFReadDirEntryCheckedDouble+0x9e>
leaveq 
retq   
leaveq 
retq   
mov    %rdx,%rdi
callq  8730 <TIFFSwabLong8@plt>
xor    %eax,%eax
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

00000000000177d0 <TIFFReadDirEntryCheckRangeByteSbyte>:
push   %rbp
mov    %rsp,%rbp
test   %dil,%dil
jns    177e0 <TIFFReadDirEntryCheckRangeByteSbyte+0x10>
mov    $0x4,%eax
leaveq 
retq   
xor    %eax,%eax
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nop

00000000000177f0 <TIFFReadDirEntryCheckRangeByteShort>:
push   %rbp
mov    %rsp,%rbp
cmp    $0xff,%di
jbe    17802 <TIFFReadDirEntryCheckRangeByteShort+0x12>
mov    $0x4,%eax
leaveq 
retq   
xor    %eax,%eax
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)

0000000000017810 <TIFFReadDirEntryCheckRangeByteSshort>:
push   %rbp
mov    %rsp,%rbp
mov    $0x4,%eax
test   %di,%di
jns    17820 <TIFFReadDirEntryCheckRangeByteSshort+0x10>
leaveq 
retq   
cmp    $0xff,%di
jle    17829 <TIFFReadDirEntryCheckRangeByteSshort+0x19>
leaveq 
retq   
xor    %eax,%eax
leaveq 
retq   
nopl   (%rax)

0000000000017830 <TIFFReadDirEntryCheckRangeByteLong>:
push   %rbp
mov    %rsp,%rbp
cmp    $0xff,%edi
jbe    17843 <TIFFReadDirEntryCheckRangeByteLong+0x13>
mov    $0x4,%eax
leaveq 
retq   
xor    %eax,%eax
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

0000000000017850 <TIFFReadDirEntryCheckRangeByteSlong>:
push   %rbp
mov    %rsp,%rbp
mov    $0x4,%eax
test   %edi,%edi
jns    1785f <TIFFReadDirEntryCheckRangeByteSlong+0xf>
leaveq 
retq   
cmp    $0xff,%edi
jle    17869 <TIFFReadDirEntryCheckRangeByteSlong+0x19>
leaveq 
retq   
xor    %eax,%eax
leaveq 
retq   
nopl   (%rax)

0000000000017870 <TIFFReadDirEntryCheckRangeByteLong8>:
push   %rbp
mov    %rsp,%rbp
cmp    $0xff,%rdi
jbe    17884 <TIFFReadDirEntryCheckRangeByteLong8+0x14>
mov    $0x4,%eax
leaveq 
retq   
xor    %eax,%eax
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

0000000000017890 <TIFFReadDirEntryCheckRangeByteSlong8>:
push   %rbp
mov    %rsp,%rbp
mov    $0x4,%eax
test   %rdi,%rdi
jns    178a0 <TIFFReadDirEntryCheckRangeByteSlong8+0x10>
leaveq 
retq   
cmp    $0xff,%rdi
jle    178ab <TIFFReadDirEntryCheckRangeByteSlong8+0x1b>
leaveq 
retq   
xor    %eax,%eax
leaveq 
retq   
nop

00000000000178b0 <TIFFReadDirEntryCheckRangeSbyteByte>:
push   %rbp
mov    %rsp,%rbp
cmp    $0x7f,%dil
jbe    178c1 <TIFFReadDirEntryCheckRangeSbyteByte+0x11>
mov    $0x4,%eax
leaveq 
retq   
xor    %eax,%eax
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)

00000000000178d0 <TIFFReadDirEntryCheckRangeSbyteShort>:
push   %rbp
mov    %rsp,%rbp
cmp    $0x7f,%di
jbe    178e1 <TIFFReadDirEntryCheckRangeSbyteShort+0x11>
mov    $0x4,%eax
leaveq 
retq   
xor    %eax,%eax
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)

00000000000178f0 <TIFFReadDirEntryCheckRangeSbyteSshort>:
push   %rbp
mov    %rsp,%rbp
mov    $0x4,%eax
cmp    $0xff80,%di
jge    17901 <TIFFReadDirEntryCheckRangeSbyteSshort+0x11>
leaveq 
retq   
cmp    $0x7f,%di
jle    17909 <TIFFReadDirEntryCheckRangeSbyteSshort+0x19>
leaveq 
retq   
xor    %eax,%eax
leaveq 
retq   
nopl   (%rax)

0000000000017910 <TIFFReadDirEntryCheckRangeSbyteLong>:
push   %rbp
mov    %rsp,%rbp
cmp    $0x7f,%edi
jbe    17920 <TIFFReadDirEntryCheckRangeSbyteLong+0x10>
mov    $0x4,%eax
leaveq 
retq   
xor    %eax,%eax
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nop

0000000000017930 <TIFFReadDirEntryCheckRangeSbyteSlong>:
push   %rbp
mov    %rsp,%rbp
mov    $0x4,%eax
cmp    $0xffffff80,%edi
jge    17940 <TIFFReadDirEntryCheckRangeSbyteSlong+0x10>
leaveq 
retq   
cmp    $0x7f,%edi
jle    17947 <TIFFReadDirEntryCheckRangeSbyteSlong+0x17>
leaveq 
retq   
xor    %eax,%eax
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

0000000000017950 <TIFFReadDirEntryCheckRangeSbyteLong8>:
push   %rbp
mov    %rsp,%rbp
cmp    $0x7f,%rdi
jbe    17961 <TIFFReadDirEntryCheckRangeSbyteLong8+0x11>
mov    $0x4,%eax
leaveq 
retq   
xor    %eax,%eax
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)

0000000000017970 <TIFFReadDirEntryCheckRangeSbyteSlong8>:
push   %rbp
mov    %rsp,%rbp
mov    $0x4,%eax
cmp    $0xffffffffffffff80,%rdi
jge    17981 <TIFFReadDirEntryCheckRangeSbyteSlong8+0x11>
leaveq 
retq   
cmp    $0x7f,%rdi
jle    17989 <TIFFReadDirEntryCheckRangeSbyteSlong8+0x19>
leaveq 
retq   
xor    %eax,%eax
leaveq 
retq   
nopl   (%rax)

0000000000017990 <TIFFReadDirEntryCheckRangeShortSbyte>:
push   %rbp
mov    %rsp,%rbp
test   %dil,%dil
jns    179a0 <TIFFReadDirEntryCheckRangeShortSbyte+0x10>
mov    $0x4,%eax
leaveq 
retq   
xor    %eax,%eax
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nop

00000000000179b0 <TIFFReadDirEntryCheckRangeShortSshort>:
push   %rbp
mov    %rsp,%rbp
test   %di,%di
jns    179c0 <TIFFReadDirEntryCheckRangeShortSshort+0x10>
mov    $0x4,%eax
leaveq 
retq   
xor    %eax,%eax
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nop

00000000000179d0 <TIFFReadDirEntryCheckRangeShortLong>:
push   %rbp
mov    %rsp,%rbp
cmp    $0xffff,%edi
jbe    179e3 <TIFFReadDirEntryCheckRangeShortLong+0x13>
mov    $0x4,%eax
leaveq 
retq   
xor    %eax,%eax
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

00000000000179f0 <TIFFReadDirEntryCheckRangeShortSlong>:
push   %rbp
mov    %rsp,%rbp
mov    $0x4,%eax
test   %edi,%edi
jns    179ff <TIFFReadDirEntryCheckRangeShortSlong+0xf>
leaveq 
retq   
cmp    $0xffff,%edi
jle    17a09 <TIFFReadDirEntryCheckRangeShortSlong+0x19>
leaveq 
retq   
xor    %eax,%eax
leaveq 
retq   
nopl   (%rax)

0000000000017a10 <TIFFReadDirEntryCheckRangeShortLong8>:
push   %rbp
mov    %rsp,%rbp
cmp    $0xffff,%rdi
jbe    17a24 <TIFFReadDirEntryCheckRangeShortLong8+0x14>
mov    $0x4,%eax
leaveq 
retq   
xor    %eax,%eax
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

0000000000017a30 <TIFFReadDirEntryCheckRangeShortSlong8>:
push   %rbp
mov    %rsp,%rbp
mov    $0x4,%eax
test   %rdi,%rdi
jns    17a40 <TIFFReadDirEntryCheckRangeShortSlong8+0x10>
leaveq 
retq   
cmp    $0xffff,%rdi
jle    17a4b <TIFFReadDirEntryCheckRangeShortSlong8+0x1b>
leaveq 
retq   
xor    %eax,%eax
leaveq 
retq   
nop

0000000000017a50 <TIFFReadDirEntryCheckRangeSshortShort>:
push   %rbp
mov    %rsp,%rbp
cmp    $0x7fff,%di
jbe    17a62 <TIFFReadDirEntryCheckRangeSshortShort+0x12>
mov    $0x4,%eax
leaveq 
retq   
xor    %eax,%eax
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)

0000000000017a70 <TIFFReadDirEntryCheckRangeSshortLong>:
push   %rbp
mov    %rsp,%rbp
cmp    $0x7fff,%edi
jbe    17a83 <TIFFReadDirEntryCheckRangeSshortLong+0x13>
mov    $0x4,%eax
leaveq 
retq   
xor    %eax,%eax
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

0000000000017a90 <TIFFReadDirEntryCheckRangeSshortSlong>:
push   %rbp
mov    %rsp,%rbp
mov    $0x4,%eax
cmp    $0xffff8000,%edi
jge    17aa3 <TIFFReadDirEntryCheckRangeSshortSlong+0x13>
leaveq 
retq   
cmp    $0x7fff,%edi
jle    17aad <TIFFReadDirEntryCheckRangeSshortSlong+0x1d>
leaveq 
retq   
xor    %eax,%eax
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   0x0(%rax)

0000000000017ac0 <TIFFReadDirEntryCheckRangeSshortLong8>:
push   %rbp
mov    %rsp,%rbp
cmp    $0x7fff,%rdi
jbe    17ad4 <TIFFReadDirEntryCheckRangeSshortLong8+0x14>
mov    $0x4,%eax
leaveq 
retq   
xor    %eax,%eax
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

0000000000017ae0 <TIFFReadDirEntryCheckRangeSshortSlong8>:
push   %rbp
mov    %rsp,%rbp
mov    $0x4,%eax
cmp    $0xffffffffffff8000,%rdi
jge    17af4 <TIFFReadDirEntryCheckRangeSshortSlong8+0x14>
leaveq 
retq   
cmp    $0x7fff,%rdi
jle    17aff <TIFFReadDirEntryCheckRangeSshortSlong8+0x1f>
leaveq 
retq   
xor    %eax,%eax
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

0000000000017b10 <TIFFReadDirEntryCheckRangeLongSbyte>:
push   %rbp
mov    %rsp,%rbp
test   %dil,%dil
jns    17b20 <TIFFReadDirEntryCheckRangeLongSbyte+0x10>
mov    $0x4,%eax
leaveq 
retq   
xor    %eax,%eax
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nop

0000000000017b30 <TIFFReadDirEntryCheckRangeLongSshort>:
push   %rbp
mov    %rsp,%rbp
test   %di,%di
jns    17b40 <TIFFReadDirEntryCheckRangeLongSshort+0x10>
mov    $0x4,%eax
leaveq 
retq   
xor    %eax,%eax
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nop

0000000000017b50 <TIFFReadDirEntryCheckRangeLongSlong>:
push   %rbp
mov    %rsp,%rbp
test   %edi,%edi
jns    17b5f <TIFFReadDirEntryCheckRangeLongSlong+0xf>
mov    $0x4,%eax
leaveq 
retq   
xor    %eax,%eax
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

0000000000017b70 <TIFFReadDirEntryCheckRangeLongLong8>:
push   %rbp
mov    %rsp,%rbp
mov    $0xffffffff,%eax
cmp    %rax,%rdi
jbe    17b85 <TIFFReadDirEntryCheckRangeLongLong8+0x15>
mov    $0x4,%eax
leaveq 
retq   
xor    %eax,%eax
leaveq 
retq   
nopl   0x0(%rax)

0000000000017b90 <TIFFReadDirEntryCheckRangeLongSlong8>:
push   %rbp
mov    %rsp,%rbp
mov    $0x4,%eax
test   %rdi,%rdi
jns    17ba0 <TIFFReadDirEntryCheckRangeLongSlong8+0x10>
leaveq 
retq   
mov    $0xffffffff,%ecx
cmp    %rcx,%rdi
jle    17bac <TIFFReadDirEntryCheckRangeLongSlong8+0x1c>
leaveq 
retq   
xor    %eax,%eax
leaveq 
retq   

0000000000017bb0 <TIFFReadDirEntryCheckRangeSlongLong>:
push   %rbp
mov    %rsp,%rbp
cmp    $0x7fffffff,%edi
jbe    17bc3 <TIFFReadDirEntryCheckRangeSlongLong+0x13>
mov    $0x4,%eax
leaveq 
retq   
xor    %eax,%eax
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

0000000000017bd0 <TIFFReadDirEntryCheckRangeSlongLong8>:
push   %rbp
mov    %rsp,%rbp
cmp    $0x7fffffff,%rdi
jbe    17be4 <TIFFReadDirEntryCheckRangeSlongLong8+0x14>
mov    $0x4,%eax
leaveq 
retq   
xor    %eax,%eax
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

0000000000017bf0 <TIFFReadDirEntryCheckRangeSlongSlong8>:
push   %rbp
mov    %rsp,%rbp
mov    $0x4,%eax
cmp    $0xffffffff80000000,%rdi
jge    17c04 <TIFFReadDirEntryCheckRangeSlongSlong8+0x14>
leaveq 
retq   
cmp    $0x7fffffff,%rdi
jle    17c0f <TIFFReadDirEntryCheckRangeSlongSlong8+0x1f>
leaveq 
retq   
xor    %eax,%eax
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

0000000000017c20 <TIFFReadDirEntryCheckRangeLong8Sbyte>:
push   %rbp
mov    %rsp,%rbp
test   %dil,%dil
jns    17c30 <TIFFReadDirEntryCheckRangeLong8Sbyte+0x10>
mov    $0x4,%eax
leaveq 
retq   
xor    %eax,%eax
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nop

0000000000017c40 <TIFFReadDirEntryCheckRangeLong8Sshort>:
push   %rbp
mov    %rsp,%rbp
test   %di,%di
jns    17c50 <TIFFReadDirEntryCheckRangeLong8Sshort+0x10>
mov    $0x4,%eax
leaveq 
retq   
xor    %eax,%eax
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nop

0000000000017c60 <TIFFReadDirEntryCheckRangeLong8Slong>:
push   %rbp
mov    %rsp,%rbp
test   %edi,%edi
jns    17c6f <TIFFReadDirEntryCheckRangeLong8Slong+0xf>
mov    $0x4,%eax
leaveq 
retq   
xor    %eax,%eax
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

0000000000017c80 <TIFFReadDirEntryCheckRangeLong8Slong8>:
push   %rbp
mov    %rsp,%rbp
test   %rdi,%rdi
jns    17c90 <TIFFReadDirEntryCheckRangeLong8Slong8+0x10>
mov    $0x4,%eax
leaveq 
retq   
xor    %eax,%eax
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nop

0000000000017ca0 <TIFFReadDirEntryCheckRangeSlong8Long8>:
push   %rbp
mov    %rsp,%rbp
movabs $0x7fffffffffffffff,%rax
cmp    %rax,%rdi
jbe    17cba <TIFFReadDirEntryCheckRangeSlong8Long8+0x1a>
mov    $0x4,%eax
leaveq 
retq   
xor    %eax,%eax
leaveq 
retq   
xchg   %ax,%ax

0000000000017cc0 <TIFFReadDirEntryData>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
test   %rdx,%rdx
jg     17cec <TIFFReadDirEntryData+0x2c>
lea    0x3bdc3(%rip),%rdi        # 53a97 <module.43+0x87>
lea    0x3b88b(%rip),%rsi        # 53566 <module.10+0xba>
mov    $0xd48,%edx
lea    0x3bdb7(%rip),%rcx        # 53a9e <module.43+0x8e>
callq  8490 <__assert_fail@plt>
mov    $0x3,%eax
mov    0x10(%rdi),%r8d
and    $0x800,%r8d
test   %r8d,%r8d
jne    17d23 <TIFFReadDirEntryData+0x63>
mov    %rdi,%rax
mov    %rdi,-0x18(%rbp)
mov    %rdx,-0x10(%rbp)
mov    %rcx,-0x8(%rbp)
mov    %rax,%rdi
callq  82f0 <_TIFFSeekOK@plt>
test   %eax,%eax
jne    17d2e <TIFFReadDirEntryData+0x6e>
mov    $0x3,%eax
leaveq 
retq   
lea    (%rsi,%rdx,1),%r8
cmp    %r8,%rsi
jbe    17d64 <TIFFReadDirEntryData+0xa4>
leaveq 
retq   
mov    -0x18(%rbp),%rcx
mov    0x3c0(%rcx),%rax
mov    0x3b8(%rcx),%rdi
mov    -0x10(%rbp),%rcx
mov    %rcx,%rdx
mov    %r15,-0x18(%rbp)
mov    %rcx,%r15
mov    -0x8(%rbp),%rsi
callq  *%rax
cmp    %rax,%r15
je     17d6b <TIFFReadDirEntryData+0xab>
mov    -0x18(%rbp),%r15
mov    $0x3,%eax
leaveq 
retq   
cmp    %rdx,%r8
jae    17d73 <TIFFReadDirEntryData+0xb3>
leaveq 
retq   
mov    -0x18(%rbp),%r15
xor    %eax,%eax
leaveq 
retq   
cmp    0x3a0(%rdi),%r8
jbe    17d7e <TIFFReadDirEntryData+0xbe>
leaveq 
retq   
add    0x398(%rdi),%rsi
mov    %rcx,%rdi
callq  8790 <_TIFFmemcpy@plt>
xor    %eax,%eax
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   0x0(%rax)

0000000000017da0 <TIFFReadDirEntryOutputErr>:
push   %rbp
mov    %rsp,%rbp
lea    0x3bdf0(%rip),%r9        # 53b9b <module.43+0x18b>
lea    0x3b7b4(%rip),%r10        # 53566 <module.10+0xba>
lea    0x3bde4(%rip),%r11        # 53b9d <module.43+0x18d>
test   %r8d,%r8d
jne    17de9 <TIFFReadDirEntryOutputErr+0x49>
lea    -0x1(%rsi),%eax
cmp    $0x6,%eax
ja     17dd6 <TIFFReadDirEntryOutputErr+0x36>
lea    0x3b573(%rip),%rsi        # 53340 <reason.25+0x121a>
movslq (%rsi,%rax,4),%rax
add    %rsi,%rax
jmpq   *%rax
mov    %r11,%rcx
mov    %r10,%rsi
mov    %r9,%rdi
mov    $0xd86,%edx
callq  8490 <__assert_fail@plt>
lea    -0x1(%rsi),%eax
cmp    $0x6,%eax
ja     17e01 <TIFFReadDirEntryOutputErr+0x61>
lea    0x3b564(%rip),%rsi        # 5335c <reason.25+0x1236>
movslq (%rsi,%rax,4),%rax
add    %rsi,%rax
jmpq   *%rax
mov    %r11,%rcx
mov    %r10,%rsi
mov    %r9,%rdi
mov    $0xdaf,%edx
callq  8490 <__assert_fail@plt>
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
mov    %rdx,%rsi
lea    0x3bc8c(%rip),%rdx        # 53ab3 <module.43+0xa3>
callq  8a00 <TIFFErrorExt@plt>
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
mov    %rdx,%rsi
lea    0x3bc8b(%rip),%rdx        # 53acc <module.43+0xbc>
callq  8a00 <TIFFErrorExt@plt>
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
mov    %rdx,%rsi
lea    0x3bc8c(%rip),%rdx        # 53ae7 <module.43+0xd7>
callq  8a00 <TIFFErrorExt@plt>
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
mov    %rdx,%rsi
lea    0x3bc92(%rip),%rdx        # 53b07 <module.43+0xf7>
callq  8a00 <TIFFErrorExt@plt>
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
mov    %rdx,%rsi
lea    0x3bc91(%rip),%rdx        # 53b20 <module.43+0x110>
callq  8a00 <TIFFErrorExt@plt>
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
mov    %rdx,%rsi
lea    0x3bcaa(%rip),%rdx        # 53b53 <module.43+0x143>
callq  8a00 <TIFFErrorExt@plt>
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
mov    %rdx,%rsi
lea    0x3bcba(%rip),%rdx        # 53b7d <module.43+0x16d>
callq  8a00 <TIFFErrorExt@plt>
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
mov    %rdx,%rsi
lea    0x3bcda(%rip),%rdx        # 53bb7 <module.43+0x1a7>
callq  85a0 <TIFFWarningExt@plt>
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
mov    %rdx,%rsi
lea    0x3bce6(%rip),%rdx        # 53bdd <module.43+0x1cd>
callq  85a0 <TIFFWarningExt@plt>
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
mov    %rdx,%rsi
lea    0x3bcf4(%rip),%rdx        # 53c05 <module.43+0x1f5>
callq  85a0 <TIFFWarningExt@plt>
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
mov    %rdx,%rsi
lea    0x3bd07(%rip),%rdx        # 53c32 <module.43+0x222>
callq  85a0 <TIFFWarningExt@plt>
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
mov    %rdx,%rsi
lea    0x3bd13(%rip),%rdx        # 53c58 <module.43+0x248>
callq  85a0 <TIFFWarningExt@plt>
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
mov    %rdx,%rsi
lea    0x3bd39(%rip),%rdx        # 53c98 <module.43+0x288>
callq  85a0 <TIFFWarningExt@plt>
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
mov    %rdx,%rsi
lea    0x3bd56(%rip),%rdx        # 53ccf <module.43+0x2bf>
callq  85a0 <TIFFWarningExt@plt>
leaveq 
retq   

0000000000017f80 <TIFFReadDirectoryCheckOrder>:
push   %rbp
mov    %rsp,%rbp
xor    %eax,%eax
mov    %rax,%rcx
jmp    17fa0 <TIFFReadDirectoryCheckOrder+0x20>
movzwl (%rsi),%r8d
cmp    %ax,%r8w
jb     17fa7 <TIFFReadDirectoryCheckOrder+0x27>
add    $0x18,%rsi
add    $0x1,%ecx
lea    0x1(%r8),%eax
cmp    %dx,%cx
jb     17f8b <TIFFReadDirectoryCheckOrder+0xb>
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
lea    0x3bd43(%rip),%rsi        # 53cfa <module.66>
lea    0x3bd58(%rip),%rdx        # 53d16 <module.66+0x1c>
callq  85a0 <TIFFWarningExt@plt>
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)

0000000000017fd0 <TIFFReadDirectoryFindEntry>:
push   %rbp
mov    %rsp,%rbp
xor    %eax,%eax
mov    %rax,%rdi
jmp    17fec <TIFFReadDirectoryFindEntry+0x1c>
movzwl (%rsi),%r8d
cmp    %cx,%r8w
je     17ff3 <TIFFReadDirectoryFindEntry+0x23>
add    $0x18,%rsi
add    $0x1,%edi
cmp    %dx,%di
jb     17fdb <TIFFReadDirectoryFindEntry+0xb>
leaveq 
retq   
mov    %rsi,%rax
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

0000000000018000 <TIFFReadDirectoryFindFieldInfo>:
push   %rbp
mov    %rsp,%rbp
movslq 0x3f8(%rdi),%rcx
movzwl %si,%r10d
mov    $0xffffffffffffffff,%rsi
jmp    1801b <TIFFReadDirectoryFindFieldInfo+0x1b>
mov    %rax,%rsi
lea    0x1(%rsi),%eax
cmp    %eax,%ecx
jne    1802b <TIFFReadDirectoryFindFieldInfo+0x2b>
mov    $0xffffffff,%eax
mov    %eax,(%rdx)
leaveq 
retq   
lea    (%rcx,%rsi,1),%eax
mov    %rax,%r8
shr    $0x1f,%r8d
add    %r8d,%eax
sar    %eax
movslq %eax,%r9
mov    0x3f0(%rdi),%r8
mov    (%r8,%r9,8),%r8
mov    (%r8),%r8d
cmp    %r8d,%r10d
je     18073 <TIFFReadDirectoryFindFieldInfo+0x73>
cmp    %r8d,%r10d
ja     18018 <TIFFReadDirectoryFindFieldInfo+0x18>
mov    %rax,%rcx
jmp    1801b <TIFFReadDirectoryFindFieldInfo+0x1b>
mov    0x3f0(%rdi),%r8
lea    -0x1(%rax),%esi
movslq %esi,%rcx
mov    (%r8,%rcx,8),%rcx
cmp    (%rcx),%r10d
jne    18027 <TIFFReadDirectoryFindFieldInfo+0x27>
mov    %rsi,%rax
test   %eax,%eax
je     18027 <TIFFReadDirectoryFindFieldInfo+0x27>
jmp    1805a <TIFFReadDirectoryFindFieldInfo+0x5a>
nopl   0x0(%rax)

0000000000018080 <EstimateStripByteCounts>:
push   %rbp
mov    %rsp,%rbp
sub    $0x40,%rsp
mov    %rdi,-0x38(%rbp)
mov    %rdx,-0x30(%rbp)
mov    %rsi,-0x28(%rbp)
xor    %esi,%esi
callq  1b610 <_TIFFFillStrilesInternal>
test   %eax,%eax
jne    180a8 <EstimateStripByteCounts+0x28>
mov    $0xffffffffffffffff,%rax
leaveq 
retq   
mov    -0x38(%rbp),%rax
mov    0xf0(%rax),%rdi
test   %rdi,%rdi
jne    180c3 <EstimateStripByteCounts+0x43>
mov    %r15,%rcx
mov    %rax,%r15
mov    %rcx,%rax
jmp    180d3 <EstimateStripByteCounts+0x53>
mov    %r15,-0x38(%rbp)
mov    %rax,%r15
callq  8bb0 <_TIFFfree@plt>
mov    -0x38(%rbp),%rax
mov    0xe4(%r15),%esi
mov    $0x8,%edx
lea    0x3bc87(%rip),%rcx        # 53d6d <module.68+0x18>
mov    %r15,%rdi
mov    %rax,-0x20(%rbp)
callq  8750 <_TIFFCheckMalloc@plt>
mov    %rax,0xf0(%r15)
test   %rax,%rax
jne    1810b <EstimateStripByteCounts+0x8b>
mov    -0x20(%rbp),%r15
mov    $0xffffffffffffffff,%rax
leaveq 
retq   
movzwl 0x78(%r15),%eax
cmp    $0x1,%ax
jne    18155 <EstimateStripByteCounts+0xd5>
mov    0x10(%r15),%eax
and    $0x400,%eax
test   %eax,%eax
jne    181af <EstimateStripByteCounts+0x12f>
xor    %eax,%eax
mov    %r15,%rdi
mov    %r14,-0x38(%rbp)
mov    %rax,%r14
callq  8220 <TIFFScanlineSize64@plt>
mov    %r14,%rdx
mov    %rax,%rsi
mov    0x5c(%r15),%eax
mov    0xe0(%r15),%ecx
div    %ecx
mov    %eax,%ecx
imul   %rsi,%rcx
xor    %eax,%eax
jmp    181ce <EstimateStripByteCounts+0x14e>
mov    0x3e0(%r15),%rax
mov    0x3b8(%r15),%rdi
callq  *%rax
mov    %rax,-0x38(%rbp)
mov    0x10(%r15),%eax
and    $0x80000,%eax
test   %eax,%eax
jne    1820a <EstimateStripByteCounts+0x18a>
mov    -0x30(%rbp),%rcx
movzwl %cx,%eax
lea    (%rax,%rax,2),%eax
shl    $0x2,%eax
movslq %eax,%rax
add    $0xe,%rax
mov    %r14,-0x30(%rbp)
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %rcx,%r12
mov    %rax,%r14
xor    %ebx,%ebx
mov    -0x28(%rbp),%r13
jmpq   1827e <EstimateStripByteCounts+0x1fe>
mov    %r15,%rdi
callq  8c40 <TIFFTileSize64@plt>
xor    %ecx,%ecx
jmpq   182c8 <EstimateStripByteCounts+0x248>
mov    0xf0(%r15),%rsi
mov    %eax,%edx
mov    %rcx,(%rsi,%rdx,8)
add    $0x1,%eax
mov    0xe4(%r15),%edx
cmp    %eax,%edx
ja     181be <EstimateStripByteCounts+0x13e>
mov    -0x38(%rbp),%r14
mov    0x38(%r15),%rax
or     $0x1000000,%rax
mov    %rax,0x38(%r15)
mov    $0x1,%eax
mov    0x38(%r15),%rcx
and    $0x20000,%rcx
test   %rcx,%rcx
je     182d8 <EstimateStripByteCounts+0x258>
mov    -0x20(%rbp),%r15
leaveq 
retq   
mov    -0x30(%rbp),%rcx
movzwl %cx,%eax
lea    (%rax,%rax,4),%eax
shl    $0x2,%eax
movslq %eax,%rax
add    $0x20,%rax
mov    %r14,-0x30(%rbp)
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %rcx,%r12
mov    %rax,%r14
xor    %ebx,%ebx
mov    -0x28(%rbp),%r13
jmp    1827e <EstimateStripByteCounts+0x1fe>
movzwl 0x2(%r13),%edi
callq  8140 <TIFFDataWidth@plt>
test   %eax,%eax
je     182e9 <EstimateStripByteCounts+0x269>
mov    %eax,%eax
imul   0x8(%r13),%rax
mov    0x10(%r15),%ecx
and    $0x80000,%ecx
test   %ecx,%ecx
jne    18327 <EstimateStripByteCounts+0x2a7>
cmp    $0x4,%rax
ja     18270 <EstimateStripByteCounts+0x1f0>
mov    %rbx,%rax
add    $0x18,%r13
add    $0xffff,%r12d
add    %rax,%r14
test   %r12w,%r12w
jne    1823c <EstimateStripByteCounts+0x1bc>
mov    -0x38(%rbp),%rcx
cmp    %rcx,%r14
jbe    18339 <EstimateStripByteCounts+0x2b9>
mov    %rcx,%rax
movzwl 0xaa(%r15),%edx
cmp    $0x2,%dx
jne    18354 <EstimateStripByteCounts+0x2d4>
movzwl 0x82(%r15),%esi
xor    %edx,%edx
div    %rsi
jmpq   18354 <EstimateStripByteCounts+0x2d4>
mov    0xf0(%r15),%rsi
mov    %ecx,%edx
mov    %rax,(%rsi,%rdx,8)
add    $0x1,%ecx
mov    0xe4(%r15),%edx
cmp    %ecx,%edx
ja     182b8 <EstimateStripByteCounts+0x238>
jmpq   181dd <EstimateStripByteCounts+0x15d>
mov    0x5c(%r15),%ecx
mov    %ecx,0x84(%r15)
mov    -0x20(%rbp),%r15
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
lea    0x3ba5c(%rip),%rsi        # 53d55 <module.68>
lea    0x3ba89(%rip),%rdx        # 53d89 <module.68+0x34>
movzwl 0x2(%r13),%ecx
callq  8a00 <TIFFErrorExt@plt>
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x30(%rbp),%r14
mov    -0x20(%rbp),%r15
mov    $0xffffffffffffffff,%rax
leaveq 
retq   
cmp    $0x8,%rax
ja     18270 <EstimateStripByteCounts+0x1f0>
mov    %rbx,%rax
jmpq   18270 <EstimateStripByteCounts+0x1f0>
mov    %rcx,%rax
sub    %r14,%rax
jmpq   18294 <EstimateStripByteCounts+0x214>
mov    0xf0(%r15),%rsi
mov    %ebx,%edx
mov    %rax,(%rsi,%rdx,8)
add    $0x1,%ebx
mov    0xe4(%r15),%edx
cmp    %ebx,%edx
ja     18344 <EstimateStripByteCounts+0x2c4>
mov    0xe8(%r15),%rdx
lea    -0x1(%rbx),%eax
mov    %eax,%edi
mov    (%rdx,%rdi,8),%rsi
mov    0xf0(%r15),%rdx
mov    %rsi,%rax
add    (%rdx,%rdi,8),%rax
cmp    %rax,%rcx
jb     18397 <EstimateStripByteCounts+0x317>
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x30(%rbp),%r14
jmpq   181dd <EstimateStripByteCounts+0x15d>
sub    %rsi,%rcx
mov    %rcx,(%rdx,%rdi,8)
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x30(%rbp),%r14
jmpq   181dd <EstimateStripByteCounts+0x15d>
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

00000000000183c0 <MissingRequired>:
push   %rbp
mov    %rsp,%rbp
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
mov    %rsi,%rcx
lea    0x3b9df(%rip),%rsi        # 53db6 <module.71>
lea    0x3b9e8(%rip),%rdx        # 53dc6 <module.71+0x10>
callq  8a00 <TIFFErrorExt@plt>
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)

00000000000183f0 <TIFFCheckDirOffset>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
xor    %eax,%eax
test   %rsi,%rsi
jne    18401 <TIFFCheckDirOffset+0x11>
leaveq 
retq   
movzwl 0x32(%rdi),%ecx
cmp    $0xffff,%cx
je     18410 <TIFFCheckDirOffset+0x20>
mov    %rax,%rcx
jmp    18433 <TIFFCheckDirOffset+0x43>
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
lea    0x3b9d4(%rip),%rsi        # 53df4 <module.71+0x3e>
lea    0x3b9e0(%rip),%rdx        # 53e07 <module.71+0x51>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
add    $0x1,%ecx
movzwl 0x32(%rdi),%edx
cmp    %dx,%cx
jae    18450 <TIFFCheckDirOffset+0x60>
mov    0x28(%rdi),%r8
test   %r8,%r8
je     18450 <TIFFCheckDirOffset+0x60>
movzwl %cx,%edx
cmp    (%r8,%rdx,8),%rsi
jne    18430 <TIFFCheckDirOffset+0x40>
leaveq 
retq   
movzwl 0x32(%rdi),%eax
lea    0x1(%rax),%ecx
mov    %cx,0x32(%rdi)
mov    0x28(%rdi),%rax
test   %rax,%rax
je     1846d <TIFFCheckDirOffset+0x7d>
movzwl 0x30(%rdi),%eax
cmp    %ax,%cx
jbe    184ae <TIFFCheckDirOffset+0xbe>
mov    0x28(%rdi),%r9
movzwl 0x32(%rdi),%edx
mov    $0x10,%ecx
lea    0x3b9b5(%rip),%r8        # 53e36 <module.71+0x80>
mov    %rdi,%rax
mov    %rdi,-0x10(%rbp)
mov    %rsi,-0x8(%rbp)
mov    %r9,%rsi
mov    %rax,%rdi
callq  8d00 <_TIFFCheckRealloc@plt>
test   %rax,%rax
jne    184c7 <TIFFCheckDirOffset+0xd7>
xor    %eax,%eax
leaveq 
retq   
movw   $0xffff,0x30(%rdi)
mov    %rax,0x28(%rdi)
mov    -0x8(%rbp),%rsi
mov    0x28(%rdi),%rcx
movzwl 0x32(%rdi),%eax
add    $0xffffffff,%eax
movslq %eax,%rax
mov    %rsi,(%rcx,%rax,8)
mov    $0x1,%eax
leaveq 
retq   
mov    -0x10(%rbp),%rdi
movzwl 0x32(%rdi),%ecx
cmp    $0x7fff,%cx
ja     184a0 <TIFFCheckDirOffset+0xb0>
add    %ecx,%ecx
mov    %cx,0x30(%rdi)
jmp    184a6 <TIFFCheckDirOffset+0xb6>
xchg   %ax,%ax

00000000000184e0 <CheckDirCount>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %edx,%r8d
mov    0x8(%rsi),%rcx
cmp    %r8,%rcx
jb     18500 <CheckDirCount+0x20>
mov    $0x1,%eax
cmp    %r8,%rcx
ja     1853e <CheckDirCount+0x5e>
leaveq 
retq   
movzwl (%rsi),%ecx
mov    %rdi,%rax
mov    %r13,-0x10(%rbp)
mov    %r14,-0x18(%rbp)
mov    %r15,-0x20(%rbp)
mov    %rsi,%r13
mov    %rcx,%rsi
mov    %rdx,%r14
mov    %rdi,%r15
mov    %rax,%rdi
callq  8ae0 <TIFFFieldWithTag@plt>
mov    0x3b8(%r15),%rdi
mov    (%r15),%rsi
test   %rax,%rax
jne    18583 <CheckDirCount+0xa3>
lea    0x3b0f0(%rip),%rcx        # 5362c <module.10+0x180>
jmp    18587 <CheckDirCount+0xa7>
movzwl (%rsi),%ecx
mov    %rdi,%rax
mov    %r12,-0x8(%rbp)
mov    %r13,-0x10(%rbp)
mov    %r14,-0x18(%rbp)
mov    %r15,-0x20(%rbp)
mov    %rsi,%r12
mov    %rcx,%rsi
mov    %r8,%r13
mov    %rdi,%r14
mov    %rax,%rdi
mov    %rdx,%r15
callq  8ae0 <TIFFFieldWithTag@plt>
mov    0x3b8(%r14),%rdi
mov    (%r14),%rsi
test   %rax,%rax
jne    185b1 <CheckDirCount+0xd1>
lea    0x3b0ab(%rip),%rcx        # 5362c <module.10+0x180>
jmp    185b5 <CheckDirCount+0xd5>
mov    0x20(%rax),%rcx
lea    0x3b8b5(%rip),%rdx        # 53e43 <module.71+0x8d>
mov    0x8(%r13),%r8
mov    %r14,%r9
xor    %r13d,%r13d
mov    %r13,%rax
callq  85a0 <TIFFWarningExt@plt>
mov    %r13,%rax
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
leaveq 
retq   
mov    0x20(%rax),%rcx
mov    %r15,%r9
xor    %eax,%eax
lea    0x3b8c2(%rip),%rdx        # 53e83 <module.71+0xcd>
mov    0x8(%r12),%r8
callq  85a0 <TIFFWarningExt@plt>
mov    %r13,0x8(%r12)
mov    $0x1,%eax
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

00000000000185f0 <TIFFFetchDirectory>:
push   %rbp
mov    %rsp,%rbp
sub    $0x80,%rsp
test   %rdx,%rdx
jne    1861f <TIFFFetchDirectory+0x2f>
lea    0x3b8cf(%rip),%rdi        # 53ed6 <module.78+0x13>
lea    0x3af58(%rip),%rsi        # 53566 <module.10+0xba>
mov    $0x1204,%edx
lea    0x3b8c1(%rip),%rcx        # 53edb <module.78+0x18>
callq  8490 <__assert_fail@plt>
mov    %rsi,0x18(%rdi)
test   %rcx,%rcx
je     1862f <TIFFFetchDirectory+0x3f>
movq   $0x0,(%rcx)
lea    0x3b88d(%rip),%rsi        # 53ec3 <module.78>
mov    $0x2,%r11d
mov    $0x8,%r10d
mov    %rdx,-0x10(%rbp)
mov    $0xc,%eax
mov    %rax,-0x50(%rbp)
mov    $0x14,%eax
mov    %rax,-0x58(%rbp)
mov    0x10(%rdi),%eax
mov    %rax,%rdx
and    $0x800,%edx
test   %edx,%edx
jne    186b1 <TIFFFetchDirectory+0xc1>
mov    0x18(%rdi),%rsi
mov    %rdi,%rax
mov    %r15,-0x38(%rbp)
mov    %rcx,-0x40(%rbp)
mov    %rdi,%r15
mov    %rax,%rdi
callq  82f0 <_TIFFSeekOK@plt>
test   %eax,%eax
jne    18781 <TIFFFetchDirectory+0x191>
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
lea    0x3b854(%rip),%rdx        # 53eee <module.78+0x2b>
mov    (%r15),%rcx
lea    0x3b81f(%rip),%rsi        # 53ec3 <module.78>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x38(%rbp),%r15
leaveq 
retq   
mov    0x18(%rdi),%r8
lea    0x3b90b(%rip),%rdx        # 53fc7 <module.78+0x104>
and    $0x80000,%eax
test   %eax,%eax
jne    187dc <TIFFFetchDirectory+0x1ec>
lea    0x2(%r8),%r9
cmp    %r8,%r9
jl     1885a <TIFFFetchDirectory+0x26a>
cmp    $0x1,%r9
jle    1885a <TIFFFetchDirectory+0x26a>
cmp    0x3a0(%rdi),%r9
jg     1885a <TIFFFetchDirectory+0x26a>
add    0x398(%rdi),%r8
lea    -0x7a(%rbp),%rax
mov    %r14,-0x30(%rbp)
mov    %r15,-0x38(%rbp)
mov    %rcx,-0x48(%rbp)
mov    %r11,%rdx
mov    %r8,%rsi
mov    %rdi,%r14
mov    %rax,%rdi
mov    %r9,%r15
callq  8790 <_TIFFmemcpy@plt>
mov    0x10(%r14),%eax
and    $0x80,%eax
test   %eax,%eax
je     1872e <TIFFFetchDirectory+0x13e>
lea    -0x7a(%rbp),%rdi
callq  87c0 <TIFFSwabShort@plt>
movzwl -0x7a(%rbp),%eax
cmp    $0x1000,%ax
ja     1886c <TIFFFetchDirectory+0x27c>
pushq  -0x50(%rbp)
popq   -0x58(%rbp)
movzwl -0x7a(%rbp),%esi
test   %si,%si
je     18894 <TIFFFetchDirectory+0x2a4>
mov    %r14,%rdi
mov    -0x58(%rbp),%rax
mov    %rax,%rdx
lea    0x3b82c(%rip),%rcx        # 53f8c <module.78+0xc9>
mov    %r14,-0x50(%rbp)
mov    %rax,%r14
callq  8750 <_TIFFCheckMalloc@plt>
test   %rax,%rax
jne    188bc <TIFFFetchDirectory+0x2cc>
xor    %eax,%eax
mov    -0x38(%rbp),%r15
mov    -0x30(%rbp),%r14
leaveq 
retq   
mov    0x10(%r15),%eax
and    $0x80000,%eax
test   %eax,%eax
jne    1890e <TIFFFetchDirectory+0x31e>
mov    0x3c0(%r15),%rax
mov    0x3b8(%r15),%rdi
lea    -0x7a(%rbp),%rsi
mov    $0x2,%edx
callq  *%rax
cmp    $0x2,%rax
je     18958 <TIFFFetchDirectory+0x368>
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
mov    (%r15),%rcx
lea    0x3b74e(%rip),%rdx        # 53f16 <module.78+0x53>
lea    0x3b6f4(%rip),%rsi        # 53ec3 <module.78>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x38(%rbp),%r15
leaveq 
retq   
lea    0x8(%r8),%r9
cmp    %r9,%r8
jg     189b4 <TIFFFetchDirectory+0x3c4>
cmp    $0x7,%r9
jle    189b4 <TIFFFetchDirectory+0x3c4>
cmp    0x3a0(%rdi),%r9
jg     189b4 <TIFFFetchDirectory+0x3c4>
add    0x398(%rdi),%r8
lea    -0x68(%rbp),%rax
mov    %r10,%rdx
mov    %r14,-0x30(%rbp)
mov    %r15,-0x38(%rbp)
mov    %rcx,-0x48(%rbp)
mov    %r8,%rsi
mov    %rdi,%r14
mov    %rax,%rdi
mov    %r9,%r15
callq  8790 <_TIFFmemcpy@plt>
mov    0x10(%r14),%eax
and    $0x80,%eax
test   %eax,%eax
je     18841 <TIFFFetchDirectory+0x251>
lea    -0x68(%rbp),%rdi
callq  8730 <TIFFSwabLong8@plt>
mov    -0x68(%rbp),%rax
cmp    $0x1000,%rax
ja     189c6 <TIFFFetchDirectory+0x3d6>
mov    %ax,-0x7a(%rbp)
jmpq   18742 <TIFFFetchDirectory+0x152>
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%r14),%rdi
lea    0x3b647(%rip),%rsi        # 53ec3 <module.78>
lea    0x3b6b9(%rip),%rdx        # 53f3c <module.78+0x79>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x38(%rbp),%r15
mov    -0x30(%rbp),%r14
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%r14),%rdi
lea    0x3b745(%rip),%rdx        # 53fe9 <module.78+0x126>
lea    0x3b618(%rip),%rsi        # 53ec3 <module.78>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x38(%rbp),%r15
mov    -0x30(%rbp),%r14
leaveq 
retq   
movzwl -0x7a(%rbp),%ecx
imul   %r14d,%ecx
mov    %ecx,%edx
lea    (%rdx,%r15,1),%rsi
cmp    %r15,%rsi
jge    189ee <TIFFFetchDirectory+0x3fe>
mov    -0x50(%rbp),%rcx
xor    %r8d,%r8d
mov    0x3b8(%rcx),%rdi
mov    %rax,%r14
mov    %r8,%rax
lea    0x3b746(%rip),%rdx        # 54034 <module.78+0x171>
lea    0x3b5ce(%rip),%rsi        # 53ec3 <module.78>
callq  8a00 <TIFFErrorExt@plt>
mov    %r14,%rdi
callq  8bb0 <_TIFFfree@plt>
xor    %eax,%eax
mov    -0x38(%rbp),%r15
mov    -0x30(%rbp),%r14
leaveq 
retq   
mov    0x3c0(%r15),%rax
mov    0x3b8(%r15),%rdi
lea    -0x78(%rbp),%rsi
mov    $0x8,%edx
callq  *%rax
cmp    $0x8,%rax
je     18a00 <TIFFFetchDirectory+0x410>
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
mov    (%r15),%rcx
lea    0x3b5d2(%rip),%rdx        # 53f16 <module.78+0x53>
lea    0x3b578(%rip),%rsi        # 53ec3 <module.78>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x38(%rbp),%r15
leaveq 
retq   
mov    0x10(%r15),%eax
and    $0x80,%eax
test   %eax,%eax
je     1896e <TIFFFetchDirectory+0x37e>
lea    -0x7a(%rbp),%rdi
callq  87c0 <TIFFSwabShort@plt>
movzwl -0x7a(%rbp),%eax
cmp    $0x1000,%ax
ja     18a2f <TIFFFetchDirectory+0x43f>
pushq  -0x50(%rbp)
popq   -0x58(%rbp)
movzwl -0x7a(%rbp),%esi
mov    %r15,%rdi
mov    -0x58(%rbp),%rax
mov    %rax,%rdx
lea    0x3b5f5(%rip),%rcx        # 53f8c <module.78+0xc9>
mov    %r15,-0x48(%rbp)
mov    %rax,%r15
callq  8750 <_TIFFCheckMalloc@plt>
test   %rax,%rax
jne    18a53 <TIFFFetchDirectory+0x463>
xor    %eax,%eax
mov    -0x38(%rbp),%r15
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%r14),%rdi
lea    0x3b4ed(%rip),%rsi        # 53ec3 <module.78>
lea    0x3b55f(%rip),%rdx        # 53f3c <module.78+0x79>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x38(%rbp),%r15
mov    -0x30(%rbp),%r14
leaveq 
retq   
cmp    %rdx,%rsi
jge    18acc <TIFFFetchDirectory+0x4dc>
mov    -0x50(%rbp),%rcx
jmpq   188d7 <TIFFFetchDirectory+0x2e7>
mov    0x10(%r15),%eax
and    $0x80,%eax
test   %eax,%eax
je     18a16 <TIFFFetchDirectory+0x426>
lea    -0x78(%rbp),%rdi
callq  8730 <TIFFSwabLong8@plt>
mov    -0x78(%rbp),%rax
cmp    $0x1000,%rax
ja     18b16 <TIFFFetchDirectory+0x526>
mov    %ax,-0x7a(%rbp)
jmpq   18982 <TIFFFetchDirectory+0x392>
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
lea    0x3b484(%rip),%rsi        # 53ec3 <module.78>
lea    0x3b4f6(%rip),%rdx        # 53f3c <module.78+0x79>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x38(%rbp),%r15
leaveq 
retq   
movzwl -0x7a(%rbp),%ecx
imul   %r15d,%ecx
mov    %ecx,%edx
mov    -0x48(%rbp),%r8
mov    0x3c0(%r8),%rcx
mov    0x3b8(%r8),%rdi
mov    %rax,%rsi
mov    %r14,-0x30(%rbp)
mov    %r13,-0x58(%rbp)
mov    %rax,%r13
mov    %r8,%r14
callq  *%rcx
movzwl -0x7a(%rbp),%ecx
imul   %r15d,%ecx
mov    %ecx,%ecx
cmp    %rax,%rcx
je     18b3a <TIFFFetchDirectory+0x54a>
xor    %eax,%eax
mov    0x3b8(%r14),%rdi
lea    0x3b4fe(%rip),%rdx        # 53fa3 <module.78+0xe0>
mov    (%r14),%rcx
lea    0x3b414(%rip),%rsi        # 53ec3 <module.78>
callq  8a00 <TIFFErrorExt@plt>
mov    %r13,%rdi
callq  8bb0 <_TIFFfree@plt>
mov    -0x58(%rbp),%r13
xor    %eax,%eax
mov    -0x38(%rbp),%r15
mov    -0x30(%rbp),%r14
leaveq 
retq   
mov    -0x50(%rbp),%rcx
cmp    0x3a0(%rcx),%rsi
jg     188d7 <TIFFFetchDirectory+0x2e7>
mov    %r15,%rsi
add    0x398(%rcx),%rsi
mov    %rax,%rdi
mov    %r12,-0x40(%rbp)
mov    %r13,-0x58(%rbp)
mov    %r14,%r12
mov    %rcx,%r14
mov    %rax,%r13
callq  8790 <_TIFFmemcpy@plt>
mov    -0x48(%rbp),%rdi
test   %rdi,%rdi
jne    18bd1 <TIFFFetchDirectory+0x5e1>
mov    -0x40(%rbp),%r12
jmpq   18b96 <TIFFFetchDirectory+0x5a6>
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
lea    0x3b39d(%rip),%rsi        # 53ec3 <module.78>
lea    0x3b40f(%rip),%rdx        # 53f3c <module.78+0x79>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x38(%rbp),%r15
leaveq 
retq   
mov    -0x40(%rbp),%r15
test   %r15,%r15
je     18b96 <TIFFFetchDirectory+0x5a6>
mov    0x10(%r14),%eax
and    $0x80000,%eax
test   %eax,%eax
jne    18c38 <TIFFFetchDirectory+0x648>
mov    0x3c0(%r14),%rax
mov    0x3b8(%r14),%rdi
lea    -0x6c(%rbp),%rsi
mov    $0x4,%edx
callq  *%rax
cmp    $0x4,%rax
je     18b7a <TIFFFetchDirectory+0x58a>
movl   $0x0,-0x6c(%rbp)
mov    0x10(%r14),%eax
and    $0x80,%eax
test   %eax,%eax
je     18b90 <TIFFFetchDirectory+0x5a0>
lea    -0x6c(%rbp),%rdi
callq  8480 <TIFFSwabLong@plt>
mov    -0x6c(%rbp),%eax
mov    %rax,(%r15)
movzwl -0x7a(%rbp),%esi
mov    $0x18,%edx
mov    %r14,%rdi
lea    0x3b3e3(%rip),%rcx        # 53f8c <module.78+0xc9>
callq  8750 <_TIFFCheckMalloc@plt>
test   %rax,%rax
je     18c7b <TIFFFetchDirectory+0x68b>
mov    %r12,-0x28(%rbp)
mov    %r13,-0x18(%rbp)
mov    %rax,-0x8(%rbp)
mov    %rbx,-0x20(%rbp)
mov    %rax,%r12
xor    %ebx,%ebx
jmpq   18d1b <TIFFFetchDirectory+0x72b>
movzwl -0x7a(%rbp),%eax
imul   %eax,%r12d
mov    %r12d,%eax
lea    (%r15,%rax,1),%rsi
mov    0x10(%r14),%eax
and    $0x80000,%eax
test   %eax,%eax
jne    18d56 <TIFFFetchDirectory+0x766>
lea    -0x5c(%rbp),%r12
lea    0x4(%rsi),%rax
cmp    %rax,%rsi
jg     18d93 <TIFFFetchDirectory+0x7a3>
cmp    $0x3,%rax
jle    18d93 <TIFFFetchDirectory+0x7a3>
cmp    0x3a0(%r14),%rax
jg     18d93 <TIFFFetchDirectory+0x7a3>
add    0x398(%r14),%rsi
mov    %rdi,%r15
mov    %r12,%rdi
mov    $0x4,%edx
callq  8790 <_TIFFmemcpy@plt>
mov    %r15,%rdi
jmpq   18d9a <TIFFFetchDirectory+0x7aa>
mov    0x3c0(%r14),%rax
mov    0x3b8(%r14),%rdi
mov    %r15,%rsi
mov    $0x8,%edx
callq  *%rax
cmp    $0x8,%rax
je     18c5d <TIFFFetchDirectory+0x66d>
movq   $0x0,(%r15)
mov    0x10(%r14),%eax
and    $0x80,%eax
test   %eax,%eax
je     18b96 <TIFFFetchDirectory+0x5a6>
mov    %r15,%rdi
callq  8730 <TIFFSwabLong8@plt>
jmpq   18b96 <TIFFFetchDirectory+0x5a6>
mov    %r13,%rdi
callq  8bb0 <_TIFFfree@plt>
mov    -0x58(%rbp),%r13
xor    %eax,%eax
mov    -0x38(%rbp),%r15
mov    -0x30(%rbp),%r14
leaveq 
retq   
mov    0x10(%r14),%eax
and    $0x80,%eax
test   %eax,%eax
je     18ca8 <TIFFFetchDirectory+0x6b8>
mov    %r13,%rdi
callq  87c0 <TIFFSwabShort@plt>
movzwl 0x0(%r13),%eax
mov    %ax,(%r12)
lea    0x2(%r13),%r15
mov    0x10(%r14),%eax
and    $0x80,%eax
test   %eax,%eax
je     18ccb <TIFFFetchDirectory+0x6db>
mov    %r15,%rdi
callq  87c0 <TIFFSwabShort@plt>
movzwl (%r15),%eax
mov    %ax,0x2(%r12)
lea    0x4(%r13),%r15
mov    0x10(%r14),%eax
mov    %rax,%rcx
and    $0x80000,%ecx
test   %ecx,%ecx
jne    18dc7 <TIFFFetchDirectory+0x7d7>
and    $0x80,%eax
test   %eax,%eax
je     18cff <TIFFFetchDirectory+0x70f>
mov    %r15,%rdi
callq  8480 <TIFFSwabLong@plt>
mov    (%r15),%eax
mov    %rax,0x8(%r12)
mov    0x8(%r13),%eax
mov    %eax,0x10(%r12)
add    $0xc,%r13
add    $0x1,%ebx
add    $0x18,%r12
movzwl -0x7a(%rbp),%eax
cmp    %bx,%ax
ja     18c93 <TIFFFetchDirectory+0x6a3>
mov    -0x18(%rbp),%rdi
callq  8bb0 <_TIFFfree@plt>
mov    -0x8(%rbp),%rax
mov    -0x10(%rbp),%rcx
mov    %rax,(%rcx)
movzwl -0x7a(%rbp),%eax
mov    -0x20(%rbp),%rbx
mov    -0x58(%rbp),%r13
mov    -0x28(%rbp),%r12
mov    -0x38(%rbp),%r15
mov    -0x30(%rbp),%r14
leaveq 
retq   
lea    0x8(%rsi),%rax
cmp    %rsi,%rax
jl     18dfc <TIFFFetchDirectory+0x80c>
cmp    $0x7,%rax
jle    18dfc <TIFFFetchDirectory+0x80c>
cmp    0x3a0(%r14),%rax
jg     18dfc <TIFFFetchDirectory+0x80c>
add    0x398(%r14),%rsi
mov    %rdi,%r12
mov    $0x8,%edx
callq  8790 <_TIFFmemcpy@plt>
mov    %r12,%rdi
jmp    18e03 <TIFFFetchDirectory+0x813>
movl   $0x0,-0x5c(%rbp)
mov    0x10(%r14),%eax
and    $0x80,%eax
test   %eax,%eax
je     18db8 <TIFFFetchDirectory+0x7c8>
mov    %r12,%rax
mov    %rdi,%r12
mov    %rax,%rdi
callq  8480 <TIFFSwabLong@plt>
mov    %r12,%rdi
mov    -0x5c(%rbp),%eax
mov    %rax,(%rdi)
mov    -0x40(%rbp),%r12
jmpq   18b96 <TIFFFetchDirectory+0x5a6>
and    $0x80,%eax
test   %eax,%eax
je     18dd8 <TIFFFetchDirectory+0x7e8>
mov    %r15,%rdi
callq  8730 <TIFFSwabLong8@plt>
mov    %r15,%rdi
callq  1b5c0 <TIFFReadUInt64>
mov    %rax,0x8(%r12)
lea    0xc(%r13),%rdi
callq  1b5c0 <TIFFReadUInt64>
mov    %rax,0x10(%r12)
add    $0x14,%r13
jmpq   18d14 <TIFFFetchDirectory+0x724>
movq   $0x0,(%rdi)
mov    0x10(%r14),%eax
and    $0x80,%eax
test   %eax,%eax
jne    18e19 <TIFFFetchDirectory+0x829>
mov    -0x40(%rbp),%r12
jmpq   18b96 <TIFFFetchDirectory+0x5a6>
callq  8730 <TIFFSwabLong8@plt>
mov    -0x40(%rbp),%r12
jmpq   18b96 <TIFFFetchDirectory+0x5a6>
nopw   0x0(%rax,%rax,1)

0000000000018e30 <TIFFFetchNormalTag>:
push   %rbp
mov    %rsp,%rbp
sub    $0x140,%rsp
mov    %r14,-0x28(%rbp)
mov    %r15,-0x30(%rbp)
mov    %rdx,-0x8(%rbp)
mov    %rsi,%r15
movzwl (%r15),%esi
lea    -0x134(%rbp),%rdx
mov    %rdi,%r14
callq  18000 <TIFFReadDirectoryFindFieldInfo>
lea    0x3b1ff(%rip),%rsi        # 54063 <module.89+0x13>
xor    %r10d,%r10d
mov    -0x134(%rbp),%eax
cmp    $0xffffffff,%eax
je     18ea0 <TIFFFetchNormalTag+0x70>
lea    0x3a6ed(%rip),%r9        # 53566 <module.10+0xba>
mov    0x3f0(%r14),%rcx
mov    (%rcx,%rax,8),%r11
test   %r11,%r11
jne    18ec9 <TIFFFetchNormalTag+0x99>
mov    %rsi,%rcx
mov    %r9,%rsi
lea    0x3b1ff(%rip),%rdi        # 54095 <module.89+0x45>
mov    $0x1305,%edx
callq  8490 <__assert_fail@plt>
xor    %eax,%eax
mov    0x3b8(%r14),%rdi
lea    0x3b1c6(%rip),%rdx        # 54076 <module.89+0x26>
movzwl (%r15),%ecx
mov    %r10,%r14
callq  8a00 <TIFFErrorExt@plt>
mov    %r14,%rax
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
leaveq 
retq   
mov    0x10(%r11),%ecx
cmp    $0x33,%ecx
jne    18ee9 <TIFFFetchNormalTag+0xb9>
mov    %rsi,%rcx
mov    %r9,%rsi
lea    0x3b1c2(%rip),%rdi        # 540a1 <module.89+0x51>
mov    $0x1306,%edx
callq  8490 <__assert_fail@plt>
cmp    $0xd,%ecx
jne    18f05 <TIFFFetchNormalTag+0xd5>
mov    %rsi,%rcx
mov    %r9,%rsi
lea    0x3b1cd(%rip),%rdi        # 540c8 <module.89+0x78>
mov    $0x1307,%edx
callq  8490 <__assert_fail@plt>
cmp    $0x32,%ecx
ja     18f45 <TIFFFetchNormalTag+0x115>
lea    0x3b13f(%rip),%rdx        # 54050 <module.89>
mov    $0x1,%eax
lea    0x3b3d3(%rip),%rdi        # 542f0 <module.89+0x2a0>
lea    0x3a454(%rip),%r8        # 53378 <reason.25+0x1252>
movslq (%r8,%rcx,4),%rcx
add    %r8,%rcx
jmpq   *%rcx
mov    %r11,%r15
mov    %r10,%rsi
test   %esi,%esi
jne    19413 <TIFFFetchNormalTag+0x5e3>
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
leaveq 
retq   
mov    %rsi,%rcx
mov    %r9,%rsi
lea    0x3ac49(%rip),%rdi        # 53b9b <module.43+0x18b>
mov    $0x1592,%edx
callq  8490 <__assert_fail@plt>
movzbl 0x1b(%r11),%eax
test   %al,%al
je     19433 <TIFFFetchNormalTag+0x603>
mov    %rsi,%rcx
mov    %r9,%rsi
mov    $0x1310,%edx
lea    0x3b172(%rip),%rdi        # 540ed <module.89+0x9d>
callq  8490 <__assert_fail@plt>
movb   $0x0,-0x127(%rbp)
movswq 0x4(%r11),%rax
cmp    $0x1,%ax
je     19472 <TIFFFetchNormalTag+0x642>
mov    %rsi,%rcx
mov    %r9,%rsi
mov    $0x1341,%edx
lea    0x3b213(%rip),%rdi        # 541bb <module.89+0x16b>
callq  8490 <__assert_fail@plt>
movswq 0x4(%r11),%rax
cmp    $0x1,%ax
je     19496 <TIFFFetchNormalTag+0x666>
mov    %rsi,%rcx
mov    %r9,%rsi
mov    $0x134e,%edx
lea    0x3b1ed(%rip),%rdi        # 541bb <module.89+0x16b>
callq  8490 <__assert_fail@plt>
movswq 0x4(%r11),%rax
cmp    $0x1,%ax
je     194ba <TIFFFetchNormalTag+0x68a>
mov    %rsi,%rcx
mov    %r9,%rsi
mov    $0x135b,%edx
lea    0x3b1c7(%rip),%rdi        # 541bb <module.89+0x16b>
callq  8490 <__assert_fail@plt>
movswq 0x4(%r11),%rax
cmp    $0x1,%ax
je     194de <TIFFFetchNormalTag+0x6ae>
mov    %rsi,%rcx
mov    %r9,%rsi
mov    $0x1368,%edx
lea    0x3b1a1(%rip),%rdi        # 541bb <module.89+0x16b>
callq  8490 <__assert_fail@plt>
movswq 0x4(%r11),%rax
cmp    $0x1,%ax
je     19502 <TIFFFetchNormalTag+0x6d2>
mov    %rsi,%rcx
mov    %r9,%rsi
mov    $0x1375,%edx
lea    0x3b17b(%rip),%rdi        # 541bb <module.89+0x16b>
callq  8490 <__assert_fail@plt>
movswq 0x4(%r11),%rax
cmp    $0x1,%ax
je     19526 <TIFFFetchNormalTag+0x6f6>
mov    %rsi,%rcx
mov    %r9,%rsi
mov    $0x1382,%edx
lea    0x3b155(%rip),%rdi        # 541bb <module.89+0x16b>
callq  8490 <__assert_fail@plt>
movswq 0x4(%r11),%rax
cmp    $0x1,%ax
je     1954a <TIFFFetchNormalTag+0x71a>
mov    %rsi,%rcx
mov    %r9,%rsi
mov    $0x138f,%edx
lea    0x3b12f(%rip),%rdi        # 541bb <module.89+0x16b>
callq  8490 <__assert_fail@plt>
movswq 0x4(%r11),%rax
cmp    $0x2,%ax
je     1956e <TIFFFetchNormalTag+0x73e>
mov    %rsi,%rcx
mov    %r9,%rsi
lea    0x3b126(%rip),%rdi        # 541d3 <module.89+0x183>
mov    $0x139c,%edx
callq  8490 <__assert_fail@plt>
movswq 0x4(%r11),%r8
test   %r8w,%r8w
jg     19592 <TIFFFetchNormalTag+0x762>
mov    %rsi,%rcx
mov    %r9,%rsi
mov    $0x13b2,%edx
lea    0x3b146(%rip),%rdi        # 5421e <module.89+0x1ce>
callq  8490 <__assert_fail@plt>
movswq 0x4(%r11),%rdi
test   %di,%di
jg     195b6 <TIFFFetchNormalTag+0x786>
mov    %rsi,%rcx
mov    %r9,%rsi
mov    $0x13cc,%edx
lea    0x3b121(%rip),%rdi        # 5421e <module.89+0x1ce>
callq  8490 <__assert_fail@plt>
movswq 0x4(%r11),%rdi
test   %di,%di
jg     195da <TIFFFetchNormalTag+0x7aa>
mov    %rsi,%rcx
mov    %r9,%rsi
mov    $0x13e2,%edx
lea    0x3b0fc(%rip),%rdi        # 5421e <module.89+0x1ce>
callq  8490 <__assert_fail@plt>
movswq 0x4(%r11),%rdi
test   %di,%di
jg     195fe <TIFFFetchNormalTag+0x7ce>
mov    %rsi,%rcx
mov    %r9,%rsi
mov    $0x13f8,%edx
lea    0x3b0d7(%rip),%rdi        # 5421e <module.89+0x1ce>
callq  8490 <__assert_fail@plt>
movswq 0x4(%r11),%rcx
cmp    $0xffff,%cx
je     19622 <TIFFFetchNormalTag+0x7f2>
mov    %rsi,%rcx
mov    %r9,%rsi
mov    $0x140e,%edx
lea    0x3b0fd(%rip),%rdi        # 5426a <module.89+0x21a>
callq  8490 <__assert_fail@plt>
movswq 0x4(%r11),%rcx
cmp    $0xffff,%cx
je     19647 <TIFFFetchNormalTag+0x817>
mov    %rsi,%rcx
mov    %r9,%rsi
mov    $0x1429,%edx
lea    0x3b0d7(%rip),%rdi        # 5426a <module.89+0x21a>
callq  8490 <__assert_fail@plt>
movswq 0x4(%r11),%rcx
cmp    $0xffff,%cx
je     1966c <TIFFFetchNormalTag+0x83c>
mov    %rsi,%rcx
mov    %r9,%rsi
mov    $0x143f,%edx
lea    0x3b0b1(%rip),%rdi        # 5426a <module.89+0x21a>
callq  8490 <__assert_fail@plt>
movswq 0x4(%r11),%rcx
cmp    $0xffff,%cx
je     19691 <TIFFFetchNormalTag+0x861>
mov    %rsi,%rcx
mov    %r9,%rsi
mov    $0x1455,%edx
lea    0x3b08b(%rip),%rdi        # 5426a <module.89+0x21a>
callq  8490 <__assert_fail@plt>
movswq 0x4(%r11),%rcx
cmp    $0xffff,%cx
je     196b6 <TIFFFetchNormalTag+0x886>
mov    %rsi,%rcx
mov    %r9,%rsi
mov    $0x146b,%edx
lea    0x3b065(%rip),%rdi        # 5426a <module.89+0x21a>
callq  8490 <__assert_fail@plt>
movswq 0x4(%r11),%rcx
cmp    $0xffff,%cx
je     196db <TIFFFetchNormalTag+0x8ab>
mov    %rsi,%rcx
mov    %r9,%rsi
mov    $0x1481,%edx
lea    0x3b03f(%rip),%rdi        # 5426a <module.89+0x21a>
callq  8490 <__assert_fail@plt>
movswq 0x4(%r11),%rcx
cmp    $0xffff,%cx
je     19700 <TIFFFetchNormalTag+0x8d0>
mov    %rsi,%rcx
mov    %r9,%rsi
mov    $0x1497,%edx
lea    0x3b019(%rip),%rdi        # 5426a <module.89+0x21a>
callq  8490 <__assert_fail@plt>
movswq 0x4(%r11),%rcx
cmp    $0xffff,%cx
je     19725 <TIFFFetchNormalTag+0x8f5>
mov    %rsi,%rcx
mov    %r9,%rsi
mov    $0x14ad,%edx
lea    0x3aff3(%rip),%rdi        # 5426a <module.89+0x21a>
callq  8490 <__assert_fail@plt>
movswq 0x4(%r11),%rax
cmp    $0xfffd,%ax
je     1974a <TIFFFetchNormalTag+0x91a>
mov    %rsi,%rcx
mov    %r9,%rsi
mov    $0x14c3,%edx
callq  8490 <__assert_fail@plt>
movswq 0x4(%r11),%rax
cmp    $0xfffd,%ax
je     1976e <TIFFFetchNormalTag+0x93e>
mov    %rsi,%rcx
mov    %r9,%rsi
mov    $0x14d9,%edx
callq  8490 <__assert_fail@plt>
movq   $0x0,-0x88(%rbp)
movswq 0x4(%r11),%rax
cmp    $0xfffd,%ax
je     19792 <TIFFFetchNormalTag+0x962>
mov    %rsi,%rcx
mov    %r9,%rsi
mov    $0x14ea,%edx
callq  8490 <__assert_fail@plt>
movswq 0x4(%r11),%rax
cmp    $0xfffd,%ax
je     197b6 <TIFFFetchNormalTag+0x986>
mov    %rsi,%rcx
mov    %r9,%rsi
mov    $0x14fb,%edx
callq  8490 <__assert_fail@plt>
movq   $0x0,-0x78(%rbp)
movswq 0x4(%r11),%rax
cmp    $0xfffd,%ax
je     197da <TIFFFetchNormalTag+0x9aa>
mov    %rsi,%rcx
mov    %r9,%rsi
mov    $0x150c,%edx
callq  8490 <__assert_fail@plt>
movswq 0x4(%r11),%rax
cmp    $0xfffd,%ax
je     197fe <TIFFFetchNormalTag+0x9ce>
mov    %rsi,%rcx
mov    %r9,%rsi
mov    $0x151d,%edx
callq  8490 <__assert_fail@plt>
movq   $0x0,-0x68(%rbp)
movswq 0x4(%r11),%rax
cmp    $0xfffd,%ax
je     19822 <TIFFFetchNormalTag+0x9f2>
mov    %rsi,%rcx
mov    %r9,%rsi
mov    $0x152e,%edx
callq  8490 <__assert_fail@plt>
movswq 0x4(%r11),%rax
cmp    $0xfffd,%ax
je     19846 <TIFFFetchNormalTag+0xa16>
mov    %rsi,%rcx
mov    %r9,%rsi
mov    $0x153f,%edx
callq  8490 <__assert_fail@plt>
movq   $0x0,-0x58(%rbp)
movswq 0x4(%r11),%rax
cmp    $0xfffd,%ax
je     1986a <TIFFFetchNormalTag+0xa3a>
mov    %rsi,%rcx
mov    %r9,%rsi
mov    $0x1550,%edx
callq  8490 <__assert_fail@plt>
movswq 0x4(%r11),%rax
cmp    $0xfffd,%ax
je     1988e <TIFFFetchNormalTag+0xa5e>
mov    %rsi,%rcx
mov    %r9,%rsi
mov    $0x1561,%edx
callq  8490 <__assert_fail@plt>
movswq 0x4(%r11),%rax
cmp    $0xfffd,%ax
je     198b2 <TIFFFetchNormalTag+0xa82>
mov    %rsi,%rcx
mov    %r9,%rsi
mov    $0x1572,%edx
callq  8490 <__assert_fail@plt>
movswq 0x4(%r11),%rax
cmp    $0xfffd,%ax
je     198d6 <TIFFFetchNormalTag+0xaa6>
mov    %rsi,%rcx
mov    %r9,%rsi
mov    $0x1583,%edx
callq  8490 <__assert_fail@plt>
mov    0x20(%r15),%rcx
mov    %r14,%rdi
mov    %r10,%r14
mov    -0x8(%rbp),%r8
callq  17da0 <TIFFReadDirEntryOutputErr>
mov    %r14,%rax
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
leaveq 
retq   
lea    -0x130(%rbp),%rdx
mov    %r14,%rdi
mov    %r15,%rsi
mov    %r14,-0x38(%rbp)
mov    %r15,%r14
mov    %r11,%r15
callq  13ff0 <TIFFReadDirEntryByteArray>
test   %eax,%eax
je     198fa <TIFFFetchNormalTag+0xaca>
mov    %rax,%rsi
xor    %r10d,%r10d
lea    0x3abec(%rip),%rdx        # 54050 <module.89>
mov    $0x1,%eax
mov    -0x38(%rbp),%r14
jmpq   18f33 <TIFFFetchNormalTag+0x103>
movzbl 0x1b(%r11),%eax
test   %al,%al
je     19908 <TIFFFetchNormalTag+0xad8>
mov    %rsi,%rcx
mov    %r9,%rsi
mov    $0x1342,%edx
lea    0x3ac5c(%rip),%rdi        # 540ed <module.89+0x9d>
callq  8490 <__assert_fail@plt>
movzbl 0x1b(%r11),%eax
test   %al,%al
je     19941 <TIFFFetchNormalTag+0xb11>
mov    %rsi,%rcx
mov    %r9,%rsi
mov    $0x134f,%edx
lea    0x3ac38(%rip),%rdi        # 540ed <module.89+0x9d>
callq  8490 <__assert_fail@plt>
movzbl 0x1b(%r11),%eax
test   %al,%al
je     1997a <TIFFFetchNormalTag+0xb4a>
mov    %rsi,%rcx
mov    %r9,%rsi
mov    $0x135c,%edx
lea    0x3ac14(%rip),%rdi        # 540ed <module.89+0x9d>
callq  8490 <__assert_fail@plt>
movzbl 0x1b(%r11),%eax
test   %al,%al
je     199b3 <TIFFFetchNormalTag+0xb83>
mov    %rsi,%rcx
mov    %r9,%rsi
mov    $0x1369,%edx
lea    0x3abf0(%rip),%rdi        # 540ed <module.89+0x9d>
callq  8490 <__assert_fail@plt>
movzbl 0x1b(%r11),%eax
test   %al,%al
je     199ec <TIFFFetchNormalTag+0xbbc>
mov    %rsi,%rcx
mov    %r9,%rsi
mov    $0x1376,%edx
lea    0x3abcc(%rip),%rdi        # 540ed <module.89+0x9d>
callq  8490 <__assert_fail@plt>
movzbl 0x1b(%r11),%eax
test   %al,%al
je     19a2b <TIFFFetchNormalTag+0xbfb>
mov    %rsi,%rcx
mov    %r9,%rsi
mov    $0x1383,%edx
lea    0x3aba8(%rip),%rdi        # 540ed <module.89+0x9d>
callq  8490 <__assert_fail@plt>
movzbl 0x1b(%r11),%eax
test   %al,%al
je     19a64 <TIFFFetchNormalTag+0xc34>
mov    %rsi,%rcx
mov    %r9,%rsi
mov    $0x1390,%edx
lea    0x3ab84(%rip),%rdi        # 540ed <module.89+0x9d>
callq  8490 <__assert_fail@plt>
movzbl 0x1b(%r11),%eax
test   %al,%al
je     19a9d <TIFFFetchNormalTag+0xc6d>
mov    %rsi,%rcx
mov    %r9,%rsi
mov    $0x139d,%edx
lea    0x3ab60(%rip),%rdi        # 540ed <module.89+0x9d>
callq  8490 <__assert_fail@plt>
movzbl 0x1b(%r11),%eax
test   %al,%al
je     19aea <TIFFFetchNormalTag+0xcba>
mov    %rsi,%rcx
mov    %r9,%rsi
mov    $0x13b3,%edx
lea    0x3ab3c(%rip),%rdi        # 540ed <module.89+0x9d>
callq  8490 <__assert_fail@plt>
movzbl 0x1b(%r11),%ecx
test   %cl,%cl
je     19b30 <TIFFFetchNormalTag+0xd00>
mov    %rsi,%rcx
mov    %r9,%rsi
mov    $0x13cd,%edx
lea    0x3ab18(%rip),%rdi        # 540ed <module.89+0x9d>
callq  8490 <__assert_fail@plt>
movzbl 0x1b(%r11),%ecx
test   %cl,%cl
je     19b45 <TIFFFetchNormalTag+0xd15>
mov    %rsi,%rcx
mov    %r9,%rsi
mov    $0x13e3,%edx
lea    0x3aaf4(%rip),%rdi        # 540ed <module.89+0x9d>
callq  8490 <__assert_fail@plt>
movzbl 0x1b(%r11),%ecx
test   %cl,%cl
je     19b5a <TIFFFetchNormalTag+0xd2a>
mov    %rsi,%rcx
mov    %r9,%rsi
mov    $0x13f9,%edx
lea    0x3aad0(%rip),%rdi        # 540ed <module.89+0x9d>
callq  8490 <__assert_fail@plt>
movzbl 0x1b(%r11),%ecx
cmp    $0x1,%cl
je     19b6f <TIFFFetchNormalTag+0xd3f>
mov    %rsi,%rcx
mov    %r9,%rsi
mov    $0x140f,%edx
lea    0x3ac4c(%rip),%rdi        # 5428e <module.89+0x23e>
callq  8490 <__assert_fail@plt>
movzbl 0x1b(%r11),%ecx
cmp    $0x1,%cl
je     19b8b <TIFFFetchNormalTag+0xd5b>
mov    %rsi,%rcx
mov    %r9,%rsi
mov    $0x142a,%edx
lea    0x3ac27(%rip),%rdi        # 5428e <module.89+0x23e>
callq  8490 <__assert_fail@plt>
movzbl 0x1b(%r11),%ecx
cmp    $0x1,%cl
je     19ba7 <TIFFFetchNormalTag+0xd77>
mov    %rsi,%rcx
mov    %r9,%rsi
mov    $0x1440,%edx
lea    0x3ac02(%rip),%rdi        # 5428e <module.89+0x23e>
callq  8490 <__assert_fail@plt>
movzbl 0x1b(%r11),%ecx
cmp    $0x1,%cl
je     19bc3 <TIFFFetchNormalTag+0xd93>
mov    %rsi,%rcx
mov    %r9,%rsi
mov    $0x1456,%edx
lea    0x3abdd(%rip),%rdi        # 5428e <module.89+0x23e>
callq  8490 <__assert_fail@plt>
movzbl 0x1b(%r11),%ecx
cmp    $0x1,%cl
je     19bdf <TIFFFetchNormalTag+0xdaf>
mov    %rsi,%rcx
mov    %r9,%rsi
mov    $0x146c,%edx
lea    0x3abb8(%rip),%rdi        # 5428e <module.89+0x23e>
callq  8490 <__assert_fail@plt>
movzbl 0x1b(%r11),%ecx
cmp    $0x1,%cl
je     19bfb <TIFFFetchNormalTag+0xdcb>
mov    %rsi,%rcx
mov    %r9,%rsi
mov    $0x1482,%edx
lea    0x3ab93(%rip),%rdi        # 5428e <module.89+0x23e>
callq  8490 <__assert_fail@plt>
movzbl 0x1b(%r11),%ecx
cmp    $0x1,%cl
je     19c17 <TIFFFetchNormalTag+0xde7>
mov    %rsi,%rcx
mov    %r9,%rsi
mov    $0x1498,%edx
lea    0x3ab6e(%rip),%rdi        # 5428e <module.89+0x23e>
callq  8490 <__assert_fail@plt>
movzbl 0x1b(%r11),%ecx
cmp    $0x1,%cl
je     19c33 <TIFFFetchNormalTag+0xe03>
mov    %rsi,%rcx
mov    %r9,%rsi
mov    $0x14ae,%edx
lea    0x3ab49(%rip),%rdi        # 5428e <module.89+0x23e>
callq  8490 <__assert_fail@plt>
movzbl 0x1b(%r11),%eax
cmp    $0x1,%al
je     19c4f <TIFFFetchNormalTag+0xe1f>
mov    %rsi,%rcx
mov    %r9,%rsi
mov    $0x14c4,%edx
lea    0x3ab25(%rip),%rdi        # 5428e <module.89+0x23e>
callq  8490 <__assert_fail@plt>
movzbl 0x1b(%r11),%eax
cmp    $0x1,%al
je     19c8e <TIFFFetchNormalTag+0xe5e>
mov    %rsi,%rcx
mov    %r9,%rsi
mov    $0x14da,%edx
lea    0x3ab01(%rip),%rdi        # 5428e <module.89+0x23e>
callq  8490 <__assert_fail@plt>
movzbl 0x1b(%r11),%eax
cmp    $0x1,%al
je     19ccd <TIFFFetchNormalTag+0xe9d>
mov    %rsi,%rcx
mov    %r9,%rsi
mov    $0x14eb,%edx
lea    0x3aadd(%rip),%rdi        # 5428e <module.89+0x23e>
callq  8490 <__assert_fail@plt>
movzbl 0x1b(%r11),%eax
cmp    $0x1,%al
je     19d0c <TIFFFetchNormalTag+0xedc>
mov    %rsi,%rcx
mov    %r9,%rsi
mov    $0x14fc,%edx
lea    0x3aab9(%rip),%rdi        # 5428e <module.89+0x23e>
callq  8490 <__assert_fail@plt>
movzbl 0x1b(%r11),%eax
cmp    $0x1,%al
je     19d48 <TIFFFetchNormalTag+0xf18>
mov    %rsi,%rcx
mov    %r9,%rsi
mov    $0x150d,%edx
lea    0x3aa95(%rip),%rdi        # 5428e <module.89+0x23e>
callq  8490 <__assert_fail@plt>
movzbl 0x1b(%r11),%eax
cmp    $0x1,%al
je     19d84 <TIFFFetchNormalTag+0xf54>
mov    %rsi,%rcx
mov    %r9,%rsi
mov    $0x151e,%edx
lea    0x3aa71(%rip),%rdi        # 5428e <module.89+0x23e>
callq  8490 <__assert_fail@plt>
movzbl 0x1b(%r11),%eax
cmp    $0x1,%al
je     19dc0 <TIFFFetchNormalTag+0xf90>
mov    %rsi,%rcx
mov    %r9,%rsi
mov    $0x152f,%edx
lea    0x3aa4d(%rip),%rdi        # 5428e <module.89+0x23e>
callq  8490 <__assert_fail@plt>
movzbl 0x1b(%r11),%eax
cmp    $0x1,%al
je     19dfc <TIFFFetchNormalTag+0xfcc>
mov    %rsi,%rcx
mov    %r9,%rsi
mov    $0x1540,%edx
lea    0x3aa29(%rip),%rdi        # 5428e <module.89+0x23e>
callq  8490 <__assert_fail@plt>
movzbl 0x1b(%r11),%eax
cmp    $0x1,%al
je     19e38 <TIFFFetchNormalTag+0x1008>
mov    %rsi,%rcx
mov    %r9,%rsi
mov    $0x1551,%edx
lea    0x3aa05(%rip),%rdi        # 5428e <module.89+0x23e>
callq  8490 <__assert_fail@plt>
movzbl 0x1b(%r11),%eax
cmp    $0x1,%al
je     19e74 <TIFFFetchNormalTag+0x1044>
mov    %rsi,%rcx
mov    %r9,%rsi
mov    $0x1562,%edx
lea    0x3a9e1(%rip),%rdi        # 5428e <module.89+0x23e>
callq  8490 <__assert_fail@plt>
movzbl 0x1b(%r11),%eax
cmp    $0x1,%al
je     19eb0 <TIFFFetchNormalTag+0x1080>
mov    %rsi,%rcx
mov    %r9,%rsi
mov    $0x1573,%edx
lea    0x3a9bd(%rip),%rdi        # 5428e <module.89+0x23e>
callq  8490 <__assert_fail@plt>
movzbl 0x1b(%r11),%eax
cmp    $0x1,%al
je     19eec <TIFFFetchNormalTag+0x10bc>
mov    %rsi,%rcx
mov    %r9,%rsi
mov    $0x1584,%edx
lea    0x3a999(%rip),%rdi        # 5428e <module.89+0x23e>
callq  8490 <__assert_fail@plt>
mov    -0x130(%rbp),%rax
xor    %ecx,%ecx
jmpq   19f36 <TIFFFetchNormalTag+0x1106>
lea    -0x127(%rbp),%rdx
mov    %r14,%rdi
mov    %r15,%rsi
mov    %r11,-0x38(%rbp)
callq  13470 <TIFFReadDirEntryByte>
test   %eax,%eax
je     19f61 <TIFFFetchNormalTag+0x1131>
mov    %rax,%rsi
mov    -0x38(%rbp),%r15
xor    %r10d,%r10d
lea    0x3a719(%rip),%rdx        # 54050 <module.89>
mov    $0x1,%eax
jmpq   18f33 <TIFFFetchNormalTag+0x103>
lea    -0x126(%rbp),%rdx
mov    %r14,%rdi
mov    %r15,%rsi
mov    %r11,-0x38(%rbp)
callq  13630 <TIFFReadDirEntryShort>
test   %eax,%eax
je     19f99 <TIFFFetchNormalTag+0x1169>
mov    %rax,%rsi
mov    -0x38(%rbp),%r15
xor    %r10d,%r10d
lea    0x3a6e0(%rip),%rdx        # 54050 <module.89>
mov    $0x1,%eax
jmpq   18f33 <TIFFFetchNormalTag+0x103>
lea    -0x124(%rbp),%rdx
mov    %r14,%rdi
mov    %r15,%rsi
mov    %r11,-0x38(%rbp)
callq  137e0 <TIFFReadDirEntryLong>
test   %eax,%eax
je     19fd1 <TIFFFetchNormalTag+0x11a1>
mov    %rax,%rsi
mov    -0x38(%rbp),%r15
xor    %r10d,%r10d
lea    0x3a6a7(%rip),%rdx        # 54050 <module.89>
mov    $0x1,%eax
jmpq   18f33 <TIFFFetchNormalTag+0x103>
lea    -0x120(%rbp),%rdx
mov    %r14,%rdi
mov    %r15,%rsi
mov    %r11,-0x38(%rbp)
callq  13980 <TIFFReadDirEntryLong8>
test   %eax,%eax
je     1a008 <TIFFFetchNormalTag+0x11d8>
mov    %rax,%rsi
mov    -0x38(%rbp),%r15
xor    %r10d,%r10d
lea    0x3a66e(%rip),%rdx        # 54050 <module.89>
mov    $0x1,%eax
jmpq   18f33 <TIFFFetchNormalTag+0x103>
lea    -0x114(%rbp),%rdx
mov    %r14,%rdi
mov    %r15,%rsi
mov    %r14,-0x38(%rbp)
mov    %r15,%r14
mov    %r11,%r15
callq  13b00 <TIFFReadDirEntryFloat>
test   %eax,%eax
je     1a040 <TIFFFetchNormalTag+0x1210>
mov    %rax,%rsi
xor    %r10d,%r10d
lea    0x3a633(%rip),%rdx        # 54050 <module.89>
mov    $0x1,%eax
mov    -0x38(%rbp),%r14
jmpq   18f33 <TIFFFetchNormalTag+0x103>
lea    -0x110(%rbp),%rdx
mov    %r14,%rdi
mov    %r15,%rsi
mov    %r11,-0x38(%rbp)
callq  13d70 <TIFFReadDirEntryDouble>
test   %eax,%eax
je     1a080 <TIFFFetchNormalTag+0x1250>
mov    %rax,%rsi
mov    -0x38(%rbp),%r15
xor    %r10d,%r10d
lea    0x3a5f6(%rip),%rdx        # 54050 <module.89>
mov    $0x1,%eax
jmpq   18f33 <TIFFFetchNormalTag+0x103>
lea    -0x108(%rbp),%rdx
mov    %r14,%rdi
mov    %r15,%rsi
mov    %r11,-0x38(%rbp)
callq  13f60 <TIFFReadDirEntryIfd8>
test   %eax,%eax
je     1a0bc <TIFFFetchNormalTag+0x128c>
mov    %rax,%rsi
mov    -0x38(%rbp),%r15
xor    %r10d,%r10d
lea    0x3a5bd(%rip),%rdx        # 54050 <module.89>
mov    $0x1,%eax
jmpq   18f33 <TIFFFetchNormalTag+0x103>
mov    0x8(%r15),%r8
cmp    $0x2,%r8
jne    1a0f4 <TIFFFetchNormalTag+0x12c4>
lea    -0x100(%rbp),%rdx
mov    %r14,%rdi
mov    %r15,%rsi
mov    %r14,-0x38(%rbp)
mov    %r15,%r14
mov    %r11,%r15
callq  14b60 <TIFFReadDirEntryShortArray>
test   %eax,%eax
je     1a126 <TIFFFetchNormalTag+0x12f6>
mov    %rax,%rsi
xor    %r10d,%r10d
lea    0x3a574(%rip),%rdx        # 54050 <module.89>
mov    $0x1,%eax
mov    -0x38(%rbp),%r14
jmpq   18f33 <TIFFFetchNormalTag+0x103>
mov    0x8(%r15),%r9
cmp    %r9,%r8
jne    1a176 <TIFFFetchNormalTag+0x1346>
lea    -0xf8(%rbp),%rdx
mov    %r14,%rdi
mov    %r15,%rsi
mov    %r11,-0x38(%rbp)
callq  13ff0 <TIFFReadDirEntryByteArray>
test   %eax,%eax
je     1a1a8 <TIFFFetchNormalTag+0x1378>
mov    %rax,%rsi
mov    -0x38(%rbp),%r15
xor    %r10d,%r10d
lea    0x3a52a(%rip),%rdx        # 54050 <module.89>
mov    $0x1,%eax
jmpq   18f33 <TIFFFetchNormalTag+0x103>
cmp    0x8(%r15),%rdi
je     1a1f7 <TIFFFetchNormalTag+0x13c7>
mov    %r11,%r15
mov    %r10,%rsi
jmpq   18f33 <TIFFFetchNormalTag+0x103>
cmp    0x8(%r15),%rdi
je     1a230 <TIFFFetchNormalTag+0x1400>
mov    %r11,%r15
mov    %r10,%rsi
jmpq   18f33 <TIFFFetchNormalTag+0x103>
cmp    0x8(%r15),%rdi
je     1a269 <TIFFFetchNormalTag+0x1439>
mov    %r11,%r15
mov    %r10,%rsi
jmpq   18f33 <TIFFFetchNormalTag+0x103>
mov    0x8(%r15),%rcx
cmp    $0xffff,%rcx
jbe    1a2a2 <TIFFFetchNormalTag+0x1472>
mov    %r11,%r15
mov    %rax,%rsi
jmpq   18f33 <TIFFFetchNormalTag+0x103>
mov    0x8(%r15),%rcx
cmp    $0xffff,%rcx
jbe    1a2e1 <TIFFFetchNormalTag+0x14b1>
mov    %r11,%r15
mov    %rax,%rsi
jmpq   18f33 <TIFFFetchNormalTag+0x103>
mov    0x8(%r15),%rcx
cmp    $0xffff,%rcx
jbe    1a320 <TIFFFetchNormalTag+0x14f0>
mov    %r11,%r15
mov    %rax,%rsi
jmpq   18f33 <TIFFFetchNormalTag+0x103>
mov    0x8(%r15),%rcx
cmp    $0xffff,%rcx
jbe    1a35f <TIFFFetchNormalTag+0x152f>
mov    %r11,%r15
mov    %rax,%rsi
jmpq   18f33 <TIFFFetchNormalTag+0x103>
mov    0x8(%r15),%rcx
cmp    $0xffff,%rcx
jbe    1a39e <TIFFFetchNormalTag+0x156e>
mov    %r11,%r15
mov    %rax,%rsi
jmpq   18f33 <TIFFFetchNormalTag+0x103>
mov    0x8(%r15),%rcx
cmp    $0xffff,%rcx
jbe    1a3dd <TIFFFetchNormalTag+0x15ad>
mov    %r11,%r15
mov    %rax,%rsi
jmpq   18f33 <TIFFFetchNormalTag+0x103>
mov    0x8(%r15),%rcx
cmp    $0xffff,%rcx
jbe    1a41c <TIFFFetchNormalTag+0x15ec>
mov    %r11,%r15
mov    %rax,%rsi
jmpq   18f33 <TIFFFetchNormalTag+0x103>
mov    0x8(%r15),%rcx
cmp    $0xffff,%rcx
jbe    1a45b <TIFFFetchNormalTag+0x162b>
mov    %r11,%r15
mov    %rax,%rsi
jmpq   18f33 <TIFFFetchNormalTag+0x103>
lea    -0x98(%rbp),%rdx
mov    %r14,%rdi
mov    %r15,%rsi
mov    %r14,-0x38(%rbp)
mov    %r15,%r14
mov    %r11,%r15
callq  13ff0 <TIFFReadDirEntryByteArray>
test   %eax,%eax
je     1a49a <TIFFFetchNormalTag+0x166a>
mov    %rax,%rsi
xor    %r10d,%r10d
lea    0x3a3d0(%rip),%rdx        # 54050 <module.89>
mov    $0x1,%eax
mov    -0x38(%rbp),%r14
jmpq   18f33 <TIFFFetchNormalTag+0x103>
lea    -0x90(%rbp),%rdx
mov    %r14,%rdi
mov    %r15,%rsi
mov    %r14,-0x38(%rbp)
mov    %r15,%r14
mov    %r11,%r15
callq  13ff0 <TIFFReadDirEntryByteArray>
test   %eax,%eax
je     1a4ff <TIFFFetchNormalTag+0x16cf>
mov    %rax,%rsi
xor    %r10d,%r10d
lea    0x3a391(%rip),%rdx        # 54050 <module.89>
mov    $0x1,%eax
mov    -0x38(%rbp),%r14
jmpq   18f33 <TIFFFetchNormalTag+0x103>
lea    -0x88(%rbp),%rdx
mov    %r14,%rdi
mov    %r15,%rsi
mov    %r14,-0x38(%rbp)
mov    %r15,%r14
mov    %r11,%r15
callq  145a0 <TIFFReadDirEntrySbyteArray>
test   %eax,%eax
je     1a556 <TIFFFetchNormalTag+0x1726>
mov    %rax,%rsi
xor    %r10d,%r10d
lea    0x3a352(%rip),%rdx        # 54050 <module.89>
mov    $0x1,%eax
mov    -0x38(%rbp),%r14
jmpq   18f33 <TIFFFetchNormalTag+0x103>
lea    -0x80(%rbp),%rdx
mov    %r14,%rdi
mov    %r15,%rsi
mov    %r14,-0x38(%rbp)
mov    %r15,%r14
mov    %r11,%r15
callq  14b60 <TIFFReadDirEntryShortArray>
test   %eax,%eax
je     1a5ad <TIFFFetchNormalTag+0x177d>
mov    %rax,%rsi
xor    %r10d,%r10d
lea    0x3a316(%rip),%rdx        # 54050 <module.89>
mov    $0x1,%eax
mov    -0x38(%rbp),%r14
jmpq   18f33 <TIFFFetchNormalTag+0x103>
lea    -0x78(%rbp),%rdx
mov    %r14,%rdi
mov    %r15,%rsi
mov    %r14,-0x38(%rbp)
mov    %r15,%r14
mov    %r11,%r15
callq  15080 <TIFFReadDirEntrySshortArray>
test   %eax,%eax
je     1a5fe <TIFFFetchNormalTag+0x17ce>
mov    %rax,%rsi
xor    %r10d,%r10d
lea    0x3a2da(%rip),%rdx        # 54050 <module.89>
mov    $0x1,%eax
mov    -0x38(%rbp),%r14
jmpq   18f33 <TIFFFetchNormalTag+0x103>
lea    -0x70(%rbp),%rdx
mov    %r14,%rdi
mov    %r15,%rsi
mov    %r14,-0x38(%rbp)
mov    %r15,%r14
mov    %r11,%r15
callq  15560 <TIFFReadDirEntryLongArray>
test   %eax,%eax
je     1a64f <TIFFFetchNormalTag+0x181f>
mov    %rax,%rsi
xor    %r10d,%r10d
lea    0x3a29e(%rip),%rdx        # 54050 <module.89>
mov    $0x1,%eax
mov    -0x38(%rbp),%r14
jmpq   18f33 <TIFFFetchNormalTag+0x103>
lea    -0x68(%rbp),%rdx
mov    %r14,%rdi
mov    %r15,%rsi
mov    %r14,-0x38(%rbp)
mov    %r15,%r14
mov    %r11,%r15
callq  15a50 <TIFFReadDirEntrySlongArray>
test   %eax,%eax
je     1a6a0 <TIFFFetchNormalTag+0x1870>
mov    %rax,%rsi
xor    %r10d,%r10d
lea    0x3a262(%rip),%rdx        # 54050 <module.89>
mov    $0x1,%eax
mov    -0x38(%rbp),%r14
jmpq   18f33 <TIFFFetchNormalTag+0x103>
lea    -0x60(%rbp),%rdx
mov    %r14,%rdi
mov    %r15,%rsi
mov    %r14,-0x38(%rbp)
mov    %r15,%r14
mov    %r11,%r15
callq  15ec0 <TIFFReadDirEntryLong8Array>
test   %eax,%eax
je     1a6f1 <TIFFFetchNormalTag+0x18c1>
mov    %rax,%rsi
xor    %r10d,%r10d
lea    0x3a226(%rip),%rdx        # 54050 <module.89>
mov    $0x1,%eax
mov    -0x38(%rbp),%r14
jmpq   18f33 <TIFFFetchNormalTag+0x103>
lea    -0x58(%rbp),%rdx
mov    %r14,%rdi
mov    %r15,%rsi
mov    %r14,-0x38(%rbp)
mov    %r15,%r14
mov    %r11,%r15
callq  15ee0 <TIFFReadDirEntrySlong8Array>
test   %eax,%eax
je     1a742 <TIFFFetchNormalTag+0x1912>
mov    %rax,%rsi
xor    %r10d,%r10d
lea    0x3a1ea(%rip),%rdx        # 54050 <module.89>
mov    $0x1,%eax
mov    -0x38(%rbp),%r14
jmpq   18f33 <TIFFFetchNormalTag+0x103>
lea    -0x50(%rbp),%rdx
mov    %r14,%rdi
mov    %r15,%rsi
mov    %r14,-0x38(%rbp)
mov    %r15,%r14
mov    %r11,%r15
callq  162a0 <TIFFReadDirEntryFloatArray>
test   %eax,%eax
je     1a793 <TIFFFetchNormalTag+0x1963>
mov    %rax,%rsi
xor    %r10d,%r10d
lea    0x3a1ae(%rip),%rdx        # 54050 <module.89>
mov    $0x1,%eax
mov    -0x38(%rbp),%r14
jmpq   18f33 <TIFFFetchNormalTag+0x103>
lea    -0x48(%rbp),%rdx
mov    %r14,%rdi
mov    %r15,%rsi
mov    %r14,-0x38(%rbp)
mov    %r15,%r14
mov    %r11,%r15
callq  169d0 <TIFFReadDirEntryDoubleArray>
test   %eax,%eax
je     1a7e4 <TIFFFetchNormalTag+0x19b4>
mov    %rax,%rsi
xor    %r10d,%r10d
lea    0x3a172(%rip),%rdx        # 54050 <module.89>
mov    $0x1,%eax
mov    -0x38(%rbp),%r14
jmpq   18f33 <TIFFFetchNormalTag+0x103>
lea    -0x40(%rbp),%rdx
mov    %r14,%rdi
mov    %r15,%rsi
mov    %r14,-0x38(%rbp)
mov    %r15,%r14
mov    %r11,%r15
callq  170c0 <TIFFReadDirEntryIfd8Array>
test   %eax,%eax
je     1a835 <TIFFFetchNormalTag+0x1a05>
mov    %rax,%rsi
xor    %r10d,%r10d
lea    0x3a136(%rip),%rdx        # 54050 <module.89>
mov    $0x1,%eax
mov    -0x38(%rbp),%r14
jmpq   18f33 <TIFFFetchNormalTag+0x103>
movzbl (%rax),%ecx
test   %cl,%cl
je     19f41 <TIFFFetchNormalTag+0x1111>
add    $0x1,%rax
mov    %rsi,%rcx
lea    0x1(%rcx),%esi
mov    0x8(%r14),%edx
cmp    %ecx,%edx
ja     19f28 <TIFFFetchNormalTag+0x10f8>
mov    0x8(%r14),%eax
cmp    %eax,%esi
jb     1a886 <TIFFFetchNormalTag+0x1a56>
cmp    %eax,%esi
ja     1a90a <TIFFFetchNormalTag+0x1ada>
mov    %r14,%r8
mov    -0x38(%rbp),%r14
jmpq   1a8bb <TIFFFetchNormalTag+0x1a8b>
xor    %eax,%eax
movzwl (%r15),%esi
movzbl -0x127(%rbp),%edx
mov    %r14,%rdi
callq  8290 <TIFFSetField@plt>
test   %eax,%eax
je     1a995 <TIFFFetchNormalTag+0x1b65>
mov    -0x38(%rbp),%r15
xor    %r10d,%r10d
lea    0x3a0c4(%rip),%rdx        # 54050 <module.89>
mov    $0x1,%eax
mov    %r10,%rsi
jmpq   18f33 <TIFFFetchNormalTag+0x103>
xor    %eax,%eax
movzwl (%r15),%esi
movzwl -0x126(%rbp),%edx
mov    %r14,%rdi
callq  8290 <TIFFSetField@plt>
test   %eax,%eax
je     1a9a1 <TIFFFetchNormalTag+0x1b71>
mov    -0x38(%rbp),%r15
xor    %r10d,%r10d
lea    0x3a08c(%rip),%rdx        # 54050 <module.89>
mov    $0x1,%eax
mov    %r10,%rsi
jmpq   18f33 <TIFFFetchNormalTag+0x103>
xor    %eax,%eax
movzwl (%r15),%esi
mov    -0x124(%rbp),%edx
mov    %r14,%rdi
callq  8290 <TIFFSetField@plt>
test   %eax,%eax
je     1a9ad <TIFFFetchNormalTag+0x1b7d>
mov    -0x38(%rbp),%r15
xor    %r10d,%r10d
lea    0x3a055(%rip),%rdx        # 54050 <module.89>
mov    $0x1,%eax
mov    %r10,%rsi
jmpq   18f33 <TIFFFetchNormalTag+0x103>
xor    %eax,%eax
movzwl (%r15),%esi
mov    -0x120(%rbp),%rdx
mov    %r14,%rdi
callq  8290 <TIFFSetField@plt>
test   %eax,%eax
je     1a9b9 <TIFFFetchNormalTag+0x1b89>
mov    -0x38(%rbp),%r15
xor    %r10d,%r10d
lea    0x3a01d(%rip),%rdx        # 54050 <module.89>
mov    $0x1,%eax
mov    %r10,%rsi
jmpq   18f33 <TIFFFetchNormalTag+0x103>
mov    $0x1,%eax
movzwl (%r14),%esi
movss  -0x114(%rbp),%xmm0
cvtss2sd %xmm0,%xmm0
mov    -0x38(%rbp),%r14
mov    %r14,%rdi
callq  8290 <TIFFSetField@plt>
test   %eax,%eax
je     1a9c5 <TIFFFetchNormalTag+0x1b95>
xor    %r10d,%r10d
lea    0x39fdd(%rip),%rdx        # 54050 <module.89>
mov    $0x1,%eax
mov    %r10,%rsi
jmpq   18f33 <TIFFFetchNormalTag+0x103>
mov    $0x1,%eax
movzwl (%r15),%esi
movsd  -0x110(%rbp),%xmm0
mov    %r14,%rdi
callq  8290 <TIFFSetField@plt>
test   %eax,%eax
je     1a9d1 <TIFFFetchNormalTag+0x1ba1>
mov    -0x38(%rbp),%r15
xor    %r10d,%r10d
lea    0x39fa1(%rip),%rdx        # 54050 <module.89>
mov    $0x1,%eax
mov    %r10,%rsi
jmpq   18f33 <TIFFFetchNormalTag+0x103>
xor    %eax,%eax
movzwl (%r15),%esi
mov    -0x108(%rbp),%rdx
mov    %r14,%rdi
callq  8290 <TIFFSetField@plt>
test   %eax,%eax
je     1a9dd <TIFFFetchNormalTag+0x1bad>
mov    -0x38(%rbp),%r15
xor    %r10d,%r10d
lea    0x39f69(%rip),%rdx        # 54050 <module.89>
mov    $0x1,%eax
mov    %r10,%rsi
jmpq   18f33 <TIFFFetchNormalTag+0x103>
xor    %eax,%eax
mov    0x3b8(%r14),%rdi
lea    0x3a0e7(%rip),%rsi        # 541eb <module.89+0x19b>
mov    0x20(%r11),%rcx
mov    %r10,%r14
mov    %rsi,%r10
mov    %rdx,%rsi
mov    %r10,%rdx
callq  85a0 <TIFFWarningExt@plt>
mov    %r14,%rax
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
leaveq 
retq   
xor    %eax,%eax
movzwl (%r14),%esi
mov    -0x100(%rbp),%rcx
movzwl (%rcx),%edx
movzwl 0x2(%rcx),%ecx
mov    -0x38(%rbp),%rdi
callq  8290 <TIFFSetField@plt>
mov    %rax,%r14
mov    -0x100(%rbp),%rdi
callq  8bb0 <_TIFFfree@plt>
test   %r14d,%r14d
je     1a9e9 <TIFFFetchNormalTag+0x1bb9>
xor    %r10d,%r10d
lea    0x39eeb(%rip),%rdx        # 54050 <module.89>
mov    $0x1,%eax
mov    -0x38(%rbp),%r14
mov    %r10,%rsi
jmpq   18f33 <TIFFFetchNormalTag+0x103>
xor    %eax,%eax
mov    0x3b8(%r14),%rdi
lea    0x3a0b0(%rip),%rsi        # 54236 <module.89+0x1e6>
mov    0x20(%r11),%rcx
mov    %r10,%r15
mov    %rsi,%r10
mov    %rdx,%rsi
mov    %r10,%rdx
callq  85a0 <TIFFWarningExt@plt>
mov    %r15,%rax
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
leaveq 
retq   
xor    %eax,%eax
movzwl (%r15),%esi
mov    -0xf8(%rbp),%rdx
mov    %r14,%rdi
callq  8290 <TIFFSetField@plt>
mov    -0xf8(%rbp),%rdi
test   %rdi,%rdi
je     1a1d4 <TIFFFetchNormalTag+0x13a4>
mov    %rax,%r15
callq  8bb0 <_TIFFfree@plt>
mov    %r15,%rax
test   %eax,%eax
je     1a9f5 <TIFFFetchNormalTag+0x1bc5>
mov    -0x38(%rbp),%r15
xor    %r10d,%r10d
lea    0x39e66(%rip),%rdx        # 54050 <module.89>
mov    $0x1,%eax
mov    %r10,%rsi
jmpq   18f33 <TIFFFetchNormalTag+0x103>
lea    -0xf0(%rbp),%rdx
mov    %r14,%rdi
mov    %r15,%rsi
mov    %r11,-0x38(%rbp)
callq  14b60 <TIFFReadDirEntryShortArray>
test   %eax,%eax
je     1aa01 <TIFFFetchNormalTag+0x1bd1>
mov    %rax,%rsi
mov    -0x38(%rbp),%r15
xor    %r10d,%r10d
lea    0x39e2a(%rip),%rdx        # 54050 <module.89>
mov    $0x1,%eax
jmpq   18f33 <TIFFFetchNormalTag+0x103>
lea    -0xe8(%rbp),%rdx
mov    %r14,%rdi
mov    %r15,%rsi
mov    %r11,-0x38(%rbp)
callq  15560 <TIFFReadDirEntryLongArray>
test   %eax,%eax
je     1aa50 <TIFFFetchNormalTag+0x1c20>
mov    %rax,%rsi
mov    -0x38(%rbp),%r15
xor    %r10d,%r10d
lea    0x39df1(%rip),%rdx        # 54050 <module.89>
mov    $0x1,%eax
jmpq   18f33 <TIFFFetchNormalTag+0x103>
lea    -0xe0(%rbp),%rdx
mov    %r14,%rdi
mov    %r15,%rsi
mov    %r11,-0x38(%rbp)
callq  162a0 <TIFFReadDirEntryFloatArray>
test   %eax,%eax
je     1aa9f <TIFFFetchNormalTag+0x1c6f>
mov    %rax,%rsi
mov    -0x38(%rbp),%r15
xor    %r10d,%r10d
lea    0x39db8(%rip),%rdx        # 54050 <module.89>
mov    $0x1,%eax
jmpq   18f33 <TIFFFetchNormalTag+0x103>
lea    -0xd8(%rbp),%rdx
mov    %r14,%rdi
mov    %r15,%rsi
mov    %r14,-0x38(%rbp)
mov    %r15,%r14
mov    %r11,%r15
callq  13ff0 <TIFFReadDirEntryByteArray>
test   %eax,%eax
je     1aaee <TIFFFetchNormalTag+0x1cbe>
mov    %rax,%rsi
xor    %r10d,%r10d
lea    0x39d7d(%rip),%rdx        # 54050 <module.89>
mov    $0x1,%eax
mov    -0x38(%rbp),%r14
jmpq   18f33 <TIFFFetchNormalTag+0x103>
lea    -0xd0(%rbp),%rdx
mov    %r14,%rdi
mov    %r15,%rsi
mov    %r14,-0x38(%rbp)
mov    %r15,%r14
mov    %r11,%r15
callq  13ff0 <TIFFReadDirEntryByteArray>
test   %eax,%eax
je     1ab54 <TIFFFetchNormalTag+0x1d24>
mov    %rax,%rsi
xor    %r10d,%r10d
lea    0x39d3e(%rip),%rdx        # 54050 <module.89>
mov    $0x1,%eax
mov    -0x38(%rbp),%r14
jmpq   18f33 <TIFFFetchNormalTag+0x103>
lea    -0xc8(%rbp),%rdx
mov    %r14,%rdi
mov    %r15,%rsi
mov    %r14,-0x38(%rbp)
mov    %r15,%r14
mov    %r11,%r15
callq  14b60 <TIFFReadDirEntryShortArray>
test   %eax,%eax
je     1abac <TIFFFetchNormalTag+0x1d7c>
mov    %rax,%rsi
xor    %r10d,%r10d
lea    0x39cff(%rip),%rdx        # 54050 <module.89>
mov    $0x1,%eax
mov    -0x38(%rbp),%r14
jmpq   18f33 <TIFFFetchNormalTag+0x103>
lea    -0xc0(%rbp),%rdx
mov    %r14,%rdi
mov    %r15,%rsi
mov    %r14,-0x38(%rbp)
mov    %r15,%r14
mov    %r11,%r15
callq  15560 <TIFFReadDirEntryLongArray>
test   %eax,%eax
je     1ac04 <TIFFFetchNormalTag+0x1dd4>
mov    %rax,%rsi
xor    %r10d,%r10d
lea    0x39cc0(%rip),%rdx        # 54050 <module.89>
mov    $0x1,%eax
mov    -0x38(%rbp),%r14
jmpq   18f33 <TIFFFetchNormalTag+0x103>
lea    -0xb8(%rbp),%rdx
mov    %r14,%rdi
mov    %r15,%rsi
mov    %r14,-0x38(%rbp)
mov    %r15,%r14
mov    %r11,%r15
callq  15ec0 <TIFFReadDirEntryLong8Array>
test   %eax,%eax
je     1ac5c <TIFFFetchNormalTag+0x1e2c>
mov    %rax,%rsi
xor    %r10d,%r10d
lea    0x39c81(%rip),%rdx        # 54050 <module.89>
mov    $0x1,%eax
mov    -0x38(%rbp),%r14
jmpq   18f33 <TIFFFetchNormalTag+0x103>
lea    -0xb0(%rbp),%rdx
mov    %r14,%rdi
mov    %r15,%rsi
mov    %r14,-0x38(%rbp)
mov    %r15,%r14
mov    %r11,%r15
callq  162a0 <TIFFReadDirEntryFloatArray>
test   %eax,%eax
je     1acb4 <TIFFFetchNormalTag+0x1e84>
mov    %rax,%rsi
xor    %r10d,%r10d
lea    0x39c42(%rip),%rdx        # 54050 <module.89>
mov    $0x1,%eax
mov    -0x38(%rbp),%r14
jmpq   18f33 <TIFFFetchNormalTag+0x103>
lea    -0xa8(%rbp),%rdx
mov    %r14,%rdi
mov    %r15,%rsi
mov    %r14,-0x38(%rbp)
mov    %r15,%r14
mov    %r11,%r15
callq  169d0 <TIFFReadDirEntryDoubleArray>
test   %eax,%eax
je     1ad0c <TIFFFetchNormalTag+0x1edc>
mov    %rax,%rsi
xor    %r10d,%r10d
lea    0x39c03(%rip),%rdx        # 54050 <module.89>
mov    $0x1,%eax
mov    -0x38(%rbp),%r14
jmpq   18f33 <TIFFFetchNormalTag+0x103>
lea    -0xa0(%rbp),%rdx
mov    %r14,%rdi
mov    %r15,%rsi
mov    %r14,-0x38(%rbp)
mov    %r15,%r14
mov    %r11,%r15
callq  170c0 <TIFFReadDirEntryIfd8Array>
test   %eax,%eax
je     1ad64 <TIFFFetchNormalTag+0x1f34>
mov    %rax,%rsi
xor    %r10d,%r10d
lea    0x39bc4(%rip),%rdx        # 54050 <module.89>
mov    $0x1,%eax
mov    -0x38(%rbp),%r14
jmpq   18f33 <TIFFFetchNormalTag+0x103>
mov    0x8(%r14),%rax
test   %rax,%rax
jne    1adbc <TIFFFetchNormalTag+0x1f8c>
mov    %r14,%rcx
mov    -0x38(%rbp),%r14
xor    %eax,%eax
movzwl (%rcx),%esi
mov    0x8(%rcx),%edx
mov    -0x98(%rbp),%rcx
mov    %r14,%rdi
callq  8290 <TIFFSetField@plt>
mov    -0x98(%rbp),%rdi
test   %rdi,%rdi
je     1a4e0 <TIFFFetchNormalTag+0x16b0>
mov    %rax,%r14
callq  8bb0 <_TIFFfree@plt>
mov    %r14,%rax
mov    -0x38(%rbp),%r14
test   %eax,%eax
je     1addc <TIFFFetchNormalTag+0x1fac>
xor    %r10d,%r10d
lea    0x39b5e(%rip),%rdx        # 54050 <module.89>
mov    $0x1,%eax
mov    %r10,%rsi
jmpq   18f33 <TIFFFetchNormalTag+0x103>
xor    %eax,%eax
movzwl (%r14),%esi
mov    0x8(%r14),%edx
mov    -0x90(%rbp),%rcx
mov    -0x38(%rbp),%r14
mov    %r14,%rdi
callq  8290 <TIFFSetField@plt>
mov    -0x90(%rbp),%rdi
test   %rdi,%rdi
je     1a537 <TIFFFetchNormalTag+0x1707>
mov    %rax,%r14
callq  8bb0 <_TIFFfree@plt>
mov    %r14,%rax
mov    -0x38(%rbp),%r14
test   %eax,%eax
je     1ade8 <TIFFFetchNormalTag+0x1fb8>
xor    %r10d,%r10d
lea    0x39b07(%rip),%rdx        # 54050 <module.89>
mov    $0x1,%eax
mov    %r10,%rsi
jmpq   18f33 <TIFFFetchNormalTag+0x103>
xor    %eax,%eax
movzwl (%r14),%esi
mov    0x8(%r14),%edx
mov    -0x88(%rbp),%rcx
mov    -0x38(%rbp),%r14
mov    %r14,%rdi
callq  8290 <TIFFSetField@plt>
mov    -0x88(%rbp),%rdi
test   %rdi,%rdi
je     1a58e <TIFFFetchNormalTag+0x175e>
mov    %rax,%r14
callq  8bb0 <_TIFFfree@plt>
mov    %r14,%rax
mov    -0x38(%rbp),%r14
test   %eax,%eax
je     1adf4 <TIFFFetchNormalTag+0x1fc4>
xor    %r10d,%r10d
lea    0x39ab0(%rip),%rdx        # 54050 <module.89>
mov    $0x1,%eax
mov    %r10,%rsi
jmpq   18f33 <TIFFFetchNormalTag+0x103>
xor    %eax,%eax
movzwl (%r14),%esi
mov    0x8(%r14),%edx
mov    -0x80(%rbp),%rcx
mov    -0x38(%rbp),%r14
mov    %r14,%rdi
callq  8290 <TIFFSetField@plt>
mov    -0x80(%rbp),%rdi
test   %rdi,%rdi
je     1a5df <TIFFFetchNormalTag+0x17af>
mov    %rax,%r14
callq  8bb0 <_TIFFfree@plt>
mov    %r14,%rax
mov    -0x38(%rbp),%r14
test   %eax,%eax
je     1ae00 <TIFFFetchNormalTag+0x1fd0>
xor    %r10d,%r10d
lea    0x39a5f(%rip),%rdx        # 54050 <module.89>
mov    $0x1,%eax
mov    %r10,%rsi
jmpq   18f33 <TIFFFetchNormalTag+0x103>
xor    %eax,%eax
movzwl (%r14),%esi
mov    0x8(%r14),%edx
mov    -0x78(%rbp),%rcx
mov    -0x38(%rbp),%r14
mov    %r14,%rdi
callq  8290 <TIFFSetField@plt>
mov    -0x78(%rbp),%rdi
test   %rdi,%rdi
je     1a630 <TIFFFetchNormalTag+0x1800>
mov    %rax,%r14
callq  8bb0 <_TIFFfree@plt>
mov    %r14,%rax
mov    -0x38(%rbp),%r14
test   %eax,%eax
je     1ae0c <TIFFFetchNormalTag+0x1fdc>
xor    %r10d,%r10d
lea    0x39a0e(%rip),%rdx        # 54050 <module.89>
mov    $0x1,%eax
mov    %r10,%rsi
jmpq   18f33 <TIFFFetchNormalTag+0x103>
xor    %eax,%eax
movzwl (%r14),%esi
mov    0x8(%r14),%edx
mov    -0x70(%rbp),%rcx
mov    -0x38(%rbp),%r14
mov    %r14,%rdi
callq  8290 <TIFFSetField@plt>
mov    -0x70(%rbp),%rdi
test   %rdi,%rdi
je     1a681 <TIFFFetchNormalTag+0x1851>
mov    %rax,%r14
callq  8bb0 <_TIFFfree@plt>
mov    %r14,%rax
mov    -0x38(%rbp),%r14
test   %eax,%eax
je     1ae18 <TIFFFetchNormalTag+0x1fe8>
xor    %r10d,%r10d
lea    0x399bd(%rip),%rdx        # 54050 <module.89>
mov    $0x1,%eax
mov    %r10,%rsi
jmpq   18f33 <TIFFFetchNormalTag+0x103>
xor    %eax,%eax
movzwl (%r14),%esi
mov    0x8(%r14),%edx
mov    -0x68(%rbp),%rcx
mov    -0x38(%rbp),%r14
mov    %r14,%rdi
callq  8290 <TIFFSetField@plt>
mov    -0x68(%rbp),%rdi
test   %rdi,%rdi
je     1a6d2 <TIFFFetchNormalTag+0x18a2>
mov    %rax,%r14
callq  8bb0 <_TIFFfree@plt>
mov    %r14,%rax
mov    -0x38(%rbp),%r14
test   %eax,%eax
je     1ae24 <TIFFFetchNormalTag+0x1ff4>
xor    %r10d,%r10d
lea    0x3996c(%rip),%rdx        # 54050 <module.89>
mov    $0x1,%eax
mov    %r10,%rsi
jmpq   18f33 <TIFFFetchNormalTag+0x103>
xor    %eax,%eax
movzwl (%r14),%esi
mov    0x8(%r14),%edx
mov    -0x60(%rbp),%rcx
mov    -0x38(%rbp),%r14
mov    %r14,%rdi
callq  8290 <TIFFSetField@plt>
mov    -0x60(%rbp),%rdi
test   %rdi,%rdi
je     1a723 <TIFFFetchNormalTag+0x18f3>
mov    %rax,%r14
callq  8bb0 <_TIFFfree@plt>
mov    %r14,%rax
mov    -0x38(%rbp),%r14
test   %eax,%eax
je     1ae30 <TIFFFetchNormalTag+0x2000>
xor    %r10d,%r10d
lea    0x3991b(%rip),%rdx        # 54050 <module.89>
mov    $0x1,%eax
mov    %r10,%rsi
jmpq   18f33 <TIFFFetchNormalTag+0x103>
xor    %eax,%eax
movzwl (%r14),%esi
mov    0x8(%r14),%edx
mov    -0x58(%rbp),%rcx
mov    -0x38(%rbp),%r14
mov    %r14,%rdi
callq  8290 <TIFFSetField@plt>
mov    -0x58(%rbp),%rdi
test   %rdi,%rdi
je     1a774 <TIFFFetchNormalTag+0x1944>
mov    %rax,%r14
callq  8bb0 <_TIFFfree@plt>
mov    %r14,%rax
mov    -0x38(%rbp),%r14
test   %eax,%eax
je     1ae3c <TIFFFetchNormalTag+0x200c>
xor    %r10d,%r10d
lea    0x398ca(%rip),%rdx        # 54050 <module.89>
mov    $0x1,%eax
mov    %r10,%rsi
jmpq   18f33 <TIFFFetchNormalTag+0x103>
xor    %eax,%eax
movzwl (%r14),%esi
mov    0x8(%r14),%edx
mov    -0x50(%rbp),%rcx
mov    -0x38(%rbp),%r14
mov    %r14,%rdi
callq  8290 <TIFFSetField@plt>
mov    -0x50(%rbp),%rdi
test   %rdi,%rdi
je     1a7c5 <TIFFFetchNormalTag+0x1995>
mov    %rax,%r14
callq  8bb0 <_TIFFfree@plt>
mov    %r14,%rax
mov    -0x38(%rbp),%r14
test   %eax,%eax
je     1ae48 <TIFFFetchNormalTag+0x2018>
xor    %r10d,%r10d
lea    0x39879(%rip),%rdx        # 54050 <module.89>
mov    $0x1,%eax
mov    %r10,%rsi
jmpq   18f33 <TIFFFetchNormalTag+0x103>
xor    %eax,%eax
movzwl (%r14),%esi
mov    0x8(%r14),%edx
mov    -0x48(%rbp),%rcx
mov    -0x38(%rbp),%r14
mov    %r14,%rdi
callq  8290 <TIFFSetField@plt>
mov    -0x48(%rbp),%rdi
test   %rdi,%rdi
je     1a816 <TIFFFetchNormalTag+0x19e6>
mov    %rax,%r14
callq  8bb0 <_TIFFfree@plt>
mov    %r14,%rax
mov    -0x38(%rbp),%r14
test   %eax,%eax
je     1ae54 <TIFFFetchNormalTag+0x2024>
xor    %r10d,%r10d
lea    0x39828(%rip),%rdx        # 54050 <module.89>
mov    $0x1,%eax
mov    %r10,%rsi
jmpq   18f33 <TIFFFetchNormalTag+0x103>
xor    %eax,%eax
movzwl (%r14),%esi
mov    0x8(%r14),%edx
mov    -0x40(%rbp),%rcx
mov    -0x38(%rbp),%r14
mov    %r14,%rdi
callq  8290 <TIFFSetField@plt>
mov    -0x40(%rbp),%rdi
test   %rdi,%rdi
je     1a867 <TIFFFetchNormalTag+0x1a37>
mov    %rax,%r14
callq  8bb0 <_TIFFfree@plt>
mov    %r14,%rax
mov    -0x38(%rbp),%r14
test   %eax,%eax
je     1ae60 <TIFFFetchNormalTag+0x2030>
xor    %r10d,%r10d
lea    0x397d7(%rip),%rdx        # 54050 <module.89>
mov    $0x1,%eax
mov    %r10,%rsi
jmpq   18f33 <TIFFFetchNormalTag+0x103>
xor    %eax,%eax
mov    -0x38(%rbp),%r8
mov    0x3b8(%r8),%rdi
lea    0x3986b(%rip),%rdx        # 54105 <module.89+0xb5>
mov    0x20(%r15),%rcx
lea    0x397ab(%rip),%rsi        # 54050 <module.89>
mov    %r15,-0x10(%rbp)
mov    %r14,%r15
mov    %r8,%r14
callq  85a0 <TIFFWarningExt@plt>
mov    %r15,%r8
mov    -0x10(%rbp),%r15
xor    %eax,%eax
movzwl (%r8),%esi
mov    -0x130(%rbp),%rdx
mov    %r14,%rdi
callq  8290 <TIFFSetField@plt>
mov    -0x130(%rbp),%rdi
test   %rdi,%rdi
je     1a8eb <TIFFFetchNormalTag+0x1abb>
mov    %rax,%r14
callq  8bb0 <_TIFFfree@plt>
mov    %r14,%rax
mov    -0x38(%rbp),%r14
test   %eax,%eax
je     1ae6c <TIFFFetchNormalTag+0x203c>
xor    %r10d,%r10d
lea    0x39753(%rip),%rdx        # 54050 <module.89>
mov    $0x1,%eax
mov    %r10,%rsi
jmpq   18f33 <TIFFFetchNormalTag+0x103>
xor    %eax,%eax
mov    -0x38(%rbp),%r8
mov    0x3b8(%r8),%rdi
lea    0x3986a(%rip),%rdx        # 54188 <module.89+0x138>
mov    0x20(%r15),%rcx
lea    0x39727(%rip),%rsi        # 54050 <module.89>
mov    %r15,-0x18(%rbp)
mov    %r14,%r15
mov    %r8,%r14
callq  85a0 <TIFFWarningExt@plt>
mov    0x8(%r15),%rax
lea    0x1(%rax),%rcx
lea    0x1(%rax),%edx
mov    %edx,%eax
cmp    %rax,%rcx
je     1ae78 <TIFFFetchNormalTag+0x2048>
xor    %eax,%eax
test   %rax,%rax
je     1ae84 <TIFFFetchNormalTag+0x2054>
mov    -0x130(%rbp),%rsi
mov    0x8(%r15),%edx
mov    %rax,%rdi
mov    %r13,-0x20(%rbp)
mov    %rax,%r13
callq  8790 <_TIFFmemcpy@plt>
mov    0x8(%r15),%eax
movb   $0x0,0x0(%r13,%rax,1)
mov    -0x130(%rbp),%rdi
test   %rdi,%rdi
jne    1aea0 <TIFFFetchNormalTag+0x2070>
mov    %r15,%r8
jmpq   1aea8 <TIFFFetchNormalTag+0x2078>
xor    %eax,%eax
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
leaveq 
retq   
xor    %eax,%eax
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
leaveq 
retq   
xor    %eax,%eax
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
leaveq 
retq   
xor    %eax,%eax
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
leaveq 
retq   
xor    %eax,%eax
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
leaveq 
retq   
xor    %eax,%eax
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
leaveq 
retq   
xor    %eax,%eax
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
leaveq 
retq   
xor    %eax,%eax
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
leaveq 
retq   
xor    %eax,%eax
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
leaveq 
retq   
xor    %eax,%eax
movzwl (%r15),%esi
mov    -0xf0(%rbp),%rdx
mov    %r14,%rdi
callq  8290 <TIFFSetField@plt>
mov    -0xf0(%rbp),%rdi
test   %rdi,%rdi
je     1aa2d <TIFFFetchNormalTag+0x1bfd>
mov    %rax,%r15
callq  8bb0 <_TIFFfree@plt>
mov    %r15,%rax
test   %eax,%eax
je     1aebc <TIFFFetchNormalTag+0x208c>
mov    -0x38(%rbp),%r15
xor    %r10d,%r10d
lea    0x3960d(%rip),%rdx        # 54050 <module.89>
mov    $0x1,%eax
mov    %r10,%rsi
jmpq   18f33 <TIFFFetchNormalTag+0x103>
xor    %eax,%eax
movzwl (%r15),%esi
mov    -0xe8(%rbp),%rdx
mov    %r14,%rdi
callq  8290 <TIFFSetField@plt>
mov    -0xe8(%rbp),%rdi
test   %rdi,%rdi
je     1aa7c <TIFFFetchNormalTag+0x1c4c>
mov    %rax,%r15
callq  8bb0 <_TIFFfree@plt>
mov    %r15,%rax
test   %eax,%eax
je     1aec8 <TIFFFetchNormalTag+0x2098>
mov    -0x38(%rbp),%r15
xor    %r10d,%r10d
lea    0x395be(%rip),%rdx        # 54050 <module.89>
mov    $0x1,%eax
mov    %r10,%rsi
jmpq   18f33 <TIFFFetchNormalTag+0x103>
xor    %eax,%eax
movzwl (%r15),%esi
mov    -0xe0(%rbp),%rdx
mov    %r14,%rdi
callq  8290 <TIFFSetField@plt>
mov    -0xe0(%rbp),%rdi
test   %rdi,%rdi
je     1aacb <TIFFFetchNormalTag+0x1c9b>
mov    %rax,%r15
callq  8bb0 <_TIFFfree@plt>
mov    %r15,%rax
test   %eax,%eax
je     1aed4 <TIFFFetchNormalTag+0x20a4>
mov    -0x38(%rbp),%r15
xor    %r10d,%r10d
lea    0x3956f(%rip),%rdx        # 54050 <module.89>
mov    $0x1,%eax
mov    %r10,%rsi
jmpq   18f33 <TIFFFetchNormalTag+0x103>
mov    0x8(%r14),%rax
test   %rax,%rax
jne    1aee0 <TIFFFetchNormalTag+0x20b0>
mov    %r14,%rcx
mov    -0x38(%rbp),%r14
xor    %eax,%eax
movzwl (%rcx),%esi
movzwl 0x8(%rcx),%edx
mov    -0xd8(%rbp),%rcx
mov    %r14,%rdi
callq  8290 <TIFFSetField@plt>
mov    -0xd8(%rbp),%rdi
test   %rdi,%rdi
je     1ab35 <TIFFFetchNormalTag+0x1d05>
mov    %rax,%r14
callq  8bb0 <_TIFFfree@plt>
mov    %r14,%rax
mov    -0x38(%rbp),%r14
test   %eax,%eax
je     1af00 <TIFFFetchNormalTag+0x20d0>
xor    %r10d,%r10d
lea    0x39509(%rip),%rdx        # 54050 <module.89>
mov    $0x1,%eax
mov    %r10,%rsi
jmpq   18f33 <TIFFFetchNormalTag+0x103>
xor    %eax,%eax
movzwl (%r14),%esi
movzwl 0x8(%r14),%edx
mov    -0xd0(%rbp),%rcx
mov    -0x38(%rbp),%r14
mov    %r14,%rdi
callq  8290 <TIFFSetField@plt>
mov    -0xd0(%rbp),%rdi
test   %rdi,%rdi
je     1ab8d <TIFFFetchNormalTag+0x1d5d>
mov    %rax,%r14
callq  8bb0 <_TIFFfree@plt>
mov    %r14,%rax
mov    -0x38(%rbp),%r14
test   %eax,%eax
je     1af0c <TIFFFetchNormalTag+0x20dc>
xor    %r10d,%r10d
lea    0x394b1(%rip),%rdx        # 54050 <module.89>
mov    $0x1,%eax
mov    %r10,%rsi
jmpq   18f33 <TIFFFetchNormalTag+0x103>
xor    %eax,%eax
movzwl (%r14),%esi
movzwl 0x8(%r14),%edx
mov    -0xc8(%rbp),%rcx
mov    -0x38(%rbp),%r14
mov    %r14,%rdi
callq  8290 <TIFFSetField@plt>
mov    -0xc8(%rbp),%rdi
test   %rdi,%rdi
je     1abe5 <TIFFFetchNormalTag+0x1db5>
mov    %rax,%r14
callq  8bb0 <_TIFFfree@plt>
mov    %r14,%rax
mov    -0x38(%rbp),%r14
test   %eax,%eax
je     1af18 <TIFFFetchNormalTag+0x20e8>
xor    %r10d,%r10d
lea    0x39459(%rip),%rdx        # 54050 <module.89>
mov    $0x1,%eax
mov    %r10,%rsi
jmpq   18f33 <TIFFFetchNormalTag+0x103>
xor    %eax,%eax
movzwl (%r14),%esi
movzwl 0x8(%r14),%edx
mov    -0xc0(%rbp),%rcx
mov    -0x38(%rbp),%r14
mov    %r14,%rdi
callq  8290 <TIFFSetField@plt>
mov    -0xc0(%rbp),%rdi
test   %rdi,%rdi
je     1ac3d <TIFFFetchNormalTag+0x1e0d>
mov    %rax,%r14
callq  8bb0 <_TIFFfree@plt>
mov    %r14,%rax
mov    -0x38(%rbp),%r14
test   %eax,%eax
je     1af24 <TIFFFetchNormalTag+0x20f4>
xor    %r10d,%r10d
lea    0x39401(%rip),%rdx        # 54050 <module.89>
mov    $0x1,%eax
mov    %r10,%rsi
jmpq   18f33 <TIFFFetchNormalTag+0x103>
xor    %eax,%eax
movzwl (%r14),%esi
movzwl 0x8(%r14),%edx
mov    -0xb8(%rbp),%rcx
mov    -0x38(%rbp),%r14
mov    %r14,%rdi
callq  8290 <TIFFSetField@plt>
mov    -0xb8(%rbp),%rdi
test   %rdi,%rdi
je     1ac95 <TIFFFetchNormalTag+0x1e65>
mov    %rax,%r14
callq  8bb0 <_TIFFfree@plt>
mov    %r14,%rax
mov    -0x38(%rbp),%r14
test   %eax,%eax
je     1af30 <TIFFFetchNormalTag+0x2100>
xor    %r10d,%r10d
lea    0x393a9(%rip),%rdx        # 54050 <module.89>
mov    $0x1,%eax
mov    %r10,%rsi
jmpq   18f33 <TIFFFetchNormalTag+0x103>
xor    %eax,%eax
movzwl (%r14),%esi
movzwl 0x8(%r14),%edx
mov    -0xb0(%rbp),%rcx
mov    -0x38(%rbp),%r14
mov    %r14,%rdi
callq  8290 <TIFFSetField@plt>
mov    -0xb0(%rbp),%rdi
test   %rdi,%rdi
je     1aced <TIFFFetchNormalTag+0x1ebd>
mov    %rax,%r14
callq  8bb0 <_TIFFfree@plt>
mov    %r14,%rax
mov    -0x38(%rbp),%r14
test   %eax,%eax
je     1af3c <TIFFFetchNormalTag+0x210c>
xor    %r10d,%r10d
lea    0x39351(%rip),%rdx        # 54050 <module.89>
mov    $0x1,%eax
mov    %r10,%rsi
jmpq   18f33 <TIFFFetchNormalTag+0x103>
xor    %eax,%eax
movzwl (%r14),%esi
movzwl 0x8(%r14),%edx
mov    -0xa8(%rbp),%rcx
mov    -0x38(%rbp),%r14
mov    %r14,%rdi
callq  8290 <TIFFSetField@plt>
mov    -0xa8(%rbp),%rdi
test   %rdi,%rdi
je     1ad45 <TIFFFetchNormalTag+0x1f15>
mov    %rax,%r14
callq  8bb0 <_TIFFfree@plt>
mov    %r14,%rax
mov    -0x38(%rbp),%r14
test   %eax,%eax
je     1af48 <TIFFFetchNormalTag+0x2118>
xor    %r10d,%r10d
lea    0x392f9(%rip),%rdx        # 54050 <module.89>
mov    $0x1,%eax
mov    %r10,%rsi
jmpq   18f33 <TIFFFetchNormalTag+0x103>
xor    %eax,%eax
movzwl (%r14),%esi
movzwl 0x8(%r14),%edx
mov    -0xa0(%rbp),%rcx
mov    -0x38(%rbp),%r14
mov    %r14,%rdi
callq  8290 <TIFFSetField@plt>
mov    -0xa0(%rbp),%rdi
test   %rdi,%rdi
je     1ad9d <TIFFFetchNormalTag+0x1f6d>
mov    %rax,%r14
callq  8bb0 <_TIFFfree@plt>
mov    %r14,%rax
mov    -0x38(%rbp),%r14
test   %eax,%eax
je     1af54 <TIFFFetchNormalTag+0x2124>
xor    %r10d,%r10d
lea    0x392a1(%rip),%rdx        # 54050 <module.89>
mov    $0x1,%eax
mov    %r10,%rsi
jmpq   18f33 <TIFFFetchNormalTag+0x103>
mov    -0x98(%rbp),%rcx
movzbl -0x1(%rcx,%rax,1),%eax
test   %al,%al
jne    1af60 <TIFFFetchNormalTag+0x2130>
mov    %r14,%rcx
mov    -0x38(%rbp),%r14
jmpq   1a4ae <TIFFFetchNormalTag+0x167e>
xor    %eax,%eax
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
leaveq 
retq   
xor    %eax,%eax
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
leaveq 
retq   
xor    %eax,%eax
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
leaveq 
retq   
xor    %eax,%eax
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
leaveq 
retq   
xor    %eax,%eax
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
leaveq 
retq   
xor    %eax,%eax
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
leaveq 
retq   
xor    %eax,%eax
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
leaveq 
retq   
xor    %eax,%eax
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
leaveq 
retq   
xor    %eax,%eax
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
leaveq 
retq   
xor    %eax,%eax
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
leaveq 
retq   
xor    %eax,%eax
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
leaveq 
retq   
xor    %eax,%eax
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
leaveq 
retq   
xor    %eax,%eax
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
leaveq 
retq   
mov    %edx,%edi
callq  8440 <_TIFFmalloc@plt>
jmpq   1a950 <TIFFFetchNormalTag+0x1b20>
mov    -0x130(%rbp),%rdi
test   %rdi,%rdi
jne    1afaa <TIFFFetchNormalTag+0x217a>
xor    %eax,%eax
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
leaveq 
retq   
callq  8bb0 <_TIFFfree@plt>
mov    %r15,%r8
mov    %r13,-0x130(%rbp)
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r15
jmpq   1a8bb <TIFFFetchNormalTag+0x1a8b>
xor    %eax,%eax
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
leaveq 
retq   
xor    %eax,%eax
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
leaveq 
retq   
xor    %eax,%eax
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
leaveq 
retq   
mov    -0xd8(%rbp),%rcx
movzbl -0x1(%rcx,%rax,1),%eax
test   %al,%al
jne    1afbb <TIFFFetchNormalTag+0x218b>
mov    %r14,%rcx
mov    -0x38(%rbp),%r14
jmpq   1ab02 <TIFFFetchNormalTag+0x1cd2>
xor    %eax,%eax
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
leaveq 
retq   
xor    %eax,%eax
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
leaveq 
retq   
xor    %eax,%eax
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
leaveq 
retq   
xor    %eax,%eax
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
leaveq 
retq   
xor    %eax,%eax
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
leaveq 
retq   
xor    %eax,%eax
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
leaveq 
retq   
xor    %eax,%eax
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
leaveq 
retq   
xor    %eax,%eax
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
leaveq 
retq   
xor    %eax,%eax
mov    -0x38(%rbp),%r8
mov    0x3b8(%r8),%rdi
mov    0x20(%r15),%rcx
lea    0x390d8(%rip),%rsi        # 54050 <module.89>
mov    %r15,-0x20(%rbp)
mov    %r14,%r15
mov    %r8,%r14
lea    0x3931d(%rip),%rdx        # 542a6 <module.89+0x256>
callq  85a0 <TIFFWarningExt@plt>
mov    0x8(%r15),%rcx
mov    -0x98(%rbp),%rax
movb   $0x0,-0x1(%rcx,%rax,1)
mov    %r15,%rcx
mov    -0x20(%rbp),%r15
jmpq   1a4ae <TIFFFetchNormalTag+0x167e>
callq  8bb0 <_TIFFfree@plt>
xor    %eax,%eax
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
leaveq 
retq   
xor    %eax,%eax
mov    -0x38(%rbp),%r8
mov    0x3b8(%r8),%rdi
mov    0x20(%r15),%rcx
lea    0x3907d(%rip),%rsi        # 54050 <module.89>
mov    %r15,-0x18(%rbp)
mov    %r14,%r15
mov    %r8,%r14
lea    0x392c2(%rip),%rdx        # 542a6 <module.89+0x256>
callq  85a0 <TIFFWarningExt@plt>
mov    0x8(%r15),%rcx
mov    -0xd8(%rbp),%rax
movb   $0x0,-0x1(%rcx,%rax,1)
mov    %r15,%rcx
mov    -0x18(%rbp),%r15
jmpq   1ab02 <TIFFFetchNormalTag+0x1cd2>
data16 nopw %cs:0x0(%rax,%rax,1)

000000000001b010 <TIFFFetchStripThing>:
push   %rbp
mov    %rsp,%rbp
sub    $0x40,%rsp
mov    %r12,-0x8(%rbp)
mov    %r13,-0x10(%rbp)
mov    %r14,-0x18(%rbp)
mov    %r15,-0x20(%rbp)
mov    %rdx,-0x38(%rbp)
xor    %eax,%eax
mov    %rax,-0x30(%rbp)
lea    -0x40(%rbp),%rax
mov    %edx,%r15d
mov    %rax,%rdx
mov    %rcx,%r14
mov    %rdi,%r12
mov    %rsi,%r13
mov    %r15,%rcx
callq  1bad0 <TIFFReadDirEntryLong8ArrayWithLimit>
test   %eax,%eax
jne    1b079 <TIFFFetchStripThing+0x69>
mov    $0x1,%eax
mov    %rax,-0x28(%rbp)
cmp    0x8(%r13),%r15
ja     1b097 <TIFFFetchStripThing+0x87>
mov    -0x40(%rbp),%rcx
mov    %rcx,(%r14)
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
leaveq 
retq   
movzwl 0x0(%r13),%esi
mov    %rax,%r14
mov    %r12,%rdi
callq  8ae0 <TIFFFieldWithTag@plt>
test   %rax,%rax
jne    1b0bf <TIFFFetchStripThing+0xaf>
lea    0x38597(%rip),%rcx        # 5362c <module.10+0x180>
jmp    1b0c3 <TIFFFetchStripThing+0xb3>
movzwl 0x0(%r13),%esi
mov    %r12,%rdi
callq  8ae0 <TIFFFieldWithTag@plt>
mov    %rax,%r15
lea    0x3927b(%rip),%rdi        # 54329 <module.107+0x14>
callq  8040 <getenv@plt>
test   %rax,%rax
jne    1b0f0 <TIFFFetchStripThing+0xe0>
mov    $0xf4240,%eax
jmp    1b0f8 <TIFFFetchStripThing+0xe8>
mov    0x20(%rax),%rcx
mov    %r14,%rsi
mov    %r12,%rdi
xor    %r13d,%r13d
mov    %r13,%r8
lea    0x3923f(%rip),%rdx        # 54315 <module.107>
callq  17da0 <TIFFReadDirEntryOutputErr>
mov    %r13,%rax
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
leaveq 
retq   
mov    %rax,%rdi
callq  8b90 <atoi@plt>
test   %r15,%r15
jne    1b106 <TIFFFetchStripThing+0xf6>
lea    0x38528(%rip),%rcx        # 5362c <module.10+0x180>
jmp    1b10a <TIFFFetchStripThing+0xfa>
mov    0x20(%r15),%rcx
mov    -0x38(%rbp),%r15
cmp    %eax,%r15d
ja     1b119 <TIFFFetchStripThing+0x109>
pushq  -0x28(%rbp)
popq   -0x30(%rbp)
mov    %r12,%rdi
mov    $0x1,%esi
mov    %r14,-0x38(%rbp)
mov    %rax,%r14
mov    -0x30(%rbp),%r8
lea    0x391e2(%rip),%rdx        # 54315 <module.107>
callq  17da0 <TIFFReadDirEntryOutputErr>
cmp    %r14d,%r15d
ja     1b1a4 <TIFFFetchStripThing+0x194>
mov    %r12,%rdi
mov    %r15d,%esi
mov    $0x8,%edx
lea    0x39200(%rip),%rcx        # 5434f <module.107+0x3a>
callq  8750 <_TIFFCheckMalloc@plt>
test   %rax,%rax
je     1b1c1 <TIFFFetchStripThing+0x1b1>
mov    -0x40(%rbp),%rsi
mov    0x8(%r13),%edx
shl    $0x3,%rdx
mov    %rax,%r12
mov    %r12,%rdi
callq  8790 <_TIFFmemcpy@plt>
mov    0x8(%r13),%eax
lea    (%r12,%rax,8),%rdi
sub    %eax,%r15d
mov    %r15d,%edx
shl    $0x3,%rdx
xor    %esi,%esi
callq  88e0 <_TIFFmemset@plt>
mov    -0x40(%rbp),%rdi
callq  8bb0 <_TIFFfree@plt>
mov    %r12,-0x40(%rbp)
mov    -0x38(%rbp),%r14
mov    $0x1,%eax
jmpq   1b060 <TIFFFetchStripThing+0x50>
mov    -0x40(%rbp),%rdi
callq  8bb0 <_TIFFfree@plt>
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
xor    %eax,%eax
leaveq 
retq   
mov    -0x40(%rbp),%rdi
callq  8bb0 <_TIFFfree@plt>
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
xor    %eax,%eax
leaveq 
retq   
xchg   %ax,%ax

000000000001b1e0 <TIFFFetchSubjectDistance>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
movq   $0x0,-0x28(%rbp)
mov    $0x1,%r8d
xor    %eax,%eax
lea    -0x28(%rbp),%rcx
mov    $0x2,%edx
mov    0x8(%rsi),%r9
cmp    $0x1,%r9
je     1b22c <TIFFFetchSubjectDistance+0x4c>
mov    %r8,%rax
test   %eax,%eax
je     1b23d <TIFFFetchSubjectDistance+0x5d>
mov    %rax,%rsi
lea    0x39143(%rip),%rdx        # 5435f <module.110>
lea    0x39155(%rip),%rcx        # 54378 <module.110+0x19>
callq  17da0 <TIFFReadDirEntryOutputErr>
xor    %eax,%eax
leaveq 
retq   
movzwl 0x2(%rsi),%r9d
cmp    $0x5,%r9w
je     1b28e <TIFFFetchSubjectDistance+0xae>
mov    %rdx,%rax
jmp    1b20e <TIFFFetchSubjectDistance+0x2e>
mov    0x10(%rdi),%eax
and    $0x80,%eax
test   %eax,%eax
je     1b270 <TIFFFetchSubjectDistance+0x90>
mov    %r15,-0x18(%rbp)
mov    %r14,-0x10(%rbp)
mov    %rdi,%r14
mov    %rcx,%rdi
mov    %rsi,%r15
mov    %rdx,%rsi
callq  8b70 <TIFFSwabArrayOfLong@plt>
mov    %r15,%rsi
mov    %r14,%rdi
mov    -0x10(%rbp),%r14
mov    -0x18(%rbp),%r15
mov    -0x28(%rbp),%eax
test   %eax,%eax
jne    1b31d <TIFFFetchSubjectDistance+0x13d>
xorpd  %xmm0,%xmm0
mov    $0x1,%eax
movzwl (%rsi),%esi
callq  8290 <TIFFSetField@plt>
leaveq 
retq   
mov    0x10(%rdi),%r9d
mov    %r9,%r10
and    $0x80000,%r10d
test   %r10d,%r10d
jne    1b32f <TIFFFetchSubjectDistance+0x14f>
mov    0x10(%rsi),%eax
mov    %eax,-0x1c(%rbp)
and    $0x80,%r9d
test   %r9d,%r9d
je     1b2dd <TIFFFetchSubjectDistance+0xfd>
lea    -0x1c(%rbp),%rax
mov    %r15,-0x18(%rbp)
mov    %rsi,-0x10(%rbp)
mov    %rdi,%r15
mov    %rax,%rdi
callq  8480 <TIFFSwabLong@plt>
mov    %r15,%rdi
lea    -0x28(%rbp),%rcx
mov    -0x10(%rbp),%rsi
mov    -0x18(%rbp),%r15
mov    -0x1c(%rbp),%eax
mov    $0x8,%edx
mov    %rdi,%r8
mov    %r15,-0x18(%rbp)
mov    %rsi,-0x8(%rbp)
mov    %rax,%rsi
mov    %rdi,%r15
mov    %r8,%rdi
callq  17cc0 <TIFFReadDirEntryData>
mov    %r15,%rdi
mov    $0x2,%edx
mov    $0x1,%r8d
lea    -0x28(%rbp),%rcx
mov    -0x8(%rbp),%rsi
mov    -0x18(%rbp),%r15
jmpq   1b20e <TIFFFetchSubjectDistance+0x2e>
cmp    $0xffffffff,%eax
jne    1b33c <TIFFFetchSubjectDistance+0x15c>
movsd  0x39206(%rip),%xmm0        # 54530 <module.110+0x1d1>
jmpq   1b27f <TIFFFetchSubjectDistance+0x9f>
mov    0x10(%rsi),%r9
mov    %r9,-0x28(%rbp)
jmpq   1b20e <TIFFFetchSubjectDistance+0x2e>
mov    %eax,%eax
cvtsi2sd %rax,%xmm0
mov    -0x24(%rbp),%eax
mov    %eax,%eax
cvtsi2sd %rax,%xmm1
divsd  %xmm1,%xmm0
jmpq   1b27f <TIFFFetchSubjectDistance+0x9f>
nopw   %cs:0x0(%rax,%rax,1)

000000000001b360 <ChopUpSingleUncompressedStrip>:
push   %rbp
mov    %rsp,%rbp
sub    $0x40,%rsp
mov    0xf0(%rdi),%rax
mov    (%rax),%r8
test   %r8,%r8
je     1b3ad <ChopUpSingleUncompressedStrip+0x4d>
mov    0xe8(%rdi),%rax
mov    (%rax),%rdx
movzwl 0xaa(%rdi),%eax
cmp    $0x1,%ax
je     1b3b7 <ChopUpSingleUncompressedStrip+0x57>
lea    0x38ff3(%rip),%rdi        # 54388 <module.110+0x29>
lea    0x381ca(%rip),%rsi        # 53566 <module.10+0xba>
mov    $0x1625,%edx
lea    0x3900b(%rip),%rcx        # 543b3 <module.110+0x54>
callq  8490 <__assert_fail@plt>
movslq 0xc(%rdi),%rax
test   %eax,%eax
je     1b377 <ChopUpSingleUncompressedStrip+0x17>
leaveq 
retq   
mov    $0x1,%eax
movzwl 0x7a(%rdi),%ecx
cmp    $0x6,%cx
je     1b40b <ChopUpSingleUncompressedStrip+0xab>
mov    %rdi,%rcx
mov    %rax,%rsi
mov    %r14,-0x28(%rbp)
mov    %r15,-0x30(%rbp)
mov    %r8,-0x38(%rbp)
mov    %rdx,-0x10(%rbp)
mov    %rax,%r14
mov    %rdi,%r15
mov    %rcx,%rdi
callq  8770 <TIFFVTileSize64@plt>
cmp    $0x2000,%rax
jbe    1b421 <ChopUpSingleUncompressedStrip+0xc1>
mov    %rax,%r8
mov    0x84(%r15),%eax
cmp    %r14d,%eax
ja     1b430 <ChopUpSingleUncompressedStrip+0xd0>
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
leaveq 
retq   
mov    0x10(%rdi),%ecx
and    $0x4000,%ecx
test   %ecx,%ecx
jne    1b3c6 <ChopUpSingleUncompressedStrip+0x66>
movzwl 0x10a(%rdi),%eax
jmp    1b3c6 <ChopUpSingleUncompressedStrip+0x66>
test   %rax,%rax
jne    1b457 <ChopUpSingleUncompressedStrip+0xf7>
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
leaveq 
retq   
xor    %eax,%eax
mov    0x5c(%r15),%edx
mov    %r14,%rcx
neg    %ecx
cmp    %edx,%ecx
jbe    1b449 <ChopUpSingleUncompressedStrip+0xe9>
lea    -0x1(%r14,%rdx,1),%eax
xor    %edx,%edx
div    %r14d
test   %eax,%eax
jne    1b470 <ChopUpSingleUncompressedStrip+0x110>
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
leaveq 
retq   
mov    %rax,%r8
mov    $0x2000,%eax
xor    %edx,%edx
div    %r8
imul   %eax,%r14d
mov    %eax,%eax
imul   %rax,%r8
jmp    1b3f5 <ChopUpSingleUncompressedStrip+0x95>
mov    %eax,%r9d
mov    $0x8,%edx
lea    0x38f52(%rip),%rcx        # 543d1 <module.110+0x72>
mov    %r15,%rdi
mov    %r9,%rsi
mov    %r12,-0x18(%rbp)
mov    %r13,-0x20(%rbp)
mov    %r14,-0x8(%rbp)
mov    %r8,%r12
mov    %r9,%r13
mov    %rax,%r14
callq  8750 <_TIFFCheckMalloc@plt>
mov    %r13,%rsi
mov    %rax,%r13
lea    0x38f49(%rip),%rcx        # 543f5 <module.110+0x96>
mov    %r15,%rdi
mov    $0x8,%edx
callq  8750 <_TIFFCheckMalloc@plt>
test   %r13,%r13
je     1b4d7 <ChopUpSingleUncompressedStrip+0x177>
test   %rax,%rax
je     1b4d7 <ChopUpSingleUncompressedStrip+0x177>
mov    -0x8(%rbp),%rdx
xor    %r10d,%r10d
mov    -0x10(%rbp),%rsi
mov    -0x38(%rbp),%rcx
mov    %r10,%r8
jmp    1b516 <ChopUpSingleUncompressedStrip+0x1b6>
test   %r13,%r13
je     1b4ea <ChopUpSingleUncompressedStrip+0x18a>
mov    %r13,%rdi
mov    %rax,%r12
callq  8bb0 <_TIFFfree@plt>
mov    %r12,%rax
test   %rax,%rax
jne    1b57e <ChopUpSingleUncompressedStrip+0x21e>
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
leaveq 
retq   
mov    %rsi,%r9
sub    %r12,%rcx
mov    %r9,(%rax,%rdi,8)
add    $0x1,%r8d
add    %r12,%rsi
cmp    %r8d,%r14d
ja     1b598 <ChopUpSingleUncompressedStrip+0x238>
mov    %r14d,0xe4(%r15)
mov    %r14d,0xe0(%r15)
mov    %rax,%r12
xor    %eax,%eax
mov    $0x116,%esi
mov    %r15,%rdi
callq  8290 <TIFFSetField@plt>
mov    0xf0(%r15),%rdi
callq  8bb0 <_TIFFfree@plt>
mov    0xe8(%r15),%rdi
callq  8bb0 <_TIFFfree@plt>
mov    %r13,0xf0(%r15)
mov    %r12,0xe8(%r15)
movl   $0x1,0xf8(%r15)
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
leaveq 
retq   
mov    %rax,%rdi
callq  8bb0 <_TIFFfree@plt>
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
leaveq 
retq   
cmp    %r12,%rcx
jae    1b5a0 <ChopUpSingleUncompressedStrip+0x240>
mov    %rcx,%r12
mov    %r8d,%edi
mov    %r12,0x0(%r13,%rdi,8)
test   %r12,%r12
jne    1b505 <ChopUpSingleUncompressedStrip+0x1a5>
mov    %r10,%r9
jmpq   1b508 <ChopUpSingleUncompressedStrip+0x1a8>
nopl   0x0(%rax)

000000000001b5c0 <TIFFReadUInt64>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
movzbl (%rdi),%eax
mov    %al,-0x8(%rbp)
movzbl 0x1(%rdi),%eax
mov    %al,-0x7(%rbp)
movzbl 0x2(%rdi),%eax
mov    %al,-0x6(%rbp)
movzbl 0x3(%rdi),%eax
mov    %al,-0x5(%rbp)
movzbl 0x4(%rdi),%eax
mov    %al,-0x4(%rbp)
movzbl 0x5(%rdi),%eax
mov    %al,-0x3(%rbp)
movzbl 0x6(%rdi),%eax
mov    %al,-0x2(%rbp)
movzbl 0x7(%rdi),%eax
mov    %al,-0x1(%rbp)
mov    -0x8(%rbp),%rax
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)

000000000001b610 <_TIFFFillStrilesInternal>:
push   %rbp
mov    %rsp,%rbp
mov    $0x1,%eax
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

000000000001b620 <TIFFReadDirEntryDataAndRealloc>:
push   %rbp
mov    %rsp,%rbp
sub    $0x40,%rsp
mov    0x10(%rdi),%eax
and    $0x800,%eax
test   %eax,%eax
jne    1b656 <TIFFReadDirEntryDataAndRealloc+0x36>
mov    %rdi,%rax
mov    %rdx,-0x40(%rbp)
mov    %rcx,-0x38(%rbp)
mov    %rdi,-0x30(%rbp)
mov    %rax,%rdi
callq  82f0 <_TIFFSeekOK@plt>
test   %eax,%eax
jne    1b675 <TIFFReadDirEntryDataAndRealloc+0x55>
mov    $0x3,%eax
leaveq 
retq   
lea    0x38db9(%rip),%rdi        # 54416 <module.110+0xb7>
lea    0x37f02(%rip),%rsi        # 53566 <module.10+0xba>
mov    $0x310,%edx
lea    0x38db5(%rip),%rcx        # 54425 <module.110+0xc6>
callq  8490 <__assert_fail@plt>
xor    %ecx,%ecx
mov    $0x100000,%eax
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rcx,%rbx
mov    -0x30(%rbp),%r12
mov    -0x38(%rbp),%r13
mov    -0x40(%rbp),%r14
jmp    1b6f3 <TIFFReadDirEntryDataAndRealloc+0xd3>
mov    %r14,%r15
sub    %rbx,%r15
cmp    %rax,%r15
jge    1b710 <TIFFReadDirEntryDataAndRealloc+0xf0>
mov    %rax,-0x40(%rbp)
lea    (%r15,%rbx,1),%rsi
mov    %rsi,-0x38(%rbp)
mov    0x0(%r13),%rdi
callq  8100 <_TIFFrealloc@plt>
test   %rax,%rax
je     1b727 <TIFFReadDirEntryDataAndRealloc+0x107>
mov    %rax,0x0(%r13)
lea    (%rax,%rbx,1),%rsi
mov    0x3c0(%r12),%rax
mov    0x3b8(%r12),%rdi
mov    %r15,%rdx
callq  *%rax
cmp    %rax,%r15
jne    1b76d <TIFFReadDirEntryDataAndRealloc+0x14d>
add    %rax,%rbx
mov    -0x40(%rbp),%rax
cmp    %r14,%rbx
jl     1b6a1 <TIFFReadDirEntryDataAndRealloc+0x81>
xor    %eax,%eax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
cmp    $0x3e700000,%rax
jg     1b6ac <TIFFReadDirEntryDataAndRealloc+0x8c>
lea    (%rax,%rax,4),%rcx
add    %rcx,%rcx
mov    %rax,%r15
mov    %rcx,%rax
jmp    1b6ac <TIFFReadDirEntryDataAndRealloc+0x8c>
xor    %eax,%eax
mov    0x3b8(%r12),%rdi
mov    (%r12),%rsi
lea    0x38d08(%rip),%rdx        # 54444 <module.110+0xe5>
lea    0x38d43(%rip),%rcx        # 54486 <module.110+0x127>
mov    $0x1,%r8d
mov    -0x38(%rbp),%r9
callq  8a00 <TIFFErrorExt@plt>
mov    $0x7,%eax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    $0x3,%eax
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

000000000001b790 <TIFFReadDirEntryArrayWithLimit>:
push   %rbp
mov    %rsp,%rbp
sub    $0x50,%rsp
mov    %r13,-0x8(%rbp)
mov    %r14,-0x10(%rbp)
mov    %r15,-0x18(%rbp)
mov    %rcx,-0x30(%rbp)
mov    %rdx,-0x28(%rbp)
mov    %rdi,-0x20(%rbp)
mov    %r9,%r13
mov    %rsi,%r14
mov    %r8,%r15
movzwl 0x2(%r14),%edi
callq  8140 <TIFFDataWidth@plt>
mov    0x8(%r14),%rcx
cmp    %r13,%rcx
ja     1b7cf <TIFFReadDirEntryArrayWithLimit+0x3f>
mov    %rcx,%r13
xor    %r8d,%r8d
test   %r13,%r13
je     1b808 <TIFFReadDirEntryArrayWithLimit+0x78>
test   %eax,%eax
je     1b808 <TIFFReadDirEntryArrayWithLimit+0x78>
mov    %rax,%r9
mov    $0x6,%ecx
mov    $0x7fffffff,%eax
cltd   
mov    %rax,%rdi
idiv   %r9d
movslq %eax,%rax
cmp    %rax,%r13
jbe    1b820 <TIFFReadDirEntryArrayWithLimit+0x90>
mov    %rcx,%rax
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
leaveq 
retq   
movq   $0x0,(%r15)
mov    %r8,%rax
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
leaveq 
retq   
mov    %rdi,%rax
xor    %edx,%edx
mov    -0x30(%rbp),%rsi
div    %esi
mov    %eax,%eax
cmp    %rax,%r13
jbe    1b843 <TIFFReadDirEntryArrayWithLimit+0xb3>
mov    %rcx,%rax
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
leaveq 
retq   
mov    -0x28(%rbp),%rsi
mov    %r13d,(%rsi)
mov    %r9,%rax
imul   %r13d,%eax
test   %eax,%eax
jne    1b874 <TIFFReadDirEntryArrayWithLimit+0xe4>
lea    0x38c40(%rip),%rdi        # 5449c <module.110+0x13d>
lea    0x37d03(%rip),%rsi        # 53566 <module.10+0xba>
mov    $0x35f,%edx
lea    0x38c42(%rip),%rcx        # 544b1 <module.110+0x152>
callq  8490 <__assert_fail@plt>
mov    -0x20(%rbp),%r13
mov    0x10(%r13),%ecx
and    $0x800,%ecx
test   %ecx,%ecx
jne    1b8bc <TIFFReadDirEntryArrayWithLimit+0x12c>
mov    0x10(%r13),%ecx
mov    %rcx,%rdx
and    $0x800,%edx
test   %edx,%edx
jne    1b8d8 <TIFFReadDirEntryArrayWithLimit+0x148>
and    $0x80000,%ecx
test   %ecx,%ecx
jne    1b97f <TIFFReadDirEntryArrayWithLimit+0x1ef>
mov    %r8,%rcx
test   %rcx,%rcx
jne    1b8d8 <TIFFReadDirEntryArrayWithLimit+0x148>
cmp    $0x4,%eax
jbe    1b8d8 <TIFFReadDirEntryArrayWithLimit+0x148>
movq   $0x0,-0x48(%rbp)
jmp    1b90a <TIFFReadDirEntryArrayWithLimit+0x17a>
cmp    0x3a0(%r13),%eax
jbe    1b886 <TIFFReadDirEntryArrayWithLimit+0xf6>
mov    $0x3,%eax
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
leaveq 
retq   
mov    (%rsi),%esi
movslq %r9d,%rdx
lea    0x38bec(%rip),%rcx        # 544d0 <module.110+0x171>
mov    %r13,%rdi
mov    %r15,-0x30(%rbp)
mov    %rax,%r15
callq  8750 <_TIFFCheckMalloc@plt>
mov    %rax,-0x48(%rbp)
test   %rax,%rax
je     1b992 <TIFFReadDirEntryArrayWithLimit+0x202>
mov    %r15,%rax
xor    %r8d,%r8d
mov    -0x30(%rbp),%r15
mov    0x10(%r13),%ecx
mov    %rcx,%rdx
and    $0x80000,%edx
test   %edx,%edx
jne    1b9a5 <TIFFReadDirEntryArrayWithLimit+0x215>
cmp    $0x4,%eax
jbe    1ba07 <TIFFReadDirEntryArrayWithLimit+0x277>
mov    0x10(%r14),%edx
mov    %edx,-0x3c(%rbp)
and    $0x80,%ecx
test   %ecx,%ecx
je     1b94b <TIFFReadDirEntryArrayWithLimit+0x1bb>
mov    %rax,%r14
lea    -0x3c(%rbp),%rdi
callq  8480 <TIFFSwabLong@plt>
mov    %r14,%rax
xor    %r8d,%r8d
mov    0x10(%r13),%ecx
and    $0x800,%ecx
test   %ecx,%ecx
jne    1ba31 <TIFFReadDirEntryArrayWithLimit+0x2a1>
mov    -0x3c(%rbp),%esi
mov    %eax,%edx
mov    %r13,%rdi
mov    %r8,%r13
lea    -0x48(%rbp),%rcx
callq  1b620 <TIFFReadDirEntryDataAndRealloc>
mov    %r13,%rcx
mov    %rax,%r13
mov    %rcx,%rax
jmpq   1ba4e <TIFFReadDirEntryArrayWithLimit+0x2be>
cmp    $0x8,%eax
ja     1b8b2 <TIFFReadDirEntryArrayWithLimit+0x122>
mov    $0x1,%ecx
jmpq   1b8a8 <TIFFReadDirEntryArrayWithLimit+0x118>
mov    $0x7,%eax
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
leaveq 
retq   
cmp    $0x8,%eax
jbe    1ba6d <TIFFReadDirEntryArrayWithLimit+0x2dd>
mov    0x10(%r14),%rdx
mov    %rdx,-0x38(%rbp)
and    $0x80,%ecx
test   %ecx,%ecx
je     1b9d2 <TIFFReadDirEntryArrayWithLimit+0x242>
mov    %rax,%r14
lea    -0x38(%rbp),%rdi
callq  8730 <TIFFSwabLong8@plt>
mov    %r14,%rax
xor    %r8d,%r8d
mov    0x10(%r13),%ecx
and    $0x800,%ecx
test   %ecx,%ecx
jne    1ba84 <TIFFReadDirEntryArrayWithLimit+0x2f4>
mov    -0x38(%rbp),%rsi
mov    %eax,%edx
mov    %r13,%rdi
mov    %r8,%r13
lea    -0x48(%rbp),%rcx
callq  1b620 <TIFFReadDirEntryDataAndRealloc>
mov    %r13,%rcx
mov    %rax,%r13
mov    %rcx,%rax
jmpq   1baa2 <TIFFReadDirEntryArrayWithLimit+0x312>
mov    -0x48(%rbp),%rdi
lea    0x10(%r14),%rsi
mov    %eax,%edx
mov    %r8,%r13
callq  8790 <_TIFFmemcpy@plt>
mov    %r13,%rax
mov    -0x48(%rbp),%rcx
mov    %rcx,(%r15)
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
leaveq 
retq   
mov    -0x3c(%rbp),%esi
mov    %eax,%edx
mov    %r13,%rdi
mov    %r8,%r13
mov    -0x48(%rbp),%rcx
callq  17cc0 <TIFFReadDirEntryData>
mov    %r13,%rcx
mov    %rax,%r13
mov    %rcx,%rax
test   %r13d,%r13d
je     1ba1c <TIFFReadDirEntryArrayWithLimit+0x28c>
mov    -0x48(%rbp),%rdi
callq  8bb0 <_TIFFfree@plt>
mov    %r13,%rax
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
leaveq 
retq   
mov    -0x48(%rbp),%rdi
lea    0x10(%r14),%rsi
mov    %eax,%edx
mov    %r8,%r13
callq  8790 <_TIFFmemcpy@plt>
mov    %r13,%rax
jmp    1ba1c <TIFFReadDirEntryArrayWithLimit+0x28c>
mov    -0x38(%rbp),%rsi
mov    %eax,%edx
mov    %r13,%rdi
mov    %r8,%r13
mov    -0x48(%rbp),%rcx
callq  17cc0 <TIFFReadDirEntryData>
mov    %r13,%rcx
mov    %rax,%r13
mov    %rcx,%rax
test   %r13d,%r13d
je     1ba1c <TIFFReadDirEntryArrayWithLimit+0x28c>
mov    -0x48(%rbp),%rdi
callq  8bb0 <_TIFFfree@plt>
mov    %r13,%rax
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)

000000000001bad0 <TIFFReadDirEntryLong8ArrayWithLimit>:
push   %rbp
mov    %rsp,%rbp
sub    $0x80,%rsp
mov    $0x2,%eax
movzwl 0x2(%rsi),%r8d
add    $0xffffffff,%r8d
cmp    $0x10,%r8d
jbe    1baf1 <TIFFReadDirEntryLong8ArrayWithLimit+0x21>
leaveq 
retq   
lea    0x3794c(%rip),%r9        # 53444 <reason.25+0x131e>
movslq (%r9,%r8,4),%r8
add    %r9,%r8
jmpq   *%r8
leaveq 
retq   
lea    -0x74(%rbp),%rax
mov    $0x8,%r9d
lea    -0x70(%rbp),%r8
mov    %rdi,%r10
mov    %rsi,%r11
mov    %r15,-0x58(%rbp)
mov    %rsi,-0x68(%rbp)
mov    %rdi,-0x60(%rbp)
mov    %r11,%rsi
mov    %r10,%rdi
mov    %rdx,%r15
mov    %rax,%rdx
mov    %r9,%r11
mov    %rcx,%r9
mov    %r11,%rcx
callq  1b790 <TIFFReadDirEntryArrayWithLimit>
test   %eax,%eax
jne    1bbc6 <TIFFReadDirEntryLong8ArrayWithLimit+0xf6>
mov    -0x70(%rbp),%rdi
test   %rdi,%rdi
je     1bbc6 <TIFFReadDirEntryLong8ArrayWithLimit+0xf6>
xor    %eax,%eax
mov    -0x68(%rbp),%rdx
movzwl 0x2(%rdx),%ecx
cmp    $0x10,%cx
je     1bbd3 <TIFFReadDirEntryLong8ArrayWithLimit+0x103>
cmp    $0x11,%cx
je     1bbed <TIFFReadDirEntryLong8ArrayWithLimit+0x11d>
mov    -0x74(%rbp),%eax
shl    $0x3,%eax
mov    %eax,%edi
mov    %r15,-0x20(%rbp)
mov    %rdx,%r15
callq  8440 <_TIFFmalloc@plt>
test   %rax,%rax
je     1bc08 <TIFFReadDirEntryLong8ArrayWithLimit+0x138>
movzwl 0x2(%r15),%ecx
add    $0xffffffff,%ecx
cmp    $0x8,%ecx
jbe    1bc1c <TIFFReadDirEntryLong8ArrayWithLimit+0x14c>
xor    %r15d,%r15d
mov    -0x70(%rbp),%rdi
mov    %r14,-0x68(%rbp)
mov    %rax,%r14
callq  8bb0 <_TIFFfree@plt>
test   %r15d,%r15d
jne    1bc34 <TIFFReadDirEntryLong8ArrayWithLimit+0x164>
mov    -0x20(%rbp),%rax
mov    %r14,(%rax)
mov    -0x68(%rbp),%r14
xor    %eax,%eax
mov    -0x58(%rbp),%r15
leaveq 
retq   
movq   $0x0,(%r15)
mov    -0x58(%rbp),%r15
leaveq 
retq   
mov    %rdi,(%r15)
mov    -0x60(%rbp),%rcx
mov    0x10(%rcx),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
jne    1bc49 <TIFFReadDirEntryLong8ArrayWithLimit+0x179>
mov    -0x58(%rbp),%r15
leaveq 
retq   
mov    %r15,-0x8(%rbp)
mov    %r14,-0x68(%rbp)
mov    %r13,-0x20(%rbp)
mov    %rax,%r13
mov    %rdi,%r14
mov    -0x60(%rbp),%r15
jmpq   1bc8a <TIFFReadDirEntryLong8ArrayWithLimit+0x1ba>
mov    -0x70(%rbp),%rdi
callq  8bb0 <_TIFFfree@plt>
mov    $0x7,%eax
mov    -0x58(%rbp),%r15
leaveq 
retq   
lea    0x37865(%rip),%rdx        # 53488 <reason.25+0x1362>
movslq (%rdx,%rcx,4),%rcx
add    %rdx,%rcx
jmpq   *%rcx
xor    %r15d,%r15d
jmpq   1bb9a <TIFFReadDirEntryLong8ArrayWithLimit+0xca>
mov    %r14,%rdi
callq  8bb0 <_TIFFfree@plt>
mov    %r15,%rax
mov    -0x68(%rbp),%r14
mov    -0x58(%rbp),%r15
leaveq 
retq   
mov    %rax,%r15
mov    -0x74(%rbp),%esi
callq  8930 <TIFFSwabArrayOfLong8@plt>
mov    %r15,%rax
mov    -0x58(%rbp),%r15
leaveq 
retq   
mov    0x10(%r15),%eax
and    $0x80,%eax
test   %eax,%eax
je     1bc72 <TIFFReadDirEntryLong8ArrayWithLimit+0x1a2>
mov    %r14,%rdi
callq  8730 <TIFFSwabLong8@plt>
mov    (%r14),%rdi
callq  17c80 <TIFFReadDirEntryCheckRangeLong8Slong8>
test   %eax,%eax
jne    1bd5e <TIFFReadDirEntryLong8ArrayWithLimit+0x28e>
add    $0x8,%r14
add    $0x1,%r13d
mov    -0x74(%rbp),%eax
cmp    %r13d,%eax
ja     1bc5d <TIFFReadDirEntryLong8ArrayWithLimit+0x18d>
mov    -0x70(%rbp),%rax
mov    -0x8(%rbp),%rcx
mov    %rax,(%rcx)
mov    -0x20(%rbp),%r13
mov    -0x68(%rbp),%r14
xor    %eax,%eax
mov    -0x58(%rbp),%r15
leaveq 
retq   
mov    -0x70(%rbp),%rcx
xor    %edx,%edx
mov    %rax,%rsi
jmpq   1bd8c <TIFFReadDirEntryLong8ArrayWithLimit+0x2bc>
mov    -0x70(%rbp),%r15
mov    %r14,-0x68(%rbp)
mov    %r13,-0x60(%rbp)
mov    %rax,-0x10(%rbp)
mov    %r12,-0x30(%rbp)
xor    %r12d,%r12d
jmpq   1bdc1 <TIFFReadDirEntryLong8ArrayWithLimit+0x2f1>
mov    -0x70(%rbp),%r15
mov    %r14,-0x68(%rbp)
mov    %r13,-0x48(%rbp)
mov    %rax,-0x10(%rbp)
mov    %r12,-0x38(%rbp)
xor    %r12d,%r12d
mov    -0x60(%rbp),%r13
jmpq   1be10 <TIFFReadDirEntryLong8ArrayWithLimit+0x340>
mov    -0x70(%rbp),%r15
mov    %r14,-0x68(%rbp)
mov    %r13,-0x48(%rbp)
mov    %rax,-0x18(%rbp)
mov    %r12,-0x38(%rbp)
mov    %rbx,-0x28(%rbp)
xor    %ebx,%ebx
mov    -0x60(%rbp),%r12
jmpq   1be72 <TIFFReadDirEntryLong8ArrayWithLimit+0x3a2>
mov    -0x70(%rbp),%r15
mov    %r14,-0x68(%rbp)
mov    %r13,-0x50(%rbp)
mov    %rax,-0x18(%rbp)
mov    %r12,-0x40(%rbp)
xor    %r13d,%r13d
mov    -0x60(%rbp),%r12
jmpq   1bec4 <TIFFReadDirEntryLong8ArrayWithLimit+0x3f4>
mov    -0x70(%rbp),%r15
mov    %r14,-0x68(%rbp)
mov    %r13,-0x50(%rbp)
mov    %rax,-0x28(%rbp)
mov    %r12,-0x40(%rbp)
mov    %rbx,-0x30(%rbp)
xor    %r12d,%r12d
mov    -0x60(%rbp),%rbx
jmpq   1bf20 <TIFFReadDirEntryLong8ArrayWithLimit+0x450>
mov    %rax,%r15
mov    -0x70(%rbp),%rdi
callq  8bb0 <_TIFFfree@plt>
mov    %r15,%rax
mov    -0x20(%rbp),%r13
mov    -0x68(%rbp),%r14
mov    -0x58(%rbp),%r15
leaveq 
retq   
movzbl (%rcx),%edi
mov    %rdi,(%rsi)
add    $0x1,%rcx
add    $0x8,%rsi
add    $0x1,%edx
mov    -0x74(%rbp),%edi
cmp    %edx,%edi
ja     1bd7b <TIFFReadDirEntryLong8ArrayWithLimit+0x2ab>
xor    %r15d,%r15d
jmpq   1bb9a <TIFFReadDirEntryLong8ArrayWithLimit+0xca>
mov    %rax,%r14
movsbq (%r15),%r13
mov    %r13,%rdi
callq  17c20 <TIFFReadDirEntryCheckRangeLong8Sbyte>
test   %eax,%eax
jne    1bf44 <TIFFReadDirEntryLong8ArrayWithLimit+0x474>
mov    %r13,(%r14)
add    $0x1,%r15
lea    0x8(%r14),%rax
add    $0x1,%r12d
mov    -0x74(%rbp),%ecx
cmp    %r12d,%ecx
ja     1bd9b <TIFFReadDirEntryLong8ArrayWithLimit+0x2cb>
mov    -0x30(%rbp),%r12
mov    -0x10(%rbp),%rax
mov    -0x60(%rbp),%r13
mov    -0x68(%rbp),%r14
xor    %r15d,%r15d
jmpq   1bb9a <TIFFReadDirEntryLong8ArrayWithLimit+0xca>
mov    0x10(%r13),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
je     1bdfd <TIFFReadDirEntryLong8ArrayWithLimit+0x32d>
mov    %rax,%r14
mov    %r15,%rdi
callq  87c0 <TIFFSwabShort@plt>
mov    %r14,%rax
movzwl (%r15),%ecx
mov    %rcx,(%rax)
add    $0x2,%r15
add    $0x8,%rax
add    $0x1,%r12d
mov    -0x74(%rbp),%ecx
cmp    %r12d,%ecx
ja     1bde1 <TIFFReadDirEntryLong8ArrayWithLimit+0x311>
mov    -0x38(%rbp),%r12
mov    -0x10(%rbp),%rax
mov    -0x48(%rbp),%r13
mov    -0x68(%rbp),%r14
xor    %r15d,%r15d
jmpq   1bb9a <TIFFReadDirEntryLong8ArrayWithLimit+0xca>
mov    0x10(%r12),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
je     1be4d <TIFFReadDirEntryLong8ArrayWithLimit+0x37d>
mov    %rax,%r13
mov    %r15,%rdi
callq  87c0 <TIFFSwabShort@plt>
mov    %r13,%rax
mov    %rax,%r14
movswq (%r15),%r13
mov    %r13,%rdi
callq  17c40 <TIFFReadDirEntryCheckRangeLong8Sshort>
test   %eax,%eax
jne    1bf5c <TIFFReadDirEntryLong8ArrayWithLimit+0x48c>
mov    %r13,(%r14)
add    $0x2,%r15
lea    0x8(%r14),%rax
add    $0x1,%ebx
mov    -0x74(%rbp),%ecx
cmp    %ebx,%ecx
ja     1be30 <TIFFReadDirEntryLong8ArrayWithLimit+0x360>
mov    -0x28(%rbp),%rbx
mov    -0x38(%rbp),%r12
mov    -0x18(%rbp),%rax
mov    -0x48(%rbp),%r13
mov    -0x68(%rbp),%r14
xor    %r15d,%r15d
jmpq   1bb9a <TIFFReadDirEntryLong8ArrayWithLimit+0xca>
mov    0x10(%r12),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
je     1beb2 <TIFFReadDirEntryLong8ArrayWithLimit+0x3e2>
mov    %rax,%r14
mov    %r15,%rdi
callq  8480 <TIFFSwabLong@plt>
mov    %r14,%rax
mov    (%r15),%ecx
mov    %rcx,(%rax)
add    $0x4,%r15
add    $0x8,%rax
add    $0x1,%r13d
mov    -0x74(%rbp),%ecx
cmp    %r13d,%ecx
ja     1be95 <TIFFReadDirEntryLong8ArrayWithLimit+0x3c5>
mov    -0x40(%rbp),%r12
mov    -0x18(%rbp),%rax
mov    -0x50(%rbp),%r13
mov    -0x68(%rbp),%r14
xor    %r15d,%r15d
jmpq   1bb9a <TIFFReadDirEntryLong8ArrayWithLimit+0xca>
mov    0x10(%rbx),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
je     1beff <TIFFReadDirEntryLong8ArrayWithLimit+0x42f>
mov    %rax,%r13
mov    %r15,%rdi
callq  8480 <TIFFSwabLong@plt>
mov    %r13,%rax
mov    %rax,%r14
movslq (%r15),%r13
mov    %r13,%rdi
callq  17c60 <TIFFReadDirEntryCheckRangeLong8Slong>
test   %eax,%eax
jne    1bf78 <TIFFReadDirEntryLong8ArrayWithLimit+0x4a8>
mov    %r13,(%r14)
add    $0x4,%r15
lea    0x8(%r14),%rax
add    $0x1,%r12d
mov    -0x74(%rbp),%ecx
cmp    %r12d,%ecx
ja     1bee4 <TIFFReadDirEntryLong8ArrayWithLimit+0x414>
mov    -0x30(%rbp),%rbx
mov    -0x40(%rbp),%r12
mov    -0x28(%rbp),%rax
mov    -0x50(%rbp),%r13
mov    -0x68(%rbp),%r14
xor    %r15d,%r15d
jmpq   1bb9a <TIFFReadDirEntryLong8ArrayWithLimit+0xca>
mov    %rax,%r15
mov    -0x30(%rbp),%r12
mov    -0x10(%rbp),%rax
mov    -0x60(%rbp),%r13
mov    -0x68(%rbp),%r14
jmpq   1bb9a <TIFFReadDirEntryLong8ArrayWithLimit+0xca>
mov    %rax,%r15
mov    -0x28(%rbp),%rbx
mov    -0x38(%rbp),%r12
mov    -0x18(%rbp),%rax
mov    -0x48(%rbp),%r13
mov    -0x68(%rbp),%r14
jmpq   1bb9a <TIFFReadDirEntryLong8ArrayWithLimit+0xca>
mov    %rax,%r15
mov    -0x30(%rbp),%rbx
mov    -0x40(%rbp),%r12
mov    -0x28(%rbp),%rax
mov    -0x50(%rbp),%r13
mov    -0x68(%rbp),%r14
jmpq   1bb9a <TIFFReadDirEntryLong8ArrayWithLimit+0xca>
nopw   %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

000000000001bfa0 <TIFFWriteDirectory>:
push   %rbp
mov    %rsp,%rbp
mov    $0x1,%esi
xor    %ecx,%ecx
mov    %rsi,%rdx
callq  1d0c0 <TIFFWriteDirectorySec>
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)

000000000001bfc0 <TIFFWriteCustomDirectory>:
push   %rbp
mov    %rsp,%rbp
mov    %rsi,%rcx
xor    %esi,%esi
mov    %rsi,%rdx
callq  1d0c0 <TIFFWriteDirectorySec>
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

000000000001bfe0 <TIFFCheckpointDirectory>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x10(%rbp)
mov    %r14,-0x8(%rbp)
mov    0xe8(%rdi),%rax
test   %rax,%rax
je     1c001 <TIFFCheckpointDirectory+0x21>
mov    %rdi,%r14
jmp    1c009 <TIFFCheckpointDirectory+0x29>
mov    %rdi,%r14
callq  86b0 <TIFFSetupStrips@plt>
mov    $0x1,%esi
xor    %edx,%edx
mov    %rdx,%rcx
mov    %r14,%rdi
callq  1d0c0 <TIFFWriteDirectorySec>
mov    %rax,%r15
mov    0x3d0(%r14),%rcx
mov    0x3b8(%r14),%rdi
mov    $0x2,%edx
xor    %esi,%esi
callq  *%rcx
mov    %rax,%rsi
mov    %r14,%rdi
callq  8a90 <TIFFSetWriteOffset@plt>
mov    %r15,%rax
mov    -0x8(%rbp),%r14
mov    -0x10(%rbp),%r15
leaveq 
retq   
nopl   (%rax)

000000000001c050 <TIFFRewriteDirectory>:
push   %rbp
mov    %rsp,%rbp
sub    $0x60,%rsp
mov    0x18(%rdi),%rcx
test   %rcx,%rcx
je     1c0b0 <TIFFRewriteDirectory+0x60>
xor    %edx,%edx
mov    0x10(%rdi),%eax
and    $0x80000,%eax
test   %eax,%eax
jne    1c0b7 <TIFFRewriteDirectory+0x67>
mov    $0x4,%esi
mov    0x26c(%rdi),%eax
cmp    %rax,%rcx
je     1c0f8 <TIFFRewriteDirectory+0xa8>
lea    -0x52(%rbp),%rcx
mov    $0x2,%esi
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rdi,%rbx
mov    %rdx,%r12
mov    %rcx,%r13
mov    %rsi,%r14
mov    %rax,%r15
jmpq   1c195 <TIFFRewriteDirectory+0x145>
callq  8af0 <TIFFWriteDirectory@plt>
leaveq 
retq   
mov    $0x8,%esi
mov    0x270(%rdi),%rax
cmp    %rax,%rcx
je     1c25f <TIFFRewriteDirectory+0x20f>
lea    -0x48(%rbp),%rcx
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rdi,%rbx
mov    %rdx,%r12
mov    %rsi,%r13
mov    %rcx,%r14
mov    %rax,%r15
jmpq   1c334 <TIFFRewriteDirectory+0x2e4>
movl   $0x0,0x26c(%rdi)
movq   $0x0,0x18(%rdi)
mov    0x3d0(%rdi),%rax
mov    0x3b8(%rdi),%rcx
mov    %r15,-0x28(%rbp)
mov    %rbx,%r15
mov    %rdi,%rbx
mov    %rcx,%rdi
callq  *%rax
mov    0x3c8(%rbx),%rax
mov    0x3b8(%rbx),%rdi
lea    0x26c(%rbx),%rsi
mov    $0x4,%edx
callq  *%rax
cmp    $0x4,%rax
je     1c2b5 <TIFFRewriteDirectory+0x265>
xor    %eax,%eax
mov    0x3b8(%rbx),%rdi
mov    (%rbx),%rsi
lea    0x38435(%rip),%rdx        # 54595 <module.10+0x15>
callq  8a00 <TIFFErrorExt@plt>
mov    %r15,%rbx
xor    %eax,%eax
mov    -0x28(%rbp),%r15
leaveq 
retq   
mov    0x10(%rbx),%eax
and    $0x80,%eax
test   %eax,%eax
je     1c184 <TIFFRewriteDirectory+0x134>
mov    %r15,%rdi
callq  8480 <TIFFSwabLong@plt>
mov    -0x50(%rbp),%r15d
mov    0x18(%rbx),%rax
cmp    %r15,%rax
je     1c3c0 <TIFFRewriteDirectory+0x370>
mov    %r15d,%esi
mov    %rbx,%rdi
callq  82f0 <_TIFFSeekOK@plt>
test   %eax,%eax
je     1c443 <TIFFRewriteDirectory+0x3f3>
mov    0x3c0(%rbx),%rax
mov    0x3b8(%rbx),%rdi
mov    %r13,%rsi
mov    %r14,%rdx
callq  *%rax
cmp    $0x2,%rax
jne    1c443 <TIFFRewriteDirectory+0x3f3>
mov    0x10(%rbx),%eax
and    $0x80,%eax
test   %eax,%eax
je     1c1dc <TIFFRewriteDirectory+0x18c>
mov    %r13,%rdi
callq  87c0 <TIFFSwabShort@plt>
movzwl -0x52(%rbp),%eax
lea    (%rax,%rax,2),%eax
lea    0x2(%r15,%rax,4),%eax
mov    %eax,%esi
mov    0x3d0(%rbx),%rax
mov    0x3b8(%rbx),%rdi
mov    %r12,%rdx
callq  *%rax
mov    0x3c0(%rbx),%rax
mov    0x3b8(%rbx),%rdi
lea    -0x50(%rbp),%rcx
mov    %rcx,%rsi
mov    $0x4,%edx
mov    %r15,-0x30(%rbp)
mov    %rcx,%r15
callq  *%rax
cmp    $0x4,%rax
je     1c170 <TIFFRewriteDirectory+0x120>
xor    %eax,%eax
mov    0x3b8(%rbx),%rdi
lea    0x38395(%rip),%rdx        # 545cf <module.10+0x4f>
lea    0x3833f(%rip),%rsi        # 54580 <module.10>
callq  8a00 <TIFFErrorExt@plt>
mov    %r12,%rax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
movq   $0x0,0x270(%rdi)
movq   $0x0,0x18(%rdi)
mov    0x3d0(%rdi),%rax
mov    0x3b8(%rdi),%rcx
mov    %r15,-0x28(%rbp)
mov    %rbx,%r15
mov    %rdi,%rbx
mov    %rcx,%rdi
callq  *%rax
mov    0x3c8(%rbx),%rax
mov    0x3b8(%rbx),%rdi
lea    0x270(%rbx),%rsi
mov    $0x8,%edx
callq  *%rax
cmp    $0x8,%rax
jne    1c478 <TIFFRewriteDirectory+0x428>
mov    %rbx,%rdi
callq  8af0 <TIFFWriteDirectory@plt>
mov    %r15,%rbx
mov    -0x28(%rbp),%r15
leaveq 
retq   
movzwl %ax,%eax
lea    (%rax,%rax,4),%eax
shl    $0x2,%eax
movslq %eax,%rax
lea    0x8(%r15,%rax,1),%rsi
mov    %rsi,-0x30(%rbp)
mov    0x3d0(%rbx),%rax
mov    0x3b8(%rbx),%rdi
mov    %r12,%rdx
callq  *%rax
mov    0x3c0(%rbx),%rax
mov    0x3b8(%rbx),%rdi
lea    -0x40(%rbp),%r15
mov    %r15,%rsi
mov    %r13,%rdx
callq  *%rax
cmp    $0x8,%rax
jne    1c49b <TIFFRewriteDirectory+0x44b>
mov    0x10(%rbx),%eax
and    $0x80,%eax
test   %eax,%eax
je     1c326 <TIFFRewriteDirectory+0x2d6>
mov    %r15,%rdi
callq  8730 <TIFFSwabLong8@plt>
mov    -0x40(%rbp),%r15
cmp    0x18(%rbx),%r15
je     1c4d0 <TIFFRewriteDirectory+0x480>
mov    %rbx,%rdi
mov    %r15,%rsi
callq  82f0 <_TIFFSeekOK@plt>
test   %eax,%eax
je     1c545 <TIFFRewriteDirectory+0x4f5>
mov    0x3c0(%rbx),%rax
mov    0x3b8(%rbx),%rdi
mov    %r14,%rsi
mov    %r13,%rdx
callq  *%rax
cmp    $0x8,%rax
jne    1c545 <TIFFRewriteDirectory+0x4f5>
mov    0x10(%rbx),%eax
and    $0x80,%eax
test   %eax,%eax
je     1c37b <TIFFRewriteDirectory+0x32b>
mov    %r14,%rdi
callq  8730 <TIFFSwabLong8@plt>
mov    -0x48(%rbp),%rax
cmp    $0xffff,%rax
jbe    1c2c6 <TIFFRewriteDirectory+0x276>
xor    %eax,%eax
mov    0x3b8(%rbx),%rdi
lea    0x3826f(%rip),%rdx        # 5460a <module.10+0x8a>
lea    0x381de(%rip),%rsi        # 54580 <module.10>
callq  8a00 <TIFFErrorExt@plt>
mov    %r12,%rax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
movl   $0x0,-0x4c(%rbp)
movzwl -0x52(%rbp),%eax
lea    (%rax,%rax,2),%eax
mov    -0x30(%rbp),%rcx
lea    0x2(%rcx,%rax,4),%eax
mov    %eax,%esi
mov    0x3d0(%rbx),%rax
mov    0x3b8(%rbx),%rdi
mov    %r12,%rdx
callq  *%rax
mov    0x3c8(%rbx),%rax
mov    0x3b8(%rbx),%rdi
lea    -0x4c(%rbp),%rsi
mov    $0x4,%edx
callq  *%rax
cmp    $0x4,%rax
je     1c57a <TIFFRewriteDirectory+0x52a>
xor    %eax,%eax
mov    0x3b8(%rbx),%rdi
lea    0x38162(%rip),%rsi        # 54580 <module.10>
lea    0x381c8(%rip),%rdx        # 545ed <module.10+0x6d>
callq  8a00 <TIFFErrorExt@plt>
mov    %r12,%rax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rbx),%rdi
lea    0x3815d(%rip),%rdx        # 545b0 <module.10+0x30>
lea    0x38126(%rip),%rsi        # 54580 <module.10>
callq  8a00 <TIFFErrorExt@plt>
mov    %r12,%rax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rbx),%rdi
mov    (%rbx),%rsi
lea    0x3810a(%rip),%rdx        # 54595 <module.10+0x15>
callq  8a00 <TIFFErrorExt@plt>
mov    %r15,%rbx
xor    %eax,%eax
mov    -0x28(%rbp),%r15
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rbx),%rdi
lea    0x38124(%rip),%rdx        # 545cf <module.10+0x4f>
lea    0x380ce(%rip),%rsi        # 54580 <module.10>
callq  8a00 <TIFFErrorExt@plt>
mov    %r12,%rax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
movq   $0x0,-0x38(%rbp)
mov    0x3d0(%rbx),%rax
mov    0x3b8(%rbx),%rdi
mov    %r12,%rdx
mov    -0x30(%rbp),%rsi
callq  *%rax
mov    %r13,%rdx
mov    0x3c8(%rbx),%rax
mov    0x3b8(%rbx),%rdi
lea    -0x38(%rbp),%rsi
callq  *%rax
cmp    $0x8,%rax
je     1c597 <TIFFRewriteDirectory+0x547>
xor    %eax,%eax
mov    0x3b8(%rbx),%rdi
lea    0x38060(%rip),%rsi        # 54580 <module.10>
lea    0x380c6(%rip),%rdx        # 545ed <module.10+0x6d>
callq  8a00 <TIFFErrorExt@plt>
mov    %r12,%rax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rbx),%rdi
lea    0x3805b(%rip),%rdx        # 545b0 <module.10+0x30>
lea    0x38024(%rip),%rsi        # 54580 <module.10>
callq  8a00 <TIFFErrorExt@plt>
mov    %r12,%rax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
movq   $0x0,0x18(%rbx)
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%r15
jmpq   1c2b5 <TIFFRewriteDirectory+0x265>
movq   $0x0,0x18(%rbx)
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%r15
jmpq   1c2b5 <TIFFRewriteDirectory+0x265>
data16 nopw %cs:0x0(%rax,%rax,1)
nop

000000000001c5c0 <_TIFFRewriteField>:
push   %rbp
mov    %rsp,%rbp
sub    $0xa0,%rsp
mov    %r15,-0x28(%rbp)
mov    %rsi,-0x58(%rbp)
mov    %rdx,-0x50(%rbp)
mov    %rcx,-0x48(%rbp)
mov    %r8,-0x40(%rbp)
movw   $0x0,-0x7c(%rbp)
movw   $0x0,-0x7a(%rbp)
movq   $0x0,-0x78(%rbp)
movq   $0x0,-0x70(%rbp)
movzwl %si,%esi
xor    %edx,%edx
mov    %rdx,-0x30(%rbp)
mov    %rdi,%r15
callq  8680 <TIFFFindField@plt>
lea    0x3802d(%rip),%rsi        # 54640 <module.16>
mov    0x10(%r15),%eax
and    $0x800,%eax
test   %eax,%eax
jne    1c65f <_TIFFRewriteField+0x9f>
mov    0x18(%r15),%rax
test   %rax,%rax
je     1c67c <_TIFFRewriteField+0xbc>
mov    %rax,%rsi
mov    %r15,%rdi
callq  82f0 <_TIFFSeekOK@plt>
test   %eax,%eax
jne    1c699 <_TIFFRewriteField+0xd9>
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
mov    (%r15),%rcx
lea    0x3807d(%rip),%rdx        # 546c8 <module.16+0x88>
lea    0x37fee(%rip),%rsi        # 54640 <module.16>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x28(%rbp),%r15
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
lea    0x37fe0(%rip),%rdx        # 5464f <module.16+0xf>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x28(%rbp),%r15
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
lea    0x38003(%rip),%rdx        # 5468f <module.16+0x4f>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x28(%rbp),%r15
leaveq 
retq   
mov    0x18(%r15),%rax
mov    %rax,-0x38(%rbp)
mov    $0x2,%edx
mov    $0x8,%ecx
mov    0x10(%r15),%eax
and    $0x80000,%eax
test   %eax,%eax
jne    1c6fc <_TIFFRewriteField+0x13c>
mov    0x3c0(%r15),%rax
mov    0x3b8(%r15),%rdi
lea    -0x92(%rbp),%rsi
callq  *%rax
cmp    $0x2,%rax
je     1c740 <_TIFFRewriteField+0x180>
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
mov    (%r15),%rcx
lea    0x38008(%rip),%rdx        # 546f0 <module.16+0xb0>
lea    0x37f51(%rip),%rsi        # 54640 <module.16>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x28(%rbp),%r15
leaveq 
retq   
mov    0x3c0(%r15),%rax
mov    0x3b8(%r15),%rdi
lea    -0x68(%rbp),%rsi
mov    %rcx,%rdx
callq  *%rax
cmp    $0x8,%rax
je     1c794 <_TIFFRewriteField+0x1d4>
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
mov    (%r15),%rcx
lea    0x37fc4(%rip),%rdx        # 546f0 <module.16+0xb0>
lea    0x37f0d(%rip),%rsi        # 54640 <module.16>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x28(%rbp),%r15
leaveq 
retq   
mov    0x10(%r15),%eax
and    $0x80,%eax
test   %eax,%eax
je     1c759 <_TIFFRewriteField+0x199>
lea    -0x92(%rbp),%rdi
callq  87c0 <TIFFSwabShort@plt>
mov    $0xc,%ecx
mov    -0x38(%rbp),%rax
add    $0x2,%rax
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %rax,%rbx
mov    %rcx,%r14
lea    -0x90(%rbp),%rsi
mov    $0x2,%edx
mov    -0x58(%rbp),%r12
mov    %r14,%r13
jmpq   1c831 <_TIFFRewriteField+0x271>
mov    0x10(%r15),%eax
and    $0x80,%eax
test   %eax,%eax
je     1c7aa <_TIFFRewriteField+0x1ea>
lea    -0x68(%rbp),%rdi
callq  8730 <TIFFSwabLong8@plt>
movzwl -0x68(%rbp),%eax
mov    %ax,-0x92(%rbp)
mov    $0x14,%ecx
mov    -0x38(%rbp),%rax
add    $0x8,%rax
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %rax,%rbx
mov    %rcx,%r14
lea    -0x90(%rbp),%rsi
mov    $0x2,%edx
mov    -0x58(%rbp),%r12
mov    %r14,%r13
jmp    1c831 <_TIFFRewriteField+0x271>
lea    -0x7c(%rbp),%rdi
lea    -0x90(%rbp),%rsi
mov    $0x2,%edx
callq  8720 <memcpy@plt>
mov    0x10(%r15),%eax
and    $0x80,%eax
test   %eax,%eax
je     1c818 <_TIFFRewriteField+0x258>
lea    -0x7c(%rbp),%rdi
callq  87c0 <TIFFSwabShort@plt>
movzwl -0x7c(%rbp),%eax
cmp    %ax,%r12w
je     1c88c <_TIFFRewriteField+0x2cc>
add    %r13,%rbx
lea    -0x90(%rbp),%rsi
mov    $0x2,%edx
movzwl -0x92(%rbp),%eax
test   %ax,%ax
je     1c891 <_TIFFRewriteField+0x2d1>
mov    0x3c0(%r15),%rax
mov    0x3b8(%r15),%rdi
mov    %r14,%rdx
callq  *%rax
cmp    %rax,%r14
je     1c7ed <_TIFFRewriteField+0x22d>
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
lea    0x37eb1(%rip),%rdx        # 54716 <module.16+0xd6>
mov    (%r15),%rcx
lea    0x37dd1(%rip),%rsi        # 54640 <module.16>
callq  8a00 <TIFFErrorExt@plt>
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
xor    %eax,%eax
mov    -0x28(%rbp),%r15
leaveq 
retq   
mov    $0x2,%edx
movzwl -0x7c(%rbp),%eax
cmp    %ax,%r12w
jne    1c9a4 <_TIFFRewriteField+0x3e4>
lea    -0x7a(%rbp),%r12
lea    -0x8e(%rbp),%rsi
mov    %r12,%rdi
mov    %r14,-0x38(%rbp)
callq  8720 <memcpy@plt>
mov    0x10(%r15),%eax
and    $0x80,%eax
test   %eax,%eax
je     1c8cb <_TIFFRewriteField+0x30b>
mov    %r12,%rdi
callq  87c0 <TIFFSwabShort@plt>
mov    $0x4,%r12d
lea    -0x70(%rbp),%r13
lea    -0x78(%rbp),%r14
mov    0x10(%r15),%eax
and    $0x80000,%eax
test   %eax,%eax
jne    1c9df <_TIFFRewriteField+0x41f>
lea    -0x60(%rbp),%r13
lea    -0x8c(%rbp),%rsi
mov    %r13,%rdi
mov    %r12,%rdx
callq  8720 <memcpy@plt>
mov    0x10(%r15),%eax
and    $0x80,%eax
test   %eax,%eax
je     1c915 <_TIFFRewriteField+0x355>
mov    %r13,%rdi
callq  8480 <TIFFSwabLong@plt>
mov    -0x60(%rbp),%eax
mov    %rax,-0x78(%rbp)
lea    -0x88(%rbp),%rsi
mov    %r13,%rdi
mov    %r12,%rdx
callq  8720 <memcpy@plt>
mov    0x10(%r15),%eax
and    $0x80,%eax
test   %eax,%eax
je     1c943 <_TIFFRewriteField+0x383>
mov    %r13,%rdi
callq  8480 <TIFFSwabLong@plt>
mov    -0x60(%rbp),%eax
mov    %rax,-0x70(%rbp)
mov    -0x50(%rbp),%r14
mov    %r14,%rdi
callq  8140 <TIFFDataWidth@plt>
cmp    $0x8,%eax
je     1ca36 <_TIFFRewriteField+0x476>
mov    %r14,%r12
mov    %r12,%rdi
callq  8140 <TIFFDataWidth@plt>
movslq %eax,%rdx
lea    0x37de4(%rip),%rcx        # 54758 <module.16+0x118>
mov    %r15,%rdi
mov    -0x48(%rbp),%r13
mov    %r13,%rsi
callq  8750 <_TIFFCheckMalloc@plt>
test   %rax,%rax
jne    1ca4b <_TIFFRewriteField+0x48b>
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
xor    %eax,%eax
mov    -0x28(%rbp),%r15
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
lea    0x37d89(%rip),%rdx        # 5473d <module.16+0xfd>
mov    (%r15),%rcx
movzwl %r12w,%r8d
lea    0x37c7e(%rip),%rsi        # 54640 <module.16>
callq  8a00 <TIFFErrorExt@plt>
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
xor    %eax,%eax
mov    -0x28(%rbp),%r15
leaveq 
retq   
lea    -0x8c(%rbp),%rsi
mov    %r14,%rdi
mov    $0x8,%r12d
mov    %r12,%rdx
callq  8720 <memcpy@plt>
mov    0x10(%r15),%eax
and    $0x80,%eax
test   %eax,%eax
je     1ca0c <_TIFFRewriteField+0x44c>
mov    %r14,%rdi
callq  8730 <TIFFSwabLong8@plt>
mov    %r12,%rdx
lea    -0x84(%rbp),%rsi
mov    %r13,%rdi
callq  8720 <memcpy@plt>
mov    0x10(%r15),%eax
and    $0x80,%eax
test   %eax,%eax
jne    1ca80 <_TIFFRewriteField+0x4c0>
mov    $0x4,%r12d
jmpq   1c94a <_TIFFRewriteField+0x38a>
mov    0x10(%r15),%eax
and    $0x80000,%eax
test   %eax,%eax
je     1ca93 <_TIFFRewriteField+0x4d3>
mov    %r14,%r12
jmpq   1c962 <_TIFFRewriteField+0x3a2>
cmp    %r12d,%r14d
je     1cab2 <_TIFFRewriteField+0x4f2>
lea    0x37d13(%rip),%rdx        # 5476a <module.16+0x12a>
cmp    $0x9,%r12d
je     1cb2e <_TIFFRewriteField+0x56e>
cmp    $0x4,%r12d
jne    1cb43 <_TIFFRewriteField+0x583>
cmp    $0x10,%r14d
jne    1cb43 <_TIFFRewriteField+0x583>
mov    -0x40(%rbp),%rsi
xor    %ecx,%ecx
jmpq   1cb6e <_TIFFRewriteField+0x5ae>
mov    %r13,%rdi
callq  8730 <TIFFSwabLong8@plt>
mov    $0x4,%r12d
jmpq   1c94a <_TIFFRewriteField+0x38a>
cmp    $0x10,%r14d
je     1c962 <_TIFFRewriteField+0x3a2>
cmp    $0x11,%r14d
jne    1cb7b <_TIFFRewriteField+0x5bb>
mov    $0x9,%r12d
jmpq   1c962 <_TIFFRewriteField+0x3a2>
mov    %rax,%r14
mov    %r12,%rdi
callq  8140 <TIFFDataWidth@plt>
movslq %eax,%rdx
imul   %r13,%rdx
mov    %r14,%rdi
mov    -0x40(%rbp),%rsi
callq  8720 <memcpy@plt>
mov    %r12,%rdi
callq  8140 <TIFFDataWidth@plt>
cmp    $0x1,%eax
jle    1cb98 <_TIFFRewriteField+0x5d8>
mov    0x10(%r15),%eax
and    $0x80,%eax
test   %eax,%eax
je     1cb98 <_TIFFRewriteField+0x5d8>
mov    %r12,%rdi
callq  8140 <TIFFDataWidth@plt>
cmp    $0x2,%eax
je     1cb8d <_TIFFRewriteField+0x5cd>
mov    %r12,%rdi
callq  8140 <TIFFDataWidth@plt>
cmp    $0x4,%eax
je     1cc43 <_TIFFRewriteField+0x683>
mov    %r12,%rdi
callq  8140 <TIFFDataWidth@plt>
cmp    $0x8,%eax
jne    1cb98 <_TIFFRewriteField+0x5d8>
mov    %r14,%rdi
mov    %r13,%rsi
callq  8930 <TIFFSwabArrayOfLong8@plt>
jmp    1cb98 <_TIFFRewriteField+0x5d8>
cmp    $0x11,%r14d
jne    1ca61 <_TIFFRewriteField+0x4a1>
mov    -0x40(%rbp),%r8
xor    %ecx,%ecx
jmpq   1cc6b <_TIFFRewriteField+0x6ab>
cmp    $0xd,%r12d
je     1cc78 <_TIFFRewriteField+0x6b8>
mov    %rax,%r14
jmpq   1cad0 <_TIFFRewriteField+0x510>
mov    (%rsi,%rcx,8),%r8d
mov    %r8d,(%rax,%rcx,4)
mov    (%rsi,%rcx,8),%rdi
cmp    %r8,%rdi
jne    1cc8a <_TIFFRewriteField+0x6ca>
add    $0x1,%rcx
cmp    %rcx,%r13
jg     1cb55 <_TIFFRewriteField+0x595>
mov    %rax,%r14
jmpq   1cad0 <_TIFFRewriteField+0x510>
cmp    $0x12,%r14d
je     1ccc5 <_TIFFRewriteField+0x705>
mov    %r14,%r12
jmpq   1c962 <_TIFFRewriteField+0x3a2>
mov    %r14,%rdi
mov    %r13,%rsi
callq  83d0 <TIFFSwabArrayOfShort@plt>
mov    $0x1,%eax
mov    %rax,-0x58(%rbp)
mov    0x10(%r15),%eax
and    $0x80000,%eax
test   %eax,%eax
jne    1ccd0 <_TIFFRewriteField+0x710>
mov    %r12,%rdi
callq  8140 <TIFFDataWidth@plt>
movslq %eax,%rax
imul   %r13,%rax
cmp    $0x4,%rax
jg     1cbd5 <_TIFFRewriteField+0x615>
lea    0x8(%rbx),%rax
mov    %rax,-0x70(%rbp)
pushq  -0x58(%rbp)
popq   -0x30(%rbp)
mov    -0x78(%rbp),%rax
cmp    %r13,%rax
jne    1ccfc <_TIFFRewriteField+0x73c>
movzwl -0x7a(%rbp),%eax
cmp    %r12w,%ax
jne    1ccfc <_TIFFRewriteField+0x73c>
mov    -0x70(%rbp),%rsi
mov    %r15,%rdi
callq  82f0 <_TIFFSeekOK@plt>
test   %eax,%eax
jne    1cd88 <_TIFFRewriteField+0x7c8>
mov    %r14,%rdi
callq  8bb0 <_TIFFfree@plt>
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
mov    (%r15),%rcx
lea    0x37aa9(%rip),%rdx        # 546c8 <module.16+0x88>
lea    0x37a1a(%rip),%rsi        # 54640 <module.16>
callq  8a00 <TIFFErrorExt@plt>
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
xor    %eax,%eax
mov    -0x28(%rbp),%r15
leaveq 
retq   
mov    %r14,%rdi
mov    %r13,%rsi
callq  8b70 <TIFFSwabArrayOfLong@plt>
jmpq   1cb98 <_TIFFRewriteField+0x5d8>
movslq (%r8,%rcx,8),%rdi
mov    %edi,(%rax,%rcx,4)
mov    (%r8,%rcx,8),%rsi
cmp    %rdi,%rsi
jne    1ce15 <_TIFFRewriteField+0x855>
add    $0x1,%rcx
cmp    %rcx,%r13
jg     1cc53 <_TIFFRewriteField+0x693>
mov    %rax,%r14
jmpq   1cad0 <_TIFFRewriteField+0x510>
cmp    $0x12,%r14d
je     1ce50 <_TIFFRewriteField+0x890>
mov    %rax,%r14
jmpq   1cad0 <_TIFFRewriteField+0x510>
mov    %rax,%rdi
mov    %rdx,%rbx
callq  8bb0 <_TIFFfree@plt>
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
mov    %rbx,%rdx
lea    0x37998(%rip),%rsi        # 54640 <module.16>
callq  8a00 <TIFFErrorExt@plt>
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
xor    %eax,%eax
mov    -0x28(%rbp),%r15
leaveq 
retq   
mov    $0xd,%r12d
jmpq   1c962 <_TIFFRewriteField+0x3a2>
mov    %r12,%rdi
callq  8140 <TIFFDataWidth@plt>
movslq %eax,%rax
imul   %r13,%rax
cmp    $0x8,%rax
jg     1cbd5 <_TIFFRewriteField+0x615>
lea    0xc(%rbx),%rax
mov    %rax,-0x70(%rbp)
pushq  -0x58(%rbp)
popq   -0x30(%rbp)
jmpq   1cbd5 <_TIFFRewriteField+0x615>
mov    -0x30(%rbp),%rax
test   %eax,%eax
jg     1ce5b <_TIFFRewriteField+0x89b>
mov    0x3d0(%r15),%rax
mov    0x3b8(%r15),%rdi
xor    %esi,%esi
mov    $0x2,%edx
callq  *%rax
mov    %rax,-0x70(%rbp)
mov    0x3c8(%r15),%rax
mov    0x3b8(%r15),%rdi
mov    %r12,%rcx
mov    %r15,-0x58(%rbp)
mov    %rbx,-0x50(%rbp)
mov    %rax,%rbx
mov    %rdi,%r15
mov    %rcx,%rdi
callq  8140 <TIFFDataWidth@plt>
movslq %eax,%rax
mov    %r13,%rdx
imul   %rax,%rdx
mov    %r15,%rdi
mov    %r14,%rsi
callq  *%rbx
mov    %rax,%rbx
mov    %r12,%rdi
callq  8140 <TIFFDataWidth@plt>
movslq %eax,%rax
imul   %rax,%r13
cmp    %rbx,%r13
jne    1cf78 <_TIFFRewriteField+0x9b8>
mov    -0x50(%rbp),%rbx
mov    -0x58(%rbp),%r15
lea    -0x70(%rbp),%r13
jmpq   1ce79 <_TIFFRewriteField+0x8b9>
mov    0x3c8(%r15),%rbx
mov    0x3b8(%r15),%rdi
mov    %r12,%rax
mov    %r15,-0x58(%rbp)
mov    %rdi,%r15
mov    %rax,%rdi
callq  8140 <TIFFDataWidth@plt>
movslq %eax,%rax
mov    %r13,%rdx
imul   %rax,%rdx
mov    %r15,%rdi
mov    %r14,%rsi
callq  *%rbx
mov    %r12,%rdi
mov    %rax,%rbx
callq  8140 <TIFFDataWidth@plt>
movslq %eax,%rax
imul   %rax,%r13
cmp    %rbx,%r13
je     1cfb8 <_TIFFRewriteField+0x9f8>
mov    %r14,%rdi
callq  8bb0 <_TIFFfree@plt>
xor    %eax,%eax
mov    -0x58(%rbp),%rcx
mov    0x3b8(%rcx),%rdi
lea    0x377fc(%rip),%rdx        # 545ed <module.10+0x6d>
lea    0x37848(%rip),%rsi        # 54640 <module.16>
callq  8a00 <TIFFErrorExt@plt>
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
xor    %eax,%eax
mov    -0x28(%rbp),%r15
leaveq 
retq   
mov    %rax,%rdi
mov    %rdx,%rbx
callq  8bb0 <_TIFFfree@plt>
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
mov    %rbx,%rdx
lea    0x3780d(%rip),%rsi        # 54640 <module.16>
callq  8a00 <TIFFErrorExt@plt>
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
xor    %eax,%eax
mov    -0x28(%rbp),%r15
leaveq 
retq   
mov    -0x40(%rbp),%rsi
xor    %ecx,%ecx
jmpq   1cb6e <_TIFFRewriteField+0x5ae>
mov    %r12,%rdi
callq  8140 <TIFFDataWidth@plt>
movslq %eax,%rdx
imul   %r13,%rdx
lea    -0x70(%rbp),%r13
mov    %r13,%rdi
mov    %r14,%rsi
callq  8720 <memcpy@plt>
mov    %r14,%rdi
callq  8bb0 <_TIFFfree@plt>
mov    %r12w,-0x7a(%rbp)
lea    -0x8e(%rbp),%r12
mov    %r12,%rdi
lea    -0x7a(%rbp),%rsi
mov    $0x2,%edx
callq  8720 <memcpy@plt>
mov    0x10(%r15),%eax
and    $0x80,%eax
test   %eax,%eax
je     1ceb3 <_TIFFRewriteField+0x8f3>
mov    %r12,%rdi
callq  87c0 <TIFFSwabShort@plt>
mov    0x10(%r15),%eax
and    $0x80000,%eax
test   %eax,%eax
jne    1cfdb <_TIFFRewriteField+0xa1b>
mov    -0x78(%rbp),%eax
mov    %eax,-0x5c(%rbp)
lea    -0x5c(%rbp),%r13
lea    -0x8c(%rbp),%r14
mov    %r14,%rdi
mov    %r13,%rsi
mov    $0x4,%r12d
mov    %r12,%rdx
callq  8720 <memcpy@plt>
mov    0x10(%r15),%eax
and    $0x80,%eax
test   %eax,%eax
je     1cefe <_TIFFRewriteField+0x93e>
mov    %r14,%rdi
callq  8480 <TIFFSwabLong@plt>
mov    -0x70(%rbp),%eax
mov    %eax,-0x5c(%rbp)
mov    %r12,%rdx
mov    %r13,%rsi
lea    -0x88(%rbp),%r14
mov    %r14,%rdi
callq  8720 <memcpy@plt>
mov    0x10(%r15),%eax
and    $0x80,%eax
test   %eax,%eax
je     1cf2e <_TIFFRewriteField+0x96e>
mov    %r14,%rdi
callq  8480 <TIFFSwabLong@plt>
mov    %rbx,%rsi
mov    %r15,%rdi
callq  82f0 <_TIFFSeekOK@plt>
test   %eax,%eax
jne    1d03f <_TIFFRewriteField+0xa7f>
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
mov    (%r15),%rcx
lea    0x37774(%rip),%rdx        # 546c8 <module.16+0x88>
lea    0x376e5(%rip),%rsi        # 54640 <module.16>
callq  8a00 <TIFFErrorExt@plt>
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
xor    %eax,%eax
mov    -0x28(%rbp),%r15
leaveq 
retq   
mov    %r14,%rdi
callq  8bb0 <_TIFFfree@plt>
xor    %eax,%eax
mov    -0x58(%rbp),%rcx
mov    0x3b8(%rcx),%rdi
lea    0x37659(%rip),%rdx        # 545ed <module.10+0x6d>
lea    0x376a5(%rip),%rsi        # 54640 <module.16>
callq  8a00 <TIFFErrorExt@plt>
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
xor    %eax,%eax
mov    -0x28(%rbp),%r15
leaveq 
retq   
mov    %r14,%rdi
callq  8bb0 <_TIFFfree@plt>
mov    $0x1,%eax
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x28(%rbp),%r15
leaveq 
retq   
lea    -0x8c(%rbp),%r14
mov    %r14,%rdi
mov    $0x8,%r12d
mov    %r12,%rdx
lea    -0x78(%rbp),%rsi
callq  8720 <memcpy@plt>
mov    0x10(%r15),%eax
and    $0x80,%eax
test   %eax,%eax
je     1d00c <_TIFFRewriteField+0xa4c>
mov    %r14,%rdi
callq  8730 <TIFFSwabLong8@plt>
mov    %r12,%rdx
mov    %r13,%rsi
lea    -0x84(%rbp),%r14
mov    %r14,%rdi
callq  8720 <memcpy@plt>
mov    0x10(%r15),%eax
and    $0x80,%eax
test   %eax,%eax
je     1cf2e <_TIFFRewriteField+0x96e>
mov    %r14,%rdi
callq  8730 <TIFFSwabLong8@plt>
jmpq   1cf2e <_TIFFRewriteField+0x96e>
mov    0x3c8(%r15),%rax
mov    0x3b8(%r15),%rdi
mov    -0x38(%rbp),%rbx
mov    %rbx,%rdx
lea    -0x90(%rbp),%rsi
callq  *%rax
cmp    %rax,%rbx
jne    1d07d <_TIFFRewriteField+0xabd>
mov    $0x1,%eax
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x28(%rbp),%r15
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
lea    0x37707(%rip),%rdx        # 54794 <module.16+0x154>
mov    (%r15),%rcx
lea    0x375a9(%rip),%rsi        # 54640 <module.16>
callq  8a00 <TIFFErrorExt@plt>
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
xor    %eax,%eax
mov    -0x28(%rbp),%r15
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nop

000000000001d0c0 <TIFFWriteDirectorySec>:
push   %rbp
mov    %rsp,%rbp
sub    $0xa0,%rsp
mov    $0x1,%eax
movslq 0xc(%rdi),%r8
test   %r8d,%r8d
jne    1d0db <TIFFWriteDirectorySec+0x1b>
leaveq 
retq   
mov    %rdi,%rax
mov    %r13,-0x20(%rbp)
mov    %r14,-0x28(%rbp)
mov    %r15,-0x30(%rbp)
mov    %rcx,-0x58(%rbp)
mov    %rbx,%r13
mov    %rdi,%rbx
mov    %rax,%rdi
mov    %rdx,%r14
mov    %rsi,%r15
callq  8c70 <_TIFFFillStriles@plt>
lea    0x376b3(%rip),%rcx        # 547bc <module.26>
xor    %r10d,%r10d
mov    %r10,-0x38(%rbp)
lea    -0x98(%rbp),%r8
mov    $0x100,%edx
mov    $0x101,%esi
mov    $0x142,%r11d
mov    $0x143,%edi
mov    $0x11a,%r9d
lea    0xb4(%rbx),%rax
mov    %rax,-0x50(%rbp)
lea    0xd0(%rbx),%rax
mov    %rax,-0x48(%rbp)
lea    0x108(%rbx),%rax
mov    %rax,-0x40(%rbp)
test   %r14d,%r14d
jne    1d1a3 <TIFFWriteDirectorySec+0xe3>
mov    %r14,-0x8(%rbp)
mov    %r13,-0x10(%rbp)
mov    %r12,-0x18(%rbp)
mov    %r10,%r13
mov    %r8,%r14
mov    $0x102,%ecx
mov    $0xfe,%eax
mov    $0x11e,%r8d
mov    $0x11b,%r10d
mov    %r13,%r12
test   %r15d,%r15d
movl   $0x0,-0x98(%rbp)
jne    1d23b <TIFFWriteDirectorySec+0x17b>
mov    %r15,-0x60(%rbp)
mov    -0x38(%rbp),%r15
jmpq   1d825 <TIFFWriteDirectorySec+0x765>
mov    %r14,-0x8(%rbp)
mov    0x10(%rbx),%eax
mov    %rax,%rdx
and    $0x1000,%edx
test   %edx,%edx
jne    1d872 <TIFFWriteDirectorySec+0x7b2>
mov    %r12,%r14
mov    %r10,%r12
mov    %rbx,%rdi
callq  *0x328(%rbx)
mov    0x390(%rbx),%rax
test   %rax,%rax
jg     1d89c <TIFFWriteDirectorySec+0x7dc>
mov    0x10(%rbx),%eax
and    $0x200,%eax
test   %eax,%eax
jne    1d8ed <TIFFWriteDirectorySec+0x82d>
mov    0x10(%rbx),%eax
and    $0xffffffaf,%eax
mov    %eax,0x10(%rbx)
mov    %r13,-0x10(%rbp)
mov    %r14,-0x18(%rbp)
mov    $0x143,%edi
mov    $0x11a,%r9d
mov    $0x101,%esi
mov    $0x142,%r11d
mov    $0x100,%edx
lea    -0x98(%rbp),%r14
mov    $0x102,%ecx
mov    $0xfe,%eax
mov    $0x11e,%r8d
mov    $0x11b,%r10d
mov    %r12,%r13
jmpq   1d183 <TIFFWriteDirectorySec+0xc3>
mov    %r15,-0x60(%rbp)
mov    0x38(%rbx),%r15
and    $0x2,%r15
test   %r15,%r15
je     1d2b3 <TIFFWriteDirectorySec+0x1f3>
mov    %rdx,%rcx
mov    %rsi,%r12
mov    %r11,%r15
mov    0x58(%rbx),%r8d
mov    %rbx,%rdi
mov    %r14,%rsi
mov    %r13,%rdx
callq  1f280 <TIFFWriteDirectoryTagShortLong>
test   %eax,%eax
je     1d93e <TIFFWriteDirectorySec+0x87e>
mov    0x5c(%rbx),%r8d
mov    %rbx,%rdi
mov    %r14,%rsi
mov    %r13,%rdx
mov    %r12,%rcx
callq  1f280 <TIFFWriteDirectoryTagShortLong>
test   %eax,%eax
je     1d949 <TIFFWriteDirectorySec+0x889>
mov    %r15,%r11
mov    $0x143,%edi
mov    $0x11a,%r9d
xor    %r12d,%r12d
mov    $0x102,%ecx
mov    $0xfe,%eax
mov    $0x11e,%r8d
mov    $0x11b,%r10d
mov    0x38(%rbx),%rdx
and    $0x4,%rdx
test   %rdx,%rdx
je     1d31c <TIFFWriteDirectorySec+0x25c>
mov    %r11,%rcx
mov    %rdi,%r12
mov    %r9,%r15
mov    0x64(%rbx),%r8d
mov    %rbx,%rdi
mov    %r14,%rsi
mov    %r13,%rdx
callq  1f280 <TIFFWriteDirectoryTagShortLong>
test   %eax,%eax
je     1d954 <TIFFWriteDirectorySec+0x894>
mov    0x68(%rbx),%r8d
mov    %rbx,%rdi
mov    %r14,%rsi
mov    %r13,%rdx
mov    %r12,%rcx
callq  1f280 <TIFFWriteDirectoryTagShortLong>
test   %eax,%eax
je     1d95f <TIFFWriteDirectorySec+0x89f>
mov    %r15,%r9
xor    %r12d,%r12d
mov    $0x102,%ecx
mov    $0xfe,%eax
mov    $0x11e,%r8d
mov    $0x11b,%r10d
mov    0x38(%rbx),%rdx
and    $0x8,%rdx
test   %rdx,%rdx
je     1d389 <TIFFWriteDirectorySec+0x2c9>
mov    %r9,%rcx
mov    %r10,%r12
mov    %r8,%r15
movss  0xa0(%rbx),%xmm0
cvtss2sd %xmm0,%xmm0
mov    %rbx,%rdi
mov    %r14,%rsi
mov    %r13,%rdx
callq  1f1c0 <TIFFWriteDirectoryTagRational>
test   %eax,%eax
je     1d96a <TIFFWriteDirectorySec+0x8aa>
movss  0xa4(%rbx),%xmm0
cvtss2sd %xmm0,%xmm0
mov    %rbx,%rdi
mov    %r14,%rsi
mov    %r13,%rdx
mov    %r12,%rcx
callq  1f1c0 <TIFFWriteDirectoryTagRational>
test   %eax,%eax
je     1d975 <TIFFWriteDirectorySec+0x8b5>
mov    %r15,%r8
xor    %r12d,%r12d
mov    $0x102,%ecx
mov    $0xfe,%eax
mov    0x38(%rbx),%rdx
and    $0x10,%rdx
test   %rdx,%rdx
je     1d3f1 <TIFFWriteDirectorySec+0x331>
mov    %rcx,%r12
mov    %r8,%rcx
mov    %rax,%r15
movss  0xac(%rbx),%xmm0
cvtss2sd %xmm0,%xmm0
mov    %rbx,%rdi
mov    %r14,%rsi
mov    %r13,%rdx
callq  1f1c0 <TIFFWriteDirectoryTagRational>
test   %eax,%eax
je     1d980 <TIFFWriteDirectorySec+0x8c0>
movss  0xb0(%rbx),%xmm0
cvtss2sd %xmm0,%xmm0
mov    %rbx,%rdi
mov    %r14,%rsi
mov    %r13,%rdx
mov    $0x11f,%ecx
callq  1f1c0 <TIFFWriteDirectoryTagRational>
test   %eax,%eax
je     1d98b <TIFFWriteDirectorySec+0x8cb>
mov    %r15,%rax
mov    %r12,%rcx
xor    %r12d,%r12d
mov    0x38(%rbx),%rdx
and    $0x20,%rdx
test   %rdx,%rdx
jne    1d996 <TIFFWriteDirectorySec+0x8d6>
mov    0x38(%rbx),%rax
and    $0x40,%rax
test   %rax,%rax
je     1d42a <TIFFWriteDirectorySec+0x36a>
movzwl 0x74(%rbx),%r8d
mov    %rbx,%rdi
mov    %r14,%rsi
mov    %r13,%rdx
callq  1f030 <TIFFWriteDirectoryTagShortPerSample>
test   %eax,%eax
je     1d9be <TIFFWriteDirectorySec+0x8fe>
mov    0x38(%rbx),%rax
and    $0x80,%rax
test   %rax,%rax
jne    1d9c6 <TIFFWriteDirectorySec+0x906>
mov    0x38(%rbx),%rax
and    $0x100,%rax
test   %rax,%rax
jne    1d9ee <TIFFWriteDirectorySec+0x92e>
mov    0x38(%rbx),%rax
and    $0x200,%rax
test   %rax,%rax
jne    1da16 <TIFFWriteDirectorySec+0x956>
mov    0x38(%rbx),%rax
and    $0x400,%rax
test   %rax,%rax
je     1d492 <TIFFWriteDirectorySec+0x3d2>
movzwl 0x7e(%rbx),%r8d
mov    %rbx,%rdi
mov    %r14,%rsi
mov    %r13,%rdx
mov    $0x10a,%ecx
callq  1eff0 <TIFFWriteDirectoryTagShort>
test   %eax,%eax
je     1da3e <TIFFWriteDirectorySec+0x97e>
mov    0x38(%rbx),%rax
and    $0x8000,%rax
test   %rax,%rax
je     1d4c4 <TIFFWriteDirectorySec+0x404>
movzwl 0x80(%rbx),%r8d
mov    %rbx,%rdi
mov    %r14,%rsi
mov    %r13,%rdx
mov    $0x112,%ecx
callq  1eff0 <TIFFWriteDirectoryTagShort>
test   %eax,%eax
je     1da46 <TIFFWriteDirectorySec+0x986>
mov    0x38(%rbx),%rax
and    $0x10000,%rax
test   %rax,%rax
jne    1da4e <TIFFWriteDirectorySec+0x98e>
mov    0x38(%rbx),%rax
and    $0x20000,%rax
test   %rax,%rax
je     1d508 <TIFFWriteDirectorySec+0x448>
mov    0x84(%rbx),%r8d
mov    %rbx,%rdi
mov    %r14,%rsi
mov    %r13,%rdx
mov    $0x116,%ecx
callq  1f280 <TIFFWriteDirectoryTagShortLong>
test   %eax,%eax
je     1da79 <TIFFWriteDirectorySec+0x9b9>
mov    0x38(%rbx),%rax
and    $0x40000,%rax
test   %rax,%rax
je     1d53a <TIFFWriteDirectorySec+0x47a>
movzwl 0x88(%rbx),%r8d
mov    %rbx,%rdi
mov    %r14,%rsi
mov    %r13,%rdx
mov    $0x118,%ecx
callq  1f030 <TIFFWriteDirectoryTagShortPerSample>
test   %eax,%eax
je     1da81 <TIFFWriteDirectorySec+0x9c1>
mov    0x38(%rbx),%rax
and    $0x80000,%rax
test   %rax,%rax
jne    1da89 <TIFFWriteDirectorySec+0x9c9>
mov    0x38(%rbx),%rax
and    $0x100000,%rax
test   %rax,%rax
jne    1dab4 <TIFFWriteDirectorySec+0x9f4>
mov    0x38(%rbx),%rax
and    $0x400000,%rax
test   %rax,%rax
jne    1dadf <TIFFWriteDirectorySec+0xa1f>
mov    0x38(%rbx),%rax
and    $0x800000,%rax
test   %rax,%rax
jne    1db0a <TIFFWriteDirectorySec+0xa4a>
mov    $0x2,%r15d
mov    0x38(%rbx),%rax
and    $0x1000000,%rax
test   %rax,%rax
jne    1db3a <TIFFWriteDirectorySec+0xa7a>
mov    0x38(%rbx),%rax
and    $0x2000000,%rax
test   %rax,%rax
jne    1db7b <TIFFWriteDirectorySec+0xabb>
mov    0x38(%rbx),%rax
and    $0x4000000,%rax
test   %rax,%rax
jne    1dbc5 <TIFFWriteDirectorySec+0xb05>
mov    $0x80000000,%eax
and    0x38(%rbx),%rax
test   %rax,%rax
je     1d62b <TIFFWriteDirectorySec+0x56b>
movzwl 0xd4(%rbx),%eax
test   %ax,%ax
je     1d62b <TIFFWriteDirectorySec+0x56b>
xor    %eax,%eax
mov    %rbx,%rdi
mov    $0x152,%r12d
mov    %r12,%rsi
lea    -0x92(%rbp),%rdx
lea    -0x90(%rbp),%rcx
callq  8390 <TIFFGetFieldDefaulted@plt>
mov    %r12,%rcx
movzwl -0x92(%rbp),%r8d
mov    -0x90(%rbp),%r9
mov    %rbx,%rdi
mov    %r14,%rsi
mov    %r13,%rdx
callq  1f010 <TIFFWriteDirectoryTagShortArray>
test   %eax,%eax
je     1dbe3 <TIFFWriteDirectorySec+0xb23>
xor    %r12d,%r12d
mov    0x40(%rbx),%rax
and    $0x1,%rax
test   %rax,%rax
jne    1dbee <TIFFWriteDirectorySec+0xb2e>
mov    0x40(%rbx),%rax
and    $0x2,%rax
test   %rax,%rax
jne    1dc16 <TIFFWriteDirectorySec+0xb56>
mov    0x40(%rbx),%rax
and    $0x4,%rax
test   %rax,%rax
jne    1dc48 <TIFFWriteDirectorySec+0xb88>
mov    0x40(%rbx),%rax
and    $0x8,%rax
test   %rax,%rax
je     1d68a <TIFFWriteDirectorySec+0x5ca>
mov    0x60(%rbx),%r8d
mov    %rbx,%rdi
mov    %r14,%rsi
mov    %r13,%rdx
mov    $0x80e5,%ecx
callq  1f120 <TIFFWriteDirectoryTagLong>
test   %eax,%eax
je     1dc7a <TIFFWriteDirectorySec+0xbba>
mov    0x40(%rbx),%rax
and    $0x10,%rax
test   %rax,%rax
je     1d6b6 <TIFFWriteDirectorySec+0x5f6>
mov    0x6c(%rbx),%r8d
mov    %rbx,%rdi
mov    %r14,%rsi
mov    %r13,%rdx
mov    $0x80e6,%ecx
callq  1f120 <TIFFWriteDirectoryTagLong>
test   %eax,%eax
je     1dc82 <TIFFWriteDirectorySec+0xbc2>
mov    0x40(%rbx),%rax
and    $0x20,%rax
test   %rax,%rax
je     1d6e5 <TIFFWriteDirectorySec+0x625>
mov    %rbx,%rdi
mov    %r14,%rsi
mov    %r13,%rdx
mov    $0x141,%ecx
mov    %r15,%r8
mov    -0x48(%rbp),%r9
callq  1f010 <TIFFWriteDirectoryTagShortArray>
test   %eax,%eax
je     1dc8a <TIFFWriteDirectorySec+0xbca>
mov    0x40(%rbx),%rax
and    $0x80,%rax
test   %rax,%rax
je     1d716 <TIFFWriteDirectorySec+0x656>
mov    %r15,%r8
mov    %rbx,%rdi
mov    %r14,%rsi
mov    %r13,%rdx
mov    $0x212,%ecx
mov    -0x40(%rbp),%r9
callq  1f010 <TIFFWriteDirectoryTagShortArray>
test   %eax,%eax
je     1dc92 <TIFFWriteDirectorySec+0xbd2>
mov    0x40(%rbx),%rax
and    $0x100,%rax
test   %rax,%rax
jne    1dc9a <TIFFWriteDirectorySec+0xbda>
mov    0x40(%rbx),%rax
and    $0x200,%rax
test   %rax,%rax
je     1d760 <TIFFWriteDirectorySec+0x6a0>
mov    0x128(%rbx),%r9
mov    %rbx,%rdi
mov    %r14,%rsi
mov    %r13,%rdx
mov    $0x214,%ecx
mov    $0x6,%r8d
callq  1f1e0 <TIFFWriteDirectoryTagRationalArray>
test   %eax,%eax
je     1dcc5 <TIFFWriteDirectorySec+0xc05>
mov    0x40(%rbx),%rax
and    $0x1000,%rax
test   %rax,%rax
je     1d785 <TIFFWriteDirectorySec+0x6c5>
mov    %rbx,%rdi
mov    %r14,%rsi
mov    %r13,%rdx
callq  1f660 <TIFFWriteDirectoryTagTransferfunction>
test   %eax,%eax
je     1dccd <TIFFWriteDirectorySec+0xc0d>
mov    0x40(%rbx),%rax
and    $0x4000,%rax
test   %rax,%rax
jne    1dcd5 <TIFFWriteDirectorySec+0xc15>
mov    0x40(%rbx),%rax
and    $0x20000,%rax
test   %rax,%rax
jne    1dd06 <TIFFWriteDirectorySec+0xc46>
lea    -0x70(%rbp),%r9
lea    -0x74(%rbp),%r11
lea    -0x78(%rbp),%rdx
lea    -0x7a(%rbp),%r10
lea    -0x88(%rbp),%r8
mov    $0x1,%eax
jmpq   1ddae <TIFFWriteDirectorySec+0xcee>
mov    %r12d,%eax
lea    (%rax,%rax,2),%rax
shl    $0x3,%rax
add    0x148(%rbx),%rax
mov    (%rax),%rdx
movzwl (%rdx),%ecx
mov    0x8(%rax),%r8d
mov    0x8(%rdx),%edx
add    $0xffffffff,%edx
cmp    $0x11,%edx
ja     1ddcd <TIFFWriteDirectorySec+0xd0d>
lea    0x36d3a(%rip),%rsi        # 54538 <module.110+0x1d9>
movslq (%rsi,%rdx,4),%rdx
add    %rsi,%rdx
jmpq   *%rdx
mov    0x10(%rax),%r9
mov    %rbx,%rdi
mov    %r14,%rsi
mov    %r13,%rdx
callq  1f3e0 <TIFFWriteDirectoryTagIfdIfd8Array>
test   %eax,%eax
je     1e017 <TIFFWriteDirectorySec+0xf57>
add    $0x1,%r12d
mov    0x140(%rbx),%eax
cmp    %r12d,%eax
ja     1d7cc <TIFFWriteDirectorySec+0x70c>
test   %r13,%r13
je     1e022 <TIFFWriteDirectorySec+0xf62>
mov    -0x60(%rbp),%rax
test   %eax,%eax
je     1e156 <TIFFWriteDirectorySec+0x1096>
mov    0x40(%rbx),%rax
and    $0x20000,%rax
test   %rax,%rax
je     1e156 <TIFFWriteDirectorySec+0x1096>
mov    0x2a0(%rbx),%rax
test   %rax,%rax
jne    1e156 <TIFFWriteDirectorySec+0x1096>
xor    %eax,%eax
mov    %r13,%rcx
jmpq   1e1d7 <TIFFWriteDirectorySec+0x1117>
and    $0xffffefff,%eax
mov    %eax,0x10(%rbx)
mov    %r12,%r14
mov    %rcx,%r12
mov    0x2f0(%rbx),%rax
mov    %rbx,%rdi
callq  *%rax
test   %eax,%eax
je     1e205 <TIFFWriteDirectorySec+0x1145>
xor    %r12d,%r12d
jmpq   1d1c1 <TIFFWriteDirectorySec+0x101>
mov    0x10(%rbx),%eax
and    $0x40,%eax
test   %eax,%eax
je     1d1da <TIFFWriteDirectorySec+0x11a>
mov    %rbx,%rdi
callq  86e0 <TIFFFlushData1@plt>
test   %eax,%eax
jne    1d1da <TIFFWriteDirectorySec+0x11a>
xor    %eax,%eax
mov    0x3b8(%rbx),%rdi
lea    0x36f33(%rip),%rdx        # 547fd <module.26+0x41>
lea    0x36eeb(%rip),%rsi        # 547bc <module.26>
callq  8a00 <TIFFErrorExt@plt>
mov    %r12,%rax
mov    %r14,%r12
mov    %r13,%rbx
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r13
leaveq 
retq   
mov    0x368(%rbx),%rdi
test   %rdi,%rdi
je     1d1ea <TIFFWriteDirectorySec+0x12a>
callq  8bb0 <_TIFFfree@plt>
movq   $0x0,0x368(%rbx)
movq   $0x0,0x390(%rbx)
movq   $0x0,0x370(%rbx)
movq   $0x0,0x378(%rbx)
movq   $0x0,0x380(%rbx)
jmpq   1d1ea <TIFFWriteDirectorySec+0x12a>
xor    %r12d,%r12d
mov    %r12,%r14
jmpq   1e252 <TIFFWriteDirectorySec+0x1192>
xor    %r12d,%r12d
mov    %r12,%r14
jmpq   1e252 <TIFFWriteDirectorySec+0x1192>
xor    %r12d,%r12d
mov    %r12,%r14
jmpq   1e252 <TIFFWriteDirectorySec+0x1192>
xor    %r12d,%r12d
mov    %r12,%r14
jmpq   1e252 <TIFFWriteDirectorySec+0x1192>
xor    %r12d,%r12d
mov    %r12,%r14
jmpq   1e252 <TIFFWriteDirectorySec+0x1192>
xor    %r12d,%r12d
mov    %r12,%r14
jmpq   1e252 <TIFFWriteDirectorySec+0x1192>
xor    %r12d,%r12d
mov    %r12,%r14
jmpq   1e252 <TIFFWriteDirectorySec+0x1192>
xor    %r12d,%r12d
mov    %r12,%r14
jmpq   1e252 <TIFFWriteDirectorySec+0x1192>
mov    %rcx,%r15
mov    %rax,%rcx
mov    0x70(%rbx),%r8d
mov    %rbx,%rdi
mov    %r14,%rsi
mov    %r13,%rdx
callq  1f120 <TIFFWriteDirectoryTagLong>
test   %eax,%eax
je     1e281 <TIFFWriteDirectorySec+0x11c1>
mov    %r15,%rcx
jmpq   1d402 <TIFFWriteDirectorySec+0x342>
mov    %r12,%r14
jmpq   1e252 <TIFFWriteDirectorySec+0x1192>
movzwl 0x78(%rbx),%r8d
mov    %rbx,%rdi
mov    %r14,%rsi
mov    %r13,%rdx
mov    $0x103,%ecx
callq  1eff0 <TIFFWriteDirectoryTagShort>
test   %eax,%eax
jne    1d43d <TIFFWriteDirectorySec+0x37d>
mov    %r12,%r14
jmpq   1e252 <TIFFWriteDirectorySec+0x1192>
movzwl 0x7a(%rbx),%r8d
mov    %rbx,%rdi
mov    %r14,%rsi
mov    %r13,%rdx
mov    $0x106,%ecx
callq  1eff0 <TIFFWriteDirectoryTagShort>
test   %eax,%eax
jne    1d450 <TIFFWriteDirectorySec+0x390>
mov    %r12,%r14
jmpq   1e252 <TIFFWriteDirectorySec+0x1192>
movzwl 0x7c(%rbx),%r8d
mov    %rbx,%rdi
mov    %r14,%rsi
mov    %r13,%rdx
mov    $0x107,%ecx
callq  1eff0 <TIFFWriteDirectoryTagShort>
test   %eax,%eax
jne    1d463 <TIFFWriteDirectorySec+0x3a3>
mov    %r12,%r14
jmpq   1e252 <TIFFWriteDirectorySec+0x1192>
mov    %r12,%r14
jmpq   1e252 <TIFFWriteDirectorySec+0x1192>
mov    %r12,%r14
jmpq   1e252 <TIFFWriteDirectorySec+0x1192>
movzwl 0x82(%rbx),%r8d
mov    %rbx,%rdi
mov    %r14,%rsi
mov    %r13,%rdx
mov    $0x115,%ecx
callq  1eff0 <TIFFWriteDirectoryTagShort>
test   %eax,%eax
jne    1d4d7 <TIFFWriteDirectorySec+0x417>
mov    %r12,%r14
jmpq   1e252 <TIFFWriteDirectorySec+0x1192>
mov    %r12,%r14
jmpq   1e252 <TIFFWriteDirectorySec+0x1192>
mov    %r12,%r14
jmpq   1e252 <TIFFWriteDirectorySec+0x1192>
movzwl 0x8a(%rbx),%r8d
mov    %rbx,%rdi
mov    %r14,%rsi
mov    %r13,%rdx
mov    $0x119,%ecx
callq  1f030 <TIFFWriteDirectoryTagShortPerSample>
test   %eax,%eax
jne    1d54d <TIFFWriteDirectorySec+0x48d>
mov    %r12,%r14
jmpq   1e252 <TIFFWriteDirectorySec+0x1192>
movzwl 0xaa(%rbx),%r8d
mov    %rbx,%rdi
mov    %r14,%rsi
mov    %r13,%rdx
mov    $0x11c,%ecx
callq  1eff0 <TIFFWriteDirectoryTagShort>
test   %eax,%eax
jne    1d560 <TIFFWriteDirectorySec+0x4a0>
mov    %r12,%r14
jmpq   1e252 <TIFFWriteDirectorySec+0x1192>
movzwl 0xa8(%rbx),%r8d
mov    %rbx,%rdi
mov    %r14,%rsi
mov    %r13,%rdx
mov    $0x128,%ecx
callq  1eff0 <TIFFWriteDirectoryTagShort>
test   %eax,%eax
jne    1d573 <TIFFWriteDirectorySec+0x4b3>
mov    %r12,%r14
jmpq   1e252 <TIFFWriteDirectorySec+0x1192>
mov    %rbx,%rdi
mov    %r14,%rsi
mov    %r13,%rdx
mov    $0x129,%ecx
mov    $0x2,%r15d
mov    %r15,%r8
mov    -0x50(%rbp),%r9
callq  1f010 <TIFFWriteDirectoryTagShortArray>
test   %eax,%eax
jne    1d58c <TIFFWriteDirectorySec+0x4cc>
mov    %r12,%r14
jmpq   1e252 <TIFFWriteDirectorySec+0x1192>
mov    0x10(%rbx),%eax
and    $0x400,%eax
test   %eax,%eax
jne    1e286 <TIFFWriteDirectorySec+0x11c6>
mov    0xe4(%rbx),%r8d
mov    0xf0(%rbx),%r9
mov    %rbx,%rdi
mov    %r14,%rsi
mov    %r13,%rdx
mov    $0x117,%ecx
callq  1f2b0 <TIFFWriteDirectoryTagLongLong8Array>
test   %eax,%eax
jne    1d59f <TIFFWriteDirectorySec+0x4df>
mov    %r12,%r14
jmpq   1e252 <TIFFWriteDirectorySec+0x1192>
mov    0x10(%rbx),%eax
and    $0x400,%eax
test   %eax,%eax
jne    1e2b4 <TIFFWriteDirectorySec+0x11f4>
mov    0xe8(%rbx),%r9
test   %r9,%r9
je     1d5b2 <TIFFWriteDirectorySec+0x4f2>
mov    0xe4(%rbx),%r8d
mov    %rbx,%rdi
mov    %r14,%rsi
mov    %r13,%rdx
mov    $0x111,%ecx
callq  1f2b0 <TIFFWriteDirectoryTagLongLong8Array>
test   %eax,%eax
jne    1d5b2 <TIFFWriteDirectorySec+0x4f2>
mov    %r12,%r14
jmpq   1e252 <TIFFWriteDirectorySec+0x1192>
mov    %rbx,%rdi
mov    %r14,%rsi
mov    %r13,%rdx
callq  1f510 <TIFFWriteDirectoryTagColormap>
test   %eax,%eax
jne    1d5c5 <TIFFWriteDirectorySec+0x505>
mov    %r12,%r14
jmpq   1e252 <TIFFWriteDirectorySec+0x1192>
xor    %r12d,%r12d
mov    %r12,%r14
jmpq   1e252 <TIFFWriteDirectorySec+0x1192>
movzwl 0x76(%rbx),%r8d
mov    %rbx,%rdi
mov    %r14,%rsi
mov    %r13,%rdx
mov    $0x153,%ecx
callq  1f030 <TIFFWriteDirectoryTagShortPerSample>
test   %eax,%eax
jne    1d63c <TIFFWriteDirectorySec+0x57c>
mov    %r12,%r14
jmpq   1e252 <TIFFWriteDirectorySec+0x1192>
movzwl 0x82(%rbx),%r8d
mov    0x90(%rbx),%r9
mov    %rbx,%rdi
mov    %r14,%rsi
mov    %r13,%rdx
mov    $0x154,%ecx
callq  1ead0 <TIFFWriteDirectoryTagSampleformatArray>
test   %eax,%eax
jne    1d64d <TIFFWriteDirectorySec+0x58d>
mov    %r12,%r14
jmpq   1e252 <TIFFWriteDirectorySec+0x1192>
movzwl 0x82(%rbx),%r8d
mov    0x98(%rbx),%r9
mov    %rbx,%rdi
mov    %r14,%rsi
mov    %r13,%rdx
mov    $0x155,%ecx
callq  1ead0 <TIFFWriteDirectoryTagSampleformatArray>
test   %eax,%eax
jne    1d65e <TIFFWriteDirectorySec+0x59e>
mov    %r12,%r14
jmpq   1e252 <TIFFWriteDirectorySec+0x1192>
mov    %r12,%r14
jmpq   1e252 <TIFFWriteDirectorySec+0x1192>
mov    %r12,%r14
jmpq   1e252 <TIFFWriteDirectorySec+0x1192>
mov    %r12,%r14
jmpq   1e252 <TIFFWriteDirectorySec+0x1192>
mov    %r12,%r14
jmpq   1e252 <TIFFWriteDirectorySec+0x1192>
movzwl 0x10c(%rbx),%r8d
mov    %rbx,%rdi
mov    %r14,%rsi
mov    %r13,%rdx
mov    $0x213,%ecx
callq  1eff0 <TIFFWriteDirectoryTagShort>
test   %eax,%eax
jne    1d729 <TIFFWriteDirectorySec+0x669>
mov    %r12,%r14
jmpq   1e252 <TIFFWriteDirectorySec+0x1192>
mov    %r12,%r14
jmpq   1e252 <TIFFWriteDirectorySec+0x1192>
mov    %r12,%r14
jmpq   1e252 <TIFFWriteDirectorySec+0x1192>
mov    0x130(%rbx),%r8d
mov    0x138(%rbx),%r9
mov    %rbx,%rdi
mov    %r14,%rsi
mov    %r13,%rdx
mov    $0x14d,%ecx
callq  1ef70 <TIFFWriteDirectoryTagAscii>
test   %eax,%eax
jne    1d798 <TIFFWriteDirectorySec+0x6d8>
mov    %r12,%r14
jmpq   1e252 <TIFFWriteDirectorySec+0x1192>
mov    %rbx,%rdi
mov    %r14,%rsi
mov    %r13,%rdx
callq  1f870 <TIFFWriteDirectoryTagSubifd>
test   %eax,%eax
je     1e2e5 <TIFFWriteDirectorySec+0x1225>
lea    -0x70(%rbp),%r9
lea    -0x74(%rbp),%r11
lea    -0x78(%rbp),%rdx
lea    -0x7a(%rbp),%r10
lea    -0x88(%rbp),%r8
mov    $0x1,%eax
jmp    1ddae <TIFFWriteDirectorySec+0xcee>
mov    0x8(%r15),%eax
cmp    $0x4,%eax
jne    1e2ed <TIFFWriteDirectorySec+0x122d>
movswq 0x4(%r15),%rax
cmp    $0x1,%ax
jne    1e30c <TIFFWriteDirectorySec+0x124c>
movzbl 0x1b(%r15),%eax
test   %al,%al
jne    1e32b <TIFFWriteDirectorySec+0x126b>
xor    %eax,%eax
mov    (%r15),%esi
mov    %rbx,%rdi
callq  8230 <TIFFGetField@plt>
movzwl (%r15),%ecx
mov    -0x78(%rbp),%r8d
mov    %rbx,%rdi
mov    %r14,%rsi
mov    %r13,%rdx
callq  1f120 <TIFFWriteDirectoryTagLong>
test   %eax,%eax
je     1e34a <TIFFWriteDirectorySec+0x128a>
lea    -0x70(%rbp),%r9
lea    -0x74(%rbp),%r11
lea    -0x78(%rbp),%rdx
lea    -0x7a(%rbp),%r10
lea    -0x88(%rbp),%r8
mov    $0x1,%eax
add    $0x1,%r12d
mov    0x3f8(%rbx),%rsi
mov    %r12d,%ecx
cmp    %rcx,%rsi
ja     1e355 <TIFFWriteDirectorySec+0x1295>
mov    -0x38(%rbp),%r15
xor    %r12d,%r12d
jmpq   1d825 <TIFFWriteDirectorySec+0x765>
mov    $0x30a,%edx
lea    0x36a69(%rip),%rsi        # 54842 <module.26+0x86>
lea    0x36a71(%rip),%rcx        # 54851 <module.26+0x95>
lea    0x36b58(%rip),%rdi        # 5493f <module.26+0x183>
callq  8490 <__assert_fail@plt>
mov    0x10(%rax),%r9
mov    %rbx,%rdi
mov    %r14,%rsi
mov    %r13,%rdx
callq  1ef70 <TIFFWriteDirectoryTagAscii>
test   %eax,%eax
jne    1d821 <TIFFWriteDirectorySec+0x761>
xor    %r12d,%r12d
mov    %r12,%r14
jmpq   1e252 <TIFFWriteDirectorySec+0x1192>
mov    0x10(%rax),%r9
mov    %rbx,%rdi
mov    %r14,%rsi
mov    %r13,%rdx
callq  1ef90 <TIFFWriteDirectoryTagUndefinedArray>
test   %eax,%eax
jne    1d821 <TIFFWriteDirectorySec+0x761>
xor    %r12d,%r12d
mov    %r12,%r14
jmpq   1e252 <TIFFWriteDirectorySec+0x1192>
mov    0x10(%rax),%r9
mov    %rbx,%rdi
mov    %r14,%rsi
mov    %r13,%rdx
callq  1efb0 <TIFFWriteDirectoryTagByteArray>
test   %eax,%eax
jne    1d821 <TIFFWriteDirectorySec+0x761>
xor    %r12d,%r12d
mov    %r12,%r14
jmpq   1e252 <TIFFWriteDirectorySec+0x1192>
mov    0x10(%rax),%r9
mov    %rbx,%rdi
mov    %r14,%rsi
mov    %r13,%rdx
callq  1efd0 <TIFFWriteDirectoryTagSbyteArray>
test   %eax,%eax
jne    1d821 <TIFFWriteDirectorySec+0x761>
xor    %r12d,%r12d
mov    %r12,%r14
jmpq   1e252 <TIFFWriteDirectorySec+0x1192>
mov    0x10(%rax),%r9
mov    %rbx,%rdi
mov    %r14,%rsi
mov    %r13,%rdx
callq  1f010 <TIFFWriteDirectoryTagShortArray>
test   %eax,%eax
jne    1d821 <TIFFWriteDirectorySec+0x761>
xor    %r12d,%r12d
mov    %r12,%r14
jmpq   1e252 <TIFFWriteDirectorySec+0x1192>
mov    0x10(%rax),%r9
mov    %rbx,%rdi
mov    %r14,%rsi
mov    %r13,%rdx
callq  1f100 <TIFFWriteDirectoryTagSshortArray>
test   %eax,%eax
jne    1d821 <TIFFWriteDirectorySec+0x761>
xor    %r12d,%r12d
mov    %r12,%r14
jmpq   1e252 <TIFFWriteDirectorySec+0x1192>
mov    0x10(%rax),%r9
mov    %rbx,%rdi
mov    %r14,%rsi
mov    %r13,%rdx
callq  1f140 <TIFFWriteDirectoryTagLongArray>
test   %eax,%eax
jne    1d821 <TIFFWriteDirectorySec+0x761>
xor    %r12d,%r12d
mov    %r12,%r14
jmpq   1e252 <TIFFWriteDirectorySec+0x1192>
mov    0x10(%rax),%r9
mov    %rbx,%rdi
mov    %r14,%rsi
mov    %r13,%rdx
callq  1f160 <TIFFWriteDirectoryTagSlongArray>
test   %eax,%eax
jne    1d821 <TIFFWriteDirectorySec+0x761>
xor    %r12d,%r12d
mov    %r12,%r14
jmpq   1e252 <TIFFWriteDirectorySec+0x1192>
mov    0x10(%rax),%r9
mov    %rbx,%rdi
mov    %r14,%rsi
mov    %r13,%rdx
callq  1f180 <TIFFWriteDirectoryTagLong8Array>
test   %eax,%eax
jne    1d821 <TIFFWriteDirectorySec+0x761>
xor    %r12d,%r12d
mov    %r12,%r14
jmpq   1e252 <TIFFWriteDirectorySec+0x1192>
mov    0x10(%rax),%r9
mov    %rbx,%rdi
mov    %r14,%rsi
mov    %r13,%rdx
callq  1f1a0 <TIFFWriteDirectoryTagSlong8Array>
test   %eax,%eax
jne    1d821 <TIFFWriteDirectorySec+0x761>
xor    %r12d,%r12d
mov    %r12,%r14
jmpq   1e252 <TIFFWriteDirectorySec+0x1192>
mov    0x10(%rax),%r9
mov    %rbx,%rdi
mov    %r14,%rsi
mov    %r13,%rdx
callq  1f1e0 <TIFFWriteDirectoryTagRationalArray>
test   %eax,%eax
jne    1d821 <TIFFWriteDirectorySec+0x761>
xor    %r12d,%r12d
mov    %r12,%r14
jmpq   1e252 <TIFFWriteDirectorySec+0x1192>
mov    0x10(%rax),%r9
mov    %rbx,%rdi
mov    %r14,%rsi
mov    %r13,%rdx
callq  1f200 <TIFFWriteDirectoryTagSrationalArray>
test   %eax,%eax
jne    1d821 <TIFFWriteDirectorySec+0x761>
xor    %r12d,%r12d
mov    %r12,%r14
jmpq   1e252 <TIFFWriteDirectorySec+0x1192>
mov    0x10(%rax),%r9
mov    %rbx,%rdi
mov    %r14,%rsi
mov    %r13,%rdx
callq  1f220 <TIFFWriteDirectoryTagFloatArray>
test   %eax,%eax
jne    1d821 <TIFFWriteDirectorySec+0x761>
xor    %r12d,%r12d
mov    %r12,%r14
jmpq   1e252 <TIFFWriteDirectorySec+0x1192>
mov    0x10(%rax),%r9
mov    %rbx,%rdi
mov    %r14,%rsi
mov    %r13,%rdx
callq  1f240 <TIFFWriteDirectoryTagDoubleArray>
test   %eax,%eax
jne    1d821 <TIFFWriteDirectorySec+0x761>
xor    %r12d,%r12d
mov    %r12,%r14
jmpq   1e252 <TIFFWriteDirectorySec+0x1192>
mov    0x10(%rax),%r9
mov    %rbx,%rdi
mov    %r14,%rsi
mov    %r13,%rdx
callq  1f260 <TIFFWriteDirectoryTagIfdArray>
test   %eax,%eax
jne    1d821 <TIFFWriteDirectorySec+0x761>
xor    %r12d,%r12d
mov    %r12,%r14
jmpq   1e252 <TIFFWriteDirectorySec+0x1192>
xor    %r12d,%r12d
mov    %r12,%r14
jmpq   1e252 <TIFFWriteDirectorySec+0x1192>
mov    -0x98(%rbp),%eax
lea    (%rax,%rax,2),%rdi
shl    $0x3,%rdi
callq  8440 <_TIFFmalloc@plt>
test   %rax,%rax
je     1e432 <TIFFWriteDirectorySec+0x1372>
mov    -0x60(%rbp),%r15
test   %r15d,%r15d
jne    1e45c <TIFFWriteDirectorySec+0x139c>
mov    %rax,%r13
mov    0x3d0(%rbx),%rcx
mov    0x3b8(%rbx),%rdi
xor    %r12d,%r12d
mov    %r12,%rsi
mov    $0x2,%edx
callq  *%rcx
add    $0x1,%rax
and    $0xfffffffffffffffe,%rax
mov    %rax,0x18(%rbx)
mov    -0x58(%rbp),%rcx
test   %rcx,%rcx
je     1e085 <TIFFWriteDirectorySec+0xfc5>
mov    0x18(%rbx),%rax
mov    %rax,(%rcx)
mov    0x10(%rbx),%eax
and    $0x80000,%eax
test   %eax,%eax
jne    1e474 <TIFFWriteDirectorySec+0x13b4>
mov    -0x98(%rbp),%eax
lea    (%rax,%rax,2),%eax
lea    0x6(,%rax,4),%eax
mov    %rax,-0x38(%rbp)
mov    %eax,%edx
mov    %rdx,%rcx
add    0x18(%rbx),%rcx
mov    %rcx,0x290(%rbx)
mov    0x10(%rbx),%eax
and    $0x80000,%eax
test   %eax,%eax
jne    1e0ce <TIFFWriteDirectorySec+0x100e>
mov    %ecx,%eax
mov    %rax,0x290(%rbx)
mov    0x290(%rbx),%rcx
cmp    0x18(%rbx),%rcx
jb     1e233 <TIFFWriteDirectorySec+0x1173>
cmp    %rcx,%rdx
ja     1e233 <TIFFWriteDirectorySec+0x1173>
mov    %rcx,%rax
and    $0x1,%rax
test   %rax,%rax
je     1e0ff <TIFFWriteDirectorySec+0x103f>
lea    0x1(%rcx),%rax
mov    %rax,0x290(%rbx)
test   %r15d,%r15d
jne    1e489 <TIFFWriteDirectorySec+0x13c9>
mov    $0x143,%edi
mov    $0x11a,%r9d
mov    $0x101,%esi
mov    $0x142,%r11d
mov    $0x100,%edx
mov    $0x102,%ecx
mov    $0xfe,%eax
mov    $0x11e,%r8d
mov    $0x11b,%r10d
jmpq   1d183 <TIFFWriteDirectorySec+0xc3>
lea    (%rax,%rax,4),%eax
shl    $0x2,%eax
mov    %eax,%ecx
mov    0x18(%rbx),%rax
lea    0x14(%rcx,%rax,1),%rax
mov    %rax,0x2a0(%rbx)
mov    %r15d,%r14d
mov    %r14,%rdi
callq  8440 <_TIFFmalloc@plt>
test   %rax,%rax
je     1e4d0 <TIFFWriteDirectorySec+0x1410>
mov    0x10(%rbx),%ecx
and    $0x80000,%ecx
test   %ecx,%ecx
jne    1e4f7 <TIFFWriteDirectorySec+0x1437>
movzwl -0x98(%rbp),%ecx
mov    %cx,(%rax)
mov    0x10(%rbx),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
je     1e1a0 <TIFFWriteDirectorySec+0x10e0>
mov    %rax,%r12
mov    %r12,%rdi
callq  87c0 <TIFFSwabShort@plt>
mov    %r12,%rax
lea    -0x64(%rbp),%rsi
mov    $0x4,%r15d
lea    0x2(%rax),%r12
mov    %r13,-0x60(%rbp)
mov    %rax,-0x50(%rbp)
mov    %r14,-0x58(%rbp)
xor    %r14d,%r14d
jmpq   1e5e2 <TIFFWriteDirectorySec+0x1522>
movzwl (%rcx),%edx
cmp    $0x14a,%dx
je     1e667 <TIFFWriteDirectorySec+0x15a7>
add    $0x18,%rcx
add    $0x1,%eax
mov    -0x98(%rbp),%edx
cmp    %eax,%edx
jne    1e1c2 <TIFFWriteDirectorySec+0x1102>
xor    %eax,%eax
mov    0x3b8(%rbx),%rdi
lea    0x3677e(%rip),%rdx        # 5496f <module.26+0x1b3>
lea    0x365c4(%rip),%rsi        # 547bc <module.26>
callq  8a00 <TIFFErrorExt@plt>
xor    %r12d,%r12d
mov    %r12,%r14
jmp    1e252 <TIFFWriteDirectorySec+0x1192>
xor    %eax,%eax
mov    0x3b8(%rbx),%rdi
mov    %r12,%rsi
lea    0x365ba(%rip),%rdx        # 547d2 <module.26+0x16>
callq  8a00 <TIFFErrorExt@plt>
mov    %r13,%rbx
mov    %r14,%r12
xor    %eax,%eax
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r13
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rbx),%rdi
lea    0x3670c(%rip),%rdx        # 5494f <module.26+0x193>
lea    0x36572(%rip),%rsi        # 547bc <module.26>
callq  8a00 <TIFFErrorExt@plt>
mov    %r12,%r14
test   %r13,%r13
je     1e25f <TIFFWriteDirectorySec+0x119f>
mov    %r13,%rdi
callq  8bb0 <_TIFFfree@plt>
test   %r14,%r14
jne    1e695 <TIFFWriteDirectorySec+0x15d5>
mov    %r12,%rax
mov    -0x18(%rbp),%r12
mov    -0x10(%rbp),%rbx
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r13
leaveq 
retq   
mov    %r12,%r14
jmp    1e252 <TIFFWriteDirectorySec+0x1192>
mov    0xe4(%rbx),%r8d
mov    0xf0(%rbx),%r9
mov    %rbx,%rdi
mov    %r14,%rsi
mov    %r13,%rdx
mov    $0x145,%ecx
callq  1f2b0 <TIFFWriteDirectoryTagLongLong8Array>
test   %eax,%eax
jne    1d59f <TIFFWriteDirectorySec+0x4df>
mov    %r12,%r14
jmp    1e252 <TIFFWriteDirectorySec+0x1192>
mov    0xe4(%rbx),%r8d
mov    0xe8(%rbx),%r9
mov    %rbx,%rdi
mov    %r14,%rsi
mov    %r13,%rdx
mov    $0x144,%ecx
callq  1f2b0 <TIFFWriteDirectoryTagLongLong8Array>
test   %eax,%eax
jne    1d5b2 <TIFFWriteDirectorySec+0x4f2>
mov    %r12,%r14
jmpq   1e252 <TIFFWriteDirectorySec+0x1192>
mov    %r12,%r14
jmpq   1e252 <TIFFWriteDirectorySec+0x1192>
lea    0x365db(%rip),%rdi        # 548cf <module.26+0x113>
mov    $0x2a7,%edx
lea    0x36542(%rip),%rsi        # 54842 <module.26+0x86>
lea    0x3654a(%rip),%rcx        # 54851 <module.26+0x95>
callq  8490 <__assert_fail@plt>
mov    $0x2a8,%edx
lea    0x3652a(%rip),%rsi        # 54842 <module.26+0x86>
lea    0x36532(%rip),%rcx        # 54851 <module.26+0x95>
lea    0x36593(%rip),%rdi        # 548b9 <module.26+0xfd>
callq  8490 <__assert_fail@plt>
mov    $0x2a9,%edx
lea    0x3650b(%rip),%rsi        # 54842 <module.26+0x86>
lea    0x36513(%rip),%rcx        # 54851 <module.26+0x95>
lea    0x36544(%rip),%rdi        # 54889 <module.26+0xcd>
callq  8490 <__assert_fail@plt>
xor    %r12d,%r12d
mov    %r12,%r14
jmpq   1e252 <TIFFWriteDirectorySec+0x1192>
mov    0x3f0(%rbx),%rsi
mov    %r12d,%ecx
mov    (%rsi,%rcx,8),%r15
movzwl 0x18(%r15),%esi
cmp    $0x41,%si
jbe    1ddaa <TIFFWriteDirectorySec+0xcea>
movzwl 0x18(%r15),%ecx
and    $0x1f,%ecx
mov    %rax,%rdi
shl    %cl,%rdi
shr    $0x5,%esi
movslq %esi,%rcx
and    0x38(%rbx,%rcx,8),%rdi
test   %rdi,%rdi
je     1ddaa <TIFFWriteDirectorySec+0xcea>
mov    0x14(%r15),%eax
cmp    $0x5,%eax
jbe    1e6b6 <TIFFWriteDirectorySec+0x15f6>
cmp    $0x6,%eax
je     1dd3a <TIFFWriteDirectorySec+0xc7a>
cmp    $0x28,%eax
jne    1e73d <TIFFWriteDirectorySec+0x167d>
mov    0x8(%r15),%eax
cmp    $0x7,%eax
jne    1e75c <TIFFWriteDirectorySec+0x169c>
movswq 0x4(%r15),%rax
cmp    $0xfffd,%ax
jne    1e77b <TIFFWriteDirectorySec+0x16bb>
movzbl 0x1b(%r15),%eax
cmp    $0x1,%al
jne    1e79a <TIFFWriteDirectorySec+0x16da>
mov    %r9,%rcx
mov    %r11,%rdx
xor    %eax,%eax
mov    (%r15),%esi
mov    %rbx,%rdi
callq  8230 <TIFFGetField@plt>
movzwl (%r15),%ecx
mov    -0x74(%rbp),%r8d
mov    -0x70(%rbp),%r9
mov    %rbx,%rdi
mov    %r14,%rsi
mov    %r13,%rdx
callq  1ef90 <TIFFWriteDirectoryTagUndefinedArray>
test   %eax,%eax
je     1e7b9 <TIFFWriteDirectorySec+0x16f9>
lea    -0x70(%rbp),%r9
lea    -0x74(%rbp),%r11
lea    -0x78(%rbp),%rdx
lea    -0x7a(%rbp),%r10
lea    -0x88(%rbp),%r8
mov    $0x1,%eax
jmpq   1ddaa <TIFFWriteDirectorySec+0xcea>
xor    %eax,%eax
mov    0x3b8(%rbx),%rdi
lea    0x3637a(%rip),%rsi        # 547bc <module.26>
lea    0x364f8(%rip),%rdx        # 54941 <module.26+0x185>
callq  8a00 <TIFFErrorExt@plt>
xor    %r12d,%r12d
mov    %r12,%r13
mov    %r13,%r14
jmpq   1e252 <TIFFWriteDirectorySec+0x1192>
mov    0x18(%rbx),%rcx
test   %rcx,%rcx
je     1e7c4 <TIFFWriteDirectorySec+0x1704>
mov    %rax,%r13
xor    %r12d,%r12d
jmpq   1e075 <TIFFWriteDirectorySec+0xfb5>
mov    -0x98(%rbp),%eax
lea    (%rax,%rax,4),%eax
lea    0x10(,%rax,4),%eax
jmpq   1e0a5 <TIFFWriteDirectorySec+0xfe5>
movzwl 0x280(%rbx),%eax
add    $0x1,%eax
mov    %ax,0x280(%rbx)
mov    $0x143,%edi
mov    $0x11a,%r9d
mov    $0x101,%esi
mov    $0x142,%r11d
mov    $0x100,%edx
mov    $0x102,%ecx
mov    $0xfe,%eax
mov    $0x11e,%r8d
mov    $0x11b,%r10d
jmpq   1d183 <TIFFWriteDirectorySec+0xc3>
xor    %eax,%eax
mov    0x3b8(%rbx),%rdi
lea    0x362dc(%rip),%rsi        # 547bc <module.26>
lea    0x3645a(%rip),%rdx        # 54941 <module.26+0x185>
callq  8a00 <TIFFErrorExt@plt>
xor    %r12d,%r12d
mov    %r12,%r14
jmpq   1e252 <TIFFWriteDirectorySec+0x1192>
mov    -0x98(%rbp),%ecx
mov    %rcx,(%rax)
mov    0x10(%rbx),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
je     1e51b <TIFFWriteDirectorySec+0x145b>
mov    %rax,%r12
mov    %r12,%rdi
callq  8730 <TIFFSwabLong8@plt>
mov    %r12,%rax
mov    $0x8,%r15d
lea    0x8(%rax),%r12
mov    %r13,-0x60(%rbp)
mov    %rax,-0x50(%rbp)
mov    %r14,-0x58(%rbp)
xor    %r14d,%r14d
jmpq   1e869 <TIFFWriteDirectorySec+0x17a9>
movzwl 0x0(%r13),%eax
mov    %ax,(%r12)
mov    0x10(%rbx),%eax
and    $0x80,%eax
test   %eax,%eax
je     1e563 <TIFFWriteDirectorySec+0x14a3>
mov    %rsi,%r15
mov    %r12,%rdi
callq  87c0 <TIFFSwabShort@plt>
mov    %r15,%rsi
mov    $0x4,%r15d
movzwl 0x2(%r13),%eax
mov    %ax,0x2(%r12)
mov    0x10(%rbx),%eax
and    $0x80,%eax
test   %eax,%eax
je     1e590 <TIFFWriteDirectorySec+0x14d0>
mov    %rsi,%r15
lea    0x2(%r12),%rdi
callq  87c0 <TIFFSwabShort@plt>
mov    %r15,%rsi
mov    $0x4,%r15d
mov    0x8(%r13),%eax
mov    %eax,-0x64(%rbp)
mov    %r15,%rdx
lea    0x4(%r12),%rdi
mov    %rdi,%r15
callq  8790 <_TIFFmemcpy@plt>
mov    0x10(%rbx),%eax
and    $0x80,%eax
test   %eax,%eax
je     1e5bb <TIFFWriteDirectorySec+0x14fb>
mov    %r15,%rdi
callq  8480 <TIFFSwabLong@plt>
lea    0x8(%r12),%rdi
lea    0x10(%r13),%rsi
mov    $0x4,%r15d
mov    %r15,%rdx
callq  8790 <_TIFFmemcpy@plt>
add    $0xc,%r12
add    $0x18,%r13
add    $0x1,%r14d
lea    -0x64(%rbp),%rsi
mov    -0x98(%rbp),%eax
cmp    %r14d,%eax
ja     1e539 <TIFFWriteDirectorySec+0x1479>
mov    0x20(%rbx),%eax
mov    %eax,-0x64(%rbp)
mov    0x10(%rbx),%eax
and    $0x80,%eax
test   %eax,%eax
je     1e611 <TIFFWriteDirectorySec+0x1551>
mov    %rsi,%r13
mov    %r13,%rdi
callq  8480 <TIFFSwabLong@plt>
mov    %r13,%rsi
mov    %r15,%rdx
mov    %r12,%rdi
callq  8790 <_TIFFmemcpy@plt>
mov    -0x60(%rbp),%rdi
callq  8bb0 <_TIFFfree@plt>
lea    0x3635a(%rip),%r12        # 54986 <module.26+0x1ca>
mov    0x18(%rbx),%rsi
mov    %rbx,%rdi
callq  82f0 <_TIFFSeekOK@plt>
test   %eax,%eax
jne    1e8a4 <TIFFWriteDirectorySec+0x17e4>
xor    %eax,%eax
mov    0x3b8(%rbx),%rdi
mov    %r12,%rdx
lea    0x36169(%rip),%rsi        # 547bc <module.26>
callq  8a00 <TIFFErrorExt@plt>
mov    -0x50(%rbp),%r14
xor    %r12d,%r12d
mov    %r12,%r13
jmpq   1e252 <TIFFWriteDirectorySec+0x1192>
mov    0x10(%rbx),%ecx
and    $0x80000,%ecx
test   %ecx,%ecx
jne    1e13e <TIFFWriteDirectorySec+0x107e>
lea    (%rax,%rax,2),%eax
shl    $0x2,%eax
mov    %eax,%ecx
mov    0x18(%rbx),%rax
lea    0xa(%rcx,%rax,1),%rax
mov    %rax,0x2a0(%rbx)
jmpq   1e156 <TIFFWriteDirectorySec+0x1096>
mov    %r14,%rdi
callq  8bb0 <_TIFFfree@plt>
mov    %r12,%rax
mov    -0x18(%rbp),%r12
mov    -0x10(%rbp),%rbx
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r13
leaveq 
retq   
cmp    $0x1,%eax
je     1e8ee <TIFFWriteDirectorySec+0x182e>
cmp    $0x4,%eax
jne    1e73d <TIFFWriteDirectorySec+0x167d>
mov    0x8(%r15),%eax
cmp    $0x3,%eax
jne    1e981 <TIFFWriteDirectorySec+0x18c1>
movswq 0x4(%r15),%rax
cmp    $0x1,%ax
jne    1e9a0 <TIFFWriteDirectorySec+0x18e0>
movzbl 0x1b(%r15),%eax
test   %al,%al
jne    1e9bf <TIFFWriteDirectorySec+0x18ff>
mov    %r10,%rdx
xor    %eax,%eax
mov    (%r15),%esi
mov    %rbx,%rdi
callq  8230 <TIFFGetField@plt>
movzwl (%r15),%ecx
movzwl -0x7a(%rbp),%r8d
mov    %rbx,%rdi
mov    %r14,%rsi
mov    %r13,%rdx
callq  1eff0 <TIFFWriteDirectoryTagShort>
test   %eax,%eax
je     1e9de <TIFFWriteDirectorySec+0x191e>
lea    -0x70(%rbp),%r9
lea    -0x74(%rbp),%r11
lea    -0x78(%rbp),%rdx
lea    -0x7a(%rbp),%r10
lea    -0x88(%rbp),%r8
mov    $0x1,%eax
jmpq   1ddaa <TIFFWriteDirectorySec+0xcea>
mov    $0x2bc,%edx
lea    0x360f9(%rip),%rsi        # 54842 <module.26+0x86>
lea    0x36101(%rip),%rcx        # 54851 <module.26+0x95>
lea    0x361e8(%rip),%rdi        # 5493f <module.26+0x183>
callq  8490 <__assert_fail@plt>
lea    0x36185(%rip),%rdi        # 548e8 <module.26+0x12c>
mov    $0x2b3,%edx
lea    0x360d3(%rip),%rsi        # 54842 <module.26+0x86>
lea    0x360db(%rip),%rcx        # 54851 <module.26+0x95>
callq  8490 <__assert_fail@plt>
lea    0x36184(%rip),%rdi        # 54906 <module.26+0x14a>
mov    $0x2b4,%edx
lea    0x360b4(%rip),%rsi        # 54842 <module.26+0x86>
lea    0x360bc(%rip),%rcx        # 54851 <module.26+0x95>
callq  8490 <__assert_fail@plt>
lea    0x36188(%rip),%rdi        # 54929 <module.26+0x16d>
mov    $0x2b5,%edx
lea    0x36095(%rip),%rsi        # 54842 <module.26+0x86>
lea    0x3609d(%rip),%rcx        # 54851 <module.26+0x95>
callq  8490 <__assert_fail@plt>
xor    %r12d,%r12d
mov    %r12,%r14
jmpq   1e252 <TIFFWriteDirectorySec+0x1192>
mov    %rax,%r13
mov    %rbx,%rdi
callq  20d00 <TIFFLinkDirectory>
test   %eax,%eax
je     1e9e9 <TIFFWriteDirectorySec+0x1929>
xor    %r12d,%r12d
jmpq   1e075 <TIFFWriteDirectorySec+0xfb5>
movzwl 0x0(%r13),%eax
mov    %ax,(%r12)
mov    0x10(%rbx),%eax
and    $0x80,%eax
test   %eax,%eax
je     1e7fd <TIFFWriteDirectorySec+0x173d>
mov    %r12,%rdi
callq  87c0 <TIFFSwabShort@plt>
movzwl 0x2(%r13),%eax
mov    %ax,0x2(%r12)
mov    0x10(%rbx),%eax
and    $0x80,%eax
test   %eax,%eax
je     1e81e <TIFFWriteDirectorySec+0x175e>
lea    0x2(%r12),%rdi
callq  87c0 <TIFFSwabShort@plt>
mov    %r15,%rdx
lea    0x4(%r12),%rdi
lea    0x8(%r13),%rsi
mov    %rdi,%r15
callq  8790 <_TIFFmemcpy@plt>
mov    0x10(%rbx),%eax
and    $0x80,%eax
test   %eax,%eax
je     1e846 <TIFFWriteDirectorySec+0x1786>
mov    %r15,%rdi
callq  8730 <TIFFSwabLong8@plt>
lea    0xc(%r12),%rdi
lea    0x10(%r13),%rsi
mov    $0x8,%r15d
mov    %r15,%rdx
callq  8790 <_TIFFmemcpy@plt>
add    $0x14,%r12
add    $0x18,%r13
add    $0x1,%r14d
mov    -0x98(%rbp),%eax
cmp    %r14d,%eax
ja     1e7df <TIFFWriteDirectorySec+0x171f>
mov    %r15,%rdx
lea    0x20(%rbx),%rsi
mov    %r12,%rdi
callq  8790 <_TIFFmemcpy@plt>
mov    0x10(%rbx),%eax
and    $0x80,%eax
test   %eax,%eax
je     1e61c <TIFFWriteDirectorySec+0x155c>
mov    %r12,%rdi
callq  8730 <TIFFSwabLong8@plt>
jmpq   1e61c <TIFFWriteDirectorySec+0x155c>
mov    0x3c8(%rbx),%rax
mov    0x3b8(%rbx),%rdi
mov    -0x50(%rbp),%r14
mov    %r14,%rsi
mov    -0x58(%rbp),%r13
mov    %r13,%rdx
callq  *%rax
cmp    %r13,%rax
je     1e9f4 <TIFFWriteDirectorySec+0x1934>
xor    %eax,%eax
mov    0x3b8(%rbx),%rdi
mov    %r12,%rdx
lea    0x35ede(%rip),%rsi        # 547bc <module.26>
callq  8a00 <TIFFErrorExt@plt>
xor    %r12d,%r12d
mov    %r12,%r13
jmpq   1e252 <TIFFWriteDirectorySec+0x1192>
mov    0x8(%r15),%eax
cmp    $0x2,%eax
jne    1ea23 <TIFFWriteDirectorySec+0x1963>
movswq 0x4(%r15),%rax
cmp    $0xffff,%ax
jne    1ea42 <TIFFWriteDirectorySec+0x1982>
movzbl 0x1b(%r15),%eax
test   %al,%al
jne    1ea61 <TIFFWriteDirectorySec+0x19a1>
mov    %r8,%rdx
xor    %eax,%eax
mov    (%r15),%esi
mov    %rbx,%rdi
callq  8230 <TIFFGetField@plt>
mov    %r15,%r14
mov    -0x88(%rbp),%r15
mov    %r15,%rdi
callq  8350 <strlen@plt>
movzwl (%r14),%ecx
mov    %rax,%r8
mov    %r15,%r9
mov    %rbx,%rdi
lea    -0x98(%rbp),%r14
mov    %r14,%rsi
mov    %r13,%rdx
callq  1ef70 <TIFFWriteDirectoryTagAscii>
test   %eax,%eax
je     1ea80 <TIFFWriteDirectorySec+0x19c0>
lea    -0x70(%rbp),%r9
lea    -0x74(%rbp),%r11
lea    -0x78(%rbp),%rdx
lea    -0x7a(%rbp),%r10
lea    -0x88(%rbp),%r8
mov    $0x1,%eax
jmpq   1ddaa <TIFFWriteDirectorySec+0xcea>
lea    0x35f17(%rip),%rdi        # 5489f <module.26+0xe3>
mov    $0x29c,%edx
lea    0x35eae(%rip),%rsi        # 54842 <module.26+0x86>
lea    0x35eb6(%rip),%rcx        # 54851 <module.26+0x95>
callq  8490 <__assert_fail@plt>
mov    $0x29d,%edx
lea    0x35e96(%rip),%rsi        # 54842 <module.26+0x86>
lea    0x35e9e(%rip),%rcx        # 54851 <module.26+0x95>
lea    0x35eff(%rip),%rdi        # 548b9 <module.26+0xfd>
callq  8490 <__assert_fail@plt>
mov    $0x29e,%edx
lea    0x35e77(%rip),%rsi        # 54842 <module.26+0x86>
lea    0x35e7f(%rip),%rcx        # 54851 <module.26+0x95>
lea    0x35eb0(%rip),%rdi        # 54889 <module.26+0xcd>
callq  8490 <__assert_fail@plt>
xor    %r12d,%r12d
mov    %r12,%r14
jmpq   1e252 <TIFFWriteDirectorySec+0x1192>
xor    %r12d,%r12d
mov    %r12,%r14
jmpq   1e252 <TIFFWriteDirectorySec+0x1192>
mov    %r14,%rdi
callq  8bb0 <_TIFFfree@plt>
mov    -0x8(%rbp),%rax
test   %eax,%eax
jne    1ea8b <TIFFWriteDirectorySec+0x19cb>
mov    -0x18(%rbp),%r12
mov    -0x10(%rbp),%rbx
mov    $0x1,%eax
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r13
leaveq 
retq   
lea    0x35dfe(%rip),%rdi        # 54828 <module.26+0x6c>
mov    $0x290,%edx
lea    0x35e0c(%rip),%rsi        # 54842 <module.26+0x86>
lea    0x35e14(%rip),%rcx        # 54851 <module.26+0x95>
callq  8490 <__assert_fail@plt>
lea    0x35e1e(%rip),%rdi        # 54867 <module.26+0xab>
mov    $0x291,%edx
lea    0x35ded(%rip),%rsi        # 54842 <module.26+0x86>
lea    0x35df5(%rip),%rcx        # 54851 <module.26+0x95>
callq  8490 <__assert_fail@plt>
mov    $0x292,%edx
lea    0x35dd5(%rip),%rsi        # 54842 <module.26+0x86>
lea    0x35ddd(%rip),%rcx        # 54851 <module.26+0x95>
lea    0x35e0e(%rip),%rdi        # 54889 <module.26+0xcd>
callq  8490 <__assert_fail@plt>
xor    %r12d,%r12d
mov    %r12,%r14
jmpq   1e252 <TIFFWriteDirectorySec+0x1192>
mov    %rbx,%rdi
callq  8510 <TIFFFreeDirectory@plt>
mov    0x10(%rbx),%eax
and    $0xffdffff7,%eax
mov    %eax,0x10(%rbx)
mov    0x338(%rbx),%rax
mov    %rbx,%rdi
callq  *%rax
mov    %rbx,%rdi
callq  8830 <TIFFCreateDirectory@plt>
mov    -0x18(%rbp),%r12
mov    -0x10(%rbp),%rbx
mov    $0x1,%eax
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r13
leaveq 
retq   
nopl   (%rax)

000000000001ead0 <TIFFWriteDirectoryTagSampleformatArray>:
push   %rbp
mov    %rsp,%rbp
sub    $0xc0,%rsp
mov    %r15,-0xb8(%rbp)
mov    %r8,-0xc0(%rbp)
mov    %rsi,-0x28(%rbp)
mov    %rdx,-0x30(%rbp)
mov    %rcx,-0x38(%rbp)
mov    %r9,-0x40(%rbp)
mov    %r8d,%eax
shl    $0x3,%rax
mov    %rdi,%r15
mov    %rax,%rdi
callq  8440 <_TIFFmalloc@plt>
test   %rax,%rax
je     1eb32 <TIFFWriteDirectoryTagSampleformatArray+0x62>
movzwl 0x76(%r15),%ecx
cmp    $0x1,%cx
jbe    1eb59 <TIFFWriteDirectoryTagSampleformatArray+0x89>
cmp    $0x2,%cx
je     1eb7f <TIFFWriteDirectoryTagSampleformatArray+0xaf>
cmp    $0x3,%cx
je     1ebbb <TIFFWriteDirectoryTagSampleformatArray+0xeb>
mov    %rax,%r15
xor    %eax,%eax
jmp    1eb68 <TIFFWriteDirectoryTagSampleformatArray+0x98>
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
lea    0x35e5f(%rip),%rsi        # 549a1 <module.45>
lea    0x35df8(%rip),%rdx        # 54941 <module.26+0x185>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0xb8(%rbp),%r15
leaveq 
retq   
cmp    $0x1,%cx
je     1ebf7 <TIFFWriteDirectoryTagSampleformatArray+0x127>
mov    %rax,%r15
xor    %eax,%eax
mov    %r15,%rdi
mov    %rax,%r15
callq  8bb0 <_TIFFfree@plt>
mov    %r15,%rax
mov    -0xb8(%rbp),%r15
leaveq 
retq   
movzwl 0x74(%r15),%ecx
cmp    $0x8,%cx
ja     1ec36 <TIFFWriteDirectoryTagSampleformatArray+0x166>
mov    %r15,-0x10(%rbp)
mov    %rbx,-0x48(%rbp)
mov    %r12,-0x68(%rbp)
mov    %r13,-0x80(%rbp)
mov    %r14,-0xa0(%rbp)
mov    %rax,%r15
xor    %r13d,%r13d
mov    -0x40(%rbp),%r12
mov    -0xc0(%rbp),%rbx
jmpq   1ec86 <TIFFWriteDirectoryTagSampleformatArray+0x1b6>
movzwl 0x74(%r15),%ecx
cmp    $0x20,%cx
ja     1ecbe <TIFFWriteDirectoryTagSampleformatArray+0x1ee>
mov    %r15,-0x8(%rbp)
mov    %rbx,-0x48(%rbp)
mov    %r12,-0x60(%rbp)
mov    %r13,-0x80(%rbp)
mov    %r14,-0x98(%rbp)
mov    %rax,%r15
xor    %r13d,%r13d
mov    -0x40(%rbp),%r12
mov    -0xc0(%rbp),%rbx
jmpq   1ecfd <TIFFWriteDirectoryTagSampleformatArray+0x22d>
movzwl 0x74(%r15),%ecx
cmp    $0x8,%cx
ja     1ed35 <TIFFWriteDirectoryTagSampleformatArray+0x265>
mov    %r15,-0x18(%rbp)
mov    %rbx,-0x58(%rbp)
mov    %r12,-0x70(%rbp)
mov    %r13,-0x90(%rbp)
mov    %r14,-0xa8(%rbp)
mov    %rax,%r15
xor    %r12d,%r12d
mov    -0x40(%rbp),%r13
mov    -0xc0(%rbp),%rbx
jmpq   1ed86 <TIFFWriteDirectoryTagSampleformatArray+0x2b6>
cmp    $0x10,%cx
ja     1edc1 <TIFFWriteDirectoryTagSampleformatArray+0x2f1>
mov    %r15,-0x10(%rbp)
mov    %rbx,-0x50(%rbp)
mov    %r12,-0x68(%rbp)
mov    %r13,-0x88(%rbp)
mov    %r14,-0xa0(%rbp)
mov    %rax,%r15
xor    %r13d,%r13d
mov    -0x40(%rbp),%r12
mov    -0xc0(%rbp),%rbx
jmpq   1ee08 <TIFFWriteDirectoryTagSampleformatArray+0x338>
mov    %r13d,%r14d
movsd  (%r12,%r14,8),%xmm0
callq  214f0 <TIFFClampDoubleToInt8>
mov    %al,(%r15,%r14,1)
add    $0x1,%r13d
cmp    %r13d,%ebx
ja     1ec70 <TIFFWriteDirectoryTagSampleformatArray+0x1a0>
mov    %rbx,%r8
mov    %r15,%r9
mov    -0x10(%rbp),%rdi
mov    -0x38(%rbp),%rcx
mov    -0x30(%rbp),%rdx
mov    -0x28(%rbp),%rsi
callq  1efd0 <TIFFWriteDirectoryTagSbyteArray>
mov    -0xa0(%rbp),%r14
mov    -0x80(%rbp),%r13
mov    -0x68(%rbp),%r12
mov    -0x48(%rbp),%rbx
jmpq   1eb68 <TIFFWriteDirectoryTagSampleformatArray+0x98>
mov    %r15,%rdi
mov    %rax,%r15
mov    -0x40(%rbp),%r9
mov    -0x38(%rbp),%rcx
mov    -0x30(%rbp),%rdx
mov    -0x28(%rbp),%rsi
mov    -0xc0(%rbp),%r8
callq  1f240 <TIFFWriteDirectoryTagDoubleArray>
jmpq   1eb68 <TIFFWriteDirectoryTagSampleformatArray+0x98>
mov    %r13d,%r14d
movsd  (%r12,%r14,8),%xmm0
callq  214b0 <TIFFClampDoubleToFloat>
movss  %xmm0,(%r15,%r14,4)
add    $0x1,%r13d
cmp    %r13d,%ebx
ja     1ece5 <TIFFWriteDirectoryTagSampleformatArray+0x215>
mov    %rbx,%r8
mov    %r15,%r9
mov    -0x8(%rbp),%rdi
mov    -0x38(%rbp),%rcx
mov    -0x30(%rbp),%rdx
mov    -0x28(%rbp),%rsi
callq  1f220 <TIFFWriteDirectoryTagFloatArray>
mov    -0x98(%rbp),%r14
mov    -0x80(%rbp),%r13
mov    -0x60(%rbp),%r12
mov    -0x48(%rbp),%rbx
jmpq   1eb68 <TIFFWriteDirectoryTagSampleformatArray+0x98>
cmp    $0x10,%cx
ja     1ee43 <TIFFWriteDirectoryTagSampleformatArray+0x373>
mov    %r15,-0x20(%rbp)
mov    %rbx,-0x58(%rbp)
mov    %r12,-0x78(%rbp)
mov    %r13,-0x90(%rbp)
mov    %r14,-0xb0(%rbp)
mov    %rax,%r15
xor    %r13d,%r13d
mov    -0x40(%rbp),%r12
mov    -0xc0(%rbp),%rbx
jmpq   1ee8a <TIFFWriteDirectoryTagSampleformatArray+0x3ba>
mov    %r12d,%r14d
movsd  0x0(%r13,%r14,8),%xmm0
callq  215b0 <TIFFClampDoubleToUInt8>
mov    %al,(%r15,%r14,1)
add    $0x1,%r12d
cmp    %r12d,%ebx
ja     1ed6f <TIFFWriteDirectoryTagSampleformatArray+0x29f>
mov    %rbx,%r8
mov    %r15,%r9
mov    -0x18(%rbp),%rdi
mov    -0x38(%rbp),%rcx
mov    -0x30(%rbp),%rdx
mov    -0x28(%rbp),%rsi
callq  1efb0 <TIFFWriteDirectoryTagByteArray>
mov    -0xa8(%rbp),%r14
mov    -0x90(%rbp),%r13
mov    -0x70(%rbp),%r12
mov    -0x58(%rbp),%rbx
jmpq   1eb68 <TIFFWriteDirectoryTagSampleformatArray+0x98>
mov    %r15,-0x18(%rbp)
mov    %rbx,-0x50(%rbp)
mov    %r12,-0x70(%rbp)
mov    %r13,-0x88(%rbp)
mov    %r14,-0xa8(%rbp)
mov    %rax,%r15
xor    %r12d,%r12d
mov    -0x40(%rbp),%r13
mov    -0xc0(%rbp),%rbx
jmpq   1eedc <TIFFWriteDirectoryTagSampleformatArray+0x40c>
mov    %r13d,%r14d
movsd  (%r12,%r14,8),%xmm0
callq  21530 <TIFFClampDoubleToInt16>
mov    %ax,(%r15,%r14,2)
add    $0x1,%r13d
cmp    %r13d,%ebx
ja     1edf1 <TIFFWriteDirectoryTagSampleformatArray+0x321>
mov    %rbx,%r8
mov    %r15,%r9
mov    -0x10(%rbp),%rdi
mov    -0x38(%rbp),%rcx
mov    -0x30(%rbp),%rdx
mov    -0x28(%rbp),%rsi
callq  1f100 <TIFFWriteDirectoryTagSshortArray>
mov    -0xa0(%rbp),%r14
mov    -0x88(%rbp),%r13
mov    -0x68(%rbp),%r12
mov    -0x50(%rbp),%rbx
jmpq   1eb68 <TIFFWriteDirectoryTagSampleformatArray+0x98>
mov    %r15,-0x20(%rbp)
mov    %rbx,-0x60(%rbp)
mov    %r12,-0x78(%rbp)
mov    %r13,-0x98(%rbp)
mov    %r14,-0xb0(%rbp)
mov    %rax,%r15
xor    %r13d,%r13d
mov    -0x40(%rbp),%r12
mov    -0xc0(%rbp),%rbx
jmpq   1ef2d <TIFFWriteDirectoryTagSampleformatArray+0x45d>
mov    %r13d,%r14d
movsd  (%r12,%r14,8),%xmm0
callq  215f0 <TIFFClampDoubleToUInt16>
mov    %ax,(%r15,%r14,2)
add    $0x1,%r13d
cmp    %r13d,%ebx
ja     1ee73 <TIFFWriteDirectoryTagSampleformatArray+0x3a3>
mov    %rbx,%r8
mov    %r15,%r9
mov    -0x20(%rbp),%rdi
mov    -0x38(%rbp),%rcx
mov    -0x30(%rbp),%rdx
mov    -0x28(%rbp),%rsi
callq  1f010 <TIFFWriteDirectoryTagShortArray>
mov    -0xb0(%rbp),%r14
mov    -0x90(%rbp),%r13
mov    -0x78(%rbp),%r12
mov    -0x58(%rbp),%rbx
jmpq   1eb68 <TIFFWriteDirectoryTagSampleformatArray+0x98>
mov    %r12d,%r14d
movsd  0x0(%r13,%r14,8),%xmm0
callq  21570 <TIFFClampDoubleToInt32>
mov    %eax,(%r15,%r14,4)
add    $0x1,%r12d
cmp    %r12d,%ebx
ja     1eec5 <TIFFWriteDirectoryTagSampleformatArray+0x3f5>
mov    %rbx,%r8
mov    %r15,%r9
mov    -0x18(%rbp),%rdi
mov    -0x38(%rbp),%rcx
mov    -0x30(%rbp),%rdx
mov    -0x28(%rbp),%rsi
callq  1f160 <TIFFWriteDirectoryTagSlongArray>
mov    -0xa8(%rbp),%r14
mov    -0x88(%rbp),%r13
mov    -0x70(%rbp),%r12
mov    -0x50(%rbp),%rbx
jmpq   1eb68 <TIFFWriteDirectoryTagSampleformatArray+0x98>
mov    %r13d,%r14d
movsd  (%r12,%r14,8),%xmm0
callq  21630 <TIFFClampDoubleToUInt32>
mov    %eax,(%r15,%r14,4)
add    $0x1,%r13d
cmp    %r13d,%ebx
ja     1ef17 <TIFFWriteDirectoryTagSampleformatArray+0x447>
mov    %rbx,%r8
mov    %r15,%r9
mov    -0x20(%rbp),%rdi
mov    -0x38(%rbp),%rcx
mov    -0x30(%rbp),%rdx
mov    -0x28(%rbp),%rsi
callq  1f140 <TIFFWriteDirectoryTagLongArray>
mov    -0xb0(%rbp),%r14
mov    -0x98(%rbp),%r13
mov    -0x78(%rbp),%r12
mov    -0x60(%rbp),%rbx
jmpq   1eb68 <TIFFWriteDirectoryTagSampleformatArray+0x98>
nopl   0x0(%rax,%rax,1)

000000000001ef70 <TIFFWriteDirectoryTagAscii>:
push   %rbp
mov    %rsp,%rbp
test   %rdx,%rdx
je     1ef80 <TIFFWriteDirectoryTagAscii+0x10>
callq  1fa40 <TIFFWriteDirectoryTagCheckedAscii>
leaveq 
retq   
mov    (%rsi),%eax
add    $0x1,%eax
mov    %eax,(%rsi)
mov    $0x1,%eax
leaveq 
retq   
xchg   %ax,%ax

000000000001ef90 <TIFFWriteDirectoryTagUndefinedArray>:
push   %rbp
mov    %rsp,%rbp
test   %rdx,%rdx
je     1efa0 <TIFFWriteDirectoryTagUndefinedArray+0x10>
callq  1fa70 <TIFFWriteDirectoryTagCheckedUndefinedArray>
leaveq 
retq   
mov    (%rsi),%eax
add    $0x1,%eax
mov    %eax,(%rsi)
mov    $0x1,%eax
leaveq 
retq   
xchg   %ax,%ax

000000000001efb0 <TIFFWriteDirectoryTagByteArray>:
push   %rbp
mov    %rsp,%rbp
test   %rdx,%rdx
je     1efc0 <TIFFWriteDirectoryTagByteArray+0x10>
callq  1faa0 <TIFFWriteDirectoryTagCheckedByteArray>
leaveq 
retq   
mov    (%rsi),%eax
add    $0x1,%eax
mov    %eax,(%rsi)
mov    $0x1,%eax
leaveq 
retq   
xchg   %ax,%ax

000000000001efd0 <TIFFWriteDirectoryTagSbyteArray>:
push   %rbp
mov    %rsp,%rbp
test   %rdx,%rdx
je     1efe0 <TIFFWriteDirectoryTagSbyteArray+0x10>
callq  1fad0 <TIFFWriteDirectoryTagCheckedSbyteArray>
leaveq 
retq   
mov    (%rsi),%eax
add    $0x1,%eax
mov    %eax,(%rsi)
mov    $0x1,%eax
leaveq 
retq   
xchg   %ax,%ax

000000000001eff0 <TIFFWriteDirectoryTagShort>:
push   %rbp
mov    %rsp,%rbp
test   %rdx,%rdx
je     1f000 <TIFFWriteDirectoryTagShort+0x10>
callq  1fb00 <TIFFWriteDirectoryTagCheckedShort>
leaveq 
retq   
mov    (%rsi),%eax
add    $0x1,%eax
mov    %eax,(%rsi)
mov    $0x1,%eax
leaveq 
retq   
xchg   %ax,%ax

000000000001f010 <TIFFWriteDirectoryTagShortArray>:
push   %rbp
mov    %rsp,%rbp
test   %rdx,%rdx
je     1f020 <TIFFWriteDirectoryTagShortArray+0x10>
callq  1fb90 <TIFFWriteDirectoryTagCheckedShortArray>
leaveq 
retq   
mov    (%rsi),%eax
add    $0x1,%eax
mov    %eax,(%rsi)
mov    $0x1,%eax
leaveq 
retq   
xchg   %ax,%ax

000000000001f030 <TIFFWriteDirectoryTagShortPerSample>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
test   %rdx,%rdx
je     1f075 <TIFFWriteDirectoryTagShortPerSample+0x45>
movzwl 0x82(%rdi),%eax
add    %rax,%rax
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rsi,-0x8(%rbp)
mov    %rdx,-0x10(%rbp)
mov    %rcx,-0x18(%rbp)
mov    %rdi,%r14
mov    %rax,%rdi
mov    %r8,%r15
callq  8440 <_TIFFmalloc@plt>
test   %rax,%rax
je     1f083 <TIFFWriteDirectoryTagShortPerSample+0x53>
xor    %ecx,%ecx
mov    %rax,%rdx
jmp    1f0b6 <TIFFWriteDirectoryTagShortPerSample+0x86>
mov    (%rsi),%eax
add    $0x1,%eax
mov    %eax,(%rsi)
mov    $0x1,%eax
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%r14),%rdi
lea    0x35935(%rip),%rsi        # 549c8 <module.46>
lea    0x358a7(%rip),%rdx        # 54941 <module.26+0x185>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
leaveq 
retq   
mov    %r15w,(%rdx)
add    $0x1,%ecx
add    $0x2,%rdx
movzwl 0x82(%r14),%r8d
cmp    %cx,%r8w
ja     1f0ab <TIFFWriteDirectoryTagShortPerSample+0x7b>
mov    %r14,%rdi
mov    %rax,%r14
mov    %r14,%r9
mov    -0x18(%rbp),%rcx
mov    -0x10(%rbp),%rdx
mov    -0x8(%rbp),%rsi
callq  1fb90 <TIFFWriteDirectoryTagCheckedShortArray>
mov    %r14,%rdi
mov    %rax,%r14
callq  8bb0 <_TIFFfree@plt>
mov    %r14,%rax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)

000000000001f100 <TIFFWriteDirectoryTagSshortArray>:
push   %rbp
mov    %rsp,%rbp
test   %rdx,%rdx
je     1f110 <TIFFWriteDirectoryTagSshortArray+0x10>
callq  1fc60 <TIFFWriteDirectoryTagCheckedSshortArray>
leaveq 
retq   
mov    (%rsi),%eax
add    $0x1,%eax
mov    %eax,(%rsi)
mov    $0x1,%eax
leaveq 
retq   
xchg   %ax,%ax

000000000001f120 <TIFFWriteDirectoryTagLong>:
push   %rbp
mov    %rsp,%rbp
test   %rdx,%rdx
je     1f130 <TIFFWriteDirectoryTagLong+0x10>
callq  1fd30 <TIFFWriteDirectoryTagCheckedLong>
leaveq 
retq   
mov    (%rsi),%eax
add    $0x1,%eax
mov    %eax,(%rsi)
mov    $0x1,%eax
leaveq 
retq   
xchg   %ax,%ax

000000000001f140 <TIFFWriteDirectoryTagLongArray>:
push   %rbp
mov    %rsp,%rbp
test   %rdx,%rdx
je     1f150 <TIFFWriteDirectoryTagLongArray+0x10>
callq  1fdc0 <TIFFWriteDirectoryTagCheckedLongArray>
leaveq 
retq   
mov    (%rsi),%eax
add    $0x1,%eax
mov    %eax,(%rsi)
mov    $0x1,%eax
leaveq 
retq   
xchg   %ax,%ax

000000000001f160 <TIFFWriteDirectoryTagSlongArray>:
push   %rbp
mov    %rsp,%rbp
test   %rdx,%rdx
je     1f170 <TIFFWriteDirectoryTagSlongArray+0x10>
callq  1fe90 <TIFFWriteDirectoryTagCheckedSlongArray>
leaveq 
retq   
mov    (%rsi),%eax
add    $0x1,%eax
mov    %eax,(%rsi)
mov    $0x1,%eax
leaveq 
retq   
xchg   %ax,%ax

000000000001f180 <TIFFWriteDirectoryTagLong8Array>:
push   %rbp
mov    %rsp,%rbp
test   %rdx,%rdx
je     1f190 <TIFFWriteDirectoryTagLong8Array+0x10>
callq  1ff60 <TIFFWriteDirectoryTagCheckedLong8Array>
leaveq 
retq   
mov    (%rsi),%eax
add    $0x1,%eax
mov    %eax,(%rsi)
mov    $0x1,%eax
leaveq 
retq   
xchg   %ax,%ax

000000000001f1a0 <TIFFWriteDirectoryTagSlong8Array>:
push   %rbp
mov    %rsp,%rbp
test   %rdx,%rdx
je     1f1b0 <TIFFWriteDirectoryTagSlong8Array+0x10>
callq  20060 <TIFFWriteDirectoryTagCheckedSlong8Array>
leaveq 
retq   
mov    (%rsi),%eax
add    $0x1,%eax
mov    %eax,(%rsi)
mov    $0x1,%eax
leaveq 
retq   
xchg   %ax,%ax

000000000001f1c0 <TIFFWriteDirectoryTagRational>:
push   %rbp
mov    %rsp,%rbp
test   %rdx,%rdx
je     1f1d0 <TIFFWriteDirectoryTagRational+0x10>
callq  20160 <TIFFWriteDirectoryTagCheckedRational>
leaveq 
retq   
mov    (%rsi),%eax
add    $0x1,%eax
mov    %eax,(%rsi)
mov    $0x1,%eax
leaveq 
retq   
xchg   %ax,%ax

000000000001f1e0 <TIFFWriteDirectoryTagRationalArray>:
push   %rbp
mov    %rsp,%rbp
test   %rdx,%rdx
je     1f1f0 <TIFFWriteDirectoryTagRationalArray+0x10>
callq  202e0 <TIFFWriteDirectoryTagCheckedRationalArray>
leaveq 
retq   
mov    (%rsi),%eax
add    $0x1,%eax
mov    %eax,(%rsi)
mov    $0x1,%eax
leaveq 
retq   
xchg   %ax,%ax

000000000001f200 <TIFFWriteDirectoryTagSrationalArray>:
push   %rbp
mov    %rsp,%rbp
test   %rdx,%rdx
je     1f210 <TIFFWriteDirectoryTagSrationalArray+0x10>
callq  204a0 <TIFFWriteDirectoryTagCheckedSrationalArray>
leaveq 
retq   
mov    (%rsi),%eax
add    $0x1,%eax
mov    %eax,(%rsi)
mov    $0x1,%eax
leaveq 
retq   
xchg   %ax,%ax

000000000001f220 <TIFFWriteDirectoryTagFloatArray>:
push   %rbp
mov    %rsp,%rbp
test   %rdx,%rdx
je     1f230 <TIFFWriteDirectoryTagFloatArray+0x10>
callq  206b0 <TIFFWriteDirectoryTagCheckedFloatArray>
leaveq 
retq   
mov    (%rsi),%eax
add    $0x1,%eax
mov    %eax,(%rsi)
mov    $0x1,%eax
leaveq 
retq   
xchg   %ax,%ax

000000000001f240 <TIFFWriteDirectoryTagDoubleArray>:
push   %rbp
mov    %rsp,%rbp
test   %rdx,%rdx
je     1f250 <TIFFWriteDirectoryTagDoubleArray+0x10>
callq  20780 <TIFFWriteDirectoryTagCheckedDoubleArray>
leaveq 
retq   
mov    (%rsi),%eax
add    $0x1,%eax
mov    %eax,(%rsi)
mov    $0x1,%eax
leaveq 
retq   
xchg   %ax,%ax

000000000001f260 <TIFFWriteDirectoryTagIfdArray>:
push   %rbp
mov    %rsp,%rbp
test   %rdx,%rdx
je     1f270 <TIFFWriteDirectoryTagIfdArray+0x10>
callq  20850 <TIFFWriteDirectoryTagCheckedIfdArray>
leaveq 
retq   
mov    (%rsi),%eax
add    $0x1,%eax
mov    %eax,(%rsi)
mov    $0x1,%eax
leaveq 
retq   
xchg   %ax,%ax

000000000001f280 <TIFFWriteDirectoryTagShortLong>:
push   %rbp
mov    %rsp,%rbp
test   %rdx,%rdx
je     1f299 <TIFFWriteDirectoryTagShortLong+0x19>
cmp    $0xffff,%r8d
jbe    1f2a7 <TIFFWriteDirectoryTagShortLong+0x27>
callq  1fd30 <TIFFWriteDirectoryTagCheckedLong>
leaveq 
retq   
mov    (%rsi),%eax
add    $0x1,%eax
mov    %eax,(%rsi)
mov    $0x1,%eax
leaveq 
retq   
callq  1fb00 <TIFFWriteDirectoryTagCheckedShort>
leaveq 
retq   
xchg   %ax,%ax

000000000001f2b0 <TIFFWriteDirectoryTagLongLong8Array>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
test   %rdx,%rdx
je     1f30a <TIFFWriteDirectoryTagLongLong8Array+0x5a>
mov    0x10(%rdi),%eax
and    $0x80000,%eax
test   %eax,%eax
jne    1f318 <TIFFWriteDirectoryTagLongLong8Array+0x68>
mov    %r8d,%eax
shl    $0x2,%rax
mov    %r13,-0x20(%rbp)
mov    %r14,-0x28(%rbp)
mov    %r15,-0x30(%rbp)
mov    %rsi,-0x8(%rbp)
mov    %rdx,-0x10(%rbp)
mov    %rcx,-0x18(%rbp)
mov    %r9,%r13
mov    %rdi,%r14
mov    %rax,%rdi
mov    %r8,%r15
callq  8440 <_TIFFmalloc@plt>
test   %rax,%rax
je     1f31f <TIFFWriteDirectoryTagLongLong8Array+0x6f>
mov    $0xffffffff,%esi
xor    %ecx,%ecx
mov    %rax,%rdx
jmp    1f361 <TIFFWriteDirectoryTagLongLong8Array+0xb1>
mov    (%rsi),%eax
add    $0x1,%eax
mov    %eax,(%rsi)
mov    $0x1,%eax
leaveq 
retq   
callq  1ff60 <TIFFWriteDirectoryTagCheckedLong8Array>
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%r14),%rdi
lea    0x35612(%rip),%rdx        # 54941 <module.26+0x185>
lea    0x356b6(%rip),%rsi        # 549ec <module.47>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r13
leaveq 
retq   
mov    0x0(%r13),%rdi
cmp    %rsi,%rdi
ja     1f39f <TIFFWriteDirectoryTagLongLong8Array+0xef>
mov    %edi,(%rdx)
add    $0x8,%r13
add    $0x1,%ecx
add    $0x4,%rdx
cmp    %ecx,%r15d
ja     1f34b <TIFFWriteDirectoryTagLongLong8Array+0x9b>
mov    %r14,%rdi
mov    %r15,%r8
mov    %rax,%r13
mov    %r13,%r9
mov    -0x18(%rbp),%rcx
mov    -0x10(%rbp),%rdx
mov    -0x8(%rbp),%rsi
callq  1fdc0 <TIFFWriteDirectoryTagCheckedLongArray>
mov    %r13,%rdi
mov    %rax,%r13
callq  8bb0 <_TIFFfree@plt>
mov    %r13,%rax
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r13
leaveq 
retq   
xor    %ecx,%ecx
mov    0x3b8(%r14),%rdi
mov    %rax,%r13
mov    %rcx,%rax
lea    0x3565b(%rip),%rdx        # 54a10 <module.47+0x24>
lea    0x35630(%rip),%rsi        # 549ec <module.47>
callq  8a00 <TIFFErrorExt@plt>
mov    %r13,%rdi
callq  8bb0 <_TIFFfree@plt>
xor    %eax,%eax
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r13
leaveq 
retq   
nopl   0x0(%rax)

000000000001f3e0 <TIFFWriteDirectoryTagIfdIfd8Array>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
test   %rdx,%rdx
je     1f43a <TIFFWriteDirectoryTagIfdIfd8Array+0x5a>
mov    0x10(%rdi),%eax
and    $0x80000,%eax
test   %eax,%eax
jne    1f448 <TIFFWriteDirectoryTagIfdIfd8Array+0x68>
mov    %r8d,%eax
shl    $0x2,%rax
mov    %r13,-0x20(%rbp)
mov    %r14,-0x28(%rbp)
mov    %r15,-0x30(%rbp)
mov    %rsi,-0x8(%rbp)
mov    %rdx,-0x10(%rbp)
mov    %rcx,-0x18(%rbp)
mov    %r9,%r13
mov    %rdi,%r14
mov    %rax,%rdi
mov    %r8,%r15
callq  8440 <_TIFFmalloc@plt>
test   %rax,%rax
je     1f44f <TIFFWriteDirectoryTagIfdIfd8Array+0x6f>
mov    $0xffffffff,%esi
xor    %ecx,%ecx
mov    %rax,%rdx
jmp    1f491 <TIFFWriteDirectoryTagIfdIfd8Array+0xb1>
mov    (%rsi),%eax
add    $0x1,%eax
mov    %eax,(%rsi)
mov    $0x1,%eax
leaveq 
retq   
callq  20920 <TIFFWriteDirectoryTagCheckedIfd8Array>
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%r14),%rdi
lea    0x354e2(%rip),%rdx        # 54941 <module.26+0x185>
lea    0x355ee(%rip),%rsi        # 54a54 <module.49>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r13
leaveq 
retq   
mov    0x0(%r13),%rdi
cmp    %rsi,%rdi
ja     1f4cf <TIFFWriteDirectoryTagIfdIfd8Array+0xef>
mov    %edi,(%rdx)
add    $0x8,%r13
add    $0x1,%ecx
add    $0x4,%rdx
cmp    %ecx,%r15d
ja     1f47b <TIFFWriteDirectoryTagIfdIfd8Array+0x9b>
mov    %r14,%rdi
mov    %r15,%r8
mov    %rax,%r13
mov    %r13,%r9
mov    -0x18(%rbp),%rcx
mov    -0x10(%rbp),%rdx
mov    -0x8(%rbp),%rsi
callq  20850 <TIFFWriteDirectoryTagCheckedIfdArray>
mov    %r13,%rdi
mov    %rax,%r13
callq  8bb0 <_TIFFfree@plt>
mov    %r13,%rax
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r13
leaveq 
retq   
xor    %ecx,%ecx
mov    0x3b8(%r14),%rdi
mov    %rax,%r13
mov    %rcx,%rax
lea    0x3552b(%rip),%rdx        # 54a10 <module.47+0x24>
lea    0x35568(%rip),%rsi        # 54a54 <module.49>
callq  8a00 <TIFFErrorExt@plt>
mov    %r13,%rdi
callq  8bb0 <_TIFFfree@plt>
xor    %eax,%eax
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r13
leaveq 
retq   
nopl   0x0(%rax)

000000000001f510 <TIFFWriteDirectoryTagColormap>:
push   %rbp
mov    %rsp,%rbp
sub    $0x40,%rsp
mov    $0x1,%eax
test   %rdx,%rdx
je     1f618 <TIFFWriteDirectoryTagColormap+0x108>
mov    %r14,%r8
mov    %r13,%r14
mov    %r12,%r13
mov    %rbx,%r12
mov    %rdi,%rbx
mov    $0x3,%eax
movzwl 0x74(%rbx),%ecx
shl    %cl,%eax
mov    %rax,-0x18(%rbp)
mov    %eax,%eax
lea    (%rax,%rax,1),%rdi
mov    %r8,-0x38(%rbp)
mov    %r15,-0x40(%rbp)
mov    %rsi,-0x8(%rbp)
mov    %rdx,-0x10(%rbp)
mov    %rcx,%r15
callq  8440 <_TIFFmalloc@plt>
test   %rax,%rax
je     1f621 <TIFFWriteDirectoryTagColormap+0x111>
mov    %r15,%rcx
mov    %rax,%r15
mov    $0x1,%edx
shl    %cl,%edx
mov    %edx,%r8d
lea    (%r8,%r8,1),%rax
mov    0xb8(%rbx),%rsi
mov    %r15,%rdi
mov    %rax,%rdx
mov    %r12,-0x20(%rbp)
mov    %r13,-0x28(%rbp)
mov    %r14,-0x30(%rbp)
mov    %rax,%r12
mov    %rcx,%r13
mov    %r8,%r14
callq  8790 <_TIFFmemcpy@plt>
lea    (%r15,%r14,2),%rdi
mov    0xc0(%rbx),%rsi
mov    %r12,%rdx
callq  8790 <_TIFFmemcpy@plt>
mov    %r13,%rcx
mov    $0x2,%eax
shl    %cl,%eax
mov    %eax,%eax
lea    (%r15,%rax,2),%rdi
mov    %r12,%rdx
mov    0xc8(%rbx),%rsi
callq  8790 <_TIFFmemcpy@plt>
mov    %rbx,%rdi
mov    $0x140,%ecx
mov    %r15,%r9
mov    -0x10(%rbp),%rdx
mov    -0x18(%rbp),%r8
mov    -0x8(%rbp),%rsi
callq  1fb90 <TIFFWriteDirectoryTagCheckedShortArray>
mov    %r15,%rdi
mov    %rax,%r14
callq  8bb0 <_TIFFfree@plt>
mov    %r14,%rax
mov    -0x30(%rbp),%r13
mov    -0x28(%rbp),%r12
mov    -0x20(%rbp),%rbx
mov    -0x40(%rbp),%r15
mov    -0x38(%rbp),%r14
leaveq 
retq   
mov    (%rsi),%ecx
add    $0x1,%ecx
mov    %ecx,(%rsi)
leaveq 
retq   
mov    0x3b8(%rbx),%rdi
lea    0x35447(%rip),%rsi        # 54a76 <module.50>
lea    0x3530b(%rip),%rdx        # 54941 <module.26+0x185>
xor    %r15d,%r15d
mov    %r15,%rax
callq  8a00 <TIFFErrorExt@plt>
mov    %r15,%rax
mov    %r12,%rbx
mov    %r13,%r12
mov    %r14,%r13
mov    -0x40(%rbp),%r15
mov    -0x38(%rbp),%r14
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

000000000001f660 <TIFFWriteDirectoryTagTransferfunction>:
push   %rbp
mov    %rsp,%rbp
sub    $0x50,%rsp
mov    %r13,-0x38(%rbp)
mov    %r14,-0x40(%rbp)
mov    %r15,-0x48(%rbp)
mov    %rsi,-0x8(%rbp)
mov    %rdx,-0x10(%rbp)
mov    $0x1,%eax
test   %rdx,%rdx
je     1f7a2 <TIFFWriteDirectoryTagTransferfunction+0x142>
movzwl 0x74(%rdi),%ecx
mov    $0x3,%edx
movzwl 0x82(%rdi),%esi
movzwl 0xd4(%rdi),%r8d
sub    %r8w,%si
cmp    $0x3,%si
ja     1f6af <TIFFWriteDirectoryTagTransferfunction+0x4f>
mov    %rsi,%rdx
mov    %rbx,%r13
mov    %rdi,%rbx
mov    %rax,%rsi
shl    %cl,%esi
mov    %esi,%r14d
cmp    $0x3,%dx
je     1f7ab <TIFFWriteDirectoryTagTransferfunction+0x14b>
cmp    $0x2,%dx
je     1f7db <TIFFWriteDirectoryTagTransferfunction+0x17b>
test   %dx,%dx
je     1f6d9 <TIFFWriteDirectoryTagTransferfunction+0x79>
mov    %rdx,%rax
movzwl %ax,%edx
shl    %cl,%edx
mov    %rcx,-0x20(%rbp)
mov    %rdx,-0x18(%rbp)
mov    %edx,%ecx
lea    (%rcx,%rcx,1),%rdi
mov    %rax,%r15
callq  8440 <_TIFFmalloc@plt>
test   %rax,%rax
je     1f80b <TIFFWriteDirectoryTagTransferfunction+0x1ab>
lea    (%r14,%r14,1),%rcx
mov    0x110(%rbx),%rsi
mov    %rax,%rdi
mov    %rcx,%rdx
mov    %r13,-0x28(%rbp)
mov    %r12,-0x30(%rbp)
mov    %rax,%r12
mov    %rcx,%r13
callq  8790 <_TIFFmemcpy@plt>
cmp    $0x1,%r15w
jbe    1f73b <TIFFWriteDirectoryTagTransferfunction+0xdb>
lea    (%r12,%r14,2),%rdi
mov    0x118(%rbx),%rsi
mov    %r13,%rdx
callq  8790 <_TIFFmemcpy@plt>
cmp    $0x2,%r15w
jbe    1f762 <TIFFWriteDirectoryTagTransferfunction+0x102>
mov    -0x20(%rbp),%rcx
mov    $0x2,%eax
shl    %cl,%eax
mov    %eax,%eax
lea    (%r12,%rax,2),%rdi
mov    %r13,%rdx
mov    0x120(%rbx),%rsi
callq  8790 <_TIFFmemcpy@plt>
mov    %rbx,%rdi
mov    $0x12d,%ecx
mov    %r12,%r9
mov    -0x18(%rbp),%r8
mov    -0x10(%rbp),%rdx
mov    -0x8(%rbp),%rsi
callq  1fb90 <TIFFWriteDirectoryTagCheckedShortArray>
mov    %r12,%rdi
mov    %rax,%r15
callq  8bb0 <_TIFFfree@plt>
mov    %r15,%rax
mov    -0x30(%rbp),%r12
mov    -0x28(%rbp),%rbx
mov    -0x48(%rbp),%r15
mov    -0x40(%rbp),%r14
mov    -0x38(%rbp),%r13
leaveq 
retq   
mov    (%rsi),%ecx
add    $0x1,%ecx
mov    %ecx,(%rsi)
leaveq 
retq   
mov    %rcx,%r15
mov    0x110(%rbx),%rdi
mov    0x120(%rbx),%rsi
lea    (%r14,%r14,1),%rdx
callq  8900 <_TIFFmemcmp@plt>
test   %eax,%eax
je     1f83f <TIFFWriteDirectoryTagTransferfunction+0x1df>
mov    %r15,%rcx
mov    $0x3,%edx
mov    $0x1,%eax
jmpq   1f6c7 <TIFFWriteDirectoryTagTransferfunction+0x67>
mov    %rcx,%r15
mov    0x110(%rbx),%rdi
mov    0x118(%rbx),%rsi
lea    (%r14,%r14,1),%rdx
callq  8900 <_TIFFmemcmp@plt>
test   %eax,%eax
je     1f851 <TIFFWriteDirectoryTagTransferfunction+0x1f1>
mov    %r15,%rcx
mov    $0x2,%edx
mov    $0x1,%eax
jmpq   1f6d1 <TIFFWriteDirectoryTagTransferfunction+0x71>
mov    0x3b8(%rbx),%rdi
lea    0x3527b(%rip),%rsi        # 54a94 <module.51>
lea    0x35121(%rip),%rdx        # 54941 <module.26+0x185>
xor    %r14d,%r14d
mov    %r14,%rax
callq  8a00 <TIFFErrorExt@plt>
mov    %r14,%rax
mov    %r13,%rbx
mov    -0x48(%rbp),%r15
mov    -0x40(%rbp),%r14
mov    -0x38(%rbp),%r13
leaveq 
retq   
mov    %r15,%rcx
mov    $0x2,%edx
mov    $0x1,%eax
jmpq   1f6c7 <TIFFWriteDirectoryTagTransferfunction+0x67>
mov    %r15,%rcx
mov    $0x1,%eax
mov    %rax,%rdx
jmpq   1f6d1 <TIFFWriteDirectoryTagTransferfunction+0x71>
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   0x0(%rax)

000000000001f870 <TIFFWriteDirectoryTagSubifd>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    $0x1,%eax
movzwl 0xfc(%rdi),%r8d
test   %r8w,%r8w
jne    1f88d <TIFFWriteDirectoryTagSubifd+0x1d>
leaveq 
retq   
test   %rdx,%rdx
je     1f8e1 <TIFFWriteDirectoryTagSubifd+0x71>
mov    0x290(%rdi),%rax
mov    %rax,-0x8(%rbp)
mov    $0x14a,%ecx
mov    0x10(%rdi),%eax
and    $0x80000,%eax
test   %eax,%eax
jne    1f8ea <TIFFWriteDirectoryTagSubifd+0x7a>
shl    $0x2,%r8
mov    %r15,-0x18(%rbp)
mov    %rsi,-0x20(%rbp)
mov    %rdx,-0x28(%rbp)
mov    %rdi,%r15
mov    %r8,%rdi
callq  8440 <_TIFFmalloc@plt>
test   %rax,%rax
je     1f913 <TIFFWriteDirectoryTagSubifd+0xa3>
mov    0x100(%r15),%rcx
mov    $0xffffffff,%edi
xor    %edx,%edx
mov    %rax,%rsi
jmp    1f95a <TIFFWriteDirectoryTagSubifd+0xea>
mov    (%rsi),%ecx
add    $0x1,%ecx
mov    %ecx,(%rsi)
leaveq 
retq   
mov    0x100(%rdi),%r9
mov    %rdi,%rax
mov    %r15,-0x18(%rbp)
mov    %rdi,%r15
mov    %rax,%rdi
callq  20920 <TIFFWriteDirectoryTagCheckedIfd8Array>
test   %eax,%eax
jne    1f99e <TIFFWriteDirectoryTagSubifd+0x12e>
xor    %eax,%eax
mov    -0x18(%rbp),%r15
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
lea    0x3501e(%rip),%rdx        # 54941 <module.26+0x185>
lea    0x35190(%rip),%rsi        # 54aba <module.52>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x18(%rbp),%r15
leaveq 
retq   
test   %rcx,%rcx
je     1f9d7 <TIFFWriteDirectoryTagSubifd+0x167>
mov    (%rcx),%r8
cmp    %rdi,%r8
ja     1f9f6 <TIFFWriteDirectoryTagSubifd+0x186>
mov    %r8d,(%rsi)
add    $0x8,%rcx
add    $0x4,%rsi
add    $0x1,%edx
movzwl 0xfc(%r15),%r8d
cmp    %dx,%r8w
ja     1f937 <TIFFWriteDirectoryTagSubifd+0xc7>
mov    %r15,%rdi
mov    %rax,%r9
mov    %r14,-0x10(%rbp)
mov    %rax,%r14
mov    $0x14a,%ecx
mov    -0x28(%rbp),%rdx
mov    -0x20(%rbp),%rsi
callq  20850 <TIFFWriteDirectoryTagCheckedIfdArray>
mov    %r14,%rdi
mov    %rax,%r14
callq  8bb0 <_TIFFfree@plt>
mov    %r14,%rax
mov    -0x10(%rbp),%r14
jmpq   1f903 <TIFFWriteDirectoryTagSubifd+0x93>
mov    0x10(%r15),%eax
or     $0x2000,%eax
mov    %eax,0x10(%r15)
movzwl 0xfc(%r15),%eax
mov    %ax,0x298(%r15)
cmp    $0x1,%ax
je     1fa28 <TIFFWriteDirectoryTagSubifd+0x1b8>
mov    -0x8(%rbp),%rax
mov    %rax,0x2a0(%r15)
mov    -0x18(%rbp),%r15
mov    $0x1,%eax
leaveq 
retq   
lea    0x350f8(%rip),%rdi        # 54ad6 <module.52+0x1c>
lea    0x34e5d(%rip),%rsi        # 54842 <module.26+0x86>
mov    $0x79f,%edx
lea    0x350ed(%rip),%rcx        # 54ade <module.52+0x24>
callq  8490 <__assert_fail@plt>
xor    %ecx,%ecx
mov    0x3b8(%r15),%rdi
mov    %rax,%r15
mov    %rcx,%rax
lea    0x350ee(%rip),%rdx        # 54afa <module.52+0x40>
lea    0x350a7(%rip),%rsi        # 54aba <module.52>
callq  8a00 <TIFFErrorExt@plt>
mov    %r15,%rdi
callq  8bb0 <_TIFFfree@plt>
xor    %eax,%eax
mov    -0x18(%rbp),%r15
leaveq 
retq   
movq   $0x0,0x2a0(%r15)
mov    -0x18(%rbp),%r15
mov    $0x1,%eax
leaveq 
retq   
xchg   %ax,%ax

000000000001fa40 <TIFFWriteDirectoryTagCheckedAscii>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r8d,(%rsp)
mov    %r9,0x8(%rsp)
mov    %r8,%r9
mov    $0x2,%r8d
callq  20a20 <TIFFWriteDirectoryTagData>
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   0x0(%rax)

000000000001fa70 <TIFFWriteDirectoryTagCheckedUndefinedArray>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r8d,(%rsp)
mov    %r9,0x8(%rsp)
mov    %r8,%r9
mov    $0x7,%r8d
callq  20a20 <TIFFWriteDirectoryTagData>
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   0x0(%rax)

000000000001faa0 <TIFFWriteDirectoryTagCheckedByteArray>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r8d,(%rsp)
mov    %r9,0x8(%rsp)
mov    %r8,%r9
mov    $0x1,%r8d
callq  20a20 <TIFFWriteDirectoryTagData>
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   0x0(%rax)

000000000001fad0 <TIFFWriteDirectoryTagCheckedSbyteArray>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r8d,(%rsp)
mov    %r9,0x8(%rsp)
mov    %r8,%r9
mov    $0x6,%r8d
callq  20a20 <TIFFWriteDirectoryTagData>
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   0x0(%rax)

000000000001fb00 <TIFFWriteDirectoryTagCheckedShort>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    %r8w,-0x22(%rbp)
lea    -0x22(%rbp),%rax
mov    0x10(%rdi),%r8d
and    $0x80,%r8d
test   %r8d,%r8d
je     1fb65 <TIFFWriteDirectoryTagCheckedShort+0x65>
mov    %r12,-0x8(%rbp)
mov    %r13,-0x10(%rbp)
mov    %r14,-0x18(%rbp)
mov    %r15,-0x20(%rbp)
mov    %rcx,%r12
mov    %rdi,%r13
mov    %rax,%rdi
mov    %rdx,%r14
mov    %rsi,%r15
callq  87c0 <TIFFSwabShort@plt>
mov    %r12,%rcx
mov    %r14,%rdx
mov    %r15,%rsi
mov    %r13,%rdi
lea    -0x22(%rbp),%rax
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
sub    $0x10,%rsp
movl   $0x2,(%rsp)
mov    %rax,0x8(%rsp)
mov    $0x3,%r8d
mov    $0x1,%r9d
callq  20a20 <TIFFWriteDirectoryTagData>
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

000000000001fb90 <TIFFWriteDirectoryTagCheckedShortArray>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
cmp    $0x7fffffff,%r8d
jbe    1fbc0 <TIFFWriteDirectoryTagCheckedShortArray+0x30>
lea    0x34f6f(%rip),%rdi        # 54b17 <module.52+0x5d>
lea    0x34c93(%rip),%rsi        # 54842 <module.26+0x86>
mov    $0x7fe,%edx
lea    0x34f6d(%rip),%rcx        # 54b28 <module.52+0x6e>
callq  8490 <__assert_fail@plt>
mov    0x10(%rdi),%eax
and    $0x80,%eax
test   %eax,%eax
jne    1fbd7 <TIFFWriteDirectoryTagCheckedShortArray+0x47>
mov    %r9,%rax
mov    %r8,%r9
mov    %rax,%r8
jmp    1fc36 <TIFFWriteDirectoryTagCheckedShortArray+0xa6>
mov    %r8d,%eax
mov    %r9,%r10
mov    %rcx,-0x8(%rbp)
mov    %rbx,-0x10(%rbp)
mov    %r12,-0x18(%rbp)
mov    %r13,-0x20(%rbp)
mov    %r14,-0x28(%rbp)
mov    %r15,-0x30(%rbp)
mov    %r9,%rbx
mov    %r8,%r12
mov    %rdi,%r13
mov    %r10,%rdi
mov    %rsi,%r14
mov    %rax,%rsi
mov    %rdx,%r15
callq  83d0 <TIFFSwabArrayOfShort@plt>
mov    %r15,%rdx
mov    %r14,%rsi
mov    %r13,%rdi
mov    %rbx,%r8
mov    %r12,%r9
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
mov    -0x10(%rbp),%rbx
mov    -0x8(%rbp),%rcx
sub    $0x10,%rsp
lea    (%r9,%r9,1),%eax
mov    %eax,(%rsp)
mov    %r8,0x8(%rsp)
mov    $0x3,%r8d
callq  20a20 <TIFFWriteDirectoryTagData>
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

000000000001fc60 <TIFFWriteDirectoryTagCheckedSshortArray>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
cmp    $0x7fffffff,%r8d
jbe    1fc90 <TIFFWriteDirectoryTagCheckedSshortArray+0x30>
lea    0x34e9f(%rip),%rdi        # 54b17 <module.52+0x5d>
lea    0x34bc3(%rip),%rsi        # 54842 <module.26+0x86>
mov    $0x815,%edx
lea    0x34ec4(%rip),%rcx        # 54b4f <module.52+0x95>
callq  8490 <__assert_fail@plt>
mov    0x10(%rdi),%eax
and    $0x80,%eax
test   %eax,%eax
jne    1fca7 <TIFFWriteDirectoryTagCheckedSshortArray+0x47>
mov    %r9,%rax
mov    %r8,%r9
mov    %rax,%r8
jmp    1fd06 <TIFFWriteDirectoryTagCheckedSshortArray+0xa6>
mov    %r8d,%eax
mov    %r9,%r10
mov    %rcx,-0x8(%rbp)
mov    %rbx,-0x10(%rbp)
mov    %r12,-0x18(%rbp)
mov    %r13,-0x20(%rbp)
mov    %r14,-0x28(%rbp)
mov    %r15,-0x30(%rbp)
mov    %r9,%rbx
mov    %r8,%r12
mov    %rdi,%r13
mov    %r10,%rdi
mov    %rsi,%r14
mov    %rax,%rsi
mov    %rdx,%r15
callq  83d0 <TIFFSwabArrayOfShort@plt>
mov    %r15,%rdx
mov    %r14,%rsi
mov    %r13,%rdi
mov    %rbx,%r8
mov    %r12,%r9
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
mov    -0x10(%rbp),%rbx
mov    -0x8(%rbp),%rcx
sub    $0x10,%rsp
lea    (%r9,%r9,1),%eax
mov    %eax,(%rsp)
mov    %r8,0x8(%rsp)
mov    $0x8,%r8d
callq  20a20 <TIFFWriteDirectoryTagData>
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

000000000001fd30 <TIFFWriteDirectoryTagCheckedLong>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    %r8d,-0x24(%rbp)
lea    -0x24(%rbp),%rax
mov    0x10(%rdi),%r8d
and    $0x80,%r8d
test   %r8d,%r8d
je     1fd94 <TIFFWriteDirectoryTagCheckedLong+0x64>
mov    %r12,-0x8(%rbp)
mov    %r13,-0x10(%rbp)
mov    %r14,-0x18(%rbp)
mov    %r15,-0x20(%rbp)
mov    %rcx,%r12
mov    %rdi,%r13
mov    %rax,%rdi
mov    %rdx,%r14
mov    %rsi,%r15
callq  8480 <TIFFSwabLong@plt>
mov    %r12,%rcx
mov    %r14,%rdx
mov    %r15,%rsi
mov    %r13,%rdi
lea    -0x24(%rbp),%rax
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
sub    $0x10,%rsp
movl   $0x4,(%rsp)
mov    %rax,0x8(%rsp)
mov    $0x4,%r8d
mov    $0x1,%r9d
callq  20a20 <TIFFWriteDirectoryTagData>
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

000000000001fdc0 <TIFFWriteDirectoryTagCheckedLongArray>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
cmp    $0x3fffffff,%r8d
jbe    1fdf0 <TIFFWriteDirectoryTagCheckedLongArray+0x30>
lea    0x34d9f(%rip),%rdi        # 54b77 <module.52+0xbd>
lea    0x34a63(%rip),%rsi        # 54842 <module.26+0x86>
mov    $0x82a,%edx
lea    0x34d9d(%rip),%rcx        # 54b88 <module.52+0xce>
callq  8490 <__assert_fail@plt>
mov    0x10(%rdi),%eax
and    $0x80,%eax
test   %eax,%eax
jne    1fe07 <TIFFWriteDirectoryTagCheckedLongArray+0x47>
mov    %r9,%rax
mov    %r8,%r9
mov    %rax,%r8
jmp    1fe66 <TIFFWriteDirectoryTagCheckedLongArray+0xa6>
mov    %r8d,%eax
mov    %r9,%r10
mov    %rcx,-0x8(%rbp)
mov    %rbx,-0x10(%rbp)
mov    %r12,-0x18(%rbp)
mov    %r13,-0x20(%rbp)
mov    %r14,-0x28(%rbp)
mov    %r15,-0x30(%rbp)
mov    %r9,%rbx
mov    %r8,%r12
mov    %rdi,%r13
mov    %r10,%rdi
mov    %rsi,%r14
mov    %rax,%rsi
mov    %rdx,%r15
callq  8b70 <TIFFSwabArrayOfLong@plt>
mov    %r15,%rdx
mov    %r14,%rsi
mov    %r13,%rdi
mov    %rbx,%r8
mov    %r12,%r9
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
mov    -0x10(%rbp),%rbx
mov    -0x8(%rbp),%rcx
sub    $0x10,%rsp
mov    %r9,%rax
shl    $0x2,%eax
mov    %eax,(%rsp)
mov    %r8,0x8(%rsp)
mov    $0x4,%r8d
callq  20a20 <TIFFWriteDirectoryTagData>
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)

000000000001fe90 <TIFFWriteDirectoryTagCheckedSlongArray>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
cmp    $0x3fffffff,%r8d
jbe    1fec0 <TIFFWriteDirectoryTagCheckedSlongArray+0x30>
lea    0x34ccf(%rip),%rdi        # 54b77 <module.52+0xbd>
lea    0x34993(%rip),%rsi        # 54842 <module.26+0x86>
mov    $0x841,%edx
lea    0x34cf3(%rip),%rcx        # 54bae <module.52+0xf4>
callq  8490 <__assert_fail@plt>
mov    0x10(%rdi),%eax
and    $0x80,%eax
test   %eax,%eax
jne    1fed7 <TIFFWriteDirectoryTagCheckedSlongArray+0x47>
mov    %r9,%rax
mov    %r8,%r9
mov    %rax,%r8
jmp    1ff36 <TIFFWriteDirectoryTagCheckedSlongArray+0xa6>
mov    %r8d,%eax
mov    %r9,%r10
mov    %rcx,-0x8(%rbp)
mov    %rbx,-0x10(%rbp)
mov    %r12,-0x18(%rbp)
mov    %r13,-0x20(%rbp)
mov    %r14,-0x28(%rbp)
mov    %r15,-0x30(%rbp)
mov    %r9,%rbx
mov    %r8,%r12
mov    %rdi,%r13
mov    %r10,%rdi
mov    %rsi,%r14
mov    %rax,%rsi
mov    %rdx,%r15
callq  8b70 <TIFFSwabArrayOfLong@plt>
mov    %r15,%rdx
mov    %r14,%rsi
mov    %r13,%rdi
mov    %rbx,%r8
mov    %r12,%r9
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
mov    -0x10(%rbp),%rbx
mov    -0x8(%rbp),%rcx
sub    $0x10,%rsp
mov    %r9,%rax
shl    $0x2,%eax
mov    %eax,(%rsp)
mov    %r8,0x8(%rsp)
mov    $0x9,%r8d
callq  20a20 <TIFFWriteDirectoryTagData>
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)

000000000001ff60 <TIFFWriteDirectoryTagCheckedLong8Array>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
lea    0x34c77(%rip),%r11        # 54be6 <module.52+0x12c>
cmp    $0x1fffffff,%r8d
jbe    1ff93 <TIFFWriteDirectoryTagCheckedLong8Array+0x33>
mov    %r11,%rcx
lea    0x34c53(%rip),%rdi        # 54bd5 <module.52+0x11b>
lea    0x348b9(%rip),%rsi        # 54842 <module.26+0x86>
mov    $0x85c,%edx
callq  8490 <__assert_fail@plt>
mov    0x10(%rdi),%eax
mov    %rax,%r10
and    $0x80000,%r10d
test   %r10d,%r10d
jne    1ffc1 <TIFFWriteDirectoryTagCheckedLong8Array+0x61>
mov    0x3b8(%rdi),%rdi
mov    %r11,%rsi
lea    0x34c57(%rip),%rdx        # 54c0d <module.52+0x153>
xor    %eax,%eax
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
and    $0x80,%eax
test   %eax,%eax
jne    1ffd2 <TIFFWriteDirectoryTagCheckedLong8Array+0x72>
mov    %r9,%rax
mov    %r8,%r9
jmp    20031 <TIFFWriteDirectoryTagCheckedLong8Array+0xd1>
mov    %r8d,%r10d
mov    %r9,%rax
mov    %rcx,-0x8(%rbp)
mov    %rbx,-0x10(%rbp)
mov    %r12,-0x18(%rbp)
mov    %r13,-0x20(%rbp)
mov    %r14,-0x28(%rbp)
mov    %r15,-0x30(%rbp)
mov    %r9,%rbx
mov    %r8,%r12
mov    %rdx,%r13
mov    %rdi,%r14
mov    %rax,%rdi
mov    %rsi,%r15
mov    %r10,%rsi
callq  8930 <TIFFSwabArrayOfLong8@plt>
mov    %rbx,%rax
mov    %r13,%rdx
mov    %r15,%rsi
mov    %r14,%rdi
mov    %r12,%r9
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
mov    -0x10(%rbp),%rbx
mov    -0x8(%rbp),%rcx
sub    $0x10,%rsp
mov    %r9,%r8
shl    $0x3,%r8d
mov    %r8d,(%rsp)
mov    %rax,0x8(%rsp)
mov    $0x10,%r8d
callq  20a20 <TIFFWriteDirectoryTagData>
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   (%rax)

0000000000020060 <TIFFWriteDirectoryTagCheckedSlong8Array>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
lea    0x34bc0(%rip),%r11        # 54c2f <module.52+0x175>
cmp    $0x1fffffff,%r8d
jbe    20093 <TIFFWriteDirectoryTagCheckedSlong8Array+0x33>
mov    %r11,%rcx
lea    0x34b53(%rip),%rdi        # 54bd5 <module.52+0x11b>
lea    0x347b9(%rip),%rsi        # 54842 <module.26+0x86>
mov    $0x87b,%edx
callq  8490 <__assert_fail@plt>
mov    0x10(%rdi),%eax
mov    %rax,%r10
and    $0x80000,%r10d
test   %r10d,%r10d
jne    200c1 <TIFFWriteDirectoryTagCheckedSlong8Array+0x61>
mov    0x3b8(%rdi),%rdi
mov    %r11,%rsi
lea    0x34ba1(%rip),%rdx        # 54c57 <module.52+0x19d>
xor    %eax,%eax
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
and    $0x80,%eax
test   %eax,%eax
jne    200d2 <TIFFWriteDirectoryTagCheckedSlong8Array+0x72>
mov    %r9,%rax
mov    %r8,%r9
jmp    20131 <TIFFWriteDirectoryTagCheckedSlong8Array+0xd1>
mov    %r8d,%r10d
mov    %r9,%rax
mov    %rcx,-0x8(%rbp)
mov    %rbx,-0x10(%rbp)
mov    %r12,-0x18(%rbp)
mov    %r13,-0x20(%rbp)
mov    %r14,-0x28(%rbp)
mov    %r15,-0x30(%rbp)
mov    %r9,%rbx
mov    %r8,%r12
mov    %rdx,%r13
mov    %rdi,%r14
mov    %rax,%rdi
mov    %rsi,%r15
mov    %r10,%rsi
callq  8930 <TIFFSwabArrayOfLong8@plt>
mov    %rbx,%rax
mov    %r13,%rdx
mov    %r15,%rsi
mov    %r14,%rdi
mov    %r12,%r9
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
mov    -0x10(%rbp),%rbx
mov    -0x8(%rbp),%rcx
sub    $0x10,%rsp
mov    %r9,%r8
shl    $0x3,%r8d
mov    %r8d,(%rsp)
mov    %rax,0x8(%rsp)
mov    $0x11,%r8d
callq  20a20 <TIFFWriteDirectoryTagData>
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   (%rax)

0000000000020160 <TIFFWriteDirectoryTagCheckedRational>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
lea    0x34b0b(%rip),%r8        # 54c7a <module.67>
xorpd  %xmm1,%xmm1
ucomisd %xmm1,%xmm0
jp     2017b <TIFFWriteDirectoryTagCheckedRational+0x1b>
jb     201c6 <TIFFWriteDirectoryTagCheckedRational+0x66>
ucomisd %xmm0,%xmm0
jp     201e2 <TIFFWriteDirectoryTagCheckedRational+0x82>
ucomisd %xmm1,%xmm0
jp     20189 <TIFFWriteDirectoryTagCheckedRational+0x29>
je     201fe <TIFFWriteDirectoryTagCheckedRational+0x9e>
movsd  0x34d1f(%rip),%xmm1        # 54eb0 <module.82+0x53>
ucomisd %xmm1,%xmm0
jp     2019d <TIFFWriteDirectoryTagCheckedRational+0x3d>
jbe    2028c <TIFFWriteDirectoryTagCheckedRational+0x12c>
movsd  0x34d13(%rip),%xmm2        # 54eb8 <module.82+0x5b>
ucomisd %xmm2,%xmm0
jp     201b1 <TIFFWriteDirectoryTagCheckedRational+0x51>
jb     202b9 <TIFFWriteDirectoryTagCheckedRational+0x159>
movl   $0xffffffff,-0x28(%rbp)
divsd  %xmm0,%xmm1
cvttsd2si %xmm1,%rax
mov    %eax,-0x24(%rbp)
jmp    2020c <TIFFWriteDirectoryTagCheckedRational+0xac>
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
mov    %r8,%rsi
lea    0x34ac6(%rip),%rdx        # 54c9f <module.67+0x25>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
mov    %r8,%rsi
lea    0x34ac4(%rip),%rdx        # 54cb9 <module.67+0x3f>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
movl   $0x0,-0x28(%rbp)
movl   $0x1,-0x24(%rbp)
mov    0x10(%rdi),%eax
and    $0x80,%eax
test   %eax,%eax
je     20265 <TIFFWriteDirectoryTagCheckedRational+0x105>
lea    -0x28(%rbp),%rax
mov    %r12,-0x8(%rbp)
mov    %r13,-0x10(%rbp)
mov    %r14,-0x18(%rbp)
mov    %r15,-0x20(%rbp)
mov    %rcx,%r12
mov    %rdx,%r13
mov    %rdi,%r14
mov    %rax,%rdi
mov    %rsi,%r15
callq  8480 <TIFFSwabLong@plt>
lea    -0x24(%rbp),%rdi
callq  8480 <TIFFSwabLong@plt>
mov    %r12,%rcx
mov    %r13,%rdx
mov    %r15,%rsi
mov    %r14,%rdi
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
sub    $0x10,%rsp
movl   $0x8,(%rsp)
lea    -0x28(%rbp),%rax
mov    %rax,0x8(%rsp)
mov    $0x5,%r8d
mov    $0x1,%r9d
callq  20a20 <TIFFWriteDirectoryTagData>
leaveq 
retq   
cvttsd2si %xmm0,%r8
mov    %r8d,%eax
cvtsi2sd %rax,%xmm2
ucomisd %xmm2,%xmm0
jp     2019d <TIFFWriteDirectoryTagCheckedRational+0x3d>
jne    2019d <TIFFWriteDirectoryTagCheckedRational+0x3d>
mov    %r8d,-0x28(%rbp)
movl   $0x1,-0x24(%rbp)
jmpq   2020c <TIFFWriteDirectoryTagCheckedRational+0xac>
mulsd  %xmm1,%xmm0
cvttsd2si %xmm0,%rax
mov    %eax,-0x28(%rbp)
movl   $0xffffffff,-0x24(%rbp)
jmpq   2020c <TIFFWriteDirectoryTagCheckedRational+0xac>
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   0x0(%rax)

00000000000202e0 <TIFFWriteDirectoryTagCheckedRationalArray>:
push   %rbp
mov    %rsp,%rbp
sub    $0x40,%rsp
mov    %r13,-0x28(%rbp)
mov    %r14,-0x30(%rbp)
mov    %r15,-0x38(%rbp)
mov    %rsi,-0x8(%rbp)
mov    %rdx,-0x10(%rbp)
mov    %rcx,-0x18(%rbp)
lea    (%r8,%r8,1),%eax
mov    %eax,%eax
mov    %rax,-0x20(%rbp)
shl    $0x2,%rax
mov    %r12,%r13
mov    %rbx,%r12
mov    %r9,%rbx
mov    %rdi,%r14
mov    %rax,%rdi
mov    %r8,%r15
callq  8440 <_TIFFmalloc@plt>
test   %rax,%rax
je     2034d <TIFFWriteDirectoryTagCheckedRationalArray+0x6d>
movsd  0x34b7e(%rip),%xmm5        # 54eb0 <module.82+0x53>
movss  0x34b86(%rip),%xmm3        # 54ec0 <module.82+0x63>
movss  0x34b82(%rip),%xmm2        # 54ec4 <module.82+0x67>
xorpd  %xmm1,%xmm1
xor    %ecx,%ecx
mov    %rax,%rdx
jmp    20397 <TIFFWriteDirectoryTagCheckedRationalArray+0xb7>
xor    %eax,%eax
mov    0x3b8(%r14),%rdi
lea    0x3497a(%rip),%rsi        # 54cd7 <module.70>
lea    0x345dd(%rip),%rdx        # 54941 <module.26+0x185>
callq  8a00 <TIFFErrorExt@plt>
mov    %r12,%rbx
mov    %r13,%r12
xor    %eax,%eax
mov    -0x38(%rbp),%r15
mov    -0x30(%rbp),%r14
mov    -0x28(%rbp),%r13
leaveq 
retq   
movl   $0x0,(%rdx)
movl   $0x1,0x4(%rdx)
add    $0x8,%rdx
add    $0x4,%rbx
add    $0x1,%ecx
cmp    %ecx,%r15d
ja     203af <TIFFWriteDirectoryTagCheckedRationalArray+0xcf>
mov    0x10(%r14),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
jne    203f5 <TIFFWriteDirectoryTagCheckedRationalArray+0x115>
mov    %rax,%rbx
jmp    20404 <TIFFWriteDirectoryTagCheckedRationalArray+0x124>
movss  (%rbx),%xmm4
ucomiss %xmm1,%xmm4
jp     203ba <TIFFWriteDirectoryTagCheckedRationalArray+0xda>
jbe    2037f <TIFFWriteDirectoryTagCheckedRationalArray+0x9f>
ucomiss %xmm4,%xmm4
jp     2037f <TIFFWriteDirectoryTagCheckedRationalArray+0x9f>
ucomiss %xmm1,%xmm4
jbe    20459 <TIFFWriteDirectoryTagCheckedRationalArray+0x179>
ucomiss %xmm2,%xmm4
jp     20459 <TIFFWriteDirectoryTagCheckedRationalArray+0x179>
ja     20459 <TIFFWriteDirectoryTagCheckedRationalArray+0x179>
cvttss2si %xmm4,%rdi
mov    %edi,%esi
cvtsi2ss %rsi,%xmm0
ucomiss %xmm0,%xmm4
jp     20459 <TIFFWriteDirectoryTagCheckedRationalArray+0x179>
jne    20459 <TIFFWriteDirectoryTagCheckedRationalArray+0x179>
mov    %edi,(%rdx)
movl   $0x1,0x4(%rdx)
jmp    2038c <TIFFWriteDirectoryTagCheckedRationalArray+0xac>
mov    %rax,%rbx
mov    %rbx,%rdi
mov    -0x20(%rbp),%rsi
callq  8b70 <TIFFSwabArrayOfLong@plt>
sub    $0x10,%rsp
mov    %r15,%rax
shl    $0x3,%eax
mov    %eax,(%rsp)
mov    %r14,%rdi
mov    %r15,%r9
mov    %rbx,0x8(%rsp)
mov    $0x5,%r8d
mov    -0x18(%rbp),%rcx
mov    -0x10(%rbp),%rdx
mov    -0x8(%rbp),%rsi
callq  20a20 <TIFFWriteDirectoryTagData>
mov    %rbx,%rdi
mov    %rax,%rbx
add    $0x10,%rsp
callq  8bb0 <_TIFFfree@plt>
mov    %rbx,%rax
mov    %r12,%rbx
mov    %r13,%r12
mov    -0x38(%rbp),%r15
mov    -0x30(%rbp),%r14
mov    -0x28(%rbp),%r13
leaveq 
retq   
ucomiss %xmm3,%xmm4
jp     20460 <TIFFWriteDirectoryTagCheckedRationalArray+0x180>
jb     20483 <TIFFWriteDirectoryTagCheckedRationalArray+0x1a3>
movl   $0xffffffff,(%rdx)
movss  (%rbx),%xmm0
cvtss2sd %xmm0,%xmm0
movapd %xmm5,%xmm4
divsd  %xmm0,%xmm4
cvttsd2si %xmm4,%rsi
mov    %esi,0x4(%rdx)
jmpq   2038c <TIFFWriteDirectoryTagCheckedRationalArray+0xac>
cvtss2sd %xmm4,%xmm0
mulsd  %xmm5,%xmm0
cvttsd2si %xmm0,%rsi
mov    %esi,(%rdx)
movl   $0xffffffff,0x4(%rdx)
jmpq   2038c <TIFFWriteDirectoryTagCheckedRationalArray+0xac>
xchg   %ax,%ax

00000000000204a0 <TIFFWriteDirectoryTagCheckedSrationalArray>:
push   %rbp
mov    %rsp,%rbp
sub    $0x40,%rsp
mov    %r13,-0x28(%rbp)
mov    %r14,-0x30(%rbp)
mov    %r15,-0x38(%rbp)
mov    %rsi,-0x8(%rbp)
mov    %rdx,-0x10(%rbp)
mov    %rcx,-0x18(%rbp)
lea    (%r8,%r8,1),%eax
mov    %eax,%eax
mov    %rax,-0x20(%rbp)
shl    $0x2,%rax
mov    %rbx,%r13
mov    %r9,%rbx
mov    %r8,%r14
mov    %rdi,%r15
mov    %rax,%rdi
callq  8440 <_TIFFmalloc@plt>
test   %rax,%rax
je     20512 <TIFFWriteDirectoryTagCheckedSrationalArray+0x72>
movsd  0x349e1(%rip),%xmm6        # 54ed0 <module.82+0x73>
movss  0x349d1(%rip),%xmm5        # 54ec8 <module.82+0x6b>
movss  0x349d9(%rip),%xmm4        # 54ed8 <module.82+0x7b>
movss  0x349b9(%rip),%xmm2        # 54ec0 <module.82+0x63>
xorpd  %xmm1,%xmm1
xor    %ecx,%ecx
mov    %rax,%rdx
jmp    20555 <TIFFWriteDirectoryTagCheckedSrationalArray+0xb5>
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
lea    0x347df(%rip),%rsi        # 54d01 <module.71>
lea    0x34418(%rip),%rdx        # 54941 <module.26+0x185>
callq  8a00 <TIFFErrorExt@plt>
mov    %r13,%rbx
xor    %eax,%eax
mov    -0x38(%rbp),%r15
mov    -0x30(%rbp),%r14
mov    -0x28(%rbp),%r13
leaveq 
retq   
mov    %esi,(%rdx)
movl   $0x1,0x4(%rdx)
add    $0x4,%rbx
add    $0x8,%rdx
add    $0x1,%ecx
cmp    %ecx,%r14d
ja     20573 <TIFFWriteDirectoryTagCheckedSrationalArray+0xd3>
mov    0x10(%r15),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
jne    205bf <TIFFWriteDirectoryTagCheckedSrationalArray+0x11f>
mov    %r15,%rdi
mov    %rax,%rbx
mov    %r14,%r9
jmp    205d4 <TIFFWriteDirectoryTagCheckedSrationalArray+0x134>
movss  (%rbx),%xmm0
ucomiss %xmm1,%xmm0
jp     20582 <TIFFWriteDirectoryTagCheckedSrationalArray+0xe2>
jb     20620 <TIFFWriteDirectoryTagCheckedSrationalArray+0x180>
cvttss2si %xmm0,%esi
cvtsi2ss %esi,%xmm3
ucomiss %xmm3,%xmm0
jp     20595 <TIFFWriteDirectoryTagCheckedSrationalArray+0xf5>
je     2065d <TIFFWriteDirectoryTagCheckedSrationalArray+0x1bd>
ucomiss %xmm2,%xmm0
jp     205a0 <TIFFWriteDirectoryTagCheckedSrationalArray+0x100>
jb     2066b <TIFFWriteDirectoryTagCheckedSrationalArray+0x1cb>
movl   $0x7fffffff,(%rdx)
movss  (%rbx),%xmm0
cvtss2sd %xmm0,%xmm0
movapd %xmm6,%xmm3
divsd  %xmm0,%xmm3
cvttsd2si %xmm3,%esi
mov    %esi,0x4(%rdx)
jmp    2054a <TIFFWriteDirectoryTagCheckedSrationalArray+0xaa>
mov    %rax,%rbx
mov    %rbx,%rdi
mov    -0x20(%rbp),%rsi
callq  8b70 <TIFFSwabArrayOfLong@plt>
mov    %r15,%rdi
mov    %r14,%r9
sub    $0x10,%rsp
mov    %r9,%rax
shl    $0x3,%eax
mov    %eax,(%rsp)
mov    %rbx,0x8(%rsp)
mov    $0xa,%r8d
mov    -0x18(%rbp),%rcx
mov    -0x10(%rbp),%rdx
mov    -0x8(%rbp),%rsi
callq  20a20 <TIFFWriteDirectoryTagData>
mov    %rbx,%rdi
mov    %rax,%rbx
add    $0x10,%rsp
callq  8bb0 <_TIFFfree@plt>
mov    %rbx,%rax
mov    %r13,%rbx
mov    -0x38(%rbp),%r15
mov    -0x30(%rbp),%r14
mov    -0x28(%rbp),%r13
leaveq 
retq   
cvttss2si %xmm0,%esi
cvtsi2ss %esi,%xmm3
ucomiss %xmm3,%xmm0
jp     20633 <TIFFWriteDirectoryTagCheckedSrationalArray+0x193>
je     20541 <TIFFWriteDirectoryTagCheckedSrationalArray+0xa1>
ucomiss %xmm4,%xmm0
ja     20685 <TIFFWriteDirectoryTagCheckedSrationalArray+0x1e5>
movl   $0x80000001,(%rdx)
movss  (%rbx),%xmm0
xorps  %xmm5,%xmm0
cvtss2sd %xmm0,%xmm0
movapd %xmm6,%xmm3
divsd  %xmm0,%xmm3
cvttsd2si %xmm3,%esi
mov    %esi,0x4(%rdx)
jmpq   2054a <TIFFWriteDirectoryTagCheckedSrationalArray+0xaa>
mov    %esi,(%rdx)
movl   $0x1,0x4(%rdx)
jmpq   2054a <TIFFWriteDirectoryTagCheckedSrationalArray+0xaa>
cvtss2sd %xmm0,%xmm0
mulsd  %xmm6,%xmm0
cvttsd2si %xmm0,%esi
mov    %esi,(%rdx)
movl   $0x7fffffff,0x4(%rdx)
jmpq   2054a <TIFFWriteDirectoryTagCheckedSrationalArray+0xaa>
xorps  %xmm5,%xmm0
cvtss2sd %xmm0,%xmm0
mulsd  %xmm6,%xmm0
cvttsd2si %xmm0,%esi
neg    %esi
mov    %esi,(%rdx)
movl   $0x7fffffff,0x4(%rdx)
jmpq   2054a <TIFFWriteDirectoryTagCheckedSrationalArray+0xaa>
data16 nopw %cs:0x0(%rax,%rax,1)
nop

00000000000206b0 <TIFFWriteDirectoryTagCheckedFloatArray>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
cmp    $0x3fffffff,%r8d
jbe    206e0 <TIFFWriteDirectoryTagCheckedFloatArray+0x30>
lea    0x344af(%rip),%rdi        # 54b77 <module.52+0xbd>
lea    0x34173(%rip),%rsi        # 54842 <module.26+0x86>
mov    $0x930,%edx
lea    0x34651(%rip),%rcx        # 54d2c <module.71+0x2b>
callq  8490 <__assert_fail@plt>
mov    0x10(%rdi),%eax
and    $0x80,%eax
test   %eax,%eax
jne    206f7 <TIFFWriteDirectoryTagCheckedFloatArray+0x47>
mov    %r9,%rax
mov    %r8,%r9
mov    %rax,%r8
jmp    20756 <TIFFWriteDirectoryTagCheckedFloatArray+0xa6>
mov    %r8d,%eax
mov    %r9,%r10
mov    %rcx,-0x8(%rbp)
mov    %rbx,-0x10(%rbp)
mov    %r12,-0x18(%rbp)
mov    %r13,-0x20(%rbp)
mov    %r14,-0x28(%rbp)
mov    %r15,-0x30(%rbp)
mov    %r9,%rbx
mov    %r8,%r12
mov    %rdi,%r13
mov    %r10,%rdi
mov    %rsi,%r14
mov    %rax,%rsi
mov    %rdx,%r15
callq  8060 <TIFFSwabArrayOfFloat@plt>
mov    %r15,%rdx
mov    %r14,%rsi
mov    %r13,%rdi
mov    %rbx,%r8
mov    %r12,%r9
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
mov    -0x10(%rbp),%rbx
mov    -0x8(%rbp),%rcx
sub    $0x10,%rsp
mov    %r9,%rax
shl    $0x2,%eax
mov    %eax,(%rsp)
mov    %r8,0x8(%rsp)
mov    $0xb,%r8d
callq  20a20 <TIFFWriteDirectoryTagData>
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)

0000000000020780 <TIFFWriteDirectoryTagCheckedDoubleArray>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
cmp    $0x1fffffff,%r8d
jbe    207b0 <TIFFWriteDirectoryTagCheckedDoubleArray+0x30>
lea    0x3443d(%rip),%rdi        # 54bd5 <module.52+0x11b>
lea    0x340a3(%rip),%rsi        # 54842 <module.26+0x86>
mov    $0x949,%edx
lea    0x345a8(%rip),%rcx        # 54d53 <module.71+0x52>
callq  8490 <__assert_fail@plt>
mov    0x10(%rdi),%eax
and    $0x80,%eax
test   %eax,%eax
jne    207c7 <TIFFWriteDirectoryTagCheckedDoubleArray+0x47>
mov    %r9,%rax
mov    %r8,%r9
mov    %rax,%r8
jmp    20826 <TIFFWriteDirectoryTagCheckedDoubleArray+0xa6>
mov    %r8d,%eax
mov    %r9,%r10
mov    %rcx,-0x8(%rbp)
mov    %rbx,-0x10(%rbp)
mov    %r12,-0x18(%rbp)
mov    %r13,-0x20(%rbp)
mov    %r14,-0x28(%rbp)
mov    %r15,-0x30(%rbp)
mov    %r9,%rbx
mov    %r8,%r12
mov    %rdi,%r13
mov    %r10,%rdi
mov    %rsi,%r14
mov    %rax,%rsi
mov    %rdx,%r15
callq  81b0 <TIFFSwabArrayOfDouble@plt>
mov    %r15,%rdx
mov    %r14,%rsi
mov    %r13,%rdi
mov    %rbx,%r8
mov    %r12,%r9
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
mov    -0x10(%rbp),%rbx
mov    -0x8(%rbp),%rcx
sub    $0x10,%rsp
mov    %r9,%rax
shl    $0x3,%eax
mov    %eax,(%rsp)
mov    %r8,0x8(%rsp)
mov    $0xc,%r8d
callq  20a20 <TIFFWriteDirectoryTagData>
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)

0000000000020850 <TIFFWriteDirectoryTagCheckedIfdArray>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
cmp    $0x3fffffff,%r8d
jbe    20880 <TIFFWriteDirectoryTagCheckedIfdArray+0x30>
lea    0x3430f(%rip),%rdi        # 54b77 <module.52+0xbd>
lea    0x33fd3(%rip),%rsi        # 54842 <module.26+0x86>
mov    $0x954,%edx
lea    0x34500(%rip),%rcx        # 54d7b <module.71+0x7a>
callq  8490 <__assert_fail@plt>
mov    0x10(%rdi),%eax
and    $0x80,%eax
test   %eax,%eax
jne    20897 <TIFFWriteDirectoryTagCheckedIfdArray+0x47>
mov    %r9,%rax
mov    %r8,%r9
mov    %rax,%r8
jmp    208f6 <TIFFWriteDirectoryTagCheckedIfdArray+0xa6>
mov    %r8d,%eax
mov    %r9,%r10
mov    %rcx,-0x8(%rbp)
mov    %rbx,-0x10(%rbp)
mov    %r12,-0x18(%rbp)
mov    %r13,-0x20(%rbp)
mov    %r14,-0x28(%rbp)
mov    %r15,-0x30(%rbp)
mov    %r9,%rbx
mov    %r8,%r12
mov    %rdi,%r13
mov    %r10,%rdi
mov    %rsi,%r14
mov    %rax,%rsi
mov    %rdx,%r15
callq  8b70 <TIFFSwabArrayOfLong@plt>
mov    %r15,%rdx
mov    %r14,%rsi
mov    %r13,%rdi
mov    %rbx,%r8
mov    %r12,%r9
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
mov    -0x10(%rbp),%rbx
mov    -0x8(%rbp),%rcx
sub    $0x10,%rsp
mov    %r9,%rax
shl    $0x2,%eax
mov    %eax,(%rsp)
mov    %r8,0x8(%rsp)
mov    $0xd,%r8d
callq  20a20 <TIFFWriteDirectoryTagData>
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)

0000000000020920 <TIFFWriteDirectoryTagCheckedIfd8Array>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
lea    0x33f13(%rip),%r11        # 54842 <module.26+0x86>
lea    0x3446a(%rip),%rax        # 54da0 <module.71+0x9f>
cmp    $0x1fffffff,%r8d
jbe    20956 <TIFFWriteDirectoryTagCheckedIfd8Array+0x36>
mov    %rax,%rcx
mov    %r11,%rsi
lea    0x34289(%rip),%rdi        # 54bd5 <module.52+0x11b>
mov    $0x95e,%edx
callq  8490 <__assert_fail@plt>
mov    0x10(%rdi),%eax
mov    %rax,%r10
and    $0x80000,%r10d
test   %r10d,%r10d
jne    20983 <TIFFWriteDirectoryTagCheckedIfd8Array+0x63>
mov    %r11,%rsi
lea    0x34454(%rip),%rdi        # 54dc6 <module.71+0xc5>
mov    $0x960,%edx
lea    0x34422(%rip),%rcx        # 54da0 <module.71+0x9f>
callq  8490 <__assert_fail@plt>
and    $0x80,%eax
test   %eax,%eax
jne    20994 <TIFFWriteDirectoryTagCheckedIfd8Array+0x74>
mov    %r9,%rax
mov    %r8,%r9
jmp    209f3 <TIFFWriteDirectoryTagCheckedIfd8Array+0xd3>
mov    %r8d,%r10d
mov    %r9,%rax
mov    %rcx,-0x8(%rbp)
mov    %rbx,-0x10(%rbp)
mov    %r12,-0x18(%rbp)
mov    %r13,-0x20(%rbp)
mov    %r14,-0x28(%rbp)
mov    %r15,-0x30(%rbp)
mov    %r9,%rbx
mov    %r8,%r12
mov    %rdi,%r13
mov    %rax,%rdi
mov    %rsi,%r14
mov    %r10,%rsi
mov    %rdx,%r15
callq  8930 <TIFFSwabArrayOfLong8@plt>
mov    %rbx,%rax
mov    %r15,%rdx
mov    %r14,%rsi
mov    %r13,%rdi
mov    %r12,%r9
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
mov    -0x10(%rbp),%rbx
mov    -0x8(%rbp),%rcx
sub    $0x10,%rsp
mov    %r9,%r8
shl    $0x3,%r8d
mov    %r8d,(%rsp)
mov    %rax,0x8(%rsp)
mov    $0x12,%r8d
callq  20a20 <TIFFWriteDirectoryTagData>
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nop

0000000000020a20 <TIFFWriteDirectoryTagData>:
push   %rbp
mov    %rsp,%rbp
sub    $0x40,%rsp
mov    %r15,-0x18(%rbp)
xor    %eax,%eax
mov    %rax,%r10
jmp    20a3d <TIFFWriteDirectoryTagData+0x1d>
cmp    %cx,%r15w
ja     20a73 <TIFFWriteDirectoryTagData+0x53>
add    $0x1,%r10d
mov    %r10d,%r11d
cmp    (%rsi),%r10d
jae    20a73 <TIFFWriteDirectoryTagData+0x53>
lea    (%r11,%r11,2),%r15
movzwl (%rdx,%r15,8),%r15d
cmp    %cx,%r15w
jne    20a33 <TIFFWriteDirectoryTagData+0x13>
lea    0x343a1(%rip),%rdi        # 54dfc <module.77+0x1a>
mov    $0x96e,%edx
lea    0x343aa(%rip),%rcx        # 54e11 <module.77+0x2f>
lea    0x33dd4(%rip),%rsi        # 54842 <module.26+0x86>
callq  8490 <__assert_fail@plt>
mov    (%rsi),%r15d
cmp    %r15d,%r10d
jb     20b0e <TIFFWriteDirectoryTagData+0xee>
mov    %rsi,%r15
lea    (%r11,%r11,2),%rsi
lea    (%rdx,%rsi,8),%rdx
mov    %cx,(%rdx)
mov    %r8w,0x2(%rdx)
mov    %r9d,%ecx
mov    %rcx,0x8(%rdx)
movq   $0x0,0x10(%rdx)
mov    $0x4,%r8d
mov    0x10(%rdi),%ecx
and    $0x80000,%ecx
test   %ecx,%ecx
je     20aba <TIFFWriteDirectoryTagData+0x9a>
mov    $0x8,%r8d
mov    0x18(%rbp),%rsi
lea    0x10(%rdx),%r9
mov    0x10(%rbp),%edx
cmp    %edx,%r8d
jae    20b1f <TIFFWriteDirectoryTagData+0xff>
test   %ecx,%ecx
mov    0x290(%rdi),%r8
lea    (%rdx,%r8,1),%rcx
jne    20adb <TIFFWriteDirectoryTagData+0xbb>
mov    %ecx,%ecx
lea    0x34300(%rip),%r10        # 54de2 <module.77>
cmp    %r8,%rcx
jae    20b3b <TIFFWriteDirectoryTagData+0x11b>
xor    %ecx,%ecx
mov    0x3b8(%rdi),%rdi
mov    %r10,%rsi
mov    %rax,%r15
mov    %rcx,%rax
lea    0x33e4f(%rip),%rdx        # 5494f <module.26+0x193>
callq  8a00 <TIFFErrorExt@plt>
mov    %r15,%rax
mov    -0x18(%rbp),%r15
leaveq 
retq   
mov    %r14,-0x38(%rbp)
mov    %rsi,-0x28(%rbp)
mov    %r13,-0x30(%rbp)
jmpq   20bcc <TIFFWriteDirectoryTagData+0x1ac>
mov    %r9,%rdi
callq  8790 <_TIFFmemcpy@plt>
mov    (%r15),%eax
add    $0x1,%eax
mov    %eax,(%r15)
mov    $0x1,%eax
mov    -0x18(%rbp),%r15
leaveq 
retq   
cmp    %rdx,%rcx
jb     20ae7 <TIFFWriteDirectoryTagData+0xc7>
mov    %rdi,%rax
mov    %r8,%r10
mov    %r14,-0x10(%rbp)
mov    %rsi,-0x38(%rbp)
mov    %rcx,-0x30(%rbp)
mov    %r8,-0x20(%rbp)
mov    %r9,-0x28(%rbp)
mov    %r15,-0x8(%rbp)
mov    %r10,%rsi
mov    %rdi,%r14
mov    %rax,%rdi
mov    %rdx,%r15
callq  82f0 <_TIFFSeekOK@plt>
test   %eax,%eax
jne    20be2 <TIFFWriteDirectoryTagData+0x1c2>
xor    %eax,%eax
mov    0x3b8(%r14),%rdi
lea    0x3425f(%rip),%rsi        # 54de2 <module.77>
lea    0x342a1(%rip),%rdx        # 54e2b <module.77+0x49>
callq  8a00 <TIFFErrorExt@plt>
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
xor    %eax,%eax
leaveq 
retq   
lea    -0x1(%r15),%r14d
mov    %r14d,%esi
lea    (%rsi,%rsi,2),%r13
mov    (%rdx,%r13,8),%rsi
mov    %r15d,%r15d
lea    (%r15,%r15,2),%r15
mov    %rsi,(%rdx,%r15,8)
mov    0x8(%rdx,%r13,8),%rsi
mov    %rsi,0x8(%rdx,%r15,8)
mov    0x10(%rdx,%r13,8),%rsi
mov    %rsi,0x10(%rdx,%r15,8)
mov    %r14,%r15
cmp    %r15d,%r10d
jb     20b9b <TIFFWriteDirectoryTagData+0x17b>
mov    -0x30(%rbp),%r13
mov    -0x28(%rbp),%r15
mov    -0x38(%rbp),%r14
jmpq   20a82 <TIFFWriteDirectoryTagData+0x62>
cmp    $0x7fffffff,%r15d
jbe    20c0a <TIFFWriteDirectoryTagData+0x1ea>
lea    0x34253(%rip),%rdi        # 54e45 <module.77+0x63>
mov    $0x990,%edx
lea    0x34213(%rip),%rcx        # 54e11 <module.77+0x2f>
lea    0x33c3d(%rip),%rsi        # 54842 <module.26+0x86>
callq  8490 <__assert_fail@plt>
mov    0x3c8(%r14),%rax
mov    0x3b8(%r14),%rdi
mov    %r15,%rdx
mov    -0x38(%rbp),%rsi
callq  *%rax
cmp    %r15,%rax
je     20c4e <TIFFWriteDirectoryTagData+0x22e>
xor    %eax,%eax
mov    0x3b8(%r14),%rdi
lea    0x341ac(%rip),%rsi        # 54de2 <module.77>
lea    0x341ee(%rip),%rdx        # 54e2b <module.77+0x49>
callq  8a00 <TIFFErrorExt@plt>
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
xor    %eax,%eax
leaveq 
retq   
mov    -0x30(%rbp),%rcx
mov    %rcx,0x290(%r14)
mov    %rcx,%rax
and    $0x1,%rax
test   %rax,%rax
je     20c70 <TIFFWriteDirectoryTagData+0x250>
lea    0x1(%rcx),%rax
mov    %rax,0x290(%r14)
mov    0x10(%r14),%eax
mov    %rax,%rcx
and    $0x80000,%ecx
test   %ecx,%ecx
jne    20cbe <TIFFWriteDirectoryTagData+0x29e>
mov    -0x20(%rbp),%rcx
mov    %ecx,-0x3c(%rbp)
lea    -0x3c(%rbp),%rsi
and    $0x80,%eax
test   %eax,%eax
je     20ca3 <TIFFWriteDirectoryTagData+0x283>
mov    %rsi,%r14
mov    %r14,%rdi
callq  8480 <TIFFSwabLong@plt>
mov    %r14,%rsi
mov    -0x28(%rbp),%rdi
mov    $0x4,%edx
callq  8790 <_TIFFmemcpy@plt>
mov    -0x8(%rbp),%r15
mov    -0x10(%rbp),%r14
jmpq   20b27 <TIFFWriteDirectoryTagData+0x107>
mov    -0x28(%rbp),%rdi
mov    -0x20(%rbp),%rax
mov    %rax,(%rdi)
mov    0x10(%r14),%eax
and    $0x80,%eax
test   %eax,%eax
jne    20ce3 <TIFFWriteDirectoryTagData+0x2c3>
mov    -0x8(%rbp),%r15
mov    -0x10(%rbp),%r14
jmpq   20b27 <TIFFWriteDirectoryTagData+0x107>
callq  8730 <TIFFSwabLong8@plt>
mov    -0x8(%rbp),%r15
mov    -0x10(%rbp),%r14
jmpq   20b27 <TIFFWriteDirectoryTagData+0x107>
data16 nopw %cs:0x0(%rax,%rax,1)

0000000000020d00 <TIFFLinkDirectory>:
push   %rbp
mov    %rsp,%rbp
sub    $0x70,%rsp
mov    %r15,-0x28(%rbp)
mov    %r14,%r15
mov    %r13,%r14
mov    %r12,%r13
mov    %rbx,%r12
mov    %rdi,%rbx
xor    %esi,%esi
mov    0x3d0(%rbx),%rax
mov    0x3b8(%rbx),%rdi
mov    $0x2,%edx
callq  *%rax
add    $0x1,%rax
and    $0xfffffffffffffffe,%rax
mov    %rax,0x18(%rbx)
mov    $0x4,%r8d
mov    $0x8,%esi
mov    0x10(%rbx),%ecx
mov    %rcx,%rdx
and    $0x2000,%edx
test   %edx,%edx
jne    20d87 <TIFFLinkDirectory+0x87>
mov    %rcx,%rdx
and    $0x80000,%edx
test   %edx,%edx
jne    20e1a <TIFFLinkDirectory+0x11a>
mov    %eax,-0x54(%rbp)
lea    -0x54(%rbp),%rdi
and    $0x80,%ecx
test   %ecx,%ecx
jne    20e6b <TIFFLinkDirectory+0x16b>
mov    %r8,%rsi
jmpq   20e75 <TIFFLinkDirectory+0x175>
mov    %rcx,%rdx
and    $0x80000,%edx
test   %edx,%edx
jne    20eab <TIFFLinkDirectory+0x1ab>
mov    %eax,-0x64(%rbp)
lea    -0x64(%rbp),%rdi
and    $0x80,%ecx
test   %ecx,%ecx
je     20dae <TIFFLinkDirectory+0xae>
callq  8480 <TIFFSwabLong@plt>
mov    0x3d0(%rbx),%rax
mov    0x3b8(%rbx),%rdi
mov    0x2a0(%rbx),%rsi
xor    %edx,%edx
callq  *%rax
mov    0x3c8(%rbx),%rax
mov    0x3b8(%rbx),%rdi
lea    -0x64(%rbp),%rsi
mov    $0x4,%edx
callq  *%rax
cmp    $0x4,%rax
je     20f2e <TIFFLinkDirectory+0x22e>
xor    %eax,%eax
mov    0x3b8(%rbx),%rdi
lea    0x34075(%rip),%rdx        # 54e6f <module.82+0x12>
lea    0x3405c(%rip),%rsi        # 54e5d <module.82>
callq  8a00 <TIFFErrorExt@plt>
mov    %r12,%rbx
mov    %r13,%r12
mov    %r14,%r13
mov    %r15,%r14
xor    %eax,%eax
mov    -0x28(%rbp),%r15
leaveq 
retq   
mov    %rax,-0x48(%rbp)
lea    -0x48(%rbp),%rdi
and    $0x80,%ecx
test   %ecx,%ecx
je     20e36 <TIFFLinkDirectory+0x136>
callq  8730 <TIFFSwabLong8@plt>
mov    $0x8,%esi
mov    0x270(%rbx),%rcx
test   %rcx,%rcx
je     20f6c <TIFFLinkDirectory+0x26c>
lea    -0x40(%rbp),%rax
mov    %r12,-0x8(%rbp)
mov    %r13,-0x10(%rbp)
mov    %r14,-0x18(%rbp)
mov    %r15,-0x20(%rbp)
mov    %rsi,%r12
mov    %rax,%r14
mov    %rcx,%r15
xor    %r13d,%r13d
jmpq   21030 <TIFFLinkDirectory+0x330>
callq  8480 <TIFFSwabLong@plt>
mov    $0x4,%esi
mov    0x26c(%rbx),%ecx
test   %ecx,%ecx
je     210bc <TIFFLinkDirectory+0x3bc>
lea    -0x4e(%rbp),%rax
mov    %r12,-0x8(%rbp)
mov    %r13,-0x10(%rbp)
mov    %r14,-0x18(%rbp)
mov    %r15,-0x20(%rbp)
mov    %rax,%r13
mov    %rcx,%r15
mov    $0x2,%r14d
xor    %r12d,%r12d
jmpq   21132 <TIFFLinkDirectory+0x432>
mov    %rax,-0x60(%rbp)
lea    -0x60(%rbp),%rdi
and    $0x80,%ecx
test   %ecx,%ecx
je     20ec2 <TIFFLinkDirectory+0x1c2>
callq  8730 <TIFFSwabLong8@plt>
mov    0x3d0(%rbx),%rax
mov    0x3b8(%rbx),%rdi
mov    0x2a0(%rbx),%rsi
xor    %edx,%edx
callq  *%rax
mov    0x3c8(%rbx),%rax
mov    0x3b8(%rbx),%rdi
lea    -0x60(%rbp),%rsi
mov    $0x8,%edx
callq  *%rax
cmp    $0x8,%rax
je     211fc <TIFFLinkDirectory+0x4fc>
xor    %eax,%eax
mov    0x3b8(%rbx),%rdi
lea    0x33f61(%rip),%rdx        # 54e6f <module.82+0x12>
lea    0x33f48(%rip),%rsi        # 54e5d <module.82>
callq  8a00 <TIFFErrorExt@plt>
mov    %r12,%rbx
mov    %r13,%r12
mov    %r14,%r13
mov    %r15,%r14
xor    %eax,%eax
mov    -0x28(%rbp),%r15
leaveq 
retq   
movzwl 0x298(%rbx),%eax
add    $0xffff,%eax
mov    %ax,0x298(%rbx)
test   %ax,%ax
jne    2123a <TIFFLinkDirectory+0x53a>
mov    0x10(%rbx),%eax
and    $0xffffdfff,%eax
mov    %eax,0x10(%rbx)
mov    %r12,%rbx
mov    %r13,%r12
mov    %r14,%r13
mov    %r15,%r14
mov    $0x1,%eax
mov    -0x28(%rbp),%r15
leaveq 
retq   
mov    0x18(%rbx),%rax
mov    %rax,0x270(%rbx)
mov    0x3d0(%rbx),%rax
mov    0x3b8(%rbx),%rdi
xor    %edx,%edx
callq  *%rax
mov    0x3c8(%rbx),%rax
mov    0x3b8(%rbx),%rdi
lea    -0x48(%rbp),%rsi
mov    $0x8,%edx
callq  *%rax
cmp    $0x8,%rax
jne    21263 <TIFFLinkDirectory+0x563>
mov    %r12,%rbx
mov    %r13,%r12
mov    %r14,%r13
mov    %r15,%r14
mov    $0x1,%eax
mov    -0x28(%rbp),%r15
leaveq 
retq   
movzwl %ax,%eax
lea    (%rax,%rax,4),%eax
shl    $0x2,%eax
movslq %eax,%rax
lea    0x8(%r15,%rax,1),%rsi
mov    %rsi,-0x30(%rbp)
mov    0x3d0(%rbx),%rax
mov    0x3b8(%rbx),%rdi
mov    %r13,%rdx
callq  *%rax
mov    0x3c0(%rbx),%rax
mov    0x3b8(%rbx),%rdi
lea    -0x38(%rbp),%r15
mov    %r15,%rsi
mov    %r12,%rdx
callq  *%rax
cmp    $0x8,%rax
jne    2128f <TIFFLinkDirectory+0x58f>
mov    0x10(%rbx),%eax
and    $0x80,%eax
test   %eax,%eax
je     21023 <TIFFLinkDirectory+0x323>
mov    %r15,%rdi
callq  8730 <TIFFSwabLong8@plt>
mov    -0x38(%rbp),%r15
test   %r15,%r15
je     212c4 <TIFFLinkDirectory+0x5c4>
mov    %rbx,%rdi
mov    %r15,%rsi
callq  82f0 <_TIFFSeekOK@plt>
test   %eax,%eax
je     21317 <TIFFLinkDirectory+0x617>
mov    0x3c0(%rbx),%rax
mov    0x3b8(%rbx),%rdi
mov    %r14,%rsi
mov    %r12,%rdx
callq  *%rax
cmp    $0x8,%rax
jne    21317 <TIFFLinkDirectory+0x617>
mov    0x10(%rbx),%eax
and    $0x80,%eax
test   %eax,%eax
je     21077 <TIFFLinkDirectory+0x377>
mov    %r14,%rdi
callq  8730 <TIFFSwabLong8@plt>
mov    -0x40(%rbp),%rax
cmp    $0xffff,%rax
jbe    20fc3 <TIFFLinkDirectory+0x2c3>
xor    %eax,%eax
mov    0x3b8(%rbx),%rdi
lea    0x33573(%rip),%rdx        # 5460a <module.10+0x8a>
lea    0x33dbf(%rip),%rsi        # 54e5d <module.82>
callq  8a00 <TIFFErrorExt@plt>
mov    %r13,%rax
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x28(%rbp),%r15
leaveq 
retq   
mov    0x18(%rbx),%eax
mov    %eax,0x26c(%rbx)
mov    0x3d0(%rbx),%rax
mov    0x3b8(%rbx),%rdi
xor    %edx,%edx
callq  *%rax
mov    0x3c8(%rbx),%rax
mov    0x3b8(%rbx),%rdi
lea    -0x54(%rbp),%rsi
mov    $0x4,%edx
callq  *%rax
cmp    $0x4,%rax
jne    2134c <TIFFLinkDirectory+0x64c>
mov    %r12,%rbx
mov    %r13,%r12
mov    %r14,%r13
mov    %r15,%r14
mov    $0x1,%eax
mov    -0x28(%rbp),%r15
leaveq 
retq   
mov    0x10(%rbx),%eax
and    $0x80,%eax
test   %eax,%eax
je     21125 <TIFFLinkDirectory+0x425>
mov    %r15,%rdi
callq  8480 <TIFFSwabLong@plt>
mov    -0x4c(%rbp),%r15d
test   %r15d,%r15d
je     21378 <TIFFLinkDirectory+0x678>
mov    %r15d,%esi
mov    %rbx,%rdi
callq  82f0 <_TIFFSeekOK@plt>
test   %eax,%eax
je     213da <TIFFLinkDirectory+0x6da>
mov    0x3c0(%rbx),%rax
mov    0x3b8(%rbx),%rdi
mov    %r13,%rsi
mov    %r14,%rdx
callq  *%rax
cmp    $0x2,%rax
jne    213da <TIFFLinkDirectory+0x6da>
mov    0x10(%rbx),%eax
and    $0x80,%eax
test   %eax,%eax
je     21179 <TIFFLinkDirectory+0x479>
mov    %r13,%rdi
callq  87c0 <TIFFSwabShort@plt>
movzwl -0x4e(%rbp),%eax
lea    (%rax,%rax,2),%eax
lea    0x2(%r15,%rax,4),%eax
mov    %eax,%esi
mov    0x3d0(%rbx),%rax
mov    0x3b8(%rbx),%rdi
mov    %r12,%rdx
callq  *%rax
mov    0x3c0(%rbx),%rax
mov    0x3b8(%rbx),%rdi
lea    -0x4c(%rbp),%rcx
mov    %rcx,%rsi
mov    $0x4,%edx
mov    %r15,-0x30(%rbp)
mov    %rcx,%r15
callq  *%rax
cmp    $0x4,%rax
je     21111 <TIFFLinkDirectory+0x411>
xor    %eax,%eax
mov    0x3b8(%rbx),%rdi
lea    0x33c86(%rip),%rsi        # 54e5d <module.82>
lea    0x333f1(%rip),%rdx        # 545cf <module.10+0x4f>
callq  8a00 <TIFFErrorExt@plt>
mov    %r12,%rax
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x28(%rbp),%r15
leaveq 
retq   
movzwl 0x298(%rbx),%eax
add    $0xffff,%eax
mov    %ax,0x298(%rbx)
test   %ax,%ax
jne    2140f <TIFFLinkDirectory+0x70f>
mov    0x10(%rbx),%eax
and    $0xffffdfff,%eax
mov    %eax,0x10(%rbx)
mov    %r12,%rbx
mov    %r13,%r12
mov    %r14,%r13
mov    %r15,%r14
mov    $0x1,%eax
mov    -0x28(%rbp),%r15
leaveq 
retq   
mov    0x2a0(%rbx),%rax
add    $0x4,%rax
mov    %rax,0x2a0(%rbx)
mov    %r12,%rbx
mov    %r13,%r12
mov    %r14,%r13
mov    %r15,%r14
mov    $0x1,%eax
mov    -0x28(%rbp),%r15
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rbx),%rdi
mov    (%rbx),%rsi
lea    0x33c1d(%rip),%rdx        # 54e93 <module.82+0x36>
callq  8a00 <TIFFErrorExt@plt>
mov    %r12,%rbx
mov    %r13,%r12
mov    %r14,%r13
mov    %r15,%r14
xor    %eax,%eax
mov    -0x28(%rbp),%r15
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rbx),%rdi
lea    0x33bbe(%rip),%rsi        # 54e5d <module.82>
lea    0x33329(%rip),%rdx        # 545cf <module.10+0x4f>
callq  8a00 <TIFFErrorExt@plt>
mov    %r13,%rax
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x28(%rbp),%r15
leaveq 
retq   
mov    0x3d0(%rbx),%rax
mov    0x3b8(%rbx),%rdi
mov    %r13,%rdx
mov    -0x30(%rbp),%rsi
callq  *%rax
mov    %r12,%rdx
mov    0x3c8(%rbx),%rax
mov    0x3b8(%rbx),%rdi
lea    -0x48(%rbp),%rsi
callq  *%rax
cmp    $0x8,%rax
jne    21438 <TIFFLinkDirectory+0x738>
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    $0x1,%eax
mov    -0x28(%rbp),%r15
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rbx),%rdi
lea    0x33289(%rip),%rdx        # 545b0 <module.10+0x30>
lea    0x33b2f(%rip),%rsi        # 54e5d <module.82>
callq  8a00 <TIFFErrorExt@plt>
mov    %r13,%rax
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x28(%rbp),%r15
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rbx),%rdi
mov    (%rbx),%rsi
lea    0x33b34(%rip),%rdx        # 54e93 <module.82+0x36>
callq  8a00 <TIFFErrorExt@plt>
mov    %r12,%rbx
mov    %r13,%r12
mov    %r14,%r13
mov    %r15,%r14
xor    %eax,%eax
mov    -0x28(%rbp),%r15
leaveq 
retq   
movzwl -0x4e(%rbp),%eax
lea    (%rax,%rax,2),%eax
mov    -0x30(%rbp),%rcx
lea    0x2(%rcx,%rax,4),%eax
mov    %eax,%esi
mov    0x3d0(%rbx),%rax
mov    0x3b8(%rbx),%rdi
mov    %r12,%rdx
callq  *%rax
mov    0x3c8(%rbx),%rax
mov    0x3b8(%rbx),%rdi
lea    -0x54(%rbp),%rsi
mov    $0x4,%edx
callq  *%rax
cmp    $0x4,%rax
jne    2146d <TIFFLinkDirectory+0x76d>
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    $0x1,%eax
mov    -0x28(%rbp),%r15
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rbx),%rdi
lea    0x331c6(%rip),%rdx        # 545b0 <module.10+0x30>
lea    0x33a6c(%rip),%rsi        # 54e5d <module.82>
callq  8a00 <TIFFErrorExt@plt>
mov    %r12,%rax
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x28(%rbp),%r15
leaveq 
retq   
mov    0x2a0(%rbx),%rax
add    $0x8,%rax
mov    %rax,0x2a0(%rbx)
mov    %r12,%rbx
mov    %r13,%r12
mov    %r14,%r13
mov    %r15,%r14
mov    $0x1,%eax
mov    -0x28(%rbp),%r15
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rbx),%rdi
lea    0x33a15(%rip),%rsi        # 54e5d <module.82>
lea    0x3319e(%rip),%rdx        # 545ed <module.10+0x6d>
callq  8a00 <TIFFErrorExt@plt>
mov    %r13,%rax
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x28(%rbp),%r15
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rbx),%rdi
lea    0x339e0(%rip),%rsi        # 54e5d <module.82>
lea    0x33169(%rip),%rdx        # 545ed <module.10+0x6d>
callq  8a00 <TIFFErrorExt@plt>
mov    %r12,%rax
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x28(%rbp),%r15
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   (%rax)

00000000000214b0 <TIFFClampDoubleToFloat>:
push   %rbp
mov    %rsp,%rbp
movsd  0x33a2c(%rip),%xmm1        # 54ee8 <module.82+0x8b>
ucomisd %xmm1,%xmm0
jbe    214cc <TIFFClampDoubleToFloat+0x1c>
movss  0x33a12(%rip),%xmm0        # 54edc <module.82+0x7f>
leaveq 
retq   
movsd  0x33a1c(%rip),%xmm1        # 54ef0 <module.82+0x93>
ucomisd %xmm1,%xmm0
jp     214e6 <TIFFClampDoubleToFloat+0x36>
jae    214e6 <TIFFClampDoubleToFloat+0x36>
movss  0x339fc(%rip),%xmm0        # 54ee0 <module.82+0x83>
leaveq 
retq   
cvtsd2ss %xmm0,%xmm0
leaveq 
retq   
nopl   0x0(%rax)

00000000000214f0 <TIFFClampDoubleToInt8>:
push   %rbp
mov    %rsp,%rbp
movsd  0x339fc(%rip),%xmm1        # 54ef8 <module.82+0x9b>
ucomisd %xmm1,%xmm0
jbe    21509 <TIFFClampDoubleToInt8+0x19>
mov    $0x7f,%eax
leaveq 
retq   
mov    $0xffffffffffffff80,%rax
movsd  0x339e8(%rip),%xmm1        # 54f00 <module.82+0xa3>
ucomisd %xmm1,%xmm0
jp     21522 <TIFFClampDoubleToInt8+0x32>
jae    21522 <TIFFClampDoubleToInt8+0x32>
leaveq 
retq   
ucomisd %xmm0,%xmm0
jnp    2152a <TIFFClampDoubleToInt8+0x3a>
leaveq 
retq   
cvttsd2si %xmm0,%eax
leaveq 
retq   

0000000000021530 <TIFFClampDoubleToInt16>:
push   %rbp
mov    %rsp,%rbp
movsd  0x339cc(%rip),%xmm1        # 54f08 <module.82+0xab>
ucomisd %xmm1,%xmm0
jbe    21549 <TIFFClampDoubleToInt16+0x19>
mov    $0x7fff,%eax
leaveq 
retq   
mov    $0xffffffffffff8000,%rax
movsd  0x339b8(%rip),%xmm1        # 54f10 <module.82+0xb3>
ucomisd %xmm1,%xmm0
jp     21562 <TIFFClampDoubleToInt16+0x32>
jae    21562 <TIFFClampDoubleToInt16+0x32>
leaveq 
retq   
ucomisd %xmm0,%xmm0
jnp    2156a <TIFFClampDoubleToInt16+0x3a>
leaveq 
retq   
cvttsd2si %xmm0,%eax
leaveq 
retq   

0000000000021570 <TIFFClampDoubleToInt32>:
push   %rbp
mov    %rsp,%rbp
movsd  0x33954(%rip),%xmm1        # 54ed0 <module.82+0x73>
ucomisd %xmm1,%xmm0
jbe    21589 <TIFFClampDoubleToInt32+0x19>
mov    $0x7fffffff,%eax
leaveq 
retq   
mov    $0xffffffff80000000,%rax
movsd  0x33980(%rip),%xmm1        # 54f18 <module.82+0xbb>
ucomisd %xmm1,%xmm0
jp     215a2 <TIFFClampDoubleToInt32+0x32>
jae    215a2 <TIFFClampDoubleToInt32+0x32>
leaveq 
retq   
ucomisd %xmm0,%xmm0
jnp    215aa <TIFFClampDoubleToInt32+0x3a>
leaveq 
retq   
cvttsd2si %xmm0,%eax
leaveq 
retq   

00000000000215b0 <TIFFClampDoubleToUInt8>:
push   %rbp
mov    %rsp,%rbp
xorpd  %xmm1,%xmm1
ucomisd %xmm1,%xmm0
jp     215c4 <TIFFClampDoubleToUInt8+0x14>
jae    215c4 <TIFFClampDoubleToUInt8+0x14>
xor    %eax,%eax
leaveq 
retq   
mov    $0xff,%eax
movsd  0x3394f(%rip),%xmm1        # 54f20 <module.82+0xc3>
ucomisd %xmm1,%xmm0
jbe    215d9 <TIFFClampDoubleToUInt8+0x29>
leaveq 
retq   
ucomisd %xmm0,%xmm0
jnp    215e1 <TIFFClampDoubleToUInt8+0x31>
leaveq 
retq   
cvttsd2si %xmm0,%rax
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

00000000000215f0 <TIFFClampDoubleToUInt16>:
push   %rbp
mov    %rsp,%rbp
xorpd  %xmm1,%xmm1
ucomisd %xmm1,%xmm0
jp     21604 <TIFFClampDoubleToUInt16+0x14>
jae    21604 <TIFFClampDoubleToUInt16+0x14>
xor    %eax,%eax
leaveq 
retq   
mov    $0xffff,%eax
movsd  0x33917(%rip),%xmm1        # 54f28 <module.82+0xcb>
ucomisd %xmm1,%xmm0
jbe    21619 <TIFFClampDoubleToUInt16+0x29>
leaveq 
retq   
ucomisd %xmm0,%xmm0
jnp    21621 <TIFFClampDoubleToUInt16+0x31>
leaveq 
retq   
cvttsd2si %xmm0,%rax
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

0000000000021630 <TIFFClampDoubleToUInt32>:
push   %rbp
mov    %rsp,%rbp
xorpd  %xmm1,%xmm1
ucomisd %xmm1,%xmm0
jp     21644 <TIFFClampDoubleToUInt32+0x14>
jae    21644 <TIFFClampDoubleToUInt32+0x14>
xor    %eax,%eax
leaveq 
retq   
mov    $0xffffffff,%eax
movsd  0x3385f(%rip),%xmm1        # 54eb0 <module.82+0x53>
ucomisd %xmm1,%xmm0
jbe    21659 <TIFFClampDoubleToUInt32+0x29>
leaveq 
retq   
ucomisd %xmm0,%xmm0
jnp    21661 <TIFFClampDoubleToUInt32+0x31>
leaveq 
retq   
cvttsd2si %xmm0,%rax
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

0000000000021670 <TIFFInitDumpMode>:
push   %rbp
mov    %rsp,%rbp
lea    0x55(%rip),%rax        # 216d0 <DumpFixupTags>
mov    %rax,0x2c0(%rdi)
lea    0x157(%rip),%rax        # 217e0 <DumpModeDecode>
mov    %rax,0x2f8(%rdi)
mov    %rax,0x308(%rdi)
mov    %rax,0x318(%rdi)
lea    0x3b(%rip),%rax        # 216e0 <DumpModeEncode>
mov    %rax,0x300(%rdi)
mov    %rax,0x310(%rdi)
mov    %rax,0x320(%rdi)
lea    0x1cf(%rip),%rax        # 21890 <DumpModeSeek>
mov    %rax,0x330(%rdi)
mov    $0x1,%eax
leaveq 
retq   
nop

00000000000216d0 <DumpFixupTags>:
push   %rbp
mov    %rsp,%rbp
mov    $0x1,%eax
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

00000000000216e0 <DumpModeEncode>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %r12,-0x8(%rbp)
mov    %r13,-0x10(%rbp)
mov    %r14,-0x18(%rbp)
mov    %r15,-0x20(%rbp)
mov    %rbx,%r12
mov    %rdx,%rbx
mov    %rsi,%r13
mov    %rdi,%r14
jmp    21762 <DumpModeEncode+0x82>
sub    %rcx,%r15
test   %r15,%r15
jle    21781 <DumpModeEncode+0xa1>
mov    0x388(%r14),%rdi
cmp    %rdi,%r13
je     21725 <DumpModeEncode+0x45>
mov    %r13,%rsi
mov    %r15,%rdx
callq  8790 <_TIFFmemcpy@plt>
mov    %r15,%rax
add    0x388(%r14),%rax
mov    %rax,0x388(%r14)
mov    %r15,%rax
add    0x390(%r14),%rax
mov    %rax,0x390(%r14)
sub    %r15,%rbx
add    %r15,%r13
cmp    0x370(%r14),%rax
jl     21762 <DumpModeEncode+0x82>
mov    %r14,%rdi
callq  86e0 <TIFFFlushData1@plt>
test   %eax,%eax
je     217a0 <DumpModeEncode+0xc0>
test   %rbx,%rbx
jg     217b7 <DumpModeEncode+0xd7>
mov    %r12,%rbx
mov    $0x1,%eax
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
leaveq 
retq   
lea    0x337a8(%rip),%rdi        # 54f30 <module.82+0xd3>
lea    0x337a7(%rip),%rsi        # 54f36 <module.82+0xd9>
mov    $0x37,%edx
lea    0x337aa(%rip),%rcx        # 54f45 <module.82+0xe8>
callq  8490 <__assert_fail@plt>
mov    %r12,%rbx
xor    %eax,%eax
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
leaveq 
retq   
mov    0x390(%r14),%rcx
lea    (%rbx,%rcx,1),%rax
mov    0x370(%r14),%r15
cmp    %rax,%r15
jl     21706 <DumpModeEncode+0x26>
mov    %rbx,%r15
jmpq   21709 <DumpModeEncode+0x29>
nopw   0x0(%rax,%rax,1)

00000000000217e0 <DumpModeDecode>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    0x390(%rdi),%r8
cmp    %rdx,%r8
jl     21856 <DumpModeDecode+0x76>
mov    0x388(%rdi),%rax
cmp    %rsi,%rax
je     2182d <DumpModeDecode+0x4d>
mov    %rdx,%rcx
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rdi,%r14
mov    %rsi,%rdi
mov    %rax,%rsi
mov    %rdx,%r15
mov    %rcx,%rdx
callq  8790 <_TIFFmemcpy@plt>
mov    %r15,%rdx
mov    %r14,%rdi
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
mov    %rdx,%rax
add    0x388(%rdi),%rax
mov    %rax,0x388(%rdi)
mov    0x390(%rdi),%rax
sub    %rdx,%rax
mov    %rax,0x390(%rdi)
mov    $0x1,%eax
leaveq 
retq   
mov    0x3b8(%rdi),%r9
lea    0x336f0(%rip),%rsi        # 54f54 <module.11>
lea    0x336f8(%rip),%r10        # 54f63 <module.11+0xf>
mov    0x27c(%rdi),%ecx
mov    %r9,%rdi
mov    %rdx,%r9
mov    %r10,%rdx
xor    %eax,%eax
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)

0000000000021890 <DumpModeSeek>:
push   %rbp
mov    %rsp,%rbp
mov    %esi,%eax
imul   0x358(%rdi),%rax
mov    %rax,%rcx
add    0x388(%rdi),%rcx
mov    %rcx,0x388(%rdi)
mov    0x390(%rdi),%rcx
sub    %rax,%rcx
mov    %rcx,0x390(%rdi)
mov    $0x1,%eax
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

00000000000218d0 <TIFFError>:
push   %rbp
mov    %rsp,%rbp
sub    $0xe0,%rsp
mov    %rdx,-0xb0(%rbp)
mov    %rcx,-0xa8(%rbp)
mov    %r8,-0xa0(%rbp)
mov    %r9,-0x98(%rbp)
movsd  %xmm0,-0x90(%rbp)
movsd  %xmm1,-0x80(%rbp)
movsd  %xmm2,-0x70(%rbp)
movsd  %xmm3,-0x60(%rbp)
movsd  %xmm4,-0x50(%rbp)
movsd  %xmm5,-0x40(%rbp)
movsd  %xmm6,-0x30(%rbp)
movsd  %xmm7,-0x20(%rbp)
mov    0x58687(%rip),%rax        # 79fb0 <_TIFFerrorHandler@@Base-0x8d8>
mov    (%rax),%rcx
test   %rcx,%rcx
je     21976 <TIFFError+0xa6>
lea    -0xd8(%rbp),%rdx
movl   $0x10,(%rdx)
movl   $0x30,0x4(%rdx)
lea    -0xc0(%rbp),%rcx
mov    %rcx,0x10(%rdx)
lea    0x10(%rbp),%rcx
mov    %rcx,0x8(%rdx)
mov    %rdi,%rcx
mov    %rsi,%r8
mov    %rdi,-0x8(%rbp)
mov    %rsi,-0x10(%rbp)
mov    %r8,%rsi
mov    %rcx,%rdi
callq  *(%rax)
mov    -0x10(%rbp),%rsi
mov    -0x8(%rbp),%rdi
mov    0x585c3(%rip),%rax        # 79f40 <_TIFFerrorHandlerExt@@Base-0x970>
mov    (%rax),%rcx
test   %rcx,%rcx
jne    21987 <TIFFError+0xb7>
leaveq 
retq   
lea    -0xd8(%rbp),%rcx
movl   $0x10,(%rcx)
movl   $0x30,0x4(%rcx)
lea    -0xc0(%rbp),%rdx
mov    %rdx,0x10(%rcx)
lea    0x10(%rbp),%rdx
mov    %rdx,0x8(%rcx)
mov    %rsi,%rdx
mov    %rdi,%rsi
xor    %edi,%edi
callq  *(%rax)
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

00000000000219c0 <TIFFErrorExt>:
push   %rbp
mov    %rsp,%rbp
sub    $0xf0,%rsp
mov    %rcx,-0xb8(%rbp)
mov    %r8,-0xb0(%rbp)
mov    %r9,-0xa8(%rbp)
movsd  %xmm0,-0xa0(%rbp)
movsd  %xmm1,-0x90(%rbp)
movsd  %xmm2,-0x80(%rbp)
movsd  %xmm3,-0x70(%rbp)
movsd  %xmm4,-0x60(%rbp)
movsd  %xmm5,-0x50(%rbp)
movsd  %xmm6,-0x40(%rbp)
movsd  %xmm7,-0x30(%rbp)
mov    0x5859b(%rip),%rax        # 79fb0 <_TIFFerrorHandler@@Base-0x8d8>
mov    (%rax),%rcx
test   %rcx,%rcx
je     21a6f <TIFFErrorExt+0xaf>
lea    -0xe8(%rbp),%r9
movl   $0x18,(%r9)
movl   $0x30,0x4(%r9)
lea    -0xd0(%rbp),%rcx
mov    %rcx,0x10(%r9)
lea    0x10(%rbp),%rcx
mov    %rcx,0x8(%r9)
mov    %rsi,%rcx
mov    %rdx,%r8
mov    %rdi,-0x8(%rbp)
mov    %rsi,-0x10(%rbp)
mov    %rdx,-0x18(%rbp)
mov    %r9,%rdx
mov    %r8,%rsi
mov    %rcx,%rdi
callq  *(%rax)
mov    -0x18(%rbp),%rdx
mov    -0x10(%rbp),%rsi
mov    -0x8(%rbp),%rdi
mov    0x584ca(%rip),%rax        # 79f40 <_TIFFerrorHandlerExt@@Base-0x970>
mov    (%rax),%rcx
test   %rcx,%rcx
jne    21a80 <TIFFErrorExt+0xc0>
leaveq 
retq   
lea    -0xe8(%rbp),%rcx
movl   $0x18,(%rcx)
movl   $0x30,0x4(%rcx)
lea    -0xd0(%rbp),%r8
mov    %r8,0x10(%rcx)
lea    0x10(%rbp),%r8
mov    %r8,0x8(%rcx)
callq  *(%rax)
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

0000000000021ab0 <TIFFSetErrorHandler>:
push   %rbp
mov    %rsp,%rbp
mov    0x584f5(%rip),%rcx        # 79fb0 <_TIFFerrorHandler@@Base-0x8d8>
mov    (%rcx),%rax
mov    %rdi,(%rcx)
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

0000000000021ad0 <TIFFSetErrorHandlerExt>:
push   %rbp
mov    %rsp,%rbp
mov    0x58465(%rip),%rcx        # 79f40 <_TIFFerrorHandlerExt@@Base-0x970>
mov    (%rcx),%rax
mov    %rdi,(%rcx)
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)
nopl   (%rax)

0000000000021af0 <TIFFGetTagListCount>:
push   %rbp
mov    %rsp,%rbp
movslq 0x140(%rdi),%rax
leaveq 
retq   
nopl   (%rax)

0000000000021b00 <TIFFGetTagListEntry>:
push   %rbp
mov    %rsp,%rbp
mov    $0xffffffff,%eax
test   %esi,%esi
jns    21b0f <TIFFGetTagListEntry+0xf>
leaveq 
retq   
cmp    0x140(%rdi),%esi
jl     21b19 <TIFFGetTagListEntry+0x19>
leaveq 
retq   
mov    0x148(%rdi),%rcx
movslq %esi,%rax
lea    (%rax,%rax,2),%rax
mov    (%rcx,%rax,8),%rax
mov    (%rax),%eax
leaveq 
retq   
nop

0000000000021b30 <TIFFAccessTagMethods>:
push   %rbp
mov    %rsp,%rbp
lea    0x408(%rdi),%rax
leaveq 
retq   
nopl   (%rax)

0000000000021b40 <TIFFGetClientInfo>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    0x420(%rdi),%r14
mov    %rsi,%r15
jmp    21b6f <TIFFGetClientInfo+0x2f>
mov    0x10(%r14),%rdi
mov    %r15,%rsi
callq  8660 <strcmp@plt>
test   %eax,%eax
je     21b87 <TIFFGetClientInfo+0x47>
mov    (%r14),%r14
test   %r14,%r14
jne    21b5c <TIFFGetClientInfo+0x1c>
xor    %eax,%eax
test   %rax,%rax
jne    21b8e <TIFFGetClientInfo+0x4e>
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
xor    %eax,%eax
leaveq 
retq   
mov    $0x1,%eax
jmp    21b76 <TIFFGetClientInfo+0x36>
mov    0x8(%r14),%rax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
nopl   0x0(%rax)

0000000000021ba0 <TIFFSetClientInfo>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %rdi,-0x20(%rbp)
mov    %r13,-0x8(%rbp)
mov    %r14,-0x10(%rbp)
mov    %r15,-0x18(%rbp)
mov    0x420(%rdi),%r15
mov    %rsi,%r13
mov    %rdx,%r14
jmp    21bda <TIFFSetClientInfo+0x3a>
mov    0x10(%r15),%rdi
mov    %r14,%rsi
callq  8660 <strcmp@plt>
test   %eax,%eax
je     21c17 <TIFFSetClientInfo+0x77>
mov    (%r15),%r15
test   %r15,%r15
jne    21bc7 <TIFFSetClientInfo+0x27>
xor    %eax,%eax
test   %rax,%rax
jne    21c1e <TIFFSetClientInfo+0x7e>
lea    0x333ef(%rip),%r15        # 54fdc <module.11+0x88>
mov    $0x18,%edi
callq  8440 <_TIFFmalloc@plt>
test   %rax,%rax
jne    21c30 <TIFFSetClientInfo+0x90>
mov    %r15,%rsi
lea    0x333c7(%rip),%rdi        # 54fcd <module.11+0x79>
mov    $0x67,%edx
lea    0x333da(%rip),%rcx        # 54fec <module.11+0x98>
callq  8490 <__assert_fail@plt>
mov    $0x1,%eax
jmp    21be1 <TIFFSetClientInfo+0x41>
mov    %r13,0x8(%r15)
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
leaveq 
retq   
mov    -0x20(%rbp),%r15
mov    0x420(%r15),%rcx
mov    %rcx,(%rax)
mov    %r14,%rdi
mov    %r12,-0x20(%rbp)
mov    %rax,%r12
callq  8350 <strlen@plt>
lea    0x1(%rax),%rdi
callq  8440 <_TIFFmalloc@plt>
mov    %rax,0x10(%r12)
test   %rax,%rax
jne    21c7f <TIFFSetClientInfo+0xdf>
lea    0x33397(%rip),%rdi        # 54ffe <module.11+0xaa>
mov    $0x6a,%edx
lea    0x33369(%rip),%rsi        # 54fdc <module.11+0x88>
lea    0x33372(%rip),%rcx        # 54fec <module.11+0x98>
callq  8490 <__assert_fail@plt>
mov    %r14,%rsi
mov    %rax,%rdi
callq  8160 <strcpy@plt>
mov    %r13,0x8(%r12)
mov    %r12,0x420(%r15)
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
mov    -0x20(%rbp),%r12
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

0000000000021cb0 <TIFFInitCCITTRLE>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x8(%rbp)
mov    %rdi,%r15
callq  266d0 <InitCCITTFax3>
test   %eax,%eax
jne    21cd0 <TIFFInitCCITTRLE+0x20>
xor    %eax,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
lea    0x5ee9(%rip),%rax        # 27bc0 <Fax3DecodeRLE>
mov    %rax,0x2f8(%r15)
mov    %rax,0x308(%r15)
mov    %rax,0x318(%r15)
mov    %r15,%rdi
xor    %eax,%eax
mov    $0x10000,%esi
mov    $0x7,%edx
callq  8290 <TIFFSetField@plt>
mov    -0x8(%rbp),%r15
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)

0000000000021d10 <TIFFInitCCITTRLEW>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x8(%rbp)
mov    %rdi,%r15
callq  266d0 <InitCCITTFax3>
test   %eax,%eax
jne    21d30 <TIFFInitCCITTRLEW+0x20>
xor    %eax,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
lea    0x5e89(%rip),%rax        # 27bc0 <Fax3DecodeRLE>
mov    %rax,0x2f8(%r15)
mov    %rax,0x308(%r15)
mov    %rax,0x318(%r15)
mov    %r15,%rdi
xor    %eax,%eax
mov    $0x10000,%esi
mov    $0xb,%edx
callq  8290 <TIFFSetField@plt>
mov    -0x8(%rbp),%r15
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)

0000000000021d70 <TIFFInitCCITTFax3>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %rdi,-0x8(%rbp)
callq  266d0 <InitCCITTFax3>
test   %eax,%eax
jne    21d8c <TIFFInitCCITTFax3+0x1c>
mov    $0x1,%eax
leaveq 
retq   
lea    0x57af5(%rip),%rsi        # 79888 <fax3Fields>
mov    -0x8(%rbp),%rdi
mov    %rdi,%rax
mov    $0x1,%edx
mov    %r15,-0x8(%rbp)
mov    %rdi,%r15
mov    %rax,%rdi
callq  8520 <_TIFFMergeFields@plt>
test   %eax,%eax
jne    21ddb <TIFFInitCCITTFax3+0x6b>
mov    0x3b8(%r15),%rdi
lea    0x33a96(%rip),%rsi        # 55856 <vcodes+0x2a>
lea    0x33aa1(%rip),%rdx        # 55868 <vcodes+0x3c>
xor    %r15d,%r15d
mov    %r15,%rax
callq  8a00 <TIFFErrorExt@plt>
mov    %r15,%rax
mov    -0x8(%rbp),%r15
leaveq 
retq   
mov    %r15,%rdi
xor    %eax,%eax
mov    $0x10000,%esi
mov    $0x1,%edx
callq  8290 <TIFFSetField@plt>
mov    -0x8(%rbp),%r15
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)

0000000000021e00 <TIFFInitCCITTFax4>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %rdi,-0x8(%rbp)
callq  266d0 <InitCCITTFax3>
test   %eax,%eax
jne    21e19 <TIFFInitCCITTFax4+0x19>
xor    %eax,%eax
leaveq 
retq   
lea    0x57a98(%rip),%rsi        # 798b8 <fax4Fields>
mov    $0x1,%edx
mov    -0x8(%rbp),%rax
mov    %rax,%rdi
mov    %r15,-0x8(%rbp)
mov    %rax,%r15
callq  8520 <_TIFFMergeFields@plt>
test   %eax,%eax
jne    21e60 <TIFFInitCCITTFax4+0x60>
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
lea    0x33a4b(%rip),%rsi        # 55897 <vcodes+0x6b>
lea    0x33a56(%rip),%rdx        # 558a9 <vcodes+0x7d>
callq  8a00 <TIFFErrorExt@plt>
mov    -0x8(%rbp),%r15
xor    %eax,%eax
leaveq 
retq   
lea    0x4a59(%rip),%rax        # 268c0 <Fax4Decode>
mov    %rax,0x2f8(%r15)
mov    %rax,0x308(%r15)
mov    %rax,0x318(%r15)
lea    0x5b8d(%rip),%rax        # 27a10 <Fax4Encode>
mov    %rax,0x300(%r15)
mov    %rax,0x310(%r15)
mov    %rax,0x320(%r15)
lea    0x5c61(%rip),%rax        # 27b00 <Fax4PostEncode>
mov    %rax,0x2f0(%r15)
mov    %r15,%rdi
xor    %eax,%eax
mov    $0x10000,%esi
mov    $0x1,%edx
callq  8290 <TIFFSetField@plt>
mov    -0x8(%rbp),%r15
leaveq 
retq   

0000000000021ec0 <_TIFFFax3fillruns>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    %r15,-0x28(%rbp)
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    $0xff,%ebx
mov    $0x8,%r9d
lea    0x339ea(%rip),%r10        # 558d8 <_fillmasks.13>
mov    $0xff00,%r11d
xor    %eax,%eax
mov    %rdx,%r8
sub    %rsi,%r8
and    $0x4,%r8
test   %r8,%r8
jg     21f0d <_TIFFFax3fillruns+0x4d>
mov    %rcx,%r8
jmpq   21fdb <_TIFFFax3fillruns+0x11b>
movl   $0x0,(%rdx)
add    $0x4,%rdx
mov    %rcx,%r8
jmpq   21fdb <_TIFFFax3fillruns+0x11b>
mov    (%rsi),%ecx
lea    (%rax,%rcx,1),%r12d
cmp    %r8d,%r12d
ja     21f2f <_TIFFFax3fillruns+0x6f>
cmp    %r8d,%ecx
jbe    21f36 <_TIFFFax3fillruns+0x76>
mov    %r8,%rcx
sub    %eax,%ecx
mov    %ecx,(%rsi)
test   %ecx,%ecx
je     21f7b <_TIFFFax3fillruns+0xbb>
mov    %rax,%r12
shr    $0x3,%r12d
mov    %r12d,%r12d
add    %rdi,%r12
mov    %rax,%r14
and    $0x7,%r14d
mov    %r9,%r13
sub    %r14d,%r13d
cmp    %r13d,%ecx
ja     2200c <_TIFFFax3fillruns+0x14c>
mov    %ecx,%ecx
movzbl (%rcx,%r10,1),%r13d
mov    %r14,%rcx
shr    %cl,%r13d
not    %r13d
movzbl (%r12),%ecx
and    %cl,%r13b
mov    %r13b,(%r12)
add    (%rsi),%eax
mov    0x4(%rsi),%ecx
lea    (%rax,%rcx,1),%r12d
cmp    %r12d,%r8d
jb     21f8c <_TIFFFax3fillruns+0xcc>
cmp    %ecx,%r8d
jae    21f94 <_TIFFFax3fillruns+0xd4>
mov    %r8,%rcx
sub    %eax,%ecx
mov    %ecx,0x4(%rsi)
test   %ecx,%ecx
je     21fd7 <_TIFFFax3fillruns+0x117>
mov    %rax,%r12
shr    $0x3,%r12d
mov    %r12d,%r12d
add    %rdi,%r12
mov    %rax,%r14
and    $0x7,%r14d
mov    %r9,%r13
sub    %r14d,%r13d
cmp    %r13d,%ecx
ja     220fb <_TIFFFax3fillruns+0x23b>
mov    %ecx,%ecx
movzbl (%rcx,%r10,1),%r13d
mov    %r14,%rcx
shr    %cl,%r13d
movzbl (%r12),%ecx
or     %cl,%r13b
mov    %r13b,(%r12)
add    0x4(%rsi),%eax
add    $0x8,%rsi
cmp    %rsi,%rdx
ja     21f1f <_TIFFFax3fillruns+0x5f>
cmp    %r8d,%eax
je     221ed <_TIFFFax3fillruns+0x32d>
lea    0x338ed(%rip),%rdi        # 558e1 <_fillmasks.13+0x9>
lea    0x338f1(%rip),%rsi        # 558ec <_fillmasks.13+0x14>
mov    $0x1e3,%edx
lea    0x338f0(%rip),%rcx        # 558f7 <_fillmasks.13+0x1f>
callq  8490 <__assert_fail@plt>
test   %r14d,%r14d
je     22036 <_TIFFFax3fillruns+0x176>
mov    %rcx,%r14
mov    %r13,%rcx
mov    %rbx,%r13
shl    %cl,%r13d
movzbl (%r12),%ecx
and    %cl,%r13b
mov    %r13b,(%r12)
mov    %rax,%rcx
or     $0xfffffff8,%ecx
add    %r14d,%ecx
add    $0x1,%r12
mov    %rcx,%r13
and    $0xfffffff8,%r13d
test   %r13d,%r13d
je     220dc <_TIFFFax3fillruns+0x21c>
mov    %rcx,%r14
shr    $0x3,%r14d
movslq %r14d,%r13
shr    $0x3,%r13
cmp    $0x1,%r13
ja     2221c <_TIFFFax3fillruns+0x35c>
lea    -0x1(%r14),%r15d
cmp    $0xe,%r15d
ja     220d9 <_TIFFFax3fillruns+0x219>
lea    0x32fa5(%rip),%r13        # 55014 <module.11+0xc0>
movslq 0x0(%r13,%r15,4),%r15
add    %r15,%r13
jmpq   *%r13
movb   $0x0,0xe(%r12)
movb   $0x0,0xd(%r12)
movb   $0x0,0xc(%r12)
movb   $0x0,0xb(%r12)
movb   $0x0,0xa(%r12)
movb   $0x0,0x9(%r12)
movb   $0x0,0x8(%r12)
movb   $0x0,0x7(%r12)
movb   $0x0,0x6(%r12)
movb   $0x0,0x5(%r12)
movb   $0x0,0x4(%r12)
movb   $0x0,0x3(%r12)
movb   $0x0,0x2(%r12)
movb   $0x0,0x1(%r12)
movb   $0x0,(%r12)
movslq %r14d,%r13
add    %r13,%r12
and    $0x7,%ecx
test   %ecx,%ecx
je     21f79 <_TIFFFax3fillruns+0xb9>
mov    %rbx,%r13
shr    %cl,%r13d
movzbl (%r12),%ecx
and    %cl,%r13b
mov    %r13b,(%r12)
jmpq   21f79 <_TIFFFax3fillruns+0xb9>
test   %r14d,%r14d
je     22128 <_TIFFFax3fillruns+0x268>
mov    %r14,%r13
mov    %rcx,%r14
mov    %r13,%rcx
mov    %rbx,%r13
shr    %cl,%r13d
movzbl (%r12),%ecx
or     %cl,%r13b
mov    %r13b,(%r12)
mov    %rax,%rcx
or     $0xfffffff8,%ecx
add    %r14d,%ecx
add    $0x1,%r12
mov    %rcx,%r13
and    $0xfffffff8,%r13d
test   %r13d,%r13d
je     221ce <_TIFFFax3fillruns+0x30e>
mov    %rcx,%r14
shr    $0x3,%r14d
movslq %r14d,%r13
shr    $0x3,%r13
cmp    $0x1,%r13
ja     22265 <_TIFFFax3fillruns+0x3a5>
lea    -0x1(%r14),%r15d
cmp    $0xe,%r15d
ja     221cb <_TIFFFax3fillruns+0x30b>
lea    0x32eef(%rip),%r13        # 55050 <module.11+0xfc>
movslq 0x0(%r13,%r15,4),%r15
add    %r15,%r13
jmpq   *%r13
movb   $0xff,0xe(%r12)
movb   $0xff,0xd(%r12)
movb   $0xff,0xc(%r12)
movb   $0xff,0xb(%r12)
movb   $0xff,0xa(%r12)
movb   $0xff,0x9(%r12)
movb   $0xff,0x8(%r12)
movb   $0xff,0x7(%r12)
movb   $0xff,0x6(%r12)
movb   $0xff,0x5(%r12)
movb   $0xff,0x4(%r12)
movb   $0xff,0x3(%r12)
movb   $0xff,0x2(%r12)
movb   $0xff,0x1(%r12)
movb   $0xff,(%r12)
movslq %r14d,%r13
add    %r13,%r12
and    $0x7,%ecx
test   %ecx,%ecx
je     21fd4 <_TIFFFax3fillruns+0x114>
mov    %r11,%r13
shr    %cl,%r13d
movzbl (%r12),%ecx
or     %cl,%r13b
mov    %r13b,(%r12)
jmpq   21fd4 <_TIFFFax3fillruns+0x114>
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x28(%rbp),%r15
leaveq 
retq   
mov    %r12,%r13
and    $0x7,%r13
test   %r13,%r13
je     22221 <_TIFFFax3fillruns+0x361>
movb   $0x0,(%r12)
add    $0x1,%r12
add    $0xffffffff,%r14d
test   %r14d,%r14d
jne    22203 <_TIFFFax3fillruns+0x343>
movslq %r14d,%r15
shr    $0x3,%r15
mov    %r15,%r13
movq   $0x0,(%r12)
add    $0x8,%r12
add    $0xffffffff,%r13d
test   %r13d,%r13d
jne    2222b <_TIFFFax3fillruns+0x36b>
shl    $0x3,%r15d
sub    %r15d,%r14d
jmpq   2205e <_TIFFFax3fillruns+0x19e>
mov    %r12,%r13
and    $0x7,%r13
test   %r13,%r13
je     2226a <_TIFFFax3fillruns+0x3aa>
movb   $0xff,(%r12)
add    $0x1,%r12
add    $0xffffffff,%r14d
test   %r14d,%r14d
jne    2224c <_TIFFFax3fillruns+0x38c>
movslq %r14d,%r15
shr    $0x3,%r15
mov    %r15,%r13
movq   $0xffffffffffffffff,(%r12)
add    $0x8,%r12
add    $0xffffffff,%r13d
test   %r13d,%r13d
jne    22274 <_TIFFFax3fillruns+0x3b4>
shl    $0x3,%r15d
sub    %r15d,%r14d
jmpq   22150 <_TIFFFax3fillruns+0x290>
data16 nopw %cs:0x0(%rax,%rax,1)

00000000000222a0 <Fax3PreDecode>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    0x350(%rdi),%rax
test   %rax,%rax
jne    222d3 <Fax3PreDecode+0x33>
lea    0x3364e(%rip),%rdi        # 55909 <_fillmasks.13+0x31>
lea    0x3362a(%rip),%rsi        # 558ec <_fillmasks.13+0x14>
mov    $0x98,%edx
lea    0x33646(%rip),%rcx        # 55914 <_fillmasks.13+0x3c>
callq  8490 <__assert_fail@plt>
movl   $0x0,0x4c(%rax)
movl   $0x0,0x48(%rax)
movl   $0x0,0x50(%rax)
mov    $0x1,%edx
movzwl 0x7e(%rdi),%ecx
cmp    $0x2,%cx
jne    222fb <Fax3PreDecode+0x5b>
xor    %edi,%edi
jmp    222fe <Fax3PreDecode+0x5e>
mov    %rdx,%rdi
mov    %r15,-0x8(%rbp)
mov    %rax,%r15
callq  87e0 <TIFFGetBitRevTable@plt>
mov    %rax,0x40(%r15)
mov    0x68(%r15),%rax
test   %rax,%rax
je     22328 <Fax3PreDecode+0x88>
mov    0x10(%r15),%ecx
mov    %ecx,(%rax)
mov    0x68(%r15),%rax
movl   $0x0,0x4(%rax)
movl   $0x0,0x90(%r15)
mov    $0x1,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
xchg   %ax,%ax

0000000000022340 <Fax3Unexpected>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    0x3b8(%rsi),%r10
mov    0x10(%rsi),%eax
and    $0x400,%eax
test   %eax,%eax
jne    22366 <Fax3Unexpected+0x26>
lea    0x335ee(%rip),%r8        # 55950 <_fillmasks.13+0x78>
xor    %eax,%eax
jmp    22372 <Fax3Unexpected+0x32>
lea    0x335de(%rip),%r8        # 5594b <_fillmasks.13+0x73>
mov    $0x1,%eax
test   %rax,%rax
jne    22380 <Fax3Unexpected+0x40>
mov    0x284(%rsi),%r9d
jmp    22387 <Fax3Unexpected+0x47>
mov    0x2ac(%rsi),%r9d
mov    %ecx,(%rsp)
mov    %rdx,%rcx
mov    %rdi,%rsi
mov    %r10,%rdi
xor    %eax,%eax
lea    0x33586(%rip),%rdx        # 55922 <_fillmasks.13+0x4a>
callq  8a00 <TIFFErrorExt@plt>
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

00000000000223b0 <Fax3Extension>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    0x3b8(%rsi),%r10
mov    0x10(%rsi),%eax
and    $0x400,%eax
test   %eax,%eax
jne    223d6 <Fax3Extension+0x26>
lea    0x3357e(%rip),%r8        # 55950 <_fillmasks.13+0x78>
xor    %eax,%eax
jmp    223e2 <Fax3Extension+0x32>
lea    0x3356e(%rip),%r8        # 5594b <_fillmasks.13+0x73>
mov    $0x1,%eax
test   %rax,%rax
jne    223f0 <Fax3Extension+0x40>
mov    0x284(%rsi),%r9d
jmp    223f7 <Fax3Extension+0x47>
mov    0x2ac(%rsi),%r9d
mov    %ecx,(%rsp)
mov    %rdx,%rcx
mov    %rdi,%rsi
mov    %r10,%rdi
xor    %eax,%eax
lea    0x3354a(%rip),%rdx        # 55956 <_fillmasks.13+0x7e>
callq  8a00 <TIFFErrorExt@plt>
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

0000000000022420 <Fax3BadLength>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    0x3b8(%rsi),%r11
cmp    %ecx,%r8d
ja     2243d <Fax3BadLength+0x1d>
lea    0x33593(%rip),%r10        # 559ce <_fillmasks.13+0xf6>
jmp    22444 <Fax3BadLength+0x24>
lea    0x3357c(%rip),%r10        # 559c0 <_fillmasks.13+0xe8>
mov    0x10(%rsi),%eax
and    $0x400,%eax
test   %eax,%eax
jne    2245b <Fax3BadLength+0x3b>
lea    0x334f9(%rip),%r9        # 55950 <_fillmasks.13+0x78>
xor    %eax,%eax
jmp    22467 <Fax3BadLength+0x47>
lea    0x334e9(%rip),%r9        # 5594b <_fillmasks.13+0x73>
mov    $0x1,%eax
test   %rax,%rax
jne    22474 <Fax3BadLength+0x54>
mov    0x284(%rsi),%eax
jmp    2247a <Fax3BadLength+0x5a>
mov    0x2ac(%rsi),%eax
mov    %eax,(%rsp)
mov    %ecx,0x8(%rsp)
mov    %r8d,0x10(%rsp)
mov    %r10,%rcx
mov    %rdi,%rsi
mov    %r11,%rdi
mov    %rdx,%r8
xor    %eax,%eax
lea    0x334f8(%rip),%rdx        # 55993 <_fillmasks.13+0xbb>
callq  85a0 <TIFFWarningExt@plt>
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   (%rax)

00000000000224b0 <Fax3PrematureEOF>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    0x3b8(%rsi),%r10
mov    0x10(%rsi),%eax
and    $0x400,%eax
test   %eax,%eax
jne    224d6 <Fax3PrematureEOF+0x26>
lea    0x3347e(%rip),%r8        # 55950 <_fillmasks.13+0x78>
xor    %eax,%eax
jmp    224e2 <Fax3PrematureEOF+0x32>
lea    0x3346e(%rip),%r8        # 5594b <_fillmasks.13+0x73>
mov    $0x1,%eax
test   %rax,%rax
jne    224f0 <Fax3PrematureEOF+0x40>
mov    0x284(%rsi),%r9d
jmp    224f7 <Fax3PrematureEOF+0x47>
mov    0x2ac(%rsi),%r9d
mov    %ecx,(%rsp)
mov    %rdx,%rcx
mov    %rdi,%rsi
mov    %r10,%rdi
xor    %eax,%eax
lea    0x334d7(%rip),%rdx        # 559e3 <_fillmasks.13+0x10b>
callq  85a0 <TIFFWarningExt@plt>
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

0000000000022520 <Fax3Decode1D>:
push   %rbp
mov    %rsp,%rbp
sub    $0xa0,%rsp
mov    %rsi,-0x48(%rbp)
mov    0x350(%rdi),%r10
mov    0x10(%r10),%eax
mov    %rax,-0x90(%rbp)
mov    %rdx,%rax
mov    %r12,%r9
mov    %r14,%r12
mov    0x40(%r10),%r8
mov    %r8,-0x68(%rbp)
lea    0x334b3(%rip),%rsi        # 55a0c <module.29>
mov    0x8(%r10),%rcx
cqto   
mov    %rbx,%r11
mov    %rcx,%rbx
mov    %r13,%rcx
mov    %rsi,%r13
mov    %r15,%rsi
mov    %rax,%r15
idiv   %rbx
test   %rdx,%rdx
jne    225ff <Fax3Decode1D+0xdf>
mov    0x70(%r10),%rax
mov    %rax,-0x88(%rbp)
movslq 0x4c(%r10),%rbx
mov    0x48(%r10),%r14d
movslq 0x50(%r10),%rax
mov    0x388(%rdi),%r13
mov    %rsi,-0x28(%rbp)
mov    %r13,%rsi
add    0x390(%rdi),%rsi
mov    %r12,-0x20(%rbp)
mov    %rsi,-0x70(%rbp)
mov    0x579e0(%rip),%rdx        # 79f98 <TIFFFaxWhiteTable@@Base+0x23ddc>
mov    %rdx,-0x78(%rbp)
mov    0x579fd(%rip),%rdx        # 79fc0 <TIFFFaxBlackTable@@Base+0x1be04>
mov    %rdx,-0x98(%rbp)
mov    $0xb,%r12d
mov    %rcx,-0x18(%rbp)
mov    $0x8,%edx
mov    %r10,-0x58(%rbp)
mov    %rdi,-0x50(%rbp)
mov    %r11,-0x8(%rbp)
mov    %r9,-0x10(%rbp)
mov    $0xc,%r11d
mov    -0x98(%rbp),%r9
mov    -0x78(%rbp),%r10
jmpq   2270f <Fax3Decode1D+0x1ef>
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
mov    %r11,%rbx
mov    %r9,%r14
mov    %rsi,%r15
mov    %r13,%rsi
mov    %rcx,%r13
lea    0x333fb(%rip),%rdx        # 55a19 <module.29+0xd>
callq  8a00 <TIFFErrorExt@plt>
mov    %r14,%rcx
mov    %r12,%r14
mov    %rcx,%r12
mov    $0xffffffffffffffff,%rax
leaveq 
retq   
cmp    $0xc,%cl
je     22764 <Fax3Decode1D+0x244>
mov    -0x58(%rbp),%rcx
mov    0x90(%rcx),%r8d
lea    0x333bc(%rip),%rdi        # 55a0c <module.29>
mov    -0x50(%rbp),%rsi
mov    %r14,%rcx
mov    %r13,-0x80(%rbp)
mov    %rdx,%r13
mov    %r8,%rdx
mov    %rax,%r15
callq  22340 <Fax3Unexpected>
mov    %r15,%rax
mov    %r13,%rdx
mov    %r12,%r9
mov    -0x80(%rbp),%r13
mov    -0x48(%rbp),%r10
xor    %edi,%edi
mov    -0x90(%rbp),%r15
mov    %rdi,-0x38(%rbp)
mov    %r13,-0x60(%rbp)
test   %eax,%eax
je     22695 <Fax3Decode1D+0x175>
mov    %eax,(%rdx)
add    $0x4,%rdx
cmp    %r15d,%r14d
jne    22775 <Fax3Decode1D+0x255>
mov    %r9,%r14
mov    -0x30(%rbp),%rax
mov    -0x58(%rbp),%r12
mov    -0x88(%rbp),%rsi
mov    %r15,%rcx
mov    %rax,%r15
mov    %r10,%r13
mov    %r13,%rdi
callq  *0x58(%r12)
movslq 0x90(%r12),%rax
add    $0x1,%eax
mov    %eax,0x90(%r12)
mov    0x8(%r12),%rax
sub    %rax,%r15
add    %r13,%rax
mov    %rax,-0x48(%rbp)
mov    $0x8,%edx
mov    $0xb,%r12d
mov    -0x60(%rbp),%r13
mov    -0x38(%rbp),%rax
mov    -0x70(%rbp),%rsi
mov    -0x68(%rbp),%r8
mov    $0xc,%r11d
mov    -0x98(%rbp),%r9
mov    -0x78(%rbp),%r10
test   %r15,%r15
jg     227c0 <Fax3Decode1D+0x2a0>
mov    -0x58(%rbp),%rcx
mov    %ebx,0x4c(%rcx)
mov    %r14d,0x48(%rcx)
mov    %eax,0x50(%rcx)
mov    -0x50(%rbp),%rcx
mov    0x388(%rcx),%rax
sub    %r13,%rax
add    0x390(%rcx),%rax
mov    %rax,0x390(%rcx)
mov    %r13,0x388(%rcx)
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x18(%rbp),%r13
mov    $0x1,%eax
mov    -0x20(%rbp),%r14
mov    -0x28(%rbp),%r15
leaveq 
retq   
mov    %r12,%r9
mov    -0x48(%rbp),%r10
mov    $0x1,%edi
jmpq   22683 <Fax3Decode1D+0x163>
mov    -0x58(%rbp),%r12
mov    0x90(%r12),%eax
lea    0x33284(%rip),%rdi        # 55a0c <module.29>
mov    -0x50(%rbp),%rsi
mov    %r14,%rcx
mov    %r15,%r8
mov    %rbx,-0x48(%rbp)
mov    %r9,-0x40(%rbp)
mov    %r10,%rbx
mov    %rdx,%r13
mov    %rax,%rdx
callq  22420 <Fax3BadLength>
mov    %r13,%rdx
mov    -0x30(%rbp),%rax
mov    -0x40(%rbp),%r8
mov    -0x48(%rbp),%rdi
mov    -0x88(%rbp),%rsi
jmp    227d9 <Fax3Decode1D+0x2b9>
test   %eax,%eax
je     227fa <Fax3Decode1D+0x2da>
mov    -0x48(%rbp),%rdi
jmp    22839 <Fax3Decode1D+0x319>
cmp    %rdx,%rsi
jae    227de <Fax3Decode1D+0x2be>
add    $0xfffffffffffffffc,%rdx
movslq (%rdx),%rcx
sub    %ecx,%r14d
cmp    %r15d,%r14d
jg     227ca <Fax3Decode1D+0x2aa>
cmp    %r15d,%r14d
jl     22840 <Fax3Decode1D+0x320>
cmp    %r15d,%r14d
jg     2287b <Fax3Decode1D+0x35b>
mov    %rbx,%r10
mov    %rdi,%rbx
mov    %r8,%r14
jmpq   226b0 <Fax3Decode1D+0x190>
mov    -0x48(%rbp),%rdi
jmpq   2289d <Fax3Decode1D+0x37d>
cmp    %rsi,%r13
jae    228cd <Fax3Decode1D+0x3ad>
movzbl 0x0(%r13),%ecx
movzbl (%r8,%rcx,1),%r12d
mov    %rbx,%rcx
shl    %cl,%r12d
or     %r12d,%r14d
add    $0x1,%r13
lea    0x8(%rcx),%ebx
movzbl %r14b,%ecx
test   %ecx,%ecx
jne    228dc <Fax3Decode1D+0x3bc>
shr    $0x8,%r14d
add    $0xfffffff8,%ebx
cmp    $0x7,%ebx
jle    22803 <Fax3Decode1D+0x2e3>
jmp    22826 <Fax3Decode1D+0x306>
test   %r14d,%r14d
jns    22848 <Fax3Decode1D+0x328>
xor    %r14d,%r14d
mov    %rdx,%rcx
sub    %rsi,%rcx
and    $0x4,%rcx
test   %rcx,%rcx
jle    22861 <Fax3Decode1D+0x341>
movl   $0x0,(%rdx)
add    $0x4,%rdx
mov    %r15,%rcx
sub    %r14d,%ecx
mov    %ecx,(%rdx)
add    $0x4,%rdx
mov    %rbx,%r10
mov    %rdi,%rbx
mov    %r8,%r14
jmpq   226b0 <Fax3Decode1D+0x190>
mov    %r15d,(%rdx)
movl   $0x0,0x4(%rdx)
add    $0x8,%rdx
mov    %rbx,%r10
mov    %rdi,%rbx
mov    %r8,%r14
jmpq   226b0 <Fax3Decode1D+0x190>
shr    %r14d
add    $0xffffffff,%ebx
cmp    $0xa,%ebx
jg     22914 <Fax3Decode1D+0x3f4>
cmp    %rsi,%r13
jae    2290d <Fax3Decode1D+0x3ed>
movzbl 0x0(%r13),%ecx
movzbl (%rcx,%r8,1),%edx
mov    %rbx,%rcx
shl    %cl,%edx
or     %edx,%r14d
lea    0x1(%r13),%rbx
lea    0x8(%rcx),%edx
cmp    $0xa,%edx
jle    2292f <Fax3Decode1D+0x40f>
mov    %rbx,%r13
mov    %rdx,%rbx
jmp    22914 <Fax3Decode1D+0x3f4>
test   %ebx,%ebx
je     22940 <Fax3Decode1D+0x420>
mov    %rdx,%rbx
jmpq   22826 <Fax3Decode1D+0x306>
mov    %r12,%r14
mov    %r14,%r12
shr    %r12d
add    $0xffffffff,%ebx
and    $0x1,%r14d
test   %r14d,%r14d
je     228d9 <Fax3Decode1D+0x3b9>
mov    %r15,-0x30(%rbp)
xor    %edi,%edi
mov    -0x88(%rbp),%rdx
mov    -0x90(%rbp),%r15
mov    %rdi,%rax
mov    %rax,%r14
jmpq   22a06 <Fax3Decode1D+0x4e6>
test   %ebx,%ebx
je     22940 <Fax3Decode1D+0x420>
mov    %r12,%rbx
mov    %r14,%rcx
and    $0x7ff,%ecx
test   %ecx,%ecx
jne    22897 <Fax3Decode1D+0x377>
mov    $0x8,%edx
jmpq   22839 <Fax3Decode1D+0x319>
cmp    %rsi,%rbx
jb     22a42 <Fax3Decode1D+0x522>
mov    %rbx,%r13
mov    %r12,%rbx
jmp    22914 <Fax3Decode1D+0x3f4>
mov    -0x90(%rbp),%r15
test   %r15d,%r15d
jne    22a5e <Fax3Decode1D+0x53e>
mov    -0x50(%rbp),%r12
mov    -0x58(%rbp),%rbx
mov    -0x88(%rbp),%rsi
mov    %rsi,%rdx
mov    %r15,%rcx
mov    %rax,%r15
callq  *0x58(%rbx)
movl   $0x0,0x4c(%rbx)
mov    %r14d,0x48(%rbx)
mov    %r15d,0x50(%rbx)
mov    0x388(%r12),%rax
sub    %r13,%rax
add    0x390(%r12),%rax
mov    %rax,0x390(%r12)
mov    %r13,0x388(%r12)
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x18(%rbp),%r13
mov    -0x20(%rbp),%r14
mov    -0x28(%rbp),%r15
mov    $0xffffffffffffffff,%rax
leaveq 
retq   
test   %ebx,%ebx
je     22a9a <Fax3Decode1D+0x57a>
mov    %r11,%rbx
mov    %r12,%rcx
and    $0xfff,%ecx
mov    %ecx,%ecx
movzbl 0x1(%r10,%rcx,8),%r11d
sub    %r11d,%ebx
xchg   %rcx,%r11
shr    %cl,%r12d
movzbl (%r10,%r11,8),%ecx
cmp    $0xa,%cl
jbe    22ad5 <Fax3Decode1D+0x5b5>
cmp    $0xb,%cl
jne    22635 <Fax3Decode1D+0x115>
movslq 0x4(%r10,%r11,8),%rcx
add    %ecx,%r14d
add    %ecx,%eax
mov    $0xc,%r11d
cmp    $0xb,%ebx
jg     229c5 <Fax3Decode1D+0x4a5>
cmp    %r13,%rsi
jbe    229ba <Fax3Decode1D+0x49a>
movzbl 0x0(%r13),%ecx
movzbl (%r8,%rcx,1),%edi
mov    %rbx,%rcx
mov    %rdi,%rbx
shl    %cl,%ebx
mov    %rcx,%rdi
or     %ebx,%r12d
lea    0x1(%r13),%rbx
lea    0x8(%rdi),%ecx
cmp    $0xb,%ecx
jle    22aec <Fax3Decode1D+0x5cc>
mov    %rbx,%r13
mov    %rcx,%rbx
xor    %edi,%edi
jmp    229c5 <Fax3Decode1D+0x4a5>
movzbl (%rbx),%ebx
movzbl (%rbx,%r8,1),%ebx
xchg   %rcx,%rdx
shl    %cl,%ebx
or     %ebx,%r14d
add    $0x2,%r13
lea    0x10(%rdx),%ebx
jmpq   22914 <Fax3Decode1D+0x3f4>
mov    -0x58(%rbp),%rcx
mov    0x90(%rcx),%edx
mov    %rax,%r12
mov    -0x50(%rbp),%rsi
xor    %ebx,%ebx
mov    %rbx,%rcx
mov    %r15,%r8
lea    0x32f8e(%rip),%rdi        # 55a0c <module.29>
callq  22420 <Fax3BadLength>
mov    -0x48(%rbp),%rdi
mov    -0x88(%rbp),%rsi
mov    %rsi,%rdx
mov    %rbx,%rax
jmp    22b10 <Fax3Decode1D+0x5f0>
mov    -0x60(%rbp),%rdx
mov    %r12,-0x98(%rbp)
mov    %r13,-0x90(%rbp)
mov    %rax,%r12
mov    %rdx,%r13
mov    -0x58(%rbp),%rbx
mov    0x90(%rbx),%edx
lea    0x32f4d(%rip),%rdi        # 55a0c <module.29>
mov    -0x50(%rbp),%rsi
mov    %r14,%rcx
callq  224b0 <Fax3PrematureEOF>
test   %r12d,%r12d
jne    22b37 <Fax3Decode1D+0x617>
mov    %r13,%rdx
jmp    22b3f <Fax3Decode1D+0x61f>
cmp    $0x7,%cl
je     22b6c <Fax3Decode1D+0x64c>
cmp    $0x9,%cl
je     229f6 <Fax3Decode1D+0x4d6>
jmpq   2263e <Fax3Decode1D+0x11e>
cmp    %rbx,%rsi
ja     22b9e <Fax3Decode1D+0x67e>
mov    %rbx,%r13
mov    %r11,%rbx
xor    %edi,%edi
jmpq   229c5 <Fax3Decode1D+0x4a5>
cmp    %rdx,%rsi
jae    22b15 <Fax3Decode1D+0x5f5>
add    $0xfffffffffffffffc,%rdx
movslq (%rdx),%rcx
sub    %ecx,%eax
cmp    %r15d,%eax
jg     22b02 <Fax3Decode1D+0x5e2>
cmp    %r15d,%eax
jl     22bb9 <Fax3Decode1D+0x699>
cmp    %r15d,%eax
jg     22bf4 <Fax3Decode1D+0x6d4>
mov    %r12,%rax
mov    -0x50(%rbp),%r12
mov    -0x58(%rbp),%rbx
jmpq   22962 <Fax3Decode1D+0x442>
mov    %r12d,0x0(%r13)
lea    0x4(%r13),%rdx
cmp    %r15d,%r14d
jne    22c12 <Fax3Decode1D+0x6f2>
mov    -0x90(%rbp),%r13
mov    -0x98(%rbp),%r14
mov    -0x50(%rbp),%r12
mov    -0x48(%rbp),%rdi
xor    %eax,%eax
mov    -0x88(%rbp),%rsi
jmpq   22962 <Fax3Decode1D+0x442>
add    0x4(%r10,%r11,8),%eax
mov    %eax,(%rdx)
lea    0x4(%rdx),%rax
add    0x4(%r10,%r11,8),%r14d
cmp    %r15d,%r14d
jge    22c52 <Fax3Decode1D+0x732>
mov    %rax,-0x60(%rbp)
mov    %rdx,-0x80(%rbp)
mov    -0x48(%rbp),%r10
mov    $0xd,%edx
mov    %rdi,%rax
jmpq   22c80 <Fax3Decode1D+0x760>
movzbl (%rbx),%ebx
movzbl (%r8,%rbx,1),%ebx
shl    %cl,%ebx
or     %ebx,%r12d
lea    0x10(%rdi),%ebx
add    $0x2,%r13
xor    %edi,%edi
jmpq   229c5 <Fax3Decode1D+0x4a5>
test   %eax,%eax
js     22bc0 <Fax3Decode1D+0x6a0>
mov    %rax,%rbx
mov    %rdx,%rax
sub    %rsi,%rax
and    $0x4,%rax
test   %rax,%rax
jle    22bd9 <Fax3Decode1D+0x6b9>
movl   $0x0,(%rdx)
add    $0x4,%rdx
mov    %r15,%rax
sub    %ebx,%eax
mov    %eax,(%rdx)
add    $0x4,%rdx
mov    %r12,%rax
mov    -0x50(%rbp),%r12
mov    -0x58(%rbp),%rbx
jmpq   22962 <Fax3Decode1D+0x442>
mov    %r15d,(%rdx)
movl   $0x0,0x4(%rdx)
add    $0x8,%rdx
mov    %r12,%rax
mov    -0x50(%rbp),%r12
mov    -0x58(%rbp),%rbx
jmpq   22962 <Fax3Decode1D+0x442>
mov    %rdx,%r13
mov    0x90(%rbx),%edx
mov    -0x50(%rbp),%r12
mov    %r12,%rsi
mov    %r14,%rcx
mov    %r15,%r8
lea    0x32ddd(%rip),%rdi        # 55a0c <module.29>
callq  22420 <Fax3BadLength>
mov    %r13,%rdx
mov    -0x90(%rbp),%rcx
mov    -0x98(%rbp),%r8
mov    -0x48(%rbp),%rdi
mov    -0x88(%rbp),%rsi
jmp    22cc9 <Fax3Decode1D+0x7a9>
mov    %rax,%rdx
mov    %r12,%r9
mov    -0x48(%rbp),%r10
mov    %rdi,%rax
jmpq   22683 <Fax3Decode1D+0x163>
cmp    $0x8,%cl
je     22ced <Fax3Decode1D+0x7cd>
cmp    $0xa,%cl
jne    22d6d <Fax3Decode1D+0x84d>
movslq 0x4(%r9,%r11,8),%rcx
add    %ecx,%r14d
add    %ecx,%eax
cmp    $0xc,%ebx
jg     22d33 <Fax3Decode1D+0x813>
cmp    %r13,%rsi
jbe    22d28 <Fax3Decode1D+0x808>
movzbl 0x0(%r13),%ecx
movzbl (%r8,%rcx,1),%r11d
mov    %rbx,%rcx
shl    %cl,%r11d
or     %r11d,%r12d
lea    0x1(%r13),%r11
lea    0x8(%rcx),%ebx
cmp    $0xc,%ebx
jle    22da9 <Fax3Decode1D+0x889>
mov    %r11,%r13
jmp    22d33 <Fax3Decode1D+0x813>
cmp    %rdx,%rsi
jae    22cce <Fax3Decode1D+0x7ae>
add    $0xfffffffffffffffc,%rdx
movslq (%rdx),%rax
sub    %eax,%r14d
cmp    %r15d,%r14d
jg     22cba <Fax3Decode1D+0x79a>
cmp    %r15d,%r14d
jl     22dbd <Fax3Decode1D+0x89d>
cmp    %r15d,%r14d
jg     22df7 <Fax3Decode1D+0x8d7>
mov    %rcx,%r13
mov    %r8,%r14
xor    %eax,%eax
jmpq   22962 <Fax3Decode1D+0x442>
add    0x4(%r9,%r11,8),%eax
mov    -0x60(%rbp),%rcx
mov    %eax,(%rcx)
mov    -0x80(%rbp),%rcx
lea    0x8(%rcx),%rdx
add    0x4(%r9,%r11,8),%r14d
cmp    %r15d,%r14d
jge    22e12 <Fax3Decode1D+0x8f2>
test   %eax,%eax
je     22e21 <Fax3Decode1D+0x901>
mov    $0xc,%r11d
mov    -0x78(%rbp),%r10
mov    %rdi,%rax
jmpq   22a06 <Fax3Decode1D+0x4e6>
test   %ebx,%ebx
je     22a96 <Fax3Decode1D+0x576>
mov    %rdx,%rbx
mov    %r12,%rcx
and    $0x1fff,%ecx
mov    %ecx,%ecx
movzbl 0x1(%r9,%rcx,8),%r11d
sub    %r11d,%ebx
xchg   %rcx,%r11
shr    %cl,%r12d
movzbl (%r9,%r11,8),%ecx
cmp    $0xa,%cl
jbe    22c64 <Fax3Decode1D+0x744>
cmp    $0xb,%cl
je     22c76 <Fax3Decode1D+0x756>
cmp    $0xc,%cl
je     22e39 <Fax3Decode1D+0x919>
mov    -0x58(%rbp),%rcx
mov    0x90(%rcx),%edx
mov    %rax,%r15
lea    0x32c8b(%rip),%rdi        # 55a0c <module.29>
mov    -0x50(%rbp),%rsi
mov    %r14,%rcx
callq  22340 <Fax3Unexpected>
mov    %r15,%rax
mov    %r12,%r9
mov    -0x60(%rbp),%rdx
mov    -0x48(%rbp),%r10
xor    %edi,%edi
mov    -0x90(%rbp),%r15
jmpq   22683 <Fax3Decode1D+0x163>
cmp    %r11,%rsi
ja     22e4a <Fax3Decode1D+0x92a>
mov    %r11,%r13
mov    %rdx,%rbx
jmpq   22d33 <Fax3Decode1D+0x813>
test   %r14d,%r14d
jns    22dc5 <Fax3Decode1D+0x8a5>
xor    %r14d,%r14d
mov    %rdx,%rax
sub    %rsi,%rax
and    $0x4,%rax
test   %rax,%rax
jle    22dde <Fax3Decode1D+0x8be>
movl   $0x0,(%rdx)
add    $0x4,%rdx
mov    %r15,%rax
sub    %r14d,%eax
mov    %eax,(%rdx)
add    $0x4,%rdx
mov    %rcx,%r13
mov    %r8,%r14
xor    %eax,%eax
jmpq   22962 <Fax3Decode1D+0x442>
mov    %r15d,(%rdx)
movl   $0x0,0x4(%rdx)
add    $0x8,%rdx
mov    %rcx,%r13
mov    %r8,%r14
xor    %eax,%eax
jmpq   22962 <Fax3Decode1D+0x442>
mov    %r12,%r9
mov    -0x48(%rbp),%r10
mov    %rdi,%rax
jmpq   22683 <Fax3Decode1D+0x163>
mov    (%rcx),%eax
test   %eax,%eax
je     22e68 <Fax3Decode1D+0x948>
mov    $0xc,%r11d
mov    -0x78(%rbp),%r10
mov    %rdi,%rax
jmpq   22a06 <Fax3Decode1D+0x4e6>
mov    %r12,%r9
mov    -0x60(%rbp),%rdx
mov    $0x1,%edi
jmpq   22683 <Fax3Decode1D+0x163>
movzbl (%r11),%r11d
movzbl (%r8,%r11,1),%r11d
xchg   %rcx,%rbx
shl    %cl,%r11d
or     %r11d,%r12d
add    $0x10,%ebx
add    $0x2,%r13
jmpq   22d33 <Fax3Decode1D+0x813>
mov    %rcx,%rdx
mov    $0xc,%r11d
mov    -0x78(%rbp),%r10
mov    %rdi,%rax
jmpq   22a06 <Fax3Decode1D+0x4e6>
nopl   (%rax)

0000000000022e80 <Fax3Decode2D>:
push   %rbp
mov    %rsp,%rbp
sub    $0x120,%rsp
mov    %rsi,-0x50(%rbp)
mov    0x350(%rdi),%rsi
mov    %rsi,-0xc0(%rbp)
mov    0x10(%rsi),%eax
mov    %rax,-0xd0(%rbp)
mov    %rdx,%rax
mov    %r15,%r10
mov    %rsi,%r15
mov    0x40(%r15),%r8
mov    %r8,-0xe8(%rbp)
lea    0x32b7b(%rip),%r9        # 55a3d <module.31>
mov    0x8(%r15),%rcx
cqto   
mov    %r12,%rsi
mov    %rbx,%r11
mov    %rcx,%rbx
mov    %rdi,%rcx
mov    %rax,%rdi
idiv   %rbx
test   %rdx,%rdx
jne    22f73 <Fax3Decode2D+0xf3>
mov    0x48(%r15),%r12d
movslq 0x4c(%r15),%rbx
movslq 0x50(%r15),%rax
mov    0x388(%rcx),%r9
mov    %r10,-0x28(%rbp)
mov    %r9,%r10
add    0x390(%rcx),%r10
mov    %r14,-0x20(%rbp)
mov    %r10,-0xf0(%rbp)
mov    0x57042(%rip),%rdx        # 79f58 <TIFFFaxMainTable@@Base+0x2419c>
mov    %rdx,-0x118(%rbp)
mov    0x5709c(%rip),%rdx        # 79fc0 <TIFFFaxBlackTable@@Base+0x1be04>
mov    %rdx,-0x108(%rbp)
mov    0x57066(%rip),%rdx        # 79f98 <TIFFFaxWhiteTable@@Base+0x23ddc>
mov    %rdx,-0xf8(%rbp)
mov    $0x1,%edx
mov    %rdx,-0x70(%rbp)
xor    %edx,%edx
mov    %rdx,-0x78(%rbp)
mov    $0xb,%r14d
mov    %r13,-0x18(%rbp)
mov    $0x8,%r13d
mov    %rcx,-0x88(%rbp)
mov    %r11,-0x8(%rbp)
mov    %rsi,-0x10(%rbp)
mov    -0x118(%rbp),%r11
jmpq   230a4 <Fax3Decode2D+0x224>
xor    %eax,%eax
mov    0x3b8(%rcx),%rdi
mov    %r11,%rbx
mov    %rsi,%r12
mov    %r9,%rsi
mov    %r10,%r15
lea    0x32a8a(%rip),%rdx        # 55a19 <module.29+0xd>
callq  8a00 <TIFFErrorExt@plt>
mov    $0xffffffffffffffff,%rax
leaveq 
retq   
mov    %r9,-0x110(%rbp)
mov    -0xc0(%rbp),%rax
mov    0x90(%rax),%r8d
lea    0x32a84(%rip),%rdi        # 55a3d <module.31>
mov    -0x88(%rbp),%rax
mov    %r14,%rcx
mov    %rsi,-0x120(%rbp)
mov    %rax,%rsi
mov    %rdx,%r13
mov    %r8,%rdx
callq  22340 <Fax3Unexpected>
mov    %r13,%rdx
mov    -0x110(%rbp),%r9
mov    -0x120(%rbp),%rsi
mov    -0xd0(%rbp),%r13
pushq  -0x78(%rbp)
popq   -0x80(%rbp)
test   %r15d,%r15d
je     23002 <Fax3Decode2D+0x182>
mov    %r15d,(%rdx)
add    $0x4,%rdx
cmp    %r13d,%r14d
jne    230fa <Fax3Decode2D+0x27a>
mov    -0x80(%rbp),%r11
mov    -0x48(%rbp),%r14
mov    -0x50(%rbp),%rdi
mov    %r12,-0x80(%rbp)
mov    %r11,-0x68(%rbp)
mov    %r9,-0xb0(%rbp)
mov    %r13,%rcx
mov    %rdi,%r12
mov    %rdx,%r13
mov    -0xc0(%rbp),%r15
callq  *0x58(%r15)
movl   $0x0,0x0(%r13)
mov    0x68(%r15),%rcx
mov    0x70(%r15),%rax
mov    %rcx,0x70(%r15)
mov    %rax,0x68(%r15)
movslq 0x90(%r15),%rax
add    $0x1,%eax
mov    %eax,0x90(%r15)
mov    0x8(%r15),%rax
mov    %r14,%rdi
sub    %rax,%rdi
add    %r12,%rax
mov    %rax,-0x50(%rbp)
mov    $0xb,%r14d
mov    -0xb0(%rbp),%r9
mov    -0x68(%rbp),%rax
mov    -0x80(%rbp),%r12
mov    -0xf0(%rbp),%r10
mov    -0xe8(%rbp),%r8
mov    $0x8,%r13d
mov    -0x118(%rbp),%r11
test   %rdi,%rdi
jg     2315a <Fax3Decode2D+0x2da>
mov    %ebx,0x4c(%r15)
mov    %r12d,0x48(%r15)
mov    %eax,0x50(%r15)
mov    -0x88(%rbp),%rcx
mov    0x388(%rcx),%rax
sub    %r9,%rax
add    0x390(%rcx),%rax
mov    %rax,0x390(%rcx)
mov    %r9,0x388(%rcx)
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x18(%rbp),%r13
mov    $0x1,%eax
mov    -0x20(%rbp),%r14
mov    -0x28(%rbp),%r15
leaveq 
retq   
mov    -0xc0(%rbp),%rax
mov    0x90(%rax),%r10d
lea    0x3292e(%rip),%rdi        # 55a3d <module.31>
mov    -0x88(%rbp),%rax
mov    %r14,%rcx
mov    %r13,%r8
mov    %r12,-0x90(%rbp)
mov    %r9,-0xc8(%rbp)
mov    %rsi,%r12
mov    %rax,%rsi
mov    %rdx,%r15
mov    %r10,%rdx
callq  22420 <Fax3BadLength>
mov    %r15,%rdx
mov    -0xc8(%rbp),%r9
mov    -0x90(%rbp),%rsi
mov    -0x80(%rbp),%r11
mov    -0x48(%rbp),%rcx
mov    -0x50(%rbp),%rdi
jmp    2317b <Fax3Decode2D+0x2fb>
mov    %rdi,-0x48(%rbp)
mov    0x70(%r15),%rsi
test   %eax,%eax
je     2319f <Fax3Decode2D+0x31f>
mov    -0x50(%rbp),%rdi
jmp    231bb <Fax3Decode2D+0x33b>
cmp    %rdx,%r12
jae    23180 <Fax3Decode2D+0x300>
add    $0xfffffffffffffffc,%rdx
movslq (%rdx),%rax
sub    %eax,%r14d
cmp    %r13d,%r14d
jg     2316c <Fax3Decode2D+0x2ec>
cmp    %r13d,%r14d
jl     231e3 <Fax3Decode2D+0x363>
cmp    %r13d,%r14d
jg     23221 <Fax3Decode2D+0x3a1>
mov    %rcx,%r14
mov    %r12,%rcx
mov    %rsi,%r12
mov    %rcx,%rsi
jmpq   23017 <Fax3Decode2D+0x197>
mov    -0x50(%rbp),%rdi
jmpq   23246 <Fax3Decode2D+0x3c6>
movzbl %r12b,%ecx
test   %ecx,%ecx
jne    2326d <Fax3Decode2D+0x3ed>
shr    $0x8,%r12d
add    $0xfffffff8,%ebx
cmp    $0x7,%ebx
jg     231a8 <Fax3Decode2D+0x328>
cmp    %r9,%r10
jbe    232e6 <Fax3Decode2D+0x466>
movzbl (%r9),%ecx
movzbl (%r8,%rcx,1),%edx
mov    %rbx,%rcx
shl    %cl,%edx
or     %edx,%r12d
add    $0x1,%r9
lea    0x8(%rcx),%ebx
jmp    231a8 <Fax3Decode2D+0x328>
test   %r14d,%r14d
jns    231eb <Fax3Decode2D+0x36b>
xor    %r14d,%r14d
mov    %rdx,%rax
sub    %r12,%rax
and    $0x4,%rax
test   %rax,%rax
jle    23204 <Fax3Decode2D+0x384>
movl   $0x0,(%rdx)
add    $0x4,%rdx
mov    %r13,%rax
sub    %r14d,%eax
mov    %eax,(%rdx)
add    $0x4,%rdx
mov    %rcx,%r14
mov    %r12,%rcx
mov    %rsi,%r12
mov    %rcx,%rsi
jmpq   23017 <Fax3Decode2D+0x197>
mov    %r13d,(%rdx)
movl   $0x0,0x4(%rdx)
add    $0x8,%rdx
mov    %rcx,%r14
mov    %r12,%rcx
mov    %rsi,%r12
mov    %rcx,%rsi
jmpq   23017 <Fax3Decode2D+0x197>
shr    %r12d
add    $0xffffffff,%ebx
cmp    $0xa,%ebx
jle    232f6 <Fax3Decode2D+0x476>
mov    %r12,%rcx
and    $0x7ff,%ecx
test   %ecx,%ecx
jne    23240 <Fax3Decode2D+0x3c0>
mov    $0x8,%r13d
jmpq   231bb <Fax3Decode2D+0x33b>
mov    %rcx,%rbx
mov    %rdx,%r12
mov    %r12,%rdx
shr    %edx
lea    -0x1(%rbx),%ecx
and    $0x1,%r12d
test   %r12d,%r12d
je     23267 <Fax3Decode2D+0x3e7>
test   %ecx,%ecx
jg     2329f <Fax3Decode2D+0x41f>
cmp    %r9,%r10
jbe    2332b <Fax3Decode2D+0x4ab>
movzbl (%r9),%eax
movzbl (%r8,%rax,1),%eax
shl    %cl,%eax
or     %eax,%edx
add    $0x1,%r9
lea    0x7(%rbx),%ecx
mov    0x68(%r15),%rdi
movslq (%rdi),%rax
mov    %rdx,%r12
shr    %r12d
lea    -0x1(%rcx),%ebx
and    $0x1,%edx
test   %edx,%edx
jle    2333d <Fax3Decode2D+0x4bd>
mov    %rsi,-0x58(%rbp)
mov    $0xc,%edi
xor    %r11d,%r11d
mov    -0xf8(%rbp),%rdx
mov    -0x108(%rbp),%rax
mov    -0xd0(%rbp),%r13
mov    %r11,%r14
mov    %r14,%r15
jmpq   233b8 <Fax3Decode2D+0x538>
test   %ebx,%ebx
je     23401 <Fax3Decode2D+0x581>
mov    %r13,%rbx
jmpq   231a8 <Fax3Decode2D+0x328>
cmp    %r9,%r10
jbe    2347d <Fax3Decode2D+0x5fd>
movzbl (%r9),%ecx
movzbl (%r8,%rcx,1),%edx
mov    %rbx,%rcx
shl    %cl,%edx
or     %edx,%r12d
lea    0x1(%r9),%rbx
lea    0x8(%rcx),%edx
cmp    $0xa,%edx
jle    2348d <Fax3Decode2D+0x60d>
mov    %rbx,%r9
mov    %rdx,%rbx
jmpq   2324f <Fax3Decode2D+0x3cf>
test   %ecx,%ecx
je     233fc <Fax3Decode2D+0x57c>
mov    $0x1,%ecx
jmpq   2329f <Fax3Decode2D+0x41f>
add    $0x4,%rdi
mov    $0x7,%ecx
xor    %r15d,%r15d
mov    -0xd0(%rbp),%r13
mov    %rsi,%rdx
mov    %r15,%r14
mov    %rdx,-0x120(%rbp)
cmp    %r13d,%r14d
jl     234a1 <Fax3Decode2D+0x621>
test   %r15d,%r15d
jne    23548 <Fax3Decode2D+0x6c8>
xor    %r15d,%r15d
pushq  -0x78(%rbp)
popq   -0x80(%rbp)
jmpq   22ff6 <Fax3Decode2D+0x176>
mov    %r12,%rcx
and    $0xfff,%ecx
mov    %ecx,%edi
movzbl 0x1(%rdx,%rdi,8),%ecx
shr    %cl,%r12d
sub    %ecx,%ebx
movzbl (%rdx,%rdi,8),%ecx
cmp    $0xa,%cl
jbe    2356a <Fax3Decode2D+0x6ea>
cmp    $0xb,%cl
jne    235ec <Fax3Decode2D+0x76c>
movslq 0x4(%rdx,%rdi,8),%rcx
add    %ecx,%r15d
add    %ecx,%r14d
mov    $0xc,%edi
cmp    $0xb,%ebx
jg     2337d <Fax3Decode2D+0x4fd>
cmp    %r9,%r10
jbe    23600 <Fax3Decode2D+0x780>
movzbl (%r9),%ecx
movzbl (%r8,%rcx,1),%ecx
mov    %rbx,%r11
mov    %rcx,%rbx
mov    %r11,%rcx
shl    %cl,%ebx
mov    %rcx,%r11
or     %ebx,%r12d
lea    0x1(%r9),%rbx
lea    0x8(%r11),%ecx
cmp    $0xb,%ecx
jle    23610 <Fax3Decode2D+0x790>
mov    %rbx,%r9
mov    %rcx,%rbx
xor    %r11d,%r11d
jmp    2337d <Fax3Decode2D+0x4fd>
mov    %rdx,%r12
xor    %eax,%eax
mov    -0xd0(%rbp),%r13
test   %r13d,%r13d
jne    23627 <Fax3Decode2D+0x7a7>
mov    -0x88(%rbp),%r14
xor    %ebx,%ebx
mov    %rsi,%rdx
mov    %r9,-0xc0(%rbp)
mov    %r13,%rcx
mov    %rax,%r13
callq  *0x58(%r15)
mov    %ebx,0x4c(%r15)
mov    %r12d,0x48(%r15)
mov    %r13d,0x50(%r15)
mov    0x388(%r14),%rax
mov    -0xc0(%rbp),%rcx
sub    %rcx,%rax
add    0x390(%r14),%rax
mov    %rax,0x390(%r14)
mov    %rcx,0x388(%r14)
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x18(%rbp),%r13
mov    -0x20(%rbp),%r14
mov    -0x28(%rbp),%r15
mov    $0xffffffffffffffff,%rax
leaveq 
retq   
test   %ebx,%ebx
je     2366f <Fax3Decode2D+0x7ef>
mov    %r14,%rbx
jmpq   2324f <Fax3Decode2D+0x3cf>
cmp    %rbx,%r10
ja     23676 <Fax3Decode2D+0x7f6>
mov    %rbx,%r9
mov    %r14,%rbx
jmpq   2324f <Fax3Decode2D+0x3cf>
cmp    $0x6,%ebx
jle    23698 <Fax3Decode2D+0x818>
mov    %rbx,-0xe0(%rbp)
mov    %r12,%rcx
and    $0x7f,%ecx
mov    %ecx,%r8d
movzbl 0x1(%r11,%r8,8),%ecx
sub    %ecx,%ebx
shr    %cl,%r12d
mov    %rcx,-0xd8(%rbp)
movzbl (%r11,%r8,8),%ecx
add    $0xffffffff,%ecx
cmp    $0xb,%ecx
ja     22f9d <Fax3Decode2D+0x11d>
lea    0x31ba8(%rip),%r10        # 5508c <module.11+0x138>
movslq (%r10,%rcx,4),%rcx
add    %r10,%rcx
jmpq   *%rcx
cmp    %rsi,%rdx
jne    238db <Fax3Decode2D+0xa5b>
mov    0x4(%r11,%r8,8),%r10d
lea    (%r14,%r10,1),%ecx
cmp    %ecx,%eax
jle    238e8 <Fax3Decode2D+0xa68>
mov    %rax,%rcx
sub    %r14d,%ecx
sub    %r10d,%ecx
add    %r15d,%ecx
mov    %ecx,(%rdx)
movslq 0x4(%r11,%r8,8),%rcx
mov    %rax,%r14
sub    %ecx,%r14d
add    $0xfffffffffffffffc,%rdi
movslq (%rdi),%rcx
sub    %ecx,%eax
add    $0x4,%rdx
mov    -0xf0(%rbp),%r10
mov    -0xe8(%rbp),%r8
mov    $0x7,%ecx
xor    %r15d,%r15d
jmpq   23356 <Fax3Decode2D+0x4d6>
lea    (%r14,%r15,1),%eax
cmp    %r13d,%eax
jl     23959 <Fax3Decode2D+0xad9>
mov    %r15d,(%rdx)
add    $0x4,%rdx
xor    %r15d,%r15d
pushq  -0x78(%rbp)
popq   -0x80(%rbp)
jmpq   22ff6 <Fax3Decode2D+0x176>
cmp    $0x7,%cl
je     2397a <Fax3Decode2D+0xafa>
cmp    $0x9,%cl
je     233a8 <Fax3Decode2D+0x528>
mov    -0xc0(%rbp),%rax
mov    0x90(%rax),%edx
lea    0x324ad(%rip),%rdi        # 55a3d <module.31>
mov    -0x88(%rbp),%rax
mov    %r14,%rcx
mov    %rbx,-0xb8(%rbp)
mov    %rsi,%rbx
mov    %rax,%rsi
mov    %r9,%r13
callq  22340 <Fax3Unexpected>
mov    %rbx,%rdx
mov    %r13,%r9
mov    -0xb8(%rbp),%rbx
mov    -0x50(%rbp),%rdi
xor    %r11d,%r11d
mov    -0xd0(%rbp),%r13
test   %r15d,%r15d
je     235d6 <Fax3Decode2D+0x756>
mov    %r15d,(%rdx)
add    $0x4,%rdx
cmp    %r13d,%r14d
jne    239b3 <Fax3Decode2D+0xb33>
mov    -0x58(%rbp),%rsi
mov    -0x48(%rbp),%r14
jmpq   23017 <Fax3Decode2D+0x197>
cmp    $0xc,%cl
jne    2357c <Fax3Decode2D+0x6fc>
mov    %rsi,%rdx
mov    -0x50(%rbp),%rdi
mov    $0x1,%r11d
jmp    235ca <Fax3Decode2D+0x74a>
test   %ebx,%ebx
je     23a10 <Fax3Decode2D+0xb90>
mov    %rdi,%rbx
jmpq   2337d <Fax3Decode2D+0x4fd>
cmp    %rbx,%r10
ja     23a52 <Fax3Decode2D+0xbd2>
mov    %rbx,%r9
mov    %rdi,%rbx
xor    %r11d,%r11d
jmpq   2337d <Fax3Decode2D+0x4fd>
mov    0x90(%r15),%edx
mov    -0x88(%rbp),%r10
xor    %ebx,%ebx
mov    %rbx,%rcx
mov    %r13,%r8
mov    %r9,-0xe8(%rbp)
mov    %rax,%r14
mov    %rsi,%r15
mov    %r10,%rsi
lea    0x323e9(%rip),%rdi        # 55a3d <module.31>
callq  22420 <Fax3BadLength>
mov    -0xe8(%rbp),%r9
mov    -0x50(%rbp),%rdi
mov    %rbx,%rax
mov    %r15,%rdx
jmpq   23a7d <Fax3Decode2D+0xbfd>
xor    %eax,%eax
jmpq   23401 <Fax3Decode2D+0x581>
movzbl (%rbx),%ebx
movzbl (%r8,%rbx,1),%ebx
mov    %rdx,%r13
mov    %rcx,%rdx
mov    %r13,%rcx
shl    %cl,%ebx
or     %ebx,%r12d
add    $0x2,%r9
lea    0x10(%rdx),%ebx
jmpq   2324f <Fax3Decode2D+0x3cf>
cmp    %r10,%r9
jae    23aad <Fax3Decode2D+0xc2d>
movzbl (%r9),%ecx
movzbl (%r8,%rcx,1),%r8d
mov    %rbx,%rcx
shl    %cl,%r8d
or     %r8d,%r12d
add    $0x1,%r9
lea    0x8(%rcx),%ebx
jmpq   234aa <Fax3Decode2D+0x62a>
sub    %r14d,%r13d
mov    %r13d,(%rdx)
mov    -0xc0(%rbp),%rax
mov    0x90(%rax),%r8d
lea    0x32363(%rip),%rdi        # 55a3d <module.31>
mov    -0x88(%rbp),%rax
mov    %r14,%rcx
mov    %r12,-0xa8(%rbp)
mov    %rsi,-0x98(%rbp)
mov    %rax,%rsi
mov    %rdx,%r12
mov    %r8,%rdx
mov    %r9,%r13
callq  223b0 <Fax3Extension>
lea    0x4(%r12),%rdx
mov    %r13,%r9
mov    -0x98(%rbp),%rsi
mov    -0xa8(%rbp),%r12
mov    -0xd0(%rbp),%r13
pushq  -0x78(%rbp)
popq   -0x80(%rbp)
jmpq   22ff6 <Fax3Decode2D+0x176>
mov    %r13,%rax
sub    %r14d,%eax
mov    %eax,(%rdx)
add    $0x4,%rdx
cmp    $0x3,%ebx
jg     2376a <Fax3Decode2D+0x8ea>
mov    -0xf0(%rbp),%rax
cmp    %rax,%r9
jae    23abd <Fax3Decode2D+0xc3d>
movzbl (%r9),%eax
mov    -0xe8(%rbp),%rcx
movzbl (%rcx,%rax,1),%eax
mov    %rbx,%rcx
shl    %cl,%eax
or     %eax,%r12d
lea    0x8(%rcx),%ebx
add    $0x1,%r9
mov    %r12,%rax
and    $0xf,%eax
test   %eax,%eax
je     237c7 <Fax3Decode2D+0x947>
mov    -0xc0(%rbp),%rax
mov    0x90(%rax),%r8d
lea    0x322b4(%rip),%rdi        # 55a3d <module.31>
mov    -0x88(%rbp),%rax
mov    %r14,%rcx
mov    %rsi,-0x98(%rbp)
mov    %r9,-0xd8(%rbp)
mov    %rax,%rsi
mov    %rdx,%r13
mov    %r8,%rdx
callq  22340 <Fax3Unexpected>
mov    %r13,%rdx
mov    -0xd8(%rbp),%r9
mov    -0x98(%rbp),%rsi
mov    -0xd0(%rbp),%r13
shr    $0x4,%r12d
add    $0xfffffffc,%ebx
pushq  -0x70(%rbp)
popq   -0x80(%rbp)
jmpq   22ff6 <Fax3Decode2D+0x176>
cmp    %rsi,%rdx
jne    23add <Fax3Decode2D+0xc5d>
mov    %rax,%rcx
add    (%rdi),%ecx
mov    %rcx,%rax
add    0x4(%rdi),%eax
mov    %rcx,%r8
sub    %r14d,%r8d
add    %r8d,%r15d
add    $0x8,%rdi
mov    %rcx,%r14
mov    -0xf0(%rbp),%r10
mov    -0xe8(%rbp),%r8
mov    $0x7,%ecx
jmpq   23356 <Fax3Decode2D+0x4d6>
sub    %rsi,%rdx
and    $0x4,%rdx
test   %rdx,%rdx
jle    23ae6 <Fax3Decode2D+0xc66>
mov    %rdi,-0x110(%rbp)
mov    %rax,-0x40(%rbp)
mov    -0xf0(%rbp),%r10
mov    -0xe8(%rbp),%r8
mov    $0xd,%eax
mov    -0x108(%rbp),%rdx
jmpq   23b29 <Fax3Decode2D+0xca9>
cmp    %rsi,%rdx
jne    23b67 <Fax3Decode2D+0xce7>
mov    %rax,%rcx
mov    %rcx,%rax
sub    %r14d,%eax
add    %r15d,%eax
mov    %eax,(%rdx)
mov    %rcx,%rax
add    (%rdi),%eax
add    $0x4,%rdx
add    $0x4,%rdi
mov    %rcx,%r14
mov    -0xf0(%rbp),%r10
mov    -0xe8(%rbp),%r8
mov    $0x7,%ecx
xor    %r15d,%r15d
jmpq   23356 <Fax3Decode2D+0x4d6>
cmp    %rsi,%rdx
jne    23b70 <Fax3Decode2D+0xcf0>
mov    %rax,%rcx
sub    %r14d,%ecx
mov    %rcx,%r10
add    0x4(%r11,%r8,8),%r10d
add    %r15d,%r10d
mov    %r10d,(%rdx)
add    (%rdi),%eax
add    0x4(%r11,%r8,8),%ecx
add    %ecx,%r14d
add    $0x4,%rdx
add    $0x4,%rdi
mov    -0xf0(%rbp),%r10
mov    -0xe8(%rbp),%r8
mov    $0x7,%ecx
xor    %r15d,%r15d
jmpq   23356 <Fax3Decode2D+0x4d6>
mov    %r12,-0x40(%rbp)
mov    %rbx,-0x60(%rbp)
jmpq   23b94 <Fax3Decode2D+0xd14>
cmp    %ecx,%eax
jl     238f5 <Fax3Decode2D+0xa75>
cmp    %rsi,%rdx
je     23507 <Fax3Decode2D+0x687>
mov    -0xc0(%rbp),%rax
mov    0x90(%rax),%r8d
lea    0x32133(%rip),%rdi        # 55a3d <module.31>
mov    -0x88(%rbp),%rax
mov    %r14,%rcx
mov    %r12,-0xa8(%rbp)
mov    %rsi,-0x90(%rbp)
mov    %rax,%rsi
mov    %r9,%r12
mov    %rdx,%r13
mov    %r8,%rdx
callq  22340 <Fax3Unexpected>
mov    %r13,%rdx
mov    %r12,%r9
mov    -0x90(%rbp),%rsi
mov    -0xa8(%rbp),%r12
mov    -0xd0(%rbp),%r13
pushq  -0x78(%rbp)
popq   -0x80(%rbp)
jmpq   22ff6 <Fax3Decode2D+0x176>
test   %ebx,%ebx
jle    23ba6 <Fax3Decode2D+0xd26>
mov    %r12,%rax
and    $0x1,%eax
test   %eax,%eax
je     22f9d <Fax3Decode2D+0x11d>
shr    %r12d
add    $0xffffffff,%ebx
jmpq   23555 <Fax3Decode2D+0x6d5>
add    0x4(%rdx,%rdi,8),%r15d
mov    %r15d,(%rsi)
lea    0x4(%rsi),%rcx
add    0x4(%rdx,%rdi,8),%r14d
cmp    %r13d,%r14d
jge    23bcc <Fax3Decode2D+0xd4c>
mov    %rcx,-0xb8(%rbp)
mov    %rsi,-0xc8(%rbp)
mov    -0x50(%rbp),%rdi
mov    $0xd,%esi
mov    %r11,%r15
jmpq   23bf8 <Fax3Decode2D+0xd78>
mov    -0xc0(%rbp),%rax
mov    0x90(%rax),%eax
lea    0x32076(%rip),%rdi        # 55a3d <module.31>
mov    -0x88(%rbp),%rsi
mov    %r14,%rcx
mov    %r13,%r8
mov    %r11,-0x68(%rbp)
mov    %r9,-0xb0(%rbp)
mov    %rdx,%r15
mov    %rax,%rdx
callq  22420 <Fax3BadLength>
mov    %r15,%rdx
mov    -0xb0(%rbp),%r9
mov    -0x68(%rbp),%r11
mov    -0x58(%rbp),%rsi
mov    -0x48(%rbp),%rcx
mov    -0x50(%rbp),%rdi
jmpq   23c42 <Fax3Decode2D+0xdc2>
mov    -0xb8(%rbp),%rsi
mov    %r12,-0xf8(%rbp)
mov    %r9,-0x78(%rbp)
mov    %rsi,%r12
mov    -0xc0(%rbp),%rbx
mov    0x90(%rbx),%edx
lea    0x3200b(%rip),%rdi        # 55a3d <module.31>
mov    -0x88(%rbp),%rsi
mov    %r14,%rcx
callq  224b0 <Fax3PrematureEOF>
test   %r15d,%r15d
jne    23c61 <Fax3Decode2D+0xde1>
mov    %r12,%rdx
jmpq   23c6a <Fax3Decode2D+0xdea>
movzbl (%rbx),%edi
movzbl (%r8,%rdi,1),%edi
shl    %cl,%edi
or     %edi,%r12d
add    $0x2,%r9
lea    0x10(%r11),%ebx
xor    %r11d,%r11d
jmpq   2337d <Fax3Decode2D+0x4fd>
cmp    %rdx,%r15
jae    23a82 <Fax3Decode2D+0xc02>
add    $0xfffffffffffffffc,%rdx
movslq (%rdx),%rcx
sub    %ecx,%eax
cmp    %r13d,%eax
jg     23a6f <Fax3Decode2D+0xbef>
cmp    %r13d,%eax
jl     23c9a <Fax3Decode2D+0xe1a>
cmp    %r13d,%eax
jg     23cde <Fax3Decode2D+0xe5e>
mov    %r14,%rax
mov    %r15,%rsi
mov    -0x88(%rbp),%r14
mov    -0xc0(%rbp),%r15
jmpq   2341d <Fax3Decode2D+0x59d>
test   %ebx,%ebx
je     23d05 <Fax3Decode2D+0xe85>
mov    %rcx,%rbx
jmpq   234aa <Fax3Decode2D+0x62a>
mov    -0xd8(%rbp),%rcx
mov    -0xe0(%rbp),%rax
cmp    %eax,%ecx
je     23d66 <Fax3Decode2D+0xee6>
mov    $0x4,%ebx
jmpq   2376a <Fax3Decode2D+0x8ea>
mov    %r12,-0x30(%rbp)
jmpq   23d82 <Fax3Decode2D+0xf02>
mov    %rdi,-0x110(%rbp)
mov    %rax,-0x40(%rbp)
mov    -0xf0(%rbp),%r10
mov    -0xe8(%rbp),%r8
mov    $0xc,%eax
mov    -0xf8(%rbp),%rdx
jmpq   23dac <Fax3Decode2D+0xf2c>
cmp    $0xa,%cl
je     23b1e <Fax3Decode2D+0xc9e>
cmp    $0xb,%cl
jne    23df3 <Fax3Decode2D+0xf73>
movslq 0x4(%rdx,%rdi,8),%rcx
add    %ecx,%r15d
add    %ecx,%r14d
cmp    $0xc,%ebx
jg     23e51 <Fax3Decode2D+0xfd1>
cmp    %r9,%r10
jbe    23e46 <Fax3Decode2D+0xfc6>
movzbl (%r9),%ecx
movzbl (%r8,%rcx,1),%edi
mov    %rbx,%rcx
shl    %cl,%edi
or     %edi,%r12d
lea    0x1(%r9),%rbx
lea    0x8(%rcx),%edi
cmp    $0xc,%edi
jle    23eaf <Fax3Decode2D+0x102f>
mov    %rbx,%r9
mov    %rdi,%rbx
jmpq   23e51 <Fax3Decode2D+0xfd1>
mov    %r12,-0x38(%rbp)
jmpq   23ed7 <Fax3Decode2D+0x1057>
mov    %r12,-0x38(%rbp)
mov    %rbx,-0x60(%rbp)
jmpq   23eff <Fax3Decode2D+0x107f>
cmp    %r13d,%eax
jge    23f11 <Fax3Decode2D+0x1091>
lea    0x8(%rdi),%rbx
mov    0x4(%rdi),%ecx
add    (%rdi),%ecx
add    %ecx,%eax
mov    %rbx,%rdi
cmp    %eax,%r14d
jge    23b7d <Fax3Decode2D+0xcfd>
mov    -0x60(%rbp),%rbx
mov    -0x40(%rbp),%r12
jmpq   234f6 <Fax3Decode2D+0x676>
cmp    %r10,%r9
jae    23f1e <Fax3Decode2D+0x109e>
movzbl (%r9),%eax
movzbl (%rax,%r8,1),%eax
mov    %rbx,%rcx
shl    %cl,%eax
or     %eax,%r12d
lea    0x8(%rcx),%ebx
add    $0x1,%r9
jmpq   23961 <Fax3Decode2D+0xae1>
mov    %rcx,%rdx
mov    -0x50(%rbp),%rdi
mov    %r11,%r15
jmpq   235ca <Fax3Decode2D+0x74a>
cmp    $0x8,%cl
je     23f30 <Fax3Decode2D+0x10b0>
cmp    $0xa,%cl
jne    23fb4 <Fax3Decode2D+0x1134>
movslq 0x4(%rax,%rdx,8),%rcx
add    %ecx,%r15d
add    %ecx,%r14d
cmp    $0xc,%ebx
jg     23f80 <Fax3Decode2D+0x1100>
cmp    %r9,%r10
jbe    23f75 <Fax3Decode2D+0x10f5>
movzbl (%r9),%ecx
movzbl (%r8,%rcx,1),%edx
mov    %rbx,%rcx
shl    %cl,%edx
or     %edx,%r12d
lea    0x1(%r9),%rdx
lea    0x8(%rcx),%ebx
cmp    $0xc,%ebx
jle    23ff7 <Fax3Decode2D+0x1177>
mov    %rdx,%r9
jmpq   23f80 <Fax3Decode2D+0x1100>
cmp    %rdx,%rsi
jae    23c47 <Fax3Decode2D+0xdc7>
add    $0xfffffffffffffffc,%rdx
movslq (%rdx),%rax
sub    %eax,%r14d
cmp    %r13d,%r14d
jg     23c33 <Fax3Decode2D+0xdb3>
cmp    %r13d,%r14d
jl     2400b <Fax3Decode2D+0x118b>
cmp    %r13d,%r14d
jg     24040 <Fax3Decode2D+0x11c0>
mov    %rcx,%r14
jmpq   23017 <Fax3Decode2D+0x197>
mov    %r15d,(%r12)
lea    0x4(%r12),%rdx
cmp    %r13d,%r14d
jne    24056 <Fax3Decode2D+0x11d6>
mov    %rbx,%r15
mov    -0x78(%rbp),%r9
mov    -0xf8(%rbp),%r12
mov    -0x58(%rbp),%rsi
mov    -0x88(%rbp),%r14
mov    -0x50(%rbp),%rdi
xor    %eax,%eax
mov    %rax,%rbx
jmpq   2341d <Fax3Decode2D+0x59d>
test   %eax,%eax
jns    23ca1 <Fax3Decode2D+0xe21>
mov    %rbx,%rax
mov    %rdx,%rcx
sub    %r15,%rcx
and    $0x4,%rcx
test   %rcx,%rcx
jle    23cba <Fax3Decode2D+0xe3a>
movl   $0x0,(%rdx)
add    $0x4,%rdx
neg    %eax
add    %r13d,%eax
mov    %eax,(%rdx)
add    $0x4,%rdx
mov    %r14,%rax
mov    %r15,%rsi
mov    -0x88(%rbp),%r14
mov    -0xc0(%rbp),%r15
jmpq   2341d <Fax3Decode2D+0x59d>
mov    %r13d,(%rdx)
movl   $0x0,0x4(%rdx)
add    $0x8,%rdx
mov    %r14,%rax
mov    %r15,%rsi
mov    -0x88(%rbp),%r14
mov    -0xc0(%rbp),%r15
jmpq   2341d <Fax3Decode2D+0x59d>
mov    %r15,%r8
xor    %ebx,%ebx
mov    %rbx,-0xf0(%rbp)
mov    %r12,-0x108(%rbp)
mov    %r9,-0xd0(%rbp)
mov    -0xc0(%rbp),%r15
mov    0x90(%r15),%ebx
lea    0x31d09(%rip),%rdi        # 55a3d <module.31>
mov    -0x88(%rbp),%rax
mov    %rsi,-0x118(%rbp)
mov    %rax,%rsi
mov    %rdx,%r12
mov    %rbx,%rdx
mov    %r8,%rbx
mov    %r14,%rcx
callq  224b0 <Fax3PrematureEOF>
test   %ebx,%ebx
jne    2409a <Fax3Decode2D+0x121a>
mov    %r12,%rdx
jmpq   240a3 <Fax3Decode2D+0x1223>
mov    %r15,%r8
jmp    23d0a <Fax3Decode2D+0xe8a>
cmp    %r13d,%eax
jge    240da <Fax3Decode2D+0x125a>
lea    0x8(%rdi),%r8
mov    0x4(%rdi),%ecx
add    (%rdi),%ecx
add    %ecx,%eax
mov    %r8,%rdi
cmp    %eax,%r14d
jge    23d6b <Fax3Decode2D+0xeeb>
mov    %rax,%rcx
mov    -0x30(%rbp),%r12
jmpq   237e5 <Fax3Decode2D+0x965>
cmp    $0x9,%cl
je     23da1 <Fax3Decode2D+0xf21>
cmp    $0xb,%cl
jne    240f2 <Fax3Decode2D+0x1272>
movslq 0x4(%rdx,%rdi,8),%rcx
add    %ecx,%r15d
add    %ecx,%r14d
cmp    $0xb,%ebx
jg     24150 <Fax3Decode2D+0x12d0>
cmp    %r10,%r9
jae    24145 <Fax3Decode2D+0x12c5>
movzbl (%r9),%ecx
movzbl (%r8,%rcx,1),%edi
mov    %rbx,%rcx
shl    %cl,%edi
or     %edi,%r12d
lea    0x1(%r9),%rdi
lea    0x8(%rcx),%ebx
cmp    $0xb,%ebx
jle    241ae <Fax3Decode2D+0x132e>
mov    %rdi,%r9
jmpq   24150 <Fax3Decode2D+0x12d0>
pushq  -0x100(%rbp)
popq   -0x120(%rbp)
mov    -0xc0(%rbp),%rax
mov    0x90(%rax),%edx
lea    0x31c36(%rip),%rdi        # 55a3d <module.31>
mov    -0x88(%rbp),%rax
mov    %r14,%rcx
mov    %rsi,-0xa0(%rbp)
mov    %rax,%rsi
mov    %r9,%r13
callq  22340 <Fax3Unexpected>
mov    %r13,%r9
mov    -0x120(%rbp),%rdx
mov    -0xa0(%rbp),%rsi
mov    -0xd0(%rbp),%r13
pushq  -0x78(%rbp)
popq   -0x80(%rbp)
jmpq   22ff6 <Fax3Decode2D+0x176>
test   %ebx,%ebx
je     241bf <Fax3Decode2D+0x133f>
mov    %rax,%rbx
mov    %r12,%rcx
and    $0x1fff,%ecx
mov    %ecx,%edi
movzbl 0x1(%rdx,%rdi,8),%ecx
shr    %cl,%r12d
sub    %ecx,%ebx
movzbl (%rdx,%rdi,8),%ecx
cmp    $0x9,%cl
ja     23b10 <Fax3Decode2D+0xc90>
cmp    $0x8,%cl
jne    23df3 <Fax3Decode2D+0xf73>
add    0x4(%rdx,%rdi,8),%r15d
mov    -0x120(%rbp),%rax
mov    %r15d,(%rax)
add    0x4(%rdx,%rdi,8),%r14d
add    $0x4,%rax
mov    %rax,-0x100(%rbp)
mov    $0xc,%eax
xor    %r15d,%r15d
mov    -0xf8(%rbp),%rdx
jmpq   241e9 <Fax3Decode2D+0x1369>
cmp    %rbx,%r10
ja     24260 <Fax3Decode2D+0x13e0>
mov    %rbx,%r9
mov    %rax,%rbx
jmp    23e51 <Fax3Decode2D+0xfd1>
cmp    %r13d,%eax
jge    24282 <Fax3Decode2D+0x1402>
lea    0x8(%rdi),%r8
mov    0x4(%rdi),%ecx
add    (%rdi),%ecx
add    %ecx,%eax
mov    %r8,%rdi
cmp    %eax,%r14d
jge    23ec0 <Fax3Decode2D+0x1040>
mov    %rax,%rcx
mov    -0x38(%rbp),%r12
jmpq   2385b <Fax3Decode2D+0x9db>
cmp    %r13d,%eax
jge    2428e <Fax3Decode2D+0x140e>
lea    0x8(%rdi),%rbx
mov    0x4(%rdi),%ecx
add    (%rdi),%ecx
add    %ecx,%eax
mov    %rbx,%rdi
cmp    %eax,%r14d
jge    23ee8 <Fax3Decode2D+0x1068>
mov    -0x60(%rbp),%rbx
mov    -0x38(%rbp),%r12
jmpq   2389a <Fax3Decode2D+0xa1a>
mov    -0x60(%rbp),%rbx
mov    -0x40(%rbp),%r12
jmpq   234f6 <Fax3Decode2D+0x676>
test   %ebx,%ebx
je     2429b <Fax3Decode2D+0x141b>
mov    $0x1,%ebx
jmpq   23961 <Fax3Decode2D+0xae1>
add    0x4(%rax,%rdx,8),%r15d
mov    -0xb8(%rbp),%rcx
mov    %r15d,(%rcx)
mov    -0xc8(%rbp),%rcx
lea    0x8(%rcx),%rsi
add    0x4(%rax,%rdx,8),%r14d
cmp    %r13d,%r14d
jge    242a5 <Fax3Decode2D+0x1425>
test   %r15d,%r15d
je     242b4 <Fax3Decode2D+0x1434>
mov    $0xc,%edi
mov    -0xf8(%rbp),%rdx
mov    %r11,%r15
jmpq   233b8 <Fax3Decode2D+0x538>
test   %ebx,%ebx
je     23a09 <Fax3Decode2D+0xb89>
mov    %rsi,%rbx
mov    %r12,%rcx
and    $0x1fff,%ecx
mov    %ecx,%edx
movzbl 0x1(%rax,%rdx,8),%ecx
shr    %cl,%r12d
sub    %ecx,%ebx
movzbl (%rax,%rdx,8),%ecx
cmp    $0xa,%cl
jbe    23bdb <Fax3Decode2D+0xd5b>
cmp    $0xb,%cl
je     23bed <Fax3Decode2D+0xd6d>
cmp    $0xc,%cl
je     242d2 <Fax3Decode2D+0x1452>
mov    -0xc0(%rbp),%rax
mov    0x90(%rax),%edx
mov    %r9,%r13
lea    0x31a72(%rip),%rdi        # 55a3d <module.31>
mov    -0x88(%rbp),%rsi
mov    %r14,%rcx
callq  22340 <Fax3Unexpected>
mov    %r13,%r9
mov    -0xb8(%rbp),%rdx
mov    -0x50(%rbp),%rdi
xor    %r11d,%r11d
mov    -0xd0(%rbp),%r13
jmpq   235ca <Fax3Decode2D+0x74a>
cmp    %rdx,%r10
ja     242e4 <Fax3Decode2D+0x1464>
mov    %rdx,%r9
mov    %rsi,%rbx
jmpq   23f80 <Fax3Decode2D+0x1100>
test   %r14d,%r14d
jns    24013 <Fax3Decode2D+0x1193>
xor    %r14d,%r14d
mov    %rdx,%rax
sub    %rsi,%rax
and    $0x4,%rax
test   %rax,%rax
jle    2402c <Fax3Decode2D+0x11ac>
movl   $0x0,(%rdx)
add    $0x4,%rdx
mov    %r13,%rax
sub    %r14d,%eax
mov    %eax,(%rdx)
add    $0x4,%rdx
mov    %rcx,%r14
jmpq   23017 <Fax3Decode2D+0x197>
mov    %r13d,(%rdx)
movl   $0x0,0x4(%rdx)
add    $0x8,%rdx
mov    %rcx,%r14
jmpq   23017 <Fax3Decode2D+0x197>
mov    %rbx,%r15
mov    %rdx,%rbx
mov    0x90(%r15),%edx
mov    -0x88(%rbp),%r12
mov    %r12,%rsi
mov    %r14,%rcx
mov    %r13,%r8
lea    0x319c3(%rip),%rdi        # 55a3d <module.31>
callq  22420 <Fax3BadLength>
mov    %rbx,%rdx
mov    -0x78(%rbp),%r9
mov    -0xf8(%rbp),%rcx
mov    -0x58(%rbp),%rsi
mov    -0x50(%rbp),%rdi
jmpq   2430f <Fax3Decode2D+0x148f>
mov    %ebx,(%r12)
lea    0x4(%r12),%rdx
cmp    %r13d,%r14d
jne    24336 <Fax3Decode2D+0x14b6>
mov    -0xd0(%rbp),%r9
mov    -0x108(%rbp),%r12
mov    -0xf0(%rbp),%rbx
mov    -0x118(%rbp),%rsi
mov    -0x88(%rbp),%r14
mov    -0x50(%rbp),%rdi
xor    %eax,%eax
jmpq   2341d <Fax3Decode2D+0x59d>
mov    %rax,%rcx
mov    -0x30(%rbp),%r12
jmpq   237e5 <Fax3Decode2D+0x965>
pushq  -0x100(%rbp)
popq   -0x120(%rbp)
mov    -0xc0(%rbp),%rax
mov    0x90(%rax),%edx
lea    0x31937(%rip),%rdi        # 55a3d <module.31>
mov    -0x88(%rbp),%rax
mov    %r14,%rcx
mov    %rsi,-0xa0(%rbp)
mov    %rax,%rsi
mov    %r9,%r13
callq  22340 <Fax3Unexpected>
mov    %r13,%r9
mov    -0x120(%rbp),%rdx
mov    -0xa0(%rbp),%rsi
mov    -0xd0(%rbp),%r13
pushq  -0x78(%rbp)
popq   -0x80(%rbp)
jmpq   22ff6 <Fax3Decode2D+0x176>
test   %ebx,%ebx
je     24384 <Fax3Decode2D+0x1504>
mov    %rax,%rbx
mov    %r12,%rcx
and    $0xfff,%ecx
mov    %ecx,%edi
movzbl 0x1(%rdx,%rdi,8),%ecx
shr    %cl,%r12d
sub    %ecx,%ebx
movzbl (%rdx,%rdi,8),%ecx
cmp    $0x8,%cl
ja     23d93 <Fax3Decode2D+0xf13>
cmp    $0x7,%cl
jne    240f2 <Fax3Decode2D+0x1272>
add    0x4(%rdx,%rdi,8),%r15d
mov    -0x120(%rbp),%rax
mov    %r15d,(%rax)
add    0x4(%rdx,%rdi,8),%r14d
add    $0x4,%rax
mov    %rax,-0x100(%rbp)
mov    $0xd,%eax
xor    %r15d,%r15d
mov    -0x108(%rbp),%rdx
jmpq   243ae <Fax3Decode2D+0x152e>
cmp    %r10,%rdi
jb     24402 <Fax3Decode2D+0x1582>
mov    %rdi,%r9
mov    %rax,%rbx
jmp    24150 <Fax3Decode2D+0x12d0>
mov    %r15,%r8
mov    -0x120(%rbp),%rdx
xor    %ebx,%ebx
jmpq   23d0a <Fax3Decode2D+0xe8a>
cmp    $0x9,%cl
je     241de <Fax3Decode2D+0x135e>
cmp    $0xb,%cl
jne    24424 <Fax3Decode2D+0x15a4>
movslq 0x4(%rdx,%rdi,8),%rcx
add    %ecx,%r15d
add    %ecx,%r14d
cmp    $0xb,%ebx
jle    24435 <Fax3Decode2D+0x15b5>
mov    %r12,%rcx
and    $0xfff,%ecx
mov    %ecx,%edi
movzbl 0x1(%rdx,%rdi,8),%ecx
shr    %cl,%r12d
sub    %ecx,%ebx
movzbl (%rdx,%rdi,8),%ecx
cmp    $0x8,%cl
ja     241d0 <Fax3Decode2D+0x1350>
cmp    $0x7,%cl
jne    240e6 <Fax3Decode2D+0x1266>
add    0x4(%rdx,%rdi,8),%r15d
mov    -0x100(%rbp),%rax
mov    %r15d,(%rax)
add    0x4(%rdx,%rdi,8),%r14d
mov    -0x120(%rbp),%rax
lea    0x8(%rax),%rdx
cmp    %rdx,%rsi
jne    24467 <Fax3Decode2D+0x15e7>
mov    -0x40(%rbp),%rax
mov    -0x110(%rbp),%rdi
mov    $0x7,%ecx
xor    %r15d,%r15d
mov    -0x118(%rbp),%r11
jmpq   23356 <Fax3Decode2D+0x4d6>
movzbl (%rbx),%ebx
movzbl (%r8,%rbx,1),%ebx
mov    %rdi,%r11
mov    %rcx,%rdi
mov    %r11,%rcx
shl    %cl,%ebx
or     %ebx,%r12d
add    $0x2,%r9
lea    0x10(%rdi),%ebx
jmpq   23e51 <Fax3Decode2D+0xfd1>
mov    %rax,%rcx
mov    -0x38(%rbp),%r12
jmpq   2385b <Fax3Decode2D+0x9db>
mov    -0x60(%rbp),%rbx
mov    -0x38(%rbp),%r12
jmpq   2389a <Fax3Decode2D+0xa1a>
mov    %r15,%r8
xor    %ebx,%ebx
jmpq   23d0a <Fax3Decode2D+0xe8a>
mov    %rsi,%rdx
mov    -0x50(%rbp),%rdi
mov    %r11,%r15
jmpq   235ca <Fax3Decode2D+0x74a>
mov    (%rcx),%edx
test   %edx,%edx
je     24486 <Fax3Decode2D+0x1606>
mov    $0xc,%edi
mov    -0xf8(%rbp),%rdx
mov    %r11,%r15
jmpq   233b8 <Fax3Decode2D+0x538>
mov    -0xb8(%rbp),%rdx
mov    $0x1,%r11d
jmpq   235ca <Fax3Decode2D+0x74a>
movzbl (%rdx),%edx
movzbl (%r8,%rdx,1),%edx
xchg   %rcx,%rbx
shl    %cl,%edx
or     %edx,%r12d
add    $0x2,%r9
add    $0x10,%ebx
jmpq   23f80 <Fax3Decode2D+0x1100>
cmp    %rdx,%rsi
jae    24314 <Fax3Decode2D+0x1494>
add    $0xfffffffffffffffc,%rdx
movslq (%rdx),%rax
sub    %eax,%r14d
cmp    %r13d,%r14d
jg     24300 <Fax3Decode2D+0x1480>
cmp    %r13d,%r14d
jl     2449d <Fax3Decode2D+0x161d>
cmp    %r13d,%r14d
jg     244da <Fax3Decode2D+0x165a>
mov    %r12,%r14
mov    %rcx,%r12
xor    %eax,%eax
mov    %rax,%rbx
jmpq   2341d <Fax3Decode2D+0x59d>
mov    %rdx,%r12
mov    0x90(%r15),%edx
mov    -0x88(%rbp),%rbx
mov    %rbx,%rsi
mov    %r14,%rcx
mov    %r13,%r8
lea    0x316e6(%rip),%rdi        # 55a3d <module.31>
callq  22420 <Fax3BadLength>
mov    %r12,%rdx
mov    -0xd0(%rbp),%r9
mov    -0x108(%rbp),%rcx
mov    -0xf0(%rbp),%r8
mov    -0x118(%rbp),%rsi
mov    -0x50(%rbp),%rdi
jmpq   24507 <Fax3Decode2D+0x1687>
mov    %r15,%r8
mov    -0x120(%rbp),%rdx
xor    %ebx,%ebx
jmpq   23d0a <Fax3Decode2D+0xe8a>
cmp    $0xa,%cl
je     243a3 <Fax3Decode2D+0x1523>
cmp    $0xb,%cl
jne    2452e <Fax3Decode2D+0x16ae>
movslq 0x4(%rdx,%rdi,8),%rcx
add    %ecx,%r15d
add    %ecx,%r14d
cmp    $0xc,%ebx
jle    2453f <Fax3Decode2D+0x16bf>
mov    %r12,%rcx
and    $0x1fff,%ecx
mov    %ecx,%edi
movzbl 0x1(%rdx,%rdi,8),%ecx
shr    %cl,%r12d
sub    %ecx,%ebx
movzbl (%rdx,%rdi,8),%ecx
cmp    $0x9,%cl
ja     24395 <Fax3Decode2D+0x1515>
cmp    $0x8,%cl
jne    23de7 <Fax3Decode2D+0xf67>
add    0x4(%rdx,%rdi,8),%r15d
mov    -0x100(%rbp),%rax
mov    %r15d,(%rax)
add    0x4(%rdx,%rdi,8),%r14d
mov    -0x120(%rbp),%rax
lea    0x8(%rax),%rdx
jmpq   24238 <Fax3Decode2D+0x13b8>
movzbl (%rdi),%edi
movzbl (%r8,%rdi,1),%edi
mov    %rbx,%r11
mov    %rcx,%rbx
mov    %r11,%rcx
shl    %cl,%edi
or     %edi,%r12d
add    $0x2,%r9
add    $0x10,%ebx
jmpq   24150 <Fax3Decode2D+0x12d0>
pushq  -0x100(%rbp)
popq   -0x120(%rbp)
jmpq   240f2 <Fax3Decode2D+0x1272>
cmp    %r9,%r10
jbe    24574 <Fax3Decode2D+0x16f4>
movzbl (%r9),%ecx
movzbl (%r8,%rcx,1),%edi
mov    %rbx,%rcx
shl    %cl,%edi
or     %edi,%r12d
lea    0x1(%r9),%rdi
lea    0x8(%rcx),%ebx
cmp    $0xb,%ebx
jle    24584 <Fax3Decode2D+0x1704>
mov    %rdi,%r9
jmpq   241f2 <Fax3Decode2D+0x1372>
mov    %rbx,-0x58(%rbp)
mov    %r9,-0xe0(%rbp)
mov    %r12,-0x30(%rbp)
mov    -0x40(%rbp),%rax
mov    -0x110(%rbp),%rdi
jmpq   245af <Fax3Decode2D+0x172f>
mov    %rcx,%rsi
mov    $0xc,%edi
mov    -0xf8(%rbp),%rdx
mov    %r11,%r15
jmpq   233b8 <Fax3Decode2D+0x538>
test   %r14d,%r14d
jns    244a5 <Fax3Decode2D+0x1625>
xor    %r14d,%r14d
mov    %rdx,%rax
sub    %rsi,%rax
and    $0x4,%rax
test   %rax,%rax
jle    244be <Fax3Decode2D+0x163e>
movl   $0x0,(%rdx)
add    $0x4,%rdx
mov    %r13,%rax
sub    %r14d,%eax
mov    %eax,(%rdx)
add    $0x4,%rdx
mov    %r12,%r14
mov    %rcx,%r12
xor    %eax,%eax
mov    %rax,%rbx
jmpq   2341d <Fax3Decode2D+0x59d>
mov    %r13d,(%rdx)
movl   $0x0,0x4(%rdx)
add    $0x8,%rdx
mov    %r12,%r14
mov    %rcx,%r12
xor    %eax,%eax
mov    %rax,%rbx
jmpq   2341d <Fax3Decode2D+0x59d>
cmp    %rdx,%rsi
jae    2450c <Fax3Decode2D+0x168c>
add    $0xfffffffffffffffc,%rdx
movslq (%rdx),%rax
sub    %eax,%r14d
cmp    %r13d,%r14d
jg     244f8 <Fax3Decode2D+0x1678>
cmp    %r13d,%r14d
jl     245d7 <Fax3Decode2D+0x1757>
cmp    %r13d,%r14d
jg     24614 <Fax3Decode2D+0x1794>
mov    %rcx,%r12
mov    %rbx,%r14
mov    %r8,%rbx
xor    %eax,%eax
jmpq   2341d <Fax3Decode2D+0x59d>
pushq  -0x100(%rbp)
popq   -0x120(%rbp)
jmpq   23df3 <Fax3Decode2D+0xf73>
cmp    %r10,%r9
jae    24632 <Fax3Decode2D+0x17b2>
movzbl (%r9),%ecx
movzbl (%r8,%rcx,1),%edi
mov    %rbx,%rcx
shl    %cl,%edi
or     %edi,%r12d
lea    0x1(%r9),%rbx
lea    0x8(%rcx),%edi
cmp    $0xc,%edi
jle    2463e <Fax3Decode2D+0x17be>
mov    %rbx,%r9
mov    %rdi,%rbx
jmpq   243b7 <Fax3Decode2D+0x1537>
test   %ebx,%ebx
je     2464e <Fax3Decode2D+0x17ce>
mov    %rax,%rbx
jmpq   241f2 <Fax3Decode2D+0x1372>
cmp    %rdi,%r10
ja     2465f <Fax3Decode2D+0x17df>
mov    %rdi,%r9
mov    %rax,%rbx
jmpq   241f2 <Fax3Decode2D+0x1372>
cmp    %r13d,%eax
jge    24681 <Fax3Decode2D+0x1801>
lea    0x8(%rdi),%rbx
mov    0x4(%rdi),%ecx
add    (%rdi),%ecx
add    %ecx,%eax
mov    %rbx,%rdi
cmp    %r14d,%eax
jle    24598 <Fax3Decode2D+0x1718>
mov    -0x30(%rbp),%r12
mov    -0xe0(%rbp),%r9
mov    -0x58(%rbp),%rbx
mov    $0x7,%ecx
xor    %r15d,%r15d
mov    -0x118(%rbp),%r11
jmpq   23356 <Fax3Decode2D+0x4d6>
test   %r14d,%r14d
jns    245df <Fax3Decode2D+0x175f>
xor    %r14d,%r14d
mov    %rdx,%rax
sub    %rsi,%rax
and    $0x4,%rax
test   %rax,%rax
jle    245f8 <Fax3Decode2D+0x1778>
movl   $0x0,(%rdx)
add    $0x4,%rdx
mov    %r13,%rax
sub    %r14d,%eax
mov    %eax,(%rdx)
add    $0x4,%rdx
mov    %rcx,%r12
mov    %rbx,%r14
mov    %r8,%rbx
xor    %eax,%eax
jmpq   2341d <Fax3Decode2D+0x59d>
mov    %r13d,(%rdx)
movl   $0x0,0x4(%rdx)
add    $0x8,%rdx
mov    %rcx,%r12
mov    %rbx,%r14
mov    %r8,%rbx
xor    %eax,%eax
jmpq   2341d <Fax3Decode2D+0x59d>
test   %ebx,%ebx
je     246a4 <Fax3Decode2D+0x1824>
mov    %rax,%rbx
jmpq   243b7 <Fax3Decode2D+0x1537>
cmp    %r10,%rbx
jb     246b5 <Fax3Decode2D+0x1835>
mov    %rbx,%r9
mov    %rax,%rbx
jmpq   243b7 <Fax3Decode2D+0x1537>
mov    %r15,%r8
mov    -0x100(%rbp),%rdx
xor    %ebx,%ebx
jmpq   23d0a <Fax3Decode2D+0xe8a>
movzbl (%rdi),%edi
movzbl (%r8,%rdi,1),%edi
mov    %rbx,%r11
mov    %rcx,%rbx
mov    %r11,%rcx
shl    %cl,%edi
or     %edi,%r12d
add    $0x2,%r9
add    $0x10,%ebx
jmpq   241f2 <Fax3Decode2D+0x1372>
mov    -0x30(%rbp),%r12
mov    -0xe0(%rbp),%r9
mov    -0x58(%rbp),%rbx
mov    $0x7,%ecx
xor    %r15d,%r15d
mov    -0x118(%rbp),%r11
jmpq   23356 <Fax3Decode2D+0x4d6>
mov    %r15,%r8
mov    -0x100(%rbp),%rdx
xor    %ebx,%ebx
jmpq   23d0a <Fax3Decode2D+0xe8a>
movzbl (%rbx),%ebx
movzbl (%r8,%rbx,1),%ebx
mov    %rdi,%r11
mov    %rcx,%rdi
mov    %r11,%rcx
shl    %cl,%ebx
or     %ebx,%r12d
add    $0x2,%r9
lea    0x10(%rdi),%ebx
jmpq   243b7 <Fax3Decode2D+0x1537>
nopw   0x0(%rax,%rax,1)

00000000000246e0 <Fax3FixupTags>:
push   %rbp
mov    %rsp,%rbp
mov    $0x1,%eax
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

00000000000246f0 <Fax3SetupState>:
push   %rbp
mov    %rsp,%rbp
sub    $0x40,%rsp
mov    0x350(%rdi),%rcx
lea    0x31344(%rip),%rsi        # 55a4a <module.32>
xor    %eax,%eax
mov    %rax,-0x30(%rbp)
movzwl 0x74(%rdi),%eax
cmp    $0x1,%ax
jne    24741 <Fax3SetupState+0x51>
mov    0x10(%rdi),%eax
and    $0x400,%eax
test   %eax,%eax
jne    2475a <Fax3SetupState+0x6a>
mov    %rdi,%rax
mov    %r14,-0x10(%rbp)
mov    %r15,-0x18(%rbp)
mov    %rcx,%r14
mov    %rdi,%r15
mov    %rax,%rdi
callq  8410 <TIFFScanlineSize@plt>
mov    0x58(%r15),%ecx
jmp    24777 <Fax3SetupState+0x87>
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
lea    0x31308(%rip),%rdx        # 55a59 <module.32+0xf>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
mov    %rdi,%rax
mov    %r14,-0x10(%rbp)
mov    %r15,-0x18(%rbp)
mov    %rcx,%r14
mov    %rdi,%r15
mov    %rax,%rdi
callq  80d0 <TIFFTileRowSize@plt>
mov    0x64(%r15),%ecx
mov    %rax,0x8(%r14)
mov    %ecx,0x10(%r14)
mov    $0x1,%r9d
mov    0x20(%r14),%edx
and    $0x1,%edx
test   %edx,%edx
je     247a1 <Fax3SetupState+0xb1>
movq   $0x0,0x60(%r14)
cmp    $0xffffffdf,%ecx
jbe    247b1 <Fax3SetupState+0xc1>
xor    %edx,%edx
jmp    247b7 <Fax3SetupState+0xc7>
movzwl 0x78(%r15),%edx
cmp    $0x4,%dx
je     24790 <Fax3SetupState+0xa0>
xor    %r9d,%r9d
jmp    24790 <Fax3SetupState+0xa0>
lea    0x1f(%rcx),%edx
shr    $0x5,%edx
mov    %rdx,%r8
shl    $0x5,%r8d
test   %r9d,%r9d
jg     247e3 <Fax3SetupState+0xf3>
test   %r8d,%r8d
je     247f5 <Fax3SetupState+0x105>
lea    (%r8,%r8,1),%esi
mov    %rsi,-0x28(%rbp)
mov    %r8,%r10
and    $0x7fffffff,%r10d
cmp    %r10d,%r8d
je     24819 <Fax3SetupState+0x129>
xor    %edx,%edx
jmp    2481c <Fax3SetupState+0x12c>
shl    $0x6,%edx
mov    %rdx,%rsi
shr    %esi
cmp    %esi,%r8d
je     24865 <Fax3SetupState+0x175>
xor    %r8d,%r8d
jmp    247c3 <Fax3SetupState+0xd3>
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
mov    (%r15),%rsi
lea    0x31287(%rip),%rdx        # 55a8f <module.32+0x45>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
leaveq 
retq   
mov    %rsi,%rdx
test   %edx,%edx
je     247f5 <Fax3SetupState+0x105>
cmp    %r10d,%r8d
je     24827 <Fax3SetupState+0x137>
xor    %esi,%esi
mov    %esi,%esi
mov    $0x4,%edx
lea    0x31285(%rip),%rcx        # 55aba <module.32+0x70>
mov    %r15,%rdi
mov    %r10,-0x40(%rbp)
mov    %r9,-0x38(%rbp)
mov    %r15,-0x20(%rbp)
mov    %rax,-0x8(%rbp)
mov    %r8,%r15
callq  8750 <_TIFFCheckMalloc@plt>
mov    %rax,0x60(%r14)
test   %rax,%rax
jne    2486d <Fax3SetupState+0x17d>
xor    %eax,%eax
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
leaveq 
retq   
mov    %rdx,%r8
jmpq   247c3 <Fax3SetupState+0xd3>
mov    -0x40(%rbp),%rcx
cmp    %ecx,%r15d
jne    2487c <Fax3SetupState+0x18c>
pushq  -0x28(%rbp)
popq   -0x30(%rbp)
mov    -0x30(%rbp),%rcx
mov    %ecx,%edx
shl    $0x2,%rdx
mov    %rax,%rdi
xor    %esi,%esi
callq  8550 <memset@plt>
mov    -0x38(%rbp),%rdx
test   %edx,%edx
mov    0x60(%r14),%rcx
mov    %rcx,0x70(%r14)
jg     248aa <Fax3SetupState+0x1ba>
movq   $0x0,0x68(%r14)
jmp    248b5 <Fax3SetupState+0x1c5>
mov    %r15d,%eax
lea    (%rcx,%rax,4),%rax
mov    %rax,0x68(%r14)
mov    -0x20(%rbp),%r15
movzwl 0x78(%r15),%eax
cmp    $0x3,%ax
je     248e9 <Fax3SetupState+0x1f9>
test   %edx,%edx
jg     24912 <Fax3SetupState+0x222>
mov    0x350(%r15),%rax
movq   $0x0,0x80(%rax)
mov    $0x1,%eax
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
leaveq 
retq   
mov    0x20(%r14),%eax
and    $0x1,%eax
test   %eax,%eax
je     248c4 <Fax3SetupState+0x1d4>
lea    -0x1a7b(%rip),%rax        # 22e80 <Fax3Decode2D>
mov    %rax,0x2f8(%r15)
mov    %rax,0x308(%r15)
mov    %rax,0x318(%r15)
jmp    248c4 <Fax3SetupState+0x1d4>
mov    0x350(%r15),%r14
mov    -0x8(%rbp),%rdi
callq  8440 <_TIFFmalloc@plt>
mov    %rax,0x80(%r14)
test   %rax,%rax
je     2493d <Fax3SetupState+0x24d>
mov    $0x1,%eax
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
lea    0x31186(%rip),%rdx        # 55ad3 <module.32+0x89>
lea    0x310f6(%rip),%rsi        # 55a4a <module.32>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)

0000000000024970 <Fax3PutBits>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    %rbx,-0x10(%rbp)
mov    %r12,-0x18(%rbp)
mov    %r13,-0x20(%rbp)
mov    %r14,-0x28(%rbp)
mov    %r15,-0x30(%rbp)
mov    0x350(%rdi),%rax
mov    %rax,-0x8(%rbp)
mov    0x4c(%rax),%r14d
movslq 0x48(%rax),%r13
mov    %rdx,%rcx
mov    %rsi,%rbx
mov    %rdi,%r12
xor    %r8d,%r8d
mov    $0x8,%eax
jmp    24a15 <Fax3PutBits+0xa5>
mov    0x370(%r12),%rdx
cmp    0x390(%r12),%rdx
jg     249da <Fax3PutBits+0x6a>
mov    %rcx,%r15
mov    %r12,%rdi
callq  86e0 <TIFFFlushData1@plt>
mov    %r15,%rcx
mov    $0x8,%eax
xor    %r8d,%r8d
mov    0x388(%r12),%rsi
lea    0x1(%rsi),%rdx
mov    %rdx,0x388(%r12)
sub    %r14d,%ecx
mov    %rbx,%rdx
shr    %cl,%edx
or     %r13b,%dl
mov    %dl,(%rsi)
mov    0x390(%r12),%rdx
add    $0x1,%rdx
mov    %rdx,0x390(%r12)
mov    %rax,%r14
mov    %r8,%r13
cmp    %ecx,%r14d
jb     249b2 <Fax3PutBits+0x42>
cmp    $0x8,%ecx
jbe    24a3e <Fax3PutBits+0xce>
lea    0x310d3(%rip),%rdi        # 55af9 <module.32+0xaf>
lea    0x30ebf(%rip),%rsi        # 558ec <_fillmasks.13+0x14>
mov    $0x27f,%edx
lea    0x310cb(%rip),%rcx        # 55b04 <module.32+0xba>
callq  8490 <__assert_fail@plt>
lea    0x30bc3(%rip),%rsi        # 55608 <_msbmask>
mov    %ecx,%edx
and    (%rsi,%rdx,4),%ebx
mov    %rcx,%rdx
mov    %r14,%rcx
sub    %edx,%ecx
shl    %cl,%ebx
or     %r13d,%ebx
cmp    %edx,%r14d
jne    24ab8 <Fax3PutBits+0x148>
mov    0x370(%r12),%rcx
cmp    0x390(%r12),%rcx
jle    24a79 <Fax3PutBits+0x109>
mov    %rax,%rcx
mov    %rbx,%r13
mov    %r8,%rbx
jmp    24a8d <Fax3PutBits+0x11d>
mov    %rbx,%r13
mov    %r8,%rbx
mov    %rax,%r14
mov    %r12,%rdi
callq  86e0 <TIFFFlushData1@plt>
mov    %r14,%rcx
mov    0x388(%r12),%rdx
lea    0x1(%rdx),%rax
mov    %rax,0x388(%r12)
mov    %r13b,(%rdx)
mov    0x390(%r12),%rax
add    $0x1,%rax
mov    %rax,0x390(%r12)
mov    -0x8(%rbp),%rax
mov    %ebx,0x48(%rax)
mov    %ecx,0x4c(%rax)
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
mov    -0x10(%rbp),%rbx
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

0000000000024ae0 <putspan>:
push   %rbp
mov    %rsp,%rbp
sub    $0x50,%rsp
mov    %r15,-0x30(%rbp)
mov    %r14,-0x28(%rbp)
mov    %rdx,-0x48(%rbp)
mov    %rbx,-0x10(%rbp)
mov    %r12,-0x18(%rbp)
mov    %r13,-0x20(%rbp)
mov    0x350(%rdi),%rax
mov    %rax,-0x8(%rbp)
mov    0x4c(%rax),%r14d
movslq 0x48(%rax),%r12
mov    %rdi,%rbx
xor    %r8d,%r8d
mov    $0x8,%eax
jmp    24b83 <putspan+0xa3>
mov    0x370(%rbx),%rcx
cmp    0x390(%rbx),%rcx
jg     24b44 <putspan+0x64>
mov    %rax,%r13
mov    %r8,%r14
mov    %rbx,%rdi
callq  86e0 <TIFFFlushData1@plt>
mov    %r13,%rax
mov    %r14,%r8
mov    0x388(%rbx),%rdx
lea    0x1(%rdx),%rcx
mov    %rcx,0x388(%rbx)
mov    %r12b,(%rdx)
mov    0x390(%rbx),%rcx
add    $0x1,%rcx
mov    %rcx,0x390(%rbx)
mov    %rax,%r14
mov    %r8,%r12
mov    -0x48(%rbp),%rdx
movswq 0x26e(%rdx),%rcx
mov    -0x40(%rbp),%rsi
sub    %ecx,%esi
cmp    $0xa3f,%esi
jg     24bd7 <putspan+0xf7>
cmp    $0x3f,%esi
jle    24c54 <putspan+0x174>
mov    %rsi,%rcx
sar    $0x6,%ecx
add    $0x3f,%ecx
movslq %ecx,%rcx
lea    (%rcx,%rcx,2),%r9
movswq 0x4(%rdx,%r9,2),%rdi
mov    %rsi,%rcx
and    $0xffffffc0,%ecx
cmp    %ecx,%edi
je     24c6c <putspan+0x18c>
lea    0x30f59(%rip),%rdi        # 55b18 <module.32+0xce>
mov    $0x2af,%edx
lea    0x30f45(%rip),%rcx        # 55b10 <module.32+0xc6>
lea    0x30d1a(%rip),%rsi        # 558ec <_fillmasks.13+0x14>
callq  8490 <__assert_fail@plt>
movzwl 0x26c(%rdx),%r13d
movzwl 0x26a(%rdx),%ecx
mov    %rsi,-0x40(%rbp)
jmpq   24ce2 <putspan+0x202>
mov    0x370(%rbx),%rcx
cmp    0x390(%rbx),%rcx
jg     24c13 <putspan+0x133>
mov    %r8,%r12
mov    %rax,%r14
mov    %rbx,%rdi
callq  86e0 <TIFFFlushData1@plt>
mov    %r14,%rax
mov    %r12,%r8
mov    0x388(%rbx),%rdx
lea    0x1(%rdx),%rcx
mov    %rcx,0x388(%rbx)
mov    %r13b,(%rdx)
mov    0x390(%rbx),%rcx
add    $0x1,%rcx
mov    %rcx,0x390(%rbx)
mov    %rax,%r14
mov    %r8,%r12
mov    -0x40(%rbp),%rcx
mov    -0x48(%rbp),%rdx
movswq 0x4(%rdx,%rcx,2),%rcx
mov    -0x38(%rbp),%rsi
sub    %ecx,%esi
movslq %esi,%rcx
lea    (%rcx,%rcx,2),%rcx
lea    (%rdx,%rcx,2),%rcx
movzwl 0x2(%rcx),%r13d
movzwl (%rcx),%ecx
jmpq   24d79 <putspan+0x299>
movzwl 0x2(%rdx,%r9,2),%r13d
movzwl (%rdx,%r9,2),%ecx
mov    %rsi,-0x38(%rbp)
mov    %r9,-0x40(%rbp)
jmpq   24e04 <putspan+0x324>
mov    0x370(%rbx),%rdx
cmp    0x390(%rbx),%rdx
jg     24caa <putspan+0x1ca>
mov    %rcx,%r15
mov    %rbx,%rdi
callq  86e0 <TIFFFlushData1@plt>
mov    %r15,%rcx
mov    $0x8,%eax
xor    %r8d,%r8d
mov    0x388(%rbx),%rdx
lea    0x1(%rdx),%rsi
mov    %rsi,0x388(%rbx)
sub    %r14d,%ecx
mov    %r13,%rsi
shr    %cl,%esi
or     %esi,%r12d
mov    %r12b,(%rdx)
mov    0x390(%rbx),%rdx
add    $0x1,%rdx
mov    %rdx,0x390(%rbx)
mov    %rax,%r14
mov    %r8,%r12
cmp    %ecx,%r14d
jb     24c84 <putspan+0x1a4>
cmp    $0x8,%ecx
ja     24e2d <putspan+0x34d>
mov    %ecx,%edx
lea    0x3090f(%rip),%rsi        # 55608 <_msbmask>
and    (%rsi,%rdx,4),%r13d
mov    %rcx,%rdx
mov    %r14,%rcx
sub    %edx,%ecx
shl    %cl,%r13d
or     %r13d,%r12d
cmp    %edx,%r14d
je     24b20 <putspan+0x40>
mov    %rcx,%r14
jmpq   24b71 <putspan+0x91>
mov    0x370(%rbx),%rdx
cmp    0x390(%rbx),%rdx
jg     24d42 <putspan+0x262>
mov    %rcx,%r15
mov    %rbx,%rdi
callq  86e0 <TIFFFlushData1@plt>
mov    %r15,%rcx
mov    $0x8,%eax
xor    %r8d,%r8d
mov    0x388(%rbx),%rsi
lea    0x1(%rsi),%rdx
mov    %rdx,0x388(%rbx)
sub    %r14d,%ecx
mov    %r13,%rdx
shr    %cl,%edx
or     %r12b,%dl
mov    %dl,(%rsi)
mov    0x390(%rbx),%rdx
add    $0x1,%rdx
mov    %rdx,0x390(%rbx)
mov    %rax,%r14
mov    %r8,%r12
cmp    %ecx,%r14d
jb     24d1c <putspan+0x23c>
cmp    $0x8,%ecx
jbe    24e4c <putspan+0x36c>
mov    $0x2bd,%edx
lea    0x30d7d(%rip),%rcx        # 55b10 <module.32+0xc6>
lea    0x30b52(%rip),%rsi        # 558ec <_fillmasks.13+0x14>
lea    0x30d58(%rip),%rdi        # 55af9 <module.32+0xaf>
callq  8490 <__assert_fail@plt>
mov    0x370(%rbx),%rdx
cmp    0x390(%rbx),%rdx
jg     24dcc <putspan+0x2ec>
mov    %rcx,%r15
mov    %rbx,%rdi
callq  86e0 <TIFFFlushData1@plt>
mov    %r15,%rcx
mov    $0x8,%eax
xor    %r8d,%r8d
mov    0x388(%rbx),%rdx
lea    0x1(%rdx),%rsi
mov    %rsi,0x388(%rbx)
sub    %r14d,%ecx
mov    %r13,%rsi
shr    %cl,%esi
or     %r12b,%sil
mov    %sil,(%rdx)
mov    0x390(%rbx),%rdx
add    $0x1,%rdx
mov    %rdx,0x390(%rbx)
mov    %rax,%r14
mov    %r8,%r12
cmp    %ecx,%r14d
jb     24da6 <putspan+0x2c6>
cmp    $0x8,%ecx
jbe    24e8b <putspan+0x3ab>
mov    $0x2b5,%edx
lea    0x30cf6(%rip),%rcx        # 55b10 <module.32+0xc6>
lea    0x30acb(%rip),%rsi        # 558ec <_fillmasks.13+0x14>
lea    0x30cd1(%rip),%rdi        # 55af9 <module.32+0xaf>
callq  8490 <__assert_fail@plt>
mov    $0x2aa,%edx
lea    0x30cd7(%rip),%rcx        # 55b10 <module.32+0xc6>
lea    0x30aac(%rip),%rsi        # 558ec <_fillmasks.13+0x14>
lea    0x30cb2(%rip),%rdi        # 55af9 <module.32+0xaf>
callq  8490 <__assert_fail@plt>
mov    %ecx,%edx
lea    0x307b3(%rip),%rsi        # 55608 <_msbmask>
and    (%rsi,%rdx,4),%r13d
mov    %rcx,%rdx
mov    %r14,%rcx
sub    %edx,%ecx
shl    %cl,%r13d
or     %r12d,%r13d
cmp    %edx,%r14d
jne    24ef5 <putspan+0x415>
mov    0x370(%rbx),%rcx
cmp    0x390(%rbx),%rcx
jle    24eba <putspan+0x3da>
mov    %rax,%rcx
mov    %r13,%r12
mov    %r8,%r13
jmp    24ece <putspan+0x3ee>
mov    %ecx,%esi
lea    0x30774(%rip),%rdx        # 55608 <_msbmask>
and    (%rdx,%rsi,4),%r13d
mov    %rcx,%rdx
mov    %r14,%rcx
sub    %edx,%ecx
shl    %cl,%r13d
or     %r12d,%r13d
cmp    %edx,%r14d
je     24bef <putspan+0x10f>
mov    %r13,%r12
mov    %rcx,%r14
jmpq   24c40 <putspan+0x160>
mov    %r13,%r12
mov    %r8,%r13
mov    %rax,%r14
mov    %rbx,%rdi
callq  86e0 <TIFFFlushData1@plt>
mov    %r14,%rcx
mov    0x388(%rbx),%rdx
lea    0x1(%rdx),%rax
mov    %rax,0x388(%rbx)
mov    %r12b,(%rdx)
mov    0x390(%rbx),%rax
add    $0x1,%rax
mov    %rax,0x390(%rbx)
mov    -0x8(%rbp),%rax
mov    %r13d,0x48(%rax)
mov    %ecx,0x4c(%rax)
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
mov    -0x10(%rbp),%rbx
mov    -0x28(%rbp),%r14
mov    -0x30(%rbp),%r15
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)

0000000000024f20 <Fax3PutEOL>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    0x350(%rdi),%rsi
mov    %rsi,-0x30(%rbp)
movslq 0x4c(%rsi),%r14
movslq 0x48(%rsi),%r13
xor    %eax,%eax
mov    $0x8,%edx
mov    0x20(%rsi),%ecx
and    $0x4,%ecx
test   %ecx,%ecx
jne    24f7d <Fax3PutEOL+0x5d>
mov    %rdi,%rbx
mov    0x20(%rsi),%ecx
and    $0x1,%ecx
test   %ecx,%ecx
jne    24f8c <Fax3PutEOL+0x6c>
mov    $0x1,%r12d
mov    $0xc,%ecx
jmpq   25001 <Fax3PutEOL+0xe1>
cmp    $0x4,%r14d
jne    2502a <Fax3PutEOL+0x10a>
mov    %rdi,%rbx
jmp    24f63 <Fax3PutEOL+0x43>
mov    $0xd,%ecx
mov    0x78(%rsi),%esi
test   %esi,%esi
je     25036 <Fax3PutEOL+0x116>
mov    $0x2,%r12d
jmp    25001 <Fax3PutEOL+0xe1>
mov    0x370(%rbx),%rsi
cmp    0x390(%rbx),%rsi
jg     24fc9 <Fax3PutEOL+0xa9>
mov    %rcx,%r15
mov    %rbx,%rdi
callq  86e0 <TIFFFlushData1@plt>
mov    %r15,%rcx
xor    %eax,%eax
mov    $0x8,%edx
mov    0x388(%rbx),%rdi
lea    0x1(%rdi),%rsi
mov    %rsi,0x388(%rbx)
sub    %r14d,%ecx
mov    %r12,%rsi
shr    %cl,%esi
or     %r13b,%sil
mov    %sil,(%rdi)
mov    0x390(%rbx),%rsi
add    $0x1,%rsi
mov    %rsi,0x390(%rbx)
mov    %rax,%r13
mov    %rdx,%r14
cmp    %ecx,%r14d
jb     24fa4 <Fax3PutEOL+0x84>
cmp    $0x8,%ecx
jbe    2503e <Fax3PutEOL+0x11e>
lea    0x30ae7(%rip),%rdi        # 55af9 <module.32+0xaf>
mov    $0x2e7,%edx
lea    0x308ce(%rip),%rsi        # 558ec <_fillmasks.13+0x14>
lea    0x30b18(%rip),%rcx        # 55b3d <module.32+0xf3>
callq  8490 <__assert_fail@plt>
cmp    $0x3,%r14d
jle    25079 <Fax3PutEOL+0x159>
lea    -0x4(%r14),%r12d
jmp    2507d <Fax3PutEOL+0x15d>
mov    $0x3,%r12d
jmp    25001 <Fax3PutEOL+0xe1>
lea    0x305c3(%rip),%rdi        # 55608 <_msbmask>
mov    %ecx,%esi
and    (%rdi,%rsi,4),%r12d
mov    %rcx,%rsi
mov    %r14,%rcx
sub    %esi,%ecx
shl    %cl,%r12d
or     %r13d,%r12d
cmp    %esi,%r14d
jne    250c0 <Fax3PutEOL+0x1a0>
mov    0x370(%rbx),%rcx
cmp    0x390(%rbx),%rcx
jle    25085 <Fax3PutEOL+0x165>
mov    %rdx,%rcx
mov    %r12,%r13
mov    %rax,%r12
jmp    25099 <Fax3PutEOL+0x179>
lea    0x4(%r14),%r12d
mov    %rdi,%rbx
jmpq   25134 <Fax3PutEOL+0x214>
mov    %r12,%r13
mov    %rax,%r12
mov    %rdx,%r14
mov    %rbx,%rdi
callq  86e0 <TIFFFlushData1@plt>
mov    %r14,%rcx
mov    0x388(%rbx),%rdx
lea    0x1(%rdx),%rax
mov    %rax,0x388(%rbx)
mov    %r13b,(%rdx)
mov    0x390(%rbx),%rax
add    $0x1,%rax
mov    %rax,0x390(%rbx)
mov    -0x30(%rbp),%rax
mov    %r12d,0x48(%rax)
mov    %ecx,0x4c(%rax)
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
mov    0x370(%rbx),%rcx
cmp    0x390(%rbx),%rcx
jg     25104 <Fax3PutEOL+0x1e4>
mov    %rax,%r15
mov    %rbx,%rdi
callq  86e0 <TIFFFlushData1@plt>
mov    %r15,%rax
mov    $0x8,%edx
mov    0x388(%rbx),%rsi
lea    0x1(%rsi),%rcx
mov    %rcx,0x388(%rbx)
mov    %r13b,(%rsi)
sub    %r14d,%r12d
mov    0x390(%rbx),%rcx
add    $0x1,%rcx
mov    %rcx,0x390(%rbx)
mov    %rax,%r13
mov    %rdx,%r14
cmp    %r12d,%r14d
jb     250e1 <Fax3PutEOL+0x1c1>
cmp    $0x8,%r12d
jbe    2515e <Fax3PutEOL+0x23e>
lea    0x309ed(%rip),%rdi        # 55b33 <module.32+0xe9>
mov    $0x2de,%edx
lea    0x3079a(%rip),%rsi        # 558ec <_fillmasks.13+0x14>
lea    0x309e4(%rip),%rcx        # 55b3d <module.32+0xf3>
callq  8490 <__assert_fail@plt>
cmp    %r12d,%r14d
je     2516f <Fax3PutEOL+0x24f>
sub    %r12d,%r14d
mov    -0x30(%rbp),%rsi
jmpq   24f63 <Fax3PutEOL+0x43>
mov    0x370(%rbx),%rcx
cmp    0x390(%rbx),%rcx
jg     25193 <Fax3PutEOL+0x273>
mov    %rdx,%r12
mov    %rax,%r14
mov    %rbx,%rdi
callq  86e0 <TIFFFlushData1@plt>
mov    %r14,%rax
mov    %r12,%rdx
mov    0x388(%rbx),%rsi
lea    0x1(%rsi),%rcx
mov    %rcx,0x388(%rbx)
mov    %r13b,(%rsi)
mov    0x390(%rbx),%rcx
add    $0x1,%rcx
mov    %rcx,0x390(%rbx)
mov    -0x30(%rbp),%rsi
mov    %rax,%r13
mov    %rdx,%r14
jmpq   24f63 <Fax3PutEOL+0x43>
nopl   0x0(%rax)

00000000000251d0 <Fax3PreEncode>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    0x350(%rdi),%rcx
test   %rcx,%rcx
jne    25203 <Fax3PreEncode+0x33>
lea    0x3071e(%rip),%rdi        # 55909 <_fillmasks.13+0x31>
lea    0x306fa(%rip),%rsi        # 558ec <_fillmasks.13+0x14>
mov    $0x2f6,%edx
lea    0x3094a(%rip),%rcx        # 55b48 <module.32+0xfe>
callq  8490 <__assert_fail@plt>
movl   $0x8,0x4c(%rcx)
movl   $0x0,0x48(%rcx)
movl   $0x0,0x78(%rcx)
mov    0x80(%rcx),%rax
test   %rax,%rax
je     2524e <Fax3PreEncode+0x7e>
xor    %esi,%esi
mov    0x8(%rcx),%rdx
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rdi,%r14
mov    %rax,%rdi
mov    %rcx,%r15
callq  88e0 <_TIFFmemset@plt>
mov    %r15,%rcx
mov    %r14,%rdi
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
mov    $0x1,%eax
mov    0x20(%rcx),%edx
and    $0x1,%edx
test   %edx,%edx
jne    25273 <Fax3PreEncode+0xa3>
movl   $0x0,0x8c(%rcx)
movl   $0x0,0x88(%rcx)
jmp    252c1 <Fax3PreEncode+0xf1>
movss  0xa4(%rdi),%xmm0
movzwl 0xa8(%rdi),%edx
cmp    $0x3,%dx
jne    25294 <Fax3PreEncode+0xc4>
movss  0x30b28(%rip),%xmm1        # 55db8 <module.80+0x12>
mulss  %xmm1,%xmm0
movss  0x30b18(%rip),%xmm1        # 55db4 <module.80+0xe>
ucomiss %xmm1,%xmm0
ja     252ab <Fax3PreEncode+0xdb>
mov    $0x2,%edx
mov    %rax,%rsi
jmp    252b5 <Fax3PreEncode+0xe5>
mov    $0x4,%edx
mov    $0x3,%esi
mov    %edx,0x8c(%rcx)
mov    %esi,0x88(%rcx)
movl   $0x0,0x90(%rcx)
leaveq 
retq   
nopl   (%rax)

00000000000252d0 <find0span>:
push   %rbp
mov    %rsp,%rbp
mov    %rsi,%rax
sar    $0x3,%eax
movslq %eax,%rax
add    %rax,%rdi
lea    0x30345(%rip),%r9        # 5562c <zeroruns>
xor    %r8d,%r8d
mov    %rdx,%rax
sub    %esi,%eax
test   %eax,%eax
jg     252fa <find0span+0x2a>
cmp    $0x7f,%eax
jg     25364 <find0span+0x94>
jmp    2534b <find0span+0x7b>
mov    %rsi,%rcx
and    $0x7,%ecx
test   %ecx,%ecx
jle    252f3 <find0span+0x23>
mov    $0x8,%r8d
sub    %ecx,%r8d
movzbl (%rdi),%r10d
shl    %cl,%r10d
movzbl %r10b,%r10d
movslq %r10d,%r10
movzbl (%r10,%r9,1),%r10d
cmp    %r10d,%r8d
jl     25328 <find0span+0x58>
mov    %r10,%r8
cmp    %r8d,%eax
jl     25330 <find0span+0x60>
mov    %r8,%rax
add    %eax,%ecx
cmp    $0x7,%ecx
jg     25381 <find0span+0xb1>
leaveq 
retq   
movzbl (%rdi),%ecx
test   %cl,%cl
jne    25395 <find0span+0xc5>
add    $0x1,%rdi
add    $0x8,%r8d
add    $0xfffffff8,%eax
cmp    $0x7,%eax
jg     25339 <find0span+0x69>
test   %eax,%eax
jg     2539f <find0span+0xcf>
mov    %r8,%rax
leaveq 
retq   
add    $0x1,%rdi
add    $0x8,%r8d
add    $0xfffffff8,%eax
mov    %rdi,%rcx
and    $0x7,%rcx
test   %rcx,%rcx
je     253c7 <find0span+0xf7>
movzbl (%rdi),%ecx
test   %cl,%cl
je     25359 <find0span+0x89>
movzbl (%rcx,%r9,1),%eax
add    %r8d,%eax
leaveq 
retq   
lea    (%rsi,%rax,1),%ecx
sub    %ecx,%edx
add    $0x1,%rdi
mov    %rax,%r8
mov    %rdx,%rax
jmpq   252f3 <find0span+0x23>
movzbl (%rcx,%r9,1),%eax
add    %r8d,%eax
leaveq 
retq   
movzbl (%rdi),%ecx
movzbl (%rcx,%r9,1),%ecx
cmp    %ecx,%eax
jge    253ae <find0span+0xde>
mov    %rax,%rcx
lea    (%r8,%rcx,1),%eax
leaveq 
retq   
mov    (%rdi),%rcx
test   %rcx,%rcx
jne    2534b <find0span+0x7b>
add    $0x8,%rdi
add    $0x40,%r8d
add    $0xffffffc0,%eax
cmp    $0x3f,%eax
jg     253b4 <find0span+0xe4>
jmpq   2534b <find0span+0x7b>
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   0x0(%rax)

00000000000253e0 <find1span>:
push   %rbp
mov    %rsp,%rbp
mov    %rsi,%rax
sar    $0x3,%eax
movslq %eax,%rax
add    %rax,%rdi
lea    0x30335(%rip),%r9        # 5572c <oneruns>
xor    %r8d,%r8d
mov    %rdx,%rax
sub    %esi,%eax
test   %eax,%eax
jg     2540a <find1span+0x2a>
cmp    $0x7f,%eax
jg     25475 <find1span+0x95>
jmp    2545c <find1span+0x7c>
mov    %rsi,%rcx
and    $0x7,%ecx
test   %ecx,%ecx
jle    25403 <find1span+0x23>
mov    $0x8,%r8d
sub    %ecx,%r8d
movzbl (%rdi),%r10d
shl    %cl,%r10d
movzbl %r10b,%r10d
movslq %r10d,%r10
movzbl (%r10,%r9,1),%r10d
cmp    %r10d,%r8d
jl     25438 <find1span+0x58>
mov    %r10,%r8
cmp    %r8d,%eax
jl     25440 <find1span+0x60>
mov    %r8,%rax
add    %eax,%ecx
cmp    $0x7,%ecx
jg     25493 <find1span+0xb3>
leaveq 
retq   
movzbl (%rdi),%ecx
cmp    $0xfe,%cl
jbe    254a7 <find1span+0xc7>
add    $0x1,%rdi
add    $0x8,%r8d
add    $0xfffffff8,%eax
cmp    $0x7,%eax
jg     25449 <find1span+0x69>
test   %eax,%eax
jg     254b1 <find1span+0xd1>
mov    %r8,%rax
leaveq 
retq   
add    $0x1,%rdi
add    $0x8,%r8d
add    $0xfffffff8,%eax
mov    %rdi,%rcx
and    $0x7,%rcx
test   %rcx,%rcx
je     254da <find1span+0xfa>
movzbl (%rdi),%ecx
cmp    $0xfe,%cl
ja     2546a <find1span+0x8a>
movzbl (%rcx,%r9,1),%eax
add    %r8d,%eax
leaveq 
retq   
lea    (%rsi,%rax,1),%ecx
sub    %ecx,%edx
add    $0x1,%rdi
mov    %rax,%r8
mov    %rdx,%rax
jmpq   25403 <find1span+0x23>
movzbl (%rcx,%r9,1),%eax
add    %r8d,%eax
leaveq 
retq   
movzbl (%rdi),%ecx
movzbl (%rcx,%r9,1),%ecx
cmp    %ecx,%eax
jge    254c0 <find1span+0xe0>
mov    %rax,%rcx
lea    (%r8,%rcx,1),%eax
leaveq 
retq   
mov    (%rdi),%rcx
cmp    $0xffffffffffffffff,%rcx
jne    2545c <find1span+0x7c>
add    $0x8,%rdi
add    $0x40,%r8d
add    $0xffffffc0,%eax
cmp    $0x3f,%eax
jg     254c6 <find1span+0xe6>
jmpq   2545c <find1span+0x7c>
data16 nopw %cs:0x0(%rax,%rax,1)
nop

00000000000254f0 <Fax3Encode1DRow>:
push   %rbp
mov    %rsp,%rbp
sub    $0x40,%rsp
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    0x350(%rdi),%rax
mov    %rax,-0x30(%rbp)
mov    0x54aaa(%rip),%r14        # 79fc8 <TIFFFaxWhiteCodes@@Base+0x24edc>
mov    %r14,-0x40(%rbp)
mov    0x54a07(%rip),%rax        # 79f30 <TIFFFaxBlackCodes@@Base+0x24bb6>
mov    %rax,-0x38(%rbp)
mov    %rdi,%rbx
mov    %rsi,%r12
mov    %rdx,%r13
xor    %r15d,%r15d
jmp    25567 <Fax3Encode1DRow+0x77>
mov    %r12,%rdi
mov    %r14,%rsi
mov    %r13,%rdx
callq  253e0 <find1span>
mov    %rax,%r15
mov    %rbx,%rdi
mov    %r15,%rsi
mov    -0x38(%rbp),%rdx
callq  24ae0 <putspan>
add    %r14d,%r15d
cmp    %r13d,%r15d
jae    2558e <Fax3Encode1DRow+0x9e>
mov    -0x40(%rbp),%r14
mov    %r12,%rdi
mov    %r15,%rsi
mov    %r13,%rdx
callq  252d0 <find0span>
mov    %r14,%rdx
mov    %rax,%r14
mov    %rbx,%rdi
mov    %r14,%rsi
callq  24ae0 <putspan>
add    %r15d,%r14d
cmp    %r14d,%r13d
ja     2553b <Fax3Encode1DRow+0x4b>
mov    $0x1,%eax
mov    -0x30(%rbp),%r12
movslq 0x4(%r12),%rcx
and    $0xc,%ecx
test   %ecx,%ecx
jg     255b9 <Fax3Encode1DRow+0xc9>
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
movslq 0x4c(%r12),%rcx
cmp    $0x8,%ecx
je     2561f <Fax3Encode1DRow+0x12f>
mov    0x370(%rbx),%rcx
cmp    0x390(%rbx),%rcx
jg     255e1 <Fax3Encode1DRow+0xf1>
mov    %rax,%r13
mov    %rbx,%rdi
callq  86e0 <TIFFFlushData1@plt>
mov    %r13,%rax
mov    0x388(%rbx),%rdx
lea    0x1(%rdx),%rcx
mov    %rcx,0x388(%rbx)
movzbl 0x48(%r12),%ecx
mov    %cl,(%rdx)
mov    0x390(%rbx),%rcx
add    $0x1,%rcx
mov    %rcx,0x390(%rbx)
movl   $0x0,0x48(%r12)
movl   $0x8,0x4c(%r12)
movslq 0x4(%r12),%rcx
and    $0x8,%ecx
test   %ecx,%ecx
jg     25641 <Fax3Encode1DRow+0x151>
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
mov    0x388(%rbx),%rcx
and    $0x1,%rcx
test   %rcx,%rcx
jne    25667 <Fax3Encode1DRow+0x177>
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
mov    0x370(%rbx),%rcx
cmp    0x390(%rbx),%rcx
jg     25685 <Fax3Encode1DRow+0x195>
mov    %rax,%r13
mov    %rbx,%rdi
callq  86e0 <TIFFFlushData1@plt>
mov    %r13,%rax
mov    0x388(%rbx),%rdx
lea    0x1(%rdx),%rcx
mov    %rcx,0x388(%rbx)
movzbl 0x48(%r12),%ecx
mov    %cl,(%rdx)
mov    0x390(%rbx),%rcx
add    $0x1,%rcx
mov    %rcx,0x390(%rbx)
movl   $0x0,0x48(%r12)
movl   $0x8,0x4c(%r12)
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
nopl   0x0(%rax)

00000000000256e0 <Fax3Encode2DRow>:
push   %rbp
mov    %rsp,%rbp
sub    $0x60,%rsp
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rdx,-0x50(%rbp)
mov    %rcx,-0x58(%rbp)
mov    %rdi,-0x40(%rbp)
xor    %r13d,%r13d
movzbl (%rsi),%eax
and    $0x80,%eax
test   %eax,%eax
jle    2576b <Fax3Encode2DRow+0x8b>
mov    %rsi,%rbx
mov    %rcx,%r12
mov    %rdi,%r14
mov    %rdx,%r15
mov    %r13,%rax
movzbl (%r15),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
jle    25787 <Fax3Encode2DRow+0xa7>
mov    %r13,%r8
mov    0x5488a(%rip),%rdx        # 79fc8 <TIFFFaxWhiteCodes@@Base+0x24edc>
mov    %rdx,-0x30(%rbp)
mov    0x547e7(%rip),%rcx        # 79f30 <TIFFFaxBlackCodes@@Base+0x24bb6>
mov    %rcx,-0x38(%rbp)
mov    $0x1,%esi
mov    $0x3,%ecx
lea    0x300ce(%rip),%r10        # 5582c <vcodes>
mov    $0x4,%r9d
mov    $0x7fffffff,%edi
jmp    257e7 <Fax3Encode2DRow+0x107>
mov    %rsi,%rbx
mov    %rcx,%r12
mov    %rdi,%r14
mov    %rdx,%r15
mov    %rbx,%rdi
mov    %r13,%rsi
mov    %r12,%rdx
callq  252d0 <find0span>
jmp    25726 <Fax3Encode2DRow+0x46>
mov    %r13,%rsi
mov    %rax,%r13
mov    %r15,%rdi
mov    %r12,%rdx
callq  252d0 <find0span>
mov    %rax,%r8
mov    %r13,%rax
xor    %r13d,%r13d
jmp    25737 <Fax3Encode2DRow+0x57>
mov    %r15,%rdi
mov    %r14,%rsi
mov    -0x58(%rbp),%r12
mov    %r12,%rdx
callq  253e0 <find1span>
mov    %rax,%rcx
mov    -0x48(%rbp),%rax
add    %r13d,%eax
lea    (%rcx,%r14,1),%r8d
mov    -0x40(%rbp),%r14
mov    $0x4,%r9d
mov    $0x1,%esi
mov    -0x30(%rbp),%rdx
mov    $0x7fffffff,%edi
lea    0x3004a(%rip),%r10        # 5582c <vcodes>
mov    $0x3,%ecx
cmp    %r8d,%r12d
ja     257f4 <Fax3Encode2DRow+0x114>
mov    %r12,%r15
jmpq   2587e <Fax3Encode2DRow+0x19e>
mov    %r8,%rcx
shr    $0x3,%ecx
mov    %ecx,%ecx
movzbl (%r15,%rcx,1),%edx
mov    %r8,%rcx
not    %ecx
and    $0x7,%ecx
shr    %cl,%edx
and    $0x1,%edx
test   %edx,%edx
jg     25835 <Fax3Encode2DRow+0x155>
mov    %r8,%rsi
mov    %r12,%rdx
mov    %r13,-0x48(%rbp)
mov    %r15,%rdi
mov    %rax,%r15
mov    %r8,%r13
callq  252d0 <find0span>
mov    %rax,%rcx
mov    %r15,%rax
mov    %r13,%r8
jmp    25856 <Fax3Encode2DRow+0x176>
mov    %r8,%rsi
mov    %r12,%rdx
mov    %r13,-0x48(%rbp)
mov    %r15,%rdi
mov    %rax,%r15
mov    %r8,%r13
callq  253e0 <find1span>
mov    %rax,%rcx
mov    %r15,%rax
mov    %r13,%r8
lea    (%r8,%rcx,1),%r15d
mov    $0x4,%r9d
mov    $0x1,%esi
mov    -0x30(%rbp),%rdx
mov    -0x48(%rbp),%r13
mov    $0x7fffffff,%edi
lea    0x2ffb3(%rip),%r10        # 5582c <vcodes>
mov    $0x3,%ecx
cmp    %eax,%r15d
jae    258ae <Fax3Encode2DRow+0x1ce>
mov    %r9,%rdx
mov    %r14,%rdi
callq  24970 <Fax3PutBits>
cmp    %r12d,%r15d
jb     258fd <Fax3Encode2DRow+0x21d>
mov    $0x1,%eax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
cmp    %eax,%r8d
jb     2593c <Fax3Encode2DRow+0x25c>
mov    %r8,%r9
sub    %eax,%r9d
cmp    $0x3,%r9d
ja     2593c <Fax3Encode2DRow+0x25c>
mov    %r9,%rdi
cmp    $0xfffffffd,%edi
jl     2595c <Fax3Encode2DRow+0x27c>
cmp    $0x3,%edi
jg     2595c <Fax3Encode2DRow+0x27c>
lea    0x3(%rdi),%ecx
movslq %ecx,%rcx
lea    (%rcx,%rcx,2),%rcx
movzwl 0x2(%r10,%rcx,2),%esi
movzwl (%r10,%rcx,2),%edx
mov    %r14,%rdi
mov    %rax,%r13
callq  24970 <Fax3PutBits>
mov    %r13,%r15
jmp    2588e <Fax3Encode2DRow+0x1ae>
mov    %r15,%rax
shr    $0x3,%eax
mov    %eax,%r14d
movzbl (%r14,%rbx,1),%eax
mov    %r15,%rcx
not    %ecx
and    $0x7,%ecx
shr    %cl,%eax
and    $0x1,%eax
test   %eax,%eax
jg     259ab <Fax3Encode2DRow+0x2cb>
mov    %r15,%r13
mov    %rcx,%r15
mov    %rbx,%rdi
mov    %r13,%rsi
mov    %r12,%rdx
callq  252d0 <find0span>
mov    %r15,%rcx
jmpq   259c2 <Fax3Encode2DRow+0x2e2>
cmp    %eax,%r8d
jae    258c6 <Fax3Encode2DRow+0x1e6>
neg    %r8d
add    %eax,%r8d
cmp    $0x3,%r8d
ja     258c6 <Fax3Encode2DRow+0x1e6>
neg    %r8d
mov    %r8,%rdi
jmpq   258c6 <Fax3Encode2DRow+0x1e6>
cmp    %eax,%r12d
jbe    25a4f <Fax3Encode2DRow+0x36f>
mov    %rax,%rcx
shr    $0x3,%ecx
mov    %ecx,%ecx
movzbl (%rbx,%rcx,1),%esi
mov    %rax,%rcx
not    %ecx
and    $0x7,%ecx
shr    %cl,%esi
and    $0x1,%esi
test   %esi,%esi
jg     25a24 <Fax3Encode2DRow+0x344>
mov    %rax,%r15
mov    %r12,%rax
mov    %rdx,%r12
mov    %rax,%rdx
mov    %rbx,%rdi
mov    %r15,%rsi
callq  252d0 <find0span>
mov    %rax,%rcx
mov    %r15,%rax
mov    %r12,%rdx
jmpq   25a41 <Fax3Encode2DRow+0x361>
mov    %r15,%r13
mov    %rcx,%r15
mov    %rbx,%rdi
mov    %r13,%rsi
mov    %r12,%rdx
callq  253e0 <find1span>
mov    %r15,%rcx
mov    %rax,-0x48(%rbp)
movzbl (%r14,%rbx,1),%eax
shr    %cl,%eax
and    $0x1,%eax
test   %eax,%eax
jg     25abc <Fax3Encode2DRow+0x3dc>
mov    %r12,%rdx
mov    %rcx,%r12
mov    -0x50(%rbp),%r15
mov    %r15,%rdi
mov    %r13,%rsi
callq  253e0 <find1span>
mov    %r12,%rcx
lea    0x0(%r13,%rax,1),%edx
movzbl (%r14,%rbx,1),%eax
mov    %rdx,%r14
shr    %cl,%eax
and    $0x1,%eax
test   %eax,%eax
jg     257a3 <Fax3Encode2DRow+0xc3>
mov    %r15,%rdi
mov    %r14,%rsi
mov    -0x58(%rbp),%r12
mov    %r12,%rdx
callq  252d0 <find0span>
mov    %rax,%rcx
jmpq   257b8 <Fax3Encode2DRow+0xd8>
mov    %rdx,%r15
mov    %r12,%rdx
mov    %rax,%r12
mov    %rbx,%rdi
mov    %r12,%rsi
callq  253e0 <find1span>
mov    %rax,%rcx
mov    %r12,%rax
mov    %r15,%rdx
lea    (%rax,%rcx,1),%r12d
mov    $0x1,%esi
mov    $0x3,%ecx
mov    %r12,-0x48(%rbp)
mov    %rdx,%r12
mov    %rcx,%rdx
mov    %rax,%r15
mov    %r14,%rdi
callq  24970 <Fax3PutBits>
lea    (%r15,%r13,1),%eax
test   %eax,%eax
je     25ad9 <Fax3Encode2DRow+0x3f9>
mov    %r13,%rax
shr    $0x3,%eax
mov    %eax,%eax
movzbl (%rbx,%rax,1),%eax
mov    %r13,%rcx
not    %ecx
and    $0x7,%ecx
shr    %cl,%eax
and    $0x1,%eax
test   %eax,%eax
je     25ad9 <Fax3Encode2DRow+0x3f9>
mov    %r15,%rsi
sub    %r13d,%esi
mov    %r15,%r13
mov    %r14,%rdi
mov    -0x38(%rbp),%rdx
callq  24ae0 <putspan>
mov    -0x48(%rbp),%r15
mov    %r15,%rsi
sub    %r13d,%esi
mov    %r12,%rdx
mov    %r14,%rdi
callq  24ae0 <putspan>
mov    -0x58(%rbp),%r12
jmpq   2588e <Fax3Encode2DRow+0x1ae>
mov    %r12,%rdx
mov    %rcx,%r12
mov    -0x50(%rbp),%r15
mov    %r15,%rdi
mov    %r13,%rsi
callq  252d0 <find0span>
mov    %r12,%rcx
jmpq   259f0 <Fax3Encode2DRow+0x310>
mov    %r15,%rsi
sub    %r13d,%esi
mov    %r12,%rdx
mov    %r15,%r12
mov    %r14,%rdi
callq  24ae0 <putspan>
mov    -0x48(%rbp),%r15
mov    %r15,%rsi
sub    %r12d,%esi
mov    %r14,%rdi
mov    -0x38(%rbp),%rdx
callq  24ae0 <putspan>
mov    -0x58(%rbp),%r12
jmpq   2588e <Fax3Encode2DRow+0x1ae>
nopl   0x0(%rax)

0000000000025b10 <Fax3Encode>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    %rdx,%rax
mov    %r12,%r8
mov    %r13,%r9
mov    %r14,%r10
mov    %rdi,%r14
mov    %r15,%r11
mov    %rsi,%r15
xor    %r12d,%r12d
mov    0x350(%r14),%r13
mov    0x8(%r13),%rcx
cqto   
mov    %rbx,%rdi
mov    %rax,%rbx
idiv   %rcx
test   %rdx,%rdx
jne    25b61 <Fax3Encode+0x51>
mov    %rdi,-0x8(%rbp)
mov    %r8,-0x10(%rbp)
mov    %r9,-0x18(%rbp)
mov    %r10,-0x20(%rbp)
mov    %r11,-0x28(%rbp)
jmp    25bce <Fax3Encode+0xbe>
xor    %eax,%eax
mov    0x3b8(%r14),%rcx
mov    %rdi,%rbx
mov    %rcx,%rdi
mov    %r8,%r12
mov    %r9,%r13
mov    %r10,%r14
mov    %r11,%r15
lea    0x2ffd3(%rip),%rsi        # 55b56 <module.44>
lea    0x2ffd7(%rip),%rdx        # 55b61 <module.44+0xb>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
movslq 0x4(%r13),%rax
and    $0x2,%eax
test   %eax,%eax
jne    25ba6 <Fax3Encode+0x96>
mov    %r14,%rdi
callq  24f20 <Fax3PutEOL>
mov    0x20(%r13),%eax
and    $0x1,%eax
test   %eax,%eax
jne    25bee <Fax3Encode+0xde>
mov    0x10(%r13),%edx
mov    %r14,%rdi
mov    %r15,%rsi
callq  254f0 <Fax3Encode1DRow>
test   %eax,%eax
je     25c23 <Fax3Encode+0x113>
mov    0x8(%r13),%rax
sub    %rax,%rbx
add    %rax,%r15
test   %rbx,%rbx
jg     25b93 <Fax3Encode+0x83>
mov    $0x1,%eax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
mov    0x78(%r13),%eax
test   %eax,%eax
je     25c3c <Fax3Encode+0x12c>
mov    0x80(%r13),%rdx
mov    0x10(%r13),%ecx
mov    %r14,%rdi
mov    %r15,%rsi
callq  256e0 <Fax3Encode2DRow>
test   %eax,%eax
je     25c7a <Fax3Encode+0x16a>
movslq 0x88(%r13),%rax
add    $0xffffffff,%eax
mov    %eax,0x88(%r13)
jmp    25c57 <Fax3Encode+0x147>
mov    %r12,%rax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
mov    0x10(%r13),%edx
mov    %r14,%rdi
mov    %r15,%rsi
callq  254f0 <Fax3Encode1DRow>
test   %eax,%eax
je     25c93 <Fax3Encode+0x183>
movl   $0x1,0x78(%r13)
movslq 0x88(%r13),%rax
test   %eax,%eax
je     25cac <Fax3Encode+0x19c>
mov    0x80(%r13),%rdi
mov    0x8(%r13),%rdx
mov    %r15,%rsi
callq  8790 <_TIFFmemcpy@plt>
jmpq   25bc4 <Fax3Encode+0xb4>
mov    %r12,%rax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
mov    %r12,%rax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
movl   $0x0,0x78(%r13)
movslq 0x8c(%r13),%rax
add    $0xffffffff,%eax
mov    %eax,0x88(%r13)
jmpq   25bc4 <Fax3Encode+0xb4>
nopw   0x0(%rax,%rax,1)

0000000000025cd0 <Fax3PostEncode>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    $0x1,%eax
mov    0x350(%rdi),%rcx
movslq 0x4c(%rcx),%rdx
cmp    $0x8,%edx
jne    25cef <Fax3PostEncode+0x1f>
leaveq 
retq   
mov    0x370(%rdi),%rdx
cmp    0x390(%rdi),%rdx
jg     25d2b <Fax3PostEncode+0x5b>
mov    %rdi,%rax
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rdi,%r14
mov    %rax,%rdi
mov    %rcx,%r15
callq  86e0 <TIFFFlushData1@plt>
mov    %r15,%rcx
mov    %r14,%rdi
mov    $0x1,%eax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
mov    0x388(%rdi),%rsi
lea    0x1(%rsi),%rdx
mov    %rdx,0x388(%rdi)
movzbl 0x48(%rcx),%edx
mov    %dl,(%rsi)
mov    0x390(%rdi),%rdx
add    $0x1,%rdx
mov    %rdx,0x390(%rdi)
movl   $0x0,0x48(%rcx)
movl   $0x8,0x4c(%rcx)
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)

0000000000025d70 <Fax3Close>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    0x350(%rdi),%rcx
movslq 0x4(%rcx),%rax
and    $0x1,%eax
test   %eax,%eax
je     25d8c <Fax3Close+0x1c>
leaveq 
retq   
mov    0x388(%rdi),%rax
test   %rax,%rax
jne    25d9a <Fax3Close+0x2a>
leaveq 
retq   
xor    %edx,%edx
mov    0x20(%rcx),%eax
and    $0x1,%eax
test   %eax,%eax
jne    25dd5 <Fax3Close+0x65>
mov    $0x1,%eax
mov    $0xc,%esi
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rdi,%rbx
mov    %rcx,%r12
mov    %rdx,%r13
mov    %rax,%r14
mov    %rsi,%r15
jmp    25e21 <Fax3Close+0xb1>
mov    $0xd,%esi
mov    0x78(%rcx),%eax
test   %eax,%eax
je     25e93 <Fax3Close+0x123>
mov    $0x2,%eax
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rdi,%rbx
mov    %rcx,%r12
mov    %rdx,%r13
mov    %rax,%r14
mov    %rsi,%r15
jmp    25e21 <Fax3Close+0xb1>
mov    %rbx,%rdi
mov    %r14,%rsi
mov    %r15,%rdx
callq  24970 <Fax3PutBits>
add    $0x1,%r13d
cmp    $0x5,%r13d
jle    25e0f <Fax3Close+0x9f>
mov    0x370(%rbx),%rax
cmp    0x390(%rbx),%rax
jg     25e3f <Fax3Close+0xcf>
mov    %rbx,%rdi
callq  86e0 <TIFFFlushData1@plt>
mov    0x388(%rbx),%rcx
lea    0x1(%rcx),%rax
mov    %rax,0x388(%rbx)
movzbl 0x48(%r12),%eax
mov    %al,(%rcx)
mov    0x390(%rbx),%rax
add    $0x1,%rax
mov    %rax,0x390(%rbx)
movl   $0x0,0x48(%r12)
movl   $0x8,0x4c(%r12)
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
mov    $0x3,%eax
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rdi,%rbx
mov    %rcx,%r12
mov    %rdx,%r13
mov    %rax,%r14
mov    %rsi,%r15
jmpq   25e21 <Fax3Close+0xb1>

0000000000025ec0 <Fax3Cleanup>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x10(%rbp)
mov    0x350(%rdi),%rax
test   %rax,%rax
jne    25ef7 <Fax3Cleanup+0x37>
lea    0x2fca9(%rip),%rdi        # 55b88 <module.44+0x32>
lea    0x2fa06(%rip),%rsi        # 558ec <_fillmasks.13+0x14>
mov    $0x485,%edx
lea    0x2fc9e(%rip),%rcx        # 55b90 <module.44+0x3a>
callq  8490 <__assert_fail@plt>
mov    0x28(%rax),%rcx
mov    %rcx,0x410(%rdi)
mov    0x30(%rax),%rcx
mov    %rcx,0x408(%rdi)
mov    0x38(%rax),%rcx
mov    %rcx,0x418(%rdi)
mov    0x60(%rax),%rcx
test   %rcx,%rcx
jne    25f26 <Fax3Cleanup+0x66>
mov    %rdi,%r15
jmp    25f3f <Fax3Cleanup+0x7f>
mov    %r14,-0x8(%rbp)
mov    %rax,%r14
mov    %rdi,%r15
mov    %rcx,%rdi
callq  8bb0 <_TIFFfree@plt>
mov    %r14,%rax
mov    -0x8(%rbp),%r14
mov    0x80(%rax),%rdi
test   %rdi,%rdi
je     25f50 <Fax3Cleanup+0x90>
callq  8bb0 <_TIFFfree@plt>
mov    0x350(%r15),%rdi
callq  8bb0 <_TIFFfree@plt>
mov    %r15,%rdi
movq   $0x0,0x350(%rdi)
callq  8740 <_TIFFSetDefaultCompressionState@plt>
mov    -0x10(%rbp),%r15
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)

0000000000025f80 <Fax3VSetField>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
lea    0x2f95d(%rip),%rax        # 558ec <_fillmasks.13+0x14>
lea    0x2fc66(%rip),%rcx        # 55bfc <module.44+0xa6>
mov    0x350(%rdi),%r9
test   %r9,%r9
jne    25fb6 <Fax3VSetField+0x36>
mov    %rax,%rsi
lea    0x2fbdc(%rip),%rdi        # 55b88 <module.44+0x32>
mov    $0x4af,%edx
callq  8490 <__assert_fail@plt>
mov    0x30(%r9),%r8
test   %r8,%r8
jne    25fd3 <Fax3VSetField+0x53>
mov    %rax,%rsi
lea    0x2fc41(%rip),%rdi        # 55c0a <module.44+0xb4>
mov    $0x4b0,%edx
callq  8490 <__assert_fail@plt>
mov    $0x1,%eax
cmp    $0x146,%esi
jbe    26014 <Fax3VSetField+0x94>
cmp    $0xffff,%esi
jbe    26057 <Fax3VSetField+0xd7>
cmp    $0x10000,%esi
jne    26083 <Fax3VSetField+0x103>
movslq (%rdx),%rsi
cmp    $0x2f,%esi
jle    260ab <Fax3VSetField+0x12b>
mov    0x8(%rdx),%rsi
lea    0x8(%rsi),%rcx
mov    %rcx,0x8(%rdx)
movslq (%rsi),%rcx
jmpq   260b8 <Fax3VSetField+0x138>
cmp    $0x124,%esi
jbe    260be <Fax3VSetField+0x13e>
cmp    $0x125,%esi
je     260cf <Fax3VSetField+0x14f>
cmp    $0x146,%esi
jne    260ca <Fax3VSetField+0x14a>
movslq (%rdx),%rcx
cmp    $0x2f,%ecx
jle    260f8 <Fax3VSetField+0x178>
mov    0x8(%rdx),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rdx)
mov    (%rcx),%eax
jmpq   26104 <Fax3VSetField+0x184>
cmp    $0x147,%esi
jne    2610a <Fax3VSetField+0x18a>
movslq (%rdx),%rcx
cmp    $0x2f,%ecx
jle    2612e <Fax3VSetField+0x1ae>
mov    0x8(%rdx),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rdx)
movslq (%rcx),%rax
jmpq   2613b <Fax3VSetField+0x1bb>
cmp    $0x10004,%esi
jne    260ca <Fax3VSetField+0x14a>
movslq (%rdx),%rsi
cmp    $0x2f,%esi
jle    26158 <Fax3VSetField+0x1d8>
mov    0x8(%rdx),%rsi
lea    0x8(%rsi),%rcx
mov    %rcx,0x8(%rdx)
mov    (%rsi),%rcx
jmpq   26165 <Fax3VSetField+0x1e5>
mov    0x10(%rdx),%rcx
movslq (%rcx,%rsi,1),%rcx
add    $0x8,%esi
mov    %esi,(%rdx)
mov    %ecx,0x4(%r9)
leaveq 
retq   
cmp    $0x124,%esi
je     2616b <Fax3VSetField+0x1eb>
callq  *%r8
leaveq 
retq   
movzwl 0x78(%rdi),%eax
cmp    $0x4,%ax
jne    26140 <Fax3VSetField+0x1c0>
movslq (%rdx),%rcx
cmp    $0x2f,%ecx
jle    2618d <Fax3VSetField+0x20d>
mov    0x8(%rdx),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rdx)
mov    (%rcx),%eax
jmpq   26199 <Fax3VSetField+0x219>
mov    0x10(%rdx),%rax
mov    (%rax,%rcx,1),%eax
add    $0x8,%ecx
mov    %ecx,(%rdx)
mov    %eax,0x1c(%r9)
jmp    26140 <Fax3VSetField+0x1c0>
cmp    $0x148,%esi
jne    260ca <Fax3VSetField+0x14a>
movslq (%rdx),%rcx
cmp    $0x2f,%ecx
jle    2619f <Fax3VSetField+0x21f>
mov    0x8(%rdx),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rdx)
mov    (%rcx),%eax
jmp    261ab <Fax3VSetField+0x22b>
mov    0x10(%rdx),%rax
movslq (%rax,%rcx,1),%rax
add    $0x8,%ecx
mov    %ecx,(%rdx)
mov    %ax,0x14(%r9)
mov    %rdi,%rax
mov    %rdi,-0x8(%rbp)
mov    %rax,%rdi
callq  8ae0 <TIFFFieldWithTag@plt>
test   %rax,%rax
jne    261b1 <Fax3VSetField+0x231>
xor    %eax,%eax
leaveq 
retq   
mov    0x10(%rdx),%rcx
mov    (%rcx,%rsi,1),%rcx
add    $0x8,%esi
mov    %esi,(%rdx)
mov    %rcx,0x58(%r9)
leaveq 
retq   
movzwl 0x78(%rdi),%eax
cmp    $0x3,%ax
jne    26140 <Fax3VSetField+0x1c0>
movslq (%rdx),%rcx
cmp    $0x2f,%ecx
jle    261e5 <Fax3VSetField+0x265>
mov    0x8(%rdx),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rdx)
mov    (%rcx),%eax
jmp    261f1 <Fax3VSetField+0x271>
mov    0x10(%rdx),%rax
mov    (%rax,%rcx,1),%eax
add    $0x8,%ecx
mov    %ecx,(%rdx)
mov    %eax,0x20(%r9)
jmp    26140 <Fax3VSetField+0x1c0>
mov    0x10(%rdx),%rax
mov    (%rax,%rcx,1),%eax
add    $0x8,%ecx
mov    %ecx,(%rdx)
mov    %eax,0x18(%r9)
jmp    26140 <Fax3VSetField+0x1c0>
movzwl 0x18(%rax),%edx
mov    %rdx,%rcx
and    $0x1f,%ecx
mov    $0x1,%eax
mov    %rax,%rsi
shl    %cl,%rsi
shr    $0x5,%edx
movslq %edx,%rcx
mov    -0x8(%rbp),%rdx
or     0x38(%rdx,%rcx,8),%rsi
mov    %rsi,0x38(%rdx,%rcx,8)
mov    0x10(%rdx),%ecx
or     $0x8,%ecx
mov    %ecx,0x10(%rdx)
leaveq 
retq   
mov    0x10(%rdx),%rax
mov    (%rax,%rcx,1),%eax
add    $0x8,%ecx
mov    %ecx,(%rdx)
mov    %eax,0x20(%r9)
jmpq   26140 <Fax3VSetField+0x1c0>
nopw   0x0(%rax,%rax,1)

0000000000026200 <Fax3VGetField>:
push   %rbp
mov    %rsp,%rbp
mov    0x350(%rdi),%rcx
test   %rcx,%rcx
jne    2622f <Fax3VGetField+0x2f>
lea    0x2f971(%rip),%rdi        # 55b88 <module.44+0x32>
lea    0x2f6ce(%rip),%rsi        # 558ec <_fillmasks.13+0x14>
mov    $0x4de,%edx
lea    0x2f9f4(%rip),%rcx        # 55c1e <module.44+0xc8>
callq  8490 <__assert_fail@plt>
mov    $0x1,%eax
cmp    $0x146,%esi
jbe    26270 <Fax3VGetField+0x70>
cmp    $0xffff,%esi
jbe    262a8 <Fax3VGetField+0xa8>
cmp    $0x10000,%esi
jne    262d4 <Fax3VGetField+0xd4>
movslq (%rdx),%rdi
cmp    $0x2f,%edi
jle    262fc <Fax3VGetField+0xfc>
mov    0x8(%rdx),%rdi
lea    0x8(%rdi),%rsi
mov    %rsi,0x8(%rdx)
mov    (%rdi),%rsi
jmpq   26309 <Fax3VGetField+0x109>
cmp    $0x124,%esi
jbe    26311 <Fax3VGetField+0x111>
cmp    $0x125,%esi
jne    26322 <Fax3VGetField+0x122>
movslq (%rdx),%rdi
cmp    $0x2f,%edi
jle    26343 <Fax3VGetField+0x143>
mov    0x8(%rdx),%rdi
lea    0x8(%rdi),%rsi
mov    %rsi,0x8(%rdx)
mov    (%rdi),%rsi
jmpq   26350 <Fax3VGetField+0x150>
cmp    $0x147,%esi
jne    26357 <Fax3VGetField+0x157>
movslq (%rdx),%rdi
cmp    $0x2f,%edi
jle    26378 <Fax3VGetField+0x178>
mov    0x8(%rdx),%rdi
lea    0x8(%rdi),%rsi
mov    %rsi,0x8(%rdx)
mov    (%rdi),%rsi
jmpq   26385 <Fax3VGetField+0x185>
cmp    $0x10004,%esi
jne    2631d <Fax3VGetField+0x11d>
movslq (%rdx),%rsi
cmp    $0x2f,%esi
jle    2638e <Fax3VGetField+0x18e>
mov    0x8(%rdx),%rsi
lea    0x8(%rsi),%rcx
mov    %rcx,0x8(%rdx)
mov    (%rsi),%rcx
jmpq   2639b <Fax3VGetField+0x19b>
mov    0x10(%rdx),%rsi
mov    (%rsi,%rdi,1),%rsi
add    $0x8,%edi
mov    %edi,(%rdx)
movslq 0x4(%rcx),%rcx
mov    %ecx,(%rsi)
leaveq 
retq   
cmp    $0x124,%esi
je     26288 <Fax3VGetField+0x88>
callq  *0x28(%rcx)
leaveq 
retq   
cmp    $0x146,%esi
jne    2631d <Fax3VGetField+0x11d>
movslq (%rdx),%rdi
cmp    $0x2f,%edi
jle    263ab <Fax3VGetField+0x1ab>
mov    0x8(%rdx),%rdi
lea    0x8(%rdi),%rsi
mov    %rsi,0x8(%rdx)
mov    (%rdi),%rsi
jmp    263b8 <Fax3VGetField+0x1b8>
mov    0x10(%rdx),%rsi
mov    (%rsi,%rdi,1),%rsi
add    $0x8,%edi
mov    %edi,(%rdx)
mov    0x20(%rcx),%ecx
mov    %ecx,(%rsi)
leaveq 
retq   
cmp    $0x148,%esi
jne    2631d <Fax3VGetField+0x11d>
movslq (%rdx),%rdi
cmp    $0x2f,%edi
jle    263bf <Fax3VGetField+0x1bf>
mov    0x8(%rdx),%rsi
lea    0x8(%rsi),%rdi
mov    %rdi,0x8(%rdx)
mov    (%rsi),%rsi
jmp    263cc <Fax3VGetField+0x1cc>
mov    0x10(%rdx),%rsi
mov    (%rsi,%rdi,1),%rsi
add    $0x8,%edi
mov    %edi,(%rdx)
movzwl 0x14(%rcx),%ecx
mov    %cx,(%rsi)
leaveq 
retq   
mov    0x10(%rdx),%rcx
mov    (%rcx,%rsi,1),%rcx
add    $0x8,%esi
mov    %esi,(%rdx)
mov    0x350(%rdi),%rdx
mov    0x58(%rdx),%rdx
mov    %rdx,(%rcx)
leaveq 
retq   
mov    0x10(%rdx),%rsi
mov    (%rsi,%rdi,1),%rsi
add    $0x8,%edi
mov    %edi,(%rdx)
mov    0x1c(%rcx),%ecx
mov    %ecx,(%rsi)
leaveq 
retq   
mov    0x10(%rdx),%rsi
mov    (%rsi,%rdi,1),%rsi
add    $0x8,%edi
mov    %edi,(%rdx)
mov    0x18(%rcx),%ecx
mov    %ecx,(%rsi)
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

00000000000263e0 <Fax3PrintDir>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    %r15,-0x20(%rbp)
mov    %rdx,-0x8(%rbp)
mov    0x350(%rdi),%rcx
test   %rcx,%rcx
jne    2641b <Fax3PrintDir+0x3b>
lea    0x2f785(%rip),%rdi        # 55b88 <module.44+0x32>
lea    0x2f4e2(%rip),%rsi        # 558ec <_fillmasks.13+0x14>
mov    $0x4ff,%edx
lea    0x2f816(%rip),%rcx        # 55c2c <module.44+0xd6>
callq  8490 <__assert_fail@plt>
mov    0x48(%rdi),%rax
and    $0x200,%rax
test   %rax,%rax
jne    26441 <Fax3PrintDir+0x61>
mov    %r15,%rax
mov    %rcx,%r15
mov    %r14,%rcx
mov    %rdi,%r14
mov    %r13,%r8
mov    %rsi,%r13
jmpq   2653f <Fax3PrintDir+0x15f>
lea    0x2f7f1(%rip),%rax        # 55c39 <module.44+0xe3>
mov    %rax,-0x30(%rbp)
movzwl 0x78(%rdi),%eax
cmp    $0x4,%ax
je     264cc <Fax3PrintDir+0xec>
xor    %eax,%eax
lea    0x2f803(%rip),%r8        # 55c62 <module.44+0x10c>
mov    %rsi,%rdx
mov    %r13,-0x10(%rbp)
mov    %r14,-0x18(%rbp)
mov    %rsi,%r13
mov    %r8,%rsi
mov    %rdi,%r14
mov    %rdx,%rdi
mov    %rcx,%r15
callq  86f0 <fprintf@plt>
lea    0x2f7ff(%rip),%rax        # 55c84 <module.44+0x12e>
mov    %rax,-0x28(%rbp)
mov    0x20(%r15),%eax
and    $0x1,%eax
test   %eax,%eax
je     264b2 <Fax3PrintDir+0xd2>
xor    %eax,%eax
lea    0x2f7d8(%rip),%rsi        # 55c75 <module.44+0x11f>
mov    %r13,%rdi
lea    0x2f792(%rip),%rdx        # 55c39 <module.44+0xe3>
callq  86f0 <fprintf@plt>
pushq  -0x28(%rbp)
popq   -0x30(%rbp)
mov    0x20(%r15),%eax
and    $0x4,%eax
test   %eax,%eax
jne    26596 <Fax3PrintDir+0x1b6>
pushq  -0x30(%rbp)
popq   -0x28(%rbp)
jmpq   265ab <Fax3PrintDir+0x1cb>
xor    %eax,%eax
lea    0x2f766(%rip),%r8        # 55c3b <module.44+0xe5>
mov    %rsi,%rdx
mov    %r13,-0x10(%rbp)
mov    %r14,-0x18(%rbp)
mov    %rsi,%r13
mov    %r8,%rsi
mov    %rdi,%r14
mov    %rdx,%rdi
mov    %rcx,%r15
callq  86f0 <fprintf@plt>
mov    0x20(%r15),%eax
and    $0x2,%eax
test   %eax,%eax
je     26517 <Fax3PrintDir+0x137>
xor    %eax,%eax
mov    %r13,%rdi
lea    0x2f743(%rip),%rsi        # 55c4e <module.44+0xf8>
lea    0x2f727(%rip),%rdx        # 55c39 <module.44+0xe3>
callq  86f0 <fprintf@plt>
xor    %eax,%eax
lea    0x2f774(%rip),%rsi        # 55c94 <module.44+0x13e>
mov    0x20(%r15),%edx
mov    %rdx,%rcx
mov    %r13,%rdi
callq  86f0 <fprintf@plt>
mov    -0x8(%rbp),%rdx
mov    -0x20(%rbp),%rax
mov    -0x18(%rbp),%rcx
mov    -0x10(%rbp),%r8
mov    0x48(%r14),%rsi
and    $0x8,%rsi
test   %rsi,%rsi
je     2660e <Fax3PrintDir+0x22e>
xor    %eax,%eax
lea    0x2f74b(%rip),%rsi        # 55ca4 <module.44+0x14e>
mov    %r13,%rdi
mov    %r8,-0x28(%rbp)
mov    %rcx,-0x30(%rbp)
callq  86f0 <fprintf@plt>
movzwl 0x14(%r15),%eax
test   %ax,%ax
je     265d4 <Fax3PrintDir+0x1f4>
cmp    $0x1,%ax
je     266a2 <Fax3PrintDir+0x2c2>
cmp    $0x2,%ax
jne    265e5 <Fax3PrintDir+0x205>
xor    %eax,%eax
lea    0x2f741(%rip),%rsi        # 55ccd <module.44+0x177>
mov    %r13,%rdi
callq  86f0 <fprintf@plt>
jmp    265e5 <Fax3PrintDir+0x205>
xor    %eax,%eax
lea    0x2f6e7(%rip),%rsi        # 55c86 <module.44+0x130>
mov    %r13,%rdi
mov    -0x30(%rbp),%rdx
callq  86f0 <fprintf@plt>
mov    0x20(%r15),%eax
and    $0x2,%eax
test   %eax,%eax
je     26517 <Fax3PrintDir+0x137>
xor    %eax,%eax
mov    %r13,%rdi
mov    -0x28(%rbp),%rdx
lea    0x2f684(%rip),%rsi        # 55c4e <module.44+0xf8>
callq  86f0 <fprintf@plt>
jmpq   26517 <Fax3PrintDir+0x137>
xor    %eax,%eax
lea    0x2f6d3(%rip),%rsi        # 55cb0 <module.44+0x15a>
mov    %r13,%rdi
callq  86f0 <fprintf@plt>
xor    %eax,%eax
lea    0x2f6f3(%rip),%rsi        # 55ce1 <module.44+0x18b>
movzwl 0x14(%r15),%edx
mov    %rdx,%rcx
mov    %r13,%rdi
callq  86f0 <fprintf@plt>
mov    -0x8(%rbp),%rdx
mov    -0x20(%rbp),%rax
mov    -0x30(%rbp),%rcx
mov    -0x28(%rbp),%r8
mov    0x48(%r14),%rsi
and    $0x4,%rsi
test   %rsi,%rsi
je     26648 <Fax3PrintDir+0x268>
xor    %eax,%eax
lea    0x2f6cb(%rip),%rsi        # 55cef <module.44+0x199>
mov    0x1c(%r15),%edx
mov    %r13,%rdi
mov    %r8,-0x18(%rbp)
mov    %rcx,-0x30(%rbp)
callq  86f0 <fprintf@plt>
mov    -0x8(%rbp),%rdx
mov    -0x20(%rbp),%rax
mov    -0x30(%rbp),%rcx
mov    -0x18(%rbp),%r8
mov    0x48(%r14),%rsi
and    $0x10,%rsi
test   %rsi,%rsi
je     2668e <Fax3PrintDir+0x2ae>
xor    %eax,%eax
lea    0x2f6a7(%rip),%rsi        # 55d05 <module.44+0x1af>
mov    0x18(%r15),%edx
mov    %r13,%rdi
mov    %r14,-0x10(%rbp)
mov    %r13,-0x30(%rbp)
mov    %r8,%r13
mov    %rcx,%r14
callq  86f0 <fprintf@plt>
mov    %r14,%rcx
mov    %r13,%r8
mov    -0x30(%rbp),%r13
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%rdx
mov    -0x20(%rbp),%rax
mov    0x38(%r15),%r9
test   %r9,%r9
jne    266b8 <Fax3PrintDir+0x2d8>
mov    %r8,%r13
mov    %rcx,%r14
mov    %rax,%r15
leaveq 
retq   
xor    %eax,%eax
lea    0x2f60c(%rip),%rsi        # 55cb7 <module.44+0x161>
mov    %r13,%rdi
callq  86f0 <fprintf@plt>
jmpq   265e5 <Fax3PrintDir+0x205>
mov    %r13,%rsi
mov    %r8,%r13
mov    %r14,%rdi
mov    %rcx,%r14
mov    %rax,%r15
callq  *%r9
leaveq 
retq   
nopl   0x0(%rax)

00000000000266d0 <InitCCITTFax3>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x8(%rbp)
lea    0x530b5(%rip),%rsi        # 79798 <faxFields>
mov    $0x5,%edx
mov    %rdi,%r15
callq  8520 <_TIFFMergeFields@plt>
test   %eax,%eax
jne    26718 <InitCCITTFax3+0x48>
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
lea    0x2f631(%rip),%rsi        # 55d35 <module.74+0xe>
lea    0x2f638(%rip),%rdx        # 55d43 <module.74+0x1c>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
mov    $0x98,%edi
callq  8440 <_TIFFmalloc@plt>
mov    %rax,0x350(%r15)
test   %rax,%rax
je     26897 <InitCCITTFax3+0x1c7>
mov    %rax,%rdi
mov    $0x98,%edx
xor    %esi,%esi
callq  88e0 <_TIFFmemset@plt>
mov    0x350(%r15),%rcx
movslq 0xc(%r15),%rax
mov    %eax,(%rcx)
mov    0x410(%r15),%rax
mov    %rax,0x28(%rcx)
lea    -0x560(%rip),%rax        # 26200 <Fax3VGetField>
mov    %rax,0x410(%r15)
mov    0x408(%r15),%rax
mov    %rax,0x30(%rcx)
lea    -0x7f9(%rip),%rax        # 25f80 <Fax3VSetField>
mov    %rax,0x408(%r15)
mov    0x418(%r15),%rax
mov    %rax,0x38(%rcx)
lea    -0x3b2(%rip),%rax        # 263e0 <Fax3PrintDir>
mov    %rax,0x418(%r15)
movl   $0x0,0x20(%rcx)
movslq (%rcx),%rax
test   %eax,%eax
jne    267b4 <InitCCITTFax3+0xe4>
mov    0x10(%r15),%eax
or     $0x100,%eax
mov    %eax,0x10(%r15)
mov    0x350(%r15),%rax
movq   $0x0,0x60(%rax)
xor    %eax,%eax
mov    $0x10004,%esi
mov    0x5380f(%rip),%rdx        # 79fe0 <_TIFFFax3fillruns@@Base+0x58120>
mov    %r15,%rdi
callq  8290 <TIFFSetField@plt>
mov    0x350(%r15),%rax
movq   $0x0,0x80(%rax)
lea    -0x2112(%rip),%rax        # 246e0 <Fax3FixupTags>
mov    %rax,0x2c0(%r15)
lea    -0x2110(%rip),%rcx        # 246f0 <Fax3SetupState>
mov    %rcx,0x2c8(%r15)
lea    -0x456e(%rip),%rax        # 222a0 <Fax3PreDecode>
mov    %rax,0x2d0(%r15)
lea    -0x42fc(%rip),%rax        # 22520 <Fax3Decode1D>
mov    %rax,0x2f8(%r15)
mov    %rax,0x308(%r15)
mov    %rax,0x318(%r15)
mov    %rcx,0x2d8(%r15)
lea    -0x166f(%rip),%rax        # 251d0 <Fax3PreEncode>
mov    %rax,0x2e8(%r15)
lea    -0xb7d(%rip),%rax        # 25cd0 <Fax3PostEncode>
mov    %rax,0x2f0(%r15)
lea    -0xd4b(%rip),%rax        # 25b10 <Fax3Encode>
mov    %rax,0x300(%r15)
mov    %rax,0x310(%r15)
mov    %rax,0x320(%r15)
lea    -0xb07(%rip),%rax        # 25d70 <Fax3Close>
mov    %rax,0x328(%r15)
lea    -0x9c5(%rip),%rax        # 25ec0 <Fax3Cleanup>
mov    %rax,0x338(%r15)
mov    $0x1,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
lea    0x2f480(%rip),%rsi        # 55d27 <module.74>
lea    0x2f4c9(%rip),%rdx        # 55d77 <module.74+0x50>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

00000000000268c0 <Fax4Decode>:
push   %rbp
mov    %rsp,%rbp
sub    $0x110,%rsp
mov    %rsi,-0x70(%rbp)
mov    %rdx,%rax
mov    %r14,%r11
mov    0x350(%rdi),%r14
mov    %r14,-0x88(%rbp)
mov    0x10(%r14),%r9d
mov    %r9,-0xa8(%rbp)
mov    0x40(%r14),%r10
mov    %r10,-0xd0(%rbp)
mov    0x8(%r14),%rcx
cqto   
mov    %rdi,%rsi
mov    %r13,%rdi
mov    %rbx,%r13
mov    %rcx,%rbx
mov    %r12,%rcx
mov    %r15,%r8
mov    %rax,%r15
idiv   %rbx
test   %rdx,%rdx
jne    269a6 <Fax4Decode+0xe6>
mov    0x48(%r14),%ebx
movslq 0x4c(%r14),%r12
movslq 0x50(%r14),%rax
mov    %r8,-0x28(%rbp)
mov    %rax,-0x40(%rbp)
mov    0x388(%rsi),%r8
mov    %r11,-0x20(%rbp)
mov    %r8,%r11
add    0x390(%rsi),%r11
mov    %rdi,-0x18(%rbp)
mov    %r11,-0xe0(%rbp)
mov    0x535fd(%rip),%rdi        # 79f58 <TIFFFaxMainTable@@Base+0x2419c>
mov    %rcx,-0x10(%rbp)
mov    %rdi,-0x108(%rbp)
mov    0x53653(%rip),%rax        # 79fc0 <TIFFFaxBlackTable@@Base+0x1be04>
mov    %r13,-0x8(%rbp)
mov    %rax,-0xf8(%rbp)
mov    0x53619(%rip),%rax        # 79f98 <TIFFFaxWhiteTable@@Base+0x23ddc>
mov    %rsi,-0x80(%rbp)
mov    %rax,-0xe8(%rbp)
mov    $0x1,%eax
mov    %rax,-0x38(%rbp)
xor    %eax,%eax
mov    %rax,-0x30(%rbp)
mov    $0x7,%ecx
xor    %r13d,%r13d
jmpq   26adc <Fax4Decode+0x21c>
xor    %eax,%eax
mov    0x3b8(%rsi),%rbx
mov    %rcx,%r12
mov    %r11,%r14
mov    %r8,%r15
mov    %rbx,%rcx
mov    %r13,%rbx
mov    %rdi,%r13
mov    %rcx,%rdi
lea    0x2f04e(%rip),%rdx        # 55a19 <module.29+0xd>
lea    0x2f3be(%rip),%rsi        # 55d90 <module.78>
callq  8a00 <TIFFErrorExt@plt>
mov    $0xffffffffffffffff,%rax
leaveq 
retq   
mov    %r8,-0xc8(%rbp)
mov    -0x88(%rbp),%rax
mov    0x90(%rax),%edx
lea    0x2f395(%rip),%rdi        # 55d90 <module.78>
mov    -0x80(%rbp),%rax
mov    %r13,%rcx
mov    %rsi,-0x98(%rbp)
mov    %rax,%rsi
callq  22340 <Fax3Unexpected>
mov    -0xc8(%rbp),%r8
mov    -0x98(%rbp),%rsi
mov    -0xa8(%rbp),%r9
mov    %rbx,-0x48(%rbp)
mov    %r8,-0xc0(%rbp)
test   %r14d,%r14d
je     26a3d <Fax4Decode+0x17d>
mov    %r14d,(%r15)
add    $0x4,%r15
cmp    %r9d,%r13d
jne    26b33 <Fax4Decode+0x273>
mov    -0x40(%rbp),%rax
mov    -0x88(%rbp),%r14
mov    -0x68(%rbp),%r13
mov    -0x70(%rbp),%rdi
test   %eax,%eax
jne    26b84 <Fax4Decode+0x2c4>
mov    %r9,%rcx
mov    %rdi,%rbx
mov    %r15,%rdx
callq  *0x58(%r14)
movl   $0x0,(%r15)
mov    0x68(%r14),%rcx
mov    0x70(%r14),%rax
mov    %rcx,0x70(%r14)
mov    %rax,0x68(%r14)
movslq 0x90(%r14),%rax
add    $0x1,%eax
mov    %eax,0x90(%r14)
mov    0x8(%r14),%rax
mov    %r13,%r15
sub    %rax,%r15
add    %rbx,%rax
mov    %rax,-0x70(%rbp)
mov    -0xc0(%rbp),%r8
mov    -0x48(%rbp),%rbx
mov    -0xa8(%rbp),%r9
mov    -0x108(%rbp),%rdi
mov    -0xe0(%rbp),%r11
mov    -0xd0(%rbp),%r10
mov    $0x7,%ecx
xor    %r13d,%r13d
pushq  -0x30(%rbp)
popq   -0x40(%rbp)
test   %r15,%r15
jg     26c42 <Fax4Decode+0x382>
mov    %r12d,0x4c(%r14)
mov    %ebx,0x48(%r14)
mov    -0x40(%rbp),%rax
mov    %eax,0x50(%r14)
mov    -0x80(%rbp),%rcx
mov    0x388(%rcx),%rax
sub    %r8,%rax
add    0x390(%rcx),%rax
mov    %rax,0x390(%rcx)
mov    %r8,0x388(%rcx)
mov    $0x1,%eax
mov    -0x8(%rbp),%rbx
mov    -0x10(%rbp),%r12
mov    -0x18(%rbp),%r13
mov    -0x20(%rbp),%r14
mov    -0x28(%rbp),%r15
leaveq 
retq   
mov    -0x88(%rbp),%r14
mov    0x90(%r14),%edx
lea    0x2f248(%rip),%rdi        # 55d90 <module.78>
mov    -0x80(%rbp),%rax
mov    %r13,%rcx
mov    %r9,%r8
mov    %r12,-0x78(%rbp)
mov    %r9,%rbx
mov    %rsi,%r12
mov    %rax,%rsi
callq  22420 <Fax3BadLength>
mov    -0xc0(%rbp),%r8
mov    -0x48(%rbp),%rdx
mov    -0x78(%rbp),%rsi
mov    -0x40(%rbp),%rax
mov    -0x68(%rbp),%r9
mov    -0x70(%rbp),%rdi
jmpq   26c8b <Fax4Decode+0x3cb>
mov    -0x80(%rbp),%r13
cmp    $0xc,%r12d
jg     26bca <Fax4Decode+0x30a>
mov    -0xe0(%rbp),%r10
cmp    %r8,%r10
jbe    26cb9 <Fax4Decode+0x3f9>
movzbl (%r8),%ecx
mov    -0xd0(%rbp),%r11
movzbl (%r11,%rcx,1),%edx
mov    %r12,%rcx
shl    %cl,%edx
or     %edx,%ebx
lea    0x1(%r8),%rdx
lea    0x8(%rcx),%r12d
cmp    $0xc,%r12d
jle    26ccd <Fax4Decode+0x40d>
mov    %rdx,%r8
mov    %r8,-0xe0(%rbp)
mov    %r9,%rcx
mov    %r15,%rdx
mov    %rax,%r15
callq  *0x58(%r14)
lea    -0xd(%r12),%eax
mov    %eax,0x4c(%r14)
shr    $0xd,%ebx
mov    %ebx,0x48(%r14)
mov    %r15d,0x50(%r14)
mov    0x388(%r13),%rax
mov    -0xe0(%rbp),%rcx
sub    %rcx,%rax
add    0x390(%r13),%rax
mov    %rax,0x390(%r13)
mov    %rcx,0x388(%r13)
movslq 0x90(%r14),%rax
test   %eax,%eax
je     26ce4 <Fax4Decode+0x424>
mov    $0x1,%eax
mov    -0x8(%rbp),%rbx
mov    -0x10(%rbp),%r12
mov    -0x18(%rbp),%r13
mov    -0x20(%rbp),%r14
mov    -0x28(%rbp),%r15
leaveq 
retq   
mov    %r15,-0x68(%rbp)
mov    0x70(%r14),%rsi
mov    0x68(%r14),%rdx
movslq (%rdx),%rax
add    $0x4,%rdx
mov    %rsi,%r15
mov    %r13,%r14
mov    %r15,-0x110(%rbp)
cmp    %r9d,%r13d
jl     26d01 <Fax4Decode+0x441>
test   %r14d,%r14d
jne    26d8d <Fax4Decode+0x4cd>
xor    %r14d,%r14d
jmpq   26a26 <Fax4Decode+0x166>
cmp    %r15,%r12
jae    26c90 <Fax4Decode+0x3d0>
add    $0xfffffffffffffffc,%r15
movslq (%r15),%rcx
sub    %ecx,%r13d
cmp    %ebx,%r13d
jg     26c7c <Fax4Decode+0x3bc>
cmp    %ebx,%r13d
jl     26de0 <Fax4Decode+0x520>
cmp    %ebx,%r13d
jg     26e26 <Fax4Decode+0x566>
mov    %r9,%r13
mov    %rbx,%r9
mov    %rdx,%rbx
mov    %r12,%rdx
mov    %rsi,%r12
mov    %rdx,%rsi
jmpq   26a59 <Fax4Decode+0x199>
test   %r12d,%r12d
je     26e4c <Fax4Decode+0x58c>
mov    $0xd,%r12d
jmpq   26bca <Fax4Decode+0x30a>
cmp    %rdx,%r10
ja     26e54 <Fax4Decode+0x594>
mov    %rdx,%r8
mov    $0xd,%r12d
jmpq   26bca <Fax4Decode+0x30a>
mov    -0x8(%rbp),%rbx
mov    -0x10(%rbp),%r12
mov    -0x18(%rbp),%r13
mov    -0x20(%rbp),%r14
mov    -0x28(%rbp),%r15
mov    $0xffffffffffffffff,%rax
leaveq 
retq   
cmp    $0x6,%r12d
jg     26d2a <Fax4Decode+0x46a>
cmp    %r11,%r8
jae    26e73 <Fax4Decode+0x5b3>
movzbl (%r8),%ecx
movzbl (%r10,%rcx,1),%r10d
mov    %r12,%rcx
shl    %cl,%r10d
or     %r10d,%ebx
add    $0x1,%r8
lea    0x8(%rcx),%r12d
mov    %r12,-0xc8(%rbp)
mov    %rbx,%rcx
and    $0x7f,%ecx
mov    %ecx,%r10d
movzbl 0x1(%rdi,%r10,8),%ecx
sub    %ecx,%r12d
shr    %cl,%ebx
mov    %rcx,-0xc0(%rbp)
movzbl (%rdi,%r10,8),%ecx
add    $0xffffffff,%ecx
cmp    $0xb,%ecx
ja     269e0 <Fax4Decode+0x120>
lea    0x2e358(%rip),%r11        # 550bc <module.11+0x168>
movslq (%r11,%rcx,4),%rcx
add    %r11,%rcx
jmpq   *%rcx
cmp    %rsi,%r15
je     2708f <Fax4Decode+0x7cf>
mov    %rbx,-0x78(%rbp)
mov    %r8,-0x100(%rbp)
mov    %r12,-0xb8(%rbp)
jmpq   27078 <Fax4Decode+0x7b8>
lea    0x0(%r13,%r14,1),%eax
cmp    %r9d,%eax
jge    26dd1 <Fax4Decode+0x511>
test   %r12d,%r12d
jg     26dbd <Fax4Decode+0x4fd>
cmp    %r11,%r8
jae    270f3 <Fax4Decode+0x833>
movzbl (%r8),%eax
movzbl (%rax,%r10,1),%eax
mov    %r12,%rcx
shl    %cl,%eax
or     %eax,%ebx
lea    0x8(%rcx),%r12d
add    $0x1,%r8
mov    %rbx,%rax
and    $0x1,%eax
test   %eax,%eax
je     269e0 <Fax4Decode+0x120>
shr    %ebx
add    $0xffffffff,%r12d
mov    %r14d,(%r15)
add    $0x4,%r15
xor    %r14d,%r14d
jmpq   26a26 <Fax4Decode+0x166>
test   %r13d,%r13d
jns    26de8 <Fax4Decode+0x528>
xor    %r13d,%r13d
mov    %r15,%rcx
sub    %r12,%rcx
and    $0x4,%rcx
test   %rcx,%rcx
jle    26e02 <Fax4Decode+0x542>
movl   $0x0,(%r15)
add    $0x4,%r15
mov    %rbx,%rcx
sub    %r13d,%ecx
mov    %ecx,(%r15)
add    $0x4,%r15
mov    %r9,%r13
mov    %rbx,%r9
mov    %rdx,%rbx
mov    %r12,%rdx
mov    %rsi,%r12
mov    %rdx,%rsi
jmpq   26a59 <Fax4Decode+0x199>
mov    %ebx,(%r15)
movl   $0x0,0x4(%r15)
add    $0x8,%r15
mov    %r9,%r13
mov    %rbx,%r9
mov    %rdx,%rbx
mov    %r12,%rdx
mov    %rsi,%r12
mov    %rdx,%rsi
jmpq   26a59 <Fax4Decode+0x199>
xor    %r12d,%r12d
jmpq   26bca <Fax4Decode+0x30a>
movzbl (%rdx),%edx
movzbl (%r11,%rdx,1),%edx
mov    %rcx,%r10
mov    %r12,%rcx
shl    %cl,%edx
or     %edx,%ebx
lea    0x10(%r10),%r12d
add    $0x2,%r8
jmpq   26bca <Fax4Decode+0x30a>
test   %r12d,%r12d
je     27107 <Fax4Decode+0x847>
mov    %rcx,%r12
jmpq   26d2a <Fax4Decode+0x46a>
sub    %r13d,%r9d
mov    %r9d,(%r15)
mov    -0x88(%rbp),%rax
mov    0x90(%rax),%edx
lea    0x2eef2(%rip),%rdi        # 55d90 <module.78>
mov    -0x80(%rbp),%rax
mov    %r13,%rcx
mov    %rbx,-0x50(%rbp)
mov    %rsi,-0x90(%rbp)
mov    %rax,%rsi
mov    %r15,%rbx
mov    %r8,%r15
callq  223b0 <Fax3Extension>
lea    0x4(%rbx),%rax
mov    %r15,%r8
mov    %rax,%r15
mov    -0x90(%rbp),%rsi
mov    -0xa8(%rbp),%r9
mov    -0x50(%rbp),%rbx
jmpq   26a26 <Fax4Decode+0x166>
mov    %r9,%rax
sub    %r13d,%eax
mov    %eax,(%r15)
add    $0x4,%r15
cmp    $0x3,%r12d
jg     26f20 <Fax4Decode+0x660>
mov    -0xe0(%rbp),%rax
cmp    %rax,%r8
jae    27162 <Fax4Decode+0x8a2>
movzbl (%r8),%eax
mov    -0xd0(%rbp),%rcx
movzbl (%rcx,%rax,1),%eax
mov    %r12,%rcx
shl    %cl,%eax
or     %eax,%ebx
lea    0x8(%rcx),%r12d
add    $0x1,%r8
mov    %rbx,%rax
and    $0xf,%eax
test   %eax,%eax
je     26f76 <Fax4Decode+0x6b6>
mov    -0x88(%rbp),%rax
mov    0x90(%rax),%edx
lea    0x2ee52(%rip),%rdi        # 55d90 <module.78>
mov    -0x80(%rbp),%rax
mov    %r13,%rcx
mov    %rsi,-0x98(%rbp)
mov    %r15,-0x110(%rbp)
mov    %rax,%rsi
mov    %r8,%r15
callq  22340 <Fax3Unexpected>
mov    %r15,%r8
mov    -0x110(%rbp),%r15
mov    -0x98(%rbp),%rsi
mov    -0xa8(%rbp),%r9
shr    $0x4,%ebx
add    $0xfffffffc,%r12d
pushq  -0x38(%rbp)
popq   -0x40(%rbp)
jmpq   26a26 <Fax4Decode+0x166>
cmp    %rsi,%r15
jne    2717f <Fax4Decode+0x8bf>
mov    %rax,%rcx
add    (%rdx),%ecx
mov    %rcx,%rax
add    0x4(%rdx),%eax
mov    %rcx,%r10
sub    %r13d,%r10d
add    %r10d,%r14d
add    $0x8,%rdx
mov    %rcx,%r13
mov    -0xe0(%rbp),%r11
mov    -0xd0(%rbp),%r10
mov    $0x7,%ecx
jmpq   26c5b <Fax4Decode+0x39b>
sub    %rsi,%r15
and    $0x4,%r15
test   %r15,%r15
jle    2718f <Fax4Decode+0x8cf>
mov    %rdx,-0x100(%rbp)
mov    %rax,-0x78(%rbp)
mov    -0xf8(%rbp),%rax
mov    -0xe0(%rbp),%r11
mov    -0xd0(%rbp),%r10
mov    $0xd,%edx
jmpq   271cd <Fax4Decode+0x90d>
cmp    %rsi,%r15
jne    2720b <Fax4Decode+0x94b>
mov    %rax,%rcx
mov    %rcx,%rax
sub    %r13d,%eax
add    %r14d,%eax
mov    %eax,(%r15)
mov    %rcx,%rax
add    (%rdx),%eax
add    $0x4,%r15
add    $0x4,%rdx
mov    %rcx,%r13
mov    -0xe0(%rbp),%r11
mov    -0xd0(%rbp),%r10
mov    $0x7,%ecx
xor    %r14d,%r14d
jmpq   26c5b <Fax4Decode+0x39b>
cmp    %rsi,%r15
je     27249 <Fax4Decode+0x989>
mov    %rbx,-0x60(%rbp)
mov    %r8,-0xd8(%rbp)
mov    %r12,-0xb8(%rbp)
jmpq   27232 <Fax4Decode+0x972>
cmp    %r9d,%eax
jge    2728a <Fax4Decode+0x9ca>
lea    0x8(%rdx),%rbx
mov    0x4(%rdx),%ecx
add    (%rdx),%ecx
add    %ecx,%eax
mov    %rbx,%rdx
cmp    %eax,%r13d
jge    27061 <Fax4Decode+0x7a1>
mov    -0xb8(%rbp),%r12
mov    -0x100(%rbp),%r8
mov    -0x78(%rbp),%rbx
mov    0x4(%rdi,%r10,8),%ecx
lea    0x0(%r13,%rcx,1),%r11d
cmp    %r11d,%eax
jg     270b0 <Fax4Decode+0x7f0>
cmp    %r11d,%eax
jl     272a1 <Fax4Decode+0x9e1>
cmp    %rsi,%r15
jne    272a1 <Fax4Decode+0x9e1>
mov    %rax,%r11
sub    %r13d,%r11d
sub    %ecx,%r11d
lea    (%r14,%r11,1),%ecx
mov    %ecx,(%r15)
movslq 0x4(%rdi,%r10,8),%rcx
mov    %rax,%r13
sub    %ecx,%r13d
add    $0xfffffffffffffffc,%rdx
movslq (%rdx),%rcx
sub    %ecx,%eax
add    $0x4,%r15
mov    -0xe0(%rbp),%r11
mov    -0xd0(%rbp),%r10
mov    $0x7,%ecx
xor    %r14d,%r14d
jmpq   26c5b <Fax4Decode+0x39b>
test   %r12d,%r12d
je     272ec <Fax4Decode+0xa2c>
mov    $0x1,%r12d
jmpq   26dbd <Fax4Decode+0x4fd>
xor    %r12d,%r12d
mov    %r12,-0xf8(%rbp)
mov    %r8,-0xe8(%rbp)
mov    %rbx,-0xa8(%rbp)
mov    -0x88(%rbp),%rax
mov    0x90(%rax),%edx
lea    0x2ec5d(%rip),%rdi        # 55d90 <module.78>
mov    %rsi,-0x108(%rbp)
mov    %r14,%rbx
mov    %rax,%r14
mov    %r15,%r12
mov    %r9,%r15
mov    -0x80(%rbp),%rsi
mov    %r13,%rcx
callq  224b0 <Fax3PrematureEOF>
test   %ebx,%ebx
jne    272f4 <Fax4Decode+0xa34>
mov    %r12,%r9
jmpq   272fd <Fax4Decode+0xa3d>
mov    -0xc0(%rbp),%rcx
mov    -0xc8(%rbp),%rax
cmp    %eax,%ecx
je     2710a <Fax4Decode+0x84a>
mov    $0x4,%r12d
jmpq   26f20 <Fax4Decode+0x660>
mov    %rbx,-0x50(%rbp)
mov    %r12,-0x110(%rbp)
jmpq   27353 <Fax4Decode+0xa93>
mov    %rdx,-0x100(%rbp)
mov    %rax,-0x78(%rbp)
mov    -0xe8(%rbp),%rax
mov    $0xc,%edx
mov    -0xe0(%rbp),%r11
mov    -0xd0(%rbp),%r10
jmpq   2737f <Fax4Decode+0xabf>
cmp    $0xa,%cl
jne    273bc <Fax4Decode+0xafc>
movslq 0x4(%rax,%rdi,8),%rcx
add    %ecx,%r14d
add    %ecx,%r13d
cmp    $0xc,%r12d
jg     273d6 <Fax4Decode+0xb16>
cmp    %r8,%r11
jbe    273ca <Fax4Decode+0xb0a>
movzbl (%r8),%ecx
movzbl (%r10,%rcx,1),%edi
mov    %r12,%rcx
shl    %cl,%edi
or     %edi,%ebx
lea    0x1(%r8),%r12
lea    0x8(%rcx),%edi
cmp    $0xc,%edi
jle    27434 <Fax4Decode+0xb74>
mov    %r12,%r8
mov    %rdi,%r12
jmpq   273d6 <Fax4Decode+0xb16>
mov    %rbx,-0x58(%rbp)
mov    %r12,-0xb0(%rbp)
jmpq   2745c <Fax4Decode+0xb9c>
cmp    %r9d,%eax
jge    27474 <Fax4Decode+0xbb4>
lea    0x8(%rdx),%rbx
mov    0x4(%rdx),%ecx
add    (%rdx),%ecx
add    %ecx,%eax
mov    %rbx,%rdx
cmp    %eax,%r13d
jge    2721b <Fax4Decode+0x95b>
mov    -0xb8(%rbp),%r12
mov    -0xd8(%rbp),%r8
mov    -0x60(%rbp),%rbx
mov    %rax,%rcx
sub    %r13d,%ecx
mov    %rcx,%r11
add    0x4(%rdi,%r10,8),%r11d
add    %r14d,%r11d
mov    %r11d,(%r15)
add    (%rdx),%eax
add    0x4(%rdi,%r10,8),%ecx
add    %ecx,%r13d
add    $0x4,%r15
add    $0x4,%rdx
mov    -0xe0(%rbp),%r11
mov    -0xd0(%rbp),%r10
mov    $0x7,%ecx
xor    %r14d,%r14d
jmpq   26c5b <Fax4Decode+0x39b>
mov    -0xb8(%rbp),%r12
mov    -0x100(%rbp),%r8
mov    -0x78(%rbp),%rbx
jmpq   2708f <Fax4Decode+0x7cf>
mov    -0x88(%rbp),%rax
mov    0x90(%rax),%edx
lea    0x2eadb(%rip),%rdi        # 55d90 <module.78>
mov    -0x80(%rbp),%rax
mov    %r13,%rcx
mov    %rbx,-0x48(%rbp)
mov    %rsi,-0x90(%rbp)
mov    %rax,%rsi
mov    %r8,%rbx
callq  22340 <Fax3Unexpected>
mov    %rbx,%r8
mov    -0x90(%rbp),%rsi
mov    -0xa8(%rbp),%r9
mov    -0x48(%rbp),%rbx
jmpq   26a26 <Fax4Decode+0x166>
xor    %r12d,%r12d
jmpq   2710a <Fax4Decode+0x84a>
mov    %ebx,(%r12)
lea    0x4(%r12),%r9
cmp    %r15d,%r13d
jne    2748b <Fax4Decode+0xbcb>
mov    %r15,%rax
mov    %r9,%r15
mov    %rax,%r9
mov    -0xa8(%rbp),%rbx
mov    -0xe8(%rbp),%r8
mov    -0xf8(%rbp),%r12
mov    -0x108(%rbp),%rsi
mov    -0x70(%rbp),%rdi
mov    -0x40(%rbp),%rax
mov    -0x80(%rbp),%r13
jmpq   26b88 <Fax4Decode+0x2c8>
cmp    %r9d,%eax
jge    274da <Fax4Decode+0xc1a>
lea    0x8(%rdx),%rbx
mov    0x4(%rdx),%ecx
add    (%rdx),%ecx
add    %ecx,%eax
mov    %rbx,%rdx
cmp    %eax,%r13d
jge    2733c <Fax4Decode+0xa7c>
mov    %rax,%rcx
mov    -0x110(%rbp),%r12
mov    -0x50(%rbp),%rbx
jmpq   26f94 <Fax4Decode+0x6d4>
cmp    $0x9,%cl
jne    274ed <Fax4Decode+0xc2d>
movslq 0x4(%rax,%rdi,8),%rcx
add    %ecx,%r14d
add    %ecx,%r13d
cmp    $0xb,%r12d
jg     27507 <Fax4Decode+0xc47>
cmp    %r11,%r8
jae    274fb <Fax4Decode+0xc3b>
movzbl (%r8),%ecx
movzbl (%r10,%rcx,1),%edi
mov    %r12,%rcx
shl    %cl,%edi
or     %edi,%ebx
lea    0x1(%r8),%rdi
lea    0x8(%rcx),%r12d
cmp    $0xb,%r12d
jle    27565 <Fax4Decode+0xca5>
mov    %rdi,%r8
jmpq   27507 <Fax4Decode+0xc47>
cmp    $0xb,%cl
je     271c2 <Fax4Decode+0x902>
jmpq   27582 <Fax4Decode+0xcc2>
test   %r12d,%r12d
je     275cc <Fax4Decode+0xd0c>
mov    %rdx,%r12
mov    %rbx,%rcx
and    $0x1fff,%ecx
mov    %ecx,%edi
movzbl 0x1(%rax,%rdi,8),%ecx
sub    %ecx,%r12d
shr    %cl,%ebx
movzbl (%rax,%rdi,8),%ecx
cmp    $0x9,%cl
ja     271b9 <Fax4Decode+0x8f9>
cmp    $0x8,%cl
jne    27582 <Fax4Decode+0xcc2>
add    0x4(%rax,%rdi,8),%r14d
mov    -0x110(%rbp),%rcx
mov    %r14d,(%rcx)
add    0x4(%rax,%rdi,8),%r13d
lea    0x4(%rcx),%rax
mov    %rax,-0xf0(%rbp)
mov    -0xe8(%rbp),%rax
mov    $0xc,%edx
xor    %r14d,%r14d
jmpq   275f4 <Fax4Decode+0xd34>
cmp    %r12,%r11
ja     27649 <Fax4Decode+0xd89>
mov    %r12,%r8
mov    %rdx,%r12
jmp    273d6 <Fax4Decode+0xb16>
cmp    %r9d,%eax
jge    2766f <Fax4Decode+0xdaf>
lea    0x8(%rdx),%rbx
mov    0x4(%rdx),%ecx
add    (%rdx),%ecx
add    %ecx,%eax
mov    %rbx,%rdx
cmp    %eax,%r13d
jge    27445 <Fax4Decode+0xb85>
mov    %rax,%rcx
mov    -0xb0(%rbp),%r12
mov    -0x58(%rbp),%rbx
jmpq   2700a <Fax4Decode+0x74a>
mov    -0xb8(%rbp),%r12
mov    -0xd8(%rbp),%r8
mov    -0x60(%rbp),%rbx
jmpq   27249 <Fax4Decode+0x989>
mov    %r15,%r12
mov    %r9,%r15
mov    0x90(%r14),%edx
mov    -0x80(%rbp),%rbx
mov    %rbx,%rsi
mov    %r13,%rcx
mov    %r12,%r8
lea    0x2e8e4(%rip),%rdi        # 55d90 <module.78>
callq  22420 <Fax3BadLength>
mov    -0xa8(%rbp),%r9
mov    -0xe8(%rbp),%r8
mov    -0xf8(%rbp),%rdx
mov    -0x108(%rbp),%rsi
mov    -0x70(%rbp),%rdi
mov    -0x40(%rbp),%rax
jmpq   27691 <Fax4Decode+0xdd1>
mov    %rax,%rcx
mov    -0x110(%rbp),%r12
mov    -0x50(%rbp),%rbx
jmpq   26f94 <Fax4Decode+0x6d4>
cmp    $0xb,%cl
je     27374 <Fax4Decode+0xab4>
jmpq   276c5 <Fax4Decode+0xe05>
test   %r12d,%r12d
je     2770f <Fax4Decode+0xe4f>
mov    %rdx,%r12
mov    %rbx,%rcx
and    $0xfff,%ecx
mov    %ecx,%edi
movzbl 0x1(%rax,%rdi,8),%ecx
sub    %ecx,%r12d
shr    %cl,%ebx
movzbl (%rax,%rdi,8),%ecx
cmp    $0x8,%cl
ja     2736b <Fax4Decode+0xaab>
cmp    $0x7,%cl
jne    276c5 <Fax4Decode+0xe05>
add    0x4(%rax,%rdi,8),%r14d
mov    -0x110(%rbp),%rcx
mov    %r14d,(%rcx)
add    0x4(%rax,%rdi,8),%r13d
lea    0x4(%rcx),%rax
mov    %rax,-0xf0(%rbp)
mov    -0xf8(%rbp),%rdx
mov    $0xd,%eax
xor    %r14d,%r14d
jmpq   27737 <Fax4Decode+0xe77>
cmp    %r11,%rdi
jb     277af <Fax4Decode+0xeef>
mov    %rdi,%r8
mov    %rdx,%r12
jmp    27507 <Fax4Decode+0xc47>
pushq  -0xf0(%rbp)
popq   -0x110(%rbp)
mov    -0x88(%rbp),%rax
mov    0x90(%rax),%edx
lea    0x2e7fa(%rip),%rdi        # 55d90 <module.78>
mov    -0x80(%rbp),%rax
mov    %r13,%rcx
mov    %rsi,-0xa0(%rbp)
mov    %rax,%rsi
mov    %r8,%r15
callq  22340 <Fax3Unexpected>
mov    %r15,%r8
mov    -0x110(%rbp),%r15
mov    -0xa0(%rbp),%rsi
mov    -0xa8(%rbp),%r9
jmpq   26a26 <Fax4Decode+0x166>
mov    -0x110(%rbp),%r15
xor    %r12d,%r12d
jmpq   2710a <Fax4Decode+0x84a>
cmp    $0x9,%cl
je     275e9 <Fax4Decode+0xd29>
cmp    $0xb,%cl
jne    277d1 <Fax4Decode+0xf11>
movslq 0x4(%rax,%rdi,8),%rcx
add    %ecx,%r14d
add    %ecx,%r13d
cmp    $0xb,%r12d
jle    277e2 <Fax4Decode+0xf22>
mov    %rbx,%rcx
and    $0xfff,%ecx
mov    %ecx,%edi
movzbl 0x1(%rax,%rdi,8),%ecx
sub    %ecx,%r12d
shr    %cl,%ebx
movzbl (%rax,%rdi,8),%ecx
cmp    $0x8,%cl
ja     275db <Fax4Decode+0xd1b>
cmp    $0x7,%cl
jne    276b9 <Fax4Decode+0xdf9>
add    0x4(%rax,%rdi,8),%r14d
mov    -0xf0(%rbp),%rcx
mov    %r14d,(%rcx)
add    0x4(%rax,%rdi,8),%r13d
mov    -0x110(%rbp),%rax
lea    0x8(%rax),%r15
jmpq   27787 <Fax4Decode+0xec7>
movzbl (%r12),%r12d
movzbl (%r10,%r12,1),%r12d
mov    %rdi,%r15
mov    %rcx,%rdi
mov    %r15,%rcx
shl    %cl,%r12d
or     %r12d,%ebx
add    $0x2,%r8
lea    0x10(%rdi),%r12d
jmpq   273d6 <Fax4Decode+0xb16>
mov    %rax,%rcx
mov    -0xb0(%rbp),%r12
mov    -0x58(%rbp),%rbx
jmpq   2700a <Fax4Decode+0x74a>
cmp    %r15,%rsi
jae    27696 <Fax4Decode+0xdd6>
add    $0xfffffffffffffffc,%r15
movslq (%r15),%rcx
sub    %ecx,%r13d
cmp    %r12d,%r13d
jg     27682 <Fax4Decode+0xdc2>
cmp    %r12d,%r13d
jl     27816 <Fax4Decode+0xf56>
cmp    %r12d,%r13d
jg     27856 <Fax4Decode+0xf96>
mov    %rbx,%r13
mov    %r9,%rbx
mov    %r12,%r9
mov    %rdx,%r12
jmpq   26b88 <Fax4Decode+0x2c8>
pushq  -0xf0(%rbp)
popq   -0x110(%rbp)
mov    -0x88(%rbp),%rax
mov    0x90(%rax),%edx
lea    0x2e6b7(%rip),%rdi        # 55d90 <module.78>
mov    -0x80(%rbp),%rax
mov    %r13,%rcx
mov    %rsi,-0xa0(%rbp)
mov    %rax,%rsi
mov    %r8,%r15
callq  22340 <Fax3Unexpected>
mov    %r15,%r8
mov    -0x110(%rbp),%r15
mov    -0xa0(%rbp),%rsi
mov    -0xa8(%rbp),%r9
jmpq   26a26 <Fax4Decode+0x166>
mov    -0x110(%rbp),%r15
xor    %r12d,%r12d
jmpq   2710a <Fax4Decode+0x84a>
cmp    $0xa,%cl
je     2772c <Fax4Decode+0xe6c>
cmp    $0xb,%cl
jne    27876 <Fax4Decode+0xfb6>
movslq 0x4(%rdx,%rdi,8),%rcx
add    %ecx,%r14d
add    %ecx,%r13d
cmp    $0xc,%r12d
jle    27887 <Fax4Decode+0xfc7>
mov    %rbx,%rcx
and    $0x1fff,%ecx
mov    %ecx,%edi
movzbl 0x1(%rdx,%rdi,8),%ecx
sub    %ecx,%r12d
shr    %cl,%ebx
movzbl (%rdx,%rdi,8),%ecx
cmp    $0x9,%cl
ja     2771e <Fax4Decode+0xe5e>
cmp    $0x8,%cl
jne    27576 <Fax4Decode+0xcb6>
add    0x4(%rdx,%rdi,8),%r14d
mov    -0xf0(%rbp),%rax
mov    %r14d,(%rax)
add    0x4(%rdx,%rdi,8),%r13d
mov    -0x110(%rbp),%rax
lea    0x8(%rax),%r15
cmp    %r15,%rsi
jne    278b3 <Fax4Decode+0xff3>
mov    -0x78(%rbp),%rax
mov    -0x100(%rbp),%rdx
mov    -0x108(%rbp),%rdi
mov    $0x7,%ecx
xor    %r14d,%r14d
jmpq   26c5b <Fax4Decode+0x39b>
movzbl (%rdi),%edi
movzbl (%r10,%rdi,1),%edi
mov    %r12,%r15
mov    %rcx,%r12
mov    %r15,%rcx
shl    %cl,%edi
or     %edi,%ebx
add    $0x2,%r8
add    $0x10,%r12d
jmpq   27507 <Fax4Decode+0xc47>
pushq  -0xf0(%rbp)
popq   -0x110(%rbp)
jmpq   276c5 <Fax4Decode+0xe05>
cmp    %r8,%r11
jbe    278d6 <Fax4Decode+0x1016>
movzbl (%r8),%ecx
movzbl (%r10,%rcx,1),%edi
mov    %r12,%rcx
shl    %cl,%edi
or     %edi,%ebx
lea    0x1(%r8),%r12
lea    0x8(%rcx),%edi
cmp    $0xb,%edi
jle    278e7 <Fax4Decode+0x1027>
mov    %r12,%r8
mov    %rdi,%r12
jmpq   275fe <Fax4Decode+0xd3e>
test   %r13d,%r13d
jns    2781e <Fax4Decode+0xf5e>
xor    %r13d,%r13d
mov    %r15,%rcx
sub    %rsi,%rcx
and    $0x4,%rcx
test   %rcx,%rcx
jle    27838 <Fax4Decode+0xf78>
movl   $0x0,(%r15)
add    $0x4,%r15
mov    %r12,%rcx
sub    %r13d,%ecx
mov    %ecx,(%r15)
add    $0x4,%r15
mov    %rbx,%r13
mov    %r9,%rbx
mov    %r12,%r9
mov    %rdx,%r12
jmpq   26b88 <Fax4Decode+0x2c8>
mov    %r12d,(%r15)
movl   $0x0,0x4(%r15)
add    $0x8,%r15
mov    %rbx,%r13
mov    %r9,%rbx
mov    %r12,%r9
mov    %rdx,%r12
jmpq   26b88 <Fax4Decode+0x2c8>
pushq  -0xf0(%rbp)
popq   -0x110(%rbp)
jmpq   27582 <Fax4Decode+0xcc2>
cmp    %r11,%r8
jae    278fb <Fax4Decode+0x103b>
movzbl (%r8),%ecx
movzbl (%r10,%rcx,1),%edi
mov    %r12,%rcx
shl    %cl,%edi
or     %edi,%ebx
lea    0x1(%r8),%r12
lea    0x8(%rcx),%edi
cmp    $0xc,%edi
jle    2790c <Fax4Decode+0x104c>
mov    %r12,%r8
mov    %rdi,%r12
jmpq   27741 <Fax4Decode+0xe81>
mov    %r12,-0xb0(%rbp)
mov    %r8,-0xd8(%rbp)
mov    %rbx,-0x58(%rbp)
mov    %r15,-0x60(%rbp)
mov    -0x78(%rbp),%rax
mov    -0x100(%rbp),%rdx
jmp    27937 <Fax4Decode+0x1077>
test   %r12d,%r12d
je     2796d <Fax4Decode+0x10ad>
mov    %rdx,%r12
jmpq   275fe <Fax4Decode+0xd3e>
cmp    %r12,%r11
ja     2797c <Fax4Decode+0x10bc>
mov    %r12,%r8
mov    %rdx,%r12
jmpq   275fe <Fax4Decode+0xd3e>
test   %r12d,%r12d
je     279a2 <Fax4Decode+0x10e2>
mov    %rax,%r12
jmpq   27741 <Fax4Decode+0xe81>
cmp    %r11,%r12
jb     279b1 <Fax4Decode+0x10f1>
mov    %r12,%r8
mov    %rax,%r12
jmpq   27741 <Fax4Decode+0xe81>
cmp    %r9d,%eax
jge    279d7 <Fax4Decode+0x1117>
lea    0x8(%rdx),%rdi
mov    0x4(%rdx),%ecx
add    (%rdx),%ecx
add    %ecx,%eax
mov    %rdi,%rdx
cmp    %r13d,%eax
jle    27920 <Fax4Decode+0x1060>
mov    -0x60(%rbp),%r15
mov    -0x58(%rbp),%rbx
mov    -0xd8(%rbp),%r8
mov    -0xb0(%rbp),%r12
mov    -0x108(%rbp),%rdi
mov    -0xe0(%rbp),%r11
mov    $0x7,%ecx
xor    %r14d,%r14d
jmpq   26c5b <Fax4Decode+0x39b>
mov    -0xf0(%rbp),%r15
xor    %r12d,%r12d
jmpq   2710a <Fax4Decode+0x84a>
movzbl (%r12),%r12d
movzbl (%r10,%r12,1),%r12d
mov    %rdi,%r15
mov    %rcx,%rdi
mov    %r15,%rcx
shl    %cl,%r12d
or     %r12d,%ebx
add    $0x2,%r8
lea    0x10(%rdi),%r12d
jmpq   275fe <Fax4Decode+0xd3e>
mov    -0xf0(%rbp),%r15
xor    %r12d,%r12d
jmpq   2710a <Fax4Decode+0x84a>
movzbl (%r12),%r12d
movzbl (%r10,%r12,1),%r12d
mov    %rdi,%r15
mov    %rcx,%rdi
mov    %r15,%rcx
shl    %cl,%r12d
or     %r12d,%ebx
add    $0x2,%r8
lea    0x10(%rdi),%r12d
jmpq   27741 <Fax4Decode+0xe81>
mov    -0x60(%rbp),%r15
mov    -0x58(%rbp),%rbx
mov    -0xd8(%rbp),%r8
mov    -0xb0(%rbp),%r12
mov    -0x108(%rbp),%rdi
mov    -0xe0(%rbp),%r11
mov    $0x7,%ecx
xor    %r14d,%r14d
jmpq   26c5b <Fax4Decode+0x39b>
nopl   0x0(%rax,%rax,1)

0000000000027a10 <Fax4Encode>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    %rdx,%rax
mov    %r12,%r8
mov    %r13,%r9
mov    %rdi,%r13
mov    %r14,%r10
mov    %r15,%r11
mov    %rsi,%r15
xor    %r12d,%r12d
mov    0x350(%r13),%r14
mov    0x8(%r14),%rcx
cqto   
mov    %rbx,%rsi
mov    %rax,%rbx
idiv   %rcx
test   %rdx,%rdx
jne    27a61 <Fax4Encode+0x51>
mov    %rsi,-0x8(%rbp)
mov    %r8,-0x10(%rbp)
mov    %r9,-0x18(%rbp)
mov    %r10,-0x20(%rbp)
mov    %r11,-0x28(%rbp)
jmp    27ac7 <Fax4Encode+0xb7>
xor    %eax,%eax
mov    0x3b8(%r13),%rdi
mov    %rsi,%rbx
mov    %r8,%r12
mov    %r9,%r13
mov    %r10,%r14
mov    %r11,%r15
lea    0x2e31b(%rip),%rsi        # 55d9b <module.79>
lea    0x2e0da(%rip),%rdx        # 55b61 <module.44+0xb>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
mov    0x80(%r14),%rdx
mov    0x10(%r14),%ecx
mov    %r13,%rdi
mov    %r15,%rsi
callq  256e0 <Fax3Encode2DRow>
test   %eax,%eax
je     27ae7 <Fax4Encode+0xd7>
mov    0x80(%r14),%rdi
mov    0x8(%r14),%rdx
mov    %r15,%rsi
callq  8790 <_TIFFmemcpy@plt>
mov    0x8(%r14),%rax
sub    %rax,%rbx
add    %rax,%r15
test   %rbx,%rbx
jg     27a90 <Fax4Encode+0x80>
mov    $0x1,%eax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
mov    %r12,%rax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   

0000000000027b00 <Fax4PostEncode>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    $0x1,%esi
mov    $0xc,%edx
mov    0x350(%rdi),%r15
mov    %rdi,%r14
callq  24970 <Fax3PutBits>
mov    %r14,%rdi
mov    $0x1,%esi
mov    $0xc,%edx
callq  24970 <Fax3PutBits>
movslq 0x4c(%r15),%rax
cmp    $0x8,%eax
jne    27b53 <Fax4PostEncode+0x53>
mov    $0x1,%eax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
mov    0x370(%r14),%rax
cmp    0x390(%r14),%rax
jg     27b6b <Fax4PostEncode+0x6b>
mov    %r14,%rdi
callq  86e0 <TIFFFlushData1@plt>
mov    0x388(%r14),%rcx
lea    0x1(%rcx),%rax
mov    %rax,0x388(%r14)
movzbl 0x48(%r15),%eax
mov    %al,(%rcx)
mov    0x390(%r14),%rax
add    $0x1,%rax
mov    %rax,0x390(%r14)
movl   $0x0,0x48(%r15)
movl   $0x8,0x4c(%r15)
mov    $0x1,%eax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)

0000000000027bc0 <Fax3DecodeRLE>:
push   %rbp
mov    %rsp,%rbp
sub    $0xb0,%rsp
mov    %rsi,-0x78(%rbp)
mov    0x350(%rdi),%r11
mov    0x10(%r11),%eax
mov    %rax,-0xb0(%rbp)
mov    %rdx,%rax
mov    %r12,%r9
mov    %rbx,%r12
mov    0x40(%r11),%rsi
mov    %rsi,-0x60(%rbp)
movslq 0x4(%r11),%rcx
mov    0x8(%r11),%r8
cqto   
mov    %rax,%rbx
idiv   %r8
test   %rdx,%rdx
jne    27c9e <Fax3DecodeRLE+0xde>
mov    0x70(%r11),%rdx
mov    %rdx,-0x88(%rbp)
movslq 0x50(%r11),%rax
mov    %rax,-0x8(%rbp)
movslq 0x4c(%r11),%r8
mov    %r15,-0x30(%rbp)
mov    0x48(%r11),%r15d
mov    %r14,-0x28(%rbp)
mov    0x388(%rdi),%r14
mov    %r13,-0x20(%rbp)
mov    %r14,%r10
add    0x390(%rdi),%r10
mov    %r9,-0x18(%rbp)
mov    %r10,-0x58(%rbp)
mov    0x52346(%rip),%rax        # 79f98 <TIFFFaxWhiteTable@@Base+0x23ddc>
mov    %r12,-0x10(%rbp)
mov    %rax,-0xa0(%rbp)
mov    0x5235c(%rip),%r9        # 79fc0 <TIFFFaxBlackTable@@Base+0x1be04>
mov    %rdi,-0x90(%rbp)
mov    %r9,-0xa8(%rbp)
mov    %rcx,%rdi
and    $0x4,%edi
mov    %rdi,-0x40(%rbp)
and    $0x8,%ecx
mov    %rcx,-0x50(%rbp)
xor    %r13d,%r13d
mov    %r11,-0x98(%rbp)
mov    $0xc,%edi
mov    -0xb0(%rbp),%r12
jmpq   27d32 <Fax3DecodeRLE+0x172>
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
mov    %r9,%rbx
lea    0x2dd68(%rip),%rdx        # 55a19 <module.29+0xd>
lea    0x2e0ee(%rip),%rsi        # 55da6 <module.80>
callq  8a00 <TIFFErrorExt@plt>
mov    %r12,%rcx
mov    %rbx,%r12
mov    %rcx,%rbx
mov    $0xffffffffffffffff,%rax
leaveq 
retq   
mov    %r13,%r8
and    $0xfffffff8,%r8d
and    $0x7,%r13d
mov    %r13,%rcx
shr    %cl,%r15d
movslq 0x90(%r12),%rax
add    $0x1,%eax
mov    %eax,0x90(%r12)
mov    0x8(%r12),%rax
sub    %rax,%rbx
mov    -0x78(%rbp),%rcx
add    %rcx,%rax
mov    %rax,-0x78(%rbp)
mov    -0x88(%rbp),%rdx
mov    -0x58(%rbp),%r10
mov    -0xa0(%rbp),%rax
mov    -0x60(%rbp),%rsi
mov    -0xa8(%rbp),%r9
mov    $0xc,%edi
xor    %r13d,%r13d
mov    -0xb0(%rbp),%r12
test   %rbx,%rbx
jg     27d8e <Fax3DecodeRLE+0x1ce>
mov    -0x98(%rbp),%rax
mov    %r8d,0x4c(%rax)
mov    %r15d,0x48(%rax)
mov    -0x8(%rbp),%rcx
mov    %ecx,0x50(%rax)
mov    -0x90(%rbp),%rcx
mov    0x388(%rcx),%rax
sub    %r14,%rax
add    0x390(%rcx),%rax
mov    %rax,0x390(%rcx)
mov    %r14,0x388(%rcx)
mov    $0x1,%eax
mov    -0x10(%rbp),%rbx
mov    -0x18(%rbp),%r12
mov    -0x20(%rbp),%r13
mov    -0x28(%rbp),%r14
mov    -0x30(%rbp),%r15
leaveq 
retq   
mov    %rbx,-0x70(%rbp)
mov    %r13,%rbx
mov    %rbx,%r11
jmp    27de1 <Fax3DecodeRLE+0x221>
test   %r8d,%r8d
je     27e29 <Fax3DecodeRLE+0x269>
mov    %rdi,%r8
mov    %r15,%rcx
and    $0xfff,%ecx
mov    %ecx,%edi
movzbl 0x1(%rax,%rdi,8),%ecx
shr    %cl,%r15d
sub    %ecx,%r8d
movzbl (%rax,%rdi,8),%ecx
cmp    $0xa,%cl
jbe    27ef7 <Fax3DecodeRLE+0x337>
cmp    $0xb,%cl
jne    27fa8 <Fax3DecodeRLE+0x3e8>
movslq 0x4(%rax,%rdi,8),%rcx
add    %ecx,%ebx
add    %ecx,%r11d
mov    $0xc,%edi
cmp    $0xb,%r8d
jg     27da6 <Fax3DecodeRLE+0x1e6>
cmp    %r10,%r14
jae    27d9a <Fax3DecodeRLE+0x1da>
movzbl (%r14),%ecx
movzbl (%rcx,%rsi,1),%ecx
mov    %r8,%r13
mov    %rcx,%r8
mov    %r13,%rcx
shl    %cl,%r8d
mov    %rcx,%r13
or     %r8d,%r15d
lea    0x1(%r14),%r8
lea    0x8(%r13),%ecx
cmp    $0xb,%ecx
jle    27fbf <Fax3DecodeRLE+0x3ff>
mov    %r8,%r14
mov    %rcx,%r8
xor    %r13d,%r13d
jmp    27da6 <Fax3DecodeRLE+0x1e6>
mov    %r13,%r11
mov    -0x80(%rbp),%rdx
mov    %r15,-0xb0(%rbp)
mov    %r14,-0xa8(%rbp)
mov    %rdx,%r13
mov    %r11,%r15
mov    -0x98(%rbp),%r14
mov    0x90(%r14),%edx
lea    0x2df54(%rip),%rdi        # 55da6 <module.80>
mov    -0x90(%rbp),%rsi
mov    %rbx,%rcx
callq  224b0 <Fax3PrematureEOF>
test   %r15d,%r15d
je     27e6e <Fax3DecodeRLE+0x2ae>
mov    %r15d,0x0(%r13)
add    $0x4,%r13
cmp    %r12d,%ebx
jne    27fd6 <Fax3DecodeRLE+0x416>
mov    -0xa8(%rbp),%rax
mov    -0xb0(%rbp),%r8
mov    -0x88(%rbp),%rsi
mov    -0x78(%rbp),%rdi
mov    -0x8(%rbp),%rbx
mov    -0x90(%rbp),%r15
mov    %r12,%rcx
mov    %r8,%r12
mov    %r13,%rdx
mov    %rax,%r13
callq  *0x58(%r14)
movl   $0x0,0x4c(%r14)
mov    %r12d,0x48(%r14)
mov    %ebx,0x50(%r14)
mov    0x388(%r15),%rax
sub    %r13,%rax
add    0x390(%r15),%rax
mov    %rax,0x390(%r15)
mov    %r13,0x388(%r15)
mov    -0x10(%rbp),%rbx
mov    -0x18(%rbp),%r12
mov    -0x20(%rbp),%r13
mov    -0x28(%rbp),%r14
mov    -0x30(%rbp),%r15
mov    $0xffffffffffffffff,%rax
leaveq 
retq   
cmp    $0x7,%cl
je     2801b <Fax3DecodeRLE+0x45b>
cmp    $0x9,%cl
je     27dd2 <Fax3DecodeRLE+0x212>
mov    -0x98(%rbp),%rax
mov    0x90(%rax),%eax
lea    0x2de89(%rip),%rdi        # 55da6 <module.80>
mov    -0x90(%rbp),%rsi
mov    %rbx,%rcx
mov    %r8,-0x48(%rbp)
mov    %rdx,%r12
mov    %rax,%rdx
mov    %r11,%r13
callq  22340 <Fax3Unexpected>
mov    %r12,%rdx
mov    %r13,%r11
mov    -0x48(%rbp),%r13
mov    -0x78(%rbp),%rdi
mov    -0x8(%rbp),%rax
mov    -0xb0(%rbp),%r12
mov    %rax,-0x8(%rbp)
test   %r11d,%r11d
je     27f62 <Fax3DecodeRLE+0x3a2>
mov    %r11d,(%rdx)
add    $0x4,%rdx
cmp    %r12d,%ebx
jne    2804e <Fax3DecodeRLE+0x48e>
mov    -0x70(%rbp),%rbx
mov    -0x88(%rbp),%rsi
mov    -0x98(%rbp),%rax
mov    %r12,%rcx
mov    %rax,%r12
callq  *0x58(%r12)
mov    -0x40(%rbp),%rax
test   %eax,%eax
jg     27ccf <Fax3DecodeRLE+0x10f>
mov    -0x50(%rbp),%rax
test   %eax,%eax
jg     280af <Fax3DecodeRLE+0x4ef>
mov    %r13,%r8
jmpq   27ce0 <Fax3DecodeRLE+0x120>
cmp    $0xc,%cl
jne    27f09 <Fax3DecodeRLE+0x349>
mov    %r8,%r13
mov    -0x78(%rbp),%rdi
mov    $0x1,%eax
jmp    27f52 <Fax3DecodeRLE+0x392>
cmp    %r10,%r8
jb     280cd <Fax3DecodeRLE+0x50d>
mov    %r8,%r14
mov    %rdi,%r8
xor    %r13d,%r13d
jmpq   27da6 <Fax3DecodeRLE+0x1e6>
mov    0x90(%r14),%edx
mov    -0x90(%rbp),%r15
mov    %r15,%rsi
mov    %rbx,%rcx
mov    %r12,%r8
lea    0x2ddb2(%rip),%rdi        # 55da6 <module.80>
callq  22420 <Fax3BadLength>
mov    -0xa8(%rbp),%rax
mov    -0xb0(%rbp),%r8
mov    -0x88(%rbp),%rsi
mov    -0x78(%rbp),%rdi
mov    -0x8(%rbp),%rdx
jmpq   280f9 <Fax3DecodeRLE+0x539>
add    0x4(%rax,%rdi,8),%r11d
mov    %r11d,(%rdx)
lea    0x4(%rdx),%rcx
add    0x4(%rax,%rdi,8),%ebx
cmp    %r12d,%ebx
jge    28118 <Fax3DecodeRLE+0x558>
mov    %rcx,-0x80(%rbp)
mov    %rdx,-0x68(%rbp)
mov    $0xd,%edx
mov    -0x78(%rbp),%rdi
mov    -0x8(%rbp),%rax
jmpq   28146 <Fax3DecodeRLE+0x586>
mov    -0x98(%rbp),%r9
mov    0x90(%r9),%r10d
lea    0x2dd43(%rip),%rax        # 55da6 <module.80>
mov    -0x90(%rbp),%rsi
mov    %rbx,%rcx
mov    %r12,%r8
mov    %r13,-0x48(%rbp)
mov    %r15,-0x38(%rbp)
mov    %r14,-0x80(%rbp)
mov    %r9,%r13
mov    %rdi,%r14
mov    %rax,%rdi
mov    %rdx,%r15
mov    %r10,%rdx
callq  22420 <Fax3BadLength>
mov    %r15,%rdx
mov    -0x70(%rbp),%r8
mov    -0x88(%rbp),%rsi
mov    -0x80(%rbp),%rdi
mov    -0x38(%rbp),%rcx
mov    -0x48(%rbp),%r9
jmpq   281d6 <Fax3DecodeRLE+0x616>
mov    %r13,%rcx
and    $0xf,%ecx
shr    %cl,%r15d
and    $0xfffffff0,%r13d
test   %r13d,%r13d
je     28207 <Fax3DecodeRLE+0x647>
mov    %r13,%r8
jmpq   27ce0 <Fax3DecodeRLE+0x120>
movzbl (%r8),%edi
movzbl (%rsi,%rdi,1),%edi
shl    %cl,%edi
or     %edi,%r15d
add    $0x2,%r14
lea    0x10(%r13),%r8d
xor    %r13d,%r13d
jmpq   27da6 <Fax3DecodeRLE+0x1e6>
cmp    %r13,%rsi
jae    280fe <Fax3DecodeRLE+0x53e>
add    $0xfffffffffffffffc,%r13
movslq 0x0(%r13),%rcx
sub    %ecx,%ebx
cmp    %r12d,%ebx
jg     280ea <Fax3DecodeRLE+0x52a>
cmp    %r12d,%ebx
jl     2821f <Fax3DecodeRLE+0x65f>
cmp    %r12d,%ebx
jg     28255 <Fax3DecodeRLE+0x695>
mov    %rdx,%rbx
jmpq   27e9b <Fax3DecodeRLE+0x2db>
mov    %rcx,%rdx
mov    %r13,%r11
mov    %r8,%r13
mov    -0x78(%rbp),%rdi
mov    -0x8(%rbp),%rax
jmpq   27f52 <Fax3DecodeRLE+0x392>
cmp    $0x8,%cl
je     2826d <Fax3DecodeRLE+0x6ad>
cmp    $0xa,%cl
jne    28180 <Fax3DecodeRLE+0x5c0>
movslq 0x4(%r9,%r11,8),%rcx
add    %ecx,%ebx
add    %ecx,%r13d
cmp    $0xc,%r8d
jle    282af <Fax3DecodeRLE+0x6ef>
mov    %r15,%rcx
and    $0x1fff,%ecx
mov    %ecx,%r11d
movzbl 0x1(%r9,%r11,8),%ecx
shr    %cl,%r15d
sub    %ecx,%r8d
movzbl (%r9,%r11,8),%ecx
cmp    $0xa,%cl
jbe    2812e <Fax3DecodeRLE+0x56e>
cmp    $0xb,%cl
je     2813c <Fax3DecodeRLE+0x57c>
cmp    $0xc,%cl
je     282e7 <Fax3DecodeRLE+0x727>
mov    -0x98(%rbp),%rcx
mov    0x90(%rcx),%edx
lea    0x2dc12(%rip),%rdi        # 55da6 <module.80>
mov    -0x90(%rbp),%rsi
mov    %rbx,%rcx
mov    %r8,-0x68(%rbp)
mov    %rax,%r12
callq  22340 <Fax3Unexpected>
mov    %r12,%rax
mov    %r13,%r11
mov    -0x80(%rbp),%rdx
mov    -0x68(%rbp),%r13
mov    -0x78(%rbp),%rdi
mov    -0xb0(%rbp),%r12
jmpq   27f52 <Fax3DecodeRLE+0x392>
cmp    %rdx,%rsi
jae    281db <Fax3DecodeRLE+0x61b>
add    $0xfffffffffffffffc,%rdx
movslq (%rdx),%rax
sub    %eax,%ebx
cmp    %r12d,%ebx
jg     281c8 <Fax3DecodeRLE+0x608>
cmp    %r12d,%ebx
jl     282fb <Fax3DecodeRLE+0x73b>
cmp    %r12d,%ebx
jg     2833f <Fax3DecodeRLE+0x77f>
mov    %r13,%rax
mov    %r9,%r13
mov    %r8,%rbx
mov    %rcx,%r15
mov    %r14,%r9
mov    %rdi,%r14
mov    %r9,%rdi
jmpq   27f7d <Fax3DecodeRLE+0x3bd>
mov    %r14,%rax
and    $0x1,%rax
test   %rax,%rax
jne    28367 <Fax3DecodeRLE+0x7a7>
xor    %r8d,%r8d
jmpq   27ce0 <Fax3DecodeRLE+0x120>
test   %ebx,%ebx
jns    28225 <Fax3DecodeRLE+0x665>
xor    %ebx,%ebx
mov    %r13,%rcx
sub    %rsi,%rcx
and    $0x4,%rcx
test   %rcx,%rcx
jle    28240 <Fax3DecodeRLE+0x680>
movl   $0x0,0x0(%r13)
add    $0x4,%r13
mov    %r12,%rcx
sub    %ebx,%ecx
mov    %ecx,0x0(%r13)
add    $0x4,%r13
mov    %rdx,%rbx
jmpq   27e9b <Fax3DecodeRLE+0x2db>
mov    %r12d,0x0(%r13)
movl   $0x0,0x4(%r13)
add    $0x8,%r13
mov    %rdx,%rbx
jmpq   27e9b <Fax3DecodeRLE+0x2db>
add    0x4(%r9,%r11,8),%r13d
mov    -0x80(%rbp),%rcx
mov    %r13d,(%rcx)
mov    -0x68(%rbp),%rcx
lea    0x8(%rcx),%rdx
add    0x4(%r9,%r11,8),%ebx
cmp    %r12d,%ebx
jge    28373 <Fax3DecodeRLE+0x7b3>
test   %r13d,%r13d
je     28382 <Fax3DecodeRLE+0x7c2>
mov    -0xa0(%rbp),%rax
mov    $0xc,%edi
xor    %r13d,%r13d
mov    %r13,%r11
jmpq   27de1 <Fax3DecodeRLE+0x221>
cmp    %r14,%r10
jbe    2839f <Fax3DecodeRLE+0x7df>
movzbl (%r14),%ecx
movzbl (%rsi,%rcx,1),%r11d
mov    %r8,%rcx
shl    %cl,%r11d
or     %r11d,%r15d
lea    0x1(%r14),%r8
lea    0x8(%rcx),%r11d
cmp    $0xc,%r11d
jle    283b0 <Fax3DecodeRLE+0x7f0>
mov    %r8,%r14
mov    %r11,%r8
jmpq   28150 <Fax3DecodeRLE+0x590>
mov    %r13,%r11
mov    %r8,%r13
mov    -0x80(%rbp),%rdx
mov    $0x1,%eax
jmpq   27f52 <Fax3DecodeRLE+0x392>
test   %ebx,%ebx
jns    28301 <Fax3DecodeRLE+0x741>
xor    %ebx,%ebx
mov    %rdx,%rax
sub    %rsi,%rax
and    $0x4,%rax
test   %rax,%rax
jle    2831a <Fax3DecodeRLE+0x75a>
movl   $0x0,(%rdx)
add    $0x4,%rdx
mov    %r12,%rax
sub    %ebx,%eax
mov    %eax,(%rdx)
add    $0x4,%rdx
mov    %r13,%rax
mov    %r9,%r13
mov    %r8,%rbx
mov    %rcx,%r15
mov    %r14,%r9
mov    %rdi,%r14
mov    %r9,%rdi
jmpq   27f7d <Fax3DecodeRLE+0x3bd>
mov    %r12d,(%rdx)
movl   $0x0,0x4(%rdx)
add    $0x8,%rdx
mov    %r13,%rax
mov    %r9,%r13
mov    %r8,%rbx
mov    %rcx,%r15
mov    %r14,%r9
mov    %rdi,%r14
mov    %r9,%rdi
jmpq   27f7d <Fax3DecodeRLE+0x3bd>
add    $0x1,%r14
xor    %r8d,%r8d
jmpq   27ce0 <Fax3DecodeRLE+0x120>
mov    %r8,%r13
xor    %r11d,%r11d
mov    -0x78(%rbp),%rdi
jmpq   27f52 <Fax3DecodeRLE+0x392>
mov    (%rcx),%eax
test   %eax,%eax
je     283c0 <Fax3DecodeRLE+0x800>
mov    -0xa0(%rbp),%rax
mov    $0xc,%edi
xor    %r13d,%r13d
mov    %r13,%r11
jmpq   27de1 <Fax3DecodeRLE+0x221>
test   %r8d,%r8d
je     27e22 <Fax3DecodeRLE+0x262>
mov    %rdx,%r8
jmpq   28150 <Fax3DecodeRLE+0x590>
cmp    %r8,%r10
ja     283da <Fax3DecodeRLE+0x81a>
mov    %r8,%r14
mov    %rdx,%r8
jmpq   28150 <Fax3DecodeRLE+0x590>
mov    %rcx,%rdx
mov    -0xa0(%rbp),%rax
mov    $0xc,%edi
xor    %r13d,%r13d
mov    %r13,%r11
jmpq   27de1 <Fax3DecodeRLE+0x221>
movzbl (%r8),%r8d
movzbl (%rsi,%r8,1),%r8d
xchg   %rcx,%r11
shl    %cl,%r8d
or     %r8d,%r15d
add    $0x2,%r14
lea    0x10(%r11),%r8d
jmpq   28150 <Fax3DecodeRLE+0x590>
nopl   0x0(%rax)

0000000000028400 <TIFFFlush>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    $0x1,%eax
movslq 0xc(%rdi),%rcx
test   %ecx,%ecx
jne    28417 <TIFFFlush+0x17>
leaveq 
retq   
mov    %rdi,%rax
mov    %r15,-0x8(%rbp)
mov    %rdi,%r15
mov    %rax,%rdi
callq  84a0 <TIFFFlushData@plt>
test   %eax,%eax
jne    28435 <TIFFFlush+0x35>
xor    %eax,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
mov    0x10(%r15),%eax
mov    %rax,%rcx
and    $0x200000,%ecx
test   %ecx,%ecx
jne    28462 <TIFFFlush+0x62>
mov    0x10(%r15),%eax
and    $0x200008,%eax
test   %eax,%eax
jne    28522 <TIFFFlush+0x122>
mov    $0x1,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
and    $0x8,%eax
test   %eax,%eax
jne    28446 <TIFFFlush+0x46>
movslq 0xc(%r15),%rax
cmp    $0x2,%eax
jne    28446 <TIFFFlush+0x46>
movq   $0x0,-0x18(%rbp)
movq   $0x0,-0x10(%rbp)
mov    %r15,%rdi
callq  8890 <TIFFIsTiled@plt>
test   %eax,%eax
jne    2853a <TIFFFlush+0x13a>
xor    %eax,%eax
mov    $0x111,%esi
mov    %r15,%rdi
lea    -0x18(%rbp),%rdx
callq  8230 <TIFFGetField@plt>
test   %eax,%eax
je     28446 <TIFFFlush+0x46>
xor    %eax,%eax
mov    $0x117,%esi
mov    %r15,%rdi
lea    -0x10(%rbp),%rdx
callq  8230 <TIFFGetField@plt>
test   %eax,%eax
je     28446 <TIFFFlush+0x46>
mov    0xe4(%r15),%ecx
mov    -0x18(%rbp),%r8
mov    %r15,%rdi
mov    $0x10,%edx
mov    $0x111,%esi
callq  85c0 <_TIFFRewriteField@plt>
test   %eax,%eax
je     28446 <TIFFFlush+0x46>
mov    0xe4(%r15),%ecx
mov    -0x10(%rbp),%r8
mov    %r15,%rdi
mov    $0x117,%esi
mov    $0x10,%edx
callq  85c0 <_TIFFRewriteField@plt>
test   %eax,%eax
je     28446 <TIFFFlush+0x46>
mov    0x10(%r15),%eax
and    $0xffdfffbf,%eax
mov    %eax,0x10(%r15)
mov    $0x1,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
mov    %r15,%rdi
callq  80a0 <TIFFRewriteDirectory@plt>
test   %eax,%eax
jne    285d2 <TIFFFlush+0x1d2>
xor    %eax,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
xor    %eax,%eax
mov    $0x144,%esi
mov    %r15,%rdi
lea    -0x18(%rbp),%rdx
callq  8230 <TIFFGetField@plt>
test   %eax,%eax
je     28446 <TIFFFlush+0x46>
xor    %eax,%eax
mov    $0x145,%esi
mov    %r15,%rdi
lea    -0x10(%rbp),%rdx
callq  8230 <TIFFGetField@plt>
test   %eax,%eax
je     28446 <TIFFFlush+0x46>
mov    0xe4(%r15),%ecx
mov    -0x18(%rbp),%r8
mov    %r15,%rdi
mov    $0x10,%edx
mov    $0x144,%esi
callq  85c0 <_TIFFRewriteField@plt>
test   %eax,%eax
je     28446 <TIFFFlush+0x46>
mov    0xe4(%r15),%ecx
mov    -0x10(%rbp),%r8
mov    %r15,%rdi
mov    $0x145,%esi
mov    $0x10,%edx
callq  85c0 <_TIFFRewriteField@plt>
test   %eax,%eax
je     28446 <TIFFFlush+0x46>
mov    0x10(%r15),%eax
and    $0xffdfffbf,%eax
mov    %eax,0x10(%r15)
mov    $0x1,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
mov    $0x1,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
nopl   (%rax)

00000000000285e0 <TIFFFlushData>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    0x10(%rdi),%eax
mov    %rax,%rcx
and    $0x40,%ecx
test   %ecx,%ecx
jne    285fc <TIFFFlushData+0x1c>
mov    $0x1,%eax
leaveq 
retq   
mov    %rax,%rcx
and    $0x1000,%ecx
test   %ecx,%ecx
jne    28610 <TIFFFlushData+0x30>
callq  86e0 <TIFFFlushData1@plt>
leaveq 
retq   
and    $0xffffefff,%eax
mov    %eax,0x10(%rdi)
mov    0x2f0(%rdi),%rax
mov    %rdi,%rcx
mov    %rdi,-0x8(%rbp)
mov    %rcx,%rdi
callq  *%rax
test   %eax,%eax
je     28635 <TIFFFlushData+0x55>
mov    -0x8(%rbp),%rdi
jmp    28609 <TIFFFlushData+0x29>
xor    %eax,%eax
leaveq 
retq   
nopl   0x0(%rax)

0000000000028640 <TIFFReadRGBAImage>:
push   %rbp
mov    %rsp,%rbp
mov    %r8,%r9
mov    $0x4,%r8d
callq  8710 <TIFFReadRGBAImageOriented@plt>
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nop

0000000000028660 <TIFFReadRGBAImageOriented>:
push   %rbp
mov    %rsp,%rbp
sub    $0x4c0,%rsp
mov    %r13,-0x20(%rbp)
mov    %r14,-0x28(%rbp)
mov    %r15,-0x30(%rbp)
mov    %rdx,-0x10(%rbp)
mov    %rsi,-0x18(%rbp)
mov    %rcx,-0x8(%rbp)
mov    %rdi,%r13
mov    %r8,%r14
mov    %r9,%r15
lea    -0x4c0(%rbp),%rdi
lea    0x45ea2(%rip),%rsi        # 6e53c <display_sRGB+0x54>
mov    $0x400,%edx
callq  8720 <memcpy@plt>
mov    %r13,%rdi
lea    -0x4c0(%rbp),%rsi
callq  8850 <TIFFRGBAImageOK@plt>
test   %eax,%eax
jne    286f6 <TIFFReadRGBAImageOriented+0x96>
mov    %r13,%rdi
mov    0x3b8(%rdi),%r14
callq  85f0 <TIFFFileName@plt>
mov    %rax,%rsi
mov    %r14,%rdi
lea    0x46269(%rip),%rdx        # 6e93c <display_sRGB+0x454>
xor    %r13d,%r13d
mov    %r13,%rax
lea    -0x4c0(%rbp),%rcx
callq  8a00 <TIFFErrorExt@plt>
mov    %r13,%rax
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r13
leaveq 
retq   
mov    %r15,%rdx
lea    -0xc0(%rbp),%r15
mov    %r15,%rdi
mov    %r13,%rsi
lea    -0x4c0(%rbp),%rcx
callq  8bf0 <TIFFRGBAImageBegin@plt>
test   %eax,%eax
je     286b7 <TIFFReadRGBAImageOriented+0x57>
mov    %r14w,-0x9e(%rbp)
mov    -0xa8(%rbp),%ecx
mov    -0x10(%rbp),%rax
sub    %ecx,%eax
mov    -0x18(%rbp),%rdx
imul   %edx,%eax
mov    %eax,%eax
mov    -0x8(%rbp),%rsi
lea    (%rsi,%rax,4),%rsi
mov    %r15,%rdi
callq  86a0 <TIFFRGBAImageGet@plt>
mov    %r15,%rdi
mov    %rax,%r13
callq  87b0 <TIFFRGBAImageEnd@plt>
mov    %r13,%rax
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r13
leaveq 
retq   
nop

0000000000028760 <TIFFReadRGBAStrip>:
push   %rbp
mov    %rsp,%rbp
xor    %ecx,%ecx
callq  8990 <TIFFReadRGBAStripExt@plt>
leaveq 
retq   
nopl   (%rax)

0000000000028770 <TIFFReadRGBATile>:
push   %rbp
mov    %rsp,%rbp
xor    %r8d,%r8d
callq  83a0 <TIFFReadRGBATileExt@plt>
leaveq 
retq   
xchg   %ax,%ax

0000000000028780 <TIFFReadRGBAStripExt>:
push   %rbp
mov    %rsp,%rbp
sub    $0x4c0,%rsp
mov    %r15,-0x10(%rbp)
mov    %rsi,-0x20(%rbp)
mov    %rcx,-0x18(%rbp)
mov    %rdx,-0x8(%rbp)
mov    %rdi,%r15
lea    -0x4b8(%rbp),%rdi
lea    0x46193(%rip),%rsi        # 6e93f <display_sRGB+0x457>
mov    $0x400,%edx
callq  8720 <memcpy@plt>
mov    %r15,%rdi
callq  8890 <TIFFIsTiled@plt>
test   %eax,%eax
jne    2882d <TIFFReadRGBAStripExt+0xad>
xor    %eax,%eax
mov    $0x116,%esi
lea    -0x24(%rbp),%rdx
mov    %r15,%rdi
callq  8390 <TIFFGetFieldDefaulted@plt>
mov    -0x24(%rbp),%ecx
mov    -0x20(%rbp),%rax
xor    %edx,%edx
div    %ecx
test   %edx,%edx
jne    28858 <TIFFReadRGBAStripExt+0xd8>
mov    %r15,%rdi
lea    -0x4b8(%rbp),%rsi
callq  8850 <TIFFRGBAImageOK@plt>
test   %eax,%eax
jne    28883 <TIFFReadRGBAStripExt+0x103>
mov    %r15,%rdi
mov    0x3b8(%rdi),%r15
callq  85f0 <TIFFFileName@plt>
mov    %rax,%rsi
mov    %r15,%rdi
lea    0x46125(%rip),%rdx        # 6e93c <display_sRGB+0x454>
xor    %eax,%eax
lea    -0x4b8(%rbp),%rcx
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x10(%rbp),%r15
leaveq 
retq   
mov    %r15,%rdi
mov    0x3b8(%rdi),%r15
callq  85f0 <TIFFFileName@plt>
mov    %rax,%rsi
mov    %r15,%rdi
lea    0x464f6(%rip),%rdx        # 6ed3f <display_sRGB+0x857>
xor    %eax,%eax
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x10(%rbp),%r15
leaveq 
retq   
mov    %r15,%rdi
mov    0x3b8(%rdi),%r15
callq  85f0 <TIFFFileName@plt>
mov    %rax,%rsi
mov    %r15,%rdi
lea    0x464fa(%rip),%rdx        # 6ed6e <display_sRGB+0x886>
xor    %eax,%eax
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x10(%rbp),%r15
leaveq 
retq   
lea    -0xb8(%rbp),%rdi
mov    %r15,%rsi
lea    -0x4b8(%rbp),%rcx
mov    -0x18(%rbp),%rdx
callq  8bf0 <TIFFRGBAImageBegin@plt>
test   %eax,%eax
je     287fb <TIFFReadRGBAStripExt+0x7b>
mov    -0x24(%rbp),%ecx
mov    -0x20(%rbp),%rsi
lea    (%rsi,%rcx,1),%edx
mov    -0xa0(%rbp),%eax
cmp    %edx,%eax
jae    288be <TIFFReadRGBAStripExt+0x13e>
sub    %esi,%eax
mov    %rax,%rcx
mov    %esi,-0x30(%rbp)
movl   $0x0,-0x2c(%rbp)
mov    -0xa4(%rbp),%edx
lea    -0xb8(%rbp),%r15
mov    %r15,%rdi
mov    -0x8(%rbp),%rsi
callq  86a0 <TIFFRGBAImageGet@plt>
mov    %r15,%rdi
mov    %rax,%r15
callq  87b0 <TIFFRGBAImageEnd@plt>
mov    %r15,%rax
mov    -0x10(%rbp),%r15
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)

0000000000028900 <TIFFReadRGBATileExt>:
push   %rbp
mov    %rsp,%rbp
sub    $0x4e0,%rsp
mov    %r15,-0x20(%rbp)
mov    %rsi,-0x40(%rbp)
mov    %rdx,-0x38(%rbp)
mov    %r8,-0x30(%rbp)
mov    %rcx,-0x28(%rbp)
mov    %rdi,%r15
lea    -0x4d8(%rbp),%rdi
lea    0x4647a(%rip),%rsi        # 6edaa <display_sRGB+0x8c2>
mov    $0x400,%edx
callq  8720 <memcpy@plt>
mov    %r15,%rdi
callq  8890 <TIFFIsTiled@plt>
test   %eax,%eax
jne    28971 <TIFFReadRGBATileExt+0x71>
mov    %r15,%rdi
mov    0x3b8(%rdi),%r15
callq  85f0 <TIFFFileName@plt>
mov    %rax,%rsi
mov    %r15,%rdi
lea    0x46848(%rip),%rdx        # 6f1aa <display_sRGB+0xcc2>
xor    %eax,%eax
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x20(%rbp),%r15
leaveq 
retq   
xor    %eax,%eax
mov    $0x142,%esi
lea    -0x48(%rbp),%rdx
mov    %r15,%rdi
callq  8390 <TIFFGetFieldDefaulted@plt>
mov    $0x143,%esi
lea    -0x44(%rbp),%rdx
xor    %eax,%eax
mov    %r15,%rdi
callq  8390 <TIFFGetFieldDefaulted@plt>
mov    -0x48(%rbp),%ecx
mov    -0x40(%rbp),%rax
xor    %edx,%edx
div    %ecx
test   %edx,%edx
jne    289fa <TIFFReadRGBATileExt+0xfa>
mov    -0x44(%rbp),%ecx
xor    %edx,%edx
mov    -0x38(%rbp),%rax
div    %ecx
test   %edx,%edx
jne    289fa <TIFFReadRGBATileExt+0xfa>
mov    %r15,%rdi
lea    -0x4d8(%rbp),%rsi
callq  8850 <TIFFRGBAImageOK@plt>
test   %eax,%eax
jne    28a25 <TIFFReadRGBATileExt+0x125>
mov    %r15,%rdi
mov    0x3b8(%rdi),%r15
callq  85f0 <TIFFFileName@plt>
mov    %rax,%rsi
mov    %r15,%rdi
lea    0x45f58(%rip),%rdx        # 6e93c <display_sRGB+0x454>
xor    %eax,%eax
lea    -0x4d8(%rbp),%rcx
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x20(%rbp),%r15
leaveq 
retq   
mov    %r15,%rdi
mov    0x3b8(%rdi),%r15
callq  85f0 <TIFFFileName@plt>
mov    %rax,%rsi
mov    %r15,%rdi
lea    0x467c5(%rip),%rdx        # 6f1db <display_sRGB+0xcf3>
xor    %eax,%eax
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x20(%rbp),%r15
leaveq 
retq   
lea    -0xd8(%rbp),%rdi
mov    %r15,%rsi
lea    -0x4d8(%rbp),%rcx
mov    -0x30(%rbp),%rdx
callq  8bf0 <TIFFRGBAImageBegin@plt>
test   %eax,%eax
je     289c8 <TIFFReadRGBATileExt+0xc8>
mov    -0x44(%rbp),%r15d
mov    -0x38(%rbp),%rsi
lea    (%rsi,%r15,1),%ecx
mov    -0xc0(%rbp),%eax
cmp    %ecx,%eax
jae    28a5e <TIFFReadRGBATileExt+0x15e>
sub    %esi,%eax
mov    %rax,%r15
mov    -0x48(%rbp),%eax
mov    -0x40(%rbp),%rdx
lea    (%rdx,%rax,1),%edi
mov    -0xc4(%rbp),%ecx
cmp    %edi,%ecx
jae    28a77 <TIFFReadRGBATileExt+0x177>
sub    %edx,%ecx
mov    %rcx,%rax
mov    %esi,-0x50(%rbp)
mov    %edx,-0x4c(%rbp)
lea    -0xd8(%rbp),%rdi
mov    -0x28(%rbp),%rsi
mov    %rax,%rdx
mov    %r15,%rcx
mov    %r14,-0x38(%rbp)
mov    %rax,%r14
callq  86a0 <TIFFRGBAImageGet@plt>
mov    %rax,-0x8(%rbp)
lea    -0xd8(%rbp),%rdi
callq  87b0 <TIFFRGBAImageEnd@plt>
mov    %r14d,%ecx
mov    %rcx,%rdx
shl    $0x2,%rdx
mov    %rdx,-0x40(%rbp)
mov    -0x48(%rbp),%eax
cmp    %r14d,%eax
je     28ade <TIFFReadRGBATileExt+0x1de>
mov    %rbx,-0x10(%rbp)
mov    %r12,-0x18(%rbp)
mov    %r13,-0x30(%rbp)
mov    %rcx,%r13
xor    %r12d,%r12d
mov    -0x28(%rbp),%rbx
mov    %r12,%rax
jmpq   28b64 <TIFFReadRGBATileExt+0x264>
cmp    -0x44(%rbp),%r15d
je     28b6b <TIFFReadRGBATileExt+0x26b>
mov    %rbx,-0x10(%rbp)
mov    %r12,-0x18(%rbp)
mov    %r13,-0x30(%rbp)
mov    %rcx,%r13
xor    %r12d,%r12d
mov    -0x28(%rbp),%rbx
mov    %r12,%rax
jmp    28b64 <TIFFReadRGBATileExt+0x264>
mov    -0x44(%rbp),%ecx
sub    %eax,%ecx
add    $0xffffffff,%ecx
imul   -0x48(%rbp),%ecx
mov    %ecx,%ecx
lea    (%rbx,%rcx,4),%rdi
mov    %r15,%rcx
sub    %eax,%ecx
add    $0xffffffff,%ecx
imul   %r14d,%ecx
mov    %ecx,%ecx
lea    (%rbx,%rcx,4),%rsi
mov    %rax,%r12
callq  8a50 <memmove@plt>
mov    -0x44(%rbp),%eax
sub    %r12d,%eax
lea    -0x1(%rax),%ecx
mov    -0x48(%rbp),%eax
imul   %eax,%ecx
mov    %ecx,%ecx
lea    (%rbx,%rcx,4),%rcx
lea    (%rcx,%r13,4),%rdi
sub    %r14d,%eax
mov    %eax,%edx
shl    $0x2,%rdx
xor    %esi,%esi
callq  88e0 <_TIFFmemset@plt>
lea    0x1(%r12),%eax
mov    -0x40(%rbp),%rdx
xor    %r12d,%r12d
cmp    %eax,%r15d
ja     28b03 <TIFFReadRGBATileExt+0x203>
jmp    28b9b <TIFFReadRGBATileExt+0x29b>
mov    -0x8(%rbp),%rax
mov    -0x38(%rbp),%r14
mov    -0x20(%rbp),%r15
leaveq 
retq   
sub    %r15d,%eax
add    $0xffffffff,%eax
mov    -0x48(%rbp),%edx
imul   %edx,%eax
mov    %eax,%eax
lea    (%rbx,%rax,4),%rdi
shl    $0x2,%rdx
mov    %r12,%rsi
callq  88e0 <_TIFFmemset@plt>
add    $0x1,%r15d
mov    -0x44(%rbp),%eax
cmp    %r15d,%eax
ja     28b79 <TIFFReadRGBATileExt+0x279>
mov    -0x30(%rbp),%r13
mov    -0x18(%rbp),%r12
mov    -0x10(%rbp),%rbx
mov    -0x8(%rbp),%rax
mov    -0x38(%rbp),%r14
mov    -0x20(%rbp),%r15
leaveq 
retq   
nopl   (%rax)

0000000000028bc0 <TIFFRGBAImageOK>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
movslq 0x2b8(%rdi),%rax
test   %eax,%eax
jne    28be8 <TIFFRGBAImageOK+0x28>
mov    %rsi,%rdi
xor    %eax,%eax
lea    0x46643(%rip),%rsi        # 6f222 <display_sRGB+0xd3a>
callq  8c10 <sprintf@plt>
xor    %eax,%eax
leaveq 
retq   
movzwl 0x74(%rdi),%edx
lea    -0x1(%rdx),%eax
cmp    $0xf,%eax
ja     28c04 <TIFFRGBAImageOK+0x44>
lea    0x455c1(%rip),%rcx        # 6e1bc <TIFFFaxBlackTable+0x10000>
movslq (%rcx,%rax,4),%rax
add    %rcx,%rax
jmpq   *%rax
mov    %rsi,%rdi
xor    %eax,%eax
lea    0x46648(%rip),%rsi        # 6f258 <display_sRGB+0xd70>
callq  8c10 <sprintf@plt>
xor    %eax,%eax
leaveq 
retq   
movzwl 0x76(%rdi),%eax
cmp    $0x3,%ax
je     28d0d <TIFFRGBAImageOK+0x14d>
movzwl 0x82(%rdi),%r9d
movzwl 0xd4(%rdi),%eax
sub    %eax,%r9d
xor    %eax,%eax
mov    $0x106,%ecx
lea    -0x1c(%rbp),%rdx
mov    %rdi,%r8
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rdi,-0x18(%rbp)
mov    %r8,%rdi
mov    %rsi,%r14
mov    %rcx,%rsi
mov    %r9,%r15
callq  8230 <TIFFGetField@plt>
test   %eax,%eax
je     28d22 <TIFFRGBAImageOK+0x162>
lea    0x466b9(%rip),%rdx        # 6f32c <display_sRGB+0xe44>
mov    $0x1,%eax
movzwl -0x1c(%rbp),%ecx
cmp    $0x4,%cx
jbe    28d5a <TIFFRGBAImageOK+0x19a>
cmp    $0x7,%cx
jbe    28d93 <TIFFRGBAImageOK+0x1d3>
lea    0x467dc(%rip),%r8        # 6f473 <display_sRGB+0xf8b>
cmp    $0x804b,%cx
jbe    28dad <TIFFRGBAImageOK+0x1ed>
lea    0x46724(%rip),%r9        # 6f3cd <display_sRGB+0xee5>
mov    $0x8774,%edi
cmp    $0x804c,%cx
je     28ddb <TIFFRGBAImageOK+0x21b>
cmp    $0x804d,%cx
jne    28db7 <TIFFRGBAImageOK+0x1f7>
mov    -0x18(%rbp),%rsi
movzwl 0x78(%rsi),%ecx
cmp    $0x8774,%cx
jne    28df8 <TIFFRGBAImageOK+0x238>
movzwl 0xaa(%rsi),%ecx
cmp    $0x1,%cx
jne    28e2c <TIFFRGBAImageOK+0x26c>
movzwl 0x82(%rsi),%ecx
cmp    $0x3,%cx
jne    28e50 <TIFFRGBAImageOK+0x290>
cmp    $0x3,%r15d
jne    28e50 <TIFFRGBAImageOK+0x290>
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
mov    %rsi,%rdi
xor    %eax,%eax
lea    0x46570(%rip),%rsi        # 6f289 <display_sRGB+0xda1>
callq  8c10 <sprintf@plt>
xor    %eax,%eax
leaveq 
retq   
cmp    $0x1,%r15d
je     28e70 <TIFFRGBAImageOK+0x2b0>
cmp    $0x3,%r15d
je     28e7b <TIFFRGBAImageOK+0x2bb>
mov    %r14,%rdi
xor    %eax,%eax
lea    0x46585(%rip),%rsi        # 6f2c7 <display_sRGB+0xddf>
lea    0x45783(%rip),%rdx        # 6e4cc <photoTag>
callq  8c10 <sprintf@plt>
xor    %eax,%eax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
cmp    $0x1,%cx
jbe    28e86 <TIFFRGBAImageOK+0x2c6>
cmp    $0x2,%cx
je     28e9e <TIFFRGBAImageOK+0x2de>
cmp    $0x3,%cx
jne    28db7 <TIFFRGBAImageOK+0x1f7>
mov    -0x18(%rbp),%rdi
movzwl 0xaa(%rdi),%esi
cmp    $0x1,%si
je     28eb2 <TIFFRGBAImageOK+0x2f2>
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
cmp    $0x5,%cx
je     28ecf <TIFFRGBAImageOK+0x30f>
cmp    $0x6,%cx
jne    28db7 <TIFFRGBAImageOK+0x1f7>
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
cmp    $0x8,%cx
je     28f1c <TIFFRGBAImageOK+0x35c>
mov    %r14,%rdi
xor    %eax,%eax
lea    0x46702(%rip),%rsi        # 6f4c5 <display_sRGB+0xfdd>
lea    0x45702(%rip),%rdx        # 6e4cc <photoTag>
callq  8c10 <sprintf@plt>
xor    %eax,%eax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
mov    -0x18(%rbp),%rcx
movzwl 0x78(%rcx),%ecx
cmp    $0x8774,%cx
jne    28f55 <TIFFRGBAImageOK+0x395>
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
cmp    $0x8775,%cx
je     28cd7 <TIFFRGBAImageOK+0x117>
mov    %rdi,%rcx
mov    %r14,%rdi
mov    %r9,%rdx
xor    %eax,%eax
lea    0x465c4(%rip),%rsi        # 6f3d9 <display_sRGB+0xef1>
mov    $0x8775,%r8d
callq  8c10 <sprintf@plt>
xor    %eax,%eax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
mov    %r14,%rdi
xor    %eax,%eax
lea    0x465ca(%rip),%rsi        # 6f402 <display_sRGB+0xf1a>
lea    0x465f2(%rip),%rdx        # 6f431 <display_sRGB+0xf49>
callq  8c10 <sprintf@plt>
xor    %eax,%eax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
mov    %r14,%rdi
mov    %r15,%r9
xor    %eax,%eax
lea    0x465e6(%rip),%rsi        # 6f445 <display_sRGB+0xf5d>
callq  8c10 <sprintf@plt>
xor    %eax,%eax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
movw   $0x1,-0x1c(%rbp)
jmpq   28c6c <TIFFRGBAImageOK+0xac>
movw   $0x2,-0x1c(%rbp)
jmpq   28c6c <TIFFRGBAImageOK+0xac>
test   %cx,%cx
je     28d74 <TIFFRGBAImageOK+0x1b4>
cmp    $0x1,%cx
je     28d74 <TIFFRGBAImageOK+0x1b4>
jmpq   28db7 <TIFFRGBAImageOK+0x1f7>
cmp    $0x2,%r15d
jle    28f78 <TIFFRGBAImageOK+0x3b8>
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
movzwl 0x82(%rdi),%r9d
cmp    $0x1,%r9w
jne    28f9f <TIFFRGBAImageOK+0x3df>
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
xor    %eax,%eax
mov    $0x14c,%esi
lea    -0x1a(%rbp),%rdx
mov    -0x18(%rbp),%r15
mov    %r15,%rdi
callq  8390 <TIFFGetFieldDefaulted@plt>
lea    0x46487(%rip),%rsi        # 6f374 <display_sRGB+0xe8c>
movzwl -0x1a(%rbp),%ecx
cmp    $0x1,%cx
jne    28fb7 <TIFFRGBAImageOK+0x3f7>
movzwl 0x82(%r15),%ecx
cmp    $0x3,%cx
jbe    28fd4 <TIFFRGBAImageOK+0x414>
mov    $0x1,%eax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
mov    -0x18(%rbp),%r10
movzwl 0x82(%r10),%ecx
cmp    $0x3,%cx
jne    28ff1 <TIFFRGBAImageOK+0x431>
cmp    $0x3,%r15d
jne    28ff1 <TIFFRGBAImageOK+0x431>
movzwl 0x74(%r10),%ecx
cmp    $0x8,%cx
jne    28ff1 <TIFFRGBAImageOK+0x431>
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
mov    %rdi,%rcx
mov    %r14,%rdi
mov    %r9,%rdx
xor    %eax,%eax
lea    0x46445(%rip),%rsi        # 6f3ac <display_sRGB+0xec4>
callq  8c10 <sprintf@plt>
xor    %eax,%eax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
mov    %r15,%rcx
mov    %r14,%rdi
xor    %eax,%eax
lea    0x463b3(%rip),%rsi        # 6f33a <display_sRGB+0xe52>
lea    0x463d7(%rip),%rdx        # 6f365 <display_sRGB+0xe7d>
callq  8c10 <sprintf@plt>
xor    %eax,%eax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
movzwl 0x74(%rdi),%esi
cmp    $0x7,%si
jbe    29031 <TIFFRGBAImageOK+0x471>
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
mov    %r14,%rdi
xor    %eax,%eax
lea    0x463e2(%rip),%rdx        # 6f3a5 <display_sRGB+0xebd>
callq  8c10 <sprintf@plt>
xor    %eax,%eax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
mov    %r14,%rdi
xor    %eax,%eax
lea    0x4634c(%rip),%rdx        # 6f32c <display_sRGB+0xe44>
callq  8c10 <sprintf@plt>
xor    %eax,%eax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
sub    $0x10,%rsp
lea    0x464bd(%rip),%r9        # 6f4b9 <display_sRGB+0xfd1>
movzwl 0x74(%r10),%edi
xor    %eax,%eax
lea    0x46477(%rip),%rsi        # 6f481 <display_sRGB+0xf99>
movzwl 0x82(%r10),%ecx
mov    %r9,(%rsp)
mov    %edi,0x8(%rsp)
mov    %r14,%rdi
mov    %r15,%r9
callq  8c10 <sprintf@plt>
xor    %eax,%eax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
sub    $0x10,%rsp
mov    %esi,(%rsp)
mov    %r14,%rdi
mov    %rdx,%r8
xor    %eax,%eax
lea    0x46296(%rip),%rsi        # 6f2dd <display_sRGB+0xdf5>
lea    0x4547e(%rip),%rdx        # 6e4cc <photoTag>
callq  8c10 <sprintf@plt>
xor    %eax,%eax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
nop

0000000000029060 <TIFFRGBAImageBegin>:
push   %rbp
mov    %rsp,%rbp
sub    $0x70,%rsp
mov    %rdi,-0x38(%rbp)
mov    %rsi,-0x28(%rbp)
mov    %rdx,-0x30(%rbp)
mov    %rsi,%rdi
mov    %rcx,%rsi
mov    %rsi,-0x8(%rbp)
callq  8850 <TIFFRGBAImageOK@plt>
test   %eax,%eax
jne    2908b <TIFFRGBAImageBegin+0x2b>
xor    %eax,%eax
leaveq 
retq   
mov    -0x38(%rbp),%rcx
movl   $0x0,0x88(%rcx)
movl   $0x0,0x8c(%rcx)
movq   $0x0,0x28(%rcx)
movq   $0x0,0x30(%rcx)
movq   $0x0,0x38(%rcx)
movq   $0x0,0x50(%rcx)
movq   $0x0,0x58(%rcx)
movq   $0x0,0x60(%rcx)
movq   $0x0,0x68(%rcx)
movq   $0x0,0x70(%rcx)
movq   $0x0,0x78(%rcx)
movq   $0x0,0x80(%rcx)
movw   $0x4,0x22(%rcx)
mov    -0x28(%rbp),%r8
mov    %r8,(%rcx)
mov    -0x30(%rbp),%rax
mov    %eax,0x8(%rcx)
xor    %eax,%eax
mov    $0x102,%esi
lea    0x1c(%rcx),%rdx
mov    %rdx,-0x38(%rbp)
mov    %r8,%rdi
mov    %r14,-0x28(%rbp)
mov    %r15,-0x30(%rbp)
mov    %rcx,%r14
mov    %r8,%r15
callq  8390 <TIFFGetFieldDefaulted@plt>
movzwl 0x1c(%r14),%edx
lea    -0x1(%rdx),%eax
cmp    $0xf,%eax
ja     2914c <TIFFRGBAImageBegin+0xec>
lea    0x450b9(%rip),%rcx        # 6e1fc <TIFFFaxBlackTable+0x10040>
movslq (%rcx,%rax,4),%rax
add    %rcx,%rax
jmpq   *%rax
xor    %eax,%eax
lea    0x46103(%rip),%rsi        # 6f258 <display_sRGB+0xd70>
mov    -0x8(%rbp),%rdi
callq  8c10 <sprintf@plt>
mov    %r14,%rdi
callq  87b0 <TIFFRGBAImageEnd@plt>
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
xor    %eax,%eax
leaveq 
retq   
movl   $0x0,0x10(%r14)
xor    %eax,%eax
mov    $0x115,%esi
lea    0x1e(%r14),%rcx
mov    %rax,%r8
mov    %r15,%rdi
mov    %rcx,%rdx
mov    %r12,-0x18(%rbp)
mov    %r13,-0x20(%rbp)
mov    %rax,%r12
mov    %r8,%rax
mov    %rcx,%r13
callq  8390 <TIFFGetFieldDefaulted@plt>
mov    %r12,%rax
mov    $0x152,%esi
lea    -0x5e(%rbp),%rdx
lea    -0x68(%rbp),%rcx
mov    %r15,%rdi
callq  8390 <TIFFGetFieldDefaulted@plt>
movzwl -0x5e(%rbp),%eax
test   %ax,%ax
jne    292ed <TIFFRGBAImageBegin+0x28d>
mov    $0x106,%esi
lea    0x24(%r14),%r12
xor    %eax,%eax
mov    %r15,%rdi
mov    %r12,%rdx
callq  8230 <TIFFGetField@plt>
test   %eax,%eax
jne    291ea <TIFFRGBAImageBegin+0x18a>
movw   $0x0,(%r12)
movzwl -0x5e(%rbp),%eax
test   %ax,%ax
je     29316 <TIFFRGBAImageBegin+0x2b6>
xor    %eax,%eax
mov    $0x103,%esi
lea    -0x5a(%rbp),%rdx
movzwl 0x1e(%r14),%r13d
movzwl -0x5e(%rbp),%ecx
mov    %r15,%rdi
mov    %rbx,-0x10(%rbp)
mov    %rcx,%rbx
callq  8390 <TIFFGetFieldDefaulted@plt>
xor    %eax,%eax
mov    %r15,%rdi
lea    -0x5c(%rbp),%rdx
mov    $0x11c,%esi
callq  8390 <TIFFGetFieldDefaulted@plt>
sub    %ebx,%r13d
lea    0x45295(%rip),%rbx        # 6e4cc <photoTag>
mov    %r15,%rdi
mov    %r12,%rdx
xor    %eax,%eax
mov    $0x106,%esi
callq  8230 <TIFFGetField@plt>
test   %eax,%eax
je     29347 <TIFFRGBAImageBegin+0x2e7>
mov    $0x1,%r9d
lea    0x460ce(%rip),%r8        # 6f32c <display_sRGB+0xe44>
movzwl 0x24(%r14),%ecx
cmp    $0x4,%cx
jbe    29381 <TIFFRGBAImageBegin+0x321>
cmp    $0x7,%cx
jbe    293e4 <TIFFRGBAImageBegin+0x384>
cmp    $0x804b,%cx
jbe    2941e <TIFFRGBAImageBegin+0x3be>
lea    0x46144(%rip),%r11        # 6f3cd <display_sRGB+0xee5>
mov    $0x8774,%r10d
mov    $0x10018,%esi
mov    $0x3,%edx
cmp    $0x804c,%cx
je     2942c <TIFFRGBAImageBegin+0x3cc>
cmp    $0x804d,%cx
jne    293f8 <TIFFRGBAImageBegin+0x398>
movzwl -0x5a(%rbp),%eax
cmp    $0x8774,%ax
jne    2945c <TIFFRGBAImageBegin+0x3fc>
movzwl -0x5c(%rbp),%ecx
cmp    $0x1,%cx
jne    29495 <TIFFRGBAImageBegin+0x435>
mov    %r9,%r13
xor    %eax,%eax
mov    %r15,%rdi
callq  8290 <TIFFSetField@plt>
movw   $0x2,(%r12)
mov    -0x38(%rbp),%rax
movw   $0x8,(%rax)
jmpq   294e4 <TIFFRGBAImageBegin+0x484>
mov    -0x68(%rbp),%rax
movzwl (%rax),%eax
test   %ax,%ax
je     2956f <TIFFRGBAImageBegin+0x50f>
cmp    $0x1,%ax
je     2930d <TIFFRGBAImageBegin+0x2ad>
cmp    $0x2,%ax
jne    291c9 <TIFFRGBAImageBegin+0x169>
mov    %eax,0x10(%r14)
jmpq   291c9 <TIFFRGBAImageBegin+0x169>
movzwl 0x0(%r13),%eax
cmp    $0x4,%ax
jne    291f7 <TIFFRGBAImageBegin+0x197>
movzwl (%r12),%eax
cmp    $0x2,%ax
jne    291f7 <TIFFRGBAImageBegin+0x197>
movl   $0x1,0x10(%r14)
movw   $0x1,-0x5e(%rbp)
jmpq   291f7 <TIFFRGBAImageBegin+0x197>
cmp    $0x1,%r13d
je     2958b <TIFFRGBAImageBegin+0x52b>
cmp    $0x3,%r13d
je     295a7 <TIFFRGBAImageBegin+0x547>
mov    %rbx,%rdx
xor    %eax,%eax
lea    0x45f60(%rip),%rsi        # 6f2c7 <display_sRGB+0xddf>
mov    -0x8(%rbp),%rdi
callq  8c10 <sprintf@plt>
mov    -0x10(%rbp),%rbx
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
jmpq   2915e <TIFFRGBAImageBegin+0xfe>
cmp    $0x1,%cx
jbe    294c6 <TIFFRGBAImageBegin+0x466>
cmp    $0x2,%cx
je     295b3 <TIFFRGBAImageBegin+0x553>
cmp    $0x3,%cx
jne    293f8 <TIFFRGBAImageBegin+0x398>
mov    %r9,%r13
xor    %eax,%eax
mov    $0x140,%esi
lea    -0x58(%rbp),%rdx
lea    -0x50(%rbp),%rcx
lea    -0x48(%rbp),%r8
mov    %r15,%rdi
callq  8230 <TIFFGetField@plt>
test   %eax,%eax
jne    295c5 <TIFFRGBAImageBegin+0x565>
xor    %eax,%eax
lea    0x46122(%rip),%rsi        # 6f4ec <display_sRGB+0x1004>
mov    -0x8(%rbp),%rdi
callq  8c10 <sprintf@plt>
mov    -0x10(%rbp),%rbx
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
jmpq   2915e <TIFFRGBAImageBegin+0xfe>
cmp    $0x5,%cx
je     29636 <TIFFRGBAImageBegin+0x5d6>
cmp    $0x6,%cx
je     29692 <TIFFRGBAImageBegin+0x632>
mov    %rbx,%rdx
xor    %eax,%eax
lea    0x460c1(%rip),%rsi        # 6f4c5 <display_sRGB+0xfdd>
mov    -0x8(%rbp),%rdi
callq  8c10 <sprintf@plt>
mov    -0x10(%rbp),%rbx
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
jmpq   2915e <TIFFRGBAImageBegin+0xfe>
cmp    $0x8,%cx
jne    293f8 <TIFFRGBAImageBegin+0x398>
mov    %r9,%r13
jmpq   294e4 <TIFFRGBAImageBegin+0x484>
movzwl -0x5a(%rbp),%eax
cmp    $0x8774,%ax
jne    296a8 <TIFFRGBAImageBegin+0x648>
mov    %r9,%r13
xor    %eax,%eax
mov    %r15,%rdi
callq  8290 <TIFFSetField@plt>
movw   $0x1,(%r12)
mov    -0x38(%rbp),%rax
movw   $0x8,(%rax)
jmpq   294e4 <TIFFRGBAImageBegin+0x484>
cmp    $0x8775,%ax
je     292bd <TIFFRGBAImageBegin+0x25d>
mov    %r10,%rcx
mov    %r11,%rdx
xor    %eax,%eax
lea    0x45f64(%rip),%rsi        # 6f3d9 <display_sRGB+0xef1>
mov    $0x8775,%r8d
mov    -0x8(%rbp),%rdi
callq  8c10 <sprintf@plt>
mov    -0x10(%rbp),%rbx
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
jmpq   2915e <TIFFRGBAImageBegin+0xfe>
xor    %eax,%eax
lea    0x45f64(%rip),%rsi        # 6f402 <display_sRGB+0xf1a>
lea    0x45f8c(%rip),%rdx        # 6f431 <display_sRGB+0xf49>
mov    -0x8(%rbp),%rdi
callq  8c10 <sprintf@plt>
mov    -0x10(%rbp),%rbx
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
xor    %eax,%eax
leaveq 
retq   
test   %cx,%cx
jne    296d1 <TIFFRGBAImageBegin+0x671>
mov    %r9,%r13
mov    -0x38(%rbp),%rax
movzwl -0x5c(%rbp),%ecx
cmp    $0x1,%cx
je     296e7 <TIFFRGBAImageBegin+0x687>
xor    %ebx,%ebx
mov    $0x100,%esi
lea    0x14(%r14),%rdx
mov    %rbx,%rax
mov    %r15,%rdi
callq  8230 <TIFFGetField@plt>
mov    $0x101,%esi
lea    0x18(%r14),%rdx
mov    %rbx,%rax
mov    %r15,%rdi
callq  8230 <TIFFGetField@plt>
mov    %rbx,%rax
mov    %r15,%rdi
mov    $0x112,%esi
lea    0x20(%r14),%rdx
callq  8390 <TIFFGetFieldDefaulted@plt>
movzwl -0x5c(%rbp),%eax
cmp    $0x2,%ax
je     29732 <TIFFRGBAImageBegin+0x6d2>
mov    %r13,%rax
mov    %eax,0xc(%r14)
lea    0x45fee(%rip),%rbx        # 6f52c <display_sRGB+0x1044>
test   %eax,%eax
jg     29748 <TIFFRGBAImageBegin+0x6e8>
mov    %r14,%rdi
callq  2b900 <PickSeparateCase>
test   %eax,%eax
je     29771 <TIFFRGBAImageBegin+0x711>
mov    %r13,%rax
mov    -0x10(%rbp),%rbx
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
leaveq 
retq   
movzwl 0x1e(%r14),%eax
cmp    $0x3,%ax
jbe    291c9 <TIFFRGBAImageBegin+0x169>
movl   $0x1,0x10(%r14)
jmpq   291c9 <TIFFRGBAImageBegin+0x169>
mov    %r15,%rdi
callq  2bc80 <isCCITTCompression>
test   %eax,%eax
jne    29790 <TIFFRGBAImageBegin+0x730>
movw   $0x1,(%r12)
jmpq   29251 <TIFFRGBAImageBegin+0x1f1>
movw   $0x2,(%r12)
jmpq   29251 <TIFFRGBAImageBegin+0x1f1>
cmp    $0x2,%r13d
jle    2979c <TIFFRGBAImageBegin+0x73c>
mov    %r9,%r13
jmpq   294e4 <TIFFRGBAImageBegin+0x484>
mov    -0x38(%rbp),%rax
movzwl (%rax),%ecx
shl    %cl,%r13d
mov    %rcx,%rbx
movslq %r13d,%rcx
add    %rcx,%rcx
mov    %rcx,%rdi
mov    %r12,-0x38(%rbp)
mov    %rcx,%r12
mov    %rax,%r13
callq  8440 <_TIFFmalloc@plt>
mov    %rax,0x28(%r14)
mov    %r12,%rdi
callq  8440 <_TIFFmalloc@plt>
mov    %rax,0x30(%r14)
mov    %r12,%rdi
callq  8440 <_TIFFmalloc@plt>
mov    %rax,0x38(%r14)
mov    0x28(%r14),%rdi
test   %rdi,%rdi
jne    297c9 <TIFFRGBAImageBegin+0x769>
xor    %eax,%eax
lea    0x45ef0(%rip),%rsi        # 6f50c <display_sRGB+0x1024>
mov    -0x8(%rbp),%rdi
callq  8c10 <sprintf@plt>
mov    -0x10(%rbp),%rbx
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
jmpq   2915e <TIFFRGBAImageBegin+0xfe>
mov    %r8,%rbx
mov    %r9,%r13
xor    %eax,%eax
mov    $0x14c,%esi
lea    -0x3a(%rbp),%rdx
mov    %r15,%rdi
callq  8390 <TIFFGetFieldDefaulted@plt>
lea    0x45d1e(%rip),%rsi        # 6f374 <display_sRGB+0xe8c>
movzwl -0x3a(%rbp),%ecx
cmp    $0x1,%cx
jne    29838 <TIFFRGBAImageBegin+0x7d8>
movzwl 0x1e(%r14),%ecx
cmp    $0x3,%cx
ja     294e4 <TIFFRGBAImageBegin+0x484>
mov    %rbx,%rdx
xor    %eax,%eax
mov    -0x8(%rbp),%rdi
callq  8c10 <sprintf@plt>
mov    -0x10(%rbp),%rbx
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
jmpq   2915e <TIFFRGBAImageBegin+0xfe>
movzwl -0x5c(%rbp),%eax
cmp    $0x1,%ax
je     2985b <TIFFRGBAImageBegin+0x7fb>
mov    %r9,%r13
jmpq   294e4 <TIFFRGBAImageBegin+0x484>
mov    %r10,%rcx
mov    %r11,%rdx
xor    %eax,%eax
lea    0x45cf5(%rip),%rsi        # 6f3ac <display_sRGB+0xec4>
mov    -0x8(%rbp),%rdi
callq  8c10 <sprintf@plt>
mov    -0x10(%rbp),%rbx
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
jmpq   2915e <TIFFRGBAImageBegin+0xfe>
cmp    $0x1,%cx
jne    293f8 <TIFFRGBAImageBegin+0x398>
mov    %r9,%r13
mov    -0x38(%rbp),%rax
jmpq   294d6 <TIFFRGBAImageBegin+0x476>
movzwl 0x1e(%r14),%r9d
cmp    $0x1,%r9w
je     294e4 <TIFFRGBAImageBegin+0x484>
movzwl (%rax),%edx
cmp    $0x7,%dx
ja     294e4 <TIFFRGBAImageBegin+0x484>
xor    %eax,%eax
lea    0x45bd0(%rip),%rsi        # 6f2dd <display_sRGB+0xdf5>
movzwl (%r12),%ecx
mov    %edx,(%rsp)
mov    %rbx,%rdx
mov    -0x8(%rbp),%rdi
callq  8c10 <sprintf@plt>
mov    -0x10(%rbp),%rbx
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
jmpq   2915e <TIFFRGBAImageBegin+0xfe>
movzwl 0x1e(%r14),%eax
cmp    $0x1,%ax
jbe    2986d <TIFFRGBAImageBegin+0x80d>
xor    %eax,%eax
jmpq   29533 <TIFFRGBAImageBegin+0x4d3>
mov    %r14,%rdi
callq  2b490 <PickContigCase>
test   %eax,%eax
je     29875 <TIFFRGBAImageBegin+0x815>
mov    %r13,%rax
mov    -0x10(%rbp),%rbx
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
leaveq 
retq   
mov    %rbx,%rsi
xor    %eax,%eax
mov    -0x8(%rbp),%rdi
callq  8c10 <sprintf@plt>
mov    -0x10(%rbp),%rbx
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
jmpq   2915e <TIFFRGBAImageBegin+0xfe>
movw   $0x0,0x24(%r14)
jmpq   29251 <TIFFRGBAImageBegin+0x1f1>
mov    %r13,%rcx
xor    %eax,%eax
lea    0x45b92(%rip),%rsi        # 6f33a <display_sRGB+0xe52>
lea    0x45bb6(%rip),%rdx        # 6f365 <display_sRGB+0xe7d>
mov    -0x8(%rbp),%rdi
callq  8c10 <sprintf@plt>
mov    -0x10(%rbp),%rbx
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
jmpq   2915e <TIFFRGBAImageBegin+0xfe>
mov    0x30(%r14),%rcx
test   %rcx,%rcx
je     29613 <TIFFRGBAImageBegin+0x5b3>
test   %rax,%rax
je     29613 <TIFFRGBAImageBegin+0x5b3>
mov    %rbx,%rcx
mov    $0x2,%eax
shl    %cl,%eax
movslq %eax,%rbx
mov    -0x58(%rbp),%rsi
mov    %rbx,%rdx
callq  8790 <_TIFFmemcpy@plt>
mov    0x30(%r14),%rdi
mov    -0x50(%rbp),%rsi
mov    %rbx,%rdx
callq  8790 <_TIFFmemcpy@plt>
mov    %rbx,%rdx
mov    0x38(%r14),%rdi
mov    -0x48(%rbp),%rsi
callq  8790 <_TIFFmemcpy@plt>
mov    %r13,%rax
mov    $0x1,%r13d
lea    0x44ca4(%rip),%rbx        # 6e4cc <photoTag>
mov    -0x38(%rbp),%r12
lea    0x45af9(%rip),%r8        # 6f32c <display_sRGB+0xe44>
jmpq   294d6 <TIFFRGBAImageBegin+0x476>
xor    %eax,%eax
lea    0x45b64(%rip),%rdx        # 6f3a5 <display_sRGB+0xebd>
mov    -0x8(%rbp),%rdi
callq  8c10 <sprintf@plt>
mov    -0x10(%rbp),%rbx
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
jmpq   2915e <TIFFRGBAImageBegin+0xfe>
movzwl -0x5a(%rbp),%eax
cmp    $0x7,%ax
je     29894 <TIFFRGBAImageBegin+0x834>
mov    %r9,%r13
jmpq   294e4 <TIFFRGBAImageBegin+0x484>
mov    %r13,%rax
jmpq   29533 <TIFFRGBAImageBegin+0x4d3>
mov    %rbx,%rsi
xor    %eax,%eax
mov    -0x8(%rbp),%rdi
callq  8c10 <sprintf@plt>
mov    -0x10(%rbp),%rbx
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
jmpq   2915e <TIFFRGBAImageBegin+0xfe>
mov    %r9,%r13
xor    %eax,%eax
mov    $0x10002,%esi
mov    %r15,%rdi
mov    %r13,%rdx
callq  8290 <TIFFSetField@plt>
movw   $0x2,(%r12)
jmpq   294e4 <TIFFRGBAImageBegin+0x484>
data16 nopw %cs:0x0(%rax,%rax,1)

00000000000298c0 <TIFFRGBAImageGet>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    0x40(%rdi),%rax
test   %rax,%rax
je     298de <TIFFRGBAImageGet+0x1e>
mov    0x48(%rdi),%r8
test   %r8,%r8
je     29910 <TIFFRGBAImageGet+0x50>
callq  *%rax
leaveq 
retq   
mov    (%rdi),%rdi
mov    0x3b8(%rdi),%rax
mov    %r15,-0x8(%rbp)
mov    %rax,%r15
callq  85f0 <TIFFFileName@plt>
mov    %rax,%rsi
mov    %r15,%rdi
lea    0x45c47(%rip),%rdx        # 6f548 <display_sRGB+0x1060>
xor    %eax,%eax
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
mov    (%rdi),%rdi
mov    0x3b8(%rdi),%rax
mov    %r15,-0x8(%rbp)
mov    %rax,%r15
callq  85f0 <TIFFFileName@plt>
mov    %rax,%rsi
mov    %r15,%rdi
lea    0x45c2c(%rip),%rdx        # 6f55f <display_sRGB+0x1077>
xor    %eax,%eax
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   (%rax)

0000000000029950 <TIFFRGBAImageEnd>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x8(%rbp)
mov    0x50(%rdi),%rax
test   %rax,%rax
jne    2996d <TIFFRGBAImageEnd+0x1d>
mov    %r15,%rax
mov    %rdi,%r15
jmp    29984 <TIFFRGBAImageEnd+0x34>
mov    %rdi,%r15
mov    %rax,%rdi
callq  8bb0 <_TIFFfree@plt>
movq   $0x0,0x50(%r15)
mov    -0x8(%rbp),%rax
mov    0x58(%r15),%rdi
test   %rdi,%rdi
je     2999e <TIFFRGBAImageEnd+0x4e>
callq  8bb0 <_TIFFfree@plt>
movq   $0x0,0x58(%r15)
mov    -0x8(%rbp),%rax
mov    0x60(%r15),%rdi
test   %rdi,%rdi
je     299b8 <TIFFRGBAImageEnd+0x68>
callq  8bb0 <_TIFFfree@plt>
movq   $0x0,0x60(%r15)
mov    -0x8(%rbp),%rax
mov    0x68(%r15),%rdi
test   %rdi,%rdi
je     299d2 <TIFFRGBAImageEnd+0x82>
callq  8bb0 <_TIFFfree@plt>
movq   $0x0,0x68(%r15)
mov    -0x8(%rbp),%rax
mov    0x70(%r15),%rdi
test   %rdi,%rdi
je     299ec <TIFFRGBAImageEnd+0x9c>
callq  8bb0 <_TIFFfree@plt>
movq   $0x0,0x70(%r15)
mov    -0x8(%rbp),%rax
mov    0x78(%r15),%rdi
test   %rdi,%rdi
je     29a06 <TIFFRGBAImageEnd+0xb6>
callq  8bb0 <_TIFFfree@plt>
movq   $0x0,0x78(%r15)
mov    -0x8(%rbp),%rax
mov    0x80(%r15),%rdi
test   %rdi,%rdi
je     29a26 <TIFFRGBAImageEnd+0xd6>
callq  8bb0 <_TIFFfree@plt>
movq   $0x0,0x80(%r15)
mov    -0x8(%rbp),%rax
mov    0x28(%r15),%rdi
test   %rdi,%rdi
jne    29a34 <TIFFRGBAImageEnd+0xe4>
mov    %rax,%r15
leaveq 
retq   
callq  8bb0 <_TIFFfree@plt>
mov    0x30(%r15),%rdi
callq  8bb0 <_TIFFfree@plt>
mov    0x38(%r15),%rdi
callq  8bb0 <_TIFFfree@plt>
movq   $0x0,0x38(%r15)
movq   $0x0,0x30(%r15)
movq   $0x0,0x28(%r15)
mov    -0x8(%rbp),%r15
leaveq 
retq   
nopl   0x0(%rax)

0000000000029a70 <gtTileContig>:
push   %rbp
mov    %rsp,%rbp
sub    $0xe0,%rsp
mov    %r15,-0x28(%rbp)
mov    %rdi,-0xd0(%rbp)
mov    %rdx,-0xc0(%rbp)
mov    %rcx,-0xb8(%rbp)
mov    %rsi,-0x68(%rbp)
mov    0x48(%rdi),%rax
mov    %rax,-0x58(%rbp)
xor    %eax,%eax
mov    %rax,-0x38(%rbp)
mov    (%rdi),%r15
mov    %r15,-0xc8(%rbp)
movq   $0x0,-0xd8(%rbp)
mov    %r15,%rdi
callq  8910 <TIFFTileSize@plt>
mov    %rax,-0x48(%rbp)
test   %rax,%rax
je     29b50 <gtTileContig+0xe0>
xor    %r8d,%r8d
mov    $0x142,%esi
lea    -0xe0(%rbp),%rdx
mov    %r8,%rcx
mov    %r15,%rdi
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %rax,%r13
mov    %rcx,%rax
mov    %r8,%r14
callq  8230 <TIFFGetField@plt>
mov    %r14,%rax
mov    $0x143,%esi
lea    -0xdc(%rbp),%rdx
mov    %r15,%rdi
callq  8230 <TIFFGetField@plt>
mov    -0xd0(%rbp),%r14
mov    %r14,%rdi
callq  2bcd0 <setorientation>
mov    %rax,-0x30(%rbp)
and    $0x1,%eax
mov    %rax,-0xb0(%rbp)
test   %eax,%eax
jg     29b82 <gtTileContig+0x112>
mov    -0xe0(%rbp),%esi
mov    -0xc0(%rbp),%r9
sub    %r9d,%esi
neg    %esi
xor    %edi,%edi
mov    -0xb8(%rbp),%rcx
jmp    29b9e <gtTileContig+0x12e>
mov    %r15,%rdi
mov    0x3b8(%rdi),%r15
callq  85f0 <TIFFFileName@plt>
mov    %rax,%rsi
mov    %r15,%rdi
lea    0x44dd0(%rip),%rdx        # 6e93c <display_sRGB+0x454>
lea    0x45a2a(%rip),%rcx        # 6f59d <display_sRGB+0x10b5>
xor    %eax,%eax
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x28(%rbp),%r15
leaveq 
retq   
mov    -0xc0(%rbp),%r9
mov    %r9,%rsi
add    -0xe0(%rbp),%esi
neg    %esi
mov    -0xb8(%rbp),%rcx
lea    -0x1(%rcx),%edi
mov    %r13,%r10
mov    %r9,%r13
mov    %r10,%r9
mov    %rsi,-0x88(%rbp)
mov    0x8c(%r14),%eax
mov    -0xe0(%rbp),%r8d
xor    %edx,%edx
div    %r8d
mov    %rdx,-0x98(%rbp)
mov    -0xe0(%rbp),%r10d
sub    %edx,%r10d
mov    %r10,-0xd0(%rbp)
mov    $0x1,%eax
mov    %r12,-0x10(%rbp)
lea    (%rdx,%rsi,1),%r12d
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x80(%rbp)
mov    %rdx,%r11
mov    %r9,%rdx
mov    -0x68(%rbp),%rbx
xor    %esi,%esi
mov    %rsi,%r8
jmp    29c36 <gtTileContig+0x1c6>
mov    -0xc0(%rbp),%rax
mov    %rax,%rcx
neg    %ecx
add    %eax,%r8d
mov    -0x70(%rbp),%rax
lea    (%rax,%rcx,1),%edi
mov    -0x80(%rbp),%r12
mov    -0xd0(%rbp),%r10
mov    -0x98(%rbp),%r11
mov    -0x40(%rbp),%rax
mov    -0x68(%rbp),%rbx
mov    -0xb8(%rbp),%rcx
mov    %r8,-0xa8(%rbp)
mov    %rax,-0x40(%rbp)
test   %eax,%eax
jle    29ca0 <gtTileContig+0x230>
cmp    %r8d,%ecx
jbe    29ca0 <gtTileContig+0x230>
mov    %rdx,%r9
mov    %r8,%rax
add    0x88(%r14),%eax
mov    -0xdc(%rbp),%esi
xor    %edx,%edx
div    %esi
sub    %edx,%esi
lea    (%r8,%rsi,1),%eax
cmp    %eax,%ecx
jae    29c71 <gtTileContig+0x201>
sub    %r8d,%ecx
mov    %rcx,%rsi
mov    %rsi,-0xc0(%rbp)
mov    0x8c(%r14),%ecx
mov    %r13,%rax
imul   %edi,%eax
mov    %eax,%eax
lea    (%rbx,%rax,4),%rax
mov    %rax,-0x60(%rbp)
mov    %rdi,-0x70(%rbp)
mov    %r9,%rdx
xor    %esi,%esi
mov    %rsi,%rbx
jmpq   29d9a <gtTileContig+0x32a>
mov    %rsi,%r12
mov    %rax,%r14
mov    %rcx,%r15
mov    -0xd8(%rbp),%rdi
callq  8bb0 <_TIFFfree@plt>
mov    -0x30(%rbp),%rcx
and    $0x2,%ecx
test   %ecx,%ecx
jg     29e2e <gtTileContig+0x3be>
mov    %r14,%rax
mov    -0x8(%rbp),%rbx
mov    -0x10(%rbp),%r12
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x28(%rbp),%r15
leaveq 
retq   
mov    %r13,%r10
sub    %ebx,%r10d
mov    %rbx,%rcx
sub    %r13d,%ecx
add    -0xe0(%rbp),%ecx
mov    -0x88(%rbp),%r12
lea    (%r12,%rcx,1),%edi
sub    $0x20,%rsp
mov    -0xa8(%rbp),%rdx
lea    (%r15,%rdx,1),%r9d
mov    %rax,%r15
mov    %r9,%rax
xor    %edx,%edx
mov    -0xa0(%rbp),%r8
div    %r8d
mov    %edx,%eax
imul   %rax,%r15
mov    -0x90(%rbp),%rax
movslq %eax,%rax
imul   %rax,%rsi
lea    (%rsi,%r15,1),%rax
add    -0xd8(%rbp),%rax
mov    %ecx,(%rsp)
mov    %edi,0x8(%rsp)
mov    %rax,0x10(%rsp)
mov    %ebx,%eax
mov    -0x60(%rbp),%rcx
lea    (%rcx,%rax,4),%rsi
mov    %r10,%r15
mov    %r14,%rdi
mov    %rbx,%rdx
mov    -0x70(%rbp),%rcx
mov    %r15,%r8
mov    -0xc0(%rbp),%r9
mov    -0x58(%rbp),%rax
callq  *%rax
mov    -0xe0(%rbp),%r10d
add    $0x20,%rsp
mov    -0x50(%rbp),%rax
lea    (%r15,%rax,1),%ecx
add    %r15d,%ebx
mov    -0xc8(%rbp),%r15
mov    -0xa8(%rbp),%r8
mov    -0x48(%rbp),%rdx
xor    %esi,%esi
mov    %rsi,%r11
cmp    %r13d,%ebx
jae    29e55 <gtTileContig+0x3e5>
sub    $0x10,%rsp
add    0x88(%r14),%r8d
movl   $0x0,(%rsp)
mov    %r15,%rdi
lea    -0xd8(%rbp),%rsi
mov    %rcx,-0x50(%rbp)
xor    %r9d,%r9d
mov    %r11,-0x90(%rbp)
mov    %r12,-0x78(%rbp)
mov    %r10,%r12
callq  8310 <_TIFFReadTileAndAllocBuffer@plt>
add    $0x10,%rsp
cmp    $0xffffffffffffffff,%rax
je     29e36 <gtTileContig+0x3c6>
mov    0x88(%r14),%ecx
mov    -0xdc(%rbp),%eax
mov    %rax,-0xa0(%rbp)
mov    %r15,%rdi
mov    %rcx,%r15
callq  80d0 <TIFFTileRowSize@plt>
movzwl 0x1e(%r14),%esi
lea    (%r12,%rbx,1),%ecx
cmp    %r13d,%ecx
ja     29cdd <gtTileContig+0x26d>
mov    %r12,%r10
mov    -0x78(%rbp),%rdi
mov    -0x90(%rbp),%rcx
mov    -0x88(%rbp),%r12
jmpq   29cfa <gtTileContig+0x28a>
mov    %r13d,%eax
mov    %r12,%rsi
jmp    29e90 <gtTileContig+0x420>
mov    -0xd8(%rbp),%rax
test   %rax,%rax
jne    29eae <gtTileContig+0x43e>
mov    -0xa8(%rbp),%r8
mov    -0x48(%rbp),%rdx
xor    %esi,%esi
pushq  -0x38(%rbp)
popq   -0x40(%rbp)
mov    -0xb0(%rbp),%rax
test   %eax,%eax
jg     29bff <gtTileContig+0x18f>
mov    -0xc0(%rbp),%rax
mov    %rax,%rcx
jmpq   29c0b <gtTileContig+0x19b>
mov    (%rdx),%edi
mov    (%rcx),%r8d
mov    %edi,(%rcx)
mov    %r8d,(%rdx)
add    $0x4,%rcx
add    $0xfffffffffffffffc,%rdx
cmp    %rcx,%rdx
ja     29e73 <gtTileContig+0x403>
add    $0x1,%esi
add    %r13d,%r12d
cmp    %r15d,%esi
jb     29ecf <gtTileContig+0x45f>
mov    %r14,%rax
mov    -0x8(%rbp),%rbx
mov    -0x10(%rbp),%r12
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x28(%rbp),%r15
leaveq 
retq   
movslq 0x8(%r14),%rax
test   %eax,%eax
je     29de3 <gtTileContig+0x373>
mov    -0xa8(%rbp),%r8
mov    -0x48(%rbp),%rdx
xor    %esi,%esi
pushq  -0x38(%rbp)
popq   -0x40(%rbp)
jmp    29e55 <gtTileContig+0x3e5>
mov    %r12d,%ecx
lea    (%rbx,%rcx,4),%rcx
lea    -0x4(%rcx,%rax,4),%rdx
jmp    29e85 <gtTileContig+0x415>
nopl   (%rax)

0000000000029ee0 <gtTileSeparate>:
push   %rbp
mov    %rsp,%rbp
sub    $0x150,%rsp
mov    %rsi,-0x50(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rdi,-0x138(%rbp)
mov    %rdx,-0x118(%rbp)
mov    %rcx,-0x110(%rbp)
mov    0x48(%rdi),%rax
mov    %rax,-0x40(%rbp)
xor    %eax,%eax
mov    %rax,-0x120(%rbp)
mov    $0x1,%eax
mov    %rax,-0x128(%rbp)
mov    $0x3,%eax
mov    %rax,-0xc0(%rbp)
mov    (%rdi),%r14
movq   $0x0,-0x140(%rbp)
movslq 0x10(%rdi),%r15
mov    %r14,%rdi
callq  8910 <TIFFTileSize@plt>
test   %rax,%rax
jne    29fea <gtTileSeparate+0x10a>
mov    %rax,%rcx
xor    %r8d,%r8d
test   %r8,%r8
je     2a00e <gtTileSeparate+0x12e>
xor    %r9d,%r9d
mov    $0x142,%esi
lea    -0x148(%rbp),%rdx
mov    %r9,%rax
mov    %r14,%rdi
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r9,%rbx
mov    %rcx,%r12
mov    %r8,%r13
callq  8230 <TIFFGetField@plt>
mov    %rbx,%rax
mov    $0x143,%esi
lea    -0x144(%rbp),%rdx
mov    %r14,%rdi
callq  8230 <TIFFGetField@plt>
mov    -0x138(%rbp),%rbx
mov    %rbx,%rdi
callq  2bcd0 <setorientation>
mov    %rax,-0x30(%rbp)
and    $0x1,%eax
mov    %rax,-0xd0(%rbp)
test   %eax,%eax
jg     2a048 <gtTileSeparate+0x168>
mov    -0x148(%rbp),%edi
mov    -0x118(%rbp),%rsi
sub    %esi,%edi
neg    %edi
xor    %ecx,%ecx
mov    -0x110(%rbp),%r11
jmp    2a065 <gtTileSeparate+0x185>
mov    $0x4,%edi
test   %r15d,%r15d
jne    2a0f5 <gtTileSeparate+0x215>
mov    $0x3,%ecx
pushq  -0x120(%rbp)
popq   -0x130(%rbp)
jmpq   2a104 <gtTileSeparate+0x224>
mov    %r14,%rdi
xor    %r14d,%r14d
mov    0x3b8(%rdi),%r15
callq  85f0 <TIFFFileName@plt>
mov    %rax,%rsi
mov    %r14,%rax
mov    %r15,%rdi
lea    0x45586(%rip),%rdx        # 6f5b6 <display_sRGB+0x10ce>
lea    0x45596(%rip),%rcx        # 6f5cd <display_sRGB+0x10e5>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
leaveq 
retq   
mov    -0x118(%rbp),%rsi
mov    %rsi,%rdi
add    -0x148(%rbp),%edi
neg    %edi
mov    -0x110(%rbp),%r11
lea    -0x1(%r11),%ecx
mov    %rdi,-0x60(%rbp)
movzwl 0x24(%rbx),%eax
test   %ax,%ax
jne    2a11e <gtTileSeparate+0x23e>
pushq  -0x128(%rbp)
popq   -0xc0(%rbp)
mov    0x8c(%rbx),%eax
mov    -0x148(%rbp),%r8d
xor    %edx,%edx
div    %r8d
mov    %rdx,-0x90(%rbp)
mov    -0x148(%rbp),%eax
sub    %edx,%eax
mov    %rax,-0xf8(%rbp)
lea    (%r12,%r12,2),%rax
mov    %rax,-0xa0(%rbp)
lea    (%rdx,%rdi,1),%eax
mov    %r13,-0xe0(%rbp)
mov    %r14,-0x130(%rbp)
mov    %r15,-0xc8(%rbp)
mov    %r12,-0xa8(%rbp)
mov    %rax,-0x68(%rbp)
mov    $0x1,%eax
xor    %r9d,%r9d
mov    -0x50(%rbp),%r12
mov    %r9,%r8
mov    %r8,%r10
mov    %r10,%r13
mov    %r13,%r14
mov    %r14,%r15
jmp    2a15d <gtTileSeparate+0x27d>
mov    %rdi,%rcx
pushq  -0x128(%rbp)
popq   -0x130(%rbp)
mov    -0x130(%rbp),%rdx
test   %rdx,%rdx
jne    2a1fd <gtTileSeparate+0x31d>
mov    $0x3,%esi
jmpq   2a200 <gtTileSeparate+0x320>
cmp    $0x1,%ax
jne    2a223 <gtTileSeparate+0x343>
pushq  -0x128(%rbp)
popq   -0xc0(%rbp)
jmpq   2a082 <gtTileSeparate+0x1a2>
mov    -0xd8(%rbp),%rax
mov    %rax,%rcx
neg    %ecx
add    %eax,%r13d
mov    -0x58(%rbp),%rax
add    %eax,%ecx
mov    -0x38(%rbp),%rax
mov    -0x110(%rbp),%r11
mov    -0x50(%rbp),%r12
mov    %r13,-0x108(%rbp)
mov    %rax,-0x38(%rbp)
test   %eax,%eax
jle    2a23e <gtTileSeparate+0x35e>
cmp    %r11d,%r13d
jae    2a23e <gtTileSeparate+0x35e>
mov    %r13,%rax
add    0x88(%rbx),%eax
mov    -0x144(%rbp),%edi
xor    %edx,%edx
div    %edi
sub    %edx,%edi
lea    0x0(%r13,%rdi,1),%eax
cmp    %eax,%r11d
jae    2a19e <gtTileSeparate+0x2be>
sub    %r13d,%r11d
mov    %r11,%rdi
mov    %rdi,-0xd8(%rbp)
mov    0x8c(%rbx),%edx
mov    %rsi,%rax
imul   %ecx,%eax
mov    %eax,%eax
lea    (%r12,%rax,4),%rax
mov    %rax,-0x48(%rbp)
mov    %rcx,-0x58(%rbp)
mov    -0x130(%rbp),%r12
mov    -0xe0(%rbp),%rax
mov    -0xc0(%rbp),%r11
xor    %r9d,%r9d
mov    %r9,%rcx
pushq  -0x68(%rbp)
pushq  -0x90(%rbp)
pushq  -0xf8(%rbp)
popq   -0x100(%rbp)
popq   -0x98(%rbp)
popq   -0x70(%rbp)
jmpq   2a333 <gtTileSeparate+0x453>
mov    %rdi,%rsi
imul   %rax,%rcx
mov    %rcx,%rdx
mov    %rax,%rcx
mov    %rdx,%rax
cqto   
idiv   %rcx
cmp    %rax,%rsi
je     2a47b <gtTileSeparate+0x59b>
xor    %r8d,%r8d
jmpq   29f5e <gtTileSeparate+0x7e>
cmp    $0x3,%ax
jne    2a082 <gtTileSeparate+0x1a2>
pushq  -0x128(%rbp)
popq   -0xc0(%rbp)
jmpq   2a082 <gtTileSeparate+0x1a2>
mov    -0x30(%rbp),%rcx
and    $0x2,%ecx
test   %ecx,%ecx
jle    2a491 <gtTileSeparate+0x5b1>
mov    %esi,%ecx
lea    (%r12,%rcx,4),%rbx
mov    %r9,%rdi
jmpq   2a4d8 <gtTileSeparate+0x5f8>
mov    -0xb8(%rbp),%r14
lea    (%rdx,%r14,1),%rax
sub    $0x30,%rsp
mov    %ecx,(%rsp)
mov    %edi,0x8(%rsp)
mov    -0x80(%rbp),%rcx
add    %rdx,%rcx
mov    %rcx,0x10(%rsp)
mov    -0x88(%rbp),%r13
lea    (%rdx,%r13,1),%rcx
mov    %rcx,0x18(%rsp)
mov    -0xb0(%rbp),%r15
lea    (%rdx,%r15,1),%rcx
mov    %rcx,0x20(%rsp)
mov    %rax,0x28(%rsp)
mov    %r11d,%eax
mov    -0x48(%rbp),%rcx
lea    (%rcx,%rax,4),%rsi
mov    %rbx,%rdi
mov    %r11,%rbx
mov    %r10,%r12
mov    %rbx,%rdx
mov    -0x58(%rbp),%rcx
mov    %r12,%r8
mov    -0xd8(%rbp),%r9
mov    -0x40(%rbp),%rax
callq  *%rax
mov    -0x148(%rbp),%eax
mov    %rax,-0x100(%rbp)
add    $0x30,%rsp
mov    -0xe8(%rbp),%rax
lea    (%rax,%r12,1),%edx
lea    (%r12,%rbx,1),%ecx
mov    %r13,%r8
mov    -0x80(%rbp),%r10
mov    -0x130(%rbp),%r12
mov    -0x108(%rbp),%r13
mov    -0xe0(%rbp),%rax
mov    -0xc0(%rbp),%r11
xor    %r9d,%r9d
mov    -0x118(%rbp),%rsi
mov    -0x138(%rbp),%rbx
pushq  -0x60(%rbp)
pushq  -0x120(%rbp)
popq   -0x98(%rbp)
popq   -0x70(%rbp)
mov    %rcx,-0xf0(%rbp)
mov    %rdx,-0xe8(%rbp)
cmp    %esi,%ecx
jae    2a51e <gtTileSeparate+0x63e>
mov    -0x140(%rbp),%rcx
test   %rcx,%rcx
je     2a53c <gtTileSeparate+0x65c>
add    0x88(%rbx),%r13d
mov    %r10,%rsi
xor    %eax,%eax
mov    %r14,-0xb8(%rbp)
mov    %r13,%rcx
mov    %r11,%r13
mov    %r12,%rdi
mov    %r10,%r12
mov    %r8,%r14
mov    %rax,%r8
callq  8820 <TIFFReadTile@plt>
cmp    $0xffffffffffffffff,%rax
je     2a4eb <gtTileSeparate+0x60b>
mov    %r15,%rax
mov    %r14,%rsi
mov    %r13,%r9
mov    %r12,%r10
mov    -0xc8(%rbp),%r15
mov    -0x130(%rbp),%r12
mov    -0x108(%rbp),%r13
mov    -0xb8(%rbp),%r14
mov    -0xe8(%rbp),%rdx
mov    %rsi,-0x88(%rbp)
mov    %r10,-0x80(%rbp)
mov    %r14,-0xb8(%rbp)
mov    %rax,-0xb0(%rbp)
cmp    $0x1,%r9w
ja     2a5e3 <gtTileSeparate+0x703>
pushq  -0x120(%rbp)
popq   -0x78(%rbp)
mov    -0x78(%rbp),%rcx
test   %rcx,%rcx
je     2a427 <gtTileSeparate+0x547>
mov    %rax,%rsi
mov    %r13,%rcx
add    0x88(%rbx),%ecx
mov    %r12,%rdi
xor    %r8d,%r8d
mov    $0x2,%r9d
callq  8820 <TIFFReadTile@plt>
cmp    $0xffffffffffffffff,%rax
je     2a636 <gtTileSeparate+0x756>
mov    -0xe8(%rbp),%rdx
mov    -0xc0(%rbp),%r9
test   %r15d,%r15d
jne    2a655 <gtTileSeparate+0x775>
mov    %r12,%rdi
mov    0x88(%rbx),%r12d
mov    -0x144(%rbp),%r14d
callq  80d0 <TIFFTileRowSize@plt>
movzwl 0x1e(%rbx),%esi
mov    -0xf0(%rbp),%r11
mov    -0x100(%rbp),%r10
lea    (%r10,%r11,1),%edx
mov    -0x118(%rbp),%rcx
cmp    %ecx,%edx
ja     2a6ac <gtTileSeparate+0x7cc>
mov    -0x70(%rbp),%rdi
mov    -0x98(%rbp),%rcx
jmpq   2a6c4 <gtTileSeparate+0x7e4>
test   %r15d,%r15d
jne    2a485 <gtTileSeparate+0x5a5>
mov    $0x3,%edi
mov    %rcx,%r8
imul   %rdi,%r8
jmpq   29f5e <gtTileSeparate+0x7e>
mov    %rax,%r14
mov    -0x140(%rbp),%rdi
callq  8bb0 <_TIFFfree@plt>
mov    %r14,%rax
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
leaveq 
retq   
mov    (%rdx),%r8d
mov    (%rcx),%r10d
mov    %r8d,(%rcx)
mov    %r10d,(%rdx)
add    $0x4,%rcx
add    $0xfffffffffffffffc,%rdx
cmp    %rcx,%rdx
ja     2a4b9 <gtTileSeparate+0x5d9>
add    $0x1,%edi
add    %esi,%r9d
cmp    %edi,%r11d
jbe    2a491 <gtTileSeparate+0x5b1>
mov    %r9d,%edx
lea    (%r12,%rdx,4),%rcx
lea    -0x4(%rbx,%rdx,4),%rdx
jmp    2a4cd <gtTileSeparate+0x5ed>
movslq 0x8(%rbx),%rax
test   %eax,%eax
je     2a702 <gtTileSeparate+0x822>
mov    %r14,%r8
mov    %r12,%r10
mov    -0x108(%rbp),%r13
mov    -0xb8(%rbp),%r14
xor    %r9d,%r9d
mov    -0x118(%rbp),%rsi
pushq  -0x120(%rbp)
popq   -0x38(%rbp)
mov    -0xd0(%rbp),%rax
test   %eax,%eax
jg     2a139 <gtTileSeparate+0x259>
mov    -0xd8(%rbp),%rax
mov    %rax,%rcx
jmpq   2a145 <gtTileSeparate+0x265>
mov    %r13,%rcx
add    0x88(%rbx),%ecx
movl   $0x0,(%rsp)
mov    %r14,-0xb0(%rbp)
mov    %r12,%rdi
mov    %r15,-0x88(%rbp)
mov    %r8,-0x80(%rbp)
lea    -0x140(%rbp),%rsi
mov    %r10,-0x78(%rbp)
mov    %rcx,%r8
mov    %rdx,%r14
mov    %rax,%rdx
mov    %r11,%r15
mov    %r14,%rcx
callq  8310 <_TIFFReadTileAndAllocBuffer@plt>
cmp    $0xffffffffffffffff,%rax
jne    2a5a2 <gtTileSeparate+0x6c2>
mov    -0x140(%rbp),%rax
test   %rax,%rax
je     2a736 <gtTileSeparate+0x856>
movslq 0x8(%rbx),%rax
test   %eax,%eax
jne    2a764 <gtTileSeparate+0x884>
cmp    $0x1,%r15w
mov    -0x140(%rbp),%r10
je     2a792 <gtTileSeparate+0x8b2>
mov    -0xc8(%rbp),%rdx
test   %edx,%edx
mov    -0xa8(%rbp),%rcx
lea    (%rcx,%r10,1),%rsi
lea    (%rcx,%rsi,1),%rax
jne    2a7b8 <gtTileSeparate+0x8d8>
mov    %r15,%r9
mov    %rdx,%r15
mov    %r14,%rdx
xor    %r14d,%r14d
jmpq   2a3bc <gtTileSeparate+0x4dc>
mov    %r15,%r14
mov    %rax,%r15
mov    %r13,%rcx
add    0x88(%rbx),%ecx
mov    %r12,%rdi
xor    %r8d,%r8d
mov    $0x1,%r9d
callq  8820 <TIFFReadTile@plt>
cmp    $0xffffffffffffffff,%rax
je     2a7cc <gtTileSeparate+0x8ec>
mov    %r15,%rax
mov    %r14,%r15
mov    -0xb8(%rbp),%r14
mov    -0xe8(%rbp),%rdx
mov    -0xc0(%rbp),%r9
pushq  -0x128(%rbp)
popq   -0x78(%rbp)
jmpq   2a3e9 <gtTileSeparate+0x509>
movslq 0x8(%rbx),%rax
test   %eax,%eax
jne    2a7fd <gtTileSeparate+0x91d>
mov    -0xe8(%rbp),%rdx
mov    -0xc0(%rbp),%r9
jmpq   2a427 <gtTileSeparate+0x547>
mov    %r13,%rcx
add    0x88(%rbx),%ecx
mov    %r12,%rdi
mov    %r14,%rsi
xor    %r8d,%r8d
callq  8820 <TIFFReadTile@plt>
cmp    $0xffffffffffffffff,%rax
jne    2a430 <gtTileSeparate+0x550>
movslq 0x8(%rbx),%rax
test   %eax,%eax
je     2a430 <gtTileSeparate+0x550>
mov    -0xb0(%rbp),%r15
mov    -0x80(%rbp),%r10
mov    -0x88(%rbp),%r8
xor    %r9d,%r9d
mov    -0x118(%rbp),%rsi
pushq  -0x120(%rbp)
popq   -0x38(%rbp)
jmpq   2a51e <gtTileSeparate+0x63e>
mov    %rcx,%r10
sub    %r11d,%r10d
neg    %ecx
add    %r11d,%ecx
add    -0x148(%rbp),%ecx
mov    -0x60(%rbp),%rdx
lea    (%rdx,%rcx,1),%edi
lea    (%r12,%r13,1),%r8d
mov    %rax,%r12
mov    %r8,%rax
xor    %edx,%edx
div    %r14d
mov    %edx,%eax
imul   %rax,%r12
mov    -0x98(%rbp),%rax
movslq %eax,%rax
imul   %rax,%rsi
test   %r15d,%r15d
lea    (%rsi,%r12,1),%rdx
jne    2a25b <gtTileSeparate+0x37b>
mov    -0xb8(%rbp),%r14
xor    %eax,%eax
jmpq   2a266 <gtTileSeparate+0x386>
mov    %r15,%rax
mov    %r14,%rsi
mov    %r13,%r9
mov    %r12,%r10
mov    -0xc8(%rbp),%r15
mov    -0x130(%rbp),%r12
mov    -0x108(%rbp),%r13
mov    -0xb8(%rbp),%r14
mov    -0xe8(%rbp),%rdx
jmpq   2a3bc <gtTileSeparate+0x4dc>
mov    -0x78(%rbp),%r10
mov    -0x80(%rbp),%r8
mov    -0x88(%rbp),%r15
mov    -0xb0(%rbp),%r14
xor    %r9d,%r9d
mov    -0x118(%rbp),%rsi
pushq  -0x120(%rbp)
popq   -0x38(%rbp)
jmpq   2a51e <gtTileSeparate+0x63e>
mov    -0x78(%rbp),%r10
mov    -0x80(%rbp),%r8
mov    -0x88(%rbp),%r15
mov    -0xb0(%rbp),%r14
xor    %r9d,%r9d
mov    -0x118(%rbp),%rsi
pushq  -0x120(%rbp)
popq   -0x38(%rbp)
jmpq   2a51e <gtTileSeparate+0x63e>
mov    -0xc8(%rbp),%rax
test   %eax,%eax
jne    2a827 <gtTileSeparate+0x947>
mov    %r14,%rdx
mov    %r15,%r9
mov    %rax,%r15
xor    %r14d,%r14d
mov    %r10,%rax
mov    %rax,%rsi
jmpq   2a3bc <gtTileSeparate+0x4dc>
add    %rax,%rcx
mov    %r15,%r9
mov    %rdx,%r15
mov    %r14,%rdx
mov    %rcx,%r14
jmpq   2a3bc <gtTileSeparate+0x4dc>
movslq 0x8(%rbx),%rax
test   %eax,%eax
jne    2a848 <gtTileSeparate+0x968>
mov    %r15,%rax
mov    %r14,%r15
mov    -0xb8(%rbp),%r14
mov    -0xe8(%rbp),%rdx
mov    -0xc0(%rbp),%r9
pushq  -0x128(%rbp)
popq   -0x78(%rbp)
jmpq   2a3e9 <gtTileSeparate+0x509>
mov    -0xb0(%rbp),%r15
mov    -0x80(%rbp),%r10
mov    -0x88(%rbp),%r8
xor    %r9d,%r9d
mov    -0x118(%rbp),%rsi
pushq  -0x120(%rbp)
popq   -0x38(%rbp)
jmpq   2a51e <gtTileSeparate+0x63e>
mov    -0xa0(%rbp),%rcx
add    %r10,%rcx
mov    %r14,%rdx
mov    %rcx,%r14
mov    %r15,%r9
mov    %rax,%r15
mov    %r10,%rax
mov    %rax,%rsi
jmpq   2a3bc <gtTileSeparate+0x4dc>
mov    -0xb8(%rbp),%r14
mov    -0x80(%rbp),%r10
mov    -0x88(%rbp),%r8
xor    %r9d,%r9d
mov    -0x118(%rbp),%rsi
pushq  -0x120(%rbp)
popq   -0x38(%rbp)
jmpq   2a51e <gtTileSeparate+0x63e>
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   (%rax)

000000000002a880 <gtStripContig>:
push   %rbp
mov    %rsp,%rbp
sub    $0xa0,%rsp
mov    %rsi,-0x48(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rdx,-0x80(%rbp)
mov    %rcx,-0x88(%rbp)
mov    0x48(%rdi),%rax
mov    %rax,-0x40(%rbp)
mov    (%rdi),%r14
movq   $0x0,-0x98(%rbp)
mov    0x14(%rdi),%eax
mov    %rax,-0x78(%rbp)
mov    %r13,%r15
mov    %r12,%r13
mov    %rbx,%r12
mov    %rdi,%rbx
xor    %eax,%eax
mov    $0x212,%esi
lea    -0x8c(%rbp),%rdx
mov    %r14,%rdi
lea    -0x8a(%rbp),%rcx
callq  8390 <TIFFGetFieldDefaulted@plt>
movzwl -0x8a(%rbp),%eax
test   %ax,%ax
je     2a92e <gtStripContig+0xae>
mov    %r14,%rdi
callq  8070 <TIFFStripSize@plt>
mov    %rax,-0x38(%rbp)
mov    %rbx,%rdi
mov    %r15,-0x18(%rbp)
callq  2bcd0 <setorientation>
mov    %rax,-0x30(%rbp)
and    $0x1,%eax
mov    %rax,-0x58(%rbp)
test   %eax,%eax
jg     2a969 <gtStripContig+0xe9>
mov    -0x88(%rbp),%rcx
mov    -0x80(%rbp),%r15
xor    %r8d,%r8d
mov    %r8,%rax
jmp    2a97e <gtStripContig+0xfe>
mov    %r14,%rdi
xor    %ebx,%ebx
mov    0x3b8(%rdi),%r14
callq  85f0 <TIFFFileName@plt>
mov    %rax,%rsi
mov    %rbx,%rax
mov    %r14,%rdi
lea    0x44c8d(%rip),%rdx        # 6f5dc <display_sRGB+0x10f4>
callq  8a00 <TIFFErrorExt@plt>
mov    %r12,%rbx
mov    %r13,%r12
mov    %r15,%r13
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
xor    %eax,%eax
leaveq 
retq   
mov    -0x80(%rbp),%r15
lea    (%r15,%r15,1),%eax
neg    %eax
mov    -0x88(%rbp),%rcx
lea    -0x1(%rcx),%r8d
mov    %rax,-0x68(%rbp)
xor    %eax,%eax
mov    $0x116,%esi
lea    -0x90(%rbp),%rdx
mov    %r13,-0x10(%rbp)
mov    %r14,%rdi
mov    %r12,-0x8(%rbp)
mov    %rcx,%r12
mov    %r8,%r13
callq  8390 <TIFFGetFieldDefaulted@plt>
mov    %r14,%rdi
callq  8410 <TIFFScanlineSize@plt>
mov    %rax,-0x70(%rbp)
mov    -0x78(%rbp),%rcx
cmp    %r15d,%ecx
ja     2a9bf <gtStripContig+0x13f>
xor    %ecx,%ecx
jmp    2a9c2 <gtStripContig+0x142>
sub    %r15d,%ecx
mov    %rcx,-0x60(%rbp)
mov    %r13,%rcx
mov    %rax,%r13
mov    %r12,%r8
xor    %esi,%esi
mov    -0x48(%rbp),%rdi
mov    %rsi,%r12
jmp    2a9fc <gtStripContig+0x17c>
mov    %r15,%rax
neg    %eax
add    %r15d,%r12d
lea    0x0(%r13,%rax,1),%ecx
mov    -0x70(%rbp),%r13
mov    -0x88(%rbp),%r8
mov    -0x80(%rbp),%r15
xor    %esi,%esi
mov    -0x48(%rbp),%rdi
cmp    %r8d,%r12d
jb     2aa25 <gtStripContig+0x1a5>
mov    $0x1,%r12d
mov    -0x30(%rbp),%rax
and    $0x2,%eax
test   %eax,%eax
jle    2ab72 <gtStripContig+0x2f2>
mov    %r15d,%eax
lea    (%rdi,%rax,4),%rax
mov    %rsi,%rbx
jmpq   2abb6 <gtStripContig+0x336>
mov    %r12,%rax
add    0x88(%rbx),%eax
mov    -0x90(%rbp),%r15d
xor    %edx,%edx
div    %r15d
sub    %edx,%r15d
lea    (%r15,%r12,1),%eax
cmp    %eax,%r8d
jae    2aa4c <gtStripContig+0x1cc>
sub    %r12d,%r8d
mov    %r8,%r15
mov    %r15,-0x78(%rbp)
movzwl -0x8a(%rbp),%esi
xor    %edx,%edx
mov    %r15,%rax
div    %esi
test   %edx,%edx
je     2aa75 <gtStripContig+0x1f5>
movzwl -0x8a(%rbp),%esi
xor    %edx,%edx
mov    %r15,%rax
div    %esi
sub    %edx,%esi
add    %esi,%r15d
mov    %r12,%rsi
add    0x88(%rbx),%esi
mov    %r14,%rdi
xor    %edx,%edx
mov    %rcx,-0x50(%rbp)
callq  8280 <TIFFComputeStrip@plt>
mov    %rax,%rsi
mov    %r12,%rax
add    0x88(%rbx),%eax
mov    -0x90(%rbp),%ecx
xor    %edx,%edx
div    %ecx
lea    (%r15,%rdx,1),%eax
mov    %eax,%r8d
imul   %r13,%r8
mov    %r14,%rdi
lea    -0x98(%rbp),%rdx
mov    -0x38(%rbp),%rcx
callq  8ab0 <_TIFFReadEncodedStripAndAllocBuffer@plt>
cmp    $0xffffffffffffffff,%rax
jne    2aae2 <gtStripContig+0x262>
mov    -0x98(%rbp),%rax
test   %rax,%rax
je     2abc8 <gtStripContig+0x348>
movslq 0x8(%rbx),%rax
test   %eax,%eax
jne    2abe1 <gtStripContig+0x361>
sub    $0x10,%rsp
mov    %r12,%rax
add    0x88(%rbx),%eax
mov    -0x90(%rbp),%ecx
xor    %edx,%edx
div    %ecx
mov    %edx,%ecx
imul   %r13,%rcx
movzwl 0x1e(%rbx),%eax
movslq 0x8c(%rbx),%rdx
imul   %rdx,%rax
add    %rcx,%rax
add    -0x98(%rbp),%rax
mov    -0x60(%rbp),%rcx
mov    %ecx,(%rsp)
mov    -0x68(%rbp),%rcx
mov    %ecx,0x8(%rsp)
mov    %rax,0x10(%rsp)
mov    -0x50(%rbp),%r13
mov    -0x80(%rbp),%r8
mov    %r8,%rax
imul   %r13d,%eax
mov    %eax,%eax
mov    -0x48(%rbp),%rcx
lea    (%rcx,%rax,4),%rsi
mov    %rbx,%rdi
xor    %edx,%edx
mov    %r13,%rcx
mov    -0x78(%rbp),%r15
mov    %r15,%r9
mov    -0x40(%rbp),%rax
callq  *%rax
add    $0x10,%rsp
mov    -0x58(%rbp),%rax
test   %eax,%eax
jg     2a9da <gtStripContig+0x15a>
mov    %r15,%rax
jmpq   2a9df <gtStripContig+0x15f>
mov    -0x98(%rbp),%rdi
callq  8bb0 <_TIFFfree@plt>
mov    %r12,%rax
mov    -0x8(%rbp),%rbx
mov    -0x10(%rbp),%r12
mov    -0x18(%rbp),%r13
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
leaveq 
retq   
mov    (%rdx),%r9d
mov    (%rcx),%r10d
mov    %r9d,(%rcx)
mov    %r10d,(%rdx)
add    $0x4,%rcx
add    $0xfffffffffffffffc,%rdx
cmp    %rcx,%rdx
ja     2ab97 <gtStripContig+0x317>
add    $0x1,%ebx
add    %r15d,%esi
cmp    %ebx,%r8d
jbe    2ab72 <gtStripContig+0x2f2>
mov    %esi,%edx
lea    (%rdi,%rdx,4),%rcx
lea    -0x4(%rax,%rdx,4),%rdx
jmp    2abab <gtStripContig+0x32b>
mov    -0x88(%rbp),%r8
mov    -0x80(%rbp),%r15
xor    %esi,%esi
mov    -0x48(%rbp),%rdi
mov    %rsi,%r12
jmpq   2aa07 <gtStripContig+0x187>
mov    -0x88(%rbp),%r8
mov    -0x80(%rbp),%r15
xor    %esi,%esi
mov    -0x48(%rbp),%rdi
mov    %rsi,%r12
jmpq   2aa07 <gtStripContig+0x187>
nopw   0x0(%rax,%rax,1)

000000000002ac00 <gtStripSeparate>:
push   %rbp
mov    %rsp,%rbp
sub    $0x110,%rsp
mov    %rsi,-0x48(%rbp)
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rcx,-0xc8(%rbp)
mov    0x48(%rdi),%rax
mov    %rax,-0x40(%rbp)
xor    %eax,%eax
mov    %rax,-0xe8(%rbp)
mov    $0x1,%eax
mov    %rax,-0xf0(%rbp)
mov    $0x3,%eax
mov    %rax,-0xd0(%rbp)
mov    (%rdi),%r13
mov    %r13,-0xc0(%rbp)
movq   $0x0,-0x108(%rbp)
mov    0x14(%rdi),%eax
mov    %rax,-0xd8(%rbp)
mov    %rdx,%rbx
mov    %rcx,%r12
mov    %rdi,%r14
movslq 0x10(%r14),%r15
mov    %r13,%rdi
callq  8070 <TIFFStripSize@plt>
test   %rax,%rax
jne    2acc5 <gtStripSeparate+0xc5>
mov    %r15,%r8
mov    %rax,%r15
xor    %ecx,%ecx
test   %rcx,%rcx
je     2ace9 <gtStripSeparate+0xe9>
mov    %r14,%rdi
mov    %rcx,-0xb0(%rbp)
mov    %r8,-0xf8(%rbp)
callq  2bcd0 <setorientation>
mov    %rax,-0x30(%rbp)
and    $0x1,%eax
mov    %rax,-0x58(%rbp)
test   %eax,%eax
jg     2ad2e <gtStripSeparate+0x12e>
xor    %eax,%eax
mov    %rax,%rcx
jmp    2ad38 <gtStripSeparate+0x138>
mov    $0x4,%esi
test   %r15d,%r15d
jne    2ad91 <gtStripSeparate+0x191>
mov    $0x3,%edx
pushq  -0xe8(%rbp)
popq   -0xf8(%rbp)
jmpq   2ada0 <gtStripSeparate+0x1a0>
mov    %r13,%rdi
xor    %ebx,%ebx
mov    0x3b8(%rdi),%r12
callq  85f0 <TIFFFileName@plt>
mov    %rax,%rsi
mov    %rbx,%rax
mov    %r12,%rdi
lea    0x448ac(%rip),%rdx        # 6f5b6 <display_sRGB+0x10ce>
lea    0x448ee(%rip),%rcx        # 6f5ff <display_sRGB+0x1117>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
lea    (%rbx,%rbx,1),%ecx
neg    %ecx
lea    -0x1(%r12),%eax
mov    %rcx,-0x70(%rbp)
mov    %rax,-0x50(%rbp)
movzwl 0x24(%r14),%eax
test   %ax,%ax
jne    2adb3 <gtStripSeparate+0x1b3>
pushq  -0xf0(%rbp)
popq   -0xd0(%rbp)
xor    %eax,%eax
mov    $0x116,%esi
lea    -0xfc(%rbp),%rdx
mov    %r13,%rdi
mov    %r14,-0xe0(%rbp)
callq  8390 <TIFFGetFieldDefaulted@plt>
mov    %r13,%rdi
callq  8410 <TIFFScanlineSize@plt>
mov    %rax,-0xb8(%rbp)
mov    -0xd8(%rbp),%rcx
cmp    %ebx,%ecx
ja     2adc7 <gtStripSeparate+0x1c7>
xor    %ecx,%ecx
jmp    2adc9 <gtStripSeparate+0x1c9>
mov    %rsi,%rdx
pushq  -0xf0(%rbp)
popq   -0xf8(%rbp)
mov    -0xf8(%rbp),%rcx
test   %rcx,%rcx
jne    2ae06 <gtStripSeparate+0x206>
mov    $0x3,%ecx
jmp    2ae09 <gtStripSeparate+0x209>
cmp    $0x1,%ax
jne    2ae2b <gtStripSeparate+0x22b>
pushq  -0xf0(%rbp)
popq   -0xd0(%rbp)
jmp    2ad56 <gtStripSeparate+0x156>
sub    %ebx,%ecx
mov    %rcx,-0x68(%rbp)
lea    (%r15,%r15,2),%rcx
mov    %r15,-0xa0(%rbp)
mov    %rcx,-0x98(%rbp)
mov    %rbx,-0x60(%rbp)
mov    %r12,%rcx
mov    %rax,%r15
mov    -0xe0(%rbp),%rbx
xor    %edi,%edi
mov    %rdi,%r8
mov    %r8,%r9
mov    %r9,%r10
mov    %r10,%r11
mov    %r11,%r14
jmpq   2ae88 <gtStripSeparate+0x288>
mov    %rsi,%rcx
imul   %rax,%rdx
mov    %r15,%r8
mov    %rax,%r15
mov    %rdx,%rax
cqto   
idiv   %r15
cmp    %rax,%rcx
je     2aed4 <gtStripSeparate+0x2d4>
xor    %ecx,%ecx
jmpq   2ac94 <gtStripSeparate+0x94>
cmp    $0x3,%ax
jne    2ad56 <gtStripSeparate+0x156>
pushq  -0xf0(%rbp)
popq   -0xd0(%rbp)
jmpq   2ad56 <gtStripSeparate+0x156>
mov    %r12,%rax
neg    %eax
lea    (%rbx,%r12,1),%edx
add    %r13d,%eax
mov    %rax,-0x50(%rbp)
mov    %r14,%r10
mov    %rdx,%r14
mov    %r15,%r11
mov    -0xc0(%rbp),%r13
mov    -0xa8(%rbp),%r9
mov    -0x78(%rbp),%r8
mov    -0xb8(%rbp),%r15
mov    -0xc8(%rbp),%rcx
mov    -0xe0(%rbp),%rbx
xor    %edi,%edi
cmp    %ecx,%r14d
jb     2aeea <gtStripSeparate+0x2ea>
pushq  -0xf0(%rbp)
popq   -0xe8(%rbp)
mov    -0x30(%rbp),%rax
and    $0x2,%eax
test   %eax,%eax
jg     2b046 <gtStripSeparate+0x446>
mov    -0xe8(%rbp),%r12
mov    -0x108(%rbp),%rdi
callq  8bb0 <_TIFFfree@plt>
mov    %r12,%rax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
test   %r8d,%r8d
jne    2aede <gtStripSeparate+0x2de>
mov    $0x3,%esi
mov    %r15,%rcx
imul   %rsi,%rcx
jmpq   2ac94 <gtStripSeparate+0x94>
mov    %r14,%rax
add    0x88(%rbx),%eax
mov    -0xfc(%rbp),%r12d
xor    %edx,%edx
div    %r12d
sub    %edx,%r12d
lea    (%r14,%r12,1),%eax
cmp    %ecx,%eax
jbe    2af10 <gtStripSeparate+0x310>
sub    %r14d,%ecx
mov    %rcx,%r12
mov    %r14,%rsi
add    0x88(%rbx),%esi
mov    %rsi,-0xd8(%rbp)
mov    -0x108(%rbp),%rax
test   %rax,%rax
je     2b064 <gtStripSeparate+0x464>
mov    %r13,%rdi
xor    %edx,%edx
mov    %r8,-0x80(%rbp)
mov    %r11,-0x88(%rbp)
mov    %r10,-0x90(%rbp)
mov    %r9,-0xa8(%rbp)
callq  8280 <TIFFComputeStrip@plt>
mov    %rax,%rsi
mov    %r14,%rax
add    0x88(%rbx),%eax
mov    -0xfc(%rbp),%ecx
xor    %edx,%edx
div    %ecx
lea    (%rdx,%r12,1),%eax
mov    %eax,%ecx
imul   %r15,%rcx
mov    %r13,%rdi
mov    -0x80(%rbp),%r15
mov    %r15,%rdx
callq  8810 <TIFFReadEncodedStrip@plt>
cmp    $0xffffffffffffffff,%rax
je     2b107 <gtStripSeparate+0x507>
mov    %r15,%r8
mov    -0xb8(%rbp),%r15
mov    -0xa8(%rbp),%r9
mov    -0x90(%rbp),%r10
mov    -0x88(%rbp),%r11
mov    -0xd0(%rbp),%rdx
mov    -0xf8(%rbp),%rax
mov    %r8,-0x78(%rbp)
mov    %r11,-0x80(%rbp)
mov    %r10,-0x88(%rbp)
mov    %r9,-0xa8(%rbp)
cmp    $0x1,%dx
ja     2b145 <gtStripSeparate+0x545>
pushq  -0xe8(%rbp)
popq   -0x38(%rbp)
mov    -0x38(%rbp),%rcx
test   %rcx,%rcx
jne    2b1c1 <gtStripSeparate+0x5c1>
test   %eax,%eax
jne    2b237 <gtStripSeparate+0x637>
pushq  -0xe8(%rbp)
popq   -0x90(%rbp)
mov    %r14,%rax
add    0x88(%rbx),%eax
mov    -0xfc(%rbp),%ecx
xor    %edx,%edx
div    %ecx
mov    %edx,%eax
imul   %rax,%r15
movzwl 0x1e(%rbx),%eax
movslq 0x8c(%rbx),%rcx
imul   %rcx,%rax
lea    (%rax,%r15,1),%rdx
mov    -0x90(%rbp),%rax
test   %rax,%rax
jne    2b2a5 <gtStripSeparate+0x6a5>
xor    %eax,%eax
jmpq   2b2a9 <gtStripSeparate+0x6a9>
mov    -0x60(%rbp),%r10
mov    %r10d,%eax
mov    -0x48(%rbp),%r11
lea    (%r11,%rax,4),%rax
mov    -0xe8(%rbp),%r12
mov    %rdi,%rbx
jmpq   2b346 <gtStripSeparate+0x746>
mov    %r13,%rdi
xor    %edx,%edx
callq  8280 <TIFFComputeStrip@plt>
mov    %rax,%rsi
mov    %r14,%rax
add    0x88(%rbx),%eax
mov    -0xfc(%rbp),%ecx
xor    %edx,%edx
div    %ecx
lea    (%r12,%rdx,1),%eax
mov    %eax,%eax
mov    %r15,%r8
imul   %rax,%r8
mov    %r13,%rdi
lea    -0x108(%rbp),%rdx
mov    -0xb0(%rbp),%rcx
callq  8ab0 <_TIFFReadEncodedStripAndAllocBuffer@plt>
cmp    $0xffffffffffffffff,%rax
jne    2b0c9 <gtStripSeparate+0x4c9>
mov    -0x108(%rbp),%rax
test   %rax,%rax
je     2b35b <gtStripSeparate+0x75b>
movslq 0x8(%rbx),%rax
test   %eax,%eax
jne    2b369 <gtStripSeparate+0x769>
mov    -0xd0(%rbp),%rdx
cmp    $0x1,%dx
mov    -0x108(%rbp),%r8
je     2b377 <gtStripSeparate+0x777>
mov    -0xf8(%rbp),%rax
test   %eax,%eax
mov    -0xa0(%rbp),%rcx
lea    (%rcx,%r8,1),%r11
lea    (%rcx,%r11,1),%r10
jne    2b394 <gtStripSeparate+0x794>
xor    %r9d,%r9d
jmpq   2afb9 <gtStripSeparate+0x3b9>
movslq 0x8(%rbx),%rax
test   %eax,%eax
jne    2b39d <gtStripSeparate+0x79d>
mov    %r15,%r8
mov    -0xb8(%rbp),%r15
mov    -0xa8(%rbp),%r9
mov    -0x90(%rbp),%r10
mov    -0x88(%rbp),%r11
mov    -0xd0(%rbp),%rdx
mov    -0xf8(%rbp),%rax
jmpq   2afb9 <gtStripSeparate+0x3b9>
mov    %r13,%rdi
mov    -0xd8(%rbp),%rsi
mov    $0x1,%edx
callq  8280 <TIFFComputeStrip@plt>
mov    %rax,%rsi
mov    %r14,%rax
add    0x88(%rbx),%eax
mov    -0xfc(%rbp),%ecx
xor    %edx,%edx
div    %ecx
lea    (%rdx,%r12,1),%eax
mov    %eax,%ecx
imul   %r15,%rcx
mov    %r13,%rdi
mov    -0x80(%rbp),%rdx
callq  8810 <TIFFReadEncodedStrip@plt>
cmp    $0xffffffffffffffff,%rax
je     2b3ab <gtStripSeparate+0x7ab>
mov    -0xa8(%rbp),%r9
mov    -0x88(%rbp),%r10
mov    -0x80(%rbp),%r11
mov    -0x78(%rbp),%r8
mov    -0xd0(%rbp),%rdx
mov    -0xf8(%rbp),%rax
pushq  -0xf0(%rbp)
popq   -0x38(%rbp)
jmpq   2afe2 <gtStripSeparate+0x3e2>
mov    %r13,%rdi
mov    -0xd8(%rbp),%rsi
mov    $0x2,%edx
callq  8280 <TIFFComputeStrip@plt>
mov    %rax,%rsi
mov    %r14,%rax
add    0x88(%rbx),%eax
mov    -0xfc(%rbp),%ecx
xor    %edx,%edx
div    %ecx
lea    (%rdx,%r12,1),%eax
mov    %eax,%ecx
imul   %r15,%rcx
mov    %r13,%rdi
mov    -0x88(%rbp),%rdx
callq  8810 <TIFFReadEncodedStrip@plt>
cmp    $0xffffffffffffffff,%rax
je     2b3e9 <gtStripSeparate+0x7e9>
mov    -0xa8(%rbp),%r9
mov    -0x88(%rbp),%r10
mov    -0x80(%rbp),%r11
mov    -0x78(%rbp),%r8
mov    -0xd0(%rbp),%rdx
mov    -0xf8(%rbp),%rax
jmpq   2afef <gtStripSeparate+0x3ef>
mov    %r13,%rdi
mov    -0xd8(%rbp),%rsi
callq  8280 <TIFFComputeStrip@plt>
mov    %rax,%rsi
mov    %r14,%rax
add    0x88(%rbx),%eax
mov    -0xfc(%rbp),%ecx
xor    %edx,%edx
div    %ecx
lea    (%rdx,%r12,1),%eax
mov    %eax,%ecx
imul   %r15,%rcx
mov    %r13,%rdi
mov    -0xa8(%rbp),%r13
mov    %r13,%rdx
callq  8810 <TIFFReadEncodedStrip@plt>
cmp    $0xffffffffffffffff,%rax
je     2b41a <gtStripSeparate+0x81a>
mov    %r13,%r9
mov    -0x88(%rbp),%r10
mov    -0x80(%rbp),%r11
mov    -0x78(%rbp),%r8
pushq  -0xf0(%rbp)
popq   -0x90(%rbp)
jmpq   2b003 <gtStripSeparate+0x403>
lea    (%rdx,%r9,1),%rax
sub    $0x30,%rsp
mov    -0x68(%rbp),%rcx
mov    %ecx,(%rsp)
mov    -0x70(%rbp),%rcx
mov    %ecx,0x8(%rsp)
lea    (%rdx,%r8,1),%rcx
mov    %rcx,0x10(%rsp)
lea    (%rdx,%r11,1),%rcx
mov    %rcx,0x18(%rsp)
lea    (%rdx,%r10,1),%rcx
mov    %rcx,0x20(%rsp)
mov    %rax,0x28(%rsp)
mov    -0x60(%rbp),%r8
mov    -0x50(%rbp),%r13
mov    %r8,%rax
imul   %r13d,%eax
mov    %eax,%eax
mov    -0x48(%rbp),%rcx
lea    (%rcx,%rax,4),%rsi
mov    %rbx,%rdi
mov    %r14,%rbx
mov    %r10,%r14
mov    %r11,%r15
xor    %edx,%edx
mov    %r13,%rcx
mov    %r12,%r9
mov    -0x40(%rbp),%rax
callq  *%rax
add    $0x30,%rsp
mov    -0x58(%rbp),%rax
test   %eax,%eax
jg     2ae46 <gtStripSeparate+0x246>
mov    %r12,%rax
jmpq   2ae4b <gtStripSeparate+0x24b>
mov    (%rsi),%r8d
mov    (%rdx),%r9d
mov    %r8d,(%rdx)
mov    %r9d,(%rsi)
add    $0x4,%rdx
add    $0xfffffffffffffffc,%rsi
cmp    %rdx,%rsi
ja     2b327 <gtStripSeparate+0x727>
add    $0x1,%ebx
add    %r10d,%edi
cmp    %ebx,%ecx
jbe    2aeaf <gtStripSeparate+0x2af>
mov    %edi,%esi
lea    (%r11,%rsi,4),%rdx
lea    -0x4(%rax,%rsi,4),%rsi
jmp    2b33b <gtStripSeparate+0x73b>
mov    -0xc8(%rbp),%rcx
xor    %edi,%edi
jmpq   2ae99 <gtStripSeparate+0x299>
mov    -0xc8(%rbp),%rcx
xor    %edi,%edi
jmpq   2ae99 <gtStripSeparate+0x299>
mov    -0xf8(%rbp),%rax
test   %eax,%eax
jne    2b445 <gtStripSeparate+0x845>
xor    %r9d,%r9d
mov    %r8,%r10
mov    %r10,%r11
jmpq   2afb9 <gtStripSeparate+0x3b9>
lea    (%rcx,%r10,1),%r9
jmpq   2afb9 <gtStripSeparate+0x3b9>
mov    -0xc8(%rbp),%rcx
xor    %edi,%edi
jmpq   2ae99 <gtStripSeparate+0x299>
movslq 0x8(%rbx),%rax
test   %eax,%eax
jne    2b45b <gtStripSeparate+0x85b>
mov    -0xa8(%rbp),%r9
mov    -0x88(%rbp),%r10
mov    -0x80(%rbp),%r11
mov    -0x78(%rbp),%r8
mov    -0xd0(%rbp),%rdx
mov    -0xf8(%rbp),%rax
pushq  -0xf0(%rbp)
popq   -0x38(%rbp)
jmpq   2afe2 <gtStripSeparate+0x3e2>
movslq 0x8(%rbx),%rax
test   %eax,%eax
jne    2b469 <gtStripSeparate+0x869>
mov    -0xa8(%rbp),%r9
mov    -0x88(%rbp),%r10
mov    -0x80(%rbp),%r11
mov    -0x78(%rbp),%r8
mov    -0xd0(%rbp),%rdx
mov    -0xf8(%rbp),%rax
jmpq   2afef <gtStripSeparate+0x3ef>
movslq 0x8(%rbx),%rax
test   %eax,%eax
jne    2b477 <gtStripSeparate+0x877>
mov    %r13,%r9
mov    -0x88(%rbp),%r10
mov    -0x80(%rbp),%r11
mov    -0x78(%rbp),%r8
pushq  -0xf0(%rbp)
popq   -0x90(%rbp)
jmpq   2b003 <gtStripSeparate+0x403>
mov    -0x98(%rbp),%rcx
lea    (%r8,%rcx,1),%r9
mov    %r8,%r10
mov    %r10,%r11
jmpq   2afb9 <gtStripSeparate+0x3b9>
mov    -0xc8(%rbp),%rcx
xor    %edi,%edi
jmpq   2ae99 <gtStripSeparate+0x299>
mov    -0xc8(%rbp),%rcx
xor    %edi,%edi
jmpq   2ae99 <gtStripSeparate+0x299>
mov    -0xc8(%rbp),%rcx
xor    %edi,%edi
jmpq   2ae99 <gtStripSeparate+0x299>
data16 nopw %cs:0x0(%rax,%rax,1)

000000000002b490 <PickContigCase>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x8(%rbp)
mov    %rdi,%r15
mov    (%r15),%rdi
callq  8890 <TIFFIsTiled@plt>
test   %eax,%eax
jne    2b4b4 <PickContigCase+0x24>
lea    -0xc32(%rip),%rax        # 2a880 <gtStripContig>
jmp    2b4bb <PickContigCase+0x2b>
lea    -0x1a4b(%rip),%rax        # 29a70 <gtTileContig>
mov    %rax,0x40(%r15)
movq   $0x0,0x48(%r15)
movzwl 0x24(%r15),%eax
cmp    $0x8,%ax
ja     2b521 <PickContigCase+0x91>
lea    0x42d63(%rip),%rcx        # 6e23c <TIFFFaxBlackTable+0x10080>
movslq (%rcx,%rax,4),%rax
add    %rcx,%rax
jmpq   *%rax
movzwl 0x1e(%r15),%eax
cmp    $0x3,%ax
jne    2b521 <PickContigCase+0x91>
mov    %r15,%rdi
callq  31760 <buildMap>
test   %eax,%eax
je     2b521 <PickContigCase+0x91>
movzwl 0x1c(%r15),%eax
cmp    $0x8,%ax
jne    2b521 <PickContigCase+0x91>
mov    %r15,%rdi
callq  30c40 <initCIELabConversion>
mov    %rax,0x48(%r15)
jmp    2b521 <PickContigCase+0x91>
movzwl 0x1e(%r15),%eax
cmp    $0x2,%ax
ja     2b6c5 <PickContigCase+0x235>
xor    %eax,%eax
mov    0x40(%r15),%rcx
test   %rcx,%rcx
jne    2b6d5 <PickContigCase+0x245>
mov    -0x8(%rbp),%r15
leaveq 
retq   
movzwl 0x1c(%r15),%eax
cmp    $0x8,%ax
je     2b6ed <PickContigCase+0x25d>
cmp    $0x10,%ax
jne    2b521 <PickContigCase+0x91>
movslq 0x10(%r15),%rax
cmp    $0x1,%eax
jne    2b719 <PickContigCase+0x289>
movzwl 0x1e(%r15),%eax
cmp    $0x3,%ax
jbe    2b719 <PickContigCase+0x289>
mov    %r15,%rdi
callq  2bbc0 <BuildMapBitdepth16To8>
test   %eax,%eax
je     2b521 <PickContigCase+0x91>
lea    0x15b6(%rip),%rax        # 2cb30 <putRGBAAcontig16bittile>
mov    %rax,0x48(%r15)
jmp    2b521 <PickContigCase+0x91>
movzwl 0x1e(%r15),%eax
cmp    $0x3,%ax
jbe    2b521 <PickContigCase+0x91>
mov    %r15,%rdi
callq  31760 <buildMap>
test   %eax,%eax
je     2b521 <PickContigCase+0x91>
movzwl 0x1c(%r15),%eax
cmp    $0x8,%ax
jne    2b521 <PickContigCase+0x91>
mov    0x50(%r15),%rax
test   %rax,%rax
jne    2b765 <PickContigCase+0x2d5>
lea    0x16e6(%rip),%rax        # 2cca0 <putRGBcontig8bitCMYKtile>
mov    %rax,0x48(%r15)
jmpq   2b521 <PickContigCase+0x91>
mov    %r15,%rdi
callq  31760 <buildMap>
test   %eax,%eax
je     2b521 <PickContigCase+0x91>
movzwl 0x1c(%r15),%eax
cmp    $0x3,%ax
jbe    2b775 <PickContigCase+0x2e5>
cmp    $0x4,%ax
je     2b799 <PickContigCase+0x309>
cmp    $0x8,%ax
jne    2b521 <PickContigCase+0x91>
lea    0x833(%rip),%rax        # 2be30 <put8bitcmaptile>
mov    %rax,0x48(%r15)
jmpq   2b521 <PickContigCase+0x91>
mov    %r15,%rdi
callq  31760 <buildMap>
test   %eax,%eax
je     2b521 <PickContigCase+0x91>
movzwl 0x1c(%r15),%eax
add    $0xffffffff,%eax
cmp    $0xf,%eax
ja     2b521 <PickContigCase+0x91>
lea    0x42c32(%rip),%rcx        # 6e260 <TIFFFaxBlackTable+0x100a4>
movslq (%rcx,%rax,4),%rax
add    %rcx,%rax
jmpq   *%rax
lea    0xbf2(%rip),%rax        # 2c230 <put1bitbwtile>
mov    %rax,0x48(%r15)
jmpq   2b521 <PickContigCase+0x91>
movzwl 0x1c(%r15),%eax
cmp    $0x8,%ax
jne    2b521 <PickContigCase+0x91>
movzwl 0x1e(%r15),%eax
cmp    $0x3,%ax
jne    2b521 <PickContigCase+0x91>
mov    %r15,%rdi
callq  30a80 <initYCbCrConversion>
test   %eax,%eax
je     2b521 <PickContigCase+0x91>
xor    %eax,%eax
mov    (%r15),%rdi
mov    $0x212,%esi
lea    -0xc(%rbp),%rdx
lea    -0xa(%rbp),%rcx
callq  8390 <TIFFGetFieldDefaulted@plt>
movzwl -0xa(%rbp),%eax
movzwl -0xc(%rbp),%ecx
shl    $0x4,%ecx
or     %ecx,%eax
add    $0xffffffef,%eax
cmp    $0x33,%eax
ja     2b521 <PickContigCase+0x91>
lea    0x42bf4(%rip),%rcx        # 6e2a0 <TIFFFaxBlackTable+0x100e4>
movslq (%rcx,%rax,4),%rax
add    %rcx,%rax
jmpq   *%rax
lea    0x5184(%rip),%rax        # 30840 <putcontig8bitYCbCr11tile>
mov    %rax,0x48(%r15)
jmpq   2b521 <PickContigCase+0x91>
lea    0xdb4(%rip),%rax        # 2c480 <putRGBcontig8bittile>
mov    %rax,0x48(%r15)
jmpq   2b521 <PickContigCase+0x91>
mov    0x48(%r15),%rcx
test   %rcx,%rcx
je     2b864 <PickContigCase+0x3d4>
mov    $0x1,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
movslq 0x10(%r15),%rax
cmp    $0x1,%eax
jne    2b86a <PickContigCase+0x3da>
movzwl 0x1e(%r15),%eax
cmp    $0x3,%ax
jbe    2b86a <PickContigCase+0x3da>
lea    0x1000(%rip),%rax        # 2c710 <putRGBAAcontig8bittile>
mov    %rax,0x48(%r15)
jmpq   2b521 <PickContigCase+0x91>
movslq 0x10(%r15),%rax
cmp    $0x2,%eax
jne    2b8a6 <PickContigCase+0x416>
movzwl 0x1e(%r15),%eax
cmp    $0x3,%ax
jbe    2b8a6 <PickContigCase+0x416>
mov    %r15,%rdi
callq  2bbc0 <BuildMapBitdepth16To8>
test   %eax,%eax
je     2b521 <PickContigCase+0x91>
mov    %r15,%rdi
callq  2bae0 <BuildMapUaToAa>
test   %eax,%eax
je     2b521 <PickContigCase+0x91>
lea    0x1474(%rip),%rax        # 2cbd0 <putRGBUAcontig16bittile>
mov    %rax,0x48(%r15)
jmpq   2b521 <PickContigCase+0x91>
lea    0x1f44(%rip),%rax        # 2d6b0 <putRGBcontig8bitCMYKMaptile>
mov    %rax,0x48(%r15)
jmpq   2b521 <PickContigCase+0x91>
cmp    $0x1,%ax
je     2b8d5 <PickContigCase+0x445>
cmp    $0x2,%ax
jne    2b521 <PickContigCase+0x91>
lea    0x780(%rip),%rax        # 2bf10 <put2bitcmaptile>
mov    %rax,0x48(%r15)
jmpq   2b521 <PickContigCase+0x91>
lea    0x6f0(%rip),%rax        # 2be90 <put4bitcmaptile>
mov    %rax,0x48(%r15)
jmpq   2b521 <PickContigCase+0x91>
lea    0xa00(%rip),%rax        # 2c1b0 <put16bitbwtile>
mov    %rax,0x48(%r15)
jmpq   2b521 <PickContigCase+0x91>
movslq 0x10(%r15),%rax
test   %eax,%eax
je     2b8e5 <PickContigCase+0x455>
movzwl 0x1e(%r15),%eax
cmp    $0x2,%ax
jne    2b8e5 <PickContigCase+0x455>
lea    0x965(%rip),%rax        # 2c140 <putagreytile>
mov    %rax,0x48(%r15)
jmpq   2b521 <PickContigCase+0x91>
lea    0xc15(%rip),%rax        # 2c400 <put4bitbwtile>
mov    %rax,0x48(%r15)
jmpq   2b521 <PickContigCase+0x91>
lea    0xb45(%rip),%rax        # 2c340 <put2bitbwtile>
mov    %rax,0x48(%r15)
jmpq   2b521 <PickContigCase+0x91>
lea    0x2c55(%rip),%rax        # 2e460 <putcontig8bitYCbCr44tile>
mov    %rax,0x48(%r15)
jmpq   2b521 <PickContigCase+0x91>
lea    0x3b85(%rip),%rax        # 2f3a0 <putcontig8bitYCbCr42tile>
mov    %rax,0x48(%r15)
jmpq   2b521 <PickContigCase+0x91>
lea    0x43e5(%rip),%rax        # 2fc10 <putcontig8bitYCbCr41tile>
mov    %rax,0x48(%r15)
jmpq   2b521 <PickContigCase+0x91>
lea    0x47b5(%rip),%rax        # 2fff0 <putcontig8bitYCbCr22tile>
mov    %rax,0x48(%r15)
jmpq   2b521 <PickContigCase+0x91>
lea    0x4bf5(%rip),%rax        # 30440 <putcontig8bitYCbCr21tile>
mov    %rax,0x48(%r15)
jmpq   2b521 <PickContigCase+0x91>
lea    0x4de5(%rip),%rax        # 30640 <putcontig8bitYCbCr12tile>
mov    %rax,0x48(%r15)
jmpq   2b521 <PickContigCase+0x91>
mov    -0x8(%rbp),%r15
leaveq 
retq   
movslq 0x10(%r15),%rax
cmp    $0x2,%eax
jne    2b512 <PickContigCase+0x82>
movzwl 0x1e(%r15),%eax
cmp    $0x3,%ax
jbe    2b512 <PickContigCase+0x82>
mov    %r15,%rdi
callq  2bae0 <BuildMapUaToAa>
test   %eax,%eax
je     2b521 <PickContigCase+0x91>
lea    0x1143(%rip),%rax        # 2c9e0 <putRGBUAcontig8bittile>
mov    %rax,0x48(%r15)
jmpq   2b521 <PickContigCase+0x91>
movzwl 0x1e(%r15),%eax
cmp    $0x2,%ax
jbe    2b521 <PickContigCase+0x91>
mov    %r15,%rdi
callq  2bbc0 <BuildMapBitdepth16To8>
test   %eax,%eax
je     2b521 <PickContigCase+0x91>
lea    0x11c4(%rip),%rax        # 2ca90 <putRGBcontig16bittile>
mov    %rax,0x48(%r15)
jmpq   2b521 <PickContigCase+0x91>
lea    0x6f4(%rip),%rax        # 2bfd0 <put1bitcmaptile>
mov    %rax,0x48(%r15)
jmpq   2b521 <PickContigCase+0x91>
lea    0x7f4(%rip),%rax        # 2c0e0 <putgreytile>
mov    %rax,0x48(%r15)
jmpq   2b521 <PickContigCase+0x91>
data16 nopw %cs:0x0(%rax,%rax,1)

000000000002b900 <PickSeparateCase>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x8(%rbp)
mov    %rdi,%r15
mov    (%r15),%rdi
callq  8890 <TIFFIsTiled@plt>
test   %eax,%eax
jne    2b924 <PickSeparateCase+0x24>
lea    -0xd22(%rip),%rax        # 2ac00 <gtStripSeparate>
jmp    2b92b <PickSeparateCase+0x2b>
lea    -0x1a4b(%rip),%rax        # 29ee0 <gtTileSeparate>
mov    %rax,0x40(%r15)
movq   $0x0,0x48(%r15)
movzwl 0x24(%r15),%eax
cmp    $0x6,%ax
ja     2b9b5 <PickSeparateCase+0xb5>
lea    0x42a27(%rip),%rcx        # 6e370 <TIFFFaxBlackTable+0x101b4>
movslq (%rcx,%rax,4),%rax
add    %rcx,%rax
jmpq   *%rax
movzwl 0x1c(%r15),%eax
cmp    $0x8,%ax
jne    2b9b5 <PickSeparateCase+0xb5>
movzwl 0x1e(%r15),%eax
cmp    $0x3,%ax
jne    2b9b5 <PickSeparateCase+0xb5>
mov    %r15,%rdi
callq  30a80 <initYCbCrConversion>
test   %eax,%eax
je     2b9b5 <PickSeparateCase+0xb5>
xor    %eax,%eax
mov    (%r15),%rdi
mov    $0x212,%esi
lea    -0xc(%rbp),%rdx
lea    -0xa(%rbp),%rcx
callq  8390 <TIFFGetFieldDefaulted@plt>
movzwl -0xa(%rbp),%eax
movzwl -0xc(%rbp),%ecx
shl    $0x4,%ecx
or     %ecx,%eax
cmp    $0x11,%eax
jne    2b9b5 <PickSeparateCase+0xb5>
lea    0x4f8c(%rip),%rax        # 30930 <putseparate8bitYCbCr11tile>
mov    %rax,0x48(%r15)
jmp    2b9b5 <PickSeparateCase+0xb5>
movzwl 0x1c(%r15),%eax
cmp    $0x8,%ax
je     2ba02 <PickSeparateCase+0x102>
xor    %eax,%eax
mov    0x40(%r15),%rcx
test   %rcx,%rcx
jne    2ba22 <PickSeparateCase+0x122>
mov    -0x8(%rbp),%r15
leaveq 
retq   
movzwl 0x1c(%r15),%eax
cmp    $0x8,%ax
je     2ba36 <PickSeparateCase+0x136>
cmp    $0x10,%ax
jne    2b9b5 <PickSeparateCase+0xb5>
movslq 0x10(%r15),%rax
cmp    $0x1,%eax
je     2ba54 <PickSeparateCase+0x154>
cmp    $0x2,%eax
je     2ba74 <PickSeparateCase+0x174>
mov    %r15,%rdi
callq  2bbc0 <BuildMapBitdepth16To8>
test   %eax,%eax
je     2b9b5 <PickSeparateCase+0xb5>
lea    0x2694(%rip),%rax        # 2e090 <putRGBseparate16bittile>
mov    %rax,0x48(%r15)
jmp    2b9b5 <PickSeparateCase+0xb5>
movzwl 0x1e(%r15),%eax
cmp    $0x4,%ax
jne    2b9b5 <PickSeparateCase+0xb5>
movl   $0x1,0x10(%r15)
lea    0x2474(%rip),%rax        # 2de90 <putCMYKseparate8bittile>
mov    %rax,0x48(%r15)
jmp    2b9b5 <PickSeparateCase+0xb5>
mov    0x48(%r15),%rcx
test   %rcx,%rcx
je     2baa4 <PickSeparateCase+0x1a4>
mov    $0x1,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
movslq 0x10(%r15),%rax
cmp    $0x1,%eax
je     2baaa <PickSeparateCase+0x1aa>
cmp    $0x2,%eax
je     2baba <PickSeparateCase+0x1ba>
lea    0x1da5(%rip),%rax        # 2d7f0 <putRGBseparate8bittile>
mov    %rax,0x48(%r15)
jmpq   2b9b5 <PickSeparateCase+0xb5>
mov    %r15,%rdi
callq  2bbc0 <BuildMapBitdepth16To8>
test   %eax,%eax
je     2b9b5 <PickSeparateCase+0xb5>
lea    0x26e5(%rip),%rax        # 2e150 <putRGBAAseparate16bittile>
mov    %rax,0x48(%r15)
jmpq   2b9b5 <PickSeparateCase+0xb5>
mov    %r15,%rdi
callq  2bbc0 <BuildMapBitdepth16To8>
test   %eax,%eax
je     2b9b5 <PickSeparateCase+0xb5>
mov    %r15,%rdi
callq  2bae0 <BuildMapUaToAa>
test   %eax,%eax
je     2b9b5 <PickSeparateCase+0xb5>
lea    0x27a5(%rip),%rax        # 2e240 <putRGBUAseparate16bittile>
mov    %rax,0x48(%r15)
jmpq   2b9b5 <PickSeparateCase+0xb5>
mov    -0x8(%rbp),%r15
leaveq 
retq   
lea    0x201f(%rip),%rax        # 2dad0 <putRGBAAseparate8bittile>
mov    %rax,0x48(%r15)
jmpq   2b9b5 <PickSeparateCase+0xb5>
mov    %r15,%rdi
callq  2bae0 <BuildMapUaToAa>
test   %eax,%eax
je     2b9b5 <PickSeparateCase+0xb5>
lea    0x24df(%rip),%rax        # 2dfb0 <putRGBUAseparate8bittile>
mov    %rax,0x48(%r15)
jmpq   2b9b5 <PickSeparateCase+0xb5>
nopw   0x0(%rax,%rax,1)

000000000002bae0 <BuildMapUaToAa>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    0x78(%rdi),%rax
test   %rax,%rax
je     2bb10 <BuildMapUaToAa+0x30>
lea    0x43b26(%rip),%rdi        # 6f61e <module.50+0xf>
lea    0x43b31(%rip),%rsi        # 6f630 <module.50+0x21>
mov    $0xb12,%edx
lea    0x43b34(%rip),%rcx        # 6f63f <module.50+0x30>
callq  8490 <__assert_fail@plt>
mov    $0x10000,%eax
mov    %r15,-0x8(%rbp)
mov    %rdi,%r15
mov    %rax,%rdi
callq  8440 <_TIFFmalloc@plt>
mov    %rax,0x78(%r15)
xor    %ecx,%ecx
test   %rax,%rax
je     2bb3e <BuildMapUaToAa+0x5e>
mov    %rax,%r15
mov    $0xffffffff80808081,%rsi
mov    %rcx,%rdi
jmp    2bba3 <BuildMapUaToAa+0xc3>
xor    %eax,%eax
mov    (%r15),%rdx
mov    0x3b8(%rdx),%rdi
mov    %rcx,%r15
lea    0x43abb(%rip),%rsi        # 6f60f <module.50>
lea    0x43af3(%rip),%rdx        # 6f64e <module.50+0x3f>
callq  8a00 <TIFFErrorExt@plt>
mov    %r15,%rax
mov    -0x8(%rbp),%r15
leaveq 
retq   
movzwl %r9w,%eax
mov    %r8,%r10
imul   %eax,%r10d
lea    0x7f(%r10),%edx
mov    %rsi,%rax
imul   %edx
lea    0x7f(%r10,%rdx,1),%eax
mov    %rax,%rdx
sar    $0x7,%edx
shr    $0x1f,%eax
add    %edx,%eax
mov    %al,(%r15)
add    $0x1,%r9d
add    $0x1,%r15
cmp    $0xff,%r9w
jbe    2bb69 <BuildMapUaToAa+0x89>
add    $0x1,%edi
cmp    $0xff,%di
jbe    2bbb5 <BuildMapUaToAa+0xd5>
mov    $0x1,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
movzwl %di,%r8d
mov    %rcx,%r9
jmp    2bb98 <BuildMapUaToAa+0xb8>
xchg   %ax,%ax

000000000002bbc0 <BuildMapBitdepth16To8>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    0x80(%rdi),%rax
test   %rax,%rax
je     2bbf3 <BuildMapBitdepth16To8+0x33>
lea    0x43a97(%rip),%rdi        # 6f672 <module.55+0x16>
lea    0x43a4e(%rip),%rsi        # 6f630 <module.50+0x21>
mov    $0xb28,%edx
lea    0x43a9d(%rip),%rcx        # 6f68b <module.55+0x2f>
callq  8490 <__assert_fail@plt>
mov    $0x10000,%eax
mov    %r15,-0x8(%rbp)
mov    %rdi,%r15
mov    %rax,%rdi
callq  8440 <_TIFFmalloc@plt>
mov    %rax,0x80(%r15)
xor    %ecx,%ecx
test   %rax,%rax
je     2bc24 <BuildMapBitdepth16To8+0x64>
mov    %rax,%r15
mov    $0xff00ff01,%edi
mov    $0x80,%esi
jmp    2bc64 <BuildMapBitdepth16To8+0xa4>
xor    %eax,%eax
mov    (%r15),%rdx
mov    0x3b8(%rdx),%rdi
mov    %rcx,%r15
lea    0x43a22(%rip),%rsi        # 6f65c <module.55>
lea    0x43a0d(%rip),%rdx        # 6f64e <module.50+0x3f>
callq  8a00 <TIFFErrorExt@plt>
mov    %r15,%rax
mov    -0x8(%rbp),%r15
leaveq 
retq   
mov    %rdi,%rax
mul    %esi
shr    $0x8,%edx
mov    %dl,(%r15)
add    $0x1,%ecx
add    $0x1,%esi
add    $0x1,%r15
cmp    $0xffff,%ecx
jbe    2bc4f <BuildMapBitdepth16To8+0x8f>
mov    $0x1,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

000000000002bc80 <isCCITTCompression>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
xor    %eax,%eax
mov    $0x103,%esi
lea    -0x2(%rbp),%rdx
callq  8230 <TIFFGetField@plt>
mov    $0x1,%eax
movzwl -0x2(%rbp),%ecx
cmp    $0x3,%cx
jne    2bca9 <isCCITTCompression+0x29>
leaveq 
retq   
cmp    $0x4,%cx
jne    2bcb1 <isCCITTCompression+0x31>
leaveq 
retq   
cmp    $0x2,%cx
jne    2bcb9 <isCCITTCompression+0x39>
leaveq 
retq   
cmp    $0x8003,%cx
jne    2bcc2 <isCCITTCompression+0x42>
leaveq 
retq   
xor    %eax,%eax
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)

000000000002bcd0 <setorientation>:
push   %rbp
mov    %rsp,%rbp
xor    %eax,%eax
movzwl 0x20(%rdi),%ecx
add    $0xffffffff,%ecx
cmp    $0x7,%ecx
jbe    2bce4 <setorientation+0x14>
leaveq 
retq   
mov    $0x2,%edx
mov    $0x3,%esi
mov    $0x1,%r8d
lea    0x42691(%rip),%r9        # 6e38c <TIFFFaxBlackTable+0x101d0>
movslq (%r9,%rcx,4),%rcx
add    %r9,%rcx
jmpq   *%rcx
leaveq 
retq   
movzwl 0x22(%rdi),%ecx
cmp    $0x2,%cx
jne    2bd42 <setorientation+0x72>
mov    %rdx,%rax
leaveq 
retq   
movzwl 0x22(%rdi),%ecx
cmp    $0x1,%cx
jne    2bd4d <setorientation+0x7d>
mov    %rdx,%rax
leaveq 
retq   
movzwl 0x22(%rdi),%ecx
cmp    $0x1,%cx
jne    2bd58 <setorientation+0x88>
mov    %rsi,%rax
leaveq 
retq   
movzwl 0x22(%rdi),%ecx
cmp    $0x1,%cx
jne    2bd63 <setorientation+0x93>
mov    %r8,%rax
leaveq 
retq   
cmp    $0x6,%cx
jne    2bd6e <setorientation+0x9e>
mov    %rdx,%rax
leaveq 
retq   
cmp    $0x5,%cx
jne    2bd79 <setorientation+0xa9>
mov    %rdx,%rax
leaveq 
retq   
cmp    $0x5,%cx
jne    2bd84 <setorientation+0xb4>
mov    %rsi,%rax
leaveq 
retq   
cmp    $0x5,%cx
jne    2bd8f <setorientation+0xbf>
mov    %r8,%rax
leaveq 
retq   
cmp    $0x3,%cx
jne    2bd9a <setorientation+0xca>
mov    %rsi,%rax
leaveq 
retq   
cmp    $0x3,%cx
jne    2bda5 <setorientation+0xd5>
mov    %r8,%rax
leaveq 
retq   
cmp    $0x2,%cx
jne    2bdb0 <setorientation+0xe0>
mov    %r8,%rax
leaveq 
retq   
cmp    $0x2,%cx
jne    2bdbb <setorientation+0xeb>
mov    %rsi,%rax
leaveq 
retq   
cmp    $0x7,%cx
jne    2bdc6 <setorientation+0xf6>
mov    %rsi,%rax
leaveq 
retq   
cmp    $0x7,%cx
jne    2bdd1 <setorientation+0x101>
mov    %r8,%rax
leaveq 
retq   
cmp    $0x6,%cx
jne    2bddc <setorientation+0x10c>
mov    %r8,%rax
leaveq 
retq   
cmp    $0x6,%cx
jne    2bde7 <setorientation+0x117>
mov    %rsi,%rax
leaveq 
retq   
cmp    $0x4,%cx
jne    2bdf2 <setorientation+0x122>
mov    %r8,%rax
leaveq 
retq   
cmp    $0x4,%cx
jne    2bdfd <setorientation+0x12d>
mov    %rsi,%rax
leaveq 
retq   
cmp    $0x4,%cx
jne    2be08 <setorientation+0x138>
mov    %rdx,%rax
leaveq 
retq   
cmp    $0x3,%cx
jne    2be13 <setorientation+0x143>
mov    %rdx,%rax
leaveq 
retq   
cmp    $0x8,%cx
jne    2be1e <setorientation+0x14e>
mov    %r8,%rax
leaveq 
retq   
cmp    $0x8,%cx
jne    2be20 <setorientation+0x150>
mov    %rsi,%rax
leaveq 
retq   
cmp    $0x8,%cx
jne    2be22 <setorientation+0x152>
mov    %rdx,%rax
leaveq 
retq   
cmp    $0x7,%cx
jne    2be24 <setorientation+0x154>
mov    %rdx,%rax
leaveq 
retq   
leaveq 
retq   
leaveq 
retq   
leaveq 
retq   
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)

000000000002be30 <put8bitcmaptile>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x8(%rbp)
mov    0x60(%rdi),%r10
movzwl 0x1e(%rdi),%edi
mov    0x20(%rbp),%rax
movslq 0x10(%rbp),%r11
movslq 0x18(%rbp),%r15
jmp    2be76 <put8bitcmaptile+0x46>
movzbl (%rax),%edx
mov    (%r10,%rdx,8),%rdx
mov    (%rdx),%edx
mov    %edx,(%rsi)
add    %rdi,%rax
add    $0x4,%rsi
add    $0xffffffff,%ecx
test   %ecx,%ecx
jne    2be52 <put8bitcmaptile+0x22>
add    $0xffffffff,%r9d
add    %r11,%rax
lea    (%rsi,%r15,4),%rsi
test   %r9d,%r9d
jne    2be81 <put8bitcmaptile+0x51>
mov    -0x8(%rbp),%r15
leaveq 
retq   
mov    %r8,%rcx
jmp    2be67 <put8bitcmaptile+0x37>
nopw   %cs:0x0(%rax,%rax,1)

000000000002be90 <put4bitcmaptile>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x8(%rbp)
mov    0x60(%rdi),%r10
mov    0x20(%rbp),%rax
movslq 0x10(%rbp),%rcx
mov    %rcx,%rdx
shr    $0x1f,%edx
add    %edx,%ecx
sar    %ecx
movslq %ecx,%r11
movslq 0x18(%rbp),%r15
jmp    2befe <put4bitcmaptile+0x6e>
movzbl (%rax),%edx
mov    (%r10,%rdx,8),%rdi
mov    (%rdi),%edx
mov    %edx,(%rsi)
mov    0x4(%rdi),%edx
mov    %edx,0x4(%rsi)
add    $0x1,%rax
add    $0x8,%rsi
add    $0xfffffffe,%ecx
cmp    $0x1,%ecx
ja     2bebb <put4bitcmaptile+0x2b>
test   %ecx,%ecx
je     2bef3 <put4bitcmaptile+0x63>
movzbl (%rax),%ecx
mov    (%r10,%rcx,8),%rcx
mov    (%rcx),%ecx
mov    %ecx,(%rsi)
add    $0x1,%rax
add    $0x4,%rsi
add    $0xffffffff,%r9d
add    %r11,%rax
lea    (%rsi,%r15,4),%rsi
test   %r9d,%r9d
jne    2bf09 <put4bitcmaptile+0x79>
mov    -0x8(%rbp),%r15
leaveq 
retq   
mov    %r8,%rcx
jmp    2bed7 <put4bitcmaptile+0x47>
xchg   %ax,%ax

000000000002bf10 <put2bitcmaptile>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x8(%rbp)
mov    0x60(%rdi),%r10
mov    0x20(%rbp),%rax
movslq 0x10(%rbp),%rdx
mov    %rdx,%rcx
sar    %ecx
shr    $0x1e,%ecx
add    %edx,%ecx
sar    $0x2,%ecx
movslq %ecx,%r11
movslq 0x18(%rbp),%r15
jmp    2bfb4 <put2bitcmaptile+0xa4>
movzbl (%rax),%edx
mov    (%r10,%rdx,8),%rdi
mov    (%rdi),%edx
mov    %edx,(%rsi)
mov    0x4(%rdi),%edx
mov    %edx,0x4(%rsi)
mov    0x8(%rdi),%edx
mov    %edx,0x8(%rsi)
mov    0xc(%rdi),%edx
mov    %edx,0xc(%rsi)
add    $0x1,%rax
add    $0x10,%rsi
add    $0xfffffffc,%ecx
cmp    $0x3,%ecx
ja     2bf3e <put2bitcmaptile+0x2e>
test   %ecx,%ecx
je     2bfa9 <put2bitcmaptile+0x99>
movzbl (%rax),%edx
mov    (%r10,%rdx,8),%rdx
add    $0x1,%rax
cmp    $0x1,%ecx
jbe    2bfbf <put2bitcmaptile+0xaf>
cmp    $0x2,%ecx
je     2bf95 <put2bitcmaptile+0x85>
cmp    $0x3,%ecx
jne    2bfa9 <put2bitcmaptile+0x99>
mov    (%rdx),%ecx
mov    %ecx,(%rsi)
add    $0x4,%rdx
add    $0x4,%rsi
mov    (%rdx),%ecx
mov    %ecx,(%rsi)
add    $0x4,%rdx
add    $0x4,%rsi
mov    (%rdx),%ecx
mov    %ecx,(%rsi)
add    $0x4,%rsi
add    $0xffffffff,%r9d
add    %r11,%rax
lea    (%rsi,%r15,4),%rsi
test   %r9d,%r9d
jne    2bfc6 <put2bitcmaptile+0xb6>
mov    -0x8(%rbp),%r15
leaveq 
retq   
cmp    $0x1,%ecx
je     2bfa1 <put2bitcmaptile+0x91>
jmp    2bfa9 <put2bitcmaptile+0x99>
mov    %r8,%rcx
jmp    2bf66 <put2bitcmaptile+0x56>
nopl   0x0(%rax,%rax,1)

000000000002bfd0 <put1bitcmaptile>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x8(%rbp)
mov    0x60(%rdi),%r10
mov    0x20(%rbp),%rax
movslq 0x10(%rbp),%rdx
mov    %rdx,%rcx
sar    $0x2,%ecx
shr    $0x1d,%ecx
add    %edx,%ecx
sar    $0x3,%ecx
movslq %ecx,%r11
movslq 0x18(%rbp),%r15
jmpq   2c0c9 <put1bitcmaptile+0xf9>
movzbl (%rax),%edx
mov    (%r10,%rdx,8),%rdi
mov    (%rdi),%edx
mov    %edx,(%rsi)
mov    0x4(%rdi),%edx
mov    %edx,0x4(%rsi)
mov    0x8(%rdi),%edx
mov    %edx,0x8(%rsi)
mov    0xc(%rdi),%edx
mov    %edx,0xc(%rsi)
mov    0x10(%rdi),%edx
mov    %edx,0x10(%rsi)
mov    0x14(%rdi),%edx
mov    %edx,0x14(%rsi)
mov    0x18(%rdi),%edx
mov    %edx,0x18(%rsi)
mov    0x1c(%rdi),%edx
mov    %edx,0x1c(%rsi)
add    $0x1,%rax
add    $0x20,%rsi
add    $0xfffffff8,%ecx
cmp    $0x7,%ecx
ja     2c002 <put1bitcmaptile+0x32>
test   %ecx,%ecx
je     2c0be <put1bitcmaptile+0xee>
movzbl (%rax),%edx
mov    (%r10,%rdx,8),%rdx
add    $0x1,%rax
lea    -0x1(%rcx),%edi
cmp    $0x6,%edi
ja     2c0be <put1bitcmaptile+0xee>
lea    0x42347(%rip),%rcx        # 6e3ac <TIFFFaxBlackTable+0x101f0>
movslq (%rcx,%rdi,4),%rdi
add    %rdi,%rcx
jmpq   *%rcx
mov    (%rdx),%ecx
mov    %ecx,(%rsi)
add    $0x4,%rdx
add    $0x4,%rsi
mov    (%rdx),%ecx
mov    %ecx,(%rsi)
add    $0x4,%rdx
add    $0x4,%rsi
mov    (%rdx),%ecx
mov    %ecx,(%rsi)
add    $0x4,%rdx
add    $0x4,%rsi
mov    (%rdx),%ecx
mov    %ecx,(%rsi)
add    $0x4,%rdx
add    $0x4,%rsi
mov    (%rdx),%ecx
mov    %ecx,(%rsi)
add    $0x4,%rdx
add    $0x4,%rsi
mov    (%rdx),%ecx
mov    %ecx,(%rsi)
add    $0x4,%rdx
add    $0x4,%rsi
mov    (%rdx),%ecx
mov    %ecx,(%rsi)
add    $0x4,%rsi
add    $0xffffffff,%r9d
add    %r11,%rax
lea    (%rsi,%r15,4),%rsi
test   %r9d,%r9d
jne    2c0d4 <put1bitcmaptile+0x104>
mov    -0x8(%rbp),%r15
leaveq 
retq   
mov    %r8,%rcx
jmpq   2c042 <put1bitcmaptile+0x72>
nopl   0x0(%rax)

000000000002c0e0 <putgreytile>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x8(%rbp)
movzwl 0x1e(%rdi),%r10d
mov    0x58(%rdi),%rdi
mov    0x20(%rbp),%rax
movslq 0x10(%rbp),%r11
movslq 0x18(%rbp),%r15
jmp    2c127 <putgreytile+0x47>
movzbl (%rax),%edx
mov    (%rdi,%rdx,8),%rdx
mov    (%rdx),%edx
mov    %edx,(%rsi)
add    %r10,%rax
add    $0x4,%rsi
add    $0xffffffff,%ecx
test   %ecx,%ecx
jne    2c103 <putgreytile+0x23>
add    $0xffffffff,%r9d
add    %r11,%rax
lea    (%rsi,%r15,4),%rsi
test   %r9d,%r9d
jne    2c132 <putgreytile+0x52>
mov    -0x8(%rbp),%r15
leaveq 
retq   
mov    %r8,%rcx
jmp    2c118 <putgreytile+0x38>
nopw   0x0(%rax,%rax,1)

000000000002c140 <putagreytile>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
movzwl 0x1e(%rdi),%r11d
mov    0x58(%rdi),%r14
mov    0x20(%rbp),%rax
movslq 0x10(%rbp),%r10
movslq 0x18(%rbp),%rdi
jmp    2c199 <putagreytile+0x59>
movzbl (%rax),%ecx
mov    (%r14,%rcx,8),%r15
movzbl 0x1(%rax),%ecx
shl    $0x18,%ecx
add    $0xffffff,%ecx
and    (%r15),%ecx
mov    %ecx,(%rsi)
add    %r11,%rax
add    $0x4,%rsi
add    $0xffffffff,%edx
test   %edx,%edx
jne    2c167 <putagreytile+0x27>
add    $0xffffffff,%r9d
add    %r10,%rax
lea    (%rsi,%rdi,4),%rsi
test   %r9d,%r9d
jne    2c1a8 <putagreytile+0x68>
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
mov    %r8,%rdx
jmp    2c18a <putagreytile+0x4a>
nopl   (%rax)

000000000002c1b0 <put16bitbwtile>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %r13,-0x8(%rbp)
mov    %r14,-0x10(%rbp)
mov    %r15,-0x18(%rbp)
mov    0x58(%rdi),%r10
mov    0x20(%rbp),%rax
movslq 0x10(%rbp),%r14
movslq 0x18(%rbp),%r15
movzwl 0x1e(%rdi),%r13d
lea    0x0(%r13,%r13,1),%ecx
movslq %ecx,%r11
jmp    2c211 <put16bitbwtile+0x61>
movzwl (%rcx),%edx
shr    $0x8,%edx
movslq %edx,%rdx
mov    (%r10,%rdx,8),%rdx
mov    (%rdx),%edx
mov    %edx,(%rsi)
lea    (%rcx,%r13,2),%rcx
add    $0x4,%rsi
add    $0xffffffff,%edi
add    %r11,%rax
test   %edi,%edi
jne    2c1e3 <put16bitbwtile+0x33>
add    $0xffffffff,%r9d
add    %r14,%rax
lea    (%rsi,%r15,4),%rsi
test   %r9d,%r9d
jne    2c224 <put16bitbwtile+0x74>
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
leaveq 
retq   
mov    %rax,%rcx
mov    %r8,%rdi
jmp    2c202 <put16bitbwtile+0x52>
nopl   0x0(%rax)

000000000002c230 <put1bitbwtile>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x8(%rbp)
mov    0x58(%rdi),%r10
mov    0x20(%rbp),%rax
movslq 0x10(%rbp),%rdx
mov    %rdx,%rcx
sar    $0x2,%ecx
shr    $0x1d,%ecx
add    %edx,%ecx
sar    $0x3,%ecx
movslq %ecx,%r11
movslq 0x18(%rbp),%r15
jmpq   2c329 <put1bitbwtile+0xf9>
movzbl (%rax),%edx
mov    (%r10,%rdx,8),%rdi
mov    (%rdi),%edx
mov    %edx,(%rsi)
mov    0x4(%rdi),%edx
mov    %edx,0x4(%rsi)
mov    0x8(%rdi),%edx
mov    %edx,0x8(%rsi)
mov    0xc(%rdi),%edx
mov    %edx,0xc(%rsi)
mov    0x10(%rdi),%edx
mov    %edx,0x10(%rsi)
mov    0x14(%rdi),%edx
mov    %edx,0x14(%rsi)
mov    0x18(%rdi),%edx
mov    %edx,0x18(%rsi)
mov    0x1c(%rdi),%edx
mov    %edx,0x1c(%rsi)
add    $0x1,%rax
add    $0x20,%rsi
add    $0xfffffff8,%ecx
cmp    $0x7,%ecx
ja     2c262 <put1bitbwtile+0x32>
test   %ecx,%ecx
je     2c31e <put1bitbwtile+0xee>
movzbl (%rax),%edx
mov    (%r10,%rdx,8),%rdx
add    $0x1,%rax
lea    -0x1(%rcx),%edi
cmp    $0x6,%edi
ja     2c31e <put1bitbwtile+0xee>
lea    0x42103(%rip),%rcx        # 6e3c8 <TIFFFaxBlackTable+0x1020c>
movslq (%rcx,%rdi,4),%rdi
add    %rdi,%rcx
jmpq   *%rcx
mov    (%rdx),%ecx
mov    %ecx,(%rsi)
add    $0x4,%rdx
add    $0x4,%rsi
mov    (%rdx),%ecx
mov    %ecx,(%rsi)
add    $0x4,%rdx
add    $0x4,%rsi
mov    (%rdx),%ecx
mov    %ecx,(%rsi)
add    $0x4,%rdx
add    $0x4,%rsi
mov    (%rdx),%ecx
mov    %ecx,(%rsi)
add    $0x4,%rdx
add    $0x4,%rsi
mov    (%rdx),%ecx
mov    %ecx,(%rsi)
add    $0x4,%rdx
add    $0x4,%rsi
mov    (%rdx),%ecx
mov    %ecx,(%rsi)
add    $0x4,%rdx
add    $0x4,%rsi
mov    (%rdx),%ecx
mov    %ecx,(%rsi)
add    $0x4,%rsi
add    $0xffffffff,%r9d
add    %r11,%rax
lea    (%rsi,%r15,4),%rsi
test   %r9d,%r9d
jne    2c334 <put1bitbwtile+0x104>
mov    -0x8(%rbp),%r15
leaveq 
retq   
mov    %r8,%rcx
jmpq   2c2a2 <put1bitbwtile+0x72>
nopl   0x0(%rax)

000000000002c340 <put2bitbwtile>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x8(%rbp)
mov    0x58(%rdi),%r10
mov    0x20(%rbp),%rax
movslq 0x10(%rbp),%rdx
mov    %rdx,%rcx
sar    %ecx
shr    $0x1e,%ecx
add    %edx,%ecx
sar    $0x2,%ecx
movslq %ecx,%r11
movslq 0x18(%rbp),%r15
jmp    2c3e4 <put2bitbwtile+0xa4>
movzbl (%rax),%edx
mov    (%r10,%rdx,8),%rdi
mov    (%rdi),%edx
mov    %edx,(%rsi)
mov    0x4(%rdi),%edx
mov    %edx,0x4(%rsi)
mov    0x8(%rdi),%edx
mov    %edx,0x8(%rsi)
mov    0xc(%rdi),%edx
mov    %edx,0xc(%rsi)
add    $0x1,%rax
add    $0x10,%rsi
add    $0xfffffffc,%ecx
cmp    $0x3,%ecx
ja     2c36e <put2bitbwtile+0x2e>
test   %ecx,%ecx
je     2c3d9 <put2bitbwtile+0x99>
movzbl (%rax),%edx
mov    (%r10,%rdx,8),%rdx
add    $0x1,%rax
cmp    $0x1,%ecx
jbe    2c3ef <put2bitbwtile+0xaf>
cmp    $0x2,%ecx
je     2c3c5 <put2bitbwtile+0x85>
cmp    $0x3,%ecx
jne    2c3d9 <put2bitbwtile+0x99>
mov    (%rdx),%ecx
mov    %ecx,(%rsi)
add    $0x4,%rdx
add    $0x4,%rsi
mov    (%rdx),%ecx
mov    %ecx,(%rsi)
add    $0x4,%rdx
add    $0x4,%rsi
mov    (%rdx),%ecx
mov    %ecx,(%rsi)
add    $0x4,%rsi
add    $0xffffffff,%r9d
add    %r11,%rax
lea    (%rsi,%r15,4),%rsi
test   %r9d,%r9d
jne    2c3f6 <put2bitbwtile+0xb6>
mov    -0x8(%rbp),%r15
leaveq 
retq   
cmp    $0x1,%ecx
je     2c3d1 <put2bitbwtile+0x91>
jmp    2c3d9 <put2bitbwtile+0x99>
mov    %r8,%rcx
jmp    2c396 <put2bitbwtile+0x56>
nopl   0x0(%rax,%rax,1)

000000000002c400 <put4bitbwtile>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x8(%rbp)
mov    0x58(%rdi),%r10
mov    0x20(%rbp),%rax
movslq 0x10(%rbp),%rcx
mov    %rcx,%rdx
shr    $0x1f,%edx
add    %edx,%ecx
sar    %ecx
movslq %ecx,%r11
movslq 0x18(%rbp),%r15
jmp    2c46e <put4bitbwtile+0x6e>
movzbl (%rax),%edx
mov    (%r10,%rdx,8),%rdi
mov    (%rdi),%edx
mov    %edx,(%rsi)
mov    0x4(%rdi),%edx
mov    %edx,0x4(%rsi)
add    $0x1,%rax
add    $0x8,%rsi
add    $0xfffffffe,%ecx
cmp    $0x1,%ecx
ja     2c42b <put4bitbwtile+0x2b>
test   %ecx,%ecx
je     2c463 <put4bitbwtile+0x63>
movzbl (%rax),%ecx
mov    (%r10,%rcx,8),%rcx
mov    (%rcx),%ecx
mov    %ecx,(%rsi)
add    $0x1,%rax
add    $0x4,%rsi
add    $0xffffffff,%r9d
add    %r11,%rax
lea    (%rsi,%r15,4),%rsi
test   %r9d,%r9d
jne    2c479 <put4bitbwtile+0x79>
mov    -0x8(%rbp),%r15
leaveq 
retq   
mov    %r8,%rcx
jmp    2c447 <put4bitbwtile+0x47>
xchg   %ax,%ax

000000000002c480 <putRGBcontig8bittile>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    0x20(%rbp),%rax
movzwl 0x1e(%rdi),%r11d
mov    %r11,%rcx
imul   0x10(%rbp),%ecx
movslq %ecx,%r14
movslq 0x18(%rbp),%r15
jmpq   2c6f2 <putRGBcontig8bittile+0x272>
movzbl (%rax),%edi
movzbl 0x1(%rax),%ecx
shl    $0x8,%ecx
add    %ecx,%edi
movzbl 0x2(%rax),%ecx
shl    $0x10,%ecx
lea    -0x1000000(%rdi,%rcx,1),%ecx
mov    %ecx,(%rsi)
movzbl (%r11,%rax,1),%edi
movzbl 0x1(%r11,%rax,1),%ecx
shl    $0x8,%ecx
add    %ecx,%edi
movzbl 0x2(%r11,%rax,1),%ecx
shl    $0x10,%ecx
lea    -0x1000000(%rdi,%rcx,1),%ecx
mov    %ecx,0x4(%rsi)
lea    (%rax,%r11,2),%r10
movzbl (%r10),%edi
movzbl 0x1(%r10),%ecx
shl    $0x8,%ecx
add    %ecx,%edi
movzbl 0x2(%r10),%ecx
shl    $0x10,%ecx
lea    -0x1000000(%rdi,%rcx,1),%ecx
mov    %ecx,0x8(%rsi)
movzbl (%r11,%r10,1),%edi
movzbl 0x1(%r11,%r10,1),%ecx
shl    $0x8,%ecx
add    %ecx,%edi
movzbl 0x2(%r11,%r10,1),%ecx
shl    $0x10,%ecx
lea    -0x1000000(%rdi,%rcx,1),%ecx
mov    %ecx,0xc(%rsi)
lea    (%rax,%r11,4),%rdi
movzbl (%rdi),%ecx
movzbl 0x1(%rdi),%eax
shl    $0x8,%eax
add    %eax,%ecx
movzbl 0x2(%rdi),%eax
shl    $0x10,%eax
lea    -0x1000000(%rcx,%rax,1),%eax
mov    %eax,0x10(%rsi)
movzbl (%r11,%rdi,1),%ecx
movzbl 0x1(%r11,%rdi,1),%eax
shl    $0x8,%eax
add    %eax,%ecx
movzbl 0x2(%r11,%rdi,1),%eax
shl    $0x10,%eax
lea    -0x1000000(%rcx,%rax,1),%eax
mov    %eax,0x14(%rsi)
lea    (%rdi,%r11,2),%rcx
movzbl (%rcx),%edi
movzbl 0x1(%rcx),%eax
shl    $0x8,%eax
add    %eax,%edi
movzbl 0x2(%rcx),%eax
shl    $0x10,%eax
lea    -0x1000000(%rdi,%rax,1),%eax
mov    %eax,0x18(%rsi)
movzbl (%rcx,%r11,1),%edi
movzbl 0x1(%rcx,%r11,1),%eax
shl    $0x8,%eax
add    %eax,%edi
movzbl 0x2(%rcx,%r11,1),%eax
shl    $0x10,%eax
lea    -0x1000000(%rdi,%rax,1),%eax
mov    %eax,0x1c(%rsi)
lea    (%rcx,%r11,2),%rax
add    $0x20,%rsi
add    $0xfffffff8,%edx
cmp    $0x7,%edx
ja     2c4ac <putRGBcontig8bittile+0x2c>
test   %edx,%edx
je     2c6e7 <putRGBcontig8bittile+0x267>
lea    -0x1(%rdx),%ecx
cmp    $0x6,%ecx
ja     2c6e7 <putRGBcontig8bittile+0x267>
lea    0x41dfb(%rip),%rdx        # 6e3e4 <TIFFFaxBlackTable+0x10228>
movslq (%rdx,%rcx,4),%rcx
add    %rdx,%rcx
jmpq   *%rcx
movzbl (%rax),%edx
movzbl 0x1(%rax),%ecx
shl    $0x8,%ecx
add    %ecx,%edx
movzbl 0x2(%rax),%ecx
shl    $0x10,%ecx
lea    -0x1000000(%rdx,%rcx,1),%ecx
mov    %ecx,(%rsi)
add    %r11,%rax
add    $0x4,%rsi
movzbl (%rax),%edx
movzbl 0x1(%rax),%ecx
shl    $0x8,%ecx
add    %ecx,%edx
movzbl 0x2(%rax),%ecx
shl    $0x10,%ecx
lea    -0x1000000(%rdx,%rcx,1),%ecx
mov    %ecx,(%rsi)
add    %r11,%rax
add    $0x4,%rsi
movzbl (%rax),%edx
movzbl 0x1(%rax),%ecx
shl    $0x8,%ecx
add    %ecx,%edx
movzbl 0x2(%rax),%ecx
shl    $0x10,%ecx
lea    -0x1000000(%rdx,%rcx,1),%ecx
mov    %ecx,(%rsi)
add    %r11,%rax
add    $0x4,%rsi
movzbl (%rax),%edx
movzbl 0x1(%rax),%ecx
shl    $0x8,%ecx
add    %ecx,%edx
movzbl 0x2(%rax),%ecx
shl    $0x10,%ecx
lea    -0x1000000(%rdx,%rcx,1),%ecx
mov    %ecx,(%rsi)
add    %r11,%rax
add    $0x4,%rsi
movzbl (%rax),%edx
movzbl 0x1(%rax),%ecx
shl    $0x8,%ecx
add    %ecx,%edx
movzbl 0x2(%rax),%ecx
shl    $0x10,%ecx
lea    -0x1000000(%rdx,%rcx,1),%ecx
mov    %ecx,(%rsi)
add    %r11,%rax
add    $0x4,%rsi
movzbl (%rax),%edx
movzbl 0x1(%rax),%ecx
shl    $0x8,%ecx
add    %ecx,%edx
movzbl 0x2(%rax),%ecx
shl    $0x10,%ecx
lea    -0x1000000(%rdx,%rcx,1),%ecx
mov    %ecx,(%rsi)
add    %r11,%rax
add    $0x4,%rsi
movzbl (%rax),%edx
movzbl 0x1(%rax),%ecx
shl    $0x8,%ecx
add    %ecx,%edx
movzbl 0x2(%rax),%ecx
shl    $0x10,%ecx
lea    -0x1000000(%rdx,%rcx,1),%ecx
mov    %ecx,(%rsi)
add    %r11,%rax
add    $0x4,%rsi
add    $0xffffffff,%r9d
add    %r14,%rax
lea    (%rsi,%r15,4),%rsi
test   %r9d,%r9d
jne    2c701 <putRGBcontig8bittile+0x281>
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
mov    %r8,%rdx
jmpq   2c5c5 <putRGBcontig8bittile+0x145>
nopl   0x0(%rax)

000000000002c710 <putRGBAAcontig8bittile>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    0x20(%rbp),%rax
movzwl 0x1e(%rdi),%r11d
mov    %r11,%rcx
imul   0x10(%rbp),%ecx
movslq %ecx,%r14
movslq 0x18(%rbp),%r15
jmpq   2c9c7 <putRGBAAcontig8bittile+0x2b7>
movzbl (%rax),%edi
movzbl 0x1(%rax),%ecx
shl    $0x8,%ecx
add    %ecx,%edi
movzbl 0x2(%rax),%ecx
shl    $0x10,%ecx
add    %ecx,%edi
movzbl 0x3(%rax),%ecx
shl    $0x18,%ecx
add    %edi,%ecx
mov    %ecx,(%rsi)
movzbl (%r11,%rax,1),%edi
movzbl 0x1(%r11,%rax,1),%ecx
shl    $0x8,%ecx
add    %ecx,%edi
movzbl 0x2(%r11,%rax,1),%ecx
shl    $0x10,%ecx
add    %ecx,%edi
movzbl 0x3(%r11,%rax,1),%ecx
shl    $0x18,%ecx
add    %edi,%ecx
mov    %ecx,0x4(%rsi)
lea    (%rax,%r11,2),%r10
movzbl (%r10),%edi
movzbl 0x1(%r10),%ecx
shl    $0x8,%ecx
add    %ecx,%edi
movzbl 0x2(%r10),%ecx
shl    $0x10,%ecx
add    %ecx,%edi
movzbl 0x3(%r10),%ecx
shl    $0x18,%ecx
add    %edi,%ecx
mov    %ecx,0x8(%rsi)
movzbl (%r11,%r10,1),%edi
movzbl 0x1(%r11,%r10,1),%ecx
shl    $0x8,%ecx
add    %ecx,%edi
movzbl 0x2(%r11,%r10,1),%ecx
shl    $0x10,%ecx
add    %ecx,%edi
movzbl 0x3(%r11,%r10,1),%ecx
shl    $0x18,%ecx
add    %edi,%ecx
mov    %ecx,0xc(%rsi)
lea    (%rax,%r11,4),%rdi
movzbl (%rdi),%ecx
movzbl 0x1(%rdi),%eax
shl    $0x8,%eax
add    %eax,%ecx
movzbl 0x2(%rdi),%eax
shl    $0x10,%eax
add    %eax,%ecx
movzbl 0x3(%rdi),%eax
shl    $0x18,%eax
add    %ecx,%eax
mov    %eax,0x10(%rsi)
movzbl (%r11,%rdi,1),%ecx
movzbl 0x1(%r11,%rdi,1),%eax
shl    $0x8,%eax
add    %eax,%ecx
movzbl 0x2(%r11,%rdi,1),%eax
shl    $0x10,%eax
add    %eax,%ecx
movzbl 0x3(%r11,%rdi,1),%eax
shl    $0x18,%eax
add    %ecx,%eax
mov    %eax,0x14(%rsi)
lea    (%rdi,%r11,2),%rcx
movzbl (%rcx),%edi
movzbl 0x1(%rcx),%eax
shl    $0x8,%eax
add    %eax,%edi
movzbl 0x2(%rcx),%eax
shl    $0x10,%eax
add    %eax,%edi
movzbl 0x3(%rcx),%eax
shl    $0x18,%eax
add    %edi,%eax
mov    %eax,0x18(%rsi)
movzbl (%rcx,%r11,1),%edi
movzbl 0x1(%rcx,%r11,1),%eax
shl    $0x8,%eax
add    %eax,%edi
movzbl 0x2(%rcx,%r11,1),%eax
shl    $0x10,%eax
add    %eax,%edi
movzbl 0x3(%rcx,%r11,1),%eax
shl    $0x18,%eax
add    %edi,%eax
mov    %eax,0x1c(%rsi)
lea    (%rcx,%r11,2),%rax
add    $0x20,%rsi
add    $0xfffffff8,%edx
cmp    $0x7,%edx
ja     2c73c <putRGBAAcontig8bittile+0x2c>
test   %edx,%edx
je     2c9bc <putRGBAAcontig8bittile+0x2ac>
lea    -0x1(%rdx),%ecx
cmp    $0x6,%ecx
ja     2c9bc <putRGBAAcontig8bittile+0x2ac>
lea    0x41b5e(%rip),%rdx        # 6e400 <TIFFFaxBlackTable+0x10244>
movslq (%rdx,%rcx,4),%rcx
add    %rdx,%rcx
jmpq   *%rcx
movzbl (%rax),%edx
movzbl 0x1(%rax),%ecx
shl    $0x8,%ecx
add    %ecx,%edx
movzbl 0x2(%rax),%ecx
shl    $0x10,%ecx
add    %ecx,%edx
movzbl 0x3(%rax),%ecx
shl    $0x18,%ecx
add    %edx,%ecx
mov    %ecx,(%rsi)
add    %r11,%rax
add    $0x4,%rsi
movzbl (%rax),%edx
movzbl 0x1(%rax),%ecx
shl    $0x8,%ecx
add    %ecx,%edx
movzbl 0x2(%rax),%ecx
shl    $0x10,%ecx
add    %ecx,%edx
movzbl 0x3(%rax),%ecx
shl    $0x18,%ecx
add    %edx,%ecx
mov    %ecx,(%rsi)
add    %r11,%rax
add    $0x4,%rsi
movzbl (%rax),%edx
movzbl 0x1(%rax),%ecx
shl    $0x8,%ecx
add    %ecx,%edx
movzbl 0x2(%rax),%ecx
shl    $0x10,%ecx
add    %ecx,%edx
movzbl 0x3(%rax),%ecx
shl    $0x18,%ecx
add    %edx,%ecx
mov    %ecx,(%rsi)
add    %r11,%rax
add    $0x4,%rsi
movzbl (%rax),%edx
movzbl 0x1(%rax),%ecx
shl    $0x8,%ecx
add    %ecx,%edx
movzbl 0x2(%rax),%ecx
shl    $0x10,%ecx
add    %ecx,%edx
movzbl 0x3(%rax),%ecx
shl    $0x18,%ecx
add    %edx,%ecx
mov    %ecx,(%rsi)
add    %r11,%rax
add    $0x4,%rsi
movzbl (%rax),%edx
movzbl 0x1(%rax),%ecx
shl    $0x8,%ecx
add    %ecx,%edx
movzbl 0x2(%rax),%ecx
shl    $0x10,%ecx
add    %ecx,%edx
movzbl 0x3(%rax),%ecx
shl    $0x18,%ecx
add    %edx,%ecx
mov    %ecx,(%rsi)
add    %r11,%rax
add    $0x4,%rsi
movzbl (%rax),%edx
movzbl 0x1(%rax),%ecx
shl    $0x8,%ecx
add    %ecx,%edx
movzbl 0x2(%rax),%ecx
shl    $0x10,%ecx
add    %ecx,%edx
movzbl 0x3(%rax),%ecx
shl    $0x18,%ecx
add    %edx,%ecx
mov    %ecx,(%rsi)
add    %r11,%rax
add    $0x4,%rsi
movzbl (%rax),%edx
movzbl 0x1(%rax),%ecx
shl    $0x8,%ecx
add    %ecx,%edx
movzbl 0x2(%rax),%ecx
shl    $0x10,%ecx
add    %ecx,%edx
movzbl 0x3(%rax),%ecx
shl    $0x18,%ecx
add    %edx,%ecx
mov    %ecx,(%rsi)
add    %r11,%rax
add    $0x4,%rsi
add    $0xffffffff,%r9d
add    %r14,%rax
lea    (%rsi,%r15,4),%rsi
test   %r9d,%r9d
jne    2c9d6 <putRGBAAcontig8bittile+0x2c6>
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
mov    %r8,%rdx
jmpq   2c87e <putRGBAAcontig8bittile+0x16e>
xchg   %ax,%ax

000000000002c9e0 <putRGBUAcontig8bittile>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %r12,-0x8(%rbp)
mov    %r13,-0x10(%rbp)
mov    %r14,-0x18(%rbp)
mov    %r15,-0x20(%rbp)
mov    0x20(%rbp),%rax
movzwl 0x1e(%rdi),%r15d
mov    %r15,%rcx
imul   0x10(%rbp),%ecx
movslq %ecx,%r14
movslq 0x18(%rbp),%r13
jmp    2ca68 <putRGBUAcontig8bittile+0x88>
movzbl 0x3(%rax),%ecx
mov    %rcx,%r10
shl    $0x8,%r10
add    0x78(%rdi),%r10
movzbl (%rax),%edx
movzbl (%rdx,%r10,1),%r12d
movzbl 0x1(%rax),%edx
movzbl (%rdx,%r10,1),%edx
shl    $0x8,%edx
add    %edx,%r12d
movzbl 0x2(%rax),%edx
movzbl (%r10,%rdx,1),%edx
shl    $0x10,%edx
add    %r12d,%edx
shl    $0x18,%ecx
add    %edx,%ecx
mov    %ecx,(%rsi)
add    %r15,%rax
add    $0x4,%rsi
add    $0xffffffff,%r11d
test   %r11d,%r11d
jne    2ca11 <putRGBUAcontig8bittile+0x31>
add    $0xffffffff,%r9d
add    %r14,%rax
lea    (%rsi,%r13,4),%rsi
test   %r9d,%r9d
jne    2ca7f <putRGBUAcontig8bittile+0x9f>
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
leaveq 
retq   
mov    %r8,%r11
jmp    2ca58 <putRGBUAcontig8bittile+0x78>
data16 nopw %cs:0x0(%rax,%rax,1)
nop

000000000002ca90 <putRGBcontig16bittile>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %r13,-0x8(%rbp)
mov    %r14,-0x10(%rbp)
mov    %r15,-0x18(%rbp)
mov    0x20(%rbp),%rax
movzwl 0x1e(%rdi),%r15d
mov    %r15,%rcx
imul   0x10(%rbp),%ecx
movslq %ecx,%r14
movslq 0x18(%rbp),%r13
jmp    2cb0c <putRGBcontig16bittile+0x7c>
movzwl (%rax),%ecx
mov    0x80(%rdi),%r11
movzbl (%rcx,%r11,1),%r10d
movzwl 0x2(%rax),%ecx
movzbl (%rcx,%r11,1),%ecx
shl    $0x8,%ecx
add    %ecx,%r10d
movzwl 0x4(%rax),%ecx
movzbl (%r11,%rcx,1),%ecx
shl    $0x10,%ecx
lea    -0x1000000(%r10,%rcx,1),%ecx
mov    %ecx,(%rsi)
lea    (%rax,%r15,2),%rax
add    $0x4,%rsi
add    $0xffffffff,%edx
test   %edx,%edx
jne    2cabd <putRGBcontig16bittile+0x2d>
add    $0xffffffff,%r9d
lea    (%rax,%r14,2),%rax
lea    (%rsi,%r13,4),%rsi
test   %r9d,%r9d
jne    2cb1f <putRGBcontig16bittile+0x8f>
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
leaveq 
retq   
mov    %r8,%rdx
jmp    2cafc <putRGBcontig16bittile+0x6c>
data16 nopw %cs:0x0(%rax,%rax,1)
nop

000000000002cb30 <putRGBAAcontig16bittile>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %r13,-0x8(%rbp)
mov    %r14,-0x10(%rbp)
mov    %r15,-0x18(%rbp)
mov    0x20(%rbp),%rax
movzwl 0x1e(%rdi),%r15d
mov    %r15,%rcx
imul   0x10(%rbp),%ecx
movslq %ecx,%r14
movslq 0x18(%rbp),%r13
jmp    2cbb6 <putRGBAAcontig16bittile+0x86>
movzwl (%rax),%ecx
mov    0x80(%rdi),%r11
movzbl (%rcx,%r11,1),%r10d
movzwl 0x2(%rax),%ecx
movzbl (%rcx,%r11,1),%ecx
shl    $0x8,%ecx
add    %ecx,%r10d
movzwl 0x4(%rax),%ecx
movzbl (%r11,%rcx,1),%ecx
shl    $0x10,%ecx
add    %ecx,%r10d
movzwl 0x6(%rax),%ecx
movzbl (%r11,%rcx,1),%ecx
shl    $0x18,%ecx
add    %r10d,%ecx
mov    %ecx,(%rsi)
lea    (%rax,%r15,2),%rax
add    $0x4,%rsi
add    $0xffffffff,%edx
test   %edx,%edx
jne    2cb5d <putRGBAAcontig16bittile+0x2d>
add    $0xffffffff,%r9d
lea    (%rax,%r14,2),%rax
lea    (%rsi,%r13,4),%rsi
test   %r9d,%r9d
jne    2cbc9 <putRGBAAcontig16bittile+0x99>
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
leaveq 
retq   
mov    %r8,%rdx
jmp    2cba6 <putRGBAAcontig16bittile+0x76>
xchg   %ax,%ax

000000000002cbd0 <putRGBUAcontig16bittile>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    0x20(%rbp),%rax
movzwl 0x1e(%rdi),%r15d
mov    %r15,%rcx
imul   0x10(%rbp),%ecx
movslq %ecx,%r14
movslq 0x18(%rbp),%r13
jmp    2cc77 <putRGBUAcontig16bittile+0xa7>
movzwl (%rax),%ecx
mov    0x80(%rdi),%r12
movzbl (%rcx,%r12,1),%edx
movzwl 0x6(%rax),%ecx
movzbl (%rcx,%r12,1),%ecx
mov    %rcx,%rbx
shl    $0x8,%rbx
add    0x78(%rdi),%rbx
movzbl (%rdx,%rbx,1),%r11d
movzwl 0x2(%rax),%edx
movzbl (%rdx,%r12,1),%edx
movzbl (%rdx,%rbx,1),%edx
shl    $0x8,%edx
add    %edx,%r11d
movzwl 0x4(%rax),%edx
movzbl (%r12,%rdx,1),%edx
movzbl (%rbx,%rdx,1),%edx
shl    $0x10,%edx
add    %r11d,%edx
shl    $0x18,%ecx
add    %edx,%ecx
mov    %ecx,(%rsi)
lea    (%rax,%r15,2),%rax
add    $0x4,%rsi
add    $0xffffffff,%r10d
test   %r10d,%r10d
jne    2cc05 <putRGBUAcontig16bittile+0x35>
add    $0xffffffff,%r9d
lea    (%rax,%r14,2),%rax
lea    (%rsi,%r13,4),%rsi
test   %r9d,%r9d
jne    2cc92 <putRGBUAcontig16bittile+0xc2>
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
mov    %r8,%r10
jmp    2cc66 <putRGBUAcontig16bittile+0x96>
nopw   0x0(%rax,%rax,1)

000000000002cca0 <putRGBcontig8bitCMYKtile>:
push   %rbp
mov    %rsp,%rbp
sub    $0x40,%rsp
mov    %rbx,-0x18(%rbp)
mov    %r12,-0x20(%rbp)
mov    %r13,-0x28(%rbp)
mov    %r14,-0x30(%rbp)
mov    %r15,-0x38(%rbp)
mov    0x20(%rbp),%r11
movzwl 0x1e(%rdi),%edi
mov    %rdi,%rax
imul   0x10(%rbp),%eax
movslq %eax,%rax
mov    %rax,-0x10(%rbp)
movslq 0x18(%rbp),%rax
mov    %rax,-0x8(%rbp)
mov    $0xff,%ecx
mov    $0xffffffff80808081,%rbx
jmpq   2d684 <putRGBcontig8bitCMYKtile+0x9e4>
movzbl 0x3(%r11),%eax
mov    %rcx,%r13
sub    %eax,%r13d
movzbl (%r11),%eax
neg    %eax
add    %ecx,%eax
mov    %r13,%r12
imul   %eax,%r12d
mov    %rbx,%rax
imul   %r12d
lea    (%r12,%rdx,1),%eax
mov    %rax,%rdx
sar    $0x7,%edx
shr    $0x1f,%eax
add    %edx,%eax
movzwl %ax,%r12d
movzbl 0x1(%r11),%eax
neg    %eax
add    %ecx,%eax
mov    %r13,%r14
imul   %eax,%r14d
mov    %rbx,%rax
imul   %r14d
lea    (%r14,%rdx,1),%eax
mov    %rax,%rdx
sar    $0x7,%edx
shr    $0x1f,%eax
add    %edx,%eax
movzwl %ax,%eax
shl    $0x8,%eax
or     %eax,%r12d
movzbl 0x2(%r11),%eax
mov    %rcx,%r14
sub    %eax,%r14d
imul   %r13d,%r14d
mov    %rbx,%rax
imul   %r14d
lea    (%r14,%rdx,1),%eax
mov    %rax,%rdx
sar    $0x7,%edx
shr    $0x1f,%eax
add    %edx,%eax
movzwl %ax,%eax
shl    $0x10,%eax
or     %eax,%r12d
or     $0xff000000,%r12d
mov    %r12d,(%rsi)
movzbl 0x3(%rdi,%r11,1),%eax
mov    %rcx,%r13
sub    %eax,%r13d
movzbl (%rdi,%r11,1),%eax
neg    %eax
add    %ecx,%eax
mov    %r13,%r12
imul   %eax,%r12d
mov    %rbx,%rax
imul   %r12d
lea    (%r12,%rdx,1),%eax
mov    %rax,%rdx
sar    $0x7,%edx
shr    $0x1f,%eax
add    %edx,%eax
movzwl %ax,%r12d
movzbl 0x1(%rdi,%r11,1),%eax
neg    %eax
add    %ecx,%eax
mov    %r13,%r14
imul   %eax,%r14d
mov    %rbx,%rax
imul   %r14d
lea    (%r14,%rdx,1),%eax
mov    %rax,%rdx
sar    $0x7,%edx
shr    $0x1f,%eax
add    %edx,%eax
movzwl %ax,%eax
shl    $0x8,%eax
or     %eax,%r12d
movzbl 0x2(%rdi,%r11,1),%eax
mov    %rcx,%r14
sub    %eax,%r14d
imul   %r13d,%r14d
mov    %rbx,%rax
imul   %r14d
lea    (%r14,%rdx,1),%eax
mov    %rax,%rdx
sar    $0x7,%edx
shr    $0x1f,%eax
add    %edx,%eax
movzwl %ax,%eax
shl    $0x10,%eax
or     %eax,%r12d
or     $0xff000000,%r12d
mov    %r12d,0x4(%rsi)
lea    (%r11,%rdi,2),%r13
movzbl 0x3(%r13),%eax
mov    %rcx,%r14
sub    %eax,%r14d
movzbl 0x0(%r13),%eax
neg    %eax
add    %ecx,%eax
mov    %r14,%r12
imul   %eax,%r12d
mov    %rbx,%rax
imul   %r12d
lea    (%r12,%rdx,1),%eax
mov    %rax,%rdx
sar    $0x7,%edx
shr    $0x1f,%eax
add    %edx,%eax
movzwl %ax,%r12d
movzbl 0x1(%r13),%eax
neg    %eax
add    %ecx,%eax
mov    %r14,%r15
imul   %eax,%r15d
mov    %rbx,%rax
imul   %r15d
lea    (%r15,%rdx,1),%eax
mov    %rax,%rdx
sar    $0x7,%edx
shr    $0x1f,%eax
add    %edx,%eax
movzwl %ax,%eax
shl    $0x8,%eax
or     %eax,%r12d
movzbl 0x2(%r13),%eax
mov    %rcx,%r15
sub    %eax,%r15d
imul   %r14d,%r15d
mov    %rbx,%rax
imul   %r15d
lea    (%r15,%rdx,1),%eax
mov    %rax,%rdx
sar    $0x7,%edx
shr    $0x1f,%eax
add    %edx,%eax
movzwl %ax,%eax
shl    $0x10,%eax
or     %eax,%r12d
or     $0xff000000,%r12d
mov    %r12d,0x8(%rsi)
movzbl 0x3(%rdi,%r13,1),%eax
mov    %rcx,%r14
sub    %eax,%r14d
movzbl (%rdi,%r13,1),%eax
neg    %eax
add    %ecx,%eax
mov    %r14,%r12
imul   %eax,%r12d
mov    %rbx,%rax
imul   %r12d
lea    (%r12,%rdx,1),%eax
mov    %rax,%rdx
sar    $0x7,%edx
shr    $0x1f,%eax
add    %edx,%eax
movzwl %ax,%r12d
movzbl 0x1(%rdi,%r13,1),%eax
neg    %eax
add    %ecx,%eax
mov    %r14,%r15
imul   %eax,%r15d
mov    %rbx,%rax
imul   %r15d
lea    (%r15,%rdx,1),%eax
mov    %rax,%rdx
sar    $0x7,%edx
shr    $0x1f,%eax
add    %edx,%eax
movzwl %ax,%eax
shl    $0x8,%eax
or     %eax,%r12d
movzbl 0x2(%rdi,%r13,1),%eax
mov    %rcx,%r13
sub    %eax,%r13d
imul   %r14d,%r13d
mov    %rbx,%rax
imul   %r13d
lea    0x0(%r13,%rdx,1),%eax
mov    %rax,%rdx
sar    $0x7,%edx
shr    $0x1f,%eax
add    %edx,%eax
movzwl %ax,%eax
shl    $0x10,%eax
or     %eax,%r12d
or     $0xff000000,%r12d
mov    %r12d,0xc(%rsi)
lea    (%r11,%rdi,4),%r11
movzbl 0x3(%r11),%eax
mov    %rcx,%r14
sub    %eax,%r14d
movzbl (%r11),%eax
neg    %eax
add    %ecx,%eax
mov    %r14,%r12
imul   %eax,%r12d
mov    %rbx,%rax
imul   %r12d
lea    (%r12,%rdx,1),%eax
mov    %rax,%rdx
sar    $0x7,%edx
shr    $0x1f,%eax
add    %edx,%eax
movzwl %ax,%r12d
movzbl 0x1(%r11),%eax
neg    %eax
add    %ecx,%eax
mov    %r14,%r13
imul   %eax,%r13d
mov    %rbx,%rax
imul   %r13d
lea    0x0(%r13,%rdx,1),%eax
mov    %rax,%rdx
sar    $0x7,%edx
shr    $0x1f,%eax
add    %edx,%eax
movzwl %ax,%eax
shl    $0x8,%eax
or     %eax,%r12d
movzbl 0x2(%r11),%eax
mov    %rcx,%r13
sub    %eax,%r13d
imul   %r14d,%r13d
mov    %rbx,%rax
imul   %r13d
lea    0x0(%r13,%rdx,1),%eax
mov    %rax,%rdx
sar    $0x7,%edx
shr    $0x1f,%eax
add    %edx,%eax
movzwl %ax,%eax
shl    $0x10,%eax
or     %eax,%r12d
or     $0xff000000,%r12d
mov    %r12d,0x10(%rsi)
movzbl 0x3(%rdi,%r11,1),%eax
mov    %rcx,%r14
sub    %eax,%r14d
movzbl (%rdi,%r11,1),%eax
neg    %eax
add    %ecx,%eax
mov    %r14,%r12
imul   %eax,%r12d
mov    %rbx,%rax
imul   %r12d
lea    (%r12,%rdx,1),%eax
mov    %rax,%rdx
sar    $0x7,%edx
shr    $0x1f,%eax
add    %edx,%eax
movzwl %ax,%r12d
movzbl 0x1(%rdi,%r11,1),%eax
neg    %eax
add    %ecx,%eax
mov    %r14,%r13
imul   %eax,%r13d
mov    %rbx,%rax
imul   %r13d
lea    0x0(%r13,%rdx,1),%eax
mov    %rax,%rdx
sar    $0x7,%edx
shr    $0x1f,%eax
add    %edx,%eax
movzwl %ax,%eax
shl    $0x8,%eax
or     %eax,%r12d
movzbl 0x2(%rdi,%r11,1),%eax
mov    %rcx,%r13
sub    %eax,%r13d
imul   %r14d,%r13d
mov    %rbx,%rax
imul   %r13d
lea    0x0(%r13,%rdx,1),%eax
mov    %rax,%rdx
sar    $0x7,%edx
shr    $0x1f,%eax
add    %edx,%eax
movzwl %ax,%eax
shl    $0x10,%eax
or     %eax,%r12d
or     $0xff000000,%r12d
mov    %r12d,0x14(%rsi)
lea    (%r11,%rdi,2),%r11
movzbl 0x3(%r11),%eax
mov    %rcx,%r14
sub    %eax,%r14d
movzbl (%r11),%eax
neg    %eax
add    %ecx,%eax
mov    %r14,%r12
imul   %eax,%r12d
mov    %rbx,%rax
imul   %r12d
lea    (%r12,%rdx,1),%eax
mov    %rax,%rdx
sar    $0x7,%edx
shr    $0x1f,%eax
add    %edx,%eax
movzwl %ax,%r12d
movzbl 0x1(%r11),%eax
neg    %eax
add    %ecx,%eax
mov    %r14,%r13
imul   %eax,%r13d
mov    %rbx,%rax
imul   %r13d
lea    0x0(%r13,%rdx,1),%eax
mov    %rax,%rdx
sar    $0x7,%edx
shr    $0x1f,%eax
add    %edx,%eax
movzwl %ax,%eax
shl    $0x8,%eax
or     %eax,%r12d
movzbl 0x2(%r11),%eax
mov    %rcx,%r13
sub    %eax,%r13d
imul   %r14d,%r13d
mov    %rbx,%rax
imul   %r13d
lea    0x0(%r13,%rdx,1),%eax
mov    %rax,%rdx
sar    $0x7,%edx
shr    $0x1f,%eax
add    %edx,%eax
movzwl %ax,%eax
shl    $0x10,%eax
or     %eax,%r12d
or     $0xff000000,%r12d
mov    %r12d,0x18(%rsi)
movzbl 0x3(%r11,%rdi,1),%eax
mov    %rcx,%r14
sub    %eax,%r14d
movzbl (%r11,%rdi,1),%eax
neg    %eax
add    %ecx,%eax
mov    %r14,%r12
imul   %eax,%r12d
mov    %rbx,%rax
imul   %r12d
lea    (%r12,%rdx,1),%eax
mov    %rax,%rdx
sar    $0x7,%edx
shr    $0x1f,%eax
add    %edx,%eax
movzwl %ax,%r12d
movzbl 0x1(%r11,%rdi,1),%eax
neg    %eax
add    %ecx,%eax
mov    %r14,%r13
imul   %eax,%r13d
mov    %rbx,%rax
imul   %r13d
lea    0x0(%r13,%rdx,1),%eax
mov    %rax,%rdx
sar    $0x7,%edx
shr    $0x1f,%eax
add    %edx,%eax
movzwl %ax,%eax
shl    $0x8,%eax
or     %eax,%r12d
movzbl 0x2(%r11,%rdi,1),%eax
mov    %rcx,%r13
sub    %eax,%r13d
imul   %r14d,%r13d
mov    %rbx,%rax
imul   %r13d
lea    0x0(%r13,%rdx,1),%eax
mov    %rax,%rdx
sar    $0x7,%edx
shr    $0x1f,%eax
add    %edx,%eax
movzwl %ax,%eax
shl    $0x10,%eax
or     %eax,%r12d
or     $0xff000000,%r12d
mov    %r12d,0x1c(%rsi)
lea    (%r11,%rdi,2),%r11
add    $0x20,%rsi
add    $0xfffffff8,%r10d
cmp    $0x7,%r10d
ja     2cceb <putRGBcontig8bitCMYKtile+0x4b>
test   %r10d,%r10d
je     2d671 <putRGBcontig8bitCMYKtile+0x9d1>
lea    -0x1(%r10),%eax
cmp    $0x6,%eax
ja     2d671 <putRGBcontig8bitCMYKtile+0x9d1>
lea    0x41211(%rip),%rdx        # 6e41c <TIFFFaxBlackTable+0x10260>
movslq (%rdx,%rax,4),%rax
add    %rdx,%rax
jmpq   *%rax
movzbl 0x3(%r11),%eax
mov    %rcx,%r12
sub    %eax,%r12d
movzbl (%r11),%eax
neg    %eax
add    %ecx,%eax
mov    %r12,%r10
imul   %eax,%r10d
mov    %rbx,%rax
imul   %r10d
lea    (%r10,%rdx,1),%eax
mov    %rax,%rdx
sar    $0x7,%edx
shr    $0x1f,%eax
add    %edx,%eax
movzwl %ax,%r10d
movzbl 0x1(%r11),%eax
neg    %eax
add    %ecx,%eax
mov    %r12,%r13
imul   %eax,%r13d
mov    %rbx,%rax
imul   %r13d
lea    0x0(%r13,%rdx,1),%eax
mov    %rax,%rdx
sar    $0x7,%edx
shr    $0x1f,%eax
add    %edx,%eax
movzwl %ax,%eax
shl    $0x8,%eax
or     %eax,%r10d
movzbl 0x2(%r11),%eax
mov    %rcx,%r13
sub    %eax,%r13d
imul   %r12d,%r13d
mov    %rbx,%rax
imul   %r13d
lea    0x0(%r13,%rdx,1),%eax
mov    %rax,%rdx
sar    $0x7,%edx
shr    $0x1f,%eax
add    %edx,%eax
movzwl %ax,%eax
shl    $0x10,%eax
or     %eax,%r10d
or     $0xff000000,%r10d
mov    %r10d,(%rsi)
add    %rdi,%r11
add    $0x4,%rsi
movzbl 0x3(%r11),%eax
mov    %rcx,%r13
sub    %eax,%r13d
movzbl (%r11),%eax
neg    %eax
add    %ecx,%eax
mov    %r13,%r10
imul   %eax,%r10d
mov    %rbx,%rax
imul   %r10d
lea    (%r10,%rdx,1),%eax
mov    %rax,%rdx
sar    $0x7,%edx
shr    $0x1f,%eax
add    %edx,%eax
movzwl %ax,%r10d
movzbl 0x1(%r11),%eax
neg    %eax
add    %ecx,%eax
mov    %r13,%r12
imul   %eax,%r12d
mov    %rbx,%rax
imul   %r12d
lea    (%r12,%rdx,1),%eax
mov    %rax,%rdx
sar    $0x7,%edx
shr    $0x1f,%eax
add    %edx,%eax
movzwl %ax,%eax
shl    $0x8,%eax
or     %eax,%r10d
movzbl 0x2(%r11),%eax
mov    %rcx,%r12
sub    %eax,%r12d
imul   %r13d,%r12d
mov    %rbx,%rax
imul   %r12d
lea    (%r12,%rdx,1),%eax
mov    %rax,%rdx
sar    $0x7,%edx
shr    $0x1f,%eax
add    %edx,%eax
movzwl %ax,%eax
shl    $0x10,%eax
or     %eax,%r10d
or     $0xff000000,%r10d
mov    %r10d,(%rsi)
add    %rdi,%r11
add    $0x4,%rsi
movzbl 0x3(%r11),%eax
mov    %rcx,%r13
sub    %eax,%r13d
movzbl (%r11),%eax
neg    %eax
add    %ecx,%eax
mov    %r13,%r10
imul   %eax,%r10d
mov    %rbx,%rax
imul   %r10d
lea    (%r10,%rdx,1),%eax
mov    %rax,%rdx
sar    $0x7,%edx
shr    $0x1f,%eax
add    %edx,%eax
movzwl %ax,%r10d
movzbl 0x1(%r11),%eax
neg    %eax
add    %ecx,%eax
mov    %r13,%r12
imul   %eax,%r12d
mov    %rbx,%rax
imul   %r12d
lea    (%r12,%rdx,1),%eax
mov    %rax,%rdx
sar    $0x7,%edx
shr    $0x1f,%eax
add    %edx,%eax
movzwl %ax,%eax
shl    $0x8,%eax
or     %eax,%r10d
movzbl 0x2(%r11),%eax
mov    %rcx,%r12
sub    %eax,%r12d
imul   %r13d,%r12d
mov    %rbx,%rax
imul   %r12d
lea    (%r12,%rdx,1),%eax
mov    %rax,%rdx
sar    $0x7,%edx
shr    $0x1f,%eax
add    %edx,%eax
movzwl %ax,%eax
shl    $0x10,%eax
or     %eax,%r10d
or     $0xff000000,%r10d
mov    %r10d,(%rsi)
add    %rdi,%r11
add    $0x4,%rsi
movzbl 0x3(%r11),%eax
mov    %rcx,%r13
sub    %eax,%r13d
movzbl (%r11),%eax
neg    %eax
add    %ecx,%eax
mov    %r13,%r10
imul   %eax,%r10d
mov    %rbx,%rax
imul   %r10d
lea    (%r10,%rdx,1),%eax
mov    %rax,%rdx
sar    $0x7,%edx
shr    $0x1f,%eax
add    %edx,%eax
movzwl %ax,%r10d
movzbl 0x1(%r11),%eax
neg    %eax
add    %ecx,%eax
mov    %r13,%r12
imul   %eax,%r12d
mov    %rbx,%rax
imul   %r12d
lea    (%r12,%rdx,1),%eax
mov    %rax,%rdx
sar    $0x7,%edx
shr    $0x1f,%eax
add    %edx,%eax
movzwl %ax,%eax
shl    $0x8,%eax
or     %eax,%r10d
movzbl 0x2(%r11),%eax
mov    %rcx,%r12
sub    %eax,%r12d
imul   %r13d,%r12d
mov    %rbx,%rax
imul   %r12d
lea    (%r12,%rdx,1),%eax
mov    %rax,%rdx
sar    $0x7,%edx
shr    $0x1f,%eax
add    %edx,%eax
movzwl %ax,%eax
shl    $0x10,%eax
or     %eax,%r10d
or     $0xff000000,%r10d
mov    %r10d,(%rsi)
add    %rdi,%r11
add    $0x4,%rsi
movzbl 0x3(%r11),%eax
mov    %rcx,%r12
sub    %eax,%r12d
movzbl (%r11),%eax
neg    %eax
add    %ecx,%eax
mov    %r12,%r10
imul   %eax,%r10d
mov    %rbx,%rax
imul   %r10d
lea    (%r10,%rdx,1),%eax
mov    %rax,%rdx
sar    $0x7,%edx
shr    $0x1f,%eax
add    %edx,%eax
movzwl %ax,%r10d
movzbl 0x1(%r11),%eax
neg    %eax
add    %ecx,%eax
mov    %r12,%r13
imul   %eax,%r13d
mov    %rbx,%rax
imul   %r13d
lea    0x0(%r13,%rdx,1),%eax
mov    %rax,%rdx
sar    $0x7,%edx
shr    $0x1f,%eax
add    %edx,%eax
movzwl %ax,%eax
shl    $0x8,%eax
or     %eax,%r10d
movzbl 0x2(%r11),%eax
mov    %rcx,%r13
sub    %eax,%r13d
imul   %r12d,%r13d
mov    %rbx,%rax
imul   %r13d
lea    0x0(%r13,%rdx,1),%eax
mov    %rax,%rdx
sar    $0x7,%edx
shr    $0x1f,%eax
add    %edx,%eax
movzwl %ax,%eax
shl    $0x10,%eax
or     %eax,%r10d
or     $0xff000000,%r10d
mov    %r10d,(%rsi)
add    %rdi,%r11
add    $0x4,%rsi
movzbl 0x3(%r11),%eax
mov    %rcx,%r13
sub    %eax,%r13d
movzbl (%r11),%eax
neg    %eax
add    %ecx,%eax
mov    %r13,%r10
imul   %eax,%r10d
mov    %rbx,%rax
imul   %r10d
lea    (%r10,%rdx,1),%eax
mov    %rax,%rdx
sar    $0x7,%edx
shr    $0x1f,%eax
add    %edx,%eax
movzwl %ax,%r10d
movzbl 0x1(%r11),%eax
neg    %eax
add    %ecx,%eax
mov    %r13,%r12
imul   %eax,%r12d
mov    %rbx,%rax
imul   %r12d
lea    (%r12,%rdx,1),%eax
mov    %rax,%rdx
sar    $0x7,%edx
shr    $0x1f,%eax
add    %edx,%eax
movzwl %ax,%eax
shl    $0x8,%eax
or     %eax,%r10d
movzbl 0x2(%r11),%eax
mov    %rcx,%r12
sub    %eax,%r12d
imul   %r13d,%r12d
mov    %rbx,%rax
imul   %r12d
lea    (%r12,%rdx,1),%eax
mov    %rax,%rdx
sar    $0x7,%edx
shr    $0x1f,%eax
add    %edx,%eax
movzwl %ax,%eax
shl    $0x10,%eax
or     %eax,%r10d
or     $0xff000000,%r10d
mov    %r10d,(%rsi)
add    %rdi,%r11
add    $0x4,%rsi
movzbl 0x3(%r11),%eax
mov    %rcx,%r13
sub    %eax,%r13d
movzbl (%r11),%eax
neg    %eax
add    %ecx,%eax
mov    %r13,%r10
imul   %eax,%r10d
mov    %rbx,%rax
imul   %r10d
lea    (%r10,%rdx,1),%eax
mov    %rax,%rdx
sar    $0x7,%edx
shr    $0x1f,%eax
add    %edx,%eax
movzwl %ax,%r10d
movzbl 0x1(%r11),%eax
neg    %eax
add    %ecx,%eax
mov    %r13,%r12
imul   %eax,%r12d
mov    %rbx,%rax
imul   %r12d
lea    (%r12,%rdx,1),%eax
mov    %rax,%rdx
sar    $0x7,%edx
shr    $0x1f,%eax
add    %edx,%eax
movzwl %ax,%eax
shl    $0x8,%eax
or     %eax,%r10d
movzbl 0x2(%r11),%eax
mov    %rcx,%r12
sub    %eax,%r12d
imul   %r13d,%r12d
mov    %rbx,%rax
imul   %r12d
lea    (%r12,%rdx,1),%eax
mov    %rax,%rdx
sar    $0x7,%edx
shr    $0x1f,%eax
add    %edx,%eax
movzwl %ax,%eax
shl    $0x10,%eax
or     %eax,%r10d
or     $0xff000000,%r10d
mov    %r10d,(%rsi)
add    %rdi,%r11
add    $0x4,%rsi
add    $0xffffffff,%r9d
mov    -0x10(%rbp),%rax
add    %rax,%r11
mov    -0x8(%rbp),%rax
lea    (%rsi,%rax,4),%rsi
test   %r9d,%r9d
jne    2d69f <putRGBcontig8bitCMYKtile+0x9ff>
mov    -0x38(%rbp),%r15
mov    -0x30(%rbp),%r14
mov    -0x28(%rbp),%r13
mov    -0x20(%rbp),%r12
mov    -0x18(%rbp),%rbx
leaveq 
retq   
mov    %r8,%r10
jmpq   2d1e4 <putRGBcontig8bitCMYKtile+0x544>
nopw   0x0(%rax,%rax,1)

000000000002d6b0 <putRGBcontig8bitCMYKMaptile>:
push   %rbp
mov    %rsp,%rbp
sub    $0x40,%rsp
mov    %rbx,-0x18(%rbp)
mov    %r12,-0x20(%rbp)
mov    %r13,-0x28(%rbp)
mov    %r14,-0x30(%rbp)
mov    %r15,-0x38(%rbp)
mov    0x50(%rdi),%rcx
mov    0x20(%rbp),%rbx
movzwl 0x1e(%rdi),%r11d
mov    %r11,%rax
imul   0x10(%rbp),%eax
movslq %eax,%rax
mov    %rax,-0x10(%rbp)
movslq 0x18(%rbp),%rax
mov    %rax,-0x8(%rbp)
mov    $0xff,%edi
mov    $0xffffffff80808081,%r10
jmpq   2d7c3 <putRGBcontig8bitCMYKMaptile+0x113>
movzbl 0x3(%rbx),%eax
mov    %rdi,%r12
sub    %eax,%r12d
movzbl (%rbx),%eax
neg    %eax
add    %edi,%eax
mov    %r12,%r14
imul   %eax,%r14d
mov    %r10,%rax
imul   %r14d
lea    (%r14,%rdx,1),%eax
mov    %rax,%rdx
sar    $0x7,%edx
shr    $0x1f,%eax
add    %edx,%eax
movzwl %ax,%r15d
movzbl 0x1(%rbx),%eax
mov    %rdi,%r14
sub    %eax,%r14d
imul   %r12d,%r14d
mov    %r10,%rax
imul   %r14d
lea    (%r14,%rdx,1),%eax
mov    %rax,%rdx
sar    $0x7,%edx
shr    $0x1f,%eax
add    %edx,%eax
movzwl %ax,%eax
movzbl 0x2(%rbx),%edx
movzbl (%rcx,%r15,1),%r14d
movzbl (%rax,%rcx,1),%eax
shl    $0x8,%eax
add    %eax,%r14d
mov    %rdi,%rax
sub    %edx,%eax
imul   %eax,%r12d
mov    %r10,%rax
imul   %r12d
lea    (%r12,%rdx,1),%eax
mov    %rax,%rdx
sar    $0x7,%edx
shr    $0x1f,%eax
add    %edx,%eax
movzwl %ax,%eax
movzbl (%rcx,%rax,1),%eax
shl    $0x10,%eax
lea    -0x1000000(%r14,%rax,1),%eax
mov    %eax,(%rsi)
add    %r11,%rbx
add    $0x4,%rsi
add    $0xffffffff,%r13d
test   %r13d,%r13d
jne    2d700 <putRGBcontig8bitCMYKMaptile+0x50>
add    $0xffffffff,%r9d
mov    -0x10(%rbp),%rax
add    %rax,%rbx
mov    -0x8(%rbp),%rax
lea    (%rsi,%rax,4),%rsi
test   %r9d,%r9d
jne    2d7de <putRGBcontig8bitCMYKMaptile+0x12e>
mov    -0x38(%rbp),%r15
mov    -0x30(%rbp),%r14
mov    -0x28(%rbp),%r13
mov    -0x20(%rbp),%r12
mov    -0x18(%rbp),%rbx
leaveq 
retq   
mov    %r8,%r13
jmp    2d7a7 <putRGBcontig8bitCMYKMaptile+0xf7>
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

000000000002d7f0 <putRGBseparate8bittile>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    0x20(%rbp),%rax
movslq 0x10(%rbp),%r14
mov    0x28(%rbp),%rcx
mov    0x30(%rbp),%rdx
movslq 0x18(%rbp),%r15
jmpq   2daad <putRGBseparate8bittile+0x2bd>
movzbl (%rax),%r11d
movzbl (%rcx),%edi
shl    $0x8,%edi
add    %edi,%r11d
movzbl (%rdx),%edi
shl    $0x10,%edi
lea    -0x1000000(%r11,%rdi,1),%edi
mov    %edi,(%rsi)
movzbl 0x1(%rax),%r11d
movzbl 0x1(%rcx),%edi
shl    $0x8,%edi
add    %edi,%r11d
movzbl 0x1(%rdx),%edi
shl    $0x10,%edi
lea    -0x1000000(%r11,%rdi,1),%edi
mov    %edi,0x4(%rsi)
movzbl 0x2(%rax),%r11d
movzbl 0x2(%rcx),%edi
shl    $0x8,%edi
add    %edi,%r11d
movzbl 0x2(%rdx),%edi
shl    $0x10,%edi
lea    -0x1000000(%r11,%rdi,1),%edi
mov    %edi,0x8(%rsi)
movzbl 0x3(%rax),%r11d
movzbl 0x3(%rcx),%edi
shl    $0x8,%edi
add    %edi,%r11d
movzbl 0x3(%rdx),%edi
shl    $0x10,%edi
lea    -0x1000000(%r11,%rdi,1),%edi
mov    %edi,0xc(%rsi)
movzbl 0x4(%rax),%r11d
movzbl 0x4(%rcx),%edi
shl    $0x8,%edi
add    %edi,%r11d
movzbl 0x4(%rdx),%edi
shl    $0x10,%edi
lea    -0x1000000(%r11,%rdi,1),%edi
mov    %edi,0x10(%rsi)
movzbl 0x5(%rax),%r11d
movzbl 0x5(%rcx),%edi
shl    $0x8,%edi
add    %edi,%r11d
movzbl 0x5(%rdx),%edi
shl    $0x10,%edi
lea    -0x1000000(%r11,%rdi,1),%edi
mov    %edi,0x14(%rsi)
movzbl 0x6(%rax),%r11d
movzbl 0x6(%rcx),%edi
shl    $0x8,%edi
add    %edi,%r11d
movzbl 0x6(%rdx),%edi
shl    $0x10,%edi
lea    -0x1000000(%r11,%rdi,1),%edi
mov    %edi,0x18(%rsi)
movzbl 0x7(%rax),%r11d
movzbl 0x7(%rcx),%edi
shl    $0x8,%edi
add    %edi,%r11d
movzbl 0x7(%rdx),%edi
shl    $0x10,%edi
lea    -0x1000000(%r11,%rdi,1),%edi
mov    %edi,0x1c(%rsi)
add    $0x8,%rax
add    $0x8,%rcx
add    $0x8,%rdx
add    $0x20,%rsi
add    $0xfffffff8,%r10d
cmp    $0x7,%r10d
ja     2d819 <putRGBseparate8bittile+0x29>
test   %r10d,%r10d
je     2da9c <putRGBseparate8bittile+0x2ac>
lea    -0x1(%r10),%edi
cmp    $0x6,%edi
ja     2da9c <putRGBseparate8bittile+0x2ac>
lea    0x40ae0(%rip),%r10        # 6e438 <TIFFFaxBlackTable+0x1027c>
movslq (%r10,%rdi,4),%rdi
add    %r10,%rdi
jmpq   *%rdi
movzbl (%rax),%r10d
movzbl (%rcx),%edi
shl    $0x8,%edi
add    %edi,%r10d
movzbl (%rdx),%edi
shl    $0x10,%edi
lea    -0x1000000(%r10,%rdi,1),%edi
mov    %edi,(%rsi)
add    $0x1,%rax
add    $0x1,%rcx
add    $0x1,%rdx
add    $0x4,%rsi
movzbl (%rax),%r10d
movzbl (%rcx),%edi
shl    $0x8,%edi
add    %edi,%r10d
movzbl (%rdx),%edi
shl    $0x10,%edi
lea    -0x1000000(%r10,%rdi,1),%edi
mov    %edi,(%rsi)
add    $0x1,%rax
add    $0x1,%rcx
add    $0x1,%rdx
add    $0x4,%rsi
movzbl (%rax),%r10d
movzbl (%rcx),%edi
shl    $0x8,%edi
add    %edi,%r10d
movzbl (%rdx),%edi
shl    $0x10,%edi
lea    -0x1000000(%r10,%rdi,1),%edi
mov    %edi,(%rsi)
add    $0x1,%rax
add    $0x1,%rcx
add    $0x1,%rdx
add    $0x4,%rsi
movzbl (%rax),%r10d
movzbl (%rcx),%edi
shl    $0x8,%edi
add    %edi,%r10d
movzbl (%rdx),%edi
shl    $0x10,%edi
lea    -0x1000000(%r10,%rdi,1),%edi
mov    %edi,(%rsi)
add    $0x1,%rax
add    $0x1,%rcx
add    $0x1,%rdx
add    $0x4,%rsi
movzbl (%rax),%r10d
movzbl (%rcx),%edi
shl    $0x8,%edi
add    %edi,%r10d
movzbl (%rdx),%edi
shl    $0x10,%edi
lea    -0x1000000(%r10,%rdi,1),%edi
mov    %edi,(%rsi)
add    $0x1,%rax
add    $0x1,%rcx
add    $0x1,%rdx
add    $0x4,%rsi
movzbl (%rax),%r10d
movzbl (%rcx),%edi
shl    $0x8,%edi
add    %edi,%r10d
movzbl (%rdx),%edi
shl    $0x10,%edi
lea    -0x1000000(%r10,%rdi,1),%edi
mov    %edi,(%rsi)
add    $0x1,%rax
add    $0x1,%rcx
add    $0x1,%rdx
add    $0x4,%rsi
movzbl (%rax),%r10d
movzbl (%rcx),%edi
shl    $0x8,%edi
add    %edi,%r10d
movzbl (%rdx),%edi
shl    $0x10,%edi
lea    -0x1000000(%r10,%rdi,1),%edi
mov    %edi,(%rsi)
add    $0x1,%rax
add    $0x1,%rcx
add    $0x1,%rdx
add    $0x4,%rsi
add    $0xffffffff,%r9d
add    %r14,%rax
add    %r14,%rcx
add    %r14,%rdx
lea    (%rsi,%r15,4),%rsi
test   %r9d,%r9d
jne    2dabc <putRGBseparate8bittile+0x2cc>
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
mov    %r8,%r10
jmpq   2d931 <putRGBseparate8bittile+0x141>
data16 nopw %cs:0x0(%rax,%rax,1)
nop

000000000002dad0 <putRGBAAseparate8bittile>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %r13,-0x8(%rbp)
mov    %r14,-0x10(%rbp)
mov    %r15,-0x18(%rbp)
mov    0x20(%rbp),%rax
movslq 0x10(%rbp),%r14
mov    0x28(%rbp),%rcx
mov    0x30(%rbp),%rdi
mov    0x38(%rbp),%rdx
movslq 0x18(%rbp),%r15
jmpq   2de66 <putRGBAAseparate8bittile+0x396>
movzbl (%rax),%r13d
movzbl (%rcx),%r10d
shl    $0x8,%r10d
add    %r10d,%r13d
movzbl (%rdi),%r10d
shl    $0x10,%r10d
add    %r10d,%r13d
movzbl (%rdx),%r10d
shl    $0x18,%r10d
add    %r13d,%r10d
mov    %r10d,(%rsi)
movzbl 0x1(%rax),%r13d
movzbl 0x1(%rcx),%r10d
shl    $0x8,%r10d
add    %r10d,%r13d
movzbl 0x1(%rdi),%r10d
shl    $0x10,%r10d
add    %r10d,%r13d
movzbl 0x1(%rdx),%r10d
shl    $0x18,%r10d
add    %r13d,%r10d
mov    %r10d,0x4(%rsi)
movzbl 0x2(%rax),%r13d
movzbl 0x2(%rcx),%r10d
shl    $0x8,%r10d
add    %r10d,%r13d
movzbl 0x2(%rdi),%r10d
shl    $0x10,%r10d
add    %r10d,%r13d
movzbl 0x2(%rdx),%r10d
shl    $0x18,%r10d
add    %r13d,%r10d
mov    %r10d,0x8(%rsi)
movzbl 0x3(%rax),%r13d
movzbl 0x3(%rcx),%r10d
shl    $0x8,%r10d
add    %r10d,%r13d
movzbl 0x3(%rdi),%r10d
shl    $0x10,%r10d
add    %r10d,%r13d
movzbl 0x3(%rdx),%r10d
shl    $0x18,%r10d
add    %r13d,%r10d
mov    %r10d,0xc(%rsi)
movzbl 0x4(%rax),%r13d
movzbl 0x4(%rcx),%r10d
shl    $0x8,%r10d
add    %r10d,%r13d
movzbl 0x4(%rdi),%r10d
shl    $0x10,%r10d
add    %r10d,%r13d
movzbl 0x4(%rdx),%r10d
shl    $0x18,%r10d
add    %r13d,%r10d
mov    %r10d,0x10(%rsi)
movzbl 0x5(%rax),%r13d
movzbl 0x5(%rcx),%r10d
shl    $0x8,%r10d
add    %r10d,%r13d
movzbl 0x5(%rdi),%r10d
shl    $0x10,%r10d
add    %r10d,%r13d
movzbl 0x5(%rdx),%r10d
shl    $0x18,%r10d
add    %r13d,%r10d
mov    %r10d,0x14(%rsi)
movzbl 0x6(%rax),%r13d
movzbl 0x6(%rcx),%r10d
shl    $0x8,%r10d
add    %r10d,%r13d
movzbl 0x6(%rdi),%r10d
shl    $0x10,%r10d
add    %r10d,%r13d
movzbl 0x6(%rdx),%r10d
shl    $0x18,%r10d
add    %r13d,%r10d
mov    %r10d,0x18(%rsi)
movzbl 0x7(%rax),%r13d
movzbl 0x7(%rcx),%r10d
shl    $0x8,%r10d
add    %r10d,%r13d
movzbl 0x7(%rdi),%r10d
shl    $0x10,%r10d
add    %r10d,%r13d
movzbl 0x7(%rdx),%r10d
shl    $0x18,%r10d
add    %r13d,%r10d
mov    %r10d,0x1c(%rsi)
add    $0x8,%rax
add    $0x8,%rcx
add    $0x8,%rdi
add    $0x8,%rdx
add    $0x20,%rsi
add    $0xfffffff8,%r11d
cmp    $0x7,%r11d
ja     2db01 <putRGBAAseparate8bittile+0x31>
test   %r11d,%r11d
je     2de52 <putRGBAAseparate8bittile+0x382>
add    $0xffffffff,%r11d
cmp    $0x6,%r11d
ja     2de52 <putRGBAAseparate8bittile+0x382>
lea    0x407b0(%rip),%r10        # 6e454 <TIFFFaxBlackTable+0x10298>
movslq (%r10,%r11,4),%r11
add    %r11,%r10
jmpq   *%r10
movzbl (%rax),%r11d
movzbl (%rcx),%r10d
shl    $0x8,%r10d
add    %r10d,%r11d
movzbl (%rdi),%r10d
shl    $0x10,%r10d
add    %r10d,%r11d
movzbl (%rdx),%r10d
shl    $0x18,%r10d
add    %r11d,%r10d
mov    %r10d,(%rsi)
add    $0x1,%rax
add    $0x1,%rcx
add    $0x1,%rdi
add    $0x1,%rdx
add    $0x4,%rsi
movzbl (%rax),%r11d
movzbl (%rcx),%r10d
shl    $0x8,%r10d
add    %r10d,%r11d
movzbl (%rdi),%r10d
shl    $0x10,%r10d
add    %r10d,%r11d
movzbl (%rdx),%r10d
shl    $0x18,%r10d
add    %r11d,%r10d
mov    %r10d,(%rsi)
add    $0x1,%rax
add    $0x1,%rcx
add    $0x1,%rdi
add    $0x1,%rdx
add    $0x4,%rsi
movzbl (%rax),%r11d
movzbl (%rcx),%r10d
shl    $0x8,%r10d
add    %r10d,%r11d
movzbl (%rdi),%r10d
shl    $0x10,%r10d
add    %r10d,%r11d
movzbl (%rdx),%r10d
shl    $0x18,%r10d
add    %r11d,%r10d
mov    %r10d,(%rsi)
add    $0x1,%rax
add    $0x1,%rcx
add    $0x1,%rdi
add    $0x1,%rdx
add    $0x4,%rsi
movzbl (%rax),%r11d
movzbl (%rcx),%r10d
shl    $0x8,%r10d
add    %r10d,%r11d
movzbl (%rdi),%r10d
shl    $0x10,%r10d
add    %r10d,%r11d
movzbl (%rdx),%r10d
shl    $0x18,%r10d
add    %r11d,%r10d
mov    %r10d,(%rsi)
add    $0x1,%rax
add    $0x1,%rcx
add    $0x1,%rdi
add    $0x1,%rdx
add    $0x4,%rsi
movzbl (%rax),%r11d
movzbl (%rcx),%r10d
shl    $0x8,%r10d
add    %r10d,%r11d
movzbl (%rdi),%r10d
shl    $0x10,%r10d
add    %r10d,%r11d
movzbl (%rdx),%r10d
shl    $0x18,%r10d
add    %r11d,%r10d
mov    %r10d,(%rsi)
add    $0x1,%rax
add    $0x1,%rcx
add    $0x1,%rdi
add    $0x1,%rdx
add    $0x4,%rsi
movzbl (%rax),%r11d
movzbl (%rcx),%r10d
shl    $0x8,%r10d
add    %r10d,%r11d
movzbl (%rdi),%r10d
shl    $0x10,%r10d
add    %r10d,%r11d
movzbl (%rdx),%r10d
shl    $0x18,%r10d
add    %r11d,%r10d
mov    %r10d,(%rsi)
add    $0x1,%rax
add    $0x1,%rcx
add    $0x1,%rdi
add    $0x1,%rdx
add    $0x4,%rsi
movzbl (%rax),%r11d
movzbl (%rcx),%r10d
shl    $0x8,%r10d
add    %r10d,%r11d
movzbl (%rdi),%r10d
shl    $0x10,%r10d
add    %r10d,%r11d
movzbl (%rdx),%r10d
shl    $0x18,%r10d
add    %r11d,%r10d
mov    %r10d,(%rsi)
add    $0x1,%rax
add    $0x1,%rcx
add    $0x1,%rdi
add    $0x1,%rdx
add    $0x4,%rsi
add    $0xffffffff,%r9d
add    %r14,%rax
add    %r14,%rcx
add    %r14,%rdi
add    %r14,%rdx
lea    (%rsi,%r15,4),%rsi
test   %r9d,%r9d
jne    2de79 <putRGBAAseparate8bittile+0x3a9>
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
leaveq 
retq   
mov    %r8,%r11
jmpq   2dc7c <putRGBAAseparate8bittile+0x1ac>
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   0x0(%rax)

000000000002de90 <putCMYKseparate8bittile>:
push   %rbp
mov    %rsp,%rbp
sub    $0x40,%rsp
mov    %rbx,-0x18(%rbp)
mov    %r12,-0x20(%rbp)
mov    %r13,-0x28(%rbp)
mov    %r14,-0x30(%rbp)
mov    %r15,-0x38(%rbp)
mov    0x38(%rbp),%rdi
movslq 0x10(%rbp),%rax
mov    %rax,-0x10(%rbp)
mov    0x20(%rbp),%rbx
mov    0x28(%rbp),%r11
mov    0x30(%rbp),%r12
movslq 0x18(%rbp),%rax
mov    %rax,-0x8(%rbp)
mov    $0xff,%r13d
mov    $0x80808081,%r10d
jmpq   2df82 <putCMYKseparate8bittile+0xf2>
movzbl (%rdi),%eax
mov    %r13,%r15
sub    %eax,%r15d
movzbl (%rbx),%eax
neg    %eax
add    %r13d,%eax
mov    %r15,%rcx
imul   %eax,%ecx
mov    %r10,%rax
mul    %ecx
mov    %rdx,%rcx
shr    $0x7,%ecx
movzbl (%r11),%eax
neg    %eax
add    %r13d,%eax
mov    %r15,%rdx
imul   %eax,%edx
mov    %r10,%rax
mul    %edx
and    $0x7fffff80,%edx
lea    (%rdx,%rdx,1),%eax
or     %eax,%ecx
movzbl (%r12),%eax
neg    %eax
add    %r13d,%eax
imul   %eax,%r15d
mov    %r10,%rax
mul    %r15d
and    $0x7fff80,%edx
shl    $0x9,%edx
or     %edx,%ecx
or     $0xff000000,%ecx
mov    %ecx,(%rsi)
add    $0x1,%rdi
add    $0x1,%rbx
add    $0x1,%r11
add    $0x1,%r12
add    $0x4,%rsi
add    $0xffffffff,%r14d
test   %r14d,%r14d
jne    2dedd <putCMYKseparate8bittile+0x4d>
add    $0xffffffff,%r9d
mov    -0x10(%rbp),%rax
add    %rax,%rdi
add    %rax,%rbx
add    %rax,%r11
add    %rax,%r12
mov    -0x8(%rbp),%rax
lea    (%rsi,%rax,4),%rsi
test   %r9d,%r9d
jne    2df9d <putCMYKseparate8bittile+0x10d>
mov    -0x38(%rbp),%r15
mov    -0x30(%rbp),%r14
mov    -0x28(%rbp),%r13
mov    -0x20(%rbp),%r12
mov    -0x18(%rbp),%rbx
leaveq 
retq   
mov    %r8,%r14
jmp    2df5d <putCMYKseparate8bittile+0xcd>
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   (%rax)

000000000002dfb0 <putRGBUAseparate8bittile>:
push   %rbp
mov    %rsp,%rbp
sub    $0x40,%rsp
mov    %rbx,-0x18(%rbp)
mov    %r12,-0x20(%rbp)
mov    %r13,-0x28(%rbp)
mov    %r14,-0x30(%rbp)
mov    %r15,-0x38(%rbp)
mov    0x20(%rbp),%rax
movslq 0x10(%rbp),%rcx
mov    %rcx,-0x10(%rbp)
mov    0x38(%rbp),%rcx
mov    0x28(%rbp),%rdx
mov    0x30(%rbp),%rbx
movslq 0x18(%rbp),%r10
mov    %r10,-0x8(%rbp)
mov    -0x10(%rbp),%r14
jmp    2e069 <putRGBUAseparate8bittile+0xb9>
movzbl (%rcx),%r11d
mov    %r11,%r10
shl    $0x8,%r10
add    0x78(%rdi),%r10
movzbl (%rax),%r12d
movzbl (%r12,%r10,1),%r15d
movzbl (%rdx),%r12d
movzbl (%r12,%r10,1),%r12d
shl    $0x8,%r12d
add    %r15d,%r12d
movzbl (%rbx),%r15d
movzbl (%r10,%r15,1),%r10d
shl    $0x10,%r10d
add    %r12d,%r10d
shl    $0x18,%r11d
add    %r11d,%r10d
mov    %r10d,(%rsi)
add    $0x1,%rax
add    $0x1,%rcx
add    $0x1,%rdx
add    $0x1,%rbx
add    $0x4,%rsi
add    $0xffffffff,%r13d
test   %r13d,%r13d
jne    2dff2 <putRGBUAseparate8bittile+0x42>
add    $0xffffffff,%r9d
add    %r14,%rax
add    %r14,%rcx
add    %r14,%rdx
add    %r14,%rbx
mov    -0x8(%rbp),%r10
lea    (%rsi,%r10,4),%rsi
test   %r9d,%r9d
jne    2e084 <putRGBUAseparate8bittile+0xd4>
mov    -0x38(%rbp),%r15
mov    -0x30(%rbp),%r14
mov    -0x28(%rbp),%r13
mov    -0x20(%rbp),%r12
mov    -0x18(%rbp),%rbx
leaveq 
retq   
mov    %r8,%r13
jmp    2e04c <putRGBUAseparate8bittile+0x9c>
nopl   0x0(%rax)

000000000002e090 <putRGBseparate16bittile>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    %rbx,-0x10(%rbp)
mov    %r12,-0x18(%rbp)
mov    %r13,-0x20(%rbp)
mov    %r14,-0x28(%rbp)
mov    %r15,-0x30(%rbp)
mov    0x20(%rbp),%rax
movslq 0x10(%rbp),%r12
mov    0x28(%rbp),%rcx
mov    0x30(%rbp),%rdx
movslq 0x18(%rbp),%rbx
mov    %rbx,-0x8(%rbp)
xor    %r15d,%r15d
mov    -0x8(%rbp),%r13
jmp    2e12c <putRGBseparate16bittile+0x9c>
movzwl (%rax),%ebx
mov    0x80(%rdi),%r11
movzbl (%rbx,%r11,1),%r14d
movzwl (%rcx),%ebx
movzbl (%rbx,%r11,1),%ebx
shl    $0x8,%ebx
add    %ebx,%r14d
movzwl (%rdx),%ebx
movzbl (%r11,%rbx,1),%ebx
shl    $0x10,%ebx
lea    -0x1000000(%r14,%rbx,1),%ebx
mov    %ebx,(%rsi)
add    $0x2,%rax
add    $0x2,%rcx
add    $0x2,%rdx
add    $0x4,%rsi
add    $0x1,%r10d
cmp    %r8d,%r10d
jb     2e0cd <putRGBseparate16bittile+0x3d>
add    $0xffffffff,%r9d
lea    (%rax,%r12,2),%rax
lea    (%rcx,%r12,2),%rcx
lea    (%rdx,%r12,2),%rdx
lea    (%rsi,%r13,4),%rsi
test   %r9d,%r9d
jne    2e147 <putRGBseparate16bittile+0xb7>
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
mov    -0x10(%rbp),%rbx
leaveq 
retq   
mov    %r15,%r10
jmp    2e113 <putRGBseparate16bittile+0x83>
nopl   0x0(%rax)

000000000002e150 <putRGBAAseparate16bittile>:
push   %rbp
mov    %rsp,%rbp
sub    $0x40,%rsp
mov    %rbx,-0x18(%rbp)
mov    %r12,-0x20(%rbp)
mov    %r13,-0x28(%rbp)
mov    %r14,-0x30(%rbp)
mov    %r15,-0x38(%rbp)
mov    0x20(%rbp),%rax
movslq 0x10(%rbp),%rcx
mov    %rcx,-0x10(%rbp)
mov    0x28(%rbp),%rcx
mov    0x30(%rbp),%rdx
mov    0x38(%rbp),%rbx
movslq 0x18(%rbp),%r10
mov    %r10,-0x8(%rbp)
xor    %r14d,%r14d
mov    -0x10(%rbp),%r15
jmp    2e213 <putRGBAAseparate16bittile+0xc3>
movzwl (%rax),%r10d
mov    0x80(%rdi),%r13
movzbl (%r10,%r13,1),%r12d
movzwl (%rcx),%r10d
movzbl (%r10,%r13,1),%r10d
shl    $0x8,%r10d
add    %r10d,%r12d
movzwl (%rdx),%r10d
movzbl 0x0(%r13,%r10,1),%r10d
shl    $0x10,%r10d
add    %r10d,%r12d
movzwl (%rbx),%r10d
movzbl 0x0(%r13,%r10,1),%r10d
shl    $0x18,%r10d
add    %r12d,%r10d
mov    %r10d,(%rsi)
add    $0x2,%rax
add    $0x2,%rcx
add    $0x2,%rdx
add    $0x2,%rbx
add    $0x4,%rsi
add    $0x1,%r11d
cmp    %r8d,%r11d
jb     2e195 <putRGBAAseparate16bittile+0x45>
add    $0xffffffff,%r9d
lea    (%rax,%r15,2),%rax
lea    (%rcx,%r15,2),%rcx
lea    (%rdx,%r15,2),%rdx
lea    (%rbx,%r15,2),%rbx
mov    -0x8(%rbp),%r10
lea    (%rsi,%r10,4),%rsi
test   %r9d,%r9d
jne    2e22e <putRGBAAseparate16bittile+0xde>
mov    -0x38(%rbp),%r15
mov    -0x30(%rbp),%r14
mov    -0x28(%rbp),%r13
mov    -0x20(%rbp),%r12
mov    -0x18(%rbp),%rbx
leaveq 
retq   
mov    %r14,%r11
jmp    2e1f2 <putRGBAAseparate16bittile+0xa2>
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

000000000002e240 <putRGBUAseparate16bittile>:
push   %rbp
mov    %rsp,%rbp
sub    $0x40,%rsp
mov    %rbx,-0x18(%rbp)
mov    %r12,-0x20(%rbp)
mov    %r13,-0x28(%rbp)
mov    %r14,-0x30(%rbp)
mov    %r15,-0x38(%rbp)
mov    0x20(%rbp),%rax
movslq 0x10(%rbp),%rcx
mov    %rcx,-0x10(%rbp)
mov    0x38(%rbp),%rcx
mov    0x28(%rbp),%rdx
mov    0x30(%rbp),%rbx
movslq 0x18(%rbp),%r10
mov    %r10,-0x8(%rbp)
jmpq   2e31b <putRGBUAseparate16bittile+0xdb>
movzwl (%rax),%r10d
mov    0x80(%rdi),%r14
movzbl (%r10,%r14,1),%r12d
movzwl (%rcx),%r10d
movzbl (%r10,%r14,1),%r11d
mov    %r11,%r10
shl    $0x8,%r10
add    0x78(%rdi),%r10
movzbl (%r12,%r10,1),%r15d
movzwl (%rdx),%r12d
movzbl (%r12,%r14,1),%r12d
movzbl (%r12,%r10,1),%r12d
shl    $0x8,%r12d
add    %r12d,%r15d
movzwl (%rbx),%r12d
movzbl (%r14,%r12,1),%r12d
movzbl (%r10,%r12,1),%r10d
shl    $0x10,%r10d
add    %r15d,%r10d
shl    $0x18,%r11d
add    %r11d,%r10d
mov    %r10d,(%rsi)
add    $0x2,%rax
add    $0x2,%rcx
add    $0x2,%rdx
add    $0x2,%rbx
add    $0x4,%rsi
add    $0xffffffff,%r13d
test   %r13d,%r13d
jne    2e281 <putRGBUAseparate16bittile+0x41>
add    $0xffffffff,%r9d
mov    -0x10(%rbp),%r10
lea    (%rax,%r10,2),%rax
lea    (%rcx,%r10,2),%rcx
lea    (%rdx,%r10,2),%rdx
lea    (%rbx,%r10,2),%rbx
mov    -0x8(%rbp),%r10
lea    (%rsi,%r10,4),%rsi
test   %r9d,%r9d
jne    2e336 <putRGBUAseparate16bittile+0xf6>
mov    -0x38(%rbp),%r15
mov    -0x30(%rbp),%r14
mov    -0x28(%rbp),%r13
mov    -0x20(%rbp),%r12
mov    -0x18(%rbp),%rbx
leaveq 
retq   
mov    %r8,%r13
jmp    2e2f6 <putRGBUAseparate16bittile+0xb6>
nopl   0x0(%rax,%rax,1)

000000000002e340 <putcontig8bitCIELab>:
push   %rbp
mov    %rsp,%rbp
sub    $0x60,%rsp
mov    %r15,-0x38(%rbp)
mov    %r14,-0x30(%rbp)
mov    %rbx,-0x18(%rbp)
mov    %r12,-0x20(%rbp)
mov    %r13,-0x28(%rbp)
mov    %r8,-0x48(%rbp)
mov    0x20(%rbp),%r12
movslq 0x10(%rbp),%rax
lea    (%rax,%rax,2),%eax
movslq %eax,%rax
mov    %rax,-0x10(%rbp)
movslq 0x18(%rbp),%rax
mov    %rax,-0x8(%rbp)
mov    %rdi,%rbx
mov    %r9,%r10
mov    %rsi,%r14
mov    %r8,%r15
lea    -0x60(%rbp),%r8
lea    -0x5c(%rbp),%r9
lea    -0x58(%rbp),%rax
lea    -0x54(%rbp),%r13
jmpq   2e435 <putcontig8bitCIELab+0xf5>
sub    $0x10,%rsp
mov    0x70(%rbx),%rdi
movzbl (%r12),%esi
movsbq 0x1(%r12),%rdx
movsbq 0x2(%r12),%rcx
mov    %rax,(%rsp)
callq  8320 <TIFFCIELabToXYZ@plt>
add    $0x10,%rsp
mov    0x70(%rbx),%rdi
movss  -0x60(%rbp),%xmm0
movss  -0x5c(%rbp),%xmm1
movss  -0x58(%rbp),%xmm2
mov    %r13,%rsi
lea    -0x50(%rbp),%rdx
lea    -0x4c(%rbp),%rcx
callq  8d30 <TIFFXYZToRGB@plt>
mov    -0x50(%rbp),%eax
shl    $0x8,%eax
or     -0x54(%rbp),%eax
mov    -0x4c(%rbp),%ecx
shl    $0x10,%ecx
or     %ecx,%eax
or     $0xff000000,%eax
mov    %eax,(%r14)
add    $0x3,%r12
add    $0x4,%r14
add    $0xffffffff,%r15d
lea    -0x58(%rbp),%rax
lea    -0x5c(%rbp),%r9
lea    -0x60(%rbp),%r8
test   %r15d,%r15d
jne    2e39b <putcontig8bitCIELab+0x5b>
mov    -0x40(%rbp),%rcx
lea    -0x1(%rcx),%r10d
mov    -0x10(%rbp),%rcx
add    %rcx,%r12
mov    -0x8(%rbp),%rcx
lea    (%r14,%rcx,4),%r14
mov    -0x48(%rbp),%r15
test   %r10d,%r10d
jne    2e450 <putcontig8bitCIELab+0x110>
mov    -0x28(%rbp),%r13
mov    -0x20(%rbp),%r12
mov    -0x18(%rbp),%rbx
mov    -0x30(%rbp),%r14
mov    -0x38(%rbp),%r15
leaveq 
retq   
mov    %r10,-0x40(%rbp)
jmp    2e415 <putcontig8bitCIELab+0xd5>
nopw   %cs:0x0(%rax,%rax,1)

000000000002e460 <putcontig8bitYCbCr44tile>:
push   %rbp
mov    %rsp,%rbp
sub    $0x200,%rsp
mov    %r15,-0x68(%rbp)
mov    %r14,-0x60(%rbp)
mov    %r13,-0x58(%rbp)
mov    %r12,-0x50(%rbp)
mov    %rbx,-0x48(%rbp)
mov    %rdi,-0x38(%rbp)
mov    %r8,-0x70(%rbp)
mov    0x20(%rbp),%rbx
movslq 0x10(%rbp),%rcx
mov    %rcx,%rax
sar    %eax
shr    $0x1e,%eax
add    %ecx,%eax
sar    $0x2,%eax
lea    (%rax,%rax,4),%eax
add    %eax,%eax
movslq %eax,%rax
mov    %rax,-0x40(%rbp)
lea    (%r8,%r8,2),%eax
movslq 0x18(%rbp),%r10
lea    (%rax,%r10,4),%eax
movslq %eax,%rax
mov    %rax,-0x28(%rbp)
lea    -0x84(%rbp),%rax
lea    -0x138(%rbp),%r15
lea    -0x120(%rbp),%r14
lea    -0x114(%rbp),%r12
lea    -0xd8(%rbp),%r11
mov    %r8d,%edx
lea    (%rsi,%rdx,4),%rcx
lea    (%rcx,%r10,4),%r13
lea    0x0(%r13,%rdx,4),%rcx
lea    (%rcx,%r10,4),%rcx
lea    (%rcx,%rdx,4),%rdx
lea    (%rdx,%r10,4),%r10
mov    %r9,%rdx
and    $0x3,%edx
test   %edx,%edx
je     2e51f <putcontig8bitYCbCr44tile+0xbf>
mov    %r12,%rdx
mov    %rdi,%r12
mov    %r14,%rdi
mov    %rsi,%r14
mov    %rdx,%rsi
lea    -0xc0(%rbp),%rdx
jmpq   2e604 <putcontig8bitYCbCr44tile+0x1a4>
mov    %r8,%rdx
and    $0x3,%edx
test   %edx,%edx
je     2e633 <putcontig8bitYCbCr44tile+0x1d3>
mov    %r12,%rdx
mov    %rdi,%r12
mov    %r14,%rdi
mov    %rsi,%r14
mov    %rdx,%rsi
lea    -0xc0(%rbp),%rdx
jmpq   2e604 <putcontig8bitYCbCr44tile+0x1a4>
mov    %r12d,%esi
lea    (%r15,%rsi,4),%rax
mov    -0x30(%rbp),%rcx
lea    (%rcx,%rsi,4),%rcx
mov    -0x20(%rbp),%rdx
lea    (%rdx,%rsi,4),%rdx
lea    (%r14,%rsi,4),%rsi
xor    %r8d,%r8d
mov    %rax,-0x10(%rbp)
mov    %rcx,-0x30(%rbp)
mov    %rsi,-0x18(%rbp)
mov    %rdx,-0x20(%rbp)
add    $0x12,%rbx
mov    %r13,%r9
mov    -0x38(%rbp),%r12
lea    -0xd8(%rbp),%r11
lea    -0x114(%rbp),%rsi
lea    -0x120(%rbp),%rdi
lea    -0x138(%rbp),%r15
lea    -0x84(%rbp),%rax
lea    -0xc0(%rbp),%rdx
lea    -0xb4(%rbp),%rcx
lea    -0xa8(%rbp),%r10
mov    %r8,-0x78(%rbp)
test   %r8d,%r8d
jne    2e65b <putcontig8bitYCbCr44tile+0x1fb>
cmp    $0x4,%r9d
jbe    2e686 <putcontig8bitYCbCr44tile+0x226>
add    $0xfffffffc,%r9d
mov    -0x40(%rbp),%rcx
add    %rcx,%rbx
mov    -0x10(%rbp),%rcx
mov    -0x28(%rbp),%r8
lea    (%rcx,%r8,4),%r14
mov    -0x30(%rbp),%rcx
lea    (%rcx,%r8,4),%r10
mov    -0x20(%rbp),%rcx
lea    (%rcx,%r8,4),%rcx
mov    -0x18(%rbp),%r13
lea    0x0(%r13,%r8,4),%r13
mov    -0x70(%rbp),%r8
mov    %r9,-0x80(%rbp)
mov    %r14,-0x10(%rbp)
mov    %r10,-0x30(%rbp)
mov    %r13,-0x18(%rbp)
mov    %rcx,-0x20(%rbp)
test   %r9d,%r9d
jne    2e69c <putcontig8bitYCbCr44tile+0x23c>
mov    -0x48(%rbp),%rbx
mov    -0x50(%rbp),%r12
mov    -0x58(%rbp),%r13
mov    -0x60(%rbp),%r14
mov    -0x68(%rbp),%r15
leaveq 
retq   
shr    $0x2,%r8d
mov    %r8,-0x78(%rbp)
mov    %rdi,%r12
mov    %rsi,%r15
lea    -0x200(%rbp),%r8
lea    -0x1fc(%rbp),%rdx
lea    -0x1f8(%rbp),%rax
jmpq   2ec58 <putcontig8bitYCbCr44tile+0x7f8>
movzbl 0x10(%rbx),%r14d
movzbl 0x11(%rbx),%r13d
mov    %r13,-0x8(%rbp)
cmp    $0x1,%r8d
jbe    2ec84 <putcontig8bitYCbCr44tile+0x824>
cmp    $0x2,%r8d
jne    2ecb1 <putcontig8bitYCbCr44tile+0x851>
mov    -0x10(%rbp),%r15
jmpq   2ee56 <putcontig8bitYCbCr44tile+0x9f6>
mov    -0x48(%rbp),%rbx
mov    -0x50(%rbp),%r12
mov    -0x58(%rbp),%r13
mov    -0x60(%rbp),%r14
mov    -0x68(%rbp),%r15
leaveq 
retq   
lea    -0xb4(%rbp),%rcx
lea    -0xa8(%rbp),%r10
jmpq   2e5b9 <putcontig8bitYCbCr44tile+0x159>
add    $0x12,%rbx
mov    -0x38(%rbp),%rax
lea    0x10(%rax),%r15
mov    -0x30(%rbp),%rax
add    $0x10,%rax
mov    %rax,-0x30(%rbp)
mov    -0x20(%rbp),%rax
add    $0x10,%rax
mov    %rax,-0x20(%rbp)
lea    0x10(%r14),%rax
mov    %rax,-0x18(%rbp)
lea    -0x1fc(%rbp),%r9
lea    -0x200(%rbp),%r8
lea    -0x1f8(%rbp),%rax
mov    %r15,-0x38(%rbp)
sub    $0x10,%rsp
mov    0x68(%r12),%rdi
movzbl (%rbx),%esi
movzbl 0x10(%rbx),%r14d
movzbl 0x11(%rbx),%r13d
mov    %rax,(%rsp)
mov    %r14,%rdx
mov    %r13,%rcx
callq  8370 <TIFFYCbCrtoRGB@plt>
mov    -0x1fc(%rbp),%eax
shl    $0x8,%eax
or     -0x200(%rbp),%eax
mov    -0x1f8(%rbp),%ecx
shl    $0x10,%ecx
or     %ecx,%eax
or     $0xff000000,%eax
mov    %eax,(%r15)
mov    0x68(%r12),%rdi
movzbl 0x1(%rbx),%esi
lea    -0x1ec(%rbp),%rax
mov    %rax,(%rsp)
mov    %r14,%rdx
mov    %r13,%rcx
lea    -0x1f4(%rbp),%r8
lea    -0x1f0(%rbp),%r9
callq  8370 <TIFFYCbCrtoRGB@plt>
mov    -0x1f0(%rbp),%eax
shl    $0x8,%eax
or     -0x1f4(%rbp),%eax
mov    -0x1ec(%rbp),%ecx
shl    $0x10,%ecx
or     %ecx,%eax
or     $0xff000000,%eax
mov    %eax,0x4(%r15)
mov    0x68(%r12),%rdi
movzbl 0x2(%rbx),%esi
lea    -0x1e0(%rbp),%rax
mov    %rax,(%rsp)
mov    %r14,%rdx
mov    %r13,%rcx
lea    -0x1e8(%rbp),%r8
lea    -0x1e4(%rbp),%r9
callq  8370 <TIFFYCbCrtoRGB@plt>
mov    -0x1e4(%rbp),%eax
shl    $0x8,%eax
or     -0x1e8(%rbp),%eax
mov    -0x1e0(%rbp),%ecx
shl    $0x10,%ecx
or     %ecx,%eax
or     $0xff000000,%eax
mov    %eax,0x8(%r15)
mov    0x68(%r12),%rdi
movzbl 0x3(%rbx),%esi
lea    -0x1d4(%rbp),%rax
mov    %rax,(%rsp)
mov    %r14,%rdx
mov    %r13,%rcx
lea    -0x1dc(%rbp),%r8
lea    -0x1d8(%rbp),%r9
callq  8370 <TIFFYCbCrtoRGB@plt>
mov    -0x1d8(%rbp),%eax
shl    $0x8,%eax
or     -0x1dc(%rbp),%eax
mov    -0x1d4(%rbp),%ecx
shl    $0x10,%ecx
or     %ecx,%eax
or     $0xff000000,%eax
mov    %eax,0xc(%r15)
mov    0x68(%r12),%rdi
movzbl 0x4(%rbx),%esi
lea    -0x1c8(%rbp),%rax
mov    %rax,(%rsp)
mov    %r14,%rdx
mov    %r13,%rcx
lea    -0x1d0(%rbp),%r8
lea    -0x1cc(%rbp),%r9
callq  8370 <TIFFYCbCrtoRGB@plt>
mov    -0x1cc(%rbp),%eax
shl    $0x8,%eax
or     -0x1d0(%rbp),%eax
mov    -0x1c8(%rbp),%ecx
shl    $0x10,%ecx
or     %ecx,%eax
or     $0xff000000,%eax
mov    -0x30(%rbp),%r15
mov    %eax,(%r15)
mov    0x68(%r12),%rdi
movzbl 0x5(%rbx),%esi
lea    -0x1bc(%rbp),%rax
mov    %rax,(%rsp)
mov    %r14,%rdx
mov    %r13,%rcx
lea    -0x1c4(%rbp),%r8
lea    -0x1c0(%rbp),%r9
callq  8370 <TIFFYCbCrtoRGB@plt>
mov    -0x1c0(%rbp),%eax
shl    $0x8,%eax
or     -0x1c4(%rbp),%eax
mov    -0x1bc(%rbp),%ecx
shl    $0x10,%ecx
or     %ecx,%eax
or     $0xff000000,%eax
mov    %eax,0x4(%r15)
mov    0x68(%r12),%rdi
movzbl 0x6(%rbx),%esi
lea    -0x1b0(%rbp),%rax
mov    %rax,(%rsp)
mov    %r14,%rdx
mov    %r13,%rcx
lea    -0x1b8(%rbp),%r8
lea    -0x1b4(%rbp),%r9
callq  8370 <TIFFYCbCrtoRGB@plt>
mov    -0x1b4(%rbp),%eax
shl    $0x8,%eax
or     -0x1b8(%rbp),%eax
mov    -0x1b0(%rbp),%ecx
shl    $0x10,%ecx
or     %ecx,%eax
or     $0xff000000,%eax
mov    %eax,0x8(%r15)
mov    0x68(%r12),%rdi
movzbl 0x7(%rbx),%esi
lea    -0x1a4(%rbp),%rax
mov    %rax,(%rsp)
mov    %r14,%rdx
mov    %r13,%rcx
lea    -0x1ac(%rbp),%r8
lea    -0x1a8(%rbp),%r9
callq  8370 <TIFFYCbCrtoRGB@plt>
mov    -0x1a8(%rbp),%eax
shl    $0x8,%eax
or     -0x1ac(%rbp),%eax
mov    -0x1a4(%rbp),%ecx
shl    $0x10,%ecx
or     %ecx,%eax
or     $0xff000000,%eax
mov    %eax,0xc(%r15)
mov    0x68(%r12),%rdi
movzbl 0x8(%rbx),%esi
lea    -0x198(%rbp),%rax
mov    %rax,(%rsp)
mov    %r14,%rdx
mov    %r13,%rcx
lea    -0x1a0(%rbp),%r8
lea    -0x19c(%rbp),%r9
callq  8370 <TIFFYCbCrtoRGB@plt>
mov    -0x19c(%rbp),%eax
shl    $0x8,%eax
or     -0x1a0(%rbp),%eax
mov    -0x198(%rbp),%ecx
shl    $0x10,%ecx
or     %ecx,%eax
or     $0xff000000,%eax
mov    -0x20(%rbp),%r15
mov    %eax,(%r15)
mov    0x68(%r12),%rdi
movzbl 0x9(%rbx),%esi
lea    -0x18c(%rbp),%rax
mov    %rax,(%rsp)
mov    %r14,%rdx
mov    %r13,%rcx
lea    -0x194(%rbp),%r8
lea    -0x190(%rbp),%r9
callq  8370 <TIFFYCbCrtoRGB@plt>
mov    -0x190(%rbp),%eax
shl    $0x8,%eax
or     -0x194(%rbp),%eax
mov    -0x18c(%rbp),%ecx
shl    $0x10,%ecx
or     %ecx,%eax
or     $0xff000000,%eax
mov    %eax,0x4(%r15)
mov    0x68(%r12),%rdi
movzbl 0xa(%rbx),%esi
lea    -0x180(%rbp),%rax
mov    %rax,(%rsp)
mov    %r14,%rdx
mov    %r13,%rcx
lea    -0x188(%rbp),%r8
lea    -0x184(%rbp),%r9
callq  8370 <TIFFYCbCrtoRGB@plt>
mov    -0x184(%rbp),%eax
shl    $0x8,%eax
or     -0x188(%rbp),%eax
mov    -0x180(%rbp),%ecx
shl    $0x10,%ecx
or     %ecx,%eax
or     $0xff000000,%eax
mov    %eax,0x8(%r15)
mov    0x68(%r12),%rdi
movzbl 0xb(%rbx),%esi
lea    -0x174(%rbp),%rax
mov    %rax,(%rsp)
mov    %r14,%rdx
mov    %r13,%rcx
lea    -0x17c(%rbp),%r8
lea    -0x178(%rbp),%r9
callq  8370 <TIFFYCbCrtoRGB@plt>
mov    -0x178(%rbp),%eax
shl    $0x8,%eax
or     -0x17c(%rbp),%eax
mov    -0x174(%rbp),%ecx
shl    $0x10,%ecx
or     %ecx,%eax
or     $0xff000000,%eax
mov    %eax,0xc(%r15)
mov    0x68(%r12),%rdi
movzbl 0xc(%rbx),%esi
lea    -0x168(%rbp),%rax
mov    %rax,(%rsp)
mov    %r14,%rdx
mov    %r13,%rcx
lea    -0x170(%rbp),%r8
lea    -0x16c(%rbp),%r9
callq  8370 <TIFFYCbCrtoRGB@plt>
mov    -0x16c(%rbp),%eax
shl    $0x8,%eax
or     -0x170(%rbp),%eax
mov    -0x168(%rbp),%ecx
shl    $0x10,%ecx
or     %ecx,%eax
or     $0xff000000,%eax
mov    -0x18(%rbp),%r15
mov    %eax,(%r15)
mov    0x68(%r12),%rdi
movzbl 0xd(%rbx),%esi
lea    -0x15c(%rbp),%rax
mov    %rax,(%rsp)
mov    %r14,%rdx
mov    %r13,%rcx
lea    -0x164(%rbp),%r8
lea    -0x160(%rbp),%r9
callq  8370 <TIFFYCbCrtoRGB@plt>
mov    -0x160(%rbp),%eax
shl    $0x8,%eax
or     -0x164(%rbp),%eax
mov    -0x15c(%rbp),%ecx
shl    $0x10,%ecx
or     %ecx,%eax
or     $0xff000000,%eax
mov    %eax,0x4(%r15)
mov    0x68(%r12),%rdi
movzbl 0xe(%rbx),%esi
lea    -0x150(%rbp),%rax
mov    %rax,(%rsp)
mov    %r14,%rdx
mov    %r13,%rcx
lea    -0x158(%rbp),%r8
lea    -0x154(%rbp),%r9
callq  8370 <TIFFYCbCrtoRGB@plt>
mov    -0x154(%rbp),%eax
shl    $0x8,%eax
or     -0x158(%rbp),%eax
mov    -0x150(%rbp),%ecx
shl    $0x10,%ecx
or     %ecx,%eax
or     $0xff000000,%eax
mov    %eax,0x8(%r15)
mov    0x68(%r12),%rdi
movzbl 0xf(%rbx),%esi
lea    -0x144(%rbp),%rax
mov    %rax,(%rsp)
mov    %r13,%rcx
mov    %r14,%rdx
mov    %r15,%r14
lea    -0x14c(%rbp),%r8
lea    -0x148(%rbp),%r9
callq  8370 <TIFFYCbCrtoRGB@plt>
add    $0x10,%rsp
mov    -0x148(%rbp),%eax
shl    $0x8,%eax
or     -0x14c(%rbp),%eax
mov    -0x144(%rbp),%ecx
shl    $0x10,%ecx
or     %ecx,%eax
or     $0xff000000,%eax
mov    %eax,0xc(%r14)
mov    -0x80(%rbp),%rax
add    $0xffffffff,%eax
mov    %rax,-0x80(%rbp)
test   %eax,%eax
jne    2e6af <putcontig8bitYCbCr44tile+0x24f>
mov    -0x70(%rbp),%rax
lea    -0x4(%rax),%r9d
mov    -0x40(%rbp),%rax
lea    0x12(%rbx,%rax,1),%rbx
mov    -0x38(%rbp),%rcx
mov    -0x28(%rbp),%rax
lea    0x10(%rcx,%rax,4),%r15
mov    -0x30(%rbp),%rcx
lea    0x10(%rcx,%rax,4),%r13
mov    -0x20(%rbp),%rcx
lea    0x10(%rcx,%rax,4),%rcx
lea    0x10(%r14,%rax,4),%r10
lea    -0x1fc(%rbp),%rdx
lea    -0x200(%rbp),%r8
lea    -0x1f8(%rbp),%rax
mov    %r13,-0x30(%rbp)
mov    %rcx,-0x20(%rbp)
mov    %r10,-0x18(%rbp)
cmp    $0x3,%r9d
ja     2ee79 <putcontig8bitYCbCr44tile+0xa19>
mov    -0x48(%rbp),%rbx
mov    -0x50(%rbp),%r12
mov    -0x58(%rbp),%r13
mov    -0x60(%rbp),%r14
mov    -0x68(%rbp),%r15
leaveq 
retq   
cmp    $0x1,%r8d
je     2ee8b <putcontig8bitYCbCr44tile+0xa2b>
cmp    $0x1,%r9d
jbe    2ee94 <putcontig8bitYCbCr44tile+0xa34>
cmp    $0x2,%r9d
je     2ef60 <putcontig8bitYCbCr44tile+0xb00>
cmp    $0x3,%r9d
je     2eef8 <putcontig8bitYCbCr44tile+0xa98>
jmpq   2ee9e <putcontig8bitYCbCr44tile+0xa3e>
cmp    $0x3,%r8d
jne    2ec8e <putcontig8bitYCbCr44tile+0x82e>
mov    -0x10(%rbp),%r15
jmpq   2f025 <putcontig8bitYCbCr44tile+0xbc5>
cmp    $0x1,%r9d
je     2eddf <putcontig8bitYCbCr44tile+0x97f>
sub    $0x10,%rsp
mov    0x68(%r12),%rdi
movzbl 0xe(%rbx),%esi
lea    -0x108(%rbp),%rax
mov    %rax,(%rsp)
mov    %r14,%rdx
mov    %r13,%rcx
lea    -0x110(%rbp),%r8
lea    -0x10c(%rbp),%r9
callq  8370 <TIFFYCbCrtoRGB@plt>
add    $0x10,%rsp
mov    -0x10c(%rbp),%eax
shl    $0x8,%eax
or     -0x110(%rbp),%eax
mov    -0x108(%rbp),%ecx
shl    $0x10,%ecx
or     %ecx,%eax
or     $0xff000000,%eax
mov    -0x30(%rbp),%rcx
mov    %eax,0x8(%rcx)
sub    $0x10,%rsp
mov    0x68(%r12),%rdi
movzbl 0xa(%rbx),%esi
lea    -0xfc(%rbp),%rax
mov    %rax,(%rsp)
mov    %r14,%rdx
mov    %r13,%rcx
lea    -0x104(%rbp),%r8
lea    -0x100(%rbp),%r9
callq  8370 <TIFFYCbCrtoRGB@plt>
add    $0x10,%rsp
mov    -0x100(%rbp),%eax
shl    $0x8,%eax
or     -0x104(%rbp),%eax
mov    -0xfc(%rbp),%ecx
shl    $0x10,%ecx
or     %ecx,%eax
or     $0xff000000,%eax
mov    -0x20(%rbp),%rcx
mov    %eax,0x8(%rcx)
sub    $0x10,%rsp
mov    0x68(%r12),%rdi
movzbl 0x6(%rbx),%esi
lea    -0xf0(%rbp),%rax
mov    %rax,(%rsp)
mov    %r14,%rdx
mov    %r13,%rcx
lea    -0xf8(%rbp),%r8
lea    -0xf4(%rbp),%r9
callq  8370 <TIFFYCbCrtoRGB@plt>
add    $0x10,%rsp
mov    -0xf4(%rbp),%eax
shl    $0x8,%eax
or     -0xf8(%rbp),%eax
mov    -0xf0(%rbp),%ecx
shl    $0x10,%ecx
or     %ecx,%eax
or     $0xff000000,%eax
mov    -0x18(%rbp),%rcx
mov    %eax,0x8(%rcx)
mov    -0x80(%rbp),%r9
sub    $0x10,%rsp
mov    0x68(%r12),%rdi
movzbl 0x2(%rbx),%esi
lea    -0xe4(%rbp),%rax
mov    %rax,(%rsp)
mov    %r13,%rcx
mov    %r9,%r13
mov    %r14,%rdx
lea    -0xec(%rbp),%r8
lea    -0xe8(%rbp),%r9
callq  8370 <TIFFYCbCrtoRGB@plt>
add    $0x10,%rsp
mov    -0xe8(%rbp),%eax
shl    $0x8,%eax
or     -0xec(%rbp),%eax
mov    -0xe4(%rbp),%ecx
shl    $0x10,%ecx
or     %ecx,%eax
or     $0xff000000,%eax
mov    %eax,0x8(%r15)
mov    %r13,%r9
mov    -0x8(%rbp),%r13
lea    -0xd8(%rbp),%r11
lea    -0xc0(%rbp),%rdx
lea    -0xb4(%rbp),%rcx
cmp    $0x1,%r9d
jbe    2f048 <putcontig8bitYCbCr44tile+0xbe8>
cmp    $0x2,%r9d
je     2f108 <putcontig8bitYCbCr44tile+0xca8>
cmp    $0x3,%r9d
je     2f0a6 <putcontig8bitYCbCr44tile+0xc46>
jmpq   2f052 <putcontig8bitYCbCr44tile+0xbf2>
mov    %r9,-0x70(%rbp)
mov    %rdx,%r9
pushq  -0x78(%rbp)
popq   -0x80(%rbp)
jmpq   2e6f0 <putcontig8bitYCbCr44tile+0x290>
mov    -0x10(%rbp),%r15
jmpq   2f1d4 <putcontig8bitYCbCr44tile+0xd74>
cmp    $0x1,%r9d
je     2efc4 <putcontig8bitYCbCr44tile+0xb64>
sub    $0x10,%rsp
mov    0x68(%r12),%rdi
movzbl 0xf(%rbx),%esi
mov    %r15,(%rsp)
mov    %r9,%r15
mov    %r14,%rdx
mov    %r13,%rcx
lea    -0x140(%rbp),%r8
lea    -0x13c(%rbp),%r9
callq  8370 <TIFFYCbCrtoRGB@plt>
add    $0x10,%rsp
mov    -0x13c(%rbp),%eax
shl    $0x8,%eax
or     -0x140(%rbp),%eax
mov    -0x138(%rbp),%ecx
shl    $0x10,%ecx
or     %ecx,%eax
or     $0xff000000,%eax
mov    -0x30(%rbp),%rcx
mov    %eax,0xc(%rcx)
mov    %r15,%r9
sub    $0x10,%rsp
mov    0x68(%r12),%rdi
movzbl 0xb(%rbx),%esi
lea    -0x12c(%rbp),%rax
mov    %rax,(%rsp)
mov    %r9,%r15
mov    %r14,%rdx
mov    %r13,%rcx
lea    -0x134(%rbp),%r8
lea    -0x130(%rbp),%r9
callq  8370 <TIFFYCbCrtoRGB@plt>
add    $0x10,%rsp
mov    -0x130(%rbp),%eax
shl    $0x8,%eax
or     -0x134(%rbp),%eax
mov    -0x12c(%rbp),%ecx
shl    $0x10,%ecx
or     %ecx,%eax
or     $0xff000000,%eax
mov    -0x20(%rbp),%rcx
mov    %eax,0xc(%rcx)
mov    %r15,%r9
lea    -0x120(%rbp),%rdi
sub    $0x10,%rsp
mov    0x68(%r12),%r10
movzbl 0x7(%rbx),%esi
mov    %rdi,(%rsp)
mov    %r10,%rdi
mov    %r9,%r15
mov    %r14,%rdx
mov    %r13,%rcx
lea    -0x128(%rbp),%r8
lea    -0x124(%rbp),%r9
callq  8370 <TIFFYCbCrtoRGB@plt>
add    $0x10,%rsp
mov    -0x124(%rbp),%eax
shl    $0x8,%eax
or     -0x128(%rbp),%eax
mov    -0x120(%rbp),%ecx
shl    $0x10,%ecx
or     %ecx,%eax
or     $0xff000000,%eax
mov    -0x18(%rbp),%rcx
mov    %eax,0xc(%rcx)
mov    %r15,%r9
lea    -0x114(%rbp),%rsi
sub    $0x10,%rsp
mov    0x68(%r12),%rdi
movzbl 0x3(%rbx),%r10d
mov    %rsi,(%rsp)
mov    %r10,%rsi
mov    %r9,%r15
mov    %r14,%rdx
mov    %r13,%rcx
lea    -0x11c(%rbp),%r8
lea    -0x118(%rbp),%r9
callq  8370 <TIFFYCbCrtoRGB@plt>
add    $0x10,%rsp
mov    -0x118(%rbp),%eax
shl    $0x8,%eax
or     -0x11c(%rbp),%eax
mov    -0x114(%rbp),%ecx
shl    $0x10,%ecx
or     %ecx,%eax
or     $0xff000000,%eax
mov    -0x10(%rbp),%rcx
mov    %eax,0xc(%rcx)
mov    %r15,%r9
mov    %rcx,%r15
cmp    $0x1,%r9d
jbe    2ecc0 <putcontig8bitYCbCr44tile+0x860>
cmp    $0x2,%r9d
je     2ed80 <putcontig8bitYCbCr44tile+0x920>
cmp    $0x3,%r9d
je     2ed25 <putcontig8bitYCbCr44tile+0x8c5>
jmpq   2ecca <putcontig8bitYCbCr44tile+0x86a>
cmp    $0x1,%r9d
je     2f167 <putcontig8bitYCbCr44tile+0xd07>
sub    $0x10,%rsp
mov    0x68(%r12),%rdi
movzbl 0xd(%rbx),%esi
mov    %r11,(%rsp)
mov    %r14,%rdx
mov    %r13,%rcx
lea    -0xe0(%rbp),%r8
lea    -0xdc(%rbp),%r9
callq  8370 <TIFFYCbCrtoRGB@plt>
add    $0x10,%rsp
mov    -0xdc(%rbp),%eax
shl    $0x8,%eax
or     -0xe0(%rbp),%eax
mov    -0xd8(%rbp),%ecx
shl    $0x10,%ecx
or     %ecx,%eax
or     $0xff000000,%eax
mov    -0x30(%rbp),%rcx
mov    %eax,0x4(%rcx)
sub    $0x10,%rsp
mov    0x68(%r12),%rdi
movzbl 0x9(%rbx),%esi
lea    -0xcc(%rbp),%rax
mov    %rax,(%rsp)
mov    %r14,%rdx
mov    %r13,%rcx
lea    -0xd4(%rbp),%r8
lea    -0xd0(%rbp),%r9
callq  8370 <TIFFYCbCrtoRGB@plt>
add    $0x10,%rsp
mov    -0xd0(%rbp),%eax
shl    $0x8,%eax
or     -0xd4(%rbp),%eax
mov    -0xcc(%rbp),%ecx
shl    $0x10,%ecx
or     %ecx,%eax
or     $0xff000000,%eax
mov    -0x20(%rbp),%rcx
mov    %eax,0x4(%rcx)
lea    -0xc0(%rbp),%rdx
sub    $0x10,%rsp
mov    0x68(%r12),%rdi
movzbl 0x5(%rbx),%esi
mov    %rdx,(%rsp)
mov    %r14,%rdx
mov    %r13,%rcx
lea    -0xc8(%rbp),%r8
lea    -0xc4(%rbp),%r9
callq  8370 <TIFFYCbCrtoRGB@plt>
add    $0x10,%rsp
mov    -0xc4(%rbp),%eax
shl    $0x8,%eax
or     -0xc8(%rbp),%eax
mov    -0xc0(%rbp),%ecx
shl    $0x10,%ecx
or     %ecx,%eax
or     $0xff000000,%eax
mov    -0x18(%rbp),%rcx
mov    %eax,0x4(%rcx)
mov    -0x80(%rbp),%r9
lea    -0xb4(%rbp),%rcx
sub    $0x10,%rsp
mov    0x68(%r12),%rdi
movzbl 0x1(%rbx),%esi
mov    %rcx,(%rsp)
mov    %r13,%rcx
mov    %r9,%r13
mov    %r14,%rdx
lea    -0xbc(%rbp),%r8
lea    -0xb8(%rbp),%r9
callq  8370 <TIFFYCbCrtoRGB@plt>
add    $0x10,%rsp
mov    -0xb8(%rbp),%eax
shl    $0x8,%eax
or     -0xbc(%rbp),%eax
mov    -0xb4(%rbp),%ecx
shl    $0x10,%ecx
or     %ecx,%eax
or     $0xff000000,%eax
mov    %eax,0x4(%r15)
mov    %r13,%r9
mov    -0x8(%rbp),%r13
mov    -0x78(%rbp),%r8
lea    -0x84(%rbp),%rax
lea    -0xa8(%rbp),%r10
cmp    $0x1,%r9d
jbe    2f1ec <putcontig8bitYCbCr44tile+0xd8c>
cmp    $0x2,%r9d
je     2f2a3 <putcontig8bitYCbCr44tile+0xe43>
cmp    $0x3,%r9d
je     2f249 <putcontig8bitYCbCr44tile+0xde9>
jmp    2f1f6 <putcontig8bitYCbCr44tile+0xd96>
cmp    $0x1,%r9d
je     2f391 <putcontig8bitYCbCr44tile+0xf31>
sub    $0x10,%rsp
mov    0x68(%r12),%rdi
movzbl 0xc(%rbx),%esi
mov    %r10,(%rsp)
mov    %r14,%rdx
mov    %r13,%rcx
lea    -0xb0(%rbp),%r8
lea    -0xac(%rbp),%r9
callq  8370 <TIFFYCbCrtoRGB@plt>
add    $0x10,%rsp
mov    -0xac(%rbp),%eax
shl    $0x8,%eax
or     -0xb0(%rbp),%eax
mov    -0xa8(%rbp),%ecx
shl    $0x10,%ecx
or     %ecx,%eax
or     $0xff000000,%eax
mov    -0x30(%rbp),%rcx
mov    %eax,(%rcx)
sub    $0x10,%rsp
mov    0x68(%r12),%rdi
movzbl 0x8(%rbx),%esi
lea    -0x9c(%rbp),%rax
mov    %rax,(%rsp)
mov    %r14,%rdx
mov    %r13,%rcx
lea    -0xa4(%rbp),%r8
lea    -0xa0(%rbp),%r9
callq  8370 <TIFFYCbCrtoRGB@plt>
add    $0x10,%rsp
mov    -0xa0(%rbp),%eax
shl    $0x8,%eax
or     -0xa4(%rbp),%eax
mov    -0x9c(%rbp),%ecx
shl    $0x10,%ecx
or     %ecx,%eax
or     $0xff000000,%eax
mov    -0x20(%rbp),%rcx
mov    %eax,(%rcx)
sub    $0x10,%rsp
mov    0x68(%r12),%rdi
movzbl 0x4(%rbx),%esi
lea    -0x90(%rbp),%rax
mov    %rax,(%rsp)
mov    %r14,%rdx
mov    %r13,%rcx
lea    -0x98(%rbp),%r8
lea    -0x94(%rbp),%r9
callq  8370 <TIFFYCbCrtoRGB@plt>
add    $0x10,%rsp
mov    -0x94(%rbp),%eax
shl    $0x8,%eax
or     -0x98(%rbp),%eax
mov    -0x90(%rbp),%ecx
shl    $0x10,%ecx
or     %ecx,%eax
or     $0xff000000,%eax
mov    -0x18(%rbp),%r11
mov    %eax,(%r11)
mov    -0x80(%rbp),%r9
mov    -0x78(%rbp),%r8
lea    -0x84(%rbp),%rax
sub    $0x10,%rsp
mov    0x68(%r12),%rdi
movzbl (%rbx),%esi
mov    %rax,(%rsp)
mov    %r13,%rcx
mov    %r9,%r13
mov    %r14,%rdx
mov    %r11,%r14
mov    %r8,%r12
lea    -0x8c(%rbp),%r8
lea    -0x88(%rbp),%r9
callq  8370 <TIFFYCbCrtoRGB@plt>
add    $0x10,%rsp
mov    -0x88(%rbp),%eax
shl    $0x8,%eax
or     -0x8c(%rbp),%eax
mov    -0x84(%rbp),%ecx
shl    $0x10,%ecx
or     %ecx,%eax
or     $0xff000000,%eax
mov    %eax,(%r15)
cmp    $0x3,%r12d
jbe    2e548 <putcontig8bitYCbCr44tile+0xe8>
lea    0x10(%r15),%rax
mov    -0x30(%rbp),%rcx
add    $0x10,%rcx
mov    -0x20(%rbp),%rdx
add    $0x10,%rdx
lea    0x10(%r14),%rsi
lea    -0x4(%r12),%r8d
jmpq   2e566 <putcontig8bitYCbCr44tile+0x106>
mov    -0x18(%rbp),%r11
jmpq   2f30d <putcontig8bitYCbCr44tile+0xead>
nopw   0x0(%rax,%rax,1)

000000000002f3a0 <putcontig8bitYCbCr42tile>:
push   %rbp
mov    %rsp,%rbp
sub    $0x130,%rsp
mov    %r15,-0x58(%rbp)
mov    %r14,-0x50(%rbp)
mov    %r13,-0x48(%rbp)
mov    %r12,-0x40(%rbp)
mov    %rbx,-0x38(%rbp)
mov    %rdi,-0x28(%rbp)
mov    %r8,-0x60(%rbp)
mov    0x20(%rbp),%rbx
movslq 0x10(%rbp),%rcx
mov    %rcx,%rax
sar    %eax
shr    $0x1e,%eax
add    %ecx,%eax
sar    $0x2,%eax
lea    (%rax,%rax,4),%eax
add    %eax,%eax
movslq %eax,%rax
mov    %rax,-0x30(%rbp)
movslq 0x18(%rbp),%rcx
lea    (%r8,%rcx,2),%eax
movslq %eax,%rax
mov    %rax,-0x18(%rbp)
lea    -0x7c(%rbp),%r12
lea    -0x74(%rbp),%rdx
lea    -0xc8(%rbp),%r15
lea    -0xbc(%rbp),%r13
lea    -0x98(%rbp),%r14
lea    -0x8c(%rbp),%r10
lea    -0x80(%rbp),%r11
mov    %r8d,%eax
lea    (%rsi,%rax,4),%rax
lea    (%rax,%rcx,4),%rcx
mov    %r8,%rax
and    $0x3,%eax
test   %eax,%eax
je     2f455 <putcontig8bitYCbCr42tile+0xb5>
mov    %r8,%rax
mov    %r12,%r8
mov    %rdi,%r12
mov    %r13,%rdi
mov    %r9,%r13
mov    %r14,%r9
mov    %rsi,%r14
lea    -0xb0(%rbp),%rsi
jmpq   2f505 <putcontig8bitYCbCr42tile+0x165>
mov    %r9,%rax
and    $0x1,%eax
test   %eax,%eax
je     2f52c <putcontig8bitYCbCr42tile+0x18c>
mov    %r8,%rax
mov    %r12,%r8
mov    %rdi,%r12
mov    %r13,%rdi
mov    %r9,%r13
mov    %r14,%r9
mov    %rsi,%r14
lea    -0xb0(%rbp),%rsi
jmpq   2f505 <putcontig8bitYCbCr42tile+0x165>
mov    %r14d,%eax
lea    (%r15,%rax,4),%rcx
lea    (%r12,%rax,4),%rdx
xor    %eax,%eax
mov    %rcx,-0x10(%rbp)
mov    %rdx,-0x20(%rbp)
add    $0xa,%rbx
mov    -0x28(%rbp),%r12
lea    -0x98(%rbp),%r9
lea    -0xbc(%rbp),%rdi
lea    -0x8c(%rbp),%r10
lea    -0x80(%rbp),%r11
lea    -0xc8(%rbp),%r15
lea    -0x74(%rbp),%rdx
lea    -0x7c(%rbp),%r8
lea    -0xb0(%rbp),%rsi
mov    %rax,-0x68(%rbp)
test   %eax,%eax
jne    2f557 <putcontig8bitYCbCr42tile+0x1b7>
cmp    $0x2,%r13d
jbe    2f57f <putcontig8bitYCbCr42tile+0x1df>
add    $0xfffffffe,%r13d
mov    -0x30(%rbp),%rax
add    %rax,%rbx
mov    -0x10(%rbp),%rcx
mov    -0x18(%rbp),%rax
lea    (%rcx,%rax,4),%r14
mov    -0x20(%rbp),%rcx
lea    (%rcx,%rax,4),%rcx
mov    -0x60(%rbp),%rax
mov    %r13,-0x70(%rbp)
mov    %r14,-0x10(%rbp)
mov    %rcx,-0x20(%rbp)
test   %r13d,%r13d
jne    2f4d0 <putcontig8bitYCbCr42tile+0x130>
mov    -0x38(%rbp),%rbx
mov    -0x40(%rbp),%r12
mov    -0x48(%rbp),%r13
mov    -0x50(%rbp),%r14
mov    -0x58(%rbp),%r15
leaveq 
retq   
shr    $0x2,%r8d
mov    %r8,-0x68(%rbp)
mov    %r9,%r10
mov    %rdi,%r12
mov    %rsi,%r15
lea    -0x130(%rbp),%r8
lea    -0x12c(%rbp),%r9
lea    -0x128(%rbp),%rax
jmpq   2f88e <putcontig8bitYCbCr42tile+0x4ee>
movzbl 0x8(%rbx),%r14d
movzbl 0x9(%rbx),%ecx
mov    %rcx,-0x8(%rbp)
cmp    $0x1,%eax
jbe    2f8b2 <putcontig8bitYCbCr42tile+0x512>
cmp    $0x2,%eax
jne    2fb2a <putcontig8bitYCbCr42tile+0x78a>
mov    -0x10(%rbp),%r15
jmpq   2fa51 <putcontig8bitYCbCr42tile+0x6b1>
mov    -0x38(%rbp),%rbx
mov    -0x40(%rbp),%r12
mov    -0x48(%rbp),%r13
mov    -0x50(%rbp),%r14
mov    -0x58(%rbp),%r15
leaveq 
retq   
add    $0xa,%rbx
mov    -0x28(%rbp),%rax
lea    0x10(%rax),%r15
lea    0x10(%r13),%rax
mov    %rax,-0x20(%rbp)
lea    -0x12c(%rbp),%r9
lea    -0x130(%rbp),%r8
lea    -0x128(%rbp),%rax
mov    %r15,-0x28(%rbp)
sub    $0x10,%rsp
mov    0x68(%r12),%rdi
movzbl (%rbx),%esi
movzbl 0x8(%rbx),%r13d
movzbl 0x9(%rbx),%r14d
mov    %rax,(%rsp)
mov    %r13,%rdx
mov    %r14,%rcx
callq  8370 <TIFFYCbCrtoRGB@plt>
mov    -0x12c(%rbp),%eax
shl    $0x8,%eax
or     -0x130(%rbp),%eax
mov    -0x128(%rbp),%ecx
shl    $0x10,%ecx
or     %ecx,%eax
or     $0xff000000,%eax
mov    %eax,(%r15)
mov    0x68(%r12),%rdi
movzbl 0x1(%rbx),%esi
lea    -0x11c(%rbp),%rax
mov    %rax,(%rsp)
mov    %r13,%rdx
mov    %r14,%rcx
lea    -0x124(%rbp),%r8
lea    -0x120(%rbp),%r9
callq  8370 <TIFFYCbCrtoRGB@plt>
mov    -0x120(%rbp),%eax
shl    $0x8,%eax
or     -0x124(%rbp),%eax
mov    -0x11c(%rbp),%ecx
shl    $0x10,%ecx
or     %ecx,%eax
or     $0xff000000,%eax
mov    %eax,0x4(%r15)
mov    0x68(%r12),%rdi
movzbl 0x2(%rbx),%esi
lea    -0x110(%rbp),%rax
mov    %rax,(%rsp)
mov    %r13,%rdx
mov    %r14,%rcx
lea    -0x118(%rbp),%r8
lea    -0x114(%rbp),%r9
callq  8370 <TIFFYCbCrtoRGB@plt>
mov    -0x114(%rbp),%eax
shl    $0x8,%eax
or     -0x118(%rbp),%eax
mov    -0x110(%rbp),%ecx
shl    $0x10,%ecx
or     %ecx,%eax
or     $0xff000000,%eax
mov    %eax,0x8(%r15)
mov    0x68(%r12),%rdi
movzbl 0x3(%rbx),%esi
lea    -0x104(%rbp),%rax
mov    %rax,(%rsp)
mov    %r13,%rdx
mov    %r14,%rcx
lea    -0x10c(%rbp),%r8
lea    -0x108(%rbp),%r9
callq  8370 <TIFFYCbCrtoRGB@plt>
mov    -0x108(%rbp),%eax
shl    $0x8,%eax
or     -0x10c(%rbp),%eax
mov    -0x104(%rbp),%ecx
shl    $0x10,%ecx
or     %ecx,%eax
or     $0xff000000,%eax
mov    %eax,0xc(%r15)
mov    0x68(%r12),%rdi
movzbl 0x4(%rbx),%esi
lea    -0xf8(%rbp),%rax
mov    %rax,(%rsp)
mov    %r13,%rdx
mov    %r14,%rcx
lea    -0x100(%rbp),%r8
lea    -0xfc(%rbp),%r9
callq  8370 <TIFFYCbCrtoRGB@plt>
mov    -0xfc(%rbp),%eax
shl    $0x8,%eax
or     -0x100(%rbp),%eax
mov    -0xf8(%rbp),%ecx
shl    $0x10,%ecx
or     %ecx,%eax
or     $0xff000000,%eax
mov    -0x20(%rbp),%r15
mov    %eax,(%r15)
mov    0x68(%r12),%rdi
movzbl 0x5(%rbx),%esi
lea    -0xec(%rbp),%rax
mov    %rax,(%rsp)
mov    %r13,%rdx
mov    %r14,%rcx
lea    -0xf4(%rbp),%r8
lea    -0xf0(%rbp),%r9
callq  8370 <TIFFYCbCrtoRGB@plt>
mov    -0xf0(%rbp),%eax
shl    $0x8,%eax
or     -0xf4(%rbp),%eax
mov    -0xec(%rbp),%ecx
shl    $0x10,%ecx
or     %ecx,%eax
or     $0xff000000,%eax
mov    %eax,0x4(%r15)
mov    0x68(%r12),%rdi
movzbl 0x6(%rbx),%esi
lea    -0xe0(%rbp),%rax
mov    %rax,(%rsp)
mov    %r13,%rdx
mov    %r14,%rcx
lea    -0xe8(%rbp),%r8
lea    -0xe4(%rbp),%r9
callq  8370 <TIFFYCbCrtoRGB@plt>
mov    -0xe4(%rbp),%eax
shl    $0x8,%eax
or     -0xe8(%rbp),%eax
mov    -0xe0(%rbp),%ecx
shl    $0x10,%ecx
or     %ecx,%eax
or     $0xff000000,%eax
mov    %eax,0x8(%r15)
mov    0x68(%r12),%rdi
movzbl 0x7(%rbx),%esi
lea    -0xd4(%rbp),%rax
mov    %rax,(%rsp)
mov    %r14,%rcx
mov    %r13,%rdx
mov    %r15,%r13
lea    -0xdc(%rbp),%r8
lea    -0xd8(%rbp),%r9
callq  8370 <TIFFYCbCrtoRGB@plt>
add    $0x10,%rsp
mov    -0xd8(%rbp),%eax
shl    $0x8,%eax
or     -0xdc(%rbp),%eax
mov    -0xd4(%rbp),%ecx
shl    $0x10,%ecx
or     %ecx,%eax
or     $0xff000000,%eax
mov    %eax,0xc(%r13)
mov    -0x70(%rbp),%rax
add    $0xffffffff,%eax
mov    %rax,-0x70(%rbp)
test   %eax,%eax
jne    2f595 <putcontig8bitYCbCr42tile+0x1f5>
mov    -0x60(%rbp),%rax
lea    -0x2(%rax),%r10d
mov    -0x30(%rbp),%rax
lea    0xa(%rbx,%rax,1),%rbx
mov    -0x28(%rbp),%rcx
mov    -0x18(%rbp),%rax
lea    0x10(%rcx,%rax,4),%r15
lea    0x10(%r13,%rax,4),%rcx
lea    -0x12c(%rbp),%r9
lea    -0x130(%rbp),%r8
lea    -0x128(%rbp),%rax
mov    %rcx,-0x20(%rbp)
cmp    $0x1,%r10d
ja     2fb3c <putcontig8bitYCbCr42tile+0x79c>
mov    -0x38(%rbp),%rbx
mov    -0x40(%rbp),%r12
mov    -0x48(%rbp),%r13
mov    -0x50(%rbp),%r14
mov    -0x58(%rbp),%r15
leaveq 
retq   
cmp    $0x1,%eax
je     2fb4b <putcontig8bitYCbCr42tile+0x7ab>
cmp    $0x1,%r13d
je     2f91f <putcontig8bitYCbCr42tile+0x57f>
sub    $0x10,%rsp
mov    0x68(%r12),%rdi
movzbl 0x7(%rbx),%esi
mov    %r15,(%rsp)
mov    %r14,%rdx
mov    %rcx,%r15
lea    -0xd0(%rbp),%r8
lea    -0xcc(%rbp),%r9
callq  8370 <TIFFYCbCrtoRGB@plt>
add    $0x10,%rsp
mov    -0xcc(%rbp),%eax
shl    $0x8,%eax
or     -0xd0(%rbp),%eax
mov    -0xc8(%rbp),%ecx
shl    $0x10,%ecx
or     %ecx,%eax
or     $0xff000000,%eax
mov    -0x20(%rbp),%rcx
mov    %eax,0xc(%rcx)
mov    %r15,%rcx
lea    -0xbc(%rbp),%rdi
sub    $0x10,%rsp
mov    0x68(%r12),%rax
movzbl 0x3(%rbx),%esi
mov    %rdi,(%rsp)
mov    %rax,%rdi
mov    %r14,%rdx
mov    %rcx,%r15
lea    -0xc4(%rbp),%r8
lea    -0xc0(%rbp),%r9
callq  8370 <TIFFYCbCrtoRGB@plt>
add    $0x10,%rsp
mov    -0xc0(%rbp),%eax
shl    $0x8,%eax
or     -0xc4(%rbp),%eax
mov    -0xbc(%rbp),%ecx
shl    $0x10,%ecx
or     %ecx,%eax
or     $0xff000000,%eax
mov    -0x10(%rbp),%rcx
mov    %eax,0xc(%rcx)
mov    %r15,%rax
mov    %rcx,%r15
mov    %rax,%rcx
lea    -0xb0(%rbp),%rsi
cmp    $0x1,%r13d
je     2f9ea <putcontig8bitYCbCr42tile+0x64a>
sub    $0x10,%rsp
mov    0x68(%r12),%rdi
movzbl 0x6(%rbx),%eax
mov    %rsi,(%rsp)
mov    %rax,%rsi
mov    %r14,%rdx
mov    %rcx,%r13
lea    -0xb8(%rbp),%r8
lea    -0xb4(%rbp),%r9
callq  8370 <TIFFYCbCrtoRGB@plt>
add    $0x10,%rsp
mov    -0xb4(%rbp),%eax
shl    $0x8,%eax
or     -0xb8(%rbp),%eax
mov    -0xb0(%rbp),%ecx
shl    $0x10,%ecx
or     %ecx,%eax
or     $0xff000000,%eax
mov    -0x20(%rbp),%rcx
mov    %eax,0x8(%rcx)
mov    %r13,%rcx
mov    -0x70(%rbp),%r13
sub    $0x10,%rsp
mov    0x68(%r12),%rdi
movzbl 0x2(%rbx),%esi
lea    -0xa4(%rbp),%rax
mov    %rax,(%rsp)
mov    %r14,%rdx
lea    -0xac(%rbp),%r8
lea    -0xa8(%rbp),%r9
callq  8370 <TIFFYCbCrtoRGB@plt>
add    $0x10,%rsp
mov    -0xa8(%rbp),%eax
shl    $0x8,%eax
or     -0xac(%rbp),%eax
mov    -0xa4(%rbp),%ecx
shl    $0x10,%ecx
or     %ecx,%eax
or     $0xff000000,%eax
mov    %eax,0x8(%r15)
mov    -0x8(%rbp),%rcx
lea    -0x98(%rbp),%r9
lea    -0x8c(%rbp),%r10
cmp    $0x1,%r13d
je     2fab9 <putcontig8bitYCbCr42tile+0x719>
sub    $0x10,%rsp
mov    0x68(%r12),%rdi
movzbl 0x5(%rbx),%esi
mov    %r9,(%rsp)
mov    %r14,%rdx
mov    %rcx,%r13
lea    -0xa0(%rbp),%r8
lea    -0x9c(%rbp),%r9
callq  8370 <TIFFYCbCrtoRGB@plt>
add    $0x10,%rsp
mov    -0x9c(%rbp),%eax
shl    $0x8,%eax
or     -0xa0(%rbp),%eax
mov    -0x98(%rbp),%ecx
shl    $0x10,%ecx
or     %ecx,%eax
or     $0xff000000,%eax
mov    -0x20(%rbp),%rcx
mov    %eax,0x4(%rcx)
mov    %r13,%rcx
mov    -0x70(%rbp),%r13
lea    -0x8c(%rbp),%r10
sub    $0x10,%rsp
mov    0x68(%r12),%rdi
movzbl 0x1(%rbx),%esi
mov    %r10,(%rsp)
mov    %r14,%rdx
lea    -0x94(%rbp),%r8
lea    -0x90(%rbp),%r9
callq  8370 <TIFFYCbCrtoRGB@plt>
add    $0x10,%rsp
mov    -0x90(%rbp),%eax
shl    $0x8,%eax
or     -0x94(%rbp),%eax
mov    -0x8c(%rbp),%ecx
shl    $0x10,%ecx
or     %ecx,%eax
or     $0xff000000,%eax
mov    %eax,0x4(%r15)
mov    -0x8(%rbp),%rcx
mov    -0x68(%rbp),%rax
lea    -0x80(%rbp),%r11
lea    -0x74(%rbp),%rdx
lea    -0x7c(%rbp),%r8
cmp    $0x1,%r13d
jne    2fb51 <putcontig8bitYCbCr42tile+0x7b1>
mov    -0x20(%rbp),%r10
jmpq   2fbb5 <putcontig8bitYCbCr42tile+0x815>
cmp    $0x3,%eax
jne    2f8bb <putcontig8bitYCbCr42tile+0x51b>
mov    -0x10(%rbp),%r15
jmpq   2f986 <putcontig8bitYCbCr42tile+0x5e6>
mov    %r10,-0x60(%rbp)
pushq  -0x68(%rbp)
popq   -0x70(%rbp)
jmpq   2f5be <putcontig8bitYCbCr42tile+0x21e>
mov    -0x10(%rbp),%r15
jmp    2fb1b <putcontig8bitYCbCr42tile+0x77b>
sub    $0x10,%rsp
mov    0x68(%r12),%rdi
movzbl 0x4(%rbx),%esi
mov    %r11,(%rsp)
mov    %r14,%rdx
mov    %rcx,%r13
lea    -0x88(%rbp),%r8
lea    -0x84(%rbp),%r9
callq  8370 <TIFFYCbCrtoRGB@plt>
add    $0x10,%rsp
mov    -0x84(%rbp),%eax
shl    $0x8,%eax
or     -0x88(%rbp),%eax
mov    -0x80(%rbp),%ecx
shl    $0x10,%ecx
or     %ecx,%eax
or     $0xff000000,%eax
mov    -0x20(%rbp),%r10
mov    %eax,(%r10)
mov    %r13,%rcx
mov    -0x70(%rbp),%r13
mov    -0x68(%rbp),%rax
lea    -0x74(%rbp),%rdx
lea    -0x7c(%rbp),%r8
sub    $0x10,%rsp
mov    0x68(%r12),%rdi
movzbl (%rbx),%esi
mov    %rdx,(%rsp)
mov    %r14,%rdx
mov    %rax,%r14
mov    %r10,%r12
lea    -0x78(%rbp),%r9
callq  8370 <TIFFYCbCrtoRGB@plt>
add    $0x10,%rsp
mov    -0x78(%rbp),%eax
shl    $0x8,%eax
or     -0x7c(%rbp),%eax
mov    -0x74(%rbp),%ecx
shl    $0x10,%ecx
or     %ecx,%eax
or     $0xff000000,%eax
mov    %eax,(%r15)
cmp    $0x3,%r14d
jbe    2f484 <putcontig8bitYCbCr42tile+0xe4>
lea    0x10(%r15),%rcx
lea    0x10(%r12),%rdx
lea    -0x4(%r14),%eax
jmpq   2f491 <putcontig8bitYCbCr42tile+0xf1>

000000000002fc10 <putcontig8bitYCbCr41tile>:
push   %rbp
mov    %rsp,%rbp
sub    $0xc0,%rsp
mov    %r15,-0x48(%rbp)
mov    %r14,-0x40(%rbp)
mov    %r13,-0x38(%rbp)
mov    %r12,-0x30(%rbp)
mov    %rbx,-0x28(%rbp)
mov    %rdi,-0x18(%rbp)
mov    %r8,%rcx
and    $0x3,%ecx
mov    %rcx,-0x58(%rbp)
mov    0x20(%rbp),%rbx
movslq 0x10(%rbp),%rdx
mov    %rdx,%rax
sar    %eax
shr    $0x1e,%eax
add    %edx,%eax
sar    $0x2,%eax
lea    (%rax,%rax,2),%eax
add    %eax,%eax
movslq %eax,%r14
mov    %r14,-0x20(%rbp)
movslq 0x18(%rbp),%rax
mov    %rax,-0x10(%rbp)
mov    %ecx,%r15d
mov    %r15,-0x8(%rbp)
mov    %r8,%r11
shr    $0x2,%r11d
mov    %r11,-0x50(%rbp)
mov    %rsi,%r12
mov    %rax,%rsi
mov    %r9,%rax
mov    %rdi,%r13
lea    -0x6c(%rbp),%r10
lea    -0xbc(%rbp),%r8
lea    -0xb8(%rbp),%r9
lea    -0xb4(%rbp),%rdx
mov    %r11,%rdi
jmpq   2fe2b <putcontig8bitYCbCr41tile+0x21b>
sub    $0x10,%rsp
mov    0x68(%r13),%r10
movzbl (%rbx),%esi
movzbl 0x4(%rbx),%r14d
movzbl 0x5(%rbx),%r15d
mov    %rdx,(%rsp)
mov    %r14,%rdx
mov    %r15,%rcx
mov    %rdi,-0x68(%rbp)
mov    %rax,-0x60(%rbp)
mov    %r10,%rdi
callq  8370 <TIFFYCbCrtoRGB@plt>
mov    -0xb8(%rbp),%eax
shl    $0x8,%eax
or     -0xbc(%rbp),%eax
mov    -0xb4(%rbp),%ecx
shl    $0x10,%ecx
or     %ecx,%eax
or     $0xff000000,%eax
mov    %eax,(%r12)
mov    0x68(%r13),%rdi
movzbl 0x1(%rbx),%esi
lea    -0xa8(%rbp),%rax
mov    %rax,(%rsp)
mov    %r14,%rdx
mov    %r15,%rcx
lea    -0xb0(%rbp),%r8
lea    -0xac(%rbp),%r9
callq  8370 <TIFFYCbCrtoRGB@plt>
mov    -0xac(%rbp),%eax
shl    $0x8,%eax
or     -0xb0(%rbp),%eax
mov    -0xa8(%rbp),%ecx
shl    $0x10,%ecx
or     %ecx,%eax
or     $0xff000000,%eax
mov    %eax,0x4(%r12)
mov    0x68(%r13),%rdi
movzbl 0x2(%rbx),%esi
lea    -0x9c(%rbp),%rax
mov    %rax,(%rsp)
mov    %r14,%rdx
mov    %r15,%rcx
lea    -0xa4(%rbp),%r8
lea    -0xa0(%rbp),%r9
callq  8370 <TIFFYCbCrtoRGB@plt>
mov    -0xa0(%rbp),%eax
shl    $0x8,%eax
or     -0xa4(%rbp),%eax
mov    -0x9c(%rbp),%ecx
shl    $0x10,%ecx
or     %ecx,%eax
or     $0xff000000,%eax
mov    %eax,0x8(%r12)
mov    0x68(%r13),%rdi
movzbl 0x3(%rbx),%esi
lea    -0x90(%rbp),%rax
mov    %rax,(%rsp)
mov    %r15,%rcx
mov    %r14,%rdx
lea    -0x98(%rbp),%r8
lea    -0x94(%rbp),%r9
callq  8370 <TIFFYCbCrtoRGB@plt>
add    $0x10,%rsp
mov    -0x94(%rbp),%eax
shl    $0x8,%eax
or     -0x98(%rbp),%eax
mov    -0x90(%rbp),%ecx
shl    $0x10,%ecx
or     %ecx,%eax
or     $0xff000000,%eax
mov    %eax,0xc(%r12)
add    $0x6,%rbx
add    $0x10,%r12
mov    -0x68(%rbp),%rax
lea    -0x1(%rax),%edi
mov    -0x58(%rbp),%rcx
mov    -0x60(%rbp),%rax
lea    -0xb8(%rbp),%r9
lea    -0xbc(%rbp),%r8
mov    -0x20(%rbp),%r14
lea    -0xb4(%rbp),%rdx
mov    -0x10(%rbp),%rsi
mov    -0x50(%rbp),%r11
mov    -0x8(%rbp),%r15
lea    -0x6c(%rbp),%r10
test   %edi,%edi
jne    2fca5 <putcontig8bitYCbCr41tile+0x95>
test   %ecx,%ecx
je     2ff2d <putcontig8bitYCbCr41tile+0x31d>
cmp    $0x1,%ecx
movzbl 0x4(%rbx),%edi
movzbl 0x5(%rbx),%r9d
jbe    2ff4e <putcontig8bitYCbCr41tile+0x33e>
cmp    $0x2,%ecx
jne    2ff5e <putcontig8bitYCbCr41tile+0x34e>
mov    %rdi,%r14
mov    %r9,%r15
sub    $0x10,%rsp
mov    0x68(%r13),%rdi
movzbl 0x1(%rbx),%esi
lea    -0x78(%rbp),%rcx
mov    %rcx,(%rsp)
mov    %r14,%rdx
mov    %r15,%rcx
lea    -0x80(%rbp),%r8
lea    -0x7c(%rbp),%r9
mov    %rax,-0x68(%rbp)
callq  8370 <TIFFYCbCrtoRGB@plt>
add    $0x10,%rsp
mov    -0x7c(%rbp),%eax
shl    $0x8,%eax
or     -0x80(%rbp),%eax
mov    -0x78(%rbp),%ecx
shl    $0x10,%ecx
or     %ecx,%eax
or     $0xff000000,%eax
mov    %eax,0x4(%r12)
mov    %r15,%rcx
mov    %r14,%rdx
mov    -0x68(%rbp),%rax
mov    -0x20(%rbp),%r14
mov    -0x8(%rbp),%r15
lea    -0x6c(%rbp),%r10
sub    $0x10,%rsp
mov    0x68(%r13),%rdi
movzbl (%rbx),%esi
mov    %r10,(%rsp)
mov    %rax,%r13
lea    -0x74(%rbp),%r8
lea    -0x70(%rbp),%r9
callq  8370 <TIFFYCbCrtoRGB@plt>
add    $0x10,%rsp
mov    -0x70(%rbp),%eax
shl    $0x8,%eax
or     -0x74(%rbp),%eax
mov    -0x6c(%rbp),%ecx
shl    $0x10,%ecx
or     %ecx,%eax
or     $0xff000000,%eax
mov    %eax,(%r12)
mov    %r13,%rax
mov    -0x18(%rbp),%r13
mov    -0x58(%rbp),%rcx
lea    -0xbc(%rbp),%r8
lea    -0xb4(%rbp),%rdx
mov    -0x10(%rbp),%rsi
mov    -0x50(%rbp),%r11
lea    -0x6c(%rbp),%r10
add    $0x6,%rbx
lea    (%r12,%r15,4),%r12
lea    -0xb8(%rbp),%r9
add    $0xffffffff,%eax
test   %eax,%eax
jne    2ffd4 <putcontig8bitYCbCr41tile+0x3c4>
mov    -0x28(%rbp),%rbx
mov    -0x30(%rbp),%r12
mov    -0x38(%rbp),%r13
mov    -0x40(%rbp),%r14
mov    -0x48(%rbp),%r15
leaveq 
retq   
cmp    $0x1,%ecx
jne    2ff1e <putcontig8bitYCbCr41tile+0x30e>
mov    %r9,%rcx
mov    %rdi,%rdx
jmpq   2febc <putcontig8bitYCbCr41tile+0x2ac>
cmp    $0x3,%ecx
jne    2ff1e <putcontig8bitYCbCr41tile+0x30e>
sub    $0x10,%rsp
mov    0x68(%r13),%r11
movzbl 0x2(%rbx),%esi
lea    -0x84(%rbp),%rcx
mov    %rcx,(%rsp)
mov    %rdi,%rdx
mov    %r9,%rcx
lea    -0x8c(%rbp),%r8
lea    -0x88(%rbp),%r10
mov    %rax,-0x68(%rbp)
mov    %rdi,%r14
mov    %r11,%rdi
mov    %r9,%r15
mov    %r10,%r9
callq  8370 <TIFFYCbCrtoRGB@plt>
add    $0x10,%rsp
mov    -0x88(%rbp),%eax
shl    $0x8,%eax
or     -0x8c(%rbp),%eax
mov    -0x84(%rbp),%ecx
shl    $0x10,%ecx
or     %ecx,%eax
or     $0xff000000,%eax
mov    %eax,0x8(%r12)
mov    -0x68(%rbp),%rax
jmpq   2fe5c <putcontig8bitYCbCr41tile+0x24c>
add    %r14,%rbx
lea    (%r12,%rsi,4),%r12
mov    %r11,%rdi
jmpq   2fe2b <putcontig8bitYCbCr41tile+0x21b>
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

000000000002fff0 <putcontig8bitYCbCr22tile>:
push   %rbp
mov    %rsp,%rbp
sub    $0xd0,%rsp
mov    %r15,-0x40(%rbp)
mov    %r14,-0x38(%rbp)
mov    %r13,-0x30(%rbp)
mov    %r12,-0x28(%rbp)
mov    %rbx,-0x20(%rbp)
mov    %r8,-0x50(%rbp)
mov    0x20(%rbp),%r12
movslq 0x10(%rbp),%rcx
mov    %rcx,%rax
shr    $0x1f,%eax
add    %ecx,%eax
sar    %eax
lea    (%rax,%rax,2),%eax
add    %eax,%eax
movslq %eax,%rax
mov    %rax,-0x18(%rbp)
movslq 0x18(%rbp),%rdx
lea    (%r8,%rdx,2),%eax
movslq %eax,%rax
mov    %rax,-0x10(%rbp)
lea    -0xc4(%rbp),%rbx
lea    -0xc0(%rbp),%r10
lea    -0xbc(%rbp),%rcx
mov    %r8d,%eax
lea    (%rsi,%rax,4),%rax
lea    (%rax,%rdx,4),%rax
mov    %r9,%r11
mov    %r10,%r9
mov    %r8,%r10
mov    %rbx,%r8
mov    %rsi,%rbx
mov    %rdi,%r13
jmpq   302e3 <putcontig8bitYCbCr22tile+0x2f3>
mov    0x68(%r13),%rdi
movzbl (%r12),%esi
movzbl 0x4(%r12),%r14d
mov    %r10,-0x58(%rbp)
movzbl 0x5(%r12),%r15d
mov    %rcx,(%rsp)
mov    %r14,%rdx
mov    %r15,%rcx
mov    %rax,-0x8(%rbp)
callq  8370 <TIFFYCbCrtoRGB@plt>
mov    -0xc0(%rbp),%eax
shl    $0x8,%eax
or     -0xc4(%rbp),%eax
mov    -0xbc(%rbp),%ecx
shl    $0x10,%ecx
or     %ecx,%eax
or     $0xff000000,%eax
mov    %eax,(%rbx)
mov    0x68(%r13),%rdi
movzbl 0x1(%r12),%esi
lea    -0xb0(%rbp),%rax
mov    %rax,(%rsp)
mov    %r14,%rdx
mov    %r15,%rcx
lea    -0xb8(%rbp),%r8
lea    -0xb4(%rbp),%r9
callq  8370 <TIFFYCbCrtoRGB@plt>
mov    -0xb4(%rbp),%eax
shl    $0x8,%eax
or     -0xb8(%rbp),%eax
mov    -0xb0(%rbp),%ecx
shl    $0x10,%ecx
or     %ecx,%eax
or     $0xff000000,%eax
mov    %eax,0x4(%rbx)
mov    0x68(%r13),%rdi
movzbl 0x2(%r12),%esi
lea    -0xa4(%rbp),%rax
mov    %rax,(%rsp)
mov    %r14,%rdx
mov    %r15,%rcx
lea    -0xac(%rbp),%r8
lea    -0xa8(%rbp),%r9
callq  8370 <TIFFYCbCrtoRGB@plt>
mov    -0xa8(%rbp),%eax
shl    $0x8,%eax
or     -0xac(%rbp),%eax
mov    -0xa4(%rbp),%ecx
shl    $0x10,%ecx
or     %ecx,%eax
or     $0xff000000,%eax
mov    -0x8(%rbp),%rcx
mov    %eax,(%rcx)
mov    0x68(%r13),%rdi
movzbl 0x3(%r12),%esi
lea    -0x98(%rbp),%rax
mov    %rax,(%rsp)
mov    %r14,%rdx
mov    %rcx,%r14
mov    %r15,%rcx
lea    -0xa0(%rbp),%r8
lea    -0x9c(%rbp),%r9
callq  8370 <TIFFYCbCrtoRGB@plt>
mov    -0x9c(%rbp),%eax
shl    $0x8,%eax
or     -0xa0(%rbp),%eax
mov    -0x98(%rbp),%ecx
shl    $0x10,%ecx
or     %ecx,%eax
or     $0xff000000,%eax
mov    %eax,0x4(%r14)
add    $0x6,%r12
add    $0x8,%rbx
lea    0x8(%r14),%rax
mov    -0x58(%rbp),%rcx
lea    -0x2(%rcx),%r10d
lea    -0xc0(%rbp),%r9
lea    -0xc4(%rbp),%r8
lea    -0xbc(%rbp),%rcx
cmp    $0x1,%r10d
ja     30077 <putcontig8bitYCbCr22tile+0x87>
cmp    $0x1,%r10d
jne    302c4 <putcontig8bitYCbCr22tile+0x2d4>
mov    0x68(%r13),%rdi
movzbl (%r12),%esi
movzbl 0x4(%r12),%r14d
movzbl 0x5(%r12),%r15d
lea    -0x8c(%rbp),%rcx
mov    %rcx,(%rsp)
mov    %r14,%rdx
mov    %r15,%rcx
lea    -0x94(%rbp),%r8
lea    -0x90(%rbp),%r9
mov    %rax,-0x58(%rbp)
callq  8370 <TIFFYCbCrtoRGB@plt>
mov    -0x90(%rbp),%eax
shl    $0x8,%eax
or     -0x94(%rbp),%eax
mov    -0x8c(%rbp),%ecx
shl    $0x10,%ecx
or     %ecx,%eax
or     $0xff000000,%eax
mov    %eax,(%rbx)
mov    0x68(%r13),%rdi
movzbl 0x2(%r12),%esi
lea    -0x80(%rbp),%rax
mov    %rax,(%rsp)
mov    %r15,%rcx
mov    %r14,%rdx
lea    -0x88(%rbp),%r8
lea    -0x84(%rbp),%r9
callq  8370 <TIFFYCbCrtoRGB@plt>
mov    -0x84(%rbp),%eax
shl    $0x8,%eax
or     -0x88(%rbp),%eax
mov    -0x80(%rbp),%ecx
shl    $0x10,%ecx
or     %ecx,%eax
or     $0xff000000,%eax
mov    -0x58(%rbp),%rcx
mov    %eax,(%rcx)
add    $0x6,%r12
add    $0x4,%rbx
lea    0x4(%rcx),%rax
lea    -0xc0(%rbp),%r9
lea    -0xc4(%rbp),%r8
lea    -0xbc(%rbp),%rcx
mov    -0x18(%rbp),%rdx
add    %rdx,%r12
mov    -0x10(%rbp),%rsi
lea    (%rbx,%rsi,4),%rbx
mov    -0x48(%rbp),%rdx
lea    -0x2(%rdx),%r11d
lea    (%rax,%rsi,4),%rax
mov    -0x50(%rbp),%r10
cmp    $0x1,%r11d
ja     30305 <putcontig8bitYCbCr22tile+0x315>
cmp    $0x1,%r11d
je     3030e <putcontig8bitYCbCr22tile+0x31e>
mov    -0x20(%rbp),%rbx
mov    -0x28(%rbp),%r12
mov    -0x30(%rbp),%r13
mov    -0x38(%rbp),%r14
mov    -0x40(%rbp),%r15
leaveq 
retq   
mov    %r11,-0x48(%rbp)
jmpq   301e4 <putcontig8bitYCbCr22tile+0x1f4>
lea    -0x7c(%rbp),%r8
lea    -0x78(%rbp),%r9
lea    -0x74(%rbp),%rax
jmpq   303b9 <putcontig8bitYCbCr22tile+0x3c9>
mov    0x68(%r13),%rdi
movzbl (%r12),%esi
movzbl 0x4(%r12),%r14d
movzbl 0x5(%r12),%r15d
mov    %rax,(%rsp)
mov    %r14,%rdx
mov    %r15,%rcx
mov    %r10,-0x58(%rbp)
callq  8370 <TIFFYCbCrtoRGB@plt>
mov    -0x78(%rbp),%eax
shl    $0x8,%eax
or     -0x7c(%rbp),%eax
mov    -0x74(%rbp),%ecx
shl    $0x10,%ecx
or     %ecx,%eax
or     $0xff000000,%eax
mov    %eax,(%rbx)
mov    0x68(%r13),%rdi
movzbl 0x1(%r12),%esi
lea    -0x68(%rbp),%rax
mov    %rax,(%rsp)
mov    %r15,%rcx
mov    %r14,%rdx
lea    -0x70(%rbp),%r8
lea    -0x6c(%rbp),%r9
callq  8370 <TIFFYCbCrtoRGB@plt>
mov    -0x6c(%rbp),%eax
shl    $0x8,%eax
or     -0x70(%rbp),%eax
mov    -0x68(%rbp),%ecx
shl    $0x10,%ecx
or     %ecx,%eax
or     $0xff000000,%eax
mov    %eax,0x4(%rbx)
add    $0x6,%r12
add    $0x8,%rbx
mov    -0x58(%rbp),%rax
lea    -0x2(%rax),%r10d
lea    -0x78(%rbp),%r9
lea    -0x7c(%rbp),%r8
lea    -0x74(%rbp),%rax
cmp    $0x1,%r10d
ja     3031f <putcontig8bitYCbCr22tile+0x32f>
cmp    $0x1,%r10d
je     303df <putcontig8bitYCbCr22tile+0x3ef>
mov    -0x20(%rbp),%rbx
mov    -0x28(%rbp),%r12
mov    -0x30(%rbp),%r13
mov    -0x38(%rbp),%r14
mov    -0x40(%rbp),%r15
leaveq 
retq   
lea    -0x5c(%rbp),%rax
mov    0x68(%r13),%rdi
movzbl (%r12),%esi
movzbl 0x4(%r12),%edx
movzbl 0x5(%r12),%ecx
mov    %rax,(%rsp)
lea    -0x64(%rbp),%r8
lea    -0x60(%rbp),%r9
callq  8370 <TIFFYCbCrtoRGB@plt>
mov    -0x60(%rbp),%eax
shl    $0x8,%eax
or     -0x64(%rbp),%eax
mov    -0x5c(%rbp),%ecx
shl    $0x10,%ecx
or     %ecx,%eax
or     $0xff000000,%eax
mov    %eax,(%rbx)
mov    -0x20(%rbp),%rbx
mov    -0x28(%rbp),%r12
mov    -0x30(%rbp),%r13
mov    -0x38(%rbp),%r14
mov    -0x40(%rbp),%r15
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

0000000000030440 <putcontig8bitYCbCr21tile>:
push   %rbp
mov    %rsp,%rbp
sub    $0x90,%rsp
mov    %r15,-0x40(%rbp)
mov    %r14,-0x38(%rbp)
mov    %r13,-0x30(%rbp)
mov    %r12,-0x28(%rbp)
mov    %rbx,-0x20(%rbp)
mov    %rdi,-0x10(%rbp)
mov    %r8,%rcx
and    $0x1,%ecx
mov    %rcx,-0x50(%rbp)
mov    0x20(%rbp),%rbx
movslq 0x10(%rbp),%rdx
mov    %rdx,%rax
shr    $0x1f,%eax
add    %edx,%eax
and    $0x7ffffffe,%eax
add    %eax,%eax
movslq %eax,%r14
mov    %r14,-0x18(%rbp)
movslq 0x18(%rbp),%r15
mov    %r15,-0x8(%rbp)
mov    %r8,%r13
shr    %r13d
mov    %r9,%r11
mov    %rsi,%r12
mov    %r13,%r9
mov    %rdi,%r13
mov    %r9,%rdi
mov    %rdi,-0x48(%rbp)
lea    -0x6c(%rbp),%r10
lea    -0x68(%rbp),%rax
lea    -0x64(%rbp),%rsi
lea    -0x84(%rbp),%r8
lea    -0x7c(%rbp),%rdx
lea    -0x80(%rbp),%r9
jmpq   3058c <putcontig8bitYCbCr21tile+0x14c>
mov    0x68(%r13),%rax
movzbl (%rbx),%esi
movzbl 0x2(%rbx),%r14d
movzbl 0x3(%rbx),%r15d
mov    %rdx,(%rsp)
mov    %r14,%rdx
mov    %r15,%rcx
mov    %rdi,-0x60(%rbp)
mov    %r11,-0x58(%rbp)
mov    %rax,%rdi
callq  8370 <TIFFYCbCrtoRGB@plt>
mov    -0x80(%rbp),%eax
shl    $0x8,%eax
or     -0x84(%rbp),%eax
mov    -0x7c(%rbp),%ecx
shl    $0x10,%ecx
or     %ecx,%eax
or     $0xff000000,%eax
mov    %eax,(%r12)
mov    0x68(%r13),%rdi
movzbl 0x1(%rbx),%esi
lea    -0x70(%rbp),%rax
mov    %rax,(%rsp)
mov    %r15,%rcx
mov    %r14,%rdx
lea    -0x78(%rbp),%r8
lea    -0x74(%rbp),%r9
callq  8370 <TIFFYCbCrtoRGB@plt>
mov    -0x74(%rbp),%eax
shl    $0x8,%eax
or     -0x78(%rbp),%eax
mov    -0x70(%rbp),%ecx
shl    $0x10,%ecx
or     %ecx,%eax
or     $0xff000000,%eax
mov    %eax,0x4(%r12)
add    $0x4,%rbx
add    $0x8,%r12
mov    -0x60(%rbp),%rax
lea    -0x1(%rax),%edi
mov    -0x50(%rbp),%rcx
mov    -0x58(%rbp),%r11
lea    -0x84(%rbp),%r8
mov    -0x18(%rbp),%r14
lea    -0x7c(%rbp),%rdx
mov    -0x8(%rbp),%r15
lea    -0x64(%rbp),%rsi
lea    -0x6c(%rbp),%r10
lea    -0x68(%rbp),%rax
lea    -0x80(%rbp),%r9
test   %edi,%edi
jne    304cc <putcontig8bitYCbCr21tile+0x8c>
test   %ecx,%ecx
je     30605 <putcontig8bitYCbCr21tile+0x1c5>
mov    0x68(%r13),%rdi
movzbl (%rbx),%r8d
movzbl 0x2(%rbx),%edx
movzbl 0x3(%rbx),%ecx
mov    %rsi,(%rsp)
mov    %r8,%rsi
mov    %r10,%r8
mov    %rax,%r9
mov    %r11,%r13
callq  8370 <TIFFYCbCrtoRGB@plt>
mov    -0x68(%rbp),%eax
shl    $0x8,%eax
or     -0x6c(%rbp),%eax
mov    -0x64(%rbp),%ecx
shl    $0x10,%ecx
or     %ecx,%eax
or     $0xff000000,%eax
mov    %eax,(%r12)
add    $0x4,%rbx
add    $0x4,%r12
mov    %r13,%r11
mov    -0x10(%rbp),%r13
mov    -0x50(%rbp),%rcx
lea    -0x84(%rbp),%r8
lea    -0x7c(%rbp),%rdx
lea    -0x64(%rbp),%rsi
lea    -0x6c(%rbp),%r10
lea    -0x68(%rbp),%rax
lea    -0x80(%rbp),%r9
add    $0xffffffff,%r11d
test   %r11d,%r11d
jne    30624 <putcontig8bitYCbCr21tile+0x1e4>
mov    -0x20(%rbp),%rbx
mov    -0x28(%rbp),%r12
mov    -0x30(%rbp),%r13
mov    -0x38(%rbp),%r14
mov    -0x40(%rbp),%r15
leaveq 
retq   
add    %r14,%rbx
lea    (%r12,%r15,4),%r12
mov    -0x48(%rbp),%rdi
jmpq   3058c <putcontig8bitYCbCr21tile+0x14c>
data16 nopw %cs:0x0(%rax,%rax,1)
nop

0000000000030640 <putcontig8bitYCbCr12tile>:
push   %rbp
mov    %rsp,%rbp
sub    $0x80,%rsp
mov    %r15,-0x40(%rbp)
mov    %r14,-0x38(%rbp)
mov    %r13,-0x30(%rbp)
mov    %r12,-0x28(%rbp)
mov    %rbx,-0x20(%rbp)
mov    %r8,-0x58(%rbp)
mov    0x20(%rbp),%rbx
movslq 0x10(%rbp),%rax
shl    $0x2,%eax
movslq %eax,%rax
mov    %rax,-0x18(%rbp)
movslq 0x18(%rbp),%rdx
lea    (%r8,%rdx,2),%eax
movslq %eax,%rax
mov    %rax,-0x10(%rbp)
lea    -0x7c(%rbp),%r10
lea    -0x78(%rbp),%r11
lea    -0x74(%rbp),%rax
mov    %r8d,%ecx
lea    (%rsi,%rcx,4),%rcx
lea    (%rcx,%rdx,4),%rcx
mov    %rdi,%r12
mov    %rsi,%r13
mov    %r8,%r14
mov    %r10,%r8
mov    %r9,%r10
mov    %r11,%r9
jmpq   30795 <putcontig8bitYCbCr12tile+0x155>
add    $0x4,%rbx
add    $0x4,%r13
add    $0x4,%rcx
lea    -0x78(%rbp),%r9
lea    -0x7c(%rbp),%r8
lea    -0x74(%rbp),%rax
mov    %rcx,-0x8(%rbp)
mov    %r14,-0x50(%rbp)
sub    $0x10,%rsp
mov    0x68(%r12),%rdi
movzbl (%rbx),%esi
movzbl 0x2(%rbx),%r14d
movzbl 0x3(%rbx),%r15d
mov    %rax,(%rsp)
mov    %r14,%rdx
mov    %r15,%rcx
callq  8370 <TIFFYCbCrtoRGB@plt>
mov    -0x78(%rbp),%eax
shl    $0x8,%eax
or     -0x7c(%rbp),%eax
mov    -0x74(%rbp),%ecx
shl    $0x10,%ecx
or     %ecx,%eax
or     $0xff000000,%eax
mov    %eax,0x0(%r13)
mov    0x68(%r12),%rdi
movzbl 0x1(%rbx),%esi
lea    -0x68(%rbp),%rax
mov    %rax,(%rsp)
mov    %r15,%rcx
mov    %r14,%rdx
lea    -0x70(%rbp),%r8
lea    -0x6c(%rbp),%r9
callq  8370 <TIFFYCbCrtoRGB@plt>
add    $0x10,%rsp
mov    -0x6c(%rbp),%eax
shl    $0x8,%eax
or     -0x70(%rbp),%eax
mov    -0x68(%rbp),%ecx
shl    $0x10,%ecx
or     %ecx,%eax
or     $0xff000000,%eax
mov    -0x8(%rbp),%rcx
mov    %eax,(%rcx)
mov    -0x50(%rbp),%rax
lea    -0x1(%rax),%r14d
test   %r14d,%r14d
jne    306b2 <putcontig8bitYCbCr12tile+0x72>
mov    -0x18(%rbp),%rax
lea    0x4(%rax,%rbx,1),%rbx
mov    -0x48(%rbp),%rax
lea    -0x2(%rax),%r10d
mov    -0x10(%rbp),%rax
lea    0x4(%r13,%rax,4),%r13
lea    0x4(%rcx,%rax,4),%rcx
mov    -0x58(%rbp),%r14
lea    -0x78(%rbp),%r9
lea    -0x7c(%rbp),%r8
lea    -0x74(%rbp),%rax
cmp    $0x1,%r10d
ja     307b7 <putcontig8bitYCbCr12tile+0x177>
cmp    $0x1,%r10d
je     307c0 <putcontig8bitYCbCr12tile+0x180>
mov    -0x20(%rbp),%rbx
mov    -0x28(%rbp),%r12
mov    -0x30(%rbp),%r13
mov    -0x38(%rbp),%r14
mov    -0x40(%rbp),%r15
leaveq 
retq   
mov    %r10,-0x48(%rbp)
jmpq   306ca <putcontig8bitYCbCr12tile+0x8a>
lea    -0x64(%rbp),%r8
lea    -0x60(%rbp),%r9
lea    -0x5c(%rbp),%r15
jmp    307de <putcontig8bitYCbCr12tile+0x19e>
add    $0x4,%rbx
add    $0x4,%r13
lea    -0x60(%rbp),%r9
lea    -0x64(%rbp),%r8
sub    $0x10,%rsp
mov    0x68(%r12),%rdi
movzbl (%rbx),%esi
movzbl 0x2(%rbx),%edx
movzbl 0x3(%rbx),%ecx
mov    %r15,(%rsp)
callq  8370 <TIFFYCbCrtoRGB@plt>
add    $0x10,%rsp
mov    -0x60(%rbp),%eax
shl    $0x8,%eax
or     -0x64(%rbp),%eax
mov    -0x5c(%rbp),%ecx
shl    $0x10,%ecx
or     %ecx,%eax
or     $0xff000000,%eax
mov    %eax,0x0(%r13)
add    $0xffffffff,%r14d
test   %r14d,%r14d
jne    307ce <putcontig8bitYCbCr12tile+0x18e>
mov    -0x20(%rbp),%rbx
mov    -0x28(%rbp),%r12
mov    -0x30(%rbp),%r13
mov    -0x38(%rbp),%r14
mov    -0x40(%rbp),%r15
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

0000000000030840 <putcontig8bitYCbCr11tile>:
push   %rbp
mov    %rsp,%rbp
sub    $0x50,%rsp
mov    %r15,-0x38(%rbp)
mov    %r8,-0x40(%rbp)
mov    %rdi,-0x10(%rbp)
mov    %rbx,-0x18(%rbp)
mov    %r12,-0x20(%rbp)
mov    %r13,-0x28(%rbp)
mov    %r14,-0x30(%rbp)
mov    0x20(%rbp),%rbx
movslq 0x10(%rbp),%rax
lea    (%rax,%rax,2),%eax
movslq %eax,%r13
movslq 0x18(%rbp),%rax
mov    %rax,-0x8(%rbp)
mov    %r9,%r12
mov    %rsi,%r14
mov    %r8,%r15
lea    -0x4c(%rbp),%r8
lea    -0x44(%rbp),%rax
jmp    308a1 <putcontig8bitYCbCr11tile+0x61>
add    $0x3,%rbx
add    $0x4,%r14
mov    -0x10(%rbp),%rdi
lea    -0x44(%rbp),%rax
lea    -0x4c(%rbp),%r8
sub    $0x10,%rsp
movzbl (%rbx),%esi
movzbl 0x1(%rbx),%edx
movzbl 0x2(%rbx),%ecx
mov    0x68(%rdi),%rdi
mov    %rax,(%rsp)
lea    -0x48(%rbp),%r9
callq  8370 <TIFFYCbCrtoRGB@plt>
add    $0x10,%rsp
mov    -0x48(%rbp),%eax
shl    $0x8,%eax
or     -0x4c(%rbp),%eax
mov    -0x44(%rbp),%ecx
shl    $0x10,%ecx
or     %ecx,%eax
or     $0xff000000,%eax
mov    %eax,(%r14)
add    $0xffffffff,%r15d
test   %r15d,%r15d
jne    3088d <putcontig8bitYCbCr11tile+0x4d>
add    $0xffffffff,%r12d
test   %r12d,%r12d
jne    30906 <putcontig8bitYCbCr11tile+0xc6>
mov    -0x30(%rbp),%r14
mov    -0x28(%rbp),%r13
mov    -0x20(%rbp),%r12
mov    -0x18(%rbp),%rbx
mov    -0x38(%rbp),%r15
leaveq 
retq   
lea    0x3(%rbx,%r13,1),%rbx
mov    -0x8(%rbp),%rax
lea    0x4(%r14,%rax,4),%r14
mov    -0x10(%rbp),%rdi
mov    -0x40(%rbp),%r15
lea    -0x44(%rbp),%rax
lea    -0x4c(%rbp),%r8
jmpq   308a1 <putcontig8bitYCbCr11tile+0x61>
nopl   0x0(%rax)

0000000000030930 <putseparate8bitYCbCr11tile>:
push   %rbp
mov    %rsp,%rbp
sub    $0x60,%rsp
mov    %r15,-0x40(%rbp)
mov    %rdi,-0x10(%rbp)
mov    %rbx,-0x20(%rbp)
mov    %r12,-0x28(%rbp)
mov    %r13,-0x30(%rbp)
mov    %r14,-0x38(%rbp)
mov    %r8,-0x50(%rbp)
mov    0x20(%rbp),%r15
movslq 0x10(%rbp),%rax
mov    %rax,-0x18(%rbp)
mov    0x28(%rbp),%rbx
mov    0x30(%rbp),%r13
movslq 0x18(%rbp),%rax
mov    %rax,-0x8(%rbp)
mov    %r9,%r10
mov    %rsi,%r12
mov    %r8,%r14
lea    -0x5c(%rbp),%r8
lea    -0x58(%rbp),%r9
lea    -0x54(%rbp),%rax
jmpq   30a26 <putseparate8bitYCbCr11tile+0xf6>
add    $0x1,%r15
add    $0x1,%rbx
add    $0x1,%r13
add    $0x4,%r12
lea    -0x5c(%rbp),%r8
lea    -0x54(%rbp),%rax
mov    -0x10(%rbp),%rdi
lea    -0x58(%rbp),%r9
sub    $0x10,%rsp
mov    0x68(%rdi),%rdi
movzbl (%r15),%esi
movzbl (%rbx),%edx
movzbl 0x0(%r13),%ecx
mov    %rax,(%rsp)
callq  8370 <TIFFYCbCrtoRGB@plt>
add    $0x10,%rsp
mov    -0x58(%rbp),%eax
shl    $0x8,%eax
or     -0x5c(%rbp),%eax
mov    -0x54(%rbp),%ecx
shl    $0x10,%ecx
or     %ecx,%eax
or     $0xff000000,%eax
mov    %eax,(%r12)
add    $0xffffffff,%r14d
test   %r14d,%r14d
jne    3098a <putseparate8bitYCbCr11tile+0x5a>
mov    -0x48(%rbp),%rax
lea    -0x1(%rax),%r10d
mov    -0x18(%rbp),%rax
lea    0x1(%rax,%r15,1),%r15
lea    0x1(%rax,%rbx,1),%rbx
lea    0x1(%r13,%rax,1),%r13
mov    -0x8(%rbp),%rax
lea    0x4(%r12,%rax,4),%r12
mov    -0x50(%rbp),%r14
lea    -0x5c(%rbp),%r8
lea    -0x54(%rbp),%rax
mov    -0x10(%rbp),%rdi
lea    -0x58(%rbp),%r9
test   %r10d,%r10d
jne    30a41 <putseparate8bitYCbCr11tile+0x111>
mov    -0x38(%rbp),%r14
mov    -0x30(%rbp),%r13
mov    -0x28(%rbp),%r12
mov    -0x20(%rbp),%rbx
mov    -0x40(%rbp),%r15
leaveq 
retq   
mov    %r10,-0x48(%rbp)
jmpq   309aa <putseparate8bitYCbCr11tile+0x7a>
nopw   0x0(%rax,%rax,1)

0000000000030a50 <isInRefBlackWhiteRange>:
push   %rbp
mov    %rsp,%rbp
xor    %eax,%eax
movss  0x3edfa(%rip),%xmm1        # 6f858 <module.62+0x126>
ucomiss %xmm1,%xmm0
ja     30a65 <isInRefBlackWhiteRange+0x15>
leaveq 
retq   
movss  0x3ede7(%rip),%xmm1        # 6f854 <module.62+0x122>
ucomiss %xmm1,%xmm0
jp     30a7b <isInRefBlackWhiteRange+0x2b>
jae    30a7b <isInRefBlackWhiteRange+0x2b>
mov    $0x1,%eax
leaveq 
retq   
leaveq 
retq   
nopl   (%rax)

0000000000030a80 <initYCbCrConversion>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    %r15,-0x10(%rbp)
mov    0x68(%rdi),%rax
test   %rax,%rax
je     30b49 <initYCbCrConversion+0xc9>
mov    %rdi,%r15
xor    %eax,%eax
mov    (%r15),%rdi
mov    $0x211,%esi
lea    -0x28(%rbp),%rdx
callq  8390 <TIFFGetFieldDefaulted@plt>
mov    (%r15),%rdi
mov    $0x214,%esi
lea    -0x20(%rbp),%rdx
xor    %eax,%eax
callq  8390 <TIFFGetFieldDefaulted@plt>
mov    -0x28(%rbp),%rax
movss  (%rax),%xmm0
ucomiss %xmm0,%xmm0
jp     30b8a <initYCbCrConversion+0x10a>
movss  0x4(%rax),%xmm1
ucomiss %xmm1,%xmm1
jp     30b8a <initYCbCrConversion+0x10a>
xorpd  %xmm0,%xmm0
ucomiss %xmm0,%xmm1
jp     30af0 <initYCbCrConversion+0x70>
je     30b8a <initYCbCrConversion+0x10a>
movss  0x8(%rax),%xmm0
ucomiss %xmm0,%xmm0
jp     30b8a <initYCbCrConversion+0x10a>
mov    -0x20(%rbp),%rcx
movss  (%rcx),%xmm0
mov    %r14,-0x8(%rbp)
mov    %rax,-0x18(%rbp)
mov    %rcx,%r14
callq  30a50 <isInRefBlackWhiteRange>
test   %eax,%eax
jne    30bb1 <initYCbCrConversion+0x131>
xor    %eax,%eax
mov    (%r15),%rcx
mov    0x3b8(%rcx),%rdi
lea    0x3ebd6(%rip),%rdx        # 6f707 <module.58+0x66>
lea    0x3eb69(%rip),%rsi        # 6f6a1 <module.58>
callq  8a00 <TIFFErrorExt@plt>
mov    -0x8(%rbp),%r14
xor    %eax,%eax
mov    -0x10(%rbp),%r15
leaveq 
retq   
mov    %rdi,%r15
mov    $0x1830,%edi
callq  8440 <_TIFFmalloc@plt>
mov    %rax,0x68(%r15)
test   %rax,%rax
jne    30a9c <initYCbCrConversion+0x1c>
xor    %eax,%eax
mov    (%r15),%rcx
mov    0x3b8(%rcx),%rdi
lea    0x3eb3f(%rip),%rdx        # 6f6b5 <module.58+0x14>
lea    0x3eb24(%rip),%rsi        # 6f6a1 <module.58>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x10(%rbp),%r15
leaveq 
retq   
xor    %eax,%eax
mov    (%r15),%rcx
mov    0x3b8(%rcx),%rdi
lea    0x3eb41(%rip),%rdx        # 6f6de <module.58+0x3d>
lea    0x3eafd(%rip),%rsi        # 6f6a1 <module.58>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x10(%rbp),%r15
leaveq 
retq   
movss  0x4(%r14),%xmm0
callq  30a50 <isInRefBlackWhiteRange>
test   %eax,%eax
je     30b1e <initYCbCrConversion+0x9e>
movss  0x8(%r14),%xmm0
callq  30a50 <isInRefBlackWhiteRange>
test   %eax,%eax
je     30b1e <initYCbCrConversion+0x9e>
movss  0xc(%r14),%xmm0
callq  30a50 <isInRefBlackWhiteRange>
test   %eax,%eax
je     30b1e <initYCbCrConversion+0x9e>
movss  0x10(%r14),%xmm0
callq  30a50 <isInRefBlackWhiteRange>
test   %eax,%eax
je     30b1e <initYCbCrConversion+0x9e>
movss  0x14(%r14),%xmm0
callq  30a50 <isInRefBlackWhiteRange>
test   %eax,%eax
je     30b1e <initYCbCrConversion+0x9e>
mov    0x68(%r15),%rdi
mov    %r14,%rdx
mov    -0x18(%rbp),%rsi
callq  8980 <TIFFYCbCrToRGBInit@plt>
test   %eax,%eax
jns    30c30 <initYCbCrConversion+0x1b0>
mov    -0x8(%rbp),%r14
xor    %eax,%eax
mov    -0x10(%rbp),%r15
leaveq 
retq   
mov    $0x1,%eax
mov    -0x8(%rbp),%r14
mov    -0x10(%rbp),%r15
leaveq 
retq   
nop

0000000000030c40 <initCIELabConversion>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %r15,-0x8(%rbp)
mov    %rdi,%r15
xor    %eax,%eax
mov    (%r15),%rdi
mov    $0x13e,%esi
lea    -0x20(%rbp),%rdx
callq  8390 <TIFFGetFieldDefaulted@plt>
lea    0x3eac9(%rip),%rsi        # 6f732 <module.62>
mov    -0x20(%rbp),%rax
movss  0x4(%rax),%xmm1
xorpd  %xmm0,%xmm0
ucomiss %xmm0,%xmm1
jp     30c7d <initCIELabConversion+0x3d>
je     30cfa <initCIELabConversion+0xba>
mov    0x70(%r15),%rax
test   %rax,%rax
je     30d1a <initCIELabConversion+0xda>
movss  0x3ebca(%rip),%xmm0        # 6f85c <module.62+0x12a>
movss  %xmm0,-0x10(%rbp)
mov    -0x20(%rbp),%rax
movss  (%rax),%xmm0
divss  0x4(%rax),%xmm0
mulss  -0x10(%rbp),%xmm0
movss  %xmm0,-0x14(%rbp)
mov    -0x20(%rbp),%rax
movss  0x3eba6(%rip),%xmm0        # 6f860 <module.62+0x12e>
subss  (%rax),%xmm0
movss  0x4(%rax),%xmm1
subss  %xmm1,%xmm0
divss  %xmm1,%xmm0
mulss  -0x10(%rbp),%xmm0
movss  %xmm0,-0xc(%rbp)
mov    0x70(%r15),%rdi
lea    0x3d808(%rip),%rsi        # 6e4e8 <display_sRGB>
lea    -0x14(%rbp),%rdx
callq  8b40 <TIFFCIELabToRGBInit@plt>
test   %eax,%eax
js     30d58 <initCIELabConversion+0x118>
lea    -0x29b4(%rip),%rax        # 2e340 <putcontig8bitCIELab>
mov    -0x8(%rbp),%r15
leaveq 
retq   
xor    %eax,%eax
mov    (%r15),%rcx
mov    0x3b8(%rcx),%rdi
lea    0x3ea3a(%rip),%rdx        # 6f747 <module.62+0x15>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
mov    $0x46cc,%edi
callq  8440 <_TIFFmalloc@plt>
mov    %rax,0x70(%r15)
test   %rax,%rax
jne    30c8a <initCIELabConversion+0x4a>
xor    %eax,%eax
mov    (%r15),%rcx
mov    0x3b8(%rcx),%rdi
lea    0x3ea25(%rip),%rdx        # 6f769 <module.62+0x37>
lea    0x3e9e7(%rip),%rsi        # 6f732 <module.62>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
xor    %eax,%eax
mov    (%r15),%rcx
mov    0x3b8(%rcx),%rdi
lea    0x3ea2d(%rip),%rdx        # 6f798 <module.62+0x66>
lea    0x3e9c0(%rip),%rsi        # 6f732 <module.62>
callq  8a00 <TIFFErrorExt@plt>
mov    0x70(%r15),%rdi
callq  8bb0 <_TIFFfree@plt>
xor    %eax,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

0000000000030d90 <makebwmap>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %r14,-0x10(%rbp)
mov    %r15,-0x18(%rbp)
mov    0x50(%rdi),%rax
mov    %rax,-0x8(%rbp)
mov    $0x1,%ecx
mov    $0x8,%eax
movzwl 0x1c(%rdi),%r14d
cltd   
idiv   %r14d
test   %eax,%eax
je     30dc2 <makebwmap+0x32>
mov    %rax,%rcx
shl    $0x8,%ecx
movslq %ecx,%rax
lea    0x800(,%rax,4),%rax
mov    %rdi,%r15
mov    %rax,%rdi
callq  8440 <_TIFFmalloc@plt>
mov    %rax,0x58(%r15)
xor    %ecx,%ecx
test   %rax,%rax
je     30df6 <makebwmap+0x66>
lea    -0x1(%r14),%edi
add    $0x800,%rax
mov    -0x8(%rbp),%r9
jmp    30e3c <makebwmap+0xac>
mov    (%r15),%rdi
xor    %r14d,%r14d
mov    0x3b8(%rdi),%r15
callq  85f0 <TIFFFileName@plt>
mov    %rax,%rsi
mov    %r14,%rax
mov    %r15,%rdi
lea    0x3e9b7(%rip),%rdx        # 6f7cf <module.62+0x9d>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
leaveq 
retq   
cmp    $0xf,%edi
mov    0x58(%r15),%rdx
movslq %ecx,%r8
mov    %rax,(%rdx,%r8,8)
jbe    30e53 <makebwmap+0xc3>
add    $0x1,%ecx
cmp    $0xff,%ecx
jle    30e29 <makebwmap+0x99>
mov    $0x1,%eax
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
leaveq 
retq   
lea    0x3d616(%rip),%rsi        # 6e470 <TIFFFaxBlackTable+0x102b4>
movslq (%rsi,%rdi,4),%rdx
add    %rsi,%rdx
jmpq   *%rdx
movzbl (%r9,%r8,1),%r8d
mov    %r8,%rsi
shl    $0x8,%esi
mov    %r8,%rdx
shl    $0x10,%edx
add    %esi,%edx
lea    -0x1000000(%r8,%rdx,1),%edx
mov    %edx,(%rax)
add    $0x4,%rax
jmp    30e39 <makebwmap+0xa9>
mov    %rcx,%rdx
sar    $0x7,%edx
movslq %edx,%rdx
movzbl (%r9,%rdx,1),%r8d
mov    %r8,%rsi
shl    $0x8,%esi
mov    %r8,%rdx
shl    $0x10,%edx
add    %esi,%edx
lea    -0x1000000(%r8,%rdx,1),%edx
mov    %edx,(%rax)
mov    %rcx,%rdx
and    $0x40,%edx
shr    $0x6,%edx
movslq %edx,%rdx
movzbl (%r9,%rdx,1),%r8d
mov    %r8,%rsi
shl    $0x8,%esi
mov    %r8,%rdx
shl    $0x10,%edx
add    %esi,%edx
lea    -0x1000000(%r8,%rdx,1),%edx
mov    %edx,0x4(%rax)
mov    %rcx,%rdx
and    $0x20,%edx
shr    $0x5,%edx
movslq %edx,%rdx
movzbl (%r9,%rdx,1),%r8d
mov    %r8,%rsi
shl    $0x8,%esi
mov    %r8,%rdx
shl    $0x10,%edx
add    %esi,%edx
lea    -0x1000000(%r8,%rdx,1),%edx
mov    %edx,0x8(%rax)
mov    %rcx,%rdx
and    $0x10,%edx
shr    $0x4,%edx
movslq %edx,%rdx
movzbl (%r9,%rdx,1),%r8d
mov    %r8,%rsi
shl    $0x8,%esi
mov    %r8,%rdx
shl    $0x10,%edx
add    %esi,%edx
lea    -0x1000000(%r8,%rdx,1),%edx
mov    %edx,0xc(%rax)
mov    %rcx,%rdx
and    $0x8,%edx
shr    $0x3,%edx
movslq %edx,%rdx
movzbl (%r9,%rdx,1),%r8d
mov    %r8,%rsi
shl    $0x8,%esi
mov    %r8,%rdx
shl    $0x10,%edx
add    %esi,%edx
lea    -0x1000000(%r8,%rdx,1),%edx
mov    %edx,0x10(%rax)
mov    %rcx,%rdx
and    $0x4,%edx
shr    $0x2,%edx
movslq %edx,%rdx
movzbl (%r9,%rdx,1),%r8d
mov    %r8,%rsi
shl    $0x8,%esi
mov    %r8,%rdx
shl    $0x10,%edx
add    %esi,%edx
lea    -0x1000000(%r8,%rdx,1),%edx
mov    %edx,0x14(%rax)
mov    %rcx,%rdx
and    $0x2,%edx
shr    %edx
movslq %edx,%rdx
movzbl (%r9,%rdx,1),%r8d
mov    %r8,%rsi
shl    $0x8,%esi
mov    %r8,%rdx
shl    $0x10,%edx
add    %esi,%edx
lea    -0x1000000(%r8,%rdx,1),%edx
mov    %edx,0x18(%rax)
mov    %rcx,%rdx
and    $0x1,%edx
movslq %edx,%rdx
movzbl (%r9,%rdx,1),%r8d
mov    %r8,%rsi
shl    $0x8,%esi
mov    %r8,%rdx
shl    $0x10,%edx
add    %esi,%edx
lea    -0x1000000(%r8,%rdx,1),%edx
mov    %edx,0x1c(%rax)
add    $0x20,%rax
jmpq   30e39 <makebwmap+0xa9>
mov    %rcx,%rdx
sar    $0x6,%edx
movslq %edx,%rdx
movzbl (%r9,%rdx,1),%r8d
mov    %r8,%rsi
shl    $0x8,%esi
mov    %r8,%rdx
shl    $0x10,%edx
add    %esi,%edx
lea    -0x1000000(%r8,%rdx,1),%edx
mov    %edx,(%rax)
mov    %rcx,%rdx
and    $0x30,%edx
shr    $0x4,%edx
movslq %edx,%rdx
movzbl (%r9,%rdx,1),%r8d
mov    %r8,%rsi
shl    $0x8,%esi
mov    %r8,%rdx
shl    $0x10,%edx
add    %esi,%edx
lea    -0x1000000(%r8,%rdx,1),%edx
mov    %edx,0x4(%rax)
mov    %rcx,%rdx
and    $0xc,%edx
shr    $0x2,%edx
movslq %edx,%rdx
movzbl (%r9,%rdx,1),%r8d
mov    %r8,%rsi
shl    $0x8,%esi
mov    %r8,%rdx
shl    $0x10,%edx
add    %esi,%edx
lea    -0x1000000(%r8,%rdx,1),%edx
mov    %edx,0x8(%rax)
mov    %rcx,%rdx
and    $0x3,%edx
movslq %edx,%rdx
movzbl (%r9,%rdx,1),%r8d
mov    %r8,%rsi
shl    $0x8,%esi
mov    %r8,%rdx
shl    $0x10,%edx
add    %esi,%edx
lea    -0x1000000(%r8,%rdx,1),%edx
mov    %edx,0xc(%rax)
add    $0x10,%rax
jmpq   30e39 <makebwmap+0xa9>
mov    %rcx,%rdx
sar    $0x4,%edx
movslq %edx,%rdx
movzbl (%r9,%rdx,1),%r8d
mov    %r8,%rsi
shl    $0x8,%esi
mov    %r8,%rdx
shl    $0x10,%edx
add    %esi,%edx
lea    -0x1000000(%r8,%rdx,1),%edx
mov    %edx,(%rax)
mov    %rcx,%rdx
and    $0xf,%edx
movslq %edx,%rdx
movzbl (%r9,%rdx,1),%r8d
mov    %r8,%rsi
shl    $0x8,%esi
mov    %r8,%rdx
shl    $0x10,%edx
add    %esi,%edx
lea    -0x1000000(%r8,%rdx,1),%edx
mov    %edx,0x4(%rax)
add    $0x8,%rax
jmpq   30e39 <makebwmap+0xa9>
nopw   0x0(%rax,%rax,1)

00000000000310e0 <setupMap>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    $0x1,%eax
movzwl 0x1c(%rdi),%ecx
cmp    $0x10,%cx
jne    3112e <setupMap+0x4e>
mov    %rdi,%r14
mov    $0xff,%r15d
lea    0x1(%r15),%eax
movslq %eax,%rdi
callq  8440 <_TIFFmalloc@plt>
mov    %rax,0x50(%r14)
xor    %ecx,%ecx
test   %rax,%rax
je     3113a <setupMap+0x5a>
movzwl 0x24(%r14),%eax
test   %ax,%ax
jne    3116d <setupMap+0x8d>
mov    %rcx,%rsi
jmp    31193 <setupMap+0xb3>
mov    %rdi,%r14
shl    %cl,%rax
lea    -0x1(%rax),%r15d
jmp    31108 <setupMap+0x28>
mov    (%r14),%rdi
xor    %r14d,%r14d
mov    0x3b8(%rdi),%r15
callq  85f0 <TIFFFileName@plt>
mov    %rax,%rsi
mov    %r14,%rax
mov    %r15,%rdi
lea    0x3e692(%rip),%rdx        # 6f7ee <module.62+0xbc>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
mov    %rcx,%rsi
jmp    311cb <setupMap+0xeb>
mov    %r15,%rax
sub    %esi,%eax
shl    $0x8,%eax
mov    %rsi,%rdx
sub    %r15d,%edx
add    %edx,%eax
cltd   
mov    0x50(%r14),%rdi
idiv   %r15d
movslq %esi,%rdx
mov    %al,(%rdi,%rdx,1)
add    $0x1,%esi
cmp    %esi,%r15d
jge    31172 <setupMap+0x92>
movzwl 0x1c(%r14),%eax
cmp    $0x10,%ax
jbe    311d2 <setupMap+0xf2>
mov    $0x1,%eax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
mov    %rsi,%rax
shl    $0x8,%eax
sub    %esi,%eax
cltd   
mov    0x50(%r14),%rdi
idiv   %r15d
movslq %esi,%rdx
mov    %al,(%rdi,%rdx,1)
add    $0x1,%esi
cmp    %esi,%r15d
jge    311b2 <setupMap+0xd2>
jmp    31198 <setupMap+0xb8>
movzwl 0x24(%r14),%eax
cmp    $0x1,%ax
je     311f1 <setupMap+0x111>
test   %ax,%ax
je     311f1 <setupMap+0x111>
mov    $0x1,%eax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
mov    %rcx,%r15
mov    %r14,%rdi
callq  30d90 <makebwmap>
test   %eax,%eax
jne    3120d <setupMap+0x12d>
mov    %r15,%rax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
mov    0x50(%r14),%rdi
callq  8bb0 <_TIFFfree@plt>
movq   $0x0,0x50(%r14)
mov    $0x1,%eax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
nopl   (%rax)

0000000000031230 <checkcmap>:
push   %rbp
mov    %rsp,%rbp
mov    0x28(%rdi),%rsi
mov    0x30(%rdi),%r8
mov    0x38(%rdi),%r9
mov    $0x1,%edx
movzwl 0x1c(%rdi),%ecx
shl    %cl,%rdx
mov    $0x10,%eax
jmp    31283 <checkcmap+0x53>
movzwl (%rsi),%ecx
cmp    $0xff,%cx
ja     3128f <checkcmap+0x5f>
movzwl (%r8),%ecx
cmp    $0xff,%cx
ja     31291 <checkcmap+0x61>
movzwl (%r9),%ecx
cmp    $0xff,%cx
ja     31293 <checkcmap+0x63>
add    $0x2,%rsi
add    $0x2,%r8
add    $0x2,%r9
add    $0xffffffffffffffff,%rdx
test   %rdx,%rdx
jg     31253 <checkcmap+0x23>
mov    $0x8,%eax
leaveq 
retq   
leaveq 
retq   
leaveq 
retq   
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)

00000000000312a0 <cvtcmap>:
push   %rbp
mov    %rsp,%rbp
mov    0x28(%rdi),%rdx
mov    0x30(%rdi),%rsi
mov    0x38(%rdi),%r8
mov    $0x1,%eax
movzwl 0x1c(%rdi),%ecx
shl    %cl,%rax
add    $0xffffffffffffffff,%rax
jmp    312e9 <cvtcmap+0x49>
movzwl (%rdx,%rax,2),%ecx
shr    $0x8,%ecx
mov    %cx,(%rdx,%rax,2)
movzwl (%rsi,%rax,2),%ecx
shr    $0x8,%ecx
mov    %cx,(%rsi,%rax,2)
movzwl (%r8,%rax,2),%ecx
shr    $0x8,%ecx
mov    %cx,(%r8,%rax,2)
add    $0xffffffffffffffff,%rax
test   %rax,%rax
jns    312c2 <cvtcmap+0x22>
leaveq 
retq   

00000000000312f0 <makecmap>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    $0x8,%eax
movzwl 0x1c(%rdi),%r14d
mov    0x28(%rdi),%rcx
mov    %rcx,-0x8(%rbp)
mov    0x30(%rdi),%rcx
mov    %rcx,-0x10(%rbp)
mov    0x38(%rdi),%rcx
mov    %rcx,-0x18(%rbp)
cltd   
idiv   %r14d
shl    $0x8,%eax
movslq %eax,%rax
lea    0x800(,%rax,4),%rax
mov    %rdi,%r15
mov    %rax,%rdi
callq  8440 <_TIFFmalloc@plt>
mov    %rax,0x60(%r15)
xor    %ecx,%ecx
test   %rax,%rax
je     31361 <makecmap+0x71>
add    $0x800,%rax
mov    -0x18(%rbp),%r10
mov    -0x10(%rbp),%r9
mov    -0x8(%rbp),%r8
jmpq   3158b <makecmap+0x29b>
mov    (%r15),%rdi
xor    %r14d,%r14d
mov    0x3b8(%rdi),%r15
callq  85f0 <TIFFFileName@plt>
mov    %rax,%rsi
mov    %r14,%rax
mov    %r15,%rdi
lea    0x3e495(%rip),%rdx        # 6f818 <module.62+0xe6>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
leaveq 
retq   
movzbl %cl,%edx
shr    $0x7,%edx
movzbl %dl,%edx
neg    %rdx
and    $0x2,%rdx
movzwl (%r8,%rdx,1),%esi
movzbl %sil,%edi
movzwl (%r9,%rdx,1),%esi
movzbl %sil,%esi
shl    $0x8,%esi
add    %edi,%esi
movzwl (%r10,%rdx,1),%edx
movzbl %dl,%edx
shl    $0x10,%edx
lea    -0x1000000(%rsi,%rdx,1),%edx
mov    %edx,(%rax)
mov    %rcx,%rdx
sar    $0x6,%edx
and    $0x1,%dl
movzbl %dl,%edx
neg    %rdx
and    $0x2,%rdx
movzwl (%r8,%rdx,1),%esi
movzbl %sil,%edi
movzwl (%r9,%rdx,1),%esi
movzbl %sil,%esi
shl    $0x8,%esi
add    %edi,%esi
movzwl (%r10,%rdx,1),%edx
movzbl %dl,%edx
shl    $0x10,%edx
lea    -0x1000000(%rsi,%rdx,1),%edx
mov    %edx,0x4(%rax)
mov    %rcx,%rdx
sar    $0x5,%edx
and    $0x1,%dl
movzbl %dl,%edx
neg    %rdx
and    $0x2,%rdx
movzwl (%r8,%rdx,1),%esi
movzbl %sil,%edi
movzwl (%r9,%rdx,1),%esi
movzbl %sil,%esi
shl    $0x8,%esi
add    %edi,%esi
movzwl (%r10,%rdx,1),%edx
movzbl %dl,%edx
shl    $0x10,%edx
lea    -0x1000000(%rsi,%rdx,1),%edx
mov    %edx,0x8(%rax)
mov    %rcx,%rdx
sar    $0x4,%edx
and    $0x1,%dl
movzbl %dl,%edx
neg    %rdx
and    $0x2,%rdx
movzwl (%r8,%rdx,1),%esi
movzbl %sil,%edi
movzwl (%r9,%rdx,1),%esi
movzbl %sil,%esi
shl    $0x8,%esi
add    %edi,%esi
movzwl (%r10,%rdx,1),%edx
movzbl %dl,%edx
shl    $0x10,%edx
lea    -0x1000000(%rsi,%rdx,1),%edx
mov    %edx,0xc(%rax)
mov    %rcx,%rdx
sar    $0x3,%edx
and    $0x1,%dl
movzbl %dl,%edx
neg    %rdx
and    $0x2,%rdx
movzwl (%r8,%rdx,1),%esi
movzbl %sil,%edi
movzwl (%r9,%rdx,1),%esi
movzbl %sil,%esi
shl    $0x8,%esi
add    %edi,%esi
movzwl (%r10,%rdx,1),%edx
movzbl %dl,%edx
shl    $0x10,%edx
lea    -0x1000000(%rsi,%rdx,1),%edx
mov    %edx,0x10(%rax)
mov    %rcx,%rdx
sar    $0x2,%edx
and    $0x1,%dl
movzbl %dl,%edx
neg    %rdx
and    $0x2,%rdx
movzwl (%r8,%rdx,1),%esi
movzbl %sil,%edi
movzwl (%r9,%rdx,1),%esi
movzbl %sil,%esi
shl    $0x8,%esi
add    %edi,%esi
movzwl (%r10,%rdx,1),%edx
movzbl %dl,%edx
shl    $0x10,%edx
lea    -0x1000000(%rsi,%rdx,1),%edx
mov    %edx,0x14(%rax)
mov    %rcx,%rdx
sar    %edx
and    $0x1,%dl
movzbl %dl,%edx
neg    %rdx
and    $0x2,%rdx
movzwl (%r8,%rdx,1),%esi
movzbl %sil,%edi
movzwl (%r9,%rdx,1),%esi
movzbl %sil,%esi
shl    $0x8,%esi
add    %edi,%esi
movzwl (%r10,%rdx,1),%edx
movzbl %dl,%edx
shl    $0x10,%edx
lea    -0x1000000(%rsi,%rdx,1),%edx
mov    %edx,0x18(%rax)
mov    %rcx,%rdx
and    $0x1,%dl
movzbl %dl,%edx
neg    %rdx
and    $0x2,%rdx
movzwl (%r8,%rdx,1),%esi
movzbl %sil,%edi
movzwl (%r9,%rdx,1),%esi
movzbl %sil,%esi
shl    $0x8,%esi
add    %edi,%esi
movzwl (%r10,%rdx,1),%edx
movzbl %dl,%edx
shl    $0x10,%edx
lea    -0x1000000(%rsi,%rdx,1),%edx
mov    %edx,0x1c(%rax)
add    $0x20,%rax
add    $0x1,%ecx
cmp    $0xff,%ecx
jle    315a2 <makecmap+0x2b2>
mov    $0x1,%eax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
leaveq 
retq   
cmp    $0x3,%r14w
mov    0x60(%r15),%rsi
movslq %ecx,%rdx
mov    %rax,(%rsi,%rdx,8)
jbe    315f8 <makecmap+0x308>
cmp    $0x4,%r14w
je     316e8 <makecmap+0x3f8>
cmp    $0x8,%r14w
jne    31588 <makecmap+0x298>
movzbl %cl,%esi
movzwl (%r8,%rsi,2),%edx
movzbl %dl,%edi
movzwl (%r9,%rsi,2),%edx
movzbl %dl,%edx
shl    $0x8,%edx
add    %edx,%edi
movzwl (%r10,%rsi,2),%edx
movzbl %dl,%edx
shl    $0x10,%edx
lea    -0x1000000(%rdi,%rdx,1),%edx
mov    %edx,(%rax)
add    $0x4,%rax
jmp    31588 <makecmap+0x298>
cmp    $0x1,%r14w
je     31394 <makecmap+0xa4>
cmp    $0x2,%r14w
jne    31588 <makecmap+0x298>
movzbl %cl,%edx
shr    $0x6,%edx
movzbl %dl,%edi
movzwl (%r8,%rdi,2),%edx
movzbl %dl,%esi
movzwl (%r9,%rdi,2),%edx
movzbl %dl,%edx
shl    $0x8,%edx
add    %edx,%esi
movzwl (%r10,%rdi,2),%edx
movzbl %dl,%edx
shl    $0x10,%edx
lea    -0x1000000(%rsi,%rdx,1),%edx
mov    %edx,(%rax)
mov    %rcx,%rdx
sar    $0x4,%edx
and    $0x3,%dl
movzbl %dl,%edi
movzwl (%r8,%rdi,2),%edx
movzbl %dl,%esi
movzwl (%r9,%rdi,2),%edx
movzbl %dl,%edx
shl    $0x8,%edx
add    %edx,%esi
movzwl (%r10,%rdi,2),%edx
movzbl %dl,%edx
shl    $0x10,%edx
lea    -0x1000000(%rsi,%rdx,1),%edx
mov    %edx,0x4(%rax)
mov    %rcx,%rdx
sar    $0x2,%edx
and    $0x3,%dl
movzbl %dl,%esi
movzwl (%r8,%rsi,2),%edx
movzbl %dl,%edi
movzwl (%r9,%rsi,2),%edx
movzbl %dl,%edx
shl    $0x8,%edx
add    %edx,%edi
movzwl (%r10,%rsi,2),%edx
movzbl %dl,%edx
shl    $0x10,%edx
lea    -0x1000000(%rdi,%rdx,1),%edx
mov    %edx,0x8(%rax)
mov    %rcx,%rdx
and    $0x3,%dl
movzbl %dl,%esi
movzwl (%r8,%rsi,2),%edx
movzbl %dl,%edi
movzwl (%r9,%rsi,2),%edx
movzbl %dl,%edx
shl    $0x8,%edx
add    %edx,%edi
movzwl (%r10,%rsi,2),%edx
movzbl %dl,%edx
shl    $0x10,%edx
lea    -0x1000000(%rdi,%rdx,1),%edx
mov    %edx,0xc(%rax)
add    $0x10,%rax
jmpq   31588 <makecmap+0x298>
movzbl %cl,%edx
shr    $0x4,%edx
movzbl %dl,%esi
movzwl (%r8,%rsi,2),%edx
movzbl %dl,%edi
movzwl (%r9,%rsi,2),%edx
movzbl %dl,%edx
shl    $0x8,%edx
add    %edx,%edi
movzwl (%r10,%rsi,2),%edx
movzbl %dl,%edx
shl    $0x10,%edx
lea    -0x1000000(%rdi,%rdx,1),%edx
mov    %edx,(%rax)
mov    %rcx,%rdx
and    $0xf,%dl
movzbl %dl,%edi
movzwl (%r8,%rdi,2),%edx
movzbl %dl,%esi
movzwl (%r9,%rdi,2),%edx
movzbl %dl,%edx
shl    $0x8,%edx
add    %edx,%esi
movzwl (%r10,%rdi,2),%edx
movzbl %dl,%edx
shl    $0x10,%edx
lea    -0x1000000(%rsi,%rdx,1),%edx
mov    %edx,0x4(%rax)
add    $0x8,%rax
jmpq   31588 <makecmap+0x298>
nopw   %cs:0x0(%rax,%rax,1)

0000000000031760 <buildMap>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    $0x1,%eax
movzwl 0x24(%rdi),%ecx
cmp    $0x6,%cx
jbe    31779 <buildMap+0x19>
leaveq 
retq   
lea    0x3cd30(%rip),%rdx        # 6e4b0 <TIFFFaxBlackTable+0x102f4>
movslq (%rdx,%rcx,4),%rcx
add    %rdx,%rcx
jmpq   *%rcx
leaveq 
retq   
callq  310e0 <setupMap>
test   %eax,%eax
jne    317ee <buildMap+0x8e>
xor    %eax,%eax
leaveq 
retq   
movzwl 0x1c(%rdi),%ecx
cmp    $0x8,%cx
jne    3178b <buildMap+0x2b>
leaveq 
retq   
mov    %rdi,%rax
mov    %r15,-0x10(%rbp)
mov    %rdi,%r15
mov    %rax,%rdi
callq  31230 <checkcmap>
cmp    $0x10,%eax
je     317f5 <buildMap+0x95>
mov    (%r15),%rax
mov    0x3b8(%rax),%rdi
mov    %r14,-0x8(%rbp)
mov    %rdi,%r14
mov    %rax,%rdi
callq  85f0 <TIFFFileName@plt>
mov    %rax,%rsi
mov    %r14,%rdi
lea    0x3e05a(%rip),%rdx        # 6f83b <module.62+0x109>
xor    %eax,%eax
callq  85a0 <TIFFWarningExt@plt>
mov    -0x8(%rbp),%r14
jmp    317fd <buildMap+0x9d>
mov    $0x1,%eax
leaveq 
retq   
mov    %r15,%rdi
callq  312a0 <cvtcmap>
movzwl 0x1c(%r15),%eax
cmp    $0x8,%ax
jbe    31813 <buildMap+0xb3>
mov    $0x1,%eax
mov    -0x10(%rbp),%r15
leaveq 
retq   
mov    %r15,%rdi
callq  312f0 <makecmap>
test   %eax,%eax
jne    31827 <buildMap+0xc7>
xor    %eax,%eax
mov    -0x10(%rbp),%r15
leaveq 
retq   
mov    $0x1,%eax
mov    -0x10(%rbp),%r15
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)
nopl   0x0(%rax)

0000000000031840 <TIFFInitJPEG>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
lea    0x3e137(%rip),%rcx        # 6f986 <module.62+0x254>
cmp    $0x7,%esi
je     3186c <TIFFInitJPEG+0x2c>
lea    0x3e105(%rip),%rdi        # 6f960 <module.62+0x22e>
lea    0x3e119(%rip),%rsi        # 6f97b <module.62+0x249>
mov    $0x9b7,%edx
callq  8490 <__assert_fail@plt>
lea    0x48075(%rip),%rsi        # 798e8 <jpegFields>
mov    $0x4,%edx
mov    %rdi,%rax
mov    %r15,-0x10(%rbp)
mov    %rdi,%r15
mov    %rax,%rdi
callq  8520 <_TIFFMergeFields@plt>
test   %eax,%eax
jne    318b2 <TIFFInitJPEG+0x72>
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
lea    0x3e0f5(%rip),%rdx        # 6f993 <module.62+0x261>
lea    0x3e0e1(%rip),%rsi        # 6f986 <module.62+0x254>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x10(%rbp),%r15
leaveq 
retq   
mov    $0x540,%edi
callq  8440 <_TIFFmalloc@plt>
mov    %rax,0x350(%r15)
test   %rax,%rax
je     31a77 <TIFFInitJPEG+0x237>
mov    %rax,%rdi
xor    %esi,%esi
mov    $0x540,%edx
callq  88e0 <_TIFFmemset@plt>
mov    0x350(%r15),%rdx
mov    %r15,0x488(%rdx)
mov    0x410(%r15),%rax
mov    %rax,0x4f8(%rdx)
lea    0x3c72(%rip),%rax        # 35570 <JPEGVGetField>
mov    %rax,0x410(%r15)
mov    0x408(%r15),%rax
mov    %rax,0x500(%rdx)
lea    0x39d6(%rip),%rax        # 352f0 <JPEGVSetField>
mov    %rax,0x408(%r15)
mov    0x418(%r15),%rax
mov    %rax,0x508(%rdx)
lea    0x3daa(%rip),%rax        # 356e0 <JPEGPrintDir>
mov    %rax,0x418(%r15)
movq   $0x0,0x520(%rdx)
movl   $0x0,0x528(%rdx)
movl   $0x4b,0x52c(%rdx)
movl   $0x0,0x530(%rdx)
movl   $0x3,0x534(%rdx)
movl   $0x0,0x538(%rdx)
lea    0x225f(%rip),%rax        # 33be0 <JPEGFixupTags>
mov    %rax,0x2c0(%r15)
lea    0x22b1(%rip),%rax        # 33c40 <JPEGSetupDecode>
mov    %rax,0x2c8(%r15)
lea    0x23d3(%rip),%rax        # 33d70 <JPEGPreDecode>
mov    %rax,0x2d0(%r15)
lea    0x1f5(%rip),%rax        # 31ba0 <JPEGDecode>
mov    %rax,0x2f8(%r15)
mov    %rax,0x308(%r15)
mov    %rax,0x318(%r15)
lea    0x2c79(%rip),%rax        # 34640 <JPEGSetupEncode>
mov    %rax,0x2d8(%r15)
lea    0x315b(%rip),%rax        # 34b30 <JPEGPreEncode>
mov    %rax,0x2e8(%r15)
lea    0x365d(%rip),%rax        # 35040 <JPEGPostEncode>
mov    %rax,0x2f0(%r15)
lea    0x70f(%rip),%rax        # 32100 <JPEGEncode>
mov    %rax,0x300(%r15)
mov    %rax,0x310(%r15)
mov    %rax,0x320(%r15)
lea    0x3753(%rip),%rax        # 35160 <JPEGCleanup>
mov    %rax,0x338(%r15)
mov    0x340(%r15),%rax
mov    %rax,0x510(%rdx)
lea    0x3d57(%rip),%rax        # 35780 <JPEGDefaultStripSize>
mov    %rax,0x340(%r15)
mov    0x348(%r15),%rax
mov    %rax,0x518(%rdx)
lea    0x3dab(%rip),%rax        # 357f0 <JPEGDefaultTileSize>
mov    %rax,0x348(%r15)
mov    0x10(%r15),%eax
or     $0x100,%eax
mov    %eax,0x10(%r15)
movl   $0x0,0x290(%rdx)
mov    $0x1,%eax
mov    0x18(%r15),%rcx
test   %rcx,%rcx
je     31a9b <TIFFInitJPEG+0x25b>
mov    -0x10(%rbp),%r15
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
lea    0x3df34(%rip),%rdx        # 6f9bb <module.62+0x289>
lea    0x3def8(%rip),%rsi        # 6f986 <module.62+0x254>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x10(%rbp),%r15
leaveq 
retq   
movl   $0x7d0,0x528(%rdx)
mov    $0x7d0,%edi
mov    %r14,-0x8(%rbp)
mov    %rdx,%r14
callq  8440 <_TIFFmalloc@plt>
mov    %rax,0x520(%r14)
test   %rax,%rax
jne    31aea <TIFFInitJPEG+0x2aa>
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
lea    0x3df07(%rip),%rdx        # 6f9d9 <module.62+0x2a7>
lea    0x3dead(%rip),%rsi        # 6f986 <module.62+0x254>
callq  8a00 <TIFFErrorExt@plt>
mov    -0x8(%rbp),%r14
xor    %eax,%eax
mov    -0x10(%rbp),%r15
leaveq 
retq   
mov    %rax,%rdi
mov    $0x7d0,%edx
xor    %esi,%esi
callq  88e0 <_TIFFmemset@plt>
mov    $0x1,%eax
mov    -0x8(%rbp),%r14
mov    -0x10(%rbp),%r15
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

0000000000031b10 <TIFFJPEGIsFullStripRequired>:
push   %rbp
mov    %rsp,%rbp
sub    $0x550,%rsp
mov    %r15,-0x8(%rbp)
mov    %rdi,%r15
lea    -0x548(%rbp),%rdi
xor    %esi,%esi
mov    $0x540,%edx
callq  8550 <memset@plt>
mov    %r15,-0xc0(%rbp)
lea    -0x548(%rbp),%r15
mov    %r15,%rdi
callq  32a50 <TIFFjpeg_create_decompress>
mov    %r15,%rdi
callq  333f0 <TIFFjpeg_data_src>
mov    $0x1,%esi
mov    %r15,%rdi
callq  32d80 <TIFFjpeg_read_header>
cmp    $0x1,%eax
jne    31b81 <TIFFJPEGIsFullStripRequired+0x71>
mov    %r15,%rdi
callq  32dd0 <TIFFjpeg_has_multiple_scans>
mov    %r15,%rdi
mov    %rax,%r15
callq  32fb0 <TIFFjpeg_destroy>
mov    %r15,%rax
mov    -0x8(%rbp),%r15
leaveq 
retq   
mov    %r15,%rdi
callq  32fb0 <TIFFjpeg_destroy>
xor    %eax,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   0x0(%rax)

0000000000031ba0 <JPEGDecode>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    0x388(%rdi),%rax
mov    0x350(%rdi),%r8
mov    %rax,0x450(%r8)
mov    0x390(%rdi),%rax
mov    %rax,0x458(%r8)
xor    %eax,%eax
mov    0x498(%r8),%rcx
test   %rcx,%rcx
jne    31bdb <JPEGDecode+0x3b>
leaveq 
retq   
mov    %rdx,%rax
mov    %r12,%r9
mov    %rdi,%r12
mov    %rbx,%r10
mov    %r8,%rbx
mov    %r13,%r8
mov    %rsi,%r13
mov    0x498(%rbx),%r11
cqto   
mov    %rax,%rsi
idiv   %r11
test   %rdx,%rdx
jne    31c09 <JPEGDecode+0x69>
mov    %rsi,%rax
jmp    31c5a <JPEGDecode+0xba>
xor    %eax,%eax
mov    0x3b8(%r12),%rdi
mov    (%r12),%r11
lea    0x3dde5(%rip),%rdx        # 6fa03 <module.62+0x2d1>
mov    %r10,-0x8(%rbp)
mov    %r9,-0x10(%rbp)
mov    %r8,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rsi,%r14
mov    %r11,%rsi
mov    %rcx,%r15
callq  85a0 <TIFFWarningExt@plt>
mov    %r14,%rax
mov    %r15,%rcx
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r8
mov    -0x10(%rbp),%r9
mov    -0x8(%rbp),%r10
cqto   
idiv   %rcx
mov    0x34(%rbx),%ecx
cmp    %rax,%rcx
jge    31c6a <JPEGDecode+0xca>
mov    %rcx,%rax
mov    $0x1,%edx
test   %rax,%rax
je     31cad <JPEGDecode+0x10d>
lea    -0x30(%rbp),%rcx
mov    %r10,-0x8(%rbp)
mov    %r9,-0x10(%rbp)
mov    %r8,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rax,%r14
mov    %rcx,%r15
jmp    31d12 <JPEGDecode+0x172>
mov    $0x1,%edx
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r8
mov    -0x10(%rbp),%r9
mov    -0x8(%rbp),%r10
mov    0x450(%rbx),%rax
mov    %rax,0x388(%r12)
mov    0x458(%rbx),%rax
mov    %rax,0x390(%r12)
mov    0x8c(%rbx),%eax
cmp    0xa8(%rbx),%eax
jbe    31d3e <JPEGDecode+0x19e>
mov    %rdx,%rax
mov    %r10,%rbx
mov    %r9,%r12
mov    %r8,%r13
leaveq 
retq   
mov    0x27c(%r12),%eax
add    $0x1,%eax
mov    %eax,0x27c(%r12)
mov    0x498(%rbx),%rax
add    $0xffffffffffffffff,%r14
test   %r14,%r14
jle    31c94 <JPEGDecode+0xf4>
add    %rax,%r13
mov    $0x1,%edx
mov    %r13,-0x30(%rbp)
mov    %rbx,%rdi
mov    %r15,%rsi
callq  32e90 <TIFFjpeg_read_scanlines>
cmp    $0x1,%eax
je     31ce7 <JPEGDecode+0x147>
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
xor    %eax,%eax
leaveq 
retq   
mov    %rbx,%rdi
mov    %r10,%rbx
mov    %r9,%r12
mov    %r8,%r13
callq  32f30 <TIFFjpeg_finish_decompress>
test   %eax,%eax
je     31d5a <JPEGDecode+0x1ba>
mov    $0x1,%eax
leaveq 
retq   
xor    %eax,%eax
leaveq 
retq   
xchg   %ax,%ax

0000000000031d60 <JPEGDecodeRaw>:
push   %rbp
mov    %rsp,%rbp
sub    $0x90,%rsp
mov    0x5c(%rdi),%eax
mov    0x27c(%rdi),%ecx
sub    %ecx,%eax
mov    0x350(%rdi),%r11
mov    %r11,-0x80(%rbp)
mov    0x34(%r11),%ecx
cmp    %ecx,%eax
jb     31dbe <JPEGDecodeRaw+0x5e>
xor    %eax,%eax
test   %rcx,%rcx
jg     31dd2 <JPEGDecodeRaw+0x72>
mov    %r14,%rsi
mov    %r13,%r14
mov    %r12,%r13
mov    %r11,%r12
mov    $0x1,%eax
mov    0x8c(%r12),%ecx
cmp    0xa8(%r12),%ecx
jbe    31e28 <JPEGDecodeRaw+0xc8>
mov    %r13,%r12
mov    %r14,%r13
mov    %rsi,%r14
leaveq 
retq   
mov    0x10(%rdi),%r8d
and    $0x400,%r8d
test   %r8d,%r8d
jne    31d89 <JPEGDecodeRaw+0x29>
mov    %eax,%ecx
jmp    31d89 <JPEGDecodeRaw+0x29>
mov    0x130(%r11),%r8
mov    0x8c(%r8),%r8d
mov    %r8,-0x68(%rbp)
lea    -0x1(%r8),%r9d
movslq 0x4f4(%r11),%r10
mov    %r10,-0x60(%rbp)
imul   %r10d,%r9d
mov    %r15,-0x28(%rbp)
mov    %r9,-0x50(%rbp)
lea    0x4a0(%r11),%r15
mov    %rdi,-0x38(%rbp)
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %rdx,%rbx
mov    %r11,%r12
mov    %r9,%r13
jmpq   31f1b <JPEGDecodeRaw+0x1bb>
mov    %r12,%rdi
mov    %rsi,%r12
callq  32f30 <TIFFjpeg_finish_decompress>
test   %eax,%eax
je     31f77 <JPEGDecodeRaw+0x217>
mov    %r13,%rcx
mov    %r14,%r13
mov    %r12,%r14
mov    %rcx,%r12
mov    $0x1,%eax
leaveq 
retq   
movzbl (%rcx),%ebx
movslq %edx,%rdi
mov    %bl,(%rsi,%rdi,1)
add    $0x1,%rcx
add    $0x1,%edx
cmp    %r11d,%edx
jl     31e4e <JPEGDecodeRaw+0xee>
add    %r10,%rsi
mov    -0x70(%rbp),%rdx
lea    -0x1(%rdx),%r8d
test   %r8d,%r8d
jne    31f87 <JPEGDecodeRaw+0x227>
mov    -0x48(%rbp),%rbx
mov    -0x78(%rbp),%rdx
add    $0x1,%r9d
mov    -0x58(%rbp),%rcx
lea    (%r11,%rcx,1),%edi
mov    -0x50(%rbp),%r13
mov    -0x80(%rbp),%r12
mov    -0x68(%rbp),%r8
mov    -0x40(%rbp),%rsi
cmp    %edx,%r9d
jl     31f93 <JPEGDecodeRaw+0x233>
mov    -0x90(%rbp),%rcx
lea    0x1(%rcx),%r9d
mov    -0x88(%rbp),%rcx
add    $0x60,%rcx
movslq 0x38(%r12),%rdx
cmp    %r9d,%edx
jg     31fdb <JPEGDecodeRaw+0x27b>
movslq 0x4f0(%r12),%rcx
add    $0x1,%ecx
mov    %ecx,0x4f0(%r12)
movzwl 0x494(%r12),%ecx
mov    -0x38(%rbp),%rdx
add    0x27c(%rdx),%ecx
mov    %ecx,0x27c(%rdx)
mov    0x498(%r12),%rdi
movzwl 0x494(%r12),%edx
mov    -0x30(%rbp),%rcx
sub    %rdx,%rcx
test   %rcx,%rcx
jle    32000 <JPEGDecodeRaw+0x2a0>
sub    %rdi,%rbx
add    %rdi,%rsi
mov    %rsi,-0x40(%rbp)
mov    %rcx,-0x30(%rbp)
mov    %rbx,-0x48(%rbp)
mov    0x498(%r12),%rcx
cmp    %rbx,%rcx
jle    32019 <JPEGDecodeRaw+0x2b9>
xor    %ebx,%ebx
mov    -0x38(%rbp),%rcx
mov    0x3b8(%rcx),%rdi
mov    %rax,%r15
mov    %rbx,%rax
lea    0x3dadc(%rip),%rdx        # 6fa2e <module.62+0x2fc>
lea    0x3dac7(%rip),%rsi        # 6fa20 <module.62+0x2ee>
callq  8a00 <TIFFErrorExt@plt>
mov    %r15,%rax
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x28(%rbp),%r15
leaveq 
retq   
mov    %r13,%rcx
mov    %r14,%r13
mov    %r12,%r14
mov    %rcx,%r12
xor    %eax,%eax
leaveq 
retq   
mov    %r8,-0x70(%rbp)
mov    %rax,%rdx
jmpq   31e5e <JPEGDecodeRaw+0xfe>
mov    (%r15,%r14,8),%rcx
mov    0x4f0(%r12),%r12d
imul   %edx,%r12d
add    %r9d,%r12d
movslq %r12d,%r12
mov    (%rcx,%r12,8),%rcx
lea    0x0(%r13,%rdi,1),%r12d
add    %r11d,%r12d
mov    %r12d,%r12d
cmp    %r12,%rbx
jl     32076 <JPEGDecodeRaw+0x316>
cmp    $0x1,%r11d
movslq %edi,%r12
lea    (%rsi,%r12,1),%rsi
jne    320b5 <JPEGDecodeRaw+0x355>
mov    %rdi,-0x58(%rbp)
jmpq   320cf <JPEGDecodeRaw+0x36f>
movslq 0xc(%rcx),%rdx
mov    %rdx,-0x78(%rbp)
movslq %r9d,%r14
movslq 0x8(%rcx),%r11
mov    %r9,-0x90(%rbp)
mov    %rcx,-0x88(%rbp)
mov    %rax,%r9
jmpq   31e9b <JPEGDecodeRaw+0x13b>
mov    -0x20(%rbp),%rsi
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%rbx
mov    -0x28(%rbp),%r15
jmpq   31d9c <JPEGDecodeRaw+0x3c>
movslq 0x4f0(%r12),%rcx
cmp    $0x7,%ecx
jle    32063 <JPEGDecodeRaw+0x303>
movslq 0x19c(%r12),%r14
shl    $0x3,%r14d
mov    %r12,%rdi
mov    %r15,%rsi
mov    %r14,%rdx
callq  32ee0 <TIFFjpeg_read_raw_data>
cmp    %r14d,%eax
jne    320d9 <JPEGDecodeRaw+0x379>
movl   $0x0,0x4f0(%r12)
xor    %eax,%eax
mov    -0x60(%rbp),%r10
mov    -0x68(%rbp),%r8
mov    -0x40(%rbp),%rsi
mov    0x130(%r12),%rcx
mov    %rax,%rdi
mov    %rdi,%r9
jmpq   31eba <JPEGDecodeRaw+0x15a>
xor    %ebx,%ebx
mov    -0x38(%rbp),%rcx
mov    0x3b8(%rcx),%rdi
mov    %rax,%r15
mov    %rbx,%rax
lea    0x3d9d0(%rip),%rdx        # 6fa60 <module.62+0x32e>
lea    0x3d989(%rip),%rsi        # 6fa20 <module.62+0x2ee>
callq  8a00 <TIFFErrorExt@plt>
mov    %r15,%rax
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x28(%rbp),%r15
leaveq 
retq   
mov    %rdi,-0x58(%rbp)
jmpq   31e6e <JPEGDecodeRaw+0x10e>
movzbl (%rcx),%edi
mov    %dil,(%rsi)
add    $0x1,%rcx
add    %r10,%rsi
add    $0xffffffff,%r8d
test   %r8d,%r8d
jne    320be <JPEGDecodeRaw+0x35e>
jmpq   31e7f <JPEGDecodeRaw+0x11f>
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
xor    %eax,%eax
mov    -0x28(%rbp),%r15
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   0x0(%rax)

0000000000032100 <JPEGEncode>:
push   %rbp
mov    %rsp,%rbp
sub    $0x40,%rsp
lea    0x3d9a9(%rip),%rcx        # 6fab8 <module.62+0x386>
mov    0x350(%rdi),%rax
test   %rax,%rax
jne    32133 <JPEGEncode+0x33>
lea    0x3d98b(%rip),%rdi        # 6faad <module.62+0x37b>
lea    0x3d852(%rip),%rsi        # 6f97b <module.62+0x249>
mov    $0x7fd,%edx
callq  8490 <__assert_fail@plt>
mov    %r14,%r8
mov    %rax,%r14
mov    %rdx,%rax
mov    %r13,%r9
mov    %rdi,%r13
mov    %r12,%r10
mov    %rsi,%r12
mov    %r15,%r11
mov    0x498(%r14),%rcx
mov    0x498(%r14),%rsi
cqto   
mov    %rax,%r15
idiv   %rsi
test   %rdx,%rdx
jne    3216b <JPEGEncode+0x6b>
mov    %r15,%rax
jmp    321b5 <JPEGEncode+0xb5>
xor    %eax,%eax
mov    0x3b8(%r13),%rdi
mov    0x0(%r13),%rsi
lea    0x3d944(%rip),%rdx        # 6fac3 <module.62+0x391>
mov    %rbx,-0x10(%rbp)
mov    %r10,-0x18(%rbp)
mov    %r9,-0x20(%rbp)
mov    %r8,-0x28(%rbp)
mov    %r11,-0x30(%rbp)
mov    %rcx,%rbx
callq  85a0 <TIFFWarningExt@plt>
mov    %r15,%rax
mov    %rbx,%rcx
mov    -0x30(%rbp),%r11
mov    -0x28(%rbp),%r8
mov    -0x20(%rbp),%r9
mov    -0x18(%rbp),%r10
mov    -0x10(%rbp),%rbx
cqto   
idiv   %rcx
mov    0x10(%r13),%ecx
and    $0x400,%ecx
test   %ecx,%ecx
je     321fe <JPEGEncode+0xfe>
mov    %rax,%r15
xor    %ecx,%ecx
lea    -0x38(%rbp),%rsi
mov    $0x1,%edx
movslq 0x58(%r14),%rax
cmp    $0xc,%eax
je     3221b <JPEGEncode+0x11b>
mov    %rbx,-0x8(%rbp)
mov    %r10,-0x10(%rbp)
mov    %r9,-0x18(%rbp)
mov    %r8,-0x20(%rbp)
mov    %r11,-0x28(%rbp)
mov    %rcx,%rax
mov    %rax,%r8
jmpq   322c3 <JPEGEncode+0x1c3>
mov    0x27c(%r13),%esi
lea    (%rsi,%rax,1),%rdx
mov    0x5c(%r13),%ecx
cmp    %rdx,%rcx
jl     322f2 <JPEGEncode+0x1f2>
mov    %rax,%r15
jmp    321cb <JPEGEncode+0xcb>
mov    0x498(%r14),%rax
add    %rax,%rax
mov    $0x3,%ecx
cqto   
idiv   %rcx
movslq %eax,%rcx
lea    (%rcx,%rcx,1),%rdi
mov    %rbx,-0x8(%rbp)
mov    %r10,-0x10(%rbp)
mov    %r9,-0x18(%rbp)
mov    %r8,-0x20(%rbp)
mov    %r11,-0x28(%rbp)
mov    %rax,%rbx
callq  8440 <_TIFFmalloc@plt>
test   %rax,%rax
je     322fc <JPEGEncode+0x1fc>
mov    %rbx,%r8
xor    %ecx,%ecx
lea    -0x38(%rbp),%rsi
mov    $0x1,%edx
jmp    322c3 <JPEGEncode+0x1c3>
movslq 0x58(%r14),%rdi
cmp    $0xc,%edi
je     32330 <JPEGEncode+0x230>
mov    %r12,-0x38(%rbp)
mov    %rax,%rbx
mov    %r14,%rdi
callq  32c60 <TIFFjpeg_write_scanlines>
cmp    $0x1,%eax
jne    32341 <JPEGEncode+0x241>
add    $0xffffffffffffffff,%r15
test   %r15,%r15
jle    322aa <JPEGEncode+0x1aa>
mov    0x27c(%r13),%eax
add    $0x1,%eax
mov    %eax,0x27c(%r13)
add    0x498(%r14),%r12
mov    %rbx,%rax
mov    -0x30(%rbp),%r8
xor    %ecx,%ecx
lea    -0x38(%rbp),%rsi
mov    $0x1,%edx
mov    %r8,-0x30(%rbp)
test   %r15,%r15
jg     3226b <JPEGEncode+0x16b>
movslq 0x58(%r14),%rcx
cmp    $0xc,%ecx
je     32359 <JPEGEncode+0x259>
mov    %rdx,%rax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
sub    %esi,%ecx
mov    %ecx,%r15d
jmpq   321cb <JPEGEncode+0xcb>
xor    %eax,%eax
mov    0x3b8(%r13),%rdi
lea    0x3d7d5(%rip),%rdx        # 6fae1 <module.62+0x3af>
lea    0x3d7a5(%rip),%rsi        # 6fab8 <module.62+0x386>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
mov    %r8,%rdi
shr    $0x1f,%edi
add    %r8d,%edi
sar    %edi
mov    %rax,-0x38(%rbp)
jmp    323b2 <JPEGEncode+0x2b2>
xor    %eax,%eax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
mov    %rax,%rdi
mov    %rdx,%r15
callq  8bb0 <_TIFFfree@plt>
mov    %r15,%rax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
lea    (%rcx,%rcx,1),%r10d
lea    (%rcx,%r10,1),%ebx
movslq %ebx,%r9
movzbl 0x1(%r12,%r9,1),%ebx
shr    $0x4,%ebx
movzbl (%r12,%r9,1),%r8d
shl    $0x4,%r8d
add    %r8d,%ebx
movslq %r10d,%r8
mov    %bl,(%rax,%r8,2)
movzbl 0x2(%r12,%r9,1),%ebx
mov    %bl,0x1(%rax,%r8,2)
add    $0x1,%ecx
cmp    %edi,%ecx
jl     3237d <JPEGEncode+0x27d>
jmpq   3227c <JPEGEncode+0x17c>
nopl   0x0(%rax,%rax,1)

00000000000323c0 <JPEGEncodeRaw>:
push   %rbp
mov    %rsp,%rbp
sub    $0x90,%rsp
mov    0x350(%rdi),%r10
movslq 0x4f4(%r10),%rcx
mov    %rcx,-0x68(%rbp)
test   %r10,%r10
jne    32401 <JPEGEncodeRaw+0x41>
lea    0x3d6c4(%rip),%rdi        # 6faad <module.62+0x37b>
lea    0x3d58b(%rip),%rsi        # 6f97b <module.62+0x249>
mov    $0x84f,%edx
lea    0x3d6ff(%rip),%rcx        # 6fafb <module.62+0x3c9>
callq  8490 <__assert_fail@plt>
movzwl 0x492(%r10),%r8d
mov    0x30(%r10),%eax
lea    -0x1(%r8,%rax,1),%eax
mov    %r13,%r9
mov    %r10,%r13
mov    %rdi,%r10
mov    %rbx,%rdi
mov    %rdx,%rbx
mov    %r12,%r11
mov    %rsi,%r12
mov    %r15,%rsi
mov    %r14,%rdx
mov    %r8,%r14
mov    %rdx,%r8
xor    %edx,%edx
div    %r14d
movzwl 0x494(%r13),%r14d
movzwl 0x492(%r13),%edx
imul   %edx,%r14d
lea    0x2(%r14),%r15d
imul   %eax,%r15d
imul   0x58(%r13),%r15d
movzwl 0x494(%r13),%r14d
lea    0x7(%r15),%eax
shr    $0x3,%eax
mov    %eax,%r15d
mov    %rbx,%rax
mov    %r15,-0x58(%rbp)
cqto   
mov    %rax,%rbx
idiv   %r15
test   %rdx,%rdx
jne    32484 <JPEGEncodeRaw+0xc4>
mov    %rbx,%rax
jmp    324e5 <JPEGEncodeRaw+0x125>
xor    %eax,%eax
mov    0x3b8(%r10),%rcx
mov    %r10,-0x90(%rbp)
mov    (%r10),%r10
mov    %rsi,-0x88(%rbp)
lea    0x3d61e(%rip),%rdx        # 6fac3 <module.62+0x391>
mov    %rdi,-0x50(%rbp)
mov    %r11,-0x60(%rbp)
mov    %r9,-0x78(%rbp)
mov    %r8,-0x80(%rbp)
mov    %r10,%rsi
mov    %rcx,%rdi
callq  85a0 <TIFFWarningExt@plt>
mov    %rbx,%rax
mov    -0x80(%rbp),%r8
mov    -0x78(%rbp),%r9
mov    -0x60(%rbp),%r11
mov    -0x50(%rbp),%rdi
mov    -0x68(%rbp),%rcx
mov    -0x88(%rbp),%rsi
mov    -0x90(%rbp),%r10
mov    0x68(%r13),%rdx
mov    0x8c(%rdx),%ebx
mov    %r10,-0x48(%rbp)
mov    %rbx,-0x78(%rbp)
cqto   
idiv   %r15
imul   %rax,%r14
lea    0x4a0(%r13),%r15
xor    %r10d,%r10d
mov    %rsi,-0x28(%rbp)
mov    %rdi,-0x8(%rbp)
mov    %r11,-0x10(%rbp)
mov    %r9,-0x18(%rbp)
mov    %r8,-0x20(%rbp)
jmpq   325f0 <JPEGEncodeRaw+0x230>
movzbl -0x1(%rax),%edi
mov    %dil,(%rax)
add    $0x1,%rax
add    $0x1,%ecx
cmp    %ecx,%esi
jg     32523 <JPEGEncodeRaw+0x163>
add    $0x1,%r8d
mov    -0x38(%rbp),%rdi
lea    (%rdi,%rdx,1),%esi
mov    -0x78(%rbp),%rbx
mov    -0x80(%rbp),%rax
mov    -0x68(%rbp),%rcx
cmp    %eax,%r8d
jl     32618 <JPEGEncodeRaw+0x258>
mov    -0x90(%rbp),%rax
lea    0x1(%rax),%r9d
mov    -0x88(%rbp),%rax
lea    0x60(%rax),%r8
movslq 0x5c(%r13),%rax
cmp    %r9d,%eax
jg     32641 <JPEGEncodeRaw+0x281>
movslq 0x4f0(%r13),%rax
add    $0x1,%eax
mov    %eax,0x4f0(%r13)
cmp    $0x7,%eax
jle    325c2 <JPEGEncodeRaw+0x202>
movslq 0x160(%r13),%r14
shl    $0x3,%r14d
mov    %r13,%rdi
mov    %r15,%rsi
mov    %r14,%rdx
callq  32cb0 <TIFFjpeg_write_raw_data>
cmp    %r14d,%eax
jne    3267f <JPEGEncodeRaw+0x2bf>
movl   $0x0,0x4f0(%r13)
xor    %r10d,%r10d
mov    -0x68(%rbp),%rcx
movzwl 0x494(%r13),%eax
mov    -0x48(%rbp),%rdx
add    0x27c(%rdx),%eax
mov    %eax,0x27c(%rdx)
movzwl 0x494(%r13),%eax
mov    -0x40(%rbp),%r14
sub    %rax,%r14
mov    -0x58(%rbp),%rax
add    %rax,%r12
mov    %r12,-0x50(%rbp)
test   %r14,%r14
jg     32697 <JPEGEncodeRaw+0x2d7>
mov    $0x1,%eax
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x28(%rbp),%r15
leaveq 
retq   
mov    (%r15,%r11,8),%rdx
imul   0x4f0(%r13),%eax
cmp    $0x1,%edi
lea    (%r8,%rax,1),%eax
movslq %eax,%rax
mov    (%rdx,%rax,8),%rax
movslq %esi,%rdx
lea    (%r12,%rdx,1),%rdx
jne    326aa <JPEGEncodeRaw+0x2ea>
mov    %rsi,-0x70(%rbp)
jmp    326c0 <JPEGEncodeRaw+0x300>
movslq 0xc(%r8),%rax
mov    %rax,-0x80(%rbp)
movslq %r9d,%r11
movslq 0x8(%r8),%rdi
mov    %rdi,-0x38(%rbp)
mov    %rdi,%r14
imul   %ebx,%r14d
movslq 0x1c(%r8),%rdx
shl    $0x3,%edx
sub    %r14d,%edx
mov    %r9,-0x90(%rbp)
mov    %r8,-0x88(%rbp)
mov    %rdx,-0x30(%rbp)
mov    %r10,%r8
jmpq   3254c <JPEGEncodeRaw+0x18c>
xor    %eax,%eax
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x28(%rbp),%r15
leaveq 
retq   
mov    0x68(%r13),%r8
mov    %r14,-0x40(%rbp)
mov    %r10,%rsi
mov    %rsi,%r9
jmpq   3256b <JPEGEncodeRaw+0x1ab>
mov    %rsi,-0x60(%rbp)
jmp    326fb <JPEGEncodeRaw+0x33b>
movzbl (%rdx),%esi
mov    %sil,(%rax)
add    %rcx,%rdx
add    $0x1,%rax
add    $0xffffffff,%ebx
test   %ebx,%ebx
jne    326b0 <JPEGEncodeRaw+0x2f0>
mov    -0x70(%rbp),%rdx
mov    -0x50(%rbp),%r12
mov    -0x30(%rbp),%rsi
mov    %r10,%rcx
jmpq   32531 <JPEGEncodeRaw+0x171>
movslq %ecx,%rsi
movzbl (%rdx,%rsi,1),%esi
mov    %sil,(%rax)
add    $0x1,%ecx
add    $0x1,%rax
cmp    %edi,%ecx
jl     326d8 <JPEGEncodeRaw+0x318>
mov    -0x68(%rbp),%rcx
add    %rcx,%rdx
mov    -0x70(%rbp),%rcx
lea    -0x1(%rcx),%ebx
test   %ebx,%ebx
jne    32713 <JPEGEncodeRaw+0x353>
mov    -0x60(%rbp),%rdx
mov    -0x50(%rbp),%r12
mov    -0x30(%rbp),%rsi
mov    %r10,%rcx
jmpq   32531 <JPEGEncodeRaw+0x171>
mov    %rbx,-0x70(%rbp)
mov    %r10,%rcx
jmp    326e9 <JPEGEncodeRaw+0x329>
nopl   0x0(%rax)

0000000000032720 <JPEGInitializeLibJPEG>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    $0x1,%eax
xor    %edx,%edx
mov    0x350(%rdi),%rcx
movslq 0x290(%rcx),%rdi
test   %edi,%edi
jne    32759 <JPEGInitializeLibJPEG+0x39>
test   %esi,%esi
jne    3276b <JPEGInitializeLibJPEG+0x4b>
mov    %rcx,%rdi
mov    %rcx,-0x10(%rbp)
callq  329c0 <TIFFjpeg_create_compress>
test   %eax,%eax
jne    32794 <JPEGInitializeLibJPEG+0x74>
xor    %eax,%eax
leaveq 
retq   
test   %esi,%esi
je     327c6 <JPEGInitializeLibJPEG+0xa6>
mov    %rax,%rdx
test   %rdx,%rdx
jne    32801 <JPEGInitializeLibJPEG+0xe1>
leaveq 
retq   
mov    %rcx,%rdi
mov    %rcx,-0x8(%rbp)
callq  32a50 <TIFFjpeg_create_decompress>
test   %eax,%eax
je     3280b <JPEGInitializeLibJPEG+0xeb>
mov    -0x8(%rbp),%rax
movl   $0x1,0x290(%rax)
mov    $0x1,%eax
leaveq 
retq   
mov    -0x10(%rbp),%rax
mov    0x8(%rax),%rcx
mov    0x58(%rcx),%rcx
test   %rcx,%rcx
jle    32783 <JPEGInitializeLibJPEG+0x63>
lea    0x3d35d(%rip),%rdi        # 6fb09 <module.62+0x3d7>
mov    %r15,-0x10(%rbp)
mov    %rax,%r15
callq  8040 <getenv@plt>
test   %rax,%rax
je     3280f <JPEGInitializeLibJPEG+0xef>
mov    %r15,%rax
mov    -0x10(%rbp),%r15
jmp    32783 <JPEGInitializeLibJPEG+0x63>
movslq 0x20(%rcx),%rdi
test   %edi,%edi
je     32760 <JPEGInitializeLibJPEG+0x40>
mov    %rcx,%rdi
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rcx,%r14
mov    %rsi,%r15
callq  32fb0 <TIFFjpeg_destroy>
mov    %r14,%rcx
mov    %r15,%rsi
movl   $0x0,0x290(%rcx)
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
jmpq   32741 <JPEGInitializeLibJPEG+0x21>
movslq 0x20(%rcx),%rdx
test   %edx,%edx
je     3282b <JPEGInitializeLibJPEG+0x10b>
leaveq 
retq   
xor    %eax,%eax
leaveq 
retq   
mov    0x8(%r15),%rcx
mov    0x58(%rcx),%rax
cmp    $0x9fffff,%rax
jle    32849 <JPEGInitializeLibJPEG+0x129>
mov    %r15,%rax
mov    -0x10(%rbp),%r15
jmpq   32783 <JPEGInitializeLibJPEG+0x63>
mov    %rcx,%rdi
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rsi,%r14
mov    %rcx,%r15
callq  32fb0 <TIFFjpeg_destroy>
mov    %r15,%rcx
mov    %r14,%rsi
jmp    327ea <JPEGInitializeLibJPEG+0xca>
movq   $0xa00000,0x58(%rcx)
mov    %r15,%rax
mov    -0x10(%rbp),%r15
jmpq   32783 <JPEGInitializeLibJPEG+0x63>
nopl   (%rax)

0000000000032860 <DecodeRowError>:
push   %rbp
mov    %rsp,%rbp
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
lea    0x3d29d(%rip),%rsi        # 6fb11 <module.62+0x3df>
lea    0x3d2a7(%rip),%rdx        # 6fb22 <module.62+0x3f0>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nop

0000000000032890 <TIFFjpeg_error_exit>:
push   %rbp
mov    %rsp,%rbp
sub    $0xd0,%rsp
mov    (%rdi),%rax
mov    0x18(%rax),%rax
lea    -0xc8(%rbp),%r12
mov    %rdi,%rbx
mov    %r12,%rsi
callq  *%rax
xor    %eax,%eax
mov    0x488(%rbx),%rcx
mov    0x3b8(%rcx),%rdi
mov    %r12,%rcx
lea    0x3d2f0(%rip),%rsi        # 6fbbb <module.62+0x489>
lea    0x3d2f1(%rip),%rdx        # 6fbc3 <module.62+0x491>
callq  8a00 <TIFFErrorExt@plt>
mov    %rbx,%rdi
callq  81c0 <jpeg_abort@plt>
lea    0x340(%rbx),%rdi
mov    $0x1,%esi
callq  8a40 <longjmp@plt>

00000000000328f0 <TIFFjpeg_output_message>:
push   %rbp
mov    %rsp,%rbp
sub    $0xd0,%rsp
mov    %r15,-0x8(%rbp)
mov    (%rdi),%rax
mov    0x18(%rax),%rax
lea    -0xd0(%rbp),%rsi
mov    %rdi,%r15
callq  *%rax
xor    %eax,%eax
mov    0x488(%r15),%rcx
mov    0x3b8(%rcx),%rdi
lea    0x3d292(%rip),%rsi        # 6fbbb <module.62+0x489>
lea    0x3d293(%rip),%rdx        # 6fbc3 <module.62+0x491>
lea    -0xd0(%rbp),%rcx
callq  85a0 <TIFFWarningExt@plt>
mov    -0x8(%rbp),%r15
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   (%rax)

0000000000032950 <TIFFjpeg_progress_monitor>:
push   %rbp
mov    %rsp,%rbp
movslq 0x20(%rdi),%rax
test   %eax,%eax
jne    3295e <TIFFjpeg_progress_monitor+0xe>
leaveq 
retq   
movslq 0xac(%rdi),%rcx
movslq 0x53c(%rdi),%r8
cmp    %ecx,%r8d
jle    32973 <TIFFjpeg_progress_monitor+0x23>
leaveq 
retq   
xor    %eax,%eax
mov    0x488(%rdi),%rdx
mov    0x3b8(%rdx),%rbx
mov    %rbx,%r9
mov    %rdi,%rbx
mov    %r9,%rdi
lea    0x3d233(%rip),%rsi        # 6fbc6 <module.62+0x494>
lea    0x3d246(%rip),%rdx        # 6fbe0 <module.62+0x4ae>
callq  8a00 <TIFFErrorExt@plt>
mov    %rbx,%rdi
callq  81c0 <jpeg_abort@plt>
lea    0x340(%rbx),%rdi
mov    $0x1,%esi
callq  8a40 <longjmp@plt>
nopl   0x0(%rax,%rax,1)

00000000000329c0 <TIFFjpeg_create_compress>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rdi,%r14
lea    0x298(%r14),%r15
mov    %r15,%rdi
callq  89f0 <jpeg_std_error@plt>
mov    %rax,(%r14)
lea    -0x15c(%rip),%rax        # 32890 <TIFFjpeg_error_exit>
mov    %rax,(%r15)
lea    -0x106(%rip),%rax        # 328f0 <TIFFjpeg_output_message>
mov    %rax,0x2a8(%r14)
movq   $0x0,0x18(%r14)
lea    0x340(%r14),%rdi
callq  8630 <_setjmp@plt>
test   %eax,%eax
je     32a21 <TIFFjpeg_create_compress+0x61>
xor    %eax,%eax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
mov    %r14,%rdi
mov    $0x50,%esi
mov    $0x248,%edx
callq  89c0 <jpeg_CreateCompress@plt>
mov    $0x1,%eax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   (%rax)

0000000000032a50 <TIFFjpeg_create_decompress>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rdi,%r14
lea    0x298(%r14),%r15
mov    %r15,%rdi
callq  89f0 <jpeg_std_error@plt>
mov    %rax,(%r14)
lea    -0x1ec(%rip),%rax        # 32890 <TIFFjpeg_error_exit>
mov    %rax,(%r15)
lea    -0x196(%rip),%rax        # 328f0 <TIFFjpeg_output_message>
mov    %rax,0x2a8(%r14)
movq   $0x0,0x18(%r14)
lea    0x340(%r14),%rdi
callq  8630 <_setjmp@plt>
test   %eax,%eax
je     32ab1 <TIFFjpeg_create_decompress+0x61>
xor    %eax,%eax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
mov    %r14,%rdi
mov    $0x50,%esi
mov    $0x290,%edx
callq  87a0 <jpeg_CreateDecompress@plt>
mov    $0x1,%eax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   (%rax)

0000000000032ae0 <TIFFjpeg_set_defaults>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x8(%rbp)
mov    %rdi,%r15
lea    0x340(%r15),%rdi
callq  8630 <_setjmp@plt>
test   %eax,%eax
je     32b07 <TIFFjpeg_set_defaults+0x27>
xor    %eax,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
mov    %r15,%rdi
callq  8b20 <jpeg_set_defaults@plt>
mov    $0x1,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

0000000000032b20 <TIFFjpeg_set_colorspace>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x10(%rbp)
mov    %rsi,-0x8(%rbp)
mov    %rdi,%r15
lea    0x340(%r15),%rdi
callq  8630 <_setjmp@plt>
test   %eax,%eax
je     32b4b <TIFFjpeg_set_colorspace+0x2b>
xor    %eax,%eax
mov    -0x10(%rbp),%r15
leaveq 
retq   
mov    %r15,%rdi
mov    -0x8(%rbp),%rsi
callq  88b0 <jpeg_set_colorspace@plt>
mov    $0x1,%eax
mov    -0x10(%rbp),%r15
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   (%rax)

0000000000032b70 <TIFFjpeg_set_quality>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %r15,-0x18(%rbp)
mov    %rsi,-0x8(%rbp)
mov    %rdx,-0x10(%rbp)
mov    %rdi,%r15
lea    0x340(%r15),%rdi
callq  8630 <_setjmp@plt>
test   %eax,%eax
je     32b9f <TIFFjpeg_set_quality+0x2f>
xor    %eax,%eax
mov    -0x18(%rbp),%r15
leaveq 
retq   
mov    %r15,%rdi
mov    -0x10(%rbp),%rdx
mov    -0x8(%rbp),%rsi
callq  8090 <jpeg_set_quality@plt>
mov    $0x1,%eax
mov    -0x18(%rbp),%r15
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

0000000000032bc0 <TIFFjpeg_suppress_tables>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x10(%rbp)
mov    %rsi,-0x8(%rbp)
mov    %rdi,%r15
lea    0x340(%r15),%rdi
callq  8630 <_setjmp@plt>
test   %eax,%eax
je     32beb <TIFFjpeg_suppress_tables+0x2b>
xor    %eax,%eax
mov    -0x10(%rbp),%r15
leaveq 
retq   
mov    %r15,%rdi
mov    -0x8(%rbp),%rsi
callq  82c0 <jpeg_suppress_tables@plt>
mov    $0x1,%eax
mov    -0x10(%rbp),%r15
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   (%rax)

0000000000032c10 <TIFFjpeg_start_compress>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x10(%rbp)
mov    %rsi,-0x8(%rbp)
mov    %rdi,%r15
lea    0x340(%r15),%rdi
callq  8630 <_setjmp@plt>
test   %eax,%eax
je     32c3b <TIFFjpeg_start_compress+0x2b>
xor    %eax,%eax
mov    -0x10(%rbp),%r15
leaveq 
retq   
mov    %r15,%rdi
mov    -0x8(%rbp),%rsi
callq  8bc0 <jpeg_start_compress@plt>
mov    $0x1,%eax
mov    -0x10(%rbp),%r15
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   (%rax)

0000000000032c60 <TIFFjpeg_write_scanlines>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %r15,-0x18(%rbp)
mov    %rsi,-0x8(%rbp)
mov    %rdx,-0x10(%rbp)
mov    %rdi,%r15
lea    0x340(%r15),%rdi
callq  8630 <_setjmp@plt>
test   %eax,%eax
je     32c94 <TIFFjpeg_write_scanlines+0x34>
mov    $0xffffffffffffffff,%rax
mov    -0x18(%rbp),%r15
leaveq 
retq   
mov    %r15,%rdi
mov    -0x10(%rbp),%rdx
mov    -0x8(%rbp),%rsi
callq  8330 <jpeg_write_scanlines@plt>
mov    -0x18(%rbp),%r15
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

0000000000032cb0 <TIFFjpeg_write_raw_data>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %r15,-0x18(%rbp)
mov    %rsi,-0x8(%rbp)
mov    %rdx,-0x10(%rbp)
mov    %rdi,%r15
lea    0x340(%r15),%rdi
callq  8630 <_setjmp@plt>
test   %eax,%eax
je     32ce4 <TIFFjpeg_write_raw_data+0x34>
mov    $0xffffffffffffffff,%rax
mov    -0x18(%rbp),%r15
leaveq 
retq   
mov    %r15,%rdi
mov    -0x10(%rbp),%rdx
mov    -0x8(%rbp),%rsi
callq  86c0 <jpeg_write_raw_data@plt>
mov    -0x18(%rbp),%r15
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

0000000000032d00 <TIFFjpeg_finish_compress>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x8(%rbp)
mov    %rdi,%r15
lea    0x340(%r15),%rdi
callq  8630 <_setjmp@plt>
test   %eax,%eax
je     32d27 <TIFFjpeg_finish_compress+0x27>
xor    %eax,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
mov    %r15,%rdi
callq  8c90 <jpeg_finish_compress@plt>
mov    $0x1,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

0000000000032d40 <TIFFjpeg_write_tables>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x8(%rbp)
mov    %rdi,%r15
lea    0x340(%r15),%rdi
callq  8630 <_setjmp@plt>
test   %eax,%eax
je     32d67 <TIFFjpeg_write_tables+0x27>
xor    %eax,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
mov    %r15,%rdi
callq  80b0 <jpeg_write_tables@plt>
mov    $0x1,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

0000000000032d80 <TIFFjpeg_read_header>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x10(%rbp)
mov    %rsi,-0x8(%rbp)
mov    %rdi,%r15
lea    0x340(%r15),%rdi
callq  8630 <_setjmp@plt>
test   %eax,%eax
je     32db0 <TIFFjpeg_read_header+0x30>
mov    $0xffffffffffffffff,%rax
mov    -0x10(%rbp),%r15
leaveq 
retq   
mov    %r15,%rdi
mov    -0x8(%rbp),%rsi
callq  8a30 <jpeg_read_header@plt>
mov    -0x10(%rbp),%r15
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   (%rax)

0000000000032dd0 <TIFFjpeg_has_multiple_scans>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x8(%rbp)
mov    %rdi,%r15
lea    0x340(%r15),%rdi
callq  8630 <_setjmp@plt>
test   %eax,%eax
je     32df7 <TIFFjpeg_has_multiple_scans+0x27>
xor    %eax,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
mov    %r15,%rdi
callq  83b0 <jpeg_has_multiple_scans@plt>
mov    -0x8(%rbp),%r15
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)

0000000000032e10 <TIFFjpeg_start_decompress>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x8(%rbp)
lea    0x408(%rdi),%rcx
mov    %rcx,0x10(%rdi)
lea    -0x4de(%rip),%rax        # 32950 <TIFFjpeg_progress_monitor>
mov    %rax,(%rcx)
mov    %rdi,%r15
movl   $0x64,0x53c(%r15)
lea    0x3ce25(%rip),%rdi        # 6fc6b <module.62+0x539>
callq  8040 <getenv@plt>
test   %rax,%rax
je     32e5f <TIFFjpeg_start_decompress+0x4f>
mov    %rax,%rdi
callq  8b90 <atoi@plt>
mov    %eax,0x53c(%r15)
lea    0x340(%r15),%rdi
callq  8630 <_setjmp@plt>
test   %eax,%eax
je     32e77 <TIFFjpeg_start_decompress+0x67>
xor    %eax,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
mov    %r15,%rdi
callq  8670 <jpeg_start_decompress@plt>
mov    $0x1,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

0000000000032e90 <TIFFjpeg_read_scanlines>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %r15,-0x18(%rbp)
mov    %rsi,-0x8(%rbp)
mov    %rdx,-0x10(%rbp)
mov    %rdi,%r15
lea    0x340(%r15),%rdi
callq  8630 <_setjmp@plt>
test   %eax,%eax
je     32ec4 <TIFFjpeg_read_scanlines+0x34>
mov    $0xffffffffffffffff,%rax
mov    -0x18(%rbp),%r15
leaveq 
retq   
mov    %r15,%rdi
mov    -0x10(%rbp),%rdx
mov    -0x8(%rbp),%rsi
callq  86d0 <jpeg_read_scanlines@plt>
mov    -0x18(%rbp),%r15
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

0000000000032ee0 <TIFFjpeg_read_raw_data>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %r15,-0x18(%rbp)
mov    %rsi,-0x8(%rbp)
mov    %rdx,-0x10(%rbp)
mov    %rdi,%r15
lea    0x340(%r15),%rdi
callq  8630 <_setjmp@plt>
test   %eax,%eax
je     32f14 <TIFFjpeg_read_raw_data+0x34>
mov    $0xffffffffffffffff,%rax
mov    -0x18(%rbp),%r15
leaveq 
retq   
mov    %r15,%rdi
mov    -0x10(%rbp),%rdx
mov    -0x8(%rbp),%rsi
callq  8420 <jpeg_read_raw_data@plt>
mov    -0x18(%rbp),%r15
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

0000000000032f30 <TIFFjpeg_finish_decompress>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x8(%rbp)
mov    %rdi,%r15
lea    0x340(%r15),%rdi
callq  8630 <_setjmp@plt>
test   %eax,%eax
je     32f5c <TIFFjpeg_finish_decompress+0x2c>
mov    $0xffffffffffffffff,%rax
mov    -0x8(%rbp),%r15
leaveq 
retq   
mov    %r15,%rdi
callq  8380 <jpeg_finish_decompress@plt>
mov    -0x8(%rbp),%r15
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

0000000000032f70 <TIFFjpeg_abort>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x8(%rbp)
mov    %rdi,%r15
lea    0x340(%r15),%rdi
callq  8630 <_setjmp@plt>
test   %eax,%eax
je     32f97 <TIFFjpeg_abort+0x27>
xor    %eax,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
mov    %r15,%rdi
callq  81c0 <jpeg_abort@plt>
mov    $0x1,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

0000000000032fb0 <TIFFjpeg_destroy>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x8(%rbp)
mov    %rdi,%r15
lea    0x340(%r15),%rdi
callq  8630 <_setjmp@plt>
test   %eax,%eax
je     32fd7 <TIFFjpeg_destroy+0x27>
xor    %eax,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
mov    %r15,%rdi
callq  81f0 <jpeg_destroy@plt>
mov    $0x1,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

0000000000032ff0 <TIFFjpeg_alloc_sarray>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %r15,-0x20(%rbp)
mov    %rsi,-0x8(%rbp)
mov    %rdx,-0x10(%rbp)
mov    %rcx,-0x18(%rbp)
mov    %rdi,%r15
lea    0x340(%r15),%rdi
callq  8630 <_setjmp@plt>
test   %eax,%eax
je     33023 <TIFFjpeg_alloc_sarray+0x33>
xor    %eax,%eax
mov    -0x20(%rbp),%r15
leaveq 
retq   
mov    0x8(%r15),%rax
mov    0x10(%rax),%rax
mov    %r15,%rdi
mov    -0x18(%rbp),%rcx
mov    -0x10(%rbp),%rdx
mov    -0x8(%rbp),%rsi
callq  *%rax
mov    -0x20(%rbp),%r15
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   (%rax)

0000000000033050 <std_init_destination>:
push   %rbp
mov    %rsp,%rbp
mov    0x488(%rdi),%rax
mov    0x368(%rax),%rcx
mov    %rcx,0x428(%rdi)
mov    0x370(%rax),%rax
mov    %rax,0x430(%rdi)
leaveq 
retq   
nopl   0x0(%rax)

0000000000033080 <std_empty_output_buffer>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    0x488(%rdi),%r14
mov    0x370(%r14),%rax
mov    %rax,0x390(%r14)
mov    %rdi,%r15
mov    %r14,%rdi
callq  86e0 <TIFFFlushData1@plt>
mov    0x368(%r14),%rax
mov    %rax,0x428(%r15)
mov    0x370(%r14),%rax
mov    %rax,0x430(%r15)
mov    $0x1,%eax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

00000000000330e0 <std_term_destination>:
push   %rbp
mov    %rsp,%rbp
mov    0x488(%rdi),%rdx
mov    0x428(%rdi),%rax
mov    %rax,0x388(%rdx)
mov    0x370(%rdx),%rax
mov    0x430(%rdi),%rcx
sub    %rcx,%rax
mov    %rax,0x390(%rdx)
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

0000000000033120 <TIFFjpeg_data_dest>:
push   %rbp
mov    %rsp,%rbp
lea    0x428(%rdi),%rax
mov    %rax,0x28(%rdi)
lea    -0xe6(%rip),%rax        # 33050 <std_init_destination>
mov    %rax,0x438(%rdi)
lea    -0xc4(%rip),%rax        # 33080 <std_empty_output_buffer>
mov    %rax,0x440(%rdi)
lea    -0x72(%rip),%rax        # 330e0 <std_term_destination>
mov    %rax,0x448(%rdi)
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

0000000000033160 <tables_init_destination>:
push   %rbp
mov    %rsp,%rbp
mov    0x520(%rdi),%rax
mov    %rax,0x428(%rdi)
mov    0x528(%rdi),%eax
mov    %rax,0x430(%rdi)
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   0x0(%rax)

0000000000033190 <tables_empty_output_buffer>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x10(%rbp)
mov    0x520(%rdi),%rcx
mov    0x528(%rdi),%eax
add    $0x3e8,%eax
mov    %eax,%esi
mov    %rdi,%r15
mov    %rcx,%rdi
callq  8100 <_TIFFrealloc@plt>
test   %rax,%rax
jne    331ed <tables_empty_output_buffer+0x5d>
mov    (%r15),%rcx
movl   $0x38,0x28(%rcx)
mov    (%r15),%rcx
movl   $0x64,0x2c(%rcx)
mov    (%r15),%rcx
mov    (%rcx),%rcx
mov    %r15,%rdi
mov    %r14,-0x8(%rbp)
mov    %rax,%r14
callq  *%rcx
mov    %r14,%rax
mov    -0x8(%rbp),%r14
mov    0x528(%r15),%edx
lea    (%rax,%rdx,1),%rcx
mov    %rcx,0x428(%r15)
movq   $0x3e8,0x430(%r15)
mov    %rax,0x520(%r15)
lea    0x3e8(%rdx),%eax
mov    %eax,0x528(%r15)
mov    $0x1,%eax
mov    -0x10(%rbp),%r15
leaveq 
retq   
nopl   0x0(%rax)

0000000000033230 <tables_term_destination>:
push   %rbp
mov    %rsp,%rbp
mov    0x528(%rdi),%eax
mov    0x430(%rdi),%ecx
sub    %ecx,%eax
mov    %eax,0x528(%rdi)
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

0000000000033250 <TIFFjpeg_tables_dest>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x8(%rbp)
mov    0x520(%rdi),%rax
test   %rax,%rax
jne    3326d <TIFFjpeg_tables_dest+0x1d>
mov    %rdi,%r15
jmp    33278 <TIFFjpeg_tables_dest+0x28>
mov    %rdi,%r15
mov    %rax,%rdi
callq  8bb0 <_TIFFfree@plt>
movl   $0x3e8,0x528(%r15)
mov    $0x3e8,%edi
callq  8440 <_TIFFmalloc@plt>
mov    %rax,0x520(%r15)
test   %rax,%rax
je     332d9 <TIFFjpeg_tables_dest+0x89>
lea    0x428(%r15),%rax
mov    %rax,0x28(%r15)
lea    -0x14b(%rip),%rax        # 33160 <tables_init_destination>
mov    %rax,0x438(%r15)
lea    -0x129(%rip),%rax        # 33190 <tables_empty_output_buffer>
mov    %rax,0x440(%r15)
lea    -0x97(%rip),%rax        # 33230 <tables_term_destination>
mov    %rax,0x448(%r15)
mov    $0x1,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
movl   $0x0,0x528(%r15)
mov    0x488(%r15),%rax
mov    0x3b8(%rax),%rdi
lea    0x3c997(%rip),%rsi        # 6fc90 <module.62+0x55e>
lea    0x3c9a5(%rip),%rdx        # 6fca5 <module.62+0x573>
xor    %r15d,%r15d
mov    %r15,%rax
callq  8a00 <TIFFErrorExt@plt>
mov    %r15,%rax
mov    -0x8(%rbp),%r15
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nop

0000000000033320 <std_init_source>:
push   %rbp
mov    %rsp,%rbp
mov    0x488(%rdi),%rax
mov    0x368(%rax),%rcx
mov    %rcx,0x450(%rdi)
mov    0x390(%rax),%rax
mov    %rax,0x458(%rdi)
leaveq 
retq   
nopl   0x0(%rax)

0000000000033350 <std_fill_input_buffer>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x8(%rbp)
mov    (%rdi),%rax
movl   $0x7b,0x28(%rax)
mov    (%rdi),%rax
mov    0x8(%rax),%rax
mov    $0xffffffffffffffff,%rsi
mov    %rdi,%r15
callq  *%rax
lea    0x3c93d(%rip),%rax        # 6fcbd <dummy_EOI.43>
mov    %rax,0x450(%r15)
movq   $0x2,0x458(%r15)
mov    $0x1,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
nopl   (%rax)

00000000000333a0 <std_skip_input_data>:
push   %rbp
mov    %rsp,%rbp
test   %rsi,%rsi
jg     333ab <std_skip_input_data+0xb>
leaveq 
retq   
mov    0x458(%rdi),%rax
cmp    %rsi,%rax
jb     333d4 <std_skip_input_data+0x34>
mov    %rsi,%rcx
add    0x450(%rdi),%rcx
mov    %rcx,0x450(%rdi)
sub    %rsi,%rax
mov    %rax,0x458(%rdi)
leaveq 
retq   
callq  33350 <std_fill_input_buffer>
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

00000000000333e0 <std_term_source>:
push   %rbp
mov    %rsp,%rbp
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)

00000000000333f0 <TIFFjpeg_data_src>:
push   %rbp
mov    %rsp,%rbp
lea    0x450(%rdi),%rcx
mov    %rcx,0x28(%rdi)
lea    -0xe6(%rip),%rax        # 33320 <std_init_source>
mov    %rax,0x460(%rdi)
lea    -0xc4(%rip),%rax        # 33350 <std_fill_input_buffer>
mov    %rax,0x468(%rdi)
lea    -0x82(%rip),%rax        # 333a0 <std_skip_input_data>
mov    %rax,0x470(%rdi)
mov    0x46b58(%rip),%rax        # 79f88 <jpeg_resync_to_restart@LIBJPEG_8.0>
mov    %rax,0x478(%rdi)
lea    -0x5e(%rip),%rax        # 333e0 <std_term_source>
mov    %rax,0x480(%rdi)
movq   $0x0,0x458(%rdi)
movq   $0x0,(%rcx)
leaveq 
retq   
nopl   0x0(%rax)

0000000000033460 <tables_init_source>:
push   %rbp
mov    %rsp,%rbp
mov    0x520(%rdi),%rax
mov    %rax,0x450(%rdi)
mov    0x528(%rdi),%eax
mov    %rax,0x458(%rdi)
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   0x0(%rax)

0000000000033490 <TIFFjpeg_tables_src>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x8(%rbp)
mov    %rdi,%r15
callq  333f0 <TIFFjpeg_data_src>
lea    -0x4b(%rip),%rax        # 33460 <tables_init_source>
mov    %rax,0x460(%r15)
mov    -0x8(%rbp),%r15
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

00000000000334c0 <alloc_downsampled_buffers>:
push   %rbp
mov    %rsp,%rbp
sub    $0x40,%rsp
mov    %rdx,-0x38(%rbp)
mov    %rbx,-0x10(%rbp)
mov    %r12,-0x18(%rbp)
mov    %r13,-0x20(%rbp)
mov    %r14,-0x28(%rbp)
mov    %r15,-0x30(%rbp)
mov    0x350(%rdi),%r13
mov    %rsi,%rbx
mov    $0x1,%esi
xor    %r12d,%r12d
mov    %r12,%rax
jmp    33543 <alloc_downsampled_buffers+0x83>
movslq 0x8(%rbx),%r15
mov    0x1c(%rbx),%edx
shl    $0x3,%edx
movslq 0xc(%rbx),%r14
mov    %r14,%rcx
shl    $0x3,%ecx
mov    %r13,%rdi
mov    %rax,-0x8(%rbp)
callq  32ff0 <TIFFjpeg_alloc_sarray>
test   %rax,%rax
je     33568 <alloc_downsampled_buffers+0xa8>
movslq %r12d,%rcx
mov    %rax,0x4a0(%r13,%rcx,8)
add    $0x60,%rbx
imul   %r15d,%r14d
mov    -0x8(%rbp),%rax
add    %r14d,%eax
add    $0x1,%r12d
mov    $0x1,%esi
mov    -0x38(%rbp),%rdx
cmp    %edx,%r12d
jl     334f7 <alloc_downsampled_buffers+0x37>
mov    %eax,0x4f4(%r13)
mov    %rsi,%rax
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
mov    -0x10(%rbp),%rbx
leaveq 
retq   
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
mov    -0x10(%rbp),%rbx
xor    %eax,%eax
leaveq 
retq   

0000000000033580 <JPEGFixupTagsSubsampling>:
push   %rbp
mov    %rsp,%rbp
sub    $0x50,%rsp
mov    %r15,-0x8(%rbp)
mov    %rdi,%r15
callq  8c70 <_TIFFFillStriles@plt>
mov    0xf0(%r15),%rcx
test   %rcx,%rcx
jne    335a6 <JPEGFixupTagsSubsampling+0x26>
mov    -0x8(%rbp),%r15
leaveq 
retq   
mov    0xe8(%r15),%rax
test   %rax,%rax
jne    335b8 <JPEGFixupTagsSubsampling+0x38>
mov    -0x8(%rbp),%r15
leaveq 
retq   
mov    (%rcx),%rax
test   %rax,%rax
jne    335c6 <JPEGFixupTagsSubsampling+0x46>
mov    -0x8(%rbp),%r15
leaveq 
retq   
mov    %r15,-0x48(%rbp)
movl   $0x800,-0x38(%rbp)
mov    $0x800,%edi
callq  8440 <_TIFFmalloc@plt>
mov    %rax,-0x40(%rbp)
lea    0x3c6d9(%rip),%rsi        # 6fcbf <module.44>
test   %rax,%rax
je     33652 <JPEGFixupTagsSubsampling+0xd2>
movq   $0x0,-0x30(%rbp)
movl   $0x0,-0x28(%rbp)
mov    0xe8(%r15),%rax
mov    (%rax),%rax
mov    %rax,-0x20(%rbp)
movb   $0x0,-0x10(%rbp)
mov    0xf0(%r15),%rax
mov    (%rax),%rax
mov    %rax,-0x18(%rbp)
lea    -0x48(%rbp),%rdi
callq  33670 <JPEGFixupTagsSubsamplingSec>
test   %eax,%eax
jne    33643 <JPEGFixupTagsSubsampling+0xc3>
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
lea    0x3c6fe(%rip),%rdx        # 6fd35 <module.44+0x76>
lea    0x3c681(%rip),%rsi        # 6fcbf <module.44>
callq  85a0 <TIFFWarningExt@plt>
mov    -0x40(%rbp),%rdi
callq  8bb0 <_TIFFfree@plt>
mov    -0x8(%rbp),%r15
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
lea    0x3c676(%rip),%rdx        # 6fcd8 <module.44+0x19>
callq  85a0 <TIFFWarningExt@plt>
mov    -0x8(%rbp),%r15
leaveq 
retq   
nopl   (%rax)

0000000000033670 <JPEGFixupTagsSubsamplingSec>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rdi,%r13
lea    -0x2f(%rbp),%r14
xor    %r12d,%r12d
lea    -0x2e(%rbp),%r15
jmp    336a0 <JPEGFixupTagsSubsamplingSec+0x30>
movzbl -0x2f(%rbp),%eax
cmp    $0xff,%al
je     336cc <JPEGFixupTagsSubsamplingSec+0x5c>
mov    %r13,%rdi
mov    %r14,%rsi
callq  339e0 <JPEGFixupTagsSubsamplingReadByte>
test   %eax,%eax
jne    33698 <JPEGFixupTagsSubsamplingSec+0x28>
mov    %r12,%rax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
leaveq 
retq   
movzbl -0x2f(%rbp),%eax
cmp    $0xfe,%al
jbe    336f0 <JPEGFixupTagsSubsamplingSec+0x80>
mov    %r13,%rdi
mov    %r14,%rsi
callq  339e0 <JPEGFixupTagsSubsamplingReadByte>
test   %eax,%eax
jne    336c4 <JPEGFixupTagsSubsamplingSec+0x54>
mov    %r12,%rax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
leaveq 
retq   
add    $0xffffff40,%eax
cmp    $0x3e,%eax
ja     33747 <JPEGFixupTagsSubsamplingSec+0xd7>
lea    0x3c163(%rip),%rcx        # 6f864 <module.62+0x132>
movslq (%rcx,%rax,4),%rax
add    %rcx,%rax
jmpq   *%rax
mov    %r13,%rdi
mov    %r15,%rsi
callq  33b20 <JPEGFixupTagsSubsamplingReadWord>
test   %eax,%eax
je     33796 <JPEGFixupTagsSubsamplingSec+0x126>
movzwl -0x2e(%rbp),%eax
cmp    $0x1,%ax
jbe    337ab <JPEGFixupTagsSubsamplingSec+0x13b>
lea    0xfffe(%rax),%esi
mov    %si,-0x2e(%rbp)
test   %si,%si
je     336a0 <JPEGFixupTagsSubsamplingSec+0x30>
mov    %r13,%rdi
callq  33b80 <JPEGFixupTagsSubsamplingSkip>
jmpq   336a0 <JPEGFixupTagsSubsamplingSec+0x30>
mov    %r12,%rax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
leaveq 
retq   
lea    -0x2c(%rbp),%rsi
mov    %r13,%rdi
callq  33b20 <JPEGFixupTagsSubsamplingReadWord>
test   %eax,%eax
jne    337c0 <JPEGFixupTagsSubsamplingSec+0x150>
mov    %r12,%rax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
leaveq 
retq   
mov    %r12,%rax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
leaveq 
retq   
mov    %r12,%rax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
leaveq 
retq   
mov    %r12,%rax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
leaveq 
retq   
mov    0x0(%r13),%rax
movzwl 0x82(%rax),%eax
lea    0x8(%rax,%rax,2),%ecx
movzwl -0x2c(%rbp),%eax
cmp    %eax,%ecx
je     337ec <JPEGFixupTagsSubsamplingSec+0x17c>
mov    %r12,%rax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
leaveq 
retq   
mov    $0x7,%esi
mov    %r13,%rdi
callq  33b80 <JPEGFixupTagsSubsamplingSkip>
lea    -0x29(%rbp),%r14
mov    %r13,%rdi
mov    %r14,%rsi
callq  339e0 <JPEGFixupTagsSubsamplingReadByte>
test   %eax,%eax
jne    33821 <JPEGFixupTagsSubsamplingSec+0x1b1>
mov    %r12,%rax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
leaveq 
retq   
movzbl -0x29(%rbp),%eax
mov    %rax,-0x8(%rbp)
mov    $0x1,%r12d
mov    %r13,%rdi
mov    %r12,%rsi
callq  33b80 <JPEGFixupTagsSubsamplingSkip>
mov    %r12,%r15
jmp    33878 <JPEGFixupTagsSubsamplingSec+0x208>
mov    %r13,%rdi
mov    %r12,%rsi
callq  33b80 <JPEGFixupTagsSubsamplingSkip>
mov    %r13,%rdi
mov    %r14,%rsi
callq  339e0 <JPEGFixupTagsSubsamplingReadByte>
test   %eax,%eax
je     338df <JPEGFixupTagsSubsamplingSec+0x26f>
movzbl -0x29(%rbp),%eax
cmp    $0x11,%al
jne    338f3 <JPEGFixupTagsSubsamplingSec+0x283>
mov    %r13,%rdi
mov    %r12,%rsi
callq  33b80 <JPEGFixupTagsSubsamplingSkip>
add    $0x1,%r15d
mov    0x0(%r13),%rdx
movzwl 0x82(%rdx),%eax
cmp    %r15w,%ax
ja     3383f <JPEGFixupTagsSubsamplingSec+0x1cf>
mov    -0x8(%rbp),%r14
mov    %r14,%r9
shr    $0x4,%r9d
cmp    $0x1,%r9b
je     33928 <JPEGFixupTagsSubsamplingSec+0x2b8>
cmp    $0x2,%r9b
je     33928 <JPEGFixupTagsSubsamplingSec+0x2b8>
cmp    $0x4,%r9b
je     33928 <JPEGFixupTagsSubsamplingSec+0x2b8>
xor    %eax,%eax
mov    0x3b8(%rdx),%rdi
lea    0x3c50f(%rip),%rdx        # 6fdcd <module.47+0x1c>
lea    0x3c4ec(%rip),%rsi        # 6fdb1 <module.47>
callq  85a0 <TIFFWarningExt@plt>
mov    %r12,%rax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
leaveq 
retq   
xor    %eax,%eax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
leaveq 
retq   
xor    %eax,%eax
mov    0x0(%r13),%rcx
mov    0x3b8(%rcx),%rdi
lea    0x3c4c6(%rip),%rdx        # 6fdcd <module.47+0x1c>
lea    0x3c4a3(%rip),%rsi        # 6fdb1 <module.47>
callq  85a0 <TIFFWarningExt@plt>
mov    %r12,%rax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
leaveq 
retq   
and    $0xf,%r14d
cmp    $0x1,%r14b
je     33942 <JPEGFixupTagsSubsamplingSec+0x2d2>
cmp    $0x2,%r14b
je     33942 <JPEGFixupTagsSubsamplingSec+0x2d2>
cmp    $0x4,%r14b
jne    338ae <JPEGFixupTagsSubsamplingSec+0x23e>
movzbl %r9b,%r15d
movzwl 0x108(%rdx),%eax
cmp    %ax,%r15w
je     339ba <JPEGFixupTagsSubsamplingSec+0x34a>
sub    $0x10,%rsp
xor    %eax,%eax
mov    0x0(%r13),%rsi
mov    0x3b8(%rsi),%rdi
lea    0x3c4dc(%rip),%rdx        # 6fe47 <module.47+0x96>
movzwl 0x108(%rsi),%ecx
movzwl 0x10a(%rsi),%r8d
mov    %r14d,(%rsp)
lea    0x3c42c(%rip),%rsi        # 6fdb1 <module.47>
callq  85a0 <TIFFWarningExt@plt>
mov    0x0(%r13),%rax
mov    %r15w,0x108(%rax)
movzbl %r14b,%ecx
mov    0x0(%r13),%rax
mov    %cx,0x10a(%rax)
mov    %r12,%rax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
leaveq 
retq   
movzbl %r14b,%ecx
movzwl 0x10a(%rdx),%eax
cmp    %ax,%cx
jne    33953 <JPEGFixupTagsSubsamplingSec+0x2e3>
mov    %r12,%rax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
leaveq 
retq   
nop

00000000000339e0 <JPEGFixupTagsSubsamplingReadByte>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    0x20(%rdi),%eax
test   %eax,%eax
je     33a14 <JPEGFixupTagsSubsamplingReadByte+0x34>
mov    0x18(%rdi),%rax
movzbl (%rax),%eax
mov    %al,(%rsi)
mov    0x18(%rdi),%rax
add    $0x1,%rax
mov    %rax,0x18(%rdi)
mov    0x20(%rdi),%eax
add    $0xffffffff,%eax
mov    %eax,0x20(%rdi)
mov    $0x1,%eax
leaveq 
retq   
xor    %eax,%eax
mov    0x30(%rdi),%rcx
test   %rcx,%rcx
jne    33a21 <JPEGFixupTagsSubsamplingReadByte+0x41>
leaveq 
retq   
movzbl 0x38(%rdi),%ecx
test   %cl,%cl
jne    33a63 <JPEGFixupTagsSubsamplingReadByte+0x83>
mov    (%rdi),%rdx
mov    0x3d0(%rdx),%rcx
mov    0x3b8(%rdx),%rdx
mov    0x28(%rdi),%r8
mov    %r15,-0x20(%rbp)
mov    %rsi,-0x18(%rbp)
mov    %r8,%rsi
mov    %rdi,%r15
mov    %rdx,%rdi
mov    %rax,%rdx
callq  *%rcx
mov    %r15,%rdi
movb   $0x1,0x38(%rdi)
mov    -0x18(%rbp),%rsi
mov    -0x20(%rbp),%r15
mov    0x30(%rdi),%rax
mov    0x10(%rdi),%ecx
cmp    %rcx,%rax
jae    33a72 <JPEGFixupTagsSubsamplingReadByte+0x92>
mov    %rax,%rcx
cmp    $0x7fffffff,%ecx
jbe    33a99 <JPEGFixupTagsSubsamplingReadByte+0xb9>
lea    0x3c43c(%rip),%rdi        # 6febd <module.47+0x10c>
lea    0x3bef3(%rip),%rsi        # 6f97b <module.62+0x249>
mov    $0x3b7,%edx
lea    0x3c438(%rip),%rcx        # 6fecc <module.47+0x11b>
callq  8490 <__assert_fail@plt>
mov    (%rdi),%rdx
mov    0x3c0(%rdx),%rax
mov    0x3b8(%rdx),%r10
mov    0x8(%rdi),%r8
mov    %ecx,%r9d
mov    %r9,%rdx
mov    %r15,-0x20(%rbp)
mov    %rsi,-0x8(%rbp)
mov    %r14,-0x18(%rbp)
mov    %rcx,-0x10(%rbp)
mov    %r8,%rsi
mov    %r9,%r14
mov    %rdi,%r15
mov    %r10,%rdi
callq  *%rax
cmp    %r14,%rax
je     33ae3 <JPEGFixupTagsSubsamplingReadByte+0x103>
mov    -0x18(%rbp),%r14
xor    %eax,%eax
mov    -0x20(%rbp),%r15
leaveq 
retq   
mov    0x8(%r15),%rax
mov    %rax,0x18(%r15)
mov    -0x10(%rbp),%rax
mov    %eax,0x20(%r15)
mov    %eax,%ecx
mov    %rcx,%rax
add    0x28(%r15),%rax
mov    %rax,0x28(%r15)
mov    0x30(%r15),%rax
sub    %rcx,%rax
mov    %rax,0x30(%r15)
mov    %r15,%rdi
mov    -0x18(%rbp),%r14
mov    -0x8(%rbp),%rsi
mov    -0x20(%rbp),%r15
jmpq   339ef <JPEGFixupTagsSubsamplingReadByte+0xf>
nop

0000000000033b20 <JPEGFixupTagsSubsamplingReadWord>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %rdi,-0x10(%rbp)
mov    %rsi,-0x8(%rbp)
lea    -0x12(%rbp),%rsi
callq  339e0 <JPEGFixupTagsSubsamplingReadByte>
test   %eax,%eax
jne    33b41 <JPEGFixupTagsSubsamplingReadWord+0x21>
xor    %eax,%eax
leaveq 
retq   
lea    -0x11(%rbp),%rsi
mov    -0x10(%rbp),%rdi
callq  339e0 <JPEGFixupTagsSubsamplingReadByte>
test   %eax,%eax
jne    33b56 <JPEGFixupTagsSubsamplingReadWord+0x36>
xor    %eax,%eax
leaveq 
retq   
movzbl -0x11(%rbp),%ecx
movzbl -0x12(%rbp),%eax
shl    $0x8,%eax
add    %ecx,%eax
mov    -0x8(%rbp),%rcx
mov    %ax,(%rcx)
mov    $0x1,%eax
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   0x0(%rax)

0000000000033b80 <JPEGFixupTagsSubsamplingSkip>:
push   %rbp
mov    %rsp,%rbp
mov    0x20(%rdi),%ecx
movzwl %si,%edx
cmp    %edx,%ecx
jae    33bae <JPEGFixupTagsSubsamplingSkip+0x2e>
sub    %cx,%si
movzwl %si,%edx
mov    0x30(%rdi),%rax
cmp    %rdx,%rax
jae    33bc0 <JPEGFixupTagsSubsamplingSkip+0x40>
movl   $0x0,0x20(%rdi)
movq   $0x0,0x30(%rdi)
leaveq 
retq   
movzwl %si,%eax
add    0x18(%rdi),%rax
mov    %rax,0x18(%rdi)
sub    %edx,%ecx
mov    %ecx,0x20(%rdi)
leaveq 
retq   
movl   $0x0,0x20(%rdi)
mov    %rdx,%rcx
add    0x28(%rdi),%rcx
mov    %rcx,0x28(%rdi)
sub    %rdx,%rax
mov    %rax,0x30(%rdi)
movb   $0x0,0x38(%rdi)
leaveq 
retq   
nop

0000000000033be0 <JPEGFixupTags>:
push   %rbp
mov    %rsp,%rbp
mov    0x350(%rdi),%rdx
mov    $0x1,%eax
movzwl 0x7a(%rdi),%ecx
cmp    $0x6,%cx
je     33bfc <JPEGFixupTags+0x1c>
leaveq 
retq   
movzwl 0xaa(%rdi),%ecx
cmp    $0x1,%cx
je     33c0b <JPEGFixupTags+0x2b>
leaveq 
retq   
movzwl 0x82(%rdi),%ecx
cmp    $0x3,%cx
je     33c1a <JPEGFixupTags+0x3a>
leaveq 
retq   
movslq 0x538(%rdx),%rcx
test   %ecx,%ecx
je     33c27 <JPEGFixupTags+0x47>
leaveq 
retq   
callq  33580 <JPEGFixupTagsSubsampling>
mov    $0x1,%eax
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

0000000000033c40 <JPEGSetupDecode>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    $0x1,%esi
mov    0x350(%rdi),%r15
mov    %rdi,%r14
callq  32720 <JPEGInitializeLibJPEG>
test   %r15,%r15
jne    33c88 <JPEGSetupDecode+0x48>
lea    0x3be3d(%rip),%rdi        # 6faad <module.62+0x37b>
mov    $0x3fd,%edx
lea    0x3bcff(%rip),%rsi        # 6f97b <module.62+0x249>
lea    0x3c26a(%rip),%rcx        # 6feed <module.47+0x13c>
callq  8490 <__assert_fail@plt>
movslq 0x20(%r15),%rax
test   %eax,%eax
jne    33caf <JPEGSetupDecode+0x6f>
lea    0x3c266(%rip),%rdi        # 6fefd <module.47+0x14c>
mov    $0x3fe,%edx
lea    0x3bcd8(%rip),%rsi        # 6f97b <module.62+0x249>
lea    0x3c243(%rip),%rcx        # 6feed <module.47+0x13c>
callq  8490 <__assert_fail@plt>
mov    0x48(%r14),%rax
and    $0x4,%rax
test   %rax,%rax
jne    33ce5 <JPEGSetupDecode+0xa5>
movzwl 0x7a(%r14),%eax
mov    %ax,0x490(%r15)
cmp    $0x6,%ax
je     33d24 <JPEGSetupDecode+0xe4>
movw   $0x1,0x492(%r15)
movw   $0x1,0x494(%r15)
jmp    33d44 <JPEGSetupDecode+0x104>
mov    %r15,%rdi
callq  33490 <TIFFjpeg_tables_src>
xor    %esi,%esi
mov    %r15,%rdi
callq  32d80 <TIFFjpeg_read_header>
cmp    $0x2,%eax
je     33cbc <JPEGSetupDecode+0x7c>
xor    %eax,%eax
mov    0x3b8(%r14),%rdi
lea    0x3c210(%rip),%rdx        # 6ff1c <module.47+0x16b>
lea    0x3c1da(%rip),%rsi        # 6feed <module.47+0x13c>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
movzwl 0x108(%r14),%eax
mov    %ax,0x492(%r15)
movzwl 0x10a(%r14),%eax
mov    %ax,0x494(%r15)
mov    %r15,%rdi
callq  333f0 <TIFFjpeg_data_src>
mov    0x461f5(%rip),%rax        # 79f48 <_TIFFNoPostDecode@@Base+0x2f608>
mov    %rax,0x3e8(%r14)
mov    $0x1,%eax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
nopl   0x0(%rax)

0000000000033d70 <JPEGPreDecode>:
push   %rbp
mov    %rsp,%rbp
sub    $0x40,%rsp
lea    0x3bbfc(%rip),%r8        # 6f97b <module.62+0x249>
lea    0x3c1bb(%rip),%rcx        # 6ff41 <module.55+0xe>
mov    0x350(%rdi),%rax
test   %rax,%rax
jne    33da6 <JPEGPreDecode+0x36>
mov    %r8,%rsi
lea    0x3bd11(%rip),%rdi        # 6faad <module.62+0x37b>
mov    $0x44e,%edx
callq  8490 <__assert_fail@plt>
movslq 0x20(%rax),%rdx
test   %edx,%edx
je     33db6 <JPEGPreDecode+0x46>
mov    %rsi,%rdx
mov    %r8,%rsi
jmp    33df1 <JPEGPreDecode+0x81>
mov    %rdi,%rcx
mov    %r15,-0x30(%rbp)
mov    %rdi,-0x40(%rbp)
mov    %rsi,-0x38(%rbp)
mov    %rax,%r15
mov    %rdi,%rax
mov    %rcx,%rdi
callq  *0x2c8(%rax)
mov    %r15,%rax
lea    0x3c163(%rip),%rcx        # 6ff41 <module.55+0xe>
lea    0x3bb96(%rip),%rsi        # 6f97b <module.62+0x249>
mov    -0x38(%rbp),%rdx
mov    -0x40(%rbp),%rdi
mov    -0x30(%rbp),%r15
movslq 0x20(%rax),%r8
test   %r8d,%r8d
jne    33e0b <JPEGPreDecode+0x9b>
lea    0x3c0fc(%rip),%rdi        # 6fefd <module.47+0x14c>
mov    $0x455,%edx
callq  8490 <__assert_fail@plt>
xor    %ecx,%ecx
mov    %rcx,-0x28(%rbp)
mov    %rax,%rcx
mov    %rdi,-0x38(%rbp)
mov    %rdx,-0x30(%rbp)
mov    %rax,-0x40(%rbp)
mov    %rcx,%rdi
callq  32f70 <TIFFjpeg_abort>
test   %eax,%eax
jne    33e30 <JPEGPreDecode+0xc0>
xor    %eax,%eax
leaveq 
retq   
mov    $0x1,%esi
mov    %rsi,-0x20(%rbp)
mov    -0x40(%rbp),%rax
mov    %rax,%rdi
mov    %r15,-0x40(%rbp)
mov    %rax,%r15
callq  32d80 <TIFFjpeg_read_header>
cmp    $0x1,%eax
je     33e59 <JPEGPreDecode+0xe9>
xor    %eax,%eax
mov    -0x40(%rbp),%r15
leaveq 
retq   
mov    0x450(%r15),%rax
mov    -0x38(%rbp),%rdx
mov    %rax,0x388(%rdx)
mov    0x458(%r15),%rax
mov    %rax,0x390(%rdx)
mov    0x10(%rdx),%eax
and    $0x400,%eax
test   %eax,%eax
jne    33ec6 <JPEGPreDecode+0x156>
mov    0x58(%rdx),%esi
mov    0x5c(%rdx),%eax
mov    0x27c(%rdx),%ecx
sub    %ecx,%eax
mov    0x84(%rdx),%ecx
cmp    %eax,%ecx
jae    33ea0 <JPEGPreDecode+0x130>
mov    %rcx,%rax
mov    %rdx,%rdi
mov    %r12,-0x8(%rbp)
mov    %r13,-0x10(%rbp)
mov    %r14,-0x18(%rbp)
mov    %rax,%r12
mov    %rsi,%r13
mov    %rdx,%r14
callq  8410 <TIFFScanlineSize@plt>
mov    %rax,0x498(%r15)
jmp    33ef0 <JPEGPreDecode+0x180>
mov    0x64(%rdx),%eax
mov    0x68(%rdx),%ecx
mov    %rdx,%rdi
mov    %r12,-0x8(%rbp)
mov    %r13,-0x10(%rbp)
mov    %r14,-0x18(%rbp)
mov    %rcx,%r12
mov    %rax,%r13
mov    %rdx,%r14
callq  80d0 <TIFFTileRowSize@plt>
mov    %rax,0x498(%r15)
movzwl 0xaa(%r14),%eax
cmp    $0x2,%ax
je     33f87 <JPEGPreDecode+0x217>
lea    0x3c02a(%rip),%rsi        # 6ff33 <module.55>
cmp    0x30(%r15),%r13d
ja     33f15 <JPEGPreDecode+0x1a5>
cmp    0x34(%r15),%r12d
jbe    33f4a <JPEGPreDecode+0x1da>
sub    $0x10,%rsp
mov    0x34(%r15),%ecx
xor    %eax,%eax
mov    0x3b8(%r14),%rdi
lea    0x3c022(%rip),%rdx        # 6ff4f <module.55+0x1c>
mov    0x30(%r15),%r9d
mov    %ecx,(%rsp)
mov    %r13,%rcx
mov    %r12,%r8
callq  85a0 <TIFFWarningExt@plt>
add    $0x10,%rsp
lea    0x3bfe9(%rip),%rsi        # 6ff33 <module.55>
mov    0x30(%r15),%ecx
cmp    %ecx,%r13d
je     33fb2 <JPEGPreDecode+0x242>
cmp    0x30(%r15),%r13d
jb     34010 <JPEGPreDecode+0x2a0>
cmp    0x34(%r15),%r12d
jb     34010 <JPEGPreDecode+0x2a0>
movslq 0x38(%r15),%rcx
movzwl 0xaa(%r14),%eax
cmp    $0x1,%ax
je     3404e <JPEGPreDecode+0x2de>
mov    $0x1,%eax
jmpq   34056 <JPEGPreDecode+0x2e6>
mov    -0x30(%rbp),%rax
test   %ax,%ax
je     33f02 <JPEGPreDecode+0x192>
movzwl 0x492(%r15),%ecx
mov    %rcx,%rax
neg    %eax
cmp    %r13d,%eax
ja     34106 <JPEGPreDecode+0x396>
xor    %r13d,%r13d
jmpq   34112 <JPEGPreDecode+0x3a2>
mov    0x34(%r15),%r8d
cmp    %r8d,%r12d
jae    33f53 <JPEGPreDecode+0x1e3>
mov    %r12,%rax
add    0x27c(%r14),%eax
mov    0x5c(%r14),%edx
cmp    %eax,%edx
jne    33f53 <JPEGPreDecode+0x1e3>
mov    0x10(%r14),%eax
and    $0x400,%eax
test   %eax,%eax
jne    33f53 <JPEGPreDecode+0x1e3>
sub    $0x10,%rsp
xor    %eax,%eax
mov    0x3b8(%r14),%rdi
mov    %r8d,(%rsp)
mov    %r12,%r8
lea    0x3bf8f(%rip),%rdx        # 6ff88 <module.55+0x55>
mov    %rcx,%r9
mov    %rsi,%r12
callq  85a0 <TIFFWarningExt@plt>
add    $0x10,%rsp
mov    %r12,%rsi
jmpq   33f67 <JPEGPreDecode+0x1f7>
sub    $0x10,%rsp
mov    0x34(%r15),%ecx
xor    %eax,%eax
mov    0x3b8(%r14),%rdi
lea    0x3bfa7(%rip),%rdx        # 6ffcf <module.55+0x9c>
mov    0x30(%r15),%r9d
mov    %ecx,(%rsp)
mov    %r13,%rcx
mov    %r12,%r8
callq  8a00 <TIFFErrorExt@plt>
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
xor    %eax,%eax
mov    -0x40(%rbp),%r15
leaveq 
retq   
movzwl 0x82(%r14),%eax
cmp    %ecx,%eax
jne    34130 <JPEGPreDecode+0x3c0>
movzwl 0x74(%r14),%eax
cmp    0x128(%r15),%eax
jne    34159 <JPEGPreDecode+0x3e9>
mov    %rsi,%r12
mov    %r15,%rdi
callq  32dd0 <TIFFjpeg_has_multiple_scans>
test   %eax,%eax
jne    34182 <JPEGPreDecode+0x412>
lea    0x3c17d(%rip),%rdx        # 70207 <module.55+0x2d4>
movzwl 0xaa(%r14),%eax
cmp    $0x1,%ax
je     34212 <JPEGPreDecode+0x4a2>
mov    0x130(%r15),%rax
movslq 0x8(%rax),%rcx
cmp    $0x1,%ecx
jne    34245 <JPEGPreDecode+0x4d5>
movslq 0xc(%rax),%rax
cmp    $0x1,%eax
jne    34245 <JPEGPreDecode+0x4d5>
movzwl 0xaa(%r14),%eax
cmp    $0x1,%ax
jne    3426a <JPEGPreDecode+0x4fa>
movzwl 0x490(%r15),%eax
cmp    $0x6,%ax
jne    3426a <JPEGPreDecode+0x4fa>
movslq 0x530(%r15),%rax
cmp    $0x1,%eax
jne    3426a <JPEGPreDecode+0x4fa>
movl   $0x3,0x3c(%r15)
movl   $0x2,0x40(%r15)
jmpq   3428c <JPEGPreDecode+0x51c>
lea    -0x1(%rcx,%r13,1),%eax
xor    %edx,%edx
div    %ecx
mov    %rax,%r13
movzwl 0x494(%r15),%ecx
mov    %rcx,%rax
neg    %eax
cmp    %r12d,%eax
ja     342c2 <JPEGPreDecode+0x552>
xor    %r12d,%r12d
jmpq   33f02 <JPEGPreDecode+0x192>
xor    %eax,%eax
mov    0x3b8(%r14),%rdi
lea    0x3bedb(%rip),%rdx        # 7001b <module.55+0xe8>
callq  8a00 <TIFFErrorExt@plt>
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
xor    %eax,%eax
mov    -0x40(%rbp),%r15
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%r14),%rdi
lea    0x3bed0(%rip),%rdx        # 70039 <module.55+0x106>
callq  8a00 <TIFFErrorExt@plt>
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
xor    %eax,%eax
mov    -0x40(%rbp),%r15
leaveq 
retq   
mov    0x34(%r15),%eax
mov    0x30(%r15),%ecx
imul   %rcx,%rax
movslq 0x38(%r15),%rcx
imul   %rax,%rcx
movzwl 0x74(%r14),%eax
add    $0x7,%eax
shr    $0x3,%eax
movslq %eax,%r13
imul   %rcx,%r13
movslq 0x13c(%r15),%rax
test   %eax,%eax
je     341b8 <JPEGPreDecode+0x448>
lea    0x0(%r13,%r13,2),%r13
cmp    $0x6400000,%r13
jbe    34083 <JPEGPreDecode+0x313>
lea    0x3be8a(%rip),%rdi        # 70056 <module.55+0x123>
callq  8040 <getenv@plt>
test   %rax,%rax
jne    34083 <JPEGPreDecode+0x313>
xor    %eax,%eax
mov    0x3b8(%r14),%rdi
mov    %r13,%rcx
mov    %r12,%rsi
lea    0x3be8c(%rip),%rdx        # 7007c <module.55+0x149>
mov    $0x6400000,%r8d
mov    %r8,%r9
callq  8a00 <TIFFErrorExt@plt>
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
xor    %eax,%eax
mov    -0x40(%rbp),%r15
leaveq 
retq   
mov    0x130(%r15),%rcx
movzwl 0x492(%r15),%eax
cmp    0x8(%rcx),%eax
jne    342d3 <JPEGPreDecode+0x563>
movzwl 0x494(%r15),%eax
cmp    0xc(%rcx),%eax
jne    342d3 <JPEGPreDecode+0x563>
mov    $0x1,%ecx
jmpq   34350 <JPEGPreDecode+0x5e0>
xor    %eax,%eax
mov    0x3b8(%r14),%rdi
mov    %r12,%rsi
callq  8a00 <TIFFErrorExt@plt>
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
xor    %eax,%eax
mov    -0x40(%rbp),%r15
leaveq 
retq   
movl   $0x0,0x3c(%r15)
movl   $0x0,0x40(%r15)
movzwl 0xaa(%r14),%eax
cmp    $0x1,%ax
je     3435b <JPEGPreDecode+0x5eb>
mov    -0x28(%rbp),%r12
test   %r12d,%r12d
jg     34378 <JPEGPreDecode+0x608>
movl   $0x0,0x5c(%r15)
lea    -0x2708(%rip),%rax        # 31ba0 <JPEGDecode>
mov    %rax,0x2f8(%r14)
mov    %rax,0x308(%r14)
mov    %rax,0x318(%r14)
jmpq   343ab <JPEGPreDecode+0x63b>
lea    -0x1(%rcx,%r12,1),%eax
xor    %edx,%edx
div    %ecx
mov    %rax,%r12
jmpq   33f02 <JPEGPreDecode+0x192>
sub    $0x10,%rsp
movzwl 0x494(%r15),%esi
xor    %eax,%eax
mov    0x3b8(%r14),%rdi
lea    0x3bed7(%rip),%rdx        # 701c6 <module.55+0x293>
mov    0x130(%r15),%r8
movslq 0x8(%r8),%rcx
movslq 0xc(%r8),%r8
movzwl 0x492(%r15),%r9d
mov    %esi,(%rsp)
mov    %r12,%rsi
callq  8a00 <TIFFErrorExt@plt>
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
xor    %eax,%eax
mov    -0x40(%rbp),%r15
leaveq 
retq   
movslq %ecx,%rax
lea    (%rax,%rax,2),%rax
shl    $0x5,%rax
add    0x130(%r15),%rax
movslq 0x8(%rax),%rsi
cmp    $0x1,%esi
jne    343cb <JPEGPreDecode+0x65b>
movslq 0xc(%rax),%rax
cmp    $0x1,%eax
jne    343cb <JPEGPreDecode+0x65b>
add    $0x1,%ecx
cmp    0x38(%r15),%ecx
jl     34325 <JPEGPreDecode+0x5b5>
jmpq   340bd <JPEGPreDecode+0x34d>
movzwl 0x492(%r15),%eax
cmp    $0x1,%ax
je     343f0 <JPEGPreDecode+0x680>
pushq  -0x20(%rbp)
popq   -0x28(%rbp)
jmpq   3428c <JPEGPreDecode+0x51c>
movl   $0x1,0x5c(%r15)
movl   $0x0,0x64(%r15)
lea    -0x1b2f(%rip),%rax        # 32860 <DecodeRowError>
mov    %rax,0x2f8(%r14)
lea    -0x263d(%rip),%rax        # 31d60 <JPEGDecodeRaw>
mov    %rax,0x308(%r14)
mov    %rax,0x318(%r14)
mov    %r15,%rdi
callq  32e10 <TIFFjpeg_start_decompress>
test   %eax,%eax
jne    3440d <JPEGPreDecode+0x69d>
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
xor    %eax,%eax
mov    -0x40(%rbp),%r15
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%r14),%rdi
mov    %r12,%rsi
callq  8a00 <TIFFErrorExt@plt>
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
xor    %eax,%eax
mov    -0x40(%rbp),%r15
leaveq 
retq   
movzwl 0x494(%r15),%eax
cmp    $0x1,%ax
je     3428c <JPEGPreDecode+0x51c>
pushq  -0x20(%rbp)
popq   -0x28(%rbp)
jmpq   3428c <JPEGPreDecode+0x51c>
test   %r12d,%r12d
jg     34429 <JPEGPreDecode+0x6b9>
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
mov    $0x1,%eax
mov    -0x40(%rbp),%r15
leaveq 
retq   
mov    %r14,%rdi
mov    0x130(%r15),%rsi
movslq 0x38(%r15),%rdx
callq  334c0 <alloc_downsampled_buffers>
test   %eax,%eax
jne    34454 <JPEGPreDecode+0x6e4>
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
xor    %eax,%eax
mov    -0x40(%rbp),%r15
leaveq 
retq   
movl   $0x8,0x4f0(%r15)
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
mov    $0x1,%eax
mov    -0x40(%rbp),%r15
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)

0000000000034480 <unsuppress_quant_table>:
push   %rbp
mov    %rsp,%rbp
movslq %esi,%rax
mov    0x70(%rdi,%rax,8),%rax
test   %rax,%rax
jne    34493 <unsuppress_quant_table+0x13>
leaveq 
retq   
movl   $0x0,0x80(%rax)
leaveq 
retq   
nop

00000000000344a0 <suppress_quant_table>:
push   %rbp
mov    %rsp,%rbp
movslq %esi,%rax
mov    0x70(%rdi,%rax,8),%rax
test   %rax,%rax
jne    344b3 <suppress_quant_table+0x13>
leaveq 
retq   
movl   $0x1,0x80(%rax)
leaveq 
retq   
nop

00000000000344c0 <unsuppress_huff_table>:
push   %rbp
mov    %rsp,%rbp
movslq %esi,%rax
lea    (%rdi,%rax,8),%rcx
mov    0xa0(%rcx),%rax
test   %rax,%rax
je     344e1 <unsuppress_huff_table+0x21>
movl   $0x0,0x114(%rax)
mov    0xc0(%rcx),%rax
test   %rax,%rax
jne    344ef <unsuppress_huff_table+0x2f>
leaveq 
retq   
movl   $0x0,0x114(%rax)
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

0000000000034500 <suppress_huff_table>:
push   %rbp
mov    %rsp,%rbp
movslq %esi,%rax
lea    (%rdi,%rax,8),%rcx
mov    0xa0(%rcx),%rax
test   %rax,%rax
je     34521 <suppress_huff_table+0x21>
movl   $0x1,0x114(%rax)
mov    0xc0(%rcx),%rax
test   %rax,%rax
jne    3452f <suppress_huff_table+0x2f>
leaveq 
retq   
movl   $0x1,0x114(%rax)
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

0000000000034540 <prepare_JPEGTables>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %rdi,-0x8(%rbp)
mov    0x350(%rdi),%rdi
mov    %rdi,-0x10(%rbp)
movslq 0x52c(%rdi),%rsi
xor    %edx,%edx
callq  32b70 <TIFFjpeg_set_quality>
test   %eax,%eax
jne    3456d <prepare_JPEGTables+0x2d>
xor    %eax,%eax
leaveq 
retq   
mov    $0x1,%esi
mov    -0x10(%rbp),%rax
mov    %rax,%rdi
mov    %r15,-0x10(%rbp)
mov    %rax,%r15
callq  32bc0 <TIFFjpeg_suppress_tables>
test   %eax,%eax
jne    34591 <prepare_JPEGTables+0x51>
mov    -0x10(%rbp),%r15
xor    %eax,%eax
leaveq 
retq   
movslq 0x534(%r15),%rax
and    $0x1,%eax
test   %eax,%eax
jg     345c5 <prepare_JPEGTables+0x85>
movslq 0x534(%r15),%rax
and    $0x2,%eax
test   %eax,%eax
jg     345ec <prepare_JPEGTables+0xac>
mov    %r15,%rdi
mov    -0x8(%rbp),%rsi
callq  33250 <TIFFjpeg_tables_dest>
test   %eax,%eax
jne    34613 <prepare_JPEGTables+0xd3>
mov    -0x10(%rbp),%r15
xor    %eax,%eax
leaveq 
retq   
mov    %r15,%rdi
xor    %esi,%esi
callq  34480 <unsuppress_quant_table>
movzwl 0x490(%r15),%eax
cmp    $0x6,%ax
jne    3459f <prepare_JPEGTables+0x5f>
mov    %r15,%rdi
mov    $0x1,%esi
callq  34480 <unsuppress_quant_table>
jmp    3459f <prepare_JPEGTables+0x5f>
mov    %r15,%rdi
xor    %esi,%esi
callq  344c0 <unsuppress_huff_table>
movzwl 0x490(%r15),%eax
cmp    $0x6,%ax
jne    345ad <prepare_JPEGTables+0x6d>
mov    %r15,%rdi
mov    $0x1,%esi
callq  344c0 <unsuppress_huff_table>
jmp    345ad <prepare_JPEGTables+0x6d>
mov    %r15,%rdi
callq  32d40 <TIFFjpeg_write_tables>
test   %eax,%eax
jne    34627 <prepare_JPEGTables+0xe7>
mov    -0x10(%rbp),%r15
xor    %eax,%eax
leaveq 
retq   
mov    $0x1,%eax
mov    -0x10(%rbp),%r15
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   (%rax)

0000000000034640 <JPEGSetupEncode>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
xor    %esi,%esi
mov    0x350(%rdi),%r15
mov    %rdi,%r14
callq  32720 <JPEGInitializeLibJPEG>
test   %r15,%r15
jne    34685 <JPEGSetupEncode+0x45>
lea    0x3b440(%rip),%rdi        # 6faad <module.62+0x37b>
mov    $0x6ca,%edx
lea    0x3bbbd(%rip),%rcx        # 70236 <module.66+0x10>
lea    0x3b2fb(%rip),%rsi        # 6f97b <module.62+0x249>
callq  8490 <__assert_fail@plt>
movslq 0x20(%r15),%rax
test   %eax,%eax
jne    346d4 <JPEGSetupEncode+0x94>
movzwl 0x7a(%r14),%ecx
mov    %cx,0x490(%r15)
movzwl 0xaa(%r14),%eax
cmp    $0x1,%ax
je     346f3 <JPEGSetupEncode+0xb3>
movl   $0x1,0x38(%r15)
movl   $0x0,0x3c(%r15)
mov    %r15,%rdi
callq  32ae0 <TIFFjpeg_set_defaults>
test   %eax,%eax
jne    3474c <JPEGSetupEncode+0x10c>
xor    %eax,%eax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
lea    0x3bb6b(%rip),%rdi        # 70246 <module.66+0x20>
mov    $0x6cb,%edx
lea    0x3bb4f(%rip),%rcx        # 70236 <module.66+0x10>
lea    0x3b28d(%rip),%rsi        # 6f97b <module.62+0x249>
callq  8490 <__assert_fail@plt>
movzwl 0x82(%r14),%eax
mov    %eax,0x38(%r15)
cmp    $0x6,%cx
je     347fb <JPEGSetupEncode+0x1bb>
movzwl 0x7a(%r14),%eax
test   %ax,%ax
je     34818 <JPEGSetupEncode+0x1d8>
cmp    $0x1,%ax
je     34818 <JPEGSetupEncode+0x1d8>
movzwl 0x7a(%r14),%eax
cmp    $0x2,%ax
je     34837 <JPEGSetupEncode+0x1f7>
movzwl 0x7a(%r14),%eax
cmp    $0x5,%ax
je     34856 <JPEGSetupEncode+0x216>
movl   $0x0,0x3c(%r15)
jmpq   346b8 <JPEGSetupEncode+0x78>
lea    0x3bad3(%rip),%rsi        # 70226 <module.66>
lea    0x3bb37(%rip),%rdx        # 70291 <module.66+0x6b>
mov    $0x1,%r8d
movzwl 0x490(%r15),%ecx
cmp    $0x3,%cx
jbe    34875 <JPEGSetupEncode+0x235>
cmp    $0x4,%cx
je     34907 <JPEGSetupEncode+0x2c7>
cmp    $0x6,%cx
jne    3487f <JPEGSetupEncode+0x23f>
movzwl 0x108(%r14),%ecx
mov    %cx,0x492(%r15)
movzwl 0x10a(%r14),%eax
mov    %ax,0x494(%r15)
test   %cx,%cx
je     34928 <JPEGSetupEncode+0x2e8>
test   %ax,%ax
je     34928 <JPEGSetupEncode+0x2e8>
movzwl 0x74(%r14),%ecx
cmp    $0x10,%cx
ja     34949 <JPEGSetupEncode+0x309>
xor    %eax,%eax
mov    $0x214,%esi
lea    -0x30(%rbp),%rdx
mov    %r14,%rdi
callq  8230 <TIFFGetField@plt>
test   %eax,%eax
je     34963 <JPEGSetupEncode+0x323>
lea    0x3baa8(%rip),%rdx        # 70291 <module.66+0x6b>
lea    0x3ba36(%rip),%rsi        # 70226 <module.66>
mov    $0x1,%r8d
jmpq   34893 <JPEGSetupEncode+0x253>
movslq 0x530(%r15),%rax
cmp    $0x1,%eax
je     349cf <JPEGSetupEncode+0x38f>
movl   $0x3,0x3c(%r15)
jmpq   346b8 <JPEGSetupEncode+0x78>
movzwl 0x82(%r14),%eax
cmp    $0x1,%ax
jne    34721 <JPEGSetupEncode+0xe1>
movl   $0x1,0x3c(%r15)
jmpq   346b8 <JPEGSetupEncode+0x78>
movzwl 0x82(%r14),%eax
cmp    $0x3,%ax
jne    34730 <JPEGSetupEncode+0xf0>
movl   $0x2,0x3c(%r15)
jmpq   346b8 <JPEGSetupEncode+0x78>
movzwl 0x82(%r14),%eax
cmp    $0x4,%ax
jne    3473f <JPEGSetupEncode+0xff>
movl   $0x4,0x3c(%r15)
jmpq   346b8 <JPEGSetupEncode+0x78>
cmp    $0x3,%cx
je     34907 <JPEGSetupEncode+0x2c7>
movw   $0x1,0x492(%r15)
movw   $0x1,0x494(%r15)
movzwl 0x74(%r14),%ecx
cmp    $0x8,%cx
jne    349dc <JPEGSetupEncode+0x39c>
movl   $0x8,0x58(%r15)
mov    0x10(%r14),%eax
and    $0x400,%eax
test   %eax,%eax
jne    349f6 <JPEGSetupEncode+0x3b6>
mov    0x84(%r14),%eax
mov    0x5c(%r14),%ecx
cmp    %eax,%ecx
ja     34a58 <JPEGSetupEncode+0x418>
movslq 0x534(%r15),%rax
and    $0x3,%eax
test   %eax,%eax
jg     34a9b <JPEGSetupEncode+0x45b>
mov    0x48(%r14),%rax
and    $0xfffffffffffffffb,%rax
mov    %rax,0x48(%r14)
mov    %r14,%rsi
mov    %r8,%r14
mov    %r15,%rdi
callq  33120 <TIFFjpeg_data_dest>
mov    %r14,%rax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%r14),%rdi
lea    0x3b9a0(%rip),%rdx        # 702b7 <module.66+0x91>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%r14),%rdi
lea    0x3b92e(%rip),%rdx        # 70266 <module.66+0x40>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%r14),%rdi
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
xorpd  %xmm0,%xmm0
movzwl 0x74(%r14),%ecx
movss  %xmm0,-0x28(%rbp)
mov    $0x1,%eax
shl    %cl,%rax
lea    -0x1(%rax),%rcx
cvtsi2ss %rcx,%xmm1
movss  %xmm1,-0x24(%rbp)
sar    %rax
cvtsi2ss %rax,%xmm0
movss  %xmm0,-0x20(%rbp)
movss  %xmm1,-0x1c(%rbp)
movss  %xmm0,-0x18(%rbp)
movss  %xmm1,-0x14(%rbp)
xor    %eax,%eax
lea    -0x28(%rbp),%rdx
mov    %r14,%rdi
mov    $0x214,%esi
callq  8290 <TIFFSetField@plt>
lea    0x3b8d4(%rip),%rdx        # 70291 <module.66+0x6b>
lea    0x3b862(%rip),%rsi        # 70226 <module.66>
mov    $0x1,%r8d
jmpq   34893 <JPEGSetupEncode+0x253>
movl   $0x2,0x3c(%r15)
jmpq   346b8 <JPEGSetupEncode+0x78>
xor    %eax,%eax
mov    0x3b8(%r14),%rdi
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
mov    0x68(%r14),%eax
movzwl 0x494(%r15),%ecx
shl    $0x3,%ecx
xor    %edx,%edx
div    %ecx
test   %edx,%edx
jne    34ac7 <JPEGSetupEncode+0x487>
mov    0x64(%r14),%eax
movzwl 0x492(%r15),%ecx
shl    $0x3,%ecx
xor    %edx,%edx
div    %ecx
test   %edx,%edx
je     348ce <JPEGSetupEncode+0x28e>
xor    %eax,%eax
mov    0x3b8(%r14),%rdi
lea    0x3b8d5(%rip),%rdx        # 70311 <module.66+0xeb>
movzwl 0x492(%r15),%ecx
shl    $0x3,%ecx
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
movzwl 0x494(%r15),%ecx
shl    $0x3,%ecx
xor    %edx,%edx
div    %ecx
test   %edx,%edx
je     348ce <JPEGSetupEncode+0x28e>
xor    %eax,%eax
mov    0x3b8(%r14),%rdi
lea    0x3b8b9(%rip),%rdx        # 70338 <module.66+0x112>
movzwl 0x494(%r15),%ecx
shl    $0x3,%ecx
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
mov    0x520(%r15),%rdi
test   %rdi,%rdi
je     34af3 <JPEGSetupEncode+0x4b3>
lea    0x3b8b7(%rip),%rsi        # 70365 <module.66+0x13f>
mov    $0x8,%edx
callq  8610 <memcmp@plt>
test   %eax,%eax
je     34af3 <JPEGSetupEncode+0x4b3>
mov    $0x1,%r8d
jmpq   348ec <JPEGSetupEncode+0x2ac>
xor    %eax,%eax
mov    0x3b8(%r14),%rdi
lea    0x3b812(%rip),%rdx        # 702e9 <module.66+0xc3>
movzwl 0x494(%r15),%ecx
shl    $0x3,%ecx
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
mov    %r14,%rdi
callq  34540 <prepare_JPEGTables>
test   %eax,%eax
jne    34b0b <JPEGSetupEncode+0x4cb>
xor    %eax,%eax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
mov    0x10(%r14),%eax
or     $0x8,%eax
mov    %eax,0x10(%r14)
mov    0x48(%r14),%rax
or     $0x4,%rax
mov    %rax,0x48(%r14)
mov    $0x1,%r8d
jmpq   348ec <JPEGSetupEncode+0x2ac>
nopl   (%rax)

0000000000034b30 <JPEGPreEncode>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
lea    0x3ae3c(%rip),%rax        # 6f97b <module.62+0x249>
lea    0x3b837(%rip),%rcx        # 7037d <module.76+0xe>
mov    0x350(%rdi),%r8
test   %r8,%r8
jne    34b66 <JPEGPreEncode+0x36>
mov    %rax,%rsi
lea    0x3af51(%rip),%rdi        # 6faad <module.62+0x37b>
mov    $0x773,%edx
callq  8490 <__assert_fail@plt>
movslq 0x20(%r8),%rdx
cmp    $0x1,%edx
je     34b8c <JPEGPreEncode+0x5c>
mov    %r13,%rdx
mov    %rsi,%r13
mov    %rax,%rsi
mov    %r14,%rax
mov    %rbx,%r14
mov    %r8,%rbx
mov    %r15,%r8
mov    %r12,%r9
mov    %rdi,%r12
jmp    34bd2 <JPEGPreEncode+0xa2>
mov    %rdi,%rax
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rsi,%r13
mov    %rbx,%r14
mov    %r8,%rbx
mov    %r12,%r15
mov    %rdi,%r12
mov    %rax,%rdi
callq  *0x2d8(%r12)
mov    %r15,%r9
lea    0x3b7be(%rip),%rcx        # 7037d <module.76+0xe>
lea    0x3adb5(%rip),%rsi        # 6f97b <module.62+0x249>
mov    -0x28(%rbp),%r8
mov    -0x20(%rbp),%rax
mov    -0x18(%rbp),%rdx
movslq 0x20(%rbx),%rdi
test   %edi,%edi
jne    34c39 <JPEGPreEncode+0x109>
mov    0x10(%r12),%ecx
and    $0x400,%ecx
test   %ecx,%ecx
jne    34c4a <JPEGPreEncode+0x11a>
mov    0x58(%r12),%esi
mov    0x5c(%r12),%r15d
mov    0x27c(%r12),%ecx
sub    %ecx,%r15d
mov    0x84(%r12),%ecx
cmp    %r15d,%ecx
jae    34c0e <JPEGPreEncode+0xde>
mov    %rcx,%r15
mov    %r12,%rdi
mov    %rdx,-0x18(%rbp)
mov    %rax,-0x20(%rbp)
mov    %r8,-0x28(%rbp)
mov    %r14,-0x8(%rbp)
mov    %r9,-0x10(%rbp)
mov    %rsi,%r14
callq  8410 <TIFFScanlineSize@plt>
mov    %rax,0x498(%rbx)
mov    %r14,%rcx
jmp    34c7d <JPEGPreEncode+0x14d>
lea    0x3b606(%rip),%rdi        # 70246 <module.66+0x20>
mov    $0x77a,%edx
callq  8490 <__assert_fail@plt>
mov    0x64(%r12),%ecx
mov    0x68(%r12),%r15d
mov    %r12,%rdi
mov    %rdx,-0x18(%rbp)
mov    %rax,-0x20(%rbp)
mov    %r8,-0x28(%rbp)
mov    %r14,-0x8(%rbp)
mov    %r9,-0x10(%rbp)
mov    %rcx,%r14
callq  80d0 <TIFFTileRowSize@plt>
mov    %rax,0x498(%rbx)
mov    %r14,%rcx
xor    %r14d,%r14d
movzwl 0xaa(%r12),%eax
cmp    $0x2,%ax
je     34cec <JPEGPreEncode+0x1bc>
cmp    $0xffff,%ecx
ja     34d0e <JPEGPreEncode+0x1de>
cmp    $0xffff,%r15d
ja     34d0e <JPEGPreEncode+0x1de>
mov    %ecx,0x30(%rbx)
mov    %r15d,0x34(%rbx)
mov    $0x1,%r15d
movzwl 0xaa(%r12),%eax
cmp    $0x1,%ax
je     34d44 <JPEGPreEncode+0x214>
mov    %rbx,%rdi
mov    %r14,%rsi
callq  32b20 <TIFFjpeg_set_colorspace>
test   %eax,%eax
jne    34d78 <JPEGPreEncode+0x248>
mov    %r14,%rax
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
leaveq 
retq   
test   %r13w,%r13w
je     34c8f <JPEGPreEncode+0x15f>
movzwl 0x492(%rbx),%esi
mov    %rsi,%rax
neg    %eax
cmp    %ecx,%eax
ja     34d9b <JPEGPreEncode+0x26b>
mov    %r14,%rcx
jmpq   34da6 <JPEGPreEncode+0x276>
xor    %eax,%eax
mov    0x3b8(%r12),%rdi
lea    0x3b650(%rip),%rsi        # 7036f <module.76>
lea    0x3b665(%rip),%rdx        # 7038b <module.76+0x1c>
callq  8a00 <TIFFErrorExt@plt>
mov    %r14,%rax
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
leaveq 
retq   
movzwl 0x82(%r12),%eax
mov    %eax,0x38(%rbx)
movzwl 0x490(%rbx),%eax
cmp    $0x6,%ax
je     34dc3 <JPEGPreEncode+0x293>
mov    0x3c(%rbx),%esi
mov    %rbx,%rdi
callq  32b20 <TIFFjpeg_set_colorspace>
test   %eax,%eax
je     34e00 <JPEGPreEncode+0x2d0>
mov    %r14,%r13
jmpq   34e35 <JPEGPreEncode+0x305>
movzwl %r13w,%ecx
mov    0x68(%rbx),%rax
mov    %ecx,(%rax)
movzwl 0x490(%rbx),%eax
cmp    $0x6,%ax
je     34e78 <JPEGPreEncode+0x348>
mov    %r14,%r13
jmpq   34e35 <JPEGPreEncode+0x305>
lea    -0x1(%rsi,%rcx,1),%eax
xor    %edx,%edx
div    %esi
mov    %rax,%rcx
movzwl 0x494(%rbx),%esi
mov    %rsi,%rax
neg    %eax
cmp    %r15d,%eax
ja     34e83 <JPEGPreEncode+0x353>
mov    %r14,%r15
jmpq   34c8f <JPEGPreEncode+0x15f>
movslq 0x530(%rbx),%rax
cmp    $0x1,%eax
jne    34e94 <JPEGPreEncode+0x364>
mov    %r14,%r13
mov    $0x3,%esi
mov    %rbx,%rdi
callq  32b20 <TIFFjpeg_set_colorspace>
test   %eax,%eax
jne    34e19 <JPEGPreEncode+0x2e9>
mov    %r14,%rax
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
leaveq 
retq   
mov    %r14,%rax
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
leaveq 
retq   
movzwl 0x492(%rbx),%ecx
mov    0x68(%rbx),%rax
mov    %ecx,0x8(%rax)
movzwl 0x494(%rbx),%ecx
mov    0x68(%rbx),%rax
mov    %ecx,0xc(%rax)
movl   $0x0,0x144(%rbx)
movl   $0x0,0x150(%rbx)
movslq 0x52c(%rbx),%rsi
mov    %rbx,%rdi
mov    %r14,%rdx
callq  32b70 <TIFFjpeg_set_quality>
test   %eax,%eax
jne    34ea9 <JPEGPreEncode+0x379>
mov    %r14,%rax
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
leaveq 
retq   
test   %r13w,%r13w
jne    34ecf <JPEGPreEncode+0x39f>
mov    %r14,%r13
jmp    34e35 <JPEGPreEncode+0x305>
lea    -0x1(%rsi,%r15,1),%eax
xor    %edx,%edx
div    %esi
mov    %rax,%r15
jmpq   34c8f <JPEGPreEncode+0x15f>
movzwl 0x492(%rbx),%eax
cmp    $0x1,%ax
je     34ef8 <JPEGPreEncode+0x3c8>
mov    %r15,%r13
jmpq   34dd6 <JPEGPreEncode+0x2a6>
movslq 0x534(%rbx),%rax
and    $0x1,%eax
test   %eax,%eax
jg     34f0d <JPEGPreEncode+0x3dd>
mov    %rbx,%rdi
mov    %r14,%rsi
callq  34480 <unsuppress_quant_table>
mov    %rbx,%rdi
mov    %r15,%rsi
callq  34480 <unsuppress_quant_table>
jmp    34f23 <JPEGPreEncode+0x3f3>
mov    0x68(%rbx),%rax
movl   $0x1,0x10(%rax)
mov    0x68(%rbx),%rax
movl   $0x1,0x14(%rax)
mov    0x68(%rbx),%rax
movl   $0x1,0x18(%rax)
mov    %r14,%r13
jmpq   34e35 <JPEGPreEncode+0x305>
movzwl 0x494(%rbx),%eax
cmp    $0x1,%ax
jne    34f3d <JPEGPreEncode+0x40d>
mov    %r14,%r13
jmpq   34dd6 <JPEGPreEncode+0x2a6>
mov    %rbx,%rdi
mov    %r14,%rsi
callq  344a0 <suppress_quant_table>
mov    %rbx,%rdi
mov    %r15,%rsi
callq  344a0 <suppress_quant_table>
movslq 0x534(%rbx),%rax
and    $0x2,%eax
test   %eax,%eax
jg     34f45 <JPEGPreEncode+0x415>
movl   $0x1,0x128(%rbx)
jmp    34f65 <JPEGPreEncode+0x435>
mov    %r15,%r13
jmpq   34dd6 <JPEGPreEncode+0x2a6>
mov    %rbx,%rdi
mov    %r14,%rsi
callq  34500 <suppress_huff_table>
mov    %rbx,%rdi
mov    %r15,%rsi
callq  34500 <suppress_huff_table>
movl   $0x0,0x128(%rbx)
test   %r13d,%r13d
jg     34f95 <JPEGPreEncode+0x465>
movl   $0x0,0x120(%rbx)
lea    -0x2e7b(%rip),%rax        # 32100 <JPEGEncode>
mov    %rax,0x300(%r12)
mov    %rax,0x310(%r12)
mov    %rax,0x320(%r12)
jmp    34fbe <JPEGPreEncode+0x48e>
movl   $0x1,0x120(%rbx)
lea    -0x2be6(%rip),%rax        # 323c0 <JPEGEncodeRaw>
mov    %rax,0x300(%r12)
mov    %rax,0x310(%r12)
mov    %rax,0x320(%r12)
mov    %rbx,%rdi
mov    %r14,%rsi
callq  32c10 <TIFFjpeg_start_compress>
test   %eax,%eax
jne    34fe6 <JPEGPreEncode+0x4b6>
mov    %r14,%rax
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
leaveq 
retq   
test   %r13d,%r13d
jg     3500e <JPEGPreEncode+0x4de>
movl   $0x0,0x4f0(%rbx)
mov    %r15,%rax
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
leaveq 
retq   
mov    %r12,%rdi
mov    0x68(%rbx),%rsi
movslq 0x5c(%rbx),%rdx
callq  334c0 <alloc_downsampled_buffers>
test   %eax,%eax
jne    34feb <JPEGPreEncode+0x4bb>
mov    %r14,%rax
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

0000000000035040 <JPEGPostEncode>:
push   %rbp
mov    %rsp,%rbp
sub    $0x50,%rsp
mov    0x350(%rdi),%rsi
mov    %rsi,-0x40(%rbp)
movslq 0x4f0(%rsi),%rax
test   %eax,%eax
jg     3506c <JPEGPostEncode+0x2c>
mov    0x350(%rdi),%rdi
callq  32d00 <TIFFjpeg_finish_compress>
leaveq 
retq   
mov    0x68(%rsi),%rax
lea    0x4a0(%rsi),%rdx
xor    %ecx,%ecx
mov    %rbx,-0x10(%rbp)
mov    %r12,-0x18(%rbp)
mov    %r13,-0x20(%rbp)
mov    %r14,-0x28(%rbp)
mov    %r15,-0x30(%rbp)
mov    %rdi,-0x8(%rbp)
mov    %rsi,%rdi
mov    %rdx,%rbx
jmp    350d3 <JPEGPostEncode+0x93>
mov    (%rbx,%r14,8),%rcx
movslq %r13d,%rax
mov    (%rcx,%rax,8),%rdi
lea    -0x1(%r13),%eax
movslq %eax,%rax
mov    (%rcx,%rax,8),%rsi
mov    %r15,%rdx
callq  8790 <_TIFFmemcpy@plt>
add    $0x1,%r13d
cmp    %r12d,%r13d
jl     35099 <JPEGPostEncode+0x59>
mov    -0x48(%rbp),%rax
lea    0x1(%rax),%ecx
mov    -0x38(%rbp),%rax
add    $0x60,%rax
mov    -0x40(%rbp),%rdi
movslq 0x5c(%rdi),%rdx
cmp    %ecx,%edx
jg     35113 <JPEGPostEncode+0xd3>
movslq 0x160(%rdi),%r12
shl    $0x3,%r12d
mov    %rbx,%rsi
mov    %r12,%rdx
callq  32cb0 <TIFFjpeg_write_raw_data>
cmp    %r12d,%eax
jne    3513f <JPEGPostEncode+0xff>
mov    -0x8(%rbp),%rdi
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
mov    -0x10(%rbp),%rbx
jmpq   3505e <JPEGPostEncode+0x1e>
movslq 0xc(%rax),%r12
mov    %r12,%r13
imul   0x4f0(%rdi),%r13d
movslq %ecx,%r14
mov    0x1c(%rax),%edx
shl    $0x3,%edx
mov    %edx,%r15d
shl    $0x3,%r12d
mov    %rcx,-0x48(%rbp)
mov    %rax,-0x38(%rbp)
jmpq   350bb <JPEGPostEncode+0x7b>
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
mov    -0x10(%rbp),%rbx
xor    %eax,%eax
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

0000000000035160 <JPEGCleanup>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x10(%rbp)
mov    0x350(%rdi),%rax
test   %rax,%rax
jne    35197 <JPEGCleanup+0x37>
lea    0x3b22a(%rip),%rdi        # 703a9 <module.76+0x3a>
lea    0x3a7f5(%rip),%rsi        # 6f97b <module.62+0x249>
mov    $0x8bd,%edx
lea    0x3b21f(%rip),%rcx        # 703b1 <module.76+0x42>
callq  8490 <__assert_fail@plt>
mov    0x4f8(%rax),%rcx
mov    %rcx,0x410(%rdi)
mov    0x500(%rax),%rcx
mov    %rcx,0x408(%rdi)
mov    0x508(%rax),%rcx
mov    %rcx,0x418(%rdi)
movslq 0x290(%rax),%rcx
test   %ecx,%ecx
jne    351d1 <JPEGCleanup+0x71>
mov    %rdi,%r15
jmp    351ed <JPEGCleanup+0x8d>
mov    %rax,%rcx
mov    %r14,-0x8(%rbp)
mov    %rax,%r14
mov    %rdi,%r15
mov    %rcx,%rdi
callq  32fb0 <TIFFjpeg_destroy>
mov    %r14,%rax
mov    -0x8(%rbp),%r14
mov    0x520(%rax),%rdi
test   %rdi,%rdi
je     351fe <JPEGCleanup+0x9e>
callq  8bb0 <_TIFFfree@plt>
mov    0x350(%r15),%rdi
callq  8bb0 <_TIFFfree@plt>
mov    %r15,%rdi
movq   $0x0,0x350(%rdi)
callq  8740 <_TIFFSetDefaultCompressionState@plt>
mov    -0x10(%rbp),%r15
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

0000000000035230 <JPEGResetUpsampled>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    0x350(%rdi),%rdx
mov    0x10(%rdi),%eax
mov    %rax,%rcx
and    $0xffffbfff,%ecx
mov    %ecx,0x10(%rdi)
movzwl 0xaa(%rdi),%ecx
cmp    $0x1,%cx
je     3527c <JPEGResetUpsampled+0x4c>
mov    0x2b0(%rdi),%rax
test   %rax,%rax
jle    352bc <JPEGResetUpsampled+0x8c>
mov    0x10(%rdi),%eax
and    $0x400,%eax
test   %eax,%eax
jne    3529c <JPEGResetUpsampled+0x6c>
mov    $0xffffffffffffffff,%rax
jmp    352b5 <JPEGResetUpsampled+0x85>
movzwl 0x7a(%rdi),%ecx
cmp    $0x6,%cx
jne    3525b <JPEGResetUpsampled+0x2b>
movslq 0x530(%rdx),%rcx
cmp    $0x1,%ecx
jne    3525b <JPEGResetUpsampled+0x2b>
or     $0x4000,%eax
mov    %eax,0x10(%rdi)
jmp    3525b <JPEGResetUpsampled+0x2b>
mov    %rdi,%rax
mov    %r15,-0x8(%rbp)
mov    %rdi,%r15
mov    %rax,%rdi
callq  8910 <TIFFTileSize@plt>
mov    %r15,%rdi
mov    -0x8(%rbp),%r15
mov    %rax,0x2b0(%rdi)
mov    0x358(%rdi),%rax
test   %rax,%rax
jg     352ca <JPEGResetUpsampled+0x9a>
leaveq 
retq   
mov    %rdi,%rax
mov    %r15,-0x8(%rbp)
mov    %rdi,%r15
mov    %rax,%rdi
callq  8410 <TIFFScanlineSize@plt>
mov    %rax,0x358(%r15)
mov    -0x8(%rbp),%r15
leaveq 
retq   
nopl   0x0(%rax)

00000000000352f0 <JPEGVSetField>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    0x350(%rdi),%rcx
test   %rcx,%rcx
jne    35323 <JPEGVSetField+0x33>
lea    0x3a7a2(%rip),%rdi        # 6faad <module.62+0x37b>
lea    0x3a669(%rip),%rsi        # 6f97b <module.62+0x249>
mov    $0x8f6,%edx
lea    0x3b09f(%rip),%rcx        # 703bd <module.76+0x4e>
callq  8490 <__assert_fail@plt>
mov    $0x1,%eax
cmp    $0x10000,%esi
jbe    35364 <JPEGVSetField+0x74>
cmp    $0x10001,%esi
jbe    3539c <JPEGVSetField+0xac>
cmp    $0x10002,%esi
jne    353c4 <JPEGVSetField+0xd4>
movslq (%rdx),%rsi
cmp    $0x2f,%esi
jle    353ec <JPEGVSetField+0xfc>
mov    0x8(%rdx),%rsi
lea    0x8(%rsi),%rax
mov    %rax,0x8(%rdx)
movslq (%rsi),%rax
jmpq   353f9 <JPEGVSetField+0x109>
cmp    $0x15a,%esi
jbe    3540b <JPEGVSetField+0x11b>
cmp    $0x15b,%esi
jne    3541b <JPEGVSetField+0x12b>
movslq (%rdx),%rsi
cmp    $0x2f,%esi
jle    3543d <JPEGVSetField+0x14d>
mov    0x8(%rdx),%rsi
lea    0x8(%rsi),%rax
mov    %rax,0x8(%rdx)
mov    (%rsi),%r8d
jmpq   3544a <JPEGVSetField+0x15a>
cmp    $0x10001,%esi
jne    35413 <JPEGVSetField+0x123>
movslq (%rdx),%rdi
cmp    $0x2f,%edi
jle    35453 <JPEGVSetField+0x163>
mov    0x8(%rdx),%rdi
lea    0x8(%rdi),%rsi
mov    %rsi,0x8(%rdx)
movslq (%rdi),%rsi
jmpq   35460 <JPEGVSetField+0x170>
cmp    $0x10003,%esi
jne    35413 <JPEGVSetField+0x123>
movslq (%rdx),%rdi
cmp    $0x2f,%edi
jle    35468 <JPEGVSetField+0x178>
mov    0x8(%rdx),%rdi
lea    0x8(%rdi),%rsi
mov    %rsi,0x8(%rdx)
movslq (%rdi),%rsi
jmpq   35475 <JPEGVSetField+0x185>
mov    0x10(%rdx),%rax
movslq (%rax,%rsi,1),%rax
add    $0x8,%esi
mov    %esi,(%rdx)
mov    %eax,0x530(%rcx)
callq  35230 <JPEGResetUpsampled>
mov    $0x1,%eax
leaveq 
retq   
cmp    $0x106,%esi
je     3547d <JPEGVSetField+0x18d>
callq  *0x500(%rcx)
leaveq 
retq   
cmp    $0x212,%esi
jne    35413 <JPEGVSetField+0x123>
movl   $0x1,0x538(%rcx)
mov    0x500(%rcx),%rax
mov    $0x212,%esi
callq  *%rax
leaveq 
retq   
mov    0x10(%rdx),%rax
mov    (%rax,%rsi,1),%r8d
lea    0x8(%rsi),%eax
mov    %eax,(%rdx)
xor    %eax,%eax
test   %r8d,%r8d
jne    354a9 <JPEGVSetField+0x1b9>
leaveq 
retq   
mov    0x10(%rdx),%rsi
movslq (%rsi,%rdi,1),%rsi
add    $0x8,%edi
mov    %edi,(%rdx)
mov    %esi,0x52c(%rcx)
leaveq 
retq   
mov    0x10(%rdx),%rsi
movslq (%rsi,%rdi,1),%rsi
add    $0x8,%edi
mov    %edi,(%rdx)
mov    %esi,0x534(%rcx)
leaveq 
retq   
mov    $0x106,%esi
mov    %rdi,%rax
mov    %r15,-0x18(%rbp)
mov    %rdi,%r15
mov    %rax,%rdi
callq  *0x500(%rcx)
mov    %r15,%rdi
mov    %rax,%r15
callq  35230 <JPEGResetUpsampled>
mov    %r15,%rax
mov    -0x18(%rbp),%r15
leaveq 
retq   
movslq (%rdx),%r9
cmp    $0x2f,%r9d
jle    354c3 <JPEGVSetField+0x1d3>
mov    0x8(%rdx),%rsi
lea    0x8(%rsi),%rax
mov    %rax,0x8(%rdx)
mov    (%rsi),%rsi
jmp    354d1 <JPEGVSetField+0x1e1>
mov    0x10(%rdx),%rax
mov    (%rax,%r9,1),%rsi
lea    0x8(%r9),%eax
mov    %eax,(%rdx)
lea    0x520(%rcx),%rax
mov    %r8,%rdx
mov    %r13,-0x8(%rbp)
mov    %r14,-0x10(%rbp)
mov    %r15,-0x18(%rbp)
mov    %rdi,%r13
mov    %rax,%rdi
mov    %rcx,%r14
mov    %r8,%r15
callq  8aa0 <_TIFFsetByteArray@plt>
mov    %r15d,0x528(%r14)
mov    0x48(%r13),%rax
or     $0x4,%rax
mov    %rax,0x48(%r13)
mov    $0x15b,%esi
mov    %r13,%rdi
callq  8ae0 <TIFFFieldWithTag@plt>
test   %rax,%rax
jne    3552d <JPEGVSetField+0x23d>
xor    %eax,%eax
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
leaveq 
retq   
movzwl 0x18(%rax),%edx
mov    %rdx,%rcx
and    $0x1f,%ecx
mov    $0x1,%eax
mov    %rax,%rsi
shl    %cl,%rsi
shr    $0x5,%edx
movslq %edx,%rcx
or     0x38(%r13,%rcx,8),%rsi
mov    %rsi,0x38(%r13,%rcx,8)
mov    0x10(%r13),%ecx
or     $0x8,%ecx
mov    %ecx,0x10(%r13)
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

0000000000035570 <JPEGVGetField>:
push   %rbp
mov    %rsp,%rbp
mov    0x350(%rdi),%r8
test   %r8,%r8
jne    3559f <JPEGVGetField+0x2f>
lea    0x3a526(%rip),%rdi        # 6faad <module.62+0x37b>
lea    0x3a3ed(%rip),%rsi        # 6f97b <module.62+0x249>
mov    $0x92b,%edx
lea    0x3ae31(%rip),%rcx        # 703cb <module.76+0x5c>
callq  8490 <__assert_fail@plt>
mov    $0x1,%eax
cmp    $0x10001,%esi
jbe    355cd <JPEGVGetField+0x5d>
cmp    $0x10002,%esi
jne    355ee <JPEGVGetField+0x7e>
movslq (%rdx),%rsi
cmp    $0x2f,%esi
jle    35617 <JPEGVGetField+0xa7>
mov    0x8(%rdx),%rsi
lea    0x8(%rsi),%rcx
mov    %rcx,0x8(%rdx)
mov    (%rsi),%rcx
jmp    35624 <JPEGVGetField+0xb4>
cmp    $0x15b,%esi
jne    3562f <JPEGVGetField+0xbf>
movslq (%rdx),%rsi
cmp    $0x2f,%esi
jle    35650 <JPEGVGetField+0xe0>
mov    0x8(%rdx),%rsi
lea    0x8(%rsi),%rcx
mov    %rcx,0x8(%rdx)
mov    (%rsi),%rcx
jmp    3565d <JPEGVGetField+0xed>
cmp    $0x10003,%esi
jne    3567f <JPEGVGetField+0x10f>
movslq (%rdx),%rsi
cmp    $0x2f,%esi
jle    35688 <JPEGVGetField+0x118>
mov    0x8(%rdx),%rsi
lea    0x8(%rsi),%rcx
mov    %rcx,0x8(%rdx)
mov    (%rsi),%rcx
jmp    35695 <JPEGVGetField+0x125>
mov    0x10(%rdx),%rcx
mov    (%rcx,%rsi,1),%rcx
add    $0x8,%esi
mov    %esi,(%rdx)
movslq 0x530(%r8),%rdx
mov    %edx,(%rcx)
leaveq 
retq   
cmp    $0x10001,%esi
jne    3567f <JPEGVGetField+0x10f>
movslq (%rdx),%rsi
cmp    $0x2f,%esi
jle    356a0 <JPEGVGetField+0x130>
mov    0x8(%rdx),%rsi
lea    0x8(%rsi),%rcx
mov    %rcx,0x8(%rdx)
mov    (%rsi),%rcx
jmp    356ad <JPEGVGetField+0x13d>
mov    0x10(%rdx),%rcx
mov    (%rcx,%rsi,1),%rcx
add    $0x8,%esi
mov    %esi,(%rdx)
mov    0x528(%r8),%esi
mov    %esi,(%rcx)
movslq (%rdx),%rsi
cmp    $0x2f,%esi
jle    356b8 <JPEGVGetField+0x148>
mov    0x8(%rdx),%rsi
lea    0x8(%rsi),%rcx
mov    %rcx,0x8(%rdx)
mov    (%rsi),%rcx
jmp    356c5 <JPEGVGetField+0x155>
callq  *0x4f8(%r8)
leaveq 
retq   
mov    0x10(%rdx),%rcx
mov    (%rcx,%rsi,1),%rcx
add    $0x8,%esi
mov    %esi,(%rdx)
movslq 0x534(%r8),%rdx
mov    %edx,(%rcx)
leaveq 
retq   
mov    0x10(%rdx),%rcx
mov    (%rcx,%rsi,1),%rcx
add    $0x8,%esi
mov    %esi,(%rdx)
movslq 0x52c(%r8),%rdx
mov    %edx,(%rcx)
leaveq 
retq   
mov    0x10(%rdx),%rcx
mov    (%rcx,%rsi,1),%rcx
add    $0x8,%esi
mov    %esi,(%rdx)
mov    0x520(%r8),%rdx
mov    %rdx,(%rcx)
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   0x0(%rax)

00000000000356e0 <JPEGPrintDir>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    0x350(%rdi),%rcx
test   %rcx,%rcx
jne    35713 <JPEGPrintDir+0x33>
lea    0x3a3b2(%rip),%rdi        # 6faad <module.62+0x37b>
lea    0x3a279(%rip),%rsi        # 6f97b <module.62+0x249>
mov    $0x946,%edx
lea    0x3accb(%rip),%rcx        # 703d9 <module.76+0x6a>
callq  8490 <__assert_fail@plt>
mov    0x48(%rdi),%rax
and    $0x4,%rax
test   %rax,%rax
je     35767 <JPEGPrintDir+0x87>
xor    %eax,%eax
lea    0x3acbd(%rip),%r10        # 703e6 <module.76+0x77>
mov    0x528(%rcx),%r8d
mov    %rsi,%r9
mov    %r15,-0x20(%rbp)
mov    %rdi,-0x8(%rbp)
mov    %rsi,-0x10(%rbp)
mov    %rdx,-0x18(%rbp)
mov    %r8,%rdx
mov    %r10,%rsi
mov    %r9,%rdi
mov    %rcx,%r15
callq  86f0 <fprintf@plt>
mov    %r15,%rcx
mov    -0x18(%rbp),%rdx
mov    -0x10(%rbp),%rsi
mov    -0x8(%rbp),%rdi
mov    -0x20(%rbp),%r15
mov    0x508(%rcx),%rax
test   %rax,%rax
jne    35775 <JPEGPrintDir+0x95>
leaveq 
retq   
callq  *%rax
leaveq 
retq   
nopl   0x0(%rax)

0000000000035780 <JPEGDefaultStripSize>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x8(%rbp)
mov    0x350(%rdi),%rax
mov    0x510(%rax),%rax
mov    %rdi,%r15
callq  *%rax
mov    0x5c(%r15),%ecx
cmp    %eax,%ecx
ja     357ad <JPEGDefaultStripSize+0x2d>
mov    -0x8(%rbp),%r15
leaveq 
retq   
movzwl 0x10a(%r15),%ecx
shl    $0x3,%ecx
mov    %rcx,%rdx
neg    %edx
cmp    %edx,%eax
jb     357c5 <JPEGDefaultStripSize+0x45>
xor    %ecx,%ecx
jmp    357d0 <JPEGDefaultStripSize+0x50>
lea    -0x1(%rax,%rcx,1),%eax
xor    %edx,%edx
div    %ecx
mov    %rax,%rcx
movzwl 0x10a(%r15),%eax
imul   %ecx,%eax
shl    $0x3,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nop

00000000000357f0 <JPEGDefaultTileSize>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %r13,-0x8(%rbp)
mov    %r14,-0x10(%rbp)
mov    %r15,-0x18(%rbp)
mov    0x350(%rdi),%rax
mov    0x518(%rax),%rax
mov    %rdi,%r13
mov    %rsi,%r15
mov    %rdx,%r14
callq  *%rax
xor    %ecx,%ecx
mov    (%r15),%edx
movzwl 0x108(%r13),%esi
shl    $0x3,%esi
mov    %rsi,%rax
neg    %eax
cmp    %eax,%edx
jb     3583b <JPEGDefaultTileSize+0x4b>
mov    %rcx,%rax
jmp    35843 <JPEGDefaultTileSize+0x53>
lea    -0x1(%rdx,%rsi,1),%eax
xor    %edx,%edx
div    %esi
movzwl 0x108(%r13),%edx
imul   %eax,%edx
shl    $0x3,%edx
mov    %edx,(%r15)
mov    (%r14),%eax
movzwl 0x10a(%r13),%esi
shl    $0x3,%esi
mov    %rsi,%rdx
neg    %edx
cmp    %edx,%eax
jae    35876 <JPEGDefaultTileSize+0x86>
lea    -0x1(%rax,%rsi,1),%eax
xor    %edx,%edx
div    %esi
mov    %rax,%rcx
movzwl 0x10a(%r13),%eax
imul   %ecx,%eax
shl    $0x3,%eax
mov    %eax,(%r14)
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)
nop

00000000000358a0 <LogL16toY>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %rdi,%rax
and    $0x7fff,%eax
test   %eax,%eax
jg     358ba <LogL16toY+0x1a>
xorpd  %xmm0,%xmm0
leaveq 
retq   
cvtsi2sd %eax,%xmm0
movsd  0x3b88a(%rip),%xmm1        # 71150 <module.60+0x87>
addsd  %xmm1,%xmm0
movsd  0x3b886(%rip),%xmm1        # 71158 <module.60+0x8f>
mulsd  %xmm1,%xmm0
movsd  0x3b882(%rip),%xmm1        # 71160 <module.60+0x97>
subsd  %xmm1,%xmm0
mov    %r15,-0x8(%rbp)
mov    %rdi,%r15
callq  8210 <exp@plt>
and    $0x8000,%r15d
test   %r15d,%r15d
jg     35900 <LogL16toY+0x60>
mov    -0x8(%rbp),%r15
leaveq 
retq   
movsd  0x3b860(%rip),%xmm1        # 71168 <module.60+0x9f>
xorpd  %xmm1,%xmm0
mov    -0x8(%rbp),%r15
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   (%rax)

0000000000035920 <LogL10toY>:
push   %rbp
mov    %rsp,%rbp
test   %edi,%edi
jne    3592e <LogL10toY+0xe>
xorpd  %xmm0,%xmm0
leaveq 
retq   
cvtsi2sd %edi,%xmm0
movsd  0x3b816(%rip),%xmm1        # 71150 <module.60+0x87>
addsd  %xmm1,%xmm0
movsd  0x3b82a(%rip),%xmm1        # 71170 <module.60+0xa7>
mulsd  %xmm1,%xmm0
movsd  0x3b826(%rip),%xmm1        # 71178 <module.60+0xaf>
subsd  %xmm1,%xmm0
callq  8210 <exp@plt>
leaveq 
retq   
nopl   (%rax)

0000000000035960 <XYZtoRGB24>:
push   %rbp
mov    %rsp,%rbp
sub    $0x40,%rsp
movsd  0x3b860(%rip),%xmm4        # 711d0 <module.60+0x107>
xor    %eax,%eax
mov    $0xff,%ecx
movss  0x4(%rdi),%xmm0
cvtss2sd %xmm0,%xmm1
movsd  0x3b838(%rip),%xmm0        # 711c0 <module.60+0xf7>
movapd %xmm1,%xmm3
mulsd  %xmm0,%xmm3
movss  (%rdi),%xmm0
cvtss2sd %xmm0,%xmm2
movsd  0x3b828(%rip),%xmm0        # 711c8 <module.60+0xff>
mulsd  %xmm2,%xmm0
addsd  %xmm0,%xmm3
movss  0x8(%rdi),%xmm0
cvtss2sd %xmm0,%xmm0
movsd  0x3b7ff(%rip),%xmm5        # 711b8 <module.60+0xef>
mulsd  %xmm0,%xmm5
addsd  %xmm3,%xmm5
xorpd  %xmm3,%xmm3
ucomisd %xmm3,%xmm5
jp     35a49 <XYZtoRGB24+0xe9>
ja     35a49 <XYZtoRGB24+0xe9>
mov    %rax,%rdx
mov    %dl,(%rsi)
movsd  0x3b7ce(%rip),%xmm5        # 711a8 <module.60+0xdf>
movapd %xmm1,%xmm6
mulsd  %xmm5,%xmm6
movsd  0x3b7c6(%rip),%xmm5        # 711b0 <module.60+0xe7>
mulsd  %xmm2,%xmm5
addsd  %xmm5,%xmm6
movsd  0x3b7a6(%rip),%xmm5        # 711a0 <module.60+0xd7>
mulsd  %xmm0,%xmm5
addsd  %xmm6,%xmm5
ucomisd %xmm3,%xmm5
jp     35a57 <XYZtoRGB24+0xf7>
ja     35a57 <XYZtoRGB24+0xf7>
mov    %rax,%rdx
mov    %dl,0x1(%rsi)
movsd  0x3b770(%rip),%xmm5        # 71188 <module.60+0xbf>
mulsd  %xmm5,%xmm1
movsd  0x3b76c(%rip),%xmm5        # 71190 <module.60+0xc7>
mulsd  %xmm5,%xmm2
addsd  %xmm2,%xmm1
movsd  0x3b74c(%rip),%xmm2        # 71180 <module.60+0xb7>
mulsd  %xmm2,%xmm0
addsd  %xmm1,%xmm0
ucomisd %xmm3,%xmm0
jp     35a62 <XYZtoRGB24+0x102>
ja     35a62 <XYZtoRGB24+0x102>
mov    %al,0x2(%rsi)
leaveq 
retq   
ucomisd %xmm4,%xmm5
jb     35a71 <XYZtoRGB24+0x111>
mov    %rcx,%rdx
jmpq   359d0 <XYZtoRGB24+0x70>
ucomisd %xmm4,%xmm5
jb     35ace <XYZtoRGB24+0x16e>
mov    %rcx,%rdx
jmp    35a0d <XYZtoRGB24+0xad>
ucomisd %xmm4,%xmm0
jb     35b2b <XYZtoRGB24+0x1cb>
mov    %rcx,%rax
jmp    35a44 <XYZtoRGB24+0xe4>
mov    %r15,-0x8(%rbp)
mov    %rsi,%r15
movdqu %xmm1,-0x30(%rbp)
movdqu %xmm2,-0x40(%rbp)
movdqu %xmm0,-0x20(%rbp)
movapd %xmm5,%xmm0
callq  8c60 <sqrt@plt>
mov    %r15,%rsi
movsd  0x3b6fd(%rip),%xmm1        # 71198 <module.60+0xcf>
mulsd  %xmm1,%xmm0
cvttsd2si %xmm0,%edx
mov    $0xff,%ecx
xor    %eax,%eax
mov    -0x8(%rbp),%r15
movsd  0x3b71a(%rip),%xmm4        # 711d0 <module.60+0x107>
xorpd  %xmm3,%xmm3
movdqu -0x20(%rbp),%xmm0
movdqu -0x40(%rbp),%xmm2
movdqu -0x30(%rbp),%xmm1
jmpq   359d0 <XYZtoRGB24+0x70>
mov    %r15,-0x8(%rbp)
mov    %rsi,%r15
movdqu %xmm1,-0x30(%rbp)
movdqu %xmm2,-0x40(%rbp)
movdqu %xmm0,-0x20(%rbp)
movapd %xmm5,%xmm0
callq  8c60 <sqrt@plt>
mov    %r15,%rsi
movsd  0x3b6a0(%rip),%xmm1        # 71198 <module.60+0xcf>
mulsd  %xmm1,%xmm0
cvttsd2si %xmm0,%edx
mov    $0xff,%ecx
xor    %eax,%eax
mov    -0x8(%rbp),%r15
movsd  0x3b6bd(%rip),%xmm4        # 711d0 <module.60+0x107>
xorpd  %xmm3,%xmm3
movdqu -0x20(%rbp),%xmm0
movdqu -0x40(%rbp),%xmm2
movdqu -0x30(%rbp),%xmm1
jmpq   35a0d <XYZtoRGB24+0xad>
mov    %r15,-0x40(%rbp)
mov    %rsi,%r15
callq  8c60 <sqrt@plt>
mov    %r15,%rsi
movsd  0x3b656(%rip),%xmm1        # 71198 <module.60+0xcf>
mulsd  %xmm1,%xmm0
cvttsd2si %xmm0,%eax
mov    -0x40(%rbp),%r15
jmpq   35a44 <XYZtoRGB24+0xe4>
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

0000000000035b60 <uv_decode>:
push   %rbp
mov    %rsp,%rbp
mov    $0xffffffffffffffff,%rax
test   %edx,%edx
jns    35b71 <uv_decode+0x11>
leaveq 
retq   
cmp    $0x3fa0,%edx
jle    35b7b <uv_decode+0x1b>
leaveq 
retq   
lea    0x3ab9e(%rip),%r11        # 70720 <uv_row>
xor    %eax,%eax
mov    $0xa3,%r8d
mov    %rax,%r9
jmp    35bac <uv_decode+0x4c>
lea    (%r9,%r8,1),%ecx
shr    %ecx
movslq %ecx,%r10
movswq 0x6(%r11,%r10,8),%r10
neg    %r10d
add    %edx,%r10d
test   %r10d,%r10d
jle    35bb9 <uv_decode+0x59>
mov    %rcx,%r9
mov    %r8,%rcx
sub    %r9d,%ecx
cmp    $0x1,%ecx
jg     35b8f <uv_decode+0x2f>
jmp    35bc1 <uv_decode+0x61>
test   %r10d,%r10d
js     35c19 <uv_decode+0xb9>
mov    %rcx,%r9
movslq %r9d,%r8
movswq 0x6(%r11,%r8,8),%rcx
sub    %ecx,%edx
cvtsi2sd %edx,%xmm0
movsd  0x3b578(%rip),%xmm3        # 71150 <module.60+0x87>
addsd  %xmm3,%xmm0
movsd  0x3b5f4(%rip),%xmm2        # 711d8 <module.60+0x10f>
mulsd  %xmm2,%xmm0
movss  (%r11,%r8,8),%xmm1
cvtss2sd %xmm1,%xmm1
addsd  %xmm1,%xmm0
movsd  %xmm0,(%rdi)
cvtsi2sd %r9d,%xmm0
addsd  %xmm3,%xmm0
mulsd  %xmm2,%xmm0
movsd  0x3b5d1(%rip),%xmm1        # 711e0 <module.60+0x117>
addsd  %xmm1,%xmm0
movsd  %xmm0,(%rsi)
leaveq 
retq   
mov    %rcx,%r8
jmp    35bac <uv_decode+0x4c>
xchg   %ax,%ax

0000000000035c20 <LogLuv24toXYZ>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    %r14,-0x18(%rbp)
mov    %r15,-0x20(%rbp)
mov    %rdi,%rax
and    $0xffc000,%eax
shr    $0xe,%eax
mov    %rsi,%r14
mov    %rdi,%r15
mov    %rax,%rdi
callq  80c0 <LogL10toY@plt>
xorpd  %xmm1,%xmm1
ucomisd %xmm1,%xmm0
jp     35c59 <LogLuv24toXYZ+0x39>
jbe    35d3a <LogLuv24toXYZ+0x11a>
lea    -0x30(%rbp),%rdi
lea    -0x28(%rbp),%rsi
mov    %r15,%rdx
and    $0x3fff,%edx
movdqu %xmm0,-0x10(%rbp)
callq  8340 <uv_decode@plt>
test   %eax,%eax
jns    35c92 <LogLuv24toXYZ+0x72>
movsd  0x3b590(%rip),%xmm0        # 71210 <module.60+0x147>
movsd  %xmm0,-0x30(%rbp)
movsd  0x3b58b(%rip),%xmm0        # 71218 <module.60+0x14f>
movsd  %xmm0,-0x28(%rbp)
movsd  0x3b54e(%rip),%xmm0        # 711e8 <module.60+0x11f>
mulsd  -0x30(%rbp),%xmm0
movsd  0x3b549(%rip),%xmm1        # 711f0 <module.60+0x127>
mulsd  -0x28(%rbp),%xmm1
subsd  %xmm1,%xmm0
movsd  0x3b540(%rip),%xmm1        # 711f8 <module.60+0x12f>
addsd  %xmm1,%xmm0
movsd  0x3b50c(%rip),%xmm1        # 711d0 <module.60+0x107>
movapd %xmm1,%xmm2
divsd  %xmm0,%xmm2
movsd  0x3b52c(%rip),%xmm0        # 71200 <module.60+0x137>
mulsd  -0x30(%rbp),%xmm0
movapd %xmm2,%xmm4
mulsd  %xmm0,%xmm4
movsd  0x3b51f(%rip),%xmm0        # 71208 <module.60+0x13f>
mulsd  -0x28(%rbp),%xmm0
mulsd  %xmm2,%xmm0
movapd %xmm4,%xmm3
divsd  %xmm0,%xmm3
movdqu -0x10(%rbp),%xmm2
mulsd  %xmm2,%xmm3
cvtsd2ss %xmm3,%xmm3
movss  %xmm3,(%r14)
cvtsd2ss %xmm2,%xmm3
movss  %xmm3,0x4(%r14)
subsd  %xmm4,%xmm1
subsd  %xmm0,%xmm1
divsd  %xmm0,%xmm1
mulsd  %xmm1,%xmm2
cvtsd2ss %xmm2,%xmm0
movss  %xmm0,0x8(%r14)
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
leaveq 
retq   
movss  %xmm1,0x8(%r14)
movss  %xmm1,0x4(%r14)
movss  %xmm1,(%r14)
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)

0000000000035d60 <LogLuv32toXYZ>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rsi,%r14
mov    %rdi,%r15
mov    %r15,%rdi
sar    $0x10,%edi
callq  8ce0 <LogL16toY@plt>
xorpd  %xmm1,%xmm1
ucomisd %xmm1,%xmm0
jp     35d91 <LogLuv32toXYZ+0x31>
jbe    35e5d <LogLuv32toXYZ+0xfd>
mov    %r15,%rax
and    $0xff00,%eax
shr    $0x8,%eax
mov    %eax,%eax
cvtsi2sd %rax,%xmm4
movsd  0x3b3a5(%rip),%xmm3        # 71150 <module.60+0x87>
addsd  %xmm3,%xmm4
movsd  0x3b469(%rip),%xmm1        # 71220 <module.60+0x157>
movapd %xmm4,%xmm2
mulsd  %xmm1,%xmm2
movzbl %r15b,%eax
mov    %eax,%eax
cvtsi2sd %rax,%xmm1
addsd  %xmm3,%xmm1
movsd  0x3b452(%rip),%xmm3        # 71228 <module.60+0x15f>
mulsd  %xmm1,%xmm3
subsd  %xmm3,%xmm2
movsd  0x3b412(%rip),%xmm3        # 711f8 <module.60+0x12f>
addsd  %xmm3,%xmm2
movsd  0x3b3de(%rip),%xmm3        # 711d0 <module.60+0x107>
movapd %xmm3,%xmm5
divsd  %xmm2,%xmm5
movsd  0x3b42e(%rip),%xmm2        # 71230 <module.60+0x167>
mulsd  %xmm2,%xmm4
mulsd  %xmm5,%xmm4
movsd  0x3b426(%rip),%xmm2        # 71238 <module.60+0x16f>
mulsd  %xmm2,%xmm1
mulsd  %xmm5,%xmm1
movapd %xmm4,%xmm2
divsd  %xmm1,%xmm2
mulsd  %xmm0,%xmm2
cvtsd2ss %xmm2,%xmm2
movss  %xmm2,(%r14)
cvtsd2ss %xmm0,%xmm2
movss  %xmm2,0x4(%r14)
subsd  %xmm4,%xmm3
subsd  %xmm1,%xmm3
divsd  %xmm1,%xmm3
mulsd  %xmm3,%xmm0
cvtsd2ss %xmm0,%xmm0
movss  %xmm0,0x8(%r14)
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
movss  %xmm1,0x8(%r14)
movss  %xmm1,0x4(%r14)
movss  %xmm1,(%r14)
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

0000000000035e80 <LogL16fromY>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
movsd  0x3b3c8(%rip),%xmm1        # 71258 <module.60+0x18f>
ucomisd %xmm1,%xmm0
jb     35e9d <LogL16fromY+0x1d>
mov    $0x7fff,%eax
leaveq 
retq   
movsd  0x3b3bb(%rip),%xmm1        # 71260 <module.60+0x197>
ucomisd %xmm1,%xmm0
jp     35eb4 <LogL16fromY+0x34>
ja     35eb4 <LogL16fromY+0x34>
mov    $0xffff,%eax
leaveq 
retq   
movsd  0x3b3b4(%rip),%xmm1        # 71270 <module.60+0x1a7>
ucomisd %xmm1,%xmm0
ja     35ed6 <LogL16fromY+0x56>
movsd  0x3b39e(%rip),%xmm1        # 71268 <module.60+0x19f>
ucomisd %xmm1,%xmm0
jp     35ed2 <LogL16fromY+0x52>
jb     35f3c <LogL16fromY+0xbc>
xor    %eax,%eax
leaveq 
retq   
test   %edi,%edi
je     35fae <LogL16fromY+0x12e>
callq  8570 <log@plt>
movdqu %xmm0,-0x10(%rbp)
callq  8d10 <rand@plt>
cvtsi2sd %eax,%xmm1
movsd  0x3b357(%rip),%xmm0        # 71250 <module.60+0x187>
mulsd  %xmm0,%xmm1
movdqu -0x10(%rbp),%xmm0
movsd  0x3b336(%rip),%xmm2        # 71240 <module.60+0x177>
mulsd  %xmm2,%xmm0
movsd  0x3b332(%rip),%xmm2        # 71248 <module.60+0x17f>
addsd  %xmm2,%xmm0
movsd  0x3b276(%rip),%xmm2        # 71198 <module.60+0xcf>
mulsd  %xmm2,%xmm0
addsd  %xmm0,%xmm1
movsd  0x3b21e(%rip),%xmm0        # 71150 <module.60+0x87>
subsd  %xmm0,%xmm1
cvttsd2si %xmm1,%eax
leaveq 
retq   
test   %edi,%edi
je     35fdd <LogL16fromY+0x15d>
movsd  0x3b21c(%rip),%xmm1        # 71168 <module.60+0x9f>
xorpd  %xmm1,%xmm0
callq  8570 <log@plt>
movdqu %xmm0,-0x10(%rbp)
callq  8d10 <rand@plt>
cvtsi2sd %eax,%xmm0
movsd  0x3b2e5(%rip),%xmm1        # 71250 <module.60+0x187>
mulsd  %xmm1,%xmm0
movdqu -0x10(%rbp),%xmm1
movsd  0x3b2c4(%rip),%xmm2        # 71240 <module.60+0x177>
mulsd  %xmm2,%xmm1
movsd  0x3b2c0(%rip),%xmm2        # 71248 <module.60+0x17f>
addsd  %xmm2,%xmm1
movsd  0x3b204(%rip),%xmm2        # 71198 <module.60+0xcf>
mulsd  %xmm2,%xmm1
addsd  %xmm1,%xmm0
movsd  0x3b1ac(%rip),%xmm1        # 71150 <module.60+0x87>
subsd  %xmm1,%xmm0
cvttsd2si %xmm0,%eax
jmp    36016 <LogL16fromY+0x196>
callq  8570 <log@plt>
movsd  0x3b285(%rip),%xmm1        # 71240 <module.60+0x177>
mulsd  %xmm1,%xmm0
movsd  0x3b281(%rip),%xmm1        # 71248 <module.60+0x17f>
addsd  %xmm1,%xmm0
movsd  0x3b1c5(%rip),%xmm1        # 71198 <module.60+0xcf>
mulsd  %xmm1,%xmm0
cvttsd2si %xmm0,%eax
leaveq 
retq   
movsd  0x3b183(%rip),%xmm1        # 71168 <module.60+0x9f>
xorpd  %xmm1,%xmm0
callq  8570 <log@plt>
movsd  0x3b24a(%rip),%xmm1        # 71240 <module.60+0x177>
mulsd  %xmm1,%xmm0
movsd  0x3b246(%rip),%xmm1        # 71248 <module.60+0x17f>
addsd  %xmm1,%xmm0
movsd  0x3b18a(%rip),%xmm1        # 71198 <module.60+0xcf>
mulsd  %xmm1,%xmm0
cvttsd2si %xmm0,%eax
or     $0xffff8000,%eax
leaveq 
retq   
nopl   (%rax)

0000000000036020 <LogL10fromY>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
movsd  0x3b248(%rip),%xmm1        # 71278 <module.60+0x1af>
ucomisd %xmm1,%xmm0
jb     3603d <LogL10fromY+0x1d>
mov    $0x3ff,%eax
leaveq 
retq   
movsd  0x3b23b(%rip),%xmm1        # 71280 <module.60+0x1b7>
ucomisd %xmm1,%xmm0
jp     36051 <LogL10fromY+0x31>
ja     36051 <LogL10fromY+0x31>
xor    %eax,%eax
leaveq 
retq   
test   %edi,%edi
je     360b3 <LogL10fromY+0x93>
callq  8570 <log@plt>
movdqu %xmm0,-0x10(%rbp)
callq  8d10 <rand@plt>
cvtsi2sd %eax,%xmm1
movsd  0x3b1e0(%rip),%xmm0        # 71250 <module.60+0x187>
mulsd  %xmm0,%xmm1
movdqu -0x10(%rbp),%xmm0
movsd  0x3b1bf(%rip),%xmm2        # 71240 <module.60+0x177>
mulsd  %xmm2,%xmm0
movsd  0x3b16b(%rip),%xmm2        # 711f8 <module.60+0x12f>
addsd  %xmm2,%xmm0
movsd  0x3b1af(%rip),%xmm2        # 71248 <module.60+0x17f>
mulsd  %xmm2,%xmm0
addsd  %xmm0,%xmm1
movsd  0x3b0a7(%rip),%xmm0        # 71150 <module.60+0x87>
subsd  %xmm0,%xmm1
cvttsd2si %xmm1,%eax
leaveq 
retq   
callq  8570 <log@plt>
movsd  0x3b180(%rip),%xmm1        # 71240 <module.60+0x177>
mulsd  %xmm1,%xmm0
movsd  0x3b12c(%rip),%xmm1        # 711f8 <module.60+0x12f>
addsd  %xmm1,%xmm0
movsd  0x3b170(%rip),%xmm1        # 71248 <module.60+0x17f>
mulsd  %xmm1,%xmm0
cvttsd2si %xmm0,%eax
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   (%rax)

00000000000360f0 <uv_encode>:
push   %rbp
mov    %rsp,%rbp
sub    $0x40,%rsp
movsd  0x3b0e0(%rip),%xmm3        # 711e0 <module.60+0x117>
ucomisd %xmm3,%xmm1
jp     36108 <uv_encode+0x18>
jb     36177 <uv_encode+0x87>
movsd  0x3b178(%rip),%xmm2        # 71288 <module.60+0x1bf>
test   %edi,%edi
je     3617e <uv_encode+0x8e>
mov    %rdi,-0x20(%rbp)
movdqu %xmm1,-0x40(%rbp)
movdqu %xmm0,-0x30(%rbp)
callq  8d10 <rand@plt>
cvtsi2sd %eax,%xmm0
movsd  0x3b11d(%rip),%xmm1        # 71250 <module.60+0x187>
mulsd  %xmm1,%xmm0
movsd  0x3b0a1(%rip),%xmm2        # 711e0 <module.60+0x117>
movdqu -0x40(%rbp),%xmm1
movapd %xmm1,%xmm3
subsd  %xmm2,%xmm3
movsd  0x3b134(%rip),%xmm2        # 71288 <module.60+0x1bf>
mulsd  %xmm2,%xmm3
addsd  %xmm3,%xmm0
movsd  0x3afec(%rip),%xmm3        # 71150 <module.60+0x87>
subsd  %xmm3,%xmm0
cvttsd2si %xmm0,%eax
mov    -0x20(%rbp),%rdi
movdqu -0x30(%rbp),%xmm0
jmp    36197 <uv_encode+0xa7>
callq  37be0 <oog_encode>
leaveq 
retq   
xorpd  0x3b10a(%rip),%xmm3        # 71290 <module.60+0x1c7>
addsd  %xmm1,%xmm3
mulsd  %xmm2,%xmm3
cvttsd2si %xmm3,%eax
movdqu %xmm1,-0x40(%rbp)
cmp    $0xa2,%eax
jg     36230 <uv_encode+0x140>
lea    0x3a577(%rip),%rcx        # 70720 <uv_row>
movslq %eax,%rax
movss  (%rcx,%rax,8),%xmm3
cvtss2sd %xmm3,%xmm3
ucomisd %xmm0,%xmm3
ja     36237 <uv_encode+0x147>
test   %edi,%edi
je     3623e <uv_encode+0x14e>
mov    %r15,-0x8(%rbp)
mov    %rax,%r15
movdqu %xmm0,-0x20(%rbp)
movdqu %xmm3,-0x30(%rbp)
callq  8d10 <rand@plt>
cvtsi2sd %eax,%xmm1
mov    %r15,%rax
movsd  0x3b06c(%rip),%xmm0        # 71250 <module.60+0x187>
mulsd  %xmm0,%xmm1
movdqu -0x30(%rbp),%xmm2
movdqu -0x20(%rbp),%xmm0
xorpd  0x3b096(%rip),%xmm2        # 71290 <module.60+0x1c7>
addsd  %xmm0,%xmm2
movsd  0x3b082(%rip),%xmm3        # 71288 <module.60+0x1bf>
mulsd  %xmm3,%xmm2
addsd  %xmm2,%xmm1
movsd  0x3af3a(%rip),%xmm2        # 71150 <module.60+0x87>
subsd  %xmm2,%xmm1
cvttsd2si %xmm1,%edx
lea    0x3a4fb(%rip),%rcx        # 70720 <uv_row>
mov    -0x8(%rbp),%r15
movdqu -0x40(%rbp),%xmm1
jmp    36252 <uv_encode+0x162>
callq  37be0 <oog_encode>
leaveq 
retq   
callq  37be0 <oog_encode>
leaveq 
retq   
xorpd  0x3b04a(%rip),%xmm3        # 71290 <module.60+0x1c7>
addsd  %xmm0,%xmm3
mulsd  %xmm2,%xmm3
cvttsd2si %xmm3,%edx
movswq 0x4(%rcx,%rax,8),%rsi
cmp    %edx,%esi
jle    36266 <uv_encode+0x176>
movswq 0x6(%rcx,%rax,8),%rax
add    %edx,%eax
leaveq 
retq   
callq  37be0 <oog_encode>
leaveq 
retq   
nopl   (%rax)

0000000000036270 <LogLuv24fromXYZ>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rdi,%r14
mov    %rsi,%r15
movss  0x4(%r14),%xmm0
cvtss2sd %xmm0,%xmm0
mov    %r15,%rdi
callq  88f0 <LogL10fromY@plt>
movss  (%r14),%xmm3
movss  0x4(%r14),%xmm0
movss  0x8(%r14),%xmm1
test   %eax,%eax
jne    362f4 <LogLuv24fromXYZ+0x84>
movsd  0x3af63(%rip),%xmm1        # 71218 <module.60+0x14f>
movsd  0x3af53(%rip),%xmm0        # 71210 <module.60+0x147>
mov    %r15,%rdi
mov    %rax,%r14
callq  8840 <uv_encode@plt>
test   %eax,%eax
jns    362e3 <LogLuv24fromXYZ+0x73>
xor    %edi,%edi
movsd  0x3af42(%rip),%xmm1        # 71218 <module.60+0x14f>
movsd  0x3af32(%rip),%xmm0        # 71210 <module.60+0x147>
callq  8840 <uv_encode@plt>
shl    $0xe,%r14d
or     %r14d,%eax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
cvtss2sd %xmm1,%xmm2
movsd  0x3afa0(%rip),%xmm1        # 712a0 <module.60+0x1d7>
mulsd  %xmm1,%xmm2
cvtss2sd %xmm0,%xmm1
movsd  0x3af98(%rip),%xmm0        # 712a8 <module.60+0x1df>
mulsd  %xmm0,%xmm1
cvtss2sd %xmm3,%xmm0
addsd  %xmm0,%xmm1
addsd  %xmm1,%xmm2
xorpd  %xmm1,%xmm1
ucomisd %xmm1,%xmm2
jp     36341 <LogLuv24fromXYZ+0xd1>
ja     36341 <LogLuv24fromXYZ+0xd1>
movsd  0x3aee4(%rip),%xmm1        # 71218 <module.60+0x14f>
movsd  0x3aed4(%rip),%xmm0        # 71210 <module.60+0x147>
jmpq   362bd <LogLuv24fromXYZ+0x4d>
movsd  0x3aebf(%rip),%xmm1        # 71208 <module.60+0x13f>
mulsd  %xmm1,%xmm0
divsd  %xmm2,%xmm0
movss  0x4(%r14),%xmm1
cvtss2sd %xmm1,%xmm1
movsd  0x3ae9d(%rip),%xmm3        # 71200 <module.60+0x137>
mulsd  %xmm3,%xmm1
divsd  %xmm2,%xmm1
jmpq   362bd <LogLuv24fromXYZ+0x4d>

0000000000036370 <LogLuv32fromXYZ>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rdi,%r14
mov    %rsi,%r15
movss  0x4(%r14),%xmm0
cvtss2sd %xmm0,%xmm0
mov    %r15,%rdi
callq  8640 <LogL16fromY@plt>
movss  (%r14),%xmm1
movss  0x4(%r14),%xmm0
movss  0x8(%r14),%xmm2
test   %eax,%eax
jne    36457 <LogLuv32fromXYZ+0xe7>
xorpd  %xmm1,%xmm1
movsd  0x3ae53(%rip),%xmm3        # 71210 <module.60+0x147>
movsd  0x3ae53(%rip),%xmm0        # 71218 <module.60+0x14f>
movsd  0x3aee3(%rip),%xmm2        # 712b0 <module.60+0x1e7>
xor    %edx,%edx
ucomisd %xmm1,%xmm3
jp     364ac <LogLuv32fromXYZ+0x13c>
ja     364ac <LogLuv32fromXYZ+0x13c>
mov    %rdx,%r14
mov    $0xff,%ecx
cmp    $0xff,%r14d
jbe    363f3 <LogLuv32fromXYZ+0x83>
mov    %rcx,%r14
ucomisd %xmm1,%xmm0
jp     363ff <LogLuv32fromXYZ+0x8f>
jbe    36515 <LogLuv32fromXYZ+0x1a5>
test   %r15d,%r15d
je     3650d <LogLuv32fromXYZ+0x19d>
mov    %rax,%r15
movdqu %xmm0,-0x30(%rbp)
callq  8d10 <rand@plt>
cvtsi2sd %eax,%xmm0
mov    %r15,%rax
movsd  0x3ae2c(%rip),%xmm1        # 71250 <module.60+0x187>
mulsd  %xmm1,%xmm0
movsd  0x3ae80(%rip),%xmm2        # 712b0 <module.60+0x1e7>
movdqu -0x30(%rbp),%xmm1
mulsd  %xmm2,%xmm1
addsd  %xmm1,%xmm0
movsd  0x3ad0b(%rip),%xmm1        # 71150 <module.60+0x87>
subsd  %xmm1,%xmm0
cvttsd2si %xmm0,%edx
mov    $0xff,%ecx
jmpq   36515 <LogLuv32fromXYZ+0x1a5>
cvtss2sd %xmm2,%xmm2
movsd  0x3ae3d(%rip),%xmm3        # 712a0 <module.60+0x1d7>
mulsd  %xmm3,%xmm2
cvtss2sd %xmm0,%xmm0
movsd  0x3ae35(%rip),%xmm3        # 712a8 <module.60+0x1df>
mulsd  %xmm3,%xmm0
cvtss2sd %xmm1,%xmm3
addsd  %xmm3,%xmm0
addsd  %xmm0,%xmm2
xorpd  %xmm1,%xmm1
ucomisd %xmm1,%xmm2
jp     36539 <LogLuv32fromXYZ+0x1c9>
ja     36539 <LogLuv32fromXYZ+0x1c9>
movsd  0x3ad71(%rip),%xmm3        # 71210 <module.60+0x147>
movsd  0x3ad71(%rip),%xmm0        # 71218 <module.60+0x14f>
jmpq   363c5 <LogLuv32fromXYZ+0x55>
test   %r15d,%r15d
je     36568 <LogLuv32fromXYZ+0x1f8>
mov    %rax,%r14
movdqu %xmm3,-0x30(%rbp)
movdqu %xmm0,-0x20(%rbp)
callq  8d10 <rand@plt>
cvtsi2sd %eax,%xmm0
mov    %r14,%rax
movsd  0x3ad7a(%rip),%xmm1        # 71250 <module.60+0x187>
mulsd  %xmm1,%xmm0
movsd  0x3adce(%rip),%xmm2        # 712b0 <module.60+0x1e7>
movdqu -0x30(%rbp),%xmm1
mulsd  %xmm2,%xmm1
addsd  %xmm1,%xmm0
movsd  0x3ac59(%rip),%xmm1        # 71150 <module.60+0x87>
subsd  %xmm1,%xmm0
cvttsd2si %xmm0,%r14d
xor    %edx,%edx
movdqu -0x20(%rbp),%xmm0
xorpd  %xmm1,%xmm1
jmp    36571 <LogLuv32fromXYZ+0x201>
mulsd  %xmm2,%xmm0
cvttsd2si %xmm0,%edx
cmp    $0xff,%edx
ja     36520 <LogLuv32fromXYZ+0x1b0>
mov    %rdx,%rcx
shl    $0x10,%eax
shl    $0x8,%r14d
or     %r14d,%eax
or     %eax,%ecx
mov    %rcx,%rax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
movss  0x4(%r14),%xmm0
cvtss2sd %xmm0,%xmm0
movsd  0x3acb5(%rip),%xmm4        # 71200 <module.60+0x137>
mulsd  %xmm4,%xmm0
divsd  %xmm2,%xmm0
movsd  0x3acad(%rip),%xmm4        # 71208 <module.60+0x13f>
mulsd  %xmm4,%xmm3
divsd  %xmm2,%xmm3
jmpq   363c5 <LogLuv32fromXYZ+0x55>
mulsd  %xmm2,%xmm3
cvttsd2si %xmm3,%r14d
jmpq   363e2 <LogLuv32fromXYZ+0x72>
nopw   %cs:0x0(%rax,%rax,1)

0000000000036580 <TIFFInitSGILog>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
cmp    $0x8775,%esi
je     365b7 <TIFFInitSGILog+0x37>
cmp    $0x8774,%esi
je     365b7 <TIFFInitSGILog+0x37>
lea    0x3a6a8(%rip),%rdi        # 70c47 <module.9+0xf>
lea    0x3a6e0(%rip),%rsi        # 70c86 <module.9+0x4e>
mov    $0x6a6,%edx
lea    0x3a6de(%rip),%rcx        # 70c90 <module.9+0x58>
callq  8490 <__assert_fail@plt>
lea    0x433ea(%rip),%rcx        # 799a8 <LogLuvFields>
mov    $0x2,%edx
mov    %rdi,%rax
mov    %r15,-0x18(%rbp)
mov    %rsi,-0x10(%rbp)
mov    %rcx,%rsi
mov    %rdi,%r15
mov    %rax,%rdi
callq  8520 <_TIFFMergeFields@plt>
test   %eax,%eax
jne    36604 <TIFFInitSGILog+0x84>
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
lea    0x3a6af(%rip),%rdx        # 70c9f <module.9+0x67>
lea    0x3a641(%rip),%rsi        # 70c38 <module.9>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x18(%rbp),%r15
leaveq 
retq   
mov    $0x38,%edi
callq  8440 <_TIFFmalloc@plt>
mov    %rax,0x350(%r15)
test   %rax,%rax
je     3664c <TIFFInitSGILog+0xcc>
mov    %rax,%rdi
xor    %esi,%esi
mov    %r14,-0x8(%rbp)
mov    %rax,%r14
mov    $0x38,%edx
callq  88e0 <_TIFFmemset@plt>
mov    -0x10(%rbp),%rax
cmp    $0x8775,%eax
movl   $0xffffffff,0x4(%r14)
mov    $0x1,%eax
je     36673 <TIFFInitSGILog+0xf3>
xor    %ecx,%ecx
jmp    36676 <TIFFInitSGILog+0xf6>
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
lea    0x3a66d(%rip),%rdx        # 70cc9 <module.9+0x91>
mov    (%r15),%rcx
lea    0x3a5d2(%rip),%rsi        # 70c38 <module.9>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x18(%rbp),%r15
leaveq 
retq   
mov    %rax,%rcx
mov    %ecx,0x8(%r14)
lea    0x1f6f(%rip),%rcx        # 385f0 <_logLuvNop>
mov    %rcx,0x20(%r14)
lea    0x24c4(%rip),%rcx        # 38b50 <LogLuvFixupTags>
mov    %rcx,0x2c0(%r15)
lea    0x24c6(%rip),%rcx        # 38b60 <LogLuvSetupDecode>
mov    %rcx,0x2c8(%r15)
lea    0x698(%rip),%rcx        # 36d40 <LogLuvDecodeStrip>
mov    %rcx,0x308(%r15)
lea    0x76a(%rip),%rcx        # 36e20 <LogLuvDecodeTile>
mov    %rcx,0x318(%r15)
lea    0x268c(%rip),%rcx        # 38d50 <LogLuvSetupEncode>
mov    %rcx,0x2d8(%r15)
lea    0x11de(%rip),%rcx        # 378b0 <LogLuvEncodeStrip>
mov    %rcx,0x310(%r15)
lea    0x12b0(%rip),%rcx        # 37990 <LogLuvEncodeTile>
mov    %rcx,0x320(%r15)
lea    0x2832(%rip),%rcx        # 38f20 <LogLuvClose>
mov    %rcx,0x328(%r15)
lea    0x2894(%rip),%rcx        # 38f90 <LogLuvCleanup>
mov    %rcx,0x338(%r15)
mov    0x410(%r15),%rcx
mov    %rcx,0x28(%r14)
lea    0x2aeb(%rip),%rcx        # 39200 <LogLuvVGetField>
mov    %rcx,0x410(%r15)
mov    0x408(%r15),%rcx
mov    %rcx,0x30(%r14)
lea    0x2902(%rip),%rcx        # 39030 <LogLuvVSetField>
mov    %rcx,0x408(%r15)
mov    -0x8(%rbp),%r14
mov    -0x18(%rbp),%r15
leaveq 
retq   
nop

0000000000036740 <LogL16Decode>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    0x350(%rdi),%rax
lea    0x3a530(%rip),%r8        # 70c86 <module.9+0x4e>
lea    0x3a5a4(%rip),%r9        # 70d01 <module.15+0x14>
test   %cx,%cx
je     36779 <LogL16Decode+0x39>
mov    %r9,%rcx
mov    %r8,%rsi
lea    0x3a58b(%rip),%rdi        # 70cfa <module.15+0xd>
mov    $0xc6,%edx
callq  8490 <__assert_fail@plt>
test   %rax,%rax
jne    36795 <LogL16Decode+0x55>
mov    %r9,%rcx
mov    %r8,%rsi
lea    0x3a583(%rip),%rdi        # 70d0e <module.15+0x21>
mov    $0xc7,%edx
callq  8490 <__assert_fail@plt>
mov    %r13,%r8
mov    %r12,%r13
mov    %rax,%r12
mov    %rdx,%rax
mov    %rbx,%r9
mov    %rdi,%rbx
movslq 0xc(%r12),%rcx
cqto   
mov    %r15,%r10
mov    %r14,%r11
idiv   %rcx
lea    0x3a52f(%rip),%r15        # 70ced <module.15>
xor    %r14d,%r14d
movslq 0x4(%r12),%rcx
cmp    $0x1,%ecx
jne    36810 <LogL16Decode+0xd0>
mov    %rsi,%r15
lea    (%rax,%rax,1),%rdx
mov    %r15,%rdi
mov    %r14,%rcx
mov    %rsi,-0x8(%rbp)
mov    %r9,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r8,-0x20(%rbp)
mov    %r11,-0x28(%rbp)
mov    %r10,-0x30(%rbp)
mov    %rcx,%rsi
mov    %rax,%r13
callq  88e0 <_TIFFmemset@plt>
mov    0x388(%rbx),%r9
mov    0x390(%rbx),%r10
mov    $0x10,%ecx
jmp    36826 <LogL16Decode+0xe6>
mov    0x18(%r12),%rcx
cmp    %rax,%rcx
jl     3686d <LogL16Decode+0x12d>
mov    0x10(%r12),%r15
jmp    367ce <LogL16Decode+0x8e>
cmp    %rsi,%r13
jne    3689e <LogL16Decode+0x15e>
add    $0xfffffff8,%ecx
test   %ecx,%ecx
jns    368f3 <LogL16Decode+0x1b3>
mov    %r13,%rdx
mov    %r10,%r13
mov    %r12,%rdi
mov    %r9,%r12
mov    -0x8(%rbp),%rsi
callq  *0x20(%rdi)
mov    %r12,0x388(%rbx)
mov    %r13,0x390(%rbx)
mov    $0x1,%eax
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
mov    -0x10(%rbp),%rbx
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rbx),%rdi
mov    %r15,%rsi
mov    %r10,%r15
mov    %r9,%rbx
mov    %r8,%r12
mov    %r11,%r14
lea    0x3a48d(%rip),%rdx        # 70d19 <module.15+0x2c>
callq  8a00 <TIFFErrorExt@plt>
mov    %r13,%rcx
mov    %r12,%r13
mov    %rcx,%r12
xor    %eax,%eax
leaveq 
retq   
sub    %rsi,%r13
mov    %r13,%r8
mov    %r10,%r13
mov    %r9,%r12
xor    %eax,%eax
mov    0x3b8(%rbx),%rdi
lea    0x3a47c(%rip),%rdx        # 70d36 <module.15+0x49>
mov    0x27c(%rbx),%ecx
lea    0x3a426(%rip),%rsi        # 70ced <module.15>
callq  8a00 <TIFFErrorExt@plt>
mov    %r12,0x388(%rbx)
mov    %r13,0x390(%rbx)
mov    %r14,%rax
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
mov    -0x10(%rbp),%rbx
leaveq 
retq   
mov    %r14,%rsi
cmp    %rsi,%r13
jle    36821 <LogL16Decode+0xe1>
test   %r10,%r10
jle    36821 <LogL16Decode+0xe1>
movzbl (%r9),%edx
cmp    $0x7f,%dl
ja     36917 <LogL16Decode+0x1d7>
add    $0x1,%r9
jmp    3695c <LogL16Decode+0x21c>
cmp    $0x1,%r10
jle    36821 <LogL16Decode+0xe1>
movzbl 0x1(%r9),%edi
shl    %cl,%edi
add    $0x2,%r9
add    $0xfffffffffffffffe,%r10
lea    -0x7e(%rdx),%eax
jmp    36983 <LogL16Decode+0x243>
test   %edx,%edx
je     368f6 <LogL16Decode+0x1b6>
cmp    %rsi,%r13
jle    368f6 <LogL16Decode+0x1b6>
movzbl (%r9),%eax
shl    %cl,%eax
movswq (%r15,%rsi,2),%rdi
or     %di,%ax
mov    %ax,(%r15,%rsi,2)
add    $0x1,%r9
add    $0x1,%rsi
add    $0xffffffff,%edx
add    $0xffffffffffffffff,%r10
test   %r10,%r10
jne    36935 <LogL16Decode+0x1f5>
mov    %r14,%r10
jmp    368f6 <LogL16Decode+0x1b6>
cmp    %rsi,%r13
jle    368f6 <LogL16Decode+0x1b6>
movswq (%r15,%rsi,2),%rdx
or     %di,%dx
mov    %dx,(%r15,%rsi,2)
add    $0x1,%rsi
add    $0xffffffff,%eax
test   %eax,%eax
jne    3696a <LogL16Decode+0x22a>
jmpq   368f6 <LogL16Decode+0x1b6>
nopl   0x0(%rax)

0000000000036990 <LogLuvDecode24>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    0x350(%rdi),%r8
lea    0x3a2e0(%rip),%rax        # 70c86 <module.9+0x4e>
lea    0x3a3c7(%rip),%r9        # 70d74 <module.21+0xf>
test   %cx,%cx
je     369c9 <LogLuvDecode24+0x39>
mov    %r9,%rcx
mov    %rax,%rsi
lea    0x3a33b(%rip),%rdi        # 70cfa <module.15+0xd>
mov    $0x10f,%edx
callq  8490 <__assert_fail@plt>
test   %r8,%r8
jne    369e5 <LogLuvDecode24+0x55>
mov    %r9,%rcx
mov    %rax,%rsi
lea    0x3a333(%rip),%rdi        # 70d0e <module.15+0x21>
mov    $0x110,%edx
callq  8490 <__assert_fail@plt>
mov    %rdx,%rax
movslq 0xc(%r8),%rcx
cqto   
mov    %rsi,%r10
mov    %r15,%r11
idiv   %rcx
lea    0x3a367(%rip),%rsi        # 70d65 <module.21>
xor    %r15d,%r15d
movslq 0x4(%r8),%rcx
cmp    $0x2,%ecx
jne    36a2c <LogLuvDecode24+0x9c>
mov    %r10,%rdx
mov    0x388(%rdi),%rcx
mov    0x390(%rdi),%r9
mov    %r10,-0x8(%rbp)
mov    %r14,-0x10(%rbp)
mov    %r11,-0x18(%rbp)
mov    %r15,%r10
jmp    36a6d <LogLuvDecode24+0xdd>
mov    0x18(%r8),%rcx
cmp    %rax,%rcx
jl     36aa1 <LogLuvDecode24+0x111>
mov    0x10(%r8),%rdx
jmp    36a0d <LogLuvDecode24+0x7d>
cmp    $0x2,%r9
jle    36a72 <LogLuvDecode24+0xe2>
movzbl (%rcx),%r11d
shl    $0x10,%r11d
movzbl 0x1(%rcx),%r14d
shl    $0x8,%r14d
add    %r14d,%r11d
movzbl 0x2(%rcx),%r14d
add    %r14d,%r11d
mov    %r11d,(%rdx,%r10,4)
add    $0x3,%rcx
add    $0xfffffffffffffffd,%r9
add    $0x1,%r10
cmp    %r10,%rax
jg     36a3b <LogLuvDecode24+0xab>
mov    %rcx,0x388(%rdi)
mov    %r9,0x390(%rdi)
cmp    %r10,%rax
jne    36abd <LogLuvDecode24+0x12d>
mov    %rax,%rdx
mov    %r8,%rdi
mov    -0x8(%rbp),%rsi
callq  *0x20(%rdi)
mov    $0x1,%eax
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
mov    %r11,%r15
lea    0x3a265(%rip),%rdx        # 70d19 <module.15+0x2c>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
mov    %rax,%r8
sub    %r10,%r8
xor    %eax,%eax
mov    0x3b8(%rdi),%r9
lea    0x3a263(%rip),%rdx        # 70d36 <module.15+0x49>
mov    0x27c(%rdi),%ecx
mov    %r9,%rdi
callq  8a00 <TIFFErrorExt@plt>
mov    %r15,%rax
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
leaveq 
retq   
xchg   %ax,%ax

0000000000036af0 <LogLuvDecode32>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
lea    0x3a187(%rip),%r8        # 70c86 <module.9+0x4e>
lea    0x3a28c(%rip),%r9        # 70d92 <module.23+0xf>
test   %cx,%cx
je     36b22 <LogLuvDecode32+0x32>
mov    %r9,%rcx
mov    %r8,%rsi
lea    0x3a1e2(%rip),%rdi        # 70cfa <module.15+0xd>
mov    $0x14b,%edx
callq  8490 <__assert_fail@plt>
mov    0x350(%rdi),%rax
test   %rax,%rax
jne    36b45 <LogLuvDecode32+0x55>
mov    %r9,%rcx
mov    %r8,%rsi
lea    0x3a1d3(%rip),%rdi        # 70d0e <module.15+0x21>
mov    $0x14d,%edx
callq  8490 <__assert_fail@plt>
mov    %r13,%r8
mov    %r12,%r13
mov    %rax,%r12
mov    %rdx,%rax
mov    %rbx,%r9
mov    %rdi,%rbx
movslq 0xc(%r12),%rcx
cqto   
mov    %r14,%r10
mov    %r15,%r11
idiv   %rcx
lea    0x3a215(%rip),%r15        # 70d83 <module.23>
xor    %r14d,%r14d
movslq 0x4(%r12),%rcx
cmp    $0x2,%ecx
jne    36bc3 <LogLuvDecode32+0xd3>
mov    %rsi,%r15
mov    %rax,%rdx
shl    $0x2,%rdx
mov    %r15,%rdi
mov    %r14,%rcx
mov    %rsi,-0x8(%rbp)
mov    %r9,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r8,-0x20(%rbp)
mov    %r10,-0x28(%rbp)
mov    %r11,-0x30(%rbp)
mov    %rcx,%rsi
mov    %rax,%r13
callq  88e0 <_TIFFmemset@plt>
mov    0x388(%rbx),%r9
mov    0x390(%rbx),%r10
mov    $0x20,%ecx
jmp    36bd9 <LogLuvDecode32+0xe9>
mov    0x18(%r12),%rcx
cmp    %rax,%rcx
jl     36c20 <LogLuvDecode32+0x130>
mov    0x10(%r12),%r15
jmp    36b7e <LogLuvDecode32+0x8e>
cmp    %rsi,%r13
jne    36c51 <LogLuvDecode32+0x161>
add    $0xfffffff8,%ecx
test   %ecx,%ecx
jns    36ca6 <LogLuvDecode32+0x1b6>
mov    %r13,%rdx
mov    %r10,%r13
mov    %r12,%rdi
mov    %r9,%r12
mov    -0x8(%rbp),%rsi
callq  *0x20(%rdi)
mov    %r12,0x388(%rbx)
mov    %r13,0x390(%rbx)
mov    $0x1,%eax
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
mov    -0x10(%rbp),%rbx
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rbx),%rdi
mov    %r15,%rsi
mov    %r11,%r15
mov    %r9,%rbx
mov    %r8,%r12
mov    %r10,%r14
lea    0x3a0da(%rip),%rdx        # 70d19 <module.15+0x2c>
callq  8a00 <TIFFErrorExt@plt>
mov    %r13,%rcx
mov    %r12,%r13
mov    %rcx,%r12
xor    %eax,%eax
leaveq 
retq   
sub    %rsi,%r13
mov    %r13,%r8
mov    %r10,%r13
mov    %r9,%r12
xor    %eax,%eax
mov    0x3b8(%rbx),%rdi
lea    0x3a0c9(%rip),%rdx        # 70d36 <module.15+0x49>
mov    0x27c(%rbx),%ecx
lea    0x3a109(%rip),%rsi        # 70d83 <module.23>
callq  8a00 <TIFFErrorExt@plt>
mov    %r12,0x388(%rbx)
mov    %r13,0x390(%rbx)
mov    %r14,%rax
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
mov    -0x10(%rbp),%rbx
leaveq 
retq   
mov    %r14,%rsi
cmp    %rsi,%r13
jle    36bd4 <LogLuvDecode32+0xe4>
test   %r10,%r10
jle    36bd4 <LogLuvDecode32+0xe4>
movzbl (%r9),%edx
cmp    $0x7f,%dl
ja     36cca <LogLuvDecode32+0x1da>
add    $0x1,%r9
jmp    36d0a <LogLuvDecode32+0x21a>
cmp    $0x1,%r10
jle    36bd4 <LogLuvDecode32+0xe4>
movzbl 0x1(%r9),%edi
shl    %cl,%edi
add    $0x2,%r9
add    $0xfffffffffffffffe,%r10
lea    -0x7e(%rdx),%eax
jmp    36d2f <LogLuvDecode32+0x23f>
test   %edx,%edx
je     36ca9 <LogLuvDecode32+0x1b9>
cmp    %rsi,%r13
jle    36ca9 <LogLuvDecode32+0x1b9>
movzbl (%r9),%eax
shl    %cl,%eax
or     (%r15,%rsi,4),%eax
mov    %eax,(%r15,%rsi,4)
add    $0x1,%r9
add    $0x1,%rsi
add    $0xffffffff,%edx
add    $0xffffffffffffffff,%r10
test   %r10,%r10
jne    36ce8 <LogLuvDecode32+0x1f8>
mov    %r14,%r10
jmp    36ca9 <LogLuvDecode32+0x1b9>
cmp    %rsi,%r13
jle    36ca9 <LogLuvDecode32+0x1b9>
mov    %rdi,%rdx
or     (%r15,%rsi,4),%edx
mov    %edx,(%r15,%rsi,4)
add    $0x1,%rsi
add    $0xffffffff,%eax
test   %eax,%eax
jne    36d18 <LogLuvDecode32+0x228>
jmpq   36ca9 <LogLuvDecode32+0x1b9>
nopl   0x0(%rax,%rax,1)

0000000000036d40 <LogLuvDecodeStrip>:
push   %rbp
mov    %rsp,%rbp
sub    $0x40,%rsp
mov    %rdx,-0x40(%rbp)
mov    %rsi,-0x30(%rbp)
mov    %rdi,-0x28(%rbp)
mov    %rcx,-0x38(%rbp)
callq  8410 <TIFFScanlineSize@plt>
test   %rax,%rax
jne    36d66 <LogLuvDecodeStrip+0x26>
xor    %eax,%eax
leaveq 
retq   
mov    %r12,%rcx
mov    %rax,%r12
mov    -0x40(%rbp),%rax
cqto   
mov    %rbx,%rsi
mov    %rax,%rbx
idiv   %r12
test   %rdx,%rdx
jne    36da2 <LogLuvDecodeStrip+0x62>
mov    %rsi,-0x8(%rbp)
mov    %rcx,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x40(%rbp)
mov    -0x38(%rbp),%r13
mov    -0x28(%rbp),%r14
mov    -0x30(%rbp),%r15
jmp    36dde <LogLuvDecodeStrip+0x9e>
lea    0x39ff8(%rip),%rdi        # 70da1 <module.23+0x1e>
lea    0x39ed6(%rip),%rsi        # 70c86 <module.9+0x4e>
mov    $0x194,%edx
lea    0x39ff4(%rip),%rcx        # 70db0 <module.23+0x2d>
callq  8490 <__assert_fail@plt>
mov    %r14,%rdi
mov    %r15,%rsi
mov    %r12,%rdx
mov    %r13,%rcx
callq  *0x2f8(%r14)
test   %eax,%eax
je     36de3 <LogLuvDecodeStrip+0xa3>
sub    %r12,%rbx
add    %r12,%r15
test   %rbx,%rbx
jne    36dc1 <LogLuvDecodeStrip+0x81>
test   %rbx,%rbx
jne    36e03 <LogLuvDecodeStrip+0xc3>
mov    $0x1,%eax
mov    -0x40(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
mov    -0x40(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
xor    %eax,%eax
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

0000000000036e20 <LogLuvDecodeTile>:
push   %rbp
mov    %rsp,%rbp
sub    $0x40,%rsp
mov    %rdx,-0x40(%rbp)
mov    %rsi,-0x30(%rbp)
mov    %rdi,-0x28(%rbp)
mov    %rcx,-0x38(%rbp)
callq  80d0 <TIFFTileRowSize@plt>
test   %rax,%rax
jne    36e46 <LogLuvDecodeTile+0x26>
xor    %eax,%eax
leaveq 
retq   
mov    %r12,%rcx
mov    %rax,%r12
mov    -0x40(%rbp),%rax
cqto   
mov    %rbx,%rsi
mov    %rax,%rbx
idiv   %r12
test   %rdx,%rdx
jne    36e82 <LogLuvDecodeTile+0x62>
mov    %rsi,-0x8(%rbp)
mov    %rcx,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x40(%rbp)
mov    -0x38(%rbp),%r13
mov    -0x28(%rbp),%r14
mov    -0x30(%rbp),%r15
jmp    36ebe <LogLuvDecodeTile+0x9e>
lea    0x39f18(%rip),%rdi        # 70da1 <module.23+0x1e>
lea    0x39df6(%rip),%rsi        # 70c86 <module.9+0x4e>
mov    $0x1a9,%edx
lea    0x39f26(%rip),%rcx        # 70dc2 <module.23+0x3f>
callq  8490 <__assert_fail@plt>
mov    %r14,%rdi
mov    %r15,%rsi
mov    %r12,%rdx
mov    %r13,%rcx
callq  *0x2f8(%r14)
test   %eax,%eax
je     36ec3 <LogLuvDecodeTile+0xa3>
sub    %r12,%rbx
add    %r12,%r15
test   %rbx,%rbx
jne    36ea1 <LogLuvDecodeTile+0x81>
test   %rbx,%rbx
jne    36ee3 <LogLuvDecodeTile+0xc3>
mov    $0x1,%eax
mov    -0x40(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
mov    -0x40(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
xor    %eax,%eax
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

0000000000036f00 <LogL16Encode>:
push   %rbp
mov    %rsp,%rbp
sub    $0x50,%rsp
mov    0x350(%rdi),%r8
lea    0x39d70(%rip),%r9        # 70c86 <module.9+0x4e>
lea    0x39ec3(%rip),%rax        # 70de0 <module.28+0xd>
test   %cx,%cx
je     36f39 <LogL16Encode+0x39>
mov    %rax,%rcx
mov    %r9,%rsi
lea    0x39dcb(%rip),%rdi        # 70cfa <module.15+0xd>
mov    $0x1c4,%edx
callq  8490 <__assert_fail@plt>
test   %r8,%r8
jne    36f55 <LogL16Encode+0x55>
mov    %rax,%rcx
mov    %r9,%rsi
lea    0x39dc3(%rip),%rdi        # 70d0e <module.15+0x21>
mov    $0x1c5,%edx
callq  8490 <__assert_fail@plt>
mov    %rdx,%rax
mov    %r13,%r9
mov    %r14,%r10
mov    %rbx,%r14
mov    %rdi,%rbx
mov    %r12,%r11
mov    %rsi,%r12
movslq 0xc(%r8),%rcx
cqto   
idiv   %rcx
mov    %rax,-0x40(%rbp)
xor    %r13d,%r13d
movslq 0x4(%r8),%rcx
cmp    $0x1,%ecx
jne    36fcd <LogL16Encode+0xcd>
mov    %r15,%rsi
mov    %rax,%r15
mov    0x388(%rbx),%rdi
mov    0x370(%rbx),%rdx
mov    0x390(%rbx),%rax
sub    %rax,%rdx
mov    $0x1,%eax
mov    $0xff,%r8d
mov    $0x10,%ecx
mov    %r11,-0x10(%rbp)
mov    %r9,-0x18(%rbp)
mov    %r10,-0x20(%rbp)
mov    %rsi,-0x28(%rbp)
mov    %r14,-0x8(%rbp)
mov    %r13,%r14
jmpq   37059 <LogL16Encode+0x159>
mov    0x10(%r8),%rsi
mov    0x18(%r8),%rcx
cmp    %rax,%rcx
jl     3708e <LogL16Encode+0x18e>
mov    %rax,%rdx
mov    %r11,-0x28(%rbp)
mov    %r9,-0x30(%rbp)
mov    %r10,-0x38(%rbp)
mov    %r15,-0x48(%rbp)
mov    %r8,%rdi
mov    %rax,%r15
mov    %r12,%r8
mov    %rsi,%r12
mov    %r8,%rsi
callq  *0x20(%rdi)
mov    -0x48(%rbp),%rsi
mov    -0x38(%rbp),%r10
mov    -0x30(%rbp),%r9
mov    -0x28(%rbp),%r11
jmpq   36f89 <LogL16Encode+0x89>
lea    0x7e(%r14),%eax
mov    %al,(%rdi)
movswq (%r12,%rsi,2),%rax
sar    %cl,%eax
mov    %al,0x1(%rdi)
add    $0x2,%rdi
add    $0xfffffffffffffffe,%rdx
mov    %rcx,-0x48(%rbp)
movslq %r14d,%rax
add    %rax,%r13
mov    -0x40(%rbp),%r15
mov    $0x1,%eax
mov    -0x38(%rbp),%r8
cmp    %r13,%r15
jg     370c0 <LogL16Encode+0x1c0>
mov    $0xff,%r8d
mov    -0x48(%rbp),%rcx
xor    %r13d,%r13d
add    $0xfffffff8,%ecx
test   %ecx,%ecx
jns    370cf <LogL16Encode+0x1cf>
mov    %rdi,0x388(%rbx)
mov    0x370(%rbx),%rcx
sub    %rdx,%rcx
mov    %rcx,0x390(%rbx)
mov    -0x8(%rbp),%rbx
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rbx),%rdi
mov    %r10,%rbx
mov    %r11,%r12
mov    %r9,%r13
lea    0x39d2c(%rip),%rsi        # 70dd3 <module.28>
lea    0x39c6b(%rip),%rdx        # 70d19 <module.15+0x2c>
callq  8a00 <TIFFErrorExt@plt>
mov    %r14,%rcx
mov    %rbx,%r14
mov    %rcx,%rbx
xor    %eax,%eax
leaveq 
retq   
cmp    $0x3,%rdx
jle    370df <LogL16Encode+0x1df>
mov    -0x48(%rbp),%rcx
mov    %r13,%rsi
jmp    37136 <LogL16Encode+0x236>
shl    %cl,%r8d
mov    %r8,-0x38(%rbp)
mov    %rcx,-0x48(%rbp)
jmpq   37047 <LogL16Encode+0x147>
mov    %rdi,0x388(%rbx)
mov    0x370(%rbx),%rax
sub    %rdx,%rax
mov    %rax,0x390(%rbx)
mov    %rbx,%rdi
callq  86e0 <TIFFFlushData1@plt>
test   %eax,%eax
je     3714d <LogL16Encode+0x24d>
mov    0x388(%rbx),%rdi
mov    0x370(%rbx),%rdx
mov    0x390(%rbx),%rax
sub    %rax,%rdx
mov    $0x1,%eax
mov    -0x38(%rbp),%r8
mov    -0x48(%rbp),%rcx
mov    %r13,%rsi
jmp    37136 <LogL16Encode+0x236>
cmp    $0x3,%r14d
jg     37165 <LogL16Encode+0x265>
add    %r11,%rsi
cmp    %rsi,%r15
jle    37165 <LogL16Encode+0x265>
movswq (%r12,%rsi,2),%r9
and    %r8w,%r9w
movswq %r9w,%r10
mov    %rax,%r14
jmp    371af <LogL16Encode+0x2af>
mov    -0x8(%rbp),%rbx
xor    %eax,%eax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
leaveq 
retq   
mov    %r14,-0x48(%rbp)
mov    %rsi,%rax
sub    %r13,%rax
cmp    $0x1,%rax
jg     371c0 <LogL16Encode+0x2c0>
mov    $0x7f,%eax
cmp    %rsi,%r13
jl     371cd <LogL16Encode+0x2cd>
mov    -0x48(%rbp),%r14
cmp    $0x3,%r14d
jg     37018 <LogL16Encode+0x118>
xor    %r14d,%r14d
jmpq   37030 <LogL16Encode+0x130>
lea    (%r11,%rsi,1),%r9
cmp    %r9,%r15
jle    3712d <LogL16Encode+0x22d>
movswq (%r12,%r9,2),%r9
and    %r8d,%r9d
cmp    %r9d,%r10d
jne    3712d <LogL16Encode+0x22d>
add    $0x1,%r14d
movslq %r14d,%r11
cmp    $0x80,%r14d
jle    37195 <LogL16Encode+0x295>
jmpq   3712d <LogL16Encode+0x22d>
cmp    $0x3,%rax
jle    37241 <LogL16Encode+0x341>
mov    $0x7f,%eax
jmp    3717a <LogL16Encode+0x27a>
mov    %rsi,%r14
sub    %r13,%r14
cmp    $0x7f,%r14
jle    371dc <LogL16Encode+0x2dc>
mov    %rax,%r14
lea    0x3(%r14),%r8
cmp    %r8,%rdx
jge    37234 <LogL16Encode+0x334>
mov    %rdi,0x388(%rbx)
mov    0x370(%rbx),%rax
sub    %rdx,%rax
mov    %rax,0x390(%rbx)
mov    %rbx,%rdi
mov    %rsi,-0x30(%rbp)
mov    %rcx,%r15
callq  86e0 <TIFFFlushData1@plt>
test   %eax,%eax
je     37254 <LogL16Encode+0x354>
mov    0x388(%rbx),%rdi
mov    0x370(%rbx),%rdx
mov    0x390(%rbx),%rax
sub    %rax,%rdx
mov    %r15,%rcx
mov    -0x30(%rbp),%rsi
mov    $0x7f,%eax
mov    %r14b,(%rdi)
add    $0x1,%rdi
add    $0xffffffffffffffff,%rdx
jmp    37287 <LogL16Encode+0x387>
movswq (%r12,%r13,2),%rax
and    %r8w,%ax
movswq %ax,%r9
lea    0x1(%r13),%rax
jmp    3729d <LogL16Encode+0x39d>
mov    -0x8(%rbp),%rbx
xor    %eax,%eax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
leaveq 
retq   
movswq (%r12,%r13,2),%r8
sar    %cl,%r8d
mov    %r8b,(%rdi)
add    $0x1,%rdi
add    $0xffffffffffffffff,%rdx
add    $0x1,%r13
add    $0xffffffffffffffff,%r14
test   %r14,%r14
jne    3726c <LogL16Encode+0x36c>
jmpq   3717a <LogL16Encode+0x27a>
lea    0x1(%rax),%r10
cmp    %r10,%rsi
je     372b4 <LogL16Encode+0x3b4>
mov    %r10,%rax
movswq (%r12,%rax,2),%r10
and    %r8d,%r10d
cmp    %r10d,%r9d
je     37291 <LogL16Encode+0x391>
mov    $0x7f,%eax
jmpq   3717a <LogL16Encode+0x27a>
add    $0x7f,%rax
sub    %r13,%rax
mov    %al,(%rdi)
sar    %cl,%r9d
mov    %r9b,0x1(%rdi)
add    $0x2,%rdi
add    $0xfffffffffffffffe,%rdx
mov    %r10,%r13
mov    $0x7f,%eax
jmpq   3717a <LogL16Encode+0x27a>
nopl   0x0(%rax)

00000000000372e0 <LogLuvEncode24>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    0x350(%rdi),%r11
lea    0x39990(%rip),%r8        # 70c86 <module.9+0x4e>
lea    0x39aff(%rip),%rax        # 70dfc <module.30+0xf>
test   %cx,%cx
je     37319 <LogLuvEncode24+0x39>
mov    %rax,%rcx
mov    %r8,%rsi
lea    0x399eb(%rip),%rdi        # 70cfa <module.15+0xd>
mov    $0x221,%edx
callq  8490 <__assert_fail@plt>
test   %r11,%r11
jne    37335 <LogLuvEncode24+0x55>
mov    %rax,%rcx
mov    %r8,%rsi
lea    0x399e3(%rip),%rdi        # 70d0e <module.15+0x21>
mov    $0x222,%edx
callq  8490 <__assert_fail@plt>
mov    %rdx,%rax
mov    %r12,%r8
mov    %rdi,%r12
mov    %r15,%r9
mov    %r13,%r10
mov    %rsi,%r13
movslq 0xc(%r11),%rcx
cqto   
idiv   %rcx
xor    %r15d,%r15d
movslq 0x4(%r11),%rcx
cmp    $0x2,%ecx
jne    37392 <LogLuvEncode24+0xb2>
mov    %r14,%rdx
mov    %rax,%r14
mov    0x388(%r12),%rcx
mov    0x370(%r12),%rax
mov    0x390(%r12),%rsi
sub    %rsi,%rax
mov    %r10,-0x10(%rbp)
mov    %rdx,-0x18(%rbp)
mov    %r9,-0x20(%rbp)
mov    %r8,-0x8(%rbp)
jmpq   3744f <LogLuvEncode24+0x16f>
mov    0x10(%r11),%r15
mov    0x18(%r11),%rcx
cmp    %rax,%rcx
jl     37486 <LogLuvEncode24+0x1a6>
mov    %rax,%rdx
mov    %r10,-0x10(%rbp)
mov    %r14,-0x18(%rbp)
mov    %r9,-0x20(%rbp)
mov    %r13,%rsi
mov    %r8,%r13
mov    %r11,%rdi
mov    %rax,%r14
callq  *0x20(%rdi)
mov    %r13,%r8
mov    %r15,%r13
xor    %r15d,%r15d
mov    -0x20(%rbp),%r9
mov    -0x18(%rbp),%rdx
mov    -0x10(%rbp),%r10
jmp    37362 <LogLuvEncode24+0x82>
cmp    $0x2,%rax
jg     37424 <LogLuvEncode24+0x144>
mov    %rcx,0x388(%r12)
mov    0x370(%r12),%rcx
sub    %rax,%rcx
mov    %rcx,0x390(%r12)
mov    %r12,%rdi
callq  86e0 <TIFFFlushData1@plt>
test   %eax,%eax
je     374b0 <LogLuvEncode24+0x1d0>
mov    0x388(%r12),%rcx
mov    0x370(%r12),%rax
mov    0x390(%r12),%rdx
sub    %rdx,%rax
mov    0x0(%r13),%edx
shr    $0x10,%edx
mov    %dl,(%rcx)
mov    0x0(%r13),%edx
shr    $0x8,%edx
mov    %dl,0x1(%rcx)
movzbl 0x0(%r13),%edx
mov    %dl,0x2(%rcx)
add    $0x3,%rcx
add    $0xfffffffffffffffd,%rax
add    $0x4,%r13
add    $0xffffffffffffffff,%r14
test   %r14,%r14
jne    373d8 <LogLuvEncode24+0xf8>
mov    %rcx,0x388(%r12)
mov    0x370(%r12),%rcx
sub    %rax,%rcx
mov    %rcx,0x390(%r12)
mov    $0x1,%eax
mov    -0x8(%rbp),%r12
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%r12),%rdi
mov    %r8,%r12
mov    %r10,%r13
mov    %r9,%r15
lea    0x3994d(%rip),%rsi        # 70ded <module.30>
lea    0x39872(%rip),%rdx        # 70d19 <module.15+0x2c>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
mov    %r15,%rax
mov    -0x8(%rbp),%r12
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)

00000000000374d0 <LogLuvEncode32>:
push   %rbp
mov    %rsp,%rbp
sub    $0x50,%rsp
mov    0x350(%rdi),%r8
lea    0x397a0(%rip),%r9        # 70c86 <module.9+0x4e>
lea    0x3992d(%rip),%rax        # 70e1a <module.32+0xf>
test   %cx,%cx
je     37509 <LogLuvEncode32+0x39>
mov    %rax,%rcx
mov    %r9,%rsi
lea    0x397fb(%rip),%rdi        # 70cfa <module.15+0xd>
mov    $0x25a,%edx
callq  8490 <__assert_fail@plt>
test   %r8,%r8
jne    37525 <LogLuvEncode32+0x55>
mov    %rax,%rcx
mov    %r9,%rsi
lea    0x397f3(%rip),%rdi        # 70d0e <module.15+0x21>
mov    $0x25b,%edx
callq  8490 <__assert_fail@plt>
mov    %rdx,%rax
mov    %r13,%r9
mov    %r14,%r10
mov    %rbx,%r14
mov    %rdi,%rbx
mov    %r12,%r11
mov    %rsi,%r12
movslq 0xc(%r8),%rcx
cqto   
idiv   %rcx
mov    %rax,-0x40(%rbp)
xor    %r13d,%r13d
movslq 0x4(%r8),%rcx
cmp    $0x2,%ecx
jne    3759d <LogLuvEncode32+0xcd>
mov    %r15,%rsi
mov    %rax,%r15
mov    0x388(%rbx),%rdi
mov    0x370(%rbx),%rdx
mov    0x390(%rbx),%rax
sub    %rax,%rdx
mov    $0x1,%eax
mov    $0xff,%r8d
mov    $0x20,%ecx
mov    %r11,-0x10(%rbp)
mov    %r9,-0x18(%rbp)
mov    %r10,-0x20(%rbp)
mov    %rsi,-0x28(%rbp)
mov    %r14,-0x8(%rbp)
mov    %r13,%r14
jmpq   37628 <LogLuvEncode32+0x158>
mov    0x10(%r8),%rsi
mov    0x18(%r8),%rcx
cmp    %rax,%rcx
jl     3765d <LogLuvEncode32+0x18d>
mov    %rax,%rdx
mov    %r11,-0x20(%rbp)
mov    %r9,-0x28(%rbp)
mov    %r10,-0x30(%rbp)
mov    %r15,-0x48(%rbp)
mov    %r8,%rdi
mov    %rax,%r15
mov    %r12,%r8
mov    %rsi,%r12
mov    %r8,%rsi
callq  *0x20(%rdi)
mov    -0x48(%rbp),%rsi
mov    -0x30(%rbp),%r10
mov    -0x28(%rbp),%r9
mov    -0x20(%rbp),%r11
jmpq   37559 <LogLuvEncode32+0x89>
lea    0x7e(%r14),%eax
mov    %al,(%rdi)
mov    (%r12,%rsi,4),%eax
shr    %cl,%eax
mov    %al,0x1(%rdi)
add    $0x2,%rdi
add    $0xfffffffffffffffe,%rdx
mov    %rcx,-0x38(%rbp)
movslq %r14d,%rax
add    %rax,%r13
mov    -0x40(%rbp),%r15
mov    $0x1,%eax
mov    -0x30(%rbp),%r8
cmp    %r13,%r15
jg     3768f <LogLuvEncode32+0x1bf>
mov    $0xff,%r8d
mov    -0x38(%rbp),%rcx
xor    %r13d,%r13d
add    $0xfffffff8,%ecx
test   %ecx,%ecx
jns    3769e <LogLuvEncode32+0x1ce>
mov    %rdi,0x388(%rbx)
mov    0x370(%rbx),%rcx
sub    %rdx,%rcx
mov    %rcx,0x390(%rbx)
mov    -0x8(%rbp),%rbx
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rbx),%rdi
mov    %r10,%rbx
mov    %r11,%r12
mov    %r9,%r13
lea    0x39795(%rip),%rsi        # 70e0b <module.32>
lea    0x3969c(%rip),%rdx        # 70d19 <module.15+0x2c>
callq  8a00 <TIFFErrorExt@plt>
mov    %r14,%rcx
mov    %rbx,%r14
mov    %rcx,%rbx
xor    %eax,%eax
leaveq 
retq   
cmp    $0x3,%rdx
jle    376ae <LogLuvEncode32+0x1de>
mov    -0x38(%rbp),%rcx
mov    %r13,%rsi
jmp    37705 <LogLuvEncode32+0x235>
shl    %cl,%r8d
mov    %r8,-0x30(%rbp)
mov    %rcx,-0x38(%rbp)
jmpq   37616 <LogLuvEncode32+0x146>
mov    %rdi,0x388(%rbx)
mov    0x370(%rbx),%rax
sub    %rdx,%rax
mov    %rax,0x390(%rbx)
mov    %rbx,%rdi
callq  86e0 <TIFFFlushData1@plt>
test   %eax,%eax
je     37716 <LogLuvEncode32+0x246>
mov    0x388(%rbx),%rdi
mov    0x370(%rbx),%rdx
mov    0x390(%rbx),%rax
sub    %rax,%rdx
mov    $0x1,%eax
mov    -0x30(%rbp),%r8
mov    -0x38(%rbp),%rcx
mov    %r13,%rsi
jmp    37705 <LogLuvEncode32+0x235>
cmp    $0x3,%r14d
jg     3772e <LogLuvEncode32+0x25e>
add    %r11,%rsi
cmp    %rsi,%r15
jle    3772e <LogLuvEncode32+0x25e>
mov    %r8,%r9
and    (%r12,%rsi,4),%r9d
mov    %rax,%r14
jmp    37777 <LogLuvEncode32+0x2a7>
mov    -0x8(%rbp),%rbx
xor    %eax,%eax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
leaveq 
retq   
mov    %r14,-0x48(%rbp)
mov    %rsi,%rax
sub    %r13,%rax
cmp    $0x1,%rax
jg     37788 <LogLuvEncode32+0x2b8>
mov    $0x7f,%eax
cmp    %rsi,%r13
jl     37795 <LogLuvEncode32+0x2c5>
mov    -0x48(%rbp),%r14
cmp    $0x3,%r14d
jg     375e8 <LogLuvEncode32+0x118>
xor    %r14d,%r14d
jmpq   375ff <LogLuvEncode32+0x12f>
lea    (%r11,%rsi,1),%r10
cmp    %r10,%r15
jle    376fc <LogLuvEncode32+0x22c>
mov    (%r12,%r10,4),%r10d
and    %r8d,%r10d
cmp    %r9d,%r10d
jne    376fc <LogLuvEncode32+0x22c>
add    $0x1,%r14d
movslq %r14d,%r11
cmp    $0x80,%r14d
jle    3775e <LogLuvEncode32+0x28e>
jmpq   376fc <LogLuvEncode32+0x22c>
cmp    $0x3,%rax
jle    37809 <LogLuvEncode32+0x339>
mov    $0x7f,%eax
jmp    37743 <LogLuvEncode32+0x273>
mov    %rsi,%r14
sub    %r13,%r14
cmp    $0x7f,%r14
jle    377a4 <LogLuvEncode32+0x2d4>
mov    %rax,%r14
lea    0x3(%r14),%r8
cmp    %r8,%rdx
jge    377fc <LogLuvEncode32+0x32c>
mov    %rdi,0x388(%rbx)
mov    0x370(%rbx),%rax
sub    %rdx,%rax
mov    %rax,0x390(%rbx)
mov    %rbx,%rdi
mov    %rsi,-0x38(%rbp)
mov    %rcx,%r15
callq  86e0 <TIFFFlushData1@plt>
test   %eax,%eax
je     37816 <LogLuvEncode32+0x346>
mov    0x388(%rbx),%rdi
mov    0x370(%rbx),%rdx
mov    0x390(%rbx),%rax
sub    %rax,%rdx
mov    %r15,%rcx
mov    -0x38(%rbp),%rsi
mov    $0x7f,%eax
mov    %r14b,(%rdi)
add    $0x1,%rdi
add    $0xffffffffffffffff,%rdx
jmp    37848 <LogLuvEncode32+0x378>
mov    %r8,%rcx
and    (%r12,%r13,4),%ecx
lea    0x1(%r13),%rax
jmp    3785e <LogLuvEncode32+0x38e>
mov    -0x8(%rbp),%rbx
xor    %eax,%eax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
leaveq 
retq   
mov    (%r12,%r13,4),%r8d
shr    %cl,%r8d
mov    %r8b,(%rdi)
add    $0x1,%rdi
add    $0xffffffffffffffff,%rdx
add    $0x1,%r13
add    $0xffffffffffffffff,%r14
test   %r14,%r14
jne    3782e <LogLuvEncode32+0x35e>
jmpq   37743 <LogLuvEncode32+0x273>
lea    0x1(%rax),%r10
cmp    %r10,%rsi
je     37878 <LogLuvEncode32+0x3a8>
mov    %r10,%rax
mov    %r8,%r9
and    (%r12,%rax,4),%r9d
cmp    %ecx,%r9d
je     37852 <LogLuvEncode32+0x382>
mov    -0x38(%rbp),%rcx
mov    $0x7f,%eax
jmpq   37743 <LogLuvEncode32+0x273>
add    $0x7f,%rax
sub    %r13,%rax
mov    %al,(%rdi)
mov    -0x38(%rbp),%rcx
shr    %cl,%r9d
mov    %r9b,0x1(%rdi)
add    $0x2,%rdi
add    $0xfffffffffffffffe,%rdx
mov    %r10,%r13
mov    $0x7f,%eax
jmpq   37743 <LogLuvEncode32+0x273>
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   0x0(%rax)

00000000000378b0 <LogLuvEncodeStrip>:
push   %rbp
mov    %rsp,%rbp
sub    $0x40,%rsp
mov    %rdx,-0x40(%rbp)
mov    %rsi,-0x30(%rbp)
mov    %rdi,-0x28(%rbp)
mov    %rcx,-0x38(%rbp)
callq  8410 <TIFFScanlineSize@plt>
test   %rax,%rax
jne    378d6 <LogLuvEncodeStrip+0x26>
xor    %eax,%eax
leaveq 
retq   
mov    %r12,%rcx
mov    %rax,%r12
mov    -0x40(%rbp),%rax
cqto   
mov    %rbx,%rsi
mov    %rax,%rbx
idiv   %r12
test   %rdx,%rdx
jne    37912 <LogLuvEncodeStrip+0x62>
mov    %rsi,-0x8(%rbp)
mov    %rcx,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x40(%rbp)
mov    -0x38(%rbp),%r13
mov    -0x28(%rbp),%r14
mov    -0x30(%rbp),%r15
jmp    3794f <LogLuvEncodeStrip+0x9f>
lea    0x39488(%rip),%rdi        # 70da1 <module.23+0x1e>
lea    0x39366(%rip),%rsi        # 70c86 <module.9+0x4e>
mov    $0x2b6,%edx
lea    0x394fd(%rip),%rcx        # 70e29 <module.32+0x1e>
callq  8490 <__assert_fail@plt>
mov    %r14,%rdi
mov    %r15,%rsi
mov    %r12,%rdx
mov    %r13,%rcx
callq  *0x300(%r14)
cmp    $0x1,%eax
jne    37954 <LogLuvEncodeStrip+0xa4>
sub    %r12,%rbx
add    %r12,%r15
test   %rbx,%rbx
jne    37931 <LogLuvEncodeStrip+0x81>
test   %rbx,%rbx
jne    37974 <LogLuvEncodeStrip+0xc4>
mov    $0x1,%eax
mov    -0x40(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
mov    -0x40(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
xor    %eax,%eax
leaveq 
retq   
nopl   0x0(%rax)

0000000000037990 <LogLuvEncodeTile>:
push   %rbp
mov    %rsp,%rbp
sub    $0x40,%rsp
mov    %rdx,-0x40(%rbp)
mov    %rsi,-0x30(%rbp)
mov    %rdi,-0x28(%rbp)
mov    %rcx,-0x38(%rbp)
callq  80d0 <TIFFTileRowSize@plt>
test   %rax,%rax
jne    379b6 <LogLuvEncodeTile+0x26>
xor    %eax,%eax
leaveq 
retq   
mov    %r12,%rcx
mov    %rax,%r12
mov    -0x40(%rbp),%rax
cqto   
mov    %rbx,%rsi
mov    %rax,%rbx
idiv   %r12
test   %rdx,%rdx
jne    379f2 <LogLuvEncodeTile+0x62>
mov    %rsi,-0x8(%rbp)
mov    %rcx,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x40(%rbp)
mov    -0x38(%rbp),%r13
mov    -0x28(%rbp),%r14
mov    -0x30(%rbp),%r15
jmp    37a2f <LogLuvEncodeTile+0x9f>
lea    0x393a8(%rip),%rdi        # 70da1 <module.23+0x1e>
lea    0x39286(%rip),%rsi        # 70c86 <module.9+0x4e>
mov    $0x2ca,%edx
lea    0x3942f(%rip),%rcx        # 70e3b <module.32+0x30>
callq  8490 <__assert_fail@plt>
mov    %r14,%rdi
mov    %r15,%rsi
mov    %r12,%rdx
mov    %r13,%rcx
callq  *0x300(%r14)
cmp    $0x1,%eax
jne    37a34 <LogLuvEncodeTile+0xa4>
sub    %r12,%rbx
add    %r12,%r15
test   %rbx,%rbx
jne    37a11 <LogLuvEncodeTile+0x81>
test   %rbx,%rbx
jne    37a54 <LogLuvEncodeTile+0xc4>
mov    $0x1,%eax
mov    -0x40(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
mov    -0x40(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
xor    %eax,%eax
leaveq 
retq   
nopl   0x0(%rax)

0000000000037a70 <L16toY>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %r13,-0x8(%rbp)
mov    %r14,-0x10(%rbp)
mov    %r15,-0x18(%rbp)
mov    0x10(%rdi),%r14
mov    %rdx,%r13
mov    %rsi,%r15
jmp    37aae <L16toY+0x3e>
movswq (%r14),%rdi
callq  8ce0 <LogL16toY@plt>
cvtsd2ss %xmm0,%xmm0
movss  %xmm0,(%r15)
add    $0xffffffffffffffff,%r13
add    $0x2,%r14
add    $0x4,%r15
test   %r13,%r13
jg     37a90 <L16toY+0x20>
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   0x0(%rax)

0000000000037ad0 <L16toGry>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    0x10(%rdi),%r13
mov    %rdx,%rbx
mov    %rsi,%r12
xor    %r14d,%r14d
mov    $0xff,%r15d
jmp    37b2a <L16toGry+0x5a>
movswq 0x0(%r13),%rdi
callq  8ce0 <LogL16toY@plt>
xorpd  %xmm1,%xmm1
ucomisd %xmm1,%xmm0
jp     37b45 <L16toGry+0x75>
ja     37b45 <L16toGry+0x75>
mov    %r14,%rax
mov    %al,(%r12)
add    $0xffffffffffffffff,%rbx
add    $0x1,%r12
add    $0x2,%r13
test   %rbx,%rbx
jg     37b01 <L16toGry+0x31>
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
movsd  0x39683(%rip),%xmm1        # 711d0 <module.60+0x107>
ucomisd %xmm1,%xmm0
jb     37b58 <L16toGry+0x88>
mov    %r15,%rax
jmp    37b1a <L16toGry+0x4a>
callq  8c60 <sqrt@plt>
movsd  0x39633(%rip),%xmm1        # 71198 <module.60+0xcf>
mulsd  %xmm1,%xmm0
cvttsd2si %xmm0,%eax
jmp    37b1a <L16toGry+0x4a>
nop

0000000000037b70 <L16fromY>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %r12,-0x8(%rbp)
mov    %r13,-0x10(%rbp)
mov    %r14,-0x18(%rbp)
mov    %r15,-0x20(%rbp)
mov    %rdx,%r12
mov    %rsi,%r13
mov    %rdi,%r14
mov    0x10(%r14),%r15
jmp    37bba <L16fromY+0x4a>
movss  0x0(%r13),%xmm0
cvtss2sd %xmm0,%xmm0
movslq 0x8(%r14),%rdi
callq  8640 <LogL16fromY@plt>
mov    %ax,(%r15)
add    $0xffffffffffffffff,%r12
add    $0x4,%r13
add    $0x2,%r15
test   %r12,%r12
jg     37b97 <L16fromY+0x27>
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   0x0(%rax)

0000000000037be0 <oog_encode>:
push   %rbp
mov    %rsp,%rbp
sub    $0x390,%rsp
movsd  0x39625(%rip),%xmm5        # 71218 <module.60+0x14f>
movsd  0x39615(%rip),%xmm2        # 71210 <module.60+0x147>
lea    0x42cb6(%rip),%rcx        # 7a8b8 <oog_table.36>
movslq 0x42e3f(%rip),%rax        # 7aa48 <initialized.37>
test   %eax,%eax
je     37c4f <oog_encode+0x6f>
movapd %xmm1,%xmm3
movapd %xmm0,%xmm1
movapd %xmm3,%xmm0
subsd  %xmm5,%xmm0
subsd  %xmm2,%xmm1
callq  8920 <atan2@plt>
movsd  0x3968a(%rip),%xmm1        # 712b8 <module.60+0x1ef>
mulsd  %xmm1,%xmm0
movsd  0x39686(%rip),%xmm1        # 712c0 <module.60+0x1f7>
addsd  %xmm1,%xmm0
cvttsd2si %xmm0,%eax
lea    0x42c6f(%rip),%rcx        # 7a8b8 <oog_table.36>
movslq (%rcx,%rax,4),%rax
leaveq 
retq   
movsd  0x39671(%rip),%xmm3        # 712c8 <module.60+0x1ff>
mov    $0x64,%eax
jmp    37c6d <oog_encode+0x8d>
add    $0xffffffff,%eax
movslq %eax,%rdx
movsd  %xmm3,-0x388(%rbp,%rdx,8)
test   %eax,%eax
jne    37c5e <oog_encode+0x7e>
movsd  0x394d7(%rip),%xmm4        # 71150 <module.60+0x87>
movsd  0x39557(%rip),%xmm3        # 711d8 <module.60+0x10f>
movsd  0x39557(%rip),%xmm6        # 711e0 <module.60+0x117>
lea    0x38a90(%rip),%rsi        # 70720 <uv_row>
mov    $0xa3,%eax
mov    $0x1,%edx
mov    %rbx,-0x28(%rbp)
mov    %r12,-0x30(%rbp)
mov    %r13,-0x38(%rbp)
mov    %r14,-0x40(%rbp)
mov    %r15,-0x48(%rbp)
mov    %rdx,%rbx
mov    %rsi,%r13
movdqu %xmm1,-0x10(%rbp)
movdqu %xmm0,-0x20(%rbp)
jmp    37d1c <oog_encode+0x13c>
movswq 0x6(%r13,%r14,8),%rax
add    %r12d,%eax
lea    0x42be8(%rip),%rcx        # 7a8b8 <oog_table.36>
mov    %eax,(%rcx,%r15,4)
movsd  %xmm0,-0x388(%rbp,%r15,8)
sub    %ebx,%r12d
movsd  0x39527(%rip),%xmm2        # 71210 <module.60+0x147>
movsd  0x394e7(%rip),%xmm3        # 711d8 <module.60+0x10f>
movsd  0x39457(%rip),%xmm4        # 71150 <module.60+0x87>
movdqu -0x60(%rbp),%xmm0
test   %r12d,%r12d
jns    37d3c <oog_encode+0x15c>
mov    $0x1,%ebx
mov    -0x68(%rbp),%rax
movsd  0x39504(%rip),%xmm5        # 71218 <module.60+0x14f>
movsd  0x394c4(%rip),%xmm6        # 711e0 <module.60+0x117>
test   %eax,%eax
jne    37db8 <oog_encode+0x1d8>
movsd  0x395a4(%rip),%xmm1        # 712d0 <module.60+0x207>
mov    $0x51eb851f,%esi
mov    $0x64,%r10d
jmpq   37e18 <oog_encode+0x238>
cvtsi2sd %r12d,%xmm1
addsd  %xmm4,%xmm1
mulsd  %xmm3,%xmm1
movss  0x0(%r13,%r14,8),%xmm3
cvtss2sd %xmm3,%xmm3
addsd  %xmm3,%xmm1
subsd  %xmm2,%xmm1
callq  8920 <atan2@plt>
movsd  0x3954f(%rip),%xmm1        # 712b8 <module.60+0x1ef>
mulsd  %xmm1,%xmm0
movsd  0x3954b(%rip),%xmm1        # 712c0 <module.60+0x1f7>
addsd  %xmm1,%xmm0
cvttsd2si %xmm0,%r15d
cvtsi2sd %r15d,%xmm1
movsd  0x393c5(%rip),%xmm2        # 71150 <module.60+0x87>
addsd  %xmm2,%xmm1
subsd  %xmm1,%xmm0
callq  8be0 <fabs@plt>
movsd  -0x388(%rbp,%r15,8),%xmm1
ucomisd %xmm0,%xmm1
ja     37cc0 <oog_encode+0xe0>
lea    0x42b05(%rip),%rcx        # 7a8b8 <oog_table.36>
jmpq   37cde <oog_encode+0xfe>
lea    -0x1(%rax),%edx
mov    %rdx,-0x68(%rbp)
movslq %edx,%r14
movswq 0x4(%r13,%r14,8),%rax
lea    -0x1(%rax),%r12d
cmp    $0xa2,%edx
je     37de0 <oog_encode+0x200>
test   %edx,%edx
je     37de0 <oog_encode+0x200>
test   %r12d,%r12d
jle    37de0 <oog_encode+0x200>
mov    %r12,%rbx
cvtsi2sd %edx,%xmm0
addsd  %xmm4,%xmm0
mulsd  %xmm3,%xmm0
addsd  %xmm6,%xmm0
subsd  %xmm5,%xmm0
movdqu %xmm0,-0x60(%rbp)
jmpq   37cfe <oog_encode+0x11e>
lea    -0x1(%r10),%r9d
movslq %r9d,%r8
movsd  -0x388(%rbp,%r8,8),%xmm0
ucomisd %xmm1,%xmm0
ja     37e4a <oog_encode+0x26a>
mov    %r9,%r10
test   %r10d,%r10d
jne    37dfe <oog_encode+0x21e>
movl   $0x1,0x42c21(%rip)        # 7aa48 <initialized.37>
mov    -0x48(%rbp),%r15
mov    -0x40(%rbp),%r14
mov    -0x38(%rbp),%r13
mov    -0x30(%rbp),%r12
mov    -0x28(%rbp),%rbx
movdqu -0x20(%rbp),%xmm1
movdqu -0x10(%rbp),%xmm0
jmpq   37c19 <oog_encode+0x39>
lea    0x63(%r10),%edi
mov    %rbx,%r11
jmp    37e90 <oog_encode+0x2b0>
lea    -0x1(%r10,%r11,1),%r12d
mov    %rsi,%rax
imul   %r12d
mov    %rdx,%rax
sar    $0x5,%eax
shr    $0x1f,%edx
add    %edx,%eax
lea    (%rax,%rax,4),%edx
mov    %rdx,%rax
shl    $0x4,%eax
lea    (%rax,%rdx,4),%eax
sub    %eax,%r12d
movslq %r12d,%rax
movsd  -0x388(%rbp,%rax,8),%xmm0
ucomisd %xmm1,%xmm0
jp     37e8c <oog_encode+0x2ac>
jb     37e9b <oog_encode+0x2bb>
add    $0x1,%r11d
cmp    $0x31,%r11d
jle    37e53 <oog_encode+0x273>
mov    %rbx,%r12
jmp    37ee1 <oog_encode+0x301>
mov    %rbx,%r12
jmp    37ee1 <oog_encode+0x301>
mov    %rdi,%rdx
sub    %r12d,%edx
mov    %rsi,%rax
imul   %edx
mov    %rdx,%rax
sar    $0x5,%eax
shr    $0x1f,%edx
add    %edx,%eax
lea    (%rax,%rax,4),%edx
mov    %rdx,%rax
shl    $0x4,%eax
lea    (%rax,%rdx,4),%eax
add    %r12d,%eax
neg    %eax
add    %edi,%eax
movslq %eax,%rax
movsd  -0x388(%rbp,%rax,8),%xmm0
ucomisd %xmm1,%xmm0
jp     37edd <oog_encode+0x2fd>
jb     37ee7 <oog_encode+0x307>
add    $0x1,%r12d
cmp    $0x31,%r12d
jle    37ea0 <oog_encode+0x2c0>
cmp    %r11d,%r12d
jg     37f26 <oog_encode+0x346>
mov    %rdi,%rdx
sub    %r12d,%edx
mov    %rsi,%rax
imul   %edx
mov    %rdx,%rax
sar    $0x5,%eax
shr    $0x1f,%edx
add    %edx,%eax
lea    (%rax,%rax,4),%edx
mov    %rdx,%rax
shl    $0x4,%eax
lea    (%rax,%rdx,4),%eax
add    %r12d,%eax
sub    %eax,%edi
movslq %edi,%rax
movslq (%rcx,%rax,4),%rax
mov    %eax,(%rcx,%r8,4)
mov    %r9,%r10
jmpq   37e18 <oog_encode+0x238>
lea    -0x1(%r10,%r11,1),%edi
mov    %rsi,%rax
imul   %edi
mov    %rdx,%rax
sar    $0x5,%eax
shr    $0x1f,%edx
add    %edx,%eax
lea    (%rax,%rax,4),%edx
mov    %rdx,%rax
shl    $0x4,%eax
lea    (%rax,%rdx,4),%eax
sub    %eax,%edi
movslq %edi,%rax
movslq (%rcx,%rax,4),%rax
mov    %eax,(%rcx,%r8,4)
mov    %r9,%r10
jmpq   37e18 <oog_encode+0x238>
nopl   0x0(%rax)

0000000000037f60 <Luv24toXYZ>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %r13,-0x8(%rbp)
mov    %r14,-0x10(%rbp)
mov    %r15,-0x18(%rbp)
mov    0x10(%rdi),%r14
mov    %rdx,%r13
mov    %rsi,%r15
jmp    37f97 <Luv24toXYZ+0x37>
mov    (%r14),%edi
mov    %r15,%rsi
callq  8c80 <LogLuv24toXYZ@plt>
add    $0xffffffffffffffff,%r13
add    $0x4,%r14
add    $0xc,%r15
test   %r13,%r13
jg     37f80 <Luv24toXYZ+0x20>
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

0000000000037fb0 <Luv24toLuv48>:
push   %rbp
mov    %rsp,%rbp
sub    $0x40,%rsp
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    0x10(%rdi),%r13
mov    %rdx,%rbx
mov    %rsi,%r12
lea    -0x38(%rbp),%r14
lea    -0x30(%rbp),%r15
jmp    3805e <Luv24toLuv48+0xae>
mov    0x0(%r13),%eax
shr    $0xc,%eax
and    $0xffd,%ax
add    $0x3402,%eax
mov    %ax,(%r12)
movslq 0x0(%r13),%rdx
and    $0x3fff,%edx
mov    %r14,%rdi
mov    %r15,%rsi
callq  8340 <uv_decode@plt>
test   %eax,%eax
jns    38028 <Luv24toLuv48+0x78>
movsd  0x391fa(%rip),%xmm0        # 71210 <module.60+0x147>
movsd  %xmm0,-0x38(%rbp)
movsd  0x391f5(%rip),%xmm0        # 71218 <module.60+0x14f>
movsd  %xmm0,-0x30(%rbp)
movsd  0x392a8(%rip),%xmm0        # 712d8 <module.60+0x20f>
movapd %xmm0,%xmm1
mulsd  -0x38(%rbp),%xmm1
cvttsd2si %xmm1,%eax
mov    %ax,0x2(%r12)
mulsd  -0x30(%rbp),%xmm0
cvttsd2si %xmm0,%eax
mov    %ax,0x4(%r12)
add    $0xffffffffffffffff,%rbx
add    $0x6,%r12
add    $0x4,%r13
test   %rbx,%rbx
jg     37fe0 <Luv24toLuv48+0x30>
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
nopl   (%rax)

0000000000038080 <Luv24toRGB>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    %r12,-0x8(%rbp)
mov    %r13,-0x10(%rbp)
mov    %r14,-0x18(%rbp)
mov    %r15,-0x20(%rbp)
mov    0x10(%rdi),%r13
mov    %rdx,%r12
mov    %rsi,%r15
lea    -0x2c(%rbp),%r14
jmp    380cb <Luv24toRGB+0x4b>
mov    0x0(%r13),%edi
mov    %r14,%rsi
callq  8c80 <LogLuv24toXYZ@plt>
mov    %r14,%rdi
mov    %r15,%rsi
callq  82e0 <XYZtoRGB24@plt>
add    $0xffffffffffffffff,%r12
add    $0x4,%r13
add    $0x3,%r15
test   %r12,%r12
jg     380a8 <Luv24toRGB+0x28>
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   (%rax)

00000000000380f0 <Luv24fromXYZ>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %r12,-0x8(%rbp)
mov    %r13,-0x10(%rbp)
mov    %r14,-0x18(%rbp)
mov    %r15,-0x20(%rbp)
mov    %rdx,%r12
mov    %rsi,%r13
mov    %rdi,%r14
mov    0x10(%r14),%r15
jmp    38132 <Luv24fromXYZ+0x42>
movslq 0x8(%r14),%rsi
mov    %r13,%rdi
callq  81a0 <LogLuv24fromXYZ@plt>
mov    %eax,(%r15)
add    $0xffffffffffffffff,%r12
add    $0xc,%r13
add    $0x4,%r15
test   %r12,%r12
jg     38117 <Luv24fromXYZ+0x27>
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
leaveq 
retq   
nopl   0x0(%rax)

0000000000038150 <Luv24fromLuv48>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rdx,%r12
mov    %rsi,%r14
mov    %rdi,%r15
mov    0x10(%r15),%r13
movsd  0x38fcf(%rip),%xmm3        # 71150 <module.60+0x87>
movsd  0x39157(%rip),%xmm2        # 712e0 <module.60+0x217>
xor    %ebx,%ebx
mov    $0x3ff,%eax
jmpq   3821e <Luv24fromLuv48+0xce>
movswq (%r14),%rcx
test   %cx,%cx
jle    381ac <Luv24fromLuv48+0x5c>
cmp    $0x1cf1,%cx
jle    3823d <Luv24fromLuv48+0xed>
mov    %rax,%rbx
movswq 0x2(%r14),%rax
cvtsi2sd %eax,%xmm0
addsd  %xmm3,%xmm0
mulsd  %xmm2,%xmm0
movswq 0x4(%r14),%rax
cvtsi2sd %eax,%xmm1
addsd  %xmm3,%xmm1
mulsd  %xmm2,%xmm1
movslq 0x8(%r15),%rdi
callq  8840 <uv_encode@plt>
test   %eax,%eax
jns    381f2 <Luv24fromLuv48+0xa2>
movsd  0x3902d(%rip),%xmm0        # 71210 <module.60+0x147>
movsd  0x3902d(%rip),%xmm1        # 71218 <module.60+0x14f>
xor    %edi,%edi
callq  8840 <uv_encode@plt>
shl    $0xe,%ebx
or     %ebx,%eax
mov    %eax,0x0(%r13)
add    $0xffffffffffffffff,%r12
add    $0x4,%r13
add    $0x6,%r14
mov    $0x3ff,%eax
xor    %ebx,%ebx
movsd  0x390ca(%rip),%xmm2        # 712e0 <module.60+0x217>
movsd  0x38f32(%rip),%xmm3        # 71150 <module.60+0x87>
test   %r12,%r12
jg     38195 <Luv24fromLuv48+0x45>
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
movslq 0x8(%r15),%rax
test   %eax,%eax
je     3829a <Luv24fromLuv48+0x14a>
mov    %rcx,%rbx
callq  8d10 <rand@plt>
cvtsi2sd %eax,%xmm0
movsd  0x38ff7(%rip),%xmm1        # 71250 <module.60+0x187>
mulsd  %xmm1,%xmm0
cvtsi2sd %ebx,%xmm1
movsd  0x3907f(%rip),%xmm2        # 712e8 <module.60+0x21f>
subsd  %xmm2,%xmm1
movsd  0x3907b(%rip),%xmm2        # 712f0 <module.60+0x227>
mulsd  %xmm2,%xmm1
addsd  %xmm1,%xmm0
movsd  0x38ecb(%rip),%xmm3        # 71150 <module.60+0x87>
subsd  %xmm3,%xmm0
cvttsd2si %xmm0,%ebx
movsd  0x3904b(%rip),%xmm2        # 712e0 <module.60+0x217>
jmpq   381ac <Luv24fromLuv48+0x5c>
lea    -0xcf2(%rcx),%ebx
sar    $0x2,%ebx
jmpq   381ac <Luv24fromLuv48+0x5c>
nopl   0x0(%rax,%rax,1)

00000000000382b0 <Luv32toXYZ>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %r13,-0x8(%rbp)
mov    %r14,-0x10(%rbp)
mov    %r15,-0x18(%rbp)
mov    0x10(%rdi),%r14
mov    %rdx,%r13
mov    %rsi,%r15
jmp    382e7 <Luv32toXYZ+0x37>
mov    (%r14),%edi
mov    %r15,%rsi
callq  8360 <LogLuv32toXYZ@plt>
add    $0xffffffffffffffff,%r13
add    $0x4,%r14
add    $0xc,%r15
test   %r13,%r13
jg     382d0 <Luv32toXYZ+0x20>
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

0000000000038300 <Luv32toLuv48>:
push   %rbp
mov    %rsp,%rbp
mov    0x10(%rdi),%rcx
movsd  0x38e40(%rip),%xmm1        # 71150 <module.60+0x87>
movsd  0x38fe0(%rip),%xmm2        # 712f8 <module.60+0x22f>
jmp    38369 <Luv32toLuv48+0x69>
mov    (%rcx),%eax
shr    $0x10,%eax
mov    %ax,(%rsi)
mov    (%rcx),%eax
and    $0xff00,%eax
shr    $0x8,%eax
mov    %eax,%eax
cvtsi2sd %rax,%xmm0
addsd  %xmm1,%xmm0
mulsd  %xmm2,%xmm0
cvttsd2si %xmm0,%edi
movzbl (%rcx),%eax
mov    %di,0x2(%rsi)
mov    %eax,%eax
cvtsi2sd %rax,%xmm0
addsd  %xmm1,%xmm0
mulsd  %xmm2,%xmm0
cvttsd2si %xmm0,%eax
mov    %ax,0x4(%rsi)
add    $0xffffffffffffffff,%rdx
add    $0x4,%rcx
add    $0x6,%rsi
test   %rdx,%rdx
jg     3831a <Luv32toLuv48+0x1a>
leaveq 
retq   

0000000000038370 <Luv32toRGB>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    %r12,-0x8(%rbp)
mov    %r13,-0x10(%rbp)
mov    %r14,-0x18(%rbp)
mov    %r15,-0x20(%rbp)
mov    0x10(%rdi),%r13
mov    %rdx,%r12
mov    %rsi,%r15
lea    -0x2c(%rbp),%r14
jmp    383bb <Luv32toRGB+0x4b>
mov    0x0(%r13),%edi
mov    %r14,%rsi
callq  8360 <LogLuv32toXYZ@plt>
mov    %r14,%rdi
mov    %r15,%rsi
callq  82e0 <XYZtoRGB24@plt>
add    $0xffffffffffffffff,%r12
add    $0x4,%r13
add    $0x3,%r15
test   %r12,%r12
jg     38398 <Luv32toRGB+0x28>
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   (%rax)

00000000000383e0 <Luv32fromXYZ>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %r12,-0x8(%rbp)
mov    %r13,-0x10(%rbp)
mov    %r14,-0x18(%rbp)
mov    %r15,-0x20(%rbp)
mov    %rdx,%r12
mov    %rsi,%r13
mov    %rdi,%r14
mov    0x10(%r14),%r15
jmp    38422 <Luv32fromXYZ+0x42>
movslq 0x8(%r14),%rsi
mov    %r13,%rdi
callq  8ba0 <LogLuv32fromXYZ@plt>
mov    %eax,(%r15)
add    $0xffffffffffffffff,%r12
add    $0xc,%r13
add    $0x4,%r15
test   %r12,%r12
jg     38407 <Luv32fromXYZ+0x27>
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
leaveq 
retq   
nopl   0x0(%rax)

0000000000038440 <Luv32fromLuv48>:
push   %rbp
mov    %rsp,%rbp
sub    $0x40,%rsp
mov    %rdi,-0x30(%rbp)
mov    0x10(%rdi),%rcx
movslq 0x8(%rdi),%rax
test   %eax,%eax
je     384cc <Luv32fromLuv48+0x8c>
movsd  0x38ea0(%rip),%xmm0        # 71300 <module.60+0x237>
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rcx,%rbx
mov    %rdi,%r13
jmpq   38505 <Luv32fromLuv48+0xc5>
movswq 0x4(%rsi),%rdi
lea    (%rdi,%rdi,4),%eax
shl    $0x4,%eax
lea    (%rax,%rdi,2),%eax
lea    (%rax,%rax,4),%eax
and    $0x7f8000,%eax
shr    $0xf,%eax
movswq (%rsi),%rdi
shl    $0x10,%edi
add    %eax,%edi
movswq 0x2(%rsi),%r8
lea    (%r8,%r8,4),%eax
shl    $0x4,%eax
lea    (%rax,%r8,2),%eax
lea    (%rax,%rax,4),%eax
and    $0x7f8000,%eax
shr    $0x7,%eax
add    %edi,%eax
mov    %eax,(%rcx)
add    $0xffffffffffffffff,%rdx
add    $0x6,%rsi
add    $0x4,%rcx
test   %rdx,%rdx
jg     3847f <Luv32fromLuv48+0x3f>
leaveq 
retq   
movswq 0x4(%rsi),%rax
cvtsi2sd %eax,%xmm1
mulsd  %xmm0,%xmm1
cvttsd2si %xmm1,%ecx
shl    $0x10,%r12d
movzbl %r14b,%eax
shl    $0x8,%eax
add    %r12d,%eax
movzbl %cl,%ecx
add    %ecx,%eax
mov    %eax,(%rbx)
add    $0xffffffffffffffff,%rdx
add    $0x6,%rsi
add    $0x4,%rbx
test   %rdx,%rdx
jg     38520 <Luv32fromLuv48+0xe0>
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
movswq (%rsi),%r12
movslq 0x8(%r13),%rax
test   %eax,%eax
je     3857c <Luv32fromLuv48+0x13c>
movswq 0x2(%rsi),%r14
mov    %rdx,-0x38(%rbp)
mov    %rsi,%r15
callq  8d10 <rand@plt>
cvtsi2sd %eax,%xmm1
movsd  0x38d07(%rip),%xmm0        # 71250 <module.60+0x187>
mulsd  %xmm0,%xmm1
cvtsi2sd %r14d,%xmm2
mov    %r15,%rsi
movsd  0x38da3(%rip),%xmm0        # 71300 <module.60+0x237>
mulsd  %xmm0,%xmm2
addsd  %xmm2,%xmm1
movsd  0x38be3(%rip),%xmm2        # 71150 <module.60+0x87>
subsd  %xmm2,%xmm1
cvttsd2si %xmm1,%r14d
mov    -0x38(%rbp),%rdx
jmp    3858e <Luv32fromLuv48+0x14e>
movswq 0x2(%rsi),%rax
cvtsi2sd %eax,%xmm1
mulsd  %xmm0,%xmm1
cvttsd2si %xmm1,%r14d
movslq 0x8(%r13),%rax
test   %eax,%eax
je     384d3 <Luv32fromLuv48+0x93>
movswq 0x4(%rsi),%r13
mov    %rsi,-0x38(%rbp)
mov    %rdx,%r15
callq  8d10 <rand@plt>
cvtsi2sd %eax,%xmm1
movsd  0x38c99(%rip),%xmm0        # 71250 <module.60+0x187>
mulsd  %xmm0,%xmm1
cvtsi2sd %r13d,%xmm2
mov    %r15,%rdx
movsd  0x38d35(%rip),%xmm0        # 71300 <module.60+0x237>
mulsd  %xmm0,%xmm2
addsd  %xmm2,%xmm1
movsd  0x38b75(%rip),%xmm2        # 71150 <module.60+0x87>
subsd  %xmm2,%xmm1
cvttsd2si %xmm1,%ecx
mov    -0x30(%rbp),%r13
mov    -0x38(%rbp),%rsi
jmpq   384e4 <Luv32fromLuv48+0xa4>

00000000000385f0 <_logLuvNop>:
push   %rbp
mov    %rsp,%rbp
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)

0000000000038600 <LogL16GuessDataFmt>:
push   %rbp
mov    %rsp,%rbp
mov    $0x1,%esi
mov    $0xffffffffffffffff,%rax
movzwl 0x3c(%rdi),%ecx
shl    $0x6,%ecx
movzwl 0x4a(%rdi),%edx
shl    $0x3,%edx
or     %edx,%ecx
movzwl 0x3e(%rdi),%edx
or     %ecx,%edx
cmp    $0x409,%edx
jle    38643 <LogL16GuessDataFmt+0x43>
cmp    $0x40b,%edx
jle    3865d <LogL16GuessDataFmt+0x5d>
cmp    $0x40c,%edx
jne    3866a <LogL16GuessDataFmt+0x6a>
mov    %rsi,%rax
leaveq 
retq   
mov    $0x3,%ecx
cmp    $0x20b,%edx
jle    38676 <LogL16GuessDataFmt+0x76>
cmp    $0x20c,%edx
jne    38683 <LogL16GuessDataFmt+0x83>
mov    %rcx,%rax
leaveq 
retq   
cmp    $0x40a,%edx
jne    38690 <LogL16GuessDataFmt+0x90>
mov    %rsi,%rax
leaveq 
retq   
cmp    $0x80b,%edx
jne    38692 <LogL16GuessDataFmt+0x92>
xor    %eax,%eax
leaveq 
retq   
cmp    $0x209,%edx
jne    38694 <LogL16GuessDataFmt+0x94>
mov    %rcx,%rax
leaveq 
retq   
cmp    $0x409,%edx
jne    38696 <LogL16GuessDataFmt+0x96>
mov    %rsi,%rax
leaveq 
retq   
leaveq 
retq   
leaveq 
retq   
leaveq 
retq   
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

00000000000386a0 <multiply_ms>:
push   %rbp
mov    %rsp,%rbp
xor    %ecx,%ecx
test   %rdi,%rdi
jne    386b0 <multiply_ms+0x10>
mov    %rcx,%rax
leaveq 
retq   
movabs $0x7fffffffffffffff,%rax
cqto   
idiv   %rdi
cmp    %rsi,%rax
jge    386c9 <multiply_ms+0x29>
mov    %rcx,%rax
leaveq 
retq   
imul   %rsi,%rdi
mov    %rdi,%rax
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   (%rax)

00000000000386e0 <LogL16InitState>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
lea    0x38597(%rip),%rsi        # 70c86 <module.9+0x4e>
lea    0x38766(%rip),%rcx        # 70e5c <module.38+0x10>
mov    0x350(%rdi),%rax
test   %rax,%rax
jne    38713 <LogL16InitState+0x33>
lea    0x38605(%rip),%rdi        # 70d0e <module.15+0x21>
mov    $0x506,%edx
callq  8490 <__assert_fail@plt>
movzwl 0x7a(%rdi),%edx
cmp    $0x804c,%dx
je     3872f <LogL16InitState+0x4f>
lea    0x38747(%rip),%rdi        # 70e6c <module.38+0x20>
mov    $0x507,%edx
callq  8490 <__assert_fail@plt>
lea    0x38716(%rip),%rsi        # 70e4c <module.38>
movzwl 0x82(%rdi),%r8d
cmp    $0x1,%r8w
jne    3879c <LogL16InitState+0xbc>
movslq 0x4(%rax),%rcx
cmp    $0xffffffff,%ecx
jne    38781 <LogL16InitState+0xa1>
lea    0x38(%rdi),%rcx
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rdi,%r14
mov    %rcx,%rdi
mov    %rax,%r15
callq  38600 <LogL16GuessDataFmt>
mov    %eax,0x4(%r15)
mov    %r15,%rax
mov    %r14,%rdi
lea    0x386d3(%rip),%rsi        # 70e4c <module.38>
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
movslq 0x4(%rax),%rcx
test   %ecx,%ecx
jle    387bc <LogL16InitState+0xdc>
cmp    $0x1,%ecx
je     387d9 <LogL16InitState+0xf9>
cmp    $0x3,%ecx
jne    387c0 <LogL16InitState+0xe0>
movl   $0x1,0xc(%rax)
jmp    387e9 <LogL16InitState+0x109>
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
lea    0x386e7(%rip),%rdx        # 70e93 <module.38+0x47>
lea    0x3870c(%rip),%rcx        # 70ebf <module.38+0x73>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
test   %ecx,%ecx
je     387e2 <LogL16InitState+0x102>
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
lea    0x386fd(%rip),%rdx        # 70ecd <module.38+0x81>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
movl   $0x2,0xc(%rax)
jmp    387e9 <LogL16InitState+0x109>
movl   $0x4,0xc(%rax)
mov    0x10(%rdi),%ecx
and    $0x400,%ecx
test   %ecx,%ecx
jne    38821 <LogL16InitState+0x141>
mov    0x84(%rdi),%edx
mov    0x5c(%rdi),%esi
cmp    %edx,%esi
ja     38878 <LogL16InitState+0x198>
mov    0x58(%rdi),%ecx
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rdi,%r14
mov    %rcx,%rdi
mov    %rax,%r15
callq  386a0 <multiply_ms>
mov    %rax,%rdi
jmp    38840 <LogL16InitState+0x160>
mov    0x64(%rdi),%ecx
mov    0x68(%rdi),%esi
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rdi,%r14
mov    %rcx,%rdi
mov    %rax,%r15
callq  386a0 <multiply_ms>
mov    %rax,%rdi
mov    %rdi,0x18(%r15)
mov    $0x2,%esi
callq  386a0 <multiply_ms>
test   %rax,%rax
je     38899 <LogL16InitState+0x1b9>
mov    0x18(%r15),%rax
lea    (%rax,%rax,1),%rdi
callq  8440 <_TIFFmalloc@plt>
mov    %rax,0x10(%r15)
test   %rax,%rax
je     38899 <LogL16InitState+0x1b9>
mov    $0x1,%eax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
mov    0x58(%rdi),%ecx
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rdx,%rsi
mov    %rdi,%r14
mov    %rcx,%rdi
mov    %rax,%r15
callq  386a0 <multiply_ms>
mov    %rax,%rdi
jmp    38840 <LogL16InitState+0x160>
xor    %eax,%eax
mov    0x3b8(%r14),%rdi
lea    0x38657(%rip),%rdx        # 70f00 <module.38+0xb4>
lea    0x3859c(%rip),%rsi        # 70e4c <module.38>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   0x0(%rax)

00000000000388d0 <LogLuvGuessDataFmt>:
push   %rbp
mov    %rsp,%rbp
mov    $0xffffffffffffffff,%rax
mov    $0x2,%esi
movzwl 0x3e(%rdi),%ecx
movzwl 0x3c(%rdi),%edx
shl    $0x3,%edx
or     %edx,%ecx
lea    -0x41(%rcx),%edx
cmp    $0xc3,%edx
jbe    3890d <LogLuvGuessDataFmt+0x3d>
mov    %rax,%rcx
movzwl 0x4a(%rdi),%edx
cmp    $0x1,%dx
je     38922 <LogLuvGuessDataFmt+0x52>
cmp    $0x3,%dx
je     38929 <LogLuvGuessDataFmt+0x59>
leaveq 
retq   
lea    0x37afc(%rip),%rcx        # 70410 <module.76+0xa1>
movslq (%rcx,%rdx,4),%rdx
add    %rdx,%rcx
jmpq   *%rcx
mov    %rax,%rcx
jmp    388fb <LogLuvGuessDataFmt+0x2b>
cmp    $0x2,%ecx
je     38947 <LogLuvGuessDataFmt+0x77>
leaveq 
retq   
cmp    $0x2,%ecx
jne    3894c <LogLuvGuessDataFmt+0x7c>
leaveq 
retq   
xor    %ecx,%ecx
jmp    388fb <LogLuvGuessDataFmt+0x2b>
mov    %rsi,%rcx
jmp    388fb <LogLuvGuessDataFmt+0x2b>
mov    $0x1,%ecx
jmp    388fb <LogLuvGuessDataFmt+0x2b>
mov    $0x3,%ecx
jmp    388fb <LogLuvGuessDataFmt+0x2b>
mov    %rsi,%rax
leaveq 
retq   
mov    %rcx,%rax
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   0x0(%rax)

0000000000038960 <LogLuvInitState>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
lea    0x38317(%rip),%rsi        # 70c86 <module.9+0x4e>
lea    0x385c1(%rip),%rcx        # 70f37 <module.45+0x10>
mov    0x350(%rdi),%rdx
test   %rdx,%rdx
jne    38993 <LogLuvInitState+0x33>
lea    0x38385(%rip),%rdi        # 70d0e <module.15+0x21>
mov    $0x56c,%edx
callq  8490 <__assert_fail@plt>
movzwl 0x7a(%rdi),%eax
cmp    $0x804d,%ax
je     389ae <LogLuvInitState+0x4e>
lea    0x385a3(%rip),%rdi        # 70f47 <module.45+0x20>
mov    $0x56d,%edx
callq  8490 <__assert_fail@plt>
lea    0x38572(%rip),%rsi        # 70f27 <module.45>
movzwl 0xaa(%rdi),%eax
cmp    $0x1,%ax
jne    389d9 <LogLuvInitState+0x79>
movslq 0x4(%rdx),%rax
cmp    $0xffffffff,%eax
je     389f2 <LogLuvInitState+0x92>
mov    %r14,%rcx
mov    %rdi,%r14
mov    %r15,%r8
mov    %rdx,%r15
jmp    38a1f <LogLuvInitState+0xbf>
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
lea    0x38587(%rip),%rdx        # 70f70 <module.45+0x49>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
lea    0x38(%rdi),%rax
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rdi,%r14
mov    %rax,%rdi
mov    %rdx,%r15
callq  388d0 <LogLuvGuessDataFmt>
mov    %eax,0x4(%r15)
lea    0x38510(%rip),%rsi        # 70f27 <module.45>
mov    -0x10(%rbp),%r8
mov    -0x8(%rbp),%rcx
movslq 0x4(%r15),%rax
cmp    $0x1,%eax
jle    38a51 <LogLuvInitState+0xf1>
cmp    $0x2,%eax
je     38a64 <LogLuvInitState+0x104>
cmp    $0x3,%eax
je     38a6e <LogLuvInitState+0x10e>
xor    %eax,%eax
mov    0x3b8(%r14),%rdi
mov    %rcx,%r14
mov    %r8,%r15
lea    0x3855d(%rip),%rdx        # 70fa5 <module.45+0x7e>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
test   %eax,%eax
je     38a78 <LogLuvInitState+0x118>
cmp    $0x1,%eax
jne    38a32 <LogLuvInitState+0xd2>
movl   $0x6,0xc(%r15)
jmp    38a80 <LogLuvInitState+0x120>
movl   $0x4,0xc(%r15)
jmp    38a80 <LogLuvInitState+0x120>
movl   $0x3,0xc(%r15)
jmp    38a80 <LogLuvInitState+0x120>
movl   $0xc,0xc(%r15)
mov    0x10(%r14),%eax
and    $0x400,%eax
test   %eax,%eax
jne    38ab2 <LogLuvInitState+0x152>
mov    0x84(%r14),%eax
mov    0x5c(%r14),%esi
cmp    %eax,%esi
ja     38b02 <LogLuvInitState+0x1a2>
mov    0x58(%r14),%edi
mov    %rcx,-0x8(%rbp)
mov    %r8,-0x10(%rbp)
callq  386a0 <multiply_ms>
mov    %rax,%rdi
jmp    38aca <LogLuvInitState+0x16a>
mov    0x64(%r14),%edi
mov    0x68(%r14),%esi
mov    %rcx,-0x8(%rbp)
mov    %r8,-0x10(%rbp)
callq  386a0 <multiply_ms>
mov    %rax,%rdi
mov    %rdi,0x18(%r15)
mov    $0x4,%esi
callq  386a0 <multiply_ms>
test   %rax,%rax
je     38b1b <LogLuvInitState+0x1bb>
mov    0x18(%r15),%rdi
shl    $0x2,%rdi
callq  8440 <_TIFFmalloc@plt>
mov    %rax,0x10(%r15)
test   %rax,%rax
je     38b1b <LogLuvInitState+0x1bb>
mov    $0x1,%eax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
mov    0x58(%r14),%edi
mov    %rcx,-0x8(%rbp)
mov    %r8,-0x10(%rbp)
mov    %rax,%rsi
callq  386a0 <multiply_ms>
mov    %rax,%rdi
jmp    38aca <LogLuvInitState+0x16a>
xor    %eax,%eax
mov    0x3b8(%r14),%rdi
lea    0x383d5(%rip),%rdx        # 70f00 <module.38+0xb4>
lea    0x383f5(%rip),%rsi        # 70f27 <module.45>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

0000000000038b50 <LogLuvFixupTags>:
push   %rbp
mov    %rsp,%rbp
mov    $0x1,%eax
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

0000000000038b60 <LogLuvSetupDecode>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    0x350(%rdi),%rdx
mov    0x413d2(%rip),%rax        # 79f48 <_TIFFNoPostDecode@@Base+0x2f608>
mov    %rax,0x3e8(%rdi)
movzwl 0x7a(%rdi),%ecx
cmp    $0x804c,%cx
je     38bb6 <LogLuvSetupDecode+0x56>
cmp    $0x804d,%cx
je     38bd1 <LogLuvSetupDecode+0x71>
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
lea    0x3843b(%rip),%rsi        # 70fda <module.50>
lea    0x38446(%rip),%rdx        # 70fec <module.50+0x12>
lea    0x38486(%rip),%r8        # 71033 <module.50+0x59>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
mov    %rdi,%rax
mov    %rdx,-0x8(%rbp)
mov    %rdi,-0x10(%rbp)
mov    %rax,%rdi
callq  386e0 <LogL16InitState>
test   %eax,%eax
jne    38bf3 <LogLuvSetupDecode+0x93>
xor    %eax,%eax
leaveq 
retq   
mov    %rdi,%rax
mov    %r15,-0x10(%rbp)
mov    %rdx,-0x8(%rbp)
mov    %rdi,%r15
mov    %rax,%rdi
callq  38960 <LogLuvInitState>
test   %eax,%eax
jne    38c1d <LogLuvSetupDecode+0xbd>
mov    -0x10(%rbp),%r15
xor    %eax,%eax
leaveq 
retq   
lea    -0x24ba(%rip),%rcx        # 36740 <LogL16Decode>
mov    -0x10(%rbp),%rax
mov    %rcx,0x2f8(%rax)
mov    -0x8(%rbp),%rcx
movslq 0x4(%rcx),%rax
test   %eax,%eax
je     38c5b <LogLuvSetupDecode+0xfb>
cmp    $0x3,%eax
je     38c6d <LogLuvSetupDecode+0x10d>
mov    $0x1,%eax
leaveq 
retq   
movzwl 0x78(%r15),%eax
cmp    $0x8775,%ax
je     38c7f <LogLuvSetupDecode+0x11f>
lea    -0x213f(%rip),%rax        # 36af0 <LogLuvDecode32>
mov    %rax,0x2f8(%r15)
mov    -0x8(%rbp),%rcx
movslq 0x4(%rcx),%rax
test   %eax,%eax
jle    38cae <LogLuvSetupDecode+0x14e>
cmp    $0x1,%eax
je     38cbd <LogLuvSetupDecode+0x15d>
cmp    $0x3,%eax
je     38cd3 <LogLuvSetupDecode+0x173>
mov    $0x1,%eax
mov    -0x10(%rbp),%r15
leaveq 
retq   
lea    -0x11f2(%rip),%rax        # 37a70 <L16toY>
mov    %rax,0x20(%rcx)
mov    $0x1,%eax
leaveq 
retq   
lea    -0x11a4(%rip),%rax        # 37ad0 <L16toGry>
mov    %rax,0x20(%rcx)
mov    $0x1,%eax
leaveq 
retq   
lea    -0x22f6(%rip),%rax        # 36990 <LogLuvDecode24>
mov    %rax,0x2f8(%r15)
mov    -0x8(%rbp),%rcx
movslq 0x4(%rcx),%rax
test   %eax,%eax
jle    38ce9 <LogLuvSetupDecode+0x189>
cmp    $0x1,%eax
je     38cf8 <LogLuvSetupDecode+0x198>
cmp    $0x3,%eax
je     38d0e <LogLuvSetupDecode+0x1ae>
mov    $0x1,%eax
mov    -0x10(%rbp),%r15
leaveq 
retq   
test   %eax,%eax
je     38d24 <LogLuvSetupDecode+0x1c4>
mov    $0x1,%eax
mov    -0x10(%rbp),%r15
leaveq 
retq   
lea    -0x9c4(%rip),%rax        # 38300 <Luv32toLuv48>
mov    %rax,0x20(%rcx)
mov    $0x1,%eax
mov    -0x10(%rbp),%r15
leaveq 
retq   
lea    -0x96a(%rip),%rax        # 38370 <Luv32toRGB>
mov    %rax,0x20(%rcx)
mov    $0x1,%eax
mov    -0x10(%rbp),%r15
leaveq 
retq   
test   %eax,%eax
je     38d3a <LogLuvSetupDecode+0x1da>
mov    $0x1,%eax
mov    -0x10(%rbp),%r15
leaveq 
retq   
lea    -0xd4f(%rip),%rax        # 37fb0 <Luv24toLuv48>
mov    %rax,0x20(%rcx)
mov    $0x1,%eax
mov    -0x10(%rbp),%r15
leaveq 
retq   
lea    -0xc95(%rip),%rax        # 38080 <Luv24toRGB>
mov    %rax,0x20(%rcx)
mov    $0x1,%eax
mov    -0x10(%rbp),%r15
leaveq 
retq   
lea    -0xa7b(%rip),%rax        # 382b0 <Luv32toXYZ>
mov    %rax,0x20(%rcx)
mov    $0x1,%eax
mov    -0x10(%rbp),%r15
leaveq 
retq   
lea    -0xde1(%rip),%rax        # 37f60 <Luv24toXYZ>
mov    %rax,0x20(%rcx)
mov    $0x1,%eax
mov    -0x10(%rbp),%r15
leaveq 
retq   

0000000000038d50 <LogLuvSetupEncode>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x10(%rbp)
mov    0x350(%rdi),%r15
lea    0x382e7(%rip),%rsi        # 71051 <module.53>
movzwl 0x7a(%rdi),%ecx
cmp    $0x804c,%cx
je     38d9a <LogLuvSetupEncode+0x4a>
cmp    $0x804d,%cx
je     38dc6 <LogLuvSetupEncode+0x76>
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
lea    0x38260(%rip),%rdx        # 70fec <module.50+0x12>
lea    0x382a0(%rip),%r8        # 71033 <module.50+0x59>
callq  8a00 <TIFFErrorExt@plt>
jmp    38db4 <LogLuvSetupEncode+0x64>
mov    %rdi,%rax
mov    %r14,-0x8(%rbp)
mov    %rdi,%r14
mov    %rax,%rdi
callq  386e0 <LogL16InitState>
test   %eax,%eax
jne    38de2 <LogLuvSetupEncode+0x92>
mov    -0x8(%rbp),%r14
movl   $0x1,(%r15)
mov    $0x1,%eax
mov    -0x10(%rbp),%r15
leaveq 
retq   
mov    %rdi,%rax
mov    %r14,-0x8(%rbp)
mov    %rdi,%r14
mov    %rax,%rdi
callq  38960 <LogLuvInitState>
test   %eax,%eax
jne    38e03 <LogLuvSetupEncode+0xb3>
mov    -0x8(%rbp),%r14
jmp    38db4 <LogLuvSetupEncode+0x64>
lea    -0x1ee9(%rip),%rax        # 36f00 <LogL16Encode>
mov    %rax,0x300(%r14)
movslq 0x4(%r15),%rax
test   %eax,%eax
je     38e34 <LogLuvSetupEncode+0xe4>
cmp    $0x1,%eax
jne    38e4c <LogLuvSetupEncode+0xfc>
mov    -0x8(%rbp),%r14
jmp    38db4 <LogLuvSetupEncode+0x64>
movzwl 0x78(%r14),%eax
cmp    $0x8775,%ax
je     38e67 <LogLuvSetupEncode+0x117>
lea    -0x1945(%rip),%rax        # 374d0 <LogLuvEncode32>
mov    %rax,0x300(%r14)
movslq 0x4(%r15),%rax
test   %eax,%eax
jle    38e48 <LogLuvSetupEncode+0xf8>
cmp    $0x1,%eax
je     38e90 <LogLuvSetupEncode+0x140>
cmp    $0x2,%eax
jne    38e4c <LogLuvSetupEncode+0xfc>
mov    -0x8(%rbp),%r14
jmp    38db4 <LogLuvSetupEncode+0x64>
lea    -0x12cb(%rip),%rax        # 37b70 <L16fromY>
mov    %rax,0x20(%r15)
mov    -0x8(%rbp),%r14
jmpq   38db4 <LogLuvSetupEncode+0x64>
test   %eax,%eax
je     38ea4 <LogLuvSetupEncode+0x154>
mov    0x3b8(%r14),%rdi
movzwl 0x7a(%r14),%eax
cmp    $0x804c,%ax
je     38eb8 <LogLuvSetupEncode+0x168>
lea    0x38239(%rip),%rcx        # 7109e <module.53+0x4d>
jmp    38ebf <LogLuvSetupEncode+0x16f>
lea    -0x1b8e(%rip),%rax        # 372e0 <LogLuvEncode24>
mov    %rax,0x300(%r14)
movslq 0x4(%r15),%rax
test   %eax,%eax
jle    38ee5 <LogLuvSetupEncode+0x195>
cmp    $0x1,%eax
je     38f01 <LogLuvSetupEncode+0x1b1>
cmp    $0x2,%eax
jne    38e4c <LogLuvSetupEncode+0xfc>
mov    -0x8(%rbp),%r14
jmpq   38db4 <LogLuvSetupEncode+0x64>
lea    -0xa57(%rip),%rax        # 38440 <Luv32fromLuv48>
mov    %rax,0x20(%r15)
mov    -0x8(%rbp),%r14
jmpq   38db4 <LogLuvSetupEncode+0x64>
lea    -0xacb(%rip),%rax        # 383e0 <Luv32fromXYZ>
mov    %rax,0x20(%r15)
mov    -0x8(%rbp),%r14
jmpq   38db4 <LogLuvSetupEncode+0x64>
lea    0x381da(%rip),%rcx        # 71099 <module.53+0x48>
lea    0x3819d(%rip),%rdx        # 71063 <module.53+0x12>
xor    %r14d,%r14d
mov    %r14,%rax
lea    0x3817e(%rip),%rsi        # 71051 <module.53>
callq  8a00 <TIFFErrorExt@plt>
mov    %r14,%rax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
test   %eax,%eax
jne    38e4c <LogLuvSetupEncode+0xfc>
lea    -0xe04(%rip),%rax        # 380f0 <Luv24fromXYZ>
mov    %rax,0x20(%r15)
mov    -0x8(%rbp),%r14
jmpq   38db4 <LogLuvSetupEncode+0x64>
lea    -0xdb8(%rip),%rax        # 38150 <Luv24fromLuv48>
mov    %rax,0x20(%r15)
mov    -0x8(%rbp),%r14
jmpq   38db4 <LogLuvSetupEncode+0x64>
data16 nopw %cs:0x0(%rax,%rax,1)

0000000000038f20 <LogLuvClose>:
push   %rbp
mov    %rsp,%rbp
mov    0x350(%rdi),%rax
test   %rax,%rax
jne    38f4f <LogLuvClose+0x2f>
lea    0x38170(%rip),%rdi        # 710a7 <module.53+0x56>
lea    0x37d48(%rip),%rsi        # 70c86 <module.9+0x4e>
mov    $0x628,%edx
lea    0x38165(%rip),%rcx        # 710af <module.53+0x5e>
callq  8490 <__assert_fail@plt>
movslq (%rax),%rax
test   %eax,%eax
jne    38f58 <LogLuvClose+0x38>
leaveq 
retq   
movzwl 0x7a(%rdi),%eax
cmp    $0x804c,%ax
je     38f69 <LogLuvClose+0x49>
mov    $0x3,%eax
jmp    38f6e <LogLuvClose+0x4e>
mov    $0x1,%eax
mov    %ax,0x82(%rdi)
movw   $0x10,0x74(%rdi)
movw   $0x2,0x76(%rdi)
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

0000000000038f90 <LogLuvCleanup>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    0x350(%rdi),%rcx
test   %rcx,%rcx
jne    38fc3 <LogLuvCleanup+0x33>
lea    0x380fc(%rip),%rdi        # 710a7 <module.53+0x56>
lea    0x37cd4(%rip),%rsi        # 70c86 <module.9+0x4e>
mov    $0x641,%edx
lea    0x380fd(%rip),%rcx        # 710bb <module.53+0x6a>
callq  8490 <__assert_fail@plt>
mov    0x28(%rcx),%rax
mov    %rax,0x410(%rdi)
mov    0x30(%rcx),%rax
mov    %rax,0x408(%rdi)
mov    0x10(%rcx),%rax
test   %rax,%rax
jne    38fed <LogLuvCleanup+0x5d>
mov    %r15,%rax
mov    %rdi,%r15
mov    %rcx,%rdi
jmp    3900e <LogLuvCleanup+0x7e>
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rcx,%r14
mov    %rdi,%r15
mov    %rax,%rdi
callq  8bb0 <_TIFFfree@plt>
mov    %r14,%rdi
mov    -0x10(%rbp),%rax
mov    -0x8(%rbp),%r14
mov    %rax,-0x10(%rbp)
callq  8bb0 <_TIFFfree@plt>
mov    %r15,%rdi
movq   $0x0,0x350(%rdi)
callq  8740 <_TIFFSetDefaultCompressionState@plt>
mov    -0x10(%rbp),%r15
leaveq 
retq   

0000000000039030 <LogLuvVSetField>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    0x350(%rdi),%r8
mov    $0x1,%eax
cmp    $0x10018,%esi
jne    39065 <LogLuvVSetField+0x35>
movslq (%rdx),%rsi
cmp    $0x2f,%esi
jle    39086 <LogLuvVSetField+0x56>
mov    0x8(%rdx),%rsi
lea    0x8(%rsi),%rcx
mov    %rcx,0x8(%rdx)
movslq (%rsi),%rcx
jmp    39093 <LogLuvVSetField+0x63>
cmp    $0x10019,%esi
jne    390c0 <LogLuvVSetField+0x90>
movslq (%rdx),%rsi
cmp    $0x2f,%esi
jle    390c6 <LogLuvVSetField+0x96>
mov    0x8(%rdx),%rsi
lea    0x8(%rsi),%rcx
mov    %rcx,0x8(%rdx)
movslq (%rsi),%rcx
jmp    390d3 <LogLuvVSetField+0xa3>
mov    0x10(%rdx),%rcx
movslq (%rcx,%rsi,1),%rcx
add    $0x8,%esi
mov    %esi,(%rdx)
mov    %ecx,0x4(%r8)
mov    $0x20,%edx
cmp    $0x1,%ecx
jle    390e1 <LogLuvVSetField+0xb1>
cmp    $0x2,%ecx
je     39139 <LogLuvVSetField+0x109>
cmp    $0x3,%ecx
jne    3916e <LogLuvVSetField+0x13e>
mov    %r14,%r8
mov    %rdi,%r14
mov    $0x8,%edx
jmp    390f4 <LogLuvVSetField+0xc4>
callq  *0x30(%r8)
leaveq 
retq   
mov    0x10(%rdx),%rcx
movslq (%rcx,%rsi,1),%rcx
add    $0x8,%esi
mov    %esi,(%rdx)
mov    %ecx,0x8(%r8)
test   %ecx,%ecx
jne    3918d <LogLuvVSetField+0x15d>
leaveq 
retq   
test   %ecx,%ecx
jne    39194 <LogLuvVSetField+0x164>
mov    %r14,%r8
mov    %rdi,%r14
mov    $0x3,%eax
xor    %ecx,%ecx
mov    $0x102,%esi
mov    %r14,%rdi
mov    %r15,-0x10(%rbp)
mov    %r8,-0x8(%rbp)
mov    %rax,%r15
mov    %rcx,%rax
callq  8290 <TIFFSetField@plt>
mov    %r15,%rdx
mov    $0x153,%esi
mov    %r14,%rdi
xor    %eax,%eax
callq  8290 <TIFFSetField@plt>
mov    0x10(%r14),%eax
and    $0x400,%eax
test   %eax,%eax
jne    391ae <LogLuvVSetField+0x17e>
mov    $0xffffffffffffffff,%rax
jmp    391b6 <LogLuvVSetField+0x186>
xor    %ecx,%ecx
mov    $0x115,%esi
mov    %rdi,%rdx
mov    %r15,-0x10(%rbp)
mov    %r14,%r15
mov    %rdi,%r14
mov    %rdx,%rdi
mov    %rax,%rdx
mov    %rcx,%rax
callq  8290 <TIFFSetField@plt>
mov    %r15,%r8
mov    $0x20,%edx
mov    $0x1,%eax
mov    -0x10(%rbp),%r15
jmp    390f4 <LogLuvVSetField+0xc4>
xor    %eax,%eax
mov    0x3b8(%rdi),%r8
mov    (%rdi),%rsi
mov    %r8,%rdi
lea    0x37f55(%rip),%rdx        # 710d9 <module.60+0x10>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
cmp    $0x1,%ecx
jne    391db <LogLuvVSetField+0x1ab>
leaveq 
retq   
cmp    $0x1,%ecx
jne    3916e <LogLuvVSetField+0x13e>
mov    %r14,%r8
mov    %rdi,%r14
mov    $0x10,%edx
mov    $0x2,%eax
jmpq   390f4 <LogLuvVSetField+0xc4>
mov    %r14,%rdi
callq  8910 <TIFFTileSize@plt>
mov    %rax,0x2b0(%r14)
mov    %r14,%rdi
callq  8410 <TIFFScanlineSize@plt>
mov    %rax,0x358(%r14)
mov    -0x8(%rbp),%r14
mov    $0x1,%eax
mov    -0x10(%rbp),%r15
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
lea    0x37ede(%rip),%rsi        # 710c9 <module.60>
lea    0x37f15(%rip),%rdx        # 71107 <module.60+0x3e>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

0000000000039200 <LogLuvVGetField>:
push   %rbp
mov    %rsp,%rbp
mov    0x350(%rdi),%rcx
cmp    $0x10018,%esi
jne    3922c <LogLuvVGetField+0x2c>
movslq (%rdx),%rsi
cmp    $0x2f,%esi
jle    39231 <LogLuvVGetField+0x31>
mov    0x8(%rdx),%rsi
lea    0x8(%rsi),%rax
mov    %rax,0x8(%rdx)
mov    (%rsi),%rax
jmp    3923e <LogLuvVGetField+0x3e>
callq  *0x28(%rcx)
leaveq 
retq   
mov    0x10(%rdx),%rax
mov    (%rax,%rsi,1),%rax
add    $0x8,%esi
mov    %esi,(%rdx)
movslq 0x4(%rcx),%rcx
mov    %ecx,(%rax)
mov    $0x1,%eax
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

0000000000039250 <TIFFInitLZMA>:
push   %rbp
mov    %rsp,%rbp
sub    $0xa0,%rsp
mov    %r14,-0x10(%rbp)
mov    %r15,-0x18(%rbp)
mov    %rdi,%r14
mov    %rsi,%r15
lea    -0xa0(%rbp),%rdi
lea    0x380d1(%rip),%rsi        # 71348 <module.12+0x10>
mov    $0x88,%edx
callq  8720 <memcpy@plt>
cmp    $0x886d,%r15d
je     392a9 <TIFFInitLZMA+0x59>
lea    0x3813f(%rip),%rdi        # 713d0 <module.12+0x98>
lea    0x38153(%rip),%rsi        # 713eb <module.12+0xb3>
mov    $0x1a0,%edx
lea    0x38152(%rip),%rcx        # 713f6 <module.12+0xbe>
callq  8490 <__assert_fail@plt>
lea    0x38088(%rip),%r15        # 71338 <module.12>
lea    0x40751(%rip),%rsi        # 79a08 <lzmaFields>
mov    $0x1,%edx
mov    %r14,%rdi
callq  8520 <_TIFFMergeFields@plt>
test   %eax,%eax
jne    392ec <TIFFInitLZMA+0x9c>
xor    %eax,%eax
mov    0x3b8(%r14),%rdi
mov    %r15,%rsi
lea    0x38128(%rip),%rdx        # 71403 <module.12+0xcb>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
leaveq 
retq   
mov    $0x210,%edi
callq  8440 <_TIFFmalloc@plt>
mov    %rax,0x350(%r14)
test   %rax,%rax
je     394af <TIFFInitLZMA+0x25f>
mov    %rax,%r15
lea    0x80(%r15),%rdi
mov    $0x88,%edx
lea    -0xa0(%rbp),%rsi
callq  8720 <memcpy@plt>
mov    0x410(%r14),%rax
mov    %rax,0x200(%r15)
lea    0xb5a(%rip),%rax        # 39e90 <LZMAVGetField>
mov    %rax,0x410(%r14)
mov    0x408(%r14),%rax
mov    %rax,0x208(%r15)
lea    0xa5e(%rip),%rax        # 39db0 <LZMAVSetField>
mov    %rax,0x408(%r14)
movl   $0x6,0x1f0(%r15)
movl   $0x0,0x1f4(%r15)
movl   $0x0,0x1f8(%r15)
lea    0x158(%r15),%rcx
movl   $0x0,(%rcx)
movzwl 0x74(%r14),%eax
and    $0x7,%eax
test   %eax,%eax
jle    394d3 <TIFFInitLZMA+0x283>
mov    $0x1,%eax
mov    %eax,0x15c(%r15)
movq   $0x3,0x108(%r15)
mov    %rcx,0x110(%r15)
lea    0x180(%r15),%rax
mov    0x1f0(%r15),%esi
mov    %rax,%rdi
mov    %r13,-0x8(%rbp)
mov    %rax,%r13
callq  8cb0 <lzma_lzma_preset@plt>
movq   $0x21,0x118(%r15)
mov    %r13,0x120(%r15)
movq   $0xffffffffffffffff,0x128(%r15)
movq   $0x0,0x130(%r15)
lea    0x4ef(%rip),%rax        # 398f0 <LZMAFixupTags>
mov    %rax,0x2c0(%r14)
lea    0x4f1(%rip),%rax        # 39900 <LZMASetupDecode>
mov    %rax,0x2c8(%r14)
lea    0x563(%rip),%rax        # 39980 <LZMAPreDecode>
mov    %rax,0x2d0(%r14)
lea    0x205(%rip),%rax        # 39630 <LZMADecode>
mov    %rax,0x2f8(%r14)
mov    %rax,0x308(%r14)
mov    %rax,0x318(%r14)
lea    0x649(%rip),%rax        # 39a90 <LZMASetupEncode>
mov    %rax,0x2d8(%r14)
lea    0x6bb(%rip),%rax        # 39b10 <LZMAPreEncode>
mov    %rax,0x2e8(%r14)
lea    0x78d(%rip),%rax        # 39bf0 <LZMAPostEncode>
mov    %rax,0x2f0(%r14)
lea    0x6f(%rip),%rax        # 394e0 <LZMAEncode>
mov    %rax,0x300(%r14)
mov    %rax,0x310(%r14)
mov    %rax,0x320(%r14)
lea    0x873(%rip),%rax        # 39d00 <LZMACleanup>
mov    %rax,0x338(%r14)
mov    %r14,%rdi
callq  8ac0 <TIFFPredictorInit@plt>
mov    -0x8(%rbp),%r13
mov    $0x1,%eax
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%r14),%rdi
mov    %r15,%rsi
lea    0x37f6a(%rip),%rdx        # 7142c <module.12+0xf4>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
leaveq 
retq   
movzwl 0x74(%r14),%eax
shr    $0x3,%eax
jmpq   3939c <TIFFInitLZMA+0x14c>

00000000000394e0 <LZMAEncode>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
lea    0x37efc(%rip),%r9        # 713eb <module.12+0xb3>
lea    0x37f6b(%rip),%rcx        # 71461 <module.22+0x16>
mov    0x350(%rdi),%r8
test   %r8,%r8
jne    39516 <LZMAEncode+0x36>
mov    %r9,%rsi
lea    0x37f4a(%rip),%rdi        # 71456 <module.22+0xb>
mov    $0x115,%edx
callq  8490 <__assert_fail@plt>
movslq 0x1f8(%r8),%rax
cmp    $0x2,%eax
je     39536 <LZMAEncode+0x56>
mov    %r9,%rsi
lea    0x37f40(%rip),%rdi        # 7146c <module.22+0x21>
mov    $0x116,%edx
callq  8490 <__assert_fail@plt>
lea    0x80(%r8),%rcx
mov    %rsi,(%rcx)
mov    %rdx,0x88(%r8)
xor    %eax,%eax
mov    %r12,-0x8(%rbp)
mov    %r13,-0x10(%rbp)
mov    %r14,-0x18(%rbp)
mov    %r15,-0x20(%rbp)
mov    %rax,%r12
mov    %rdi,%r13
mov    %r8,%r14
mov    %rcx,%r15
jmp    395b1 <LZMAEncode+0xd1>
mov    0xa0(%r14),%rax
test   %rax,%rax
jne    395a5 <LZMAEncode+0xc5>
mov    0x370(%r13),%rax
mov    %rax,0x390(%r13)
mov    %r13,%rdi
callq  86e0 <TIFFFlushData1@plt>
mov    0x368(%r13),%rax
mov    %rax,0x98(%r14)
mov    0x370(%r13),%rax
mov    %rax,0xa0(%r14)
mov    0x88(%r14),%rax
test   %rax,%rax
je     3960a <LZMAEncode+0x12a>
mov    %r15,%rdi
mov    %r12,%rsi
callq  8130 <lzma_code@plt>
test   %eax,%eax
je     39567 <LZMAEncode+0x87>
mov    %rax,%rdi
callq  39860 <LZMAStrerror>
xor    %r8d,%r8d
mov    0x3b8(%r13),%rdi
lea    0x37e72(%rip),%rsi        # 7144b <module.22>
lea    0x37eac(%rip),%rdx        # 7148c <module.22+0x41>
mov    0x27c(%r13),%ecx
mov    %r8,%r9
mov    %rax,%r8
mov    %r9,%rax
callq  8a00 <TIFFErrorExt@plt>
mov    %r12,%rax
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
leaveq 
retq   
mov    $0x1,%eax
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   0x0(%rax)

0000000000039630 <LZMADecode>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
lea    0x37dac(%rip),%r9        # 713eb <module.12+0xb3>
lea    0x37e74(%rip),%rcx        # 714ba <module.27+0xb>
mov    0x350(%rdi),%r8
test   %r8,%r8
jne    39666 <LZMADecode+0x36>
mov    %r9,%rsi
lea    0x37dfa(%rip),%rdi        # 71456 <module.22+0xb>
mov    $0xab,%edx
callq  8490 <__assert_fail@plt>
movslq 0x1f8(%r8),%rax
cmp    $0x1,%eax
je     39686 <LZMADecode+0x56>
mov    %r9,%rsi
lea    0x37e49(%rip),%rdi        # 714c5 <module.27+0x16>
mov    $0xac,%edx
callq  8490 <__assert_fail@plt>
lea    0x80(%r8),%rcx
mov    0x388(%rdi),%rax
mov    %rax,(%rcx)
mov    0x390(%rdi),%rax
mov    %rax,0x88(%r8)
mov    %rsi,0x98(%r8)
mov    %rdx,0xa0(%r8)
xor    %eax,%eax
mov    %rdi,-0x30(%rbp)
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rax,%rbx
mov    %r8,%r12
mov    %rcx,%r13
jmp    39713 <LZMADecode+0xe3>
mov    %r13,%rdi
callq  83e0 <lzma_memusage@plt>
mov    %rax,%rsi
mov    %r13,%rdi
mov    %rbx,%rdx
callq  8800 <lzma_stream_decoder@plt>
test   %eax,%eax
jne    3978c <LZMADecode+0x15c>
mov    %r14,0x0(%r13)
mov    %r15,0x88(%r12)
mov    0xa0(%r12),%rax
test   %rax,%rax
je     397bf <LZMADecode+0x18f>
mov    0x80(%r12),%r14
mov    0x88(%r12),%r15
mov    %r13,%rdi
mov    %rbx,%rsi
callq  8130 <lzma_code@plt>
cmp    $0x1,%eax
jne    397cf <LZMADecode+0x19f>
lea    0x37d71(%rip),%rsi        # 714af <module.27>
mov    -0x30(%rbp),%r13
mov    0xa0(%r12),%r8
test   %r8,%r8
jne    3981d <LZMADecode+0x1ed>
mov    0x80(%r12),%rax
mov    %rax,0x388(%r13)
mov    0x88(%r12),%rax
mov    %rax,0x390(%r13)
mov    $0x1,%eax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
mov    %rax,%rdi
callq  39860 <LZMAStrerror>
mov    %rax,%rcx
xor    %eax,%eax
mov    -0x30(%rbp),%r13
mov    0x3b8(%r13),%rdi
lea    0x37d3a(%rip),%rdx        # 714e5 <module.27+0x36>
lea    0x37cfd(%rip),%r14        # 714af <module.27>
mov    %r14,%rsi
callq  8a00 <TIFFErrorExt@plt>
mov    %r14,%rsi
jmp    39742 <LZMADecode+0x112>
lea    0x37ce9(%rip),%rsi        # 714af <module.27>
mov    -0x30(%rbp),%r13
jmpq   39742 <LZMADecode+0x112>
cmp    $0x6,%eax
je     396d8 <LZMADecode+0xa8>
test   %eax,%eax
je     39702 <LZMADecode+0xd2>
mov    %rax,%rdi
callq  39860 <LZMAStrerror>
mov    %rax,%r8
xor    %eax,%eax
mov    -0x30(%rbp),%r13
mov    0x3b8(%r13),%rdi
lea    0x37d10(%rip),%rdx        # 7150f <module.27+0x60>
mov    0x27c(%r13),%ecx
lea    0x37ca2(%rip),%r14        # 714af <module.27>
mov    %r14,%rsi
callq  8a00 <TIFFErrorExt@plt>
mov    %r14,%rsi
jmpq   39742 <LZMADecode+0x112>
xor    %eax,%eax
mov    0x3b8(%r13),%rdi
lea    0x37d05(%rip),%rdx        # 71532 <module.27+0x83>
mov    0x27c(%r13),%ecx
callq  8a00 <TIFFErrorExt@plt>
mov    %rbx,%rax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   (%rax)

0000000000039860 <LZMAStrerror>:
push   %rbp
mov    %rsp,%rbp
lea    0x37e6e(%rip),%rax        # 716d9 <module.27+0x22a>
cmp    $0xb,%edi
jbe    39872 <LZMAStrerror+0x12>
leaveq 
retq   
lea    0x37a8f(%rip),%rdx        # 71308 <module.60+0x23f>
movslq (%rdx,%rdi,4),%rcx
add    %rdx,%rcx
jmpq   *%rcx
lea    0x37cdb(%rip),%rax        # 71564 <module.27+0xb5>
leaveq 
retq   
lea    0x37cf3(%rip),%rax        # 71585 <module.27+0xd6>
leaveq 
retq   
lea    0x37d04(%rip),%rax        # 7159f <module.27+0xf0>
leaveq 
retq   
lea    0x37d1f(%rip),%rax        # 715c3 <module.27+0x114>
leaveq 
retq   
lea    0x37d3b(%rip),%rax        # 715e8 <module.27+0x139>
leaveq 
retq   
lea    0x37d58(%rip),%rax        # 7160e <module.27+0x15f>
leaveq 
retq   
lea    0x37d66(%rip),%rax        # 71625 <module.27+0x176>
leaveq 
retq   
lea    0x37d7c(%rip),%rax        # 71644 <module.27+0x195>
leaveq 
retq   
lea    0x37d8e(%rip),%rax        # 7165f <module.27+0x1b0>
leaveq 
retq   
lea    0x37da4(%rip),%rax        # 7167e <module.27+0x1cf>
leaveq 
retq   
lea    0x37dab(%rip),%rax        # 7168e <module.27+0x1df>
leaveq 
retq   
lea    0x37ddb(%rip),%rax        # 716c7 <module.27+0x218>
leaveq 
retq   
leaveq 
retq   

00000000000398f0 <LZMAFixupTags>:
push   %rbp
mov    %rsp,%rbp
mov    $0x1,%eax
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

0000000000039900 <LZMASetupDecode>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    0x350(%rdi),%rax
test   %rax,%rax
jne    39933 <LZMASetupDecode+0x33>
lea    0x37b3b(%rip),%rdi        # 71456 <module.22+0xb>
lea    0x37ac9(%rip),%rsi        # 713eb <module.12+0xb3>
mov    $0x72,%edx
lea    0x37dc6(%rip),%rcx        # 716f4 <module.27+0x245>
callq  8490 <__assert_fail@plt>
movslq 0x1f8(%rax),%rcx
and    $0x2,%ecx
test   %ecx,%ecx
jle    39965 <LZMASetupDecode+0x65>
lea    0x80(%rax),%rdi
mov    %r15,-0x8(%rbp)
mov    %rax,%r15
callq  8870 <lzma_end@plt>
mov    %r15,%rax
movl   $0x0,0x1f8(%rax)
mov    -0x8(%rbp),%r15
movslq 0x1f8(%rax),%rcx
or     $0x1,%ecx
mov    %ecx,0x1f8(%rax)
mov    $0x1,%eax
leaveq 
retq   
nopl   0x0(%rax)

0000000000039980 <LZMAPreDecode>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    0x350(%rdi),%rax
test   %rax,%rax
jne    399b3 <LZMAPreDecode+0x33>
lea    0x37abb(%rip),%rdi        # 71456 <module.22+0xb>
lea    0x37a49(%rip),%rsi        # 713eb <module.12+0xb3>
mov    $0x89,%edx
lea    0x37d64(%rip),%rcx        # 71712 <module.47+0xe>
callq  8490 <__assert_fail@plt>
movslq 0x1f8(%rax),%rcx
and    $0x1,%ecx
test   %ecx,%ecx
jne    399ea <LZMAPreDecode+0x6a>
mov    %rdi,%rcx
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rax,%r14
mov    %rdi,%r15
mov    %rcx,%rdi
callq  *0x2c8(%r15)
mov    %r14,%rax
mov    %r15,%rdi
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
mov    0x368(%rdi),%rcx
mov    %rcx,0x80(%rax)
mov    0x390(%rdi),%r8
mov    %r8,0x88(%rax)
lea    0x37cf7(%rip),%rsi        # 71704 <module.47>
xor    %edx,%edx
mov    0x390(%rdi),%rcx
cmp    %r8,%rcx
jne    39a3f <LZMAPreDecode+0xbf>
add    $0x80,%rax
mov    $0xffffffffffffffff,%rsi
mov    %rdi,-0x10(%rbp)
mov    %rax,%rdi
callq  8800 <lzma_stream_decoder@plt>
test   %eax,%eax
jne    39a58 <LZMAPreDecode+0xd8>
mov    $0x1,%eax
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
lea    0x37cd1(%rip),%rdx        # 71720 <module.47+0x1c>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
mov    %rax,%rdi
callq  39860 <LZMAStrerror>
xor    %r8d,%r8d
mov    -0x10(%rbp),%rcx
mov    0x3b8(%rcx),%rdi
mov    %rax,%rcx
mov    %r8,%rax
lea    0x37a6a(%rip),%rdx        # 714e5 <module.27+0x36>
lea    0x37c82(%rip),%rsi        # 71704 <module.47>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

0000000000039a90 <LZMASetupEncode>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    0x350(%rdi),%rax
test   %rax,%rax
jne    39ac3 <LZMASetupEncode+0x33>
lea    0x379ab(%rip),%rdi        # 71456 <module.22+0xb>
lea    0x37939(%rip),%rsi        # 713eb <module.12+0xb3>
mov    $0xea,%edx
lea    0x37c8d(%rip),%rcx        # 7174b <module.47+0x47>
callq  8490 <__assert_fail@plt>
movslq 0x1f8(%rax),%rcx
and    $0x1,%ecx
test   %ecx,%ecx
jle    39af5 <LZMASetupEncode+0x65>
lea    0x80(%rax),%rdi
mov    %r15,-0x8(%rbp)
mov    %rax,%r15
callq  8870 <lzma_end@plt>
mov    %r15,%rax
movl   $0x0,0x1f8(%rax)
mov    -0x8(%rbp),%r15
movslq 0x1f8(%rax),%rcx
or     $0x2,%ecx
mov    %ecx,0x1f8(%rax)
mov    $0x1,%eax
leaveq 
retq   
nopl   0x0(%rax)

0000000000039b10 <LZMAPreEncode>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    0x350(%rdi),%rax
test   %rax,%rax
jne    39b43 <LZMAPreEncode+0x33>
lea    0x3792b(%rip),%rdi        # 71456 <module.22+0xb>
lea    0x378b9(%rip),%rsi        # 713eb <module.12+0xb3>
mov    $0xfe,%edx
lea    0x37c2b(%rip),%rcx        # 71769 <module.51+0xe>
callq  8490 <__assert_fail@plt>
movslq 0x1f8(%rax),%rcx
cmp    $0x2,%ecx
je     39b78 <LZMAPreEncode+0x68>
mov    %rdi,%rcx
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rax,%r14
mov    %rdi,%r15
mov    %rcx,%rdi
callq  *0x2d8(%r15)
mov    %r14,%rax
mov    %r15,%rdi
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
mov    0x368(%rdi),%rcx
mov    %rcx,0x98(%rax)
mov    0x370(%rdi),%rdx
mov    %rdx,0xa0(%rax)
mov    0x370(%rdi),%rcx
cmp    %rdx,%rcx
jne    39bc4 <LZMAPreEncode+0xb4>
lea    0x80(%rax),%rdi
lea    0x108(%rax),%rsi
mov    0x1f4(%rax),%edx
callq  8c30 <lzma_stream_encoder@plt>
test   %eax,%eax
jne    39be4 <LZMAPreEncode+0xd4>
mov    $0x1,%eax
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
lea    0x37b87(%rip),%rsi        # 7175b <module.51>
lea    0x37b45(%rip),%rdx        # 71720 <module.47+0x1c>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
xor    %eax,%eax
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

0000000000039bf0 <LZMAPostEncode>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    0x350(%rdi),%r12
movq   $0x0,0x88(%r12)
lea    0x80(%r12),%r13
mov    %rdi,%rbx
mov    $0x3,%r14d
mov    %r13,%rdi
mov    %r14,%rsi
callq  8130 <lzma_code@plt>
test   %eax,%eax
je     39c44 <LZMAPostEncode+0x54>
cmp    $0x1,%eax
jne    39cae <LZMAPostEncode+0xbe>
mov    0x370(%rbx),%rcx
mov    0xa0(%r12),%rdx
cmp    %rdx,%rcx
je     39c8e <LZMAPostEncode+0x9e>
sub    %rdx,%rcx
mov    %rcx,0x390(%rbx)
mov    %rax,%r15
mov    %rbx,%rdi
callq  86e0 <TIFFFlushData1@plt>
mov    0x368(%rbx),%rax
mov    %rax,0x98(%r12)
mov    0x370(%rbx),%rax
mov    %rax,0xa0(%r12)
mov    %r15,%rax
cmp    $0x1,%eax
jne    39c30 <LZMAPostEncode+0x40>
mov    $0x1,%eax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
mov    %rax,%rdi
callq  39860 <LZMAStrerror>
mov    0x3b8(%rbx),%rdi
mov    %rax,%rcx
lea    0x37ab0(%rip),%rsi        # 71777 <module.53>
lea    0x37ab8(%rip),%rdx        # 71786 <module.53+0xf>
xor    %ebx,%ebx
mov    %rbx,%rax
callq  8a00 <TIFFErrorExt@plt>
mov    %rbx,%rax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   0x0(%rax)

0000000000039d00 <LZMACleanup>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    0x350(%rdi),%rcx
test   %rcx,%rcx
jne    39d33 <LZMACleanup+0x33>
lea    0x37a7d(%rip),%rdi        # 71798 <module.53+0x21>
lea    0x376c9(%rip),%rsi        # 713eb <module.12+0xb3>
mov    $0x159,%edx
lea    0x37a72(%rip),%rcx        # 717a0 <module.53+0x29>
callq  8490 <__assert_fail@plt>
mov    %rdi,%rax
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rdi,%r14
mov    %rax,%rdi
mov    %rcx,%r15
callq  8180 <TIFFPredictorCleanup@plt>
mov    0x200(%r15),%rax
mov    %rax,0x410(%r14)
mov    0x208(%r15),%rax
mov    %rax,0x408(%r14)
movslq 0x1f8(%r15),%rax
test   %eax,%eax
je     39d8a <LZMACleanup+0x8a>
lea    0x80(%r15),%rdi
callq  8870 <lzma_end@plt>
movl   $0x0,0x1f8(%r15)
mov    %r15,%rdi
callq  8bb0 <_TIFFfree@plt>
mov    %r14,%rdi
movq   $0x0,0x350(%rdi)
callq  8740 <_TIFFSetDefaultCompressionState@plt>
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
nop

0000000000039db0 <LZMAVSetField>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    0x350(%rdi),%rax
cmp    $0x1001a,%esi
jne    39de0 <LZMAVSetField+0x30>
movslq (%rdx),%rcx
cmp    $0x2f,%ecx
jle    39de8 <LZMAVSetField+0x38>
mov    0x8(%rdx),%rsi
lea    0x8(%rsi),%rcx
mov    %rcx,0x8(%rdx)
movslq (%rsi),%rsi
jmp    39df5 <LZMAVSetField+0x45>
callq  *0x208(%rax)
leaveq 
retq   
mov    0x10(%rdx),%rsi
movslq (%rsi,%rcx,1),%rsi
add    $0x8,%ecx
mov    %ecx,(%rdx)
mov    %esi,0x1f0(%rax)
lea    0x180(%rax),%rcx
mov    %r15,-0x10(%rbp)
mov    %rdi,-0x8(%rbp)
mov    %rcx,%rdi
mov    %rax,%r15
callq  8cb0 <lzma_lzma_preset@plt>
mov    $0x1,%eax
movslq 0x1f8(%r15),%rcx
and    $0x2,%ecx
test   %ecx,%ecx
jg     39e2e <LZMAVSetField+0x7e>
mov    -0x10(%rbp),%r15
leaveq 
retq   
lea    0x80(%r15),%rdi
lea    0x108(%r15),%rsi
mov    0x1f4(%r15),%edx
mov    %rax,%r15
callq  8c30 <lzma_stream_encoder@plt>
test   %eax,%eax
jne    39e58 <LZMAVSetField+0xa8>
mov    %r15,%rax
mov    -0x10(%rbp),%r15
leaveq 
retq   
mov    %rax,%rdi
callq  39860 <LZMAStrerror>
xor    %r8d,%r8d
mov    -0x8(%rbp),%rcx
mov    0x3b8(%rcx),%rdi
mov    %rax,%rcx
mov    %r8,%rax
lea    0x37931(%rip),%rsi        # 717ac <module.57>
lea    0x37904(%rip),%rdx        # 71786 <module.53+0xf>
callq  8a00 <TIFFErrorExt@plt>
mov    %r15,%rax
mov    -0x10(%rbp),%r15
leaveq 
retq   

0000000000039e90 <LZMAVGetField>:
push   %rbp
mov    %rsp,%rbp
mov    0x350(%rdi),%rax
cmp    $0x1001a,%esi
jne    39ebc <LZMAVGetField+0x2c>
movslq (%rdx),%rsi
cmp    $0x2f,%esi
jle    39ec4 <LZMAVGetField+0x34>
mov    0x8(%rdx),%rsi
lea    0x8(%rsi),%rcx
mov    %rcx,0x8(%rdx)
mov    (%rsi),%rcx
jmp    39ed1 <LZMAVGetField+0x41>
callq  *0x200(%rax)
leaveq 
retq   
mov    0x10(%rdx),%rcx
mov    (%rcx,%rsi,1),%rcx
add    $0x8,%esi
mov    %esi,(%rdx)
movslq 0x1f0(%rax),%rax
mov    %eax,(%rcx)
mov    $0x1,%eax
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)
nopl   0x0(%rax,%rax,1)

0000000000039ef0 <TIFFInitLZW>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
cmp    $0x5,%esi
je     39f1c <TIFFInitLZW+0x2c>
lea    0x378db(%rip),%rdi        # 717df <module.12+0xc>
lea    0x378ee(%rip),%rsi        # 717f9 <module.12+0x26>
mov    $0x47e,%edx
lea    0x378ec(%rip),%rcx        # 71803 <module.12+0x30>
callq  8490 <__assert_fail@plt>
mov    $0x120,%eax
mov    %r15,-0x8(%rbp)
mov    %rdi,%r15
mov    %rax,%rdi
callq  8440 <_TIFFmalloc@plt>
mov    %rax,0x350(%r15)
test   %rax,%rax
je     3a02d <TIFFInitLZW+0x13d>
movq   $0x0,0xe0(%rax)
mov    0x350(%r15),%rax
movq   $0x0,0xb8(%rax)
mov    0x350(%r15),%rax
movq   $0x0,0x118(%rax)
movslq 0xc(%r15),%rcx
mov    0x350(%r15),%rax
mov    %ecx,0x98(%rax)
lea    0x1139(%rip),%rax        # 3b0c0 <LZWFixupTags>
mov    %rax,0x2c0(%r15)
lea    0x113b(%rip),%rax        # 3b0d0 <LZWSetupDecode>
mov    %rax,0x2c8(%r15)
lea    0x12bd(%rip),%rax        # 3b260 <LZWPreDecode>
mov    %rax,0x2d0(%r15)
lea    0xaf(%rip),%rax        # 3a060 <LZWDecode>
mov    %rax,0x2f8(%r15)
mov    %rax,0x308(%r15)
mov    %rax,0x318(%r15)
lea    0x14c3(%rip),%rax        # 3b490 <LZWSetupEncode>
mov    %rax,0x2d8(%r15)
lea    0x1555(%rip),%rax        # 3b530 <LZWPreEncode>
mov    %rax,0x2e8(%r15)
lea    0x1d47(%rip),%rax        # 3bd30 <LZWPostEncode>
mov    %rax,0x2f0(%r15)
lea    0x1649(%rip),%rax        # 3b640 <LZWEncode>
mov    %rax,0x300(%r15)
mov    %rax,0x310(%r15)
mov    %rax,0x320(%r15)
lea    0x1f4d(%rip),%rax        # 3bf60 <LZWCleanup>
mov    %rax,0x338(%r15)
mov    %r15,%rdi
callq  8ac0 <TIFFPredictorInit@plt>
mov    $0x1,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
mov    0x3b8(%r15),%rdi
lea    0x37798(%rip),%rsi        # 717d3 <module.12>
lea    0x377cd(%rip),%rdx        # 7180f <module.12+0x3c>
xor    %r15d,%r15d
mov    %r15,%rax
callq  8a00 <TIFFErrorExt@plt>
mov    %r15,%rax
mov    -0x8(%rbp),%r15
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)

000000000003a060 <LZWDecode>:
push   %rbp
mov    %rsp,%rbp
sub    $0x80,%rsp
mov    %rdi,-0x78(%rbp)
lea    0x37783(%rip),%r9        # 717f9 <module.12+0x26>
lea    0x377c4(%rip),%rcx        # 71841 <module.17+0x15>
mov    0x350(%rdi),%rax
test   %rax,%rax
jne    3a09d <LZWDecode+0x3d>
mov    %r9,%rsi
lea    0x377a3(%rip),%rdi        # 71836 <module.17+0xa>
mov    $0x178,%edx
callq  8490 <__assert_fail@plt>
mov    0xe0(%rax),%r8
test   %r8,%r8
jne    3a0bd <LZWDecode+0x5d>
mov    %r9,%rsi
lea    0x37798(%rip),%rdi        # 7184b <module.17+0x1f>
mov    $0x179,%edx
callq  8490 <__assert_fail@plt>
mov    $0x1,%r11d
mov    %r11,-0x68(%rbp)
mov    0xa8(%rax),%r9
test   %r9,%r9
jne    3a1e8 <LZWDecode+0x188>
mov    %rdx,%r8
mov    %rsi,-0x60(%rbp)
mov    0x388(%rdi),%rcx
mov    0xc8(%rax),%r9
mov    0xd0(%rax),%r10
movzwl 0x80(%rax),%r11d
mov    %r15,-0x38(%rbp)
mov    0x88(%rax),%r15
mov    %r14,-0x30(%rbp)
mov    0x90(%rax),%r14
mov    %r13,-0x28(%rbp)
mov    0xa0(%rax),%r13
mov    %r12,-0x20(%rbp)
mov    0xd8(%rax),%rdx
mov    %rbx,-0x18(%rbp)
mov    %rdx,-0x48(%rbp)
mov    0x390(%rdi),%rdx
shl    $0x3,%rdx
mov    %rdx,0xb0(%rax)
xor    %edx,%edx
mov    %rdx,-0x70(%rbp)
mov    %rcx,%rbx
mov    %rax,%r12
mov    %r13,%rax
mov    %rdi,%r13
lea    0x376d2(%rip),%rsi        # 7182c <module.17>
lea    0x37702(%rip),%rdx        # 71863 <module.17+0x37>
xor    %edi,%edi
test   %r8,%r8
jg     3a213 <LZWDecode+0x1b3>
mov    -0x48(%rbp),%rcx
mov    0x388(%r13),%rdx
sub    %rbx,%rdx
add    0x390(%r13),%rdx
mov    %rdx,0x390(%r13)
mov    %rbx,0x388(%r13)
mov    %r11w,0x80(%r12)
mov    %r15,0x88(%r12)
mov    %r14,0x90(%r12)
mov    %rax,0xa0(%r12)
mov    %r9,0xc8(%r12)
mov    %r10,0xd0(%r12)
mov    %rcx,0xd8(%r12)
test   %r8,%r8
jg     3a24a <LZWDecode+0x1ea>
mov    $0x1,%eax
mov    -0x18(%rbp),%rbx
mov    -0x20(%rbp),%r12
mov    -0x28(%rbp),%r13
mov    -0x30(%rbp),%r14
mov    -0x38(%rbp),%r15
leaveq 
retq   
mov    0xc0(%rax),%r8
movzwl 0x8(%r8),%r10d
mov    %r10,%rcx
sub    %r9,%rcx
cmp    %rcx,%rdx
jl     3a285 <LZWDecode+0x225>
add    %rcx,%rsi
mov    %r10,-0x70(%rbp)
mov    %rsi,-0x80(%rbp)
jmpq   3a29d <LZWDecode+0x23d>
mov    0xb0(%r12),%rcx
cmp    %r11,%rcx
jb     3a2d4 <LZWDecode+0x274>
lea    0x1(%rbx),%rcx
movzbl (%rbx),%edi
shl    $0x8,%r15
add    %rdi,%r15
lea    0x8(%r14),%rdi
cmp    %rdi,%r11
jg     3a34e <LZWDecode+0x2ee>
mov    %rcx,%rbx
mov    %rdi,%rcx
jmpq   3a360 <LZWDecode+0x300>
xor    %eax,%eax
mov    0x3b8(%r13),%rbx
lea    0x376dd(%rip),%rdx        # 71937 <module.17+0x10b>
mov    0x27c(%r13),%ecx
mov    %rdi,%r13
mov    %rbx,%rdi
callq  8a00 <TIFFErrorExt@plt>
mov    %r13,%rax
mov    -0x18(%rbp),%rbx
mov    -0x20(%rbp),%r12
mov    -0x28(%rbp),%r13
mov    -0x30(%rbp),%r14
mov    -0x38(%rbp),%r15
leaveq 
retq   
lea    (%rdx,%r9,1),%rdi
mov    %rdi,0xa8(%rax)
jmpq   3a389 <LZWDecode+0x329>
test   %r10,%r10
je     3a2b5 <LZWDecode+0x255>
mov    %r10,%r8
mov    (%r8),%r10
movsbq 0xa(%r8),%r8
add    $0xffffffffffffffff,%rsi
mov    %r8b,(%rsi)
add    $0xffffffffffffffff,%rcx
test   %rcx,%rcx
jne    3a295 <LZWDecode+0x235>
movq   $0x0,0xa8(%rax)
mov    -0x70(%rbp),%rcx
sub    %rcx,%r9
lea    (%rdx,%r9,1),%r8
mov    -0x80(%rbp),%rsi
jmpq   3a0da <LZWDecode+0x7a>
xor    %ecx,%ecx
mov    0x3b8(%r13),%rdi
mov    %r8,-0x50(%rbp)
mov    0x284(%r13),%r8d
mov    %r9,-0x58(%rbp)
mov    %r11,-0x80(%rbp)
mov    %rax,-0x40(%rbp)
mov    %rcx,%rax
mov    %r8,%rcx
mov    %r10,%r13
callq  85a0 <TIFFWarningExt@plt>
mov    %r13,%r10
mov    -0x40(%rbp),%rax
mov    -0x80(%rbp),%r11
mov    -0x78(%rbp),%r13
mov    -0x58(%rbp),%r9
lea    0x37510(%rip),%rsi        # 7182c <module.17>
mov    -0x50(%rbp),%r8
mov    $0x101,%edi
lea    0x37537(%rip),%rdx        # 71863 <module.17+0x37>
cmp    $0x101,%di
je     3a3a3 <LZWDecode+0x343>
cmp    $0x100,%di
jne    3a3ae <LZWDecode+0x34e>
mov    %r8,-0x80(%rbp)
mov    %r9,-0x40(%rbp)
mov    $0x12fd0,%edx
xor    %esi,%esi
jmpq   3a499 <LZWDecode+0x439>
movzbl (%rcx),%ecx
shl    $0x8,%r15
add    %rcx,%r15
lea    0x10(%r14),%rcx
add    $0x2,%rbx
sub    %r11,%rcx
mov    %r15,%rdi
shr    %cl,%rdi
mov    %rcx,%r14
and    %ax,%di
mov    0xb0(%r12),%rcx
sub    %r11,%rcx
mov    %rcx,0xb0(%r12)
jmp    3a32c <LZWDecode+0x2cc>
test   %r8,%r8
je     3a395 <LZWDecode+0x335>
mov    (%r8),%r8
add    $0xffffffffffffffff,%rcx
cmp    %rcx,%rdx
jl     3a384 <LZWDecode+0x324>
test   %r8,%r8
jne    3a4f3 <LZWDecode+0x493>
mov    %r11,%rax
leaveq 
retq   
mov    -0x48(%rbp),%rcx
xor    %edi,%edi
jmpq   3a170 <LZWDecode+0x110>
mov    0xe0(%r12),%rcx
cmp    %r10,%rcx
ja     3a503 <LZWDecode+0x4a3>
lea    0x13ff0(%rcx),%rsi
cmp    %rsi,%r10
jae    3a4fc <LZWDecode+0x49c>
mov    %r9,(%r10)
mov    0xe0(%r12),%rsi
cmp    %rsi,%r9
jb     3a537 <LZWDecode+0x4d7>
add    $0x13ff0,%rsi
cmp    %rsi,%r9
jae    3a537 <LZWDecode+0x4d7>
movzbl 0xb(%r9),%esi
mov    %sil,0xb(%r10)
movzwl 0x8(%r9),%r9d
add    $0x1,%r9d
mov    %r9w,0x8(%r10)
movzwl %di,%r9d
shl    $0x4,%r9
add    %rcx,%r9
cmp    %r10,%r9
jae    3a41f <LZWDecode+0x3bf>
movzbl 0xb(%r9),%esi
mov    %sil,0xa(%r10)
add    $0x10,%r10
mov    -0x48(%rbp),%rcx
cmp    %r10,%rcx
jae    3a462 <LZWDecode+0x402>
lea    0x1(%r11),%rcx
cmp    $0xc,%rcx
jle    3a43f <LZWDecode+0x3df>
mov    $0xc,%ecx
mov    $0x1,%eax
shl    %cl,%rax
mov    %rcx,%r11
add    $0xffffffffffffffff,%rax
mov    %rax,%rcx
shl    $0x4,%rcx
mov    0xe0(%r12),%rsi
lea    -0x10(%rsi,%rcx,1),%rcx
mov    %rcx,-0x48(%rbp)
cmp    $0xff,%di
ja     3a572 <LZWDecode+0x512>
mov    -0x60(%rbp),%rcx
mov    %dil,(%rcx)
add    $0x1,%rcx
mov    %rcx,-0x60(%rbp)
add    $0xffffffffffffffff,%r8
lea    0x373a1(%rip),%rsi        # 7182c <module.17>
xor    %edi,%edi
jmpq   3a163 <LZWDecode+0x103>
mov    $0x12fd0,%edx
xor    %esi,%esi
mov    0xe0(%r12),%rdi
add    $0x1020,%rdi
mov    %rdi,-0x50(%rbp)
callq  88e0 <_TIFFmemset@plt>
mov    0xe0(%r12),%rax
mov    %rax,-0x48(%rbp)
mov    0xb0(%r12),%rax
cmp    $0x8,%rax
jbe    3a5a2 <LZWDecode+0x542>
lea    0x1(%rbx),%rcx
movzbl (%rbx),%eax
shl    $0x8,%r15
add    %rax,%r15
lea    0x8(%r14),%rax
cmp    $0x8,%rax
jle    3a644 <LZWDecode+0x5e4>
mov    %rcx,%rbx
jmpq   3a656 <LZWDecode+0x5f6>
lea    (%rdx,%rsi,1),%rcx
jmpq   3a690 <LZWDecode+0x630>
lea    0x37329(%rip),%rsi        # 7182c <module.17>
xor    %eax,%eax
mov    0x3b8(%r13),%rdi
mov    0x27c(%r13),%ecx
lea    0x373a8(%rip),%rdx        # 718c2 <module.17+0x96>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x18(%rbp),%rbx
mov    -0x20(%rbp),%r12
mov    -0x28(%rbp),%r13
mov    -0x30(%rbp),%r14
mov    -0x38(%rbp),%r15
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%r13),%rdi
mov    0x27c(%r13),%ecx
lea    0x372de(%rip),%rsi        # 7182c <module.17>
lea    0x3736d(%rip),%rdx        # 718c2 <module.17+0x96>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x18(%rbp),%rbx
mov    -0x20(%rbp),%r12
mov    -0x28(%rbp),%r13
mov    -0x30(%rbp),%r14
mov    -0x38(%rbp),%r15
leaveq 
retq   
movzwl 0x8(%r9),%edi
test   %di,%di
je     3a6ac <LZWDecode+0x64c>
cmp    %r8,%rdi
jg     3a6e7 <LZWDecode+0x687>
mov    -0x60(%rbp),%r13
lea    0x0(%r13,%rdi,1),%rcx
mov    %r8,-0x58(%rbp)
mov    %rcx,-0x60(%rbp)
mov    %r9,%rsi
jmpq   3a704 <LZWDecode+0x6a4>
xor    %eax,%eax
mov    0x3b8(%r13),%rdi
mov    0x284(%r13),%ecx
lea    0x37273(%rip),%rsi        # 7182c <module.17>
lea    0x372a3(%rip),%r13        # 71863 <module.17+0x37>
mov    %r13,%rdx
callq  85a0 <TIFFWarningExt@plt>
mov    %r13,%rdx
mov    -0x78(%rbp),%r13
mov    $0x101,%eax
cmp    $0x100,%ax
je     3a492 <LZWDecode+0x432>
mov    -0x48(%rbp),%rcx
add    $0x1fe0,%rcx
mov    %rcx,-0x48(%rbp)
cmp    $0x101,%ax
je     3a74d <LZWDecode+0x6ed>
cmp    $0x100,%ax
ja     3a772 <LZWDecode+0x712>
mov    -0x60(%rbp),%rcx
mov    %al,(%rcx)
movzwl %ax,%r9d
shl    $0x4,%r9
add    0xe0(%r12),%r9
lea    0x1(%rcx),%rax
mov    %rax,-0x60(%rbp)
mov    -0x80(%rbp),%rax
lea    -0x1(%rax),%r8
mov    -0x50(%rbp),%r10
lea    0x371fa(%rip),%rsi        # 7182c <module.17>
mov    $0x1ff,%eax
mov    $0x9,%r11d
xor    %edi,%edi
jmpq   3a163 <LZWDecode+0x103>
movzbl (%rcx),%eax
shl    $0x8,%r15
add    %rax,%r15
lea    0x10(%r14),%rax
add    $0x2,%rbx
lea    -0x9(%rax),%rcx
mov    %r15,%rax
shr    %cl,%rax
mov    %rcx,%r14
and    $0x1ff,%ax
mov    0xb0(%r12),%rcx
add    $0xfffffffffffffff7,%rcx
mov    %rcx,0xb0(%r12)
lea    0x371e1(%rip),%rdx        # 71863 <module.17+0x37>
jmpq   3a5d4 <LZWDecode+0x574>
test   %r8,%r8
je     3a7aa <LZWDecode+0x74a>
movsbq 0xa(%r8),%rax
add    $0xffffffffffffffff,%rcx
mov    %al,(%rcx)
mov    (%r8),%r8
add    $0xffffffffffffffff,%rdx
test   %rdx,%rdx
jne    3a687 <LZWDecode+0x627>
mov    %r11,%rax
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%r13),%rdi
lea    0x37229(%rip),%rdx        # 718e5 <module.17+0xb9>
mov    0x27c(%r13),%ecx
lea    0x37162(%rip),%rsi        # 7182c <module.17>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x18(%rbp),%rbx
mov    -0x20(%rbp),%r12
mov    -0x28(%rbp),%r13
mov    -0x30(%rbp),%r14
mov    -0x38(%rbp),%r15
leaveq 
retq   
mov    %r9,0xc0(%r12)
mov    -0x60(%rbp),%rdi
mov    %r9,%rdx
jmpq   3a7b8 <LZWDecode+0x758>
cmp    %rcx,%r13
jae    3a7e1 <LZWDecode+0x781>
movsbq 0xa(%rsi),%r8
add    $0xffffffffffffffff,%rcx
mov    (%rsi),%rsi
mov    %r8b,(%rcx)
test   %rsi,%rsi
jne    3a6fb <LZWDecode+0x69b>
pushq  -0x70(%rbp)
popq   -0x80(%rbp)
mov    -0x80(%rbp),%rcx
test   %rcx,%rcx
jne    3a7ec <LZWDecode+0x78c>
mov    -0x58(%rbp),%r8
cmp    %r8,%rdi
jg     3a847 <LZWDecode+0x7e7>
sub    %rdi,%r8
mov    -0x78(%rbp),%r13
lea    0x370e6(%rip),%rsi        # 7182c <module.17>
xor    %edi,%edi
jmpq   3a163 <LZWDecode+0x103>
mov    -0x50(%rbp),%r10
mov    -0x40(%rbp),%r9
lea    0x370d0(%rip),%rsi        # 7182c <module.17>
mov    -0x80(%rbp),%r8
mov    $0x1ff,%eax
mov    $0x9,%r11d
xor    %edi,%edi
jmpq   3a170 <LZWDecode+0x110>
xor    %eax,%eax
mov    0x3b8(%r13),%rdi
mov    0x0(%r13),%rsi
lea    0x3710e(%rip),%rdx        # 71894 <module.17+0x68>
mov    0x27c(%r13),%ecx
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x18(%rbp),%rbx
mov    -0x20(%rbp),%r12
mov    -0x28(%rbp),%r13
mov    -0x30(%rbp),%r14
mov    -0x38(%rbp),%r15
leaveq 
retq   
mov    %r11,%rax
leaveq 
retq   
movzwl 0x8(%rdx),%esi
cmp    %rsi,%r8
jge    3a7c6 <LZWDecode+0x766>
mov    (%rdx),%rdx
test   %rdx,%rdx
jne    3a7af <LZWDecode+0x74f>
pushq  -0x70(%rbp)
popq   -0x68(%rbp)
mov    -0x68(%rbp),%rsi
test   %rsi,%rsi
jne    3a866 <LZWDecode+0x806>
lea    0x37052(%rip),%rsi        # 7182c <module.17>
xor    %edi,%edi
jmpq   3a170 <LZWDecode+0x110>
pushq  -0x68(%rbp)
popq   -0x80(%rbp)
jmpq   3a71e <LZWDecode+0x6be>
mov    -0x78(%rbp),%r13
mov    %r13,%rdi
lea    0x37032(%rip),%rsi        # 7182c <module.17>
mov    %r15,-0x8(%rbp)
mov    %r14,-0x10(%rbp)
mov    %rax,-0x60(%rbp)
mov    %r12,-0x80(%rbp)
mov    %r9,%r12
mov    %r11,%r14
mov    %r10,%r15
callq  3b460 <codeLoop>
mov    %r12,%r9
mov    %r15,%r10
mov    %r14,%r11
mov    -0x80(%rbp),%r12
mov    -0x60(%rbp),%rax
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r15
lea    0x36ff4(%rip),%rsi        # 7182c <module.17>
mov    -0x58(%rbp),%r8
mov    -0x48(%rbp),%rcx
xor    %edi,%edi
jmpq   3a170 <LZWDecode+0x110>
lea    0x370de(%rip),%rdi        # 7192c <module.17+0x100>
mov    $0x223,%edx
lea    0x36f9f(%rip),%rsi        # 717f9 <module.12+0x26>
lea    0x36fe0(%rip),%rcx        # 71841 <module.17+0x15>
callq  8490 <__assert_fail@plt>
mov    %r8,0xa8(%r12)
lea    (%rdi,%r8,1),%rsi
jmp    3a879 <LZWDecode+0x819>
test   %rdx,%rdx
je     3a891 <LZWDecode+0x831>
movsbq 0xa(%rdx),%rdi
add    $0xffffffffffffffff,%rsi
mov    %dil,(%rsi)
mov    (%rdx),%rdx
add    $0xffffffffffffffff,%r8
test   %r8,%r8
jne    3a874 <LZWDecode+0x814>
test   %rdx,%rdx
jne    3a8a4 <LZWDecode+0x844>
lea    0x36f8f(%rip),%rsi        # 7182c <module.17>
xor    %edi,%edi
jmpq   3a170 <LZWDecode+0x110>
mov    %r13,%rdi
lea    0x36f7e(%rip),%rsi        # 7182c <module.17>
mov    %r15,-0x8(%rbp)
mov    %r14,-0x10(%rbp)
mov    %rax,-0x68(%rbp)
mov    %r12,-0x78(%rbp)
mov    %r8,-0x80(%rbp)
mov    %r10,%r12
mov    %r11,%r14
mov    %r9,%r15
callq  3b460 <codeLoop>
mov    %r15,%r9
mov    %r12,%r10
mov    %r14,%r11
mov    -0x80(%rbp),%r8
mov    -0x78(%rbp),%r12
mov    -0x68(%rbp),%rax
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r15
lea    0x36f38(%rip),%rsi        # 7182c <module.17>
mov    -0x48(%rbp),%rcx
xor    %edi,%edi
jmpq   3a170 <LZWDecode+0x110>
nop

000000000003a900 <LZWDecodeCompat>:
push   %rbp
mov    %rsp,%rbp
sub    $0x70,%rsp
mov    %rdi,-0x68(%rbp)
lea    0x36ee6(%rip),%r8        # 717f9 <module.12+0x26>
lea    0x3705f(%rip),%rcx        # 71979 <module.27+0x10>
mov    0x350(%rdi),%rax
test   %rax,%rax
jne    3a93a <LZWDecodeCompat+0x3a>
mov    %r8,%rsi
lea    0x36f06(%rip),%rdi        # 71836 <module.17+0xa>
mov    $0x263,%edx
callq  8490 <__assert_fail@plt>
mov    $0x1,%r10d
mov    0xa8(%rax),%r9
test   %r9,%r9
jne    3aa51 <LZWDecodeCompat+0x151>
mov    %rdx,%r8
mov    %rsi,-0x60(%rbp)
mov    0x388(%rdi),%rsi
mov    0xc8(%rax),%r9
mov    0xd0(%rax),%r10
movzwl 0x80(%rax),%ecx
mov    %r15,-0x30(%rbp)
mov    0x88(%rax),%r15
mov    %r14,-0x28(%rbp)
mov    0x90(%rax),%r14
mov    %r13,-0x20(%rbp)
mov    0xa0(%rax),%r11
mov    %r12,-0x18(%rbp)
mov    0xd8(%rax),%rdx
mov    %rbx,-0x10(%rbp)
mov    %rdx,-0x48(%rbp)
mov    0x390(%rdi),%rdx
shl    $0x3,%rdx
mov    %rdx,0xb0(%rax)
mov    %rax,%rbx
mov    %rsi,%r12
mov    %rdi,%r13
lea    0x36fa0(%rip),%rsi        # 71969 <module.27>
lea    0x36e93(%rip),%rdx        # 71863 <module.17+0x37>
test   %r8,%r8
jg     3aaae <LZWDecodeCompat+0x1ae>
mov    -0x48(%rbp),%rdx
mov    $0x1,%eax
mov    0x388(%r13),%rdi
sub    %r12,%rdi
add    0x390(%r13),%rdi
mov    %rdi,0x390(%r13)
mov    %r12,0x388(%r13)
mov    %cx,0x80(%rbx)
mov    %r15,0x88(%rbx)
mov    %r14,0x90(%rbx)
mov    %r11,0xa0(%rbx)
mov    %r9,0xc8(%rbx)
mov    %r10,0xd0(%rbx)
mov    %rdx,0xd8(%rbx)
test   %r8,%r8
jg     3aaf8 <LZWDecodeCompat+0x1f8>
mov    -0x10(%rbp),%rbx
mov    -0x18(%rbp),%r12
mov    -0x20(%rbp),%r13
mov    -0x28(%rbp),%r14
mov    -0x30(%rbp),%r15
leaveq 
retq   
mov    0xc0(%rax),%rcx
movzwl 0x8(%rcx),%r11d
mov    %r11,%r8
sub    %r9,%r8
cmp    %r8,%rdx
jl     3ab2c <LZWDecodeCompat+0x22c>
add    %r8,%rsi
mov    %r11,-0x48(%rbp)
mov    %rsi,-0x60(%rbp)
movsbq 0xa(%rcx),%r10
add    $0xffffffffffffffff,%rsi
mov    %r10b,(%rsi)
mov    (%rcx),%rcx
add    $0xffffffffffffffff,%r8
test   %r8,%r8
jne    3aa77 <LZWDecodeCompat+0x177>
movq   $0x0,0xa8(%rax)
mov    -0x48(%rbp),%rcx
sub    %rcx,%r9
lea    (%rdx,%r9,1),%r8
mov    -0x60(%rbp),%rsi
jmpq   3a953 <LZWDecodeCompat+0x53>
movslq %ecx,%rax
mov    0xb0(%rbx),%rdi
cmp    %rax,%rdi
jb     3ab62 <LZWDecodeCompat+0x262>
mov    %r14,%rsi
mov    %rcx,%r14
mov    %rsi,%rcx
movzbl (%r12),%edx
shl    %cl,%rdx
or     %rdx,%r15
lea    0x1(%r12),%rdx
lea    0x8(%rcx),%rdi
movslq %r14d,%rsi
cmp    %rsi,%rdi
jl     3abcd <LZWDecodeCompat+0x2cd>
mov    %r14,%rcx
mov    %rdi,%r14
mov    %rdx,%r12
jmpq   3abea <LZWDecodeCompat+0x2ea>
xor    %eax,%eax
mov    0x3b8(%r13),%rdi
lea    0x36e2f(%rip),%rdx        # 71937 <module.17+0x10b>
mov    0x27c(%r13),%ecx
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x10(%rbp),%rbx
mov    -0x18(%rbp),%r12
mov    -0x20(%rbp),%r13
mov    -0x28(%rbp),%r14
mov    -0x30(%rbp),%r15
leaveq 
retq   
lea    (%rdx,%r9,1),%rdi
mov    %rdi,0xa8(%rax)
mov    (%rcx),%rcx
add    $0xffffffffffffffff,%r8
cmp    %r8,%rdx
jl     3ab37 <LZWDecodeCompat+0x237>
add    %rdx,%rsi
movsbq 0xa(%rcx),%rax
add    $0xffffffffffffffff,%rsi
mov    %al,(%rsi)
mov    (%rcx),%rcx
add    $0xffffffffffffffff,%rdx
test   %rdx,%rdx
jne    3ab46 <LZWDecodeCompat+0x246>
mov    %r10,%rax
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%r13),%rdi
mov    %r8,-0x38(%rbp)
mov    0x284(%r13),%r8d
mov    %r10,-0x58(%rbp)
mov    %r9,-0x50(%rbp)
mov    %r11,-0x40(%rbp)
mov    %rcx,%r13
mov    %r8,%rcx
callq  85a0 <TIFFWarningExt@plt>
mov    %r13,%rcx
mov    -0x40(%rbp),%r11
mov    -0x68(%rbp),%r13
mov    -0x50(%rbp),%r9
mov    -0x58(%rbp),%r10
mov    -0x38(%rbp),%r8
mov    $0x101,%edx
cmp    $0x101,%edx
je     3ac0c <LZWDecodeCompat+0x30c>
cmp    $0x100,%edx
jne    3ac21 <LZWDecodeCompat+0x321>
mov    %r8,-0x38(%rbp)
mov    %r9,-0x8(%rbp)
mov    $0x12fd0,%edx
xor    %esi,%esi
jmpq   3acb4 <LZWDecodeCompat+0x3b4>
movzbl (%rdx),%edx
xchg   %r14,%rdi
xchg   %rcx,%r14
shl    %cl,%rdx
or     %r15,%rdx
add    $0x2,%r12
add    $0x10,%r14
mov    %rdi,%rcx
mov    %rdx,%r15
mov    %r11,%rdx
and    %r15,%rdx
movzwl %dx,%edx
sar    %cl,%r15
sub    %rsi,%r14
mov    0xb0(%rbx),%rsi
sub    %rax,%rsi
mov    %rsi,0xb0(%rbx)
jmp    3aba9 <LZWDecodeCompat+0x2a9>
lea    0x36d56(%rip),%rsi        # 71969 <module.27>
mov    -0x48(%rbp),%rdx
mov    $0x1,%eax
jmpq   3a9e2 <LZWDecodeCompat+0xe2>
mov    0xe0(%rbx),%rdi
cmp    %r10,%rdi
ja     3ad13 <LZWDecodeCompat+0x413>
lea    0x13ff0(%rdi),%rax
cmp    %rax,%r10
jae    3ad13 <LZWDecodeCompat+0x413>
mov    %r9,(%r10)
mov    0xe0(%rbx),%rax
cmp    %rax,%r9
jb     3ad4e <LZWDecodeCompat+0x44e>
add    $0x13ff0,%rax
cmp    %rax,%r9
jae    3ad4e <LZWDecodeCompat+0x44e>
movzbl 0xb(%r9),%esi
mov    %sil,0xb(%r10)
movzwl 0x8(%r9),%eax
add    $0x1,%eax
mov    %ax,0x8(%r10)
movslq %edx,%rax
shl    $0x4,%rax
lea    (%rdi,%rax,1),%r9
cmp    %r10,%r9
jae    3ac8e <LZWDecodeCompat+0x38e>
movzbl 0xb(%r9),%esi
mov    %sil,0xa(%r10)
add    $0x10,%r10
mov    -0x48(%rbp),%rsi
cmp    %r10,%rsi
jb     3ad89 <LZWDecodeCompat+0x489>
mov    $0x1,%eax
jmpq   3adb3 <LZWDecodeCompat+0x4b3>
mov    $0x12fd0,%edx
xor    %esi,%esi
mov    0xe0(%rbx),%rdi
add    $0x1020,%rdi
mov    %rdi,-0x58(%rbp)
callq  88e0 <_TIFFmemset@plt>
mov    0xe0(%rbx),%rax
mov    %rax,-0x50(%rbp)
mov    0xb0(%rbx),%rax
cmp    $0x8,%rax
jbe    3ade8 <LZWDecodeCompat+0x4e8>
mov    %r14,%rcx
movzbl (%r12),%eax
shl    %cl,%rax
mov    %rcx,%rdx
or     %rax,%r15
lea    0x1(%r12),%rax
lea    0x8(%rdx),%rcx
cmp    $0x8,%rcx
jle    3ae89 <LZWDecodeCompat+0x589>
mov    %rax,%r12
jmpq   3ae9d <LZWDecodeCompat+0x59d>
xor    %eax,%eax
mov    0x3b8(%r13),%rdi
mov    0x27c(%r13),%ecx
lea    0x36c3f(%rip),%rsi        # 71969 <module.27>
lea    0x36b91(%rip),%rdx        # 718c2 <module.17+0x96>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x10(%rbp),%rbx
mov    -0x18(%rbp),%r12
mov    -0x20(%rbp),%r13
mov    -0x28(%rbp),%r14
mov    -0x30(%rbp),%r15
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%r13),%rdi
mov    0x27c(%r13),%ecx
lea    0x36c04(%rip),%rsi        # 71969 <module.27>
lea    0x36b56(%rip),%rdx        # 718c2 <module.17+0x96>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x10(%rbp),%rbx
mov    -0x18(%rbp),%r12
mov    -0x20(%rbp),%r13
mov    -0x28(%rbp),%r14
mov    -0x30(%rbp),%r15
leaveq 
retq   
add    $0x1,%ecx
cmp    $0xc,%ecx
jle    3ad96 <LZWDecodeCompat+0x496>
mov    $0xc,%ecx
mov    $0x1,%eax
mov    %rax,%rsi
shl    %cl,%rsi
lea    -0x1(%rsi),%r11
mov    %r11,%rsi
shl    $0x4,%rsi
add    0xe0(%rbx),%rsi
mov    %rsi,-0x48(%rbp)
cmp    $0xff,%edx
jg     3aecd <LZWDecodeCompat+0x5cd>
mov    -0x60(%rbp),%rax
mov    %dl,(%rax)
add    $0x1,%rax
mov    %rax,-0x60(%rbp)
add    $0xffffffffffffffff,%r8
lea    0x36b8d(%rip),%rsi        # 71969 <module.27>
lea    0x36a80(%rip),%rdx        # 71863 <module.17+0x37>
jmpq   3a9d0 <LZWDecodeCompat+0xd0>
xor    %eax,%eax
mov    0x3b8(%r13),%rdi
mov    0x284(%r13),%ecx
lea    0x36b6a(%rip),%rsi        # 71969 <module.27>
lea    0x36a5d(%rip),%r13        # 71863 <module.17+0x37>
mov    %r13,%rdx
callq  85a0 <TIFFWarningExt@plt>
mov    %r13,%rdx
mov    -0x68(%rbp),%r13
mov    $0x101,%eax
cmp    $0x100,%eax
je     3acad <LZWDecodeCompat+0x3ad>
mov    -0x50(%rbp),%rcx
lea    0x1ff0(%rcx),%rdi
mov    %rdi,-0x48(%rbp)
cmp    $0x101,%eax
je     3af2d <LZWDecodeCompat+0x62d>
cmp    $0x100,%eax
jg     3af58 <LZWDecodeCompat+0x658>
mov    -0x60(%rbp),%rcx
mov    %al,(%rcx)
movslq %eax,%r9
shl    $0x4,%r9
add    0xe0(%rbx),%r9
lea    0x1(%rcx),%rax
mov    %rax,-0x60(%rbp)
mov    -0x38(%rbp),%rax
lea    -0x1(%rax),%r8
mov    -0x58(%rbp),%r10
lea    0x36af0(%rip),%rsi        # 71969 <module.27>
mov    $0x1ff,%r11d
mov    $0x9,%ecx
jmpq   3a9d0 <LZWDecodeCompat+0xd0>
movzbl (%rax),%eax
shl    %cl,%rax
or     %r15,%rax
add    $0x2,%r12
lea    0x10(%rdx),%rcx
mov    %rax,%r15
mov    %r15,%rax
and    $0x1ff,%ax
movzwl %ax,%eax
sar    $0x9,%r15
mov    0xb0(%rbx),%rdx
add    $0xfffffffffffffff7,%rdx
mov    %rdx,0xb0(%rbx)
lea    -0x9(%rcx),%r14
lea    0x3699b(%rip),%rdx        # 71863 <module.17+0x37>
jmpq   3ae1a <LZWDecodeCompat+0x51a>
movzwl 0x8(%r9),%edi
test   %di,%di
je     3af90 <LZWDecodeCompat+0x690>
cmp    %r8,%rdi
jg     3afcb <LZWDecodeCompat+0x6cb>
cmp    %r8,%rdi
jg     3b01a <LZWDecodeCompat+0x71a>
mov    -0x60(%rbp),%rax
add    %rdi,%rax
mov    %r8,-0x40(%rbp)
mov    %rax,-0x60(%rbp)
mov    %r9,%rdx
movsbq 0xa(%rdx),%rsi
add    $0xffffffffffffffff,%rax
mov    %sil,(%rax)
mov    (%rdx),%rdx
test   %rdx,%rdx
jne    3aeff <LZWDecodeCompat+0x5ff>
mov    -0x40(%rbp),%r8
sub    %rdi,%r8
lea    0x36a48(%rip),%rsi        # 71969 <module.27>
lea    0x3693b(%rip),%rdx        # 71863 <module.17+0x37>
jmpq   3a9d0 <LZWDecodeCompat+0xd0>
mov    %rdi,%rdx
mov    -0x58(%rbp),%r10
mov    -0x8(%rbp),%r9
mov    -0x38(%rbp),%r8
lea    0x36a26(%rip),%rsi        # 71969 <module.27>
mov    $0x1ff,%r11d
mov    $0x9,%ecx
mov    $0x1,%eax
jmpq   3a9e2 <LZWDecodeCompat+0xe2>
xor    %eax,%eax
mov    0x3b8(%r13),%rdi
mov    0x0(%r13),%rsi
lea    0x36928(%rip),%rdx        # 71894 <module.17+0x68>
mov    0x27c(%r13),%ecx
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x10(%rbp),%rbx
mov    -0x18(%rbp),%r12
mov    -0x20(%rbp),%r13
mov    -0x28(%rbp),%r14
mov    -0x30(%rbp),%r15
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%r13),%rdi
lea    0x36945(%rip),%rdx        # 718e5 <module.17+0xb9>
mov    0x27c(%r13),%ecx
lea    0x369bb(%rip),%rsi        # 71969 <module.27>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x10(%rbp),%rbx
mov    -0x18(%rbp),%r12
mov    -0x20(%rbp),%r13
mov    -0x28(%rbp),%r14
mov    -0x30(%rbp),%r15
leaveq 
retq   
mov    %r9,0xc0(%rbx)
mov    -0x60(%rbp),%rsi
mov    %r9,%rdx
mov    (%rdx),%rdx
movzwl 0x8(%rdx),%edi
cmp    %rdi,%r8
jl     3afd9 <LZWDecodeCompat+0x6d9>
mov    %r8,0xa8(%rbx)
add    %r8,%rsi
movsbq 0xa(%rdx),%rdi
add    $0xffffffffffffffff,%rsi
mov    %dil,(%rsi)
mov    (%rdx),%rdx
add    $0xffffffffffffffff,%r8
test   %r8,%r8
jne    3afef <LZWDecodeCompat+0x6ef>
lea    0x3695b(%rip),%rsi        # 71969 <module.27>
mov    -0x48(%rbp),%rdx
xor    %r8d,%r8d
jmpq   3a9e2 <LZWDecodeCompat+0xe2>
lea    0x36968(%rip),%rdi        # 71989 <module.27+0x20>
mov    $0x2f6,%edx
lea    0x367cc(%rip),%rsi        # 717f9 <module.12+0x26>
lea    0x36945(%rip),%rcx        # 71979 <module.27+0x10>
callq  8490 <__assert_fail@plt>
nopl   0x0(%rax)

000000000003b040 <cl_hash>:
push   %rbp
mov    %rsp,%rbp
mov    0x118(%rdi),%rax
add    $0x23280,%rax
mov    $0x2321,%ecx
jmp    3b05b <cl_hash+0x1b>
mov    %rdx,%rcx
movq   $0xffffffffffffffff,-0x70(%rax)
movq   $0xffffffffffffffff,-0x60(%rax)
movq   $0xffffffffffffffff,-0x50(%rax)
movq   $0xffffffffffffffff,-0x40(%rax)
movq   $0xffffffffffffffff,-0x30(%rax)
movq   $0xffffffffffffffff,-0x20(%rax)
movq   $0xffffffffffffffff,-0x10(%rax)
movq   $0xffffffffffffffff,(%rax)
add    $0xffffffffffffff80,%rax
lea    -0x8(%rcx),%rdx
test   %rdx,%rdx
jg     3b058 <cl_hash+0x18>
jmp    3b0b8 <cl_hash+0x78>
movq   $0xffffffffffffffff,(%rax)
add    $0xffffffffffffffff,%rcx
add    $0xfffffffffffffff0,%rax
test   %rcx,%rcx
jg     3b0a9 <cl_hash+0x69>
leaveq 
retq   
nop

000000000003b0c0 <LZWFixupTags>:
push   %rbp
mov    %rsp,%rbp
mov    $0x1,%eax
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

000000000003b0d0 <LZWSetupDecode>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    0x350(%rdi),%rdx
test   %rdx,%rdx
je     3b10e <LZWSetupDecode+0x3e>
mov    %r15,%rcx
mov    %rdi,%r15
test   %rdx,%rdx
jne    3b160 <LZWSetupDecode+0x90>
lea    0x36740(%rip),%rdi        # 71836 <module.17+0xa>
lea    0x366fc(%rip),%rsi        # 717f9 <module.12+0x26>
mov    $0xe5,%edx
lea    0x368a4(%rip),%rcx        # 719ad <module.30+0xf>
callq  8490 <__assert_fail@plt>
mov    $0x120,%eax
mov    %r15,-0x10(%rbp)
mov    %rdi,%r15
mov    %rax,%rdi
callq  8440 <_TIFFmalloc@plt>
mov    %rax,0x350(%r15)
test   %rax,%rax
je     3b176 <LZWSetupDecode+0xa6>
movq   $0x0,0xe0(%rax)
mov    0x350(%r15),%rax
movq   $0x0,0xb8(%rax)
mov    %r15,%rdi
callq  8ac0 <TIFFPredictorInit@plt>
mov    0x350(%r15),%rdx
mov    -0x10(%rbp),%rcx
jmp    3b0ea <LZWSetupDecode+0x1a>
mov    $0x1,%eax
mov    0xe0(%rdx),%rsi
test   %rsi,%rsi
je     3b19a <LZWSetupDecode+0xca>
mov    %rcx,%r15
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
lea    0x36689(%rip),%rdx        # 7180f <module.12+0x3c>
lea    0x36811(%rip),%rsi        # 7199e <module.30>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x10(%rbp),%r15
leaveq 
retq   
mov    $0x13ff0,%edi
mov    %rcx,-0x10(%rbp)
mov    %r14,-0x8(%rbp)
mov    %rdx,%r14
callq  8440 <_TIFFmalloc@plt>
mov    %rax,0xe0(%r14)
test   %rax,%rax
je     3b1c2 <LZWSetupDecode+0xf2>
mov    $0xff,%ecx
jmp    3b1ed <LZWSetupDecode+0x11d>
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
lea    0x367ea(%rip),%rdx        # 719bc <module.30+0x1e>
lea    0x367c5(%rip),%rsi        # 7199e <module.30>
callq  8a00 <TIFFErrorExt@plt>
mov    -0x8(%rbp),%r14
xor    %eax,%eax
mov    -0x10(%rbp),%r15
leaveq 
retq   
add    $0xffffffff,%ecx
mov    0xe0(%r14),%rdx
movslq %ecx,%rax
shl    $0x4,%rax
mov    %cl,0xa(%rdx,%rax,1)
mov    0xe0(%r14),%rdx
mov    %cl,0xb(%rdx,%rax,1)
mov    0xe0(%r14),%rdx
movw   $0x1,0x8(%rdx,%rax,1)
mov    0xe0(%r14),%rdx
movq   $0x0,(%rdx,%rax,1)
test   %ecx,%ecx
jne    3b1ea <LZWSetupDecode+0x11a>
mov    0xe0(%r14),%rdi
add    $0x1000,%rdi
mov    $0x20,%edx
xor    %esi,%esi
callq  88e0 <_TIFFmemset@plt>
mov    $0x1,%eax
mov    -0x8(%rbp),%r14
mov    -0x10(%rbp),%r15
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nop

000000000003b260 <LZWPreDecode>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    0x350(%rdi),%rcx
test   %rcx,%rcx
jne    3b293 <LZWPreDecode+0x33>
lea    0x365bb(%rip),%rdi        # 71836 <module.17+0xa>
lea    0x36577(%rip),%rsi        # 717f9 <module.12+0x26>
mov    $0x10b,%edx
lea    0x36757(%rip),%rcx        # 719e5 <module.33+0xd>
callq  8490 <__assert_fail@plt>
xor    %esi,%esi
mov    0xe0(%rcx),%rax
test   %rax,%rax
je     3b36f <LZWPreDecode+0x10f>
mov    %r15,%rax
mov    %rcx,%r15
mov    %rax,%rcx
mov    0x390(%rdi),%rax
cmp    $0x1,%rax
jg     3b3ab <LZWPreDecode+0x14b>
movw   $0x1fe,0x82(%r15)
lea    -0x1270(%rip),%rax        # 3a060 <LZWDecode>
mov    %rax,0xb8(%r15)
movw   $0x9,0x80(%r15)
movq   $0x0,0x90(%r15)
movq   $0x0,0x88(%r15)
movq   $0x0,0xa8(%r15)
movq   $0x1ff,0xa0(%r15)
movq   $0x0,0xb0(%r15)
mov    0xe0(%r15),%rdi
add    $0x1020,%rdi
mov    %rdi,0xd0(%r15)
mov    $0x12fd0,%edx
mov    %rcx,-0x10(%rbp)
callq  88e0 <_TIFFmemset@plt>
mov    0xe0(%r15),%rcx
lea    -0x10(%rcx),%rax
mov    %rax,0xc8(%r15)
mov    0xa0(%r15),%rax
shl    $0x4,%rax
lea    -0x10(%rcx,%rax,1),%rax
mov    %rax,0xd8(%r15)
mov    $0x1,%eax
mov    -0x10(%rbp),%r15
leaveq 
retq   
mov    %rdi,%rax
mov    %r15,-0x8(%rbp)
mov    %rcx,%r15
mov    %rdi,%rcx
mov    %rax,%rdi
mov    %rcx,%rax
mov    %rax,-0x10(%rbp)
callq  *0x2c8(%rax)
mov    0xe0(%r15),%rax
test   %rax,%rax
je     3b44a <LZWPreDecode+0x1ea>
xor    %esi,%esi
mov    -0x10(%rbp),%rdi
mov    -0x8(%rbp),%rcx
jmpq   3b2ae <LZWPreDecode+0x4e>
mov    0x368(%rdi),%rdx
movzbl (%rdx),%eax
test   %al,%al
jne    3b2bf <LZWPreDecode+0x5f>
movzbl 0x1(%rdx),%eax
and    $0x1,%eax
test   %eax,%eax
jle    3b2bf <LZWPreDecode+0x5f>
mov    0xb8(%r15),%rax
test   %rax,%rax
jne    3b43b <LZWPreDecode+0x1db>
xor    %eax,%eax
mov    0x3b8(%rdi),%r8
lea    0x365f0(%rip),%rsi        # 719d8 <module.33>
lea    0x36603(%rip),%rdx        # 719f2 <module.33+0x1a>
mov    %rcx,-0x10(%rbp)
mov    %r14,-0x8(%rbp)
mov    %rdi,%r14
mov    %r8,%rdi
callq  85a0 <TIFFWarningExt@plt>
mov    %r14,%rdi
lea    -0xb0c(%rip),%r14        # 3a900 <LZWDecodeCompat>
mov    %r14,0x2f8(%rdi)
mov    %r14,0x308(%rdi)
mov    %r14,0x318(%rdi)
mov    0x2c8(%rdi),%rax
callq  *%rax
mov    %r14,0xb8(%r15)
mov    -0x8(%rbp),%r14
xor    %esi,%esi
mov    -0x10(%rbp),%rcx
movw   $0x1ff,0x82(%r15)
jmpq   3b2d7 <LZWPreDecode+0x77>
xor    %eax,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   (%rax)

000000000003b460 <codeLoop>:
push   %rbp
mov    %rsp,%rbp
xor    %eax,%eax
mov    0x3b8(%rdi),%r8
lea    0x365a0(%rip),%rdx        # 71a14 <module.33+0x3c>
mov    0x27c(%rdi),%ecx
mov    %r8,%rdi
callq  8a00 <TIFFErrorExt@plt>
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nop

000000000003b490 <LZWSetupEncode>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    0x350(%rdi),%rax
test   %rax,%rax
jne    3b4c3 <LZWSetupEncode+0x33>
lea    0x3638b(%rip),%rdi        # 71836 <module.17+0xa>
lea    0x36347(%rip),%rsi        # 717f9 <module.12+0x26>
mov    $0x327,%edx
lea    0x36599(%rip),%rcx        # 71a57 <module.37+0xf>
callq  8490 <__assert_fail@plt>
mov    $0x23290,%ecx
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rdi,%r14
mov    %rcx,%rdi
mov    %rax,%r15
callq  8440 <_TIFFmalloc@plt>
mov    %rax,0x118(%r15)
test   %rax,%rax
je     3b4f9 <LZWSetupEncode+0x69>
mov    $0x1,%eax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
mov    0x3b8(%r14),%rdi
lea    0x36541(%rip),%rsi        # 71a48 <module.37>
lea    0x36558(%rip),%rdx        # 71a66 <module.37+0x1e>
xor    %r14d,%r14d
mov    %r14,%rax
callq  8a00 <TIFFErrorExt@plt>
mov    %r14,%rax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)

000000000003b530 <LZWPreEncode>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    0x350(%rdi),%rcx
test   %rcx,%rcx
jne    3b563 <LZWPreEncode+0x33>
lea    0x362eb(%rip),%rdi        # 71836 <module.17+0xa>
lea    0x362a7(%rip),%rsi        # 717f9 <module.12+0x26>
mov    $0x33a,%edx
lea    0x36524(%rip),%rcx        # 71a82 <module.37+0x3a>
callq  8490 <__assert_fail@plt>
mov    0x118(%rcx),%rax
test   %rax,%rax
je     3b577 <LZWPreEncode+0x47>
mov    %r15,%rax
mov    %rcx,%r15
jmp    3b59d <LZWPreEncode+0x6d>
mov    %rdi,%rax
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rdi,%r14
mov    %rax,%rdi
mov    %rcx,%r15
callq  *0x2d8(%r14)
mov    %r14,%rdi
mov    -0x10(%rbp),%rax
mov    -0x8(%rbp),%r14
movw   $0x9,0x80(%r15)
movw   $0x1ff,0x82(%r15)
movw   $0x102,0x84(%r15)
movq   $0x0,0x90(%r15)
movq   $0x0,0x88(%r15)
movq   $0x2710,0xf0(%r15)
movq   $0x0,0xf8(%r15)
movq   $0x0,0x100(%r15)
movq   $0x0,0x108(%r15)
mov    0x370(%rdi),%rdx
mov    0x368(%rdi),%rcx
lea    -0x5(%rdx,%rcx,1),%rcx
mov    %rcx,0x110(%r15)
mov    %r15,%rdi
mov    %rax,-0x10(%rbp)
callq  3b040 <cl_hash>
movl   $0xffff,0xe8(%r15)
mov    $0x1,%eax
mov    -0x10(%rbp),%r15
leaveq 
retq   
nopl   0x0(%rax)

000000000003b640 <LZWEncode>:
push   %rbp
mov    %rsp,%rbp
sub    $0xb0,%rsp
xor    %eax,%eax
mov    0x350(%rdi),%r10
mov    %r10,-0xa0(%rbp)
test   %r10,%r10
jne    3b662 <LZWEncode+0x22>
leaveq 
retq   
lea    0x36190(%rip),%r8        # 717f9 <module.12+0x26>
lea    0x36437(%rip),%rcx        # 71aa7 <module.37+0x5f>
mov    0x118(%r10),%rax
test   %rax,%rax
jne    3b690 <LZWEncode+0x50>
mov    %r8,%rsi
lea    0x36409(%rip),%rdi        # 71a8f <module.37+0x47>
mov    $0x38b,%edx
callq  8490 <__assert_fail@plt>
mov    0x110(%r10),%rax
mov    %rax,-0x90(%rbp)
mov    0x388(%rdi),%rax
mov    0x100(%r10),%rcx
mov    0x108(%r10),%r11
mov    %r15,-0x28(%rbp)
mov    0xf0(%r10),%r15
mov    %r14,-0x20(%rbp)
mov    0x88(%r10),%r14
mov    %r13,-0x18(%rbp)
mov    0x90(%r10),%r13
mov    %r12,-0x10(%rbp)
movzwl 0x84(%r10),%r9d
mov    %rbx,-0x8(%rbp)
movzwl 0x82(%r10),%r8d
movzwl 0x80(%r10),%ebx
mov    %rdi,-0x88(%rbp)
movzwl 0xe8(%r10),%edi
cmp    $0xffff,%di
je     3b71a <LZWEncode+0xda>
mov    %r10,%r12
mov    %r15,%r10
mov    %rsi,%r15
mov    %rax,%rsi
mov    %r15,%rax
jmp    3b752 <LZWEncode+0x112>
test   %rdx,%rdx
jg     3b7d3 <LZWEncode+0x193>
mov    %r10,%r12
mov    %r15,%r10
mov    %rsi,%r15
mov    %rax,%rsi
mov    %r15,%rax
mov    $0xffff,%edi
jmp    3b752 <LZWEncode+0x112>
movzwl 0x8(%rax),%edi
mov    %rcx,%rax
mov    -0xa0(%rbp),%r12
mov    -0xa8(%rbp),%rdx
mov    -0x40(%rbp),%rcx
movzwl %di,%r15d
test   %rdx,%rdx
jg     3b816 <LZWEncode+0x1d6>
mov    %rcx,0x100(%r12)
mov    %r11,0x108(%r12)
mov    %r10,0xf0(%r12)
mov    %r15d,0xe8(%r12)
mov    %r14,0x88(%r12)
mov    %r13,0x90(%r12)
mov    %r9w,0x84(%r12)
mov    %r8w,0x82(%r12)
mov    %bx,0x80(%r12)
mov    -0x88(%rbp),%rax
mov    %rsi,0x388(%rax)
mov    $0x1,%eax
mov    -0x8(%rbp),%rbx
mov    -0x10(%rbp),%r12
mov    -0x18(%rbp),%r13
mov    -0x20(%rbp),%r14
mov    -0x28(%rbp),%r15
leaveq 
retq   
mov    %r10,%r12
mov    %r15,%r10
mov    %rcx,%r15
mov    %rbx,%rcx
shl    %cl,%r14
mov    %rcx,%rbx
or     $0x100,%r14
lea    -0x8(%rbx,%r13,1),%rcx
mov    %r14,%rdi
shr    %cl,%rdi
mov    %dil,(%rax)
lea    0x1(%rax),%rdi
cmp    $0x7,%rcx
jg     3b94b <LZWEncode+0x30b>
mov    %rsi,%rax
mov    %rdi,%rsi
mov    %rcx,%r13
jmpq   3b966 <LZWEncode+0x326>
mov    %rcx,-0x38(%rbp)
add    $0x1,%rcx
mov    %rcx,-0x40(%rbp)
lea    0x1(%rax),%rcx
add    $0xffffffffffffffff,%rdx
mov    %rdx,-0xa8(%rbp)
movzbl (%rax),%edx
mov    %rdx,-0x80(%rbp)
mov    %rdx,%rax
shl    $0xc,%rax
mov    %rdi,-0x70(%rbp)
movzwl %di,%edi
add    %rax,%rdi
shl    $0x5,%edx
mov    %r15,%rax
xor    %edx,%eax
mov    %rax,-0x58(%rbp)
movslq %eax,%rax
mov    %rax,-0x60(%rbp)
shl    $0x4,%rax
add    0x118(%r12),%rax
mov    (%rax),%r12
cmp    %r12,%rdi
je     3b739 <LZWEncode+0xf9>
test   %r12,%r12
jns    3b97d <LZWEncode+0x33d>
mov    %rcx,%rdx
mov    -0xa0(%rbp),%r12
mov    -0x70(%rbp),%r15
mov    -0x90(%rbp),%rcx
cmp    %rcx,%rsi
jbe    3b911 <LZWEncode+0x2d1>
mov    %rdx,-0x68(%rbp)
mov    -0x88(%rbp),%r12
mov    0x368(%r12),%rcx
sub    %rcx,%rsi
mov    %rsi,0x390(%r12)
mov    %r12,%rcx
mov    %r9,-0x98(%rbp)
mov    %rax,-0x58(%rbp)
mov    %rdi,-0x50(%rbp)
mov    %r11,-0x48(%rbp)
mov    %r8,-0x78(%rbp)
mov    %r10,-0x30(%rbp)
mov    %rcx,%rdi
callq  86e0 <TIFFFlushData1@plt>
test   %eax,%eax
je     3b9ae <LZWEncode+0x36e>
mov    0x368(%r12),%rsi
mov    -0x30(%rbp),%r10
mov    -0x78(%rbp),%r8
mov    -0x48(%rbp),%r11
mov    -0x50(%rbp),%rdi
mov    -0x58(%rbp),%rax
mov    -0x98(%rbp),%r9
mov    -0x68(%rbp),%rdx
mov    -0xa0(%rbp),%r12
mov    %rbx,%rcx
shl    %cl,%r14
mov    %rcx,%rbx
movzwl %r15w,%ecx
or     %rcx,%r14
movslq %ebx,%r15
lea    -0x8(%r13,%r15,1),%rcx
mov    %rdx,-0x60(%rbp)
mov    %r14,%rdx
shr    %cl,%rdx
mov    %dl,(%rsi)
lea    0x1(%rsi),%rdx
cmp    $0x7,%rcx
jg     3b9c6 <LZWEncode+0x386>
mov    %rdx,%r13
jmpq   3b9d8 <LZWEncode+0x398>
lea    -0x10(%rbx,%r13,1),%rcx
mov    %rsi,%r13
mov    %r14,%rsi
shr    %cl,%rsi
mov    %sil,(%rdi)
lea    0x2(%rax),%rsi
mov    %r13,%rax
mov    %rcx,%r13
movzbl (%rax),%edi
lea    0x1(%r15),%rcx
add    %rbx,%r11
add    $0x1,%rax
add    $0xffffffffffffffff,%rdx
jmpq   3b752 <LZWEncode+0x112>
cmp    %edx,%r15d
jne    3ba2a <LZWEncode+0x3ea>
mov    %rcx,-0x98(%rbp)
mov    %r8,-0x78(%rbp)
mov    %rbx,-0x50(%rbp)
mov    -0xa0(%rbp),%r12
mov    -0x58(%rbp),%rdx
mov    -0x70(%rbp),%r15
mov    $0x1,%ecx
jmpq   3ba62 <LZWEncode+0x422>
xor    %eax,%eax
mov    -0x8(%rbp),%rbx
mov    -0x10(%rbp),%r12
mov    -0x18(%rbp),%r13
mov    -0x20(%rbp),%r14
mov    -0x28(%rbp),%r15
leaveq 
retq   
lea    -0x10(%r13,%r15,1),%rcx
mov    %r14,%r13
shr    %cl,%r13
mov    %r13b,(%rdx)
lea    0x2(%rsi),%r13
mov    %r9w,0x8(%rax)
mov    %rdi,(%rax)
add    $0x1,%r9d
cmp    $0xffe,%r9d
je     3baa8 <LZWEncode+0x468>
add    %r15,%r11
cmp    %r8d,%r9d
jg     3bb27 <LZWEncode+0x4e7>
mov    -0x40(%rbp),%rsi
cmp    %rsi,%r10
jle    3bb69 <LZWEncode+0x529>
mov    %rsi,%rax
mov    %r13,%rsi
mov    %rcx,%r13
mov    %rax,%rcx
mov    -0x60(%rbp),%rax
mov    -0x80(%rbp),%rdi
mov    -0xa8(%rbp),%rdx
jmpq   3b752 <LZWEncode+0x112>
mov    -0x60(%rbp),%rdx
mov    $0x2329,%eax
sub    %rdx,%rax
mov    %rcx,-0x98(%rbp)
mov    %r8,-0x78(%rbp)
mov    %rbx,-0x50(%rbp)
mov    %rax,%rcx
mov    -0xa0(%rbp),%r12
mov    -0x58(%rbp),%rdx
mov    -0x70(%rbp),%r15
jmp    3ba62 <LZWEncode+0x422>
test   %rbx,%rbx
js     3bbc6 <LZWEncode+0x586>
sub    %ecx,%edx
test   %edx,%edx
jns    3ba6e <LZWEncode+0x42e>
add    $0x2329,%edx
movslq %edx,%rax
shl    $0x4,%rax
add    0x118(%r12),%rax
mov    (%rax),%rbx
cmp    %rbx,%rdi
jne    3ba59 <LZWEncode+0x419>
movzwl 0x8(%rax),%edi
mov    -0x50(%rbp),%rbx
mov    -0x78(%rbp),%r8
mov    -0x98(%rbp),%rax
mov    -0xa8(%rbp),%rdx
mov    -0x40(%rbp),%rcx
jmpq   3b752 <LZWEncode+0x112>
mov    %r12,%rdi
mov    %r10,-0x48(%rbp)
mov    %r13,-0x68(%rbp)
mov    %rcx,%r13
callq  3b040 <cl_hash>
mov    %rbx,%rcx
mov    %r13,%rbx
movq   $0x0,0xf8(%r12)
shl    %cl,%r14
or     $0x100,%r14
lea    -0x8(%rbx,%r15,1),%rcx
mov    %r14,%rdx
shr    %cl,%rdx
mov    %rcx,%r13
mov    -0x68(%rbp),%rax
mov    %dl,(%rax)
lea    0x1(%rax),%rsi
cmp    $0x7,%r13
jg     3bbda <LZWEncode+0x59a>
mov    %r15,%r11
mov    -0x48(%rbp),%r10
mov    -0x60(%rbp),%rax
mov    -0x80(%rbp),%rdi
mov    -0xa8(%rbp),%rdx
mov    $0x9,%ebx
mov    $0x1ff,%r8d
mov    $0x102,%r9d
xor    %ecx,%ecx
jmpq   3b752 <LZWEncode+0x112>
lea    0x1(%rbx),%edx
cmp    $0xc,%edx
jg     3bc1c <LZWEncode+0x5dc>
mov    %rcx,%rsi
mov    %rdx,%rcx
mov    $0x1,%eax
shl    %cl,%rax
mov    %rcx,%rbx
lea    -0x1(%rax),%r8d
mov    %r13,%rax
mov    %rsi,%r13
mov    %rax,%rsi
mov    -0x60(%rbp),%rax
mov    -0x80(%rbp),%rdi
mov    -0xa8(%rbp),%rdx
mov    -0x40(%rbp),%rcx
jmpq   3b752 <LZWEncode+0x112>
cmp    $0x7fffff,%rsi
jg     3bc3b <LZWEncode+0x5fb>
mov    %rsi,%rax
shl    $0x8,%rax
cqto   
idiv   %r11
mov    -0x38(%rbp),%rdx
lea    0x2711(%rdx),%r10
mov    0xf8(%r12),%rdx
cmp    %rax,%rdx
jge    3bc57 <LZWEncode+0x617>
mov    %rax,0xf8(%r12)
mov    %rsi,%rax
mov    %r13,%rsi
mov    %rcx,%r13
mov    %rax,%rcx
mov    -0x60(%rbp),%rax
mov    -0x80(%rbp),%rdi
mov    -0xa8(%rbp),%rdx
jmpq   3b752 <LZWEncode+0x112>
mov    -0x50(%rbp),%rbx
mov    -0x78(%rbp),%r8
mov    -0x98(%rbp),%rdx
jmpq   3b88b <LZWEncode+0x24b>
lea    -0x10(%rbx,%r15,1),%rcx
mov    %r14,%rdx
shr    %cl,%rdx
mov    %rcx,%r13
mov    %dl,(%rsi)
lea    0x2(%rax),%rsi
mov    %r15,%r11
mov    -0x48(%rbp),%r10
mov    -0x60(%rbp),%rax
mov    -0x80(%rbp),%rdi
mov    -0xa8(%rbp),%rdx
mov    $0x9,%ebx
mov    $0x1ff,%r8d
mov    $0x102,%r9d
xor    %ecx,%ecx
jmpq   3b752 <LZWEncode+0x112>
lea    0x35e8e(%rip),%rdi        # 71ab1 <module.37+0x69>
mov    $0x3ee,%edx
lea    0x35bca(%rip),%rsi        # 717f9 <module.12+0x26>
lea    0x35e71(%rip),%rcx        # 71aa7 <module.37+0x5f>
callq  8490 <__assert_fail@plt>
mov    %r11,%rax
and    $0xffffffffffffff00,%rax
test   %rax,%rax
jne    3bcd2 <LZWEncode+0x692>
mov    $0x7fffffff,%eax
jmpq   3bb82 <LZWEncode+0x542>
mov    %r12,%rdi
mov    %r13,-0x70(%rbp)
mov    %r10,-0x50(%rbp)
mov    %rcx,%r13
callq  3b040 <cl_hash>
mov    %rbx,%rcx
mov    %r13,%rbx
movq   $0x0,0xf8(%r12)
shl    %cl,%r14
or     $0x100,%r14
lea    -0x8(%rbx,%r15,1),%rcx
mov    %r14,%rdx
shr    %cl,%rdx
mov    %rcx,%r13
mov    -0x70(%rbp),%rax
mov    %dl,(%rax)
lea    0x1(%rax),%rsi
cmp    $0x7,%r13
jg     3bce9 <LZWEncode+0x6a9>
mov    %r15,%r11
mov    -0x50(%rbp),%r10
mov    -0x60(%rbp),%rax
mov    -0x80(%rbp),%rdi
mov    -0xa8(%rbp),%rdx
mov    $0x9,%ebx
mov    $0x1ff,%r8d
mov    $0x102,%r9d
xor    %ecx,%ecx
jmpq   3b752 <LZWEncode+0x112>
mov    %rsi,%rax
mov    %r11,%rdi
sar    $0x8,%rdi
cqto   
mov    %rax,%rsi
idiv   %rdi
jmpq   3bb82 <LZWEncode+0x542>
lea    -0x10(%rbx,%r15,1),%rcx
mov    %r14,%rdx
shr    %cl,%rdx
mov    %rcx,%r13
mov    %dl,(%rsi)
lea    0x2(%rax),%rsi
mov    %r15,%r11
mov    -0x50(%rbp),%r10
mov    -0x60(%rbp),%rax
mov    -0x80(%rbp),%rdi
mov    -0xa8(%rbp),%rdx
mov    $0x9,%ebx
mov    $0x1ff,%r8d
mov    $0x102,%r9d
xor    %ecx,%ecx
jmpq   3b752 <LZWEncode+0x112>
nopl   0x0(%rax,%rax,1)

000000000003bd30 <LZWPostEncode>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    0x350(%rdi),%r9
mov    0x90(%r9),%rsi
mov    0x88(%r9),%rax
movzwl 0x80(%r9),%ecx
mov    0x388(%rdi),%rdx
mov    0x110(%r9),%r8
cmp    %rdx,%r8
jb     3bde3 <LZWPostEncode+0xb3>
movslq 0xe8(%r9),%r8
cmp    $0xffff,%r8d
jne    3be22 <LZWPostEncode+0xf2>
shl    %cl,%rax
or     $0x101,%rax
movslq %ecx,%rcx
lea    (%rsi,%rcx,1),%r8
lea    -0x8(%r8),%rcx
mov    %rax,%rsi
shr    %cl,%rsi
mov    %sil,(%rdx)
lea    0x1(%rdx),%rsi
cmp    $0x7,%rcx
jle    3bdb4 <LZWPostEncode+0x84>
lea    -0x10(%r8),%rcx
mov    %rax,%r8
shr    %cl,%r8
mov    %r8b,(%rsi)
lea    0x2(%rdx),%rsi
test   %rcx,%rcx
jle    3bdcb <LZWPostEncode+0x9b>
mov    $0x8,%edx
neg    %ecx
add    %edx,%ecx
shl    %cl,%rax
mov    %al,(%rsi)
add    $0x1,%rsi
mov    0x368(%rdi),%rax
sub    %rax,%rsi
mov    %rsi,0x390(%rdi)
mov    $0x1,%eax
leaveq 
retq   
mov    0x368(%rdi),%r8
sub    %r8,%rdx
mov    %rdx,0x390(%rdi)
mov    %rdi,%rdx
mov    %r15,-0x8(%rbp)
mov    %r9,-0x28(%rbp)
mov    %rax,-0x10(%rbp)
mov    %rcx,-0x18(%rbp)
mov    %rsi,-0x20(%rbp)
mov    %rdi,%r15
mov    %rdx,%rdi
callq  86e0 <TIFFFlushData1@plt>
test   %eax,%eax
jne    3be56 <LZWPostEncode+0x126>
xor    %eax,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
movzwl 0x84(%r9),%r10d
shl    %cl,%rax
or     %rax,%r8
mov    %rcx,%rax
lea    -0x8(%rax,%rsi,1),%rcx
mov    %r8,%r11
shr    %cl,%r11
mov    %r11b,(%rdx)
lea    0x1(%rdx),%r11
cmp    $0x7,%rcx
jg     3be79 <LZWPostEncode+0x149>
mov    %rcx,%rdx
mov    %rax,%rcx
mov    %rdx,%rax
jmp    3be94 <LZWPostEncode+0x164>
mov    %r15,%rdi
mov    0x368(%rdi),%rdx
mov    -0x20(%rbp),%rsi
mov    -0x18(%rbp),%rcx
mov    -0x10(%rbp),%rax
mov    -0x28(%rbp),%r9
mov    -0x8(%rbp),%r15
jmpq   3bd68 <LZWPostEncode+0x38>
lea    -0x10(%rax,%rsi,1),%rcx
mov    %r8,%rsi
shr    %cl,%rsi
mov    %sil,(%r11)
lea    0x2(%rdx),%r11
mov    %rcx,%rdx
mov    %rax,%rcx
mov    %rdx,%rax
movl   $0xffff,0xe8(%r9)
lea    0x1(%r10),%edx
cmp    $0xffe,%edx
je     3bec5 <LZWPostEncode+0x195>
movzwl 0x82(%r9),%esi
cmp    %esi,%edx
jg     3bef9 <LZWPostEncode+0x1c9>
mov    %r11,%rdx
mov    %rax,%rsi
mov    %r8,%rax
jmpq   3bd7c <LZWPostEncode+0x4c>
shl    %cl,%r8
or     $0x100,%r8
add    %rcx,%rax
lea    -0x8(%rax),%rcx
mov    %r8,%rdx
shr    %cl,%rdx
mov    %rcx,%rsi
mov    %dl,(%r11)
lea    0x1(%r11),%rdx
mov    $0x9,%ecx
cmp    $0x7,%rsi
jg     3bf0f <LZWPostEncode+0x1df>
mov    %r8,%rax
jmpq   3bd7c <LZWPostEncode+0x4c>
add    $0x1,%ecx
cmp    $0xc,%ecx
jg     3bf33 <LZWPostEncode+0x203>
mov    %r11,%rdx
mov    %rax,%rsi
mov    %r8,%rax
jmpq   3bd7c <LZWPostEncode+0x4c>
add    $0xfffffffffffffff0,%rax
mov    %rcx,%r9
mov    %rax,%rcx
mov    %r8,%rax
shr    %cl,%rax
mov    %rcx,%rsi
mov    %al,(%rdx)
lea    0x2(%r11),%rdx
mov    %r8,%rax
mov    %r9,%rcx
jmpq   3bd7c <LZWPostEncode+0x4c>
lea    0x35b77(%rip),%rdi        # 71ab1 <module.37+0x69>
lea    0x358b8(%rip),%rsi        # 717f9 <module.12+0x26>
mov    $0x442,%edx
lea    0x35b76(%rip),%rcx        # 71ac3 <module.37+0x7b>
callq  8490 <__assert_fail@plt>
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   (%rax)

000000000003bf60 <LZWCleanup>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x8(%rbp)
mov    %rdi,%r15
callq  8180 <TIFFPredictorCleanup@plt>
mov    0x350(%r15),%rax
test   %rax,%rax
jne    3bf9f <LZWCleanup+0x3f>
lea    0x35b4a(%rip),%rdi        # 71ad1 <module.37+0x89>
lea    0x3586b(%rip),%rsi        # 717f9 <module.12+0x26>
mov    $0x46c,%edx
lea    0x35b4a(%rip),%rcx        # 71ae4 <module.37+0x9c>
callq  8490 <__assert_fail@plt>
mov    0xe0(%rax),%rdi
test   %rdi,%rdi
je     3bfb0 <LZWCleanup+0x50>
callq  8bb0 <_TIFFfree@plt>
mov    0x350(%r15),%rax
mov    0x118(%rax),%rdi
test   %rdi,%rdi
je     3bfc8 <LZWCleanup+0x68>
callq  8bb0 <_TIFFfree@plt>
mov    0x350(%r15),%rdi
callq  8bb0 <_TIFFfree@plt>
mov    %r15,%rdi
movq   $0x0,0x350(%rdi)
callq  8740 <_TIFFSetDefaultCompressionState@plt>
mov    -0x8(%rbp),%r15
leaveq 
retq   
nopl   (%rax)

000000000003bff0 <TIFFInitNeXT>:
push   %rbp
mov    %rsp,%rbp
lea    0x365(%rip),%rax        # 3c360 <NeXTPreDecode>
mov    %rax,0x2d0(%rdi)
lea    0x27(%rip),%rax        # 3c030 <NeXTDecode>
mov    %rax,0x2f8(%rdi)
mov    %rax,0x308(%rdi)
mov    %rax,0x318(%rdi)
mov    $0x1,%eax
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)

000000000003c030 <NeXTDecode>:
push   %rbp
mov    %rsp,%rbp
sub    $0x40,%rsp
mov    %rdx,%rcx
mov    %rsi,%r8
jmp    3c04c <NeXTDecode+0x1c>
movb   $0xff,(%r8)
add    $0xffffffffffffffff,%rcx
add    $0x1,%r8
test   %rcx,%rcx
jg     3c040 <NeXTDecode+0x10>
mov    %rdx,%rax
mov    %r12,%r9
mov    %rsi,%r12
mov    %r15,%r10
mov    %r13,%r11
mov    0x388(%rdi),%r8
mov    0x390(%rdi),%r13
lea    0x35a7a(%rip),%rcx        # 71aef <module.8>
mov    0x358(%rdi),%r15
cqto   
mov    %r14,%rsi
mov    %rax,%r14
idiv   %r15
test   %rdx,%rdx
jne    3c0a4 <NeXTDecode+0x74>
mov    %rbx,-0x8(%rbp)
mov    %r9,-0x10(%rbp)
mov    %r11,-0x18(%rbp)
mov    %rsi,-0x20(%rbp)
mov    %r10,-0x28(%rbp)
xor    %ebx,%ebx
jmp    3c0fa <NeXTDecode+0xca>
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
mov    %r9,%r12
mov    %r11,%r13
mov    %rsi,%r14
mov    %rcx,%rsi
mov    %r10,%r15
lea    0x35a37(%rip),%rdx        # 71afa <module.8+0xb>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
cmp    %r13,%r15
jg     3c142 <NeXTDecode+0x112>
mov    %r12,%rax
mov    %r15,%rdx
mov    %rdi,-0x40(%rbp)
mov    %rax,%rdi
mov    %r8,%rbx
callq  8790 <_TIFFmemcpy@plt>
sub    %r15,%r13
lea    0x1(%r15,%rbx,1),%r8
mov    -0x40(%rbp),%rdi
sub    %r15,%r14
add    %r15,%r12
xor    %ebx,%ebx
mov    %r12,-0x40(%rbp)
test   %r13,%r13
jle    3c180 <NeXTDecode+0x150>
test   %r14,%r14
jle    3c180 <NeXTDecode+0x150>
lea    0x1(%r8),%rsi
add    $0xffffffffffffffff,%r13
movzbl (%r8),%ecx
test   %cl,%cl
je     3c0cc <NeXTDecode+0x9c>
cmp    $0x40,%cl
je     3c1a9 <NeXTDecode+0x179>
mov    0x58(%rdi),%edx
mov    0x10(%rdi),%eax
and    $0x400,%eax
test   %eax,%eax
jne    3c21b <NeXTDecode+0x1eb>
mov    %r14,-0x30(%rbp)
mov    %rbx,%rax
jmpq   3c244 <NeXTDecode+0x214>
xor    %ebx,%ebx
xor    %eax,%eax
mov    0x3b8(%rdi),%r8
lea    0x359ea(%rip),%rdx        # 71b3c <module.8+0x4d>
mov    0x27c(%rdi),%ecx
mov    %r8,%rdi
lea    0x3598d(%rip),%rsi        # 71aef <module.8>
callq  8a00 <TIFFErrorExt@plt>
mov    %rbx,%rax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
mov    %r8,0x388(%rdi)
mov    %r13,0x390(%rdi)
mov    $0x1,%eax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
cmp    $0x3,%r13
jle    3c142 <NeXTDecode+0x112>
movzbl (%rsi),%ecx
movzbl 0x2(%r8),%esi
movzbl 0x4(%r8),%edx
movzbl 0x3(%r8),%eax
shl    $0x8,%eax
add    %edx,%eax
movslq %eax,%rdx
lea    0x4(%rdx),%r9
cmp    %r9,%r13
jl     3c142 <NeXTDecode+0x112>
shl    $0x8,%ecx
lea    (%rsi,%rcx,1),%eax
movslq %eax,%rcx
lea    (%rdx,%rcx,1),%rax
cmp    %rax,%r15
jl     3c142 <NeXTDecode+0x112>
lea    (%rcx,%r12,1),%rax
lea    0x5(%r8),%rsi
mov    %rdi,-0x38(%rbp)
mov    %rax,%rdi
mov    %r9,%rbx
mov    %r8,%r12
callq  8790 <_TIFFmemcpy@plt>
sub    %rbx,%r13
lea    0x1(%r12,%rbx,1),%r8
mov    -0x40(%rbp),%r12
mov    -0x38(%rbp),%rdi
jmpq   3c0f2 <NeXTDecode+0xc2>
mov    0x64(%rdi),%edx
mov    %r14,-0x30(%rbp)
mov    %rbx,%rax
jmp    3c244 <NeXTDecode+0x214>
cmp    %rax,%r15
jle    3c29d <NeXTDecode+0x26d>
mov    -0x38(%rbp),%r8
test   %r8,%r8
je     3c140 <NeXTDecode+0x110>
movzbl (%rsi),%ecx
add    $0x1,%rsi
lea    -0x1(%r8),%r13
mov    %r13,-0x38(%rbp)
mov    %rcx,%r14
shr    $0x6,%r14
mov    %r14,%r13
shl    $0x6,%r13d
mov    %r14,%r10
shl    $0x4,%r10d
mov    %r14,%r9
shl    $0x2,%r9d
and    $0x3f,%rcx
mov    -0x40(%rbp),%r11
test   %rcx,%rcx
jle    3c2da <NeXTDecode+0x2aa>
cmp    %edx,%ebx
jae    3c2da <NeXTDecode+0x2aa>
cmp    %rax,%r15
jle    3c2da <NeXTDecode+0x2aa>
lea    0x1(%rbx),%r8d
add    $0xffffffffffffffff,%rcx
and    $0x3,%ebx
cmp    $0x1,%ebx
jbe    3c2f5 <NeXTDecode+0x2c5>
cmp    $0x2,%ebx
je     3c306 <NeXTDecode+0x2d6>
cmp    $0x3,%ebx
je     3c31a <NeXTDecode+0x2ea>
mov    %r8,%rbx
jmp    3c26c <NeXTDecode+0x23c>
xor    %eax,%eax
mov    0x3b8(%rdi),%rbx
lea    0x35871(%rip),%rdx        # 71b1e <module.8+0x2f>
mov    0x27c(%rdi),%ecx
mov    %rbx,%rdi
lea    0x35832(%rip),%rsi        # 71aef <module.8>
callq  8a00 <TIFFErrorExt@plt>
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
xor    %eax,%eax
leaveq 
retq   
cmp    %edx,%ebx
jb     3c227 <NeXTDecode+0x1f7>
mov    %rsi,%r8
mov    %r11,%r12
mov    -0x30(%rbp),%r14
mov    -0x38(%rbp),%r13
jmpq   3c0f2 <NeXTDecode+0xc2>
test   %ebx,%ebx
je     3c336 <NeXTDecode+0x306>
cmp    $0x1,%ebx
je     3c342 <NeXTDecode+0x312>
mov    %r8,%rbx
jmpq   3c26c <NeXTDecode+0x23c>
movzbl (%r12),%ebx
or     %r9b,%bl
mov    %bl,(%r12)
mov    %r8,%rbx
jmpq   3c26c <NeXTDecode+0x23c>
movzbl (%r12),%ebx
or     %r14b,%bl
mov    %bl,(%r12)
add    $0x1,%rax
add    $0x1,%r12
mov    %r8,%rbx
jmpq   3c26c <NeXTDecode+0x23c>
mov    %r13b,(%r12)
mov    %r8,%rbx
jmpq   3c26c <NeXTDecode+0x23c>
movzbl (%r12),%ebx
or     %r10b,%bl
mov    %bl,(%r12)
mov    %r8,%rbx
jmpq   3c26c <NeXTDecode+0x23c>
nopw   %cs:0x0(%rax,%rax,1)

000000000003c360 <NeXTPreDecode>:
push   %rbp
mov    %rsp,%rbp
movzwl 0x74(%rdi),%ecx
cmp    $0x2,%cx
jne    3c375 <NeXTPreDecode+0x15>
mov    $0x1,%eax
leaveq 
retq   
mov    0x3b8(%rdi),%rdi
lea    0x357da(%rip),%rsi        # 71b5d <module.12>
lea    0x357e1(%rip),%rdx        # 71b6b <module.12+0xe>
xor    %eax,%eax
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)
nop

000000000003c3a0 <TIFFInitOJPEG>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
cmp    $0x6,%esi
je     3c3cc <TIFFInitOJPEG+0x2c>
lea    0x359c6(%rip),%rdi        # 71d7a <module.15+0xe>
lea    0x359d9(%rip),%rsi        # 71d94 <module.15+0x28>
mov    $0x1a9,%edx
lea    0x359d9(%rip),%rcx        # 71da0 <module.15+0x34>
callq  8490 <__assert_fail@plt>
lea    0x3d665(%rip),%rsi        # 79a38 <ojpegFields>
mov    $0x7,%edx
mov    %rdi,%rax
mov    %r15,-0x10(%rbp)
mov    %rdi,%r15
mov    %rax,%rdi
callq  8520 <_TIFFMergeFields@plt>
test   %eax,%eax
jne    3c412 <TIFFInitOJPEG+0x72>
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
lea    0x359b0(%rip),%rdx        # 71dae <module.15+0x42>
lea    0x35967(%rip),%rsi        # 71d6c <module.15>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x10(%rbp),%r15
leaveq 
retq   
mov    $0x1680,%edi
callq  8440 <_TIFFmalloc@plt>
test   %rax,%rax
je     3c58c <TIFFInitOJPEG+0x1ec>
mov    %rax,%rdi
mov    %r14,-0x8(%rbp)
mov    %rax,%r14
mov    $0x1680,%edx
xor    %esi,%esi
callq  88e0 <_TIFFmemset@plt>
mov    %r15,(%r14)
movb   $0x1,0x120(%r14)
movb   $0x2,0x124(%r14)
movb   $0x2,0x125(%r14)
xor    %eax,%eax
mov    $0x212,%esi
mov    $0x2,%edx
mov    %rdx,%rcx
mov    %r15,%rdi
callq  8290 <TIFFSetField@plt>
lea    0xbdc(%rip),%rax        # 3d050 <OJPEGFixupTags>
mov    %rax,0x2c0(%r15)
lea    0xbde(%rip),%rax        # 3d060 <OJPEGSetupDecode>
mov    %rax,0x2c8(%r15)
lea    0xc00(%rip),%rax        # 3d090 <OJPEGPreDecode>
mov    %rax,0x2d0(%r15)
lea    0x1512(%rip),%rax        # 3d9b0 <OJPEGPostDecode>
mov    %rax,0x3e8(%r15)
lea    0x1134(%rip),%rax        # 3d5e0 <OJPEGDecode>
mov    %rax,0x2f8(%r15)
mov    %rax,0x308(%r15)
mov    %rax,0x318(%r15)
lea    0x1568(%rip),%rax        # 3da30 <OJPEGSetupEncode>
mov    %rax,0x2d8(%r15)
lea    0x158a(%rip),%rax        # 3da60 <OJPEGPreEncode>
mov    %rax,0x2e8(%r15)
lea    0x15dc(%rip),%rax        # 3dac0 <OJPEGPostEncode>
mov    %rax,0x2f0(%r15)
lea    0x159e(%rip),%rax        # 3da90 <OJPEGEncode>
mov    %rax,0x300(%r15)
mov    %rax,0x310(%r15)
mov    %rax,0x320(%r15)
lea    0x15e2(%rip),%rax        # 3daf0 <OJPEGCleanup>
mov    %rax,0x338(%r15)
mov    %r14,0x350(%r15)
mov    0x410(%r15),%rax
mov    %rax,0xd8(%r14)
lea    0x7f(%rip),%rax        # 3c5b0 <OJPEGVGetField>
mov    %rax,0x410(%r15)
mov    0x408(%r15),%rax
mov    %rax,0xe0(%r14)
lea    0x373(%rip),%rax        # 3c8c0 <OJPEGVSetField>
mov    %rax,0x408(%r15)
mov    0x418(%r15),%rax
mov    %rax,0xe8(%r14)
lea    0x787(%rip),%rax        # 3ccf0 <OJPEGPrintDir>
mov    %rax,0x418(%r15)
mov    0x10(%r15),%eax
or     $0x20000,%eax
mov    %eax,0x10(%r15)
mov    $0x1,%eax
mov    -0x8(%rbp),%r14
mov    -0x10(%rbp),%r15
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
lea    0x3583e(%rip),%rdx        # 71dda <module.15+0x6e>
lea    0x357c9(%rip),%rsi        # 71d6c <module.15>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x10(%rbp),%r15
leaveq 
retq   

000000000003c5b0 <OJPEGVGetField>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    0x350(%rdi),%rcx
lea    -0x200(%rsi),%r8d
cmp    $0x12,%r8d
ja     3c602 <OJPEGVGetField+0x52>
mov    $0x1,%eax
lea    0x355b4(%rip),%r9        # 71b8c <module.12+0x2f>
movslq (%r9,%r8,4),%r8
add    %r9,%r8
jmpq   *%r8
movslq (%rdx),%rdi
cmp    $0x2f,%edi
jle    3c71c <OJPEGVGetField+0x16c>
mov    0x8(%rdx),%rdi
lea    0x8(%rdi),%rsi
mov    %rsi,0x8(%rdx)
mov    (%rdi),%rsi
jmpq   3c729 <OJPEGVGetField+0x179>
callq  *0xd8(%rcx)
leaveq 
retq   
movslq (%rdx),%rdi
cmp    $0x2f,%edi
jle    3c735 <OJPEGVGetField+0x185>
mov    0x8(%rdx),%rdi
lea    0x8(%rdi),%rsi
mov    %rsi,0x8(%rdx)
mov    (%rdi),%rsi
jmpq   3c742 <OJPEGVGetField+0x192>
movslq (%rdx),%rdi
cmp    $0x2f,%edi
jle    3c74e <OJPEGVGetField+0x19e>
mov    0x8(%rdx),%rdi
lea    0x8(%rdi),%rsi
mov    %rsi,0x8(%rdx)
mov    (%rdi),%rsi
jmpq   3c75b <OJPEGVGetField+0x1ab>
movzbl 0x122(%rcx),%esi
test   %sil,%sil
jne    3c67c <OJPEGVGetField+0xcc>
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rdx,%r14
mov    %rcx,%r15
callq  3dcd0 <OJPEGSubsamplingCorrect>
mov    %r15,%rcx
mov    %r14,%rdx
mov    $0x1,%eax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
movslq (%rdx),%rdi
cmp    $0x2f,%edi
jle    3c767 <OJPEGVGetField+0x1b7>
mov    0x8(%rdx),%rdi
lea    0x8(%rdi),%rsi
mov    %rsi,0x8(%rdx)
mov    (%rdi),%rsi
jmpq   3c774 <OJPEGVGetField+0x1c4>
movslq (%rdx),%rdi
cmp    $0x2f,%edi
jle    3c79e <OJPEGVGetField+0x1ee>
mov    0x8(%rdx),%rdi
lea    0x8(%rdi),%rsi
mov    %rsi,0x8(%rdx)
mov    (%rdi),%rsi
jmpq   3c7ab <OJPEGVGetField+0x1fb>
movslq (%rdx),%rdi
cmp    $0x2f,%edi
jle    3c7d4 <OJPEGVGetField+0x224>
mov    0x8(%rdx),%rdi
lea    0x8(%rdi),%rsi
mov    %rsi,0x8(%rdx)
mov    (%rdi),%rsi
jmpq   3c7e1 <OJPEGVGetField+0x231>
movslq (%rdx),%rdi
cmp    $0x2f,%edi
jle    3c80a <OJPEGVGetField+0x25a>
mov    0x8(%rdx),%rdi
lea    0x8(%rdi),%rsi
mov    %rsi,0x8(%rdx)
mov    (%rdi),%rsi
jmpq   3c817 <OJPEGVGetField+0x267>
movslq (%rdx),%rdi
cmp    $0x2f,%edi
jle    3c839 <OJPEGVGetField+0x289>
mov    0x8(%rdx),%rdi
lea    0x8(%rdi),%rsi
mov    %rsi,0x8(%rdx)
mov    (%rdi),%rsi
jmpq   3c846 <OJPEGVGetField+0x296>
mov    0x10(%rdx),%rsi
mov    (%rsi,%rdi,1),%rsi
add    $0x8,%edi
mov    %edi,(%rdx)
movzwl 0x1d8(%rcx),%ecx
mov    %cx,(%rsi)
leaveq 
retq   
mov    0x10(%rdx),%rsi
mov    (%rsi,%rdi,1),%rsi
add    $0x8,%edi
mov    %edi,(%rdx)
mov    0x110(%rcx),%rcx
mov    %rcx,(%rsi)
leaveq 
retq   
mov    0x10(%rdx),%rsi
mov    (%rsi,%rdi,1),%rsi
add    $0x8,%edi
mov    %edi,(%rdx)
mov    0x118(%rcx),%rcx
mov    %rcx,(%rsi)
leaveq 
retq   
mov    0x10(%rdx),%rsi
mov    (%rsi,%rdi,1),%rsi
add    $0x8,%edi
mov    %edi,(%rdx)
movzbl 0x124(%rcx),%edi
mov    %di,(%rsi)
movslq (%rdx),%rdi
cmp    $0x2f,%edi
jle    3c852 <OJPEGVGetField+0x2a2>
mov    0x8(%rdx),%rdi
lea    0x8(%rdi),%rsi
mov    %rsi,0x8(%rdx)
mov    (%rdi),%rsi
jmpq   3c85f <OJPEGVGetField+0x2af>
mov    0x10(%rdx),%rsi
mov    (%rsi,%rdi,1),%rsi
add    $0x8,%edi
mov    %edi,(%rdx)
movzbl 0x127(%rcx),%edi
mov    %edi,(%rsi)
movslq (%rdx),%rdi
cmp    $0x2f,%edi
jle    3c86b <OJPEGVGetField+0x2bb>
mov    0x8(%rdx),%rdi
lea    0x8(%rdi),%rsi
mov    %rsi,0x8(%rdx)
mov    (%rdi),%rsi
jmpq   3c878 <OJPEGVGetField+0x2c8>
mov    0x10(%rdx),%rsi
mov    (%rsi,%rdi,1),%rsi
add    $0x8,%edi
mov    %edi,(%rdx)
movzbl 0x128(%rcx),%edi
mov    %edi,(%rsi)
movslq (%rdx),%rdi
cmp    $0x2f,%edi
jle    3c884 <OJPEGVGetField+0x2d4>
mov    0x8(%rdx),%rdi
lea    0x8(%rdi),%rsi
mov    %rsi,0x8(%rdx)
mov    (%rdi),%rsi
jmpq   3c891 <OJPEGVGetField+0x2e1>
mov    0x10(%rdx),%rsi
mov    (%rsi,%rdi,1),%rsi
add    $0x8,%edi
mov    %edi,(%rdx)
movzbl 0x129(%rcx),%edi
mov    %edi,(%rsi)
movslq (%rdx),%rdi
cmp    $0x2f,%edi
jle    3c89d <OJPEGVGetField+0x2ed>
mov    0x8(%rdx),%rdi
lea    0x8(%rdi),%rsi
mov    %rsi,0x8(%rdx)
mov    (%rdi),%rsi
jmp    3c8aa <OJPEGVGetField+0x2fa>
mov    0x10(%rdx),%rsi
mov    (%rsi,%rdi,1),%rsi
add    $0x8,%edi
mov    %edi,(%rdx)
movzbl 0x120(%rcx),%ecx
mov    %cx,(%rsi)
leaveq 
retq   
mov    0x10(%rdx),%rsi
mov    (%rsi,%rdi,1),%rsi
add    $0x8,%edi
mov    %edi,(%rdx)
movzbl 0x125(%rcx),%ecx
mov    %cx,(%rsi)
leaveq 
retq   
mov    0x10(%rdx),%rsi
mov    (%rsi,%rdi,1),%rsi
add    $0x8,%edi
mov    %edi,(%rdx)
add    $0x130,%rcx
mov    %rcx,(%rsi)
leaveq 
retq   
mov    0x10(%rdx),%rsi
mov    (%rsi,%rdi,1),%rsi
add    $0x8,%edi
mov    %edi,(%rdx)
add    $0x148,%rcx
mov    %rcx,(%rsi)
leaveq 
retq   
mov    0x10(%rdx),%rsi
mov    (%rsi,%rdi,1),%rsi
add    $0x8,%edi
mov    %edi,(%rdx)
add    $0x160,%rcx
mov    %rcx,(%rsi)
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)

000000000003c8c0 <OJPEGVSetField>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    0x350(%rdi),%rax
lea    -0x200(%rsi),%r8d
cmp    $0x12,%r8d
ja     3c917 <OJPEGVSetField+0x57>
lea    0x3558b(%rip),%r10        # 71e6e <module.28>
xor    %ecx,%ecx
lea    0x352ec(%rip),%r9        # 71bd8 <module.12+0x7b>
movslq (%r9,%r8,4),%r8
add    %r9,%r8
jmpq   *%r8
movslq (%rdx),%r8
cmp    $0x2f,%r8d
jle    3ca0d <OJPEGVSetField+0x14d>
mov    0x8(%rdx),%r8
lea    0x8(%r8),%rcx
mov    %rcx,0x8(%rdx)
mov    (%r8),%rcx
jmpq   3ca1c <OJPEGVSetField+0x15c>
callq  *0xe0(%rax)
leaveq 
retq   
movslq (%rdx),%r8
cmp    $0x2f,%r8d
jle    3ca3f <OJPEGVSetField+0x17f>
mov    0x8(%rdx),%r8
lea    0x8(%r8),%rcx
mov    %rcx,0x8(%rdx)
mov    (%r8),%rcx
jmpq   3ca4e <OJPEGVSetField+0x18e>
movb   $0x1,0x123(%rax)
movslq (%rdx),%r8
cmp    $0x2f,%r8d
jle    3ca57 <OJPEGVSetField+0x197>
mov    0x8(%rdx),%r8
lea    0x8(%r8),%rcx
mov    %rcx,0x8(%rdx)
movslq (%r8),%rcx
jmpq   3ca66 <OJPEGVSetField+0x1a6>
movslq (%rdx),%r9
cmp    $0x2f,%r9d
jle    3ca8d <OJPEGVSetField+0x1cd>
mov    0x8(%rdx),%r9
lea    0x8(%r9),%r8
mov    %r8,0x8(%rdx)
mov    (%r9),%r8d
jmpq   3ca9c <OJPEGVSetField+0x1dc>
movslq (%rdx),%r9
cmp    $0x2f,%r9d
jle    3cad3 <OJPEGVSetField+0x213>
mov    0x8(%rdx),%r9
lea    0x8(%r9),%r8
mov    %r8,0x8(%rdx)
mov    (%r9),%r8d
jmpq   3cae2 <OJPEGVSetField+0x222>
movslq (%rdx),%r9
cmp    $0x2f,%r9d
jle    3cb1d <OJPEGVSetField+0x25d>
mov    0x8(%rdx),%r9
lea    0x8(%r9),%r8
mov    %r8,0x8(%rdx)
mov    (%r9),%r8d
jmpq   3cb2c <OJPEGVSetField+0x26c>
movslq (%rdx),%r8
cmp    $0x2f,%r8d
jle    3cb67 <OJPEGVSetField+0x2a7>
mov    0x8(%rdx),%r8
lea    0x8(%r8),%rcx
mov    %rcx,0x8(%rdx)
movslq (%r8),%rcx
jmpq   3cb76 <OJPEGVSetField+0x2b6>
movslq (%rdx),%r8
cmp    $0x2f,%r8d
jle    3cb81 <OJPEGVSetField+0x2c1>
mov    0x8(%rdx),%r8
lea    0x8(%r8),%rcx
mov    %rcx,0x8(%rdx)
movslq (%r8),%rcx
jmpq   3cb90 <OJPEGVSetField+0x2d0>
mov    0x10(%rdx),%rcx
mov    (%rcx,%r8,1),%rcx
add    $0x8,%r8d
mov    %r8d,(%rdx)
mov    %rcx,0x110(%rax)
mov    %rdi,%rax
mov    %rdi,-0x8(%rbp)
mov    %rax,%rdi
callq  8ae0 <TIFFFieldWithTag@plt>
test   %rax,%rax
jne    3cb9c <OJPEGVSetField+0x2dc>
xor    %eax,%eax
leaveq 
retq   
mov    0x10(%rdx),%rcx
mov    (%rcx,%r8,1),%rcx
add    $0x8,%r8d
mov    %r8d,(%rdx)
mov    %rcx,0x118(%rax)
jmp    3ca23 <OJPEGVSetField+0x163>
mov    0x10(%rdx),%rcx
movslq (%rcx,%r8,1),%rcx
add    $0x8,%r8d
mov    %r8d,(%rdx)
mov    %cl,0x124(%rax)
movslq (%rdx),%r8
cmp    $0x2f,%r8d
jle    3cbd3 <OJPEGVSetField+0x313>
mov    0x8(%rdx),%r8
lea    0x8(%r8),%rcx
mov    %rcx,0x8(%rdx)
movslq (%r8),%rcx
jmpq   3cbe2 <OJPEGVSetField+0x322>
mov    0x10(%rdx),%r8
mov    (%r8,%r9,1),%r8d
add    $0x8,%r9d
mov    %r9d,(%rdx)
test   %r8d,%r8d
je     3ca23 <OJPEGVSetField+0x163>
cmp    $0x3,%r8d
ja     3cc09 <OJPEGVSetField+0x349>
mov    %r8b,0x127(%rax)
movslq (%rdx),%r10
cmp    $0x2f,%r10d
jle    3cc25 <OJPEGVSetField+0x365>
mov    0x8(%rdx),%r10
lea    0x8(%r10),%r9
mov    %r9,0x8(%rdx)
mov    (%r10),%r9
jmpq   3cc34 <OJPEGVSetField+0x374>
mov    0x10(%rdx),%r8
mov    (%r8,%r9,1),%r8d
add    $0x8,%r9d
mov    %r9d,(%rdx)
test   %r8d,%r8d
je     3ca23 <OJPEGVSetField+0x163>
cmp    $0x3,%r8d
ja     3cc36 <OJPEGVSetField+0x376>
mov    %r8b,0x128(%rax)
movslq (%rdx),%r10
cmp    $0x2f,%r10d
jle    3cc52 <OJPEGVSetField+0x392>
mov    0x8(%rdx),%r10
lea    0x8(%r10),%r9
mov    %r9,0x8(%rdx)
mov    (%r10),%r9
jmpq   3cc61 <OJPEGVSetField+0x3a1>
mov    0x10(%rdx),%r8
mov    (%r8,%r9,1),%r8d
add    $0x8,%r9d
mov    %r9d,(%rdx)
test   %r8d,%r8d
je     3ca23 <OJPEGVSetField+0x163>
cmp    $0x3,%r8d
ja     3cc63 <OJPEGVSetField+0x3a3>
mov    %r8b,0x129(%rax)
movslq (%rdx),%r10
cmp    $0x2f,%r10d
jle    3cc7f <OJPEGVSetField+0x3bf>
mov    0x8(%rdx),%r10
lea    0x8(%r10),%r9
mov    %r9,0x8(%rdx)
mov    (%r10),%r9
jmpq   3cc8e <OJPEGVSetField+0x3ce>
mov    0x10(%rdx),%rcx
movslq (%rcx,%r8,1),%rcx
add    $0x8,%r8d
mov    %r8d,(%rdx)
mov    %cl,0x120(%rax)
jmpq   3ca23 <OJPEGVSetField+0x163>
mov    0x10(%rdx),%rcx
movslq (%rcx,%r8,1),%rcx
add    $0x8,%r8d
mov    %r8d,(%rdx)
mov    %cx,0x1d8(%rax)
jmpq   3ca23 <OJPEGVSetField+0x163>
mov    $0x1,%esi
movzwl 0x18(%rax),%edx
mov    %rsi,%rax
mov    %rdx,%rcx
and    $0x1f,%ecx
mov    %rax,%rsi
shl    %cl,%rsi
shr    $0x5,%edx
movslq %edx,%rcx
mov    -0x8(%rbp),%rdx
or     0x38(%rdx,%rcx,8),%rsi
mov    %rsi,0x38(%rdx,%rcx,8)
mov    0x10(%rdx),%ecx
or     $0x8,%ecx
mov    %ecx,0x10(%rdx)
leaveq 
retq   
mov    0x10(%rdx),%rcx
movslq (%rcx,%r8,1),%rcx
add    $0x8,%r8d
mov    %r8d,(%rdx)
mov    %cl,0x125(%rax)
movzbl 0x124(%rax),%ecx
mov    %cx,0x108(%rdi)
movzbl 0x125(%rax),%eax
mov    %ax,0x10a(%rdi)
jmpq   3ca23 <OJPEGVSetField+0x163>
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
mov    %r10,%rsi
lea    0x35261(%rip),%rdx        # 71e7d <module.28+0xf>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
mov    0x10(%rdx),%r9
mov    (%r9,%r10,1),%r9
add    $0x8,%r10d
mov    %r10d,(%rdx)
jmp    3cca2 <OJPEGVSetField+0x3e2>
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
mov    %r10,%rsi
lea    0x35258(%rip),%rdx        # 71ea1 <module.28+0x33>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
mov    0x10(%rdx),%r9
mov    (%r9,%r10,1),%r9
add    $0x8,%r10d
mov    %r10d,(%rdx)
jmp    3ccbe <OJPEGVSetField+0x3fe>
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
mov    %r10,%rsi
lea    0x35250(%rip),%rdx        # 71ec6 <module.28+0x58>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
mov    0x10(%rdx),%r9
mov    (%r9,%r10,1),%r9
add    $0x8,%r10d
mov    %r10d,(%rdx)
jmp    3ccd9 <OJPEGVSetField+0x419>
mov    %ecx,%r10d
mov    (%r9,%r10,8),%rdx
mov    %rdx,0x130(%rax,%r10,8)
add    $0x1,%ecx
cmp    %r8d,%ecx
jb     3cc90 <OJPEGVSetField+0x3d0>
jmpq   3ca23 <OJPEGVSetField+0x163>
mov    %ecx,%r10d
mov    (%r9,%r10,8),%rdx
mov    %rdx,0x148(%rax,%r10,8)
add    $0x1,%ecx
cmp    %r8d,%ecx
jb     3ccac <OJPEGVSetField+0x3ec>
jmpq   3ca23 <OJPEGVSetField+0x163>
mov    %ecx,%edx
mov    (%r9,%rdx,8),%r10
mov    %r10,0x160(%rax,%rdx,8)
add    $0x1,%ecx
cmp    %r8d,%ecx
jb     3ccc8 <OJPEGVSetField+0x408>
jmpq   3ca23 <OJPEGVSetField+0x163>
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

000000000003ccf0 <OJPEGPrintDir>:
push   %rbp
mov    %rsp,%rbp
sub    $0x40,%rsp
mov    %r13,-0x28(%rbp)
mov    %r14,-0x30(%rbp)
mov    %r15,-0x38(%rbp)
mov    %rdx,-0x8(%rbp)
mov    0x350(%rdi),%r8
test   %r8,%r8
jne    3cd33 <OJPEGPrintDir+0x43>
lea    0x351d0(%rip),%rdi        # 71eeb <module.28+0x7d>
lea    0x35072(%rip),%rsi        # 71d94 <module.15+0x28>
mov    $0x269,%edx
lea    0x351c6(%rip),%rcx        # 71ef4 <module.28+0x86>
callq  8490 <__assert_fail@plt>
mov    0x48(%rdi),%rax
and    $0x4,%rax
test   %rax,%rax
jne    3cd5a <OJPEGPrintDir+0x6a>
mov    %r15,%rax
mov    %rbx,%rcx
mov    %rsi,%rbx
mov    %r14,%r9
mov    %r13,%r10
mov    %r8,%r13
mov    %r12,%r8
mov    %rdi,%r12
jmp    3cd97 <OJPEGPrintDir+0xa7>
mov    %r8,%r13
mov    %r12,%r14
mov    %rdi,%r12
mov    %rbx,%r15
mov    %rsi,%rbx
xor    %eax,%eax
lea    0x35190(%rip),%rsi        # 71f02 <module.28+0x94>
mov    0x110(%r13),%rdx
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
mov    %r15,%rcx
mov    %r14,%r8
mov    -0x8(%rbp),%rdx
mov    -0x38(%rbp),%rax
mov    -0x30(%rbp),%r9
mov    -0x28(%rbp),%r10
mov    0x48(%r12),%rsi
and    $0x8,%rsi
test   %rsi,%rsi
je     3cdd9 <OJPEGPrintDir+0xe9>
mov    %rcx,%r14
mov    %r8,%r15
xor    %eax,%eax
lea    0x3516c(%rip),%rsi        # 71f20 <module.28+0xb2>
mov    0x118(%r13),%rdx
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
mov    %r14,%rcx
mov    %r15,%r8
mov    -0x8(%rbp),%rdx
mov    -0x38(%rbp),%rax
mov    -0x30(%rbp),%r9
mov    -0x28(%rbp),%r10
lea    0x35173(%rip),%r14        # 71f53 <module.28+0xe5>
xor    %r15d,%r15d
mov    0x48(%r12),%rsi
and    $0x10,%rsi
test   %rsi,%rsi
jne    3ce1e <OJPEGPrintDir+0x12e>
mov    0x48(%r12),%rsi
and    $0x20,%rsi
test   %rsi,%rsi
je     3ce92 <OJPEGPrintDir+0x1a2>
xor    %eax,%eax
lea    0x3514e(%rip),%rsi        # 71f5a <module.28+0xec>
mov    %rbx,%rdi
mov    %rcx,-0x10(%rbp)
mov    %r8,-0x20(%rbp)
callq  86f0 <fprintf@plt>
jmp    3ce59 <OJPEGPrintDir+0x169>
xor    %eax,%eax
lea    0x3511d(%rip),%rsi        # 71f44 <module.28+0xd6>
mov    %rbx,%rdi
mov    %rcx,-0x18(%rbp)
mov    %r8,-0x20(%rbp)
callq  86f0 <fprintf@plt>
jmpq   3cedc <OJPEGPrintDir+0x1ec>
movzbl %r15b,%eax
mov    0x148(%r13,%rax,8),%rdx
xor    %eax,%eax
mov    %rbx,%rdi
mov    %r14,%rsi
callq  86f0 <fprintf@plt>
add    $0x1,%r15d
movzbl 0x128(%r13),%eax
cmp    %r15b,%al
ja     3ce3c <OJPEGPrintDir+0x14c>
xor    %eax,%eax
mov    %rbx,%rdi
lea    0x350e6(%rip),%rsi        # 71f58 <module.28+0xea>
callq  86f0 <fprintf@plt>
xor    %r15d,%r15d
mov    -0x20(%rbp),%r8
mov    -0x10(%rbp),%rcx
mov    -0x8(%rbp),%rdx
mov    -0x38(%rbp),%rax
mov    -0x30(%rbp),%r9
mov    -0x28(%rbp),%r10
mov    0x48(%r12),%rsi
and    $0x40,%rsi
test   %rsi,%rsi
je     3cf6d <OJPEGPrintDir+0x27d>
xor    %eax,%eax
lea    0x350bd(%rip),%rsi        # 71f6a <module.28+0xfc>
mov    %rbx,%rdi
mov    %rcx,-0x10(%rbp)
mov    %r8,-0x18(%rbp)
callq  86f0 <fprintf@plt>
jmp    3cf37 <OJPEGPrintDir+0x247>
movzbl %r15b,%eax
mov    0x130(%r13,%rax,8),%rdx
xor    %eax,%eax
mov    %rbx,%rdi
mov    %r14,%rsi
callq  86f0 <fprintf@plt>
add    $0x1,%r15d
movzbl 0x127(%r13),%eax
cmp    %r15b,%al
ja     3cebf <OJPEGPrintDir+0x1cf>
xor    %eax,%eax
mov    %rbx,%rdi
lea    0x35063(%rip),%rsi        # 71f58 <module.28+0xea>
callq  86f0 <fprintf@plt>
xor    %r15d,%r15d
mov    -0x20(%rbp),%r8
mov    -0x18(%rbp),%rcx
mov    -0x8(%rbp),%rdx
mov    -0x38(%rbp),%rax
mov    -0x30(%rbp),%r9
mov    -0x28(%rbp),%r10
jmpq   3cdf1 <OJPEGPrintDir+0x101>
movzbl %r15b,%eax
mov    0x160(%r13,%rax,8),%rdx
xor    %eax,%eax
mov    %rbx,%rdi
mov    %r14,%rsi
callq  86f0 <fprintf@plt>
add    $0x1,%r15d
movzbl 0x129(%r13),%eax
cmp    %r15b,%al
ja     3cf1a <OJPEGPrintDir+0x22a>
xor    %eax,%eax
mov    %rbx,%rdi
lea    0x35008(%rip),%rsi        # 71f58 <module.28+0xea>
callq  86f0 <fprintf@plt>
mov    -0x18(%rbp),%r8
mov    -0x10(%rbp),%rcx
mov    -0x8(%rbp),%rdx
mov    -0x38(%rbp),%rax
mov    -0x30(%rbp),%r9
mov    -0x28(%rbp),%r10
mov    0x48(%r12),%rsi
and    $0x80,%rsi
test   %rsi,%rsi
je     3cfb3 <OJPEGPrintDir+0x2c3>
mov    %r8,%r14
mov    %rcx,%r15
xor    %eax,%eax
lea    0x34fed(%rip),%rsi        # 71f7a <module.28+0x10c>
movzbl 0x120(%r13),%edx
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
mov    %r15,%rcx
mov    %r14,%r8
mov    -0x8(%rbp),%rdx
mov    -0x38(%rbp),%rax
mov    -0x30(%rbp),%r9
mov    -0x28(%rbp),%r10
mov    0x48(%r12),%rsi
and    $0x100,%rsi
test   %rsi,%rsi
je     3d00d <OJPEGPrintDir+0x31d>
xor    %eax,%eax
lea    0x34fbd(%rip),%rsi        # 71f8a <module.28+0x11c>
movzwl 0x1d8(%r13),%edx
mov    %rbx,%rdi
mov    %r12,-0x28(%rbp)
mov    %rbx,-0x30(%rbp)
mov    %r10,%rbx
mov    %r8,%r12
mov    %r9,%r14
mov    %rcx,%r15
callq  86f0 <fprintf@plt>
mov    %r15,%rcx
mov    %r12,%r8
mov    %r14,%r9
mov    %rbx,%r10
mov    -0x30(%rbp),%rbx
mov    -0x28(%rbp),%r12
mov    -0x8(%rbp),%rdx
mov    -0x38(%rbp),%rax
mov    0xe8(%r13),%r11
test   %r11,%r11
jne    3d02a <OJPEGPrintDir+0x33a>
mov    %rcx,%rbx
mov    %r8,%r12
mov    %r10,%r13
mov    %r9,%r14
mov    %rax,%r15
leaveq 
retq   
mov    %rbx,%rsi
mov    %rcx,%rbx
mov    %r12,%rdi
mov    %r8,%r12
mov    %r10,%r13
mov    %r9,%r14
mov    %rax,%r15
callq  *%r11
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nop

000000000003d050 <OJPEGFixupTags>:
push   %rbp
mov    %rsp,%rbp
mov    $0x1,%eax
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

000000000003d060 <OJPEGSetupDecode>:
push   %rbp
mov    %rsp,%rbp
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
lea    0x34f31(%rip),%rsi        # 71fa5 <module.43>
lea    0x34f3b(%rip),%rdx        # 71fb6 <module.43+0x11>
callq  85a0 <TIFFWarningExt@plt>
mov    $0x1,%eax
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

000000000003d090 <OJPEGPreDecode>:
push   %rbp
mov    %rsp,%rbp
sub    $0x40,%rsp
mov    %r13,-0x8(%rbp)
mov    %r14,-0x10(%rbp)
mov    %r15,-0x18(%rbp)
mov    %rdi,-0x28(%rbp)
mov    0x350(%rdi),%rax
mov    %rax,-0x30(%rbp)
movzbl 0x122(%rax),%ecx
test   %cl,%cl
je     3d0cc <OJPEGPreDecode+0x3c>
mov    %r14,%rcx
mov    %rax,%r14
mov    %r13,%rdx
mov    %rdi,%r13
jmp    3d0e9 <OJPEGPreDecode+0x59>
mov    %rax,%r14
mov    %rsi,%r15
mov    %rdi,%r13
callq  3dcd0 <OJPEGSubsamplingCorrect>
mov    %r15,%rsi
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%rcx
mov    -0x8(%rbp),%rdx
movzbl 0x258(%r14),%eax
test   %al,%al
jne    3d11d <OJPEGPreDecode+0x8d>
mov    %rsi,-0x38(%rbp)
mov    %r13,%rdi
mov    %rdx,%r13
mov    %rcx,%r14
callq  3df70 <OJPEGReadHeaderInfo>
test   %eax,%eax
je     3d14c <OJPEGPreDecode+0xbc>
mov    %r14,%rcx
mov    %r13,%rdx
mov    -0x28(%rbp),%r13
mov    -0x30(%rbp),%r14
mov    -0x38(%rbp),%rsi
movzwl %si,%eax
shl    $0x5,%rax
movzbl 0x1f8(%r14,%rax,1),%edi
test   %dil,%dil
je     3d150 <OJPEGPreDecode+0xc0>
mov    %r15,%r8
mov    0x10(%r13),%edi
and    $0x400,%edi
test   %edi,%edi
jne    3d18f <OJPEGPreDecode+0xff>
mov    0x284(%r13),%r15d
jmp    3d196 <OJPEGPreDecode+0x106>
xor    %eax,%eax
leaveq 
retq   
mov    %rsi,%rdi
mov    %rsi,-0x38(%rbp)
mov    %rax,-0x20(%rbp)
mov    %rdi,%rsi
mov    %r13,%rdi
mov    %rdx,%r13
mov    %rcx,%r14
callq  3e1a0 <OJPEGReadSecondarySos>
test   %eax,%eax
je     3d2dc <OJPEGPreDecode+0x24c>
mov    %r14,%rcx
mov    %r13,%rdx
mov    %r15,%r8
mov    -0x20(%rbp),%rax
mov    -0x28(%rbp),%r13
mov    -0x30(%rbp),%r14
mov    -0x38(%rbp),%rsi
jmp    3d135 <OJPEGPreDecode+0xa5>
mov    0x2ac(%r13),%r15d
movzbl 0x259(%r14),%edi
test   %dil,%dil
je     3d1fe <OJPEGPreDecode+0x16e>
movzwl 0x25a(%r14),%edi
cmp    %di,%si
jne    3d1b9 <OJPEGPreDecode+0x129>
cmp    0x25c(%r14),%r15d
jae    3d1fe <OJPEGPreDecode+0x16e>
movzbl 0x260(%r14),%edi
test   %dil,%dil
je     3d1f6 <OJPEGPreDecode+0x166>
mov    %r13,%rdi
mov    %rbx,-0x20(%rbp)
mov    %r12,-0x38(%rbp)
mov    %rax,%rbx
mov    %rsi,%r12
callq  3e920 <OJPEGLibjpegSessionAbort>
mov    %rbx,%rax
mov    %r12,%rsi
mov    -0x38(%rbp),%r12
mov    -0x20(%rbp),%rbx
mov    -0x18(%rbp),%r8
mov    -0x10(%rbp),%rcx
mov    -0x8(%rbp),%rdx
movb   $0x0,0x259(%r14)
movzbl 0x259(%r14),%edi
test   %dil,%dil
jne    3d309 <OJPEGPreDecode+0x279>
mov    %sil,0x10d(%r14)
mov    %si,0x25a(%r14)
movzwl %si,%esi
imul   0xe0(%r13),%esi
mov    %esi,0x25c(%r14)
movzbl 0x650(%r14),%esi
test   %sil,%sil
je     3d25c <OJPEGPreDecode+0x1cc>
mov    0x208(%r14,%rax,1),%r9
mov    0x648(%r14),%rsi
movzwl 0x660(%r14),%edi
sub    %rdi,%rsi
cmp    %rsi,%r9
je     3d2b5 <OJPEGPreDecode+0x225>
mov    0x1fc(%r14,%rax,1),%esi
mov    %esi,0x638(%r14)
mov    0x200(%r14,%rax,1),%esi
mov    %esi,0x63c(%r14)
mov    0x208(%r14,%rax,1),%rsi
mov    %rsi,0x648(%r14)
movb   $0x0,0x650(%r14)
mov    0x210(%r14,%rax,1),%rax
mov    %rax,0x658(%r14)
movw   $0x0,0x660(%r14)
movq   $0x0,0x668(%r14)
mov    %r15,-0x38(%rbp)
mov    %r13,%rdi
mov    %rdx,%r13
mov    %rcx,%r14
mov    %r8,%r15
callq  3e450 <OJPEGWriteHeaderInfo>
test   %eax,%eax
je     3d32d <OJPEGPreDecode+0x29d>
mov    -0x38(%rbp),%r15
mov    -0x28(%rbp),%r13
mov    -0x30(%rbp),%r14
jmp    3d309 <OJPEGPreDecode+0x279>
xor    %eax,%eax
leaveq 
retq   
movzbl 0x261(%r14),%eax
test   %al,%al
je     3d331 <OJPEGPreDecode+0x2a1>
mov    %r13,%rdi
callq  3d4d0 <OJPEGPreDecodeSkipScanlines>
test   %eax,%eax
je     3d34d <OJPEGPreDecode+0x2bd>
mov    0x25c(%r14),%eax
add    $0x1,%eax
mov    %eax,0x25c(%r14)
cmp    0x25c(%r14),%r15d
ja     3d2e0 <OJPEGPreDecode+0x250>
movl   $0x1,0x8(%r14)
mov    $0x1,%eax
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
leaveq 
retq   
xor    %eax,%eax
leaveq 
retq   
mov    %r13,%rdi
callq  3d360 <OJPEGPreDecodeSkipRaw>
test   %eax,%eax
jne    3d2f8 <OJPEGPreDecode+0x268>
xor    %eax,%eax
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
leaveq 
retq   
xor    %eax,%eax
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
leaveq 
retq   
nopl   (%rax)

000000000003d360 <OJPEGPreDecodeSkipRaw>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    0x350(%rdi),%r8
mov    0x634(%r8),%r9d
mov    $0x1,%eax
lea    0x310(%r8),%rdi
mov    0x62c(%r8),%ecx
test   %ecx,%ecx
jne    3d3ae <OJPEGPreDecodeSkipRaw+0x4e>
mov    %r12,-0x8(%rbp)
mov    %r13,-0x10(%rbp)
mov    %r14,-0x18(%rbp)
mov    %r15,-0x20(%rbp)
mov    %rbx,%r12
mov    %r9,%rbx
mov    %rax,%r13
mov    %r8,%r14
mov    %rdi,%r15
jmp    3d41e <OJPEGPreDecodeSkipRaw+0xbe>
mov    0x5e8(%r8),%esi
mov    %rsi,%rdx
sub    %ecx,%edx
cmp    %r9d,%edx
jae    3d445 <OJPEGPreDecodeSkipRaw+0xe5>
movl   $0x0,0x62c(%r8)
sub    %esi,%ecx
add    %r9d,%ecx
mov    %r12,-0x8(%rbp)
mov    %r13,-0x10(%rbp)
mov    %r14,-0x18(%rbp)
mov    %r15,-0x20(%rbp)
mov    %rbx,%r12
mov    %rcx,%rbx
mov    %rax,%r13
mov    %r8,%r14
mov    %rdi,%r15
jmp    3d41e <OJPEGPreDecodeSkipRaw+0xbe>
mov    0x620(%r14),%rdx
movzbl 0x125(%r14),%ecx
shl    $0x3,%ecx
mov    %r14,%rdi
mov    %r15,%rsi
callq  41450 <jpeg_read_raw_data_encap>
test   %eax,%eax
je     3d455 <OJPEGPreDecodeSkipRaw+0xf5>
mov    0x5e8(%r14),%eax
sub    %eax,%ebx
mov    0x5e8(%r14),%eax
cmp    %ebx,%eax
jbe    3d3f4 <OJPEGPreDecodeSkipRaw+0x94>
test   %ebx,%ebx
jne    3d46c <OJPEGPreDecodeSkipRaw+0x10c>
mov    %r13,%rax
mov    %r12,%rbx
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
leaveq 
retq   
add    %r9d,%ecx
mov    %ecx,0x62c(%r8)
cmp    %ecx,%esi
je     3d4a4 <OJPEGPreDecodeSkipRaw+0x144>
leaveq 
retq   
mov    %r12,%rbx
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
xor    %eax,%eax
leaveq 
retq   
mov    0x620(%r14),%rdx
movzbl 0x125(%r14),%ecx
shl    $0x3,%ecx
mov    %r15,%rsi
mov    %r14,%rdi
callq  41450 <jpeg_read_raw_data_encap>
test   %eax,%eax
jne    3d4b1 <OJPEGPreDecodeSkipRaw+0x151>
mov    %r12,%rbx
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
xor    %eax,%eax
leaveq 
retq   
movl   $0x0,0x62c(%r8)
leaveq 
retq   
mov    %ebx,0x62c(%r14)
mov    %r13,%rax
mov    %r12,%rbx
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
leaveq 
retq   

000000000003d4d0 <OJPEGPreDecodeSkipScanlines>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
xor    %ecx,%ecx
mov    0x350(%rdi),%r13
lea    0x310(%r13),%r14
lea    0x1678(%r13),%rdx
mov    $0x1,%r15d
mov    0x1678(%r13),%rax
test   %rax,%rax
je     3d51d <OJPEGPreDecodeSkipScanlines+0x4d>
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %rcx,%rbx
mov    %rdx,%r12
jmp    3d56d <OJPEGPreDecodeSkipScanlines+0x9d>
mov    0x630(%r13),%eax
mov    %rdx,-0x30(%rbp)
mov    %rdi,%r15
mov    %rax,%rdi
callq  8440 <_TIFFmalloc@plt>
mov    %rax,0x1678(%r13)
test   %rax,%rax
je     3d591 <OJPEGPreDecodeSkipScanlines+0xc1>
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    $0x1,%r15d
xor    %ebx,%ebx
mov    -0x30(%rbp),%r12
jmp    3d56d <OJPEGPreDecodeSkipScanlines+0x9d>
mov    %r13,%rdi
mov    %r14,%rsi
mov    %r12,%rdx
mov    %r15,%rcx
callq  41410 <jpeg_read_scanlines_encap>
test   %eax,%eax
je     3d5bd <OJPEGPreDecodeSkipScanlines+0xed>
add    $0x1,%ebx
mov    0x634(%r13),%eax
cmp    %ebx,%eax
ja     3d555 <OJPEGPreDecodeSkipScanlines+0x85>
mov    %r15,%rax
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
lea    0x34aa5(%rip),%rsi        # 72046 <module.45>
lea    0x34aba(%rip),%rdx        # 72062 <module.45+0x1c>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
leaveq 
retq   
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
xor    %eax,%eax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)

000000000003d5e0 <OJPEGDecode>:
push   %rbp
mov    %rsp,%rbp
mov    0x350(%rdi),%rcx
movslq 0x8(%rcx),%rax
test   %eax,%eax
jne    3d613 <OJPEGDecode+0x33>
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
lea    0x34a6d(%rip),%rsi        # 72070 <module.47>
lea    0x34a72(%rip),%rdx        # 7207c <module.47+0xc>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
movzbl 0x261(%rcx),%eax
test   %al,%al
je     3d62b <OJPEGDecode+0x4b>
callq  3d880 <OJPEGDecodeScanlines>
test   %eax,%eax
jne    3d638 <OJPEGDecode+0x58>
xor    %eax,%eax
leaveq 
retq   
callq  3d650 <OJPEGDecodeRaw>
test   %eax,%eax
jne    3d63f <OJPEGDecode+0x5f>
xor    %eax,%eax
leaveq 
retq   
mov    $0x1,%eax
leaveq 
retq   
mov    $0x1,%eax
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)

000000000003d650 <OJPEGDecodeRaw>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    %rdx,%rax
mov    %r14,%rcx
mov    %rsi,%r14
mov    %rbx,%r8
mov    %r15,%rbx
mov    %r13,%r9
xor    %r13d,%r13d
mov    0x350(%rdi),%r15
mov    0x630(%r15),%r10d
cqto   
mov    %r12,%r11
mov    %rax,%r12
idiv   %r10
test   %rdx,%rdx
jne    3d6ad <OJPEGDecodeRaw+0x5d>
test   %r12,%r12
jle    3d6e2 <OJPEGDecodeRaw+0x92>
lea    0x310(%r15),%rax
mov    %r8,-0x8(%rbp)
mov    %r11,-0x10(%rbp)
mov    %r9,-0x18(%rbp)
mov    %rcx,-0x20(%rbp)
mov    %rbx,-0x28(%rbp)
jmp    3d704 <OJPEGDecodeRaw+0xb4>
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
mov    %r11,%r12
mov    %r9,%r13
mov    %rcx,%r14
mov    %r8,%r15
lea    0x349e4(%rip),%rsi        # 720ad <module.49>
lea    0x349ec(%rip),%rdx        # 720bc <module.49+0xf>
callq  8a00 <TIFFErrorExt@plt>
mov    %r15,%rcx
mov    %rbx,%r15
mov    %rcx,%rbx
xor    %eax,%eax
leaveq 
retq   
lea    0x349f0(%rip),%rdi        # 720d9 <module.49+0x2c>
lea    0x346a4(%rip),%rsi        # 71d94 <module.15+0x28>
mov    $0x33d,%edx
lea    0x349e2(%rip),%rcx        # 720de <module.49+0x31>
callq  8490 <__assert_fail@plt>
add    %rcx,%r14
mov    0x62c(%r15),%ecx
test   %ecx,%ecx
jne    3d736 <OJPEGDecodeRaw+0xe6>
mov    0x620(%r15),%rdx
movzbl 0x125(%r15),%ecx
shl    $0x3,%ecx
mov    %rax,%rbx
mov    %r15,%rdi
mov    %rbx,%rsi
callq  41450 <jpeg_read_raw_data_encap>
test   %eax,%eax
je     3d784 <OJPEGDecodeRaw+0x134>
mov    %rbx,%rax
mov    0x62c(%r15),%ecx
mov    %rcx,%rdx
imul   0x5e4(%r15),%edx
mov    %edx,%r9d
mov    %r9,%rdx
add    0x610(%r15),%rdx
add    0x608(%r15),%r9
movzbl 0x125(%r15),%esi
imul   %esi,%ecx
imul   0x5dc(%r15),%ecx
mov    %ecx,%r10d
add    0x600(%r15),%r10
mov    %r13,%r11
mov    %r14,%rcx
jmpq   3d809 <OJPEGDecodeRaw+0x1b9>
mov    %r13,%rax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
movzbl (%rcx),%esi
mov    %sil,(%rdi)
add    $0x1,%rcx
add    $0x1,%rdi
add    $0x1,%ebx
movzbl 0x124(%r15),%esi
cmp    %bl,%sil
ja     3d79d <OJPEGDecodeRaw+0x14d>
add    $0x1,%r8d
mov    0x5dc(%r15),%ebx
sub    %esi,%ebx
mov    %ebx,%esi
add    %rsi,%rcx
movzbl 0x125(%r15),%esi
cmp    %r8b,%sil
ja     3d868 <OJPEGDecodeRaw+0x218>
movzbl (%r9),%esi
lea    0x1(%rdx),%r8
add    $0x1,%r9
add    $0x1,%r11d
lea    0x2(%rdi),%rcx
movzbl 0x124(%r15),%ebx
mov    %sil,(%rdi)
movzbl (%rdx),%edx
mov    %dl,0x1(%rdi)
add    %rbx,%r10
mov    %r8,%rdx
mov    0x628(%r15),%esi
cmp    %r11d,%esi
ja     3d870 <OJPEGDecodeRaw+0x220>
mov    0x62c(%r15),%ecx
add    $0x1,%ecx
mov    %ecx,0x62c(%r15)
cmp    0x5e8(%r15),%ecx
jne    3d83a <OJPEGDecodeRaw+0x1ea>
movl   $0x0,0x62c(%r15)
mov    0x630(%r15),%ecx
sub    %rcx,%r12
test   %r12,%r12
jg     3d701 <OJPEGDecodeRaw+0xb1>
mov    $0x1,%eax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
mov    %r13,%rbx
jmpq   3d7ae <OJPEGDecodeRaw+0x15e>
mov    %rcx,%rdi
mov    %r10,%rcx
mov    %r13,%r8
jmpq   3d7cd <OJPEGDecodeRaw+0x17d>
xchg   %ax,%ax

000000000003d880 <OJPEGDecodeScanlines>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    %rdx,%rax
mov    %r12,%rcx
mov    %r15,%r8
mov    %r14,%r15
mov    %r13,%r14
mov    %rbx,%r13
mov    0x350(%rdi),%r12
mov    0x630(%r12),%r9d
cqto   
mov    %rax,%rbx
idiv   %r9
test   %rdx,%rdx
jne    3d8da <OJPEGDecodeScanlines+0x5a>
test   %rbx,%rbx
jg     3d90f <OJPEGDecodeScanlines+0x8f>
lea    0x34817(%rip),%rdi        # 720d9 <module.49+0x2c>
lea    0x344cb(%rip),%rsi        # 71d94 <module.15+0x28>
mov    $0x36d,%edx
lea    0x3482d(%rip),%rcx        # 72102 <module.53+0x15>
callq  8490 <__assert_fail@plt>
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
mov    %r8,%rbx
mov    %rcx,%r12
lea    0x347fd(%rip),%rsi        # 720ed <module.53>
lea    0x347c5(%rip),%rdx        # 720bc <module.49+0xf>
callq  8a00 <TIFFErrorExt@plt>
mov    %r13,%rcx
mov    %r14,%r13
mov    %r15,%r14
mov    %rbx,%r15
mov    %rcx,%rbx
xor    %eax,%eax
leaveq 
retq   
mov    %rsi,-0x30(%rbp)
lea    0x310(%r12),%rdx
lea    -0x30(%rbp),%rsi
mov    $0x1,%eax
mov    %r13,-0x8(%rbp)
mov    %rcx,-0x10(%rbp)
mov    %r14,-0x18(%rbp)
mov    %r15,-0x20(%rbp)
mov    %r8,-0x28(%rbp)
mov    %rax,%r13
mov    %rdx,%r14
mov    %rsi,%r15
jmp    3d95e <OJPEGDecodeScanlines+0xde>
mov    0x630(%r12),%ecx
mov    %rcx,%rax
add    -0x30(%rbp),%rax
mov    %rax,-0x30(%rbp)
sub    %rcx,%rbx
test   %rbx,%rbx
jle    3d98b <OJPEGDecodeScanlines+0x10b>
mov    %r12,%rdi
mov    %r14,%rsi
mov    %r15,%rdx
mov    %r13,%rcx
callq  41410 <jpeg_read_scanlines_encap>
test   %eax,%eax
jne    3d943 <OJPEGDecodeScanlines+0xc3>
xor    %eax,%eax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
mov    %r13,%rax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nop

000000000003d9b0 <OJPEGPostDecode>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    0x350(%rdi),%rcx
mov    0x25c(%rcx),%eax
add    $0x1,%eax
mov    %eax,0x25c(%rcx)
mov    0xe0(%rdi),%esi
xor    %edx,%edx
div    %esi
test   %edx,%edx
je     3d9de <OJPEGPostDecode+0x2e>
leaveq 
retq   
movzbl 0x260(%rcx),%eax
test   %al,%al
jne    3da08 <OJPEGPostDecode+0x58>
lea    0x34727(%rip),%rdi        # 72117 <module.53+0x2a>
lea    0x3439d(%rip),%rsi        # 71d94 <module.15+0x28>
mov    $0x383,%edx
lea    0x34732(%rip),%rcx        # 72135 <module.53+0x48>
callq  8490 <__assert_fail@plt>
mov    %r15,-0x8(%rbp)
mov    %rcx,%r15
callq  3e920 <OJPEGLibjpegSessionAbort>
movb   $0x0,0x259(%r15)
mov    -0x8(%rbp),%r15
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   (%rax)

000000000003da30 <OJPEGSetupEncode>:
push   %rbp
mov    %rsp,%rbp
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
lea    0x34701(%rip),%rsi        # 72145 <module.57>
lea    0x3470b(%rip),%rdx        # 72156 <module.57+0x11>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nop

000000000003da60 <OJPEGPreEncode>:
push   %rbp
mov    %rsp,%rbp
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
lea    0x34727(%rip),%rsi        # 7219b <module.59>
lea    0x346db(%rip),%rdx        # 72156 <module.57+0x11>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nop

000000000003da90 <OJPEGEncode>:
push   %rbp
mov    %rsp,%rbp
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
lea    0x34706(%rip),%rsi        # 721aa <module.60>
lea    0x346ab(%rip),%rdx        # 72156 <module.57+0x11>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nop

000000000003dac0 <OJPEGPostEncode>:
push   %rbp
mov    %rsp,%rbp
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
lea    0x346e2(%rip),%rsi        # 721b6 <module.61>
lea    0x3467b(%rip),%rdx        # 72156 <module.57+0x11>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nop

000000000003daf0 <OJPEGCleanup>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    0x350(%rdi),%rcx
test   %rcx,%rcx
jne    3db0e <OJPEGCleanup+0x1e>
leaveq 
retq   
mov    0xd8(%rcx),%rax
mov    %rax,0x410(%rdi)
mov    0xe0(%rcx),%rax
mov    %rax,0x408(%rdi)
mov    0xe8(%rcx),%rax
mov    %rax,0x418(%rdi)
mov    0x178(%rcx),%rax
test   %rax,%rax
jne    3db4f <OJPEGCleanup+0x5f>
mov    %r14,%rax
mov    %rdi,%r14
mov    %rcx,%r15
jmp    3db61 <OJPEGCleanup+0x71>
mov    %rdi,%r14
mov    %rax,%rdi
mov    %rcx,%r15
callq  8bb0 <_TIFFfree@plt>
mov    -0x8(%rbp),%rax
mov    0x180(%r15),%rdi
test   %rdi,%rdi
je     3db76 <OJPEGCleanup+0x86>
callq  8bb0 <_TIFFfree@plt>
mov    -0x8(%rbp),%rax
mov    0x188(%r15),%rdi
test   %rdi,%rdi
je     3db8b <OJPEGCleanup+0x9b>
callq  8bb0 <_TIFFfree@plt>
mov    -0x8(%rbp),%rax
mov    0x190(%r15),%rdi
test   %rdi,%rdi
je     3dba0 <OJPEGCleanup+0xb0>
callq  8bb0 <_TIFFfree@plt>
mov    -0x8(%rbp),%rax
mov    0x198(%r15),%rdi
test   %rdi,%rdi
je     3dbb5 <OJPEGCleanup+0xc5>
callq  8bb0 <_TIFFfree@plt>
mov    -0x8(%rbp),%rax
mov    0x1a0(%r15),%rdi
test   %rdi,%rdi
je     3dbca <OJPEGCleanup+0xda>
callq  8bb0 <_TIFFfree@plt>
mov    -0x8(%rbp),%rax
mov    0x1a8(%r15),%rdi
test   %rdi,%rdi
je     3dbdf <OJPEGCleanup+0xef>
callq  8bb0 <_TIFFfree@plt>
mov    -0x8(%rbp),%rax
mov    0x1b0(%r15),%rdi
test   %rdi,%rdi
je     3dbf4 <OJPEGCleanup+0x104>
callq  8bb0 <_TIFFfree@plt>
mov    -0x8(%rbp),%rax
mov    0x1b8(%r15),%rdi
test   %rdi,%rdi
je     3dc09 <OJPEGCleanup+0x119>
callq  8bb0 <_TIFFfree@plt>
mov    -0x8(%rbp),%rax
mov    0x1c0(%r15),%rdi
test   %rdi,%rdi
je     3dc1e <OJPEGCleanup+0x12e>
callq  8bb0 <_TIFFfree@plt>
mov    -0x8(%rbp),%rax
mov    0x1c8(%r15),%rdi
test   %rdi,%rdi
je     3dc33 <OJPEGCleanup+0x143>
callq  8bb0 <_TIFFfree@plt>
mov    -0x8(%rbp),%rax
mov    0x1d0(%r15),%rdi
test   %rdi,%rdi
je     3dc48 <OJPEGCleanup+0x158>
callq  8bb0 <_TIFFfree@plt>
mov    -0x8(%rbp),%rax
movzbl 0x260(%r15),%ecx
test   %cl,%cl
je     3dc60 <OJPEGCleanup+0x170>
mov    %r14,%rdi
callq  3e920 <OJPEGLibjpegSessionAbort>
mov    -0x8(%rbp),%rax
mov    0x5f8(%r15),%rdi
test   %rdi,%rdi
je     3dc75 <OJPEGCleanup+0x185>
callq  8bb0 <_TIFFfree@plt>
mov    -0x8(%rbp),%rax
mov    0x620(%r15),%rdi
test   %rdi,%rdi
je     3dc8a <OJPEGCleanup+0x19a>
callq  8bb0 <_TIFFfree@plt>
mov    -0x8(%rbp),%rax
mov    0x1678(%r15),%rdi
test   %rdi,%rdi
je     3dc9f <OJPEGCleanup+0x1af>
callq  8bb0 <_TIFFfree@plt>
mov    -0x8(%rbp),%rax
mov    %r15,%rdi
mov    %rax,%r15
callq  8bb0 <_TIFFfree@plt>
mov    %r14,%rdi
mov    %r15,%r14
movq   $0x0,0x350(%rdi)
callq  8740 <_TIFFSetDefaultCompressionState@plt>
mov    -0x10(%rbp),%r15
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)

000000000003dcd0 <OJPEGSubsamplingCorrect>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %r14,-0x18(%rbp)
mov    %r15,-0x20(%rbp)
mov    0x350(%rdi),%r14
mov    %rdi,%r15
callq  8c70 <_TIFFFillStriles@plt>
movzbl 0x122(%r14),%eax
test   %al,%al
je     3dd1a <OJPEGSubsamplingCorrect+0x4a>
lea    0x344dc(%rip),%rdi        # 721de <module.62+0x18>
lea    0x3408b(%rip),%rsi        # 71d94 <module.15+0x28>
mov    $0x3e5,%edx
lea    0x344e8(%rip),%rcx        # 721fd <module.62+0x37>
callq  8490 <__assert_fail@plt>
lea    0x344a5(%rip),%rsi        # 721c6 <module.62>
movzwl 0x82(%r15),%eax
cmp    $0x3,%ax
jne    3de01 <OJPEGSubsamplingCorrect+0x131>
movzwl 0x7a(%r15),%eax
cmp    $0x6,%ax
jne    3ddf7 <OJPEGSubsamplingCorrect+0x127>
movzbl 0x124(%r14),%ecx
movzbl 0x125(%r14),%eax
movb   $0x1,0x122(%r14)
movb   $0x1,0x121(%r14)
mov    %r15,%rdi
mov    %r12,-0x8(%rbp)
mov    %r13,-0x10(%rbp)
mov    %rax,%r12
mov    %rcx,%r13
callq  3e980 <OJPEGReadHeaderInfoSec>
movzbl 0x126(%r14),%eax
test   %al,%al
je     3dd94 <OJPEGSubsamplingCorrect+0xc4>
movb   $0x1,0x124(%r14)
movb   $0x1,0x125(%r14)
movb   $0x0,0x121(%r14)
movzbl 0x124(%r14),%eax
cmp    %r13b,%al
jne    3ddb6 <OJPEGSubsamplingCorrect+0xe6>
movzbl 0x125(%r14),%eax
cmp    %r12b,%al
je     3ddc6 <OJPEGSubsamplingCorrect+0xf6>
movzbl 0x126(%r14),%eax
test   %al,%al
je     3de4c <OJPEGSubsamplingCorrect+0x17c>
movzbl 0x126(%r14),%eax
test   %al,%al
jne    3de9c <OJPEGSubsamplingCorrect+0x1cc>
lea    0x343e9(%rip),%r12        # 721c6 <module.62>
movzbl 0x126(%r14),%eax
test   %al,%al
je     3ded2 <OJPEGSubsamplingCorrect+0x202>
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
jmp    3de3a <OJPEGSubsamplingCorrect+0x16a>
cmp    $0xa,%ax
je     3dd42 <OJPEGSubsamplingCorrect+0x72>
movzbl 0x123(%r14),%eax
test   %al,%al
je     3de22 <OJPEGSubsamplingCorrect+0x152>
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
lea    0x343f8(%rip),%rdx        # 72215 <module.62+0x4f>
callq  85a0 <TIFFWarningExt@plt>
movb   $0x1,0x124(%r14)
movb   $0x1,0x125(%r14)
movb   $0x0,0x126(%r14)
movb   $0x1,0x122(%r14)
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
leaveq 
retq   
movzbl 0x123(%r14),%eax
test   %al,%al
je     3def4 <OJPEGSubsamplingCorrect+0x224>
sub    $0x10,%rsp
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
lea    0x3448c(%rip),%rdx        # 722fc <module.62+0x136>
movzbl 0x124(%r14),%ecx
movzbl 0x125(%r14),%r8d
mov    %r12d,(%rsp)
lea    0x3433b(%rip),%rsi        # 721c6 <module.62>
mov    %r13,%r9
callq  85a0 <TIFFWarningExt@plt>
add    $0x10,%rsp
jmpq   3ddc6 <OJPEGSubsamplingCorrect+0xf6>
movzbl 0x123(%r14),%eax
test   %al,%al
je     3df25 <OJPEGSubsamplingCorrect+0x255>
mov    %r13,%rcx
mov    %r12,%r8
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
lea    0x345a9(%rip),%rdx        # 72467 <module.62+0x2a1>
lea    0x34301(%rip),%r12        # 721c6 <module.62>
mov    %r12,%rsi
callq  85a0 <TIFFWarningExt@plt>
jmpq   3dddd <OJPEGSubsamplingCorrect+0x10d>
movzbl 0x124(%r14),%ecx
movzbl 0x125(%r14),%r8d
cmp    %cl,%r8b
ja     3df49 <OJPEGSubsamplingCorrect+0x279>
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
jmpq   3de3a <OJPEGSubsamplingCorrect+0x16a>
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
lea    0x3435d(%rip),%rdx        # 72261 <module.62+0x9b>
movzbl 0x124(%r14),%ecx
movzbl 0x125(%r14),%r8d
lea    0x342ab(%rip),%rsi        # 721c6 <module.62>
callq  85a0 <TIFFWarningExt@plt>
jmpq   3ddc6 <OJPEGSubsamplingCorrect+0xf6>
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
lea    0x3444c(%rip),%rdx        # 72381 <module.62+0x1bb>
lea    0x3428a(%rip),%r12        # 721c6 <module.62>
mov    %r12,%rsi
callq  85a0 <TIFFWarningExt@plt>
jmpq   3dddd <OJPEGSubsamplingCorrect+0x10d>
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
mov    %r12,%rsi
lea    0x345db(%rip),%rdx        # 72537 <module.62+0x371>
callq  85a0 <TIFFWarningExt@plt>
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
jmpq   3de3a <OJPEGSubsamplingCorrect+0x16a>
xchg   %ax,%ax

000000000003df70 <OJPEGReadHeaderInfo>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    0x350(%rdi),%rcx
movzbl 0x258(%rcx),%eax
test   %al,%al
je     3dfa9 <OJPEGReadHeaderInfo+0x39>
lea    0x345ed(%rip),%rdi        # 7257e <module.71+0x14>
lea    0x33dfc(%rip),%rsi        # 71d94 <module.15+0x28>
mov    $0x418,%edx
lea    0x345f1(%rip),%rcx        # 72595 <module.71+0x2b>
callq  8490 <__assert_fail@plt>
mov    0x58(%rdi),%esi
mov    %esi,0xf8(%rcx)
mov    0x5c(%rdi),%edx
mov    %edx,0xfc(%rcx)
mov    0x10(%rdi),%eax
and    $0x400,%eax
test   %eax,%eax
jne    3dfe1 <OJPEGReadHeaderInfo+0x71>
mov    %esi,0x100(%rcx)
mov    0x84(%rdi),%eax
mov    %eax,0x104(%rcx)
mov    %edx,0x108(%rcx)
jmp    3e008 <OJPEGReadHeaderInfo+0x98>
mov    0x64(%rdi),%eax
mov    %eax,0x100(%rcx)
mov    0x68(%rdi),%esi
mov    %esi,0x104(%rcx)
lea    -0x1(%rdx,%rsi,1),%eax
xor    %edx,%edx
div    %esi
imul   0x104(%rcx),%eax
mov    %eax,0x108(%rcx)
lea    0x3455b(%rip),%rsi        # 7256a <module.71>
movzwl 0x82(%rdi),%eax
cmp    $0x1,%ax
je     3e046 <OJPEGReadHeaderInfo+0xd6>
cmp    $0x3,%ax
jne    3e095 <OJPEGReadHeaderInfo+0x125>
movb   $0x3,0x10c(%rcx)
movb   $0x0,0x10d(%rcx)
movzwl 0xaa(%rdi),%eax
cmp    $0x1,%ax
je     3e0b5 <OJPEGReadHeaderInfo+0x145>
movb   $0x1,0x10e(%rcx)
jmp    3e069 <OJPEGReadHeaderInfo+0xf9>
movb   $0x1,0x10c(%rcx)
movb   $0x0,0x10d(%rcx)
movb   $0x1,0x10e(%rcx)
movb   $0x1,0x124(%rcx)
movb   $0x1,0x125(%rcx)
mov    0x104(%rcx),%eax
mov    0xfc(%rcx),%edx
cmp    %eax,%edx
ja     3e0be <OJPEGReadHeaderInfo+0x14e>
mov    %r15,-0x8(%rbp)
mov    %rcx,%r15
callq  3e980 <OJPEGReadHeaderInfoSec>
test   %eax,%eax
jne    3e124 <OJPEGReadHeaderInfo+0x1b4>
mov    -0x8(%rbp),%r15
xor    %eax,%eax
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
lea    0x34504(%rip),%rdx        # 725a9 <module.71+0x3f>
movzbl 0x10c(%rcx),%ecx
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
movb   $0x3,0x10e(%rcx)
jmp    3e069 <OJPEGReadHeaderInfo+0xf9>
movzbl 0x125(%rcx),%r8d
shl    $0x3,%r8d
xor    %edx,%edx
div    %r8d
test   %edx,%edx
jne    3e182 <OJPEGReadHeaderInfo+0x212>
xor    %r9d,%r9d
mov    0x100(%rcx),%r10d
movzbl 0x124(%rcx),%esi
mov    0x104(%rcx),%eax
movzbl 0x125(%rcx),%r8d
shl    $0x3,%r8d
mov    %r9,%rdx
div    %r8d
lea    -0x1(%r10,%rsi,8),%edx
shl    $0x3,%esi
mov    %rax,%r8
mov    %rdx,%rax
mov    %r9,%rdx
div    %esi
imul   %eax,%r8d
mov    %r8w,0x1d8(%rcx)
jmpq   3e079 <OJPEGReadHeaderInfo+0x109>
movb   $0x1,0x1f8(%r15)
mov    0x638(%r15),%eax
mov    %eax,0x1fc(%r15)
mov    0x63c(%r15),%eax
mov    %eax,0x200(%r15)
mov    0x648(%r15),%rax
movzwl 0x660(%r15),%ecx
sub    %rcx,%rax
mov    %rax,0x208(%r15)
add    0x658(%r15),%rcx
mov    %rcx,0x210(%r15)
movb   $0x1,0x258(%r15)
mov    $0x1,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
lea    0x34454(%rip),%rdx        # 725e6 <module.71+0x7c>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

000000000003e1a0 <OJPEGReadSecondarySos>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    0x350(%rdi),%r8
lea    0x33bde(%rip),%r9        # 71d94 <module.15+0x28>
lea    0x3446b(%rip),%rcx        # 72628 <module.71+0xbe>
test   %si,%si
jne    3e1d6 <OJPEGReadSecondarySos+0x36>
mov    %r9,%rsi
lea    0x34458(%rip),%rdi        # 72624 <module.71+0xba>
mov    $0x456,%edx
callq  8490 <__assert_fail@plt>
cmp    $0x2,%si
jbe    3e1f0 <OJPEGReadSecondarySos+0x50>
mov    %r9,%rsi
lea    0x34458(%rip),%rdi        # 7263e <module.71+0xd4>
mov    $0x457,%edx
callq  8490 <__assert_fail@plt>
movzbl 0x1f8(%r8),%eax
test   %al,%al
jne    3e210 <OJPEGReadSecondarySos+0x70>
mov    %r9,%rsi
lea    0x3443c(%rip),%rdi        # 72642 <module.71+0xd8>
mov    $0x458,%edx
callq  8490 <__assert_fail@plt>
movzwl %si,%eax
shl    $0x5,%rax
movzbl 0x1f8(%r8,%rax,1),%eax
test   %al,%al
je     3e238 <OJPEGReadSecondarySos+0x98>
mov    %r9,%rsi
lea    0x3442a(%rip),%rdi        # 72658 <module.71+0xee>
mov    $0x459,%edx
callq  8490 <__assert_fail@plt>
lea    0xff(%rsi),%ecx
jmp    3e246 <OJPEGReadSecondarySos+0xa6>
add    $0xff,%ecx
mov    %cl,0x10d(%r8)
movzbl %cl,%eax
shl    $0x5,%rax
movzbl 0x1f8(%r8,%rax,1),%edx
test   %dl,%dl
je     3e240 <OJPEGReadSecondarySos+0xa0>
lea    0x1f8(%r8),%rdx
mov    0x4(%rdx,%rax,1),%ecx
mov    %ecx,0x638(%r8)
mov    0x8(%rdx,%rax,1),%ecx
mov    %ecx,0x63c(%r8)
mov    0x10(%rdx,%rax,1),%rcx
mov    %rcx,0x648(%r8)
movb   $0x0,0x650(%r8)
mov    0x18(%rdx,%rax,1),%rax
mov    %rax,0x658(%r8)
movw   $0x0,0x660(%r8)
movq   $0x0,0x668(%r8)
lea    -0x29(%rbp),%rax
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rdi,%rbx
mov    %r8,%r12
mov    %rax,%r13
mov    %rsi,%r14
mov    %rdx,%r15
jmpq   3e3a6 <OJPEGReadSecondarySos+0x206>
cmp    $0xda,%al
jne    3e3d8 <OJPEGReadSecondarySos+0x238>
movzbl 0x10d(%r12),%eax
add    $0x1,%eax
mov    %al,0x10d(%r12)
mov    %rbx,%rdi
callq  3fa00 <OJPEGReadHeaderInfoSecStreamSos>
test   %eax,%eax
je     3e3ff <OJPEGReadSecondarySos+0x25f>
movzbl 0x10d(%r12),%eax
shl    $0x5,%rax
movb   $0x1,(%r15,%rax,1)
mov    0x638(%r12),%ecx
movzbl 0x10d(%r12),%eax
shl    $0x5,%rax
mov    %ecx,0x1fc(%r12,%rax,1)
mov    0x63c(%r12),%ecx
movzbl 0x10d(%r12),%eax
shl    $0x5,%rax
mov    %ecx,0x200(%r12,%rax,1)
mov    0x648(%r12),%rax
movzwl 0x660(%r12),%ecx
sub    %rcx,%rax
movzbl 0x10d(%r12),%ecx
shl    $0x5,%rcx
mov    %rax,0x208(%r12,%rcx,1)
movzwl 0x660(%r12),%ecx
add    0x658(%r12),%rcx
movzbl 0x10d(%r12),%eax
shl    $0x5,%rax
mov    %rcx,0x210(%r12,%rax,1)
movzbl 0x10d(%r12),%eax
cmp    %ax,%r14w
ja     3e3d8 <OJPEGReadSecondarySos+0x238>
mov    $0x1,%eax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
movzbl -0x29(%rbp),%eax
cmp    $0xff,%al
je     3e423 <OJPEGReadSecondarySos+0x283>
mov    %r12,%rdi
mov    %r13,%rsi
callq  406b0 <OJPEGReadByte>
test   %eax,%eax
jne    3e3d0 <OJPEGReadSecondarySos+0x230>
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
xor    %eax,%eax
leaveq 
retq   
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
xor    %eax,%eax
leaveq 
retq   
movzbl -0x29(%rbp),%eax
cmp    $0xfe,%al
jbe    3e2df <OJPEGReadSecondarySos+0x13f>
mov    %r12,%rdi
mov    %r13,%rsi
callq  406b0 <OJPEGReadByte>
test   %eax,%eax
jne    3e417 <OJPEGReadSecondarySos+0x277>
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
xor    %eax,%eax
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

000000000003e450 <OJPEGWriteHeaderInfo>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
xor    %eax,%eax
mov    0x350(%rdi),%rdx
movzbl 0x260(%rdx),%ecx
test   %cl,%cl
je     3e46e <OJPEGWriteHeaderInfo+0x1e>
leaveq 
retq   
movl   $0x0,0xe70(%rdx)
movb   $0x0,0x1da(%rdx)
lea    0x268(%rdx),%rax
mov    %rax,%rcx
mov    %r13,-0x8(%rbp)
mov    %r14,-0x10(%rbp)
mov    %r15,-0x18(%rbp)
mov    %rdx,%r13
mov    %rdi,%r14
mov    %rcx,%rdi
mov    %rax,%r15
callq  89f0 <jpeg_std_error@plt>
lea    0x3003(%rip),%rax        # 414b0 <OJPEGLibjpegJpegErrorMgrOutputMessage>
mov    %rax,0x278(%r13)
lea    0x3045(%rip),%rax        # 41500 <OJPEGLibjpegJpegErrorMgrErrorExit>
mov    %rax,(%r15)
mov    %r15,0x310(%r13)
mov    %r14,0x328(%r13)
lea    0x310(%r13),%r15
mov    %r13,%rdi
mov    %r15,%rsi
callq  41360 <jpeg_create_decompress_encap>
test   %eax,%eax
jne    3e4f2 <OJPEGWriteHeaderInfo+0xa2>
xor    %eax,%eax
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
leaveq 
retq   
movb   $0x1,0x260(%r13)
movq   $0x0,0x5a8(%r13)
lea    0x3054(%rip),%rax        # 41560 <OJPEGLibjpegJpegSourceMgrInitSource>
mov    %rax,0x5b0(%r13)
lea    0x3056(%rip),%rax        # 41570 <OJPEGLibjpegJpegSourceMgrFillInputBuffer>
mov    %rax,0x5b8(%r13)
lea    0x30d8(%rip),%rax        # 41600 <OJPEGLibjpegJpegSourceMgrSkipInputData>
mov    %rax,0x5c0(%r13)
lea    0x310a(%rip),%rax        # 41640 <OJPEGLibjpegJpegSourceMgrResyncToRestart>
mov    %rax,0x5c8(%r13)
lea    0x313c(%rip),%rax        # 41680 <OJPEGLibjpegJpegSourceMgrTermSource>
mov    %rax,0x5d0(%r13)
lea    0x5a0(%r13),%rax
mov    %rax,0x338(%r13)
mov    $0x1,%edx
mov    %r13,%rdi
mov    %r15,%rsi
callq  413a0 <jpeg_read_header_encap>
test   %eax,%eax
jne    3e57d <OJPEGWriteHeaderInfo+0x12d>
xor    %eax,%eax
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
leaveq 
retq   
movzbl 0x126(%r13),%eax
test   %al,%al
jne    3e5ea <OJPEGWriteHeaderInfo+0x19a>
movzbl 0x10e(%r13),%eax
cmp    $0x1,%al
jbe    3e5ea <OJPEGWriteHeaderInfo+0x19a>
movl   $0x1,0x36c(%r13)
movl   $0x0,0x374(%r13)
movb   $0x0,0x261(%r13)
movzbl 0x5d8(%r13),%eax
test   %al,%al
jne    3e62d <OJPEGWriteHeaderInfo+0x1dd>
lea    0x337ce(%rip),%rsi        # 71d94 <module.15+0x28>
lea    0x340da(%rip),%rcx        # 726a7 <module.81+0x39>
mov    0x5f8(%r13),%rax
test   %rax,%rax
je     3e64c <OJPEGWriteHeaderInfo+0x1fc>
lea    0x340a3(%rip),%rdi        # 72683 <module.81+0x15>
mov    $0x4a9,%edx
callq  8490 <__assert_fail@plt>
movl   $0x0,0x34c(%r13)
movl   $0x0,0x350(%r13)
movb   $0x1,0x261(%r13)
movzbl 0x10e(%r13),%eax
imul   0x100(%r13),%eax
mov    %eax,0x630(%r13)
mov    0x104(%r13),%eax
mov    %eax,0x634(%r13)
mov    %r15,%rsi
mov    %r13,%rdi
callq  413e0 <jpeg_start_decompress_encap>
test   %eax,%eax
jne    3e669 <OJPEGWriteHeaderInfo+0x219>
xor    %eax,%eax
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
leaveq 
retq   
mov    0x620(%r13),%rax
test   %rax,%rax
je     3e684 <OJPEGWriteHeaderInfo+0x234>
lea    0x3405d(%rip),%rdi        # 726bc <module.81+0x4e>
mov    $0x4aa,%edx
callq  8490 <__assert_fail@plt>
movb   $0x1,0x259(%r13)
mov    $0x1,%eax
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
leaveq 
retq   
mov    0x100(%r13),%eax
movzbl 0x124(%r13),%esi
lea    -0x1(%rax,%rsi,8),%eax
shl    $0x3,%esi
xor    %ecx,%ecx
mov    %rcx,%rdx
div    %esi
movzbl 0x124(%r13),%esi
imul   %esi,%eax
shl    $0x3,%eax
mov    %eax,0x5dc(%r13)
movzbl 0x125(%r13),%edx
shl    $0x3,%edx
mov    %edx,0x5e0(%r13)
mov    %rcx,%rdx
div    %esi
mov    %eax,0x5e4(%r13)
movl   $0x8,0x5e8(%r13)
mov    0x5e0(%r13),%ecx
imul   0x5dc(%r13),%ecx
mov    %ecx,0x5ec(%r13)
mov    %rax,%rdx
shl    $0x3,%edx
mov    %edx,0x5f0(%r13)
shl    $0x4,%eax
add    %ecx,%eax
mov    %eax,0x5f4(%r13)
mov    %eax,%edi
callq  8440 <_TIFFmalloc@plt>
mov    %rax,0x5f8(%r13)
lea    0x33f4b(%rip),%rsi        # 7266e <module.81>
lea    0x33938(%rip),%rdx        # 72062 <module.45+0x1c>
test   %rax,%rax
je     3e7d7 <OJPEGWriteHeaderInfo+0x387>
mov    %rax,0x600(%r13)
mov    0x5ec(%r13),%ecx
add    %rax,%rcx
mov    %rcx,0x608(%r13)
mov    0x5f0(%r13),%eax
add    %rcx,%rax
mov    %rax,0x610(%r13)
mov    0x5e0(%r13),%ecx
mov    0x5e8(%r13),%eax
lea    0x3(%rcx,%rax,2),%eax
mov    %eax,0x618(%r13)
mov    %eax,%edi
shl    $0x3,%rdi
mov    %r15,-0x20(%rbp)
mov    %rsi,%r15
callq  8440 <_TIFFmalloc@plt>
mov    %rax,0x620(%r13)
test   %rax,%rax
je     3e7f5 <OJPEGWriteHeaderInfo+0x3a5>
lea    0x18(%rax),%rcx
mov    %rcx,(%rax)
mov    0x620(%r13),%rsi
mov    0x5e0(%r13),%edx
lea    0x18(%rsi,%rdx,8),%rdx
mov    %rdx,0x8(%rax)
mov    0x5e0(%r13),%edx
shl    $0x3,%rdx
add    0x620(%r13),%rdx
mov    0x5e8(%r13),%esi
lea    0x18(%rdx,%rsi,8),%rdx
mov    %rdx,0x10(%rax)
xor    %eax,%eax
jmp    3e83b <OJPEGWriteHeaderInfo+0x3eb>
xor    %eax,%eax
mov    0x3b8(%r14),%rdi
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%r14),%rdi
mov    %r15,%rsi
lea    0x3385a(%rip),%rdx        # 72062 <module.45+0x1c>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
leaveq 
retq   
mov    %rax,%rdx
imul   0x5dc(%r13),%edx
mov    %edx,%edx
add    0x600(%r13),%rdx
mov    %rdx,(%rcx)
add    $0x1,%eax
add    $0x8,%rcx
mov    0x5e0(%r13),%edx
cmp    %eax,%edx
ja     3e81d <OJPEGWriteHeaderInfo+0x3cd>
xor    %eax,%eax
jmp    3e868 <OJPEGWriteHeaderInfo+0x418>
mov    %rax,%rdx
imul   0x5e4(%r13),%edx
mov    %edx,%edx
add    0x608(%r13),%rdx
mov    %rdx,(%rcx)
add    $0x1,%eax
add    $0x8,%rcx
mov    0x5e8(%r13),%edx
cmp    %eax,%edx
ja     3e84a <OJPEGWriteHeaderInfo+0x3fa>
xor    %eax,%eax
jmp    3e895 <OJPEGWriteHeaderInfo+0x445>
mov    %rax,%rdx
imul   0x5e4(%r13),%edx
mov    %edx,%edx
add    0x610(%r13),%rdx
mov    %rdx,(%rcx)
add    $0x1,%eax
add    $0x8,%rcx
mov    0x5e8(%r13),%edx
cmp    %eax,%edx
ja     3e877 <OJPEGWriteHeaderInfo+0x427>
movzbl 0x124(%r13),%esi
mov    0x100(%r13),%eax
lea    -0x1(%rsi,%rax,1),%eax
xor    %ecx,%ecx
mov    %rcx,%rdx
div    %esi
mov    %eax,0x628(%r13)
movl   $0x0,0x62c(%r13)
movzbl 0x125(%r13),%esi
movzbl 0x124(%r13),%edx
imul   %esi,%edx
add    $0x2,%edx
imul   %edx,%eax
mov    %eax,0x630(%r13)
mov    0x104(%r13),%eax
lea    -0x1(%rsi,%rax,1),%eax
mov    %rcx,%rdx
div    %esi
mov    %eax,0x634(%r13)
movb   $0x1,0x5d8(%r13)
mov    -0x20(%rbp),%r15
jmpq   3e62d <OJPEGWriteHeaderInfo+0x1dd>
data16 nopw %cs:0x0(%rax,%rax,1)
nop

000000000003e920 <OJPEGLibjpegSessionAbort>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    0x350(%rdi),%rax
movzbl 0x260(%rax),%ecx
test   %cl,%cl
jne    3e959 <OJPEGLibjpegSessionAbort+0x39>
lea    0x337d6(%rip),%rdi        # 72117 <module.53+0x2a>
lea    0x3344c(%rip),%rsi        # 71d94 <module.15+0x28>
mov    $0x4e5,%edx
lea    0x33d8e(%rip),%rcx        # 726e2 <module.81+0x74>
callq  8490 <__assert_fail@plt>
lea    0x310(%rax),%rdi
mov    %r15,-0x8(%rbp)
mov    %rax,%r15
callq  81f0 <jpeg_destroy@plt>
movb   $0x0,0x260(%r15)
mov    -0x8(%rbp),%r15
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

000000000003e980 <OJPEGReadHeaderInfoSec>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    0x350(%rdi),%r12
mov    0xf0(%r12),%rax
test   %rax,%rax
je     3e9b5 <OJPEGReadHeaderInfoSec+0x35>
mov    %rdi,%rbx
jmp    3e9d0 <OJPEGReadHeaderInfoSec+0x50>
mov    %rdi,%rbx
mov    0x3e0(%rbx),%rax
mov    0x3b8(%rbx),%rdi
callq  *%rax
mov    %rax,0xf0(%r12)
mov    0x110(%r12),%rdx
test   %rdx,%rdx
jne    3ea27 <OJPEGReadHeaderInfoSec+0xa7>
movl   $0x0,0x638(%r12)
movl   $0x0,0x63c(%r12)
mov    0xe4(%rbx),%eax
mov    %eax,0x640(%r12)
movq   $0x0,0x658(%r12)
movw   $0x0,0x660(%r12)
lea    -0x2b(%rbp),%r14
xor    %r13d,%r13d
lea    -0x2a(%rbp),%r15
jmp    3ea6a <OJPEGReadHeaderInfoSec+0xea>
mov    0xf0(%r12),%rax
cmp    %rax,%rdx
jae    3ea8e <OJPEGReadHeaderInfoSec+0x10e>
mov    0x118(%r12),%rcx
test   %rcx,%rcx
je     3ea49 <OJPEGReadHeaderInfoSec+0xc9>
add    %rdx,%rcx
cmp    %rcx,%rax
jae    3e9dd <OJPEGReadHeaderInfoSec+0x5d>
sub    %rdx,%rax
mov    %rax,0x118(%r12)
jmp    3e9dd <OJPEGReadHeaderInfoSec+0x5d>
mov    %rbx,%rdi
callq  3f1c0 <OJPEGReadHeaderInfoSecStreamDht>
test   %eax,%eax
je     3eaab <OJPEGReadHeaderInfoSec+0x12b>
movzbl -0x2b(%rbp),%eax
cmp    $0xda,%al
je     3eac4 <OJPEGReadHeaderInfoSec+0x144>
mov    %r12,%rdi
mov    %r14,%rsi
callq  40760 <OJPEGReadBytePeek>
test   %eax,%eax
je     3eaec <OJPEGReadHeaderInfoSec+0x16c>
movzbl -0x2b(%rbp),%eax
cmp    $0xfe,%al
jbe    3eac4 <OJPEGReadHeaderInfoSec+0x144>
mov    %r12,%rdi
callq  407f0 <OJPEGReadByteAdvance>
jmpq   3eb0f <OJPEGReadHeaderInfoSec+0x18f>
movq   $0x0,0x110(%r12)
movq   $0x0,0x118(%r12)
jmpq   3e9dd <OJPEGReadHeaderInfoSec+0x5d>
mov    %r13,%rax
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
leaveq 
retq   
movzbl 0x121(%r12),%eax
test   %al,%al
je     3eb37 <OJPEGReadHeaderInfoSec+0x1b7>
mov    $0x1,%eax
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
leaveq 
retq   
mov    %r13,%rax
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
leaveq 
retq   
movzbl -0x2b(%rbp),%esi
cmp    $0xff,%sil
jne    3eb63 <OJPEGReadHeaderInfoSec+0x1e3>
mov    %r12,%rdi
mov    %r14,%rsi
callq  406b0 <OJPEGReadByte>
test   %eax,%eax
jne    3eb05 <OJPEGReadHeaderInfoSec+0x185>
mov    %r13,%rax
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
leaveq 
retq   
movzbl 0x1db(%r12),%eax
test   %al,%al
je     3ebcd <OJPEGReadHeaderInfoSec+0x24d>
mov    $0x1,%eax
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
leaveq 
retq   
lea    -0xc0(%rsi),%eax
cmp    $0x3e,%eax
ja     3ebf6 <OJPEGReadHeaderInfoSec+0x276>
lea    0x330ab(%rip),%rcx        # 71c24 <module.12+0xc7>
movslq (%rcx,%rax,4),%rax
add    %rcx,%rax
jmpq   *%rax
movzbl 0x121(%r12),%eax
test   %al,%al
jne    3ecfa <OJPEGReadHeaderInfoSec+0x37a>
movzbl 0x10d(%r12),%eax
test   %al,%al
jne    3ed15 <OJPEGReadHeaderInfoSec+0x395>
mov    %rbx,%rdi
callq  3fa00 <OJPEGReadHeaderInfoSecStreamSos>
test   %eax,%eax
jne    3ea62 <OJPEGReadHeaderInfoSec+0xe2>
mov    %r13,%rax
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
leaveq 
retq   
mov    %rbx,%rdi
callq  3fbf0 <OJPEGReadHeaderInfoSecTablesQTable>
test   %eax,%eax
jne    3ed34 <OJPEGReadHeaderInfoSec+0x3b4>
mov    %r13,%rax
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rbx),%rdi
mov    %rsi,%rcx
lea    0x33b4d(%rip),%rdx        # 72756 <module.86+0x5b>
lea    0x33aeb(%rip),%rsi        # 726fb <module.86>
callq  8a00 <TIFFErrorExt@plt>
mov    %r13,%rax
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
leaveq 
retq   
mov    %r12,%rdi
mov    %r15,%rsi
callq  40840 <OJPEGReadWord>
test   %eax,%eax
je     3ed42 <OJPEGReadHeaderInfoSec+0x3c2>
movzwl -0x2a(%rbp),%eax
cmp    $0x1,%ax
jbe    3ed5b <OJPEGReadHeaderInfoSec+0x3db>
cmp    $0x2,%ax
jbe    3ea62 <OJPEGReadHeaderInfoSec+0xe2>
lea    0xfffe(%rax),%esi
mov    %r12,%rdi
callq  409d0 <OJPEGReadSkip>
jmpq   3ea62 <OJPEGReadHeaderInfoSec+0xe2>
mov    %rbx,%rdi
callq  3eee0 <OJPEGReadHeaderInfoSecStreamDri>
test   %eax,%eax
jne    3ea62 <OJPEGReadHeaderInfoSec+0xe2>
mov    %r13,%rax
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
leaveq 
retq   
mov    %rbx,%rdi
callq  3ef70 <OJPEGReadHeaderInfoSecStreamDqt>
test   %eax,%eax
jne    3ea62 <OJPEGReadHeaderInfoSec+0xe2>
mov    %r13,%rax
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
leaveq 
retq   
mov    %rbx,%rdi
callq  3f440 <OJPEGReadHeaderInfoSecStreamSof>
test   %eax,%eax
je     3ed81 <OJPEGReadHeaderInfoSec+0x401>
movzbl 0x121(%r12),%eax
test   %al,%al
je     3ea62 <OJPEGReadHeaderInfoSec+0xe2>
mov    $0x1,%eax
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
leaveq 
retq   
mov    $0x1,%eax
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
leaveq 
retq   
lea    0x33a08(%rip),%rdi        # 72724 <module.86+0x29>
lea    0x33071(%rip),%rsi        # 71d94 <module.15+0x28>
mov    $0x54b,%edx
lea    0x33a10(%rip),%rcx        # 7273f <module.86+0x44>
callq  8490 <__assert_fail@plt>
movb   $0xc0,0x1dc(%r12)
mov    %r13,%rax
jmp    3eda8 <OJPEGReadHeaderInfoSec+0x428>
mov    %r13,%rax
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
leaveq 
retq   
movzbl 0x121(%r12),%eax
test   %al,%al
je     3eddb <OJPEGReadHeaderInfoSec+0x45b>
mov    %r13,%rax
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
leaveq 
retq   
mov    %r13,%rax
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
leaveq 
retq   
movzbl %al,%ecx
mov    %al,0x1e8(%r12,%rcx,1)
add    $0x1,%eax
movzbl 0x10c(%r12),%ecx
cmp    %al,%cl
ja     3ed9a <OJPEGReadHeaderInfoSec+0x41a>
movzbl 0x125(%r12),%eax
movzbl 0x124(%r12),%ecx
shl    $0x4,%ecx
or     %cl,%al
mov    %al,0x1eb(%r12)
mov    $0x1,%eax
jmp    3ee1f <OJPEGReadHeaderInfoSec+0x49f>
xor    %eax,%eax
mov    0x3b8(%rbx),%rdi
lea    0x33927(%rip),%rdx        # 72712 <module.86+0x17>
lea    0x33909(%rip),%rsi        # 726fb <module.86>
callq  8a00 <TIFFErrorExt@plt>
mov    %r13,%rax
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
leaveq 
retq   
movzbl %al,%ecx
movb   $0x11,0x1eb(%r12,%rcx,1)
add    $0x1,%eax
movzbl 0x10c(%r12),%ecx
cmp    %al,%cl
ja     3ee10 <OJPEGReadHeaderInfoSec+0x490>
mov    0x100(%r12),%eax
mov    %eax,0x1e0(%r12)
mov    0x108(%r12),%eax
mov    %eax,0x1e4(%r12)
movb   $0x1,0x1db(%r12)
mov    %rbx,%rdi
callq  3fe20 <OJPEGReadHeaderInfoSecTablesDcTable>
test   %eax,%eax
jne    3ee7a <OJPEGReadHeaderInfoSec+0x4fa>
mov    %r13,%rax
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
leaveq 
retq   
mov    %rbx,%rdi
callq  400d0 <OJPEGReadHeaderInfoSecTablesAcTable>
test   %eax,%eax
jne    3ee9f <OJPEGReadHeaderInfoSec+0x51f>
mov    %r13,%rax
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
leaveq 
retq   
mov    $0x1,%eax
jmp    3eeb4 <OJPEGReadHeaderInfoSec+0x534>
movzbl %al,%ecx
mov    %al,0x1f1(%r12,%rcx,1)
add    $0x1,%eax
movzbl 0x10c(%r12),%ecx
cmp    %al,%cl
ja     3eea6 <OJPEGReadHeaderInfoSec+0x526>
mov    $0x1,%eax
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
leaveq 
retq   
nopl   0x0(%rax)

000000000003eee0 <OJPEGReadHeaderInfoSecStreamDri>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %rdi,-0x8(%rbp)
mov    0x350(%rdi),%rdi
mov    %rdi,-0x10(%rbp)
lea    -0x12(%rbp),%rsi
callq  40840 <OJPEGReadWord>
test   %eax,%eax
jne    3ef08 <OJPEGReadHeaderInfoSecStreamDri+0x28>
xor    %eax,%eax
leaveq 
retq   
movzwl -0x12(%rbp),%eax
cmp    $0x4,%ax
jne    3ef27 <OJPEGReadHeaderInfoSecStreamDri+0x47>
mov    -0x10(%rbp),%rdi
lea    -0x12(%rbp),%rsi
callq  40840 <OJPEGReadWord>
test   %eax,%eax
jne    3ef4b <OJPEGReadHeaderInfoSecStreamDri+0x6b>
xor    %eax,%eax
leaveq 
retq   
xor    %eax,%eax
mov    -0x8(%rbp),%rcx
mov    0x3b8(%rcx),%rdi
lea    0x3383f(%rip),%rsi        # 7277a <module.91>
lea    0x33858(%rip),%rdx        # 7279a <module.91+0x20>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
movzwl -0x12(%rbp),%eax
mov    -0x10(%rbp),%rcx
mov    %ax,0x1d8(%rcx)
mov    $0x1,%eax
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   0x0(%rax)

000000000003ef70 <OJPEGReadHeaderInfoSecStreamDqt>:
push   %rbp
mov    %rsp,%rbp
sub    $0x40,%rsp
mov    %rdi,-0x8(%rbp)
mov    0x350(%rdi),%rdi
mov    %rdi,-0x30(%rbp)
lea    -0x32(%rbp),%rsi
callq  40840 <OJPEGReadWord>
test   %eax,%eax
jne    3ef98 <OJPEGReadHeaderInfoSecStreamDqt+0x28>
xor    %eax,%eax
leaveq 
retq   
lea    0x3381b(%rip),%rsi        # 727ba <module.93>
lea    0x33834(%rip),%rdx        # 727da <module.93+0x20>
movzwl -0x32(%rbp),%ecx
cmp    $0x2,%cx
jbe    3eff5 <OJPEGReadHeaderInfoSecStreamDqt+0x85>
mov    -0x30(%rbp),%rdi
movzbl 0x121(%rdi),%eax
test   %al,%al
jne    3f00c <OJPEGReadHeaderInfoSecStreamDqt+0x9c>
lea    0xfffe(%rcx),%eax
mov    %ax,-0x32(%rbp)
mov    $0x49,%eax
mov    $0x41,%ecx
mov    %rbx,-0x10(%rbp)
mov    %r12,-0x18(%rbp)
mov    %r13,-0x20(%rbp)
mov    %r14,-0x28(%rbp)
mov    %r15,-0x30(%rbp)
mov    %rdi,%rbx
mov    %rax,%r12
mov    %rcx,%r13
jmpq   3f0a9 <OJPEGReadHeaderInfoSecStreamDqt+0x139>
mov    -0x30(%rbp),%rax
movzbl 0x121(%rax),%eax
test   %al,%al
je     3f0ef <OJPEGReadHeaderInfoSecStreamDqt+0x17f>
xor    %eax,%eax
leaveq 
retq   
lea    0xfffe(%rcx),%esi
callq  409d0 <OJPEGReadSkip>
mov    $0x1,%eax
leaveq 
retq   
mov    %r12,%rdi
callq  8440 <_TIFFmalloc@plt>
test   %rax,%rax
je     3f105 <OJPEGReadHeaderInfoSecStreamDqt+0x195>
mov    %rax,%r14
movl   $0x49,(%r14)
movb   $0xff,0x4(%r14)
movb   $0xdb,0x5(%r14)
movb   $0x0,0x6(%r14)
movb   $0x43,0x7(%r14)
lea    0x8(%r14),%r15
mov    %rbx,%rdi
mov    %r13,%rsi
mov    %r15,%rdx
callq  408a0 <OJPEGReadBlock>
test   %eax,%eax
je     3f13d <OJPEGReadHeaderInfoSecStreamDqt+0x1cd>
movzbl (%r15),%eax
and    $0xf,%al
cmp    $0x3,%al
ja     3f15d <OJPEGReadHeaderInfoSecStreamDqt+0x1ed>
movzbl %al,%r15d
mov    0x178(%rbx,%r15,8),%rdi
test   %rdi,%rdi
je     3f08b <OJPEGReadHeaderInfoSecStreamDqt+0x11b>
callq  8bb0 <_TIFFfree@plt>
mov    %r14,0x178(%rbx,%r15,8)
movzwl -0x32(%rbp),%eax
add    $0xffbf,%eax
mov    %ax,-0x32(%rbp)
test   %ax,%ax
je     3f19d <OJPEGReadHeaderInfoSecStreamDqt+0x22d>
movzwl -0x32(%rbp),%eax
cmp    $0x40,%ax
ja     3f01e <OJPEGReadHeaderInfoSecStreamDqt+0xae>
xor    %eax,%eax
mov    -0x8(%rbp),%rcx
mov    0x3b8(%rcx),%rdi
lea    0x3370f(%rip),%rdx        # 727da <module.93+0x20>
lea    0x336e8(%rip),%rsi        # 727ba <module.93>
callq  8a00 <TIFFErrorExt@plt>
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
mov    -0x10(%rbp),%rbx
xor    %eax,%eax
leaveq 
retq   
xor    %eax,%eax
mov    -0x8(%rbp),%rcx
mov    0x3b8(%rcx),%rdi
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
xor    %eax,%eax
mov    -0x8(%rbp),%rcx
mov    0x3b8(%rcx),%rdi
lea    0x32f49(%rip),%rdx        # 72062 <module.45+0x1c>
lea    0x3369a(%rip),%rsi        # 727ba <module.93>
callq  8a00 <TIFFErrorExt@plt>
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
mov    -0x10(%rbp),%rbx
xor    %eax,%eax
leaveq 
retq   
mov    %r14,%rdi
callq  8bb0 <_TIFFfree@plt>
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
mov    -0x10(%rbp),%rbx
xor    %eax,%eax
leaveq 
retq   
xor    %eax,%eax
mov    -0x8(%rbp),%rcx
mov    0x3b8(%rcx),%rdi
lea    0x33669(%rip),%rdx        # 727da <module.93+0x20>
lea    0x33642(%rip),%rsi        # 727ba <module.93>
callq  8a00 <TIFFErrorExt@plt>
mov    %r14,%rdi
callq  8bb0 <_TIFFfree@plt>
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
mov    -0x10(%rbp),%rbx
xor    %eax,%eax
leaveq 
retq   
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
mov    -0x10(%rbp),%rbx
mov    $0x1,%eax
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

000000000003f1c0 <OJPEGReadHeaderInfoSecStreamDht>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    %rdi,-0x8(%rbp)
mov    0x350(%rdi),%rdi
mov    %rdi,-0x20(%rbp)
lea    -0x22(%rbp),%rsi
callq  40840 <OJPEGReadWord>
test   %eax,%eax
jne    3f1e8 <OJPEGReadHeaderInfoSecStreamDht+0x28>
xor    %eax,%eax
leaveq 
retq   
lea    0x3360b(%rip),%rsi        # 727fa <module.95>
lea    0x33624(%rip),%rdx        # 7281a <module.95+0x20>
movzwl -0x22(%rbp),%ecx
cmp    $0x2,%cx
jbe    3f2e0 <OJPEGReadHeaderInfoSecStreamDht+0x120>
mov    -0x20(%rbp),%rdi
movzbl 0x121(%rdi),%eax
test   %al,%al
jne    3f2f7 <OJPEGReadHeaderInfoSecStreamDht+0x137>
lea    0x6(%rcx),%eax
mov    %eax,%edi
mov    %r15,-0x18(%rbp)
mov    %rax,%r15
callq  8440 <_TIFFmalloc@plt>
test   %rax,%rax
je     3f309 <OJPEGReadHeaderInfoSecStreamDht+0x149>
mov    %r15d,(%rax)
movb   $0xff,0x4(%rax)
movb   $0xc4,0x5(%rax)
movzwl -0x22(%rbp),%ecx
shr    $0x8,%ecx
mov    %cl,0x6(%rax)
movzbl -0x22(%rbp),%ecx
mov    %cl,0x7(%rax)
movzwl -0x22(%rbp),%ecx
lea    0xfffe(%rcx),%esi
lea    0x8(%rax),%r15
mov    -0x20(%rbp),%rdi
mov    %r15,%rdx
mov    %r14,-0x10(%rbp)
mov    %rax,%r14
callq  408a0 <OJPEGReadBlock>
test   %eax,%eax
je     3f331 <OJPEGReadHeaderInfoSecStreamDht+0x171>
movzbl (%r15),%r15d
mov    %r15,%rax
and    $0xf0,%eax
test   %eax,%eax
je     3f345 <OJPEGReadHeaderInfoSecStreamDht+0x185>
cmp    $0x10,%eax
jne    3f38a <OJPEGReadHeaderInfoSecStreamDht+0x1ca>
and    $0xf,%r15b
cmp    $0x3,%r15b
ja     3f3be <OJPEGReadHeaderInfoSecStreamDht+0x1fe>
movzbl %r15b,%r15d
mov    -0x20(%rbp),%rax
mov    0x1b8(%rax,%r15,8),%rdi
test   %rdi,%rdi
je     3f2c9 <OJPEGReadHeaderInfoSecStreamDht+0x109>
mov    %r13,-0x20(%rbp)
mov    %rax,%r13
callq  8bb0 <_TIFFfree@plt>
mov    %r13,%rax
mov    -0x20(%rbp),%r13
mov    %r14,0x1b8(%rax,%r15,8)
mov    -0x10(%rbp),%r14
mov    $0x1,%eax
mov    -0x18(%rbp),%r15
leaveq 
retq   
mov    -0x20(%rbp),%rax
movzbl 0x121(%rax),%eax
test   %al,%al
je     3f3f2 <OJPEGReadHeaderInfoSecStreamDht+0x232>
xor    %eax,%eax
leaveq 
retq   
lea    0xfffe(%rcx),%esi
callq  409d0 <OJPEGReadSkip>
mov    $0x1,%eax
leaveq 
retq   
xor    %eax,%eax
mov    -0x8(%rbp),%rcx
mov    0x3b8(%rcx),%rdi
lea    0x32d45(%rip),%rdx        # 72062 <module.45+0x1c>
lea    0x334d6(%rip),%rsi        # 727fa <module.95>
callq  8a00 <TIFFErrorExt@plt>
mov    -0x18(%rbp),%r15
xor    %eax,%eax
leaveq 
retq   
mov    %r14,%rdi
callq  8bb0 <_TIFFfree@plt>
mov    -0x10(%rbp),%r14
mov    -0x18(%rbp),%r15
xor    %eax,%eax
leaveq 
retq   
cmp    $0x3,%r15b
ja     3f408 <OJPEGReadHeaderInfoSecStreamDht+0x248>
mov    -0x20(%rbp),%rax
mov    0x198(%rax,%r15,8),%rdi
test   %rdi,%rdi
je     3f373 <OJPEGReadHeaderInfoSecStreamDht+0x1b3>
mov    %r13,-0x20(%rbp)
mov    %rax,%r13
callq  8bb0 <_TIFFfree@plt>
mov    %r13,%rax
mov    -0x20(%rbp),%r13
mov    %r14,0x198(%rax,%r15,8)
mov    -0x10(%rbp),%r14
mov    $0x1,%eax
mov    -0x18(%rbp),%r15
leaveq 
retq   
xor    %eax,%eax
mov    -0x8(%rbp),%rcx
mov    0x3b8(%rcx),%rdi
lea    0x3347c(%rip),%rdx        # 7281a <module.95+0x20>
lea    0x33455(%rip),%rsi        # 727fa <module.95>
callq  8a00 <TIFFErrorExt@plt>
mov    %r14,%rdi
callq  8bb0 <_TIFFfree@plt>
mov    -0x10(%rbp),%r14
mov    -0x18(%rbp),%r15
xor    %eax,%eax
leaveq 
retq   
xor    %eax,%eax
mov    -0x8(%rbp),%rcx
mov    0x3b8(%rcx),%rdi
lea    0x33448(%rip),%rdx        # 7281a <module.95+0x20>
lea    0x33421(%rip),%rsi        # 727fa <module.95>
callq  8a00 <TIFFErrorExt@plt>
mov    %r14,%rdi
callq  8bb0 <_TIFFfree@plt>
mov    -0x10(%rbp),%r14
mov    -0x18(%rbp),%r15
xor    %eax,%eax
leaveq 
retq   
xor    %eax,%eax
mov    -0x8(%rbp),%rcx
mov    0x3b8(%rcx),%rdi
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
xor    %eax,%eax
mov    -0x8(%rbp),%rcx
mov    0x3b8(%rcx),%rdi
lea    0x333fe(%rip),%rdx        # 7281a <module.95+0x20>
lea    0x333d7(%rip),%rsi        # 727fa <module.95>
callq  8a00 <TIFFErrorExt@plt>
mov    %r14,%rdi
callq  8bb0 <_TIFFfree@plt>
mov    -0x10(%rbp),%r14
mov    -0x18(%rbp),%r15
xor    %eax,%eax
leaveq 
retq   
nopl   0x0(%rax)

000000000003f440 <OJPEGReadHeaderInfoSecStreamSof>:
push   %rbp
mov    %rsp,%rbp
sub    $0x40,%rsp
lea    0x333eb(%rip),%r8        # 7283a <module.97>
mov    0x350(%rdi),%rcx
movzbl 0x1db(%rcx),%eax
test   %al,%al
jne    3f492 <OJPEGReadHeaderInfoSecStreamSof+0x52>
movzbl 0x121(%rcx),%eax
test   %al,%al
jne    3f473 <OJPEGReadHeaderInfoSecStreamSof+0x33>
mov    %sil,0x1dc(%rcx)
lea    -0x3e(%rbp),%rsi
mov    %rcx,%rax
mov    %rcx,-0x38(%rbp)
mov    %rdi,-0x8(%rbp)
mov    %rax,%rdi
callq  40840 <OJPEGReadWord>
test   %eax,%eax
jne    3f4ae <OJPEGReadHeaderInfoSecStreamSof+0x6e>
xor    %eax,%eax
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
mov    %r8,%rsi
lea    0x3326d(%rip),%rdx        # 72712 <module.86+0x17>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
lea    0x333a5(%rip),%rcx        # 7285a <module.97+0x20>
movzwl -0x3e(%rbp),%eax
cmp    $0xa,%ax
jbe    3f51a <OJPEGReadHeaderInfoSecStreamSof+0xda>
add    $0xfff8,%eax
mov    %ax,-0x3e(%rbp)
movzwl %ax,%edi
mov    $0x55555556,%esi
mov    %rsi,%rax
imul   %edi
mov    %rdx,%rax
shr    $0x1f,%eax
add    %edx,%eax
lea    (%rax,%rax,2),%eax
cmp    %eax,%edi
jne    3f52d <OJPEGReadHeaderInfoSecStreamSof+0xed>
mov    %rsi,%rax
movzwl -0x3e(%rbp),%ecx
imul   %ecx
mov    %rdx,%rax
shr    $0x1f,%eax
lea    (%rdx,%rax,1),%ecx
mov    -0x38(%rbp),%rdi
movzbl 0x121(%rdi),%eax
test   %al,%al
je     3f544 <OJPEGReadHeaderInfoSecStreamSof+0x104>
lea    -0x3b(%rbp),%rsi
mov    %rcx,-0x30(%rbp)
callq  406b0 <OJPEGReadByte>
test   %eax,%eax
jne    3f574 <OJPEGReadHeaderInfoSecStreamSof+0x134>
xor    %eax,%eax
leaveq 
retq   
mov    -0x38(%rbp),%rax
movzbl 0x121(%rax),%eax
test   %al,%al
je     3f5a0 <OJPEGReadHeaderInfoSecStreamSof+0x160>
xor    %eax,%eax
leaveq 
retq   
mov    -0x38(%rbp),%rax
movzbl 0x121(%rax),%eax
test   %al,%al
je     3f5c0 <OJPEGReadHeaderInfoSecStreamSof+0x180>
xor    %eax,%eax
leaveq 
retq   
movzbl 0x10c(%rdi),%eax
cmp    %cx,%ax
je     3f505 <OJPEGReadHeaderInfoSecStreamSof+0xc5>
xor    %eax,%eax
mov    -0x8(%rbp),%rcx
mov    0x3b8(%rcx),%rdi
lea    0x33316(%rip),%rdx        # 7287a <module.97+0x40>
lea    0x332cf(%rip),%rsi        # 7283a <module.97>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
movzbl -0x3b(%rbp),%eax
cmp    $0x8,%al
jne    3f5e0 <OJPEGReadHeaderInfoSecStreamSof+0x1a0>
mov    -0x38(%rbp),%rdi
movzbl 0x121(%rdi),%eax
test   %al,%al
jne    3f5f3 <OJPEGReadHeaderInfoSecStreamSof+0x1b3>
lea    -0x3a(%rbp),%rsi
callq  40840 <OJPEGReadWord>
test   %eax,%eax
jne    3f622 <OJPEGReadHeaderInfoSecStreamSof+0x1e2>
xor    %eax,%eax
leaveq 
retq   
xor    %eax,%eax
mov    -0x8(%rbp),%rdx
mov    0x3b8(%rdx),%rdi
mov    %rcx,%rdx
lea    0x33283(%rip),%rsi        # 7283a <module.97>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
xor    %eax,%eax
mov    -0x8(%rbp),%rdx
mov    0x3b8(%rdx),%rdi
mov    %rcx,%rdx
lea    0x33263(%rip),%rsi        # 7283a <module.97>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
mov    -0x38(%rbp),%rax
movzbl 0x121(%rax),%eax
test   %al,%al
je     3f653 <OJPEGReadHeaderInfoSecStreamSof+0x213>
xor    %eax,%eax
leaveq 
retq   
mov    $0x4,%esi
mov    %rdi,%rax
mov    %r15,-0x28(%rbp)
mov    %rdi,%r15
mov    %rax,%rdi
callq  409d0 <OJPEGReadSkip>
mov    %r15,%rdi
mov    -0x28(%rbp),%r15
lea    -0x3b(%rbp),%rsi
callq  406b0 <OJPEGReadByte>
test   %eax,%eax
jne    3f677 <OJPEGReadHeaderInfoSecStreamSof+0x237>
xor    %eax,%eax
leaveq 
retq   
movzwl -0x3a(%rbp),%ecx
mov    -0x38(%rbp),%rdi
mov    0xfc(%rdi),%eax
cmp    %ecx,%eax
ja     3f6af <OJPEGReadHeaderInfoSecStreamSof+0x26f>
movzwl -0x3a(%rbp),%eax
mov    %eax,0x1e4(%rdi)
lea    -0x3a(%rbp),%rsi
callq  40840 <OJPEGReadWord>
test   %eax,%eax
jne    3f6df <OJPEGReadHeaderInfoSecStreamSof+0x29f>
xor    %eax,%eax
leaveq 
retq   
xor    %eax,%eax
mov    -0x8(%rbp),%rcx
mov    0x3b8(%rcx),%rdi
lea    0x3324f(%rip),%rdx        # 728b6 <module.97+0x7c>
lea    0x331cc(%rip),%rsi        # 7283a <module.97>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
movzbl -0x3b(%rbp),%eax
mov    -0x30(%rbp),%rcx
cmp    %ax,%cx
jne    3f712 <OJPEGReadHeaderInfoSecStreamSof+0x2d2>
mov    %r15,-0x30(%rbp)
mov    %rbx,-0x10(%rbp)
mov    %r12,-0x18(%rbp)
mov    %r13,-0x20(%rbp)
mov    %r14,-0x28(%rbp)
mov    %rcx,%r12
lea    -0x3b(%rbp),%rbx
xor    %r14d,%r14d
mov    -0x38(%rbp),%r13
jmpq   3f772 <OJPEGReadHeaderInfoSecStreamSof+0x332>
cmp    0x108(%rdi),%ecx
jae    3f634 <OJPEGReadHeaderInfoSecStreamSof+0x1f4>
xor    %eax,%eax
mov    -0x8(%rbp),%rcx
mov    0x3b8(%rcx),%rdi
lea    0x3322b(%rip),%rdx        # 728fa <module.97+0xc0>
lea    0x33164(%rip),%rsi        # 7283a <module.97>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
movzwl -0x3a(%rbp),%ecx
mov    -0x38(%rbp),%rdi
mov    0xf8(%rdi),%eax
cmp    %ecx,%eax
ja     3f7a7 <OJPEGReadHeaderInfoSecStreamSof+0x367>
mov    0x100(%rdi),%ecx
movzwl -0x3a(%rbp),%eax
cmp    %eax,%ecx
jb     3f7d7 <OJPEGReadHeaderInfoSecStreamSof+0x397>
mov    %eax,0x1e0(%rdi)
jmpq   3f611 <OJPEGReadHeaderInfoSecStreamSof+0x1d1>
mov    -0x38(%rbp),%rax
movzbl 0x121(%rax),%eax
test   %al,%al
je     3f7fb <OJPEGReadHeaderInfoSecStreamSof+0x3bb>
xor    %eax,%eax
leaveq 
retq   
test   %r14w,%r14w
je     3f81f <OJPEGReadHeaderInfoSecStreamSof+0x3df>
movzbl -0x3b(%rbp),%eax
cmp    $0x11,%al
je     3f743 <OJPEGReadHeaderInfoSecStreamSof+0x303>
movb   $0x1,0x126(%r13)
mov    %r13,%rdi
mov    %rbx,%rsi
callq  406b0 <OJPEGReadByte>
test   %eax,%eax
je     3f861 <OJPEGReadHeaderInfoSecStreamSof+0x421>
movzbl 0x121(%r13),%eax
test   %al,%al
jne    3f76e <OJPEGReadHeaderInfoSecStreamSof+0x32e>
movzbl -0x3b(%rbp),%eax
mov    %al,0x1ee(%r13,%r15,1)
add    $0x1,%r14d
cmp    %r14w,%r12w
ja     3f879 <OJPEGReadHeaderInfoSecStreamSof+0x439>
mov    $0x1,%eax
movzbl 0x121(%r13),%ecx
test   %cl,%cl
je     3f932 <OJPEGReadHeaderInfoSecStreamSof+0x4f2>
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
mov    -0x10(%rbp),%rbx
mov    -0x30(%rbp),%r15
leaveq 
retq   
cmp    0x100(%rdi),%ecx
jae    3f6f5 <OJPEGReadHeaderInfoSecStreamSof+0x2b5>
xor    %eax,%eax
mov    -0x8(%rbp),%rcx
mov    0x3b8(%rcx),%rdi
lea    0x33164(%rip),%rdx        # 7292b <module.97+0xf1>
lea    0x3306c(%rip),%rsi        # 7283a <module.97>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
xor    %eax,%eax
mov    -0x8(%rbp),%rcx
mov    0x3b8(%rcx),%rdi
lea    0x33170(%rip),%rdx        # 7295b <module.97+0x121>
lea    0x33048(%rip),%rsi        # 7283a <module.97>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
xor    %eax,%eax
mov    -0x8(%rbp),%rcx
mov    0x3b8(%rcx),%rdi
lea    0x3304b(%rip),%rdx        # 7285a <module.97+0x20>
lea    0x33024(%rip),%rsi        # 7283a <module.97>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
movzbl -0x3b(%rbp),%eax
mov    %rax,%rcx
shr    $0x4,%ecx
mov    %cl,0x124(%r13)
and    $0xf,%al
mov    %al,0x125(%r13)
cmp    $0x1,%cl
je     3f950 <OJPEGReadHeaderInfoSecStreamSof+0x510>
cmp    $0x2,%cl
je     3f950 <OJPEGReadHeaderInfoSecStreamSof+0x510>
cmp    $0x4,%cl
je     3f950 <OJPEGReadHeaderInfoSecStreamSof+0x510>
movb   $0x1,0x126(%r13)
jmpq   3f743 <OJPEGReadHeaderInfoSecStreamSof+0x303>
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
mov    -0x10(%rbp),%rbx
mov    -0x30(%rbp),%r15
xor    %eax,%eax
leaveq 
retq   
mov    %r13,%rdi
mov    %rbx,%rsi
callq  406b0 <OJPEGReadByte>
test   %eax,%eax
je     3f96d <OJPEGReadHeaderInfoSecStreamSof+0x52d>
movzwl %r14w,%r15d
movzbl 0x121(%r13),%eax
test   %al,%al
jne    3f8a8 <OJPEGReadHeaderInfoSecStreamSof+0x468>
movzbl -0x3b(%rbp),%eax
mov    %al,0x1e8(%r13,%r15,1)
mov    %r13,%rdi
mov    %rbx,%rsi
callq  406b0 <OJPEGReadByte>
test   %eax,%eax
je     3f985 <OJPEGReadHeaderInfoSecStreamSof+0x545>
movzbl 0x121(%r13),%eax
test   %al,%al
jne    3f729 <OJPEGReadHeaderInfoSecStreamSof+0x2e9>
movzbl -0x3b(%rbp),%edx
mov    %dl,0x1eb(%r13,%r15,1)
movzbl 0x126(%r13),%eax
test   %al,%al
jne    3f743 <OJPEGReadHeaderInfoSecStreamSof+0x303>
test   %r14w,%r14w
je     3f99d <OJPEGReadHeaderInfoSecStreamSof+0x55d>
cmp    $0x11,%dl
je     3f743 <OJPEGReadHeaderInfoSecStreamSof+0x303>
xor    %eax,%eax
mov    -0x8(%rbp),%rcx
mov    0x3b8(%rcx),%rdi
lea    0x3308b(%rip),%rdx        # 72999 <module.97+0x15f>
lea    0x32f25(%rip),%rsi        # 7283a <module.97>
callq  8a00 <TIFFErrorExt@plt>
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
mov    -0x10(%rbp),%rbx
mov    -0x30(%rbp),%r15
xor    %eax,%eax
leaveq 
retq   
movb   $0x1,0x1db(%r13)
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
mov    -0x10(%rbp),%rbx
mov    -0x30(%rbp),%r15
leaveq 
retq   
cmp    $0x1,%al
je     3f743 <OJPEGReadHeaderInfoSecStreamSof+0x303>
cmp    $0x2,%al
je     3f743 <OJPEGReadHeaderInfoSecStreamSof+0x303>
cmp    $0x4,%al
jne    3f854 <OJPEGReadHeaderInfoSecStreamSof+0x414>
jmpq   3f743 <OJPEGReadHeaderInfoSecStreamSof+0x303>
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
mov    -0x10(%rbp),%rbx
mov    -0x30(%rbp),%r15
xor    %eax,%eax
leaveq 
retq   
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
mov    -0x10(%rbp),%rbx
mov    -0x30(%rbp),%r15
xor    %eax,%eax
leaveq 
retq   
movzbl 0x125(%r13),%eax
movzbl 0x124(%r13),%ecx
shl    $0x4,%ecx
or     %ecx,%eax
cmp    %edx,%eax
je     3f743 <OJPEGReadHeaderInfoSecStreamSof+0x303>
xor    %eax,%eax
mov    -0x8(%rbp),%rcx
mov    0x3b8(%rcx),%rdi
lea    0x32fcb(%rip),%rdx        # 72999 <module.97+0x15f>
lea    0x32e65(%rip),%rsi        # 7283a <module.97>
callq  8a00 <TIFFErrorExt@plt>
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
mov    -0x10(%rbp),%rbx
mov    -0x30(%rbp),%r15
xor    %eax,%eax
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   (%rax)

000000000003fa00 <OJPEGReadHeaderInfoSecStreamSos>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    0x350(%rdi),%rcx
movzbl 0x121(%rcx),%eax
test   %al,%al
je     3fa39 <OJPEGReadHeaderInfoSecStreamSos+0x39>
lea    0x32fd5(%rip),%rdi        # 729f6 <module.105+0x20>
lea    0x3236c(%rip),%rsi        # 71d94 <module.15+0x28>
mov    $0x6ae,%edx
lea    0x32fdc(%rip),%rcx        # 72a10 <module.105+0x3a>
callq  8490 <__assert_fail@plt>
lea    0x32f96(%rip),%rsi        # 729d6 <module.105>
lea    0x32fe9(%rip),%rdx        # 72a30 <module.105+0x5a>
movzbl 0x1db(%rcx),%eax
test   %al,%al
je     3fa78 <OJPEGReadHeaderInfoSecStreamSos+0x78>
lea    -0x24(%rbp),%rsi
mov    %rcx,%rax
mov    %r15,-0x20(%rbp)
mov    %rdi,-0x18(%rbp)
mov    %rax,%rdi
mov    %rcx,%r15
callq  40840 <OJPEGReadWord>
test   %eax,%eax
jne    3fa8a <OJPEGReadHeaderInfoSecStreamSos+0x8a>
xor    %eax,%eax
mov    -0x20(%rbp),%r15
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
movzbl 0x10e(%r15),%eax
lea    0x6(%rax,%rax,1),%ecx
movzwl -0x24(%rbp),%eax
cmp    %eax,%ecx
jne    3fab6 <OJPEGReadHeaderInfoSecStreamSos+0xb6>
lea    -0x21(%rbp),%rsi
mov    %r15,%rdi
callq  406b0 <OJPEGReadByte>
test   %eax,%eax
jne    3fade <OJPEGReadHeaderInfoSecStreamSos+0xde>
xor    %eax,%eax
mov    -0x20(%rbp),%r15
leaveq 
retq   
xor    %eax,%eax
mov    -0x18(%rbp),%rcx
mov    0x3b8(%rcx),%rdi
lea    0x32f66(%rip),%rdx        # 72a30 <module.105+0x5a>
lea    0x32f05(%rip),%rsi        # 729d6 <module.105>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x20(%rbp),%r15
leaveq 
retq   
movzbl 0x10e(%r15),%ecx
movzbl -0x21(%rbp),%eax
cmp    %al,%cl
jne    3fb06 <OJPEGReadHeaderInfoSecStreamSos+0x106>
mov    %r12,-0x8(%rbp)
mov    %r13,-0x10(%rbp)
mov    %r14,-0x18(%rbp)
lea    -0x21(%rbp),%r12
xor    %r13d,%r13d
jmpq   3fb88 <OJPEGReadHeaderInfoSecStreamSos+0x188>
xor    %eax,%eax
mov    -0x18(%rbp),%rcx
mov    0x3b8(%rcx),%rdi
lea    0x32f16(%rip),%rdx        # 72a30 <module.105+0x5a>
lea    0x32eb5(%rip),%rsi        # 729d6 <module.105>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x20(%rbp),%r15
leaveq 
retq   
mov    %r15,%rdi
mov    %r12,%rsi
callq  406b0 <OJPEGReadByte>
test   %eax,%eax
je     3fbb9 <OJPEGReadHeaderInfoSecStreamSos+0x1b9>
movzbl 0x10d(%r15),%eax
movzbl %r13b,%r14d
add    %r14d,%eax
movslq %eax,%rax
movzbl -0x21(%rbp),%ecx
mov    %cl,0x1f1(%r15,%rax,1)
mov    %r15,%rdi
mov    %r12,%rsi
callq  406b0 <OJPEGReadByte>
test   %eax,%eax
je     3fbcd <OJPEGReadHeaderInfoSecStreamSos+0x1cd>
movzbl 0x10d(%r15),%eax
add    %r14d,%eax
movslq %eax,%rax
movzbl -0x21(%rbp),%ecx
mov    %cl,0x1f4(%r15,%rax,1)
add    $0x1,%r13d
movzbl 0x10e(%r15),%eax
cmp    %al,%r13b
jb     3fb2e <OJPEGReadHeaderInfoSecStreamSos+0x12e>
mov    %r15,%rdi
mov    $0x3,%esi
callq  409d0 <OJPEGReadSkip>
mov    $0x1,%eax
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
mov    -0x20(%rbp),%r15
leaveq 
retq   
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
xor    %eax,%eax
mov    -0x20(%rbp),%r15
leaveq 
retq   
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
xor    %eax,%eax
mov    -0x20(%rbp),%r15
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   0x0(%rax)

000000000003fbf0 <OJPEGReadHeaderInfoSecTablesQTable>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
lea    0x32e51(%rip),%rsi        # 72a50 <module.109>
xor    %edx,%edx
mov    0x350(%rdi),%rcx
mov    0x130(%rcx),%rax
test   %rax,%rax
je     3fc45 <OJPEGReadHeaderInfoSecTablesQTable+0x55>
movb   $0x0,0x650(%rcx)
mov    $0x49,%eax
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rdi,%rbx
mov    %rax,%rdi
mov    %rcx,%r12
mov    %rdx,%r14
mov    %r14,%r13
jmp    3fc8b <OJPEGReadHeaderInfoSecTablesQTable+0x9b>
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
lea    0x32e1e(%rip),%rdx        # 72a73 <module.109+0x23>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
movzbl %r13b,%r15d
mov    0x130(%r12,%r15,8),%rax
test   %rax,%rax
jne    3fcb4 <OJPEGReadHeaderInfoSecTablesQTable+0xc4>
lea    -0x1(%r15),%eax
movslq %eax,%rax
movzbl 0x1ee(%r12,%rax,1),%eax
mov    %al,0x1ee(%r12,%r15,1)
add    $0x1,%r13d
movzbl 0x10c(%r12),%eax
cmp    %al,%r13b
jb     3fc5e <OJPEGReadHeaderInfoSecTablesQTable+0x6e>
mov    $0x1,%eax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
lea    -0x1(%r15),%edx
test   %r13b,%r13b
jne    3fcc2 <OJPEGReadHeaderInfoSecTablesQTable+0xd2>
mov    %r14,%rcx
jmp    3fcf0 <OJPEGReadHeaderInfoSecTablesQTable+0x100>
movslq %edx,%rcx
cmp    0x130(%r12,%rcx,8),%rax
je     3fc6f <OJPEGReadHeaderInfoSecTablesQTable+0x7f>
mov    %r14,%rcx
jmp    3fcf0 <OJPEGReadHeaderInfoSecTablesQTable+0x100>
movzbl %cl,%eax
mov    0x130(%r12,%rax,8),%rax
cmp    0x130(%r12,%r15,8),%rax
je     3fd93 <OJPEGReadHeaderInfoSecTablesQTable+0x1a3>
add    $0x1,%ecx
movzbl %cl,%eax
cmp    %eax,%edx
jg     3fcd4 <OJPEGReadHeaderInfoSecTablesQTable+0xe4>
callq  8440 <_TIFFmalloc@plt>
test   %rax,%rax
je     3fdc8 <OJPEGReadHeaderInfoSecTablesQTable+0x1d8>
mov    %r14,%rdx
mov    %rax,%r14
movl   $0x49,(%r14)
movb   $0xff,0x4(%r14)
movb   $0xdb,0x5(%r14)
movb   $0x0,0x6(%r14)
movb   $0x43,0x7(%r14)
mov    %r13b,0x8(%r14)
mov    0x130(%r12,%r15,8),%rsi
mov    0x3d0(%rbx),%rcx
mov    0x3b8(%rbx),%rdi
callq  *%rcx
mov    0x3c0(%rbx),%rax
mov    0x3b8(%rbx),%rdi
lea    0x9(%r14),%rsi
mov    $0x40,%edx
callq  *%rax
cmp    $0x40,%eax
jne    3fdfd <OJPEGReadHeaderInfoSecTablesQTable+0x20d>
mov    0x178(%r12,%r15,8),%rdi
test   %rdi,%rdi
je     3fd76 <OJPEGReadHeaderInfoSecTablesQTable+0x186>
callq  8bb0 <_TIFFfree@plt>
mov    %r14,0x178(%r12,%r15,8)
mov    %r13b,0x1ee(%r12,%r15,1)
xor    %r14d,%r14d
mov    $0x49,%edi
jmpq   3fc87 <OJPEGReadHeaderInfoSecTablesQTable+0x97>
xor    %eax,%eax
mov    0x3b8(%rbx),%rdi
lea    0x32ce4(%rip),%rdx        # 72a87 <module.109+0x37>
lea    0x32ca6(%rip),%rsi        # 72a50 <module.109>
callq  8a00 <TIFFErrorExt@plt>
mov    %r14,%rax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rbx),%rdi
lea    0x3228a(%rip),%rdx        # 72062 <module.45+0x1c>
lea    0x32c71(%rip),%rsi        # 72a50 <module.109>
callq  8a00 <TIFFErrorExt@plt>
mov    %r14,%rax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
mov    %r14,%rdi
callq  8bb0 <_TIFFfree@plt>
xor    %eax,%eax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
nopl   (%rax)

000000000003fe20 <OJPEGReadHeaderInfoSecTablesDcTable>:
push   %rbp
mov    %rsp,%rbp
sub    $0x50,%rsp
lea    0x32c76(%rip),%rsi        # 72aa5 <module.112>
xor    %edx,%edx
mov    0x350(%rdi),%rcx
mov    0x148(%rcx),%rax
test   %rax,%rax
je     3fe79 <OJPEGReadHeaderInfoSecTablesDcTable+0x59>
movb   $0x0,0x650(%rcx)
lea    -0x48(%rbp),%rax
mov    $0x10,%esi
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rax,%rbx
mov    %rdi,%r13
mov    %rdx,%r14
mov    %rsi,%r15
mov    %r14,%r12
jmp    3fead <OJPEGReadHeaderInfoSecTablesDcTable+0x8d>
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
lea    0x32bea(%rip),%rdx        # 72a73 <module.109+0x23>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
lea    -0x1(%r8),%eax
movslq %eax,%rax
movzbl 0x1f4(%rcx,%rax,1),%eax
mov    %al,0x1f4(%rcx,%r8,1)
add    $0x1,%r14d
movzbl 0x10c(%rcx),%eax
cmp    %al,%r14b
jb     3fed4 <OJPEGReadHeaderInfoSecTablesDcTable+0xb4>
mov    $0x1,%eax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
movzbl %r14b,%r8d
mov    0x148(%rcx,%r8,8),%rax
test   %rax,%rax
je     3fe92 <OJPEGReadHeaderInfoSecTablesDcTable+0x72>
lea    -0x1(%r8),%esi
test   %r14b,%r14b
jne    3fef3 <OJPEGReadHeaderInfoSecTablesDcTable+0xd3>
mov    %r12,%rax
jmp    3ff1d <OJPEGReadHeaderInfoSecTablesDcTable+0xfd>
movslq %esi,%rdx
cmp    0x148(%rcx,%rdx,8),%rax
je     3fe92 <OJPEGReadHeaderInfoSecTablesDcTable+0x72>
mov    %r12,%rax
jmp    3ff1d <OJPEGReadHeaderInfoSecTablesDcTable+0xfd>
movzbl %al,%edx
mov    0x148(%rcx,%rdx,8),%rdx
cmp    0x148(%rcx,%r8,8),%rdx
je     3ff6a <OJPEGReadHeaderInfoSecTablesDcTable+0x14a>
add    $0x1,%eax
movzbl %al,%edx
cmp    %edx,%esi
jg     3ff05 <OJPEGReadHeaderInfoSecTablesDcTable+0xe5>
mov    0x148(%rcx,%r8,8),%rsi
mov    0x3d0(%r13),%rax
mov    0x3b8(%r13),%rdi
mov    %r12,%rdx
mov    %rcx,-0x38(%rbp)
mov    %r8,-0x30(%rbp)
callq  *%rax
mov    %r15,%rdx
mov    %rbx,%rsi
mov    0x3c0(%r13),%rax
mov    0x3b8(%r13),%rdi
callq  *%rax
cmp    $0x10,%eax
jne    3ff9f <OJPEGReadHeaderInfoSecTablesDcTable+0x17f>
mov    %r12,%rax
mov    %rax,%rbx
jmp    3ffc5 <OJPEGReadHeaderInfoSecTablesDcTable+0x1a5>
xor    %eax,%eax
mov    0x3b8(%r13),%rdi
lea    0x32b4f(%rip),%rdx        # 72ac9 <module.112+0x24>
lea    0x32b24(%rip),%rsi        # 72aa5 <module.112>
callq  8a00 <TIFFErrorExt@plt>
mov    %r12,%rax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
mov    %r12,%rax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
movzbl %al,%ecx
movzbl -0x48(%rbp,%rcx,1),%ecx
add    %ecx,%ebx
add    $0x1,%eax
cmp    $0xf,%al
jbe    3ffb8 <OJPEGReadHeaderInfoSecTablesDcTable+0x198>
lea    0x19(%rbx),%r15d
mov    %r15d,%edi
callq  8440 <_TIFFmalloc@plt>
test   %rax,%rax
je     3fffd <OJPEGReadHeaderInfoSecTablesDcTable+0x1dd>
mov    %r15d,(%rax)
movb   $0xff,0x4(%rax)
movb   $0xc4,0x5(%rax)
lea    0x13(%rbx),%edx
mov    %rdx,%rcx
shr    $0x8,%ecx
mov    %cl,0x6(%rax)
mov    %dl,0x7(%rax)
mov    %r14b,0x8(%rax)
mov    %r12,%rcx
jmp    40041 <OJPEGReadHeaderInfoSecTablesDcTable+0x221>
xor    %eax,%eax
mov    0x3b8(%r13),%rdi
lea    0x32055(%rip),%rdx        # 72062 <module.45+0x1c>
lea    0x32a91(%rip),%rsi        # 72aa5 <module.112>
callq  8a00 <TIFFErrorExt@plt>
mov    %r12,%rax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
movzbl %cl,%esi
movzbl -0x48(%rbp,%rsi,1),%edx
mov    %dl,0x9(%rax,%rsi,1)
add    $0x1,%ecx
cmp    $0xf,%cl
jbe    40032 <OJPEGReadHeaderInfoSecTablesDcTable+0x212>
mov    %rax,%r15
mov    0x3c0(%r13),%rcx
mov    0x3b8(%r13),%rdi
lea    0x19(%r15),%rsi
mov    %ebx,%edx
callq  *%rcx
cmp    %eax,%ebx
jne    400af <OJPEGReadHeaderInfoSecTablesDcTable+0x28f>
mov    -0x30(%rbp),%rbx
mov    -0x38(%rbp),%rcx
mov    0x198(%rcx,%rbx,8),%rdi
test   %rdi,%rdi
je     4008b <OJPEGReadHeaderInfoSecTablesDcTable+0x26b>
mov    %r13,-0x38(%rbp)
mov    %rcx,%r13
callq  8bb0 <_TIFFfree@plt>
mov    %r13,%rcx
mov    -0x38(%rbp),%r13
mov    %r15,0x198(%rcx,%rbx,8)
mov    %r14,%rax
shl    $0x4,%eax
mov    %al,0x1f4(%rcx,%rbx,1)
mov    $0x10,%r15d
lea    -0x48(%rbp),%rbx
jmpq   3fea9 <OJPEGReadHeaderInfoSecTablesDcTable+0x89>
mov    %r15,%rdi
callq  8bb0 <_TIFFfree@plt>
mov    %r12,%rax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   

00000000000400d0 <OJPEGReadHeaderInfoSecTablesAcTable>:
push   %rbp
mov    %rsp,%rbp
sub    $0x50,%rsp
lea    0x32a09(%rip),%rsi        # 72ae8 <module.114>
xor    %edx,%edx
mov    0x350(%rdi),%rcx
mov    0x160(%rcx),%rax
test   %rax,%rax
je     40129 <OJPEGReadHeaderInfoSecTablesAcTable+0x59>
movb   $0x0,0x650(%rcx)
lea    -0x48(%rbp),%rsi
mov    $0x10,%eax
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rsi,%rbx
mov    %rdi,%r13
mov    %rdx,%r14
mov    %rax,%r15
mov    %r14,%r12
jmp    4016a <OJPEGReadHeaderInfoSecTablesAcTable+0x9a>
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
lea    0x3293a(%rip),%rdx        # 72a73 <module.109+0x23>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
lea    -0x1(%r8),%eax
movslq %eax,%rax
movzbl 0x1f4(%rcx,%rax,1),%eax
and    $0xf,%al
movzbl 0x1f4(%rcx,%r8,1),%edx
or     %dl,%al
mov    %al,0x1f4(%rcx,%r8,1)
add    $0x1,%r14d
movzbl 0x10c(%rcx),%eax
cmp    %al,%r14b
jb     40191 <OJPEGReadHeaderInfoSecTablesAcTable+0xc1>
mov    $0x1,%eax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
movzbl %r14b,%r8d
mov    0x160(%rcx,%r8,8),%rax
test   %rax,%rax
je     40142 <OJPEGReadHeaderInfoSecTablesAcTable+0x72>
lea    -0x1(%r8),%esi
test   %r14b,%r14b
jne    401b0 <OJPEGReadHeaderInfoSecTablesAcTable+0xe0>
mov    %r12,%rax
jmp    401da <OJPEGReadHeaderInfoSecTablesAcTable+0x10a>
movslq %esi,%rdx
cmp    0x160(%rcx,%rdx,8),%rax
je     40142 <OJPEGReadHeaderInfoSecTablesAcTable+0x72>
mov    %r12,%rax
jmp    401da <OJPEGReadHeaderInfoSecTablesAcTable+0x10a>
movzbl %al,%edx
mov    0x160(%rcx,%rdx,8),%rdx
cmp    0x160(%rcx,%r8,8),%rdx
je     40227 <OJPEGReadHeaderInfoSecTablesAcTable+0x157>
add    $0x1,%eax
movzbl %al,%edx
cmp    %edx,%esi
jg     401c2 <OJPEGReadHeaderInfoSecTablesAcTable+0xf2>
mov    0x160(%rcx,%r8,8),%rsi
mov    0x3d0(%r13),%rax
mov    0x3b8(%r13),%rdi
mov    %r12,%rdx
mov    %rcx,-0x38(%rbp)
mov    %r8,-0x30(%rbp)
callq  *%rax
mov    %r15,%rdx
mov    %rbx,%rsi
mov    0x3c0(%r13),%rax
mov    0x3b8(%r13),%rdi
callq  *%rax
cmp    $0x10,%eax
jne    4025c <OJPEGReadHeaderInfoSecTablesAcTable+0x18c>
mov    %r12,%rax
mov    %rax,%rbx
jmp    40282 <OJPEGReadHeaderInfoSecTablesAcTable+0x1b2>
xor    %eax,%eax
mov    0x3b8(%r13),%rdi
lea    0x328d5(%rip),%rdx        # 72b0c <module.114+0x24>
lea    0x328aa(%rip),%rsi        # 72ae8 <module.114>
callq  8a00 <TIFFErrorExt@plt>
mov    %r12,%rax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
mov    %r12,%rax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
movzbl %al,%ecx
movzbl -0x48(%rbp,%rcx,1),%ecx
add    %ecx,%ebx
add    $0x1,%eax
cmp    $0xf,%al
jbe    40275 <OJPEGReadHeaderInfoSecTablesAcTable+0x1a5>
lea    0x19(%rbx),%r15d
mov    %r15d,%edi
callq  8440 <_TIFFmalloc@plt>
test   %rax,%rax
je     402bf <OJPEGReadHeaderInfoSecTablesAcTable+0x1ef>
mov    %r15d,(%rax)
movb   $0xff,0x4(%rax)
movb   $0xc4,0x5(%rax)
lea    0x13(%rbx),%edx
mov    %rdx,%rcx
shr    $0x8,%ecx
mov    %cl,0x6(%rax)
mov    %dl,0x7(%rax)
mov    %r14,%rcx
or     $0x10,%cl
mov    %cl,0x8(%rax)
mov    %r12,%rcx
jmp    40303 <OJPEGReadHeaderInfoSecTablesAcTable+0x233>
xor    %eax,%eax
mov    0x3b8(%r13),%rdi
lea    0x31d93(%rip),%rdx        # 72062 <module.45+0x1c>
lea    0x32812(%rip),%rsi        # 72ae8 <module.114>
callq  8a00 <TIFFErrorExt@plt>
mov    %r12,%rax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
movzbl %cl,%esi
movzbl -0x48(%rbp,%rsi,1),%edx
mov    %dl,0x9(%rax,%rsi,1)
add    $0x1,%ecx
cmp    $0xf,%cl
jbe    402f4 <OJPEGReadHeaderInfoSecTablesAcTable+0x224>
mov    %rax,%r15
mov    0x3c0(%r13),%rcx
mov    0x3b8(%r13),%rdi
lea    0x19(%r15),%rsi
mov    %ebx,%edx
callq  *%rcx
cmp    %eax,%ebx
jne    40376 <OJPEGReadHeaderInfoSecTablesAcTable+0x2a6>
mov    -0x30(%rbp),%rbx
mov    -0x38(%rbp),%rcx
mov    0x1b8(%rcx,%rbx,8),%rdi
test   %rdi,%rdi
je     4034d <OJPEGReadHeaderInfoSecTablesAcTable+0x27d>
mov    %r13,-0x38(%rbp)
mov    %rcx,%r13
callq  8bb0 <_TIFFfree@plt>
mov    %r13,%rcx
mov    -0x38(%rbp),%r13
mov    %r15,0x1b8(%rcx,%rbx,8)
movzbl 0x1f4(%rcx,%rbx,1),%eax
or     %r14b,%al
mov    %al,0x1f4(%rcx,%rbx,1)
mov    $0x10,%r15d
lea    -0x48(%rbp),%rbx
jmpq   40166 <OJPEGReadHeaderInfoSecTablesAcTable+0x96>
mov    %r15,%rdi
callq  8bb0 <_TIFFfree@plt>
mov    %r12,%rax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

00000000000403a0 <OJPEGReadBufferFill>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rdi,%r14
xor    %r15d,%r15d
jmp    403e4 <OJPEGReadBufferFill+0x44>
mov    0x110(%r14),%rax
test   %rax,%rax
je     403d9 <OJPEGReadBufferFill+0x39>
mov    %rax,0x648(%r14)
mov    0x118(%r14),%rax
mov    %rax,0x658(%r14)
movl   $0x1,0x638(%r14)
mov    0x658(%r14),%rax
test   %rax,%rax
je     4046b <OJPEGReadBufferFill+0xcb>
movzbl 0x650(%r14),%eax
test   %al,%al
jne    40421 <OJPEGReadBufferFill+0x81>
mov    (%r14),%rcx
mov    0x3d0(%rcx),%rax
mov    0x3b8(%rcx),%rdi
mov    %r15,%rdx
mov    0x648(%r14),%rsi
callq  *%rax
movb   $0x1,0x650(%r14)
mov    0x658(%r14),%rcx
cmp    $0x7ff,%rcx
jbe    40436 <OJPEGReadBufferFill+0x96>
mov    $0x800,%ecx
mov    (%r14),%rdx
mov    0x3c0(%rdx),%rax
mov    0x3b8(%rdx),%rdi
lea    0x670(%r14),%r15
movzwl %cx,%edx
mov    %r15,%rsi
callq  *%rax
test   %rax,%rax
jne    40547 <OJPEGReadBufferFill+0x1a7>
xor    %eax,%eax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
movb   $0x0,0x650(%r14)
mov    0x638(%r14),%eax
test   %eax,%eax
je     403b8 <OJPEGReadBufferFill+0x18>
cmp    $0x1,%eax
je     4056f <OJPEGReadBufferFill+0x1cf>
cmp    $0x2,%eax
jne    4057f <OJPEGReadBufferFill+0x1df>
mov    (%r14),%rdi
callq  8c70 <_TIFFFillStriles@plt>
test   %eax,%eax
je     4058c <OJPEGReadBufferFill+0x1ec>
mov    (%r14),%r8
mov    0xe8(%r8),%rcx
test   %rcx,%rcx
je     40599 <OJPEGReadBufferFill+0x1f9>
mov    0xf0(%r8),%rax
test   %rax,%rax
je     405a6 <OJPEGReadBufferFill+0x206>
mov    0x63c(%r14),%esi
cmp    0x640(%r14),%esi
je     405b3 <OJPEGReadBufferFill+0x213>
mov    (%rcx,%rsi,8),%rdx
mov    %rdx,0x648(%r14)
test   %rdx,%rdx
je     405ce <OJPEGReadBufferFill+0x22e>
mov    0xf0(%r14),%rax
cmp    %rax,%rdx
jae    405c3 <OJPEGReadBufferFill+0x223>
mov    0xf0(%r8),%rcx
test   %rcx,%rcx
je     405e4 <OJPEGReadBufferFill+0x244>
test   %rcx,%rcx
je     405f0 <OJPEGReadBufferFill+0x250>
mov    (%rcx,%rsi,8),%rcx
mov    %rcx,0x658(%r14)
test   %rcx,%rcx
je     40615 <OJPEGReadBufferFill+0x275>
add    %rdx,%rcx
cmp    %rcx,%rax
jae    405ce <OJPEGReadBufferFill+0x22e>
sub    %rdx,%rax
mov    %rax,0x658(%r14)
jmpq   405ce <OJPEGReadBufferFill+0x22e>
lea    0x31846(%rip),%rsi        # 71d94 <module.15+0x28>
lea    0x325da(%rip),%rcx        # 72b2f <module.114+0x47>
test   %rax,%rax
jg     40622 <OJPEGReadBufferFill+0x282>
lea    0x325c6(%rip),%rdi        # 72b2b <module.114+0x43>
mov    $0x7b0,%edx
callq  8490 <__assert_fail@plt>
movl   $0x2,0x638(%r14)
jmpq   403e4 <OJPEGReadBufferFill+0x44>
mov    %r15,%rax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
mov    %r15,%rax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
mov    %r15,%rax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
mov    %r15,%rax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
movl   $0x3,0x638(%r14)
jmpq   403e4 <OJPEGReadBufferFill+0x44>
movq   $0x0,0x648(%r14)
mov    0x63c(%r14),%eax
add    $0x1,%eax
mov    %eax,0x63c(%r14)
jmpq   403e4 <OJPEGReadBufferFill+0x44>
sub    %rdx,%rax
mov    %rax,0x658(%r14)
jmp    405ce <OJPEGReadBufferFill+0x22e>
xor    %eax,%eax
mov    0x3b8(%r8),%rdi
mov    (%r8),%rsi
lea    0x3257b(%rip),%rdx        # 72b7e <module.114+0x96>
callq  8a00 <TIFFErrorExt@plt>
mov    %r15,%rax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
movq   $0x0,0x648(%r14)
jmp    405ce <OJPEGReadBufferFill+0x22e>
cmp    $0x800,%rax
jle    4063b <OJPEGReadBufferFill+0x29b>
lea    0x32512(%rip),%rdi        # 72b43 <module.114+0x5b>
mov    $0x7b1,%edx
callq  8490 <__assert_fail@plt>
cmp    $0xffff,%rax
jle    40654 <OJPEGReadBufferFill+0x2b4>
lea    0x32509(%rip),%rdi        # 72b53 <module.114+0x6b>
mov    $0x7b2,%edx
callq  8490 <__assert_fail@plt>
mov    0x658(%r14),%rdx
cmp    %rax,%rdx
jae    40671 <OJPEGReadBufferFill+0x2d1>
lea    0x324f4(%rip),%rdi        # 72b5b <module.114+0x73>
mov    $0x7b3,%edx
callq  8490 <__assert_fail@plt>
mov    %ax,0x660(%r14)
mov    %r15,0x668(%r14)
movzwl %ax,%eax
sub    %rax,%rdx
mov    %rdx,0x658(%r14)
add    0x648(%r14),%rax
mov    %rax,0x648(%r14)
mov    $0x1,%eax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

00000000000406b0 <OJPEGReadByte>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
movzwl 0x660(%rdi),%eax
test   %ax,%ax
je     406fc <OJPEGReadByte+0x4c>
mov    0x668(%rdi),%rax
movzbl (%rax),%eax
mov    %al,(%rsi)
mov    0x668(%rdi),%rax
add    $0x1,%rax
mov    %rax,0x668(%rdi)
movzwl 0x660(%rdi),%eax
add    $0xffff,%eax
mov    %ax,0x660(%rdi)
mov    $0x1,%eax
leaveq 
retq   
mov    %rdi,%rax
mov    %r15,-0x10(%rbp)
mov    %rsi,-0x8(%rbp)
mov    %rdi,%r15
mov    %rax,%rdi
callq  403a0 <OJPEGReadBufferFill>
test   %eax,%eax
jne    4071e <OJPEGReadByte+0x6e>
xor    %eax,%eax
mov    -0x10(%rbp),%r15
leaveq 
retq   
movzwl 0x660(%r15),%eax
test   %ax,%ax
je     40738 <OJPEGReadByte+0x88>
mov    %r15,%rdi
mov    -0x8(%rbp),%rsi
mov    -0x10(%rbp),%r15
jmp    406c4 <OJPEGReadByte+0x14>
lea    0x3245d(%rip),%rdi        # 72b9c <module.114+0xb4>
lea    0x3164e(%rip),%rsi        # 71d94 <module.15+0x28>
mov    $0x7f8,%edx
lea    0x3245f(%rip),%rcx        # 72bb1 <module.114+0xc9>
callq  8490 <__assert_fail@plt>
nopw   0x0(%rax,%rax,1)

0000000000040760 <OJPEGReadBytePeek>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
movzwl 0x660(%rdi),%eax
test   %ax,%ax
je     40787 <OJPEGReadBytePeek+0x27>
mov    0x668(%rdi),%rax
movzbl (%rax),%eax
mov    %al,(%rsi)
mov    $0x1,%eax
leaveq 
retq   
mov    %rdi,%rax
mov    %r15,-0x10(%rbp)
mov    %rsi,-0x8(%rbp)
mov    %rdi,%r15
mov    %rax,%rdi
callq  403a0 <OJPEGReadBufferFill>
test   %eax,%eax
jne    407a9 <OJPEGReadBytePeek+0x49>
xor    %eax,%eax
mov    -0x10(%rbp),%r15
leaveq 
retq   
movzwl 0x660(%r15),%eax
test   %ax,%ax
je     407c3 <OJPEGReadBytePeek+0x63>
mov    %r15,%rdi
mov    -0x8(%rbp),%rsi
mov    -0x10(%rbp),%r15
jmp    40774 <OJPEGReadBytePeek+0x14>
lea    0x323d2(%rip),%rdi        # 72b9c <module.114+0xb4>
lea    0x315c3(%rip),%rsi        # 71d94 <module.15+0x28>
mov    $0x807,%edx
lea    0x323e2(%rip),%rcx        # 72bbf <module.114+0xd7>
callq  8490 <__assert_fail@plt>
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   (%rax)

00000000000407f0 <OJPEGReadByteAdvance>:
push   %rbp
mov    %rsp,%rbp
movzwl 0x660(%rdi),%ecx
test   %cx,%cx
jne    4081f <OJPEGReadByteAdvance+0x2f>
lea    0x32395(%rip),%rdi        # 72b9c <module.114+0xb4>
lea    0x31586(%rip),%rsi        # 71d94 <module.15+0x28>
mov    $0x810,%edx
lea    0x323b7(%rip),%rcx        # 72bd1 <module.114+0xe9>
callq  8490 <__assert_fail@plt>
mov    0x668(%rdi),%rax
add    $0x1,%rax
mov    %rax,0x668(%rdi)
lea    0xffff(%rcx),%eax
mov    %ax,0x660(%rdi)
leaveq 
retq   

0000000000040840 <OJPEGReadWord>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %rsi,-0x10(%rbp)
mov    %rdi,-0x8(%rbp)
lea    -0x11(%rbp),%rsi
callq  406b0 <OJPEGReadByte>
test   %eax,%eax
jne    40861 <OJPEGReadWord+0x21>
xor    %eax,%eax
leaveq 
retq   
movzbl -0x11(%rbp),%eax
shl    $0x8,%eax
mov    -0x10(%rbp),%rcx
mov    %ax,(%rcx)
lea    -0x11(%rbp),%rsi
mov    -0x8(%rbp),%rdi
callq  406b0 <OJPEGReadByte>
test   %eax,%eax
jne    40884 <OJPEGReadWord+0x44>
xor    %eax,%eax
leaveq 
retq   
movzbl -0x11(%rbp),%eax
mov    -0x10(%rbp),%rdx
movzwl (%rdx),%ecx
or     %cx,%ax
mov    %ax,(%rdx)
mov    $0x1,%eax
leaveq 
retq   
nopl   0x0(%rax)

00000000000408a0 <OJPEGReadBlock>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
lea    0x314e5(%rip),%rax        # 71d94 <module.15+0x28>
lea    0x32336(%rip),%rcx        # 72bec <module.114+0x104>
test   %si,%si
je     408da <OJPEGReadBlock+0x3a>
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rsi,%rbx
mov    %rdx,%r12
mov    %rdi,%r13
jmp    408f5 <OJPEGReadBlock+0x55>
mov    %rax,%rsi
lea    0x32302(%rip),%rdi        # 72be6 <module.114+0xfe>
mov    $0x828,%edx
callq  8490 <__assert_fail@plt>
sub    %r14w,%bx
add    %r15,%r12
movzwl 0x660(%r13),%eax
test   %ax,%ax
je     4096f <OJPEGReadBlock+0xcf>
movzwl 0x660(%r13),%r14d
cmp    %r14w,%bx
ja     40913 <OJPEGReadBlock+0x73>
mov    %rbx,%r14
movzwl %r14w,%r15d
mov    0x668(%r13),%rsi
mov    %r12,%rdi
mov    %r15,%rdx
callq  8790 <_TIFFmemcpy@plt>
mov    %r15,%rax
add    0x668(%r13),%rax
mov    %rax,0x668(%r13)
movzwl 0x660(%r13),%eax
sub    %r14w,%ax
mov    %ax,0x660(%r13)
cmp    %bx,%r14w
jne    408ee <OJPEGReadBlock+0x4e>
mov    $0x1,%eax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
mov    %r13,%rdi
callq  403a0 <OJPEGReadBufferFill>
test   %eax,%eax
je     409ab <OJPEGReadBlock+0x10b>
movzwl 0x660(%r13),%eax
test   %ax,%ax
jne    40902 <OJPEGReadBlock+0x62>
lea    0x32209(%rip),%rdi        # 72b9c <module.114+0xb4>
mov    $0x831,%edx
lea    0x3224d(%rip),%rcx        # 72bec <module.114+0x104>
lea    0x313ee(%rip),%rsi        # 71d94 <module.15+0x28>
callq  8490 <__assert_fail@plt>
xor    %eax,%eax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

00000000000409d0 <OJPEGReadSkip>:
push   %rbp
mov    %rsp,%rbp
movzwl 0x660(%rdi),%ecx
cmp    %si,%cx
jb     409e5 <OJPEGReadSkip+0x15>
mov    %rsi,%rdx
jmp    409e8 <OJPEGReadSkip+0x18>
mov    %rcx,%rdx
movzwl %dx,%eax
add    0x668(%rdi),%rax
mov    %rax,0x668(%rdi)
mov    %rcx,%rax
sub    %dx,%ax
mov    %ax,0x660(%rdi)
cmp    %dx,%si
jne    40a0d <OJPEGReadSkip+0x3d>
leaveq 
retq   
cmp    %dx,%cx
je     40a31 <OJPEGReadSkip+0x61>
lea    0x321e2(%rip),%rdi        # 72bfb <module.114+0x113>
lea    0x31374(%rip),%rsi        # 71d94 <module.15+0x28>
mov    $0x84d,%edx
lea    0x321e5(%rip),%rcx        # 72c11 <module.114+0x129>
callq  8490 <__assert_fail@plt>
sub    %dx,%si
movzwl %si,%ecx
mov    0x658(%rdi),%rax
cmp    %rcx,%rax
jae    40a46 <OJPEGReadSkip+0x76>
mov    %rax,%rsi
movzwl %si,%ecx
mov    %rcx,%rdx
add    0x648(%rdi),%rdx
mov    %rdx,0x648(%rdi)
sub    %rcx,%rax
mov    %rax,0x658(%rdi)
movb   $0x0,0x650(%rdi)
leaveq 
retq   
nopl   (%rax)

0000000000040a70 <OJPEGWriteStream>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rdi,%r12
mov    %rsi,%r14
mov    %rdx,%r15
mov    0x350(%r12),%r13
movl   $0x0,(%r15)
xor    %ebx,%ebx
mov    $0x1,%eax
mov    $0x2,%r9d
mov    $0x3,%r8d
jmp    40af8 <OJPEGWriteStream+0x88>
cmp    $0x12,%ecx
ja     40aed <OJPEGWriteStream+0x7d>
lea    0x3125b(%rip),%rdx        # 71d20 <module.12+0x1c3>
movslq (%rdx,%rcx,4),%rcx
add    %rdx,%rcx
jmpq   *%rcx
mov    %r12,%rdi
mov    %r14,%rsi
mov    %r15,%rdx
callq  41330 <OJPEGWriteStreamEoi>
mov    $0x1,%eax
mov    $0x3,%r8d
mov    $0x2,%r9d
mov    (%r15),%ecx
test   %ecx,%ecx
jne    40dcd <OJPEGWriteStream+0x35d>
mov    0xe70(%r13),%ecx
cmp    $0x12,%ecx
jbe    40ab9 <OJPEGWriteStream+0x49>
lea    0x32114(%rip),%rdi        # 72c1f <module.114+0x137>
lea    0x31282(%rip),%rsi        # 71d94 <module.15+0x28>
mov    $0x864,%edx
lea    0x32118(%rip),%rcx        # 72c36 <module.114+0x14e>
callq  8490 <__assert_fail@plt>
mov    %r12,%rdi
mov    %r14,%rsi
mov    %r15,%rdx
callq  40e00 <OJPEGWriteStreamSoi>
mov    $0x1,%eax
mov    $0x3,%r8d
mov    $0x2,%r9d
jmp    40aed <OJPEGWriteStream+0x7d>
mov    %r12,%rdi
mov    %rbx,%rsi
mov    %r14,%rdx
mov    %r15,%rcx
callq  40e40 <OJPEGWriteStreamQTable>
mov    $0x1,%eax
mov    $0x3,%r8d
mov    $0x2,%r9d
jmp    40aed <OJPEGWriteStream+0x7d>
mov    %rax,%rsi
mov    %r12,%rdi
mov    %r14,%rdx
mov    %r15,%rcx
callq  40e40 <OJPEGWriteStreamQTable>
mov    $0x1,%eax
mov    $0x3,%r8d
mov    $0x2,%r9d
jmpq   40aed <OJPEGWriteStream+0x7d>
mov    %r9,%rsi
mov    %r12,%rdi
mov    %r14,%rdx
mov    %r15,%rcx
callq  40e40 <OJPEGWriteStreamQTable>
mov    $0x1,%eax
mov    $0x3,%r8d
mov    $0x2,%r9d
jmpq   40aed <OJPEGWriteStream+0x7d>
mov    %r8,%rsi
mov    %r12,%rdi
mov    %r14,%rdx
mov    %r15,%rcx
callq  40e40 <OJPEGWriteStreamQTable>
mov    $0x1,%eax
mov    $0x3,%r8d
mov    $0x2,%r9d
jmpq   40aed <OJPEGWriteStream+0x7d>
mov    %r12,%rdi
mov    %rbx,%rsi
mov    %r14,%rdx
mov    %r15,%rcx
callq  40e90 <OJPEGWriteStreamDcTable>
mov    $0x1,%eax
mov    $0x3,%r8d
mov    $0x2,%r9d
jmpq   40aed <OJPEGWriteStream+0x7d>
mov    %rax,%rsi
mov    %r12,%rdi
mov    %r14,%rdx
mov    %r15,%rcx
callq  40e90 <OJPEGWriteStreamDcTable>
mov    $0x1,%eax
mov    $0x3,%r8d
mov    $0x2,%r9d
jmpq   40aed <OJPEGWriteStream+0x7d>
mov    %r9,%rsi
mov    %r12,%rdi
mov    %r14,%rdx
mov    %r15,%rcx
callq  40e90 <OJPEGWriteStreamDcTable>
mov    $0x1,%eax
mov    $0x3,%r8d
mov    $0x2,%r9d
jmpq   40aed <OJPEGWriteStream+0x7d>
mov    %r8,%rsi
mov    %r12,%rdi
mov    %r14,%rdx
mov    %r15,%rcx
callq  40e90 <OJPEGWriteStreamDcTable>
mov    $0x1,%eax
mov    $0x3,%r8d
mov    $0x2,%r9d
jmpq   40aed <OJPEGWriteStream+0x7d>
mov    %r12,%rdi
mov    %rbx,%rsi
mov    %r14,%rdx
mov    %r15,%rcx
callq  40ee0 <OJPEGWriteStreamAcTable>
mov    $0x1,%eax
mov    $0x3,%r8d
mov    $0x2,%r9d
jmpq   40aed <OJPEGWriteStream+0x7d>
mov    %rax,%rsi
mov    %r12,%rdi
mov    %r14,%rdx
mov    %r15,%rcx
callq  40ee0 <OJPEGWriteStreamAcTable>
mov    $0x1,%eax
mov    $0x3,%r8d
mov    $0x2,%r9d
jmpq   40aed <OJPEGWriteStream+0x7d>
mov    %r9,%rsi
mov    %r12,%rdi
mov    %r14,%rdx
mov    %r15,%rcx
callq  40ee0 <OJPEGWriteStreamAcTable>
mov    $0x1,%eax
mov    $0x3,%r8d
mov    $0x2,%r9d
jmpq   40aed <OJPEGWriteStream+0x7d>
mov    %r8,%rsi
mov    %r12,%rdi
mov    %r14,%rdx
mov    %r15,%rcx
callq  40ee0 <OJPEGWriteStreamAcTable>
mov    $0x1,%eax
mov    $0x3,%r8d
mov    $0x2,%r9d
jmpq   40aed <OJPEGWriteStream+0x7d>
mov    %r12,%rdi
mov    %r14,%rsi
mov    %r15,%rdx
callq  40f30 <OJPEGWriteStreamDri>
mov    $0x1,%eax
mov    $0x3,%r8d
mov    $0x2,%r9d
jmpq   40aed <OJPEGWriteStream+0x7d>
mov    %r12,%rdi
mov    %r14,%rsi
mov    %r15,%rdx
callq  40fa0 <OJPEGWriteStreamSof>
mov    $0x1,%eax
mov    $0x3,%r8d
mov    $0x2,%r9d
jmpq   40aed <OJPEGWriteStream+0x7d>
mov    %r12,%rdi
mov    %r14,%rsi
mov    %r15,%rdx
callq  410d0 <OJPEGWriteStreamSos>
mov    $0x1,%eax
mov    $0x3,%r8d
mov    $0x2,%r9d
jmpq   40aed <OJPEGWriteStream+0x7d>
mov    %r12,%rdi
mov    %r14,%rsi
mov    %r15,%rdx
callq  411d0 <OJPEGWriteStreamCompressed>
test   %eax,%eax
je     40de3 <OJPEGWriteStream+0x373>
mov    $0x1,%eax
mov    $0x3,%r8d
mov    $0x2,%r9d
jmpq   40aed <OJPEGWriteStream+0x7d>
mov    %r12,%rdi
mov    %r14,%rsi
mov    %r15,%rdx
callq  412d0 <OJPEGWriteStreamRst>
mov    $0x1,%eax
mov    $0x3,%r8d
mov    $0x2,%r9d
jmpq   40aed <OJPEGWriteStream+0x7d>
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
mov    %rbx,%rax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
nopl   0x0(%rax)

0000000000040e00 <OJPEGWriteStreamSoi>:
push   %rbp
mov    %rsp,%rbp
mov    0x350(%rdi),%rcx
lea    0xe74(%rcx),%rax
movb   $0xff,(%rax)
movb   $0xd8,0xe75(%rcx)
movl   $0x2,(%rdx)
mov    %rax,(%rsi)
mov    0xe70(%rcx),%eax
add    $0x1,%eax
mov    %eax,0xe70(%rcx)
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)

0000000000040e40 <OJPEGWriteStreamQTable>:
push   %rbp
mov    %rsp,%rbp
mov    0x350(%rdi),%rdi
movzbl %sil,%esi
mov    0x178(%rdi,%rsi,8),%rax
test   %rax,%rax
je     40e72 <OJPEGWriteStreamQTable+0x32>
add    $0x4,%rax
mov    %rax,(%rdx)
mov    0x178(%rdi,%rsi,8),%rax
mov    (%rax),%eax
add    $0xfffffffc,%eax
mov    %eax,(%rcx)
mov    0xe70(%rdi),%eax
add    $0x1,%eax
mov    %eax,0xe70(%rdi)
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

0000000000040e90 <OJPEGWriteStreamDcTable>:
push   %rbp
mov    %rsp,%rbp
mov    0x350(%rdi),%rdi
movzbl %sil,%esi
mov    0x198(%rdi,%rsi,8),%rax
test   %rax,%rax
je     40ec2 <OJPEGWriteStreamDcTable+0x32>
add    $0x4,%rax
mov    %rax,(%rdx)
mov    0x198(%rdi,%rsi,8),%rax
mov    (%rax),%eax
add    $0xfffffffc,%eax
mov    %eax,(%rcx)
mov    0xe70(%rdi),%eax
add    $0x1,%eax
mov    %eax,0xe70(%rdi)
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

0000000000040ee0 <OJPEGWriteStreamAcTable>:
push   %rbp
mov    %rsp,%rbp
mov    0x350(%rdi),%rdi
movzbl %sil,%esi
mov    0x1b8(%rdi,%rsi,8),%rax
test   %rax,%rax
je     40f12 <OJPEGWriteStreamAcTable+0x32>
add    $0x4,%rax
mov    %rax,(%rdx)
mov    0x1b8(%rdi,%rsi,8),%rax
mov    (%rax),%eax
add    $0xfffffffc,%eax
mov    %eax,(%rcx)
mov    0xe70(%rdi),%eax
add    $0x1,%eax
mov    %eax,0xe70(%rdi)
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

0000000000040f30 <OJPEGWriteStreamDri>:
push   %rbp
mov    %rsp,%rbp
mov    0x350(%rdi),%rcx
movzwl 0x1d8(%rcx),%eax
test   %ax,%ax
je     40f83 <OJPEGWriteStreamDri+0x53>
lea    0xe74(%rcx),%r8
movb   $0xff,(%r8)
movb   $0xdd,0xe75(%rcx)
movb   $0x0,0xe76(%rcx)
movb   $0x4,0xe77(%rcx)
mov    %rax,%rdi
shr    $0x8,%edi
mov    %dil,0xe78(%rcx)
mov    %al,0xe79(%rcx)
movl   $0x6,(%rdx)
mov    %r8,(%rsi)
mov    0xe70(%rcx),%eax
add    $0x1,%eax
mov    %eax,0xe70(%rcx)
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nop

0000000000040fa0 <OJPEGWriteStreamSof>:
push   %rbp
mov    %rsp,%rbp
mov    0x350(%rdi),%r11
movzbl 0x10e(%r11),%edi
lea    0x8(%rdi,%rdi,2),%eax
cmp    $0xff,%eax
jle    40fdd <OJPEGWriteStreamSof+0x3d>
lea    0x31c96(%rip),%rdi        # 72c5b <module.114+0x173>
lea    0x30dc8(%rip),%rsi        # 71d94 <module.15+0x28>
mov    $0x8ef,%edx
lea    0x31c6f(%rip),%rcx        # 72c47 <module.114+0x15f>
callq  8490 <__assert_fail@plt>
lea    0xe74(%r11),%r10
movb   $0xff,(%r10)
movzbl 0x1dc(%r11),%eax
mov    %al,0xe75(%r11)
movb   $0x0,0xe76(%r11)
lea    0x8(%rdi,%rdi,2),%eax
mov    %al,0xe77(%r11)
movb   $0x8,0xe78(%r11)
mov    0x1e4(%r11),%ecx
mov    %rcx,%rax
shr    $0x8,%eax
mov    %al,0xe79(%r11)
mov    %cl,0xe7a(%r11)
mov    0x1e0(%r11),%ecx
mov    %rcx,%rax
shr    $0x8,%eax
mov    %al,0xe7b(%r11)
mov    %cl,0xe7c(%r11)
mov    %dil,0xe7d(%r11)
xor    %eax,%eax
jmp    410a7 <OJPEGWriteStreamSof+0x107>
movzbl 0x10d(%r11),%ecx
movzbl %al,%r9d
add    %r9d,%ecx
movslq %ecx,%r8
movzbl 0x1e8(%r8,%r11,1),%edi
lea    0xa(%r9,%r9,2),%ecx
movslq %ecx,%rcx
mov    %dil,(%r10,%rcx,1)
movzbl 0x1eb(%r8,%r11,1),%edi
lea    0xb(%r9,%r9,2),%ecx
movslq %ecx,%rcx
mov    %dil,(%r10,%rcx,1)
movzbl 0x1ee(%r11,%r8,1),%edi
lea    0xc(%r9,%r9,2),%ecx
movslq %ecx,%rcx
mov    %dil,(%r10,%rcx,1)
add    $0x1,%eax
movzbl 0x10e(%r11),%ecx
cmp    %al,%cl
ja     41053 <OJPEGWriteStreamSof+0xb3>
lea    0xa(%rcx,%rcx,2),%eax
mov    %eax,(%rdx)
mov    %r10,(%rsi)
mov    0xe70(%r11),%eax
add    $0x1,%eax
mov    %eax,0xe70(%r11)
leaveq 
retq   
nop

00000000000410d0 <OJPEGWriteStreamSos>:
push   %rbp
mov    %rsp,%rbp
mov    0x350(%rdi),%r11
movzbl 0x10e(%r11),%ecx
lea    0x6(%rcx,%rcx,1),%eax
cmp    $0xfe,%eax
jle    4110d <OJPEGWriteStreamSos+0x3d>
lea    0x31ba3(%rip),%rdi        # 72c98 <module.114+0x1b0>
lea    0x30c98(%rip),%rsi        # 71d94 <module.15+0x28>
mov    $0x913,%edx
lea    0x31b7c(%rip),%rcx        # 72c84 <module.114+0x19c>
callq  8490 <__assert_fail@plt>
lea    0xe74(%r11),%r10
movb   $0xff,(%r10)
movb   $0xda,0xe75(%r11)
movb   $0x0,0xe76(%r11)
lea    0x6(%rcx,%rcx,1),%eax
mov    %al,0xe77(%r11)
mov    %cl,0xe78(%r11)
xor    %eax,%eax
jmp    4117d <OJPEGWriteStreamSos+0xad>
movzbl 0x10d(%r11),%ecx
movzbl %al,%r9d
add    %r9d,%ecx
movslq %ecx,%r8
movzbl 0x1f1(%r8,%r11,1),%edi
lea    0x5(%r9,%r9,1),%ecx
movslq %ecx,%rcx
mov    %dil,(%r10,%rcx,1)
movzbl 0x1f4(%r11,%r8,1),%edi
lea    0x6(%r9,%r9,1),%ecx
movslq %ecx,%rcx
mov    %dil,(%r10,%rcx,1)
add    $0x1,%eax
movzbl 0x10e(%r11),%ecx
cmp    %al,%cl
ja     4113e <OJPEGWriteStreamSos+0x6e>
lea    0x5(%rcx,%rcx,1),%eax
movslq %eax,%rax
movb   $0x0,(%r10,%rax,1)
lea    0x6(%rcx,%rcx,1),%eax
movslq %eax,%rax
movb   $0x3f,(%r10,%rax,1)
lea    0x7(%rcx,%rcx,1),%eax
movslq %eax,%rax
movb   $0x0,(%r10,%rax,1)
lea    0x8(%rcx,%rcx,1),%eax
mov    %eax,(%rdx)
mov    %r10,(%rsi)
mov    0xe70(%r11),%eax
add    $0x1,%eax
mov    %eax,0xe70(%r11)
leaveq 
retq   
nopl   0x0(%rax)

00000000000411d0 <OJPEGWriteStreamCompressed>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    0x350(%rdi),%rcx
movzwl 0x660(%rcx),%eax
test   %ax,%ax
je     4121a <OJPEGWriteStreamCompressed+0x4a>
movzwl 0x660(%rcx),%eax
mov    %eax,(%rdx)
mov    0x668(%rcx),%rax
mov    %rax,(%rsi)
movw   $0x0,0x660(%rcx)
mov    $0x1,%eax
mov    0x658(%rcx),%rdx
test   %rdx,%rdx
je     4123d <OJPEGWriteStreamCompressed+0x6d>
leaveq 
retq   
mov    %rcx,%rdi
mov    %r15,-0x8(%rbp)
mov    %rdx,-0x18(%rbp)
mov    %rsi,-0x10(%rbp)
mov    %rcx,%r15
callq  403a0 <OJPEGReadBufferFill>
test   %eax,%eax
jne    4124f <OJPEGWriteStreamCompressed+0x7f>
xor    %eax,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
mov    0x638(%rcx),%edx
cmp    $0x2,%edx
je     41270 <OJPEGWriteStreamCompressed+0xa0>
cmp    $0x3,%edx
je     4128a <OJPEGWriteStreamCompressed+0xba>
leaveq 
retq   
movzwl 0x660(%r15),%eax
test   %ax,%ax
je     41296 <OJPEGWriteStreamCompressed+0xc6>
mov    %r15,%rcx
mov    -0x10(%rbp),%rsi
mov    -0x18(%rbp),%rdx
mov    -0x8(%rbp),%r15
jmpq   411eb <OJPEGWriteStreamCompressed+0x1b>
mov    0x640(%rcx),%edx
cmp    0x63c(%rcx),%edx
ja     412b5 <OJPEGWriteStreamCompressed+0xe5>
movl   $0x12,0xe70(%rcx)
leaveq 
retq   
movl   $0x12,0xe70(%rcx)
leaveq 
retq   
lea    0x318ff(%rip),%rdi        # 72b9c <module.114+0xb4>
lea    0x30af0(%rip),%rsi        # 71d94 <module.15+0x28>
mov    $0x935,%edx
lea    0x31a11(%rip),%rcx        # 72cc1 <module.114+0x1d9>
callq  8490 <__assert_fail@plt>
movl   $0x11,0xe70(%rcx)
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   0x0(%rax)

00000000000412d0 <OJPEGWriteStreamRst>:
push   %rbp
mov    %rsp,%rbp
mov    0x350(%rdi),%rcx
lea    0xe74(%rcx),%rax
movb   $0xff,(%rax)
movzbl 0x1da(%rcx),%edi
lea    0xd0(%rdi),%r8d
mov    %r8b,0xe75(%rcx)
add    $0x1,%edi
mov    %dil,0x1da(%rcx)
cmp    $0x8,%dil
jne    41311 <OJPEGWriteStreamRst+0x41>
movb   $0x0,0x1da(%rcx)
movl   $0x2,(%rdx)
mov    %rax,(%rsi)
movl   $0x10,0xe70(%rcx)
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)

0000000000041330 <OJPEGWriteStreamEoi>:
push   %rbp
mov    %rsp,%rbp
mov    0x350(%rdi),%rcx
lea    0xe74(%rcx),%rax
movb   $0xff,(%rax)
movb   $0xd9,0xe75(%rcx)
movl   $0x2,(%rdx)
mov    %rax,(%rsi)
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

0000000000041360 <jpeg_create_decompress_encap>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %rsi,-0x8(%rbp)
add    $0x10,%rdi
callq  8630 <_setjmp@plt>
test   %eax,%eax
je     4137d <jpeg_create_decompress_encap+0x1d>
xor    %eax,%eax
leaveq 
retq   
mov    $0x50,%esi
mov    $0x290,%edx
mov    -0x8(%rbp),%rdi
callq  87a0 <jpeg_CreateDecompress@plt>
mov    $0x1,%eax
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

00000000000413a0 <jpeg_read_header_encap>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %rdx,-0x10(%rbp)
mov    %rsi,-0x8(%rbp)
add    $0x10,%rdi
callq  8630 <_setjmp@plt>
test   %eax,%eax
je     413c1 <jpeg_read_header_encap+0x21>
xor    %eax,%eax
leaveq 
retq   
mov    -0x10(%rbp),%rax
movzbl %al,%esi
mov    -0x8(%rbp),%rdi
callq  8a30 <jpeg_read_header@plt>
mov    $0x1,%eax
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

00000000000413e0 <jpeg_start_decompress_encap>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %rsi,-0x8(%rbp)
add    $0x10,%rdi
callq  8630 <_setjmp@plt>
test   %eax,%eax
je     413fd <jpeg_start_decompress_encap+0x1d>
xor    %eax,%eax
leaveq 
retq   
mov    -0x8(%rbp),%rdi
callq  8670 <jpeg_start_decompress@plt>
mov    $0x1,%eax
leaveq 
retq   
nopl   (%rax)

0000000000041410 <jpeg_read_scanlines_encap>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %rsi,-0x8(%rbp)
mov    %rdx,-0x10(%rbp)
mov    %rcx,-0x18(%rbp)
add    $0x10,%rdi
callq  8630 <_setjmp@plt>
test   %eax,%eax
je     41435 <jpeg_read_scanlines_encap+0x25>
xor    %eax,%eax
leaveq 
retq   
mov    -0x18(%rbp),%rdx
mov    -0x10(%rbp),%rsi
mov    -0x8(%rbp),%rdi
callq  86d0 <jpeg_read_scanlines@plt>
mov    $0x1,%eax
leaveq 
retq   
nopl   (%rax)

0000000000041450 <jpeg_read_raw_data_encap>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %rsi,-0x8(%rbp)
mov    %rdx,-0x10(%rbp)
mov    %rcx,-0x18(%rbp)
add    $0x10,%rdi
callq  8630 <_setjmp@plt>
test   %eax,%eax
je     41475 <jpeg_read_raw_data_encap+0x25>
xor    %eax,%eax
leaveq 
retq   
mov    -0x18(%rbp),%rdx
mov    -0x10(%rbp),%rsi
mov    -0x8(%rbp),%rdi
callq  8420 <jpeg_read_raw_data@plt>
mov    $0x1,%eax
leaveq 
retq   
nopl   (%rax)

0000000000041490 <jpeg_encap_unwind>:
push   %rbp
mov    %rsp,%rbp
mov    0x350(%rdi),%rdi
add    $0x10,%rdi
mov    $0x1,%esi
callq  8a40 <longjmp@plt>
nopl   0x0(%rax)

00000000000414b0 <OJPEGLibjpegJpegErrorMgrOutputMessage>:
push   %rbp
mov    %rsp,%rbp
sub    $0xd0,%rsp
mov    %r15,-0x8(%rbp)
mov    (%rdi),%rax
mov    0x18(%rax),%rax
lea    -0xd0(%rbp),%rsi
mov    %rdi,%r15
callq  *%rax
xor    %eax,%eax
mov    0x18(%r15),%rcx
mov    0x3b8(%rcx),%rdi
lea    0x317f6(%rip),%rsi        # 72cdc <module.114+0x1f4>
lea    0x317f7(%rip),%rdx        # 72ce4 <module.114+0x1fc>
lea    -0xd0(%rbp),%rcx
callq  85a0 <TIFFWarningExt@plt>
mov    -0x8(%rbp),%r15
leaveq 
retq   
nop

0000000000041500 <OJPEGLibjpegJpegErrorMgrErrorExit>:
push   %rbp
mov    %rsp,%rbp
sub    $0xd0,%rsp
mov    %r15,-0x8(%rbp)
mov    (%rdi),%rax
mov    0x18(%rax),%rax
lea    -0xd0(%rbp),%rsi
mov    %rdi,%r15
callq  *%rax
xor    %eax,%eax
mov    0x18(%r15),%rcx
mov    0x3b8(%rcx),%rdi
lea    0x317a6(%rip),%rsi        # 72cdc <module.114+0x1f4>
lea    0x317a7(%rip),%rdx        # 72ce4 <module.114+0x1fc>
lea    -0xd0(%rbp),%rcx
callq  8a00 <TIFFErrorExt@plt>
mov    0x18(%r15),%rdi
callq  41490 <jpeg_encap_unwind>
mov    -0x8(%rbp),%r15
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

0000000000041560 <OJPEGLibjpegJpegSourceMgrInitSource>:
push   %rbp
mov    %rsp,%rbp
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)

0000000000041570 <OJPEGLibjpegJpegSourceMgrFillInputBuffer>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    0x18(%rdi),%r15
mov    0x350(%r15),%r14
movq   $0x0,-0x20(%rbp)
movl   $0x0,-0x14(%rbp)
lea    -0x20(%rbp),%rsi
lea    -0x14(%rbp),%rdx
mov    %r15,%rdi
callq  40a70 <OJPEGWriteStream>
test   %eax,%eax
jne    415d2 <OJPEGLibjpegJpegSourceMgrFillInputBuffer+0x62>
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
lea    0x3171e(%rip),%rsi        # 72cdc <module.114+0x1f4>
lea    0x31722(%rip),%rdx        # 72ce7 <module.114+0x1ff>
callq  8a00 <TIFFErrorExt@plt>
mov    %r15,%rdi
callq  41490 <jpeg_encap_unwind>
mov    -0x14(%rbp),%eax
mov    %rax,0x5a8(%r14)
mov    -0x20(%rbp),%rax
mov    %rax,0x5a0(%r14)
mov    $0x1,%eax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)

0000000000041600 <OJPEGLibjpegJpegSourceMgrSkipInputData>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x8(%rbp)
xor    %eax,%eax
mov    0x18(%rdi),%r15
mov    0x3b8(%r15),%rdi
lea    0x316bc(%rip),%rsi        # 72cdc <module.114+0x1f4>
lea    0x316db(%rip),%rdx        # 72d02 <module.114+0x21a>
callq  8a00 <TIFFErrorExt@plt>
mov    %r15,%rdi
callq  41490 <jpeg_encap_unwind>
mov    -0x8(%rbp),%r15
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

0000000000041640 <OJPEGLibjpegJpegSourceMgrResyncToRestart>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x8(%rbp)
xor    %eax,%eax
mov    0x18(%rdi),%r15
mov    0x3b8(%r15),%rdi
lea    0x3167c(%rip),%rsi        # 72cdc <module.114+0x1f4>
lea    0x3169b(%rip),%rdx        # 72d02 <module.114+0x21a>
callq  8a00 <TIFFErrorExt@plt>
mov    %r15,%rdi
callq  41490 <jpeg_encap_unwind>
xor    %eax,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
nopl   0x0(%rax)

0000000000041680 <OJPEGLibjpegJpegSourceMgrTermSource>:
push   %rbp
mov    %rsp,%rbp
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)

0000000000041690 <TIFFFileno>:
push   %rbp
mov    %rsp,%rbp
movslq 0x8(%rdi),%rax
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

00000000000416a0 <TIFFSetFileno>:
push   %rbp
mov    %rsp,%rbp
movslq 0x8(%rdi),%rax
mov    %esi,0x8(%rdi)
leaveq 
retq   
nopl   (%rax)

00000000000416b0 <TIFFClientdata>:
push   %rbp
mov    %rsp,%rbp
mov    0x3b8(%rdi),%rax
leaveq 
retq   
nopl   (%rax)

00000000000416c0 <TIFFSetClientdata>:
push   %rbp
mov    %rsp,%rbp
mov    0x3b8(%rdi),%rax
mov    %rsi,0x3b8(%rdi)
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nop

00000000000416e0 <TIFFGetMode>:
push   %rbp
mov    %rsp,%rbp
movslq 0xc(%rdi),%rax
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

00000000000416f0 <TIFFSetMode>:
push   %rbp
mov    %rsp,%rbp
movslq 0xc(%rdi),%rax
mov    %esi,0xc(%rdi)
leaveq 
retq   
nopl   (%rax)

0000000000041700 <TIFFIsTiled>:
push   %rbp
mov    %rsp,%rbp
mov    0x10(%rdi),%eax
and    $0x400,%eax
test   %eax,%eax
je     41717 <TIFFIsTiled+0x17>
mov    $0x1,%eax
leaveq 
retq   
xor    %eax,%eax
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

0000000000041720 <TIFFIsByteSwapped>:
push   %rbp
mov    %rsp,%rbp
mov    0x10(%rdi),%eax
and    $0x80,%eax
test   %eax,%eax
je     41737 <TIFFIsByteSwapped+0x17>
mov    $0x1,%eax
leaveq 
retq   
xor    %eax,%eax
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

0000000000041740 <TIFFIsUpSampled>:
push   %rbp
mov    %rsp,%rbp
mov    0x10(%rdi),%eax
and    $0x4000,%eax
test   %eax,%eax
je     41757 <TIFFIsUpSampled+0x17>
mov    $0x1,%eax
leaveq 
retq   
xor    %eax,%eax
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

0000000000041760 <TIFFIsMSB2LSB>:
push   %rbp
mov    %rsp,%rbp
mov    0x10(%rdi),%eax
and    $0x1,%eax
test   %eax,%eax
je     41775 <TIFFIsMSB2LSB+0x15>
mov    $0x1,%eax
leaveq 
retq   
xor    %eax,%eax
leaveq 
retq   
nopl   0x0(%rax)

0000000000041780 <TIFFIsBigEndian>:
push   %rbp
mov    %rsp,%rbp
movzwl 0x268(%rdi),%eax
cmp    $0x4d4d,%ax
jne    41798 <TIFFIsBigEndian+0x18>
mov    $0x1,%eax
leaveq 
retq   
xor    %eax,%eax
leaveq 
retq   
nopl   0x0(%rax)

00000000000417a0 <TIFFGetReadProc>:
push   %rbp
mov    %rsp,%rbp
mov    0x3c0(%rdi),%rax
leaveq 
retq   
nopl   (%rax)

00000000000417b0 <TIFFGetWriteProc>:
push   %rbp
mov    %rsp,%rbp
mov    0x3c8(%rdi),%rax
leaveq 
retq   
nopl   (%rax)

00000000000417c0 <TIFFGetSeekProc>:
push   %rbp
mov    %rsp,%rbp
mov    0x3d0(%rdi),%rax
leaveq 
retq   
nopl   (%rax)

00000000000417d0 <TIFFGetCloseProc>:
push   %rbp
mov    %rsp,%rbp
mov    0x3d8(%rdi),%rax
leaveq 
retq   
nopl   (%rax)

00000000000417e0 <TIFFGetSizeProc>:
push   %rbp
mov    %rsp,%rbp
mov    0x3e0(%rdi),%rax
leaveq 
retq   
nopl   (%rax)

00000000000417f0 <TIFFGetMapFileProc>:
push   %rbp
mov    %rsp,%rbp
mov    0x3a8(%rdi),%rax
leaveq 
retq   
nopl   (%rax)

0000000000041800 <TIFFGetUnmapFileProc>:
push   %rbp
mov    %rsp,%rbp
mov    0x3b0(%rdi),%rax
leaveq 
retq   
nopl   (%rax)

0000000000041810 <TIFFCurrentRow>:
push   %rbp
mov    %rsp,%rbp
mov    0x27c(%rdi),%eax
leaveq 
retq   
nopl   0x0(%rax)

0000000000041820 <TIFFCurrentDirectory>:
push   %rbp
mov    %rsp,%rbp
movzwl 0x280(%rdi),%eax
leaveq 
retq   
nopl   (%rax)

0000000000041830 <TIFFCurrentStrip>:
push   %rbp
mov    %rsp,%rbp
mov    0x284(%rdi),%eax
leaveq 
retq   
nopl   0x0(%rax)

0000000000041840 <TIFFCurrentTile>:
push   %rbp
mov    %rsp,%rbp
mov    0x2ac(%rdi),%eax
leaveq 
retq   
nopl   0x0(%rax)

0000000000041850 <TIFFClientOpen>:
push   %rbp
mov    %rsp,%rbp
sub    $0x50,%rsp
movb   $0x1,-0x4a(%rbp)
movb   $0x0,-0x49(%rbp)
movzwl -0x4a(%rbp),%eax
cmp    $0x1,%ax
je     41889 <TIFFClientOpen+0x39>
lea    0x3158a(%rip),%rdi        # 72dfb <module.8+0xf>
lea    0x3158c(%rip),%rsi        # 72e04 <module.8+0x18>
mov    $0x70,%edx
lea    0x3158b(%rip),%rcx        # 72e0f <module.8+0x23>
callq  8490 <__assert_fail@plt>
lea    0x3155c(%rip),%rax        # 72dec <module.8>
mov    %rsi,%r10
mov    %rsi,-0x18(%rbp)
mov    %rax,%rsi
mov    %rdi,-0x40(%rbp)
mov    %rdx,-0x20(%rbp)
mov    %rcx,-0x38(%rbp)
mov    %r8,-0x30(%rbp)
mov    %r9,-0x28(%rbp)
mov    %r10,%rdi
callq  8950 <_TIFFgetMode@plt>
cmp    $0xffffffff,%eax
jne    418bf <TIFFClientOpen+0x6f>
xor    %eax,%eax
leaveq 
retq   
mov    -0x40(%rbp),%rcx
mov    %rcx,%rdi
mov    %r15,-0x10(%rbp)
mov    %rax,-0x40(%rbp)
mov    %rcx,%r15
callq  8350 <strlen@plt>
lea    0x439(%rax),%rdi
callq  8440 <_TIFFmalloc@plt>
test   %rax,%rax
je     419c6 <TIFFClientOpen+0x176>
mov    $0x438,%edx
mov    %rax,%rdi
xor    %esi,%esi
mov    %r14,-0x8(%rbp)
mov    %rax,%r14
callq  88e0 <_TIFFmemset@plt>
lea    0x438(%r14),%rdi
mov    %rdi,(%r14)
mov    %r15,%rsi
callq  8160 <strcpy@plt>
mov    -0x40(%rbp),%r9
mov    %r9,%rax
and    $0xfffffdbf,%eax
mov    %eax,0xc(%r14)
movw   $0xffff,0x280(%r14)
movq   $0x0,0x288(%r14)
movl   $0xffffffff,0x284(%r14)
movl   $0xffffffff,0x27c(%r14)
mov    -0x20(%rbp),%rdi
mov    %rdi,0x3b8(%r14)
mov    -0x38(%rbp),%rsi
test   %rsi,%rsi
je     419ea <TIFFClientOpen+0x19a>
mov    -0x30(%rbp),%rdx
test   %rdx,%rdx
je     419ea <TIFFClientOpen+0x19a>
mov    -0x28(%rbp),%r8
test   %r8,%r8
je     419ea <TIFFClientOpen+0x19a>
mov    0x10(%rbp),%rcx
test   %rcx,%rcx
je     419ea <TIFFClientOpen+0x19a>
mov    0x18(%rbp),%rax
test   %rax,%rax
je     419ea <TIFFClientOpen+0x19a>
mov    %rsi,0x3c0(%r14)
mov    %rdx,0x3c8(%r14)
mov    %r8,0x3d0(%r14)
mov    %rcx,0x3d8(%r14)
mov    %rax,0x3e0(%r14)
mov    0x20(%rbp),%rax
test   %rax,%rax
jne    41a0b <TIFFClientOpen+0x1bb>
lea    0x783(%rip),%rax        # 42140 <_tiffDummyMapProc>
mov    %rax,0x3a8(%r14)
jmp    41a12 <TIFFClientOpen+0x1c2>
mov    %r15,%rcx
xor    %eax,%eax
lea    0x3144c(%rip),%rdx        # 72e1e <module.8+0x32>
lea    0x31413(%rip),%rsi        # 72dec <module.8>
mov    -0x20(%rbp),%rdi
callq  8a00 <TIFFErrorExt@plt>
mov    -0x10(%rbp),%r15
xor    %eax,%eax
leaveq 
retq   
xor    %eax,%eax
lea    0x3144e(%rip),%rdx        # 72e41 <module.8+0x55>
lea    0x313f2(%rip),%rsi        # 72dec <module.8>
callq  8a00 <TIFFErrorExt@plt>
mov    -0x8(%rbp),%r14
mov    -0x10(%rbp),%r15
xor    %eax,%eax
leaveq 
retq   
mov    %rax,0x3a8(%r14)
mov    0x28(%rbp),%rax
test   %rax,%rax
jne    41a2b <TIFFClientOpen+0x1db>
lea    0x72e(%rip),%rax        # 42150 <_tiffDummyUnmapProc>
mov    %rax,0x3b0(%r14)
jmp    41a32 <TIFFClientOpen+0x1e2>
mov    %rax,0x3b0(%r14)
mov    %r14,%rdi
mov    %r13,-0x40(%rbp)
mov    %r9,%r13
callq  8740 <_TIFFSetDefaultCompressionState@plt>
movl   $0x1,0x10(%r14)
test   %r13d,%r13d
je     41a52 <TIFFClientOpen+0x202>
xor    %eax,%eax
jmp    41a5f <TIFFClientOpen+0x20f>
movl   $0x801,0x10(%r14)
mov    $0x1,%eax
mov    %r13,%rsi
and    $0x40,%esi
test   %rax,%rax
jne    41a76 <TIFFClientOpen+0x226>
cmp    $0x2,%r13d
je     41a76 <TIFFClientOpen+0x226>
mov    -0x18(%rbp),%rax
jmp    41a9b <TIFFClientOpen+0x24b>
mov    0x10(%r14),%eax
or     $0x8000,%eax
mov    %eax,0x10(%r14)
mov    -0x18(%rbp),%rax
jmp    41a9b <TIFFClientOpen+0x24b>
mov    0x10(%r14),%ecx
or     $0x10000,%ecx
mov    %ecx,0x10(%r14)
add    $0x1,%rax
movsbq (%rax),%rcx
test   %cl,%cl
jne    41b0e <TIFFClientOpen+0x2be>
lea    0x313c5(%rip),%rcx        # 72e6f <module.8+0x83>
mov    $0x8,%edx
and    $0x200,%r13d
test   %r13d,%r13d
jg     41ae3 <TIFFClientOpen+0x293>
mov    %rcx,%r13
mov    0x3c0(%r14),%rax
mov    0x3b8(%r14),%rdi
lea    0x268(%r14),%rsi
callq  *%rax
cmp    $0x8,%rax
je     41b41 <TIFFClientOpen+0x2f1>
mov    %r13,%rcx
mov    $0x8,%edx
movslq 0xc(%r14),%rax
test   %eax,%eax
je     41b87 <TIFFClientOpen+0x337>
mov    0x10(%r14),%eax
mov    %rax,%rsi
and    $0x80,%esi
test   %esi,%esi
jne    41bba <TIFFClientOpen+0x36a>
mov    $0x4949,%ecx
jmpq   41bbf <TIFFClientOpen+0x36f>
add    $0xffffffc8,%ecx
cmp    $0x35,%ecx
ja     41a97 <TIFFClientOpen+0x247>
lea    0x311f7(%rip),%rdx        # 72d14 <module.114+0x22c>
movslq (%rdx,%rcx,4),%rcx
add    %rdx,%rcx
jmpq   *%rcx
test   %esi,%esi
jle    41a97 <TIFFClientOpen+0x247>
mov    0x10(%r14),%ecx
or     $0x80000,%ecx
mov    %ecx,0x10(%r14)
jmpq   41a97 <TIFFClientOpen+0x247>
movzwl 0x268(%r14),%ecx
cmp    $0x4d4d,%cx
je     41d2c <TIFFClientOpen+0x4dc>
cmp    $0x4949,%cx
je     41d2c <TIFFClientOpen+0x4dc>
cmp    $0x5045,%cx
je     41d2c <TIFFClientOpen+0x4dc>
mov    %r15,%rsi
xor    %eax,%eax
mov    0x3b8(%r14),%rdi
lea    0x31324(%rip),%rdx        # 72ea1 <module.8+0xb5>
mov    %rcx,%r8
callq  8a00 <TIFFErrorExt@plt>
jmp    41b9b <TIFFClientOpen+0x34b>
mov    %rcx,%rdx
mov    %r15,%rsi
xor    %eax,%eax
mov    0x3b8(%r14),%rdi
callq  8a00 <TIFFErrorExt@plt>
mov    %r14,%rdi
movl   $0x0,0xc(%rdi)
callq  8a70 <TIFFCleanup@plt>
mov    -0x40(%rbp),%r13
mov    -0x8(%rbp),%r14
mov    -0x10(%rbp),%r15
xor    %eax,%eax
leaveq 
retq   
mov    $0x4d4d,%ecx
lea    0x268(%r14),%r13
mov    %cx,0x0(%r13)
and    $0x80000,%eax
test   %eax,%eax
jne    41d95 <TIFFClientOpen+0x545>
test   %esi,%esi
movw   $0x2a,0x26a(%r14)
movl   $0x0,0x26c(%r14)
je     41c02 <TIFFClientOpen+0x3b2>
lea    0x26a(%r14),%rdi
callq  87c0 <TIFFSwabShort@plt>
mov    $0x8,%edx
mov    %dx,0x278(%r14)
mov    0x3d0(%r14),%rax
mov    0x3b8(%r14),%rdi
xor    %esi,%esi
mov    %rsi,%rdx
callq  *%rax
mov    %r13,%rsi
mov    0x3c8(%r14),%rax
mov    0x3b8(%r14),%rdi
movzwl 0x278(%r14),%edx
callq  *%rax
movzwl 0x278(%r14),%ecx
cmp    %rax,%rcx
je     41ded <TIFFClientOpen+0x59d>
mov    %r15,%rsi
xor    %eax,%eax
mov    0x3b8(%r14),%rdi
lea    0x31229(%rip),%rdx        # 72e87 <module.8+0x9b>
callq  8a00 <TIFFErrorExt@plt>
jmpq   41b9b <TIFFClientOpen+0x34b>
test   %esi,%esi
jle    41a97 <TIFFClientOpen+0x247>
mov    0x10(%r14),%ecx
or     $0x80,%ecx
mov    %ecx,0x10(%r14)
jmpq   41a97 <TIFFClientOpen+0x247>
mov    0x10(%r14),%ecx
and    $0xfffffffc,%ecx
add    $0x1,%ecx
mov    %ecx,0x10(%r14)
jmpq   41a97 <TIFFClientOpen+0x247>
mov    0x10(%r14),%ecx
and    $0xfffffffc,%ecx
add    $0x2,%ecx
mov    %ecx,0x10(%r14)
jmpq   41a97 <TIFFClientOpen+0x247>
mov    0x10(%r14),%ecx
and    $0xfffffffc,%ecx
add    $0x2,%ecx
mov    %ecx,0x10(%r14)
jmpq   41a97 <TIFFClientOpen+0x247>
test   %r13d,%r13d
jne    41a97 <TIFFClientOpen+0x247>
mov    0x10(%r14),%ecx
or     $0x800,%ecx
mov    %ecx,0x10(%r14)
jmpq   41a97 <TIFFClientOpen+0x247>
test   %r13d,%r13d
jne    41a97 <TIFFClientOpen+0x247>
mov    0x10(%r14),%ecx
and    $0xfffff7ff,%ecx
mov    %ecx,0x10(%r14)
jmpq   41a97 <TIFFClientOpen+0x247>
test   %r13d,%r13d
jne    41a97 <TIFFClientOpen+0x247>
mov    0x10(%r14),%ecx
or     $0x8000,%ecx
mov    %ecx,0x10(%r14)
jmpq   41a97 <TIFFClientOpen+0x247>
test   %r13d,%r13d
jne    41a97 <TIFFClientOpen+0x247>
mov    0x10(%r14),%ecx
and    $0xffff7fff,%ecx
mov    %ecx,0x10(%r14)
jmpq   41a97 <TIFFClientOpen+0x247>
cmp    $0x4d4d,%cx
jne    41d40 <TIFFClientOpen+0x4f0>
mov    0x10(%r14),%eax
or     $0x80,%eax
mov    %eax,0x10(%r14)
mov    0x10(%r14),%eax
and    $0x80,%eax
test   %eax,%eax
je     41d59 <TIFFClientOpen+0x509>
lea    0x26a(%r14),%rdi
callq  87c0 <TIFFSwabShort@plt>
movzwl 0x26a(%r14),%ecx
cmp    $0x2a,%cx
je     41e45 <TIFFClientOpen+0x5f5>
cmp    $0x2b,%cx
je     41e45 <TIFFClientOpen+0x5f5>
mov    %r15,%rsi
xor    %eax,%eax
mov    0x3b8(%r14),%rdi
lea    0x3114c(%rip),%rdx        # 72ed4 <module.8+0xe8>
mov    %rcx,%r8
callq  8a00 <TIFFErrorExt@plt>
jmpq   41b9b <TIFFClientOpen+0x34b>
test   %esi,%esi
movw   $0x2b,0x26a(%r14)
movw   $0x8,0x26c(%r14)
movw   $0x0,0x26e(%r14)
movq   $0x0,0x270(%r14)
mov    $0x10,%edx
je     41c02 <TIFFClientOpen+0x3b2>
lea    0x26a(%r14),%rdi
callq  87c0 <TIFFSwabShort@plt>
lea    0x26c(%r14),%rdi
callq  87c0 <TIFFSwabShort@plt>
mov    $0x10,%edx
jmpq   41c02 <TIFFClientOpen+0x3b2>
movzwl 0x268(%r14),%eax
cmp    $0x4d4d,%ax
jne    41e08 <TIFFClientOpen+0x5b8>
mov    0x10(%r14),%eax
or     $0x80,%eax
mov    %eax,0x10(%r14)
mov    %r14,%rdi
callq  88d0 <TIFFDefaultDirectory@plt>
test   %eax,%eax
je     41b9b <TIFFClientOpen+0x34b>
mov    %r14,%rax
movq   $0x0,0x18(%rax)
movq   $0x0,0x28(%rax)
movw   $0x0,0x30(%rax)
movw   $0x0,0x32(%rax)
mov    -0x40(%rbp),%r13
mov    -0x8(%rbp),%r14
mov    -0x10(%rbp),%r15
leaveq 
retq   
cmp    $0x2a,%cx
je     41e91 <TIFFClientOpen+0x641>
mov    0x3c0(%r14),%rax
mov    0x3b8(%r14),%rdi
lea    0x270(%r14),%r13
mov    %r13,%rsi
mov    $0x8,%edx
callq  *%rax
cmp    $0x8,%rax
je     41f8d <TIFFClientOpen+0x73d>
mov    %r15,%rsi
xor    %eax,%eax
mov    0x3b8(%r14),%rdi
lea    0x30fe8(%rip),%rdx        # 72e6f <module.8+0x83>
callq  8a00 <TIFFErrorExt@plt>
jmpq   41b9b <TIFFClientOpen+0x34b>
mov    0x10(%r14),%eax
and    $0x80,%eax
test   %eax,%eax
je     41eaa <TIFFClientOpen+0x65a>
lea    0x26c(%r14),%rdi
callq  8480 <TIFFSwabLong@plt>
movw   $0x8,0x278(%r14)
mov    0x10(%r14),%eax
mov    %rax,%rcx
or     $0x200,%ecx
mov    %ecx,0x10(%r14)
movq   $0x0,0x368(%r14)
movq   $0x0,0x388(%r14)
movq   $0x0,0x370(%r14)
movq   $0x0,0x378(%r14)
movq   $0x0,0x380(%r14)
mov    -0x18(%rbp),%rcx
movsbq (%rcx),%rcx
cmp    $0x61,%cl
je     41fed <TIFFClientOpen+0x79d>
cmp    $0x72,%cl
jne    41b9b <TIFFClientOpen+0x34b>
and    $0x80000,%eax
test   %eax,%eax
jne    4200e <TIFFClientOpen+0x7be>
mov    0x26c(%r14),%eax
mov    %rax,0x20(%r14)
mov    0x10(%r14),%eax
and    $0x800,%eax
test   %eax,%eax
je     41f6b <TIFFClientOpen+0x71b>
mov    0x3a8(%r14),%rax
mov    0x3b8(%r14),%rdi
lea    0x398(%r14),%rsi
lea    -0x48(%rbp),%rdx
callq  *%rax
test   %eax,%eax
jne    4201e <TIFFClientOpen+0x7ce>
mov    0x10(%r14),%eax
and    $0xfffff7ff,%eax
mov    %eax,0x10(%r14)
mov    0x10(%r14),%eax
and    $0x10000,%eax
test   %eax,%eax
je     4202e <TIFFClientOpen+0x7de>
mov    %r14,%rax
mov    -0x40(%rbp),%r13
mov    -0x8(%rbp),%r14
mov    -0x10(%rbp),%r15
leaveq 
retq   
mov    0x10(%r14),%eax
and    $0x80,%eax
test   %eax,%eax
je     41fae <TIFFClientOpen+0x75e>
lea    0x26c(%r14),%rdi
callq  87c0 <TIFFSwabShort@plt>
mov    %r13,%rdi
callq  8730 <TIFFSwabLong8@plt>
movzwl 0x26c(%r14),%ecx
cmp    $0x8,%cx
jne    42065 <TIFFClientOpen+0x815>
movzwl 0x26e(%r14),%ecx
test   %cx,%cx
jne    42085 <TIFFClientOpen+0x835>
movw   $0x10,0x278(%r14)
mov    0x10(%r14),%eax
or     $0x80000,%eax
mov    %eax,0x10(%r14)
jmpq   41eb4 <TIFFClientOpen+0x664>
mov    %r14,%rdi
callq  88d0 <TIFFDefaultDirectory@plt>
test   %eax,%eax
je     41b9b <TIFFClientOpen+0x34b>
mov    %r14,%rax
mov    -0x40(%rbp),%r13
mov    -0x8(%rbp),%r14
mov    -0x10(%rbp),%r15
leaveq 
retq   
mov    0x270(%r14),%rax
mov    %rax,0x20(%r14)
jmpq   41f2e <TIFFClientOpen+0x6de>
mov    -0x48(%rbp),%rax
mov    %rax,0x3a0(%r14)
jmpq   41f6b <TIFFClientOpen+0x71b>
mov    %r14,%rdi
callq  8b30 <TIFFReadDirectory@plt>
test   %eax,%eax
je     41b9b <TIFFClientOpen+0x34b>
movq   $0xffffffffffffffff,0x390(%r14)
mov    0x10(%r14),%eax
or     $0x10,%eax
mov    %eax,0x10(%r14)
mov    %r14,%rax
mov    -0x40(%rbp),%r13
mov    -0x8(%rbp),%r14
mov    -0x10(%rbp),%r15
leaveq 
retq   
mov    %r15,%rsi
xor    %eax,%eax
mov    0x3b8(%r14),%rdi
lea    0x30e8a(%rip),%rdx        # 72f02 <module.8+0x116>
mov    %rcx,%r8
callq  8a00 <TIFFErrorExt@plt>
jmpq   41b9b <TIFFClientOpen+0x34b>
mov    %r15,%rsi
xor    %eax,%eax
mov    0x3b8(%r14),%rdi
lea    0x30e9c(%rip),%rdx        # 72f34 <module.8+0x148>
mov    %rcx,%r8
callq  8a00 <TIFFErrorExt@plt>
jmpq   41b9b <TIFFClientOpen+0x34b>
data16 nopw %cs:0x0(%rax,%rax,1)

00000000000420b0 <TIFFFileName>:
push   %rbp
mov    %rsp,%rbp
mov    (%rdi),%rax
leaveq 
retq   
nopl   0x0(%rax)

00000000000420c0 <TIFFSetFileName>:
push   %rbp
mov    %rsp,%rbp
mov    (%rdi),%rax
mov    %rsi,(%rdi)
leaveq 
retq   
nopl   0x0(%rax)

00000000000420d0 <_TIFFgetMode>:
push   %rbp
mov    %rsp,%rbp
xor    %eax,%eax
movsbq (%rdi),%rcx
cmp    $0x71,%cl
jle    420f5 <_TIFFgetMode+0x25>
cmp    $0x72,%cl
je     42117 <_TIFFgetMode+0x47>
cmp    $0x77,%cl
jne    420fa <_TIFFgetMode+0x2a>
cmp    $0x77,%cl
jne    42128 <_TIFFgetMode+0x58>
mov    $0x242,%eax
leaveq 
retq   
cmp    $0x61,%cl
je     420e9 <_TIFFgetMode+0x19>
mov    %rdi,%rcx
mov    %rax,%rdi
xor    %eax,%eax
lea    0x30e59(%rip),%rdx        # 72f62 <module.8+0x176>
callq  8a00 <TIFFErrorExt@plt>
mov    $0xffffffffffffffff,%rax
leaveq 
retq   
movsbq 0x1(%rdi),%rcx
cmp    $0x2b,%cl
jne    4212f <_TIFFgetMode+0x5f>
mov    $0x2,%eax
leaveq 
retq   
mov    $0x42,%eax
leaveq 
retq   
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   0x0(%rax)

0000000000042140 <_tiffDummyMapProc>:
push   %rbp
mov    %rsp,%rbp
xor    %eax,%eax
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

0000000000042150 <_tiffDummyUnmapProc>:
push   %rbp
mov    %rsp,%rbp
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)

0000000000042160 <TIFFInitPackBits>:
push   %rbp
mov    %rsp,%rbp
lea    0x5d5(%rip),%rax        # 42740 <PackBitsDecode>
mov    %rax,0x2f8(%rdi)
mov    %rax,0x308(%rdi)
mov    %rax,0x318(%rdi)
lea    0x49(%rip),%rax        # 421d0 <PackBitsPreEncode>
mov    %rax,0x2e8(%rdi)
lea    0xab(%rip),%rax        # 42240 <PackBitsPostEncode>
mov    %rax,0x2f0(%rdi)
lea    0xcd(%rip),%rax        # 42270 <PackBitsEncode>
mov    %rax,0x300(%rdi)
lea    0x4ef(%rip),%rax        # 426a0 <PackBitsEncodeChunk>
mov    %rax,0x310(%rdi)
mov    %rax,0x320(%rdi)
mov    $0x1,%eax
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)

00000000000421d0 <PackBitsPreEncode>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x8(%rbp)
mov    %rdi,%r15
mov    $0x8,%edi
callq  8440 <_TIFFmalloc@plt>
mov    %rax,0x350(%r15)
test   %rax,%rax
jne    421fd <PackBitsPreEncode+0x2d>
xor    %eax,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
mov    0x10(%r15),%ecx
and    $0x400,%ecx
test   %ecx,%ecx
jne    42224 <PackBitsPreEncode+0x54>
mov    %r15,%rdi
mov    %rax,%r15
callq  8410 <TIFFScanlineSize@plt>
mov    %rax,(%r15)
mov    $0x1,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
mov    %r15,%rdi
mov    %rax,%r15
callq  80d0 <TIFFTileRowSize@plt>
mov    %rax,(%r15)
mov    $0x1,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
nopl   (%rax)

0000000000042240 <PackBitsPostEncode>:
push   %rbp
mov    %rsp,%rbp
mov    $0x1,%eax
mov    0x350(%rdi),%rdi
test   %rdi,%rdi
jne    42257 <PackBitsPostEncode+0x17>
leaveq 
retq   
callq  8bb0 <_TIFFfree@plt>
mov    $0x1,%eax
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

0000000000042270 <PackBitsEncode>:
push   %rbp
mov    %rsp,%rbp
sub    $0x60,%rsp
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rdi,-0x30(%rbp)
mov    0x388(%rdi),%rax
mov    %rax,-0x48(%rbp)
mov    0x370(%rdi),%r8
add    0x368(%rdi),%r8
mov    %r8,-0x58(%rbp)
xor    %r9d,%r9d
mov    $0x1,%eax
mov    $0x2,%edi
mov    $0x3,%r10d
mov    %r9,%r12
mov    %r12,%r15
jmp    422e5 <PackBitsEncode+0x75>
movb   $0x0,(%rbx)
mov    %r11b,0x1(%rbx)
lea    0x2(%rbx),%rcx
mov    %rcx,-0x48(%rbp)
mov    %rbx,%r12
mov    -0x38(%rbp),%rsi
mov    -0x50(%rbp),%rdx
mov    %rax,%r15
test   %rdx,%rdx
jle    42303 <PackBitsEncode+0x93>
movzbl (%rsi),%r11d
mov    %r11,-0x40(%rbp)
lea    0x1(%rsi),%rcx
add    $0xffffffffffffffff,%rdx
mov    -0x48(%rbp),%rbx
mov    %rax,%r13
jmp    42357 <PackBitsEncode+0xe7>
mov    -0x30(%rbp),%rsi
mov    0x388(%rsi),%rcx
mov    -0x48(%rbp),%rdx
neg    %rcx
add    %rdx,%rcx
add    0x390(%rsi),%rcx
mov    %rcx,0x390(%rsi)
mov    %rdx,0x388(%rsi)
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
movzbl (%rcx),%esi
cmp    %r11b,%sil
jne    4236a <PackBitsEncode+0xfa>
add    $0x1,%rcx
add    $0xffffffffffffffff,%rdx
add    $0x1,%r13
test   %rdx,%rdx
jg     42343 <PackBitsEncode+0xd3>
mov    %rdx,-0x50(%rbp)
mov    %rcx,-0x38(%rbp)
mov    -0x30(%rbp),%r14
jmp    42399 <PackBitsEncode+0x129>
mov    %rdx,-0x50(%rbp)
mov    %rcx,-0x38(%rbp)
mov    -0x30(%rbp),%r14
jmp    42399 <PackBitsEncode+0x129>
cmp    $0x1,%r13
jle    423d3 <PackBitsEncode+0x163>
cmp    $0x80,%r13
jle    423f5 <PackBitsEncode+0x185>
movb   $0x81,(%rbx)
mov    %r11b,0x1(%rbx)
add    $0x2,%rbx
add    $0xffffffffffffff80,%r13
mov    %rdi,%r15
lea    0x2(%rbx),%rcx
cmp    %r8,%rcx
jae    42419 <PackBitsEncode+0x1a9>
mov    %rbx,-0x48(%rbp)
cmp    $0x1,%r15d
jbe    42466 <PackBitsEncode+0x1f6>
cmp    $0x2,%r15d
je     424a7 <PackBitsEncode+0x237>
cmp    $0x3,%r15d
jne    424d5 <PackBitsEncode+0x265>
cmp    $0x1,%r13
je     424e2 <PackBitsEncode+0x272>
mov    %rdi,%r15
jmp    42399 <PackBitsEncode+0x129>
movb   $0x0,(%rbx)
mov    %r11b,0x1(%rbx)
lea    0x2(%rbx),%rcx
mov    %rcx,-0x48(%rbp)
mov    %rbx,%r12
mov    -0x38(%rbp),%rsi
mov    -0x50(%rbp),%rdx
mov    %rax,%r15
jmpq   422e5 <PackBitsEncode+0x75>
mov    %rax,%rcx
sub    %r13b,%cl
mov    %cl,(%rbx)
mov    %r11b,0x1(%rbx)
lea    0x2(%rbx),%rcx
mov    %rcx,-0x48(%rbp)
mov    -0x38(%rbp),%rsi
mov    -0x50(%rbp),%rdx
mov    %rdi,%r15
jmpq   422e5 <PackBitsEncode+0x75>
cmp    $0x1,%r15d
jne    424fa <PackBitsEncode+0x28a>
mov    0x388(%r14),%rax
neg    %rax
add    %r12,%rax
add    0x390(%r14),%rax
mov    %rax,0x390(%r14)
mov    %r14,%rdi
callq  86e0 <TIFFFlushData1@plt>
test   %eax,%eax
jne    42558 <PackBitsEncode+0x2e8>
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
xor    %eax,%eax
leaveq 
retq   
test   %r15d,%r15d
je     42378 <PackBitsEncode+0x108>
cmp    $0x1,%r15d
jne    4256f <PackBitsEncode+0x2ff>
cmp    $0x1,%r13
jle    4257c <PackBitsEncode+0x30c>
cmp    $0x80,%r13
jle    42599 <PackBitsEncode+0x329>
movb   $0x81,(%rbx)
mov    %r11b,0x1(%rbx)
add    $0x2,%rbx
add    $0xffffffffffffff80,%r13
mov    %r10,%r15
jmpq   42399 <PackBitsEncode+0x129>
cmp    $0x1,%r13
jle    422c8 <PackBitsEncode+0x58>
cmp    $0x80,%r13
jle    425bd <PackBitsEncode+0x34d>
movb   $0x81,(%rbx)
mov    %r11b,0x1(%rbx)
add    $0x2,%rbx
add    $0xffffffffffffff80,%r13
mov    %rdi,%r15
jmpq   42399 <PackBitsEncode+0x129>
mov    -0x38(%rbp),%rsi
mov    -0x50(%rbp),%rdx
jmpq   422e5 <PackBitsEncode+0x75>
movzbl -0x2(%rbx),%ecx
cmp    $0xff,%cl
je     425e1 <PackBitsEncode+0x371>
mov    %rax,%r13
mov    %rdi,%r15
jmpq   42399 <PackBitsEncode+0x129>
cmp    $0x3,%r15d
je     42423 <PackBitsEncode+0x1b3>
mov    0x388(%r14),%rax
sub    %rax,%rbx
add    0x390(%r14),%rbx
mov    %rbx,0x390(%r14)
mov    %r11,%rbx
mov    %r14,%rdi
callq  86e0 <TIFFFlushData1@plt>
test   %eax,%eax
je     425fa <PackBitsEncode+0x38a>
mov    0x388(%r14),%rcx
mov    %rbx,%r11
mov    %rcx,%rbx
xor    %r9d,%r9d
mov    $0x3,%r10d
mov    $0x1,%eax
mov    $0x2,%edi
mov    -0x58(%rbp),%r8
jmpq   423a2 <PackBitsEncode+0x132>
mov    0x388(%r14),%rcx
sub    %r12,%rbx
mov    -0x38(%rbp),%rdx
mov    -0x50(%rbp),%rax
jmpq   42626 <PackBitsEncode+0x3b6>
mov    -0x38(%rbp),%rsi
mov    -0x50(%rbp),%rdx
jmpq   422e5 <PackBitsEncode+0x75>
movzbl (%r12),%ecx
add    $0x1,%ecx
mov    %cl,(%r12)
cmp    $0x7f,%cl
je     4265d <PackBitsEncode+0x3ed>
mov    %rax,%r15
jmpq   42660 <PackBitsEncode+0x3f0>
mov    %rax,%rcx
sub    %r13b,%cl
mov    %cl,(%rbx)
mov    %r11b,0x1(%rbx)
lea    0x2(%rbx),%rcx
mov    %rcx,-0x48(%rbp)
mov    -0x38(%rbp),%rsi
mov    -0x50(%rbp),%rdx
mov    %r10,%r15
jmpq   422e5 <PackBitsEncode+0x75>
mov    %rax,%rcx
sub    %r13b,%cl
mov    %cl,(%rbx)
mov    %r11b,0x1(%rbx)
lea    0x2(%rbx),%rcx
mov    %rcx,-0x48(%rbp)
mov    -0x38(%rbp),%rsi
mov    -0x50(%rbp),%rdx
mov    %rdi,%r15
jmpq   422e5 <PackBitsEncode+0x75>
movzbl (%r12),%ecx
cmp    $0x7d,%cl
jbe    42678 <PackBitsEncode+0x408>
mov    %rax,%r13
mov    %rdi,%r15
jmpq   42399 <PackBitsEncode+0x129>
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
xor    %eax,%eax
leaveq 
retq   
movzbl (%r12),%esi
mov    %sil,(%rcx)
add    $0x1,%r12
add    $0x1,%rcx
add    $0xffffffffffffffff,%rbx
test   %rbx,%rbx
jg     42612 <PackBitsEncode+0x3a2>
mov    0x388(%r14),%r12
mov    %rax,-0x50(%rbp)
mov    %rdx,-0x38(%rbp)
mov    %rcx,%rbx
mov    -0x40(%rbp),%r11
xor    %r9d,%r9d
mov    $0x3,%r10d
mov    $0x1,%eax
mov    $0x2,%edi
mov    -0x58(%rbp),%r8
jmpq   423a2 <PackBitsEncode+0x132>
mov    %r9,%r15
mov    %r11b,(%rbx)
lea    0x1(%rbx),%rcx
mov    %rcx,-0x48(%rbp)
mov    -0x38(%rbp),%rsi
mov    -0x50(%rbp),%rdx
jmpq   422e5 <PackBitsEncode+0x75>
add    $0x2,%ecx
mov    %cl,(%r12)
cmp    $0x7f,%cl
je     42689 <PackBitsEncode+0x419>
mov    %rax,%r15
jmp    4268c <PackBitsEncode+0x41c>
mov    %r9,%r15
movzbl -0x1(%rbx),%ecx
mov    %cl,-0x2(%rbx)
mov    %rax,%r13
jmpq   42399 <PackBitsEncode+0x129>
nopl   0x0(%rax,%rax,1)

00000000000426a0 <PackBitsEncodeChunk>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    %rcx,-0x30(%rbp)
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    0x350(%rdi),%rax
mov    (%rax),%r14
mov    %rdx,%rbx
mov    %rsi,%r12
mov    %rdi,%r13
jmp    426f4 <PackBitsEncodeChunk+0x54>
mov    %rbx,%r15
mov    %r13,%rdi
mov    %r12,%rsi
mov    %r15,%rdx
callq  42270 <PackBitsEncode>
test   %eax,%eax
js     42714 <PackBitsEncodeChunk+0x74>
sub    %r15,%rbx
add    %r15,%r12
mov    -0x30(%rbp),%rcx
test   %rbx,%rbx
jg     42731 <PackBitsEncodeChunk+0x91>
mov    $0x1,%eax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
mov    $0xffffffffffffffff,%rax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
cmp    %rbx,%r14
jg     426d5 <PackBitsEncodeChunk+0x35>
mov    %r14,%r15
jmp    426d8 <PackBitsEncodeChunk+0x38>
nopl   0x0(%rax,%rax,1)

0000000000042740 <PackBitsDecode>:
push   %rbp
mov    %rsp,%rbp
sub    $0x40,%rsp
mov    %rdi,-0x40(%rbp)
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rsi,%rbx
mov    %rdx,%r12
mov    %rdi,%r14
mov    0x388(%r14),%rcx
mov    0x390(%r14),%r13
lea    0x307f3(%rip),%rsi        # 72f71 <module.8>
mov    $0x1,%eax
lea    0x307f6(%rip),%rdx        # 72f80 <module.8+0xf>
jmp    427cf <PackBitsDecode+0x8f>
mov    %rbx,%rdi
mov    %r15,%rsi
mov    %rcx,%rdx
mov    %rbx,-0x38(%rbp)
mov    %rcx,%rbx
mov    %r8,%r14
callq  8790 <_TIFFmemcpy@plt>
sub    %rbx,%r12
sub    %rbx,%r13
lea    0x1(%r14,%r15,1),%rcx
mov    -0x38(%rbp),%rax
lea    0x1(%r14,%rax,1),%rbx
mov    -0x40(%rbp),%r14
mov    $0x1,%eax
lea    0x307a9(%rip),%rsi        # 72f71 <module.8>
lea    0x307b1(%rip),%rdx        # 72f80 <module.8+0xf>
test   %r13,%r13
jle    42863 <PackBitsDecode+0x123>
test   %r12,%r12
jle    42863 <PackBitsDecode+0x123>
lea    0x1(%rcx),%r15
lea    -0x1(%r13),%r9
movsbq (%rcx),%r8
test   %r8b,%r8b
js     4288c <PackBitsDecode+0x14c>
lea    0x1(%r8),%rcx
cmp    %rcx,%r12
jl     42804 <PackBitsDecode+0xc4>
mov    %r9,%r13
jmp    42831 <PackBitsDecode+0xf1>
sub    %r12,%r8
lea    0x1(%r8),%rcx
xor    %eax,%eax
mov    0x3b8(%r14),%rdi
mov    %r9,%r13
callq  85a0 <TIFFWarningExt@plt>
lea    -0x1(%r12),%r8
mov    -0x40(%rbp),%r14
mov    $0x1,%eax
lea    0x30740(%rip),%rsi        # 72f71 <module.8>
lea    0x1(%r8),%rcx
cmp    %r13,%rcx
jle    4278c <PackBitsDecode+0x4c>
mov    %rax,%rbx
xor    %eax,%eax
mov    0x3b8(%r14),%rdi
lea    0x3075c(%rip),%rdx        # 72fad <module.8+0x3c>
callq  85a0 <TIFFWarningExt@plt>
mov    %rbx,%rax
mov    %r15,%rcx
lea    0x3070e(%rip),%rsi        # 72f71 <module.8>
test   %r12,%r12
mov    %rcx,0x388(%r14)
mov    %r13,0x390(%r14)
jg     4289d <PackBitsDecode+0x15d>
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
cmp    $0x80,%r8b
jne    428d1 <PackBitsDecode+0x191>
mov    %r15,%rcx
mov    %r9,%r13
jmpq   427cf <PackBitsDecode+0x8f>
xor    %eax,%eax
mov    0x3b8(%r14),%rdi
lea    0x30730(%rip),%rdx        # 72fdd <module.8+0x6c>
mov    0x27c(%r14),%ecx
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
mov    %rax,%rdi
sub    %r8,%rdi
cmp    %r12,%rdi
jle    42918 <PackBitsDecode+0x1d8>
lea    (%r8,%r12,1),%rdi
sub    %rdi,%rax
xor    %r8d,%r8d
mov    0x3b8(%r14),%rdi
mov    %rcx,-0x38(%rbp)
mov    %r13,-0x30(%rbp)
mov    %rax,%rcx
mov    %r8,%rax
mov    %r9,%r13
callq  85a0 <TIFFWarningExt@plt>
mov    %r13,%r9
mov    -0x30(%rbp),%r13
mov    -0x38(%rbp),%rcx
lea    0x3066b(%rip),%rdx        # 72f80 <module.8+0xf>
mov    %r12,%rdi
test   %r9,%r9
je     42926 <PackBitsDecode+0x1e6>
movzbl (%r15),%esi
mov    %rdi,%rax
jmp    42963 <PackBitsDecode+0x223>
xor    %eax,%eax
mov    0x3b8(%r14),%rdi
lea    0x3063b(%rip),%rbx        # 72f71 <module.8>
mov    %rbx,%rsi
lea    0x3066d(%rip),%rdx        # 72fad <module.8+0x3c>
callq  85a0 <TIFFWarningExt@plt>
mov    %r15,%rcx
mov    %rbx,%rsi
xor    %r13d,%r13d
mov    $0x1,%eax
jmpq   42863 <PackBitsDecode+0x123>
mov    %sil,(%rbx)
add    $0x1,%rbx
add    $0xffffffffffffffff,%rax
test   %rax,%rax
jg     42958 <PackBitsDecode+0x218>
sub    %rdi,%r12
add    $0x2,%rcx
add    $0xfffffffffffffffe,%r13
mov    $0x1,%eax
lea    0x305f2(%rip),%rsi        # 72f71 <module.8>
jmpq   427cf <PackBitsDecode+0x8f>
nopw   %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

0000000000042990 <TIFFInitPixarLog>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
cmp    $0x808d,%esi
je     429bf <TIFFInitPixarLog+0x2f>
lea    0x3072e(%rip),%rdi        # 730d5 <module.10+0x11>
lea    0x30746(%rip),%rsi        # 730f4 <module.10+0x30>
mov    $0x581,%edx
lea    0x30749(%rip),%rcx        # 73103 <module.10+0x3f>
callq  8490 <__assert_fail@plt>
lea    0x371c2(%rip),%rsi        # 79b88 <pixarlogFields>
mov    $0x2,%edx
mov    %rdi,%rax
mov    %r15,-0x10(%rbp)
mov    %rdi,%r15
mov    %rax,%rdi
callq  8520 <_TIFFMergeFields@plt>
test   %eax,%eax
jne    42a05 <TIFFInitPixarLog+0x75>
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
lea    0x30723(%rip),%rdx        # 73114 <module.10+0x50>
lea    0x306cc(%rip),%rsi        # 730c4 <module.10>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x10(%rbp),%r15
leaveq 
retq   
mov    $0x150,%edi
callq  8440 <_TIFFmalloc@plt>
mov    %rax,0x350(%r15)
test   %rax,%rax
je     42b60 <TIFFInitPixarLog+0x1d0>
mov    %rax,%rdi
mov    %r14,-0x8(%rbp)
mov    %rax,%r14
mov    $0x150,%edx
xor    %esi,%esi
callq  88e0 <_TIFFmemset@plt>
movl   $0x0,0xd8(%r14)
movl   $0xffffffff,0x108(%r14)
lea    0x1dde(%rip),%rax        # 44830 <PixarLogFixupTags>
mov    %rax,0x2c0(%r15)
lea    0x1de0(%rip),%rax        # 44840 <PixarLogSetupDecode>
mov    %rax,0x2c8(%r15)
lea    0x2002(%rip),%rax        # 44a70 <PixarLogPreDecode>
mov    %rax,0x2d0(%r15)
lea    0x17e4(%rip),%rax        # 44260 <PixarLogDecode>
mov    %rax,0x2f8(%r15)
mov    %rax,0x308(%r15)
mov    %rax,0x318(%r15)
lea    0x2068(%rip),%rax        # 44b00 <PixarLogSetupEncode>
mov    %rax,0x2d8(%r15)
lea    0x21fa(%rip),%rax        # 44ca0 <PixarLogPreEncode>
mov    %rax,0x2e8(%r15)
lea    0x3a8c(%rip),%rax        # 46540 <PixarLogPostEncode>
mov    %rax,0x2f0(%r15)
lea    0x149e(%rip),%rax        # 43f60 <PixarLogEncode>
mov    %rax,0x300(%r15)
mov    %rax,0x310(%r15)
mov    %rax,0x320(%r15)
lea    0x3b72(%rip),%rax        # 46650 <PixarLogClose>
mov    %rax,0x328(%r15)
lea    0x3bb4(%rip),%rax        # 466a0 <PixarLogCleanup>
mov    %rax,0x338(%r15)
mov    0x410(%r15),%rax
mov    %rax,0x110(%r14)
lea    0x3f08(%rip),%rax        # 46a10 <PixarLogVGetField>
mov    %rax,0x410(%r15)
mov    0x408(%r15),%rax
mov    %rax,0x118(%r14)
lea    0x3cbc(%rip),%rax        # 467e0 <PixarLogVSetField>
mov    %rax,0x408(%r15)
mov    %r15,%rdi
movl   $0xffffffff,0x10c(%r14)
movl   $0x0,0x104(%r14)
callq  8ac0 <TIFFPredictorInit@plt>
mov    %r14,%rdi
callq  43a90 <PixarLogMakeTables>
mov    $0x1,%eax
mov    -0x8(%rbp),%r14
mov    -0x10(%rbp),%r15
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
lea    0x305d0(%rip),%rdx        # 73140 <module.10+0x7c>
lea    0x3054d(%rip),%rsi        # 730c4 <module.10>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x10(%rbp),%r15
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nop

0000000000042b90 <horizontalAccumulateF>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
cmp    %esi,%edx
jle    42b9e <horizontalAccumulateF+0xe>
leaveq 
retq   
cmp    $0x3,%edx
je     42bde <horizontalAccumulateF+0x4e>
cmp    $0x4,%edx
je     42c30 <horizontalAccumulateF+0xa0>
mov    %rdx,%r9
movzwl (%rdi),%eax
and    $0x7ff,%eax
mov    %eax,%eax
movss  (%r8,%rax,4),%xmm0
movss  %xmm0,(%rcx)
add    $0x2,%rdi
add    $0x4,%rcx
add    $0xffffffff,%r9d
test   %r9d,%r9d
jg     42baf <horizontalAccumulateF+0x1f>
movslq %edx,%r11
sub    %edx,%esi
jmpq   42cda <horizontalAccumulateF+0x14a>
movzwl (%rdi),%edx
and    $0x7ff,%edx
mov    %edx,%eax
movss  (%r8,%rax,4),%xmm0
movzwl 0x2(%rdi),%eax
and    $0x7ff,%eax
mov    %eax,%r9d
movss  (%r8,%r9,4),%xmm2
movzwl 0x4(%rdi),%r9d
and    $0x7ff,%r9d
mov    %r9d,%r10d
movss  (%r8,%r10,4),%xmm1
movss  %xmm0,(%rcx)
movss  %xmm2,0x4(%rcx)
movss  %xmm1,0x8(%rcx)
add    $0xfffffffd,%esi
mov    %r15,-0x10(%rbp)
jmpq   42d4d <horizontalAccumulateF+0x1bd>
movzwl (%rdi),%eax
and    $0x7ff,%eax
mov    %eax,%edx
movss  (%r8,%rdx,4),%xmm3
movzwl 0x2(%rdi),%edx
and    $0x7ff,%edx
mov    %edx,%r9d
movss  (%r8,%r9,4),%xmm2
movzwl 0x4(%rdi),%r9d
and    $0x7ff,%r9d
mov    %r9d,%r10d
movss  (%r8,%r10,4),%xmm1
movzwl 0x6(%rdi),%r10d
and    $0x7ff,%r10d
mov    %r10d,%r11d
movss  (%r8,%r11,4),%xmm0
movss  %xmm3,(%rcx)
movss  %xmm2,0x4(%rcx)
movss  %xmm1,0x8(%rcx)
movss  %xmm0,0xc(%rcx)
add    $0xfffffffc,%esi
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
jmpq   42de4 <horizontalAccumulateF+0x254>
mov    %rdx,%r9
movzwl (%rdi,%r11,2),%r10d
movzwl (%rdi),%eax
add    %r10d,%eax
mov    %ax,(%rdi,%r11,2)
movzwl (%rdi),%eax
and    $0x7ff,%eax
mov    %eax,%eax
movss  (%r8,%rax,4),%xmm0
movss  %xmm0,(%rcx)
add    $0x2,%rdi
add    $0x4,%rcx
add    $0xffffffff,%r9d
test   %r9d,%r9d
jg     42ca3 <horizontalAccumulateF+0x113>
sub    %edx,%esi
test   %esi,%esi
jg     42ca0 <horizontalAccumulateF+0x110>
leaveq 
retq   
lea    0x6(%rdi),%r15
movzwl (%r15),%r10d
add    %r10d,%edx
mov    %rdx,%r10
and    $0x7ff,%r10d
mov    %r10d,%r10d
movss  (%r8,%r10,4),%xmm2
lea    0xc(%rcx),%r11
movzwl 0x8(%rdi),%r10d
add    %r10d,%eax
mov    %rax,%r10
and    $0x7ff,%r10d
mov    %r10d,%r10d
movss  (%r8,%r10,4),%xmm1
movzwl 0xa(%rdi),%edi
add    %edi,%r9d
mov    %r9,%rdi
and    $0x7ff,%edi
mov    %edi,%edi
movss  (%r8,%rdi,4),%xmm0
movss  %xmm2,(%r11)
movss  %xmm1,0x10(%rcx)
movss  %xmm0,0x14(%rcx)
add    $0xfffffffd,%esi
mov    %r11,%rcx
mov    %r15,%rdi
test   %esi,%esi
jg     42ce0 <horizontalAccumulateF+0x150>
mov    -0x10(%rbp),%r15
leaveq 
retq   
lea    0x8(%rdi),%r15
movzwl (%r15),%r11d
add    %r11d,%eax
mov    %rax,%r11
and    $0x7ff,%r11d
mov    %r11d,%r11d
movss  (%r8,%r11,4),%xmm3
lea    0x10(%rcx),%r14
movzwl 0xa(%rdi),%r11d
add    %r11d,%edx
mov    %rdx,%r11
and    $0x7ff,%r11d
mov    %r11d,%r11d
movss  (%r8,%r11,4),%xmm2
movzwl 0xc(%rdi),%r11d
add    %r11d,%r9d
mov    %r9,%r11
and    $0x7ff,%r11d
mov    %r11d,%r11d
movss  (%r8,%r11,4),%xmm1
movzwl 0xe(%rdi),%edi
add    %edi,%r10d
mov    %r10,%rdi
and    $0x7ff,%edi
mov    %edi,%edi
movss  (%r8,%rdi,4),%xmm0
movss  %xmm3,(%r14)
movss  %xmm2,0x14(%rcx)
movss  %xmm1,0x18(%rcx)
movss  %xmm0,0x1c(%rcx)
add    $0xfffffffc,%esi
mov    %r14,%rcx
mov    %r15,%rdi
test   %esi,%esi
jg     42d57 <horizontalAccumulateF+0x1c7>
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)

0000000000042e00 <horizontalAccumulate12>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
cmp    %esi,%edx
jle    42e0e <horizontalAccumulate12+0xe>
leaveq 
retq   
movss  0x3066e(%rip),%xmm4        # 73484 <module.47+0x16>
movss  0x3066a(%rip),%xmm5        # 73488 <module.47+0x1a>
mov    $0xbff,%r11d
cmp    $0x3,%edx
je     42e58 <horizontalAccumulate12+0x58>
cmp    $0x4,%edx
je     42ea7 <horizontalAccumulate12+0xa7>
mov    %rdx,%r9
movzwl (%rdi),%eax
and    $0x7ff,%eax
mov    %eax,%eax
movapd %xmm4,%xmm0
mulss  (%r8,%rax,4),%xmm0
ucomiss %xmm5,%xmm0
jp     42e50 <horizontalAccumulate12+0x50>
jb     42f08 <horizontalAccumulate12+0x108>
mov    %r11,%rax
jmpq   42f0d <horizontalAccumulate12+0x10d>
movzwl 0x2(%rdi),%edx
and    $0x7ff,%edx
mov    %edx,%eax
movss  (%r8,%rax,4),%xmm0
movzwl 0x4(%rdi),%r9d
and    $0x7ff,%r9d
mov    %r9d,%eax
movss  (%r8,%rax,4),%xmm1
movzwl (%rdi),%eax
and    $0x7ff,%eax
mov    %eax,%r10d
movapd %xmm4,%xmm2
mulss  (%r8,%r10,4),%xmm2
ucomiss %xmm5,%xmm2
jp     42e9f <horizontalAccumulate12+0x9f>
jb     42f30 <horizontalAccumulate12+0x130>
mov    %r11,%r10
jmpq   42f35 <horizontalAccumulate12+0x135>
movzwl 0x2(%rdi),%edx
and    $0x7ff,%edx
mov    %edx,%eax
movss  (%r8,%rax,4),%xmm0
movzwl 0x4(%rdi),%r9d
and    $0x7ff,%r9d
mov    %r9d,%eax
movss  (%r8,%rax,4),%xmm2
movzwl 0x6(%rdi),%r10d
and    $0x7ff,%r10d
mov    %r10d,%eax
movss  (%r8,%rax,4),%xmm1
movzwl (%rdi),%eax
and    $0x7ff,%eax
mov    %r15,-0x10(%rbp)
mov    %eax,%r15d
movapd %xmm4,%xmm3
mulss  (%r8,%r15,4),%xmm3
ucomiss %xmm5,%xmm3
jp     42f03 <horizontalAccumulate12+0x103>
jb     42f49 <horizontalAccumulate12+0x149>
mov    %r11,%r15
jmp    42f4e <horizontalAccumulate12+0x14e>
cvttss2si %xmm0,%rax
mov    %ax,(%rcx)
add    $0x2,%rcx
add    $0x2,%rdi
add    $0xffffffff,%r9d
test   %r9d,%r9d
jg     42e31 <horizontalAccumulate12+0x31>
movslq %edx,%r10
sub    %edx,%esi
mov    %r15,-0x10(%rbp)
jmp    42f7d <horizontalAccumulate12+0x17d>
cvttss2si %xmm2,%r10
mov    %r10w,(%rcx)
mulss  %xmm4,%xmm0
ucomiss %xmm5,%xmm0
jp     42f44 <horizontalAccumulate12+0x144>
jb     42f87 <horizontalAccumulate12+0x187>
mov    %r11,%r10
jmp    42f8c <horizontalAccumulate12+0x18c>
cvttss2si %xmm3,%r15
mov    %r15w,(%rcx)
mulss  %xmm4,%xmm0
ucomiss %xmm5,%xmm0
jp     42f5d <horizontalAccumulate12+0x15d>
jb     42fa1 <horizontalAccumulate12+0x1a1>
mov    %r11,%r15
jmp    42fa6 <horizontalAccumulate12+0x1a6>
cvttss2si %xmm0,%rax
mov    %ax,(%rcx)
add    $0x2,%rcx
add    $0x2,%rdi
add    $0xffffffff,%r9d
test   %r9d,%r9d
jg     42fbe <horizontalAccumulate12+0x1be>
sub    %edx,%esi
test   %esi,%esi
jg     42fbb <horizontalAccumulate12+0x1bb>
mov    -0x10(%rbp),%r15
leaveq 
retq   
cvttss2si %xmm0,%r10
mov    %r10w,0x2(%rcx)
mulss  %xmm4,%xmm1
ucomiss %xmm5,%xmm1
jp     42f9c <horizontalAccumulate12+0x19c>
jb     42ff5 <horizontalAccumulate12+0x1f5>
mov    %r11,%r10
jmp    42ffa <horizontalAccumulate12+0x1fa>
cvttss2si %xmm0,%r15
mov    %r15w,0x2(%rcx)
mulss  %xmm4,%xmm2
ucomiss %xmm5,%xmm2
jp     42fb6 <horizontalAccumulate12+0x1b6>
jb     43008 <horizontalAccumulate12+0x208>
mov    %r11,%r15
jmp    4300d <horizontalAccumulate12+0x20d>
mov    %rdx,%r9
movzwl (%rdi,%r10,2),%r15d
movzwl (%rdi),%eax
add    %r15d,%eax
mov    %ax,(%rdi,%r10,2)
movzwl %ax,%eax
and    $0x7ff,%eax
mov    %eax,%eax
movapd %xmm4,%xmm0
mulss  (%r8,%rax,4),%xmm0
ucomiss %xmm5,%xmm0
jp     42fed <horizontalAccumulate12+0x1ed>
jb     42f62 <horizontalAccumulate12+0x162>
mov    %r11,%rax
jmpq   42f67 <horizontalAccumulate12+0x167>
cvttss2si %xmm1,%r10
mov    %r10w,0x4(%rcx)
add    $0xfffffffd,%esi
mov    %r15,-0x10(%rbp)
jmp    43032 <horizontalAccumulate12+0x232>
cvttss2si %xmm2,%r15
mov    %r15w,0x4(%rcx)
mulss  %xmm4,%xmm1
ucomiss %xmm5,%xmm1
jp     4301d <horizontalAccumulate12+0x21d>
jb     4303c <horizontalAccumulate12+0x23c>
mov    %r11,%r15
jmp    43041 <horizontalAccumulate12+0x241>
cvttss2si %xmm0,%r10
mov    %r10w,0xa(%rcx)
add    $0xfffffffd,%esi
mov    %r15,%rcx
test   %esi,%esi
jg     4304f <horizontalAccumulate12+0x24f>
mov    -0x10(%rbp),%r15
leaveq 
retq   
cvttss2si %xmm1,%r15
mov    %r15w,0x6(%rcx)
add    $0xfffffffc,%esi
mov    %r14,-0x8(%rbp)
jmp    430c3 <horizontalAccumulate12+0x2c3>
movzwl 0x8(%rdi),%r10d
add    %r10d,%edx
mov    %rdx,%r10
and    $0x7ff,%r10d
mov    %r10d,%r10d
movss  (%r8,%r10,4),%xmm1
movzwl 0xa(%rdi),%r10d
add    %r10d,%r9d
mov    %r9,%r10
and    $0x7ff,%r10d
mov    %r10d,%r10d
movss  (%r8,%r10,4),%xmm0
add    $0x6,%rdi
movzwl (%rdi),%r10d
add    %r10d,%eax
mov    %rax,%r10
and    $0x7ff,%r10d
mov    %r10d,%r10d
movapd %xmm4,%xmm2
mulss  (%r8,%r10,4),%xmm2
ucomiss %xmm5,%xmm2
jp     430ae <horizontalAccumulate12+0x2ae>
jb     430d1 <horizontalAccumulate12+0x2d1>
mov    %r11,%r10
jmp    430d6 <horizontalAccumulate12+0x2d6>
cvttss2si %xmm0,%r14
mov    %r14w,0xe(%rcx)
add    $0xfffffffc,%esi
mov    %r15,%rcx
test   %esi,%esi
jg     430f5 <horizontalAccumulate12+0x2f5>
mov    -0x8(%rbp),%r14
mov    -0x10(%rbp),%r15
leaveq 
retq   
cvttss2si %xmm2,%r10
lea    0x6(%rcx),%r15
mov    %r10w,(%r15)
mulss  %xmm4,%xmm1
ucomiss %xmm5,%xmm1
jp     430ed <horizontalAccumulate12+0x2ed>
jb     43174 <horizontalAccumulate12+0x374>
mov    %r11,%r10
jmpq   43179 <horizontalAccumulate12+0x379>
movzwl 0xa(%rdi),%r14d
add    %r14d,%edx
mov    %rdx,%r14
and    $0x7ff,%r14d
mov    %r14d,%r14d
movss  (%r8,%r14,4),%xmm2
movzwl 0xc(%rdi),%r14d
add    %r14d,%r9d
mov    %r9,%r14
and    $0x7ff,%r14d
mov    %r14d,%r14d
movss  (%r8,%r14,4),%xmm1
movzwl 0xe(%rdi),%r14d
add    %r14d,%r10d
mov    %r10,%r14
and    $0x7ff,%r14d
mov    %r14d,%r14d
movss  (%r8,%r14,4),%xmm0
add    $0x8,%rdi
movzwl (%rdi),%r14d
add    %r14d,%eax
mov    %rax,%r14
and    $0x7ff,%r14d
mov    %r14d,%r14d
movapd %xmm4,%xmm3
mulss  (%r8,%r14,4),%xmm3
ucomiss %xmm5,%xmm3
jp     4316f <horizontalAccumulate12+0x36f>
jb     43195 <horizontalAccumulate12+0x395>
mov    %r11,%r14
jmp    4319a <horizontalAccumulate12+0x39a>
cvttss2si %xmm1,%r10
mov    %r10w,0x8(%rcx)
mulss  %xmm4,%xmm0
ucomiss %xmm5,%xmm0
jp     4318d <horizontalAccumulate12+0x38d>
jb     43022 <horizontalAccumulate12+0x222>
mov    %r11,%r10
jmpq   43027 <horizontalAccumulate12+0x227>
cvttss2si %xmm3,%r14
lea    0x8(%rcx),%r15
mov    %r14w,(%r15)
mulss  %xmm4,%xmm2
ucomiss %xmm5,%xmm2
jp     431ad <horizontalAccumulate12+0x3ad>
jb     431b2 <horizontalAccumulate12+0x3b2>
mov    %r11,%r14
jmp    431b7 <horizontalAccumulate12+0x3b7>
cvttss2si %xmm2,%r14
mov    %r14w,0xa(%rcx)
mulss  %xmm4,%xmm1
ucomiss %xmm5,%xmm1
jp     431c7 <horizontalAccumulate12+0x3c7>
jb     431cc <horizontalAccumulate12+0x3cc>
mov    %r11,%r14
jmp    431d1 <horizontalAccumulate12+0x3d1>
cvttss2si %xmm1,%r14
mov    %r14w,0xc(%rcx)
mulss  %xmm4,%xmm0
ucomiss %xmm5,%xmm0
jp     431e5 <horizontalAccumulate12+0x3e5>
jb     430b3 <horizontalAccumulate12+0x2b3>
mov    %r11,%r14
jmpq   430b8 <horizontalAccumulate12+0x2b8>
nopl   (%rax)

00000000000431f0 <horizontalAccumulate16>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
cmp    %esi,%edx
jle    431fe <horizontalAccumulate16+0xe>
leaveq 
retq   
cmp    $0x3,%edx
je     43238 <horizontalAccumulate16+0x48>
cmp    $0x4,%edx
je     43285 <horizontalAccumulate16+0x95>
mov    %rdx,%r9
movzwl (%rdi),%eax
and    $0x7ff,%eax
mov    %eax,%eax
movzwl (%r8,%rax,2),%eax
mov    %ax,(%rcx)
add    $0x2,%rdi
add    $0x2,%rcx
add    $0xffffffff,%r9d
test   %r9d,%r9d
jg     4320b <horizontalAccumulate16+0x1b>
movslq %edx,%r10
sub    %edx,%esi
jmpq   43326 <horizontalAccumulate16+0x136>
movzwl (%rdi),%r9d
and    $0x7ff,%r9d
mov    %r9d,%eax
movzwl (%r8,%rax,2),%eax
mov    %ax,(%rcx)
movzwl 0x2(%rdi),%eax
and    $0x7ff,%eax
mov    %eax,%edx
movzwl (%r8,%rdx,2),%edx
mov    %dx,0x2(%rcx)
movzwl 0x4(%rdi),%edx
and    $0x7ff,%edx
mov    %edx,%r10d
movzwl (%r8,%r10,2),%r10d
mov    %r10w,0x4(%rcx)
add    $0xfffffffd,%esi
mov    %r15,-0x10(%rbp)
jmpq   43393 <horizontalAccumulate16+0x1a3>
movzwl (%rdi),%r10d
and    $0x7ff,%r10d
mov    %r10d,%eax
movzwl (%r8,%rax,2),%eax
mov    %ax,(%rcx)
movzwl 0x2(%rdi),%r9d
and    $0x7ff,%r9d
mov    %r9d,%eax
movzwl (%r8,%rax,2),%eax
mov    %ax,0x2(%rcx)
movzwl 0x4(%rdi),%edx
and    $0x7ff,%edx
mov    %edx,%eax
movzwl (%r8,%rax,2),%eax
mov    %ax,0x4(%rcx)
movzwl 0x6(%rdi),%eax
and    $0x7ff,%eax
mov    %eax,%r11d
movzwl (%r8,%r11,2),%r11d
mov    %r11w,0x6(%rcx)
add    $0xfffffffc,%esi
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
jmpq   43423 <horizontalAccumulate16+0x233>
mov    %rdx,%r9
movzwl (%rdi,%r10,2),%r11d
movzwl (%rdi),%eax
add    %r11d,%eax
mov    %ax,(%rdi,%r10,2)
movzwl (%rdi),%eax
and    $0x7ff,%eax
mov    %eax,%eax
movzwl (%r8,%rax,2),%eax
mov    %ax,(%rcx)
add    $0x2,%rdi
add    $0x2,%rcx
add    $0xffffffff,%r9d
test   %r9d,%r9d
jg     432f1 <horizontalAccumulate16+0x101>
sub    %edx,%esi
test   %esi,%esi
jg     432ee <horizontalAccumulate16+0xfe>
leaveq 
retq   
lea    0x6(%rdi),%r15
movzwl (%r15),%r10d
add    %r10d,%r9d
mov    %r9,%r10
and    $0x7ff,%r10d
mov    %r10d,%r10d
movzwl (%r8,%r10,2),%r10d
lea    0x6(%rcx),%r11
mov    %r10w,(%r11)
movzwl 0x8(%rdi),%r10d
add    %r10d,%eax
mov    %rax,%r10
and    $0x7ff,%r10d
mov    %r10d,%r10d
movzwl (%r8,%r10,2),%r10d
mov    %r10w,0x8(%rcx)
movzwl 0xa(%rdi),%edi
add    %edi,%edx
mov    %rdx,%rdi
and    $0x7ff,%edi
mov    %edi,%edi
movzwl (%r8,%rdi,2),%edi
mov    %di,0xa(%rcx)
add    $0xfffffffd,%esi
mov    %r11,%rcx
mov    %r15,%rdi
test   %esi,%esi
jg     4332c <horizontalAccumulate16+0x13c>
mov    -0x10(%rbp),%r15
leaveq 
retq   
lea    0x8(%rdi),%r14
movzwl (%r14),%r11d
add    %r11d,%r10d
mov    %r10,%r11
and    $0x7ff,%r11d
mov    %r11d,%r11d
movzwl (%r8,%r11,2),%r11d
lea    0x8(%rcx),%r15
mov    %r11w,(%r15)
movzwl 0xa(%rdi),%r11d
add    %r11d,%r9d
mov    %r9,%r11
and    $0x7ff,%r11d
mov    %r11d,%r11d
movzwl (%r8,%r11,2),%r11d
mov    %r11w,0xa(%rcx)
movzwl 0xc(%rdi),%r11d
add    %r11d,%edx
mov    %rdx,%r11
and    $0x7ff,%r11d
mov    %r11d,%r11d
movzwl (%r8,%r11,2),%r11d
mov    %r11w,0xc(%rcx)
movzwl 0xe(%rdi),%edi
add    %edi,%eax
mov    %rax,%rdi
and    $0x7ff,%edi
mov    %edi,%edi
movzwl (%r8,%rdi,2),%edi
mov    %di,0xe(%rcx)
add    $0xfffffffc,%esi
mov    %r15,%rcx
mov    %r14,%rdi
test   %esi,%esi
jg     4339d <horizontalAccumulate16+0x1ad>
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)

0000000000043440 <horizontalAccumulate11>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
cmp    %esi,%edx
jle    4344e <horizontalAccumulate11+0xe>
leaveq 
retq   
cmp    $0x3,%edx
je     43480 <horizontalAccumulate11+0x40>
cmp    $0x4,%edx
je     434aa <horizontalAccumulate11+0x6a>
mov    %rdx,%r8
movzwl (%rdi),%eax
and    $0x7ff,%ax
mov    %ax,(%rcx)
add    $0x2,%rdi
add    $0x2,%rcx
add    $0xffffffff,%r8d
test   %r8d,%r8d
jg     4345b <horizontalAccumulate11+0x1b>
movslq %edx,%r10
sub    %edx,%esi
jmpq   43516 <horizontalAccumulate11+0xd6>
movzwl (%rdi),%eax
mov    %ax,(%rcx)
movzwl 0x2(%rdi),%eax
mov    %ax,0x2(%rcx)
movzwl 0x4(%rdi),%eax
mov    %ax,0x4(%rcx)
movzwl (%rdi),%edx
movzwl 0x2(%rdi),%eax
movzwl 0x4(%rdi),%r8d
add    $0xfffffffd,%esi
jmpq   4356a <horizontalAccumulate11+0x12a>
movzwl (%rdi),%eax
mov    %ax,(%rcx)
movzwl 0x2(%rdi),%eax
mov    %ax,0x2(%rcx)
movzwl 0x4(%rdi),%eax
mov    %ax,0x4(%rcx)
movzwl 0x6(%rdi),%eax
mov    %ax,0x6(%rcx)
movzwl (%rdi),%r10d
movzwl 0x2(%rdi),%r9d
movzwl 0x4(%rdi),%r8d
movzwl 0x6(%rdi),%edx
lea    -0x4(%rsi),%eax
mov    %r15,-0x8(%rbp)
jmpq   435cc <horizontalAccumulate11+0x18c>
mov    %rdx,%r8
movzwl (%rdi,%r10,2),%r9d
movzwl (%rdi),%eax
add    %r9d,%eax
mov    %ax,(%rdi,%r10,2)
movzwl (%rdi),%eax
and    $0x7ff,%ax
mov    %ax,(%rcx)
add    $0x2,%rdi
add    $0x2,%rcx
add    $0xffffffff,%r8d
test   %r8d,%r8d
jg     434e9 <horizontalAccumulate11+0xa9>
sub    %edx,%esi
test   %esi,%esi
jg     434e6 <horizontalAccumulate11+0xa6>
leaveq 
retq   
lea    0x6(%rdi),%r11
movzwl (%r11),%r9d
add    %r9d,%edx
mov    %rdx,%r9
and    $0x7ff,%r9w
lea    0x6(%rcx),%r10
mov    %r9w,(%r10)
movzwl 0x8(%rdi),%r9d
add    %r9d,%eax
mov    %rax,%r9
and    $0x7ff,%r9w
mov    %r9w,0x8(%rcx)
movzwl 0xa(%rdi),%edi
add    %edi,%r8d
mov    %r8,%rdi
and    $0x7ff,%di
mov    %di,0xa(%rcx)
add    $0xfffffffd,%esi
mov    %r10,%rcx
mov    %r11,%rdi
test   %esi,%esi
jg     4351c <horizontalAccumulate11+0xdc>
leaveq 
retq   
lea    0x8(%rdi),%r15
movzwl (%r15),%esi
add    %esi,%r10d
mov    %r10,%rsi
and    $0x7ff,%si
lea    0x8(%rcx),%r11
mov    %si,(%r11)
movzwl 0xa(%rdi),%esi
add    %esi,%r9d
mov    %r9,%rsi
and    $0x7ff,%si
mov    %si,0xa(%rcx)
movzwl 0xc(%rdi),%esi
add    %esi,%r8d
mov    %r8,%rsi
and    $0x7ff,%si
mov    %si,0xc(%rcx)
movzwl 0xe(%rdi),%esi
add    %esi,%edx
mov    %rdx,%rsi
and    $0x7ff,%si
mov    %si,0xe(%rcx)
add    $0xfffffffc,%eax
mov    %r11,%rcx
mov    %r15,%rdi
test   %eax,%eax
jg     43570 <horizontalAccumulate11+0x130>
mov    -0x8(%rbp),%r15
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)

00000000000435e0 <horizontalAccumulate8>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
cmp    %esi,%edx
jle    435ee <horizontalAccumulate8+0xe>
leaveq 
retq   
cmp    $0x3,%edx
je     43627 <horizontalAccumulate8+0x47>
cmp    $0x4,%edx
je     43671 <horizontalAccumulate8+0x91>
mov    %rdx,%r9
movzwl (%rdi),%eax
and    $0x7ff,%eax
mov    %eax,%eax
movzbl (%r8,%rax,1),%eax
mov    %al,(%rcx)
add    $0x2,%rdi
add    $0x1,%rcx
add    $0xffffffff,%r9d
test   %r9d,%r9d
jg     435fb <horizontalAccumulate8+0x1b>
movslq %edx,%r10
sub    %edx,%esi
jmpq   4370d <horizontalAccumulate8+0x12d>
movzwl (%rdi),%r9d
and    $0x7ff,%r9d
mov    %r9d,%eax
movzbl (%rax,%r8,1),%eax
mov    %al,(%rcx)
movzwl 0x2(%rdi),%eax
and    $0x7ff,%eax
mov    %eax,%edx
movzbl (%rdx,%r8,1),%edx
mov    %dl,0x1(%rcx)
movzwl 0x4(%rdi),%edx
and    $0x7ff,%edx
mov    %edx,%r10d
movzbl (%r8,%r10,1),%r10d
mov    %r10b,0x2(%rcx)
add    $0xfffffffd,%esi
mov    %r15,-0x10(%rbp)
jmpq   43778 <horizontalAccumulate8+0x198>
movzwl (%rdi),%r10d
and    $0x7ff,%r10d
mov    %r10d,%eax
movzbl (%r8,%rax,1),%eax
mov    %al,(%rcx)
movzwl 0x2(%rdi),%r9d
and    $0x7ff,%r9d
mov    %r9d,%eax
movzbl (%r8,%rax,1),%eax
mov    %al,0x1(%rcx)
movzwl 0x4(%rdi),%edx
and    $0x7ff,%edx
mov    %edx,%eax
movzbl (%r8,%rax,1),%eax
mov    %al,0x2(%rcx)
movzwl 0x6(%rdi),%eax
and    $0x7ff,%eax
mov    %eax,%r11d
movzbl (%r8,%r11,1),%r11d
mov    %r11b,0x3(%rcx)
add    $0xfffffffc,%esi
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
jmpq   43805 <horizontalAccumulate8+0x225>
mov    %rdx,%r9
movzwl (%rdi,%r10,2),%r11d
movzwl (%rdi),%eax
add    %r11d,%eax
mov    %ax,(%rdi,%r10,2)
movzwl (%rdi),%eax
and    $0x7ff,%eax
mov    %eax,%eax
movzbl (%r8,%rax,1),%eax
mov    %al,(%rcx)
add    $0x2,%rdi
add    $0x1,%rcx
add    $0xffffffff,%r9d
test   %r9d,%r9d
jg     436d9 <horizontalAccumulate8+0xf9>
sub    %edx,%esi
test   %esi,%esi
jg     436d6 <horizontalAccumulate8+0xf6>
leaveq 
retq   
lea    0x6(%rdi),%r15
movzwl (%r15),%r10d
add    %r10d,%r9d
mov    %r9,%r10
and    $0x7ff,%r10d
mov    %r10d,%r10d
movzbl (%r8,%r10,1),%r10d
lea    0x3(%rcx),%r11
mov    %r10b,(%r11)
movzwl 0x8(%rdi),%r10d
add    %r10d,%eax
mov    %rax,%r10
and    $0x7ff,%r10d
mov    %r10d,%r10d
movzbl (%r8,%r10,1),%r10d
mov    %r10b,0x4(%rcx)
movzwl 0xa(%rdi),%edi
add    %edi,%edx
mov    %rdx,%rdi
and    $0x7ff,%edi
mov    %edi,%edi
movzbl (%rdi,%r8,1),%edi
mov    %dil,0x5(%rcx)
add    $0xfffffffd,%esi
mov    %r11,%rcx
mov    %r15,%rdi
test   %esi,%esi
jg     43713 <horizontalAccumulate8+0x133>
mov    -0x10(%rbp),%r15
leaveq 
retq   
lea    0x8(%rdi),%r14
movzwl (%r14),%r11d
add    %r11d,%r10d
mov    %r10,%r11
and    $0x7ff,%r11d
mov    %r11d,%r11d
movzbl (%r8,%r11,1),%r11d
lea    0x4(%rcx),%r15
mov    %r11b,(%r15)
movzwl 0xa(%rdi),%r11d
add    %r11d,%r9d
mov    %r9,%r11
and    $0x7ff,%r11d
mov    %r11d,%r11d
movzbl (%r8,%r11,1),%r11d
mov    %r11b,0x5(%rcx)
movzwl 0xc(%rdi),%r11d
add    %r11d,%edx
mov    %rdx,%r11
and    $0x7ff,%r11d
mov    %r11d,%r11d
movzbl (%r8,%r11,1),%r11d
mov    %r11b,0x6(%rcx)
movzwl 0xe(%rdi),%edi
add    %edi,%eax
mov    %rax,%rdi
and    $0x7ff,%edi
mov    %edi,%edi
movzbl (%r8,%rdi,1),%edi
mov    %dil,0x7(%rcx)
add    $0xfffffffc,%esi
mov    %r15,%rcx
mov    %r14,%rdi
test   %esi,%esi
jg     43782 <horizontalAccumulate8+0x1a2>
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

0000000000043820 <horizontalAccumulate8abgr>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
cmp    %esi,%edx
jle    4382e <horizontalAccumulate8abgr+0xe>
leaveq 
retq   
cmp    $0x3,%edx
je     4386b <horizontalAccumulate8abgr+0x4b>
cmp    $0x4,%edx
je     438bf <horizontalAccumulate8abgr+0x9f>
mov    %rdx,%r9
movzwl (%rdi),%eax
and    $0x7ff,%eax
mov    %eax,%eax
movzbl (%r8,%rax,1),%eax
mov    %al,(%rcx)
add    $0x2,%rdi
add    $0x1,%rcx
add    $0xffffffff,%r9d
test   %r9d,%r9d
jg     4383f <horizontalAccumulate8abgr+0x1f>
movslq %edx,%r11
sub    %edx,%esi
jmpq   43966 <horizontalAccumulate8abgr+0x146>
movb   $0x0,(%rcx)
movzwl 0x4(%rdi),%eax
and    $0x7ff,%eax
mov    %eax,%edx
movzbl (%rdx,%r8,1),%r11d
movzwl 0x2(%rdi),%edx
and    $0x7ff,%edx
mov    %edx,%r9d
movzbl (%r9,%r8,1),%r10d
movzwl (%rdi),%r9d
and    $0x7ff,%r9d
mov    %r15,-0x20(%rbp)
mov    %r9d,%r15d
movzbl (%r8,%r15,1),%r15d
mov    %r11b,0x1(%rcx)
mov    %r10b,0x2(%rcx)
mov    %r15b,0x3(%rcx)
add    $0xfffffffd,%esi
mov    %r14,-0x18(%rbp)
jmpq   439d7 <horizontalAccumulate8abgr+0x1b7>
movzwl 0x6(%rdi),%eax
and    $0x7ff,%eax
mov    %eax,%edx
movzbl (%r8,%rdx,1),%r11d
movzwl 0x4(%rdi),%edx
and    $0x7ff,%edx
mov    %edx,%r9d
movzbl (%r8,%r9,1),%r10d
movzwl 0x2(%rdi),%r9d
and    $0x7ff,%r9d
mov    %r15,-0x20(%rbp)
mov    %r9d,%r15d
movzbl (%r8,%r15,1),%r15d
mov    %r14,-0x18(%rbp)
movzwl (%rdi),%r14d
and    $0x7ff,%r14d
mov    %r13,-0x10(%rbp)
mov    %r14d,%r13d
movzbl (%r8,%r13,1),%r13d
mov    %r11b,(%rcx)
mov    %r10b,0x1(%rcx)
mov    %r15b,0x2(%rcx)
mov    %r13b,0x3(%rcx)
add    $0xfffffffc,%esi
mov    %r12,-0x8(%rbp)
jmpq   43a69 <horizontalAccumulate8abgr+0x249>
mov    %rdx,%r9
movzwl (%rdi,%r11,2),%r10d
movzwl (%rdi),%eax
add    %r10d,%eax
mov    %ax,(%rdi,%r11,2)
movzwl (%rdi),%eax
and    $0x7ff,%eax
mov    %eax,%eax
movzbl (%r8,%rax,1),%eax
mov    %al,(%rcx)
add    $0x2,%rdi
add    $0x1,%rcx
add    $0xffffffff,%r9d
test   %r9d,%r9d
jg     43932 <horizontalAccumulate8abgr+0x112>
sub    %edx,%esi
test   %esi,%esi
jg     4392f <horizontalAccumulate8abgr+0x10f>
leaveq 
retq   
lea    0x4(%rcx),%r15
movb   $0x0,(%r15)
movzwl 0xa(%rdi),%r10d
add    %r10d,%eax
mov    %rax,%r10
and    $0x7ff,%r10d
mov    %r10d,%r10d
movzbl (%r8,%r10,1),%r14d
movzwl 0x8(%rdi),%r10d
add    %r10d,%edx
mov    %rdx,%r10
and    $0x7ff,%r10d
mov    %r10d,%r10d
movzbl (%r8,%r10,1),%r11d
add    $0x6,%rdi
movzwl (%rdi),%r10d
add    %r10d,%r9d
mov    %r9,%r10
and    $0x7ff,%r10d
mov    %r10d,%r10d
movzbl (%r10,%r8,1),%r10d
mov    %r14b,0x5(%rcx)
mov    %r11b,0x6(%rcx)
mov    %r10b,0x7(%rcx)
add    $0xfffffffd,%esi
mov    %r15,%rcx
test   %esi,%esi
jg     4396c <horizontalAccumulate8abgr+0x14c>
mov    -0x18(%rbp),%r14
mov    -0x20(%rbp),%r15
leaveq 
retq   
movzwl 0xe(%rdi),%r10d
add    %r10d,%eax
mov    %rax,%r10
and    $0x7ff,%r10d
mov    %r10d,%r10d
movzbl (%r8,%r10,1),%r13d
lea    0x4(%rcx),%r15
movzwl 0xc(%rdi),%r10d
add    %r10d,%edx
mov    %rdx,%r10
and    $0x7ff,%r10d
mov    %r10d,%r10d
movzbl (%r8,%r10,1),%r10d
movzwl 0xa(%rdi),%r11d
add    %r11d,%r9d
mov    %r9,%r11
and    $0x7ff,%r11d
mov    %r11d,%r11d
movzbl (%r8,%r11,1),%r12d
add    $0x8,%rdi
movzwl (%rdi),%r11d
add    %r11d,%r14d
mov    %r14,%r11
and    $0x7ff,%r11d
mov    %r11d,%r11d
movzbl (%r8,%r11,1),%r11d
mov    %r13b,(%r15)
mov    %r10b,0x5(%rcx)
mov    %r12b,0x6(%rcx)
mov    %r11b,0x7(%rcx)
add    $0xfffffffc,%esi
mov    %r15,%rcx
test   %esi,%esi
jg     439e5 <horizontalAccumulate8abgr+0x1c5>
mov    -0x8(%rbp),%r12
mov    -0x10(%rbp),%r13
mov    -0x18(%rbp),%r14
mov    -0x20(%rbp),%r15
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

0000000000043a90 <PixarLogMakeTables>:
push   %rbp
mov    %rsp,%rbp
sub    $0xa0,%rsp
mov    %r15,-0x38(%rbp)
mov    %r14,-0x30(%rbp)
mov    %r13,-0x28(%rbp)
mov    %r12,-0x20(%rbp)
mov    %rbx,-0x18(%rbp)
mov    %rdi,-0x10(%rbp)
movsd  0x2f9dd(%rip),%xmm0        # 73498 <module.47+0x2a>
callq  8570 <log@plt>
movsd  0x2f9d8(%rip),%xmm2        # 734a0 <module.47+0x32>
movapd %xmm2,%xmm1
divsd  %xmm0,%xmm1
cvttsd2si %xmm1,%eax
mov    %rax,-0x58(%rbp)
cvtsi2sd %eax,%xmm1
movapd %xmm2,%xmm0
divsd  %xmm1,%xmm0
movdqu %xmm0,-0xa0(%rbp)
movsd  0x2f9b4(%rip),%xmm1        # 734a8 <module.47+0x3a>
mulsd  %xmm1,%xmm0
callq  8210 <exp@plt>
movdqu -0xa0(%rbp),%xmm1
movsd  0x2f993(%rip),%xmm3        # 734a0 <module.47+0x32>
movapd %xmm3,%xmm2
divsd  %xmm1,%xmm2
movdqu %xmm1,-0x70(%rbp)
cvtsd2ss %xmm2,%xmm1
movdqu %xmm1,-0xa0(%rbp)
movapd %xmm3,%xmm1
divsd  %xmm0,%xmm1
movdqu %xmm0,-0x80(%rbp)
cvtsd2ss %xmm1,%xmm0
movdqu %xmm0,-0x90(%rbp)
movapd %xmm3,%xmm0
callq  8210 <exp@plt>
movdqu -0xa0(%rbp),%xmm1
movss  %xmm1,0x36ef8(%rip)        # 7aa50 <LogK1>
movdqu -0x90(%rbp),%xmm1
movss  %xmm1,0x36eec(%rip)        # 7aa54 <LogK2>
movdqu -0x70(%rbp),%xmm1
movdqu -0x80(%rbp),%xmm2
mulsd  %xmm2,%xmm1
mulsd  %xmm1,%xmm0
movsd  0x2f90e(%rip),%xmm1        # 73490 <module.47+0x22>
divsd  %xmm0,%xmm1
movdqu %xmm0,-0x90(%rbp)
cvttsd2si %xmm1,%eax
mov    %rax,-0x8(%rbp)
add    $0x1,%eax
mov    %rax,-0x50(%rbp)
movslq %eax,%rax
lea    (%rax,%rax,1),%rdi
callq  8440 <_TIFFmalloc@plt>
mov    %rax,%r12
mov    $0x8000,%edi
callq  8440 <_TIFFmalloc@plt>
mov    %rax,%rbx
mov    $0x200,%edi
callq  8440 <_TIFFmalloc@plt>
mov    %rax,%r15
mov    $0x2004,%edi
callq  8440 <_TIFFmalloc@plt>
mov    %rax,%r14
mov    $0x1002,%edi
callq  8440 <_TIFFmalloc@plt>
mov    %rax,%r13
mov    $0x801,%edi
callq  8440 <_TIFFmalloc@plt>
xor    %esi,%esi
test   %r12,%r12
je     43c1b <PixarLogMakeTables+0x18b>
test   %rbx,%rbx
je     43c1b <PixarLogMakeTables+0x18b>
test   %r15,%r15
je     43c1b <PixarLogMakeTables+0x18b>
test   %r14,%r14
je     43c1b <PixarLogMakeTables+0x18b>
test   %r13,%r13
je     43c1b <PixarLogMakeTables+0x18b>
test   %rax,%rax
je     43c1b <PixarLogMakeTables+0x18b>
mov    -0x58(%rbp),%rdi
mov    %rsi,%rcx
movdqu -0x90(%rbp),%xmm1
jmp    43c43 <PixarLogMakeTables+0x1b3>
test   %r12,%r12
jne    43c6a <PixarLogMakeTables+0x1da>
mov    %rbx,%rdi
mov    %rsi,%rbx
mov    %rax,%r12
jmp    43c7a <PixarLogMakeTables+0x1ea>
cvtsi2sd %ecx,%xmm0
mulsd  %xmm1,%xmm0
cvtsd2ss %xmm0,%xmm0
movslq %ecx,%rdx
movss  %xmm0,(%r14,%rdx,4)
add    $0x1,%ecx
cmp    %ecx,%edi
jg     43c2b <PixarLogMakeTables+0x19b>
mov    %r15,-0x40(%rbp)
mov    %rbx,-0x48(%rbp)
mov    %r12,-0x58(%rbp)
mov    %rax,-0xa0(%rbp)
mov    %rsi,%rbx
mov    %rdi,%r12
movdqu -0x70(%rbp),%xmm0
jmpq   43d4b <PixarLogMakeTables+0x2bb>
mov    %r12,%rdi
mov    %rax,%r12
callq  8bb0 <_TIFFfree@plt>
mov    %rbx,%rdi
xor    %ebx,%ebx
test   %rdi,%rdi
je     43c84 <PixarLogMakeTables+0x1f4>
callq  8bb0 <_TIFFfree@plt>
test   %r15,%r15
je     43c91 <PixarLogMakeTables+0x201>
mov    %r15,%rdi
callq  8bb0 <_TIFFfree@plt>
test   %r14,%r14
je     43c9e <PixarLogMakeTables+0x20e>
mov    %r14,%rdi
callq  8bb0 <_TIFFfree@plt>
test   %r13,%r13
je     43cab <PixarLogMakeTables+0x21b>
mov    %r13,%rdi
callq  8bb0 <_TIFFfree@plt>
test   %r12,%r12
je     43cb8 <PixarLogMakeTables+0x228>
mov    %r12,%rdi
callq  8bb0 <_TIFFfree@plt>
mov    -0x10(%rbp),%rax
movq   $0x0,0x138(%rax)
movq   $0x0,0x140(%rax)
movq   $0x0,0x148(%rax)
movq   $0x0,0x120(%rax)
movq   $0x0,0x128(%rax)
movq   $0x0,0x130(%rax)
mov    %rbx,%rax
mov    -0x18(%rbp),%rbx
mov    -0x20(%rbp),%r12
mov    -0x28(%rbp),%r13
mov    -0x30(%rbp),%r14
mov    -0x38(%rbp),%r15
leaveq 
retq   
mov    %rcx,%r15
cvtsi2sd %r12d,%xmm1
mulsd  %xmm1,%xmm0
callq  8210 <exp@plt>
movdqu -0x80(%rbp),%xmm1
mulsd  %xmm0,%xmm1
cvtsd2ss %xmm1,%xmm0
movslq %r15d,%rax
movss  %xmm0,(%r14,%rax,4)
add    $0x1,%r12d
lea    0x1(%r15),%ecx
movdqu -0x70(%rbp),%xmm0
cmp    $0x7ff,%r12d
jle    43d17 <PixarLogMakeTables+0x287>
movss  0x1ffc(%r14),%xmm0
movss  %xmm0,0x2000(%r14)
movsd  0x2f742(%rip),%xmm1        # 734b0 <module.47+0x42>
movsd  0x2f742(%rip),%xmm3        # 734b8 <module.47+0x4a>
movsd  0x2f742(%rip),%xmm2        # 734c0 <module.47+0x52>
mov    $0xff,%edi
mov    $0xffff,%esi
mov    -0xa0(%rbp),%r10
mov    %rbx,%rax
jmp    43dda <PixarLogMakeTables+0x34a>
movslq %eax,%rdx
movss  (%r14,%rdx,4),%xmm0
cvtss2sd %xmm0,%xmm0
mulsd  %xmm2,%xmm0
addsd  %xmm3,%xmm0
ucomisd %xmm2,%xmm0
jbe    43df9 <PixarLogMakeTables+0x369>
mov    %rsi,%rcx
mov    %cx,0x0(%r13,%rdx,2)
movss  (%r14,%rdx,4),%xmm0
cvtss2sd %xmm0,%xmm0
mulsd  %xmm1,%xmm0
addsd  %xmm3,%xmm0
ucomisd %xmm1,%xmm0
jbe    43e00 <PixarLogMakeTables+0x370>
mov    %rdi,%rcx
mov    %cl,(%r10,%rdx,1)
add    $0x1,%eax
cmp    $0x800,%eax
jle    43d94 <PixarLogMakeTables+0x304>
mov    -0x58(%rbp),%r9
mov    -0x50(%rbp),%rdx
mov    %rbx,%rax
mov    %rax,%rcx
movdqu -0x90(%rbp),%xmm3
jmp    43e42 <PixarLogMakeTables+0x3b2>
cvttsd2si %xmm0,%rcx
jmp    43db2 <PixarLogMakeTables+0x322>
cvttsd2si %xmm0,%rcx
jmp    43dd3 <PixarLogMakeTables+0x343>
lea    0x1(%rax),%edi
movslq %edi,%rsi
movss  (%r14,%rsi,4),%xmm0
movslq %eax,%rsi
mulss  (%r14,%rsi,4),%xmm0
cvtss2sd %xmm0,%xmm2
cvtsi2sd %ecx,%xmm0
mulsd  %xmm3,%xmm0
mulsd  %xmm0,%xmm0
ucomisd %xmm0,%xmm2
jp     43e37 <PixarLogMakeTables+0x3a7>
jae    43e37 <PixarLogMakeTables+0x3a7>
mov    %rdi,%rax
movslq %ecx,%rsi
mov    %ax,(%r9,%rsi,2)
add    $0x1,%ecx
cmp    %ecx,%edx
jg     43e07 <PixarLogMakeTables+0x377>
movsd  0x2f67a(%rip),%xmm2        # 734c8 <module.47+0x5a>
mov    -0x48(%rbp),%r8
mov    %rbx,%rax
mov    %rax,%rcx
jmp    43e89 <PixarLogMakeTables+0x3f9>
mov    %rdi,%rax
lea    0x1(%rax),%edi
movslq %edi,%rsi
movss  (%r14,%rsi,4),%xmm0
movslq %eax,%rsi
mulss  (%r14,%rsi,4),%xmm0
cvtss2sd %xmm0,%xmm0
ucomisd %xmm3,%xmm0
jp     43e7e <PixarLogMakeTables+0x3ee>
jb     43e5a <PixarLogMakeTables+0x3ca>
movslq %ecx,%rsi
mov    %ax,(%r8,%rsi,2)
add    $0x1,%ecx
cmp    $0x3fff,%ecx
jle    43e96 <PixarLogMakeTables+0x406>
mov    %rbx,%rax
jmp    43ed6 <PixarLogMakeTables+0x446>
cvtsi2sd %ecx,%xmm3
divsd  %xmm2,%xmm3
mulsd  %xmm3,%xmm3
jmp    43e5d <PixarLogMakeTables+0x3cd>
mov    %rsi,%rbx
lea    0x1(%rbx),%esi
movslq %esi,%rcx
movss  (%r14,%rcx,4),%xmm0
movslq %ebx,%rcx
mulss  (%r14,%rcx,4),%xmm0
cvtss2sd %xmm0,%xmm0
ucomisd %xmm2,%xmm0
jp     43ec8 <PixarLogMakeTables+0x438>
jb     43ea4 <PixarLogMakeTables+0x414>
movslq %eax,%rcx
mov    -0x40(%rbp),%rsi
mov    %bx,(%rsi,%rcx,2)
add    $0x1,%eax
cmp    $0xff,%eax
jle    43f43 <PixarLogMakeTables+0x4b3>
shr    $0x1f,%edx
mov    -0x8(%rbp),%rax
lea    0x1(%rax,%rdx,1),%eax
sar    %eax
cvtsi2ss %eax,%xmm0
movss  %xmm0,0x36b56(%rip)        # 7aa4c <Fltsize>
mov    -0x10(%rbp),%rax
mov    %r14,0x120(%rax)
mov    %r13,0x128(%rax)
mov    %r10,0x130(%rax)
mov    %r9,0x138(%rax)
mov    %r8,0x140(%rax)
mov    -0x40(%rbp),%rcx
mov    %rcx,0x148(%rax)
mov    $0x1,%eax
mov    -0x18(%rbp),%rbx
mov    -0x20(%rbp),%r12
mov    -0x28(%rbp),%r13
mov    -0x30(%rbp),%r14
mov    -0x38(%rbp),%r15
leaveq 
retq   
cvtsi2sd %eax,%xmm2
divsd  %xmm1,%xmm2
mulsd  %xmm2,%xmm2
jmpq   43ea7 <PixarLogMakeTables+0x417>
data16 nopw %cs:0x0(%rax,%rax,1)
nop

0000000000043f60 <PixarLogEncode>:
push   %rbp
mov    %rsp,%rbp
sub    $0x40,%rsp
lea    0x2f1f3(%rip),%r11        # 73162 <module.16>
lea    0x2f1fb(%rip),%r9        # 73171 <module.16+0xf>
xor    %r10d,%r10d
mov    0x350(%rdi),%rcx
mov    %rcx,-0x40(%rbp)
mov    0x108(%rcx),%eax
cmp    $0x5,%eax
ja     43f9f <PixarLogEncode+0x3f>
lea    0x2f06a(%rip),%r8        # 73000 <module.8+0x8f>
movslq (%r8,%rax,4),%rax
add    %r8,%rax
jmpq   *%rax
xor    %eax,%eax
mov    0x3b8(%rdi),%rdx
movzwl 0x74(%rdi),%ecx
mov    %r11,%rsi
mov    %rdx,%rdi
mov    %r9,%rdx
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
shr    $0x2,%rdx
movzwl 0x100(%rcx),%eax
imul   0x58(%rdi),%eax
mov    %rax,-0x38(%rbp)
mov    %rax,%r8
imul   0x84(%rdi),%r8d
mov    %r8d,%r8d
cmp    %rdx,%r8
jl     4401f <PixarLogEncode+0xbf>
mov    0xf8(%rcx),%r8
movslq %eax,%r9
mov    %rdi,-0x30(%rbp)
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rdx,%rbx
mov    %r10,%r12
mov    %rsi,%r13
mov    %rax,%rsi
mov    %r8,%r14
mov    %r9,%r15
jmp    4406a <PixarLogEncode+0x10a>
shr    %rdx
jmp    43fc2 <PixarLogEncode+0x62>
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
mov    %r11,%rsi
lea    0x2f166(%rip),%rdx        # 73198 <module.16+0x36>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
test   %eax,%eax
jne    440a8 <PixarLogEncode+0x148>
movzwl 0x100(%rcx),%edx
mov    0x148(%rcx),%r8
mov    %r13,%rdi
mov    %r14,%rcx
callq  46340 <horizontalDifference8>
add    %r15,%r13
add    %r15,%r12
lea    (%r14,%r15,2),%r14
mov    -0x38(%rbp),%rsi
mov    -0x40(%rbp),%rcx
cmp    %r12,%rbx
jg     440e4 <PixarLogEncode+0x184>
mov    0xf8(%rcx),%rax
mov    %rax,0x80(%rcx)
lea    (%rbx,%rbx,1),%eax
mov    %eax,0x88(%rcx)
mov    %ebx,%edx
mov    %eax,%eax
shr    %rax
cmp    %rax,%rdx
jne    44125 <PixarLogEncode+0x1c5>
lea    0x80(%rcx),%r12
xor    %ebx,%ebx
mov    -0x30(%rbp),%r13
jmpq   441a0 <PixarLogEncode+0x240>
xor    %eax,%eax
mov    -0x30(%rbp),%rcx
mov    0x3b8(%rcx),%rdi
movzwl 0x74(%rcx),%ecx
lea    0x2f0a2(%rip),%rsi        # 73162 <module.16>
lea    0x2f0aa(%rip),%rdx        # 73171 <module.16+0xf>
callq  8a00 <TIFFErrorExt@plt>
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
xor    %eax,%eax
leaveq 
retq   
movslq 0x108(%rcx),%rax
cmp    $0x3,%eax
jle    4403b <PixarLogEncode+0xdb>
cmp    $0x4,%eax
je     441fe <PixarLogEncode+0x29e>
cmp    $0x5,%eax
jne    440a8 <PixarLogEncode+0x148>
movzwl 0x100(%rcx),%edx
mov    0x138(%rcx),%r8
mov    %r13,%rdi
mov    %r14,%rcx
callq  44d30 <horizontalDifferenceF>
lea    0x0(%r13,%r15,4),%r13
jmpq   4405b <PixarLogEncode+0xfb>
xor    %eax,%eax
mov    -0x30(%rbp),%rcx
mov    0x3b8(%rcx),%rdi
lea    0x2f07d(%rip),%rdx        # 731b6 <module.16+0x54>
lea    0x2f022(%rip),%rsi        # 73162 <module.16>
callq  8a00 <TIFFErrorExt@plt>
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
xor    %eax,%eax
leaveq 
retq   
mov    0x370(%r13),%rax
mov    %rax,0x390(%r13)
mov    %r13,%rdi
callq  86e0 <TIFFFlushData1@plt>
mov    0x368(%r13),%rax
mov    %rax,0x98(%r14)
mov    0x370(%r13),%eax
mov    %eax,0xa0(%r14)
mov    %r14,%rcx
mov    0x88(%rcx),%eax
test   %eax,%eax
je     44221 <PixarLogEncode+0x2c1>
mov    %rcx,%r14
mov    %r12,%rdi
mov    %rbx,%rsi
callq  84e0 <deflate@plt>
test   %eax,%eax
je     4423c <PixarLogEncode+0x2dc>
mov    0x3b8(%r13),%rdi
mov    0xb0(%r14),%rcx
test   %rcx,%rcx
jne    441d0 <PixarLogEncode+0x270>
lea    0x2f020(%rip),%rcx        # 731f0 <module.16+0x8e>
xor    %eax,%eax
lea    0x2f005(%rip),%rdx        # 731de <module.16+0x7c>
lea    0x2ef82(%rip),%rsi        # 73162 <module.16>
callq  8a00 <TIFFErrorExt@plt>
mov    %rbx,%rax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
movzwl 0x100(%rcx),%edx
mov    0x140(%rcx),%r8
mov    %r13,%rdi
mov    %r14,%rcx
callq  460d0 <horizontalDifference16>
lea    0x0(%r13,%r15,2),%r13
jmpq   4405b <PixarLogEncode+0xfb>
mov    $0x1,%eax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
mov    0xa0(%r14),%eax
test   %eax,%eax
je     4415d <PixarLogEncode+0x1fd>
mov    %r14,%rcx
jmpq   44192 <PixarLogEncode+0x232>
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

0000000000044260 <PixarLogDecode>:
push   %rbp
mov    %rsp,%rbp
sub    $0x50,%rsp
lea    0x2ef88(%rip),%r11        # 731f7 <module.22>
mov    0x350(%rdi),%r10
mov    0x108(%r10),%eax
cmp    $0x5,%eax
ja     44292 <PixarLogDecode+0x32>
lea    0x2ed8f(%rip),%rcx        # 73018 <module.8+0xa7>
movslq (%rcx,%rax,4),%rax
add    %rcx,%rax
jmpq   *%rax
xor    %eax,%eax
mov    0x3b8(%rdi),%rsi
lea    0x2eecf(%rip),%rdx        # 73171 <module.16+0xf>
movzwl 0x74(%rdi),%ecx
mov    %rsi,%rdi
mov    %r11,%rsi
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
shr    $0x2,%rdx
movzwl 0x100(%r10),%eax
movslq 0x58(%rdi),%rcx
test   %r10,%r10
jne    442ee <PixarLogDecode+0x8e>
lea    0x2ef35(%rip),%rdi        # 73206 <module.22+0xf>
lea    0x2ee1c(%rip),%rsi        # 730f4 <module.10+0x30>
mov    $0x317,%edx
lea    0x2ef2d(%rip),%rcx        # 73211 <module.22+0x1a>
callq  8490 <__assert_fail@plt>
shr    %rdx
jmp    442b9 <PixarLogDecode+0x59>
mov    0x388(%rdi),%r8
mov    %r8,0x80(%r10)
mov    0x390(%rdi),%r8d
mov    %r8d,0x88(%r10)
mov    0xf8(%r10),%r8
mov    %r8,0x98(%r10)
lea    (%rdx,%rdx,1),%r9
mov    %r9d,0xa0(%r10)
mov    %rsi,-0x30(%rbp)
mov    %r9d,%esi
cmp    %r9,%rsi
jne    44382 <PixarLogDecode+0x122>
mov    0xf0(%r10),%r8
mov    %r9d,%esi
cmp    %rsi,%r8
jl     4439e <PixarLogDecode+0x13e>
lea    0x80(%r10),%r8
mov    $0x1,%esi
mov    %rdx,-0x48(%rbp)
lea    0x2ee9b(%rip),%rdx        # 731f0 <module.16+0x8e>
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rcx,-0x38(%rbp)
mov    %rax,-0x40(%rbp)
mov    %r11,%rbx
mov    %r10,%r12
mov    %rdi,%r13
mov    %r8,%r14
mov    %rdx,%r15
jmp    443d2 <PixarLogDecode+0x172>
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
mov    %r11,%rsi
lea    0x2ee21(%rip),%rdx        # 731b6 <module.16+0x54>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
mov    %r11,%rsi
lea    0x2ee6f(%rip),%rdx        # 73220 <module.22+0x29>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
lea    0x2ee36(%rip),%rbx        # 731f7 <module.22>
mov    0xa0(%r12),%eax
test   %eax,%eax
je     4442f <PixarLogDecode+0x1cf>
mov    $0x1,%esi
mov    %r14,%rdi
callq  8170 <inflate@plt>
cmp    $0x1,%eax
je     4442f <PixarLogDecode+0x1cf>
cmp    $0xfffffffd,%eax
je     4447b <PixarLogDecode+0x21b>
test   %eax,%eax
je     443c1 <PixarLogDecode+0x161>
mov    0x3b8(%r13),%rdi
mov    0xb0(%r12),%rax
test   %rax,%rax
je     44403 <PixarLogDecode+0x1a3>
mov    %rax,%r15
mov    %r15,%rcx
mov    %rbx,%rsi
xor    %eax,%eax
lea    0x2ee56(%rip),%rdx        # 73268 <module.22+0x71>
callq  8a00 <TIFFErrorExt@plt>
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
xor    %eax,%eax
leaveq 
retq   
mov    0xa0(%r12),%r8d
test   %r8d,%r8d
jne    444d2 <PixarLogDecode+0x272>
mov    (%r14),%rax
mov    %rax,0x388(%r13)
mov    0x88(%r12),%eax
mov    %rax,0x390(%r13)
mov    0xf8(%r12),%r15
mov    0x10(%r13),%eax
and    $0x80,%eax
test   %eax,%eax
jne    44509 <PixarLogDecode+0x2a9>
mov    -0x48(%rbp),%rax
jmpq   4451b <PixarLogDecode+0x2bb>
mov    0x3b8(%r13),%rdi
mov    0x27c(%r13),%ecx
mov    0xb0(%r12),%r8
test   %r8,%r8
jne    44499 <PixarLogDecode+0x239>
mov    %r15,%r8
mov    %rbx,%rsi
xor    %eax,%eax
lea    0x2eda0(%rip),%rdx        # 73245 <module.22+0x4e>
callq  8a00 <TIFFErrorExt@plt>
mov    %r14,%rdi
callq  8cd0 <inflateSync@plt>
test   %eax,%eax
je     443ba <PixarLogDecode+0x15a>
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
xor    %eax,%eax
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%r13),%rdi
lea    0x2ed95(%rip),%rdx        # 73277 <module.22+0x80>
mov    0x27c(%r13),%ecx
mov    %rbx,%rsi
callq  8a00 <TIFFErrorExt@plt>
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
xor    %eax,%eax
leaveq 
retq   
mov    %r15,%rdi
mov    -0x48(%rbp),%r14
mov    %r14,%rsi
callq  83d0 <TIFFSwabArrayOfShort@plt>
mov    %r14,%rax
mov    -0x40(%rbp),%rcx
mov    -0x38(%rbp),%rsi
imul   %ecx,%esi
mov    %rsi,-0x40(%rbp)
movslq %esi,%r9
cqto   
mov    %rax,%r14
idiv   %r9
test   %rdx,%rdx
jne    4454a <PixarLogDecode+0x2ea>
mov    %r13,-0x38(%rbp)
mov    %r9,%rbx
xor    %r13d,%r13d
mov    -0x30(%rbp),%rax
jmp    445c2 <PixarLogDecode+0x362>
xor    %eax,%eax
mov    0x3b8(%r13),%rdi
lea    0x2ed4f(%rip),%rdx        # 732a9 <module.22+0xb2>
movslq %esi,%rcx
mov    %r14,%r8
mov    %r13,-0x38(%rbp)
mov    %rsi,%r13
mov    %rbx,%rsi
mov    %r9,%rbx
callq  85a0 <TIFFWarningExt@plt>
mov    %r14,%rax
mov    %r13,%rsi
cqto   
mov    %rax,%r14
idiv   %rbx
sub    %rdx,%r14
xor    %r13d,%r13d
mov    -0x30(%rbp),%rax
jmp    445c2 <PixarLogDecode+0x362>
movzwl 0x100(%r12),%edx
mov    0x120(%r12),%r8
mov    %r15,%rdi
mov    %rax,%rcx
mov    %r12,-0x48(%rbp)
mov    %rax,%r12
callq  42b90 <horizontalAccumulateF>
lea    (%r12,%rbx,4),%rax
add    %rbx,%r13
lea    (%r15,%rbx,2),%r15
mov    -0x40(%rbp),%rsi
mov    -0x48(%rbp),%r12
cmp    %r13,%r14
jg     445e2 <PixarLogDecode+0x382>
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    $0x1,%eax
leaveq 
retq   
mov    0x108(%r12),%ecx
cmp    $0x5,%ecx
ja     44628 <PixarLogDecode+0x3c8>
lea    0x2ea3a(%rip),%rdx        # 73030 <module.8+0xbf>
movslq (%rdx,%rcx,4),%rcx
add    %rdx,%rcx
jmpq   *%rcx
movzwl 0x100(%r12),%edx
mov    0x130(%r12),%r8
mov    %r15,%rdi
mov    %rax,%rcx
mov    %r12,-0x48(%rbp)
mov    %rax,%r12
callq  43820 <horizontalAccumulate8abgr>
lea    (%r12,%rbx,1),%rax
jmp    445b3 <PixarLogDecode+0x353>
xor    %eax,%eax
mov    -0x38(%rbp),%rcx
mov    0x3b8(%rcx),%rdi
lea    0x2ecb0(%rip),%rdx        # 732ec <module.22+0xf5>
movzwl 0x74(%rcx),%ecx
lea    0x2ebb0(%rip),%rsi        # 731f7 <module.22>
callq  8a00 <TIFFErrorExt@plt>
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
xor    %eax,%eax
leaveq 
retq   
movzwl 0x100(%r12),%edx
mov    0x128(%r12),%r8
mov    %r15,%rdi
mov    %rax,%rcx
mov    %r12,-0x48(%rbp)
mov    %rax,%r12
callq  431f0 <horizontalAccumulate16>
lea    (%r12,%rbx,2),%rax
jmpq   445b3 <PixarLogDecode+0x353>
movzwl 0x100(%r12),%edx
mov    0x120(%r12),%r8
mov    %r15,%rdi
mov    %rax,%rcx
mov    %r12,-0x48(%rbp)
mov    %rax,%r12
callq  42e00 <horizontalAccumulate12>
lea    (%r12,%rbx,2),%rax
jmpq   445b3 <PixarLogDecode+0x353>
movzwl 0x100(%r12),%edx
mov    %r15,%rdi
mov    %rax,%rcx
mov    %r12,-0x48(%rbp)
mov    %rax,%r12
callq  43440 <horizontalAccumulate11>
lea    (%r12,%rbx,2),%rax
jmpq   445b3 <PixarLogDecode+0x353>
movzwl 0x100(%r12),%edx
mov    0x130(%r12),%r8
mov    %r15,%rdi
mov    %rax,%rcx
mov    %r12,-0x48(%rbp)
mov    %rax,%r12
callq  435e0 <horizontalAccumulate8>
lea    (%r12,%rbx,1),%rax
jmpq   445b3 <PixarLogDecode+0x353>
nopl   0x0(%rax)

0000000000044710 <PixarLogGuessDataFmt>:
push   %rbp
mov    %rsp,%rbp
movzwl 0x3e(%rdi),%esi
mov    $0xffffffffffffffff,%rax
movzwl 0x3c(%rdi),%ecx
add    $0xfffffff8,%ecx
cmp    $0x18,%ecx
jbe    4472d <PixarLogGuessDataFmt+0x1d>
leaveq 
retq   
lea    0x2e914(%rip),%rdx        # 73048 <module.8+0xd7>
movslq (%rdx,%rcx,4),%rcx
add    %rdx,%rcx
jmpq   *%rcx
leaveq 
retq   
cmp    $0x3,%si
jne    44789 <PixarLogGuessDataFmt+0x79>
mov    $0x5,%eax
leaveq 
retq   
mov    $0x4,%ecx
cmp    $0x4,%si
jne    4478b <PixarLogGuessDataFmt+0x7b>
mov    %rcx,%rax
leaveq 
retq   
mov    $0x3,%ecx
cmp    $0x4,%si
jne    44796 <PixarLogGuessDataFmt+0x86>
mov    %rcx,%rax
leaveq 
retq   
mov    $0x2,%ecx
cmp    $0x4,%si
jne    447a1 <PixarLogGuessDataFmt+0x91>
mov    %rcx,%rax
leaveq 
retq   
xor    %ecx,%ecx
cmp    $0x4,%si
jne    447ac <PixarLogGuessDataFmt+0x9c>
mov    %rcx,%rax
leaveq 
retq   
leaveq 
retq   
cmp    $0x1,%si
jne    447b7 <PixarLogGuessDataFmt+0xa7>
mov    %rcx,%rax
leaveq 
retq   
cmp    $0x2,%si
jne    447b9 <PixarLogGuessDataFmt+0xa9>
mov    %rcx,%rax
leaveq 
retq   
cmp    $0x1,%si
jne    447bb <PixarLogGuessDataFmt+0xab>
mov    %rcx,%rax
leaveq 
retq   
cmp    $0x1,%si
jne    447bd <PixarLogGuessDataFmt+0xad>
mov    %rcx,%rax
leaveq 
retq   
leaveq 
retq   
leaveq 
retq   
leaveq 
retq   
leaveq 
retq   
nop

00000000000447c0 <multiply_ms>:
push   %rbp
mov    %rsp,%rbp
xor    %ecx,%ecx
test   %rdi,%rdi
jne    447d0 <multiply_ms+0x10>
mov    %rcx,%rax
leaveq 
retq   
movabs $0x7fffffffffffffff,%rax
cqto   
idiv   %rdi
cmp    %rsi,%rax
jge    447e9 <multiply_ms+0x29>
mov    %rcx,%rax
leaveq 
retq   
imul   %rsi,%rdi
mov    %rdi,%rax
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   (%rax)

0000000000044800 <add_ms>:
push   %rbp
mov    %rsp,%rbp
xor    %eax,%eax
test   %rdi,%rdi
jne    4480d <add_ms+0xd>
leaveq 
retq   
test   %rsi,%rsi
jne    44814 <add_ms+0x14>
leaveq 
retq   
movabs $0x7fffffffffffffff,%rcx
xor    %rsi,%rcx
cmp    %rcx,%rdi
jle    44828 <add_ms+0x28>
leaveq 
retq   
lea    (%rdi,%rsi,1),%rax
leaveq 
retq   
xchg   %ax,%ax

0000000000044830 <PixarLogFixupTags>:
push   %rbp
mov    %rsp,%rbp
mov    $0x1,%eax
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

0000000000044840 <PixarLogSetupDecode>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    0x350(%rdi),%r8
test   %r8,%r8
jne    44873 <PixarLogSetupDecode+0x33>
lea    0x2e9ab(%rip),%rdi        # 73206 <module.22+0xf>
lea    0x2e892(%rip),%rsi        # 730f4 <module.10+0x30>
mov    $0x2a6,%edx
lea    0x2eaae(%rip),%rcx        # 7331c <module.31+0x14>
callq  8490 <__assert_fail@plt>
mov    $0x1,%eax
movslq 0x104(%r8),%rcx
and    $0x1,%ecx
test   %ecx,%ecx
jle    44888 <PixarLogSetupDecode+0x48>
leaveq 
retq   
mov    0x5c(%rdi),%edx
mov    0x84(%rdi),%ecx
cmp    %ecx,%edx
jae    44898 <PixarLogSetupDecode+0x58>
mov    %rdx,%rcx
mov    0x356a9(%rip),%rdx        # 79f48 <_TIFFNoPostDecode@@Base+0x2f608>
mov    %rdx,0x3e8(%rdi)
movzwl 0xaa(%rdi),%edx
cmp    $0x1,%dx
jne    448ba <PixarLogSetupDecode+0x7a>
movzwl 0x82(%rdi),%eax
mov    %ax,0x100(%r8)
movzwl %ax,%eax
mov    0x58(%rdi),%esi
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rdi,-0x18(%rbp)
mov    %rax,%rdi
mov    %r8,%r14
mov    %rcx,%r15
callq  447c0 <multiply_ms>
mov    %r15d,%esi
mov    %rax,%rdi
callq  447c0 <multiply_ms>
mov    %rax,%rdi
mov    $0x2,%esi
callq  447c0 <multiply_ms>
xor    %r15d,%r15d
movzwl 0x100(%r14),%ecx
lea    (%rcx,%rcx,1),%rsi
mov    %rax,%rdi
callq  44800 <add_ms>
test   %rax,%rax
jne    44923 <PixarLogSetupDecode+0xe3>
mov    %r15,%rax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
mov    %rax,%r15
mov    %r15,%rdi
callq  8440 <_TIFFmalloc@plt>
mov    %rax,0xf8(%r14)
test   %rax,%rax
jne    44946 <PixarLogSetupDecode+0x106>
xor    %eax,%eax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
mov    %r15,0xf0(%r14)
movslq 0x108(%r14),%rax
cmp    $0xffffffff,%eax
je     4495f <PixarLogSetupDecode+0x11f>
mov    -0x18(%rbp),%r15
jmp    44973 <PixarLogSetupDecode+0x133>
mov    -0x18(%rbp),%r15
lea    0x38(%r15),%rdi
callq  44710 <PixarLogGuessDataFmt>
mov    %eax,0x108(%r14)
movslq 0x108(%r14),%rax
cmp    $0xffffffff,%eax
je     449bb <PixarLogSetupDecode+0x17b>
lea    0x80(%r14),%rdi
lea    0x2e9f4(%rip),%rsi        # 73381 <module.31+0x79>
mov    $0x70,%edx
callq  8a20 <inflateInit_@plt>
test   %eax,%eax
jne    44a0a <PixarLogSetupDecode+0x1ca>
movslq 0x104(%r14),%rax
or     $0x1,%eax
mov    %eax,0x104(%r14)
mov    $0x1,%eax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
mov    0xf8(%r14),%rdi
callq  8bb0 <_TIFFfree@plt>
movq   $0x0,0xf8(%r14)
movq   $0x0,0xf0(%r14)
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
lea    0x2e943(%rip),%rdx        # 73330 <module.31+0x28>
movzwl 0x74(%r15),%ecx
lea    0x2e90f(%rip),%rsi        # 73308 <module.31>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
mov    0xf8(%r14),%rdi
callq  8bb0 <_TIFFfree@plt>
movq   $0x0,0xf8(%r14)
movq   $0x0,0xf0(%r14)
mov    0x3b8(%r15),%rdi
mov    0xb0(%r14),%rcx
test   %rcx,%rcx
jne    44a46 <PixarLogSetupDecode+0x206>
lea    0x2e7aa(%rip),%rcx        # 731f0 <module.16+0x8e>
xor    %eax,%eax
lea    0x2e939(%rip),%rdx        # 73388 <module.31+0x80>
lea    0x2e8b2(%rip),%rsi        # 73308 <module.31>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

0000000000044a70 <PixarLogPreDecode>:
push   %rbp
mov    %rsp,%rbp
mov    0x350(%rdi),%rdx
test   %rdx,%rdx
jne    44a9f <PixarLogPreDecode+0x2f>
lea    0x2e77f(%rip),%rdi        # 73206 <module.22+0xf>
lea    0x2e666(%rip),%rsi        # 730f4 <module.10+0x30>
mov    $0x2e6,%edx
lea    0x2e903(%rip),%rcx        # 7339d <module.36+0x12>
callq  8490 <__assert_fail@plt>
mov    0x368(%rdi),%rax
mov    %rax,0x80(%rdx)
mov    0x390(%rdi),%ecx
mov    %ecx,0x88(%rdx)
mov    0x390(%rdi),%rax
cmp    %rcx,%rax
jne    44adc <PixarLogPreDecode+0x6c>
lea    0x80(%rdx),%rdi
callq  8bd0 <inflateReset@plt>
test   %eax,%eax
jne    44afc <PixarLogPreDecode+0x8c>
mov    $0x1,%eax
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
lea    0x2e89f(%rip),%rsi        # 7338b <module.36>
lea    0x2e6c3(%rip),%rdx        # 731b6 <module.16+0x54>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
xor    %eax,%eax
leaveq 
retq   

0000000000044b00 <PixarLogSetupEncode>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    0x350(%rdi),%rdx
test   %rdx,%rdx
jne    44b33 <PixarLogSetupEncode+0x33>
lea    0x2e6eb(%rip),%rdi        # 73206 <module.22+0xf>
lea    0x2e5d2(%rip),%rsi        # 730f4 <module.10+0x30>
mov    $0x390,%edx
lea    0x2e895(%rip),%rcx        # 733c3 <module.38+0x14>
callq  8490 <__assert_fail@plt>
mov    $0x1,%eax
movzwl 0xaa(%rdi),%ecx
cmp    $0x1,%cx
jne    44b4c <PixarLogSetupEncode+0x4c>
movzwl 0x82(%rdi),%eax
mov    %ax,0x100(%rdx)
movzwl %ax,%eax
mov    0x58(%rdi),%esi
mov    %r15,-0x8(%rbp)
mov    %rdx,-0x10(%rbp)
mov    %rdi,%r15
mov    %rax,%rdi
callq  447c0 <multiply_ms>
mov    %rax,%rdi
mov    0x84(%r15),%esi
callq  447c0 <multiply_ms>
mov    %rax,%rdi
mov    $0x2,%esi
callq  447c0 <multiply_ms>
test   %rax,%rax
jne    44b95 <PixarLogSetupEncode+0x95>
xor    %eax,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
mov    %rax,%rdi
callq  8440 <_TIFFmalloc@plt>
mov    -0x10(%rbp),%r8
mov    %rax,0xf8(%r8)
test   %rax,%rax
jne    44bb5 <PixarLogSetupEncode+0xb5>
xor    %eax,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
movslq 0x108(%r8),%rax
cmp    $0xffffffff,%eax
jne    44bdf <PixarLogSetupEncode+0xdf>
lea    0x38(%r15),%rdi
mov    %r14,-0x10(%rbp)
mov    %r8,%r14
callq  44710 <PixarLogGuessDataFmt>
mov    %eax,0x108(%r14)
mov    %r14,%r8
mov    -0x10(%rbp),%r14
lea    0x2e7c9(%rip),%rsi        # 733af <module.38>
movslq 0x108(%r8),%rax
cmp    $0xffffffff,%eax
je     44c3c <PixarLogSetupEncode+0x13c>
lea    0x80(%r8),%rdi
movslq 0x10c(%r8),%rsi
lea    0x2e77a(%rip),%rdx        # 73381 <module.31+0x79>
mov    $0x70,%ecx
mov    %r14,-0x10(%rbp)
mov    %r8,%r14
callq  8690 <deflateInit_@plt>
test   %eax,%eax
jne    44c5e <PixarLogSetupEncode+0x15e>
movslq 0x104(%r14),%rax
or     $0x1,%eax
mov    %eax,0x104(%r14)
mov    -0x10(%rbp),%r14
mov    $0x1,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
lea    0x2e78b(%rip),%rdx        # 733d7 <module.38+0x28>
movzwl 0x74(%r15),%ecx
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
mov    0x3b8(%r15),%rdi
mov    0xb0(%r14),%rcx
test   %rcx,%rcx
jne    44c78 <PixarLogSetupEncode+0x178>
lea    0x2e578(%rip),%rcx        # 731f0 <module.16+0x8e>
xor    %eax,%eax
lea    0x2e707(%rip),%rdx        # 73388 <module.31+0x80>
lea    0x2e727(%rip),%rsi        # 733af <module.38>
callq  8a00 <TIFFErrorExt@plt>
mov    -0x10(%rbp),%r14
xor    %eax,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
nopl   0x0(%rax)

0000000000044ca0 <PixarLogPreEncode>:
push   %rbp
mov    %rsp,%rbp
mov    0x350(%rdi),%rdx
test   %rdx,%rdx
jne    44ccf <PixarLogPreEncode+0x2f>
lea    0x2e54f(%rip),%rdi        # 73206 <module.22+0xf>
lea    0x2e436(%rip),%rsi        # 730f4 <module.10+0x30>
mov    $0x3b7,%edx
lea    0x2e759(%rip),%rcx        # 73423 <module.41+0x12>
callq  8490 <__assert_fail@plt>
mov    0x368(%rdi),%rax
mov    %rax,0x98(%rdx)
mov    0x370(%rdi),%ecx
mov    %ecx,0xa0(%rdx)
mov    0x370(%rdi),%rax
cmp    %rcx,%rax
jne    44d0c <PixarLogPreEncode+0x6c>
lea    0x80(%rdx),%rdi
callq  8460 <deflateReset@plt>
test   %eax,%eax
jne    44d2c <PixarLogPreEncode+0x8c>
mov    $0x1,%eax
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
lea    0x2e6f5(%rip),%rsi        # 73411 <module.41>
lea    0x2e493(%rip),%rdx        # 731b6 <module.16+0x54>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
xor    %eax,%eax
leaveq 
retq   

0000000000044d30 <horizontalDifferenceF>:
push   %rbp
mov    %rsp,%rbp
sub    $0x1e0,%rsp
movss  0x35d09(%rip),%xmm5        # 7aa4c <Fltsize>
movdqu %xmm5,-0x1d0(%rbp)
cmp    %esi,%edx
jle    44d51 <horizontalDifferenceF+0x21>
leaveq 
retq   
movsd  0x2e777(%rip),%xmm1        # 734d0 <module.47+0x62>
movss  0x2e777(%rip),%xmm3        # 734d8 <module.47+0x6a>
movss  0x2e773(%rip),%xmm2        # 734dc <module.47+0x6e>
xorpd  %xmm4,%xmm4
cmp    $0x3,%edx
je     44e01 <horizontalDifferenceF+0xd1>
cmp    $0x4,%edx
je     44e89 <horizontalDifferenceF+0x159>
mov    %rdx,-0x1e0(%rbp)
mov    %rsi,-0x1b0(%rbp)
mov    %r12,-0x170(%rbp)
mov    %r13,-0x178(%rbp)
mov    %r14,-0x180(%rbp)
mov    %r15,-0x188(%rbp)
mov    %rdx,%r12
movss  (%rdi),%xmm0
ucomiss %xmm4,%xmm0
jp     44f41 <horizontalDifferenceF+0x211>
jae    44f41 <horizontalDifferenceF+0x211>
movapd %xmm4,%xmm0
cvttsd2si %xmm0,%rax
mov    %ax,(%rcx)
add    $0x2,%rcx
add    $0x4,%rdi
add    $0xffffffff,%r12d
test   %r12d,%r12d
jg     44dac <horizontalDifferenceF+0x7c>
mov    -0x1e0(%rbp),%r12
mov    %r12,%rax
neg    %eax
movslq %eax,%r13
mov    -0x1b0(%rbp),%rax
sub    %r12d,%eax
mov    %rbx,-0x160(%rbp)
jmpq   44fc8 <horizontalDifferenceF+0x298>
movss  (%rdi),%xmm0
ucomiss %xmm4,%xmm0
jp     44ff1 <horizontalDifferenceF+0x2c1>
jae    44ff1 <horizontalDifferenceF+0x2c1>
mov    %r12,%rdx
movapd %xmm4,%xmm0
cvttsd2si %xmm0,%r12
mov    %r12w,(%rcx)
movss  0x4(%rdi),%xmm0
ucomiss %xmm4,%xmm0
jp     45011 <horizontalDifferenceF+0x2e1>
jae    45011 <horizontalDifferenceF+0x2e1>
mov    %r13,%r9
movapd %xmm4,%xmm0
cvttsd2si %xmm0,%r13
mov    %r13w,0x2(%rcx)
movss  0x8(%rdi),%xmm0
ucomiss %xmm4,%xmm0
jp     45031 <horizontalDifferenceF+0x301>
jae    45031 <horizontalDifferenceF+0x301>
mov    %rbx,%r10
movapd %xmm4,%xmm0
cvttsd2si %xmm0,%rax
mov    %ax,0x4(%rcx)
lea    -0x3(%rsi),%ebx
mov    %r10,-0x8(%rbp)
mov    %rdx,-0x10(%rbp)
mov    %r9,-0x20(%rbp)
mov    %r14,-0x30(%rbp)
mov    %r15,-0x40(%rbp)
jmpq   450f2 <horizontalDifferenceF+0x3c2>
movss  (%rdi),%xmm0
ucomiss %xmm4,%xmm0
jp     45110 <horizontalDifferenceF+0x3e0>
jae    45110 <horizontalDifferenceF+0x3e0>
mov    %rbx,%r9
movapd %xmm4,%xmm0
cvttsd2si %xmm0,%rbx
mov    %bx,(%rcx)
movss  0x4(%rdi),%xmm0
ucomiss %xmm4,%xmm0
jp     45130 <horizontalDifferenceF+0x400>
jae    45130 <horizontalDifferenceF+0x400>
mov    %r12,%r10
movapd %xmm4,%xmm0
cvttsd2si %xmm0,%r12
mov    %r12w,0x2(%rcx)
movss  0x8(%rdi),%xmm0
ucomiss %xmm4,%xmm0
jp     45150 <horizontalDifferenceF+0x420>
jae    45150 <horizontalDifferenceF+0x420>
mov    %r13,%r11
movapd %xmm4,%xmm0
cvttsd2si %xmm0,%r13
mov    %r13w,0x4(%rcx)
movss  0xc(%rdi),%xmm0
ucomiss %xmm4,%xmm0
jp     45170 <horizontalDifferenceF+0x440>
jae    45170 <horizontalDifferenceF+0x440>
movapd %xmm4,%xmm0
cvttsd2si %xmm0,%rdx
mov    %dx,0x6(%rcx)
lea    -0x4(%rsi),%eax
mov    %r9,-0xa0(%rbp)
mov    %r10,-0xb0(%rbp)
mov    %r11,-0xc0(%rbp)
mov    %r14,-0xd8(%rbp)
mov    %r15,-0xe8(%rbp)
jmpq   45261 <horizontalDifferenceF+0x531>
ucomiss %xmm3,%xmm0
jp     44f4c <horizontalDifferenceF+0x21c>
jb     4528e <horizontalDifferenceF+0x55e>
ucomiss %xmm2,%xmm0
jbe    452a8 <horizontalDifferenceF+0x578>
movapd %xmm1,%xmm0
jmpq   44dc3 <horizontalDifferenceF+0x93>
mov    %rax,-0x1c0(%rbp)
movss  (%rdi),%xmm0
ucomiss %xmm4,%xmm0
jp     45320 <horizontalDifferenceF+0x5f0>
jae    45320 <horizontalDifferenceF+0x5f0>
movapd %xmm4,%xmm0
movss  (%rdi,%r13,4),%xmm6
ucomiss %xmm4,%xmm6
jp     4533d <horizontalDifferenceF+0x60d>
jae    4533d <horizontalDifferenceF+0x60d>
movapd %xmm4,%xmm6
cvttsd2si %xmm6,%edx
cvttsd2si %xmm0,%eax
sub    %edx,%eax
and    $0x7ff,%ax
mov    %ax,(%rcx)
add    $0x2,%rcx
add    $0x4,%rdi
add    $0xffffffff,%r12d
test   %r12d,%r12d
jg     44f65 <horizontalDifferenceF+0x235>
mov    -0x1c0(%rbp),%rax
mov    -0x1e0(%rbp),%r12
sub    %r12d,%eax
test   %eax,%eax
jg     44f5e <horizontalDifferenceF+0x22e>
mov    -0x188(%rbp),%r15
mov    -0x180(%rbp),%r14
mov    -0x178(%rbp),%r13
mov    -0x170(%rbp),%r12
mov    -0x160(%rbp),%rbx
leaveq 
retq   
ucomiss %xmm3,%xmm0
jp     44ffc <horizontalDifferenceF+0x2cc>
jb     4535a <horizontalDifferenceF+0x62a>
ucomiss %xmm2,%xmm0
jbe    45377 <horizontalDifferenceF+0x647>
mov    %r12,%rdx
movapd %xmm1,%xmm0
jmpq   44e1b <horizontalDifferenceF+0xeb>
ucomiss %xmm3,%xmm0
jp     4501c <horizontalDifferenceF+0x2ec>
jb     45415 <horizontalDifferenceF+0x6e5>
ucomiss %xmm2,%xmm0
jbe    45432 <horizontalDifferenceF+0x702>
mov    %r13,%r9
movapd %xmm1,%xmm0
jmpq   44e3f <horizontalDifferenceF+0x10f>
ucomiss %xmm3,%xmm0
jp     4503c <horizontalDifferenceF+0x30c>
jb     454d8 <horizontalDifferenceF+0x7a8>
ucomiss %xmm2,%xmm0
jbe    454f5 <horizontalDifferenceF+0x7c5>
mov    %rbx,%r10
movapd %xmm1,%xmm0
jmpq   44e64 <horizontalDifferenceF+0x134>
lea    0xc(%rdi),%rsi
movss  (%rsi),%xmm0
ucomiss %xmm4,%xmm0
jp     4559d <horizontalDifferenceF+0x86d>
jae    4559d <horizontalDifferenceF+0x86d>
mov    %rax,%r14
mov    %rdi,%rax
mov    %rsi,%rdi
mov    %rcx,%r15
movapd %xmm4,%xmm0
cvttsd2si %xmm0,%esi
mov    %rsi,%rdx
sub    %r12w,%dx
and    $0x7ff,%dx
lea    0x6(%r15),%rcx
mov    %dx,(%rcx)
movss  0x10(%rax),%xmm0
ucomiss %xmm4,%xmm0
jp     455c6 <horizontalDifferenceF+0x896>
jae    455c6 <horizontalDifferenceF+0x896>
mov    %rsi,%r12
movapd %xmm4,%xmm0
cvttsd2si %xmm0,%esi
mov    %rsi,%rdx
sub    %r13w,%dx
and    $0x7ff,%dx
mov    %dx,0x8(%r15)
movss  0x14(%rax),%xmm0
ucomiss %xmm4,%xmm0
jp     455e6 <horizontalDifferenceF+0x8b6>
jae    455e6 <horizontalDifferenceF+0x8b6>
mov    %rsi,%r13
movapd %xmm4,%xmm0
cvttsd2si %xmm0,%eax
mov    %rax,%rdx
sub    %r14w,%dx
and    $0x7ff,%dx
mov    %dx,0xa(%r15)
add    $0xfffffffd,%ebx
test   %ebx,%ebx
jg     45051 <horizontalDifferenceF+0x321>
mov    -0x40(%rbp),%r15
mov    -0x30(%rbp),%r14
mov    -0x20(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
ucomiss %xmm3,%xmm0
jp     4511b <horizontalDifferenceF+0x3eb>
jb     45606 <horizontalDifferenceF+0x8d6>
ucomiss %xmm2,%xmm0
jbe    45623 <horizontalDifferenceF+0x8f3>
mov    %rbx,%r9
movapd %xmm1,%xmm0
jmpq   44ea3 <horizontalDifferenceF+0x173>
ucomiss %xmm3,%xmm0
jp     4513b <horizontalDifferenceF+0x40b>
jb     456dc <horizontalDifferenceF+0x9ac>
ucomiss %xmm2,%xmm0
jbe    456f9 <horizontalDifferenceF+0x9c9>
mov    %r12,%r10
movapd %xmm1,%xmm0
jmpq   44ec6 <horizontalDifferenceF+0x196>
ucomiss %xmm3,%xmm0
jp     4515b <horizontalDifferenceF+0x42b>
jb     457bd <horizontalDifferenceF+0xa8d>
ucomiss %xmm2,%xmm0
jbe    457da <horizontalDifferenceF+0xaaa>
mov    %r13,%r11
movapd %xmm1,%xmm0
jmpq   44eeb <horizontalDifferenceF+0x1bb>
ucomiss %xmm3,%xmm0
jp     4517b <horizontalDifferenceF+0x44b>
jb     458ac <horizontalDifferenceF+0xb7c>
ucomiss %xmm2,%xmm0
jbe    458c6 <horizontalDifferenceF+0xb96>
movapd %xmm1,%xmm0
jmpq   44f0d <horizontalDifferenceF+0x1dd>
lea    0x10(%rdi),%r9
movss  (%r9),%xmm0
ucomiss %xmm4,%xmm0
jp     459a0 <horizontalDifferenceF+0xc70>
jae    459a0 <horizontalDifferenceF+0xc70>
mov    %rcx,%r14
mov    %rdx,%r15
mov    %rdi,%rdx
mov    %r9,%rdi
movapd %xmm4,%xmm0
cvttsd2si %xmm0,%r9d
mov    %r9,%rsi
sub    %bx,%si
and    $0x7ff,%si
lea    0x8(%r14),%rcx
mov    %si,(%rcx)
movss  0x14(%rdx),%xmm0
ucomiss %xmm4,%xmm0
jp     459c9 <horizontalDifferenceF+0xc99>
jae    459c9 <horizontalDifferenceF+0xc99>
mov    %r9,%rbx
movapd %xmm4,%xmm0
cvttsd2si %xmm0,%r9d
mov    %r9,%rsi
sub    %r12w,%si
and    $0x7ff,%si
mov    %si,0xa(%r14)
movss  0x18(%rdx),%xmm0
ucomiss %xmm4,%xmm0
jp     459e9 <horizontalDifferenceF+0xcb9>
jae    459e9 <horizontalDifferenceF+0xcb9>
mov    %r9,%r12
movapd %xmm4,%xmm0
cvttsd2si %xmm0,%r9d
mov    %r9,%rsi
sub    %r13w,%si
and    $0x7ff,%si
mov    %si,0xc(%r14)
movss  0x1c(%rdx),%xmm0
ucomiss %xmm4,%xmm0
jp     45a09 <horizontalDifferenceF+0xcd9>
jae    45a09 <horizontalDifferenceF+0xcd9>
mov    %r9,%r13
movapd %xmm4,%xmm0
cvttsd2si %xmm0,%edx
mov    %rdx,%rsi
sub    %r15w,%si
and    $0x7ff,%si
mov    %si,0xe(%r14)
add    $0xfffffffc,%eax
test   %eax,%eax
jg     4518d <horizontalDifferenceF+0x45d>
mov    -0xe8(%rbp),%r15
mov    -0xd8(%rbp),%r14
mov    -0xc0(%rbp),%r13
mov    -0xb0(%rbp),%r12
mov    -0xa0(%rbp),%rbx
leaveq 
retq   
mulss  %xmm5,%xmm0
cvttss2si %xmm0,%eax
movzwl (%r8,%rax,2),%eax
movzwl %ax,%eax
cvtsi2sd %rax,%xmm0
jmpq   44dc3 <horizontalDifferenceF+0x93>
mov    %rdi,%r13
mov    %r8,%r14
mov    %rcx,%r15
mulss  0x3579b(%rip),%xmm0        # 7aa54 <LogK2>
cvtss2sd %xmm0,%xmm0
movss  0x3578b(%rip),%xmm1        # 7aa50 <LogK1>
movdqu %xmm1,-0x1c0(%rbp)
callq  8570 <log@plt>
mov    %r15,%rcx
mov    %r13,%rdi
mov    %r14,%r8
movdqu -0x1c0(%rbp),%xmm1
cvtss2sd %xmm1,%xmm1
mulsd  %xmm1,%xmm0
movsd  0x2e1c5(%rip),%xmm1        # 734b8 <module.47+0x4a>
addsd  %xmm1,%xmm0
movsd  0x2e1d1(%rip),%xmm1        # 734d0 <module.47+0x62>
movss  0x2e1d5(%rip),%xmm2        # 734dc <module.47+0x6e>
movss  0x2e1c9(%rip),%xmm3        # 734d8 <module.47+0x6a>
xorpd  %xmm4,%xmm4
movdqu -0x1d0(%rbp),%xmm5
jmpq   44dc3 <horizontalDifferenceF+0x93>
ucomiss %xmm3,%xmm0
jp     4532b <horizontalDifferenceF+0x5fb>
jb     45a29 <horizontalDifferenceF+0xcf9>
ucomiss %xmm2,%xmm0
jbe    45a43 <horizontalDifferenceF+0xd13>
movapd %xmm1,%xmm0
jmpq   44f7c <horizontalDifferenceF+0x24c>
ucomiss %xmm3,%xmm6
jp     45348 <horizontalDifferenceF+0x618>
jb     45abb <horizontalDifferenceF+0xd8b>
ucomiss %xmm2,%xmm6
jbe    45ad5 <horizontalDifferenceF+0xda5>
movapd %xmm1,%xmm6
jmpq   44f95 <horizontalDifferenceF+0x265>
mulss  %xmm5,%xmm0
cvttss2si %xmm0,%eax
movzwl (%r8,%rax,2),%eax
movzwl %ax,%eax
cvtsi2sd %rax,%xmm0
mov    %r12,%rdx
jmpq   44e1b <horizontalDifferenceF+0xeb>
mulss  0x356d5(%rip),%xmm0        # 7aa54 <LogK2>
cvtss2sd %xmm0,%xmm0
movss  0x356c5(%rip),%xmm1        # 7aa50 <LogK1>
movdqu %xmm1,-0x1e0(%rbp)
mov    %r12,-0x20(%rbp)
mov    %r13,-0x30(%rbp)
mov    %r14,-0x40(%rbp)
mov    %r15,-0x50(%rbp)
mov    %rcx,%r12
mov    %rdi,%r13
mov    %r8,%r14
mov    %rsi,%r15
callq  8570 <log@plt>
mov    %r12,%rcx
mov    %r15,%rsi
mov    %r13,%rdi
mov    %r14,%r8
movdqu -0x1e0(%rbp),%xmm1
cvtss2sd %xmm1,%xmm1
mulsd  %xmm1,%xmm0
movsd  0x2e0e0(%rip),%xmm1        # 734b8 <module.47+0x4a>
addsd  %xmm1,%xmm0
mov    -0x50(%rbp),%r15
mov    -0x40(%rbp),%r14
mov    -0x30(%rbp),%r13
mov    -0x20(%rbp),%rdx
movsd  0x2e0dc(%rip),%xmm1        # 734d0 <module.47+0x62>
movss  0x2e0e0(%rip),%xmm2        # 734dc <module.47+0x6e>
movss  0x2e0d4(%rip),%xmm3        # 734d8 <module.47+0x6a>
xorpd  %xmm4,%xmm4
movdqu -0x1d0(%rbp),%xmm5
jmpq   44e1b <horizontalDifferenceF+0xeb>
mulss  %xmm5,%xmm0
cvttss2si %xmm0,%eax
movzwl (%r8,%rax,2),%eax
movzwl %ax,%eax
cvtsi2sd %rax,%xmm0
mov    %r13,%r9
jmpq   44e3f <horizontalDifferenceF+0x10f>
mulss  0x3561a(%rip),%xmm0        # 7aa54 <LogK2>
cvtss2sd %xmm0,%xmm0
movss  0x3560a(%rip),%xmm1        # 7aa50 <LogK1>
movdqu %xmm1,-0x1e0(%rbp)
mov    %rbx,-0x10(%rbp)
mov    %rdx,-0x18(%rbp)
mov    %r13,-0x28(%rbp)
mov    %r14,-0x38(%rbp)
mov    %r15,-0x48(%rbp)
mov    %rcx,%rbx
mov    %rdi,%r13
mov    %r8,%r14
mov    %rsi,%r15
callq  8570 <log@plt>
mov    %rbx,%rcx
mov    %r15,%rsi
mov    %r13,%rdi
mov    %r14,%r8
movdqu -0x1e0(%rbp),%xmm1
cvtss2sd %xmm1,%xmm1
mulsd  %xmm1,%xmm0
movsd  0x2e021(%rip),%xmm1        # 734b8 <module.47+0x4a>
addsd  %xmm1,%xmm0
mov    -0x48(%rbp),%r15
mov    -0x38(%rbp),%r14
mov    -0x28(%rbp),%r9
mov    -0x18(%rbp),%rdx
mov    -0x10(%rbp),%rbx
movsd  0x2e019(%rip),%xmm1        # 734d0 <module.47+0x62>
movss  0x2e01d(%rip),%xmm2        # 734dc <module.47+0x6e>
movss  0x2e011(%rip),%xmm3        # 734d8 <module.47+0x6a>
xorpd  %xmm4,%xmm4
movdqu -0x1d0(%rbp),%xmm5
jmpq   44e3f <horizontalDifferenceF+0x10f>
mulss  %xmm5,%xmm0
cvttss2si %xmm0,%eax
movzwl (%r8,%rax,2),%eax
movzwl %ax,%eax
cvtsi2sd %rax,%xmm0
mov    %rbx,%r10
jmpq   44e64 <horizontalDifferenceF+0x134>
mulss  0x35557(%rip),%xmm0        # 7aa54 <LogK2>
cvtss2sd %xmm0,%xmm0
movss  0x35547(%rip),%xmm1        # 7aa50 <LogK1>
movdqu %xmm1,-0x60(%rbp)
mov    %rbx,-0x8(%rbp)
mov    %rdx,-0x18(%rbp)
mov    %r9,-0x28(%rbp)
mov    %r14,-0x38(%rbp)
mov    %r15,-0x48(%rbp)
mov    %r8,-0x1e0(%rbp)
mov    %rcx,%rbx
mov    %rdi,%r14
mov    %rsi,%r15
callq  8570 <log@plt>
mov    %rbx,%rcx
mov    %r15,%rsi
mov    %r14,%rdi
movdqu -0x60(%rbp),%xmm1
cvtss2sd %xmm1,%xmm1
mulsd  %xmm1,%xmm0
movsd  0x2df63(%rip),%xmm1        # 734b8 <module.47+0x4a>
addsd  %xmm1,%xmm0
mov    -0x1e0(%rbp),%r8
mov    -0x48(%rbp),%r15
mov    -0x38(%rbp),%r14
mov    -0x28(%rbp),%r9
mov    -0x18(%rbp),%rdx
mov    -0x8(%rbp),%r10
movsd  0x2df54(%rip),%xmm1        # 734d0 <module.47+0x62>
movss  0x2df58(%rip),%xmm2        # 734dc <module.47+0x6e>
movss  0x2df4c(%rip),%xmm3        # 734d8 <module.47+0x6a>
xorpd  %xmm4,%xmm4
movdqu -0x1d0(%rbp),%xmm5
jmpq   44e64 <horizontalDifferenceF+0x134>
ucomiss %xmm3,%xmm0
jp     455a8 <horizontalDifferenceF+0x878>
jb     45b65 <horizontalDifferenceF+0xe35>
ucomiss %xmm2,%xmm0
jbe    45b8b <horizontalDifferenceF+0xe5b>
mov    %rax,%r14
mov    %rdi,%rax
mov    %rsi,%rdi
mov    %rcx,%r15
movapd %xmm1,%xmm0
jmpq   45078 <horizontalDifferenceF+0x348>
ucomiss %xmm3,%xmm0
jp     455d1 <horizontalDifferenceF+0x8a1>
jb     45c1e <horizontalDifferenceF+0xeee>
ucomiss %xmm2,%xmm0
jbe    45c3b <horizontalDifferenceF+0xf0b>
mov    %rsi,%r12
movapd %xmm1,%xmm0
jmpq   450aa <horizontalDifferenceF+0x37a>
ucomiss %xmm3,%xmm0
jp     455f1 <horizontalDifferenceF+0x8c1>
jb     45cd9 <horizontalDifferenceF+0xfa9>
ucomiss %xmm2,%xmm0
jbe    45cf6 <horizontalDifferenceF+0xfc6>
mov    %rsi,%r13
movapd %xmm1,%xmm0
jmpq   450da <horizontalDifferenceF+0x3aa>
mulss  %xmm5,%xmm0
cvttss2si %xmm0,%eax
movzwl (%r8,%rax,2),%eax
movzwl %ax,%eax
cvtsi2sd %rax,%xmm0
mov    %rbx,%r9
jmpq   44ea3 <horizontalDifferenceF+0x173>
mulss  0x35429(%rip),%xmm0        # 7aa54 <LogK2>
cvtss2sd %xmm0,%xmm0
movss  0x35419(%rip),%xmm1        # 7aa50 <LogK1>
movdqu %xmm1,-0x1e0(%rbp)
mov    %r12,-0xc0(%rbp)
mov    %r13,-0xd0(%rbp)
mov    %r14,-0xe8(%rbp)
mov    %r15,-0xf8(%rbp)
mov    %rdi,%r12
mov    %r8,%r13
mov    %rcx,%r14
mov    %rsi,%r15
callq  8570 <log@plt>
mov    %r14,%rcx
mov    %r15,%rsi
mov    %r12,%rdi
mov    %r13,%r8
mov    %rbx,%r9
movdqu -0x1e0(%rbp),%xmm1
cvtss2sd %xmm1,%xmm1
mulsd  %xmm1,%xmm0
movsd  0x2de25(%rip),%xmm1        # 734b8 <module.47+0x4a>
addsd  %xmm1,%xmm0
mov    -0xf8(%rbp),%r15
mov    -0xe8(%rbp),%r14
mov    -0xd0(%rbp),%r13
mov    -0xc0(%rbp),%r12
movsd  0x2de15(%rip),%xmm1        # 734d0 <module.47+0x62>
movss  0x2de19(%rip),%xmm2        # 734dc <module.47+0x6e>
movss  0x2de0d(%rip),%xmm3        # 734d8 <module.47+0x6a>
xorpd  %xmm4,%xmm4
movdqu -0x1d0(%rbp),%xmm5
jmpq   44ea3 <horizontalDifferenceF+0x173>
mulss  %xmm5,%xmm0
cvttss2si %xmm0,%eax
movzwl (%r8,%rax,2),%eax
movzwl %ax,%eax
cvtsi2sd %rax,%xmm0
mov    %r12,%r10
jmpq   44ec6 <horizontalDifferenceF+0x196>
mulss  0x35353(%rip),%xmm0        # 7aa54 <LogK2>
cvtss2sd %xmm0,%xmm0
movss  0x35343(%rip),%xmm1        # 7aa50 <LogK1>
movdqu %xmm1,-0x1e0(%rbp)
mov    %r9,-0xa8(%rbp)
mov    %r12,-0xb8(%rbp)
mov    %r13,-0xd0(%rbp)
mov    %r14,-0xe0(%rbp)
mov    %r15,-0xf8(%rbp)
mov    %rcx,%r12
mov    %rdi,%r13
mov    %r8,%r14
mov    %rsi,%r15
callq  8570 <log@plt>
mov    %r12,%rcx
mov    %r15,%rsi
mov    %r13,%rdi
mov    %r14,%r8
movdqu -0x1e0(%rbp),%xmm1
cvtss2sd %xmm1,%xmm1
mulsd  %xmm1,%xmm0
movsd  0x2dd4b(%rip),%xmm1        # 734b8 <module.47+0x4a>
addsd  %xmm1,%xmm0
mov    -0xf8(%rbp),%r15
mov    -0xe0(%rbp),%r14
mov    -0xd0(%rbp),%r13
mov    -0xb8(%rbp),%r10
mov    -0xa8(%rbp),%r9
movsd  0x2dd34(%rip),%xmm1        # 734d0 <module.47+0x62>
movss  0x2dd38(%rip),%xmm2        # 734dc <module.47+0x6e>
movss  0x2dd2c(%rip),%xmm3        # 734d8 <module.47+0x6a>
xorpd  %xmm4,%xmm4
movdqu -0x1d0(%rbp),%xmm5
jmpq   44ec6 <horizontalDifferenceF+0x196>
mulss  %xmm5,%xmm0
cvttss2si %xmm0,%eax
movzwl (%r8,%rax,2),%eax
movzwl %ax,%eax
cvtsi2sd %rax,%xmm0
mov    %r13,%r11
jmpq   44eeb <horizontalDifferenceF+0x1bb>
mulss  0x35272(%rip),%xmm0        # 7aa54 <LogK2>
cvtss2sd %xmm0,%xmm0
movss  0x35262(%rip),%xmm1        # 7aa50 <LogK1>
movdqu %xmm1,-0x1e0(%rbp)
mov    %r9,-0xa8(%rbp)
mov    %r10,-0xb8(%rbp)
mov    %r13,-0xc8(%rbp)
mov    %r14,-0xe0(%rbp)
mov    %r15,-0xf0(%rbp)
mov    %rbx,-0x158(%rbp)
mov    %rdi,%rbx
mov    %r8,%r13
mov    %rcx,%r14
mov    %rsi,%r15
callq  8570 <log@plt>
mov    %r14,%rcx
mov    %r15,%rsi
mov    %rbx,%rdi
mov    %r13,%r8
movdqu -0x1e0(%rbp),%xmm1
cvtss2sd %xmm1,%xmm1
mulsd  %xmm1,%xmm0
movsd  0x2dc63(%rip),%xmm1        # 734b8 <module.47+0x4a>
addsd  %xmm1,%xmm0
mov    -0x158(%rbp),%rbx
mov    -0xf0(%rbp),%r15
mov    -0xe0(%rbp),%r14
mov    -0xc8(%rbp),%r11
mov    -0xb8(%rbp),%r10
mov    -0xa8(%rbp),%r9
movsd  0x2dc45(%rip),%xmm1        # 734d0 <module.47+0x62>
movss  0x2dc49(%rip),%xmm2        # 734dc <module.47+0x6e>
movss  0x2dc3d(%rip),%xmm3        # 734d8 <module.47+0x6a>
xorpd  %xmm4,%xmm4
movdqu -0x1d0(%rbp),%xmm5
jmpq   44eeb <horizontalDifferenceF+0x1bb>
mulss  %xmm5,%xmm0
cvttss2si %xmm0,%eax
movzwl (%r8,%rax,2),%eax
movzwl %ax,%eax
cvtsi2sd %rax,%xmm0
jmpq   44f0d <horizontalDifferenceF+0x1dd>
mulss  0x35186(%rip),%xmm0        # 7aa54 <LogK2>
cvtss2sd %xmm0,%xmm0
movss  0x35176(%rip),%xmm1        # 7aa50 <LogK1>
movdqu %xmm1,-0x110(%rbp)
mov    %r9,-0xa0(%rbp)
mov    %r10,-0xb0(%rbp)
mov    %r11,-0xc8(%rbp)
mov    %r14,-0xd8(%rbp)
mov    %r15,-0xf0(%rbp)
mov    %rbx,-0x150(%rbp)
mov    %r8,-0x1e0(%rbp)
mov    %rcx,%rbx
mov    %rdi,%r14
mov    %rsi,%r15
callq  8570 <log@plt>
mov    %rbx,%rcx
mov    %r15,%rsi
mov    %r14,%rdi
movdqu -0x110(%rbp),%xmm1
cvtss2sd %xmm1,%xmm1
mulsd  %xmm1,%xmm0
movsd  0x2db76(%rip),%xmm1        # 734b8 <module.47+0x4a>
addsd  %xmm1,%xmm0
mov    -0x1e0(%rbp),%r8
mov    -0x150(%rbp),%rbx
mov    -0xf0(%rbp),%r15
mov    -0xd8(%rbp),%r14
mov    -0xc8(%rbp),%r11
mov    -0xb0(%rbp),%r10
mov    -0xa0(%rbp),%r9
movsd  0x2db51(%rip),%xmm1        # 734d0 <module.47+0x62>
movss  0x2db55(%rip),%xmm2        # 734dc <module.47+0x6e>
movss  0x2db49(%rip),%xmm3        # 734d8 <module.47+0x6a>
xorpd  %xmm4,%xmm4
movdqu -0x1d0(%rbp),%xmm5
jmpq   44f0d <horizontalDifferenceF+0x1dd>
ucomiss %xmm3,%xmm0
jp     459ab <horizontalDifferenceF+0xc7b>
jb     45d80 <horizontalDifferenceF+0x1050>
ucomiss %xmm2,%xmm0
jbe    45da6 <horizontalDifferenceF+0x1076>
mov    %rcx,%r14
mov    %rdx,%r15
mov    %rdi,%rdx
mov    %r9,%rdi
movapd %xmm1,%xmm0
jmpq   451b5 <horizontalDifferenceF+0x485>
ucomiss %xmm3,%xmm0
jp     459d4 <horizontalDifferenceF+0xca4>
jb     45e53 <horizontalDifferenceF+0x1123>
ucomiss %xmm2,%xmm0
jbe    45e70 <horizontalDifferenceF+0x1140>
mov    %r9,%rbx
movapd %xmm1,%xmm0
jmpq   451e7 <horizontalDifferenceF+0x4b7>
ucomiss %xmm3,%xmm0
jp     459f4 <horizontalDifferenceF+0xcc4>
jb     45f28 <horizontalDifferenceF+0x11f8>
ucomiss %xmm2,%xmm0
jbe    45f45 <horizontalDifferenceF+0x1215>
mov    %r9,%r12
movapd %xmm1,%xmm0
jmpq   45218 <horizontalDifferenceF+0x4e8>
ucomiss %xmm3,%xmm0
jp     45a14 <horizontalDifferenceF+0xce4>
jb     45ffd <horizontalDifferenceF+0x12cd>
ucomiss %xmm2,%xmm0
jbe    4601a <horizontalDifferenceF+0x12ea>
mov    %r9,%r13
movapd %xmm1,%xmm0
jmpq   45249 <horizontalDifferenceF+0x519>
mulss  %xmm5,%xmm0
cvttss2si %xmm0,%eax
movzwl (%r8,%rax,2),%eax
movzwl %ax,%eax
cvtsi2sd %rax,%xmm0
jmpq   44f7c <horizontalDifferenceF+0x24c>
mov    %rcx,%rbx
mov    %rdi,%r14
mov    %r8,%r15
mulss  0x35000(%rip),%xmm0        # 7aa54 <LogK2>
cvtss2sd %xmm0,%xmm0
movss  0x34ff0(%rip),%xmm1        # 7aa50 <LogK1>
movdqu %xmm1,-0x1a0(%rbp)
callq  8570 <log@plt>
mov    %rbx,%rcx
mov    %r14,%rdi
mov    %r15,%r8
movdqu -0x1a0(%rbp),%xmm1
cvtss2sd %xmm1,%xmm1
mulsd  %xmm1,%xmm0
movsd  0x2da2a(%rip),%xmm1        # 734b8 <module.47+0x4a>
addsd  %xmm1,%xmm0
movsd  0x2da36(%rip),%xmm1        # 734d0 <module.47+0x62>
movss  0x2da3a(%rip),%xmm2        # 734dc <module.47+0x6e>
movss  0x2da2e(%rip),%xmm3        # 734d8 <module.47+0x6a>
xorpd  %xmm4,%xmm4
movdqu -0x1d0(%rbp),%xmm5
jmpq   44f7c <horizontalDifferenceF+0x24c>
mulss  %xmm5,%xmm6
cvttss2si %xmm6,%eax
movzwl (%r8,%rax,2),%eax
movzwl %ax,%eax
cvtsi2sd %rax,%xmm6
jmpq   44f95 <horizontalDifferenceF+0x265>
mov    %rdi,%rbx
mov    %r8,%r14
mov    %rcx,%r15
mulss  0x34f6e(%rip),%xmm6        # 7aa54 <LogK2>
cvtss2sd %xmm6,%xmm2
movss  0x34f5e(%rip),%xmm1        # 7aa50 <LogK1>
movdqu %xmm1,-0x1b0(%rbp)
movdqu %xmm0,-0x1a0(%rbp)
movapd %xmm2,%xmm0
callq  8570 <log@plt>
mov    %r15,%rcx
mov    %rbx,%rdi
mov    %r14,%r8
movdqu -0x1b0(%rbp),%xmm1
cvtss2sd %xmm1,%xmm1
movapd %xmm0,%xmm6
mulsd  %xmm1,%xmm6
movsd  0x2d988(%rip),%xmm0        # 734b8 <module.47+0x4a>
addsd  %xmm0,%xmm6
movdqu -0x1a0(%rbp),%xmm0
movsd  0x2d98c(%rip),%xmm1        # 734d0 <module.47+0x62>
movss  0x2d990(%rip),%xmm2        # 734dc <module.47+0x6e>
movss  0x2d984(%rip),%xmm3        # 734d8 <module.47+0x6a>
xorpd  %xmm4,%xmm4
movdqu -0x1d0(%rbp),%xmm5
jmpq   44f95 <horizontalDifferenceF+0x265>
mulss  %xmm5,%xmm0
cvttss2si %xmm0,%edx
movzwl (%r8,%rdx,2),%edx
movzwl %dx,%edx
cvtsi2sd %rdx,%xmm0
mov    %rax,%r14
mov    %rdi,%rax
mov    %rsi,%rdi
mov    %rcx,%r15
jmpq   45078 <horizontalDifferenceF+0x348>
mulss  0x34ec1(%rip),%xmm0        # 7aa54 <LogK2>
cvtss2sd %xmm0,%xmm0
movss  0x34eb1(%rip),%xmm1        # 7aa50 <LogK1>
movdqu %xmm1,-0x90(%rbp)
mov    %rax,-0x50(%rbp)
mov    %rbx,-0x1e0(%rbp)
mov    %rsi,-0x78(%rbp)
mov    %r8,%rbx
mov    %rdi,%r14
mov    %rcx,%r15
callq  8570 <log@plt>
mov    %r14,%rax
mov    %rbx,%r8
movdqu -0x90(%rbp),%xmm1
cvtss2sd %xmm1,%xmm1
mulsd  %xmm1,%xmm0
movsd  0x2d8d6(%rip),%xmm1        # 734b8 <module.47+0x4a>
addsd  %xmm1,%xmm0
mov    -0x78(%rbp),%rdi
mov    -0x1e0(%rbp),%rbx
mov    -0x50(%rbp),%r14
movsd  0x2d8d3(%rip),%xmm1        # 734d0 <module.47+0x62>
movss  0x2d8d7(%rip),%xmm2        # 734dc <module.47+0x6e>
movss  0x2d8cb(%rip),%xmm3        # 734d8 <module.47+0x6a>
xorpd  %xmm4,%xmm4
movdqu -0x1d0(%rbp),%xmm5
jmpq   45078 <horizontalDifferenceF+0x348>
mulss  %xmm5,%xmm0
cvttss2si %xmm0,%edx
movzwl (%r8,%rdx,2),%edx
movzwl %dx,%edx
cvtsi2sd %rdx,%xmm0
mov    %rsi,%r12
jmpq   450aa <horizontalDifferenceF+0x37a>
mulss  0x34e11(%rip),%xmm0        # 7aa54 <LogK2>
cvtss2sd %xmm0,%xmm0
movss  0x34e01(%rip),%xmm1        # 7aa50 <LogK1>
movdqu %xmm1,-0x70(%rbp)
mov    %rbx,-0x1e0(%rbp)
mov    %rdi,-0x78(%rbp)
mov    %rsi,-0x90(%rbp)
mov    %rcx,-0x98(%rbp)
mov    %r8,%rbx
mov    %rax,%r12
callq  8570 <log@plt>
mov    %r12,%rax
mov    %rbx,%r8
movdqu -0x70(%rbp),%xmm1
cvtss2sd %xmm1,%xmm1
mulsd  %xmm1,%xmm0
movsd  0x2d825(%rip),%xmm1        # 734b8 <module.47+0x4a>
addsd  %xmm1,%xmm0
mov    -0x98(%rbp),%rcx
mov    -0x90(%rbp),%r12
mov    -0x78(%rbp),%rdi
mov    -0x1e0(%rbp),%rbx
movsd  0x2d818(%rip),%xmm1        # 734d0 <module.47+0x62>
movss  0x2d81c(%rip),%xmm2        # 734dc <module.47+0x6e>
movss  0x2d810(%rip),%xmm3        # 734d8 <module.47+0x6a>
xorpd  %xmm4,%xmm4
movdqu -0x1d0(%rbp),%xmm5
jmpq   450aa <horizontalDifferenceF+0x37a>
mulss  %xmm5,%xmm0
cvttss2si %xmm0,%eax
movzwl (%r8,%rax,2),%eax
movzwl %ax,%eax
cvtsi2sd %rax,%xmm0
mov    %rsi,%r13
jmpq   450da <horizontalDifferenceF+0x3aa>
mulss  0x34d56(%rip),%xmm0        # 7aa54 <LogK2>
cvtss2sd %xmm0,%xmm0
movss  0x34d46(%rip),%xmm1        # 7aa50 <LogK1>
movdqu %xmm1,-0x60(%rbp)
mov    %r8,-0x1e0(%rbp)
mov    %rcx,-0x98(%rbp)
mov    %rsi,-0x70(%rbp)
mov    %rdi,%r13
callq  8570 <log@plt>
mov    %r13,%rdi
movdqu -0x60(%rbp),%xmm1
cvtss2sd %xmm1,%xmm1
mulsd  %xmm1,%xmm0
movsd  0x2d777(%rip),%xmm1        # 734b8 <module.47+0x4a>
addsd  %xmm1,%xmm0
mov    -0x70(%rbp),%r13
mov    -0x98(%rbp),%rcx
mov    -0x1e0(%rbp),%r8
movsd  0x2d771(%rip),%xmm1        # 734d0 <module.47+0x62>
movss  0x2d775(%rip),%xmm2        # 734dc <module.47+0x6e>
movss  0x2d769(%rip),%xmm3        # 734d8 <module.47+0x6a>
xorpd  %xmm4,%xmm4
movdqu -0x1d0(%rbp),%xmm5
jmpq   450da <horizontalDifferenceF+0x3aa>
mulss  %xmm5,%xmm0
cvttss2si %xmm0,%esi
movzwl (%r8,%rsi,2),%esi
movzwl %si,%esi
cvtsi2sd %rsi,%xmm0
mov    %rcx,%r14
mov    %rdx,%r15
mov    %rdi,%rdx
mov    %r9,%rdi
jmpq   451b5 <horizontalDifferenceF+0x485>
mulss  0x34ca6(%rip),%xmm0        # 7aa54 <LogK2>
cvtss2sd %xmm0,%xmm0
movss  0x34c96(%rip),%xmm1        # 7aa50 <LogK1>
movdqu %xmm1,-0x170(%rbp)
mov    %r13,-0x118(%rbp)
mov    %rdx,-0x100(%rbp)
mov    %rax,-0x1e0(%rbp)
mov    %r9,-0x150(%rbp)
mov    %r8,%r13
mov    %rcx,%r14
mov    %rdi,%r15
callq  8570 <log@plt>
mov    %r15,%rdx
mov    %r13,%r8
movdqu -0x170(%rbp),%xmm1
cvtss2sd %xmm1,%xmm1
mulsd  %xmm1,%xmm0
movsd  0x2d6ae(%rip),%xmm1        # 734b8 <module.47+0x4a>
addsd  %xmm1,%xmm0
mov    -0x150(%rbp),%rdi
mov    -0x1e0(%rbp),%rax
mov    -0x100(%rbp),%r15
mov    -0x118(%rbp),%r13
movsd  0x2d69e(%rip),%xmm1        # 734d0 <module.47+0x62>
movss  0x2d6a2(%rip),%xmm2        # 734dc <module.47+0x6e>
movss  0x2d696(%rip),%xmm3        # 734d8 <module.47+0x6a>
xorpd  %xmm4,%xmm4
movdqu -0x1d0(%rbp),%xmm5
jmpq   451b5 <horizontalDifferenceF+0x485>
mulss  %xmm5,%xmm0
cvttss2si %xmm0,%esi
movzwl (%r8,%rsi,2),%esi
movzwl %si,%esi
cvtsi2sd %rsi,%xmm0
mov    %r9,%rbx
jmpq   451e7 <horizontalDifferenceF+0x4b7>
mulss  0x34bdc(%rip),%xmm0        # 7aa54 <LogK2>
cvtss2sd %xmm0,%xmm0
movss  0x34bcc(%rip),%xmm1        # 7aa50 <LogK1>
movdqu %xmm1,-0x140(%rbp)
mov    %r15,-0x100(%rbp)
mov    %rax,-0x1e0(%rbp)
mov    %rdi,-0x148(%rbp)
mov    %r9,-0x160(%rbp)
mov    %rcx,-0x188(%rbp)
mov    %r8,%rbx
mov    %rdx,%r15
callq  8570 <log@plt>
mov    %r15,%rdx
mov    %rbx,%r8
movdqu -0x140(%rbp),%xmm1
cvtss2sd %xmm1,%xmm1
mulsd  %xmm1,%xmm0
movsd  0x2d5e0(%rip),%xmm1        # 734b8 <module.47+0x4a>
addsd  %xmm1,%xmm0
mov    -0x188(%rbp),%rcx
mov    -0x160(%rbp),%rbx
mov    -0x148(%rbp),%rdi
mov    -0x1e0(%rbp),%rax
mov    -0x100(%rbp),%r15
movsd  0x2d5c9(%rip),%xmm1        # 734d0 <module.47+0x62>
movss  0x2d5cd(%rip),%xmm2        # 734dc <module.47+0x6e>
movss  0x2d5c1(%rip),%xmm3        # 734d8 <module.47+0x6a>
xorpd  %xmm4,%xmm4
movdqu -0x1d0(%rbp),%xmm5
jmpq   451e7 <horizontalDifferenceF+0x4b7>
mulss  %xmm5,%xmm0
cvttss2si %xmm0,%esi
movzwl (%r8,%rsi,2),%esi
movzwl %si,%esi
cvtsi2sd %rsi,%xmm0
mov    %r9,%r12
jmpq   45218 <horizontalDifferenceF+0x4e8>
mulss  0x34b07(%rip),%xmm0        # 7aa54 <LogK2>
cvtss2sd %xmm0,%xmm0
movss  0x34af7(%rip),%xmm1        # 7aa50 <LogK1>
movdqu %xmm1,-0x130(%rbp)
mov    %rax,-0x1e0(%rbp)
mov    %rdi,-0x148(%rbp)
mov    %rbx,-0x158(%rbp)
mov    %rcx,-0x180(%rbp)
mov    %r9,-0x140(%rbp)
mov    %r8,%rbx
mov    %rdx,%r12
callq  8570 <log@plt>
mov    %r12,%rdx
mov    %rbx,%r8
movdqu -0x130(%rbp),%xmm1
cvtss2sd %xmm1,%xmm1
mulsd  %xmm1,%xmm0
movsd  0x2d50b(%rip),%xmm1        # 734b8 <module.47+0x4a>
addsd  %xmm1,%xmm0
mov    -0x140(%rbp),%r12
mov    -0x180(%rbp),%rcx
mov    -0x158(%rbp),%rbx
mov    -0x148(%rbp),%rdi
mov    -0x1e0(%rbp),%rax
movsd  0x2d4f4(%rip),%xmm1        # 734d0 <module.47+0x62>
movss  0x2d4f8(%rip),%xmm2        # 734dc <module.47+0x6e>
movss  0x2d4ec(%rip),%xmm3        # 734d8 <module.47+0x6a>
xorpd  %xmm4,%xmm4
movdqu -0x1d0(%rbp),%xmm5
jmpq   45218 <horizontalDifferenceF+0x4e8>
mulss  %xmm5,%xmm0
cvttss2si %xmm0,%edx
movzwl (%r8,%rdx,2),%edx
movzwl %dx,%edx
cvtsi2sd %rdx,%xmm0
mov    %r9,%r13
jmpq   45249 <horizontalDifferenceF+0x519>
mulss  0x34a32(%rip),%xmm0        # 7aa54 <LogK2>
cvtss2sd %xmm0,%xmm0
movss  0x34a22(%rip),%xmm1        # 7aa50 <LogK1>
movdqu %xmm1,-0x110(%rbp)
mov    %r8,-0x1e0(%rbp)
mov    %rcx,-0x178(%rbp)
mov    %r12,-0x130(%rbp)
mov    %r9,-0x118(%rbp)
mov    %rdi,%r12
mov    %rax,%r13
callq  8570 <log@plt>
mov    %r13,%rax
mov    %r12,%rdi
movdqu -0x110(%rbp),%xmm1
cvtss2sd %xmm1,%xmm1
mulsd  %xmm1,%xmm0
movsd  0x2d43d(%rip),%xmm1        # 734b8 <module.47+0x4a>
addsd  %xmm1,%xmm0
mov    -0x118(%rbp),%r13
mov    -0x130(%rbp),%r12
mov    -0x178(%rbp),%rcx
mov    -0x1e0(%rbp),%r8
movsd  0x2d42d(%rip),%xmm1        # 734d0 <module.47+0x62>
movss  0x2d431(%rip),%xmm2        # 734dc <module.47+0x6e>
movss  0x2d425(%rip),%xmm3        # 734d8 <module.47+0x6a>
xorpd  %xmm4,%xmm4
movdqu -0x1d0(%rbp),%xmm5
jmpq   45249 <horizontalDifferenceF+0x519>
data16 nopw %cs:0x0(%rax,%rax,1)
nop

00000000000460d0 <horizontalDifference16>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
cmp    %esi,%edx
jle    460de <horizontalDifference16+0xe>
leaveq 
retq   
cmp    $0x3,%edx
je     4611c <horizontalDifference16+0x4c>
cmp    $0x4,%edx
je     46164 <horizontalDifference16+0x94>
mov    %rdx,%r9
movzwl (%rdi),%eax
shr    $0x2,%eax
movslq %eax,%rax
movzwl (%r8,%rax,2),%eax
mov    %ax,(%rcx)
add    $0x2,%rdi
add    $0x2,%rcx
add    $0xffffffff,%r9d
test   %r9d,%r9d
jg     460eb <horizontalDifference16+0x1b>
mov    %rdx,%rax
neg    %eax
movslq %eax,%r11
sub    %edx,%esi
jmpq   46201 <horizontalDifference16+0x131>
movzwl (%rdi),%eax
shr    $0x2,%eax
movslq %eax,%rax
movzwl (%r8,%rax,2),%r10d
mov    %r10w,(%rcx)
movzwl 0x2(%rdi),%eax
shr    $0x2,%eax
movslq %eax,%rax
movzwl (%r8,%rax,2),%edx
mov    %dx,0x2(%rcx)
movzwl 0x4(%rdi),%eax
shr    $0x2,%eax
movslq %eax,%rax
movzwl (%r8,%rax,2),%r9d
mov    %r9w,0x4(%rcx)
lea    -0x3(%rsi),%eax
mov    %r15,-0x10(%rbp)
mov    %rdx,%rsi
jmpq   4627d <horizontalDifference16+0x1ad>
movzwl (%rdi),%eax
shr    $0x2,%eax
movslq %eax,%rax
movzwl (%r8,%rax,2),%r10d
mov    %r10w,(%rcx)
movzwl 0x2(%rdi),%eax
shr    $0x2,%eax
movslq %eax,%rax
movzwl (%r8,%rax,2),%r9d
mov    %r9w,0x2(%rcx)
movzwl 0x4(%rdi),%eax
shr    $0x2,%eax
movslq %eax,%rax
movzwl (%r8,%rax,2),%edx
mov    %dx,0x4(%rcx)
movzwl 0x6(%rdi),%eax
shr    $0x2,%eax
movslq %eax,%rax
movzwl (%r8,%rax,2),%r11d
mov    %r11w,0x6(%rcx)
lea    -0x4(%rsi),%eax
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
jmpq   46325 <horizontalDifference16+0x255>
mov    %rdx,%r10
movzwl (%rdi),%eax
shr    $0x2,%eax
movslq %eax,%rax
movzwl (%r8,%rax,2),%eax
movzwl (%rdi,%r11,2),%r9d
shr    $0x2,%r9d
movslq %r9d,%r9
movzwl (%r8,%r9,2),%r9d
sub    %r9w,%ax
and    $0x7ff,%ax
mov    %ax,(%rcx)
add    $0x2,%rdi
add    $0x2,%rcx
add    $0xffffffff,%r10d
test   %r10d,%r10d
jg     461c4 <horizontalDifference16+0xf4>
sub    %edx,%esi
test   %esi,%esi
jg     461c1 <horizontalDifference16+0xf1>
leaveq 
retq   
lea    0x6(%rdi),%r15
movzwl (%r15),%edx
shr    $0x2,%edx
movslq %edx,%rdx
movzwl (%r8,%rdx,2),%r11d
mov    %r11,%rdx
sub    %r10w,%dx
and    $0x7ff,%dx
lea    0x6(%rcx),%r10
mov    %dx,(%r10)
movzwl 0x8(%rdi),%edx
shr    $0x2,%edx
movslq %edx,%rdx
movzwl (%r8,%rdx,2),%edx
neg    %si
add    %dx,%si
and    $0x7ff,%si
mov    %si,0x8(%rcx)
movzwl 0xa(%rdi),%esi
shr    $0x2,%esi
movslq %esi,%rsi
movzwl (%r8,%rsi,2),%edi
mov    %rdi,%rsi
sub    %r9w,%si
and    $0x7ff,%si
mov    %si,0xa(%rcx)
add    $0xfffffffd,%eax
mov    %r10,%rcx
mov    %r11,%r10
mov    %rdx,%rsi
mov    %rdi,%r9
mov    %r15,%rdi
test   %eax,%eax
jg     46207 <horizontalDifference16+0x137>
mov    -0x10(%rbp),%r15
leaveq 
retq   
lea    0x8(%rdi),%r15
movzwl (%r15),%esi
shr    $0x2,%esi
movslq %esi,%rsi
movzwl (%r8,%rsi,2),%r14d
mov    %r14,%rsi
sub    %r10w,%si
and    $0x7ff,%si
lea    0x8(%rcx),%r10
mov    %si,(%r10)
movzwl 0xa(%rdi),%esi
shr    $0x2,%esi
movslq %esi,%rsi
movzwl (%r8,%rsi,2),%esi
neg    %r9w
add    %si,%r9w
and    $0x7ff,%r9w
mov    %r9w,0xa(%rcx)
movzwl 0xc(%rdi),%r9d
shr    $0x2,%r9d
movslq %r9d,%r9
movzwl (%r8,%r9,2),%r9d
neg    %dx
add    %r9w,%dx
and    $0x7ff,%dx
mov    %dx,0xc(%rcx)
movzwl 0xe(%rdi),%edx
shr    $0x2,%edx
movslq %edx,%rdx
movzwl (%r8,%rdx,2),%edi
mov    %rdi,%rdx
sub    %r11w,%dx
and    $0x7ff,%dx
mov    %dx,0xe(%rcx)
add    $0xfffffffc,%eax
mov    %r10,%rcx
mov    %r14,%r10
mov    %r9,%rdx
mov    %rsi,%r9
mov    %rdi,%r11
mov    %r15,%rdi
test   %eax,%eax
jg     46287 <horizontalDifference16+0x1b7>
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

0000000000046340 <horizontalDifference8>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
cmp    %esi,%edx
jle    4634e <horizontalDifference8+0xe>
leaveq 
retq   
cmp    $0x3,%edx
je     46386 <horizontalDifference8+0x46>
cmp    $0x4,%edx
je     463bc <horizontalDifference8+0x7c>
mov    %rdx,%rax
movzbl (%rdi),%r9d
movzwl (%r8,%r9,2),%r9d
mov    %r9w,(%rcx)
add    $0x1,%rdi
add    $0x2,%rcx
add    $0xffffffff,%eax
test   %eax,%eax
jg     4635b <horizontalDifference8+0x1b>
mov    %rdx,%rax
neg    %eax
movslq %eax,%r11
sub    %edx,%esi
jmpq   46437 <horizontalDifference8+0xf7>
movzbl (%rdi),%eax
movzwl (%r8,%rax,2),%edx
mov    %dx,(%rcx)
movzbl 0x1(%rdi),%eax
movzwl (%r8,%rax,2),%r10d
mov    %r10w,0x2(%rcx)
movzbl 0x2(%rdi),%eax
movzwl (%r8,%rax,2),%r9d
mov    %r9w,0x4(%rcx)
lea    -0x3(%rsi),%eax
mov    %r15,-0x10(%rbp)
mov    %r10,%rsi
jmpq   464a1 <horizontalDifference8+0x161>
movzbl (%rdi),%eax
movzwl (%r8,%rax,2),%edx
mov    %dx,(%rcx)
movzbl 0x1(%rdi),%eax
movzwl (%r8,%rax,2),%r11d
mov    %r11w,0x2(%rcx)
movzbl 0x2(%rdi),%eax
movzwl (%r8,%rax,2),%r9d
mov    %r9w,0x4(%rcx)
movzbl 0x3(%rdi),%eax
movzwl (%r8,%rax,2),%r10d
mov    %r10w,0x6(%rcx)
lea    -0x4(%rsi),%eax
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %r11,%rsi
jmpq   4652e <horizontalDifference8+0x1ee>
mov    %rdx,%r9
movzbl (%rdi),%eax
movzwl (%r8,%rax,2),%eax
movzbl (%r11,%rdi,1),%r10d
movzwl (%r8,%r10,2),%r10d
sub    %r10w,%ax
and    $0x7ff,%ax
mov    %ax,(%rcx)
add    $0x1,%rdi
add    $0x2,%rcx
add    $0xffffffff,%r9d
test   %r9d,%r9d
jg     46407 <horizontalDifference8+0xc7>
sub    %edx,%esi
test   %esi,%esi
jg     46404 <horizontalDifference8+0xc4>
leaveq 
retq   
lea    0x3(%rdi),%r11
movzbl (%r11),%r10d
movzwl (%r8,%r10,2),%r15d
neg    %dx
add    %r15w,%dx
and    $0x7ff,%dx
lea    0x6(%rcx),%r10
mov    %dx,(%r10)
movzbl 0x4(%rdi),%edx
movzwl (%r8,%rdx,2),%edx
neg    %si
add    %dx,%si
and    $0x7ff,%si
mov    %si,0x8(%rcx)
movzbl 0x5(%rdi),%esi
movzwl (%r8,%rsi,2),%edi
mov    %rdi,%rsi
sub    %r9w,%si
and    $0x7ff,%si
mov    %si,0xa(%rcx)
add    $0xfffffffd,%eax
mov    %r10,%rcx
mov    %rdx,%rsi
mov    %r15,%rdx
mov    %rdi,%r9
mov    %r11,%rdi
test   %eax,%eax
jg     4643d <horizontalDifference8+0xfd>
mov    -0x10(%rbp),%r15
leaveq 
retq   
lea    0x4(%rdi),%r11
movzbl (%r11),%r14d
movzwl (%r8,%r14,2),%r15d
neg    %dx
add    %r15w,%dx
and    $0x7ff,%dx
lea    0x8(%rcx),%r14
mov    %dx,(%r14)
movzbl 0x5(%rdi),%edx
movzwl (%r8,%rdx,2),%edx
neg    %si
add    %dx,%si
and    $0x7ff,%si
mov    %si,0xa(%rcx)
movzbl 0x6(%rdi),%esi
movzwl (%r8,%rsi,2),%esi
neg    %r9w
add    %si,%r9w
and    $0x7ff,%r9w
mov    %r9w,0xc(%rcx)
movzbl 0x7(%rdi),%edi
movzwl (%r8,%rdi,2),%r9d
mov    %r9,%rdi
sub    %r10w,%di
and    $0x7ff,%di
mov    %di,0xe(%rcx)
add    $0xfffffffc,%eax
mov    %r14,%rcx
mov    %r11,%rdi
mov    %r9,%r10
mov    %rsi,%r9
mov    %rdx,%rsi
mov    %r15,%rdx
test   %eax,%eax
jg     464ab <horizontalDifference8+0x16b>
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   

0000000000046540 <PixarLogPostEncode>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    0x350(%rdi),%r12
movl   $0x0,0x88(%r12)
lea    0x80(%r12),%r13
mov    %rdi,%rbx
mov    $0x4,%r14d
mov    %r13,%rdi
mov    %r14,%rsi
callq  84e0 <deflate@plt>
test   %eax,%eax
je     46594 <PixarLogPostEncode+0x54>
cmp    $0x1,%eax
jne    465fd <PixarLogPostEncode+0xbd>
mov    0x370(%rbx),%rcx
mov    0xa0(%r12),%edx
cmp    %rdx,%rcx
je     465dd <PixarLogPostEncode+0x9d>
sub    %rdx,%rcx
mov    %rcx,0x390(%rbx)
mov    %rax,%r15
mov    %rbx,%rdi
callq  86e0 <TIFFFlushData1@plt>
mov    0x368(%rbx),%rax
mov    %rax,0x98(%r12)
mov    0x370(%rbx),%eax
mov    %eax,0xa0(%r12)
mov    %r15,%rax
cmp    $0x1,%eax
jne    46580 <PixarLogPostEncode+0x40>
mov    $0x1,%eax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
mov    0x3b8(%rbx),%rdi
mov    0xb0(%r12),%rcx
test   %rcx,%rcx
jne    46618 <PixarLogPostEncode+0xd8>
lea    0x2cbd8(%rip),%rcx        # 731f0 <module.16+0x8e>
lea    0x2ce16(%rip),%rsi        # 73435 <module.43>
lea    0x2cc42(%rip),%rdx        # 73268 <module.22+0x71>
xor    %ebx,%ebx
mov    %rbx,%rax
callq  8a00 <TIFFErrorExt@plt>
mov    %rbx,%rax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
nopl   0x0(%rax)

0000000000046650 <PixarLogClose>:
push   %rbp
mov    %rsp,%rbp
mov    0x350(%rdi),%rax
test   %rax,%rax
jne    4667f <PixarLogClose+0x2f>
lea    0x2cde1(%rip),%rdi        # 73448 <module.43+0x13>
lea    0x2ca86(%rip),%rsi        # 730f4 <module.10+0x30>
mov    $0x4ed,%edx
lea    0x2cdd6(%rip),%rcx        # 73450 <module.43+0x1b>
callq  8490 <__assert_fail@plt>
movslq 0x104(%rax),%rax
and    $0x1,%eax
test   %eax,%eax
jg     4668f <PixarLogClose+0x3f>
leaveq 
retq   
movw   $0x8,0x74(%rdi)
movw   $0x1,0x76(%rdi)
leaveq 
retq   
nopl   (%rax)

00000000000466a0 <PixarLogCleanup>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    0x350(%rdi),%rax
test   %rax,%rax
jne    466d3 <PixarLogCleanup+0x33>
lea    0x2cd8d(%rip),%rdi        # 73448 <module.43+0x13>
lea    0x2ca32(%rip),%rsi        # 730f4 <module.10+0x30>
mov    $0x50a,%edx
lea    0x2cd90(%rip),%rcx        # 7345e <module.43+0x29>
callq  8490 <__assert_fail@plt>
mov    %rdi,%rcx
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rdi,%r14
mov    %rcx,%rdi
mov    %rax,%r15
callq  8180 <TIFFPredictorCleanup@plt>
mov    0x110(%r15),%rax
mov    %rax,0x410(%r14)
mov    0x118(%r15),%rax
mov    %rax,0x408(%r14)
mov    0x138(%r15),%rdi
test   %rdi,%rdi
je     46719 <PixarLogCleanup+0x79>
callq  8bb0 <_TIFFfree@plt>
mov    0x140(%r15),%rdi
test   %rdi,%rdi
je     4672a <PixarLogCleanup+0x8a>
callq  8bb0 <_TIFFfree@plt>
mov    0x148(%r15),%rdi
test   %rdi,%rdi
je     4673b <PixarLogCleanup+0x9b>
callq  8bb0 <_TIFFfree@plt>
mov    0x120(%r15),%rdi
test   %rdi,%rdi
je     4674c <PixarLogCleanup+0xac>
callq  8bb0 <_TIFFfree@plt>
mov    0x128(%r15),%rdi
test   %rdi,%rdi
je     4675d <PixarLogCleanup+0xbd>
callq  8bb0 <_TIFFfree@plt>
mov    0x130(%r15),%rdi
test   %rdi,%rdi
je     4676e <PixarLogCleanup+0xce>
callq  8bb0 <_TIFFfree@plt>
movslq 0x104(%r15),%rax
and    $0x1,%eax
test   %eax,%eax
jg     467b2 <PixarLogCleanup+0x112>
mov    0xf8(%r15),%rdi
test   %rdi,%rdi
je     4678d <PixarLogCleanup+0xed>
callq  8bb0 <_TIFFfree@plt>
mov    %r15,%rdi
callq  8bb0 <_TIFFfree@plt>
mov    %r14,%rdi
movq   $0x0,0x350(%rdi)
callq  8740 <_TIFFSetDefaultCompressionState@plt>
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
movslq 0xc(%r14),%rax
test   %eax,%eax
je     467c8 <PixarLogCleanup+0x128>
lea    0x80(%r15),%rdi
callq  8960 <deflateEnd@plt>
jmp    4677c <PixarLogCleanup+0xdc>
lea    0x80(%r15),%rdi
callq  8780 <inflateEnd@plt>
jmp    4677c <PixarLogCleanup+0xdc>
nopw   %cs:0x0(%rax,%rax,1)

00000000000467e0 <PixarLogVSetField>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x10(%rbp)
mov    0x350(%rdi),%rcx
mov    $0x1,%eax
cmp    $0x1000d,%esi
jne    46819 <PixarLogVSetField+0x39>
movslq (%rdx),%rsi
cmp    $0x2f,%esi
jle    4683b <PixarLogVSetField+0x5b>
mov    0x8(%rdx),%rsi
lea    0x8(%rsi),%rax
mov    %rax,0x8(%rdx)
movslq (%rsi),%rax
jmp    46848 <PixarLogVSetField+0x68>
cmp    $0x10016,%esi
jne    4686c <PixarLogVSetField+0x8c>
movslq (%rdx),%r8
cmp    $0x2f,%r8d
jle    46874 <PixarLogVSetField+0x94>
mov    0x8(%rdx),%r8
lea    0x8(%r8),%rsi
mov    %rsi,0x8(%rdx)
movslq (%r8),%rsi
jmp    46883 <PixarLogVSetField+0xa3>
mov    0x10(%rdx),%rax
movslq (%rax,%rsi,1),%rax
add    $0x8,%esi
mov    %esi,(%rdx)
mov    %eax,0x108(%rcx)
cmp    $0x5,%eax
jbe    46893 <PixarLogVSetField+0xb3>
mov    %rdi,%r15
mov    0x10(%r15),%eax
and    $0x400,%eax
test   %eax,%eax
jne    468b2 <PixarLogVSetField+0xd2>
mov    $0xffffffffffffffff,%rax
jmp    468ba <PixarLogVSetField+0xda>
callq  *0x118(%rcx)
leaveq 
retq   
mov    0x10(%rdx),%rsi
movslq (%rsi,%r8,1),%rsi
add    $0x8,%r8d
mov    %r8d,(%rdx)
mov    %esi,0x10c(%rcx)
movslq 0xc(%rdi),%rdx
test   %edx,%edx
jne    468db <PixarLogVSetField+0xfb>
leaveq 
retq   
mov    $0x102,%esi
mov    $0x10,%edx
lea    0x2c808(%rip),%rcx        # 730ac <module.8+0x13b>
movslq (%rcx,%rax,4),%rax
add    %rcx,%rax
jmpq   *%rax
mov    %rdi,%r15
jmp    46856 <PixarLogVSetField+0x76>
mov    %r15,%rdi
callq  8910 <TIFFTileSize@plt>
mov    %rax,0x2b0(%r15)
mov    %r15,%rdi
callq  8410 <TIFFScanlineSize@plt>
mov    %rax,0x358(%r15)
mov    $0x1,%eax
mov    -0x10(%rbp),%r15
leaveq 
retq   
movslq 0x104(%rcx),%rdx
and    $0x1,%edx
test   %edx,%edx
jg     469a8 <PixarLogVSetField+0x1c8>
leaveq 
retq   
xor    %eax,%eax
mov    $0x8,%edx
mov    %rdi,%r15
callq  8290 <TIFFSetField@plt>
mov    %r15,%rdi
mov    $0x1,%edx
xor    %eax,%eax
mov    $0x153,%esi
callq  8290 <TIFFSetField@plt>
jmpq   46856 <PixarLogVSetField+0x76>
xor    %eax,%eax
mov    %rdi,%r15
callq  8290 <TIFFSetField@plt>
mov    %r15,%rdi
mov    $0x1,%edx
xor    %eax,%eax
mov    $0x153,%esi
callq  8290 <TIFFSetField@plt>
jmpq   46856 <PixarLogVSetField+0x76>
xor    %eax,%eax
mov    %rdi,%r15
callq  8290 <TIFFSetField@plt>
mov    $0x2,%edx
mov    %r15,%rdi
xor    %eax,%eax
mov    $0x153,%esi
callq  8290 <TIFFSetField@plt>
jmpq   46856 <PixarLogVSetField+0x76>
xor    %eax,%eax
mov    %rdi,%r15
callq  8290 <TIFFSetField@plt>
mov    %r15,%rdi
mov    $0x1,%edx
xor    %eax,%eax
mov    $0x153,%esi
callq  8290 <TIFFSetField@plt>
jmpq   46856 <PixarLogVSetField+0x76>
xor    %eax,%eax
mov    $0x20,%edx
mov    %rdi,%r15
callq  8290 <TIFFSetField@plt>
mov    $0x3,%edx
mov    %r15,%rdi
xor    %eax,%eax
mov    $0x153,%esi
callq  8290 <TIFFSetField@plt>
jmpq   46856 <PixarLogVSetField+0x76>
lea    0x80(%rcx),%rax
xor    %edx,%edx
mov    %rcx,-0x8(%rbp)
mov    %rdi,%r15
mov    %rax,%rdi
callq  8620 <deflateParams@plt>
test   %eax,%eax
jne    469cf <PixarLogVSetField+0x1ef>
mov    $0x1,%eax
mov    -0x10(%rbp),%r15
leaveq 
retq   
mov    0x3b8(%r15),%rdi
mov    -0x8(%rbp),%rax
mov    0xb0(%rax),%rcx
test   %rcx,%rcx
jne    469ed <PixarLogVSetField+0x20d>
lea    0x2c803(%rip),%rcx        # 731f0 <module.16+0x8e>
xor    %eax,%eax
lea    0x2ca78(%rip),%rsi        # 7346e <module.47>
lea    0x2c86b(%rip),%rdx        # 73268 <module.22+0x71>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x10(%rbp),%r15
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

0000000000046a10 <PixarLogVGetField>:
push   %rbp
mov    %rsp,%rbp
mov    0x350(%rdi),%r8
mov    $0x1,%eax
cmp    $0x1000d,%esi
jne    46a41 <PixarLogVGetField+0x31>
movslq (%rdx),%rsi
cmp    $0x2f,%esi
jle    46a62 <PixarLogVGetField+0x52>
mov    0x8(%rdx),%rcx
lea    0x8(%rcx),%rsi
mov    %rsi,0x8(%rdx)
mov    (%rcx),%rcx
jmp    46a6f <PixarLogVGetField+0x5f>
cmp    $0x10016,%esi
jne    46a7a <PixarLogVGetField+0x6a>
movslq (%rdx),%rsi
cmp    $0x2f,%esi
jle    46a83 <PixarLogVGetField+0x73>
mov    0x8(%rdx),%rsi
lea    0x8(%rsi),%rcx
mov    %rcx,0x8(%rdx)
mov    (%rsi),%rcx
jmp    46a90 <PixarLogVGetField+0x80>
mov    0x10(%rdx),%rcx
mov    (%rcx,%rsi,1),%rcx
add    $0x8,%esi
mov    %esi,(%rdx)
movslq 0x108(%r8),%rdx
mov    %edx,(%rcx)
leaveq 
retq   
callq  *0x110(%r8)
leaveq 
retq   
mov    0x10(%rdx),%rcx
mov    (%rcx,%rsi,1),%rcx
add    $0x8,%esi
mov    %esi,(%rdx)
movslq 0x10c(%r8),%rdx
mov    %edx,(%rcx)
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

0000000000046aa0 <TIFFPredictorInit>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
lea    0x2cae7(%rip),%rcx        # 73596 <module.47+0x128>
mov    0x350(%rdi),%rax
test   %rax,%rax
jne    46ad3 <TIFFPredictorInit+0x33>
lea    0x2cabe(%rip),%rdi        # 73580 <module.47+0x112>
lea    0x2cabf(%rip),%rsi        # 73588 <module.47+0x11a>
mov    $0x336,%edx
callq  8490 <__assert_fail@plt>
lea    0x3310e(%rip),%rsi        # 79be8 <predictFields>
mov    $0x1,%edx
mov    %rdi,%rcx
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rax,%r14
mov    %rdi,%r15
mov    %rcx,%rdi
callq  8520 <_TIFFMergeFields@plt>
test   %eax,%eax
jne    46b29 <TIFFPredictorInit+0x89>
mov    0x3b8(%r15),%rdi
lea    0x2ca9e(%rip),%rdx        # 735a8 <module.47+0x13a>
xor    %r14d,%r14d
mov    %r14,%rax
lea    0x2ca7f(%rip),%rsi        # 73596 <module.47+0x128>
callq  8a00 <TIFFErrorExt@plt>
mov    %r14,%rax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
mov    0x410(%r15),%rax
mov    %rax,0x58(%r14)
lea    0x1805(%rip),%rax        # 48340 <PredictorVGetField>
mov    %rax,0x410(%r15)
mov    0x408(%r15),%rax
mov    %rax,0x60(%r14)
lea    0x173c(%rip),%rax        # 48290 <PredictorVSetField>
mov    %rax,0x408(%r15)
mov    0x418(%r15),%rax
mov    %rax,0x68(%r14)
lea    0x1863(%rip),%rax        # 483d0 <PredictorPrintDir>
mov    %rax,0x418(%r15)
mov    0x2c8(%r15),%rax
mov    %rax,0x70(%r14)
lea    0x13ea(%rip),%rax        # 47f70 <PredictorSetupDecode>
mov    %rax,0x2c8(%r15)
mov    0x2d8(%r15),%rax
mov    %rax,0x78(%r14)
lea    0x1571(%rip),%rax        # 48110 <PredictorSetupEncode>
mov    %rax,0x2d8(%r15)
movl   $0x1,(%r14)
movq   $0x0,0x30(%r14)
movq   $0x0,0x50(%r14)
mov    $0x1,%eax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
nopl   0x0(%rax)

0000000000046bd0 <TIFFPredictorCleanup>:
push   %rbp
mov    %rsp,%rbp
mov    0x350(%rdi),%rcx
test   %rcx,%rcx
jne    46bff <TIFFPredictorCleanup+0x2f>
lea    0x2c999(%rip),%rdi        # 73580 <module.47+0x112>
lea    0x2c99a(%rip),%rsi        # 73588 <module.47+0x11a>
mov    $0x35f,%edx
lea    0x2c9db(%rip),%rcx        # 735d5 <module.47+0x167>
callq  8490 <__assert_fail@plt>
mov    0x58(%rcx),%rax
mov    %rax,0x410(%rdi)
mov    0x60(%rcx),%rax
mov    %rax,0x408(%rdi)
mov    0x68(%rcx),%rax
mov    %rax,0x418(%rdi)
mov    0x70(%rcx),%rax
mov    %rax,0x2c8(%rdi)
mov    0x78(%rcx),%rax
mov    %rax,0x2d8(%rdi)
mov    $0x1,%eax
leaveq 
retq   
nopl   (%rax)

0000000000046c40 <horAcc8>:
push   %rbp
mov    %rsp,%rbp
mov    0x350(%rdi),%rax
mov    0x8(%rax),%r9
mov    %rdx,%rax
cqto   
mov    %rax,%r8
idiv   %r9
test   %rdx,%rdx
jne    46c6b <horAcc8+0x2b>
mov    $0x1,%eax
cmp    %r8,%r9
jl     46c92 <horAcc8+0x52>
leaveq 
retq   
mov    0x3b8(%rdi),%rdi
lea    0x2c971(%rip),%rsi        # 735ea <module.47+0x17c>
lea    0x2c972(%rip),%rdx        # 735f2 <module.47+0x184>
lea    0x2c96e(%rip),%rcx        # 735f5 <module.47+0x187>
xor    %eax,%eax
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
cmp    $0x3,%r9
je     46cb0 <horAcc8+0x70>
cmp    $0x4,%r9
je     46cca <horAcc8+0x8a>
sub    %r9,%r8
lea    -0x4(%r9),%rdi
cmp    $0x4,%r9
jbe    46ce8 <horAcc8+0xa8>
mov    %rdi,%rcx
jmp    46d15 <horAcc8+0xd5>
movzbl (%rsi),%r10d
movzbl 0x1(%rsi),%edi
movzbl 0x2(%rsi),%r9d
lea    -0x3(%r8),%rcx
lea    0x3(%rsi),%rdx
jmpq   46d96 <horAcc8+0x156>
movzbl (%rsi),%edx
movzbl 0x1(%rsi),%edi
movzbl 0x2(%rsi),%r10d
movzbl 0x3(%rsi),%r9d
lea    -0x4(%r8),%rcx
add    $0x4,%rsi
jmpq   46dd2 <horAcc8+0x192>
lea    0x2c7f1(%rip),%rdx        # 734e0 <module.47+0x72>
movslq (%rdx,%r9,4),%rcx
add    %rdx,%rcx
jmpq   *%rcx
mov    %rdi,%rcx
jmp    46d15 <horAcc8+0xd5>
movzbl (%r9,%rsi,1),%edx
movzbl (%rsi),%r10d
add    %r10d,%edx
mov    %dl,(%r9,%rsi,1)
add    $0x1,%rsi
add    $0xffffffffffffffff,%rcx
test   %rcx,%rcx
jg     46cfd <horAcc8+0xbd>
movzbl (%r9,%rsi,1),%edx
movzbl (%rsi),%ecx
add    %edx,%ecx
mov    %cl,(%r9,%rsi,1)
add    $0x1,%rsi
movzbl (%r9,%rsi,1),%ecx
movzbl (%rsi),%edx
add    %edx,%ecx
mov    %cl,(%r9,%rsi,1)
add    $0x1,%rsi
movzbl (%r9,%rsi,1),%edx
movzbl (%rsi),%ecx
add    %edx,%ecx
mov    %cl,(%r9,%rsi,1)
add    $0x1,%rsi
movzbl (%r9,%rsi,1),%ecx
movzbl (%rsi),%edx
add    %edx,%ecx
mov    %cl,(%r9,%rsi,1)
add    $0x1,%rsi
sub    %r9,%r8
test   %r8,%r8
jg     46ca5 <horAcc8+0x65>
leaveq 
retq   
movzbl (%rdx),%esi
add    %esi,%r10d
mov    %r10b,(%rdx)
movzbl 0x1(%rdx),%esi
add    %esi,%edi
mov    %dil,0x1(%rdx)
movzbl 0x2(%rdx),%esi
add    %esi,%r9d
mov    %r9b,0x2(%rdx)
add    $0xfffffffffffffffd,%rcx
add    $0x3,%rdx
test   %rcx,%rcx
jg     46d70 <horAcc8+0x130>
leaveq 
retq   
movzbl (%rsi),%r8d
add    %r8d,%edx
mov    %dl,(%rsi)
movzbl 0x1(%rsi),%r8d
add    %r8d,%edi
mov    %dil,0x1(%rsi)
movzbl 0x2(%rsi),%r8d
add    %r8d,%r10d
mov    %r10b,0x2(%rsi)
movzbl 0x3(%rsi),%r8d
add    %r8d,%r9d
mov    %r9b,0x3(%rsi)
add    $0xfffffffffffffffc,%rcx
add    $0x4,%rsi
test   %rcx,%rcx
jg     46d9d <horAcc8+0x15d>
leaveq 
retq   
nopl   0x0(%rax)

0000000000046de0 <horAcc16>:
push   %rbp
mov    %rsp,%rbp
mov    0x350(%rdi),%rax
mov    0x8(%rax),%r8
mov    %rdx,%rax
lea    (%r8,%r8,1),%rcx
cqto   
mov    %rax,%r9
idiv   %rcx
test   %rdx,%rdx
jne    46e1d <horAcc16+0x3d>
mov    $0x1,%eax
mov    %r9,%rcx
shr    $0x3f,%rcx
lea    (%r9,%rcx,1),%rdx
sar    %rdx
cmp    %rdx,%r8
jl     46e44 <horAcc16+0x64>
leaveq 
retq   
mov    0x3b8(%rdi),%rdi
lea    0x2c7d9(%rip),%rsi        # 73604 <module.47+0x196>
lea    0x2c7c0(%rip),%rdx        # 735f2 <module.47+0x184>
lea    0x2c7d4(%rip),%rcx        # 7360d <module.47+0x19f>
xor    %eax,%eax
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
sub    %r8,%rdx
lea    -0x4(%r8),%r10
cmp    $0x4,%r8
jbe    46e56 <horAcc16+0x76>
mov    %r10,%rcx
jmp    46e84 <horAcc16+0xa4>
lea    0x2c697(%rip),%rdi        # 734f4 <module.47+0x86>
movslq (%rdi,%r8,4),%rcx
add    %rdi,%rcx
jmpq   *%rcx
mov    %r10,%rcx
jmp    46e84 <horAcc16+0xa4>
movzwl (%rsi,%r8,2),%edi
movzwl (%rsi),%r9d
add    %r9d,%edi
mov    %di,(%rsi,%r8,2)
add    $0x2,%rsi
add    $0xffffffffffffffff,%rcx
test   %rcx,%rcx
jg     46e6b <horAcc16+0x8b>
movzwl (%rsi,%r8,2),%ecx
movzwl (%rsi),%edi
add    %edi,%ecx
mov    %cx,(%rsi,%r8,2)
add    $0x2,%rsi
movzwl (%rsi,%r8,2),%ecx
movzwl (%rsi),%edi
add    %edi,%ecx
mov    %cx,(%rsi,%r8,2)
add    $0x2,%rsi
movzwl (%rsi,%r8,2),%ecx
movzwl (%rsi),%edi
add    %edi,%ecx
mov    %cx,(%rsi,%r8,2)
add    $0x2,%rsi
movzwl (%rsi,%r8,2),%ecx
movzwl (%rsi),%edi
add    %edi,%ecx
mov    %cx,(%rsi,%r8,2)
add    $0x2,%rsi
sub    %r8,%rdx
test   %rdx,%rdx
jg     46e4b <horAcc16+0x6b>
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

0000000000046ef0 <horAcc32>:
push   %rbp
mov    %rsp,%rbp
mov    0x350(%rdi),%rax
mov    0x8(%rax),%r8
mov    %rdx,%rax
mov    %r8,%rcx
shl    $0x2,%rcx
cqto   
mov    %rax,%r9
idiv   %rcx
test   %rdx,%rdx
jne    46f34 <horAcc32+0x44>
mov    $0x1,%eax
mov    %r9,%rcx
sar    %rcx
shr    $0x3e,%rcx
lea    (%r9,%rcx,1),%rdi
sar    $0x2,%rdi
cmp    %rdi,%r8
jl     46f5b <horAcc32+0x6b>
leaveq 
retq   
mov    0x3b8(%rdi),%rdi
lea    0x2c6dd(%rip),%rsi        # 7361f <module.47+0x1b1>
lea    0x2c6a9(%rip),%rdx        # 735f2 <module.47+0x184>
lea    0x2c6d8(%rip),%rcx        # 73628 <module.47+0x1ba>
xor    %eax,%eax
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
sub    %r8,%rdi
lea    -0x4(%r8),%r9
cmp    $0x4,%r8
jbe    46f6d <horAcc32+0x7d>
mov    %r9,%rdx
jmp    46f94 <horAcc32+0xa4>
lea    0x2c594(%rip),%rdx        # 73508 <module.47+0x9a>
movslq (%rdx,%r8,4),%rcx
add    %rdx,%rcx
jmpq   *%rcx
mov    %r9,%rdx
jmp    46f94 <horAcc32+0xa4>
mov    (%rsi,%r8,4),%ecx
add    (%rsi),%ecx
mov    %ecx,(%rsi,%r8,4)
add    $0x4,%rsi
add    $0xffffffffffffffff,%rdx
test   %rdx,%rdx
jg     46f82 <horAcc32+0x92>
mov    (%rsi,%r8,4),%ecx
add    (%rsi),%ecx
mov    %ecx,(%rsi,%r8,4)
add    $0x4,%rsi
mov    (%rsi,%r8,4),%ecx
add    (%rsi),%ecx
mov    %ecx,(%rsi,%r8,4)
add    $0x4,%rsi
mov    (%rsi,%r8,4),%ecx
add    (%rsi),%ecx
mov    %ecx,(%rsi,%r8,4)
add    $0x4,%rsi
mov    (%rsi,%r8,4),%ecx
add    (%rsi),%ecx
mov    %ecx,(%rsi,%r8,4)
add    $0x4,%rsi
sub    %r8,%rdi
test   %rdi,%rdi
jg     46f62 <horAcc32+0x72>
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

0000000000046fe0 <swabHorAcc16>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %r13,-0x8(%rbp)
mov    %r14,-0x10(%rbp)
mov    %r15,-0x18(%rbp)
mov    %rdx,%rax
shr    $0x3f,%rax
add    %rdx,%rax
sar    %rax
mov    %rdi,%r13
mov    %rsi,%r14
mov    %rax,%rsi
mov    %rdx,%r15
mov    %r14,%rdi
callq  83d0 <TIFFSwabArrayOfShort@plt>
mov    %r15,%rdx
mov    %r14,%rsi
mov    %r13,%rdi
callq  46de0 <horAcc16>
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   0x0(%rax)

0000000000047040 <swabHorAcc32>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %r13,-0x8(%rbp)
mov    %r14,-0x10(%rbp)
mov    %r15,-0x18(%rbp)
mov    %rdx,%rax
sar    %rax
shr    $0x3e,%rax
add    %rdx,%rax
sar    $0x2,%rax
mov    %rdi,%r13
mov    %rsi,%r14
mov    %rax,%rsi
mov    %rdx,%r15
mov    %r14,%rdi
callq  8b70 <TIFFSwabArrayOfLong@plt>
mov    %r15,%rdx
mov    %r14,%rsi
mov    %r13,%rdi
callq  46ef0 <horAcc32>
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)

00000000000470a0 <horDiff8>:
push   %rbp
mov    %rsp,%rbp
mov    0x350(%rdi),%rax
mov    0x8(%rax),%r9
mov    %rdx,%rax
cqto   
mov    %rax,%r8
idiv   %r9
test   %rdx,%rdx
jne    470cb <horDiff8+0x2b>
mov    $0x1,%eax
cmp    %r8,%r9
jl     470f2 <horDiff8+0x52>
leaveq 
retq   
mov    0x3b8(%rdi),%rdi
lea    0x2c561(%rip),%rsi        # 7363a <module.47+0x1cc>
lea    0x2c512(%rip),%rdx        # 735f2 <module.47+0x184>
lea    0x2c50e(%rip),%rcx        # 735f5 <module.47+0x187>
xor    %eax,%eax
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
cmp    $0x3,%r9
je     47115 <horDiff8+0x75>
cmp    $0x4,%r9
je     4712a <horDiff8+0x8a>
sub    %r9,%r8
lea    -0x1(%r8,%rsi,1),%rcx
lea    -0x4(%r9),%r10
cmp    $0x4,%r9
jbe    47144 <horDiff8+0xa4>
mov    %r10,%rdi
jmp    47170 <horDiff8+0xd0>
movzbl (%rsi),%edx
movzbl 0x1(%rsi),%edi
movzbl 0x2(%rsi),%r9d
lea    -0x3(%r8),%rcx
jmpq   471db <horDiff8+0x13b>
movzbl (%rsi),%edi
movzbl 0x1(%rsi),%r9d
movzbl 0x2(%rsi),%edx
movzbl 0x3(%rsi),%r10d
lea    -0x4(%r8),%rcx
jmpq   47220 <horDiff8+0x180>
lea    0x2c3d1(%rip),%rsi        # 7351c <module.47+0xae>
movslq (%rsi,%r9,4),%rdx
add    %rsi,%rdx
jmpq   *%rdx
mov    %r10,%rdi
jmp    47170 <horDiff8+0xd0>
movzbl (%r9,%rcx,1),%esi
movzbl (%rcx),%edx
sub    %dl,%sil
mov    %sil,(%r9,%rcx,1)
add    $0xffffffffffffffff,%rcx
add    $0xffffffffffffffff,%rdi
test   %rdi,%rdi
jg     47159 <horDiff8+0xb9>
movzbl (%r9,%rcx,1),%edx
movzbl (%rcx),%esi
sub    %sil,%dl
mov    %dl,(%r9,%rcx,1)
add    $0xffffffffffffffff,%rcx
movzbl (%r9,%rcx,1),%edx
movzbl (%rcx),%esi
sub    %sil,%dl
mov    %dl,(%r9,%rcx,1)
add    $0xffffffffffffffff,%rcx
movzbl (%r9,%rcx,1),%edx
movzbl (%rcx),%esi
sub    %sil,%dl
mov    %dl,(%r9,%rcx,1)
add    $0xffffffffffffffff,%rcx
movzbl (%r9,%rcx,1),%edx
movzbl (%rcx),%esi
sub    %sil,%dl
mov    %dl,(%r9,%rcx,1)
add    $0xffffffffffffffff,%rcx
sub    %r9,%r8
test   %r8,%r8
jg     4710a <horDiff8+0x6a>
leaveq 
retq   
mov    %r10,%rdx
mov    %r11,%rsi
mov    %rdi,%r9
mov    %r8,%rdi
lea    0x3(%rsi),%r11
movzbl (%r11),%r10d
neg    %dl
add    %r10b,%dl
mov    %dl,(%r11)
movzbl 0x4(%rsi),%r8d
mov    %r8,%rdx
sub    %dil,%dl
mov    %dl,0x4(%rsi)
movzbl 0x5(%rsi),%edi
mov    %rdi,%rdx
sub    %r9b,%dl
mov    %dl,0x5(%rsi)
add    $0xfffffffffffffffd,%rcx
test   %rcx,%rcx
jg     471cf <horDiff8+0x12f>
leaveq 
retq   
mov    %r11,%rsi
mov    %rdx,%r10
mov    %r9,%rdx
mov    %rdi,%r9
mov    %r8,%rdi
lea    0x4(%rsi),%r11
movzbl (%r11),%r8d
neg    %dil
add    %r8b,%dil
mov    %dil,(%r11)
movzbl 0x5(%rsi),%edi
neg    %r9b
add    %dil,%r9b
mov    %r9b,0x5(%rsi)
movzbl 0x6(%rsi),%r9d
neg    %dl
add    %r9b,%dl
mov    %dl,0x6(%rsi)
movzbl 0x7(%rsi),%edx
neg    %r10b
add    %dl,%r10b
mov    %r10b,0x7(%rsi)
add    $0xfffffffffffffffc,%rcx
test   %rcx,%rcx
jg     47211 <horDiff8+0x171>
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)

0000000000047270 <horDiff16>:
push   %rbp
mov    %rsp,%rbp
mov    0x350(%rdi),%rax
mov    0x8(%rax),%r8
mov    %rdx,%rax
lea    (%r8,%r8,1),%rcx
cqto   
mov    %rax,%r9
idiv   %rcx
test   %rdx,%rdx
jne    472ad <horDiff16+0x3d>
mov    $0x1,%eax
mov    %r9,%rcx
shr    $0x3f,%rcx
lea    (%r9,%rcx,1),%rdi
sar    %rdi
cmp    %rdi,%r8
jl     472d4 <horDiff16+0x64>
leaveq 
retq   
mov    0x3b8(%rdi),%rdi
lea    0x2c37f(%rip),%rsi        # 7363a <module.47+0x1cc>
lea    0x2c330(%rip),%rdx        # 735f2 <module.47+0x184>
lea    0x2c37a(%rip),%rcx        # 73643 <module.47+0x1d5>
xor    %eax,%eax
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
sub    %r8,%rdi
lea    -0x2(%rsi,%rdi,2),%rcx
lea    -0x4(%r8),%r9
cmp    $0x4,%r8
jbe    472eb <horDiff16+0x7b>
mov    %r9,%rsi
jmp    4731a <horDiff16+0xaa>
lea    0x2c23e(%rip),%rsi        # 73530 <module.47+0xc2>
movslq (%rsi,%r8,4),%rdx
add    %rsi,%rdx
jmpq   *%rdx
mov    %r9,%rsi
jmp    4731a <horDiff16+0xaa>
movzwl (%rcx,%r8,2),%edx
movzwl (%rcx),%r10d
sub    %r10w,%dx
mov    %dx,(%rcx,%r8,2)
add    $0xfffffffffffffffe,%rcx
add    $0xffffffffffffffff,%rsi
test   %rsi,%rsi
jg     47300 <horDiff16+0x90>
movzwl (%rcx,%r8,2),%edx
movzwl (%rcx),%esi
sub    %si,%dx
mov    %dx,(%rcx,%r8,2)
add    $0xfffffffffffffffe,%rcx
movzwl (%rcx,%r8,2),%edx
movzwl (%rcx),%esi
sub    %si,%dx
mov    %dx,(%rcx,%r8,2)
add    $0xfffffffffffffffe,%rcx
movzwl (%rcx,%r8,2),%edx
movzwl (%rcx),%esi
sub    %si,%dx
mov    %dx,(%rcx,%r8,2)
add    $0xfffffffffffffffe,%rcx
movzwl (%rcx,%r8,2),%edx
movzwl (%rcx),%esi
sub    %si,%dx
mov    %dx,(%rcx,%r8,2)
add    $0xfffffffffffffffe,%rcx
sub    %r8,%rdi
test   %rdi,%rdi
jg     472e0 <horDiff16+0x70>
leaveq 
retq   
nopl   (%rax)

0000000000047380 <horDiff32>:
push   %rbp
mov    %rsp,%rbp
mov    0x350(%rdi),%rax
mov    0x8(%rax),%r8
mov    %rdx,%rax
mov    %r8,%rcx
shl    $0x2,%rcx
cqto   
mov    %rax,%r9
idiv   %rcx
test   %rdx,%rdx
jne    473c4 <horDiff32+0x44>
mov    $0x1,%eax
mov    %r9,%rcx
sar    %rcx
shr    $0x3e,%rcx
lea    (%r9,%rcx,1),%rdi
sar    $0x2,%rdi
cmp    %rdi,%r8
jl     473eb <horDiff32+0x6b>
leaveq 
retq   
mov    0x3b8(%rdi),%rdi
lea    0x2c284(%rip),%rsi        # 73656 <module.47+0x1e8>
lea    0x2c219(%rip),%rdx        # 735f2 <module.47+0x184>
lea    0x2c280(%rip),%rcx        # 73660 <module.47+0x1f2>
xor    %eax,%eax
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
sub    %r8,%rdi
lea    -0x4(%rsi,%rdi,4),%rcx
lea    -0x4(%r8),%r9
cmp    $0x4,%r8
jbe    47402 <horDiff32+0x82>
mov    %r9,%rsi
jmp    4742d <horDiff32+0xad>
lea    0x2c13b(%rip),%rdx        # 73544 <module.47+0xd6>
movslq (%rdx,%r8,4),%rsi
add    %rsi,%rdx
jmpq   *%rdx
mov    %r9,%rsi
jmp    4742d <horDiff32+0xad>
mov    (%rcx,%r8,4),%edx
mov    (%rcx),%r10d
sub    %r10d,%edx
mov    %edx,(%rcx,%r8,4)
add    $0xfffffffffffffffc,%rcx
add    $0xffffffffffffffff,%rsi
test   %rsi,%rsi
jg     47417 <horDiff32+0x97>
mov    (%rcx,%r8,4),%edx
mov    (%rcx),%esi
sub    %esi,%edx
mov    %edx,(%rcx,%r8,4)
add    $0xfffffffffffffffc,%rcx
mov    (%rcx,%r8,4),%edx
mov    (%rcx),%esi
sub    %esi,%edx
mov    %edx,(%rcx,%r8,4)
add    $0xfffffffffffffffc,%rcx
mov    (%rcx,%r8,4),%edx
mov    (%rcx),%esi
sub    %esi,%edx
mov    %edx,(%rcx,%r8,4)
add    $0xfffffffffffffffc,%rcx
mov    (%rcx,%r8,4),%edx
mov    (%rcx),%esi
sub    %esi,%edx
mov    %edx,(%rcx,%r8,4)
add    $0xfffffffffffffffc,%rcx
sub    %r8,%rdi
test   %rdi,%rdi
jg     473f7 <horDiff32+0x77>
leaveq 
retq   

0000000000047480 <swabHorDiff16>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x10(%rbp)
mov    %rsi,-0x8(%rbp)
mov    %rdx,%r15
callq  47270 <horDiff16>
test   %eax,%eax
jne    474a4 <swabHorDiff16+0x24>
xor    %eax,%eax
mov    -0x10(%rbp),%r15
leaveq 
retq   
mov    %r15,%rax
shr    $0x3f,%rax
lea    (%r15,%rax,1),%rsi
sar    %rsi
mov    -0x8(%rbp),%rdi
callq  83d0 <TIFFSwabArrayOfShort@plt>
mov    $0x1,%eax
mov    -0x10(%rbp),%r15
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)

00000000000474d0 <swabHorDiff32>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x10(%rbp)
mov    %rsi,-0x8(%rbp)
mov    %rdx,%r15
callq  47380 <horDiff32>
test   %eax,%eax
jne    474f4 <swabHorDiff32+0x24>
xor    %eax,%eax
mov    -0x10(%rbp),%r15
leaveq 
retq   
mov    %r15,%rax
sar    %rax
shr    $0x3e,%rax
lea    (%r15,%rax,1),%rsi
sar    $0x2,%rsi
mov    -0x8(%rbp),%rdi
callq  8b70 <TIFFSwabArrayOfLong@plt>
mov    $0x1,%eax
mov    -0x10(%rbp),%r15
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

0000000000047520 <fpAcc>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
movzwl 0x74(%rdi),%eax
shr    $0x3,%eax
mov    %rax,-0x18(%rbp)
mov    %eax,%r9d
mov    0x350(%rdi),%rax
mov    0x8(%rax),%r8
mov    %rdx,%rax
mov    %r9,%rcx
imul   %r8,%rcx
cqto   
mov    %rax,%r10
idiv   %rcx
test   %rdx,%rdx
jne    47579 <fpAcc+0x59>
mov    %r10,%rdi
mov    %r8,-0x28(%rbp)
mov    %r10,-0x20(%rbp)
mov    %rsi,-0x8(%rbp)
mov    %r9,-0x10(%rbp)
callq  8440 <_TIFFmalloc@plt>
test   %rax,%rax
jne    475a0 <fpAcc+0x80>
xor    %eax,%eax
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
lea    0x2c0ea(%rip),%rsi        # 73673 <module.47+0x205>
lea    0x2c062(%rip),%rdx        # 735f2 <module.47+0x184>
lea    0x2c0e2(%rip),%rcx        # 73679 <module.47+0x20b>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
mov    -0x28(%rbp),%r9
lea    -0x4(%r9),%rdi
mov    -0x8(%rbp),%rcx
mov    -0x20(%rbp),%rsi
jmp    47615 <fpAcc+0xf5>
lea    0x2bf9f(%rip),%r8        # 73558 <module.47+0xea>
movslq (%r8,%r9,4),%rdx
add    %r8,%rdx
jmpq   *%rdx
movzbl (%r9,%rcx,1),%edx
movzbl (%rcx),%r8d
add    %r8d,%edx
mov    %dl,(%r9,%rcx,1)
add    $0x1,%rcx
movzbl (%r9,%rcx,1),%edx
movzbl (%rcx),%r8d
add    %r8d,%edx
mov    %dl,(%r9,%rcx,1)
add    $0x1,%rcx
movzbl (%r9,%rcx,1),%edx
movzbl (%rcx),%r8d
add    %r8d,%edx
mov    %dl,(%r9,%rcx,1)
add    $0x1,%rcx
movzbl (%r9,%rcx,1),%edx
movzbl (%rcx),%r8d
add    %r8d,%edx
mov    %dl,(%r9,%rcx,1)
add    $0x1,%rcx
sub    %r9,%rsi
cmp    %rsi,%r9
jl     4766f <fpAcc+0x14f>
mov    %rax,%rdi
mov    -0x20(%rbp),%rax
cqto   
mov    %rax,%r9
mov    -0x10(%rbp),%rcx
idiv   %rcx
mov    %rdi,%rdx
mov    -0x8(%rbp),%r8
mov    %r8,%rsi
mov    %r12,-0x8(%rbp)
mov    %r13,-0x10(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %r8,%r12
mov    %rax,%r13
mov    %rdi,%r14
mov    %rdx,%rdi
mov    %r9,%rdx
mov    %rcx,%r15
callq  8790 <_TIFFmemcpy@plt>
xor    %r9d,%r9d
mov    -0x18(%rbp),%r8
mov    %r9,%rdx
jmp    476a9 <fpAcc+0x189>
mov    %rdi,%rdx
jmp    476e5 <fpAcc+0x1c5>
cmp    $0x4,%r9
jbe    475b2 <fpAcc+0x92>
mov    %rdi,%rdx
jmp    476e5 <fpAcc+0x1c5>
mov    %r8,%rsi
sub    %ecx,%esi
add    $0xffffffff,%esi
mov    %esi,%esi
imul   %r13,%rsi
add    %rdx,%rsi
movzbl (%r14,%rsi,1),%edi
mov    %ecx,%esi
add    %r12,%rsi
mov    %dil,(%rsi,%rax,1)
add    $0x1,%ecx
cmp    %r8d,%ecx
jb     4767e <fpAcc+0x15e>
add    $0x1,%rdx
cmp    %r13,%rdx
jl     476ef <fpAcc+0x1cf>
mov    %r14,%rdi
callq  8bb0 <_TIFFfree@plt>
mov    $0x1,%eax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
leaveq 
retq   
movzbl (%r9,%rcx,1),%r10d
movzbl (%rcx),%r8d
add    %r10d,%r8d
mov    %r8b,(%r9,%rcx,1)
add    $0x1,%rcx
add    $0xffffffffffffffff,%rdx
test   %rdx,%rdx
jg     476cd <fpAcc+0x1ad>
jmpq   475c2 <fpAcc+0xa2>
mov    %r15,%rax
imul   %rdx,%rax
mov    %r9,%rcx
jmp    476a0 <fpAcc+0x180>
nopl   0x0(%rax,%rax,1)

0000000000047700 <fpDiff>:
push   %rbp
mov    %rsp,%rbp
sub    $0x40,%rsp
movzwl 0x74(%rdi),%ecx
shr    $0x3,%ecx
mov    %ecx,%r9d
mov    0x350(%rdi),%rax
mov    0x8(%rax),%rax
mov    %rax,-0x20(%rbp)
mov    %r9,%r8
imul   %rax,%r8
mov    %rdx,%rax
cqto   
mov    %rax,%r10
idiv   %r8
test   %rdx,%rdx
jne    47759 <fpDiff+0x59>
mov    %r10,%rdi
mov    %r10,-0x30(%rbp)
mov    %r9,-0x28(%rbp)
mov    %rsi,-0x18(%rbp)
mov    %rcx,-0x38(%rbp)
callq  8440 <_TIFFmalloc@plt>
test   %rax,%rax
jne    47780 <fpDiff+0x80>
xor    %eax,%eax
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
lea    0x2bf24(%rip),%rsi        # 7368d <module.47+0x21f>
lea    0x2be82(%rip),%rdx        # 735f2 <module.47+0x184>
lea    0x2bf1d(%rip),%rcx        # 73694 <module.47+0x226>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
mov    %rax,%rdi
mov    -0x30(%rbp),%rax
cqto   
mov    %rbx,%r8
mov    %rax,%rbx
mov    -0x28(%rbp),%rcx
idiv   %rcx
mov    %rdi,%r9
mov    -0x18(%rbp),%r10
mov    %r10,%rsi
mov    %rbx,%rdx
mov    %r8,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x28(%rbp)
mov    %r15,-0x30(%rbp)
mov    %r10,%r12
mov    %rdi,%r13
mov    %r9,%rdi
mov    %rax,%r14
mov    %rcx,%r15
callq  8790 <_TIFFmemcpy@plt>
xor    %edi,%edi
mov    -0x38(%rbp),%r8
mov    %rdi,%rdx
jmp    47801 <fpDiff+0x101>
mov    %ecx,%eax
add    %r13,%rax
movzbl (%rax,%r9,1),%esi
mov    %r8,%rax
sub    %ecx,%eax
add    $0xffffffff,%eax
mov    %eax,%eax
imul   %r14,%rax
add    %rdx,%rax
mov    %sil,(%r12,%rax,1)
add    $0x1,%ecx
cmp    %r8d,%ecx
jb     477d6 <fpDiff+0xd6>
add    $0x1,%rdx
cmp    %r14,%rdx
jl     47823 <fpDiff+0x123>
mov    %r13,%rdi
callq  8bb0 <_TIFFfree@plt>
mov    -0x20(%rbp),%r8
lea    -0x4(%r8),%rdi
mov    %rbx,%rax
sub    %r8,%rax
lea    -0x1(%rax,%r12,1),%rcx
jmp    4788a <fpDiff+0x18a>
mov    %r15,%r9
imul   %rdx,%r9
mov    %rdi,%rcx
jmp    477f8 <fpDiff+0xf8>
lea    0x2bd36(%rip),%rdx        # 7356c <module.47+0xfe>
movslq (%rdx,%r8,4),%rax
add    %rdx,%rax
jmpq   *%rax
movzbl (%r8,%rcx,1),%eax
movzbl (%rcx),%edx
sub    %dl,%al
mov    %al,(%r8,%rcx,1)
add    $0xffffffffffffffff,%rcx
movzbl (%r8,%rcx,1),%eax
movzbl (%rcx),%edx
sub    %dl,%al
mov    %al,(%r8,%rcx,1)
add    $0xffffffffffffffff,%rcx
movzbl (%r8,%rcx,1),%eax
movzbl (%rcx),%edx
sub    %dl,%al
mov    %al,(%r8,%rcx,1)
add    $0xffffffffffffffff,%rcx
movzbl (%r8,%rcx,1),%eax
movzbl (%rcx),%edx
sub    %dl,%al
mov    %al,(%r8,%rcx,1)
add    $0xffffffffffffffff,%rcx
sub    %r8,%rbx
cmp    %rbx,%r8
jl     478af <fpDiff+0x1af>
mov    $0x1,%eax
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
mov    %rdi,%rsi
jmp    478d4 <fpDiff+0x1d4>
cmp    $0x4,%r8
jbe    4782f <fpDiff+0x12f>
mov    %rdi,%rsi
jmp    478d4 <fpDiff+0x1d4>
movzbl (%r8,%rcx,1),%edx
movzbl (%rcx),%eax
sub    %al,%dl
mov    %dl,(%r8,%rcx,1)
add    $0xffffffffffffffff,%rcx
add    $0xffffffffffffffff,%rsi
test   %rsi,%rsi
jg     478be <fpDiff+0x1be>
jmpq   4783f <fpDiff+0x13f>
xchg   %ax,%ax

00000000000478e0 <PredictorDecodeRow>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
lea    0x2bc99(%rip),%r9        # 73588 <module.47+0x11a>
lea    0x2bdbe(%rip),%r10        # 736b4 <module.47+0x246>
mov    0x350(%rdi),%r11
test   %r11,%r11
jne    47919 <PredictorDecodeRow+0x39>
mov    %r10,%rcx
mov    %r9,%rsi
lea    0x2bd9a(%rip),%rdi        # 736a9 <module.47+0x23b>
mov    $0x1cf,%edx
callq  8490 <__assert_fail@plt>
mov    0x38(%r11),%rax
test   %rax,%rax
jne    47939 <PredictorDecodeRow+0x59>
mov    %r10,%rcx
mov    %r9,%rsi
lea    0x2bd98(%rip),%rdi        # 736c7 <module.47+0x259>
mov    $0x1d0,%edx
callq  8490 <__assert_fail@plt>
mov    0x50(%r11),%r8
test   %r8,%r8
jne    47959 <PredictorDecodeRow+0x79>
mov    %r10,%rcx
mov    %r9,%rsi
lea    0x2bd8e(%rip),%rdi        # 736dd <module.47+0x26f>
mov    $0x1d1,%edx
callq  8490 <__assert_fail@plt>
mov    %rdi,%r9
mov    %rsi,%r8
mov    %rdx,%r10
mov    %r12,-0x8(%rbp)
mov    %r13,-0x10(%rbp)
mov    %r14,-0x18(%rbp)
mov    %r15,-0x20(%rbp)
mov    %r11,%r12
mov    %rdi,%r13
mov    %r9,%rdi
mov    %rsi,%r14
mov    %r8,%rsi
mov    %rdx,%r15
mov    %r10,%rdx
callq  *%rax
test   %eax,%eax
jne    479a1 <PredictorDecodeRow+0xc1>
xor    %eax,%eax
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
leaveq 
retq   
mov    %r15,%rdx
mov    %r14,%rsi
mov    %r13,%rdi
callq  *0x50(%r12)
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   0x0(%rax)

00000000000479d0 <PredictorDecodeTile>:
push   %rbp
mov    %rsp,%rbp
sub    $0x40,%rsp
lea    0x2bd16(%rip),%r10        # 736f5 <module.47+0x287>
lea    0x2bba2(%rip),%r8        # 73588 <module.47+0x11a>
mov    0x350(%rdi),%r9
test   %r9,%r9
jne    47a09 <PredictorDecodeTile+0x39>
mov    %r10,%rcx
mov    %r8,%rsi
lea    0x2bcaa(%rip),%rdi        # 736a9 <module.47+0x23b>
mov    $0x1e5,%edx
callq  8490 <__assert_fail@plt>
mov    0x48(%r9),%rax
test   %rax,%rax
jne    47a29 <PredictorDecodeTile+0x59>
mov    %r10,%rcx
mov    %r8,%rsi
lea    0x2bcea(%rip),%rdi        # 73709 <module.47+0x29b>
mov    $0x1e6,%edx
callq  8490 <__assert_fail@plt>
mov    %rdi,%r10
mov    %rsi,%r8
mov    %rdx,%r11
mov    %r15,-0x38(%rbp)
mov    %rdx,-0x30(%rbp)
mov    %rdi,-0x20(%rbp)
mov    %rsi,-0x28(%rbp)
mov    %r11,%rdx
mov    %r8,%rsi
mov    %r10,%rdi
mov    %r9,%r15
callq  *%rax
test   %eax,%eax
jne    47a5c <PredictorDecodeTile+0x8c>
mov    -0x38(%rbp),%r15
xor    %eax,%eax
leaveq 
retq   
mov    0x10(%r15),%rcx
test   %rcx,%rcx
jg     47a84 <PredictorDecodeTile+0xb4>
lea    0x2bcb4(%rip),%rdi        # 73720 <module.47+0x2b2>
mov    $0x1ea,%edx
lea    0x2bc7d(%rip),%rcx        # 736f5 <module.47+0x287>
lea    0x2bb09(%rip),%rsi        # 73588 <module.47+0x11a>
callq  8490 <__assert_fail@plt>
mov    -0x30(%rbp),%rax
cqto   
mov    %rax,%rsi
idiv   %rcx
test   %rdx,%rdx
jne    47abe <PredictorDecodeTile+0xee>
mov    0x50(%r15),%rax
test   %rax,%rax
je     47aed <PredictorDecodeTile+0x11d>
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x30(%rbp)
mov    %rsi,%rbx
mov    %rcx,%r12
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r13
jmp    47b23 <PredictorDecodeTile+0x153>
xor    %eax,%eax
mov    -0x20(%rbp),%rcx
mov    0x3b8(%rcx),%rdi
lea    0x2bb20(%rip),%rdx        # 735f2 <module.47+0x184>
lea    0x2bc53(%rip),%rcx        # 7372c <module.47+0x2be>
lea    0x2bc15(%rip),%rsi        # 736f5 <module.47+0x287>
callq  8a00 <TIFFErrorExt@plt>
mov    -0x38(%rbp),%r15
xor    %eax,%eax
leaveq 
retq   
lea    0x2bbe9(%rip),%rdi        # 736dd <module.47+0x26f>
mov    $0x1f1,%edx
lea    0x2bbf5(%rip),%rcx        # 736f5 <module.47+0x287>
lea    0x2ba81(%rip),%rsi        # 73588 <module.47+0x11a>
callq  8490 <__assert_fail@plt>
mov    %r13,%rdi
mov    %r14,%rsi
mov    %r12,%rdx
callq  *0x50(%r15)
test   %eax,%eax
je     47b43 <PredictorDecodeTile+0x173>
sub    %r12,%rbx
add    %r12,%r14
test   %rbx,%rbx
jg     47b0c <PredictorDecodeTile+0x13c>
mov    $0x1,%eax
mov    -0x30(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x38(%rbp),%r15
leaveq 
retq   
mov    -0x30(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x38(%rbp),%r15
xor    %eax,%eax
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

0000000000047b60 <PredictorEncodeRow>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
lea    0x2ba19(%rip),%r9        # 73588 <module.47+0x11a>
lea    0x2bbc8(%rip),%r10        # 7373e <module.47+0x2d0>
mov    0x350(%rdi),%r11
test   %r11,%r11
jne    47b99 <PredictorEncodeRow+0x39>
mov    %r10,%rcx
mov    %r9,%rsi
lea    0x2bb1a(%rip),%rdi        # 736a9 <module.47+0x23b>
mov    $0x2b6,%edx
callq  8490 <__assert_fail@plt>
mov    0x30(%r11),%rax
test   %rax,%rax
jne    47bb9 <PredictorEncodeRow+0x59>
mov    %r10,%rcx
mov    %r9,%rsi
lea    0x2bba2(%rip),%rdi        # 73751 <module.47+0x2e3>
mov    $0x2b7,%edx
callq  8490 <__assert_fail@plt>
mov    0x18(%r11),%r8
test   %r8,%r8
jne    47bd9 <PredictorEncodeRow+0x79>
mov    %r10,%rcx
mov    %r9,%rsi
lea    0x2bb9a(%rip),%rdi        # 73769 <module.47+0x2fb>
mov    $0x2b8,%edx
callq  8490 <__assert_fail@plt>
mov    %rdi,%r9
mov    %rsi,%r8
mov    %rdx,%r10
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rcx,-0x8(%rbp)
mov    %r11,%r12
mov    %rdi,%r13
mov    %r9,%rdi
mov    %rdx,%r14
mov    %r10,%rdx
mov    %rsi,%r15
mov    %r8,%rsi
callq  *%rax
test   %eax,%eax
jne    47c25 <PredictorEncodeRow+0xc5>
xor    %eax,%eax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
leaveq 
retq   
mov    %r14,%rdx
mov    %r15,%rsi
mov    %r13,%rdi
mov    -0x8(%rbp),%rcx
callq  *0x18(%r12)
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
leaveq 
retq   
nopl   0x0(%rax)

0000000000047c50 <PredictorEncodeTile>:
push   %rbp
mov    %rsp,%rbp
sub    $0x40,%rsp
lea    0x2bb34(%rip),%r8        # 73793 <module.40+0x14>
lea    0x2b922(%rip),%r10        # 73588 <module.47+0x11a>
mov    0x350(%rdi),%r9
test   %r9,%r9
jne    47c89 <PredictorEncodeTile+0x39>
mov    %r8,%rcx
mov    %r10,%rsi
lea    0x2ba2a(%rip),%rdi        # 736a9 <module.47+0x23b>
mov    $0x2ca,%edx
callq  8490 <__assert_fail@plt>
mov    0x30(%r9),%rax
test   %rax,%rax
jne    47ca9 <PredictorEncodeTile+0x59>
mov    %r8,%rcx
mov    %r10,%rsi
lea    0x2bab2(%rip),%rdi        # 73751 <module.47+0x2e3>
mov    $0x2cb,%edx
callq  8490 <__assert_fail@plt>
mov    0x28(%r9),%rax
test   %rax,%rax
jne    47cc9 <PredictorEncodeTile+0x79>
mov    %r8,%rcx
mov    %r10,%rsi
lea    0x2bae8(%rip),%rdi        # 737a7 <module.40+0x28>
mov    $0x2cc,%edx
callq  8490 <__assert_fail@plt>
mov    %rdx,%rax
mov    %r12,-0x28(%rbp)
mov    %r13,-0x30(%rbp)
mov    %r14,-0x38(%rbp)
mov    %r15,-0x40(%rbp)
mov    %rcx,-0x18(%rbp)
mov    %r9,%r12
mov    %rdi,%r13
mov    %rax,%rdi
mov    %rsi,%r14
mov    %rdx,%r15
callq  8440 <_TIFFmalloc@plt>
test   %rax,%rax
je     47d33 <PredictorEncodeTile+0xe3>
mov    %r14,%rsi
mov    %rax,%r14
mov    %r14,%rdi
mov    %r15,%rdx
callq  8720 <memcpy@plt>
mov    0x10(%r12),%rax
test   %rax,%rax
jg     47d66 <PredictorEncodeTile+0x116>
lea    0x2ba05(%rip),%rdi        # 73720 <module.47+0x2b2>
mov    $0x2de,%edx
lea    0x2b861(%rip),%rsi        # 73588 <module.47+0x11a>
lea    0x2ba65(%rip),%rcx        # 73793 <module.40+0x14>
callq  8490 <__assert_fail@plt>
xor    %eax,%eax
mov    0x3b8(%r13),%rdi
mov    %r15,%rcx
lea    0x2ba39(%rip),%rsi        # 7377f <module.40>
lea    0x2ba71(%rip),%rdx        # 737be <module.40+0x3f>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x40(%rbp),%r15
mov    -0x38(%rbp),%r14
mov    -0x30(%rbp),%r13
mov    -0x28(%rbp),%r12
leaveq 
retq   
mov    %r15,%rcx
mov    %rax,%r15
mov    %rcx,%rax
cqto   
mov    %rbx,%r8
mov    %rax,%rbx
idiv   %r15
test   %rdx,%rdx
jne    47d8d <PredictorEncodeTile+0x13d>
mov    %r14,-0x8(%rbp)
mov    %rbx,-0x10(%rbp)
mov    %r8,-0x20(%rbp)
jmp    47de3 <PredictorEncodeTile+0x193>
xor    %eax,%eax
mov    0x3b8(%r13),%rdi
mov    %r8,%rbx
lea    0x2b852(%rip),%rdx        # 735f2 <module.47+0x184>
lea    0x2ba46(%rip),%rcx        # 737ed <module.40+0x6e>
lea    0x2b9e5(%rip),%rsi        # 73793 <module.40+0x14>
callq  8a00 <TIFFErrorExt@plt>
mov    %r14,%rdi
callq  8bb0 <_TIFFfree@plt>
xor    %eax,%eax
mov    -0x40(%rbp),%r15
mov    -0x38(%rbp),%r14
mov    -0x30(%rbp),%r13
mov    -0x28(%rbp),%r12
leaveq 
retq   
mov    %r13,%rdi
mov    %r14,%rsi
mov    %r15,%rdx
callq  *0x30(%r12)
sub    %r15,%rbx
add    %r15,%r14
test   %rbx,%rbx
jg     47dcf <PredictorEncodeTile+0x17f>
mov    %r13,%rdi
mov    -0x8(%rbp),%rbx
mov    %rbx,%rsi
mov    -0x10(%rbp),%rdx
mov    -0x18(%rbp),%rcx
callq  *0x28(%r12)
mov    %rbx,%rdi
mov    %rax,%r13
callq  8bb0 <_TIFFfree@plt>
mov    %r13,%rax
mov    -0x20(%rbp),%rbx
mov    -0x40(%rbp),%r15
mov    -0x38(%rbp),%r14
mov    -0x30(%rbp),%r13
mov    -0x28(%rbp),%r12
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

0000000000047e30 <PredictorSetup>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    $0x1,%eax
lea    0x2b9ba(%rip),%rsi        # 737fe <module.45>
mov    0x350(%rdi),%rdx
movslq (%rdx),%rcx
cmp    $0x1,%ecx
jle    47e76 <PredictorSetup+0x46>
cmp    $0x2,%ecx
je     47e7d <PredictorSetup+0x4d>
cmp    $0x3,%ecx
je     47ebc <PredictorSetup+0x8c>
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
lea    0x2ba60(%rip),%rdx        # 738cd <module.45+0xcf>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
cmp    $0x1,%ecx
jne    47e5d <PredictorSetup+0x2d>
leaveq 
retq   
movzwl 0x74(%rdi),%ecx
cmp    $0x8,%cx
jne    47efb <PredictorSetup+0xcb>
movzwl 0xaa(%rdi),%ecx
cmp    $0x1,%cx
jne    47e9b <PredictorSetup+0x6b>
movzwl 0x82(%rdi),%eax
movslq %eax,%rax
mov    %rax,0x8(%rdx)
mov    0x10(%rdi),%eax
and    $0x400,%eax
test   %eax,%eax
jne    47f20 <PredictorSetup+0xf0>
mov    %r15,-0x8(%rbp)
mov    %rdx,%r15
callq  8410 <TIFFScanlineSize@plt>
jmp    47f2c <PredictorSetup+0xfc>
movzwl 0x76(%rdi),%ecx
cmp    $0x3,%cx
jne    47f3d <PredictorSetup+0x10d>
movzwl 0x74(%rdi),%ecx
cmp    $0x10,%cx
je     47e87 <PredictorSetup+0x57>
cmp    $0x18,%cx
je     47e87 <PredictorSetup+0x57>
cmp    $0x20,%cx
je     47e87 <PredictorSetup+0x57>
cmp    $0x40,%cx
je     47e87 <PredictorSetup+0x57>
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
lea    0x2b99e(%rip),%rdx        # 73890 <module.45+0x92>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
cmp    $0x10,%cx
je     47e87 <PredictorSetup+0x57>
cmp    $0x20,%cx
je     47e87 <PredictorSetup+0x57>
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
lea    0x2b8f6(%rip),%rdx        # 7380d <module.45+0xf>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
mov    %r15,-0x8(%rbp)
mov    %rdx,%r15
callq  80d0 <TIFFTileRowSize@plt>
mov    %rax,0x10(%r15)
test   %rax,%rax
jne    47f56 <PredictorSetup+0x126>
mov    -0x8(%rbp),%r15
xor    %eax,%eax
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
lea    0x2b906(%rip),%rdx        # 73853 <module.45+0x55>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
mov    $0x1,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   0x0(%rax)

0000000000047f70 <PredictorSetupDecode>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %rdi,-0x10(%rbp)
mov    0x350(%rdi),%rax
mov    %rax,-0x8(%rbp)
mov    0x70(%rax),%rax
callq  *%rax
test   %eax,%eax
jne    47f95 <PredictorSetupDecode+0x25>
xor    %eax,%eax
leaveq 
retq   
mov    -0x10(%rbp),%rdi
callq  47e30 <PredictorSetup>
test   %eax,%eax
jne    47fa6 <PredictorSetupDecode+0x36>
xor    %eax,%eax
leaveq 
retq   
mov    0x31f9b(%rip),%r9        # 79f48 <_TIFFNoPostDecode@@Base+0x2f608>
mov    $0x1,%eax
lea    -0x5e9(%rip),%rdi        # 479d0 <PredictorDecodeTile>
lea    -0x6e0(%rip),%rsi        # 478e0 <PredictorDecodeRow>
mov    -0x8(%rbp),%r11
movslq (%r11),%rcx
cmp    $0x2,%ecx
je     47fd3 <PredictorSetupDecode+0x63>
cmp    $0x3,%ecx
je     48006 <PredictorSetupDecode+0x96>
leaveq 
retq   
lea    -0x11fa(%rip),%r8        # 46de0 <horAcc16>
lea    -0x10f1(%rip),%rdx        # 46ef0 <horAcc32>
mov    -0x10(%rbp),%r10
movzwl 0x74(%r10),%ecx
cmp    $0xf,%cx
jbe    4805f <PredictorSetupDecode+0xef>
cmp    $0x10,%cx
je     480bb <PredictorSetupDecode+0x14b>
cmp    $0x20,%cx
jne    48070 <PredictorSetupDecode+0x100>
mov    %rdx,0x50(%r11)
jmp    48070 <PredictorSetupDecode+0x100>
lea    -0xaed(%rip),%rcx        # 47520 <fpAcc>
mov    %rcx,0x50(%r11)
mov    -0x10(%rbp),%rdx
mov    0x2f8(%rdx),%rcx
cmp    %rsi,%rcx
je     48050 <PredictorSetupDecode+0xe0>
mov    %rcx,0x38(%r11)
mov    %rsi,0x2f8(%rdx)
mov    0x308(%rdx),%rcx
mov    %rcx,0x40(%r11)
mov    %rdi,0x308(%rdx)
mov    0x318(%rdx),%rcx
mov    %rcx,0x48(%r11)
mov    %rdi,0x318(%rdx)
mov    0x10(%rdx),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
jne    480c1 <PredictorSetupDecode+0x151>
leaveq 
retq   
cmp    $0x8,%cx
jne    48070 <PredictorSetupDecode+0x100>
lea    -0x142c(%rip),%rcx        # 46c40 <horAcc8>
mov    %rcx,0x50(%r11)
mov    0x2f8(%r10),%rcx
cmp    %rsi,%rcx
je     480ab <PredictorSetupDecode+0x13b>
mov    %rcx,0x38(%r11)
mov    %rsi,0x2f8(%r10)
mov    0x308(%r10),%rcx
mov    %rcx,0x40(%r11)
mov    %rdi,0x308(%r10)
mov    0x318(%r10),%rcx
mov    %rcx,0x48(%r11)
mov    %rdi,0x318(%r10)
mov    0x10(%r10),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
jne    480ca <PredictorSetupDecode+0x15a>
leaveq 
retq   
mov    %r8,0x50(%r11)
jmp    48070 <PredictorSetupDecode+0x100>
mov    %r9,0x3e8(%rdx)
leaveq 
retq   
mov    0x50(%r11),%rcx
cmp    %r8,%rcx
je     480da <PredictorSetupDecode+0x16a>
cmp    %rdx,%rcx
je     480ee <PredictorSetupDecode+0x17e>
leaveq 
retq   
lea    -0x1101(%rip),%rcx        # 46fe0 <swabHorAcc16>
mov    %rcx,0x50(%r11)
mov    %r9,0x3e8(%r10)
leaveq 
retq   
lea    -0x10b5(%rip),%rcx        # 47040 <swabHorAcc32>
mov    %rcx,0x50(%r11)
mov    %r9,0x3e8(%r10)
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   (%rax)

0000000000048110 <PredictorSetupEncode>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %rdi,-0x10(%rbp)
mov    0x350(%rdi),%rax
mov    %rax,-0x8(%rbp)
mov    0x78(%rax),%rax
callq  *%rax
test   %eax,%eax
jne    48135 <PredictorSetupEncode+0x25>
xor    %eax,%eax
leaveq 
retq   
mov    -0x10(%rbp),%rdi
callq  47e30 <PredictorSetup>
test   %eax,%eax
jne    48146 <PredictorSetupEncode+0x36>
xor    %eax,%eax
leaveq 
retq   
mov    $0x1,%eax
lea    -0x502(%rip),%r8        # 47c50 <PredictorEncodeTile>
lea    -0x5f9(%rip),%rdi        # 47b60 <PredictorEncodeRow>
mov    -0x8(%rbp),%r10
movslq (%r10),%rcx
cmp    $0x2,%ecx
je     4816c <PredictorSetupEncode+0x5c>
cmp    $0x3,%ecx
je     4819f <PredictorSetupEncode+0x8f>
leaveq 
retq   
lea    -0xf03(%rip),%rsi        # 47270 <horDiff16>
lea    -0xdfa(%rip),%rdx        # 47380 <horDiff32>
mov    -0x10(%rbp),%r9
movzwl 0x74(%r9),%ecx
cmp    $0xf,%cx
jbe    481bc <PredictorSetupEncode+0xac>
cmp    $0x10,%cx
je     48218 <PredictorSetupEncode+0x108>
cmp    $0x20,%cx
jne    481cd <PredictorSetupEncode+0xbd>
mov    %rdx,0x30(%r10)
jmp    481cd <PredictorSetupEncode+0xbd>
lea    -0xaa6(%rip),%rcx        # 47700 <fpDiff>
mov    %rcx,0x30(%r10)
mov    -0x10(%rbp),%rdx
mov    0x300(%rdx),%rcx
cmp    %rdi,%rcx
jne    4821e <PredictorSetupEncode+0x10e>
leaveq 
retq   
cmp    $0x8,%cx
jne    481cd <PredictorSetupEncode+0xbd>
lea    -0x1129(%rip),%rcx        # 470a0 <horDiff8>
mov    %rcx,0x30(%r10)
mov    0x300(%r9),%rcx
cmp    %rdi,%rcx
je     48208 <PredictorSetupEncode+0xf8>
mov    %rcx,0x18(%r10)
mov    %rdi,0x300(%r9)
mov    0x310(%r9),%rcx
mov    %rcx,0x20(%r10)
mov    %r8,0x310(%r9)
mov    0x320(%r9),%rcx
mov    %rcx,0x28(%r10)
mov    %r8,0x320(%r9)
mov    0x10(%r9),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
jne    4824f <PredictorSetupEncode+0x13f>
leaveq 
retq   
mov    %rsi,0x30(%r10)
jmp    481cd <PredictorSetupEncode+0xbd>
mov    %rcx,0x18(%r10)
mov    %rdi,0x300(%rdx)
mov    0x310(%rdx),%rcx
mov    %rcx,0x20(%r10)
mov    %r8,0x310(%rdx)
mov    0x320(%rdx),%rcx
mov    %rcx,0x28(%r10)
mov    %r8,0x320(%rdx)
leaveq 
retq   
mov    0x31cf2(%rip),%rdi        # 79f48 <_TIFFNoPostDecode@@Base+0x2f608>
mov    0x30(%r10),%rcx
cmp    %rsi,%rcx
je     48266 <PredictorSetupEncode+0x156>
cmp    %rdx,%rcx
je     4827a <PredictorSetupEncode+0x16a>
leaveq 
retq   
lea    -0xded(%rip),%rcx        # 47480 <swabHorDiff16>
mov    %rcx,0x30(%r10)
mov    %rdi,0x3e8(%r9)
leaveq 
retq   
lea    -0xdb1(%rip),%rcx        # 474d0 <swabHorDiff32>
mov    %rcx,0x30(%r10)
mov    %rdi,0x3e8(%r9)
leaveq 
retq   
xchg   %ax,%ax

0000000000048290 <PredictorVSetField>:
push   %rbp
mov    %rsp,%rbp
lea    0x2b2ed(%rip),%r9        # 73588 <module.47+0x11a>
lea    0x2b658(%rip),%rcx        # 738fa <module.45+0xfc>
mov    0x350(%rdi),%r8
test   %r8,%r8
jne    482c2 <PredictorVSetField+0x32>
mov    %r9,%rsi
lea    0x2b3f1(%rip),%rdi        # 736a9 <module.47+0x23b>
mov    $0x2fd,%edx
callq  8490 <__assert_fail@plt>
mov    0x60(%r8),%rax
test   %rax,%rax
jne    482df <PredictorVSetField+0x4f>
mov    %r9,%rsi
lea    0x2b638(%rip),%rdi        # 7390d <module.45+0x10f>
mov    $0x2fe,%edx
callq  8490 <__assert_fail@plt>
cmp    $0x13d,%esi
jne    48300 <PredictorVSetField+0x70>
movslq (%rdx),%rcx
cmp    $0x2f,%ecx
jle    48304 <PredictorVSetField+0x74>
mov    0x8(%rdx),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rdx)
movslq (%rcx),%rax
jmp    48311 <PredictorVSetField+0x81>
callq  *%rax
leaveq 
retq   
mov    0x10(%rdx),%rax
movslq (%rax,%rcx,1),%rax
add    $0x8,%ecx
mov    %ecx,(%rdx)
movzwl %ax,%eax
mov    %eax,(%r8)
mov    0x48(%rdi),%rax
or     $0x4,%rax
mov    %rax,0x48(%rdi)
mov    0x10(%rdi),%eax
or     $0x8,%eax
mov    %eax,0x10(%rdi)
mov    $0x1,%eax
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

0000000000048340 <PredictorVGetField>:
push   %rbp
mov    %rsp,%rbp
lea    0x2b23d(%rip),%r9        # 73588 <module.47+0x11a>
lea    0x2b5d2(%rip),%rcx        # 73924 <module.45+0x126>
mov    0x350(%rdi),%r8
test   %r8,%r8
jne    48372 <PredictorVGetField+0x32>
mov    %r9,%rsi
lea    0x2b341(%rip),%rdi        # 736a9 <module.47+0x23b>
mov    $0x311,%edx
callq  8490 <__assert_fail@plt>
mov    0x58(%r8),%rax
test   %rax,%rax
jne    4838f <PredictorVGetField+0x4f>
mov    %r9,%rsi
lea    0x2b5b2(%rip),%rdi        # 73937 <module.45+0x139>
mov    $0x312,%edx
callq  8490 <__assert_fail@plt>
cmp    $0x13d,%esi
jne    483b0 <PredictorVGetField+0x70>
movslq (%rdx),%rcx
cmp    $0x2f,%ecx
jle    483b4 <PredictorVGetField+0x74>
mov    0x8(%rdx),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rdx)
mov    (%rcx),%rax
jmp    483c1 <PredictorVGetField+0x81>
callq  *%rax
leaveq 
retq   
mov    0x10(%rdx),%rax
mov    (%rax,%rcx,1),%rax
add    $0x8,%ecx
mov    %ecx,(%rdx)
movzwl (%r8),%ecx
mov    %cx,(%rax)
mov    $0x1,%eax
leaveq 
retq   
nop

00000000000483d0 <PredictorPrintDir>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    0x350(%rdi),%rcx
mov    0x48(%rdi),%rax
and    $0x4,%rax
test   %rax,%rax
jne    48400 <PredictorPrintDir+0x30>
mov    %r14,%r8
mov    %rsi,%r14
mov    %r15,%rsi
mov    %rcx,%r15
mov    %rsi,%rcx
jmpq   4848f <PredictorPrintDir+0xbf>
xor    %eax,%eax
lea    0x2b545(%rip),%r8        # 7394e <module.45+0x150>
mov    %rsi,%r9
mov    %r14,-0x18(%rbp)
mov    %r15,-0x20(%rbp)
mov    %rdi,-0x8(%rbp)
mov    %rdx,-0x10(%rbp)
mov    %r9,%rdi
mov    %rsi,%r14
mov    %r8,%rsi
mov    %rcx,%r15
callq  86f0 <fprintf@plt>
movslq (%r15),%rax
cmp    $0x1,%eax
jle    48452 <PredictorPrintDir+0x82>
cmp    $0x2,%eax
je     484a0 <PredictorPrintDir+0xd0>
cmp    $0x3,%eax
jne    48468 <PredictorPrintDir+0x98>
xor    %eax,%eax
lea    0x2b533(%rip),%rsi        # 7397b <module.45+0x17d>
mov    %r14,%rdi
callq  86f0 <fprintf@plt>
jmp    48468 <PredictorPrintDir+0x98>
cmp    $0x1,%eax
jne    48468 <PredictorPrintDir+0x98>
xor    %eax,%eax
lea    0x2b4fc(%rip),%rsi        # 7395c <module.45+0x15e>
mov    %r14,%rdi
callq  86f0 <fprintf@plt>
xor    %eax,%eax
lea    0x2b524(%rip),%rsi        # 73995 <module.45+0x197>
movslq (%r15),%rdx
mov    %rdx,%rcx
mov    %r14,%rdi
callq  86f0 <fprintf@plt>
mov    -0x10(%rbp),%rdx
mov    -0x8(%rbp),%rdi
mov    -0x20(%rbp),%rcx
mov    -0x18(%rbp),%r8
mov    0x68(%r15),%rax
test   %rax,%rax
jne    484b3 <PredictorPrintDir+0xe3>
mov    %r8,%r14
mov    %rcx,%r15
leaveq 
retq   
xor    %eax,%eax
lea    0x2b4b9(%rip),%rsi        # 73962 <module.45+0x164>
mov    %r14,%rdi
callq  86f0 <fprintf@plt>
jmp    48468 <PredictorPrintDir+0x98>
mov    %r14,%rsi
mov    %r8,%r14
mov    %rcx,%r15
callq  *%rax
leaveq 
retq   

00000000000484c0 <TIFFPrintDirectory>:
push   %rbp
mov    %rsp,%rbp
sub    $0x70,%rsp
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rbx,-0x8(%rbp)
mov    %rdi,%r12
mov    %rsi,%rdi
mov    %rdx,%r14
mov    %r14,-0x50(%rbp)
mov    %r12,-0x58(%rbp)
xor    %r13d,%r13d
mov    %r13,-0x38(%rbp)
lea    0x2b4bd(%rip),%rsi        # 739b8 <module.45+0x1ba>
mov    0x18(%r12),%rdx
mov    %rdx,%rcx
mov    %r13,%rax
mov    %rdi,%rbx
callq  86f0 <fprintf@plt>
mov    0x38(%r12),%rax
and    $0x20,%rax
test   %rax,%rax
je     485ba <TIFFPrintDirectory+0xfa>
xor    %eax,%eax
lea    0x2b4b7(%rip),%rsi        # 739e0 <module.45+0x1e2>
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
lea    0x2b4b8(%rip),%rdx        # 739f0 <module.45+0x1f2>
lea    0x2b4ce(%rip),%r15        # 73a0d <module.45+0x20f>
mov    0x70(%r12),%eax
and    $0x1,%eax
test   %eax,%eax
je     4855f <TIFFPrintDirectory+0x9f>
xor    %eax,%eax
lea    0x2b49e(%rip),%rsi        # 739f2 <module.45+0x1f4>
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
mov    %r15,%rdx
mov    0x70(%r12),%eax
and    $0x2,%eax
test   %eax,%eax
jne    48570 <TIFFPrintDirectory+0xb0>
mov    %rdx,%r15
jmp    48581 <TIFFPrintDirectory+0xc1>
xor    %eax,%eax
lea    0x2b496(%rip),%rsi        # 73a0f <module.45+0x211>
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
mov    0x70(%r12),%eax
and    $0x4,%eax
test   %eax,%eax
je     485a1 <TIFFPrintDirectory+0xe1>
mov    %r15,%rdx
xor    %eax,%eax
lea    0x2b48c(%rip),%rsi        # 73a25 <module.45+0x227>
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
xor    %eax,%eax
lea    0x2b48f(%rip),%rsi        # 73a39 <module.45+0x23b>
mov    0x70(%r12),%edx
mov    %rdx,%rcx
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
lea    0x2b4bf(%rip),%r15        # 73a80 <module.45+0x282>
mov    0x38(%r12),%rax
and    $0x2,%rax
test   %rax,%rax
je     4861b <TIFFPrintDirectory+0x15b>
xor    %eax,%eax
lea    0x2b471(%rip),%rsi        # 73a49 <module.45+0x24b>
mov    0x58(%r12),%edx
mov    0x5c(%r12),%ecx
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
mov    0x40(%r12),%rax
and    $0x8,%rax
test   %rax,%rax
je     4860e <TIFFPrintDirectory+0x14e>
xor    %eax,%eax
lea    0x2b46d(%rip),%rsi        # 73a6e <module.45+0x270>
mov    0x60(%r12),%edx
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
xor    %eax,%eax
mov    %rbx,%rdi
mov    %r15,%rsi
callq  86f0 <fprintf@plt>
mov    0x38(%r12),%rax
and    $0x4,%rax
test   %rax,%rax
je     48675 <TIFFPrintDirectory+0x1b5>
xor    %eax,%eax
lea    0x2b450(%rip),%rsi        # 73a82 <module.45+0x284>
mov    0x64(%r12),%edx
mov    0x68(%r12),%ecx
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
mov    0x40(%r12),%rax
and    $0x10,%rax
test   %rax,%rax
je     48668 <TIFFPrintDirectory+0x1a8>
xor    %eax,%eax
lea    0x2b44a(%rip),%rsi        # 73aa5 <module.45+0x2a7>
mov    0x6c(%r12),%edx
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
xor    %eax,%eax
mov    %rbx,%rdi
mov    %r15,%rsi
callq  86f0 <fprintf@plt>
mov    0x38(%r12),%rax
and    $0x8,%rax
test   %rax,%rax
je     486d4 <TIFFPrintDirectory+0x214>
mov    $0x2,%eax
lea    0x2b427(%rip),%rsi        # 73ab6 <module.45+0x2b8>
movss  0xa0(%r12),%xmm0
cvtss2sd %xmm0,%xmm0
movss  0xa4(%r12),%xmm1
cvtss2sd %xmm1,%xmm1
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
mov    0x38(%r12),%rax
and    $0x400000,%rax
test   %rax,%rax
jne    4883c <TIFFPrintDirectory+0x37c>
xor    %eax,%eax
mov    %rbx,%rdi
mov    %r15,%rsi
callq  86f0 <fprintf@plt>
mov    0x38(%r12),%rax
and    $0x10,%rax
test   %rax,%rax
je     48712 <TIFFPrintDirectory+0x252>
mov    $0x2,%eax
lea    0x2b413(%rip),%rsi        # 73b01 <module.45+0x303>
movss  0xac(%r12),%xmm0
cvtss2sd %xmm0,%xmm0
movss  0xb0(%r12),%xmm1
cvtss2sd %xmm1,%xmm1
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
mov    0x38(%r12),%rax
and    $0x40,%rax
test   %rax,%rax
je     48737 <TIFFPrintDirectory+0x277>
xor    %eax,%eax
lea    0x2b3ec(%rip),%rsi        # 73b15 <module.45+0x317>
movzwl 0x74(%r12),%edx
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
lea    0x2b46e(%rip),%rsi        # 73bac <module.45+0x3ae>
mov    0x40(%r12),%rax
and    $0x1,%rax
test   %rax,%rax
jne    48879 <TIFFPrintDirectory+0x3b9>
lea    0x2b477(%rip),%r8        # 73bce <module.45+0x3d0>
mov    0x38(%r12),%rax
and    $0x80,%rax
test   %rax,%rax
je     487bf <TIFFPrintDirectory+0x2ff>
mov    %rsi,%r14
mov    %r8,%r15
movzwl 0x78(%r12),%edi
callq  8530 <TIFFFindCODEC@plt>
mov    %rax,%r13
xor    %eax,%eax
lea    0x2b433(%rip),%rsi        # 73bb7 <module.45+0x3b9>
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
test   %r13,%r13
jne    488cf <TIFFPrintDirectory+0x40f>
xor    %eax,%eax
movzwl 0x78(%r12),%edx
mov    %rdx,%rcx
mov    %rbx,%rdi
mov    %r14,%rsi
callq  86f0 <fprintf@plt>
mov    %r14,%rsi
mov    %r15,%r8
xor    %r13d,%r13d
mov    -0x50(%rbp),%r14
lea    0x2b2c1(%rip),%r15        # 73a80 <module.45+0x282>
mov    0x38(%r12),%rax
and    $0x100,%rax
test   %rax,%rax
je     48928 <TIFFPrintDirectory+0x468>
mov    %rsi,%r14
mov    %r8,%r15
xor    %eax,%eax
lea    0x2b3f0(%rip),%rsi        # 73bd2 <module.45+0x3d4>
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
movzwl 0x7a(%r12),%eax
cmp    $0xa,%ax
jbe    488f9 <TIFFPrintDirectory+0x439>
movzwl 0x7a(%r12),%edx
cmp    $0x804c,%dx
je     48996 <TIFFPrintDirectory+0x4d6>
cmp    $0x804d,%dx
je     489bd <TIFFPrintDirectory+0x4fd>
xor    %eax,%eax
mov    %rdx,%rcx
mov    %rbx,%rdi
mov    %r14,%rsi
callq  86f0 <fprintf@plt>
mov    %r14,%rsi
mov    %r15,%r8
mov    -0x50(%rbp),%r14
lea    0x2b249(%rip),%r15        # 73a80 <module.45+0x282>
jmpq   48928 <TIFFPrintDirectory+0x468>
movzwl 0xa8(%r12),%edx
cmp    $0x1,%dx
jbe    489e4 <TIFFPrintDirectory+0x524>
cmp    $0x2,%dx
je     48a07 <TIFFPrintDirectory+0x547>
cmp    $0x3,%dx
jne    489ee <TIFFPrintDirectory+0x52e>
xor    %eax,%eax
lea    0x2b278(%rip),%rsi        # 73ae4 <module.45+0x2e6>
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
jmpq   486c7 <TIFFPrintDirectory+0x207>
mov    %rsi,%r15
xor    %eax,%eax
lea    0x2b2a3(%rip),%rsi        # 73b28 <module.45+0x32a>
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
movzwl 0x76(%r12),%edx
lea    -0x1(%rdx),%eax
cmp    $0x5,%eax
ja     48a1d <TIFFPrintDirectory+0x55d>
lea    0x2b0fa(%rip),%rcx        # 739a0 <module.45+0x1a2>
movslq (%rcx,%rax,4),%rax
add    %rcx,%rax
jmpq   *%rax
xor    %eax,%eax
lea    0x2b2d7(%rip),%rsi        # 73b8f <module.45+0x391>
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
mov    %r15,%rsi
lea    0x2b1b6(%rip),%r15        # 73a80 <module.45+0x282>
jmpq   48750 <TIFFPrintDirectory+0x290>
xor    %eax,%eax
mov    0x0(%r13),%rdx
mov    %rbx,%rdi
mov    %r15,%rsi
callq  86f0 <fprintf@plt>
mov    %r14,%rsi
mov    %r15,%r8
xor    %r13d,%r13d
mov    -0x50(%rbp),%r14
lea    0x2b18c(%rip),%r15        # 73a80 <module.45+0x282>
jmpq   487bf <TIFFPrintDirectory+0x2ff>
lea    0x31318(%rip),%rcx        # 79c18 <photoNames>
movzwl 0x7a(%r12),%eax
mov    (%rcx,%rax,8),%rdx
xor    %eax,%eax
mov    %rbx,%rdi
mov    %r15,%rsi
callq  86f0 <fprintf@plt>
mov    %r14,%rsi
mov    %r15,%r8
mov    -0x50(%rbp),%r14
lea    0x2b158(%rip),%r15        # 73a80 <module.45+0x282>
lea    0x2b2f9(%rip),%rcx        # 73c28 <module.45+0x42a>
lea    0x2b32b(%rip),%r9        # 73c61 <module.45+0x463>
mov    $0x80000000,%eax
and    0x38(%r12),%rax
test   %rax,%rax
je     48b4c <TIFFPrintDirectory+0x68c>
movzwl 0xd4(%r12),%edx
test   %dx,%dx
je     48b4c <TIFFPrintDirectory+0x68c>
mov    %r9,%r14
mov    %rcx,%r15
xor    %eax,%eax
lea    0x2b2a9(%rip),%rsi        # 73c13 <module.45+0x415>
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
mov    %r15,%rdx
lea    0x2b2ad(%rip),%r15        # 73c29 <module.45+0x42b>
lea    0x2b2b4(%rip),%rsi        # 73c37 <module.45+0x439>
lea    0x2b2bb(%rip),%r8        # 73c45 <module.45+0x447>
lea    0x2b2c4(%rip),%r9        # 73c55 <module.45+0x457>
jmpq   48b05 <TIFFPrintDirectory+0x645>
xor    %eax,%eax
lea    0x2b252(%rip),%rsi        # 73bf1 <module.45+0x3f3>
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
mov    %r14,%rsi
mov    %r15,%r8
mov    -0x50(%rbp),%r14
lea    0x2b0c8(%rip),%r15        # 73a80 <module.45+0x282>
jmpq   48928 <TIFFPrintDirectory+0x468>
xor    %eax,%eax
lea    0x2b238(%rip),%rsi        # 73bfe <module.45+0x400>
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
mov    %r14,%rsi
mov    %r15,%r8
mov    -0x50(%rbp),%r14
lea    0x2b0a1(%rip),%r15        # 73a80 <module.45+0x282>
jmpq   48928 <TIFFPrintDirectory+0x468>
cmp    $0x1,%dx
je     48b90 <TIFFPrintDirectory+0x6d0>
xor    %eax,%eax
lea    0x2b0f8(%rip),%rsi        # 73aef <module.45+0x2f1>
mov    %rdx,%rcx
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
jmpq   486c7 <TIFFPrintDirectory+0x207>
xor    %eax,%eax
lea    0x2b0c7(%rip),%rsi        # 73ad7 <module.45+0x2d9>
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
jmpq   486c7 <TIFFPrintDirectory+0x207>
xor    %eax,%eax
mov    %rdx,%rcx
mov    %rbx,%rdi
mov    %r15,%rsi
callq  86f0 <fprintf@plt>
mov    %r15,%rsi
lea    0x2b049(%rip),%r15        # 73a80 <module.45+0x282>
jmpq   48750 <TIFFPrintDirectory+0x290>
xor    %eax,%eax
lea    0x2b0f5(%rip),%rsi        # 73b3a <module.45+0x33c>
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
mov    %r15,%rsi
lea    0x2b029(%rip),%r15        # 73a80 <module.45+0x282>
jmpq   48750 <TIFFPrintDirectory+0x290>
xor    %eax,%eax
lea    0x2b0db(%rip),%rsi        # 73b40 <module.45+0x342>
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
mov    %r15,%rsi
lea    0x2b009(%rip),%r15        # 73a80 <module.45+0x282>
jmpq   48750 <TIFFPrintDirectory+0x290>
xor    %eax,%eax
lea    0x2b0cb(%rip),%rsi        # 73b50 <module.45+0x352>
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
mov    %r15,%rsi
lea    0x2afe9(%rip),%r15        # 73a80 <module.45+0x282>
jmpq   48750 <TIFFPrintDirectory+0x290>
xor    %eax,%eax
lea    0x2b0bd(%rip),%rsi        # 73b62 <module.45+0x364>
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
mov    %r15,%rsi
lea    0x2afc9(%rip),%r15        # 73a80 <module.45+0x282>
jmpq   48750 <TIFFPrintDirectory+0x290>
xor    %eax,%eax
lea    0x2b0b2(%rip),%rsi        # 73b77 <module.45+0x379>
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
mov    %r15,%rsi
lea    0x2afa9(%rip),%r15        # 73a80 <module.45+0x282>
jmpq   48750 <TIFFPrintDirectory+0x290>
xor    %eax,%eax
mov    %rbx,%rdi
mov    %r15,%rsi
callq  86f0 <fprintf@plt>
add    $0x1,%r13d
lea    0x2b161(%rip),%r9        # 73c55 <module.45+0x457>
lea    0x2b14a(%rip),%r8        # 73c45 <module.45+0x447>
lea    0x2b135(%rip),%rsi        # 73c37 <module.45+0x439>
mov    %r14,%rdx
movzwl 0xd4(%r12),%eax
cmp    %r13w,%ax
ja     48ba6 <TIFFPrintDirectory+0x6e6>
xor    %eax,%eax
lea    0x2b143(%rip),%rsi        # 73c64 <module.45+0x466>
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
lea    0x2b0f8(%rip),%rcx        # 73c28 <module.45+0x42a>
lea    0x2b097(%rip),%r8        # 73bce <module.45+0x3d0>
lea    0x2b06e(%rip),%rsi        # 73bac <module.45+0x3ae>
xor    %r13d,%r13d
mov    -0x50(%rbp),%r14
lea    0x2af34(%rip),%r15        # 73a80 <module.45+0x282>
mov    0x40(%r12),%rax
and    $0x4000,%rax
test   %rax,%rax
je     48c0c <TIFFPrintDirectory+0x74c>
mov    %rcx,%r15
xor    %eax,%eax
lea    0x2b0fb(%rip),%rsi        # 73c67 <module.45+0x469>
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
movzwl 0x82(%r12),%r14d
mov    0x138(%r12),%rax
mov    %r15,%rdi
mov    %rax,%r15
jmpq   48ce3 <TIFFPrintDirectory+0x823>
xor    %eax,%eax
lea    0x2af32(%rip),%rsi        # 73acb <module.45+0x2cd>
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
jmpq   486c7 <TIFFPrintDirectory+0x207>
mov    0xd8(%r12),%rcx
movzwl %r13w,%eax
movzwl (%rcx,%rax,2),%ecx
test   %cx,%cx
je     48adc <TIFFPrintDirectory+0x61c>
cmp    $0x1,%cx
je     48cee <TIFFPrintDirectory+0x82e>
cmp    $0x2,%cx
je     48cfd <TIFFPrintDirectory+0x83d>
mov    %r9,%rsi
xor    %eax,%eax
mov    %rcx,%r8
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
jmpq   48ae9 <TIFFPrintDirectory+0x629>
lea    0x2ae91(%rip),%r15        # 73a80 <module.45+0x282>
mov    %r15,%rdi
mov    %rbx,%rsi
callq  84b0 <fputs@plt>
lea    0x2afcd(%rip),%r8        # 73bce <module.45+0x3d0>
lea    0x2afa4(%rip),%rsi        # 73bac <module.45+0x3ae>
mov    -0x50(%rbp),%r14
mov    0x38(%r12),%rax
and    $0x200,%rax
test   %rax,%rax
je     48d2f <TIFFPrintDirectory+0x86f>
mov    %rsi,%r13
mov    %r8,%r15
xor    %eax,%eax
lea    0x2b046(%rip),%rsi        # 73c75 <module.45+0x477>
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
movzwl 0x7c(%r12),%edx
cmp    $0x1,%dx
jbe    48d96 <TIFFPrintDirectory+0x8d6>
cmp    $0x2,%dx
je     48dc6 <TIFFPrintDirectory+0x906>
cmp    $0x3,%dx
jne    48d0f <TIFFPrintDirectory+0x84f>
xor    %eax,%eax
lea    0x2b04f(%rip),%rsi        # 73cb3 <module.45+0x4b5>
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
mov    %r13,%rsi
mov    %r15,%r8
xor    %r13d,%r13d
lea    0x2ae04(%rip),%r15        # 73a80 <module.45+0x282>
jmpq   48d2f <TIFFPrintDirectory+0x86f>
movslq 0x130(%r12),%rcx
mov    0x138(%r12),%rdx
lea    (%rcx,%rdx,1),%rax
cmp    %r15,%rax
jbe    48be8 <TIFFPrintDirectory+0x728>
mov    %rdx,%r12
mov    %rcx,%r13
mov    %rbx,%rsi
callq  84b0 <fputs@plt>
sub    %r15,%r12
lea    0x0(%r13,%r12,1),%rdx
mov    %rbx,%rdi
mov    %r15,%rsi
callq  49a40 <_TIFFprintAsciiBounded>
mov    %r15,%rdi
xor    %r13d,%r13d
mov    %r13,%rsi
callq  8400 <strchr@plt>
lea    0x1(%rax),%r15
add    $0xffff,%r14d
lea    0x2af82(%rip),%rdi        # 73c61 <module.45+0x463>
mov    -0x58(%rbp),%r12
test   %r14w,%r14w
jne    48c81 <TIFFPrintDirectory+0x7c1>
jmpq   48be8 <TIFFPrintDirectory+0x728>
xor    %eax,%eax
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
jmpq   48ae9 <TIFFPrintDirectory+0x629>
mov    %r8,%rsi
xor    %eax,%eax
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
jmpq   48ae9 <TIFFPrintDirectory+0x629>
xor    %eax,%eax
mov    %rdx,%rcx
mov    %rbx,%rdi
mov    %r13,%rsi
callq  86f0 <fprintf@plt>
mov    %r13,%rsi
mov    %r15,%r8
xor    %r13d,%r13d
lea    0x2ad51(%rip),%r15        # 73a80 <module.45+0x282>
mov    0x38(%r12),%rax
and    $0x400,%rax
test   %rax,%rax
je     48e0d <TIFFPrintDirectory+0x94d>
mov    %rsi,%r13
mov    %r8,%r15
xor    %eax,%eax
lea    0x2af71(%rip),%rsi        # 73cc3 <module.45+0x4c5>
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
movzwl 0x7e(%r12),%edx
cmp    $0x1,%dx
je     48dec <TIFFPrintDirectory+0x92c>
cmp    $0x2,%dx
je     48ebc <TIFFPrintDirectory+0x9fc>
xor    %eax,%eax
mov    %rdx,%rcx
mov    %rbx,%rdi
mov    %r13,%rsi
callq  86f0 <fprintf@plt>
mov    %r13,%rsi
mov    %r15,%r8
xor    %r13d,%r13d
lea    0x2acec(%rip),%r15        # 73a80 <module.45+0x282>
jmp    48e0d <TIFFPrintDirectory+0x94d>
cmp    $0x1,%dx
jne    48d0f <TIFFPrintDirectory+0x84f>
xor    %eax,%eax
lea    0x2aedd(%rip),%rsi        # 73c86 <module.45+0x488>
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
mov    %r13,%rsi
mov    %r15,%r8
xor    %r13d,%r13d
lea    0x2acbf(%rip),%r15        # 73a80 <module.45+0x282>
jmpq   48d2f <TIFFPrintDirectory+0x86f>
xor    %eax,%eax
lea    0x2aec9(%rip),%rsi        # 73c98 <module.45+0x49a>
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
mov    %r13,%rsi
mov    %r15,%r8
xor    %r13d,%r13d
lea    0x2ac99(%rip),%r15        # 73a80 <module.45+0x282>
jmpq   48d2f <TIFFPrintDirectory+0x86f>
xor    %eax,%eax
lea    0x2aedc(%rip),%rsi        # 73cd1 <module.45+0x4d3>
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
mov    %r13,%rsi
mov    %r15,%r8
xor    %r13d,%r13d
lea    0x2ac73(%rip),%r15        # 73a80 <module.45+0x282>
mov    0x40(%r12),%rax
and    $0x80,%rax
test   %rax,%rax
je     48e56 <TIFFPrintDirectory+0x996>
mov    %rsi,%r13
mov    %r8,%r15
xor    %eax,%eax
lea    0x2aebd(%rip),%rsi        # 73ce9 <module.45+0x4eb>
movzwl 0x108(%r12),%edx
movzwl 0x10a(%r12),%ecx
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
mov    %r13,%rsi
mov    %r15,%r8
xor    %r13d,%r13d
lea    0x2ac2a(%rip),%r15        # 73a80 <module.45+0x282>
mov    0x40(%r12),%rax
and    $0x100,%rax
test   %rax,%rax
je     48f03 <TIFFPrintDirectory+0xa43>
mov    %rsi,%r13
mov    %r8,%r15
xor    %eax,%eax
lea    0x2ae8d(%rip),%rsi        # 73d06 <module.45+0x508>
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
movzwl 0x10c(%r12),%edx
cmp    $0x1,%dx
je     48ee2 <TIFFPrintDirectory+0xa22>
cmp    $0x2,%dx
je     490db <TIFFPrintDirectory+0xc1b>
xor    %eax,%eax
mov    %rdx,%rcx
mov    %rbx,%rdi
mov    %r13,%rsi
callq  86f0 <fprintf@plt>
mov    %r13,%rsi
mov    %r15,%r8
xor    %r13d,%r13d
lea    0x2abc6(%rip),%r15        # 73a80 <module.45+0x282>
jmp    48f03 <TIFFPrintDirectory+0xa43>
xor    %eax,%eax
lea    0x2ae18(%rip),%rsi        # 73cdd <module.45+0x4df>
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
mov    %r13,%rsi
mov    %r15,%r8
xor    %r13d,%r13d
lea    0x2aba3(%rip),%r15        # 73a80 <module.45+0x282>
jmpq   48e0d <TIFFPrintDirectory+0x94d>
xor    %eax,%eax
lea    0x2ae31(%rip),%rsi        # 73d1c <module.45+0x51e>
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
mov    %r13,%rsi
mov    %r15,%r8
xor    %r13d,%r13d
lea    0x2ab7d(%rip),%r15        # 73a80 <module.45+0x282>
mov    0x40(%r12),%rax
and    $0x20,%rax
test   %rax,%rax
je     48f4a <TIFFPrintDirectory+0xa8a>
mov    %r8,%r13
mov    %rsi,%r15
xor    %eax,%eax
lea    0x2ae0f(%rip),%rsi        # 73d2f <module.45+0x531>
movzwl 0xd0(%r12),%edx
movzwl 0xd2(%r12),%ecx
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
mov    %r15,%rsi
mov    %r13,%r8
xor    %r13d,%r13d
lea    0x2ab36(%rip),%r15        # 73a80 <module.45+0x282>
mov    0x38(%r12),%rax
and    $0x8000,%rax
test   %rax,%rax
je     48faa <TIFFPrintDirectory+0xaea>
mov    %r8,%r13
mov    %rsi,%r15
xor    %eax,%eax
lea    0x2adea(%rip),%rsi        # 73d53 <module.45+0x555>
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
movzwl 0x80(%r12),%eax
cmp    $0x8,%ax
jbe    49101 <TIFFPrintDirectory+0xc41>
xor    %eax,%eax
movzwl 0x80(%r12),%edx
mov    %rdx,%rcx
mov    %rbx,%rdi
mov    %r15,%rsi
callq  86f0 <fprintf@plt>
mov    %r15,%rsi
xor    %r13d,%r13d
lea    0x2aad6(%rip),%r15        # 73a80 <module.45+0x282>
mov    0x38(%r12),%rax
and    $0x10000,%rax
test   %rax,%rax
je     48fe1 <TIFFPrintDirectory+0xb21>
mov    %rsi,%r15
xor    %eax,%eax
lea    0x2ad9d(%rip),%rsi        # 73d63 <module.45+0x565>
movzwl 0x82(%r12),%edx
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
mov    %r15,%rsi
lea    0x2aa9f(%rip),%r15        # 73a80 <module.45+0x282>
mov    0x38(%r12),%rax
and    $0x20000,%rax
test   %rax,%rax
je     49031 <TIFFPrintDirectory+0xb71>
mov    %rsi,%r15
xor    %eax,%eax
lea    0x2ad7b(%rip),%rsi        # 73d78 <module.45+0x57a>
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
mov    0x84(%r12),%edx
cmp    $0xffffffff,%edx
je     49134 <TIFFPrintDirectory+0xc74>
xor    %eax,%eax
lea    0x2ad74(%rip),%rsi        # 73d93 <module.45+0x595>
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
mov    %r15,%rsi
lea    0x2aa4f(%rip),%r15        # 73a80 <module.45+0x282>
mov    0x38(%r12),%rax
and    $0x40000,%rax
test   %rax,%rax
je     49068 <TIFFPrintDirectory+0xba8>
mov    %rsi,%r15
xor    %eax,%eax
lea    0x2ad4b(%rip),%rsi        # 73d98 <module.45+0x59a>
movzwl 0x88(%r12),%edx
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
mov    %r15,%rsi
lea    0x2aa18(%rip),%r15        # 73a80 <module.45+0x282>
mov    0x38(%r12),%rax
and    $0x80000,%rax
test   %rax,%rax
je     4909f <TIFFPrintDirectory+0xbdf>
mov    %rsi,%r15
xor    %eax,%eax
lea    0x2ad2c(%rip),%rsi        # 73db0 <module.45+0x5b2>
movzwl 0x8a(%r12),%edx
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
mov    %r15,%rsi
lea    0x2a9e1(%rip),%r15        # 73a80 <module.45+0x282>
lea    0x2ad37(%rip),%rcx        # 73ddd <module.45+0x5df>
mov    $0x1,%edx
mov    %rdx,-0x30(%rbp)
mov    0x40(%r12),%rax
and    $0x2,%rax
test   %rax,%rax
je     491b0 <TIFFPrintDirectory+0xcf0>
mov    0x10(%r12),%eax
and    $0x400000,%eax
test   %eax,%eax
jne    491dc <TIFFPrintDirectory+0xd1c>
mov    %rdx,%r14
jmpq   491e5 <TIFFPrintDirectory+0xd25>
xor    %eax,%eax
lea    0x2ac42(%rip),%rsi        # 73d26 <module.45+0x528>
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
mov    %r13,%rsi
mov    %r15,%r8
xor    %r13d,%r13d
lea    0x2a984(%rip),%r15        # 73a80 <module.45+0x282>
jmpq   48f03 <TIFFPrintDirectory+0xa43>
lea    0x30b68(%rip),%rcx        # 79c70 <orientNames>
movzwl 0x80(%r12),%eax
mov    (%rcx,%rax,8),%rdx
mov    %r13,%rsi
xor    %eax,%eax
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
mov    %r15,%rsi
xor    %r13d,%r13d
lea    0x2a951(%rip),%r15        # 73a80 <module.45+0x282>
jmpq   48faa <TIFFPrintDirectory+0xaea>
xor    %eax,%eax
lea    0x2ac4a(%rip),%rsi        # 73d87 <module.45+0x589>
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
mov    %r15,%rsi
lea    0x2a931(%rip),%r15        # 73a80 <module.45+0x282>
jmpq   49031 <TIFFPrintDirectory+0xb71>
mov    0x90(%r12),%rcx
movslq %r13d,%rax
movsd  (%rcx,%rax,8),%xmm0
mov    %rdx,%r15
mov    $0x1,%eax
mov    %rbx,%rdi
mov    %r15,%rsi
callq  86f0 <fprintf@plt>
add    $0x1,%r13d
mov    %r15,%rdx
cmp    %r14d,%r13d
jl     49154 <TIFFPrintDirectory+0xc94>
mov    %rdx,%r14
xor    %eax,%eax
mov    %rbx,%rdi
lea    0x2a8ee(%rip),%r15        # 73a80 <module.45+0x282>
mov    %r15,%rsi
callq  86f0 <fprintf@plt>
mov    %r14,%rcx
mov    $0x1,%edx
lea    0x2aa03(%rip),%rsi        # 73bac <module.45+0x3ae>
xor    %r13d,%r13d
mov    -0x50(%rbp),%r14
mov    0x40(%r12),%rax
and    $0x4,%rax
test   %rax,%rax
je     49249 <TIFFPrintDirectory+0xd89>
mov    0x10(%r12),%eax
and    $0x400000,%eax
test   %eax,%eax
jne    4929b <TIFFPrintDirectory+0xddb>
mov    %rdx,%r15
jmpq   492a4 <TIFFPrintDirectory+0xde4>
movzwl 0x82(%r12),%r14d
mov    %rcx,%r15
xor    %eax,%eax
lea    0x2abd7(%rip),%rsi        # 73dc8 <module.45+0x5ca>
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
mov    %r15,%rdx
jmp    4917e <TIFFPrintDirectory+0xcbe>
mov    0x98(%r12),%rcx
movslq %r13d,%rax
movsd  (%rcx,%rax,8),%xmm0
mov    $0x1,%eax
mov    %rbx,%rdi
mov    %r14,%rsi
callq  86f0 <fprintf@plt>
add    $0x1,%r13d
cmp    %r15d,%r13d
jl     491fe <TIFFPrintDirectory+0xd3e>
xor    %eax,%eax
mov    %rbx,%rdi
lea    0x2a84d(%rip),%r15        # 73a80 <module.45+0x282>
mov    %r15,%rsi
callq  86f0 <fprintf@plt>
lea    0x2a96a(%rip),%rsi        # 73bac <module.45+0x3ae>
xor    %r13d,%r13d
mov    -0x50(%rbp),%r14
mov    0x38(%r12),%rax
and    $0x100000,%rax
test   %rax,%rax
je     492d1 <TIFFPrintDirectory+0xe11>
mov    %rsi,%r13
xor    %eax,%eax
lea    0x2ab91(%rip),%rsi        # 73df6 <module.45+0x5f8>
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
movzwl 0xaa(%r12),%edx
cmp    $0x1,%dx
je     492bd <TIFFPrintDirectory+0xdfd>
cmp    $0x2,%dx
je     4937f <TIFFPrintDirectory+0xebf>
mov    %r13,%rsi
xor    %eax,%eax
mov    %rdx,%rcx
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
xor    %r13d,%r13d
jmp    492d1 <TIFFPrintDirectory+0xe11>
movzwl 0x82(%r12),%r15d
mov    %rcx,%r14
xor    %eax,%eax
lea    0x2ab31(%rip),%rsi        # 73de1 <module.45+0x5e3>
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
jmpq   49222 <TIFFPrintDirectory+0xd62>
xor    %eax,%eax
lea    0x2ab49(%rip),%rsi        # 73e0f <module.45+0x611>
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
xor    %r13d,%r13d
mov    0x38(%r12),%rax
and    $0x800000,%rax
test   %rax,%rax
je     49304 <TIFFPrintDirectory+0xe44>
xor    %eax,%eax
lea    0x2ab50(%rip),%rsi        # 73e3a <module.45+0x63c>
movzwl 0xb4(%r12),%edx
movzwl 0xb6(%r12),%ecx
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
lea    0x2ab69(%rip),%rsi        # 73e74 <module.45+0x676>
mov    0x38(%r12),%rax
and    $0x4000000,%rax
test   %rax,%rax
je     4934e <TIFFPrintDirectory+0xe8e>
mov    %rsi,%r13
xor    %eax,%eax
lea    0x2ab29(%rip),%rsi        # 73e50 <module.45+0x652>
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
mov    %r14,%rax
and    $0x4,%rax
test   %rax,%rax
jg     49398 <TIFFPrintDirectory+0xed8>
xor    %eax,%eax
mov    %rbx,%rdi
mov    %r13,%rsi
callq  86f0 <fprintf@plt>
mov    %r13,%rsi
xor    %r13d,%r13d
mov    0x40(%r12),%rax
and    $0x200,%rax
test   %rax,%rax
je     49419 <TIFFPrintDirectory+0xf59>
xor    %eax,%eax
lea    0x2ab14(%rip),%rsi        # 73e7f <module.45+0x681>
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
lea    0x2ab1f(%rip),%r15        # 73e99 <module.45+0x69b>
jmpq   49402 <TIFFPrintDirectory+0xf42>
xor    %eax,%eax
lea    0x2aa9b(%rip),%rsi        # 73e23 <module.45+0x625>
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
xor    %r13d,%r13d
jmpq   492d1 <TIFFPrintDirectory+0xe11>
mov    %r15,%rsi
xor    %eax,%eax
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
movzwl 0x74(%r12),%ecx
mov    $0x1,%r13d
shl    %cl,%r13
lea    0x2aaa3(%rip),%r15        # 73e5e <module.45+0x660>
xor    %r14d,%r14d
jmpq   494da <TIFFPrintDirectory+0x101a>
mov    0x128(%r12),%rdx
lea    0x0(%r13,%r13,1),%ecx
movslq %ecx,%rax
movss  (%rdx,%rax,4),%xmm0
cvtss2sd %xmm0,%xmm0
lea    0x1(%rcx),%eax
movslq %eax,%rax
movss  (%rdx,%rax,4),%xmm1
cvtss2sd %xmm1,%xmm1
mov    $0x2,%eax
mov    %rbx,%rdi
mov    %r15,%rsi
mov    %r13,%rdx
callq  86f0 <fprintf@plt>
add    $0x1,%r13d
cmp    $0x2,%r13d
jle    493c3 <TIFFPrintDirectory+0xf03>
lea    0x2aa65(%rip),%rsi        # 73e74 <module.45+0x676>
xor    %r13d,%r13d
lea    0x2a667(%rip),%r15        # 73a80 <module.45+0x282>
mov    0x40(%r12),%rax
and    $0x1000,%rax
test   %rax,%rax
je     4945a <TIFFPrintDirectory+0xf9a>
mov    %rsi,%r13
xor    %eax,%eax
lea    0x2aa76(%rip),%rsi        # 73eab <module.45+0x6ad>
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
and    $0x2,%r14
test   %r14,%r14
jg     494f9 <TIFFPrintDirectory+0x1039>
mov    %r13,%rsi
xor    %eax,%eax
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
xor    %r13d,%r13d
mov    0x40(%r12),%rax
and    $0x20000,%rax
test   %rax,%rax
je     4956f <TIFFPrintDirectory+0x10af>
mov    0x100(%r12),%rax
test   %rax,%rax
je     4956f <TIFFPrintDirectory+0x10af>
xor    %eax,%eax
lea    0x2aa4c(%rip),%rsi        # 73ed4 <module.45+0x6d6>
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
lea    0x2aa4f(%rip),%r14        # 73ee6 <module.45+0x6e8>
mov    %r13,%r15
jmpq   49553 <TIFFPrintDirectory+0x1093>
mov    0xb8(%r12),%rax
movzwl (%rax,%r14,2),%ecx
mov    0xc0(%r12),%rax
movzwl (%rax,%r14,2),%r8d
mov    0xc8(%r12),%rax
movzwl (%rax,%r14,2),%r9d
xor    %eax,%eax
mov    %rbx,%rdi
mov    %r15,%rsi
mov    %r14,%rdx
callq  86f0 <fprintf@plt>
add    $0x1,%r14
cmp    %r13,%r14
jl     4949f <TIFFPrintDirectory+0xfdf>
lea    0x2a98e(%rip),%rsi        # 73e74 <module.45+0x676>
xor    %r13d,%r13d
mov    -0x50(%rbp),%r14
lea    0x2a58c(%rip),%r15        # 73a80 <module.45+0x282>
jmpq   4934e <TIFFPrintDirectory+0xe8e>
mov    %r15,%rsi
xor    %eax,%eax
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
movzwl 0x74(%r12),%ecx
mov    $0x1,%r15d
mov    %r15,%rax
shl    %cl,%rax
mov    %rax,-0x58(%rbp)
lea    0x2a99e(%rip),%rsi        # 73ec1 <module.45+0x6c3>
lea    0x2a9a5(%rip),%r14        # 73ecf <module.45+0x6d1>
xor    %r13d,%r13d
jmpq   495da <TIFFPrintDirectory+0x111a>
mov    0x100(%r12),%rcx
movzwl %r15w,%eax
mov    (%rcx,%rax,8),%rdx
xor    %eax,%eax
mov    %rbx,%rdi
mov    %r14,%rsi
callq  86f0 <fprintf@plt>
add    $0x1,%r15d
movzwl 0xfc(%r12),%eax
cmp    %r15w,%ax
ja     49532 <TIFFPrintDirectory+0x1072>
mov    %rbx,%rsi
mov    $0xa,%edi
callq  85e0 <fputc@plt>
mov    %r12,%rdi
callq  8c50 <TIFFGetTagListCount@plt>
movswq %ax,%r15
mov    %r15,-0x58(%rbp)
mov    %r13,%r14
jmpq   4960c <TIFFPrintDirectory+0x114c>
movzwl %r15w,%eax
mov    0x110(%r12,%rax,8),%rax
movzwl (%rax,%r13,2),%edx
xor    %eax,%eax
mov    %rbx,%rdi
mov    %r14,%rsi
callq  86f0 <fprintf@plt>
add    $0x1,%r15d
movzwl 0x82(%r12),%eax
cmp    %r15w,%ax
ja     49587 <TIFFPrintDirectory+0x10c7>
mov    $0xa,%edi
mov    %rbx,%rsi
callq  85e0 <fputc@plt>
add    $0x1,%r13
lea    0x2a8f1(%rip),%rsi        # 73ec1 <module.45+0x6c3>
mov    -0x58(%rbp),%rax
mov    $0x1,%r15d
cmp    %rax,%r13
jl     4962b <TIFFPrintDirectory+0x116b>
xor    %r13d,%r13d
jmpq   4945a <TIFFPrintDirectory+0xf9a>
mov    %r12,%rdi
mov    %r14,%rsi
callq  88c0 <TIFFGetTagListEntry@plt>
mov    %rax,%r13
mov    %r12,%rdi
mov    %r13,%rsi
callq  8ae0 <TIFFFieldWithTag@plt>
test   %rax,%rax
jne    4964a <TIFFPrintDirectory+0x118a>
add    $0x1,%r14d
xor    %r13d,%r13d
cmp    %r14d,%r15d
jg     495e7 <TIFFPrintDirectory+0x1127>
mov    0x418(%r12),%rax
test   %rax,%rax
jne    496ff <TIFFPrintDirectory+0x123f>
mov    -0x50(%rbp),%r14
jmpq   4970e <TIFFPrintDirectory+0x124e>
mov    0x110(%r12),%rax
movzwl (%rax,%r13,2),%ecx
xor    %eax,%eax
mov    %rbx,%rdi
mov    %r13,%rdx
callq  86f0 <fprintf@plt>
jmpq   495a9 <TIFFPrintDirectory+0x10e9>
movzbl 0x1b(%rax),%ecx
test   %cl,%cl
jne    49739 <TIFFPrintDirectory+0x1279>
movswq 0x4(%rax),%rcx
cmp    $0xffff,%cx
jne    4978e <TIFFPrintDirectory+0x12ce>
mov    $0x1,%ecx
mov    %ecx,-0x6c(%rbp)
mov    (%rax),%ecx
cmp    $0x150,%ecx
je     497a2 <TIFFPrintDirectory+0x12e2>
mov    %r13,%rcx
mov    %rax,%r13
mov    0x8(%r13),%edi
cmp    $0x2,%edi
je     497cc <TIFFPrintDirectory+0x130c>
movswq 0x4(%r13),%rax
cmp    $0xffff,%ax
je     497cc <TIFFPrintDirectory+0x130c>
cmp    $0xfffd,%ax
je     497cc <TIFFPrintDirectory+0x130c>
cmp    $0xfffe,%ax
je     497cc <TIFFPrintDirectory+0x130c>
mov    -0x6c(%rbp),%eax
cmp    $0x1,%eax
ja     497cc <TIFFPrintDirectory+0x130c>
mov    %rcx,%r15
callq  80f0 <_TIFFDataSize@plt>
imul   -0x6c(%rbp),%eax
mov    %eax,%edi
callq  8440 <_TIFFmalloc@plt>
mov    %rax,%rdx
mov    %rdx,-0x68(%rbp)
xor    %eax,%eax
mov    %r12,%rdi
mov    %r15,%rsi
callq  8230 <TIFFGetField@plt>
cmp    $0x1,%eax
jne    4983a <TIFFPrintDirectory+0x137a>
mov    %r15,%rcx
mov    -0x58(%rbp),%r15
pushq  -0x30(%rbp)
popq   -0x40(%rbp)
jmpq   497f4 <TIFFPrintDirectory+0x1334>
mov    %r12,%rdi
mov    %rbx,%rsi
mov    -0x50(%rbp),%r14
mov    %r14,%rdx
callq  *%rax
mov    %r12,%rdi
callq  8c70 <_TIFFFillStriles@plt>
and    $0x1,%r14
test   %r14,%r14
jg     4984c <TIFFPrintDirectory+0x138c>
mov    -0x8(%rbp),%rbx
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
leaveq 
retq   
movswq 0x4(%rax),%rcx
cmp    $0xfffd,%cx
je     49876 <TIFFPrintDirectory+0x13b6>
cmp    $0xffff,%cx
jne    498ae <TIFFPrintDirectory+0x13ee>
xor    %r8d,%r8d
mov    %r12,%rdi
mov    %r13,%rsi
lea    -0x5a(%rbp),%rdx
lea    -0x68(%rbp),%rcx
mov    %r13,-0x48(%rbp)
mov    %rax,%r13
mov    %r8,%rax
callq  8230 <TIFFGetField@plt>
cmp    $0x1,%eax
jne    49605 <TIFFPrintDirectory+0x1145>
movzwl -0x5a(%rbp),%eax
mov    %eax,-0x6c(%rbp)
mov    -0x48(%rbp),%rcx
pushq  -0x38(%rbp)
popq   -0x40(%rbp)
jmp    497f4 <TIFFPrintDirectory+0x1334>
cmp    $0xfffd,%cx
jne    498cd <TIFFPrintDirectory+0x140d>
mov    $0x1,%ecx
jmpq   4966a <TIFFPrintDirectory+0x11aa>
mov    %r13,%r15
mov    %rax,%r13
mov    0x20(%r13),%rdi
lea    0x2a7a9(%rip),%rsi        # 73f5c <module.45+0x75e>
callq  8660 <strcmp@plt>
test   %eax,%eax
je     498e5 <TIFFPrintDirectory+0x1425>
mov    %r15,%rcx
mov    -0x58(%rbp),%r15
jmpq   49681 <TIFFPrintDirectory+0x11c1>
xor    %eax,%eax
mov    %r12,%rdi
mov    %rcx,%rsi
lea    -0x68(%rbp),%rdx
mov    %rcx,-0x48(%rbp)
callq  8230 <TIFFGetField@plt>
cmp    $0x1,%eax
jne    49605 <TIFFPrintDirectory+0x1145>
mov    -0x48(%rbp),%rcx
pushq  -0x38(%rbp)
popq   -0x40(%rbp)
mov    -0x6c(%rbp),%r8d
mov    -0x68(%rbp),%r9
mov    %r12,%rdi
mov    %r13,%rsi
mov    %rbx,%rdx
callq  49e10 <_TIFFPrettyPrintField>
test   %eax,%eax
jne    49820 <TIFFPrintDirectory+0x1360>
mov    %r13,%rsi
mov    -0x6c(%rbp),%edx
mov    -0x68(%rbp),%rcx
mov    %rbx,%rdi
callq  49b40 <_TIFFPrintField>
mov    -0x40(%rbp),%rax
test   %eax,%eax
jle    49605 <TIFFPrintDirectory+0x1145>
mov    -0x68(%rbp),%rdi
callq  8bb0 <_TIFFfree@plt>
jmpq   49605 <TIFFPrintDirectory+0x1145>
mov    -0x68(%rbp),%rdi
callq  8bb0 <_TIFFfree@plt>
mov    -0x58(%rbp),%r15
jmpq   49605 <TIFFPrintDirectory+0x1145>
mov    0x38(%r12),%rax
and    $0x2000000,%rax
test   %rax,%rax
jne    49916 <TIFFPrintDirectory+0x1456>
mov    -0x8(%rbp),%rbx
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
leaveq 
retq   
xor    %r8d,%r8d
mov    %r12,%rdi
mov    %r13,%rsi
lea    -0x6c(%rbp),%rdx
lea    -0x68(%rbp),%rcx
mov    %r13,-0x40(%rbp)
mov    %rax,%r13
mov    %r8,%rax
callq  8230 <TIFFGetField@plt>
cmp    $0x1,%eax
jne    49605 <TIFFPrintDirectory+0x1145>
mov    -0x40(%rbp),%rcx
pushq  -0x38(%rbp)
popq   -0x40(%rbp)
jmpq   497f4 <TIFFPrintDirectory+0x1334>
lea    0x2a638(%rip),%rdi        # 73eed <module.45+0x6ef>
lea    0x2a681(%rip),%rsi        # 73f3d <module.45+0x73f>
mov    $0x258,%edx
lea    0x2a681(%rip),%rcx        # 73f49 <module.45+0x74b>
callq  8490 <__assert_fail@plt>
cmp    $0xfffe,%cx
jne    4966a <TIFFPrintDirectory+0x11aa>
movzwl 0x82(%r12),%ecx
jmpq   4966a <TIFFPrintDirectory+0x11aa>
lea    0x3116c(%rip),%rdx        # 7aa58 <dotrange.90>
mov    %rdx,-0x68(%rbp)
xor    %eax,%eax
mov    %r12,%rdi
mov    %r15,%rsi
lea    0x3115b(%rip),%rcx        # 7aa5a <dotrange.90+0x2>
callq  8230 <TIFFGetField@plt>
mov    %r15,%rcx
mov    -0x58(%rbp),%r15
pushq  -0x38(%rbp)
popq   -0x40(%rbp)
jmpq   497f4 <TIFFPrintDirectory+0x1334>
mov    0xe4(%r12),%edx
mov    0x10(%r12),%eax
and    $0x400,%eax
test   %eax,%eax
jne    49935 <TIFFPrintDirectory+0x1475>
lea    0x2a643(%rip),%rcx        # 73f76 <module.45+0x778>
jmp    4993c <TIFFPrintDirectory+0x147c>
lea    0x2a634(%rip),%rcx        # 73f70 <module.45+0x772>
xor    %eax,%eax
lea    0x2a620(%rip),%rsi        # 73f65 <module.45+0x767>
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
lea    0x2a629(%rip),%r14        # 73f7d <module.45+0x77f>
jmp    49982 <TIFFPrintDirectory+0x14c2>
mov    0xe8(%r12),%rax
mov    %r13d,%edx
mov    (%rax,%rdx,8),%rcx
mov    0xf0(%r12),%rax
mov    (%rax,%rdx,8),%r8
xor    %eax,%eax
mov    %rbx,%rdi
mov    %r14,%rsi
callq  86f0 <fprintf@plt>
add    $0x1,%r13d
mov    0xe4(%r12),%eax
cmp    %r13d,%eax
ja     49956 <TIFFPrintDirectory+0x1496>
mov    -0x8(%rbp),%rbx
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)

00000000000499b0 <_TIFFprintAscii>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rsi,%r14
mov    %rdi,%r15
mov    %r14,%rdi
callq  8350 <strlen@plt>
mov    %rax,%rdx
mov    %r14,%rsi
mov    %r15,%rdi
callq  49a40 <_TIFFprintAsciiBounded>
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)

00000000000499f0 <_TIFFprintAsciiTag>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rdx,%r15
mov    %rsi,%rdx
xor    %eax,%eax
lea    0x2a588(%rip),%rsi        # 73f97 <module.45+0x799>
mov    %rdi,%r14
callq  86f0 <fprintf@plt>
mov    %r15,%rsi
mov    %r14,%rdi
callq  8cc0 <_TIFFprintAscii@plt>
mov    %r14,%rdi
lea    0x2a573(%rip),%rsi        # 73f9f <module.45+0x7a1>
xor    %eax,%eax
callq  86f0 <fprintf@plt>
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
nopl   (%rax)

0000000000049a40 <_TIFFprintAsciiBounded>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %rsi,%rbx
mov    %rdx,%r12
mov    %rdi,%r13
callq  8d20 <__ctype_b_loc@plt>
mov    %rax,%r14
lea    0x2a539(%rip),%r8        # 73fad <module.45+0x7af>
lea    0x2a536(%rip),%rsi        # 73fb1 <module.45+0x7b3>
lea    0x2a520(%rip),%r15        # 73fa2 <module.45+0x7a4>
jmp    49aa2 <_TIFFprintAsciiBounded+0x62>
mov    %r13,%rsi
callq  85e0 <fputc@plt>
add    $0x1,%rbx
add    $0xffffffffffffffff,%r12
lea    0x2a516(%rip),%rsi        # 73fb1 <module.45+0x7b3>
lea    0x2a50b(%rip),%r8        # 73fad <module.45+0x7af>
test   %r12,%r12
jne    49abd <_TIFFprintAsciiBounded+0x7d>
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
leaveq 
retq   
movsbq (%rbx),%rdi
test   %dil,%dil
je     49adb <_TIFFprintAsciiBounded+0x9b>
mov    (%r14),%rax
movzwl (%rax,%rdi,2),%eax
and    $0x4000,%eax
test   %eax,%eax
jg     49a84 <_TIFFprintAsciiBounded+0x44>
mov    %r15,%rcx
jmp    49af5 <_TIFFprintAsciiBounded+0xb5>
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
leaveq 
retq   
add    $0x2,%rcx
movsbq (%rcx),%rax
test   %al,%al
je     49b09 <_TIFFprintAsciiBounded+0xc9>
movsbq (%rbx),%rdx
cmp    %al,%dl
jne    49af1 <_TIFFprintAsciiBounded+0xb1>
add    $0x1,%rcx
movsbq (%rcx),%rdx
test   %dl,%dl
jne    49b27 <_TIFFprintAsciiBounded+0xe7>
xor    %eax,%eax
movsbq (%rbx),%rcx
movzbl %cl,%edx
mov    %r13,%rdi
callq  86f0 <fprintf@plt>
jmpq   49a8c <_TIFFprintAsciiBounded+0x4c>
mov    %r8,%rsi
xor    %eax,%eax
mov    %r13,%rdi
callq  86f0 <fprintf@plt>
jmpq   49a8c <_TIFFprintAsciiBounded+0x4c>
nopl   0x0(%rax)

0000000000049b40 <_TIFFPrintField>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rsi,%r12
mov    %rdx,%r13
mov    %rcx,%r15
mov    %r15,-0x30(%rbp)
xor    %r14d,%r14d
lea    0x2a591(%rip),%rsi        # 74104 <module.45+0x906>
mov    0x20(%r12),%rdx
mov    %r14,%rax
mov    %rdi,%rbx
callq  86f0 <fprintf@plt>
lea    0x2a581(%rip),%rsi        # 7410b <module.45+0x90d>
lea    0x2a57d(%rip),%r8        # 7410e <module.45+0x910>
lea    0x2a57b(%rip),%r9        # 74113 <module.45+0x915>
lea    0x2a577(%rip),%r10        # 74116 <module.45+0x918>
lea    0x2a574(%rip),%r11        # 7411a <module.45+0x91c>
lea    -0x1(%r13),%eax
mov    %r15,%rdx
mov    %rax,%r15
jmp    49c01 <_TIFFPrintField+0xc1>
movzbl (%rdx,%rcx,1),%edx
xor    %eax,%eax
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
cmp    %r15d,%r14d
jae    49bd6 <_TIFFPrintField+0x96>
xor    %eax,%eax
mov    %rbx,%rdi
lea    0x2a58f(%rip),%rsi        # 74160 <module.45+0x962>
callq  86f0 <fprintf@plt>
add    $0x1,%r14d
lea    0x2a532(%rip),%r9        # 74113 <module.45+0x915>
lea    0x2a526(%rip),%r8        # 7410e <module.45+0x910>
lea    0x2a51c(%rip),%rsi        # 7410b <module.45+0x90d>
mov    -0x30(%rbp),%rdx
lea    0x2a51c(%rip),%r10        # 74116 <module.45+0x918>
lea    0x2a519(%rip),%r11        # 7411a <module.45+0x91c>
cmp    %r13d,%r14d
jae    49cc5 <_TIFFPrintField+0x185>
mov    %r14d,%ecx
mov    0x8(%r12),%eax
cmp    $0x1,%eax
je     49bb2 <_TIFFPrintField+0x72>
cmp    $0x7,%eax
je     49cec <_TIFFPrintField+0x1ac>
cmp    $0x6,%eax
je     49d02 <_TIFFPrintField+0x1c2>
cmp    $0x3,%eax
je     49d19 <_TIFFPrintField+0x1d9>
cmp    $0x8,%eax
je     49d2c <_TIFFPrintField+0x1ec>
cmp    $0x4,%eax
je     49d43 <_TIFFPrintField+0x203>
cmp    $0x9,%eax
je     49d58 <_TIFFPrintField+0x218>
cmp    $0xd,%eax
je     49d6e <_TIFFPrintField+0x22e>
cmp    $0x5,%eax
jne    49c7d <_TIFFPrintField+0x13d>
movss  (%rdx,%rcx,4),%xmm0
cvtss2sd %xmm0,%xmm0
mov    $0x1,%eax
mov    %rbx,%rdi
lea    0x2a4b1(%rip),%rsi        # 74124 <module.45+0x926>
callq  86f0 <fprintf@plt>
jmpq   49bc0 <_TIFFPrintField+0x80>
cmp    $0xa,%eax
je     49c5b <_TIFFPrintField+0x11b>
cmp    $0xb,%eax
je     49c5b <_TIFFPrintField+0x11b>
cmp    $0x10,%eax
je     49d87 <_TIFFPrintField+0x247>
cmp    $0x11,%eax
je     49da1 <_TIFFPrintField+0x261>
cmp    $0x12,%eax
je     49dbb <_TIFFPrintField+0x27b>
cmp    $0xc,%eax
je     49dd5 <_TIFFPrintField+0x295>
cmp    $0x2,%eax
je     49df3 <_TIFFPrintField+0x2b3>
xor    %eax,%eax
lea    0x2a47e(%rip),%rsi        # 7413b <module.45+0x93d>
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
mov    %rbx,%rdi
xor    %eax,%eax
lea    0x29daf(%rip),%rsi        # 73a80 <module.45+0x282>
callq  86f0 <fprintf@plt>
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
movzbl (%rdx,%rcx,1),%edx
mov    %r8,%rsi
xor    %eax,%eax
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
jmpq   49bc0 <_TIFFPrintField+0x80>
movsbq (%rdx,%rcx,1),%rdx
mov    %r9,%rsi
xor    %eax,%eax
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
jmpq   49bc0 <_TIFFPrintField+0x80>
movzwl (%rdx,%rcx,2),%edx
xor    %eax,%eax
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
jmpq   49bc0 <_TIFFPrintField+0x80>
movswq (%rdx,%rcx,2),%rdx
mov    %r9,%rsi
xor    %eax,%eax
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
jmpq   49bc0 <_TIFFPrintField+0x80>
mov    (%rdx,%rcx,4),%edx
mov    %r10,%rsi
xor    %eax,%eax
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
jmpq   49bc0 <_TIFFPrintField+0x80>
movslq (%rdx,%rcx,4),%rdx
mov    %r11,%rsi
xor    %eax,%eax
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
jmpq   49bc0 <_TIFFPrintField+0x80>
mov    (%rdx,%rcx,4),%edx
xor    %eax,%eax
mov    %rbx,%rdi
lea    0x2a3a1(%rip),%rsi        # 7411e <module.45+0x920>
callq  86f0 <fprintf@plt>
jmpq   49bc0 <_TIFFPrintField+0x80>
mov    (%rdx,%rcx,8),%rdx
xor    %eax,%eax
mov    %rbx,%rdi
lea    0x2a390(%rip),%rsi        # 74127 <module.45+0x929>
callq  86f0 <fprintf@plt>
jmpq   49bc0 <_TIFFPrintField+0x80>
mov    (%rdx,%rcx,8),%rdx
xor    %eax,%eax
mov    %rbx,%rdi
lea    0x2a37b(%rip),%rsi        # 7412c <module.45+0x92e>
callq  86f0 <fprintf@plt>
jmpq   49bc0 <_TIFFPrintField+0x80>
mov    (%rdx,%rcx,8),%rdx
xor    %eax,%eax
mov    %rbx,%rdi
lea    0x2a366(%rip),%rsi        # 74131 <module.45+0x933>
callq  86f0 <fprintf@plt>
jmpq   49bc0 <_TIFFPrintField+0x80>
movsd  (%rdx,%rcx,8),%xmm0
mov    $0x1,%eax
mov    %rbx,%rdi
lea    0x2a33b(%rip),%rsi        # 74124 <module.45+0x926>
callq  86f0 <fprintf@plt>
jmpq   49bc0 <_TIFFPrintField+0x80>
xor    %eax,%eax
lea    0x2a33c(%rip),%rsi        # 74138 <module.45+0x93a>
mov    %rbx,%rdi
callq  86f0 <fprintf@plt>
jmpq   49cc5 <_TIFFPrintField+0x185>
nopl   0x0(%rax)

0000000000049e10 <_TIFFPrettyPrintField>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    %rcx,-0x30(%rbp)
mov    %r8,-0x28(%rbp)
mov    %rsi,-0x20(%rbp)
mov    %rdx,-0x10(%rbp)
mov    %r9,-0x18(%rbp)
mov    0x20(%rsi),%rdi
lea    0x2a32b(%rip),%rsi        # 74162 <module.45+0x964>
mov    $0x4,%edx
callq  8120 <strncmp@plt>
test   %eax,%eax
jne    49e49 <_TIFFPrettyPrintField+0x39>
xor    %eax,%eax
leaveq 
retq   
mov    -0x30(%rbp),%rax
cmp    $0x83ba,%eax
jbe    49e6d <_TIFFPrettyPrintField+0x5d>
cmp    $0x8772,%eax
jbe    49e86 <_TIFFPrettyPrintField+0x76>
cmp    $0x8773,%eax
je     49ea0 <_TIFFPrettyPrintField+0x90>
cmp    $0x923f,%eax
je     49ebf <_TIFFPrettyPrintField+0xaf>
xor    %eax,%eax
leaveq 
retq   
cmp    $0x14f,%eax
jbe    49ed0 <_TIFFPrettyPrintField+0xc0>
cmp    $0x150,%eax
je     49eea <_TIFFPrettyPrintField+0xda>
cmp    $0x2bc,%eax
je     49efb <_TIFFPrettyPrintField+0xeb>
xor    %eax,%eax
leaveq 
retq   
cmp    $0x83bb,%eax
je     49f33 <_TIFFPrettyPrintField+0x123>
cmp    $0x8649,%eax
je     49f56 <_TIFFPrettyPrintField+0x146>
xor    %eax,%eax
leaveq 
retq   
xor    %eax,%eax
lea    0x2a36a(%rip),%rsi        # 74213 <module.45+0xa15>
mov    -0x28(%rbp),%rcx
mov    %ecx,%edx
mov    -0x10(%rbp),%rdi
callq  86f0 <fprintf@plt>
mov    $0x1,%eax
leaveq 
retq   
mov    -0x28(%rbp),%rax
cmp    $0x1,%eax
je     49f75 <_TIFFPrettyPrintField+0x165>
xor    %eax,%eax
leaveq 
retq   
cmp    $0x13e,%eax
je     49f85 <_TIFFPrettyPrintField+0x175>
cmp    $0x14c,%eax
je     49f96 <_TIFFPrettyPrintField+0x186>
xor    %eax,%eax
leaveq 
retq   
mov    -0x28(%rbp),%rax
cmp    $0x2,%eax
je     49fa7 <_TIFFPrettyPrintField+0x197>
xor    %eax,%eax
leaveq 
retq   
xor    %eax,%eax
lea    0x2a29f(%rip),%rsi        # 741a3 <module.45+0x9a5>
mov    -0x10(%rbp),%rcx
mov    %rcx,%rdi
mov    %r15,-0x30(%rbp)
mov    %rcx,%r15
callq  86f0 <fprintf@plt>
mov    %r12,-0x8(%rbp)
mov    %r13,-0x10(%rbp)
mov    %r14,-0x20(%rbp)
xor    %r12d,%r12d
mov    -0x18(%rbp),%r13
mov    -0x28(%rbp),%r14
jmpq   49fd0 <_TIFFPrettyPrintField+0x1c0>
xor    %eax,%eax
lea    0x2a284(%rip),%rsi        # 741c0 <module.45+0x9c2>
mov    -0x28(%rbp),%rcx
mov    %ecx,%edx
shl    $0x2,%rdx
mov    -0x10(%rbp),%rdi
callq  86f0 <fprintf@plt>
mov    $0x1,%eax
leaveq 
retq   
xor    %eax,%eax
lea    0x2a28c(%rip),%rsi        # 741eb <module.45+0x9ed>
mov    -0x28(%rbp),%rcx
mov    %ecx,%edx
mov    -0x10(%rbp),%rdi
callq  86f0 <fprintf@plt>
mov    $0x1,%eax
leaveq 
retq   
mov    -0x20(%rbp),%rax
mov    0x8(%rax),%eax
cmp    $0xc,%eax
je     49ffd <_TIFFPrettyPrintField+0x1ed>
xor    %eax,%eax
leaveq 
retq   
mov    -0x28(%rbp),%rax
cmp    $0x2,%eax
je     4a021 <_TIFFPrettyPrintField+0x211>
xor    %eax,%eax
leaveq 
retq   
mov    -0x28(%rbp),%rax
cmp    $0x2,%eax
je     4a031 <_TIFFPrettyPrintField+0x221>
xor    %eax,%eax
leaveq 
retq   
mov    -0x20(%rbp),%rax
mov    0x8(%rax),%eax
cmp    $0x3,%eax
je     4a041 <_TIFFPrettyPrintField+0x231>
xor    %eax,%eax
leaveq 
retq   
mov    %r12d,%eax
movsbq 0x0(%r13,%rax,1),%rdi
mov    %r15,%rsi
callq  85e0 <fputc@plt>
add    $0x1,%r12d
cmp    %r12d,%r14d
ja     49fbb <_TIFFPrettyPrintField+0x1ab>
mov    %r15,%rdi
xor    %eax,%eax
lea    0x29a9f(%rip),%rsi        # 73a80 <module.45+0x282>
callq  86f0 <fprintf@plt>
mov    -0x20(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
mov    $0x1,%eax
mov    -0x30(%rbp),%r15
leaveq 
retq   
mov    $0x1,%eax
lea    0x2a22f(%rip),%rsi        # 74238 <module.45+0xa3a>
mov    -0x18(%rbp),%rcx
movsd  (%rcx),%xmm0
mov    -0x10(%rbp),%rdi
callq  86f0 <fprintf@plt>
mov    $0x1,%eax
leaveq 
retq   
mov    -0x20(%rbp),%rax
mov    0x8(%rax),%eax
cmp    $0x5,%eax
je     4a065 <_TIFFPrettyPrintField+0x255>
xor    %eax,%eax
leaveq 
retq   
mov    -0x20(%rbp),%rax
mov    0x8(%rax),%eax
cmp    $0x3,%eax
je     4a096 <_TIFFPrettyPrintField+0x286>
xor    %eax,%eax
leaveq 
retq   
xor    %eax,%eax
lea    0x2a12f(%rip),%rsi        # 74179 <module.45+0x97b>
mov    -0x18(%rbp),%rcx
movzwl (%rcx),%edx
movzwl 0x2(%rcx),%ecx
mov    -0x10(%rbp),%rdi
callq  86f0 <fprintf@plt>
mov    $0x1,%eax
leaveq 
retq   
mov    $0x2,%eax
lea    0x2a11c(%rip),%rsi        # 7418d <module.45+0x98f>
mov    -0x18(%rbp),%rcx
movss  (%rcx),%xmm0
cvtss2sd %xmm0,%xmm0
movss  0x4(%rcx),%xmm1
cvtss2sd %xmm1,%xmm1
mov    -0x10(%rbp),%rdi
callq  86f0 <fprintf@plt>
mov    $0x1,%eax
leaveq 
retq   
xor    %eax,%eax
lea    0x2a0c8(%rip),%rsi        # 74167 <module.45+0x969>
mov    -0x10(%rbp),%rdi
mov    %rdi,%rcx
mov    %r15,-0x30(%rbp)
mov    %rdi,%r15
mov    %rcx,%rdi
callq  86f0 <fprintf@plt>
mov    -0x18(%rbp),%rax
movzwl (%rax),%edx
cmp    $0x1,%dx
je     4a0e1 <_TIFFPrettyPrintField+0x2d1>
mov    %r15,%rdi
xor    %eax,%eax
lea    0x29ade(%rip),%rsi        # 73bac <module.45+0x3ae>
mov    %rdx,%rcx
callq  86f0 <fprintf@plt>
mov    $0x1,%eax
mov    -0x30(%rbp),%r15
leaveq 
retq   
mov    %r15,%rdi
xor    %eax,%eax
lea    0x2a086(%rip),%rsi        # 74173 <module.45+0x975>
callq  86f0 <fprintf@plt>
mov    $0x1,%eax
mov    -0x30(%rbp),%r15
leaveq 
retq   
nopl   (%rax)

000000000004a100 <TIFFReadBufferSetup>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    0x10(%rdi),%eax
mov    %rax,%rcx
and    $0x20000,%ecx
test   %ecx,%ecx
je     4a137 <TIFFReadBufferSetup+0x37>
lea    0x2a157(%rip),%rdi        # 74276 <module.8+0x14>
lea    0x2a173(%rip),%rsi        # 74299 <module.8+0x37>
mov    $0x56c,%edx
lea    0x2a172(%rip),%rcx        # 742a4 <module.8+0x42>
callq  8490 <__assert_fail@plt>
mov    %rax,%rcx
and    $0xff7fffff,%ecx
mov    %ecx,0x10(%rdi)
mov    0x368(%rdi),%rcx
test   %rcx,%rcx
jne    4a157 <TIFFReadBufferSetup+0x57>
mov    %r15,%r8
mov    %rdi,%r15
jmp    4a1ad <TIFFReadBufferSetup+0xad>
and    $0x200,%eax
test   %eax,%eax
jne    4a168 <TIFFReadBufferSetup+0x68>
mov    %r15,%r8
mov    %rdi,%r15
jmp    4a197 <TIFFReadBufferSetup+0x97>
mov    %r13,-0x8(%rbp)
mov    %r14,-0x10(%rbp)
mov    %r15,-0x18(%rbp)
mov    %rsi,%r13
mov    %rdx,%r14
mov    %rdi,%r15
mov    %rcx,%rdi
callq  8bb0 <_TIFFfree@plt>
mov    %r14,%rdx
mov    %r13,%rsi
mov    -0x18(%rbp),%r8
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
movq   $0x0,0x368(%r15)
movq   $0x0,0x370(%r15)
lea    0x2a0ae(%rip),%r9        # 74262 <module.8>
mov    $0x1,%eax
test   %rsi,%rsi
jne    4a214 <TIFFReadBufferSetup+0x114>
add    $0x3ff,%rdx
mov    %rdx,%rsi
and    $0xfffffffffffffc00,%rsi
mov    %rsi,0x370(%r15)
mov    %rdx,%rcx
and    $0x3ff,%rcx
cmp    %rcx,%rdx
je     4a241 <TIFFReadBufferSetup+0x141>
mov    %r8,-0x18(%rbp)
mov    %rax,%rdi
callq  84d0 <_TIFFcalloc@plt>
mov    %rax,0x368(%r15)
mov    0x10(%r15),%ecx
or     $0x200,%ecx
lea    0x2a059(%rip),%r9        # 74262 <module.8>
mov    $0x1,%eax
mov    -0x18(%rbp),%r8
jmp    4a22c <TIFFReadBufferSetup+0x12c>
mov    %rdx,0x370(%r15)
mov    %rsi,0x368(%r15)
mov    0x10(%r15),%ecx
and    $0xfffffdff,%ecx
mov    %ecx,0x10(%r15)
mov    0x368(%r15),%rcx
test   %rcx,%rcx
je     4a260 <TIFFReadBufferSetup+0x160>
mov    %r8,%r15
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
mov    %r9,%rsi
mov    %r8,%r15
lea    0x2a061(%rip),%rdx        # 742b8 <module.8+0x56>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
lea    0x2a05c(%rip),%rdx        # 742cc <module.8+0x6a>
mov    0x27c(%r15),%ecx
mov    %r8,-0x18(%rbp)
mov    %r9,%rsi
callq  8a00 <TIFFErrorExt@plt>
movq   $0x0,0x370(%r15)
xor    %eax,%eax
mov    -0x18(%rbp),%r15
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)

000000000004a2a0 <TIFFReadScanline>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %rdi,-0x10(%rbp)
mov    %rdx,-0x18(%rbp)
mov    %rcx,-0x20(%rbp)
mov    %rsi,-0x8(%rbp)
xor    %esi,%esi
callq  4b9e0 <TIFFCheckRead>
test   %eax,%eax
jne    4a2cc <TIFFReadScanline+0x2c>
mov    $0xffffffffffffffff,%rax
leaveq 
retq   
mov    -0x10(%rbp),%rax
mov    %rax,%rdi
mov    -0x18(%rbp),%rcx
mov    %rcx,%rsi
mov    -0x20(%rbp),%rdx
mov    %r14,-0x10(%rbp)
mov    %r15,-0x18(%rbp)
mov    %rax,%r14
mov    %rcx,%r15
callq  4c510 <TIFFSeek>
test   %eax,%eax
jne    4a30c <TIFFReadScanline+0x6c>
xor    %r14d,%r14d
test   %r14d,%r14d
jle    4a33b <TIFFReadScanline+0x9b>
mov    $0x1,%eax
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
leaveq 
retq   
add    $0x1,%r15d
mov    0x2f8(%r14),%rax
mov    0x358(%r14),%rdx
mov    %r14,%rdi
mov    -0x8(%rbp),%rsi
mov    -0x20(%rbp),%rcx
callq  *%rax
mov    %r15d,0x27c(%r14)
test   %eax,%eax
jne    4a34c <TIFFReadScanline+0xac>
xor    %r14d,%r14d
jmp    4a2f8 <TIFFReadScanline+0x58>
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
mov    $0xffffffffffffffff,%rax
leaveq 
retq   
mov    %r14,%rdi
mov    %rax,%r14
mov    0x3e8(%rdi),%rcx
mov    0x358(%rdi),%rdx
mov    -0x8(%rbp),%rsi
callq  *%rcx
jmp    4a2f8 <TIFFReadScanline+0x58>
nopl   0x0(%rax,%rax,1)

000000000004a370 <TIFFReadTile>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    %rdi,-0x10(%rbp)
mov    %rdx,-0x18(%rbp)
mov    %rcx,-0x20(%rbp)
mov    %r8,-0x28(%rbp)
mov    %r9,-0x30(%rbp)
mov    %rsi,-0x8(%rbp)
mov    $0x1,%esi
callq  4b9e0 <TIFFCheckRead>
test   %eax,%eax
jne    4a3a7 <TIFFReadTile+0x37>
mov    $0xffffffffffffffff,%rax
leaveq 
retq   
mov    -0x10(%rbp),%rdi
mov    -0x18(%rbp),%rsi
mov    -0x20(%rbp),%rdx
mov    -0x28(%rbp),%rcx
mov    -0x30(%rbp),%r8
callq  8030 <TIFFCheckTile@plt>
test   %eax,%eax
jne    4a3cd <TIFFReadTile+0x5d>
mov    $0xffffffffffffffff,%rax
leaveq 
retq   
mov    -0x10(%rbp),%rax
mov    %rax,%rdi
mov    %r15,-0x10(%rbp)
mov    %rax,%r15
mov    -0x30(%rbp),%r8
mov    -0x28(%rbp),%rcx
mov    -0x20(%rbp),%rdx
mov    -0x18(%rbp),%rsi
callq  8110 <TIFFComputeTile@plt>
mov    %rax,%rsi
mov    %r15,%rdi
mov    $0xffffffffffffffff,%rcx
mov    -0x8(%rbp),%rdx
callq  89d0 <TIFFReadEncodedTile@plt>
mov    -0x10(%rbp),%r15
leaveq 
retq   
nopl   0x0(%rax)

000000000004a410 <TIFFReadEncodedStrip>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    %r15,-0x8(%rbp)
mov    %rcx,-0x20(%rbp)
mov    %rsi,-0x18(%rbp)
mov    %rdx,-0x10(%rbp)
lea    -0x22(%rbp),%rdx
mov    %rdi,%r15
callq  4c6f0 <TIFFReadEncodedStripGetStripSize>
cmp    $0xffffffffffffffff,%rax
jne    4a447 <TIFFReadEncodedStrip+0x37>
mov    $0xffffffffffffffff,%rax
mov    -0x8(%rbp),%r15
leaveq 
retq   
movzwl 0x78(%r15),%ecx
cmp    $0x1,%cx
je     4a481 <TIFFReadEncodedStrip+0x71>
mov    -0x20(%rbp),%rcx
cmp    $0xffffffffffffffff,%rcx
jne    4a4e2 <TIFFReadEncodedStrip+0xd2>
mov    %rax,-0x20(%rbp)
mov    %r15,%rdi
mov    -0x18(%rbp),%rsi
callq  8880 <TIFFFillStrip@plt>
test   %eax,%eax
jne    4a4f3 <TIFFReadEncodedStrip+0xe3>
mov    $0xffffffffffffffff,%rax
mov    -0x8(%rbp),%r15
leaveq 
retq   
mov    -0x20(%rbp),%rcx
cmp    $0xffffffffffffffff,%rcx
je     4a456 <TIFFReadEncodedStrip+0x46>
cmp    %rcx,%rax
jg     4a456 <TIFFReadEncodedStrip+0x46>
mov    0x10(%r15),%edx
mov    %rdx,%rsi
and    $0x800,%esi
test   %esi,%esi
jne    4a456 <TIFFReadEncodedStrip+0x46>
and    $0x20000,%edx
test   %edx,%edx
jne    4a456 <TIFFReadEncodedStrip+0x46>
lea    0x29e43(%rip),%r8        # 742f5 <module.14>
mov    %r15,%rdi
mov    -0x10(%rbp),%rdx
mov    %rax,%rcx
mov    %r14,-0x20(%rbp)
mov    %rax,%r14
mov    -0x18(%rbp),%rsi
callq  4ba60 <TIFFReadRawStrip1>
cmp    %rax,%r14
je     4a526 <TIFFReadEncodedStrip+0x116>
mov    -0x20(%rbp),%r14
mov    $0xffffffffffffffff,%rax
mov    -0x8(%rbp),%r15
leaveq 
retq   
cmp    %rcx,%rax
jle    4a460 <TIFFReadEncodedStrip+0x50>
mov    %rcx,%rax
jmpq   4a460 <TIFFReadEncodedStrip+0x50>
mov    0x308(%r15),%rax
movzwl -0x22(%rbp),%ecx
mov    %r15,%rdi
mov    -0x10(%rbp),%rsi
mov    -0x20(%rbp),%r8
mov    %r8,%rdx
mov    %r15,-0x20(%rbp)
mov    %r8,%r15
callq  *%rax
test   %eax,%eax
jg     4a552 <TIFFReadEncodedStrip+0x142>
mov    $0xffffffffffffffff,%rax
mov    -0x8(%rbp),%r15
leaveq 
retq   
mov    0x10(%r15),%ecx
movzwl 0x7e(%r15),%eax
and    %ecx,%eax
test   %eax,%eax
je     4a56c <TIFFReadEncodedStrip+0x15c>
mov    -0x10(%rbp),%rsi
mov    %r15,%rdi
mov    %r14,%rdx
callq  *0x3e8(%rdi)
mov    %r14,%rax
mov    -0x20(%rbp),%r14
mov    -0x8(%rbp),%r15
leaveq 
retq   
mov    %r15,%rdx
mov    -0x20(%rbp),%rdi
mov    -0x10(%rbp),%rsi
callq  *0x3e8(%rdi)
mov    %r15,%rax
mov    -0x8(%rbp),%r15
leaveq 
retq   
and    $0x100,%ecx
test   %ecx,%ecx
je     4a57c <TIFFReadEncodedStrip+0x16c>
mov    -0x10(%rbp),%rsi
jmp    4a539 <TIFFReadEncodedStrip+0x129>
mov    -0x10(%rbp),%rax
mov    %rax,%rdi
mov    %r14,%rsi
mov    %r13,-0x18(%rbp)
mov    %rax,%r13
callq  8700 <TIFFReverseBits@plt>
mov    %r13,%rsi
mov    -0x18(%rbp),%r13
jmp    4a539 <TIFFReadEncodedStrip+0x129>
nopl   0x0(%rax,%rax,1)

000000000004a5a0 <TIFFReadRawStrip>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %rdi,-0x18(%rbp)
mov    %rsi,-0x20(%rbp)
mov    %rcx,-0x10(%rbp)
mov    %rdx,-0x8(%rbp)
xor    %esi,%esi
callq  4b9e0 <TIFFCheckRead>
test   %eax,%eax
jne    4a5cc <TIFFReadRawStrip+0x2c>
mov    $0xffffffffffffffff,%rax
leaveq 
retq   
lea    0x29d37(%rip),%rsi        # 7430a <module.15>
mov    -0x18(%rbp),%rdi
mov    0xe4(%rdi),%r8d
mov    -0x20(%rbp),%r9
cmp    %r9d,%r8d
jbe    4a621 <TIFFReadRawStrip+0x81>
mov    0x10(%rdi),%eax
and    $0x20000,%eax
test   %eax,%eax
jne    4a642 <TIFFReadRawStrip+0xa2>
mov    0xf0(%rdi),%rcx
mov    %r9d,%eax
mov    (%rcx,%rax,8),%rcx
test   %rcx,%rcx
je     4a660 <TIFFReadRawStrip+0xc0>
mov    -0x10(%rbp),%rax
cmp    $0xffffffffffffffff,%rax
jne    4a683 <TIFFReadRawStrip+0xe3>
mov    %rsi,%r8
mov    %r9,%rsi
mov    -0x8(%rbp),%rdx
callq  4ba60 <TIFFReadRawStrip1>
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
lea    0x29cea(%rip),%rdx        # 7431b <module.15+0x11>
mov    %r9d,%ecx
callq  8a00 <TIFFErrorExt@plt>
mov    $0xffffffffffffffff,%rax
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
lea    0x29cea(%rip),%rdx        # 7433c <module.15+0x32>
callq  8a00 <TIFFErrorExt@plt>
mov    $0xffffffffffffffff,%rax
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
lea    0x29d10(%rip),%rdx        # 74380 <module.15+0x76>
mov    %r9d,%r8d
xor    %ecx,%ecx
callq  8a00 <TIFFErrorExt@plt>
mov    $0xffffffffffffffff,%rax
leaveq 
retq   
cmp    %rcx,%rax
jge    4a610 <TIFFReadRawStrip+0x70>
mov    %rax,%rcx
jmp    4a610 <TIFFReadRawStrip+0x70>
nopl   (%rax)

000000000004a690 <TIFFReadEncodedTile>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    %rdi,-0x20(%rbp)
mov    %rsi,-0x28(%rbp)
mov    %rcx,-0x18(%rbp)
mov    %rdx,-0x8(%rbp)
mov    0x2b0(%rdi),%rax
mov    %rax,-0x10(%rbp)
mov    $0x1,%esi
callq  4b9e0 <TIFFCheckRead>
test   %eax,%eax
jne    4a6ca <TIFFReadEncodedTile+0x3a>
mov    $0xffffffffffffffff,%rax
leaveq 
retq   
lea    0x29cd9(%rip),%r8        # 743aa <module.19>
mov    -0x20(%rbp),%rdi
mov    0xe4(%rdi),%r9d
mov    -0x28(%rbp),%rsi
cmp    %esi,%r9d
jbe    4a713 <TIFFReadEncodedTile+0x83>
movzwl 0x78(%rdi),%eax
cmp    $0x1,%ax
je     4a739 <TIFFReadEncodedTile+0xa9>
mov    -0x10(%rbp),%rax
mov    -0x18(%rbp),%rcx
cmp    $0xffffffffffffffff,%rcx
jne    4a749 <TIFFReadEncodedTile+0xb9>
mov    %rax,-0x18(%rbp)
callq  8a10 <TIFFFillTile@plt>
test   %eax,%eax
jne    4a753 <TIFFReadEncodedTile+0xc3>
mov    $0xffffffffffffffff,%rax
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
lea    0x29c9b(%rip),%rdx        # 743be <module.19+0x14>
mov    %esi,%ecx
mov    %r8,%rsi
mov    %r9,%r8
callq  8a00 <TIFFErrorExt@plt>
mov    $0xffffffffffffffff,%rax
leaveq 
retq   
mov    -0x18(%rbp),%rcx
cmp    $0xffffffffffffffff,%rcx
jne    4a787 <TIFFReadEncodedTile+0xf7>
mov    -0x10(%rbp),%rax
jmp    4a6f7 <TIFFReadEncodedTile+0x67>
cmp    %rax,%rcx
jg     4a6fd <TIFFReadEncodedTile+0x6d>
mov    %rcx,%rax
jmp    4a6fd <TIFFReadEncodedTile+0x6d>
mov    -0x20(%rbp),%rdi
mov    0xe0(%rdi),%ecx
xor    %edx,%edx
mov    0x318(%rdi),%r8
mov    -0x28(%rbp),%rax
div    %ecx
mov    %rax,%rcx
mov    -0x8(%rbp),%rsi
mov    -0x18(%rbp),%rdx
callq  *%r8
test   %eax,%eax
jne    4a7ee <TIFFReadEncodedTile+0x15e>
mov    $0xffffffffffffffff,%rax
leaveq 
retq   
mov    -0x10(%rbp),%rax
cmp    %rax,%rcx
jl     4a6f7 <TIFFReadEncodedTile+0x67>
mov    0x10(%rdi),%edx
mov    %rdx,%r9
and    $0x800,%r9d
test   %r9d,%r9d
jne    4a6f7 <TIFFReadEncodedTile+0x67>
and    $0x20000,%edx
test   %edx,%edx
jne    4a6f7 <TIFFReadEncodedTile+0x67>
mov    %rdi,%r9
mov    -0x8(%rbp),%rdx
mov    %rax,%rcx
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rax,%r14
mov    %rdi,%r15
mov    %r9,%rdi
callq  4bc60 <TIFFReadRawTile1>
cmp    %rax,%r14
je     4a806 <TIFFReadEncodedTile+0x176>
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    $0xffffffffffffffff,%rax
leaveq 
retq   
mov    -0x18(%rbp),%rdx
mov    -0x8(%rbp),%rsi
mov    -0x20(%rbp),%rdi
callq  *0x3e8(%rdi)
mov    -0x18(%rbp),%rax
leaveq 
retq   
mov    0x10(%r15),%ecx
movzwl 0x7e(%r15),%eax
and    %ecx,%eax
test   %eax,%eax
je     4a832 <TIFFReadEncodedTile+0x1a2>
mov    -0x8(%rbp),%rsi
mov    %r15,%rdi
mov    %r14,%rdx
callq  *0x3e8(%rdi)
mov    %r14,%rax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
leaveq 
retq   
and    $0x100,%ecx
test   %ecx,%ecx
je     4a842 <TIFFReadEncodedTile+0x1b2>
mov    -0x8(%rbp),%rsi
jmp    4a819 <TIFFReadEncodedTile+0x189>
mov    -0x8(%rbp),%rax
mov    %rax,%rdi
mov    %r14,%rsi
mov    %r13,-0x10(%rbp)
mov    %rax,%r13
callq  8700 <TIFFReverseBits@plt>
mov    %r13,%rsi
mov    -0x10(%rbp),%r13
jmp    4a819 <TIFFReadEncodedTile+0x189>
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   0x0(%rax)

000000000004a870 <TIFFReadRawTile>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %rdi,-0x18(%rbp)
mov    %rsi,-0x20(%rbp)
mov    %rcx,-0x10(%rbp)
mov    %rdx,-0x8(%rbp)
mov    $0x1,%esi
callq  4b9e0 <TIFFCheckRead>
test   %eax,%eax
jne    4a89f <TIFFReadRawTile+0x2f>
mov    $0xffffffffffffffff,%rax
leaveq 
retq   
lea    0x29b38(%rip),%rsi        # 743de <module.21>
mov    -0x18(%rbp),%rdi
mov    0xe4(%rdi),%r8d
mov    -0x20(%rbp),%r9
cmp    %r9d,%r8d
jbe    4a8ef <TIFFReadRawTile+0x7f>
mov    0x10(%rdi),%eax
and    $0x20000,%eax
test   %eax,%eax
jne    4a910 <TIFFReadRawTile+0xa0>
mov    0xf0(%rdi),%rcx
mov    %r9d,%eax
mov    (%rcx,%rax,8),%rcx
mov    -0x10(%rbp),%rax
cmp    $0xffffffffffffffff,%rax
jne    4a92e <TIFFReadRawTile+0xbe>
mov    %rsi,%r8
mov    %r9,%rsi
mov    -0x8(%rbp),%rdx
callq  4bc60 <TIFFReadRawTile1>
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
lea    0x29abf(%rip),%rdx        # 743be <module.19+0x14>
mov    %r9d,%ecx
callq  8a00 <TIFFErrorExt@plt>
mov    $0xffffffffffffffff,%rax
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
lea    0x29a1c(%rip),%rdx        # 7433c <module.15+0x32>
callq  8a00 <TIFFErrorExt@plt>
mov    $0xffffffffffffffff,%rax
leaveq 
retq   
cmp    %rax,%rcx
jbe    4a8de <TIFFReadRawTile+0x6e>
mov    %rax,%rcx
jmp    4a8de <TIFFReadRawTile+0x6e>
nopl   0x0(%rax,%rax,1)

000000000004a940 <_TIFFNoPostDecode>:
push   %rbp
mov    %rsp,%rbp
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)

000000000004a950 <_TIFFSwab16BitData>:
push   %rbp
mov    %rsp,%rbp
mov    %rdx,%rax
and    $0x1,%rax
test   %rax,%rax
je     4a97f <_TIFFSwab16BitData+0x2f>
lea    0x29a87(%rip),%rdi        # 743ee <module.21+0x10>
lea    0x2992b(%rip),%rsi        # 74299 <module.8+0x37>
mov    $0x601,%edx
lea    0x29a82(%rip),%rcx        # 743fc <module.21+0x1e>
callq  8490 <__assert_fail@plt>
mov    %rdx,%rax
shr    $0x3f,%rax
add    %rdx,%rax
sar    %rax
mov    %rsi,%rdi
mov    %rax,%rsi
callq  83d0 <TIFFSwabArrayOfShort@plt>
leaveq 
retq   
nopl   0x0(%rax)

000000000004a9a0 <_TIFFSwab24BitData>:
push   %rbp
mov    %rsp,%rbp
mov    %rdx,%rax
mov    $0x3,%ecx
cqto   
mov    %rax,%rdi
idiv   %rcx
test   %rdx,%rdx
je     4a9d8 <_TIFFSwab24BitData+0x38>
lea    0x29a4f(%rip),%rdi        # 7440f <module.21+0x31>
lea    0x298d2(%rip),%rsi        # 74299 <module.8+0x37>
mov    $0x609,%edx
lea    0x29a4a(%rip),%rcx        # 7441d <module.21+0x3f>
callq  8490 <__assert_fail@plt>
mov    %rdi,%rax
cqto   
idiv   %rcx
mov    %rsi,%rdi
mov    %rax,%rsi
callq  8a60 <TIFFSwabArrayOfTriples@plt>
leaveq 
retq   
nopl   (%rax)

000000000004a9f0 <_TIFFSwab32BitData>:
push   %rbp
mov    %rsp,%rbp
mov    %rdx,%rax
and    $0x3,%rax
test   %rax,%rax
je     4aa1f <_TIFFSwab32BitData+0x2f>
lea    0x29a29(%rip),%rdi        # 74430 <module.21+0x52>
lea    0x2988b(%rip),%rsi        # 74299 <module.8+0x37>
mov    $0x611,%edx
lea    0x29a24(%rip),%rcx        # 7443e <module.21+0x60>
callq  8490 <__assert_fail@plt>
mov    %rdx,%rax
sar    %rax
shr    $0x3e,%rax
add    %rdx,%rax
sar    $0x2,%rax
mov    %rsi,%rdi
mov    %rax,%rsi
callq  8b70 <TIFFSwabArrayOfLong@plt>
leaveq 
retq   
nopl   (%rax)

000000000004aa40 <_TIFFSwab64BitData>:
push   %rbp
mov    %rsp,%rbp
mov    %rdx,%rax
and    $0x7,%rax
test   %rax,%rax
je     4aa6f <_TIFFSwab64BitData+0x2f>
lea    0x299fa(%rip),%rdi        # 74451 <module.21+0x73>
lea    0x2983b(%rip),%rsi        # 74299 <module.8+0x37>
mov    $0x619,%edx
lea    0x299f5(%rip),%rcx        # 7445f <module.21+0x81>
callq  8490 <__assert_fail@plt>
mov    %rdx,%rax
sar    $0x2,%rax
shr    $0x3d,%rax
add    %rdx,%rax
sar    $0x3,%rax
mov    %rsi,%rdi
mov    %rax,%rsi
callq  81b0 <TIFFSwabArrayOfDouble@plt>
leaveq 
retq   
xchg   %ax,%ax

000000000004aa90 <_TIFFReadEncodedStripAndAllocBuffer>:
push   %rbp
mov    %rsp,%rbp
sub    $0x40,%rsp
mov    (%rdx),%rax
test   %rax,%rax
jne    4aae2 <_TIFFReadEncodedStripAndAllocBuffer+0x52>
lea    -0x32(%rbp),%rax
mov    %rdi,%r10
mov    %rsi,%r9
mov    %r15,-0x8(%rbp)
mov    %rdi,-0x28(%rbp)
mov    %rsi,-0x30(%rbp)
mov    %rcx,-0x20(%rbp)
mov    %rdx,-0x18(%rbp)
mov    %rax,%rdx
mov    %r9,%rsi
mov    %r10,%rdi
mov    %r8,%r15
callq  4c6f0 <TIFFReadEncodedStripGetStripSize>
cmp    $0xffffffffffffffff,%rax
jne    4aaef <_TIFFReadEncodedStripAndAllocBuffer+0x5f>
mov    $0xffffffffffffffff,%rax
mov    -0x8(%rbp),%r15
leaveq 
retq   
mov    %r8,%rcx
mov    %rax,%rdx
callq  8810 <TIFFReadEncodedStrip@plt>
leaveq 
retq   
cmp    $0xffffffffffffffff,%r15
jne    4ab1a <_TIFFReadEncodedStripAndAllocBuffer+0x8a>
mov    %rax,-0x10(%rbp)
mov    -0x28(%rbp),%r15
mov    %r15,%rdi
mov    -0x30(%rbp),%rsi
callq  8880 <TIFFFillStrip@plt>
test   %eax,%eax
jne    4ab24 <_TIFFReadEncodedStripAndAllocBuffer+0x94>
mov    $0xffffffffffffffff,%rax
mov    -0x8(%rbp),%r15
leaveq 
retq   
cmp    %r15,%rax
jle    4aaf5 <_TIFFReadEncodedStripAndAllocBuffer+0x65>
mov    %r15,%rax
jmp    4aaf5 <_TIFFReadEncodedStripAndAllocBuffer+0x65>
mov    -0x20(%rbp),%rax
mov    %rax,%rdi
mov    %r14,-0x30(%rbp)
mov    %rax,%r14
callq  8440 <_TIFFmalloc@plt>
mov    -0x18(%rbp),%rcx
mov    %rax,(%rcx)
test   %rax,%rax
je     4ab7f <_TIFFReadEncodedStripAndAllocBuffer+0xef>
mov    %r14,%rdx
mov    %rcx,%r14
mov    %rax,%rdi
xor    %esi,%esi
callq  88e0 <_TIFFmemset@plt>
mov    0x308(%r15),%rax
mov    (%r14),%rsi
movzwl -0x32(%rbp),%ecx
mov    %r15,%rdi
mov    -0x10(%rbp),%rdx
callq  *%rax
test   %eax,%eax
jg     4abb7 <_TIFFReadEncodedStripAndAllocBuffer+0x127>
mov    -0x30(%rbp),%r14
mov    $0xffffffffffffffff,%rax
mov    -0x8(%rbp),%r15
leaveq 
retq   
mov    %r15,%rdi
xor    %r15d,%r15d
mov    0x3b8(%rdi),%r14
callq  85f0 <TIFFFileName@plt>
mov    %rax,%rsi
mov    %r15,%rax
mov    %r14,%rdi
lea    0x298d1(%rip),%rdx        # 74472 <module.21+0x94>
callq  8a00 <TIFFErrorExt@plt>
mov    -0x30(%rbp),%r14
mov    $0xffffffffffffffff,%rax
mov    -0x8(%rbp),%r15
leaveq 
retq   
mov    0x3e8(%r15),%rax
mov    (%r14),%rsi
mov    %r15,%rdi
mov    -0x10(%rbp),%r14
mov    %r14,%rdx
callq  *%rax
mov    %r14,%rax
mov    -0x30(%rbp),%r14
mov    -0x8(%rbp),%r15
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

000000000004abe0 <_TIFFReadEncodedTileAndAllocBuffer>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    0x2b0(%rdi),%rax
mov    (%rdx),%r9
test   %r9,%r9
jne    4ac37 <_TIFFReadEncodedTileAndAllocBuffer+0x57>
mov    $0x1,%r10d
mov    %rdi,%r9
mov    %r15,-0x8(%rbp)
mov    %rsi,-0x30(%rbp)
mov    %rcx,-0x28(%rbp)
mov    %rdx,-0x10(%rbp)
mov    %r8,-0x20(%rbp)
mov    %rax,-0x18(%rbp)
mov    %r10,%rsi
mov    %rdi,%r15
mov    %r9,%rdi
callq  4b9e0 <TIFFCheckRead>
test   %eax,%eax
jne    4ac44 <_TIFFReadEncodedTileAndAllocBuffer+0x64>
mov    $0xffffffffffffffff,%rax
mov    -0x8(%rbp),%r15
leaveq 
retq   
mov    %r8,%rcx
mov    %r9,%rdx
callq  89d0 <TIFFReadEncodedTile@plt>
leaveq 
retq   
mov    0xe4(%r15),%r8d
mov    -0x30(%rbp),%rsi
cmp    %esi,%r8d
jbe    4ac6d <_TIFFReadEncodedTileAndAllocBuffer+0x8d>
mov    %r15,%rdi
callq  8a10 <TIFFFillTile@plt>
test   %eax,%eax
jne    4ac9b <_TIFFReadEncodedTileAndAllocBuffer+0xbb>
mov    $0xffffffffffffffff,%rax
mov    -0x8(%rbp),%r15
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
lea    0x2980f(%rip),%r9        # 7448c <module.31>
lea    0x2973a(%rip),%rdx        # 743be <module.19+0x14>
mov    %esi,%ecx
mov    %r9,%rsi
callq  8a00 <TIFFErrorExt@plt>
mov    $0xffffffffffffffff,%rax
mov    -0x8(%rbp),%r15
leaveq 
retq   
mov    -0x28(%rbp),%rdx
mov    %rdx,%rdi
mov    %r14,-0x28(%rbp)
mov    %rdx,%r14
callq  8440 <_TIFFmalloc@plt>
mov    -0x10(%rbp),%rcx
mov    %rax,(%rcx)
test   %rax,%rax
je     4ad16 <_TIFFReadEncodedTileAndAllocBuffer+0x136>
mov    %r14,%rdx
mov    %rcx,%r14
mov    %rax,%rdi
xor    %esi,%esi
callq  88e0 <_TIFFmemset@plt>
mov    -0x20(%rbp),%r8
cmp    $0xffffffffffffffff,%r8
jne    4ad4e <_TIFFReadEncodedTileAndAllocBuffer+0x16e>
mov    -0x18(%rbp),%r8
mov    %r8,-0x20(%rbp)
mov    0xe0(%r15),%ecx
xor    %edx,%edx
mov    0x318(%r15),%r9
mov    (%r14),%rsi
mov    -0x30(%rbp),%rax
div    %ecx
mov    %rax,%rcx
mov    %r8,%rdx
mov    %r15,%rdi
callq  *%r9
test   %eax,%eax
jne    4ad5f <_TIFFReadEncodedTileAndAllocBuffer+0x17f>
mov    -0x28(%rbp),%r14
mov    $0xffffffffffffffff,%rax
mov    -0x8(%rbp),%r15
leaveq 
retq   
mov    %r15,%rdi
xor    %r15d,%r15d
mov    0x3b8(%rdi),%r14
callq  85f0 <TIFFFileName@plt>
mov    %rax,%rsi
mov    %r15,%rax
mov    %r14,%rdi
lea    0x29777(%rip),%rdx        # 744af <module.31+0x23>
callq  8a00 <TIFFErrorExt@plt>
mov    -0x28(%rbp),%r14
mov    $0xffffffffffffffff,%rax
mov    -0x8(%rbp),%r15
leaveq 
retq   
mov    -0x18(%rbp),%rax
cmp    %rax,%r8
jle    4acd8 <_TIFFReadEncodedTileAndAllocBuffer+0xf8>
mov    %rax,%r8
jmpq   4acd8 <_TIFFReadEncodedTileAndAllocBuffer+0xf8>
mov    0x3e8(%r15),%rax
mov    (%r14),%rsi
mov    %r15,%rdi
mov    -0x20(%rbp),%r14
mov    %r14,%rdx
callq  *%rax
mov    %r14,%rax
mov    -0x28(%rbp),%r14
mov    -0x8(%rbp),%r15
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   (%rax)

000000000004ad90 <_TIFFReadTileAndAllocBuffer>:
push   %rbp
mov    %rsp,%rbp
sub    $0x40,%rsp
mov    %rdi,-0x20(%rbp)
mov    %rcx,-0x28(%rbp)
mov    %r8,-0x30(%rbp)
mov    %r9,-0x38(%rbp)
mov    %rsi,-0x8(%rbp)
mov    %rdx,-0x10(%rbp)
mov    $0x1,%esi
callq  4b9e0 <TIFFCheckRead>
test   %eax,%eax
jne    4adc7 <_TIFFReadTileAndAllocBuffer+0x37>
mov    $0xffffffffffffffff,%rax
leaveq 
retq   
movzwl 0x10(%rbp),%r8d
mov    %r8,-0x18(%rbp)
mov    -0x20(%rbp),%rdi
mov    -0x28(%rbp),%rsi
mov    -0x30(%rbp),%rdx
mov    -0x38(%rbp),%rcx
callq  8030 <TIFFCheckTile@plt>
test   %eax,%eax
jne    4adf2 <_TIFFReadTileAndAllocBuffer+0x62>
mov    $0xffffffffffffffff,%rax
leaveq 
retq   
mov    -0x20(%rbp),%rdi
mov    %rdi,%rax
mov    %r15,-0x20(%rbp)
mov    %rdi,%r15
mov    %rax,%rdi
mov    -0x18(%rbp),%r8
mov    -0x38(%rbp),%rcx
mov    -0x30(%rbp),%rdx
mov    -0x28(%rbp),%rsi
callq  8110 <TIFFComputeTile@plt>
mov    %rax,%rsi
mov    %r15,%rdi
mov    $0xffffffffffffffff,%r8
mov    -0x10(%rbp),%rcx
mov    -0x8(%rbp),%rdx
callq  83f0 <_TIFFReadEncodedTileAndAllocBuffer@plt>
mov    -0x20(%rbp),%r15
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

000000000004ae40 <TIFFFillStrip>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    %r15,-0x18(%rbp)
mov    %rsi,-0x28(%rbp)
mov    %rdi,%r15
callq  8c70 <_TIFFFillStriles@plt>
test   %eax,%eax
jne    4ae64 <TIFFFillStrip+0x24>
xor    %eax,%eax
mov    -0x18(%rbp),%r15
leaveq 
retq   
mov    0xf0(%r15),%rcx
test   %rcx,%rcx
jne    4ae78 <TIFFFillStrip+0x38>
xor    %eax,%eax
mov    -0x18(%rbp),%r15
leaveq 
retq   
mov    0x10(%r15),%eax
and    $0x20000,%eax
test   %eax,%eax
je     4ae97 <TIFFFillStrip+0x57>
mov    -0x28(%rbp),%rsi
mov    %r15,%rdi
callq  4b710 <TIFFStartStrip>
mov    -0x18(%rbp),%r15
leaveq 
retq   
lea    0x2962a(%rip),%r8        # 744c8 <module.33>
mov    -0x28(%rbp),%rsi
mov    %esi,%r10d
mov    (%rcx,%r10,8),%r9
test   %r9,%r9
je     4af96 <TIFFFillStrip+0x156>
cmp    $0x100000,%r9
ja     4afc5 <TIFFFillStrip+0x185>
mov    0x10(%r15),%eax
and    $0x800,%eax
test   %eax,%eax
jne    4b00c <TIFFFillStrip+0x1cc>
mov    0x10(%r15),%eax
mov    %rax,%rcx
and    $0x800,%ecx
test   %ecx,%ecx
jne    4b071 <TIFFFillStrip+0x231>
mov    0x370(%r15),%rax
cmp    %r9,%rax
jl     4b0f0 <TIFFFillStrip+0x2b0>
mov    0x10(%r15),%eax
mov    %rax,%rcx
and    $0x800000,%ecx
test   %ecx,%ecx
je     4af30 <TIFFFillStrip+0xf0>
movl   $0xffffffff,0x284(%r15)
movq   $0x0,0x368(%r15)
movq   $0x0,0x370(%r15)
and    $0xff7fffff,%eax
mov    %eax,0x10(%r15)
mov    0x10(%r15),%eax
and    $0x800,%eax
test   %eax,%eax
jne    4b12e <TIFFFillStrip+0x2ee>
mov    $0x1,%edx
mov    %r15,%rdi
mov    %r9,%rcx
mov    %r15,-0x20(%rbp)
mov    %r9,%r15
callq  4c7e0 <TIFFReadRawStripOrTile2>
cmp    %r15,%rax
jne    4b168 <TIFFFillStrip+0x328>
mov    %r15,%rsi
mov    -0x20(%rbp),%r15
movq   $0x0,0x378(%r15)
mov    %rsi,0x380(%r15)
mov    0x10(%r15),%ecx
movzwl 0x7e(%r15),%eax
and    %ecx,%eax
test   %eax,%eax
je     4b170 <TIFFFillStrip+0x330>
mov    -0x28(%rbp),%rsi
jmpq   4ae89 <TIFFFillStrip+0x49>
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
lea    0x29530(%rip),%rdx        # 744d6 <module.33+0xe>
mov    %esi,%esi
mov    %r8,%r9
mov    %rsi,%r8
mov    %r9,%rsi
xor    %r15d,%r15d
mov    %r15,%rcx
callq  8a00 <TIFFErrorExt@plt>
mov    %r15,%rax
mov    -0x18(%rbp),%r15
leaveq 
retq   
mov    %r15,%rdi
mov    %r12,-0x8(%rbp)
mov    %r13,-0x10(%rbp)
mov    %r14,-0x20(%rbp)
mov    %rsi,%r12
mov    %r10,%r13
mov    %r9,%r14
callq  8070 <TIFFStripSize@plt>
test   %rax,%rax
jne    4b187 <TIFFFillStrip+0x347>
mov    %r12,%rsi
mov    %r14,%r9
mov    %r13,%r10
lea    0x294cd(%rip),%r8        # 744c8 <module.33>
mov    -0x20(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
jmpq   4aebf <TIFFFillStrip+0x7f>
mov    0x3a0(%r15),%rax
cmp    %r9,%rax
jb     4b02c <TIFFFillStrip+0x1ec>
sub    %r9,%rax
mov    0xe8(%r15),%rcx
cmp    (%rcx,%r10,8),%rax
jae    4aed0 <TIFFFillStrip+0x90>
mov    0xe8(%r15),%rax
mov    (%rax,%r10,8),%rax
mov    0x3a0(%r15),%r10
sub    %rax,%r10
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
lea    0x294eb(%rip),%rdx        # 7453c <module.33+0x74>
mov    %esi,%ecx
mov    %r8,%rsi
mov    %r10,%r8
callq  8a00 <TIFFErrorExt@plt>
movl   $0xffffffff,0x284(%r15)
xor    %eax,%eax
mov    -0x18(%rbp),%r15
leaveq 
retq   
movzwl 0x7e(%r15),%ecx
and    %eax,%ecx
test   %ecx,%ecx
jne    4b08d <TIFFFillStrip+0x24d>
mov    %rax,%rcx
and    $0x100,%ecx
test   %ecx,%ecx
je     4aee5 <TIFFFillStrip+0xa5>
and    $0x200,%eax
test   %eax,%eax
jne    4b1c5 <TIFFFillStrip+0x385>
mov    0x10(%r15),%eax
mov    %rax,%rcx
and    $0xfffffdff,%ecx
mov    %ecx,0x10(%r15)
mov    %r9,0x370(%r15)
mov    0xe8(%r15),%rcx
mov    (%rcx,%r10,8),%rcx
add    0x398(%r15),%rcx
mov    %rcx,0x368(%r15)
movq   $0x0,0x378(%r15)
mov    %r9,0x380(%r15)
and    $0xff7ffdff,%eax
add    $0x800000,%eax
mov    %eax,0x10(%r15)
jmpq   4ae89 <TIFFFillStrip+0x49>
movl   $0xffffffff,0x284(%r15)
mov    0x10(%r15),%eax
and    $0x200,%eax
test   %eax,%eax
jne    4aef5 <TIFFFillStrip+0xb5>
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
lea    0x29457(%rip),%rdx        # 74573 <module.33+0xab>
mov    %esi,%ecx
mov    %r8,%rsi
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x18(%rbp),%r15
leaveq 
retq   
mov    0x370(%r15),%rax
cmp    %r9,%rax
jl     4b21f <TIFFFillStrip+0x3df>
mov    0x368(%r15),%rdx
mov    %r15,%rdi
mov    %r9,%rcx
mov    %r15,-0x20(%rbp)
mov    %r9,%r15
callq  4ba60 <TIFFReadRawStrip1>
cmp    %r15,%rax
jne    4b24c <TIFFFillStrip+0x40c>
mov    %r15,%rsi
jmpq   4af64 <TIFFFillStrip+0x124>
xor    %eax,%eax
mov    -0x18(%rbp),%r15
leaveq 
retq   
and    $0x100,%ecx
test   %ecx,%ecx
je     4b254 <TIFFFillStrip+0x414>
mov    -0x28(%rbp),%rsi
jmpq   4ae89 <TIFFFillStrip+0x49>
mov    %r12,%rsi
mov    %rax,%rdi
mov    %r14,%r9
mov    %r13,%r10
lea    -0x1000(%r9),%rax
mov    $0xa,%ecx
xor    %edx,%edx
div    %rcx
cmp    %rdi,%rax
ja     4b269 <TIFFFillStrip+0x429>
lea    0x29314(%rip),%r8        # 744c8 <module.33>
mov    -0x20(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
jmpq   4aebf <TIFFFillStrip+0x7f>
mov    0x368(%r15),%rdi
test   %rdi,%rdi
je     4b09a <TIFFFillStrip+0x25a>
mov    %r12,-0x8(%rbp)
mov    %r13,-0x10(%rbp)
mov    %r14,-0x28(%rbp)
mov    %rsi,%r12
mov    %r9,%r13
mov    %r10,%r14
callq  8bb0 <_TIFFfree@plt>
movq   $0x0,0x368(%r15)
movq   $0x0,0x370(%r15)
mov    %r12,%rsi
mov    %r13,%r9
mov    %r14,%r10
mov    -0x28(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
jmpq   4b09a <TIFFFillStrip+0x25a>
mov    %r15,%rdi
xor    %esi,%esi
mov    %r9,%rdx
mov    %r9,-0x20(%rbp)
callq  8270 <TIFFReadBufferSetup@plt>
test   %eax,%eax
je     4b2c1 <TIFFFillStrip+0x481>
mov    -0x20(%rbp),%r9
lea    0x29285(%rip),%r8        # 744c8 <module.33>
mov    -0x28(%rbp),%rsi
jmpq   4b13e <TIFFFillStrip+0x2fe>
xor    %eax,%eax
mov    -0x18(%rbp),%r15
leaveq 
retq   
mov    0x368(%r15),%rdi
callq  8700 <TIFFReverseBits@plt>
mov    -0x28(%rbp),%rsi
jmpq   4ae89 <TIFFFillStrip+0x49>
lea    (%rdi,%rdi,4),%rax
lea    0x1000(%rax,%rax,1),%r12
mov    %r9,%rcx
mov    %rsi,%r13
mov    %r10,%r14
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
lea    0x29271(%rip),%rdx        # 744ff <module.33+0x37>
mov    %r13d,%r8d
lea    0x29230(%rip),%rsi        # 744c8 <module.33>
mov    %r12,%r9
callq  8a00 <TIFFErrorExt@plt>
mov    %r13,%rsi
mov    %r12,%r9
mov    %r14,%r10
lea    0x29218(%rip),%r8        # 744c8 <module.33>
mov    -0x20(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
jmpq   4aebf <TIFFFillStrip+0x7f>
xor    %eax,%eax
mov    -0x18(%rbp),%r15
leaveq 
retq   
nopl   0x0(%rax)

000000000004b2d0 <TIFFFillTile>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    %r15,-0x18(%rbp)
mov    %rsi,-0x30(%rbp)
mov    %rdi,%r15
callq  8c70 <_TIFFFillStriles@plt>
test   %eax,%eax
jne    4b2f4 <TIFFFillTile+0x24>
xor    %eax,%eax
mov    -0x18(%rbp),%r15
leaveq 
retq   
mov    0xf0(%r15),%rcx
test   %rcx,%rcx
jne    4b308 <TIFFFillTile+0x38>
xor    %eax,%eax
mov    -0x18(%rbp),%r15
leaveq 
retq   
mov    0x10(%r15),%eax
and    $0x20000,%eax
test   %eax,%eax
je     4b327 <TIFFFillTile+0x57>
mov    -0x30(%rbp),%rsi
mov    %r15,%rdi
callq  4b830 <TIFFStartTile>
mov    -0x18(%rbp),%r15
leaveq 
retq   
lea    0x2926d(%rip),%r8        # 7459b <module.38>
mov    -0x30(%rbp),%rsi
mov    %esi,%eax
mov    (%rcx,%rax,8),%rcx
test   %rcx,%rcx
je     4b426 <TIFFFillTile+0x156>
cmp    $0x100000,%rcx
ja     4b455 <TIFFFillTile+0x185>
mov    0x10(%r15),%edx
and    $0x800,%edx
test   %edx,%edx
jne    4b48c <TIFFFillTile+0x1bc>
mov    0x10(%r15),%edx
mov    %rdx,%rdi
and    $0x800,%edi
test   %edi,%edi
jne    4b4bf <TIFFFillTile+0x1ef>
mov    0x370(%r15),%rax
cmp    %rcx,%rax
jl     4b541 <TIFFFillTile+0x271>
mov    0x10(%r15),%eax
mov    %rax,%rdx
and    $0x800000,%edx
test   %edx,%edx
je     4b3c0 <TIFFFillTile+0xf0>
movl   $0xffffffff,0x2ac(%r15)
movq   $0x0,0x368(%r15)
movq   $0x0,0x370(%r15)
and    $0xff7fffff,%eax
mov    %eax,0x10(%r15)
mov    0x10(%r15),%eax
and    $0x800,%eax
test   %eax,%eax
jne    4b57f <TIFFFillTile+0x2af>
mov    %r15,%rdi
xor    %edx,%edx
mov    %rcx,%rax
mov    %r15,-0x20(%rbp)
mov    %rcx,%r15
mov    %rax,%rcx
callq  4c7e0 <TIFFReadRawStripOrTile2>
cmp    %r15,%rax
jne    4b5bc <TIFFFillTile+0x2ec>
mov    %r15,%rsi
mov    -0x20(%rbp),%r15
movq   $0x0,0x378(%r15)
mov    %rsi,0x380(%r15)
mov    0x10(%r15),%ecx
movzwl 0x7e(%r15),%eax
and    %ecx,%eax
test   %eax,%eax
je     4b5c4 <TIFFFillTile+0x2f4>
mov    -0x30(%rbp),%rsi
jmpq   4b319 <TIFFFillTile+0x49>
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
lea    0x29172(%rip),%rdx        # 745a8 <module.38+0xd>
mov    %esi,%esi
mov    %r8,%r9
mov    %rsi,%r8
mov    %r9,%rsi
xor    %r15d,%r15d
mov    %r15,%rcx
callq  8a00 <TIFFErrorExt@plt>
mov    %r15,%rax
mov    -0x18(%rbp),%r15
leaveq 
retq   
mov    %r15,%rdi
mov    %r14,-0x20(%rbp)
mov    %rax,-0x28(%rbp)
mov    %rcx,%r14
callq  8910 <TIFFTileSize@plt>
test   %rax,%rax
jne    4b5db <TIFFFillTile+0x30b>
mov    %r14,%rcx
lea    0x29120(%rip),%r8        # 7459b <module.38>
mov    -0x28(%rbp),%rax
mov    -0x20(%rbp),%r14
mov    -0x30(%rbp),%rsi
jmpq   4b34e <TIFFFillTile+0x7e>
mov    0x3a0(%r15),%rdx
cmp    %rcx,%rdx
jb     4b4ac <TIFFFillTile+0x1dc>
sub    %rcx,%rdx
mov    0xe8(%r15),%rdi
cmp    (%rdi,%rax,8),%rdx
jae    4b360 <TIFFFillTile+0x90>
movl   $0xffffffff,0x2ac(%r15)
xor    %eax,%eax
mov    -0x18(%rbp),%r15
leaveq 
retq   
movzwl 0x7e(%r15),%edi
and    %edx,%edi
test   %edi,%edi
jne    4b4db <TIFFFillTile+0x20b>
mov    %rdx,%rdi
and    $0x100,%edi
test   %edi,%edi
je     4b375 <TIFFFillTile+0xa5>
and    $0x200,%edx
test   %edx,%edx
jne    4b613 <TIFFFillTile+0x343>
mov    0x10(%r15),%edx
mov    %rdx,%rdi
and    $0xfffffdff,%edi
mov    %edi,0x10(%r15)
mov    %rcx,0x370(%r15)
mov    0xe8(%r15),%rdi
mov    (%rdi,%rax,8),%rax
add    0x398(%r15),%rax
mov    %rax,0x368(%r15)
movq   $0x0,0x378(%r15)
mov    %rcx,0x380(%r15)
and    $0xff7ffdff,%edx
lea    0x800000(%rdx),%eax
mov    %eax,0x10(%r15)
jmpq   4b319 <TIFFFillTile+0x49>
movl   $0xffffffff,0x2ac(%r15)
mov    0x10(%r15),%eax
and    $0x200,%eax
test   %eax,%eax
jne    4b385 <TIFFFillTile+0xb5>
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
lea    0x2909e(%rip),%rdx        # 7460b <module.38+0x70>
mov    %esi,%ecx
mov    %r8,%rsi
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x18(%rbp),%r15
leaveq 
retq   
mov    0x370(%r15),%rax
cmp    %rcx,%rax
jl     4b66d <TIFFFillTile+0x39d>
mov    0x368(%r15),%rdx
mov    %r15,%rdi
mov    %rcx,%rax
mov    %r15,-0x20(%rbp)
mov    %rcx,%r15
mov    %rax,%rcx
callq  4bc60 <TIFFReadRawTile1>
cmp    %r15,%rax
jne    4b696 <TIFFFillTile+0x3c6>
mov    %r15,%rsi
jmpq   4b3f4 <TIFFFillTile+0x124>
xor    %eax,%eax
mov    -0x18(%rbp),%r15
leaveq 
retq   
and    $0x100,%ecx
test   %ecx,%ecx
je     4b69e <TIFFFillTile+0x3ce>
mov    -0x30(%rbp),%rsi
jmpq   4b319 <TIFFFillTile+0x49>
mov    %r14,%rcx
mov    %rax,%rdi
lea    -0x1000(%rcx),%rax
mov    $0xa,%esi
xor    %edx,%edx
div    %rsi
cmp    %rdi,%rax
ja     4b6b3 <TIFFFillTile+0x3e3>
lea    0x28f99(%rip),%r8        # 7459b <module.38>
mov    -0x28(%rbp),%rax
mov    -0x20(%rbp),%r14
mov    -0x30(%rbp),%rsi
jmpq   4b34e <TIFFFillTile+0x7e>
mov    0x368(%r15),%rdi
test   %rdi,%rdi
je     4b4e9 <TIFFFillTile+0x219>
mov    %r14,-0x30(%rbp)
mov    %r12,-0x8(%rbp)
mov    %r13,-0x10(%rbp)
mov    %rsi,%r12
mov    %rax,%r13
mov    %rcx,%r14
callq  8bb0 <_TIFFfree@plt>
movq   $0x0,0x368(%r15)
movq   $0x0,0x370(%r15)
mov    %r13,%rax
mov    %r14,%rcx
mov    %r12,%rsi
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
mov    -0x30(%rbp),%r14
jmpq   4b4e9 <TIFFFillTile+0x219>
mov    %r15,%rdi
xor    %esi,%esi
mov    %rcx,%rdx
mov    %rcx,-0x28(%rbp)
callq  8270 <TIFFReadBufferSetup@plt>
test   %eax,%eax
je     4b700 <TIFFFillTile+0x430>
mov    -0x28(%rbp),%rcx
lea    0x28f0e(%rip),%r8        # 7459b <module.38>
mov    -0x30(%rbp),%rsi
jmpq   4b58f <TIFFFillTile+0x2bf>
xor    %eax,%eax
mov    -0x18(%rbp),%r15
leaveq 
retq   
mov    0x368(%r15),%rdi
callq  8700 <TIFFReverseBits@plt>
mov    -0x30(%rbp),%rsi
jmpq   4b319 <TIFFFillTile+0x49>
lea    (%rdi,%rdi,4),%rax
lea    0x1000(%rax,%rax,1),%r14
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
lea    0x28f01(%rip),%rdx        # 745d0 <module.38+0x35>
mov    -0x30(%rbp),%rsi
mov    %esi,%r8d
lea    0x28ebe(%rip),%rsi        # 7459b <module.38>
mov    %r14,%r9
callq  8a00 <TIFFErrorExt@plt>
mov    %r14,%rcx
lea    0x28eac(%rip),%r8        # 7459b <module.38>
mov    -0x28(%rbp),%rax
mov    -0x20(%rbp),%r14
mov    -0x30(%rbp),%rsi
jmpq   4b34e <TIFFFillTile+0x7e>
xor    %eax,%eax
mov    -0x18(%rbp),%r15
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

000000000004b710 <TIFFStartStrip>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x8(%rbp)
mov    %rsi,-0x10(%rbp)
mov    %rdi,%r15
callq  8c70 <_TIFFFillStriles@plt>
test   %eax,%eax
jne    4b734 <TIFFStartStrip+0x24>
xor    %eax,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
mov    0xf0(%r15),%rax
test   %rax,%rax
jne    4b748 <TIFFStartStrip+0x38>
xor    %eax,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
mov    0x10(%r15),%eax
and    $0x20,%eax
test   %eax,%eax
je     4b7c5 <TIFFStartStrip+0xb5>
mov    -0x10(%rbp),%rsi
mov    %esi,0x284(%r15)
mov    0xe0(%r15),%ecx
xor    %edx,%edx
mov    %rsi,%rax
div    %ecx
imul   0x84(%r15),%edx
mov    %edx,0x27c(%r15)
mov    0x10(%r15),%eax
mov    %rax,%rcx
and    $0xffefffff,%ecx
mov    %ecx,0x10(%r15)
and    $0x20000,%eax
test   %eax,%eax
jne    4b7db <TIFFStartStrip+0xcb>
mov    0x368(%r15),%rax
mov    %rax,0x388(%r15)
mov    0x380(%r15),%rax
test   %rax,%rax
jg     4b814 <TIFFStartStrip+0x104>
mov    0xf0(%r15),%rcx
mov    %esi,%eax
mov    (%rcx,%rax,8),%rax
mov    %rax,0x390(%r15)
jmp    4b7f1 <TIFFStartStrip+0xe1>
mov    %r15,%rdi
callq  *0x2c8(%r15)
test   %eax,%eax
jne    4b81d <TIFFStartStrip+0x10d>
xor    %eax,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
movq   $0x0,0x388(%r15)
movq   $0x0,0x390(%r15)
mov    %rsi,%rax
mov    0xe0(%r15),%edi
xor    %edx,%edx
mov    0x2d0(%r15),%rcx
div    %edi
mov    %rax,%rsi
mov    %r15,%rdi
callq  *%rcx
mov    -0x8(%rbp),%r15
leaveq 
retq   
mov    %rax,0x390(%r15)
jmp    4b7f1 <TIFFStartStrip+0xe1>
mov    0x10(%r15),%eax
or     $0x20,%eax
mov    %eax,0x10(%r15)
jmpq   4b753 <TIFFStartStrip+0x43>
nopl   (%rax)

000000000004b830 <TIFFStartTile>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x8(%rbp)
mov    %rsi,-0x10(%rbp)
mov    %rdi,%r15
callq  8c70 <_TIFFFillStriles@plt>
test   %eax,%eax
jne    4b854 <TIFFStartTile+0x24>
xor    %eax,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
mov    0xf0(%r15),%rax
test   %rax,%rax
jne    4b868 <TIFFStartTile+0x38>
xor    %eax,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
mov    0x10(%r15),%eax
and    $0x20,%eax
test   %eax,%eax
je     4b893 <TIFFStartTile+0x63>
mov    -0x10(%rbp),%rcx
mov    %ecx,0x2ac(%r15)
mov    0x58(%r15),%edx
mov    0x64(%r15),%esi
mov    %rsi,%rax
neg    %eax
cmp    %edx,%eax
ja     4b8a9 <TIFFStartTile+0x79>
xor    %eax,%eax
jmp    4b8b1 <TIFFStartTile+0x81>
mov    %r15,%rdi
callq  *0x2c8(%r15)
test   %eax,%eax
jne    4b8ef <TIFFStartTile+0xbf>
xor    %eax,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
lea    -0x1(%rsi,%rdx,1),%eax
xor    %edx,%edx
div    %esi
lea    0x28d7a(%rip),%rsi        # 74632 <module.42>
lea    0x28d81(%rip),%r8        # 74640 <module.42+0xe>
test   %eax,%eax
je     4b8ff <TIFFStartTile+0xcf>
mov    %rax,%rdi
xor    %edx,%edx
mov    %rcx,%rax
div    %edi
mov    0x68(%r15),%edi
mov    %rdi,%rax
imul   %edx,%eax
mov    %eax,0x27c(%r15)
mov    0x5c(%r15),%edx
mov    %rdi,%rax
neg    %eax
cmp    %edx,%eax
ja     4b918 <TIFFStartTile+0xe8>
xor    %eax,%eax
jmp    4b920 <TIFFStartTile+0xf0>
mov    0x10(%r15),%eax
or     $0x20,%eax
mov    %eax,0x10(%r15)
jmpq   4b873 <TIFFStartTile+0x43>
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
mov    %r8,%rdx
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
lea    -0x1(%rdi,%rdx,1),%eax
xor    %edx,%edx
div    %edi
test   %eax,%eax
je     4b984 <TIFFStartTile+0x154>
mov    %rax,%rsi
xor    %edx,%edx
mov    %rcx,%rax
div    %esi
imul   0x64(%r15),%edx
mov    %edx,0x2a8(%r15)
mov    0x10(%r15),%eax
mov    %rax,%rdx
and    $0xffefffff,%edx
mov    %edx,0x10(%r15)
and    $0x20000,%eax
test   %eax,%eax
jne    4b99d <TIFFStartTile+0x16d>
mov    0x368(%r15),%rax
mov    %rax,0x388(%r15)
mov    0x380(%r15),%rax
test   %rax,%rax
jg     4b9d7 <TIFFStartTile+0x1a7>
mov    0xf0(%r15),%rdx
mov    %ecx,%eax
mov    (%rdx,%rax,8),%rax
mov    %rax,0x390(%r15)
jmp    4b9b3 <TIFFStartTile+0x183>
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
mov    %r8,%rdx
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
movq   $0x0,0x388(%r15)
movq   $0x0,0x390(%r15)
mov    %rcx,%rax
mov    0xe0(%r15),%esi
xor    %edx,%edx
mov    0x2d0(%r15),%r8
div    %esi
mov    %rax,%rsi
mov    %r15,%rdi
callq  *%r8
mov    -0x8(%rbp),%r15
leaveq 
retq   
mov    %rax,0x390(%r15)
jmp    4b9b3 <TIFFStartTile+0x183>

000000000004b9e0 <TIFFCheckRead>:
push   %rbp
mov    %rsp,%rbp
xor    %edx,%edx
movslq 0xc(%rdi),%rax
cmp    $0x1,%eax
je     4ba0a <TIFFCheckRead+0x2a>
mov    $0x1,%eax
mov    0x10(%rdi),%ecx
and    $0x400,%ecx
test   %ecx,%ecx
je     4ba04 <TIFFCheckRead+0x24>
mov    %rax,%rdx
cmp    %esi,%edx
jne    4ba29 <TIFFCheckRead+0x49>
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rdi),%rcx
mov    (%rdi),%rsi
mov    %rcx,%rdi
lea    0x28c2b(%rip),%rdx        # 7464b <module.42+0x19>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
mov    0x3b8(%rdi),%r8
mov    (%rdi),%rcx
test   %esi,%esi
jne    4ba40 <TIFFCheckRead+0x60>
lea    0x28c50(%rip),%rdx        # 7468e <module.42+0x5c>
jmp    4ba47 <TIFFCheckRead+0x67>
lea    0x28c1e(%rip),%rdx        # 74665 <module.42+0x33>
mov    %rcx,%rsi
mov    %r8,%rdi
xor    %eax,%eax
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

000000000004ba60 <TIFFReadRawStrip1>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    %r15,-0x18(%rbp)
mov    %rsi,-0x28(%rbp)
mov    %rcx,-0x20(%rbp)
mov    %rdx,-0x10(%rbp)
mov    %r8,-0x8(%rbp)
mov    %rdi,%r15
callq  8c70 <_TIFFFillStriles@plt>
test   %eax,%eax
jne    4ba95 <TIFFReadRawStrip1+0x35>
mov    $0xffffffffffffffff,%rax
mov    -0x18(%rbp),%r15
leaveq 
retq   
mov    0x10(%r15),%eax
mov    %rax,%rcx
and    $0x20000,%ecx
test   %ecx,%ecx
je     4bac5 <TIFFReadRawStrip1+0x65>
lea    0x287c9(%rip),%rdi        # 74276 <module.8+0x14>
lea    0x287e5(%rip),%rsi        # 74299 <module.8+0x37>
mov    $0x255,%edx
lea    0x28bf8(%rip),%rcx        # 746b8 <module.42+0x86>
callq  8490 <__assert_fail@plt>
and    $0x800,%eax
test   %eax,%eax
jne    4bb2a <TIFFReadRawStrip1+0xca>
mov    0xe8(%r15),%rcx
mov    -0x28(%rbp),%rdx
mov    %edx,%eax
mov    (%rcx,%rax,8),%rsi
mov    %r15,%rdi
mov    %r14,-0x28(%rbp)
mov    %rdx,%r14
callq  82f0 <_TIFFSeekOK@plt>
test   %eax,%eax
jne    4bb79 <TIFFReadRawStrip1+0x119>
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
lea    0x28bc4(%rip),%rdx        # 746ca <module.42+0x98>
mov    0x27c(%r15),%ecx
mov    %r14d,%r8d
mov    -0x8(%rbp),%rsi
callq  8a00 <TIFFErrorExt@plt>
mov    -0x28(%rbp),%r14
mov    $0xffffffffffffffff,%rax
mov    -0x18(%rbp),%r15
leaveq 
retq   
xor    %r9d,%r9d
mov    0xe8(%r15),%rcx
mov    -0x28(%rbp),%r8
mov    %r8d,%eax
mov    (%rcx,%rax,8),%rsi
movabs $0x7fffffffffffffff,%rdx
cmp    %rdx,%rsi
jbe    4bba6 <TIFFReadRawStrip1+0x146>
mov    -0x20(%rbp),%rax
mov    %r9,%rsi
cmp    %r9,%rax
jne    4bbb8 <TIFFReadRawStrip1+0x158>
add    0x398(%r15),%rsi
mov    %rax,%r15
mov    %r15,%rdx
mov    -0x10(%rbp),%rdi
callq  8790 <_TIFFmemcpy@plt>
mov    %r15,%rax
mov    -0x18(%rbp),%r15
leaveq 
retq   
mov    0x3c0(%r15),%rax
mov    0x3b8(%r15),%rdi
mov    -0x20(%rbp),%r14
mov    %r14,%rdx
mov    -0x10(%rbp),%rsi
callq  *%rax
cmp    %r14,%rax
jne    4bbf0 <TIFFReadRawStrip1+0x190>
mov    %r14,%rax
mov    -0x28(%rbp),%r14
mov    -0x18(%rbp),%r15
leaveq 
retq   
mov    0x3a0(%r15),%rcx
cmp    %rsi,%rcx
jge    4bc2e <TIFFReadRawStrip1+0x1ce>
mov    -0x20(%rbp),%rax
jmp    4bb55 <TIFFReadRawStrip1+0xf5>
xor    %r10d,%r10d
mov    0x3b8(%r15),%rdi
lea    0x28b61(%rip),%rdx        # 7472a <module.42+0xf8>
mov    0x27c(%r15),%ecx
mov    %rax,(%rsp)
mov    %r8d,%r8d
mov    %r10,%rax
mov    -0x8(%rbp),%rsi
callq  8a00 <TIFFErrorExt@plt>
mov    $0xffffffffffffffff,%rax
mov    -0x18(%rbp),%r15
leaveq 
retq   
xor    %r8d,%r8d
mov    0x3b8(%r15),%rdi
lea    0x28aef(%rip),%rdx        # 746f0 <module.42+0xbe>
mov    0x27c(%r15),%ecx
mov    %r14,%r9
mov    %r8,%r14
mov    %rax,%r8
mov    %r14,%rax
mov    -0x8(%rbp),%rsi
callq  8a00 <TIFFErrorExt@plt>
mov    -0x28(%rbp),%r14
mov    $0xffffffffffffffff,%rax
mov    -0x18(%rbp),%r15
leaveq 
retq   
mov    -0x20(%rbp),%rax
xor    %rax,%rdx
cmp    %rsi,%rdx
jl     4bb55 <TIFFReadRawStrip1+0xf5>
lea    (%rax,%rsi,1),%rdx
cmp    %rdx,%rcx
jl     4bc4f <TIFFReadRawStrip1+0x1ef>
mov    %rax,%r9
jmpq   4bb55 <TIFFReadRawStrip1+0xf5>
sub    %rsi,%rcx
mov    %rcx,%r9
jmpq   4bb55 <TIFFReadRawStrip1+0xf5>
nopw   0x0(%rax,%rax,1)

000000000004bc60 <TIFFReadRawTile1>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    %r15,-0x18(%rbp)
mov    %rsi,-0x28(%rbp)
mov    %rcx,-0x20(%rbp)
mov    %rdx,-0x10(%rbp)
mov    %r8,-0x8(%rbp)
mov    %rdi,%r15
callq  8c70 <_TIFFFillStriles@plt>
test   %eax,%eax
jne    4bc95 <TIFFReadRawTile1+0x35>
mov    $0xffffffffffffffff,%rax
mov    -0x18(%rbp),%r15
leaveq 
retq   
mov    0x10(%r15),%eax
mov    %rax,%rcx
and    $0x20000,%ecx
test   %ecx,%ecx
je     4bcc5 <TIFFReadRawTile1+0x65>
lea    0x285c9(%rip),%rdi        # 74276 <module.8+0x14>
lea    0x285e5(%rip),%rsi        # 74299 <module.8+0x37>
mov    $0x44b,%edx
lea    0x28aaf(%rip),%rcx        # 7476f <module.42+0x13d>
callq  8490 <__assert_fail@plt>
and    $0x800,%eax
test   %eax,%eax
jne    4bd31 <TIFFReadRawTile1+0xd1>
mov    0xe8(%r15),%rcx
mov    -0x28(%rbp),%rdx
mov    %edx,%eax
mov    (%rcx,%rax,8),%rsi
mov    %r15,%rdi
mov    %r14,-0x28(%rbp)
mov    %rdx,%r14
callq  82f0 <_TIFFSeekOK@plt>
test   %eax,%eax
jne    4bd7d <TIFFReadRawTile1+0x11d>
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
lea    0x28a7a(%rip),%rdx        # 74780 <module.42+0x14e>
mov    0x27c(%r15),%ecx
mov    0x2a8(%r15),%r8d
mov    %r14d,%r9d
mov    -0x8(%rbp),%rsi
callq  8a00 <TIFFErrorExt@plt>
mov    -0x28(%rbp),%r14
mov    $0xffffffffffffffff,%rax
mov    -0x18(%rbp),%r15
leaveq 
retq   
xor    %r9d,%r9d
mov    0xe8(%r15),%rcx
mov    -0x28(%rbp),%r10
mov    %r10d,%eax
mov    (%rcx,%rax,8),%rsi
movabs $0x7fffffffffffffff,%rax
cmp    %rax,%rsi
jbe    4bdaa <TIFFReadRawTile1+0x14a>
mov    -0x20(%rbp),%rax
cmp    %r9,%rax
jne    4bdc0 <TIFFReadRawTile1+0x160>
add    0x398(%r15),%rsi
mov    %rax,%r15
mov    %r15,%rdx
mov    -0x10(%rbp),%rdi
callq  8790 <_TIFFmemcpy@plt>
mov    %r15,%rax
mov    -0x18(%rbp),%r15
leaveq 
retq   
mov    0x3c0(%r15),%rax
mov    0x3b8(%r15),%rdi
mov    -0x20(%rbp),%r14
mov    %r14,%rdx
mov    -0x10(%rbp),%rsi
callq  *%rax
cmp    %r14,%rax
jne    4be08 <TIFFReadRawTile1+0x1a8>
mov    %r14,%rax
mov    -0x28(%rbp),%r14
mov    -0x18(%rbp),%r15
leaveq 
retq   
mov    0x3a0(%r15),%rcx
cmp    %rcx,%rsi
jle    4be4e <TIFFReadRawTile1+0x1ee>
mov    -0x20(%rbp),%rax
jmp    4bd59 <TIFFReadRawTile1+0xf9>
sub    $0x10,%rsp
xor    %r11d,%r11d
mov    0x3b8(%r15),%rdi
lea    0x28a12(%rip),%rdx        # 747e7 <module.42+0x1b5>
mov    0x27c(%r15),%ecx
mov    0x2a8(%r15),%r8d
mov    %r9,(%rsp)
mov    %rax,0x8(%rsp)
mov    %r10d,%r9d
mov    %r11,%rax
mov    -0x8(%rbp),%rsi
callq  8a00 <TIFFErrorExt@plt>
mov    $0xffffffffffffffff,%rax
mov    -0x18(%rbp),%r15
leaveq 
retq   
xor    %r9d,%r9d
mov    0x3b8(%r15),%rdi
lea    0x28990(%rip),%rdx        # 747a9 <module.42+0x177>
mov    0x27c(%r15),%ecx
mov    0x2a8(%r15),%r8d
mov    %r14,(%rsp)
mov    %r9,%r10
mov    %rax,%r9
mov    %r10,%rax
mov    -0x8(%rbp),%rsi
callq  8a00 <TIFFErrorExt@plt>
mov    -0x28(%rbp),%r14
mov    $0xffffffffffffffff,%rax
mov    -0x18(%rbp),%r15
leaveq 
retq   
mov    -0x20(%rbp),%rax
lea    (%rax,%rsi,1),%rdx
cmp    %rdx,%rsi
jg     4be6d <TIFFReadRawTile1+0x20d>
cmp    %rdx,%rax
jg     4be6d <TIFFReadRawTile1+0x20d>
cmp    %rdx,%rcx
jl     4be6d <TIFFReadRawTile1+0x20d>
mov    %rax,%r9
jmpq   4bd59 <TIFFReadRawTile1+0xf9>
sub    %rsi,%rcx
mov    %rcx,%r9
jmpq   4bd59 <TIFFReadRawTile1+0xf9>
nopl   0x0(%rax,%rax,1)

000000000004be80 <TIFFReadAndRealloc>:
push   %rbp
mov    %rsp,%rbp
sub    $0x60,%rsp
mov    %rdi,-0x58(%rbp)
mov    %rcx,-0x18(%rbp)
mov    %r8,-0x10(%rbp)
mov    %r9,-0x8(%rbp)
mov    %rbx,-0x20(%rbp)
mov    %r12,-0x28(%rbp)
mov    %r13,-0x30(%rbp)
mov    %r14,-0x38(%rbp)
mov    %r15,-0x40(%rbp)
xor    %r12d,%r12d
lea    (%rdx,%rsi,1),%rax
mov    %rax,-0x50(%rbp)
mov    %rsi,%r13
mov    %rdx,%r14
mov    $0x100000,%ebx
jmp    4bf14 <TIFFReadAndRealloc+0x94>
mov    %r13,%r15
sub    %r12,%r15
cmp    %rbx,%r15
jge    4bf34 <TIFFReadAndRealloc+0xb4>
lea    (%r15,%r14,1),%rax
add    %r12,%rax
cmp    0x370(%rdi),%rax
jg     4bf5b <TIFFReadAndRealloc+0xdb>
mov    %r14,%rax
add    0x368(%rdi),%rax
lea    (%r12,%rax,1),%rsi
mov    0x3c0(%rdi),%rax
mov    0x3b8(%rdi),%rdi
mov    %r15,%rdx
callq  *%rax
add    %rax,%r12
cmp    %rax,%r15
jne    4bfcc <TIFFReadAndRealloc+0x14c>
mov    -0x58(%rbp),%rdi
mov    -0x50(%rbp),%rax
cmp    %r13,%r12
jl     4bec4 <TIFFReadAndRealloc+0x44>
mov    $0x1,%eax
mov    -0x40(%rbp),%r15
mov    -0x38(%rbp),%r14
mov    -0x30(%rbp),%r13
mov    -0x28(%rbp),%r12
mov    -0x20(%rbp),%rbx
leaveq 
retq   
cmp    $0x3e700000,%rbx
jg     4becf <TIFFReadAndRealloc+0x4f>
mov    0x370(%rdi),%rcx
cmp    %rax,%rcx
jge    4becf <TIFFReadAndRealloc+0x4f>
lea    (%rbx,%rbx,4),%rax
add    %rax,%rax
mov    %rbx,%r15
mov    %rax,%rbx
jmpq   4becf <TIFFReadAndRealloc+0x4f>
mov    0x10(%rdi),%eax
and    $0x200,%eax
test   %eax,%eax
je     4c056 <TIFFReadAndRealloc+0x1d6>
lea    (%r14,%r15,1),%rax
lea    0x3ff(%rax,%r12,1),%rcx
mov    %rcx,%rsi
and    $0xfffffffffffffc00,%rsi
mov    %rsi,0x370(%rdi)
mov    %rcx,%rax
and    $0x3ff,%rax
cmp    %rax,%rcx
je     4c075 <TIFFReadAndRealloc+0x1f5>
mov    0x368(%rdi),%rax
mov    %rbx,-0x48(%rbp)
mov    %rdi,%rbx
mov    %rax,%rdi
callq  8100 <_TIFFrealloc@plt>
test   %rax,%rax
je     4c0a6 <TIFFReadAndRealloc+0x226>
mov    %rax,0x368(%rbx)
mov    %rbx,%rdi
mov    -0x48(%rbp),%rbx
jmpq   4bedf <TIFFReadAndRealloc+0x5f>
mov    -0x58(%rbp),%r15
mov    %r14,%rax
add    0x368(%r15),%rax
lea    (%r12,%rax,1),%rdi
lea    (%r12,%r14,1),%rax
mov    0x370(%r15),%rdx
sub    %rax,%rdx
xor    %ebx,%ebx
mov    %rbx,%rsi
callq  8550 <memset@plt>
mov    -0x18(%rbp),%rax
test   %eax,%eax
jne    4c0ff <TIFFReadAndRealloc+0x27f>
sub    $0x10,%rsp
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
lea    0x287d1(%rip),%rdx        # 747e7 <module.42+0x1b5>
mov    0x27c(%r15),%ecx
mov    0x2a8(%r15),%r8d
mov    %r12,(%rsp)
mov    %r13,0x8(%rsp)
mov    -0x10(%rbp),%rsi
mov    %esi,%r9d
mov    -0x8(%rbp),%rsi
callq  8a00 <TIFFErrorExt@plt>
mov    %rbx,%rax
mov    -0x40(%rbp),%r15
mov    -0x38(%rbp),%r14
mov    -0x30(%rbp),%r13
mov    -0x28(%rbp),%r12
mov    -0x20(%rbp),%rbx
leaveq 
retq   
lea    0x287d2(%rip),%rdi        # 7482f <module.42+0x1fd>
lea    0x28235(%rip),%rsi        # 74299 <module.8+0x37>
mov    $0x56,%edx
lea    0x287e5(%rip),%rcx        # 74855 <module.42+0x223>
callq  8490 <__assert_fail@plt>
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
lea    0x28233(%rip),%rdx        # 742b8 <module.8+0x56>
mov    -0x8(%rbp),%rsi
callq  8a00 <TIFFErrorExt@plt>
mov    -0x40(%rbp),%r15
mov    -0x38(%rbp),%r14
mov    -0x30(%rbp),%r13
mov    -0x28(%rbp),%r12
mov    -0x20(%rbp),%rbx
xor    %eax,%eax
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rbx),%rdi
lea    0x28216(%rip),%rdx        # 742cc <module.8+0x6a>
mov    0x27c(%rbx),%ecx
mov    -0x8(%rbp),%rsi
callq  8a00 <TIFFErrorExt@plt>
mov    0x368(%rbx),%rdi
callq  8bb0 <_TIFFfree@plt>
movq   $0x0,0x368(%rbx)
movq   $0x0,0x370(%rbx)
mov    -0x40(%rbp),%r15
mov    -0x38(%rbp),%r14
mov    -0x30(%rbp),%r13
mov    -0x28(%rbp),%r12
mov    -0x20(%rbp),%rbx
xor    %eax,%eax
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
lea    0x285e1(%rip),%rdx        # 746f0 <module.42+0xbe>
mov    0x27c(%r15),%ecx
mov    %r12,%r8
mov    %r13,%r9
mov    -0x8(%rbp),%rsi
callq  8a00 <TIFFErrorExt@plt>
mov    %rbx,%rax
mov    -0x40(%rbp),%r15
mov    -0x38(%rbp),%r14
mov    -0x30(%rbp),%r13
mov    -0x28(%rbp),%r12
mov    -0x20(%rbp),%rbx
leaveq 
retq   
xchg   %ax,%ax

000000000004c140 <TIFFFillStripPartial>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    %r15,-0x18(%rbp)
mov    %rdx,-0x30(%rbp)
mov    %rcx,-0x28(%rbp)
mov    %rsi,-0x20(%rbp)
mov    %rdi,%r15
callq  8c70 <_TIFFFillStriles@plt>
test   %eax,%eax
jne    4c16c <TIFFFillStripPartial+0x2c>
xor    %eax,%eax
mov    -0x18(%rbp),%r15
leaveq 
retq   
mov    0xf0(%r15),%rax
test   %rax,%rax
jne    4c180 <TIFFFillStripPartial+0x40>
xor    %eax,%eax
mov    -0x18(%rbp),%r15
leaveq 
retq   
movabs $0x3ffffffffffffffe,%rcx
mov    -0x30(%rbp),%rax
cmp    %rcx,%rax
jg     4c196 <TIFFFillStripPartial+0x56>
add    %rax,%rax
lea    0x286cb(%rip),%r8        # 74868 <module.57>
lea    0x280f5(%rip),%rsi        # 74299 <module.8+0x37>
lea    0x286da(%rip),%rcx        # 74885 <module.57+0x1d>
mov    0x370(%r15),%rdx
cmp    %rax,%rdx
jl     4c1e6 <TIFFFillStripPartial+0xa6>
mov    -0x28(%rbp),%rdx
test   %edx,%edx
je     4c1d5 <TIFFFillStripPartial+0x95>
movq   $0x0,0x380(%r15)
movq   $0x0,0x378(%r15)
mov    0x380(%r15),%r8
test   %r8,%r8
jg     4c203 <TIFFFillStripPartial+0xc3>
xor    %r10d,%r10d
jmp    4c218 <TIFFFillStripPartial+0xd8>
mov    -0x28(%rbp),%rdx
test   %edx,%edx
jne    4c2b2 <TIFFFillStripPartial+0x172>
lea    0x28684(%rip),%rdi        # 7487d <module.57+0x15>
mov    $0xc2,%edx
callq  8490 <__assert_fail@plt>
mov    0x368(%r15),%rdx
mov    0x388(%r15),%rdi
sub    %rdi,%rdx
lea    (%r8,%rdx,1),%r10
lea    0x286ab(%rip),%rdi        # 748ca <module.57+0x62>
test   %r10,%r10
jg     4c2f6 <TIFFFillStripPartial+0x1b6>
mov    0xe8(%r15),%rcx
mov    -0x20(%rbp),%rdx
movslq %edx,%r8
mov    0x378(%r15),%rsi
add    (%rcx,%r8,8),%rsi
add    0x380(%r15),%rsi
mov    %r15,%rdi
mov    %r13,-0x20(%rbp)
mov    %r14,-0x30(%rbp)
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %rdx,%rbx
mov    %r8,%r12
mov    %rax,%r13
mov    %r10,%r14
callq  82f0 <_TIFFSeekOK@plt>
test   %eax,%eax
jne    4c30e <TIFFFillStripPartial+0x1ce>
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
lea    0x28446(%rip),%rdx        # 746ca <module.42+0x98>
mov    0x27c(%r15),%ecx
movslq %ebx,%r8
lea    0x285d3(%rip),%rsi        # 74868 <module.57>
callq  8a00 <TIFFErrorExt@plt>
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x30(%rbp),%r14
mov    -0x20(%rbp),%r13
xor    %eax,%eax
mov    -0x18(%rbp),%r15
leaveq 
retq   
movl   $0xffffffff,0x284(%r15)
mov    0x10(%r15),%edi
and    $0x200,%edi
test   %edi,%edi
jne    4c1bb <TIFFFillStripPartial+0x7b>
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
lea    0x285bb(%rip),%rdx        # 7489a <module.57+0x32>
mov    -0x20(%rbp),%rcx
movslq %ecx,%rcx
mov    %r8,%rsi
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x18(%rbp),%r15
leaveq 
retq   
mov    0x10(%r15),%edx
and    $0x800000,%edx
test   %edx,%edx
je     4c31f <TIFFFillStripPartial+0x1df>
mov    $0xde,%edx
callq  8490 <__assert_fail@plt>
mov    0x370(%r15),%rsi
cmp    %rsi,%r13
jg     4c356 <TIFFFillStripPartial+0x216>
sub    %r14,%rsi
jmp    4c35c <TIFFFillStripPartial+0x21c>
mov    0x368(%r15),%rdi
mov    0x388(%r15),%rsi
mov    %r10,%rdx
mov    %r13,-0x10(%rbp)
mov    %r14,-0x30(%rbp)
mov    %rax,%r13
mov    %r10,%r14
callq  8a50 <memmove@plt>
mov    %r13,%rax
mov    %r14,%r10
mov    -0x30(%rbp),%r14
mov    -0x10(%rbp),%r13
jmpq   4c228 <TIFFFillStripPartial+0xe8>
sub    %r14,%r13
mov    %r13,%rsi
mov    0xf0(%r15),%rax
mov    (%rax,%r12,8),%rax
mov    0x380(%r15),%rdi
mov    0x378(%r15),%rdx
lea    (%rdi,%rdx,1),%rcx
neg    %rcx
add    %rax,%rcx
cmp    %rsi,%rcx
jae    4c38e <TIFFFillStripPartial+0x24e>
lea    (%rdi,%rdx,1),%rcx
sub    %rcx,%rax
mov    %rax,%rsi
mov    0x10(%r15),%eax
and    $0x800000,%eax
test   %eax,%eax
je     4c3ba <TIFFFillStripPartial+0x27a>
mov    $0xfd,%edx
lea    0x27ef2(%rip),%rsi        # 74299 <module.8+0x37>
lea    0x2851c(%rip),%rdi        # 748ca <module.57+0x62>
lea    0x284d0(%rip),%rcx        # 74885 <module.57+0x1d>
callq  8490 <__assert_fail@plt>
mov    $0x1,%ecx
mov    %r15,%rdi
mov    %rsi,%r13
mov    %r14,%rdx
xor    %r8d,%r8d
lea    0x28496(%rip),%r9        # 74868 <module.57>
callq  4be80 <TIFFReadAndRealloc>
test   %eax,%eax
jne    4c3f3 <TIFFFillStripPartial+0x2b3>
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x30(%rbp),%r14
mov    -0x20(%rbp),%r13
xor    %eax,%eax
mov    -0x18(%rbp),%r15
leaveq 
retq   
mov    0x380(%r15),%rax
add    0x378(%r15),%rax
sub    %r14,%rax
mov    %rax,0x378(%r15)
lea    (%r14,%r13,1),%rax
mov    %rax,0x380(%r15)
mov    %rax,0x390(%r15)
mov    0x368(%r15),%rdx
mov    %rdx,0x388(%r15)
mov    0x10(%r15),%ecx
movzwl 0x7e(%r15),%eax
and    %ecx,%eax
test   %eax,%eax
je     4c45d <TIFFFillStripPartial+0x31d>
mov    -0x28(%rbp),%rax
test   %eax,%eax
jne    4c492 <TIFFFillStripPartial+0x352>
mov    $0x1,%eax
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x30(%rbp),%r14
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r15
leaveq 
retq   
mov    %rcx,%rax
and    $0x100,%eax
test   %eax,%eax
jne    4c43a <TIFFFillStripPartial+0x2fa>
and    $0x800000,%ecx
test   %ecx,%ecx
je     4c4be <TIFFFillStripPartial+0x37e>
mov    $0x10e,%edx
lea    0x27e1a(%rip),%rsi        # 74299 <module.8+0x37>
lea    0x28444(%rip),%rdi        # 748ca <module.57+0x62>
lea    0x283f8(%rip),%rcx        # 74885 <module.57+0x1d>
callq  8490 <__assert_fail@plt>
movzwl 0x78(%r15),%eax
cmp    $0x7,%ax
je     4c4cf <TIFFFillStripPartial+0x38f>
mov    %rbx,%rsi
mov    %r15,%rdi
callq  4b710 <TIFFStartStrip>
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x30(%rbp),%r14
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r15
leaveq 
retq   
lea    (%r14,%rdx,1),%rdi
mov    %r13,%rsi
callq  8700 <TIFFReverseBits@plt>
jmpq   4c43a <TIFFFillStripPartial+0x2fa>
mov    0xf0(%r15),%rax
mov    (%rax,%r12,8),%rax
cmp    0x390(%r15),%rax
jbe    4c49d <TIFFFillStripPartial+0x35d>
mov    %r15,%rdi
callq  85b0 <TIFFJPEGIsFullStripRequired@plt>
test   %eax,%eax
je     4c49d <TIFFFillStripPartial+0x35d>
mov    %rbx,%rsi
mov    %r15,%rdi
callq  8880 <TIFFFillStrip@plt>
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x30(%rbp),%r14
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r15
leaveq 
retq   

000000000004c510 <TIFFSeek>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
xor    %r9d,%r9d
mov    0x5c(%rdi),%r8d
cmp    %esi,%r8d
jbe    4c56c <TIFFSeek+0x5c>
movzwl 0xaa(%rdi),%eax
cmp    $0x2,%ax
je     4c590 <TIFFSeek+0x80>
mov    0x84(%rdi),%ecx
xor    %edx,%edx
mov    %rsi,%rax
div    %ecx
mov    0x284(%rdi),%ecx
cmp    %eax,%ecx
jne    4c5c6 <TIFFSeek+0xb6>
mov    $0x1,%ecx
cmp    0x27c(%rdi),%esi
jb     4c5ff <TIFFSeek+0xef>
mov    0x27c(%rdi),%eax
cmp    %eax,%esi
jne    4c63f <TIFFSeek+0x12f>
mov    %rcx,%rax
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rdi),%r9
mov    (%rdi),%rdi
lea    0x2836f(%rip),%rdx        # 748ee <module.57+0x86>
mov    %esi,%ecx
mov    %rdi,%rsi
mov    %r9,%rdi
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
movzwl 0x82(%rdi),%r8d
cmp    %dx,%r8w
jbe    4c671 <TIFFSeek+0x161>
mov    0x84(%rdi),%r8d
xor    %r10d,%r10d
movzwl %dx,%ecx
imul   0xe0(%rdi),%ecx
mov    %r10,%rdx
mov    %rsi,%rax
div    %r8d
add    %ecx,%eax
jmpq   4c53e <TIFFSeek+0x2e>
mov    %rdi,%rcx
mov    %rax,%rdx
mov    %rdi,-0x20(%rbp)
mov    %rsi,-0x18(%rbp)
mov    %rax,-0x10(%rbp)
mov    %rdx,%rsi
mov    %rcx,%rdi
callq  8880 <TIFFFillStrip@plt>
test   %eax,%eax
je     4c696 <TIFFSeek+0x186>
xor    %r9d,%r9d
mov    -0x10(%rbp),%rax
mov    -0x18(%rbp),%rsi
mov    -0x20(%rbp),%rdi
jmpq   4c548 <TIFFSeek+0x38>
mov    0x378(%rdi),%rdx
test   %rdx,%rdx
jne    4c69a <TIFFSeek+0x18a>
mov    %rdi,%rcx
mov    %rdi,-0x20(%rbp)
mov    %rsi,-0x18(%rbp)
mov    %rax,%rsi
mov    %rcx,%rdi
callq  4b710 <TIFFStartStrip>
test   %eax,%eax
je     4c6c9 <TIFFSeek+0x1b9>
mov    $0x1,%ecx
mov    -0x18(%rbp),%rsi
mov    -0x20(%rbp),%rdi
jmpq   4c559 <TIFFSeek+0x49>
neg    %eax
add    %esi,%eax
mov    %rdi,%rcx
mov    %r14,-0x8(%rbp)
mov    %r15,-0x20(%rbp)
mov    %rdi,%r14
mov    %rcx,%rdi
mov    %rsi,%r15
mov    %rax,%rsi
callq  *0x330(%r14)
test   %eax,%eax
jne    4c6cd <TIFFSeek+0x1bd>
mov    -0x20(%rbp),%r15
mov    -0x8(%rbp),%r14
xor    %eax,%eax
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rdi),%r9
mov    (%rdi),%rsi
lea    0x28289(%rip),%rdi        # 7490d <module.57+0xa5>
movzwl %dx,%ecx
mov    %rdi,%rdx
mov    %r9,%rdi
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
xor    %eax,%eax
leaveq 
retq   
mov    %rdi,%rdx
mov    %rdi,-0x20(%rbp)
mov    %rsi,-0x10(%rbp)
mov    %rax,%rsi
mov    %rdx,%rdi
mov    %r9,%rdx
callq  4c140 <TIFFFillStripPartial>
test   %eax,%eax
je     4c6e3 <TIFFSeek+0x1d3>
mov    $0x1,%ecx
mov    -0x10(%rbp),%rsi
mov    -0x20(%rbp),%rdi
jmpq   4c559 <TIFFSeek+0x49>
xor    %eax,%eax
leaveq 
retq   
mov    %r15d,0x27c(%r14)
mov    -0x20(%rbp),%r15
mov    -0x8(%rbp),%r14
mov    $0x1,%eax
leaveq 
retq   
xor    %eax,%eax
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

000000000004c6f0 <TIFFReadEncodedStripGetStripSize>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %r15,-0x8(%rbp)
mov    %rsi,-0x18(%rbp)
mov    %rdx,-0x10(%rbp)
xor    %esi,%esi
mov    %rdi,%r15
callq  4b9e0 <TIFFCheckRead>
test   %eax,%eax
jne    4c71f <TIFFReadEncodedStripGetStripSize+0x2f>
mov    $0xffffffffffffffff,%rax
mov    -0x8(%rbp),%r15
leaveq 
retq   
mov    0xe4(%r15),%r8d
mov    -0x18(%rbp),%rcx
cmp    %ecx,%r8d
jbe    4c755 <TIFFReadEncodedStripGetStripSize+0x65>
mov    0x5c(%r15),%r9d
mov    0x84(%r15),%esi
cmp    %esi,%r9d
jae    4c742 <TIFFReadEncodedStripGetStripSize+0x52>
mov    %r9,%rsi
mov    %r15,%rdi
mov    0x5c(%rdi),%eax
xor    %edx,%edx
div    %esi
test   %edx,%edx
jne    4c780 <TIFFReadEncodedStripGetStripSize+0x90>
xor    %r8d,%r8d
jmp    4c786 <TIFFReadEncodedStripGetStripSize+0x96>
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
lea    0x281ca(%rip),%rsi        # 7492f <module.64>
lea    0x27baf(%rip),%rdx        # 7431b <module.15+0x11>
mov    %ecx,%ecx
callq  8a00 <TIFFErrorExt@plt>
mov    $0xffffffffffffffff,%rax
mov    -0x8(%rbp),%r15
leaveq 
retq   
mov    $0x1,%r8d
mov    %r9,%rax
xor    %edx,%edx
div    %esi
add    %eax,%r8d
mov    -0x10(%rbp),%r9
test   %r9,%r9
je     4c7a5 <TIFFReadEncodedStripGetStripSize+0xb5>
xor    %edx,%edx
mov    %rcx,%rax
div    %r8d
mov    %ax,(%r9)
mov    %rcx,%rax
xor    %edx,%edx
div    %r8d
mov    %rsi,%rcx
imul   %edx,%ecx
mov    0x5c(%rdi),%eax
sub    %ecx,%eax
cmp    %eax,%esi
jb     4c7bf <TIFFReadEncodedStripGetStripSize+0xcf>
mov    %rax,%rsi
callq  82b0 <TIFFVStripSize@plt>
test   %rax,%rax
jne    4c7d6 <TIFFReadEncodedStripGetStripSize+0xe6>
mov    $0xffffffffffffffff,%rax
mov    -0x8(%rbp),%r15
leaveq 
retq   
mov    -0x8(%rbp),%r15
leaveq 
retq   
nopl   0x0(%rax)

000000000004c7e0 <TIFFReadRawStripOrTile2>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
lea    0x27aaa(%rip),%r11        # 74299 <module.8+0x37>
lea    0x2815d(%rip),%r9        # 74953 <module.64+0x24>
mov    0x10(%rdi),%r10d
mov    %r10,%rax
and    $0x800,%eax
test   %eax,%eax
jne    4c829 <TIFFReadRawStripOrTile2+0x49>
and    $0x20000,%r10d
test   %r10d,%r10d
je     4c840 <TIFFReadRawStripOrTile2+0x60>
mov    %r9,%rcx
mov    %r11,%rsi
lea    0x27a57(%rip),%rdi        # 74276 <module.8+0x14>
mov    $0x2a3,%edx
callq  8490 <__assert_fail@plt>
mov    %r9,%rcx
mov    %r11,%rsi
lea    0x2810e(%rip),%rdi        # 74944 <module.64+0x15>
mov    $0x2a2,%edx
callq  8490 <__assert_fail@plt>
mov    0xe8(%rdi),%r9
mov    %esi,%eax
mov    (%r9,%rax,8),%rax
mov    %rdi,%r9
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rcx,%rbx
mov    %rdi,%r12
mov    %r9,%rdi
mov    %rdx,%r13
mov    %rsi,%r14
mov    %rax,%rsi
mov    %r8,%r15
callq  82f0 <_TIFFSeekOK@plt>
test   %eax,%eax
jne    4c8d4 <TIFFReadRawStripOrTile2+0xf4>
test   %r13d,%r13d
jne    4c90b <TIFFReadRawStripOrTile2+0x12b>
xor    %eax,%eax
mov    0x3b8(%r12),%rdi
lea    0x27ee4(%rip),%rdx        # 74780 <module.42+0x14e>
mov    0x27c(%r12),%ecx
mov    0x2a8(%r12),%r8d
mov    %r14d,%r9d
mov    %r15,%rsi
callq  8a00 <TIFFErrorExt@plt>
mov    $0xffffffffffffffff,%rax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
mov    %r13,%rcx
mov    %r12,%rdi
mov    %r14,%r8
mov    %r15,%r9
xor    %edx,%edx
mov    %rbx,%rsi
callq  4be80 <TIFFReadAndRealloc>
test   %eax,%eax
jne    4c94c <TIFFReadRawStripOrTile2+0x16c>
mov    $0xffffffffffffffff,%rax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%r12),%rdi
lea    0x27dae(%rip),%rdx        # 746ca <module.42+0x98>
mov    0x27c(%r12),%ecx
mov    %r14d,%r8d
mov    %r15,%rsi
callq  8a00 <TIFFErrorExt@plt>
mov    $0xffffffffffffffff,%rax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
mov    %rbx,%rax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)
nop

000000000004c970 <TIFFScanlineSize64>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
lea    0x27fec(%rip),%rcx        # 7496b <module.8>
movzwl 0xaa(%rdi),%eax
cmp    $0x1,%ax
je     4c9b5 <TIFFScanlineSize64+0x45>
mov    0x58(%rdi),%esi
movzwl 0x74(%rdi),%edx
mov    %rdi,%rax
mov    %rdi,-0x8(%rbp)
mov    %rax,%rdi
callq  8300 <_TIFFMultiply64@plt>
add    $0x7,%rax
shr    $0x3,%rax
mov    -0x8(%rbp),%rdi
test   %rax,%rax
je     4ca03 <TIFFScanlineSize64+0x93>
leaveq 
retq   
movzwl 0x7a(%rdi),%eax
cmp    $0x6,%ax
je     4ca23 <TIFFScanlineSize64+0xb3>
mov    0x58(%rdi),%esi
movzwl 0x82(%rdi),%edx
mov    %rdi,%rax
mov    %r15,-0x8(%rbp)
mov    %rdi,%r15
mov    %rax,%rdi
callq  8300 <_TIFFMultiply64@plt>
mov    %rax,%rsi
movzwl 0x74(%r15),%edx
mov    %r15,%rdi
lea    0x27f7e(%rip),%rcx        # 7496b <module.8>
callq  8300 <_TIFFMultiply64@plt>
add    $0x7,%rax
shr    $0x3,%rax
mov    %r15,%rdi
mov    -0x8(%rbp),%r15
jmp    4c9ae <TIFFScanlineSize64+0x3e>
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
lea    0x27fa6(%rip),%rdx        # 749b9 <module.8+0x4e>
lea    0x27f51(%rip),%rsi        # 7496b <module.8>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
movzwl 0x82(%rdi),%eax
cmp    $0x3,%ax
jne    4c9bf <TIFFScanlineSize64+0x4f>
mov    0x10(%rdi),%eax
and    $0x4000,%eax
test   %eax,%eax
jne    4c9bf <TIFFScanlineSize64+0x4f>
xor    %eax,%eax
mov    $0x212,%esi
lea    -0xc(%rbp),%rdx
lea    -0xa(%rbp),%rcx
mov    %rdi,%r8
mov    %r15,-0x8(%rbp)
mov    %rdi,%r15
mov    %r8,%rdi
callq  8390 <TIFFGetFieldDefaulted@plt>
movzwl -0xc(%rbp),%ecx
cmp    $0x1,%cx
jne    4ca85 <TIFFScanlineSize64+0x115>
lea    -0xa(%rbp),%rax
movzwl (%rax),%esi
cmp    $0x1,%si
jne    4cab5 <TIFFScanlineSize64+0x145>
mov    0x58(%r15),%edx
mov    %rcx,%rax
neg    %eax
cmp    %edx,%eax
ja     4cac3 <TIFFScanlineSize64+0x153>
xor    %eax,%eax
jmp    4cacb <TIFFScanlineSize64+0x15b>
cmp    $0x2,%cx
je     4ca67 <TIFFScanlineSize64+0xf7>
cmp    $0x4,%cx
je     4ca67 <TIFFScanlineSize64+0xf7>
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
lea    0x27efe(%rip),%rdx        # 7499f <module.8+0x34>
lea    0x27ec3(%rip),%rsi        # 7496b <module.8>
callq  8a00 <TIFFErrorExt@plt>
mov    -0x8(%rbp),%r15
xor    %eax,%eax
leaveq 
retq   
cmp    $0x2,%si
je     4ca74 <TIFFScanlineSize64+0x104>
cmp    $0x4,%si
jne    4ca91 <TIFFScanlineSize64+0x121>
jmp    4ca74 <TIFFScanlineSize64+0x104>
lea    -0x1(%rcx,%rdx,1),%eax
xor    %edx,%edx
div    %ecx
imul   %si,%cx
add    $0x2,%ecx
movzwl %cx,%edx
mov    %eax,%esi
mov    %r15,%rdi
lea    0x27e8a(%rip),%rcx        # 7496b <module.8>
callq  8300 <_TIFFMultiply64@plt>
mov    %rax,%rsi
movzwl 0x74(%r15),%edx
mov    %r15,%rdi
lea    0x27e73(%rip),%rcx        # 7496b <module.8>
callq  8300 <_TIFFMultiply64@plt>
add    $0x7,%rax
shr    $0x3,%rax
lea    -0xa(%rbp),%rcx
movzwl (%rcx),%ecx
mov    %r15,%rdi
xor    %edx,%edx
div    %rcx
mov    -0x8(%rbp),%r15
jmpq   4c9ae <TIFFScanlineSize64+0x3e>
nopl   (%rax)

000000000004cb20 <TIFFScanlineSize>:
push   %rbp
mov    %rsp,%rbp
callq  8220 <TIFFScanlineSize64@plt>
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

000000000004cb30 <TIFFRasterScanlineSize64>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x8(%rbp)
movzwl 0x74(%rdi),%esi
mov    0x58(%rdi),%edx
lea    0x27e8e(%rip),%rcx        # 749d8 <module.13>
mov    %rdi,%r15
callq  8300 <_TIFFMultiply64@plt>
movzwl 0xaa(%r15),%ecx
cmp    $0x1,%cx
je     4cb75 <TIFFRasterScanlineSize64+0x45>
mov    %rax,%rcx
and    $0x7,%rcx
test   %rcx,%rcx
jne    4cba4 <TIFFRasterScanlineSize64+0x74>
mov    %rax,%rsi
shr    $0x3,%rsi
jmp    4cbac <TIFFRasterScanlineSize64+0x7c>
mov    %rax,%rsi
mov    %r15,%rdi
movzwl 0x82(%rdi),%edx
lea    0x27e4f(%rip),%rcx        # 749d8 <module.13>
callq  8300 <_TIFFMultiply64@plt>
mov    %rax,%rcx
and    $0x7,%rcx
test   %rcx,%rcx
jne    4cbc8 <TIFFRasterScanlineSize64+0x98>
shr    $0x3,%rax
mov    -0x8(%rbp),%r15
leaveq 
retq   
shr    $0x3,%rax
lea    0x1(%rax),%rsi
mov    %r15,%rdi
movzwl 0x82(%rdi),%edx
lea    0x27e1b(%rip),%rcx        # 749d8 <module.13>
callq  8300 <_TIFFMultiply64@plt>
mov    -0x8(%rbp),%r15
leaveq 
retq   
shr    $0x3,%rax
add    $0x1,%rax
mov    -0x8(%rbp),%r15
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)

000000000004cbe0 <TIFFRasterScanlineSize>:
push   %rbp
mov    %rsp,%rbp
callq  8500 <TIFFRasterScanlineSize64@plt>
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

000000000004cbf0 <TIFFStripSize64>:
push   %rbp
mov    %rsp,%rbp
mov    0x5c(%rdi),%eax
mov    0x84(%rdi),%esi
cmp    %esi,%eax
jae    4cc04 <TIFFStripSize64+0x14>
mov    %rax,%rsi
callq  8c00 <TIFFVStripSize64@plt>
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

000000000004cc10 <TIFFStripSize>:
push   %rbp
mov    %rsp,%rbp
callq  82a0 <TIFFStripSize64@plt>
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

000000000004cc20 <TIFFRawStripSize64>:
push   %rbp
mov    %rsp,%rbp
mov    0xf0(%rdi),%rcx
mov    %esi,%eax
mov    (%rcx,%rax,8),%rax
test   %rax,%rax
je     4cc38 <TIFFRawStripSize64+0x18>
leaveq 
retq   
mov    0x3b8(%rdi),%rdi
lea    0x27dab(%rip),%r9        # 749f1 <module.16>
lea    0x27db7(%rip),%rdx        # 74a04 <module.16+0x13>
xor    %eax,%eax
mov    %esi,%r8d
mov    %r9,%rsi
mov    %rax,%rcx
callq  8a00 <TIFFErrorExt@plt>
mov    $0xffffffffffffffff,%rax
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)

000000000004cc70 <TIFFRawStripSize>:
push   %rbp
mov    %rsp,%rbp
callq  84c0 <TIFFRawStripSize64@plt>
cmp    $0xffffffffffffffff,%rax
jne    4cc88 <TIFFRawStripSize+0x18>
mov    $0xffffffffffffffff,%rax
leaveq 
retq   
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

000000000004cc90 <TIFFVStripSize64>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
cmp    $0xffffffff,%esi
jne    4cca0 <TIFFVStripSize64+0x10>
mov    0x5c(%rdi),%esi
lea    0x27d87(%rip),%rcx        # 74a2e <module.19>
movzwl 0xaa(%rdi),%eax
cmp    $0x1,%ax
je     4ccec <TIFFVStripSize64+0x5c>
mov    %rdi,%rax
mov    %r14,-0x10(%rbp)
mov    %r15,-0x18(%rbp)
mov    %rsi,%r14
mov    %rdi,%r15
mov    %rax,%rdi
callq  8220 <TIFFScanlineSize64@plt>
mov    %r14d,%esi
mov    %rax,%rdx
mov    %r15,%rdi
lea    0x27d51(%rip),%rcx        # 74a2e <module.19>
callq  8300 <_TIFFMultiply64@plt>
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
leaveq 
retq   
movzwl 0x7a(%rdi),%eax
cmp    $0x6,%ax
jne    4ccb4 <TIFFVStripSize64+0x24>
mov    0x10(%rdi),%eax
and    $0x4000,%eax
test   %eax,%eax
jne    4ccb4 <TIFFVStripSize64+0x24>
movzwl 0x82(%rdi),%eax
cmp    $0x3,%ax
jne    4cd64 <TIFFVStripSize64+0xd4>
xor    %eax,%eax
mov    $0x212,%r9d
lea    -0x1c(%rbp),%rdx
lea    -0x1a(%rbp),%rcx
mov    %rdi,%r8
mov    %r14,-0x10(%rbp)
mov    %r15,-0x18(%rbp)
mov    %rdi,%r14
mov    %r8,%rdi
mov    %rsi,%r15
mov    %r9,%rsi
callq  8390 <TIFFGetFieldDefaulted@plt>
movzwl -0x1c(%rbp),%ecx
cmp    $0x1,%cx
jne    4cd80 <TIFFVStripSize64+0xf0>
lea    -0x1a(%rbp),%r8
movzwl (%r8),%esi
cmp    $0x1,%si
jne    4cdbd <TIFFVStripSize64+0x12d>
mov    0x58(%r14),%eax
mov    %rcx,%rdx
neg    %edx
cmp    %eax,%edx
ja     4cdcb <TIFFVStripSize64+0x13b>
xor    %edi,%edi
jmp    4cdd6 <TIFFVStripSize64+0x146>
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
mov    %rcx,%rsi
lea    0x27c07(%rip),%rdx        # 7497e <module.8+0x13>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
cmp    $0x2,%cx
je     4cd45 <TIFFVStripSize64+0xb5>
cmp    $0x4,%cx
je     4cd45 <TIFFVStripSize64+0xb5>
xor    %eax,%eax
mov    0x3b8(%r14),%rdi
lea    0x27ca3(%rip),%rdx        # 74a3f <module.19+0x11>
movzwl -0x1c(%rbp),%ecx
movzwl -0x1a(%rbp),%r8d
lea    0x27c82(%rip),%rsi        # 74a2e <module.19>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
leaveq 
retq   
cmp    $0x2,%si
je     4cd53 <TIFFVStripSize64+0xc3>
cmp    $0x4,%si
jne    4cd8c <TIFFVStripSize64+0xfc>
jmp    4cd53 <TIFFVStripSize64+0xc3>
lea    -0x1(%rcx,%rax,1),%eax
xor    %edx,%edx
div    %ecx
mov    %rax,%rdi
movzwl (%r8),%r8d
mov    %r8,%rax
neg    %eax
cmp    %r15d,%eax
ja     4cde9 <TIFFVStripSize64+0x159>
xor    %r15d,%r15d
jmp    4cdf6 <TIFFVStripSize64+0x166>
lea    -0x1(%r8,%r15,1),%eax
xor    %edx,%edx
div    %r8d
mov    %rax,%r15
imul   %si,%cx
lea    0x2(%rcx),%eax
movzwl %ax,%edx
mov    %edi,%esi
mov    %r14,%rdi
lea    0x27c22(%rip),%rcx        # 74a2e <module.19>
callq  8300 <_TIFFMultiply64@plt>
movzwl 0x74(%r14),%edx
mov    %r14,%rdi
mov    %rax,%rsi
lea    0x27c0b(%rip),%rcx        # 74a2e <module.19>
mov    %r13,-0x8(%rbp)
mov    %rax,%r13
callq  8300 <_TIFFMultiply64@plt>
and    $0x7,%rax
test   %rax,%rax
jne    4ce5e <TIFFVStripSize64+0x1ce>
mov    %r13,%rsi
movzwl 0x74(%r14),%edx
mov    %r14,%rdi
lea    0x27be4(%rip),%r13        # 74a2e <module.19>
mov    %r13,%rcx
callq  8300 <_TIFFMultiply64@plt>
mov    %rax,%rsi
shr    $0x3,%rsi
mov    %r13,%rcx
jmp    4ce83 <TIFFVStripSize64+0x1f3>
mov    %r13,%rsi
movzwl 0x74(%r14),%edx
mov    %r14,%rdi
lea    0x27bbe(%rip),%r13        # 74a2e <module.19>
mov    %r13,%rcx
callq  8300 <_TIFFMultiply64@plt>
shr    $0x3,%rax
lea    0x1(%rax),%rsi
mov    %r13,%rcx
mov    %r15d,%edx
mov    %r14,%rdi
callq  8300 <_TIFFMultiply64@plt>
mov    -0x8(%rbp),%r13
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
leaveq 
retq   
nopl   0x0(%rax)

000000000004cea0 <TIFFVStripSize>:
push   %rbp
mov    %rsp,%rbp
callq  8c00 <TIFFVStripSize64@plt>
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

000000000004ceb0 <TIFFDefaultStripSize>:
push   %rbp
mov    %rsp,%rbp
callq  *0x340(%rdi)
leaveq 
retq   
nopl   0x0(%rax)

000000000004cec0 <TIFFComputeStrip>:
push   %rbp
mov    %rsp,%rbp
mov    %rsi,%rax
mov    %rdx,%rcx
xor    %edx,%edx
mov    0x84(%rdi),%r8d
div    %r8d
movzwl 0xaa(%rdi),%edx
cmp    $0x2,%dx
je     4cee5 <TIFFComputeStrip+0x25>
leaveq 
retq   
movzwl 0x82(%rdi),%r8d
cmp    %cx,%r8w
jbe    4cf01 <TIFFComputeStrip+0x41>
movzwl %cx,%ecx
imul   0xe0(%rdi),%ecx
add    %ecx,%eax
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
lea    0x27b50(%rip),%rsi        # 74a61 <module.22>
lea    0x27b5a(%rip),%rdx        # 74a72 <module.22+0x11>
movzwl %cx,%ecx
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nop

000000000004cf30 <TIFFNumberOfStrips>:
push   %rbp
mov    %rsp,%rbp
mov    0x84(%rdi),%ecx
cmp    $0xffffffff,%ecx
jne    4cf53 <TIFFNumberOfStrips+0x23>
mov    $0x1,%eax
movzwl 0xaa(%rdi),%ecx
cmp    $0x2,%cx
je     4cf63 <TIFFNumberOfStrips+0x33>
leaveq 
retq   
mov    0x5c(%rdi),%edx
mov    %rcx,%rax
neg    %eax
cmp    %edx,%eax
ja     4cf7b <TIFFNumberOfStrips+0x4b>
xor    %eax,%eax
jmp    4cf44 <TIFFNumberOfStrips+0x14>
mov    %rax,%rsi
movzwl 0x82(%rdi),%edx
lea    0x27b20(%rip),%rcx        # 74a94 <module.22+0x33>
callq  84f0 <_TIFFMultiply32@plt>
leaveq 
retq   
lea    -0x1(%rcx,%rdx,1),%eax
xor    %edx,%edx
div    %ecx
jmp    4cf44 <TIFFNumberOfStrips+0x14>
data16 nopw %cs:0x0(%rax,%rax,1)

000000000004cf90 <_TIFFDefaultStripSize>:
push   %rbp
mov    %rsp,%rbp
test   %esi,%esi
jle    4cf9d <_TIFFDefaultStripSize+0xd>
mov    %rsi,%rax
leaveq 
retq   
callq  8220 <TIFFScanlineSize64@plt>
test   %rax,%rax
je     4cfac <_TIFFDefaultStripSize+0x1c>
mov    %rax,%rcx
jmp    4cfb1 <_TIFFDefaultStripSize+0x21>
mov    $0x1,%ecx
mov    $0x2000,%eax
xor    %edx,%edx
div    %rcx
test   %rax,%rax
jne    4cfc7 <_TIFFDefaultStripSize+0x37>
mov    $0x1,%eax
leaveq 
retq   
mov    $0xffffffff,%ecx
cmp    %rcx,%rax
jbe    4cfd6 <_TIFFDefaultStripSize+0x46>
mov    %rcx,%rax
leaveq 
retq   
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

000000000004cfe0 <TIFFSwabShort>:
push   %rbp
mov    %rsp,%rbp
movzbl (%rdi),%eax
movzbl 0x1(%rdi),%ecx
mov    %al,0x1(%rdi)
mov    %cl,(%rdi)
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   (%rax)

000000000004d000 <TIFFSwabLong>:
push   %rbp
mov    %rsp,%rbp
movzbl (%rdi),%ecx
movzbl 0x3(%rdi),%eax
mov    %cl,0x3(%rdi)
mov    %al,(%rdi)
movzbl 0x1(%rdi),%ecx
movzbl 0x2(%rdi),%eax
mov    %cl,0x2(%rdi)
mov    %al,0x1(%rdi)
leaveq 
retq   

000000000004d020 <TIFFSwabLong8>:
push   %rbp
mov    %rsp,%rbp
movzbl (%rdi),%ecx
movzbl 0x7(%rdi),%eax
mov    %cl,0x7(%rdi)
mov    %al,(%rdi)
movzbl 0x1(%rdi),%ecx
movzbl 0x6(%rdi),%eax
mov    %cl,0x6(%rdi)
mov    %al,0x1(%rdi)
movzbl 0x2(%rdi),%ecx
movzbl 0x5(%rdi),%eax
mov    %cl,0x5(%rdi)
mov    %al,0x2(%rdi)
movzbl 0x3(%rdi),%ecx
movzbl 0x4(%rdi),%eax
mov    %cl,0x4(%rdi)
mov    %al,0x3(%rdi)
leaveq 
retq   
nopl   0x0(%rax)

000000000004d060 <TIFFSwabFloat>:
push   %rbp
mov    %rsp,%rbp
movzbl (%rdi),%ecx
movzbl 0x3(%rdi),%eax
mov    %cl,0x3(%rdi)
mov    %al,(%rdi)
movzbl 0x1(%rdi),%ecx
movzbl 0x2(%rdi),%eax
mov    %cl,0x2(%rdi)
mov    %al,0x1(%rdi)
leaveq 
retq   

000000000004d080 <TIFFSwabDouble>:
push   %rbp
mov    %rsp,%rbp
movzbl (%rdi),%ecx
movzbl 0x7(%rdi),%eax
mov    %cl,0x7(%rdi)
mov    %al,(%rdi)
movzbl 0x1(%rdi),%ecx
movzbl 0x6(%rdi),%eax
mov    %cl,0x6(%rdi)
mov    %al,0x1(%rdi)
movzbl 0x2(%rdi),%ecx
movzbl 0x5(%rdi),%eax
mov    %cl,0x5(%rdi)
mov    %al,0x2(%rdi)
movzbl 0x3(%rdi),%ecx
movzbl 0x4(%rdi),%eax
mov    %cl,0x4(%rdi)
mov    %al,0x3(%rdi)
leaveq 
retq   
nopl   0x0(%rax)

000000000004d0c0 <TIFFSwabArrayOfShort>:
push   %rbp
mov    %rsp,%rbp
jmp    4d0da <TIFFSwabArrayOfShort+0x1a>
movzbl (%rdi),%eax
movzbl 0x1(%rdi),%ecx
mov    %al,0x1(%rdi)
mov    %cl,(%rdi)
add    $0xffffffffffffffff,%rsi
add    $0x2,%rdi
test   %rsi,%rsi
jg     4d0c6 <TIFFSwabArrayOfShort+0x6>
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   0x0(%rax)

000000000004d0f0 <TIFFSwabArrayOfTriples>:
push   %rbp
mov    %rsp,%rbp
jmp    4d10a <TIFFSwabArrayOfTriples+0x1a>
movzbl (%rdi),%eax
movzbl 0x2(%rdi),%ecx
mov    %al,0x2(%rdi)
mov    %cl,(%rdi)
add    $0xffffffffffffffff,%rsi
add    $0x3,%rdi
test   %rsi,%rsi
jg     4d0f6 <TIFFSwabArrayOfTriples+0x6>
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   0x0(%rax)

000000000004d120 <TIFFSwabArrayOfLong>:
push   %rbp
mov    %rsp,%rbp
jmp    4d148 <TIFFSwabArrayOfLong+0x28>
movzbl (%rdi),%eax
movzbl 0x3(%rdi),%ecx
mov    %al,0x3(%rdi)
mov    %cl,(%rdi)
movzbl 0x1(%rdi),%ecx
movzbl 0x2(%rdi),%eax
mov    %cl,0x2(%rdi)
mov    %al,0x1(%rdi)
add    $0xffffffffffffffff,%rsi
add    $0x4,%rdi
test   %rsi,%rsi
jg     4d126 <TIFFSwabArrayOfLong+0x6>
leaveq 
retq   
nop

000000000004d150 <TIFFSwabArrayOfLong8>:
push   %rbp
mov    %rsp,%rbp
jmp    4d194 <TIFFSwabArrayOfLong8+0x44>
movzbl (%rdi),%ecx
movzbl 0x7(%rdi),%eax
mov    %cl,0x7(%rdi)
mov    %al,(%rdi)
movzbl 0x1(%rdi),%ecx
movzbl 0x6(%rdi),%eax
mov    %cl,0x6(%rdi)
mov    %al,0x1(%rdi)
movzbl 0x2(%rdi),%eax
movzbl 0x5(%rdi),%ecx
mov    %al,0x5(%rdi)
mov    %cl,0x2(%rdi)
movzbl 0x3(%rdi),%eax
movzbl 0x4(%rdi),%ecx
mov    %al,0x4(%rdi)
mov    %cl,0x3(%rdi)
add    $0xffffffffffffffff,%rsi
add    $0x8,%rdi
test   %rsi,%rsi
jg     4d156 <TIFFSwabArrayOfLong8+0x6>
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

000000000004d1a0 <TIFFSwabArrayOfFloat>:
push   %rbp
mov    %rsp,%rbp
jmp    4d1c8 <TIFFSwabArrayOfFloat+0x28>
movzbl (%rdi),%eax
movzbl 0x3(%rdi),%ecx
mov    %al,0x3(%rdi)
mov    %cl,(%rdi)
movzbl 0x1(%rdi),%ecx
movzbl 0x2(%rdi),%eax
mov    %cl,0x2(%rdi)
mov    %al,0x1(%rdi)
add    $0xffffffffffffffff,%rsi
add    $0x4,%rdi
test   %rsi,%rsi
jg     4d1a6 <TIFFSwabArrayOfFloat+0x6>
leaveq 
retq   
nop

000000000004d1d0 <TIFFSwabArrayOfDouble>:
push   %rbp
mov    %rsp,%rbp
jmp    4d214 <TIFFSwabArrayOfDouble+0x44>
movzbl (%rdi),%ecx
movzbl 0x7(%rdi),%eax
mov    %cl,0x7(%rdi)
mov    %al,(%rdi)
movzbl 0x1(%rdi),%ecx
movzbl 0x6(%rdi),%eax
mov    %cl,0x6(%rdi)
mov    %al,0x1(%rdi)
movzbl 0x2(%rdi),%eax
movzbl 0x5(%rdi),%ecx
mov    %al,0x5(%rdi)
mov    %cl,0x2(%rdi)
movzbl 0x3(%rdi),%eax
movzbl 0x4(%rdi),%ecx
mov    %al,0x4(%rdi)
mov    %cl,0x3(%rdi)
add    $0xffffffffffffffff,%rsi
add    $0x8,%rdi
test   %rsi,%rsi
jg     4d1d6 <TIFFSwabArrayOfDouble+0x6>
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

000000000004d220 <TIFFReverseBits>:
push   %rbp
mov    %rsp,%rbp
lea    0x2787c(%rip),%rcx        # 74aa7 <TIFFBitRevTable>
jmp    4d28b <TIFFReverseBits+0x6b>
movzbl (%rdi),%eax
movzbl (%rax,%rcx,1),%eax
mov    %al,(%rdi)
movzbl 0x1(%rdi),%eax
movzbl (%rax,%rcx,1),%eax
mov    %al,0x1(%rdi)
movzbl 0x2(%rdi),%eax
movzbl (%rax,%rcx,1),%eax
mov    %al,0x2(%rdi)
movzbl 0x3(%rdi),%eax
movzbl (%rax,%rcx,1),%eax
mov    %al,0x3(%rdi)
movzbl 0x4(%rdi),%eax
movzbl (%rax,%rcx,1),%eax
mov    %al,0x4(%rdi)
movzbl 0x5(%rdi),%eax
movzbl (%rax,%rcx,1),%eax
mov    %al,0x5(%rdi)
movzbl 0x6(%rdi),%eax
movzbl (%rax,%rcx,1),%eax
mov    %al,0x6(%rdi)
movzbl 0x7(%rdi),%eax
movzbl (%rax,%rcx,1),%eax
mov    %al,0x7(%rdi)
add    $0x8,%rdi
add    $0xfffffffffffffff8,%rsi
cmp    $0x8,%rsi
jg     4d22d <TIFFReverseBits+0xd>
jmp    4d2a4 <TIFFReverseBits+0x84>
movzbl (%rdi),%eax
movzbl (%rax,%rcx,1),%eax
mov    %al,(%rdi)
add    $0xffffffffffffffff,%rsi
add    $0x1,%rdi
test   %rsi,%rsi
jg     4d293 <TIFFReverseBits+0x73>
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

000000000004d2b0 <TIFFGetBitRevTable>:
push   %rbp
mov    %rsp,%rbp
test   %edi,%edi
je     4d2c1 <TIFFGetBitRevTable+0x11>
lea    0x277e8(%rip),%rax        # 74aa7 <TIFFBitRevTable>
leaveq 
retq   
lea    0x278df(%rip),%rax        # 74ba7 <TIFFNoBitRevTable>
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

000000000004d2d0 <TIFFInitThunderScan>:
push   %rbp
mov    %rsp,%rbp
lea    0x25(%rip),%rax        # 4d300 <ThunderSetupDecode>
mov    %rax,0x2c8(%rdi)
lea    0x3f7(%rip),%rax        # 4d6e0 <ThunderDecodeRow>
mov    %rax,0x2f8(%rdi)
mov    %rax,0x308(%rdi)
mov    $0x1,%eax
leaveq 
retq   
xchg   %ax,%ax

000000000004d300 <ThunderSetupDecode>:
push   %rbp
mov    %rsp,%rbp
movzwl 0x74(%rdi),%ecx
cmp    $0x4,%cx
jne    4d315 <ThunderSetupDecode+0x15>
mov    $0x1,%eax
leaveq 
retq   
mov    0x3b8(%rdi),%rdi
lea    0x279b5(%rip),%rsi        # 74cd8 <module.8>
lea    0x279c1(%rip),%rdx        # 74ceb <module.8+0x13>
xor    %eax,%eax
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)

000000000004d340 <ThunderDecode>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %r13,-0x8(%rbp)
mov    %r14,-0x10(%rbp)
mov    %r15,-0x18(%rbp)
mov    0x388(%rdi),%rcx
mov    0x390(%rdi),%r10
xor    %r13d,%r13d
lea    0x2793c(%rip),%r14        # 74ca8 <twobitdeltas>
lea    0x27945(%rip),%r11        # 74cb8 <threebitdeltas>
mov    %r13,%r8
mov    %r8,%r9
jmp    4d3b1 <ThunderDecode+0x71>
movzbl (%rsi),%eax
or     %eax,%r8d
mov    %r8b,(%rsi)
add    $0x1,%r9
add    $0xffffffff,%ecx
add    $0x1,%rsi
movslq %ecx,%rax
add    %rax,%r9
cmp    %r9,%rdx
jg     4d3f0 <ThunderDecode+0xb0>
cmp    $0xffffffff,%ecx
jne    4d3aa <ThunderDecode+0x6a>
add    $0xffffffffffffffff,%rsi
movzbl (%rsi),%eax
and    $0xf0,%al
mov    %al,(%rsi)
and    $0xf,%r8d
mov    %r15,%rcx
test   %r10,%r10
jle    4d3f6 <ThunderDecode+0xb6>
cmp    %rdx,%r9
jge    4d3f6 <ThunderDecode+0xb6>
lea    0x1(%rcx),%r15
add    $0xffffffffffffffff,%r10
movzbl (%rcx),%ecx
mov    %rcx,%rax
and    $0xc0,%eax
cmp    $0x40,%eax
jle    4d41c <ThunderDecode+0xdc>
cmp    $0x80,%eax
je     4d42e <ThunderDecode+0xee>
cmp    $0xc0,%eax
je     4d451 <ThunderDecode+0x111>
mov    %r15,%rcx
jmp    4d3b1 <ThunderDecode+0x71>
mov    %r8b,(%rsi)
add    $0x1,%rsi
add    $0xfffffffe,%ecx
test   %ecx,%ecx
jg     4d3e6 <ThunderDecode+0xa6>
jmp    4d39a <ThunderDecode+0x5a>
mov    %rcx,0x388(%rdi)
mov    %r10,0x390(%rdi)
cmp    %rdx,%r9
jne    4d47b <ThunderDecode+0x13b>
mov    $0x1,%eax
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
leaveq 
retq   
test   %eax,%eax
je     4d497 <ThunderDecode+0x157>
cmp    $0x40,%eax
je     4d4b5 <ThunderDecode+0x175>
mov    %r15,%rcx
jmp    4d3b1 <ThunderDecode+0x71>
mov    %rcx,%rax
and    $0x38,%eax
cmp    $0x20,%eax
jne    4d4e7 <ThunderDecode+0x1a7>
and    $0x7,%ecx
cmp    $0x4,%ecx
jne    4d527 <ThunderDecode+0x1e7>
mov    %r15,%rcx
jmpq   4d3b1 <ThunderDecode+0x71>
and    $0xf,%ecx
lea    0x1(%r9),%r8
and    $0x1,%r9
test   %r9,%r9
jg     4d543 <ThunderDecode+0x203>
mov    %rcx,%rax
shl    $0x4,%eax
mov    %al,(%rsi)
mov    %r8,%r9
mov    %rcx,%r8
mov    %r15,%rcx
jmpq   4d3b1 <ThunderDecode+0x71>
mov    0x3b8(%rdi),%r10
cmp    %rdx,%r9
jl     4d55c <ThunderDecode+0x21c>
lea    0x278e9(%rip),%rcx        # 74d7b <module.10+0x40>
jmpq   4d563 <ThunderDecode+0x223>
mov    %r9,%rax
and    $0x1,%rax
test   %rax,%rax
jg     4d37b <ThunderDecode+0x3b>
mov    %r8,%rax
shl    $0x4,%eax
add    %eax,%r8d
jmpq   4d38f <ThunderDecode+0x4f>
mov    %rcx,%rax
and    $0x30,%eax
cmp    $0x20,%eax
jne    4d59a <ThunderDecode+0x25a>
mov    %rcx,%rax
and    $0xc,%eax
cmp    $0x8,%eax
jne    4d5da <ThunderDecode+0x29a>
and    $0x3,%ecx
cmp    $0x2,%ecx
jne    4d616 <ThunderDecode+0x2d6>
mov    %r15,%rcx
jmpq   4d3b1 <ThunderDecode+0x71>
mov    %rcx,%rax
and    $0x38,%eax
shr    $0x3,%eax
movslq %eax,%rax
add    (%r11,%rax,4),%r8d
and    $0xf,%r8d
cmp    %rdx,%r9
jge    4d43d <ThunderDecode+0xfd>
lea    0x1(%r9),%rax
and    $0x1,%r9
test   %r9,%r9
jg     4d62e <ThunderDecode+0x2ee>
mov    %r8,%r9
shl    $0x4,%r9d
mov    %r9b,(%rsi)
mov    %rax,%r9
jmpq   4d43d <ThunderDecode+0xfd>
movslq %ecx,%rax
add    (%r11,%rax,4),%r8d
and    $0xf,%r8d
cmp    %r9,%rdx
jg     4d644 <ThunderDecode+0x304>
mov    %r15,%rcx
jmpq   4d3b1 <ThunderDecode+0x71>
movzbl (%rsi),%eax
or     %cl,%al
mov    %al,(%rsi)
add    $0x1,%rsi
mov    %r8,%r9
mov    %rcx,%r8
mov    %r15,%rcx
jmpq   4d3b1 <ThunderDecode+0x71>
lea    0x2780d(%rip),%rcx        # 74d70 <module.10+0x35>
xor    %eax,%eax
lea    0x277cf(%rip),%rsi        # 74d3b <module.10>
lea    0x277d6(%rip),%r11        # 74d49 <module.10+0xe>
mov    0x27c(%rdi),%r8d
mov    %rdx,(%rsp)
mov    %r11,%rdx
mov    %r10,%rdi
callq  8a00 <TIFFErrorExt@plt>
mov    %r13,%rax
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
leaveq 
retq   
mov    %rcx,%rax
and    $0x30,%eax
shr    $0x4,%eax
movslq %eax,%rax
add    (%r14,%rax,4),%r8d
and    $0xf,%r8d
cmp    %rdx,%r9
jge    4d4c4 <ThunderDecode+0x184>
lea    0x1(%r9),%rax
and    $0x1,%r9
test   %r9,%r9
jg     4d664 <ThunderDecode+0x324>
mov    %r8,%r9
shl    $0x4,%r9d
mov    %r9b,(%rsi)
mov    %rax,%r9
jmpq   4d4c4 <ThunderDecode+0x184>
mov    %rcx,%rax
and    $0xc,%eax
shr    $0x2,%eax
movslq %eax,%rax
add    (%r14,%rax,4),%r8d
and    $0xf,%r8d
cmp    %r9,%rdx
jle    4d4d3 <ThunderDecode+0x193>
lea    0x1(%r9),%rax
and    $0x1,%r9
test   %r9,%r9
jg     4d67a <ThunderDecode+0x33a>
mov    %r8,%r9
shl    $0x4,%r9d
mov    %r9b,(%rsi)
mov    %rax,%r9
jmpq   4d4d3 <ThunderDecode+0x193>
movslq %ecx,%rax
add    (%r14,%rax,4),%r8d
and    $0xf,%r8d
cmp    %r9,%rdx
jg     4d690 <ThunderDecode+0x350>
mov    %r15,%rcx
jmpq   4d3b1 <ThunderDecode+0x71>
movzbl (%rsi),%r9d
or     %r8b,%r9b
mov    %r9b,(%rsi)
add    $0x1,%rsi
mov    %rax,%r9
jmpq   4d43d <ThunderDecode+0xfd>
lea    0x1(%r9),%rcx
and    $0x1,%r9
test   %r9,%r9
jg     4d6b0 <ThunderDecode+0x370>
mov    %r8,%rax
shl    $0x4,%eax
mov    %al,(%rsi)
mov    %rcx,%r9
mov    %r15,%rcx
jmpq   4d3b1 <ThunderDecode+0x71>
movzbl (%rsi),%r9d
or     %r8b,%r9b
mov    %r9b,(%rsi)
add    $0x1,%rsi
mov    %rax,%r9
jmpq   4d4c4 <ThunderDecode+0x184>
movzbl (%rsi),%r9d
or     %r8b,%r9b
mov    %r9b,(%rsi)
add    $0x1,%rsi
mov    %rax,%r9
jmpq   4d4d3 <ThunderDecode+0x193>
lea    0x1(%r9),%rcx
and    $0x1,%r9
test   %r9,%r9
jg     4d6c7 <ThunderDecode+0x387>
mov    %r8,%rax
shl    $0x4,%eax
mov    %al,(%rsi)
mov    %rcx,%r9
mov    %r15,%rcx
jmpq   4d3b1 <ThunderDecode+0x71>
movzbl (%rsi),%eax
or     %r8b,%al
mov    %al,(%rsi)
add    $0x1,%rsi
mov    %rcx,%r9
mov    %r15,%rcx
jmpq   4d3b1 <ThunderDecode+0x71>
movzbl (%rsi),%eax
or     %r8b,%al
mov    %al,(%rsi)
add    $0x1,%rsi
mov    %rcx,%r9
mov    %r15,%rcx
jmpq   4d3b1 <ThunderDecode+0x71>
xchg   %ax,%ax

000000000004d6e0 <ThunderDecodeRow>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %rdx,%rax
mov    %r13,%r8
mov    %r14,%r9
mov    %rdi,%r14
mov    %r15,%r10
mov    %rsi,%r15
xor    %r13d,%r13d
mov    0x358(%r14),%rcx
cqto   
mov    %r12,%r11
mov    %rax,%r12
idiv   %rcx
test   %rdx,%rdx
jne    4d726 <ThunderDecodeRow+0x46>
mov    %r11,-0x8(%rbp)
mov    %r8,-0x10(%rbp)
mov    %r9,-0x18(%rbp)
mov    %r10,-0x20(%rbp)
jmp    4d772 <ThunderDecodeRow+0x92>
xor    %eax,%eax
mov    0x3b8(%r14),%rdi
mov    %r11,%r12
mov    %r8,%r13
mov    %r9,%r14
mov    %r10,%r15
lea    0x27642(%rip),%rsi        # 74d84 <module.14>
lea    0x2764c(%rip),%rdx        # 74d95 <module.14+0x11>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
mov    0x58(%r14),%edx
mov    %r14,%rdi
mov    %r15,%rsi
callq  4d340 <ThunderDecode>
test   %eax,%eax
je     4d78e <ThunderDecodeRow+0xae>
mov    0x358(%r14),%rax
sub    %rax,%r12
add    %rax,%r15
test   %r12,%r12
jg     4d752 <ThunderDecodeRow+0x72>
mov    $0x1,%eax
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
leaveq 
retq   
mov    %r13,%rax
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)
nopl   (%rax)

000000000004d7b0 <TIFFTileRowSize64>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
lea    0x275fa(%rip),%rsi        # 74db9 <module.8>
mov    0x68(%rdi),%eax
test   %eax,%eax
je     4d80a <TIFFTileRowSize64+0x5a>
mov    0x64(%rdi),%edx
test   %edx,%edx
je     4d823 <TIFFTileRowSize64+0x73>
movzwl 0x74(%rdi),%esi
lea    0x2761a(%rip),%rcx        # 74df2 <module.8+0x39>
mov    %rdi,%rax
mov    %r15,-0x8(%rbp)
mov    %rdi,%r15
mov    %rax,%rdi
callq  8300 <_TIFFMultiply64@plt>
movzwl 0xaa(%r15),%ecx
cmp    $0x1,%cx
je     4d83c <TIFFTileRowSize64+0x8c>
mov    %rax,%rcx
and    $0x7,%rcx
test   %rcx,%rcx
jne    4d85d <TIFFTileRowSize64+0xad>
shr    $0x3,%rax
jmp    4d865 <TIFFTileRowSize64+0xb5>
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
lea    0x275b1(%rip),%rdx        # 74dcb <module.8+0x12>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
lea    0x275ac(%rip),%rdx        # 74ddf <module.8+0x26>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
movzwl 0x82(%r15),%edx
test   %dx,%dx
je     4d870 <TIFFTileRowSize64+0xc0>
mov    %rax,%rsi
mov    %r15,%rdi
lea    0x2759c(%rip),%rcx        # 74df2 <module.8+0x39>
callq  8300 <_TIFFMultiply64@plt>
jmp    4d7f8 <TIFFTileRowSize64+0x48>
shr    $0x3,%rax
add    $0x1,%rax
test   %rax,%rax
je     4d894 <TIFFTileRowSize64+0xe4>
mov    -0x8(%rbp),%r15
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
lea    0x27582(%rip),%rdx        # 74e02 <module.8+0x49>
lea    0x27532(%rip),%rsi        # 74db9 <module.8>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
lea    0x27578(%rip),%rdx        # 74e1c <module.8+0x63>
lea    0x2750e(%rip),%rsi        # 74db9 <module.8>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

000000000004d8c0 <TIFFTileRowSize>:
push   %rbp
mov    %rsp,%rbp
callq  8b10 <TIFFTileRowSize64@plt>
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

000000000004d8d0 <TIFFTileSize64>:
push   %rbp
mov    %rsp,%rbp
mov    0x68(%rdi),%esi
callq  8770 <TIFFVTileSize64@plt>
leaveq 
retq   
xchg   %ax,%ax

000000000004d8e0 <TIFFTileSize>:
push   %rbp
mov    %rsp,%rbp
callq  8c40 <TIFFTileSize64@plt>
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

000000000004d8f0 <TIFFVTileSize64>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
xor    %eax,%eax
mov    0x68(%rdi),%ecx
test   %ecx,%ecx
jne    4d903 <TIFFVTileSize64+0x13>
leaveq 
retq   
mov    0x64(%rdi),%ecx
test   %ecx,%ecx
jne    4d90c <TIFFVTileSize64+0x1c>
leaveq 
retq   
mov    0x6c(%rdi),%ecx
test   %ecx,%ecx
jne    4d915 <TIFFVTileSize64+0x25>
leaveq 
retq   
movzwl 0xaa(%rdi),%eax
cmp    $0x1,%ax
je     4d95a <TIFFVTileSize64+0x6a>
mov    %rdi,%rax
mov    %r14,-0x10(%rbp)
mov    %r15,-0x18(%rbp)
mov    %rsi,%r14
mov    %rdi,%r15
mov    %rax,%rdi
callq  8b10 <TIFFTileRowSize64@plt>
mov    %r14d,%esi
mov    %rax,%rdx
mov    %r15,%rdi
lea    0x274f0(%rip),%rcx        # 74e3b <module.16>
callq  8300 <_TIFFMultiply64@plt>
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
leaveq 
retq   
movzwl 0x7a(%rdi),%eax
cmp    $0x6,%ax
jne    4d922 <TIFFVTileSize64+0x32>
movzwl 0x82(%rdi),%eax
cmp    $0x3,%ax
jne    4d922 <TIFFVTileSize64+0x32>
mov    0x10(%rdi),%eax
and    $0x4000,%eax
test   %eax,%eax
jne    4d922 <TIFFVTileSize64+0x32>
xor    %eax,%eax
mov    $0x212,%r8d
lea    -0x1c(%rbp),%rdx
lea    -0x1a(%rbp),%rcx
mov    %rdi,%r9
mov    %r14,-0x10(%rbp)
mov    %r15,-0x18(%rbp)
mov    %rdi,%r14
mov    %r9,%rdi
mov    %rsi,%r15
mov    %r8,%rsi
callq  8390 <TIFFGetFieldDefaulted@plt>
movzwl -0x1c(%rbp),%ecx
cmp    $0x1,%cx
jne    4d9d2 <TIFFVTileSize64+0xe2>
lea    -0x1a(%rbp),%r8
movzwl (%r8),%esi
cmp    $0x1,%si
jne    4da0f <TIFFVTileSize64+0x11f>
mov    0x64(%r14),%edx
mov    %rcx,%rax
neg    %eax
cmp    %edx,%eax
ja     4da1d <TIFFVTileSize64+0x12d>
xor    %edi,%edi
jmp    4da28 <TIFFVTileSize64+0x138>
cmp    $0x2,%cx
je     4d9b3 <TIFFVTileSize64+0xc3>
cmp    $0x4,%cx
je     4d9b3 <TIFFVTileSize64+0xc3>
xor    %eax,%eax
mov    0x3b8(%r14),%rdi
lea    0x2745d(%rip),%rdx        # 74e4b <module.16+0x10>
movzwl -0x1c(%rbp),%ecx
movzwl -0x1a(%rbp),%r8d
lea    0x2743d(%rip),%rsi        # 74e3b <module.16>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
leaveq 
retq   
cmp    $0x2,%si
je     4d9c1 <TIFFVTileSize64+0xd1>
cmp    $0x4,%si
jne    4d9de <TIFFVTileSize64+0xee>
jmp    4d9c1 <TIFFVTileSize64+0xd1>
lea    -0x1(%rcx,%rdx,1),%eax
xor    %edx,%edx
div    %ecx
mov    %rax,%rdi
movzwl (%r8),%r8d
mov    %r8,%rax
neg    %eax
cmp    %r15d,%eax
ja     4da3b <TIFFVTileSize64+0x14b>
xor    %r15d,%r15d
jmp    4da48 <TIFFVTileSize64+0x158>
lea    -0x1(%r8,%r15,1),%eax
xor    %edx,%edx
div    %r8d
mov    %rax,%r15
imul   %si,%cx
lea    0x2(%rcx),%eax
movzwl %ax,%edx
mov    %edi,%esi
mov    %r14,%rdi
lea    0x273dd(%rip),%rcx        # 74e3b <module.16>
callq  8300 <_TIFFMultiply64@plt>
movzwl 0x74(%r14),%edx
mov    %r14,%rdi
mov    %rax,%rsi
lea    0x273c6(%rip),%rcx        # 74e3b <module.16>
mov    %r13,-0x8(%rbp)
mov    %rax,%r13
callq  8300 <_TIFFMultiply64@plt>
and    $0x7,%rax
test   %rax,%rax
jne    4dab0 <TIFFVTileSize64+0x1c0>
mov    %r13,%rsi
movzwl 0x74(%r14),%edx
mov    %r14,%rdi
lea    0x2739f(%rip),%r13        # 74e3b <module.16>
mov    %r13,%rcx
callq  8300 <_TIFFMultiply64@plt>
mov    %rax,%rsi
shr    $0x3,%rsi
mov    %r13,%rcx
jmp    4dad5 <TIFFVTileSize64+0x1e5>
mov    %r13,%rsi
movzwl 0x74(%r14),%edx
mov    %r14,%rdi
lea    0x27379(%rip),%r13        # 74e3b <module.16>
mov    %r13,%rcx
callq  8300 <_TIFFMultiply64@plt>
shr    $0x3,%rax
lea    0x1(%rax),%rsi
mov    %r13,%rcx
mov    %r15d,%edx
mov    %r14,%rdi
callq  8300 <_TIFFMultiply64@plt>
mov    -0x8(%rbp),%r13
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
leaveq 
retq   
xchg   %ax,%ax

000000000004daf0 <TIFFVTileSize>:
push   %rbp
mov    %rsp,%rbp
callq  8770 <TIFFVTileSize64@plt>
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

000000000004db00 <TIFFDefaultTileSize>:
push   %rbp
mov    %rsp,%rbp
callq  *0x348(%rdi)
leaveq 
retq   
nopl   0x0(%rax)

000000000004db10 <TIFFComputeTile>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %r8,-0x8(%rbp)
mov    0x64(%rdi),%r8d
mov    0x68(%rdi),%r10d
mov    0x6c(%rdi),%r9d
xor    %r11d,%r11d
mov    0x60(%rdi),%eax
cmp    $0x1,%eax
jne    4db36 <TIFFComputeTile+0x26>
mov    %r11,%rcx
cmp    $0xffffffff,%r8d
jne    4db40 <TIFFComputeTile+0x30>
mov    0x58(%rdi),%r8d
cmp    $0xffffffff,%r10d
jne    4db4a <TIFFComputeTile+0x3a>
mov    0x5c(%rdi),%r10d
cmp    $0xffffffff,%r9d
jne    4db54 <TIFFComputeTile+0x44>
mov    0x60(%rdi),%r9d
mov    $0x1,%eax
test   %r8d,%r8d
jne    4db60 <TIFFComputeTile+0x50>
leaveq 
retq   
test   %r10d,%r10d
jne    4db67 <TIFFComputeTile+0x57>
leaveq 
retq   
test   %r9d,%r9d
jne    4db6e <TIFFComputeTile+0x5e>
leaveq 
retq   
mov    0x58(%rdi),%eax
mov    %r8,%r11
neg    %r11d
cmp    %eax,%r11d
ja     4db87 <TIFFComputeTile+0x77>
mov    %rdi,%rax
mov    %rdx,%rdi
xor    %r11d,%r11d
jmp    4dba0 <TIFFComputeTile+0x90>
lea    -0x1(%r8,%rax,1),%eax
mov    %rdi,%r11
mov    %rdx,%rdi
xor    %edx,%edx
div    %r8d
mov    %r11,%rdx
mov    %rax,%r11
mov    %rdx,%rax
mov    0x5c(%rax),%edx
mov    %r15,-0x18(%rbp)
mov    %r10,%r15
neg    %r15d
cmp    %edx,%r15d
ja     4dbb9 <TIFFComputeTile+0xa9>
mov    %rax,%r15
xor    %edx,%edx
jmp    4dbc8 <TIFFComputeTile+0xb8>
lea    -0x1(%r10,%rdx,1),%r15d
xchg   %rax,%r15
xor    %edx,%edx
div    %r10d
mov    %rax,%rdx
mov    0x60(%r15),%eax
mov    %r14,-0x10(%rbp)
mov    %r9,%r14
neg    %r14d
cmp    %eax,%r14d
ja     4dbe2 <TIFFComputeTile+0xd2>
mov    %rdx,%r14
xor    %eax,%eax
jmp    4dbef <TIFFComputeTile+0xdf>
lea    -0x1(%r9,%rax,1),%eax
mov    %rdx,%r14
xor    %edx,%edx
div    %r9d
movzwl 0xaa(%r15),%edx
cmp    $0x2,%dx
je     4dc38 <TIFFComputeTile+0x128>
mov    %rdi,%rax
xor    %r15d,%r15d
mov    %r15,%rdx
div    %r10d
mov    %r11,%rdi
imul   %eax,%edi
mov    %rcx,%rax
mov    %r15,%rdx
div    %r9d
imul   %r14d,%r11d
imul   %r11d,%eax
lea    (%rdi,%rax,1),%ecx
mov    %rsi,%rax
mov    %r15,%rdx
div    %r8d
add    %ecx,%eax
mov    -0x10(%rbp),%r14
mov    -0x18(%rbp),%r15
leaveq 
retq   
xchg   %rax,%rdi
xor    %r15d,%r15d
mov    %r15,%rdx
div    %r10d
imul   %r11d,%eax
mov    %rax,%r10
mov    %rcx,%rax
mov    %r15,%rdx
div    %r9d
imul   %r14d,%r11d
imul   %r11d,%eax
imul   %edi,%r11d
mov    -0x8(%rbp),%rcx
movzwl %cx,%ecx
imul   %r11d,%ecx
add    %ecx,%eax
lea    (%r10,%rax,1),%ecx
mov    %rsi,%rax
mov    %r15,%rdx
div    %r8d
add    %ecx,%eax
mov    -0x10(%rbp),%r14
mov    -0x18(%rbp),%r15
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)

000000000004dc90 <TIFFCheckTile>:
push   %rbp
mov    %rsp,%rbp
mov    0x58(%rdi),%r9d
cmp    %esi,%r9d
jbe    4dcc7 <TIFFCheckTile+0x37>
mov    0x5c(%rdi),%r9d
cmp    %edx,%r9d
jbe    4dcf2 <TIFFCheckTile+0x62>
mov    0x60(%rdi),%r9d
cmp    %ecx,%r9d
jbe    4dd1d <TIFFCheckTile+0x8d>
mov    $0x1,%eax
movzwl 0xaa(%rdi),%ecx
cmp    $0x2,%cx
je     4dd45 <TIFFCheckTile+0xb5>
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rdi),%r10
mov    (%rdi),%rdi
lea    0x27193(%rip),%rdx        # 74e6d <module.16+0x32>
mov    %esi,%ecx
lea    -0x1(%r9),%esi
mov    %esi,%r8d
mov    %rdi,%rsi
mov    %r10,%rdi
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rdi),%r10
mov    (%rdi),%rsi
lea    0x27187(%rip),%rdi        # 74e8c <module.16+0x51>
mov    %edx,%ecx
lea    -0x1(%r9),%edx
mov    %edx,%r8d
mov    %rdi,%rdx
mov    %r10,%rdi
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rdi),%r10
mov    (%rdi),%rsi
lea    0x2717b(%rip),%rdx        # 74eab <module.16+0x70>
mov    %ecx,%ecx
lea    -0x1(%r9),%edi
mov    %edi,%r8d
mov    %r10,%rdi
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
movzwl 0x82(%rdi),%r10d
cmp    %r8w,%r10w
jbe    4dd55 <TIFFCheckTile+0xc5>
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rdi),%r9
mov    (%rdi),%rsi
lea    0x27164(%rip),%rdx        # 74ecc <module.16+0x91>
movzwl %r8w,%ecx
lea    -0x1(%r10),%edi
movslq %edi,%r8
mov    %r9,%rdi
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
nop

000000000004dd80 <TIFFNumberOfTiles>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    0x68(%rdi),%r9d
mov    0x6c(%rdi),%r8d
mov    0x64(%rdi),%esi
cmp    $0xffffffff,%esi
jne    4dd9b <TIFFNumberOfTiles+0x1b>
mov    0x58(%rdi),%esi
cmp    $0xffffffff,%r9d
jne    4dda5 <TIFFNumberOfTiles+0x25>
mov    0x5c(%rdi),%r9d
cmp    $0xffffffff,%r8d
jne    4ddaf <TIFFNumberOfTiles+0x2f>
mov    0x60(%rdi),%r8d
lea    0x27138(%rip),%rcx        # 74eee <module.16+0xb3>
xor    %eax,%eax
test   %esi,%esi
jne    4ddcb <TIFFNumberOfTiles+0x4b>
movzwl 0xaa(%rdi),%edx
cmp    $0x2,%dx
je     4dde8 <TIFFNumberOfTiles+0x68>
leaveq 
retq   
test   %r9d,%r9d
je     4ddbc <TIFFNumberOfTiles+0x3c>
test   %r8d,%r8d
je     4ddbc <TIFFNumberOfTiles+0x3c>
mov    0x58(%rdi),%r10d
mov    %rsi,%rdx
neg    %edx
cmp    %r10d,%edx
ja     4ddf9 <TIFFNumberOfTiles+0x79>
mov    %rax,%rsi
jmp    4de11 <TIFFNumberOfTiles+0x91>
mov    %rax,%rsi
movzwl 0x82(%rdi),%edx
callq  84f0 <_TIFFMultiply32@plt>
leaveq 
retq   
lea    -0x1(%rsi,%r10,1),%r10d
mov    %r10,%r11
mov    %rax,%r10
mov    %r11,%rax
xor    %edx,%edx
div    %esi
mov    %rax,%rsi
mov    %r10,%rax
mov    0x5c(%rdi),%r10d
mov    %r9,%rdx
neg    %edx
cmp    %r10d,%edx
jbe    4de29 <TIFFNumberOfTiles+0xa9>
lea    -0x1(%r9,%r10,1),%eax
xor    %edx,%edx
div    %r9d
mov    %rdi,%rdx
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rdi,%r14
mov    %rdx,%rdi
mov    %rax,%rdx
mov    %r8,%r15
callq  84f0 <_TIFFMultiply32@plt>
mov    0x60(%r14),%edx
mov    %r15,%rcx
neg    %ecx
cmp    %edx,%ecx
ja     4de59 <TIFFNumberOfTiles+0xd9>
mov    %rax,%rsi
xor    %edx,%edx
jmp    4de6c <TIFFNumberOfTiles+0xec>
lea    -0x1(%r15,%rdx,1),%ecx
mov    %rax,%rsi
mov    %rcx,%rax
xor    %edx,%edx
div    %r15d
mov    %rax,%rdx
mov    %r14,%rdi
lea    0x27078(%rip),%r15        # 74eee <module.16+0xb3>
mov    %r15,%rcx
callq  84f0 <_TIFFMultiply32@plt>
mov    %r15,%rcx
mov    %r14,%rdi
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
jmpq   4ddbc <TIFFNumberOfTiles+0x3c>
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   0x0(%rax)

000000000004dea0 <_TIFFDefaultTileSize>:
push   %rbp
mov    %rsp,%rbp
movslq (%rsi),%rax
test   %eax,%eax
jg     4deb1 <_TIFFDefaultTileSize+0x11>
movl   $0x100,(%rsi)
movslq (%rdx),%rax
test   %eax,%eax
jg     4debe <_TIFFDefaultTileSize+0x1e>
movl   $0x100,(%rdx)
xor    %eax,%eax
mov    (%rsi),%edi
mov    %rdi,%rcx
and    $0xf,%ecx
test   %ecx,%ecx
je     4dee1 <_TIFFDefaultTileSize+0x41>
cmp    $0xffffffef,%edi
jbe    4ded6 <_TIFFDefaultTileSize+0x36>
mov    %rax,%rcx
jmp    4dedc <_TIFFDefaultTileSize+0x3c>
lea    0xf(%rdi),%ecx
shr    $0x4,%ecx
shl    $0x4,%ecx
mov    %ecx,(%rsi)
mov    (%rdx),%esi
mov    %rsi,%rcx
and    $0xf,%ecx
test   %ecx,%ecx
jne    4deef <_TIFFDefaultTileSize+0x4f>
leaveq 
retq   
cmp    $0xffffffef,%esi
ja     4defa <_TIFFDefaultTileSize+0x5a>
lea    0xf(%rsi),%eax
shr    $0x4,%eax
shl    $0x4,%eax
mov    %eax,(%rdx)
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)
nopl   0x0(%rax,%rax,1)

000000000004df10 <TIFFGetVersion>:
push   %rbp
mov    %rsp,%rbp
lea    0x26fe5(%rip),%rax        # 74f00 <TIFFVersion>
leaveq 
retq   
nopl   (%rax)

000000000004df20 <TIFFWarning>:
push   %rbp
mov    %rsp,%rbp
sub    $0xe0,%rsp
mov    %rdx,-0xb0(%rbp)
mov    %rcx,-0xa8(%rbp)
mov    %r8,-0xa0(%rbp)
mov    %r9,-0x98(%rbp)
movsd  %xmm0,-0x90(%rbp)
movsd  %xmm1,-0x80(%rbp)
movsd  %xmm2,-0x70(%rbp)
movsd  %xmm3,-0x60(%rbp)
movsd  %xmm4,-0x50(%rbp)
movsd  %xmm5,-0x40(%rbp)
movsd  %xmm6,-0x30(%rbp)
movsd  %xmm7,-0x20(%rbp)
mov    0x2c03f(%rip),%rax        # 79fb8 <_TIFFwarningHandler@@Base-0x8c8>
mov    (%rax),%rcx
test   %rcx,%rcx
je     4dfc6 <TIFFWarning+0xa6>
lea    -0xd8(%rbp),%rdx
movl   $0x10,(%rdx)
movl   $0x30,0x4(%rdx)
lea    -0xc0(%rbp),%rcx
mov    %rcx,0x10(%rdx)
lea    0x10(%rbp),%rcx
mov    %rcx,0x8(%rdx)
mov    %rdi,%rcx
mov    %rsi,%r8
mov    %rdi,-0x8(%rbp)
mov    %rsi,-0x10(%rbp)
mov    %r8,%rsi
mov    %rcx,%rdi
callq  *(%rax)
mov    -0x10(%rbp),%rsi
mov    -0x8(%rbp),%rdi
mov    0x2bf3b(%rip),%rax        # 79f08 <_TIFFwarningHandlerExt@@Base-0xb58>
mov    (%rax),%rcx
test   %rcx,%rcx
jne    4dfd7 <TIFFWarning+0xb7>
leaveq 
retq   
lea    -0xd8(%rbp),%rcx
movl   $0x10,(%rcx)
movl   $0x30,0x4(%rcx)
lea    -0xc0(%rbp),%rdx
mov    %rdx,0x10(%rcx)
lea    0x10(%rbp),%rdx
mov    %rdx,0x8(%rcx)
mov    %rsi,%rdx
mov    %rdi,%rsi
xor    %edi,%edi
callq  *(%rax)
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

000000000004e010 <TIFFWarningExt>:
push   %rbp
mov    %rsp,%rbp
sub    $0xf0,%rsp
mov    %rcx,-0xb8(%rbp)
mov    %r8,-0xb0(%rbp)
mov    %r9,-0xa8(%rbp)
movsd  %xmm0,-0xa0(%rbp)
movsd  %xmm1,-0x90(%rbp)
movsd  %xmm2,-0x80(%rbp)
movsd  %xmm3,-0x70(%rbp)
movsd  %xmm4,-0x60(%rbp)
movsd  %xmm5,-0x50(%rbp)
movsd  %xmm6,-0x40(%rbp)
movsd  %xmm7,-0x30(%rbp)
mov    0x2bf53(%rip),%rax        # 79fb8 <_TIFFwarningHandler@@Base-0x8c8>
mov    (%rax),%rcx
test   %rcx,%rcx
je     4e0bf <TIFFWarningExt+0xaf>
lea    -0xe8(%rbp),%r9
movl   $0x18,(%r9)
movl   $0x30,0x4(%r9)
lea    -0xd0(%rbp),%rcx
mov    %rcx,0x10(%r9)
lea    0x10(%rbp),%rcx
mov    %rcx,0x8(%r9)
mov    %rsi,%rcx
mov    %rdx,%r8
mov    %rdi,-0x8(%rbp)
mov    %rsi,-0x10(%rbp)
mov    %rdx,-0x18(%rbp)
mov    %r9,%rdx
mov    %r8,%rsi
mov    %rcx,%rdi
callq  *(%rax)
mov    -0x18(%rbp),%rdx
mov    -0x10(%rbp),%rsi
mov    -0x8(%rbp),%rdi
mov    0x2be42(%rip),%rax        # 79f08 <_TIFFwarningHandlerExt@@Base-0xb58>
mov    (%rax),%rcx
test   %rcx,%rcx
jne    4e0d0 <TIFFWarningExt+0xc0>
leaveq 
retq   
lea    -0xe8(%rbp),%rcx
movl   $0x18,(%rcx)
movl   $0x30,0x4(%rcx)
lea    -0xd0(%rbp),%r8
mov    %r8,0x10(%rcx)
lea    0x10(%rbp),%r8
mov    %r8,0x8(%rcx)
callq  *(%rax)
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

000000000004e100 <TIFFSetWarningHandler>:
push   %rbp
mov    %rsp,%rbp
mov    0x2bead(%rip),%rcx        # 79fb8 <_TIFFwarningHandler@@Base-0x8c8>
mov    (%rcx),%rax
mov    %rdi,(%rcx)
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

000000000004e120 <TIFFSetWarningHandlerExt>:
push   %rbp
mov    %rsp,%rbp
mov    0x2bddd(%rip),%rcx        # 79f08 <_TIFFwarningHandlerExt@@Base-0xb58>
mov    (%rcx),%rax
mov    %rdi,(%rcx)
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)
nopl   (%rax)

000000000004e140 <TIFFWriteBufferSetup>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %r15,-0x18(%rbp)
mov    0x368(%rdi),%rcx
test   %rcx,%rcx
jne    4e163 <TIFFWriteBufferSetup+0x23>
mov    %r15,%rcx
mov    %r14,%r15
mov    %rdi,%r14
jmp    4e1bd <TIFFWriteBufferSetup+0x7d>
mov    0x10(%rdi),%eax
and    $0x200,%eax
test   %eax,%eax
jne    4e17a <TIFFWriteBufferSetup+0x3a>
mov    %r15,%rcx
mov    %r14,%r15
mov    %rdi,%r14
jmp    4e1b2 <TIFFWriteBufferSetup+0x72>
mov    %r13,-0x8(%rbp)
mov    %r14,-0x10(%rbp)
mov    %rsi,%r13
mov    %rdi,%r14
mov    %rcx,%rdi
mov    %rdx,%r15
callq  8bb0 <_TIFFfree@plt>
mov    0x10(%r14),%eax
and    $0xfffffdff,%eax
mov    %eax,0x10(%r14)
mov    %r15,%rdx
mov    %r13,%rsi
mov    -0x18(%rbp),%rcx
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r13
movq   $0x0,0x368(%r14)
xor    %edi,%edi
cmp    $0xffffffffffffffff,%rdx
je     4e20f <TIFFWriteBufferSetup+0xcf>
test   %rsi,%rsi
je     4e22f <TIFFWriteBufferSetup+0xef>
mov    0x10(%r14),%eax
and    $0xfffffdff,%eax
mov    %eax,0x10(%r14)
mov    %rsi,0x368(%r14)
mov    %rdx,0x370(%r14)
movq   $0x0,0x390(%r14)
mov    %rsi,0x388(%r14)
mov    0x10(%r14),%eax
or     $0x10,%eax
mov    %eax,0x10(%r14)
mov    %r15,%r14
mov    %rcx,%r15
mov    $0x1,%eax
leaveq 
retq   
mov    0x10(%r14),%eax
and    $0x400,%eax
test   %eax,%eax
jne    4e264 <TIFFWriteBufferSetup+0x124>
mov    %r14,%rdi
callq  8070 <TIFFStripSize@plt>
mov    %rax,%rdx
xor    %esi,%esi
mov    -0x18(%rbp),%rcx
jmp    4e26e <TIFFWriteBufferSetup+0x12e>
mov    %rdx,%rdi
mov    %r15,-0x10(%rbp)
mov    %rdx,%r15
callq  8440 <_TIFFmalloc@plt>
test   %rax,%rax
je     4e285 <TIFFWriteBufferSetup+0x145>
mov    0x10(%r14),%ecx
or     $0x200,%ecx
mov    %ecx,0x10(%r14)
mov    %r15,%rdx
mov    %rax,%rsi
mov    -0x18(%rbp),%rcx
mov    -0x10(%rbp),%r15
jmpq   4e1d7 <TIFFWriteBufferSetup+0x97>
mov    0x2b0(%r14),%rdx
mov    %rdi,%rsi
cmp    $0x1fff,%rdx
jg     4e1c5 <TIFFWriteBufferSetup+0x85>
mov    $0x2000,%edx
jmpq   4e1c5 <TIFFWriteBufferSetup+0x85>
xor    %eax,%eax
mov    0x3b8(%r14),%rdi
lea    0x26cd5(%rip),%rsi        # 74f6a <module.8>
lea    0x26ce3(%rip),%rdx        # 74f7f <module.8+0x15>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
leaveq 
retq   
nopl   (%rax)

000000000004e2b0 <TIFFSetupStrips>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x8(%rbp)
mov    0x10(%rdi),%eax
and    $0x400,%eax
test   %eax,%eax
jne    4e2e5 <TIFFSetupStrips+0x35>
mov    0x38(%rdi),%rax
and    $0x20000,%rax
test   %rax,%rax
jne    4e372 <TIFFSetupStrips+0xc2>
mov    %rdi,%r15
callq  8260 <TIFFNumberOfStrips@plt>
jmp    4e2fe <TIFFSetupStrips+0x4e>
mov    0x38(%rdi),%rax
and    $0x4,%rax
test   %rax,%rax
jne    4e38d <TIFFSetupStrips+0xdd>
mov    %rdi,%r15
callq  87d0 <TIFFNumberOfTiles@plt>
mov    %eax,0xe4(%r15)
mov    %eax,0xe0(%r15)
movzwl 0xaa(%r15),%ecx
cmp    $0x2,%cx
jne    4e32d <TIFFSetupStrips+0x7d>
movzwl 0x82(%r15),%ecx
xor    %edx,%edx
div    %ecx
mov    %eax,0xe0(%r15)
mov    0xe4(%r15),%edi
shl    $0x3,%rdi
callq  8440 <_TIFFmalloc@plt>
mov    %rax,0xe8(%r15)
mov    0xe4(%r15),%edi
shl    $0x3,%rdi
callq  8440 <_TIFFmalloc@plt>
mov    %rax,0xf0(%r15)
xor    %esi,%esi
mov    0xe8(%r15),%rdi
test   %rdi,%rdi
jne    4e3a8 <TIFFSetupStrips+0xf8>
mov    %rsi,%rax
mov    -0x8(%rbp),%r15
leaveq 
retq   
mov    0x5c(%rdi),%eax
test   %eax,%eax
jne    4e2db <TIFFSetupStrips+0x2b>
mov    %rdi,%r15
movzwl 0x82(%r15),%eax
jmpq   4e2fe <TIFFSetupStrips+0x4e>
mov    0x5c(%rdi),%eax
test   %eax,%eax
jne    4e2f6 <TIFFSetupStrips+0x46>
mov    %rdi,%r15
movzwl 0x82(%r15),%eax
jmpq   4e2fe <TIFFSetupStrips+0x4e>
test   %rax,%rax
jne    4e3b6 <TIFFSetupStrips+0x106>
mov    %rsi,%rax
mov    -0x8(%rbp),%r15
leaveq 
retq   
mov    0xe4(%r15),%edx
shl    $0x3,%rdx
callq  88e0 <_TIFFmemset@plt>
mov    0xf0(%r15),%rdi
mov    0xe4(%r15),%edx
shl    $0x3,%rdx
xor    %esi,%esi
callq  88e0 <_TIFFmemset@plt>
mov    0x38(%r15),%rax
or     $0x2000000,%rax
mov    %rax,0x38(%r15)
mov    0x38(%r15),%rax
or     $0x1000000,%rax
mov    %rax,0x38(%r15)
mov    $0x1,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)

000000000004e410 <TIFFWriteCheck>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
xor    %r8d,%r8d
movslq 0xc(%rdi),%rax
test   %eax,%eax
je     4e485 <TIFFWriteCheck+0x75>
mov    $0x1,%ecx
mov    0x10(%rdi),%eax
and    $0x400,%eax
test   %eax,%eax
jne    4e437 <TIFFWriteCheck+0x27>
mov    %r8,%rcx
cmp    %esi,%ecx
jne    4e4a1 <TIFFWriteCheck+0x91>
mov    %rdi,%rax
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rdx,%r14
mov    %rdi,%r15
mov    %rax,%rdi
callq  8c70 <_TIFFFillStriles@plt>
mov    0x38(%r15),%rax
and    $0x2,%rax
test   %rax,%rax
jne    4e4b5 <TIFFWriteCheck+0xa5>
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
mov    %r14,%rsi
lea    0x26b91(%rip),%rdx        # 75005 <module.8+0x9b>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
mov    %rdx,%rsi
lea    0x26b02(%rip),%rdx        # 74f9a <module.8+0x30>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
mov    0x3b8(%rdi),%rdi
test   %esi,%esi
jne    4e4f6 <TIFFWriteCheck+0xe6>
lea    0x26b29(%rip),%rcx        # 74fdc <module.8+0x72>
jmp    4e4fd <TIFFWriteCheck+0xed>
movzwl 0x82(%r15),%eax
cmp    $0x1,%ax
je     4e50e <TIFFWriteCheck+0xfe>
mov    0x38(%r15),%rax
and    $0x100000,%rax
test   %rax,%rax
jne    4e527 <TIFFWriteCheck+0x117>
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
mov    %r14,%rsi
lea    0x26b4a(%rip),%rdx        # 7502f <module.8+0xc5>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
lea    0x26ab7(%rip),%rcx        # 74fb4 <module.8+0x4a>
mov    %rdx,%rsi
mov    %rcx,%rdx
xor    %eax,%eax
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
mov    0x38(%r15),%rax
and    $0x100000,%rax
test   %rax,%rax
jne    4e527 <TIFFWriteCheck+0x117>
movw   $0x1,0xaa(%r15)
mov    0xe8(%r15),%rax
test   %rax,%rax
je     4e56b <TIFFWriteCheck+0x15b>
mov    0x10(%r15),%eax
and    $0x400,%eax
test   %eax,%eax
jne    4e59f <TIFFWriteCheck+0x18f>
movq   $0xffffffffffffffff,0x2b0(%r15)
mov    %r15,%rdi
callq  8410 <TIFFScanlineSize@plt>
mov    %rax,0x358(%r15)
test   %rax,%rax
jne    4e5bf <TIFFWriteCheck+0x1af>
xor    %eax,%eax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
mov    %r15,%rdi
callq  86b0 <TIFFSetupStrips@plt>
test   %eax,%eax
jne    4e533 <TIFFWriteCheck+0x123>
mov    0x3b8(%r15),%rdi
movl   $0x0,0xe4(%r15)
mov    0x10(%r15),%eax
and    $0x400,%eax
test   %eax,%eax
jne    4e5d9 <TIFFWriteCheck+0x1c9>
lea    0x26ae1(%rip),%rcx        # 7507e <module.8+0x114>
jmp    4e5e0 <TIFFWriteCheck+0x1d0>
mov    %r15,%rdi
callq  8910 <TIFFTileSize@plt>
mov    %rax,0x2b0(%r15)
test   %rax,%rax
jne    4e54b <TIFFWriteCheck+0x13b>
xor    %eax,%eax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
mov    0x10(%r15),%eax
or     $0x40,%eax
mov    %eax,0x10(%r15)
mov    $0x1,%eax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
lea    0x26a99(%rip),%rcx        # 75079 <module.8+0x10f>
mov    %r14,%rsi
xor    %eax,%eax
lea    0x26a76(%rip),%rdx        # 75062 <module.8+0xf8>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
nopl   (%rax)

000000000004e600 <TIFFWriteScanline>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    %rdi,-0x30(%rbp)
mov    %rdx,-0x28(%rbp)
mov    %rcx,-0x20(%rbp)
mov    %rsi,-0x8(%rbp)
xor    %r9d,%r9d
lea    0x26a62(%rip),%r10        # 75084 <module.18>
mov    $0xffffffffffffffff,%r8
mov    0x10(%rdi),%eax
and    $0x40,%eax
test   %eax,%eax
je     4e749 <TIFFWriteScanline+0x149>
mov    %rsi,%r11
mov    %rdx,%rsi
mov    %r8,%rdx
mov    0x10(%rdi),%eax
and    $0x10,%eax
test   %eax,%eax
jne    4e782 <TIFFWriteScanline+0x182>
mov    %r9,%rsi
callq  8970 <TIFFWriteBufferSetup@plt>
test   %eax,%eax
je     4e797 <TIFFWriteScanline+0x197>
xor    %r9d,%r9d
mov    -0x8(%rbp),%r11
mov    -0x20(%rbp),%rcx
mov    -0x28(%rbp),%rsi
mov    -0x30(%rbp),%rdi
lea    0x26a0c(%rip),%r10        # 75084 <module.18>
mov    0x10(%rdi),%eax
or     $0x100000,%eax
mov    %eax,0x10(%rdi)
mov    $0x1,%edx
mov    0x5c(%rdi),%eax
cmp    %esi,%eax
jbe    4e7a0 <TIFFWriteScanline+0x1a0>
movzwl 0xaa(%rdi),%eax
cmp    $0x2,%ax
je     4e7bf <TIFFWriteScanline+0x1bf>
mov    0x84(%rdi),%r8d
xor    %edx,%edx
mov    %rsi,%rax
div    %r8d
mov    0xe4(%rdi),%edx
cmp    %eax,%edx
jbe    4e7fb <TIFFWriteScanline+0x1fb>
cmp    0x284(%rdi),%eax
jne    4e835 <TIFFWriteScanline+0x235>
mov    0x27c(%rdi),%edx
cmp    %edx,%esi
jne    4e864 <TIFFWriteScanline+0x264>
mov    0x3e8(%rdi),%rax
mov    0x358(%rdi),%rdx
mov    %rdi,%r8
mov    %r11,%r9
mov    %r15,-0x30(%rbp)
mov    %r12,-0x8(%rbp)
mov    %r13,-0x20(%rbp)
mov    %r14,-0x28(%rbp)
mov    %rsi,%r12
mov    %r9,%rsi
mov    %rdi,%r13
mov    %r8,%rdi
mov    %r11,%r14
mov    %rcx,%r15
callq  *%rax
add    $0x1,%r12d
mov    %r15,%rcx
mov    %r14,%rsi
mov    0x300(%r13),%rax
mov    0x358(%r13),%rdx
mov    %r13,%rdi
callq  *%rax
mov    %r12d,0x27c(%r13)
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r13
mov    -0x8(%rbp),%r12
mov    -0x30(%rbp),%r15
leaveq 
retq   
mov    %r10,%rdx
mov    %r9,%rsi
callq  81d0 <TIFFWriteCheck@plt>
test   %eax,%eax
je     4e8c0 <TIFFWriteScanline+0x2c0>
xor    %r9d,%r9d
mov    -0x8(%rbp),%r11
mov    $0xffffffffffffffff,%rdx
mov    -0x20(%rbp),%rcx
mov    -0x28(%rbp),%rsi
mov    -0x30(%rbp),%rdi
lea    0x26907(%rip),%r10        # 75084 <module.18>
jmpq   4e640 <TIFFWriteScanline+0x40>
mov    0x368(%rdi),%rax
test   %rax,%rax
jne    4e678 <TIFFWriteScanline+0x78>
jmpq   4e64e <TIFFWriteScanline+0x4e>
mov    $0xffffffffffffffff,%rax
leaveq 
retq   
movzwl 0xaa(%rdi),%eax
cmp    $0x2,%ax
je     4e8c9 <TIFFWriteScanline+0x2c9>
lea    0x1(%rsi),%eax
mov    %eax,0x5c(%rdi)
mov    %rdx,%r9
jmpq   4e693 <TIFFWriteScanline+0x93>
movzwl 0x82(%rdi),%r8d
cmp    %cx,%r8w
jbe    4e8ea <TIFFWriteScanline+0x2ea>
mov    0x84(%rdi),%r10d
xor    %edx,%edx
movzwl %cx,%r8d
imul   0xe0(%rdi),%r8d
mov    %rsi,%rax
div    %r10d
add    %r8d,%eax
lea    0x2688e(%rip),%r10        # 75084 <module.18>
jmpq   4e6b3 <TIFFWriteScanline+0xb3>
mov    %rax,-0x18(%rbp)
mov    %r9,-0x10(%rbp)
mov    %r10,%rdx
mov    $0x1,%esi
callq  4f8c0 <TIFFGrowStrips>
test   %eax,%eax
je     4e90e <TIFFWriteScanline+0x30e>
mov    -0x10(%rbp),%r9
mov    -0x18(%rbp),%rax
mov    -0x8(%rbp),%r11
mov    -0x20(%rbp),%rcx
mov    -0x28(%rbp),%rsi
mov    -0x30(%rbp),%rdi
jmpq   4e6c1 <TIFFWriteScanline+0xc1>
mov    %rdi,%rcx
mov    %rax,-0x30(%rbp)
mov    %r9,-0x18(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rdi,%r15
mov    %rcx,%rdi
callq  84a0 <TIFFFlushData@plt>
test   %eax,%eax
jne    4e917 <TIFFWriteScanline+0x317>
mov    -0x10(%rbp),%r15
mov    $0xffffffffffffffff,%rax
leaveq 
retq   
cmp    %edx,%esi
jae    4e88d <TIFFWriteScanline+0x28d>
mov    0xe0(%rdi),%ecx
xor    %edx,%edx
div    %ecx
imul   0x84(%rdi),%edx
mov    %edx,0x27c(%rdi)
mov    0x368(%rdi),%rax
mov    %rax,0x388(%rdi)
mov    0x27c(%rdi),%eax
sub    %eax,%esi
mov    0x330(%rdi),%rax
mov    %rdi,%rcx
mov    %r15,-0x30(%rbp)
mov    %rdi,%r15
mov    %rcx,%rdi
callq  *%rax
test   %eax,%eax
jne    4e9c6 <TIFFWriteScanline+0x3c6>
mov    -0x30(%rbp),%r15
mov    $0xffffffffffffffff,%rax
leaveq 
retq   
mov    $0xffffffffffffffff,%rax
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
mov    %r10,%rsi
lea    0x267ba(%rip),%rdx        # 75096 <module.18+0x12>
callq  8a00 <TIFFErrorExt@plt>
mov    $0xffffffffffffffff,%rax
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
lea    0x267d4(%rip),%rdx        # 750ce <module.18+0x4a>
movzwl %cx,%ecx
mov    %r10,%rsi
callq  8a00 <TIFFErrorExt@plt>
mov    $0xffffffffffffffff,%rax
leaveq 
retq   
mov    $0xffffffffffffffff,%rax
leaveq 
retq   
mov    -0x30(%rbp),%rcx
mov    %ecx,0x284(%r15)
cmp    0xe0(%r15),%ecx
jae    4e9e5 <TIFFWriteScanline+0x3e5>
mov    0xe0(%r15),%esi
test   %esi,%esi
je     4ea09 <TIFFWriteScanline+0x409>
xor    %edx,%edx
mov    %rcx,%rax
div    %esi
imul   0x84(%r15),%edx
mov    %edx,0x27c(%r15)
mov    0x10(%r15),%eax
and    $0x20,%eax
test   %eax,%eax
je     4ea32 <TIFFWriteScanline+0x432>
movq   $0x0,0x390(%r15)
mov    0x368(%r15),%rax
mov    %rax,0x388(%r15)
mov    %ecx,%eax
shl    $0x3,%rax
add    0xf0(%r15),%rax
mov    (%rax),%rcx
test   %rcx,%rcx
je     4e9a3 <TIFFWriteScanline+0x3a3>
movq   $0x0,(%rax)
movq   $0x0,0x288(%r15)
mov    %r15,%rdi
mov    -0x20(%rbp),%rsi
callq  *0x2e8(%r15)
test   %eax,%eax
jne    4ea4d <TIFFWriteScanline+0x44d>
mov    -0x10(%rbp),%r15
mov    $0xffffffffffffffff,%rax
leaveq 
retq   
mov    -0x28(%rbp),%rsi
mov    %esi,0x27c(%r15)
mov    %r15,%rdi
mov    -0x30(%rbp),%r15
mov    -0x8(%rbp),%r11
mov    -0x20(%rbp),%rcx
jmpq   4e6db <TIFFWriteScanline+0xdb>
mov    -0x18(%rbp),%rax
test   %eax,%eax
jle    4e92f <TIFFWriteScanline+0x32f>
mov    0x5c(%r15),%eax
mov    0x84(%r15),%esi
mov    %rsi,%rdx
neg    %edx
cmp    %eax,%edx
ja     4ea76 <TIFFWriteScanline+0x476>
xor    %eax,%eax
jmp    4ea7e <TIFFWriteScanline+0x47e>
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
lea    0x266d7(%rip),%rdx        # 750f0 <module.18+0x6c>
lea    0x26664(%rip),%rsi        # 75084 <module.18>
callq  8a00 <TIFFErrorExt@plt>
mov    -0x10(%rbp),%r15
mov    $0xffffffffffffffff,%rax
leaveq 
retq   
mov    %r15,%rdi
callq  *0x2d8(%r15)
test   %eax,%eax
jne    4ea8a <TIFFWriteScanline+0x48a>
mov    -0x10(%rbp),%r15
mov    $0xffffffffffffffff,%rax
leaveq 
retq   
mov    0x10(%r15),%eax
or     $0x1000,%eax
mov    %eax,0x10(%r15)
mov    %r15,%rdi
mov    -0x10(%rbp),%r15
mov    -0x30(%rbp),%rax
mov    -0x8(%rbp),%r11
mov    -0x20(%rbp),%rcx
mov    -0x28(%rbp),%rsi
jmpq   4e6cd <TIFFWriteScanline+0xcd>
lea    -0x1(%rsi,%rax,1),%eax
xor    %edx,%edx
div    %esi
mov    %eax,0xe0(%r15)
jmpq   4e92f <TIFFWriteScanline+0x32f>
mov    0x10(%r15),%eax
or     $0x20,%eax
mov    %eax,0x10(%r15)
mov    -0x30(%rbp),%rcx
jmpq   4e963 <TIFFWriteScanline+0x363>
xchg   %ax,%ax

000000000004eaa0 <TIFFWriteTile>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    %rsi,-0x8(%rbp)
mov    %rdx,%rsi
mov    %rcx,%rdx
mov    %r8,%rcx
mov    %r9,%r8
mov    %r8,-0x28(%rbp)
mov    %rdi,-0x30(%rbp)
mov    %rsi,-0x10(%rbp)
mov    %rdx,-0x18(%rbp)
mov    %rcx,-0x20(%rbp)
callq  8030 <TIFFCheckTile@plt>
test   %eax,%eax
jne    4eade <TIFFWriteTile+0x3e>
mov    $0xffffffffffffffff,%rax
leaveq 
retq   
mov    -0x30(%rbp),%rdi
mov    %rdi,%rax
mov    %r15,-0x30(%rbp)
mov    %rdi,%r15
mov    %rax,%rdi
mov    -0x20(%rbp),%rcx
mov    -0x18(%rbp),%rdx
mov    -0x10(%rbp),%rsi
mov    -0x28(%rbp),%r8
callq  8110 <TIFFComputeTile@plt>
mov    %rax,%rsi
mov    %r15,%rdi
mov    -0x8(%rbp),%rdx
mov    $0xffffffffffffffff,%rcx
callq  8cf0 <TIFFWriteEncodedTile@plt>
mov    -0x30(%rbp),%r15
leaveq 
retq   

000000000004eb20 <TIFFWriteEncodedStrip>:
push   %rbp
mov    %rsp,%rbp
sub    $0x50,%rsp
mov    %rsi,-0x48(%rbp)
mov    %rdx,-0x28(%rbp)
mov    %rcx,-0x30(%rbp)
xor    %r8d,%r8d
lea    0x265c8(%rip),%r9        # 75106 <module.22>
mov    $0xffffffffffffffff,%rax
mov    0x10(%rdi),%r10d
and    $0x40,%r10d
test   %r10d,%r10d
jne    4eb90 <TIFFWriteEncodedStrip+0x70>
mov    %rdi,%rax
mov    %rdi,-0x40(%rbp)
mov    %r9,%rdx
mov    %r8,%rsi
mov    %rax,%rdi
callq  81d0 <TIFFWriteCheck@plt>
test   %eax,%eax
je     4eca9 <TIFFWriteEncodedStrip+0x189>
lea    0x26590(%rip),%r9        # 75106 <module.22>
mov    -0x30(%rbp),%rcx
mov    -0x28(%rbp),%rdx
mov    $0xffffffffffffffff,%rax
mov    -0x48(%rbp),%rsi
mov    -0x40(%rbp),%rdi
xor    %r8d,%r8d
mov    0xe4(%rdi),%r10d
cmp    %esi,%r10d
jbe    4ecb2 <TIFFWriteEncodedStrip+0x192>
mov    0x10(%rdi),%r10d
and    $0x10,%r10d
test   %r10d,%r10d
jne    4ecf2 <TIFFWriteEncodedStrip+0x1d2>
mov    %rdi,%rcx
mov    %rdi,-0x40(%rbp)
mov    %rax,%rdx
mov    %r8,%rsi
mov    %rcx,%rdi
callq  8970 <TIFFWriteBufferSetup@plt>
test   %eax,%eax
je     4ed07 <TIFFWriteEncodedStrip+0x1e7>
lea    0x26531(%rip),%r9        # 75106 <module.22>
mov    -0x30(%rbp),%rcx
mov    -0x28(%rbp),%rdx
mov    -0x48(%rbp),%rsi
mov    -0x40(%rbp),%rdi
xor    %r8d,%r8d
mov    0x10(%rdi),%eax
or     $0x100000,%eax
mov    %eax,0x10(%rdi)
mov    %esi,0x284(%rdi)
mov    0xe0(%rdi),%r10d
test   %r10d,%r10d
je     4ed10 <TIFFWriteEncodedStrip+0x1f0>
mov    %rdx,%r9
xor    %edx,%edx
mov    %rsi,%rax
div    %r10d
imul   0x84(%rdi),%edx
mov    %edx,0x27c(%rdi)
mov    0x10(%rdi),%eax
and    $0x20,%eax
test   %eax,%eax
je     4ed31 <TIFFWriteEncodedStrip+0x211>
mov    0xf0(%rdi),%rdx
mov    %esi,%eax
mov    (%rdx,%rax,8),%rdx
test   %rdx,%rdx
jne    4ed5a <TIFFWriteEncodedStrip+0x23a>
movq   $0x0,0x390(%rdi)
mov    0x368(%rdi),%rax
mov    %rax,0x388(%rdi)
mov    0x10(%rdi),%eax
and    $0xffffefff,%eax
mov    %eax,0x10(%rdi)
movzwl 0x78(%rdi),%eax
cmp    $0x1,%ax
je     4ed7a <TIFFWriteEncodedStrip+0x25a>
mov    %rsi,%rax
mov    0xe0(%rdi),%ecx
xor    %edx,%edx
div    %ecx
mov    %rax,%rsi
mov    %rsi,-0x20(%rbp)
mov    %rdi,%rax
mov    %rax,-0x38(%rbp)
callq  *0x2e8(%rax)
test   %eax,%eax
jne    4edc4 <TIFFWriteEncodedStrip+0x2a4>
mov    $0xffffffffffffffff,%rax
leaveq 
retq   
mov    $0xffffffffffffffff,%rax
leaveq 
retq   
movzwl 0xaa(%rdi),%eax
cmp    $0x2,%ax
je     4ee29 <TIFFWriteEncodedStrip+0x309>
mov    $0x1,%esi
mov    %rdi,%rax
mov    %r15,-0x20(%rbp)
mov    %r9,%rdx
mov    %rdi,%r15
mov    %rax,%rdi
callq  4f8c0 <TIFFGrowStrips>
test   %eax,%eax
jne    4ee4a <TIFFWriteEncodedStrip+0x32a>
mov    -0x20(%rbp),%r15
mov    $0xffffffffffffffff,%rax
leaveq 
retq   
mov    0x368(%rdi),%r10
test   %r10,%r10
jne    4ebe8 <TIFFWriteEncodedStrip+0xc8>
jmpq   4ebb1 <TIFFWriteEncodedStrip+0x91>
mov    $0xffffffffffffffff,%rax
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
mov    %r9,%rsi
lea    0x263cd(%rip),%rdx        # 750f0 <module.18+0x6c>
callq  8a00 <TIFFErrorExt@plt>
mov    $0xffffffffffffffff,%rax
leaveq 
retq   
mov    %rdi,%rax
mov    %r15,-0x18(%rbp)
mov    %rdi,%r15
mov    %rax,%rdi
callq  *0x2d8(%r15)
test   %eax,%eax
jne    4ee6c <TIFFWriteEncodedStrip+0x34c>
mov    -0x18(%rbp),%r15
mov    $0xffffffffffffffff,%rax
leaveq 
retq   
mov    0x370(%rdi),%rax
cmp    %rdx,%rax
jle    4ee92 <TIFFWriteEncodedStrip+0x372>
movq   $0x0,0x288(%rdi)
jmpq   4ec45 <TIFFWriteEncodedStrip+0x125>
mov    %rdi,%rax
mov    %rcx,%rdx
mov    %r15,-0x10(%rbp)
mov    %r14,-0x8(%rbp)
mov    %r9,%rsi
mov    %rcx,%r14
mov    %rdi,%r15
mov    %rax,%rdi
callq  *0x3e8(%r15)
mov    0x10(%r15),%ecx
movzwl 0x7e(%r15),%eax
and    %ecx,%eax
test   %eax,%eax
je     4eecf <TIFFWriteEncodedStrip+0x3af>
test   %r14,%r14
jg     4eeee <TIFFWriteEncodedStrip+0x3ce>
mov    %r14,%rax
mov    -0x8(%rbp),%r14
mov    -0x10(%rbp),%r15
leaveq 
retq   
mov    -0x38(%rbp),%rax
mov    %rax,%rdi
mov    -0x28(%rbp),%rsi
mov    %rsi,%r8
mov    -0x30(%rbp),%rcx
mov    %rcx,%rdx
mov    %r15,-0x30(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x28(%rbp)
mov    %rcx,%r13
mov    %rax,%r14
mov    %rsi,%r15
mov    %r8,%rsi
callq  *0x3e8(%r14)
mov    %r15,%rsi
mov    %r14,%rdi
mov    %r13,%rdx
mov    -0x20(%rbp),%rcx
callq  *0x310(%r14)
test   %eax,%eax
jne    4ef16 <TIFFWriteEncodedStrip+0x3f6>
mov    -0x28(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x30(%rbp),%r15
mov    $0xffffffffffffffff,%rax
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
mov    %r9,%rsi
lea    0x262e0(%rip),%rdx        # 7511c <module.22+0x16>
callq  8a00 <TIFFErrorExt@plt>
mov    $0xffffffffffffffff,%rax
leaveq 
retq   
mov    0x84(%r15),%ecx
mov    %rcx,%rdx
neg    %edx
mov    0x5c(%r15),%eax
cmp    %eax,%edx
ja     4ef39 <TIFFWriteEncodedStrip+0x419>
mov    %r15,%rdi
xor    %eax,%eax
jmpq   4ef44 <TIFFWriteEncodedStrip+0x424>
mov    0x10(%r15),%eax
or     $0x20,%eax
mov    %eax,0x10(%r15)
mov    %r15,%rdi
mov    -0x18(%rbp),%r15
mov    -0x30(%rbp),%rcx
mov    -0x28(%rbp),%r9
mov    -0x48(%rbp),%rsi
xor    %r8d,%r8d
jmpq   4ec2f <TIFFWriteEncodedStrip+0x10f>
add    $0x400,%rdx
and    $0xfffffffffffffc00,%rdx
mov    %rdi,%rax
mov    %rdi,-0x38(%rbp)
mov    %r8,%rsi
mov    %rax,%rdi
callq  8970 <TIFFWriteBufferSetup@plt>
test   %eax,%eax
je     4ef70 <TIFFWriteEncodedStrip+0x450>
mov    -0x30(%rbp),%rcx
mov    -0x28(%rbp),%r9
mov    -0x48(%rbp),%rsi
mov    -0x38(%rbp),%rdi
jmpq   4ed6a <TIFFWriteEncodedStrip+0x24a>
and    $0x100,%ecx
test   %ecx,%ecx
jne    4edae <TIFFWriteEncodedStrip+0x28e>
mov    -0x28(%rbp),%rdi
mov    %r14,%rsi
callq  8700 <TIFFReverseBits@plt>
jmpq   4edae <TIFFWriteEncodedStrip+0x28e>
mov    %r15,%rdi
mov    %r14,%rcx
mov    -0x28(%rbp),%rdx
mov    -0x48(%rbp),%rsi
callq  4fa40 <TIFFAppendToStrip>
test   %eax,%eax
jne    4ef79 <TIFFWriteEncodedStrip+0x459>
mov    -0x8(%rbp),%r14
mov    -0x10(%rbp),%r15
mov    $0xffffffffffffffff,%rax
leaveq 
retq   
mov    %r14,%rdi
callq  *0x2f0(%r14)
test   %eax,%eax
jne    4ef86 <TIFFWriteEncodedStrip+0x466>
mov    -0x28(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x30(%rbp),%r15
mov    $0xffffffffffffffff,%rax
leaveq 
retq   
lea    -0x1(%rcx,%rax,1),%eax
mov    %r15,%rdi
xor    %edx,%edx
div    %ecx
mov    %eax,0xe0(%rdi)
mov    -0x20(%rbp),%r15
lea    0x261b1(%rip),%r9        # 75106 <module.22>
mov    -0x30(%rbp),%rcx
mov    -0x28(%rbp),%rdx
mov    $0xffffffffffffffff,%rax
mov    -0x48(%rbp),%rsi
xor    %r8d,%r8d
jmpq   4eba0 <TIFFWriteEncodedStrip+0x80>
mov    $0xffffffffffffffff,%rax
leaveq 
retq   
mov    %r14,%rax
mov    -0x8(%rbp),%r14
mov    -0x10(%rbp),%r15
leaveq 
retq   
mov    0x10(%r14),%ecx
movzwl 0x7e(%r14),%eax
and    %ecx,%eax
test   %eax,%eax
je     4efcb <TIFFWriteEncodedStrip+0x4ab>
mov    0x390(%r14),%rcx
test   %rcx,%rcx
jg     4efea <TIFFWriteEncodedStrip+0x4ca>
movq   $0x0,0x390(%r14)
mov    0x368(%r14),%rax
mov    %rax,0x388(%r14)
mov    %r13,%rax
mov    -0x28(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x30(%rbp),%r15
leaveq 
retq   
and    $0x100,%ecx
test   %ecx,%ecx
jne    4ef95 <TIFFWriteEncodedStrip+0x475>
mov    0x368(%r14),%rdi
mov    0x390(%r14),%rsi
callq  8700 <TIFFReverseBits@plt>
jmp    4ef95 <TIFFWriteEncodedStrip+0x475>
mov    0x368(%r14),%rdx
mov    %r14,%rdi
mov    -0x48(%rbp),%rsi
callq  4fa40 <TIFFAppendToStrip>
test   %eax,%eax
jne    4efa1 <TIFFWriteEncodedStrip+0x481>
mov    -0x28(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x30(%rbp),%r15
mov    $0xffffffffffffffff,%rax
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)

000000000004f020 <TIFFWriteRawStrip>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
xor    %eax,%eax
lea    0x26123(%rip),%r8        # 75154 <module.24>
mov    0x10(%rdi),%r9d
and    $0x40,%r9d
test   %r9d,%r9d
jne    4f07c <TIFFWriteRawStrip+0x5c>
mov    %rdi,%r9
mov    %rdi,-0x18(%rbp)
mov    %rsi,-0x20(%rbp)
mov    %rcx,-0x10(%rbp)
mov    %rdx,-0x8(%rbp)
mov    %r8,%rdx
mov    %rax,%rsi
mov    %r9,%rdi
callq  81d0 <TIFFWriteCheck@plt>
test   %eax,%eax
je     4f0d6 <TIFFWriteRawStrip+0xb6>
lea    0x260ea(%rip),%r8        # 75154 <module.24>
mov    -0x8(%rbp),%rdx
mov    -0x10(%rbp),%rcx
mov    -0x20(%rbp),%rsi
mov    -0x18(%rbp),%rdi
xor    %eax,%eax
mov    0xe4(%rdi),%r9d
cmp    %esi,%r9d
jbe    4f0df <TIFFWriteRawStrip+0xbf>
mov    %esi,0x284(%rdi)
mov    0xe0(%rdi),%r9d
test   %r9d,%r9d
je     4f16c <TIFFWriteRawStrip+0x14c>
mov    %rdx,%r8
xor    %edx,%edx
mov    %rsi,%rax
div    %r9d
imul   0x84(%rdi),%edx
mov    %edx,0x27c(%rdi)
mov    %rcx,%rax
mov    %rcx,-0x20(%rbp)
mov    %rax,%rcx
mov    %r8,%rdx
callq  4fa40 <TIFFAppendToStrip>
test   %eax,%eax
je     4f18d <TIFFWriteRawStrip+0x16d>
mov    -0x20(%rbp),%rax
leaveq 
retq   
mov    $0xffffffffffffffff,%rax
leaveq 
retq   
movzwl 0xaa(%rdi),%r9d
cmp    $0x2,%r9w
je     4f196 <TIFFWriteRawStrip+0x176>
cmp    0xe0(%rdi),%esi
jb     4f126 <TIFFWriteRawStrip+0x106>
mov    0x5c(%rdi),%r11d
mov    0x84(%rdi),%r9d
mov    %r9,%r10
neg    %r10d
cmp    %r11d,%r10d
jbe    4f120 <TIFFWriteRawStrip+0x100>
lea    -0x1(%r9,%r11,1),%eax
mov    %rdx,%r10
xor    %edx,%edx
div    %r9d
mov    %r10,%rdx
mov    %eax,0xe0(%rdi)
mov    $0x1,%eax
mov    %rdi,%r9
mov    %rdi,-0x20(%rbp)
mov    %rsi,-0x18(%rbp)
mov    %rcx,-0x10(%rbp)
mov    %rdx,-0x8(%rbp)
mov    %r8,%rdx
mov    %rax,%rsi
mov    %r9,%rdi
callq  4f8c0 <TIFFGrowStrips>
test   %eax,%eax
je     4f1b7 <TIFFWriteRawStrip+0x197>
lea    0x25ffd(%rip),%r8        # 75154 <module.24>
mov    -0x8(%rbp),%rdx
mov    -0x10(%rbp),%rcx
mov    -0x18(%rbp),%rsi
mov    -0x20(%rbp),%rdi
jmpq   4f088 <TIFFWriteRawStrip+0x68>
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
mov    %r8,%rsi
lea    0x25f71(%rip),%rdx        # 750f0 <module.18+0x6c>
callq  8a00 <TIFFErrorExt@plt>
mov    $0xffffffffffffffff,%rax
leaveq 
retq   
mov    $0xffffffffffffffff,%rax
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
mov    %r8,%rsi
lea    0x25f73(%rip),%rdx        # 7511c <module.22+0x16>
callq  8a00 <TIFFErrorExt@plt>
mov    $0xffffffffffffffff,%rax
leaveq 
retq   
mov    $0xffffffffffffffff,%rax
leaveq 
retq   

000000000004f1c0 <TIFFWriteEncodedTile>:
push   %rbp
mov    %rsp,%rbp
sub    $0x60,%rsp
lea    0x25f97(%rip),%r9        # 75166 <module.25>
mov    $0xffffffffffffffff,%rax
mov    0x10(%rdi),%r8d
and    $0x40,%r8d
test   %r8d,%r8d
je     4f2aa <TIFFWriteEncodedTile+0xea>
mov    %rdx,%r10
mov    0xe4(%rdi),%r8d
cmp    %esi,%r8d
jbe    4f2fb <TIFFWriteEncodedTile+0x13b>
xor    %r8d,%r8d
mov    0x10(%rdi),%edx
and    $0x10,%edx
test   %edx,%edx
jne    4f31e <TIFFWriteEncodedTile+0x15e>
mov    %rdi,%rdx
mov    %rdi,-0x60(%rbp)
mov    %rsi,-0x58(%rbp)
mov    %rcx,-0x48(%rbp)
mov    %r10,-0x38(%rbp)
mov    %r8,%rsi
mov    %rdx,%rdi
mov    %rax,%rdx
callq  8970 <TIFFWriteBufferSetup@plt>
test   %eax,%eax
je     4f333 <TIFFWriteEncodedTile+0x173>
xor    %r8d,%r8d
mov    -0x38(%rbp),%r10
mov    -0x48(%rbp),%rcx
lea    0x25f20(%rip),%r9        # 75166 <module.25>
mov    -0x58(%rbp),%rsi
mov    -0x60(%rbp),%rdi
mov    0x10(%rdi),%eax
or     $0x100000,%eax
mov    %eax,0x10(%rdi)
mov    %esi,0x2ac(%rdi)
mov    0xf0(%rdi),%rdx
mov    %esi,%eax
mov    (%rdx,%rax,8),%rdx
test   %rdx,%rdx
jne    4f33c <TIFFWriteEncodedTile+0x17c>
movq   $0x0,0x390(%rdi)
mov    0x368(%rdi),%rax
mov    %rax,0x388(%rdi)
mov    0x5c(%rdi),%edx
mov    0x68(%rdi),%r11d
mov    %r11,%rax
neg    %eax
cmp    %edx,%eax
ja     4f35c <TIFFWriteEncodedTile+0x19c>
mov    %r8,%rax
jmpq   4f366 <TIFFWriteEncodedTile+0x1a6>
mov    $0x1,%eax
mov    %rdi,%r8
mov    %rdi,-0x58(%rbp)
mov    %rsi,-0x60(%rbp)
mov    %rcx,-0x50(%rbp)
mov    %rdx,-0x40(%rbp)
mov    %r9,%rdx
mov    %rax,%rsi
mov    %r8,%rdi
callq  81d0 <TIFFWriteCheck@plt>
test   %eax,%eax
je     4f444 <TIFFWriteEncodedTile+0x284>
mov    -0x40(%rbp),%r10
mov    -0x50(%rbp),%rcx
lea    0x25e7f(%rip),%r9        # 75166 <module.25>
mov    $0xffffffffffffffff,%rax
mov    -0x60(%rbp),%rsi
mov    -0x58(%rbp),%rdi
jmpq   4f1ea <TIFFWriteEncodedTile+0x2a>
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
lea    0x25e70(%rip),%rdx        # 7517b <module.25+0x15>
mov    %esi,%ecx
mov    %r9,%rsi
callq  8a00 <TIFFErrorExt@plt>
mov    $0xffffffffffffffff,%rax
leaveq 
retq   
mov    0x368(%rdi),%rdx
test   %rdx,%rdx
jne    4f24e <TIFFWriteEncodedTile+0x8e>
jmpq   4f20b <TIFFWriteEncodedTile+0x4b>
mov    $0xffffffffffffffff,%rax
leaveq 
retq   
mov    0x370(%rdi),%rax
cmp    %rdx,%rax
jle    4f44d <TIFFWriteEncodedTile+0x28d>
movq   $0x0,0x288(%rdi)
jmpq   4f275 <TIFFWriteEncodedTile+0xb5>
lea    -0x1(%r11,%rdx,1),%eax
xor    %edx,%edx
div    %r11d
lea    0x25e2d(%rip),%rdx        # 7519a <module.25+0x34>
test   %eax,%eax
je     4f4a0 <TIFFWriteEncodedTile+0x2e0>
mov    %rax,%r11
xor    %edx,%edx
mov    %rsi,%rax
div    %r11d
imul   0x68(%rdi),%edx
mov    %edx,0x27c(%rdi)
mov    0x58(%rdi),%edx
mov    0x64(%rdi),%r11d
mov    %r11,%rax
neg    %eax
cmp    %edx,%eax
jbe    4f3a7 <TIFFWriteEncodedTile+0x1e7>
lea    -0x1(%r11,%rdx,1),%eax
xor    %edx,%edx
div    %r11d
mov    %rax,%r8
test   %r8d,%r8d
je     4f4ba <TIFFWriteEncodedTile+0x2fa>
xor    %edx,%edx
mov    %rsi,%rax
div    %r8d
imul   0x64(%rdi),%edx
mov    %edx,0x2a8(%rdi)
mov    0x10(%rdi),%eax
and    $0x20,%eax
test   %eax,%eax
je     4f4db <TIFFWriteEncodedTile+0x31b>
mov    0x10(%rdi),%eax
and    $0xffffefff,%eax
mov    %eax,0x10(%rdi)
test   %rcx,%rcx
jle    4f3e9 <TIFFWriteEncodedTile+0x229>
cmp    0x2b0(%rdi),%rcx
jle    4f3f0 <TIFFWriteEncodedTile+0x230>
mov    0x2b0(%rdi),%rcx
movzwl 0x78(%rdi),%eax
cmp    $0x1,%ax
je     4f510 <TIFFWriteEncodedTile+0x350>
mov    0xe0(%rdi),%r8d
xor    %edx,%edx
mov    %rsi,%rax
div    %r8d
mov    %rax,-0x20(%rbp)
mov    %rdi,%rdx
mov    %rdi,-0x28(%rbp)
mov    %rsi,-0x18(%rbp)
mov    %r10,-0x30(%rbp)
mov    %rcx,-0x60(%rbp)
mov    %rax,%rsi
mov    %rdi,%rax
mov    %rdx,%rdi
callq  *0x2e8(%rax)
test   %eax,%eax
jne    4f565 <TIFFWriteEncodedTile+0x3a5>
mov    $0xffffffffffffffff,%rax
leaveq 
retq   
mov    $0xffffffffffffffff,%rax
leaveq 
retq   
add    $0x400,%rdx
and    $0xfffffffffffffc00,%rdx
mov    %rdi,%rax
mov    %rdi,-0x60(%rbp)
mov    %rsi,-0x50(%rbp)
mov    %rcx,-0x48(%rbp)
mov    %r10,-0x38(%rbp)
mov    %r8,%rsi
mov    %rax,%rdi
callq  8970 <TIFFWriteBufferSetup@plt>
test   %eax,%eax
je     4f5c7 <TIFFWriteEncodedTile+0x407>
xor    %r8d,%r8d
mov    -0x38(%rbp),%r10
mov    -0x48(%rbp),%rcx
lea    0x25cd3(%rip),%r9        # 75166 <module.25>
mov    -0x50(%rbp),%rsi
mov    -0x60(%rbp),%rdi
jmpq   4f34c <TIFFWriteEncodedTile+0x18c>
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
mov    %r9,%rsi
callq  8a00 <TIFFErrorExt@plt>
mov    $0xffffffffffffffff,%rax
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
mov    %r9,%rsi
lea    0x25ccd(%rip),%rdx        # 7519a <module.25+0x34>
callq  8a00 <TIFFErrorExt@plt>
mov    $0xffffffffffffffff,%rax
leaveq 
retq   
mov    %rdi,%rax
mov    %rsi,-0x40(%rbp)
mov    %rcx,-0x60(%rbp)
mov    %r10,-0x30(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rdi,%r15
mov    %rax,%rdi
callq  *0x2d8(%r15)
test   %eax,%eax
jne    4f5d0 <TIFFWriteEncodedTile+0x410>
mov    -0x28(%rbp),%r15
mov    $0xffffffffffffffff,%rax
leaveq 
retq   
mov    %rdi,%rax
mov    %r10,%r8
mov    %rcx,%rdx
mov    %rsi,-0x20(%rbp)
mov    %r10,-0x60(%rbp)
mov    %r15,-0x18(%rbp)
mov    %r14,-0x10(%rbp)
mov    %r8,%rsi
mov    %rcx,%r14
mov    %rdi,%r15
mov    %rax,%rdi
callq  *0x3e8(%r15)
mov    0x10(%r15),%ecx
movzwl 0x7e(%r15),%eax
and    %ecx,%eax
test   %eax,%eax
je     4f5f3 <TIFFWriteEncodedTile+0x433>
test   %r14,%r14
jg     4f612 <TIFFWriteEncodedTile+0x452>
mov    %r14,%rax
mov    -0x10(%rbp),%r14
mov    -0x18(%rbp),%r15
leaveq 
retq   
mov    -0x28(%rbp),%rax
mov    %rax,%rdi
mov    -0x30(%rbp),%r8
mov    %r8,%rsi
mov    -0x60(%rbp),%rcx
mov    %rcx,%rdx
mov    %r15,-0x60(%rbp)
mov    %r13,-0x8(%rbp)
mov    %r14,-0x10(%rbp)
mov    %rcx,%r13
mov    %rax,%r14
mov    %r8,%r15
callq  *0x3e8(%r14)
mov    %r15,%rsi
mov    %r14,%rdi
mov    %r13,%rdx
mov    -0x20(%rbp),%rcx
callq  *0x320(%r14)
test   %eax,%eax
jne    4f63a <TIFFWriteEncodedTile+0x47a>
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
mov    -0x60(%rbp),%r15
mov    $0xffffffffffffffff,%rax
leaveq 
retq   
mov    $0xffffffffffffffff,%rax
leaveq 
retq   
mov    0x10(%r15),%eax
or     $0x20,%eax
mov    %eax,0x10(%r15)
mov    %r15,%rdi
mov    -0x28(%rbp),%r15
mov    -0x30(%rbp),%r10
mov    -0x60(%rbp),%rcx
mov    -0x40(%rbp),%rsi
jmpq   4f3d0 <TIFFWriteEncodedTile+0x210>
and    $0x100,%ecx
test   %ecx,%ecx
jne    4f54f <TIFFWriteEncodedTile+0x38f>
mov    -0x60(%rbp),%rdi
mov    %r14,%rsi
callq  8700 <TIFFReverseBits@plt>
jmpq   4f54f <TIFFWriteEncodedTile+0x38f>
mov    %r15,%rdi
mov    %r14,%rcx
mov    -0x60(%rbp),%rdx
mov    -0x20(%rbp),%rsi
callq  4fa40 <TIFFAppendToStrip>
test   %eax,%eax
jne    4f65d <TIFFWriteEncodedTile+0x49d>
mov    -0x10(%rbp),%r14
mov    -0x18(%rbp),%r15
mov    $0xffffffffffffffff,%rax
leaveq 
retq   
mov    %r14,%rdi
callq  *0x2f0(%r14)
test   %eax,%eax
jne    4f66a <TIFFWriteEncodedTile+0x4aa>
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
mov    -0x60(%rbp),%r15
mov    $0xffffffffffffffff,%rax
leaveq 
retq   
mov    %r14,%rax
mov    -0x10(%rbp),%r14
mov    -0x18(%rbp),%r15
leaveq 
retq   
mov    0x10(%r14),%ecx
movzwl 0x7e(%r14),%eax
and    %ecx,%eax
test   %eax,%eax
je     4f6af <TIFFWriteEncodedTile+0x4ef>
mov    0x390(%r14),%rcx
test   %rcx,%rcx
jg     4f6ce <TIFFWriteEncodedTile+0x50e>
movq   $0x0,0x390(%r14)
mov    0x368(%r14),%rax
mov    %rax,0x388(%r14)
mov    %r13,%rax
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
mov    -0x60(%rbp),%r15
leaveq 
retq   
and    $0x100,%ecx
test   %ecx,%ecx
jne    4f679 <TIFFWriteEncodedTile+0x4b9>
mov    0x368(%r14),%rdi
mov    0x390(%r14),%rsi
callq  8700 <TIFFReverseBits@plt>
jmp    4f679 <TIFFWriteEncodedTile+0x4b9>
mov    0x368(%r14),%rdx
mov    %r14,%rdi
mov    -0x18(%rbp),%rsi
callq  4fa40 <TIFFAppendToStrip>
test   %eax,%eax
jne    4f685 <TIFFWriteEncodedTile+0x4c5>
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
mov    -0x60(%rbp),%r15
mov    $0xffffffffffffffff,%rax
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

000000000004f700 <TIFFWriteRawTile>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
lea    0x25a96(%rip),%r9        # 751a5 <module.28>
mov    0x10(%rdi),%eax
and    $0x40,%eax
test   %eax,%eax
jne    4f75a <TIFFWriteRawTile+0x5a>
mov    $0x1,%eax
mov    %rdi,%r8
mov    %rdi,-0x18(%rbp)
mov    %rsi,-0x20(%rbp)
mov    %rcx,-0x10(%rbp)
mov    %rdx,-0x8(%rbp)
mov    %r9,%rdx
mov    %rax,%rsi
mov    %r8,%rdi
callq  81d0 <TIFFWriteCheck@plt>
test   %eax,%eax
je     4f77f <TIFFWriteRawTile+0x7f>
lea    0x25a5b(%rip),%r9        # 751a5 <module.28>
mov    -0x8(%rbp),%rdx
mov    -0x10(%rbp),%rcx
mov    -0x20(%rbp),%rsi
mov    -0x18(%rbp),%rdi
mov    0xe4(%rdi),%r8d
cmp    %esi,%r8d
jbe    4f788 <TIFFWriteRawTile+0x88>
mov    %rcx,%rax
mov    %rcx,-0x20(%rbp)
mov    %rax,%rcx
callq  4fa40 <TIFFAppendToStrip>
test   %eax,%eax
je     4f7ab <TIFFWriteRawTile+0xab>
mov    -0x20(%rbp),%rax
leaveq 
retq   
mov    $0xffffffffffffffff,%rax
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
lea    0x259e3(%rip),%rdx        # 7517b <module.25+0x15>
mov    %esi,%ecx
mov    %r9,%rsi
callq  8a00 <TIFFErrorExt@plt>
mov    $0xffffffffffffffff,%rax
leaveq 
retq   
mov    $0xffffffffffffffff,%rax
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nop

000000000004f7c0 <TIFFSetWriteOffset>:
push   %rbp
mov    %rsp,%rbp
mov    %rsi,0x288(%rdi)
leaveq 
retq   
nopl   (%rax)

000000000004f7d0 <TIFFFlushData1>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    $0x1,%eax
mov    0x390(%rdi),%rsi
test   %rsi,%rsi
jg     4f7eb <TIFFFlushData1+0x1b>
leaveq 
retq   
mov    0x10(%rdi),%ecx
mov    %rcx,%rdx
and    $0x100000,%edx
test   %edx,%edx
jne    4f7fd <TIFFFlushData1+0x2d>
leaveq 
retq   
movzwl 0x7e(%rdi),%eax
and    %ecx,%eax
test   %eax,%eax
je     4f81b <TIFFFlushData1+0x4b>
mov    0x10(%rdi),%eax
and    $0x400,%eax
test   %eax,%eax
jne    4f844 <TIFFFlushData1+0x74>
mov    0x284(%rdi),%esi
jmp    4f84a <TIFFFlushData1+0x7a>
and    $0x100,%ecx
test   %ecx,%ecx
jne    4f807 <TIFFFlushData1+0x37>
mov    0x368(%rdi),%rax
mov    %r15,-0x8(%rbp)
mov    %rdi,%r15
mov    %rax,%rdi
callq  8700 <TIFFReverseBits@plt>
mov    %r15,%rdi
mov    -0x8(%rbp),%r15
jmp    4f807 <TIFFFlushData1+0x37>
mov    0x2ac(%rdi),%esi
mov    0x368(%rdi),%rdx
mov    0x390(%rdi),%rcx
mov    %rdi,%rax
mov    %r15,-0x8(%rbp)
mov    %rdi,%r15
mov    %rax,%rdi
callq  4fa40 <TIFFAppendToStrip>
test   %eax,%eax
jne    4f88f <TIFFFlushData1+0xbf>
movq   $0x0,0x390(%r15)
mov    0x368(%r15),%rax
mov    %rax,0x388(%r15)
xor    %eax,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
movq   $0x0,0x390(%r15)
mov    0x368(%r15),%rax
mov    %rax,0x388(%r15)
mov    $0x1,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

000000000004f8c0 <TIFFGrowStrips>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
movzwl 0xaa(%rdi),%eax
cmp    $0x1,%ax
je     4f8f4 <TIFFGrowStrips+0x34>
lea    0x258da(%rip),%rdi        # 751b6 <module.28+0x11>
lea    0x258fe(%rip),%rsi        # 751e1 <module.28+0x3c>
mov    $0x2ae,%edx
lea    0x258fe(%rip),%rcx        # 751ed <module.28+0x48>
callq  8490 <__assert_fail@plt>
mov    %rsi,%rax
add    0xe4(%rdi),%eax
mov    %eax,%eax
shl    $0x3,%rax
mov    0xe8(%rdi),%rcx
mov    %r13,-0x10(%rbp)
mov    %r14,-0x18(%rbp)
mov    %r15,-0x20(%rbp)
mov    %rdi,%r13
mov    %rcx,%rdi
mov    %rsi,%r14
mov    %rax,%rsi
mov    %r12,%r15
mov    %rdx,%r12
callq  8100 <_TIFFrealloc@plt>
mov    %r14,%rcx
add    0xe4(%r13),%ecx
mov    %ecx,%esi
shl    $0x3,%rsi
mov    0xf0(%r13),%rdi
mov    %r15,-0x8(%rbp)
mov    %rax,%r15
callq  8100 <_TIFFrealloc@plt>
xor    %esi,%esi
test   %r15,%r15
je     4f9d4 <TIFFGrowStrips+0x114>
test   %rax,%rax
je     4f9d4 <TIFFGrowStrips+0x114>
mov    %r15,0xe8(%r13)
mov    %rax,0xf0(%r13)
mov    0xe4(%r13),%eax
lea    (%r15,%rax,8),%rdi
mov    %r14d,%r12d
shl    $0x3,%r12
mov    %rsi,%r15
mov    %r12,%rdx
callq  88e0 <_TIFFmemset@plt>
mov    0xe4(%r13),%edi
shl    $0x3,%rdi
add    0xf0(%r13),%rdi
mov    %r12,%rdx
mov    %r15,%rsi
callq  88e0 <_TIFFmemset@plt>
add    0xe4(%r13),%r14d
mov    %r14d,0xe4(%r13)
mov    0x10(%r13),%eax
or     $0x8,%eax
mov    %eax,0x10(%r13)
mov    $0x1,%eax
mov    -0x8(%rbp),%r12
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
leaveq 
retq   
test   %r15,%r15
jne    4f9de <TIFFGrowStrips+0x11e>
mov    %rsi,%r14
jmp    4f9ef <TIFFGrowStrips+0x12f>
mov    %r15,%rdi
mov    %rax,%r15
mov    %rsi,%r14
callq  8bb0 <_TIFFfree@plt>
mov    %r15,%rax
test   %rax,%rax
je     4f9fc <TIFFGrowStrips+0x13c>
mov    %rax,%rdi
callq  8bb0 <_TIFFfree@plt>
movl   $0x0,0xe4(%r13)
xor    %eax,%eax
mov    0x3b8(%r13),%rdi
mov    %r12,%rsi
lea    0x257e2(%rip),%rdx        # 751fc <module.28+0x57>
callq  8a00 <TIFFErrorExt@plt>
mov    %r14,%rax
mov    -0x8(%rbp),%r12
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nop

000000000004fa40 <TIFFAppendToStrip>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
lea    0x257cd(%rip),%r10        # 7521c <module.33>
xor    %eax,%eax
mov    %esi,%r8d
mov    0xe8(%rdi),%rsi
mov    (%rsi,%r8,8),%rsi
test   %rsi,%rsi
je     4fa7f <TIFFAppendToStrip+0x3f>
mov    0x288(%rdi),%rsi
test   %rsi,%rsi
je     4fa7f <TIFFAppendToStrip+0x3f>
mov    %r10,%rsi
mov    $0xffffffffffffffff,%r9
jmpq   4fb65 <TIFFAppendToStrip+0x125>
mov    0xe4(%rdi),%esi
test   %esi,%esi
jne    4faa8 <TIFFAppendToStrip+0x68>
lea    0x2579e(%rip),%rdi        # 7522e <module.33+0x12>
lea    0x2574a(%rip),%rsi        # 751e1 <module.28+0x3c>
mov    $0x2d4,%edx
lea    0x2579e(%rip),%rcx        # 75241 <module.33+0x25>
callq  8490 <__assert_fail@plt>
mov    0xf0(%rdi),%rsi
mov    (%rsi,%r8,8),%r9
test   %r9,%r9
jne    4fc18 <TIFFAppendToStrip+0x1d8>
mov    0x3d0(%rdi),%r9
mov    0x3b8(%rdi),%r10
mov    $0x2,%esi
mov    0xe8(%rdi),%r11
mov    %r14,-0x18(%rbp)
mov    %r15,-0x20(%rbp)
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x30(%rbp)
mov    %r8,%rbx
mov    %rdi,%r12
mov    %r10,%rdi
mov    %r11,%r13
mov    %rcx,%r14
mov    %rdx,%r15
mov    %rsi,%rdx
mov    %rax,%rsi
callq  *%r9
mov    %rax,0x0(%r13,%rbx,8)
mov    0x10(%r12),%eax
or     $0x200000,%eax
mov    %eax,0x10(%r12)
mov    %r14,%rcx
mov    %r15,%rdx
mov    %r12,%rdi
mov    %rbx,%r8
mov    -0x30(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    0xe8(%rdi),%rax
mov    (%rax,%r8,8),%rax
mov    %rax,0x288(%rdi)
mov    0xf0(%rdi),%rax
mov    (%rax,%r8,8),%r9
movq   $0x0,(%rax,%r8,8)
lea    0x256bf(%rip),%rsi        # 7521c <module.33>
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    0x288(%rdi),%r10
lea    (%rcx,%r10,1),%rax
mov    0x10(%rdi),%r11d
and    $0x80000,%r11d
test   %r11d,%r11d
jne    4fb82 <TIFFAppendToStrip+0x142>
mov    %eax,%eax
cmp    %r10,%rax
jb     4fc6d <TIFFAppendToStrip+0x22d>
cmp    %rax,%rcx
ja     4fc6d <TIFFAppendToStrip+0x22d>
mov    0x3c8(%rdi),%r10
mov    0x3b8(%rdi),%rsi
mov    %rcx,%r11
mov    %r14,-0x28(%rbp)
mov    %r15,-0x30(%rbp)
mov    %rbx,-0x10(%rbp)
mov    %r12,-0x18(%rbp)
mov    %r13,-0x20(%rbp)
mov    %rcx,%rbx
mov    %r9,%r12
mov    %rdi,%r13
mov    %rsi,%rdi
mov    %rdx,%rsi
mov    %r11,%rdx
mov    %rax,%r14
mov    %r8,%r15
callq  *%r10
cmp    %rax,%rbx
je     4fc86 <TIFFAppendToStrip+0x246>
xor    %eax,%eax
mov    0x3b8(%r13),%rdi
lea    0x256a1(%rip),%rdx        # 7528e <module.33+0x72>
mov    0x27c(%r13),%ecx
lea    0x25621(%rip),%rsi        # 7521c <module.33>
callq  8a00 <TIFFErrorExt@plt>
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
mov    -0x10(%rbp),%rbx
xor    %eax,%eax
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
leaveq 
retq   
mov    0xe8(%rdi),%rsi
mov    (%rsi,%r8,8),%rsi
test   %rsi,%rsi
je     4fabc <TIFFAppendToStrip+0x7c>
cmp    %rcx,%r9
jb     4fabc <TIFFAppendToStrip+0x7c>
mov    %rdi,%rax
mov    %r14,-0x18(%rbp)
mov    %r15,-0x20(%rbp)
mov    %rcx,-0x30(%rbp)
mov    %rdx,-0x28(%rbp)
mov    %r8,%r14
mov    %rdi,%r15
mov    %rax,%rdi
callq  82f0 <_TIFFSeekOK@plt>
test   %eax,%eax
je     4fcc4 <TIFFAppendToStrip+0x284>
mov    %r15,%rdi
mov    %r14,%r8
mov    -0x28(%rbp),%rdx
mov    -0x30(%rbp),%rcx
jmpq   4fb31 <TIFFAppendToStrip+0xf1>
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
lea    0x255f1(%rip),%rdx        # 7526e <module.33+0x52>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
mov    %r14,0x288(%r13)
mov    0xf0(%r13),%rax
add    (%rax,%r15,8),%rbx
mov    %rbx,(%rax,%r15,8)
mov    $0x1,%eax
mov    0xf0(%r13),%rcx
cmp    (%rcx,%r15,8),%r12
jne    4fcf3 <TIFFAppendToStrip+0x2b3>
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
mov    -0x10(%rbp),%rbx
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
lea    0x2557f(%rip),%rdx        # 75253 <module.33+0x37>
mov    0x27c(%r15),%ecx
lea    0x2553a(%rip),%rsi        # 7521c <module.33>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
leaveq 
retq   
mov    0x10(%r13),%ecx
or     $0x200000,%ecx
mov    %ecx,0x10(%r13)
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
mov    -0x10(%rbp),%rbx
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

000000000004fd20 <TIFFInitZIP>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
cmp    $0x80b2,%esi
je     4fd54 <TIFFInitZIP+0x34>
cmp    $0x8,%esi
je     4fd54 <TIFFInitZIP+0x34>
lea    0x2557a(%rip),%rdi        # 752b6 <module.8+0xc>
lea    0x255bc(%rip),%rsi        # 752ff <module.8+0x55>
mov    $0x195,%edx
lea    0x255ba(%rip),%rcx        # 75309 <module.8+0x5f>
callq  8490 <__assert_fail@plt>
lea    0x29f5d(%rip),%rsi        # 79cb8 <zipFields>
mov    $0x1,%edx
mov    %rdi,%rax
mov    %r15,-0x8(%rbp)
mov    %rdi,%r15
mov    %rax,%rdi
callq  8520 <_TIFFMergeFields@plt>
test   %eax,%eax
jne    4fd9a <TIFFInitZIP+0x7a>
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
lea    0x2558f(%rip),%rdx        # 75315 <module.8+0x6b>
lea    0x2551d(%rip),%rsi        # 752aa <module.8>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
mov    $0x108,%edi
callq  8440 <_TIFFmalloc@plt>
mov    %rax,0x350(%r15)
test   %rax,%rax
je     4fed8 <TIFFInitZIP+0x1b8>
movq   $0x0,0xc0(%rax)
movq   $0x0,0xc8(%rax)
movq   $0x0,0xd0(%rax)
movl   $0x0,0xd8(%rax)
mov    0x410(%r15),%rcx
mov    %rcx,0xf8(%rax)
lea    0xb5c(%rip),%rcx        # 50950 <ZIPVGetField>
mov    %rcx,0x410(%r15)
mov    0x408(%r15),%rcx
mov    %rcx,0x100(%rax)
lea    0xa70(%rip),%rcx        # 50880 <ZIPVSetField>
mov    %rcx,0x408(%r15)
movl   $0xffffffff,0xf0(%rax)
movl   $0x0,0xf4(%rax)
lea    0x46e(%rip),%rax        # 502a0 <ZIPFixupTags>
mov    %rax,0x2c0(%r15)
lea    0x470(%rip),%rax        # 502b0 <ZIPSetupDecode>
mov    %rax,0x2c8(%r15)
lea    0x582(%rip),%rax        # 503d0 <ZIPPreDecode>
mov    %rax,0x2d0(%r15)
lea    0x214(%rip),%rax        # 50070 <ZIPDecode>
mov    %rax,0x2f8(%r15)
mov    %rax,0x308(%r15)
mov    %rax,0x318(%r15)
lea    0x628(%rip),%rax        # 504a0 <ZIPSetupEncode>
mov    %rax,0x2d8(%r15)
lea    0x73a(%rip),%rax        # 505c0 <ZIPPreEncode>
mov    %rax,0x2e8(%r15)
lea    0x7fc(%rip),%rax        # 50690 <ZIPPostEncode>
mov    %rax,0x2f0(%r15)
lea    0x5e(%rip),%rax        # 4ff00 <ZIPEncode>
mov    %rax,0x300(%r15)
mov    %rax,0x310(%r15)
mov    %rax,0x320(%r15)
lea    0x8e2(%rip),%rax        # 507a0 <ZIPCleanup>
mov    %rax,0x338(%r15)
mov    %r15,%rdi
callq  8ac0 <TIFFPredictorInit@plt>
mov    $0x1,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%r15),%rdi
lea    0x25458(%rip),%rdx        # 75340 <module.8+0x96>
lea    0x253bb(%rip),%rsi        # 752aa <module.8>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
nopl   0x0(%rax)

000000000004ff00 <ZIPEncode>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
lea    0x253f0(%rip),%r9        # 752ff <module.8+0x55>
lea    0x2545c(%rip),%rcx        # 75372 <module.16+0x15>
mov    0x350(%rdi),%r8
test   %r8,%r8
jne    4ff36 <ZIPEncode+0x36>
mov    %r9,%rsi
lea    0x2543b(%rip),%rdi        # 75367 <module.16+0xa>
mov    $0x109,%edx
callq  8490 <__assert_fail@plt>
movslq 0xf4(%r8),%rax
cmp    $0x2,%eax
je     4ff56 <ZIPEncode+0x56>
mov    %r9,%rsi
lea    0x25430(%rip),%rdi        # 7537c <module.16+0x1f>
mov    $0x10a,%edx
callq  8490 <__assert_fail@plt>
mov    %rsi,0x80(%r8)
mov    %edx,0x88(%r8)
lea    0x253f2(%rip),%rsi        # 7535d <module.16>
xor    %ecx,%ecx
mov    %edx,%eax
cmp    %rdx,%rax
jne    4ffa0 <ZIPEncode+0xa0>
lea    0x80(%r8),%rax
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rsi,%rbx
mov    %rcx,%r12
mov    %rdi,%r13
mov    %r8,%r14
mov    %rax,%r15
jmp    50001 <ZIPEncode+0x101>
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
lea    0x253ec(%rip),%rdx        # 7539c <module.16+0x3f>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
mov    0xa0(%r14),%eax
test   %eax,%eax
jne    4fff6 <ZIPEncode+0xf6>
mov    0x370(%r13),%rax
mov    %rax,0x390(%r13)
mov    %r13,%rdi
callq  86e0 <TIFFFlushData1@plt>
mov    0x368(%r13),%rax
mov    %rax,0x98(%r14)
mov    0x370(%r13),%eax
mov    %eax,0xa0(%r14)
mov    0x88(%r14),%eax
test   %eax,%eax
je     50054 <ZIPEncode+0x154>
mov    %r15,%rdi
mov    %r12,%rsi
callq  84e0 <deflate@plt>
test   %eax,%eax
je     4ffb9 <ZIPEncode+0xb9>
mov    0x3b8(%r13),%rdi
mov    0xb0(%r14),%rcx
test   %rcx,%rcx
jne    5002a <ZIPEncode+0x12a>
lea    0x253ac(%rip),%rcx        # 753d6 <module.16+0x79>
mov    %rbx,%rsi
xor    %eax,%eax
lea    0x2538e(%rip),%rdx        # 753c4 <module.16+0x67>
callq  8a00 <TIFFErrorExt@plt>
mov    %r12,%rax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
mov    $0x1,%eax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
nop

0000000000050070 <ZIPDecode>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
lea    0x25280(%rip),%r9        # 752ff <module.8+0x55>
lea    0x2535b(%rip),%rcx        # 753e1 <module.23+0xa>
mov    0x350(%rdi),%r8
test   %r8,%r8
jne    500a6 <ZIPDecode+0x36>
mov    %r9,%rsi
lea    0x252cb(%rip),%rdi        # 75367 <module.16+0xa>
mov    $0x9f,%edx
callq  8490 <__assert_fail@plt>
movslq 0xf4(%r8),%rax
cmp    $0x1,%eax
je     500c6 <ZIPDecode+0x56>
mov    %r9,%rsi
lea    0x2532f(%rip),%rdi        # 753eb <module.23+0x14>
mov    $0xa0,%edx
callq  8490 <__assert_fail@plt>
mov    0x388(%rdi),%rax
mov    %rax,0x80(%r8)
mov    0x390(%rdi),%eax
mov    %eax,0x88(%r8)
mov    %rsi,0x98(%r8)
mov    %edx,0xa0(%r8)
lea    0x252e1(%rip),%rcx        # 753d7 <module.23>
mov    %edx,%eax
cmp    %rdx,%rax
jne    50135 <ZIPDecode+0xc5>
lea    0x80(%r8),%rax
mov    $0x1,%esi
lea    0x252c6(%rip),%rdx        # 753d6 <module.16+0x79>
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rcx,%rbx
mov    %rdi,%r12
mov    %r8,%r13
mov    %rax,%r14
mov    %rdx,%r15
jmp    50168 <ZIPDecode+0xf8>
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
mov    %rcx,%rsi
lea    0x25254(%rip),%rdx        # 7539c <module.16+0x3f>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
lea    0x2527f(%rip),%rbx        # 753d7 <module.23>
mov    0xa0(%r13),%eax
test   %eax,%eax
je     501c5 <ZIPDecode+0x155>
mov    $0x1,%esi
mov    %r14,%rdi
callq  8170 <inflate@plt>
cmp    $0x1,%eax
je     501c5 <ZIPDecode+0x155>
cmp    $0xfffffffd,%eax
je     5020a <ZIPDecode+0x19a>
test   %eax,%eax
je     50158 <ZIPDecode+0xe8>
mov    0x3b8(%r12),%rdi
mov    0xb0(%r13),%rax
test   %rax,%rax
je     50199 <ZIPDecode+0x129>
mov    %rax,%r15
mov    %r15,%rcx
mov    %rbx,%rsi
xor    %eax,%eax
lea    0x25286(%rip),%rdx        # 7542e <module.23+0x57>
callq  8a00 <TIFFErrorExt@plt>
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
xor    %eax,%eax
leaveq 
retq   
mov    0xa0(%r13),%r8d
test   %r8d,%r8d
jne    50262 <ZIPDecode+0x1f2>
mov    (%r14),%rax
mov    %rax,0x388(%r12)
mov    0x88(%r13),%eax
mov    %rax,0x390(%r12)
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    $0x1,%eax
leaveq 
retq   
mov    0x3b8(%r12),%rdi
mov    0x27c(%r12),%ecx
mov    0xb0(%r13),%r8
test   %r8,%r8
jne    50229 <ZIPDecode+0x1b9>
mov    %r15,%r8
mov    %rbx,%rsi
xor    %eax,%eax
lea    0x251d6(%rip),%rdx        # 7540b <module.23+0x34>
callq  8a00 <TIFFErrorExt@plt>
mov    %r14,%rdi
callq  8cd0 <inflateSync@plt>
test   %eax,%eax
je     50151 <ZIPDecode+0xe1>
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
xor    %eax,%eax
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%r12),%rdi
lea    0x251ca(%rip),%rdx        # 7543d <module.23+0x66>
mov    0x27c(%r12),%ecx
mov    %rbx,%rsi
callq  8a00 <TIFFErrorExt@plt>
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
xor    %eax,%eax
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

00000000000502a0 <ZIPFixupTags>:
push   %rbp
mov    %rsp,%rbp
mov    $0x1,%eax
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

00000000000502b0 <ZIPSetupDecode>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    0x350(%rdi),%rcx
test   %rcx,%rcx
jne    502e3 <ZIPSetupDecode+0x33>
lea    0x2509c(%rip),%rdi        # 75367 <module.16+0xa>
lea    0x2502d(%rip),%rsi        # 752ff <module.8+0x55>
mov    $0x66,%edx
lea    0x251a0(%rip),%rcx        # 7547e <module.29+0xf>
callq  8490 <__assert_fail@plt>
movslq 0xf4(%rcx),%rax
and    $0x2,%eax
test   %eax,%eax
jg     502fc <ZIPSetupDecode+0x4c>
mov    %r15,%rax
mov    %rcx,%r15
mov    %rax,%rcx
jmp    50329 <ZIPSetupDecode+0x79>
lea    0x80(%rcx),%rax
mov    %r15,-0x10(%rbp)
mov    %rdi,-0x8(%rbp)
mov    %rax,%rdi
mov    %rcx,%r15
callq  8960 <deflateEnd@plt>
movl   $0x0,0xf4(%r15)
mov    -0x8(%rbp),%rdi
mov    -0x10(%rbp),%rcx
movslq 0xf4(%r15),%rax
and    $0x1,%eax
test   %eax,%eax
je     50352 <ZIPSetupDecode+0xa2>
movslq 0xf4(%r15),%rax
or     $0x1,%eax
mov    %eax,0xf4(%r15)
mov    %rcx,%r15
mov    $0x1,%eax
leaveq 
retq   
lea    0x80(%r15),%rax
lea    0x2512d(%rip),%rsi        # 7548d <module.29+0x1e>
mov    $0x70,%edx
mov    %rcx,-0x10(%rbp)
mov    %r14,-0x8(%rbp)
mov    %rdi,%r14
mov    %rax,%rdi
callq  8a20 <inflateInit_@plt>
test   %eax,%eax
jne    50386 <ZIPSetupDecode+0xd6>
mov    -0x8(%rbp),%r14
mov    -0x10(%rbp),%rcx
jmp    50337 <ZIPSetupDecode+0x87>
mov    0x3b8(%r14),%rdi
mov    0xb0(%r15),%rcx
test   %rcx,%rcx
jne    503a0 <ZIPSetupDecode+0xf0>
lea    0x25036(%rip),%rcx        # 753d6 <module.16+0x79>
lea    0x250c8(%rip),%rsi        # 7546f <module.29>
lea    0x250e6(%rip),%rdx        # 75494 <module.29+0x25>
xor    %r14d,%r14d
mov    %r14,%rax
callq  8a00 <TIFFErrorExt@plt>
mov    %r14,%rax
mov    -0x8(%rbp),%r14
mov    -0x10(%rbp),%r15
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)

00000000000503d0 <ZIPPreDecode>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    0x350(%rdi),%rax
test   %rax,%rax
jne    50403 <ZIPPreDecode+0x33>
lea    0x24f7c(%rip),%rdi        # 75367 <module.16+0xa>
lea    0x24f0d(%rip),%rsi        # 752ff <module.8+0x55>
mov    $0x85,%edx
lea    0x250a6(%rip),%rcx        # 754a4 <module.33+0xd>
callq  8490 <__assert_fail@plt>
movslq 0xf4(%rax),%rcx
and    $0x1,%ecx
test   %ecx,%ecx
jne    5043a <ZIPPreDecode+0x6a>
mov    %rdi,%rcx
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rdi,%r14
mov    %rcx,%rdi
mov    %rax,%r15
callq  *0x2c8(%r14)
mov    %r15,%rax
mov    %r14,%rdi
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
mov    0x368(%rdi),%rcx
mov    %rcx,0x80(%rax)
mov    0x390(%rdi),%edx
mov    %edx,0x88(%rax)
mov    0x390(%rdi),%rcx
cmp    %rdx,%rcx
jne    50477 <ZIPPreDecode+0xa7>
lea    0x80(%rax),%rdi
callq  8bd0 <inflateReset@plt>
test   %eax,%eax
jne    50497 <ZIPPreDecode+0xc7>
mov    $0x1,%eax
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
lea    0x25010(%rip),%rsi        # 75497 <module.33>
lea    0x24f0e(%rip),%rdx        # 7539c <module.16+0x3f>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
xor    %eax,%eax
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

00000000000504a0 <ZIPSetupEncode>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    0x350(%rdi),%rdx
test   %rdx,%rdx
jne    504d3 <ZIPSetupEncode+0x33>
lea    0x24eac(%rip),%rdi        # 75367 <module.16+0xa>
lea    0x24e3d(%rip),%rsi        # 752ff <module.8+0x55>
mov    $0xd5,%edx
lea    0x24ff2(%rip),%rcx        # 754c0 <module.35+0xf>
callq  8490 <__assert_fail@plt>
lea    0x80(%rdx),%rcx
movslq 0xf4(%rdx),%rax
and    $0x1,%eax
test   %eax,%eax
jg     504f9 <ZIPSetupEncode+0x59>
mov    %r15,%rax
mov    %rdi,%r15
mov    %rcx,%rdi
mov    %r14,%r8
mov    %rdx,%r14
jmp    50533 <ZIPSetupEncode+0x93>
mov    %rcx,%rax
mov    %r13,-0x8(%rbp)
mov    %r14,-0x10(%rbp)
mov    %r15,-0x18(%rbp)
mov    %rcx,%r13
mov    %rdx,%r14
mov    %rdi,%r15
mov    %rax,%rdi
callq  8780 <inflateEnd@plt>
movl   $0x0,0xf4(%r14)
mov    %r13,%rdi
mov    -0x18(%rbp),%rax
mov    -0x10(%rbp),%r8
mov    -0x8(%rbp),%r13
movslq 0xf0(%r14),%rsi
lea    0x24f4c(%rip),%rdx        # 7548d <module.29+0x1e>
mov    $0x70,%ecx
mov    %r8,-0x10(%rbp)
mov    %rax,-0x18(%rbp)
callq  8690 <deflateInit_@plt>
test   %eax,%eax
jne    50577 <ZIPSetupEncode+0xd7>
movslq 0xf4(%r14),%rax
or     $0x2,%eax
mov    %eax,0xf4(%r14)
mov    $0x1,%eax
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
leaveq 
retq   
mov    0x3b8(%r15),%rdi
mov    0xb0(%r14),%rcx
test   %rcx,%rcx
jne    50591 <ZIPSetupEncode+0xf1>
lea    0x24e45(%rip),%rcx        # 753d6 <module.16+0x79>
lea    0x24f19(%rip),%rsi        # 754b1 <module.35>
lea    0x24ef5(%rip),%rdx        # 75494 <module.29+0x25>
xor    %r14d,%r14d
mov    %r14,%rax
callq  8a00 <TIFFErrorExt@plt>
mov    %r14,%rax
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

00000000000505c0 <ZIPPreEncode>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    0x350(%rdi),%rax
test   %rax,%rax
jne    505f3 <ZIPPreEncode+0x33>
lea    0x24d8c(%rip),%rdi        # 75367 <module.16+0xa>
lea    0x24d1d(%rip),%rsi        # 752ff <module.8+0x55>
mov    $0xee,%edx
lea    0x24eee(%rip),%rcx        # 754dc <module.37+0xd>
callq  8490 <__assert_fail@plt>
movslq 0xf4(%rax),%rcx
cmp    $0x2,%ecx
je     50628 <ZIPPreEncode+0x68>
mov    %rdi,%rcx
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rdi,%r14
mov    %rcx,%rdi
mov    %rax,%r15
callq  *0x2d8(%r14)
mov    %r15,%rax
mov    %r14,%rdi
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
mov    0x368(%rdi),%rcx
mov    %rcx,0x98(%rax)
mov    0x370(%rdi),%edx
mov    %edx,0xa0(%rax)
mov    0x370(%rdi),%rcx
cmp    %rdx,%rcx
jne    50665 <ZIPPreEncode+0xa5>
lea    0x80(%rax),%rdi
callq  8460 <deflateReset@plt>
test   %eax,%eax
jne    50685 <ZIPPreEncode+0xc5>
mov    $0x1,%eax
leaveq 
retq   
xor    %eax,%eax
mov    0x3b8(%rdi),%rdi
lea    0x24e5a(%rip),%rsi        # 754cf <module.37>
lea    0x24d20(%rip),%rdx        # 7539c <module.16+0x3f>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
leaveq 
retq   
xor    %eax,%eax
leaveq 
retq   
nopl   0x0(%rax)

0000000000050690 <ZIPPostEncode>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    0x350(%rdi),%r12
movl   $0x0,0x88(%r12)
lea    0x80(%r12),%r13
mov    %rdi,%rbx
mov    $0x4,%r14d
mov    %r13,%rdi
mov    %r14,%rsi
callq  84e0 <deflate@plt>
test   %eax,%eax
je     506e4 <ZIPPostEncode+0x54>
cmp    $0x1,%eax
jne    5074d <ZIPPostEncode+0xbd>
mov    0x370(%rbx),%rcx
mov    0xa0(%r12),%edx
cmp    %rdx,%rcx
je     5072d <ZIPPostEncode+0x9d>
sub    %rdx,%rcx
mov    %rcx,0x390(%rbx)
mov    %rax,%r15
mov    %rbx,%rdi
callq  86e0 <TIFFFlushData1@plt>
mov    0x368(%rbx),%rax
mov    %rax,0x98(%r12)
mov    0x370(%rbx),%eax
mov    %eax,0xa0(%r12)
mov    %r15,%rax
cmp    $0x1,%eax
jne    506d0 <ZIPPostEncode+0x40>
mov    $0x1,%eax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
mov    0x3b8(%rbx),%rdi
mov    0xb0(%r12),%rcx
test   %rcx,%rcx
jne    50768 <ZIPPostEncode+0xd8>
lea    0x24c6e(%rip),%rcx        # 753d6 <module.16+0x79>
lea    0x24d7a(%rip),%rsi        # 754e9 <module.39>
lea    0x24cb8(%rip),%rdx        # 7542e <module.23+0x57>
xor    %ebx,%ebx
mov    %rbx,%rax
callq  8a00 <TIFFErrorExt@plt>
mov    %rbx,%rax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
nopl   0x0(%rax)

00000000000507a0 <ZIPCleanup>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    0x350(%rdi),%rax
test   %rax,%rax
jne    507d3 <ZIPCleanup+0x33>
lea    0x24d3c(%rip),%rdi        # 754f7 <module.39+0xe>
lea    0x24b3d(%rip),%rsi        # 752ff <module.8+0x55>
mov    $0x150,%edx
lea    0x24d31(%rip),%rcx        # 754ff <module.39+0x16>
callq  8490 <__assert_fail@plt>
mov    %rdi,%rcx
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rdi,%r14
mov    %rcx,%rdi
mov    %rax,%r15
callq  8180 <TIFFPredictorCleanup@plt>
mov    0xf8(%r15),%rax
mov    %rax,0x410(%r14)
mov    0x100(%r15),%rax
mov    %rax,0x408(%r14)
movslq 0xf4(%r15),%rax
mov    %rax,%rcx
and    $0x2,%ecx
test   %ecx,%ecx
jg     50839 <ZIPCleanup+0x99>
and    $0x1,%eax
test   %eax,%eax
jle    50850 <ZIPCleanup+0xb0>
lea    0x80(%r15),%rdi
callq  8780 <inflateEnd@plt>
movl   $0x0,0xf4(%r15)
jmp    50850 <ZIPCleanup+0xb0>
lea    0x80(%r15),%rdi
callq  8960 <deflateEnd@plt>
movl   $0x0,0xf4(%r15)
mov    %r15,%rdi
callq  8bb0 <_TIFFfree@plt>
mov    %r14,%rdi
movq   $0x0,0x350(%rdi)
callq  8740 <_TIFFSetDefaultCompressionState@plt>
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)

0000000000050880 <ZIPVSetField>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    0x350(%rdi),%r8
cmp    $0x10015,%esi
jne    508b0 <ZIPVSetField+0x30>
movslq (%rdx),%rax
cmp    $0x2f,%eax
jle    508b9 <ZIPVSetField+0x39>
mov    0x8(%rdx),%rcx
lea    0x8(%rcx),%rax
mov    %rax,0x8(%rdx)
movslq (%rcx),%rsi
jmp    508c6 <ZIPVSetField+0x46>
callq  *0x100(%r8)
leaveq 
retq   
mov    0x10(%rdx),%rcx
movslq (%rcx,%rax,1),%rsi
add    $0x8,%eax
mov    %eax,(%rdx)
mov    %esi,0xf0(%r8)
mov    $0x1,%eax
movslq 0xf4(%r8),%rcx
and    $0x2,%ecx
test   %ecx,%ecx
jg     508e2 <ZIPVSetField+0x62>
leaveq 
retq   
lea    0x80(%r8),%rax
xor    %edx,%edx
mov    %r15,-0x10(%rbp)
mov    %r8,-0x8(%rbp)
mov    %rdi,%r15
mov    %rax,%rdi
callq  8620 <deflateParams@plt>
test   %eax,%eax
jne    5090d <ZIPVSetField+0x8d>
mov    $0x1,%eax
mov    -0x10(%rbp),%r15
leaveq 
retq   
mov    0x3b8(%r15),%rdi
mov    -0x8(%rbp),%rax
mov    0xb0(%rax),%rcx
test   %rcx,%rcx
jne    5092b <ZIPVSetField+0xab>
lea    0x24aab(%rip),%rcx        # 753d6 <module.16+0x79>
xor    %eax,%eax
lea    0x24bd6(%rip),%rsi        # 7550a <module.42>
lea    0x24af3(%rip),%rdx        # 7542e <module.23+0x57>
callq  8a00 <TIFFErrorExt@plt>
xor    %eax,%eax
mov    -0x10(%rbp),%r15
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

0000000000050950 <ZIPVGetField>:
push   %rbp
mov    %rsp,%rbp
mov    0x350(%rdi),%rax
cmp    $0x10015,%esi
jne    5097c <ZIPVGetField+0x2c>
movslq (%rdx),%rsi
cmp    $0x2f,%esi
jle    50984 <ZIPVGetField+0x34>
mov    0x8(%rdx),%rsi
lea    0x8(%rsi),%rcx
mov    %rcx,0x8(%rdx)
mov    (%rsi),%rcx
jmp    50991 <ZIPVGetField+0x41>
callq  *0xf8(%rax)
leaveq 
retq   
mov    0x10(%rdx),%rcx
mov    (%rcx,%rsi,1),%rcx
add    $0x8,%esi
mov    %esi,(%rdx)
movslq 0xf0(%rax),%rax
mov    %eax,(%rcx)
mov    $0x1,%eax
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)
nopl   0x0(%rax,%rax,1)

00000000000509b0 <_TIFFmalloc>:
push   %rbp
mov    %rsp,%rbp
test   %rdi,%rdi
jne    509bd <_TIFFmalloc+0xd>
xor    %eax,%eax
leaveq 
retq   
callq  88a0 <malloc@plt>
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nop

00000000000509d0 <_TIFFcalloc>:
push   %rbp
mov    %rsp,%rbp
xor    %eax,%eax
test   %rdi,%rdi
jne    509dd <_TIFFcalloc+0xd>
leaveq 
retq   
test   %rsi,%rsi
jne    509e4 <_TIFFcalloc+0x14>
leaveq 
retq   
callq  8650 <calloc@plt>
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

00000000000509f0 <_TIFFrealloc>:
push   %rbp
mov    %rsp,%rbp
callq  89b0 <realloc@plt>
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

0000000000050a00 <_TIFFmemset>:
push   %rbp
mov    %rsp,%rbp
callq  8550 <memset@plt>
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

0000000000050a10 <_TIFFmemcpy>:
push   %rbp
mov    %rsp,%rbp
callq  8720 <memcpy@plt>
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

0000000000050a20 <_TIFFmemcmp>:
push   %rbp
mov    %rsp,%rbp
callq  8610 <memcmp@plt>
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

0000000000050a30 <_TIFFfree>:
push   %rbp
mov    %rsp,%rbp
callq  8080 <free@plt>
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

0000000000050a40 <TIFFOpen>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %rdi,-0x10(%rbp)
mov    %rsi,%rdi
mov    %rdi,-0x8(%rbp)
lea    0x24abd(%rip),%rsi        # 75517 <module.8>
callq  8950 <_TIFFgetMode@plt>
cmp    $0xffffffff,%eax
jne    50a68 <TIFFOpen+0x28>
xor    %eax,%eax
leaveq 
retq   
xor    %esi,%esi
mov    $0x1b6,%edx
mov    -0x10(%rbp),%rcx
mov    %rcx,%rdi
mov    %r15,-0x10(%rbp)
mov    %rcx,%r15
mov    %rsi,%rcx
mov    %rax,%rsi
mov    %rcx,%rax
callq  8b00 <open@plt>
test   %eax,%eax
js     50aac <TIFFOpen+0x6c>
mov    %r15,%rsi
mov    %rax,%r15
mov    %r15,%rdi
mov    -0x8(%rbp),%rdx
callq  8150 <TIFFFdOpen@plt>
test   %rax,%rax
je     50adf <TIFFOpen+0x9f>
mov    -0x10(%rbp),%r15
leaveq 
retq   
callq  80e0 <__errno_location@plt>
movslq (%rax),%rdi
test   %edi,%edi
jg     50aef <TIFFOpen+0xaf>
mov    %r15,%rcx
xor    %eax,%eax
lea    0x24a63(%rip),%rdx        # 75527 <module.8+0x10>
xor    %r15d,%r15d
mov    %r15,%rdi
lea    0x24a46(%rip),%rsi        # 75517 <module.8>
callq  8a00 <TIFFErrorExt@plt>
mov    %r15,%rax
mov    -0x10(%rbp),%r15
leaveq 
retq   
mov    %r15,%rdi
callq  8580 <close@plt>
mov    -0x10(%rbp),%r15
xor    %eax,%eax
leaveq 
retq   
mov    %r14,-0x8(%rbp)
mov    %rax,%r14
callq  8ca0 <strerror@plt>
test   %rax,%rax
jne    50b06 <TIFFOpen+0xc6>
mov    -0x8(%rbp),%r14
jmp    50ab8 <TIFFOpen+0x78>
movslq (%r14),%rdi
callq  8ca0 <strerror@plt>
mov    %r15,%rcx
mov    %rax,%r8
xor    %eax,%eax
lea    0x24a03(%rip),%rdx        # 75520 <module.8+0x9>
xor    %r14d,%r14d
mov    %r14,%rdi
lea    0x249ed(%rip),%rsi        # 75517 <module.8>
callq  8a00 <TIFFErrorExt@plt>
mov    %r14,%rax
mov    -0x8(%rbp),%r14
mov    -0x10(%rbp),%r15
leaveq 
retq   
nopl   0x0(%rax)

0000000000050b40 <TIFFFdOpen>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    %r15,-0x8(%rbp)
mov    %edi,-0x10(%rbp)
lea    0x1ea(%rip),%r9        # 50d40 <_tiffCloseProc>
lea    0x1f3(%rip),%r8        # 50d50 <_tiffSizeProc>
lea    0x21c(%rip),%rcx        # 50d80 <_tiffMapProc>
lea    0x285(%rip),%rax        # 50df0 <_tiffUnmapProc>
mov    -0x10(%rbp),%r10
mov    %r9,(%rsp)
mov    %r8,0x8(%rsp)
mov    %rcx,0x10(%rsp)
mov    %rax,0x18(%rsp)
mov    %rdi,%r15
mov    %rsi,%rdi
mov    %rdx,%rsi
mov    %r10,%rdx
lea    0x3b(%rip),%rcx        # 50bd0 <_tiffReadProc>
lea    0xe4(%rip),%r8        # 50c80 <_tiffWriteProc>
lea    0x18d(%rip),%r9        # 50d30 <_tiffSeekProc>
callq  8a80 <TIFFClientOpen@plt>
add    $0x20,%rsp
test   %rax,%rax
jne    50bb7 <TIFFFdOpen+0x77>
mov    -0x8(%rbp),%r15
leaveq 
retq   
mov    %r15d,0x8(%rax)
mov    -0x8(%rbp),%r15
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   0x0(%rax)

0000000000050bd0 <_tiffReadProc>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    %r12,-0x8(%rbp)
mov    %r13,-0x10(%rbp)
mov    %r14,-0x18(%rbp)
mov    %r15,-0x20(%rbp)
mov    %rdi,-0x30(%rbp)
mov    $0xffffffffffffffff,%rax
mov    %rax,-0x28(%rbp)
mov    %rdx,%r13
mov    %rsi,%r15
xor    %r12d,%r12d
mov    $0x7fffffff,%r14d
jmp    50c3a <_tiffReadProc+0x6a>
mov    %r13,%rdx
sub    %r12,%rdx
cmp    $0x7fffffff,%rdx
jbe    50c1a <_tiffReadProc+0x4a>
mov    %r14,%rdx
lea    (%r12,%r15,1),%rsi
movslq -0x30(%rbp),%rdi
callq  8600 <read@plt>
mov    %rax,-0x28(%rbp)
test   %rax,%rax
jle    50c5a <_tiffReadProc+0x8a>
add    %rax,%r12
mov    $0xffffffffffffffff,%rax
cmp    %r13,%r12
jb     50c08 <_tiffReadProc+0x38>
mov    -0x28(%rbp),%r13
test   %r13,%r13
jns    50c66 <_tiffReadProc+0x96>
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
leaveq 
retq   
mov    %rax,%r13
mov    $0xffffffffffffffff,%rax
jmp    50c43 <_tiffReadProc+0x73>
mov    %r12,%rax
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

0000000000050c80 <_tiffWriteProc>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    %r12,-0x8(%rbp)
mov    %r13,-0x10(%rbp)
mov    %r14,-0x18(%rbp)
mov    %r15,-0x20(%rbp)
mov    %rdi,-0x30(%rbp)
mov    $0xffffffffffffffff,%rax
mov    %rax,-0x28(%rbp)
mov    %rdx,%r13
mov    %rsi,%r15
xor    %r12d,%r12d
mov    $0x7fffffff,%r14d
jmp    50cea <_tiffWriteProc+0x6a>
mov    %r13,%rdx
sub    %r12,%rdx
cmp    $0x7fffffff,%rdx
jbe    50cca <_tiffWriteProc+0x4a>
mov    %r14,%rdx
lea    (%r12,%r15,1),%rsi
movslq -0x30(%rbp),%rdi
callq  8240 <write@plt>
mov    %rax,-0x28(%rbp)
test   %rax,%rax
jle    50d0a <_tiffWriteProc+0x8a>
add    %rax,%r12
mov    $0xffffffffffffffff,%rax
cmp    %r13,%r12
jb     50cb8 <_tiffWriteProc+0x38>
mov    -0x28(%rbp),%r13
test   %r13,%r13
jns    50d16 <_tiffWriteProc+0x96>
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
leaveq 
retq   
mov    %rax,%r13
mov    $0xffffffffffffffff,%rax
jmp    50cf3 <_tiffWriteProc+0x73>
mov    %r12,%rax
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

0000000000050d30 <_tiffSeekProc>:
push   %rbp
mov    %rsp,%rbp
callq  8470 <lseek@plt>
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

0000000000050d40 <_tiffCloseProc>:
push   %rbp
mov    %rsp,%rbp
callq  8580 <close@plt>
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

0000000000050d50 <_tiffSizeProc>:
push   %rbp
mov    %rsp,%rbp
sub    $0x90,%rsp
lea    -0x90(%rbp),%rsi
callq  50f10 <__fstat>
test   %eax,%eax
jns    50d6f <_tiffSizeProc+0x1f>
xor    %eax,%eax
leaveq 
retq   
mov    -0x60(%rbp),%rax
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)

0000000000050d80 <_tiffMapProc>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %r13,-0x8(%rbp)
mov    %r14,-0x10(%rbp)
mov    %r15,-0x18(%rbp)
mov    %rdx,%r13
mov    %rsi,%r14
mov    %rdi,%r15
callq  50d50 <_tiffSizeProc>
mov    %r15,%r8
mov    %rax,%r15
xor    %edi,%edi
mov    $0x1,%edx
mov    %rdi,%r9
mov    %rdx,%rcx
mov    %r15,%rsi
callq  83c0 <mmap@plt>
mov    %rax,(%r14)
cmp    $0xffffffffffffffff,%rax
jne    50dd6 <_tiffMapProc+0x56>
xor    %eax,%eax
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
leaveq 
retq   
mov    %r15,0x0(%r13)
mov    $0x1,%eax
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
leaveq 
retq   
nopl   (%rax)

0000000000050df0 <_tiffUnmapProc>:
push   %rbp
mov    %rsp,%rbp
mov    %rsi,%rdi
mov    %rdx,%rsi
callq  89e0 <munmap@plt>
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   0x0(%rax)

0000000000050e10 <unixWarningHandler>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %r13,-0x8(%rbp)
mov    %r14,-0x10(%rbp)
mov    %r15,-0x18(%rbp)
mov    0x291cd(%rip),%r13        # 79ff8 <stderr@GLIBC_2.2.5>
test   %rdi,%rdi
jne    50e38 <unixWarningHandler+0x28>
mov    %rsi,%r14
mov    %rdx,%r15
jmp    50e53 <unixWarningHandler+0x43>
mov    %rsi,%r14
mov    %rdx,%r15
mov    %rdi,%rdx
xor    %eax,%eax
mov    0x0(%r13),%rdi
lea    0x246e9(%rip),%rsi        # 75537 <module.8+0x20>
callq  86f0 <fprintf@plt>
xor    %eax,%eax
mov    0x0(%r13),%rdi
lea    0x246dc(%rip),%rsi        # 7553c <module.8+0x25>
callq  86f0 <fprintf@plt>
mov    %r15,%rdx
mov    %r14,%rsi
mov    0x0(%r13),%rdi
callq  8b50 <vfprintf@plt>
mov    0x0(%r13),%rdi
lea    0x246c7(%rip),%rsi        # 75546 <module.8+0x2f>
xor    %eax,%eax
callq  86f0 <fprintf@plt>
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nop

0000000000050ea0 <unixErrorHandler>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %r15,-0x18(%rbp)
mov    0x29145(%rip),%r15        # 79ff8 <stderr@GLIBC_2.2.5>
test   %rdi,%rdi
je     50eee <unixErrorHandler+0x4e>
xor    %eax,%eax
mov    (%r15),%rcx
lea    0x24673(%rip),%r8        # 75537 <module.8+0x20>
mov    %r13,-0x8(%rbp)
mov    %r14,-0x10(%rbp)
mov    %rdx,%r13
mov    %rdi,%rdx
mov    %rcx,%rdi
mov    %rsi,%r14
mov    %r8,%rsi
callq  86f0 <fprintf@plt>
mov    %r13,%rdx
mov    %r14,%rsi
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
mov    (%r15),%rdi
callq  8b50 <vfprintf@plt>
xor    %eax,%eax
mov    (%r15),%rdi
lea    0x24644(%rip),%rsi        # 75546 <module.8+0x2f>
callq  86f0 <fprintf@plt>
mov    -0x18(%rbp),%r15
leaveq 
retq   
nopl   (%rax)

0000000000050f10 <__fstat>:
endbr64 
mov    %rsi,%rdx
mov    %edi,%esi
mov    $0x1,%edi
jmpq   *0x2907c(%rip)        # 79fa0 <__fxstat@GLIBC_2.2.5>

Disassembly of section .fini:

0000000000050f24 <_fini>:
endbr64 
sub    $0x8,%rsp
add    $0x8,%rsp
retq   
