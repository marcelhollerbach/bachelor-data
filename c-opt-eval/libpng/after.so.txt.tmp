
libpng/after.so:     file format elf64-x86-64


Disassembly of section .init:

0000000000005000 <_init>:
endbr64 
sub    $0x8,%rsp
mov    0x2cfc9(%rip),%rax        # 31fd8 <__gmon_start__>
test   %rax,%rax
je     5016 <_init+0x16>
callq  *%rax
add    $0x8,%rsp
retq   

Disassembly of section .plt:

0000000000005020 <.plt>:
pushq  0x2cfe2(%rip)        # 32008 <_GLOBAL_OFFSET_TABLE_+0x8>
jmpq   *0x2cfe4(%rip)        # 32010 <_GLOBAL_OFFSET_TABLE_+0x10>
nopl   0x0(%rax)

0000000000005030 <png_get_y_offset_microns@plt>:
jmpq   *0x2cfe2(%rip)        # 32018 <png_get_y_offset_microns@@PNG16_0+0x266f8>
pushq  $0x0
jmpq   5020 <.plt>

0000000000005040 <png_image_free@plt>:
jmpq   *0x2cfda(%rip)        # 32020 <png_image_free@@PNG16_0+0x2b7c0>
pushq  $0x1
jmpq   5020 <.plt>

0000000000005050 <png_set_benign_errors@plt>:
jmpq   *0x2cfd2(%rip)        # 32028 <png_set_benign_errors@@PNG16_0+0x11128>
pushq  $0x2
jmpq   5020 <.plt>

0000000000005060 <png_chunk_error@plt>:
jmpq   *0x2cfca(%rip)        # 32030 <png_chunk_error@@PNG16_0+0x275a0>
pushq  $0x3
jmpq   5020 <.plt>

0000000000005070 <free@plt>:
jmpq   *0x2cfc2(%rip)        # 32038 <free@GLIBC_2.2.5>
pushq  $0x4
jmpq   5020 <.plt>

0000000000005080 <png_read_update_info@plt>:
jmpq   *0x2cfba(%rip)        # 32040 <png_read_update_info@@PNG16_0+0x231e0>
pushq  $0x5
jmpq   5020 <.plt>

0000000000005090 <abort@plt>:
jmpq   *0x2cfb2(%rip)        # 32048 <abort@GLIBC_2.2.5>
pushq  $0x6
jmpq   5020 <.plt>

00000000000050a0 <__errno_location@plt>:
jmpq   *0x2cfaa(%rip)        # 32050 <__errno_location@GLIBC_2.2.5>
pushq  $0x7
jmpq   5020 <.plt>

00000000000050b0 <remove@plt>:
jmpq   *0x2cfa2(%rip)        # 32058 <remove@GLIBC_2.2.5>
pushq  $0x8
jmpq   5020 <.plt>

00000000000050c0 <png_get_rowbytes@plt>:
jmpq   *0x2cf9a(%rip)        # 32060 <png_get_rowbytes@@PNG16_0+0x26ad0>
pushq  $0x9
jmpq   5020 <.plt>

00000000000050d0 <png_set_swap_alpha@plt>:
jmpq   *0x2cf92(%rip)        # 32068 <png_set_swap_alpha@@PNG16_0+0xeb28>
pushq  $0xa
jmpq   5020 <.plt>

00000000000050e0 <png_set_sRGB@plt>:
jmpq   *0x2cf8a(%rip)        # 32070 <png_set_sRGB@@PNG16_0+0x10350>
pushq  $0xb
jmpq   5020 <.plt>

00000000000050f0 <png_create_write_struct@plt>:
jmpq   *0x2cf82(%rip)        # 32078 <png_create_write_struct@@PNG16_0+0xe1e8>
pushq  $0xc
jmpq   5020 <.plt>

0000000000005100 <png_write_chunk_data@plt>:
jmpq   *0x2cf7a(%rip)        # 32080 <png_write_chunk_data@@PNG16_0+0xa9f0>
pushq  $0xd
jmpq   5020 <.plt>

0000000000005110 <png_set_bKGD@plt>:
jmpq   *0x2cf72(%rip)        # 32088 <png_set_bKGD@@PNG16_0+0x110d8>
pushq  $0xe
jmpq   5020 <.plt>

0000000000005120 <inflate@plt>:
jmpq   *0x2cf6a(%rip)        # 32090 <inflate>
pushq  $0xf
jmpq   5020 <.plt>

0000000000005130 <ferror@plt>:
jmpq   *0x2cf62(%rip)        # 32098 <ferror@GLIBC_2.2.5>
pushq  $0x10
jmpq   5020 <.plt>

0000000000005140 <png_write_sig@plt>:
jmpq   *0x2cf5a(%rip)        # 320a0 <png_write_sig@@PNG16_0+0xaae0>
pushq  $0x11
jmpq   5020 <.plt>

0000000000005150 <png_malloc_warn@plt>:
jmpq   *0x2cf52(%rip)        # 320a8 <png_malloc_warn@@PNG16_0+0x25828>
pushq  $0x12
jmpq   5020 <.plt>

0000000000005160 <fread@plt>:
jmpq   *0x2cf4a(%rip)        # 320b0 <fread@GLIBC_2.2.5>
pushq  $0x13
jmpq   5020 <.plt>

0000000000005170 <png_read_end@plt>:
jmpq   *0x2cf42(%rip)        # 320b8 <png_read_end@@PNG16_0+0x229d8>
pushq  $0x14
jmpq   5020 <.plt>

0000000000005180 <inflateReset2@plt>:
jmpq   *0x2cf3a(%rip)        # 320c0 <inflateReset2@ZLIB_1.2.3.4>
pushq  $0x15
jmpq   5020 <.plt>

0000000000005190 <png_set_hIST@plt>:
jmpq   *0x2cf32(%rip)        # 320c8 <png_set_hIST@@PNG16_0+0x10af8>
pushq  $0x16
jmpq   5020 <.plt>

00000000000051a0 <atof@plt>:
jmpq   *0x2cf2a(%rip)        # 320d0 <atof@GLIBC_2.2.5>
pushq  $0x17
jmpq   5020 <.plt>

00000000000051b0 <png_set_pCAL@plt>:
jmpq   *0x2cf22(%rip)        # 320d8 <png_set_pCAL@@PNG16_0+0x108e8>
pushq  $0x18
jmpq   5020 <.plt>

00000000000051c0 <crc32@plt>:
jmpq   *0x2cf1a(%rip)        # 320e0 <crc32>
pushq  $0x19
jmpq   5020 <.plt>

00000000000051d0 <png_set_sBIT@plt>:
jmpq   *0x2cf12(%rip)        # 320e8 <png_set_sBIT@@PNG16_0+0x10408>
pushq  $0x1a
jmpq   5020 <.plt>

00000000000051e0 <png_set_swap@plt>:
jmpq   *0x2cf0a(%rip)        # 320f0 <png_set_swap@@PNG16_0+0xea70>
pushq  $0x1b
jmpq   5020 <.plt>

00000000000051f0 <png_convert_from_struct_tm@plt>:
jmpq   *0x2cf02(%rip)        # 320f8 <png_convert_from_struct_tm@@PNG16_0+0xdb78>
pushq  $0x1c
jmpq   5020 <.plt>

0000000000005200 <png_set_filler@plt>:
jmpq   *0x2cefa(%rip)        # 32100 <png_set_filler@@PNG16_0+0xeb80>
pushq  $0x1d
jmpq   5020 <.plt>

0000000000005210 <png_get_x_pixels_per_meter@plt>:
jmpq   *0x2cef2(%rip)        # 32108 <png_get_x_pixels_per_meter@@PNG16_0+0x269e8>
pushq  $0x1e
jmpq   5020 <.plt>

0000000000005220 <inflateValidate@plt>:
jmpq   *0x2ceea(%rip)        # 32110 <inflateValidate@ZLIB_1.2.9>
pushq  $0x1f
jmpq   5020 <.plt>

0000000000005230 <png_chunk_benign_error@plt>:
jmpq   *0x2cee2(%rip)        # 32118 <png_chunk_benign_error@@PNG16_0+0x27538>
pushq  $0x20
jmpq   5020 <.plt>

0000000000005240 <fclose@plt>:
jmpq   *0x2ceda(%rip)        # 32120 <fclose@GLIBC_2.2.5>
pushq  $0x21
jmpq   5020 <.plt>

0000000000005250 <png_set_cHRM_fixed@plt>:
jmpq   *0x2ced2(%rip)        # 32128 <png_set_cHRM_fixed@@PNG16_0+0x10e48>
pushq  $0x22
jmpq   5020 <.plt>

0000000000005260 <strlen@plt>:
jmpq   *0x2ceca(%rip)        # 32130 <strlen@GLIBC_2.2.5>
pushq  $0x23
jmpq   5020 <.plt>

0000000000005270 <png_set_shift@plt>:
jmpq   *0x2cec2(%rip)        # 32138 <png_set_shift@@PNG16_0+0xea28>
pushq  $0x24
jmpq   5020 <.plt>

0000000000005280 <png_create_info_struct@plt>:
jmpq   *0x2ceba(%rip)        # 32140 <png_create_info_struct@@PNG16_0+0x2c6b0>
pushq  $0x25
jmpq   5020 <.plt>

0000000000005290 <png_set_gAMA_fixed@plt>:
jmpq   *0x2ceb2(%rip)        # 32148 <png_set_gAMA_fixed@@PNG16_0+0x10bc8>
pushq  $0x26
jmpq   5020 <.plt>

00000000000052a0 <png_set_sPLT@plt>:
jmpq   *0x2ceaa(%rip)        # 32150 <png_set_sPLT@@PNG16_0+0x10170>
pushq  $0x27
jmpq   5020 <.plt>

00000000000052b0 <png_read_image@plt>:
jmpq   *0x2cea2(%rip)        # 32158 <png_read_image@@PNG16_0+0x22bf8>
pushq  $0x28
jmpq   5020 <.plt>

00000000000052c0 <png_set_gamma_fixed@plt>:
jmpq   *0x2ce9a(%rip)        # 32160 <png_set_gamma_fixed@@PNG16_0+0x1c620>
pushq  $0x29
jmpq   5020 <.plt>

00000000000052d0 <modf@plt>:
jmpq   *0x2ce92(%rip)        # 32168 <modf@GLIBC_2.2.5>
pushq  $0x2a
jmpq   5020 <.plt>

00000000000052e0 <deflateReset@plt>:
jmpq   *0x2ce8a(%rip)        # 32170 <deflateReset>
pushq  $0x2b
jmpq   5020 <.plt>

00000000000052f0 <png_get_x_offset_microns@plt>:
jmpq   *0x2ce82(%rip)        # 32178 <png_get_x_offset_microns@@PNG16_0+0x26898>
pushq  $0x2c
jmpq   5020 <.plt>

0000000000005300 <png_set_write_fn@plt>:
jmpq   *0x2ce7a(%rip)        # 32180 <png_set_write_fn@@PNG16_0+0xe430>
pushq  $0x2d
jmpq   5020 <.plt>

0000000000005310 <png_handle_as_unknown@plt>:
jmpq   *0x2ce72(%rip)        # 32188 <png_handle_as_unknown@@PNG16_0+0x2ba28>
pushq  $0x2e
jmpq   5020 <.plt>

0000000000005320 <png_set_background_fixed@plt>:
jmpq   *0x2ce6a(%rip)        # 32190 <png_set_background_fixed@@PNG16_0+0x1d2c0>
pushq  $0x2f
jmpq   5020 <.plt>

0000000000005330 <deflate@plt>:
jmpq   *0x2ce62(%rip)        # 32198 <deflate>
pushq  $0x30
jmpq   5020 <.plt>

0000000000005340 <png_write_info@plt>:
jmpq   *0x2ce5a(%rip)        # 321a0 <png_write_info@@PNG16_0+0xe010>
pushq  $0x31
jmpq   5020 <.plt>

0000000000005350 <memset@plt>:
jmpq   *0x2ce52(%rip)        # 321a8 <memset@GLIBC_2.2.5>
pushq  $0x32
jmpq   5020 <.plt>

0000000000005360 <pow@plt>:
jmpq   *0x2ce4a(%rip)        # 321b0 <pow@GLIBC_2.2.5>
pushq  $0x33
jmpq   5020 <.plt>

0000000000005370 <png_start_read_image@plt>:
jmpq   *0x2ce42(%rip)        # 321b8 <png_start_read_image@@PNG16_0+0x23388>
pushq  $0x34
jmpq   5020 <.plt>

0000000000005380 <png_write_row@plt>:
jmpq   *0x2ce3a(%rip)        # 321c0 <png_write_row@@PNG16_0+0xdb50>
pushq  $0x35
jmpq   5020 <.plt>

0000000000005390 <png_warning@plt>:
jmpq   *0x2ce32(%rip)        # 321c8 <png_warning@@PNG16_0+0x276f8>
pushq  $0x36
jmpq   5020 <.plt>

00000000000053a0 <png_get_y_pixels_per_meter@plt>:
jmpq   *0x2ce2a(%rip)        # 321d0 <png_get_y_pixels_per_meter@@PNG16_0+0x26a70>
pushq  $0x37
jmpq   5020 <.plt>

00000000000053b0 <deflateInit2_@plt>:
jmpq   *0x2ce22(%rip)        # 321d8 <deflateInit2_>
pushq  $0x38
jmpq   5020 <.plt>

00000000000053c0 <png_write_end@plt>:
jmpq   *0x2ce1a(%rip)        # 321e0 <png_write_end@@PNG16_0+0xd6f0>
pushq  $0x39
jmpq   5020 <.plt>

00000000000053d0 <memcmp@plt>:
jmpq   *0x2ce12(%rip)        # 321e8 <memcmp@GLIBC_2.2.5>
pushq  $0x3a
jmpq   5020 <.plt>

00000000000053e0 <png_set_filter@plt>:
jmpq   *0x2ce0a(%rip)        # 321f0 <png_set_filter@@PNG16_0+0xd430>
pushq  $0x3b
jmpq   5020 <.plt>

00000000000053f0 <png_set_interlace_handling@plt>:
jmpq   *0x2ce02(%rip)        # 321f8 <png_set_interlace_handling@@PNG16_0+0xeab8>
pushq  $0x3c
jmpq   5020 <.plt>

0000000000005400 <png_write_chunk@plt>:
jmpq   *0x2cdfa(%rip)        # 32200 <png_write_chunk@@PNG16_0+0xabd0>
pushq  $0x3d
jmpq   5020 <.plt>

0000000000005410 <frexp@plt>:
jmpq   *0x2cdf2(%rip)        # 32208 <frexp@GLIBC_2.2.5>
pushq  $0x3e
jmpq   5020 <.plt>

0000000000005420 <_setjmp@plt>:
jmpq   *0x2cdea(%rip)        # 32210 <_setjmp@GLIBC_2.2.5>
pushq  $0x3f
jmpq   5020 <.plt>

0000000000005430 <png_set_eXIf_1@plt>:
jmpq   *0x2cde2(%rip)        # 32218 <png_set_eXIf_1@@PNG16_0+0x10de8>
pushq  $0x40
jmpq   5020 <.plt>

0000000000005440 <png_set_expand_gray_1_2_4_to_8@plt>:
jmpq   *0x2cdda(%rip)        # 32220 <png_set_expand_gray_1_2_4_to_8@@PNG16_0+0x1d990>
pushq  $0x41
jmpq   5020 <.plt>

0000000000005450 <png_write_info_before_PLTE@plt>:
jmpq   *0x2cdd2(%rip)        # 32228 <png_write_info_before_PLTE@@PNG16_0+0xe2b8>
pushq  $0x42
jmpq   5020 <.plt>

0000000000005460 <png_set_IHDR@plt>:
jmpq   *0x2cdca(%rip)        # 32230 <png_set_IHDR@@PNG16_0+0x10b80>
pushq  $0x43
jmpq   5020 <.plt>

0000000000005470 <png_error@plt>:
jmpq   *0x2cdc2(%rip)        # 32238 <png_error@@PNG16_0+0x277d8>
pushq  $0x44
jmpq   5020 <.plt>

0000000000005480 <png_write_chunk_end@plt>:
jmpq   *0x2cdba(%rip)        # 32240 <png_write_chunk_end@@PNG16_0+0xab40>
pushq  $0x45
jmpq   5020 <.plt>

0000000000005490 <fprintf@plt>:
jmpq   *0x2cdb2(%rip)        # 32248 <fprintf@GLIBC_2.2.5>
pushq  $0x46
jmpq   5020 <.plt>

00000000000054a0 <png_create_read_struct_2@plt>:
jmpq   *0x2cdaa(%rip)        # 32250 <png_create_read_struct_2@@PNG16_0+0x238d0>
pushq  $0x47
jmpq   5020 <.plt>

00000000000054b0 <png_destroy_read_struct@plt>:
jmpq   *0x2cda2(%rip)        # 32258 <png_destroy_read_struct@@PNG16_0+0x226c8>
pushq  $0x48
jmpq   5020 <.plt>

00000000000054c0 <memcpy@plt>:
jmpq   *0x2cd9a(%rip)        # 32260 <memcpy@GLIBC_2.14>
pushq  $0x49
jmpq   5020 <.plt>

00000000000054d0 <png_set_mem_fn@plt>:
jmpq   *0x2cd92(%rip)        # 32268 <png_set_mem_fn@@PNG16_0+0x25ab8>
pushq  $0x4a
jmpq   5020 <.plt>

00000000000054e0 <png_set_tIME@plt>:
jmpq   *0x2cd8a(%rip)        # 32270 <png_set_tIME@@PNG16_0+0x10040>
pushq  $0x4b
jmpq   5020 <.plt>

00000000000054f0 <png_set_tRNS@plt>:
jmpq   *0x2cd82(%rip)        # 32278 <png_set_tRNS@@PNG16_0+0xffc8>
pushq  $0x4c
jmpq   5020 <.plt>

0000000000005500 <png_save_uint_32@plt>:
jmpq   *0x2cd7a(%rip)        # 32280 <png_save_uint_32@@PNG16_0+0xab30>
pushq  $0x4d
jmpq   5020 <.plt>

0000000000005510 <inflateEnd@plt>:
jmpq   *0x2cd72(%rip)        # 32288 <inflateEnd>
pushq  $0x4e
jmpq   5020 <.plt>

0000000000005520 <png_save_int_32@plt>:
jmpq   *0x2cd6a(%rip)        # 32290 <png_save_int_32@@PNG16_0+0x2ba40>
pushq  $0x4f
jmpq   5020 <.plt>

0000000000005530 <png_set_PLTE@plt>:
jmpq   *0x2cd62(%rip)        # 32298 <png_set_PLTE@@PNG16_0+0x10708>
pushq  $0x50
jmpq   5020 <.plt>

0000000000005540 <png_get_channels@plt>:
jmpq   *0x2cd5a(%rip)        # 322a0 <png_get_channels@@PNG16_0+0x26cd0>
pushq  $0x51
jmpq   5020 <.plt>

0000000000005550 <adler32@plt>:
jmpq   *0x2cd52(%rip)        # 322a8 <adler32>
pushq  $0x52
jmpq   5020 <.plt>

0000000000005560 <png_set_read_fn@plt>:
jmpq   *0x2cd4a(%rip)        # 322b0 <png_set_read_fn@@PNG16_0+0x1db60>
pushq  $0x53
jmpq   5020 <.plt>

0000000000005570 <png_write_image@plt>:
jmpq   *0x2cd42(%rip)        # 322b8 <png_write_image@@PNG16_0+0xd868>
pushq  $0x54
jmpq   5020 <.plt>

0000000000005580 <png_set_packing@plt>:
jmpq   *0x2cd3a(%rip)        # 322c0 <png_set_packing@@PNG16_0+0xec10>
pushq  $0x55
jmpq   5020 <.plt>

0000000000005590 <png_benign_error@plt>:
jmpq   *0x2cd32(%rip)        # 322c8 <png_benign_error@@PNG16_0+0x27748>
pushq  $0x56
jmpq   5020 <.plt>

00000000000055a0 <png_destroy_info_struct@plt>:
jmpq   *0x2cd2a(%rip)        # 322d0 <png_destroy_info_struct@@PNG16_0+0x2c490>
pushq  $0x57
jmpq   5020 <.plt>

00000000000055b0 <png_set_rgb_to_gray_fixed@plt>:
jmpq   *0x2cd22(%rip)        # 322d8 <png_set_rgb_to_gray_fixed@@PNG16_0+0x1d888>
pushq  $0x58
jmpq   5020 <.plt>

00000000000055c0 <malloc@plt>:
jmpq   *0x2cd1a(%rip)        # 322e0 <malloc@GLIBC_2.2.5>
pushq  $0x59
jmpq   5020 <.plt>

00000000000055d0 <fflush@plt>:
jmpq   *0x2cd12(%rip)        # 322e8 <fflush@GLIBC_2.2.5>
pushq  $0x5a
jmpq   5020 <.plt>

00000000000055e0 <png_set_oFFs@plt>:
jmpq   *0x2cd0a(%rip)        # 322f0 <png_set_oFFs@@PNG16_0+0x10b40>
pushq  $0x5b
jmpq   5020 <.plt>

00000000000055f0 <png_get_header_ver@plt>:
jmpq   *0x2cd02(%rip)        # 322f8 <png_get_header_ver@@PNG16_0+0x2bad8>
pushq  $0x5c
jmpq   5020 <.plt>

0000000000005600 <png_read_row@plt>:
jmpq   *0x2ccfa(%rip)        # 32300 <png_read_row@@PNG16_0+0x232f0>
pushq  $0x5d
jmpq   5020 <.plt>

0000000000005610 <png_set_pHYs@plt>:
jmpq   *0x2ccf2(%rip)        # 32308 <png_set_pHYs@@PNG16_0+0x107b8>
pushq  $0x5e
jmpq   5020 <.plt>

0000000000005620 <png_set_invert_alpha@plt>:
jmpq   *0x2ccea(%rip)        # 32310 <png_set_invert_alpha@@PNG16_0+0xedb0>
pushq  $0x5f
jmpq   5020 <.plt>

0000000000005630 <png_set_add_alpha@plt>:
jmpq   *0x2cce2(%rip)        # 32318 <png_set_add_alpha@@PNG16_0+0xece8>
pushq  $0x60
jmpq   5020 <.plt>

0000000000005640 <png_set_alpha_mode_fixed@plt>:
jmpq   *0x2ccda(%rip)        # 32320 <png_set_alpha_mode_fixed@@PNG16_0+0x1d710>
pushq  $0x61
jmpq   5020 <.plt>

0000000000005650 <png_set_compression_level@plt>:
jmpq   *0x2ccd2(%rip)        # 32328 <png_set_compression_level@@PNG16_0+0xd2e8>
pushq  $0x62
jmpq   5020 <.plt>

0000000000005660 <png_set_sCAL_s@plt>:
jmpq   *0x2ccca(%rip)        # 32330 <png_set_sCAL_s@@PNG16_0+0xfd40>
pushq  $0x63
jmpq   5020 <.plt>

0000000000005670 <deflateEnd@plt>:
jmpq   *0x2ccc2(%rip)        # 32338 <deflateEnd>
pushq  $0x64
jmpq   5020 <.plt>

0000000000005680 <png_set_error_fn@plt>:
jmpq   *0x2ccba(%rip)        # 32340 <png_set_error_fn@@PNG16_0+0x27930>
pushq  $0x65
jmpq   5020 <.plt>

0000000000005690 <png_set_keep_unknown_chunks@plt>:
jmpq   *0x2ccb2(%rip)        # 32348 <png_set_keep_unknown_chunks@@PNG16_0+0xfb78>
pushq  $0x66
jmpq   5020 <.plt>

00000000000056a0 <png_chunk_warning@plt>:
jmpq   *0x2ccaa(%rip)        # 32350 <png_chunk_warning@@PNG16_0+0x27820>
pushq  $0x67
jmpq   5020 <.plt>

00000000000056b0 <png_set_expand@plt>:
jmpq   *0x2cca2(%rip)        # 32358 <png_set_expand@@PNG16_0+0x1db08>
pushq  $0x68
jmpq   5020 <.plt>

00000000000056c0 <png_create_write_struct_2@plt>:
jmpq   *0x2cc9a(%rip)        # 32360 <png_create_write_struct_2@@PNG16_0+0xe4b0>
pushq  $0x69
jmpq   5020 <.plt>

00000000000056d0 <png_set_strip_16@plt>:
jmpq   *0x2cc92(%rip)        # 32368 <png_set_strip_16@@PNG16_0+0x1d378>
pushq  $0x6a
jmpq   5020 <.plt>

00000000000056e0 <png_create_read_struct@plt>:
jmpq   *0x2cc8a(%rip)        # 32370 <png_create_read_struct@@PNG16_0+0x23a10>
pushq  $0x6b
jmpq   5020 <.plt>

00000000000056f0 <png_destroy_write_struct@plt>:
jmpq   *0x2cc82(%rip)        # 32378 <png_destroy_write_struct@@PNG16_0+0xd618>
pushq  $0x6c
jmpq   5020 <.plt>

0000000000005700 <png_free_default@plt>:
jmpq   *0x2cc7a(%rip)        # 32380 <png_free_default@@PNG16_0+0x25a50>
pushq  $0x6d
jmpq   5020 <.plt>

0000000000005710 <png_get_pixels_per_meter@plt>:
jmpq   *0x2cc72(%rip)        # 32388 <png_get_pixels_per_meter@@PNG16_0+0x26cb8>
pushq  $0x6e
jmpq   5020 <.plt>

0000000000005720 <png_free_data@plt>:
jmpq   *0x2cc6a(%rip)        # 32390 <png_free_data@@PNG16_0+0x2c490>
pushq  $0x6f
jmpq   5020 <.plt>

0000000000005730 <png_get_uint_31@plt>:
jmpq   *0x2cc62(%rip)        # 32398 <png_get_uint_31@@PNG16_0+0x17368>
pushq  $0x70
jmpq   5020 <.plt>

0000000000005740 <png_set_strip_alpha@plt>:
jmpq   *0x2cc5a(%rip)        # 323a0 <png_set_strip_alpha@@PNG16_0+0x1d570>
pushq  $0x71
jmpq   5020 <.plt>

0000000000005750 <png_set_unknown_chunks@plt>:
jmpq   *0x2cc52(%rip)        # 323a8 <png_set_unknown_chunks@@PNG16_0+0xf918>
pushq  $0x72
jmpq   5020 <.plt>

0000000000005760 <fopen@plt>:
jmpq   *0x2cc4a(%rip)        # 323b0 <fopen@GLIBC_2.2.5>
pushq  $0x73
jmpq   5020 <.plt>

0000000000005770 <inflateInit2_@plt>:
jmpq   *0x2cc42(%rip)        # 323b8 <inflateInit2_>
pushq  $0x74
jmpq   5020 <.plt>

0000000000005780 <png_calloc@plt>:
jmpq   *0x2cc3a(%rip)        # 323c0 <png_calloc@@PNG16_0+0x25b80>
pushq  $0x75
jmpq   5020 <.plt>

0000000000005790 <png_free@plt>:
jmpq   *0x2cc32(%rip)        # 323c8 <png_free@@PNG16_0+0x25b08>
pushq  $0x76
jmpq   5020 <.plt>

00000000000057a0 <png_save_uint_16@plt>:
jmpq   *0x2cc2a(%rip)        # 323d0 <png_save_uint_16@@PNG16_0+0xac50>
pushq  $0x77
jmpq   5020 <.plt>

00000000000057b0 <png_read_info@plt>:
jmpq   *0x2cc22(%rip)        # 323d8 <png_read_info@@PNG16_0+0x239f8>
pushq  $0x78
jmpq   5020 <.plt>

00000000000057c0 <gmtime@plt>:
jmpq   *0x2cc1a(%rip)        # 323e0 <gmtime@GLIBC_2.2.5>
pushq  $0x79
jmpq   5020 <.plt>

00000000000057d0 <png_sig_cmp@plt>:
jmpq   *0x2cc12(%rip)        # 323e8 <png_sig_cmp@@PNG16_0+0x2c9d8>
pushq  $0x7a
jmpq   5020 <.plt>

00000000000057e0 <floor@plt>:
jmpq   *0x2cc0a(%rip)        # 323f0 <floor@GLIBC_2.2.5>
pushq  $0x7b
jmpq   5020 <.plt>

00000000000057f0 <inflateReset@plt>:
jmpq   *0x2cc02(%rip)        # 323f8 <inflateReset>
pushq  $0x7c
jmpq   5020 <.plt>

0000000000005800 <png_malloc@plt>:
jmpq   *0x2cbfa(%rip)        # 32400 <png_malloc@@PNG16_0+0x25c00>
pushq  $0x7d
jmpq   5020 <.plt>

0000000000005810 <png_set_gray_to_rgb@plt>:
jmpq   *0x2cbf2(%rip)        # 32408 <png_set_gray_to_rgb@@PNG16_0+0x1da78>
pushq  $0x7e
jmpq   5020 <.plt>

0000000000005820 <png_set_packswap@plt>:
jmpq   *0x2cbea(%rip)        # 32410 <png_set_packswap@@PNG16_0+0xed30>
pushq  $0x7f
jmpq   5020 <.plt>

0000000000005830 <png_set_expand_16@plt>:
jmpq   *0x2cbe2(%rip)        # 32418 <png_set_expand_16@@PNG16_0+0x1dac8>
pushq  $0x80
jmpq   5020 <.plt>

0000000000005840 <fwrite@plt>:
jmpq   *0x2cbda(%rip)        # 32420 <fwrite@GLIBC_2.2.5>
pushq  $0x81
jmpq   5020 <.plt>

0000000000005850 <png_convert_to_rfc1123_buffer@plt>:
jmpq   *0x2cbd2(%rip)        # 32428 <png_convert_to_rfc1123_buffer@@PNG16_0+0x2c888>
pushq  $0x82
jmpq   5020 <.plt>

0000000000005860 <png_set_bgr@plt>:
jmpq   *0x2cbca(%rip)        # 32430 <png_set_bgr@@PNG16_0+0xef10>
pushq  $0x83
jmpq   5020 <.plt>

0000000000005870 <png_longjmp@plt>:
jmpq   *0x2cbc2(%rip)        # 32438 <png_longjmp@@PNG16_0+0x27a58>
pushq  $0x84
jmpq   5020 <.plt>

0000000000005880 <png_image_write_to_stdio@plt>:
jmpq   *0x2cbba(%rip)        # 32440 <png_image_write_to_stdio@@PNG16_0+0xce20>
pushq  $0x85
jmpq   5020 <.plt>

0000000000005890 <strerror@plt>:
jmpq   *0x2cbb2(%rip)        # 32448 <strerror@GLIBC_2.2.5>
pushq  $0x86
jmpq   5020 <.plt>

00000000000058a0 <png_set_cHRM_XYZ_fixed@plt>:
jmpq   *0x2cbaa(%rip)        # 32450 <png_set_cHRM_XYZ_fixed@@PNG16_0+0x110e0>
pushq  $0x87
jmpq   5020 <.plt>

00000000000058b0 <png_set_tRNS_to_alpha@plt>:
jmpq   *0x2cba2(%rip)        # 32458 <png_set_tRNS_to_alpha@@PNG16_0+0x1db48>
pushq  $0x88
jmpq   5020 <.plt>

00000000000058c0 <png_write_flush@plt>:
jmpq   *0x2cb9a(%rip)        # 32460 <png_write_flush@@PNG16_0+0xde50>
pushq  $0x89
jmpq   5020 <.plt>

00000000000058d0 <png_set_scale_16@plt>:
jmpq   *0x2cb92(%rip)        # 32468 <png_set_scale_16@@PNG16_0+0x1d4b8>
pushq  $0x8a
jmpq   5020 <.plt>

00000000000058e0 <png_set_invert_mono@plt>:
jmpq   *0x2cb8a(%rip)        # 32470 <png_set_invert_mono@@PNG16_0+0xecf0>
pushq  $0x8b
jmpq   5020 <.plt>

Disassembly of section .plt.got:

00000000000058f0 <longjmp@plt>:
jmpq   *0x2c6ea(%rip)        # 31fe0 <longjmp@GLIBC_2.2.5>
xchg   %ax,%ax

Disassembly of section .text:

0000000000005900 <deregister_tm_clones>:
lea    0x2cb79(%rip),%rdi        # 32480 <__TMC_END__>
lea    0x2cb72(%rip),%rax        # 32480 <__TMC_END__>
cmp    %rdi,%rax
je     5928 <deregister_tm_clones+0x28>
mov    0x2c6b6(%rip),%rax        # 31fd0 <_ITM_deregisterTMCloneTable>
test   %rax,%rax
je     5928 <deregister_tm_clones+0x28>
jmpq   *%rax
nopl   0x0(%rax)
retq   
nopl   0x0(%rax)

0000000000005930 <register_tm_clones>:
lea    0x2cb49(%rip),%rdi        # 32480 <__TMC_END__>
lea    0x2cb42(%rip),%rsi        # 32480 <__TMC_END__>
sub    %rdi,%rsi
sar    $0x3,%rsi
mov    %rsi,%rax
shr    $0x3f,%rax
add    %rax,%rsi
sar    %rsi
je     5968 <register_tm_clones+0x38>
mov    0x2c68d(%rip),%rax        # 31fe8 <_ITM_registerTMCloneTable>
test   %rax,%rax
je     5968 <register_tm_clones+0x38>
jmpq   *%rax
nopw   0x0(%rax,%rax,1)
retq   
nopl   0x0(%rax)

0000000000005970 <__do_global_dtors_aux>:
endbr64 
cmpb   $0x0,0x2cb05(%rip)        # 32480 <__TMC_END__>
jne    59b0 <__do_global_dtors_aux+0x40>
push   %rbp
cmpq   $0x0,0x2c66a(%rip)        # 31ff0 <__cxa_finalize@GLIBC_2.2.5>
mov    %rsp,%rbp
je     5998 <__do_global_dtors_aux+0x28>
mov    0x2cae6(%rip),%rdi        # 32478 <__dso_handle>
callq  *0x2c658(%rip)        # 31ff0 <__cxa_finalize@GLIBC_2.2.5>
callq  5900 <deregister_tm_clones>
movb   $0x1,0x2cadc(%rip)        # 32480 <__TMC_END__>
pop    %rbp
retq   
nopw   %cs:0x0(%rax,%rax,1)
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   0x0(%rax)

00000000000059c0 <frame_dummy>:
endbr64 
jmpq   5930 <register_tm_clones>
nopl   0x0(%rax)

00000000000059d0 <png_access_version_number>:
push   %rbp
mov    %rsp,%rbp
mov    $0x298a,%eax
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

00000000000059e0 <png_set_sig_bytes>:
push   %rbp
mov    %rsp,%rbp
test   %rdi,%rdi
jne    59eb <png_set_sig_bytes+0xb>
leaveq 
retq   
test   %esi,%esi
jns    59f1 <png_set_sig_bytes+0x11>
xor    %esi,%esi
cmp    $0x8,%esi
ja     59ff <png_set_sig_bytes+0x1f>
mov    %sil,0x26d(%rdi)
leaveq 
retq   
lea    0x27092(%rip),%rsi        # 2ca98 <png_sRGB_checks+0xe0>
callq  5470 <png_error@plt>
nopl   0x0(%rax,%rax,1)

0000000000005a10 <png_sig_cmp>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
movabs $0xa1a0a0d474e5089,%rax
mov    %rax,-0x8(%rbp)
mov    $0xffffffffffffffff,%rax
mov    $0x8,%ecx
cmp    $0x8,%rdx
jbe    5a43 <png_sig_cmp+0x33>
mov    %rcx,%rdx
cmp    $0x7,%rsi
jbe    5a4a <png_sig_cmp+0x3a>
leaveq 
retq   
test   %rdx,%rdx
jne    5a3b <png_sig_cmp+0x2b>
leaveq 
retq   
lea    (%rsi,%rdx,1),%rax
cmp    $0x8,%rax
jbe    5a5a <png_sig_cmp+0x4a>
sub    %rsi,%rcx
mov    %rcx,%rdx
add    %rsi,%rdi
lea    -0x8(%rbp,%rsi,1),%rsi
callq  53d0 <memcmp@plt>
leaveq 
retq   
nopl   0x0(%rax)

0000000000005a70 <png_reset_zstream>:
push   %rbp
mov    %rsp,%rbp
test   %rdi,%rdi
jne    5a82 <png_reset_zstream+0x12>
mov    $0xfffffffffffffffe,%rax
leaveq 
retq   
add    $0x140,%rdi
callq  57f0 <inflateReset@plt>
leaveq 
retq   

0000000000005a90 <png_create_info_struct>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
xor    %eax,%eax
test   %rdi,%rdi
jne    5aa1 <png_create_info_struct+0x11>
leaveq 
retq   
mov    $0x168,%esi
callq  c950 <png_malloc_base>
test   %rax,%rax
jne    5ab4 <png_create_info_struct+0x24>
xor    %eax,%eax
leaveq 
retq   
mov    %rax,%rdi
mov    %rax,-0x8(%rbp)
mov    $0x168,%edx
xor    %esi,%esi
callq  5350 <memset@plt>
mov    -0x8(%rbp),%rax
leaveq 
retq   
nopl   (%rax)

0000000000005ad0 <png_info_init_3>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    (%rdi),%rax
test   %rax,%rax
jne    5ae2 <png_info_init_3+0x12>
leaveq 
retq   
xor    %ecx,%ecx
mov    $0x168,%edx
cmp    $0x167,%rsi
jbe    5aff <png_info_init_3+0x2f>
mov    %rcx,%rsi
mov    %rax,%rdi
callq  5350 <memset@plt>
leaveq 
retq   
movq   $0x0,(%rdi)
mov    %r15,-0x8(%rbp)
mov    %rdi,%r15
mov    %rax,%rdi
callq  5070 <free@plt>
xor    %edi,%edi
mov    $0x168,%esi
callq  c950 <png_malloc_base>
test   %rax,%rax
jne    5b2c <png_info_init_3+0x5c>
mov    -0x8(%rbp),%r15
leaveq 
retq   
mov    %rax,(%r15)
mov    %rax,%rdi
mov    $0x168,%edx
xor    %esi,%esi
mov    -0x8(%rbp),%r15
jmp    5af8 <png_info_init_3+0x28>
nop

0000000000005b40 <png_convert_to_rfc1123>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
xor    %eax,%eax
test   %rdi,%rdi
jne    5b51 <png_convert_to_rfc1123+0x11>
leaveq 
retq   
lea    0x38c(%rdi),%rax
mov    %rax,%rcx
mov    %r15,-0x10(%rbp)
mov    %rdi,-0x8(%rbp)
mov    %rcx,%rdi
mov    %rax,%r15
callq  5850 <png_convert_to_rfc1123_buffer@plt>
test   %eax,%eax
je     5b7b <png_convert_to_rfc1123+0x3b>
mov    %r15,%rax
mov    -0x10(%rbp),%r15
leaveq 
retq   
lea    0x26f37(%rip),%rsi        # 2cab9 <png_sRGB_checks+0x101>
mov    -0x8(%rbp),%rdi
callq  5390 <png_warning@plt>
xor    %eax,%eax
mov    -0x10(%rbp),%r15
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

0000000000005ba0 <png_convert_to_rfc1123_buffer>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
xor    %eax,%eax
test   %rdi,%rdi
jne    5bb1 <png_convert_to_rfc1123_buffer+0x11>
leaveq 
retq   
movzwl (%rsi),%ecx
cmp    $0x270f,%cx
jbe    5bbd <png_convert_to_rfc1123_buffer+0x1d>
leaveq 
retq   
movzbl 0x2(%rsi),%ecx
test   %cl,%cl
jne    5bc7 <png_convert_to_rfc1123_buffer+0x27>
leaveq 
retq   
cmp    $0xc,%cl
jbe    5bce <png_convert_to_rfc1123_buffer+0x2e>
leaveq 
retq   
movzbl 0x3(%rsi),%ecx
test   %cl,%cl
jne    5bd8 <png_convert_to_rfc1123_buffer+0x38>
leaveq 
retq   
cmp    $0x1f,%cl
jbe    5bdf <png_convert_to_rfc1123_buffer+0x3f>
leaveq 
retq   
movzbl 0x4(%rsi),%edx
cmp    $0x17,%dl
jbe    5bea <png_convert_to_rfc1123_buffer+0x4a>
leaveq 
retq   
movzbl 0x5(%rsi),%edx
cmp    $0x3b,%dl
jbe    5bf5 <png_convert_to_rfc1123_buffer+0x55>
leaveq 
retq   
movzbl 0x6(%rsi),%edx
cmp    $0x3c,%dl
jbe    5c00 <png_convert_to_rfc1123_buffer+0x60>
leaveq 
retq   
lea    -0x2d(%rbp),%r10
lea    -0x28(%rbp),%r11
mov    $0x1,%edx
mov    %r10,%r9
mov    %r11,%r8
mov    %r15,-0x28(%rbp)
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %rdi,%rbx
mov    %r9,%rdi
mov    %rax,%r12
mov    %r10,%r13
mov    %rsi,%r14
mov    %r8,%rsi
mov    %r11,%r15
callq  ad80 <png_format_number>
mov    %rax,%rcx
mov    %r12,%rdx
mov    $0x1d,%r12d
mov    %rbx,%rdi
mov    %r12,%rsi
callq  ad30 <png_safecat>
cmp    $0x1b,%rax
jbe    5c63 <png_convert_to_rfc1123_buffer+0xc3>
mov    %rax,%rdx
jmp    5c6b <png_convert_to_rfc1123_buffer+0xcb>
movb   $0x20,(%rbx,%rax,1)
lea    0x1(%rax),%rdx
lea    0x26e63(%rip),%rcx        # 2cad5 <short_months.6>
movzbl 0x2(%r14),%eax
add    $0xffffffff,%eax
movslq %eax,%rax
lea    (%rcx,%rax,4),%rcx
mov    %rbx,%rdi
mov    %r12,%rsi
callq  ad30 <png_safecat>
cmp    $0x1b,%rax
ja     5c9a <png_convert_to_rfc1123_buffer+0xfa>
movb   $0x20,(%rbx,%rax,1)
add    $0x1,%rax
mov    %r15,%rsi
mov    %rax,%r15
movzwl (%r14),%ecx
mov    %r13,%rdi
mov    $0x1,%edx
callq  ad80 <png_format_number>
mov    %rax,%rcx
mov    %r15,%rdx
mov    %rbx,%rdi
mov    %r12,%rsi
callq  ad30 <png_safecat>
cmp    $0x1b,%rax
jbe    5ccd <png_convert_to_rfc1123_buffer+0x12d>
mov    %rax,%r15
jmp    5cd5 <png_convert_to_rfc1123_buffer+0x135>
movb   $0x20,(%rbx,%rax,1)
lea    0x1(%rax),%r15
mov    $0x2,%edx
movzbl 0x4(%r14),%ecx
mov    %r13,%rdi
lea    -0x28(%rbp),%rsi
callq  ad80 <png_format_number>
mov    %rax,%rcx
mov    %r15,%rdx
mov    %rbx,%rdi
mov    %r12,%rsi
callq  ad30 <png_safecat>
cmp    $0x1b,%rax
jbe    5d07 <png_convert_to_rfc1123_buffer+0x167>
mov    %rax,%r15
jmp    5d0f <png_convert_to_rfc1123_buffer+0x16f>
movb   $0x3a,(%rbx,%rax,1)
lea    0x1(%rax),%r15
movzbl 0x5(%r14),%ecx
mov    %r13,%rdi
lea    -0x28(%rbp),%rsi
mov    $0x2,%edx
callq  ad80 <png_format_number>
mov    %rax,%rcx
mov    %r15,%rdx
mov    %rbx,%rdi
mov    %r12,%rsi
callq  ad30 <png_safecat>
cmp    $0x1b,%rax
jbe    5d41 <png_convert_to_rfc1123_buffer+0x1a1>
mov    %rax,%r15
jmp    5d49 <png_convert_to_rfc1123_buffer+0x1a9>
movb   $0x3a,(%rbx,%rax,1)
lea    0x1(%rax),%r15
movzbl 0x6(%r14),%ecx
mov    %r13,%rdi
mov    $0x2,%edx
lea    -0x28(%rbp),%rsi
callq  ad80 <png_format_number>
mov    %rax,%rcx
mov    %r15,%rdx
mov    %rbx,%rdi
mov    %r12,%rsi
callq  ad30 <png_safecat>
mov    %rax,%rdx
mov    %r12,%rsi
mov    %rbx,%rdi
lea    0x26d85(%rip),%rcx        # 2cb05 <short_months.6+0x30>
callq  ad30 <png_safecat>
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    $0x1,%eax
mov    -0x28(%rbp),%r15
leaveq 
retq   

0000000000005da0 <png_build_grayscale_palette>:
push   %rbp
mov    %rsp,%rbp
test   %rsi,%rsi
jne    5dab <png_build_grayscale_palette+0xb>
leaveq 
retq   
xor    %eax,%eax
cmp    $0x3,%edi
jle    5dc6 <png_build_grayscale_palette+0x26>
cmp    $0x4,%edi
jne    5dda <png_build_grayscale_palette+0x3a>
mov    $0x10,%edi
mov    $0x11,%edx
mov    %rax,%rcx
jmp    5e04 <png_build_grayscale_palette+0x64>
cmp    $0x1,%edi
jne    5e0a <png_build_grayscale_palette+0x6a>
mov    $0x2,%edi
mov    $0xff,%edx
mov    %rax,%rcx
jmp    5e04 <png_build_grayscale_palette+0x64>
cmp    $0x8,%edi
je     5e1a <png_build_grayscale_palette+0x7a>
mov    %rax,%rcx
mov    %rcx,%rdx
mov    %rdx,%rdi
jmp    5e04 <png_build_grayscale_palette+0x64>
movslq %ecx,%r8
lea    (%r8,%r8,2),%r8
mov    %al,(%rsi,%r8,1)
mov    %al,0x1(%rsi,%r8,1)
mov    %al,0x2(%rsi,%r8,1)
add    $0x1,%ecx
add    %edx,%eax
cmp    %ecx,%edi
jg     5dea <png_build_grayscale_palette+0x4a>
leaveq 
retq   
cmp    $0x2,%edi
je     5e29 <png_build_grayscale_palette+0x89>
mov    %rax,%rcx
mov    %rcx,%rdx
mov    %rdx,%rdi
jmp    5e04 <png_build_grayscale_palette+0x64>
mov    $0x100,%edi
mov    $0x1,%edx
mov    %rax,%rcx
jmp    5e04 <png_build_grayscale_palette+0x64>
mov    $0x4,%edi
mov    $0x55,%edx
mov    %rax,%rcx
jmp    5e04 <png_build_grayscale_palette+0x64>
nopl   0x0(%rax,%rax,1)

0000000000005e40 <png_destroy_info_struct>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
test   %rdi,%rdi
jne    5e4f <png_destroy_info_struct+0xf>
leaveq 
retq   
xor    %eax,%eax
test   %rsi,%rsi
je     5e59 <png_destroy_info_struct+0x19>
mov    (%rsi),%rax
test   %rax,%rax
jne    5e60 <png_destroy_info_struct+0x20>
leaveq 
retq   
movq   $0x0,(%rsi)
mov    $0xffff,%edx
mov    $0xffffffffffffffff,%rcx
mov    %rdi,%r8
mov    %rax,%rsi
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rdi,%r14
mov    %r8,%rdi
mov    %rax,%r15
callq  5720 <png_free_data@plt>
mov    $0x168,%edx
mov    %r15,%rdi
xor    %esi,%esi
callq  5350 <memset@plt>
mov    %r15,%rsi
mov    %r14,%rdi
callq  5790 <png_free@plt>
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

0000000000005ec0 <png_init_io>:
push   %rbp
mov    %rsp,%rbp
test   %rdi,%rdi
jne    5ecb <png_init_io+0xb>
leaveq 
retq   
mov    %rsi,0x108(%rdi)
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nop

0000000000005ee0 <png_get_io_ptr>:
push   %rbp
mov    %rsp,%rbp
test   %rdi,%rdi
jne    5eed <png_get_io_ptr+0xd>
xor    %eax,%eax
leaveq 
retq   
mov    0x108(%rdi),%rax
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)

0000000000005f00 <png_free_data>:
push   %rbp
mov    %rsp,%rbp
sub    $0x50,%rsp
mov    %r13,-0x20(%rbp)
mov    %r14,-0x28(%rbp)
mov    %r15,-0x30(%rbp)
test   %rdi,%rdi
jne    5f1b <png_free_data+0x1b>
leaveq 
retq   
test   %rsi,%rsi
jne    5f22 <png_free_data+0x22>
leaveq 
retq   
xor    %r8d,%r8d
mov    0xa0(%rsi),%r9
test   %r9,%r9
jne    60eb <png_free_data+0x1eb>
mov    %r13,%rax
mov    %rbx,%r13
mov    %rsi,%rbx
mov    %r15,%r9
mov    %r12,%r15
mov    %rdi,%r12
mov    %r14,%rsi
mov    %r8,%r14
mov    %rsi,%r8
mov    %rdx,%rsi
and    0x12c(%rbx),%esi
and    $0x2000,%esi
test   %esi,%esi
je     5faf <png_free_data+0xaf>
mov    0x8(%rbx),%eax
and    $0xffffffef,%eax
mov    %eax,0x8(%rbx)
mov    0xb8(%rbx),%rsi
mov    %r12,%rdi
mov    %r15,-0x48(%rbp)
mov    %rcx,%r14
mov    %rdx,%r15
callq  5790 <png_free@plt>
movq   $0x0,0xb8(%rbx)
movw   $0x0,0x22(%rbx)
mov    %r14,%rcx
mov    %r15,%rdx
xor    %r14d,%r14d
mov    -0x30(%rbp),%r9
mov    -0x28(%rbp),%r8
mov    -0x20(%rbp),%rax
mov    -0x48(%rbp),%r15
mov    %rdx,%rsi
and    0x12c(%rbx),%esi
and    $0x100,%esi
test   %esi,%esi
je     6024 <png_free_data+0x124>
mov    0x150(%rbx),%rsi
mov    %r12,%rdi
mov    %r15,-0x48(%rbp)
mov    %rdx,%r14
mov    %rcx,%r15
callq  5790 <png_free@plt>
mov    0x158(%rbx),%rsi
mov    %r12,%rdi
callq  5790 <png_free@plt>
movq   $0x0,0x150(%rbx)
movq   $0x0,0x158(%rbx)
mov    0x8(%rbx),%eax
and    $0xffffbfff,%eax
mov    %eax,0x8(%rbx)
mov    %r15,%rcx
mov    %r14,%rdx
xor    %r14d,%r14d
mov    -0x30(%rbp),%r9
mov    -0x28(%rbp),%r8
mov    -0x20(%rbp),%rax
mov    -0x48(%rbp),%r15
mov    %rdx,%rsi
and    0x12c(%rbx),%esi
and    $0x80,%esi
test   %esi,%esi
jne    6121 <png_free_data+0x221>
mov    %rdx,%rsi
and    0x12c(%rbx),%esi
and    $0x10,%esi
test   %esi,%esi
je     60ad <png_free_data+0x1ad>
mov    0x80(%rbx),%rsi
mov    %r12,%rdi
mov    %r15,-0x48(%rbp)
mov    %rdx,%r14
mov    %rcx,%r15
callq  5790 <png_free@plt>
mov    0x88(%rbx),%rsi
mov    %r12,%rdi
callq  5790 <png_free@plt>
movq   $0x0,0x80(%rbx)
movq   $0x0,0x88(%rbx)
mov    0x8(%rbx),%eax
and    $0xffffefff,%eax
mov    %eax,0x8(%rbx)
mov    %r15,%rcx
mov    %r14,%rdx
xor    %r14d,%r14d
mov    -0x30(%rbp),%r9
mov    -0x28(%rbp),%r8
mov    -0x20(%rbp),%rax
mov    -0x48(%rbp),%r15
mov    0x140(%rbx),%rdi
test   %rdi,%rdi
je     6217 <png_free_data+0x317>
mov    %rdx,%rsi
and    0x12c(%rbx),%esi
and    $0x20,%esi
test   %esi,%esi
je     6217 <png_free_data+0x317>
cmp    $0xffffffff,%ecx
jne    619d <png_free_data+0x29d>
mov    %r15,-0x38(%rbp)
mov    %rdx,-0x48(%rbp)
mov    %rcx,-0x40(%rbp)
jmpq   6286 <png_free_data+0x386>
mov    %rdx,%rax
and    0x12c(%rsi),%eax
and    $0x4000,%eax
test   %eax,%eax
jne    62e1 <png_free_data+0x3e1>
mov    %r13,%rax
mov    %rbx,%r13
mov    %rsi,%rbx
mov    %r15,%r9
mov    %r12,%r15
mov    %rdi,%r12
mov    %r14,%rsi
mov    %r8,%r14
mov    %rsi,%r8
jmpq   5f50 <png_free_data+0x50>
mov    0x108(%rbx),%rsi
mov    %r12,%rdi
mov    %r13,-0x18(%rbp)
mov    %r15,-0x48(%rbp)
mov    %rdx,%r13
mov    %rcx,%r15
callq  5790 <png_free@plt>
mov    0x118(%rbx),%rsi
mov    %r12,%rdi
callq  5790 <png_free@plt>
movq   $0x0,0x108(%rbx)
movq   $0x0,0x118(%rbx)
mov    0x120(%rbx),%rax
test   %rax,%rax
jne    6320 <png_free_data+0x420>
mov    %r15,%rcx
mov    %r13,%rdx
mov    0x8(%rbx),%eax
and    $0xfffffbff,%eax
mov    %eax,0x8(%rbx)
mov    -0x30(%rbp),%r9
mov    -0x28(%rbp),%r8
mov    -0x20(%rbp),%rax
mov    -0x48(%rbp),%r15
mov    -0x18(%rbp),%r13
jmpq   603b <png_free_data+0x13b>
movslq %ecx,%r14
shl    $0x5,%r14
mov    (%rdi,%r14,1),%rsi
mov    %r12,%rdi
mov    %r13,-0x10(%rbp)
mov    %r15,-0x48(%rbp)
mov    %rcx,%r13
mov    %rdx,%r15
callq  5790 <png_free@plt>
mov    0x140(%rbx),%rax
mov    0x10(%rax,%r14,1),%rsi
mov    %r14,%rax
mov    %r13,%r14
mov    %rax,%r13
mov    %r12,%rdi
callq  5790 <png_free@plt>
mov    0x140(%rbx),%rax
movq   $0x0,(%rax,%r13,1)
mov    0x140(%rbx),%rax
movq   $0x0,0x10(%rax,%r13,1)
mov    %r14,%rcx
mov    %r15,%rdx
xor    %r14d,%r14d
mov    -0x30(%rbp),%r9
mov    -0x28(%rbp),%r8
mov    -0x20(%rbp),%rax
mov    -0x48(%rbp),%r15
mov    -0x10(%rbp),%r13
mov    0x130(%rbx),%rdi
test   %rdi,%rdi
je     63a6 <png_free_data+0x4a6>
mov    %rdx,%rsi
and    0x12c(%rbx),%esi
and    $0x200,%esi
test   %esi,%esi
je     63a6 <png_free_data+0x4a6>
cmp    $0xffffffff,%ecx
jne    6354 <png_free_data+0x454>
mov    %rdx,-0x48(%rbp)
mov    %rcx,-0x38(%rbp)
jmpq   654c <png_free_data+0x64c>
mov    0x140(%rbx),%rax
movslq %r14d,%r15
shl    $0x5,%r15
mov    (%rax,%r15,1),%rsi
mov    %r12,%rdi
callq  5790 <png_free@plt>
mov    0x140(%rbx),%rax
mov    0x10(%rax,%r15,1),%rsi
mov    %r12,%rdi
callq  5790 <png_free@plt>
add    $0x1,%r14d
movslq 0x148(%rbx),%rax
cmp    %r14d,%eax
jg     6254 <png_free_data+0x354>
mov    0x140(%rbx),%rsi
mov    %r12,%rdi
callq  5790 <png_free@plt>
movq   $0x0,0x140(%rbx)
movl   $0x0,0x148(%rbx)
mov    0x8(%rbx),%eax
and    $0xffffdfff,%eax
mov    %eax,0x8(%rbx)
mov    -0x40(%rbp),%rcx
mov    -0x48(%rbp),%rdx
xor    %r14d,%r14d
mov    -0x30(%rbp),%r9
mov    -0x28(%rbp),%r8
mov    -0x20(%rbp),%rax
mov    -0x38(%rbp),%r15
jmpq   6217 <png_free_data+0x317>
cmp    $0xffffffff,%ecx
jne    6598 <png_free_data+0x698>
mov    %rdx,-0x48(%rbp)
mov    %rcx,-0x40(%rbp)
mov    %rbx,%r13
mov    %rsi,%rbx
mov    %r8,%r14
mov    %r12,%r15
mov    %rdi,%r12
jmpq   6627 <png_free_data+0x727>
mov    0x120(%rbx),%rcx
movslq %r14d,%rax
mov    (%rcx,%rax,8),%rsi
mov    %r12,%rdi
callq  5790 <png_free@plt>
add    $0x1,%r14d
movzbl 0x129(%rbx),%eax
cmp    %r14d,%eax
jg     6306 <png_free_data+0x406>
mov    0x120(%rbx),%rsi
mov    %r12,%rdi
callq  5790 <png_free@plt>
movq   $0x0,0x120(%rbx)
mov    %r15,%rcx
mov    %r13,%rdx
xor    %r14d,%r14d
jmpq   6179 <png_free_data+0x279>
movslq %ecx,%r14
shl    $0x5,%r14
mov    0x8(%rdi,%r14,1),%rsi
mov    %r12,%rdi
mov    %r13,-0x10(%rbp)
mov    %r15,-0x48(%rbp)
mov    %r14,%r13
mov    %rdx,%r14
mov    %rcx,%r15
callq  5790 <png_free@plt>
mov    0x130(%rbx),%rax
movq   $0x0,0x8(%rax,%r13,1)
mov    %r15,%rcx
mov    %r14,%rdx
xor    %r14d,%r14d
mov    -0x30(%rbp),%r9
mov    -0x28(%rbp),%r8
mov    -0x20(%rbp),%rax
mov    -0x48(%rbp),%r15
mov    -0x10(%rbp),%r13
mov    %rdx,%rsi
and    0x12c(%rbx),%esi
and    $0x8000,%esi
test   %esi,%esi
je     644d <png_free_data+0x54d>
mov    0xf8(%rbx),%rsi
test   %rsi,%rsi
je     63ff <png_free_data+0x4ff>
mov    %r12,%rdi
mov    %r15,-0x48(%rbp)
mov    %rcx,%r14
mov    %rdx,%r15
callq  5790 <png_free@plt>
movq   $0x0,0xf8(%rbx)
mov    %r14,%rcx
mov    %r15,%rdx
xor    %r14d,%r14d
mov    -0x30(%rbp),%r9
mov    -0x28(%rbp),%r8
mov    -0x20(%rbp),%rax
mov    -0x48(%rbp),%r15
mov    0xf0(%rbx),%rsi
test   %rsi,%rsi
je     6441 <png_free_data+0x541>
mov    %r12,%rdi
mov    %r15,-0x48(%rbp)
mov    %rcx,%r14
mov    %rdx,%r15
callq  5790 <png_free@plt>
movq   $0x0,0xf0(%rbx)
mov    %r14,%rcx
mov    %r15,%rdx
xor    %r14d,%r14d
mov    -0x30(%rbp),%r9
mov    -0x28(%rbp),%r8
mov    -0x20(%rbp),%rax
mov    -0x48(%rbp),%r15
mov    0x8(%rbx),%esi
and    $0xfffeffff,%esi
mov    %esi,0x8(%rbx)
mov    %rdx,%rsi
and    0x12c(%rbx),%esi
and    $0x8,%esi
test   %esi,%esi
je     64a3 <png_free_data+0x5a3>
mov    0x100(%rbx),%rsi
mov    %r12,%rdi
mov    %r15,-0x48(%rbp)
mov    %rdx,%r14
mov    %rcx,%r15
callq  5790 <png_free@plt>
movq   $0x0,0x100(%rbx)
mov    0x8(%rbx),%eax
and    $0xffffffbf,%eax
mov    %eax,0x8(%rbx)
mov    %r15,%rcx
mov    %r14,%rdx
xor    %r14d,%r14d
mov    -0x30(%rbp),%r9
mov    -0x28(%rbp),%r8
mov    -0x20(%rbp),%rax
mov    -0x48(%rbp),%r15
mov    %rdx,%rsi
and    0x12c(%rbx),%esi
and    $0x1000,%esi
test   %esi,%esi
je     64fc <png_free_data+0x5fc>
mov    0x18(%rbx),%rsi
mov    %r12,%rdi
mov    %r12,-0x48(%rbp)
mov    %rcx,%r12
mov    %rdx,%r14
callq  5790 <png_free@plt>
movq   $0x0,0x18(%rbx)
mov    0x8(%rbx),%eax
and    $0xfffffff7,%eax
mov    %eax,0x8(%rbx)
movw   $0x0,0x20(%rbx)
mov    %r12,%rcx
mov    %r14,%rdx
mov    -0x48(%rbp),%r12
xor    %r14d,%r14d
mov    -0x30(%rbp),%r9
mov    -0x28(%rbp),%r8
mov    -0x20(%rbp),%rax
mov    %rdx,%rsi
and    0x12c(%rbx),%esi
and    $0x40,%esi
test   %esi,%esi
je     66d9 <png_free_data+0x7d9>
mov    0x160(%rbx),%rsi
test   %rsi,%rsi
je     66cd <png_free_data+0x7cd>
mov    %rdx,-0x8(%rbp)
mov    %rcx,-0x48(%rbp)
jmpq   6697 <png_free_data+0x797>
mov    0x130(%rbx),%rcx
movslq %r14d,%rax
shl    $0x5,%rax
mov    0x8(%rcx,%rax,1),%rsi
mov    %r12,%rdi
callq  5790 <png_free@plt>
add    $0x1,%r14d
movslq 0x138(%rbx),%rax
cmp    %r14d,%eax
jg     652d <png_free_data+0x62d>
mov    0x130(%rbx),%rsi
mov    %r12,%rdi
callq  5790 <png_free@plt>
movq   $0x0,0x130(%rbx)
movl   $0x0,0x138(%rbx)
mov    -0x38(%rbp),%rcx
mov    -0x48(%rbp),%rdx
xor    %r14d,%r14d
mov    -0x30(%rbp),%r9
mov    -0x28(%rbp),%r8
mov    -0x20(%rbp),%rax
jmpq   63a6 <png_free_data+0x4a6>
movslq %ecx,%r8
lea    (%r8,%r8,2),%rax
shl    $0x4,%rax
lea    (%rax,%r8,8),%r13
mov    0x8(%r9,%r13,1),%r8
mov    %rdi,%rax
mov    %rbx,-0x18(%rbp)
mov    %r12,-0x48(%rbp)
mov    %rsi,%rbx
mov    %r8,%rsi
mov    %rdi,%r12
mov    %rax,%rdi
mov    %rcx,%r14
mov    %rdx,%r15
callq  5790 <png_free@plt>
mov    0xa0(%rbx),%rax
movq   $0x0,0x8(%rax,%r13,1)
mov    %r14,%rcx
mov    %r15,%rdx
xor    %r14d,%r14d
mov    -0x30(%rbp),%r9
mov    -0x28(%rbp),%r8
mov    -0x20(%rbp),%rax
mov    -0x48(%rbp),%r15
mov    -0x18(%rbp),%r13
jmpq   5f50 <png_free_data+0x50>
movslq %r14d,%rcx
lea    (%rcx,%rcx,2),%rax
shl    $0x4,%rax
lea    (%rax,%rcx,8),%rax
mov    0xa0(%rbx),%rcx
mov    0x8(%rcx,%rax,1),%rsi
mov    %r12,%rdi
callq  5790 <png_free@plt>
add    $0x1,%r14d
movslq 0x94(%rbx),%rax
cmp    %r14d,%eax
jg     6600 <png_free_data+0x700>
mov    0xa0(%rbx),%rsi
mov    %r12,%rdi
callq  5790 <png_free@plt>
movq   $0x0,0xa0(%rbx)
movl   $0x0,0x94(%rbx)
movl   $0x0,0x98(%rbx)
mov    -0x40(%rbp),%rcx
mov    -0x48(%rbp),%rdx
xor    %r14d,%r14d
mov    -0x30(%rbp),%r9
mov    -0x28(%rbp),%r8
mov    -0x20(%rbp),%rax
jmpq   5f50 <png_free_data+0x50>
mov    0x160(%rbx),%rcx
mov    %r14d,%eax
mov    (%rcx,%rax,8),%rsi
mov    %r12,%rdi
callq  5790 <png_free@plt>
add    $0x1,%r14d
mov    0x4(%rbx),%eax
cmp    %r14d,%eax
ja     667d <png_free_data+0x77d>
mov    %r12,%rdi
mov    0x160(%rbx),%rsi
callq  5790 <png_free@plt>
movq   $0x0,0x160(%rbx)
mov    -0x48(%rbp),%rcx
mov    -0x8(%rbp),%rdx
mov    -0x30(%rbp),%r9
mov    -0x28(%rbp),%r8
mov    -0x20(%rbp),%rax
mov    0x8(%rbx),%esi
and    $0xffff7fff,%esi
mov    %esi,0x8(%rbx)
cmp    $0xffffffff,%ecx
je     66e4 <png_free_data+0x7e4>
and    $0xffffbddf,%edx
not    %edx
and    0x12c(%rbx),%edx
mov    %edx,0x12c(%rbx)
mov    %r13,%rbx
mov    %rax,%r13
mov    %r15,%r12
mov    %r9,%r15
mov    %r8,%r14
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

0000000000006710 <png_data_freer>:
push   %rbp
mov    %rsp,%rbp
test   %rdi,%rdi
jne    671b <png_data_freer+0xb>
leaveq 
retq   
test   %rsi,%rsi
jne    6722 <png_data_freer+0x12>
leaveq 
retq   
cmp    $0x1,%edx
je     6738 <png_data_freer+0x28>
cmp    $0x2,%edx
je     6746 <png_data_freer+0x36>
lea    0x263d9(%rip),%rsi        # 2cb0c <short_months.6+0x37>
callq  5470 <png_error@plt>
or     0x12c(%rsi),%ecx
mov    %ecx,0x12c(%rsi)
leaveq 
retq   
not    %ecx
and    0x12c(%rsi),%ecx
mov    %ecx,0x12c(%rsi)
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)

0000000000006760 <png_handle_as_unknown>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
xor    %eax,%eax
test   %rdi,%rdi
jne    6771 <png_handle_as_unknown+0x11>
leaveq 
retq   
test   %rsi,%rsi
jne    6778 <png_handle_as_unknown+0x18>
leaveq 
retq   
mov    0x3c4(%rdi),%ecx
test   %ecx,%ecx
jne    6784 <png_handle_as_unknown+0x24>
leaveq 
retq   
mov    $0x4,%edx
lea    (%rcx,%rcx,4),%eax
mov    %eax,%eax
mov    0x3c8(%rdi),%rcx
add    %rcx,%rax
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rsi,%rbx
mov    %rdx,%r12
mov    %rcx,%r13
mov    %rax,%r14
jmp    67c2 <png_handle_as_unknown+0x62>
cmp    %r13,%r15
jbe    67f3 <png_handle_as_unknown+0x93>
mov    %r15,%r14
lea    -0x5(%r14),%r15
mov    %rbx,%rdi
mov    %r15,%rsi
mov    %r12,%rdx
callq  53d0 <memcmp@plt>
test   %eax,%eax
jne    67ba <png_handle_as_unknown+0x5a>
movzbl -0x1(%r14),%eax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
xor    %eax,%eax
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

0000000000006810 <png_get_copyright>:
push   %rbp
mov    %rsp,%rbp
lea    0x2631b(%rip),%rax        # 2cb36 <short_months.6+0x61>
leaveq 
retq   
nopl   (%rax)

0000000000006820 <png_get_header_ver>:
push   %rbp
mov    %rsp,%rbp
lea    0x263d6(%rip),%rax        # 2cc01 <short_months.6+0x12c>
leaveq 
retq   
nopl   (%rax)

0000000000006830 <png_get_header_version>:
push   %rbp
mov    %rsp,%rbp
lea    0x263cd(%rip),%rax        # 2cc08 <short_months.6+0x133>
leaveq 
retq   
nopl   (%rax)

0000000000006840 <png_get_libpng_ver>:
push   %rbp
mov    %rsp,%rbp
callq  55f0 <png_get_header_ver@plt>
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

0000000000006850 <png_save_int_32>:
push   %rbp
mov    %rsp,%rbp
callq  5500 <png_save_uint_32@plt>
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

0000000000006860 <png_image_free>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
test   %rdi,%rdi
jne    686f <png_image_free+0xf>
leaveq 
retq   
mov    (%rdi),%rax
test   %rax,%rax
jne    6879 <png_image_free+0x19>
leaveq 
retq   
mov    0x10(%rax),%rax
test   %rax,%rax
je     6884 <png_image_free+0x24>
leaveq 
retq   
lea    0x3fa5(%rip),%rsi        # a830 <png_image_free_function>
mov    %rdi,%rdx
mov    %rdi,%rax
mov    %r15,-0x8(%rbp)
mov    %rdi,%r15
mov    %rax,%rdi
callq  b260 <png_safe_execute>
movq   $0x0,(%r15)
mov    -0x8(%rbp),%r15
leaveq 
retq   
nopl   (%rax)

00000000000068b0 <png_set_option>:
push   %rbp
mov    %rsp,%rbp
mov    $0x1,%eax
test   %rdi,%rdi
jne    68c0 <png_set_option+0x10>
leaveq 
retq   
test   %esi,%esi
jns    68c6 <png_set_option+0x16>
leaveq 
retq   
cmp    $0xb,%esi
jle    68cd <png_set_option+0x1d>
leaveq 
retq   
mov    %rsi,%rcx
and    $0x1,%ecx
test   %ecx,%ecx
je     68d9 <png_set_option+0x29>
leaveq 
retq   
mov    $0x3,%r8d
test   %edx,%edx
jne    68ea <png_set_option+0x3a>
mov    $0x2,%edx
jmp    68ed <png_set_option+0x3d>
mov    %r8,%rdx
mov    %rsi,%rcx
shl    %cl,%r8d
mov    %r8,%rsi
not    %esi
mov    0x388(%rdi),%eax
and    %eax,%esi
shl    %cl,%edx
or     %edx,%esi
movzbl %sil,%edx
mov    %edx,0x388(%rdi)
and    %r8d,%eax
sar    %cl,%eax
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)

0000000000006920 <png_zstream_error>:
push   %rbp
mov    %rsp,%rbp
mov    0x170(%rdi),%rax
test   %rax,%rax
je     6932 <png_zstream_error+0x12>
leaveq 
retq   
lea    0x7(%rsi),%eax
cmp    $0x9,%eax
ja     695a <png_zstream_error+0x3a>
lea    0x256bf(%rip),%rcx        # 2c000 <_fini+0xf3c>
movslq (%rcx,%rax,4),%rax
add    %rcx,%rax
jmpq   *%rax
lea    0x263a1(%rip),%rax        # 2ccf2 <short_months.6+0x21d>
mov    %rax,0x170(%rdi)
leaveq 
retq   
lea    0x262d5(%rip),%rax        # 2cc36 <short_months.6+0x161>
mov    %rax,0x170(%rdi)
leaveq 
retq   
lea    0x262e1(%rip),%rax        # 2cc52 <short_months.6+0x17d>
mov    %rax,0x170(%rdi)
leaveq 
retq   
lea    0x262ed(%rip),%rax        # 2cc6e <short_months.6+0x199>
mov    %rax,0x170(%rdi)
leaveq 
retq   
lea    0x262f3(%rip),%rax        # 2cc84 <short_months.6+0x1af>
mov    %rax,0x170(%rdi)
leaveq 
retq   
lea    0x262f1(%rip),%rax        # 2cc92 <short_months.6+0x1bd>
mov    %rax,0x170(%rdi)
leaveq 
retq   
lea    0x262f8(%rip),%rax        # 2cca9 <short_months.6+0x1d4>
mov    %rax,0x170(%rdi)
leaveq 
retq   
lea    0x262fa(%rip),%rax        # 2ccbb <short_months.6+0x1e6>
mov    %rax,0x170(%rdi)
leaveq 
retq   
lea    0x262fe(%rip),%rax        # 2cccf <short_months.6+0x1fa>
mov    %rax,0x170(%rdi)
leaveq 
retq   
lea    0x262f8(%rip),%rax        # 2ccd9 <short_months.6+0x204>
mov    %rax,0x170(%rdi)
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

00000000000069f0 <png_fixed>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rsi,%r14
mov    %rdi,%r15
movsd  0x26a42(%rip),%xmm1        # 2d450 <short_months.6+0x97b>
mulsd  %xmm1,%xmm0
movsd  0x26a3e(%rip),%xmm1        # 2d458 <short_months.6+0x983>
addsd  %xmm1,%xmm0
callq  57e0 <floor@plt>
movsd  0x26a3d(%rip),%xmm1        # 2d468 <short_months.6+0x993>
ucomisd %xmm1,%xmm0
ja     6a4f <png_fixed+0x5f>
movsd  0x26a27(%rip),%xmm1        # 2d460 <short_months.6+0x98b>
ucomisd %xmm1,%xmm0
jp     6a41 <png_fixed+0x51>
jb     6a4f <png_fixed+0x5f>
cvttsd2si %xmm0,%eax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
mov    %r14,%rsi
mov    %r15,%rdi
callq  acc0 <png_fixed_error>
nopw   0x0(%rax,%rax,1)

0000000000006a60 <png_user_version_check>:
push   %rbp
mov    %rsp,%rbp
sub    $0x90,%rsp
xor    %edx,%edx
lea    0x2618d(%rip),%r11        # 2cc01 <short_months.6+0x12c>
test   %rsi,%rsi
je     6a85 <png_user_version_check+0x25>
mov    $0xffffffffffffffff,%r8
mov    %rdx,%rax
jmp    6ae0 <png_user_version_check+0x80>
mov    0x130(%rdi),%eax
or     $0x20000,%eax
mov    %eax,0x130(%rdi)
mov    0x130(%rdi),%eax
and    $0x20000,%eax
test   %eax,%eax
jne    6af8 <png_user_version_check+0x98>
mov    $0x1,%eax
leaveq 
retq   
mov    0x130(%rdi),%r9d
or     $0x20000,%r9d
mov    %r9d,0x130(%rdi)
movsbq (%rsi,%r10,1),%rcx
cmp    $0x2e,%cl
jne    6ace <png_user_version_check+0x6e>
add    $0x1,%eax
cmp    $0x1,%eax
jg     6a96 <png_user_version_check+0x36>
test   %cl,%cl
je     6a96 <png_user_version_check+0x36>
movsbq (%r10,%r11,1),%rcx
test   %cl,%cl
je     6a96 <png_user_version_check+0x36>
add    $0x1,%r8d
movslq %r8d,%r10
movsbq (%r10,%r11,1),%r9
movsbq (%rsi,%r10,1),%rcx
cmp    %cl,%r9b
jne    6aac <png_user_version_check+0x4c>
jmp    6ac1 <png_user_version_check+0x61>
lea    -0x90(%rbp),%r8
mov    $0x80,%eax
lea    0x261fe(%rip),%rcx        # 2cd09 <short_months.6+0x234>
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rdi,%r14
mov    %r8,%rdi
mov    %rsi,%r15
mov    %rax,%rsi
callq  ad30 <png_safecat>
mov    %r15,%rcx
mov    %rax,%rdx
lea    -0x90(%rbp),%r15
mov    %r15,%rdi
mov    $0x80,%esi
callq  ad30 <png_safecat>
mov    %rax,%rdx
lea    0x261e0(%rip),%rcx        # 2cd28 <short_months.6+0x253>
mov    %r15,%rdi
mov    $0x80,%esi
callq  ad30 <png_safecat>
mov    %rax,%rdx
mov    %r15,%rdi
lea    0x2609f(%rip),%rcx        # 2cc01 <short_months.6+0x12c>
mov    $0x80,%esi
callq  ad30 <png_safecat>
mov    %r15,%rsi
mov    %r14,%rdi
callq  5390 <png_warning@plt>
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
xor    %eax,%eax
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

0000000000006b90 <png_create_png_struct>:
push   %rbp
mov    %rsp,%rbp
sub    $0x5e0,%rsp
mov    %rbx,-0x10(%rbp)
mov    %r12,-0x18(%rbp)
mov    %r13,-0x20(%rbp)
mov    %r14,-0x28(%rbp)
mov    %r15,-0x30(%rbp)
mov    %rdi,-0x8(%rbp)
mov    %r9,%rbx
mov    %rsi,%r12
mov    %rdx,%r13
mov    %rcx,%r14
mov    %r8,%r15
lea    -0x5e0(%rbp),%rdi
xor    %esi,%esi
mov    $0x4e8,%edx
callq  5350 <memset@plt>
mov    %rbx,%rdx
mov    %r15,%rsi
movl   $0xf4240,-0x1c4(%rbp)
movl   $0xf4240,-0x1c0(%rbp)
movl   $0x3e8,-0x1bc(%rbp)
movq   $0x7a1200,-0x1b8(%rbp)
mov    0x10(%rbp),%rcx
lea    -0x5e0(%rbp),%rbx
mov    %rbx,%rdi
callq  54d0 <png_set_mem_fn@plt>
mov    %r14,%rcx
mov    %r13,%rdx
mov    %r12,%rsi
mov    %rbx,%rdi
callq  5680 <png_set_error_fn@plt>
lea    -0xf8(%rbp),%r12
mov    %r12,%rdi
callq  5420 <_setjmp@plt>
test   %eax,%eax
je     6c53 <png_create_png_struct+0xc3>
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
mov    -0x10(%rbp),%rbx
xor    %eax,%eax
leaveq 
retq   
mov    %r12,-0x510(%rbp)
movq   $0x0,-0x508(%rbp)
mov    0x2b374(%rip),%rax        # 31fe0 <longjmp@GLIBC_2.2.5>
mov    %rax,-0x518(%rbp)
mov    %rbx,%rdi
mov    -0x8(%rbp),%rsi
callq  6a60 <png_user_version_check>
test   %eax,%eax
jne    6c9b <png_create_png_struct+0x10b>
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
mov    -0x10(%rbp),%rbx
xor    %eax,%eax
leaveq 
retq   
mov    %rbx,%rdi
mov    $0x4e8,%r12d
mov    %r12,%rsi
callq  5150 <png_malloc_warn@plt>
test   %rax,%rax
jne    6cc9 <png_create_png_struct+0x139>
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
mov    -0x10(%rbp),%rbx
xor    %eax,%eax
leaveq 
retq   
lea    0x70(%rip),%rcx        # 6d40 <png_zalloc>
mov    %rcx,-0x460(%rbp)
lea    0xa2(%rip),%rcx        # 6d80 <png_zfree>
mov    %rcx,-0x458(%rbp)
mov    %r12,%rdx
mov    %rax,%r12
mov    %rbx,%rsi
mov    %r12,-0x450(%rbp)
movq   $0x0,-0x510(%rbp)
movq   $0x0,-0x508(%rbp)
movq   $0x0,-0x518(%rbp)
mov    %r12,%rdi
callq  54c0 <memcpy@plt>
mov    %r12,%rax
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
mov    -0x10(%rbp),%rbx
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

0000000000006d40 <png_zalloc>:
push   %rbp
mov    %rsp,%rbp
xor    %eax,%eax
test   %rdi,%rdi
jne    6d4d <png_zalloc+0xd>
leaveq 
retq   
mov    %edx,%ecx
mov    $0xffffffffffffffff,%rax
xor    %edx,%edx
div    %rcx
mov    %esi,%edx
cmp    %rdx,%rax
jbe    6d70 <png_zalloc+0x30>
imul   %rdx,%rcx
mov    %rcx,%rsi
callq  5150 <png_malloc_warn@plt>
leaveq 
retq   
lea    0x25fc4(%rip),%rsi        # 2cd3b <short_months.6+0x266>
callq  5390 <png_warning@plt>
xor    %eax,%eax
leaveq 
retq   

0000000000006d80 <png_zfree>:
push   %rbp
mov    %rsp,%rbp
callq  5790 <png_free@plt>
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

0000000000006d90 <png_reset_crc>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x8(%rbp)
mov    %rdi,%r15
xor    %edi,%edi
mov    %rdi,%rsi
mov    %rdi,%rdx
callq  51c0 <crc32@plt>
mov    %eax,0x24c(%r15)
mov    -0x8(%rbp),%r15
leaveq 
retq   
nopl   0x0(%rax)

0000000000006dc0 <png_calculate_crc>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
xor    %r8d,%r8d
mov    $0x1,%ecx
mov    0x218(%rdi),%eax
and    $0x20000000,%eax
test   %eax,%eax
jne    6df3 <png_calculate_crc+0x33>
mov    0x130(%rdi),%eax
and    $0x800,%eax
test   %eax,%eax
je     6e08 <png_calculate_crc+0x48>
mov    %r8,%rcx
jmp    6e08 <png_calculate_crc+0x48>
mov    0x130(%rdi),%eax
and    $0x300,%eax
cmp    $0x300,%eax
jne    6e08 <png_calculate_crc+0x48>
mov    %r8,%rcx
test   %ecx,%ecx
jg     6e0e <png_calculate_crc+0x4e>
leaveq 
retq   
test   %rdx,%rdx
jne    6e15 <png_calculate_crc+0x55>
leaveq 
retq   
mov    0x24c(%rdi),%eax
mov    $0xffffffff,%ecx
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rdx,%rbx
mov    %rsi,%r12
mov    %rdi,%r13
mov    %rcx,%r14
jmp    6e4b <png_calculate_crc+0x8b>
sub    %rcx,%rbx
mov    %r15d,%ecx
add    %rcx,%r12
test   %rbx,%rbx
jne    6e86 <png_calculate_crc+0xc6>
mov    %r14,%r15
mov    %rax,%rdi
mov    %r12,%rsi
mov    %r15,%rdx
callq  51c0 <crc32@plt>
mov    %r15d,%ecx
cmp    %rbx,%rcx
jne    6e42 <png_calculate_crc+0x82>
mov    %eax,0x24c(%r13)
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
mov    %rbx,%r15
jmp    6e53 <png_calculate_crc+0x93>
nopl   0x0(%rax,%rax,1)

0000000000006e90 <png_chunk_unknown_handling>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %rsi,%rax
shr    $0x18,%eax
mov    %al,-0x5(%rbp)
mov    %rsi,%rax
shr    $0x10,%eax
mov    %al,-0x4(%rbp)
mov    %rsi,%rax
shr    $0x8,%eax
mov    %al,-0x3(%rbp)
mov    %sil,-0x2(%rbp)
movb   $0x0,-0x1(%rbp)
lea    -0x5(%rbp),%rsi
callq  5310 <png_handle_as_unknown@plt>
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)

0000000000006ed0 <png_colorspace_set_gamma>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    $0x1,%ecx
lea    0x25e7a(%rip),%rax        # 2cd5e <short_months.6+0x289>
cmp    $0xf,%edx
jg     6f03 <png_colorspace_set_gamma+0x33>
movzwl 0x4a(%rsi),%edx
or     $0x8000,%dx
mov    %dx,0x4a(%rsi)
mov    %rcx,%rdx
mov    %rax,%rsi
callq  b140 <png_chunk_report>
leaveq 
retq   
cmp    $0x2540be40,%edx
jg     6ee9 <png_colorspace_set_gamma+0x19>
mov    0x12c(%rdi),%eax
and    $0x8000,%eax
test   %eax,%eax
jne    6f29 <png_colorspace_set_gamma+0x59>
movzwl 0x4a(%rsi),%eax
and    $0x8000,%eax
test   %eax,%eax
jle    6f3d <png_colorspace_set_gamma+0x6d>
leaveq 
retq   
movzwl 0x4a(%rsi),%eax
and    $0x8,%eax
test   %eax,%eax
jle    6f1a <png_colorspace_set_gamma+0x4a>
lea    0x25e3c(%rip),%rax        # 2cd77 <short_months.6+0x2a2>
jmp    6ee9 <png_colorspace_set_gamma+0x19>
mov    %rsi,%r8
mov    %rdx,%rax
mov    %r15,-0x10(%rbp)
mov    %rdx,-0x8(%rbp)
mov    %rax,%rdx
mov    %rsi,%r15
mov    %r8,%rsi
callq  9120 <png_colorspace_check_gamma>
test   %eax,%eax
jne    6f63 <png_colorspace_set_gamma+0x93>
mov    -0x10(%rbp),%r15
leaveq 
retq   
mov    -0x8(%rbp),%rax
mov    %eax,(%r15)
movzwl 0x4a(%r15),%eax
or     $0x9,%ax
mov    %ax,0x4a(%r15)
mov    -0x10(%rbp),%r15
leaveq 
retq   
xchg   %ax,%ax

0000000000006f80 <png_colorspace_sync_info>:
push   %rbp
mov    %rsp,%rbp
movzwl 0x7e(%rsi),%eax
mov    %rax,%rcx
and    $0x8000,%ecx
test   %ecx,%ecx
jg     6fab <png_colorspace_sync_info+0x2b>
and    $0x80,%eax
test   %eax,%eax
jg     6fc9 <png_colorspace_sync_info+0x49>
mov    0x8(%rsi),%eax
and    $0xfffff7ff,%eax
mov    %eax,0x8(%rsi)
jmp    6fd4 <png_colorspace_sync_info+0x54>
mov    0x8(%rsi),%eax
and    $0xffffe7fa,%eax
mov    %eax,0x8(%rsi)
mov    $0x10,%edx
mov    $0xffffffffffffffff,%rcx
callq  5720 <png_free_data@plt>
leaveq 
retq   
mov    0x8(%rsi),%eax
or     $0x800,%eax
mov    %eax,0x8(%rsi)
movzwl 0x7e(%rsi),%eax
and    $0x2,%eax
test   %eax,%eax
jg     6fea <png_colorspace_sync_info+0x6a>
mov    0x8(%rsi),%eax
and    $0xfffffffb,%eax
mov    %eax,0x8(%rsi)
jmp    6ff3 <png_colorspace_sync_info+0x73>
mov    0x8(%rsi),%eax
or     $0x4,%eax
mov    %eax,0x8(%rsi)
movzwl 0x7e(%rsi),%eax
and    $0x1,%eax
test   %eax,%eax
jg     7009 <png_colorspace_sync_info+0x89>
mov    0x8(%rsi),%eax
and    $0xfffffffe,%eax
mov    %eax,0x8(%rsi)
leaveq 
retq   
mov    0x8(%rsi),%eax
or     $0x1,%eax
mov    %eax,0x8(%rsi)
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nop

0000000000007020 <png_colorspace_sync>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
test   %rsi,%rsi
jne    702f <png_colorspace_sync+0xf>
leaveq 
retq   
lea    0x34(%rsi),%rcx
lea    0x498(%rdi),%rax
mov    $0x4c,%edx
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rsi,%r14
mov    %rax,%rsi
mov    %rdi,%r15
mov    %rcx,%rdi
callq  54c0 <memcpy@plt>
mov    %r14,%rsi
mov    %r15,%rdi
callq  6f80 <png_colorspace_sync_info>
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
nopl   (%rax)

0000000000007070 <png_colorspace_set_chromaticities>:
push   %rbp
mov    %rsp,%rbp
sub    $0x50,%rsp
mov    %r12,-0x8(%rbp)
mov    %r13,-0x10(%rbp)
mov    %r14,-0x18(%rbp)
mov    %r15,-0x20(%rbp)
mov    %rdx,%r12
mov    %rsi,%r13
mov    %rcx,%r14
mov    %rdi,%r15
lea    -0x44(%rbp),%rdi
mov    %r12,%rsi
callq  9b30 <png_colorspace_check_xy>
test   %eax,%eax
je     70c6 <png_colorspace_set_chromaticities+0x56>
cmp    $0x1,%eax
je     70ed <png_colorspace_set_chromaticities+0x7d>
movzwl 0x4a(%r13),%eax
or     $0x8000,%ax
mov    %ax,0x4a(%r13)
mov    %r15,%rdi
lea    0x25cd7(%rip),%rsi        # 2cd98 <short_months.6+0x2c3>
callq  5470 <png_error@plt>
mov    %r12,%rdx
mov    %r13,%rsi
mov    %r15,%rdi
mov    %r14,%r8
lea    -0x44(%rbp),%rcx
callq  9c00 <png_colorspace_set_xy_and_XYZ>
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
leaveq 
retq   
movzwl 0x4a(%r13),%eax
or     $0x8000,%ax
mov    %ax,0x4a(%r13)
mov    %r15,%rdi
lea    0x25c7c(%rip),%rsi        # 2cd81 <short_months.6+0x2ac>
callq  5590 <png_benign_error@plt>
xor    %eax,%eax
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
leaveq 
retq   
xchg   %ax,%ax

0000000000007120 <png_colorspace_set_endpoints>:
push   %rbp
mov    %rsp,%rbp
sub    $0x60,%rsp
mov    %r13,-0x8(%rbp)
mov    %r14,-0x10(%rbp)
mov    %r15,-0x18(%rbp)
mov    (%rdx),%rax
mov    %rax,-0x5c(%rbp)
mov    0x8(%rdx),%rax
mov    %rax,-0x54(%rbp)
mov    0x10(%rdx),%rax
mov    %rax,-0x4c(%rbp)
mov    0x18(%rdx),%rax
mov    %rax,-0x44(%rbp)
mov    0x20(%rdx),%eax
mov    %eax,-0x3c(%rbp)
mov    %rsi,%r13
mov    %rdi,%r14
mov    %rcx,%r15
lea    -0x38(%rbp),%rdi
lea    -0x5c(%rbp),%rsi
callq  9b80 <png_colorspace_check_XYZ>
test   %eax,%eax
je     7195 <png_colorspace_set_endpoints+0x75>
cmp    $0x1,%eax
je     71b9 <png_colorspace_set_endpoints+0x99>
movzwl 0x4a(%r13),%eax
or     $0x8000,%ax
mov    %ax,0x4a(%r13)
mov    %r14,%rdi
lea    0x25c08(%rip),%rsi        # 2cd98 <short_months.6+0x2c3>
callq  5470 <png_error@plt>
mov    %r13,%rsi
mov    %r14,%rdi
mov    %r15,%r8
lea    -0x5c(%rbp),%rcx
lea    -0x38(%rbp),%rdx
callq  9c00 <png_colorspace_set_xy_and_XYZ>
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
leaveq 
retq   
movzwl 0x4a(%r13),%eax
or     $0x8000,%ax
mov    %ax,0x4a(%r13)
mov    %r14,%rdi
lea    0x25bee(%rip),%rsi        # 2cdbf <short_months.6+0x2ea>
callq  5590 <png_benign_error@plt>
xor    %eax,%eax
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)

00000000000071f0 <png_colorspace_set_sRGB>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
xor    %eax,%eax
movzwl 0x4a(%rsi),%ecx
mov    %rcx,%r8
and    $0x8000,%r8d
test   %r8d,%r8d
jle    720f <png_colorspace_set_sRGB+0x1f>
leaveq 
retq   
lea    0x25bbc(%rip),%r9        # 2cdd2 <short_months.6+0x2fd>
test   %edx,%edx
js     7316 <png_colorspace_set_sRGB+0x126>
cmp    $0x3,%edx
jg     7316 <png_colorspace_set_sRGB+0x126>
and    $0x4,%ecx
test   %ecx,%ecx
jg     732a <png_colorspace_set_sRGB+0x13a>
movzwl 0x4a(%rsi),%eax
mov    %rax,%rcx
and    $0x20,%ecx
test   %ecx,%ecx
jg     734a <png_colorspace_set_sRGB+0x15a>
mov    $0x2,%ecx
and    $0x2,%eax
test   %eax,%eax
jg     735a <png_colorspace_set_sRGB+0x16a>
mov    $0xb18f,%eax
mov    %rsi,%r8
mov    %r14,-0x10(%rbp)
mov    %r15,-0x18(%rbp)
mov    %rsi,%r14
mov    %r8,%rsi
mov    %rdx,%r15
mov    %rax,%rdx
callq  9120 <png_colorspace_check_gamma>
mov    %r15w,0x48(%r14)
movl   $0xb18f,(%r14)
movzwl 0x4a(%r14),%eax
or     $0xe7,%ax
mov    %ax,0x4a(%r14)
movabs $0x80e80000fa00,%rax
mov    %rax,0x4(%r14)
movabs $0xea6000007530,%rax
mov    %rax,0xc(%r14)
movabs $0x177000003a98,%rax
mov    %rax,0x14(%r14)
movabs $0x808400007a26,%rax
mov    %rax,0x1c(%r14)
movabs $0x53100000a117,%rax
mov    %rax,0x24(%r14)
movabs $0x8bae0000078d,%rax
mov    %rax,0x2c(%r14)
movabs $0x2e8f0001175d,%rax
mov    %rax,0x34(%r14)
movabs $0x1c3300004680,%rax
mov    %rax,0x3c(%r14)
movl   $0x1734d,0x44(%r14)
mov    $0x1,%eax
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
leaveq 
retq   
movslq %edx,%rcx
mov    %r9,%rdx
lea    0x25ab4(%rip),%r8        # 2cdd7 <short_months.6+0x302>
callq  9f10 <png_icc_profile_error>
leaveq 
retq   
movzwl 0x48(%rsi),%eax
cmp    %eax,%edx
je     7232 <png_colorspace_set_sRGB+0x42>
movslq %edx,%rcx
mov    %r9,%rdx
lea    0x25ab2(%rip),%r8        # 2cdf5 <short_months.6+0x320>
callq  9f10 <png_icc_profile_error>
leaveq 
retq   
lea    0x25ac3(%rip),%rsi        # 2ce14 <short_months.6+0x33f>
callq  5590 <png_benign_error@plt>
xor    %eax,%eax
leaveq 
retq   
lea    0x2562b(%rip),%r8        # 2c98c <sRGB_xy>
lea    0x4(%rsi),%rax
mov    $0x64,%ecx
mov    %r13,-0x8(%rbp)
mov    %r14,-0x10(%rbp)
mov    %r15,-0x18(%rbp)
mov    %rsi,%r13
mov    %rax,%rsi
mov    %rdx,%r14
mov    %rcx,%rdx
mov    %rdi,%r15
mov    %r8,%rdi
callq  9a20 <png_colorspace_endpoints_match>
test   %eax,%eax
je     73b0 <png_colorspace_set_sRGB+0x1c0>
mov    %r14,%rdx
mov    %r13,%rsi
mov    %r15,%rdi
mov    $0x2,%ecx
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
jmpq   7254 <png_colorspace_set_sRGB+0x64>
lea    0x25a80(%rip),%rsi        # 2ce37 <short_months.6+0x362>
mov    %r15,%rdi
mov    $0x2,%edx
callq  b140 <png_chunk_report>
mov    %r14,%rdx
mov    %r13,%rsi
mov    %r15,%rdi
mov    $0x2,%ecx
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
jmpq   7254 <png_colorspace_set_sRGB+0x64>
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

00000000000073f0 <png_colorspace_set_ICC>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
xor    %eax,%eax
movzwl 0x4a(%rsi),%r10d
and    $0x8000,%r10d
test   %r10d,%r10d
jle    740d <png_colorspace_set_ICC+0x1d>
leaveq 
retq   
mov    %rdi,%r10
mov    %rsi,%r11
mov    %rdx,%rax
mov    %r9,-0x30(%rbp)
mov    %rcx,%r9
mov    %rdi,-0x8(%rbp)
mov    %rsi,-0x10(%rbp)
mov    %rdx,-0x18(%rbp)
mov    %rcx,-0x20(%rbp)
mov    %r8,-0x28(%rbp)
mov    %r9,%rcx
mov    %rax,%rdx
mov    %r11,%rsi
mov    %r10,%rdi
callq  a070 <icc_check_length>
test   %eax,%eax
jne    744a <png_colorspace_set_ICC+0x5a>
xor    %eax,%eax
leaveq 
retq   
mov    -0x8(%rbp),%rdi
mov    -0x10(%rbp),%rsi
mov    -0x18(%rbp),%rdx
mov    -0x20(%rbp),%rcx
mov    -0x28(%rbp),%r8
mov    -0x30(%rbp),%r9
callq  7530 <png_icc_check_header>
test   %eax,%eax
jne    746f <png_colorspace_set_ICC+0x7f>
xor    %eax,%eax
leaveq 
retq   
mov    -0x8(%rbp),%rdi
mov    -0x10(%rbp),%rsi
mov    -0x28(%rbp),%r8
mov    -0x20(%rbp),%rcx
mov    -0x18(%rbp),%rdx
callq  79d0 <png_icc_check_tag_table>
test   %eax,%eax
jne    7490 <png_colorspace_set_ICC+0xa0>
xor    %eax,%eax
leaveq 
retq   
mov    -0x28(%rbp),%rdx
mov    -0x10(%rbp),%rsi
mov    -0x8(%rbp),%rdi
xor    %ecx,%ecx
callq  7b40 <png_icc_set_sRGB>
mov    $0x1,%eax
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

00000000000074b0 <png_icc_check_length>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %r15,-0x18(%rbp)
mov    %rcx,-0x20(%rbp)
mov    %rsi,-0x8(%rbp)
mov    %rdx,-0x10(%rbp)
mov    %rdi,%r15
callq  a070 <icc_check_length>
test   %eax,%eax
jne    74dc <png_icc_check_length+0x2c>
xor    %eax,%eax
mov    -0x18(%rbp),%r15
leaveq 
retq   
mov    $0x1,%eax
mov    0x428(%r15),%rdx
test   %rdx,%rdx
jne    74f3 <png_icc_check_length+0x43>
mov    -0x18(%rbp),%r15
leaveq 
retq   
mov    -0x20(%rbp),%rcx
mov    %ecx,%ecx
cmp    %rcx,%rdx
jb     7504 <png_icc_check_length+0x54>
mov    -0x18(%rbp),%r15
leaveq 
retq   
mov    %r15,%rdi
lea    0x25948(%rip),%r8        # 2ce56 <short_months.6+0x381>
mov    -0x10(%rbp),%rdx
mov    -0x8(%rbp),%rsi
callq  9f10 <png_icc_profile_error>
mov    -0x18(%rbp),%r15
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   0x0(%rax)

0000000000007530 <png_icc_check_header>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
movzbl (%r8),%eax
shl    $0x18,%eax
movzbl 0x1(%r8),%r10d
shl    $0x10,%r10d
add    %eax,%r10d
movzbl 0x2(%r8),%eax
shl    $0x8,%eax
add    %r10d,%eax
movzbl 0x3(%r8),%r10d
add    %r10d,%eax
cmp    %ecx,%eax
jne    7746 <png_icc_check_header+0x216>
movzbl 0x8(%r8),%eax
cmp    $0x3,%al
ja     7756 <png_icc_check_header+0x226>
movzbl 0x80(%r8),%eax
shl    $0x18,%eax
movzbl 0x81(%r8),%r10d
shl    $0x10,%r10d
add    %eax,%r10d
movzbl 0x82(%r8),%eax
shl    $0x8,%eax
add    %r10d,%eax
movzbl 0x83(%r8),%r10d
add    %eax,%r10d
cmp    $0x1555554a,%r10d
ja     7774 <png_icc_check_header+0x244>
lea    (%r10,%r10,2),%eax
lea    0x84(,%rax,4),%eax
cmp    %eax,%ecx
jb     7774 <png_icc_check_header+0x244>
movzbl 0x40(%r8),%eax
shl    $0x18,%eax
movzbl 0x41(%r8),%ecx
shl    $0x10,%ecx
add    %eax,%ecx
movzbl 0x42(%r8),%eax
shl    $0x8,%eax
add    %ecx,%eax
movzbl 0x43(%r8),%ecx
add    %eax,%ecx
cmp    $0xfffe,%ecx
ja     7785 <png_icc_check_header+0x255>
xor    %eax,%eax
cmp    $0x3,%ecx
jbe    7659 <png_icc_check_header+0x129>
mov    %ecx,%ecx
mov    %rdi,%r10
mov    %rdx,%r11
mov    %r9,-0x28(%rbp)
mov    %r12,-0x8(%rbp)
mov    %r13,-0x10(%rbp)
mov    %r14,-0x18(%rbp)
mov    %r15,-0x20(%rbp)
mov    %r8,%r12
mov    %rdi,%r13
mov    %r10,%rdi
mov    %rdx,%r14
mov    %r11,%rdx
mov    %rsi,%r15
mov    %rax,%rsi
lea    0x25897(%rip),%r8        # 2cecb <short_months.6+0x3f6>
callq  9f10 <png_icc_profile_error>
mov    %r14,%rdx
mov    %r15,%rsi
mov    %r13,%rdi
mov    %r12,%r8
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
mov    -0x28(%rbp),%r9
movzbl 0x24(%r8),%eax
shl    $0x18,%eax
movzbl 0x25(%r8),%ecx
shl    $0x10,%ecx
add    %eax,%ecx
movzbl 0x26(%r8),%eax
shl    $0x8,%eax
add    %ecx,%eax
movzbl 0x27(%r8),%ecx
add    %ecx,%eax
cmp    $0x61637370,%eax
jne    7795 <png_icc_check_header+0x265>
lea    0x44(%r8),%rax
lea    0x2531a(%rip),%rcx        # 2c9ac <D50_nCIEXYZ>
mov    $0xc,%r10d
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rbx,-0x8(%rbp)
mov    %r8,%rbx
mov    %r9,%r12
mov    %rsi,%r13
mov    %rcx,%rsi
mov    %rdx,%r14
mov    %r10,%rdx
mov    %rdi,%r15
mov    %rax,%rdi
callq  53d0 <memcmp@plt>
test   %eax,%eax
je     76e4 <png_icc_check_header+0x1b4>
lea    0x25826(%rip),%r8        # 2cefa <short_months.6+0x425>
xor    %esi,%esi
mov    %rsi,%rcx
mov    %r15,%rdi
mov    %r14,%rdx
callq  9f10 <png_icc_profile_error>
movzbl 0x10(%rbx),%ecx
shl    $0x18,%ecx
movzbl 0x11(%rbx),%eax
shl    $0x10,%eax
add    %eax,%ecx
movzbl 0x12(%rbx),%eax
shl    $0x8,%eax
add    %eax,%ecx
movzbl 0x13(%rbx),%eax
add    %ecx,%eax
cmp    $0x47524159,%eax
je     77a5 <png_icc_check_header+0x275>
cmp    $0x52474220,%eax
je     7802 <png_icc_check_header+0x2d2>
mov    %eax,%ecx
mov    %r14,%rdx
mov    %r13,%rsi
mov    %r15,%rdi
lea    0x25842(%rip),%r8        # 2cf6d <short_months.6+0x498>
callq  9f10 <png_icc_profile_error>
mov    -0x8(%rbp),%rbx
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
leaveq 
retq   
mov    %eax,%ecx
lea    0x25722(%rip),%r8        # 2ce71 <short_months.6+0x39c>
callq  9f10 <png_icc_profile_error>
leaveq 
retq   
mov    %rcx,%rax
and    $0x3,%eax
test   %eax,%eax
je     7573 <png_icc_check_header+0x43>
mov    %ecx,%ecx
lea    0x25722(%rip),%r8        # 2ce8f <short_months.6+0x3ba>
callq  9f10 <png_icc_profile_error>
leaveq 
retq   
mov    %r10d,%ecx
lea    0x25720(%rip),%r8        # 2ce9e <short_months.6+0x3c9>
callq  9f10 <png_icc_profile_error>
leaveq 
retq   
mov    %ecx,%ecx
lea    0x25724(%rip),%r8        # 2ceb2 <short_months.6+0x3dd>
callq  9f10 <png_icc_profile_error>
leaveq 
retq   
mov    %eax,%ecx
lea    0x2574a(%rip),%r8        # 2cee8 <short_months.6+0x413>
callq  9f10 <png_icc_profile_error>
leaveq 
retq   
and    $0x2,%r12d
test   %r12d,%r12d
jg     783b <png_icc_check_header+0x30b>
movzbl 0xc(%rbx),%eax
shl    $0x18,%eax
movzbl 0xd(%rbx),%ecx
shl    $0x10,%ecx
add    %eax,%ecx
movzbl 0xe(%rbx),%eax
shl    $0x8,%eax
add    %ecx,%eax
movzbl 0xf(%rbx),%ecx
add    %ecx,%eax
cmp    $0x6e6d636b,%eax
jbe    786b <png_icc_check_header+0x33b>
cmp    $0x73636e71,%eax
jbe    7886 <png_icc_check_header+0x356>
cmp    $0x73636e72,%eax
je     78bb <png_icc_check_header+0x38b>
cmp    $0x73706163,%eax
je     78bb <png_icc_check_header+0x38b>
jmpq   78a5 <png_icc_check_header+0x375>
and    $0x2,%r12d
test   %r12d,%r12d
jne    77b2 <png_icc_check_header+0x282>
mov    %r14,%rdx
mov    %r13,%rsi
mov    %r15,%rdi
mov    $0x52474220,%ecx
lea    0x256f4(%rip),%r8        # 2cf14 <short_months.6+0x43f>
callq  9f10 <png_icc_profile_error>
mov    -0x8(%rbp),%rbx
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
leaveq 
retq   
mov    %r14,%rdx
mov    %r13,%rsi
mov    %r15,%rdi
mov    $0x47524159,%ecx
lea    0x256f3(%rip),%r8        # 2cf43 <short_months.6+0x46e>
callq  9f10 <png_icc_profile_error>
mov    -0x8(%rbp),%rbx
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
leaveq 
retq   
cmp    $0x6c696e6a,%eax
jbe    789a <png_icc_check_header+0x36a>
cmp    $0x6c696e6b,%eax
je     7901 <png_icc_check_header+0x3d1>
cmp    $0x6d6e7472,%eax
je     78bb <png_icc_check_header+0x38b>
jmp    78a5 <png_icc_check_header+0x375>
cmp    $0x6e6d636c,%eax
je     7931 <png_icc_check_header+0x401>
cmp    $0x70727472,%eax
je     78bb <png_icc_check_header+0x38b>
jmp    78a5 <png_icc_check_header+0x375>
cmp    $0x61627374,%eax
je     794f <png_icc_check_header+0x41f>
mov    %eax,%ecx
lea    0x25755(%rip),%r8        # 2d003 <short_months.6+0x52e>
mov    %r15,%rdi
mov    %r14,%rdx
xor    %esi,%esi
callq  9f10 <png_icc_profile_error>
mov    $0x1,%eax
movzbl 0x14(%rbx),%edx
shl    $0x18,%edx
movzbl 0x15(%rbx),%ecx
shl    $0x10,%ecx
add    %ecx,%edx
movzbl 0x16(%rbx),%ecx
shl    $0x8,%ecx
add    %edx,%ecx
movzbl 0x17(%rbx),%edx
add    %edx,%ecx
cmp    $0x4c616220,%ecx
jne    797f <png_icc_check_header+0x44f>
mov    -0x8(%rbp),%rbx
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
leaveq 
retq   
mov    %r14,%rdx
mov    %r13,%rsi
mov    %r15,%rdi
mov    $0x6c696e6b,%ecx
lea    0x2569d(%rip),%r8        # 2cfb3 <short_months.6+0x4de>
callq  9f10 <png_icc_profile_error>
mov    -0x8(%rbp),%rbx
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
leaveq 
retq   
mov    $0x6e6d636c,%ecx
lea    0x2569e(%rip),%r8        # 2cfdb <short_months.6+0x506>
mov    %r15,%rdi
mov    %r14,%rdx
xor    %esi,%esi
callq  9f10 <png_icc_profile_error>
jmpq   78bb <png_icc_check_header+0x38b>
mov    %r14,%rdx
mov    %r13,%rsi
mov    %r15,%rdi
mov    $0x61627374,%ecx
lea    0x25629(%rip),%r8        # 2cf8d <short_months.6+0x4b8>
callq  9f10 <png_icc_profile_error>
mov    -0x8(%rbp),%rbx
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
leaveq 
retq   
cmp    $0x58595a20,%ecx
jne    799d <png_icc_check_header+0x46d>
mov    -0x8(%rbp),%rbx
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
leaveq 
retq   
mov    %ecx,%ecx
mov    %r14,%rdx
mov    %r13,%rsi
mov    %r15,%rdi
lea    0x25673(%rip),%r8        # 2d022 <short_months.6+0x54d>
callq  9f10 <png_icc_profile_error>
mov    -0x8(%rbp),%rbx
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

00000000000079d0 <png_icc_check_tag_table>:
push   %rbp
mov    %rsp,%rbp
sub    $0x40,%rsp
mov    %rdx,-0x38(%rbp)
mov    %rsi,-0x8(%rbp)
mov    %rbx,-0x10(%rbp)
mov    %r12,-0x18(%rbp)
mov    %r13,-0x20(%rbp)
mov    %r14,-0x28(%rbp)
mov    %r15,-0x30(%rbp)
movzbl 0x80(%r8),%esi
shl    $0x18,%esi
movzbl 0x81(%r8),%eax
shl    $0x10,%eax
add    %eax,%esi
movzbl 0x82(%r8),%eax
shl    $0x8,%eax
add    %esi,%eax
movzbl 0x83(%r8),%esi
lea    (%rsi,%rax,1),%r13d
lea    0x84(%r8),%r12
mov    %rdi,%rbx
mov    %rcx,%r14
xor    %esi,%esi
mov    %rsi,%r15
jmpq   7aec <png_icc_check_tag_table+0x11c>
movzbl 0x8(%r12),%edi
movzbl 0x9(%r12),%r8d
movzbl 0xa(%r12),%r9d
movzbl 0xb(%r12),%r11d
movzbl (%r12),%eax
shl    $0x18,%eax
movzbl 0x1(%r12),%ecx
shl    $0x10,%ecx
add    %eax,%ecx
movzbl 0x2(%r12),%eax
shl    $0x8,%eax
add    %ecx,%eax
movzbl 0x3(%r12),%ecx
lea    (%rcx,%rax,1),%r10d
movzbl 0x4(%r12),%eax
shl    $0x18,%eax
movzbl 0x5(%r12),%ecx
shl    $0x10,%ecx
add    %eax,%ecx
movzbl 0x6(%r12),%eax
shl    $0x8,%eax
add    %eax,%ecx
movzbl 0x7(%r12),%eax
add    %ecx,%eax
cmp    %r14d,%eax
ja     7b10 <png_icc_check_tag_table+0x140>
mov    %r14,%rcx
sub    %eax,%ecx
shl    $0x18,%edi
shl    $0x10,%r8d
add    %r8d,%edi
shl    $0x8,%r9d
add    %r9d,%edi
add    %r11d,%edi
cmp    %edi,%ecx
jb     7b10 <png_icc_check_tag_table+0x140>
and    $0x3,%eax
test   %eax,%eax
je     7ae4 <png_icc_check_tag_table+0x114>
mov    %r10d,%ecx
mov    %rbx,%rdi
lea    0x25585(%rip),%r8        # 2d05e <short_months.6+0x589>
callq  9f10 <png_icc_profile_error>
xor    %esi,%esi
mov    -0x38(%rbp),%rdx
add    $0xc,%r12
add    $0x1,%r15d
cmp    %r13d,%r15d
jb     7a3c <png_icc_check_tag_table+0x6c>
mov    $0x1,%eax
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
mov    -0x10(%rbp),%rbx
leaveq 
retq   
mov    %r10d,%ecx
mov    %rbx,%rdi
lea    0x25521(%rip),%r8        # 2d03e <short_months.6+0x569>
mov    -0x8(%rbp),%rsi
callq  9f10 <png_icc_profile_error>
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
mov    -0x10(%rbp),%rbx
leaveq 
retq   
nopl   0x0(%rax)

0000000000007b40 <png_icc_set_sRGB>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %rdx,-0x18(%rbp)
mov    %rdi,-0x8(%rbp)
mov    %rsi,-0x10(%rbp)
mov    %rdx,%rsi
mov    %rcx,%rdx
callq  a0a0 <png_compare_ICC_profile_with_sRGB>
test   %eax,%eax
jne    7b65 <png_icc_set_sRGB+0x25>
leaveq 
retq   
mov    -0x18(%rbp),%rdx
movzbl 0x40(%rdx),%eax
shl    $0x18,%eax
movzbl 0x41(%rdx),%ecx
shl    $0x10,%ecx
add    %eax,%ecx
movzbl 0x42(%rdx),%eax
shl    $0x8,%eax
add    %ecx,%eax
movzbl 0x43(%rdx),%ecx
lea    (%rcx,%rax,1),%edx
mov    -0x10(%rbp),%rsi
mov    -0x8(%rbp),%rdi
callq  71f0 <png_colorspace_set_sRGB>
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

0000000000007ba0 <png_colorspace_set_rgb_coefficients>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
movzbl 0x3d1(%rdi),%eax
test   %al,%al
je     7bb5 <png_colorspace_set_rgb_coefficients+0x15>
leaveq 
retq   
movzwl 0x4e2(%rdi),%eax
and    $0x2,%eax
test   %eax,%eax
jg     7bc5 <png_colorspace_set_rgb_coefficients+0x25>
leaveq 
retq   
movslq 0x4c0(%rdi),%rsi
mov    %esi,-0x24(%rbp)
movslq 0x4cc(%rdi),%rax
mov    %eax,-0x20(%rbp)
movslq 0x4d8(%rdi),%rcx
mov    %ecx,-0x1c(%rbp)
add    %esi,%eax
add    %ecx,%eax
test   %eax,%eax
jg     7bf7 <png_colorspace_set_rgb_coefficients+0x57>
lea    0x254c0(%rip),%rsi        # 2d0b2 <short_months.6+0x5dd>
callq  5470 <png_error@plt>
test   %esi,%esi
js     7beb <png_colorspace_set_rgb_coefficients+0x4b>
lea    -0x24(%rbp),%r9
mov    $0x8000,%r8d
mov    %r8,%rdx
mov    %rax,%rcx
mov    %r13,-0x8(%rbp)
mov    %r14,-0x10(%rbp)
mov    %r15,-0x18(%rbp)
mov    %rax,%r13
mov    %r8,%r14
mov    %rdi,%r15
mov    %r9,%rdi
callq  8980 <png_muldiv>
test   %eax,%eax
jne    7c31 <png_colorspace_set_rgb_coefficients+0x91>
mov    %r15,%rdi
jmp    7beb <png_colorspace_set_rgb_coefficients+0x4b>
movslq -0x24(%rbp),%rax
test   %eax,%eax
jns    7c3e <png_colorspace_set_rgb_coefficients+0x9e>
mov    %r15,%rdi
jmp    7beb <png_colorspace_set_rgb_coefficients+0x4b>
cmp    $0x8000,%eax
jle    7c4a <png_colorspace_set_rgb_coefficients+0xaa>
mov    %r15,%rdi
jmp    7beb <png_colorspace_set_rgb_coefficients+0x4b>
movslq -0x20(%rbp),%rsi
test   %esi,%esi
jns    7c57 <png_colorspace_set_rgb_coefficients+0xb7>
mov    %r15,%rdi
jmp    7beb <png_colorspace_set_rgb_coefficients+0x4b>
lea    -0x20(%rbp),%rdi
mov    %r14,%rdx
mov    %r13,%rcx
callq  8980 <png_muldiv>
test   %eax,%eax
jne    7c72 <png_colorspace_set_rgb_coefficients+0xd2>
mov    %r15,%rdi
jmpq   7beb <png_colorspace_set_rgb_coefficients+0x4b>
movslq -0x20(%rbp),%rax
test   %eax,%eax
jns    7c82 <png_colorspace_set_rgb_coefficients+0xe2>
mov    %r15,%rdi
jmpq   7beb <png_colorspace_set_rgb_coefficients+0x4b>
cmp    $0x8000,%eax
jle    7c91 <png_colorspace_set_rgb_coefficients+0xf1>
mov    %r15,%rdi
jmpq   7beb <png_colorspace_set_rgb_coefficients+0x4b>
movslq -0x1c(%rbp),%rsi
test   %esi,%esi
jns    7ca1 <png_colorspace_set_rgb_coefficients+0x101>
mov    %r15,%rdi
jmpq   7beb <png_colorspace_set_rgb_coefficients+0x4b>
mov    %r13,%rcx
mov    %r14,%rdx
lea    -0x1c(%rbp),%rdi
callq  8980 <png_muldiv>
test   %eax,%eax
jne    7cbc <png_colorspace_set_rgb_coefficients+0x11c>
mov    %r15,%rdi
jmpq   7beb <png_colorspace_set_rgb_coefficients+0x4b>
movslq -0x1c(%rbp),%rdx
test   %edx,%edx
jns    7ccc <png_colorspace_set_rgb_coefficients+0x12c>
mov    %r15,%rdi
jmpq   7beb <png_colorspace_set_rgb_coefficients+0x4b>
cmp    $0x8000,%edx
jle    7cdc <png_colorspace_set_rgb_coefficients+0x13c>
mov    %r15,%rdi
jmpq   7beb <png_colorspace_set_rgb_coefficients+0x4b>
movslq -0x20(%rbp),%rsi
movslq -0x24(%rbp),%rcx
lea    (%rsi,%rcx,1),%eax
add    %edx,%eax
cmp    $0x8001,%eax
jle    7cf8 <png_colorspace_set_rgb_coefficients+0x158>
mov    %r15,%rdi
jmpq   7beb <png_colorspace_set_rgb_coefficients+0x4b>
cmp    $0x8000,%eax
jle    7d3d <png_colorspace_set_rgb_coefficients+0x19d>
mov    $0xffffffffffffffff,%rax
test   %eax,%eax
jne    7d48 <png_colorspace_set_rgb_coefficients+0x1a8>
movslq -0x24(%rbp),%rdx
movslq -0x20(%rbp),%rcx
lea    (%rcx,%rdx,1),%eax
add    -0x1c(%rbp),%eax
cmp    $0x8000,%eax
jne    7d60 <png_colorspace_set_rgb_coefficients+0x1c0>
mov    %dx,0x3d2(%r15)
mov    %cx,0x3d4(%r15)
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
leaveq 
retq   
cmp    $0x7fff,%eax
jle    7d6f <png_colorspace_set_rgb_coefficients+0x1cf>
xor    %eax,%eax
jmp    7d06 <png_colorspace_set_rgb_coefficients+0x166>
cmp    %ecx,%esi
jge    7d76 <png_colorspace_set_rgb_coefficients+0x1d6>
movslq -0x24(%rbp),%rdx
movslq -0x20(%rbp),%rcx
cmp    %edx,%ecx
jle    7d81 <png_colorspace_set_rgb_coefficients+0x1e1>
add    -0x1c(%rbp),%eax
mov    %eax,-0x1c(%rbp)
jmp    7d0a <png_colorspace_set_rgb_coefficients+0x16a>
mov    %r15,%rdi
lea    0x2531e(%rip),%rsi        # 2d088 <short_months.6+0x5b3>
callq  5470 <png_error@plt>
mov    $0x1,%eax
jmp    7d06 <png_colorspace_set_rgb_coefficients+0x166>
cmp    %esi,%edx
jg     7d4c <png_colorspace_set_rgb_coefficients+0x1ac>
add    %esi,%eax
mov    %eax,-0x20(%rbp)
jmp    7d0a <png_colorspace_set_rgb_coefficients+0x16a>
cmp    -0x1c(%rbp),%edx
jl     7d58 <png_colorspace_set_rgb_coefficients+0x1b8>
add    %edx,%eax
mov    %eax,-0x24(%rbp)
jmpq   7d0a <png_colorspace_set_rgb_coefficients+0x16a>

0000000000007d90 <png_check_IHDR>:
push   %rbp
mov    %rsp,%rbp
sub    $0x40,%rsp
mov    %r9,-0x30(%rbp)
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %r8,-0x38(%rbp)
test   %esi,%esi
je     7dc9 <png_check_IHDR+0x39>
mov    %rdi,%rbx
mov    %rcx,%r13
mov    %rdx,%r14
mov    %rsi,%r15
xor    %r12d,%r12d
jmp    7de7 <png_check_IHDR+0x57>
mov    %rcx,%r13
mov    %rdx,%r14
mov    %rsi,%r15
lea    0x252fb(%rip),%rsi        # 2d0d4 <short_months.6+0x5ff>
mov    %rdi,%rbx
callq  5390 <png_warning@plt>
mov    $0x1,%r12d
cmp    $0x7fffffff,%r15d
jbe    7e05 <png_check_IHDR+0x75>
lea    0x252f9(%rip),%rsi        # 2d0f0 <short_months.6+0x61b>
mov    %rbx,%rdi
callq  5390 <png_warning@plt>
mov    $0x1,%r12d
lea    0x7(%r15),%eax
and    $0xfffffff8,%eax
mov    %eax,%edi
movabs $0x1ffffffffffffff8,%rsi
callq  a350 <png_gt>
test   %eax,%eax
je     7e36 <png_check_IHDR+0xa6>
lea    0x252e4(%rip),%rsi        # 2d10c <short_months.6+0x637>
mov    %rbx,%rdi
callq  5390 <png_warning@plt>
mov    $0x1,%r12d
cmp    0x41c(%rbx),%r15d
jbe    7e54 <png_check_IHDR+0xc4>
lea    0x252f5(%rip),%rsi        # 2d13b <short_months.6+0x666>
mov    %rbx,%rdi
callq  5390 <png_warning@plt>
mov    $0x1,%r12d
test   %r14d,%r14d
jne    7e6e <png_check_IHDR+0xde>
lea    0x25302(%rip),%rsi        # 2d162 <short_months.6+0x68d>
mov    %rbx,%rdi
callq  5390 <png_warning@plt>
mov    $0x1,%r12d
cmp    $0x7fffffff,%r14d
jbe    7e8c <png_check_IHDR+0xfc>
lea    0x25301(%rip),%rsi        # 2d17f <short_months.6+0x6aa>
mov    %rbx,%rdi
callq  5390 <png_warning@plt>
mov    $0x1,%r12d
cmp    0x420(%rbx),%r14d
jbe    7eaa <png_check_IHDR+0x11a>
lea    0x25300(%rip),%rsi        # 2d19c <short_months.6+0x6c7>
mov    %rbx,%rdi
callq  5390 <png_warning@plt>
mov    $0x1,%r12d
cmp    $0x1,%r13d
jne    7f91 <png_check_IHDR+0x201>
mov    -0x38(%rbp),%r14
test   %r14d,%r14d
js     7ecf <png_check_IHDR+0x13f>
cmp    $0x1,%r14d
je     7ecf <png_check_IHDR+0x13f>
cmp    $0x5,%r14d
je     7ecf <png_check_IHDR+0x13f>
cmp    $0x6,%r14d
jle    7ee4 <png_check_IHDR+0x154>
lea    0x25308(%rip),%rsi        # 2d1de <short_months.6+0x709>
mov    %rbx,%rdi
callq  5390 <png_warning@plt>
mov    $0x1,%r12d
cmp    $0x3,%r14d
je     7fd3 <png_check_IHDR+0x243>
cmp    $0x2,%r14d
je     7f00 <png_check_IHDR+0x170>
cmp    $0x4,%r14d
je     7f00 <png_check_IHDR+0x170>
cmp    $0x6,%r14d
jne    7f1b <png_check_IHDR+0x18b>
cmp    $0x7,%r13d
jg     7f1b <png_check_IHDR+0x18b>
lea    0x252ec(%rip),%rsi        # 2d1f9 <short_months.6+0x724>
mov    %rbx,%rdi
callq  5390 <png_warning@plt>
mov    $0x1,%r12d
mov    -0x30(%rbp),%rax
cmp    $0x1,%eax
jle    7f39 <png_check_IHDR+0x1a9>
lea    0x252ff(%rip),%rsi        # 2d22a <short_months.6+0x755>
mov    %rbx,%rdi
callq  5390 <png_warning@plt>
mov    $0x1,%r12d
movslq 0x10(%rbp),%rax
test   %eax,%eax
je     7f56 <png_check_IHDR+0x1c6>
lea    0x25303(%rip),%rsi        # 2d24b <short_months.6+0x776>
mov    %rbx,%rdi
callq  5390 <png_warning@plt>
mov    $0x1,%r12d
mov    0x12c(%rbx),%eax
and    $0x1000,%eax
test   %eax,%eax
jne    7fe2 <png_check_IHDR+0x252>
movslq 0x18(%rbp),%rcx
test   %ecx,%ecx
jne    8004 <png_check_IHDR+0x274>
cmp    $0x1,%r12d
je     8053 <png_check_IHDR+0x2c3>
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
cmp    $0x2,%r13d
je     7eb4 <png_check_IHDR+0x124>
cmp    $0x4,%r13d
je     7eb4 <png_check_IHDR+0x124>
cmp    $0x8,%r13d
je     7eb4 <png_check_IHDR+0x124>
cmp    $0x10,%r13d
je     7eb4 <png_check_IHDR+0x124>
lea    0x25204(%rip),%rsi        # 2d1c4 <short_months.6+0x6ef>
mov    %rbx,%rdi
callq  5390 <png_warning@plt>
mov    $0x1,%r12d
jmpq   7eb4 <png_check_IHDR+0x124>
cmp    $0x8,%r13d
jg     7f06 <png_check_IHDR+0x176>
jmpq   7eee <png_check_IHDR+0x15e>
mov    0x3d8(%rbx),%eax
test   %eax,%eax
je     7f65 <png_check_IHDR+0x1d5>
lea    0x25277(%rip),%rsi        # 2d26e <short_months.6+0x799>
mov    %rbx,%rdi
callq  5390 <png_warning@plt>
jmpq   7f65 <png_check_IHDR+0x1d5>
mov    0x3d8(%rbx),%eax
and    $0x4,%eax
test   %eax,%eax
jne    8062 <png_check_IHDR+0x2d2>
lea    0x25287(%rip),%rsi        # 2d29f <short_months.6+0x7ca>
mov    %rbx,%rdi
callq  5390 <png_warning@plt>
mov    $0x1,%r12d
mov    0x12c(%rbx),%eax
and    $0x1000,%eax
test   %eax,%eax
je     7f71 <png_check_IHDR+0x1e1>
lea    0x2527d(%rip),%rsi        # 2d2bd <short_months.6+0x7e8>
mov    %rbx,%rdi
callq  5390 <png_warning@plt>
mov    $0x1,%r12d
jmpq   7f71 <png_check_IHDR+0x1e1>
mov    %rbx,%rdi
lea    0x2527e(%rip),%rsi        # 2d2db <short_months.6+0x806>
callq  5470 <png_error@plt>
cmp    $0x40,%ecx
jne    8011 <png_check_IHDR+0x281>
mov    0x12c(%rbx),%eax
and    $0x1000,%eax
test   %eax,%eax
jne    8011 <png_check_IHDR+0x281>
cmp    $0x2,%r14d
je     8026 <png_check_IHDR+0x296>
cmp    $0x6,%r14d
je     8026 <png_check_IHDR+0x296>
jmp    8011 <png_check_IHDR+0x281>
data16 nopw %cs:0x0(%rax,%rax,1)
nop

0000000000008090 <png_ascii_from_fp>:
push   %rbp
mov    %rsp,%rbp
sub    $0x80,%rsp
test   %ecx,%ecx
jne    80a4 <png_ascii_from_fp+0x14>
mov    $0xf,%ecx
cmp    $0x10,%ecx
jbe    80ae <png_ascii_from_fp+0x1e>
mov    $0x10,%ecx
lea    0x5(%rcx),%eax
mov    %eax,%eax
cmp    %rdx,%rax
jbe    80c4 <png_ascii_from_fp+0x34>
lea    0x2522e(%rip),%rsi        # 2d2ed <short_months.6+0x818>
callq  5470 <png_error@plt>
xorpd  %xmm1,%xmm1
ucomisd %xmm1,%xmm0
jp     80e7 <png_ascii_from_fp+0x57>
jae    80e7 <png_ascii_from_fp+0x57>
movsd  0x253b0(%rip),%xmm1        # 2d488 <short_months.6+0x9b3>
xorpd  %xmm1,%xmm0
movb   $0x2d,(%rsi)
add    $0x1,%rsi
add    $0xffffffffffffffff,%rdx
xor    %eax,%eax
movsd  0x2539f(%rip),%xmm1        # 2d490 <short_months.6+0x9bb>
ucomisd %xmm1,%xmm0
jae    8105 <png_ascii_from_fp+0x75>
test   %rax,%rax
jne    811c <png_ascii_from_fp+0x8c>
movb   $0x30,(%rsi)
movb   $0x0,0x1(%rsi)
leaveq 
retq   
movsd  0x25373(%rip),%xmm1        # 2d480 <short_months.6+0x9ab>
ucomisd %xmm1,%xmm0
jp     8115 <png_ascii_from_fp+0x85>
jbe    812d <png_ascii_from_fp+0x9d>
mov    $0x1,%eax
jmp    80f7 <png_ascii_from_fp+0x67>
movb   $0x69,(%rsi)
movb   $0x6e,0x1(%rsi)
movb   $0x66,0x2(%rsi)
movb   $0x0,0x3(%rsi)
leaveq 
retq   
lea    -0x78(%rbp),%r8
movapd %xmm0,%xmm1
mov    %r12,-0x18(%rbp)
mov    %r13,-0x20(%rbp)
mov    %r14,-0x28(%rbp)
mov    %r15,-0x30(%rbp)
mov    %rdi,-0x8(%rbp)
mov    %r8,%rdi
mov    %rsi,%r12
mov    %rax,%r13
mov    %rcx,%r14
mov    %rbx,%r15
mov    %rdx,%rbx
movdqu %xmm0,-0x60(%rbp)
movapd %xmm1,%xmm0
callq  5410 <frexp@plt>
movslq -0x78(%rbp),%rdx
mov    %rdx,%rcx
shl    $0x2,%ecx
lea    (%rdx,%rdx,8),%eax
lea    (%rcx,%rax,8),%eax
lea    (%rdx,%rax,1),%edi
sar    $0x8,%edi
mov    %edi,-0x78(%rbp)
callq  a370 <png_pow10>
movapd %xmm0,%xmm2
movsd  0x252fd(%rip),%xmm1        # 2d490 <short_months.6+0x9bb>
movdqu -0x60(%rbp),%xmm0
jmp    81b5 <png_ascii_from_fp+0x125>
movapd %xmm0,%xmm2
movslq -0x78(%rbp),%rax
add    $0x1,%eax
mov    %eax,-0x78(%rbp)
movsd  0x252e0(%rip),%xmm1        # 2d490 <short_months.6+0x9bb>
movdqu -0x60(%rbp),%xmm0
ucomisd %xmm1,%xmm2
jp     81bd <png_ascii_from_fp+0x12d>
jb     81c3 <png_ascii_from_fp+0x133>
ucomisd %xmm2,%xmm0
jbe    81ee <png_ascii_from_fp+0x15e>
movslq -0x78(%rbp),%rdi
add    $0x1,%edi
movdqu %xmm2,-0x50(%rbp)
callq  a370 <png_pow10>
movsd  0x252a4(%rip),%xmm1        # 2d480 <short_months.6+0x9ab>
ucomisd %xmm1,%xmm0
jp     81e4 <png_ascii_from_fp+0x154>
jbe    819a <png_ascii_from_fp+0x10a>
movdqu -0x50(%rbp),%xmm2
movdqu -0x60(%rbp),%xmm0
movsd  0x2527a(%rip),%xmm1        # 2d470 <short_months.6+0x99b>
movsd  0x2527a(%rip),%xmm3        # 2d478 <short_months.6+0x9a3>
divsd  %xmm2,%xmm0
jmp    8212 <png_ascii_from_fp+0x182>
divsd  %xmm1,%xmm0
movslq -0x78(%rbp),%rax
add    $0x1,%eax
mov    %eax,-0x78(%rbp)
ucomisd %xmm3,%xmm0
jae    8204 <png_ascii_from_fp+0x174>
movsd  0x25238(%rip),%xmm2        # 2d458 <short_months.6+0x983>
lea    -0x68(%rbp),%rdi
movslq -0x78(%rbp),%rcx
test   %ecx,%ecx
js     823b <png_ascii_from_fp+0x1ab>
mov    %r15,-0x10(%rbp)
mov    %r13,%rcx
mov    %rcx,%r15
jmpq   82f3 <png_ascii_from_fp+0x263>
cmp    $0xfffffffe,%ecx
jge    834c <png_ascii_from_fp+0x2bc>
mov    %r15,-0x10(%rbp)
mov    %r13,%rcx
mov    %rcx,%r15
jmpq   82f3 <png_ascii_from_fp+0x263>
cmp    $0xffffffff,%edx
je     8273 <png_ascii_from_fp+0x1e3>
test   %edx,%edx
jne    8269 <png_ascii_from_fp+0x1d9>
movb   $0x2e,(%r12)
add    $0x1,%r12
add    $0xffffffffffffffff,%rbx
movslq -0x78(%rbp),%rdx
add    $0xffffffff,%edx
mov    %edx,-0x78(%rbp)
movb   $0x30,(%r12)
add    $0x1,%r12
add    $0xffffffff,%eax
movslq -0x78(%rbp),%rdx
test   %eax,%eax
jne    8253 <png_ascii_from_fp+0x1c3>
cmp    $0xffffffff,%edx
je     82a7 <png_ascii_from_fp+0x217>
test   %edx,%edx
jne    829d <png_ascii_from_fp+0x20d>
movb   $0x2e,(%r12)
add    $0x1,%r12
add    $0xffffffffffffffff,%rbx
movslq -0x78(%rbp),%rax
add    $0xffffffff,%eax
mov    %eax,-0x78(%rbp)
movsd  -0x68(%rbp),%xmm2
cvttsd2si %xmm2,%eax
add    $0x30,%eax
mov    %al,(%r12)
add    $0x1,%r12
sub    %ecx,%r15d
lea    0x1(%r15,%r13,1),%r13d
xor    %r15d,%r15d
mov    %r15,%rcx
lea    (%r14,%rcx,1),%edx
lea    (%r15,%r13,1),%eax
cmp    %eax,%edx
jbe    835e <png_ascii_from_fp+0x2ce>
movsd  0x251af(%rip),%xmm2        # 2d490 <short_months.6+0x9bb>
ucomisd %xmm2,%xmm0
jbe    835e <png_ascii_from_fp+0x2ce>
lea    -0x68(%rbp),%rdi
movsd  0x25165(%rip),%xmm2        # 2d458 <short_months.6+0x983>
mulsd  %xmm1,%xmm0
lea    (%r14,%rcx,1),%edx
lea    0x1(%r15,%r13,1),%eax
cmp    %eax,%edx
ja     839d <png_ascii_from_fp+0x30d>
addsd  %xmm2,%xmm0
mov    %r14,-0x50(%rbp)
mov    %r15,%r14
mov    %rcx,%r15
movdqu %xmm1,-0x60(%rbp)
callq  57e0 <floor@plt>
movsd  %xmm0,-0x68(%rbp)
movsd  0x2516b(%rip),%xmm2        # 2d498 <short_months.6+0x9c3>
ucomisd %xmm2,%xmm0
ja     83d7 <png_ascii_from_fp+0x347>
mov    %r15,%rcx
mov    %r14,%r15
mov    -0x50(%rbp),%r14
movdqu -0x60(%rbp),%xmm1
xorpd  %xmm0,%xmm0
jmp    83ba <png_ascii_from_fp+0x32a>
neg    %ecx
movl   $0x0,-0x78(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rcx,%r15
jmp    82f3 <png_ascii_from_fp+0x263>
movslq -0x78(%rbp),%rax
cmp    $0xffffffff,%eax
jl     8370 <png_ascii_from_fp+0x2e0>
cmp    $0x2,%eax
jle    83f7 <png_ascii_from_fp+0x367>
movb   $0x45,(%r12)
mov    %r13d,%eax
sub    %rax,%rbx
lea    0x1(%r12),%rcx
mov    $0xcccccccd,%r8d
movslq -0x78(%rbp),%rdi
test   %edi,%edi
js     8420 <png_ascii_from_fp+0x390>
add    $0xffffffffffffffff,%rbx
xor    %esi,%esi
jmpq   8454 <png_ascii_from_fp+0x3c4>
mov    %r14,-0x60(%rbp)
mov    %rcx,%r14
movdqu %xmm1,-0x40(%rbp)
callq  52d0 <modf@plt>
mov    %r14,%rcx
mov    -0x60(%rbp),%r14
movdqu -0x40(%rbp),%xmm1
movsd  -0x68(%rbp),%xmm3
xorpd  %xmm2,%xmm2
ucomisd %xmm2,%xmm3
jp     83cf <png_ascii_from_fp+0x33f>
je     846c <png_ascii_from_fp+0x3dc>
mov    %r15,%rax
jmpq   827f <png_ascii_from_fp+0x1ef>
test   %r14d,%r14d
jne    8484 <png_ascii_from_fp+0x3f4>
mov    -0x50(%rbp),%r14
movdqu -0x60(%rbp),%xmm1
jmpq   84cf <png_ascii_from_fp+0x43f>
movb   $0x30,(%r12)
add    $0x1,%r12
movslq -0x78(%rbp),%rcx
lea    -0x1(%rcx),%eax
mov    %eax,-0x78(%rbp)
test   %ecx,%ecx
jg     83ee <png_ascii_from_fp+0x35e>
movb   $0x0,(%r12)
mov    -0x10(%rbp),%rbx
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
leaveq 
retq   
movb   $0x2d,(%rcx)
mov    -0x78(%rbp),%edi
neg    %edi
lea    0x2(%r12),%rcx
add    $0xfffffffffffffffe,%rbx
xor    %esi,%esi
jmp    8454 <png_ascii_from_fp+0x3c4>
mov    %r8,%rax
mul    %edi
shr    $0x3,%edx
lea    (%rdx,%rdx,4),%eax
add    %eax,%eax
sub    %eax,%edi
add    $0x30,%edi
mov    %esi,%eax
mov    %dil,-0x72(%rbp,%rax,1)
add    $0x1,%esi
mov    %rdx,%rdi
test   %edi,%edi
jne    8435 <png_ascii_from_fp+0x3a5>
mov    %esi,%eax
cmp    %rax,%rbx
ja     850b <png_ascii_from_fp+0x47b>
mov    -0x8(%rbp),%rdi
jmpq   80b8 <png_ascii_from_fp+0x28>
add    $0x1,%r15d
test   %r13d,%r13d
jne    82c9 <png_ascii_from_fp+0x239>
add    $0x1,%ecx
xor    %r13d,%r13d
jmpq   82c9 <png_ascii_from_fp+0x239>
movsd  0x24fec(%rip),%xmm0        # 2d478 <short_months.6+0x9a3>
movsd  %xmm0,-0x68(%rbp)
lea    -0x1(%r14),%eax
test   %r13d,%r13d
je     8528 <png_ascii_from_fp+0x498>
mov    %r15,%rcx
mov    %rax,%r15
mov    -0x50(%rbp),%r14
movdqu -0x60(%rbp),%xmm1
xorpd  %xmm0,%xmm0
jmpq   83ba <png_ascii_from_fp+0x32a>
add    $0x1,%edx
mov    %edx,-0x78(%rbp)
mov    %rcx,%r12
add    $0xffffffd1,%eax
cvtsi2sd %eax,%xmm0
movsd  %xmm0,-0x68(%rbp)
add    $0xffffffff,%r13d
test   %r13d,%r13d
je     8544 <png_ascii_from_fp+0x4b4>
movsd  -0x68(%rbp),%xmm0
ucomisd %xmm2,%xmm0
jbe    8544 <png_ascii_from_fp+0x4b4>
lea    -0x1(%r12),%rcx
movsbq (%rcx),%rax
movslq -0x78(%rbp),%rdx
cmp    $0xffffffff,%edx
jne    84b6 <png_ascii_from_fp+0x426>
cmp    $0x2e,%al
je     855e <png_ascii_from_fp+0x4ce>
mov    %rcx,%r12
jmp    84bf <png_ascii_from_fp+0x42f>
add    $0xffffffff,%esi
mov    %esi,%eax
movsbq -0x72(%rbp,%rax,1),%rax
mov    %al,(%rcx)
add    $0x1,%rcx
test   %esi,%esi
jne    84fa <png_ascii_from_fp+0x46a>
movb   $0x0,(%rcx)
mov    -0x10(%rbp),%rbx
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
leaveq 
retq   
lea    -0x1(%r15),%ecx
mov    %rax,%r15
xor    %r13d,%r13d
mov    -0x50(%rbp),%r14
movdqu -0x60(%rbp),%xmm1
xorpd  %xmm0,%xmm0
jmpq   83ba <png_ascii_from_fp+0x32a>
movsd  -0x68(%rbp),%xmm0
ucomisd %xmm2,%xmm0
ja     8577 <png_ascii_from_fp+0x4e7>
mov    %r15,%rcx
xor    %r15d,%r15d
xorpd  %xmm0,%xmm0
jmpq   83ba <png_ascii_from_fp+0x32a>
add    $0xfffffffffffffffe,%r12
movsbq (%r12),%rax
movl   $0x1,-0x78(%rbp)
add    $0x1,%rbx
jmpq   84bf <png_ascii_from_fp+0x42f>
movslq -0x78(%rbp),%rax
cmp    $0xffffffff,%eax
je     85a2 <png_ascii_from_fp+0x512>
add    $0x1,%eax
mov    %eax,-0x78(%rbp)
mov    %r15,%rcx
movsd  0x24ee7(%rip),%xmm0        # 2d478 <short_months.6+0x9a3>
movsd  %xmm0,-0x68(%rbp)
xor    %r15d,%r15d
xorpd  %xmm0,%xmm0
jmpq   83ba <png_ascii_from_fp+0x32a>
add    $0xffffffffffffffff,%r12
movsbq (%r12),%rax
cmp    $0x2e,%al
jne    8586 <png_ascii_from_fp+0x4f6>
movl   $0x1,-0x78(%rbp)
add    $0x1,%rbx
jmp    8586 <png_ascii_from_fp+0x4f6>
nopl   0x0(%rax)

00000000000085c0 <png_ascii_from_fixed>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
cmp    $0xc,%rdx
ja     85da <png_ascii_from_fixed+0x1a>
lea    0x24d18(%rip),%rsi        # 2d2ed <short_months.6+0x818>
callq  5470 <png_error@plt>
test   %ecx,%ecx
jns    85e7 <png_ascii_from_fixed+0x27>
neg    %ecx
movb   $0x2d,(%rsi)
add    $0x1,%rsi
cmp    $0x80000000,%ecx
ja     85ce <png_ascii_from_fixed+0xe>
mov    $0xcccccccd,%r9d
xor    %edi,%edi
mov    $0x10,%r8d
mov    %rsi,-0x8(%rbp)
mov    %r8,%rsi
jmp    8631 <png_ascii_from_fixed+0x71>
mov    %r9,%rax
mul    %ecx
shr    $0x3,%edx
lea    (%rdx,%rdx,4),%eax
lea    (%rax,%rax,1),%r11d
mov    %rcx,%rax
sub    %r11d,%eax
lea    0x30(%rax),%r10d
mov    %edi,%eax
mov    %r10b,-0x12(%rbp,%rax,1)
add    $0x1,%edi
cmp    $0x10,%esi
je     863f <png_ascii_from_fixed+0x7f>
mov    %rdx,%rcx
test   %ecx,%ecx
jne    8606 <png_ascii_from_fixed+0x46>
test   %edi,%edi
je     864c <png_ascii_from_fixed+0x8c>
mov    -0x8(%rbp),%rax
jmp    866d <png_ascii_from_fixed+0xad>
cmp    %r11d,%ecx
jne    8685 <png_ascii_from_fixed+0xc5>
mov    %rdx,%rcx
mov    %r8,%rsi
jmp    8631 <png_ascii_from_fixed+0x71>
mov    -0x8(%rbp),%rax
movb   $0x30,(%rax)
add    $0x1,%rax
movb   $0x0,(%rax)
leaveq 
retq   
add    $0xffffffff,%edi
mov    %edi,%ecx
movsbq -0x12(%rbp,%rcx,1),%rcx
mov    %cl,(%rax)
add    $0x1,%rax
cmp    $0x5,%edi
ja     865c <png_ascii_from_fixed+0x9c>
cmp    $0x5,%esi
ja     8657 <png_ascii_from_fixed+0x97>
movb   $0x2e,(%rax)
add    $0x1,%rax
mov    $0x5,%ecx
jmp    8697 <png_ascii_from_fixed+0xd7>
mov    %rdx,%rcx
mov    %rdi,%rsi
jmp    8631 <png_ascii_from_fixed+0x71>
movb   $0x30,(%rax)
add    $0x1,%rax
add    $0xffffffff,%ecx
cmp    %ecx,%edi
jb     868d <png_ascii_from_fixed+0xcd>
jmp    86ae <png_ascii_from_fixed+0xee>
add    $0xffffffff,%edi
mov    %edi,%ecx
movsbq -0x12(%rbp,%rcx,1),%rcx
mov    %cl,(%rax)
add    $0x1,%rax
cmp    %edi,%esi
jbe    869d <png_ascii_from_fixed+0xdd>
jmp    8657 <png_ascii_from_fixed+0x97>
data16 nopw %cs:0x0(%rax,%rax,1)
nop

00000000000086c0 <png_check_fp_number>:
push   %rbp
mov    %rsp,%rbp
sub    $0x70,%rsp
mov    %r15,-0x38(%rbp)
mov    %r14,-0x30(%rbp)
mov    %r13,-0x28(%rbp)
mov    %r12,-0x20(%rbp)
mov    %rbx,-0x18(%rbp)
mov    %rcx,-0x8(%rbp)
mov    %rdx,-0x10(%rbp)
mov    (%rcx),%rbx
movslq (%rdx),%rax
mov    $0x4,%r15d
mov    $0x10,%r14d
mov    $0x8,%r13d
mov    $0x20,%r11d
mov    $0x84,%r12d
mov    $0x108,%edx
mov    $0x5,%ecx
mov    $0x44,%r8d
mov    %r8,-0x68(%rbp)
mov    $0xc4,%r8d
mov    %r8,-0x60(%rbp)
mov    $0x50,%r8d
mov    %r8,-0x58(%rbp)
mov    $0x48,%r8d
mov    %r8,-0x50(%rbp)
mov    $0x148,%r8d
mov    %r8,-0x48(%rbp)
mov    $0x60,%r8d
mov    %r8,-0x40(%rbp)
jmp    876c <png_check_fp_number+0xac>
and    $0x1c0,%eax
lea    0x11(%rax),%ecx
mov    -0x70(%rbp),%rax
or     %ecx,%eax
add    $0x1,%rbx
mov    $0x5,%ecx
mov    $0x108,%edx
mov    %rax,%r10
and    $0x8,%r10d
cmp    %rsi,%rbx
jae    87ab <png_check_fp_number+0xeb>
movsbq (%rdi,%rbx,1),%r8
add    $0xffffffd5,%r8d
cmp    $0x3a,%r8d
ja     87ab <png_check_fp_number+0xeb>
lea    0x2389a(%rip),%r9        # 2c028 <_fini+0xf64>
movslq (%r9,%r8,4),%r8
add    %r9,%r8
jmpq   *%r8
mov    $0x21,%ecx
mov    %r11,%rdx
mov    %rdx,%r9
pushq  -0x40(%rbp)
popq   -0x70(%rbp)
jmp    87e8 <png_check_fp_number+0x128>
test   %r10d,%r10d
mov    -0x10(%rbp),%rcx
mov    %eax,(%rcx)
mov    -0x8(%rbp),%rax
mov    %rbx,(%rax)
jle    885c <png_check_fp_number+0x19c>
mov    $0x1,%eax
mov    -0x18(%rbp),%rbx
mov    -0x20(%rbp),%r12
mov    -0x28(%rbp),%r13
mov    -0x30(%rbp),%r14
mov    -0x38(%rbp),%r15
leaveq 
retq   
mov    %r15,%rdx
mov    %rdx,%r9
pushq  -0x68(%rbp)
popq   -0x70(%rbp)
mov    %rax,%r8
and    $0x3,%r8d
lea    -0x4(%r9,%r8,1),%r8d
cmp    $0x1d,%r8d
ja     87ab <png_check_fp_number+0xeb>
lea    0x23913(%rip),%r9        # 2c114 <_fini+0x1050>
movslq (%r9,%r8,4),%r8
add    %r9,%r8
jmpq   *%r8
or     $0x48,%eax
jmpq   875e <png_check_fp_number+0x9e>
mov    $0x85,%ecx
mov    %r12,%rdx
mov    %r15,%r9
pushq  -0x60(%rbp)
popq   -0x70(%rbp)
jmp    87e8 <png_check_fp_number+0x128>
mov    $0x11,%ecx
mov    %r14,%rdx
mov    %rdx,%r9
pushq  -0x58(%rbp)
popq   -0x70(%rbp)
jmp    87e8 <png_check_fp_number+0x128>
mov    $0x9,%ecx
mov    %r13,%rdx
mov    %rdx,%r9
pushq  -0x50(%rbp)
popq   -0x70(%rbp)
jmp    87e8 <png_check_fp_number+0x128>
mov    $0x109,%ecx
mov    %r13,%r9
pushq  -0x48(%rbp)
popq   -0x70(%rbp)
jmp    87e8 <png_check_fp_number+0x128>
xor    %eax,%eax
mov    -0x18(%rbp),%rbx
mov    -0x20(%rbp),%r12
mov    -0x28(%rbp),%r13
mov    -0x30(%rbp),%r14
mov    -0x38(%rbp),%r15
leaveq 
retq   
mov    %rax,%rcx
and    $0x3c,%ecx
test   %ecx,%ecx
jg     87ab <png_check_fp_number+0xeb>
or     %edx,%eax
jmpq   875e <png_check_fp_number+0x9e>
mov    %rax,%r8
and    $0x10,%r8d
test   %r8d,%r8d
jg     87ab <png_check_fp_number+0xeb>
test   %r10d,%r10d
jg     890d <png_check_fp_number+0x24d>
and    $0x1c0,%eax
or     %ecx,%eax
jmpq   875e <png_check_fp_number+0x9e>
mov    %rax,%rcx
and    $0x10,%ecx
test   %ecx,%ecx
jg     8750 <png_check_fp_number+0x90>
mov    %rax,%rcx
jmpq   8758 <png_check_fp_number+0x98>
test   %r10d,%r10d
je     87ab <png_check_fp_number+0xeb>
and    $0x1c0,%eax
add    $0x2,%eax
jmpq   875e <png_check_fp_number+0x9e>
mov    -0x70(%rbp),%rcx
or     %ecx,%eax
jmpq   875e <png_check_fp_number+0x9e>
test   %r10d,%r10d
je     87ab <png_check_fp_number+0xeb>
and    $0x1c0,%eax
add    $0x2,%eax
jmpq   875e <png_check_fp_number+0x9e>
mov    %rax,%rcx
and    $0x3c,%ecx
test   %ecx,%ecx
jg     87ab <png_check_fp_number+0xeb>
or     $0x4,%eax
jmpq   875e <png_check_fp_number+0x9e>
or     %edx,%eax
jmpq   875e <png_check_fp_number+0x9e>
data16 nopw %cs:0x0(%rax,%rax,1)
nop

0000000000008920 <png_check_fp_string>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %rsi,-0x10(%rbp)
mov    %rdi,-0x8(%rbp)
movl   $0x0,-0x1c(%rbp)
movq   $0x0,-0x18(%rbp)
lea    -0x1c(%rbp),%rdx
lea    -0x18(%rbp),%rcx
callq  86c0 <png_check_fp_number>
test   %eax,%eax
jne    8954 <png_check_fp_string+0x34>
xor    %eax,%eax
leaveq 
retq   
mov    -0x18(%rbp),%rax
mov    -0x10(%rbp),%rcx
cmp    %rax,%rcx
je     8972 <png_check_fp_string+0x52>
mov    -0x8(%rbp),%rcx
movsbq (%rcx,%rax,1),%rax
test   %al,%al
je     8972 <png_check_fp_string+0x52>
xor    %eax,%eax
leaveq 
retq   
movslq -0x1c(%rbp),%rax
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

0000000000008980 <png_muldiv>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
xor    %eax,%eax
test   %ecx,%ecx
jne    8990 <png_muldiv+0x10>
leaveq 
retq   
mov    $0x1,%eax
test   %esi,%esi
je     89da <png_muldiv+0x5a>
test   %edx,%edx
je     89da <png_muldiv+0x5a>
cvtsi2sd %edx,%xmm0
cvtsi2sd %esi,%xmm1
mulsd  %xmm1,%xmm0
cvtsi2sd %ecx,%xmm1
divsd  %xmm1,%xmm0
movsd  0x24a9f(%rip),%xmm1        # 2d458 <short_months.6+0x983>
addsd  %xmm1,%xmm0
mov    %rdi,-0x8(%rbp)
callq  57e0 <floor@plt>
movsd  0x24a9a(%rip),%xmm1        # 2d468 <short_months.6+0x993>
ucomisd %xmm1,%xmm0
jp     89d6 <png_muldiv+0x56>
jbe    89e2 <png_muldiv+0x62>
xor    %eax,%eax
leaveq 
retq   
movl   $0x0,(%rdi)
leaveq 
retq   
movsd  0x24a76(%rip),%xmm1        # 2d460 <short_months.6+0x98b>
ucomisd %xmm1,%xmm0
jae    89f4 <png_muldiv+0x74>
xor    %eax,%eax
leaveq 
retq   
cvttsd2si %xmm0,%eax
mov    -0x8(%rbp),%rcx
mov    %eax,(%rcx)
mov    $0x1,%eax
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)

0000000000008a10 <png_muldiv_warn>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %rdi,-0x8(%rbp)
lea    -0xc(%rbp),%rdi
callq  8980 <png_muldiv>
test   %eax,%eax
jne    8a3d <png_muldiv_warn+0x2d>
lea    0x248df(%rip),%rsi        # 2d30f <short_months.6+0x83a>
mov    -0x8(%rbp),%rdi
callq  5390 <png_warning@plt>
xor    %eax,%eax
leaveq 
retq   
movslq -0xc(%rbp),%rax
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

0000000000008a50 <png_reciprocal>:
push   %rbp
mov    %rsp,%rbp
movsd  0x24a44(%rip),%xmm0        # 2d4a0 <short_months.6+0x9cb>
cvtsi2sd %edi,%xmm1
divsd  %xmm1,%xmm0
movsd  0x249ec(%rip),%xmm1        # 2d458 <short_months.6+0x983>
addsd  %xmm1,%xmm0
callq  57e0 <floor@plt>
movsd  0x249eb(%rip),%xmm1        # 2d468 <short_months.6+0x993>
ucomisd %xmm1,%xmm0
jp     8a85 <png_reciprocal+0x35>
jbe    8a89 <png_reciprocal+0x39>
xor    %eax,%eax
leaveq 
retq   
movsd  0x249cf(%rip),%xmm1        # 2d460 <short_months.6+0x98b>
ucomisd %xmm1,%xmm0
jae    8a9b <png_reciprocal+0x4b>
xor    %eax,%eax
leaveq 
retq   
cvttsd2si %xmm0,%eax
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   0x0(%rax)

0000000000008ab0 <png_reciprocal2>:
push   %rbp
mov    %rsp,%rbp
xor    %eax,%eax
test   %edi,%edi
jne    8abc <png_reciprocal2+0xc>
leaveq 
retq   
test   %esi,%esi
jne    8ac2 <png_reciprocal2+0x12>
leaveq 
retq   
movsd  0x249de(%rip),%xmm0        # 2d4a8 <short_months.6+0x9d3>
cvtsi2sd %edi,%xmm1
divsd  %xmm1,%xmm0
cvtsi2sd %esi,%xmm1
divsd  %xmm1,%xmm0
movsd  0x24976(%rip),%xmm1        # 2d458 <short_months.6+0x983>
addsd  %xmm1,%xmm0
callq  57e0 <floor@plt>
movsd  0x24975(%rip),%xmm1        # 2d468 <short_months.6+0x993>
ucomisd %xmm1,%xmm0
jp     8afb <png_reciprocal2+0x4b>
jbe    8aff <png_reciprocal2+0x4f>
xor    %eax,%eax
leaveq 
retq   
movsd  0x24959(%rip),%xmm1        # 2d460 <short_months.6+0x98b>
ucomisd %xmm1,%xmm0
jae    8b11 <png_reciprocal2+0x61>
xor    %eax,%eax
leaveq 
retq   
cvttsd2si %xmm0,%eax
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

0000000000008b20 <png_gamma_significant>:
push   %rbp
mov    %rsp,%rbp
mov    $0x1,%eax
cmp    $0x17317,%edi
jg     8b33 <png_gamma_significant+0x13>
leaveq 
retq   
cmp    $0x19a28,%edi
jle    8b3d <png_gamma_significant+0x1d>
leaveq 
retq   
xor    %eax,%eax
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   0x0(%rax)

0000000000008b50 <png_gamma_correct>:
push   %rbp
mov    %rsp,%rbp
movzbl 0x268(%rdi),%eax
cmp    $0x8,%al
je     8b6c <png_gamma_correct+0x1c>
mov    %rsi,%rdi
mov    %rdx,%rsi
callq  8b80 <png_gamma_16bit_correct>
leaveq 
retq   
mov    %rsi,%rdi
mov    %rdx,%rsi
callq  8bf0 <png_gamma_8bit_correct>
movzbl %al,%eax
leaveq 
retq   
nopl   0x0(%rax)

0000000000008b80 <png_gamma_16bit_correct>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
test   %edi,%edi
jne    8b91 <png_gamma_16bit_correct+0x11>
mov    %rdi,%rax
leaveq 
retq   
cmp    $0xfffe,%edi
jbe    8b9e <png_gamma_16bit_correct+0x1e>
mov    %rdi,%rax
leaveq 
retq   
cvtsi2sd %edi,%xmm0
movsd  0x24906(%rip),%xmm1        # 2d4b0 <short_months.6+0x9db>
divsd  %xmm1,%xmm0
movdqu %xmm1,-0x10(%rbp)
cvtsi2sd %esi,%xmm1
movsd  0x248f9(%rip),%xmm2        # 2d4b8 <short_months.6+0x9e3>
mulsd  %xmm2,%xmm1
callq  5360 <pow@plt>
movdqu -0x10(%rbp),%xmm1
mulsd  %xmm1,%xmm0
movsd  0x2487f(%rip),%xmm1        # 2d458 <short_months.6+0x983>
addsd  %xmm1,%xmm0
callq  57e0 <floor@plt>
cvttsd2si %xmm0,%rax
leaveq 
retq   
nopl   0x0(%rax)

0000000000008bf0 <png_gamma_8bit_correct>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
test   %edi,%edi
jne    8c01 <png_gamma_8bit_correct+0x11>
mov    %rdi,%rax
leaveq 
retq   
cmp    $0xfe,%edi
jbe    8c0e <png_gamma_8bit_correct+0x1e>
mov    %rdi,%rax
leaveq 
retq   
cvtsi2sd %edi,%xmm0
movsd  0x248a6(%rip),%xmm1        # 2d4c0 <short_months.6+0x9eb>
divsd  %xmm1,%xmm0
movdqu %xmm1,-0x10(%rbp)
cvtsi2sd %esi,%xmm1
movsd  0x24889(%rip),%xmm2        # 2d4b8 <short_months.6+0x9e3>
mulsd  %xmm2,%xmm1
callq  5360 <pow@plt>
movdqu -0x10(%rbp),%xmm1
mulsd  %xmm1,%xmm0
movsd  0x2480f(%rip),%xmm1        # 2d458 <short_months.6+0x983>
addsd  %xmm1,%xmm0
callq  57e0 <floor@plt>
cvttsd2si %xmm0,%rax
leaveq 
retq   
nopl   0x0(%rax)

0000000000008c60 <png_destroy_gamma_table>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %r15,-0x18(%rbp)
mov    %r13,%r15
mov    %r15,-0x8(%rbp)
mov    %r14,-0x10(%rbp)
mov    0x2a8(%rdi),%rsi
mov    %rdi,%r13
callq  5790 <png_free@plt>
movq   $0x0,0x2a8(%r13)
mov    $0x1,%edx
mov    $0x8,%ecx
xor    %esi,%esi
mov    0x2b0(%r13),%rax
test   %rax,%rax
jne    8d05 <png_destroy_gamma_table+0xa5>
mov    0x2b8(%r13),%rsi
mov    %r13,%rdi
callq  5790 <png_free@plt>
movq   $0x0,0x2b8(%r13)
mov    0x2c0(%r13),%rsi
mov    %r13,%rdi
callq  5790 <png_free@plt>
movq   $0x0,0x2c0(%r13)
mov    0x2c8(%r13),%rax
test   %rax,%rax
je     8d5a <png_destroy_gamma_table+0xfa>
mov    0x2a0(%r13),%eax
mov    $0x8,%ecx
sub    %eax,%ecx
mov    $0x1,%r14d
shl    %cl,%r14d
xor    %r15d,%r15d
jmp    8d33 <png_destroy_gamma_table+0xd3>
mov    0x2a0(%r13),%eax
sub    %eax,%ecx
mov    %rsi,%r14
mov    %rdx,%r15
shl    %cl,%r15d
jmp    8d89 <png_destroy_gamma_table+0x129>
mov    0x2c8(%r13),%rcx
movslq %r15d,%rax
mov    (%rcx,%rax,8),%rsi
mov    %r13,%rdi
callq  5790 <png_free@plt>
add    $0x1,%r15d
cmp    %r14d,%r15d
jl     8d19 <png_destroy_gamma_table+0xb9>
mov    0x2c8(%r13),%rsi
mov    %r13,%rdi
callq  5790 <png_free@plt>
movq   $0x0,0x2c8(%r13)
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r15
mov    0x2d0(%r13),%rax
test   %rax,%rax
jne    8db5 <png_destroy_gamma_table+0x155>
mov    %r15,%r13
mov    -0x18(%rbp),%r15
leaveq 
retq   
mov    0x2b0(%r13),%rcx
movslq %r14d,%rax
mov    (%rcx,%rax,8),%rsi
mov    %r13,%rdi
callq  5790 <png_free@plt>
add    $0x1,%r14d
cmp    %r15d,%r14d
jl     8d6f <png_destroy_gamma_table+0x10f>
mov    0x2b0(%r13),%rsi
mov    %r13,%rdi
callq  5790 <png_free@plt>
movq   $0x0,0x2b0(%r13)
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r15
jmpq   8ca9 <png_destroy_gamma_table+0x49>
mov    0x2a0(%r13),%eax
mov    $0x8,%ecx
sub    %eax,%ecx
mov    $0x1,%r14d
shl    %cl,%r14d
xor    %r15d,%r15d
jmp    8deb <png_destroy_gamma_table+0x18b>
mov    0x2d0(%r13),%rcx
movslq %r15d,%rax
mov    (%rcx,%rax,8),%rsi
mov    %r13,%rdi
callq  5790 <png_free@plt>
add    $0x1,%r15d
cmp    %r14d,%r15d
jl     8dd1 <png_destroy_gamma_table+0x171>
mov    0x2d0(%r13),%rsi
mov    %r13,%rdi
callq  5790 <png_free@plt>
movq   $0x0,0x2d0(%r13)
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
mov    -0x18(%rbp),%r15
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

0000000000008e20 <png_build_gamma_table>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %r14,-0x10(%rbp)
mov    %r15,-0x18(%rbp)
lea    0x2a8(%rdi),%r15
mov    (%r15),%rax
test   %rax,%rax
jne    8e5c <png_build_gamma_table+0x3c>
mov    0x2b0(%rdi),%rax
test   %rax,%rax
jne    8e5c <png_build_gamma_table+0x3c>
mov    %rsi,%rcx
mov    %r15,%rsi
mov    %r14,%r15
mov    %r13,%r14
mov    %rdi,%r13
jmp    8e91 <png_build_gamma_table+0x71>
lea    0x244c9(%rip),%rax        # 2d32c <short_months.6+0x857>
mov    %rdi,%rcx
mov    %r13,-0x8(%rbp)
mov    %rdi,%r13
mov    %rcx,%rdi
mov    %rsi,%r14
mov    %rax,%rsi
callq  5390 <png_warning@plt>
mov    %r13,%rdi
callq  8c60 <png_destroy_gamma_table>
mov    %r14,%rcx
mov    %r15,%rsi
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
mov    $0x186a0,%eax
cmp    $0x8,%ecx
jle    8f31 <png_build_gamma_table+0x111>
movzbl 0x267(%r13),%ecx
and    $0x2,%ecx
test   %ecx,%ecx
jg     8f80 <png_build_gamma_table+0x160>
movzbl 0x2db(%r13),%edx
xor    %ecx,%ecx
test   %dl,%dl
jne    8faf <png_build_gamma_table+0x18f>
mov    0x134(%r13),%edx
and    $0x4000400,%edx
test   %edx,%edx
jne    8fc4 <png_build_gamma_table+0x1a4>
cmp    $0x8,%cl
jbe    8ee3 <png_build_gamma_table+0xc3>
mov    $0x8,%ecx
test   %edx,%edx
movzbl %cl,%edx
mov    %rdx,-0x8(%rbp)
mov    %edx,0x2a0(%r13)
jne    8fd7 <png_build_gamma_table+0x1b7>
movslq 0x2a4(%r13),%rsi
test   %esi,%esi
jle    8f1a <png_build_gamma_table+0xfa>
mov    %rdx,%r15
movslq 0x498(%r13),%rdi
callq  8ab0 <png_reciprocal2>
mov    %r15,%rdx
mov    -0x10(%rbp),%r15
mov    %rax,%rcx
lea    0x2b0(%r13),%rsi
mov    %r13,%rdi
callq  a440 <png_build_16bit_table>
jmpq   900a <png_build_gamma_table+0x1ea>
movslq 0x2a4(%r13),%rcx
test   %ecx,%ecx
jle    8f55 <png_build_gamma_table+0x135>
mov    %rsi,%r15
mov    %rcx,%rsi
movslq 0x498(%r13),%rdi
callq  8ab0 <png_reciprocal2>
mov    %r15,%rsi
mov    -0x10(%rbp),%r15
mov    %rax,%rdx
mov    %r13,%rdi
callq  a790 <png_build_8bit_table>
mov    0x134(%r13),%eax
and    $0x600080,%eax
test   %eax,%eax
jne    9026 <png_build_gamma_table+0x206>
mov    %r14,%r13
mov    %r15,%r14
mov    -0x18(%rbp),%r15
leaveq 
retq   
movzbl 0x2d9(%r13),%edx
movzbl 0x2d8(%r13),%ecx
cmp    %cl,%dl
jbe    8f97 <png_build_gamma_table+0x177>
mov    %rdx,%rcx
movzbl 0x2da(%r13),%edx
cmp    %dl,%cl
jb     8eba <png_build_gamma_table+0x9a>
mov    %rcx,%rdx
jmpq   8eba <png_build_gamma_table+0x9a>
cmp    $0xf,%dl
ja     8ec4 <png_build_gamma_table+0xa4>
mov    $0x10,%ecx
sub    %dl,%cl
jmpq   8ec4 <png_build_gamma_table+0xa4>
cmp    $0x4,%cl
ja     8ed9 <png_build_gamma_table+0xb9>
mov    $0x5,%ecx
jmpq   8ed9 <png_build_gamma_table+0xb9>
movslq 0x2a4(%r13),%rsi
test   %esi,%esi
jle    8ff8 <png_build_gamma_table+0x1d8>
mov    %rdx,%r15
movslq 0x498(%r13),%rdi
callq  a3e0 <png_product2>
mov    %r15,%rdx
mov    -0x10(%rbp),%r15
mov    %rax,%rcx
lea    0x2b0(%r13),%rsi
mov    %r13,%rdi
callq  a620 <png_build_16to8_table>
mov    0x134(%r13),%eax
and    $0x600080,%eax
test   %eax,%eax
jne    9058 <png_build_gamma_table+0x238>
mov    %r14,%r13
mov    %r15,%r14
mov    -0x18(%rbp),%r15
leaveq 
retq   
movslq 0x498(%r13),%rdi
callq  8a50 <png_reciprocal>
mov    %rax,%rdx
lea    0x2c0(%r13),%rsi
mov    %r13,%rdi
callq  a790 <png_build_8bit_table>
movslq 0x2a4(%r13),%rdi
test   %edi,%edi
jg     9091 <png_build_gamma_table+0x271>
movslq 0x498(%r13),%rdx
jmp    9099 <png_build_gamma_table+0x279>
movslq 0x498(%r13),%rdi
callq  8a50 <png_reciprocal>
mov    %rax,%rcx
lea    0x2d0(%r13),%rsi
mov    %r13,%rdi
mov    -0x8(%rbp),%r15
mov    %r15,%rdx
callq  a440 <png_build_16bit_table>
movslq 0x2a4(%r13),%rdi
test   %edi,%edi
jg     90b4 <png_build_gamma_table+0x294>
movslq 0x498(%r13),%rcx
jmp    90bc <png_build_gamma_table+0x29c>
callq  8a50 <png_reciprocal>
mov    %rax,%rdx
mov    %r13,%rdi
lea    0x2b8(%rdi),%rsi
callq  a790 <png_build_8bit_table>
mov    %r14,%r13
mov    %r15,%r14
mov    -0x18(%rbp),%r15
leaveq 
retq   
callq  8a50 <png_reciprocal>
mov    %rax,%rcx
mov    %r15,%rdx
mov    %r13,%rdi
lea    0x2c8(%rdi),%rsi
callq  a440 <png_build_16bit_table>
mov    %r14,%r13
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

00000000000090e0 <png_image_error>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x8(%rbp)
mov    %rsi,%rcx
mov    %rdi,%r15
lea    0x24(%r15),%rdi
mov    $0x40,%esi
xor    %edx,%edx
callq  ad30 <png_safecat>
mov    0x20(%r15),%eax
or     $0x2,%eax
mov    %eax,0x20(%r15)
mov    %r15,%rdi
callq  5040 <png_image_free@plt>
xor    %eax,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
nopl   (%rax)

0000000000009120 <png_colorspace_check_gamma>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    $0x1,%eax
movzwl 0x4a(%rsi),%r8d
and    $0x1,%r8d
test   %r8d,%r8d
jg     913d <png_colorspace_check_gamma+0x1d>
leaveq 
retq   
lea    -0x1c(%rbp),%rax
movslq (%rsi),%r8
mov    $0x186a0,%r9d
mov    %r15,-0x18(%rbp)
mov    %rcx,-0x10(%rbp)
mov    %rdi,-0x8(%rbp)
mov    %rdx,%rcx
mov    %r9,%rdx
mov    %rax,%rdi
mov    %rsi,%r15
mov    %r8,%rsi
callq  8980 <png_muldiv>
test   %eax,%eax
je     9186 <png_colorspace_check_gamma+0x66>
movslq -0x1c(%rbp),%rdi
callq  8b20 <png_gamma_significant>
test   %eax,%eax
jne    9186 <png_colorspace_check_gamma+0x66>
mov    $0x1,%eax
mov    -0x18(%rbp),%r15
leaveq 
retq   
xor    %edx,%edx
movzwl 0x4a(%r15),%eax
and    $0x20,%eax
test   %eax,%eax
jle    91be <png_colorspace_check_gamma+0x9e>
mov    -0x10(%rbp),%r15
lea    0x241a7(%rip),%rsi        # 2d346 <short_months.6+0x871>
mov    $0x2,%edx
mov    -0x8(%rbp),%rdi
callq  b140 <png_chunk_report>
cmp    $0x2,%r15d
jne    91e9 <png_colorspace_check_gamma+0xc9>
mov    $0x1,%eax
mov    -0x18(%rbp),%r15
leaveq 
retq   
mov    -0x10(%rbp),%r15
cmp    $0x2,%r15d
je     9198 <png_colorspace_check_gamma+0x78>
lea    0x24197(%rip),%rsi        # 2d366 <short_months.6+0x891>
mov    -0x8(%rbp),%rdi
callq  b140 <png_chunk_report>
cmp    $0x1,%r15d
jne    91f1 <png_colorspace_check_gamma+0xd1>
mov    $0x1,%eax
mov    -0x18(%rbp),%r15
leaveq 
retq   
xor    %eax,%eax
mov    -0x18(%rbp),%r15
leaveq 
retq   
xor    %eax,%eax
mov    -0x18(%rbp),%r15
leaveq 
retq   
nopl   0x0(%rax)

0000000000009200 <png_xy_from_XYZ>:
push   %rbp
mov    %rsp,%rbp
sub    $0x50,%rsp
mov    %rdi,-0x40(%rbp)
mov    %rsi,-0x50(%rbp)
movslq (%rsi),%rax
mov    %rax,%rcx
add    0x4(%rsi),%ecx
add    0x8(%rsi),%ecx
mov    %rax,%rsi
mov    %rcx,-0x48(%rbp)
mov    $0x186a0,%edx
callq  8980 <png_muldiv>
test   %eax,%eax
jne    9238 <png_xy_from_XYZ+0x38>
mov    $0x1,%eax
leaveq 
retq   
mov    -0x40(%rbp),%rax
lea    0x4(%rax),%rdi
mov    -0x50(%rbp),%rax
movslq 0x4(%rax),%rsi
mov    $0x186a0,%edx
mov    -0x48(%rbp),%rcx
mov    %r15,-0x8(%rbp)
mov    %rax,%r15
callq  8980 <png_muldiv>
test   %eax,%eax
jne    926c <png_xy_from_XYZ+0x6c>
mov    -0x8(%rbp),%r15
mov    $0x1,%eax
leaveq 
retq   
movslq (%r15),%rax
mov    %rax,-0x28(%rbp)
movslq 0x4(%r15),%rax
mov    %rax,-0x18(%rbp)
movslq 0xc(%r15),%rsi
mov    %rsi,%rcx
add    0x10(%r15),%ecx
add    0x14(%r15),%ecx
mov    %rcx,-0x38(%rbp)
mov    -0x40(%rbp),%r15
lea    0x8(%r15),%rdi
mov    $0x186a0,%edx
callq  8980 <png_muldiv>
test   %eax,%eax
jne    92af <png_xy_from_XYZ+0xaf>
mov    -0x8(%rbp),%r15
mov    $0x1,%eax
leaveq 
retq   
lea    0xc(%r15),%rdi
mov    -0x50(%rbp),%r15
movslq 0x10(%r15),%rsi
mov    $0x186a0,%edx
mov    -0x38(%rbp),%rcx
callq  8980 <png_muldiv>
test   %eax,%eax
jne    92d8 <png_xy_from_XYZ+0xd8>
mov    -0x8(%rbp),%r15
mov    $0x1,%eax
leaveq 
retq   
movslq 0xc(%r15),%rax
mov    %rax,-0x20(%rbp)
movslq 0x10(%r15),%rax
mov    %rax,-0x10(%rbp)
movslq 0x18(%r15),%rsi
mov    %rsi,%rcx
add    0x1c(%r15),%ecx
add    0x20(%r15),%ecx
mov    %rcx,-0x30(%rbp)
mov    -0x40(%rbp),%r15
lea    0x10(%r15),%rdi
mov    $0x186a0,%edx
callq  8980 <png_muldiv>
test   %eax,%eax
jne    931c <png_xy_from_XYZ+0x11c>
mov    -0x8(%rbp),%r15
mov    $0x1,%eax
leaveq 
retq   
lea    0x14(%r15),%rdi
mov    -0x50(%rbp),%r15
movslq 0x1c(%r15),%rsi
mov    $0x186a0,%edx
mov    -0x30(%rbp),%rcx
callq  8980 <png_muldiv>
test   %eax,%eax
jne    9345 <png_xy_from_XYZ+0x145>
mov    -0x8(%rbp),%r15
mov    $0x1,%eax
leaveq 
retq   
movslq 0x1c(%r15),%r8
mov    -0x20(%rbp),%rcx
mov    -0x28(%rbp),%rax
lea    (%rcx,%rax,1),%esi
add    0x18(%r15),%esi
mov    -0x38(%rbp),%rcx
mov    -0x48(%rbp),%rax
add    %ecx,%eax
mov    -0x30(%rbp),%rcx
add    %eax,%ecx
mov    %rcx,-0x50(%rbp)
mov    -0x40(%rbp),%rax
lea    0x18(%rax),%rdi
mov    %r8,%r15
mov    $0x186a0,%edx
callq  8980 <png_muldiv>
test   %eax,%eax
jne    9390 <png_xy_from_XYZ+0x190>
mov    -0x8(%rbp),%r15
mov    $0x1,%eax
leaveq 
retq   
mov    -0x10(%rbp),%rcx
mov    -0x18(%rbp),%rax
add    %ecx,%eax
lea    (%r15,%rax,1),%esi
mov    -0x40(%rbp),%rax
lea    0x1c(%rax),%rdi
mov    -0x50(%rbp),%rcx
mov    $0x186a0,%edx
callq  8980 <png_muldiv>
test   %eax,%eax
jne    93c3 <png_xy_from_XYZ+0x1c3>
mov    -0x8(%rbp),%r15
mov    $0x1,%eax
leaveq 
retq   
xor    %eax,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

00000000000093d0 <png_XYZ_from_xy>:
push   %rbp
mov    %rsp,%rbp
sub    $0x40,%rsp
mov    $0x1,%eax
movslq (%rsi),%r8
test   %r8d,%r8d
jns    93e7 <png_XYZ_from_xy+0x17>
leaveq 
retq   
cmp    $0x186a0,%r8d
jle    93f2 <png_XYZ_from_xy+0x22>
leaveq 
retq   
movslq 0x4(%rsi),%rdx
test   %edx,%edx
jns    93fc <png_XYZ_from_xy+0x2c>
leaveq 
retq   
mov    $0x186a0,%ecx
neg    %r8d
add    %ecx,%r8d
cmp    %r8d,%edx
jle    940e <png_XYZ_from_xy+0x3e>
leaveq 
retq   
movslq 0x8(%rsi),%r8
test   %r8d,%r8d
jns    9419 <png_XYZ_from_xy+0x49>
leaveq 
retq   
cmp    $0x186a0,%r8d
jle    9424 <png_XYZ_from_xy+0x54>
leaveq 
retq   
movslq 0xc(%rsi),%r10
test   %r10d,%r10d
jns    942f <png_XYZ_from_xy+0x5f>
leaveq 
retq   
mov    %rcx,%r9
sub    %r8d,%r9d
cmp    %r9d,%r10d
jle    943c <png_XYZ_from_xy+0x6c>
leaveq 
retq   
movslq 0x10(%rsi),%r11
test   %r11d,%r11d
jns    9447 <png_XYZ_from_xy+0x77>
leaveq 
retq   
cmp    $0x186a0,%r11d
jle    9452 <png_XYZ_from_xy+0x82>
leaveq 
retq   
movslq 0x14(%rsi),%r10
test   %r10d,%r10d
jns    945d <png_XYZ_from_xy+0x8d>
leaveq 
retq   
mov    %rcx,%r9
sub    %r11d,%r9d
cmp    %r9d,%r10d
jle    946a <png_XYZ_from_xy+0x9a>
leaveq 
retq   
movslq 0x18(%rsi),%r9
test   %r9d,%r9d
jns    9475 <png_XYZ_from_xy+0xa5>
leaveq 
retq   
cmp    $0x186a0,%r9d
jle    9480 <png_XYZ_from_xy+0xb0>
leaveq 
retq   
mov    %rdi,-0x10(%rbp)
movslq 0x1c(%rsi),%rdi
cmp    $0x4,%edi
jg     948f <png_XYZ_from_xy+0xbf>
leaveq 
retq   
sub    %r9d,%ecx
cmp    %ecx,%edi
jle    9498 <png_XYZ_from_xy+0xc8>
leaveq 
retq   
sub    %r11d,%r8d
sub    %r10d,%edx
lea    -0x30(%rbp),%rdi
mov    $0x7,%ecx
mov    %rsi,-0x28(%rbp)
mov    %r8,%rsi
callq  8980 <png_muldiv>
test   %eax,%eax
jne    94be <png_XYZ_from_xy+0xee>
mov    $0x2,%eax
leaveq 
retq   
mov    -0x28(%rbp),%rcx
movslq 0xc(%rcx),%rsi
movslq 0x14(%rcx),%rax
sub    %eax,%esi
movslq (%rcx),%rdx
movslq 0x10(%rcx),%rax
sub    %eax,%edx
lea    -0x2c(%rbp),%rdi
mov    $0x7,%ecx
callq  8980 <png_muldiv>
test   %eax,%eax
jne    94ee <png_XYZ_from_xy+0x11e>
mov    $0x2,%eax
leaveq 
retq   
movslq -0x30(%rbp),%rax
mov    %rax,-0x18(%rbp)
movslq -0x2c(%rbp),%rax
mov    %rax,-0x20(%rbp)
mov    -0x28(%rbp),%rcx
movslq 0x8(%rcx),%rsi
movslq 0x10(%rcx),%rax
sub    %eax,%esi
movslq 0x1c(%rcx),%rdx
movslq 0x14(%rcx),%rax
sub    %eax,%edx
lea    -0x30(%rbp),%rdi
mov    $0x7,%ecx
callq  8980 <png_muldiv>
test   %eax,%eax
jne    952f <png_XYZ_from_xy+0x15f>
mov    $0x2,%eax
leaveq 
retq   
mov    -0x28(%rbp),%rcx
movslq 0xc(%rcx),%rsi
movslq 0x14(%rcx),%rax
sub    %eax,%esi
movslq 0x18(%rcx),%rdx
movslq 0x10(%rcx),%rax
sub    %eax,%edx
lea    -0x2c(%rbp),%rdi
mov    $0x7,%ecx
callq  8980 <png_muldiv>
test   %eax,%eax
jne    9560 <png_XYZ_from_xy+0x190>
mov    $0x2,%eax
leaveq 
retq   
mov    -0x20(%rbp),%rax
mov    -0x18(%rbp),%rdx
sub    %eax,%edx
mov    %rdx,-0x20(%rbp)
movslq -0x30(%rbp),%rcx
movslq -0x2c(%rbp),%rax
sub    %eax,%ecx
lea    -0x38(%rbp),%rdi
mov    -0x28(%rbp),%rax
movslq 0x1c(%rax),%rsi
mov    %r15,-0x18(%rbp)
mov    %rax,%r15
callq  8980 <png_muldiv>
test   %eax,%eax
jne    959f <png_XYZ_from_xy+0x1cf>
mov    -0x18(%rbp),%r15
mov    $0x1,%eax
leaveq 
retq   
movslq 0x1c(%r15),%rax
cmp    -0x38(%rbp),%eax
jl     95b3 <png_XYZ_from_xy+0x1e3>
mov    -0x18(%rbp),%r15
mov    $0x1,%eax
leaveq 
retq   
movslq 0x4(%r15),%rsi
movslq 0x14(%r15),%rax
sub    %eax,%esi
movslq 0x18(%r15),%rdx
movslq 0x10(%r15),%rax
sub    %eax,%edx
mov    $0x7,%ecx
lea    -0x30(%rbp),%rdi
callq  8980 <png_muldiv>
test   %eax,%eax
jne    95e4 <png_XYZ_from_xy+0x214>
mov    -0x18(%rbp),%r15
mov    $0x2,%eax
leaveq 
retq   
movslq (%r15),%rsi
movslq 0x10(%r15),%rax
sub    %eax,%esi
movslq 0x1c(%r15),%rdx
movslq 0x14(%r15),%rax
sub    %eax,%edx
lea    -0x2c(%rbp),%rdi
mov    $0x7,%ecx
callq  8980 <png_muldiv>
test   %eax,%eax
jne    9614 <png_XYZ_from_xy+0x244>
mov    -0x18(%rbp),%r15
mov    $0x2,%eax
leaveq 
retq   
movslq -0x30(%rbp),%rcx
movslq -0x2c(%rbp),%rax
sub    %eax,%ecx
lea    -0x34(%rbp),%rdi
movslq 0x1c(%r15),%rsi
mov    -0x20(%rbp),%rdx
callq  8980 <png_muldiv>
test   %eax,%eax
jne    963e <png_XYZ_from_xy+0x26e>
mov    -0x18(%rbp),%r15
mov    $0x1,%eax
leaveq 
retq   
movslq 0x1c(%r15),%rdi
cmp    -0x34(%rbp),%edi
jl     9652 <png_XYZ_from_xy+0x282>
mov    -0x18(%rbp),%r15
mov    $0x1,%eax
leaveq 
retq   
callq  8a50 <png_reciprocal>
mov    %rax,%r15
movslq -0x38(%rbp),%rdi
callq  8a50 <png_reciprocal>
movslq -0x34(%rbp),%rdi
mov    %r14,-0x8(%rbp)
mov    %rax,%r14
callq  8a50 <png_reciprocal>
add    %r14d,%eax
neg    %eax
add    %r15d,%eax
test   %eax,%eax
jg     968e <png_XYZ_from_xy+0x2be>
mov    -0x8(%rbp),%r14
mov    -0x18(%rbp),%r15
mov    $0x1,%eax
leaveq 
retq   
mov    -0x28(%rbp),%r14
movslq (%r14),%rsi
movslq -0x38(%rbp),%rcx
mov    -0x10(%rbp),%r15
mov    %r15,%rdi
mov    $0x186a0,%edx
mov    %rax,-0x28(%rbp)
callq  8980 <png_muldiv>
test   %eax,%eax
jne    96c1 <png_XYZ_from_xy+0x2f1>
mov    -0x8(%rbp),%r14
mov    -0x18(%rbp),%r15
mov    $0x1,%eax
leaveq 
retq   
lea    0x4(%r15),%rdi
movslq 0x4(%r14),%rsi
movslq -0x38(%rbp),%rcx
mov    $0x186a0,%edx
callq  8980 <png_muldiv>
test   %eax,%eax
jne    96ea <png_XYZ_from_xy+0x31a>
mov    -0x8(%rbp),%r14
mov    -0x18(%rbp),%r15
mov    $0x1,%eax
leaveq 
retq   
movslq 0x4(%r14),%rax
add    (%r14),%eax
mov    $0x186a0,%edx
mov    %rdx,%rsi
sub    %eax,%esi
lea    0x8(%r15),%rdi
movslq -0x38(%rbp),%rcx
callq  8980 <png_muldiv>
test   %eax,%eax
jne    971b <png_XYZ_from_xy+0x34b>
mov    -0x8(%rbp),%r14
mov    -0x18(%rbp),%r15
mov    $0x1,%eax
leaveq 
retq   
lea    0xc(%r15),%rdi
movslq 0x8(%r14),%rsi
movslq -0x34(%rbp),%rcx
mov    $0x186a0,%edx
callq  8980 <png_muldiv>
test   %eax,%eax
jne    9744 <png_XYZ_from_xy+0x374>
mov    -0x8(%rbp),%r14
mov    -0x18(%rbp),%r15
mov    $0x1,%eax
leaveq 
retq   
lea    0x10(%r15),%rdi
movslq 0xc(%r14),%rsi
movslq -0x34(%rbp),%rcx
mov    $0x186a0,%edx
callq  8980 <png_muldiv>
test   %eax,%eax
jne    976d <png_XYZ_from_xy+0x39d>
mov    -0x8(%rbp),%r14
mov    -0x18(%rbp),%r15
mov    $0x1,%eax
leaveq 
retq   
movslq 0xc(%r14),%rax
add    0x8(%r14),%eax
mov    $0x186a0,%edx
mov    %rdx,%rsi
sub    %eax,%esi
lea    0x14(%r15),%rdi
movslq -0x34(%rbp),%rcx
callq  8980 <png_muldiv>
test   %eax,%eax
jne    979f <png_XYZ_from_xy+0x3cf>
mov    -0x8(%rbp),%r14
mov    -0x18(%rbp),%r15
mov    $0x1,%eax
leaveq 
retq   
lea    0x18(%r15),%rdi
movslq 0x10(%r14),%rsi
mov    -0x28(%rbp),%rdx
mov    $0x186a0,%ecx
callq  8980 <png_muldiv>
test   %eax,%eax
jne    97c8 <png_XYZ_from_xy+0x3f8>
mov    -0x8(%rbp),%r14
mov    -0x18(%rbp),%r15
mov    $0x1,%eax
leaveq 
retq   
lea    0x1c(%r15),%rdi
movslq 0x14(%r14),%rsi
mov    -0x28(%rbp),%rdx
mov    $0x186a0,%ecx
callq  8980 <png_muldiv>
test   %eax,%eax
jne    97f1 <png_XYZ_from_xy+0x421>
mov    -0x8(%rbp),%r14
mov    -0x18(%rbp),%r15
mov    $0x1,%eax
leaveq 
retq   
movslq 0x14(%r14),%rax
add    0x10(%r14),%eax
mov    $0x186a0,%ecx
mov    %rcx,%rsi
sub    %eax,%esi
lea    0x20(%r15),%rdi
mov    -0x28(%rbp),%rdx
callq  8980 <png_muldiv>
test   %eax,%eax
jne    9823 <png_XYZ_from_xy+0x453>
mov    -0x8(%rbp),%r14
mov    -0x18(%rbp),%r15
mov    $0x1,%eax
leaveq 
retq   
xor    %eax,%eax
mov    -0x8(%rbp),%r14
mov    -0x18(%rbp),%r15
leaveq 
retq   
nop

0000000000009830 <png_XYZ_normalize>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    $0x1,%eax
movslq 0x4(%rdi),%r10
test   %r10d,%r10d
jns    9848 <png_XYZ_normalize+0x18>
leaveq 
retq   
movslq 0x10(%rdi),%r9
test   %r9d,%r9d
jns    9853 <png_XYZ_normalize+0x23>
leaveq 
retq   
movslq 0x1c(%rdi),%r11
test   %r11d,%r11d
jns    985e <png_XYZ_normalize+0x2e>
leaveq 
retq   
movslq (%rdi),%rsi
test   %esi,%esi
jns    9867 <png_XYZ_normalize+0x37>
leaveq 
retq   
movslq 0xc(%rdi),%r8
test   %r8d,%r8d
jns    9872 <png_XYZ_normalize+0x42>
leaveq 
retq   
movslq 0x18(%rdi),%rdx
test   %edx,%edx
jns    987c <png_XYZ_normalize+0x4c>
leaveq 
retq   
movslq 0x8(%rdi),%rcx
test   %ecx,%ecx
jns    9886 <png_XYZ_normalize+0x56>
leaveq 
retq   
movslq 0x14(%rdi),%rcx
test   %ecx,%ecx
jns    9890 <png_XYZ_normalize+0x60>
leaveq 
retq   
movslq 0x20(%rdi),%rcx
test   %ecx,%ecx
jns    989a <png_XYZ_normalize+0x6a>
leaveq 
retq   
mov    %r10,%rcx
xor    $0x7fffffff,%ecx
cmp    %ecx,%r8d
jle    98aa <png_XYZ_normalize+0x7a>
leaveq 
retq   
lea    (%r10,%r9,1),%r8d
mov    %r8,%rcx
xor    $0x7fffffff,%ecx
cmp    %ecx,%edx
jle    98bd <png_XYZ_normalize+0x8d>
leaveq 
retq   
xor    %eax,%eax
add    %r11d,%r8d
cmp    $0x186a0,%r8d
jne    98cd <png_XYZ_normalize+0x9d>
leaveq 
retq   
mov    $0x186a0,%edx
mov    %rdi,%rax
mov    %r8,%rcx
mov    %rdi,-0x10(%rbp)
mov    %r8,-0x8(%rbp)
mov    %rax,%rdi
callq  8980 <png_muldiv>
test   %eax,%eax
jne    98f3 <png_XYZ_normalize+0xc3>
mov    $0x1,%eax
leaveq 
retq   
mov    -0x10(%rbp),%rax
lea    0x4(%rax),%rdi
movslq 0x4(%rax),%rsi
mov    $0x186a0,%edx
mov    -0x8(%rbp),%rcx
callq  8980 <png_muldiv>
test   %eax,%eax
jne    9918 <png_XYZ_normalize+0xe8>
mov    $0x1,%eax
leaveq 
retq   
mov    -0x10(%rbp),%rax
lea    0x8(%rax),%rdi
movslq 0x8(%rax),%rsi
mov    $0x186a0,%edx
mov    -0x8(%rbp),%rcx
callq  8980 <png_muldiv>
test   %eax,%eax
jne    993d <png_XYZ_normalize+0x10d>
mov    $0x1,%eax
leaveq 
retq   
mov    -0x10(%rbp),%rax
lea    0xc(%rax),%rdi
movslq 0xc(%rax),%rsi
mov    $0x186a0,%edx
mov    -0x8(%rbp),%rcx
callq  8980 <png_muldiv>
test   %eax,%eax
jne    9962 <png_XYZ_normalize+0x132>
mov    $0x1,%eax
leaveq 
retq   
mov    -0x10(%rbp),%rax
lea    0x10(%rax),%rdi
movslq 0x10(%rax),%rsi
mov    $0x186a0,%edx
mov    -0x8(%rbp),%rcx
callq  8980 <png_muldiv>
test   %eax,%eax
jne    9987 <png_XYZ_normalize+0x157>
mov    $0x1,%eax
leaveq 
retq   
mov    -0x10(%rbp),%rax
lea    0x14(%rax),%rdi
movslq 0x14(%rax),%rsi
mov    $0x186a0,%edx
mov    -0x8(%rbp),%rcx
callq  8980 <png_muldiv>
test   %eax,%eax
jne    99ac <png_XYZ_normalize+0x17c>
mov    $0x1,%eax
leaveq 
retq   
mov    -0x10(%rbp),%rax
lea    0x18(%rax),%rdi
movslq 0x18(%rax),%rsi
mov    $0x186a0,%edx
mov    -0x8(%rbp),%rcx
callq  8980 <png_muldiv>
test   %eax,%eax
jne    99d1 <png_XYZ_normalize+0x1a1>
mov    $0x1,%eax
leaveq 
retq   
mov    -0x10(%rbp),%rax
lea    0x1c(%rax),%rdi
movslq 0x1c(%rax),%rsi
mov    $0x186a0,%edx
mov    -0x8(%rbp),%rcx
callq  8980 <png_muldiv>
test   %eax,%eax
jne    99f6 <png_XYZ_normalize+0x1c6>
mov    $0x1,%eax
leaveq 
retq   
mov    -0x10(%rbp),%rax
lea    0x20(%rax),%rdi
movslq 0x20(%rax),%rsi
mov    $0x186a0,%edx
mov    -0x8(%rbp),%rcx
callq  8980 <png_muldiv>
test   %eax,%eax
jne    9a1b <png_XYZ_normalize+0x1eb>
mov    $0x1,%eax
leaveq 
retq   
xor    %eax,%eax
leaveq 
retq   
nop

0000000000009a20 <png_colorspace_endpoints_match>:
push   %rbp
mov    %rsp,%rbp
xor    %eax,%eax
movslq 0x18(%rsi),%r9
mov    %r9,%rcx
sub    %edx,%ecx
movslq 0x18(%rdi),%r8
cmp    %r8d,%ecx
jle    9a3a <png_colorspace_endpoints_match+0x1a>
leaveq 
retq   
lea    (%rdx,%r9,1),%ecx
cmp    %ecx,%r8d
jle    9a45 <png_colorspace_endpoints_match+0x25>
leaveq 
retq   
movslq 0x1c(%rsi),%r9
mov    %r9,%rcx
sub    %edx,%ecx
movslq 0x1c(%rdi),%r8
cmp    %r8d,%ecx
jle    9a59 <png_colorspace_endpoints_match+0x39>
leaveq 
retq   
lea    (%rdx,%r9,1),%ecx
cmp    %ecx,%r8d
jle    9a64 <png_colorspace_endpoints_match+0x44>
leaveq 
retq   
movslq (%rsi),%r9
mov    %r9,%rcx
sub    %edx,%ecx
movslq (%rdi),%r8
cmp    %r8d,%ecx
jle    9a76 <png_colorspace_endpoints_match+0x56>
leaveq 
retq   
lea    (%rdx,%r9,1),%ecx
cmp    %ecx,%r8d
jle    9a81 <png_colorspace_endpoints_match+0x61>
leaveq 
retq   
movslq 0x4(%rsi),%r9
mov    %r9,%rcx
sub    %edx,%ecx
movslq 0x4(%rdi),%r8
cmp    %r8d,%ecx
jle    9a95 <png_colorspace_endpoints_match+0x75>
leaveq 
retq   
lea    (%rdx,%r9,1),%ecx
cmp    %ecx,%r8d
jle    9aa0 <png_colorspace_endpoints_match+0x80>
leaveq 
retq   
movslq 0x8(%rsi),%r9
mov    %r9,%rcx
sub    %edx,%ecx
movslq 0x8(%rdi),%r8
cmp    %r8d,%ecx
jle    9ab4 <png_colorspace_endpoints_match+0x94>
leaveq 
retq   
lea    (%rdx,%r9,1),%ecx
cmp    %ecx,%r8d
jle    9abf <png_colorspace_endpoints_match+0x9f>
leaveq 
retq   
movslq 0xc(%rsi),%r9
mov    %r9,%rcx
sub    %edx,%ecx
movslq 0xc(%rdi),%r8
cmp    %r8d,%ecx
jle    9ad3 <png_colorspace_endpoints_match+0xb3>
leaveq 
retq   
lea    (%rdx,%r9,1),%ecx
cmp    %ecx,%r8d
jle    9ade <png_colorspace_endpoints_match+0xbe>
leaveq 
retq   
movslq 0x10(%rsi),%r8
mov    %r8,%rcx
sub    %edx,%ecx
movslq 0x10(%rdi),%r9
cmp    %r9d,%ecx
jle    9af2 <png_colorspace_endpoints_match+0xd2>
leaveq 
retq   
lea    (%rdx,%r8,1),%ecx
cmp    %ecx,%r9d
jle    9afd <png_colorspace_endpoints_match+0xdd>
leaveq 
retq   
movslq 0x14(%rsi),%r8
mov    %r8,%rcx
sub    %edx,%ecx
movslq 0x14(%rdi),%rsi
cmp    %esi,%ecx
jle    9b10 <png_colorspace_endpoints_match+0xf0>
leaveq 
retq   
lea    (%rdx,%r8,1),%ecx
cmp    %ecx,%esi
jle    9b1a <png_colorspace_endpoints_match+0xfa>
leaveq 
retq   
mov    $0x1,%eax
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   0x0(%rax)

0000000000009b30 <png_colorspace_check_xy>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    %rdi,-0x10(%rbp)
mov    %rsi,-0x8(%rbp)
callq  93d0 <png_XYZ_from_xy>
test   %eax,%eax
je     9b4b <png_colorspace_check_xy+0x1b>
leaveq 
retq   
lea    -0x30(%rbp),%rdi
mov    -0x10(%rbp),%rsi
callq  9200 <png_xy_from_XYZ>
test   %eax,%eax
je     9b5e <png_colorspace_check_xy+0x2e>
leaveq 
retq   
mov    $0x5,%edx
lea    -0x30(%rbp),%rsi
mov    -0x8(%rbp),%rdi
callq  9a20 <png_colorspace_endpoints_match>
test   %eax,%eax
je     9b78 <png_colorspace_check_xy+0x48>
xor    %eax,%eax
leaveq 
retq   
mov    $0x1,%eax
leaveq 
retq   
nop

0000000000009b80 <png_colorspace_check_XYZ>:
push   %rbp
mov    %rsp,%rbp
sub    $0x40,%rsp
mov    %rdi,-0x8(%rbp)
mov    %rsi,%rdi
mov    %rdi,-0x10(%rbp)
callq  9830 <png_XYZ_normalize>
test   %eax,%eax
je     9b9e <png_colorspace_check_XYZ+0x1e>
leaveq 
retq   
mov    -0x8(%rbp),%rdi
mov    -0x10(%rbp),%rax
mov    %rax,%rsi
mov    %r15,-0x10(%rbp)
mov    %rax,%r15
callq  9200 <png_xy_from_XYZ>
test   %eax,%eax
je     9bbf <png_colorspace_check_XYZ+0x3f>
mov    -0x10(%rbp),%r15
leaveq 
retq   
mov    (%r15),%rax
mov    %rax,-0x34(%rbp)
mov    0x8(%r15),%rax
mov    %rax,-0x2c(%rbp)
mov    0x10(%r15),%rax
mov    %rax,-0x24(%rbp)
mov    0x18(%r15),%rax
mov    %rax,-0x1c(%rbp)
mov    0x20(%r15),%eax
mov    %eax,-0x14(%rbp)
lea    -0x34(%rbp),%rdi
mov    -0x8(%rbp),%rsi
callq  9b30 <png_colorspace_check_xy>
mov    -0x10(%rbp),%r15
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

0000000000009c00 <png_colorspace_set_xy_and_XYZ>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
xor    %eax,%eax
movzwl 0x4a(%rsi),%r10d
mov    %r10,%r9
and    $0x8000,%r9d
test   %r9d,%r9d
jle    9c20 <png_colorspace_set_xy_and_XYZ+0x20>
leaveq 
retq   
cmp    $0x1,%r8d
jle    9cc6 <png_colorspace_set_xy_and_XYZ+0xc6>
mov    %r14,%rax
mov    %rsi,%r14
mov    %rdx,%rdi
mov    (%rdi),%rdx
mov    %rdx,0x4(%r14)
mov    0x8(%rdi),%rdx
mov    %rdx,0xc(%r14)
mov    0x10(%rdi),%rdx
mov    %rdx,0x14(%r14)
mov    0x18(%rdi),%rdx
mov    %rdx,0x1c(%r14)
mov    (%rcx),%rdx
mov    %rdx,0x24(%r14)
mov    0x8(%rcx),%rdx
mov    %rdx,0x2c(%r14)
mov    0x10(%rcx),%rdx
mov    %rdx,0x34(%r14)
mov    0x18(%rcx),%rdx
mov    %rdx,0x3c(%r14)
movzwl 0x4a(%r14),%r8d
mov    %r8,%rdx
or     $0x2,%dx
mov    0x20(%rcx),%ecx
mov    %dx,0x4a(%r14)
mov    %ecx,0x44(%r14)
lea    0x22cfc(%rip),%rsi        # 2c98c <sRGB_xy>
mov    $0x3e8,%edx
mov    %rax,-0x28(%rbp)
mov    %r15,-0x30(%rbp)
mov    %r8,%r15
callq  9a20 <png_colorspace_endpoints_match>
test   %eax,%eax
jne    9cde <png_colorspace_set_xy_and_XYZ+0xde>
and    $0xffbd,%r15w
lea    0x2(%r15),%eax
mov    %ax,0x4a(%r14)
mov    $0x2,%eax
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
leaveq 
retq   
mov    %r10,%rax
and    $0x2,%eax
test   %eax,%eax
jg     9cf7 <png_colorspace_set_xy_and_XYZ+0xf7>
mov    %r14,%rax
mov    %rsi,%r14
mov    %rdx,%rdi
jmpq   9c33 <png_colorspace_set_xy_and_XYZ+0x33>
or     $0x42,%r15w
mov    %r15w,0x4a(%r14)
mov    $0x2,%eax
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
leaveq 
retq   
lea    0x4(%rsi),%rax
mov    $0x64,%r9d
mov    %rdx,%r11
mov    %r13,-0x10(%rbp)
mov    %r14,-0x18(%rbp)
mov    %r15,-0x20(%rbp)
mov    %rdx,-0x30(%rbp)
mov    %rdi,-0x8(%rbp)
mov    %rcx,-0x28(%rbp)
mov    %r9,%rdx
mov    %r11,%rdi
mov    %r10,%r13
mov    %rsi,%r14
mov    %rax,%rsi
mov    %r8,%r15
callq  9a20 <png_colorspace_endpoints_match>
test   %eax,%eax
je     9d55 <png_colorspace_set_xy_and_XYZ+0x155>
test   %r15d,%r15d
je     9d80 <png_colorspace_set_xy_and_XYZ+0x180>
mov    -0x28(%rbp),%rcx
mov    -0x30(%rbp),%rdi
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%rax
mov    -0x10(%rbp),%r13
jmpq   9c33 <png_colorspace_set_xy_and_XYZ+0x33>
or     $0x8000,%r13w
mov    %r13w,0x4a(%r14)
lea    0x2362a(%rip),%rsi        # 2d391 <short_months.6+0x8bc>
mov    -0x8(%rbp),%rdi
callq  5590 <png_benign_error@plt>
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
xor    %eax,%eax
leaveq 
retq   
mov    $0x1,%eax
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

0000000000009da0 <png_icc_tag_char>:
push   %rbp
mov    %rsp,%rbp
mov    $0x3f,%eax
movzbl %dil,%ecx
cmp    $0x1f,%ecx
ja     9db4 <png_icc_tag_char+0x14>
leaveq 
retq   
cmp    $0x7e,%ecx
jbe    9dbb <png_icc_tag_char+0x1b>
leaveq 
retq   
mov    %rcx,%rax
leaveq 
retq   

0000000000009dc0 <png_icc_tag_name>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %r14,-0x18(%rbp)
mov    %r15,-0x20(%rbp)
mov    %r13,-0x10(%rbp)
mov    %r12,-0x8(%rbp)
mov    %rbx,%r12
mov    %rsi,%rbx
mov    %rdi,%r13
mov    %rbx,%rdi
callq  9da0 <png_icc_tag_char>
mov    %rax,%r14
mov    %rbx,%rdi
shr    $0x8,%edi
callq  9da0 <png_icc_tag_char>
mov    %rax,%r15
mov    %rbx,%rdi
shr    $0x10,%edi
callq  9da0 <png_icc_tag_char>
movb   $0x27,0x0(%r13)
shr    $0x18,%ebx
mov    %rbx,%rdi
mov    %rax,%rbx
callq  9da0 <png_icc_tag_char>
mov    %al,0x1(%r13)
mov    %bl,0x2(%r13)
mov    %r15b,0x3(%r13)
mov    %r14b,0x4(%r13)
movb   $0x27,0x5(%r13)
mov    %r12,%rbx
mov    -0x8(%rbp),%r12
mov    -0x10(%rbp),%r13
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   (%rax)

0000000000009e50 <is_ICC_signature_char>:
push   %rbp
mov    %rsp,%rbp
mov    $0x1,%eax
cmp    $0x20,%rdi
jne    9e61 <is_ICC_signature_char+0x11>
leaveq 
retq   
cmp    $0x2f,%rdi
ja     9e7a <is_ICC_signature_char+0x2a>
cmp    $0x40,%rdi
ja     9e82 <is_ICC_signature_char+0x32>
xor    %ecx,%ecx
cmp    $0x60,%rdi
ja     9e8a <is_ICC_signature_char+0x3a>
mov    %rcx,%rax
leaveq 
retq   
cmp    $0x39,%rdi
ja     9e67 <is_ICC_signature_char+0x17>
leaveq 
retq   
cmp    $0x5a,%rdi
ja     9e6d <is_ICC_signature_char+0x1d>
leaveq 
retq   
cmp    $0x7a,%rdi
ja     9e92 <is_ICC_signature_char+0x42>
leaveq 
retq   
mov    %rcx,%rax
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

0000000000009ea0 <is_ICC_signature>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %rdi,-0x8(%rbp)
shr    $0x18,%rdi
callq  9e50 <is_ICC_signature_char>
test   %eax,%eax
jne    9ebd <is_ICC_signature+0x1d>
xor    %eax,%eax
leaveq 
retq   
mov    -0x8(%rbp),%rdi
and    $0xff0000,%rdi
shr    $0x10,%rdi
callq  9e50 <is_ICC_signature_char>
test   %eax,%eax
jne    9ed9 <is_ICC_signature+0x39>
xor    %eax,%eax
leaveq 
retq   
mov    -0x8(%rbp),%rdi
and    $0xff00,%rdi
shr    $0x8,%rdi
callq  9e50 <is_ICC_signature_char>
test   %eax,%eax
jne    9ef5 <is_ICC_signature+0x55>
xor    %eax,%eax
leaveq 
retq   
mov    -0x8(%rbp),%rax
movzbl %al,%edi
callq  9e50 <is_ICC_signature_char>
test   %eax,%eax
je     9f0c <is_ICC_signature+0x6c>
mov    $0x1,%eax
leaveq 
retq   
xor    %eax,%eax
leaveq 
retq   

0000000000009f10 <png_icc_profile_error>:
push   %rbp
mov    %rsp,%rbp
sub    $0x110,%rsp
mov    %rbx,-0x10(%rbp)
mov    %r12,-0x18(%rbp)
mov    %r13,-0x20(%rbp)
mov    %r14,-0x28(%rbp)
mov    %r15,-0x30(%rbp)
mov    %rdi,-0x8(%rbp)
test   %rsi,%rsi
je     9f44 <png_icc_profile_error+0x34>
movzwl 0x4a(%rsi),%eax
or     $0x8000,%ax
mov    %ax,0x4a(%rsi)
mov    %r8,%rbx
mov    %rsi,%r12
mov    %rdx,%r13
mov    %rcx,%r14
lea    -0x10c(%rbp),%rdi
mov    $0xc4,%esi
xor    %edx,%edx
lea    0x23448(%rip),%rcx        # 2d3ad <short_months.6+0x8d8>
callq  ad30 <png_safecat>
mov    %rax,%r15
mov    %r14,%rdi
callq  9ea0 <is_ICC_signature>
mov    %r13,%rcx
mov    %r15,%rdx
mov    %rax,%r15
lea    0x4f(%rdx),%rsi
lea    -0x10c(%rbp),%r13
mov    %r13,%rdi
callq  ad30 <png_safecat>
mov    %rax,%rdx
lea    0x2341c(%rip),%rcx        # 2d3b7 <short_months.6+0x8e2>
mov    %r13,%rdi
mov    $0xc4,%esi
callq  ad30 <png_safecat>
test   %r15d,%r15d
jne    9ff6 <png_icc_profile_error+0xe6>
mov    %r14,%rcx
mov    %rax,%r15
lea    -0x48(%rbp),%rdi
lea    -0x30(%rbp),%rsi
mov    $0x3,%edx
callq  ad80 <png_format_number>
mov    %rax,%rcx
mov    %r15,%rdx
mov    %r13,%rdi
mov    $0xc4,%r14d
mov    %r14,%rsi
callq  ad30 <png_safecat>
mov    %rax,%rdx
lea    0x233d5(%rip),%rcx        # 2d3bb <short_months.6+0x8e6>
mov    %r13,%rdi
mov    %r14,%rsi
callq  ad30 <png_safecat>
mov    %rax,%rdx
jmp    a024 <png_icc_profile_error+0x114>
mov    %r14,%rsi
mov    %rax,%r14
lea    -0x10c(%rbp,%r14,1),%r15
mov    %r15,%rdi
callq  9dc0 <png_icc_tag_name>
movb   $0x3a,-0x106(%rbp,%r14,1)
movb   $0x20,0x7(%r15)
lea    0x8(%r14),%rdx
mov    $0xc4,%r14d
mov    %rbx,%rcx
mov    %r14,%rsi
mov    %r13,%rdi
callq  ad30 <png_safecat>
test   %r12,%r12
jne    a03e <png_icc_profile_error+0x12e>
mov    $0x1,%edx
jmp    a043 <png_icc_profile_error+0x133>
mov    $0x2,%edx
mov    %r13,%rsi
mov    -0x8(%rbp),%rdi
callq  b140 <png_chunk_report>
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
mov    -0x10(%rbp),%rbx
xor    %eax,%eax
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

000000000000a070 <icc_check_length>:
push   %rbp
mov    %rsp,%rbp
cmp    $0x83,%ecx
jbe    a083 <icc_check_length+0x13>
mov    $0x1,%eax
leaveq 
retq   
mov    %ecx,%ecx
lea    0x23333(%rip),%r8        # 2d3bf <short_months.6+0x8ea>
callq  9f10 <png_icc_profile_error>
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

000000000000a0a0 <png_compare_ICC_profile_with_sRGB>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
xor    %eax,%eax
mov    0x388(%rdi),%ecx
and    $0x30,%ecx
cmp    $0x30,%ecx
jne    a0ba <png_compare_ICC_profile_with_sRGB+0x1a>
leaveq 
retq   
lea    0x228f7(%rip),%r11        # 2c9b8 <png_sRGB_checks>
mov    $0x10000,%ecx
mov    %rdx,-0x20(%rbp)
mov    %r14,-0x10(%rbp)
mov    %r15,-0x18(%rbp)
mov    %rax,%r8
mov    %r8,%r10
jmp    a114 <png_compare_ICC_profile_with_sRGB+0x74>
mov    %r10d,%r14d
shl    $0x5,%r14
mov    0xc(%r11,%r14,1),%r15d
movzbl 0x54(%rsi),%r9d
shl    $0x18,%r9d
movzbl 0x55(%rsi),%edx
shl    $0x10,%edx
add    %edx,%r9d
movzbl 0x56(%rsi),%edx
shl    $0x8,%edx
add    %r9d,%edx
movzbl 0x57(%rsi),%r9d
add    %r9d,%edx
cmp    %edx,%r15d
je     a124 <png_compare_ICC_profile_with_sRGB+0x84>
add    $0x1,%r10d
cmp    $0x6,%r10d
jbe    a0da <png_compare_ICC_profile_with_sRGB+0x3a>
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
leaveq 
retq   
mov    0x10(%r11,%r14,1),%r15d
movzbl 0x58(%rsi),%edx
shl    $0x18,%edx
movzbl 0x59(%rsi),%r9d
shl    $0x10,%r9d
add    %edx,%r9d
movzbl 0x5a(%rsi),%edx
shl    $0x8,%edx
add    %r9d,%edx
movzbl 0x5b(%rsi),%r9d
add    %r9d,%edx
cmp    %edx,%r15d
jne    a110 <png_compare_ICC_profile_with_sRGB+0x70>
mov    0x14(%r11,%r14,1),%r15d
movzbl 0x5c(%rsi),%r9d
shl    $0x18,%r9d
movzbl 0x5d(%rsi),%edx
shl    $0x10,%edx
add    %edx,%r9d
movzbl 0x5e(%rsi),%edx
shl    $0x8,%edx
add    %r9d,%edx
movzbl 0x5f(%rsi),%r9d
add    %r9d,%edx
cmp    %edx,%r15d
jne    a110 <png_compare_ICC_profile_with_sRGB+0x70>
mov    0x18(%r11,%r14,1),%r15d
movzbl 0x60(%rsi),%r9d
shl    $0x18,%r9d
movzbl 0x61(%rsi),%edx
shl    $0x10,%edx
add    %edx,%r9d
movzbl 0x62(%rsi),%edx
shl    $0x8,%edx
add    %r9d,%edx
movzbl 0x63(%rsi),%r9d
add    %r9d,%edx
cmp    %edx,%r15d
jne    a110 <png_compare_ICC_profile_with_sRGB+0x70>
test   %r8d,%r8d
jne    a1f9 <png_compare_ICC_profile_with_sRGB+0x159>
movzbl 0x1(%rsi),%ecx
shl    $0x10,%ecx
movzbl 0x2(%rsi),%edx
shl    $0x8,%edx
add    %ecx,%edx
movzbl (%rsi),%ecx
shl    $0x18,%ecx
add    %ecx,%edx
movzbl 0x3(%rsi),%ecx
lea    (%rdx,%rcx,1),%r8d
movzbl 0x40(%rsi),%edx
shl    $0x18,%edx
movzbl 0x41(%rsi),%ecx
shl    $0x10,%ecx
add    %ecx,%edx
movzbl 0x42(%rsi),%ecx
shl    $0x8,%ecx
add    %edx,%ecx
movzbl 0x43(%rsi),%edx
add    %edx,%ecx
mov    0x8(%r11,%r14,1),%edx
cmp    %r8d,%edx
jne    a110 <png_compare_ICC_profile_with_sRGB+0x70>
movzwl 0x1e(%r11,%r14,1),%r8d
cmp    %ecx,%r8d
je     a21a <png_compare_ICC_profile_with_sRGB+0x17a>
mov    %rdx,%r8
jmpq   a110 <png_compare_ICC_profile_with_sRGB+0x70>
mov    -0x20(%rbp),%rcx
test   %rcx,%rcx
je     a228 <png_compare_ICC_profile_with_sRGB+0x188>
mov    %rdi,%r15
jmp    a275 <png_compare_ICC_profile_with_sRGB+0x1d5>
mov    %rax,%r8
mov    %rax,%rcx
mov    %r12,-0x8(%rbp)
mov    %r13,-0x20(%rbp)
mov    %rdx,%r12
mov    %rcx,%rdx
mov    %rsi,%r13
mov    %r8,%rsi
mov    %rdi,%r15
mov    %rax,%rdi
callq  5550 <adler32@plt>
mov    %rax,%rdi
mov    %r13,%rsi
mov    %r12,%rdx
callq  5550 <adler32@plt>
mov    %rax,%rcx
mov    %r12,%rdx
mov    %r13,%rsi
xor    %eax,%eax
lea    0x2274b(%rip),%r11        # 2c9b8 <png_sRGB_checks>
mov    -0x20(%rbp),%r13
mov    -0x8(%rbp),%r12
mov    (%r14,%r11,1),%edi
cmp    %rcx,%rdi
je     a2a0 <png_compare_ICC_profile_with_sRGB+0x200>
mov    %r15,%rdi
mov    %rax,%r14
lea    0x23186(%rip),%rsi        # 2d411 <short_months.6+0x93c>
mov    %r14,%rdx
callq  b140 <png_chunk_report>
mov    %r14,%rax
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
leaveq 
retq   
mov    %rax,%rdi
mov    %rax,%rcx
mov    %r12,-0x8(%rbp)
mov    %r13,-0x20(%rbp)
mov    %rdx,%r12
mov    %rcx,%rdx
mov    %rsi,%r13
mov    %rdi,%rsi
mov    %rax,%rdi
callq  51c0 <crc32@plt>
mov    %r12,%rdx
mov    %r13,%rsi
mov    %rax,%rdi
callq  51c0 <crc32@plt>
lea    0x226e1(%rip),%r12        # 2c9b8 <png_sRGB_checks>
mov    0x4(%r12,%r14,1),%ecx
cmp    %rax,%rcx
je     a2ed <png_compare_ICC_profile_with_sRGB+0x24d>
xor    %eax,%eax
mov    -0x20(%rbp),%r13
mov    -0x8(%rbp),%r12
jmp    a27e <png_compare_ICC_profile_with_sRGB+0x1de>
movzbl 0x1d(%r12,%r14,1),%eax
test   %al,%al
jne    a314 <png_compare_ICC_profile_with_sRGB+0x274>
movzbl 0x1c(%r12,%r14,1),%eax
test   %al,%al
jne    a328 <png_compare_ICC_profile_with_sRGB+0x288>
mov    %r15,%rdi
lea    0x230db(%rip),%rsi        # 2d3e6 <short_months.6+0x911>
xor    %edx,%edx
callq  b140 <png_chunk_report>
jmp    a328 <png_compare_ICC_profile_with_sRGB+0x288>
mov    %r15,%rdi
lea    0x230ab(%rip),%rsi        # 2d3c9 <short_months.6+0x8f4>
mov    $0x2,%edx
callq  b140 <png_chunk_report>
movzbl 0x1d(%r12,%r14,1),%eax
add    $0x1,%eax
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
mov    -0x20(%rbp),%r13
mov    -0x8(%rbp),%r12
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

000000000000a350 <png_gt>:
push   %rbp
mov    %rsp,%rbp
cmp    %rdi,%rsi
jae    a360 <png_gt+0x10>
mov    $0x1,%eax
leaveq 
retq   
xor    %eax,%eax
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nop

000000000000a370 <png_pow10>:
push   %rbp
mov    %rsp,%rbp
test   %edi,%edi
js     a394 <png_pow10+0x24>
xor    %eax,%eax
movsd  0x230f6(%rip),%xmm2        # 2d478 <short_months.6+0x9a3>
test   %edi,%edi
jle    a3a2 <png_pow10+0x32>
movsd  0x230e2(%rip),%xmm1        # 2d470 <short_months.6+0x99b>
movapd %xmm2,%xmm0
jmp    a3ac <png_pow10+0x3c>
cmp    $0xfffffecd,%edi
jge    a3c6 <png_pow10+0x56>
xorpd  %xmm0,%xmm0
leaveq 
retq   
movapd %xmm2,%xmm0
leaveq 
retq   
mulsd  %xmm1,%xmm1
mov    %rdi,%rcx
and    $0x1,%ecx
test   %ecx,%ecx
jle    a3ba <png_pow10+0x4a>
mulsd  %xmm1,%xmm0
sar    %edi
test   %edi,%edi
jg     a3a8 <png_pow10+0x38>
test   %eax,%eax
jg     a3cf <png_pow10+0x5f>
leaveq 
retq   
neg    %edi
mov    $0x1,%eax
jmp    a37a <png_pow10+0xa>
divsd  %xmm0,%xmm2
movapd %xmm2,%xmm0
leaveq 
retq   
nopl   0x0(%rax)

000000000000a3e0 <png_product2>:
push   %rbp
mov    %rsp,%rbp
cvtsi2sd %edi,%xmm1
movsd  0x230c8(%rip),%xmm0        # 2d4b8 <short_months.6+0x9e3>
mulsd  %xmm0,%xmm1
cvtsi2sd %esi,%xmm0
mulsd  %xmm1,%xmm0
movsd  0x23054(%rip),%xmm1        # 2d458 <short_months.6+0x983>
addsd  %xmm1,%xmm0
callq  57e0 <floor@plt>
movsd  0x23053(%rip),%xmm1        # 2d468 <short_months.6+0x993>
ucomisd %xmm1,%xmm0
jp     a41d <png_product2+0x3d>
jbe    a421 <png_product2+0x41>
xor    %eax,%eax
leaveq 
retq   
movsd  0x23037(%rip),%xmm1        # 2d460 <short_months.6+0x98b>
ucomisd %xmm1,%xmm0
jae    a433 <png_product2+0x53>
xor    %eax,%eax
leaveq 
retq   
cvttsd2si %xmm0,%eax
leaveq 
retq   
nopl   0x0(%rax)

000000000000a440 <png_build_16bit_table>:
push   %rbp
mov    %rsp,%rbp
sub    $0x80,%rsp
mov    %r12,-0x50(%rbp)
mov    %r13,-0x58(%rbp)
mov    %r14,-0x60(%rbp)
mov    %r15,-0x68(%rbp)
mov    %rdx,-0x70(%rbp)
mov    %rbx,-0x48(%rbp)
mov    %rsi,%rbx
mov    %rdi,%r12
mov    %rcx,%r13
mov    %rdx,%r14
mov    %r12,-0x40(%rbp)
mov    %r13,%rdi
callq  8b20 <png_gamma_significant>
mov    %rax,-0x78(%rbp)
mov    $0x10,%ecx
sub    %r14d,%ecx
mov    %r13,%rdx
mov    %rax,%r13
mov    $0x1,%r15d
mov    %r15,%rax
shl    %cl,%eax
add    $0xffffffff,%eax
mov    %rax,-0x30(%rbp)
cvtsi2sd %eax,%xmm1
movsd  0x22fcd(%rip),%xmm0        # 2d478 <short_months.6+0x9a3>
divsd  %xmm1,%xmm0
movdqu %xmm0,-0x10(%rbp)
cvtsi2sd %edx,%xmm0
movsd  0x22ff8(%rip),%xmm1        # 2d4b8 <short_months.6+0x9e3>
mulsd  %xmm1,%xmm0
movdqu %xmm0,-0x20(%rbp)
mov    $0xf,%ecx
sub    %r14d,%ecx
mov    %r15,%rax
shl    %cl,%eax
mov    %rax,-0x38(%rbp)
mov    $0x8,%ecx
sub    %r14d,%ecx
shl    %cl,%r15d
mov    %r15,-0x80(%rbp)
mov    %r15d,%esi
shl    $0x3,%rsi
mov    %rcx,%r14
mov    %r12,%rdi
callq  5780 <png_calloc@plt>
mov    %rax,-0x28(%rbp)
mov    %rax,(%rbx)
mov    %r14,%rcx
mov    %rax,%r14
mov    %r12,%rdi
mov    $0x200,%esi
xor    %ebx,%ebx
mov    -0x70(%rbp),%r12
jmp    a58f <png_build_16bit_table+0x14f>
mov    %r14,%rax
shl    %cl,%eax
add    %ebx,%eax
mov    %eax,%eax
cvtsi2sd %rax,%xmm0
mov    %rcx,%r15
mulsd  %xmm2,%xmm0
callq  5360 <pow@plt>
movsd  0x22f76(%rip),%xmm1        # 2d4b0 <short_months.6+0x9db>
mulsd  %xmm1,%xmm0
movsd  0x22f12(%rip),%xmm1        # 2d458 <short_months.6+0x983>
addsd  %xmm1,%xmm0
callq  57e0 <floor@plt>
cvttsd2si %xmm0,%rcx
mov    %r14d,%eax
mov    %cx,0x0(%r13,%rax,2)
add    $0x1,%r14d
mov    %r15,%rcx
movdqu -0x20(%rbp),%xmm1
movdqu -0x10(%rbp),%xmm2
cmp    $0xff,%r14d
jbe    a518 <png_build_16bit_table+0xd8>
mov    -0x28(%rbp),%r14
mov    -0x78(%rbp),%r13
add    $0x1,%ebx
mov    $0x200,%esi
mov    -0x40(%rbp),%rdi
mov    -0x80(%rbp),%r15
cmp    %r15d,%ebx
jb     a5aa <png_build_16bit_table+0x16a>
mov    -0x48(%rbp),%rbx
mov    -0x68(%rbp),%r15
mov    -0x60(%rbp),%r14
mov    -0x58(%rbp),%r13
mov    -0x50(%rbp),%r12
leaveq 
retq   
mov    %rcx,%r15
callq  5800 <png_malloc@plt>
test   %r13d,%r13d
mov    %ebx,%ecx
mov    %rax,(%r14,%rcx,8)
je     a5d2 <png_build_16bit_table+0x192>
mov    %r15,%rcx
mov    %rax,%r13
xor    %r14d,%r14d
movdqu -0x20(%rbp),%xmm1
movdqu -0x10(%rbp),%xmm2
jmp    a56e <png_build_16bit_table+0x12e>
mov    %r15,%rcx
mov    %rax,%r15
xor    %esi,%esi
mov    -0x30(%rbp),%rdi
mov    -0x38(%rbp),%r8
jmp    a60b <png_build_16bit_table+0x1cb>
mov    %rsi,%rax
shl    %cl,%eax
test   %r12d,%r12d
lea    (%rbx,%rax,1),%eax
je     a601 <png_build_16bit_table+0x1c1>
mov    %rax,%rdx
shl    $0x10,%edx
sub    %eax,%edx
lea    (%r8,%rdx,1),%eax
xor    %edx,%edx
div    %edi
mov    %esi,%edx
mov    %ax,(%r15,%rdx,2)
add    $0x1,%esi
cmp    $0xff,%esi
jbe    a5e4 <png_build_16bit_table+0x1a4>
jmpq   a57f <png_build_16bit_table+0x13f>
nopl   0x0(%rax,%rax,1)

000000000000a620 <png_build_16to8_table>:
push   %rbp
mov    %rsp,%rbp
sub    $0x40,%rsp
mov    %rcx,-0x30(%rbp)
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rdx,-0x40(%rbp)
mov    $0x8,%ecx
sub    %edx,%ecx
mov    %rsi,%rbx
mov    %rdi,%r13
mov    $0x1,%r12d
shl    %cl,%r12d
mov    %rcx,-0x38(%rbp)
mov    %r12d,%esi
shl    $0x3,%rsi
mov    %r13,%rdi
callq  5780 <png_calloc@plt>
mov    %rax,(%rbx)
mov    %rax,%rbx
mov    $0x200,%r15d
xor    %r14d,%r14d
jmp    a694 <png_build_16to8_table+0x74>
mov    %r13,%rdi
mov    %r15,%rsi
callq  5800 <png_malloc@plt>
mov    %r14d,%ecx
mov    %rax,(%rbx,%rcx,8)
add    $0x1,%r14d
cmp    %r12d,%r14d
jb     a67e <png_build_16to8_table+0x5e>
mov    $0xff,%r12d
mov    -0x40(%rbp),%rcx
shr    %cl,%r12d
mov    %rcx,%rax
mov    $0x10,%ecx
sub    %eax,%ecx
mov    $0x1,%eax
shl    %cl,%eax
lea    -0x1(%rax),%r14d
mov    -0x38(%rbp),%rcx
xor    %r13d,%r13d
mov    -0x30(%rbp),%rsi
mov    %r13,%rax
jmp    a6f5 <png_build_16to8_table+0xd5>
mov    %r13,%rdi
and    %r12d,%edi
mov    %edi,%edi
mov    (%rbx,%rdi,8),%rdi
mov    %r13,%r8
shr    %cl,%r8d
mov    %r8d,%r8d
mov    %dx,(%rdi,%r8,2)
add    $0x1,%r13d
cmp    %esi,%r13d
jb     a6cb <png_build_16to8_table+0xab>
add    $0x1,%eax
mov    -0x30(%rbp),%rsi
cmp    $0xfe,%eax
jbe    a705 <png_build_16to8_table+0xe5>
mov    $0x100,%eax
shl    %cl,%eax
jmp    a76a <png_build_16to8_table+0x14a>
mov    %rax,%rdx
shl    $0x8,%edx
add    %eax,%edx
mov    %rdx,-0x38(%rbp)
movzwl %dx,%edx
lea    0x80(%rdx),%edi
mov    %rax,-0x40(%rbp)
mov    %rcx,%r15
callq  8b80 <png_gamma_16bit_correct>
movzwl %ax,%eax
imul   %r14d,%eax
lea    0x8000(%rax),%edx
mov    %r15,%rcx
mov    $0x80008001,%eax
mul    %edx
shr    $0xf,%edx
lea    0x1(%rdx),%esi
mov    -0x40(%rbp),%rax
mov    -0x38(%rbp),%rdx
jmp    a6e9 <png_build_16to8_table+0xc9>
mov    %r12,%rdx
and    %r13d,%edx
mov    %edx,%edx
mov    (%rbx,%rdx,8),%rdx
mov    %r13,%rsi
shr    %cl,%esi
mov    %esi,%esi
movw   $0xffff,(%rdx,%rsi,2)
add    $0x1,%r13d
cmp    %r13d,%eax
ja     a74d <png_build_16to8_table+0x12d>
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)

000000000000a790 <png_build_8bit_table>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %r13,-0x8(%rbp)
mov    %r14,-0x10(%rbp)
mov    %r15,-0x18(%rbp)
mov    %rsi,%r13
mov    %rdx,%r14
mov    %rdi,%r15
mov    %r14,%rdi
callq  8b20 <png_gamma_significant>
mov    %r15,%rdi
mov    %rax,%r15
mov    $0x100,%esi
callq  5800 <png_malloc@plt>
mov    %rax,0x0(%r13)
xor    %r13d,%r13d
test   %r15d,%r15d
je     a7e1 <png_build_8bit_table+0x51>
mov    %rax,%r15
jmp    a80e <png_build_8bit_table+0x7e>
mov    %r13d,%ecx
mov    %r13b,(%rax,%rcx,1)
add    $0x1,%r13d
cmp    $0xff,%r13d
jbe    a7d6 <png_build_8bit_table+0x46>
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
leaveq 
retq   
mov    %r13,%rdi
mov    %r14,%rsi
callq  8bf0 <png_gamma_8bit_correct>
mov    %r13d,%ecx
mov    %al,(%r15,%rcx,1)
add    $0x1,%r13d
cmp    $0xff,%r13d
jbe    a7f8 <png_build_8bit_table+0x68>
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)

000000000000a830 <png_image_free_function>:
push   %rbp
mov    %rsp,%rbp
sub    $0x40,%rsp
xor    %eax,%eax
mov    (%rdi),%rsi
mov    (%rsi),%rdx
test   %rdx,%rdx
jne    a847 <png_image_free_function+0x17>
leaveq 
retq   
mov    0x28(%rsi),%eax
mov    %rax,%rcx
and    $0x2,%ecx
test   %ecx,%ecx
jg     a8b2 <png_image_free_function+0x82>
lea    -0x40(%rbp),%rcx
mov    (%rsi),%rax
mov    %rax,(%rcx)
mov    0x8(%rsi),%rax
mov    %rax,0x8(%rcx)
mov    0x10(%rsi),%rax
mov    %rax,0x10(%rcx)
mov    0x18(%rsi),%rax
mov    %rax,0x18(%rcx)
mov    0x20(%rsi),%rax
mov    %rax,0x20(%rcx)
mov    0x28(%rsi),%rax
mov    %rax,0x28(%rcx)
mov    %rcx,(%rdi)
mov    (%rcx),%rdi
callq  5790 <png_free@plt>
lea    -0x40(%rbp),%rdi
lea    0x8(%rdi),%rsi
movslq 0x28(%rdi),%rax
and    $0x1,%eax
test   %eax,%eax
jg     a8f8 <png_image_free_function+0xc8>
xor    %edx,%edx
callq  54b0 <png_destroy_read_struct@plt>
mov    $0x1,%eax
leaveq 
retq   
and    $0xfffffffd,%eax
mov    0x108(%rdx),%rcx
mov    %eax,0x28(%rsi)
test   %rcx,%rcx
je     a854 <png_image_free_function+0x24>
movq   $0x0,0x108(%rdx)
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rdi,%r14
mov    %rcx,%rdi
mov    %rsi,%r15
callq  5240 <fclose@plt>
mov    %r15,%rsi
mov    %r14,%rdi
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
jmpq   a854 <png_image_free_function+0x24>
callq  56f0 <png_destroy_write_struct@plt>
mov    $0x1,%eax
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

000000000000a910 <png_set_longjmp_fn>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
xor    %eax,%eax
test   %rdi,%rdi
jne    a921 <png_set_longjmp_fn+0x11>
leaveq 
retq   
mov    0xd0(%rdi),%rcx
test   %rcx,%rcx
je     a94e <png_set_longjmp_fn+0x3e>
mov    0xd8(%rdi),%rax
test   %rax,%rax
je     a996 <png_set_longjmp_fn+0x86>
cmp    %rax,%rdx
je     a9a9 <png_set_longjmp_fn+0x99>
lea    0x22bc6(%rip),%rsi        # 2d50b <png_digit+0x2f>
callq  5390 <png_warning@plt>
xor    %eax,%eax
leaveq 
retq   
movq   $0x0,0xd8(%rdi)
cmp    $0xc8,%rdx
jbe    a9a2 <png_set_longjmp_fn+0x92>
mov    %rdi,%rax
mov    %rdx,%rcx
mov    %r15,-0x18(%rbp)
mov    %rdx,-0x10(%rbp)
mov    %rsi,-0x8(%rbp)
mov    %rcx,%rsi
mov    %rdi,%r15
mov    %rax,%rdi
callq  5150 <png_malloc_warn@plt>
mov    %rax,0xd0(%r15)
test   %rax,%rax
jne    a9b9 <png_set_longjmp_fn+0xa9>
mov    -0x18(%rbp),%r15
xor    %eax,%eax
leaveq 
retq   
cmp    %rcx,%rdi
jne    a9d1 <png_set_longjmp_fn+0xc1>
mov    $0xc8,%eax
jmp    a939 <png_set_longjmp_fn+0x29>
mov    %rdi,0xd0(%rdi)
mov    %rsi,0xc8(%rdi)
mov    0xd0(%rdi),%rax
leaveq 
retq   
mov    -0x10(%rbp),%rax
mov    %rax,0xd8(%r15)
mov    %r15,%rdi
mov    -0x8(%rbp),%rsi
mov    -0x18(%rbp),%r15
jmp    a9a9 <png_set_longjmp_fn+0x99>
lea    0x22b14(%rip),%rsi        # 2d4ec <png_digit+0x10>
callq  5470 <png_error@plt>
nopl   (%rax)

000000000000a9e0 <png_longjmp>:
push   %rbp
mov    %rsp,%rbp
test   %rdi,%rdi
jne    a9ee <png_longjmp+0xe>
callq  5090 <abort@plt>
mov    0xc8(%rdi),%rax
test   %rax,%rax
je     a9e9 <png_longjmp+0x9>
mov    0xd0(%rdi),%rdi
test   %rdi,%rdi
je     a9e9 <png_longjmp+0x9>
callq  *%rax
jmp    a9e9 <png_longjmp+0x9>
nopw   0x0(%rax,%rax,1)

000000000000aa10 <png_set_error_fn>:
push   %rbp
mov    %rsp,%rbp
test   %rdi,%rdi
jne    aa1b <png_set_error_fn+0xb>
leaveq 
retq   
mov    %rsi,0xf0(%rdi)
mov    %rdx,0xe0(%rdi)
mov    %rcx,0xe8(%rdi)
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   (%rax)

000000000000aa40 <png_get_error_ptr>:
push   %rbp
mov    %rsp,%rbp
test   %rdi,%rdi
jne    aa4d <png_get_error_ptr+0xd>
xor    %eax,%eax
leaveq 
retq   
mov    0xf0(%rdi),%rax
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)

000000000000aa60 <png_error>:
push   %rbp
mov    %rsp,%rbp
test   %rdi,%rdi
jne    aa6e <png_error+0xe>
callq  b320 <png_default_error>
mov    0xe0(%rdi),%rax
test   %rax,%rax
je     aa69 <png_error+0x9>
mov    %rdi,%r12
mov    %rsi,%rbx
callq  *%rax
mov    %rbx,%rsi
mov    %r12,%rdi
jmp    aa69 <png_error+0x9>
nopw   0x0(%rax,%rax,1)

000000000000aa90 <png_chunk_error>:
push   %rbp
mov    %rsp,%rbp
sub    $0xe0,%rsp
test   %rdi,%rdi
je     aac0 <png_chunk_error+0x30>
mov    %rsi,%rdx
lea    -0xd6(%rbp),%rbx
mov    %rdi,%r12
mov    %rbx,%rsi
callq  b3c0 <png_format_buffer>
mov    %rbx,%rsi
mov    %r12,%rdi
callq  5470 <png_error@plt>
xor    %edi,%edi
callq  5470 <png_error@plt>
nopw   0x0(%rax,%rax,1)

000000000000aad0 <png_warning>:
push   %rbp
mov    %rsp,%rbp
xor    %eax,%eax
test   %rdi,%rdi
jne    aaf0 <png_warning+0x20>
mov    %rax,%rcx
movslq %eax,%rdx
test   %rcx,%rcx
jne    ab03 <png_warning+0x33>
add    %rdx,%rsi
callq  b380 <png_default_warning>
leaveq 
retq   
mov    $0x1,%ecx
movsbq (%rsi),%rdx
cmp    $0x23,%dl
jne    aade <png_warning+0xe>
mov    %rcx,%rax
jmp    ab26 <png_warning+0x56>
mov    0xe8(%rdi),%rax
test   %rax,%rax
je     aae6 <png_warning+0x16>
add    %rdx,%rsi
callq  *%rax
leaveq 
retq   
movslq %eax,%rdx
movsbq (%rsi,%rdx,1),%rdx
cmp    $0x20,%dl
je     aade <png_warning+0xe>
add    $0x1,%eax
cmp    $0xe,%eax
jle    ab16 <png_warning+0x46>
jmp    aade <png_warning+0xe>
nopl   (%rax)

000000000000ab30 <png_chunk_warning>:
push   %rbp
mov    %rsp,%rbp
sub    $0xe0,%rsp
test   %rdi,%rdi
je     ab74 <png_chunk_warning+0x44>
lea    -0xde(%rbp),%rax
mov    %rdi,%rcx
mov    %r15,-0x8(%rbp)
mov    %rsi,%rdx
mov    %rax,%rsi
mov    %rdi,%r15
mov    %rcx,%rdi
callq  b3c0 <png_format_buffer>
mov    %r15,%rdi
lea    -0xde(%rbp),%rsi
callq  5390 <png_warning@plt>
mov    -0x8(%rbp),%r15
leaveq 
retq   
xor    %edi,%edi
callq  5390 <png_warning@plt>
leaveq 
retq   
nopl   (%rax)

000000000000ab80 <png_benign_error>:
push   %rbp
mov    %rsp,%rbp
mov    0x130(%rdi),%eax
and    $0x100000,%eax
test   %eax,%eax
jne    aba7 <png_benign_error+0x27>
mov    0x12c(%rdi),%eax
and    $0x8000,%eax
test   %eax,%eax
jne    abbd <png_benign_error+0x3d>
callq  5470 <png_error@plt>
mov    0x12c(%rdi),%eax
and    $0x8000,%eax
test   %eax,%eax
jne    abcc <png_benign_error+0x4c>
callq  5390 <png_warning@plt>
leaveq 
retq   
mov    0x218(%rdi),%eax
test   %eax,%eax
je     aba2 <png_benign_error+0x22>
callq  5060 <png_chunk_error@plt>
mov    0x218(%rdi),%eax
test   %eax,%eax
je     abb6 <png_benign_error+0x36>
callq  56a0 <png_chunk_warning@plt>
leaveq 
retq   
nopl   (%rax)

000000000000abe0 <png_chunk_benign_error>:
push   %rbp
mov    %rsp,%rbp
mov    0x130(%rdi),%eax
and    $0x100000,%eax
test   %eax,%eax
jne    abf8 <png_chunk_benign_error+0x18>
callq  5060 <png_chunk_error@plt>
callq  56a0 <png_chunk_warning@plt>
leaveq 
retq   
nop

000000000000ac00 <png_free_jmpbuf>:
push   %rbp
mov    %rsp,%rbp
sub    $0xe0,%rsp
test   %rdi,%rdi
jne    ac12 <png_free_jmpbuf+0x12>
leaveq 
retq   
mov    0xd0(%rdi),%rcx
test   %rcx,%rcx
jne    ac41 <png_free_jmpbuf+0x41>
movq   $0x0,0xd8(%rdi)
movq   $0x0,0xd0(%rdi)
movq   $0x0,0xc8(%rdi)
leaveq 
retq   
mov    0xd8(%rdi),%rax
test   %rax,%rax
je     ac1e <png_free_jmpbuf+0x1e>
cmp    %rcx,%rdi
je     ac1e <png_free_jmpbuf+0x1e>
lea    -0xd8(%rbp),%rax
mov    %r15,-0x10(%rbp)
mov    %rcx,-0x8(%rbp)
mov    %rdi,%r15
mov    %rax,%rdi
callq  5420 <_setjmp@plt>
test   %eax,%eax
je     ac79 <png_free_jmpbuf+0x79>
mov    %r15,%rdi
mov    -0x10(%rbp),%r15
jmp    ac1e <png_free_jmpbuf+0x1e>
lea    -0xd8(%rbp),%rax
mov    %rax,0xd0(%r15)
movq   $0x0,0xd8(%r15)
mov    0x27347(%rip),%rax        # 31fe0 <longjmp@GLIBC_2.2.5>
mov    %rax,0xc8(%r15)
mov    %r15,%rdi
mov    -0x8(%rbp),%rsi
callq  5790 <png_free@plt>
mov    %r15,%rdi
mov    -0x10(%rbp),%r15
jmpq   ac1e <png_free_jmpbuf+0x1e>
nopl   0x0(%rax,%rax,1)

000000000000acc0 <png_fixed_error>:
push   %rbp
mov    %rsp,%rbp
sub    $0xe0,%rsp
mov    %rdi,%r12
mov    %rsi,%r13
lea    -0xdc(%rbp),%rbx
lea    0x2284d(%rip),%rsi        # 2d52c <png_digit+0x50>
mov    $0x18,%edx
mov    %rbx,%rdi
callq  54c0 <memcpy@plt>
xor    %eax,%eax
test   %r13,%r13
jne    ad1e <png_fixed_error+0x5e>
mov    %eax,%eax
movb   $0x0,-0xc4(%rbp,%rax,1)
mov    %rbx,%rsi
mov    %r12,%rdi
callq  5470 <png_error@plt>
mov    %eax,%edx
movsbq 0x0(%r13,%rdx,1),%rcx
test   %cl,%cl
je     acf3 <png_fixed_error+0x33>
mov    %cl,-0xc4(%rbp,%rdx,1)
add    $0x1,%eax
cmp    $0xc2,%eax
jbe    ad08 <png_fixed_error+0x48>
jmp    acf3 <png_fixed_error+0x33>
nopw   0x0(%rax,%rax,1)

000000000000ad30 <png_safecat>:
push   %rbp
mov    %rsp,%rbp
test   %rdi,%rdi
jne    ad3e <png_safecat+0xe>
mov    %rdx,%rax
leaveq 
retq   
cmp    %rsi,%rdx
jb     ad48 <png_safecat+0x18>
mov    %rdx,%rax
leaveq 
retq   
test   %rcx,%rcx
jne    ad56 <png_safecat+0x26>
mov    %rdx,%rax
movb   $0x0,(%rdi,%rax,1)
leaveq 
retq   
add    $0xffffffffffffffff,%rsi
mov    %rdx,%rax
jmp    ad6f <png_safecat+0x3f>
cmp    %rax,%rsi
jbe    ad50 <png_safecat+0x20>
mov    %dl,(%rdi,%rax,1)
add    $0x1,%rax
add    $0x1,%rcx
movsbq (%rcx),%rdx
test   %dl,%dl
jne    ad5f <png_safecat+0x2f>
jmp    ad50 <png_safecat+0x20>
nopl   0x0(%rax)

000000000000ad80 <png_format_number>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    %r15,-0x28(%rbp)
mov    %r14,-0x20(%rbp)
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
lea    -0x1(%rdx),%r11d
add    $0xffffffffffffffff,%rsi
movb   $0x0,(%rsi)
mov    %rdx,%r9
mov    $0xa,%ebx
lea    0x2278f(%rip),%r8        # 2d545 <digits.5>
mov    $0x1,%r12d
xor    %r10d,%r10d
mov    $0x5,%edx
mov    $0x2,%r14d
mov    %r10,%r13
mov    %r13,%r15
jmp    adf0 <png_format_number+0x70>
test   %rcx,%rcx
je     ae0e <png_format_number+0x8e>
cmp    $0x4,%r11d
jbe    ae2c <png_format_number+0xac>
mov    %r10,%rcx
cmp    $0x5,%r9d
lea    0x1(%r15),%r15d
jne    adf0 <png_format_number+0x70>
cmp    $0x5,%r15d
je     ae46 <png_format_number+0xc6>
cmp    %rdi,%rsi
ja     add2 <png_format_number+0x52>
mov    %rsi,%rax
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x20(%rbp),%r14
mov    -0x28(%rbp),%r15
leaveq 
retq   
cmp    %r15d,%r12d
jg     add7 <png_format_number+0x57>
mov    %rsi,%rax
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x20(%rbp),%r14
mov    -0x28(%rbp),%r15
leaveq 
retq   
lea    0x22695(%rip),%rdx        # 2d4c8 <short_months.6+0x9f3>
movslq (%rdx,%r11,4),%rax
add    %rdx,%rax
jmpq   *%rax
mov    $0x5,%edx
mov    %r10,%rcx
jmp    ade0 <png_format_number+0x60>
cmp    %rdi,%rsi
ja     aee3 <png_format_number+0x163>
mov    %rdx,%r15
jmp    adf0 <png_format_number+0x70>
mov    %r14,%r12
mov    %rcx,%rax
and    $0xf,%rax
movsbq (%rax,%r8,1),%rax
add    $0xffffffffffffffff,%rsi
mov    %al,(%rsi)
shr    $0x4,%rcx
mov    $0x5,%edx
jmpq   ade0 <png_format_number+0x60>
mov    %r14,%r12
xor    %r14d,%r14d
mov    %rcx,%rax
mov    %r14,%rdx
div    %rbx
movsbq (%rdx,%r8,1),%rax
add    $0xffffffffffffffff,%rsi
mov    %al,(%rsi)
mov    %rcx,%rax
mov    %r14,%rdx
div    %rbx
mov    %rax,%rcx
mov    $0x2,%r14d
mov    $0x5,%edx
jmpq   ade0 <png_format_number+0x60>
test   %r13d,%r13d
jle    aef8 <png_format_number+0x178>
xor    %edx,%edx
mov    %rcx,%rax
div    %rbx
movsbq (%rdx,%r8,1),%rax
add    $0xffffffffffffffff,%rsi
mov    %al,(%rsi)
mov    $0x1,%r13d
mov    %rcx,%rax
xor    %edx,%edx
div    %rbx
mov    %rax,%rcx
mov    $0x5,%edx
mov    %rdx,%r12
jmpq   ade0 <png_format_number+0x60>
test   %r13d,%r13d
jg     af0a <png_format_number+0x18a>
test   %rcx,%rcx
je     af19 <png_format_number+0x199>
mov    %rdx,%r15
mov    %r10,%r13
jmpq   adf0 <png_format_number+0x70>
xor    %edx,%edx
mov    %rcx,%rax
div    %rbx
test   %rdx,%rdx
jne    aeb2 <png_format_number+0x132>
mov    %r10,%r13
jmp    aecb <png_format_number+0x14b>
add    $0xffffffffffffffff,%rsi
movb   $0x2e,(%rsi)
mov    %rdx,%r15
jmpq   adf0 <png_format_number+0x70>
add    $0xffffffffffffffff,%rsi
movb   $0x30,(%rsi)
mov    %rdx,%r15
mov    %r10,%rcx
mov    %rcx,%r13
jmpq   adf0 <png_format_number+0x70>
xchg   %ax,%ax

000000000000af30 <png_warning_parameter>:
push   %rbp
mov    %rsp,%rbp
test   %esi,%esi
jg     af3a <png_warning_parameter+0xa>
leaveq 
retq   
cmp    $0x8,%esi
jle    af41 <png_warning_parameter+0x11>
leaveq 
retq   
lea    -0x1(%rsi),%eax
movslq %eax,%rax
shl    $0x5,%rax
add    %rax,%rdi
mov    %rdx,%rcx
mov    $0x20,%esi
xor    %edx,%edx
callq  ad30 <png_safecat>
leaveq 
retq   
nop

000000000000af60 <png_warning_parameter_unsigned>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rdi,%r14
mov    %rsi,%r15
lea    -0x28(%rbp),%rdi
lea    -0x10(%rbp),%rsi
callq  ad80 <png_format_number>
mov    %rax,%rdx
mov    %r15,%rsi
mov    %r14,%rdi
callq  af30 <png_warning_parameter>
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

000000000000afa0 <png_warning_parameter_signed>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    %r13,-0x8(%rbp)
mov    %r14,-0x10(%rbp)
mov    %r15,-0x18(%rbp)
movslq %ecx,%rax
test   %ecx,%ecx
js     afc3 <png_warning_parameter_signed+0x23>
mov    %rax,%rcx
xor    %r13d,%r13d
jmp    afcf <png_warning_parameter_signed+0x2f>
mov    %rax,%rcx
neg    %rcx
mov    $0x1,%r13d
mov    %rsi,%r14
mov    %rdi,%r15
lea    -0x30(%rbp),%rdi
lea    0x18(%rdi),%rsi
callq  ad80 <png_format_number>
test   %r13,%r13
jne    b003 <png_warning_parameter_signed+0x63>
mov    %rax,%rdx
mov    %r14,%rsi
mov    %r15,%rdi
callq  af30 <png_warning_parameter>
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
leaveq 
retq   
lea    -0x30(%rbp),%rcx
cmp    %rax,%rcx
jb     b011 <png_warning_parameter_signed+0x71>
mov    %rax,%rdx
jmp    afea <png_warning_parameter_signed+0x4a>
lea    -0x1(%rax),%rdx
movb   $0x2d,(%rdx)
jmp    afea <png_warning_parameter_signed+0x4a>
nopw   0x0(%rax,%rax,1)

000000000000b020 <png_formatted_warning>:
push   %rbp
mov    %rsp,%rbp
sub    $0xd0,%rsp
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
xor    %r15d,%r15d
lea    0x22519(%rip),%r11        # 2d556 <valid_parameters.6>
mov    %r15,%rax
jmp    b062 <png_formatted_warning+0x42>
movsbq (%rdx),%rcx
test   %cl,%cl
je     b06a <png_formatted_warning+0x4a>
test   %rsi,%rsi
jne    b088 <png_formatted_warning+0x68>
movsbq (%rdx),%rcx
mov    %cl,-0xd0(%rbp,%rax,1)
add    $0x1,%rax
add    $0x1,%rdx
cmp    $0xbe,%rax
jbe    b042 <png_formatted_warning+0x22>
movb   $0x0,-0xd0(%rbp,%rax,1)
lea    -0xd0(%rbp),%rsi
callq  5390 <png_warning@plt>
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
cmp    $0x40,%cl
jne    b04f <png_formatted_warning+0x2f>
lea    0x1(%rdx),%r14
movsbq (%r14),%r10
test   %r10b,%r10b
je     b04f <png_formatted_warning+0x2f>
mov    %r15,%rcx
jmp    b0a7 <png_formatted_warning+0x87>
test   %r9b,%r9b
je     b0b4 <png_formatted_warning+0x94>
add    $0x1,%ecx
movslq %ecx,%r8
movsbq (%r8,%r11,1),%r9
cmp    %r10b,%r9b
jne    b09f <png_formatted_warning+0x7f>
cmp    $0x7,%ecx
jle    b0be <png_formatted_warning+0x9e>
mov    %r14,%rdx
jmp    b04f <png_formatted_warning+0x2f>
shl    $0x5,%r8
lea    (%rsi,%r8,1),%rcx
lea    0x20(%rcx),%r9
jmp    b0ea <png_formatted_warning+0xca>
movsbq (%rcx),%r8
test   %r8b,%r8b
je     b0f2 <png_formatted_warning+0xd2>
cmp    %r9,%rcx
jae    b0f2 <png_formatted_warning+0xd2>
mov    %r8b,-0xd0(%rbp,%rax,1)
add    $0x1,%rax
add    $0x1,%rcx
cmp    $0xbe,%rax
jbe    b0cc <png_formatted_warning+0xac>
add    $0x2,%rdx
jmpq   b062 <png_formatted_warning+0x42>
nopl   0x0(%rax,%rax,1)

000000000000b100 <png_app_warning>:
push   %rbp
mov    %rsp,%rbp
mov    0x130(%rdi),%eax
and    $0x200000,%eax
test   %eax,%eax
jne    b118 <png_app_warning+0x18>
callq  5470 <png_error@plt>
callq  5390 <png_warning@plt>
leaveq 
retq   
nop

000000000000b120 <png_app_error>:
push   %rbp
mov    %rsp,%rbp
mov    0x130(%rdi),%eax
and    $0x400000,%eax
test   %eax,%eax
jne    b138 <png_app_error+0x18>
callq  5470 <png_error@plt>
callq  5390 <png_warning@plt>
leaveq 
retq   
nop

000000000000b140 <png_chunk_report>:
push   %rbp
mov    %rsp,%rbp
mov    0x12c(%rdi),%eax
and    $0x8000,%eax
test   %eax,%eax
jne    b15e <png_chunk_report+0x1e>
test   %edx,%edx
jle    b16a <png_chunk_report+0x2a>
callq  b120 <png_app_error>
leaveq 
retq   
cmp    $0x1,%edx
jle    b171 <png_chunk_report+0x31>
callq  5230 <png_chunk_benign_error@plt>
leaveq 
retq   
callq  b100 <png_app_warning>
leaveq 
retq   
callq  56a0 <png_chunk_warning@plt>
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

000000000000b180 <png_safe_error>:
push   %rbp
mov    %rsp,%rbp
mov    0xf0(%rdi),%r15
test   %r15,%r15
jne    b195 <png_safe_error+0x15>
callq  5090 <abort@plt>
mov    %rsi,%r13
lea    0x24(%r15),%rbx
mov    $0x40,%r12d
xor    %r14d,%r14d
mov    %rbx,%rdi
mov    %r12,%rsi
mov    %r14,%rdx
mov    %r13,%rcx
callq  ad30 <png_safecat>
mov    0x20(%r15),%eax
or     $0x2,%eax
mov    %eax,0x20(%r15)
mov    (%r15),%rax
test   %rax,%rax
jne    b1f1 <png_safe_error+0x71>
mov    %r14,%rdx
lea    0x2238d(%rip),%rcx        # 2d560 <valid_parameters.6+0xa>
mov    %rbx,%rdi
mov    %r12,%rsi
callq  ad30 <png_safecat>
mov    %r13,%rcx
mov    %rax,%rdx
mov    %r12,%rsi
mov    %rbx,%rdi
callq  ad30 <png_safecat>
jmp    b190 <png_safe_error+0x10>
mov    0x10(%rax),%rdi
test   %rdi,%rdi
je     b1c9 <png_safe_error+0x49>
mov    $0x1,%esi
callq  58f0 <longjmp@plt>
data16 nopw %cs:0x0(%rax,%rax,1)
nop

000000000000b210 <png_safe_warning>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    0xf0(%rdi),%rcx
mov    0x20(%rcx),%eax
test   %eax,%eax
je     b228 <png_safe_warning+0x18>
leaveq 
retq   
lea    0x24(%rcx),%rdi
mov    $0x40,%eax
xor    %edx,%edx
mov    %r15,-0x8(%rbp)
mov    %rcx,%r15
mov    %rsi,%rcx
mov    %rax,%rsi
callq  ad30 <png_safecat>
mov    0x20(%r15),%eax
or     $0x1,%eax
mov    %eax,0x20(%r15)
mov    -0x8(%rbp),%r15
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)

000000000000b260 <png_safe_execute>:
push   %rbp
mov    %rsp,%rbp
sub    $0xf0,%rsp
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rdi,-0xf0(%rbp)
mov    -0xf0(%rbp),%rax
mov    (%rax),%rax
mov    0x10(%rax),%rax
mov    %rax,-0xe0(%rbp)
mov    %rsi,%r14
mov    %rdx,%r15
lea    -0xd8(%rbp),%rdi
callq  5420 <_setjmp@plt>
test   %eax,%eax
je     b2a9 <png_safe_execute+0x49>
xor    %eax,%eax
jmp    b2ae <png_safe_execute+0x4e>
mov    $0x1,%eax
mov    %eax,-0xe4(%rbp)
movslq -0xe4(%rbp),%rax
test   %eax,%eax
je     b2e0 <png_safe_execute+0x80>
mov    -0xf0(%rbp),%rax
mov    (%rax),%rax
lea    -0xd8(%rbp),%rcx
mov    %rcx,0x10(%rax)
mov    %r15,%rdi
callq  *%r14
mov    %eax,-0xe4(%rbp)
mov    -0xf0(%rbp),%rax
mov    (%rax),%rax
mov    -0xe0(%rbp),%rcx
mov    %rcx,0x10(%rax)
movslq -0xe4(%rbp),%rax
test   %eax,%eax
jne    b30c <png_safe_execute+0xac>
mov    -0xf0(%rbp),%rdi
callq  5040 <png_image_free@plt>
movslq -0xe4(%rbp),%rax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
nopl   (%rax)

000000000000b320 <png_default_error>:
push   %rbp
mov    %rsp,%rbp
test   %rsi,%rsi
jne    b332 <png_default_error+0x12>
lea    0x2224f(%rip),%rdx        # 2d57f <valid_parameters.6+0x29>
jmp    b335 <png_default_error+0x15>
mov    %rsi,%rdx
mov    %rdi,%rbx
xor    %r12d,%r12d
mov    0x26cb6(%rip),%r13        # 31ff8 <stderr@GLIBC_2.2.5>
mov    0x0(%r13),%rdi
lea    0x22221(%rip),%rsi        # 2d56e <valid_parameters.6+0x18>
mov    %r12,%rax
callq  5490 <fprintf@plt>
mov    0x0(%r13),%rdi
mov    %r12,%rax
lea    0x22226(%rip),%rsi        # 2d589 <valid_parameters.6+0x33>
callq  5490 <fprintf@plt>
mov    %rbx,%rdi
mov    $0x1,%esi
callq  5870 <png_longjmp@plt>
data16 nopw %cs:0x0(%rax,%rax,1)

000000000000b380 <png_default_warning>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x8(%rbp)
mov    %rsi,%rdx
xor    %eax,%eax
mov    0x26c60(%rip),%r15        # 31ff8 <stderr@GLIBC_2.2.5>
mov    (%r15),%rdi
lea    0x221e9(%rip),%rsi        # 2d58b <valid_parameters.6+0x35>
callq  5490 <fprintf@plt>
mov    (%r15),%rdi
lea    0x221d8(%rip),%rsi        # 2d589 <valid_parameters.6+0x33>
xor    %eax,%eax
callq  5490 <fprintf@plt>
mov    -0x8(%rbp),%r15
leaveq 
retq   
xchg   %ax,%ax

000000000000b3c0 <png_format_buffer>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %rdx,-0x18(%rbp)
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
movslq 0x218(%rdi),%r8
xor    %eax,%eax
lea    0x220f8(%rip),%rdx        # 2d4dc <png_digit>
mov    $0x18,%ecx
mov    $0x1,%edi
mov    %rax,%r9
jmp    b440 <png_format_buffer+0x80>
movb   $0x5b,(%rsi,%r10,1)
mov    %r11,%r10
and    $0xf0,%r10d
shr    $0x4,%r10d
movslq %r10d,%r10
movsbq (%r10,%rdx,1),%r14
lea    0x1(%r9),%r10d
movslq %r10d,%r10
mov    %r14b,(%rsi,%r10,1)
and    $0xf,%r11d
movslq %r11d,%r10
movsbq (%r10,%rdx,1),%r11
lea    0x2(%r9),%r10d
movslq %r10d,%r10
mov    %r11b,(%rsi,%r10,1)
lea    0x3(%r9),%r10d
movslq %r10d,%r10
movb   $0x5d,(%rsi,%r10,1)
add    $0x4,%r9d
movslq %r9d,%r10
test   %ecx,%ecx
jns    b466 <png_format_buffer+0xa6>
mov    -0x18(%rbp),%r8
test   %r8,%r8
je     b48f <png_format_buffer+0xcf>
movb   $0x3a,(%rsi,%r10,1)
lea    0x1(%r9),%ecx
movslq %ecx,%rcx
movb   $0x20,(%rsi,%rcx,1)
lea    0x2(%r9),%ecx
jmp    b4b5 <png_format_buffer+0xf5>
mov    %r8,%r11
shr    %cl,%r11d
movzbl %r11b,%r15d
cmp    $0x40,%r15d
jg     b4cd <png_format_buffer+0x10d>
mov    %rdi,%r14
add    $0xfffffff8,%ecx
test   %r14d,%r14d
jg     b3f3 <png_format_buffer+0x33>
mov    %r15b,(%rsi,%r10,1)
add    $0x1,%r9d
jmp    b440 <png_format_buffer+0x80>
movb   $0x0,(%rsi,%r10,1)
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
movslq %eax,%rdi
movsbq (%r8,%rdi,1),%rdi
test   %dil,%dil
je     b4bf <png_format_buffer+0xff>
mov    %dil,(%rdx,%rsi,1)
add    $0x1,%ecx
add    $0x1,%eax
movslq %ecx,%rdx
cmp    $0xc2,%eax
jle    b49e <png_format_buffer+0xde>
movb   $0x0,(%rdx,%rsi,1)
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
cmp    $0x7a,%r15d
jle    b4d8 <png_format_buffer+0x118>
mov    %rdi,%r14
jmp    b479 <png_format_buffer+0xb9>
cmp    $0x5a,%r15d
jg     b4e3 <png_format_buffer+0x123>
mov    %rax,%r14
jmp    b479 <png_format_buffer+0xb9>
cmp    $0x60,%r15d
jle    b4ee <png_format_buffer+0x12e>
mov    %rax,%r14
jmp    b479 <png_format_buffer+0xb9>
mov    %rdi,%r14
jmp    b479 <png_format_buffer+0xb9>
nopw   %cs:0x0(%rax,%rax,1)
nopl   (%rax)

000000000000b500 <png_get_compression_buffer_size>:
push   %rbp
mov    %rsp,%rbp
test   %rdi,%rdi
jne    b50d <png_get_compression_buffer_size+0xd>
xor    %eax,%eax
leaveq 
retq   
mov    0x12c(%rdi),%eax
and    $0x8000,%eax
test   %eax,%eax
jne    b524 <png_get_compression_buffer_size+0x24>
mov    0x1b8(%rdi),%eax
leaveq 
retq   
mov    0x468(%rdi),%eax
leaveq 
retq   
nopl   0x0(%rax)

000000000000b530 <png_get_rgb_to_gray_status>:
push   %rbp
mov    %rsp,%rbp
test   %rdi,%rdi
jne    b53d <png_get_rgb_to_gray_status+0xd>
xor    %eax,%eax
leaveq 
retq   
movzbl 0x3d0(%rdi),%eax
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)

000000000000b550 <png_get_user_chunk_ptr>:
push   %rbp
mov    %rsp,%rbp
test   %rdi,%rdi
jne    b55d <png_get_user_chunk_ptr+0xd>
xor    %eax,%eax
leaveq 
retq   
mov    0x3b0(%rdi),%rax
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)

000000000000b570 <png_get_valid>:
push   %rbp
mov    %rsp,%rbp
xor    %eax,%eax
test   %rdi,%rdi
jne    b57d <png_get_valid+0xd>
leaveq 
retq   
test   %rsi,%rsi
jne    b584 <png_get_valid+0x14>
leaveq 
retq   
mov    %rdx,%rax
and    0x8(%rsi),%eax
leaveq 
retq   
nopl   0x0(%rax)

000000000000b590 <png_get_rowbytes>:
push   %rbp
mov    %rsp,%rbp
xor    %eax,%eax
test   %rdi,%rdi
jne    b59d <png_get_rowbytes+0xd>
leaveq 
retq   
test   %rsi,%rsi
jne    b5a4 <png_get_rowbytes+0x14>
leaveq 
retq   
mov    0x10(%rsi),%rax
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

000000000000b5b0 <png_get_rows>:
push   %rbp
mov    %rsp,%rbp
xor    %eax,%eax
test   %rdi,%rdi
jne    b5bd <png_get_rows+0xd>
leaveq 
retq   
test   %rsi,%rsi
jne    b5c4 <png_get_rows+0x14>
leaveq 
retq   
mov    0x160(%rsi),%rax
leaveq 
retq   
nopl   (%rax)

000000000000b5d0 <png_get_channels>:
push   %rbp
mov    %rsp,%rbp
xor    %eax,%eax
test   %rdi,%rdi
jne    b5dd <png_get_channels+0xd>
leaveq 
retq   
test   %rsi,%rsi
jne    b5e4 <png_get_channels+0x14>
leaveq 
retq   
movzbl 0x29(%rsi),%eax
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

000000000000b5f0 <png_get_image_width>:
push   %rbp
mov    %rsp,%rbp
xor    %eax,%eax
test   %rdi,%rdi
jne    b5fd <png_get_image_width+0xd>
leaveq 
retq   
test   %rsi,%rsi
jne    b604 <png_get_image_width+0x14>
leaveq 
retq   
mov    (%rsi),%eax
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

000000000000b610 <png_get_image_height>:
push   %rbp
mov    %rsp,%rbp
xor    %eax,%eax
test   %rdi,%rdi
jne    b61d <png_get_image_height+0xd>
leaveq 
retq   
test   %rsi,%rsi
jne    b624 <png_get_image_height+0x14>
leaveq 
retq   
mov    0x4(%rsi),%eax
leaveq 
retq   
nopl   0x0(%rax)

000000000000b630 <png_get_bit_depth>:
push   %rbp
mov    %rsp,%rbp
xor    %eax,%eax
test   %rdi,%rdi
jne    b63d <png_get_bit_depth+0xd>
leaveq 
retq   
test   %rsi,%rsi
jne    b644 <png_get_bit_depth+0x14>
leaveq 
retq   
movzbl 0x24(%rsi),%eax
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

000000000000b650 <png_get_color_type>:
push   %rbp
mov    %rsp,%rbp
xor    %eax,%eax
test   %rdi,%rdi
jne    b65d <png_get_color_type+0xd>
leaveq 
retq   
test   %rsi,%rsi
jne    b664 <png_get_color_type+0x14>
leaveq 
retq   
movzbl 0x25(%rsi),%eax
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

000000000000b670 <png_get_filter_type>:
push   %rbp
mov    %rsp,%rbp
xor    %eax,%eax
test   %rdi,%rdi
jne    b67d <png_get_filter_type+0xd>
leaveq 
retq   
test   %rsi,%rsi
jne    b684 <png_get_filter_type+0x14>
leaveq 
retq   
movzbl 0x27(%rsi),%eax
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

000000000000b690 <png_get_interlace_type>:
push   %rbp
mov    %rsp,%rbp
xor    %eax,%eax
test   %rdi,%rdi
jne    b69d <png_get_interlace_type+0xd>
leaveq 
retq   
test   %rsi,%rsi
jne    b6a4 <png_get_interlace_type+0x14>
leaveq 
retq   
movzbl 0x28(%rsi),%eax
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

000000000000b6b0 <png_get_compression_type>:
push   %rbp
mov    %rsp,%rbp
xor    %eax,%eax
test   %rdi,%rdi
jne    b6bd <png_get_compression_type+0xd>
leaveq 
retq   
test   %rsi,%rsi
jne    b6c4 <png_get_compression_type+0x14>
leaveq 
retq   
movzbl 0x26(%rsi),%eax
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

000000000000b6d0 <png_get_pixels_per_meter>:
push   %rbp
mov    %rsp,%rbp
xor    %eax,%eax
test   %rdi,%rdi
jne    b6dd <png_get_pixels_per_meter+0xd>
leaveq 
retq   
test   %rsi,%rsi
jne    b6e4 <png_get_pixels_per_meter+0x14>
leaveq 
retq   
mov    0x8(%rsi),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
jne    b6f3 <png_get_pixels_per_meter+0x23>
leaveq 
retq   
movzbl 0xe8(%rsi),%ecx
cmp    $0x1,%cl
je     b701 <png_get_pixels_per_meter+0x31>
leaveq 
retq   
mov    0xe0(%rsi),%ecx
mov    0xe4(%rsi),%edx
cmp    %ecx,%edx
jne    b716 <png_get_pixels_per_meter+0x46>
mov    %rcx,%rax
leaveq 
retq   
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

000000000000b720 <png_get_x_pixels_per_meter>:
push   %rbp
mov    %rsp,%rbp
xor    %eax,%eax
test   %rdi,%rdi
jne    b72d <png_get_x_pixels_per_meter+0xd>
leaveq 
retq   
test   %rsi,%rsi
jne    b734 <png_get_x_pixels_per_meter+0x14>
leaveq 
retq   
mov    0x8(%rsi),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
jne    b743 <png_get_x_pixels_per_meter+0x23>
leaveq 
retq   
movzbl 0xe8(%rsi),%ecx
cmp    $0x1,%cl
je     b751 <png_get_x_pixels_per_meter+0x31>
leaveq 
retq   
mov    0xe0(%rsi),%eax
leaveq 
retq   
nopl   0x0(%rax)

000000000000b760 <png_get_y_pixels_per_meter>:
push   %rbp
mov    %rsp,%rbp
xor    %eax,%eax
test   %rdi,%rdi
jne    b76d <png_get_y_pixels_per_meter+0xd>
leaveq 
retq   
test   %rsi,%rsi
jne    b774 <png_get_y_pixels_per_meter+0x14>
leaveq 
retq   
mov    0x8(%rsi),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
jne    b783 <png_get_y_pixels_per_meter+0x23>
leaveq 
retq   
movzbl 0xe8(%rsi),%ecx
cmp    $0x1,%cl
je     b791 <png_get_y_pixels_per_meter+0x31>
leaveq 
retq   
mov    0xe4(%rsi),%eax
leaveq 
retq   
nopl   0x0(%rax)

000000000000b7a0 <png_get_pixel_aspect_ratio>:
push   %rbp
mov    %rsp,%rbp
xorpd  %xmm0,%xmm0
test   %rdi,%rdi
jne    b7af <png_get_pixel_aspect_ratio+0xf>
leaveq 
retq   
test   %rsi,%rsi
jne    b7b6 <png_get_pixel_aspect_ratio+0x16>
leaveq 
retq   
mov    0x8(%rsi),%eax
and    $0x80,%eax
test   %eax,%eax
jne    b7c4 <png_get_pixel_aspect_ratio+0x24>
leaveq 
retq   
mov    0xe0(%rsi),%eax
test   %eax,%eax
jne    b7d0 <png_get_pixel_aspect_ratio+0x30>
leaveq 
retq   
mov    0xe4(%rsi),%ecx
mov    %ecx,%ecx
cvtsi2ss %rcx,%xmm0
mov    %eax,%eax
cvtsi2ss %rax,%xmm1
divss  %xmm1,%xmm0
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

000000000000b7f0 <png_get_pixel_aspect_ratio_fixed>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
xor    %eax,%eax
test   %rdi,%rdi
jne    b801 <png_get_pixel_aspect_ratio_fixed+0x11>
leaveq 
retq   
test   %rsi,%rsi
jne    b808 <png_get_pixel_aspect_ratio_fixed+0x18>
leaveq 
retq   
mov    0x8(%rsi),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
jne    b817 <png_get_pixel_aspect_ratio_fixed+0x27>
leaveq 
retq   
mov    0xe0(%rsi),%ecx
test   %ecx,%ecx
jne    b823 <png_get_pixel_aspect_ratio_fixed+0x33>
leaveq 
retq   
mov    0xe4(%rsi),%esi
test   %esi,%esi
jne    b82f <png_get_pixel_aspect_ratio_fixed+0x3f>
leaveq 
retq   
cmp    $0x7fffffff,%ecx
jbe    b839 <png_get_pixel_aspect_ratio_fixed+0x49>
leaveq 
retq   
cmp    $0x7fffffff,%esi
jbe    b843 <png_get_pixel_aspect_ratio_fixed+0x53>
leaveq 
retq   
lea    -0x4(%rbp),%rdi
mov    $0x186a0,%edx
callq  8980 <png_muldiv>
test   %eax,%eax
jne    b859 <png_get_pixel_aspect_ratio_fixed+0x69>
xor    %eax,%eax
leaveq 
retq   
movslq -0x4(%rbp),%rax
leaveq 
retq   
nop

000000000000b860 <png_get_x_offset_pixels>:
push   %rbp
mov    %rsp,%rbp
xor    %eax,%eax
test   %rdi,%rdi
jne    b86d <png_get_x_offset_pixels+0xd>
leaveq 
retq   
test   %rsi,%rsi
jne    b874 <png_get_x_offset_pixels+0x14>
leaveq 
retq   
mov    0x8(%rsi),%ecx
and    $0x100,%ecx
test   %ecx,%ecx
jne    b883 <png_get_x_offset_pixels+0x23>
leaveq 
retq   
movzbl 0xdc(%rsi),%ecx
test   %cl,%cl
je     b890 <png_get_x_offset_pixels+0x30>
leaveq 
retq   
movslq 0xd4(%rsi),%rax
leaveq 
retq   
nopl   0x0(%rax)

000000000000b8a0 <png_get_y_offset_pixels>:
push   %rbp
mov    %rsp,%rbp
xor    %eax,%eax
test   %rdi,%rdi
jne    b8ad <png_get_y_offset_pixels+0xd>
leaveq 
retq   
test   %rsi,%rsi
jne    b8b4 <png_get_y_offset_pixels+0x14>
leaveq 
retq   
mov    0x8(%rsi),%ecx
and    $0x100,%ecx
test   %ecx,%ecx
jne    b8c3 <png_get_y_offset_pixels+0x23>
leaveq 
retq   
movzbl 0xdc(%rsi),%ecx
test   %cl,%cl
je     b8d0 <png_get_y_offset_pixels+0x30>
leaveq 
retq   
movslq 0xd8(%rsi),%rax
leaveq 
retq   
nopl   0x0(%rax)

000000000000b8e0 <png_get_x_offset_microns>:
push   %rbp
mov    %rsp,%rbp
xor    %eax,%eax
test   %rdi,%rdi
jne    b8ed <png_get_x_offset_microns+0xd>
leaveq 
retq   
test   %rsi,%rsi
jne    b8f4 <png_get_x_offset_microns+0x14>
leaveq 
retq   
mov    0x8(%rsi),%ecx
and    $0x100,%ecx
test   %ecx,%ecx
jne    b903 <png_get_x_offset_microns+0x23>
leaveq 
retq   
movzbl 0xdc(%rsi),%ecx
cmp    $0x1,%cl
je     b911 <png_get_x_offset_microns+0x31>
leaveq 
retq   
movslq 0xd4(%rsi),%rax
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

000000000000b920 <png_get_y_offset_microns>:
push   %rbp
mov    %rsp,%rbp
xor    %eax,%eax
test   %rdi,%rdi
jne    b92d <png_get_y_offset_microns+0xd>
leaveq 
retq   
test   %rsi,%rsi
jne    b934 <png_get_y_offset_microns+0x14>
leaveq 
retq   
mov    0x8(%rsi),%ecx
and    $0x100,%ecx
test   %ecx,%ecx
jne    b943 <png_get_y_offset_microns+0x23>
leaveq 
retq   
movzbl 0xdc(%rsi),%ecx
cmp    $0x1,%cl
je     b951 <png_get_y_offset_microns+0x31>
leaveq 
retq   
movslq 0xd8(%rsi),%rax
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

000000000000b960 <png_get_signature>:
push   %rbp
mov    %rsp,%rbp
xor    %eax,%eax
test   %rdi,%rdi
jne    b96d <png_get_signature+0xd>
leaveq 
retq   
test   %rsi,%rsi
jne    b974 <png_get_signature+0x14>
leaveq 
retq   
lea    0x2c(%rsi),%rax
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

000000000000b980 <png_get_bKGD>:
push   %rbp
mov    %rsp,%rbp
xor    %eax,%eax
test   %rdi,%rdi
jne    b98d <png_get_bKGD+0xd>
leaveq 
retq   
test   %rsi,%rsi
jne    b994 <png_get_bKGD+0x14>
leaveq 
retq   
mov    0x8(%rsi),%ecx
and    $0x20,%ecx
test   %ecx,%ecx
jne    b9a0 <png_get_bKGD+0x20>
leaveq 
retq   
test   %rdx,%rdx
jne    b9a7 <png_get_bKGD+0x27>
leaveq 
retq   
lea    0xca(%rsi),%rax
mov    %rax,(%rdx)
mov    $0x20,%eax
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

000000000000b9c0 <png_get_cHRM>:
push   %rbp
mov    %rsp,%rbp
xor    %eax,%eax
test   %rdi,%rdi
jne    b9cd <png_get_cHRM+0xd>
leaveq 
retq   
test   %rsi,%rsi
jne    b9d4 <png_get_cHRM+0x14>
leaveq 
retq   
movzwl 0x7e(%rsi),%edi
and    $0x2,%edi
test   %edi,%edi
jg     b9e1 <png_get_cHRM+0x21>
leaveq 
retq   
movsd  0x21bff(%rip),%xmm1        # 2d5e8 <valid_parameters.6+0x92>
test   %rdx,%rdx
je     b9fe <png_get_cHRM+0x3e>
movslq 0x50(%rsi),%rax
cvtsi2sd %eax,%xmm0
mulsd  %xmm1,%xmm0
movsd  %xmm0,(%rdx)
test   %rcx,%rcx
je     ba13 <png_get_cHRM+0x53>
movslq 0x54(%rsi),%rax
cvtsi2sd %eax,%xmm0
mulsd  %xmm1,%xmm0
movsd  %xmm0,(%rcx)
test   %r8,%r8
je     ba29 <png_get_cHRM+0x69>
movslq 0x38(%rsi),%rax
cvtsi2sd %eax,%xmm0
mulsd  %xmm1,%xmm0
movsd  %xmm0,(%r8)
test   %r9,%r9
je     ba3f <png_get_cHRM+0x7f>
movslq 0x3c(%rsi),%rax
cvtsi2sd %eax,%xmm0
mulsd  %xmm1,%xmm0
movsd  %xmm0,(%r9)
mov    0x10(%rbp),%rax
test   %rax,%rax
je     ba58 <png_get_cHRM+0x98>
movslq 0x40(%rsi),%rcx
cvtsi2sd %ecx,%xmm0
mulsd  %xmm1,%xmm0
movsd  %xmm0,(%rax)
mov    0x18(%rbp),%rax
test   %rax,%rax
je     ba71 <png_get_cHRM+0xb1>
movslq 0x44(%rsi),%rcx
cvtsi2sd %ecx,%xmm0
mulsd  %xmm1,%xmm0
movsd  %xmm0,(%rax)
mov    0x20(%rbp),%rax
test   %rax,%rax
je     ba8a <png_get_cHRM+0xca>
movslq 0x48(%rsi),%rcx
cvtsi2sd %ecx,%xmm0
mulsd  %xmm1,%xmm0
movsd  %xmm0,(%rax)
mov    $0x4,%eax
mov    0x28(%rbp),%rcx
test   %rcx,%rcx
jne    ba9a <png_get_cHRM+0xda>
leaveq 
retq   
movslq 0x4c(%rsi),%rdx
cvtsi2sd %edx,%xmm0
mulsd  %xmm1,%xmm0
movsd  %xmm0,(%rcx)
leaveq 
retq   
nopl   0x0(%rax)

000000000000bab0 <png_get_cHRM_XYZ>:
push   %rbp
mov    %rsp,%rbp
xor    %eax,%eax
test   %rdi,%rdi
jne    babd <png_get_cHRM_XYZ+0xd>
leaveq 
retq   
test   %rsi,%rsi
jne    bac4 <png_get_cHRM_XYZ+0x14>
leaveq 
retq   
movzwl 0x7e(%rsi),%edi
and    $0x2,%edi
test   %edi,%edi
jg     bad1 <png_get_cHRM_XYZ+0x21>
leaveq 
retq   
movsd  0x21b0f(%rip),%xmm1        # 2d5e8 <valid_parameters.6+0x92>
test   %rdx,%rdx
je     baee <png_get_cHRM_XYZ+0x3e>
movslq 0x58(%rsi),%rax
cvtsi2sd %eax,%xmm0
mulsd  %xmm1,%xmm0
movsd  %xmm0,(%rdx)
test   %rcx,%rcx
je     bb03 <png_get_cHRM_XYZ+0x53>
movslq 0x5c(%rsi),%rax
cvtsi2sd %eax,%xmm0
mulsd  %xmm1,%xmm0
movsd  %xmm0,(%rcx)
test   %r8,%r8
je     bb19 <png_get_cHRM_XYZ+0x69>
movslq 0x60(%rsi),%rax
cvtsi2sd %eax,%xmm0
mulsd  %xmm1,%xmm0
movsd  %xmm0,(%r8)
test   %r9,%r9
je     bb2f <png_get_cHRM_XYZ+0x7f>
movslq 0x64(%rsi),%rax
cvtsi2sd %eax,%xmm0
mulsd  %xmm1,%xmm0
movsd  %xmm0,(%r9)
mov    0x10(%rbp),%rax
test   %rax,%rax
je     bb48 <png_get_cHRM_XYZ+0x98>
movslq 0x68(%rsi),%rcx
cvtsi2sd %ecx,%xmm0
mulsd  %xmm1,%xmm0
movsd  %xmm0,(%rax)
mov    0x18(%rbp),%rax
test   %rax,%rax
je     bb61 <png_get_cHRM_XYZ+0xb1>
movslq 0x6c(%rsi),%rcx
cvtsi2sd %ecx,%xmm0
mulsd  %xmm1,%xmm0
movsd  %xmm0,(%rax)
mov    0x20(%rbp),%rax
test   %rax,%rax
je     bb7a <png_get_cHRM_XYZ+0xca>
movslq 0x70(%rsi),%rcx
cvtsi2sd %ecx,%xmm0
mulsd  %xmm1,%xmm0
movsd  %xmm0,(%rax)
mov    0x28(%rbp),%rax
test   %rax,%rax
je     bb93 <png_get_cHRM_XYZ+0xe3>
movslq 0x74(%rsi),%rcx
cvtsi2sd %ecx,%xmm0
mulsd  %xmm1,%xmm0
movsd  %xmm0,(%rax)
mov    $0x4,%eax
mov    0x30(%rbp),%rcx
test   %rcx,%rcx
jne    bba3 <png_get_cHRM_XYZ+0xf3>
leaveq 
retq   
movslq 0x78(%rsi),%rdx
cvtsi2sd %edx,%xmm0
mulsd  %xmm1,%xmm0
movsd  %xmm0,(%rcx)
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)

000000000000bbc0 <png_get_cHRM_fixed>:
push   %rbp
mov    %rsp,%rbp
xor    %eax,%eax
test   %rdi,%rdi
jne    bbcd <png_get_cHRM_fixed+0xd>
leaveq 
retq   
test   %rsi,%rsi
jne    bbd4 <png_get_cHRM_fixed+0x14>
leaveq 
retq   
movzwl 0x7e(%rsi),%edi
and    $0x2,%edi
test   %edi,%edi
jg     bbe1 <png_get_cHRM_fixed+0x21>
leaveq 
retq   
test   %rdx,%rdx
je     bbec <png_get_cHRM_fixed+0x2c>
movslq 0x50(%rsi),%rax
mov    %eax,(%rdx)
test   %rcx,%rcx
je     bbf7 <png_get_cHRM_fixed+0x37>
movslq 0x54(%rsi),%rax
mov    %eax,(%rcx)
test   %r8,%r8
je     bc03 <png_get_cHRM_fixed+0x43>
movslq 0x38(%rsi),%rax
mov    %eax,(%r8)
test   %r9,%r9
je     bc0f <png_get_cHRM_fixed+0x4f>
movslq 0x3c(%rsi),%rax
mov    %eax,(%r9)
mov    0x10(%rbp),%rax
test   %rax,%rax
je     bc1e <png_get_cHRM_fixed+0x5e>
movslq 0x40(%rsi),%rcx
mov    %ecx,(%rax)
mov    0x18(%rbp),%rax
test   %rax,%rax
je     bc2d <png_get_cHRM_fixed+0x6d>
movslq 0x44(%rsi),%rcx
mov    %ecx,(%rax)
mov    0x20(%rbp),%rax
test   %rax,%rax
je     bc3c <png_get_cHRM_fixed+0x7c>
movslq 0x48(%rsi),%rcx
mov    %ecx,(%rax)
mov    $0x4,%eax
mov    0x28(%rbp),%rcx
test   %rcx,%rcx
jne    bc4c <png_get_cHRM_fixed+0x8c>
leaveq 
retq   
movslq 0x4c(%rsi),%rdx
mov    %edx,(%rcx)
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nop

000000000000bc60 <png_get_cHRM_XYZ_fixed>:
push   %rbp
mov    %rsp,%rbp
xor    %eax,%eax
test   %rdi,%rdi
jne    bc6d <png_get_cHRM_XYZ_fixed+0xd>
leaveq 
retq   
test   %rsi,%rsi
jne    bc74 <png_get_cHRM_XYZ_fixed+0x14>
leaveq 
retq   
movzwl 0x7e(%rsi),%edi
and    $0x2,%edi
test   %edi,%edi
jg     bc81 <png_get_cHRM_XYZ_fixed+0x21>
leaveq 
retq   
test   %rdx,%rdx
je     bc8c <png_get_cHRM_XYZ_fixed+0x2c>
movslq 0x58(%rsi),%rax
mov    %eax,(%rdx)
test   %rcx,%rcx
je     bc97 <png_get_cHRM_XYZ_fixed+0x37>
movslq 0x5c(%rsi),%rax
mov    %eax,(%rcx)
test   %r8,%r8
je     bca3 <png_get_cHRM_XYZ_fixed+0x43>
movslq 0x60(%rsi),%rax
mov    %eax,(%r8)
test   %r9,%r9
je     bcaf <png_get_cHRM_XYZ_fixed+0x4f>
movslq 0x64(%rsi),%rax
mov    %eax,(%r9)
mov    0x10(%rbp),%rax
test   %rax,%rax
je     bcbe <png_get_cHRM_XYZ_fixed+0x5e>
movslq 0x68(%rsi),%rcx
mov    %ecx,(%rax)
mov    0x18(%rbp),%rax
test   %rax,%rax
je     bccd <png_get_cHRM_XYZ_fixed+0x6d>
movslq 0x6c(%rsi),%rcx
mov    %ecx,(%rax)
mov    0x20(%rbp),%rax
test   %rax,%rax
je     bcdc <png_get_cHRM_XYZ_fixed+0x7c>
movslq 0x70(%rsi),%rcx
mov    %ecx,(%rax)
mov    0x28(%rbp),%rax
test   %rax,%rax
je     bceb <png_get_cHRM_XYZ_fixed+0x8b>
movslq 0x74(%rsi),%rcx
mov    %ecx,(%rax)
mov    $0x4,%eax
mov    0x30(%rbp),%rcx
test   %rcx,%rcx
jne    bcfb <png_get_cHRM_XYZ_fixed+0x9b>
leaveq 
retq   
movslq 0x78(%rsi),%rdx
mov    %edx,(%rcx)
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

000000000000bd10 <png_get_eXIf>:
push   %rbp
mov    %rsp,%rbp
lea    0x21885(%rip),%rsi        # 2d5a0 <valid_parameters.6+0x4a>
callq  5390 <png_warning@plt>
xor    %eax,%eax
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nop

000000000000bd30 <png_get_eXIf_1>:
push   %rbp
mov    %rsp,%rbp
xor    %eax,%eax
test   %rdi,%rdi
jne    bd3d <png_get_eXIf_1+0xd>
leaveq 
retq   
test   %rsi,%rsi
jne    bd44 <png_get_eXIf_1+0x14>
leaveq 
retq   
mov    0x8(%rsi),%edi
and    $0x10000,%edi
test   %edi,%edi
jne    bd53 <png_get_eXIf_1+0x23>
leaveq 
retq   
test   %rcx,%rcx
jne    bd5a <png_get_eXIf_1+0x2a>
leaveq 
retq   
mov    0xec(%rsi),%eax
mov    %eax,(%rdx)
mov    0xf0(%rsi),%rax
mov    %rax,(%rcx)
mov    $0x10000,%eax
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

000000000000bd80 <png_get_gAMA>:
push   %rbp
mov    %rsp,%rbp
xor    %eax,%eax
test   %rdi,%rdi
jne    bd8d <png_get_gAMA+0xd>
leaveq 
retq   
test   %rsi,%rsi
jne    bd94 <png_get_gAMA+0x14>
leaveq 
retq   
movzwl 0x7e(%rsi),%ecx
and    $0x1,%ecx
test   %ecx,%ecx
jg     bda1 <png_get_gAMA+0x21>
leaveq 
retq   
test   %rdx,%rdx
jne    bda8 <png_get_gAMA+0x28>
leaveq 
retq   
movslq 0x34(%rsi),%rax
cvtsi2sd %eax,%xmm0
movsd  0x21830(%rip),%xmm1        # 2d5e8 <valid_parameters.6+0x92>
mulsd  %xmm1,%xmm0
movsd  %xmm0,(%rdx)
mov    $0x1,%eax
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

000000000000bdd0 <png_get_gAMA_fixed>:
push   %rbp
mov    %rsp,%rbp
xor    %eax,%eax
test   %rdi,%rdi
jne    bddd <png_get_gAMA_fixed+0xd>
leaveq 
retq   
test   %rsi,%rsi
jne    bde4 <png_get_gAMA_fixed+0x14>
leaveq 
retq   
movzwl 0x7e(%rsi),%ecx
and    $0x1,%ecx
test   %ecx,%ecx
jg     bdf1 <png_get_gAMA_fixed+0x21>
leaveq 
retq   
test   %rdx,%rdx
jne    bdf8 <png_get_gAMA_fixed+0x28>
leaveq 
retq   
movslq 0x34(%rsi),%rax
mov    %eax,(%rdx)
mov    $0x1,%eax
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)

000000000000be10 <png_get_hIST>:
push   %rbp
mov    %rsp,%rbp
xor    %eax,%eax
test   %rdi,%rdi
jne    be1d <png_get_hIST+0xd>
leaveq 
retq   
test   %rsi,%rsi
jne    be24 <png_get_hIST+0x14>
leaveq 
retq   
mov    0x8(%rsi),%ecx
and    $0x40,%ecx
test   %ecx,%ecx
jne    be30 <png_get_hIST+0x20>
leaveq 
retq   
test   %rdx,%rdx
jne    be37 <png_get_hIST+0x27>
leaveq 
retq   
mov    0x100(%rsi),%rax
mov    %rax,(%rdx)
mov    $0x40,%eax
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

000000000000be50 <png_get_IHDR>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
xor    %eax,%eax
test   %rdi,%rdi
jne    be61 <png_get_IHDR+0x11>
leaveq 
retq   
test   %rsi,%rsi
jne    be68 <png_get_IHDR+0x18>
leaveq 
retq   
test   %rdx,%rdx
je     be71 <png_get_IHDR+0x21>
mov    (%rsi),%eax
mov    %eax,(%rdx)
test   %rcx,%rcx
je     be7b <png_get_IHDR+0x2b>
mov    0x4(%rsi),%eax
mov    %eax,(%rcx)
test   %r8,%r8
je     be87 <png_get_IHDR+0x37>
movzbl 0x24(%rsi),%eax
mov    %eax,(%r8)
test   %r9,%r9
je     be93 <png_get_IHDR+0x43>
movzbl 0x25(%rsi),%eax
mov    %eax,(%r9)
mov    0x18(%rbp),%rax
test   %rax,%rax
je     bea2 <png_get_IHDR+0x52>
movzbl 0x26(%rsi),%ecx
mov    %ecx,(%rax)
mov    0x20(%rbp),%rax
test   %rax,%rax
je     beb1 <png_get_IHDR+0x61>
movzbl 0x27(%rsi),%ecx
mov    %ecx,(%rax)
mov    0x10(%rbp),%rax
test   %rax,%rax
je     bec0 <png_get_IHDR+0x70>
movzbl 0x28(%rsi),%ecx
mov    %ecx,(%rax)
movzbl 0x26(%rsi),%r10d
movzbl 0x27(%rsi),%eax
mov    (%rsi),%r11d
mov    0x4(%rsi),%edx
movzbl 0x24(%rsi),%ecx
movzbl 0x25(%rsi),%r8d
movzbl 0x28(%rsi),%r9d
mov    %r10d,(%rsp)
mov    %eax,0x8(%rsp)
mov    %r11,%rsi
callq  7d90 <png_check_IHDR>
mov    $0x1,%eax
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nop

000000000000bf00 <png_get_oFFs>:
push   %rbp
mov    %rsp,%rbp
xor    %eax,%eax
test   %rdi,%rdi
jne    bf0d <png_get_oFFs+0xd>
leaveq 
retq   
test   %rsi,%rsi
jne    bf14 <png_get_oFFs+0x14>
leaveq 
retq   
mov    0x8(%rsi),%edi
and    $0x100,%edi
test   %edi,%edi
jne    bf23 <png_get_oFFs+0x23>
leaveq 
retq   
test   %rdx,%rdx
jne    bf2a <png_get_oFFs+0x2a>
leaveq 
retq   
test   %rcx,%rcx
jne    bf31 <png_get_oFFs+0x31>
leaveq 
retq   
test   %r8,%r8
jne    bf38 <png_get_oFFs+0x38>
leaveq 
retq   
movslq 0xd4(%rsi),%rax
mov    %eax,(%rdx)
movslq 0xd8(%rsi),%rax
mov    %eax,(%rcx)
movzbl 0xdc(%rsi),%eax
mov    %eax,(%r8)
mov    $0x100,%eax
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

000000000000bf60 <png_get_pCAL>:
push   %rbp
mov    %rsp,%rbp
xor    %eax,%eax
test   %rdi,%rdi
jne    bf6d <png_get_pCAL+0xd>
leaveq 
retq   
test   %rsi,%rsi
jne    bf74 <png_get_pCAL+0x14>
leaveq 
retq   
mov    0x8(%rsi),%edi
and    $0x400,%edi
test   %edi,%edi
jne    bf83 <png_get_pCAL+0x23>
leaveq 
retq   
test   %rdx,%rdx
jne    bf8a <png_get_pCAL+0x2a>
leaveq 
retq   
test   %rcx,%rcx
jne    bf91 <png_get_pCAL+0x31>
leaveq 
retq   
test   %r8,%r8
jne    bf98 <png_get_pCAL+0x38>
leaveq 
retq   
test   %r9,%r9
jne    bf9f <png_get_pCAL+0x3f>
leaveq 
retq   
mov    0x10(%rbp),%r11
test   %r11,%r11
jne    bfaa <png_get_pCAL+0x4a>
leaveq 
retq   
mov    0x18(%rbp),%rdi
test   %rdi,%rdi
jne    bfb5 <png_get_pCAL+0x55>
leaveq 
retq   
mov    0x20(%rbp),%r10
test   %r10,%r10
jne    bfc0 <png_get_pCAL+0x60>
leaveq 
retq   
mov    0x108(%rsi),%rax
mov    %rax,(%rdx)
movslq 0x110(%rsi),%rax
mov    %eax,(%rcx)
movslq 0x114(%rsi),%rax
mov    %eax,(%r8)
movzbl 0x128(%rsi),%eax
mov    %eax,(%r9)
movzbl 0x129(%rsi),%eax
mov    %eax,(%r11)
mov    0x118(%rsi),%rax
mov    %rax,(%rdi)
mov    0x120(%rsi),%rax
mov    %rax,(%r10)
mov    $0x400,%eax
leaveq 
retq   
nopl   0x0(%rax)

000000000000c010 <png_get_pHYs>:
push   %rbp
mov    %rsp,%rbp
xor    %eax,%eax
test   %rdi,%rdi
jne    c01d <png_get_pHYs+0xd>
leaveq 
retq   
test   %rsi,%rsi
jne    c024 <png_get_pHYs+0x14>
leaveq 
retq   
mov    0x8(%rsi),%edi
and    $0x80,%edi
test   %edi,%edi
jne    c033 <png_get_pHYs+0x23>
leaveq 
retq   
mov    $0x80,%edi
test   %rdx,%rdx
je     c048 <png_get_pHYs+0x38>
mov    0xe0(%rsi),%eax
mov    %eax,(%rdx)
mov    %rdi,%rax
test   %rcx,%rcx
je     c058 <png_get_pHYs+0x48>
mov    0xe4(%rsi),%eax
mov    %eax,(%rcx)
mov    %rdi,%rax
test   %r8,%r8
jne    c05f <png_get_pHYs+0x4f>
leaveq 
retq   
movzbl 0xe8(%rsi),%eax
mov    %eax,(%r8)
mov    %rdi,%rax
leaveq 
retq   
xchg   %ax,%ax

000000000000c070 <png_get_PLTE>:
push   %rbp
mov    %rsp,%rbp
xor    %eax,%eax
test   %rdi,%rdi
jne    c07d <png_get_PLTE+0xd>
leaveq 
retq   
test   %rsi,%rsi
jne    c084 <png_get_PLTE+0x14>
leaveq 
retq   
mov    0x8(%rsi),%edi
and    $0x8,%edi
test   %edi,%edi
jne    c090 <png_get_PLTE+0x20>
leaveq 
retq   
test   %rdx,%rdx
jne    c097 <png_get_PLTE+0x27>
leaveq 
retq   
mov    0x18(%rsi),%rax
mov    %rax,(%rdx)
movzwl 0x20(%rsi),%eax
mov    %eax,(%rcx)
mov    $0x8,%eax
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

000000000000c0b0 <png_get_sBIT>:
push   %rbp
mov    %rsp,%rbp
xor    %eax,%eax
test   %rdi,%rdi
jne    c0bd <png_get_sBIT+0xd>
leaveq 
retq   
test   %rsi,%rsi
jne    c0c4 <png_get_sBIT+0x14>
leaveq 
retq   
mov    0x8(%rsi),%ecx
and    $0x2,%ecx
test   %ecx,%ecx
jne    c0d0 <png_get_sBIT+0x20>
leaveq 
retq   
test   %rdx,%rdx
jne    c0d7 <png_get_sBIT+0x27>
leaveq 
retq   
lea    0xb0(%rsi),%rax
mov    %rax,(%rdx)
mov    $0x2,%eax
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

000000000000c0f0 <png_get_sRGB>:
push   %rbp
mov    %rsp,%rbp
xor    %eax,%eax
test   %rdi,%rdi
jne    c0fd <png_get_sRGB+0xd>
leaveq 
retq   
test   %rsi,%rsi
jne    c104 <png_get_sRGB+0x14>
leaveq 
retq   
mov    0x8(%rsi),%ecx
and    $0x800,%ecx
test   %ecx,%ecx
jne    c113 <png_get_sRGB+0x23>
leaveq 
retq   
test   %rdx,%rdx
jne    c11a <png_get_sRGB+0x2a>
leaveq 
retq   
movzwl 0x7c(%rsi),%eax
mov    %eax,(%rdx)
mov    $0x800,%eax
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

000000000000c130 <png_get_iCCP>:
push   %rbp
mov    %rsp,%rbp
xor    %eax,%eax
test   %rdi,%rdi
jne    c13d <png_get_iCCP+0xd>
leaveq 
retq   
test   %rsi,%rsi
jne    c144 <png_get_iCCP+0x14>
leaveq 
retq   
mov    0x8(%rsi),%edi
and    $0x1000,%edi
test   %edi,%edi
jne    c153 <png_get_iCCP+0x23>
leaveq 
retq   
test   %rdx,%rdx
jne    c15a <png_get_iCCP+0x2a>
leaveq 
retq   
test   %rcx,%rcx
jne    c161 <png_get_iCCP+0x31>
leaveq 
retq   
test   %r8,%r8
jne    c168 <png_get_iCCP+0x38>
leaveq 
retq   
test   %r9,%r9
jne    c16f <png_get_iCCP+0x3f>
leaveq 
retq   
mov    0x80(%rsi),%rax
mov    %rax,(%rdx)
mov    0x88(%rsi),%rax
mov    %rax,(%r8)
mov    0x88(%rsi),%rsi
movzbl (%rsi),%eax
shl    $0x18,%eax
movzbl 0x1(%rsi),%edx
shl    $0x10,%edx
add    %eax,%edx
movzbl 0x2(%rsi),%eax
shl    $0x8,%eax
add    %edx,%eax
movzbl 0x3(%rsi),%edx
add    %edx,%eax
mov    %eax,(%r9)
movl   $0x0,(%rcx)
mov    $0x1000,%eax
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

000000000000c1c0 <png_get_sPLT>:
push   %rbp
mov    %rsp,%rbp
xor    %eax,%eax
test   %rdi,%rdi
jne    c1cd <png_get_sPLT+0xd>
leaveq 
retq   
test   %rsi,%rsi
jne    c1d4 <png_get_sPLT+0x14>
leaveq 
retq   
test   %rdx,%rdx
jne    c1db <png_get_sPLT+0x1b>
leaveq 
retq   
mov    0x140(%rsi),%rax
mov    %rax,(%rdx)
movslq 0x148(%rsi),%rax
leaveq 
retq   
xchg   %ax,%ax

000000000000c1f0 <png_get_text>:
push   %rbp
mov    %rsp,%rbp
test   %rdi,%rdi
jne    c202 <png_get_text+0x12>
xor    %eax,%eax
test   %rcx,%rcx
jne    c238 <png_get_text+0x48>
leaveq 
retq   
test   %rsi,%rsi
je     c1f9 <png_get_text+0x9>
movslq 0x94(%rsi),%rax
test   %eax,%eax
jle    c1f9 <png_get_text+0x9>
test   %rdx,%rdx
je     c221 <png_get_text+0x31>
mov    0xa0(%rsi),%rax
mov    %rax,(%rdx)
test   %rcx,%rcx
je     c22f <png_get_text+0x3f>
movslq 0x94(%rsi),%rax
mov    %eax,(%rcx)
movslq 0x94(%rsi),%rax
leaveq 
retq   
movl   $0x0,(%rcx)
leaveq 
retq   

000000000000c240 <png_get_tIME>:
push   %rbp
mov    %rsp,%rbp
xor    %eax,%eax
test   %rdi,%rdi
jne    c24d <png_get_tIME+0xd>
leaveq 
retq   
test   %rsi,%rsi
jne    c254 <png_get_tIME+0x14>
leaveq 
retq   
mov    0x8(%rsi),%ecx
and    $0x200,%ecx
test   %ecx,%ecx
jne    c263 <png_get_tIME+0x23>
leaveq 
retq   
test   %rdx,%rdx
jne    c26a <png_get_tIME+0x2a>
leaveq 
retq   
lea    0xa8(%rsi),%rax
mov    %rax,(%rdx)
mov    $0x200,%eax
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

000000000000c280 <png_get_tRNS>:
push   %rbp
mov    %rsp,%rbp
xor    %eax,%eax
test   %rdi,%rdi
jne    c28d <png_get_tRNS+0xd>
leaveq 
retq   
test   %rsi,%rsi
jne    c294 <png_get_tRNS+0x14>
leaveq 
retq   
mov    0x8(%rsi),%edi
and    $0x10,%edi
test   %edi,%edi
jne    c2a0 <png_get_tRNS+0x20>
leaveq 
retq   
mov    $0x10,%edi
movzbl 0x25(%rsi),%r9d
cmp    $0x3,%r9b
je     c2d0 <png_get_tRNS+0x50>
test   %r8,%r8
je     c2c2 <png_get_tRNS+0x42>
lea    0xc0(%rsi),%rax
mov    %rax,(%r8)
mov    %rdi,%rax
test   %rdx,%rdx
je     c2f1 <png_get_tRNS+0x71>
movq   $0x0,(%rdx)
jmp    c2f1 <png_get_tRNS+0x71>
test   %rdx,%rdx
je     c2e2 <png_get_tRNS+0x62>
mov    0xb8(%rsi),%rax
mov    %rax,(%rdx)
mov    %rdi,%rax
test   %r8,%r8
je     c2f1 <png_get_tRNS+0x71>
lea    0xc0(%rsi),%rdx
mov    %rdx,(%r8)
test   %rcx,%rcx
jne    c2f8 <png_get_tRNS+0x78>
leaveq 
retq   
movzwl 0x22(%rsi),%eax
mov    %eax,(%rcx)
mov    %rdi,%rax
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

000000000000c310 <png_get_sCAL>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
xor    %eax,%eax
test   %rdi,%rdi
jne    c321 <png_get_sCAL+0x11>
leaveq 
retq   
test   %rsi,%rsi
jne    c328 <png_get_sCAL+0x18>
leaveq 
retq   
mov    0x8(%rsi),%edi
and    $0x4000,%edi
test   %edi,%edi
jne    c337 <png_get_sCAL+0x27>
leaveq 
retq   
movzbl 0x14c(%rsi),%eax
mov    %eax,(%rdx)
mov    0x150(%rsi),%rdi
mov    %r13,-0x8(%rbp)
mov    %r14,-0x10(%rbp)
mov    %r15,-0x18(%rbp)
mov    %r8,%r13
mov    %rcx,%r14
mov    %rsi,%r15
callq  51a0 <atof@plt>
movsd  %xmm0,(%r14)
mov    0x158(%r15),%rdi
callq  51a0 <atof@plt>
movsd  %xmm0,0x0(%r13)
mov    $0x4000,%eax
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

000000000000c390 <png_get_sCAL_fixed>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
xor    %eax,%eax
test   %rdi,%rdi
jne    c3a1 <png_get_sCAL_fixed+0x11>
leaveq 
retq   
test   %rsi,%rsi
jne    c3a8 <png_get_sCAL_fixed+0x18>
leaveq 
retq   
mov    0x8(%rsi),%r9d
and    $0x4000,%r9d
test   %r9d,%r9d
jne    c3ba <png_get_sCAL_fixed+0x2a>
leaveq 
retq   
movzbl 0x14c(%rsi),%eax
mov    %eax,(%rdx)
mov    0x150(%rsi),%rax
mov    %r12,-0x8(%rbp)
mov    %r13,-0x10(%rbp)
mov    %r14,-0x18(%rbp)
mov    %r15,-0x20(%rbp)
mov    %rdi,%r12
mov    %rax,%rdi
mov    %r8,%r13
mov    %rcx,%r14
mov    %rsi,%r15
callq  51a0 <atof@plt>
lea    0x211da(%rip),%rsi        # 2d5cf <valid_parameters.6+0x79>
mov    %r12,%rdi
callq  69f0 <png_fixed>
mov    %eax,(%r14)
mov    0x158(%r15),%rdi
callq  51a0 <atof@plt>
mov    %r12,%rdi
lea    0x211c4(%rip),%rsi        # 2d5da <valid_parameters.6+0x84>
callq  69f0 <png_fixed>
mov    %eax,0x0(%r13)
mov    $0x4000,%eax
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)

000000000000c440 <png_get_sCAL_s>:
push   %rbp
mov    %rsp,%rbp
xor    %eax,%eax
test   %rdi,%rdi
jne    c44d <png_get_sCAL_s+0xd>
leaveq 
retq   
test   %rsi,%rsi
jne    c454 <png_get_sCAL_s+0x14>
leaveq 
retq   
mov    0x8(%rsi),%edi
and    $0x4000,%edi
test   %edi,%edi
jne    c463 <png_get_sCAL_s+0x23>
leaveq 
retq   
movzbl 0x14c(%rsi),%eax
mov    %eax,(%rdx)
mov    0x150(%rsi),%rax
mov    %rax,(%rcx)
mov    0x158(%rsi),%rax
mov    %rax,(%r8)
mov    $0x4000,%eax
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

000000000000c490 <png_get_unknown_chunks>:
push   %rbp
mov    %rsp,%rbp
xor    %eax,%eax
test   %rdi,%rdi
jne    c49d <png_get_unknown_chunks+0xd>
leaveq 
retq   
test   %rsi,%rsi
jne    c4a4 <png_get_unknown_chunks+0x14>
leaveq 
retq   
test   %rdx,%rdx
jne    c4ab <png_get_unknown_chunks+0x1b>
leaveq 
retq   
mov    0x130(%rsi),%rax
mov    %rax,(%rdx)
movslq 0x138(%rsi),%rax
leaveq 
retq   
xchg   %ax,%ax

000000000000c4c0 <png_get_user_width_max>:
push   %rbp
mov    %rsp,%rbp
test   %rdi,%rdi
jne    c4cd <png_get_user_width_max+0xd>
xor    %eax,%eax
leaveq 
retq   
mov    0x41c(%rdi),%eax
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)

000000000000c4e0 <png_get_user_height_max>:
push   %rbp
mov    %rsp,%rbp
test   %rdi,%rdi
jne    c4ed <png_get_user_height_max+0xd>
xor    %eax,%eax
leaveq 
retq   
mov    0x420(%rdi),%eax
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)

000000000000c500 <png_get_chunk_cache_max>:
push   %rbp
mov    %rsp,%rbp
test   %rdi,%rdi
jne    c50d <png_get_chunk_cache_max+0xd>
xor    %eax,%eax
leaveq 
retq   
mov    0x424(%rdi),%eax
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)

000000000000c520 <png_get_chunk_malloc_max>:
push   %rbp
mov    %rsp,%rbp
test   %rdi,%rdi
jne    c52d <png_get_chunk_malloc_max+0xd>
xor    %eax,%eax
leaveq 
retq   
mov    0x428(%rdi),%rax
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)

000000000000c540 <png_get_pixels_per_inch>:
push   %rbp
mov    %rsp,%rbp
callq  5710 <png_get_pixels_per_meter@plt>
mov    %rax,%rdi
callq  c750 <ppi_from_ppm>
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

000000000000c560 <png_get_x_pixels_per_inch>:
push   %rbp
mov    %rsp,%rbp
callq  5210 <png_get_x_pixels_per_meter@plt>
mov    %rax,%rdi
callq  c750 <ppi_from_ppm>
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

000000000000c580 <png_get_y_pixels_per_inch>:
push   %rbp
mov    %rsp,%rbp
callq  53a0 <png_get_y_pixels_per_meter@plt>
mov    %rax,%rdi
callq  c750 <ppi_from_ppm>
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

000000000000c5a0 <png_get_x_offset_inches>:
push   %rbp
mov    %rsp,%rbp
callq  52f0 <png_get_x_offset_microns@plt>
cvtsi2sd %eax,%xmm0
movsd  0x2103b(%rip),%xmm1        # 2d5f0 <valid_parameters.6+0x9a>
mulsd  %xmm1,%xmm0
cvtsd2ss %xmm0,%xmm0
leaveq 
retq   
nop

000000000000c5c0 <png_get_x_offset_inches_fixed>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x8(%rbp)
mov    %rdi,%r15
callq  52f0 <png_get_x_offset_microns@plt>
mov    %rax,%rsi
mov    %r15,%rdi
callq  c790 <png_fixed_inches_from_microns>
mov    -0x8(%rbp),%r15
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)

000000000000c5f0 <png_get_y_offset_inches>:
push   %rbp
mov    %rsp,%rbp
callq  5030 <png_get_y_offset_microns@plt>
cvtsi2sd %eax,%xmm0
movsd  0x20feb(%rip),%xmm1        # 2d5f0 <valid_parameters.6+0x9a>
mulsd  %xmm1,%xmm0
cvtsd2ss %xmm0,%xmm0
leaveq 
retq   
nop

000000000000c610 <png_get_y_offset_inches_fixed>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x8(%rbp)
mov    %rdi,%r15
callq  5030 <png_get_y_offset_microns@plt>
mov    %rax,%rsi
mov    %r15,%rdi
callq  c790 <png_fixed_inches_from_microns>
mov    -0x8(%rbp),%r15
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)

000000000000c640 <png_get_pHYs_dpi>:
push   %rbp
mov    %rsp,%rbp
xor    %eax,%eax
test   %rdi,%rdi
jne    c64d <png_get_pHYs_dpi+0xd>
leaveq 
retq   
test   %rsi,%rsi
jne    c654 <png_get_pHYs_dpi+0x14>
leaveq 
retq   
mov    0x8(%rsi),%edi
and    $0x80,%edi
test   %edi,%edi
jne    c663 <png_get_pHYs_dpi+0x23>
leaveq 
retq   
mov    $0x80,%edi
test   %rdx,%rdx
je     c678 <png_get_pHYs_dpi+0x38>
mov    0xe0(%rsi),%eax
mov    %eax,(%rdx)
mov    %rdi,%rax
test   %rcx,%rcx
je     c688 <png_get_pHYs_dpi+0x48>
mov    0xe4(%rsi),%eax
mov    %eax,(%rcx)
mov    %rdi,%rax
test   %r8,%r8
jne    c68f <png_get_pHYs_dpi+0x4f>
leaveq 
retq   
movzbl 0xe8(%rsi),%eax
mov    %eax,(%r8)
cmp    $0x1,%al
je     c6a2 <png_get_pHYs_dpi+0x62>
mov    %rdi,%rax
leaveq 
retq   
test   %rdx,%rdx
movsd  0x20f4b(%rip),%xmm1        # 2d5f8 <valid_parameters.6+0xa2>
movsd  0x20f4b(%rip),%xmm2        # 2d600 <valid_parameters.6+0xaa>
je     c6cf <png_get_pHYs_dpi+0x8f>
mov    (%rdx),%eax
mov    %eax,%eax
cvtsi2sd %rax,%xmm0
mulsd  %xmm1,%xmm0
addsd  %xmm2,%xmm0
cvttsd2si %xmm0,%rax
mov    %eax,(%rdx)
test   %rcx,%rcx
jne    c6d9 <png_get_pHYs_dpi+0x99>
mov    %rdi,%rax
leaveq 
retq   
mov    (%rcx),%eax
mov    %eax,%eax
cvtsi2sd %rax,%xmm0
mulsd  %xmm1,%xmm0
addsd  %xmm2,%xmm0
cvttsd2si %xmm0,%rax
mov    %eax,(%rcx)
mov    %rdi,%rax
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)

000000000000c700 <png_get_io_state>:
push   %rbp
mov    %rsp,%rbp
mov    0x46c(%rdi),%eax
leaveq 
retq   
nopl   0x0(%rax)

000000000000c710 <png_get_io_chunk_type>:
push   %rbp
mov    %rsp,%rbp
mov    0x218(%rdi),%eax
leaveq 
retq   
nopl   0x0(%rax)

000000000000c720 <png_get_palette_max>:
push   %rbp
mov    %rsp,%rbp
mov    $0xffffffffffffffff,%rax
test   %rdi,%rdi
jne    c732 <png_get_palette_max+0x12>
leaveq 
retq   
test   %rsi,%rsi
jne    c739 <png_get_palette_max+0x19>
leaveq 
retq   
movslq 0x25c(%rdi),%rax
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   (%rax)

000000000000c750 <ppi_from_ppm>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
xor    %eax,%eax
cmp    $0x7fffffff,%edi
jbe    c764 <ppi_from_ppm+0x14>
leaveq 
retq   
mov    %rdi,%rsi
lea    -0x4(%rbp),%rdi
mov    $0x7f,%edx
mov    $0x1388,%ecx
callq  8980 <png_muldiv>
test   %eax,%eax
jne    c782 <ppi_from_ppm+0x32>
xor    %eax,%eax
leaveq 
retq   
mov    -0x4(%rbp),%eax
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

000000000000c790 <png_fixed_inches_from_microns>:
push   %rbp
mov    %rsp,%rbp
mov    $0x1f4,%edx
mov    $0x7f,%ecx
callq  8a10 <png_muldiv_warn>
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)
nop

000000000000c7b0 <png_set_mem_fn>:
push   %rbp
mov    %rsp,%rbp
test   %rdi,%rdi
jne    c7bb <png_set_mem_fn+0xb>
leaveq 
retq   
mov    %rsi,0x3e0(%rdi)
mov    %rdx,0x3e8(%rdi)
mov    %rcx,0x3f0(%rdi)
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   (%rax)

000000000000c7e0 <png_get_mem_ptr>:
push   %rbp
mov    %rsp,%rbp
test   %rdi,%rdi
jne    c7ed <png_get_mem_ptr+0xd>
xor    %eax,%eax
leaveq 
retq   
mov    0x3e0(%rdi),%rax
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)

000000000000c800 <png_malloc>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
test   %rdi,%rdi
jne    c811 <png_malloc+0x11>
xor    %eax,%eax
leaveq 
retq   
mov    %rdi,%rax
mov    %rdi,-0x8(%rbp)
mov    %rax,%rdi
callq  c950 <png_malloc_base>
test   %rax,%rax
je     c827 <png_malloc+0x27>
leaveq 
retq   
lea    0x20dda(%rip),%rsi        # 2d608 <valid_parameters.6+0xb2>
mov    -0x8(%rbp),%rdi
callq  5470 <png_error@plt>
nopw   0x0(%rax,%rax,1)

000000000000c840 <png_calloc>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %rsi,-0x8(%rbp)
callq  5800 <png_malloc@plt>
test   %rax,%rax
jne    c858 <png_calloc+0x18>
leaveq 
retq   
xor    %esi,%esi
mov    %rax,%rdi
mov    %r15,-0x10(%rbp)
mov    %rax,%r15
mov    -0x8(%rbp),%rdx
callq  5350 <memset@plt>
mov    %r15,%rax
mov    -0x10(%rbp),%r15
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)

000000000000c880 <png_malloc_warn>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
xor    %eax,%eax
test   %rdi,%rdi
jne    c891 <png_malloc_warn+0x11>
leaveq 
retq   
mov    %rdi,%rax
mov    %rdi,-0x8(%rbp)
mov    %rax,%rdi
callq  c950 <png_malloc_base>
test   %rax,%rax
je     c8a7 <png_malloc_warn+0x27>
leaveq 
retq   
lea    0x20d5a(%rip),%rsi        # 2d608 <valid_parameters.6+0xb2>
mov    -0x8(%rbp),%rdi
callq  5390 <png_warning@plt>
xor    %eax,%eax
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

000000000000c8c0 <png_free>:
push   %rbp
mov    %rsp,%rbp
test   %rdi,%rdi
jne    c8cb <png_free+0xb>
leaveq 
retq   
test   %rsi,%rsi
jne    c8d2 <png_free+0x12>
leaveq 
retq   
mov    0x3f0(%rdi),%rax
test   %rax,%rax
jne    c8e5 <png_free+0x25>
callq  5700 <png_free_default@plt>
leaveq 
retq   
callq  *%rax
leaveq 
retq   
nopl   0x0(%rax)

000000000000c8f0 <png_malloc_default>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
xor    %eax,%eax
test   %rdi,%rdi
jne    c901 <png_malloc_default+0x11>
leaveq 
retq   
mov    %rdi,-0x8(%rbp)
mov    %rax,%rdi
callq  c950 <png_malloc_base>
test   %rax,%rax
je     c914 <png_malloc_default+0x24>
leaveq 
retq   
lea    0x20cfb(%rip),%rsi        # 2d616 <valid_parameters.6+0xc0>
mov    -0x8(%rbp),%rdi
callq  5470 <png_error@plt>
data16 nopw %cs:0x0(%rax,%rax,1)
nop

000000000000c930 <png_free_default>:
push   %rbp
mov    %rsp,%rbp
test   %rdi,%rdi
jne    c93b <png_free_default+0xb>
leaveq 
retq   
test   %rsi,%rsi
jne    c942 <png_free_default+0x12>
leaveq 
retq   
mov    %rsi,%rdi
callq  5070 <free@plt>
leaveq 
retq   
nopl   0x0(%rax)

000000000000c950 <png_malloc_base>:
push   %rbp
mov    %rsp,%rbp
test   %rsi,%rsi
jne    c95d <png_malloc_base+0xd>
xor    %eax,%eax
leaveq 
retq   
test   %rdi,%rdi
jne    c96c <png_malloc_base+0x1c>
mov    %rsi,%rdi
callq  55c0 <malloc@plt>
leaveq 
retq   
mov    0x3e8(%rdi),%rax
test   %rax,%rax
je     c962 <png_malloc_base+0x12>
callq  *%rax
leaveq 
retq   
nopl   0x0(%rax)

000000000000c980 <png_malloc_array>:
push   %rbp
mov    %rsp,%rbp
test   %esi,%esi
jle    c994 <png_malloc_array+0x14>
test   %rdx,%rdx
je     c994 <png_malloc_array+0x14>
callq  cae0 <png_malloc_array_checked>
leaveq 
retq   
lea    0x20c89(%rip),%rsi        # 2d624 <valid_parameters.6+0xce>
callq  5470 <png_error@plt>

000000000000c9a0 <png_realloc_array>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
test   %ecx,%ecx
jle    c9d1 <png_realloc_array+0x31>
test   %r8,%r8
je     c9d1 <png_realloc_array+0x31>
test   %edx,%edx
js     c9d1 <png_realloc_array+0x31>
test   %rsi,%rsi
je     c9cd <png_realloc_array+0x2d>
xor    %eax,%eax
mov    %rdx,%r9
xor    $0x7fffffff,%r9d
cmp    %r9d,%ecx
jle    c9dd <png_realloc_array+0x3d>
leaveq 
retq   
test   %edx,%edx
jle    c9ba <png_realloc_array+0x1a>
lea    0x20c68(%rip),%rsi        # 2d640 <valid_parameters.6+0xea>
callq  5470 <png_error@plt>
lea    (%rcx,%rdx,1),%r9d
mov    %r8,%rax
mov    %r15,-0x28(%rbp)
mov    %r8,-0x20(%rbp)
mov    %rcx,-0x8(%rbp)
mov    %rsi,-0x10(%rbp)
mov    %r9,%rsi
mov    %rdx,%r15
mov    %rax,%rdx
callq  cae0 <png_malloc_array_checked>
test   %rax,%rax
jne    ca0f <png_realloc_array+0x6f>
xor    %eax,%eax
mov    -0x28(%rbp),%r15
leaveq 
retq   
mov    %r15d,%ecx
mov    -0x20(%rbp),%rdx
imul   %rdx,%rcx
test   %r15d,%r15d
jg     ca24 <png_realloc_array+0x84>
mov    %rax,%r15
jmp    ca55 <png_realloc_array+0xb5>
mov    %rax,%rdi
mov    %rcx,%r8
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %rdx,%r13
mov    %r8,%rdx
mov    %rcx,%r14
mov    %rax,%r15
mov    -0x10(%rbp),%rsi
callq  54c0 <memcpy@plt>
mov    %r14,%rcx
mov    %r13,%rdx
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
lea    (%r15,%rcx,1),%rdi
mov    -0x8(%rbp),%rax
mov    %eax,%eax
imul   %rax,%rdx
xor    %esi,%esi
callq  5350 <memset@plt>
mov    %r15,%rax
mov    -0x28(%rbp),%r15
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

000000000000ca80 <png_destroy_png_struct>:
push   %rbp
mov    %rsp,%rbp
sub    $0x4f0,%rsp
test   %rdi,%rdi
jne    ca92 <png_destroy_png_struct+0x12>
leaveq 
retq   
lea    -0x4f0(%rbp),%rax
mov    $0x4e8,%edx
mov    %rdi,%rsi
mov    %r15,-0x8(%rbp)
mov    %rdi,%r15
mov    %rax,%rdi
callq  54c0 <memcpy@plt>
xor    %esi,%esi
mov    %r15,%rdi
mov    $0x4e8,%edx
callq  5350 <memset@plt>
mov    %r15,%rsi
lea    -0x4f0(%rbp),%rdi
mov    %rdi,%r15
callq  5790 <png_free@plt>
mov    %r15,%rdi
callq  ac00 <png_free_jmpbuf>
mov    -0x8(%rbp),%r15
leaveq 
retq   
nop

000000000000cae0 <png_malloc_array_checked>:
push   %rbp
mov    %rsp,%rbp
mov    %rsi,%r8
mov    %rdx,%rsi
xor    %ecx,%ecx
mov    $0xffffffffffffffff,%rax
mov    %rcx,%rdx
div    %rsi
movslq %r8d,%rdx
cmp    %rdx,%rax
jae    cb06 <png_malloc_array_checked+0x26>
mov    %rcx,%rax
leaveq 
retq   
imul   %rdx,%rsi
callq  c950 <png_malloc_base>
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)
nopl   0x0(%rax,%rax,1)

000000000000cb20 <png_set_progressive_read_fn>:
push   %rbp
mov    %rsp,%rbp
test   %rdi,%rdi
jne    cb2b <png_set_progressive_read_fn+0xb>
leaveq 
retq   
mov    %rdx,0x310(%rdi)
mov    %rcx,0x318(%rdi)
mov    %r8,0x320(%rdi)
lea    0x119(%rip),%rdx        # cc60 <png_push_fill_buffer>
callq  5560 <png_set_read_fn@plt>
leaveq 
retq   
xchg   %ax,%ax

000000000000cb50 <png_get_progressive_ptr>:
push   %rbp
mov    %rsp,%rbp
test   %rdi,%rdi
jne    cb5d <png_get_progressive_ptr+0xd>
xor    %eax,%eax
leaveq 
retq   
mov    0x108(%rdi),%rax
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)

000000000000cb70 <png_process_data>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
test   %rdi,%rdi
jne    cb7f <png_process_data+0xf>
leaveq 
retq   
test   %rsi,%rsi
jne    cb86 <png_process_data+0x16>
leaveq 
retq   
mov    %rdi,%rax
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rdi,%r14
mov    %rax,%rdi
mov    %rsi,%r15
mov    %rdx,%rsi
mov    %rcx,%rdx
callq  daf0 <png_push_restore_buffer>
jmp    cbb2 <png_process_data+0x42>
mov    %r14,%rdi
mov    %r15,%rsi
callq  e780 <png_process_some_data>
mov    0x360(%r14),%rax
test   %rax,%rax
jne    cba7 <png_process_data+0x37>
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

000000000000cbd0 <png_process_data_pause>:
push   %rbp
mov    %rsp,%rbp
xor    %eax,%eax
test   %rdi,%rdi
jne    cbdd <png_process_data_pause+0xd>
leaveq 
retq   
test   %esi,%esi
jne    cc01 <png_process_data_pause+0x31>
mov    0x360(%rdi),%rcx
movq   $0x0,0x360(%rdi)
mov    0x350(%rdi),%rdx
cmp    %rcx,%rdx
jb     cc0a <png_process_data_pause+0x3a>
leaveq 
retq   
callq  d930 <png_push_save_buffer>
xor    %eax,%eax
leaveq 
retq   
mov    %rcx,%rax
sub    %rdx,%rax
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   (%rax)

000000000000cc20 <png_process_data_skip>:
push   %rbp
mov    %rsp,%rbp
lea    0x20a4d(%rip),%rsi        # 2d678 <valid_parameters.6+0x122>
callq  b100 <png_app_warning>
xor    %eax,%eax
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nop

000000000000cc40 <png_progressive_combine_row>:
push   %rbp
mov    %rsp,%rbp
test   %rdi,%rdi
jne    cc4b <png_progressive_combine_row+0xb>
leaveq 
retq   
test   %rdx,%rdx
jne    cc52 <png_progressive_combine_row+0x12>
leaveq 
retq   
mov    $0x1,%edx
callq  1b440 <png_combine_row>
leaveq 
retq   
xchg   %ax,%ax

000000000000cc60 <png_push_fill_buffer>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
test   %rdi,%rdi
jne    cc6f <png_push_fill_buffer+0xf>
leaveq 
retq   
mov    0x350(%rdi),%rax
test   %rax,%rax
je     cd0e <png_push_fill_buffer+0xae>
cmp    %rdx,%rax
jbe    cc87 <png_push_fill_buffer+0x27>
mov    %rdx,%rax
mov    0x328(%rdi),%rcx
mov    %rsi,%r8
mov    %rax,%r9
mov    %r12,-0x8(%rbp)
mov    %r13,-0x10(%rbp)
mov    %r14,-0x18(%rbp)
mov    %r15,-0x20(%rbp)
mov    %rdx,%r12
mov    %r9,%rdx
mov    %rax,%r13
mov    %rsi,%r14
mov    %rcx,%rsi
mov    %rdi,%r15
mov    %r8,%rdi
callq  54c0 <memcpy@plt>
mov    0x360(%r15),%rax
sub    %r13,%rax
mov    %rax,0x360(%r15)
mov    0x350(%r15),%rax
sub    %r13,%rax
mov    %rax,0x350(%r15)
mov    %r13,%rax
add    0x328(%r15),%rax
mov    %rax,0x328(%r15)
mov    %r12,%rdx
sub    %r13,%rdx
lea    (%r14,%r13,1),%rsi
mov    %r15,%rdi
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
test   %rdx,%rdx
jne    cd15 <png_push_fill_buffer+0xb5>
leaveq 
retq   
mov    0x368(%rdi),%rax
test   %rax,%rax
jne    cd23 <png_push_fill_buffer+0xc3>
leaveq 
retq   
cmp    %rax,%rdx
jae    cd2b <png_push_fill_buffer+0xcb>
mov    %rdx,%rax
mov    0x338(%rdi),%rcx
mov    %rax,%rdx
mov    %r14,-0x18(%rbp)
mov    %r15,-0x20(%rbp)
mov    %rax,%r14
mov    %rdi,%r15
mov    %rsi,%rdi
mov    %rcx,%rsi
callq  54c0 <memcpy@plt>
mov    0x360(%r15),%rax
sub    %r14,%rax
mov    %rax,0x360(%r15)
mov    0x368(%r15),%rax
sub    %r14,%rax
mov    %rax,0x368(%r15)
add    0x338(%r15),%r14
mov    %r14,0x338(%r15)
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

000000000000cd90 <png_push_read_chunk>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    0x12c(%rdi),%eax
and    $0x100,%eax
test   %eax,%eax
je     cf39 <png_push_read_chunk+0x1a9>
mov    %r15,%rax
mov    %r14,%r15
mov    %r13,%r14
mov    %rdi,%r13
mov    0x218(%r13),%r8d
cmp    $0x49444154,%r8d
je     d010 <png_push_read_chunk+0x280>
cmp    $0x49484452,%r8d
je     d0c1 <png_push_read_chunk+0x331>
cmp    $0x49454e44,%r8d
je     d112 <png_push_read_chunk+0x382>
mov    %r13,%rdi
mov    %r8,%rcx
mov    %r14,-0x10(%rbp)
mov    %r15,-0x18(%rbp)
mov    %rax,-0x28(%rbp)
mov    %r8,%r14
mov    %rsi,%r15
mov    %rcx,%rsi
callq  6e90 <png_chunk_unknown_handling>
test   %eax,%eax
jne    d163 <png_push_read_chunk+0x3d3>
cmp    $0x504c5445,%r14d
je     d1a7 <png_push_read_chunk+0x417>
cmp    $0x49444154,%r14d
je     d1db <png_push_read_chunk+0x44b>
mov    0x218(%r13),%eax
cmp    $0x67414d41,%eax
je     d227 <png_push_read_chunk+0x497>
cmp    $0x73424954,%eax
je     d25b <png_push_read_chunk+0x4cb>
cmp    $0x6348524d,%eax
je     d28f <png_push_read_chunk+0x4ff>
cmp    $0x73524742,%r14d
je     d2c3 <png_push_read_chunk+0x533>
cmp    $0x69434350,%eax
je     d2f7 <png_push_read_chunk+0x567>
cmp    $0x73504c54,%r14d
je     d32b <png_push_read_chunk+0x59b>
cmp    $0x74524e53,%r14d
je     d35f <png_push_read_chunk+0x5cf>
cmp    $0x624b4744,%r14d
je     d393 <png_push_read_chunk+0x603>
cmp    $0x68495354,%r14d
je     d3c7 <png_push_read_chunk+0x637>
cmp    $0x70485973,%r14d
je     d3fb <png_push_read_chunk+0x66b>
cmp    $0x6f464673,%r14d
je     d42f <png_push_read_chunk+0x69f>
cmp    $0x7043414c,%r14d
je     d463 <png_push_read_chunk+0x6d3>
cmp    $0x7343414c,%r14d
je     d497 <png_push_read_chunk+0x707>
cmp    $0x74494d45,%r14d
je     d4cb <png_push_read_chunk+0x73b>
cmp    $0x74455874,%r14d
je     d4ff <png_push_read_chunk+0x76f>
cmp    $0x7a545874,%r14d
je     d533 <png_push_read_chunk+0x7a3>
cmp    $0x69545874,%r14d
je     d567 <png_push_read_chunk+0x7d7>
mov    0x360(%r13),%rcx
mov    0x348(%r13),%edx
lea    0x4(%rdx),%eax
mov    %eax,%eax
cmp    %rax,%rcx
jb     d59b <png_push_read_chunk+0x80b>
mov    %r15,%rsi
xor    %ecx,%ecx
mov    %r13,%rdi
callq  1fe10 <png_handle_unknown>
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
jmpq   d0f3 <png_push_read_chunk+0x363>
mov    0x360(%rdi),%rax
cmp    $0x7,%rax
jbe    d5b1 <png_push_read_chunk+0x821>
lea    -0x30(%rbp),%r9
mov    $0x4,%r8d
mov    %rdi,%rax
mov    %r9,%rcx
mov    %r8,%rdx
mov    %r13,-0x10(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rsi,-0x8(%rbp)
mov    %rcx,%rsi
mov    %rdi,%r13
mov    %rax,%rdi
mov    %r8,%r14
mov    %r9,%r15
callq  cc60 <png_push_fill_buffer>
mov    %r15,%rsi
mov    %r13,%rdi
callq  5730 <png_get_uint_31@plt>
mov    %eax,0x348(%r13)
mov    %r13,%rdi
callq  6d90 <png_reset_crc>
mov    %r14,%rdx
lea    -0x2c(%rbp),%rsi
mov    %r13,%rdi
callq  1b220 <png_crc_read>
movzbl -0x2c(%rbp),%eax
shl    $0x18,%eax
movzbl -0x2b(%rbp),%ecx
shl    $0x10,%ecx
add    %eax,%ecx
movzbl -0x2a(%rbp),%eax
shl    $0x8,%eax
add    %eax,%ecx
movzbl -0x29(%rbp),%eax
lea    (%rcx,%rax,1),%esi
mov    %esi,0x218(%r13)
mov    %r13,%rdi
callq  1fcd0 <png_check_chunk_name>
mov    0x348(%r13),%esi
mov    %r13,%rdi
callq  1fd10 <png_check_chunk_length>
mov    0x12c(%r13),%eax
or     $0x100,%eax
mov    %eax,0x12c(%r13)
mov    -0x8(%rbp),%rsi
mov    -0x28(%rbp),%rax
mov    -0x20(%rbp),%r15
mov    -0x10(%rbp),%r14
jmpq   cdb7 <png_push_read_chunk+0x27>
mov    0x12c(%r13),%ecx
mov    %rcx,%rdx
and    $0x8,%edx
test   %edx,%edx
je     d02e <png_push_read_chunk+0x29e>
or     $0x2000,%ecx
mov    %ecx,0x12c(%r13)
mov    0x12c(%r13),%ecx
mov    %rcx,%rdx
and    $0x1,%edx
test   %edx,%edx
je     d5b8 <png_push_read_chunk+0x828>
movzbl 0x267(%r13),%edx
cmp    $0x3,%dl
je     d5c7 <png_push_read_chunk+0x837>
movl   $0x2,0x370(%r13)
mov    %rcx,%rdx
and    $0x4,%edx
test   %edx,%edx
jne    d5e4 <png_push_read_chunk+0x854>
mov    0x12c(%r13),%ecx
mov    %rcx,%rdx
or     $0x4,%edx
mov    %edx,0x12c(%r13)
and    $0x8,%ecx
test   %ecx,%ecx
je     cdcb <png_push_read_chunk+0x3b>
lea    0x20661(%rip),%rcx        # 2d6f4 <valid_parameters.6+0x19e>
mov    %r13,%rdi
mov    %r15,-0x20(%rbp)
mov    %rax,-0x28(%rbp)
mov    %rsi,-0x8(%rbp)
mov    %rcx,%rsi
mov    %r8,%r15
callq  5590 <png_benign_error@plt>
mov    %r15,%r8
mov    -0x8(%rbp),%rsi
mov    -0x28(%rbp),%rax
mov    -0x20(%rbp),%r15
jmpq   cdcb <png_push_read_chunk+0x3b>
mov    0x348(%r13),%ecx
cmp    $0xd,%ecx
jne    d60c <png_push_read_chunk+0x87c>
mov    0x360(%r13),%rcx
cmp    $0x10,%rcx
jbe    d61b <png_push_read_chunk+0x88b>
mov    $0xd,%edx
mov    %r13,%rdi
mov    %rax,-0x28(%rbp)
callq  1caf0 <png_handle_IHDR>
mov    0x12c(%r13),%eax
and    $0xfffffeff,%eax
mov    %eax,0x12c(%r13)
mov    %r14,%r13
mov    %r15,%r14
mov    -0x28(%rbp),%r15
leaveq 
retq   
mov    0x360(%r13),%rdi
mov    0x348(%r13),%edx
lea    0x4(%rdx),%ecx
mov    %ecx,%ecx
cmp    %rcx,%rdi
jb     d634 <png_push_read_chunk+0x8a4>
mov    %r13,%rdi
mov    %rsi,%rcx
mov    %r15,-0x18(%rbp)
mov    %rax,-0x28(%rbp)
mov    %rsi,%r15
mov    %rcx,%rsi
callq  1cf60 <png_handle_IEND>
mov    %r15,%rsi
movl   $0x6,0x370(%r13)
mov    %r13,%rdi
callq  e730 <png_push_have_end>
mov    -0x18(%rbp),%r15
jmp    d0f3 <png_push_read_chunk+0x363>
mov    0x360(%r13),%rsi
mov    0x348(%r13),%edx
lea    0x4(%rdx),%ecx
mov    %ecx,%ecx
cmp    %rcx,%rsi
jb     d64d <png_push_read_chunk+0x8bd>
mov    %rax,%rcx
mov    %r15,%rsi
mov    %r13,%rdi
callq  1fe10 <png_handle_unknown>
cmp    $0x504c5445,%r14d
je     d663 <png_push_read_chunk+0x8d3>
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
jmpq   d0f3 <png_push_read_chunk+0x363>
mov    0x360(%r13),%rcx
mov    0x348(%r13),%edx
lea    0x4(%rdx),%eax
mov    %eax,%eax
cmp    %rax,%rcx
jb     d681 <png_push_read_chunk+0x8f1>
mov    %r15,%rsi
mov    %r13,%rdi
callq  1cc80 <png_handle_PLTE>
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
jmpq   d0f3 <png_push_read_chunk+0x363>
mov    0x348(%r13),%eax
mov    %eax,0x248(%r13)
mov    %r15,%rsi
movl   $0x2,0x370(%r13)
mov    %r13,%rdi
callq  e710 <png_push_have_info>
movzbl 0x26a(%r13),%eax
cmp    $0x7,%al
ja     d697 <png_push_read_chunk+0x907>
mov    0x210(%r13),%ecx
imul   %rcx,%rax
add    $0x7,%rax
shr    $0x3,%rax
jmpq   d6a3 <png_push_read_chunk+0x913>
mov    0x360(%r13),%rcx
mov    0x348(%r13),%edx
lea    0x4(%rdx),%eax
mov    %eax,%eax
cmp    %rax,%rcx
jb     d6c9 <png_push_read_chunk+0x939>
mov    %r15,%rsi
mov    %r13,%rdi
callq  1d6a0 <png_handle_gAMA>
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
jmpq   d0f3 <png_push_read_chunk+0x363>
mov    0x360(%r13),%rcx
mov    0x348(%r13),%edx
lea    0x4(%rdx),%eax
mov    %eax,%eax
cmp    %rax,%rcx
jb     d6df <png_push_read_chunk+0x94f>
mov    %r15,%rsi
mov    %r13,%rdi
callq  1eaf0 <png_handle_sBIT>
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
jmpq   d0f3 <png_push_read_chunk+0x363>
mov    0x360(%r13),%rcx
mov    0x348(%r13),%edx
lea    0x4(%rdx),%eax
mov    %eax,%eax
cmp    %rax,%rcx
jb     d6f5 <png_push_read_chunk+0x965>
mov    %r15,%rsi
mov    %r13,%rdi
callq  1d240 <png_handle_cHRM>
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
jmpq   d0f3 <png_push_read_chunk+0x363>
mov    0x360(%r13),%rcx
mov    0x348(%r13),%edx
lea    0x4(%rdx),%eax
mov    %eax,%eax
cmp    %rax,%rcx
jb     d70b <png_push_read_chunk+0x97b>
mov    %r15,%rsi
mov    %r13,%rdi
callq  1f330 <png_handle_sRGB>
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
jmpq   d0f3 <png_push_read_chunk+0x363>
mov    0x360(%r13),%rcx
mov    0x348(%r13),%edx
lea    0x4(%rdx),%eax
mov    %eax,%eax
cmp    %rax,%rcx
jb     d721 <png_push_read_chunk+0x991>
mov    %r15,%rsi
mov    %r13,%rdi
callq  1d930 <png_handle_iCCP>
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
jmpq   d0f3 <png_push_read_chunk+0x363>
mov    0x360(%r13),%rax
mov    0x348(%r13),%edx
lea    0x4(%rdx),%ecx
mov    %ecx,%ecx
cmp    %rcx,%rax
jb     d737 <png_push_read_chunk+0x9a7>
mov    %r15,%rsi
mov    %r13,%rdi
callq  1f020 <png_handle_sPLT>
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
jmpq   d0f3 <png_push_read_chunk+0x363>
mov    0x360(%r13),%rcx
mov    0x348(%r13),%edx
lea    0x4(%rdx),%eax
mov    %eax,%eax
cmp    %rax,%rcx
jb     d74d <png_push_read_chunk+0x9bd>
mov    %r15,%rsi
mov    %r13,%rdi
callq  1f740 <png_handle_tRNS>
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
jmpq   d0f3 <png_push_read_chunk+0x363>
mov    0x360(%r13),%rcx
mov    0x348(%r13),%edx
lea    0x4(%rdx),%eax
mov    %eax,%eax
cmp    %rax,%rcx
jb     d763 <png_push_read_chunk+0x9d3>
mov    %r15,%rsi
mov    %r13,%rdi
callq  1cfe0 <png_handle_bKGD>
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
jmpq   d0f3 <png_push_read_chunk+0x363>
mov    0x360(%r13),%rcx
mov    0x348(%r13),%edx
lea    0x4(%rdx),%eax
mov    %eax,%eax
cmp    %rax,%rcx
jb     d779 <png_push_read_chunk+0x9e9>
mov    %r15,%rsi
mov    %r13,%rdi
callq  1d790 <png_handle_hIST>
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
jmpq   d0f3 <png_push_read_chunk+0x363>
mov    0x360(%r13),%rcx
mov    0x348(%r13),%edx
lea    0x4(%rdx),%eax
mov    %eax,%eax
cmp    %rax,%rcx
jb     d78f <png_push_read_chunk+0x9ff>
mov    %r15,%rsi
mov    %r13,%rdi
callq  1e990 <png_handle_pHYs>
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
jmpq   d0f3 <png_push_read_chunk+0x363>
mov    0x360(%r13),%rcx
mov    0x348(%r13),%edx
lea    0x4(%rdx),%eax
mov    %eax,%eax
cmp    %rax,%rcx
jb     d7a5 <png_push_read_chunk+0xa15>
mov    %r15,%rsi
mov    %r13,%rdi
callq  1e420 <png_handle_oFFs>
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
jmpq   d0f3 <png_push_read_chunk+0x363>
mov    0x360(%r13),%rcx
mov    0x348(%r13),%edx
lea    0x4(%rdx),%eax
mov    %eax,%eax
cmp    %rax,%rcx
jb     d7bb <png_push_read_chunk+0xa2b>
mov    %r15,%rsi
mov    %r13,%rdi
callq  1e5e0 <png_handle_pCAL>
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
jmpq   d0f3 <png_push_read_chunk+0x363>
mov    0x360(%r13),%rcx
mov    0x348(%r13),%edx
lea    0x4(%rdx),%eax
mov    %eax,%eax
cmp    %rax,%rcx
jb     d7d1 <png_push_read_chunk+0xa41>
mov    %r15,%rsi
mov    %r13,%rdi
callq  1ed10 <png_handle_sCAL>
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
jmpq   d0f3 <png_push_read_chunk+0x363>
mov    0x360(%r13),%rcx
mov    0x348(%r13),%edx
lea    0x4(%rdx),%eax
mov    %eax,%eax
cmp    %rax,%rcx
jb     d7e7 <png_push_read_chunk+0xa57>
mov    %r15,%rsi
mov    %r13,%rdi
callq  1f610 <png_handle_tIME>
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
jmpq   d0f3 <png_push_read_chunk+0x363>
mov    0x360(%r13),%rcx
mov    0x348(%r13),%edx
lea    0x4(%rdx),%eax
mov    %eax,%eax
cmp    %rax,%rcx
jb     d7fd <png_push_read_chunk+0xa6d>
mov    %r15,%rsi
mov    %r13,%rdi
callq  1f470 <png_handle_tEXt>
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
jmpq   d0f3 <png_push_read_chunk+0x363>
mov    0x360(%r13),%rcx
mov    0x348(%r13),%edx
lea    0x4(%rdx),%eax
mov    %eax,%eax
cmp    %rax,%rcx
jb     d813 <png_push_read_chunk+0xa83>
mov    %r15,%rsi
mov    %r13,%rdi
callq  1fa50 <png_handle_zTXt>
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
jmpq   d0f3 <png_push_read_chunk+0x363>
mov    0x360(%r13),%rcx
mov    0x348(%r13),%edx
lea    0x4(%rdx),%eax
mov    %eax,%eax
cmp    %rax,%rcx
jb     d829 <png_push_read_chunk+0xa99>
mov    %r15,%rsi
mov    %r13,%rdi
callq  1e090 <png_handle_iTXt>
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
jmpq   d0f3 <png_push_read_chunk+0x363>
mov    %r13,%rdi
callq  d930 <png_push_save_buffer>
mov    -0x28(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
leaveq 
retq   
callq  d930 <png_push_save_buffer>
leaveq 
retq   
mov    %r13,%rdi
lea    0x20100(%rip),%rsi        # 2d6c2 <valid_parameters.6+0x16c>
callq  5470 <png_error@plt>
mov    %rcx,%rdx
and    $0x2,%edx
test   %edx,%edx
jne    d054 <png_push_read_chunk+0x2c4>
mov    %r13,%rdi
lea    0x200fc(%rip),%rsi        # 2d6db <valid_parameters.6+0x185>
callq  5470 <png_error@plt>
and    $0x2000,%ecx
test   %ecx,%ecx
jne    d06d <png_push_read_chunk+0x2dd>
mov    0x348(%r13),%ecx
test   %ecx,%ecx
jne    d06d <png_push_read_chunk+0x2dd>
mov    %r14,%r13
mov    %r15,%r14
mov    %rax,%r15
leaveq 
retq   
mov    %r13,%rdi
lea    0x200f3(%rip),%rsi        # 2d709 <valid_parameters.6+0x1b3>
callq  5470 <png_error@plt>
mov    %r13,%rdi
mov    %rax,%r13
callq  d930 <png_push_save_buffer>
mov    %r14,%rax
mov    %r15,%r14
mov    %r13,%r15
mov    %rax,%r13
leaveq 
retq   
mov    %r13,%rdi
mov    %rax,%r13
callq  d930 <png_push_save_buffer>
mov    %r14,%rax
mov    %r15,%r14
mov    %r13,%r15
mov    %rax,%r13
leaveq 
retq   
mov    %r13,%rdi
callq  d930 <png_push_save_buffer>
mov    -0x28(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
leaveq 
retq   
mov    0x12c(%r13),%eax
or     $0x2,%eax
mov    %eax,0x12c(%r13)
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
jmpq   d0f3 <png_push_read_chunk+0x363>
mov    %r13,%rdi
callq  d930 <png_push_save_buffer>
mov    -0x28(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
leaveq 
retq   
shr    $0x3,%rax
imul   0x210(%r13),%eax
add    $0x1,%eax
mov    %eax,0x160(%r13)
mov    0x228(%r13),%rax
mov    %rax,0x158(%r13)
mov    -0x28(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
leaveq 
retq   
mov    %r13,%rdi
callq  d930 <png_push_save_buffer>
mov    -0x28(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
leaveq 
retq   
mov    %r13,%rdi
callq  d930 <png_push_save_buffer>
mov    -0x28(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
leaveq 
retq   
mov    %r13,%rdi
callq  d930 <png_push_save_buffer>
mov    -0x28(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
leaveq 
retq   
mov    %r13,%rdi
callq  d930 <png_push_save_buffer>
mov    -0x28(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
leaveq 
retq   
mov    %r13,%rdi
callq  d930 <png_push_save_buffer>
mov    -0x28(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
leaveq 
retq   
mov    %r13,%rdi
callq  d930 <png_push_save_buffer>
mov    -0x28(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
leaveq 
retq   
mov    %r13,%rdi
callq  d930 <png_push_save_buffer>
mov    -0x28(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
leaveq 
retq   
mov    %r13,%rdi
callq  d930 <png_push_save_buffer>
mov    -0x28(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
leaveq 
retq   
mov    %r13,%rdi
callq  d930 <png_push_save_buffer>
mov    -0x28(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
leaveq 
retq   
mov    %r13,%rdi
callq  d930 <png_push_save_buffer>
mov    -0x28(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
leaveq 
retq   
mov    %r13,%rdi
callq  d930 <png_push_save_buffer>
mov    -0x28(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
leaveq 
retq   
mov    %r13,%rdi
callq  d930 <png_push_save_buffer>
mov    -0x28(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
leaveq 
retq   
mov    %r13,%rdi
callq  d930 <png_push_save_buffer>
mov    -0x28(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
leaveq 
retq   
mov    %r13,%rdi
callq  d930 <png_push_save_buffer>
mov    -0x28(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
leaveq 
retq   
mov    %r13,%rdi
callq  d930 <png_push_save_buffer>
mov    -0x28(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
leaveq 
retq   
mov    %r13,%rdi
callq  d930 <png_push_save_buffer>
mov    -0x28(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
leaveq 
retq   
mov    %r13,%rdi
callq  d930 <png_push_save_buffer>
mov    -0x28(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
leaveq 
retq   
nop

000000000000d840 <png_push_read_sig>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %r12,-0x8(%rbp)
mov    %r13,-0x10(%rbp)
mov    %r14,-0x18(%rbp)
mov    %r15,-0x20(%rbp)
movzbl 0x26d(%rdi),%r14d
mov    $0x8,%r12d
sub    %r14,%r12
mov    0x360(%rdi),%rax
cmp    %r12,%rax
jae    d878 <png_push_read_sig+0x38>
mov    %rax,%r12
mov    %rbx,%r13
mov    %rsi,%r15
lea    0x2c(%r15,%r14,1),%rsi
mov    %rdi,%rbx
mov    %r12,%rdx
callq  cc60 <png_push_fill_buffer>
movzbl 0x26d(%rbx),%eax
add    %r12d,%eax
mov    %al,0x26d(%rbx)
add    $0x2c,%r15
mov    %r15,%rdi
mov    %r14,%rsi
mov    %r12,%rdx
callq  57d0 <png_sig_cmp@plt>
test   %eax,%eax
jne    d8d4 <png_push_read_sig+0x94>
movzbl 0x26d(%rbx),%eax
cmp    $0x7,%al
ja     d8e9 <png_push_read_sig+0xa9>
mov    %r13,%rbx
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
leaveq 
retq   
cmp    $0x3,%r14b
jbe    d908 <png_push_read_sig+0xc8>
mov    %rbx,%rdi
lea    0x1fe48(%rip),%rsi        # 2d72c <valid_parameters.6+0x1d6>
callq  5470 <png_error@plt>
movl   $0x1,0x370(%rbx)
mov    %r13,%rbx
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
leaveq 
retq   
lea    -0x4(%r12),%rdx
mov    %r14,%rsi
mov    %r15,%rdi
callq  57d0 <png_sig_cmp@plt>
test   %eax,%eax
je     d8da <png_push_read_sig+0x9a>
mov    %rbx,%rdi
lea    0x1fdf7(%rip),%rsi        # 2d71d <valid_parameters.6+0x1c7>
callq  5470 <png_error@plt>
nopl   0x0(%rax,%rax,1)

000000000000d930 <png_push_save_buffer>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    0x350(%rdi),%rsi
test   %rsi,%rsi
jne    d9e8 <png_push_save_buffer+0xb8>
mov    0x368(%rdi),%rsi
mov    0x350(%rdi),%rdx
lea    (%rsi,%rdx,1),%rcx
mov    0x358(%rdi),%rax
cmp    %rcx,%rax
jb     da03 <png_push_save_buffer+0xd3>
mov    %r15,%rax
mov    %r14,%r15
mov    %r13,%r14
mov    %rdi,%r13
mov    0x368(%r13),%rdx
test   %rdx,%rdx
je     d9c4 <png_push_save_buffer+0x94>
mov    0x350(%r13),%rdi
add    0x330(%r13),%rdi
mov    0x338(%r13),%rsi
mov    %rax,-0x18(%rbp)
callq  54c0 <memcpy@plt>
mov    0x350(%r13),%rax
add    0x368(%r13),%rax
mov    %rax,0x350(%r13)
movq   $0x0,0x368(%r13)
mov    -0x18(%rbp),%rax
mov    0x330(%r13),%rcx
mov    %rcx,0x328(%r13)
movq   $0x0,0x360(%r13)
mov    %r14,%r13
mov    %r15,%r14
mov    %rax,%r15
leaveq 
retq   
mov    0x330(%rdi),%rcx
mov    0x328(%rdi),%rax
cmp    %rax,%rcx
je     d948 <png_push_save_buffer+0x18>
xor    %edx,%edx
jmp    da82 <png_push_save_buffer+0x152>
mov    $0xfffffffffffffeff,%rax
sub    %rsi,%rax
cmp    %rax,%rdx
ja     da8c <png_push_save_buffer+0x15c>
mov    0x330(%rdi),%rax
add    $0x100,%rcx
mov    %rdi,%rdx
mov    %rcx,%rsi
mov    %r13,-0x8(%rbp)
mov    %r14,-0x10(%rbp)
mov    %r15,-0x18(%rbp)
mov    %rdi,%r13
mov    %rdx,%rdi
mov    %rax,%r14
mov    %rcx,%r15
callq  5150 <png_malloc_warn@plt>
mov    %rax,0x330(%r13)
test   %rax,%rax
je     da98 <png_push_save_buffer+0x168>
test   %r14,%r14
jne    dab2 <png_push_save_buffer+0x182>
mov    0x350(%r13),%rax
test   %rax,%rax
je     dac4 <png_push_save_buffer+0x194>
mov    %r13,%rdi
lea    0x1fd2f(%rip),%rsi        # 2d799 <valid_parameters.6+0x243>
callq  5470 <png_error@plt>
movzbl (%rax),%r8d
mov    %r8b,(%rcx)
add    $0x1,%rax
add    $0x1,%rcx
add    $0x1,%rdx
cmp    %rdx,%rsi
ja     da6f <png_push_save_buffer+0x13f>
jmpq   d948 <png_push_save_buffer+0x18>
lea    0x1fcc0(%rip),%rsi        # 2d753 <valid_parameters.6+0x1fd>
callq  5470 <png_error@plt>
mov    %r14,%rsi
mov    %r13,%rdi
callq  5790 <png_free@plt>
mov    %r13,%rdi
lea    0x1fcc8(%rip),%rsi        # 2d775 <valid_parameters.6+0x21f>
callq  5470 <png_error@plt>
mov    %rax,%rdi
mov    0x350(%r13),%rdx
mov    %r14,%rsi
callq  54c0 <memcpy@plt>
mov    %r14,%rsi
mov    %r13,%rdi
callq  5790 <png_free@plt>
mov    %r15,0x358(%r13)
mov    -0x18(%rbp),%rax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
jmpq   d976 <png_push_save_buffer+0x46>
nopw   0x0(%rax,%rax,1)

000000000000daf0 <png_push_restore_buffer>:
push   %rbp
mov    %rsp,%rbp
mov    %rsi,0x340(%rdi)
mov    %rdx,0x368(%rdi)
add    0x350(%rdi),%rdx
mov    %rdx,0x360(%rdi)
mov    %rsi,0x338(%rdi)
leaveq 
retq   
nopl   0x0(%rax)

000000000000db20 <png_push_read_IDAT>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    0x12c(%rdi),%eax
and    $0x100,%eax
test   %eax,%eax
je     db6f <png_push_read_IDAT+0x4f>
mov    %r15,%rax
mov    %rdi,%r15
mov    0x248(%r15),%edx
test   %edx,%edx
jne    dc23 <png_push_read_IDAT+0x103>
mov    0x248(%r15),%edx
test   %edx,%edx
jne    dcb8 <png_push_read_IDAT+0x198>
mov    0x248(%r15),%ecx
test   %ecx,%ecx
je     dd4d <png_push_read_IDAT+0x22d>
mov    %rax,%r15
leaveq 
retq   
mov    0x360(%rdi),%rax
cmp    $0x7,%rax
jbe    dd8f <png_push_read_IDAT+0x26f>
lea    -0x18(%rbp),%rsi
mov    $0x4,%edx
mov    %rdi,%rax
mov    %r15,-0x10(%rbp)
mov    %rdi,%r15
mov    %rax,%rdi
callq  cc60 <png_push_fill_buffer>
mov    %r15,%rdi
lea    -0x18(%rbp),%rsi
callq  5730 <png_get_uint_31@plt>
mov    %eax,0x348(%r15)
mov    %r15,%rdi
callq  6d90 <png_reset_crc>
lea    -0x14(%rbp),%rsi
mov    %r15,%rdi
mov    $0x4,%edx
callq  1b220 <png_crc_read>
movzbl -0x14(%rbp),%eax
shl    $0x18,%eax
movzbl -0x13(%rbp),%ecx
shl    $0x10,%ecx
add    %eax,%ecx
movzbl -0x12(%rbp),%eax
shl    $0x8,%eax
add    %eax,%ecx
movzbl -0x11(%rbp),%eax
add    %eax,%ecx
mov    %ecx,0x218(%r15)
mov    0x12c(%r15),%eax
or     $0x100,%eax
mov    %eax,0x12c(%r15)
cmp    $0x49444154,%ecx
jne    dd96 <png_push_read_IDAT+0x276>
mov    0x348(%r15),%eax
mov    %eax,0x248(%r15)
mov    -0x10(%rbp),%rax
jmpq   db3d <png_push_read_IDAT+0x1d>
mov    0x350(%r15),%rcx
test   %rcx,%rcx
je     db4c <png_push_read_IDAT+0x2c>
cmp    %rdx,%rcx
jbe    dc3b <png_push_read_IDAT+0x11b>
mov    %rdx,%rcx
mov    0x328(%r15),%rsi
mov    %r15,%rdi
mov    %rcx,%rdx
mov    %rax,-0x10(%rbp)
mov    %r14,-0x8(%rbp)
mov    %rcx,%r14
callq  6dc0 <png_calculate_crc>
mov    0x328(%r15),%rsi
mov    %r15,%rdi
mov    %r14,%rdx
callq  dde0 <png_process_IDAT_data>
mov    0x248(%r15),%eax
sub    %r14d,%eax
mov    %eax,0x248(%r15)
mov    0x360(%r15),%rax
sub    %r14,%rax
mov    %rax,0x360(%r15)
mov    0x350(%r15),%rax
sub    %r14,%rax
mov    %rax,0x350(%r15)
add    0x328(%r15),%r14
mov    %r14,0x328(%r15)
mov    -0x8(%rbp),%r14
mov    -0x10(%rbp),%rax
jmpq   db4c <png_push_read_IDAT+0x2c>
mov    0x368(%r15),%rcx
test   %rcx,%rcx
je     db5b <png_push_read_IDAT+0x3b>
cmp    %rdx,%rcx
jbe    dcd0 <png_push_read_IDAT+0x1b0>
mov    %rdx,%rcx
mov    0x338(%r15),%rsi
mov    %r15,%rdi
mov    %rcx,%rdx
mov    %rax,-0x10(%rbp)
mov    %r14,-0x8(%rbp)
mov    %rcx,%r14
callq  6dc0 <png_calculate_crc>
mov    0x338(%r15),%rsi
mov    %r15,%rdi
mov    %r14,%rdx
callq  dde0 <png_process_IDAT_data>
mov    0x248(%r15),%eax
sub    %r14d,%eax
mov    %eax,0x248(%r15)
mov    0x360(%r15),%rax
sub    %r14,%rax
mov    %rax,0x360(%r15)
mov    0x368(%r15),%rax
sub    %r14,%rax
mov    %rax,0x368(%r15)
add    0x338(%r15),%r14
mov    %r14,0x338(%r15)
mov    -0x8(%rbp),%r14
mov    -0x10(%rbp),%rax
jmpq   db5b <png_push_read_IDAT+0x3b>
mov    0x360(%r15),%rcx
cmp    $0x3,%rcx
jbe    ddb5 <png_push_read_IDAT+0x295>
xor    %esi,%esi
mov    %r15,%rdi
mov    %rax,-0x10(%rbp)
callq  1b280 <png_crc_finish>
mov    0x12c(%r15),%eax
and    $0xfffffef7,%eax
add    $0x8,%eax
mov    %eax,0x12c(%r15)
movl   $0x0,0x138(%r15)
mov    -0x10(%rbp),%r15
leaveq 
retq   
callq  d930 <png_push_save_buffer>
leaveq 
retq   
movl   $0x1,0x370(%r15)
mov    0x130(%r15),%eax
and    $0x8,%eax
test   %eax,%eax
je     ddc2 <png_push_read_IDAT+0x2a2>
mov    -0x10(%rbp),%r15
leaveq 
retq   
mov    %r15,%rdi
mov    %rax,%r15
callq  d930 <png_push_save_buffer>
leaveq 
retq   
mov    %r15,%rdi
lea    0x1f9df(%rip),%rsi        # 2d7ab <valid_parameters.6+0x255>
callq  5470 <png_error@plt>
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   0x0(%rax)

000000000000dde0 <png_process_IDAT_data>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
test   %rdx,%rdx
jne    ddf9 <png_process_IDAT_data+0x19>
lea    0x1f9d2(%rip),%rsi        # 2d7c6 <valid_parameters.6+0x270>
callq  5470 <png_error@plt>
test   %rsi,%rsi
je     dded <png_process_IDAT_data+0xd>
mov    %rsi,0x140(%rdi)
mov    %edx,0x148(%rdi)
mov    $0x2,%eax
mov    %r13,-0x8(%rbp)
mov    %r14,-0x10(%rbp)
mov    %r15,-0x18(%rbp)
mov    %r12,%r13
mov    %rbx,%r12
mov    %rdi,%rbx
mov    %rax,%r14
jmp    de83 <png_process_IDAT_data+0xa3>
shr    $0x3,%rax
imul   0x210(%rbx),%eax
add    $0x1,%eax
mov    %eax,0x160(%rbx)
mov    0x228(%rbx),%rax
mov    %rax,0x158(%rbx)
mov    %rbx,%rdi
mov    %r14,%rsi
callq  1ca90 <png_zlib_inflate>
test   %eax,%eax
jne    ded2 <png_process_IDAT_data+0xf2>
mov    0x228(%rbx),%rcx
cmp    0x158(%rbx),%rcx
jne    df26 <png_process_IDAT_data+0x146>
cmp    $0x1,%eax
jne    de83 <png_process_IDAT_data+0xa3>
mov    0x130(%rbx),%eax
or     $0x8,%eax
mov    %eax,0x130(%rbx)
mov    0x148(%rbx),%eax
test   %eax,%eax
je     df69 <png_process_IDAT_data+0x189>
mov    0x130(%rbx),%eax
and    $0x8,%eax
test   %eax,%eax
jne    df69 <png_process_IDAT_data+0x189>
mov    0x160(%rbx),%eax
test   %eax,%eax
jne    de4c <png_process_IDAT_data+0x6c>
movzbl 0x26a(%rbx),%eax
cmp    $0x7,%al
ja     de2a <png_process_IDAT_data+0x4a>
mov    0x210(%rbx),%ecx
imul   %rcx,%rax
add    $0x7,%rax
shr    $0x3,%rax
jmpq   de35 <png_process_IDAT_data+0x55>
cmp    $0x1,%eax
je     de5b <png_process_IDAT_data+0x7b>
mov    0x130(%rbx),%ecx
or     $0x8,%ecx
mov    %ecx,0x130(%rbx)
movl   $0x0,0x138(%rbx)
mov    0x200(%rbx),%ecx
cmp    0x214(%rbx),%ecx
jbe    df8b <png_process_IDAT_data+0x1ab>
movzbl 0x265(%rbx),%ecx
cmp    $0x6,%cl
ja     df8b <png_process_IDAT_data+0x1ab>
cmp    $0xfffffffd,%eax
je     dfae <png_process_IDAT_data+0x1ce>
mov    %rbx,%rdi
lea    0x1f905(%rip),%rsi        # 2d826 <valid_parameters.6+0x2d0>
callq  5470 <png_error@plt>
mov    0x200(%rbx),%ecx
cmp    0x214(%rbx),%ecx
jbe    dfd1 <png_process_IDAT_data+0x1f1>
movzbl 0x265(%rbx),%ecx
cmp    $0x6,%cl
ja     dfd1 <png_process_IDAT_data+0x1f1>
mov    0x160(%rbx),%ecx
test   %ecx,%ecx
jne    de6f <png_process_IDAT_data+0x8f>
mov    %rax,%r15
mov    %rbx,%rdi
callq  e030 <png_push_process_row>
mov    %r15,%rax
jmpq   de6f <png_process_IDAT_data+0x8f>
mov    0x148(%rbx),%eax
test   %eax,%eax
jne    e00d <png_process_IDAT_data+0x22d>
mov    %r12,%rbx
mov    %r13,%r12
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
leaveq 
retq   
mov    %rbx,%rdi
lea    0x1f84f(%rip),%rsi        # 2d7e4 <valid_parameters.6+0x28e>
callq  5390 <png_warning@plt>
mov    %r12,%rbx
mov    %r13,%r12
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
leaveq 
retq   
mov    %rbx,%rdi
lea    0x1f84e(%rip),%rsi        # 2d806 <valid_parameters.6+0x2b0>
callq  5590 <png_benign_error@plt>
mov    %r12,%rbx
mov    %r13,%r12
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
leaveq 
retq   
lea    0x1f86a(%rip),%rsi        # 2d842 <valid_parameters.6+0x2ec>
mov    %rbx,%rdi
callq  5390 <png_warning@plt>
mov    0x130(%rbx),%eax
or     $0x8,%eax
mov    %eax,0x130(%rbx)
movl   $0x0,0x138(%rbx)
mov    %r12,%rbx
mov    %r13,%r12
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
leaveq 
retq   
mov    %rbx,%rdi
lea    0x1f849(%rip),%rsi        # 2d860 <valid_parameters.6+0x30a>
callq  5390 <png_warning@plt>
mov    %r12,%rbx
mov    %r13,%r12
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
leaveq 
retq   

000000000000e030 <png_push_process_row>:
push   %rbp
mov    %rsp,%rbp
sub    $0x50,%rsp
mov    %r15,-0x38(%rbp)
mov    0x210(%rdi),%edx
mov    %edx,-0x50(%rbp)
movzbl 0x267(%rdi),%eax
mov    %al,-0x40(%rbp)
movzbl 0x268(%rdi),%eax
mov    %al,-0x3f(%rbp)
movzbl 0x26b(%rdi),%eax
mov    %al,-0x3e(%rbp)
movzbl 0x26a(%rdi),%ecx
cmp    $0x7,%cl
ja     e080 <png_push_process_row+0x50>
mov    %rcx,%rax
imul   %rdx,%rax
add    $0x7,%rax
shr    $0x3,%rax
jmp    e08b <png_push_process_row+0x5b>
mov    %rcx,%rax
shr    $0x3,%rax
imul   %rdx,%rax
mov    %cl,-0x3d(%rbp)
mov    %rax,-0x48(%rbp)
lea    -0x50(%rbp),%rsi
mov    0x228(%rdi),%rax
movzbl (%rax),%r8d
test   %r8b,%r8b
jne    e12c <png_push_process_row+0xfc>
mov    %r14,%r15
mov    %r13,%r14
mov    %rdi,%r13
mov    0x220(%r13),%rdi
mov    0x228(%r13),%rsi
mov    -0x48(%rbp),%rdx
add    $0x1,%rdx
callq  54c0 <memcpy@plt>
mov    0x134(%r13),%eax
test   %eax,%eax
je     e0e5 <png_push_process_row+0xb5>
mov    %r13,%rdi
lea    -0x50(%rbp),%rsi
callq  16040 <png_do_read_transformations>
movzbl 0x26f(%r13),%ecx
test   %cl,%cl
je     e142 <png_push_process_row+0x112>
movzbl -0x3d(%rbp),%eax
cmp    %al,%cl
jne    e16c <png_push_process_row+0x13c>
movzbl 0x264(%r13),%eax
test   %al,%al
jne    e17b <png_push_process_row+0x14b>
mov    0x228(%r13),%rsi
add    $0x1,%rsi
mov    %r13,%rdi
callq  e750 <png_push_have_row>
mov    %r13,%rdi
callq  e7d0 <png_read_push_finish_row>
mov    %r14,%r13
mov    %r15,%r14
mov    -0x38(%rbp),%r15
leaveq 
retq   
cmp    $0x4,%r8b
jbe    e1e2 <png_push_process_row+0x1b2>
lea    0x1f742(%rip),%rsi        # 2d87f <valid_parameters.6+0x329>
callq  5470 <png_error@plt>
movzbl -0x3d(%rbp),%eax
mov    %al,0x26f(%r13)
movzbl 0x26e(%r13),%ecx
movzbl -0x3d(%rbp),%eax
cmp    %al,%cl
jae    e0f9 <png_push_process_row+0xc9>
mov    %r13,%rdi
lea    0x1f732(%rip),%rsi        # 2d899 <valid_parameters.6+0x343>
callq  5470 <png_error@plt>
mov    %r13,%rdi
lea    0x1f73c(%rip),%rsi        # 2d8b2 <valid_parameters.6+0x35c>
callq  5470 <png_error@plt>
mov    0x134(%r13),%ecx
mov    %rcx,%rax
and    $0x2,%eax
test   %eax,%eax
je     e105 <png_push_process_row+0xd5>
movzbl 0x265(%r13),%edx
cmp    $0x5,%dl
ja     e1b1 <png_push_process_row+0x181>
mov    0x228(%r13),%rsi
add    $0x1,%rsi
lea    -0x50(%rbp),%rdi
callq  1bb30 <png_do_read_interlace>
xor    %edx,%edx
movzbl 0x265(%r13),%eax
cmp    $0x5,%al
ja     e204 <png_push_process_row+0x1d4>
lea    0x1f49a(%rip),%rcx        # 2d660 <valid_parameters.6+0x10a>
movslq (%rcx,%rax,4),%rax
add    %rcx,%rax
jmpq   *%rax
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rdx,%r15
mov    %r15,%r14
jmpq   e2c5 <png_push_process_row+0x295>
lea    0x1(%rax),%rdx
mov    0x220(%rdi),%rcx
add    $0x1,%rcx
mov    %r14,%r15
mov    %r13,%r14
mov    %rdi,%r13
callq  1c060 <png_read_filter_row>
jmpq   e0b3 <png_push_process_row+0x83>
mov    0x228(%r13),%rsi
add    $0x1,%rsi
mov    %r13,%rdi
callq  e750 <png_push_have_row>
mov    %r13,%rdi
callq  e7d0 <png_read_push_finish_row>
movzbl 0x265(%r13),%eax
cmp    $0x6,%al
je     e2e3 <png_push_process_row+0x2b3>
mov    %r14,%r13
mov    %r15,%r14
mov    -0x38(%rbp),%r15
leaveq 
retq   
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rdx,%r15
mov    %r15,%r14
jmpq   e32c <png_push_process_row+0x2fc>
mov    %r14,-0x18(%rbp)
mov    %r15,-0x20(%rbp)
mov    %rdx,%r15
mov    %r15,%r14
jmpq   e379 <png_push_process_row+0x349>
mov    %r14,-0x18(%rbp)
mov    %r15,-0x20(%rbp)
mov    %rdx,%r15
mov    %r15,%r14
jmpq   e3b2 <png_push_process_row+0x382>
mov    %r14,-0x28(%rbp)
mov    %r15,-0x30(%rbp)
mov    %rdx,%r15
mov    %r15,%r14
jmpq   e3ff <png_push_process_row+0x3cf>
mov    %r14,-0x28(%rbp)
mov    %r15,-0x30(%rbp)
mov    %rdx,%r15
mov    %r15,%r14
jmpq   e438 <png_push_process_row+0x408>
movzbl 0x265(%r13),%eax
test   %al,%al
jne    e2cb <png_push_process_row+0x29b>
mov    0x228(%r13),%rsi
add    $0x1,%rsi
mov    %r13,%rdi
callq  e750 <png_push_have_row>
mov    %r13,%rdi
callq  e7d0 <png_read_push_finish_row>
add    $0x1,%r15d
cmp    $0x7,%r15d
jle    e29a <png_push_process_row+0x26a>
movzbl 0x265(%r13),%eax
cmp    $0x2,%al
jne    e45c <png_push_process_row+0x42c>
mov    %r14,%r15
jmpq   e4a7 <png_push_process_row+0x477>
mov    %r13,%rdi
xor    %esi,%esi
callq  e750 <png_push_have_row>
mov    %r13,%rdi
callq  e7d0 <png_read_push_finish_row>
mov    %r14,%r13
mov    %r15,%r14
mov    -0x38(%rbp),%r15
leaveq 
retq   
movzbl 0x265(%r13),%eax
cmp    $0x1,%al
jne    e332 <png_push_process_row+0x302>
mov    0x228(%r13),%rsi
add    $0x1,%rsi
mov    %r13,%rdi
callq  e750 <png_push_have_row>
mov    %r13,%rdi
callq  e7d0 <png_read_push_finish_row>
add    $0x1,%r15d
cmp    $0x7,%r15d
jle    e301 <png_push_process_row+0x2d1>
movzbl 0x265(%r13),%eax
cmp    $0x2,%al
jne    e4af <png_push_process_row+0x47f>
mov    %r14,%r15
jmpq   e4e4 <png_push_process_row+0x4b4>
movzbl 0x265(%r13),%eax
cmp    $0x2,%al
jne    e4f8 <png_push_process_row+0x4c8>
mov    0x228(%r13),%rsi
add    $0x1,%rsi
mov    %r13,%rdi
callq  e750 <png_push_have_row>
mov    %r13,%rdi
callq  e7d0 <png_read_push_finish_row>
add    $0x1,%r15d
cmp    $0x3,%r15d
jle    e34a <png_push_process_row+0x31a>
mov    %r14,%r15
jmpq   e520 <png_push_process_row+0x4f0>
movzbl 0x265(%r13),%eax
cmp    $0x3,%al
jne    e3b8 <png_push_process_row+0x388>
mov    0x228(%r13),%rsi
add    $0x1,%rsi
mov    %r13,%rdi
callq  e750 <png_push_have_row>
mov    %r13,%rdi
callq  e7d0 <png_read_push_finish_row>
add    $0x1,%r15d
cmp    $0x3,%r15d
jle    e387 <png_push_process_row+0x357>
movzbl 0x265(%r13),%eax
cmp    $0x4,%al
jne    e53e <png_push_process_row+0x50e>
mov    %r14,%r15
jmpq   e573 <png_push_process_row+0x543>
movzbl 0x265(%r13),%eax
cmp    $0x4,%al
jne    e587 <png_push_process_row+0x557>
mov    0x228(%r13),%rsi
add    $0x1,%rsi
mov    %r13,%rdi
callq  e750 <png_push_have_row>
mov    %r13,%rdi
callq  e7d0 <png_read_push_finish_row>
add    $0x1,%r15d
cmp    $0x1,%r15d
jle    e3d0 <png_push_process_row+0x3a0>
mov    %r14,%r15
jmpq   e5af <png_push_process_row+0x57f>
movzbl 0x265(%r13),%eax
cmp    $0x5,%al
jne    e43e <png_push_process_row+0x40e>
mov    0x228(%r13),%rsi
add    $0x1,%rsi
mov    %r13,%rdi
callq  e750 <png_push_have_row>
mov    %r13,%rdi
callq  e7d0 <png_read_push_finish_row>
add    $0x1,%r15d
cmp    $0x1,%r15d
jle    e40d <png_push_process_row+0x3dd>
movzbl 0x265(%r13),%eax
cmp    $0x6,%al
je     e5d3 <png_push_process_row+0x5a3>
mov    -0x30(%rbp),%r14
mov    -0x28(%rbp),%r13
mov    -0x38(%rbp),%r15
leaveq 
retq   
movzbl 0x265(%r13),%eax
cmp    $0x4,%al
jne    e5f4 <png_push_process_row+0x5c4>
mov    0x1fc(%r13),%eax
cmp    $0x4,%eax
ja     e5f4 <png_push_process_row+0x5c4>
mov    %r14,%r15
jmpq   e635 <png_push_process_row+0x605>
movzbl 0x265(%r13),%eax
cmp    $0x2,%al
jne    e45c <png_push_process_row+0x42c>
mov    %r13,%rdi
mov    %r14,%rsi
callq  e750 <png_push_have_row>
mov    %r13,%rdi
callq  e7d0 <png_read_push_finish_row>
add    $0x1,%r15d
cmp    $0x3,%r15d
jle    e484 <png_push_process_row+0x454>
jmp    e45c <png_push_process_row+0x42c>
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
mov    -0x38(%rbp),%r15
leaveq 
retq   
movzbl 0x265(%r13),%eax
cmp    $0x2,%al
jne    e63d <png_push_process_row+0x60d>
mov    %r13,%rdi
mov    %r14,%rsi
callq  e750 <png_push_have_row>
mov    %r13,%rdi
callq  e7d0 <png_read_push_finish_row>
add    $0x1,%r15d
cmp    $0x3,%r15d
jle    e4bd <png_push_process_row+0x48d>
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
mov    -0x38(%rbp),%r15
leaveq 
retq   
mov    %r14,%r15
jmp    e520 <png_push_process_row+0x4f0>
movzbl 0x265(%r13),%eax
cmp    $0x2,%al
jne    e526 <png_push_process_row+0x4f6>
mov    %r13,%rdi
mov    %r14,%rsi
callq  e750 <png_push_have_row>
mov    %r13,%rdi
callq  e7d0 <png_read_push_finish_row>
add    $0x1,%r15d
cmp    $0x3,%r15d
jle    e4fd <png_push_process_row+0x4cd>
movzbl 0x265(%r13),%eax
cmp    $0x4,%al
jne    e64b <png_push_process_row+0x61b>
mov    %r14,%r15
jmpq   e67c <png_push_process_row+0x64c>
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x38(%rbp),%r15
leaveq 
retq   
movzbl 0x265(%r13),%eax
cmp    $0x4,%al
jne    e690 <png_push_process_row+0x660>
mov    %r13,%rdi
mov    %r14,%rsi
callq  e750 <png_push_have_row>
mov    %r13,%rdi
callq  e7d0 <png_read_push_finish_row>
add    $0x1,%r15d
cmp    $0x1,%r15d
jle    e54c <png_push_process_row+0x51c>
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x38(%rbp),%r15
leaveq 
retq   
mov    %r14,%r15
jmp    e5af <png_push_process_row+0x57f>
movzbl 0x265(%r13),%eax
cmp    $0x4,%al
jne    e5b5 <png_push_process_row+0x585>
mov    %r13,%rdi
mov    %r14,%rsi
callq  e750 <png_push_have_row>
mov    %r13,%rdi
callq  e7d0 <png_read_push_finish_row>
add    $0x1,%r15d
cmp    $0x1,%r15d
jle    e58c <png_push_process_row+0x55c>
movzbl 0x265(%r13),%eax
cmp    $0x6,%al
je     e69e <png_push_process_row+0x66e>
mov    -0x30(%rbp),%r14
mov    -0x28(%rbp),%r13
mov    -0x38(%rbp),%r15
leaveq 
retq   
mov    %r14,%rsi
mov    %r13,%rdi
callq  e750 <png_push_have_row>
mov    %r13,%rdi
callq  e7d0 <png_read_push_finish_row>
mov    -0x30(%rbp),%r14
mov    -0x28(%rbp),%r13
mov    -0x38(%rbp),%r15
leaveq 
retq   
movzbl 0x265(%r13),%eax
cmp    $0x6,%al
je     e6bf <png_push_process_row+0x68f>
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
mov    -0x38(%rbp),%r15
leaveq 
retq   
movzbl 0x265(%r13),%eax
cmp    $0x4,%al
jne    e5f4 <png_push_process_row+0x5c4>
mov    %r13,%rdi
mov    %r14,%rsi
callq  e750 <png_push_have_row>
mov    %r13,%rdi
callq  e7d0 <png_read_push_finish_row>
add    $0x1,%r15d
cmp    $0x1,%r15d
jle    e612 <png_push_process_row+0x5e2>
jmp    e5f4 <png_push_process_row+0x5c4>
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
mov    -0x38(%rbp),%r15
leaveq 
retq   
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x38(%rbp),%r15
leaveq 
retq   
movzbl 0x265(%r13),%eax
cmp    $0x4,%al
jne    e6d9 <png_push_process_row+0x6a9>
mov    %r13,%rdi
mov    %r14,%rsi
callq  e750 <png_push_have_row>
mov    %r13,%rdi
callq  e7d0 <png_read_push_finish_row>
add    $0x1,%r15d
cmp    $0x1,%r15d
jle    e659 <png_push_process_row+0x629>
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x38(%rbp),%r15
leaveq 
retq   
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x38(%rbp),%r15
leaveq 
retq   
mov    %r14,%rsi
mov    %r13,%rdi
callq  e750 <png_push_have_row>
mov    %r13,%rdi
callq  e7d0 <png_read_push_finish_row>
mov    -0x30(%rbp),%r14
mov    -0x28(%rbp),%r13
mov    -0x38(%rbp),%r15
leaveq 
retq   
mov    0x1fc(%r13),%eax
cmp    $0x4,%eax
jbe    e6e7 <png_push_process_row+0x6b7>
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
mov    -0x38(%rbp),%r15
leaveq 
retq   
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x38(%rbp),%r15
leaveq 
retq   
mov    %r14,%rsi
mov    %r13,%rdi
callq  e750 <png_push_have_row>
mov    %r13,%rdi
callq  e7d0 <png_read_push_finish_row>
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
mov    -0x38(%rbp),%r15
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

000000000000e710 <png_push_have_info>:
push   %rbp
mov    %rsp,%rbp
mov    0x310(%rdi),%rax
test   %rax,%rax
jne    e722 <png_push_have_info+0x12>
leaveq 
retq   
callq  *%rax
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)

000000000000e730 <png_push_have_end>:
push   %rbp
mov    %rsp,%rbp
mov    0x320(%rdi),%rax
test   %rax,%rax
jne    e742 <png_push_have_end+0x12>
leaveq 
retq   
callq  *%rax
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)

000000000000e750 <png_push_have_row>:
push   %rbp
mov    %rsp,%rbp
mov    0x318(%rdi),%rax
test   %rax,%rax
jne    e762 <png_push_have_row+0x12>
leaveq 
retq   
mov    0x214(%rdi),%edx
movzbl 0x265(%rdi),%ecx
callq  *%rax
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

000000000000e780 <png_process_some_data>:
push   %rbp
mov    %rsp,%rbp
test   %rdi,%rdi
jne    e78b <png_process_some_data+0xb>
leaveq 
retq   
movslq 0x370(%rdi),%rax
test   %eax,%eax
jle    e7a7 <png_process_some_data+0x27>
cmp    $0x1,%eax
je     e7b8 <png_process_some_data+0x38>
cmp    $0x2,%eax
jne    e7ab <png_process_some_data+0x2b>
callq  db20 <png_push_read_IDAT>
leaveq 
retq   
test   %eax,%eax
je     e7bf <png_process_some_data+0x3f>
movq   $0x0,0x360(%rdi)
leaveq 
retq   
callq  cd90 <png_push_read_chunk>
leaveq 
retq   
callq  d840 <png_push_read_sig>
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)

000000000000e7d0 <png_read_push_finish_row>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    0x214(%rdi),%eax
add    $0x1,%eax
mov    %eax,0x214(%rdi)
mov    0x200(%rdi),%ecx
cmp    %eax,%ecx
jbe    e7f3 <png_read_push_finish_row+0x23>
leaveq 
retq   
movzbl 0x264(%rdi),%eax
test   %al,%al
jne    e800 <png_read_push_finish_row+0x30>
leaveq 
retq   
movl   $0x0,0x214(%rdi)
mov    0x220(%rdi),%rax
xor    %esi,%esi
mov    0x208(%rdi),%rdx
add    $0x1,%rdx
mov    %r15,-0x8(%rbp)
mov    %rdi,%r15
mov    %rax,%rdi
callq  5350 <memset@plt>
lea    0x1f0b5(%rip),%rcx        # 2d8e9 <png_pass_inc.22>
lea    0x1f0a7(%rip),%rdi        # 2d8e2 <png_pass_start.21>
lea    0x1f0b5(%rip),%rsi        # 2d8f7 <png_pass_yinc.24>
lea    0x1f0a7(%rip),%r8        # 2d8f0 <png_pass_ystart.23>
jmp    e8bb <png_read_push_finish_row+0xeb>
movzbl (%rdx,%rcx,1),%r9d
mov    0x1f8(%r15),%eax
lea    -0x1(%r9,%rax,1),%eax
movzbl (%rdx,%rdi,1),%edx
sub    %edx,%eax
xor    %edx,%edx
div    %r9d
mov    %eax,0x210(%r15)
mov    0x134(%r15),%eax
and    $0x2,%eax
test   %eax,%eax
jne    e903 <png_read_push_finish_row+0x133>
movzbl 0x265(%r15),%edx
movzbl (%rdx,%rsi,1),%r9d
mov    0x1fc(%r15),%eax
lea    -0x1(%r9,%rax,1),%eax
movzbl (%rdx,%r8,1),%edx
sub    %edx,%eax
xor    %edx,%edx
div    %r9d
mov    %eax,0x200(%r15)
mov    0x210(%r15),%edx
test   %edx,%edx
je     e8bb <png_read_push_finish_row+0xeb>
test   %eax,%eax
jne    e909 <png_read_push_finish_row+0x139>
movzbl 0x265(%r15),%edx
lea    0x1(%rdx),%eax
mov    %al,0x265(%r15)
test   %dl,%dl
je     e90f <png_read_push_finish_row+0x13f>
movzbl 0x265(%r15),%eax
cmp    $0x3,%al
jne    e8e9 <png_read_push_finish_row+0x119>
mov    0x1f8(%r15),%eax
cmp    $0x2,%eax
jbe    e91b <png_read_push_finish_row+0x14b>
movzbl 0x265(%r15),%eax
cmp    $0x5,%al
jne    e92d <png_read_push_finish_row+0x15d>
mov    0x1f8(%r15),%eax
cmp    $0x1,%eax
jbe    e91b <png_read_push_finish_row+0x14b>
jmp    e92d <png_read_push_finish_row+0x15d>
mov    -0x8(%rbp),%r15
leaveq 
retq   
mov    -0x8(%rbp),%r15
leaveq 
retq   
mov    0x1f8(%r15),%eax
cmp    $0x4,%eax
ja     e8d1 <png_read_push_finish_row+0x101>
movzbl 0x265(%r15),%eax
add    $0x1,%eax
mov    %al,0x265(%r15)
movzbl 0x265(%r15),%eax
cmp    $0x7,%al
jbe    e945 <png_read_push_finish_row+0x175>
add    $0xff,%eax
mov    %al,0x265(%r15)
movzbl 0x265(%r15),%edx
cmp    $0x6,%dl
jbe    e84b <png_read_push_finish_row+0x7b>
mov    -0x8(%rbp),%r15
leaveq 
retq   
nopl   0x0(%rax)

000000000000e960 <png_create_read_struct>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
movq   $0x0,(%rsp)
xor    %r8d,%r8d
mov    %r8,%r9
callq  54a0 <png_create_read_struct_2@plt>
leaveq 
retq   
nopl   (%rax)

000000000000e980 <png_create_read_struct_2>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    0x10(%rbp),%rax
mov    %rax,(%rsp)
callq  6b90 <png_create_png_struct>
test   %rax,%rax
jne    e99c <png_create_read_struct_2+0x1c>
leaveq 
retq   
movl   $0x8000,0x12c(%rax)
movl   $0x2000,0x468(%rax)
mov    0x130(%rax),%ecx
or     $0x300000,%ecx
mov    %ecx,0x130(%rax)
xor    %esi,%esi
mov    %rsi,%rdx
mov    %rax,%rdi
mov    %r15,-0x8(%rbp)
mov    %rax,%r15
callq  5560 <png_set_read_fn@plt>
mov    %r15,%rax
mov    -0x8(%rbp),%r15
leaveq 
retq   
nop

000000000000e9e0 <png_read_info>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
test   %rdi,%rdi
jne    e9ef <png_read_info+0xf>
leaveq 
retq   
test   %rsi,%rsi
jne    e9f6 <png_read_info+0x16>
leaveq 
retq   
mov    %rdi,%rax
mov    %rsi,%rcx
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rbx,%r14
mov    %rdi,%rbx
mov    %rax,%rdi
mov    %r12,%r15
mov    %rsi,%r12
mov    %rcx,%rsi
callq  1b070 <png_read_sig>
lea    0x1ef6c(%rip),%rax        # 2d98e <png_pass_yinc.24+0x97>
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %rax,%r14
jmp    ea41 <png_read_info+0x61>
mov    %rax,%rdx
mov    %rbx,%rdi
mov    %r12,%rsi
callq  1caf0 <png_handle_IHDR>
mov    %rbx,%rdi
callq  1b170 <png_read_chunk_header>
mov    0x218(%rbx),%r13d
cmp    $0x49444154,%r13d
je     ea77 <png_read_info+0x97>
mov    0x12c(%rbx),%ecx
mov    %rcx,%rdx
and    $0x4,%edx
test   %edx,%edx
je     ead7 <png_read_info+0xf7>
or     $0x2008,%ecx
mov    %ecx,0x12c(%rbx)
jmp    ead7 <png_read_info+0xf7>
mov    0x12c(%rbx),%ecx
mov    %rcx,%rdx
and    $0x1,%edx
test   %edx,%edx
jne    ea96 <png_read_info+0xb6>
mov    %rbx,%rdi
lea    0x1eecb(%rip),%rsi        # 2d95c <png_pass_yinc.24+0x65>
callq  5060 <png_chunk_error@plt>
movzbl 0x267(%rbx),%edx
cmp    $0x3,%dl
jne    eab0 <png_read_info+0xd0>
mov    %rcx,%rdx
and    $0x2,%edx
test   %edx,%edx
je     ec20 <png_read_info+0x240>
and    $0x8,%ecx
test   %ecx,%ecx
je     eac8 <png_read_info+0xe8>
mov    %rax,%r15
mov    %rbx,%rdi
mov    %r14,%rsi
callq  5230 <png_chunk_benign_error@plt>
mov    %r15,%rax
mov    0x12c(%rbx),%ecx
or     $0x4,%ecx
mov    %ecx,0x12c(%rbx)
cmp    $0x49484452,%r13d
je     ea33 <png_read_info+0x53>
cmp    $0x49454e44,%r13d
je     ec2f <png_read_info+0x24f>
mov    %rax,%r15
mov    %rbx,%rdi
mov    %r13,%rsi
callq  6e90 <png_chunk_unknown_handling>
test   %eax,%eax
jne    ec42 <png_read_info+0x262>
cmp    $0x504c5445,%r13d
je     ec8d <png_read_info+0x2ad>
cmp    $0x49444154,%r13d
je     eca0 <png_read_info+0x2c0>
cmp    $0x624b4744,%r13d
je     ecbd <png_read_info+0x2dd>
cmp    $0x6348524d,%r13d
je     ecd0 <png_read_info+0x2f0>
cmp    $0x65584966,%r13d
je     ece3 <png_read_info+0x303>
cmp    $0x67414d41,%r13d
je     ecf6 <png_read_info+0x316>
cmp    $0x68495354,%r13d
je     ed09 <png_read_info+0x329>
cmp    $0x6f464673,%r13d
je     ed1c <png_read_info+0x33c>
cmp    $0x7043414c,%r13d
je     ed2f <png_read_info+0x34f>
cmp    $0x7343414c,%r13d
je     ed42 <png_read_info+0x362>
cmp    $0x70485973,%r13d
je     ed55 <png_read_info+0x375>
cmp    $0x73424954,%r13d
je     ed68 <png_read_info+0x388>
cmp    $0x73524742,%r13d
je     ed7b <png_read_info+0x39b>
cmp    $0x69434350,%r13d
je     ed8e <png_read_info+0x3ae>
cmp    $0x73504c54,%r13d
je     eda1 <png_read_info+0x3c1>
cmp    $0x74455874,%r13d
je     edb4 <png_read_info+0x3d4>
cmp    $0x74494d45,%r13d
je     edc7 <png_read_info+0x3e7>
cmp    $0x74524e53,%r13d
je     edda <png_read_info+0x3fa>
cmp    $0x7a545874,%r13d
je     eded <png_read_info+0x40d>
cmp    $0x69545874,%r13d
je     ee00 <png_read_info+0x420>
mov    %r15,%rdx
mov    %rbx,%rdi
mov    %r12,%rsi
xor    %ecx,%ecx
callq  1fe10 <png_handle_unknown>
jmpq   ea41 <png_read_info+0x61>
mov    %rbx,%rdi
lea    0x1ed4b(%rip),%rsi        # 2d975 <png_pass_yinc.24+0x7e>
callq  5060 <png_chunk_error@plt>
mov    %rax,%rdx
mov    %rbx,%rdi
mov    %r12,%rsi
callq  1cf60 <png_handle_IEND>
jmpq   ea41 <png_read_info+0x61>
mov    %rax,%rcx
mov    %r15,%rdx
mov    %rbx,%rdi
mov    %r12,%rsi
callq  1fe10 <png_handle_unknown>
cmp    $0x504c5445,%r13d
je     ee13 <png_read_info+0x433>
cmp    $0x49444154,%r13d
jne    ea41 <png_read_info+0x61>
movl   $0x0,0x248(%rbx)
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
leaveq 
retq   
mov    %r15,%rdx
mov    %rbx,%rdi
mov    %r12,%rsi
callq  1cc80 <png_handle_PLTE>
jmpq   ea41 <png_read_info+0x61>
mov    %r15d,0x248(%rbx)
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
leaveq 
retq   
mov    %r15,%rdx
mov    %rbx,%rdi
mov    %r12,%rsi
callq  1cfe0 <png_handle_bKGD>
jmpq   ea41 <png_read_info+0x61>
mov    %r15,%rdx
mov    %rbx,%rdi
mov    %r12,%rsi
callq  1d240 <png_handle_cHRM>
jmpq   ea41 <png_read_info+0x61>
mov    %r15,%rdx
mov    %rbx,%rdi
mov    %r12,%rsi
callq  1d470 <png_handle_eXIf>
jmpq   ea41 <png_read_info+0x61>
mov    %r15,%rdx
mov    %rbx,%rdi
mov    %r12,%rsi
callq  1d6a0 <png_handle_gAMA>
jmpq   ea41 <png_read_info+0x61>
mov    %r15,%rdx
mov    %rbx,%rdi
mov    %r12,%rsi
callq  1d790 <png_handle_hIST>
jmpq   ea41 <png_read_info+0x61>
mov    %r15,%rdx
mov    %rbx,%rdi
mov    %r12,%rsi
callq  1e420 <png_handle_oFFs>
jmpq   ea41 <png_read_info+0x61>
mov    %r15,%rdx
mov    %rbx,%rdi
mov    %r12,%rsi
callq  1e5e0 <png_handle_pCAL>
jmpq   ea41 <png_read_info+0x61>
mov    %r15,%rdx
mov    %rbx,%rdi
mov    %r12,%rsi
callq  1ed10 <png_handle_sCAL>
jmpq   ea41 <png_read_info+0x61>
mov    %r15,%rdx
mov    %rbx,%rdi
mov    %r12,%rsi
callq  1e990 <png_handle_pHYs>
jmpq   ea41 <png_read_info+0x61>
mov    %r15,%rdx
mov    %rbx,%rdi
mov    %r12,%rsi
callq  1eaf0 <png_handle_sBIT>
jmpq   ea41 <png_read_info+0x61>
mov    %r15,%rdx
mov    %rbx,%rdi
mov    %r12,%rsi
callq  1f330 <png_handle_sRGB>
jmpq   ea41 <png_read_info+0x61>
mov    %r15,%rdx
mov    %rbx,%rdi
mov    %r12,%rsi
callq  1d930 <png_handle_iCCP>
jmpq   ea41 <png_read_info+0x61>
mov    %r15,%rdx
mov    %rbx,%rdi
mov    %r12,%rsi
callq  1f020 <png_handle_sPLT>
jmpq   ea41 <png_read_info+0x61>
mov    %r15,%rdx
mov    %rbx,%rdi
mov    %r12,%rsi
callq  1f470 <png_handle_tEXt>
jmpq   ea41 <png_read_info+0x61>
mov    %r15,%rdx
mov    %rbx,%rdi
mov    %r12,%rsi
callq  1f610 <png_handle_tIME>
jmpq   ea41 <png_read_info+0x61>
mov    %r15,%rdx
mov    %rbx,%rdi
mov    %r12,%rsi
callq  1f740 <png_handle_tRNS>
jmpq   ea41 <png_read_info+0x61>
mov    %r15,%rdx
mov    %rbx,%rdi
mov    %r12,%rsi
callq  1fa50 <png_handle_zTXt>
jmpq   ea41 <png_read_info+0x61>
mov    %r15,%rdx
mov    %rbx,%rdi
mov    %r12,%rsi
callq  1e090 <png_handle_iTXt>
jmpq   ea41 <png_read_info+0x61>
mov    0x12c(%rbx),%eax
or     $0x2,%eax
mov    %eax,0x12c(%rbx)
jmpq   ea41 <png_read_info+0x61>
nopw   0x0(%rax,%rax,1)

000000000000ee30 <png_start_read_image>:
push   %rbp
mov    %rsp,%rbp
test   %rdi,%rdi
jne    ee3b <png_start_read_image+0xb>
leaveq 
retq   
mov    0x130(%rdi),%eax
and    $0x40,%eax
test   %eax,%eax
je     ee56 <png_start_read_image+0x26>
lea    0x1eb54(%rip),%rsi        # 2d9a3 <png_pass_yinc.24+0xac>
callq  b120 <png_app_error>
leaveq 
retq   
callq  1c5d0 <png_read_start_row>
leaveq 
retq   
nopl   (%rax)

000000000000ee60 <png_read_update_info>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
test   %rdi,%rdi
jne    ee6f <png_read_update_info+0xf>
leaveq 
retq   
mov    0x130(%rdi),%eax
and    $0x40,%eax
test   %eax,%eax
je     ee8a <png_read_update_info+0x2a>
lea    0x1eb5a(%rip),%rsi        # 2d9dd <png_pass_yinc.24+0xe6>
callq  b120 <png_app_error>
leaveq 
retq   
mov    %rdi,%rax
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rdi,%r14
mov    %rax,%rdi
mov    %rsi,%r15
callq  1c5d0 <png_read_start_row>
mov    %r15,%rsi
mov    %r14,%rdi
callq  15d20 <png_read_transform_info>
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

000000000000eec0 <png_read_rows>:
push   %rbp
mov    %rsp,%rbp
sub    $0x50,%rsp
test   %rdi,%rdi
jne    eecf <png_read_rows+0xf>
leaveq 
retq   
xor    %r8d,%r8d
test   %rsi,%rsi
jne    ef04 <png_read_rows+0x44>
mov    %r8,%rax
test   %rax,%rax
je     ef35 <png_read_rows+0x75>
mov    %rbx,-0x28(%rbp)
mov    %r12,-0x30(%rbp)
mov    %r13,-0x38(%rbp)
mov    %r14,-0x40(%rbp)
mov    %r15,-0x48(%rbp)
mov    %rdi,%r12
mov    %rcx,%r13
mov    %rsi,%r14
mov    %r8,%r15
mov    %r15,%rbx
jmp    ef7c <png_read_rows+0xbc>
test   %rdx,%rdx
je     ef97 <png_read_rows+0xd7>
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x48(%rbp)
mov    %rdx,%rbx
mov    %r8,%r12
mov    %rdi,%r13
mov    %rcx,%r14
mov    %rsi,%r15
jmpq   efbb <png_read_rows+0xfb>
test   %rdx,%rdx
je     efd6 <png_read_rows+0x116>
mov    %rbx,-0x28(%rbp)
mov    %r12,-0x30(%rbp)
mov    %r13,-0x38(%rbp)
mov    %r14,-0x40(%rbp)
mov    %r15,-0x48(%rbp)
mov    %rdx,%rbx
mov    %rdi,%r13
mov    %rcx,%r14
mov    %r8,%r15
mov    %r15,%r12
jmpq   efee <png_read_rows+0x12e>
mov    (%r14),%rsi
mov    %r12,%rdi
mov    %rbx,%rdx
callq  5600 <png_read_row@plt>
add    $0x1,%r15d
add    $0x8,%r14
cmp    %r15d,%r13d
ja     ef66 <png_read_rows+0xa6>
mov    -0x48(%rbp),%r15
mov    -0x40(%rbp),%r14
mov    -0x38(%rbp),%r13
mov    -0x30(%rbp),%r12
mov    -0x28(%rbp),%rbx
leaveq 
retq   
mov    $0x1,%eax
jmpq   eeda <png_read_rows+0x1a>
mov    (%r15),%rsi
mov    (%rbx),%rdx
mov    %r13,%rdi
callq  5600 <png_read_row@plt>
add    $0x1,%r12d
add    $0x8,%r15
add    $0x8,%rbx
cmp    %r14d,%r12d
jb     efa1 <png_read_rows+0xe1>
mov    -0x48(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
leaveq 
retq   
mov    (%rbx),%rdx
mov    %r13,%rdi
mov    %r12,%rsi
callq  5600 <png_read_row@plt>
add    $0x1,%r15d
add    $0x8,%rbx
cmp    %r15d,%r14d
ja     efd8 <png_read_rows+0x118>
mov    -0x48(%rbp),%r15
mov    -0x40(%rbp),%r14
mov    -0x38(%rbp),%r13
mov    -0x30(%rbp),%r12
mov    -0x28(%rbp),%rbx
leaveq 
retq   
nopl   0x0(%rax)

000000000000f010 <png_read_row>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
test   %rdi,%rdi
jne    f01f <png_read_row+0xf>
leaveq 
retq   
mov    0x130(%rdi),%eax
and    $0x40,%eax
test   %eax,%eax
je     f040 <png_read_row+0x30>
mov    %r15,%rcx
mov    %rsi,%r15
mov    %r13,%r8
mov    %rdi,%r13
mov    %r14,%r9
mov    %rdx,%r14
jmp    f06f <png_read_row+0x5f>
mov    %rdi,%rax
mov    %r15,-0x8(%rbp)
mov    %rdx,-0x10(%rbp)
mov    %rsi,-0x18(%rbp)
mov    %r13,%r15
mov    %rdi,%r13
mov    %rax,%rdi
callq  1c5d0 <png_read_start_row>
mov    %r15,%r8
mov    %r14,%r9
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%rcx
mov    0x210(%r13),%esi
mov    %esi,-0x30(%rbp)
movzbl 0x267(%r13),%eax
mov    %al,-0x20(%rbp)
movzbl 0x268(%r13),%eax
mov    %al,-0x1f(%rbp)
movzbl 0x26b(%r13),%eax
mov    %al,-0x1e(%rbp)
movzbl 0x26a(%r13),%edx
cmp    $0x7,%dl
ja     f0b8 <png_read_row+0xa8>
mov    %rdx,%rax
imul   %rsi,%rax
add    $0x7,%rax
shr    $0x3,%rax
jmp    f0c3 <png_read_row+0xb3>
mov    %rdx,%rax
shr    $0x3,%rax
imul   %rsi,%rax
mov    %dl,-0x1d(%rbp)
mov    %rax,-0x28(%rbp)
mov    $0x1,%edx
movzbl 0x264(%r13),%eax
test   %al,%al
jne    f1c1 <png_read_row+0x1b1>
mov    0x12c(%r13),%eax
and    $0x4,%eax
test   %eax,%eax
je     f248 <png_read_row+0x238>
mov    0x228(%r13),%rax
movb   $0xff,(%rax)
mov    0x228(%r13),%rsi
mov    -0x28(%rbp),%rdx
add    $0x1,%rdx
mov    %r13,%rdi
mov    %rcx,-0x18(%rbp)
mov    %r8,-0x8(%rbp)
mov    %r9,-0x10(%rbp)
callq  1c100 <png_read_IDAT_data>
lea    -0x30(%rbp),%rsi
mov    0x228(%r13),%rax
movzbl (%rax),%r8d
test   %r8b,%r8b
jne    f257 <png_read_row+0x247>
mov    0x220(%r13),%rdi
mov    0x228(%r13),%rsi
mov    -0x28(%rbp),%rdx
add    $0x1,%rdx
callq  54c0 <memcpy@plt>
mov    0x3d8(%r13),%eax
and    $0x4,%eax
test   %eax,%eax
je     f17f <png_read_row+0x16f>
movzbl 0x3dc(%r13),%eax
cmp    $0x40,%al
jne    f17f <png_read_row+0x16f>
mov    0x228(%r13),%rsi
add    $0x1,%rsi
lea    -0x30(%rbp),%rdi
callq  102f0 <png_do_read_intrapixel>
mov    0x134(%r13),%eax
test   %eax,%eax
je     f196 <png_read_row+0x186>
mov    %r13,%rdi
lea    -0x30(%rbp),%rsi
callq  16040 <png_do_read_transformations>
movzbl 0x26f(%r13),%ecx
test   %cl,%cl
je     f270 <png_read_row+0x260>
movzbl -0x1d(%rbp),%eax
cmp    %al,%cl
je     f29a <png_read_row+0x28a>
mov    %r13,%rdi
lea    0x1e8ae(%rip),%rsi        # 2da6a <png_pass_yinc.24+0x173>
callq  5470 <png_error@plt>
mov    0x134(%r13),%eax
and    $0x2,%eax
test   %eax,%eax
je     f0df <png_read_row+0xcf>
movzbl 0x265(%r13),%eax
cmp    $0x5,%al
ja     f310 <png_read_row+0x300>
lea    0x1e716(%rip),%rsi        # 2d900 <png_pass_yinc.24+0x9>
movslq (%rsi,%rax,4),%rax
add    %rsi,%rax
jmpq   *%rax
mov    0x214(%r13),%eax
and    $0x1,%eax
test   %eax,%eax
jne    f211 <png_read_row+0x201>
mov    0x1f8(%r13),%eax
cmp    $0x1,%eax
ja     f0df <png_read_row+0xcf>
test   %r14,%r14
je     f235 <png_read_row+0x225>
mov    %r13,%rdi
mov    %rcx,-0x18(%rbp)
mov    %r14,%rsi
mov    %r8,%r14
mov    %r9,%r15
callq  1b440 <png_combine_row>
mov    %r14,%r8
mov    %r15,%r9
mov    -0x18(%rbp),%rcx
mov    %r13,%rdi
mov    %r8,%r13
mov    %r9,%r14
mov    %rcx,%r15
callq  1c4b0 <png_read_finish_row>
leaveq 
retq   
mov    %r13,%rdi
lea    0x1e7c5(%rip),%rsi        # 2da17 <png_pass_yinc.24+0x120>
callq  5470 <png_error@plt>
cmp    $0x4,%r8b
jbe    f4d0 <png_read_row+0x4c0>
mov    %r13,%rdi
lea    0x1e7cd(%rip),%rsi        # 2da38 <png_pass_yinc.24+0x141>
callq  5470 <png_error@plt>
movzbl -0x1d(%rbp),%eax
mov    %al,0x26f(%r13)
movzbl 0x26e(%r13),%ecx
movzbl -0x1d(%rbp),%eax
cmp    %al,%cl
jae    f29a <png_read_row+0x28a>
mov    %r13,%rdi
lea    0x1e7bd(%rip),%rsi        # 2da52 <png_pass_yinc.24+0x15b>
callq  5470 <png_error@plt>
movzbl 0x264(%r13),%eax
test   %al,%al
je     f4ec <png_read_row+0x4dc>
mov    0x134(%r13),%ecx
mov    %rcx,%rax
and    $0x2,%eax
test   %eax,%eax
je     f4ec <png_read_row+0x4dc>
movzbl 0x265(%r13),%edx
cmp    $0x5,%dl
ja     f2e0 <png_read_row+0x2d0>
mov    0x228(%r13),%rsi
add    $0x1,%rsi
lea    -0x30(%rbp),%rdi
callq  1bb30 <png_do_read_interlace>
test   %r14,%r14
je     f2f5 <png_read_row+0x2e5>
mov    %r14,%rsi
mov    %r13,%rdi
mov    $0x1,%edx
callq  1b440 <png_combine_row>
test   %r15,%r15
je     f519 <png_read_row+0x509>
mov    %r15,%rsi
xor    %edx,%edx
mov    %r13,%rdi
callq  1b440 <png_combine_row>
jmpq   f519 <png_read_row+0x509>
mov    0x214(%r13),%eax
and    $0x1,%eax
test   %eax,%eax
jne    f0df <png_read_row+0xcf>
mov    %r13,%rdi
mov    %r8,%r13
mov    %r9,%r14
mov    %rcx,%r15
callq  1c4b0 <png_read_finish_row>
leaveq 
retq   
mov    0x214(%r13),%eax
and    $0x7,%eax
test   %eax,%eax
je     f0df <png_read_row+0xcf>
test   %r14,%r14
je     f36b <png_read_row+0x35b>
mov    %r13,%rdi
mov    %rcx,-0x18(%rbp)
mov    %r14,%rsi
mov    %r9,%r14
mov    %r8,%r15
callq  1b440 <png_combine_row>
mov    %r15,%r8
mov    %r14,%r9
mov    -0x18(%rbp),%rcx
mov    %r13,%rdi
mov    %r8,%r13
mov    %r9,%r14
mov    %rcx,%r15
callq  1c4b0 <png_read_finish_row>
leaveq 
retq   
mov    0x214(%r13),%eax
and    $0x7,%eax
test   %eax,%eax
jne    f39c <png_read_row+0x38c>
mov    0x1f8(%r13),%eax
cmp    $0x4,%eax
ja     f0df <png_read_row+0xcf>
test   %r14,%r14
je     f3c0 <png_read_row+0x3b0>
mov    %r13,%rdi
mov    %rcx,-0x18(%rbp)
mov    %r14,%rsi
mov    %r9,%r14
mov    %r8,%r15
callq  1b440 <png_combine_row>
mov    %r15,%r8
mov    %r14,%r9
mov    -0x18(%rbp),%rcx
mov    %r13,%rdi
mov    %r8,%r13
mov    %r9,%r14
mov    %rcx,%r15
callq  1c4b0 <png_read_finish_row>
leaveq 
retq   
mov    0x214(%r13),%eax
mov    %rax,%rsi
and    $0x7,%esi
cmp    $0x4,%esi
je     f0df <png_read_row+0xcf>
test   %r14,%r14
je     f414 <png_read_row+0x404>
and    $0x4,%eax
test   %eax,%eax
je     f414 <png_read_row+0x404>
mov    %r13,%rdi
mov    %rcx,-0x18(%rbp)
mov    %r14,%rsi
mov    %r8,%r14
mov    %r9,%r15
callq  1b440 <png_combine_row>
mov    %r14,%r8
mov    %r15,%r9
mov    -0x18(%rbp),%rcx
mov    %r13,%rdi
mov    %r8,%r13
mov    %r9,%r14
mov    %rcx,%r15
callq  1c4b0 <png_read_finish_row>
leaveq 
retq   
mov    0x214(%r13),%eax
and    $0x3,%eax
test   %eax,%eax
jne    f445 <png_read_row+0x435>
mov    0x1f8(%r13),%eax
cmp    $0x2,%eax
ja     f0df <png_read_row+0xcf>
test   %r14,%r14
je     f469 <png_read_row+0x459>
mov    %r13,%rdi
mov    %rcx,-0x18(%rbp)
mov    %r14,%rsi
mov    %r9,%r14
mov    %r8,%r15
callq  1b440 <png_combine_row>
mov    %r15,%r8
mov    %r14,%r9
mov    -0x18(%rbp),%rcx
mov    %r13,%rdi
mov    %r8,%r13
mov    %r9,%r14
mov    %rcx,%r15
callq  1c4b0 <png_read_finish_row>
leaveq 
retq   
mov    0x214(%r13),%eax
mov    %rax,%rsi
and    $0x3,%esi
cmp    $0x2,%esi
je     f0df <png_read_row+0xcf>
test   %r14,%r14
je     f4bd <png_read_row+0x4ad>
and    $0x2,%eax
test   %eax,%eax
je     f4bd <png_read_row+0x4ad>
mov    %r13,%rdi
mov    %rcx,-0x18(%rbp)
mov    %r14,%rsi
mov    %r8,%r14
mov    %r9,%r15
callq  1b440 <png_combine_row>
mov    %r14,%r8
mov    %r15,%r9
mov    -0x18(%rbp),%rcx
mov    %r13,%rdi
mov    %r8,%r13
mov    %r9,%r14
mov    %rcx,%r15
callq  1c4b0 <png_read_finish_row>
leaveq 
retq   
lea    0x1(%rax),%rdx
mov    0x220(%r13),%rcx
add    $0x1,%rcx
mov    %r13,%rdi
callq  1c060 <png_read_filter_row>
jmpq   f136 <png_read_row+0x126>
mov    $0xffffffffffffffff,%rdx
test   %r15,%r15
je     f509 <png_read_row+0x4f9>
mov    %r15,%rsi
mov    %r13,%rdi
mov    %rdx,%r15
callq  1b440 <png_combine_row>
mov    %r15,%rdx
test   %r14,%r14
je     f519 <png_read_row+0x509>
mov    %r14,%rsi
mov    %r13,%rdi
callq  1b440 <png_combine_row>
mov    %r13,%rdi
callq  1c4b0 <png_read_finish_row>
mov    0x300(%r13),%rax
test   %rax,%rax
jne    f53b <png_read_row+0x52b>
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
mov    -0x18(%rbp),%r15
leaveq 
retq   
mov    %r13,%rdi
mov    0x214(%rdi),%esi
movzbl 0x265(%rdi),%edx
callq  *%rax
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
mov    -0x18(%rbp),%r15
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

000000000000f560 <png_read_image>:
push   %rbp
mov    %rsp,%rbp
sub    $0x40,%rsp
mov    %rsi,-0x8(%rbp)
test   %rdi,%rdi
jne    f573 <png_read_image+0x13>
leaveq 
retq   
mov    0x130(%rdi),%eax
and    $0x40,%eax
test   %eax,%eax
je     f5bc <png_read_image+0x5c>
movzbl 0x264(%rdi),%eax
test   %al,%al
jne    f617 <png_read_image+0xb7>
mov    %r14,%rax
mov    %r12,%r14
mov    %rdi,%r12
mov    %r15,%rcx
mov    %r13,%r15
mov    %rbx,%r13
mov    %rsi,%rbx
mov    %r12,%rdi
mov    %rax,-0x28(%rbp)
mov    %rcx,-0x30(%rbp)
callq  53f0 <png_set_interlace_handling@plt>
mov    %r15,%rcx
mov    %r14,%rdx
jmp    f5f7 <png_read_image+0x97>
mov    %rdi,%rax
mov    %r14,-0x28(%rbp)
mov    %r15,-0x30(%rbp)
mov    %r12,%r14
mov    %rdi,%r12
mov    %rax,%rdi
mov    %r13,%r15
mov    %rbx,%r13
mov    %rsi,%rbx
callq  53f0 <png_set_interlace_handling@plt>
mov    %r12,%rdi
mov    %r15,-0x40(%rbp)
mov    %rax,%r15
callq  5370 <png_start_read_image@plt>
mov    %r15,%rax
mov    %r14,%rdx
mov    -0x40(%rbp),%rcx
mov    %rax,-0x38(%rbp)
mov    0x1fc(%r12),%r15d
xor    %r14d,%r14d
mov    %rcx,-0x20(%rbp)
mov    %r13,-0x10(%rbp)
mov    %rdx,-0x18(%rbp)
mov    %r14,%rcx
jmp    f668 <png_read_image+0x108>
mov    0x134(%rdi),%eax
and    $0x2,%eax
test   %eax,%eax
je     f682 <png_read_image+0x122>
mov    %r14,%rax
mov    %r12,%r14
mov    %rdi,%r12
mov    %r15,%rcx
mov    %r13,%r15
mov    %rbx,%r13
mov    %rsi,%rbx
jmpq   f5a4 <png_read_image+0x44>
mov    (%rbx),%rsi
mov    %r12,%rdi
mov    %r14,%rdx
callq  5600 <png_read_row@plt>
add    $0x8,%rbx
add    $0x1,%r13d
cmp    %r15d,%r13d
jb     f63e <png_read_image+0xde>
mov    -0x40(%rbp),%rax
lea    0x1(%rax),%ecx
mov    -0x8(%rbp),%rbx
mov    -0x38(%rbp),%rax
cmp    %ecx,%eax
jg     f6cb <png_read_image+0x16b>
mov    -0x18(%rbp),%r12
mov    -0x10(%rbp),%rbx
mov    -0x20(%rbp),%r13
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
leaveq 
retq   
lea    0x1e410(%rip),%rax        # 2da99 <png_pass_yinc.24+0x1a2>
mov    %rdi,%rcx
mov    %r14,-0x38(%rbp)
mov    %r15,-0x40(%rbp)
mov    %r12,%r14
mov    %rdi,%r12
mov    %rcx,%rdi
mov    %r13,%r15
mov    %rbx,%r13
mov    %rsi,%rbx
mov    %rax,%rsi
callq  5390 <png_warning@plt>
mov    0x1fc(%r12),%eax
mov    %eax,0x200(%r12)
mov    -0x40(%rbp),%rcx
mov    -0x38(%rbp),%rax
jmpq   f5a4 <png_read_image+0x44>
mov    %rcx,-0x40(%rbp)
mov    %r14,%r13
jmp    f654 <png_read_image+0xf4>
data16 nopw %cs:0x0(%rax,%rax,1)
nop

000000000000f6e0 <png_read_end>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
test   %rdi,%rdi
jne    f6ef <png_read_end+0xf>
leaveq 
retq   
mov    $0x49444154,%ecx
mov    %rdi,%rax
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %r13,%r14
mov    %rbx,%r13
mov    %rdi,%rbx
mov    %rax,%rdi
mov    %r12,%r15
mov    %rsi,%r12
mov    %rcx,%rsi
callq  6e90 <png_chunk_unknown_handling>
test   %eax,%eax
je     f722 <png_read_end+0x42>
mov    %r14,%rcx
jmp    f72d <png_read_end+0x4d>
mov    %rbx,%rdi
callq  1c3f0 <png_read_finish_IDAT>
mov    %r14,%rcx
lea    0x1e3cf(%rip),%r14        # 2db03 <png_pass_yinc.24+0x20c>
movzbl 0x267(%rbx),%eax
cmp    $0x3,%al
je     f8c8 <png_read_end+0x1e8>
mov    %r13,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rcx,-0x18(%rbp)
mov    %rbx,%rdi
callq  1b170 <png_read_chunk_header>
mov    0x218(%rbx),%r15d
cmp    $0x49444154,%r15d
je     f779 <png_read_end+0x99>
mov    0x12c(%rbx),%ecx
or     $0x2000,%ecx
mov    %ecx,0x12c(%rbx)
cmp    $0x49454e44,%r15d
je     f8ec <png_read_end+0x20c>
cmp    $0x49484452,%r15d
je     f921 <png_read_end+0x241>
test   %r12,%r12
je     f931 <png_read_end+0x251>
mov    %rax,%r13
mov    %rbx,%rdi
mov    %r15,%rsi
callq  6e90 <png_chunk_unknown_handling>
test   %eax,%eax
jne    f93e <png_read_end+0x25e>
cmp    $0x49444154,%r15d
je     f976 <png_read_end+0x296>
cmp    $0x504c5445,%r15d
je     f9b6 <png_read_end+0x2d6>
cmp    $0x624b4744,%r15d
je     f9c9 <png_read_end+0x2e9>
cmp    $0x6348524d,%r15d
je     f9dc <png_read_end+0x2fc>
cmp    $0x65584966,%r15d
je     f9ef <png_read_end+0x30f>
cmp    $0x67414d41,%r15d
je     fa02 <png_read_end+0x322>
cmp    $0x68495354,%r15d
je     fa15 <png_read_end+0x335>
cmp    $0x6f464673,%r15d
je     fa28 <png_read_end+0x348>
cmp    $0x7043414c,%r15d
je     fa3b <png_read_end+0x35b>
cmp    $0x7343414c,%r15d
je     fa4e <png_read_end+0x36e>
cmp    $0x70485973,%r15d
je     fa61 <png_read_end+0x381>
cmp    $0x73424954,%r15d
je     fa74 <png_read_end+0x394>
cmp    $0x73524742,%r15d
je     fa87 <png_read_end+0x3a7>
cmp    $0x69434350,%r15d
je     fa9a <png_read_end+0x3ba>
cmp    $0x73504c54,%r15d
je     faad <png_read_end+0x3cd>
cmp    $0x74455874,%r15d
je     fac0 <png_read_end+0x3e0>
cmp    $0x74494d45,%r15d
je     fad3 <png_read_end+0x3f3>
cmp    $0x74524e53,%r15d
je     fae6 <png_read_end+0x406>
cmp    $0x7a545874,%r15d
je     faf9 <png_read_end+0x419>
cmp    $0x69545874,%r15d
je     fb0c <png_read_end+0x42c>
mov    %r13,%rdx
mov    %rbx,%rdi
mov    %r12,%rsi
xor    %ecx,%ecx
callq  1fe10 <png_handle_unknown>
jmp    f8fa <png_read_end+0x21a>
movzwl 0x258(%rbx),%eax
cmp    0x25c(%rbx),%eax
jl     fb1f <png_read_end+0x43f>
mov    %r13,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rcx,-0x18(%rbp)
jmpq   f74f <png_read_end+0x6f>
mov    %rax,%rdx
mov    %rbx,%rdi
mov    %r12,%rsi
callq  1cf60 <png_handle_IEND>
mov    0x12c(%rbx),%eax
and    $0x10,%eax
test   %eax,%eax
je     f74f <png_read_end+0x6f>
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
leaveq 
retq   
mov    %rax,%rdx
mov    %rbx,%rdi
mov    %r12,%rsi
callq  1caf0 <png_handle_IHDR>
jmp    f8fa <png_read_end+0x21a>
mov    %rax,%rsi
mov    %rbx,%rdi
callq  1b280 <png_crc_finish>
jmp    f8fa <png_read_end+0x21a>
cmp    $0x49444154,%r15d
je     fb3f <png_read_end+0x45f>
mov    %rax,%rcx
mov    %r13,%rdx
mov    %rbx,%rdi
mov    %r12,%rsi
callq  1fe10 <png_handle_unknown>
cmp    $0x504c5445,%r15d
jne    f8fa <png_read_end+0x21a>
mov    0x12c(%rbx),%eax
or     $0x2,%eax
mov    %eax,0x12c(%rbx)
jmp    f8fa <png_read_end+0x21a>
test   %r13d,%r13d
je     f988 <png_read_end+0x2a8>
mov    0x130(%rbx),%eax
and    $0x8,%eax
test   %eax,%eax
je     f997 <png_read_end+0x2b7>
mov    0x12c(%rbx),%eax
and    $0x2000,%eax
test   %eax,%eax
je     f9a6 <png_read_end+0x2c6>
mov    %rbx,%rdi
lea    0x1e178(%rip),%rsi        # 2db19 <png_pass_yinc.24+0x222>
callq  5590 <png_benign_error@plt>
mov    %r13,%rsi
mov    %rbx,%rdi
callq  1b280 <png_crc_finish>
jmpq   f8fa <png_read_end+0x21a>
mov    %r13,%rdx
mov    %rbx,%rdi
mov    %r12,%rsi
callq  1cc80 <png_handle_PLTE>
jmpq   f8fa <png_read_end+0x21a>
mov    %r13,%rdx
mov    %rbx,%rdi
mov    %r12,%rsi
callq  1cfe0 <png_handle_bKGD>
jmpq   f8fa <png_read_end+0x21a>
mov    %r13,%rdx
mov    %rbx,%rdi
mov    %r12,%rsi
callq  1d240 <png_handle_cHRM>
jmpq   f8fa <png_read_end+0x21a>
mov    %r13,%rdx
mov    %rbx,%rdi
mov    %r12,%rsi
callq  1d470 <png_handle_eXIf>
jmpq   f8fa <png_read_end+0x21a>
mov    %r13,%rdx
mov    %rbx,%rdi
mov    %r12,%rsi
callq  1d6a0 <png_handle_gAMA>
jmpq   f8fa <png_read_end+0x21a>
mov    %r13,%rdx
mov    %rbx,%rdi
mov    %r12,%rsi
callq  1d790 <png_handle_hIST>
jmpq   f8fa <png_read_end+0x21a>
mov    %r13,%rdx
mov    %rbx,%rdi
mov    %r12,%rsi
callq  1e420 <png_handle_oFFs>
jmpq   f8fa <png_read_end+0x21a>
mov    %r13,%rdx
mov    %rbx,%rdi
mov    %r12,%rsi
callq  1e5e0 <png_handle_pCAL>
jmpq   f8fa <png_read_end+0x21a>
mov    %r13,%rdx
mov    %rbx,%rdi
mov    %r12,%rsi
callq  1ed10 <png_handle_sCAL>
jmpq   f8fa <png_read_end+0x21a>
mov    %r13,%rdx
mov    %rbx,%rdi
mov    %r12,%rsi
callq  1e990 <png_handle_pHYs>
jmpq   f8fa <png_read_end+0x21a>
mov    %r13,%rdx
mov    %rbx,%rdi
mov    %r12,%rsi
callq  1eaf0 <png_handle_sBIT>
jmpq   f8fa <png_read_end+0x21a>
mov    %r13,%rdx
mov    %rbx,%rdi
mov    %r12,%rsi
callq  1f330 <png_handle_sRGB>
jmpq   f8fa <png_read_end+0x21a>
mov    %r13,%rdx
mov    %rbx,%rdi
mov    %r12,%rsi
callq  1d930 <png_handle_iCCP>
jmpq   f8fa <png_read_end+0x21a>
mov    %r13,%rdx
mov    %rbx,%rdi
mov    %r12,%rsi
callq  1f020 <png_handle_sPLT>
jmpq   f8fa <png_read_end+0x21a>
mov    %r13,%rdx
mov    %rbx,%rdi
mov    %r12,%rsi
callq  1f470 <png_handle_tEXt>
jmpq   f8fa <png_read_end+0x21a>
mov    %r13,%rdx
mov    %rbx,%rdi
mov    %r12,%rsi
callq  1f610 <png_handle_tIME>
jmpq   f8fa <png_read_end+0x21a>
mov    %r13,%rdx
mov    %rbx,%rdi
mov    %r12,%rsi
callq  1f740 <png_handle_tRNS>
jmpq   f8fa <png_read_end+0x21a>
mov    %r13,%rdx
mov    %rbx,%rdi
mov    %r12,%rsi
callq  1fa50 <png_handle_zTXt>
jmpq   f8fa <png_read_end+0x21a>
mov    %r13,%rdx
mov    %rbx,%rdi
mov    %r12,%rsi
callq  1e090 <png_handle_iTXt>
jmpq   f8fa <png_read_end+0x21a>
lea    0x1dfb4(%rip),%rsi        # 2dada <png_pass_yinc.24+0x1e3>
mov    %rbx,%rdi
mov    %r13,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rcx,-0x18(%rbp)
callq  5590 <png_benign_error@plt>
jmpq   f74f <png_read_end+0x6f>
test   %r13d,%r13d
je     fb6e <png_read_end+0x48e>
mov    0x130(%rbx),%ecx
and    $0x8,%ecx
test   %ecx,%ecx
jne    fb6e <png_read_end+0x48e>
mov    %r14,%rsi
mov    %rax,%r14
mov    %rbx,%rdi
callq  5590 <png_benign_error@plt>
mov    %r14,%rcx
lea    0x1df9a(%rip),%r14        # 2db03 <png_pass_yinc.24+0x20c>
jmpq   f94e <png_read_end+0x26e>
mov    0x12c(%rbx),%ecx
and    $0x2000,%ecx
test   %ecx,%ecx
jne    fb51 <png_read_end+0x471>
mov    %rax,%rcx
jmpq   f94e <png_read_end+0x26e>
nopw   %cs:0x0(%rax,%rax,1)

000000000000fb90 <png_destroy_read_struct>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
test   %rdi,%rdi
jne    fba1 <png_destroy_read_struct+0x11>
xor    %eax,%eax
jmp    fba4 <png_destroy_read_struct+0x14>
mov    (%rdi),%rax
test   %rax,%rax
jne    fbab <png_destroy_read_struct+0x1b>
leaveq 
retq   
mov    %rax,%rcx
mov    %r13,-0x8(%rbp)
mov    %r14,-0x10(%rbp)
mov    %r15,-0x18(%rbp)
mov    %r12,%r13
mov    %rbx,%r12
mov    %rax,%rbx
mov    %rdi,%r14
mov    %rcx,%rdi
mov    %rsi,%r15
mov    %rdx,%rsi
callq  55a0 <png_destroy_info_struct@plt>
mov    %r15,%rsi
mov    %rbx,%rdi
callq  55a0 <png_destroy_info_struct@plt>
movq   $0x0,(%r14)
mov    %rbx,%rdi
callq  103e0 <png_read_destroy>
mov    %rbx,%rdi
callq  ca80 <png_destroy_png_struct>
mov    %r12,%rbx
mov    %r13,%r12
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

000000000000fc10 <png_set_read_status_fn>:
push   %rbp
mov    %rsp,%rbp
test   %rdi,%rdi
jne    fc1b <png_set_read_status_fn+0xb>
leaveq 
retq   
mov    %rsi,0x300(%rdi)
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nop

000000000000fc30 <png_read_png>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
test   %rdi,%rdi
jne    fc3f <png_read_png+0xf>
leaveq 
retq   
test   %rsi,%rsi
jne    fc46 <png_read_png+0x16>
leaveq 
retq   
mov    %rdi,%rax
mov    %rsi,%rcx
mov    %r13,-0x10(%rbp)
mov    %r14,-0x18(%rbp)
mov    %r15,-0x20(%rbp)
mov    %rsi,%r13
mov    %rcx,%rsi
mov    %r12,%r14
mov    %rdi,%r12
mov    %rax,%rdi
mov    %rdx,%r15
callq  57b0 <png_read_info@plt>
mov    0x4(%r13),%eax
cmp    $0x1fffffff,%eax
ja     fdf1 <png_read_png+0x1c1>
mov    %r15,%rax
and    $0x8000,%eax
test   %eax,%eax
jle    fc92 <png_read_png+0x62>
mov    %r12,%rdi
callq  58d0 <png_set_scale_16@plt>
mov    %r15,%rax
and    $0x1,%eax
test   %eax,%eax
jle    fca4 <png_read_png+0x74>
mov    %r12,%rdi
callq  56d0 <png_set_strip_16@plt>
mov    %r15,%rax
and    $0x2,%eax
test   %eax,%eax
jle    fcb6 <png_read_png+0x86>
mov    %r12,%rdi
callq  5740 <png_set_strip_alpha@plt>
mov    %r15,%rax
and    $0x4,%eax
test   %eax,%eax
jle    fcc8 <png_read_png+0x98>
mov    %r12,%rdi
callq  5580 <png_set_packing@plt>
mov    %r15,%rax
and    $0x8,%eax
test   %eax,%eax
jle    fcda <png_read_png+0xaa>
mov    %r12,%rdi
callq  5820 <png_set_packswap@plt>
mov    %r15,%rax
and    $0x10,%eax
test   %eax,%eax
jle    fcec <png_read_png+0xbc>
mov    %r12,%rdi
callq  56b0 <png_set_expand@plt>
mov    %r15,%rax
and    $0x20,%eax
test   %eax,%eax
jle    fcfe <png_read_png+0xce>
mov    %r12,%rdi
callq  58e0 <png_set_invert_mono@plt>
mov    %r15,%rax
and    $0x40,%eax
test   %eax,%eax
jg     fe00 <png_read_png+0x1d0>
mov    %r15,%rax
and    $0x80,%eax
test   %eax,%eax
jle    fd20 <png_read_png+0xf0>
mov    %r12,%rdi
callq  5860 <png_set_bgr@plt>
mov    %r15,%rax
and    $0x100,%eax
test   %eax,%eax
jle    fd34 <png_read_png+0x104>
mov    %r12,%rdi
callq  50d0 <png_set_swap_alpha@plt>
mov    %r15,%rax
and    $0x200,%eax
test   %eax,%eax
jle    fd48 <png_read_png+0x118>
mov    %r12,%rdi
callq  51e0 <png_set_swap@plt>
mov    %r15,%rax
and    $0x400,%eax
test   %eax,%eax
jle    fd5c <png_read_png+0x12c>
mov    %r12,%rdi
callq  5620 <png_set_invert_alpha@plt>
mov    %r15,%rax
and    $0x2000,%eax
test   %eax,%eax
jle    fd70 <png_read_png+0x140>
mov    %r12,%rdi
callq  5810 <png_set_gray_to_rgb@plt>
and    $0x4000,%r15d
test   %r15d,%r15d
jle    fd84 <png_read_png+0x154>
mov    %r12,%rdi
callq  5830 <png_set_expand_16@plt>
mov    %r12,%rdi
callq  53f0 <png_set_interlace_handling@plt>
mov    %r12,%rdi
mov    %r13,%rsi
callq  5080 <png_read_update_info@plt>
mov    $0x40,%edx
xor    %r15d,%r15d
mov    %r12,%rdi
mov    %r13,%rsi
mov    %r15,%rcx
callq  5720 <png_free_data@plt>
mov    0x160(%r13),%rax
test   %rax,%rax
je     fe23 <png_read_png+0x1f3>
mov    0x160(%r13),%rsi
mov    %r12,%rdi
callq  52b0 <png_read_image@plt>
mov    0x8(%r13),%eax
or     $0x8000,%eax
mov    %eax,0x8(%r13)
mov    %r13,%rsi
mov    %r12,%rdi
callq  5170 <png_read_end@plt>
mov    %r14,%r12
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
leaveq 
retq   
mov    %r12,%rdi
lea    0x1dd35(%rip),%rsi        # 2db30 <png_pass_yinc.24+0x239>
callq  5470 <png_error@plt>
mov    0x8(%r13),%eax
and    $0x2,%eax
test   %eax,%eax
je     fd0c <png_read_png+0xdc>
lea    0xb0(%r13),%rsi
mov    %r12,%rdi
callq  5270 <png_set_shift@plt>
jmpq   fd0c <png_read_png+0xdc>
mov    0x4(%r13),%esi
shl    $0x3,%rsi
mov    %r12,%rdi
callq  5800 <png_malloc@plt>
mov    %rax,0x160(%r13)
mov    %r15,%rax
jmp    fe53 <png_read_png+0x223>
mov    0x160(%r13),%rdx
mov    %eax,%ecx
movq   $0x0,(%rdx,%rcx,8)
add    $0x1,%eax
mov    0x4(%r13),%ecx
cmp    %eax,%ecx
ja     fe3f <png_read_png+0x20f>
mov    0x12c(%r13),%eax
or     $0x40,%eax
mov    %eax,0x12c(%r13)
mov    %r14,-0x8(%rbp)
jmp    fe90 <png_read_png+0x260>
mov    0x10(%r13),%rsi
mov    0x160(%r13),%r14
mov    %r12,%rdi
callq  5800 <png_malloc@plt>
mov    %r15d,%ecx
mov    %rax,(%r14,%rcx,8)
add    $0x1,%r15d
mov    0x4(%r13),%eax
cmp    %r15d,%eax
ja     fe72 <png_read_png+0x242>
mov    -0x8(%rbp),%r14
jmpq   fdb9 <png_read_png+0x189>
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   (%rax)

000000000000feb0 <png_image_begin_read_from_file>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
xor    %eax,%eax
test   %rdi,%rdi
jne    fec9 <png_image_begin_read_from_file+0x19>
mov    %rax,%rcx
test   %rcx,%rcx
jne    fed8 <png_image_begin_read_from_file+0x28>
leaveq 
retq   
mov    0x8(%rdi),%ecx
cmp    $0x1,%ecx
je     fee6 <png_image_begin_read_from_file+0x36>
mov    $0x1,%ecx
jmp    fec2 <png_image_begin_read_from_file+0x12>
lea    0x1dcb6(%rip),%rsi        # 2db95 <png_pass_yinc.24+0x29e>
callq  90e0 <png_image_error>
leaveq 
retq   
test   %rsi,%rsi
jne    fef9 <png_image_begin_read_from_file+0x49>
lea    0x1dc72(%rip),%rsi        # 2db64 <png_pass_yinc.24+0x26d>
callq  90e0 <png_image_error>
leaveq 
retq   
lea    0x1dc61(%rip),%rax        # 2db61 <png_pass_yinc.24+0x26a>
mov    %r15,-0x10(%rbp)
mov    %rdi,%r15
mov    %rsi,%rdi
mov    %rax,%rsi
callq  5760 <fopen@plt>
test   %rax,%rax
jne    ff35 <png_image_begin_read_from_file+0x85>
callq  50a0 <__errno_location@plt>
movslq (%rax),%rdi
callq  5890 <strerror@plt>
mov    %rax,%rsi
mov    %r15,%rdi
callq  90e0 <png_image_error>
mov    -0x10(%rbp),%r15
leaveq 
retq   
mov    %r15,%rdi
mov    %r14,-0x8(%rbp)
mov    %rax,%r14
callq  10550 <png_image_read_init>
test   %eax,%eax
jne    ff5c <png_image_begin_read_from_file+0xac>
mov    %r14,%rdi
callq  5240 <fclose@plt>
mov    -0x8(%rbp),%r14
xor    %eax,%eax
mov    -0x10(%rbp),%r15
leaveq 
retq   
mov    (%r15),%rax
mov    (%rax),%rax
mov    %r14,0x108(%rax)
mov    (%r15),%rcx
mov    0x28(%rcx),%eax
or     $0x2,%eax
mov    %eax,0x28(%rcx)
mov    %r15,%rdi
lea    0x781(%rip),%rsi        # 10700 <png_image_read_header>
mov    %rdi,%rdx
callq  b260 <png_safe_execute>
mov    -0x8(%rbp),%r14
mov    -0x10(%rbp),%r15
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   0x0(%rax)

000000000000ffa0 <png_image_begin_read_from_stdio>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
xor    %eax,%eax
test   %rdi,%rdi
jne    ffb9 <png_image_begin_read_from_stdio+0x19>
mov    %rax,%rcx
test   %rcx,%rcx
jne    ffc8 <png_image_begin_read_from_stdio+0x28>
leaveq 
retq   
mov    0x8(%rdi),%ecx
cmp    $0x1,%ecx
je     ffd6 <png_image_begin_read_from_stdio+0x36>
mov    $0x1,%ecx
jmp    ffb2 <png_image_begin_read_from_stdio+0x12>
lea    0x1dc34(%rip),%rsi        # 2dc03 <png_pass_yinc.24+0x30c>
callq  90e0 <png_image_error>
leaveq 
retq   
test   %rsi,%rsi
jne    ffe9 <png_image_begin_read_from_stdio+0x49>
lea    0x1dbef(%rip),%rsi        # 2dbd1 <png_pass_yinc.24+0x2da>
callq  90e0 <png_image_error>
leaveq 
retq   
mov    %rdi,%rax
mov    %rdi,-0x10(%rbp)
mov    %rsi,-0x8(%rbp)
mov    %rax,%rdi
callq  10550 <png_image_read_init>
test   %eax,%eax
jne    10004 <png_image_begin_read_from_stdio+0x64>
xor    %eax,%eax
leaveq 
retq   
mov    -0x10(%rbp),%rdi
mov    (%rdi),%rax
mov    (%rax),%rax
mov    -0x8(%rbp),%rcx
mov    %rcx,0x108(%rax)
lea    0x6e0(%rip),%rsi        # 10700 <png_image_read_header>
mov    %rdi,%rdx
callq  b260 <png_safe_execute>
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

0000000000010030 <png_image_begin_read_from_memory>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
xor    %eax,%eax
test   %rdi,%rdi
jne    10049 <png_image_begin_read_from_memory+0x19>
mov    %rax,%rcx
test   %rcx,%rcx
jne    10058 <png_image_begin_read_from_memory+0x28>
leaveq 
retq   
mov    0x8(%rdi),%ecx
cmp    $0x1,%ecx
je     10066 <png_image_begin_read_from_memory+0x36>
mov    $0x1,%ecx
jmp    10042 <png_image_begin_read_from_memory+0x12>
lea    0x1dc14(%rip),%rsi        # 2dc73 <png_pass_yinc.24+0x37c>
callq  90e0 <png_image_error>
leaveq 
retq   
test   %rsi,%rsi
jne    10079 <png_image_begin_read_from_memory+0x49>
lea    0x1dbce(%rip),%rsi        # 2dc40 <png_pass_yinc.24+0x349>
callq  90e0 <png_image_error>
leaveq 
retq   
test   %rdx,%rdx
je     1006b <png_image_begin_read_from_memory+0x3b>
mov    %rdi,%rax
mov    %r15,-0x18(%rbp)
mov    %rsi,-0x10(%rbp)
mov    %rdx,-0x8(%rbp)
mov    %rdi,%r15
mov    %rax,%rdi
callq  10550 <png_image_read_init>
test   %eax,%eax
jne    100a4 <png_image_begin_read_from_memory+0x74>
xor    %eax,%eax
mov    -0x18(%rbp),%r15
leaveq 
retq   
mov    (%r15),%rax
mov    -0x10(%rbp),%rcx
mov    %rcx,0x18(%rax)
mov    (%r15),%rcx
mov    -0x8(%rbp),%rax
mov    %rax,0x20(%rcx)
mov    (%r15),%rax
mov    (%rax),%rax
mov    %r15,0x108(%rax)
lea    0x712(%rip),%rcx        # 107e0 <png_image_memory_read>
mov    (%r15),%rax
mov    (%rax),%rax
mov    %rcx,0x100(%rax)
mov    %r15,%rdi
lea    0x61b(%rip),%rsi        # 10700 <png_image_read_header>
mov    %rdi,%rdx
callq  b260 <png_safe_execute>
mov    -0x18(%rbp),%r15
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

0000000000010100 <png_image_finish_read>:
push   %rbp
mov    %rsp,%rbp
sub    $0x80,%rsp
xor    %eax,%eax
test   %rdi,%rdi
jne    1011c <png_image_finish_read+0x1c>
mov    %rax,%r9
test   %r9,%r9
jne    10166 <png_image_finish_read+0x66>
leaveq 
retq   
mov    $0x1,%r9d
mov    0x8(%rdi),%r10d
cmp    $0x1,%r10d
jne    10115 <png_image_finish_read+0x15>
mov    0x14(%rdi),%eax
mov    %rax,%r10
and    $0x8,%r10d
test   %r10d,%r10d
jne    10142 <png_image_finish_read+0x42>
and    $0x3,%eax
lea    0x1(%rax),%r9d
mov    %rdx,%r10
mov    $0x7fffffff,%eax
xor    %edx,%edx
mov    0xc(%rdi),%r11d
div    %r9d
cmp    %r11d,%eax
jae    10174 <png_image_finish_read+0x74>
lea    0x1dbd0(%rip),%rsi        # 2dd2f <png_pass_yinc.24+0x438>
callq  90e0 <png_image_error>
leaveq 
retq   
lea    0x1dbee(%rip),%rsi        # 2dd5b <png_pass_yinc.24+0x464>
callq  90e0 <png_image_error>
leaveq 
retq   
imul   0xc(%rdi),%r9d
test   %ecx,%ecx
jne    10180 <png_image_finish_read+0x80>
mov    %r9,%rcx
test   %ecx,%ecx
js     10189 <png_image_finish_read+0x89>
mov    %rcx,%r11
jmp    1018f <png_image_finish_read+0x8f>
mov    %rcx,%r11
neg    %r11d
mov    (%rdi),%rax
test   %rax,%rax
jne    101a5 <png_image_finish_read+0xa5>
lea    0x1db69(%rip),%rsi        # 2dd07 <png_pass_yinc.24+0x410>
callq  90e0 <png_image_error>
leaveq 
retq   
test   %r10,%r10
je     10197 <png_image_finish_read+0x97>
cmp    %r11d,%r9d
ja     10197 <png_image_finish_read+0x97>
mov    0x10(%rdi),%r9d
mov    0x14(%rdi),%eax
mov    %rax,%rdx
and    $0x8,%edx
test   %edx,%edx
je     101ed <png_image_finish_read+0xed>
mov    $0x1,%eax
xor    %edx,%edx
mov    %rsi,-0x28(%rbp)
mov    %rax,%rsi
mov    $0xffffffff,%eax
div    %esi
xor    %edx,%edx
div    %r11d
cmp    %r9d,%eax
jae    101f8 <png_image_finish_read+0xf8>
lea    0x1dafa(%rip),%rsi        # 2dce0 <png_pass_yinc.24+0x3e9>
callq  90e0 <png_image_error>
leaveq 
retq   
and    $0x4,%eax
shr    $0x2,%eax
add    $0x1,%eax
jmp    101c5 <png_image_finish_read+0xc5>
mov    0x14(%rdi),%eax
and    $0x8,%eax
test   %eax,%eax
je     1021c <png_image_finish_read+0x11c>
mov    0x1c(%rdi),%eax
test   %eax,%eax
jne    10217 <png_image_finish_read+0x117>
lea    0x1daa1(%rip),%rsi        # 2dcb1 <png_pass_yinc.24+0x3ba>
callq  90e0 <png_image_error>
leaveq 
retq   
test   %r8,%r8
je     10209 <png_image_finish_read+0x109>
lea    -0x78(%rbp),%rax
mov    $0x50,%edx
xor    %esi,%esi
mov    %r12,-0x8(%rbp)
mov    %r13,-0x10(%rbp)
mov    %r14,-0x18(%rbp)
mov    %r15,-0x20(%rbp)
mov    %rdi,%r12
mov    %rax,%rdi
mov    %rcx,%r13
mov    %r8,%r14
mov    %r10,%r15
callq  5350 <memset@plt>
mov    %r12,-0x78(%rbp)
mov    %r15,-0x70(%rbp)
mov    %r13d,-0x68(%rbp)
mov    %r14,-0x60(%rbp)
mov    -0x28(%rbp),%rax
mov    %rax,-0x58(%rbp)
movq   $0x0,-0x50(%rbp)
mov    0x14(%r12),%eax
and    $0x8,%eax
test   %eax,%eax
jne    102aa <png_image_finish_read+0x1aa>
lea    0x3db2(%rip),%rsi        # 14030 <png_image_read_direct>
mov    %r12,%rdi
lea    -0x78(%rbp),%rdx
callq  b260 <png_safe_execute>
mov    %rax,%r13
mov    %r12,%rdi
callq  5040 <png_image_free@plt>
mov    %r13,%rax
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
leaveq 
retq   
lea    0x12cf(%rip),%rsi        # 11580 <png_image_read_colormap>
mov    %r12,%rdi
lea    -0x78(%rbp),%r13
mov    %r13,%rdx
callq  b260 <png_safe_execute>
test   %eax,%eax
jne    102c9 <png_image_finish_read+0x1c9>
xor    %r13d,%r13d
jmp    1028d <png_image_finish_read+0x18d>
mov    %r13,%rdx
lea    0x2f1d(%rip),%rsi        # 131f0 <png_image_read_colormapped>
mov    %r12,%rdi
callq  b260 <png_safe_execute>
test   %eax,%eax
jne    102e4 <png_image_finish_read+0x1e4>
xor    %r13d,%r13d
jmp    1028d <png_image_finish_read+0x18d>
mov    $0x1,%r13d
jmp    1028d <png_image_finish_read+0x18d>
nopl   0x0(%rax)

00000000000102f0 <png_do_read_intrapixel>:
push   %rbp
mov    %rsp,%rbp
movzbl 0x10(%rdi),%ecx
mov    %rcx,%rax
and    $0x2,%eax
test   %eax,%eax
jg     10304 <png_do_read_intrapixel+0x14>
leaveq 
retq   
mov    (%rdi),%r8d
xor    %eax,%eax
movzbl 0x11(%rdi),%edx
cmp    $0x8,%dl
je     10319 <png_do_read_intrapixel+0x29>
cmp    $0x10,%dl
je     10325 <png_do_read_intrapixel+0x35>
leaveq 
retq   
cmp    $0x2,%cl
jne    10334 <png_do_read_intrapixel+0x44>
mov    $0x3,%ecx
jmp    1035e <png_do_read_intrapixel+0x6e>
cmp    $0x2,%cl
jne    10365 <png_do_read_intrapixel+0x75>
mov    $0x6,%edx
jmpq   103c8 <png_do_read_intrapixel+0xd8>
cmp    $0x6,%cl
jne    103cf <png_do_read_intrapixel+0xdf>
mov    $0x4,%ecx
jmp    1035e <png_do_read_intrapixel+0x6e>
movzbl 0x1(%rsi),%edi
movzbl (%rsi),%edx
add    %edi,%edx
mov    %dl,(%rsi)
movzbl 0x2(%rsi),%edx
add    %edi,%edx
mov    %dl,0x2(%rsi)
add    $0x1,%eax
add    %rcx,%rsi
cmp    %r8d,%eax
jb     10344 <png_do_read_intrapixel+0x54>
leaveq 
retq   
cmp    $0x6,%cl
jne    103d1 <png_do_read_intrapixel+0xe1>
mov    $0x8,%edx
jmp    103c8 <png_do_read_intrapixel+0xd8>
movzbl 0x3(%rsi),%edi
movzbl 0x2(%rsi),%ecx
shl    $0x8,%ecx
lea    (%rdi,%rcx,1),%r9d
movzbl 0x1(%rsi),%edi
movzbl (%rsi),%ecx
shl    $0x8,%ecx
add    %edi,%ecx
lea    0x10000(%r9,%rcx,1),%edi
mov    %rdi,%rcx
shr    $0x8,%ecx
mov    %cl,(%rsi)
mov    %dil,0x1(%rsi)
movzbl 0x5(%rsi),%edi
movzbl 0x4(%rsi),%ecx
shl    $0x8,%ecx
add    %edi,%ecx
lea    0x10000(%r9,%rcx,1),%edi
mov    %rdi,%rcx
shr    $0x8,%ecx
mov    %cl,0x4(%rsi)
mov    %dil,0x5(%rsi)
add    $0x1,%eax
add    %rdx,%rsi
cmp    %eax,%r8d
ja     10371 <png_do_read_intrapixel+0x81>
leaveq 
retq   
leaveq 
retq   
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

00000000000103e0 <png_read_destroy>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x8(%rbp)
mov    %rdi,%r15
callq  8c60 <png_destroy_gamma_table>
mov    0x3f8(%r15),%rsi
mov    %r15,%rdi
callq  5790 <png_free@plt>
movq   $0x0,0x3f8(%r15)
mov    0x470(%r15),%rsi
mov    %r15,%rdi
callq  5790 <png_free@plt>
movq   $0x0,0x470(%r15)
mov    0x458(%r15),%rsi
mov    %r15,%rdi
callq  5790 <png_free@plt>
movq   $0x0,0x458(%r15)
mov    0x378(%r15),%rsi
mov    %r15,%rdi
callq  5790 <png_free@plt>
movq   $0x0,0x378(%r15)
mov    0x380(%r15),%rsi
mov    %r15,%rdi
callq  5790 <png_free@plt>
movq   $0x0,0x380(%r15)
mov    0x3ac(%r15),%eax
and    $0x1000,%eax
test   %eax,%eax
je     104a0 <png_read_destroy+0xc0>
mov    0x250(%r15),%rsi
mov    %r15,%rdi
callq  6d80 <png_zfree>
movq   $0x0,0x250(%r15)
mov    0x3ac(%r15),%eax
mov    %rax,%rcx
and    $0xffffefff,%ecx
mov    %ecx,0x3ac(%r15)
and    $0x2000,%eax
test   %eax,%eax
je     104da <png_read_destroy+0xfa>
mov    0x2e8(%r15),%rsi
mov    %r15,%rdi
callq  5790 <png_free@plt>
movq   $0x0,0x2e8(%r15)
mov    0x3ac(%r15),%eax
and    $0xffffdfff,%eax
mov    %eax,0x3ac(%r15)
lea    0x140(%r15),%rdi
callq  5510 <inflateEnd@plt>
mov    0x330(%r15),%rsi
mov    %r15,%rdi
callq  5790 <png_free@plt>
movq   $0x0,0x330(%r15)
mov    0x438(%r15),%rsi
mov    %r15,%rdi
callq  5790 <png_free@plt>
movq   $0x0,0x438(%r15)
mov    0x3c8(%r15),%rsi
mov    %r15,%rdi
callq  5790 <png_free@plt>
movq   $0x0,0x3c8(%r15)
mov    -0x8(%rbp),%r15
leaveq 
retq   
nopl   (%rax)

0000000000010550 <png_image_read_init>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    (%rdi),%rax
test   %rax,%rax
je     1056e <png_image_read_init+0x1e>
lea    0x1d84a(%rip),%rsi        # 2ddb1 <png_pass_yinc.24+0x4ba>
callq  90e0 <png_image_error>
leaveq 
retq   
lea    0x1d817(%rip),%rax        # 2dd8c <png_pass_yinc.24+0x495>
lea    -0x53fc(%rip),%rdx        # b180 <png_safe_error>
lea    -0x5373(%rip),%rcx        # b210 <png_safe_warning>
mov    %rdi,%rsi
mov    %r15,-0x10(%rbp)
mov    %rdi,%r15
mov    %rax,%rdi
callq  56e0 <png_create_read_struct@plt>
mov    %rax,-0x20(%rbp)
xor    %esi,%esi
mov    $0x68,%edx
mov    %r15,%rdi
callq  5350 <memset@plt>
movl   $0x1,0x8(%r15)
mov    -0x20(%rbp),%rdi
test   %rdi,%rdi
jne    105ce <png_image_read_init+0x7e>
mov    %r15,%rdi
lea    0x1d7d0(%rip),%rsi        # 2dd93 <png_pass_yinc.24+0x49c>
callq  90e0 <png_image_error>
mov    -0x10(%rbp),%r15
leaveq 
retq   
callq  5280 <png_create_info_struct@plt>
mov    %rax,-0x18(%rbp)
test   %rax,%rax
jne    105ec <png_image_read_init+0x9c>
lea    -0x20(%rbp),%rdi
xor    %esi,%esi
mov    %rsi,%rdx
callq  54b0 <png_destroy_read_struct@plt>
jmp    105b9 <png_image_read_init+0x69>
mov    -0x20(%rbp),%rdi
mov    $0x30,%esi
callq  5150 <png_malloc_warn@plt>
test   %rax,%rax
jne    1060e <png_image_read_init+0xbe>
mov    -0x20(%rbp),%rdi
lea    -0x18(%rbp),%rsi
callq  55a0 <png_destroy_info_struct@plt>
jmp    105dc <png_image_read_init+0x8c>
mov    %rax,%rdi
mov    %r14,-0x8(%rbp)
mov    %rax,%r14
mov    $0x30,%edx
xor    %esi,%esi
callq  5350 <memset@plt>
mov    -0x20(%rbp),%rax
mov    %rax,(%r14)
mov    -0x18(%rbp),%rax
mov    %rax,0x8(%r14)
mov    0x28(%r14),%eax
and    $0xfffffffe,%eax
mov    %eax,0x28(%r14)
mov    %r14,(%r15)
mov    $0x1,%eax
mov    -0x8(%rbp),%r14
mov    -0x10(%rbp),%r15
leaveq 
retq   

0000000000010650 <png_image_format>:
push   %rbp
mov    %rsp,%rbp
movzbl 0x267(%rdi),%ecx
mov    %rcx,%rax
and    $0x2,%eax
test   %eax,%eax
jg     1066e <png_image_format+0x1e>
mov    $0x1,%eax
xor    %edx,%edx
jmp    10678 <png_image_format+0x28>
mov    $0x3,%eax
mov    $0x2,%edx
and    $0x4,%ecx
test   %ecx,%ecx
jle    1069e <png_image_format+0x4e>
movzbl 0x268(%rdi),%ecx
cmp    $0x10,%cl
jne    1068e <png_image_format+0x3e>
add    $0x4,%eax
movzbl 0x267(%rdi),%ecx
and    $0x1,%ecx
test   %ecx,%ecx
jg     106af <png_image_format+0x5f>
leaveq 
retq   
movzwl 0x260(%rdi),%ecx
test   %cx,%cx
jne    1067f <png_image_format+0x2f>
mov    %rdx,%rax
jmp    1067f <png_image_format+0x2f>
add    $0x8,%eax
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nop

00000000000106c0 <png_gamma_not_sRGB>:
push   %rbp
mov    %rsp,%rbp
cmp    $0x1869f,%edi
jle    106d3 <png_gamma_not_sRGB+0x13>
mov    $0x1,%eax
leaveq 
retq   
test   %edi,%edi
jne    106db <png_gamma_not_sRGB+0x1b>
xor    %eax,%eax
leaveq 
retq   
lea    (%rdi,%rdi,4),%eax
lea    0x2(%rdi,%rax,2),%ecx
mov    $0x66666667,%eax
imul   %ecx
mov    %rdx,%rax
sar    %eax
shr    $0x1f,%edx
lea    (%rax,%rdx,1),%edi
callq  8b20 <png_gamma_significant>
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

0000000000010700 <png_image_read_header>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %r13,-0x8(%rbp)
mov    %r14,-0x10(%rbp)
mov    %r15,-0x18(%rbp)
mov    $0x1,%esi
mov    (%rdi),%rax
mov    (%rax),%r14
mov    0x8(%rax),%r15
mov    %rdi,%r13
mov    %r14,%rdi
callq  5050 <png_set_benign_errors@plt>
mov    %r15,%rsi
mov    %r14,%rdi
callq  57b0 <png_read_info@plt>
mov    0x1f8(%r14),%eax
mov    %eax,0xc(%r13)
mov    0x1fc(%r14),%eax
mov    %eax,0x10(%r13)
mov    %r14,%rdi
callq  10650 <png_image_format>
mov    %eax,0x14(%r13)
and    $0x2,%eax
test   %eax,%eax
jne    10781 <png_image_read_header+0x81>
mov    $0x100,%edx
movzbl 0x267(%r14),%eax
test   %al,%al
je     107a0 <png_image_read_header+0xa0>
cmp    $0x3,%al
je     107cf <png_image_read_header+0xcf>
mov    $0x1,%eax
mov    %rdx,%rsi
jmp    107b2 <png_image_read_header+0xb2>
movzwl 0x4e2(%r14),%eax
and    $0x8042,%eax
cmp    $0x2,%eax
jne    10762 <png_image_read_header+0x62>
mov    0x18(%r13),%eax
or     $0x1,%eax
mov    %eax,0x18(%r13)
jmp    10762 <png_image_read_header+0x62>
movzbl 0x268(%r14),%ecx
mov    $0x1,%eax
mov    %rax,%rsi
shl    %cl,%esi
cmp    $0x100,%esi
ja     107bd <png_image_read_header+0xbd>
mov    %rsi,%rdx
mov    %edx,0x1c(%r13)
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
leaveq 
retq   
movzwl 0x258(%r14),%esi
mov    $0x1,%eax
jmp    107b2 <png_image_read_header+0xb2>
xchg   %ax,%ax

00000000000107e0 <png_image_memory_read>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
test   %rdi,%rdi
jne    107ef <png_image_memory_read+0xf>
leaveq 
retq   
mov    0x108(%rdi),%rax
test   %rax,%rax
jne    10807 <png_image_memory_read+0x27>
lea    0x1d5ef(%rip),%rsi        # 2ddf1 <png_pass_yinc.24+0x4fa>
callq  5470 <png_error@plt>
mov    (%rax),%rax
test   %rax,%rax
je     107fb <png_image_memory_read+0x1b>
mov    0x20(%rax),%r8
mov    0x18(%rax),%rcx
test   %rcx,%rcx
jne    10828 <png_image_memory_read+0x48>
lea    0x1d5b6(%rip),%rsi        # 2ddd9 <png_pass_yinc.24+0x4e2>
callq  5470 <png_error@plt>
cmp    %rdx,%r8
jb     1081c <png_image_memory_read+0x3c>
mov    %rcx,%rdi
mov    %rdx,%r9
mov    %r12,-0x8(%rbp)
mov    %r13,-0x10(%rbp)
mov    %r14,-0x18(%rbp)
mov    %r15,-0x20(%rbp)
mov    %r8,%r12
mov    %rax,%r13
mov    %rcx,%r14
mov    %rdx,%r15
mov    %r9,%rdx
mov    %rdi,%r8
mov    %rsi,%rdi
mov    %r8,%rsi
callq  54c0 <memcpy@plt>
lea    (%r14,%r15,1),%rax
mov    %rax,0x18(%r13)
sub    %r15,%r12
mov    %r12,0x20(%r13)
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   0x0(%rax)

0000000000010890 <png_image_skip_unused_chunks>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x8(%rbp)
mov    $0x1,%esi
xor    %edx,%edx
mov    $0xffffffffffffffff,%rcx
mov    %rdi,%r15
callq  5690 <png_set_keep_unknown_chunks@plt>
mov    %r15,%rdi
lea    0x1d549(%rip),%rdx        # 2de05 <chunks_to_process.34>
mov    $0x6,%ecx
xor    %esi,%esi
callq  5690 <png_set_keep_unknown_chunks@plt>
mov    -0x8(%rbp),%r15
leaveq 
retq   
xchg   %ax,%ax

00000000000108d0 <set_file_encoding>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    (%rdi),%rax
mov    (%rax),%rax
mov    (%rax),%rax
movslq 0x498(%rax),%r15
mov    %rdi,%r14
mov    %r15,%rdi
callq  8b20 <png_gamma_significant>
test   %eax,%eax
jne    10911 <set_file_encoding+0x41>
movl   $0x4,0x40(%r14)
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
mov    %r15,%rdi
callq  106c0 <png_gamma_not_sRGB>
test   %eax,%eax
jne    1092f <set_file_encoding+0x5f>
movl   $0x1,0x40(%r14)
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
mov    %r15,%rdi
movl   $0x3,0x40(%r14)
callq  8a50 <png_reciprocal>
mov    %eax,0x44(%r14)
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
nopl   (%rax)

0000000000010950 <decode_gamma>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
cmp    $0x3,%edx
jne    10961 <decode_gamma+0x11>
movslq 0x40(%rdi),%rdx
test   %edx,%edx
jne    10990 <decode_gamma+0x40>
mov    %rdi,%rax
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rsi,%r14
mov    %rdi,%r15
mov    %rax,%rdi
callq  108d0 <set_file_encoding>
mov    %r14,%rsi
mov    %r15,%rdi
movslq 0x40(%rdi),%rdx
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
cmp    $0x2,%edx
jle    109b4 <decode_gamma+0x64>
cmp    $0x3,%edx
je     109c3 <decode_gamma+0x73>
cmp    $0x4,%edx
je     109dc <decode_gamma+0x8c>
mov    (%rdi),%rax
mov    (%rax),%rax
mov    (%rax),%rdi
lea    0x1d474(%rip),%rsi        # 2de23 <chunks_to_process.34+0x1e>
callq  5470 <png_error@plt>
cmp    $0x1,%edx
je     109e6 <decode_gamma+0x96>
cmp    $0x2,%edx
jne    1099f <decode_gamma+0x4f>
mov    %rsi,%rax
leaveq 
retq   
mov    %rsi,%rax
shl    $0x8,%eax
add    %esi,%eax
movslq 0x44(%rdi),%rsi
mov    %rax,%rdi
callq  8b80 <png_gamma_16bit_correct>
movzwl %ax,%eax
leaveq 
retq   
mov    %rsi,%rax
shl    $0x8,%eax
add    %esi,%eax
leaveq 
retq   
lea    0x1b79f(%rip),%rcx        # 2c18c <png_sRGB_table>
mov    %esi,%eax
movzwl (%rcx,%rax,2),%eax
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)

0000000000010a00 <png_colormap_compose>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %r12,-0x8(%rbp)
mov    %r13,-0x10(%rbp)
mov    %r14,-0x18(%rbp)
mov    %r15,-0x20(%rbp)
mov    %rbx,%r12
mov    %rcx,%rbx
mov    %r9,%r13
mov    %r8,%r14
mov    %rdi,%r15
callq  10950 <decode_gamma>
mov    %r14,%rsi
mov    %rax,%r14
mov    %r15,%rdi
mov    %r13,%rdx
callq  10950 <decode_gamma>
mov    $0xff,%ecx
sub    %ebx,%ecx
imul   %eax,%ecx
imul   %r14d,%ebx
add    %ebx,%ecx
cmp    $0x2,%r13d
je     10a9c <png_colormap_compose+0x9c>
mov    %rcx,%rax
shr    $0xf,%eax
mov    %eax,%edx
lea    0x1bd2a(%rip),%rax        # 2c78c <png_sRGB_delta>
movzbl (%rdx,%rax,1),%eax
and    $0x7fff,%ecx
imul   %ecx,%eax
shr    $0xc,%eax
lea    0x1b913(%rip),%rcx        # 2c38c <png_sRGB_base>
movzwl (%rcx,%rdx,2),%ecx
add    %ecx,%eax
and    $0xff00,%eax
shr    $0x8,%eax
mov    %r12,%rbx
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
leaveq 
retq   
mov    %rcx,%rax
shl    $0x8,%eax
add    %ecx,%eax
mov    %rax,%rcx
shr    $0x10,%ecx
lea    0x8000(%rcx,%rax,1),%eax
shr    $0x10,%eax
mov    %r12,%rbx
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
leaveq 
retq   
nopl   0x0(%rax)

0000000000010ad0 <png_create_colormap_entry>:
push   %rbp
mov    %rsp,%rbp
sub    $0x80,%rsp
mov    %r15,-0x60(%rbp)
mov    %r14,-0x58(%rbp)
mov    $0x1,%r10d
mov    %r10,-0x20(%rbp)
mov    $0x2,%r15d
mov    %r15,-0x10(%rbp)
mov    (%rdi),%r11
mov    0x14(%r11),%eax
mov    %rax,%r14
and    $0x4,%r14d
test   %r14d,%r14d
jne    10b0d <png_create_colormap_entry+0x3d>
mov    %r10,%r15
xor    %r14d,%r14d
mov    %r14,-0x28(%rbp)
and    $0x2,%eax
test   %eax,%eax
je     10b3d <png_create_colormap_entry+0x6d>
cmp    $0xff,%esi
ja     10b4a <png_create_colormap_entry+0x7a>
movslq 0x10(%rbp),%rax
cmp    $0x3,%eax
je     10b5c <png_create_colormap_entry+0x8c>
mov    %rbx,%r10
mov    %rcx,%rbx
mov    %r13,%rcx
mov    %r8,%r13
jmpq   10bcb <png_create_colormap_entry+0xfb>
cmp    %edx,%ecx
je     10c11 <png_create_colormap_entry+0x141>
mov    %r10,%r14
jmp    10b1b <png_create_colormap_entry+0x4b>
mov    (%r11),%rax
mov    (%rax),%rdi
lea    0x1d2f1(%rip),%rsi        # 2de48 <chunks_to_process.34+0x43>
callq  5470 <png_error@plt>
movslq 0x40(%rdi),%rax
test   %eax,%eax
je     10b72 <png_create_colormap_entry+0xa2>
mov    %rbx,%r10
mov    %rcx,%rbx
mov    %r13,%rcx
mov    %r8,%r13
jmp    10bc7 <png_create_colormap_entry+0xf7>
mov    %rdi,%rax
mov    %r9,-0x38(%rbp)
mov    %r15,-0x78(%rbp)
mov    %r11,-0x70(%rbp)
mov    %rsi,-0x40(%rbp)
mov    %rbx,-0x48(%rbp)
mov    %r12,-0x50(%rbp)
mov    %r13,-0x68(%rbp)
mov    %rcx,%rbx
mov    %rdx,%r12
mov    %r8,%r13
mov    %rdi,%r15
mov    %rax,%rdi
callq  108d0 <set_file_encoding>
mov    %r12,%rdx
mov    %r15,%rdi
mov    -0x68(%rbp),%rcx
mov    -0x50(%rbp),%r12
mov    -0x48(%rbp),%r10
mov    -0x40(%rbp),%rsi
mov    -0x70(%rbp),%r11
mov    -0x78(%rbp),%r15
mov    -0x38(%rbp),%r9
movslq 0x40(%rdi),%rax
lea    0x1b7ba(%rip),%r8        # 2c38c <png_sRGB_base>
mov    %rcx,-0x50(%rbp)
lea    0x1bbaf(%rip),%rcx        # 2c78c <png_sRGB_delta>
cmp    $0x3,%eax
je     10c22 <png_create_colormap_entry+0x152>
cmp    $0x4,%eax
je     10d61 <png_create_colormap_entry+0x291>
cmp    $0x1,%eax
jne    10dbc <png_create_colormap_entry+0x2ec>
test   %r14d,%r14d
jg     10e75 <png_create_colormap_entry+0x3a5>
cmp    $0x2,%r15d
je     10e75 <png_create_colormap_entry+0x3a5>
mov    $0x1,%eax
jmpq   10dbc <png_create_colormap_entry+0x2ec>
cmp    %r8d,%ecx
je     10b1b <png_create_colormap_entry+0x4b>
mov    %r10,%r14
jmpq   10b1b <png_create_colormap_entry+0x4b>
mov    %rdx,%rax
shl    $0x8,%eax
add    %eax,%edx
movslq 0x44(%rdi),%rax
mov    %r12,-0x48(%rbp)
mov    %rax,%r12
mov    %r9,-0x18(%rbp)
mov    %r11,-0x68(%rbp)
mov    %rsi,-0x30(%rbp)
mov    %r10,-0x40(%rbp)
mov    %rcx,-0x78(%rbp)
mov    %r8,-0x70(%rbp)
mov    %rdi,-0x38(%rbp)
mov    %r12,%rsi
mov    %rax,%r12
mov    %rdx,%rdi
callq  8b80 <png_gamma_16bit_correct>
mov    %rbx,%rcx
shl    $0x8,%ecx
lea    (%rbx,%rcx,1),%edi
mov    %rax,%rbx
mov    %r12,%rsi
callq  8b80 <png_gamma_16bit_correct>
movzwl %bx,%ecx
movzwl %ax,%ebx
mov    %r13,%rax
shl    $0x8,%eax
lea    0x0(%r13,%rax,1),%edi
mov    %r12,%rsi
mov    %rcx,%r12
callq  8b80 <png_gamma_16bit_correct>
movzwl %ax,%r13d
test   %r14d,%r14d
jg     10d8a <png_create_colormap_entry+0x2ba>
cmp    $0x2,%r15d
je     10d8a <png_create_colormap_entry+0x2ba>
mov    %r12,%rax
shl    $0x8,%eax
sub    %r12d,%eax
mov    %rax,%rcx
shr    $0xf,%ecx
mov    %ecx,%esi
mov    -0x78(%rbp),%rcx
movzbl (%rsi,%rcx,1),%edx
and    $0x7fff,%eax
imul   %eax,%edx
shr    $0xc,%edx
mov    -0x70(%rbp),%r8
movzwl (%r8,%rsi,2),%eax
add    %eax,%edx
and    $0xff00,%edx
shr    $0x8,%edx
mov    %rbx,%rax
shl    $0x8,%eax
sub    %ebx,%eax
mov    %rax,%rsi
shr    $0xf,%esi
mov    %esi,%edi
movzbl (%rdi,%rcx,1),%esi
and    $0x7fff,%eax
imul   %eax,%esi
shr    $0xc,%esi
movzwl (%r8,%rdi,2),%eax
lea    (%rsi,%rax,1),%ebx
and    $0xff00,%ebx
shr    $0x8,%ebx
mov    %r13,%rax
shl    $0x8,%eax
sub    %r13d,%eax
mov    %rax,%rsi
shr    $0xf,%esi
mov    %esi,%edi
movzbl (%rdi,%rcx,1),%esi
and    $0x7fff,%eax
imul   %eax,%esi
shr    $0xc,%esi
movzwl (%r8,%rdi,2),%eax
lea    (%rsi,%rax,1),%r13d
and    $0xff00,%r13d
shr    $0x8,%r13d
mov    -0x38(%rbp),%rdi
mov    $0x1,%eax
mov    -0x48(%rbp),%r12
mov    -0x40(%rbp),%r10
mov    -0x30(%rbp),%rsi
mov    -0x68(%rbp),%r11
mov    -0x18(%rbp),%r9
jmp    10dbc <png_create_colormap_entry+0x2ec>
mov    %rdx,%rax
shl    $0x8,%eax
add    %eax,%edx
mov    %rbx,%rax
shl    $0x8,%eax
add    %eax,%ebx
mov    %r13,%rax
shl    $0x8,%eax
add    %eax,%r13d
mov    %r9,%rax
shl    $0x8,%eax
add    %eax,%r9d
mov    $0x2,%eax
jmp    10dbc <png_create_colormap_entry+0x2ec>
mov    -0x18(%rbp),%rcx
mov    %rcx,%rax
shl    $0x8,%eax
lea    (%rcx,%rax,1),%r9d
mov    %r12,%rdx
mov    -0x38(%rbp),%rdi
mov    -0x70(%rbp),%r8
mov    -0x78(%rbp),%rcx
mov    -0x48(%rbp),%r12
mov    -0x40(%rbp),%r10
mov    -0x30(%rbp),%rsi
mov    -0x68(%rbp),%r11
mov    $0x2,%eax
cmp    $0x2,%eax
je     10ea3 <png_create_colormap_entry+0x3d3>
cmp    %eax,%r15d
jne    10ec0 <png_create_colormap_entry+0x3f0>
mov    0x14(%r11),%r8d
mov    %r8,%rax
and    $0x20,%eax
test   %eax,%eax
jne    10ed2 <png_create_colormap_entry+0x402>
mov    $0x2,%ecx
pushq  -0x28(%rbp)
pushq  -0x10(%rbp)
pushq  -0x28(%rbp)
pushq  -0x20(%rbp)
popq   -0x78(%rbp)
popq   -0x30(%rbp)
popq   -0x18(%rbp)
popq   -0x8(%rbp)
mov    %r8,%rax
and    $0x10,%eax
test   %eax,%eax
jne    10e13 <png_create_colormap_entry+0x343>
pushq  -0x28(%rbp)
pushq  -0x10(%rbp)
popq   -0x28(%rbp)
popq   -0x10(%rbp)
cmp    $0x2,%r15d
je     10f02 <png_create_colormap_entry+0x432>
and    $0x3,%r8d
lea    0x1(%r8),%ecx
imul   %ecx,%esi
mov    %esi,%eax
add    0x18(%rdi),%rax
cmp    $0x2,%ecx
jbe    10f73 <png_create_colormap_entry+0x4a3>
cmp    $0x3,%ecx
jne    10f96 <png_create_colormap_entry+0x4c6>
mov    -0x30(%rbp),%rcx
mov    -0x28(%rbp),%rsi
add    %ecx,%esi
movslq %esi,%rsi
mov    %r13b,(%rax,%rsi,1)
mov    -0x20(%rbp),%rsi
mov    %bl,(%rax,%rsi,1)
mov    -0x10(%rbp),%rsi
add    %esi,%ecx
movslq %ecx,%rcx
mov    %dl,(%rcx,%rax,1)
mov    %r10,%rbx
mov    -0x50(%rbp),%r13
mov    -0x58(%rbp),%r14
mov    -0x60(%rbp),%r15
leaveq 
retq   
lea    0x1b310(%rip),%rax        # 2c18c <png_sRGB_table>
mov    %edx,%edx
movzwl (%rax,%rdx,2),%edx
mov    %ebx,%ebx
movzwl (%rax,%rbx,2),%ebx
mov    %r13d,%r13d
movzwl (%rax,%r13,2),%r13d
mov    %r9,%rax
shl    $0x8,%eax
add    %eax,%r9d
mov    $0x2,%eax
jmpq   10dbc <png_create_colormap_entry+0x2ec>
test   %r14d,%r14d
jg     10fb0 <png_create_colormap_entry+0x4e0>
cmp    $0x1,%r15d
je     1106b <png_create_colormap_entry+0x59b>
mov    $0x2,%eax
jmpq   10dc5 <png_create_colormap_entry+0x2f5>
mov    (%r11),%rax
mov    (%rax),%rdi
lea    0x1cf98(%rip),%rsi        # 2de65 <chunks_to_process.34+0x60>
callq  5470 <png_error@plt>
mov    %r8,%rax
and    $0x1,%eax
test   %eax,%eax
jne    11129 <png_create_colormap_entry+0x659>
mov    $0x2,%ecx
pushq  -0x28(%rbp)
pushq  -0x10(%rbp)
pushq  -0x28(%rbp)
pushq  -0x20(%rbp)
popq   -0x78(%rbp)
popq   -0x30(%rbp)
popq   -0x18(%rbp)
popq   -0x8(%rbp)
jmpq   10dfd <png_create_colormap_entry+0x32d>
and    $0x3,%r8d
lea    0x1(%r8),%r14d
imul   %r14d,%esi
mov    %esi,%eax
lea    (%rax,%rax,1),%rsi
add    0x18(%rdi),%rsi
mov    $0x80008001,%r11d
cmp    $0x2,%r14d
jbe    11151 <png_create_colormap_entry+0x681>
cmp    $0x3,%r14d
jne    11175 <png_create_colormap_entry+0x6a5>
mov    -0x30(%rbp),%rdi
cmp    $0xfffe,%r9d
jbe    11190 <png_create_colormap_entry+0x6c0>
mov    -0x28(%rbp),%rax
add    %edi,%eax
movslq %eax,%rax
mov    %r13w,(%rsi,%rax,2)
mov    %bx,(%rsi,%rcx,1)
mov    -0x10(%rbp),%rax
add    %edi,%eax
movslq %eax,%rax
mov    %dx,(%rsi,%rax,2)
mov    %r10,%rbx
mov    -0x50(%rbp),%r13
mov    -0x58(%rbp),%r14
mov    -0x60(%rbp),%r15
leaveq 
retq   
test   %r8d,%r8d
je     111af <png_create_colormap_entry+0x6df>
cmp    $0x2,%ecx
je     111a7 <png_create_colormap_entry+0x6d7>
mov    %r10,%rbx
mov    -0x50(%rbp),%r13
mov    -0x58(%rbp),%r14
mov    -0x60(%rbp),%r15
leaveq 
retq   
cmp    $0x4,%ecx
je     111c7 <png_create_colormap_entry+0x6f7>
mov    %r10,%rbx
mov    -0x50(%rbp),%r13
mov    -0x58(%rbp),%r14
mov    -0x60(%rbp),%r15
leaveq 
retq   
lea    (%rdx,%rdx,2),%eax
shl    $0x3,%eax
lea    (%rax,%rdx,2),%eax
add    %edx,%eax
shl    $0x4,%eax
lea    (%rax,%rdx,2),%eax
add    %edx,%eax
shl    $0x4,%eax
lea    (%rax,%rdx,8),%r14d
lea    (%rbx,%rbx,2),%eax
shl    $0x6,%eax
lea    (%rbx,%rbx,8),%edx
sub    %edx,%eax
shl    $0x7,%eax
lea    (%rax,%rbx,8),%eax
lea    (%rax,%rbx,2),%eax
lea    (%r14,%rax,1),%ebx
lea    0x0(%r13,%r13,8),%eax
lea    0x0(%r13,%rax,4),%eax
shl    $0x6,%eax
lea    0x0(%r13,%r13,1),%edx
sub    %edx,%eax
add    %ebx,%eax
cmp    $0x2,%r15d
je     111dd <png_create_colormap_entry+0x70d>
add    $0x80,%eax
mov    %rax,%rdx
and    $0xffffff00,%edx
shr    $0x8,%eax
sub    %eax,%edx
add    $0x40,%edx
mov    %rdx,%rax
shr    $0x16,%eax
mov    %eax,%ebx
movzbl (%rbx,%rcx,1),%eax
and    $0x3fff80,%edx
shr    $0x7,%edx
imul   %edx,%eax
shr    $0xc,%eax
movzwl (%r8,%rbx,2),%ecx
lea    (%rax,%rcx,1),%r13d
and    $0xff00,%r13d
shr    $0x8,%r13d
mov    %r9,%rax
shl    $0x8,%eax
sub    %r9d,%eax
lea    0x807f(%rax),%r9d
shr    $0x10,%r9d
mov    $0x1,%eax
mov    %r13,%rdx
mov    %rdx,%rbx
jmpq   10dc5 <png_create_colormap_entry+0x2f5>
mov    %rdx,%rax
shl    $0x8,%eax
neg    %edx
add    %eax,%edx
mov    %rdx,%rax
shr    $0xf,%eax
mov    %eax,%r14d
movzbl (%r14,%rcx,1),%eax
and    $0x7fff,%edx
imul   %edx,%eax
shr    $0xc,%eax
movzwl (%r8,%r14,2),%edx
add    %eax,%edx
and    $0xff00,%edx
shr    $0x8,%edx
mov    %rbx,%rax
shl    $0x8,%eax
neg    %ebx
add    %eax,%ebx
mov    %rbx,%rax
shr    $0xf,%eax
mov    %eax,%r14d
movzbl (%r14,%rcx,1),%eax
and    $0x7fff,%ebx
imul   %ebx,%eax
shr    $0xc,%eax
movzwl (%r8,%r14,2),%ebx
add    %eax,%ebx
and    $0xff00,%ebx
shr    $0x8,%ebx
mov    %r13,%rax
shl    $0x8,%eax
sub    %r13d,%eax
mov    %rax,%r13
shr    $0xf,%r13d
mov    %r13d,%r13d
movzbl 0x0(%r13,%rcx,1),%ecx
and    $0x7fff,%eax
imul   %eax,%ecx
shr    $0xc,%ecx
movzwl (%r8,%r13,2),%eax
lea    (%rcx,%rax,1),%r13d
and    $0xff00,%r13d
shr    $0x8,%r13d
mov    %r9,%rax
shl    $0x8,%eax
sub    %r9d,%eax
lea    0x807f(%rax),%r9d
shr    $0x10,%r9d
mov    $0x1,%eax
jmpq   10dc5 <png_create_colormap_entry+0x2f5>
mov    $0x4,%ecx
pushq  -0x10(%rbp)
pushq  -0x28(%rbp)
pushq  -0x10(%rbp)
pushq  -0x20(%rbp)
pushq  -0x28(%rbp)
popq   -0x78(%rbp)
popq   -0x30(%rbp)
popq   -0x20(%rbp)
popq   -0x18(%rbp)
popq   -0x8(%rbp)
jmpq   10dfd <png_create_colormap_entry+0x32d>
test   %r8d,%r8d
je     11201 <png_create_colormap_entry+0x731>
cmp    $0x2,%r14d
je     111f8 <png_create_colormap_entry+0x728>
mov    %r10,%rbx
mov    -0x50(%rbp),%r13
mov    -0x58(%rbp),%r14
mov    -0x60(%rbp),%r15
leaveq 
retq   
cmp    $0x4,%r14d
je     11227 <png_create_colormap_entry+0x757>
mov    %r10,%rbx
mov    -0x50(%rbp),%r13
mov    -0x58(%rbp),%r14
mov    -0x60(%rbp),%r15
leaveq 
retq   
test   %r9d,%r9d
jne    11236 <png_create_colormap_entry+0x766>
xor    %r13d,%r13d
mov    %r13,%rdx
mov    %rdx,%rbx
jmpq   10f43 <png_create_colormap_entry+0x473>
mov    -0x78(%rbp),%rcx
mov    %r9b,(%rax,%rcx,1)
mov    -0x30(%rbp),%rcx
mov    %bl,(%rax,%rcx,1)
mov    %r10,%rbx
mov    -0x50(%rbp),%r13
mov    -0x58(%rbp),%r14
mov    -0x60(%rbp),%r15
leaveq 
retq   
mov    -0x30(%rbp),%rcx
test   %ecx,%ecx
jg     11284 <png_create_colormap_entry+0x7b4>
mov    $0x3,%esi
jmpq   11286 <png_create_colormap_entry+0x7b6>
lea    0x4000(%rax),%r13d
shr    $0xf,%r13d
mov    $0x2,%eax
mov    %r13,%rdx
mov    %rdx,%rbx
jmpq   10dc5 <png_create_colormap_entry+0x2f5>
mov    -0x18(%rbp),%rax
mov    %r9w,(%rsi,%rax,1)
cmp    $0xfffe,%r9d
jbe    1128f <png_create_colormap_entry+0x7bf>
mov    -0x8(%rbp),%rax
mov    %bx,(%rsi,%rax,1)
mov    %r10,%rbx
mov    -0x50(%rbp),%r13
mov    -0x58(%rbp),%r14
mov    -0x60(%rbp),%r15
leaveq 
retq   
mov    -0x30(%rbp),%rdi
test   %edi,%edi
jg     1129b <png_create_colormap_entry+0x7cb>
mov    $0x6,%eax
jmp    1129d <png_create_colormap_entry+0x7cd>
mov    %r9,%rax
imul   %edx,%eax
lea    0x7fff(%rax),%edx
mov    %r11,%rax
mul    %edx
mov    %rdx,%r8
shr    $0xf,%r8d
mov    %r9,%rax
imul   %ebx,%eax
lea    0x7fff(%rax),%edx
mov    %r11,%rax
mul    %edx
mov    %rdx,%rbx
shr    $0xf,%ebx
imul   %r13d,%r9d
lea    0x7fff(%r9),%edx
mov    %r11,%rax
mul    %edx
mov    %rdx,%r13
shr    $0xf,%r13d
mov    %r8,%rdx
jmpq   10f43 <png_create_colormap_entry+0x473>
xor    %esi,%esi
mov    %r9b,(%rax,%rsi,1)
jmpq   10e44 <png_create_colormap_entry+0x374>
test   %r9d,%r9d
jne    112a7 <png_create_colormap_entry+0x7d7>
xor    %ebx,%ebx
jmpq   1120e <png_create_colormap_entry+0x73e>
xor    %eax,%eax
mov    %r9w,(%rax,%rsi,1)
jmpq   10f36 <png_create_colormap_entry+0x466>
imul   %ebx,%r9d
lea    0x7fff(%r9),%ecx
mov    %r11,%rax
mul    %ecx
mov    %rdx,%rbx
shr    $0xf,%ebx
jmpq   1120e <png_create_colormap_entry+0x73e>
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   (%rax)

00000000000112d0 <make_gray_file_colormap>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %r13,-0x8(%rbp)
mov    %r14,-0x10(%rbp)
mov    %r15,-0x18(%rbp)
mov    %rdi,%r14
mov    $0xff,%r15d
xor    %r13d,%r13d
jmp    11314 <make_gray_file_colormap+0x44>
movl   $0x3,(%rsp)
mov    %r13,%rdx
mov    %r13,%rcx
mov    %r13,%r8
mov    %r14,%rdi
mov    %r13,%rsi
mov    %r15,%r9
callq  10ad0 <png_create_colormap_entry>
add    $0x1,%r13d
cmp    $0xff,%r13d
jbe    112f2 <make_gray_file_colormap+0x22>
mov    %r13,%rax
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
leaveq 
retq   
xchg   %ax,%ax

0000000000011330 <make_gray_colormap>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %r13,-0x8(%rbp)
mov    %r14,-0x10(%rbp)
mov    %r15,-0x18(%rbp)
mov    %rdi,%r14
mov    $0xff,%r15d
xor    %r13d,%r13d
jmp    11374 <make_gray_colormap+0x44>
movl   $0x1,(%rsp)
mov    %r13,%rdx
mov    %r13,%rcx
mov    %r13,%r8
mov    %r14,%rdi
mov    %r13,%rsi
mov    %r15,%r9
callq  10ad0 <png_create_colormap_entry>
add    $0x1,%r13d
cmp    $0xff,%r13d
jbe    11352 <make_gray_colormap+0x22>
mov    %r13,%rax
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
leaveq 
retq   
xchg   %ax,%ax

0000000000011390 <make_ga_colormap>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rbx,%r15
mov    %rdi,%rbx
mov    $0xff,%r14d
xor    %esi,%esi
mov    $0x46ed2901,%r13d
jmp    113f2 <make_ga_colormap+0x62>
sub    $0x10,%rsp
movl   $0x1,(%rsp)
mov    %rsi,%rax
shl    $0x8,%eax
lea    0x74(%rax),%ecx
mov    %r13,%rax
mul    %ecx
shr    $0x6,%edx
mov    %rdx,%rcx
mov    %rdx,%r8
mov    %rbx,%rdi
mov    %r14,%r9
callq  10ad0 <png_create_colormap_entry>
add    $0x10,%rsp
mov    %r12,%rsi
lea    0x1(%rsi),%r12d
cmp    $0xe6,%esi
jbe    113be <make_ga_colormap+0x2e>
mov    %r14,%rdx
sub    $0x10,%rsp
movl   $0x1,(%rsp)
mov    %rdx,%rcx
mov    %rdx,%r8
mov    %rbx,%rdi
xor    %r13d,%r13d
mov    %r13,%r9
callq  10ad0 <png_create_colormap_entry>
add    $0x10,%rsp
mov    $0x1,%eax
mov    $0x33,%r14d
mov    %r15,-0x8(%rbp)
jmp    1147b <make_ga_colormap+0xeb>
sub    $0x10,%rsp
movl   $0x1,(%rsp)
mov    %r15,%rcx
mov    %r15,%r8
mov    %rbx,%rdi
mov    %r12,%rsi
mov    %r15,%rdx
mov    %r14,%r9
callq  10ad0 <png_create_colormap_entry>
add    $0x10,%rsp
add    $0x1,%r12d
add    $0x33,%r15d
add    $0x1,%r13d
cmp    $0x5,%r13d
jbe    11435 <make_ga_colormap+0xa5>
mov    -0x30(%rbp),%rax
add    $0x1,%eax
add    $0x33,%r14d
xor    %r13d,%r13d
cmp    $0x4,%eax
jbe    11499 <make_ga_colormap+0x109>
mov    %r12,%rax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
mov    %rax,-0x30(%rbp)
mov    %r13,%r15
jmp    11467 <make_ga_colormap+0xd7>
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   (%rax)

00000000000114b0 <make_rgb_colormap>:
push   %rbp
mov    %rsp,%rbp
sub    $0x40,%rsp
mov    %rbx,-0x10(%rbp)
mov    %r12,-0x18(%rbp)
mov    %r13,-0x20(%rbp)
mov    %r14,-0x28(%rbp)
mov    %r15,-0x30(%rbp)
mov    %rdi,%rbx
xor    %r13d,%r13d
mov    $0xff,%r9d
mov    %r13,%rax
mov    %rax,%r12
mov    %r12,%r14
jmp    11540 <make_rgb_colormap+0x90>
sub    $0x10,%rsp
movl   $0x1,(%rsp)
mov    %rbx,%rdi
mov    %r12,%rsi
mov    %r14,%rdx
mov    %r15,%r8
callq  10ad0 <png_create_colormap_entry>
add    $0x10,%rsp
add    $0x1,%r12d
add    $0x33,%r15d
add    $0x1,%r13d
mov    $0xff,%r9d
mov    -0x8(%rbp),%rcx
cmp    $0x5,%r13d
jbe    114e3 <make_rgb_colormap+0x33>
add    $0x33,%ecx
mov    -0x40(%rbp),%rax
add    $0x1,%eax
xor    %r13d,%r13d
mov    %rcx,-0x8(%rbp)
cmp    $0x5,%eax
jbe    1155e <make_rgb_colormap+0xae>
mov    -0x38(%rbp),%rax
add    $0x1,%eax
add    $0x33,%r14d
cmp    $0x5,%eax
jbe    11567 <make_rgb_colormap+0xb7>
mov    %r12,%rax
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
mov    -0x10(%rbp),%rbx
leaveq 
retq   
mov    %rax,-0x40(%rbp)
mov    %r13,%r15
jmp    11519 <make_rgb_colormap+0x69>
mov    %rax,-0x38(%rbp)
mov    %r13,%rax
mov    %rax,%rcx
jmp    1152c <make_rgb_colormap+0x7c>
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

0000000000011580 <png_image_read_colormap>:
push   %rbp
mov    %rsp,%rbp
sub    $0x130,%rsp
mov    (%rdi),%rdx
mov    (%rdx),%rax
mov    (%rax),%rsi
mov    $0x1,%r8d
mov    %r8,-0x100(%rbp)
mov    $0x2,%r10d
mov    0x14(%rdx),%eax
mov    %rax,%rcx
and    $0x4,%ecx
test   %ecx,%ecx
jne    115b7 <png_image_read_colormap+0x37>
mov    %r8,%r10
xor    %r9d,%r9d
mov    %r9,-0xb8(%rbp)
mov    $0xff,%r11d
mov    %r11,-0x88(%rbp)
mov    $0xffff,%r8d
mov    %r8,-0x80(%rbp)
movzbl 0x267(%rsi),%ecx
and    $0x4,%ecx
test   %ecx,%ecx
jg     11608 <png_image_read_colormap+0x88>
movzwl 0x260(%rsi),%ecx
test   %cx,%cx
jne    11608 <png_image_read_colormap+0x88>
cmp    $0x2,%r10d
je     1162c <png_image_read_colormap+0xac>
mov    %r14,-0x30(%rbp)
mov    %r15,-0x38(%rbp)
mov    %r11,%r8
mov    %r8,%r9
jmp    1163a <png_image_read_colormap+0xba>
mov    %rax,%rcx
and    $0x1,%ecx
test   %ecx,%ecx
jne    115f2 <png_image_read_colormap+0x72>
cmp    $0x2,%r10d
jne    1170c <png_image_read_colormap+0x18c>
mov    %r14,-0x30(%rbp)
mov    %r15,-0x38(%rbp)
mov    %r9,%r8
mov    %r8,%r11
jmp    1163a <png_image_read_colormap+0xba>
mov    %r14,-0x30(%rbp)
mov    %r15,-0x38(%rbp)
mov    %r8,%r9
mov    %r9,%r11
mov    %r9,-0xe0(%rbp)
mov    %r11,-0xd8(%rbp)
mov    %r8,-0xd0(%rbp)
movzwl 0x4e2(%rsi),%ecx
and    $0x1,%ecx
test   %ecx,%ecx
jne    1168c <png_image_read_colormap+0x10c>
mov    $0xb18f,%r14d
movzbl 0x268(%rsi),%ecx
cmp    $0x10,%cl
je     1173f <png_image_read_colormap+0x1bf>
movzwl 0x4e2(%rsi),%ecx
or     $0x1,%cx
mov    %cx,0x4e2(%rsi)
mov    %r14d,0x498(%rsi)
movzbl 0x267(%rsi),%r14d
cmp    $0x6,%r14b
ja     11758 <png_image_read_colormap+0x1d8>
lea    0x1ace7(%rip),%rcx        # 2c38c <png_sRGB_base>
lea    0x1b0e0(%rip),%r15        # 2c78c <png_sRGB_delta>
mov    %r13,-0x28(%rbp)
lea    0x1aad5(%rip),%r13        # 2c18c <png_sRGB_table>
mov    %r13,-0x90(%rbp)
mov    %r11d,%r13d
mov    %r13,-0x98(%rbp)
mov    $0x3,%r13d
mov    %r13,-0xb0(%rbp)
lea    0x1c23c(%rip),%r13        # 2d918 <png_pass_yinc.24+0x21>
movslq 0x0(%r13,%r14,4),%r13
mov    %r12,-0x20(%rbp)
lea    0x1c22c(%rip),%r12        # 2d918 <png_pass_yinc.24+0x21>
add    %r13,%r12
jmpq   *%r12
movzwl 0x260(%rsi),%r15d
test   %r15w,%r15w
jne    118d4 <png_image_read_colormap+0x354>
xor    %r14d,%r14d
jmpq   118db <png_image_read_colormap+0x35b>
mov    0x20(%rdi),%r8
test   %r8,%r8
je     11955 <png_image_read_colormap+0x3d5>
movzbl 0x1(%r8),%r11d
mov    %rax,%rcx
and    $0x2,%ecx
test   %ecx,%ecx
jne    11964 <png_image_read_colormap+0x3e4>
mov    %r14,-0x30(%rbp)
mov    %r15,-0x38(%rbp)
mov    %r11,%r8
mov    %r8,%r9
jmpq   1163a <png_image_read_colormap+0xba>
mov    0x18(%rdx),%ecx
and    $0x4,%ecx
test   %ecx,%ecx
jne    11673 <png_image_read_colormap+0xf3>
mov    $0x186a0,%r14d
jmpq   11673 <png_image_read_colormap+0xf3>
mov    %rsi,%rdi
lea    0x1c8eb(%rip),%rsi        # 2e04d <chunks_to_process.34+0x248>
callq  5470 <png_error@plt>
movzbl 0x268(%rsi),%r12d
cmp    $0x8,%r12b
jbe    1197a <png_image_read_colormap+0x3fa>
mov    0x1c(%rdx),%r8d
cmp    $0xff,%r8d
jbe    119e5 <png_image_read_colormap+0x465>
mov    %rdi,%r8
mov    %rdi,-0x58(%rbp)
mov    %r15,-0x100(%rbp)
mov    %rcx,-0x78(%rbp)
mov    %rdx,-0x50(%rbp)
mov    %rbx,-0x8(%rbp)
mov    %r8,%rdi
mov    %rax,%rbx
mov    %r11,%r12
mov    %r9,%r13
mov    %rsi,%r14
mov    %r10,%r15
callq  11330 <make_gray_colormap>
movzwl 0x260(%r14),%ecx
test   %cx,%cx
jne    119f4 <png_image_read_colormap+0x474>
mov    %rax,%r13
mov    -0x8(%rbp),%r11
mov    -0x50(%rbp),%r15
mov    -0x58(%rbp),%rbx
mov    $0x100,%r10d
xor    %r12d,%r12d
mov    $0x1,%edx
mov    %rdx,%rsi
mov    %r12,%rax
mov    %rax,%rcx
jmpq   11a9b <png_image_read_colormap+0x51b>
mov    %rax,%r12
and    $0x1,%r12d
test   %r12d,%r12d
jne    11a5b <png_image_read_colormap+0x4db>
and    $0x2,%eax
test   %eax,%eax
je     11b12 <png_image_read_colormap+0x592>
cmp    %r9d,%r11d
jne    11820 <png_image_read_colormap+0x2a0>
cmp    %r9d,%r8d
je     11b12 <png_image_read_colormap+0x592>
mov    0x1c(%rdx),%eax
cmp    $0xff,%eax
jbe    11b5f <png_image_read_colormap+0x5df>
mov    $0x46ed2901,%r14d
mov    %r10,-0x100(%rbp)
mov    %rsi,-0x50(%rbp)
mov    %r15,-0x88(%rbp)
mov    %rcx,-0x80(%rbp)
mov    %rbx,-0x10(%rbp)
mov    %rdx,%rbx
mov    %rdi,%r15
xor    %esi,%esi
mov    $0xff,%r12d
jmpq   11b9a <png_image_read_colormap+0x61a>
mov    %rax,%r12
and    $0x2,%r12d
test   %r12d,%r12d
je     11c3a <png_image_read_colormap+0x6ba>
cmp    $0x6,%r14b
je     11d1d <png_image_read_colormap+0x79d>
movzwl 0x260(%rsi),%r12d
test   %r12w,%r12w
jne    11d1d <png_image_read_colormap+0x79d>
mov    0x1c(%rdx),%eax
cmp    $0xd7,%eax
jbe    11dbc <png_image_read_colormap+0x83c>
mov    %rbx,%r13
mov    %rsi,%r14
mov    %rdx,%r15
mov    %rdi,%rbx
callq  114b0 <make_rgb_colormap>
mov    %rbx,-0x58(%rbp)
mov    %r13,%r11
mov    %rax,%r13
mov    $0x100,%r10d
mov    $0x3,%ecx
xor    %r12d,%r12d
mov    $0x1,%edx
mov    %rdx,%rsi
mov    %r12,%rax
jmpq   11a9b <png_image_read_colormap+0x51b>
mov    0x2e8(%rsi),%r14
mov    0x250(%rsi),%rcx
mov    %rcx,-0xf8(%rbp)
test   %r14,%r14
je     11901 <png_image_read_colormap+0x381>
and    $0x1,%eax
test   %eax,%eax
jne    11901 <png_image_read_colormap+0x381>
pushq  -0x100(%rbp)
popq   -0xb8(%rbp)
test   %r14,%r14
jne    11909 <png_image_read_colormap+0x389>
xor    %r15d,%r15d
movzwl 0x258(%rsi),%r13d
cmp    $0x100,%r13w
jbe    1191f <png_image_read_colormap+0x39f>
mov    $0x100,%r13d
cmp    0x1c(%rdx),%r13d
ja     11dcb <png_image_read_colormap+0x84b>
mov    %rsi,-0xb0(%rbp)
mov    %rdx,-0x70(%rbp)
mov    %rbx,-0x88(%rbp)
mov    %rdi,%rbx
mov    -0xb8(%rbp),%rax
mov    $0x3,%esi
xor    %r12d,%r12d
mov    %r12,%rdx
jmpq   11e45 <png_image_read_colormap+0x8c5>
mov    %rsi,%rdi
lea    0x1c524(%rip),%rsi        # 2de83 <chunks_to_process.34+0x7e>
callq  5470 <png_error@plt>
movzbl (%r8),%r9d
movzbl 0x2(%r8),%r8d
mov    %r14,-0x30(%rbp)
mov    %r15,-0x38(%rbp)
jmpq   1163a <png_image_read_colormap+0xba>
mov    %r12,%rcx
mov    %rbx,%r14
mov    %rdi,%rbx
mov    $0x1,%r13d
shl    %cl,%r13d
cmp    0x1c(%rdx),%r13d
ja     11e8a <png_image_read_colormap+0x90a>
mov    %rax,%rdi
mov    %rdx,%r15
lea    -0x1(%r13),%ecx
xor    %edx,%edx
mov    $0xff,%r12d
mov    %r12,%rax
div    %ecx
movzwl 0x260(%rsi),%ecx
test   %cx,%cx
jne    11e99 <png_image_read_colormap+0x919>
mov    %rsi,-0x98(%rbp)
mov    %r15,-0x88(%rbp)
mov    %r14,-0x8(%rbp)
mov    %rax,%r14
mov    $0x100,%ecx
xor    %r12d,%r12d
mov    %r12,%rax
mov    %rax,%r15
jmpq   11f37 <png_image_read_colormap+0x9b7>
mov    %rsi,%rdi
lea    0x1c4f6(%rip),%rsi        # 2dee5 <chunks_to_process.34+0xe0>
callq  5470 <png_error@plt>
and    $0x1,%ebx
test   %ebx,%ebx
je     11f84 <png_image_read_colormap+0xa04>
mov    -0xd0(%rbp),%r8
pushq  -0xb8(%rbp)
popq   -0x88(%rbp)
mov    %r15d,(%rsp)
mov    %r12,%rcx
mov    %r13,%rdx
mov    %rax,%r13
mov    $0xfe,%r15d
mov    -0x58(%rbp),%rbx
mov    %rbx,%rdi
mov    %r15,%rsi
mov    -0x88(%rbp),%r9
callq  10ad0 <png_create_colormap_entry>
mov    %r15,%r10
mov    -0x8(%rbp),%r11
mov    -0x50(%rbp),%r15
xor    %r12d,%r12d
mov    $0x1,%edx
mov    $0x2,%ecx
mov    %rdx,%rax
mov    %rax,%rsi
jmp    11a9b <png_image_read_colormap+0x51b>
mov    0x1c(%rdx),%eax
cmp    $0xff,%eax
jbe    11fac <png_image_read_colormap+0xa2c>
mov    %rbx,%r13
mov    %rsi,%r14
mov    %rdx,%r15
mov    %rdi,%rbx
callq  11390 <make_ga_colormap>
mov    %rbx,-0x58(%rbp)
mov    %r13,%r11
mov    %rax,%r13
mov    $0xe7,%r10d
xor    %r12d,%r12d
mov    $0x1,%edx
mov    %rdx,%rcx
mov    %rcx,%rsi
mov    %r12,%rax
test   %eax,%eax
jle    11af1 <png_image_read_colormap+0x571>
movzwl 0x260(%r14),%eax
test   %ax,%ax
je     11af1 <png_image_read_colormap+0x571>
movzbl 0x267(%r14),%eax
and    $0x4,%eax
test   %eax,%eax
jne    11af1 <png_image_read_colormap+0x571>
mov    %r14,%rdi
mov    %r11,-0x8(%rbp)
mov    %r10,-0x100(%rbp)
mov    %rcx,%rbx
mov    %rsi,%r12
callq  58b0 <png_set_tRNS_to_alpha@plt>
mov    %rbx,%rcx
mov    %r12,%rsi
mov    -0x100(%rbp),%r10
mov    -0x8(%rbp),%r11
mov    -0x58(%rbp),%rbx
xor    %r12d,%r12d
mov    $0x1,%edx
cmp    $0x1,%esi
je     11fbb <png_image_read_colormap+0xa3b>
cmp    $0x3,%esi
je     11fee <png_image_read_colormap+0xa6e>
mov    %r14,%rdi
lea    0x1c557(%rip),%rsi        # 2e064 <chunks_to_process.34+0x25f>
callq  5470 <png_error@plt>
mov    0x1c(%rdx),%eax
cmp    $0xff,%eax
jbe    12041 <png_image_read_colormap+0xac1>
mov    %rdi,%rax
mov    %rdi,-0x58(%rbp)
mov    %rdx,-0x100(%rbp)
mov    %rbx,-0x10(%rbp)
mov    %rax,%rdi
mov    %rcx,%rbx
mov    %r10,%r12
mov    %r11,%r13
mov    %rsi,%r14
callq  11330 <make_gray_colormap>
cmp    $0x2,%r12d
je     12050 <png_image_read_colormap+0xad0>
mov    %r13,%r12
mov    %rax,%r13
mov    -0x58(%rbp),%rbx
jmpq   120ad <png_image_read_colormap+0xb2d>
mov    %rsi,%rdi
lea    0x1c3ec(%rip),%rsi        # 2df55 <chunks_to_process.34+0x150>
callq  5470 <png_error@plt>
movl   $0x1,(%rsp)
mov    %rsi,%rax
shl    $0x8,%eax
lea    0x74(%rax),%ecx
mov    %r14,%rax
mul    %ecx
shr    $0x6,%edx
mov    %rdx,%rcx
mov    %rdx,%r8
mov    %r15,%rdi
mov    %r12,%r9
callq  10ad0 <png_create_colormap_entry>
mov    %r13,%rsi
lea    0x1(%rsi),%r13d
cmp    $0xe6,%esi
jbe    11b6e <png_image_read_colormap+0x5ee>
mov    -0x100(%rbp),%rax
cmp    $0x2,%eax
jne    11bb8 <png_image_read_colormap+0x638>
mov    $0xffff,%r12d
mov    %eax,(%rsp)
mov    %r15,%rdi
mov    %rsi,%r9
mov    -0xe0(%rbp),%r14
mov    %r14,%rdx
mov    -0xd8(%rbp),%r10
mov    %r10,%rcx
mov    %rbx,-0x48(%rbp)
mov    -0xd0(%rbp),%rbx
mov    %rbx,%r8
mov    %r15,-0x58(%rbp)
mov    %rsi,-0x40(%rbp)
mov    %r9,%rsi
mov    %r12,%r9
mov    %r10,%r12
mov    %rbx,%r15
mov    %rax,%rbx
callq  10ad0 <png_create_colormap_entry>
cmp    $0x1,%ebx
je     12117 <png_image_read_colormap+0xb97>
mov    %r15,%rax
mov    %r12,%r9
mov    %r14,%r10
mov    -0x80(%rbp),%rdi
mov    -0x88(%rbp),%rsi
mov    -0x58(%rbp),%rbx
mov    -0x90(%rbp),%r14
xor    %r12d,%r12d
mov    $0xff,%ecx
mov    $0x1,%r11d
jmpq   12268 <png_image_read_colormap+0xce8>
mov    $0xffffffffffffffff,%r12
mov    %r12,%r9
mov    %rsi,%r11
mov    $0x1,%r8d
mov    %r15,-0xe0(%rbp)
mov    %rcx,-0xd0(%rbp)
mov    %rbx,-0x18(%rbp)
mov    %r9,%rcx
mov    %rdi,%rbx
mov    %r11,%rdi
mov    %rax,%r13
mov    %rsi,%r14
mov    %r8,%rsi
mov    %rdx,%r15
mov    %r12,%rdx
mov    %r10,%r12
callq  55b0 <png_set_rgb_to_gray_fixed@plt>
movzbl 0x267(%r14),%eax
cmp    $0x6,%al
je     11c98 <png_image_read_colormap+0x718>
movzwl 0x260(%r14),%eax
test   %ax,%ax
je     11ca5 <png_image_read_colormap+0x725>
and    $0x1,%r13d
test   %r13d,%r13d
jne    12295 <png_image_read_colormap+0xd15>
mov    0x1c(%r15),%eax
cmp    $0xff,%eax
jbe    122d3 <png_image_read_colormap+0xd53>
movzbl 0x267(%r14),%eax
cmp    $0x6,%al
jne    122e2 <png_image_read_colormap+0xd62>
movslq 0x498(%r14),%rdi
callq  106c0 <png_gamma_not_sRGB>
test   %eax,%eax
jne    122f8 <png_image_read_colormap+0xd78>
mov    %rbx,%rdi
callq  11330 <make_gray_colormap>
mov    %rax,%r13
movzbl 0x267(%r14),%eax
cmp    $0x6,%al
jne    12314 <png_image_read_colormap+0xd94>
mov    -0x100(%rbp),%r10
cmp    $0x3,%r10d
je     1234d <png_image_read_colormap+0xdcd>
cmp    $0x2,%r12d
je     12363 <png_image_read_colormap+0xde3>
mov    %r10,%r12
mov    -0xd8(%rbp),%rax
jmpq   1244e <png_image_read_colormap+0xece>
mov    $0x80,%r14d
mov    %rax,%r12
and    $0x1,%r12d
test   %r12d,%r12d
jne    124ae <png_image_read_colormap+0xf2e>
mov    0x1c(%rdx),%r12d
cmp    $0xf3,%r12d
jbe    12518 <png_image_read_colormap+0xf98>
mov    %rdi,%r12
mov    %rsi,-0xa8(%rbp)
mov    %rax,-0xc8(%rbp)
mov    %r15,-0x100(%rbp)
mov    %rcx,-0xf8(%rbp)
mov    %rdx,-0x68(%rbp)
mov    %rbx,-0x40(%rbp)
mov    %rdi,%rbx
mov    %r12,%rdi
mov    %r8,%r12
mov    %r10,%r13
mov    %r11,%r14
mov    %r9,%r15
callq  114b0 <make_rgb_colormap>
mov    %rax,%rsi
mov    %rsi,-0xc0(%rbp)
mov    %r13d,(%rsp)
mov    %rbx,%rdi
mov    %r15,%rdx
mov    %r14,%rcx
mov    %r12,%r8
xor    %r9d,%r9d
callq  10ad0 <png_create_colormap_entry>
cmp    $0x2,%r13d
je     12527 <png_image_read_colormap+0xfa7>
mov    %r14,%rax
mov    %rax,%rcx
mov    %r15,%rdx
jmpq   125c8 <png_image_read_colormap+0x1048>
mov    %rsi,%rdi
lea    0x1c245(%rip),%rsi        # 2e00b <chunks_to_process.34+0x206>
callq  5470 <png_error@plt>
mov    %rsi,%rdi
lea    0x1c255(%rip),%rsi        # 2e02a <chunks_to_process.34+0x225>
callq  5470 <png_error@plt>
movzbl (%r14,%rdi,1),%r9d
movl   $0x3,(%rsp)
mov    %rbx,%rdi
mov    %rdx,%rsi
mov    %r10,-0xf0(%rbp)
mov    %rbx,-0x100(%rbp)
mov    %r12,%rcx
mov    %rdx,%r12
mov    %r11,%rdx
mov    %rax,%rbx
callq  10ad0 <png_create_colormap_entry>
mov    %rbx,%rax
mov    -0x100(%rbp),%rbx
mov    -0xf0(%rbp),%r10
lea    0x1(%r12),%edx
mov    -0xf8(%rbp),%rcx
mov    -0xd0(%rbp),%r8
mov    -0xd8(%rbp),%r11
mov    -0xe0(%rbp),%r9
mov    $0x3,%esi
xor    %r12d,%r12d
cmp    %r13d,%edx
jb     126c3 <png_image_read_colormap+0x1143>
mov    -0xb0(%rbp),%r14
movzbl 0x268(%r14),%eax
cmp    $0x7,%al
jbe    127a5 <png_image_read_colormap+0x1225>
mov    %rbx,-0x58(%rbp)
mov    -0x88(%rbp),%r11
mov    -0x70(%rbp),%r15
mov    $0x100,%r10d
mov    $0x1,%edx
mov    %r12,%rax
mov    %rax,%rcx
jmpq   11a9b <png_image_read_colormap+0x51b>
mov    %rsi,%rdi
lea    0x1c02e(%rip),%rsi        # 2dec2 <chunks_to_process.34+0xbd>
callq  5470 <png_error@plt>
movzwl 0x2f8(%rsi),%ecx
and    $0x1,%edi
test   %edi,%edi
je     127d8 <png_image_read_colormap+0x1258>
mov    %rsi,-0x98(%rbp)
mov    %r15,-0x88(%rbp)
mov    %r14,-0x8(%rbp)
mov    %rax,%r14
xor    %r12d,%r12d
mov    %r12,%rax
mov    %rax,%r15
jmp    11f37 <png_image_read_colormap+0x9b7>
movl   $0x3,(%rsp)
mov    %r15,%r11
mov    %r15,%r8
mov    %rbx,%rdi
mov    %rax,%rsi
mov    %r15,%rdx
mov    $0xff,%r9d
mov    %r10,-0xa8(%rbp)
mov    %rbx,-0xa0(%rbp)
mov    %rcx,-0x100(%rbp)
mov    %r11,%rcx
mov    %rax,%rbx
callq  10ad0 <png_create_colormap_entry>
lea    0x1(%rbx),%eax
add    %r14d,%r15d
mov    -0x100(%rbp),%rcx
mov    -0xa0(%rbp),%rbx
mov    -0xd0(%rbp),%r8
mov    -0xa8(%rbp),%r10
mov    -0xd8(%rbp),%r11
mov    -0xe0(%rbp),%r9
cmp    %r13d,%eax
jb     12802 <png_image_read_colormap+0x1282>
mov    -0x98(%rbp),%r14
movzbl 0x268(%r14),%eax
cmp    $0x7,%al
jbe    12845 <png_image_read_colormap+0x12c5>
mov    %rbx,-0x58(%rbp)
mov    -0x8(%rbp),%r11
mov    -0x88(%rbp),%r15
mov    $0x100,%r10d
mov    $0x3,%esi
xor    %r12d,%r12d
mov    $0x1,%edx
mov    %r12,%rax
mov    %rax,%rcx
jmpq   11a9b <png_image_read_colormap+0x51b>
cmp    %r13d,%r12d
je     1287a <png_image_read_colormap+0x12fa>
mov    -0xd0(%rbp),%r8
cmp    $0x2,%r15d
jne    11a12 <png_image_read_colormap+0x492>
pushq  -0x80(%rbp)
popq   -0x88(%rbp)
jmpq   11a12 <png_image_read_colormap+0x492>
mov    %rsi,%rdi
lea    0x1bf53(%rip),%rsi        # 2df09 <chunks_to_process.34+0x104>
callq  5470 <png_error@plt>
mov    $0x35b60,%edx
mov    %r14,%rdi
mov    %r11,-0x100(%rbp)
mov    %r12,%rsi
mov    %rcx,%r12
mov    %r10,%rbx
callq  5640 <png_set_alpha_mode_fixed@plt>
mov    %r12,%rcx
mov    %rbx,%r10
mov    -0x100(%rbp),%r11
mov    -0x58(%rbp),%rbx
mov    $0x1,%edx
movzbl 0x268(%r14),%eax
cmp    $0x8,%al
jbe    12025 <png_image_read_colormap+0xaa5>
mov    %r14,%rdi
mov    %r11,-0x100(%rbp)
mov    %rcx,%rbx
mov    %r10,%r12
callq  58d0 <png_set_scale_16@plt>
mov    %rbx,%rcx
mov    %r12,%r10
mov    -0x100(%rbp),%r11
mov    -0x58(%rbp),%rbx
mov    $0x1,%edx
cmp    $0x100,%r13d
jbe    128a3 <png_image_read_colormap+0x1323>
mov    %r14,%rdi
lea    0x1c049(%rip),%rsi        # 2e085 <chunks_to_process.34+0x280>
callq  5470 <png_error@plt>
mov    %rsi,%rdi
lea    0x1bee4(%rip),%rsi        # 2df2f <chunks_to_process.34+0x12a>
callq  5470 <png_error@plt>
mov    %r13,%rsi
shl    $0x8,%esi
sub    %r13d,%esi
mov    %rsi,%rcx
shr    $0xf,%ecx
mov    %ecx,%edx
movzbl (%rdx,%r15,1),%ecx
and    $0x7fff,%esi
imul   %esi,%ecx
shr    $0xc,%ecx
movzwl (%rbx,%rdx,2),%edx
movl   $0x2,(%rsp)
lea    (%rcx,%rdx,1),%r12d
and    $0xff00,%r12d
shr    $0x8,%r12d
mov    %r13,%rdx
mov    %rax,%r13
mov    %rdx,%rcx
mov    %rdx,%r8
mov    -0x58(%rbp),%rbx
mov    %rbx,%rdi
mov    %r12,%rsi
mov    $0xffff,%r9d
callq  10ad0 <png_create_colormap_entry>
movb   $0x0,-0x11e(%rbp)
mov    %r12w,-0x118(%rbp)
mov    %r12w,-0x11a(%rbp)
mov    %r12w,-0x11c(%rbp)
mov    %r12w,-0x116(%rbp)
lea    -0x11e(%rbp),%rsi
xor    %r12d,%r12d
mov    %r12,%r8
mov    %r14,%rdi
mov    $0x1,%r15d
mov    %r15,%rdx
mov    %r12,%rcx
callq  5320 <png_set_background_fixed@plt>
mov    %r15,%rsi
mov    -0x10(%rbp),%r11
mov    -0x100(%rbp),%r15
mov    $0x100,%r10d
mov    %rsi,%rdx
mov    %r12,%rax
mov    %rax,%rcx
jmpq   11a9b <png_image_read_colormap+0x51b>
mov    %r14d,%eax
mov    -0x90(%rbp),%r14
movzwl (%r14,%rax,2),%r10d
mov    -0x98(%rbp),%rax
movzwl (%r14,%rax,2),%r9d
mov    %r15d,%eax
movzwl (%r14,%rax,2),%eax
mov    -0x80(%rbp),%rdi
mov    -0x88(%rbp),%rsi
mov    -0x58(%rbp),%rbx
xor    %r12d,%r12d
mov    $0xff,%ecx
mov    $0x1,%r11d
jmpq   12268 <png_image_read_colormap+0xce8>
mov    %eax,%ecx
movzwl (%r14,%rcx,2),%r10d
imul   %r15d,%r10d
add    %r10d,%edx
mov    %rdx,%rcx
shr    $0xf,%ecx
mov    %ecx,%r11d
movzbl (%r11,%rsi,1),%ecx
and    $0x7fff,%edx
imul   %edx,%ecx
shr    $0xc,%ecx
movzwl (%rdi,%r11,2),%edx
add    %ecx,%edx
and    $0xff00,%edx
shr    $0x8,%edx
add    %r10d,%r9d
mov    %r9,%rcx
shr    $0xf,%ecx
mov    %ecx,%r11d
movzbl (%r11,%rsi,1),%ecx
and    $0x7fff,%r9d
imul   %r9d,%ecx
shr    $0xc,%ecx
movzwl (%rdi,%r11,2),%r9d
add    %r9d,%ecx
and    $0xff00,%ecx
shr    $0x8,%ecx
add    %r10d,%r8d
mov    %r8,%r9
shr    $0xf,%r9d
mov    %r9d,%r9d
movzbl (%r9,%rsi,1),%esi
and    $0x7fff,%r8d
imul   %r8d,%esi
shr    $0xc,%esi
movzwl (%rdi,%r9,2),%edi
movl   $0x1,(%rsp)
lea    (%rsi,%rdi,1),%r8d
and    $0xff00,%r8d
shr    $0x8,%r8d
mov    %rbx,%rdi
mov    %rax,%rbx
mov    %r13,%rsi
mov    $0xff,%r9d
callq  10ad0 <png_create_colormap_entry>
lea    0x33(%rbx),%eax
add    $0x1,%r13d
add    $0x1,%r12d
mov    -0x90(%rbp),%r8
mov    -0x70(%rbp),%r9
mov    -0x60(%rbp),%rdx
mov    -0x80(%rbp),%rdi
mov    -0x88(%rbp),%rsi
mov    -0x58(%rbp),%rbx
mov    $0xff,%ecx
cmp    $0x5,%r12d
jbe    1215c <png_image_read_colormap+0xbdc>
mov    -0x100(%rbp),%rax
lea    0x1(%rax),%r11d
mov    -0xd8(%rbp),%rax
mov    -0x68(%rbp),%r10
mov    -0x78(%rbp),%r9
xor    %r12d,%r12d
cmp    $0x4,%r11d
jbe    128c9 <png_image_read_colormap+0x1349>
mov    -0x40(%rbp),%r10
mov    -0x10(%rbp),%r11
mov    -0x48(%rbp),%r15
mov    -0x50(%rbp),%r14
mov    $0x1,%edx
mov    %rdx,%rcx
mov    %rcx,%rsi
mov    %r12,%rax
jmpq   11a9b <png_image_read_colormap+0x51b>
mov    0x1c(%r15),%eax
cmp    $0xff,%eax
jbe    12918 <png_image_read_colormap+0x1398>
mov    %rbx,%rdi
callq  11390 <make_ga_colormap>
mov    %rbx,-0x58(%rbp)
mov    %rax,%r13
mov    -0x18(%rbp),%r11
mov    $0xe7,%r10d
xor    %r12d,%r12d
mov    $0x1,%edx
mov    %rdx,%rax
mov    %rax,%rcx
mov    %rcx,%rsi
jmpq   11a9b <png_image_read_colormap+0x51b>
mov    %r14,%rdi
lea    0x1bcbf(%rip),%rsi        # 2df9c <chunks_to_process.34+0x197>
callq  5470 <png_error@plt>
movzwl 0x260(%r14),%eax
test   %ax,%ax
jne    11cc4 <png_image_read_colormap+0x744>
jmpq   11cd8 <png_image_read_colormap+0x758>
mov    %rbx,%rdi
callq  112d0 <make_gray_file_colormap>
mov    %rax,%r13
pushq  -0xb0(%rbp)
popq   -0x100(%rbp)
jmpq   11ce3 <png_image_read_colormap+0x763>
movzwl 0x260(%r14),%eax
test   %ax,%ax
jne    11cf3 <png_image_read_colormap+0x773>
mov    %rbx,-0x58(%rbp)
mov    -0x100(%rbp),%rsi
mov    -0x18(%rbp),%r11
mov    $0x100,%r10d
xor    %r12d,%r12d
mov    $0x1,%edx
mov    %r12,%rax
mov    %rax,%rcx
jmpq   11a9b <png_image_read_colormap+0x51b>
cmp    $0x1,%r12d
je     123de <png_image_read_colormap+0xe5e>
mov    -0xd8(%rbp),%rdi
jmpq   123f0 <png_image_read_colormap+0xe70>
mov    -0xd8(%rbp),%rdx
mov    %rdx,%rax
shl    $0x8,%eax
sub    %edx,%eax
mov    %rax,%rcx
shr    $0xf,%ecx
mov    %ecx,%esi
mov    -0xe0(%rbp),%rcx
movzbl (%rsi,%rcx,1),%ecx
and    $0x7fff,%eax
imul   %eax,%ecx
shr    $0xc,%ecx
mov    -0xd0(%rbp),%rax
movzwl (%rax,%rsi,2),%eax
movl   $0x2,(%rsp)
lea    (%rcx,%rax,1),%r12d
and    $0xff00,%r12d
shr    $0x8,%r12d
mov    %rdx,%rcx
mov    %rdx,%r8
mov    %rbx,%rdi
mov    %r12,%rsi
xor    %r9d,%r9d
mov    %rbx,-0x100(%rbp)
mov    %r12,%rbx
mov    %r10,%r12
callq  10ad0 <png_create_colormap_entry>
mov    %rbx,%rax
mov    -0x100(%rbp),%rbx
jmp    1244e <png_image_read_colormap+0xece>
mov    -0x98(%rbp),%rcx
mov    -0x90(%rbp),%rax
movzwl (%rax,%rcx,2),%edi
movslq 0x498(%r14),%rsi
mov    %r15,-0x100(%rbp)
mov    %r10,%r15
callq  8b80 <png_gamma_16bit_correct>
mov    %r12d,(%rsp)
movzwl %ax,%ecx
mov    %rcx,%rax
shl    $0x8,%eax
sub    %ecx,%eax
lea    0x807f(%rax),%r12d
shr    $0x10,%r12d
mov    %r15,%rax
mov    %r12,%r15
mov    %rax,%r12
mov    -0xd8(%rbp),%rdx
mov    %rdx,%rcx
mov    %rdx,%r8
mov    %rbx,%rdi
mov    %r15,%rsi
xor    %r9d,%r9d
callq  10ad0 <png_create_colormap_entry>
mov    %r15,%rax
mov    -0x100(%rbp),%r15
movb   $0x0,-0x114(%rbp)
mov    %ax,-0x10e(%rbp)
mov    %ax,-0x110(%rbp)
mov    %ax,-0x112(%rbp)
mov    %ax,-0x10c(%rbp)
lea    -0x114(%rbp),%rsi
xor    %ecx,%ecx
mov    %rcx,%r8
mov    %r14,%rdi
mov    $0x1,%edx
callq  5320 <png_set_background_fixed@plt>
mov    %rbx,-0x58(%rbp)
mov    %r12,%rsi
mov    -0x18(%rbp),%r11
mov    $0x100,%r10d
xor    %r12d,%r12d
mov    $0x1,%edx
mov    %rdx,%rax
mov    %r12,%rcx
jmpq   11a9b <png_image_read_colormap+0x51b>
mov    0x1c(%rdx),%eax
cmp    $0xf3,%eax
jbe    12927 <png_image_read_colormap+0x13a7>
mov    %rdx,%r12
mov    %rbx,%r13
mov    %rsi,%r15
mov    %rdi,%rbx
callq  114b0 <make_rgb_colormap>
mov    %rax,-0x48(%rbp)
movl   $0x1,(%rsp)
mov    $0xff,%edx
mov    %rdx,%rcx
mov    %rdx,%r8
mov    %rbx,%rdi
mov    %rax,%rsi
xor    %r10d,%r10d
mov    %r10,%r9
mov    %r12,-0x60(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r10,%r12
mov    %rax,%r13
callq  10ad0 <png_create_colormap_entry>
add    $0x1,%r13d
mov    %r15,-0x100(%rbp)
mov    %r14,%r9
mov    %r12,%r15
jmpq   12985 <png_image_read_colormap+0x1405>
mov    %rsi,%rdi
lea    0x1bac4(%rip),%rsi        # 2dfe6 <chunks_to_process.34+0x1e1>
callq  5470 <png_error@plt>
mov    %r12,%rax
shl    $0x8,%eax
sub    %r12d,%eax
mov    %rax,%rcx
shr    $0xf,%ecx
mov    %ecx,%edx
mov    -0x100(%rbp),%r9
movzbl (%rdx,%r9,1),%ecx
and    $0x7fff,%eax
imul   %eax,%ecx
shr    $0xc,%ecx
mov    -0xf8(%rbp),%rdi
movzwl (%rdi,%rdx,2),%eax
add    %eax,%ecx
and    $0xff00,%ecx
shr    $0x8,%ecx
mov    %r14,%rdx
shl    $0x8,%edx
sub    %r14d,%edx
mov    %rdx,%rax
shr    $0xf,%eax
mov    %eax,%esi
movzbl (%rsi,%r9,1),%eax
and    $0x7fff,%edx
imul   %edx,%eax
shr    $0xc,%eax
movzwl (%rdi,%rsi,2),%edx
add    %edx,%eax
and    $0xff00,%eax
shr    $0x8,%eax
mov    %r15,%rsi
shl    $0x8,%esi
sub    %r15d,%esi
mov    %rsi,%rdx
shr    $0xf,%edx
mov    %edx,%r8d
movzbl (%r8,%r9,1),%edx
and    $0x7fff,%esi
imul   %esi,%edx
shr    $0xc,%edx
movzwl (%rdi,%r8,2),%esi
add    %esi,%edx
and    $0xff00,%edx
shr    $0x8,%edx
mov    -0xc8(%rbp),%rdi
mov    %rdi,%rsi
and    $0x4,%esi
shr    $0x2,%esi
lea    0x1(%rsi),%r8d
and    $0x3,%edi
lea    0x1(%rdi),%esi
imul   %esi,%r8d
lea    0x82(%rax,%rax,4),%eax
shr    $0x8,%eax
lea    0x82(%rdx,%rdx,4),%edx
shr    $0x8,%edx
lea    (%rdx,%rdx,2),%edx
lea    (%rax,%rdx,2),%eax
lea    (%rax,%rax,2),%edx
lea    0x82(%rcx,%rcx,4),%eax
shr    $0x8,%eax
lea    (%rax,%rdx,2),%eax
movzbl %al,%eax
imul   %r8d,%eax
mov    %eax,%eax
mov    0x18(%rbx),%rcx
lea    (%rax,%rcx,1),%rsi
mov    -0xc0(%rbp),%r9
mov    %r8,%rax
imul   %r9d,%eax
mov    %eax,%eax
lea    (%rcx,%rax,1),%rdi
mov    %r8d,%edx
mov    %r13,-0x100(%rbp)
mov    %r9,%r13
callq  53d0 <memcmp@plt>
test   %eax,%eax
jne    129be <png_image_read_colormap+0x143e>
movb   $0x0,-0x10a(%rbp)
mov    %r15w,-0x108(%rbp)
mov    %r14w,-0x106(%rbp)
mov    %r14w,-0x102(%rbp)
mov    %r12w,-0x104(%rbp)
lea    -0x10a(%rbp),%rsi
xor    %r12d,%r12d
mov    %r12,%r8
mov    -0xa8(%rbp),%r14
mov    %r14,%rdi
mov    $0x1,%r15d
mov    %r15,%rdx
mov    %r12,%rcx
callq  5320 <png_set_background_fixed@plt>
mov    %rbx,-0x58(%rbp)
mov    %r15,%rsi
mov    -0x40(%rbp),%r11
mov    -0x68(%rbp),%r15
mov    $0x100,%r10d
mov    $0x3,%ecx
mov    %rsi,%rdx
mov    %r12,%rax
jmpq   11a9b <png_image_read_colormap+0x51b>
test   %eax,%eax
mov    %edx,%edi
jle    129e5 <png_image_read_colormap+0x1465>
cmp    %r15d,%edx
jae    129e5 <png_image_read_colormap+0x1465>
movzbl (%r14,%rdi,1),%r12d
cmp    $0xfe,%r12b
ja     129e5 <png_image_read_colormap+0x1465>
test   %r12b,%r12b
je     12a0e <png_image_read_colormap+0x148e>
mov    %r15,-0xf0(%rbp)
lea    (%rdi,%rdi,2),%r15
movzbl (%rcx,%r15,1),%esi
mov    %rbx,%r8
mov    %r13,-0xc0(%rbp)
mov    $0x3,%eax
mov    %rdx,-0x100(%rbp)
mov    %r10,%rdx
mov    %r10,-0xe8(%rbp)
mov    %rcx,%r13
mov    %r12,%rcx
mov    %rdi,%r12
mov    %r8,%rdi
mov    %r9,%r8
mov    %rdx,%r9
mov    %rax,%rdx
callq  10a00 <png_colormap_compose>
mov    %rax,-0xc8(%rbp)
movzbl 0x1(%r13,%r15,1),%esi
movzbl (%r14,%r12,1),%ecx
mov    %rbx,%rdi
mov    $0x3,%edx
mov    -0xd8(%rbp),%r8
mov    -0xe8(%rbp),%r9
callq  10a00 <png_colormap_compose>
movzbl 0x2(%r13,%r15,1),%esi
mov    %rax,%r13
movzbl (%r14,%r12,1),%ecx
mov    %rbx,%rdi
mov    $0x3,%edx
mov    -0xd0(%rbp),%r8
mov    -0xe8(%rbp),%r15
mov    %r15,%r9
callq  10a00 <png_colormap_compose>
cmp    $0x2,%r15d
je     12a56 <png_image_read_colormap+0x14d6>
movzbl (%r14,%r12,1),%r9d
jmpq   12a65 <png_image_read_colormap+0x14e5>
mov    %rsi,%r15
mov    %r14,%rdi
callq  5580 <png_set_packing@plt>
mov    %rbx,-0x58(%rbp)
mov    %r15,%rsi
mov    -0x88(%rbp),%r11
mov    -0x70(%rbp),%r15
mov    $0x100,%r10d
mov    $0x1,%edx
mov    %r12,%rax
mov    %rax,%rcx
jmpq   11a9b <png_image_read_colormap+0x51b>
cmp    $0x2,%r10d
je     12aa5 <png_image_read_colormap+0x1525>
mov    %rsi,-0x98(%rbp)
mov    %r15,-0x88(%rbp)
mov    %r14,-0x8(%rbp)
mov    %rax,%r14
xor    %r15d,%r15d
mov    %r15,%rax
jmpq   11f37 <png_image_read_colormap+0x9b7>
cmp    %ecx,%eax
jne    11ecb <png_image_read_colormap+0x94b>
mov    %r10d,(%rsp)
mov    %rbx,%rdi
mov    %rax,%rsi
mov    %r12,%rdx
mov    %r10,-0xa8(%rbp)
mov    %rbx,-0xa0(%rbp)
mov    %rcx,-0x100(%rbp)
mov    %r11,%rcx
mov    %rax,%rbx
mov    %r9,%r11
mov    %rdx,%r9
mov    %r11,%rdx
callq  10ad0 <png_create_colormap_entry>
jmpq   11f07 <png_image_read_colormap+0x987>
mov    %r14,%rdi
callq  5580 <png_set_packing@plt>
mov    %rbx,-0x58(%rbp)
mov    -0x8(%rbp),%r11
mov    -0x88(%rbp),%r15
mov    $0x100,%r10d
mov    $0x3,%esi
xor    %r12d,%r12d
mov    $0x1,%edx
mov    %r12,%rax
mov    %rax,%rcx
jmpq   11a9b <png_image_read_colormap+0x51b>
mov    -0xd0(%rbp),%r8
cmp    %r13d,%r8d
jne    11f94 <png_image_read_colormap+0xa14>
cmp    $0x2,%r15d
je     12acb <png_image_read_colormap+0x154b>
mov    %r13,%r12
mov    %rax,%r13
mov    -0x58(%rbp),%rbx
jmpq   12b32 <png_image_read_colormap+0x15b2>
cmp    0x1c(%r15),%r13d
ja     12032 <png_image_read_colormap+0xab2>
mov    %r13d,0x1c(%r15)
cmp    $0x4,%ecx
jbe    12b99 <png_image_read_colormap+0x1619>
mov    %r14,%rdi
lea    0x1b7e9(%rip),%rsi        # 2e0ad <chunks_to_process.34+0x2a8>
callq  5470 <png_error@plt>
mov    %r11,%rdx
shl    $0x4,%edx
add    %r11d,%edx
lea    (%rdx,%rdx,2),%r15d
mov    %rcx,%r8
sub    %r15d,%r8d
mov    %r8,%rdx
imul   %r10d,%edx
mov    %r9,-0x78(%rbp)
mov    %rdx,-0x60(%rbp)
imul   %r8d,%r9d
mov    %r9,-0x70(%rbp)
imul   %eax,%r8d
mov    %r8,-0x90(%rbp)
mov    %r11,-0x100(%rbp)
mov    %r10,-0x68(%rbp)
mov    %rax,-0xd8(%rbp)
mov    %r12,%rax
jmpq   12241 <png_image_read_colormap+0xcc1>
mov    %r14,%rdi
lea    0x1b657(%rip),%rsi        # 2df79 <chunks_to_process.34+0x174>
callq  5470 <png_error@plt>
mov    %rsi,%rdi
lea    0x1b690(%rip),%rsi        # 2dfc1 <chunks_to_process.34+0x1bc>
callq  5470 <png_error@plt>
movl   $0x1,(%rsp)
mov    %rbx,%rdi
mov    %r13,%rsi
mov    %r15,%rdx
mov    %r14,%rcx
mov    %r12,%r8
callq  10ad0 <png_create_colormap_entry>
add    %r12d,%r12d
or     $0x7f,%r12d
add    $0x1,%r13d
mov    $0x80,%r9d
cmp    $0xff,%r12d
jbe    12936 <png_image_read_colormap+0x13b6>
add    %r14d,%r14d
or     $0x7f,%r14d
xor    %r12d,%r12d
cmp    $0xff,%r14d
jbe    12962 <png_image_read_colormap+0x13e2>
add    %r15d,%r15d
or     $0x7f,%r15d
cmp    $0xff,%r15d
jbe    12bc5 <png_image_read_colormap+0x1645>
mov    %rbx,-0x58(%rbp)
mov    -0x48(%rbp),%r10
mov    $0x4,%ecx
mov    -0x18(%rbp),%r11
mov    -0x60(%rbp),%r15
mov    -0x100(%rbp),%r14
mov    $0x1,%edx
mov    %rdx,%rax
mov    %rax,%rsi
jmpq   11a9b <png_image_read_colormap+0x51b>
add    $0x1,%r13d
mov    %r14,%rcx
mov    %r15,%r8
mov    $0x80,%r10d
mov    -0x100(%rbp),%r15
xor    %r12d,%r12d
mov    $0x1,%edx
mov    %r12,%rax
jmpq   12cac <png_image_read_colormap+0x172c>
lea    (%rdi,%rdi,2),%rsi
movzbl (%rcx,%rsi,1),%r11d
movzbl 0x1(%rcx,%rsi,1),%r12d
movzbl 0x2(%rcx,%rsi,1),%r8d
cmp    %r15d,%edx
jb     11dda <png_image_read_colormap+0x85a>
mov    $0xff,%r9d
jmpq   11ddf <png_image_read_colormap+0x85f>
mov    %r10d,(%rsp)
mov    %rbx,%rdi
mov    %rdx,%rsi
xor    %r12d,%r12d
mov    %r10,-0xe8(%rbp)
mov    %rbx,-0x100(%rbp)
mov    %r11,%rcx
mov    %rax,%rbx
mov    %r9,%r11
mov    %r12,%r9
mov    %rdx,%r12
mov    %r11,%rdx
callq  10ad0 <png_create_colormap_entry>
mov    %rbx,%rax
mov    -0x100(%rbp),%rbx
mov    -0xe8(%rbp),%r10
jmpq   11e1c <png_image_read_colormap+0x89c>
movzbl (%r14,%r12,1),%edx
mov    %rdx,%rcx
shl    $0x8,%ecx
lea    (%rdx,%rcx,1),%r9d
mov    %r13,%rcx
mov    %rax,%r8
mov    %r15d,(%rsp)
mov    %rbx,%rdi
mov    -0x100(%rbp),%r12
mov    %r12,%rsi
mov    -0xc8(%rbp),%rdx
callq  10ad0 <png_create_colormap_entry>
mov    %r15,%r10
mov    -0xc0(%rbp),%r13
mov    -0xf0(%rbp),%r15
mov    -0xb8(%rbp),%rax
jmpq   11e1c <png_image_read_colormap+0x89c>
mov    %rsi,-0x98(%rbp)
mov    %r15,-0x88(%rbp)
mov    %r14,-0x8(%rbp)
mov    %rax,%r14
xor    %r15d,%r15d
mov    $0xffff,%r12d
mov    %r15,%rax
jmpq   11f37 <png_image_read_colormap+0x9b7>
mov    %r13,%rcx
shl    $0x8,%ecx
sub    %r13d,%ecx
mov    %rcx,%rdx
shr    $0xf,%edx
mov    %edx,%esi
mov    -0x100(%rbp),%rdx
movzbl (%rsi,%rdx,1),%edx
and    $0x7fff,%ecx
imul   %ecx,%edx
shr    $0xc,%edx
mov    -0x78(%rbp),%rcx
movzwl (%rcx,%rsi,2),%ecx
movl   $0x2,(%rsp)
lea    (%rdx,%rcx,1),%r12d
and    $0xff00,%r12d
shr    $0x8,%r12d
mov    %r13,%rdx
mov    %rax,%r13
mov    %rdx,%rcx
mov    %rdx,%r8
mov    -0x58(%rbp),%rbx
mov    %rbx,%rdi
mov    %r12,%rsi
mov    $0xffff,%r9d
callq  10ad0 <png_create_colormap_entry>
movb   $0x0,-0x128(%rbp)
mov    %r12w,-0x122(%rbp)
mov    %r12w,-0x124(%rbp)
mov    %r12w,-0x126(%rbp)
mov    %r12w,-0x120(%rbp)
lea    -0x128(%rbp),%rsi
xor    %r12d,%r12d
mov    %r12,%r8
mov    %r14,%rdi
mov    $0x1,%r15d
mov    %r15,%rdx
mov    %r12,%rcx
callq  5320 <png_set_background_fixed@plt>
mov    %r15,%rsi
mov    -0x8(%rbp),%r11
mov    -0x50(%rbp),%r15
mov    $0x100,%r10d
mov    %rsi,%rdx
mov    %r12,%rax
mov    %rax,%rcx
jmpq   11a9b <png_image_read_colormap+0x51b>
lea    0x1ad94(%rip),%rsi        # 2d934 <png_pass_yinc.24+0x3d>
movslq (%rsi,%rcx,4),%rax
add    %rsi,%rax
jmpq   *%rax
cmp    $0xd8,%r10d
je     12d2b <png_image_read_colormap+0x17ab>
mov    %r14,%rdi
lea    0x1b514(%rip),%rsi        # 2e0d4 <chunks_to_process.34+0x2cf>
callq  5470 <png_error@plt>
mov    %r12,%r14
jmpq   12975 <png_image_read_colormap+0x13f5>
mov    %rbx,%rdi
mov    %r15,%r9
mov    %r13,-0xa0(%rbp)
mov    %rcx,%r12
mov    %r10,%rcx
mov    %rsi,%r13
mov    %rax,%rsi
callq  10a00 <png_colormap_compose>
mov    %rbx,%rdi
mov    %r13,%rsi
mov    $0x1,%edx
mov    $0x80,%ecx
mov    %r12,%r8
mov    %rax,%r12
mov    %r15,%r9
callq  10a00 <png_colormap_compose>
mov    %rax,%r13
mov    %rbx,%rdi
mov    %r14,%rsi
mov    $0x1,%edx
mov    $0x80,%ecx
mov    -0xd0(%rbp),%r8
mov    %r15,%r9
callq  10a00 <png_colormap_compose>
mov    %r13,%rcx
mov    %r12,%rdx
mov    %rax,%r8
mov    %r15d,(%rsp)
mov    %rbx,%rdi
mov    -0xa0(%rbp),%r13
mov    %r13,%rsi
xor    %r12d,%r12d
mov    %r12,%r9
callq  10ad0 <png_create_colormap_entry>
add    %r14d,%r14d
or     $0x7f,%r14d
add    $0x1,%r13d
mov    -0x100(%rbp),%rsi
mov    -0xb8(%rbp),%rax
mov    $0x80,%r10d
mov    -0xd8(%rbp),%rcx
mov    -0xe0(%rbp),%r8
mov    $0x1,%edx
cmp    $0xff,%r14d
jbe    12bcd <png_image_read_colormap+0x164d>
add    %esi,%esi
or     $0x7f,%esi
mov    %rsi,-0x100(%rbp)
cmp    $0xff,%esi
jbe    12d46 <png_image_read_colormap+0x17c6>
add    %eax,%eax
or     $0x7f,%eax
mov    %rax,-0xb8(%rbp)
cmp    $0xff,%eax
jbe    12d4e <png_image_read_colormap+0x17ce>
mov    %rbx,-0x58(%rbp)
mov    -0xc0(%rbp),%r10
mov    $0x4,%ecx
mov    -0x40(%rbp),%r11
mov    -0x68(%rbp),%r15
mov    -0xa8(%rbp),%r14
mov    %rdx,%rax
mov    %rax,%rsi
jmpq   11a9b <png_image_read_colormap+0x51b>
cmp    $0x100,%r10d
jne    12bb6 <png_image_read_colormap+0x1636>
jmp    12d2b <png_image_read_colormap+0x17ab>
cmp    $0xe7,%r10d
jne    12bb6 <png_image_read_colormap+0x1636>
jmp    12d2b <png_image_read_colormap+0x17ab>
cmp    %r10d,%r13d
jbe    12bb6 <png_image_read_colormap+0x1636>
cmp    $0xfe,%r10d
jne    12bb6 <png_image_read_colormap+0x1636>
jmp    12d2b <png_image_read_colormap+0x17ab>
cmp    $0x100,%r10d
jne    12bb6 <png_image_read_colormap+0x1636>
mov    %ecx,0x48(%rbx)
mov    %rdx,%rax
mov    %r11,%rbx
mov    -0x38(%rbp),%r15
mov    -0x30(%rbp),%r14
mov    -0x20(%rbp),%r12
mov    -0x28(%rbp),%r13
leaveq 
retq   
mov    %r12,%r14
jmpq   12c82 <png_image_read_colormap+0x1702>
mov    %r12,%rsi
jmpq   12c94 <png_image_read_colormap+0x1714>
nopw   %cs:0x0(%rax,%rax,1)

0000000000012d60 <png_image_read_and_map>:
push   %rbp
mov    %rsp,%rbp
sub    $0xa0,%rsp
mov    %rdi,-0x90(%rbp)
mov    $0x1,%eax
mov    $0x7,%r11d
mov    (%rdi),%r8
mov    (%r8),%rcx
mov    (%rcx),%rcx
mov    %rcx,-0x88(%rbp)
movzbl 0x264(%rcx),%edx
test   %dl,%dl
jne    12df8 <png_image_read_and_map+0x98>
mov    %rax,%r10
mov    %r10,-0x30(%rbp)
mov    0x10(%r8),%esi
mov    %rsi,-0x98(%rbp)
mov    0xc(%r8),%r9d
mov    %r9,-0x80(%rbp)
mov    0x30(%rdi),%rdx
mov    %rdx,-0x78(%rbp)
mov    0x38(%rdi),%r8
mov    %r15,-0x28(%rbp)
mov    %r8,-0x58(%rbp)
movslq 0x48(%rdi),%r15
mov    %r14,-0x20(%rbp)
mov    %r15,-0x68(%rbp)
xor    %r14d,%r14d
mov    %r13,-0x18(%rbp)
mov    %r12,-0x10(%rbp)
mov    %rbx,-0x8(%rbp)
mov    %r8,%rbx
mov    %rdx,%r12
mov    %rdi,%rdx
mov    %rcx,%rdi
mov    %r14,%r13
mov    %r10,%r14
mov    %r13,%r10
jmp    12e66 <png_image_read_and_map+0x106>
cmp    $0x1,%dl
jne    12e85 <png_image_read_and_map+0x125>
mov    %r11,%r10
jmp    12d9b <png_image_read_and_map+0x3b>
lea    (%rdi,%rdi,2),%ecx
lea    (%rdi,%rcx,2),%ecx
shl    $0x5,%ecx
lea    (%rcx,%rdi,8),%ecx
sub    %edi,%ecx
add    $0x80,%ecx
shr    $0x8,%ecx
mov    %cl,(%rax)
add    %r11,%rax
add    $0x2,%rdx
cmp    %rax,%r10
ja     12e94 <png_image_read_and_map+0x134>
mov    -0x50(%rbp),%r14
mov    -0x70(%rbp),%rax
add    %eax,%r13d
mov    -0x90(%rbp),%rdx
mov    -0x98(%rbp),%rsi
mov    -0x88(%rbp),%rdi
xor    %r10d,%r10d
cmp    %esi,%r13d
jb     12eb3 <png_image_read_and_map+0x153>
mov    -0x38(%rbp),%r13
mov    -0x30(%rbp),%r14
mov    $0x1,%eax
mov    $0x7,%r11d
cmp    %r13d,%r14d
jg     12f00 <png_image_read_and_map+0x1a0>
mov    -0x8(%rbp),%rbx
mov    -0x10(%rbp),%r12
mov    -0x18(%rbp),%r13
mov    -0x20(%rbp),%r14
mov    -0x28(%rbp),%r15
leaveq 
retq   
mov    %rcx,%rdi
lea    0x1b26b(%rip),%rsi        # 2e0fa <chunks_to_process.34+0x2f5>
callq  5470 <png_error@plt>
movzbl (%rdx),%edi
movzbl 0x1(%rdx),%esi
cmp    $0xe5,%sil
ja     12e06 <png_image_read_and_map+0xa6>
cmp    $0x19,%sil
ja     12f26 <png_image_read_and_map+0x1c6>
mov    %r14,%rcx
jmpq   12e1d <png_image_read_and_map+0xbd>
mov    0x28(%rdx),%rsi
mov    %rsi,-0x40(%rbp)
xor    %edx,%edx
mov    %r8,-0x48(%rbp)
mov    %rax,-0x70(%rbp)
callq  5600 <png_read_row@plt>
mov    %r14d,%r11d
mov    %r13d,%eax
imul   %rbx,%rax
cmp    $0x2,%r15d
lea    (%rax,%r12,1),%rcx
mov    -0x48(%rbp),%r8
mov    %r8d,%eax
lea    (%rcx,%rax,1),%rax
mov    -0x80(%rbp),%r9
lea    (%rcx,%r9,1),%r10
jle    12f49 <png_image_read_and_map+0x1e9>
cmp    $0x3,%r15d
jne    12f66 <png_image_read_and_map+0x206>
mov    -0x40(%rbp),%rcx
jmpq   12fd5 <png_image_read_and_map+0x275>
lea    0x1(%r13),%r8d
movzbl 0x264(%rdi),%ecx
cmp    $0x1,%cl
je     12fdf <png_image_read_and_map+0x27f>
mov    %r8,-0x38(%rbp)
mov    %rax,%r14
mov    %r10,%r8
mov    %r8,%r13
jmpq   12e4e <png_image_read_and_map+0xee>
lea    0x82(%rdi,%rdi,4),%ecx
shr    $0x8,%ecx
lea    0x82(%rsi,%rsi,4),%esi
shr    $0x8,%esi
lea    (%rsi,%rsi,2),%esi
lea    0xe2(%rcx,%rsi,2),%ecx
jmpq   12e1d <png_image_read_and_map+0xbd>
cmp    $0x1,%r15d
jne    12ff3 <png_image_read_and_map+0x293>
mov    %r14,-0x50(%rbp)
mov    -0x40(%rbp),%rdx
mov    $0xe7,%r14d
jmpq   12e26 <png_image_read_and_map+0xc6>
cmp    $0x4,%r15d
jne    12e2f <png_image_read_and_map+0xcf>
mov    %r14,-0x50(%rbp)
mov    %r13,-0x60(%rbp)
mov    $0xd9,%edi
mov    -0x40(%rbp),%rdx
mov    $0xe2,%r8d
mov    $0xeb,%r14d
mov    $0xd8,%ebx
jmpq   13052 <png_image_read_and_map+0x2f2>
movzbl 0x1(%rcx),%edx
lea    0x82(%rdx,%rdx,4),%edx
shr    $0x8,%edx
movzbl (%rcx),%esi
lea    0x82(%rsi,%rsi,4),%esi
shr    $0x8,%esi
lea    (%rsi,%rsi,2),%esi
lea    (%rdx,%rsi,2),%edx
lea    (%rdx,%rdx,2),%esi
movzbl 0x2(%rcx),%edx
lea    0x82(%rdx,%rdx,4),%edx
shr    $0x8,%edx
lea    (%rdx,%rsi,2),%edx
mov    %dl,(%rax)
add    $0x3,%rcx
add    %r11,%rax
cmp    %rax,%r10
ja     12f97 <png_image_read_and_map+0x237>
jmpq   12e2f <png_image_read_and_map+0xcf>
cmp    $0x1,%r13d
jg     13074 <png_image_read_and_map+0x314>
mov    $0x3,%ecx
jmpq   1307f <png_image_read_and_map+0x31f>
cmp    $0x2,%r15d
jne    12e2f <png_image_read_and_map+0xcf>
mov    %r14,-0x60(%rbp)
mov    -0x40(%rbp),%rcx
mov    $0xff,%edi
mov    $0xfe,%esi
jmpq   130a9 <png_image_read_and_map+0x349>
movzbl 0x1(%rdx),%ecx
lea    0x82(%rcx,%rcx,4),%ecx
shr    $0x8,%ecx
movzbl (%rdx),%esi
lea    0x82(%rsi,%rsi,4),%esi
shr    $0x8,%esi
lea    (%rsi,%rsi,2),%esi
lea    (%rcx,%rsi,2),%ecx
lea    (%rcx,%rcx,2),%esi
movzbl 0x2(%rdx),%ecx
lea    0x82(%rcx,%rcx,4),%ecx
shr    $0x8,%ecx
lea    (%rcx,%rsi,2),%ecx
mov    %cl,(%rax)
add    $0x4,%rdx
add    %r11,%rax
cmp    %r10,%rax
jb     130bb <png_image_read_and_map+0x35b>
mov    -0x68(%rbp),%r15
mov    -0x58(%rbp),%rbx
mov    -0x60(%rbp),%r13
mov    -0x50(%rbp),%r14
mov    -0x78(%rbp),%r12
mov    -0x48(%rbp),%r8
jmpq   12e2f <png_image_read_and_map+0xcf>
mov    %r11,%rcx
sub    %r13d,%ecx
sar    %ecx
mov    %rax,%r10
test   %r10,%r10
jne    130d5 <png_image_read_and_map+0x375>
mov    $0x3,%r11d
jmp    130db <png_image_read_and_map+0x37b>
movzbl (%rcx),%edx
movzbl 0x1(%rcx),%r8d
test   %r8b,%r8b
jne    1312d <png_image_read_and_map+0x3cd>
mov    %rsi,%rdx
mov    %dl,(%rax)
add    %r11,%rax
add    $0x2,%rcx
cmp    %rax,%r10
ja     1308c <png_image_read_and_map+0x32c>
mov    -0x60(%rbp),%r14
mov    -0x48(%rbp),%r8
jmpq   12e2f <png_image_read_and_map+0xcf>
movzbl 0x3(%rdx),%ecx
cmp    $0xc3,%cl
ja     13014 <png_image_read_and_map+0x2b4>
cmp    $0x3f,%cl
ja     1313e <png_image_read_and_map+0x3de>
mov    %rbx,%rcx
jmpq   13049 <png_image_read_and_map+0x2e9>
sub    %r13d,%r11d
sar    %r11d
mov    %r8,%r10
shl    %cl,%eax
add    $0xffffffff,%eax
mov    %r10,%rcx
sar    %ecx
mov    $0x3,%r12d
neg    %ecx
add    %r12d,%ecx
mov    %r13,%r8
and    $0x1,%r8d
shl    %cl,%r8d
and    $0x7,%r8d
sub    %r8d,%eax
add    %r9d,%eax
mov    %r11,%rcx
mov    %r13,%r11
mov    %r10,%r13
shr    %cl,%eax
test   %eax,%eax
jne    13158 <png_image_read_and_map+0x3f8>
mov    -0x78(%rbp),%r12
mov    $0x1,%eax
xor    %r10d,%r10d
mov    $0x7,%r11d
jmpq   12e66 <png_image_read_and_map+0x106>
cmp    $0xfe,%dl
jne    130a0 <png_image_read_and_map+0x340>
mov    %rdi,%rdx
jmpq   130a0 <png_image_read_and_map+0x340>
movzbl (%rdx),%esi
mov    %rsi,%r13
and    $0x80,%r13d
test   %r13d,%r13d
jg     13168 <png_image_read_and_map+0x408>
mov    %rdi,%rcx
mov    %r8,%r12
jmp    1316e <png_image_read_and_map+0x40e>
cmp    $0x2,%r11d
jg     1319b <png_image_read_and_map+0x43b>
mov    %r13,%r10
mov    $0x8,%eax
jmp    131ab <png_image_read_and_map+0x44b>
mov    %r8,%rcx
mov    %r14,%r12
and    $0x40,%esi
test   %esi,%esi
jle    13178 <png_image_read_and_map+0x418>
mov    %r12,%rcx
test   %r13d,%r13d
jle    13180 <png_image_read_and_map+0x420>
add    $0x3,%ecx
test   %esi,%esi
jle    13187 <png_image_read_and_map+0x427>
add    $0x3,%ecx
test   %r13d,%r13d
jle    1318f <png_image_read_and_map+0x42f>
add    $0x1,%ecx
test   %esi,%esi
jle    13196 <png_image_read_and_map+0x436>
add    $0x1,%ecx
jmpq   13049 <png_image_read_and_map+0x2e9>
lea    -0x1(%r11),%ecx
sar    %ecx
mov    %r13,%r10
mov    $0x8,%eax
shr    %cl,%eax
mov    %r11,%rcx
sar    %ecx
sub    %ecx,%r12d
mov    %r11,%r13
not    %r13d
and    $0x1,%r13d
mov    %r12,%rcx
shl    %cl,%r13d
and    $0x7,%r13d
mov    $0x7,%ecx
sub    %r11d,%ecx
sar    %ecx
mov    $0x1,%r14d
shl    %cl,%r14d
mov    %r10,-0x38(%rbp)
mov    -0x78(%rbp),%r12
xor    %r10d,%r10d
jmpq   12e4e <png_image_read_and_map+0xee>
nopw   0x0(%rax,%rax,1)

00000000000131f0 <png_image_read_colormapped>:
push   %rbp
mov    %rsp,%rbp
sub    $0x40,%rsp
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rbx,-0x8(%rbp)
mov    (%rdi),%r14
mov    (%r14),%rax
mov    0x8(%rax),%r13
mov    (%rax),%rbx
mov    %rdi,%r12
mov    %rbx,%rdi
callq  10890 <png_image_skip_unused_chunks>
xor    %r15d,%r15d
movslq 0x48(%r12),%rax
test   %eax,%eax
jne    1323b <png_image_read_colormapped+0x4b>
mov    %rbx,%rdi
callq  53f0 <png_set_interlace_handling@plt>
mov    %rax,%r15
mov    %rbx,%rdi
mov    %r13,%rsi
callq  5080 <png_read_update_info@plt>
mov    0x48(%r12),%eax
cmp    $0x4,%eax
ja     1329e <png_image_read_colormapped+0xae>
lea    0x1a6f1(%rip),%rcx        # 2d948 <png_pass_yinc.24+0x51>
movslq (%rcx,%rax,4),%rax
add    %rcx,%rax
jmpq   *%rax
movzbl 0x25(%r13),%eax
cmp    $0x6,%al
jne    1329e <png_image_read_colormapped+0xae>
movzbl 0x24(%r13),%eax
cmp    $0x8,%al
jne    1329e <png_image_read_colormapped+0xae>
movslq 0x2a4(%rbx),%rax
cmp    $0x35b60,%eax
jne    1329e <png_image_read_colormapped+0xae>
mov    0x1c(%r14),%eax
cmp    $0xf4,%eax
je     13310 <png_image_read_colormapped+0x120>
jmp    1329e <png_image_read_colormapped+0xae>
movzbl 0x25(%r13),%eax
cmp    $0x3,%al
je     13307 <png_image_read_colormapped+0x117>
test   %al,%al
je     13307 <png_image_read_colormapped+0x117>
mov    %rbx,%rdi
lea    0x1ae69(%rip),%rsi        # 2e111 <chunks_to_process.34+0x30c>
callq  5470 <png_error@plt>
movzbl 0x25(%r13),%eax
cmp    $0x4,%al
jne    1329e <png_image_read_colormapped+0xae>
movzbl 0x24(%r13),%eax
cmp    $0x8,%al
jne    1329e <png_image_read_colormapped+0xae>
movslq 0x2a4(%rbx),%rax
cmp    $0x35b60,%eax
jne    1329e <png_image_read_colormapped+0xae>
mov    0x1c(%r14),%eax
cmp    $0x100,%eax
je     13310 <png_image_read_colormapped+0x120>
jmp    1329e <png_image_read_colormapped+0xae>
movzbl 0x25(%r13),%eax
cmp    $0x2,%al
jne    1329e <png_image_read_colormapped+0xae>
movzbl 0x24(%r13),%eax
cmp    $0x8,%al
jne    1329e <png_image_read_colormapped+0xae>
movslq 0x2a4(%rbx),%rax
cmp    $0x35b60,%eax
jne    1329e <png_image_read_colormapped+0xae>
mov    0x1c(%r14),%eax
cmp    $0xd8,%eax
je     13310 <png_image_read_colormapped+0x120>
jmp    1329e <png_image_read_colormapped+0xae>
movzbl 0x24(%r13),%eax
cmp    $0x8,%al
jne    1329e <png_image_read_colormapped+0xae>
mov    0x8(%r12),%rax
movslq 0x10(%r12),%rsi
test   %esi,%esi
jns    13334 <png_image_read_colormapped+0x144>
mov    %rsi,%rcx
neg    %rcx
mov    0x10(%r14),%edx
add    $0xffffffff,%edx
mov    %edx,%edx
imul   %rdx,%rcx
add    %rcx,%rax
mov    %rax,0x30(%r12)
mov    %rsi,0x38(%r12)
test   %r15d,%r15d
je     13354 <png_image_read_colormapped+0x164>
mov    %r12,%rax
mov    %rsi,%r12
mov    %r14,%rcx
xor    %r13d,%r13d
jmpq   133da <png_image_read_colormapped+0x1ea>
mov    %r13,%rsi
mov    %rbx,%rdi
callq  50c0 <png_get_rowbytes@plt>
mov    %rax,%rsi
mov    %rbx,%rdi
callq  5800 <png_malloc@plt>
mov    %r14,%rdi
mov    %rax,%r13
mov    %r13,0x28(%r12)
lea    -0x61c(%rip),%rsi        # 12d60 <png_image_read_and_map>
mov    %r12,%rdx
callq  b260 <png_safe_execute>
movq   $0x0,0x28(%r12)
mov    %r13,%rsi
mov    %rax,%r13
mov    %rbx,%rdi
callq  5790 <png_free@plt>
mov    %r13,%rax
mov    -0x8(%rbp),%rbx
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
leaveq 
retq   
mov    %rbx,%rdi
mov    %r14,%rsi
mov    %r13,%rdx
callq  5600 <png_read_row@plt>
add    %r12,%r14
add    $0xffffffff,%r15d
test   %r15d,%r15d
jne    133b4 <png_image_read_colormapped+0x1c4>
mov    -0x38(%rbp),%rax
mov    -0x30(%rbp),%rcx
mov    -0x40(%rbp),%r15
lea    -0x1(%r15),%edx
test   %edx,%edx
jns    133fd <png_image_read_colormapped+0x20d>
mov    $0x1,%eax
mov    -0x8(%rbp),%rbx
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
leaveq 
retq   
mov    0x10(%rcx),%r15d
mov    0x30(%rax),%r14
mov    %rdx,-0x40(%rbp)
mov    %rcx,-0x30(%rbp)
mov    %rax,-0x38(%rbp)
jmp    133c9 <png_image_read_colormapped+0x1d9>
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

0000000000013420 <png_image_read_composite>:
push   %rbp
mov    %rsp,%rbp
sub    $0xe0,%rsp
mov    %rdi,-0xc8(%rbp)
mov    $0x1,%r10d
mov    %r10,-0x78(%rbp)
mov    $0x7,%r11d
mov    (%rdi),%rcx
mov    (%rcx),%rax
mov    (%rax),%r9
mov    %r9,-0x88(%rbp)
movzbl 0x264(%r9),%eax
test   %al,%al
jne    134f2 <png_image_read_composite+0xd2>
mov    %r10,%r11
mov    %r11,-0x48(%rbp)
mov    0x10(%rcx),%r8d
mov    %r8,-0xd8(%rbp)
mov    0xc(%rcx),%eax
mov    %rax,-0x90(%rbp)
mov    0x38(%rdi),%rsi
mov    %r15,-0x28(%rbp)
mov    %rsi,-0x68(%rbp)
lea    0x18cfb(%rip),%rdx        # 2c18c <png_sRGB_table>
mov    %r14,-0x20(%rbp)
mov    %rdx,-0x60(%rbp)
lea    0x18eec(%rip),%rdx        # 2c38c <png_sRGB_base>
mov    %r13,-0x18(%rbp)
mov    %rdx,-0x58(%rbp)
lea    0x192dd(%rip),%rdx        # 2c78c <png_sRGB_delta>
mov    %r12,-0x10(%rbp)
mov    %rdx,-0xb0(%rbp)
mov    %rbx,-0x8(%rbp)
xor    %edx,%edx
mov    $0x3,%ebx
mov    0x14(%rcx),%ecx
and    $0x2,%ecx
test   %ecx,%ecx
jne    13509 <png_image_read_composite+0xe9>
mov    $0x2,%ecx
mov    %rcx,-0xd0(%rbp)
mov    %rsi,%rbx
mov    %rdi,%r12
mov    %r9,%rdi
mov    %rdx,%r9
mov    %r10,%rsi
mov    %rsi,%r13
jmpq   135ff <png_image_read_composite+0x1df>
cmp    $0x1,%al
je     13465 <png_image_read_composite+0x45>
mov    %r9,%rdi
lea    0x1abf6(%rip),%rsi        # 2e0fa <chunks_to_process.34+0x2f5>
callq  5470 <png_error@plt>
mov    $0x4,%ecx
mov    %rcx,-0xd0(%rbp)
mov    %rdi,%r12
mov    %r9,%rdi
mov    %r10,%r13
mov    %rbx,%r10
mov    %rsi,%rbx
mov    %rdx,%r9
mov    %r10,%rsi
jmpq   135ff <png_image_read_composite+0x1df>
cmp    $0xfe,%r11b
mov    %edx,%r8d
movzbl (%rbx,%r8,1),%eax
ja     13577 <png_image_read_composite+0x157>
movzbl (%r9,%r8,1),%esi
movzwl (%r14,%rsi,2),%edi
imul   %ecx,%edi
mov    %rax,%rsi
shl    $0x10,%esi
sub    %eax,%esi
add    %edi,%esi
mov    %rsi,%rax
shr    $0xf,%eax
mov    %eax,%edi
movzbl (%rdi,%r13,1),%eax
and    $0x7fff,%esi
imul   %esi,%eax
shr    $0xc,%eax
movzwl (%r12,%rdi,2),%esi
add    %esi,%eax
shr    $0x8,%eax
mov    %al,(%r9,%r8,1)
add    $0x1,%edx
cmp    %r10d,%edx
jb     1352f <png_image_read_composite+0x10f>
mov    -0x30(%rbp),%rax
mov    -0xa0(%rbp),%r8
mov    -0xb8(%rbp),%rsi
xor    %edx,%edx
mov    -0xd0(%rbp),%rdi
mov    $0xff,%ecx
add    %r8,%r9
add    %rdi,%rbx
cmp    %rax,%r9
jb     1362c <png_image_read_composite+0x20c>
mov    -0x70(%rbp),%rcx
mov    -0x80(%rbp),%rax
lea    (%rcx,%rax,1),%r13d
mov    -0xa8(%rbp),%r15
mov    -0xc8(%rbp),%r12
mov    -0x38(%rbp),%r14
mov    -0x68(%rbp),%rbx
mov    -0x98(%rbp),%rax
mov    -0x88(%rbp),%rdi
mov    -0xd8(%rbp),%r8
cmp    %r8d,%r13d
jb     13642 <png_image_read_composite+0x222>
mov    -0x90(%rbp),%rax
mov    -0x50(%rbp),%r9
mov    -0x48(%rbp),%r11
mov    $0x1,%r13d
mov    %rsi,-0xb8(%rbp)
mov    %r10,-0x40(%rbp)
cmp    %r9d,%r11d
jg     136cb <png_image_read_composite+0x2ab>
mov    %r13,%rax
mov    -0x8(%rbp),%rbx
mov    -0x10(%rbp),%r12
mov    -0x18(%rbp),%r13
mov    -0x20(%rbp),%r14
mov    -0x28(%rbp),%r15
leaveq 
retq   
movzbl (%rsi,%rbx,1),%r11d
test   %r11b,%r11b
je     135a3 <png_image_read_composite+0x183>
sub    %r11d,%ecx
jmpq   1357e <png_image_read_composite+0x15e>
mov    0x28(%r12),%rsi
mov    %rsi,-0xc0(%rbp)
mov    %rax,-0x98(%rbp)
callq  5600 <png_read_row@plt>
mov    %r15d,%r8d
mov    %r8,-0xa0(%rbp)
mov    %r13d,%eax
imul   %rax,%rbx
mov    0x30(%r12),%rcx
lea    (%rcx,%r14,1),%rax
add    %rbx,%rax
mov    %rax,-0x30(%rbp)
lea    (%rbx,%rcx,1),%rdx
mov    -0x98(%rbp),%rcx
mov    %ecx,%ecx
lea    (%rdx,%rcx,1),%r9
mov    %r13,-0x70(%rbp)
mov    %r15,-0xa8(%rbp)
mov    -0xb0(%rbp),%r13
mov    -0x60(%rbp),%r14
mov    -0x40(%rbp),%r10
mov    -0xb8(%rbp),%rsi
mov    -0xc0(%rbp),%rbx
xor    %edx,%edx
mov    -0xd0(%rbp),%rdi
mov    -0x58(%rbp),%r12
mov    $0xff,%ecx
jmpq   135a9 <png_image_read_composite+0x189>
mov    %r10,%rcx
imul   %eax,%ecx
mov    %ecx,%r14d
mov    %r14,-0x38(%rbp)
lea    0x1(%r9),%r15d
movzbl 0x264(%rdi),%ecx
cmp    $0x1,%cl
je     13700 <png_image_read_composite+0x2e0>
mov    %r15,-0x50(%rbp)
mov    %rdx,%rax
mov    %rax,%r13
mov    %r10,%r15
pushq  -0x78(%rbp)
popq   -0x80(%rbp)
jmpq   135e5 <png_image_read_composite+0x1c5>
cmp    $0x1,%r9d
jg     13712 <png_image_read_composite+0x2f2>
mov    $0x7,%ebx
mov    $0x3,%ecx
jmp    13722 <png_image_read_composite+0x302>
mov    $0x7,%ebx
mov    %rbx,%rcx
sub    %r9d,%ecx
sar    %ecx
mov    %r13,%rdx
test   %rdx,%rdx
jne    1372e <png_image_read_composite+0x30e>
mov    $0x3,%ebx
jmp    13733 <png_image_read_composite+0x313>
sub    %r9d,%ebx
sar    %ebx
shl    %cl,%r13d
add    $0xffffffff,%r13d
mov    %r15,%rcx
sar    %ecx
mov    $0x3,%r14d
neg    %ecx
add    %r14d,%ecx
mov    %r9,%rdx
and    $0x1,%edx
shl    %cl,%edx
and    $0x7,%edx
sub    %edx,%r13d
add    %eax,%r13d
mov    %rbx,%rcx
shr    %cl,%r13d
test   %r13d,%r13d
jne    1377a <png_image_read_composite+0x35a>
mov    %r15,%r9
mov    -0x68(%rbp),%rbx
mov    $0x1,%r13d
xor    %edx,%edx
jmpq   135ff <png_image_read_composite+0x1df>
cmp    $0x2,%r9d
jg     13787 <png_image_read_composite+0x367>
mov    $0x8,%eax
jmp    13794 <png_image_read_composite+0x374>
lea    -0x1(%r9),%ecx
sar    %ecx
mov    $0x8,%eax
shr    %cl,%eax
mov    %rax,-0x80(%rbp)
mov    %r9,%rax
sar    %eax
sub    %eax,%r14d
mov    %r9,%r13
not    %r13d
and    $0x1,%r13d
mov    %r14,%rcx
shl    %cl,%r13d
and    $0x7,%r13d
mov    %r10,%rax
imul   %edx,%eax
mov    $0x7,%ecx
sub    %r9d,%ecx
sar    %ecx
mov    %r15,%rdx
mov    %r10,%r15
shl    %cl,%r15d
mov    %rdx,-0x50(%rbp)
mov    -0x38(%rbp),%r14
mov    -0x68(%rbp),%rbx
xor    %edx,%edx
jmpq   135e5 <png_image_read_composite+0x1c5>

00000000000137e0 <png_image_read_background>:
push   %rbp
mov    %rsp,%rbp
sub    $0xd0,%rsp
mov    %rdi,-0xc0(%rbp)
mov    (%rdi),%rcx
mov    (%rcx),%rax
mov    0x8(%rax),%rdx
mov    0x10(%rcx),%r8d
mov    0xc(%rcx),%r9d
mov    %r9,-0xd0(%rbp)
mov    (%rax),%r10
mov    %r10,-0xc8(%rbp)
mov    0x134(%r10),%eax
mov    %rax,%rsi
and    $0x600000,%esi
test   %esi,%esi
je     138cf <png_image_read_background+0xef>
and    $0x80,%eax
test   %eax,%eax
jne    138de <png_image_read_background+0xfe>
mov    %r10,%rax
mov    %rdx,%rsi
mov    %r8,-0x58(%rbp)
mov    %rbx,-0x28(%rbp)
mov    %r12,-0x30(%rbp)
mov    %r13,-0x38(%rbp)
mov    %r14,-0x40(%rbp)
mov    %r15,-0x48(%rbp)
mov    %rdi,%rbx
mov    %rax,%rdi
mov    %r10,%r12
mov    %rcx,%r13
mov    %r9,%r14
mov    %rdx,%r15
callq  5540 <png_get_channels@plt>
cmp    $0x2,%al
jne    138ed <png_image_read_background+0x10d>
mov    0x14(%r13),%eax
mov    %rax,%rcx
and    $0x4,%ecx
test   %ecx,%ecx
je     138fc <png_image_read_background+0x11c>
mov    $0x1,%eax
mov    %rax,-0x68(%rbp)
mov    $0x7,%edi
movzbl 0x264(%r12),%ecx
test   %cl,%cl
jne    13916 <png_image_read_background+0x136>
mov    %rax,%r10
mov    %r10,-0x78(%rbp)
xor    %r8d,%r8d
mov    %r8,-0xb8(%rbp)
movzbl 0x24(%r15),%ecx
cmp    $0x8,%cl
je     13927 <png_image_read_background+0x147>
cmp    $0x10,%cl
je     1396a <png_image_read_background+0x18a>
mov    %r12,%rdi
lea    0x1a8ca(%rip),%rsi        # 2e194 <chunks_to_process.34+0x38f>
callq  5470 <png_error@plt>
mov    %r10,%rdi
lea    0x1a862(%rip),%rsi        # 2e13b <chunks_to_process.34+0x336>
callq  5470 <png_error@plt>
mov    %r10,%rdi
lea    0x1a864(%rip),%rsi        # 2e14c <chunks_to_process.34+0x347>
callq  5470 <png_error@plt>
mov    %r12,%rdi
lea    0x1a868(%rip),%rsi        # 2e15f <chunks_to_process.34+0x35a>
callq  5470 <png_error@plt>
and    $0x1,%eax
test   %eax,%eax
je     13881 <png_image_read_background+0xa1>
mov    %r12,%rdi
lea    0x1a863(%rip),%rsi        # 2e174 <chunks_to_process.34+0x36f>
callq  5470 <png_error@plt>
cmp    $0x1,%cl
jne    139a3 <png_image_read_background+0x1c3>
mov    %rdi,%r10
jmpq   1389f <png_image_read_background+0xbf>
mov    0x30(%rbx),%r9
mov    %r9,-0xa0(%rbp)
mov    0x38(%rbx),%r13
mov    %r13,-0x98(%rbp)
lea    0x18848(%rip),%rsi        # 2c18c <png_sRGB_table>
mov    %rsi,-0x70(%rbp)
lea    0x18a3d(%rip),%rcx        # 2c38c <png_sRGB_base>
mov    %rcx,-0x60(%rbp)
lea    0x18e32(%rip),%rcx        # 2c78c <png_sRGB_delta>
mov    %rcx,-0x80(%rbp)
mov    -0x58(%rbp),%rdx
mov    %r8,%r15
jmpq   13a6b <png_image_read_background+0x28b>
mov    0x30(%rbx),%rcx
mov    %rcx,-0x90(%rbp)
mov    0x38(%rbx),%rdi
mov    $0x2,%r15d
mov    %r15,-0xc0(%rbp)
mov    0x14(%r13),%edx
mov    %rdx,%rsi
and    $0x1,%esi
test   %esi,%esi
jne    13a8a <png_image_read_background+0x2aa>
mov    %rax,%r15
mov    %r8,%r9
jmpq   13a8d <png_image_read_background+0x2ad>
mov    %r12,%rdi
lea    0x1a74d(%rip),%rsi        # 2e0fa <chunks_to_process.34+0x2f5>
callq  5470 <png_error@plt>
movzbl 0x1(%rax),%r9d
test   %r9b,%r9b
je     13a08 <png_image_read_background+0x228>
movzbl (%rax),%edx
cmp    $0xfe,%r9b
ja     13a06 <png_image_read_background+0x226>
mov    %r13,%rdi
sub    %r9d,%edi
movzbl (%rcx),%r8d
movzwl (%rsi,%r8,2),%r8d
imul   %r8d,%edi
movzwl (%rsi,%rdx,2),%edx
imul   %r9d,%edx
add    %edx,%edi
mov    %rdi,%rdx
shr    $0xf,%edx
mov    %edx,%r8d
movzbl (%r8,%r11,1),%edx
and    $0x7fff,%edi
imul   %edi,%edx
shr    $0xc,%edx
movzwl (%r12,%r8,2),%edi
add    %edi,%edx
shr    $0x8,%edx
mov    %dl,(%rcx)
add    $0x2,%rax
add    %r10,%rcx
cmp    %rbx,%rcx
jb     139b2 <png_image_read_background+0x1d2>
mov    -0xb0(%rbp),%rcx
mov    -0xa8(%rbp),%rax
lea    (%rax,%rcx,1),%r15d
mov    -0x88(%rbp),%rcx
mov    -0x98(%rbp),%r13
mov    -0xa0(%rbp),%r9
mov    -0xc0(%rbp),%rbx
mov    -0xc8(%rbp),%r12
xor    %r8d,%r8d
mov    -0x58(%rbp),%rdx
cmp    %r15d,%edx
ja     13aea <png_image_read_background+0x30a>
mov    -0x78(%rbp),%r10
mov    -0x20(%rbp),%r15
mov    $0x1,%eax
mov    $0x7,%edi
cmp    %r15d,%r10d
jg     13b46 <png_image_read_background+0x366>
mov    -0x48(%rbp),%r15
mov    -0x40(%rbp),%r14
mov    -0x38(%rbp),%r13
mov    -0x30(%rbp),%r12
mov    -0x28(%rbp),%rbx
leaveq 
retq   
mov    %rax,%r9
mov    %r9,-0x88(%rbp)
mov    %r15,-0xa8(%rbp)
mov    %rdi,%rsi
shr    $0x3f,%rsi
lea    (%rdi,%rsi,1),%r13
sar    %r13
mov    %r13,-0x98(%rbp)
mov    %r14,%rsi
imul   %r15d,%esi
mov    %esi,%esi
mov    %rsi,-0x50(%rbp)
test   %r9d,%r9d
jne    13b93 <png_image_read_background+0x3b3>
mov    -0x58(%rbp),%rdx
mov    %r8,%rdi
pushq  -0xc0(%rbp)
pushq  -0xb8(%rbp)
popq   -0xc0(%rbp)
popq   -0xb8(%rbp)
jmpq   13c4a <png_image_read_background+0x46a>
mov    0x28(%rbx),%rsi
mov    %r8,%rdx
mov    %r12,%rdi
mov    %rcx,%r12
mov    %r9,%rbx
mov    %rsi,-0xb8(%rbp)
callq  5600 <png_read_row@plt>
mov    %r15d,%eax
imul   %rax,%r13
lea    0x0(%r13,%rbx,1),%rax
lea    (%rax,%r14,1),%rbx
lea    (%r12,%rax,1),%rcx
mov    %r15,-0xb0(%rbp)
mov    -0x60(%rbp),%r12
mov    -0x80(%rbp),%r11
mov    -0xb8(%rbp),%rax
mov    $0xff,%r13d
mov    -0x90(%rbp),%r10
mov    -0x70(%rbp),%rsi
jmpq   13a0f <png_image_read_background+0x22f>
lea    0x1(%r15),%r11d
movzbl 0x264(%r12),%ecx
cmp    $0x1,%cl
je     13c69 <png_image_read_background+0x489>
mov    %r8,%rdi
mov    %rdi,%r15
pushq  -0x68(%rbp)
popq   -0xa8(%rbp)
mov    %edi,%ecx
mov    %rcx,-0x88(%rbp)
mov    %eax,%eax
mov    %rax,-0x90(%rbp)
mov    0x20(%rbx),%rax
test   %rax,%rax
jne    13c7d <png_image_read_background+0x49d>
mov    %r11,-0x20(%rbp)
jmpq   13a50 <png_image_read_background+0x270>
and    $0x20,%edx
test   %edx,%edx
jne    13c96 <png_image_read_background+0x4b6>
mov    -0x58(%rbp),%rdx
mov    %r8,%rdi
pushq  -0xc0(%rbp)
pushq  -0xb8(%rbp)
popq   -0xc0(%rbp)
popq   -0xb8(%rbp)
jmpq   13c4a <png_image_read_background+0x46a>
movzwl (%rcx),%edx
movzwl 0x2(%rcx),%r14d
test   %r14w,%r14w
jne    13c9f <png_image_read_background+0x4bf>
mov    %r8,%rdx
test   %r10d,%r10d
mov    %dx,(%rsi,%r12,1)
je     13be6 <png_image_read_background+0x406>
mov    %r14w,(%rsi,%r13,1)
add    $0x4,%rcx
lea    (%rsi,%r9,2),%rsi
cmp    %rdi,%rsi
jb     13bc2 <png_image_read_background+0x3e2>
mov    -0x60(%rbp),%rcx
mov    -0x70(%rbp),%rax
lea    (%rcx,%rax,1),%r14d
mov    -0x98(%rbp),%r13
mov    -0xb0(%rbp),%r15
mov    -0x90(%rbp),%rcx
mov    -0xa0(%rbp),%rax
mov    -0xc8(%rbp),%r12
mov    -0x58(%rbp),%rdx
cmp    %r14d,%edx
ja     13cc3 <png_image_read_background+0x4e3>
mov    -0xd0(%rbp),%r14
mov    -0xa8(%rbp),%r15
mov    -0x80(%rbp),%rdi
mov    -0x78(%rbp),%r10
mov    $0x1,%eax
cmp    %edi,%r10d
jg     13d31 <png_image_read_background+0x551>
mov    -0x48(%rbp),%r15
mov    -0x40(%rbp),%r14
mov    -0x38(%rbp),%r13
mov    -0x30(%rbp),%r12
mov    -0x28(%rbp),%rbx
leaveq 
retq   
cmp    $0x1,%r15d
jg     13d5d <png_image_read_background+0x57d>
mov    $0x3,%ecx
jmpq   13d68 <png_image_read_background+0x588>
movzbl 0x1(%rax),%eax
mov    %r11,-0x8(%rbp)
mov    %rax,-0x10(%rbp)
movzwl (%rsi,%rax,2),%eax
mov    %rax,-0x20(%rbp)
jmpq   13dda <png_image_read_background+0x5fa>
mov    -0x58(%rbp),%rdx
mov    %r8,%rdi
jmp    13c4a <png_image_read_background+0x46a>
cmp    $0xfffe,%r14w
ja     13bd7 <png_image_read_background+0x3f7>
mov    %r14,%rax
imul   %edx,%eax
lea    0x7fff(%rax),%edx
mov    %r11,%rax
mul    %edx
shr    $0xf,%edx
jmpq   13bd7 <png_image_read_background+0x3f7>
mov    0x28(%rbx),%rsi
mov    %rax,-0xa0(%rbp)
mov    %r8,%rdx
mov    %r12,%rdi
mov    %rcx,%r12
callq  5600 <png_read_row@plt>
mov    0x28(%rbx),%rcx
mov    %r15d,%r9d
mov    %r14d,%eax
imul   %rax,%r13
lea    (%r12,%r13,2),%rdx
mov    -0x50(%rbp),%rax
lea    (%rdx,%rax,2),%rdi
mov    -0xa0(%rbp),%rax
mov    %eax,%eax
lea    (%rdx,%rax,2),%rsi
mov    %r14,-0x60(%rbp)
mov    %r15,-0xb0(%rbp)
mov    -0x88(%rbp),%r10
mov    $0x80008001,%r11d
mov    -0xc0(%rbp),%r12
xor    %r8d,%r8d
mov    -0xb8(%rbp),%r13
jmpq   13bee <png_image_read_background+0x40e>
lea    0x1(%rdi),%r9d
movzbl 0x264(%r12),%esi
cmp    $0x1,%sil
je     13dfa <png_image_read_background+0x61a>
mov    %r9,-0x80(%rbp)
mov    %r8,%rax
mov    %rax,%r14
pushq  -0x68(%rbp)
popq   -0x70(%rbp)
jmpq   13c26 <png_image_read_background+0x446>
mov    %rdi,%rcx
sub    %r15d,%ecx
sar    %ecx
mov    %rax,%r8
test   %r8,%r8
jne    13e12 <png_image_read_background+0x632>
mov    $0x3,%r9d
jmpq   13e1b <png_image_read_background+0x63b>
movzbl 0x1(%rax),%edi
test   %dil,%dil
jne    13e66 <png_image_read_background+0x686>
mov    %r9,%rdx
mov    %dl,(%rcx)
add    $0x2,%rax
add    %r10,%rcx
cmp    %rbx,%rcx
jb     13d7c <png_image_read_background+0x59c>
mov    -0x18(%rbp),%rcx
mov    -0xa8(%rbp),%rax
lea    (%rcx,%rax,1),%r15d
mov    -0x88(%rbp),%rcx
mov    -0x98(%rbp),%r13
mov    -0xa0(%rbp),%r9
mov    -0xd0(%rbp),%r14
mov    -0xc0(%rbp),%rbx
mov    -0xc8(%rbp),%r12
xor    %r8d,%r8d
mov    -0x58(%rbp),%rdx
cmp    %edx,%r15d
jb     13eae <png_image_read_background+0x6ce>
mov    -0x78(%rbp),%r10
mov    -0x8(%rbp),%r15
mov    $0x1,%eax
mov    $0x7,%edi
jmpq   13a6b <png_image_read_background+0x28b>
cmp    $0x1,%edi
jg     13f08 <png_image_read_background+0x728>
mov    $0x7,%esi
mov    $0x3,%ecx
jmpq   13f17 <png_image_read_background+0x737>
mov    %rdi,%r9
sub    %r15d,%r9d
sar    %r9d
shl    %cl,%eax
add    $0xffffffff,%eax
mov    %r11,%r8
sar    %r8d
mov    $0x3,%ecx
sub    %r8d,%ecx
mov    %r15,%r8
and    $0x1,%r8d
shl    %cl,%r8d
and    $0x7,%r8d
sub    %r8d,%eax
add    %r14d,%eax
mov    %r9,%rcx
shr    %cl,%eax
test   %eax,%eax
jne    13f23 <png_image_read_background+0x743>
mov    %r11,%r15
mov    -0xa0(%rbp),%r9
mov    $0x1,%eax
xor    %r8d,%r8d
jmpq   13a6b <png_image_read_background+0x28b>
movzbl (%rax),%edx
cmp    $0xfe,%dil
ja     13d8c <png_image_read_background+0x5ac>
movzwl (%rsi,%rdx,2),%edx
imul   %edi,%edx
neg    %edi
add    %r14d,%edi
imul   %r13d,%edi
add    %edx,%edi
mov    %rdi,%rdx
shr    $0xf,%edx
mov    %edx,%r8d
movzbl (%r8,%r12,1),%edx
and    $0x7fff,%edi
imul   %edi,%edx
shr    $0xc,%edx
movzwl (%r11,%r8,2),%edi
add    %edi,%edx
shr    $0x8,%edx
jmpq   13d8c <png_image_read_background+0x5ac>
mov    0x28(%rbx),%rsi
mov    %r8,%rdx
mov    %r12,%rdi
mov    %rcx,%r12
mov    %r9,%rbx
mov    %rsi,-0x50(%rbp)
callq  5600 <png_read_row@plt>
mov    %r15d,%eax
imul   %rax,%r13
lea    (%rbx,%r13,1),%rax
lea    (%r14,%rax,1),%rbx
lea    (%r12,%rax,1),%rcx
mov    %r15,-0x18(%rbp)
mov    -0x60(%rbp),%r11
mov    -0x80(%rbp),%r12
mov    $0xff,%r14d
mov    -0x20(%rbp),%r13
mov    -0x90(%rbp),%r10
mov    -0x70(%rbp),%rsi
mov    -0x10(%rbp),%r9
mov    -0x50(%rbp),%rax
jmpq   13d95 <png_image_read_background+0x5b5>
mov    $0x7,%esi
mov    %rsi,%rcx
sub    %edi,%ecx
sar    %ecx
mov    %rax,%r8
test   %r8,%r8
jne    13f30 <png_image_read_background+0x750>
mov    $0x3,%esi
jmp    13f34 <png_image_read_background+0x754>
cmp    $0x2,%r15d
jg     13f7d <png_image_read_background+0x79d>
mov    $0x8,%eax
jmp    13f8a <png_image_read_background+0x7aa>
sub    %edi,%esi
sar    %esi
shl    %cl,%eax
lea    -0x1(%rax),%r11d
mov    %r9,%rax
sar    %eax
mov    $0x3,%r8d
mov    %r8,%rcx
sub    %eax,%ecx
mov    %rdi,%rax
and    $0x1,%eax
shl    %cl,%eax
and    $0x7,%eax
sub    %eax,%r11d
add    %r14d,%r11d
mov    %rsi,%rcx
shr    %cl,%r11d
test   %r11d,%r11d
jne    13fcc <png_image_read_background+0x7ec>
mov    %r9,%rdi
mov    -0x90(%rbp),%rcx
mov    $0x1,%eax
xor    %r8d,%r8d
jmpq   13c4a <png_image_read_background+0x46a>
lea    -0x1(%r15),%ecx
sar    %ecx
mov    $0x8,%eax
shr    %cl,%eax
mov    %rax,-0xa8(%rbp)
sub    %r15d,%edi
sar    %edi
mov    %rdi,%rcx
mov    $0x1,%eax
shl    %cl,%eax
mov    %r15,%rdi
sar    %edi
mov    $0x3,%ecx
sub    %edi,%ecx
not    %r15d
and    $0x1,%r15d
mov    %r8,%rdi
shl    %cl,%r15d
and    $0x7,%r15d
mov    -0xa0(%rbp),%r9
xor    %r8d,%r8d
jmpq   13b6b <png_image_read_background+0x38b>
cmp    $0x2,%edi
jg     13fd8 <png_image_read_background+0x7f8>
mov    $0x8,%esi
jmp    13fe4 <png_image_read_background+0x804>
lea    -0x1(%rdi),%ecx
sar    %ecx
mov    $0x8,%esi
shr    %cl,%esi
mov    %rsi,-0x70(%rbp)
mov    %rdi,%rcx
sar    %ecx
sub    %ecx,%r8d
mov    %rdi,%r14
not    %r14d
and    $0x1,%r14d
mov    %r8,%rcx
shl    %cl,%r14d
and    $0x7,%r14d
imul   %r15d,%eax
mov    $0x7,%ecx
sub    %edi,%ecx
sar    %ecx
shl    %cl,%r15d
mov    %r9,-0x80(%rbp)
mov    -0x90(%rbp),%rcx
xor    %r8d,%r8d
jmpq   13c26 <png_image_read_background+0x446>
nopw   0x0(%rax,%rax,1)

0000000000014030 <png_image_read_direct>:
push   %rbp
mov    %rsp,%rbp
sub    $0x90,%rsp
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rdi,-0x48(%rbp)
mov    (%rdi),%r12
mov    %r12,-0x30(%rbp)
mov    (%r12),%rax
mov    (%rax),%rbx
mov    0x8(%rax),%rax
mov    %rax,-0x40(%rbp)
mov    $0x1,%ecx
mov    %rcx,-0x70(%rbp)
xor    %r13d,%r13d
mov    %r13,-0x78(%rbp)
mov    0x14(%r12),%r15d
mov    %r15,-0x50(%rbp)
mov    %r15,%rax
and    $0x4,%eax
test   %eax,%eax
je     1408f <png_image_read_direct+0x5f>
mov    %rcx,%r13
mov    %rdi,%r14
mov    %r13,-0x58(%rbp)
mov    %rbx,%rdi
callq  56b0 <png_set_expand@plt>
mov    $0xffffffffffffffff,%rax
mov    %rax,-0x68(%rbp)
mov    %rbx,%rdi
callq  10650 <png_image_format>
mov    %rax,%rcx
and    $0xfffffff7,%ecx
mov    %r15,%r8
xor    %ecx,%r8d
mov    %r8,%rcx
and    $0x2,%ecx
test   %ecx,%ecx
jne    140d8 <png_image_read_direct+0xa8>
mov    %rax,%r15
mov    %r12,%rax
mov    %r8,%r12
pushq  -0x78(%rbp)
popq   -0x80(%rbp)
jmp    14115 <png_image_read_direct+0xe5>
and    $0x2,%r15d
test   %r15d,%r15d
jne    140f3 <png_image_read_direct+0xc3>
mov    %rax,%rcx
and    $0x1,%ecx
test   %ecx,%ecx
jne    1415d <png_image_read_direct+0x12d>
pushq  -0x78(%rbp)
popq   -0x80(%rbp)
jmp    14163 <png_image_read_direct+0x133>
mov    %r12,%r14
mov    %r8,%r12
mov    %rax,%r15
mov    %rbx,%rdi
callq  5810 <png_set_gray_to_rgb@plt>
mov    %r14,%rax
pushq  -0x78(%rbp)
popq   -0x80(%rbp)
and    $0xfffffffd,%r12d
mov    -0x48(%rbp),%r14
mov    $0x186a0,%edx
mov    %rdx,-0x60(%rbp)
mov    %r15,%rcx
and    $0x4,%ecx
test   %ecx,%ecx
jne    14188 <png_image_read_direct+0x158>
mov    $0xffffffffffffffff,%rdx
mov    %rbx,%rdi
xor    %esi,%esi
callq  5640 <png_set_alpha_mode_fixed@plt>
test   %r13d,%r13d
jg     1419b <png_image_read_direct+0x16b>
pushq  -0x78(%rbp)
popq   -0x60(%rbp)
mov    $0x2,%eax
mov    %rax,-0x38(%rbp)
mov    %r12,%rcx
and    $0x40,%ecx
test   %ecx,%ecx
jne    141b3 <png_image_read_direct+0x183>
mov    -0x60(%rbp),%rsi
jmp    141ba <png_image_read_direct+0x18a>
pushq  -0x70(%rbp)
popq   -0x80(%rbp)
mov    %r12,%r14
mov    %r8,%r12
mov    %rax,%r15
mov    $0xffffffffffffffff,%rdx
mov    %rdx,%rcx
mov    %rbx,%rdi
mov    $0x1,%esi
callq  55b0 <png_set_rgb_to_gray_fixed@plt>
mov    %r14,%rax
jmp    1410d <png_image_read_direct+0xdd>
mov    0x18(%rax),%eax
and    $0x4,%eax
test   %eax,%eax
je     1412f <png_image_read_direct+0xff>
mov    $0xffffffffffffffff,%rdx
jmp    1412f <png_image_read_direct+0xff>
mov    %r15,%rax
and    $0x1,%eax
test   %eax,%eax
jne    141ec <png_image_read_direct+0x1bc>
pushq  -0x78(%rbp)
pushq  -0x60(%rbp)
popq   -0x68(%rbp)
popq   -0x60(%rbp)
jmp    14144 <png_image_read_direct+0x114>
and    $0xffffffbf,%r12d
mov    %rax,%rsi
mov    -0x80(%rbp),%r8
test   %r8d,%r8d
jg     141fd <png_image_read_direct+0x1cd>
mov    %r14,%rcx
xor    %r14d,%r14d
mov    %r12,%rdx
and    $0x4,%edx
test   %edx,%edx
je     14260 <png_image_read_direct+0x230>
test   %r13d,%r13d
jg     14241 <png_image_read_direct+0x211>
mov    %rsi,%r13
mov    %rbx,%rdi
callq  58d0 <png_set_scale_16@plt>
mov    %r13,%rsi
jmp    1424f <png_image_read_direct+0x21f>
pushq  -0x70(%rbp)
pushq  -0x60(%rbp)
popq   -0x68(%rbp)
popq   -0x60(%rbp)
jmpq   14144 <png_image_read_direct+0x114>
lea    -0x90(%rbp),%rdi
movslq 0x498(%rbx),%rdx
mov    -0x68(%rbp),%rax
mov    %r15,-0x80(%rbp)
mov    %r8,%r14
mov    %rsi,%r15
mov    %rax,%rsi
mov    $0x186a0,%ecx
callq  8980 <png_muldiv>
test   %eax,%eax
jne    14275 <png_image_read_direct+0x245>
mov    %r15,%rsi
cmp    $0x1,%esi
je     142a1 <png_image_read_direct+0x271>
mov    $0x2,%eax
mov    -0x80(%rbp),%r15
mov    -0x48(%rbp),%rcx
jmp    141c9 <png_image_read_direct+0x199>
mov    %rsi,%r13
mov    %rbx,%rdi
callq  5830 <png_set_expand_16@plt>
mov    %r13,%rsi
and    $0xfffffffb,%r12d
mov    -0x58(%rbp),%r13
mov    $0x2,%eax
mov    -0x48(%rbp),%rcx
mov    %r12,%rdx
and    $0x1,%edx
test   %edx,%edx
jne    142b8 <png_image_read_direct+0x288>
mov    -0x50(%rbp),%r15
xor    %ecx,%ecx
jmpq   14309 <png_image_read_direct+0x2d9>
movslq -0x90(%rbp),%rdi
callq  8b20 <png_gamma_significant>
test   %eax,%eax
jne    14333 <png_image_read_direct+0x303>
mov    %r15,%rsi
mov    $0x2,%eax
mov    -0x80(%rbp),%r15
mov    -0x48(%rbp),%rcx
xor    %r14d,%r14d
jmpq   141c9 <png_image_read_direct+0x199>
mov    $0x2,%eax
mov    -0x80(%rbp),%r15
mov    -0x48(%rbp),%rcx
xor    %esi,%esi
mov    %rax,%r14
jmpq   141c9 <png_image_read_direct+0x199>
and    $0x1,%r15d
test   %r15d,%r15d
jne    1433b <png_image_read_direct+0x30b>
test   %r13d,%r13d
jg     142cd <png_image_read_direct+0x29d>
mov    $0xff,%eax
jmp    142d2 <png_image_read_direct+0x2a2>
mov    $0xffff,%eax
mov    -0x50(%rbp),%r15
mov    %r15,%rcx
and    $0x20,%ecx
test   %ecx,%ecx
je     142ea <png_image_read_direct+0x2ba>
and    $0xffffffdf,%r12d
pushq  -0x78(%rbp)
popq   -0x70(%rbp)
mov    %rsi,%r13
mov    %rax,%rsi
mov    %rbx,%rdi
mov    -0x70(%rbp),%rdx
callq  5630 <png_set_add_alpha@plt>
mov    %r13,%rsi
mov    -0x58(%rbp),%r13
xor    %ecx,%ecx
and    $0xfffffffe,%r12d
mov    %rcx,-0x50(%rbp)
mov    %rbx,%rdi
mov    -0x68(%rbp),%rdx
callq  5640 <png_set_alpha_mode_fixed@plt>
mov    %r12,%rax
and    $0x10,%eax
test   %eax,%eax
je     1435b <png_image_read_direct+0x32b>
mov    %r15,%rax
and    $0x2,%eax
test   %eax,%eax
jne    1434f <png_image_read_direct+0x31f>
and    $0xffffffef,%r15d
jmp    14357 <png_image_read_direct+0x327>
mov    %r15,%rsi
jmpq   1422d <png_image_read_direct+0x1fd>
test   %r14d,%r14d
jle    143cf <png_image_read_direct+0x39f>
mov    %rax,%r14
mov    -0x50(%rbp),%r15
xor    %ecx,%ecx
jmp    14305 <png_image_read_direct+0x2d5>
mov    %rbx,%rdi
callq  5860 <png_set_bgr@plt>
and    $0xffffffef,%r12d
mov    %r12,%rax
and    $0x20,%eax
test   %eax,%eax
je     1437b <png_image_read_direct+0x34b>
mov    %r15,%rax
and    $0x1,%eax
test   %eax,%eax
jne    143f5 <png_image_read_direct+0x3c5>
and    $0xffffffdf,%r15d
and    $0xffffffdf,%r12d
test   %r13d,%r13d
jle    14388 <png_image_read_direct+0x358>
mov    %rbx,%rdi
callq  51e0 <png_set_swap@plt>
test   %r12d,%r12d
jne    1440c <png_image_read_direct+0x3dc>
mov    %rbx,%rdi
callq  10890 <png_image_skip_unused_chunks>
mov    -0x50(%rbp),%r12
test   %r12d,%r12d
je     1441b <png_image_read_direct+0x3eb>
xor    %eax,%eax
mov    %rax,-0x68(%rbp)
mov    %rbx,%rdi
mov    -0x40(%rbp),%r13
mov    %r13,%rsi
callq  5080 <png_read_update_info@plt>
movzbl 0x25(%r13),%ecx
mov    %rcx,%rax
and    $0x2,%eax
test   %eax,%eax
jg     1442c <png_image_read_direct+0x3fc>
mov    $0x1,%eax
pushq  -0x78(%rbp)
popq   -0x38(%rbp)
jmp    14431 <png_image_read_direct+0x401>
test   %r13d,%r13d
jg     1444e <png_image_read_direct+0x41e>
mov    0x20(%rcx),%rdx
test   %rdx,%rdx
jne    1446b <png_image_read_direct+0x43b>
mov    %rax,%rsi
mov    -0x50(%rbp),%r15
mov    $0x1,%ecx
xor    %r14d,%r14d
jmpq   14305 <png_image_read_direct+0x2d5>
cmp    $0x2,%r14d
je     14377 <png_image_read_direct+0x347>
mov    %rbx,%rdi
callq  50d0 <png_set_swap_alpha@plt>
jmpq   14377 <png_image_read_direct+0x347>
mov    %rbx,%rdi
lea    0x19d93(%rip),%rsi        # 2e1a9 <chunks_to_process.34+0x3a4>
callq  5470 <png_error@plt>
cmp    $0x2,%r14d
jne    144dc <png_image_read_direct+0x4ac>
xor    %eax,%eax
jmpq   143a0 <png_image_read_direct+0x370>
mov    $0x3,%eax
and    $0x4,%ecx
test   %ecx,%ecx
jg     144e9 <png_image_read_direct+0x4b9>
test   %r12d,%r12d
jg     14584 <png_image_read_direct+0x554>
mov    -0x38(%rbp),%rax
jmpq   144f6 <png_image_read_direct+0x4c6>
mov    %rsi,%r15
mov    %rbx,%rdi
callq  5740 <png_set_strip_alpha@plt>
mov    %r15,%rsi
mov    -0x50(%rbp),%r15
xor    %r14d,%r14d
mov    %r14,%rcx
jmpq   14305 <png_image_read_direct+0x2d5>
movb   $0x0,-0x8a(%rbp)
mov    0x20(%rcx),%rax
movzbl (%rax),%eax
mov    %ax,-0x88(%rbp)
mov    0x20(%rcx),%rax
movzbl 0x1(%rax),%eax
mov    %ax,-0x86(%rbp)
mov    0x20(%rcx),%rax
movzbl 0x2(%rax),%eax
mov    %ax,-0x84(%rbp)
mov    0x20(%rcx),%rax
movzbl 0x1(%rax),%eax
mov    %ax,-0x82(%rbp)
mov    %rsi,%r15
lea    -0x8a(%rbp),%rsi
xor    %r14d,%r14d
mov    %r14,%r8
mov    %rbx,%rdi
mov    $0x1,%edx
mov    %r14,%rcx
callq  5320 <png_set_background_fixed@plt>
mov    %r15,%rsi
mov    -0x50(%rbp),%r15
mov    %r14,%rcx
jmpq   14305 <png_image_read_direct+0x2d5>
mov    %rbx,%rdi
callq  53f0 <png_set_interlace_handling@plt>
jmpq   143a0 <png_image_read_direct+0x370>
test   %r12d,%r12d
je     14593 <png_image_read_direct+0x563>
mov    -0x38(%rbp),%rax
mov    %r15,%rcx
and    $0x40,%ecx
test   %ecx,%ecx
je     14503 <png_image_read_direct+0x4d3>
add    $0x40,%eax
movzbl 0x24(%r13),%ecx
cmp    $0x10,%cl
jne    14510 <png_image_read_direct+0x4e0>
add    $0x4,%eax
mov    0x134(%rbx),%ecx
mov    %rcx,%rdx
and    $0x1,%edx
test   %edx,%edx
je     14523 <png_image_read_direct+0x4f3>
add    $0x10,%eax
cmp    $0x2,%r14d
je     145b4 <png_image_read_direct+0x584>
mov    %rcx,%rdx
and    $0x20000,%edx
test   %edx,%edx
jne    14554 <png_image_read_direct+0x524>
and    $0x1000000,%ecx
test   %ecx,%ecx
je     1455d <png_image_read_direct+0x52d>
mov    0x130(%rbx),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
jne    1455d <png_image_read_direct+0x52d>
cmp    $0x2,%r14d
je     145ca <png_image_read_direct+0x59a>
or     $0x20,%eax
cmp    %eax,%r15d
jne    145d9 <png_image_read_direct+0x5a9>
mov    -0x58(%rbp),%rax
test   %eax,%eax
mov    -0x48(%rbp),%rax
mov    0x8(%rax),%rcx
movslq 0x10(%rax),%r15
jle    14579 <png_image_read_direct+0x549>
add    %r15,%r15
test   %r15,%r15
js     145e8 <png_image_read_direct+0x5b8>
mov    -0x30(%rbp),%rdi
jmp    14601 <png_image_read_direct+0x5d1>
mov    %rbx,%rdi
lea    0x19c46(%rip),%rsi        # 2e1d4 <chunks_to_process.34+0x3cf>
callq  5470 <png_error@plt>
cmp    $0x2,%r14d
jne    144f6 <png_image_read_direct+0x4c6>
mov    %r15,%rcx
and    $0x1,%ecx
test   %ecx,%ecx
jne    144f6 <png_image_read_direct+0x4c6>
mov    -0x38(%rbp),%rax
jmpq   144f6 <png_image_read_direct+0x4c6>
mov    %r15,%rdx
and    $0x20,%edx
test   %edx,%edx
je     1452d <png_image_read_direct+0x4fd>
add    $0x20,%eax
jmpq   1452d <png_image_read_direct+0x4fd>
mov    %rbx,%rdi
lea    0x19c23(%rip),%rsi        # 2e1f7 <chunks_to_process.34+0x3f2>
callq  5470 <png_error@plt>
mov    %rbx,%rdi
lea    0x19c39(%rip),%rsi        # 2e21c <chunks_to_process.34+0x417>
callq  5470 <png_error@plt>
mov    %r15,%rdx
neg    %rdx
mov    -0x30(%rbp),%rdi
mov    0x10(%rdi),%esi
add    $0xffffffff,%esi
mov    %esi,%esi
imul   %rsi,%rdx
add    %rdx,%rcx
mov    %rcx,0x30(%rax)
mov    %r15,0x38(%rax)
test   %r12d,%r12d
jg     14620 <png_image_read_direct+0x5f0>
cmp    $0x2,%r14d
je     14686 <png_image_read_direct+0x656>
mov    -0x68(%rbp),%rcx
xor    %r12d,%r12d
jmpq   14712 <png_image_read_direct+0x6e2>
mov    %r13,%rsi
mov    %rdi,%r13
mov    %rax,%r12
mov    %rbx,%rdi
callq  50c0 <png_get_rowbytes@plt>
mov    %rax,%rsi
mov    %rbx,%rdi
callq  5800 <png_malloc@plt>
mov    %r13,%rdi
mov    %rax,%r13
mov    %r13,0x28(%r12)
lea    -0x122e(%rip),%rsi        # 13420 <png_image_read_composite>
mov    %r12,%rdx
callq  b260 <png_safe_execute>
movq   $0x0,0x28(%r12)
mov    %r13,%rsi
mov    %rbx,%rdi
mov    %rax,%r12
callq  5790 <png_free@plt>
mov    %r12,%rax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
mov    %r13,%rsi
mov    %rdi,%r13
mov    %rax,%r12
mov    %rbx,%rdi
callq  50c0 <png_get_rowbytes@plt>
mov    %rax,%rsi
mov    %rbx,%rdi
callq  5800 <png_malloc@plt>
mov    %r13,%rdi
mov    %rax,%r13
mov    %r13,0x28(%r12)
lea    -0xed4(%rip),%rsi        # 137e0 <png_image_read_background>
mov    %r12,%rdx
callq  b260 <png_safe_execute>
movq   $0x0,0x28(%r12)
mov    %r13,%rsi
mov    %rax,%r13
mov    %rbx,%rdi
callq  5790 <png_free@plt>
mov    %r13,%rax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
mov    %rbx,%rdi
mov    %r13,%rsi
mov    %r12,%rdx
callq  5600 <png_read_row@plt>
add    %r15,%r13
add    $0xffffffff,%r14d
test   %r14d,%r14d
jne    146ec <png_image_read_direct+0x6bc>
mov    -0x80(%rbp),%rcx
mov    -0x30(%rbp),%rdi
mov    -0x48(%rbp),%rax
add    $0xffffffff,%ecx
test   %ecx,%ecx
jns    14734 <png_image_read_direct+0x704>
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    $0x1,%eax
leaveq 
retq   
mov    0x10(%rdi),%r14d
mov    0x30(%rax),%r13
mov    %rcx,-0x80(%rbp)
jmp    14701 <png_image_read_direct+0x6d1>
nopw   %cs:0x0(%rax,%rax,1)
nopl   0x0(%rax)

0000000000014750 <png_set_read_fn>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
test   %rdi,%rdi
jne    1475f <png_set_read_fn+0xf>
leaveq 
retq   
mov    %rsi,0x108(%rdi)
test   %rdx,%rdx
jne    1477b <png_set_read_fn+0x2b>
lea    0x5e(%rip),%rax        # 147d0 <png_default_read_data>
mov    %rax,0x100(%rdi)
jmp    14782 <png_set_read_fn+0x32>
mov    %rdx,0x100(%rdi)
mov    0xf8(%rdi),%rax
test   %rax,%rax
je     147b9 <png_set_read_fn+0x69>
movq   $0x0,0xf8(%rdi)
lea    0x19aa4(%rip),%rsi        # 2e244 <chunks_to_process.34+0x43f>
mov    %rdi,%rax
mov    %r15,-0x8(%rbp)
mov    %rdi,%r15
mov    %rax,%rdi
callq  5390 <png_warning@plt>
mov    %r15,%rdi
mov    -0x8(%rbp),%r15
movq   $0x0,0x290(%rdi)
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)

00000000000147d0 <png_default_read_data>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
test   %rdi,%rdi
jne    147df <png_default_read_data+0xf>
leaveq 
retq   
mov    $0x1,%eax
mov    0x108(%rdi),%rcx
mov    %rdx,%r8
mov    %r15,-0x10(%rbp)
mov    %rdi,-0x8(%rbp)
mov    %rsi,%rdi
mov    %rax,%rsi
mov    %rdx,%r15
mov    %r8,%rdx
callq  5160 <fread@plt>
cmp    %r15,%rax
jne    14812 <png_default_read_data+0x42>
mov    -0x10(%rbp),%r15
leaveq 
retq   
lea    0x19a6f(%rip),%rsi        # 2e288 <chunks_to_process.34+0x483>
mov    -0x8(%rbp),%rdi
callq  5470 <png_error@plt>
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   (%rax)

0000000000014830 <png_read_data>:
push   %rbp
mov    %rsp,%rbp
mov    0x100(%rdi),%rax
test   %rax,%rax
jne    1484c <png_read_data+0x1c>
lea    0x19a4c(%rip),%rsi        # 2e293 <chunks_to_process.34+0x48e>
callq  5470 <png_error@plt>
callq  *%rax
leaveq 
retq   

0000000000014850 <png_set_expand>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x8(%rbp)
xor    %esi,%esi
mov    %rdi,%r15
callq  17790 <png_rtran_ok>
test   %eax,%eax
jne    14870 <png_set_expand+0x20>
mov    -0x8(%rbp),%r15
leaveq 
retq   
mov    0x134(%r15),%eax
or     $0x2001000,%eax
mov    %eax,0x134(%r15)
mov    -0x8(%rbp),%r15
leaveq 
retq   
nopl   0x0(%rax)

0000000000014890 <png_set_expand_gray_1_2_4_to_8>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x8(%rbp)
xor    %esi,%esi
mov    %rdi,%r15
callq  17790 <png_rtran_ok>
test   %eax,%eax
jne    148b0 <png_set_expand_gray_1_2_4_to_8+0x20>
mov    -0x8(%rbp),%r15
leaveq 
retq   
mov    0x134(%r15),%eax
or     $0x1000,%eax
mov    %eax,0x134(%r15)
mov    -0x8(%rbp),%r15
leaveq 
retq   
nopl   0x0(%rax)

00000000000148d0 <png_set_palette_to_rgb>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x8(%rbp)
xor    %esi,%esi
mov    %rdi,%r15
callq  17790 <png_rtran_ok>
test   %eax,%eax
jne    148f0 <png_set_palette_to_rgb+0x20>
mov    -0x8(%rbp),%r15
leaveq 
retq   
mov    0x134(%r15),%eax
or     $0x2001000,%eax
mov    %eax,0x134(%r15)
mov    -0x8(%rbp),%r15
leaveq 
retq   
nopl   0x0(%rax)

0000000000014910 <png_set_tRNS_to_alpha>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x8(%rbp)
xor    %esi,%esi
mov    %rdi,%r15
callq  17790 <png_rtran_ok>
test   %eax,%eax
jne    14930 <png_set_tRNS_to_alpha+0x20>
mov    -0x8(%rbp),%r15
leaveq 
retq   
mov    0x134(%r15),%eax
or     $0x2001000,%eax
mov    %eax,0x134(%r15)
mov    -0x8(%rbp),%r15
leaveq 
retq   
nopl   0x0(%rax)

0000000000014950 <png_set_expand_16>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x8(%rbp)
xor    %esi,%esi
mov    %rdi,%r15
callq  17790 <png_rtran_ok>
test   %eax,%eax
jne    14970 <png_set_expand_16+0x20>
mov    -0x8(%rbp),%r15
leaveq 
retq   
mov    0x134(%r15),%eax
or     $0x2001200,%eax
mov    %eax,0x134(%r15)
mov    -0x8(%rbp),%r15
leaveq 
retq   
nopl   0x0(%rax)

0000000000014990 <png_set_gray_to_rgb>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %rdi,-0x8(%rbp)
xor    %esi,%esi
callq  17790 <png_rtran_ok>
test   %eax,%eax
jne    149a9 <png_set_gray_to_rgb+0x19>
leaveq 
retq   
mov    -0x8(%rbp),%rax
mov    %rax,%rdi
mov    %r15,-0x8(%rbp)
mov    %rax,%r15
callq  5440 <png_set_expand_gray_1_2_4_to_8@plt>
mov    0x134(%r15),%eax
or     $0x4000,%eax
mov    %eax,0x134(%r15)
mov    -0x8(%rbp),%r15
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)

00000000000149e0 <png_set_rgb_to_gray>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
movdqu %xmm1,-0x10(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %r13,-0x18(%rbp)
mov    %rsi,%r13
lea    0x198ed(%rip),%rsi        # 2e2f0 <chunks_to_process.34+0x4eb>
mov    %rdi,%r14
callq  69f0 <png_fixed>
mov    %rax,%r15
lea    0x198f7(%rip),%rsi        # 2e30c <chunks_to_process.34+0x507>
mov    %r14,%rdi
movdqu -0x10(%rbp),%xmm0
callq  69f0 <png_fixed>
mov    %rax,%rcx
mov    %r15,%rdx
mov    %r13,%rsi
mov    %r14,%rdi
callq  55b0 <png_set_rgb_to_gray_fixed@plt>
mov    -0x18(%rbp),%r13
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   0x0(%rax)

0000000000014a50 <png_set_rgb_to_gray_fixed>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %rsi,-0x20(%rbp)
mov    %rdi,-0x18(%rbp)
mov    %rdx,-0x10(%rbp)
mov    %rcx,-0x8(%rbp)
mov    $0x1,%esi
callq  17790 <png_rtran_ok>
test   %eax,%eax
jne    14a78 <png_set_rgb_to_gray_fixed+0x28>
leaveq 
retq   
mov    -0x20(%rbp),%rax
cmp    $0x1,%eax
jle    14aa2 <png_set_rgb_to_gray_fixed+0x52>
cmp    $0x2,%eax
je     14ab7 <png_set_rgb_to_gray_fixed+0x67>
cmp    $0x3,%eax
jne    14aa7 <png_set_rgb_to_gray_fixed+0x57>
mov    -0x18(%rbp),%rcx
mov    0x134(%rcx),%eax
or     $0x200000,%eax
mov    %eax,0x134(%rcx)
jmp    14ae3 <png_set_rgb_to_gray_fixed+0x93>
cmp    $0x1,%eax
je     14ace <png_set_rgb_to_gray_fixed+0x7e>
lea    0x1987c(%rip),%rsi        # 2e32a <chunks_to_process.34+0x525>
mov    -0x18(%rbp),%rdi
callq  5470 <png_error@plt>
mov    -0x18(%rbp),%rcx
mov    0x134(%rcx),%eax
or     $0x400000,%eax
mov    %eax,0x134(%rcx)
jmp    14ae3 <png_set_rgb_to_gray_fixed+0x93>
mov    -0x18(%rbp),%rcx
mov    0x134(%rcx),%eax
or     $0x600000,%eax
mov    %eax,0x134(%rcx)
movzbl 0x267(%rcx),%eax
cmp    $0x3,%al
jne    14aff <png_set_rgb_to_gray_fixed+0xaf>
mov    0x134(%rcx),%eax
or     $0x1000,%eax
mov    %eax,0x134(%rcx)
mov    -0x10(%rbp),%rdx
test   %edx,%edx
jns    14b20 <png_set_rgb_to_gray_fixed+0xd0>
xor    %eax,%eax
mov    -0x8(%rbp),%rsi
test   %rax,%rax
jne    14b2f <png_set_rgb_to_gray_fixed+0xdf>
movzwl 0x3d2(%rcx),%eax
test   %ax,%ax
je     14b52 <png_set_rgb_to_gray_fixed+0x102>
leaveq 
retq   
mov    -0x8(%rbp),%rsi
test   %esi,%esi
jns    14b60 <png_set_rgb_to_gray_fixed+0x110>
mov    $0x1,%eax
jmp    14b0d <png_set_rgb_to_gray_fixed+0xbd>
test   %esi,%esi
js     14b12 <png_set_rgb_to_gray_fixed+0xc2>
lea    0x19814(%rip),%rsi        # 2e34e <chunks_to_process.34+0x549>
mov    %rcx,%rdi
mov    %r15,-0x20(%rbp)
mov    %rcx,%r15
callq  b100 <png_app_warning>
mov    %r15,%rcx
mov    -0x20(%rbp),%r15
jmp    14b12 <png_set_rgb_to_gray_fixed+0xc2>
movzwl 0x3d4(%rcx),%eax
test   %ax,%ax
je     14b71 <png_set_rgb_to_gray_fixed+0x121>
leaveq 
retq   
lea    (%rdx,%rsi,1),%eax
cmp    $0x186a0,%eax
jle    14b85 <png_set_rgb_to_gray_fixed+0x135>
mov    $0x1,%eax
jmp    14b0d <png_set_rgb_to_gray_fixed+0xbd>
movw   $0x1b38,0x3d2(%rcx)
movw   $0x5b8a,0x3d4(%rcx)
leaveq 
retq   
and    $0x1ffff,%edx
shl    $0xa,%edx
mov    $0xa7c5ac5,%edi
mov    %rdi,%rax
mul    %edx
shr    $0x7,%edx
mov    %dx,0x3d2(%rcx)
and    $0x1ffff,%esi
shl    $0xa,%esi
mov    %rdi,%rax
mul    %esi
shr    $0x7,%edx
mov    %dx,0x3d4(%rcx)
movb   $0x1,0x3d1(%rcx)
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

0000000000014bd0 <png_set_alpha_mode>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rsi,%r15
mov    %rdi,%r14
callq  17860 <convert_gamma_value>
mov    %rax,%rdx
mov    %r15,%rsi
mov    %r14,%rdi
callq  5640 <png_set_alpha_mode_fixed@plt>
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

0000000000014c10 <png_set_alpha_mode_fixed>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    %rdi,-0x20(%rbp)
mov    %rdx,-0x28(%rbp)
mov    %rsi,-0x18(%rbp)
xor    %esi,%esi
mov    %rsi,-0x10(%rbp)
callq  17790 <png_rtran_ok>
test   %eax,%eax
jne    14c35 <png_set_alpha_mode_fixed+0x25>
leaveq 
retq   
mov    $0x1,%edx
mov    %rdx,-0x8(%rbp)
mov    -0x20(%rbp),%rax
mov    %rax,%rdi
mov    %r15,-0x20(%rbp)
mov    %rax,%r15
mov    -0x28(%rbp),%rsi
callq  17800 <translate_gamma_flags>
cmp    $0x3e7,%eax
jle    14c98 <png_set_alpha_mode_fixed+0x88>
cmp    $0x989680,%eax
jg     14c98 <png_set_alpha_mode_fixed+0x88>
mov    %rax,%rdi
mov    %r14,-0x28(%rbp)
mov    %rax,%r14
callq  8a50 <png_reciprocal>
mov    -0x18(%rbp),%rcx
cmp    $0x1,%ecx
jle    14ca7 <png_set_alpha_mode_fixed+0x97>
cmp    $0x2,%ecx
je     14ced <png_set_alpha_mode_fixed+0xdd>
cmp    $0x3,%ecx
je     14d1d <png_set_alpha_mode_fixed+0x10d>
mov    %r15,%rdi
lea    0x1970d(%rip),%rsi        # 2e3a0 <chunks_to_process.34+0x59b>
callq  5470 <png_error@plt>
mov    %r15,%rdi
lea    0x196db(%rip),%rsi        # 2e37d <chunks_to_process.34+0x578>
callq  5470 <png_error@plt>
test   %ecx,%ecx
je     14d4d <png_set_alpha_mode_fixed+0x13d>
cmp    $0x1,%ecx
jne    14c89 <png_set_alpha_mode_fixed+0x79>
mov    0x134(%r15),%ecx
and    $0xff7fffff,%ecx
mov    %ecx,0x134(%r15)
mov    0x130(%r15),%ecx
and    $0xffffdfff,%ecx
mov    %ecx,0x130(%r15)
mov    $0x186a0,%r14d
pushq  -0x8(%rbp)
popq   -0x10(%rbp)
jmpq   14d75 <png_set_alpha_mode_fixed+0x165>
mov    0x134(%r15),%ecx
and    $0xff7fffff,%ecx
mov    %ecx,0x134(%r15)
mov    0x130(%r15),%ecx
or     $0x2000,%ecx
mov    %ecx,0x130(%r15)
pushq  -0x8(%rbp)
popq   -0x10(%rbp)
jmp    14d75 <png_set_alpha_mode_fixed+0x165>
mov    0x134(%r15),%ecx
or     $0x800000,%ecx
mov    %ecx,0x134(%r15)
mov    0x130(%r15),%ecx
and    $0xffffdfff,%ecx
mov    %ecx,0x130(%r15)
pushq  -0x8(%rbp)
popq   -0x10(%rbp)
jmp    14d75 <png_set_alpha_mode_fixed+0x165>
mov    0x134(%r15),%ecx
and    $0xff7fffff,%ecx
mov    %ecx,0x134(%r15)
mov    0x130(%r15),%ecx
and    $0xffffdfff,%ecx
mov    %ecx,0x130(%r15)
movslq 0x498(%r15),%rcx
test   %ecx,%ecx
jne    14d9b <png_set_alpha_mode_fixed+0x18b>
mov    %eax,0x498(%r15)
movzwl 0x4e2(%r15),%eax
or     $0x1,%ax
mov    %ax,0x4e2(%r15)
mov    %r14d,0x2a4(%r15)
mov    -0x10(%rbp),%rax
test   %eax,%eax
jg     14db4 <png_set_alpha_mode_fixed+0x1a4>
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r15
leaveq 
retq   
lea    0x27c(%r15),%rdi
mov    $0xa,%edx
xor    %esi,%esi
callq  5350 <memset@plt>
movslq 0x498(%r15),%rax
mov    %eax,0x278(%r15)
movb   $0x2,0x274(%r15)
mov    0x134(%r15),%eax
mov    %rax,%rcx
and    $0xfffffeff,%ecx
mov    %ecx,0x134(%r15)
mov    %rax,%rcx
and    $0x80,%ecx
test   %ecx,%ecx
jne    14e1c <png_set_alpha_mode_fixed+0x20c>
and    $0xfffffe7f,%eax
add    $0x80,%eax
mov    %eax,0x134(%r15)
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r15
leaveq 
retq   
mov    %r15,%rdi
lea    0x1958d(%rip),%rsi        # 2e3b3 <chunks_to_process.34+0x5ae>
callq  5470 <png_error@plt>
nopl   0x0(%rax,%rax,1)

0000000000014e30 <png_set_strip_alpha>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x8(%rbp)
xor    %esi,%esi
mov    %rdi,%r15
callq  17790 <png_rtran_ok>
test   %eax,%eax
jne    14e50 <png_set_strip_alpha+0x20>
mov    -0x8(%rbp),%r15
leaveq 
retq   
mov    0x134(%r15),%eax
or     $0x40000,%eax
mov    %eax,0x134(%r15)
mov    -0x8(%rbp),%r15
leaveq 
retq   
nopl   0x0(%rax)

0000000000014e70 <png_set_background>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %r12,-0x8(%rbp)
mov    %r13,-0x10(%rbp)
mov    %r14,-0x18(%rbp)
mov    %r15,-0x20(%rbp)
mov    %rdx,%r13
mov    %rsi,%r14
mov    %rcx,%r15
lea    0x1954e(%rip),%rsi        # 2e3e6 <chunks_to_process.34+0x5e1>
mov    %rdi,%r12
callq  69f0 <png_fixed>
mov    %r15,%rcx
mov    %r13,%rdx
mov    %r14,%rsi
mov    %r12,%rdi
mov    %rax,%r8
callq  5320 <png_set_background_fixed@plt>
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)

0000000000014ed0 <png_set_background_fixed>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    %rsi,-0x28(%rbp)
mov    %rdx,-0x20(%rbp)
mov    %rdi,-0x10(%rbp)
mov    %r8,-0x8(%rbp)
mov    %rcx,-0x18(%rbp)
xor    %esi,%esi
callq  17790 <png_rtran_ok>
test   %eax,%eax
jne    14ef9 <png_set_background_fixed+0x29>
leaveq 
retq   
mov    -0x28(%rbp),%rsi
test   %rsi,%rsi
jne    14f04 <png_set_background_fixed+0x34>
leaveq 
retq   
mov    -0x20(%rbp),%rdx
test   %edx,%edx
je     14f7b <png_set_background_fixed+0xab>
mov    -0x10(%rbp),%rdi
mov    0x134(%rdi),%ecx
mov    %rcx,%rax
and    $0xff7bff7f,%eax
add    $0x40080,%eax
mov    %eax,0x134(%rdi)
mov    0x130(%rdi),%eax
and    $0xffffdfff,%eax
mov    %eax,0x130(%rdi)
mov    (%rsi),%rax
mov    %rax,0x27c(%rdi)
movzwl 0x8(%rsi),%eax
mov    -0x8(%rbp),%rsi
mov    %esi,0x278(%rdi)
mov    %dl,0x274(%rdi)
mov    %ax,0x284(%rdi)
mov    -0x18(%rbp),%rax
test   %eax,%eax
jne    14f8d <png_set_background_fixed+0xbd>
and    $0xff7bfe7f,%ecx
lea    0x40080(%rcx),%eax
mov    %eax,0x134(%rdi)
leaveq 
retq   
lea    0x19477(%rip),%rsi        # 2e3f9 <chunks_to_process.34+0x5f4>
mov    -0x10(%rbp),%rdi
callq  5390 <png_warning@plt>
leaveq 
retq   
and    $0xff7bfe7f,%ecx
lea    0x40180(%rcx),%eax
mov    %eax,0x134(%rdi)
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   0x0(%rax)

0000000000014fb0 <png_set_scale_16>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x8(%rbp)
xor    %esi,%esi
mov    %rdi,%r15
callq  17790 <png_rtran_ok>
test   %eax,%eax
jne    14fd0 <png_set_scale_16+0x20>
mov    -0x8(%rbp),%r15
leaveq 
retq   
mov    0x134(%r15),%eax
or     $0x4000000,%eax
mov    %eax,0x134(%r15)
mov    -0x8(%rbp),%r15
leaveq 
retq   
nopl   0x0(%rax)

0000000000014ff0 <png_set_strip_16>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x8(%rbp)
xor    %esi,%esi
mov    %rdi,%r15
callq  17790 <png_rtran_ok>
test   %eax,%eax
jne    15010 <png_set_strip_16+0x20>
mov    -0x8(%rbp),%r15
leaveq 
retq   
mov    0x134(%r15),%eax
or     $0x400,%eax
mov    %eax,0x134(%r15)
mov    -0x8(%rbp),%r15
leaveq 
retq   
nopl   0x0(%rax)

0000000000015030 <png_set_quantize>:
push   %rbp
mov    %rsp,%rbp
sub    $0xd0,%rsp
mov    %r15,-0x60(%rbp)
mov    %r9,-0xc8(%rbp)
mov    %rcx,-0xb8(%rbp)
mov    %rdx,-0xc0(%rbp)
mov    %r8,-0xa8(%rbp)
mov    %rsi,-0x98(%rbp)
mov    %r14,%r15
mov    %r12,%r14
mov    %rdi,-0xb0(%rbp)
xor    %esi,%esi
mov    %rdi,%r12
callq  17790 <png_rtran_ok>
test   %eax,%eax
jne    15089 <png_set_quantize+0x59>
mov    %r14,%r12
mov    %r15,%r14
mov    -0x60(%rbp),%r15
leaveq 
retq   
mov    0x134(%r12),%eax
or     $0x40,%eax
mov    %eax,0x134(%r12)
mov    -0xc8(%rbp),%rcx
test   %ecx,%ecx
je     150b9 <png_set_quantize+0x89>
mov    %r15,%rax
mov    %rbx,%rdx
mov    %r13,%r8
mov    -0xc0(%rbp),%r15
jmp    1510e <png_set_quantize+0xde>
mov    -0xc0(%rbp),%rax
mov    %eax,%esi
mov    %r12,%rdi
mov    %r13,-0x78(%rbp)
mov    %r15,-0xa0(%rbp)
mov    %rcx,%r13
mov    %rax,%r15
callq  5800 <png_malloc@plt>
mov    %rax,0x380(%r12)
xor    %eax,%eax
jmp    150f8 <png_set_quantize+0xc8>
mov    0x380(%r12),%rdx
movslq %eax,%rcx
mov    %al,(%rdx,%rcx,1)
add    $0x1,%eax
cmp    %r15d,%eax
jl     150e7 <png_set_quantize+0xb7>
mov    %r13,%rcx
mov    %rbx,%rdx
mov    -0xa0(%rbp),%rax
mov    -0x78(%rbp),%r8
mov    -0xb8(%rbp),%r9
cmp    %r9d,%r15d
jg     1515c <png_set_quantize+0x12c>
xor    %r13d,%r13d
mov    -0x98(%rbp),%rbx
mov    %r15,-0x48(%rbp)
mov    0x250(%r12),%rsi
test   %rsi,%rsi
jne    1513d <png_set_quantize+0x10d>
mov    %rbx,0x250(%r12)
test   %ecx,%ecx
mov    %r15w,0x258(%r12)
jne    151af <png_set_quantize+0x17f>
mov    %rdx,%rbx
mov    %r14,%r12
mov    %rax,%r14
mov    %r8,%r13
mov    -0x60(%rbp),%r15
leaveq 
retq   
mov    -0xa8(%rbp),%rbx
test   %rbx,%rbx
jne    15200 <png_set_quantize+0x1d0>
mov    %r15d,%ebx
mov    %r12,%rdi
mov    %rbx,%rsi
mov    %r8,-0x50(%rbp)
mov    %rax,-0x58(%rbp)
mov    %rdx,-0x40(%rbp)
mov    %r14,-0x48(%rbp)
mov    %r9,%r14
callq  5800 <png_malloc@plt>
mov    %rax,0x408(%r12)
mov    %rbx,%rsi
mov    %r12,%rdi
callq  5800 <png_malloc@plt>
mov    %rax,0x410(%r12)
xor    %eax,%eax
jmpq   1524f <png_set_quantize+0x21f>
mov    $0x8000,%ecx
mov    %r12,%rdi
mov    %rcx,%rsi
mov    %r8,-0x18(%rbp)
mov    %rax,-0x20(%rbp)
mov    %rdx,-0x8(%rbp)
mov    %r14,-0x10(%rbp)
mov    %rcx,%r14
callq  5780 <png_calloc@plt>
mov    %rax,0x378(%r12)
mov    %r12,%rdi
mov    %r14,%rsi
callq  5800 <png_malloc@plt>
mov    %r14,%rdx
mov    %rax,%r14
mov    $0xff,%esi
mov    %r14,%rdi
callq  5350 <memset@plt>
mov    %r13,%r8
jmpq   152f6 <png_set_quantize+0x2c6>
mov    %r15d,%esi
mov    %r12,%rdi
mov    %r8,-0xb0(%rbp)
mov    %rax,-0xb8(%rbp)
mov    %rdx,-0x58(%rbp)
mov    %r14,-0x68(%rbp)
mov    %r9,%r14
callq  5800 <png_malloc@plt>
mov    %rax,0x400(%r12)
xor    %eax,%eax
jmpq   15331 <png_set_quantize+0x301>
mov    0x408(%r12),%rcx
movslq %eax,%rdx
mov    %al,(%rcx,%rdx,1)
mov    0x410(%r12),%rcx
mov    %al,(%rcx,%rdx,1)
add    $0x1,%eax
cmp    %eax,%r15d
jg     15233 <png_set_quantize+0x203>
mov    $0x1808,%esi
mov    %r12,%rdi
callq  5780 <png_calloc@plt>
mov    %rax,%rbx
mov    %rbx,-0x78(%rbp)
mov    $0x60,%ecx
xor    %r13d,%r13d
mov    -0x98(%rbp),%r8
mov    %r13,%rax
jmpq   153aa <png_set_quantize+0x37a>
mov    %rax,%rsi
add    %r10d,%esi
add    %edx,%esi
mov    %rcx,%rdx
or     %ebx,%edx
movslq %edx,%rdi
movzbl (%rdi,%r14,1),%edx
cmp    %esi,%edx
jle    152a8 <png_set_quantize+0x278>
mov    %sil,(%rdi,%r14,1)
mov    0x378(%r12),%rdx
mov    %r8b,(%rdi,%rdx,1)
add    $0x1,%ecx
cmp    $0x1f,%ecx
jle    1541f <png_set_quantize+0x3ef>
mov    -0xc8(%rbp),%rax
lea    0x1(%rax),%edi
mov    -0x40(%rbp),%rbx
mov    -0x38(%rbp),%rdx
mov    -0x30(%rbp),%rcx
cmp    $0x1f,%edi
jle    15432 <png_set_quantize+0x402>
mov    -0x50(%rbp),%rax
lea    0x1(%rax),%edi
mov    -0x28(%rbp),%rdx
cmp    $0x1f,%edi
jle    15441 <png_set_quantize+0x411>
add    $0x1,%r8d
mov    -0x48(%rbp),%r15
mov    -0x98(%rbp),%rbx
cmp    %r15d,%r8d
jl     15450 <png_set_quantize+0x420>
mov    %r14,%rsi
mov    %r12,%rdi
callq  5790 <png_free@plt>
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x60(%rbp),%r15
leaveq 
retq   
mov    0x400(%r12),%rdx
movslq %eax,%rcx
mov    %al,(%rdx,%rcx,1)
add    $0x1,%eax
cmp    %eax,%r15d
jg     15320 <png_set_quantize+0x2f0>
mov    $0x1,%eax
lea    -0x1(%r15),%ecx
xor    %r13d,%r13d
jmpq   15488 <png_set_quantize+0x458>
mov    (%rsi),%r15
mov    %r15,-0xa8(%rbp)
mov    %r12,%rdi
callq  5790 <png_free@plt>
mov    %r15,%rsi
test   %rsi,%rsi
jne    15347 <png_set_quantize+0x317>
mov    -0x90(%rbp),%r15
mov    -0xa8(%rbp),%rax
movq   $0x0,(%rbx,%r14,8)
add    $0x1,%r13d
mov    %rax,-0xa8(%rbp)
cmp    $0x300,%r13d
jle    15499 <png_set_quantize+0x469>
mov    -0xa0(%rbp),%rcx
add    $0x60,%ecx
xor    %r13d,%r13d
mov    -0x98(%rbp),%r8
mov    -0xb8(%rbp),%r14
mov    %rcx,-0xa0(%rbp)
cmp    %r15d,%r14d
jl     154b5 <png_set_quantize+0x485>
mov    %rbx,%rsi
mov    %r8,%rbx
mov    %r12,%rdi
callq  5790 <png_free@plt>
mov    0x410(%r12),%rsi
mov    %r12,%rdi
callq  5790 <png_free@plt>
mov    %r14,%r15
mov    0x408(%r12),%rsi
mov    %r12,%rdi
callq  5790 <png_free@plt>
movq   $0x0,0x410(%r12)
movq   $0x0,0x408(%r12)
mov    -0x48(%rbp),%r14
mov    -0x40(%rbp),%rdx
mov    -0x58(%rbp),%rax
mov    -0x50(%rbp),%r8
mov    -0xc8(%rbp),%rcx
jmpq   15124 <png_set_quantize+0xf4>
cmp    %r9d,%ecx
jg     154c5 <png_set_quantize+0x495>
mov    %r9,%rdx
sub    %ecx,%edx
jmpq   154cb <png_set_quantize+0x49b>
cmp    %ecx,%edi
jg     154db <png_set_quantize+0x4ab>
sub    %edi,%ecx
jmpq   154df <png_set_quantize+0x4af>
cmp    %edx,%edi
jg     154ef <png_set_quantize+0x4bf>
sub    %edi,%edx
jmpq   154f3 <png_set_quantize+0x4c3>
movslq %r8d,%rax
lea    (%rax,%rax,2),%rax
movzbl 0x1(%rbx,%rax,1),%ecx
shr    $0x3,%ecx
mov    %rcx,-0x30(%rbp)
movzbl (%rbx,%rax,1),%edx
shr    $0x3,%edx
mov    %rdx,-0x28(%rbp)
movzbl 0x2(%rbx,%rax,1),%r9d
shr    $0x3,%r9d
mov    %r13,%rdi
jmpq   152de <png_set_quantize+0x2ae>
add    $0xffffffff,%ecx
mov    $0x1,%eax
cmp    %ecx,%r14d
jg     15534 <png_set_quantize+0x504>
mov    %r13,%rdx
jmpq   15523 <png_set_quantize+0x4f3>
movslq %r13d,%r14
mov    (%rbx,%r14,8),%rsi
test   %rsi,%rsi
je     1536f <png_set_quantize+0x33f>
mov    %r15,-0x90(%rbp)
jmpq   1535c <png_set_quantize+0x32c>
lea    -0x1(%r15),%edx
mov    %rdx,-0x88(%rbp)
jmpq   1555e <png_set_quantize+0x52e>
mov    %rcx,%rdx
sub    %r9d,%edx
cmp    %eax,%edx
jl     1527f <png_set_quantize+0x24f>
mov    %rdx,%rsi
jmpq   15282 <png_set_quantize+0x252>
neg    %ecx
add    %edi,%ecx
cmp    %edx,%ecx
jl     1557f <png_set_quantize+0x54f>
mov    %rcx,%rax
jmpq   15582 <png_set_quantize+0x552>
neg    %edx
add    %edi,%edx
mov    %rdx,-0x38(%rbp)
mov    %rdi,%rbx
shl    $0xa,%ebx
mov    %rdi,-0x50(%rbp)
mov    %rbx,-0x40(%rbp)
mov    %r13,%rdi
jmpq   152ca <png_set_quantize+0x29a>
mov    %dil,(%r15,%r11,1)
mov    0x400(%r12),%rax
mov    %r10b,(%r8,%rax,1)
mov    %r9,%rdx
mov    %r13,%rax
cmp    %ecx,%edx
jl     1559d <png_set_quantize+0x56d>
test   %eax,%eax
jle    15480 <png_set_quantize+0x450>
mov    $0x1,%eax
mov    -0xc8(%rbp),%r15
test   %r15d,%r15d
je     155d3 <png_set_quantize+0x5a3>
mov    -0xc0(%rbp),%rax
mov    %r13,%rcx
jmpq   155fd <png_set_quantize+0x5cd>
mov    -0x80(%rbp),%r13
mov    -0x88(%rbp),%rdx
cmp    %edx,%r13d
jge    15722 <png_set_quantize+0x6f2>
movslq %r13d,%rdx
lea    (%rdx,%rdx,2),%rdx
mov    %rdx,-0x70(%rbp)
lea    0x1(%r13),%r14d
mov    %r14,-0x80(%rbp)
jmpq   15679 <png_set_quantize+0x649>
mov    %rdx,%rax
mov    %rdi,%rsi
shl    $0x5,%esi
or     %esi,%ebx
lea    (%rcx,%rdx,1),%r10d
mov    %rdi,-0xc8(%rbp)
mov    %r13,%rcx
jmpq   152ab <png_set_quantize+0x27b>
mov    0x400(%r12),%r15
lea    0x1(%rdx),%r9d
movslq %r9d,%r8
movzbl (%r8,%r15,1),%edi
movzwl (%rbx,%rdi,2),%esi
movslq %edx,%r11
movzbl (%r15,%r11,1),%r10d
movzwl (%rbx,%r10,2),%edx
cmp    %dx,%si
ja     1550d <png_set_quantize+0x4dd>
mov    %r9,%rdx
jmpq   15523 <png_set_quantize+0x4f3>
mov    -0xc0(%rbp),%rcx
mov    %r13,%rdx
jmpq   15751 <png_set_quantize+0x721>
mov    0x400(%r12),%rdx
movslq %ecx,%rbx
movzbl (%rdx,%rbx,1),%edx
cmp    %edx,%r14d
jle    1576c <png_set_quantize+0x73c>
add    $0x1,%ecx
cmp    %ecx,%r14d
jg     155e2 <png_set_quantize+0x5b2>
mov    -0x98(%rbp),%rbx
mov    0x400(%r12),%rsi
mov    %r12,%rdi
callq  5790 <png_free@plt>
movq   $0x0,0x400(%r12)
mov    %r15,%rcx
mov    %r14,%r15
mov    -0x68(%rbp),%r14
mov    -0x58(%rbp),%rdx
mov    -0xb8(%rbp),%rax
mov    -0xb0(%rbp),%r8
jmpq   15124 <png_set_quantize+0xf4>
movslq %r12d,%rdx
mov    (%rbx,%rdx,8),%rcx
mov    %rcx,(%rax)
mov    %r13b,0x8(%rax)
mov    %r14b,0x9(%rax)
mov    %rax,(%rbx,%rdx,8)
mov    -0xb0(%rbp),%r12
mov    -0xa0(%rbp),%rcx
mov    -0x70(%rbp),%rdx
mov    -0x98(%rbp),%r8
add    $0x1,%r14d
cmp    %r15d,%r14d
jge    15717 <png_set_quantize+0x6e7>
movzbl (%r8,%rdx,1),%esi
movslq %r14d,%rdi
lea    (%rdi,%rdi,2),%rdi
movzbl (%r8,%rdi,1),%r9d
sub    %r9d,%esi
mov    %rsi,%r11
sar    $0x1f,%r11d
mov    %r11,%r9
xor    %esi,%r9d
movzbl 0x1(%r8,%rdx,1),%esi
movzbl 0x1(%r8,%rdi,1),%r10d
sub    %r10d,%esi
mov    %rsi,%r10
sar    $0x1f,%r10d
xor    %r10d,%esi
add    %esi,%r9d
movzbl 0x2(%r8,%rdx,1),%esi
movzbl 0x2(%r8,%rdi,1),%edi
sub    %edi,%esi
mov    %rsi,%rdi
sar    $0x1f,%edi
xor    %edi,%esi
add    %esi,%r9d
lea    (%rdi,%r11,1),%esi
add    %r10d,%esi
sub    %esi,%r9d
cmp    %r9d,%ecx
jl     15675 <png_set_quantize+0x645>
mov    %r12,%rdi
mov    %r9,%r12
mov    $0x10,%esi
callq  5150 <png_malloc_warn@plt>
test   %rax,%rax
jne    15646 <png_set_quantize+0x616>
mov    -0xb0(%rbp),%r12
mov    -0xa0(%rbp),%rcx
xor    %eax,%eax
mov    -0x98(%rbp),%r8
test   %rax,%rax
jne    15553 <png_set_quantize+0x523>
xor    %eax,%eax
test   %rax,%rax
jne    157ac <png_set_quantize+0x77c>
xor    %eax,%eax
mov    %rax,%r13
jmpq   1537b <png_set_quantize+0x34b>
mov    0x400(%r12),%rsi
movslq %edx,%r11
movzbl (%rsi,%r11,1),%esi
cmp    %esi,%r14d
jle    157d0 <png_set_quantize+0x7a0>
add    $0x1,%edx
cmp    %edx,%r14d
jg     15735 <png_set_quantize+0x705>
mov    -0x98(%rbp),%rbx
mov    -0xc0(%rbp),%r15
mov    %r13,%r8
jmpq   15856 <png_set_quantize+0x826>
add    $0xffffffff,%eax
movslq %eax,%rsi
mov    0x400(%r12),%rdx
movzbl (%rsi,%rdx,1),%edx
cmp    %edx,%r14d
jle    1576c <png_set_quantize+0x73c>
lea    (%rsi,%rsi,2),%rdi
mov    -0x98(%rbp),%r8
movzwl (%r8,%rdi,1),%edx
lea    (%rbx,%rbx,2),%rsi
mov    %dx,(%r8,%rsi,1)
movzbl 0x2(%r8,%rdi,1),%edx
mov    %dl,0x2(%r8,%rsi,1)
jmpq   155fa <png_set_quantize+0x5ca>
mov    %rax,-0x68(%rbp)
xor    %r13d,%r13d
mov    -0xc0(%rbp),%r14
mov    -0xb8(%rbp),%r11
mov    -0xc8(%rbp),%r10
mov    %r13,%rdx
jmpq   1587e <png_set_quantize+0x84e>
add    $0xffffffff,%ecx
movslq %ecx,%r10
mov    0x400(%r12),%rsi
movzbl (%r10,%rsi,1),%esi
cmp    %esi,%r14d
jle    157d0 <png_set_quantize+0x7a0>
lea    (%r11,%r11,2),%rbx
mov    -0x98(%rbp),%r15
movzwl (%r15,%rbx,1),%esi
lea    (%r10,%r10,2),%r9
movzwl (%r15,%r9,1),%r8d
mov    %si,(%r15,%r9,1)
movzbl 0x2(%r15,%rbx,1),%edi
movzbl 0x2(%r15,%r9,1),%esi
mov    %dil,0x2(%r15,%r9,1)
mov    %r8w,(%r15,%rbx,1)
mov    %sil,0x2(%r15,%rbx,1)
mov    0x380(%r12),%rsi
mov    %dl,(%r10,%rsi,1)
mov    0x380(%r12),%rsi
mov    %cl,(%rsi,%r11,1)
jmpq   1574e <png_set_quantize+0x71e>
mov    0x380(%r12),%rcx
movslq %r8d,%rdi
movzbl (%rcx,%rdi,1),%ecx
cmp    %ecx,%r14d
jle    1588b <png_set_quantize+0x85b>
add    $0x1,%r8d
cmp    %r8d,%r15d
jg     1583e <png_set_quantize+0x80e>
mov    -0xc8(%rbp),%r15
jmpq   15609 <png_set_quantize+0x5d9>
cmp    %r15d,%r11d
jge    158e2 <png_set_quantize+0x8b2>
mov    -0x70(%rbp),%rdx
mov    -0x78(%rbp),%rbx
mov    -0xa0(%rbp),%rcx
add    $0x1,%edx
cmp    %ecx,%edx
jle    158ef <png_set_quantize+0x8bf>
mov    -0x68(%rbp),%rax
jmpq   1537b <png_set_quantize+0x34b>
lea    (%rcx,%rcx,2),%r11
movzbl (%rbx,%r11,1),%ecx
movzbl (%rbx),%edx
sub    %edx,%ecx
mov    %rcx,%rdx
sar    $0x1f,%edx
xor    %edx,%ecx
sub    %edx,%ecx
movzbl 0x1(%rbx,%r11,1),%edx
movzbl 0x1(%rbx),%esi
sub    %esi,%edx
mov    %rdx,%rsi
sar    $0x1f,%esi
xor    %esi,%edx
sub    %esi,%edx
add    %ecx,%edx
movzbl 0x2(%rbx,%r11,1),%ecx
movzbl 0x2(%rbx),%esi
sub    %esi,%ecx
mov    %rcx,%rsi
sar    $0x1f,%esi
xor    %esi,%ecx
sub    %esi,%ecx
add    %edx,%ecx
mov    %rdi,-0xc0(%rbp)
mov    %r13,%rdx
jmpq   1596f <png_set_quantize+0x93f>
mov    -0x78(%rbp),%rbx
mov    -0x68(%rbp),%rax
jmpq   1537b <png_set_quantize+0x34b>
movslq %edx,%rax
mov    (%rbx,%rax,8),%rax
test   %rax,%rax
je     1587b <png_set_quantize+0x84b>
mov    %rdx,-0x70(%rbp)
jmpq   15a57 <png_set_quantize+0xa27>
movzbl (%rbx,%r11,1),%esi
movslq %eax,%rdi
lea    (%rdi,%rdi,2),%r10
movzbl (%rbx,%r10,1),%edi
sub    %edi,%esi
mov    %rsi,%r9
sar    $0x1f,%r9d
mov    %r9,%rdi
xor    %esi,%edi
sub    %r9d,%edi
movzbl 0x1(%rbx,%r11,1),%esi
movzbl 0x1(%rbx,%r10,1),%r9d
sub    %r9d,%esi
mov    %rsi,%r9
sar    $0x1f,%r9d
xor    %r9d,%esi
sub    %r9d,%esi
add    %esi,%edi
movzbl 0x2(%rbx,%r11,1),%esi
movzbl 0x2(%rbx,%r10,1),%r9d
sub    %r9d,%esi
mov    %rsi,%r9
sar    $0x1f,%r9d
xor    %r9d,%esi
sub    %r9d,%esi
add    %edi,%esi
cmp    %esi,%ecx
jle    1596c <png_set_quantize+0x93c>
mov    %rsi,%rcx
mov    %rax,%rdx
add    $0x1,%eax
cmp    %eax,%r14d
jg     15904 <png_set_quantize+0x8d4>
mov    0x380(%r12),%rax
mov    -0xc0(%rbp),%rcx
mov    %dl,(%rax,%rcx,1)
mov    $0x1,%eax
jmpq   15852 <png_set_quantize+0x822>
mov    0x408(%r12),%r9
movzbl 0x0(%r13,%r9,1),%esi
mov    0x380(%r12),%rdi
movslq %eax,%rcx
movzbl (%rdi,%rcx,1),%edx
cmp    %dl,%sil
jne    159ba <png_set_quantize+0x98a>
movzbl (%r9,%rbx,1),%edx
mov    %dl,(%rdi,%rcx,1)
add    0x380(%r12),%rcx
movzbl (%rcx),%edx
cmp    %r15d,%edx
jne    159da <png_set_quantize+0x9aa>
mov    0x408(%r12),%rdx
movzbl 0x0(%r13,%rdx,1),%edx
mov    %dl,(%rcx)
add    $0x1,%eax
cmp    %eax,%r14d
jg     15990 <png_set_quantize+0x960>
mov    -0x90(%rbp),%rax
mov    -0x80(%rbp),%rcx
mov    -0x88(%rbp),%rdx
mov    0x408(%r12),%rbx
movzbl 0x0(%r13,%rbx,1),%edi
mov    0x410(%r12),%rsi
movzbl (%rdx,%rsi,1),%esi
mov    %dil,(%rbx,%rsi,1)
mov    0x410(%r12),%rbx
movzbl (%rdx,%rbx,1),%edi
mov    0x408(%r12),%rsi
movzbl 0x0(%r13,%rsi,1),%esi
mov    %dil,(%rbx,%rsi,1)
mov    0x408(%r12),%rsi
mov    %r15b,0x0(%r13,%rsi,1)
mov    0x410(%r12),%rsi
mov    %cl,(%rdx,%rsi,1)
xor    %r13d,%r13d
cmp    %r15d,%r11d
jge    15867 <png_set_quantize+0x837>
mov    (%rax),%rax
test   %rax,%rax
je     15867 <png_set_quantize+0x837>
movzbl 0x8(%rax),%esi
mov    0x408(%r12),%rbx
movzbl (%rsi,%rbx,1),%ecx
cmp    %ecx,%r15d
jle    15a4b <png_set_quantize+0xa1b>
movzbl 0x9(%rax),%ecx
movzbl (%rcx,%rbx,1),%edx
cmp    %edx,%r15d
jle    15a4b <png_set_quantize+0xa1b>
mov    %r15,%rdx
and    $0x1,%edx
test   %edx,%edx
jle    15a95 <png_set_quantize+0xa65>
mov    %rsi,%rdx
mov    %rcx,%rsi
mov    %rdx,%rcx
test   %r10d,%r10d
lea    -0x1(%r15),%r15d
movslq %r15d,%rdx
lea    (%rdx,%rdx,2),%r9
movzwl (%r8,%r9,1),%edi
movslq %ecx,%r13
movzbl (%rbx,%r13,1),%ebx
lea    (%rbx,%rbx,2),%rbx
mov    %di,(%r8,%rbx,1)
movzbl 0x2(%r8,%r9,1),%edi
mov    %dil,0x2(%r8,%rbx,1)
jne    159f4 <png_set_quantize+0x9c4>
movslq %esi,%rbx
mov    %rdx,-0x88(%rbp)
mov    %rcx,-0x80(%rbp)
mov    %rax,-0x90(%rbp)
xor    %eax,%eax
jmpq   159dd <png_set_quantize+0x9ad>
nopw   %cs:0x0(%rax,%rax,1)

0000000000015af0 <png_set_gamma>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
movdqu %xmm1,-0x10(%rbp)
mov    %r15,-0x20(%rbp)
mov    %r14,-0x18(%rbp)
mov    %rdi,%r14
callq  17860 <convert_gamma_value>
mov    %rax,%r15
mov    %r14,%rdi
movdqu -0x10(%rbp),%xmm0
callq  17860 <convert_gamma_value>
mov    %rax,%rdx
mov    %r15,%rsi
mov    %r14,%rdi
callq  52c0 <png_set_gamma_fixed@plt>
mov    -0x18(%rbp),%r14
mov    -0x20(%rbp),%r15
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)

0000000000015b40 <png_set_gamma_fixed>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %rdi,-0x10(%rbp)
mov    %rsi,-0x18(%rbp)
mov    %rdx,-0x8(%rbp)
xor    %esi,%esi
callq  17790 <png_rtran_ok>
test   %eax,%eax
jne    15b61 <png_set_gamma_fixed+0x21>
leaveq 
retq   
mov    $0x1,%edx
mov    -0x10(%rbp),%rax
mov    %rax,%rdi
mov    %r15,-0x10(%rbp)
mov    %rax,%r15
mov    -0x18(%rbp),%rsi
callq  17800 <translate_gamma_flags>
mov    %r15,%rdi
mov    %r14,-0x18(%rbp)
mov    %rax,%r14
xor    %edx,%edx
mov    -0x8(%rbp),%rsi
callq  17800 <translate_gamma_flags>
test   %eax,%eax
jle    15bc7 <png_set_gamma_fixed+0x87>
test   %r14d,%r14d
jle    15bd6 <png_set_gamma_fixed+0x96>
mov    %eax,0x498(%r15)
movzwl 0x4e2(%r15),%eax
or     $0x1,%ax
mov    %ax,0x4e2(%r15)
mov    %r14d,0x2a4(%r15)
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r15
leaveq 
retq   
mov    %r15,%rdi
lea    0x18859(%rip),%rsi        # 2e42a <chunks_to_process.34+0x625>
callq  5470 <png_error@plt>
mov    %r15,%rdi
lea    0x1886e(%rip),%rsi        # 2e44e <chunks_to_process.34+0x649>
callq  5470 <png_error@plt>
data16 nopw %cs:0x0(%rax,%rax,1)

0000000000015bf0 <png_set_crc_action>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
test   %rdi,%rdi
jne    15bff <png_set_crc_action+0xf>
leaveq 
retq   
cmp    $0x3,%esi
jle    15c10 <png_set_crc_action+0x20>
cmp    $0x4,%esi
je     15c32 <png_set_crc_action+0x42>
cmp    $0x5,%esi
je     15c84 <png_set_crc_action+0x94>
jmp    15c73 <png_set_crc_action+0x83>
cmp    $0x2,%esi
je     15c45 <png_set_crc_action+0x55>
cmp    $0x3,%esi
jne    15c73 <png_set_crc_action+0x83>
mov    0x130(%rdi),%eax
and    $0xfffff3ff,%eax
add    $0x400,%eax
mov    %eax,0x130(%rdi)
jmp    15c84 <png_set_crc_action+0x94>
mov    0x130(%rdi),%eax
or     $0xc00,%eax
mov    %eax,0x130(%rdi)
jmp    15c84 <png_set_crc_action+0x94>
lea    0x18828(%rip),%rsi        # 2e474 <chunks_to_process.34+0x66f>
mov    %rdi,%rax
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rdi,%r14
mov    %rax,%rdi
mov    %rdx,%r15
callq  5390 <png_warning@plt>
mov    %r15,%rdx
mov    %r14,%rdi
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
mov    0x130(%rdi),%eax
and    $0xfffff3ff,%eax
mov    %eax,0x130(%rdi)
cmp    $0x3,%edx
jle    15c95 <png_set_crc_action+0xa5>
cmp    $0x4,%edx
je     15cb2 <png_set_crc_action+0xc2>
cmp    $0x5,%edx
jne    15c9f <png_set_crc_action+0xaf>
leaveq 
retq   
cmp    $0x1,%edx
je     15cc5 <png_set_crc_action+0xd5>
cmp    $0x3,%edx
je     15cdd <png_set_crc_action+0xed>
mov    0x130(%rdi),%eax
and    $0xfffffcff,%eax
mov    %eax,0x130(%rdi)
leaveq 
retq   
mov    0x130(%rdi),%eax
or     $0x300,%eax
mov    %eax,0x130(%rdi)
leaveq 
retq   
mov    0x130(%rdi),%eax
and    $0xfffffcff,%eax
add    $0x200,%eax
mov    %eax,0x130(%rdi)
leaveq 
retq   
mov    0x130(%rdi),%eax
and    $0xfffffcff,%eax
add    $0x100,%eax
mov    %eax,0x130(%rdi)
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)

0000000000015d00 <png_set_read_user_transform_fn>:
push   %rbp
mov    %rsp,%rbp
mov    0x134(%rdi),%eax
or     $0x100000,%eax
mov    %eax,0x134(%rdi)
mov    %rsi,0x110(%rdi)
leaveq 
retq   
xchg   %ax,%ax

0000000000015d20 <png_read_transform_info>:
push   %rbp
mov    %rsp,%rbp
mov    0x134(%rdi),%eax
mov    %rax,%rcx
and    $0x1000,%ecx
test   %ecx,%ecx
jne    15e01 <png_read_transform_info+0xe1>
mov    0x134(%rdi),%eax
and    $0x80,%eax
test   %eax,%eax
je     15d66 <png_read_transform_info+0x46>
mov    0x27c(%rdi),%rax
mov    %rax,0xca(%rsi)
movzwl 0x284(%rdi),%eax
mov    %ax,0xd2(%rsi)
movslq 0x498(%rdi),%rax
mov    %eax,0x34(%rsi)
movzbl 0x24(%rsi),%eax
cmp    $0x10,%al
je     15e35 <png_read_transform_info+0x115>
mov    0x134(%rdi),%eax
and    $0x4000,%eax
test   %eax,%eax
je     15d94 <png_read_transform_info+0x74>
movzbl 0x25(%rsi),%eax
or     $0x2,%al
mov    %al,0x25(%rsi)
mov    0x134(%rdi),%eax
and    $0x600000,%eax
test   %eax,%eax
je     15dac <png_read_transform_info+0x8c>
movzbl 0x25(%rsi),%eax
and    $0xfd,%al
mov    %al,0x25(%rsi)
mov    0x134(%rdi),%eax
and    $0x40,%eax
test   %eax,%eax
jne    15e64 <png_read_transform_info+0x144>
mov    0x134(%rdi),%eax
and    $0x200,%eax
test   %eax,%eax
jne    15e99 <png_read_transform_info+0x179>
mov    0x134(%rdi),%eax
and    $0x4,%eax
test   %eax,%eax
jne    15eba <png_read_transform_info+0x19a>
movzbl 0x25(%rsi),%eax
cmp    $0x3,%al
je     15ecf <png_read_transform_info+0x1af>
and    $0x2,%eax
test   %eax,%eax
jg     15f53 <png_read_transform_info+0x233>
movb   $0x1,0x29(%rsi)
jmpq   15ed3 <png_read_transform_info+0x1b3>
movzbl 0x25(%rsi),%ecx
cmp    $0x3,%cl
je     15f5c <png_read_transform_info+0x23c>
movzwl 0x260(%rdi),%edx
test   %dx,%dx
jne    15f76 <png_read_transform_info+0x256>
movzbl 0x24(%rsi),%eax
cmp    $0x7,%al
ja     15e2a <png_read_transform_info+0x10a>
movb   $0x8,0x24(%rsi)
movw   $0x0,0x22(%rsi)
jmpq   15d3b <png_read_transform_info+0x1b>
mov    0x134(%rdi),%eax
and    $0x4000000,%eax
test   %eax,%eax
je     15e48 <png_read_transform_info+0x128>
movb   $0x8,0x24(%rsi)
mov    0x134(%rdi),%eax
and    $0x400,%eax
test   %eax,%eax
je     15d7c <png_read_transform_info+0x5c>
movb   $0x8,0x24(%rsi)
jmpq   15d7c <png_read_transform_info+0x5c>
movzbl 0x25(%rsi),%eax
cmp    $0x2,%al
je     15e74 <png_read_transform_info+0x154>
cmp    $0x6,%al
jne    15dbd <png_read_transform_info+0x9d>
mov    0x378(%rdi),%rax
test   %rax,%rax
je     15dbd <png_read_transform_info+0x9d>
movzbl 0x24(%rsi),%eax
cmp    $0x8,%al
jne    15dbd <png_read_transform_info+0x9d>
movb   $0x3,0x25(%rsi)
jmpq   15dbd <png_read_transform_info+0x9d>
movzbl 0x24(%rsi),%eax
cmp    $0x8,%al
jne    15dd0 <png_read_transform_info+0xb0>
movzbl 0x25(%rsi),%eax
cmp    $0x3,%al
je     15dd0 <png_read_transform_info+0xb0>
movb   $0x10,0x24(%rsi)
jmpq   15dd0 <png_read_transform_info+0xb0>
movzbl 0x24(%rsi),%eax
cmp    $0x7,%al
ja     15de1 <png_read_transform_info+0xc1>
movb   $0x8,0x24(%rsi)
jmpq   15de1 <png_read_transform_info+0xc1>
movb   $0x1,0x29(%rsi)
mov    0x134(%rdi),%eax
and    $0x40000,%eax
test   %eax,%eax
je     15ef1 <png_read_transform_info+0x1d1>
movzbl 0x25(%rsi),%eax
and    $0xfb,%al
mov    %al,0x25(%rsi)
movw   $0x0,0x22(%rsi)
movzbl 0x25(%rsi),%eax
and    $0x4,%eax
test   %eax,%eax
jle    15f06 <png_read_transform_info+0x1e6>
movzbl 0x29(%rsi),%eax
add    $0x1,%eax
mov    %al,0x29(%rsi)
mov    0x134(%rdi),%eax
and    $0x8000,%eax
test   %eax,%eax
jne    15f8e <png_read_transform_info+0x26e>
mov    0x134(%rdi),%eax
and    $0x100000,%eax
test   %eax,%eax
jne    15fc7 <png_read_transform_info+0x2a7>
movzbl 0x24(%rsi),%ecx
movzbl 0x29(%rsi),%eax
imul   %cl
mov    %al,0x2a(%rsi)
cmp    $0x7,%al
ja     15fec <png_read_transform_info+0x2cc>
movzbl %al,%eax
mov    (%rsi),%ecx
imul   %rcx,%rax
add    $0x7,%rax
shr    $0x3,%rax
jmpq   15ff9 <png_read_transform_info+0x2d9>
movb   $0x3,0x29(%rsi)
jmpq   15ed3 <png_read_transform_info+0x1b3>
movzwl 0x260(%rdi),%eax
test   %ax,%ax
jne    16006 <png_read_transform_info+0x2e6>
mov    $0x2,%eax
jmpq   1600b <png_read_transform_info+0x2eb>
and    $0x2000000,%eax
test   %eax,%eax
je     15e1e <png_read_transform_info+0xfe>
or     $0x4,%cl
mov    %cl,0x25(%rsi)
jmpq   15e1e <png_read_transform_info+0xfe>
movzbl 0x25(%rsi),%ecx
cmp    $0x2,%cl
je     15f9f <png_read_transform_info+0x27f>
test   %cl,%cl
jne    15f15 <png_read_transform_info+0x1f5>
movzbl 0x29(%rsi),%eax
add    $0x1,%eax
mov    %al,0x29(%rsi)
mov    0x134(%rdi),%eax
and    $0x1000000,%eax
test   %eax,%eax
je     15f15 <png_read_transform_info+0x1f5>
or     $0x4,%cl
mov    %cl,0x25(%rsi)
jmpq   15f15 <png_read_transform_info+0x1f5>
movzbl 0x128(%rdi),%eax
test   %al,%al
je     15fd5 <png_read_transform_info+0x2b5>
mov    %al,0x24(%rsi)
movzbl 0x129(%rdi),%eax
test   %al,%al
je     15f28 <png_read_transform_info+0x208>
mov    %al,0x29(%rsi)
jmpq   15f28 <png_read_transform_info+0x208>
movzbl %al,%eax
shr    $0x3,%rax
mov    (%rsi),%ecx
imul   %rcx,%rax
mov    %rax,0x10(%rsi)
mov    %rax,0x240(%rdi)
leaveq 
retq   
mov    $0x6,%eax
movb   $0x8,0x24(%rsi)
movw   $0x0,0x22(%rsi)
mov    %al,0x25(%rsi)
mov    0x250(%rdi),%rax
test   %rax,%rax
jne    15d3b <png_read_transform_info+0x1b>
lea    0x1846e(%rip),%rsi        # 2e49d <chunks_to_process.34+0x698>
callq  5470 <png_error@plt>
data16 nopw %cs:0x0(%rax,%rax,1)
nop

0000000000016040 <png_do_read_transformations>:
push   %rbp
mov    %rsp,%rbp
sub    $0x40,%rsp
mov    %r14,-0x30(%rbp)
mov    %r15,-0x38(%rbp)
mov    0x228(%rdi),%r8
test   %r8,%r8
je     163c2 <png_do_read_transformations+0x382>
mov    0x130(%rdi),%eax
mov    %rax,%rcx
and    $0x4000,%ecx
test   %ecx,%ecx
jne    163ce <png_do_read_transformations+0x38e>
xor    %edx,%edx
mov    0x134(%rdi),%eax
mov    %rax,%rcx
and    $0x1000,%ecx
test   %ecx,%ecx
jne    163e5 <png_do_read_transformations+0x3a5>
mov    %r14,%rcx
mov    %rsi,%r14
mov    %r15,%r8
mov    %r13,%r15
mov    %r12,%r13
mov    %rbx,%r12
mov    %rdi,%rbx
mov    0x134(%rbx),%eax
mov    %rax,%rsi
and    $0x40000,%esi
test   %esi,%esi
jne    16441 <png_do_read_transformations+0x401>
mov    0x134(%rbx),%eax
and    $0x600000,%eax
test   %eax,%eax
jne    16493 <png_do_read_transformations+0x453>
mov    0x134(%rbx),%eax
and    $0x4000,%eax
test   %eax,%eax
jne    164cf <png_do_read_transformations+0x48f>
mov    0x134(%rbx),%eax
and    $0x80,%eax
test   %eax,%eax
je     16120 <png_do_read_transformations+0xe0>
mov    0x228(%rbx),%rsi
add    $0x1,%rsi
mov    %r14,%rdi
mov    %rbx,%rax
mov    %r15,-0x10(%rbp)
mov    %rdx,%r15
mov    %rax,%rdx
callq  18b40 <png_do_compose>
mov    %r15,%rdx
mov    -0x38(%rbp),%r8
mov    -0x30(%rbp),%rcx
mov    -0x10(%rbp),%r15
mov    0x134(%rbx),%eax
mov    %rax,%rsi
and    $0x2000,%esi
test   %esi,%esi
jne    16510 <png_do_read_transformations+0x4d0>
mov    0x134(%rbx),%eax
mov    %rax,%rsi
and    $0x40000,%esi
test   %esi,%esi
jne    16571 <png_do_read_transformations+0x531>
mov    0x134(%rbx),%eax
and    $0x800000,%eax
test   %eax,%eax
jne    165af <png_do_read_transformations+0x56f>
mov    0x134(%rbx),%eax
and    $0x4000000,%eax
test   %eax,%eax
je     1618b <png_do_read_transformations+0x14b>
mov    0x228(%rbx),%rsi
add    $0x1,%rsi
mov    %r14,%rdi
callq  17ed0 <png_do_scale_16_to_8>
mov    -0x38(%rbp),%r8
mov    -0x30(%rbp),%rcx
mov    0x134(%rbx),%eax
and    $0x400,%eax
test   %eax,%eax
je     161b5 <png_do_read_transformations+0x175>
mov    0x228(%rbx),%rsi
add    $0x1,%rsi
mov    %r14,%rdi
callq  17f40 <png_do_chop>
mov    -0x38(%rbp),%r8
mov    -0x30(%rbp),%rcx
mov    0x134(%rbx),%eax
and    $0x40,%eax
test   %eax,%eax
jne    165e2 <png_do_read_transformations+0x5a2>
mov    0x134(%rbx),%eax
and    $0x200,%eax
test   %eax,%eax
je     161f0 <png_do_read_transformations+0x1b0>
mov    0x228(%rbx),%rsi
add    $0x1,%rsi
mov    %r14,%rdi
callq  1ade0 <png_do_expand_16>
mov    -0x38(%rbp),%r8
mov    -0x30(%rbp),%rcx
mov    0x134(%rbx),%eax
and    $0x4000,%eax
test   %eax,%eax
jne    1661d <png_do_read_transformations+0x5dd>
mov    0x134(%rbx),%eax
and    $0x20,%eax
test   %eax,%eax
je     1622b <png_do_read_transformations+0x1eb>
mov    0x228(%rbx),%rsi
add    $0x1,%rsi
mov    %r14,%rdi
callq  23a60 <png_do_invert>
mov    -0x38(%rbp),%r8
mov    -0x30(%rbp),%rcx
mov    0x134(%rbx),%eax
and    $0x80000,%eax
test   %eax,%eax
je     16255 <png_do_read_transformations+0x215>
mov    0x228(%rbx),%rsi
add    $0x1,%rsi
mov    %r14,%rdi
callq  180a0 <png_do_read_invert_alpha>
mov    -0x38(%rbp),%r8
mov    -0x30(%rbp),%rcx
mov    0x134(%rbx),%eax
and    $0x8,%eax
test   %eax,%eax
je     16284 <png_do_read_transformations+0x244>
mov    0x228(%rbx),%rsi
add    $0x1,%rsi
lea    0x2dd(%rbx),%rdx
mov    %r14,%rdi
callq  17cf0 <png_do_unshift>
mov    -0x38(%rbp),%r8
mov    -0x30(%rbp),%rcx
mov    0x134(%rbx),%eax
and    $0x4,%eax
test   %eax,%eax
je     162ac <png_do_read_transformations+0x26c>
mov    0x228(%rbx),%rsi
add    $0x1,%rsi
mov    %r14,%rdi
callq  17bb0 <png_do_unpack>
mov    -0x38(%rbp),%r8
mov    -0x30(%rbp),%rcx
movzbl 0x10(%r14),%eax
cmp    $0x3,%al
je     16650 <png_do_read_transformations+0x610>
mov    0x134(%rbx),%eax
and    $0x1,%eax
test   %eax,%eax
je     162e1 <png_do_read_transformations+0x2a1>
mov    0x228(%rbx),%rsi
add    $0x1,%rsi
mov    %r14,%rdi
callq  23af0 <png_do_bgr>
mov    -0x38(%rbp),%r8
mov    -0x30(%rbp),%rcx
mov    0x134(%rbx),%eax
and    $0x10000,%eax
test   %eax,%eax
je     1630b <png_do_read_transformations+0x2cb>
mov    0x228(%rbx),%rsi
add    $0x1,%rsi
mov    %r14,%rdi
callq  23a00 <png_do_packswap>
mov    -0x38(%rbp),%r8
mov    -0x30(%rbp),%rcx
mov    0x134(%rbx),%eax
and    $0x8000,%eax
test   %eax,%eax
je     16342 <png_do_read_transformations+0x302>
mov    0x228(%rbx),%rsi
add    $0x1,%rsi
movzwl 0x272(%rbx),%edx
mov    0x130(%rbx),%ecx
mov    %r14,%rdi
callq  18160 <png_do_read_filler>
mov    -0x38(%rbp),%r8
mov    -0x30(%rbp),%rcx
mov    0x134(%rbx),%eax
and    $0x20000,%eax
test   %eax,%eax
je     1636c <png_do_read_transformations+0x32c>
mov    0x228(%rbx),%rsi
add    $0x1,%rsi
mov    %r14,%rdi
callq  17f90 <png_do_read_swap_alpha>
mov    -0x38(%rbp),%r8
mov    -0x30(%rbp),%rcx
mov    0x134(%rbx),%eax
and    $0x10,%eax
test   %eax,%eax
je     1639e <png_do_read_transformations+0x35e>
mov    0x228(%rbx),%rsi
add    $0x1,%rsi
mov    %r14,%rdi
mov    %r14,-0x8(%rbp)
mov    %rcx,%r14
callq  239c0 <png_do_swap>
mov    %r14,%rcx
mov    -0x8(%rbp),%r14
mov    -0x38(%rbp),%r8
mov    0x134(%rbx),%eax
and    $0x100000,%eax
test   %eax,%eax
jne    16677 <png_do_read_transformations+0x637>
mov    %r12,%rbx
mov    %r13,%r12
mov    %r15,%r13
mov    %r8,%r15
mov    %rcx,%r14
leaveq 
retq   
lea    0x180f5(%rip),%rsi        # 2e4be <chunks_to_process.34+0x6b9>
callq  5470 <png_error@plt>
and    $0x40,%eax
test   %eax,%eax
jne    16077 <png_do_read_transformations+0x37>
lea    0x180ee(%rip),%rsi        # 2e4ce <chunks_to_process.34+0x6c9>
callq  5470 <png_error@plt>
movzbl 0x10(%rsi),%ecx
cmp    $0x3,%cl
je     166eb <png_do_read_transformations+0x6ab>
movzwl 0x260(%rdi),%ecx
test   %cx,%cx
jne    1673d <png_do_read_transformations+0x6fd>
add    $0x1,%r8
mov    %rsi,%rax
mov    %rdx,%rcx
mov    %r13,-0x28(%rbp)
mov    %r12,%r13
mov    %rbx,%r12
mov    %rdi,%rbx
mov    %rax,%rdi
mov    %rsi,%r14
mov    %r8,%rsi
mov    %rdx,%r15
mov    %rcx,%rdx
callq  1a880 <png_do_expand>
mov    %r15,%rdx
mov    -0x38(%rbp),%r8
mov    -0x30(%rbp),%rcx
mov    -0x28(%rbp),%r15
jmpq   160a5 <png_do_read_transformations+0x65>
and    $0x80,%eax
test   %eax,%eax
jne    160bc <png_do_read_transformations+0x7c>
movzbl 0x10(%r14),%eax
cmp    $0x6,%al
je     1645f <png_do_read_transformations+0x41f>
cmp    $0x4,%al
jne    160bc <png_do_read_transformations+0x7c>
mov    0x228(%rbx),%rsi
add    $0x1,%rsi
mov    %r14,%rdi
mov    %rdx,%rax
mov    %r15,-0x20(%rbp)
mov    %rdx,%r15
mov    %rax,%rdx
callq  23850 <png_do_strip_channel>
mov    %r15,%rdx
mov    -0x38(%rbp),%r8
mov    -0x30(%rbp),%rcx
mov    -0x20(%rbp),%r15
jmpq   160bc <png_do_read_transformations+0x7c>
mov    0x228(%rbx),%rax
add    $0x1,%rax
mov    %rbx,%rdi
mov    %r14,%rsi
mov    %r15,-0x18(%rbp)
mov    %rdx,%r15
mov    %rax,%rdx
callq  18630 <png_do_rgb_to_gray>
test   %eax,%eax
jne    1678d <png_do_read_transformations+0x74d>
mov    %r15,%rdx
mov    -0x38(%rbp),%r8
mov    -0x30(%rbp),%rcx
mov    -0x18(%rbp),%r15
jmpq   160cf <png_do_read_transformations+0x8f>
mov    0x12c(%rbx),%eax
and    $0x800,%eax
test   %eax,%eax
jne    160e2 <png_do_read_transformations+0xa2>
mov    0x228(%rbx),%rsi
add    $0x1,%rsi
mov    %r14,%rdi
mov    %r15,-0x18(%rbp)
mov    %rdx,%r15
callq  18480 <png_do_gray_to_rgb>
mov    %r15,%rdx
mov    -0x38(%rbp),%r8
mov    -0x30(%rbp),%rcx
mov    -0x18(%rbp),%r15
jmpq   160e2 <png_do_read_transformations+0xa2>
mov    %rax,%rsi
and    $0x600000,%esi
test   %esi,%esi
jne    16137 <png_do_read_transformations+0xf7>
and    $0x80,%eax
test   %eax,%eax
jne    167b2 <png_do_read_transformations+0x772>
movzbl 0x267(%rbx),%eax
cmp    $0x3,%al
je     16137 <png_do_read_transformations+0xf7>
mov    0x228(%rbx),%rsi
add    $0x1,%rsi
mov    %r14,%rdi
mov    %rbx,%rax
mov    %r15,-0x10(%rbp)
mov    %rdx,%r15
mov    %rax,%rdx
callq  1a0c0 <png_do_gamma>
mov    %r15,%rdx
mov    -0x38(%rbp),%r8
mov    -0x30(%rbp),%rcx
mov    -0x10(%rbp),%r15
jmpq   16137 <png_do_read_transformations+0xf7>
and    $0x80,%eax
test   %eax,%eax
je     1614e <png_do_read_transformations+0x10e>
movzbl 0x10(%r14),%eax
cmp    $0x6,%al
je     1658f <png_do_read_transformations+0x54f>
cmp    $0x4,%al
jne    1614e <png_do_read_transformations+0x10e>
mov    0x228(%rbx),%rsi
add    $0x1,%rsi
mov    %r14,%rdi
callq  23850 <png_do_strip_channel>
mov    -0x38(%rbp),%r8
mov    -0x30(%rbp),%rcx
jmpq   1614e <png_do_read_transformations+0x10e>
movzbl 0x10(%r14),%eax
and    $0x4,%eax
test   %eax,%eax
jle    16161 <png_do_read_transformations+0x121>
mov    0x228(%rbx),%rsi
add    $0x1,%rsi
mov    %r14,%rdi
mov    %rbx,%rdx
callq  1a480 <png_do_encode_alpha>
mov    -0x38(%rbp),%r8
mov    -0x30(%rbp),%rcx
jmpq   16161 <png_do_read_transformations+0x121>
mov    0x228(%rbx),%rsi
add    $0x1,%rsi
mov    0x378(%rbx),%rdx
mov    0x380(%rbx),%rcx
mov    %r14,%rdi
callq  1ae40 <png_do_quantize>
mov    0x8(%r14),%rax
test   %rax,%rax
je     167d9 <png_do_read_transformations+0x799>
mov    -0x38(%rbp),%r8
mov    -0x30(%rbp),%rcx
jmpq   161c6 <png_do_read_transformations+0x186>
mov    0x12c(%rbx),%eax
and    $0x800,%eax
test   %eax,%eax
je     16203 <png_do_read_transformations+0x1c3>
mov    0x228(%rbx),%rsi
add    $0x1,%rsi
mov    %r14,%rdi
callq  18480 <png_do_gray_to_rgb>
mov    -0x38(%rbp),%r8
mov    -0x30(%rbp),%rcx
jmpq   16203 <png_do_read_transformations+0x1c3>
movslq 0x25c(%rbx),%rax
test   %eax,%eax
js     162b9 <png_do_read_transformations+0x279>
mov    %rbx,%rdi
mov    %r14,%rsi
callq  23bc0 <png_do_check_palette_indexes>
mov    -0x38(%rbp),%r8
mov    -0x30(%rbp),%rcx
jmpq   162b9 <png_do_read_transformations+0x279>
mov    0x110(%rbx),%rax
test   %rax,%rax
je     1669e <png_do_read_transformations+0x65e>
mov    0x228(%rbx),%rdx
add    $0x1,%rdx
mov    %rbx,%rdi
mov    %r14,%rsi
callq  *%rax
mov    -0x38(%rbp),%r8
mov    -0x30(%rbp),%rcx
movzbl 0x128(%rbx),%eax
test   %al,%al
je     166ad <png_do_read_transformations+0x66d>
mov    %al,0x11(%r14)
movzbl 0x129(%rbx),%eax
test   %al,%al
je     166bc <png_do_read_transformations+0x67c>
mov    %al,0x12(%r14)
movzbl 0x12(%r14),%edx
movzbl 0x11(%r14),%eax
imul   %dl
mov    %al,0x13(%r14)
cmp    $0x7,%al
ja     167e8 <png_do_read_transformations+0x7a8>
movzbl %al,%eax
mov    (%r14),%edx
imul   %rdx,%rax
add    $0x7,%rax
shr    $0x3,%rax
jmpq   167f6 <png_do_read_transformations+0x7b6>
lea    0x1(%r8),%rax
mov    0x250(%rdi),%r9
mov    0x2e8(%rdi),%rcx
movzwl 0x260(%rdi),%r8d
mov    %rsi,%r10
mov    %r13,-0x20(%rbp)
mov    %r12,%r13
mov    %rbx,%r12
mov    %rdi,%rbx
mov    %r10,%rdi
mov    %rsi,%r14
mov    %rax,%rsi
mov    %rdx,%r15
mov    %r9,%rdx
callq  1a560 <png_do_expand_palette>
mov    %r15,%rdx
mov    -0x38(%rbp),%r8
mov    -0x30(%rbp),%rcx
mov    -0x20(%rbp),%r15
jmpq   160a5 <png_do_read_transformations+0x65>
and    $0x2000000,%eax
test   %eax,%eax
je     16402 <png_do_read_transformations+0x3c2>
lea    0x1(%r8),%rcx
lea    0x2f0(%rdi),%r8
mov    %rsi,%rax
mov    %r13,-0x28(%rbp)
mov    %r12,%r13
mov    %rbx,%r12
mov    %rdi,%rbx
mov    %rax,%rdi
mov    %rsi,%r14
mov    %rcx,%rsi
mov    %rdx,%r15
mov    %r8,%rdx
callq  1a880 <png_do_expand>
mov    %r15,%rdx
mov    -0x38(%rbp),%r8
mov    -0x30(%rbp),%rcx
mov    -0x28(%rbp),%r15
jmpq   160a5 <png_do_read_transformations+0x65>
movb   $0x1,0x3d0(%rbx)
lea    0x17d45(%rip),%rsi        # 2e4e0 <chunks_to_process.34+0x6db>
mov    0x134(%rbx),%eax
and    $0x600000,%eax
cmp    $0x400000,%eax
je     1680b <png_do_read_transformations+0x7cb>
mov    %r15,%rdx
jmp    1682a <png_do_read_transformations+0x7ea>
movzwl 0x260(%rbx),%eax
test   %ax,%ax
jne    16137 <png_do_read_transformations+0xf7>
movzbl 0x267(%rbx),%eax
and    $0x4,%eax
test   %eax,%eax
jg     16137 <png_do_read_transformations+0xf7>
jmpq   1652e <png_do_read_transformations+0x4ee>
mov    %rbx,%rdi
lea    0x17d24(%rip),%rsi        # 2e507 <chunks_to_process.34+0x702>
callq  5470 <png_error@plt>
movzbl %al,%eax
shr    $0x3,%rax
mov    (%r14),%edx
imul   %rdx,%rax
mov    %rax,0x8(%r14)
mov    %r12,%rbx
mov    %r13,%r12
mov    %r15,%r13
mov    %r8,%r15
mov    %rcx,%r14
leaveq 
retq   
mov    %rbx,%rdi
mov    %rsi,%rax
mov    %r13,-0x8(%rbp)
mov    %rsi,%r13
mov    %rax,%rsi
callq  5390 <png_warning@plt>
mov    %r15,%rdx
mov    %r13,%rsi
mov    -0x8(%rbp),%r13
mov    0x134(%rbx),%eax
and    $0x600000,%eax
cmp    $0x200000,%eax
je     1684d <png_do_read_transformations+0x80d>
mov    -0x38(%rbp),%r8
mov    -0x30(%rbp),%rcx
mov    -0x18(%rbp),%r15
jmpq   160cf <png_do_read_transformations+0x8f>
mov    %rbx,%rdi
callq  5470 <png_error@plt>
data16 nopw %cs:0x0(%rax,%rax,1)

0000000000016860 <png_init_read_transformations>:
push   %rbp
mov    %rsp,%rbp
sub    $0x60,%rsp
mov    %r15,-0x50(%rbp)
xor    %eax,%eax
movslq 0x498(%rdi),%rcx
test   %ecx,%ecx
jne    168a9 <png_init_read_transformations+0x49>
movslq 0x2a4(%rdi),%rcx
test   %ecx,%ecx
jne    168de <png_init_read_transformations+0x7e>
mov    %r14,%r15
mov    %r13,%r14
mov    %r12,%r13
mov    %rbx,%r12
mov    %rdi,%rbx
movl   $0x186a0,0x498(%rbx)
movl   $0x186a0,0x2a4(%rbx)
jmp    1691f <png_init_read_transformations+0xbf>
movslq 0x2a4(%rdi),%rsi
test   %esi,%esi
jne    16908 <png_init_read_transformations+0xa8>
mov    %r14,-0x48(%rbp)
mov    %r13,%r14
mov    %r12,%r13
mov    %rbx,%r12
mov    %rdi,%rbx
mov    %rcx,%rdi
mov    %rax,%r15
callq  8a50 <png_reciprocal>
mov    %eax,0x2a4(%rbx)
mov    %r15,%rax
mov    -0x48(%rbp),%r15
jmp    1691f <png_init_read_transformations+0xbf>
mov    %r14,-0x48(%rbp)
mov    %r13,%r14
mov    %r12,%r13
mov    %rbx,%r12
mov    %rdi,%rbx
mov    %rcx,%rdi
mov    %rax,%r15
callq  8a50 <png_reciprocal>
mov    %eax,0x498(%rbx)
mov    %r15,%rax
mov    -0x48(%rbp),%r15
jmp    1691f <png_init_read_transformations+0xbf>
mov    %r14,%r15
mov    %r13,%r14
mov    %r12,%r13
mov    %rbx,%r12
mov    %rdi,%rbx
mov    %rcx,%rdi
callq  178e0 <png_gamma_threshold>
movzwl 0x4e2(%rbx),%ecx
or     $0x1,%cx
mov    %cx,0x4e2(%rbx)
test   %eax,%eax
jne    16942 <png_init_read_transformations+0xe2>
mov    0x134(%rbx),%eax
and    $0xffffdfff,%eax
jmp    1694d <png_init_read_transformations+0xed>
mov    0x134(%rbx),%eax
or     $0x2000,%eax
mov    %eax,0x134(%rbx)
mov    %rax,%rcx
and    $0x40000,%ecx
test   %ecx,%ecx
jne    16a1f <png_init_read_transformations+0x1bf>
movslq 0x2a4(%rbx),%rdi
callq  8b20 <png_gamma_significant>
test   %eax,%eax
jne    16996 <png_init_read_transformations+0x136>
mov    0x134(%rbx),%eax
and    $0xff7fffff,%eax
mov    %eax,0x134(%rbx)
mov    0x130(%rbx),%eax
and    $0xffffdfff,%eax
mov    %eax,0x130(%rbx)
mov    0x134(%rbx),%eax
and    $0x600000,%eax
test   %eax,%eax
je     169ad <png_init_read_transformations+0x14d>
mov    %rbx,%rdi
callq  7ba0 <png_colorspace_set_rgb_coefficients>
mov    0x134(%rbx),%eax
mov    %rax,%rcx
and    $0x100,%ecx
test   %ecx,%ecx
jne    16a5a <png_init_read_transformations+0x1fa>
mov    %rax,%rcx
and    $0x80,%ecx
test   %ecx,%ecx
je     16a79 <png_init_read_transformations+0x219>
and    $0x4000,%eax
test   %eax,%eax
je     16a79 <png_init_read_transformations+0x219>
movzwl 0x27e(%rbx),%ecx
movzwl 0x280(%rbx),%eax
cmp    %cx,%ax
jne    16a79 <png_init_read_transformations+0x219>
movzwl 0x282(%rbx),%eax
cmp    %ax,%cx
jne    16a79 <png_init_read_transformations+0x219>
mov    0x12c(%rbx),%eax
or     $0x800,%eax
mov    %eax,0x12c(%rbx)
mov    %cx,0x284(%rbx)
jmp    16a79 <png_init_read_transformations+0x219>
mov    %rax,%rcx
and    $0x80,%ecx
test   %ecx,%ecx
jne    16964 <png_init_read_transformations+0x104>
and    $0xfd7ffeff,%eax
mov    %eax,0x134(%rbx)
mov    0x130(%rbx),%eax
and    $0xffffdfff,%eax
mov    %eax,0x130(%rbx)
movw   $0x0,0x260(%rbx)
jmpq   16964 <png_init_read_transformations+0x104>
movzbl 0x267(%rbx),%eax
and    $0x2,%eax
test   %eax,%eax
jne    16a79 <png_init_read_transformations+0x219>
mov    0x12c(%rbx),%eax
or     $0x800,%eax
mov    %eax,0x12c(%rbx)
movzbl 0x267(%rbx),%eax
cmp    $0x3,%al
je     16a8e <png_init_read_transformations+0x22e>
mov    %rbx,%rdi
callq  17a60 <png_init_rgb_transformations>
jmp    16a96 <png_init_read_transformations+0x236>
mov    %rbx,%rdi
callq  17920 <png_init_palette_transformations>
mov    0x134(%rbx),%eax
mov    %rax,%rcx
and    $0x200,%ecx
test   %ecx,%ecx
jne    16b8a <png_init_read_transformations+0x32a>
mov    0x134(%rbx),%eax
mov    %rax,%rcx
and    $0x4000400,%ecx
test   %ecx,%ecx
jne    16c34 <png_init_read_transformations+0x3d4>
mov    0x27c(%rbx),%rax
mov    %rax,0x286(%rbx)
movzwl 0x284(%rbx),%eax
mov    %ax,0x28e(%rbx)
mov    $0xff,%eax
mov    0x134(%rbx),%ecx
mov    %rcx,%rdx
and    $0x2000,%edx
test   %edx,%edx
jne    16cbe <png_init_read_transformations+0x45e>
and    $0x600000,%ecx
test   %ecx,%ecx
jne    16d1a <png_init_read_transformations+0x4ba>
mov    0x134(%rbx),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
jne    16d44 <png_init_read_transformations+0x4e4>
mov    0x134(%rbx),%ecx
and    $0x800000,%ecx
test   %ecx,%ecx
jne    16d85 <png_init_read_transformations+0x525>
mov    0x134(%rbx),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
je     16cf4 <png_init_read_transformations+0x494>
movzbl 0x267(%rbx),%ecx
cmp    $0x3,%cl
jne    16cf4 <png_init_read_transformations+0x494>
mov    0x250(%rbx),%r8
movzwl 0x260(%rbx),%r9d
movzbl 0x27e(%rbx),%ecx
mov    %cl,-0x53(%rbp)
movzbl 0x280(%rbx),%ecx
mov    %cl,-0x52(%rbp)
movzbl 0x282(%rbx),%ecx
mov    %cl,-0x51(%rbp)
xor    %ecx,%ecx
jmpq   16dbc <png_init_read_transformations+0x55c>
mov    %rax,%rcx
and    $0x80,%ecx
test   %ecx,%ecx
je     16aad <png_init_read_transformations+0x24d>
and    $0x100,%eax
test   %eax,%eax
jne    16aad <png_init_read_transformations+0x24d>
movzbl 0x268(%rbx),%eax
cmp    $0x10,%al
je     16aad <png_init_read_transformations+0x24d>
movzwl 0x27e(%rbx),%ecx
mov    %rcx,%rax
shl    $0x8,%eax
sub    %ecx,%eax
add    $0x807f,%eax
shr    $0x10,%eax
mov    %ax,0x27e(%rbx)
movzwl 0x280(%rbx),%ecx
mov    %rcx,%rax
shl    $0x8,%eax
sub    %ecx,%eax
add    $0x807f,%eax
shr    $0x10,%eax
mov    %ax,0x280(%rbx)
movzwl 0x282(%rbx),%ecx
mov    %rcx,%rax
shl    $0x8,%eax
sub    %ecx,%eax
add    $0x807f,%eax
shr    $0x10,%eax
mov    %ax,0x282(%rbx)
movzwl 0x284(%rbx),%ecx
mov    %rcx,%rax
shl    $0x8,%eax
sub    %ecx,%eax
add    $0x807f,%eax
shr    $0x10,%eax
mov    %ax,0x284(%rbx)
jmpq   16aad <png_init_read_transformations+0x24d>
mov    %rax,%rcx
and    $0x80,%ecx
test   %ecx,%ecx
je     16ac4 <png_init_read_transformations+0x264>
and    $0x100,%eax
test   %eax,%eax
jne    16ac4 <png_init_read_transformations+0x264>
movzbl 0x268(%rbx),%eax
cmp    $0x10,%al
jne    16ac4 <png_init_read_transformations+0x264>
movzwl 0x27e(%rbx),%ecx
mov    %rcx,%rax
shl    $0x8,%eax
add    %ecx,%eax
mov    %ax,0x27e(%rbx)
movzwl 0x280(%rbx),%ecx
mov    %rcx,%rax
shl    $0x8,%eax
add    %ecx,%eax
mov    %ax,0x280(%rbx)
movzwl 0x282(%rbx),%ecx
mov    %rcx,%rax
shl    $0x8,%eax
add    %ecx,%eax
mov    %ax,0x282(%rbx)
movzwl 0x284(%rbx),%ecx
mov    %rcx,%rax
shl    $0x8,%eax
add    %ecx,%eax
mov    %ax,0x284(%rbx)
jmpq   16ac4 <png_init_read_transformations+0x264>
movzbl 0x268(%rbx),%esi
mov    %rbx,%rdi
callq  8e20 <png_build_gamma_table>
mov    0x134(%rbx),%eax
mov    %rax,%rcx
and    $0x80,%ecx
test   %ecx,%ecx
jne    16ddb <png_init_read_transformations+0x57b>
movzbl 0x267(%rbx),%ecx
cmp    $0x3,%cl
je     16e09 <png_init_read_transformations+0x5a9>
mov    0x134(%rbx),%eax
mov    %rax,%rcx
and    $0x8,%ecx
test   %ecx,%ecx
jne    16e38 <png_init_read_transformations+0x5d8>
mov    %r12,%rbx
mov    %r13,%r12
mov    %r14,%r13
mov    %r15,%r14
mov    -0x50(%rbp),%r15
leaveq 
retq   
movslq 0x498(%rbx),%rdi
callq  8b20 <png_gamma_significant>
test   %eax,%eax
jne    16cbe <png_init_read_transformations+0x45e>
movslq 0x2a4(%rbx),%rdi
callq  8b20 <png_gamma_significant>
test   %eax,%eax
jne    16cbe <png_init_read_transformations+0x45e>
mov    $0xff,%eax
jmpq   16b0a <png_init_read_transformations+0x2aa>
movslq 0x498(%rbx),%rdi
callq  8b20 <png_gamma_significant>
test   %eax,%eax
jne    16cbe <png_init_read_transformations+0x45e>
movslq 0x2a4(%rbx),%rdi
callq  8b20 <png_gamma_significant>
test   %eax,%eax
jne    16cbe <png_init_read_transformations+0x45e>
movzbl 0x274(%rbx),%eax
cmp    $0x3,%al
je     16e5b <png_init_read_transformations+0x5fb>
mov    $0xff,%eax
jmpq   16b1e <png_init_read_transformations+0x2be>
movslq 0x2a4(%rbx),%rdi
callq  8b20 <png_gamma_significant>
test   %eax,%eax
jne    16cbe <png_init_read_transformations+0x45e>
mov    $0xff,%eax
jmpq   16b32 <png_init_read_transformations+0x2d2>
movzwl -0x53(%rbp),%edx
lea    (%r10,%r10,2),%rsi
mov    %dx,(%r8,%rsi,1)
movzbl -0x51(%rbp),%edx
mov    %dl,0x2(%r8,%rsi,1)
add    $0x1,%ecx
cmp    %r9d,%ecx
jl     16e79 <png_init_read_transformations+0x619>
mov    0x134(%rbx),%eax
and    $0xffffff7f,%eax
mov    %eax,0x134(%rbx)
jmpq   16cf4 <png_init_read_transformations+0x494>
and    $0x600000,%eax
test   %eax,%eax
je     16df3 <png_init_read_transformations+0x593>
lea    0x17740(%rip),%rsi        # 2e52b <chunks_to_process.34+0x726>
mov    %rbx,%rdi
callq  5390 <png_warning@plt>
movzbl 0x267(%rbx),%eax
cmp    $0x3,%al
je     16f54 <png_init_read_transformations+0x6f4>
xor    %ecx,%ecx
jmpq   16f59 <png_init_read_transformations+0x6f9>
mov    %rax,%rcx
and    $0x1000,%ecx
test   %ecx,%ecx
je     16e23 <png_init_read_transformations+0x5c3>
and    $0x600000,%eax
test   %eax,%eax
jne    16cf4 <png_init_read_transformations+0x494>
mov    0x250(%rbx),%r8
movzwl 0x258(%rbx),%ecx
xor    %eax,%eax
jmpq   17004 <png_init_read_transformations+0x7a4>
mov    %rax,%rcx
and    $0x1000,%ecx
test   %ecx,%ecx
je     1701e <png_init_read_transformations+0x7be>
mov    %r12,%rbx
mov    %r13,%r12
mov    %r14,%r13
mov    %r15,%r14
mov    -0x50(%rbp),%r15
leaveq 
retq   
movslq 0x278(%rbx),%rdi
callq  8b20 <png_gamma_significant>
test   %eax,%eax
jne    16cbe <png_init_read_transformations+0x45e>
mov    $0xff,%eax
jmpq   16b1e <png_init_read_transformations+0x2be>
mov    0x2e8(%rbx),%rdx
movslq %ecx,%r10
movzbl (%rdx,%r10,1),%edx
test   %dl,%dl
je     16da3 <png_init_read_transformations+0x543>
cmp    $0xfe,%dl
ja     16db9 <png_init_read_transformations+0x559>
mov    %rax,%rsi
sub    %dx,%si
movzbl -0x53(%rbp),%edi
imul   %di,%si
lea    (%r10,%r10,2),%r11
movzbl (%r8,%r11,1),%edi
imul   %di,%dx
lea    0x80(%rsi,%rdx,1),%edx
movzwl %dx,%esi
mov    %rsi,%rdx
shr    $0x8,%edx
add    %esi,%edx
shr    $0x8,%edx
mov    %dl,(%r8,%r11,1)
mov    0x2e8(%rbx),%rdx
movzbl (%rdx,%r10,1),%edi
movzbl 0x1(%r8,%r11,1),%edx
mov    %rdi,%rsi
imul   %dx,%si
mov    %rax,%rdx
sub    %di,%dx
movzbl -0x52(%rbp),%edi
imul   %di,%dx
lea    0x80(%rdx,%rsi,1),%edx
movzwl %dx,%edx
mov    %rdx,%rsi
shr    $0x8,%esi
add    %esi,%edx
shr    $0x8,%edx
mov    %dl,0x1(%r8,%r11,1)
mov    0x2e8(%rbx),%rdx
movzbl (%rdx,%r10,1),%edi
movzbl 0x2(%r8,%r11,1),%edx
mov    %rdi,%rsi
imul   %dx,%si
mov    %rax,%rdx
sub    %di,%dx
movzbl -0x51(%rbp),%edi
imul   %di,%dx
lea    0x80(%rdx,%rsi,1),%edx
movzwl %dx,%esi
mov    %rsi,%rdx
shr    $0x8,%edx
add    %esi,%edx
shr    $0x8,%edx
mov    %dl,0x2(%r8,%r11,1)
jmpq   16db9 <png_init_read_transformations+0x559>
mov    $0x1,%ecx
mov    $0x186a0,%eax
test   %ecx,%ecx
jg     17040 <png_init_read_transformations+0x7e0>
movzbl 0x274(%rbx),%ecx
cmp    $0x1,%cl
jbe    17082 <png_init_read_transformations+0x822>
cmp    $0x2,%cl
je     17096 <png_init_read_transformations+0x836>
cmp    $0x3,%cl
jne    17087 <png_init_read_transformations+0x827>
movslq 0x278(%rbx),%rdi
callq  8a50 <png_reciprocal>
movslq 0x278(%rbx),%rdi
movslq 0x2a4(%rbx),%rsi
mov    %r15,-0x40(%rbp)
mov    %rax,%r15
callq  8ab0 <png_reciprocal2>
mov    %r15,%rcx
mov    -0x40(%rbp),%r15
jmpq   170cc <png_init_read_transformations+0x86c>
movslq %eax,%rdx
lea    (%rdx,%rdx,2),%rdi
movzbl (%r8,%rdi,1),%esi
mov    0x2a8(%rbx),%rdx
movzbl (%rsi,%rdx,1),%edx
mov    %dl,(%r8,%rdi,1)
movzbl 0x1(%r8,%rdi,1),%esi
mov    0x2a8(%rbx),%rdx
movzbl (%rsi,%rdx,1),%edx
mov    %dl,0x1(%r8,%rdi,1)
movzbl 0x2(%r8,%rdi,1),%esi
mov    0x2a8(%rbx),%rdx
movzbl (%rsi,%rdx,1),%edx
mov    %dl,0x2(%r8,%rdi,1)
add    $0x1,%eax
cmp    %ecx,%eax
jl     16fba <png_init_read_transformations+0x75a>
mov    0x134(%rbx),%eax
and    $0xffffdfff,%eax
mov    %eax,0x134(%rbx)
jmpq   16cf4 <png_init_read_transformations+0x494>
movzbl 0x267(%rbx),%ecx
cmp    $0x3,%cl
je     17108 <png_init_read_transformations+0x8a8>
mov    %r12,%rbx
mov    %r13,%r12
mov    %r14,%r13
mov    %r15,%r14
mov    -0x50(%rbp),%r15
leaveq 
retq   
mov    0x250(%rbx),%rdx
movzwl 0x258(%rbx),%r10d
movzbl 0x274(%rbx),%ecx
cmp    $0x2,%cl
je     17140 <png_init_read_transformations+0x8e0>
cmp    $0x1,%cl
jbe    171af <png_init_read_transformations+0x94f>
cmp    $0x2,%cl
je     171c0 <png_init_read_transformations+0x960>
cmp    $0x3,%cl
je     1720b <png_init_read_transformations+0x9ab>
mov    %rax,%rcx
jmpq   1725d <png_init_read_transformations+0x9fd>
cmp    $0x1,%cl
je     170c5 <png_init_read_transformations+0x865>
mov    %rbx,%rdi
lea    0x174cf(%rip),%rsi        # 2e560 <chunks_to_process.34+0x75b>
callq  5470 <png_error@plt>
movslq 0x498(%rbx),%rdi
callq  8a50 <png_reciprocal>
movslq 0x498(%rbx),%rdi
movslq 0x2a4(%rbx),%rsi
mov    %r15,-0x40(%rbp)
mov    %rax,%r15
callq  8ab0 <png_reciprocal2>
mov    %r15,%rcx
mov    -0x40(%rbp),%r15
jmp    170cc <png_init_read_transformations+0x86c>
movslq 0x2a4(%rbx),%rcx
mov    %rcx,%rdi
mov    %r15,-0x38(%rbp)
mov    %r14,-0x30(%rbp)
mov    %rax,%r14
mov    %rcx,%r15
callq  8b20 <png_gamma_significant>
mov    %r14,%rdi
mov    %r13,-0x20(%rbp)
mov    %rax,%r13
callq  8b20 <png_gamma_significant>
test   %r13d,%r13d
jne    172ac <png_init_read_transformations+0xa4c>
mov    %r13,%rcx
mov    %rax,%r13
mov    %rcx,%rax
jmpq   172d6 <png_init_read_transformations+0xa76>
movzwl 0x258(%rbx),%edx
and    $0xfffffff7,%eax
mov    %eax,0x134(%rbx)
mov    $0x8,%eax
movzbl 0x2d8(%rbx),%ecx
neg    %ecx
add    %eax,%ecx
test   %ecx,%ecx
jle    1736f <png_init_read_transformations+0xb0f>
cmp    $0x7,%ecx
jg     1736f <png_init_read_transformations+0xb0f>
xor    %esi,%esi
jmpq   173ad <png_init_read_transformations+0xb4d>
movzwl 0x27e(%rbx),%r11d
mov    0x2c0(%rbx),%rcx
movzbl (%r11,%rcx,1),%eax
movzwl 0x280(%rbx),%r9d
movzbl (%rcx,%r9,1),%r8d
movzwl 0x282(%rbx),%esi
movzbl (%rcx,%rsi,1),%edi
mov    0x2a8(%rbx),%rcx
movzbl (%r11,%rcx,1),%r11d
mov    %r11b,-0x56(%rbp)
movzbl (%r9,%rcx,1),%r9d
mov    %r9b,-0x55(%rbp)
movzbl (%rsi,%rcx,1),%ecx
mov    %cl,-0x54(%rbp)
mov    %r15,-0x30(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r13,-0x10(%rbp)
mov    %r12,-0x8(%rbp)
mov    %rdx,%r12
mov    %r10,%r13
mov    $0xff,%r9d
xor    %ecx,%ecx
jmpq   173fa <png_init_read_transformations+0xb9a>
cmp    $0x1,%cl
je     17256 <png_init_read_transformations+0x9f6>
mov    %rax,%rcx
jmpq   1725d <png_init_read_transformations+0x9fd>
movslq 0x498(%rbx),%rdi
mov    %r15,-0x30(%rbp)
mov    %r14,-0x28(%rbp)
mov    %rdx,%r14
mov    %r10,%r15
callq  8a50 <png_reciprocal>
movslq 0x498(%rbx),%rdi
movslq 0x2a4(%rbx),%rsi
mov    %r13,-0x18(%rbp)
mov    %rax,%r13
callq  8ab0 <png_reciprocal2>
mov    %r13,%rcx
mov    %r14,%rdx
mov    %r15,%r10
mov    -0x18(%rbp),%r13
mov    -0x28(%rbp),%r14
mov    -0x30(%rbp),%r15
jmp    1725d <png_init_read_transformations+0x9fd>
movslq 0x278(%rbx),%rdi
mov    %r15,-0x38(%rbp)
mov    %r14,-0x28(%rbp)
mov    %r10,%r14
mov    %rdx,%r15
callq  8a50 <png_reciprocal>
movslq 0x278(%rbx),%rdi
movslq 0x2a4(%rbx),%rsi
mov    %r13,-0x18(%rbp)
mov    %rax,%r13
callq  8ab0 <png_reciprocal2>
mov    %r13,%rcx
mov    %r15,%rdx
mov    %r14,%r10
mov    -0x18(%rbp),%r13
mov    -0x28(%rbp),%r14
mov    -0x38(%rbp),%r15
jmp    1725d <png_init_read_transformations+0x9fd>
movslq 0x2a4(%rbx),%rcx
mov    %rax,%rdi
mov    %r15,-0x30(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r13,-0x10(%rbp)
mov    %r12,-0x8(%rbp)
mov    %rdx,%r12
mov    %r10,%r13
mov    %rcx,%r14
mov    %rax,%r15
callq  8b20 <png_gamma_significant>
test   %eax,%eax
jne    17429 <png_init_read_transformations+0xbc9>
movzbl 0x27e(%rbx),%eax
mov    %al,-0x56(%rbp)
movzbl 0x280(%rbx),%eax
mov    %al,-0x55(%rbp)
movzbl 0x282(%rbx),%eax
mov    %al,-0x54(%rbp)
jmpq   1745f <png_init_read_transformations+0xbff>
movzwl 0x284(%rbx),%esi
mov    %rbx,%rdi
mov    %r15,%rdx
mov    %r12,-0x10(%rbp)
mov    %r13,%r12
mov    %rax,%r13
callq  8b50 <png_gamma_correct>
mov    %ax,0x28e(%rbx)
mov    %r12,%rax
mov    -0x10(%rbp),%r12
test   %r13d,%r13d
je     17302 <png_init_read_transformations+0xaa2>
movzwl 0x284(%rbx),%esi
mov    %rbx,%rdi
mov    %r14,%rdx
mov    %r12,-0x8(%rbp)
mov    %rax,%r12
callq  8b50 <png_gamma_correct>
mov    %ax,0x284(%rbx)
mov    %r12,%rax
mov    -0x8(%rbp),%r12
movzwl 0x280(%rbx),%ecx
movzwl 0x27e(%rbx),%edx
cmp    %dx,%cx
jne    17492 <png_init_read_transformations+0xc32>
movzwl 0x282(%rbx),%ecx
cmp    %cx,%dx
jne    17492 <png_init_read_transformations+0xc32>
movzwl 0x284(%rbx),%ecx
cmp    %cx,%dx
jne    17492 <png_init_read_transformations+0xc32>
movzwl 0x28e(%rbx),%eax
mov    %ax,0x28c(%rbx)
mov    %ax,0x28a(%rbx)
mov    %ax,0x288(%rbx)
mov    %cx,0x282(%rbx)
mov    %cx,0x280(%rbx)
mov    %cx,0x27e(%rbx)
jmpq   17531 <png_init_read_transformations+0xcd1>
movzbl 0x2d9(%rbx),%ecx
neg    %ecx
add    %eax,%ecx
test   %ecx,%ecx
jle    17549 <png_init_read_transformations+0xce9>
cmp    $0x7,%ecx
jg     17549 <png_init_read_transformations+0xce9>
xor    %esi,%esi
jmpq   1758a <png_init_read_transformations+0xd2a>
movslq %esi,%rdi
lea    (%rdi,%rdi,2),%rdi
add    0x250(%rbx),%rdi
movzbl (%rdi),%r8d
shr    %cl,%r8d
mov    %r8b,(%rdi)
add    $0x1,%esi
cmp    %esi,%edx
jg     17392 <png_init_read_transformations+0xb32>
jmp    1736f <png_init_read_transformations+0xb0f>
lea    (%r15,%r15,2),%r10
movzbl (%r12,%r10,1),%esi
mov    0x2a8(%rbx),%rdx
movzbl (%rsi,%rdx,1),%edx
mov    %dl,(%r12,%r10,1)
movzbl 0x1(%r12,%r10,1),%esi
mov    0x2a8(%rbx),%rdx
movzbl (%rsi,%rdx,1),%edx
mov    %dl,0x1(%r12,%r10,1)
movzbl 0x2(%r12,%r10,1),%esi
mov    0x2a8(%rbx),%rdx
movzbl (%rsi,%rdx,1),%edx
mov    %dl,0x2(%r12,%r10,1)
add    $0x1,%ecx
cmp    %r13d,%ecx
jl     17590 <png_init_read_transformations+0xd30>
mov    0x134(%rbx),%eax
and    $0xffffdf7f,%eax
mov    %eax,0x134(%rbx)
mov    -0x8(%rbp),%r12
mov    -0x10(%rbp),%r13
mov    -0x20(%rbp),%r14
mov    -0x30(%rbp),%r15
jmpq   16cf4 <png_init_read_transformations+0x494>
movzwl 0x27e(%rbx),%edi
mov    %r15,%rsi
callq  8bf0 <png_gamma_8bit_correct>
mov    %al,-0x56(%rbp)
movzwl 0x280(%rbx),%edi
mov    %r15,%rsi
callq  8bf0 <png_gamma_8bit_correct>
mov    %al,-0x55(%rbp)
mov    %r15,%rsi
movzwl 0x282(%rbx),%edi
callq  8bf0 <png_gamma_8bit_correct>
mov    %al,-0x54(%rbp)
mov    %r14,%rdi
callq  8b20 <png_gamma_significant>
test   %eax,%eax
jne    176cc <png_init_read_transformations+0xe6c>
movzbl 0x27e(%rbx),%eax
movzbl 0x280(%rbx),%r8d
movzbl 0x282(%rbx),%edi
mov    $0xff,%r9d
xor    %ecx,%ecx
jmpq   173fa <png_init_read_transformations+0xb9a>
test   %eax,%eax
je     174e1 <png_init_read_transformations+0xc81>
movzwl 0x27e(%rbx),%esi
mov    %rbx,%rdi
mov    %r15,%rdx
callq  8b50 <png_gamma_correct>
mov    %ax,0x288(%rbx)
movzwl 0x280(%rbx),%esi
mov    %rbx,%rdi
mov    %r15,%rdx
callq  8b50 <png_gamma_correct>
mov    %ax,0x28a(%rbx)
mov    %r15,%rdx
movzwl 0x282(%rbx),%esi
mov    %rbx,%rdi
callq  8b50 <png_gamma_correct>
mov    %ax,0x28c(%rbx)
test   %r13d,%r13d
je     17531 <png_init_read_transformations+0xcd1>
movzwl 0x27e(%rbx),%esi
mov    %rbx,%rdi
mov    %r14,%rdx
callq  8b50 <png_gamma_correct>
mov    %ax,0x27e(%rbx)
movzwl 0x280(%rbx),%esi
mov    %rbx,%rdi
mov    %r14,%rdx
callq  8b50 <png_gamma_correct>
mov    %ax,0x280(%rbx)
mov    %r14,%rdx
movzwl 0x282(%rbx),%esi
mov    %rbx,%rdi
callq  8b50 <png_gamma_correct>
mov    %ax,0x282(%rbx)
movb   $0x1,0x274(%rbx)
mov    -0x20(%rbp),%r13
mov    -0x30(%rbp),%r14
mov    -0x38(%rbp),%r15
jmpq   16cf4 <png_init_read_transformations+0x494>
movzbl 0x2da(%rbx),%ecx
sub    %ecx,%eax
test   %eax,%eax
jg     17715 <png_init_read_transformations+0xeb5>
mov    %r12,%rbx
mov    %r13,%r12
mov    %r14,%r13
mov    %r15,%r14
mov    -0x50(%rbp),%r15
leaveq 
retq   
mov    0x250(%rbx),%r8
movslq %esi,%rdi
lea    (%rdi,%rdi,2),%r9
movzbl 0x1(%r8,%r9,1),%edi
shr    %cl,%edi
mov    %dil,0x1(%r8,%r9,1)
add    $0x1,%esi
cmp    %esi,%edx
jg     1756c <png_init_read_transformations+0xd0c>
jmp    17549 <png_init_read_transformations+0xce9>
movslq %ecx,%r15
movzwl 0x260(%rbx),%edx
cmp    %edx,%ecx
jge    173b3 <png_init_read_transformations+0xb53>
mov    0x2e8(%rbx),%rdx
movzbl (%rdx,%r15,1),%edx
cmp    $0xfe,%dl
ja     173b3 <png_init_read_transformations+0xb53>
test   %dl,%dl
je     1772c <png_init_read_transformations+0xecc>
mov    %r9,%rsi
sub    %dx,%si
movzbl %al,%r10d
imul   %r10w,%si
lea    (%r15,%r15,2),%r14
movzbl (%r12,%r14,1),%r11d
mov    0x2c0(%rbx),%r10
movzbl (%r11,%r10,1),%r10d
imul   %r10w,%dx
lea    0x80(%rsi,%rdx,1),%edx
movzwl %dx,%esi
mov    %rsi,%rdx
shr    $0x8,%edx
add    %esi,%edx
shr    $0x8,%edx
movzbl %dl,%esi
mov    0x2b8(%rbx),%rdx
movzbl (%rsi,%rdx,1),%edx
mov    %dl,(%r12,%r14,1)
mov    0x2e8(%rbx),%rdx
movzbl (%rdx,%r15,1),%r10d
movzbl 0x1(%r12,%r14,1),%esi
mov    0x2c0(%rbx),%rdx
movzbl (%rsi,%rdx,1),%edx
mov    %r10,%rsi
imul   %dx,%si
mov    %r9,%rdx
sub    %r10w,%dx
movzbl %r8b,%r10d
imul   %r10w,%dx
lea    0x80(%rdx,%rsi,1),%edx
movzwl %dx,%esi
mov    %rsi,%rdx
shr    $0x8,%edx
add    %esi,%edx
shr    $0x8,%edx
movzbl %dl,%esi
mov    0x2b8(%rbx),%rdx
movzbl (%rsi,%rdx,1),%edx
mov    %dl,0x1(%r12,%r14,1)
mov    0x2e8(%rbx),%rdx
movzbl (%rdx,%r15,1),%r10d
movzbl 0x2(%r12,%r14,1),%esi
mov    0x2c0(%rbx),%rdx
movzbl (%rsi,%rdx,1),%edx
mov    %r10,%rsi
imul   %dx,%si
mov    %r9,%rdx
sub    %r10w,%dx
movzbl %dil,%r10d
imul   %r10w,%dx
lea    0x80(%rdx,%rsi,1),%edx
movzwl %dx,%esi
mov    %rsi,%rdx
shr    $0x8,%edx
add    %esi,%edx
shr    $0x8,%edx
movzbl %dl,%esi
mov    0x2b8(%rbx),%rdx
movzbl (%rsi,%rdx,1),%edx
mov    %dl,0x2(%r12,%r14,1)
jmpq   173f7 <png_init_read_transformations+0xb97>
movzwl 0x27e(%rbx),%edi
mov    %r14,%rsi
callq  8bf0 <png_gamma_8bit_correct>
mov    %rax,%r15
movzwl 0x280(%rbx),%edi
mov    %r14,%rsi
callq  8bf0 <png_gamma_8bit_correct>
mov    %r14,%rsi
mov    %rax,%r14
movzwl 0x282(%rbx),%edi
callq  8bf0 <png_gamma_8bit_correct>
mov    %rax,%rdi
mov    %r15,%rax
mov    %r14,%r8
mov    $0xff,%r9d
xor    %ecx,%ecx
jmpq   173fa <png_init_read_transformations+0xb9a>
cmp    $0x7,%eax
jle    17747 <png_init_read_transformations+0xee7>
mov    %r12,%rbx
mov    %r13,%r12
mov    %r14,%r13
mov    %r15,%r14
mov    -0x50(%rbp),%r15
leaveq 
retq   
movzwl -0x56(%rbp),%edx
lea    (%r15,%r15,2),%rsi
mov    %dx,(%r12,%rsi,1)
movzbl -0x54(%rbp),%edx
mov    %dl,0x2(%r12,%rsi,1)
jmpq   173f7 <png_init_read_transformations+0xb97>
xor    %esi,%esi
jmp    1776f <png_init_read_transformations+0xf0f>
mov    0x250(%rbx),%r9
movslq %esi,%rcx
lea    (%rcx,%rcx,2),%r8
mov    %rax,%rcx
movzbl 0x2(%r9,%r8,1),%edi
shr    %cl,%edi
mov    %rcx,%rax
mov    %dil,0x2(%r9,%r8,1)
add    $0x1,%esi
cmp    %edx,%esi
jl     1774b <png_init_read_transformations+0xeeb>
mov    %r12,%rbx
mov    %r13,%r12
mov    %r14,%r13
mov    %r15,%r14
mov    -0x50(%rbp),%r15
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)

0000000000017790 <png_rtran_ok>:
push   %rbp
mov    %rsp,%rbp
xor    %eax,%eax
test   %rdi,%rdi
jne    1779d <png_rtran_ok+0xd>
leaveq 
retq   
mov    0x130(%rdi),%eax
and    $0x40,%eax
test   %eax,%eax
jne    177c6 <png_rtran_ok+0x36>
test   %esi,%esi
jne    177d6 <png_rtran_ok+0x46>
mov    0x130(%rdi),%eax
or     $0x4000,%eax
mov    %eax,0x130(%rdi)
mov    $0x1,%eax
leaveq 
retq   
lea    0x16db1(%rip),%rsi        # 2e57e <chunks_to_process.34+0x779>
callq  b120 <png_app_error>
xor    %eax,%eax
leaveq 
retq   
mov    0x12c(%rdi),%eax
and    $0x1,%eax
test   %eax,%eax
jne    177ae <png_rtran_ok+0x1e>
lea    0x16dcf(%rip),%rsi        # 2e5b9 <chunks_to_process.34+0x7b4>
callq  b120 <png_app_error>
xor    %eax,%eax
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

0000000000017800 <translate_gamma_flags>:
push   %rbp
mov    %rsp,%rbp
cmp    $0xffffffff,%esi
je     17823 <translate_gamma_flags+0x23>
cmp    $0xfffe7960,%esi
je     17823 <translate_gamma_flags+0x23>
cmp    $0xfffffffe,%esi
je     1783f <translate_gamma_flags+0x3f>
cmp    $0xffff3cb0,%esi
je     1783f <translate_gamma_flags+0x3f>
mov    %rsi,%rax
leaveq 
retq   
mov    0x130(%rdi),%eax
or     $0x1000,%eax
mov    %eax,0x130(%rdi)
test   %edx,%edx
je     1784a <translate_gamma_flags+0x4a>
mov    $0x35b60,%eax
leaveq 
retq   
test   %edx,%edx
je     17851 <translate_gamma_flags+0x51>
mov    $0x250ac,%eax
leaveq 
retq   
mov    $0xb18f,%eax
leaveq 
retq   
mov    $0x10175,%eax
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

0000000000017860 <convert_gamma_value>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x8(%rbp)
xorpd  %xmm1,%xmm1
ucomisd %xmm1,%xmm0
ja     178b2 <convert_gamma_value+0x52>
mov    %rdi,%r15
movsd  0x16d97(%rip),%xmm1        # 2e618 <chunks_to_process.34+0x813>
addsd  %xmm1,%xmm0
callq  57e0 <floor@plt>
movsd  0x16d9e(%rip),%xmm1        # 2e630 <chunks_to_process.34+0x82b>
ucomisd %xmm1,%xmm0
ja     178d0 <convert_gamma_value+0x70>
movsd  0x16d80(%rip),%xmm1        # 2e620 <chunks_to_process.34+0x81b>
ucomisd %xmm1,%xmm0
jp     178a8 <convert_gamma_value+0x48>
jb     178d0 <convert_gamma_value+0x70>
cvttsd2si %xmm0,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
movsd  0x16d7e(%rip),%xmm1        # 2e638 <chunks_to_process.34+0x833>
ucomisd %xmm1,%xmm0
jp     17876 <convert_gamma_value+0x16>
jae    17876 <convert_gamma_value+0x16>
movsd  0x16d5e(%rip),%xmm1        # 2e628 <chunks_to_process.34+0x823>
mulsd  %xmm1,%xmm0
jmp    17876 <convert_gamma_value+0x16>
mov    %r15,%rdi
lea    0x16d0b(%rip),%rsi        # 2e5e5 <chunks_to_process.34+0x7e0>
callq  acc0 <png_fixed_error>
nop

00000000000178e0 <png_gamma_threshold>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %rsi,%rdx
mov    %rdi,%rsi
lea    -0x4(%rbp),%rdi
mov    $0x186a0,%ecx
callq  8980 <png_muldiv>
test   %eax,%eax
jne    17907 <png_gamma_threshold+0x27>
mov    $0x1,%eax
leaveq 
retq   
movslq -0x4(%rbp),%rdi
callq  8b20 <png_gamma_significant>
test   %eax,%eax
je     1791b <png_gamma_threshold+0x3b>
mov    $0x1,%eax
leaveq 
retq   
xor    %eax,%eax
leaveq 
retq   
nop

0000000000017920 <png_init_palette_transformations>:
push   %rbp
mov    %rsp,%rbp
xor    %edx,%edx
movzwl 0x260(%rdi),%eax
test   %ax,%ax
jne    17950 <png_init_palette_transformations+0x30>
mov    %rdx,%rax
mov    %rax,%rsi
test   %esi,%esi
je     1795d <png_init_palette_transformations+0x3d>
mov    0x134(%rdi),%ecx
mov    %rcx,%rax
and    $0x100,%eax
test   %eax,%eax
jne    17996 <png_init_palette_transformations+0x76>
leaveq 
retq   
mov    $0x1,%esi
mov    %rdx,%rax
mov    %rax,%rcx
jmp    179bc <png_init_palette_transformations+0x9c>
mov    0x134(%rdi),%esi
mov    %rsi,%rcx
and    $0xff7fffff,%ecx
mov    %ecx,0x134(%rdi)
mov    0x130(%rdi),%ecx
and    $0xffffdfff,%ecx
mov    %ecx,0x130(%rdi)
test   %eax,%eax
jne    1793c <png_init_palette_transformations+0x1c>
and    $0xff7ffe7f,%esi
mov    %esi,0x134(%rdi)
jmp    1793c <png_init_palette_transformations+0x1c>
mov    %rcx,%rax
and    $0x1000,%eax
test   %eax,%eax
jne    179d1 <png_init_palette_transformations+0xb1>
leaveq 
retq   
mov    0x2e8(%rdi),%r8
movslq %ecx,%r9
movzbl (%r8,%r9,1),%r8d
cmp    $0xff,%r8b
jne    17a11 <png_init_palette_transformations+0xf1>
add    $0x1,%ecx
movzwl 0x260(%rdi),%r8d
cmp    %r8d,%ecx
jl     179a4 <png_init_palette_transformations+0x84>
mov    %rdx,%rsi
jmpq   17938 <png_init_palette_transformations+0x18>
movzbl 0x27c(%rdi),%eax
lea    (%rax,%rax,2),%rax
add    0x250(%rdi),%rax
movzbl (%rax),%esi
mov    %si,0x27e(%rdi)
movzbl 0x1(%rax),%esi
mov    %si,0x280(%rdi)
movzbl 0x2(%rax),%eax
mov    %ax,0x282(%rdi)
mov    %rcx,%rax
and    $0x80000,%eax
test   %eax,%eax
jne    17a1b <png_init_palette_transformations+0xfb>
leaveq 
retq   
test   %r8b,%r8b
jne    17a27 <png_init_palette_transformations+0x107>
mov    %rsi,%rax
jmp    179b9 <png_init_palette_transformations+0x99>
and    $0x2000000,%ecx
test   %ecx,%ecx
je     17a2f <png_init_palette_transformations+0x10f>
leaveq 
retq   
mov    %rsi,%rax
jmpq   17938 <png_init_palette_transformations+0x18>
movzwl 0x260(%rdi),%esi
jmp    17a4c <png_init_palette_transformations+0x12c>
movslq %edx,%rax
add    0x2e8(%rdi),%rax
movzbl (%rax),%ecx
not    %ecx
mov    %cl,(%rax)
add    $0x1,%edx
cmp    %esi,%edx
jl     17a38 <png_init_palette_transformations+0x118>
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   (%rax)

0000000000017a60 <png_init_rgb_transformations>:
push   %rbp
mov    %rsp,%rbp
mov    $0x1,%edx
xor    %ecx,%ecx
movzbl 0x267(%rdi),%eax
and    $0x4,%eax
test   %eax,%eax
jg     17a7e <png_init_rgb_transformations+0x1e>
mov    %rcx,%rsi
jmp    17a81 <png_init_rgb_transformations+0x21>
mov    %rdx,%rsi
movzwl 0x260(%rdi),%eax
test   %ax,%ax
je     17a90 <png_init_rgb_transformations+0x30>
mov    %rdx,%rcx
test   %esi,%esi
je     17aa8 <png_init_rgb_transformations+0x48>
mov    0x134(%rdi),%ecx
mov    %rcx,%rax
and    $0x100,%eax
test   %eax,%eax
jne    17adf <png_init_rgb_transformations+0x7f>
leaveq 
retq   
mov    0x134(%rdi),%edx
mov    %rdx,%rax
and    $0xff7fffff,%eax
mov    %eax,0x134(%rdi)
mov    0x130(%rdi),%eax
and    $0xffffdfff,%eax
mov    %eax,0x130(%rdi)
test   %ecx,%ecx
jne    17a94 <png_init_rgb_transformations+0x34>
and    $0xff7ffe7f,%edx
mov    %edx,0x134(%rdi)
jmp    17a94 <png_init_rgb_transformations+0x34>
mov    %rcx,%rax
and    $0x1000,%eax
test   %eax,%eax
jne    17aed <png_init_rgb_transformations+0x8d>
leaveq 
retq   
movzbl 0x267(%rdi),%eax
and    $0x2,%eax
test   %eax,%eax
je     17afd <png_init_rgb_transformations+0x9d>
leaveq 
retq   
movzwl 0x284(%rdi),%edx
movzwl 0x2f8(%rdi),%eax
movzbl 0x268(%rdi),%esi
cmp    $0x1,%sil
jbe    17b36 <png_init_rgb_transformations+0xd6>
cmp    $0x2,%sil
je     17b75 <png_init_rgb_transformations+0x115>
cmp    $0x4,%sil
jne    17b54 <png_init_rgb_transformations+0xf4>
mov    %rax,%rsi
shl    $0x4,%esi
add    %esi,%eax
mov    %rdx,%rsi
shl    $0x4,%esi
add    %esi,%edx
jmp    17b54 <png_init_rgb_transformations+0xf4>
cmp    $0x1,%sil
jne    17b54 <png_init_rgb_transformations+0xf4>
mov    %rax,%rsi
shl    $0x8,%esi
sub    %ax,%si
mov    %rdx,%rax
shl    $0x8,%eax
sub    %dx,%ax
mov    %rax,%rdx
mov    %rsi,%rax
mov    %dx,0x282(%rdi)
mov    %dx,0x280(%rdi)
mov    %dx,0x27e(%rdi)
and    $0x2000000,%ecx
test   %ecx,%ecx
je     17b8d <png_init_rgb_transformations+0x12d>
leaveq 
retq   
mov    %rax,%rsi
shl    $0x4,%esi
add    %esi,%eax
lea    (%rax,%rax,4),%eax
mov    %rdx,%rsi
shl    $0x4,%esi
add    %esi,%edx
lea    (%rdx,%rdx,4),%edx
jmp    17b54 <png_init_rgb_transformations+0xf4>
mov    %ax,0x2f6(%rdi)
mov    %ax,0x2f4(%rdi)
mov    %ax,0x2f2(%rdi)
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nop

0000000000017bb0 <png_do_unpack>:
push   %rbp
mov    %rsp,%rbp
movzbl 0x11(%rdi),%ecx
cmp    $0x7,%cl
jbe    17bbf <png_do_unpack+0xf>
leaveq 
retq   
mov    (%rdi),%eax
xor    %edx,%edx
cmp    $0x1,%cl
jbe    17bfe <png_do_unpack+0x4e>
cmp    $0x2,%cl
je     17c25 <png_do_unpack+0x75>
cmp    $0x4,%cl
jne    17c4a <png_do_unpack+0x9a>
mov    $0xfffffffe,%ecx
sub    %eax,%ecx
and    $0x1,%ecx
neg    %ecx
and    $0x4,%ecx
lea    -0x1(%rax),%r8d
shr    %r8d
mov    %r8d,%r8d
add    %rsi,%r8
lea    -0x1(%rsi,%rax,1),%r10
mov    $0x4,%r9d
mov    %rdx,%r11
jmp    17c75 <png_do_unpack+0xc5>
cmp    $0x1,%cl
jne    17c4a <png_do_unpack+0x9a>
mov    $0xfffffff8,%ecx
sub    %eax,%ecx
and    $0x7,%ecx
lea    -0x1(%rax),%r8d
shr    $0x3,%r8d
mov    %r8d,%r8d
add    %rsi,%r8
lea    -0x1(%rsi,%rax,1),%r9
mov    %rdx,%r10
jmp    17ca0 <png_do_unpack+0xf0>
lea    -0x1(%rax),%ecx
shr    $0x2,%ecx
mov    %ecx,%ecx
lea    (%rsi,%rcx,1),%r8
mov    $0xfffffffc,%ecx
sub    %eax,%ecx
and    $0x3,%ecx
add    %ecx,%ecx
lea    -0x1(%rsi,%rax,1),%r9
mov    %rdx,%r10
jmpq   17ccb <png_do_unpack+0x11b>
movb   $0x8,0x11(%rdi)
movzbl 0x12(%rdi),%edx
mov    %rdx,%rcx
shl    $0x3,%ecx
mov    %cl,0x13(%rdi)
imul   %edx,%eax
mov    %eax,%eax
mov    %rax,0x8(%rdi)
leaveq 
retq   
add    $0xffffffffffffffff,%r8
mov    %rdx,%rcx
add    $0xffffffffffffffff,%r10
add    $0x1,%r11d
cmp    %eax,%r11d
jae    17c4a <png_do_unpack+0x9a>
movzbl (%r8),%esi
shr    %cl,%esi
and    $0xf,%sil
mov    %sil,(%r10)
cmp    $0x4,%ecx
je     17c66 <png_do_unpack+0xb6>
mov    %r9,%rcx
jmp    17c6d <png_do_unpack+0xbd>
add    $0xffffffffffffffff,%r8
mov    %rdx,%rcx
add    $0xffffffffffffffff,%r9
add    $0x1,%r10d
cmp    %r10d,%eax
jbe    17c4a <png_do_unpack+0x9a>
movzbl (%r8),%esi
shr    %cl,%esi
and    $0x1,%sil
mov    %sil,(%r9)
cmp    $0x7,%ecx
je     17c91 <png_do_unpack+0xe1>
add    $0x1,%ecx
jmp    17c98 <png_do_unpack+0xe8>
add    $0xffffffffffffffff,%r8
mov    %rdx,%rcx
add    $0xffffffffffffffff,%r9
add    $0x1,%r10d
cmp    %r10d,%eax
jbe    17c4a <png_do_unpack+0x9a>
movzbl (%r8),%esi
shr    %cl,%esi
and    $0x3,%sil
mov    %sil,(%r9)
cmp    $0x6,%ecx
je     17cbc <png_do_unpack+0x10c>
add    $0x2,%ecx
jmp    17cc3 <png_do_unpack+0x113>
nopl   0x0(%rax,%rax,1)

0000000000017cf0 <png_do_unshift>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
movzbl 0x10(%rdi),%eax
cmp    $0x3,%al
jne    17d02 <png_do_unshift+0x12>
leaveq 
retq   
movzbl 0x11(%rdi),%r11d
mov    $0x4,%ecx
mov    $0x1,%r10d
mov    %rax,%r8
and    $0x2,%r8d
test   %r8d,%r8d
jg     17d38 <png_do_unshift+0x48>
movzbl 0x3(%rdx),%r8d
neg    %r8d
add    %r11d,%r8d
mov    %r8d,-0x18(%rbp)
mov    $0x2,%r9d
mov    %r10,%r8
jmp    17d72 <png_do_unshift+0x82>
movzbl (%rdx),%r8d
neg    %r8d
add    %r11d,%r8d
mov    %r8d,-0x18(%rbp)
movzbl 0x1(%rdx),%r8d
neg    %r8d
add    %r11d,%r8d
mov    %r8d,-0x14(%rbp)
movzbl 0x2(%rdx),%r8d
neg    %r8d
add    %r11d,%r8d
mov    %r8d,-0x10(%rbp)
mov    %rcx,%r9
mov    $0xc,%ecx
mov    $0x3,%r8d
mov    %rsi,-0x8(%rbp)
xor    %esi,%esi
and    $0x4,%eax
test   %eax,%eax
jg     17d87 <png_do_unshift+0x97>
mov    %rsi,%rax
mov    %rax,%rcx
jmp    17dab <png_do_unshift+0xbb>
movzbl 0x4(%rdx),%eax
neg    %eax
add    %r11d,%eax
mov    %eax,-0x18(%rbp,%rcx,1)
mov    %r9,%r8
mov    %rsi,%rax
mov    %rax,%rcx
jmp    17dab <png_do_unshift+0xbb>
movl   $0x0,-0x18(%rbp,%r9,4)
add    $0x1,%ecx
cmp    %ecx,%r8d
jg     17db6 <png_do_unshift+0xc6>
test   %eax,%eax
jne    17dcc <png_do_unshift+0xdc>
leaveq 
retq   
movslq %ecx,%r9
movslq -0x18(%rbp,%r9,4),%rdx
test   %edx,%edx
jle    17d9f <png_do_unshift+0xaf>
cmp    %r11d,%edx
jge    17d9f <png_do_unshift+0xaf>
mov    %r10,%rax
jmp    17da8 <png_do_unshift+0xb8>
cmp    $0x7,%r11b
jbe    17de0 <png_do_unshift+0xf0>
cmp    $0x8,%r11b
je     17dee <png_do_unshift+0xfe>
cmp    $0x10,%r11b
je     17dfe <png_do_unshift+0x10e>
leaveq 
retq   
cmp    $0x2,%r11b
je     17e11 <png_do_unshift+0x121>
cmp    $0x4,%r11b
je     17e21 <png_do_unshift+0x131>
leaveq 
retq   
mov    -0x8(%rbp),%rdx
mov    0x8(%rdi),%rdi
add    %rdx,%rdi
mov    %rsi,%rax
jmp    17e63 <png_do_unshift+0x173>
mov    -0x8(%rbp),%r9
mov    %r9,%rdx
add    0x8(%rdi),%rdx
mov    %rsi,%rax
jmpq   17e9e <png_do_unshift+0x1ae>
mov    -0x8(%rbp),%rcx
mov    %rcx,%rdx
add    0x8(%rdi),%rdx
jmpq   17eb2 <png_do_unshift+0x1c2>
mov    -0x8(%rbp),%rdx
mov    %rdx,%rsi
add    0x8(%rdi),%rsi
mov    -0x18(%rbp),%ecx
mov    $0xf,%eax
shr    %cl,%eax
mov    %rax,%rdi
shl    $0x4,%edi
add    %eax,%edi
jmpq   17ec6 <png_do_unshift+0x1d6>
movzbl (%rdx),%r9d
movslq %eax,%rcx
mov    -0x18(%rbp,%rcx,4),%ecx
add    $0x1,%eax
cmp    %eax,%r8d
jg     17e59 <png_do_unshift+0x169>
mov    %rsi,%rax
shr    %cl,%r9d
mov    %r9b,(%rdx)
add    $0x1,%rdx
cmp    %rdi,%rdx
jb     17e43 <png_do_unshift+0x153>
leaveq 
retq   
movzbl 0x1(%r9),%r10d
movzbl (%r9),%edi
movslq %eax,%rcx
mov    -0x18(%rbp,%rcx,4),%ecx
add    $0x1,%eax
cmp    %eax,%r8d
jg     17e85 <png_do_unshift+0x195>
mov    %rsi,%rax
shl    $0x8,%edi
add    %r10d,%edi
shr    %cl,%edi
mov    %rdi,%rcx
shr    $0x8,%ecx
mov    %cl,(%r9)
mov    %dil,0x1(%r9)
add    $0x2,%r9
cmp    %rdx,%r9
jb     17e6a <png_do_unshift+0x17a>
leaveq 
retq   
movzbl (%rcx),%eax
shr    %eax
and    $0x55,%al
mov    %al,(%rcx)
add    $0x1,%rcx
cmp    %rdx,%rcx
jb     17ea5 <png_do_unshift+0x1b5>
leaveq 
retq   
movzbl (%rdx),%eax
shr    %cl,%eax
and    %edi,%eax
mov    %al,(%rdx)
add    $0x1,%rdx
cmp    %rsi,%rdx
jb     17eb9 <png_do_unshift+0x1c9>
leaveq 
retq   
nopl   (%rax)

0000000000017ed0 <png_do_scale_16_to_8>:
push   %rbp
mov    %rsp,%rbp
movzbl 0x11(%rdi),%eax
cmp    $0x10,%al
je     17ede <png_do_scale_16_to_8+0xe>
leaveq 
retq   
mov    %rsi,%rdx
add    0x8(%rdi),%rdx
mov    %rsi,%rax
jmp    17f1a <png_do_scale_16_to_8+0x4a>
movzbl 0x1(%rax),%r8d
movzbl (%rax),%r9d
mov    %r8,%rcx
sub    %r9d,%ecx
shl    $0x10,%ecx
neg    %r8d
add    %r9d,%r8d
lea    0x7fff80(%rcx,%r8,1),%ecx
sar    $0x18,%ecx
add    %r9d,%ecx
mov    %cl,(%rsi)
add    $0x2,%rax
add    $0x1,%rsi
cmp    %rdx,%rax
jb     17eea <png_do_scale_16_to_8+0x1a>
movb   $0x8,0x11(%rdi)
movzbl 0x12(%rdi),%eax
mov    %rax,%rcx
shl    $0x3,%ecx
mov    %cl,0x13(%rdi)
imul   (%rdi),%eax
mov    %eax,%eax
mov    %rax,0x8(%rdi)
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

0000000000017f40 <png_do_chop>:
push   %rbp
mov    %rsp,%rbp
movzbl 0x11(%rdi),%eax
cmp    $0x10,%al
je     17f4e <png_do_chop+0xe>
leaveq 
retq   
mov    %rsi,%rcx
add    0x8(%rdi),%rcx
mov    %rsi,%rax
jmp    17f67 <png_do_chop+0x27>
movzbl (%rax),%edx
mov    %dl,(%rsi)
add    $0x2,%rax
add    $0x1,%rsi
cmp    %rcx,%rax
jb     17f5a <png_do_chop+0x1a>
movb   $0x8,0x11(%rdi)
movzbl 0x12(%rdi),%eax
mov    %rax,%rcx
shl    $0x3,%ecx
mov    %cl,0x13(%rdi)
imul   (%rdi),%eax
mov    %eax,%eax
mov    %rax,0x8(%rdi)
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

0000000000017f90 <png_do_read_swap_alpha>:
push   %rbp
mov    %rsp,%rbp
mov    (%rdi),%r9d
xor    %eax,%eax
movzbl 0x10(%rdi),%ecx
cmp    $0x6,%cl
je     17fa9 <png_do_read_swap_alpha+0x19>
cmp    $0x4,%cl
je     17fb8 <png_do_read_swap_alpha+0x28>
leaveq 
retq   
movzbl 0x11(%rdi),%ecx
cmp    $0x8,%cl
je     17fca <png_do_read_swap_alpha+0x3a>
add    0x8(%rdi),%rsi
jmp    18016 <png_do_read_swap_alpha+0x86>
movzbl 0x11(%rdi),%ecx
cmp    $0x8,%cl
je     1801d <png_do_read_swap_alpha+0x8d>
add    0x8(%rdi),%rsi
jmpq   1804a <png_do_read_swap_alpha+0xba>
add    0x8(%rdi),%rsi
jmpq   18076 <png_do_read_swap_alpha+0xe6>
movzbl -0x3(%rsi),%r8d
movzbl -0x4(%rsi),%edi
movzbl -0x5(%rsi),%ecx
mov    %cl,-0x3(%rsi)
movzbl -0x6(%rsi),%ecx
mov    %cl,-0x4(%rsi)
movzbl -0x7(%rsi),%ecx
mov    %cl,-0x5(%rsi)
lea    -0x8(%rsi),%rdx
movzbl (%rdx),%ecx
mov    %cl,-0x6(%rsi)
movzbl -0x1(%rsi),%ecx
mov    %r8b,-0x1(%rsi)
mov    %cl,-0x7(%rsi)
movzbl -0x2(%rsi),%ecx
mov    %dil,-0x2(%rsi)
mov    %cl,(%rdx)
add    $0x1,%eax
mov    %rdx,%rsi
cmp    %eax,%r9d
ja     17fd3 <png_do_read_swap_alpha+0x43>
leaveq 
retq   
add    0x8(%rdi),%rsi
jmp    18093 <png_do_read_swap_alpha+0x103>
movzbl -0x3(%rsi),%edx
lea    -0x4(%rsi),%rcx
movzbl (%rcx),%r8d
movzbl -0x1(%rsi),%edi
mov    %dl,-0x1(%rsi)
mov    %dil,-0x3(%rsi)
movzbl -0x2(%rsi),%edx
mov    %r8b,-0x2(%rsi)
mov    %dl,(%rcx)
add    $0x1,%eax
mov    %rcx,%rsi
cmp    %eax,%r9d
ja     18023 <png_do_read_swap_alpha+0x93>
leaveq 
retq   
movzbl -0x2(%rsi),%edi
movzbl -0x3(%rsi),%ecx
mov    %cl,-0x2(%rsi)
lea    -0x4(%rsi),%rdx
movzbl (%rdx),%ecx
mov    %cl,-0x3(%rsi)
movzbl -0x1(%rsi),%ecx
mov    %dil,-0x1(%rsi)
mov    %cl,(%rdx)
add    $0x1,%eax
mov    %rdx,%rsi
cmp    %r9d,%eax
jb     18051 <png_do_read_swap_alpha+0xc1>
leaveq 
retq   
lea    -0x2(%rsi),%rdi
movzbl (%rdi),%edx
movzbl -0x1(%rsi),%ecx
mov    %dl,-0x1(%rsi)
mov    %cl,(%rdi)
add    $0x1,%eax
mov    %rdi,%rsi
cmp    %eax,%r9d
ja     1807d <png_do_read_swap_alpha+0xed>
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

00000000000180a0 <png_do_read_invert_alpha>:
push   %rbp
mov    %rsp,%rbp
mov    (%rdi),%r8d
xor    %eax,%eax
movzbl 0x10(%rdi),%ecx
cmp    $0x6,%cl
je     180b9 <png_do_read_invert_alpha+0x19>
cmp    $0x4,%cl
je     180c8 <png_do_read_invert_alpha+0x28>
leaveq 
retq   
movzbl 0x11(%rdi),%ecx
cmp    $0x8,%cl
je     180d7 <png_do_read_invert_alpha+0x37>
add    0x8(%rdi),%rsi
jmp    180fb <png_do_read_invert_alpha+0x5b>
movzbl 0x11(%rdi),%ecx
cmp    $0x8,%cl
je     18102 <png_do_read_invert_alpha+0x62>
add    0x8(%rdi),%rsi
jmp    18126 <png_do_read_invert_alpha+0x86>
mov    0x8(%rdi),%rcx
lea    -0x1(%rcx,%rsi,1),%rcx
jmp    1813b <png_do_read_invert_alpha+0x9b>
movzbl -0x1(%rsi),%ecx
not    %ecx
mov    %cl,-0x1(%rsi)
movzbl -0x2(%rsi),%ecx
not    %ecx
mov    %cl,-0x2(%rsi)
add    $0x1,%eax
add    $0xfffffffffffffff8,%rsi
cmp    %eax,%r8d
ja     180e2 <png_do_read_invert_alpha+0x42>
leaveq 
retq   
mov    0x8(%rdi),%rcx
lea    -0x1(%rsi,%rcx,1),%rcx
jmp    18150 <png_do_read_invert_alpha+0xb0>
movzbl -0x1(%rsi),%ecx
not    %ecx
mov    %cl,-0x1(%rsi)
movzbl -0x2(%rsi),%ecx
not    %ecx
mov    %cl,-0x2(%rsi)
add    $0x1,%eax
add    $0xfffffffffffffffc,%rsi
cmp    %eax,%r8d
ja     1810d <png_do_read_invert_alpha+0x6d>
leaveq 
retq   
movzbl (%rcx),%edx
not    %edx
mov    %dl,(%rcx)
add    $0x1,%eax
add    $0xfffffffffffffffc,%rcx
cmp    %r8d,%eax
jb     1812d <png_do_read_invert_alpha+0x8d>
leaveq 
retq   
movzbl (%rcx),%edx
not    %edx
mov    %dl,(%rcx)
add    $0x1,%eax
add    $0xfffffffffffffffe,%rcx
cmp    %eax,%r8d
ja     18142 <png_do_read_invert_alpha+0xa2>
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

0000000000018160 <png_do_read_filler>:
push   %rbp
mov    %rsp,%rbp
mov    (%rdi),%r9d
mov    %rdx,%r11
shr    $0x8,%r11d
mov    $0x1,%r8d
xor    %eax,%eax
movzbl 0x10(%rdi),%r10d
test   %r10b,%r10b
je     18188 <png_do_read_filler+0x28>
cmp    $0x2,%r10b
je     1819b <png_do_read_filler+0x3b>
leaveq 
retq   
movzbl 0x11(%rdi),%r10d
cmp    $0x8,%r10b
je     181ae <png_do_read_filler+0x4e>
cmp    $0x10,%r10b
je     181c2 <png_do_read_filler+0x62>
leaveq 
retq   
movzbl 0x11(%rdi),%r10d
cmp    $0x8,%r10b
je     181dd <png_do_read_filler+0x7d>
cmp    $0x10,%r10b
je     181fb <png_do_read_filler+0x9b>
leaveq 
retq   
and    $0x80,%ecx
test   %ecx,%ecx
jne    1821a <png_do_read_filler+0xba>
lea    (%r9,%rsi,1),%rcx
lea    (%rsi,%r9,2),%rsi
jmp    1823c <png_do_read_filler+0xdc>
and    $0x80,%ecx
test   %ecx,%ecx
jne    18255 <png_do_read_filler+0xf5>
lea    (%rsi,%r9,2),%rcx
lea    (%rsi,%r9,4),%rsi
jmpq   18284 <png_do_read_filler+0x124>
and    $0x80,%ecx
test   %ecx,%ecx
jne    1829e <png_do_read_filler+0x13e>
lea    (%r9,%r9,2),%rcx
add    %rsi,%rcx
lea    (%r9,%rcx,1),%rsi
jmpq   182d5 <png_do_read_filler+0x175>
and    $0x80,%ecx
test   %ecx,%ecx
jne    182ef <png_do_read_filler+0x18f>
lea    (%r9,%r9,2),%rcx
lea    (%rsi,%rcx,2),%rcx
lea    (%rcx,%r9,2),%rsi
jmpq   18346 <png_do_read_filler+0x1e6>
lea    (%rsi,%r9,2),%rax
lea    (%r9,%rsi,1),%rcx
jmpq   18375 <png_do_read_filler+0x215>
add    $0xffffffffffffffff,%rcx
movzbl (%rcx),%r8d
mov    %r8b,-0x1(%rsi)
add    $0xfffffffffffffffe,%rsi
mov    %dl,(%rsi)
add    $0x1,%eax
cmp    %eax,%r9d
ja     18227 <png_do_read_filler+0xc7>
movb   $0x2,0x12(%rdi)
movb   $0x10,0x13(%rdi)
lea    (%r9,%r9,1),%eax
mov    %eax,%eax
mov    %rax,0x8(%rdi)
leaveq 
retq   
lea    (%rsi,%r9,4),%rax
lea    (%rsi,%r9,2),%rcx
jmpq   183b2 <png_do_read_filler+0x252>
movzbl -0x1(%rcx),%r8d
mov    %r8b,-0x1(%rsi)
add    $0xfffffffffffffffe,%rcx
movzbl (%rcx),%r8d
mov    %r8b,-0x2(%rsi)
mov    %dl,-0x3(%rsi)
add    $0xfffffffffffffffc,%rsi
mov    %r11b,(%rsi)
add    $0x1,%eax
cmp    %eax,%r9d
ja     18262 <png_do_read_filler+0x102>
movb   $0x2,0x12(%rdi)
movb   $0x20,0x13(%rdi)
shl    $0x2,%r9d
mov    %r9d,%eax
mov    %rax,0x8(%rdi)
leaveq 
retq   
lea    (%r9,%r9,2),%rax
add    %rsi,%rax
lea    (%r9,%rax,1),%rcx
jmpq   183f8 <png_do_read_filler+0x298>
movzbl -0x1(%rcx),%r8d
mov    %r8b,-0x1(%rsi)
movzbl -0x2(%rcx),%r8d
mov    %r8b,-0x2(%rsi)
add    $0xfffffffffffffffd,%rcx
movzbl (%rcx),%r8d
mov    %r8b,-0x3(%rsi)
add    $0xfffffffffffffffc,%rsi
mov    %dl,(%rsi)
add    $0x1,%eax
cmp    %eax,%r9d
ja     182ae <png_do_read_filler+0x14e>
movb   $0x4,0x12(%rdi)
movb   $0x20,0x13(%rdi)
shl    $0x2,%r9d
mov    %r9d,%eax
mov    %rax,0x8(%rdi)
leaveq 
retq   
lea    (%r9,%r9,2),%rax
lea    (%rsi,%rax,2),%rax
lea    (%rax,%r9,2),%rcx
jmpq   18456 <png_do_read_filler+0x2f6>
movzbl -0x1(%rcx),%r8d
mov    %r8b,-0x1(%rsi)
movzbl -0x2(%rcx),%r8d
mov    %r8b,-0x2(%rsi)
movzbl -0x3(%rcx),%r8d
mov    %r8b,-0x3(%rsi)
movzbl -0x4(%rcx),%r8d
mov    %r8b,-0x4(%rsi)
movzbl -0x5(%rcx),%r8d
mov    %r8b,-0x5(%rsi)
add    $0xfffffffffffffffa,%rcx
movzbl (%rcx),%r8d
mov    %r8b,-0x6(%rsi)
mov    %dl,-0x7(%rsi)
add    $0xfffffffffffffff8,%rsi
mov    %r11b,(%rsi)
add    $0x1,%eax
cmp    %eax,%r9d
ja     18300 <png_do_read_filler+0x1a0>
movb   $0x4,0x12(%rdi)
movb   $0x40,0x13(%rdi)
shl    $0x3,%r9d
mov    %r9d,%eax
mov    %rax,0x8(%rdi)
leaveq 
retq   
mov    %dl,-0x1(%rax)
add    $0xfffffffffffffffe,%rax
add    $0xffffffffffffffff,%rcx
movzbl (%rcx),%esi
mov    %sil,(%rax)
add    $0x1,%r8d
cmp    %r9d,%r8d
jb     18360 <png_do_read_filler+0x200>
mov    %dl,-0x1(%rax)
movb   $0x2,0x12(%rdi)
movb   $0x10,0x13(%rdi)
lea    (%r9,%r9,1),%eax
mov    %eax,%eax
mov    %rax,0x8(%rdi)
leaveq 
retq   
mov    %dl,-0x1(%rax)
mov    %r11b,-0x2(%rax)
movzbl -0x1(%rcx),%esi
mov    %sil,-0x3(%rax)
add    $0xfffffffffffffffc,%rax
add    $0xfffffffffffffffe,%rcx
movzbl (%rcx),%esi
mov    %sil,(%rax)
add    $0x1,%r8d
cmp    %r8d,%r9d
ja     18391 <png_do_read_filler+0x231>
mov    %dl,-0x1(%rax)
mov    %r11b,-0x2(%rax)
movb   $0x2,0x12(%rdi)
movb   $0x20,0x13(%rdi)
shl    $0x2,%r9d
mov    %r9d,%eax
mov    %rax,0x8(%rdi)
leaveq 
retq   
mov    %dl,-0x1(%rcx)
movzbl -0x1(%rax),%esi
mov    %sil,-0x2(%rcx)
movzbl -0x2(%rax),%esi
mov    %sil,-0x3(%rcx)
add    $0xfffffffffffffffc,%rcx
add    $0xfffffffffffffffd,%rax
movzbl (%rax),%esi
mov    %sil,(%rcx)
add    $0x1,%r8d
cmp    %r8d,%r9d
ja     183d3 <png_do_read_filler+0x273>
mov    %dl,-0x1(%rcx)
movb   $0x4,0x12(%rdi)
movb   $0x20,0x13(%rdi)
shl    $0x2,%r9d
mov    %r9d,%eax
mov    %rax,0x8(%rdi)
leaveq 
retq   
mov    %dl,-0x1(%rcx)
mov    %r11b,-0x2(%rcx)
movzbl -0x1(%rax),%esi
mov    %sil,-0x3(%rcx)
movzbl -0x2(%rax),%esi
mov    %sil,-0x4(%rcx)
movzbl -0x3(%rax),%esi
mov    %sil,-0x5(%rcx)
movzbl -0x4(%rax),%esi
mov    %sil,-0x6(%rcx)
movzbl -0x5(%rax),%esi
mov    %sil,-0x7(%rcx)
add    $0xfffffffffffffff8,%rcx
add    $0xfffffffffffffffa,%rax
movzbl (%rax),%esi
mov    %sil,(%rcx)
add    $0x1,%r8d
cmp    %r8d,%r9d
ja     18415 <png_do_read_filler+0x2b5>
mov    %dl,-0x1(%rcx)
mov    %r11b,-0x2(%rcx)
movb   $0x4,0x12(%rdi)
movb   $0x40,0x13(%rdi)
shl    $0x3,%r9d
mov    %r9d,%eax
mov    %rax,0x8(%rdi)
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

0000000000018480 <png_do_gray_to_rgb>:
push   %rbp
mov    %rsp,%rbp
mov    (%rdi),%r8d
movzbl 0x11(%rdi),%edx
cmp    $0x7,%dl
ja     18492 <png_do_gray_to_rgb+0x12>
leaveq 
retq   
movzbl 0x10(%rdi),%ecx
mov    %rcx,%rax
and    $0x2,%eax
test   %eax,%eax
je     184a2 <png_do_gray_to_rgb+0x22>
leaveq 
retq   
xor    %eax,%eax
test   %cl,%cl
je     184de <png_do_gray_to_rgb+0x5e>
cmp    $0x4,%cl
je     184f2 <png_do_gray_to_rgb+0x72>
movzbl 0x12(%rdi),%eax
lea    0x2(%rax),%ecx
mov    %cl,0x12(%rdi)
movzbl 0x10(%rdi),%eax
or     $0x2,%al
mov    %al,0x10(%rdi)
movzbl 0x11(%rdi),%eax
imul   %cl
mov    %al,0x13(%rdi)
cmp    $0x7,%al
ja     18506 <png_do_gray_to_rgb+0x86>
movzbl %al,%eax
imul   %r8,%rax
add    $0x7,%rax
shr    $0x3,%rax
jmp    18511 <png_do_gray_to_rgb+0x91>
cmp    $0x8,%dl
je     18517 <png_do_gray_to_rgb+0x97>
lea    (%rsi,%r8,2),%rdx
lea    -0x1(%rdx),%rcx
lea    -0x1(%rdx,%r8,4),%rdx
jmp    18561 <png_do_gray_to_rgb+0xe1>
cmp    $0x8,%dl
je     1856b <png_do_gray_to_rgb+0xeb>
lea    -0x1(%rsi,%r8,4),%rcx
lea    -0x1(%rsi,%r8,8),%rdx
jmpq   185c3 <png_do_gray_to_rgb+0x143>
movzbl %al,%eax
shr    $0x3,%rax
imul   %r8,%rax
mov    %rax,0x8(%rdi)
leaveq 
retq   
lea    -0x1(%r8,%rsi,1),%rcx
lea    (%r8,%rsi,1),%rdx
lea    -0x1(%rdx,%r8,2),%rdx
jmpq   185ec <png_do_gray_to_rgb+0x16c>
movzbl (%rcx),%esi
mov    %sil,(%rdx)
movzbl -0x1(%rcx),%esi
mov    %sil,-0x1(%rdx)
movzbl (%rcx),%esi
mov    %sil,-0x2(%rdx)
movzbl -0x1(%rcx),%esi
mov    %sil,-0x3(%rdx)
movzbl (%rcx),%esi
mov    %sil,-0x4(%rdx)
movzbl -0x1(%rcx),%esi
mov    %sil,-0x5(%rdx)
add    $0xfffffffffffffffe,%rcx
add    $0xfffffffffffffffa,%rdx
add    $0x1,%eax
cmp    %eax,%r8d
ja     1852a <png_do_gray_to_rgb+0xaa>
jmpq   184ad <png_do_gray_to_rgb+0x2d>
lea    -0x1(%rsi,%r8,2),%rcx
lea    -0x1(%rsi,%r8,4),%rdx
jmpq   1861f <png_do_gray_to_rgb+0x19f>
movzbl (%rcx),%esi
mov    %sil,(%rdx)
movzbl -0x1(%rcx),%esi
mov    %sil,-0x1(%rdx)
movzbl -0x2(%rcx),%esi
mov    %sil,-0x2(%rdx)
movzbl -0x3(%rcx),%esi
mov    %sil,-0x3(%rdx)
movzbl -0x2(%rcx),%esi
mov    %sil,-0x4(%rdx)
movzbl -0x3(%rcx),%esi
mov    %sil,-0x5(%rdx)
movzbl -0x2(%rcx),%esi
mov    %sil,-0x6(%rdx)
movzbl -0x3(%rcx),%esi
mov    %sil,-0x7(%rdx)
add    $0xfffffffffffffffc,%rcx
add    $0xfffffffffffffff8,%rdx
add    $0x1,%eax
cmp    %r8d,%eax
jb     1857a <png_do_gray_to_rgb+0xfa>
jmpq   184ad <png_do_gray_to_rgb+0x2d>
movzbl (%rcx),%esi
mov    %sil,(%rdx)
movzbl (%rcx),%esi
mov    %sil,-0x1(%rdx)
movzbl (%rcx),%esi
mov    %sil,-0x2(%rdx)
add    $0xffffffffffffffff,%rcx
add    $0xfffffffffffffffd,%rdx
add    $0x1,%eax
cmp    %eax,%r8d
ja     185cd <png_do_gray_to_rgb+0x14d>
jmpq   184ad <png_do_gray_to_rgb+0x2d>
movzbl (%rcx),%esi
mov    %sil,(%rdx)
movzbl -0x1(%rcx),%esi
mov    %sil,-0x1(%rdx)
movzbl -0x1(%rcx),%esi
mov    %sil,-0x2(%rdx)
movzbl -0x1(%rcx),%esi
mov    %sil,-0x3(%rdx)
add    $0xfffffffffffffffe,%rcx
add    $0xfffffffffffffffc,%rdx
add    $0x1,%eax
cmp    %eax,%r8d
ja     185f6 <png_do_gray_to_rgb+0x176>
jmpq   184ad <png_do_gray_to_rgb+0x2d>
nopl   0x0(%rax)

0000000000018630 <png_do_rgb_to_gray>:
push   %rbp
mov    %rsp,%rbp
sub    $0x40,%rsp
xor    %eax,%eax
movzbl 0x10(%rsi),%r10d
mov    %r10,%rcx
and    $0x1,%ecx
test   %ecx,%ecx
je     1864b <png_do_rgb_to_gray+0x1b>
leaveq 
retq   
mov    %r10,%rcx
and    $0x2,%ecx
test   %ecx,%ecx
jg     18657 <png_do_rgb_to_gray+0x27>
leaveq 
retq   
mov    (%rsi),%r11d
movzwl 0x3d4(%rdi),%r8d
movzwl 0x3d2(%rdi),%r9d
mov    $0x1,%ecx
and    $0x4,%r10d
test   %r10d,%r10d
jg     1867d <png_do_rgb_to_gray+0x4d>
mov    %rax,%r10
jmp    18680 <png_do_rgb_to_gray+0x50>
mov    %rcx,%r10
mov    %r15,-0x28(%rbp)
lea    (%r8,%r9,1),%r15d
mov    %r14,-0x20(%rbp)
mov    $0x8000,%r14d
sub    %r15d,%r14d
movzbl 0x11(%rsi),%r15d
cmp    $0x8,%r15b
je     186c4 <png_do_rgb_to_gray+0x94>
mov    0x2d0(%rdi),%r15
test   %r15,%r15
jne    186eb <png_do_rgb_to_gray+0xbb>
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %rsi,-0x38(%rbp)
mov    %rax,%rbx
mov    %rdx,%rsi
jmp    1872e <png_do_rgb_to_gray+0xfe>
mov    0x2b8(%rdi),%r15
test   %r15,%r15
jne    18776 <png_do_rgb_to_gray+0x146>
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %rax,%rbx
mov    %rdx,%r12
jmpq   187ac <png_do_rgb_to_gray+0x17c>
mov    0x2c8(%rdi),%r15
test   %r15,%r15
jne    187dd <png_do_rgb_to_gray+0x1ad>
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %rsi,-0x38(%rbp)
mov    %rax,%rbx
mov    %rdx,%rsi
jmp    1872e <png_do_rgb_to_gray+0xfe>
movzbl (%r12),%r12d
mov    %r12b,(%rdi)
movzbl 0x7(%rsi),%edi
mov    %dil,0x3(%rdx)
add    $0x8,%rsi
add    $0x4,%rdx
add    $0x1,%eax
cmp    %r11d,%eax
jb     187f8 <png_do_rgb_to_gray+0x1c8>
mov    -0x38(%rbp),%rsi
movzbl 0x12(%rsi),%eax
lea    0xfe(%rax),%ecx
mov    %cl,0x12(%rsi)
movzbl 0x10(%rsi),%eax
and    $0xfd,%al
mov    %al,0x10(%rsi)
movzbl 0x11(%rsi),%eax
imul   %cl
mov    %al,0x13(%rsi)
cmp    $0x7,%al
ja     18883 <png_do_rgb_to_gray+0x253>
movzbl %al,%eax
imul   %r11,%rax
add    $0x7,%rax
shr    $0x3,%rax
jmpq   1888e <png_do_rgb_to_gray+0x25e>
mov    0x2c0(%rdi),%r15
test   %r15,%r15
jne    188ab <png_do_rgb_to_gray+0x27b>
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %rax,%rbx
mov    %rdx,%r12
jmp    187ac <png_do_rgb_to_gray+0x17c>
movzbl (%rdx),%edx
mov    %dl,0x0(%r13)
add    $0x4,%r12
lea    0x1(%r13),%rdx
add    $0x1,%eax
cmp    %eax,%r11d
jbe    1873b <png_do_rgb_to_gray+0x10b>
movzbl 0x2(%r12),%r13d
movzbl 0x1(%r12),%r15d
movzbl (%r12),%edi
cmp    %dil,%r15b
jne    188c6 <png_do_rgb_to_gray+0x296>
cmp    %r13b,%dil
jne    188c6 <png_do_rgb_to_gray+0x296>
lea    0x1(%rdx),%r13
jmpq   188e6 <png_do_rgb_to_gray+0x2b6>
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %rsi,-0x30(%rbp)
mov    %rax,%rbx
mov    %rdx,%rsi
jmpq   1891b <png_do_rgb_to_gray+0x2eb>
movzbl 0x5(%rsi),%r12d
movzbl 0x4(%rsi),%edi
shl    $0x8,%edi
lea    (%r12,%rdi,1),%r15d
movzbl 0x3(%rsi),%r12d
movzbl 0x2(%rsi),%edi
shl    $0x8,%edi
lea    (%r12,%rdi,1),%r13d
movzbl 0x1(%rsi),%r12d
movzbl (%rsi),%edi
shl    $0x8,%edi
add    %r12d,%edi
cmp    %di,%r13w
je     18929 <png_do_rgb_to_gray+0x2f9>
mov    %rcx,%rbx
movzwl %r13w,%r12d
imul   %r8d,%r12d
movzwl %di,%edi
imul   %r9d,%edi
add    %edi,%r12d
movzwl %r15w,%edi
imul   %r14d,%edi
lea    0x4000(%rdi,%r12,1),%edi
shr    $0xf,%edi
movzwl %di,%r12d
shr    $0x8,%r12d
test   %r10d,%r10d
mov    %r12b,(%rdx)
mov    %dil,0x1(%rdx)
lea    0x6(%rsi),%r12
lea    0x2(%rdx),%rdi
jg     18713 <png_do_rgb_to_gray+0xe3>
mov    %rdi,%rdx
mov    %r12,%rsi
jmpq   1872b <png_do_rgb_to_gray+0xfb>
movzbl %al,%eax
shr    $0x3,%rax
imul   %r11,%rax
mov    %rax,0x8(%rsi)
mov    %rbx,%rax
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x20(%rbp),%r14
mov    -0x28(%rbp),%r15
leaveq 
retq   
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %rsi,-0x38(%rbp)
mov    %rax,%rbx
mov    %rdx,%rsi
jmpq   1894d <png_do_rgb_to_gray+0x31d>
mov    %r8,%rbx
imul   %r15d,%ebx
imul   %r9d,%edi
add    %edi,%ebx
mov    %r14,%rdi
imul   %r13d,%edi
add    %ebx,%edi
shr    $0xf,%edi
lea    0x1(%rdx),%r13
mov    %rcx,%rbx
test   %r10d,%r10d
mov    %dil,(%rdx)
lea    0x3(%r12),%rdx
jg     1879a <png_do_rgb_to_gray+0x16a>
mov    %rdx,%r12
mov    %r13,%rdx
jmpq   187a9 <png_do_rgb_to_gray+0x179>
movzbl (%rcx),%ecx
mov    %cl,(%r12)
movzbl 0x7(%rsi),%ecx
mov    %cl,0x3(%rdx)
add    $0x8,%rsi
add    $0x4,%rdx
add    $0x1,%eax
cmp    %eax,%r11d
ja     1895b <png_do_rgb_to_gray+0x32b>
mov    -0x30(%rbp),%rsi
jmpq   1873b <png_do_rgb_to_gray+0x10b>
cmp    %di,%r15w
je     18833 <png_do_rgb_to_gray+0x203>
mov    %rcx,%rbx
jmpq   18833 <png_do_rgb_to_gray+0x203>
movzbl (%rdx),%edx
mov    %dl,0x0(%r13)
add    $0x4,%rsi
lea    0x1(%r13),%rdx
add    $0x1,%eax
cmp    %eax,%r11d
ja     189c8 <png_do_rgb_to_gray+0x398>
mov    -0x38(%rbp),%rsi
jmpq   1873b <png_do_rgb_to_gray+0x10b>
movzbl 0x5(%rsi),%r12d
movzbl 0x4(%rsi),%ecx
shl    $0x8,%ecx
add    %ecx,%r12d
movzbl 0x1(%rsi),%r13d
movzbl (%rsi),%ecx
shl    $0x8,%ecx
add    %ecx,%r13d
movzbl 0x3(%rsi),%r15d
movzbl 0x2(%rsi),%ecx
shl    $0x8,%ecx
add    %ecx,%r15d
cmp    %r13w,%r15w
jne    18a03 <png_do_rgb_to_gray+0x3d3>
cmp    %r12w,%r15w
jne    18a03 <png_do_rgb_to_gray+0x3d3>
mov    0x2b0(%rdi),%r15
test   %r15,%r15
je     18aa9 <png_do_rgb_to_gray+0x479>
movzbl %r13b,%r12d
mov    0x2a0(%rdi),%ecx
shr    %cl,%r12d
movslq %r12d,%rcx
mov    (%r15,%rcx,8),%r12
shr    $0x8,%r13d
movslq %r13d,%rcx
movzwl (%r12,%rcx,2),%r12d
jmpq   18aa9 <png_do_rgb_to_gray+0x479>
movzbl 0x2(%rsi),%r15d
movzbl (%rsi),%r12d
movzbl 0x1(%rsi),%r13d
cmp    %r12b,%r13b
jne    18ad2 <png_do_rgb_to_gray+0x4a2>
cmp    %r15b,%r12b
jne    18ad2 <png_do_rgb_to_gray+0x4a2>
mov    0x2a8(%rdi),%r13
test   %r13,%r13
je     189fa <png_do_rgb_to_gray+0x3ca>
movzbl 0x0(%r13,%r12,1),%r12d
lea    0x1(%rdx),%r13
jmpq   18b17 <png_do_rgb_to_gray+0x4e7>
mov    0x2a0(%rdi),%ecx
movzbl %r15b,%ebx
shr    %cl,%ebx
movslq %ebx,%rbx
mov    %r11,-0x38(%rbp)
mov    0x2d0(%rdi),%r11
mov    (%r11,%rbx,8),%rbx
shr    $0x8,%r15d
movslq %r15d,%r15
movzwl (%rbx,%r15,2),%ebx
mov    %r8,%r15
imul   %ebx,%r15d
movzbl %r13b,%ebx
shr    %cl,%ebx
movslq %ebx,%rbx
mov    (%r11,%rbx,8),%rbx
shr    $0x8,%r13d
movslq %r13d,%r13
movzwl (%rbx,%r13,2),%ebx
imul   %r9d,%ebx
lea    (%r15,%rbx,1),%r13d
movzbl %r12b,%ebx
shr    %cl,%ebx
movslq %ebx,%rbx
mov    (%r11,%rbx,8),%rbx
shr    $0x8,%r12d
movslq %r12d,%r11
movzwl (%rbx,%r11,2),%ebx
imul   %r14d,%ebx
lea    0x4000(%rbx,%r13,1),%ebx
shr    $0xf,%ebx
movzwl %bx,%ebx
movzbl %bl,%r11d
shr    %cl,%r11d
movslq %r11d,%rcx
mov    0x2c8(%rdi),%r11
mov    (%r11,%rcx,8),%r11
shr    $0x8,%ebx
movslq %ebx,%rcx
movzwl (%r11,%rcx,2),%r12d
mov    -0x38(%rbp),%r11
mov    $0x1,%ebx
movzwl %r12w,%ecx
shr    $0x8,%ecx
test   %r10d,%r10d
mov    %cl,(%rdx)
mov    %r12b,0x1(%rdx)
lea    0x6(%rsi),%rcx
lea    0x2(%rdx),%r12
jg     18902 <png_do_rgb_to_gray+0x2d2>
mov    %r12,%rdx
mov    %rcx,%rsi
jmpq   18918 <png_do_rgb_to_gray+0x2e8>
mov    0x2c0(%rdi),%rbx
movzbl (%rbx,%r13,1),%r13d
imul   %r8d,%r13d
movzbl (%rbx,%r12,1),%r12d
imul   %r9d,%r12d
add    %r13d,%r12d
movzbl (%r15,%rbx,1),%ebx
imul   %r14d,%ebx
lea    0x4000(%rbx,%r12,1),%ebx
shr    $0xf,%ebx
mov    %ebx,%ebx
mov    0x2b8(%rdi),%r12
movzbl (%rbx,%r12,1),%r12d
lea    0x1(%rdx),%r13
mov    %rcx,%rbx
test   %r10d,%r10d
mov    %r12b,(%rdx)
lea    0x3(%rsi),%rdx
jg     1893b <png_do_rgb_to_gray+0x30b>
mov    %rdx,%rsi
mov    %r13,%rdx
jmpq   1894a <png_do_rgb_to_gray+0x31a>
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   (%rax)

0000000000018b40 <png_do_compose>:
push   %rbp
mov    %rsp,%rbp
sub    $0xb0,%rsp
mov    %rsi,-0xa8(%rbp)
mov    %rdx,-0xa0(%rbp)
mov    0x2a8(%rdx),%r8
mov    0x2b8(%rdx),%r10
mov    0x2c0(%rdx),%r11
mov    0x2b0(%rdx),%rsi
mov    0x2c8(%rdx),%r9
mov    0x2d0(%rdx),%rax
mov    %rax,-0xb0(%rbp)
mov    0x2a0(%rdx),%ecx
xor    %eax,%eax
mov    %rax,-0x98(%rbp)
mov    $0x1,%eax
mov    %rax,-0x90(%rbp)
mov    0x130(%rdx),%eax
and    $0x2000,%eax
test   %eax,%eax
je     18bc0 <png_do_compose+0x80>
pushq  -0x90(%rbp)
popq   -0x98(%rbp)
mov    (%rdi),%eax
movzbl 0x10(%rdi),%edx
cmp    $0x3,%dl
jbe    18be3 <png_do_compose+0xa3>
mov    %rcx,-0x90(%rbp)
mov    $0xff,%ecx
cmp    $0x4,%dl
je     18bee <png_do_compose+0xae>
cmp    $0x6,%dl
je     18c1f <png_do_compose+0xdf>
leaveq 
retq   
test   %dl,%dl
je     18c57 <png_do_compose+0x117>
cmp    $0x2,%dl
je     18c69 <png_do_compose+0x129>
leaveq 
retq   
movzbl 0x11(%rdi),%edx
cmp    $0x8,%dl
je     18c9b <png_do_compose+0x15b>
test   %rsi,%rsi
jne    18cb9 <png_do_compose+0x179>
mov    $0xffff,%r9d
mov    -0xa0(%rbp),%r10
xor    %ecx,%ecx
mov    -0xa8(%rbp),%rdx
jmpq   18cfb <png_do_compose+0x1bb>
movzbl 0x11(%rdi),%edx
cmp    $0x8,%dl
je     18d05 <png_do_compose+0x1c5>
test   %rsi,%rsi
jne    18d23 <png_do_compose+0x1e3>
mov    %r15,-0xb0(%rbp)
mov    $0xffff,%r9d
mov    -0xa0(%rbp),%r10
xor    %ecx,%ecx
mov    -0xa8(%rbp),%rdx
jmpq   18da2 <png_do_compose+0x262>
movzbl 0x11(%rdi),%edx
add    $0xffffffff,%edx
cmp    $0xf,%edx
jbe    18db3 <png_do_compose+0x273>
leaveq 
retq   
movzbl 0x11(%rdi),%edx
cmp    $0x8,%dl
je     18dc5 <png_do_compose+0x285>
test   %rsi,%rsi
jne    18de3 <png_do_compose+0x2a3>
mov    %r15,-0x98(%rbp)
mov    -0xa0(%rbp),%r9
xor    %ecx,%ecx
mov    -0xa8(%rbp),%rdx
jmpq   18eb2 <png_do_compose+0x372>
test   %r11,%r11
jne    18ec3 <png_do_compose+0x383>
mov    -0xa0(%rbp),%r9
xor    %edx,%edx
mov    -0xa8(%rbp),%rsi
jmpq   18ef0 <png_do_compose+0x3b0>
test   %r9,%r9
jne    18efa <png_do_compose+0x3ba>
mov    $0xffff,%r9d
mov    -0xa0(%rbp),%r10
xor    %ecx,%ecx
mov    -0xa8(%rbp),%rdx
jmp    18cfb <png_do_compose+0x1bb>
movzwl 0x284(%r10),%esi
shr    $0x8,%esi
mov    %sil,(%rdx)
movzbl 0x284(%r10),%esi
mov    %sil,0x1(%rdx)
add    $0x1,%ecx
add    $0x4,%rdx
cmp    %ecx,%eax
ja     18f25 <png_do_compose+0x3e5>
leaveq 
retq   
test   %r11,%r11
jne    18f98 <png_do_compose+0x458>
mov    -0xa0(%rbp),%r9
xor    %edx,%edx
mov    -0xa8(%rbp),%rsi
jmpq   18fdd <png_do_compose+0x49d>
test   %r9,%r9
jne    18fe7 <png_do_compose+0x4a7>
mov    %r15,-0xb0(%rbp)
mov    $0xffff,%r9d
mov    -0xa0(%rbp),%r10
xor    %ecx,%ecx
mov    -0xa8(%rbp),%rdx
jmp    18da2 <png_do_compose+0x262>
movzwl 0x27e(%r10),%esi
shr    $0x8,%esi
mov    %sil,(%rdx)
movzbl 0x27e(%r10),%esi
mov    %sil,0x1(%rdx)
movzwl 0x280(%r10),%esi
shr    $0x8,%esi
mov    %sil,0x2(%rdx)
movzbl 0x280(%r10),%esi
mov    %sil,0x3(%rdx)
movzwl 0x282(%r10),%esi
shr    $0x8,%esi
mov    %sil,0x4(%rdx)
movzbl 0x282(%r10),%esi
mov    %sil,0x5(%rdx)
add    $0x1,%ecx
add    $0x8,%rdx
cmp    %ecx,%eax
ja     19019 <png_do_compose+0x4d9>
mov    -0xb0(%rbp),%r15
leaveq 
retq   
lea    0x154f6(%rip),%rdi        # 2e2b0 <chunks_to_process.34+0x4ab>
movslq (%rdi,%rdx,4),%rdx
add    %rdi,%rdx
jmpq   *%rdx
leaveq 
retq   
test   %r8,%r8
jne    191f6 <png_do_compose+0x6b6>
mov    -0xa0(%rbp),%rsi
xor    %ecx,%ecx
mov    -0xa8(%rbp),%rdx
jmpq   19267 <png_do_compose+0x727>
mov    %r15,-0x48(%rbp)
mov    %r13,-0x38(%rbp)
mov    %r14,-0x40(%rbp)
mov    -0xa0(%rbp),%r8
xor    %edx,%edx
mov    -0xa8(%rbp),%rdi
jmpq   192ea <png_do_compose+0x7aa>
movzbl 0x2(%rdx),%edi
movzbl 0x3(%rdx),%r15d
movzbl 0x4(%rdx),%r8d
movzbl 0x5(%rdx),%r10d
movzbl 0x1(%rdx),%r11d
movzbl (%rdx),%esi
shl    $0x8,%esi
add    %esi,%r11d
movzwl 0x2f2(%r9),%esi
cmp    %si,%r11w
jne    18eab <png_do_compose+0x36b>
shl    $0x8,%edi
add    %r15d,%edi
movzwl 0x2f4(%r9),%esi
cmp    %si,%di
jne    18eab <png_do_compose+0x36b>
shl    $0x8,%r8d
lea    (%r10,%r8,1),%edi
movzwl 0x2f6(%r9),%esi
cmp    %si,%di
jne    18eab <png_do_compose+0x36b>
movzwl 0x27e(%r9),%esi
shr    $0x8,%esi
mov    %sil,(%rdx)
movzbl 0x27e(%r9),%esi
mov    %sil,0x1(%rdx)
movzwl 0x280(%r9),%esi
shr    $0x8,%esi
mov    %sil,0x2(%rdx)
movzbl 0x280(%r9),%esi
mov    %sil,0x3(%rdx)
movzwl 0x282(%r9),%esi
shr    $0x8,%esi
mov    %sil,0x4(%rdx)
movzbl 0x282(%r9),%esi
mov    %sil,0x5(%rdx)
add    $0x1,%ecx
add    $0x6,%rdx
cmp    %ecx,%eax
ja     18e04 <png_do_compose+0x2c4>
mov    -0x98(%rbp),%r15
leaveq 
retq   
test   %r10,%r10
jne    19300 <png_do_compose+0x7c0>
mov    -0xa0(%rbp),%r9
xor    %edx,%edx
mov    -0xa8(%rbp),%rsi
jmp    18ef0 <png_do_compose+0x3b0>
movzbl 0x284(%r9),%edi
mov    %dil,(%rsi)
add    $0x1,%edx
add    $0x2,%rsi
cmp    %edx,%eax
ja     1931e <png_do_compose+0x7de>
leaveq 
retq   
mov    -0xb0(%rbp),%r8
test   %r8,%r8
jne    19372 <png_do_compose+0x832>
mov    $0xffff,%r9d
mov    -0xa0(%rbp),%r10
xor    %ecx,%ecx
mov    -0xa8(%rbp),%rdx
jmpq   18cfb <png_do_compose+0x1bb>
movzbl 0x3(%rdx),%edi
movzbl 0x2(%rdx),%esi
shl    $0x8,%esi
cmp    %si,%di
je     18cda <png_do_compose+0x19a>
add    %edi,%esi
cmp    $0xfffe,%si
ja     18cf4 <png_do_compose+0x1b4>
movzwl %si,%esi
mov    %r9,%rdi
sub    %esi,%edi
movzwl 0x284(%r10),%r8d
imul   %r8d,%edi
movzbl 0x1(%rdx),%r11d
movzbl (%rdx),%r8d
shl    $0x8,%r8d
add    %r11d,%r8d
movzwl %r8w,%r8d
imul   %r8d,%esi
add    %esi,%edi
lea    0x8000(%rdi),%esi
shr    $0x10,%esi
lea    0x8000(%rsi,%rdi,1),%esi
shr    $0x10,%esi
movzwl %si,%edi
shr    $0x8,%edi
mov    %dil,(%rdx)
mov    %sil,0x1(%rdx)
jmpq   18cf4 <png_do_compose+0x1b4>
test   %r10,%r10
jne    193af <png_do_compose+0x86f>
mov    -0xa0(%rbp),%r9
xor    %edx,%edx
mov    -0xa8(%rbp),%rsi
jmp    18fdd <png_do_compose+0x49d>
movzbl 0x27e(%r9),%edi
mov    %dil,(%rsi)
movzbl 0x280(%r9),%edi
mov    %dil,0x1(%rsi)
movzbl 0x282(%r9),%edi
mov    %dil,0x2(%rsi)
add    $0x1,%edx
add    $0x4,%rsi
cmp    %edx,%eax
ja     193cd <png_do_compose+0x88d>
leaveq 
retq   
mov    -0xb0(%rbp),%r10
test   %r10,%r10
jne    19488 <png_do_compose+0x948>
mov    %r15,-0xb0(%rbp)
mov    $0xffff,%r9d
mov    -0xa0(%rbp),%r10
xor    %ecx,%ecx
mov    -0xa8(%rbp),%rdx
jmpq   18da2 <png_do_compose+0x262>
movzbl 0x7(%rdx),%edi
movzbl 0x6(%rdx),%esi
shl    $0x8,%esi
cmp    %si,%di
je     18d4b <png_do_compose+0x20b>
add    %edi,%esi
cmp    $0xfffe,%si
ja     18d9b <png_do_compose+0x25b>
movzwl %si,%esi
mov    %r9,%r11
sub    %esi,%r11d
movzwl 0x27e(%r10),%edi
mov    %r11,%r15
imul   %edi,%r15d
movzbl 0x1(%rdx),%r8d
movzbl (%rdx),%edi
shl    $0x8,%edi
add    %r8d,%edi
movzwl %di,%edi
imul   %esi,%edi
lea    (%r15,%rdi,1),%r8d
lea    0x8000(%r8),%edi
shr    $0x10,%edi
lea    0x8000(%rdi,%r8,1),%edi
shr    $0x10,%edi
movzwl %di,%r8d
shr    $0x8,%r8d
mov    %r8b,(%rdx)
mov    %dil,0x1(%rdx)
movzwl 0x280(%r10),%edi
imul   %r11d,%edi
movzbl 0x3(%rdx),%r15d
movzbl 0x2(%rdx),%r8d
shl    $0x8,%r8d
add    %r15d,%r8d
movzwl %r8w,%r8d
imul   %esi,%r8d
add    %edi,%r8d
lea    0x8000(%r8),%edi
shr    $0x10,%edi
lea    0x8000(%rdi,%r8,1),%edi
shr    $0x10,%edi
movzwl %di,%r8d
shr    $0x8,%r8d
mov    %r8b,0x2(%rdx)
mov    %dil,0x3(%rdx)
movzwl 0x282(%r10),%edi
imul   %r11d,%edi
movzbl 0x5(%rdx),%r11d
movzbl 0x4(%rdx),%r8d
shl    $0x8,%r8d
add    %r11d,%r8d
movzwl %r8w,%r8d
imul   %r8d,%esi
add    %esi,%edi
lea    0x8000(%rdi),%esi
shr    $0x10,%esi
lea    0x8000(%rsi,%rdi,1),%esi
shr    $0x10,%esi
movzwl %si,%edi
shr    $0x8,%edi
mov    %dil,0x4(%rdx)
mov    %sil,0x5(%rdx)
jmpq   18d9b <png_do_compose+0x25b>
mov    $0x7f7f,%edi
mov    $0x7,%r8d
mov    %r15,-0x18(%rbp)
mov    %r14,-0x10(%rbp)
mov    -0xa0(%rbp),%r9
xor    %esi,%esi
mov    -0xa8(%rbp),%rdx
mov    %r8,%rcx
jmpq   194d8 <png_do_compose+0x998>
mov    $0x3f3f,%edx
mov    $0x6,%esi
test   %r8,%r8
jne    194ea <png_do_compose+0x9aa>
mov    %r15,-0x28(%rbp)
mov    %r14,-0x20(%rbp)
mov    -0xa0(%rbp),%r9
xor    %r8d,%r8d
mov    -0xa8(%rbp),%rdi
mov    %rsi,%rcx
jmpq   1951a <png_do_compose+0x9da>
mov    $0xf0f,%edx
mov    $0x4,%esi
test   %r8,%r8
jne    1952d <png_do_compose+0x9ed>
mov    %r15,-0x38(%rbp)
mov    %r14,-0x30(%rbp)
mov    -0xa0(%rbp),%r9
xor    %r8d,%r8d
mov    -0xa8(%rbp),%rdi
mov    %rsi,%rcx
jmpq   1955d <png_do_compose+0xa1d>
test   %r8,%r8
jne    19570 <png_do_compose+0xa30>
mov    -0xa0(%rbp),%rdi
xor    %ecx,%ecx
mov    -0xa8(%rbp),%rdx
jmpq   195a7 <png_do_compose+0xa67>
test   %rsi,%rsi
jne    195ad <png_do_compose+0xa6d>
mov    -0xa0(%rbp),%rdi
xor    %ecx,%ecx
mov    -0xa8(%rbp),%rdx
jmpq   19600 <png_do_compose+0xac0>
mov    -0xa0(%rbp),%rdi
xor    %ecx,%ecx
mov    -0xa8(%rbp),%rdx
jmpq   19632 <png_do_compose+0xaf2>
movzbl (%rdx),%r8d
movzwl 0x2f2(%rsi),%edi
cmp    %di,%r8w
jne    19260 <png_do_compose+0x720>
movzbl 0x1(%rdx),%edi
movzwl 0x2f4(%rsi),%r8d
cmp    %r8w,%di
jne    19260 <png_do_compose+0x720>
movzbl 0x2(%rdx),%edi
movzwl 0x2f6(%rsi),%r8d
cmp    %r8w,%di
jne    19260 <png_do_compose+0x720>
movzbl 0x27e(%rsi),%edi
mov    %dil,(%rdx)
movzbl 0x280(%rsi),%edi
mov    %dil,0x1(%rdx)
movzbl 0x282(%rsi),%edi
mov    %dil,0x2(%rdx)
add    $0x1,%ecx
add    $0x3,%rdx
cmp    %ecx,%eax
ja     1920b <png_do_compose+0x6cb>
leaveq 
retq   
movzbl 0x1(%rdi),%r9d
shr    %cl,%r9d
movslq %r9d,%r9
mov    (%rsi,%r9,8),%r10
movzbl (%rdi),%r9d
movzwl (%r10,%r9,2),%r10d
mov    %r10,%r9
shr    $0x8,%r9d
mov    %r9b,(%rdi)
mov    %r10b,0x1(%rdi)
movzbl 0x3(%rdi),%r9d
shr    %cl,%r9d
movslq %r9d,%r9
mov    (%rsi,%r9,8),%r10
movzbl 0x2(%rdi),%r9d
movzwl (%r10,%r9,2),%r10d
mov    %r10,%r9
shr    $0x8,%r9d
mov    %r9b,0x2(%rdi)
mov    %r10b,0x3(%rdi)
movzbl 0x5(%rdi),%r9d
shr    %cl,%r9d
movslq %r9d,%r9
mov    (%rsi,%r9,8),%r10
movzbl 0x4(%rdi),%r9d
movzwl (%r10,%r9,2),%r9d
mov    %r9,%r10
shr    $0x8,%r10d
mov    %r10b,0x4(%rdi)
mov    %r9b,0x5(%rdi)
add    $0x1,%edx
add    $0x6,%rdi
cmp    %edx,%eax
ja     1963c <png_do_compose+0xafc>
mov    -0x40(%rbp),%r14
mov    -0x38(%rbp),%r13
mov    -0x48(%rbp),%r15
leaveq 
retq   
test   %r8,%r8
jne    196f9 <png_do_compose+0xbb9>
mov    -0xa0(%rbp),%r9
xor    %edx,%edx
mov    -0xa8(%rbp),%rsi
jmpq   18ef0 <png_do_compose+0x3b0>
movzbl 0x1(%rsi),%edi
test   %dil,%dil
je     18ede <png_do_compose+0x39e>
cmp    $0xfe,%dil
ja     18ee9 <png_do_compose+0x3a9>
mov    %rcx,%r8
sub    %di,%r8w
movzwl 0x284(%r9),%r10d
imul   %r10w,%r8w
movzbl (%rsi),%r10d
imul   %r10w,%di
lea    0x80(%r8,%rdi,1),%edi
movzwl %di,%r8d
mov    %r8,%rdi
shr    $0x8,%edi
add    %r8d,%edi
shr    $0x8,%edi
mov    %dil,(%rsi)
jmpq   18ee9 <png_do_compose+0x3a9>
mov    %r15,-0x68(%rbp)
mov    %r13,-0x58(%rbp)
mov    %r14,-0x60(%rbp)
mov    %rbx,-0x48(%rbp)
mov    %r12,-0x50(%rbp)
mov    $0xffff,%r11d
mov    -0x90(%rbp),%rcx
mov    -0xa0(%rbp),%r10
mov    -0x98(%rbp),%rbx
xor    %edx,%edx
mov    -0xa8(%rbp),%rdi
jmpq   1974f <png_do_compose+0xc0f>
test   %r8,%r8
jne    1976d <png_do_compose+0xc2d>
mov    -0xa0(%rbp),%r9
xor    %edx,%edx
mov    -0xa8(%rbp),%rsi
jmpq   18fdd <png_do_compose+0x49d>
movzbl 0x3(%rsi),%r8d
test   %r8b,%r8b
je     18fb3 <png_do_compose+0x473>
cmp    $0xfe,%r8b
ja     18fd6 <png_do_compose+0x496>
mov    %rcx,%r10
sub    %r8w,%r10w
movzwl 0x27e(%r9),%edi
imul   %r10w,%di
movzbl (%rsi),%r11d
imul   %r8w,%r11w
lea    0x80(%rdi,%r11,1),%edi
movzwl %di,%r11d
mov    %r11,%rdi
shr    $0x8,%edi
add    %r11d,%edi
shr    $0x8,%edi
mov    %dil,(%rsi)
movzwl 0x280(%r9),%edi
imul   %r10w,%di
movzbl 0x1(%rsi),%r11d
imul   %r8w,%r11w
lea    0x80(%rdi,%r11,1),%edi
movzwl %di,%edi
mov    %rdi,%r11
shr    $0x8,%r11d
add    %r11d,%edi
shr    $0x8,%edi
mov    %dil,0x1(%rsi)
movzwl 0x282(%r9),%edi
imul   %r10w,%di
movzbl 0x2(%rsi),%r10d
imul   %r10w,%r8w
lea    0x80(%rdi,%r8,1),%edi
movzwl %di,%r8d
mov    %r8,%rdi
shr    $0x8,%edi
add    %r8d,%edi
shr    $0x8,%edi
mov    %dil,0x2(%rsi)
jmpq   18fd6 <png_do_compose+0x496>
mov    %r15,-0xb0(%rbp)
mov    %r13,-0x80(%rbp)
mov    %r14,-0x88(%rbp)
mov    %rbx,-0x70(%rbp)
mov    %r12,-0x78(%rbp)
mov    $0xffff,%edx
mov    -0x90(%rbp),%rcx
mov    -0xa0(%rbp),%rdi
mov    -0x98(%rbp),%r12
xor    %r8d,%r8d
mov    -0xa8(%rbp),%rbx
mov    %r8,%r11
jmpq   19829 <png_do_compose+0xce9>
add    $0x1,%rdx
mov    %r8,%rcx
add    $0x1,%esi
cmp    %eax,%esi
jb     1984e <png_do_compose+0xd0e>
mov    -0x10(%rbp),%r14
mov    -0x18(%rbp),%r15
leaveq 
retq   
mov    %r15,-0x18(%rbp)
mov    %r13,-0x8(%rbp)
mov    %r14,-0x10(%rbp)
mov    -0xa0(%rbp),%r10
xor    %r9d,%r9d
mov    -0xa8(%rbp),%rdi
mov    %rsi,%rcx
jmpq   198ac <png_do_compose+0xd6c>
add    $0x1,%rdi
mov    %rsi,%rcx
add    $0x1,%r8d
cmp    %r8d,%eax
ja     198c3 <png_do_compose+0xd83>
mov    -0x20(%rbp),%r14
mov    -0x28(%rbp),%r15
leaveq 
retq   
mov    %r15,-0x30(%rbp)
mov    %r13,-0x20(%rbp)
mov    %r14,-0x28(%rbp)
mov    -0xa0(%rbp),%r10
xor    %r9d,%r9d
mov    -0xa8(%rbp),%rdi
mov    %rsi,%rcx
jmpq   19921 <png_do_compose+0xde1>
add    $0x1,%rdi
mov    %rsi,%rcx
add    $0x1,%r8d
cmp    %r8d,%eax
ja     19938 <png_do_compose+0xdf8>
mov    -0x30(%rbp),%r14
mov    -0x38(%rbp),%r15
leaveq 
retq   
mov    -0xa0(%rbp),%rdi
xor    %edx,%edx
mov    -0xa8(%rbp),%rcx
jmpq   1999c <png_do_compose+0xe5c>
movzbl (%rdx),%r8d
movzwl 0x2f8(%rdi),%esi
cmp    %si,%r8w
jne    195a0 <png_do_compose+0xa60>
movzbl 0x284(%rdi),%esi
mov    %sil,(%rdx)
add    $0x1,%ecx
add    $0x1,%rdx
cmp    %ecx,%eax
ja     19585 <png_do_compose+0xa45>
leaveq 
retq   
mov    %r15,-0x40(%rbp)
mov    -0xa0(%rbp),%r8
xor    %edx,%edx
mov    -0xa8(%rbp),%rdi
jmpq   199c8 <png_do_compose+0xe88>
movzbl 0x1(%rdx),%r8d
movzbl (%rdx),%esi
shl    $0x8,%esi
add    %esi,%r8d
movzwl 0x2f8(%rdi),%esi
cmp    %si,%r8w
jne    195f9 <png_do_compose+0xab9>
movzwl 0x284(%rdi),%esi
shr    $0x8,%esi
mov    %sil,(%rdx)
movzbl 0x284(%rdi),%esi
mov    %sil,0x1(%rdx)
add    $0x1,%ecx
add    $0x2,%rdx
cmp    %ecx,%eax
ja     195c6 <png_do_compose+0xa86>
leaveq 
retq   
movzbl (%rdx),%esi
movzbl (%r8,%rsi,1),%esi
mov    %sil,(%rdx)
movzbl 0x1(%rdx),%esi
movzbl (%r8,%rsi,1),%esi
mov    %sil,0x1(%rdx)
movzbl 0x2(%rdx),%esi
movzbl (%r8,%rsi,1),%esi
mov    %sil,0x2(%rdx)
add    $0x1,%ecx
add    $0x3,%rdx
cmp    %ecx,%eax
ja     199d6 <png_do_compose+0xe96>
leaveq 
retq   
movzbl 0x2(%rdi),%r10d
movzbl 0x3(%rdi),%r13d
movzbl 0x4(%rdi),%r11d
movzbl 0x5(%rdi),%r15d
movzbl 0x1(%rdi),%r14d
movzbl (%rdi),%r9d
shl    $0x8,%r9d
add    %r9d,%r14d
movzwl 0x2f2(%r8),%r9d
cmp    %r9w,%r14w
jne    1926d <png_do_compose+0x72d>
shl    $0x8,%r10d
add    %r13d,%r10d
movzwl 0x2f4(%r8),%r9d
cmp    %r9w,%r10w
jne    1926d <png_do_compose+0x72d>
shl    $0x8,%r11d
lea    (%r15,%r11,1),%r10d
movzwl 0x2f6(%r8),%r9d
cmp    %r9w,%r10w
jne    1926d <png_do_compose+0x72d>
movzwl 0x27e(%r8),%r9d
shr    $0x8,%r9d
mov    %r9b,(%rdi)
movzbl 0x27e(%r8),%r9d
mov    %r9b,0x1(%rdi)
movzwl 0x280(%r8),%r9d
shr    $0x8,%r9d
mov    %r9b,0x2(%rdi)
movzbl 0x280(%r8),%r9d
mov    %r9b,0x3(%rdi)
movzwl 0x282(%r8),%r9d
shr    $0x8,%r9d
mov    %r9b,0x4(%rdi)
movzbl 0x282(%r8),%r9d
jmpq   192df <png_do_compose+0x79f>
mov    %r15,-0x60(%rbp)
mov    %r13,-0x50(%rbp)
mov    %r14,-0x58(%rbp)
mov    -0xa0(%rbp),%r14
mov    -0x98(%rbp),%r13
xor    %esi,%esi
mov    -0xa8(%rbp),%rdi
jmpq   19a4d <png_do_compose+0xf0d>
movzbl 0x1(%rdi),%r12d
shr    %cl,%r12d
movslq %r12d,%r12
mov    (%rsi,%r12,8),%r13
movzbl (%rdi),%r12d
movzwl 0x0(%r13,%r12,2),%r13d
mov    %r13,%r12
shr    $0x8,%r12d
mov    %r12b,(%rdi)
mov    %r13b,0x1(%rdi)
add    $0x1,%edx
add    $0x4,%rdi
cmp    %edx,%eax
ja     19a63 <png_do_compose+0xf23>
mov    -0x50(%rbp),%r12
mov    -0x48(%rbp),%rbx
mov    -0x60(%rbp),%r14
mov    -0x58(%rbp),%r13
mov    -0x68(%rbp),%r15
leaveq 
retq   
mov    %r15,-0x88(%rbp)
mov    %r13,-0x78(%rbp)
mov    %r14,-0x80(%rbp)
mov    %rbx,-0x68(%rbp)
mov    %r12,-0x70(%rbp)
mov    -0xa0(%rbp),%r15
mov    -0x98(%rbp),%r14
mov    $0x1,%edx
xor    %r13d,%r13d
mov    -0xa8(%rbp),%rsi
mov    %r13,%rdi
jmpq   19b35 <png_do_compose+0xff5>
movzbl 0x1(%rbx),%r13d
shr    %cl,%r13d
movslq %r13d,%r13
mov    (%rsi,%r13,8),%r14
movzbl (%rbx),%r13d
movzwl (%r14,%r13,2),%r14d
mov    %r14,%r13
shr    $0x8,%r13d
mov    %r13b,(%rbx)
mov    %r14b,0x1(%rbx)
movzbl 0x3(%rbx),%r13d
shr    %cl,%r13d
movslq %r13d,%r13
mov    (%rsi,%r13,8),%r13
movzbl 0x2(%rbx),%r14d
movzwl 0x0(%r13,%r14,2),%r13d
mov    %r13,%r14
shr    $0x8,%r14d
mov    %r14b,0x2(%rbx)
mov    %r13b,0x3(%rbx)
movzbl 0x5(%rbx),%r13d
shr    %cl,%r13d
movslq %r13d,%r13
mov    (%rsi,%r13,8),%r13
movzbl 0x4(%rbx),%r14d
movzwl 0x0(%r13,%r14,2),%r14d
mov    %r14,%r13
shr    $0x8,%r13d
mov    %r13b,0x4(%rbx)
mov    %r14b,0x5(%rbx)
add    $0x1,%r11d
add    $0x8,%rbx
cmp    %r11d,%eax
ja     19b56 <png_do_compose+0x1016>
mov    -0x78(%rbp),%r12
mov    -0x70(%rbp),%rbx
mov    -0x88(%rbp),%r14
mov    -0x80(%rbp),%r13
mov    -0xb0(%rbp),%r15
leaveq 
retq   
movzbl (%rdx),%r10d
mov    %r10,%r11
shr    %cl,%r11d
and    $0x1,%r11w
movzwl 0x2f8(%r9),%r14d
cmp    %r14w,%r11w
jne    19891 <png_do_compose+0xd51>
movzbl 0x284(%r9),%r11d
shl    %cl,%r11d
mov    %rcx,%r15
mov    %r8,%rcx
sub    %r15d,%ecx
mov    %rdi,%r14
shr    %cl,%r14d
and    %r14b,%r10b
or     %r10b,%r11b
mov    %r11b,(%rdx)
mov    %r15,%rcx
test   %ecx,%ecx
je     194ce <png_do_compose+0x98e>
add    $0xffffffff,%ecx
jmpq   194d5 <png_do_compose+0x995>
add    $0x1,%rdi
mov    %rsi,%rcx
add    $0x1,%r9d
cmp    %r9d,%eax
ja     19bdf <png_do_compose+0x109f>
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
mov    -0x18(%rbp),%r15
leaveq 
retq   
movzbl (%rdi),%r10d
mov    %r10,%r11
shr    %cl,%r11d
and    $0x3,%r11w
movzwl 0x2f8(%r9),%r14d
cmp    %r14w,%r11w
jne    19906 <png_do_compose+0xdc6>
movzbl 0x284(%r9),%r11d
shl    %cl,%r11d
mov    %rcx,%r15
mov    %rsi,%rcx
sub    %r15d,%ecx
mov    %rdx,%r14
shr    %cl,%r14d
and    %r14b,%r10b
or     %r10b,%r11b
mov    %r11b,(%rdi)
mov    %r15,%rcx
test   %ecx,%ecx
je     1950f <png_do_compose+0x9cf>
add    $0xfffffffe,%ecx
jmpq   19516 <png_do_compose+0x9d6>
add    $0x1,%rdi
mov    %rsi,%rcx
add    $0x1,%r9d
cmp    %r9d,%eax
ja     19c41 <png_do_compose+0x1101>
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r13
mov    -0x30(%rbp),%r15
leaveq 
retq   
movzbl (%rdi),%r10d
mov    %r10,%r11
shr    %cl,%r11d
and    $0xf,%r11w
movzwl 0x2f8(%r9),%r14d
cmp    %r14w,%r11w
jne    1997b <png_do_compose+0xe3b>
movzbl 0x284(%r9),%r11d
shl    %cl,%r11d
mov    %rcx,%r15
mov    %rsi,%rcx
sub    %r15d,%ecx
mov    %rdx,%r14
shr    %cl,%r14d
and    %r14b,%r10b
or     %r10b,%r11b
mov    %r11b,(%rdi)
mov    %r15,%rcx
test   %ecx,%ecx
je     19552 <png_do_compose+0xa12>
add    $0xfffffffc,%ecx
jmpq   19559 <png_do_compose+0xa19>
movzbl 0x284(%rdi),%esi
mov    %sil,(%rcx)
add    $0x1,%edx
add    $0x1,%rcx
cmp    %edx,%eax
ja     19c9f <png_do_compose+0x115f>
leaveq 
retq   
movzwl 0x284(%r8),%r9d
shr    $0x8,%r9d
mov    %r9b,(%rdi)
movzbl 0x284(%r8),%r9d
mov    %r9b,0x1(%rdi)
add    $0x1,%edx
add    $0x2,%rdi
cmp    %edx,%eax
ja     19cbe <png_do_compose+0x117e>
mov    -0x40(%rbp),%r15
leaveq 
retq   
movzbl (%rdx),%r9d
movzwl 0x2f2(%rdi),%esi
cmp    %si,%r9w
jne    19606 <png_do_compose+0xac6>
movzbl 0x1(%rdx),%r9d
movzwl 0x2f4(%rdi),%esi
cmp    %si,%r9w
jne    19606 <png_do_compose+0xac6>
movzbl 0x2(%rdx),%esi
movzwl 0x2f6(%rdi),%r9d
cmp    %r9w,%si
jne    19606 <png_do_compose+0xac6>
movzbl 0x27e(%rdi),%esi
mov    %sil,(%rdx)
movzbl 0x280(%rdi),%esi
mov    %sil,0x1(%rdx)
movzbl 0x282(%rdi),%esi
mov    %sil,0x2(%rdx)
jmpq   1962b <png_do_compose+0xaeb>
movzbl (%rdi),%edx
movzbl (%r8,%rdx,1),%edx
mov    %dl,(%rdi)
add    $0x1,%esi
add    $0x2,%rdi
cmp    %esi,%eax
ja     19d02 <png_do_compose+0x11c2>
mov    -0x58(%rbp),%r14
mov    -0x50(%rbp),%r13
mov    -0x60(%rbp),%r15
leaveq 
retq   
movzbl 0x3(%rdi),%r14d
movzbl 0x2(%rdi),%r12d
shl    $0x8,%r12d
lea    (%r14,%r12,1),%r13d
cmp    $0xffff,%r13w
je     19721 <png_do_compose+0xbe1>
cmp    %r12w,%r14w
je     19d67 <png_do_compose+0x1227>
movzwl %r13w,%r14d
mov    %r11,%r13
sub    %r14d,%r13d
movzwl 0x28e(%r10),%r12d
imul   %r12d,%r13d
movzbl 0x1(%rdi),%r12d
shr    %cl,%r12d
movslq %r12d,%r12
mov    (%r8,%r12,8),%r15
movzbl (%rdi),%r12d
movzwl (%r15,%r12,2),%r12d
imul   %r12d,%r14d
add    %r14d,%r13d
lea    0x8000(%r13),%r12d
shr    $0x10,%r12d
lea    0x8000(%r12,%r13,1),%r12d
shr    $0x10,%r12d
test   %ebx,%ebx
jg     19af8 <png_do_compose+0xfb8>
movzwl %r12w,%r13d
movzbl %r13b,%r12d
shr    %cl,%r12d
movslq %r12d,%r12
mov    (%r9,%r12,8),%r12
shr    $0x8,%r13d
movslq %r13d,%r13
movzwl (%r12,%r13,2),%r12d
movzwl %r12w,%r13d
shr    $0x8,%r13d
mov    %r13b,(%rdi)
mov    %r12b,0x1(%rdi)
jmpq   19748 <png_do_compose+0xc08>
movzbl (%rsi),%ebx
movzbl (%r8,%rbx,1),%ebx
mov    %bl,(%rsi)
movzbl 0x1(%rsi),%ebx
movzbl (%r8,%rbx,1),%ebx
mov    %bl,0x1(%rsi)
movzbl 0x2(%rsi),%ebx
movzbl (%r8,%rbx,1),%ebx
mov    %bl,0x2(%rsi)
add    $0x1,%edi
add    $0x4,%rsi
cmp    %edi,%eax
ja     19d87 <png_do_compose+0x1247>
mov    -0x70(%rbp),%r12
mov    -0x68(%rbp),%rbx
mov    -0x80(%rbp),%r14
mov    -0x78(%rbp),%r13
mov    -0x88(%rbp),%r15
leaveq 
retq   
movzbl 0x7(%rbx),%r15d
movzbl 0x6(%rbx),%r13d
shl    $0x8,%r13d
lea    (%r15,%r13,1),%r14d
cmp    $0xffff,%r14w
je     197a9 <png_do_compose+0xc69>
cmp    %r13w,%r15w
je     19de6 <png_do_compose+0x12a6>
movzwl %r14w,%r13d
sub    %r13d,%edx
movzwl 0x288(%rdi),%r14d
mov    %rdx,%r15
imul   %r14d,%r15d
movzbl 0x1(%rbx),%r14d
shr    %cl,%r14d
movslq %r14d,%r14
mov    (%r10,%r14,8),%r14
mov    %rsi,-0xa8(%rbp)
movzbl (%rbx),%esi
movzwl (%r14,%rsi,2),%esi
imul   %r13d,%esi
lea    (%r15,%rsi,1),%r14d
lea    0x8000(%r14),%esi
shr    $0x10,%esi
lea    0x8000(%rsi,%r14,1),%esi
shr    $0x10,%esi
test   %r12d,%r12d
je     19e3e <png_do_compose+0x12fe>
mov    %r8,%r12
jmpq   19e60 <png_do_compose+0x1320>
movzbl (%rdi),%r13d
mov    %r13,%r11
shr    %cl,%r11d
and    $0x3,%r11w
movzwl 0x2f8(%r10),%r14d
cmp    %r14w,%r11w
je     19ec1 <png_do_compose+0x1381>
mov    %r13,%r11
shr    %cl,%r11d
and    $0x3,%r11d
mov    %r11,%r14
shl    $0x4,%r14d
add    %r14d,%r11d
lea    (%r11,%r11,4),%r11d
mov    %r11d,%r11d
movzbl (%r11,%r8,1),%r11d
shr    $0x6,%r11d
shl    %cl,%r11d
mov    %rcx,%r14
mov    %rsi,%rcx
sub    %r14d,%ecx
mov    %rdx,%r15
shr    %cl,%r15d
and    %r15b,%r13b
or     %r13b,%r11b
jmpq   19ee1 <png_do_compose+0x13a1>
movzbl (%rdi),%r13d
mov    %r13,%r11
shr    %cl,%r11d
and    $0xf,%r11w
movzwl 0x2f8(%r10),%r14d
cmp    %r14w,%r11w
je     19ef6 <png_do_compose+0x13b6>
mov    %r13,%r11
shr    %cl,%r11d
and    $0xf,%r11d
mov    %r11,%r14
shl    $0x4,%r14d
add    %r14d,%r11d
mov    %r11d,%r11d
movzbl (%r8,%r11,1),%r11d
shr    $0x4,%r11d
shl    %cl,%r11d
mov    %rcx,%r14
mov    %rsi,%rcx
sub    %r14d,%ecx
mov    %rdx,%r15
shr    %cl,%r15d
and    %r15b,%r13b
or     %r13b,%r11b
jmpq   19f16 <png_do_compose+0x13d6>
movzbl (%rcx),%esi
movzwl 0x2f8(%rdi),%r9d
cmp    %r9w,%si
je     1998b <png_do_compose+0xe4b>
movzbl (%r8,%rsi,1),%esi
jmpq   19992 <png_do_compose+0xe52>
movzbl 0x1(%rdi),%r9d
movzbl (%rdi),%r10d
mov    %r10,%r11
shl    $0x8,%r11d
lea    (%r9,%r11,1),%r15d
movzwl 0x2f8(%r8),%r11d
cmp    %r11w,%r15w
je     199a6 <png_do_compose+0xe66>
shr    %cl,%r9d
movslq %r9d,%r9
mov    (%rsi,%r9,8),%r9
movzwl (%r9,%r10,2),%r9d
mov    %r9,%r10
shr    $0x8,%r10d
mov    %r10b,(%rdi)
jmpq   199bd <png_do_compose+0xe7d>
movzbl 0x1(%rdi),%edx
cmp    $0xff,%dl
je     19a3c <png_do_compose+0xefc>
test   %dl,%dl
je     19f2b <png_do_compose+0x13eb>
mov    %rcx,%r9
sub    %dx,%r9w
movzwl 0x28e(%r14),%r15d
imul   %r15w,%r9w
movzbl (%rdi),%r15d
movzbl (%r11,%r15,1),%r15d
imul   %r15w,%dx
lea    0x80(%r9,%rdx,1),%edx
movzwl %dx,%edx
mov    %rdx,%r9
shr    $0x8,%r9d
add    %r9d,%edx
shr    $0x8,%edx
test   %r13d,%r13d
jne    19a44 <png_do_compose+0xf04>
movzbl %dl,%edx
movzbl (%r10,%rdx,1),%edx
jmpq   19a44 <png_do_compose+0xf04>
movzwl 0x284(%r10),%r12d
shr    $0x8,%r12d
mov    %r12b,(%rdi)
movzbl 0x284(%r10),%r12d
mov    %r12b,0x1(%rdi)
jmpq   19748 <png_do_compose+0xc08>
movzbl 0x3(%rsi),%r9d
cmp    $0xff,%r9b
je     19b0c <png_do_compose+0xfcc>
test   %r9b,%r9b
je     19f38 <png_do_compose+0x13f8>
sub    %r9w,%cx
movzwl 0x288(%r15),%ebx
imul   %cx,%bx
movzbl (%rsi),%r12d
movzbl (%r11,%r12,1),%r12d
imul   %r9w,%r12w
lea    0x80(%rbx,%r12,1),%ebx
movzwl %bx,%r12d
mov    %r12,%rbx
shr    $0x8,%ebx
add    %r12d,%ebx
shr    $0x8,%ebx
test   %r14d,%r14d
je     19f5d <png_do_compose+0x141d>
mov    %r13,%rdx
jmpq   19f65 <png_do_compose+0x1425>
movzwl 0x27e(%rdi),%r13d
shr    $0x8,%r13d
mov    %r13b,(%rbx)
movzbl 0x27e(%rdi),%r13d
mov    %r13b,0x1(%rbx)
movzwl 0x280(%rdi),%r13d
shr    $0x8,%r13d
mov    %r13b,0x2(%rbx)
movzbl 0x280(%rdi),%r13d
mov    %r13b,0x3(%rbx)
movzwl 0x282(%rdi),%r13d
shr    $0x8,%r13d
mov    %r13b,0x4(%rbx)
movzbl 0x282(%rdi),%r13d
mov    %r13b,0x5(%rbx)
jmpq   19821 <png_do_compose+0xce1>
movzwl %si,%esi
movzbl %sil,%r12d
shr    %cl,%r12d
movslq %r12d,%r12
mov    (%r9,%r12,8),%r12
shr    $0x8,%esi
movslq %esi,%rsi
movzwl (%r12,%rsi,2),%esi
mov    $0x1,%r12d
movzwl %si,%r14d
shr    $0x8,%r14d
mov    %r14b,(%rbx)
mov    %sil,0x1(%rbx)
movzwl 0x28a(%rdi),%esi
mov    %rdx,%r14
imul   %esi,%r14d
movzbl 0x3(%rbx),%esi
shr    %cl,%esi
movslq %esi,%rsi
mov    (%r10,%rsi,8),%rsi
movzbl 0x2(%rbx),%r15d
movzwl (%rsi,%r15,2),%esi
imul   %r13d,%esi
add    %esi,%r14d
lea    0x8000(%r14),%esi
shr    $0x10,%esi
lea    0x8000(%rsi,%r14,1),%esi
shr    $0x10,%esi
test   %r12,%r12
jne    19fab <png_do_compose+0x146b>
mov    %r8,%r12
jmpq   19fce <png_do_compose+0x148e>
movzbl 0x284(%r10),%r11d
shl    %cl,%r11d
mov    %rcx,%r14
mov    %rsi,%rcx
sub    %r14d,%ecx
mov    %rdx,%r15
shr    %cl,%r15d
and    %r15b,%r13b
or     %r13b,%r11b
mov    %r11b,(%rdi)
test   %r14d,%r14d
je     198a1 <png_do_compose+0xd61>
lea    -0x2(%r14),%ecx
jmpq   198a8 <png_do_compose+0xd68>
movzbl 0x284(%r10),%r11d
shl    %cl,%r11d
mov    %rcx,%r14
mov    %rsi,%rcx
sub    %r14d,%ecx
mov    %rdx,%r15
shr    %cl,%r15d
and    %r15b,%r13b
or     %r13b,%r11b
mov    %r11b,(%rdi)
test   %r14d,%r14d
je     19916 <png_do_compose+0xdd6>
lea    -0x4(%r14),%ecx
jmpq   1991d <png_do_compose+0xddd>
movzbl 0x284(%r14),%edx
jmpq   19a44 <png_do_compose+0xf04>
movzbl 0x27e(%r15),%ebx
mov    %bl,(%rsi)
movzbl 0x280(%r15),%ebx
mov    %bl,0x1(%rsi)
movzbl 0x282(%r15),%ebx
mov    %bl,0x2(%rsi)
jmpq   19b2e <png_do_compose+0xfee>
movzbl %bl,%ebx
movzbl (%r10,%rbx,1),%ebx
mov    %bl,(%rsi)
movzwl 0x28a(%r15),%ebx
imul   %cx,%bx
movzbl 0x1(%rsi),%r12d
movzbl (%r11,%r12,1),%r12d
imul   %r9w,%r12w
lea    0x80(%rbx,%r12,1),%ebx
movzwl %bx,%ebx
mov    %rbx,%r12
shr    $0x8,%r12d
add    %r12d,%ebx
shr    $0x8,%ebx
test   %rdx,%rdx
jne    1a05e <png_do_compose+0x151e>
mov    %r13,%r12
jmpq   1a06c <png_do_compose+0x152c>
movzwl %si,%r12d
movzbl %r12b,%esi
shr    %cl,%esi
movslq %esi,%rsi
mov    (%r9,%rsi,8),%r14
shr    $0x8,%r12d
movslq %r12d,%rsi
movzwl (%r14,%rsi,2),%esi
mov    $0x1,%r12d
movzwl %si,%r14d
shr    $0x8,%r14d
mov    %r14b,0x2(%rbx)
mov    %sil,0x3(%rbx)
movzwl 0x28c(%rdi),%esi
imul   %esi,%edx
movzbl 0x5(%rbx),%esi
shr    %cl,%esi
movslq %esi,%rsi
mov    (%r10,%rsi,8),%r14
movzbl 0x4(%rbx),%esi
movzwl (%r14,%rsi,2),%esi
imul   %esi,%r13d
lea    (%rdx,%r13,1),%esi
lea    0x8000(%rsi),%edx
shr    $0x10,%edx
lea    0x8000(%rdx,%rsi,1),%edx
shr    $0x10,%edx
test   %r12,%r12
je     1a039 <png_do_compose+0x14f9>
movzwl %dx,%esi
movzbl %sil,%edx
shr    %cl,%edx
movslq %edx,%rdx
mov    (%r9,%rdx,8),%r12
shr    $0x8,%esi
movslq %esi,%rdx
movzwl (%r12,%rdx,2),%edx
movzwl %dx,%esi
shr    $0x8,%esi
mov    %sil,0x4(%rbx)
mov    %dl,0x5(%rbx)
mov    -0xa8(%rbp),%rsi
mov    $0xffff,%edx
mov    -0x98(%rbp),%r12
jmpq   19821 <png_do_compose+0xce1>
movzbl %bl,%edx
movzbl (%r10,%rdx,1),%ebx
mov    $0x1,%r12d
mov    %bl,0x1(%rsi)
movzwl 0x28c(%r15),%edx
imul   %cx,%dx
movzbl 0x2(%rsi),%ecx
movzbl (%r11,%rcx,1),%ecx
imul   %cx,%r9w
lea    0x80(%rdx,%r9,1),%ecx
movzwl %cx,%edx
mov    %rdx,%rcx
shr    $0x8,%ecx
add    %edx,%ecx
shr    $0x8,%ecx
test   %r12,%r12
je     1a0ac <png_do_compose+0x156c>
movzbl %cl,%ecx
movzbl (%r10,%rcx,1),%ecx
mov    %cl,0x2(%rsi)
mov    $0xff,%ecx
mov    $0x1,%edx
jmpq   19b2e <png_do_compose+0xfee>
xchg   %ax,%ax

000000000001a0c0 <png_do_gamma>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    0x2a8(%rdx),%r9
mov    0x2b0(%rdx),%r8
mov    0x2a0(%rdx),%ecx
mov    (%rdi),%edx
movzbl 0x11(%rdi),%r10d
cmp    $0x8,%r10b
jbe    1a0f1 <png_do_gamma+0x31>
cmp    $0x10,%r10b
je     1a111 <png_do_gamma+0x51>
leaveq 
retq   
test   %r9,%r9
je     1a0e9 <png_do_gamma+0x29>
xor    %eax,%eax
movzbl 0x10(%rdi),%r11d
cmp    $0x3,%r11b
jbe    1a118 <png_do_gamma+0x58>
cmp    $0x4,%r11b
je     1a125 <png_do_gamma+0x65>
cmp    $0x6,%r11b
je     1a12d <png_do_gamma+0x6d>
leaveq 
retq   
test   %r8,%r8
jne    1a0f6 <png_do_gamma+0x36>
leaveq 
retq   
test   %r11b,%r11b
je     1a13c <png_do_gamma+0x7c>
cmp    $0x2,%r11b
je     1a15b <png_do_gamma+0x9b>
leaveq 
retq   
cmp    $0x8,%r10b
je     1a1aa <png_do_gamma+0xea>
jmp    1a193 <png_do_gamma+0xd3>
cmp    $0x8,%r10b
je     1a250 <png_do_gamma+0x190>
jmpq   1a221 <png_do_gamma+0x161>
cmp    $0x2,%r10b
jne    1a31f <png_do_gamma+0x25f>
mov    %rdi,-0x20(%rbp)
mov    %rsi,-0x18(%rbp)
mov    %rcx,-0x10(%rbp)
mov    %r8,-0x8(%rbp)
jmpq   1a305 <png_do_gamma+0x245>
cmp    $0x8,%r10b
je     1a3e3 <png_do_gamma+0x323>
jmpq   1a3b4 <png_do_gamma+0x2f4>
movzbl 0x1(%rsi),%edi
shr    %cl,%edi
movslq %edi,%rdi
mov    (%r8,%rdi,8),%r9
movzbl (%rsi),%edi
movzwl (%r9,%rdi,2),%r9d
mov    %r9,%rdi
shr    $0x8,%edi
mov    %dil,(%rsi)
mov    %r9b,0x1(%rsi)
add    $0x1,%eax
add    $0x4,%rsi
cmp    %eax,%edx
ja     1a16a <png_do_gamma+0xaa>
leaveq 
retq   
movzbl (%rsi),%ecx
movzbl (%r9,%rcx,1),%ecx
mov    %cl,(%rsi)
add    $0x1,%eax
add    $0x2,%rsi
cmp    %eax,%edx
ja     1a199 <png_do_gamma+0xd9>
leaveq 
retq   
movzbl 0x1(%rsi),%edi
shr    %cl,%edi
movslq %edi,%rdi
mov    (%r8,%rdi,8),%r9
movzbl (%rsi),%edi
movzwl (%r9,%rdi,2),%r9d
mov    %r9,%rdi
shr    $0x8,%edi
mov    %dil,(%rsi)
mov    %r9b,0x1(%rsi)
movzbl 0x3(%rsi),%edi
shr    %cl,%edi
movslq %edi,%rdi
mov    (%r8,%rdi,8),%r9
movzbl 0x2(%rsi),%edi
movzwl (%r9,%rdi,2),%r9d
mov    %r9,%rdi
shr    $0x8,%edi
mov    %dil,0x2(%rsi)
mov    %r9b,0x3(%rsi)
movzbl 0x5(%rsi),%edi
shr    %cl,%edi
movslq %edi,%rdi
mov    (%r8,%rdi,8),%r9
movzbl 0x4(%rsi),%edi
movzwl (%r9,%rdi,2),%r9d
mov    %r9,%rdi
shr    $0x8,%edi
mov    %dil,0x4(%rsi)
mov    %r9b,0x5(%rsi)
add    $0x1,%eax
add    $0x8,%rsi
cmp    %eax,%edx
ja     1a1b0 <png_do_gamma+0xf0>
leaveq 
retq   
movzbl (%rsi),%ecx
movzbl (%r9,%rcx,1),%ecx
mov    %cl,(%rsi)
movzbl 0x1(%rsi),%ecx
movzbl (%r9,%rcx,1),%ecx
mov    %cl,0x1(%rsi)
movzbl 0x2(%rsi),%ecx
movzbl (%r9,%rcx,1),%ecx
mov    %cl,0x2(%rsi)
add    $0x1,%eax
add    $0x4,%rsi
cmp    %eax,%edx
ja     1a227 <png_do_gamma+0x167>
leaveq 
retq   
movzbl (%rsi),%edi
mov    %rdi,%rcx
and    $0xc0,%ecx
mov    %rcx,%r8
shr    $0x2,%r8d
add    %ecx,%r8d
shr    $0x4,%ecx
add    %ecx,%r8d
mov    %rdi,%rcx
shr    $0x6,%ecx
add    %r8d,%ecx
movslq %ecx,%rcx
movzbl (%r9,%rcx,1),%r8d
and    $0xc0,%r8d
mov    %rdi,%rcx
and    $0x30,%ecx
lea    (%rcx,%rcx,4),%r10d
mov    %rcx,%r11
shr    $0x2,%r11d
add    %r11d,%r10d
shr    $0x4,%ecx
add    %r10d,%ecx
movslq %ecx,%rcx
movzbl (%r9,%rcx,1),%ecx
and    $0xc0,%ecx
shr    $0x2,%ecx
add    %ecx,%r8d
mov    %rdi,%rcx
and    $0xc,%ecx
lea    (%rcx,%rcx,4),%r10d
lea    (%rcx,%r10,4),%r10d
shr    $0x2,%ecx
add    %r10d,%ecx
movslq %ecx,%rcx
movzbl (%r9,%rcx,1),%ecx
and    $0xc0,%ecx
shr    $0x4,%ecx
add    %ecx,%r8d
and    $0x3,%edi
mov    %rdi,%rcx
shl    $0x4,%ecx
add    %edi,%ecx
lea    (%rcx,%rcx,4),%ecx
movslq %ecx,%rcx
movzbl (%r9,%rcx,1),%ecx
shr    $0x6,%ecx
add    %r8d,%ecx
mov    %cl,(%rsi)
add    $0x1,%rsi
add    $0x4,%eax
cmp    %eax,%edx
ja     1a256 <png_do_gamma+0x196>
mov    -0x8(%rbp),%r8
mov    -0x10(%rbp),%rcx
mov    -0x18(%rbp),%rsi
xor    %eax,%eax
mov    -0x20(%rbp),%rdi
movzbl 0x11(%rdi),%edi
cmp    $0x4,%dil
je     1a42d <png_do_gamma+0x36d>
cmp    $0x8,%dil
je     1a444 <png_do_gamma+0x384>
cmp    $0x10,%dil
je     1a473 <png_do_gamma+0x3b3>
leaveq 
retq   
movzbl 0x1(%rsi),%edi
shr    %cl,%edi
movslq %edi,%rdi
mov    (%r8,%rdi,8),%r9
movzbl (%rsi),%edi
movzwl (%r9,%rdi,2),%r9d
mov    %r9,%rdi
shr    $0x8,%edi
mov    %dil,(%rsi)
mov    %r9b,0x1(%rsi)
movzbl 0x3(%rsi),%edi
shr    %cl,%edi
movslq %edi,%rdi
mov    (%r8,%rdi,8),%r9
movzbl 0x2(%rsi),%edi
movzwl (%r9,%rdi,2),%r9d
mov    %r9,%rdi
shr    $0x8,%edi
mov    %dil,0x2(%rsi)
mov    %r9b,0x3(%rsi)
movzbl 0x5(%rsi),%edi
shr    %cl,%edi
movslq %edi,%rdi
mov    (%r8,%rdi,8),%r9
movzbl 0x4(%rsi),%edi
movzwl (%r9,%rdi,2),%r9d
mov    %r9,%rdi
shr    $0x8,%edi
mov    %dil,0x4(%rsi)
mov    %r9b,0x5(%rsi)
add    $0x1,%eax
add    $0x6,%rsi
cmp    %eax,%edx
ja     1a343 <png_do_gamma+0x283>
leaveq 
retq   
movzbl (%rsi),%ecx
movzbl (%r9,%rcx,1),%ecx
mov    %cl,(%rsi)
movzbl 0x1(%rsi),%ecx
movzbl (%r9,%rcx,1),%ecx
mov    %cl,0x1(%rsi)
movzbl 0x2(%rsi),%ecx
movzbl (%r9,%rcx,1),%ecx
mov    %cl,0x2(%rsi)
add    $0x1,%eax
add    $0x3,%rsi
cmp    %edx,%eax
jb     1a3ba <png_do_gamma+0x2fa>
leaveq 
retq   
movzbl (%rsi),%ecx
mov    %rcx,%r8
and    $0xf,%r8d
mov    %r8,%rdi
shl    $0x4,%edi
add    %r8d,%edi
movslq %edi,%rdi
movzbl (%r9,%rdi,1),%edi
shr    $0x4,%edi
mov    %rcx,%r8
shr    $0x4,%r8d
and    $0xf0,%ecx
add    %r8d,%ecx
movslq %ecx,%rcx
movzbl (%r9,%rcx,1),%ecx
and    $0xf0,%cl
add    %edi,%ecx
mov    %cl,(%rsi)
add    $0x2,%eax
add    $0x1,%rsi
cmp    %eax,%edx
ja     1a3e9 <png_do_gamma+0x329>
leaveq 
retq   
movzbl (%rsi),%ecx
movzbl (%r9,%rcx,1),%ecx
mov    %cl,(%rsi)
add    $0x1,%eax
add    $0x1,%rsi
cmp    %eax,%edx
ja     1a433 <png_do_gamma+0x373>
leaveq 
retq   
movzbl 0x1(%rsi),%edi
shr    %cl,%edi
movslq %edi,%rdi
mov    (%r8,%rdi,8),%r9
movzbl (%rsi),%edi
movzwl (%r9,%rdi,2),%r9d
mov    %r9,%rdi
shr    $0x8,%edi
mov    %dil,(%rsi)
mov    %r9b,0x1(%rsi)
add    $0x1,%eax
add    $0x2,%rsi
cmp    %eax,%edx
ja     1a44a <png_do_gamma+0x38a>
leaveq 
retq   
nopl   0x0(%rax)

000000000001a480 <png_do_encode_alpha>:
push   %rbp
mov    %rsp,%rbp
mov    (%rdi),%eax
movzbl 0x10(%rdi),%r10d
mov    %r10,%rcx
and    $0x4,%ecx
test   %ecx,%ecx
jg     1a4a6 <png_do_encode_alpha+0x26>
mov    %rdx,%rdi
lea    0x14152(%rip),%rsi        # 2e5f1 <chunks_to_process.34+0x7ec>
callq  5390 <png_warning@plt>
leaveq 
retq   
mov    $0x4,%r8d
mov    $0x2,%r11d
movzbl 0x11(%rdi),%ecx
cmp    $0x8,%cl
je     1a4ed <png_do_encode_alpha+0x6d>
cmp    $0x10,%cl
jne    1a495 <png_do_encode_alpha+0x15>
mov    0x2a0(%rdx),%ecx
mov    0x2c8(%rdx),%r9
test   %r9,%r9
je     1a495 <png_do_encode_alpha+0x15>
and    $0x2,%r10d
test   %r10d,%r10d
jle    1a4e7 <png_do_encode_alpha+0x67>
mov    $0x6,%r11d
mov    $0x8,%r8d
lea    (%rsi,%r11,1),%rdx
jmp    1a530 <png_do_encode_alpha+0xb0>
mov    0x2b8(%rdx),%rdi
test   %rdi,%rdi
je     1a495 <png_do_encode_alpha+0x15>
and    $0x2,%r10d
test   %r10d,%r10d
jg     1a536 <png_do_encode_alpha+0xb6>
mov    $0x1,%ecx
jmp    1a53e <png_do_encode_alpha+0xbe>
movzbl 0x1(%rdx),%esi
shr    %cl,%esi
movslq %esi,%rsi
mov    (%r9,%rsi,8),%rsi
movzbl (%rdx),%edi
movzwl (%rsi,%rdi,2),%edi
mov    %rdi,%rsi
shr    $0x8,%esi
mov    %sil,(%rdx)
mov    %dil,0x1(%rdx)
add    $0xffffffff,%eax
add    %r8,%rdx
test   %eax,%eax
jne    1a509 <png_do_encode_alpha+0x89>
leaveq 
retq   
mov    %r8,%r11
mov    $0x3,%ecx
add    %rsi,%rcx
jmp    1a552 <png_do_encode_alpha+0xd2>
movzbl (%rcx),%edx
movzbl (%rdi,%rdx,1),%edx
mov    %dl,(%rcx)
add    $0xffffffff,%eax
add    %r11,%rcx
test   %eax,%eax
jne    1a543 <png_do_encode_alpha+0xc3>
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

000000000001a560 <png_do_expand_palette>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    (%rdi),%r9d
movzbl 0x10(%rdi),%eax
cmp    $0x3,%al
je     1a575 <png_do_expand_palette+0x15>
leaveq 
retq   
xor    %eax,%eax
movzbl 0x11(%rdi),%r10d
cmp    $0x7,%r10b
ja     1a60a <png_do_expand_palette+0xaa>
cmp    $0x1,%r10b
jbe    1a61b <png_do_expand_palette+0xbb>
cmp    $0x2,%r10b
je     1a667 <png_do_expand_palette+0x107>
cmp    $0x4,%r10b
jne    1a5fe <png_do_expand_palette+0x9e>
mov    %r9,%r11
and    $0x1,%r11d
neg    %r11d
and    $0x4,%r11d
lea    -0x1(%r9),%r10d
shr    %r10d
mov    %r10d,%r10d
add    %rsi,%r10
mov    %rcx,-0x18(%rbp)
lea    -0x1(%rsi,%r9,1),%rcx
mov    %r8,-0x28(%rbp)
mov    %rsi,-0x20(%rbp)
mov    %rcx,%r8
mov    %r11,%rcx
mov    %rax,%r11
jmpq   1a6b7 <png_do_expand_palette+0x157>
add    $0xffffffffffffffff,%r10
mov    %rax,%rcx
add    $0xffffffffffffffff,%r11
add    $0x1,%r8d
cmp    %r8d,%r9d
ja     1a6cd <png_do_expand_palette+0x16d>
mov    -0x20(%rbp),%rsi
mov    -0x28(%rbp),%r8
mov    -0x10(%rbp),%rcx
movb   $0x8,0x11(%rdi)
movb   $0x8,0x13(%rdi)
mov    %r9,0x8(%rdi)
movzbl 0x11(%rdi),%r10d
cmp    $0x8,%r10b
je     1a6eb <png_do_expand_palette+0x18b>
leaveq 
retq   
cmp    $0x1,%r10b
jne    1a5fe <png_do_expand_palette+0x9e>
mov    $0xfffffffffffffff8,%r10
sub    %r9d,%r10d
and    $0x7,%r10d
mov    $0x1,%r11d
mov    %rcx,-0x8(%rbp)
lea    -0x1(%rsi,%r9,1),%rcx
mov    %rdx,-0x10(%rbp)
lea    -0x1(%r9),%edx
shr    $0x3,%edx
mov    %edx,%edx
add    %rsi,%rdx
mov    %r8,-0x28(%rbp)
mov    %rsi,-0x18(%rbp)
mov    %r10,%rsi
mov    %rcx,%r10
mov    %rsi,%rcx
mov    %rax,%r8
jmpq   1a715 <png_do_expand_palette+0x1b5>
lea    -0x1(%r9),%r10d
shr    $0x2,%r10d
mov    %r10d,%r10d
add    %rsi,%r10
mov    $0xfffffffffffffffc,%r11
sub    %r9d,%r11d
and    $0x3,%r11d
add    %r11d,%r11d
mov    %rcx,-0x10(%rbp)
lea    -0x1(%rsi,%r9,1),%rcx
mov    %r8,-0x28(%rbp)
mov    %rsi,-0x20(%rbp)
mov    %r11,%rsi
mov    %rcx,%r11
mov    %rsi,%rcx
mov    %rax,%r8
jmpq   1a5e9 <png_do_expand_palette+0x89>
add    $0xffffffffffffffff,%r10
mov    %rax,%rcx
add    $0xffffffffffffffff,%r8
add    $0x1,%r11d
cmp    %r11d,%r9d
ja     1a733 <png_do_expand_palette+0x1d3>
mov    -0x20(%rbp),%rsi
mov    -0x28(%rbp),%r8
mov    -0x18(%rbp),%rcx
jmpq   1a5fe <png_do_expand_palette+0x9e>
movzbl (%r10),%esi
shr    %cl,%esi
and    $0x3,%sil
mov    %sil,(%r11)
cmp    $0x6,%ecx
je     1a5da <png_do_expand_palette+0x7a>
add    $0x2,%ecx
jmpq   1a5e1 <png_do_expand_palette+0x81>
test   %r8d,%r8d
jg     1a751 <png_do_expand_palette+0x1f1>
lea    -0x1(%rsi,%r9,1),%rcx
lea    (%r9,%r9,2),%r10d
mov    %r10d,%r8d
lea    -0x1(%rsi,%r8,1),%rsi
jmpq   1a7ad <png_do_expand_palette+0x24d>
add    $0xffffffffffffffff,%rdx
mov    %rax,%rcx
add    $0xffffffffffffffff,%r10
add    $0x1,%r8d
cmp    %r8d,%r9d
ja     1a7cb <png_do_expand_palette+0x26b>
mov    -0x18(%rbp),%rsi
mov    -0x28(%rbp),%r8
mov    -0x10(%rbp),%rdx
mov    -0x8(%rbp),%rcx
jmpq   1a5fe <png_do_expand_palette+0x9e>
movzbl (%r10),%esi
shr    %cl,%esi
and    $0xf,%sil
mov    %sil,(%r8)
cmp    $0x4,%ecx
je     1a6a8 <png_do_expand_palette+0x148>
add    $0x4,%ecx
jmpq   1a6af <png_do_expand_palette+0x14f>
lea    -0x1(%rsi,%r9,1),%r10
mov    $0xff,%r11d
lea    -0x1(%rsi,%r9,4),%rsi
mov    %r14,-0x8(%rbp)
mov    %r15,-0x28(%rbp)
jmpq   1a822 <png_do_expand_palette+0x2c2>
movzbl (%rcx),%r8d
lea    (%r8,%r8,2),%r8
movzbl 0x2(%rdx,%r8,1),%r8d
mov    %r8b,(%rsi)
movzbl (%rcx),%r8d
lea    (%r8,%r8,2),%r8
movzbl 0x1(%rdx,%r8,1),%r8d
mov    %r8b,-0x1(%rsi)
movzbl (%rcx),%r8d
lea    (%r8,%r8,2),%r8
movzbl (%rdx,%r8,1),%r8d
mov    %r8b,-0x2(%rsi)
add    $0x1,%eax
add    $0xffffffffffffffff,%rcx
add    $0xfffffffffffffffd,%rsi
cmp    %eax,%r9d
ja     1a76e <png_do_expand_palette+0x20e>
movb   $0x8,0x11(%rdi)
movb   $0x18,0x13(%rdi)
mov    %r10d,%eax
mov    %rax,0x8(%rdi)
movb   $0x2,0x10(%rdi)
movb   $0x3,0x12(%rdi)
leaveq 
retq   
movzbl (%rdx),%esi
shr    %cl,%esi
and    $0x1,%esi
test   %esi,%esi
jg     1a84c <png_do_expand_palette+0x2ec>
mov    %rax,%rsi
jmp    1a84f <png_do_expand_palette+0x2ef>
lea    -0x1(%rsi),%r14
mov    %r11,%r15
mov    %r15b,(%rsi)
movzbl (%r10),%esi
lea    (%rsi,%rsi,2),%rsi
movzbl 0x2(%rdx,%rsi,1),%esi
mov    %sil,(%r14)
movzbl (%r10),%esi
lea    (%rsi,%rsi,2),%rsi
movzbl 0x1(%rdx,%rsi,1),%esi
mov    %sil,-0x1(%r14)
movzbl (%r10),%esi
lea    (%rsi,%rsi,2),%rsi
movzbl (%rdx,%rsi,1),%esi
mov    %sil,-0x2(%r14)
add    $0x1,%eax
add    $0xffffffffffffffff,%r10
lea    -0x3(%r14),%rsi
cmp    %r9d,%eax
jb     1a863 <png_do_expand_palette+0x303>
movb   $0x8,0x11(%rdi)
movb   $0x20,0x13(%rdi)
shl    $0x2,%r9d
mov    %r9d,%eax
mov    %rax,0x8(%rdi)
movb   $0x6,0x10(%rdi)
movb   $0x4,0x12(%rdi)
mov    -0x28(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
mov    %r11,%rsi
mov    %sil,(%r10)
cmp    $0x7,%ecx
je     1a706 <png_do_expand_palette+0x1a6>
add    $0x1,%ecx
jmpq   1a70d <png_do_expand_palette+0x1ad>
movzbl (%r10),%r14d
cmp    %r8d,%r14d
jge    1a7dc <png_do_expand_palette+0x27c>
movzbl (%r14,%rcx,1),%r15d
lea    -0x1(%rsi),%r14
jmpq   1a7e3 <png_do_expand_palette+0x283>
xchg   %ax,%ax

000000000001a880 <png_do_expand>:
push   %rbp
mov    %rsp,%rbp
sub    $0x40,%rsp
mov    (%rdi),%r8d
mov    $0xff,%r9d
xor    %eax,%eax
movzbl 0x10(%rdi),%ecx
test   %cl,%cl
je     1a8a2 <png_do_expand+0x22>
cmp    $0x2,%cl
je     1a8ac <png_do_expand+0x2c>
leaveq 
retq   
test   %rdx,%rdx
jne    1a8b3 <png_do_expand+0x33>
mov    %rax,%r11
jmp    1a8b8 <png_do_expand+0x38>
test   %rdx,%rdx
jne    1a8cc <png_do_expand+0x4c>
leaveq 
retq   
movzwl 0x8(%rdx),%r11d
movzbl 0x11(%rdi),%ecx
cmp    $0x7,%cl
jbe    1a923 <png_do_expand+0xa3>
test   %rdx,%rdx
jne    1a97f <png_do_expand+0xff>
leaveq 
retq   
movzbl 0x11(%rdi),%ecx
cmp    $0x8,%cl
je     1a9b3 <png_do_expand+0x133>
cmp    $0x10,%cl
jne    1aa21 <png_do_expand+0x1a1>
movzwl 0x2(%rdx),%ecx
mov    %rcx,%r11
shr    $0x8,%r11d
movzwl 0x4(%rdx),%r10d
mov    %r10,%r9
shr    $0x8,%r9d
movzwl 0x6(%rdx),%edx
mov    %r15,-0x38(%rbp)
mov    %rdx,%r15
shr    $0x8,%r15d
mov    %r14,-0x30(%rbp)
mov    0x8(%rdi),%r14
lea    -0x1(%rsi,%r14,1),%r14
lea    -0x1(%rsi,%r8,8),%rsi
mov    %r13,-0x28(%rbp)
jmpq   1aa99 <png_do_expand+0x219>
cmp    $0x1,%cl
jbe    1aab3 <png_do_expand+0x233>
cmp    $0x2,%cl
je     1aacd <png_do_expand+0x24d>
cmp    $0x4,%cl
jne    1aabc <png_do_expand+0x23c>
mov    $0xfffffffffffffffe,%rcx
sub    %r8d,%ecx
and    $0x1,%ecx
neg    %ecx
and    $0x4,%ecx
lea    -0x1(%r8),%r9d
shr    %r9d
mov    %r9d,%r9d
add    %rsi,%r9
lea    -0x1(%rsi,%r8,1),%r10
mov    %rsi,-0x10(%rbp)
mov    $0x4,%esi
mov    %r15,-0x20(%rbp)
mov    %r11,-0x18(%rbp)
mov    %rdx,-0x38(%rbp)
mov    %rax,%r11
jmpq   1ab11 <png_do_expand+0x291>
movzbl 0x11(%rdi),%ecx
cmp    $0x8,%cl
je     1ab42 <png_do_expand+0x2c2>
cmp    $0x10,%cl
jne    1ab81 <png_do_expand+0x301>
mov    %r11,%r9
shr    $0x8,%r9d
movzbl %r11b,%r10d
mov    0x8(%rdi),%rdx
lea    -0x1(%rsi,%rdx,1),%rcx
lea    -0x1(%rsi,%rdx,2),%rdx
jmpq   1abd2 <png_do_expand+0x352>
movzbl 0x2(%rdx),%r11d
movzbl 0x4(%rdx),%r10d
movzbl 0x6(%rdx),%edx
mov    0x8(%rdi),%rcx
lea    -0x1(%rsi,%rcx,1),%rcx
lea    -0x1(%rsi,%r8,4),%rsi
mov    %r15,-0x38(%rbp)
mov    %r14,-0x30(%rbp)
mov    %r13,-0x28(%rbp)
mov    %rax,%r13
jmp    1aa0c <png_do_expand+0x18c>
lea    -0x1(%rsi),%r14
mov    %r9,%r15
mov    %r15b,(%rsi)
movzbl (%rcx),%esi
mov    %sil,(%r14)
movzbl -0x1(%rcx),%esi
mov    %sil,-0x1(%r14)
movzbl -0x2(%rcx),%esi
mov    %sil,-0x2(%r14)
add    $0xfffffffffffffffd,%rcx
lea    -0x3(%r14),%rsi
add    $0x1,%r13d
cmp    %r13d,%r8d
ja     1abf5 <png_do_expand+0x375>
mov    -0x28(%rbp),%r13
mov    -0x30(%rbp),%r14
mov    -0x38(%rbp),%r15
movb   $0x6,0x10(%rdi)
movb   $0x4,0x12(%rdi)
movzbl 0x11(%rdi),%eax
shl    $0x2,%eax
mov    %al,0x13(%rdi)
cmp    $0x7,%al
ja     1ac2a <png_do_expand+0x3aa>
movzbl %al,%eax
imul   %r8,%rax
add    $0x7,%rax
shr    $0x3,%rax
jmpq   1ac35 <png_do_expand+0x3b5>
movb   $0xff,(%rsi)
movb   $0xff,-0x1(%rsi)
add    $0xfffffffffffffffe,%rsi
movzbl (%r14),%r13d
mov    %r13b,(%rsi)
movzbl -0x1(%r14),%r13d
mov    %r13b,-0x1(%rsi)
movzbl -0x2(%r14),%r13d
mov    %r13b,-0x2(%rsi)
movzbl -0x3(%r14),%r13d
mov    %r13b,-0x3(%rsi)
movzbl -0x4(%r14),%r13d
mov    %r13b,-0x4(%rsi)
movzbl -0x5(%r14),%r13d
mov    %r13b,-0x5(%rsi)
add    $0xfffffffffffffffa,%r14
add    $0xfffffffffffffffa,%rsi
add    $0x1,%eax
cmp    %eax,%r8d
ja     1ac3b <png_do_expand+0x3bb>
mov    -0x28(%rbp),%r13
mov    -0x30(%rbp),%r14
mov    -0x38(%rbp),%r15
jmpq   1aa21 <png_do_expand+0x1a1>
cmp    $0x1,%cl
je     1ac9e <png_do_expand+0x41e>
movb   $0x8,0x11(%rdi)
movb   $0x8,0x13(%rdi)
mov    %r8,0x8(%rdi)
jmpq   1a8c1 <png_do_expand+0x41>
lea    -0x1(%r8),%ecx
shr    $0x2,%ecx
mov    %ecx,%ecx
lea    (%rsi,%rcx,1),%r9
mov    $0xfffffffffffffffc,%rcx
sub    %r8d,%ecx
and    $0x3,%ecx
add    %ecx,%ecx
lea    -0x1(%rsi,%r8,1),%r10
mov    %rsi,-0x10(%rbp)
mov    %r11,-0x20(%rbp)
mov    %rdx,-0x38(%rbp)
mov    %rax,%rsi
jmpq   1ace0 <png_do_expand+0x460>
add    $0xffffffffffffffff,%r9
mov    %rax,%rcx
add    $0xffffffffffffffff,%r10
add    $0x1,%r11d
cmp    %r8d,%r11d
jb     1ad0f <png_do_expand+0x48f>
mov    -0x18(%rbp),%rcx
and    $0xf,%ecx
mov    %rcx,%rdx
shl    $0x4,%edx
lea    (%rcx,%rdx,1),%r11d
mov    -0x38(%rbp),%rdx
mov    -0x10(%rbp),%rsi
mov    $0xff,%r9d
mov    -0x20(%rbp),%r15
jmpq   1aabc <png_do_expand+0x23c>
movzbl %r11b,%r11d
lea    -0x1(%rsi,%r8,1),%rcx
lea    -0x1(%rsi,%r8,2),%rdx
mov    %r15,-0x38(%rbp)
mov    %rax,%r10
jmp    1ab74 <png_do_expand+0x2f4>
lea    -0x1(%rdx),%rsi
mov    %rax,%r15
mov    %r15b,(%rdx)
movzbl (%rcx),%edx
mov    %dl,(%rsi)
add    $0xffffffffffffffff,%rcx
lea    -0x1(%rsi),%rdx
add    $0x1,%r10d
cmp    %r10d,%r8d
ja     1ad36 <png_do_expand+0x4b6>
mov    -0x38(%rbp),%r15
movb   $0x4,0x10(%rdi)
movb   $0x2,0x12(%rdi)
movzbl 0x11(%rdi),%eax
add    %eax,%eax
mov    %al,0x13(%rdi)
cmp    $0x7,%al
ja     1ad4e <png_do_expand+0x4ce>
movzbl %al,%eax
imul   %r8,%rax
add    $0x7,%rax
shr    $0x3,%rax
jmpq   1ad59 <png_do_expand+0x4d9>
movb   $0xff,(%rdx)
movb   $0xff,-0x1(%rdx)
add    $0xfffffffffffffffe,%rdx
movzbl (%rcx),%esi
mov    %sil,(%rdx)
movzbl -0x1(%rcx),%esi
mov    %sil,-0x1(%rdx)
add    $0xfffffffffffffffe,%rcx
add    $0xfffffffffffffffe,%rdx
add    $0x1,%eax
cmp    %eax,%r8d
jbe    1ab81 <png_do_expand+0x301>
movzbl -0x1(%rcx),%esi
cmp    %r9d,%esi
jne    1abae <png_do_expand+0x32e>
movzbl (%rcx),%esi
cmp    %r10d,%esi
jne    1abae <png_do_expand+0x32e>
movb   $0x0,(%rdx)
movb   $0x0,-0x1(%rdx)
add    $0xfffffffffffffffe,%rdx
jmp    1abb9 <png_do_expand+0x339>
movzbl -0x2(%rcx),%r14d
cmp    %r14b,%r11b
jne    1a9e0 <png_do_expand+0x160>
movzbl -0x1(%rcx),%r14d
cmp    %r14b,%r10b
jne    1a9e0 <png_do_expand+0x160>
movzbl (%rcx),%r14d
cmp    %r14b,%dl
jne    1a9e0 <png_do_expand+0x160>
lea    -0x1(%rsi),%r14
mov    %rax,%r15
jmpq   1a9e7 <png_do_expand+0x167>
movzbl %al,%eax
shr    $0x3,%rax
imul   %r8,%rax
mov    %rax,0x8(%rdi)
leaveq 
retq   
movzbl -0x5(%r14),%r13d
cmp    %r11b,%r13b
jne    1aa4f <png_do_expand+0x1cf>
movzbl -0x4(%r14),%r13d
cmp    %r13b,%cl
jne    1aa4f <png_do_expand+0x1cf>
movzbl -0x3(%r14),%r13d
cmp    %r9b,%r13b
jne    1aa4f <png_do_expand+0x1cf>
movzbl -0x2(%r14),%r13d
cmp    %r13b,%r10b
jne    1aa4f <png_do_expand+0x1cf>
movzbl -0x1(%r14),%r13d
cmp    %r15b,%r13b
jne    1aa4f <png_do_expand+0x1cf>
movzbl (%r14),%r13d
cmp    %r13b,%dl
jne    1aa4f <png_do_expand+0x1cf>
movb   $0x0,(%rsi)
movb   $0x0,-0x1(%rsi)
add    $0xfffffffffffffffe,%rsi
jmpq   1aa5a <png_do_expand+0x1da>
mov    $0xfffffffffffffff8,%rcx
sub    %r8d,%ecx
and    $0x7,%ecx
lea    -0x1(%rsi,%r8,1),%r10
mov    %r15,-0x38(%rbp)
lea    -0x1(%r8),%r15d
shr    $0x3,%r15d
mov    %r15d,%r15d
add    %rsi,%r15
mov    %rsi,-0x8(%rbp)
mov    %r11,-0x18(%rbp)
mov    %rax,%r11
jmpq   1ad6e <png_do_expand+0x4ee>
add    $0xffffffffffffffff,%r9
mov    %rax,%rcx
add    $0xffffffffffffffff,%r10
add    $0x1,%esi
cmp    %esi,%r8d
ja     1ad8d <png_do_expand+0x50d>
mov    -0x20(%rbp),%rcx
and    $0x3,%ecx
mov    %rcx,%rdx
shl    $0x4,%edx
add    %edx,%ecx
lea    (%rcx,%rcx,4),%r11d
mov    -0x38(%rbp),%rdx
mov    -0x10(%rbp),%rsi
mov    $0xff,%r9d
jmpq   1aabc <png_do_expand+0x23c>
movzbl (%r9),%edx
shr    %cl,%edx
mov    %rdx,%r15
and    $0xf,%r15b
shl    $0x4,%edx
add    %r15d,%edx
mov    %dl,(%r10)
cmp    $0x4,%ecx
je     1ab02 <png_do_expand+0x282>
mov    %rsi,%rcx
jmpq   1ab09 <png_do_expand+0x289>
movzbl (%rcx),%esi
cmp    %r11d,%esi
je     1ab59 <png_do_expand+0x2d9>
lea    -0x1(%rdx),%rsi
mov    %r9,%r15
jmpq   1ab60 <png_do_expand+0x2e0>
movzbl %al,%eax
shr    $0x3,%rax
imul   %r8,%rax
mov    %rax,0x8(%rdi)
leaveq 
retq   
add    $0xffffffffffffffff,%r15
mov    %rax,%rcx
add    $0xffffffffffffffff,%r10
add    $0x1,%r11d
cmp    %r11d,%r8d
ja     1adb7 <png_do_expand+0x537>
mov    -0x18(%rbp),%rcx
and    $0x1,%ecx
neg    %ecx
movzbl %cl,%r11d
mov    -0x8(%rbp),%rsi
mov    -0x38(%rbp),%r15
jmpq   1aabc <png_do_expand+0x23c>
movzbl (%r9),%edx
shr    %cl,%edx
and    $0x3,%dl
mov    %rdx,%r11
shl    $0x4,%r11d
add    %r11d,%edx
lea    (%rdx,%rdx,4),%edx
mov    %dl,(%r10)
cmp    $0x6,%ecx
je     1acd2 <png_do_expand+0x452>
add    $0x2,%ecx
jmpq   1acd9 <png_do_expand+0x459>
movzbl (%r15),%esi
shr    %cl,%esi
and    $0x1,%esi
test   %esi,%esi
jg     1adc9 <png_do_expand+0x549>
mov    %rax,%rsi
jmp    1adcc <png_do_expand+0x54c>
mov    %r9,%rsi
mov    %sil,(%r10)
cmp    $0x7,%ecx
je     1ad5f <png_do_expand+0x4df>
add    $0x1,%ecx
jmp    1ad66 <png_do_expand+0x4e6>
nopl   0x0(%rax)

000000000001ade0 <png_do_expand_16>:
push   %rbp
mov    %rsp,%rbp
movzbl 0x11(%rdi),%eax
cmp    $0x8,%al
je     1adee <png_do_expand_16+0xe>
leaveq 
retq   
movzbl 0x10(%rdi),%eax
cmp    $0x3,%al
jne    1adf8 <png_do_expand_16+0x18>
leaveq 
retq   
mov    0x8(%rdi),%rcx
lea    (%rcx,%rsi,1),%rax
lea    (%rsi,%rcx,2),%rcx
jmp    1ae16 <png_do_expand_16+0x36>
add    $0xffffffffffffffff,%rax
movzbl (%rax),%edx
mov    %dl,-0x1(%rcx)
add    $0xfffffffffffffffe,%rcx
mov    %dl,(%rcx)
cmp    %rcx,%rax
jb     1ae06 <png_do_expand_16+0x26>
mov    0x8(%rdi),%rax
add    %rax,%rax
mov    %rax,0x8(%rdi)
movb   $0x10,0x11(%rdi)
movzbl 0x12(%rdi),%eax
shl    $0x4,%eax
mov    %al,0x13(%rdi)
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)

000000000001ae40 <png_do_quantize>:
push   %rbp
mov    %rsp,%rbp
mov    (%rdi),%r10d
movzbl 0x11(%rdi),%eax
cmp    $0x8,%al
je     1ae51 <png_do_quantize+0x11>
leaveq 
retq   
xor    %eax,%eax
movzbl 0x10(%rdi),%r8d
cmp    $0x2,%r8b
je     1ae6c <png_do_quantize+0x2c>
cmp    $0x6,%r8b
je     1ae76 <png_do_quantize+0x36>
cmp    $0x3,%r8b
je     1ae83 <png_do_quantize+0x43>
leaveq 
retq   
test   %rdx,%rdx
je     1ae5e <png_do_quantize+0x1e>
mov    %rsi,%r8
jmp    1aeca <png_do_quantize+0x8a>
test   %rdx,%rdx
je     1ae64 <png_do_quantize+0x24>
mov    %rsi,%r8
jmpq   1af33 <png_do_quantize+0xf3>
test   %rcx,%rcx
jne    1af69 <png_do_quantize+0x129>
leaveq 
retq   
movzbl (%r8),%ecx
and    $0x1fffff8,%ecx
shl    $0x7,%ecx
movzbl 0x1(%r8),%r9d
and    $0x3ffffff8,%r9d
lea    (%rcx,%r9,4),%r9d
movzbl 0x2(%r8),%ecx
shr    $0x3,%ecx
add    %r9d,%ecx
movslq %ecx,%rcx
movzbl (%rdx,%rcx,1),%ecx
mov    %cl,(%rsi)
add    $0x1,%eax
add    $0x3,%r8
add    $0x1,%rsi
cmp    %r10d,%eax
jb     1ae8e <png_do_quantize+0x4e>
movb   $0x3,0x10(%rdi)
movb   $0x1,0x12(%rdi)
movzbl 0x11(%rdi),%eax
mov    %al,0x13(%rdi)
cmp    $0x7,%al
ja     1af70 <png_do_quantize+0x130>
imul   %r10,%rax
add    $0x7,%rax
shr    $0x3,%rax
jmpq   1af78 <png_do_quantize+0x138>
movzbl (%r8),%ecx
and    $0x1fffff8,%ecx
shl    $0x7,%ecx
movzbl 0x1(%r8),%r9d
and    $0x3ffffff8,%r9d
lea    (%rcx,%r9,4),%r9d
movzbl 0x2(%r8),%ecx
shr    $0x3,%ecx
add    %r9d,%ecx
movslq %ecx,%rcx
movzbl (%rdx,%rcx,1),%ecx
mov    %cl,(%rsi)
add    $0x1,%eax
add    $0x4,%r8
add    $0x1,%rsi
cmp    %eax,%r10d
ja     1aef7 <png_do_quantize+0xb7>
movb   $0x3,0x10(%rdi)
movb   $0x1,0x12(%rdi)
movzbl 0x11(%rdi),%eax
mov    %al,0x13(%rdi)
cmp    $0x7,%al
ja     1af7e <png_do_quantize+0x13e>
imul   %r10,%rax
add    $0x7,%rax
shr    $0x3,%rax
jmp    1af86 <png_do_quantize+0x146>
movzbl (%rsi),%edx
movzbl (%rcx,%rdx,1),%edx
mov    %dl,(%rsi)
add    $0x1,%eax
add    $0x1,%rsi
cmp    %eax,%r10d
ja     1af59 <png_do_quantize+0x119>
leaveq 
retq   
shr    $0x3,%rax
imul   %r10,%rax
mov    %rax,0x8(%rdi)
leaveq 
retq   
shr    $0x3,%rax
imul   %r10,%rax
mov    %rax,0x8(%rdi)
leaveq 
retq   
nopl   0x0(%rax)

000000000001af90 <png_get_uint_32>:
push   %rbp
mov    %rsp,%rbp
movzbl (%rdi),%eax
shl    $0x18,%eax
movzbl 0x1(%rdi),%ecx
shl    $0x10,%ecx
add    %eax,%ecx
movzbl 0x2(%rdi),%eax
shl    $0x8,%eax
add    %ecx,%eax
movzbl 0x3(%rdi),%ecx
add    %ecx,%eax
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nop

000000000001afc0 <png_get_uint_16>:
push   %rbp
mov    %rsp,%rbp
movzbl 0x1(%rdi),%ecx
movzbl (%rdi),%eax
shl    $0x8,%eax
add    %ecx,%eax
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   (%rax)

000000000001afe0 <png_get_int_32>:
push   %rbp
mov    %rsp,%rbp
movzbl (%rdi),%ecx
shl    $0x18,%ecx
movzbl 0x1(%rdi),%eax
shl    $0x10,%eax
add    %eax,%ecx
movzbl 0x2(%rdi),%eax
shl    $0x8,%eax
add    %eax,%ecx
movzbl 0x3(%rdi),%eax
add    %ecx,%eax
mov    %rax,%rcx
and    $0x80000000,%ecx
test   %ecx,%ecx
jne    1b011 <png_get_int_32+0x31>
leaveq 
retq   
neg    %eax
mov    %rax,%rcx
and    $0x80000000,%ecx
test   %ecx,%ecx
je     1b024 <png_get_int_32+0x44>
xor    %eax,%eax
leaveq 
retq   
neg    %eax
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

000000000001b030 <png_get_uint_31>:
push   %rbp
mov    %rsp,%rbp
movzbl (%rsi),%eax
shl    $0x18,%eax
movzbl 0x1(%rsi),%ecx
shl    $0x10,%ecx
add    %eax,%ecx
movzbl 0x2(%rsi),%eax
shl    $0x8,%eax
add    %eax,%ecx
movzbl 0x3(%rsi),%eax
add    %ecx,%eax
cmp    $0x7fffffff,%eax
ja     1b05b <png_get_uint_31+0x2b>
leaveq 
retq   
lea    0x135de(%rip),%rsi        # 2e640 <chunks_to_process.34+0x83b>
callq  5470 <png_error@plt>
nopw   0x0(%rax,%rax,1)

000000000001b070 <png_read_sig>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
movzbl 0x26d(%rdi),%r8d
cmp    $0x7,%r8b
jbe    1b088 <png_read_sig+0x18>
leaveq 
retq   
movl   $0x11,0x46c(%rdi)
lea    0x2c(%rsi,%r8,1),%rax
mov    $0x8,%edx
sub    %r8,%rdx
mov    %rdi,%rcx
mov    %rdx,%r9
mov    %r12,-0x8(%rbp)
mov    %r13,-0x10(%rbp)
mov    %r14,-0x18(%rbp)
mov    %r15,-0x20(%rbp)
mov    %rdi,%r12
mov    %rcx,%rdi
mov    %r8,%r13
mov    %rsi,%r14
mov    %rax,%rsi
mov    %rdx,%r15
mov    %r9,%rdx
callq  14830 <png_read_data>
movb   $0x8,0x26d(%r12)
add    $0x2c,%r14
mov    %r15,%rdx
mov    %r14,%rdi
mov    %r13,%rsi
callq  57d0 <png_sig_cmp@plt>
test   %eax,%eax
jne    1b106 <png_read_sig+0x96>
cmp    $0x2,%r13b
jbe    1b11b <png_read_sig+0xab>
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
leaveq 
retq   
cmp    $0x3,%r13b
jbe    1b142 <png_read_sig+0xd2>
mov    %r12,%rdi
lea    0x1355b(%rip),%rsi        # 2e671 <chunks_to_process.34+0x86c>
callq  5470 <png_error@plt>
mov    0x12c(%r12),%eax
or     $0x1000,%eax
mov    %eax,0x12c(%r12)
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
leaveq 
retq   
mov    $0x4,%edx
sub    %r13,%rdx
mov    %r13,%rsi
mov    %r14,%rdi
callq  57d0 <png_sig_cmp@plt>
test   %eax,%eax
je     1b10c <png_read_sig+0x9c>
mov    %r12,%rdi
lea    0x134ff(%rip),%rsi        # 2e662 <chunks_to_process.34+0x85d>
callq  5470 <png_error@plt>
nopl   0x0(%rax,%rax,1)

000000000001b170 <png_read_chunk_header>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %r15,-0x10(%rbp)
mov    %r14,-0x8(%rbp)
movl   $0x21,0x46c(%rdi)
lea    -0x18(%rbp),%rsi
mov    $0x8,%edx
mov    %rdi,%r14
callq  14830 <png_read_data>
mov    %r14,%rdi
lea    -0x18(%rbp),%rsi
callq  5730 <png_get_uint_31@plt>
movzbl -0x14(%rbp),%ecx
shl    $0x18,%ecx
movzbl -0x13(%rbp),%edx
shl    $0x10,%edx
add    %ecx,%edx
movzbl -0x12(%rbp),%ecx
shl    $0x8,%ecx
add    %ecx,%edx
movzbl -0x11(%rbp),%ecx
add    %edx,%ecx
mov    %ecx,0x218(%r14)
mov    %rax,%r15
mov    %r14,%rdi
callq  6d90 <png_reset_crc>
lea    -0x14(%rbp),%rsi
mov    $0x4,%edx
mov    %r14,%rdi
callq  6dc0 <png_calculate_crc>
mov    0x218(%r14),%esi
mov    %r14,%rdi
callq  1fcd0 <png_check_chunk_name>
mov    %r14,%rdi
mov    %r15,%rsi
callq  1fd10 <png_check_chunk_length>
movl   $0x41,0x46c(%r14)
mov    %r15,%rax
mov    -0x8(%rbp),%r14
mov    -0x10(%rbp),%r15
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

000000000001b220 <png_crc_read>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
test   %rdi,%rdi
jne    1b22f <png_crc_read+0xf>
leaveq 
retq   
mov    %edx,%edx
mov    %rdi,%r8
mov    %rsi,%rcx
mov    %rdx,%rax
mov    %r13,-0x8(%rbp)
mov    %r14,-0x10(%rbp)
mov    %r15,-0x18(%rbp)
mov    %rdx,%r13
mov    %rax,%rdx
mov    %rsi,%r14
mov    %rcx,%rsi
mov    %rdi,%r15
mov    %r8,%rdi
callq  14830 <png_read_data>
mov    %r13,%rdx
mov    %r14,%rsi
mov    %r15,%rdi
callq  6dc0 <png_calculate_crc>
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
leaveq 
retq   
nopl   0x0(%rax)

000000000001b280 <png_crc_finish>:
push   %rbp
mov    %rsp,%rbp
sub    $0x430,%rsp
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rsi,%rbx
mov    %rdi,%r12
lea    -0x428(%rbp),%r13
mov    $0x400,%r14d
jmp    1b2c8 <png_crc_finish+0x48>
mov    %rbx,%r15
mov    %r12,%rdi
mov    %r13,%rsi
mov    %r15,%rdx
callq  1b220 <png_crc_read>
sub    %r15d,%ebx
test   %ebx,%ebx
jne    1b2f3 <png_crc_finish+0x73>
xor    %ebx,%ebx
mov    %r12,%rdi
callq  1b380 <png_crc_error>
test   %eax,%eax
jne    1b300 <png_crc_finish+0x80>
mov    %rbx,%rax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
cmp    $0x3ff,%ebx
jbe    1b2b4 <png_crc_finish+0x34>
mov    %r14,%r15
jmp    1b2b7 <png_crc_finish+0x37>
mov    $0x1,%r13d
mov    0x218(%r12),%ecx
and    $0x20000000,%ecx
test   %ecx,%ecx
jne    1b32e <png_crc_finish+0xae>
mov    0x130(%r12),%eax
and    $0x400,%eax
test   %eax,%eax
je     1b342 <png_crc_finish+0xc2>
mov    %r13,%rbx
jmp    1b342 <png_crc_finish+0xc2>
mov    0x130(%r12),%eax
and    $0x200,%eax
test   %eax,%eax
jne    1b342 <png_crc_finish+0xc2>
mov    %r13,%rbx
lea    0x1334f(%rip),%rsi        # 2e698 <chunks_to_process.34+0x893>
test   %ebx,%ebx
jg     1b355 <png_crc_finish+0xd5>
mov    %r12,%rdi
callq  5060 <png_chunk_error@plt>
mov    %r12,%rdi
callq  56a0 <png_chunk_warning@plt>
mov    %r13,%rax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)

000000000001b380 <png_crc_error>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %r15,-0x10(%rbp)
mov    %rdi,-0x8(%rbp)
mov    $0x1,%ecx
xor    %r15d,%r15d
mov    0x218(%rdi),%eax
and    $0x20000000,%eax
test   %eax,%eax
jne    1b3de <png_crc_error+0x5e>
mov    0x130(%rdi),%eax
and    $0x800,%eax
test   %eax,%eax
jne    1b3b9 <png_crc_error+0x39>
mov    %rcx,%r15
movl   $0x81,0x46c(%rdi)
lea    -0x14(%rbp),%rsi
mov    $0x4,%edx
callq  14830 <png_read_data>
test   %r15d,%r15d
jg     1b3f5 <png_crc_error+0x75>
xor    %eax,%eax
mov    -0x10(%rbp),%r15
leaveq 
retq   
mov    0x130(%rdi),%eax
and    $0x300,%eax
cmp    $0x300,%eax
je     1b3b9 <png_crc_error+0x39>
mov    %rcx,%r15
jmp    1b3b9 <png_crc_error+0x39>
movzbl -0x14(%rbp),%ecx
shl    $0x18,%ecx
movzbl -0x13(%rbp),%eax
shl    $0x10,%eax
add    %eax,%ecx
movzbl -0x12(%rbp),%eax
shl    $0x8,%eax
add    %ecx,%eax
movzbl -0x11(%rbp),%ecx
add    %ecx,%eax
mov    -0x8(%rbp),%rcx
mov    0x24c(%rcx),%ecx
cmp    %eax,%ecx
je     1b42d <png_crc_error+0xad>
mov    $0x1,%eax
mov    -0x10(%rbp),%r15
leaveq 
retq   
xor    %eax,%eax
mov    -0x10(%rbp),%r15
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)

000000000001b440 <png_combine_row>:
push   %rbp
mov    %rsp,%rbp
sub    $0x50,%rsp
movzbl 0x265(%rdi),%r10d
mov    0x228(%rdi),%r11
mov    0x1f8(%rdi),%r8d
movzbl 0x26f(%rdi),%r9d
test   %r9b,%r9b
je     1b4cd <png_combine_row+0x8d>
mov    0x240(%rdi),%rcx
test   %rcx,%rcx
jne    1b4d9 <png_combine_row+0x99>
test   %r8d,%r8d
je     1b4f7 <png_combine_row+0xb7>
xor    %eax,%eax
mov    %rax,-0x18(%rbp)
mov    %r8,%rax
imul   %r9,%rax
mov    %rax,%rcx
and    $0x7,%ecx
test   %ecx,%ecx
jne    1b503 <png_combine_row+0xc3>
mov    %r15,%rcx
xor    %r15d,%r15d
pushq  -0x18(%rbp)
popq   -0x20(%rbp)
mov    %r11,-0x30(%rbp)
add    $0x1,%r11
mov    %rcx,-0x48(%rbp)
movzbl 0x264(%rdi),%ecx
test   %cl,%cl
jne    1b51e <png_combine_row+0xde>
cmp    $0x7,%r9b
ja     1b573 <png_combine_row+0x133>
lea    0x7(%rax),%r8
shr    $0x3,%r8
jmpq   1b57b <png_combine_row+0x13b>
lea    0x131ce(%rip),%rsi        # 2e6a2 <chunks_to_process.34+0x89d>
callq  5470 <png_error@plt>
cmp    $0x7,%r9b
ja     1b5a0 <png_combine_row+0x160>
mov    %r9,%rax
imul   %r8,%rax
add    $0x7,%rax
shr    $0x3,%rax
jmpq   1b5ab <png_combine_row+0x16b>
lea    0x131e1(%rip),%rsi        # 2e6df <chunks_to_process.34+0x8da>
callq  5470 <png_error@plt>
cmp    $0x7,%r9b
ja     1b5c0 <png_combine_row+0x180>
mov    %r15,-0x48(%rbp)
lea    0x7(%rax),%r15
shr    $0x3,%r15
jmpq   1b5cf <png_combine_row+0x18f>
mov    0x134(%rdi),%ecx
and    $0x2,%ecx
test   %ecx,%ecx
je     1b4b6 <png_combine_row+0x76>
cmp    $0x5,%r10b
ja     1b4b6 <png_combine_row+0x76>
test   %edx,%edx
je     1b54c <png_combine_row+0x10c>
cmp    $0x1,%edx
jne    1b4b6 <png_combine_row+0x76>
mov    %r10,%rcx
and    $0x1,%ecx
test   %ecx,%ecx
je     1b4b6 <png_combine_row+0x76>
mov    $0x3,%ecx
lea    0x1(%r10),%eax
shr    %eax
sub    %eax,%ecx
mov    %r10,%rax
and    $0x1,%eax
shl    %cl,%eax
and    $0x7,%eax
cmp    %eax,%r8d
ja     1b619 <png_combine_row+0x1d9>
mov    -0x48(%rbp),%r15
leaveq 
retq   
shr    $0x3,%r9
imul   %r9,%r8
mov    %r8,%rdx
mov    %rsi,%rdi
mov    %r11,%rsi
callq  54c0 <memcpy@plt>
mov    -0x18(%rbp),%rax
mov    -0x20(%rbp),%rcx
test   %r15,%r15
jne    1b68e <png_combine_row+0x24e>
mov    -0x48(%rbp),%r15
leaveq 
retq   
mov    %r9,%rax
shr    $0x3,%rax
imul   %r8,%rax
cmp    %rax,%rcx
je     1b477 <png_combine_row+0x37>
lea    0x13100(%rip),%rsi        # 2e6bb <chunks_to_process.34+0x8b6>
callq  5470 <png_error@plt>
mov    %r15,-0x48(%rbp)
mov    %r9,%r15
shr    $0x3,%r15
imul   %r8,%r15
lea    -0x1(%r15,%rsi,1),%r15
mov    %r14,-0x40(%rbp)
movzbl (%r15),%r14d
mov    %r13,-0x38(%rbp)
mov    %r14,-0x18(%rbp)
mov    0x134(%rdi),%r13d
and    $0x10000,%r13d
test   %r13d,%r13d
jne    1b6a7 <png_combine_row+0x267>
mov    $0xff,%r13d
shr    %cl,%r13d
mov    %r13,-0x20(%rbp)
mov    -0x38(%rbp),%r13
mov    -0x40(%rbp),%r14
mov    -0x48(%rbp),%rcx
jmpq   1b49f <png_combine_row+0x5f>
cmp    $0x7,%r9b
jbe    1b6c5 <png_combine_row+0x285>
mov    %r9,%rcx
and    $0x7,%ecx
test   %ecx,%ecx
jne    1b744 <png_combine_row+0x304>
shr    $0x3,%r9d
mov    %r9d,%ecx
imul   %rcx,%r8
imul   %r9d,%eax
mov    %eax,%ecx
sub    %rcx,%r8
test   %edx,%edx
jne    1b750 <png_combine_row+0x310>
mov    %r9,%rdx
mov    $0x7,%ecx
sub    %r10d,%ecx
shr    %ecx
shl    %cl,%r9d
mov    %eax,%eax
mov    -0x30(%rbp),%rcx
lea    0x1(%rax,%rcx,1),%r15
add    %rsi,%rax
cmp    $0x1,%edx
jbe    1b772 <png_combine_row+0x332>
cmp    $0x2,%edx
je     1b77f <png_combine_row+0x33f>
cmp    $0x3,%edx
jne    1b787 <png_combine_row+0x347>
mov    %r9d,%ecx
jmpq   1b7b4 <png_combine_row+0x374>
mov    %rcx,%rdx
not    %edx
movzbl (%r15),%esi
and    %sil,%dl
and    %cl,%al
or     %al,%dl
mov    %dl,(%r15)
mov    -0x48(%rbp),%r15
leaveq 
retq   
mov    $0xff,%r13d
shl    %cl,%r13d
mov    %r13,-0x20(%rbp)
mov    -0x38(%rbp),%r13
mov    -0x40(%rbp),%r14
mov    -0x48(%rbp),%rcx
jmpq   1b49f <png_combine_row+0x5f>
mov    %rbx,%rcx
mov    %rdx,%rbx
mov    $0x8,%eax
xor    %edx,%edx
div    %r9d
mov    %eax,%edx
lea    0x130aa(%rip),%rax        # 2e788 <display_mask.9>
mov    %r14,-0x40(%rbp)
lea    0x1300f(%rip),%r14        # 2e6f8 <row_mask.8>
mov    %r13,-0x38(%rbp)
mov    $0xc,%r13d
mov    %r12,-0x30(%rbp)
mov    $0x18,%r12d
mov    %rcx,-0x28(%rbp)
mov    $0x30,%ecx
mov    0x134(%rdi),%edi
and    $0x10000,%edi
test   %edi,%edi
jne    1b7d5 <png_combine_row+0x395>
test   %ebx,%ebx
jne    1b7fb <png_combine_row+0x3bb>
cmp    $0x1,%r9b
jne    1b820 <png_combine_row+0x3e0>
xor    %ecx,%ecx
lea    (%rcx,%r10,4),%rax
mov    0x48(%rax,%r14,1),%edi
mov    -0x18(%rbp),%rax
mov    -0x20(%rbp),%rcx
jmpq   1b848 <png_combine_row+0x408>
lea    0x13085(%rip),%rsi        # 2e7d0 <display_mask.9+0x48>
callq  5470 <png_error@plt>
mov    $0x6,%ecx
sub    %r10d,%ecx
shr    %ecx
mov    %r9,%rdx
shl    %cl,%edx
mov    %edx,%ecx
cmp    %r8,%rcx
jbe    1b650 <png_combine_row+0x210>
mov    %r8,%rdx
jmpq   1b650 <png_combine_row+0x210>
cmp    $0x1,%edx
jne    1b787 <png_combine_row+0x347>
mov    %r9d,%ecx
jmpq   1b887 <png_combine_row+0x447>
mov    %r9d,%ecx
jmpq   1b8ab <png_combine_row+0x46b>
mov    %r9d,%r10d
cmp    $0xf,%edx
jbe    1b8c4 <png_combine_row+0x484>
mov    %r14,-0x20(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r12,-0x10(%rbp)
mov    %rbx,-0x8(%rbp)
mov    %r10,%rbx
jmpq   1b8ea <png_combine_row+0x4aa>
sub    %rcx,%r8
add    %rcx,%r15
add    %rcx,%rax
movzbl (%r15),%edx
mov    %dl,(%rax)
movzbl 0x1(%r15),%edx
mov    %dl,0x1(%rax)
movzbl 0x2(%r15),%edx
mov    %dl,0x2(%rax)
cmp    %r8,%rcx
jb     1b7ab <png_combine_row+0x36b>
mov    -0x48(%rbp),%r15
leaveq 
retq   
test   %ebx,%ebx
jne    1b924 <png_combine_row+0x4e4>
cmp    $0x1,%r9b
jne    1b94b <png_combine_row+0x50b>
xor    %ecx,%ecx
lea    (%rcx,%r10,4),%rax
mov    (%rax,%r14,1),%edi
mov    -0x18(%rbp),%rax
mov    -0x20(%rbp),%rcx
jmp    1b848 <png_combine_row+0x408>
cmp    $0x1,%r9b
jne    1b95d <png_combine_row+0x51d>
xor    %r12d,%r12d
shr    %r10d
mov    %r10d,%ecx
lea    (%r12,%rcx,4),%rcx
mov    0x24(%rcx,%rax,1),%edi
mov    -0x18(%rbp),%rax
mov    -0x20(%rbp),%rcx
jmp    1b848 <png_combine_row+0x408>
cmp    $0x2,%r9b
jne    1b72e <png_combine_row+0x2ee>
mov    %r12,%rcx
jmpq   1b72e <png_combine_row+0x2ee>
sub    %rdx,%r8
add    $0x1,%r11
mov    %rdi,%rbx
shr    $0x8,%ebx
shl    $0x18,%edi
add    %ebx,%edi
add    $0x1,%rsi
movzbl %dil,%r9d
test   %r9d,%r9d
je     1b864 <png_combine_row+0x424>
cmp    $0xfe,%r9d
jbe    1b96f <png_combine_row+0x52f>
movzbl (%r11),%ebx
mov    %bl,(%rsi)
cmp    %r8,%rdx
jb     1b832 <png_combine_row+0x3f2>
mov    -0x28(%rbp),%rbx
mov    -0x30(%rbp),%r12
mov    -0x38(%rbp),%r13
mov    -0x40(%rbp),%r14
jmpq   1b591 <png_combine_row+0x151>
sub    %rcx,%r8
add    %rcx,%r15
add    %rcx,%rax
movzbl (%r15),%edx
mov    %dl,(%rax)
cmp    %r8,%rcx
jb     1b87e <png_combine_row+0x43e>
mov    -0x48(%rbp),%r15
leaveq 
retq   
add    %rcx,%r15
add    %rcx,%rax
sub    %rcx,%r8
cmp    $0x1,%r8
jbe    1b98a <png_combine_row+0x54a>
movzbl (%r15),%edx
mov    %dl,(%rax)
movzbl 0x1(%r15),%edx
mov    %dl,0x1(%rax)
cmp    %r8,%rcx
jb     1b898 <png_combine_row+0x458>
mov    -0x48(%rbp),%r15
leaveq 
retq   
movzwl %ax,%ecx
and    $0x1,%ecx
test   %ecx,%ecx
je     1b996 <png_combine_row+0x556>
mov    %r14,-0x20(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r12,-0x10(%rbp)
mov    %rbx,-0x8(%rbp)
mov    %r10,%rbx
jmp    1b8ea <png_combine_row+0x4aa>
mov    %r8,%rdx
mov    %rdx,-0x28(%rbp)
mov    %edx,%r12d
mov    %r8,%r13
mov    %rax,%r14
mov    %r14,%rdi
mov    %r15,%rsi
mov    %r12,%rdx
callq  54c0 <memcpy@plt>
cmp    %r13,%rbx
jb     1b9b9 <png_combine_row+0x579>
mov    -0x8(%rbp),%rbx
mov    -0x10(%rbp),%r12
mov    -0x18(%rbp),%r13
mov    -0x20(%rbp),%r14
mov    -0x48(%rbp),%r15
leaveq 
retq   
cmp    $0x1,%r9b
jne    1b9d8 <png_combine_row+0x598>
xor    %r12d,%r12d
shr    %r10d
mov    %r10d,%ecx
lea    (%r12,%rcx,4),%rcx
mov    (%rcx,%rax,1),%edi
mov    -0x18(%rbp),%rax
mov    -0x20(%rbp),%rcx
jmpq   1b848 <png_combine_row+0x408>
cmp    $0x2,%r9b
jne    1b7e9 <png_combine_row+0x3a9>
mov    %r12,%rcx
jmpq   1b7e9 <png_combine_row+0x3a9>
cmp    $0x2,%r9b
jne    1b808 <png_combine_row+0x3c8>
mov    %r13,%r12
jmpq   1b808 <png_combine_row+0x3c8>
movzbl (%r11),%ebx
and    %r9b,%bl
not    %r9d
movzbl (%rsi),%r10d
and    %r10b,%r9b
or     %r9b,%bl
mov    %bl,(%rsi)
jmpq   1b864 <png_combine_row+0x424>
movzbl (%r15),%ecx
mov    %cl,(%rax)
mov    -0x48(%rbp),%r15
leaveq 
retq   
movzwl %r15w,%ecx
and    $0x1,%ecx
test   %ecx,%ecx
je     1b9ea <png_combine_row+0x5aa>
mov    %r14,-0x20(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r12,-0x10(%rbp)
mov    %rbx,-0x8(%rbp)
mov    %r10,%rbx
jmpq   1b8ea <png_combine_row+0x4aa>
lea    (%rbx,%r14,1),%rax
add    %rbx,%r15
mov    %r13,%r8
sub    %rbx,%r8
cmp    %r12,%r8
jb     1b8e7 <png_combine_row+0x4a7>
mov    -0x28(%rbp),%rdx
jmpq   1b8ea <png_combine_row+0x4aa>
cmp    $0x2,%r9b
jne    1b931 <png_combine_row+0x4f1>
mov    %r13,%r12
jmpq   1b931 <png_combine_row+0x4f1>
mov    %edx,%esi
mov    %rsi,%rcx
and    $0x1,%rcx
test   %rcx,%rcx
je     1ba10 <png_combine_row+0x5d0>
mov    %r14,-0x20(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r12,-0x10(%rbp)
mov    %rbx,-0x8(%rbp)
mov    %r10,%rbx
jmpq   1b8ea <png_combine_row+0x4aa>
mov    %r10,%rcx
and    $0x1,%rcx
test   %rcx,%rcx
je     1ba34 <png_combine_row+0x5f4>
mov    %r14,-0x20(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r12,-0x10(%rbp)
mov    %rbx,-0x8(%rbp)
mov    %r10,%rbx
jmpq   1b8ea <png_combine_row+0x4aa>
mov    %rax,%rcx
and    $0x3,%ecx
test   %ecx,%ecx
je     1ba4d <png_combine_row+0x60d>
sub    %edx,%r9d
mov    %r9d,%edx
and    $0xfffffffffffffffe,%rdx
mov    %rsi,%rcx
jmp    1ba86 <png_combine_row+0x646>
mov    %r15,%rcx
and    $0x3,%ecx
test   %ecx,%ecx
jne    1ba3e <png_combine_row+0x5fe>
mov    %rsi,%rcx
and    $0x3,%rcx
test   %rcx,%rcx
jne    1ba3e <png_combine_row+0x5fe>
mov    %r10,%rcx
and    $0x3,%rcx
test   %rcx,%rcx
jne    1ba3e <png_combine_row+0x5fe>
sub    %edx,%r9d
mov    %r9d,%ecx
and    $0xfffffffffffffffc,%rcx
mov    %rsi,%rdx
jmp    1baa9 <png_combine_row+0x669>
add    $0x2,%r15
add    $0x2,%rax
movzwl (%r15),%edi
mov    %di,(%rax)
add    $0xfffffffffffffffe,%rcx
test   %rcx,%rcx
jne    1ba7e <png_combine_row+0x63e>
cmp    %r8,%r10
jb     1bac2 <png_combine_row+0x682>
mov    -0x48(%rbp),%r15
leaveq 
retq   
add    $0x4,%r15
add    $0x4,%rax
mov    (%r15),%edi
mov    %edi,(%rax)
add    $0xfffffffffffffffc,%rdx
test   %rdx,%rdx
jne    1baa1 <png_combine_row+0x661>
cmp    %r8,%r10
jb     1bad9 <png_combine_row+0x699>
mov    -0x48(%rbp),%r15
leaveq 
retq   
lea    0x2(%r15,%rdx,1),%r15
lea    0x2(%rax,%rdx,1),%rax
sub    %r10,%r8
cmp    %rsi,%r8
jb     1baf8 <png_combine_row+0x6b8>
mov    %rsi,%rcx
jmp    1ba86 <png_combine_row+0x646>
lea    0x4(%r15,%rcx,1),%r15
lea    0x4(%rax,%rcx,1),%rax
sub    %r10,%r8
cmp    %rsi,%r8
jb     1bb15 <png_combine_row+0x6d5>
mov    %rsi,%rdx
jmp    1baa9 <png_combine_row+0x669>
add    $0x1,%r15
add    $0x1,%rax
movzbl (%r15),%ecx
mov    %cl,(%rax)
add    $0xffffffffffffffff,%r8
test   %r8,%r8
jne    1baf0 <png_combine_row+0x6b0>
mov    -0x48(%rbp),%r15
leaveq 
retq   
add    $0x1,%r15
add    $0x1,%rax
movzbl (%r15),%ecx
mov    %cl,(%rax)
add    $0xffffffffffffffff,%r8
test   %r8,%r8
jne    1bb0d <png_combine_row+0x6cd>
mov    -0x48(%rbp),%r15
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

000000000001bb30 <png_do_read_interlace>:
push   %rbp
mov    %rsp,%rbp
sub    $0x60,%rsp
test   %rsi,%rsi
jne    1bb3f <png_do_read_interlace+0xf>
leaveq 
retq   
test   %rdi,%rdi
jne    1bb46 <png_do_read_interlace+0x16>
leaveq 
retq   
lea    0x12ca7(%rip),%r8        # 2e7f4 <png_pass_inc.11>
movslq %edx,%rax
mov    (%r8,%rax,4),%r8d
mov    (%rdi),%edx
mov    %r8,%r11
imul   %edx,%r11d
mov    %r11,-0x8(%rbp)
xor    %eax,%eax
movzbl 0x13(%rdi),%r9d
cmp    $0x1,%r9b
jbe    1bc00 <png_do_read_interlace+0xd0>
cmp    $0x2,%r9b
je     1bc53 <png_do_read_interlace+0x123>
cmp    $0x4,%r9b
jne    1bc0a <png_do_read_interlace+0xda>
mov    $0xf0f,%r9d
mov    $0x4,%r10d
mov    %r15,-0x30(%rbp)
lea    -0x1(%rdx),%r15d
shr    %r15d
mov    %r15d,%r15d
add    %rsi,%r15
mov    %r14,-0x28(%rbp)
lea    -0x1(%r11),%r14d
shr    %r14d
mov    %r14d,%r14d
add    %r14,%rsi
and    $0x10000,%ecx
test   %ecx,%ecx
jne    1bcc9 <png_do_read_interlace+0x199>
mov    $0xfffffffe,%ecx
mov    %rcx,%r14
sub    %edx,%r14d
and    $0x1,%r14d
neg    %r14d
and    $0x4,%r14d
sub    %r11d,%ecx
and    $0x1,%ecx
neg    %ecx
and    $0x4,%ecx
mov    %rbx,-0x10(%rbp)
mov    %r12,-0x18(%rbp)
mov    %r13,-0x20(%rbp)
mov    %rax,%r12
mov    %r12,%r13
mov    %r10,%rbx
mov    %rbx,%r11
jmpq   1bd17 <png_do_read_interlace+0x1e7>
cmp    $0x1,%r9b
je     1bd42 <png_do_read_interlace+0x212>
lea    -0x60(%rbp),%r10
shr    $0x3,%r9d
movslq %r9d,%r9
lea    -0x1(%rdx),%ecx
mov    %ecx,%ecx
imul   %r9,%rcx
add    %rsi,%rcx
lea    -0x1(%r11),%edx
mov    %edx,%edx
imul   %r9,%rdx
add    %rsi,%rdx
mov    %r15,-0x30(%rbp)
mov    %r14,-0x28(%rbp)
mov    %rbx,-0x10(%rbp)
mov    %r12,-0x18(%rbp)
mov    %r13,-0x20(%rbp)
mov    %rdx,%rbx
mov    %r10,%r12
mov    %r9,%r13
mov    %rax,%r9
jmpq   1bdea <png_do_read_interlace+0x2ba>
mov    $0x3f3f,%r9d
mov    $0x6,%r10d
mov    %r15,-0x30(%rbp)
lea    -0x1(%rdx),%r15d
shr    $0x2,%r15d
mov    %r15d,%r15d
add    %rsi,%r15
mov    %r14,-0x28(%rbp)
lea    -0x1(%r11),%r14d
shr    $0x2,%r14d
mov    %r14d,%r14d
add    %r14,%rsi
and    $0x10000,%ecx
test   %ecx,%ecx
jne    1be1d <png_do_read_interlace+0x2ed>
mov    $0xfffffffc,%ecx
neg    %edx
add    %ecx,%edx
and    $0x3,%edx
lea    (%rdx,%rdx,1),%r14d
sub    %r11d,%ecx
and    $0x3,%ecx
add    %ecx,%ecx
mov    $0x2,%r11d
mov    %rbx,-0x10(%rbp)
mov    %r12,-0x18(%rbp)
mov    %r13,-0x20(%rbp)
mov    %rax,%rbx
mov    %rbx,%r13
mov    %r10,%r12
jmpq   1be63 <png_do_read_interlace+0x333>
lea    0x1(%rdx),%r14d
and    $0x1,%r14d
neg    %r14d
and    $0x4,%r14d
lea    0x1(%r11),%ecx
and    $0x1,%ecx
neg    %ecx
and    $0x4,%ecx
mov    $0xfffffffffffffffc,%r11
mov    %rbx,-0x10(%rbp)
mov    %r12,-0x18(%rbp)
mov    %r13,-0x20(%rbp)
mov    %rax,%rbx
mov    %rbx,%r13
mov    %r10,%r12
jmp    1bd17 <png_do_read_interlace+0x1e7>
mov    -0x50(%rbp),%rax
lea    -0x1(%rax),%r15
mov    %r12,%r14
mov    -0x58(%rbp),%rax
lea    0x1(%rax),%r13d
xor    %eax,%eax
mov    (%rdi),%edx
cmp    %r13d,%edx
jbe    1be8a <png_do_read_interlace+0x35a>
xchg   %rcx,%r14
movzbl (%r15),%edx
shr    %cl,%edx
mov    %rcx,-0x48(%rbp)
and    $0xf,%dl
mov    %r15,-0x50(%rbp)
mov    %r13,-0x58(%rbp)
mov    %r14,%rcx
jmpq   1beb9 <png_do_read_interlace+0x389>
mov    $0x7f7f,%r9d
mov    $0x7,%r10d
mov    %r15,-0x30(%rbp)
lea    -0x1(%rdx),%r15d
shr    $0x3,%r15d
mov    %r15d,%r15d
add    %rsi,%r15
mov    %r14,-0x28(%rbp)
lea    -0x1(%r11),%r14d
shr    $0x3,%r14d
mov    %r14d,%r14d
add    %r14,%rsi
and    $0x10000,%ecx
test   %ecx,%ecx
jne    1bedb <png_do_read_interlace+0x3ab>
mov    $0xfffffff8,%ecx
mov    %rcx,%r14
sub    %edx,%r14d
and    $0x7,%r14d
sub    %r11d,%ecx
and    $0x7,%ecx
mov    $0x1,%r11d
mov    %rbx,-0x10(%rbp)
mov    %r12,-0x18(%rbp)
mov    %r13,-0x20(%rbp)
mov    %rax,%r12
mov    %r12,%r13
mov    %r10,%rbx
jmpq   1bf1d <png_do_read_interlace+0x3ed>
mov    %r8,%r15
mov    %rbx,%rdi
mov    %r12,%rsi
mov    %r13,%rdx
callq  54c0 <memcpy@plt>
sub    %r13,%rbx
add    $0x1,%r14d
mov    %r15,%r8
cmp    %r14d,%r8d
jg     1bdb5 <png_do_read_interlace+0x285>
mov    -0x50(%rbp),%rcx
sub    %r13,%rcx
mov    -0x58(%rbp),%rax
lea    0x1(%rax),%r9d
xor    %eax,%eax
mov    -0x48(%rbp),%rdi
mov    (%rdi),%edx
cmp    %r9d,%edx
jbe    1be8a <png_do_read_interlace+0x35a>
mov    %r12,%r10
mov    %rcx,%rsi
mov    %r13,%rdx
mov    %rcx,-0x50(%rbp)
mov    %r9,-0x58(%rbp)
mov    %rdi,-0x48(%rbp)
mov    %r10,%rdi
mov    %rax,%r14
mov    %r8,%r15
callq  54c0 <memcpy@plt>
mov    %r15,%r8
jmp    1bdd0 <png_do_read_interlace+0x2a0>
lea    0x3(%rdx),%ecx
and    $0x3,%ecx
lea    (%rcx,%rcx,1),%r14d
lea    0x3(%r11),%ecx
and    $0x3,%ecx
add    %ecx,%ecx
mov    $0xfffffffffffffffe,%r11
mov    %rbx,-0x10(%rbp)
mov    %r12,-0x18(%rbp)
mov    %r13,-0x20(%rbp)
mov    %rax,%r12
mov    %r12,%r13
mov    %r10,%rbx
jmp    1be63 <png_do_read_interlace+0x333>
mov    -0x40(%rbp),%rax
lea    -0x1(%rax),%r15
mov    %rbx,%r14
mov    -0x58(%rbp),%rax
lea    0x1(%rax),%r13d
xor    %eax,%eax
mov    (%rdi),%edx
cmp    %r13d,%edx
jbe    1be8a <png_do_read_interlace+0x35a>
xchg   %rcx,%r14
movzbl (%r15),%edx
shr    %cl,%edx
mov    %rcx,-0x38(%rbp)
and    $0x3,%dl
mov    %r15,-0x40(%rbp)
mov    %r13,-0x58(%rbp)
mov    %r14,%rcx
jmpq   1bf52 <png_do_read_interlace+0x422>
mov    -0x8(%rbp),%rcx
mov    %ecx,(%rdi)
movzbl 0x13(%rdi),%eax
cmp    $0x7,%al
ja     1bf75 <png_do_read_interlace+0x445>
mov    %ecx,%ecx
imul   %rcx,%rax
add    $0x7,%rax
shr    $0x3,%rax
jmpq   1bf7f <png_do_read_interlace+0x44f>
add    $0xffffffffffffffff,%rsi
mov    %r12,%rcx
add    $0x1,%eax
cmp    %eax,%r8d
jg     1bf99 <png_do_read_interlace+0x469>
mov    -0x48(%rbp),%rax
cmp    %eax,%ebx
je     1bd02 <png_do_read_interlace+0x1d2>
lea    (%rax,%r11,1),%r14d
mov    -0x50(%rbp),%r15
jmpq   1bd0d <png_do_read_interlace+0x1dd>
lea    0x7(%rdx),%r14d
and    $0x7,%r14d
lea    0x7(%r11),%ecx
and    $0x7,%ecx
mov    $0xffffffffffffffff,%r11
mov    %rbx,-0x10(%rbp)
mov    %r12,-0x18(%rbp)
mov    %r13,-0x20(%rbp)
mov    %rax,%rbx
mov    %rbx,%r13
mov    %r10,%r12
jmp    1bf1d <png_do_read_interlace+0x3ed>
mov    -0x40(%rbp),%rax
lea    -0x1(%rax),%r15
mov    %r12,%r14
mov    -0x58(%rbp),%rax
lea    0x1(%rax),%r13d
xor    %eax,%eax
mov    (%rdi),%edx
cmp    %r13d,%edx
jbe    1be8a <png_do_read_interlace+0x35a>
xchg   %rcx,%r14
movzbl (%r15),%edx
shr    %cl,%edx
mov    %rcx,-0x38(%rbp)
and    $0x1,%dl
mov    %r15,-0x40(%rbp)
mov    %r13,-0x58(%rbp)
mov    %r14,%rcx
jmpq   1bfd6 <png_do_read_interlace+0x4a6>
add    $0xffffffffffffffff,%rsi
mov    %rbx,%rcx
add    $0x1,%eax
cmp    %eax,%r8d
jg     1bff4 <png_do_read_interlace+0x4c4>
mov    -0x38(%rbp),%rax
cmp    %eax,%r12d
je     1be4e <png_do_read_interlace+0x31e>
lea    (%rax,%r11,1),%r14d
mov    -0x40(%rbp),%r15
jmpq   1be59 <png_do_read_interlace+0x329>
shr    $0x3,%rax
mov    %ecx,%ecx
imul   %rcx,%rax
mov    %rax,0x8(%rdi)
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
mov    -0x10(%rbp),%rbx
mov    -0x28(%rbp),%r14
mov    -0x30(%rbp),%r15
leaveq 
retq   
mov    %rdx,%r14
shl    %cl,%r14d
mov    %rcx,%r15
mov    %r10,%rcx
sub    %r15d,%ecx
mov    %r9,%r13
shr    %cl,%r13d
movzbl (%rsi),%ecx
and    %cl,%r13b
or     %r13b,%r14b
mov    %r14b,(%rsi)
cmp    %r15d,%ebx
je     1beaf <png_do_read_interlace+0x37f>
lea    (%r15,%r11,1),%ecx
jmpq   1beb6 <png_do_read_interlace+0x386>
add    $0xffffffffffffffff,%rsi
mov    %r12,%rcx
add    $0x1,%eax
cmp    %eax,%r8d
jg     1c027 <png_do_read_interlace+0x4f7>
mov    -0x38(%rbp),%rax
cmp    %eax,%ebx
je     1bf08 <png_do_read_interlace+0x3d8>
lea    (%rax,%r11,1),%r14d
mov    -0x40(%rbp),%r15
jmpq   1bf13 <png_do_read_interlace+0x3e3>
mov    %rdx,%r13
shl    %cl,%r13d
mov    %rcx,%r15
mov    %r10,%rcx
sub    %r15d,%ecx
mov    %r9,%r14
shr    %cl,%r14d
movzbl (%rsi),%ecx
and    %cl,%r14b
or     %r14b,%r13b
mov    %r13b,(%rsi)
cmp    %r15d,%r12d
je     1bf48 <png_do_read_interlace+0x418>
lea    (%r15,%r11,1),%ecx
jmpq   1bf4f <png_do_read_interlace+0x41f>
mov    %rdx,%r13
shl    %cl,%r13d
mov    %rcx,%r15
mov    %r10,%rcx
sub    %r15d,%ecx
mov    %r9,%r14
shr    %cl,%r14d
movzbl (%rsi),%ecx
and    %cl,%r14b
or     %r14b,%r13b
mov    %r13b,(%rsi)
cmp    %r15d,%ebx
je     1bfcc <png_do_read_interlace+0x49c>
lea    (%r15,%r11,1),%ecx
jmpq   1bfd3 <png_do_read_interlace+0x4a3>
nopw   0x0(%rax,%rax,1)

000000000001c060 <png_read_filter_row>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
test   %r8d,%r8d
jg     1c06f <png_read_filter_row+0xf>
leaveq 
retq   
cmp    $0x4,%r8d
jle    1c077 <png_read_filter_row+0x17>
leaveq 
retq   
mov    0x478(%rdi),%rax
test   %rax,%rax
je     1c091 <png_read_filter_row+0x31>
mov    %rdi,%rax
mov    %rsi,%rdi
mov    %rdx,%rsi
mov    %rcx,%rdx
jmp    1c0e2 <png_read_filter_row+0x82>
mov    %rdi,%rax
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rdi,%rbx
mov    %rax,%rdi
mov    %rdx,%r12
mov    %rcx,%r13
mov    %r8,%r14
mov    %rsi,%r15
callq  20dd0 <png_init_filter_functions>
mov    %rbx,%rax
mov    %r13,%rdx
mov    %r12,%rsi
mov    %r15,%rdi
mov    %r14,%r8
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
lea    -0x1(%r8),%ecx
movslq %ecx,%rcx
callq  *0x478(%rax,%rcx,8)
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   (%rax)

000000000001c100 <png_read_IDAT_data>:
push   %rbp
mov    %rsp,%rbp
sub    $0x430,%rsp
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rsi,0x158(%rdi)
movl   $0x0,0x160(%rdi)
xor    %ebx,%ebx
mov    $0x400,%r15d
lea    -0x430(%rbp),%r14
mov    $0xffffffff,%ecx
mov    $0x1,%eax
mov    $0xfffffffe,%r8d
test   %rsi,%rsi
je     1c15c <png_read_IDAT_data+0x5c>
mov    %rdi,%r12
mov    %rsi,%r13
jmp    1c18d <png_read_IDAT_data+0x8d>
mov    %rdi,%r12
mov    %rsi,%r13
mov    %rbx,%rdx
jmp    1c18d <png_read_IDAT_data+0x8d>
test   %eax,%eax
jne    1c1b9 <png_read_IDAT_data+0xb9>
test   %rdx,%rdx
je     1c272 <png_read_IDAT_data+0x172>
mov    $0x1,%eax
mov    $0xffffffff,%ecx
mov    $0xfffffffe,%r8d
lea    -0x430(%rbp),%r14
xor    %ebx,%ebx
mov    0x148(%r12),%esi
test   %esi,%esi
je     1c28d <png_read_IDAT_data+0x18d>
test   %r13,%r13
jne    1c296 <png_read_IDAT_data+0x196>
mov    %r14,0x158(%r12)
mov    %rbx,%rax
mov    %r15,%rcx
jmpq   1c2a3 <png_read_IDAT_data+0x1a3>
mov    %rax,%rsi
mov    %r12,%rdi
callq  6920 <png_zstream_error>
test   %r13,%r13
jne    1c2dc <png_read_IDAT_data+0x1dc>
mov    %r12,%rdi
mov    0x170(%rdi),%rsi
callq  5230 <png_chunk_benign_error@plt>
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
mov    0x160(%r12),%ecx
lea    (%rbx,%rcx,1),%rdx
movl   $0x0,0x160(%r12)
cmp    $0x1,%eax
jne    1c167 <png_read_IDAT_data+0x67>
movq   $0x0,0x158(%r12)
mov    0x12c(%r12),%eax
or     $0x8,%eax
mov    %eax,0x12c(%r12)
mov    0x130(%r12),%eax
or     $0x8,%eax
mov    %eax,0x130(%r12)
mov    0x148(%r12),%eax
test   %eax,%eax
jne    1c25d <png_read_IDAT_data+0x15d>
mov    0x248(%r12),%eax
test   %eax,%eax
je     1c272 <png_read_IDAT_data+0x172>
mov    %rdx,%rbx
lea    0x125bf(%rip),%rsi        # 2e826 <png_pass_inc.11+0x32>
mov    %r12,%rdi
callq  5230 <png_chunk_benign_error@plt>
mov    %rbx,%rdx
test   %rdx,%rdx
jne    1c2eb <png_read_IDAT_data+0x1eb>
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
mov    %rdx,-0x30(%rbp)
jmpq   1c347 <png_read_IDAT_data+0x247>
cmp    %r8,%rdx
ja     1c29e <png_read_IDAT_data+0x19e>
mov    %rdx,%rcx
mov    %ecx,%esi
sub    %rsi,%rdx
mov    %ecx,0x160(%r12)
mov    %rbx,%rsi
mov    %rdx,%rbx
mov    %rax,%r14
mov    %r12,%rdi
callq  1ca90 <png_zlib_inflate>
test   %r14,%r14
jne    1c1f2 <png_read_IDAT_data+0xf2>
mov    0x160(%r12),%ecx
neg    %rcx
add    %r15,%rcx
lea    (%rcx,%rbx,1),%rdx
jmpq   1c1fe <png_read_IDAT_data+0xfe>
mov    %r12,%rdi
mov    0x170(%rdi),%rsi
callq  5060 <png_chunk_error@plt>
test   %r13,%r13
jne    1c3c6 <png_read_IDAT_data+0x2c6>
mov    %r12,%rdi
lea    0x1253e(%rip),%rsi        # 2e83c <png_pass_inc.11+0x48>
callq  5230 <png_chunk_benign_error@plt>
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
mov    %r12,%rdi
mov    %rbx,%rsi
callq  1b280 <png_crc_finish>
mov    %r12,%rdi
callq  1b170 <png_read_chunk_header>
mov    %eax,0x248(%r12)
mov    0x218(%r12),%eax
cmp    $0x49444154,%eax
jne    1c3d5 <png_read_IDAT_data+0x2d5>
mov    0x248(%r12),%eax
test   %eax,%eax
je     1c319 <png_read_IDAT_data+0x219>
mov    0x468(%r12),%r15d
cmp    %r15d,%eax
jae    1c363 <png_read_IDAT_data+0x263>
mov    %rax,%r15
mov    %rbx,%rdx
mov    %r15d,%esi
mov    %r12,%rdi
callq  200b0 <png_read_buffer>
mov    %rax,%rbx
mov    %r12,%rdi
mov    %rbx,%rsi
mov    %r15,%rdx
callq  1b220 <png_crc_read>
mov    0x248(%r12),%eax
sub    %r15d,%eax
mov    %eax,0x248(%r12)
mov    %rbx,0x140(%r12)
mov    %r15d,0x148(%r12)
mov    -0x30(%rbp),%rdx
mov    $0x1,%eax
mov    $0xffffffff,%ecx
mov    $0xfffffffe,%r8d
xor    %ebx,%ebx
mov    $0x400,%r15d
jmpq   1c19d <png_read_IDAT_data+0x9d>
mov    %r12,%rdi
lea    0x12440(%rip),%rsi        # 2e810 <png_pass_inc.11+0x1c>
callq  5470 <png_error@plt>
mov    %r12,%rdi
lea    0x12431(%rip),%rsi        # 2e810 <png_pass_inc.11+0x1c>
callq  5470 <png_error@plt>
data16 nopw %cs:0x0(%rax,%rax,1)
nop

000000000001c3f0 <png_read_finish_IDAT>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    0x130(%rdi),%eax
and    $0x8,%eax
test   %eax,%eax
je     1c414 <png_read_finish_IDAT+0x24>
mov    0x138(%rdi),%eax
cmp    $0x49444154,%eax
je     1c450 <png_read_finish_IDAT+0x60>
leaveq 
retq   
xor    %esi,%esi
mov    %rsi,%rdx
mov    %rdi,%rax
mov    %r15,-0x8(%rbp)
mov    %rdi,%r15
mov    %rax,%rdi
callq  1c100 <png_read_IDAT_data>
movq   $0x0,0x158(%r15)
mov    0x130(%r15),%eax
mov    %rax,%rcx
and    $0x8,%ecx
test   %ecx,%ecx
je     1c47c <png_read_finish_IDAT+0x8c>
mov    %r15,%rdi
mov    -0x8(%rbp),%r15
jmp    1c405 <png_read_finish_IDAT+0x15>
movq   $0x0,0x140(%rdi)
movl   $0x0,0x148(%rdi)
movl   $0x0,0x138(%rdi)
mov    0x248(%rdi),%esi
callq  1b280 <png_crc_finish>
leaveq 
retq   
mov    0x12c(%r15),%ecx
or     $0x8,%ecx
mov    %ecx,0x12c(%r15)
or     $0x8,%eax
mov    %eax,0x130(%r15)
mov    %r15,%rdi
mov    -0x8(%rbp),%r15
jmpq   1c405 <png_read_finish_IDAT+0x15>
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

000000000001c4b0 <png_read_finish_row>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    0x214(%rdi),%eax
add    $0x1,%eax
mov    %eax,0x214(%rdi)
mov    0x200(%rdi),%ecx
cmp    %eax,%ecx
jbe    1c4d3 <png_read_finish_row+0x23>
leaveq 
retq   
movzbl 0x264(%rdi),%eax
test   %al,%al
jne    1c4e5 <png_read_finish_row+0x35>
callq  1c3f0 <png_read_finish_IDAT>
leaveq 
retq   
movl   $0x0,0x214(%rdi)
mov    0x220(%rdi),%rax
xor    %esi,%esi
mov    0x208(%rdi),%rdx
add    $0x1,%rdx
mov    %r15,-0x8(%rbp)
mov    %rdi,%r15
mov    %rax,%rdi
callq  5350 <memset@plt>
mov    %r15,%rdi
lea    0x1233b(%rip),%rcx        # 2e857 <png_pass_inc.16>
lea    0x1232d(%rip),%rsi        # 2e850 <png_pass_start.15>
lea    0x1233b(%rip),%r8        # 2e865 <png_pass_yinc.18>
lea    0x1232d(%rip),%r9        # 2e85e <png_pass_ystart.17>
jmp    1c59b <png_read_finish_row+0xeb>
movzbl %al,%edx
movzbl (%rdx,%rcx,1),%r10d
mov    0x1f8(%rdi),%eax
lea    -0x1(%r10,%rax,1),%eax
movzbl (%rdx,%rsi,1),%edx
sub    %edx,%eax
xor    %edx,%edx
div    %r10d
mov    %eax,0x210(%rdi)
mov    0x134(%rdi),%eax
and    $0x2,%eax
test   %eax,%eax
jne    1c5af <png_read_finish_row+0xff>
movzbl 0x265(%rdi),%edx
movzbl (%rdx,%r8,1),%r10d
mov    0x1fc(%rdi),%eax
lea    -0x1(%r10,%rax,1),%eax
movzbl (%rdx,%r9,1),%edx
sub    %edx,%eax
xor    %edx,%edx
div    %r10d
mov    %eax,0x200(%rdi)
test   %eax,%eax
je     1c59b <png_read_finish_row+0xeb>
mov    0x210(%rdi),%eax
test   %eax,%eax
jne    1c5af <png_read_finish_row+0xff>
movzbl 0x265(%rdi),%eax
add    $0x1,%eax
mov    %al,0x265(%rdi)
cmp    $0x6,%al
jbe    1c533 <png_read_finish_row+0x83>
movzbl 0x265(%rdi),%eax
cmp    $0x6,%al
jbe    1c5c3 <png_read_finish_row+0x113>
mov    -0x8(%rbp),%r15
jmpq   1c4de <png_read_finish_row+0x2e>
mov    -0x8(%rbp),%r15
leaveq 
retq   
nopl   0x0(%rax)

000000000001c5d0 <png_read_start_row>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x10(%rbp)
mov    %r14,%r15
mov    %r13,%r14
mov    %r12,%r13
mov    %rbx,%r12
mov    %rdi,%rbx
callq  16860 <png_init_read_transformations>
movzbl 0x264(%rbx),%eax
test   %al,%al
jne    1c615 <png_read_start_row+0x45>
mov    0x1fc(%rbx),%eax
mov    %eax,0x200(%rbx)
mov    0x1f8(%rbx),%eax
mov    %eax,0x210(%rbx)
jmp    1c675 <png_read_start_row+0xa5>
mov    0x134(%rbx),%eax
and    $0x2,%eax
test   %eax,%eax
je     1c630 <png_read_start_row+0x60>
mov    0x1fc(%rbx),%eax
mov    %eax,0x200(%rbx)
jmp    1c642 <png_read_start_row+0x72>
mov    0x1fc(%rbx),%eax
add    $0x7,%eax
shr    $0x3,%eax
mov    %eax,0x200(%rbx)
movzbl 0x265(%rbx),%esi
lea    0x12223(%rip),%rax        # 2e873 <png_pass_inc.20>
movzbl (%rsi,%rax,1),%ecx
mov    0x1f8(%rbx),%eax
lea    -0x1(%rcx,%rax,1),%eax
lea    0x12207(%rip),%rdx        # 2e86c <png_pass_start.19>
movzbl (%rsi,%rdx,1),%edx
sub    %edx,%eax
xor    %edx,%edx
div    %ecx
mov    %eax,0x210(%rbx)
movzbl 0x26a(%rbx),%edx
mov    $0x8,%edi
mov    0x134(%rbx),%eax
and    $0x4,%eax
test   %eax,%eax
jne    1c740 <png_read_start_row+0x170>
mov    $0x20,%ecx
mov    $0x18,%esi
mov    0x134(%rbx),%eax
and    $0x1000,%eax
test   %eax,%eax
jne    1c757 <png_read_start_row+0x187>
mov    0x134(%rbx),%eax
mov    %rax,%rdi
and    $0x200,%edi
test   %edi,%edi
jne    1c797 <png_read_start_row+0x1c7>
mov    $0x40,%r8d
mov    0x134(%rbx),%eax
and    $0x8000,%eax
test   %eax,%eax
jne    1c7b8 <png_read_start_row+0x1e8>
mov    0x134(%rbx),%eax
mov    %rax,%rdi
and    $0x4000,%edi
test   %edi,%edi
jne    1c7e4 <png_read_start_row+0x214>
mov    0x134(%rbx),%eax
and    $0x100000,%eax
test   %eax,%eax
jne    1c82b <png_read_start_row+0x25b>
mov    0x1f8(%rbx),%eax
add    $0x7,%eax
and    $0xfffffff8,%eax
mov    %eax,%eax
mov    %edx,%ecx
mov    %dl,0x26e(%rbx)
movb   $0x0,0x26f(%rbx)
cmp    $0x7,%edx
ja     1c84c <png_read_start_row+0x27c>
imul   %rax,%rcx
lea    0x7(%rcx),%rax
shr    $0x3,%rax
jmpq   1c854 <png_read_start_row+0x284>
movzbl 0x268(%rbx),%eax
cmp    $0x7,%al
ja     1c692 <png_read_start_row+0xc2>
mov    %rdi,%rdx
jmpq   1c692 <png_read_start_row+0xc2>
movzbl 0x267(%rbx),%eax
cmp    $0x3,%al
je     1c8b2 <png_read_start_row+0x2e2>
test   %al,%al
je     1c8ca <png_read_start_row+0x2fa>
cmp    $0x2,%al
jne    1c6af <png_read_start_row+0xdf>
movzwl 0x260(%rbx),%eax
test   %ax,%ax
je     1c6af <png_read_start_row+0xdf>
shl    $0x2,%edx
mov    $0xaaaaaaab,%eax
mul    %edx
shr    %edx
jmpq   1c6af <png_read_start_row+0xdf>
mov    %rax,%rdi
and    $0x1000,%edi
test   %edi,%edi
jne    1c8ea <png_read_start_row+0x31a>
and    $0xfffffdff,%eax
mov    %eax,0x134(%rbx)
jmpq   1c6c6 <png_read_start_row+0xf6>
movzbl 0x267(%rbx),%eax
test   %al,%al
je     1c900 <png_read_start_row+0x330>
cmp    $0x2,%al
je     1c7d3 <png_read_start_row+0x203>
cmp    $0x3,%al
jne    1c6df <png_read_start_row+0x10f>
cmp    $0x20,%edx
jbe    1c911 <png_read_start_row+0x341>
mov    %r8,%rdx
jmpq   1c6df <png_read_start_row+0x10f>
movzwl 0x260(%rbx),%edi
test   %di,%di
jne    1c919 <png_read_start_row+0x349>
and    $0x8000,%eax
test   %eax,%eax
jne    1c92a <png_read_start_row+0x35a>
movzbl 0x267(%rbx),%eax
cmp    $0x4,%al
je     1c92a <png_read_start_row+0x35a>
cmp    $0x8,%edx
jbe    1c93b <png_read_start_row+0x36b>
cmp    $0x6,%al
je     1c94b <png_read_start_row+0x37b>
mov    $0x30,%edx
jmpq   1c6f6 <png_read_start_row+0x126>
movzbl 0x129(%rbx),%eax
movzbl 0x128(%rbx),%ecx
imul   %ecx,%eax
cmp    %edx,%eax
jbe    1c709 <png_read_start_row+0x139>
mov    %rax,%rdx
jmpq   1c709 <png_read_start_row+0x139>
shr    $0x3,%rcx
imul   %rcx,%rax
lea    0x7(%rdx),%ecx
shr    $0x3,%ecx
mov    %ecx,%ecx
lea    0x31(%rcx,%rax,1),%rax
cmp    0x450(%rbx),%rax
jbe    1c9bb <png_read_start_row+0x3eb>
mov    0x3f8(%rbx),%rsi
mov    %rbx,%rdi
mov    %r15,-0x8(%rbp)
mov    %rax,%r15
callq  5790 <png_free@plt>
mov    0x470(%rbx),%rsi
mov    %rbx,%rdi
callq  5790 <png_free@plt>
movzbl 0x264(%rbx),%eax
test   %al,%al
jne    1c953 <png_read_start_row+0x383>
mov    %rbx,%rdi
mov    %r15,%rsi
callq  5800 <png_malloc@plt>
jmpq   1c95e <png_read_start_row+0x38e>
movzwl 0x260(%rbx),%eax
test   %ax,%ax
jne    1ca3a <png_read_start_row+0x46a>
mov    %rsi,%rdx
jmpq   1c6af <png_read_start_row+0xdf>
cmp    $0x7,%edx
jbe    1c8d2 <png_read_start_row+0x302>
mov    %rdx,%rdi
movzwl 0x260(%rbx),%eax
test   %ax,%ax
jne    1ca42 <png_read_start_row+0x472>
mov    %rdi,%rdx
jmpq   1c6af <png_read_start_row+0xdf>
movzbl 0x268(%rbx),%eax
cmp    $0xf,%al
ja     1c6c6 <png_read_start_row+0xf6>
add    %edx,%edx
jmpq   1c6c6 <png_read_start_row+0xf6>
cmp    $0x8,%edx
jbe    1ca4a <png_read_start_row+0x47a>
mov    %rcx,%rdx
jmpq   1c6df <png_read_start_row+0x10f>
mov    %rcx,%rdx
jmpq   1c6df <png_read_start_row+0x10f>
mov    %rax,%rdi
and    $0x1000,%edi
test   %edi,%edi
je     1c7f4 <png_read_start_row+0x224>
cmp    $0x10,%edx
jbe    1ca54 <png_read_start_row+0x484>
mov    %r8,%rdx
jmpq   1c6f6 <png_read_start_row+0x126>
cmp    $0x6,%al
je     1ca5c <png_read_start_row+0x48c>
mov    %rsi,%rdx
jmpq   1c6f6 <png_read_start_row+0x126>
mov    %r8,%rdx
jmpq   1c6f6 <png_read_start_row+0x126>
mov    %rbx,%rdi
mov    %r15,%rsi
callq  5780 <png_calloc@plt>
mov    %rax,0x3f8(%rbx)
mov    %rbx,%rdi
mov    %r15,%rsi
callq  5800 <png_malloc@plt>
mov    %rax,0x470(%rbx)
mov    0x3f8(%rbx),%rcx
add    $0x20,%rcx
mov    %rcx,%rdx
and    $0xf,%rdx
sub    %rdx,%rcx
add    $0xffffffffffffffff,%rcx
mov    %rcx,0x228(%rbx)
add    $0x20,%rax
mov    %rax,%rcx
and    $0xf,%rcx
sub    %rcx,%rax
add    $0xffffffffffffffff,%rax
mov    %rax,0x220(%rbx)
mov    %r15,0x450(%rbx)
mov    -0x8(%rbp),%r15
mov    0x208(%rbx),%rax
cmp    $0xfffffffffffffffe,%rax
ja     1ca64 <png_read_start_row+0x494>
mov    0x220(%rbx),%rdi
xor    %esi,%esi
lea    0x1(%rax),%rdx
callq  5350 <memset@plt>
mov    0x458(%rbx),%rsi
test   %rsi,%rsi
je     1ca08 <png_read_start_row+0x438>
movq   $0x0,0x460(%rbx)
movq   $0x0,0x458(%rbx)
mov    %rbx,%rdi
callq  5790 <png_free@plt>
mov    $0x49444154,%esi
mov    %rbx,%rdi
callq  201c0 <png_inflate_claim>
test   %eax,%eax
jne    1ca73 <png_read_start_row+0x4a3>
mov    0x130(%rbx),%eax
or     $0x40,%eax
mov    %eax,0x130(%rbx)
mov    %r12,%rbx
mov    %r13,%r12
mov    %r14,%r13
mov    %r15,%r14
mov    -0x10(%rbp),%r15
leaveq 
retq   
mov    %rcx,%rdx
jmpq   1c6af <png_read_start_row+0xdf>
lea    (%rdi,%rdi,1),%edx
jmpq   1c6af <png_read_start_row+0xdf>
mov    $0x10,%edx
jmpq   1c6df <png_read_start_row+0x10f>
mov    %rcx,%rdx
jmpq   1c6f6 <png_read_start_row+0x126>
mov    %rcx,%rdx
jmpq   1c6f6 <png_read_start_row+0x126>
mov    %rbx,%rdi
lea    0x11e0c(%rip),%rsi        # 2e87a <png_pass_inc.20+0x7>
callq  5470 <png_error@plt>
mov    %rbx,%rdi
mov    0x170(%rdi),%rsi
callq  5470 <png_error@plt>
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   (%rax)

000000000001ca90 <png_zlib_inflate>:
push   %rbp
mov    %rsp,%rbp
movzbl 0x270(%rdi),%eax
test   %al,%al
jne    1caad <png_zlib_inflate+0x1d>
add    $0x140,%rdi
callq  5120 <inflate@plt>
leaveq 
retq   
mov    0x148(%rdi),%eax
test   %eax,%eax
je     1ca9f <png_zlib_inflate+0xf>
mov    0x140(%rdi),%rax
movzbl (%rax),%eax
shr    $0x4,%eax
cmp    $0x7,%eax
jg     1cad2 <png_zlib_inflate+0x42>
movb   $0x0,0x270(%rdi)
jmp    1ca9f <png_zlib_inflate+0xf>
lea    0x11dce(%rip),%rax        # 2e8a7 <png_pass_inc.20+0x34>
mov    %rax,0x170(%rdi)
mov    $0xfffffffffffffffd,%rax
leaveq 
retq   
nopl   0x0(%rax)

000000000001caf0 <png_handle_IHDR>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    0x12c(%rdi),%eax
mov    %rax,%rcx
and    $0x1,%ecx
test   %ecx,%ecx
jne    1cc03 <png_handle_IHDR+0x113>
cmp    $0xd,%edx
jne    1cc0f <png_handle_IHDR+0x11f>
or     $0x1,%eax
mov    %eax,0x12c(%rdi)
lea    -0x25(%rbp),%rax
mov    $0xd,%edx
mov    %rdi,%rcx
mov    %rax,%r8
mov    %r13,-0x8(%rbp)
mov    %r14,-0x10(%rbp)
mov    %r15,-0x18(%rbp)
mov    %r12,%r13
mov    %rbx,%r12
mov    %rdi,%rbx
mov    %rcx,%rdi
mov    %rsi,%r14
mov    %r8,%rsi
mov    %rax,%r15
callq  1b220 <png_crc_read>
xor    %esi,%esi
mov    %rbx,%rdi
callq  1b280 <png_crc_finish>
mov    %r15,%rsi
mov    %rbx,%rdi
callq  5730 <png_get_uint_31@plt>
mov    %rax,%r15
lea    -0x21(%rbp),%rsi
mov    %rbx,%rdi
callq  5730 <png_get_uint_31@plt>
movzbl -0x1d(%rbp),%r8d
movzbl -0x19(%rbp),%r11d
movzbl -0x1c(%rbp),%r9d
movzbl -0x1a(%rbp),%edi
movzbl -0x1b(%rbp),%r10d
mov    %r15d,0x1f8(%rbx)
mov    %eax,0x1fc(%rbx)
mov    %r8b,0x268(%rbx)
mov    %r11b,0x264(%rbx)
mov    %r9b,0x267(%rbx)
mov    %dil,0x3dc(%rbx)
mov    %r10b,0x418(%rbx)
mov    $0x1,%esi
cmp    $0x3,%r9b
jbe    1cc1b <png_handle_IHDR+0x12b>
cmp    $0x4,%r9b
jne    1cc28 <png_handle_IHDR+0x138>
mov    $0x2,%esi
mov    %rax,%rcx
mov    %r8,%rax
imul   %sil
mov    %al,0x26a(%rbx)
mov    %sil,0x26b(%rbx)
cmp    $0x7,%al
ja     1cc35 <png_handle_IHDR+0x145>
movzbl %al,%eax
mov    %r15d,%edx
imul   %rdx,%rax
lea    0x7(%rax),%rdx
shr    $0x3,%rdx
jmp    1cc43 <png_handle_IHDR+0x153>
lea    0x11cba(%rip),%rsi        # 2e8c4 <png_pass_inc.20+0x51>
callq  5060 <png_chunk_error@plt>
lea    0x11cbb(%rip),%rsi        # 2e8d1 <png_pass_inc.20+0x5e>
callq  5060 <png_chunk_error@plt>
cmp    $0x2,%r9b
jne    1cbd5 <png_handle_IHDR+0xe5>
mov    $0x3,%esi
jmp    1cbd5 <png_handle_IHDR+0xe5>
cmp    $0x6,%r9b
jne    1cbd5 <png_handle_IHDR+0xe5>
mov    $0x4,%esi
jmp    1cbd5 <png_handle_IHDR+0xe5>
movzbl %al,%edx
shr    $0x3,%rdx
mov    %r15d,%eax
imul   %rax,%rdx
sub    $0x10,%rsp
mov    %rdx,0x208(%rbx)
mov    %r11d,(%rsp)
mov    %r10d,0x8(%rsp)
mov    %edi,0x10(%rsp)
mov    %r15,%rdx
mov    %r14,%rsi
mov    %rbx,%rdi
callq  5460 <png_set_IHDR@plt>
mov    %r12,%rbx
mov    %r13,%r12
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
leaveq 
retq   
nopl   (%rax)

000000000001cc80 <png_handle_PLTE>:
push   %rbp
mov    %rsp,%rbp
sub    $0x350,%rsp
mov    0x12c(%rdi),%eax
mov    %rax,%rcx
and    $0x1,%ecx
test   %ecx,%ecx
je     1cd0d <png_handle_PLTE+0x8d>
mov    %rax,%rcx
and    $0x2,%ecx
test   %ecx,%ecx
jne    1cd19 <png_handle_PLTE+0x99>
mov    %rax,%rcx
and    $0x4,%ecx
test   %ecx,%ecx
jne    1cd25 <png_handle_PLTE+0xa5>
or     $0x2,%eax
mov    %eax,0x12c(%rdi)
movzbl 0x267(%rdi),%eax
and    $0x2,%eax
test   %eax,%eax
je     1cd4f <png_handle_PLTE+0xcf>
cmp    $0x300,%edx
jbe    1cd79 <png_handle_PLTE+0xf9>
mov    %rdx,%rsi
mov    %r15,%r8
mov    %rdi,%rax
mov    %r8,-0x48(%rbp)
mov    %rdi,%r15
mov    %rax,%rdi
callq  1b280 <png_crc_finish>
lea    0x11bdc(%rip),%rsi        # 2e8d1 <png_pass_inc.20+0x5e>
movzbl 0x267(%r15),%eax
cmp    $0x3,%al
jne    1cdb3 <png_handle_PLTE+0x133>
mov    %r15,%rdi
callq  5060 <png_chunk_error@plt>
lea    0x11bc5(%rip),%rsi        # 2e8d9 <png_pass_inc.20+0x66>
callq  5060 <png_chunk_error@plt>
lea    0x11bc6(%rip),%rsi        # 2e8e6 <png_pass_inc.20+0x73>
callq  5060 <png_chunk_error@plt>
mov    %rdi,%rax
mov    %r15,-0x48(%rbp)
mov    %rdx,%rsi
mov    %rdi,%r15
mov    %rax,%rdi
callq  1b280 <png_crc_finish>
mov    %r15,%rdi
lea    0x11b80(%rip),%rsi        # 2e8c4 <png_pass_inc.20+0x51>
callq  5230 <png_chunk_benign_error@plt>
mov    -0x48(%rbp),%r15
leaveq 
retq   
mov    %rdi,%rax
mov    %r15,-0x48(%rbp)
mov    %rdx,%rsi
mov    %rdi,%r15
mov    %rax,%rdi
callq  1b280 <png_crc_finish>
mov    %r15,%rdi
lea    0x11b82(%rip),%rsi        # 2e8f0 <png_pass_inc.20+0x7d>
callq  5230 <png_chunk_benign_error@plt>
mov    -0x48(%rbp),%r15
leaveq 
retq   
mov    %r15,%r8
mov    %rsi,%r9
mov    %rdx,%rsi
mov    $0xaaaaaaab,%eax
mul    %esi
shr    %edx
lea    (%rdx,%rdx,2),%eax
cmp    %eax,%esi
jne    1ccdc <png_handle_PLTE+0x5c>
mov    $0x1,%r15d
mov    %r15,-0x30(%rbp)
movzbl 0x267(%rdi),%eax
cmp    $0x3,%al
je     1cdc1 <png_handle_PLTE+0x141>
mov    $0x100,%r15d
jmp    1cdcb <png_handle_PLTE+0x14b>
mov    %r15,%rdi
callq  5230 <png_chunk_benign_error@plt>
mov    -0x48(%rbp),%r15
leaveq 
retq   
movzbl 0x268(%rdi),%ecx
shl    %cl,%r15d
mov    $0x55555556,%eax
imul   %esi
mov    %rdx,%rax
shr    $0x1f,%eax
add    %edx,%eax
cmp    %eax,%r15d
jl     1cde2 <png_handle_PLTE+0x162>
mov    %rax,%r15
lea    -0x34b(%rbp),%rcx
lea    -0x4b(%rbp),%r10
mov    $0x3,%edx
xor    %eax,%eax
mov    %rsi,-0x48(%rbp)
mov    %r9,-0x40(%rbp)
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r8,-0x28(%rbp)
mov    %rcx,%rbx
mov    %rax,%r12
mov    %r10,%r13
mov    %r12,-0x38(%rbp)
jmp    1ce4e <png_handle_PLTE+0x1ce>
mov    %rdi,%r14
mov    %r13,%rsi
callq  1b220 <png_crc_read>
movzbl -0x4b(%rbp),%eax
mov    %al,(%rbx)
movzbl -0x4a(%rbp),%eax
mov    %al,0x1(%rbx)
movzbl -0x49(%rbp),%eax
mov    %al,0x2(%rbx)
add    $0x3,%rbx
add    $0x1,%r12d
mov    %r14,%rdi
mov    $0x3,%edx
cmp    %r12d,%r15d
jg     1ce1f <png_handle_PLTE+0x19f>
lea    (%r15,%r15,2),%eax
mov    -0x48(%rbp),%rsi
sub    %eax,%esi
mov    %rdi,%rbx
callq  1b280 <png_crc_finish>
mov    %r15,%rcx
mov    %rbx,%rdi
mov    -0x40(%rbp),%r12
mov    %r12,%rsi
lea    -0x34b(%rbp),%rdx
callq  5530 <png_set_PLTE@plt>
movzwl 0x260(%rbx),%eax
test   %ax,%ax
jne    1ce9b <png_handle_PLTE+0x21b>
test   %r12,%r12
je     1cec0 <png_handle_PLTE+0x240>
mov    0x8(%r12),%eax
and    $0x10,%eax
test   %eax,%eax
je     1cec0 <png_handle_PLTE+0x240>
test   %r12,%r12
movw   $0x0,0x260(%rbx)
je     1ceb1 <png_handle_PLTE+0x231>
movw   $0x0,0x22(%r12)
lea    0x11a51(%rip),%rsi        # 2e909 <png_pass_inc.20+0x96>
mov    %rbx,%rdi
callq  5230 <png_chunk_benign_error@plt>
test   %r12,%r12
je     1ced7 <png_handle_PLTE+0x257>
mov    0x8(%r12),%eax
and    $0x40,%eax
test   %eax,%eax
jne    1cef6 <png_handle_PLTE+0x276>
pushq  -0x30(%rbp)
popq   -0x38(%rbp)
mov    -0x38(%rbp),%rax
test   %rax,%rax
jne    1cf0d <png_handle_PLTE+0x28d>
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
lea    0x11a1f(%rip),%rsi        # 2e91c <png_pass_inc.20+0xa9>
mov    %rbx,%rdi
callq  5230 <png_chunk_benign_error@plt>
pushq  -0x30(%rbp)
popq   -0x38(%rbp)
jmp    1ced7 <png_handle_PLTE+0x257>
mov    0x8(%r12),%eax
and    $0x20,%eax
test   %eax,%eax
jne    1cf2f <png_handle_PLTE+0x2af>
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
mov    %rbx,%rdi
lea    0x119f6(%rip),%rsi        # 2e92f <png_pass_inc.20+0xbc>
callq  5230 <png_chunk_benign_error@plt>
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nop

000000000001cf60 <png_handle_IEND>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    0x12c(%rdi),%eax
mov    %rax,%rcx
and    $0x1,%ecx
test   %ecx,%ecx
je     1cfaf <png_handle_IEND+0x4f>
mov    %rax,%rcx
and    $0x4,%ecx
test   %ecx,%ecx
je     1cfaf <png_handle_IEND+0x4f>
or     $0x18,%eax
mov    %eax,0x12c(%rdi)
mov    %rdi,%rax
mov    %rdx,%rsi
mov    %r15,-0x10(%rbp)
mov    %rdi,-0x8(%rbp)
mov    %rax,%rdi
mov    %rdx,%r15
callq  1b280 <png_crc_finish>
test   %r15d,%r15d
jne    1cfbb <png_handle_IEND+0x5b>
mov    -0x10(%rbp),%r15
leaveq 
retq   
lea    0x1190e(%rip),%rsi        # 2e8c4 <png_pass_inc.20+0x51>
callq  5060 <png_chunk_error@plt>
lea    0x1190f(%rip),%rsi        # 2e8d1 <png_pass_inc.20+0x5e>
mov    -0x8(%rbp),%rdi
callq  5230 <png_chunk_benign_error@plt>
mov    -0x10(%rbp),%r15
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   0x0(%rax)

000000000001cfe0 <png_handle_bKGD>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    0x12c(%rdi),%eax
mov    %rax,%rcx
and    $0x1,%ecx
test   %ecx,%ecx
je     1d06b <png_handle_bKGD+0x8b>
mov    %rax,%rcx
and    $0x4,%ecx
test   %ecx,%ecx
jne    1d07e <png_handle_bKGD+0x9e>
movzbl 0x267(%rdi),%ecx
cmp    $0x3,%cl
je     1d077 <png_handle_bKGD+0x97>
test   %rsi,%rsi
jne    1d0a8 <png_handle_bKGD+0xc8>
movzbl 0x267(%rdi),%eax
cmp    $0x3,%al
jne    1d0e0 <png_handle_bKGD+0x100>
mov    $0x1,%eax
cmp    %edx,%eax
jne    1d0f5 <png_handle_bKGD+0x115>
lea    -0x20(%rbp),%rdx
mov    %rdi,%rcx
mov    %r15,-0x8(%rbp)
mov    %rsi,-0x10(%rbp)
mov    %rdx,%rsi
mov    %rax,%rdx
mov    %rdi,%r15
mov    %rcx,%rdi
callq  1b220 <png_crc_read>
xor    %esi,%esi
mov    %r15,%rdi
callq  1b280 <png_crc_finish>
test   %eax,%eax
je     1d11f <png_handle_bKGD+0x13f>
mov    -0x8(%rbp),%r15
leaveq 
retq   
lea    0x11867(%rip),%rsi        # 2e8d9 <png_pass_inc.20+0x66>
callq  5060 <png_chunk_error@plt>
and    $0x2,%eax
test   %eax,%eax
jne    1d00e <png_handle_bKGD+0x2e>
mov    %rdi,%rax
mov    %r15,-0x10(%rbp)
mov    %rdx,%rsi
mov    %rdi,%r15
mov    %rax,%rdi
callq  1b280 <png_crc_finish>
mov    %r15,%rdi
lea    0x11827(%rip),%rsi        # 2e8c4 <png_pass_inc.20+0x51>
callq  5230 <png_chunk_benign_error@plt>
mov    -0x10(%rbp),%r15
leaveq 
retq   
mov    0x8(%rsi),%eax
and    $0x20,%eax
test   %eax,%eax
je     1d017 <png_handle_bKGD+0x37>
mov    %rdi,%rax
mov    %r15,-0x10(%rbp)
mov    %rdx,%rsi
mov    %rdi,%r15
mov    %rax,%rdi
callq  1b280 <png_crc_finish>
mov    %r15,%rdi
lea    0x11811(%rip),%rsi        # 2e8e6 <png_pass_inc.20+0x73>
callq  5230 <png_chunk_benign_error@plt>
mov    -0x10(%rbp),%r15
leaveq 
retq   
and    $0x2,%eax
test   %eax,%eax
jg     1d179 <png_handle_bKGD+0x199>
mov    $0x2,%eax
jmpq   1d02b <png_handle_bKGD+0x4b>
mov    %rdi,%rax
mov    %r15,-0x10(%rbp)
mov    %rdx,%rsi
mov    %rdi,%r15
mov    %rax,%rdi
callq  1b280 <png_crc_finish>
mov    %r15,%rdi
lea    0x117bd(%rip),%rsi        # 2e8d1 <png_pass_inc.20+0x5e>
callq  5230 <png_chunk_benign_error@plt>
mov    -0x10(%rbp),%r15
leaveq 
retq   
movzbl 0x267(%r15),%eax
cmp    $0x3,%al
je     1d183 <png_handle_bKGD+0x1a3>
and    $0x2,%eax
test   %eax,%eax
je     1d1bd <png_handle_bKGD+0x1dd>
movb   $0x0,-0x1a(%rbp)
movzbl -0x1f(%rbp),%ecx
movzbl -0x20(%rbp),%eax
shl    $0x8,%eax
add    %ecx,%eax
mov    %ax,-0x18(%rbp)
movzbl -0x1d(%rbp),%ecx
movzbl -0x1e(%rbp),%eax
shl    $0x8,%eax
add    %ecx,%eax
mov    %ax,-0x16(%rbp)
movzbl -0x1b(%rbp),%ecx
movzbl -0x1c(%rbp),%eax
shl    $0x8,%eax
add    %ecx,%eax
mov    %ax,-0x14(%rbp)
movw   $0x0,-0x12(%rbp)
mov    -0x10(%rbp),%rsi
jmp    1d1ab <png_handle_bKGD+0x1cb>
mov    $0x6,%eax
jmpq   1d02b <png_handle_bKGD+0x4b>
mov    -0x10(%rbp),%rsi
test   %rsi,%rsi
movzbl -0x20(%rbp),%ecx
mov    %cl,-0x1a(%rbp)
jne    1d1e4 <png_handle_bKGD+0x204>
movw   $0x0,-0x14(%rbp)
movw   $0x0,-0x16(%rbp)
movw   $0x0,-0x18(%rbp)
movw   $0x0,-0x12(%rbp)
mov    %r15,%rdi
lea    -0x1a(%rbp),%rdx
callq  5110 <png_set_bKGD@plt>
mov    -0x8(%rbp),%r15
leaveq 
retq   
movb   $0x0,-0x1a(%rbp)
movzbl -0x1f(%rbp),%ecx
movzbl -0x20(%rbp),%eax
shl    $0x8,%eax
add    %ecx,%eax
mov    %ax,-0x12(%rbp)
mov    %ax,-0x14(%rbp)
mov    %ax,-0x16(%rbp)
mov    %ax,-0x18(%rbp)
mov    -0x10(%rbp),%rsi
jmp    1d1ab <png_handle_bKGD+0x1cb>
movzwl 0x20(%rsi),%eax
test   %ax,%ax
je     1d193 <png_handle_bKGD+0x1b3>
cmp    %cx,%ax
jbe    1d22a <png_handle_bKGD+0x24a>
mov    0x250(%r15),%rax
lea    (%rcx,%rcx,2),%rcx
movzbl (%rax,%rcx,1),%eax
mov    %ax,-0x18(%rbp)
mov    0x250(%r15),%rax
movzbl 0x1(%rax,%rcx,1),%eax
mov    %ax,-0x16(%rbp)
mov    0x250(%r15),%rax
movzbl 0x2(%rax,%rcx,1),%eax
mov    %ax,-0x14(%rbp)
jmpq   1d1a5 <png_handle_bKGD+0x1c5>
mov    %r15,%rdi
lea    0x1170e(%rip),%rsi        # 2e942 <png_pass_inc.20+0xcf>
callq  5230 <png_chunk_benign_error@plt>
mov    -0x8(%rbp),%r15
leaveq 
retq   
nop

000000000001d240 <png_handle_cHRM>:
push   %rbp
mov    %rsp,%rbp
sub    $0x60,%rsp
mov    0x12c(%rdi),%eax
mov    %rax,%rcx
and    $0x1,%ecx
test   %ecx,%ecx
je     1d2a4 <png_handle_cHRM+0x64>
and    $0x6,%eax
test   %eax,%eax
jne    1d2b0 <png_handle_cHRM+0x70>
cmp    $0x20,%edx
jne    1d2da <png_handle_cHRM+0x9a>
lea    -0x58(%rbp),%rax
mov    $0x20,%edx
mov    %rdi,%rcx
mov    %r15,-0x10(%rbp)
mov    %rsi,-0x8(%rbp)
mov    %rax,%rsi
mov    %rdi,%r15
mov    %rcx,%rdi
callq  1b220 <png_crc_read>
xor    %eax,%eax
mov    %r15,%rdi
mov    %rax,%rsi
mov    %r15,-0x18(%rbp)
mov    %rax,%r15
callq  1b280 <png_crc_finish>
test   %eax,%eax
je     1d304 <png_handle_cHRM+0xc4>
mov    -0x10(%rbp),%r15
leaveq 
retq   
lea    0x1162e(%rip),%rsi        # 2e8d9 <png_pass_inc.20+0x66>
callq  5060 <png_chunk_error@plt>
mov    %rdi,%rax
mov    %r15,-0x18(%rbp)
mov    %rdx,%rsi
mov    %rdi,%r15
mov    %rax,%rdi
callq  1b280 <png_crc_finish>
mov    %r15,%rdi
lea    0x115f5(%rip),%rsi        # 2e8c4 <png_pass_inc.20+0x51>
callq  5230 <png_chunk_benign_error@plt>
mov    -0x18(%rbp),%r15
leaveq 
retq   
mov    %rdi,%rax
mov    %r15,-0x18(%rbp)
mov    %rdx,%rsi
mov    %rdi,%r15
mov    %rax,%rdi
callq  1b280 <png_crc_finish>
mov    %r15,%rdi
lea    0x115d8(%rip),%rsi        # 2e8d1 <png_pass_inc.20+0x5e>
callq  5230 <png_chunk_benign_error@plt>
mov    -0x18(%rbp),%r15
leaveq 
retq   
mov    %r15,%rdi
lea    -0x58(%rbp),%rsi
callq  20060 <png_get_fixed_point>
mov    %eax,-0x20(%rbp)
lea    -0x54(%rbp),%rsi
mov    %r15,%rdi
callq  20060 <png_get_fixed_point>
mov    %eax,-0x1c(%rbp)
lea    -0x50(%rbp),%rsi
mov    %r15,%rdi
callq  20060 <png_get_fixed_point>
mov    %eax,-0x38(%rbp)
lea    -0x4c(%rbp),%rsi
mov    %r15,%rdi
callq  20060 <png_get_fixed_point>
mov    %eax,-0x34(%rbp)
lea    -0x48(%rbp),%rsi
mov    %r15,%rdi
callq  20060 <png_get_fixed_point>
mov    %eax,-0x30(%rbp)
lea    -0x44(%rbp),%rsi
mov    %r15,%rdi
callq  20060 <png_get_fixed_point>
mov    %eax,-0x2c(%rbp)
lea    -0x40(%rbp),%rsi
mov    %r15,%rdi
callq  20060 <png_get_fixed_point>
mov    %eax,-0x28(%rbp)
mov    %r15,%rdi
lea    -0x3c(%rbp),%rsi
callq  20060 <png_get_fixed_point>
mov    %eax,-0x24(%rbp)
movslq -0x20(%rbp),%rcx
cmp    $0xffffffff,%ecx
je     1d3df <png_handle_cHRM+0x19f>
movslq -0x1c(%rbp),%rcx
cmp    $0xffffffff,%ecx
je     1d3df <png_handle_cHRM+0x19f>
movslq -0x38(%rbp),%rcx
cmp    $0xffffffff,%ecx
je     1d3df <png_handle_cHRM+0x19f>
movslq -0x34(%rbp),%rcx
cmp    $0xffffffff,%ecx
je     1d3df <png_handle_cHRM+0x19f>
movslq -0x30(%rbp),%rcx
cmp    $0xffffffff,%ecx
je     1d3df <png_handle_cHRM+0x19f>
movslq -0x2c(%rbp),%rcx
cmp    $0xffffffff,%ecx
je     1d3df <png_handle_cHRM+0x19f>
movslq -0x28(%rbp),%rcx
cmp    $0xffffffff,%ecx
je     1d3df <png_handle_cHRM+0x19f>
cmp    $0xffffffff,%eax
je     1d3df <png_handle_cHRM+0x19f>
mov    -0x18(%rbp),%r15
movzwl 0x4e2(%r15),%eax
mov    %rax,%rcx
and    $0x8000,%ecx
test   %ecx,%ecx
jle    1d3f5 <png_handle_cHRM+0x1b5>
mov    -0x10(%rbp),%r15
leaveq 
retq   
lea    0x1156a(%rip),%rsi        # 2e950 <png_pass_inc.20+0xdd>
mov    -0x18(%rbp),%rdi
callq  5230 <png_chunk_benign_error@plt>
mov    -0x10(%rbp),%r15
leaveq 
retq   
mov    %rax,%rcx
and    $0x10,%ecx
test   %ecx,%ecx
jg     1d435 <png_handle_cHRM+0x1f5>
or     $0x10,%ax
mov    %ax,0x4e2(%r15)
lea    0x498(%r15),%rsi
lea    -0x38(%rbp),%rdx
mov    $0x1,%ecx
mov    %r15,%rdi
callq  7070 <png_colorspace_set_chromaticities>
mov    %r15,%rdi
mov    -0x8(%rbp),%rsi
callq  7020 <png_colorspace_sync>
mov    -0x10(%rbp),%r15
leaveq 
retq   
or     $0x8000,%ax
mov    %ax,0x4e2(%r15)
mov    %r15,%rdi
mov    -0x8(%rbp),%rsi
callq  7020 <png_colorspace_sync>
mov    %r15,%rdi
lea    0x1148f(%rip),%rsi        # 2e8e6 <png_pass_inc.20+0x73>
callq  5230 <png_chunk_benign_error@plt>
mov    -0x10(%rbp),%r15
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   (%rax)

000000000001d470 <png_handle_eXIf>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    0x12c(%rdi),%eax
and    $0x1,%eax
test   %eax,%eax
je     1d50e <png_handle_eXIf+0x9e>
cmp    $0x1,%edx
jbe    1d51a <png_handle_eXIf+0xaa>
test   %rsi,%rsi
je     1d544 <png_handle_eXIf+0xd4>
mov    0x8(%rsi),%eax
and    $0x10000,%eax
test   %eax,%eax
jne    1d544 <png_handle_eXIf+0xd4>
mov    0x12c(%rsi),%eax
or     $0x8000,%eax
mov    %eax,0x12c(%rsi)
mov    %edx,%ecx
mov    %rdi,%rax
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rdx,%r13
mov    %rsi,%r14
mov    %rcx,%rsi
mov    %rbx,%r15
mov    %rdi,%rbx
mov    %rax,%rdi
callq  5150 <png_malloc_warn@plt>
mov    %rax,0xf8(%r14)
test   %rax,%rax
je     1d56e <png_handle_eXIf+0xfe>
lea    -0x29(%rbp),%rax
mov    $0x1,%edx
xor    %ecx,%ecx
mov    %r15,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %rcx,%r12
mov    %rax,%r15
jmpq   1d5c4 <png_handle_eXIf+0x154>
lea    0x113c4(%rip),%rsi        # 2e8d9 <png_pass_inc.20+0x66>
callq  5060 <png_chunk_error@plt>
mov    %rdi,%rax
mov    %r15,-0x28(%rbp)
mov    %rdx,%rsi
mov    %rdi,%r15
mov    %rax,%rdi
callq  1b280 <png_crc_finish>
mov    %r15,%rdi
lea    0x11426(%rip),%rsi        # 2e95f <png_pass_inc.20+0xec>
callq  5230 <png_chunk_benign_error@plt>
mov    -0x28(%rbp),%r15
leaveq 
retq   
mov    %rdi,%rax
mov    %r15,-0x28(%rbp)
mov    %rdx,%rsi
mov    %rdi,%r15
mov    %rax,%rdi
callq  1b280 <png_crc_finish>
mov    %r15,%rdi
lea    0x11383(%rip),%rsi        # 2e8e6 <png_pass_inc.20+0x73>
callq  5230 <png_chunk_benign_error@plt>
mov    -0x28(%rbp),%r15
leaveq 
retq   
mov    %r13,%rsi
mov    %rbx,%rdi
callq  1b280 <png_crc_finish>
mov    %rbx,%rdi
lea    0x113e6(%rip),%rsi        # 2e969 <png_pass_inc.20+0xf6>
callq  5230 <png_chunk_benign_error@plt>
mov    %r15,%rbx
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
leaveq 
retq   
mov    %rbx,%rdi
mov    %r15,%rsi
callq  1b220 <png_crc_read>
movzbl -0x29(%rbp),%edx
mov    0xf8(%r14),%rcx
mov    %r12d,%eax
mov    %dl,(%rcx,%rax,1)
cmp    $0x1,%r12d
je     1d5ed <png_handle_eXIf+0x17d>
add    $0x1,%r12d
mov    $0x1,%edx
cmp    %r12d,%r13d
ja     1d599 <png_handle_eXIf+0x129>
mov    %rbx,%rdi
xor    %esi,%esi
callq  1b280 <png_crc_finish>
test   %eax,%eax
je     1d653 <png_handle_eXIf+0x1e3>
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
leaveq 
retq   
movzbl -0x29(%rbp),%ecx
cmp    $0x4d,%cl
je     1d5bb <png_handle_eXIf+0x14b>
cmp    $0x49,%cl
je     1d5bb <png_handle_eXIf+0x14b>
mov    0xf8(%r14),%rax
movzbl (%rax),%eax
cmp    %al,%cl
je     1d5bb <png_handle_eXIf+0x14b>
mov    %r13,%rsi
mov    %rbx,%rdi
callq  1b280 <png_crc_finish>
lea    0x1135c(%rip),%rsi        # 2e977 <png_pass_inc.20+0x104>
mov    %rbx,%rdi
callq  5230 <png_chunk_benign_error@plt>
mov    %rbx,%rdi
mov    0xf8(%r14),%rsi
callq  5790 <png_free@plt>
movq   $0x0,0xf8(%r14)
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
leaveq 
retq   
mov    %r13,%rdx
mov    0xf8(%r14),%rcx
mov    %rbx,%rdi
mov    %r14,%rsi
callq  5430 <png_set_eXIf_1@plt>
mov    %rbx,%rdi
mov    0xf8(%r14),%rsi
callq  5790 <png_free@plt>
movq   $0x0,0xf8(%r14)
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

000000000001d6a0 <png_handle_gAMA>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    0x12c(%rdi),%eax
mov    %rax,%rcx
and    $0x1,%ecx
test   %ecx,%ecx
je     1d6fa <png_handle_gAMA+0x5a>
and    $0x6,%eax
test   %eax,%eax
jne    1d706 <png_handle_gAMA+0x66>
cmp    $0x4,%edx
jne    1d730 <png_handle_gAMA+0x90>
lea    -0x14(%rbp),%rax
mov    $0x4,%edx
mov    %rdi,%rcx
mov    %r15,-0x10(%rbp)
mov    %rsi,-0x8(%rbp)
mov    %rax,%rsi
mov    %rdi,%r15
mov    %rcx,%rdi
callq  1b220 <png_crc_read>
xor    %esi,%esi
mov    %r15,%rdi
callq  1b280 <png_crc_finish>
test   %eax,%eax
je     1d75a <png_handle_gAMA+0xba>
mov    -0x10(%rbp),%r15
leaveq 
retq   
lea    0x111d8(%rip),%rsi        # 2e8d9 <png_pass_inc.20+0x66>
callq  5060 <png_chunk_error@plt>
mov    %rdi,%rax
mov    %r15,-0x10(%rbp)
mov    %rdx,%rsi
mov    %rdi,%r15
mov    %rax,%rdi
callq  1b280 <png_crc_finish>
mov    %r15,%rdi
lea    0x1119f(%rip),%rsi        # 2e8c4 <png_pass_inc.20+0x51>
callq  5230 <png_chunk_benign_error@plt>
mov    -0x10(%rbp),%r15
leaveq 
retq   
mov    %rdi,%rax
mov    %r15,-0x10(%rbp)
mov    %rdx,%rsi
mov    %rdi,%r15
mov    %rax,%rdi
callq  1b280 <png_crc_finish>
mov    %r15,%rdi
lea    0x11182(%rip),%rsi        # 2e8d1 <png_pass_inc.20+0x5e>
callq  5230 <png_chunk_benign_error@plt>
mov    -0x10(%rbp),%r15
leaveq 
retq   
xor    %edi,%edi
lea    -0x14(%rbp),%rsi
callq  20060 <png_get_fixed_point>
mov    %rax,%rdx
lea    0x498(%r15),%rsi
mov    %r15,%rdi
callq  6ed0 <png_colorspace_set_gamma>
mov    %r15,%rdi
mov    -0x8(%rbp),%rsi
callq  7020 <png_colorspace_sync>
mov    -0x10(%rbp),%r15
leaveq 
retq   
nopl   0x0(%rax)

000000000001d790 <png_handle_hIST>:
push   %rbp
mov    %rsp,%rbp
sub    $0x240,%rsp
mov    0x12c(%rdi),%eax
mov    %rax,%rcx
and    $0x1,%ecx
test   %ecx,%ecx
je     1d81a <png_handle_hIST+0x8a>
mov    %rax,%rcx
and    $0x4,%ecx
test   %ecx,%ecx
jne    1d826 <png_handle_hIST+0x96>
and    $0x2,%eax
test   %eax,%eax
je     1d826 <png_handle_hIST+0x96>
test   %rsi,%rsi
jne    1d850 <png_handle_hIST+0xc0>
mov    %rdx,%rcx
shr    %ecx
movzwl 0x258(%rdi),%eax
cmp    %ecx,%eax
jne    1d888 <png_handle_hIST+0xf8>
cmp    $0x100,%ecx
ja     1d888 <png_handle_hIST+0xf8>
xor    %r8d,%r8d
lea    -0x32(%rbp),%rdx
mov    $0x2,%eax
mov    %r15,-0x30(%rbp)
mov    %rsi,-0x8(%rbp)
mov    %rbx,-0x10(%rbp)
mov    %r12,-0x18(%rbp)
mov    %r13,-0x20(%rbp)
mov    %r14,-0x28(%rbp)
mov    %r8,%rbx
mov    %rcx,%r12
mov    %rax,%r13
mov    %rdx,%r14
jmpq   1d8dd <png_handle_hIST+0x14d>
lea    0x110b8(%rip),%rsi        # 2e8d9 <png_pass_inc.20+0x66>
callq  5060 <png_chunk_error@plt>
mov    %rdi,%rax
mov    %r15,-0x30(%rbp)
mov    %rdx,%rsi
mov    %rdi,%r15
mov    %rax,%rdi
callq  1b280 <png_crc_finish>
mov    %r15,%rdi
lea    0x1107f(%rip),%rsi        # 2e8c4 <png_pass_inc.20+0x51>
callq  5230 <png_chunk_benign_error@plt>
mov    -0x30(%rbp),%r15
leaveq 
retq   
mov    0x8(%rsi),%eax
and    $0x40,%eax
test   %eax,%eax
je     1d7c5 <png_handle_hIST+0x35>
mov    %rdi,%rax
mov    %r15,-0x30(%rbp)
mov    %rdx,%rsi
mov    %rdi,%r15
mov    %rax,%rdi
callq  1b280 <png_crc_finish>
mov    %r15,%rdi
lea    0x11069(%rip),%rsi        # 2e8e6 <png_pass_inc.20+0x73>
callq  5230 <png_chunk_benign_error@plt>
mov    -0x30(%rbp),%r15
leaveq 
retq   
mov    %rdi,%rax
mov    %r15,-0x30(%rbp)
mov    %rdx,%rsi
mov    %rdi,%r15
mov    %rax,%rdi
callq  1b280 <png_crc_finish>
mov    %r15,%rdi
lea    0x1102a(%rip),%rsi        # 2e8d1 <png_pass_inc.20+0x5e>
callq  5230 <png_chunk_benign_error@plt>
mov    -0x30(%rbp),%r15
leaveq 
retq   
mov    %rdi,%r15
mov    %r14,%rsi
mov    %r13,%rdx
callq  1b220 <png_crc_read>
movzbl -0x31(%rbp),%ecx
movzbl -0x32(%rbp),%eax
shl    $0x8,%eax
add    %eax,%ecx
mov    %ebx,%eax
mov    %cx,-0x232(%rbp,%rax,2)
add    $0x1,%ebx
mov    %r15,%rdi
cmp    %r12d,%ebx
jb     1d8b2 <png_handle_hIST+0x122>
mov    %rdi,%rbx
xor    %esi,%esi
callq  1b280 <png_crc_finish>
test   %eax,%eax
je     1d906 <png_handle_hIST+0x176>
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
mov    -0x10(%rbp),%rbx
mov    -0x30(%rbp),%r15
leaveq 
retq   
mov    %rbx,%rdi
lea    -0x232(%rbp),%rdx
mov    -0x8(%rbp),%rsi
callq  5190 <png_set_hIST@plt>
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
mov    -0x10(%rbp),%rbx
mov    -0x30(%rbp),%r15
leaveq 
retq   
nop

000000000001d930 <png_handle_iCCP>:
push   %rbp
mov    %rsp,%rbp
sub    $0x550,%rsp
mov    %edx,-0x54c(%rbp)
mov    0x12c(%rdi),%eax
mov    %rax,%rcx
and    $0x1,%ecx
test   %ecx,%ecx
je     1da1a <png_handle_iCCP+0xea>
and    $0x6,%eax
test   %eax,%eax
jne    1da26 <png_handle_iCCP+0xf6>
mov    -0x54c(%rbp),%eax
cmp    $0xd,%eax
jbe    1da53 <png_handle_iCCP+0x123>
movzwl 0x4e2(%rdi),%ecx
mov    %rcx,%rdx
and    $0x8000,%edx
test   %edx,%edx
jg     1da7d <png_handle_iCCP+0x14d>
xor    %r8d,%r8d
mov    %r8,-0x38(%rbp)
and    $0x4,%ecx
test   %ecx,%ecx
je     1da87 <png_handle_iCCP+0x157>
lea    0x110b3(%rip),%rcx        # 2ea53 <png_pass_inc.20+0x1e0>
test   %r8d,%r8d
jne    1d9e3 <png_handle_iCCP+0xb3>
mov    -0x54c(%rbp),%edx
mov    %rdi,%rax
mov    %r14,-0x60(%rbp)
mov    %r15,-0x68(%rbp)
mov    %r13,-0x58(%rbp)
mov    %rdi,%r13
mov    %rax,%rdi
mov    %rcx,%r14
mov    %rsi,%r15
mov    %rdx,%rsi
callq  1b280 <png_crc_finish>
mov    %r14,%rcx
mov    %r15,%rsi
mov    %r13,%rdi
mov    -0x58(%rbp),%r13
mov    -0x68(%rbp),%r15
mov    -0x60(%rbp),%r14
movzwl 0x4e2(%rdi),%eax
or     $0x8000,%ax
mov    %ax,0x4e2(%rdi)
mov    %rdi,%rax
mov    %r15,-0x68(%rbp)
mov    %rdi,-0x50(%rbp)
mov    %rax,%rdi
mov    %rcx,%r15
callq  7020 <png_colorspace_sync>
test   %r15,%r15
jne    1dad3 <png_handle_iCCP+0x1a3>
mov    -0x68(%rbp),%r15
leaveq 
retq   
lea    0x10eb8(%rip),%rsi        # 2e8d9 <png_pass_inc.20+0x66>
callq  5060 <png_chunk_error@plt>
mov    -0x54c(%rbp),%esi
mov    %rdi,%rax
mov    %r15,-0x68(%rbp)
mov    %rdi,%r15
mov    %rax,%rdi
callq  1b280 <png_crc_finish>
mov    %r15,%rdi
lea    0x10e7c(%rip),%rsi        # 2e8c4 <png_pass_inc.20+0x51>
callq  5230 <png_chunk_benign_error@plt>
mov    -0x68(%rbp),%r15
leaveq 
retq   
mov    %rdi,%rcx
mov    %r15,-0x68(%rbp)
mov    %rax,%rsi
mov    %rdi,%r15
mov    %rcx,%rdi
callq  1b280 <png_crc_finish>
mov    %r15,%rdi
lea    0x10eed(%rip),%rsi        # 2e95f <png_pass_inc.20+0xec>
callq  5230 <png_chunk_benign_error@plt>
mov    -0x68(%rbp),%r15
leaveq 
retq   
mov    %rax,%rsi
callq  1b280 <png_crc_finish>
leaveq 
retq   
cmp    $0x50,%eax
jbe    1da91 <png_handle_iCCP+0x161>
mov    $0x51,%eax
lea    -0x545(%rbp),%rcx
mov    %rdi,%r8
mov    %rax,%rdx
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rsi,-0x48(%rbp)
mov    %rcx,%rsi
mov    %rax,%r14
mov    %rdi,%r15
mov    %r8,%rdi
callq  1b220 <png_crc_read>
mov    -0x54c(%rbp),%esi
sub    %r14d,%esi
mov    %esi,-0x54c(%rbp)
cmp    $0xa,%esi
jbe    1dae5 <png_handle_iCCP+0x1b5>
xor    %eax,%eax
jmp    1db1d <png_handle_iCCP+0x1ed>
mov    %r15,%rsi
mov    -0x50(%rbp),%rdi
callq  5230 <png_chunk_benign_error@plt>
mov    -0x68(%rbp),%r15
leaveq 
retq   
mov    %r15,%rdi
callq  1b280 <png_crc_finish>
mov    %r15,%rdi
lea    0x10e68(%rip),%rsi        # 2e95f <png_pass_inc.20+0xec>
callq  5230 <png_chunk_benign_error@plt>
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
leaveq 
retq   
cmp    %eax,%r14d
jbe    1db22 <png_handle_iCCP+0x1f2>
mov    %eax,%ecx
movsbq -0x545(%rbp,%rcx,1),%rcx
test   %cl,%cl
je     1db22 <png_handle_iCCP+0x1f2>
add    $0x1,%eax
cmp    $0x4f,%eax
jbe    1db06 <png_handle_iCCP+0x1d6>
lea    0x10f1e(%rip),%rcx        # 2ea47 <png_pass_inc.20+0x1d4>
test   %eax,%eax
jne    1db44 <png_handle_iCCP+0x214>
mov    %r15,%rdi
mov    -0x48(%rbp),%rsi
xor    %r8d,%r8d
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
jmpq   1d9a0 <png_handle_iCCP+0x70>
cmp    $0x4f,%eax
jbe    1db60 <png_handle_iCCP+0x230>
mov    %r15,%rdi
mov    -0x48(%rbp),%rsi
xor    %r8d,%r8d
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
jmpq   1d9a0 <png_handle_iCCP+0x70>
lea    0x10ec9(%rip),%rcx        # 2ea30 <png_pass_inc.20+0x1bd>
lea    0x1(%rax),%r8d
cmp    %r8d,%r14d
ja     1db87 <png_handle_iCCP+0x257>
mov    %r15,%rdi
mov    -0x48(%rbp),%rsi
xor    %r8d,%r8d
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
jmpq   1d9a0 <png_handle_iCCP+0x70>
mov    %r8d,%edx
movsbq -0x545(%rbp,%rdx,1),%rdx
test   %dl,%dl
je     1dbae <png_handle_iCCP+0x27e>
mov    %r15,%rdi
mov    -0x48(%rbp),%rsi
xor    %r8d,%r8d
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
jmpq   1d9a0 <png_handle_iCCP+0x70>
mov    $0x69434350,%esi
mov    %r15,%rdi
mov    %r13,-0x18(%rbp)
mov    %r8,-0x40(%rbp)
mov    %rax,%r13
callq  201c0 <png_inflate_claim>
test   %eax,%eax
je     1dbec <png_handle_iCCP+0x2bc>
mov    %r15,%rdi
mov    0x170(%rdi),%rcx
mov    -0x18(%rbp),%r13
mov    -0x48(%rbp),%rsi
xor    %r8d,%r8d
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
jmpq   1d9a0 <png_handle_iCCP+0x70>
lea    -0x4f4(%rbp),%rdi
lea    0x10d9c(%rip),%rsi        # 2e996 <png_pass_inc.20+0x123>
mov    $0x84,%edx
callq  54c0 <memcpy@plt>
movq   $0x84,-0x70(%rbp)
lea    0x2(%r13),%ecx
mov    %ecx,%eax
lea    -0x545(%rbp,%rax,1),%rax
mov    %rax,0x140(%r15)
sub    %ecx,%r14d
mov    %r14d,0x148(%r15)
sub    $0x10,%rsp
movl   $0x0,(%rsp)
lea    -0x470(%rbp),%rsi
mov    $0x400,%edx
lea    -0x54c(%rbp),%rcx
lea    -0x70(%rbp),%r9
mov    %r15,%rdi
lea    -0x4f4(%rbp),%r8
callq  207f0 <png_inflate_read>
add    $0x10,%rsp
mov    -0x70(%rbp),%rax
test   %rax,%rax
je     1dc95 <png_handle_iCCP+0x365>
mov    %r15,%rdi
mov    0x170(%rdi),%rcx
mov    -0x48(%rbp),%rsi
xor    %r8d,%r8d
movl   $0x0,0x138(%rdi)
mov    -0x18(%rbp),%r13
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
jmpq   1d9a0 <png_handle_iCCP+0x70>
movzbl -0x4f4(%rbp),%eax
shl    $0x18,%eax
movzbl -0x4f3(%rbp),%ecx
shl    $0x10,%ecx
add    %eax,%ecx
movzbl -0x4f2(%rbp),%eax
shl    $0x8,%eax
add    %ecx,%eax
movzbl -0x4f1(%rbp),%ecx
lea    (%rcx,%rax,1),%r13d
lea    0x498(%r15),%r14
mov    %r15,%rdi
mov    %r14,%rsi
lea    -0x545(%rbp),%rdx
mov    %r13,%rcx
callq  74b0 <png_icc_check_length>
test   %eax,%eax
jne    1dcf1 <png_handle_iCCP+0x3c1>
mov    %r15,%rdi
mov    -0x48(%rbp),%rsi
xor    %r8d,%r8d
mov    %r8,%rcx
jmp    1dc7a <png_handle_iCCP+0x34a>
movzbl 0x267(%r15),%r9d
mov    %r15,%rdi
mov    %r14,%rsi
lea    -0x545(%rbp),%rdx
mov    %r13,%rcx
lea    -0x4f4(%rbp),%r8
callq  7530 <png_icc_check_header>
test   %eax,%eax
jne    1dd2b <png_handle_iCCP+0x3fb>
mov    %r15,%rdi
mov    -0x48(%rbp),%rsi
xor    %r8d,%r8d
mov    %r8,%rcx
jmpq   1dc7a <png_handle_iCCP+0x34a>
movzbl -0x471(%rbp),%r10d
movzbl -0x474(%rbp),%ecx
movzbl -0x473(%rbp),%r9d
movzbl -0x472(%rbp),%r8d
lea    0x10c18(%rip),%rax        # 2e969 <png_pass_inc.20+0xf6>
mov    %rax,-0x30(%rbp)
mov    %r13d,%esi
mov    %rsi,-0x50(%rbp)
mov    $0x2,%edx
mov    %r15,%rdi
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r14,-0x58(%rbp)
mov    %r13,-0x60(%rbp)
mov    %r10,%rbx
mov    %rcx,%r12
mov    %r8,%r13
mov    %r9,%r14
callq  200b0 <png_read_buffer>
test   %rax,%rax
jne    1dda8 <png_handle_iCCP+0x478>
mov    %r15,%rdi
lea    0x10bd5(%rip),%rcx        # 2e969 <png_pass_inc.20+0xf6>
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x48(%rbp),%rsi
xor    %r8d,%r8d
jmpq   1dc7a <png_handle_iCCP+0x34a>
mov    %rax,%rdi
mov    %r15,-0x68(%rbp)
mov    %rbx,%r15
mov    %rax,%rbx
mov    $0x84,%edx
lea    -0x4f4(%rbp),%rsi
callq  54c0 <memcpy@plt>
sub    $0x10,%rsp
shl    $0x18,%r12d
shl    $0x10,%r14d
lea    (%r12,%r14,1),%eax
shl    $0x8,%r13d
add    %r13d,%eax
add    %r15d,%eax
lea    (%rax,%rax,2),%r14d
shl    $0x2,%r14d
mov    %r14d,%r15d
mov    %r15,-0x70(%rbp)
movl   $0x0,(%rsp)
lea    0x84(%rbx),%r8
mov    -0x68(%rbp),%r13
mov    %r13,%rdi
lea    -0x470(%rbp),%rsi
mov    $0x400,%edx
lea    -0x54c(%rbp),%rcx
lea    -0x70(%rbp),%r9
callq  207f0 <png_inflate_read>
add    $0x10,%rsp
mov    -0x70(%rbp),%rax
test   %rax,%rax
je     1de4b <png_handle_iCCP+0x51b>
mov    %r13,%rdi
mov    0x170(%rdi),%rcx
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x48(%rbp),%rsi
xor    %r8d,%r8d
jmpq   1dc7a <png_handle_iCCP+0x34a>
mov    %r13,%rdi
mov    -0x58(%rbp),%r12
mov    %r12,%rsi
lea    -0x545(%rbp),%rdx
mov    -0x60(%rbp),%rcx
mov    %rbx,%r8
callq  79d0 <png_icc_check_tag_table>
test   %eax,%eax
jne    1de86 <png_handle_iCCP+0x556>
mov    %r13,%rdi
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x48(%rbp),%rsi
xor    %r8d,%r8d
mov    %r8,%rcx
jmpq   1dc7a <png_handle_iCCP+0x34a>
sub    $0x10,%rsp
mov    -0x50(%rbp),%rax
add    $0xffffffffffffff7c,%rax
sub    %r15,%rax
mov    %rax,-0x70(%rbp)
movl   $0x1,(%rsp)
mov    %r14d,%eax
lea    0x84(%rbx,%rax,1),%r8
mov    %r13,%rdi
lea    -0x470(%rbp),%rsi
lea    -0x70(%rbp),%r9
lea    -0x54c(%rbp),%rcx
mov    $0x400,%edx
callq  207f0 <png_inflate_read>
add    $0x10,%rsp
lea    0x10b43(%rip),%rcx        # 2ea1a <png_pass_inc.20+0x1a7>
mov    -0x54c(%rbp),%eax
test   %eax,%eax
je     1defd <png_handle_iCCP+0x5cd>
mov    0x130(%r13),%eax
and    $0x100000,%eax
test   %eax,%eax
jne    1defd <png_handle_iCCP+0x5cd>
mov    %r13,%rdi
mov    -0x48(%rbp),%rsi
xor    %r8d,%r8d
jmp    1df13 <png_handle_iCCP+0x5e3>
mov    -0x70(%rbp),%rax
test   %rax,%rax
je     1df29 <png_handle_iCCP+0x5f9>
mov    %r13,%rdi
mov    -0x48(%rbp),%rsi
xor    %r8d,%r8d
mov    %r8,%rcx
test   %rcx,%rcx
je     1dfbe <png_handle_iCCP+0x68e>
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
jmpq   1dc7a <png_handle_iCCP+0x34a>
mov    -0x54c(%rbp),%eax
test   %eax,%eax
je     1df3e <png_handle_iCCP+0x60e>
mov    %rcx,%rsi
mov    %r13,%rdi
callq  56a0 <png_chunk_warning@plt>
mov    -0x54c(%rbp),%esi
mov    %r13,%rdi
callq  1b280 <png_crc_finish>
mov    %r12,%rsi
mov    0x1a0(%r13),%rcx
mov    %r13,%rdi
mov    %rbx,%rdx
callq  7b40 <png_icc_set_sRGB>
mov    $0x1,%r8d
mov    -0x48(%rbp),%rsi
test   %rsi,%rsi
jne    1dfd2 <png_handle_iCCP+0x6a2>
mov    %r13,%rdi
xor    %eax,%eax
test   %rax,%rax
je     1df91 <png_handle_iCCP+0x661>
mov    %r8,%rbx
mov    %rdi,%r12
mov    %rsi,%r13
callq  7020 <png_colorspace_sync>
mov    %r13,%rsi
mov    %r12,%rdi
mov    %rbx,%r8
mov    -0x38(%rbp),%rcx
test   %rcx,%rcx
jne    1df13 <png_handle_iCCP+0x5e3>
movl   $0x0,0x138(%rdi)
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x18(%rbp),%r13
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
leaveq 
retq   
mov    0x170(%rdi),%rcx
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
jmpq   1dc7a <png_handle_iCCP+0x34a>
mov    %r8,%r15
mov    $0x10,%edx
mov    %r13,%rdi
mov    %rsi,%r14
xor    %ecx,%ecx
callq  5720 <png_free_data@plt>
mov    -0x40(%rbp),%rax
mov    %eax,%r12d
mov    %r13,%rdi
mov    %r12,%rsi
callq  c950 <png_malloc_base>
mov    %rax,0x80(%r14)
test   %rax,%rax
jne    1e030 <png_handle_iCCP+0x700>
movzwl 0x4e2(%r13),%eax
or     $0x8000,%ax
mov    %ax,0x4e2(%r13)
mov    %r14,%rsi
mov    %r13,%rdi
mov    %r15,%r8
mov    %r8,%rax
pushq  -0x30(%rbp)
popq   -0x38(%rbp)
jmpq   1df75 <png_handle_iCCP+0x645>
mov    %r12,%rdx
mov    %rax,%rdi
lea    -0x545(%rbp),%rsi
callq  54c0 <memcpy@plt>
mov    -0x60(%rbp),%rax
mov    %eax,0x90(%r14)
mov    %rbx,0x88(%r14)
movq   $0x0,0x458(%r13)
mov    0x12c(%r14),%eax
or     $0x10,%eax
mov    %eax,0x12c(%r14)
mov    0x8(%r14),%eax
or     $0x1000,%eax
mov    %eax,0x8(%r14)
mov    %r14,%rsi
mov    %r13,%rdi
mov    %r15,%r8
mov    %r8,%rax
jmpq   1df75 <png_handle_iCCP+0x645>
xchg   %ax,%ax

000000000001e090 <png_handle_iTXt>:
push   %rbp
mov    %rsp,%rbp
sub    $0x80,%rsp
mov    0x424(%rdi),%eax
test   %eax,%eax
jne    1e140 <png_handle_iTXt+0xb0>
mov    0x12c(%rdi),%eax
mov    %rax,%rcx
and    $0x1,%ecx
test   %ecx,%ecx
je     1e185 <png_handle_iTXt+0xf5>
mov    %rax,%rcx
and    $0x4,%ecx
test   %ecx,%ecx
je     1e0d0 <png_handle_iTXt+0x40>
or     $0x8,%eax
mov    %eax,0x12c(%rdi)
lea    0x1(%rdx),%eax
mov    %eax,%ecx
mov    $0x1,%eax
mov    %rdi,%r8
mov    %r14,-0x18(%rbp)
mov    %r15,-0x20(%rbp)
mov    %rsi,-0x28(%rbp)
mov    %rcx,%rsi
mov    %rdx,%r14
mov    %rax,%rdx
mov    %rdi,%r15
mov    %r8,%rdi
callq  200b0 <png_read_buffer>
test   %rax,%rax
je     1e191 <png_handle_iTXt+0x101>
mov    %r15,%rdi
mov    %rax,%rsi
mov    %r14,%rdx
mov    %rax,-0x38(%rbp)
callq  1b220 <png_crc_read>
xor    %eax,%eax
mov    %r15,%rdi
mov    %rax,%rsi
mov    %r15,-0x30(%rbp)
mov    %rax,%r15
callq  1b280 <png_crc_finish>
test   %eax,%eax
jne    1e1b5 <png_handle_iTXt+0x125>
mov    -0x38(%rbp),%r10
mov    %r15,%rax
jmpq   1e1cd <png_handle_iTXt+0x13d>
cmp    $0x1,%eax
je     1e1f1 <png_handle_iTXt+0x161>
add    $0xffffffff,%eax
mov    %eax,0x424(%rdi)
cmp    $0x1,%eax
jne    1e0a9 <png_handle_iTXt+0x19>
mov    %rdi,%rax
mov    %r15,-0x38(%rbp)
mov    %rdx,%rsi
mov    %rdi,%r15
mov    %rax,%rdi
callq  1b280 <png_crc_finish>
mov    %r15,%rdi
lea    0x108eb(%rip),%rsi        # 2ea65 <png_pass_inc.20+0x1f2>
callq  5230 <png_chunk_benign_error@plt>
mov    -0x38(%rbp),%r15
leaveq 
retq   
lea    0x1074d(%rip),%rsi        # 2e8d9 <png_pass_inc.20+0x66>
callq  5060 <png_chunk_error@plt>
mov    %r14,%rsi
mov    %r15,%rdi
callq  1b280 <png_crc_finish>
mov    %r15,%rdi
lea    0x107c3(%rip),%rsi        # 2e969 <png_pass_inc.20+0xf6>
callq  5230 <png_chunk_benign_error@plt>
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
leaveq 
retq   
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
leaveq 
retq   
mov    %eax,%ecx
movzbl (%r10,%rcx,1),%ecx
test   %cl,%cl
je     1e1d2 <png_handle_iTXt+0x142>
add    $0x1,%eax
cmp    %eax,%r14d
ja     1e1bf <png_handle_iTXt+0x12f>
lea    0x1086e(%rip),%rsi        # 2ea47 <png_pass_inc.20+0x1d4>
cmp    $0x4f,%eax
jbe    1e1fb <png_handle_iTXt+0x16b>
mov    -0x30(%rbp),%rdi
test   %rsi,%rsi
jne    1e205 <png_handle_iTXt+0x175>
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
leaveq 
retq   
mov    %rdx,%rsi
callq  1b280 <png_crc_finish>
leaveq 
retq   
test   %eax,%eax
jne    1e214 <png_handle_iTXt+0x184>
mov    -0x30(%rbp),%rdi
jmp    1e1e2 <png_handle_iTXt+0x152>
callq  5230 <png_chunk_benign_error@plt>
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
leaveq 
retq   
lea    0x10862(%rip),%rsi        # 2ea7d <png_pass_inc.20+0x20a>
lea    0x5(%rax),%ecx
cmp    %ecx,%r14d
jae    1e229 <png_handle_iTXt+0x199>
mov    -0x30(%rbp),%rdi
jmp    1e1e2 <png_handle_iTXt+0x152>
lea    0x1(%rax),%ecx
mov    %ecx,%edi
movzbl (%r10,%rdi,1),%ecx
test   %cl,%cl
je     1e24c <png_handle_iTXt+0x1bc>
lea    0x1085d(%rip),%rdx        # 2ea9b <png_pass_inc.20+0x228>
cmp    $0x1,%cl
je     1e25a <png_handle_iTXt+0x1ca>
mov    %rdx,%rsi
mov    -0x30(%rbp),%rdi
jmp    1e1e2 <png_handle_iTXt+0x152>
movzbl (%r10,%rdi,1),%ecx
test   %cl,%cl
jne    1e274 <png_handle_iTXt+0x1e4>
mov    %r15,%r9
jmp    1e27a <png_handle_iTXt+0x1ea>
lea    0x2(%rax),%ecx
mov    %ecx,%ecx
movzbl (%r10,%rcx,1),%ecx
test   %cl,%cl
je     1e24c <png_handle_iTXt+0x1bc>
mov    %rdx,%rsi
mov    -0x30(%rbp),%rdi
jmpq   1e1e2 <png_handle_iTXt+0x152>
mov    $0x1,%r9d
movq   $0x0,-0x78(%rbp)
lea    0x3(%rax),%r8d
mov    %r8,%rax
jmp    1e299 <png_handle_iTXt+0x209>
mov    %eax,%eax
movzbl (%r10,%rax,1),%eax
test   %al,%al
je     1e2a7 <png_handle_iTXt+0x217>
mov    %r11,%rax
lea    0x1(%rax),%r11d
cmp    %eax,%r14d
ja     1e28b <png_handle_iTXt+0x1fb>
mov    %r11,%rcx
jmp    1e2ba <png_handle_iTXt+0x22a>
mov    %r11,%rcx
jmp    1e2ba <png_handle_iTXt+0x22a>
mov    %ecx,%ecx
movzbl (%r10,%rcx,1),%ecx
test   %cl,%cl
je     1e2c2 <png_handle_iTXt+0x232>
mov    %rax,%rcx
lea    0x1(%rcx),%eax
cmp    %ecx,%r14d
ja     1e2ac <png_handle_iTXt+0x21c>
test   %r9d,%r9d
jne    1e2df <png_handle_iTXt+0x24f>
cmp    %eax,%r14d
jb     1e2df <png_handle_iTXt+0x24f>
sub    %eax,%r14d
mov    %r14d,%ecx
mov    %rcx,-0x78(%rbp)
mov    -0x30(%rbp),%rdi
mov    %r15,%rsi
jmp    1e2e8 <png_handle_iTXt+0x258>
test   %r9d,%r9d
jg     1e30b <png_handle_iTXt+0x27b>
mov    -0x30(%rbp),%rdi
test   %rsi,%rsi
jne    1e1e2 <png_handle_iTXt+0x152>
mov    %eax,%edx
mov    %rdx,%rax
add    -0x78(%rbp),%rax
test   %r9d,%r9d
movb   $0x0,(%r10,%rax,1)
je     1e316 <png_handle_iTXt+0x286>
mov    $0x2,%eax
jmp    1e31b <png_handle_iTXt+0x28b>
cmp    %eax,%r14d
ja     1e372 <png_handle_iTXt+0x2e2>
mov    -0x30(%rbp),%rdi
jmp    1e2e8 <png_handle_iTXt+0x258>
mov    $0x1,%eax
mov    %r10,-0x68(%rbp)
mov    %r8d,%ecx
add    %r10,%rcx
mov    %rcx,-0x48(%rbp)
mov    %r11d,%ecx
add    %r10,%rcx
mov    %rcx,-0x40(%rbp)
lea    (%rdx,%r10,1),%rcx
mov    %rcx,-0x60(%rbp)
movq   $0x0,-0x58(%rbp)
mov    -0x78(%rbp),%rcx
mov    %rcx,-0x50(%rbp)
mov    %eax,-0x70(%rbp)
lea    -0x70(%rbp),%rdx
mov    %rdi,%r14
mov    -0x28(%rbp),%rsi
mov    $0x1,%ecx
callq  22df0 <png_set_text_2>
test   %eax,%eax
jne    1e3e5 <png_handle_iTXt+0x355>
mov    %r15,%rsi
mov    %r14,%rdi
jmpq   1e1e2 <png_handle_iTXt+0x152>
movq   $0xffffffffffffffff,-0x78(%rbp)
lea    -0x78(%rbp),%rcx
mov    -0x30(%rbp),%rsi
mov    %rsi,%rdi
mov    %rax,%rdx
mov    $0x1,%r15d
mov    %r12,-0x8(%rbp)
mov    %r13,-0x10(%rbp)
mov    %r8,-0x30(%rbp)
mov    %r11,-0x38(%rbp)
mov    %r15,%r8
mov    %rax,%r15
mov    %r10,%r12
mov    %rsi,%r13
mov    %r14,%rsi
mov    %r9,%r14
callq  20510 <png_decompress_chunk>
cmp    $0x1,%eax
je     1e3f4 <png_handle_iTXt+0x364>
mov    %r15,%rax
mov    %r13,%rdi
mov    %r14,%r9
mov    %r12,%r10
mov    0x170(%rdi),%rsi
mov    -0x38(%rbp),%r11
mov    -0x30(%rbp),%r8
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
xor    %r15d,%r15d
jmpq   1e2e8 <png_handle_iTXt+0x258>
mov    %r14,%rdi
lea    0x10698(%rip),%rsi        # 2ea87 <png_pass_inc.20+0x214>
jmpq   1e1e2 <png_handle_iTXt+0x152>
mov    %r15,%rax
mov    %r13,%rdi
mov    %r14,%r9
mov    0x458(%rdi),%r10
mov    -0x38(%rbp),%r11
mov    -0x30(%rbp),%r8
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
xor    %r15d,%r15d
mov    %r15,%rsi
jmpq   1e2e8 <png_handle_iTXt+0x258>
nop

000000000001e420 <png_handle_oFFs>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    0x12c(%rdi),%eax
mov    %rax,%rcx
and    $0x1,%ecx
test   %ecx,%ecx
je     1e487 <png_handle_oFFs+0x67>
and    $0x4,%eax
test   %eax,%eax
jne    1e493 <png_handle_oFFs+0x73>
test   %rsi,%rsi
jne    1e4bd <png_handle_oFFs+0x9d>
cmp    $0x9,%edx
jne    1e4f7 <png_handle_oFFs+0xd7>
lea    -0x19(%rbp),%rax
mov    $0x9,%edx
mov    %rdi,%rcx
mov    %r15,-0x10(%rbp)
mov    %rsi,-0x8(%rbp)
mov    %rax,%rsi
mov    %rdi,%r15
mov    %rcx,%rdi
callq  1b220 <png_crc_read>
xor    %esi,%esi
mov    %r15,%rdi
callq  1b280 <png_crc_finish>
test   %eax,%eax
je     1e521 <png_handle_oFFs+0x101>
mov    -0x10(%rbp),%r15
leaveq 
retq   
lea    0x1044b(%rip),%rsi        # 2e8d9 <png_pass_inc.20+0x66>
callq  5060 <png_chunk_error@plt>
mov    %rdi,%rax
mov    %r15,-0x10(%rbp)
mov    %rdx,%rsi
mov    %rdi,%r15
mov    %rax,%rdi
callq  1b280 <png_crc_finish>
mov    %r15,%rdi
lea    0x10412(%rip),%rsi        # 2e8c4 <png_pass_inc.20+0x51>
callq  5230 <png_chunk_benign_error@plt>
mov    -0x10(%rbp),%r15
leaveq 
retq   
mov    0x8(%rsi),%eax
and    $0x100,%eax
test   %eax,%eax
je     1e444 <png_handle_oFFs+0x24>
mov    %rdi,%rax
mov    %r15,-0x10(%rbp)
mov    %rdx,%rsi
mov    %rdi,%r15
mov    %rax,%rdi
callq  1b280 <png_crc_finish>
mov    %r15,%rdi
lea    0x103fa(%rip),%rsi        # 2e8e6 <png_pass_inc.20+0x73>
callq  5230 <png_chunk_benign_error@plt>
mov    -0x10(%rbp),%r15
leaveq 
retq   
mov    %rdi,%rax
mov    %r15,-0x10(%rbp)
mov    %rdx,%rsi
mov    %rdi,%r15
mov    %rax,%rdi
callq  1b280 <png_crc_finish>
mov    %r15,%rdi
lea    0x103bb(%rip),%rsi        # 2e8d1 <png_pass_inc.20+0x5e>
callq  5230 <png_chunk_benign_error@plt>
mov    -0x10(%rbp),%r15
leaveq 
retq   
movzbl -0x19(%rbp),%eax
mov    %rax,%rcx
and    $0x80,%ecx
test   %ecx,%ecx
jg     1e550 <png_handle_oFFs+0x130>
shl    $0x18,%eax
movzbl -0x18(%rbp),%ecx
shl    $0x10,%ecx
add    %eax,%ecx
movzbl -0x17(%rbp),%eax
shl    $0x8,%eax
add    %ecx,%eax
movzbl -0x16(%rbp),%ecx
lea    (%rcx,%rax,1),%edx
jmp    1e576 <png_handle_oFFs+0x156>
shl    $0x18,%eax
movzbl -0x18(%rbp),%ecx
shl    $0x10,%ecx
add    %eax,%ecx
movzbl -0x17(%rbp),%eax
shl    $0x8,%eax
add    %ecx,%eax
movzbl -0x16(%rbp),%ecx
lea    (%rcx,%rax,1),%edx
neg    %edx
and    $0x7fffffff,%edx
neg    %edx
movzbl -0x15(%rbp),%eax
mov    %rax,%rcx
and    $0x80,%ecx
test   %ecx,%ecx
jg     1e5a4 <png_handle_oFFs+0x184>
shl    $0x18,%eax
movzbl -0x14(%rbp),%ecx
shl    $0x10,%ecx
add    %eax,%ecx
movzbl -0x13(%rbp),%eax
shl    $0x8,%eax
add    %ecx,%eax
movzbl -0x12(%rbp),%ecx
add    %eax,%ecx
jmp    1e5c9 <png_handle_oFFs+0x1a9>
shl    $0x18,%eax
movzbl -0x14(%rbp),%ecx
shl    $0x10,%ecx
add    %eax,%ecx
movzbl -0x13(%rbp),%eax
shl    $0x8,%eax
add    %ecx,%eax
movzbl -0x12(%rbp),%ecx
add    %eax,%ecx
neg    %ecx
and    $0x7fffffff,%ecx
neg    %ecx
mov    %r15,%rdi
movzbl -0x11(%rbp),%r8d
mov    -0x8(%rbp),%rsi
callq  55e0 <png_set_oFFs@plt>
mov    -0x10(%rbp),%r15
leaveq 
retq   

000000000001e5e0 <png_handle_pCAL>:
push   %rbp
mov    %rsp,%rbp
sub    $0x50,%rsp
mov    0x12c(%rdi),%eax
mov    %rax,%rcx
and    $0x1,%ecx
test   %ecx,%ecx
je     1e66c <png_handle_pCAL+0x8c>
and    $0x4,%eax
test   %eax,%eax
jne    1e678 <png_handle_pCAL+0x98>
test   %rsi,%rsi
jne    1e6a2 <png_handle_pCAL+0xc2>
lea    0x1(%rdx),%eax
mov    %eax,%eax
mov    $0x2,%ecx
mov    %rdi,%r8
mov    %r15,-0x40(%rbp)
mov    %r14,-0x38(%rbp)
mov    %rsi,-0x8(%rbp)
mov    %rax,%rsi
mov    %rdx,%r14
mov    %rcx,%rdx
mov    %rdi,%r15
mov    %r8,%rdi
callq  200b0 <png_read_buffer>
test   %rax,%rax
je     1e6dc <png_handle_pCAL+0xfc>
mov    %r15,%rdi
mov    %rax,%rsi
mov    %r14,%rdx
mov    %rax,-0x50(%rbp)
callq  1b220 <png_crc_read>
xor    %esi,%esi
mov    %r15,%rdi
callq  1b280 <png_crc_finish>
test   %eax,%eax
je     1e700 <png_handle_pCAL+0x120>
mov    -0x38(%rbp),%r14
mov    -0x40(%rbp),%r15
leaveq 
retq   
lea    0x10266(%rip),%rsi        # 2e8d9 <png_pass_inc.20+0x66>
callq  5060 <png_chunk_error@plt>
mov    %rdi,%rax
mov    %r15,-0x50(%rbp)
mov    %rdx,%rsi
mov    %rdi,%r15
mov    %rax,%rdi
callq  1b280 <png_crc_finish>
mov    %r15,%rdi
lea    0x1022d(%rip),%rsi        # 2e8c4 <png_pass_inc.20+0x51>
callq  5230 <png_chunk_benign_error@plt>
mov    -0x50(%rbp),%r15
leaveq 
retq   
mov    0x8(%rsi),%eax
and    $0x400,%eax
test   %eax,%eax
je     1e608 <png_handle_pCAL+0x28>
mov    %rdi,%rax
mov    %r15,-0x50(%rbp)
mov    %rdx,%rsi
mov    %rdi,%r15
mov    %rax,%rdi
callq  1b280 <png_crc_finish>
mov    %r15,%rdi
lea    0x10215(%rip),%rsi        # 2e8e6 <png_pass_inc.20+0x73>
callq  5230 <png_chunk_benign_error@plt>
mov    -0x50(%rbp),%r15
leaveq 
retq   
mov    %r14,%rsi
mov    %r15,%rdi
callq  1b280 <png_crc_finish>
mov    %r15,%rdi
lea    0x10278(%rip),%rsi        # 2e969 <png_pass_inc.20+0xf6>
callq  5230 <png_chunk_benign_error@plt>
mov    -0x38(%rbp),%r14
mov    -0x40(%rbp),%r15
leaveq 
retq   
mov    %r14d,%ecx
mov    -0x50(%rbp),%rax
lea    (%rax,%rcx,1),%r8
movb   $0x0,(%r8)
jmp    1e715 <png_handle_pCAL+0x135>
add    $0x1,%rax
movzbl (%rax),%ecx
test   %cl,%cl
jne    1e711 <png_handle_pCAL+0x131>
mov    %r8,%rcx
sub    %rax,%rcx
cmp    $0xc,%rcx
jle    1e756 <png_handle_pCAL+0x176>
movzbl 0x1(%rax),%ecx
mov    %rcx,%rdx
and    $0x80,%edx
test   %edx,%edx
jg     1e76f <png_handle_pCAL+0x18f>
shl    $0x18,%ecx
movzbl 0x2(%rax),%edx
shl    $0x10,%edx
add    %ecx,%edx
movzbl 0x3(%rax),%ecx
shl    $0x8,%ecx
add    %edx,%ecx
movzbl 0x4(%rax),%edx
add    %edx,%ecx
jmp    1e794 <png_handle_pCAL+0x1b4>
mov    %r15,%rdi
lea    0x10171(%rip),%rsi        # 2e8d1 <png_pass_inc.20+0x5e>
callq  5230 <png_chunk_benign_error@plt>
mov    -0x38(%rbp),%r14
mov    -0x40(%rbp),%r15
leaveq 
retq   
shl    $0x18,%ecx
movzbl 0x2(%rax),%edx
shl    $0x10,%edx
add    %ecx,%edx
movzbl 0x3(%rax),%ecx
shl    $0x8,%ecx
add    %edx,%ecx
movzbl 0x4(%rax),%edx
add    %edx,%ecx
neg    %ecx
and    $0x7fffffff,%ecx
neg    %ecx
movzbl 0x5(%rax),%edx
mov    %rdx,%rsi
and    $0x80,%esi
test   %esi,%esi
jg     1e7c2 <png_handle_pCAL+0x1e2>
shl    $0x18,%edx
movzbl 0x6(%rax),%esi
shl    $0x10,%esi
add    %edx,%esi
movzbl 0x7(%rax),%edx
shl    $0x8,%edx
add    %esi,%edx
movzbl 0x8(%rax),%esi
add    %esi,%edx
jmp    1e7e7 <png_handle_pCAL+0x207>
shl    $0x18,%edx
movzbl 0x6(%rax),%esi
shl    $0x10,%esi
add    %edx,%esi
movzbl 0x7(%rax),%edx
shl    $0x8,%edx
add    %esi,%edx
movzbl 0x8(%rax),%esi
add    %esi,%edx
neg    %edx
and    $0x7fffffff,%edx
neg    %edx
movzbl 0xa(%rax),%r14d
movzbl 0x9(%rax),%r9d
test   %r9b,%r9b
jne    1e815 <png_handle_pCAL+0x235>
cmp    $0x2,%r14b
je     1e815 <png_handle_pCAL+0x235>
mov    %r15,%rdi
lea    0x102aa(%rip),%rsi        # 2eab0 <png_pass_inc.20+0x23d>
callq  5230 <png_chunk_benign_error@plt>
mov    -0x38(%rbp),%r14
mov    -0x40(%rbp),%r15
leaveq 
retq   
cmp    $0x1,%r9b
jne    1e821 <png_handle_pCAL+0x241>
cmp    $0x3,%r14b
jne    1e7fc <png_handle_pCAL+0x21c>
cmp    $0x2,%r9b
jne    1e82d <png_handle_pCAL+0x24d>
cmp    $0x3,%r14b
jne    1e7fc <png_handle_pCAL+0x21c>
cmp    $0x3,%r9b
jne    1e839 <png_handle_pCAL+0x259>
cmp    $0x4,%r14b
jne    1e7fc <png_handle_pCAL+0x21c>
add    $0xb,%rax
cmp    $0x3,%r9b
ja     1e854 <png_handle_pCAL+0x274>
mov    %r13,-0x30(%rbp)
mov    %r8,-0x48(%rbp)
mov    %r9,-0x20(%rbp)
mov    %rax,%r13
jmp    1e88b <png_handle_pCAL+0x2ab>
lea    0x1026d(%rip),%rsi        # 2eac8 <png_pass_inc.20+0x255>
mov    %r15,%rdi
mov    %r13,-0x30(%rbp)
mov    %r8,-0x48(%rbp)
mov    %rcx,-0x18(%rbp)
mov    %rdx,-0x28(%rbp)
mov    %r9,-0x20(%rbp)
mov    %rax,%r13
callq  5230 <png_chunk_benign_error@plt>
mov    -0x28(%rbp),%rdx
mov    -0x18(%rbp),%rcx
mov    %r13,%rax
jmp    1e88b <png_handle_pCAL+0x2ab>
add    $0x1,%r13
movzbl 0x0(%r13),%esi
test   %sil,%sil
jne    1e887 <png_handle_pCAL+0x2a7>
mov    %r14,%rsi
shl    $0x3,%rsi
mov    %r15,%rdi
mov    %rcx,-0x10(%rbp)
mov    %rdx,-0x18(%rbp)
mov    %rax,-0x28(%rbp)
callq  5150 <png_malloc_warn@plt>
test   %rax,%rax
je     1e8c5 <png_handle_pCAL+0x2e5>
mov    -0x18(%rbp),%r8
mov    -0x10(%rbp),%rcx
mov    -0x48(%rbp),%rdi
xor    %edx,%edx
jmp    1e8ea <png_handle_pCAL+0x30a>
mov    %r15,%rdi
lea    0x1009a(%rip),%rsi        # 2e969 <png_pass_inc.20+0xf6>
callq  5230 <png_chunk_benign_error@plt>
mov    -0x30(%rbp),%r13
mov    -0x38(%rbp),%r14
mov    -0x40(%rbp),%r15
leaveq 
retq   
cmp    %r13,%rdi
jb     1e939 <png_handle_pCAL+0x359>
add    $0x1,%edx
cmp    %edx,%r14d
jg     1e961 <png_handle_pCAL+0x381>
sub    $0x20,%rsp
mov    %r14d,(%rsp)
mov    -0x28(%rbp),%rdx
mov    %rdx,0x8(%rsp)
mov    %rax,%r13
mov    %r13,0x10(%rsp)
mov    %r15,%rdi
mov    -0x20(%rbp),%r9
mov    -0x50(%rbp),%rdx
mov    -0x8(%rbp),%rsi
callq  51b0 <png_set_pCAL@plt>
mov    %r13,%rsi
mov    %r15,%rdi
add    $0x20,%rsp
callq  5790 <png_free@plt>
mov    -0x30(%rbp),%r13
mov    -0x38(%rbp),%r14
mov    -0x40(%rbp),%r15
leaveq 
retq   
mov    %rax,%rsi
mov    %r15,%rdi
callq  5790 <png_free@plt>
mov    %r15,%rdi
lea    0x10195(%rip),%rsi        # 2eae3 <png_pass_inc.20+0x270>
callq  5230 <png_chunk_benign_error@plt>
mov    -0x30(%rbp),%r13
mov    -0x38(%rbp),%r14
mov    -0x40(%rbp),%r15
leaveq 
retq   
add    $0x1,%r13
movslq %edx,%rsi
mov    %r13,(%rax,%rsi,8)
jmp    1e980 <png_handle_pCAL+0x3a0>
movzbl 0x0(%r13),%esi
test   %sil,%sil
je     1e8e2 <png_handle_pCAL+0x302>
add    $0x1,%r13
cmp    %r13,%rdi
jae    1e96e <png_handle_pCAL+0x38e>
jmpq   1e8e2 <png_handle_pCAL+0x302>
nopw   0x0(%rax,%rax,1)

000000000001e990 <png_handle_pHYs>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    0x12c(%rdi),%eax
mov    %rax,%rcx
and    $0x1,%ecx
test   %ecx,%ecx
je     1e9f7 <png_handle_pHYs+0x67>
and    $0x4,%eax
test   %eax,%eax
jne    1ea03 <png_handle_pHYs+0x73>
test   %rsi,%rsi
jne    1ea2d <png_handle_pHYs+0x9d>
cmp    $0x9,%edx
jne    1ea67 <png_handle_pHYs+0xd7>
lea    -0x19(%rbp),%rax
mov    $0x9,%edx
mov    %rdi,%rcx
mov    %r15,-0x10(%rbp)
mov    %rsi,-0x8(%rbp)
mov    %rax,%rsi
mov    %rdi,%r15
mov    %rcx,%rdi
callq  1b220 <png_crc_read>
xor    %esi,%esi
mov    %r15,%rdi
callq  1b280 <png_crc_finish>
test   %eax,%eax
je     1ea91 <png_handle_pHYs+0x101>
mov    -0x10(%rbp),%r15
leaveq 
retq   
lea    0xfedb(%rip),%rsi        # 2e8d9 <png_pass_inc.20+0x66>
callq  5060 <png_chunk_error@plt>
mov    %rdi,%rax
mov    %r15,-0x10(%rbp)
mov    %rdx,%rsi
mov    %rdi,%r15
mov    %rax,%rdi
callq  1b280 <png_crc_finish>
mov    %r15,%rdi
lea    0xfea2(%rip),%rsi        # 2e8c4 <png_pass_inc.20+0x51>
callq  5230 <png_chunk_benign_error@plt>
mov    -0x10(%rbp),%r15
leaveq 
retq   
mov    0x8(%rsi),%eax
and    $0x80,%eax
test   %eax,%eax
je     1e9b4 <png_handle_pHYs+0x24>
mov    %rdi,%rax
mov    %r15,-0x10(%rbp)
mov    %rdx,%rsi
mov    %rdi,%r15
mov    %rax,%rdi
callq  1b280 <png_crc_finish>
mov    %r15,%rdi
lea    0xfe8a(%rip),%rsi        # 2e8e6 <png_pass_inc.20+0x73>
callq  5230 <png_chunk_benign_error@plt>
mov    -0x10(%rbp),%r15
leaveq 
retq   
mov    %rdi,%rax
mov    %r15,-0x10(%rbp)
mov    %rdx,%rsi
mov    %rdi,%r15
mov    %rax,%rdi
callq  1b280 <png_crc_finish>
mov    %r15,%rdi
lea    0xfe4b(%rip),%rsi        # 2e8d1 <png_pass_inc.20+0x5e>
callq  5230 <png_chunk_benign_error@plt>
mov    -0x10(%rbp),%r15
leaveq 
retq   
movzbl -0x19(%rbp),%ecx
shl    $0x18,%ecx
movzbl -0x18(%rbp),%eax
shl    $0x10,%eax
add    %eax,%ecx
movzbl -0x17(%rbp),%eax
shl    $0x8,%eax
add    %ecx,%eax
movzbl -0x16(%rbp),%ecx
lea    (%rcx,%rax,1),%edx
movzbl -0x15(%rbp),%eax
shl    $0x18,%eax
movzbl -0x14(%rbp),%ecx
shl    $0x10,%ecx
add    %eax,%ecx
movzbl -0x13(%rbp),%eax
shl    $0x8,%eax
add    %ecx,%eax
movzbl -0x12(%rbp),%ecx
add    %eax,%ecx
mov    %r15,%rdi
movzbl -0x11(%rbp),%r8d
mov    -0x8(%rbp),%rsi
callq  5610 <png_set_pHYs@plt>
mov    -0x10(%rbp),%r15
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

000000000001eaf0 <png_handle_sBIT>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    0x12c(%rdi),%eax
mov    %rax,%rcx
and    $0x1,%ecx
test   %ecx,%ecx
je     1ebae <png_handle_sBIT+0xbe>
and    $0x6,%eax
test   %eax,%eax
jne    1ebba <png_handle_sBIT+0xca>
test   %rsi,%rsi
jne    1ebe4 <png_handle_sBIT+0xf4>
movzbl 0x267(%rdi),%eax
cmp    $0x3,%al
jne    1ec1c <png_handle_sBIT+0x12c>
mov    $0x8,%eax
mov    $0x3,%ecx
lea    0xfd91(%rip),%r8        # 2e8d1 <png_pass_inc.20+0x5e>
cmp    %edx,%ecx
jne    1ec2f <png_handle_sBIT+0x13f>
cmp    $0x4,%edx
ja     1ec2f <png_handle_sBIT+0x13f>
mov    %al,-0x29(%rbp)
mov    %al,-0x2a(%rbp)
mov    %al,-0x2b(%rbp)
mov    %al,-0x2c(%rbp)
lea    -0x2c(%rbp),%r8
mov    %rdi,%r9
mov    %rcx,%rdx
mov    %r15,-0x10(%rbp)
mov    %rcx,-0x28(%rbp)
mov    %rax,-0x20(%rbp)
mov    %rsi,-0x8(%rbp)
mov    %r8,%rsi
mov    %rdi,%r15
mov    %r9,%rdi
callq  1b220 <png_crc_read>
xor    %eax,%eax
mov    %r15,%rdi
mov    %rax,%rsi
mov    %r15,-0x18(%rbp)
mov    %rax,%r15
callq  1b280 <png_crc_finish>
test   %eax,%eax
jne    1ec60 <png_handle_sBIT+0x170>
mov    -0x20(%rbp),%rcx
mov    -0x28(%rbp),%rdx
jmpq   1ec7a <png_handle_sBIT+0x18a>
lea    0xfd24(%rip),%rsi        # 2e8d9 <png_pass_inc.20+0x66>
callq  5060 <png_chunk_error@plt>
mov    %rdi,%rax
mov    %r15,-0x28(%rbp)
mov    %rdx,%rsi
mov    %rdi,%r15
mov    %rax,%rdi
callq  1b280 <png_crc_finish>
mov    %r15,%rdi
lea    0xfceb(%rip),%rsi        # 2e8c4 <png_pass_inc.20+0x51>
callq  5230 <png_chunk_benign_error@plt>
mov    -0x28(%rbp),%r15
leaveq 
retq   
mov    0x8(%rsi),%eax
and    $0x2,%eax
test   %eax,%eax
je     1eb20 <png_handle_sBIT+0x30>
mov    %rdi,%rax
mov    %r15,-0x28(%rbp)
mov    %rdx,%rsi
mov    %rdi,%r15
mov    %rax,%rdi
callq  1b280 <png_crc_finish>
mov    %r15,%rdi
lea    0xfcd5(%rip),%rsi        # 2e8e6 <png_pass_inc.20+0x73>
callq  5230 <png_chunk_benign_error@plt>
mov    -0x28(%rbp),%r15
leaveq 
retq   
movzbl 0x26b(%rdi),%ecx
movzbl 0x268(%rdi),%eax
jmpq   1eb39 <png_handle_sBIT+0x49>
mov    %rdi,%rax
mov    %r15,-0x28(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r8,%rsi
mov    %rdx,%r14
mov    %rdi,%r15
mov    %rax,%rdi
callq  5230 <png_chunk_benign_error@plt>
mov    %r14,%rsi
mov    %r15,%rdi
callq  1b280 <png_crc_finish>
mov    -0x20(%rbp),%r14
mov    -0x28(%rbp),%r15
leaveq 
retq   
mov    -0x10(%rbp),%r15
leaveq 
retq   
mov    %r15d,%eax
movzbl -0x2c(%rbp,%rax,1),%eax
test   %al,%al
je     1ecbc <png_handle_sBIT+0x1cc>
cmp    %al,%cl
jb     1ecbc <png_handle_sBIT+0x1cc>
add    $0x1,%r15d
cmp    %r15d,%edx
ja     1ec66 <png_handle_sBIT+0x176>
mov    -0x18(%rbp),%rdi
lea    0x2d8(%rdi),%rdx
movzbl 0x267(%rdi),%eax
and    $0x2,%eax
test   %eax,%eax
jg     1ecd2 <png_handle_sBIT+0x1e2>
movzbl -0x2c(%rbp),%eax
mov    %al,0x2db(%rdi)
mov    %al,(%rdx)
mov    %al,0x2d9(%rdi)
mov    %al,0x2da(%rdi)
movzbl -0x2b(%rbp),%eax
mov    %al,0x2dc(%rdi)
jmp    1ecf6 <png_handle_sBIT+0x206>
mov    -0x18(%rbp),%rdi
lea    0xfc0a(%rip),%rsi        # 2e8d1 <png_pass_inc.20+0x5e>
callq  5230 <png_chunk_benign_error@plt>
mov    -0x10(%rbp),%r15
leaveq 
retq   
movzbl -0x2c(%rbp),%eax
mov    %al,(%rdx)
movzbl -0x2b(%rbp),%eax
mov    %al,0x2d9(%rdi)
movzbl -0x2a(%rbp),%eax
mov    %al,0x2da(%rdi)
movzbl -0x29(%rbp),%eax
mov    %al,0x2dc(%rdi)
mov    -0x8(%rbp),%rsi
callq  51d0 <png_set_sBIT@plt>
mov    -0x10(%rbp),%r15
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)

000000000001ed10 <png_handle_sCAL>:
push   %rbp
mov    %rsp,%rbp
sub    $0x50,%rsp
mov    0x12c(%rdi),%eax
mov    %rax,%rcx
and    $0x1,%ecx
test   %ecx,%ecx
je     1edc2 <png_handle_sCAL+0xb2>
and    $0x4,%eax
test   %eax,%eax
jne    1edce <png_handle_sCAL+0xbe>
test   %rsi,%rsi
jne    1edf8 <png_handle_sCAL+0xe8>
cmp    $0x3,%edx
jbe    1ee32 <png_handle_sCAL+0x122>
lea    0x1(%rdx),%eax
mov    %eax,%r8d
mov    $0x2,%eax
mov    %rdi,%rcx
mov    %r15,-0x28(%rbp)
mov    %r14,-0x20(%rbp)
mov    %rsi,-0x8(%rbp)
mov    %r8,%rsi
mov    %rdx,%r14
mov    %rax,%rdx
mov    %rdi,%r15
mov    %rcx,%rdi
callq  200b0 <png_read_buffer>
test   %rax,%rax
je     1ee5c <png_handle_sCAL+0x14c>
mov    %r15,%rdi
mov    %rax,%rsi
mov    %r14,%rdx
mov    %r13,-0x18(%rbp)
mov    %rax,%r13
callq  1b220 <png_crc_read>
mov    %r14d,%eax
movb   $0x0,0x0(%r13,%rax,1)
xor    %esi,%esi
mov    %rsi,-0x38(%rbp)
mov    %r15,%rdi
callq  1b280 <png_crc_finish>
test   %eax,%eax
je     1ee80 <png_handle_sCAL+0x170>
mov    -0x18(%rbp),%r13
mov    -0x20(%rbp),%r14
mov    -0x28(%rbp),%r15
leaveq 
retq   
lea    0xfb10(%rip),%rsi        # 2e8d9 <png_pass_inc.20+0x66>
callq  5060 <png_chunk_error@plt>
mov    %rdi,%rax
mov    %r15,-0x38(%rbp)
mov    %rdx,%rsi
mov    %rdi,%r15
mov    %rax,%rdi
callq  1b280 <png_crc_finish>
mov    %r15,%rdi
lea    0xfad7(%rip),%rsi        # 2e8c4 <png_pass_inc.20+0x51>
callq  5230 <png_chunk_benign_error@plt>
mov    -0x38(%rbp),%r15
leaveq 
retq   
mov    0x8(%rsi),%eax
and    $0x4000,%eax
test   %eax,%eax
je     1ed40 <png_handle_sCAL+0x30>
mov    %rdi,%rax
mov    %r15,-0x38(%rbp)
mov    %rdx,%rsi
mov    %rdi,%r15
mov    %rax,%rdi
callq  1b280 <png_crc_finish>
mov    %r15,%rdi
lea    0xfabf(%rip),%rsi        # 2e8e6 <png_pass_inc.20+0x73>
callq  5230 <png_chunk_benign_error@plt>
mov    -0x38(%rbp),%r15
leaveq 
retq   
mov    %rdi,%rax
mov    %r15,-0x38(%rbp)
mov    %rdx,%rsi
mov    %rdi,%r15
mov    %rax,%rdi
callq  1b280 <png_crc_finish>
mov    %r15,%rdi
lea    0xfa80(%rip),%rsi        # 2e8d1 <png_pass_inc.20+0x5e>
callq  5230 <png_chunk_benign_error@plt>
mov    -0x38(%rbp),%r15
leaveq 
retq   
lea    0xfb06(%rip),%rsi        # 2e969 <png_pass_inc.20+0xf6>
mov    %r15,%rdi
callq  5230 <png_chunk_benign_error@plt>
mov    %r14,%rsi
mov    %r15,%rdi
callq  1b280 <png_crc_finish>
mov    -0x20(%rbp),%r14
mov    -0x28(%rbp),%r15
leaveq 
retq   
movzbl 0x0(%r13),%eax
cmp    $0x1,%al
jne    1ef7e <png_handle_sCAL+0x26e>
movq   $0x1,-0x48(%rbp)
movl   $0x0,-0x3c(%rbp)
mov    %r14d,%r14d
lea    -0x3c(%rbp),%rdx
lea    -0x48(%rbp),%rcx
mov    %r13,%rdi
mov    %r14,%rsi
callq  86c0 <png_check_fp_number>
test   %eax,%eax
je     1efa3 <png_handle_sCAL+0x293>
mov    -0x48(%rbp),%rdx
cmp    %rdx,%r14
jbe    1efa3 <png_handle_sCAL+0x293>
lea    0x1(%rdx),%rax
mov    %rax,-0x48(%rbp)
movzbl 0x0(%r13,%rdx,1),%eax
test   %al,%al
jne    1efa3 <png_handle_sCAL+0x293>
mov    $0x1,%ecx
mov    %rcx,-0x30(%rbp)
movslq -0x3c(%rbp),%rax
and    $0x188,%eax
cmp    $0x108,%eax
je     1eef8 <png_handle_sCAL+0x1e8>
xor    %ecx,%ecx
test   %ecx,%ecx
je     1efc0 <png_handle_sCAL+0x2b0>
movl   $0x0,-0x3c(%rbp)
mov    %r13,%rdi
mov    %r14,%rsi
mov    %rdx,-0x10(%rbp)
lea    -0x48(%rbp),%rcx
lea    -0x3c(%rbp),%rdx
callq  86c0 <png_check_fp_number>
test   %eax,%eax
je     1efdd <png_handle_sCAL+0x2cd>
cmp    -0x48(%rbp),%r14
jne    1efdd <png_handle_sCAL+0x2cd>
movslq -0x3c(%rbp),%rax
and    $0x188,%eax
cmp    $0x108,%eax
jne    1ef46 <png_handle_sCAL+0x236>
pushq  -0x30(%rbp)
popq   -0x38(%rbp)
mov    -0x38(%rbp),%rax
test   %eax,%eax
je     1effa <png_handle_sCAL+0x2ea>
mov    -0x10(%rbp),%rax
lea    0x1(%r13,%rax,1),%r8
movzbl 0x0(%r13),%edx
lea    0x1(%r13),%rcx
mov    %r15,%rdi
mov    -0x8(%rbp),%rsi
callq  5660 <png_set_sCAL_s@plt>
mov    -0x18(%rbp),%r13
mov    -0x20(%rbp),%r14
mov    -0x28(%rbp),%r15
leaveq 
retq   
cmp    $0x2,%al
je     1ee8d <png_handle_sCAL+0x17d>
mov    %r15,%rdi
lea    0xfb60(%rip),%rsi        # 2eaf0 <png_pass_inc.20+0x27d>
callq  5230 <png_chunk_benign_error@plt>
mov    -0x18(%rbp),%r13
mov    -0x20(%rbp),%r14
mov    -0x28(%rbp),%r15
leaveq 
retq   
mov    %r15,%rdi
lea    0xfb50(%rip),%rsi        # 2eafd <png_pass_inc.20+0x28a>
callq  5230 <png_chunk_benign_error@plt>
mov    -0x18(%rbp),%r13
mov    -0x20(%rbp),%r14
mov    -0x28(%rbp),%r15
leaveq 
retq   
mov    %r15,%rdi
lea    0xfb44(%rip),%rsi        # 2eb0e <png_pass_inc.20+0x29b>
callq  5230 <png_chunk_benign_error@plt>
mov    -0x18(%rbp),%r13
mov    -0x20(%rbp),%r14
mov    -0x28(%rbp),%r15
leaveq 
retq   
mov    %r15,%rdi
lea    0xfb3a(%rip),%rsi        # 2eb21 <png_pass_inc.20+0x2ae>
callq  5230 <png_chunk_benign_error@plt>
mov    -0x18(%rbp),%r13
mov    -0x20(%rbp),%r14
mov    -0x28(%rbp),%r15
leaveq 
retq   
mov    %r15,%rdi
lea    0xfb2f(%rip),%rsi        # 2eb33 <png_pass_inc.20+0x2c0>
callq  5230 <png_chunk_benign_error@plt>
mov    -0x18(%rbp),%r13
mov    -0x20(%rbp),%r14
mov    -0x28(%rbp),%r15
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

000000000001f020 <png_handle_sPLT>:
push   %rbp
mov    %rsp,%rbp
sub    $0x40,%rsp
mov    0x424(%rdi),%eax
test   %eax,%eax
jne    1f0ba <png_handle_sPLT+0x9a>
mov    0x12c(%rdi),%eax
mov    %rax,%rcx
and    $0x1,%ecx
test   %ecx,%ecx
je     1f10a <png_handle_sPLT+0xea>
and    $0x4,%eax
test   %eax,%eax
jne    1f116 <png_handle_sPLT+0xf6>
lea    0x1(%rdx),%eax
mov    %eax,%ecx
mov    $0x2,%r8d
mov    %rdi,%rax
mov    %r14,-0x10(%rbp)
mov    %r15,-0x18(%rbp)
mov    %rsi,-0x8(%rbp)
mov    %rcx,%rsi
mov    %rdx,%r14
mov    %r8,%rdx
mov    %rdi,%r15
mov    %rax,%rdi
callq  200b0 <png_read_buffer>
test   %rax,%rax
je     1f140 <png_handle_sPLT+0x120>
mov    %r15,%rdi
mov    %rax,%rsi
mov    %r14,%rdx
mov    %rax,-0x20(%rbp)
callq  1b220 <png_crc_read>
xor    %esi,%esi
mov    %r15,%rdi
callq  1b280 <png_crc_finish>
test   %eax,%eax
je     1f164 <png_handle_sPLT+0x144>
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
leaveq 
retq   
cmp    $0x1,%eax
je     1f174 <png_handle_sPLT+0x154>
add    $0xffffffff,%eax
mov    %eax,0x424(%rdi)
cmp    $0x1,%eax
jne    1f036 <png_handle_sPLT+0x16>
lea    0xfa6b(%rip),%rsi        # 2eb47 <png_pass_inc.20+0x2d4>
mov    %rdi,%rax
mov    %r14,-0x18(%rbp)
mov    %r15,-0x20(%rbp)
mov    %rdx,%r14
mov    %rdi,%r15
mov    %rax,%rdi
callq  5390 <png_warning@plt>
mov    %r14,%rsi
mov    %r15,%rdi
callq  1b280 <png_crc_finish>
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
leaveq 
retq   
lea    0xf7c8(%rip),%rsi        # 2e8d9 <png_pass_inc.20+0x66>
callq  5060 <png_chunk_error@plt>
mov    %rdi,%rax
mov    %r15,-0x20(%rbp)
mov    %rdx,%rsi
mov    %rdi,%r15
mov    %rax,%rdi
callq  1b280 <png_crc_finish>
mov    %r15,%rdi
lea    0xf78f(%rip),%rsi        # 2e8c4 <png_pass_inc.20+0x51>
callq  5230 <png_chunk_benign_error@plt>
mov    -0x20(%rbp),%r15
leaveq 
retq   
mov    %r14,%rsi
mov    %r15,%rdi
callq  1b280 <png_crc_finish>
mov    %r15,%rdi
lea    0xf814(%rip),%rsi        # 2e969 <png_pass_inc.20+0xf6>
callq  5230 <png_chunk_benign_error@plt>
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
leaveq 
retq   
mov    %r14d,%eax
mov    -0x20(%rbp),%rdi
movb   $0x0,(%rdi,%rax,1)
mov    %rdi,%rdx
jmp    1f181 <png_handle_sPLT+0x161>
mov    %rdx,%rsi
callq  1b280 <png_crc_finish>
leaveq 
retq   
mov    %rcx,%rdx
lea    0x1(%rdx),%rcx
movzbl (%rdx),%eax
test   %al,%al
jne    1f17e <png_handle_sPLT+0x15e>
cmp    $0x1,%r14d
jbe    1f1ae <png_handle_sPLT+0x18e>
lea    -0x2(%r14),%eax
mov    %eax,%eax
add    %rdi,%rax
cmp    %rax,%rcx
ja     1f1ae <png_handle_sPLT+0x18e>
movzbl (%rcx),%eax
cmp    $0x8,%al
je     1f1c7 <png_handle_sPLT+0x1a7>
mov    $0xa,%ecx
jmp    1f1cc <png_handle_sPLT+0x1ac>
mov    %r15,%rdi
lea    0xf9b0(%rip),%rsi        # 2eb68 <png_pass_inc.20+0x2f5>
callq  5390 <png_warning@plt>
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
leaveq 
retq   
mov    $0x6,%ecx
mov    %al,-0x38(%rbp)
lea    0x2(%rdx),%rsi
mov    %rsi,%rax
sub    %rdi,%rax
sub    %eax,%r14d
xor    %edx,%edx
mov    %r14,%rax
div    %ecx
test   %edx,%edx
jne    1f214 <png_handle_sPLT+0x1f4>
mov    %r14,%rax
mov    %rsi,%r14
xor    %edx,%edx
div    %ecx
mov    %eax,-0x28(%rbp)
movslq %eax,%rax
lea    (%rax,%rax,4),%rax
lea    (%rax,%rax,1),%rsi
mov    %r15,%rdi
callq  5150 <png_malloc_warn@plt>
mov    %rax,-0x30(%rbp)
test   %rax,%rax
je     1f22d <png_handle_sPLT+0x20d>
xor    %eax,%eax
jmp    1f283 <png_handle_sPLT+0x263>
mov    %r15,%rdi
lea    0xf95f(%rip),%rsi        # 2eb7d <png_pass_inc.20+0x30a>
callq  5390 <png_warning@plt>
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
leaveq 
retq   
mov    %r15,%rdi
lea    0xf960(%rip),%rsi        # 2eb97 <png_pass_inc.20+0x324>
callq  5390 <png_warning@plt>
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
leaveq 
retq   
movzbl (%r14),%ecx
mov    %cx,(%rsi)
movzbl 0x1(%r14),%ecx
mov    %cx,0x2(%rsi)
movzbl 0x2(%r14),%ecx
mov    %cx,0x4(%rsi)
movzbl 0x3(%r14),%ecx
mov    %cx,0x6(%rsi)
lea    0x4(%r14),%rcx
movzbl 0x1(%rcx),%edi
movzbl (%rcx),%edx
shl    $0x8,%edx
add    %edi,%edx
mov    %dx,0x8(%rsi)
add    $0x1,%eax
lea    0x2(%rcx),%r14
movslq -0x28(%rbp),%rcx
cmp    %eax,%ecx
jg     1f2be <png_handle_sPLT+0x29e>
mov    -0x20(%rbp),%rax
mov    %rax,-0x40(%rbp)
lea    -0x40(%rbp),%rdx
mov    $0x1,%ecx
mov    %r15,%rdi
mov    -0x8(%rbp),%rsi
callq  52a0 <png_set_sPLT@plt>
mov    %r15,%rdi
mov    -0x30(%rbp),%rsi
callq  5790 <png_free@plt>
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
leaveq 
retq   
movslq %eax,%rcx
lea    (%rcx,%rcx,4),%rcx
lea    (%rcx,%rcx,1),%rsi
add    -0x30(%rbp),%rsi
movzbl -0x38(%rbp),%ecx
cmp    $0x8,%cl
je     1f246 <png_handle_sPLT+0x226>
movzbl 0x1(%r14),%edx
movzbl (%r14),%ecx
shl    $0x8,%ecx
add    %edx,%ecx
mov    %cx,(%rsi)
movzbl 0x3(%r14),%edx
movzbl 0x2(%r14),%ecx
shl    $0x8,%ecx
add    %edx,%ecx
mov    %cx,0x2(%rsi)
movzbl 0x5(%r14),%edx
movzbl 0x4(%r14),%ecx
shl    $0x8,%ecx
add    %edx,%ecx
mov    %cx,0x4(%rsi)
movzbl 0x7(%r14),%edx
movzbl 0x6(%r14),%ecx
shl    $0x8,%ecx
add    %edx,%ecx
mov    %cx,0x6(%rsi)
lea    0x8(%r14),%rcx
jmpq   1f26c <png_handle_sPLT+0x24c>
nopl   (%rax)

000000000001f330 <png_handle_sRGB>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    0x12c(%rdi),%eax
mov    %rax,%rcx
and    $0x1,%ecx
test   %ecx,%ecx
je     1f38a <png_handle_sRGB+0x5a>
and    $0x6,%eax
test   %eax,%eax
jne    1f396 <png_handle_sRGB+0x66>
cmp    $0x1,%edx
jne    1f3c0 <png_handle_sRGB+0x90>
lea    -0x11(%rbp),%rcx
mov    $0x1,%edx
mov    %rdi,%rax
mov    %r15,-0x10(%rbp)
mov    %rsi,-0x8(%rbp)
mov    %rcx,%rsi
mov    %rdi,%r15
mov    %rax,%rdi
callq  1b220 <png_crc_read>
xor    %esi,%esi
mov    %r15,%rdi
callq  1b280 <png_crc_finish>
test   %eax,%eax
je     1f3ea <png_handle_sRGB+0xba>
mov    -0x10(%rbp),%r15
leaveq 
retq   
lea    0xf548(%rip),%rsi        # 2e8d9 <png_pass_inc.20+0x66>
callq  5060 <png_chunk_error@plt>
mov    %rdi,%rax
mov    %r15,-0x10(%rbp)
mov    %rdx,%rsi
mov    %rdi,%r15
mov    %rax,%rdi
callq  1b280 <png_crc_finish>
mov    %r15,%rdi
lea    0xf50f(%rip),%rsi        # 2e8c4 <png_pass_inc.20+0x51>
callq  5230 <png_chunk_benign_error@plt>
mov    -0x10(%rbp),%r15
leaveq 
retq   
mov    %rdi,%rax
mov    %r15,-0x10(%rbp)
mov    %rdx,%rsi
mov    %rdi,%r15
mov    %rax,%rdi
callq  1b280 <png_crc_finish>
mov    %r15,%rdi
lea    0xf4f2(%rip),%rsi        # 2e8d1 <png_pass_inc.20+0x5e>
callq  5230 <png_chunk_benign_error@plt>
mov    -0x10(%rbp),%r15
leaveq 
retq   
movzwl 0x4e2(%r15),%eax
mov    %rax,%rcx
and    $0x8000,%ecx
test   %ecx,%ecx
jle    1f405 <png_handle_sRGB+0xd5>
mov    -0x10(%rbp),%r15
leaveq 
retq   
mov    %rax,%rcx
and    $0x4,%ecx
test   %ecx,%ecx
jg     1f434 <png_handle_sRGB+0x104>
lea    0x498(%r15),%rsi
movzbl -0x11(%rbp),%edx
mov    %r15,%rdi
callq  71f0 <png_colorspace_set_sRGB>
mov    %r15,%rdi
mov    -0x8(%rbp),%rsi
callq  7020 <png_colorspace_sync>
mov    -0x10(%rbp),%r15
leaveq 
retq   
or     $0x8000,%ax
mov    %ax,0x4e2(%r15)
mov    %r15,%rdi
mov    -0x8(%rbp),%rsi
callq  7020 <png_colorspace_sync>
mov    %r15,%rdi
lea    0xf5fd(%rip),%rsi        # 2ea53 <png_pass_inc.20+0x1e0>
callq  5230 <png_chunk_benign_error@plt>
mov    -0x10(%rbp),%r15
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   0x0(%rax)

000000000001f470 <png_handle_tEXt>:
push   %rbp
mov    %rsp,%rbp
sub    $0x60,%rsp
mov    0x424(%rdi),%eax
test   %eax,%eax
je     1f4c3 <png_handle_tEXt+0x53>
cmp    $0x1,%eax
je     1f543 <png_handle_tEXt+0xd3>
add    $0xffffffff,%eax
mov    %eax,0x424(%rdi)
cmp    $0x1,%eax
jne    1f4c3 <png_handle_tEXt+0x53>
mov    %rdi,%rax
mov    %r15,-0x20(%rbp)
mov    %rdx,%rsi
mov    %rdi,%r15
mov    %rax,%rdi
callq  1b280 <png_crc_finish>
mov    %r15,%rdi
lea    0xf5ad(%rip),%rsi        # 2ea65 <png_pass_inc.20+0x1f2>
callq  5230 <png_chunk_benign_error@plt>
mov    -0x20(%rbp),%r15
leaveq 
retq   
mov    0x12c(%rdi),%eax
mov    %rax,%rcx
and    $0x1,%ecx
test   %ecx,%ecx
je     1f54d <png_handle_tEXt+0xdd>
mov    %rax,%rcx
and    $0x4,%ecx
test   %ecx,%ecx
je     1f4e6 <png_handle_tEXt+0x76>
or     $0x8,%eax
mov    %eax,0x12c(%rdi)
lea    0x1(%rdx),%eax
mov    %eax,%r8d
mov    $0x1,%eax
mov    %rdi,%rcx
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rsi,-0x18(%rbp)
mov    %r8,%rsi
mov    %rdx,%r14
mov    %rax,%rdx
mov    %rdi,%r15
mov    %rcx,%rdi
callq  200b0 <png_read_buffer>
test   %rax,%rax
je     1f559 <png_handle_tEXt+0xe9>
mov    %r15,%rdi
mov    %rax,%rsi
mov    %r14,%rdx
mov    %rax,-0x20(%rbp)
callq  1b220 <png_crc_read>
xor    %esi,%esi
mov    %r15,%rdi
callq  1b280 <png_crc_finish>
test   %eax,%eax
je     1f572 <png_handle_tEXt+0x102>
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
mov    %rdx,%rsi
callq  1b280 <png_crc_finish>
leaveq 
retq   
lea    0xf385(%rip),%rsi        # 2e8d9 <png_pass_inc.20+0x66>
callq  5060 <png_chunk_error@plt>
mov    %r15,%rdi
lea    0xf406(%rip),%rsi        # 2e969 <png_pass_inc.20+0xf6>
callq  5230 <png_chunk_benign_error@plt>
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
mov    %r14d,%eax
mov    -0x20(%rbp),%rdx
lea    (%rdx,%rax,1),%rcx
movb   $0x0,(%rcx)
mov    %rdx,%rdi
jmp    1f589 <png_handle_tEXt+0x119>
add    $0x1,%rdi
movsbq (%rdi),%rax
test   %al,%al
jne    1f585 <png_handle_tEXt+0x115>
cmp    %rcx,%rdi
je     1f59a <png_handle_tEXt+0x12a>
add    $0x1,%rdi
movl   $0xffffffff,-0x58(%rbp)
mov    %rdx,-0x50(%rbp)
movq   $0x0,-0x30(%rbp)
movq   $0x0,-0x28(%rbp)
movq   $0x0,-0x38(%rbp)
mov    %rdi,-0x48(%rbp)
callq  5260 <strlen@plt>
mov    %rax,-0x40(%rbp)
lea    -0x58(%rbp),%rdx
mov    %r15,%rdi
mov    $0x1,%ecx
mov    -0x18(%rbp),%rsi
callq  22df0 <png_set_text_2>
test   %eax,%eax
jne    1f5ed <png_handle_tEXt+0x17d>
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
mov    %r15,%rdi
lea    0xf5c4(%rip),%rsi        # 2ebbb <png_pass_inc.20+0x348>
callq  5390 <png_warning@plt>
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)

000000000001f610 <png_handle_tIME>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    0x12c(%rdi),%eax
and    $0x1,%eax
test   %eax,%eax
je     1f67e <png_handle_tIME+0x6e>
test   %rsi,%rsi
jne    1f68a <png_handle_tIME+0x7a>
mov    0x12c(%rdi),%eax
mov    %rax,%rcx
and    $0x4,%ecx
test   %ecx,%ecx
je     1f643 <png_handle_tIME+0x33>
or     $0x8,%eax
mov    %eax,0x12c(%rdi)
cmp    $0x7,%edx
jne    1f6c0 <png_handle_tIME+0xb0>
lea    -0x1f(%rbp),%rax
mov    $0x7,%edx
mov    %rdi,%rcx
mov    %r15,-0x10(%rbp)
mov    %rsi,-0x8(%rbp)
mov    %rax,%rsi
mov    %rdi,%r15
mov    %rcx,%rdi
callq  1b220 <png_crc_read>
xor    %esi,%esi
mov    %r15,%rdi
callq  1b280 <png_crc_finish>
test   %eax,%eax
je     1f6ea <png_handle_tIME+0xda>
mov    -0x10(%rbp),%r15
leaveq 
retq   
lea    0xf254(%rip),%rsi        # 2e8d9 <png_pass_inc.20+0x66>
callq  5060 <png_chunk_error@plt>
mov    0x8(%rsi),%eax
and    $0x200,%eax
test   %eax,%eax
je     1f62a <png_handle_tIME+0x1a>
mov    %rdi,%rax
mov    %r15,-0x10(%rbp)
mov    %rdx,%rsi
mov    %rdi,%r15
mov    %rax,%rdi
callq  1b280 <png_crc_finish>
mov    %r15,%rdi
lea    0xf231(%rip),%rsi        # 2e8e6 <png_pass_inc.20+0x73>
callq  5230 <png_chunk_benign_error@plt>
mov    -0x10(%rbp),%r15
leaveq 
retq   
mov    %rdi,%rax
mov    %r15,-0x10(%rbp)
mov    %rdx,%rsi
mov    %rdi,%r15
mov    %rax,%rdi
callq  1b280 <png_crc_finish>
mov    %r15,%rdi
lea    0xf1f2(%rip),%rsi        # 2e8d1 <png_pass_inc.20+0x5e>
callq  5230 <png_chunk_benign_error@plt>
mov    -0x10(%rbp),%r15
leaveq 
retq   
movzbl -0x19(%rbp),%eax
mov    %al,-0x12(%rbp)
movzbl -0x1a(%rbp),%eax
mov    %al,-0x13(%rbp)
movzbl -0x1b(%rbp),%eax
mov    %al,-0x14(%rbp)
movzbl -0x1c(%rbp),%eax
mov    %al,-0x15(%rbp)
movzbl -0x1d(%rbp),%eax
mov    %al,-0x16(%rbp)
movzbl -0x1e(%rbp),%ecx
movzbl -0x1f(%rbp),%eax
shl    $0x8,%eax
add    %ecx,%eax
mov    %ax,-0x18(%rbp)
mov    %r15,%rdi
lea    -0x18(%rbp),%rdx
mov    -0x8(%rbp),%rsi
callq  54e0 <png_set_tIME@plt>
mov    -0x10(%rbp),%r15
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nop

000000000001f740 <png_handle_tRNS>:
push   %rbp
mov    %rsp,%rbp
sub    $0x120,%rsp
mov    0x12c(%rdi),%eax
mov    %rax,%rcx
and    $0x1,%ecx
test   %ecx,%ecx
je     1f7b0 <png_handle_tRNS+0x70>
and    $0x4,%eax
test   %eax,%eax
jne    1f7bc <png_handle_tRNS+0x7c>
test   %rsi,%rsi
jne    1f7e6 <png_handle_tRNS+0xa6>
movzbl 0x267(%rdi),%eax
test   %al,%al
je     1f81e <png_handle_tRNS+0xde>
cmp    $0x2,%al
je     1f8a1 <png_handle_tRNS+0x161>
cmp    $0x3,%al
je     1f91a <png_handle_tRNS+0x1da>
mov    %rdi,%rax
mov    %r15,-0x18(%rbp)
mov    %rdx,%rsi
mov    %rdi,%r15
mov    %rax,%rdi
callq  1b280 <png_crc_finish>
mov    %r15,%rdi
lea    0xf440(%rip),%rsi        # 2ebe5 <png_pass_inc.20+0x372>
callq  5230 <png_chunk_benign_error@plt>
mov    -0x18(%rbp),%r15
leaveq 
retq   
lea    0xf122(%rip),%rsi        # 2e8d9 <png_pass_inc.20+0x66>
callq  5060 <png_chunk_error@plt>
mov    %rdi,%rax
mov    %r15,-0x18(%rbp)
mov    %rdx,%rsi
mov    %rdi,%r15
mov    %rax,%rdi
callq  1b280 <png_crc_finish>
mov    %r15,%rdi
lea    0xf0e9(%rip),%rsi        # 2e8c4 <png_pass_inc.20+0x51>
callq  5230 <png_chunk_benign_error@plt>
mov    -0x18(%rbp),%r15
leaveq 
retq   
mov    0x8(%rsi),%eax
and    $0x10,%eax
test   %eax,%eax
je     1f767 <png_handle_tRNS+0x27>
mov    %rdi,%rax
mov    %r15,-0x18(%rbp)
mov    %rdx,%rsi
mov    %rdi,%r15
mov    %rax,%rdi
callq  1b280 <png_crc_finish>
mov    %r15,%rdi
lea    0xf0d3(%rip),%rsi        # 2e8e6 <png_pass_inc.20+0x73>
callq  5230 <png_chunk_benign_error@plt>
mov    -0x18(%rbp),%r15
leaveq 
retq   
cmp    $0x2,%edx
jne    1f98c <png_handle_tRNS+0x24c>
lea    -0x20(%rbp),%rax
mov    $0x2,%edx
mov    %rdi,%rcx
mov    %r15,-0x18(%rbp)
mov    %rsi,-0x8(%rbp)
mov    %rax,%rsi
mov    %rdi,%r15
mov    %rcx,%rdi
callq  1b220 <png_crc_read>
movw   $0x1,0x260(%r15)
movzbl -0x1f(%rbp),%ecx
movzbl -0x20(%rbp),%eax
shl    $0x8,%eax
add    %ecx,%eax
mov    %ax,0x2f8(%r15)
xor    %esi,%esi
mov    %r15,%rdi
callq  1b280 <png_crc_finish>
test   %eax,%eax
jne    1f9b6 <png_handle_tRNS+0x276>
mov    %r15,%rdi
lea    -0x120(%rbp),%rdx
movzwl 0x260(%rdi),%ecx
lea    0x2f0(%rdi),%r8
mov    -0x8(%rbp),%rsi
callq  54f0 <png_set_tRNS@plt>
mov    -0x18(%rbp),%r15
leaveq 
retq   
cmp    $0x6,%edx
jne    1f9c6 <png_handle_tRNS+0x286>
lea    -0x1e(%rbp),%rax
mov    $0x6,%edx
mov    %rdi,%rcx
mov    %r15,-0x18(%rbp)
mov    %rsi,-0x8(%rbp)
mov    %rax,%rsi
mov    %rdi,%r15
mov    %rcx,%rdi
callq  1b220 <png_crc_read>
movw   $0x1,0x260(%r15)
movzbl -0x1d(%rbp),%ecx
movzbl -0x1e(%rbp),%eax
shl    $0x8,%eax
add    %ecx,%eax
mov    %ax,0x2f2(%r15)
movzbl -0x1b(%rbp),%ecx
movzbl -0x1c(%rbp),%eax
shl    $0x8,%eax
add    %ecx,%eax
mov    %ax,0x2f4(%r15)
movzbl -0x19(%rbp),%ecx
movzbl -0x1a(%rbp),%eax
shl    $0x8,%eax
add    %ecx,%eax
mov    %ax,0x2f6(%r15)
jmpq   1f868 <png_handle_tRNS+0x128>
mov    0x12c(%rdi),%eax
and    $0x2,%eax
test   %eax,%eax
je     1f9f0 <png_handle_tRNS+0x2b0>
movzwl 0x258(%rdi),%eax
cmp    %eax,%edx
ja     1fa1a <png_handle_tRNS+0x2da>
cmp    $0x100,%edx
ja     1fa1a <png_handle_tRNS+0x2da>
test   %edx,%edx
je     1fa1a <png_handle_tRNS+0x2da>
lea    -0x120(%rbp),%rax
mov    %rdi,%rcx
mov    %rdx,%r8
mov    %r15,-0x18(%rbp)
mov    %r14,-0x10(%rbp)
mov    %rsi,-0x8(%rbp)
mov    %rax,%rsi
mov    %rdx,%r14
mov    %r8,%rdx
mov    %rdi,%r15
mov    %rcx,%rdi
callq  1b220 <png_crc_read>
mov    %r14w,0x260(%r15)
mov    -0x10(%rbp),%r14
jmpq   1f868 <png_handle_tRNS+0x128>
mov    %rdi,%rax
mov    %r15,-0x18(%rbp)
mov    %rdx,%rsi
mov    %rdi,%r15
mov    %rax,%rdi
callq  1b280 <png_crc_finish>
mov    %r15,%rdi
lea    0xef26(%rip),%rsi        # 2e8d1 <png_pass_inc.20+0x5e>
callq  5230 <png_chunk_benign_error@plt>
mov    -0x18(%rbp),%r15
leaveq 
retq   
movw   $0x0,0x260(%r15)
mov    -0x18(%rbp),%r15
leaveq 
retq   
mov    %rdi,%rax
mov    %r15,-0x18(%rbp)
mov    %rdx,%rsi
mov    %rdi,%r15
mov    %rax,%rdi
callq  1b280 <png_crc_finish>
mov    %r15,%rdi
lea    0xeeec(%rip),%rsi        # 2e8d1 <png_pass_inc.20+0x5e>
callq  5230 <png_chunk_benign_error@plt>
mov    -0x18(%rbp),%r15
leaveq 
retq   
mov    %rdi,%rax
mov    %r15,-0x18(%rbp)
mov    %rdx,%rsi
mov    %rdi,%r15
mov    %rax,%rdi
callq  1b280 <png_crc_finish>
mov    %r15,%rdi
lea    0xeeb5(%rip),%rsi        # 2e8c4 <png_pass_inc.20+0x51>
callq  5230 <png_chunk_benign_error@plt>
mov    -0x18(%rbp),%r15
leaveq 
retq   
mov    %rdi,%rax
mov    %r15,-0x18(%rbp)
mov    %rdx,%rsi
mov    %rdi,%r15
mov    %rax,%rdi
callq  1b280 <png_crc_finish>
mov    %r15,%rdi
lea    0xee98(%rip),%rsi        # 2e8d1 <png_pass_inc.20+0x5e>
callq  5230 <png_chunk_benign_error@plt>
mov    -0x18(%rbp),%r15
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nop

000000000001fa50 <png_handle_zTXt>:
push   %rbp
mov    %rsp,%rbp
sub    $0x70,%rsp
mov    0x424(%rdi),%eax
test   %eax,%eax
jne    1faf4 <png_handle_zTXt+0xa4>
mov    0x12c(%rdi),%eax
mov    %rax,%rcx
and    $0x1,%ecx
test   %ecx,%ecx
je     1fb39 <png_handle_zTXt+0xe9>
mov    %rax,%rcx
and    $0x4,%ecx
test   %ecx,%ecx
je     1fa8d <png_handle_zTXt+0x3d>
or     $0x8,%eax
mov    %eax,0x12c(%rdi)
mov    %edx,%eax
mov    $0x2,%r8d
mov    %rdi,%rcx
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rsi,-0x18(%rbp)
mov    %rax,%rsi
mov    %rdx,%r14
mov    %r8,%rdx
mov    %rdi,%r15
mov    %rcx,%rdi
callq  200b0 <png_read_buffer>
test   %rax,%rax
je     1fb45 <png_handle_zTXt+0xf5>
mov    %r15,%rdi
mov    %rax,%rsi
mov    %r14,%rdx
mov    %rax,-0x28(%rbp)
callq  1b220 <png_crc_read>
xor    %eax,%eax
mov    %r15,%rdi
mov    %rax,%rsi
mov    %r15,-0x20(%rbp)
mov    %rax,%r15
callq  1b280 <png_crc_finish>
test   %eax,%eax
jne    1fb69 <png_handle_zTXt+0x119>
mov    -0x28(%rbp),%rax
jmpq   1fb80 <png_handle_zTXt+0x130>
cmp    $0x1,%eax
je     1fba8 <png_handle_zTXt+0x158>
add    $0xffffffff,%eax
mov    %eax,0x424(%rdi)
cmp    $0x1,%eax
jne    1fa66 <png_handle_zTXt+0x16>
mov    %rdi,%rax
mov    %r15,-0x28(%rbp)
mov    %rdx,%rsi
mov    %rdi,%r15
mov    %rax,%rdi
callq  1b280 <png_crc_finish>
mov    %r15,%rdi
lea    0xef37(%rip),%rsi        # 2ea65 <png_pass_inc.20+0x1f2>
callq  5230 <png_chunk_benign_error@plt>
mov    -0x28(%rbp),%r15
leaveq 
retq   
lea    0xed99(%rip),%rsi        # 2e8d9 <png_pass_inc.20+0x66>
callq  5060 <png_chunk_error@plt>
mov    %r14,%rsi
mov    %r15,%rdi
callq  1b280 <png_crc_finish>
mov    %r15,%rdi
lea    0xee0f(%rip),%rsi        # 2e969 <png_pass_inc.20+0xf6>
callq  5230 <png_chunk_benign_error@plt>
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
movzbl (%rax,%r9,1),%ecx
test   %cl,%cl
je     1fb88 <png_handle_zTXt+0x138>
add    $0x1,%r15d
mov    %r15d,%r9d
cmp    %r15d,%r14d
ja     1fb73 <png_handle_zTXt+0x123>
lea    0xeeb8(%rip),%rsi        # 2ea47 <png_pass_inc.20+0x1d4>
cmp    $0x4f,%r15d
jbe    1fbb2 <png_handle_zTXt+0x162>
mov    -0x20(%rbp),%rdi
test   %rsi,%rsi
jne    1fbbd <png_handle_zTXt+0x16d>
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
mov    %rdx,%rsi
callq  1b280 <png_crc_finish>
leaveq 
retq   
test   %r15d,%r15d
jne    1fbcc <png_handle_zTXt+0x17c>
mov    -0x20(%rbp),%rdi
jmp    1fb99 <png_handle_zTXt+0x149>
callq  5230 <png_chunk_benign_error@plt>
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
lea    0x3(%r15),%ecx
cmp    %ecx,%r14d
jae    1fbe2 <png_handle_zTXt+0x192>
lea    0xeea1(%rip),%rsi        # 2ea7d <png_pass_inc.20+0x20a>
mov    -0x20(%rbp),%rdi
jmp    1fb99 <png_handle_zTXt+0x149>
lea    0x1(%r15),%ecx
mov    %ecx,%ecx
movzbl (%rax,%rcx,1),%eax
test   %al,%al
je     1fbfd <png_handle_zTXt+0x1ad>
lea    0xf009(%rip),%rsi        # 2ec00 <png_pass_inc.20+0x38d>
mov    -0x20(%rbp),%rdi
jmp    1fb99 <png_handle_zTXt+0x149>
movq   $0xffffffffffffffff,-0x68(%rbp)
lea    0x2(%r15),%eax
lea    -0x68(%rbp),%rcx
mov    $0x1,%r8d
mov    -0x20(%rbp),%r15
mov    %r15,%rdi
mov    %rax,%rdx
mov    %r9,-0x28(%rbp)
mov    %r14,%rsi
mov    %rax,%r14
callq  20510 <png_decompress_chunk>
cmp    $0x1,%eax
je     1fc40 <png_handle_zTXt+0x1f0>
mov    %r15,%rdi
mov    0x170(%rdi),%rsi
jmpq   1fb99 <png_handle_zTXt+0x149>
mov    0x458(%r15),%rcx
test   %rcx,%rcx
jne    1fc5b <png_handle_zTXt+0x20b>
mov    %r15,%rdi
lea    0xefc3(%rip),%rsi        # 2ec19 <png_pass_inc.20+0x3a6>
jmpq   1fb99 <png_handle_zTXt+0x149>
mov    %r14d,%eax
add    -0x68(%rbp),%rax
movb   $0x0,(%rcx,%rax,1)
movl   $0x0,-0x60(%rbp)
mov    %rcx,-0x58(%rbp)
mov    -0x28(%rbp),%rax
lea    0x2(%rax,%rcx,1),%rax
mov    %rax,-0x50(%rbp)
mov    -0x68(%rbp),%rax
mov    %rax,-0x48(%rbp)
movq   $0x0,-0x40(%rbp)
movq   $0x0,-0x38(%rbp)
movq   $0x0,-0x30(%rbp)
lea    -0x60(%rbp),%rdx
mov    %r15,%rdi
mov    $0x1,%ecx
mov    -0x18(%rbp),%rsi
callq  22df0 <png_set_text_2>
test   %eax,%eax
jne    1fcc1 <png_handle_zTXt+0x271>
mov    %r15,%rdi
xor    %esi,%esi
jmpq   1fb99 <png_handle_zTXt+0x149>
mov    %r15,%rdi
lea    0xedbc(%rip),%rsi        # 2ea87 <png_pass_inc.20+0x214>
jmpq   1fb99 <png_handle_zTXt+0x149>

000000000001fcd0 <png_check_chunk_name>:
push   %rbp
mov    %rsp,%rbp
mov    $0x1,%eax
jmp    1fcf9 <png_check_chunk_name+0x29>
movzbl %sil,%ecx
cmp    $0x40,%ecx
jle    1fd00 <png_check_chunk_name+0x30>
cmp    $0x7a,%ecx
jg     1fd00 <png_check_chunk_name+0x30>
cmp    $0x5a,%ecx
jle    1fcf3 <png_check_chunk_name+0x23>
cmp    $0x60,%ecx
jle    1fd00 <png_check_chunk_name+0x30>
shr    $0x8,%esi
add    $0x1,%eax
cmp    $0x4,%eax
jle    1fcdb <png_check_chunk_name+0xb>
leaveq 
retq   
lea    0xef32(%rip),%rsi        # 2ec39 <png_pass_inc.20+0x3c6>
callq  5060 <png_chunk_error@plt>
nopl   0x0(%rax)

000000000001fd10 <png_check_chunk_length>:
push   %rbp
mov    %rsp,%rbp
mov    $0x7fffffff,%r8d
mov    0x428(%rdi),%rcx
test   %rcx,%rcx
jne    1fd3f <png_check_chunk_length+0x2f>
mov    %r8,%rcx
mov    0x218(%rdi),%eax
cmp    $0x49444154,%eax
je     1fd4d <png_check_chunk_length+0x3d>
mov    %esi,%eax
cmp    %rax,%rcx
jb     1fd6d <png_check_chunk_length+0x5d>
leaveq 
retq   
cmp    $0x7ffffffe,%rcx
jbe    1fd29 <png_check_chunk_length+0x19>
mov    %r8,%rcx
jmp    1fd29 <png_check_chunk_length+0x19>
mov    0x1f8(%rdi),%r11d
movzbl 0x26b(%rdi),%edx
movzbl 0x268(%rdi),%eax
cmp    $0x8,%al
ja     1fd79 <png_check_chunk_length+0x69>
mov    $0x1,%eax
jmp    1fd7e <png_check_chunk_length+0x6e>
lea    0xeed8(%rip),%rsi        # 2ec4c <png_pass_inc.20+0x3d9>
callq  5060 <png_chunk_error@plt>
mov    $0x2,%eax
xor    %r9d,%r9d
movzbl 0x264(%rdi),%r10d
test   %r10b,%r10b
je     1fd94 <png_check_chunk_length+0x84>
mov    $0x6,%r9d
imul   %r11d,%edx
imul   %edx,%eax
lea    0x1(%r9,%rax,1),%r11d
mov    %r11d,%r9d
mov    $0xffffffff,%eax
xor    %edx,%edx
mov    0x1fc(%rdi),%r10d
div    %r9
cmp    %r10,%rax
jae    1fdf8 <png_check_chunk_length+0xe8>
mov    %r8,%r10
cmp    $0x7f36,%r11d
jbe    1fdcb <png_check_chunk_length+0xbb>
mov    $0x7f36,%r9d
xor    %edx,%edx
mov    %r10,%rax
div    %r9
lea    (%rax,%rax,4),%rax
lea    0xb(%r10,%rax,1),%rax
cmp    $0x7ffffffe,%rax
ja     1fde7 <png_check_chunk_length+0xd7>
xor    %r8d,%r8d
cmp    %r8,%rcx
jae    1fd36 <png_check_chunk_length+0x26>
mov    %r8,%rcx
jmpq   1fd36 <png_check_chunk_length+0x26>
mov    0x1fc(%rdi),%eax
mov    %r9,%r10
imul   %rax,%r10
jmp    1fdbc <png_check_chunk_length+0xac>
nopw   0x0(%rax,%rax,1)

000000000001fe10 <png_handle_unknown>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    %r13,-0x8(%rbp)
mov    %r14,-0x10(%rbp)
mov    %r15,-0x18(%rbp)
mov    $0x1,%eax
mov    %rax,-0x28(%rbp)
xor    %eax,%eax
mov    %rax,-0x20(%rbp)
mov    0x3b8(%rdi),%rax
test   %rax,%rax
jne    1fe48 <png_handle_unknown+0x38>
test   %ecx,%ecx
je     1fe7e <png_handle_unknown+0x6e>
mov    %rcx,%r14
jmp    1fe85 <png_handle_unknown+0x75>
mov    %rcx,%r14
mov    %rsi,%r15
mov    %rdx,%rsi
mov    %rdi,%r13
callq  209d0 <png_cache_unknown_chunk>
test   %eax,%eax
jne    1feaf <png_handle_unknown+0x9f>
mov    $0x1,%r14d
pushq  -0x20(%rbp)
popq   -0x28(%rbp)
cmp    $0x3,%r14d
je     1fed8 <png_handle_unknown+0xc8>
cmp    $0x2,%r14d
je     1feee <png_handle_unknown+0xde>
mov    -0x28(%rbp),%r14
jmpq   1ff32 <png_handle_unknown+0x122>
movslq 0x3c0(%rdi),%r14
cmp    $0x3,%r14d
je     1ff7b <png_handle_unknown+0x16b>
cmp    $0x2,%r14d
je     1ff68 <png_handle_unknown+0x158>
mov    %rsi,%r15
mov    %rdx,%rsi
mov    %rdi,%r13
callq  1b280 <png_crc_finish>
pushq  -0x20(%rbp)
popq   -0x28(%rbp)
jmp    1fe69 <png_handle_unknown+0x59>
lea    0x430(%r13),%rsi
mov    %r13,%rdi
callq  *0x3b8(%r13)
test   %eax,%eax
js     1ff98 <png_handle_unknown+0x188>
test   %eax,%eax
je     1ffa7 <png_handle_unknown+0x197>
mov    $0x1,%r14d
jmp    1fe69 <png_handle_unknown+0x59>
mov    0x424(%r13),%eax
test   %eax,%eax
je     1ff17 <png_handle_unknown+0x107>
cmp    $0x1,%eax
jne    1ff04 <png_handle_unknown+0xf4>
mov    -0x28(%rbp),%r14
jmp    1ff32 <png_handle_unknown+0x122>
mov    0x218(%r13),%eax
and    $0x20000000,%eax
test   %eax,%eax
jne    1fed8 <png_handle_unknown+0xc8>
mov    -0x28(%rbp),%r14
jmp    1ff32 <png_handle_unknown+0x122>
cmp    $0x2,%eax
je     1ffb8 <png_handle_unknown+0x1a8>
add    $0xffffffff,%eax
mov    %eax,0x424(%r13)
mov    %r15,%rsi
lea    0x430(%r13),%rdx
mov    %r13,%rdi
mov    $0x1,%r14d
mov    %r14,%rcx
callq  5750 <png_set_unknown_chunks@plt>
mov    0x438(%r13),%rsi
test   %rsi,%rsi
je     1ff46 <png_handle_unknown+0x136>
mov    %r13,%rdi
callq  5790 <png_free@plt>
movq   $0x0,0x438(%r13)
test   %r14d,%r14d
je     1ffdb <png_handle_unknown+0x1cb>
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
leaveq 
retq   
mov    0x218(%rdi),%eax
and    $0x20000000,%eax
test   %eax,%eax
je     1fe99 <png_handle_unknown+0x89>
mov    %rsi,%r15
mov    %rdx,%rsi
mov    %rdi,%r13
callq  209d0 <png_cache_unknown_chunk>
test   %eax,%eax
je     1fff9 <png_handle_unknown+0x1e9>
pushq  -0x20(%rbp)
popq   -0x28(%rbp)
jmpq   1fe69 <png_handle_unknown+0x59>
mov    %r13,%rdi
lea    0xecc2(%rip),%rsi        # 2ec64 <png_pass_inc.20+0x3f1>
callq  5060 <png_chunk_error@plt>
cmp    $0x1,%r14d
jle    2000a <png_handle_unknown+0x1fa>
pushq  -0x20(%rbp)
popq   -0x28(%rbp)
jmpq   1fe69 <png_handle_unknown+0x59>
movl   $0x1,0x424(%r13)
lea    0xea9b(%rip),%rsi        # 2ea65 <png_pass_inc.20+0x1f2>
mov    %r13,%rdi
callq  5230 <png_chunk_benign_error@plt>
mov    -0x28(%rbp),%r14
jmpq   1ff32 <png_handle_unknown+0x122>
mov    0x218(%r13),%eax
and    $0x20000000,%eax
test   %eax,%eax
je     20027 <png_handle_unknown+0x217>
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
leaveq 
retq   
mov    $0x1,%r14d
pushq  -0x20(%rbp)
popq   -0x28(%rbp)
jmpq   1fe69 <png_handle_unknown+0x59>
mov    $0x2,%r14d
movslq 0x3c0(%r13),%rax
cmp    $0x1,%eax
jle    20036 <png_handle_unknown+0x226>
pushq  -0x20(%rbp)
popq   -0x28(%rbp)
jmpq   1fe69 <png_handle_unknown+0x59>
mov    %r13,%rdi
lea    0xeca9(%rip),%rsi        # 2ecda <png_pass_inc.20+0x467>
callq  5060 <png_chunk_error@plt>
lea    0xec3b(%rip),%rsi        # 2ec78 <png_pass_inc.20+0x405>
mov    %r13,%rdi
callq  56a0 <png_chunk_warning@plt>
lea    0xec42(%rip),%rsi        # 2ec8e <png_pass_inc.20+0x41b>
mov    %r13,%rdi
callq  b100 <png_app_warning>
pushq  -0x20(%rbp)
popq   -0x28(%rbp)
jmpq   1fe69 <png_handle_unknown+0x59>
nop

0000000000020060 <png_get_fixed_point>:
push   %rbp
mov    %rsp,%rbp
movzbl (%rsi),%eax
shl    $0x18,%eax
movzbl 0x1(%rsi),%ecx
shl    $0x10,%ecx
add    %eax,%ecx
movzbl 0x2(%rsi),%eax
shl    $0x8,%eax
add    %ecx,%eax
movzbl 0x3(%rsi),%ecx
add    %ecx,%eax
cmp    $0x7fffffff,%eax
ja     2008b <png_get_fixed_point+0x2b>
leaveq 
retq   
mov    $0xffffffffffffffff,%rax
test   %rdi,%rdi
jne    20099 <png_get_fixed_point+0x39>
leaveq 
retq   
lea    0xec53(%rip),%rsi        # 2ecf3 <png_pass_inc.20+0x480>
callq  5390 <png_warning@plt>
mov    $0xffffffffffffffff,%rax
leaveq 
retq   
xchg   %ax,%ax

00000000000200b0 <png_read_buffer>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
xor    %eax,%eax
mov    0x458(%rdi),%rcx
test   %rcx,%rcx
jne    200cd <png_read_buffer+0x1d>
test   %rax,%rax
je     200de <png_read_buffer+0x2e>
leaveq 
retq   
mov    0x460(%rdi),%rax
cmp    %rsi,%rax
jb     20118 <png_read_buffer+0x68>
mov    %rcx,%rax
jmp    200c6 <png_read_buffer+0x16>
mov    %rdi,%rcx
mov    %rsi,%rax
mov    %rdi,-0x8(%rbp)
mov    %r14,-0x10(%rbp)
mov    %r15,-0x18(%rbp)
mov    %rcx,%rdi
mov    %rsi,%r14
mov    %rax,%rsi
mov    %rdx,%r15
callq  c950 <png_malloc_base>
test   %rax,%rax
jne    2015b <png_read_buffer+0xab>
cmp    $0x1,%r15d
jle    2018a <png_read_buffer+0xda>
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
xor    %eax,%eax
leaveq 
retq   
movq   $0x0,0x458(%rdi)
movq   $0x0,0x460(%rdi)
mov    %rdi,%rax
mov    %rdi,-0x10(%rbp)
mov    %rsi,-0x18(%rbp)
mov    %rdx,-0x8(%rbp)
mov    %rcx,%rsi
mov    %rax,%rdi
callq  5790 <png_free@plt>
xor    %eax,%eax
mov    -0x8(%rbp),%rdx
mov    -0x18(%rbp),%rsi
mov    -0x10(%rbp),%rdi
jmpq   200c6 <png_read_buffer+0x16>
mov    %rax,%r15
mov    %r15,%rdi
mov    %r14,%rdx
xor    %esi,%esi
callq  5350 <memset@plt>
mov    -0x8(%rbp),%rax
mov    %r15,0x458(%rax)
mov    %r14,0x460(%rax)
mov    %r15,%rax
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
leaveq 
retq   
lea    0xeb87(%rip),%rsi        # 2ed18 <png_pass_inc.20+0x4a5>
test   %r15d,%r15d
jne    2019f <png_read_buffer+0xef>
mov    -0x8(%rbp),%rdi
callq  5060 <png_chunk_error@plt>
mov    -0x8(%rbp),%rdi
callq  56a0 <png_chunk_warning@plt>
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
xor    %eax,%eax
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nop

00000000000201c0 <png_inflate_claim>:
push   %rbp
mov    %rsp,%rbp
sub    $0x60,%rsp
mov    %r14,-0x10(%rbp)
mov    %r15,-0x18(%rbp)
mov    %r13,-0x8(%rbp)
mov    0x138(%rdi),%ecx
test   %ecx,%ecx
jne    201e6 <png_inflate_claim+0x26>
mov    %rdi,%r13
mov    %rsi,%r14
jmp    2023b <png_inflate_claim+0x7b>
mov    %rcx,%rax
shr    $0x18,%eax
mov    %al,-0x58(%rbp)
mov    %rcx,%rax
shr    $0x10,%eax
mov    %al,-0x57(%rbp)
mov    %rcx,%rax
shr    $0x8,%eax
mov    %al,-0x56(%rbp)
mov    %cl,-0x55(%rbp)
mov    %rdi,%r13
mov    %rsi,%r14
lea    -0x58(%rbp),%rdi
mov    $0x40,%esi
mov    $0x4,%edx
lea    0xeb1b(%rip),%rcx        # 2ed3a <png_pass_inc.20+0x4c7>
callq  ad30 <png_safecat>
mov    %r13,%rdi
lea    -0x58(%rbp),%rsi
callq  56a0 <png_chunk_warning@plt>
movl   $0x0,0x138(%r13)
xor    %esi,%esi
mov    0x388(%r13),%eax
and    $0xc,%eax
cmp    $0xc,%eax
je     20256 <png_inflate_claim+0x96>
movb   $0x1,0x270(%r13)
jmp    20263 <png_inflate_claim+0xa3>
movb   $0x0,0x270(%r13)
mov    $0xf,%esi
lea    0x140(%r13),%r15
movq   $0x0,(%r15)
movl   $0x0,0x148(%r13)
movq   $0x0,0x158(%r13)
movl   $0x0,0x160(%r13)
mov    0x130(%r13),%eax
and    $0x2,%eax
test   %eax,%eax
jne    202cd <png_inflate_claim+0x10d>
lea    0xeaa2(%rip),%rdx        # 2ed49 <png_pass_inc.20+0x4d6>
mov    $0x70,%ecx
mov    %r15,%rdi
callq  5770 <inflateInit2_@plt>
test   %eax,%eax
jne    202d5 <png_inflate_claim+0x115>
mov    0x130(%r13),%eax
or     $0x2,%eax
mov    %eax,0x130(%r13)
xor    %eax,%eax
jmp    202d5 <png_inflate_claim+0x115>
mov    %r15,%rdi
callq  5180 <inflateReset2@plt>
mov    0x388(%r13),%ecx
and    $0x300,%ecx
cmp    $0x300,%ecx
jne    202f4 <png_inflate_claim+0x134>
mov    %r15,%rdi
xor    %esi,%esi
callq  5220 <inflateValidate@plt>
test   %eax,%eax
je     20317 <png_inflate_claim+0x157>
mov    %r13,%rdi
mov    %rax,%r13
mov    %r13,%rsi
callq  6920 <png_zstream_error>
mov    %r13,%rax
mov    -0x8(%rbp),%r13
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
leaveq 
retq   
mov    %r14d,0x138(%r13)
mov    -0x8(%rbp),%r13
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
leaveq 
retq   
nopl   0x0(%rax)

0000000000020330 <png_inflate>:
push   %rbp
mov    %rsp,%rbp
sub    $0x440,%rsp
mov    0x138(%rdi),%eax
cmp    %esi,%eax
je     2035c <png_inflate+0x2c>
lea    0xea04(%rip),%rax        # 2ed50 <png_pass_inc.20+0x4dd>
mov    %rax,0x170(%rdi)
mov    $0xfffffffffffffffe,%rax
leaveq 
retq   
mov    0x10(%rbp),%rax
mov    %rax,-0x10(%rbp)
mov    (%rax),%r11
mov    (%r8),%r10d
mov    %rcx,0x140(%rdi)
movl   $0x0,0x148(%rdi)
movl   $0x0,0x160(%rdi)
lea    -0x438(%rbp),%rcx
xor    %esi,%esi
mov    %r15,-0x38(%rbp)
mov    $0x4,%r15d
mov    %r14,-0x30(%rbp)
mov    $0x2,%r14d
mov    %r13,-0x28(%rbp)
mov    $0xffffffff,%eax
mov    %r12,-0x20(%rbp)
mov    $0x400,%r12d
test   %r9,%r9
jne    203df <png_inflate+0xaf>
mov    %r8,-0x8(%rbp)
mov    %rbx,-0x18(%rbp)
mov    %r10,%rbx
mov    %rcx,%r10
mov    %r12,%rcx
mov    %r11,%r12
mov    %r15,%r11
mov    %rdx,%r15
mov    %r14,%rdx
mov    %r9,%r14
mov    %rdi,%r13
jmp    20429 <png_inflate+0xf9>
mov    %r9,0x158(%rdi)
mov    %r8,-0x8(%rbp)
mov    %rbx,-0x18(%rbp)
mov    %r10,%rbx
mov    %rcx,%r10
mov    %r12,%rcx
mov    %r11,%r12
mov    %r15,%r11
mov    %rdx,%r15
mov    %r14,%rdx
mov    %r9,%r14
mov    %rdi,%r13
jmp    20429 <png_inflate+0xf9>
mov    $0x2,%edx
mov    $0x4,%r11d
xor    %esi,%esi
mov    $0x400,%ecx
lea    -0x438(%rbp),%r10
mov    $0xffffffff,%eax
add    0x148(%r13),%ebx
cmp    $0xfffffffe,%ebx
jbe    2043a <png_inflate+0x10a>
mov    %rax,%r8
jmp    2043d <png_inflate+0x10d>
mov    %rbx,%r8
test   %r14,%r14
mov    0x160(%r13),%edi
mov    %r8d,0x148(%r13)
jne    2045a <png_inflate+0x12a>
mov    %r10,0x158(%r13)
mov    %rcx,%rax
add    %rdi,%r12
cmp    %r12,%rax
jbe    20465 <png_inflate+0x135>
mov    %r12,%rax
mov    %eax,0x160(%r13)
mov    %eax,%eax
cmp    %rax,%r12
jne    2047f <png_inflate+0x14f>
test   %r15d,%r15d
jne    20501 <png_inflate+0x1d1>
mov    %rdx,%rsi
sub    %r8d,%ebx
sub    %rax,%r12
mov    %r13,%rdi
callq  1ca90 <png_zlib_inflate>
test   %eax,%eax
je     2040b <png_inflate+0xdb>
test   %r14,%r14
jne    204a5 <png_inflate+0x175>
movq   $0x0,0x158(%r13)
mov    0x148(%r13),%esi
mov    0x160(%r13),%ecx
lea    (%r12,%rcx,1),%rdx
test   %rdx,%rdx
je     204c9 <png_inflate+0x199>
mov    -0x10(%rbp),%rdi
mov    (%rdi),%rcx
sub    %rdx,%rcx
mov    %rcx,(%rdi)
lea    (%rbx,%rsi,1),%edx
test   %edx,%edx
je     204da <png_inflate+0x1aa>
mov    -0x8(%rbp),%rsi
mov    (%rsi),%ecx
sub    %edx,%ecx
mov    %ecx,(%rsi)
mov    %r13,%rdi
mov    %rax,%r15
mov    %r15,%rsi
callq  6920 <png_zstream_error>
mov    %r15,%rax
mov    -0x18(%rbp),%rbx
mov    -0x20(%rbp),%r12
mov    -0x28(%rbp),%r13
mov    -0x30(%rbp),%r14
mov    -0x38(%rbp),%r15
leaveq 
retq   
mov    %r11,%rsi
jmpq   2047f <png_inflate+0x14f>
nopl   0x0(%rax)

0000000000020510 <png_decompress_chunk>:
push   %rbp
mov    %rsp,%rbp
sub    $0x60,%rsp
mov    $0xffffffffffffffff,%rax
mov    0x428(%rdi),%r9
test   %r9,%r9
jne    20567 <png_decompress_chunk+0x57>
mov    $0x1,%r9d
mov    %r9,-0x20(%rbp)
xor    %r10d,%r10d
mov    %r10,-0x28(%rbp)
test   %r8d,%r8d
je     20544 <png_decompress_chunk+0x34>
mov    %r9,%r10
mov    $0xfffffffffffffffc,%r11
add    %edx,%r10d
mov    %r10d,%r10d
cmp    %rax,%r10
jbe    20572 <png_decompress_chunk+0x62>
mov    %r11,%rsi
callq  6920 <png_zstream_error>
mov    $0xfffffffffffffffc,%rax
leaveq 
retq   
cmp    $0xfffffffffffffffe,%r9
ja     2052b <png_decompress_chunk+0x1b>
mov    %r9,%rax
jmp    2052b <png_decompress_chunk+0x1b>
test   %r8d,%r8d
jne    2057a <png_decompress_chunk+0x6a>
xor    %r9d,%r9d
add    %edx,%r9d
mov    %r9d,%r9d
sub    %r9,%rax
mov    (%rcx),%r9
cmp    %rax,%r9
jbe    2058e <png_decompress_chunk+0x7e>
mov    %rax,(%rcx)
mov    0x218(%rdi),%eax
mov    %rdi,%r9
mov    %r14,-0x48(%rbp)
mov    %r15,-0x50(%rbp)
mov    %rdi,-0x40(%rbp)
mov    %rcx,-0x38(%rbp)
mov    %r8,-0x30(%rbp)
mov    %r9,%rdi
mov    %rsi,%r14
mov    %rax,%rsi
mov    %rdx,%r15
callq  201c0 <png_inflate_claim>
test   %eax,%eax
je     205d6 <png_decompress_chunk+0xc6>
cmp    $0x1,%eax
jne    2062f <png_decompress_chunk+0x11f>
mov    $0xfffffffffffffff9,%rax
mov    -0x50(%rbp),%r15
mov    -0x48(%rbp),%r14
leaveq 
retq   
sub    %r15d,%r14d
mov    %r14,-0x8(%rbp)
mov    %r14d,-0x54(%rbp)
mov    %r15d,%ecx
mov    %rcx,-0x18(%rbp)
mov    -0x40(%rbp),%r14
add    0x458(%r14),%rcx
mov    0x218(%r14),%esi
mov    -0x38(%rbp),%rax
mov    %rax,(%rsp)
lea    -0x54(%rbp),%r8
mov    %r14,%rdi
mov    $0x1,%edx
xor    %r9d,%r9d
mov    %r15,-0x40(%rbp)
mov    %rax,%r15
callq  20330 <png_inflate>
cmp    $0x1,%eax
je     20639 <png_decompress_chunk+0x129>
test   %eax,%eax
jne    2065d <png_decompress_chunk+0x14d>
mov    $0xfffffffffffffff9,%rax
jmp    2065d <png_decompress_chunk+0x14d>
mov    -0x50(%rbp),%r15
mov    -0x48(%rbp),%r14
leaveq 
retq   
lea    0x140(%r14),%rdi
callq  57f0 <inflateReset@plt>
test   %eax,%eax
je     20672 <png_decompress_chunk+0x162>
mov    %r14,%rdi
mov    $0x1,%esi
callq  6920 <png_zstream_error>
mov    $0xfffffffffffffff9,%rax
movl   $0x0,0x138(%r14)
mov    -0x50(%rbp),%r15
mov    -0x48(%rbp),%r14
leaveq 
retq   
mov    -0x30(%rbp),%rax
test   %eax,%eax
mov    (%r15),%rax
mov    %rax,-0x10(%rbp)
je     20687 <png_decompress_chunk+0x177>
pushq  -0x20(%rbp)
popq   -0x28(%rbp)
mov    -0x40(%rbp),%rcx
mov    %ecx,%ecx
mov    %rcx,-0x20(%rbp)
add    %rcx,%rax
mov    -0x28(%rbp),%rcx
lea    (%rcx,%rax,1),%r15
mov    %r14,%rdi
mov    %r15,%rsi
callq  c950 <png_malloc_base>
test   %rax,%rax
jne    206c3 <png_decompress_chunk+0x1b3>
mov    %r14,%rdi
mov    $0xfffffffffffffffc,%r15
mov    %r15,%rsi
callq  6920 <png_zstream_error>
mov    %r15,%rax
jmp    2065d <png_decompress_chunk+0x14d>
mov    %rax,%rdi
mov    %r15,%rdx
mov    %r15,-0x28(%rbp)
mov    %rax,%r15
xor    %esi,%esi
callq  5350 <memset@plt>
mov    -0x18(%rbp),%rax
mov    %rax,%rcx
add    0x458(%r14),%rcx
lea    (%rax,%r15,1),%r9
mov    0x218(%r14),%esi
mov    -0x38(%rbp),%rax
mov    %rax,(%rsp)
mov    %r14,%rdi
mov    $0x1,%edx
mov    %r13,-0x38(%rbp)
mov    %rax,%r13
lea    -0x54(%rbp),%r8
callq  20330 <png_inflate>
cmp    $0x1,%eax
je     20722 <png_decompress_chunk+0x212>
test   %eax,%eax
jne    20768 <png_decompress_chunk+0x258>
mov    $0xfffffffffffffff9,%rax
jmp    20768 <png_decompress_chunk+0x258>
mov    0x0(%r13),%rax
mov    -0x10(%rbp),%rcx
cmp    %rax,%rcx
je     20788 <png_decompress_chunk+0x278>
mov    $0xfffffffffffffff9,%rax
jmp    20768 <png_decompress_chunk+0x258>
mov    %r15,%r13
mov    0x458(%r14),%rsi
mov    %r13,%rdi
callq  54c0 <memcpy@plt>
mov    0x458(%r14),%r15
mov    %r13,0x458(%r14)
mov    -0x28(%rbp),%rax
mov    %rax,0x460(%r14)
mov    $0x1,%eax
mov    %r15,%rsi
mov    %rax,%r15
mov    %r14,%rdi
callq  5790 <png_free@plt>
cmp    $0x1,%r15d
je     20796 <png_decompress_chunk+0x286>
mov    %r15,%rax
mov    -0x38(%rbp),%r13
jmpq   2065d <png_decompress_chunk+0x14d>
mov    -0x30(%rbp),%rcx
test   %ecx,%ecx
jne    207ad <png_decompress_chunk+0x29d>
mov    -0x20(%rbp),%rdx
jmp    207b9 <png_decompress_chunk+0x2a9>
mov    -0x8(%rbp),%rax
cmp    -0x54(%rbp),%eax
jne    207ca <png_decompress_chunk+0x2ba>
mov    -0x38(%rbp),%r13
mov    $0x1,%eax
jmpq   2065d <png_decompress_chunk+0x14d>
mov    -0x20(%rbp),%rdx
add    %rdx,%rax
movb   $0x0,(%r15,%rax,1)
mov    -0x40(%rbp),%rax
test   %eax,%eax
jne    20738 <png_decompress_chunk+0x228>
mov    %r15,%r13
jmp    2074a <png_decompress_chunk+0x23a>
lea    0xe249(%rip),%rsi        # 2ea1a <png_pass_inc.20+0x1a7>
mov    %r14,%rdi
callq  5230 <png_chunk_benign_error@plt>
mov    -0x38(%rbp),%r13
mov    $0x1,%eax
jmpq   2065d <png_decompress_chunk+0x14d>
nopw   0x0(%rax,%rax,1)

00000000000207f0 <png_inflate_read>:
push   %rbp
mov    %rsp,%rbp
sub    $0x40,%rsp
mov    %rsi,-0x38(%rbp)
mov    0x218(%rdi),%eax
cmp    0x138(%rdi),%eax
je     20821 <png_inflate_read+0x31>
lea    0xe53f(%rip),%rax        # 2ed50 <png_pass_inc.20+0x4dd>
mov    %rax,0x170(%rdi)
mov    $0xfffffffffffffffe,%rax
leaveq 
retq   
mov    %r8,0x158(%rdi)
movl   $0x0,0x160(%rdi)
movslq 0x10(%rbp),%r10
mov    %r10,-0x30(%rbp)
xor    %eax,%eax
mov    $0x4,%r8d
mov    $0x2,%r11d
mov    %r15,-0x28(%rbp)
mov    $0xffffffff,%r15d
mov    %r14,-0x20(%rbp)
mov    $0xfffffffe,%r14d
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %rdx,%rbx
mov    %rdi,%r12
mov    %r9,%r13
mov    %r15,%rdx
mov    %r10,%r15
mov    %r14,%r10
mov    %rcx,%r14
mov    %rsi,%rcx
mov    %rax,%rsi
mov    %rdx,%rax
jmpq   20949 <png_inflate_read+0x159>
mov    (%r14),%edx
cmp    %ebx,%edx
jae    20895 <png_inflate_read+0xa5>
mov    %rdx,%rbx
sub    %ebx,%edx
mov    %edx,(%r14)
test   %ebx,%ebx
je     208cf <png_inflate_read+0xdf>
mov    %rcx,%r15
mov    %r12,%rdi
mov    %r15,%rsi
mov    %rbx,%rdx
callq  1b220 <png_crc_read>
mov    %r15,%rcx
mov    $0x2,%r11d
mov    $0x4,%r8d
xor    %esi,%esi
mov    $0xffffffff,%eax
mov    $0xfffffffe,%r10d
mov    -0x30(%rbp),%r15
mov    %rcx,0x140(%r12)
mov    %ebx,0x148(%r12)
mov    0x160(%r12),%ecx
test   %ecx,%ecx
jne    20908 <png_inflate_read+0x118>
mov    0x0(%r13),%rcx
cmp    %r10,%rcx
ja     208f7 <png_inflate_read+0x107>
mov    %rcx,%rax
mov    %eax,%edx
sub    %rdx,%rcx
mov    %rcx,0x0(%r13)
mov    %eax,0x160(%r12)
mov    (%r14),%eax
test   %eax,%eax
jne    20917 <png_inflate_read+0x127>
test   %r15d,%r15d
jne    2095b <png_inflate_read+0x16b>
mov    %r11,%rsi
mov    %r12,%rdi
callq  1ca90 <png_zlib_inflate>
test   %eax,%eax
jne    20960 <png_inflate_read+0x170>
mov    0x0(%r13),%rcx
test   %rcx,%rcx
je     209a1 <png_inflate_read+0x1b1>
mov    -0x38(%rbp),%rcx
mov    $0x2,%r11d
mov    $0x4,%r8d
xor    %esi,%esi
mov    $0xffffffff,%eax
mov    $0xfffffffe,%r10d
mov    0x148(%r12),%edx
test   %edx,%edx
je     2088b <png_inflate_read+0x9b>
jmp    208df <png_inflate_read+0xef>
mov    %r8,%rsi
jmp    20917 <png_inflate_read+0x127>
mov    0x160(%r12),%ecx
add    0x0(%r13),%rcx
mov    %rcx,0x0(%r13)
mov    %r12,%rdi
mov    %rax,%r15
movl   $0x0,0x160(%rdi)
mov    %r15,%rsi
callq  6920 <png_zstream_error>
mov    %r15,%rax
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x20(%rbp),%r14
mov    -0x28(%rbp),%r15
leaveq 
retq   
mov    0x160(%r12),%ecx
test   %ecx,%ecx
je     20960 <png_inflate_read+0x170>
mov    -0x38(%rbp),%rcx
mov    $0x2,%r11d
mov    $0x4,%r8d
xor    %esi,%esi
mov    $0xffffffff,%eax
mov    $0xfffffffe,%r10d
jmpq   20949 <png_inflate_read+0x159>
nop

00000000000209d0 <png_cache_unknown_chunk>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x10(%rbp)
mov    0x438(%rdi),%rax
test   %rax,%rax
jne    209f0 <png_cache_unknown_chunk+0x20>
mov    %r15,%rcx
mov    %rdi,%r15
jmp    20a1e <png_cache_unknown_chunk+0x4e>
mov    %rdi,%rcx
mov    %r14,-0x8(%rbp)
mov    %rsi,%r14
mov    %rax,%rsi
mov    %rdi,%r15
mov    %rcx,%rdi
callq  5790 <png_free@plt>
movq   $0x0,0x438(%r15)
mov    %r14,%rsi
mov    -0x10(%rbp),%rcx
mov    -0x8(%rbp),%r14
mov    $0xffffffffffffffff,%rax
mov    0x428(%r15),%rdx
test   %rdx,%rdx
jne    20a5a <png_cache_unknown_chunk+0x8a>
mov    %esi,%edx
cmp    %rdx,%rax
jae    20a65 <png_cache_unknown_chunk+0x95>
xor    %eax,%eax
mov    0x438(%r15),%rdx
test   %rdx,%rdx
je     20ae5 <png_cache_unknown_chunk+0x115>
test   %esi,%esi
jne    20b0c <png_cache_unknown_chunk+0x13c>
mov    %rax,%rsi
jmpq   20b23 <png_cache_unknown_chunk+0x153>
cmp    $0xfffffffffffffffe,%rdx
ja     20a31 <png_cache_unknown_chunk+0x61>
mov    %rdx,%rax
jmp    20a31 <png_cache_unknown_chunk+0x61>
mov    0x218(%r15),%eax
mov    %rax,%rdi
shr    $0x18,%edi
mov    %dil,0x430(%r15)
mov    %rax,%rdi
shr    $0x10,%edi
mov    %dil,0x431(%r15)
mov    %rax,%rdi
shr    $0x8,%edi
mov    %dil,0x432(%r15)
mov    %al,0x433(%r15)
movb   $0x0,0x434(%r15)
mov    %rdx,0x440(%r15)
movzbl 0x12c(%r15),%eax
mov    %al,0x448(%r15)
test   %esi,%esi
je     20b35 <png_cache_unknown_chunk+0x165>
mov    %r15,%rdi
mov    %r14,-0x8(%rbp)
mov    %rsi,%r14
mov    %rdx,%rsi
callq  5150 <png_malloc_warn@plt>
mov    %rax,0x438(%r15)
mov    %r14,%rsi
mov    -0x10(%rbp),%rcx
mov    -0x8(%rbp),%r14
jmpq   20a38 <png_cache_unknown_chunk+0x68>
test   %esi,%esi
je     20a4a <png_cache_unknown_chunk+0x7a>
mov    %r15,%rdi
callq  1b280 <png_crc_finish>
mov    %r15,%rdi
lea    0xe263(%rip),%rsi        # 2ed62 <png_pass_inc.20+0x4ef>
callq  5230 <png_chunk_benign_error@plt>
xor    %eax,%eax
mov    -0x10(%rbp),%r15
leaveq 
retq   
mov    %rsi,%rax
mov    %rdx,%rsi
mov    %rax,%rdx
mov    %r15,%rdi
callq  1b220 <png_crc_read>
xor    %esi,%esi
mov    -0x10(%rbp),%rcx
mov    %r15,%rdi
mov    %rcx,%r15
callq  1b280 <png_crc_finish>
mov    $0x1,%eax
leaveq 
retq   
movq   $0x0,0x438(%r15)
jmpq   20a38 <png_cache_unknown_chunk+0x68>
data16 nopw %cs:0x0(%rax,%rax,1)

0000000000020b50 <png_read_filter_row_sub>:
push   %rbp
mov    %rsp,%rbp
mov    0x8(%rdi),%rdx
movzbl 0x13(%rdi),%eax
add    $0x7,%eax
shr    $0x3,%eax
mov    %eax,%r8d
lea    (%r8,%rsi,1),%rax
mov    %r8,%rcx
jmp    20b87 <png_read_filter_row_sub+0x37>
mov    %rax,%rsi
sub    %r8,%rsi
movzbl (%rsi),%esi
movzbl (%rax),%edi
add    %edi,%esi
mov    %sil,(%rax)
add    $0x1,%rcx
add    $0x1,%rax
cmp    %rdx,%rcx
jb     20b6e <png_read_filter_row_sub+0x1e>
leaveq 
retq   
xchg   %ax,%ax

0000000000020b90 <png_read_filter_row_up>:
push   %rbp
mov    %rsp,%rbp
mov    0x8(%rdi),%r8
xor    %eax,%eax
jmp    20bb2 <png_read_filter_row_up+0x22>
movzbl (%rdx),%ecx
movzbl (%rsi),%edi
add    %edi,%ecx
mov    %cl,(%rsi)
add    $0x1,%rax
add    $0x1,%rdx
add    $0x1,%rsi
cmp    %r8,%rax
jb     20b9c <png_read_filter_row_up+0xc>
leaveq 
retq   
nopl   0x0(%rax)

0000000000020bc0 <png_read_filter_row_avg>:
push   %rbp
mov    %rsp,%rbp
mov    0x8(%rdi),%r8
movzbl 0x13(%rdi),%eax
lea    0x7(%rax),%r9d
shr    $0x3,%r9d
mov    %r9d,%r11d
xor    %eax,%eax
mov    %rax,%rdi
jmp    20bf8 <png_read_filter_row_avg+0x38>
movzbl (%rdx),%ecx
shr    %ecx
movzbl (%rsi),%r10d
add    %r10d,%ecx
mov    %cl,(%rsi)
add    $0x1,%rdx
add    $0x1,%rsi
add    $0x1,%rdi
cmp    %r11,%rdi
jb     20bde <png_read_filter_row_avg+0x1e>
sub    %r11,%r8
mov    %r9d,%r9d
jmp    20c28 <png_read_filter_row_avg+0x68>
mov    %rsi,%rcx
sub    %r9,%rcx
movzbl (%rcx),%edi
movzbl (%rdx),%ecx
add    %edi,%ecx
shr    %ecx
movzbl (%rsi),%edi
add    %edi,%ecx
mov    %cl,(%rsi)
add    $0x1,%rax
add    $0x1,%rsi
add    $0x1,%rdx
cmp    %r8,%rax
jb     20c05 <png_read_filter_row_avg+0x45>
leaveq 
retq   
nop

0000000000020c30 <png_read_filter_row_paeth_1byte_pixel>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %r13,-0x8(%rbp)
mov    %r14,-0x10(%rbp)
mov    %r15,-0x18(%rbp)
mov    %rsi,%r15
add    0x8(%rdi),%r15
movzbl (%rsi),%eax
movzbl (%rdx),%r9d
lea    (%rax,%r9,1),%edi
mov    %dil,(%rsi)
lea    0x1(%rsi),%rax
lea    0x1(%rdx),%rcx
jmp    20c98 <png_read_filter_row_paeth_1byte_pixel+0x68>
mov    %rdi,%r14
add    %r10d,%esi
test   %esi,%esi
jns    20c71 <png_read_filter_row_paeth_1byte_pixel+0x41>
lea    (%rdi,%r11,1),%esi
cmp    %r8d,%r14d
jge    20c7c <png_read_filter_row_paeth_1byte_pixel+0x4c>
mov    %r14,%r8
mov    %r13,%rdx
cmp    %esi,%r8d
jle    20c84 <png_read_filter_row_paeth_1byte_pixel+0x54>
mov    %r9,%rdx
movzbl (%rax),%esi
lea    (%rdx,%rsi,1),%edi
mov    %dil,(%rax)
add    $0x1,%rax
add    $0x1,%rcx
mov    %r13,%r9
cmp    %r15,%rax
jb     20cab <png_read_filter_row_paeth_1byte_pixel+0x7b>
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
leaveq 
retq   
movzbl (%rcx),%r13d
mov    %r9,%r11
sub    %r13d,%r11d
mov    %r13,%r10
sub    %r9d,%r10d
test   %r10d,%r10d
js     20cc5 <png_read_filter_row_paeth_1byte_pixel+0x95>
mov    %r10,%r8
jmp    20cc8 <png_read_filter_row_paeth_1byte_pixel+0x98>
mov    %r11,%r8
movzbl %dil,%edx
mov    %r9,%rdi
sub    %edx,%edi
mov    %rdx,%rsi
sub    %r9d,%esi
test   %esi,%esi
js     20c63 <png_read_filter_row_paeth_1byte_pixel+0x33>
mov    %rsi,%r14
jmp    20c66 <png_read_filter_row_paeth_1byte_pixel+0x36>

0000000000020ce0 <png_read_filter_row_paeth_multibyte_pixel>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
movzbl 0x13(%rdi),%eax
add    $0x7,%eax
shr    $0x3,%eax
mov    %eax,%r9d
lea    (%r9,%rsi,1),%rcx
jmp    20d0f <png_read_filter_row_paeth_multibyte_pixel+0x2f>
movzbl (%rdx),%r8d
movzbl (%rsi),%eax
add    %r8d,%eax
mov    %al,(%rsi)
add    $0x1,%rdx
add    $0x1,%rsi
cmp    %rcx,%rsi
jb     20cfb <png_read_filter_row_paeth_multibyte_pixel+0x1b>
mov    0x8(%rdi),%rax
sub    %r9,%rax
lea    (%rcx,%rax,1),%r8
mov    %r12,-0x8(%rbp)
mov    %r13,-0x10(%rbp)
mov    %r14,-0x18(%rbp)
mov    %r15,-0x20(%rbp)
jmp    20d60 <png_read_filter_row_paeth_multibyte_pixel+0x80>
mov    %r11,%r14
add    %r10d,%ecx
test   %ecx,%ecx
jns    20d3f <png_read_filter_row_paeth_multibyte_pixel+0x5f>
lea    (%r11,%r12,1),%ecx
cmp    %edi,%r14d
jge    20d4a <png_read_filter_row_paeth_multibyte_pixel+0x6a>
mov    %r13,%rax
mov    %r14,%rdi
cmp    %ecx,%edi
jle    20d51 <png_read_filter_row_paeth_multibyte_pixel+0x71>
mov    %r15,%rax
movzbl (%rsi),%ecx
add    %ecx,%eax
mov    %al,(%rsi)
add    $0x1,%rsi
add    $0x1,%rdx
cmp    %r8,%rsi
jb     20d77 <png_read_filter_row_paeth_multibyte_pixel+0x97>
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
leaveq 
retq   
mov    %rsi,%rax
sub    %r9,%rax
movzbl (%rax),%eax
mov    %rdx,%rcx
sub    %r9,%rcx
movzbl (%rcx),%r15d
movzbl (%rdx),%r13d
mov    %r15,%r12
sub    %r13d,%r12d
mov    %r13,%r10
sub    %r15d,%r10d
test   %r10d,%r10d
js     20da4 <png_read_filter_row_paeth_multibyte_pixel+0xc4>
mov    %r10,%rdi
jmp    20da7 <png_read_filter_row_paeth_multibyte_pixel+0xc7>
mov    %r12,%rdi
mov    %r15,%r11
sub    %eax,%r11d
mov    %rax,%rcx
sub    %r15d,%ecx
test   %ecx,%ecx
js     20d31 <png_read_filter_row_paeth_multibyte_pixel+0x51>
mov    %rcx,%r14
jmpq   20d34 <png_read_filter_row_paeth_multibyte_pixel+0x54>
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

0000000000020dd0 <png_init_filter_functions>:
push   %rbp
mov    %rsp,%rbp
lea    -0x28b(%rip),%rax        # 20b50 <png_read_filter_row_sub>
mov    %rax,0x478(%rdi)
lea    -0x259(%rip),%rax        # 20b90 <png_read_filter_row_up>
mov    %rax,0x480(%rdi)
lea    -0x237(%rip),%rax        # 20bc0 <png_read_filter_row_avg>
mov    %rax,0x488(%rdi)
movzbl 0x26a(%rdi),%eax
add    $0x7,%eax
and    $0xfffffff8,%eax
cmp    $0x8,%eax
je     20e20 <png_init_filter_functions+0x50>
lea    -0x137(%rip),%rax        # 20ce0 <png_read_filter_row_paeth_multibyte_pixel>
mov    %rax,0x490(%rdi)
leaveq 
retq   
lea    -0x1f7(%rip),%rax        # 20c30 <png_read_filter_row_paeth_1byte_pixel>
mov    %rax,0x490(%rdi)
leaveq 
retq   

0000000000020e30 <png_set_compression_buffer_size>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
test   %rdi,%rdi
jne    20e3f <png_set_compression_buffer_size+0xf>
leaveq 
retq   
test   %rsi,%rsi
je     20e79 <png_set_compression_buffer_size+0x49>
cmp    $0x7fffffff,%rsi
ja     20e79 <png_set_compression_buffer_size+0x49>
mov    0x12c(%rdi),%eax
and    $0x8000,%eax
test   %eax,%eax
jne    20e85 <png_set_compression_buffer_size+0x55>
mov    0x138(%rdi),%eax
test   %eax,%eax
jne    20e8d <png_set_compression_buffer_size+0x5d>
cmp    $0x5,%rsi
jbe    20e9b <png_set_compression_buffer_size+0x6b>
mov    0x1b8(%rdi),%eax
cmp    %rax,%rsi
jne    20ea9 <png_set_compression_buffer_size+0x79>
leaveq 
retq   
lea    0xdf06(%rip),%rsi        # 2ed86 <png_pass_inc.20+0x513>
callq  5470 <png_error@plt>
mov    %esi,0x468(%rdi)
leaveq 
retq   
lea    0xdf12(%rip),%rsi        # 2eda6 <png_pass_inc.20+0x533>
callq  5390 <png_warning@plt>
leaveq 
retq   
lea    0xdf43(%rip),%rsi        # 2ede5 <png_pass_inc.20+0x572>
callq  5390 <png_warning@plt>
leaveq 
retq   
lea    0x1b0(%rdi),%rax
mov    %rdi,%rcx
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rsi,%r14
mov    %rax,%rsi
mov    %rdi,%r15
mov    %rcx,%rdi
callq  277a0 <png_free_buffer_list>
mov    %r14d,0x1b8(%r15)
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
nopl   (%rax)

0000000000020ee0 <png_set_read_user_chunk_fn>:
push   %rbp
mov    %rsp,%rbp
test   %rdi,%rdi
jne    20eeb <png_set_read_user_chunk_fn+0xb>
leaveq 
retq   
mov    %rdx,0x3b8(%rdi)
mov    %rsi,0x3b0(%rdi)
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

0000000000020f00 <png_set_benign_errors>:
push   %rbp
mov    %rsp,%rbp
test   %esi,%esi
jne    20f1b <png_set_benign_errors+0x1b>
mov    0x130(%rdi),%eax
and    $0xff8fffff,%eax
mov    %eax,0x130(%rdi)
leaveq 
retq   
mov    0x130(%rdi),%eax
or     $0x700000,%eax
mov    %eax,0x130(%rdi)
leaveq 
retq   
xchg   %ax,%ax

0000000000020f30 <png_set_rows>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
test   %rdi,%rdi
jne    20f3f <png_set_rows+0xf>
leaveq 
retq   
test   %rsi,%rsi
jne    20f46 <png_set_rows+0x16>
leaveq 
retq   
mov    0x160(%rsi),%rax
test   %rax,%rax
jne    20f60 <png_set_rows+0x30>
mov    %rdx,0x160(%rsi)
test   %rdx,%rdx
jne    20f98 <png_set_rows+0x68>
leaveq 
retq   
cmp    %rdx,%rax
je     20f52 <png_set_rows+0x22>
mov    $0x40,%eax
xor    %ecx,%ecx
mov    %rsi,%r8
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rdx,%r14
mov    %rax,%rdx
mov    %rsi,%r15
mov    %r8,%rsi
callq  5720 <png_free_data@plt>
mov    %r14,%rdx
mov    %r15,%rsi
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
jmp    20f52 <png_set_rows+0x22>
mov    0x8(%rsi),%eax
or     $0x8000,%eax
mov    %eax,0x8(%rsi)
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)

0000000000020fb0 <png_set_bKGD>:
push   %rbp
mov    %rsp,%rbp
test   %rdi,%rdi
jne    20fbb <png_set_bKGD+0xb>
leaveq 
retq   
test   %rsi,%rsi
jne    20fc2 <png_set_bKGD+0x12>
leaveq 
retq   
test   %rdx,%rdx
jne    20fc9 <png_set_bKGD+0x19>
leaveq 
retq   
mov    (%rdx),%rax
mov    %rax,0xca(%rsi)
mov    0x8(%rsi),%eax
or     $0x20,%eax
movzwl 0x8(%rdx),%ecx
mov    %eax,0x8(%rsi)
mov    %cx,0xd2(%rsi)
leaveq 
retq   
nopl   0x0(%rax)

0000000000020ff0 <png_set_cHRM>:
push   %rbp
mov    %rsp,%rbp
sub    $0xb0,%rsp
movdqu %xmm1,-0x80(%rbp)
movdqu %xmm2,-0x70(%rbp)
movdqu %xmm3,-0x60(%rbp)
movdqu %xmm4,-0x50(%rbp)
movdqu %xmm5,-0x40(%rbp)
movdqu %xmm6,-0x30(%rbp)
movdqu %xmm7,-0x20(%rbp)
mov    %r14,-0xa0(%rbp)
mov    %r15,-0xa8(%rbp)
mov    %r13,-0x98(%rbp)
mov    %r12,-0x90(%rbp)
mov    %rbx,-0x88(%rbp)
mov    %rsi,%r12
lea    0xddcc(%rip),%rsi        # 2ee17 <png_pass_inc.20+0x5a4>
mov    %rdi,%rbx
callq  69f0 <png_fixed>
mov    %rax,-0x8(%rbp)
lea    0xddc6(%rip),%rsi        # 2ee24 <png_pass_inc.20+0x5b1>
mov    %rbx,%rdi
movdqu -0x80(%rbp),%xmm0
callq  69f0 <png_fixed>
mov    %rax,-0x10(%rbp)
lea    0xddbb(%rip),%rsi        # 2ee31 <png_pass_inc.20+0x5be>
mov    %rbx,%rdi
movdqu -0x70(%rbp),%xmm0
callq  69f0 <png_fixed>
mov    %rax,-0x70(%rbp)
lea    0xddae(%rip),%rsi        # 2ee3c <png_pass_inc.20+0x5c9>
mov    %rbx,%rdi
movdqu -0x60(%rbp),%xmm0
callq  69f0 <png_fixed>
mov    %rax,-0x80(%rbp)
lea    0xdda1(%rip),%rsi        # 2ee47 <png_pass_inc.20+0x5d4>
mov    %rbx,%rdi
movdqu -0x50(%rbp),%xmm0
callq  69f0 <png_fixed>
mov    %rax,%r13
lea    0xdd97(%rip),%rsi        # 2ee54 <png_pass_inc.20+0x5e1>
mov    %rbx,%rdi
movdqu -0x40(%rbp),%xmm0
callq  69f0 <png_fixed>
mov    %rax,%r14
lea    0xdd8d(%rip),%rsi        # 2ee61 <png_pass_inc.20+0x5ee>
mov    %rbx,%rdi
movdqu -0x30(%rbp),%xmm0
callq  69f0 <png_fixed>
mov    %rax,%r15
lea    0xdd82(%rip),%rsi        # 2ee6d <png_pass_inc.20+0x5fa>
mov    %rbx,%rdi
movdqu -0x20(%rbp),%xmm0
callq  69f0 <png_fixed>
sub    $0x20,%rsp
mov    %r13d,(%rsp)
mov    %r14d,0x8(%rsp)
mov    %r15d,0x10(%rsp)
mov    %eax,0x18(%rsp)
mov    %r12,%rsi
mov    %rbx,%rdi
mov    -0x8(%rbp),%rdx
mov    -0x10(%rbp),%rcx
mov    -0x70(%rbp),%r8
mov    -0x80(%rbp),%r9
callq  5250 <png_set_cHRM_fixed@plt>
mov    -0x88(%rbp),%rbx
mov    -0x90(%rbp),%r12
mov    -0x98(%rbp),%r13
mov    -0xa8(%rbp),%r15
mov    -0xa0(%rbp),%r14
leaveq 
retq   
xchg   %ax,%ax

0000000000021150 <png_set_cHRM_XYZ>:
push   %rbp
mov    %rsp,%rbp
sub    $0xc0,%rsp
movdqu %xmm1,-0x90(%rbp)
movdqu %xmm2,-0x80(%rbp)
movdqu %xmm3,-0x70(%rbp)
movdqu %xmm4,-0x60(%rbp)
movdqu %xmm5,-0x50(%rbp)
movdqu %xmm6,-0x40(%rbp)
movdqu %xmm7,-0x30(%rbp)
mov    %r14,-0xb0(%rbp)
mov    %r15,-0xb8(%rbp)
mov    %r13,-0xa8(%rbp)
mov    %r12,-0xa0(%rbp)
mov    %rbx,-0x98(%rbp)
mov    %rsi,-0x8(%rbp)
lea    0xdc82(%rip),%rsi        # 2ee31 <png_pass_inc.20+0x5be>
mov    %rdi,%rbx
callq  69f0 <png_fixed>
mov    %rax,-0x10(%rbp)
lea    0xdc7a(%rip),%rsi        # 2ee3c <png_pass_inc.20+0x5c9>
mov    %rbx,%rdi
movdqu -0x90(%rbp),%xmm0
callq  69f0 <png_fixed>
mov    %rax,-0x18(%rbp)
lea    0xdc9c(%rip),%rsi        # 2ee79 <png_pass_inc.20+0x606>
mov    %rbx,%rdi
movdqu -0x80(%rbp),%xmm0
callq  69f0 <png_fixed>
mov    %rax,-0x80(%rbp)
lea    0xdc52(%rip),%rsi        # 2ee47 <png_pass_inc.20+0x5d4>
mov    %rbx,%rdi
movdqu -0x70(%rbp),%xmm0
callq  69f0 <png_fixed>
mov    %rax,-0x90(%rbp)
lea    0xdc44(%rip),%rsi        # 2ee54 <png_pass_inc.20+0x5e1>
mov    %rbx,%rdi
movdqu -0x60(%rbp),%xmm0
callq  69f0 <png_fixed>
mov    %rax,%r12
lea    0xdc5d(%rip),%rsi        # 2ee84 <png_pass_inc.20+0x611>
mov    %rbx,%rdi
movdqu -0x50(%rbp),%xmm0
callq  69f0 <png_fixed>
mov    %rax,%r13
lea    0xdc23(%rip),%rsi        # 2ee61 <png_pass_inc.20+0x5ee>
mov    %rbx,%rdi
movdqu -0x40(%rbp),%xmm0
callq  69f0 <png_fixed>
mov    %rax,%r14
lea    0xdc18(%rip),%rsi        # 2ee6d <png_pass_inc.20+0x5fa>
mov    %rbx,%rdi
movdqu -0x30(%rbp),%xmm0
callq  69f0 <png_fixed>
mov    %rax,%r15
movsd  0x10(%rbp),%xmm0
lea    0xdc20(%rip),%rsi        # 2ee91 <png_pass_inc.20+0x61e>
mov    %rbx,%rdi
callq  69f0 <png_fixed>
sub    $0x20,%rsp
mov    %r12d,(%rsp)
mov    %r13d,0x8(%rsp)
mov    %r14d,0x10(%rsp)
mov    %r15d,0x18(%rsp)
mov    %eax,0x20(%rsp)
mov    %rbx,%rdi
mov    -0x8(%rbp),%rsi
mov    -0x10(%rbp),%rdx
mov    -0x18(%rbp),%rcx
mov    -0x80(%rbp),%r8
mov    -0x90(%rbp),%r9
callq  58a0 <png_set_cHRM_XYZ_fixed@plt>
mov    -0x98(%rbp),%rbx
mov    -0xa0(%rbp),%r12
mov    -0xa8(%rbp),%r13
mov    -0xb8(%rbp),%r15
mov    -0xb0(%rbp),%r14
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

00000000000212e0 <png_set_cHRM_fixed>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
test   %rdi,%rdi
jne    212ef <png_set_cHRM_fixed+0xf>
leaveq 
retq   
test   %rsi,%rsi
jne    212f6 <png_set_cHRM_fixed+0x16>
leaveq 
retq   
mov    %r8d,-0x30(%rbp)
mov    %r9d,-0x2c(%rbp)
movslq 0x10(%rbp),%rax
mov    %eax,-0x28(%rbp)
movslq 0x18(%rbp),%rax
mov    %eax,-0x24(%rbp)
movslq 0x20(%rbp),%rax
mov    %eax,-0x20(%rbp)
movslq 0x28(%rbp),%rax
mov    %eax,-0x1c(%rbp)
mov    %edx,-0x18(%rbp)
mov    %ecx,-0x14(%rbp)
lea    0x34(%rsi),%rax
lea    -0x30(%rbp),%rdx
mov    $0x2,%ecx
mov    %rdi,%r8
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rsi,%r14
mov    %rax,%rsi
mov    %rdi,%r15
mov    %r8,%rdi
callq  7070 <png_colorspace_set_chromaticities>
test   %eax,%eax
je     2135b <png_set_cHRM_fixed+0x7b>
movzwl 0x7e(%r14),%eax
or     $0x10,%ax
mov    %ax,0x7e(%r14)
mov    %r14,%rsi
mov    %r15,%rdi
callq  6f80 <png_colorspace_sync_info>
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   

0000000000021370 <png_set_cHRM_XYZ_fixed>:
push   %rbp
mov    %rsp,%rbp
sub    $0x40,%rsp
test   %rdi,%rdi
jne    2137f <png_set_cHRM_XYZ_fixed+0xf>
leaveq 
retq   
test   %rsi,%rsi
jne    21386 <png_set_cHRM_XYZ_fixed+0x16>
leaveq 
retq   
mov    %edx,-0x34(%rbp)
mov    %ecx,-0x30(%rbp)
mov    %r8d,-0x2c(%rbp)
mov    %r9d,-0x28(%rbp)
movslq 0x10(%rbp),%rax
mov    %eax,-0x24(%rbp)
movslq 0x18(%rbp),%rax
mov    %eax,-0x20(%rbp)
movslq 0x20(%rbp),%rax
mov    %eax,-0x1c(%rbp)
movslq 0x28(%rbp),%rax
mov    %eax,-0x18(%rbp)
movslq 0x30(%rbp),%rax
mov    %eax,-0x14(%rbp)
lea    0x34(%rsi),%rax
lea    -0x34(%rbp),%rdx
mov    $0x2,%ecx
mov    %rdi,%r8
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rsi,%r14
mov    %rax,%rsi
mov    %rdi,%r15
mov    %r8,%rdi
callq  7120 <png_colorspace_set_endpoints>
test   %eax,%eax
je     213f2 <png_set_cHRM_XYZ_fixed+0x82>
movzwl 0x7e(%r14),%eax
or     $0x10,%ax
mov    %ax,0x7e(%r14)
mov    %r14,%rsi
mov    %r15,%rdi
callq  6f80 <png_colorspace_sync_info>
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

0000000000021410 <png_set_eXIf>:
push   %rbp
mov    %rsp,%rbp
lea    0xda82(%rip),%rsi        # 2ee9d <png_pass_inc.20+0x62a>
callq  5390 <png_warning@plt>
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   (%rax)

0000000000021430 <png_set_eXIf_1>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
test   %rdi,%rdi
jne    2143f <png_set_eXIf_1+0xf>
leaveq 
retq   
test   %rsi,%rsi
jne    21446 <png_set_eXIf_1+0x16>
leaveq 
retq   
mov    0xf0(%rsi),%rax
test   %rax,%rax
je     2149d <png_set_eXIf_1+0x6d>
mov    %rdi,%r8
mov    %r13,-0x8(%rbp)
mov    %r14,-0x10(%rbp)
mov    %r15,-0x18(%rbp)
mov    %rcx,-0x20(%rbp)
mov    %rdx,%r13
mov    %rdi,%r14
mov    %r8,%rdi
mov    %rsi,%r15
mov    %rax,%rsi
callq  5790 <png_free@plt>
mov    %r13,%rdx
mov    %r15,%rsi
mov    %r14,%rdi
movq   $0x0,0xf0(%rsi)
mov    -0x20(%rbp),%rcx
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
mov    %edx,0xec(%rsi)
movslq %edx,%rax
mov    %rdi,%rdx
mov    %r14,-0x10(%rbp)
mov    %r15,-0x18(%rbp)
mov    %rcx,-0x20(%rbp)
mov    %rsi,%r14
mov    %rax,%rsi
mov    %rdi,%r15
mov    %rdx,%rdi
callq  5150 <png_malloc_warn@plt>
mov    %rax,0xf0(%r14)
test   %rax,%rax
je     214ed <png_set_eXIf_1+0xbd>
mov    0x12c(%r14),%eax
or     $0x8000,%eax
mov    %eax,0x12c(%r14)
xor    %eax,%eax
mov    -0x20(%rbp),%rsi
jmp    2151a <png_set_eXIf_1+0xea>
mov    %r15,%rdi
lea    0xd9d5(%rip),%rsi        # 2eecc <png_pass_inc.20+0x659>
callq  5390 <png_warning@plt>
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
leaveq 
retq   
movslq %eax,%rdx
movzbl (%rsi,%rdx,1),%ecx
mov    0xf0(%r14),%rdi
mov    %cl,(%rdi,%rdx,1)
add    $0x1,%eax
movslq 0xec(%r14),%rcx
cmp    %eax,%ecx
jg     21506 <png_set_eXIf_1+0xd6>
mov    0x8(%r14),%eax
or     $0x10000,%eax
mov    %eax,0x8(%r14)
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
leaveq 
retq   
nopl   0x0(%rax)

0000000000021540 <png_set_gAMA>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rsi,%r14
lea    0xd99a(%rip),%rsi        # 2eef4 <png_pass_inc.20+0x681>
mov    %rdi,%r15
callq  69f0 <png_fixed>
mov    %rax,%rdx
mov    %r14,%rsi
mov    %r15,%rdi
callq  5290 <png_set_gAMA_fixed@plt>
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

0000000000021580 <png_set_gAMA_fixed>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
test   %rdi,%rdi
jne    2158f <png_set_gAMA_fixed+0xf>
leaveq 
retq   
test   %rsi,%rsi
jne    21596 <png_set_gAMA_fixed+0x16>
leaveq 
retq   
lea    0x34(%rsi),%rax
mov    %rdi,%rcx
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rsi,%r14
mov    %rax,%rsi
mov    %rdi,%r15
mov    %rcx,%rdi
callq  6ed0 <png_colorspace_set_gamma>
mov    %r14,%rsi
mov    %r15,%rdi
callq  6f80 <png_colorspace_sync_info>
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

00000000000215d0 <png_set_hIST>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
test   %rdi,%rdi
jne    215df <png_set_hIST+0xf>
leaveq 
retq   
test   %rsi,%rsi
jne    215e6 <png_set_hIST+0x16>
leaveq 
retq   
movzwl 0x20(%rsi),%eax
test   %ax,%ax
je     21655 <png_set_hIST+0x85>
cmp    $0x100,%ax
ja     21655 <png_set_hIST+0x85>
mov    $0x8,%r9d
xor    %ecx,%ecx
mov    %rdi,%rax
mov    %rsi,%r8
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rdx,-0x18(%rbp)
mov    %r9,%rdx
mov    %rsi,%r14
mov    %r8,%rsi
mov    %rdi,%r15
mov    %rax,%rdi
callq  5720 <png_free_data@plt>
mov    $0x200,%esi
mov    %r15,%rdi
callq  5150 <png_malloc_warn@plt>
mov    %rax,0x100(%r14)
test   %rax,%rax
je     21663 <png_set_hIST+0x93>
mov    0x12c(%r14),%eax
or     $0x8,%eax
mov    %eax,0x12c(%r14)
xor    %eax,%eax
mov    -0x18(%rbp),%rdi
jmp    21691 <png_set_hIST+0xc1>
lea    0xd8a5(%rip),%rsi        # 2ef01 <png_pass_inc.20+0x68e>
callq  5390 <png_warning@plt>
leaveq 
retq   
mov    %r15,%rdi
lea    0xd8c2(%rip),%rsi        # 2ef2f <png_pass_inc.20+0x6bc>
callq  5390 <png_warning@plt>
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
movslq %eax,%rsi
movzwl (%rdi,%rsi,2),%edx
mov    0x100(%r14),%rcx
mov    %dx,(%rcx,%rsi,2)
add    $0x1,%eax
movzwl 0x20(%r14),%ecx
cmp    %eax,%ecx
jg     2167c <png_set_hIST+0xac>
mov    0x8(%r14),%eax
or     $0x40,%eax
mov    %eax,0x8(%r14)
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
nop

00000000000216b0 <png_set_IHDR>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
test   %rdi,%rdi
jne    216bf <png_set_IHDR+0xf>
leaveq 
retq   
test   %rsi,%rsi
jne    216c6 <png_set_IHDR+0x16>
leaveq 
retq   
mov    %edx,(%rsi)
mov    %ecx,0x4(%rsi)
mov    %r8b,0x24(%rsi)
mov    %r9b,0x25(%rsi)
movslq 0x18(%rbp),%rax
mov    %al,0x26(%rsi)
movslq 0x20(%rbp),%r11
mov    %r11b,0x27(%rsi)
movslq 0x10(%rbp),%r10
mov    %r10b,0x28(%rsi)
movzbl %al,%eax
mov    %eax,(%rsp)
movzbl %r11b,%eax
mov    %eax,0x8(%rsp)
movzbl %r8b,%r11d
movzbl %r9b,%r8d
movzbl %r10b,%r9d
mov    %rdx,%rax
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rsi,%r14
mov    %rax,%rsi
mov    %rdx,%r15
mov    %rcx,%rdx
mov    %r11,%rcx
callq  7d90 <png_check_IHDR>
add    $0x10,%rsp
movzbl 0x25(%r14),%eax
cmp    $0x3,%al
je     2173e <png_set_IHDR+0x8e>
and    $0x2,%eax
test   %eax,%eax
jg     21783 <png_set_IHDR+0xd3>
movb   $0x1,0x29(%r14)
jmp    21743 <png_set_IHDR+0x93>
movb   $0x1,0x29(%r14)
movzbl 0x25(%r14),%eax
and    $0x4,%eax
test   %eax,%eax
jle    2175b <png_set_IHDR+0xab>
movzbl 0x29(%r14),%eax
add    $0x1,%eax
mov    %al,0x29(%r14)
movzbl 0x24(%r14),%ecx
movzbl 0x29(%r14),%eax
imul   %cl
mov    %al,0x2a(%r14)
cmp    $0x7,%al
ja     2178a <png_set_IHDR+0xda>
movzbl %al,%eax
mov    %r15d,%ecx
imul   %rcx,%rax
add    $0x7,%rax
shr    $0x3,%rax
jmp    21798 <png_set_IHDR+0xe8>
movb   $0x3,0x29(%r14)
jmp    21743 <png_set_IHDR+0x93>
movzbl %al,%eax
shr    $0x3,%rax
mov    %r15d,%ecx
imul   %rcx,%rax
mov    %rax,0x10(%r14)
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)

00000000000217b0 <png_set_oFFs>:
push   %rbp
mov    %rsp,%rbp
test   %rdi,%rdi
jne    217bb <png_set_oFFs+0xb>
leaveq 
retq   
test   %rsi,%rsi
jne    217c2 <png_set_oFFs+0x12>
leaveq 
retq   
mov    %edx,0xd4(%rsi)
mov    %ecx,0xd8(%rsi)
mov    %r8b,0xdc(%rsi)
mov    0x8(%rsi),%eax
or     $0x100,%eax
mov    %eax,0x8(%rsi)
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   (%rax)

00000000000217f0 <png_set_pCAL>:
push   %rbp
mov    %rsp,%rbp
sub    $0x70,%rsp
test   %rdi,%rdi
jne    217ff <png_set_pCAL+0xf>
leaveq 
retq   
test   %rsi,%rsi
jne    21806 <png_set_pCAL+0x16>
leaveq 
retq   
test   %rdx,%rdx
jne    2180d <png_set_pCAL+0x1d>
leaveq 
retq   
mov    0x18(%rbp),%r10
test   %r10,%r10
jne    21818 <png_set_pCAL+0x28>
leaveq 
retq   
mov    0x20(%rbp),%rax
movslq 0x10(%rbp),%r11
test   %r11d,%r11d
jle    2182c <png_set_pCAL+0x3c>
test   %rax,%rax
jne    2182c <png_set_pCAL+0x3c>
leaveq 
retq   
mov    %r10,-0x28(%rbp)
mov    %rdx,%r10
mov    %r13,-0x10(%rbp)
mov    %r14,-0x18(%rbp)
mov    %r15,-0x20(%rbp)
mov    %rax,-0x68(%rbp)
mov    %rsi,-0x50(%rbp)
mov    %rdx,-0x48(%rbp)
mov    %rcx,-0x30(%rbp)
mov    %r8,-0x38(%rbp)
mov    %r11,%r13
mov    %r9,%r14
mov    %rdi,%r15
mov    %r10,%rdi
callq  5260 <strlen@plt>
mov    $0x1,%edx
test   %r14d,%r14d
js     2189d <png_set_pCAL+0xad>
cmp    $0x3,%r14d
jg     2189d <png_set_pCAL+0xad>
test   %r13d,%r13d
js     218ba <png_set_pCAL+0xca>
cmp    $0xff,%r13d
jg     218ba <png_set_pCAL+0xca>
xor    %ecx,%ecx
mov    %r15,-0x58(%rbp)
mov    %r12,-0x8(%rbp)
mov    %rax,-0x60(%rbp)
mov    %r14,-0x40(%rbp)
mov    %rcx,%r12
mov    -0x68(%rbp),%r14
jmp    21906 <png_set_pCAL+0x116>
mov    %r15,%rdi
lea    0xd6b0(%rip),%rsi        # 2ef57 <png_pass_inc.20+0x6e4>
callq  b140 <png_chunk_report>
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
leaveq 
retq   
mov    %r15,%rdi
lea    0xd6ae(%rip),%rsi        # 2ef72 <png_pass_inc.20+0x6ff>
callq  b140 <png_chunk_report>
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
leaveq 
retq   
movslq %r12d,%rax
mov    (%r14,%rax,8),%r15
test   %r15,%r15
je     219f5 <png_set_pCAL+0x205>
mov    %r15,%rdi
callq  5260 <strlen@plt>
mov    %rax,%rsi
mov    %r15,%rdi
callq  8920 <png_check_fp_string>
test   %eax,%eax
je     219f5 <png_set_pCAL+0x205>
add    $0x1,%r12d
cmp    %r12d,%r13d
jg     218d7 <png_set_pCAL+0xe7>
mov    -0x60(%rbp),%rax
lea    0x1(%rax),%r15
mov    -0x58(%rbp),%r12
mov    %r12,%rdi
mov    %r15,%rsi
callq  5150 <png_malloc_warn@plt>
mov    -0x50(%rbp),%r14
mov    %rax,0x108(%r14)
test   %rax,%rax
je     21a1c <png_set_pCAL+0x22c>
mov    %r15,%rdx
mov    %rax,%rdi
mov    -0x48(%rbp),%rsi
callq  54c0 <memcpy@plt>
mov    -0x30(%rbp),%rax
mov    %eax,0x110(%r14)
mov    -0x38(%rbp),%rax
mov    %eax,0x114(%r14)
mov    -0x40(%rbp),%rax
mov    %al,0x128(%r14)
mov    %r13b,0x129(%r14)
mov    -0x28(%rbp),%r15
mov    %r15,%rdi
callq  5260 <strlen@plt>
lea    0x1(%rax),%rdx
mov    %r12,%rdi
mov    %rdx,%rsi
mov    %r13,-0x60(%rbp)
mov    %rdx,%r13
callq  5150 <png_malloc_warn@plt>
mov    %rax,0x118(%r14)
test   %rax,%rax
je     21a42 <png_set_pCAL+0x252>
mov    %r13,%rdx
mov    %r15,%rsi
mov    %rax,%rdi
callq  54c0 <memcpy@plt>
mov    -0x60(%rbp),%r15
lea    0x1(%r15),%eax
mov    %eax,%r13d
shl    $0x3,%r13
mov    %r12,%rdi
mov    %r13,%rsi
callq  5150 <png_malloc_warn@plt>
mov    %rax,0x120(%r14)
test   %rax,%rax
je     21a63 <png_set_pCAL+0x273>
mov    %r13,%rdx
mov    %rax,%rdi
xor    %r13d,%r13d
mov    %r13,%rsi
callq  5350 <memset@plt>
mov    %rbx,-0x50(%rbp)
mov    -0x68(%rbp),%rbx
jmpq   21ae0 <png_set_pCAL+0x2f0>
lea    0xd593(%rip),%rsi        # 2ef8f <png_pass_inc.20+0x71c>
mov    $0x1,%edx
mov    -0x58(%rbp),%rdi
callq  b140 <png_chunk_report>
mov    -0x8(%rbp),%r12
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
leaveq 
retq   
mov    %r12,%rdi
lea    0xd58b(%rip),%rsi        # 2efb1 <png_pass_inc.20+0x73e>
mov    $0x1,%edx
callq  b140 <png_chunk_report>
mov    -0x8(%rbp),%r12
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
leaveq 
retq   
mov    %r12,%rdi
lea    0xd58a(%rip),%rsi        # 2efd6 <png_pass_inc.20+0x763>
callq  5390 <png_warning@plt>
mov    -0x8(%rbp),%r12
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
leaveq 
retq   
mov    %r12,%rdi
lea    0xd58c(%rip),%rsi        # 2eff9 <png_pass_inc.20+0x786>
callq  5390 <png_warning@plt>
mov    -0x8(%rbp),%r12
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
leaveq 
retq   
movslq %r13d,%r15
mov    (%rbx,%r15,8),%rdi
callq  5260 <strlen@plt>
lea    0x1(%rax),%rdx
mov    0x120(%r14),%rax
mov    %rdx,%rsi
mov    %r13,-0x68(%rbp)
mov    %r12,%rdi
mov    %rax,%r12
mov    %rdx,%r13
callq  5150 <png_malloc_warn@plt>
mov    %rax,(%r12,%r15,8)
mov    0x120(%r14),%rax
mov    (%rax,%r15,8),%rdi
test   %rdi,%rdi
je     21b1b <png_set_pCAL+0x32b>
mov    (%rbx,%r15,8),%rsi
mov    %r13,%rdx
callq  54c0 <memcpy@plt>
mov    -0x68(%rbp),%rax
lea    0x1(%rax),%r13d
mov    -0x60(%rbp),%r15
mov    -0x58(%rbp),%r12
cmp    %r13d,%r15d
jg     21a84 <png_set_pCAL+0x294>
mov    0x8(%r14),%eax
or     $0x400,%eax
mov    %eax,0x8(%r14)
mov    0x12c(%r14),%eax
or     $0x80,%eax
mov    %eax,0x12c(%r14)
mov    -0x50(%rbp),%rbx
mov    -0x8(%rbp),%r12
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
leaveq 
retq   
lea    0xd4fb(%rip),%rsi        # 2f01d <png_pass_inc.20+0x7aa>
mov    -0x58(%rbp),%rdi
callq  5390 <png_warning@plt>
mov    -0x50(%rbp),%rbx
mov    -0x8(%rbp),%r12
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   0x0(%rax)

0000000000021b50 <png_set_pHYs>:
push   %rbp
mov    %rsp,%rbp
test   %rdi,%rdi
jne    21b5b <png_set_pHYs+0xb>
leaveq 
retq   
test   %rsi,%rsi
jne    21b62 <png_set_pHYs+0x12>
leaveq 
retq   
mov    %edx,0xe0(%rsi)
mov    %ecx,0xe4(%rsi)
mov    %r8b,0xe8(%rsi)
mov    0x8(%rsi),%eax
or     $0x80,%eax
mov    %eax,0x8(%rsi)
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   (%rax)

0000000000021b90 <png_set_PLTE>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
test   %rdi,%rdi
jne    21b9f <png_set_PLTE+0xf>
leaveq 
retq   
test   %rsi,%rsi
jne    21ba6 <png_set_PLTE+0x16>
leaveq 
retq   
movzbl 0x25(%rsi),%eax
cmp    $0x3,%al
je     21bb5 <png_set_PLTE+0x25>
mov    $0x100,%eax
jmp    21bc6 <png_set_PLTE+0x36>
mov    %rcx,%r8
mov    $0x1,%eax
movzbl 0x24(%rsi),%ecx
shl    %cl,%eax
mov    %r8,%rcx
test   %ecx,%ecx
js     21c97 <png_set_PLTE+0x107>
cmp    %eax,%ecx
jg     21c97 <png_set_PLTE+0x107>
test   %ecx,%ecx
jg     21cb0 <png_set_PLTE+0x120>
test   %ecx,%ecx
je     21cc5 <png_set_PLTE+0x135>
mov    $0x1000,%eax
xor    %r10d,%r10d
mov    %rdi,%r9
mov    %rsi,%r8
mov    %r12,-0x8(%rbp)
mov    %r13,-0x10(%rbp)
mov    %r14,-0x18(%rbp)
mov    %r15,-0x20(%rbp)
mov    %rdi,%r12
mov    %r9,%rdi
mov    %rsi,%r13
mov    %r8,%rsi
mov    %rcx,%r14
mov    %r10,%rcx
mov    %rdx,%r15
mov    %rax,%rdx
callq  5720 <png_free_data@plt>
mov    $0x300,%esi
mov    %r12,%rdi
callq  5780 <png_calloc@plt>
test   %r14d,%r14d
mov    %rax,0x250(%r12)
jle    21c4d <png_set_PLTE+0xbd>
mov    %r14d,%ecx
lea    (%rcx,%rcx,2),%rdx
mov    %r15,%rsi
mov    %rax,%rdi
callq  54c0 <memcpy@plt>
mov    0x250(%r12),%rax
mov    %rax,0x18(%r13)
mov    %r14w,0x258(%r12)
mov    %r14w,0x20(%r13)
mov    0x12c(%r13),%eax
or     $0x1000,%eax
mov    %eax,0x12c(%r13)
mov    0x8(%r13),%eax
or     $0x8,%eax
mov    %eax,0x8(%r13)
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
leaveq 
retq   
lea    0xd3a6(%rip),%rcx        # 2f044 <png_pass_inc.20+0x7d1>
movzbl 0x25(%rsi),%eax
cmp    $0x3,%al
je     21cd7 <png_set_PLTE+0x147>
mov    %rcx,%rsi
callq  5390 <png_warning@plt>
leaveq 
retq   
test   %rdx,%rdx
jne    21bde <png_set_PLTE+0x4e>
lea    0xd39b(%rip),%rsi        # 2f05b <png_pass_inc.20+0x7e8>
callq  5470 <png_error@plt>
mov    0x3d8(%rdi),%eax
and    $0x1,%eax
test   %eax,%eax
je     21cb9 <png_set_PLTE+0x129>
jmpq   21be6 <png_set_PLTE+0x56>
mov    %rcx,%rsi
callq  5470 <png_error@plt>
nop

0000000000021ce0 <png_set_sBIT>:
push   %rbp
mov    %rsp,%rbp
test   %rdi,%rdi
jne    21ceb <png_set_sBIT+0xb>
leaveq 
retq   
test   %rsi,%rsi
jne    21cf2 <png_set_sBIT+0x12>
leaveq 
retq   
test   %rdx,%rdx
jne    21cf9 <png_set_sBIT+0x19>
leaveq 
retq   
mov    (%rdx),%eax
mov    %eax,0xb0(%rsi)
mov    0x8(%rsi),%eax
or     $0x2,%eax
movzbl 0x4(%rdx),%ecx
mov    %eax,0x8(%rsi)
mov    %cl,0xb4(%rsi)
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)

0000000000021d20 <png_set_sRGB>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
test   %rdi,%rdi
jne    21d2f <png_set_sRGB+0xf>
leaveq 
retq   
test   %rsi,%rsi
jne    21d36 <png_set_sRGB+0x16>
leaveq 
retq   
lea    0x34(%rsi),%rax
mov    %rdi,%rcx
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rsi,%r14
mov    %rax,%rsi
mov    %rdi,%r15
mov    %rcx,%rdi
callq  71f0 <png_colorspace_set_sRGB>
mov    %r14,%rsi
mov    %r15,%rdi
callq  6f80 <png_colorspace_sync_info>
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

0000000000021d70 <png_set_sRGB_gAMA_and_cHRM>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
test   %rdi,%rdi
jne    21d7f <png_set_sRGB_gAMA_and_cHRM+0xf>
leaveq 
retq   
test   %rsi,%rsi
jne    21d86 <png_set_sRGB_gAMA_and_cHRM+0x16>
leaveq 
retq   
lea    0x34(%rsi),%rax
mov    %rdi,%rcx
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rdi,%r14
mov    %rcx,%rdi
mov    %rsi,%r15
mov    %rax,%rsi
callq  71f0 <png_colorspace_set_sRGB>
test   %eax,%eax
je     21db8 <png_set_sRGB_gAMA_and_cHRM+0x48>
movzwl 0x7e(%r15),%eax
or     $0x18,%ax
mov    %ax,0x7e(%r15)
mov    %r15,%rsi
mov    %r14,%rdi
callq  6f80 <png_colorspace_sync_info>
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
nopl   (%rax)

0000000000021dd0 <png_set_iCCP>:
push   %rbp
mov    %rsp,%rbp
sub    $0x40,%rsp
test   %rdi,%rdi
jne    21ddf <png_set_iCCP+0xf>
leaveq 
retq   
test   %rsi,%rsi
jne    21de6 <png_set_iCCP+0x16>
leaveq 
retq   
test   %rdx,%rdx
jne    21ded <png_set_iCCP+0x1d>
leaveq 
retq   
test   %r8,%r8
jne    21df4 <png_set_iCCP+0x24>
leaveq 
retq   
test   %ecx,%ecx
jne    21dfd <png_set_iCCP+0x2d>
mov    %r9,%rcx
jmp    21e58 <png_set_iCCP+0x88>
lea    0xd267(%rip),%rcx        # 2f06b <png_pass_inc.20+0x7f8>
mov    %rdi,%rax
mov    %rbx,-0x18(%rbp)
mov    %r12,-0x20(%rbp)
mov    %r13,-0x28(%rbp)
mov    %r14,-0x30(%rbp)
mov    %r15,-0x38(%rbp)
mov    %r8,%rbx
mov    %rdx,%r12
mov    %rsi,%r13
mov    %rcx,%rsi
mov    %r9,%r14
mov    %rdi,%r15
mov    %rax,%rdi
callq  b120 <png_app_error>
mov    %r14,%rcx
mov    %r12,%rdx
mov    %r13,%rsi
mov    %r15,%rdi
mov    %rbx,%r8
mov    -0x38(%rbp),%r15
mov    -0x30(%rbp),%r14
mov    -0x28(%rbp),%r13
mov    -0x20(%rbp),%r12
mov    -0x18(%rbp),%rbx
lea    0x34(%rsi),%rax
movzbl 0x25(%rsi),%r9d
mov    %rdi,%r10
mov    %rdx,%r11
mov    %rcx,-0x28(%rbp)
mov    %r8,-0x10(%rbp)
mov    %r14,-0x18(%rbp)
mov    %r15,-0x20(%rbp)
mov    %rdx,-0x38(%rbp)
mov    %r11,%rdx
mov    %rsi,%r14
mov    %rax,%rsi
mov    %rdi,%r15
mov    %r10,%rdi
callq  73f0 <png_colorspace_set_ICC>
mov    %r15,%rdi
mov    %r14,%rsi
mov    %r15,-0x30(%rbp)
mov    %rax,%r15
callq  6f80 <png_colorspace_sync_info>
test   %r15d,%r15d
jne    21eb0 <png_set_iCCP+0xe0>
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
leaveq 
retq   
movzwl 0x7e(%r14),%eax
or     $0x18,%ax
mov    %ax,0x7e(%r14)
mov    -0x38(%rbp),%r15
mov    %r15,%rdi
callq  5260 <strlen@plt>
lea    0x1(%rax),%rdx
mov    -0x30(%rbp),%rax
mov    %rax,%rdi
mov    %rdx,%rsi
mov    %r13,-0x38(%rbp)
mov    %r14,-0x8(%rbp)
mov    %rax,%r13
mov    %rdx,%r14
callq  5150 <png_malloc_warn@plt>
test   %rax,%rax
je     21f8d <png_set_iCCP+0x1bd>
mov    %r14,%rdx
mov    %rax,%r14
mov    %r15,%rsi
mov    %r14,%rdi
callq  54c0 <memcpy@plt>
mov    -0x28(%rbp),%rax
mov    %eax,%r15d
mov    %r13,%rdi
mov    %r15,%rsi
callq  5150 <png_malloc_warn@plt>
test   %rax,%rax
je     21faa <png_set_iCCP+0x1da>
mov    %r15,%rdx
mov    %rax,%r15
mov    %r15,%rdi
mov    -0x10(%rbp),%rsi
callq  54c0 <memcpy@plt>
mov    %r13,%rdi
mov    $0x10,%edx
xor    %ecx,%ecx
mov    -0x8(%rbp),%r13
mov    %r13,%rsi
callq  5720 <png_free_data@plt>
mov    -0x28(%rbp),%rax
mov    %eax,0x90(%r13)
mov    %r14,0x80(%r13)
mov    %r15,0x88(%r13)
mov    0x12c(%r13),%eax
or     $0x10,%eax
mov    %eax,0x12c(%r13)
mov    0x8(%r13),%eax
or     $0x1000,%eax
mov    %eax,0x8(%r13)
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x38(%rbp),%r13
leaveq 
retq   
mov    %r13,%rdi
lea    0xd0f4(%rip),%rsi        # 2f08b <png_pass_inc.20+0x818>
callq  5590 <png_benign_error@plt>
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x38(%rbp),%r13
leaveq 
retq   
mov    %r14,%rsi
mov    %r13,%rdi
callq  5790 <png_free@plt>
mov    %r13,%rdi
lea    0xd0f6(%rip),%rsi        # 2f0b5 <png_pass_inc.20+0x842>
callq  5590 <png_benign_error@plt>
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x38(%rbp),%r13
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   (%rax)

0000000000021fe0 <png_set_sPLT>:
push   %rbp
mov    %rsp,%rbp
sub    $0x40,%rsp
test   %rdi,%rdi
jne    21fef <png_set_sPLT+0xf>
leaveq 
retq   
test   %rsi,%rsi
jne    21ff6 <png_set_sPLT+0x16>
leaveq 
retq   
test   %ecx,%ecx
jg     21ffc <png_set_sPLT+0x1c>
leaveq 
retq   
test   %rdx,%rdx
jne    22003 <png_set_sPLT+0x23>
leaveq 
retq   
mov    0x140(%rsi),%r11
movslq 0x148(%rsi),%r9
mov    $0x20,%r8d
mov    %rdi,%rax
mov    %rcx,%r10
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rcx,-0x38(%rbp)
mov    %rdx,-0x30(%rbp)
mov    %r10,%rcx
mov    %r9,%rdx
mov    %rdi,%r14
mov    %rax,%rdi
mov    %rsi,%r15
mov    %r11,%rsi
callq  c9a0 <png_realloc_array>
test   %rax,%rax
je     2209e <png_set_sPLT+0xbe>
mov    0x140(%r15),%rsi
mov    %r14,%rdi
mov    %r13,-0x18(%rbp)
mov    %rax,%r13
callq  5790 <png_free@plt>
mov    %r13,0x140(%r15)
mov    0x12c(%r15),%ecx
or     $0x20,%ecx
mov    %ecx,0x12c(%r15)
lea    0xd078(%rip),%rsi        # 2f0f6 <png_pass_inc.20+0x883>
movslq 0x148(%r15),%rcx
shl    $0x5,%rcx
add    %rcx,%r13
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    -0x30(%rbp),%rbx
mov    -0x38(%rbp),%r12
jmp    220c3 <png_set_sPLT+0xe3>
mov    %r14,%rdi
lea    0xd039(%rip),%rsi        # 2f0e1 <png_pass_inc.20+0x86e>
mov    $0x1,%edx
callq  b140 <png_chunk_report>
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
leaveq 
retq   
lea    0xd033(%rip),%rsi        # 2f0f6 <png_pass_inc.20+0x883>
mov    (%rbx),%rdi
test   %rdi,%rdi
jne    220fc <png_set_sPLT+0x11c>
mov    %r14,%rdi
callq  b120 <png_app_error>
add    $0xffffffff,%r12d
test   %r12d,%r12d
jne    220bc <png_set_sPLT+0xdc>
xor    %eax,%eax
test   %eax,%eax
jg     221af <png_set_sPLT+0x1cf>
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x18(%rbp),%r13
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
leaveq 
retq   
mov    0x10(%rbx),%rax
test   %rax,%rax
je     220cb <png_set_sPLT+0xeb>
movzbl 0x8(%rbx),%eax
mov    %al,0x8(%r13)
callq  5260 <strlen@plt>
lea    0x1(%rax),%rdx
mov    %r14,%rdi
mov    %rdx,%rsi
mov    %r12,-0x38(%rbp)
mov    %rdx,%r12
callq  c950 <png_malloc_base>
mov    %rax,0x0(%r13)
test   %rax,%rax
je     221d9 <png_set_sPLT+0x1f9>
mov    %r12,%rdx
mov    %rax,%rdi
mov    (%rbx),%rsi
callq  54c0 <memcpy@plt>
movslq 0x18(%rbx),%rsi
mov    %r14,%rdi
mov    $0xa,%edx
callq  c980 <png_malloc_array>
mov    %rax,0x10(%r13)
test   %rax,%rax
je     221e2 <png_set_sPLT+0x202>
movslq 0x18(%rbx),%rcx
mov    %ecx,0x18(%r13)
mov    0x10(%rbx),%rsi
mov    0x18(%rbx),%ecx
lea    (%rcx,%rcx,4),%rcx
lea    (%rcx,%rcx,1),%rdx
mov    %rax,%rdi
callq  54c0 <memcpy@plt>
mov    0x8(%r15),%eax
or     $0x2000,%eax
mov    %eax,0x8(%r15)
movslq 0x148(%r15),%rax
add    $0x1,%eax
mov    %eax,0x148(%r15)
add    $0x20,%rbx
add    $0x20,%r13
mov    -0x38(%rbp),%r12
jmpq   220d3 <png_set_sPLT+0xf3>
mov    %r14,%rdi
lea    0xcf58(%rip),%rsi        # 2f111 <png_pass_inc.20+0x89e>
mov    $0x1,%edx
callq  b140 <png_chunk_report>
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x18(%rbp),%r13
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
leaveq 
retq   
mov    -0x38(%rbp),%rax
jmpq   220de <png_set_sPLT+0xfe>
mov    0x0(%r13),%rsi
mov    %r14,%rdi
callq  5790 <png_free@plt>
movq   $0x0,0x0(%r13)
mov    -0x38(%rbp),%rax
jmpq   220de <png_set_sPLT+0xfe>
nop

0000000000022200 <png_set_text>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %rdi,-0x8(%rbp)
callq  22df0 <png_set_text_2>
test   %eax,%eax
jne    22217 <png_set_text+0x17>
leaveq 
retq   
lea    0xcf06(%rip),%rsi        # 2f124 <png_pass_inc.20+0x8b1>
mov    -0x8(%rbp),%rdi
callq  5470 <png_error@plt>
nopw   0x0(%rax,%rax,1)

0000000000022230 <png_set_tIME>:
push   %rbp
mov    %rsp,%rbp
test   %rdi,%rdi
jne    2223b <png_set_tIME+0xb>
leaveq 
retq   
test   %rsi,%rsi
jne    22242 <png_set_tIME+0x12>
leaveq 
retq   
test   %rdx,%rdx
jne    22249 <png_set_tIME+0x19>
leaveq 
retq   
mov    0x12c(%rdi),%eax
and    $0x200,%eax
test   %eax,%eax
je     2225a <png_set_tIME+0x2a>
leaveq 
retq   
movzbl 0x2(%rdx),%eax
test   %al,%al
je     222a1 <png_set_tIME+0x71>
cmp    $0xc,%al
ja     222a1 <png_set_tIME+0x71>
movzbl 0x3(%rdx),%eax
test   %al,%al
je     222a1 <png_set_tIME+0x71>
cmp    $0x1f,%al
ja     222a1 <png_set_tIME+0x71>
movzbl 0x4(%rdx),%eax
cmp    $0x17,%al
ja     222a1 <png_set_tIME+0x71>
movzbl 0x5(%rdx),%eax
cmp    $0x3b,%al
ja     222a1 <png_set_tIME+0x71>
movzbl 0x6(%rdx),%eax
cmp    $0x3c,%al
ja     222a1 <png_set_tIME+0x71>
mov    0x8(%rsi),%eax
or     $0x200,%eax
mov    (%rdx),%rcx
mov    %eax,0x8(%rsi)
mov    %rcx,0xa8(%rsi)
leaveq 
retq   
lea    0xce9e(%rip),%rsi        # 2f146 <png_pass_inc.20+0x8d3>
callq  5390 <png_warning@plt>
leaveq 
retq   
nop

00000000000222b0 <png_set_tRNS>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
test   %rdi,%rdi
jne    222bf <png_set_tRNS+0xf>
leaveq 
retq   
test   %rsi,%rsi
jne    222c6 <png_set_tRNS+0x16>
leaveq 
retq   
test   %rdx,%rdx
je     2233a <png_set_tRNS+0x8a>
mov    $0x2000,%r10d
xor    %r11d,%r11d
mov    %rdi,%r9
mov    %rsi,%rax
mov    %r12,-0x8(%rbp)
mov    %r13,-0x10(%rbp)
mov    %r14,-0x18(%rbp)
mov    %r15,-0x20(%rbp)
mov    %rdx,-0x28(%rbp)
mov    %r10,%rdx
mov    %rsi,%r12
mov    %rax,%rsi
mov    %rcx,%r13
mov    %r11,%rcx
mov    %r8,%r14
mov    %rdi,%r15
mov    %r9,%rdi
callq  5720 <png_free_data@plt>
test   %r13d,%r13d
jg     22349 <png_set_tRNS+0x99>
mov    %r13,%rcx
mov    %r12,%rsi
mov    %r15,%rdi
mov    %r14,%r8
mov    0xb8(%rsi),%rax
mov    %rax,0x2e8(%rdi)
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
test   %r8,%r8
jne    22360 <png_set_tRNS+0xb0>
mov    %cx,0x22(%rsi)
test   %ecx,%ecx
jne    2238d <png_set_tRNS+0xdd>
leaveq 
retq   
cmp    $0x100,%r13d
jle    223a9 <png_set_tRNS+0xf9>
mov    %r13,%rcx
mov    %r12,%rsi
mov    %r15,%rdi
mov    %r14,%r8
jmp    2231c <png_set_tRNS+0x6c>
mov    $0x1,%eax
movzbl 0x24(%rsi),%edx
cmp    $0xf,%dl
jbe    223de <png_set_tRNS+0x12e>
mov    (%r8),%rdx
mov    %rdx,0xc0(%rsi)
movzwl 0x8(%r8),%edx
mov    %dx,0xc8(%rsi)
test   %ecx,%ecx
jne    2233f <png_set_tRNS+0x8f>
mov    %rax,%rcx
jmp    2233f <png_set_tRNS+0x8f>
mov    0x8(%rsi),%eax
or     $0x10,%eax
mov    %eax,0x8(%rsi)
mov    0x12c(%rsi),%eax
or     $0x2000,%eax
mov    %eax,0x12c(%rsi)
leaveq 
retq   
mov    $0x100,%esi
mov    %r15,%rdi
callq  5800 <png_malloc@plt>
mov    %rax,%rdi
mov    %rdi,0xb8(%r12)
movslq %r13d,%rdx
mov    -0x28(%rbp),%rsi
callq  54c0 <memcpy@plt>
mov    %r13,%rcx
mov    %r12,%rsi
mov    %r15,%rdi
mov    %r14,%r8
jmpq   2231c <png_set_tRNS+0x6c>
mov    %rcx,%r9
mov    %rdx,%rcx
mov    %rax,%rdx
shl    %cl,%edx
add    $0xffffffff,%edx
movzbl 0x25(%rsi),%ecx
test   %cl,%cl
je     22405 <png_set_tRNS+0x155>
movzbl 0x25(%rsi),%ecx
cmp    $0x2,%cl
je     22451 <png_set_tRNS+0x1a1>
mov    %r9,%rcx
jmpq   2236e <png_set_tRNS+0xbe>
movzwl 0x8(%r8),%ecx
cmp    %edx,%ecx
jle    223f4 <png_set_tRNS+0x144>
lea    0xcd4d(%rip),%rax        # 2f162 <png_pass_inc.20+0x8ef>
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %r9,%r13
mov    %rsi,%r14
mov    %rax,%rsi
mov    %r8,%r15
callq  5390 <png_warning@plt>
mov    %r13,%rcx
mov    %r14,%rsi
mov    %r15,%r8
mov    $0x1,%eax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
jmpq   2236e <png_set_tRNS+0xbe>
movzwl 0x2(%r8),%ecx
cmp    %ecx,%edx
jl     2240e <png_set_tRNS+0x15e>
movzwl 0x4(%r8),%ecx
cmp    %ecx,%edx
jl     2240e <png_set_tRNS+0x15e>
movzwl 0x6(%r8),%ecx
cmp    %ecx,%edx
jl     2240e <png_set_tRNS+0x15e>
mov    %r9,%rcx
jmpq   2236e <png_set_tRNS+0xbe>
data16 nopw %cs:0x0(%rax,%rax,1)
nop

0000000000022480 <png_set_sCAL>:
push   %rbp
mov    %rsp,%rbp
sub    $0x50,%rsp
xorpd  %xmm2,%xmm2
ucomisd %xmm2,%xmm0
jp     22498 <png_set_sCAL+0x18>
jbe    2251d <png_set_sCAL+0x9d>
ucomisd %xmm2,%xmm1
jp     224a4 <png_set_sCAL+0x24>
jbe    2252b <png_set_sCAL+0xab>
lea    -0x4c(%rbp),%rax
mov    $0x12,%r8d
mov    $0x5,%ecx
mov    %rdi,%r9
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rsi,%r13
mov    %rax,%rsi
mov    %rdx,%r14
mov    %r8,%rdx
mov    %rdi,%r15
mov    %r9,%rdi
movdqu %xmm1,-0x10(%rbp)
callq  8090 <png_ascii_from_fp>
lea    -0x3a(%rbp),%rsi
mov    %r15,%rdi
mov    $0x5,%ecx
mov    $0x12,%edx
movdqu -0x10(%rbp),%xmm0
callq  8090 <png_ascii_from_fp>
mov    %r14,%rdx
mov    %r13,%rsi
mov    %r15,%rdi
lea    -0x3a(%rbp),%r8
lea    -0x4c(%rbp),%rcx
callq  5660 <png_set_sCAL_s@plt>
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
leaveq 
retq   
lea    0xcc70(%rip),%rsi        # 2f194 <png_pass_inc.20+0x921>
callq  5390 <png_warning@plt>
leaveq 
retq   
lea    0xcc7d(%rip),%rsi        # 2f1af <png_pass_inc.20+0x93c>
callq  5390 <png_warning@plt>
leaveq 
retq   
nopl   0x0(%rax)

0000000000022540 <png_set_sCAL_fixed>:
push   %rbp
mov    %rsp,%rbp
sub    $0x50,%rsp
test   %ecx,%ecx
jle    225ca <png_set_sCAL_fixed+0x8a>
test   %r8d,%r8d
jle    225d8 <png_set_sCAL_fixed+0x98>
lea    -0x44(%rbp),%rax
mov    $0x12,%r9d
mov    %rdi,%r10
mov    %r12,-0x8(%rbp)
mov    %r13,-0x10(%rbp)
mov    %r14,-0x18(%rbp)
mov    %r15,-0x20(%rbp)
mov    %rdx,%r12
mov    %r9,%rdx
mov    %rsi,%r13
mov    %rax,%rsi
mov    %rdi,%r14
mov    %r10,%rdi
mov    %r8,%r15
callq  85c0 <png_ascii_from_fixed>
mov    %r15,%rcx
lea    -0x32(%rbp),%r15
mov    %r14,%rdi
mov    %r15,%rsi
mov    $0x12,%edx
callq  85c0 <png_ascii_from_fixed>
mov    %r12,%rdx
mov    %r13,%rsi
mov    %r14,%rdi
mov    %r15,%r8
lea    -0x44(%rbp),%rcx
callq  5660 <png_set_sCAL_s@plt>
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
leaveq 
retq   
lea    0xcbc3(%rip),%rsi        # 2f194 <png_pass_inc.20+0x921>
callq  5390 <png_warning@plt>
leaveq 
retq   
lea    0xcbd0(%rip),%rsi        # 2f1af <png_pass_inc.20+0x93c>
callq  5390 <png_warning@plt>
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)

00000000000225f0 <png_set_sCAL_s>:
push   %rbp
mov    %rsp,%rbp
sub    $0x40,%rsp
test   %rdi,%rdi
jne    225ff <png_set_sCAL_s+0xf>
leaveq 
retq   
test   %rsi,%rsi
jne    22606 <png_set_sCAL_s+0x16>
leaveq 
retq   
cmp    $0x1,%edx
jne    22652 <png_set_sCAL_s+0x62>
test   %rcx,%rcx
je     22646 <png_set_sCAL_s+0x56>
mov    %rcx,%rax
mov    %rbx,-0x10(%rbp)
mov    %r12,-0x18(%rbp)
mov    %r13,-0x20(%rbp)
mov    %r14,-0x28(%rbp)
mov    %r15,-0x30(%rbp)
mov    %rsi,%rbx
mov    %rdx,%r12
mov    %r8,%r13
mov    %rdi,%r14
mov    %rax,%rdi
mov    %rcx,%r15
callq  5260 <strlen@plt>
test   %rax,%rax
jne    22663 <png_set_sCAL_s+0x73>
mov    %r14,%rdi
lea    0xcb90(%rip),%rsi        # 2f1dd <png_pass_inc.20+0x96a>
callq  5470 <png_error@plt>
cmp    $0x2,%edx
je     2260b <png_set_sCAL_s+0x1b>
lea    0xcb6d(%rip),%rsi        # 2f1cb <png_pass_inc.20+0x958>
callq  5470 <png_error@plt>
movsbq (%r15),%rcx
cmp    $0x2d,%cl
jne    22671 <png_set_sCAL_s+0x81>
mov    %r14,%rdi
jmp    22646 <png_set_sCAL_s+0x56>
mov    %r15,%rdi
mov    %rax,%rsi
mov    %r15,-0x38(%rbp)
mov    %rax,%r15
callq  8920 <png_check_fp_string>
test   %eax,%eax
jne    2268c <png_set_sCAL_s+0x9c>
mov    %r14,%rdi
jmp    22646 <png_set_sCAL_s+0x56>
test   %r13,%r13
je     22762 <png_set_sCAL_s+0x172>
mov    %r13,%rdi
callq  5260 <strlen@plt>
test   %rax,%rax
je     22762 <png_set_sCAL_s+0x172>
movsbq 0x0(%r13),%rcx
cmp    $0x2d,%cl
je     22762 <png_set_sCAL_s+0x172>
mov    %r13,%rdi
mov    %rax,%rsi
mov    %r13,-0x8(%rbp)
mov    %rax,%r13
callq  8920 <png_check_fp_string>
test   %eax,%eax
je     22762 <png_set_sCAL_s+0x172>
mov    %r12b,0x14c(%rbx)
add    $0x1,%r15
mov    %r14,%rdi
mov    %r15,%rsi
callq  5150 <png_malloc_warn@plt>
mov    %rax,0x150(%rbx)
lea    0xcb12(%rip),%r12        # 2f204 <png_pass_inc.20+0x991>
test   %rax,%rax
je     22771 <png_set_sCAL_s+0x181>
mov    %r15,%rdx
mov    %rax,%rdi
mov    -0x38(%rbp),%rsi
callq  54c0 <memcpy@plt>
add    $0x1,%r13
mov    %r14,%rdi
mov    %r13,%rsi
callq  5150 <png_malloc_warn@plt>
mov    %rax,0x158(%rbx)
test   %rax,%rax
je     22792 <png_set_sCAL_s+0x1a2>
mov    %r13,%rdx
mov    %rax,%rdi
mov    -0x8(%rbp),%rsi
callq  54c0 <memcpy@plt>
mov    0x8(%rbx),%eax
or     $0x4000,%eax
mov    %eax,0x8(%rbx)
mov    0x12c(%rbx),%eax
or     $0x100,%eax
mov    %eax,0x12c(%rbx)
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
mov    -0x10(%rbp),%rbx
leaveq 
retq   
mov    %r14,%rdi
lea    0xca84(%rip),%rsi        # 2f1f0 <png_pass_inc.20+0x97d>
callq  5470 <png_error@plt>
mov    %r12,%rsi
mov    %r14,%rdi
callq  5390 <png_warning@plt>
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
mov    -0x10(%rbp),%rbx
leaveq 
retq   
mov    0x150(%rbx),%rsi
mov    %r14,%rdi
callq  5790 <png_free@plt>
movq   $0x0,0x150(%rbx)
mov    %r12,%rsi
mov    %r14,%rdi
callq  5390 <png_warning@plt>
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
mov    -0x10(%rbp),%rbx
leaveq 
retq   
nopl   (%rax)

00000000000227d0 <png_set_keep_unknown_chunks>:
push   %rbp
mov    %rsp,%rbp
sub    $0x40,%rsp
test   %rdi,%rdi
jne    227df <png_set_keep_unknown_chunks+0xf>
leaveq 
retq   
test   %esi,%esi
js     22803 <png_set_keep_unknown_chunks+0x33>
cmp    $0x3,%esi
jg     22803 <png_set_keep_unknown_chunks+0x33>
test   %ecx,%ecx
jle    22811 <png_set_keep_unknown_chunks+0x41>
test   %ecx,%ecx
js     2281d <png_set_keep_unknown_chunks+0x4d>
test   %rdx,%rdx
jne    22829 <png_set_keep_unknown_chunks+0x59>
lea    0xcabb(%rip),%rsi        # 2f2b7 <chunks_to_ignore.46+0x5a>
callq  b120 <png_app_error>
leaveq 
retq   
lea    0xca29(%rip),%rsi        # 2f233 <png_pass_inc.20+0x9c0>
callq  b120 <png_app_error>
leaveq 
retq   
mov    %esi,0x3c0(%rdi)
test   %ecx,%ecx
jne    227ec <png_set_keep_unknown_chunks+0x1c>
leaveq 
retq   
mov    $0x12,%ecx
lea    0xca34(%rip),%rdx        # 2f25d <chunks_to_ignore.46>
mov    0x3c4(%rdi),%eax
xor    %r8d,%r8d
mov    0x3c8(%rdi),%r9
test   %r9,%r9
jne    22841 <png_set_keep_unknown_chunks+0x71>
mov    %r8,%rax
lea    (%rax,%rcx,1),%r9d
cmp    $0x33333333,%r9d
ja     2285e <png_set_keep_unknown_chunks+0x8e>
test   %esi,%esi
jne    2286c <png_set_keep_unknown_chunks+0x9c>
test   %eax,%eax
jne    228c8 <png_set_keep_unknown_chunks+0xf8>
mov    %r8,%r9
jmpq   22914 <png_set_keep_unknown_chunks+0x144>
lea    0xca7d(%rip),%rsi        # 2f2e2 <chunks_to_ignore.46+0x85>
callq  b120 <png_app_error>
leaveq 
retq   
lea    (%r9,%r9,4),%r8d
mov    %r8d,%r8d
mov    %rdi,%r9
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rdx,-0x30(%rbp)
mov    %rsi,-0x38(%rbp)
mov    %r8,%rsi
mov    %rdi,%r13
mov    %r9,%rdi
mov    %rax,%r14
mov    %rcx,%r15
callq  5800 <png_malloc@plt>
test   %r14d,%r14d
jne    228d1 <png_set_keep_unknown_chunks+0x101>
mov    %r15,%rcx
mov    %r13,%rdi
mov    %rax,%r9
mov    %r14,%rax
xor    %r8d,%r8d
mov    -0x38(%rbp),%rsi
mov    -0x30(%rbp),%rdx
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
jmp    22914 <png_set_keep_unknown_chunks+0x144>
mov    0x3c8(%rdi),%r9
jmp    22914 <png_set_keep_unknown_chunks+0x144>
mov    0x3c8(%r13),%rsi
lea    (%r14,%r14,4),%ecx
mov    %ecx,%edx
mov    %rax,%rdi
mov    %r12,-0x10(%rbp)
mov    %rax,%r12
callq  54c0 <memcpy@plt>
mov    %r14,%rax
mov    %r15,%rcx
mov    %r13,%rdi
mov    %r12,%r9
mov    -0x10(%rbp),%r12
xor    %r8d,%r8d
mov    -0x38(%rbp),%rsi
mov    -0x30(%rbp),%rdx
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
test   %r9,%r9
jne    22931 <png_set_keep_unknown_chunks+0x161>
mov    %r8,%rax
mov    %r8d,0x3c4(%rdi)
mov    0x3c8(%rdi),%rsi
cmp    %rsi,%rax
jne    22957 <png_set_keep_unknown_chunks+0x187>
leaveq 
retq   
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %r12,-0x10(%rbp)
mov    %rdi,-0x30(%rbp)
mov    %rbx,-0x8(%rbp)
mov    %r9,%rbx
mov    %rcx,%r12
mov    %rdx,%r13
mov    %r8,%r14
jmp    229b5 <png_set_keep_unknown_chunks+0x1e5>
test   %rsi,%rsi
je     22983 <png_set_keep_unknown_chunks+0x1b3>
mov    %rdi,%rcx
mov    %r14,-0x8(%rbp)
mov    %r15,-0x38(%rbp)
mov    %rdi,%r14
mov    %rcx,%rdi
mov    %rax,%r15
callq  5790 <png_free@plt>
mov    %r15,%rax
mov    %r14,%rdi
mov    -0x38(%rbp),%r15
mov    -0x8(%rbp),%r14
mov    %rax,0x3c8(%rdi)
leaveq 
retq   
mov    %r14d,%ecx
lea    0x0(%r13,%rcx,1),%rdx
mov    %rbx,%rdi
mov    %rsi,%rcx
mov    %rsi,-0x38(%rbp)
mov    %rax,%rsi
mov    %r8,%r15
callq  23450 <add_one_chunk>
add    $0x5,%r14d
lea    0x1(%r15),%r8d
mov    -0x38(%rbp),%rsi
cmp    %r8d,%r12d
ja     2298c <png_set_keep_unknown_chunks+0x1bc>
mov    $0x5,%edx
mov    %rbx,-0x38(%rbp)
xor    %r12d,%r12d
mov    %rbx,%r13
mov    %r12,%r8
jmp    22a08 <png_set_keep_unknown_chunks+0x238>
movzbl 0x4(%r13),%ecx
test   %cl,%cl
je     22a00 <png_set_keep_unknown_chunks+0x230>
cmp    %rbx,%r13
je     229f8 <png_set_keep_unknown_chunks+0x228>
mov    %r8,%r14
mov    %rax,%r15
mov    %rbx,%rdi
mov    %r13,%rsi
callq  54c0 <memcpy@plt>
mov    %r15,%rax
mov    %r14,%r8
mov    $0x5,%edx
add    $0x1,%r8d
add    $0x5,%rbx
add    $0x5,%r13
add    $0x1,%r12d
cmp    %eax,%r12d
jb     229ce <png_set_keep_unknown_chunks+0x1fe>
test   %r8d,%r8d
je     22a33 <png_set_keep_unknown_chunks+0x263>
mov    -0x8(%rbp),%rbx
mov    -0x30(%rbp),%rdi
mov    -0x38(%rbp),%rax
mov    -0x10(%rbp),%r12
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
jmpq   2291c <png_set_keep_unknown_chunks+0x14c>
mov    -0x30(%rbp),%rdi
mov    -0x38(%rbp),%rsi
cmp    0x3c8(%rdi),%rsi
jne    22a63 <png_set_keep_unknown_chunks+0x293>
mov    -0x8(%rbp),%rbx
mov    -0x10(%rbp),%r12
xor    %r8d,%r8d
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    %r8,%rax
jmpq   2291c <png_set_keep_unknown_chunks+0x14c>
mov    %rdi,%r15
callq  5790 <png_free@plt>
mov    %r15,%rdi
mov    -0x8(%rbp),%rbx
mov    -0x10(%rbp),%r12
xor    %r8d,%r8d
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    %r8,%rax
jmpq   2291c <png_set_keep_unknown_chunks+0x14c>
nopl   (%rax)

0000000000022a90 <png_set_unknown_chunks>:
push   %rbp
mov    %rsp,%rbp
sub    $0x40,%rsp
test   %rdi,%rdi
jne    22a9f <png_set_unknown_chunks+0xf>
leaveq 
retq   
test   %rsi,%rsi
jne    22aa6 <png_set_unknown_chunks+0x16>
leaveq 
retq   
test   %ecx,%ecx
jg     22aac <png_set_unknown_chunks+0x1c>
leaveq 
retq   
test   %rdx,%rdx
jne    22ab3 <png_set_unknown_chunks+0x23>
leaveq 
retq   
mov    0x130(%rsi),%r11
movslq 0x138(%rsi),%r9
mov    $0x20,%r8d
mov    %rdi,%r10
mov    %rcx,%rax
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rcx,-0x38(%rbp)
mov    %rdx,-0x30(%rbp)
mov    %rax,%rcx
mov    %r9,%rdx
mov    %r12,%r14
mov    %rsi,%r12
mov    %r11,%rsi
mov    %rbx,%r15
mov    %rdi,%rbx
mov    %r10,%rdi
callq  c9a0 <png_realloc_array>
test   %rax,%rax
je     22b5c <png_set_unknown_chunks+0xcc>
mov    0x130(%r12),%rsi
mov    %rbx,%rdi
mov    %r13,-0x18(%rbp)
mov    %r14,%r13
mov    %rax,%r14
callq  5790 <png_free@plt>
mov    %r14,0x130(%r12)
mov    0x12c(%r12),%eax
or     $0x200,%eax
mov    %eax,0x12c(%r12)
mov    $0x5,%edx
movslq 0x138(%r12),%rcx
shl    $0x5,%rcx
add    %rcx,%r14
mov    %r15,-0x8(%rbp)
mov    %r13,-0x10(%rbp)
mov    -0x30(%rbp),%r15
mov    -0x38(%rbp),%r13
jmp    22bb4 <png_set_unknown_chunks+0x124>
mov    %rbx,%rdi
mov    %r14,%r12
lea    0xc7a6(%rip),%rsi        # 2f30f <chunks_to_ignore.46+0xb2>
mov    $0x1,%edx
callq  b140 <png_chunk_report>
mov    %r15,%rbx
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
leaveq 
retq   
movq   $0x0,0x8(%r14)
movq   $0x0,0x10(%r14)
movslq 0x138(%r12),%rax
add    $0x1,%eax
mov    %eax,0x138(%r12)
add    $0x20,%r14
add    $0xffffffff,%r13d
add    $0x20,%r15
mov    $0x5,%edx
test   %r13d,%r13d
jg     22bcf <png_set_unknown_chunks+0x13f>
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x18(%rbp),%r13
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
leaveq 
retq   
mov    %r14,%rdi
mov    %r15,%rsi
callq  54c0 <memcpy@plt>
movb   $0x0,0x4(%r14)
movzbl 0x18(%r15),%esi
mov    %rbx,%rdi
callq  233d0 <check_location>
mov    %al,0x18(%r14)
mov    0x10(%r15),%rsi
test   %rsi,%rsi
je     22b80 <png_set_unknown_chunks+0xf0>
mov    %rbx,%rdi
callq  c950 <png_malloc_base>
mov    %rax,0x8(%r14)
test   %rax,%rax
je     22c27 <png_set_unknown_chunks+0x197>
mov    %rax,%rdi
mov    0x8(%r15),%rsi
mov    0x10(%r15),%rdx
callq  54c0 <memcpy@plt>
mov    0x10(%r15),%rax
mov    %rax,0x10(%r14)
jmpq   22b90 <png_set_unknown_chunks+0x100>
mov    %rbx,%rdi
lea    0xc6f6(%rip),%rsi        # 2f327 <chunks_to_ignore.46+0xca>
mov    $0x1,%edx
callq  b140 <png_chunk_report>
jmpq   22ba7 <png_set_unknown_chunks+0x117>

0000000000022c40 <png_set_unknown_chunk_location>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
test   %rdi,%rdi
jne    22c4f <png_set_unknown_chunk_location+0xf>
leaveq 
retq   
test   %rsi,%rsi
jne    22c56 <png_set_unknown_chunk_location+0x16>
leaveq 
retq   
test   %edx,%edx
jns    22c5c <png_set_unknown_chunk_location+0x1c>
leaveq 
retq   
cmp    0x138(%rsi),%edx
jl     22c66 <png_set_unknown_chunk_location+0x26>
leaveq 
retq   
mov    %rcx,%rax
and    $0xb,%eax
test   %eax,%eax
je     22ca6 <png_set_unknown_chunk_location+0x66>
mov    %rsi,%rax
mov    %rcx,%rsi
mov    0x130(%rax),%rax
mov    %r14,-0x18(%rbp)
mov    %r15,-0x20(%rbp)
mov    %rax,%r14
mov    %rdx,%r15
callq  233d0 <check_location>
movslq %r15d,%rcx
shl    $0x5,%rcx
mov    %al,0x18(%r14,%rcx,1)
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
leaveq 
retq   
lea    0xc697(%rip),%rax        # 2f344 <chunks_to_ignore.46+0xe7>
mov    %rdi,%r8
mov    %r12,-0x8(%rbp)
mov    %r13,-0x10(%rbp)
mov    %r14,-0x18(%rbp)
mov    %r15,-0x20(%rbp)
mov    %rcx,%r12
mov    %rsi,%r13
mov    %rax,%rsi
mov    %rdi,%r14
mov    %r8,%rdi
mov    %rdx,%r15
callq  b120 <png_app_error>
and    $0x4,%r12d
test   %r12d,%r12d
jne    22d03 <png_set_unknown_chunk_location+0xc3>
mov    %r13,%rax
mov    %r15,%rdx
mov    %r14,%rdi
mov    $0x1,%esi
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
jmpq   22c76 <png_set_unknown_chunk_location+0x36>
mov    %r13,%rax
mov    %r15,%rdx
mov    %r14,%rdi
mov    $0x8,%esi
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
jmpq   22c76 <png_set_unknown_chunk_location+0x36>
nopw   %cs:0x0(%rax,%rax,1)

0000000000022d30 <png_set_invalid>:
push   %rbp
mov    %rsp,%rbp
test   %rdi,%rdi
jne    22d3b <png_set_invalid+0xb>
leaveq 
retq   
test   %rsi,%rsi
jne    22d42 <png_set_invalid+0x12>
leaveq 
retq   
not    %edx
and    0x8(%rsi),%edx
mov    %edx,0x8(%rsi)
leaveq 
retq   
nopl   0x0(%rax)

0000000000022d50 <png_permit_mng_features>:
push   %rbp
mov    %rsp,%rbp
test   %rdi,%rdi
jne    22d5d <png_permit_mng_features+0xd>
xor    %eax,%eax
leaveq 
retq   
mov    %rsi,%rax
and    $0x5,%eax
mov    %eax,0x3d8(%rdi)
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

0000000000022d70 <png_set_user_limits>:
push   %rbp
mov    %rsp,%rbp
test   %rdi,%rdi
jne    22d7b <png_set_user_limits+0xb>
leaveq 
retq   
mov    %esi,0x41c(%rdi)
mov    %edx,0x420(%rdi)
leaveq 
retq   
nopl   0x0(%rax)

0000000000022d90 <png_set_chunk_cache_max>:
push   %rbp
mov    %rsp,%rbp
test   %rdi,%rdi
jne    22d9b <png_set_chunk_cache_max+0xb>
leaveq 
retq   
mov    %esi,0x424(%rdi)
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

0000000000022db0 <png_set_chunk_malloc_max>:
push   %rbp
mov    %rsp,%rbp
test   %rdi,%rdi
jne    22dbb <png_set_chunk_malloc_max+0xb>
leaveq 
retq   
mov    %rsi,0x428(%rdi)
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nop

0000000000022dd0 <png_set_check_for_invalid_index>:
push   %rbp
mov    %rsp,%rbp
test   %esi,%esi
jg     22de4 <png_set_check_for_invalid_index+0x14>
movl   $0xffffffff,0x25c(%rdi)
leaveq 
retq   
movl   $0x0,0x25c(%rdi)
leaveq 
retq   

0000000000022df0 <png_set_text_2>:
push   %rbp
mov    %rsp,%rbp
sub    $0x60,%rsp
xor    %eax,%eax
test   %rdi,%rdi
jne    22e01 <png_set_text_2+0x11>
leaveq 
retq   
test   %rsi,%rsi
jne    22e08 <png_set_text_2+0x18>
leaveq 
retq   
test   %ecx,%ecx
jg     22e0e <png_set_text_2+0x1e>
leaveq 
retq   
test   %rdx,%rdx
jne    22e15 <png_set_text_2+0x25>
leaveq 
retq   
mov    $0x1,%r10d
lea    0xc556(%rip),%r9        # 2f378 <chunks_to_ignore.46+0x11b>
movslq 0x94(%rsi),%r11
movslq 0x98(%rsi),%r8
sub    %r11d,%r8d
cmp    %r8d,%ecx
jg     22e63 <png_set_text_2+0x73>
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %rdx,%rbx
mov    %r10,%rdx
mov    %rsi,%r12
mov    %r9,%rsi
mov    %rdi,%r13
mov    %rcx,%r14
mov    %rax,%r15
jmp    22eac <png_set_text_2+0xbc>
mov    %r11,%r8
xor    $0x7fffffff,%r8d
cmp    %r8d,%ecx
jle    22ecb <png_set_text_2+0xdb>
mov    %rbx,%r8
mov    %rdx,%rbx
mov    %r10,%rdx
mov    %r12,%r10
mov    %rsi,%r12
mov    %r11,%r9
mov    %r14,%rsi
mov    %rcx,%r14
mov    %rsi,%rcx
jmpq   22f4f <png_set_text_2+0x15f>
mov    %r13,%rdi
callq  b140 <png_chunk_report>
mov    $0x1,%edx
lea    0xc4d2(%rip),%rsi        # 2f378 <chunks_to_ignore.46+0x11b>
add    $0x1,%r15d
xor    %eax,%eax
cmp    %r15d,%r14d
jg     22fc8 <png_set_text_2+0x1d8>
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
leaveq 
retq   
lea    (%rcx,%r11,1),%eax
cmp    $0x7ffffff6,%eax
jle    22edd <png_set_text_2+0xed>
mov    $0x7fffffff,%eax
jmp    22ee3 <png_set_text_2+0xf3>
add    $0x8,%eax
and    $0xfffffff8,%eax
mov    %rax,%r10
sub    %r11d,%r10d
mov    0xa0(%rsi),%r8
mov    %rdi,%r9
mov    %rdx,-0x58(%rbp)
mov    %r13,-0x38(%rbp)
mov    %r14,-0x40(%rbp)
mov    %r15,-0x50(%rbp)
mov    %rcx,-0x60(%rbp)
mov    %r10,%rcx
mov    %r11,%rdx
mov    %r12,%r13
mov    %rsi,%r12
mov    %r8,%rsi
mov    %rax,%r14
mov    %rdi,%r15
mov    %r9,%rdi
mov    $0x38,%r8d
callq  c9a0 <png_realloc_array>
mov    %r15,%rdi
mov    %rbx,%r8
mov    %r14,%r9
mov    %r13,%r10
mov    -0x60(%rbp),%r14
mov    -0x50(%rbp),%r15
mov    -0x40(%rbp),%rcx
mov    -0x38(%rbp),%r13
mov    -0x58(%rbp),%rbx
mov    $0x1,%edx
test   %rax,%rax
je     23076 <png_set_text_2+0x286>
mov    %r15,-0x28(%rbp)
mov    0xa0(%r12),%rsi
mov    %rcx,-0x20(%rbp)
mov    %rdi,%rcx
mov    %r13,-0x18(%rbp)
mov    %rdi,-0x60(%rbp)
mov    %r8,-0x8(%rbp)
mov    %r10,-0x10(%rbp)
mov    %rcx,%rdi
mov    %r9,%r13
mov    %rax,%r15
callq  5790 <png_free@plt>
mov    %r15,0xa0(%r12)
mov    0x12c(%r12),%eax
or     $0x4000,%eax
mov    %eax,0x12c(%r12)
mov    %r13d,0x98(%r12)
mov    -0x60(%rbp),%r13
mov    $0x1,%edx
xor    %eax,%eax
lea    0xc3b8(%rip),%rsi        # 2f378 <chunks_to_ignore.46+0x11b>
mov    %rax,%r15
jmpq   22eac <png_set_text_2+0xbc>
mov    0xa0(%r12),%r8
movslq 0x94(%r12),%r9
movslq %r15d,%rcx
lea    (%rcx,%rcx,2),%rax
shl    $0x4,%rax
lea    (%rax,%rcx,8),%rax
mov    0x8(%rbx,%rax,1),%rdi
test   %rdi,%rdi
je     22ea6 <png_set_text_2+0xb6>
movslq (%rbx,%rax,1),%rcx
cmp    $0xffffffff,%ecx
jl     22e92 <png_set_text_2+0xa2>
cmp    $0x2,%ecx
jg     22e92 <png_set_text_2+0xa2>
mov    %r14,-0x58(%rbp)
mov    %r13,-0x38(%rbp)
mov    %r12,-0x50(%rbp)
mov    %r15,-0x60(%rbp)
mov    %rax,%r12
mov    %r8,%r13
mov    %rcx,%r14
mov    %r9,%r15
callq  5260 <strlen@plt>
test   %r14d,%r14d
jg     23092 <png_set_text_2+0x2a2>
mov    %r15,%rcx
mov    %rax,%r15
mov    %rcx,%rax
xor    %r14d,%r14d
mov    %r14,%rcx
mov    %rcx,-0x40(%rbp)
mov    0x10(%rbx,%r12,1),%rdi
test   %rdi,%rdi
je     230b1 <png_set_text_2+0x2c1>
movsbq (%rdi),%rdx
test   %dl,%dl
je     230b1 <png_set_text_2+0x2c1>
mov    %r14,-0x48(%rbp)
mov    %rax,%r14
callq  5260 <strlen@plt>
movslq (%rbx,%r12,1),%rsi
mov    %rax,%rdi
mov    %r14,%rax
mov    -0x40(%rbp),%rcx
mov    -0x48(%rbp),%r14
jmp    230cb <png_set_text_2+0x2db>
mov    %r8,%rbx
mov    %r10,%r12
mov    %rcx,%r14
lea    0xc2dd(%rip),%rsi        # 2f363 <chunks_to_ignore.46+0x106>
callq  b140 <png_chunk_report>
mov    $0x1,%eax
leaveq 
retq   
mov    0x28(%rbx,%r12,1),%rdi
test   %rdi,%rdi
jne    2313f <png_set_text_2+0x34f>
mov    %r15,%rcx
mov    %rax,%r15
mov    %rcx,%rax
xor    %r14d,%r14d
jmpq   23153 <png_set_text_2+0x363>
movslq (%rbx,%r12,1),%rdx
test   %edx,%edx
jg     230c4 <png_set_text_2+0x2d4>
xor    %edi,%edi
mov    $0xffffffffffffffff,%rsi
jmp    230cb <png_set_text_2+0x2db>
mov    $0x1,%esi
xor    %edi,%edi
mov    %rdi,-0x30(%rbp)
lea    (%rax,%rax,2),%rdx
shl    $0x4,%rdx
lea    (%rdx,%rax,8),%rax
add    %rax,%r13
mov    %esi,0x0(%r13)
lea    (%rdi,%r15,1),%rax
add    %r14,%rax
lea    0x4(%rcx,%rax,1),%rsi
mov    -0x38(%rbp),%rdi
callq  c950 <png_malloc_base>
mov    %rax,0x8(%r13)
test   %rax,%rax
je     23168 <png_set_text_2+0x378>
mov    %rax,%rdi
mov    0x8(%rbx,%r12,1),%rsi
mov    %r15,%rdx
callq  54c0 <memcpy@plt>
mov    0x8(%r13),%rax
movb   $0x0,(%rax,%r15,1)
movslq (%rbx,%r12,1),%rax
test   %eax,%eax
jg     23199 <png_set_text_2+0x3a9>
movq   $0x0,0x28(%r13)
movq   $0x0,0x30(%r13)
mov    0x8(%r13),%rax
lea    0x1(%rax,%r15,1),%rdi
jmpq   231ec <png_set_text_2+0x3fc>
mov    %r15,%r14
mov    %rax,%r15
callq  5260 <strlen@plt>
mov    %r14,%rcx
mov    %rax,%r14
mov    %rcx,%rax
mov    0x30(%rbx,%r12,1),%rdi
test   %rdi,%rdi
jne    23225 <png_set_text_2+0x435>
xor    %ecx,%ecx
jmpq   23040 <png_set_text_2+0x250>
lea    0xc22f(%rip),%rsi        # 2f39e <chunks_to_ignore.46+0x141>
mov    $0x1,%ebx
mov    %rbx,%rdx
mov    -0x38(%rbp),%rdi
callq  b140 <png_chunk_report>
mov    %rbx,%rax
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
leaveq 
retq   
mov    0x8(%r13),%rax
lea    0x1(%rax,%r15,1),%rdi
mov    %rdi,0x28(%r13)
mov    0x28(%rbx,%r12,1),%rsi
mov    %r14,%rdx
callq  54c0 <memcpy@plt>
mov    0x28(%r13),%rax
movb   $0x0,(%rax,%r14,1)
mov    0x28(%r13),%rax
lea    0x1(%rax,%r14,1),%rdi
mov    %rdi,0x30(%r13)
mov    0x30(%rbx,%r12,1),%rsi
mov    -0x40(%rbp),%r14
mov    %r14,%rdx
callq  54c0 <memcpy@plt>
mov    0x30(%r13),%rax
movb   $0x0,(%rax,%r14,1)
mov    0x30(%r13),%rax
lea    0x1(%rax,%r14,1),%rdi
mov    %rdi,0x10(%r13)
mov    -0x30(%rbp),%r14
test   %r14,%r14
je     23206 <png_set_text_2+0x416>
mov    0x10(%rbx,%r12,1),%rsi
mov    %r14,%rdx
callq  54c0 <memcpy@plt>
mov    0x10(%r13),%rax
movb   $0x0,(%rax,%r14,1)
movslq 0x0(%r13),%rax
test   %eax,%eax
jg     23240 <png_set_text_2+0x450>
mov    %r14,0x18(%r13)
movq   $0x0,0x20(%r13)
jmp    2324c <png_set_text_2+0x45c>
mov    %r15,-0x48(%rbp)
mov    %rax,%r15
callq  5260 <strlen@plt>
mov    %rax,%rcx
mov    %r15,%rax
mov    -0x48(%rbp),%r15
jmpq   23040 <png_set_text_2+0x250>
movq   $0x0,0x18(%r13)
mov    %r14,0x20(%r13)
mov    -0x50(%rbp),%r12
movslq 0x94(%r12),%rax
add    $0x1,%eax
mov    %eax,0x94(%r12)
mov    -0x60(%rbp),%r15
mov    -0x38(%rbp),%r13
mov    -0x58(%rbp),%r14
mov    $0x1,%edx
lea    0xc0fd(%rip),%rsi        # 2f378 <chunks_to_ignore.46+0x11b>
jmpq   22ea6 <png_set_text_2+0xb6>

0000000000023280 <png_check_keyword>:
push   %rbp
mov    %rsp,%rbp
sub    $0x120,%rsp
xor    %r9d,%r9d
test   %rsi,%rsi
je     232a8 <png_check_keyword+0x28>
mov    $0x1,%r11d
mov    %rsi,-0x8(%rbp)
mov    %r9,%rax
mov    %rax,%rcx
mov    %r11,%r10
jmp    232d2 <png_check_keyword+0x52>
movb   $0x0,(%rdx)
mov    %r9,%rax
leaveq 
retq   
cmp    $0x4e,%eax
ja     232db <png_check_keyword+0x5b>
add    $0x1,%rsi
cmp    $0x20,%r8b
ja     232ee <png_check_keyword+0x6e>
cmp    $0xa0,%r8b
jbe    232f6 <png_check_keyword+0x76>
mov    %r8b,(%rdx)
add    $0x1,%rdx
add    $0x1,%eax
mov    %r9,%r10
movsbq (%rsi),%r8
test   %r8b,%r8b
jne    232b0 <png_check_keyword+0x30>
test   %eax,%eax
jne    23305 <png_check_keyword+0x85>
mov    %r9,%rax
movb   $0x0,(%rdx)
test   %eax,%eax
jne    2331c <png_check_keyword+0x9c>
mov    %r9,%rax
leaveq 
retq   
cmp    $0x7e,%r8b
jbe    232c5 <png_check_keyword+0x45>
jmp    232bf <png_check_keyword+0x3f>
test   %r10d,%r10d
je     2332a <png_check_keyword+0xaa>
test   %ecx,%ecx
jne    232d2 <png_check_keyword+0x52>
movzbl %r8b,%ecx
jmp    232d2 <png_check_keyword+0x52>
test   %r10d,%r10d
jle    232e2 <png_check_keyword+0x62>
add    $0xffffffffffffffff,%rdx
add    $0xffffffff,%eax
test   %ecx,%ecx
jne    232e2 <png_check_keyword+0x62>
mov    $0x20,%ecx
jmp    232e2 <png_check_keyword+0x62>
movsbq (%rsi),%rdx
test   %dl,%dl
jne    2333f <png_check_keyword+0xbf>
test   %ecx,%ecx
jg     23355 <png_check_keyword+0xd5>
leaveq 
retq   
movb   $0x20,(%rdx)
add    $0x1,%rdx
add    $0x1,%eax
cmp    $0x20,%r8b
jne    233b9 <png_check_keyword+0x139>
mov    %r11,%r10
jmp    232d2 <png_check_keyword+0x52>
lea    0xc072(%rip),%rsi        # 2f3b8 <chunks_to_ignore.46+0x15b>
mov    %rax,-0x20(%rbp)
callq  5390 <png_warning@plt>
mov    -0x20(%rbp),%rax
leaveq 
retq   
lea    -0x120(%rbp),%r8
mov    %r14,-0x18(%rbp)
mov    %r15,-0x20(%rbp)
mov    %rax,-0x10(%rbp)
mov    %r11,%rsi
mov    %rdi,%r14
mov    %r8,%rdi
mov    %rcx,%r15
mov    -0x8(%rbp),%rdx
callq  af30 <png_warning_parameter>
mov    %r15,%rcx
mov    $0x2,%esi
mov    $0x4,%edx
lea    -0x120(%rbp),%r15
mov    %r15,%rdi
callq  afa0 <png_warning_parameter_signed>
mov    %r15,%rsi
mov    %r14,%rdi
lea    0xc024(%rip),%rdx        # 2f3ca <chunks_to_ignore.46+0x16d>
callq  b020 <png_formatted_warning>
mov    -0x10(%rbp),%rax
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
leaveq 
retq   
movzbl %r8b,%ecx
mov    %r11,%r10
jmpq   232d2 <png_check_keyword+0x52>
data16 nopw %cs:0x0(%rax,%rax,1)

00000000000233d0 <check_location>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
and    $0xb,%esi
test   %esi,%esi
je     233ef <check_location+0x1f>
test   %esi,%esi
jne    23407 <check_location+0x37>
lea    0xc037(%rip),%rsi        # 2f421 <chunks_to_ignore.46+0x1c4>
callq  5470 <png_error@plt>
mov    0x12c(%rdi),%eax
and    $0x8000,%eax
test   %eax,%eax
je     23417 <check_location+0x47>
xor    %esi,%esi
jmp    233df <check_location+0xf>
lea    -0x1(%rsi),%eax
and    %eax,%esi
mov    %rsi,%rax
neg    %eax
and    %esi,%eax
cmp    %esi,%eax
jne    23402 <check_location+0x32>
mov    %rsi,%rax
leaveq 
retq   
lea    0xbfcf(%rip),%rsi        # 2f3ed <chunks_to_ignore.46+0x190>
mov    %rdi,%rax
mov    %r15,-0x8(%rbp)
mov    %rdi,%r15
mov    %rax,%rdi
callq  b100 <png_app_warning>
movzbl 0x12c(%r15),%eax
and    $0xb,%al
movzbl %al,%esi
mov    %r15,%rdi
mov    -0x8(%rbp),%r15
jmp    233df <check_location+0xf>
nopw   %cs:0x0(%rax,%rax,1)

0000000000023450 <add_one_chunk>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    %rcx,-0x30(%rbp)
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rsi,%rbx
mov    %rdi,%r12
mov    %rdx,%r13
mov    $0x4,%r14d
xor    %r15d,%r15d
jmp    2349e <add_one_chunk+0x4e>
mov    %r12,%rdi
mov    %r13,%rsi
mov    %r14,%rdx
callq  53d0 <memcmp@plt>
test   %eax,%eax
je     234c5 <add_one_chunk+0x75>
add    $0x5,%r12
add    $0x1,%r15d
cmp    %ebx,%r15d
jb     23484 <add_one_chunk+0x34>
mov    -0x30(%rbp),%r15
test   %r15d,%r15d
jne    234e7 <add_one_chunk+0x97>
mov    %rbx,%rax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
mov    -0x30(%rbp),%rax
mov    %al,0x4(%r12)
mov    %rbx,%rax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
mov    %r14,%rdx
mov    %r13,%rsi
mov    %r12,%rdi
callq  54c0 <memcpy@plt>
mov    %r15b,0x4(%r12)
lea    0x1(%rbx),%eax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)
nopl   (%rax)

0000000000023520 <png_set_bgr>:
push   %rbp
mov    %rsp,%rbp
test   %rdi,%rdi
jne    2352b <png_set_bgr+0xb>
leaveq 
retq   
mov    0x134(%rdi),%eax
or     $0x1,%eax
mov    %eax,0x134(%rdi)
leaveq 
retq   
nopl   0x0(%rax)

0000000000023540 <png_set_swap_alpha>:
push   %rbp
mov    %rsp,%rbp
test   %rdi,%rdi
jne    2354b <png_set_swap_alpha+0xb>
leaveq 
retq   
mov    0x134(%rdi),%eax
or     $0x20000,%eax
mov    %eax,0x134(%rdi)
leaveq 
retq   
xchg   %ax,%ax

0000000000023560 <png_set_invert_alpha>:
push   %rbp
mov    %rsp,%rbp
test   %rdi,%rdi
jne    2356b <png_set_invert_alpha+0xb>
leaveq 
retq   
mov    0x134(%rdi),%eax
or     $0x80000,%eax
mov    %eax,0x134(%rdi)
leaveq 
retq   
xchg   %ax,%ax

0000000000023580 <png_set_filler>:
push   %rbp
mov    %rsp,%rbp
test   %rdi,%rdi
jne    2358b <png_set_filler+0xb>
leaveq 
retq   
mov    0x12c(%rdi),%eax
and    $0x8000,%eax
test   %eax,%eax
jne    235b7 <png_set_filler+0x37>
movzbl 0x267(%rdi),%eax
test   %al,%al
je     235e7 <png_set_filler+0x67>
cmp    $0x2,%al
je     23600 <png_set_filler+0x80>
lea    0xc1d4(%rip),%rsi        # 2f784 <fourbppswaptable+0x138>
callq  b120 <png_app_error>
leaveq 
retq   
mov    %si,0x272(%rdi)
mov    0x134(%rdi),%eax
or     $0x8000,%eax
mov    %eax,0x134(%rdi)
cmp    $0x1,%edx
je     23609 <png_set_filler+0x89>
mov    0x130(%rdi),%eax
and    $0xffffff7f,%eax
mov    %eax,0x130(%rdi)
leaveq 
retq   
movzbl 0x268(%rdi),%eax
cmp    $0x7,%al
ja     2361c <png_set_filler+0x9c>
lea    0xc153(%rip),%rsi        # 2f74c <fourbppswaptable+0x100>
callq  b120 <png_app_error>
leaveq 
retq   
movb   $0x4,0x26c(%rdi)
jmp    235be <png_set_filler+0x3e>
mov    0x130(%rdi),%eax
or     $0x80,%eax
mov    %eax,0x130(%rdi)
leaveq 
retq   
movb   $0x2,0x26c(%rdi)
jmp    235be <png_set_filler+0x3e>
data16 nopw %cs:0x0(%rax,%rax,1)

0000000000023630 <png_set_add_alpha>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
test   %rdi,%rdi
jne    2363f <png_set_add_alpha+0xf>
leaveq 
retq   
mov    %rdi,%rax
mov    %r15,-0x8(%rbp)
mov    %rdi,%r15
mov    %rax,%rdi
callq  5200 <png_set_filler@plt>
mov    0x134(%r15),%eax
mov    %rax,%rcx
and    $0x8000,%ecx
test   %ecx,%ecx
jne    2366b <png_set_add_alpha+0x3b>
mov    -0x8(%rbp),%r15
leaveq 
retq   
or     $0x1000000,%eax
mov    %eax,0x134(%r15)
mov    -0x8(%rbp),%r15
leaveq 
retq   
nopl   (%rax)

0000000000023680 <png_set_swap>:
push   %rbp
mov    %rsp,%rbp
test   %rdi,%rdi
jne    2368b <png_set_swap+0xb>
leaveq 
retq   
movzbl 0x268(%rdi),%eax
cmp    $0x10,%al
je     23698 <png_set_swap+0x18>
leaveq 
retq   
mov    0x134(%rdi),%eax
or     $0x10,%eax
mov    %eax,0x134(%rdi)
leaveq 
retq   
nopl   0x0(%rax)

00000000000236b0 <png_set_packing>:
push   %rbp
mov    %rsp,%rbp
test   %rdi,%rdi
jne    236bb <png_set_packing+0xb>
leaveq 
retq   
movzbl 0x268(%rdi),%eax
cmp    $0x7,%al
jbe    236c8 <png_set_packing+0x18>
leaveq 
retq   
mov    0x134(%rdi),%eax
or     $0x4,%eax
mov    %eax,0x134(%rdi)
movb   $0x8,0x269(%rdi)
leaveq 
retq   

00000000000236e0 <png_set_packswap>:
push   %rbp
mov    %rsp,%rbp
test   %rdi,%rdi
jne    236eb <png_set_packswap+0xb>
leaveq 
retq   
movzbl 0x268(%rdi),%eax
cmp    $0x7,%al
jbe    236f8 <png_set_packswap+0x18>
leaveq 
retq   
mov    0x134(%rdi),%eax
or     $0x10000,%eax
mov    %eax,0x134(%rdi)
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

0000000000023710 <png_set_shift>:
push   %rbp
mov    %rsp,%rbp
test   %rdi,%rdi
jne    2371b <png_set_shift+0xb>
leaveq 
retq   
mov    0x134(%rdi),%eax
or     $0x8,%eax
mov    %eax,0x134(%rdi)
mov    (%rsi),%eax
mov    %eax,0x2dd(%rdi)
movzbl 0x4(%rsi),%eax
mov    %al,0x2e1(%rdi)
leaveq 
retq   
xchg   %ax,%ax

0000000000023740 <png_set_interlace_handling>:
push   %rbp
mov    %rsp,%rbp
mov    $0x1,%eax
test   %rdi,%rdi
jne    23750 <png_set_interlace_handling+0x10>
leaveq 
retq   
movzbl 0x264(%rdi),%ecx
test   %cl,%cl
jne    2375d <png_set_interlace_handling+0x1d>
leaveq 
retq   
mov    0x134(%rdi),%eax
or     $0x2,%eax
mov    %eax,0x134(%rdi)
mov    $0x7,%eax
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

0000000000023780 <png_set_invert_mono>:
push   %rbp
mov    %rsp,%rbp
test   %rdi,%rdi
jne    2378b <png_set_invert_mono+0xb>
leaveq 
retq   
mov    0x134(%rdi),%eax
or     $0x20,%eax
mov    %eax,0x134(%rdi)
leaveq 
retq   
nopl   0x0(%rax)

00000000000237a0 <png_set_user_transform_info>:
push   %rbp
mov    %rsp,%rbp
test   %rdi,%rdi
jne    237ab <png_set_user_transform_info+0xb>
leaveq 
retq   
mov    0x12c(%rdi),%eax
and    $0x8000,%eax
test   %eax,%eax
jne    237cf <png_set_user_transform_info+0x2f>
mov    %rsi,0x120(%rdi)
mov    %dl,0x128(%rdi)
mov    %cl,0x129(%rdi)
leaveq 
retq   
mov    0x130(%rdi),%eax
and    $0x40,%eax
test   %eax,%eax
je     237ba <png_set_user_transform_info+0x1a>
lea    0xbfca(%rip),%rsi        # 2f7ad <fourbppswaptable+0x161>
callq  b120 <png_app_error>
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

00000000000237f0 <png_get_user_transform_ptr>:
push   %rbp
mov    %rsp,%rbp
test   %rdi,%rdi
jne    237fd <png_get_user_transform_ptr+0xd>
xor    %eax,%eax
leaveq 
retq   
mov    0x120(%rdi),%rax
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)

0000000000023810 <png_get_current_row_number>:
push   %rbp
mov    %rsp,%rbp
test   %rdi,%rdi
jne    23820 <png_get_current_row_number+0x10>
mov    $0xffffffff,%eax
leaveq 
retq   
mov    0x214(%rdi),%eax
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

0000000000023830 <png_get_current_pass_number>:
push   %rbp
mov    %rsp,%rbp
test   %rdi,%rdi
jne    23840 <png_get_current_pass_number+0x10>
mov    $0x8,%eax
leaveq 
retq   
movzbl 0x265(%rdi),%eax
leaveq 
retq   
nopl   0x0(%rax)

0000000000023850 <png_do_strip_channel>:
push   %rbp
mov    %rsp,%rbp
mov    %rsi,%r8
add    0x8(%rdi),%r8
movzbl 0x12(%rdi),%eax
cmp    $0x2,%al
je     23869 <png_do_strip_channel+0x19>
cmp    $0x4,%al
je     23877 <png_do_strip_channel+0x27>
leaveq 
retq   
movzbl 0x11(%rdi),%eax
cmp    $0x8,%al
je     23885 <png_do_strip_channel+0x35>
cmp    $0x10,%al
je     23893 <png_do_strip_channel+0x43>
leaveq 
retq   
movzbl 0x11(%rdi),%eax
cmp    $0x8,%al
je     238a4 <png_do_strip_channel+0x54>
cmp    $0x10,%al
je     238b9 <png_do_strip_channel+0x69>
leaveq 
retq   
test   %edx,%edx
jne    238ce <png_do_strip_channel+0x7e>
lea    0x2(%rsi),%rcx
lea    0x1(%rsi),%rax
jmp    238e4 <png_do_strip_channel+0x94>
test   %edx,%edx
jne    23907 <png_do_strip_channel+0xb7>
lea    0x4(%rsi),%rcx
lea    0x2(%rsi),%rax
jmpq   23924 <png_do_strip_channel+0xd4>
test   %edx,%edx
jne    2392f <png_do_strip_channel+0xdf>
lea    0x4(%rsi),%rcx
lea    0x3(%rsi),%rax
jmpq   23953 <png_do_strip_channel+0x103>
test   %edx,%edx
jne    2396f <png_do_strip_channel+0x11f>
lea    0x8(%rsi),%rcx
lea    0x6(%rsi),%rax
jmpq   239a8 <png_do_strip_channel+0x158>
lea    0x1(%rsi),%rcx
mov    %rsi,%rax
jmp    238e4 <png_do_strip_channel+0x94>
movzbl (%rcx),%edx
mov    %dl,(%rax)
add    $0x2,%rcx
add    $0x1,%rax
cmp    %rcx,%r8
ja     238d7 <png_do_strip_channel+0x87>
movb   $0x8,0x13(%rdi)
movb   $0x1,0x12(%rdi)
movzbl 0x10(%rdi),%ecx
cmp    $0x4,%cl
jne    238fe <png_do_strip_channel+0xae>
movb   $0x0,0x10(%rdi)
sub    %rsi,%rax
mov    %rax,0x8(%rdi)
leaveq 
retq   
lea    0x2(%rsi),%rcx
mov    %rsi,%rax
jmp    23924 <png_do_strip_channel+0xd4>
movzbl (%rcx),%edx
mov    %dl,(%rax)
movzbl 0x1(%rcx),%edx
mov    %dl,0x1(%rax)
add    $0x4,%rcx
add    $0x2,%rax
cmp    %rcx,%r8
ja     23910 <png_do_strip_channel+0xc0>
movb   $0x10,0x13(%rdi)
jmp    238ed <png_do_strip_channel+0x9d>
lea    0x1(%rsi),%rcx
mov    %rsi,%rax
jmp    23953 <png_do_strip_channel+0x103>
movzbl (%rcx),%edx
mov    %dl,(%rax)
movzbl 0x1(%rcx),%edx
mov    %dl,0x1(%rax)
movzbl 0x2(%rcx),%edx
mov    %dl,0x2(%rax)
add    $0x4,%rcx
add    $0x3,%rax
cmp    %rcx,%r8
ja     23938 <png_do_strip_channel+0xe8>
movb   $0x18,0x13(%rdi)
movb   $0x3,0x12(%rdi)
movzbl 0x10(%rdi),%ecx
cmp    $0x6,%cl
jne    238fe <png_do_strip_channel+0xae>
movb   $0x2,0x10(%rdi)
jmp    238fe <png_do_strip_channel+0xae>
lea    0x2(%rsi),%rcx
mov    %rsi,%rax
jmp    239a8 <png_do_strip_channel+0x158>
movzbl (%rcx),%edx
mov    %dl,(%rax)
movzbl 0x1(%rcx),%edx
mov    %dl,0x1(%rax)
movzbl 0x2(%rcx),%edx
mov    %dl,0x2(%rax)
movzbl 0x3(%rcx),%edx
mov    %dl,0x3(%rax)
movzbl 0x4(%rcx),%edx
mov    %dl,0x4(%rax)
movzbl 0x5(%rcx),%edx
mov    %dl,0x5(%rax)
add    $0x8,%rcx
add    $0x6,%rax
cmp    %r8,%rcx
jb     23978 <png_do_strip_channel+0x128>
movb   $0x30,0x13(%rdi)
jmp    2395c <png_do_strip_channel+0x10c>
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

00000000000239c0 <png_do_swap>:
push   %rbp
mov    %rsp,%rbp
movzbl 0x11(%rdi),%eax
cmp    $0x10,%al
je     239ce <png_do_swap+0xe>
leaveq 
retq   
movzbl 0x12(%rdi),%ecx
imul   (%rdi),%ecx
xor    %eax,%eax
jmp    239ed <png_do_swap+0x2d>
movzbl 0x1(%rsi),%edx
movzbl (%rsi),%edi
mov    %dl,(%rsi)
mov    %dil,0x1(%rsi)
add    $0x1,%eax
add    $0x2,%rsi
cmp    %ecx,%eax
jb     239d9 <png_do_swap+0x19>
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

0000000000023a00 <png_do_packswap>:
push   %rbp
mov    %rsp,%rbp
movzbl 0x11(%rdi),%eax
cmp    $0x7,%al
jbe    23a0e <png_do_packswap+0xe>
leaveq 
retq   
mov    %rsi,%rdx
add    0x8(%rdi),%rdx
cmp    $0x1,%al
jne    23a22 <png_do_packswap+0x22>
lea    0xba2c(%rip),%rax        # 2f44c <onebppswaptable>
jmp    23a3c <png_do_packswap+0x3c>
cmp    $0x2,%al
jne    23a43 <png_do_packswap+0x43>
lea    0xbb1f(%rip),%rax        # 2f54c <twobppswaptable>
jmp    23a3c <png_do_packswap+0x3c>
movzbl (%rsi),%ecx
movzbl (%rax,%rcx,1),%ecx
mov    %cl,(%rsi)
add    $0x1,%rsi
cmp    %rdx,%rsi
jb     23a2f <png_do_packswap+0x2f>
leaveq 
retq   
cmp    $0x4,%al
jne    23a50 <png_do_packswap+0x50>
lea    0xbbfe(%rip),%rax        # 2f64c <fourbppswaptable>
jmp    23a3c <png_do_packswap+0x3c>
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   (%rax)

0000000000023a60 <png_do_invert>:
push   %rbp
mov    %rsp,%rbp
xor    %eax,%eax
movzbl 0x10(%rdi),%ecx
test   %cl,%cl
je     23a7e <png_do_invert+0x1e>
cmp    $0x4,%cl
je     23a84 <png_do_invert+0x24>
movzbl 0x10(%rdi),%ecx
cmp    $0x4,%cl
je     23a93 <png_do_invert+0x33>
leaveq 
retq   
mov    0x8(%rdi),%rdx
jmp    23aad <png_do_invert+0x4d>
movzbl 0x11(%rdi),%ecx
cmp    $0x8,%cl
jne    23a73 <png_do_invert+0x13>
mov    0x8(%rdi),%rdx
jmp    23ac3 <png_do_invert+0x63>
movzbl 0x11(%rdi),%ecx
cmp    $0x10,%cl
je     23aca <png_do_invert+0x6a>
leaveq 
retq   
movzbl (%rsi),%ecx
not    %ecx
mov    %cl,(%rsi)
add    $0x1,%rax
add    $0x1,%rsi
cmp    %rdx,%rax
jb     23a9e <png_do_invert+0x3e>
leaveq 
retq   
movzbl (%rsi),%ecx
not    %ecx
mov    %cl,(%rsi)
add    $0x2,%rax
add    $0x2,%rsi
cmp    %rdx,%rax
jb     23ab4 <png_do_invert+0x54>
leaveq 
retq   
mov    0x8(%rdi),%rdx
jmp    23ae8 <png_do_invert+0x88>
movzbl (%rsi),%ecx
not    %ecx
mov    %cl,(%rsi)
movzbl 0x1(%rsi),%ecx
not    %ecx
mov    %cl,0x1(%rsi)
add    $0x4,%rax
add    $0x4,%rsi
cmp    %rdx,%rax
jb     23ad0 <png_do_invert+0x70>
leaveq 
retq   
nop

0000000000023af0 <png_do_bgr>:
push   %rbp
mov    %rsp,%rbp
movzbl 0x10(%rdi),%ecx
mov    %rcx,%rax
and    $0x2,%eax
test   %eax,%eax
jg     23b04 <png_do_bgr+0x14>
leaveq 
retq   
mov    (%rdi),%r8d
xor    %eax,%eax
movzbl 0x11(%rdi),%edx
cmp    $0x8,%dl
je     23b19 <png_do_bgr+0x29>
cmp    $0x10,%dl
je     23b25 <png_do_bgr+0x35>
leaveq 
retq   
cmp    $0x2,%cl
je     23b44 <png_do_bgr+0x54>
cmp    $0x6,%cl
je     23b5e <png_do_bgr+0x6e>
leaveq 
retq   
cmp    $0x2,%cl
je     23b86 <png_do_bgr+0x96>
cmp    $0x6,%cl
je     23bae <png_do_bgr+0xbe>
leaveq 
retq   
movzbl 0x2(%rsi),%edx
movzbl (%rsi),%ecx
mov    %dl,(%rsi)
mov    %cl,0x2(%rsi)
add    $0x1,%eax
add    $0x3,%rsi
cmp    %r8d,%eax
jb     23b31 <png_do_bgr+0x41>
leaveq 
retq   
movzbl 0x2(%rsi),%edx
movzbl (%rsi),%ecx
mov    %dl,(%rsi)
mov    %cl,0x2(%rsi)
add    $0x1,%eax
add    $0x4,%rsi
cmp    %eax,%r8d
ja     23b4b <png_do_bgr+0x5b>
leaveq 
retq   
movzbl 0x4(%rsi),%edx
movzbl (%rsi),%ecx
mov    %dl,(%rsi)
mov    %cl,0x4(%rsi)
movzbl 0x5(%rsi),%ecx
movzbl 0x1(%rsi),%edx
mov    %cl,0x1(%rsi)
mov    %dl,0x5(%rsi)
add    $0x1,%eax
add    $0x6,%rsi
cmp    %eax,%r8d
ja     23b65 <png_do_bgr+0x75>
leaveq 
retq   
movzbl 0x4(%rsi),%edx
movzbl (%rsi),%ecx
mov    %dl,(%rsi)
mov    %cl,0x4(%rsi)
movzbl 0x5(%rsi),%edx
movzbl 0x1(%rsi),%ecx
mov    %dl,0x1(%rsi)
mov    %cl,0x5(%rsi)
add    $0x1,%eax
add    $0x8,%rsi
cmp    %eax,%r8d
ja     23b8d <png_do_bgr+0x9d>
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)

0000000000023bc0 <png_do_check_palette_indexes>:
push   %rbp
mov    %rsp,%rbp
mov    $0x1,%eax
movzbl 0x11(%rsi),%ecx
shl    %cl,%eax
movzwl 0x258(%rdi),%ecx
cmp    %ecx,%eax
jg     23bdc <png_do_check_palette_indexes+0x1c>
leaveq 
retq   
test   %cx,%cx
jne    23be3 <png_do_check_palette_indexes+0x23>
leaveq 
retq   
movzbl 0x13(%rsi),%eax
mov    (%rsi),%ecx
and    $0x7,%ecx
imul   %ecx,%eax
and    $0x7,%eax
mov    $0x8,%ecx
sub    %eax,%ecx
and    $0x7,%ecx
mov    0x8(%rsi),%rdx
mov    0x228(%rdi),%rax
lea    -0x1(%rdx,%rax,1),%rax
xor    %edx,%edx
movzbl 0x11(%rsi),%esi
cmp    $0x3,%sil
jbe    23c26 <png_do_check_palette_indexes+0x66>
cmp    $0x4,%sil
je     23c73 <png_do_check_palette_indexes+0xb3>
cmp    $0x8,%sil
je     23c99 <png_do_check_palette_indexes+0xd9>
leaveq 
retq   
cmp    $0x1,%sil
je     23cc1 <png_do_check_palette_indexes+0x101>
cmp    $0x2,%sil
je     23d40 <png_do_check_palette_indexes+0x180>
leaveq 
retq   
movzbl (%rax),%esi
shr    %cl,%esi
and    $0xf,%esi
movslq 0x25c(%rdi),%r8
cmp    %esi,%r8d
jge    23c56 <png_do_check_palette_indexes+0x96>
mov    %esi,0x25c(%rdi)
movzbl (%rax),%esi
shr    %cl,%esi
shr    $0x4,%esi
cmp    0x25c(%rdi),%esi
jle    23c6c <png_do_check_palette_indexes+0xac>
mov    %esi,0x25c(%rdi)
add    $0xffffffffffffffff,%rax
mov    %rdx,%rcx
mov    0x228(%rdi),%rsi
cmp    %rax,%rsi
jb     23c3c <png_do_check_palette_indexes+0x7c>
leaveq 
retq   
movzbl (%rax),%ecx
movslq 0x25c(%rdi),%rdx
cmp    %ecx,%edx
jge    23c95 <png_do_check_palette_indexes+0xd5>
mov    %ecx,0x25c(%rdi)
add    $0xffffffffffffffff,%rax
mov    0x228(%rdi),%rcx
cmp    %rax,%rcx
jb     23c81 <png_do_check_palette_indexes+0xc1>
leaveq 
retq   
movzbl (%rax),%esi
shr    %cl,%esi
test   %esi,%esi
jle    23cba <png_do_check_palette_indexes+0xfa>
movl   $0x1,0x25c(%rdi)
add    $0xffffffffffffffff,%rax
mov    %rdx,%rcx
mov    0x228(%rdi),%rsi
cmp    %rax,%rsi
jb     23ca7 <png_do_check_palette_indexes+0xe7>
leaveq 
retq   
movzbl (%rax),%esi
shr    %cl,%esi
and    $0x3,%esi
movslq 0x25c(%rdi),%r8
cmp    %esi,%r8d
jge    23ce9 <png_do_check_palette_indexes+0x129>
mov    %esi,0x25c(%rdi)
movzbl (%rax),%esi
shr    %cl,%esi
and    $0xc,%esi
shr    $0x2,%esi
movslq 0x25c(%rdi),%r8
cmp    %esi,%r8d
jge    23d06 <png_do_check_palette_indexes+0x146>
mov    %esi,0x25c(%rdi)
movzbl (%rax),%esi
shr    %cl,%esi
and    $0x30,%esi
shr    $0x4,%esi
movslq 0x25c(%rdi),%r8
cmp    %esi,%r8d
jge    23d23 <png_do_check_palette_indexes+0x163>
mov    %esi,0x25c(%rdi)
movzbl (%rax),%esi
shr    %cl,%esi
shr    $0x6,%esi
cmp    0x25c(%rdi),%esi
jle    23d39 <png_do_check_palette_indexes+0x179>
mov    %esi,0x25c(%rdi)
add    $0xffffffffffffffff,%rax
mov    %rdx,%rcx
mov    0x228(%rdi),%rsi
cmp    %rax,%rsi
jb     23ccf <png_do_check_palette_indexes+0x10f>
leaveq 
retq   
xchg   %ax,%ax

0000000000023d50 <png_set_write_fn>:
push   %rbp
mov    %rsp,%rbp
test   %rdi,%rdi
jne    23d5b <png_set_write_fn+0xb>
leaveq 
retq   
mov    %rsi,0x108(%rdi)
test   %rdx,%rdx
jne    23d77 <png_set_write_fn+0x27>
lea    0x62(%rip),%rax        # 23dd0 <png_default_write_data>
mov    %rax,0xf8(%rdi)
jmp    23d7e <png_set_write_fn+0x2e>
mov    %rdx,0xf8(%rdi)
test   %rcx,%rcx
jne    23d93 <png_set_write_fn+0x43>
lea    0xa6(%rip),%rax        # 23e30 <png_default_flush>
mov    %rax,0x290(%rdi)
jmp    23d9a <png_set_write_fn+0x4a>
mov    %rcx,0x290(%rdi)
mov    0x100(%rdi),%rax
test   %rax,%rax
jne    23da8 <png_set_write_fn+0x58>
leaveq 
retq   
movq   $0x0,0x100(%rdi)
lea    0xba32(%rip),%rsi        # 2f7ec <fourbppswaptable+0x1a0>
callq  5390 <png_warning@plt>
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   0x0(%rax)

0000000000023dd0 <png_default_write_data>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
test   %rdi,%rdi
jne    23ddf <png_default_write_data+0xf>
leaveq 
retq   
mov    $0x1,%eax
mov    0x108(%rdi),%rcx
mov    %rdx,%r8
mov    %r15,-0x10(%rbp)
mov    %rdi,-0x8(%rbp)
mov    %rsi,%rdi
mov    %rax,%rsi
mov    %rdx,%r15
mov    %r8,%rdx
callq  5840 <fwrite@plt>
cmp    %r15,%rax
jne    23e12 <png_default_write_data+0x42>
mov    -0x10(%rbp),%r15
leaveq 
retq   
lea    0xba17(%rip),%rsi        # 2f830 <fourbppswaptable+0x1e4>
mov    -0x8(%rbp),%rdi
callq  5470 <png_error@plt>
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   (%rax)

0000000000023e30 <png_default_flush>:
push   %rbp
mov    %rsp,%rbp
test   %rdi,%rdi
jne    23e3b <png_default_flush+0xb>
leaveq 
retq   
mov    0x108(%rdi),%rdi
callq  55d0 <fflush@plt>
leaveq 
retq   
nopl   0x0(%rax)

0000000000023e50 <png_write_data>:
push   %rbp
mov    %rsp,%rbp
mov    0xf8(%rdi),%rax
test   %rax,%rax
jne    23e6c <png_write_data+0x1c>
lea    0xb9d5(%rip),%rsi        # 2f83c <fourbppswaptable+0x1f0>
callq  5470 <png_error@plt>
callq  *%rax
leaveq 
retq   

0000000000023e70 <png_flush>:
push   %rbp
mov    %rsp,%rbp
mov    0x290(%rdi),%rax
test   %rax,%rax
jne    23e82 <png_flush+0x12>
leaveq 
retq   
callq  *%rax
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)

0000000000023e90 <png_create_write_struct>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
movq   $0x0,(%rsp)
xor    %r8d,%r8d
mov    %r8,%r9
callq  56c0 <png_create_write_struct_2@plt>
leaveq 
retq   
nopl   (%rax)

0000000000023eb0 <png_create_write_struct_2>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    0x10(%rbp),%rax
mov    %rax,(%rsp)
callq  6b90 <png_create_png_struct>
test   %rax,%rax
jne    23ecc <png_create_write_struct_2+0x1c>
leaveq 
retq   
movl   $0x2000,0x1b8(%rax)
movl   $0x1,0x1cc(%rax)
movl   $0xffffffff,0x1bc(%rax)
movl   $0x8,0x1c8(%rax)
movl   $0xf,0x1c4(%rax)
movl   $0x8,0x1c0(%rax)
movl   $0x0,0x1e0(%rax)
movl   $0xffffffff,0x1d0(%rax)
movl   $0x8,0x1dc(%rax)
movl   $0xf,0x1d8(%rax)
movl   $0x8,0x1d4(%rax)
mov    0x130(%rax),%ecx
or     $0x200000,%ecx
mov    %ecx,0x130(%rax)
xor    %esi,%esi
mov    %rsi,%rdx
mov    %rsi,%rcx
mov    %rax,%rdi
mov    %r15,-0x8(%rbp)
mov    %rax,%r15
callq  5300 <png_set_write_fn@plt>
mov    %r15,%rax
mov    -0x8(%rbp),%r15
leaveq 
retq   
nopl   0x0(%rax)

0000000000023f70 <png_write_info_before_PLTE>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
test   %rdi,%rdi
jne    23f7f <png_write_info_before_PLTE+0xf>
leaveq 
retq   
test   %rsi,%rsi
jne    23f86 <png_write_info_before_PLTE+0x16>
leaveq 
retq   
mov    0x12c(%rdi),%eax
and    $0x400,%eax
test   %eax,%eax
je     23f97 <png_write_info_before_PLTE+0x27>
leaveq 
retq   
mov    %rdi,%rax
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rdi,%r14
mov    %rax,%rdi
mov    %rsi,%r15
callq  5140 <png_write_sig@plt>
mov    0x12c(%r14),%eax
and    $0x1000,%eax
test   %eax,%eax
jne    24097 <png_write_info_before_PLTE+0x127>
sub    $0x10,%rsp
movzbl 0x27(%r15),%edi
movzbl 0x28(%r15),%eax
mov    (%r15),%esi
mov    0x4(%r15),%edx
movzbl 0x24(%r15),%ecx
movzbl 0x25(%r15),%r8d
movzbl 0x26(%r15),%r9d
mov    %edi,(%rsp)
mov    %eax,0x8(%rsp)
mov    %r14,%rdi
callq  277f0 <png_write_IHDR>
add    $0x10,%rsp
movzwl 0x7e(%r15),%eax
mov    %rax,%rcx
and    $0x8000,%ecx
test   %ecx,%ecx
je     240c5 <png_write_info_before_PLTE+0x155>
movzwl 0x7e(%r15),%eax
and    $0x8000,%eax
test   %eax,%eax
je     240f0 <png_write_info_before_PLTE+0x180>
movzwl 0x7e(%r15),%eax
and    $0x8000,%eax
test   %eax,%eax
je     24138 <png_write_info_before_PLTE+0x1c8>
mov    0x8(%r15),%eax
and    $0x2,%eax
test   %eax,%eax
je     24054 <png_write_info_before_PLTE+0xe4>
lea    0xb0(%r15),%rsi
movzbl 0x25(%r15),%edx
mov    %r14,%rdi
callq  281a0 <png_write_sBIT>
movzwl 0x7e(%r15),%eax
mov    %rax,%rcx
and    $0x8000,%ecx
test   %ecx,%ecx
je     2415b <png_write_info_before_PLTE+0x1eb>
mov    %r15,%rsi
mov    $0x1,%edx
mov    %r14,%rdi
callq  25870 <write_unknown_chunks>
mov    0x12c(%r14),%eax
or     $0x400,%eax
mov    %eax,0x12c(%r14)
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
mov    0x3d8(%r14),%eax
test   %eax,%eax
je     23fc4 <png_write_info_before_PLTE+0x54>
lea    0xb7e7(%rip),%rsi        # 2f894 <fourbppswaptable+0x248>
mov    %r14,%rdi
callq  5390 <png_warning@plt>
movl   $0x0,0x3d8(%r14)
jmpq   23fc4 <png_write_info_before_PLTE+0x54>
and    $0x8,%eax
test   %eax,%eax
jle    24011 <png_write_info_before_PLTE+0xa1>
mov    0x8(%r15),%eax
and    $0x1,%eax
test   %eax,%eax
je     24011 <png_write_info_before_PLTE+0xa1>
movslq 0x34(%r15),%rsi
mov    %r14,%rdi
callq  28160 <png_write_gAMA_fixed>
jmpq   24011 <png_write_info_before_PLTE+0xa1>
mov    0x8(%r15),%eax
mov    %rax,%rcx
and    $0x1000,%ecx
test   %ecx,%ecx
je     24023 <png_write_info_before_PLTE+0xb3>
and    $0x800,%eax
test   %eax,%eax
je     2411d <png_write_info_before_PLTE+0x1ad>
lea    0xb7b0(%rip),%rsi        # 2f8c5 <fourbppswaptable+0x279>
mov    %r14,%rdi
callq  b100 <png_app_warning>
mov    0x80(%r15),%rsi
mov    0x88(%r15),%rdx
mov    %r14,%rdi
callq  28410 <png_write_iCCP>
jmpq   24035 <png_write_info_before_PLTE+0xc5>
mov    0x8(%r15),%eax
and    $0x800,%eax
test   %eax,%eax
je     24035 <png_write_info_before_PLTE+0xc5>
movzwl 0x7c(%r15),%esi
mov    %r14,%rdi
callq  28330 <png_write_sRGB>
jmpq   24035 <png_write_info_before_PLTE+0xc5>
and    $0x10,%eax
test   %eax,%eax
jle    2406a <png_write_info_before_PLTE+0xfa>
mov    0x8(%r15),%eax
and    $0x4,%eax
test   %eax,%eax
je     2406a <png_write_info_before_PLTE+0xfa>
lea    0x38(%r15),%rsi
mov    %r14,%rdi
callq  28290 <png_write_cHRM_fixed>
jmpq   2406a <png_write_info_before_PLTE+0xfa>
nopw   %cs:0x0(%rax,%rax,1)

0000000000024190 <png_write_info>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    %r13,-0x18(%rbp)
test   %rdi,%rdi
jne    241a3 <png_write_info+0x13>
leaveq 
retq   
test   %rsi,%rsi
jne    241aa <png_write_info+0x1a>
leaveq 
retq   
mov    %rdi,%rax
mov    %rsi,%rcx
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %r12,%r14
mov    %rsi,%r12
mov    %rcx,%rsi
mov    %rbx,%r15
mov    %rdi,%rbx
mov    %rax,%rdi
callq  5450 <png_write_info_before_PLTE@plt>
mov    0x8(%r12),%eax
and    $0x8,%eax
test   %eax,%eax
jne    241f4 <png_write_info+0x64>
movzbl 0x25(%r12),%eax
cmp    $0x3,%al
jne    24207 <png_write_info+0x77>
mov    %rbx,%rdi
lea    0xb704(%rip),%rsi        # 2f8f3 <fourbppswaptable+0x2a7>
callq  5470 <png_error@plt>
mov    0x18(%r12),%rsi
movzwl 0x20(%r12),%edx
mov    %rbx,%rdi
callq  27c30 <png_write_PLTE>
xor    %r13d,%r13d
mov    0x8(%r12),%eax
and    $0x10,%eax
test   %eax,%eax
je     2424d <png_write_info+0xbd>
mov    0x134(%rbx),%eax
and    $0x80000,%eax
test   %eax,%eax
jne    243ef <png_write_info+0x25f>
mov    0xb8(%r12),%rsi
lea    0xc0(%r12),%rdx
movzwl 0x22(%r12),%ecx
movzbl 0x25(%r12),%r8d
mov    %rbx,%rdi
callq  28700 <png_write_tRNS>
mov    0x8(%r12),%eax
and    $0x20,%eax
test   %eax,%eax
je     2426f <png_write_info+0xdf>
lea    0xca(%r12),%rsi
movzbl 0x25(%r12),%edx
mov    %rbx,%rdi
callq  28860 <png_write_bKGD>
mov    0x8(%r12),%eax
and    $0x10000,%eax
test   %eax,%eax
je     24295 <png_write_info+0x105>
mov    0xf0(%r12),%rsi
movslq 0xec(%r12),%rdx
mov    %rbx,%rdi
callq  28390 <png_write_eXIf>
mov    0x8(%r12),%eax
and    $0x40,%eax
test   %eax,%eax
je     242b7 <png_write_info+0x127>
mov    0x100(%r12),%rsi
movzwl 0x20(%r12),%edx
mov    %rbx,%rdi
callq  289d0 <png_write_hIST>
mov    0x8(%r12),%eax
and    $0x100,%eax
test   %eax,%eax
je     242e6 <png_write_info+0x156>
movslq 0xd4(%r12),%rsi
movslq 0xd8(%r12),%rdx
movzbl 0xdc(%r12),%ecx
mov    %rbx,%rdi
callq  28f30 <png_write_oFFs>
mov    0x8(%r12),%eax
and    $0x400,%eax
test   %eax,%eax
je     24347 <png_write_info+0x1b7>
sub    $0x10,%rsp
mov    0x118(%r12),%rdi
mov    0x120(%r12),%rax
mov    0x108(%r12),%rsi
movslq 0x110(%r12),%rdx
movslq 0x114(%r12),%rcx
movzbl 0x128(%r12),%r8d
movzbl 0x129(%r12),%r9d
mov    %rdi,(%rsp)
mov    %rax,0x8(%rsp)
mov    %rbx,%rdi
callq  28fc0 <png_write_pCAL>
add    $0x10,%rsp
mov    0x8(%r12),%eax
and    $0x4000,%eax
test   %eax,%eax
je     24376 <png_write_info+0x1e6>
movzbl 0x14c(%r12),%esi
mov    0x150(%r12),%rdx
mov    0x158(%r12),%rcx
mov    %rbx,%rdi
callq  29310 <png_write_sCAL_s>
mov    0x8(%r12),%eax
and    $0x80,%eax
test   %eax,%eax
je     243a5 <png_write_info+0x215>
mov    0xe0(%r12),%esi
mov    0xe4(%r12),%edx
movzbl 0xe8(%r12),%ecx
mov    %rbx,%rdi
callq  291d0 <png_write_pHYs>
mov    0x8(%r12),%eax
and    $0x200,%eax
test   %eax,%eax
je     243d4 <png_write_info+0x244>
lea    0xa8(%r12),%rsi
mov    %rbx,%rdi
callq  29260 <png_write_tIME>
mov    0x12c(%rbx),%eax
or     $0x200,%eax
mov    %eax,0x12c(%rbx)
mov    0x8(%r12),%eax
and    $0x2000,%eax
test   %eax,%eax
jne    24436 <png_write_info+0x2a6>
mov    %r15,-0x8(%rbp)
mov    %r14,-0x10(%rbp)
mov    %r13,%r14
jmp    2445e <png_write_info+0x2ce>
movzbl 0x25(%r12),%eax
cmp    $0x3,%al
jne    24229 <png_write_info+0x99>
movzwl 0x22(%r12),%esi
cmp    $0x100,%si
jbe    24491 <png_write_info+0x301>
mov    $0x100,%esi
mov    %r13,%rcx
jmpq   244ab <png_write_info+0x31b>
movslq %r13d,%rsi
shl    $0x5,%rsi
add    0x140(%r12),%rsi
mov    %rbx,%rdi
callq  28580 <png_write_sPLT>
add    $0x1,%r13d
movslq 0x148(%r12),%rax
cmp    %r13d,%eax
jg     2441b <png_write_info+0x28b>
mov    %r15,-0x8(%rbp)
mov    %r14,-0x10(%rbp)
xor    %r13d,%r13d
mov    %r13,%r14
jmp    2445e <png_write_info+0x2ce>
movl   $0xfffffffd,(%r15)
add    $0x1,%r14d
movslq 0x94(%r12),%rax
cmp    %r14d,%eax
jg     244b4 <png_write_info+0x324>
mov    %r12,%rsi
mov    %rbx,%rdi
mov    $0x2,%edx
callq  25870 <write_unknown_chunks>
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x18(%rbp),%r13
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
leaveq 
retq   
mov    %r13,%rcx
jmp    244ab <png_write_info+0x31b>
movslq %ecx,%rax
add    0xb8(%r12),%rax
movzbl (%rax),%edx
not    %edx
mov    %dl,(%rax)
add    $0x1,%ecx
cmp    %ecx,%esi
jg     24496 <png_write_info+0x306>
jmpq   24229 <png_write_info+0x99>
movslq %r14d,%rcx
lea    (%rcx,%rcx,2),%rax
shl    $0x4,%rax
lea    (%rax,%rcx,8),%r15
mov    0xa0(%r12),%rax
movslq (%rax,%r15,1),%rsi
test   %esi,%esi
jg     2450a <png_write_info+0x37a>
test   %esi,%esi
je     24546 <png_write_info+0x3b6>
cmp    $0xffffffff,%esi
jne    2445a <png_write_info+0x2ca>
mov    0x8(%rax,%r15,1),%rsi
mov    0x10(%rax,%r15,1),%rdx
mov    %rbx,%rdi
mov    %r13,%rcx
callq  28a90 <png_write_tEXt>
mov    0xa0(%r12),%rax
movl   $0xfffffffd,(%rax,%r15,1)
jmpq   2445a <png_write_info+0x2ca>
mov    0x8(%rax,%r15,1),%rdx
mov    0x28(%rax,%r15,1),%rcx
mov    0x30(%rax,%r15,1),%r8
mov    0x10(%rax,%r15,1),%r9
mov    %rbx,%rdi
callq  28cd0 <png_write_iTXt>
add    0xa0(%r12),%r15
movslq (%r15),%rax
cmp    $0xffffffff,%eax
je     24453 <png_write_info+0x2c3>
movl   $0xfffffffe,(%r15)
jmpq   2445a <png_write_info+0x2ca>
mov    0x8(%rax,%r15,1),%rsi
mov    0x10(%rax,%r15,1),%rdx
movslq (%rax,%r15,1),%rcx
mov    %rbx,%rdi
callq  28b90 <png_write_zTXt>
mov    0xa0(%r12),%rax
movl   $0xfffffffe,(%rax,%r15,1)
jmpq   2445a <png_write_info+0x2ca>
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   0x0(%rax)

0000000000024580 <png_convert_from_struct_tm>:
push   %rbp
mov    %rsp,%rbp
movzwl 0x14(%rsi),%eax
add    $0x76c,%eax
mov    %ax,(%rdi)
movzbl 0x10(%rsi),%eax
add    $0x1,%eax
mov    %al,0x2(%rdi)
movzbl 0xc(%rsi),%eax
mov    %al,0x3(%rdi)
movzbl 0x8(%rsi),%eax
mov    %al,0x4(%rdi)
movzbl 0x4(%rsi),%eax
mov    %al,0x5(%rdi)
movzbl (%rsi),%eax
mov    %al,0x6(%rdi)
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

00000000000245c0 <png_convert_from_time_t>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x8(%rbp)
mov    %rsi,-0x10(%rbp)
mov    %rdi,%r15
lea    -0x10(%rbp),%rdi
callq  57c0 <gmtime@plt>
mov    %rax,%rsi
mov    %r15,%rdi
callq  51f0 <png_convert_from_struct_tm@plt>
mov    -0x8(%rbp),%r15
leaveq 
retq   
nopl   (%rax)

00000000000245f0 <png_set_flush>:
push   %rbp
mov    %rsp,%rbp
test   %rdi,%rdi
jne    245fb <png_set_flush+0xb>
leaveq 
retq   
test   %esi,%esi
jns    24601 <png_set_flush+0x11>
xor    %esi,%esi
mov    %esi,0x298(%rdi)
leaveq 
retq   
nopl   0x0(%rax)

0000000000024610 <png_write_flush>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
test   %rdi,%rdi
jne    2461f <png_write_flush+0xf>
leaveq 
retq   
mov    0x200(%rdi),%eax
cmp    0x214(%rdi),%eax
ja     2462f <png_write_flush+0x1f>
leaveq 
retq   
xor    %esi,%esi
mov    $0x2,%ecx
mov    %rsi,%rdx
mov    %rdi,%rax
mov    %r15,-0x8(%rbp)
mov    %rdi,%r15
mov    %rax,%rdi
callq  27dd0 <png_compress_IDAT>
mov    %r15,%rdi
movl   $0x0,0x29c(%rdi)
callq  23e70 <png_flush>
mov    -0x8(%rbp),%r15
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

0000000000024670 <png_write_row>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
test   %rdi,%rdi
jne    2467f <png_write_row+0xf>
leaveq 
retq   
mov    0x214(%rdi),%eax
test   %eax,%eax
je     246db <png_write_row+0x6b>
mov    %r15,%rcx
mov    %rdi,%r15
movzbl 0x264(%r15),%eax
test   %al,%al
jne    246f2 <png_write_row+0x82>
movzbl 0x267(%r15),%eax
mov    %al,-0x18(%rbp)
mov    0x204(%r15),%edi
mov    %edi,-0x28(%rbp)
movzbl 0x26c(%r15),%eax
mov    %al,-0x16(%rbp)
movzbl 0x269(%r15),%r8d
imul   %r8b
cmp    $0x7,%al
ja     2473b <png_write_row+0xcb>
movzbl %al,%edx
imul   %rdi,%rdx
add    $0x7,%rdx
shr    $0x3,%rdx
jmp    24746 <png_write_row+0xd6>
movzbl 0x265(%rdi),%eax
test   %al,%al
je     247f0 <png_write_row+0x180>
mov    %r15,%rcx
mov    %rdi,%r15
jmp    2468f <png_write_row+0x1f>
mov    0x134(%r15),%eax
and    $0x2,%eax
test   %eax,%eax
je     2469b <png_write_row+0x2b>
movzbl 0x265(%r15),%eax
cmp    $0x6,%al
ja     2469b <png_write_row+0x2b>
lea    0xb145(%rip),%rdx        # 2f858 <fourbppswaptable+0x20c>
movslq (%rdx,%rax,4),%rax
add    %rdx,%rax
jmpq   *%rax
mov    0x214(%r15),%eax
and    $0x1,%eax
test   %eax,%eax
jne    2469b <png_write_row+0x2b>
mov    %r15,%rdi
mov    %rcx,%r15
callq  293d0 <png_write_finish_row>
leaveq 
retq   
movzbl %al,%edx
shr    $0x3,%rdx
imul   %rdi,%rdx
mov    %r8b,-0x17(%rbp)
mov    %al,-0x15(%rbp)
mov    %rdx,-0x20(%rbp)
mov    0x228(%r15),%rdi
add    $0x1,%rdi
mov    %rcx,-0x10(%rbp)
callq  54c0 <memcpy@plt>
lea    -0x28(%rbp),%rsi
movzbl 0x264(%r15),%eax
test   %al,%al
jne    24906 <png_write_row+0x296>
mov    0x134(%r15),%eax
test   %eax,%eax
je     24790 <png_write_row+0x120>
mov    %r15,%rdi
callq  26d30 <png_do_write_transformations>
lea    -0x28(%rbp),%rsi
movzbl 0x26a(%r15),%eax
movzbl -0x15(%rbp),%ecx
cmp    %cl,%al
jne    24953 <png_write_row+0x2e3>
movzbl 0x26f(%r15),%eax
cmp    %al,%cl
jne    24953 <png_write_row+0x2e3>
mov    0x3d8(%r15),%eax
and    $0x4,%eax
test   %eax,%eax
jne    24962 <png_write_row+0x2f2>
movzbl -0x18(%rbp),%eax
cmp    $0x3,%al
je     24991 <png_write_row+0x321>
mov    %r15,%rdi
callq  29a60 <png_write_find_filter>
mov    0x308(%r15),%rax
test   %rax,%rax
jne    249b1 <png_write_row+0x341>
mov    -0x10(%rbp),%r15
leaveq 
retq   
mov    0x12c(%rdi),%eax
and    $0x400,%eax
test   %eax,%eax
je     249c9 <png_write_row+0x359>
mov    %rdi,%rax
mov    %r15,-0x8(%rbp)
mov    %rsi,-0x10(%rbp)
mov    %rdi,%r15
mov    %rax,%rdi
callq  29560 <png_write_start_row>
mov    -0x10(%rbp),%rsi
mov    -0x8(%rbp),%rcx
jmpq   2468f <png_write_row+0x1f>
mov    0x214(%r15),%eax
and    $0x7,%eax
test   %eax,%eax
je     2469b <png_write_row+0x2b>
mov    %r15,%rdi
mov    %rcx,%r15
callq  293d0 <png_write_finish_row>
leaveq 
retq   
mov    0x214(%r15),%eax
and    $0x7,%eax
test   %eax,%eax
jne    24863 <png_write_row+0x1f3>
mov    0x1f8(%r15),%eax
cmp    $0x4,%eax
ja     2469b <png_write_row+0x2b>
mov    %r15,%rdi
mov    %rcx,%r15
callq  293d0 <png_write_finish_row>
leaveq 
retq   
mov    0x214(%r15),%eax
and    $0x7,%eax
cmp    $0x4,%eax
je     2469b <png_write_row+0x2b>
mov    %r15,%rdi
mov    %rcx,%r15
callq  293d0 <png_write_finish_row>
leaveq 
retq   
mov    0x214(%r15),%eax
and    $0x3,%eax
test   %eax,%eax
jne    248ae <png_write_row+0x23e>
mov    0x1f8(%r15),%eax
cmp    $0x2,%eax
ja     2469b <png_write_row+0x2b>
mov    %r15,%rdi
mov    %rcx,%r15
callq  293d0 <png_write_finish_row>
leaveq 
retq   
mov    0x214(%r15),%eax
and    $0x3,%eax
cmp    $0x2,%eax
je     2469b <png_write_row+0x2b>
mov    %r15,%rdi
mov    %rcx,%r15
callq  293d0 <png_write_finish_row>
leaveq 
retq   
mov    0x214(%r15),%eax
and    $0x1,%eax
test   %eax,%eax
jne    248f9 <png_write_row+0x289>
mov    0x1f8(%r15),%eax
cmp    $0x1,%eax
ja     2469b <png_write_row+0x2b>
mov    %r15,%rdi
mov    %rcx,%r15
callq  293d0 <png_write_finish_row>
leaveq 
retq   
movzbl 0x265(%r15),%edx
cmp    $0x5,%dl
ja     24779 <png_write_row+0x109>
mov    0x134(%r15),%eax
and    $0x2,%eax
test   %eax,%eax
je     24779 <png_write_row+0x109>
mov    0x228(%r15),%rax
add    $0x1,%rax
mov    %rsi,%rdi
mov    %rax,%rsi
callq  29770 <png_do_write_interlace>
mov    -0x28(%rbp),%eax
test   %eax,%eax
je     249d5 <png_write_row+0x365>
lea    -0x28(%rbp),%rsi
jmpq   24779 <png_write_row+0x109>
mov    %r15,%rdi
lea    0xaff6(%rip),%rsi        # 2f953 <fourbppswaptable+0x307>
callq  5470 <png_error@plt>
movzbl 0x3dc(%r15),%eax
cmp    $0x40,%al
jne    247c6 <png_write_row+0x156>
mov    0x228(%r15),%rax
add    $0x1,%rax
mov    %rsi,%rdi
mov    %rax,%rsi
callq  25950 <png_do_write_intrapixel>
lea    -0x28(%rbp),%rsi
jmpq   247c6 <png_write_row+0x156>
movslq 0x25c(%r15),%rax
test   %eax,%eax
js     247d2 <png_write_row+0x162>
mov    %r15,%rdi
callq  23bc0 <png_do_check_palette_indexes>
lea    -0x28(%rbp),%rsi
jmpq   247d2 <png_write_row+0x162>
mov    %r15,%rdi
mov    0x214(%rdi),%esi
movzbl 0x265(%rdi),%edx
callq  *%rax
mov    -0x10(%rbp),%r15
leaveq 
retq   
lea    0xaf4e(%rip),%rsi        # 2f91e <fourbppswaptable+0x2d2>
callq  5470 <png_error@plt>
mov    %r15,%rdi
callq  293d0 <png_write_finish_row>
mov    -0x10(%rbp),%r15
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

00000000000249f0 <png_write_rows>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
test   %rdi,%rdi
je     24a1d <png_write_rows+0x2d>
xor    %eax,%eax
mov    %r12,-0x8(%rbp)
mov    %r13,-0x10(%rbp)
mov    %r14,-0x18(%rbp)
mov    %r15,-0x20(%rbp)
mov    %rax,%r12
mov    %rsi,%r13
mov    %rdi,%r14
mov    %rdx,%r15
jmp    24a33 <png_write_rows+0x43>
leaveq 
retq   
mov    0x0(%r13),%rsi
mov    %r14,%rdi
callq  5380 <png_write_row@plt>
add    $0x1,%r12d
add    $0x8,%r13
cmp    %r15d,%r12d
jb     24a1f <png_write_rows+0x2f>
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

0000000000024a50 <png_write_image>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    %rsi,-0x30(%rbp)
test   %rdi,%rdi
jne    24a63 <png_write_image+0x13>
leaveq 
retq   
mov    %rdi,%rax
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rbx,%r14
mov    %rsi,%rbx
mov    %r12,%r15
mov    %rdi,%r12
mov    %rax,%rdi
callq  53f0 <png_set_interlace_handling@plt>
xor    %ecx,%ecx
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %rcx,%r14
mov    %rax,%r15
mov    %r14,%r13
jmp    24ac6 <png_write_image+0x76>
mov    (%rbx),%rsi
mov    %r12,%rdi
callq  5380 <png_write_row@plt>
add    $0x8,%rbx
add    $0x1,%r14d
mov    0x1fc(%r12),%eax
cmp    %r14d,%eax
ja     24a9b <png_write_image+0x4b>
add    $0x1,%r13d
mov    -0x30(%rbp),%rbx
xor    %r14d,%r14d
cmp    %r15d,%r13d
jl     24aae <png_write_image+0x5e>
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   0x0(%rax)

0000000000024af0 <png_write_end>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
test   %rdi,%rdi
jne    24aff <png_write_end+0xf>
leaveq 
retq   
mov    0x12c(%rdi),%eax
and    $0x4,%eax
test   %eax,%eax
je     24b32 <png_write_end+0x42>
movzwl 0x258(%rdi),%eax
cmp    0x25c(%rdi),%eax
jl     24b3e <png_write_end+0x4e>
mov    %r15,%rax
mov    %r12,%r15
mov    %rsi,%r12
mov    %r14,%rcx
mov    %rbx,%r14
mov    %rdi,%rbx
mov    %r13,%r8
jmp    24b72 <png_write_end+0x82>
lea    0xae3f(%rip),%rsi        # 2f978 <fourbppswaptable+0x32c>
callq  5470 <png_error@plt>
lea    0xae4e(%rip),%rcx        # 2f993 <fourbppswaptable+0x347>
mov    %rdi,%rax
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rbx,%r14
mov    %rdi,%rbx
mov    %rax,%rdi
mov    %r12,%r15
mov    %rsi,%r12
mov    %rcx,%rsi
callq  5590 <png_benign_error@plt>
mov    %r13,%r8
mov    -0x28(%rbp),%rax
mov    -0x20(%rbp),%rcx
test   %r12,%r12
jne    24bab <png_write_end+0xbb>
mov    %r8,%r12
mov    %rcx,%r13
mov    0x12c(%rbx),%ecx
or     $0x8,%ecx
mov    %ecx,0x12c(%rbx)
mov    %rbx,%rdi
mov    %rax,%rbx
callq  28120 <png_write_IEND>
mov    %r14,%rax
mov    %r13,%r14
mov    %r12,%r13
mov    %r15,%r12
mov    %rbx,%r15
mov    %rax,%rbx
leaveq 
retq   
xor    %r13d,%r13d
mov    0x8(%r12),%edx
and    $0x200,%edx
test   %edx,%edx
jne    24bd6 <png_write_end+0xe6>
mov    %rcx,-0x20(%rbp)
mov    %rax,-0x28(%rbp)
mov    %r8,-0x18(%rbp)
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %r13,%r14
jmp    24c0e <png_write_end+0x11e>
mov    0x12c(%rbx),%edx
and    $0x200,%edx
test   %edx,%edx
je     24c6a <png_write_end+0x17a>
mov    %rcx,-0x20(%rbp)
mov    %rax,-0x28(%rbp)
mov    %r8,-0x18(%rbp)
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %r13,%r14
jmp    24c0e <png_write_end+0x11e>
movl   $0xfffffffd,(%r15)
add    $0x1,%r14d
movslq 0x94(%r12),%rax
cmp    %r14d,%eax
jg     24c96 <png_write_end+0x1a6>
mov    0x8(%r12),%eax
and    $0x10000,%eax
test   %eax,%eax
je     24c41 <png_write_end+0x151>
mov    0xf0(%r12),%rsi
movslq 0xec(%r12),%rdx
mov    %rbx,%rdi
callq  28390 <png_write_eXIf>
mov    %r12,%rsi
mov    $0x8,%edx
mov    %rbx,%rdi
callq  25870 <write_unknown_chunks>
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
mov    -0x18(%rbp),%r12
mov    -0x28(%rbp),%rax
mov    -0x20(%rbp),%r13
jmpq   24b7d <png_write_end+0x8d>
lea    0xa8(%r12),%rsi
mov    %rbx,%rdi
mov    %rcx,-0x20(%rbp)
mov    %rax,-0x28(%rbp)
mov    %r8,-0x18(%rbp)
callq  29260 <png_write_tIME>
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %r13,%r14
jmpq   24c0e <png_write_end+0x11e>
movslq %r14d,%rcx
lea    (%rcx,%rcx,2),%rax
shl    $0x4,%rax
lea    (%rax,%rcx,8),%r15
mov    0xa0(%r12),%rax
movslq (%rax,%r15,1),%rsi
test   %esi,%esi
jg     24cec <png_write_end+0x1fc>
test   %esi,%esi
jns    24d28 <png_write_end+0x238>
cmp    $0xffffffff,%esi
jne    24c0a <png_write_end+0x11a>
mov    0x8(%rax,%r15,1),%rsi
mov    0x10(%rax,%r15,1),%rdx
mov    %rbx,%rdi
mov    %r13,%rcx
callq  28a90 <png_write_tEXt>
mov    0xa0(%r12),%rax
movl   $0xfffffffd,(%rax,%r15,1)
jmpq   24c0a <png_write_end+0x11a>
mov    0x8(%rax,%r15,1),%rdx
mov    0x28(%rax,%r15,1),%rcx
mov    0x30(%rax,%r15,1),%r8
mov    0x10(%rax,%r15,1),%r9
mov    %rbx,%rdi
callq  28cd0 <png_write_iTXt>
add    0xa0(%r12),%r15
movslq (%r15),%rax
cmp    $0xffffffff,%eax
je     24c03 <png_write_end+0x113>
movl   $0xfffffffe,(%r15)
jmpq   24c0a <png_write_end+0x11a>
mov    0x8(%rax,%r15,1),%rsi
mov    0x10(%rax,%r15,1),%rdx
movslq (%rax,%r15,1),%rcx
mov    %rbx,%rdi
callq  28b90 <png_write_zTXt>
mov    0xa0(%r12),%rax
movl   $0xfffffffe,(%rax,%r15,1)
jmpq   24c0a <png_write_end+0x11a>
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

0000000000024d60 <png_destroy_write_struct>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
test   %rdi,%rdi
jne    24d6f <png_destroy_write_struct+0xf>
leaveq 
retq   
mov    (%rdi),%rcx
test   %rcx,%rcx
jne    24d79 <png_destroy_write_struct+0x19>
leaveq 
retq   
mov    %rcx,%rax
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rcx,%r14
mov    %rdi,%r15
mov    %rax,%rdi
callq  55a0 <png_destroy_info_struct@plt>
movq   $0x0,(%r15)
mov    %r14,%rdi
callq  25a40 <png_write_destroy>
mov    %r14,%rdi
callq  ca80 <png_destroy_png_struct>
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

0000000000024dc0 <png_set_filter>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
test   %rdi,%rdi
jne    24dcf <png_set_filter+0xf>
leaveq 
retq   
xor    %eax,%eax
mov    0x3d8(%rdi),%ecx
and    $0x4,%ecx
test   %ecx,%ecx
jne    24dee <png_set_filter+0x2e>
test   %esi,%esi
je     24df8 <png_set_filter+0x38>
lea    0xac2d(%rip),%rsi        # 2fa16 <fourbppswaptable+0x3ca>
callq  5470 <png_error@plt>
cmp    $0x40,%esi
jne    24dde <png_set_filter+0x1e>
mov    %rax,%rsi
jmp    24dde <png_set_filter+0x1e>
movzbl %dl,%ecx
cmp    $0x7,%ecx
ja     24e19 <png_set_filter+0x59>
lea    0xaa6d(%rip),%rsi        # 2f874 <fourbppswaptable+0x228>
movslq (%rsi,%rcx,4),%rcx
add    %rsi,%rcx
jmpq   *%rcx
movb   $0x80,0x266(%rdi)
jmp    24e1f <png_set_filter+0x5f>
mov    %dl,0x266(%rdi)
mov    0x228(%rdi),%rcx
test   %rcx,%rcx
je     25018 <png_set_filter+0x258>
mov    0x1fc(%rdi),%ecx
cmp    $0x1,%ecx
jne    24e40 <png_set_filter+0x80>
and    $0xffffff1f,%edx
mov    0x1f8(%rdi),%ecx
cmp    $0x1,%ecx
jne    24e51 <png_set_filter+0x91>
and    $0xffffff2f,%edx
mov    %rdx,%rcx
and    $0xe0,%ecx
test   %ecx,%ecx
jle    24ea0 <png_set_filter+0xe0>
mov    0x220(%rdi),%rcx
test   %rcx,%rcx
jne    24ea0 <png_set_filter+0xe0>
lea    0xab6c(%rip),%rsi        # 2f9dd <fourbppswaptable+0x391>
mov    %rdi,%rax
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rdx,%r14
mov    %rdi,%r15
mov    %rax,%rdi
callq  b100 <png_app_warning>
mov    %r14,%rdx
and    $0xffffff1f,%edx
mov    %r15,%rdi
xor    %eax,%eax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    $0x1,%ecx
mov    %rdx,%rsi
and    $0x10,%esi
test   %esi,%esi
jle    24eb7 <png_set_filter+0xf7>
mov    %rcx,%rax
mov    $0x2,%ecx
mov    %rdx,%rsi
and    $0x20,%esi
test   %esi,%esi
jle    24ec4 <png_set_filter+0x104>
mov    %rcx,%rax
mov    %rdx,%rcx
and    $0x40,%ecx
test   %ecx,%ecx
jle    24ed1 <png_set_filter+0x111>
add    $0x1,%eax
mov    %rdx,%rcx
and    $0x80,%ecx
test   %ecx,%ecx
jle    24ee1 <png_set_filter+0x121>
add    $0x1,%eax
movzbl 0x269(%rdi),%ecx
movzbl 0x26c(%rdi),%esi
imul   %esi,%ecx
cmp    $0x7,%ecx
jg     24f6e <png_set_filter+0x1ae>
movslq %ecx,%rcx
mov    0x1f8(%rdi),%esi
imul   %rsi,%rcx
add    $0x7,%rcx
shr    $0x3,%rcx
jmp    24f7f <png_set_filter+0x1bf>
lea    0xaaa8(%rip),%rsi        # 2f9bd <fourbppswaptable+0x371>
mov    %rdi,%rax
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rdi,%r14
mov    %rax,%rdi
mov    %rdx,%r15
callq  b120 <png_app_error>
mov    %r15,%rdx
mov    %r14,%rdi
xor    %eax,%eax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
movb   $0x8,0x266(%rdi)
jmpq   24e1f <png_set_filter+0x5f>
movb   $0x10,0x266(%rdi)
jmpq   24e1f <png_set_filter+0x5f>
movb   $0x20,0x266(%rdi)
jmpq   24e1f <png_set_filter+0x5f>
movb   $0x40,0x266(%rdi)
jmpq   24e1f <png_set_filter+0x5f>
movslq %ecx,%rcx
shr    $0x3,%rcx
mov    0x1f8(%rdi),%esi
imul   %rsi,%rcx
lea    0x1(%rcx),%rsi
mov    0x230(%rdi),%rcx
test   %rcx,%rcx
jne    24fd9 <png_set_filter+0x219>
mov    %rdi,%r8
mov    %rsi,%rcx
mov    %r14,-0x18(%rbp)
mov    %r15,-0x28(%rbp)
mov    %r13,-0x10(%rbp)
mov    %rsi,-0x8(%rbp)
mov    %rcx,%rsi
mov    %rdx,%r13
mov    %rax,%r14
mov    %rdi,%r15
mov    %r8,%rdi
callq  5800 <png_malloc@plt>
mov    %rax,0x230(%r15)
mov    %r14,%rax
mov    %r13,%rdx
mov    %r15,%rdi
mov    -0x8(%rbp),%rsi
mov    -0x10(%rbp),%r13
mov    -0x28(%rbp),%r15
mov    -0x18(%rbp),%r14
cmp    $0x1,%eax
jle    25018 <png_set_filter+0x258>
mov    0x238(%rdi),%rax
test   %rax,%rax
jne    25018 <png_set_filter+0x258>
mov    %rdi,%rax
mov    %r14,-0x18(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rdi,%r14
mov    %rax,%rdi
mov    %rdx,%r15
callq  5800 <png_malloc@plt>
mov    %rax,0x238(%r14)
mov    %r15,%rdx
mov    %r14,%rdi
mov    -0x28(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    %dl,0x266(%rdi)
leaveq 
retq   

0000000000025020 <png_set_filter_heuristics>:
push   %rbp
mov    %rsp,%rbp
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)

0000000000025030 <png_set_filter_heuristics_fixed>:
push   %rbp
mov    %rsp,%rbp
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)

0000000000025040 <png_set_compression_level>:
push   %rbp
mov    %rsp,%rbp
test   %rdi,%rdi
jne    2504b <png_set_compression_level+0xb>
leaveq 
retq   
mov    %esi,0x1bc(%rdi)
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

0000000000025060 <png_set_compression_mem_level>:
push   %rbp
mov    %rsp,%rbp
test   %rdi,%rdi
jne    2506b <png_set_compression_mem_level+0xb>
leaveq 
retq   
mov    %esi,0x1c8(%rdi)
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

0000000000025080 <png_set_compression_strategy>:
push   %rbp
mov    %rsp,%rbp
test   %rdi,%rdi
jne    2508b <png_set_compression_strategy+0xb>
leaveq 
retq   
mov    0x130(%rdi),%eax
or     $0x1,%eax
mov    %eax,0x130(%rdi)
mov    %esi,0x1cc(%rdi)
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   (%rax)

00000000000250b0 <png_set_compression_window_bits>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
test   %rdi,%rdi
jne    250bf <png_set_compression_window_bits+0xf>
leaveq 
retq   
cmp    $0xf,%esi
jg     250f0 <png_set_compression_window_bits+0x40>
cmp    $0x7,%esi
jg     25115 <png_set_compression_window_bits+0x65>
lea    0xa994(%rip),%rsi        # 2fa64 <fourbppswaptable+0x418>
mov    %rdi,%rax
mov    %r15,-0x8(%rbp)
mov    %rdi,%r15
mov    %rax,%rdi
callq  5390 <png_warning@plt>
mov    %r15,%rdi
mov    $0x8,%esi
mov    -0x8(%rbp),%r15
jmp    25115 <png_set_compression_window_bits+0x65>
lea    0xa93c(%rip),%rsi        # 2fa33 <fourbppswaptable+0x3e7>
mov    %rdi,%rax
mov    %r15,-0x8(%rbp)
mov    %rdi,%r15
mov    %rax,%rdi
callq  5390 <png_warning@plt>
mov    %r15,%rdi
mov    $0xf,%esi
mov    -0x8(%rbp),%r15
mov    %esi,0x1c4(%rdi)
leaveq 
retq   
nopl   (%rax)

0000000000025120 <png_set_compression_method>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
test   %rdi,%rdi
jne    2512f <png_set_compression_method+0xf>
leaveq 
retq   
cmp    $0x8,%esi
je     25165 <png_set_compression_method+0x45>
lea    0xa95a(%rip),%rcx        # 2fa95 <fourbppswaptable+0x449>
mov    %rdi,%rax
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rsi,%r14
mov    %rcx,%rsi
mov    %rdi,%r15
mov    %rax,%rdi
callq  5390 <png_warning@plt>
mov    %r14,%rsi
mov    %r15,%rdi
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
mov    %esi,0x1c0(%rdi)
leaveq 
retq   
nopl   (%rax)

0000000000025170 <png_set_text_compression_level>:
push   %rbp
mov    %rsp,%rbp
test   %rdi,%rdi
jne    2517b <png_set_text_compression_level+0xb>
leaveq 
retq   
mov    %esi,0x1d0(%rdi)
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

0000000000025190 <png_set_text_compression_mem_level>:
push   %rbp
mov    %rsp,%rbp
test   %rdi,%rdi
jne    2519b <png_set_text_compression_mem_level+0xb>
leaveq 
retq   
mov    %esi,0x1dc(%rdi)
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

00000000000251b0 <png_set_text_compression_strategy>:
push   %rbp
mov    %rsp,%rbp
test   %rdi,%rdi
jne    251bb <png_set_text_compression_strategy+0xb>
leaveq 
retq   
mov    %esi,0x1e0(%rdi)
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

00000000000251d0 <png_set_text_compression_window_bits>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
test   %rdi,%rdi
jne    251df <png_set_text_compression_window_bits+0xf>
leaveq 
retq   
cmp    $0xf,%esi
jg     25210 <png_set_text_compression_window_bits+0x40>
cmp    $0x7,%esi
jg     25235 <png_set_text_compression_window_bits+0x65>
lea    0xa874(%rip),%rsi        # 2fa64 <fourbppswaptable+0x418>
mov    %rdi,%rax
mov    %r15,-0x8(%rbp)
mov    %rdi,%r15
mov    %rax,%rdi
callq  5390 <png_warning@plt>
mov    %r15,%rdi
mov    $0x8,%esi
mov    -0x8(%rbp),%r15
jmp    25235 <png_set_text_compression_window_bits+0x65>
lea    0xa81c(%rip),%rsi        # 2fa33 <fourbppswaptable+0x3e7>
mov    %rdi,%rax
mov    %r15,-0x8(%rbp)
mov    %rdi,%r15
mov    %rax,%rdi
callq  5390 <png_warning@plt>
mov    %r15,%rdi
mov    $0xf,%esi
mov    -0x8(%rbp),%r15
mov    %esi,0x1d8(%rdi)
leaveq 
retq   
nopl   (%rax)

0000000000025240 <png_set_text_compression_method>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
test   %rdi,%rdi
jne    2524f <png_set_text_compression_method+0xf>
leaveq 
retq   
cmp    $0x8,%esi
je     25285 <png_set_text_compression_method+0x45>
lea    0xa83a(%rip),%rcx        # 2fa95 <fourbppswaptable+0x449>
mov    %rdi,%rax
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rsi,%r14
mov    %rcx,%rsi
mov    %rdi,%r15
mov    %rax,%rdi
callq  5390 <png_warning@plt>
mov    %r14,%rsi
mov    %r15,%rdi
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
mov    %esi,0x1d4(%rdi)
leaveq 
retq   
nopl   (%rax)

0000000000025290 <png_set_write_status_fn>:
push   %rbp
mov    %rsp,%rbp
test   %rdi,%rdi
jne    2529b <png_set_write_status_fn+0xb>
leaveq 
retq   
mov    %rsi,0x308(%rdi)
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nop

00000000000252b0 <png_set_write_user_transform_fn>:
push   %rbp
mov    %rsp,%rbp
test   %rdi,%rdi
jne    252bb <png_set_write_user_transform_fn+0xb>
leaveq 
retq   
mov    0x134(%rdi),%eax
or     $0x100000,%eax
mov    %eax,0x134(%rdi)
mov    %rsi,0x118(%rdi)
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)

00000000000252e0 <png_write_png>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
test   %rdi,%rdi
jne    252ef <png_write_png+0xf>
leaveq 
retq   
test   %rsi,%rsi
jne    252f6 <png_write_png+0x16>
leaveq 
retq   
mov    0x8(%rsi),%eax
and    $0x8000,%eax
test   %eax,%eax
je     253f8 <png_write_png+0x118>
mov    %rdi,%rax
mov    %rsi,%rcx
mov    %r13,-0x8(%rbp)
mov    %r14,-0x10(%rbp)
mov    %r15,-0x18(%rbp)
mov    %rdi,%r13
mov    %rax,%rdi
mov    %rsi,%r14
mov    %rcx,%rsi
mov    %rdx,%r15
callq  5340 <png_write_info@plt>
mov    %r15,%rax
and    $0x20,%eax
test   %eax,%eax
jle    2533e <png_write_png+0x5e>
mov    %r13,%rdi
callq  58e0 <png_set_invert_mono@plt>
mov    %r15,%rax
and    $0x40,%eax
test   %eax,%eax
jg     25406 <png_write_png+0x126>
mov    %r15,%rax
and    $0x4,%eax
test   %eax,%eax
jle    2535e <png_write_png+0x7e>
mov    %r13,%rdi
callq  5580 <png_set_packing@plt>
mov    %r15,%rax
and    $0x100,%eax
test   %eax,%eax
jle    25372 <png_write_png+0x92>
mov    %r13,%rdi
callq  50d0 <png_set_swap_alpha@plt>
mov    %r15,%rax
and    $0x1800,%eax
test   %eax,%eax
jg     25429 <png_write_png+0x149>
mov    %r15,%rax
and    $0x80,%eax
test   %eax,%eax
jle    25396 <png_write_png+0xb6>
mov    %r13,%rdi
callq  5860 <png_set_bgr@plt>
mov    %r15,%rax
and    $0x200,%eax
test   %eax,%eax
jle    253aa <png_write_png+0xca>
mov    %r13,%rdi
callq  51e0 <png_set_swap@plt>
mov    %r15,%rax
and    $0x8,%eax
test   %eax,%eax
jle    253bc <png_write_png+0xdc>
mov    %r13,%rdi
callq  5820 <png_set_packswap@plt>
and    $0x400,%r15d
test   %r15d,%r15d
jle    253d0 <png_write_png+0xf0>
mov    %r13,%rdi
callq  5620 <png_set_invert_alpha@plt>
mov    0x160(%r14),%rsi
mov    %r13,%rdi
callq  5570 <png_write_image@plt>
mov    %r14,%rsi
mov    %r13,%rdi
callq  53c0 <png_write_end@plt>
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
leaveq 
retq   
lea    0xa6c4(%rip),%rsi        # 2fac3 <fourbppswaptable+0x477>
callq  b120 <png_app_error>
leaveq 
retq   
mov    0x8(%r14),%eax
and    $0x2,%eax
test   %eax,%eax
je     2534c <png_write_png+0x6c>
lea    0xb0(%r14),%rsi
mov    %r13,%rdi
callq  5270 <png_set_shift@plt>
jmpq   2534c <png_write_png+0x6c>
xor    %esi,%esi
mov    %r15,%rax
and    $0x1000,%eax
test   %eax,%eax
jg     25457 <png_write_png+0x177>
mov    %r15,%rax
and    $0x800,%eax
test   %eax,%eax
jle    25382 <png_write_png+0xa2>
mov    %rsi,%rdx
mov    %r13,%rdi
callq  5200 <png_set_filler@plt>
jmpq   25382 <png_write_png+0xa2>
mov    %r15,%rax
and    $0x800,%eax
test   %eax,%eax
jle    25474 <png_write_png+0x194>
lea    0xa67e(%rip),%rsi        # 2fae8 <fourbppswaptable+0x49c>
mov    %r13,%rdi
callq  b120 <png_app_error>
xor    %esi,%esi
mov    $0x1,%edx
mov    %r13,%rdi
callq  5200 <png_set_filler@plt>
jmpq   25382 <png_write_png+0xa2>
nopw   %cs:0x0(%rax,%rax,1)

0000000000025490 <png_image_write_to_file>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
xor    %eax,%eax
test   %rdi,%rdi
jne    254a9 <png_image_write_to_file+0x19>
mov    %rax,%r10
test   %r10,%r10
jne    254cc <png_image_write_to_file+0x3c>
leaveq 
retq   
mov    $0x1,%r10d
mov    0x8(%rdi),%r11d
cmp    $0x1,%r11d
jne    254a2 <png_image_write_to_file+0x12>
test   %rsi,%rsi
jne    254da <png_image_write_to_file+0x4a>
lea    0xa65d(%rip),%rsi        # 2fb22 <fourbppswaptable+0x4d6>
callq  90e0 <png_image_error>
leaveq 
retq   
lea    0xa679(%rip),%rsi        # 2fb4c <fourbppswaptable+0x500>
callq  90e0 <png_image_error>
leaveq 
retq   
test   %rcx,%rcx
je     254be <png_image_write_to_file+0x2e>
lea    0xa639(%rip),%rax        # 2fb1f <fourbppswaptable+0x4d3>
mov    %rsi,%r10
mov    %rbx,-0x10(%rbp)
mov    %r12,-0x18(%rbp)
mov    %r13,-0x20(%rbp)
mov    %r14,-0x28(%rbp)
mov    %r15,-0x30(%rbp)
mov    %rsi,-0x8(%rbp)
mov    %rax,%rsi
mov    %rdi,%rbx
mov    %r10,%rdi
mov    %rdx,%r12
mov    %rcx,%r13
mov    %r9,%r14
mov    %r8,%r15
callq  5760 <fopen@plt>
test   %rax,%rax
jne    2554e <png_image_write_to_file+0xbe>
callq  50a0 <__errno_location@plt>
movslq (%rax),%rdi
callq  5890 <strerror@plt>
mov    %rax,%rsi
mov    %rbx,%rdi
callq  90e0 <png_image_error>
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
mov    -0x10(%rbp),%rbx
leaveq 
retq   
mov    %r13,%rcx
mov    %r12,%rdx
mov    %rax,%r12
mov    %r15,%r8
mov    %r14,%r9
mov    %rbx,%rdi
mov    %r12,%rsi
callq  5880 <png_image_write_to_stdio@plt>
test   %eax,%eax
jne    25595 <png_image_write_to_file+0x105>
mov    %r12,%rdi
callq  5240 <fclose@plt>
mov    -0x8(%rbp),%rdi
callq  50b0 <remove@plt>
xor    %eax,%eax
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
mov    -0x10(%rbp),%rbx
leaveq 
retq   
mov    %r12,%rdi
callq  55d0 <fflush@plt>
test   %eax,%eax
je     255e3 <png_image_write_to_file+0x153>
callq  50a0 <__errno_location@plt>
movslq (%rax),%r13
mov    %r12,%rdi
callq  5240 <fclose@plt>
mov    -0x8(%rbp),%rdi
callq  50b0 <remove@plt>
mov    %r13,%rdi
callq  5890 <strerror@plt>
mov    %rax,%rsi
mov    %rbx,%rdi
callq  90e0 <png_image_error>
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
mov    -0x10(%rbp),%rbx
leaveq 
retq   
mov    %r12,%rdi
callq  5130 <ferror@plt>
test   %eax,%eax
jne    255a1 <png_image_write_to_file+0x111>
mov    %r12,%rdi
callq  5240 <fclose@plt>
test   %eax,%eax
jne    25616 <png_image_write_to_file+0x186>
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
mov    -0x10(%rbp),%rbx
mov    $0x1,%eax
leaveq 
retq   
callq  50a0 <__errno_location@plt>
movslq (%rax),%r13
jmp    255b1 <png_image_write_to_file+0x121>

0000000000025620 <png_image_write_to_stdio>:
push   %rbp
mov    %rsp,%rbp
sub    $0x90,%rsp
xor    %eax,%eax
test   %rdi,%rdi
jne    2563c <png_image_write_to_stdio+0x1c>
mov    %rax,%rcx
test   %rcx,%rcx
jne    2564d <png_image_write_to_stdio+0x2d>
leaveq 
retq   
mov    0x8(%rdi),%r10d
cmp    $0x1,%r10d
je     2565b <png_image_write_to_stdio+0x3b>
mov    $0x1,%ecx
jmp    25635 <png_image_write_to_stdio+0x15>
lea    0xa558(%rip),%rsi        # 2fbac <fourbppswaptable+0x560>
callq  90e0 <png_image_error>
leaveq 
retq   
test   %rsi,%rsi
jne    2566e <png_image_write_to_stdio+0x4e>
lea    0xa51a(%rip),%rsi        # 2fb81 <fourbppswaptable+0x535>
callq  90e0 <png_image_error>
leaveq 
retq   
test   %rcx,%rcx
je     25660 <png_image_write_to_stdio+0x40>
mov    %rdi,%rax
mov    %rdi,-0x30(%rbp)
mov    %rsi,-0x28(%rbp)
mov    %rcx,-0x8(%rbp)
mov    %r8,-0x10(%rbp)
mov    %r9,-0x18(%rbp)
mov    %rdx,-0x20(%rbp)
mov    %rax,%rdi
callq  25b10 <png_image_write_init>
test   %eax,%eax
jne    2569e <png_image_write_to_stdio+0x7e>
xor    %eax,%eax
leaveq 
retq   
mov    -0x30(%rbp),%r8
mov    (%r8),%rax
mov    (%rax),%rax
mov    -0x28(%rbp),%rcx
mov    %rcx,0x108(%rax)
lea    -0x88(%rbp),%rdi
mov    $0x58,%edx
mov    %r15,-0x30(%rbp)
mov    %r8,%r15
xor    %esi,%esi
callq  5350 <memset@plt>
mov    %r15,-0x88(%rbp)
mov    -0x8(%rbp),%rax
mov    %rax,-0x80(%rbp)
mov    -0x10(%rbp),%rax
mov    %eax,-0x78(%rbp)
mov    -0x18(%rbp),%rax
mov    %rax,-0x70(%rbp)
mov    -0x20(%rbp),%rax
mov    %eax,-0x68(%rbp)
lea    0xfb7(%rip),%rsi        # 266b0 <png_image_write_main>
mov    %r15,%rdi
lea    -0x88(%rbp),%rdx
callq  b260 <png_safe_execute>
mov    %r15,%rdi
mov    %rax,%r15
callq  5040 <png_image_free@plt>
mov    %r15,%rax
mov    -0x30(%rbp),%r15
leaveq 
retq   
nopl   0x0(%rax)

0000000000025720 <png_image_write_to_memory>:
push   %rbp
mov    %rsp,%rbp
sub    $0x90,%rsp
xor    %eax,%eax
test   %rdi,%rdi
jne    2573c <png_image_write_to_memory+0x1c>
mov    %rax,%rcx
test   %rcx,%rcx
jne    2574d <png_image_write_to_memory+0x2d>
leaveq 
retq   
mov    0x8(%rdi),%r10d
cmp    $0x1,%r10d
je     2575b <png_image_write_to_memory+0x3b>
mov    $0x1,%ecx
jmp    25735 <png_image_write_to_memory+0x15>
lea    0xa4ba(%rip),%rsi        # 2fc0e <fourbppswaptable+0x5c2>
callq  90e0 <png_image_error>
leaveq 
retq   
test   %rdx,%rdx
jne    2576e <png_image_write_to_memory+0x4e>
lea    0xa47b(%rip),%rsi        # 2fbe2 <fourbppswaptable+0x596>
callq  90e0 <png_image_error>
leaveq 
retq   
test   %r8,%r8
je     25760 <png_image_write_to_memory+0x40>
test   %rsi,%rsi
jne    2577f <png_image_write_to_memory+0x5f>
movq   $0x0,(%rdx)
mov    %rdi,%rax
mov    %rdi,-0x10(%rbp)
mov    %r8,-0x18(%rbp)
mov    %r9,-0x20(%rbp)
mov    %rcx,-0x28(%rbp)
mov    %rsi,-0x30(%rbp)
mov    %rdx,-0x8(%rbp)
mov    %rax,%rdi
callq  25b10 <png_image_write_init>
test   %eax,%eax
jne    257aa <png_image_write_to_memory+0x8a>
xor    %eax,%eax
leaveq 
retq   
lea    -0x88(%rbp),%rdi
mov    $0x58,%edx
xor    %esi,%esi
callq  5350 <memset@plt>
mov    -0x10(%rbp),%rax
mov    %rax,-0x88(%rbp)
mov    -0x18(%rbp),%rcx
mov    %rcx,-0x80(%rbp)
mov    -0x20(%rbp),%rcx
mov    %ecx,-0x78(%rbp)
mov    0x10(%rbp),%rcx
mov    %rcx,-0x70(%rbp)
mov    -0x28(%rbp),%rcx
mov    %ecx,-0x68(%rbp)
mov    -0x30(%rbp),%rcx
mov    %rcx,-0x48(%rbp)
mov    -0x8(%rbp),%rcx
mov    (%rcx),%rcx
mov    %rcx,-0x40(%rbp)
movq   $0x0,-0x38(%rbp)
lea    0x14e8(%rip),%rsi        # 26cf0 <png_image_write_memory>
mov    %rax,%rdi
mov    %r15,-0x28(%rbp)
mov    %rax,%r15
lea    -0x88(%rbp),%rdx
callq  b260 <png_safe_execute>
mov    %r15,%rdi
mov    %rax,%r15
callq  5040 <png_image_free@plt>
test   %r15d,%r15d
jne    25836 <png_image_write_to_memory+0x116>
mov    -0x28(%rbp),%r15
xor    %eax,%eax
leaveq 
retq   
mov    -0x30(%rbp),%rax
test   %rax,%rax
jne    25853 <png_image_write_to_memory+0x133>
mov    %r15,%rax
mov    -0x8(%rbp),%rcx
mov    -0x38(%rbp),%rdx
mov    %rdx,(%rcx)
mov    -0x28(%rbp),%r15
leaveq 
retq   
mov    -0x8(%rbp),%rcx
mov    (%rcx),%rax
cmp    -0x38(%rbp),%rax
jb     25865 <png_image_write_to_memory+0x145>
mov    %r15,%rax
jmp    25846 <png_image_write_to_memory+0x126>
xor    %eax,%eax
jmp    25846 <png_image_write_to_memory+0x126>
nopl   0x0(%rax)

0000000000025870 <write_unknown_chunks>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
movslq 0x138(%rsi),%rax
test   %eax,%eax
jne    25885 <write_unknown_chunks+0x15>
leaveq 
retq   
mov    0x130(%rsi),%rax
lea    0xa3b2(%rip),%rcx        # 2fc45 <fourbppswaptable+0x5f9>
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rax,%rbx
mov    %rsi,%r12
mov    %rdi,%r13
mov    %rcx,%r14
mov    %rdx,%r15
jmp    2591e <write_unknown_chunks+0xae>
movzbl 0x18(%rbx),%eax
and    %r15d,%eax
test   %eax,%eax
je     2591a <write_unknown_chunks+0xaa>
mov    %r13,%rdi
mov    %rbx,%rsi
callq  5310 <png_handle_as_unknown@plt>
cmp    $0x1,%eax
je     2591a <write_unknown_chunks+0xaa>
movzbl 0x3(%rbx),%ecx
and    $0x20,%ecx
test   %ecx,%ecx
jg     258f3 <write_unknown_chunks+0x83>
cmp    $0x3,%eax
je     258f3 <write_unknown_chunks+0x83>
test   %eax,%eax
jne    2591a <write_unknown_chunks+0xaa>
movslq 0x3c0(%r13),%rax
cmp    $0x3,%eax
jne    2591a <write_unknown_chunks+0xaa>
mov    0x10(%rbx),%rax
test   %rax,%rax
jne    25907 <write_unknown_chunks+0x97>
mov    %r13,%rdi
mov    %r14,%rsi
callq  5390 <png_warning@plt>
mov    0x8(%rbx),%rdx
mov    0x10(%rbx),%rcx
mov    %r13,%rdi
mov    %rbx,%rsi
callq  5400 <png_write_chunk@plt>
add    $0x20,%rbx
movslq 0x138(%r12),%rax
shl    $0x5,%rax
add    0x130(%r12),%rax
cmp    %rbx,%rax
ja     258b8 <write_unknown_chunks+0x48>
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
nopl   (%rax)

0000000000025950 <png_do_write_intrapixel>:
push   %rbp
mov    %rsp,%rbp
movzbl 0x10(%rdi),%edx
mov    %rdx,%rax
and    $0x2,%eax
test   %eax,%eax
jg     25964 <png_do_write_intrapixel+0x14>
leaveq 
retq   
mov    (%rdi),%r9d
xor    %eax,%eax
movzbl 0x11(%rdi),%ecx
cmp    $0x8,%cl
je     25979 <png_do_write_intrapixel+0x29>
cmp    $0x10,%cl
je     25985 <png_do_write_intrapixel+0x35>
leaveq 
retq   
cmp    $0x2,%dl
jne    25994 <png_do_write_intrapixel+0x44>
mov    $0x3,%edx
jmp    259c0 <png_do_write_intrapixel+0x70>
cmp    $0x2,%dl
jne    259c7 <png_do_write_intrapixel+0x77>
mov    $0x6,%edi
jmpq   25a28 <png_do_write_intrapixel+0xd8>
cmp    $0x6,%dl
jne    25a2f <png_do_write_intrapixel+0xdf>
mov    $0x4,%edx
jmp    259c0 <png_do_write_intrapixel+0x70>
movzbl (%rsi),%ecx
movzbl 0x1(%rsi),%edi
sub    %dil,%cl
mov    %cl,(%rsi)
movzbl 0x2(%rsi),%ecx
sub    %dil,%cl
mov    %cl,0x2(%rsi)
add    $0x1,%eax
add    %rdx,%rsi
cmp    %r9d,%eax
jb     259a4 <png_do_write_intrapixel+0x54>
leaveq 
retq   
cmp    $0x6,%dl
jne    25a31 <png_do_write_intrapixel+0xe1>
mov    $0x8,%edi
jmp    25a28 <png_do_write_intrapixel+0xd8>
movzbl 0x1(%rsi),%edx
movzbl (%rsi),%ecx
shl    $0x8,%ecx
add    %edx,%ecx
movzbl 0x3(%rsi),%r8d
movzbl 0x2(%rsi),%edx
shl    $0x8,%edx
add    %edx,%r8d
sub    %r8d,%ecx
mov    %ecx,%ecx
movzwl %cx,%ecx
mov    %rcx,%rdx
shr    $0x8,%edx
mov    %dl,(%rsi)
mov    %cl,0x1(%rsi)
movzbl 0x5(%rsi),%edx
movzbl 0x4(%rsi),%ecx
shl    $0x8,%ecx
add    %edx,%ecx
sub    %r8d,%ecx
mov    %ecx,%ecx
movzwl %cx,%edx
mov    %rdx,%rcx
shr    $0x8,%ecx
mov    %cl,0x4(%rsi)
mov    %dl,0x5(%rsi)
add    $0x1,%eax
add    %rdi,%rsi
cmp    %eax,%r9d
ja     259d3 <png_do_write_intrapixel+0x83>
leaveq 
retq   
leaveq 
retq   
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

0000000000025a40 <png_write_destroy>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x8(%rbp)
mov    0x130(%rdi),%eax
and    $0x2,%eax
test   %eax,%eax
jne    25a5e <png_write_destroy+0x1e>
mov    %rdi,%r15
jmp    25a6d <png_write_destroy+0x2d>
mov    %rdi,%r15
lea    0x140(%r15),%rdi
callq  5670 <deflateEnd@plt>
lea    0x1b0(%r15),%rsi
mov    %r15,%rdi
callq  277a0 <png_free_buffer_list>
mov    0x228(%r15),%rsi
mov    %r15,%rdi
callq  5790 <png_free@plt>
movq   $0x0,0x228(%r15)
mov    0x220(%r15),%rsi
mov    %r15,%rdi
callq  5790 <png_free@plt>
mov    0x230(%r15),%rsi
mov    %r15,%rdi
callq  5790 <png_free@plt>
mov    0x238(%r15),%rsi
mov    %r15,%rdi
callq  5790 <png_free@plt>
movq   $0x0,0x220(%r15)
movq   $0x0,0x230(%r15)
movq   $0x0,0x238(%r15)
mov    0x3c8(%r15),%rsi
mov    %r15,%rdi
callq  5790 <png_free@plt>
movq   $0x0,0x3c8(%r15)
mov    -0x8(%rbp),%r15
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nop

0000000000025b10 <png_image_write_init>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %r15,-0x10(%rbp)
mov    %rdi,%r15
lea    0xa141(%rip),%rdi        # 2fc67 <fourbppswaptable+0x61b>
lea    -0x1a9ad(%rip),%rdx        # b180 <png_safe_error>
lea    -0x1a924(%rip),%rcx        # b210 <png_safe_warning>
mov    %r15,%rsi
callq  50f0 <png_create_write_struct@plt>
mov    %rax,-0x20(%rbp)
test   %rax,%rax
jne    25b5a <png_image_write_init+0x4a>
mov    %r15,%rdi
lea    0xa11f(%rip),%rsi        # 2fc6e <fourbppswaptable+0x622>
callq  90e0 <png_image_error>
mov    -0x10(%rbp),%r15
leaveq 
retq   
mov    %rax,%rdi
callq  5280 <png_create_info_struct@plt>
mov    %rax,-0x18(%rbp)
xor    %esi,%esi
test   %rax,%rax
jne    25b78 <png_image_write_init+0x68>
lea    -0x20(%rbp),%rdi
callq  56f0 <png_destroy_write_struct@plt>
jmp    25b45 <png_image_write_init+0x35>
mov    -0x20(%rbp),%rdi
mov    $0x30,%esi
callq  5150 <png_malloc_warn@plt>
test   %rax,%rax
jne    25b9c <png_image_write_init+0x8c>
mov    -0x20(%rbp),%rdi
lea    -0x18(%rbp),%rsi
callq  55a0 <png_destroy_info_struct@plt>
xor    %esi,%esi
jmp    25b6d <png_image_write_init+0x5d>
mov    %rax,%rdi
mov    %r14,-0x8(%rbp)
mov    %rax,%r14
xor    %esi,%esi
mov    $0x30,%edx
callq  5350 <memset@plt>
mov    -0x20(%rbp),%rax
mov    %rax,(%r14)
mov    -0x18(%rbp),%rax
mov    %rax,0x8(%r14)
mov    0x28(%r14),%eax
or     $0x1,%eax
mov    %eax,0x28(%r14)
mov    %r14,(%r15)
mov    $0x1,%eax
mov    -0x8(%rbp),%r14
mov    -0x10(%rbp),%r15
leaveq 
retq   
xchg   %ax,%ax

0000000000025be0 <png_write_image_16bit>:
push   %rbp
mov    %rsp,%rbp
sub    $0x50,%rsp
mov    %rdi,-0x38(%rbp)
mov    (%rdi),%r9
mov    (%r9),%rax
mov    (%rax),%r11
mov    %r11,-0x30(%rbp)
mov    0x28(%rdi),%rsi
mov    0x38(%rdi),%rcx
mov    $0x1,%edx
mov    0x14(%r9),%r8d
mov    %r8,%rax
and    $0x2,%eax
test   %eax,%eax
jne    25c1b <png_write_image_16bit+0x3b>
mov    $0x2,%eax
jmp    25c25 <png_write_image_16bit+0x45>
mov    $0x4,%eax
mov    $0x3,%edx
mov    %rdx,-0x48(%rbp)
mov    0x10(%r9),%r10d
mov    %r8,%rdi
and    $0x1,%edi
test   %edi,%edi
jne    25c46 <png_write_image_16bit+0x66>
mov    %r11,%rdi
lea    0xa04d(%rip),%rsi        # 2fc8e <fourbppswaptable+0x642>
callq  5470 <png_error@plt>
and    $0x20,%r8d
test   %r8d,%r8d
jne    25c54 <png_write_image_16bit+0x74>
mov    %rdx,%rdi
jmp    25c63 <png_write_image_16bit+0x83>
mov    $0xffffffffffffffff,%rdi
add    $0x2,%rcx
add    $0x2,%rsi
mov    %rcx,-0x40(%rbp)
movslq %edi,%rdi
imul   0xc(%r9),%eax
mov    %eax,%eax
lea    (%rcx,%rax,2),%rax
mov    $0xffff,%r8d
xor    %r9d,%r9d
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rdx,%rbx
mov    %r10,%r12
mov    %rdi,%r13
mov    %r11,%rdi
mov    %rax,%r14
mov    -0x38(%rbp),%r15
jmp    25d05 <png_write_image_16bit+0x125>
add    $0x2,%rcx
add    $0x2,%rsi
movzwl (%rsi),%edx
cmp    %dx,%r10w
ja     25d25 <png_write_image_16bit+0x145>
mov    %r8,%rdx
mov    %dx,(%rcx)
add    $0xffffffff,%ebx
test   %ebx,%ebx
jg     25ca7 <png_write_image_16bit+0xc7>
add    $0x4,%rsi
add    $0x4,%rcx
mov    -0x48(%rbp),%rbx
cmp    %r14,%rcx
jb     25d2f <png_write_image_16bit+0x14f>
mov    0x38(%r15),%rsi
callq  5380 <png_write_row@plt>
add    $0xffffffff,%r12d
movzwl 0x30(%r15),%eax
and    $0xfffffffffffffffe,%rax
mov    -0x38(%rbp),%rcx
lea    (%rcx,%rax,1),%rsi
mov    -0x40(%rbp),%rcx
mov    -0x30(%rbp),%rdi
mov    $0xffff,%r8d
xor    %r9d,%r9d
test   %r12d,%r12d
jne    25d47 <png_write_image_16bit+0x167>
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    $0x1,%eax
leaveq 
retq   
test   %dx,%dx
jne    25d4d <png_write_image_16bit+0x16d>
mov    %r9,%rdx
jmp    25cbb <png_write_image_16bit+0xdb>
movzwl (%rsi,%r13,2),%r10d
mov    %r10w,(%rcx,%r13,2)
test   %r10w,%r10w
jne    25d69 <png_write_image_16bit+0x189>
mov    %r9,%rax
jmpq   25caf <png_write_image_16bit+0xcf>
mov    %rsi,-0x38(%rbp)
jmp    25cd1 <png_write_image_16bit+0xf1>
cmp    $0xfffe,%r10w
ja     25cbb <png_write_image_16bit+0xdb>
imul   %eax,%edx
add    $0x4000,%edx
shr    $0xf,%edx
jmpq   25cbb <png_write_image_16bit+0xdb>
cmp    $0xfffe,%r10w
jbe    25d78 <png_write_image_16bit+0x198>
mov    %r9,%rax
jmpq   25caf <png_write_image_16bit+0xcf>
mov    %r10,%rax
shr    %eax
add    $0x7fff8000,%eax
cltd   
idiv   %r10d
jmpq   25caf <png_write_image_16bit+0xcf>
nopl   0x0(%rax,%rax,1)

0000000000025d90 <png_unpremultiply>:
push   %rbp
mov    %rsp,%rbp
mov    $0xff,%eax
cmp    %edi,%esi
ja     25d9f <png_unpremultiply+0xf>
leaveq 
retq   
cmp    $0x7f,%esi
ja     25da6 <png_unpremultiply+0x16>
leaveq 
retq   
test   %edi,%edi
jne    25dae <png_unpremultiply+0x1e>
xor    %eax,%eax
leaveq 
retq   
cmp    $0xff7e,%esi
jbe    25dc0 <png_unpremultiply+0x30>
mov    %rdi,%rax
shl    $0x8,%eax
sub    %edi,%eax
jmp    25dc9 <png_unpremultiply+0x39>
imul   %edx,%edi
lea    0x40(%rdi),%eax
shr    $0x7,%eax
mov    %rax,%rcx
shr    $0xf,%ecx
mov    %ecx,%edx
lea    0x69b4(%rip),%rcx        # 2c78c <png_sRGB_delta>
movzbl (%rdx,%rcx,1),%ecx
and    $0x7fff,%eax
imul   %eax,%ecx
shr    $0xc,%ecx
lea    0x659e(%rip),%rax        # 2c38c <png_sRGB_base>
movzwl (%rax,%rdx,2),%eax
add    %ecx,%eax
shr    $0x8,%eax
leaveq 
retq   
nopl   0x0(%rax)

0000000000025e00 <png_write_image_8bit>:
push   %rbp
mov    %rsp,%rbp
sub    $0x70,%rsp
mov    %rbx,-0x48(%rbp)
mov    %r12,-0x50(%rbp)
mov    %r13,-0x58(%rbp)
mov    %r14,-0x60(%rbp)
mov    %r15,-0x68(%rbp)
mov    %rdi,-0x28(%rbp)
mov    (%rdi),%rdx
mov    (%rdx),%rax
mov    (%rax),%rsi
mov    %rsi,-0x30(%rbp)
mov    0x28(%rdi),%r12
mov    0x38(%rdi),%rbx
mov    0x10(%rdx),%r8d
mov    $0x1,%r13d
mov    0x14(%rdx),%eax
mov    %rax,%rcx
and    $0x2,%ecx
test   %ecx,%ecx
jne    25e53 <png_write_image_8bit+0x53>
mov    $0x2,%ecx
jmp    25e5e <png_write_image_8bit+0x5e>
mov    $0x4,%ecx
mov    $0x3,%r13d
mov    %r13,-0x40(%rbp)
mov    %rax,%rdi
and    $0x1,%edi
test   %edi,%edi
jne    25e97 <png_write_image_8bit+0x97>
lea    0x6919(%rip),%r10        # 2c78c <png_sRGB_delta>
mov    %r10,-0x40(%rbp)
lea    0x650e(%rip),%r9        # 2c38c <png_sRGB_base>
mov    %r9,-0x38(%rbp)
imul   0xc(%rdx),%r13d
mov    %r13d,%eax
lea    (%rbx,%rax,1),%r13
mov    %rsi,%rdi
mov    -0x28(%rbp),%r14
jmp    25f0f <png_write_image_8bit+0x10f>
and    $0x20,%eax
test   %eax,%eax
jne    25f2f <png_write_image_8bit+0x12f>
mov    %r13,%rax
jmpq   25f3e <png_write_image_8bit+0x13e>
movzwl (%rdx),%eax
mov    %rax,%rcx
shl    $0x8,%ecx
sub    %eax,%ecx
mov    %rcx,%rax
shr    $0xf,%eax
mov    %eax,%r11d
movzbl (%r11,%r10,1),%eax
and    $0x7fff,%ecx
imul   %ecx,%eax
shr    $0xc,%eax
movzwl (%r9,%r11,2),%ecx
add    %ecx,%eax
shr    $0x8,%eax
mov    %al,(%rsi)
add    $0x2,%rdx
add    $0x1,%rsi
cmp    %r13,%rsi
jb     25eaa <png_write_image_8bit+0xaa>
mov    %r8,%r15
mov    %rbx,%rsi
callq  5380 <png_write_row@plt>
lea    -0x1(%r15),%r8d
movzwl 0x30(%r14),%eax
and    $0xfffffffffffffffe,%rax
add    %rax,%r12
mov    -0x30(%rbp),%rdi
mov    -0x38(%rbp),%r9
mov    -0x40(%rbp),%r10
test   %r8d,%r8d
jne    25f5f <png_write_image_8bit+0x15f>
mov    -0x68(%rbp),%r15
mov    -0x60(%rbp),%r14
mov    -0x58(%rbp),%r13
mov    -0x50(%rbp),%r12
mov    -0x48(%rbp),%rbx
mov    $0x1,%eax
leaveq 
retq   
mov    $0xffffffffffffffff,%rax
add    $0x1,%rbx
add    $0x2,%r12
mov    %rbx,-0x20(%rbp)
movslq %eax,%rax
mov    %rax,-0x18(%rbp)
imul   0xc(%rdx),%ecx
mov    %ecx,%ecx
lea    (%rbx,%rcx,1),%r15
mov    %r15,-0x38(%rbp)
xor    %r14d,%r14d
jmpq   25fe1 <png_write_image_8bit+0x1e1>
mov    %rbx,%rsi
mov    %r12,%rdx
jmpq   25ee3 <png_write_image_8bit+0xe3>
add    $0x2,%r12
add    $0x1,%rbx
movzwl (%r12),%edi
mov    %r15,%rsi
mov    %r14,%rdx
callq  25d90 <png_unpremultiply>
mov    %al,(%rbx)
add    $0xffffffff,%r13d
test   %r13d,%r13d
jg     25f6a <png_write_image_8bit+0x16a>
add    $0x4,%r12
add    $0x2,%rbx
xor    %r14d,%r14d
mov    -0x40(%rbp),%r13
mov    -0x18(%rbp),%rax
mov    -0x38(%rbp),%r15
cmp    %r15,%rbx
jb     26001 <png_write_image_8bit+0x201>
mov    %rax,%r12
mov    -0x28(%rbp),%rbx
mov    0x38(%rbx),%rsi
mov    -0x30(%rbp),%rdi
callq  5380 <png_write_row@plt>
mov    -0x10(%rbp),%rax
lea    -0x1(%rax),%r8d
movzwl 0x30(%rbx),%eax
and    $0xfffffffffffffffe,%rax
mov    -0x8(%rbp),%rcx
add    %rcx,%rax
mov    %r12,%rcx
mov    %rax,%r12
mov    %rcx,%rax
mov    -0x20(%rbp),%rbx
test   %r8d,%r8d
jne    26042 <png_write_image_8bit+0x242>
mov    -0x68(%rbp),%r15
mov    -0x60(%rbp),%r14
mov    -0x58(%rbp),%r13
mov    -0x50(%rbp),%r12
mov    -0x48(%rbp),%rbx
mov    $0x1,%eax
leaveq 
retq   
movzwl (%r12,%rax,2),%r15d
mov    %r15,%rcx
shl    $0x8,%ecx
sub    %r15d,%ecx
add    $0x807f,%ecx
shr    $0x10,%ecx
mov    %cl,(%rbx,%rax,1)
test   %cl,%cl
je     25f72 <png_write_image_8bit+0x172>
cmp    $0xfe,%cl
ja     25f72 <png_write_image_8bit+0x172>
mov    %r15,%rax
shr    %eax
add    $0x7f7f8080,%eax
cltd   
idiv   %r15d
mov    %rax,%r14
jmpq   25f72 <png_write_image_8bit+0x172>
mov    %r8,-0x10(%rbp)
mov    %r12,-0x8(%rbp)
jmpq   25fa4 <png_write_image_8bit+0x1a4>
nop

0000000000026050 <png_image_set_PLTE>:
push   %rbp
mov    %rsp,%rbp
sub    $0x4d0,%rsp
mov    %r15,-0x30(%rbp)
mov    %rbx,-0x10(%rbp)
mov    %r12,-0x18(%rbp)
mov    %r13,-0x20(%rbp)
mov    %r14,-0x28(%rbp)
mov    0x18(%rdi),%rax
mov    %rax,-0xc0(%rbp)
mov    $0x100,%edx
mov    (%rdi),%rsi
mov    %rsi,-0x8(%rbp)
mov    0x1c(%rsi),%r12d
cmp    $0x100,%r12d
jbe    26096 <png_image_set_PLTE+0x46>
mov    %rdx,%r12
xor    %r14d,%r14d
mov    %r14,-0xa0(%rbp)
mov    $0x1,%eax
mov    $0x4,%ecx
mov    $0x2,%ebx
mov    0x14(%rsi),%r15d
mov    %r15,%rsi
and    $0x20,%esi
test   %esi,%esi
jne    260f5 <png_image_set_PLTE+0xa5>
mov    %rax,%r8
mov    %rbx,%rdi
mov    %r14,%rsi
mov    %rsi,%r13
mov    %rdi,-0x68(%rbp)
mov    %r8,-0x90(%rbp)
mov    %rax,-0x80(%rbp)
mov    %rsi,-0x70(%rbp)
mov    %r13,-0xb8(%rbp)
mov    %r15,%rax
and    $0x10,%eax
test   %eax,%eax
jne    26111 <png_image_set_PLTE+0xc1>
mov    %rcx,%rax
mov    %r14,%rcx
jmp    2611d <png_image_set_PLTE+0xcd>
mov    %r15,%rsi
and    $0x1,%esi
test   %esi,%esi
jne    261d7 <png_image_set_PLTE+0x187>
mov    %rax,%r8
mov    %rbx,%rdi
mov    %r14,%rsi
mov    %rsi,%r13
jmp    260c9 <png_image_set_PLTE+0x79>
mov    %r14,%rax
mov    %rbx,%r14
mov    %rax,%rbx
mov    %rbx,%rax
mov    %rcx,-0x48(%rbp)
mov    %rax,-0x50(%rbp)
lea    -0x1d0(%rbp),%rdi
mov    $0xff,%esi
callq  5350 <memset@plt>
lea    -0x4d0(%rbp),%rdi
mov    $0x300,%edx
xor    %esi,%esi
callq  5350 <memset@plt>
lea    0x623c(%rip),%rax        # 2c38c <png_sRGB_base>
mov    %rax,-0x60(%rbp)
lea    0x6631(%rip),%rax        # 2c78c <png_sRGB_delta>
mov    %rax,-0x58(%rbp)
lea    0x0(%r13,%r14,1),%eax
movslq %eax,%rax
mov    %rax,-0x78(%rbp)
lea    0x0(%r13,%rbx,1),%eax
movslq %eax,%rsi
mov    %rsi,-0x88(%rbp)
mov    %r15,%r8
and    $0x3,%r8d
mov    %r8,-0xc8(%rbp)
lea    0x1(%r8),%r14d
mov    %r14,-0x40(%rbp)
mov    %r15,%rcx
and    $0x4,%ecx
mov    %rcx,-0xd0(%rbp)
mov    %r14,%r10
and    $0x1,%r10d
mov    %r10,-0xb0(%rbp)
mov    $0x3,%eax
mov    %rax,-0x98(%rbp)
xor    %ebx,%ebx
mov    -0x80(%rbp),%rdx
mov    -0x90(%rbp),%rdi
mov    -0x50(%rbp),%r9
mov    -0xc0(%rbp),%r11
mov    %rbx,%rax
mov    %rax,%r15
jmp    26252 <png_image_set_PLTE+0x202>
mov    %rax,%r13
mov    %rcx,%rdi
mov    %rbx,%rax
mov    %rax,%rsi
mov    %r14,%r8
jmpq   260c9 <png_image_set_PLTE+0x79>
pushq  -0xa0(%rbp)
popq   -0xa8(%rbp)
mov    -0xa8(%rbp),%rdi
movzbl (%rax,%rdi,1),%edi
mov    %dil,-0x1d0(%rbp,%rcx,1)
cmp    $0xfe,%dil
ja     26213 <png_image_set_PLTE+0x1c3>
mov    %r15,%rbx
movzbl (%rax,%rsi,1),%edi
lea    (%rcx,%rcx,2),%rcx
mov    %dil,-0x4ce(%rbp,%rcx,1)
movzbl (%rax,%rdx,1),%edi
mov    %dil,-0x4cf(%rbp,%rcx,1)
mov    -0x78(%rbp),%rdi
movzbl (%rax,%rdi,1),%eax
mov    %al,-0x4d0(%rbp,%rcx,1)
mov    %r15,%rax
mov    -0xd0(%rbp),%rcx
xor    %r15d,%r15d
mov    -0x90(%rbp),%rdi
cmp    %r12d,%eax
jl     262b1 <png_image_set_PLTE+0x261>
mov    -0x8(%rbp),%r14
mov    (%r14),%rax
mov    (%rax),%rdi
mov    0x8(%rax),%rsi
mov    %r15,%r13
mov    %r12,%rcx
lea    -0x4d0(%rbp),%rdx
callq  5530 <png_set_PLTE@plt>
test   %ebx,%ebx
jle    26297 <png_image_set_PLTE+0x247>
mov    (%r14),%rax
mov    (%rax),%rdi
mov    0x8(%rax),%rsi
mov    %rbx,%rcx
mov    %r13,%r8
lea    -0x1d0(%rbp),%rdx
callq  54f0 <png_set_tRNS@plt>
mov    %r12d,0x1c(%r14)
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
mov    -0x10(%rbp),%rbx
mov    -0x30(%rbp),%r15
leaveq 
retq   
test   %ecx,%ecx
movslq %eax,%rcx
lea    0x1(%rax),%r15d
jne    262f6 <png_image_set_PLTE+0x2a6>
imul   %r14d,%eax
cmp    $0x2,%r14d
mov    %eax,%eax
lea    (%rax,%r11,1),%rax
jbe    263cb <png_image_set_PLTE+0x37b>
cmp    $0x3,%r14d
je     26213 <png_image_set_PLTE+0x1c3>
cmp    $0x4,%r14d
je     263f0 <png_image_set_PLTE+0x3a0>
mov    %r15,%rax
mov    -0xd0(%rbp),%rcx
xor    %r15d,%r15d
jmpq   26252 <png_image_set_PLTE+0x202>
imul   %r14d,%eax
test   %r10d,%r10d
mov    %eax,%eax
lea    (%r11,%rax,2),%rax
jne    2640a <png_image_set_PLTE+0x3ba>
test   %r13d,%r13d
jle    26311 <png_image_set_PLTE+0x2c1>
xor    %r8d,%r8d
mov    %r8d,%edx
movzwl (%rax,%rdx,2),%r13d
mov    %r13,%rdx
shl    $0x8,%edx
sub    %r13d,%edx
lea    0x807f(%rdx),%edi
shr    $0x10,%edi
test   %dil,%dil
jne    2647e <png_image_set_PLTE+0x42e>
mov    %r15,%r8
mov    %rax,%r15
xor    %edx,%edx
cmp    $0xfe,%dil
mov    %dil,-0x1d0(%rbp,%rcx,1)
ja     2634d <png_image_set_PLTE+0x2fd>
mov    %r8,%rbx
cmp    $0x2,%r14d
ja     26495 <png_image_set_PLTE+0x445>
mov    -0x70(%rbp),%rax
movzwl (%r15,%rax,1),%edi
mov    %r13,%rsi
mov    %r8,%r13
mov    %rcx,%r15
callq  25d90 <png_unpremultiply>
lea    (%r15,%r15,2),%rcx
mov    %al,-0x4cf(%rbp,%rcx,1)
mov    %al,-0x4d0(%rbp,%rcx,1)
mov    %al,-0x4ce(%rbp,%rcx,1)
mov    %r13,%rax
mov    -0x88(%rbp),%rsi
mov    -0xb0(%rbp),%r10
mov    -0xc8(%rbp),%r8
mov    -0xb8(%rbp),%r13
mov    -0xd0(%rbp),%rcx
xor    %r15d,%r15d
mov    -0x80(%rbp),%rdx
mov    -0x90(%rbp),%rdi
mov    -0x50(%rbp),%r9
mov    -0xc0(%rbp),%r11
jmpq   26252 <png_image_set_PLTE+0x202>
test   %r8d,%r8d
je     26565 <png_image_set_PLTE+0x515>
cmp    $0x2,%r14d
je     2654d <png_image_set_PLTE+0x4fd>
mov    %r15,%rax
mov    -0xd0(%rbp),%rcx
xor    %r15d,%r15d
jmpq   26252 <png_image_set_PLTE+0x202>
test   %r13d,%r13d
jg     261eb <png_image_set_PLTE+0x19b>
pushq  -0x98(%rbp)
popq   -0xa8(%rbp)
jmpq   261f7 <png_image_set_PLTE+0x1a7>
cmp    $0x2,%r14d
ja     26595 <png_image_set_PLTE+0x545>
movzwl (%rax),%edx
mov    %rdx,%rax
shl    $0x8,%eax
sub    %edx,%eax
mov    %rax,%rdx
shr    $0xf,%edx
movslq %edx,%rdi
mov    -0x58(%rbp),%rdx
movzbl (%rdi,%rdx,1),%edx
and    $0x7fff,%eax
imul   %eax,%edx
shr    $0xc,%edx
mov    -0x60(%rbp),%rax
movzwl (%rax,%rdi,2),%eax
add    %edx,%eax
shr    $0x8,%eax
lea    (%rcx,%rcx,2),%rcx
mov    %al,-0x4cf(%rbp,%rcx,1)
mov    %al,-0x4d0(%rbp,%rcx,1)
mov    %al,-0x4ce(%rbp,%rcx,1)
mov    %r15,%rax
mov    -0xd0(%rbp),%rcx
xor    %r15d,%r15d
mov    -0x80(%rbp),%rdx
mov    -0x90(%rbp),%rdi
jmpq   26252 <png_image_set_PLTE+0x202>
cmp    $0xfe,%dil
jbe    2667d <png_image_set_PLTE+0x62d>
mov    %r15,%r8
mov    %rax,%r15
xor    %edx,%edx
jmpq   2633c <png_image_set_PLTE+0x2ec>
movzwl (%r15,%rsi,2),%edi
mov    %r13,%rsi
mov    %rdx,%rax
mov    %rbx,-0x38(%rbp)
mov    %r8,-0xa8(%rbp)
mov    %rdx,%rbx
mov    %rax,%rdx
mov    %rcx,%r14
callq  25d90 <png_unpremultiply>
lea    (%r14,%r14,2),%r14
mov    %al,-0x4ce(%rbp,%r14,1)
mov    -0x68(%rbp),%rax
movzwl (%r15,%rax,1),%edi
mov    %r13,%rsi
mov    %rbx,%rdx
callq  25d90 <png_unpremultiply>
mov    %al,-0x4cf(%rbp,%r14,1)
mov    -0x78(%rbp),%rax
movzwl (%r15,%rax,2),%edi
mov    %rbx,%rdx
mov    %r13,%rsi
callq  25d90 <png_unpremultiply>
mov    %al,-0x4d0(%rbp,%r14,1)
mov    -0x40(%rbp),%r14
mov    -0xa8(%rbp),%rax
mov    -0x38(%rbp),%rbx
mov    -0x88(%rbp),%rsi
mov    -0xb0(%rbp),%r10
mov    -0xc8(%rbp),%r8
mov    -0xb8(%rbp),%r13
mov    -0xd0(%rbp),%rcx
xor    %r15d,%r15d
mov    -0x80(%rbp),%rdx
mov    -0x90(%rbp),%rdi
mov    -0x50(%rbp),%r9
mov    -0xc0(%rbp),%r11
jmpq   26252 <png_image_set_PLTE+0x202>
movzbl (%rdi,%rax,1),%edx
mov    %dl,-0x1d0(%rbp,%rcx,1)
cmp    $0xfe,%dl
jbe    2669d <png_image_set_PLTE+0x64d>
mov    -0x80(%rbp),%rdx
movzbl (%rax,%r13,1),%eax
lea    (%rcx,%rcx,2),%rcx
mov    %al,-0x4cf(%rbp,%rcx,1)
mov    %al,-0x4d0(%rbp,%rcx,1)
mov    %al,-0x4ce(%rbp,%rcx,1)
mov    %r15,%rax
mov    -0xd0(%rbp),%rcx
xor    %r15d,%r15d
jmpq   26252 <png_image_set_PLTE+0x202>
movzwl (%rax,%r9,1),%esi
mov    %rsi,%rdx
shl    $0x8,%edx
sub    %esi,%edx
mov    %rdx,%rsi
shr    $0xf,%esi
movslq %esi,%rdi
mov    -0x58(%rbp),%r9
movzbl (%rdi,%r9,1),%esi
and    $0x7fff,%edx
imul   %edx,%esi
shr    $0xc,%esi
mov    -0x60(%rbp),%r13
movzwl 0x0(%r13,%rdi,2),%edx
add    %esi,%edx
shr    $0x8,%edx
lea    (%rcx,%rcx,2),%rdi
mov    %dl,-0x4ce(%rbp,%rdi,1)
movzwl 0x2(%rax),%ecx
mov    %rcx,%rdx
shl    $0x8,%edx
sub    %ecx,%edx
mov    %rdx,%rcx
shr    $0xf,%ecx
movslq %ecx,%rsi
movzbl (%rsi,%r9,1),%ecx
and    $0x7fff,%edx
imul   %edx,%ecx
shr    $0xc,%ecx
movzwl 0x0(%r13,%rsi,2),%edx
add    %edx,%ecx
shr    $0x8,%ecx
mov    %cl,-0x4cf(%rbp,%rdi,1)
mov    -0x48(%rbp),%rcx
movzwl (%rax,%rcx,1),%eax
mov    %rax,%rcx
shl    $0x8,%ecx
sub    %eax,%ecx
mov    %rcx,%rax
shr    $0xf,%eax
movslq %eax,%rdx
movzbl (%rdx,%r9,1),%eax
and    $0x7fff,%ecx
imul   %ecx,%eax
shr    $0xc,%eax
movzwl 0x0(%r13,%rdx,2),%ecx
add    %ecx,%eax
shr    $0x8,%eax
mov    %al,-0x4d0(%rbp,%rdi,1)
mov    %r15,%rax
mov    -0x88(%rbp),%rsi
mov    -0xb8(%rbp),%r13
mov    -0xd0(%rbp),%rcx
xor    %r15d,%r15d
mov    -0x80(%rbp),%rdx
mov    -0x90(%rbp),%rdi
mov    -0x50(%rbp),%r9
jmpq   26252 <png_image_set_PLTE+0x202>
mov    %r13,%rdx
shr    %edx
add    $0x7f7f8080,%edx
mov    %r15,%r8
mov    %rax,%r15
mov    %rdx,%rax
cltd   
idiv   %r13d
mov    %rax,%rdx
jmpq   2633c <png_image_set_PLTE+0x2ec>
mov    -0x80(%rbp),%rdx
mov    %r15,%rbx
jmpq   26565 <png_image_set_PLTE+0x515>
nopl   0x0(%rax)

00000000000266b0 <png_image_write_main>:
push   %rbp
mov    %rsp,%rbp
sub    $0x70,%rsp
mov    %r14,-0x20(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r12,-0x10(%rbp)
mov    %rbx,-0x8(%rbp)
mov    %r15,-0x28(%rbp)
mov    (%rdi),%r12
mov    (%r12),%rcx
mov    (%rcx),%rax
mov    %rax,-0x60(%rbp)
mov    0x8(%rcx),%rcx
mov    %rcx,-0x68(%rbp)
xor    %esi,%esi
mov    %rsi,-0x58(%rbp)
mov    $0x1,%r14d
mov    %r14,-0x50(%rbp)
mov    0x14(%r12),%ebx
mov    %rbx,%r15
and    $0x8,%r15d
test   %r15d,%r15d
jle    26764 <png_image_write_main+0xb4>
mov    %rsi,%rdx
mov    %r14,%rcx
mov    %rdx,-0x40(%rbp)
test   %rcx,%rcx
je     26776 <png_image_write_main+0xc6>
mov    %rsi,%rcx
mov    %rcx,-0x30(%rbp)
test   %edx,%edx
jg     26785 <png_image_write_main+0xd5>
mov    %rsi,%r14
mov    %rdi,%r13
mov    %rax,%rdi
callq  5050 <png_set_benign_errors@plt>
mov    0x14(%r12),%eax
mov    %rax,%rcx
and    $0x8,%ecx
test   %ecx,%ecx
je     26792 <png_image_write_main+0xe2>
mov    $0x1,%ecx
mov    $0x7fffffff,%eax
xor    %edx,%edx
mov    0xc(%r12),%esi
div    %ecx
cmp    %esi,%eax
jae    2679a <png_image_write_main+0xea>
mov    (%r12),%rax
mov    (%rax),%rdi
lea    0x9589(%rip),%rsi        # 2fce8 <fourbppswaptable+0x69c>
callq  5470 <png_error@plt>
mov    %rbx,%rcx
and    $0x4,%ecx
test   %ecx,%ecx
jne    267cd <png_image_write_main+0x11d>
mov    %rsi,%rcx
mov    %rcx,%rdx
jmp    26709 <png_image_write_main+0x59>
mov    %rbx,%rcx
and    $0x1,%ecx
test   %ecx,%ecx
jne    267d8 <png_image_write_main+0x128>
mov    %rsi,%rcx
jmp    26715 <png_image_write_main+0x65>
movslq 0x20(%rdi),%rcx
test   %ecx,%ecx
je     26720 <png_image_write_main+0x70>
mov    %rsi,%r14
jmp    26720 <png_image_write_main+0x70>
and    $0x3,%eax
lea    0x1(%rax),%ecx
jmp    2673f <png_image_write_main+0x8f>
imul   0xc(%r12),%ecx
movslq 0x10(%r13),%rax
test   %eax,%eax
jne    267ac <png_image_write_main+0xfc>
mov    %ecx,0x10(%r13)
movslq 0x10(%r13),%rax
test   %eax,%eax
jns    267b6 <png_image_write_main+0x106>
neg    %eax
cmp    %eax,%ecx
jbe    267e0 <png_image_write_main+0x130>
mov    (%r12),%rax
mov    (%rax),%rdi
lea    0x9502(%rip),%rsi        # 2fcca <fourbppswaptable+0x67e>
callq  5470 <png_error@plt>
mov    %rsi,%rcx
mov    %r14,%rdx
jmpq   26709 <png_image_write_main+0x59>
mov    %r14,%rcx
jmpq   26715 <png_image_write_main+0x65>
mov    $0xffffffff,%eax
xor    %edx,%edx
mov    0x10(%r12),%esi
div    %ecx
cmp    %esi,%eax
jb     268ba <png_image_write_main+0x20a>
mov    $0x3,%r9d
mov    $0x8,%r8d
mov    $0x4,%eax
mov    $0x2,%esi
test   %r15d,%r15d
jne    268cd <png_image_write_main+0x21d>
mov    0xc(%r12),%edx
mov    0x10(%r12),%ecx
test   %r14d,%r14d
jle    2682a <png_image_write_main+0x17a>
mov    $0x10,%r8d
mov    %rbx,%rdi
and    $0x2,%edi
test   %edi,%edi
jne    26836 <png_image_write_main+0x186>
xor    %esi,%esi
mov    %rbx,%rdi
and    $0x1,%edi
test   %edi,%edi
jne    26842 <png_image_write_main+0x192>
xor    %eax,%eax
sub    $0x10,%rsp
movl   $0x0,(%rsp)
movl   $0x0,0x8(%rsp)
movl   $0x0,0x10(%rsp)
lea    (%rax,%rsi,1),%r9d
mov    -0x60(%rbp),%rax
mov    %rax,%rdi
mov    -0x68(%rbp),%r10
mov    %r10,%rsi
mov    %r15,-0x48(%rbp)
mov    %r13,-0x38(%rbp)
mov    %r10,%r13
mov    %rax,%r15
callq  5460 <png_set_IHDR@plt>
add    $0x10,%rsp
mov    %r13,%rcx
mov    -0x38(%rbp),%r13
test   %r14d,%r14d
jg     268ed <png_image_write_main+0x23d>
mov    0x18(%r12),%eax
and    $0x1,%eax
test   %eax,%eax
je     26918 <png_image_write_main+0x268>
mov    $0xb18f,%edx
mov    %r15,%rdi
mov    %rcx,%rsi
mov    %r14,-0x38(%rbp)
mov    %rcx,%r14
callq  5290 <png_set_gAMA_fixed@plt>
jmpq   2697c <png_image_write_main+0x2cc>
mov    (%r12),%rax
mov    (%rax),%rdi
lea    0x93eb(%rip),%rsi        # 2fcb3 <fourbppswaptable+0x667>
callq  5470 <png_error@plt>
mov    0x18(%r13),%rcx
test   %rcx,%rcx
jne    269ab <png_image_write_main+0x2fb>
mov    (%r12),%rax
mov    (%rax),%rdi
lea    0x941b(%rip),%rsi        # 2fd03 <fourbppswaptable+0x6b7>
callq  5470 <png_error@plt>
mov    $0x186a0,%edx
mov    %r15,%rdi
mov    %rcx,%rsi
mov    %r14,-0x38(%rbp)
mov    %rcx,%r14
callq  5290 <png_set_gAMA_fixed@plt>
mov    0x18(%r12),%eax
and    $0x1,%eax
test   %eax,%eax
je     2692e <png_image_write_main+0x27e>
pushq  -0x50(%rbp)
popq   -0x58(%rbp)
jmp    2697c <png_image_write_main+0x2cc>
mov    %r15,%rdi
mov    %rcx,%rsi
xor    %edx,%edx
mov    %r14,-0x38(%rbp)
mov    %rcx,%r14
callq  50e0 <png_set_sRGB@plt>
jmp    2697c <png_image_write_main+0x2cc>
sub    $0x20,%rsp
movl   $0x7530,(%rsp)
movl   $0xea60,0x8(%rsp)
movl   $0x3a98,0x10(%rsp)
movl   $0x1770,0x18(%rsp)
mov    $0x7a26,%edx
mov    $0x8084,%ecx
mov    $0xfa00,%r8d
mov    $0x80e8,%r9d
mov    %r15,%rdi
mov    %r14,%rsi
callq  5250 <png_set_cHRM_fixed@plt>
add    $0x20,%rsp
pushq  -0x50(%rbp)
popq   -0x58(%rbp)
mov    %r15,%rdi
mov    %r14,%rsi
callq  5340 <png_write_info@plt>
mov    -0x58(%rbp),%rax
test   %rax,%rax
je     26998 <png_image_write_main+0x2e8>
mov    %r15,%rdi
callq  51e0 <png_set_swap@plt>
mov    %rbx,%rax
and    $0x10,%eax
test   %eax,%eax
jne    26a1f <png_image_write_main+0x36f>
mov    -0x48(%rbp),%rax
jmpq   26a2e <png_image_write_main+0x37e>
mov    0x1c(%r12),%edi
test   %edi,%edi
je     268da <png_image_write_main+0x22a>
mov    0xc(%r12),%edx
mov    0x10(%r12),%ecx
cmp    $0x10,%edi
jbe    26ae6 <png_image_write_main+0x436>
sub    $0x10,%rsp
movl   $0x0,(%rsp)
movl   $0x0,0x8(%rsp)
movl   $0x0,0x10(%rsp)
mov    -0x60(%rbp),%rax
mov    %rax,%rdi
mov    -0x68(%rbp),%r10
mov    %r10,%rsi
mov    %r15,-0x48(%rbp)
mov    %rbx,-0x60(%rbp)
mov    %r10,%rbx
mov    %rax,%r15
callq  5460 <png_set_IHDR@plt>
add    $0x10,%rsp
mov    %r13,%rdi
callq  26050 <png_image_set_PLTE>
mov    %rbx,%rcx
mov    -0x60(%rbp),%rbx
jmpq   2688d <png_image_write_main+0x1dd>
mov    -0x48(%rbp),%rax
test   %eax,%eax
je     26af7 <png_image_write_main+0x447>
and    $0xffffffef,%ebx
mov    %rbx,%rcx
and    $0x20,%ecx
test   %ecx,%ecx
je     26a43 <png_image_write_main+0x393>
test   %eax,%eax
je     26b1c <png_image_write_main+0x46c>
and    $0xffffffdf,%ebx
test   %eax,%eax
jg     26b41 <png_image_write_main+0x491>
and    $0xfffffff0,%ebx
test   %ebx,%ebx
jne    26b66 <png_image_write_main+0x4b6>
mov    -0x40(%rbp),%rbx
test   %ebx,%ebx
mov    0x8(%r13),%rdx
movslq 0x10(%r13),%rcx
jle    26a69 <png_image_write_main+0x3b9>
add    %rcx,%rcx
test   %rcx,%rcx
jns    26a85 <png_image_write_main+0x3d5>
mov    %rcx,%rsi
neg    %rsi
mov    0x10(%r12),%edi
add    $0xffffffff,%edi
mov    %edi,%edi
imul   %rdi,%rsi
add    %rsi,%rdx
mov    %rdx,0x28(%r13)
mov    %rcx,0x30(%r13)
mov    0x18(%r12),%ecx
and    $0x2,%ecx
test   %ecx,%ecx
je     26ac1 <png_image_write_main+0x411>
xor    %esi,%esi
mov    %rsi,%rdx
mov    %r15,%rdi
mov    %r12,-0x68(%rbp)
mov    %rax,%r12
callq  53e0 <png_set_filter@plt>
mov    %r15,%rdi
mov    $0x3,%esi
callq  5650 <png_set_compression_level@plt>
mov    %r12,%rax
mov    -0x68(%rbp),%r12
test   %ebx,%ebx
jg     26b75 <png_image_write_main+0x4c5>
test   %eax,%eax
je     26bc0 <png_image_write_main+0x510>
mov    0x28(%r13),%rax
mov    0x30(%r13),%r13
mov    0x10(%r12),%ebx
mov    %rax,%r12
jmpq   26bde <png_image_write_main+0x52e>
cmp    $0x4,%edi
jbe    26c08 <png_image_write_main+0x558>
mov    %rax,%r8
jmpq   269cb <png_image_write_main+0x31b>
mov    %rbx,%rcx
and    $0x2,%ecx
test   %ecx,%ecx
je     26a2b <png_image_write_main+0x37b>
mov    %rax,%r14
mov    %r15,%rdi
callq  5860 <png_set_bgr@plt>
mov    %r14,%rax
mov    -0x68(%rbp),%r14
jmpq   26a2b <png_image_write_main+0x37b>
mov    %rbx,%rcx
and    $0x1,%ecx
test   %ecx,%ecx
je     26a40 <png_image_write_main+0x390>
mov    %rax,%r14
mov    %r15,%rdi
callq  50d0 <png_set_swap_alpha@plt>
mov    %r14,%rax
mov    -0x68(%rbp),%r14
jmpq   26a40 <png_image_write_main+0x390>
mov    0x1c(%r12),%ecx
cmp    $0x10,%ecx
ja     26a4b <png_image_write_main+0x39b>
mov    %rax,%r14
mov    %r15,%rdi
callq  5580 <png_set_packing@plt>
mov    %r14,%rax
mov    -0x68(%rbp),%r14
jmpq   26a4b <png_image_write_main+0x39b>
mov    %r15,%rdi
lea    0x91b7(%rip),%rsi        # 2fd27 <fourbppswaptable+0x6db>
callq  5470 <png_error@plt>
mov    -0x30(%rbp),%rcx
test   %ecx,%ecx
jle    26ac9 <png_image_write_main+0x419>
mov    %r15,%rdi
mov    %r14,%rsi
callq  50c0 <png_get_rowbytes@plt>
mov    %rax,%rsi
mov    %r15,%rdi
callq  5800 <png_malloc@plt>
mov    -0x38(%rbp),%rcx
test   %ecx,%ecx
mov    %rax,0x38(%r13)
jg     26c18 <png_image_write_main+0x568>
mov    %r12,%rdi
mov    %rax,%rbx
lea    -0xdb0(%rip),%rsi        # 25e00 <png_write_image_8bit>
mov    %r13,%rdx
callq  b260 <png_safe_execute>
mov    %rbx,%rsi
mov    %rax,%rbx
jmp    26c33 <png_image_write_main+0x583>
movslq 0x20(%r13),%rax
test   %eax,%eax
jne    26b81 <png_image_write_main+0x4d1>
jmpq   26ad1 <png_image_write_main+0x421>
mov    %r15,%rdi
mov    %r12,%rsi
callq  5380 <png_write_row@plt>
add    %r13,%r12
add    $0xffffffff,%ebx
test   %ebx,%ebx
jne    26bcd <png_image_write_main+0x51d>
mov    %r14,%rsi
mov    %r15,%rdi
callq  53c0 <png_write_end@plt>
mov    -0x28(%rbp),%r15
mov    -0x8(%rbp),%rbx
mov    $0x1,%eax
mov    -0x10(%rbp),%r12
mov    -0x18(%rbp),%r13
mov    -0x20(%rbp),%r14
leaveq 
retq   
cmp    $0x2,%edi
ja     26c5f <png_image_write_main+0x5af>
mov    $0x1,%r8d
jmpq   269cb <png_image_write_main+0x31b>
mov    %r12,%rdi
mov    %rax,%rbx
lea    -0x1045(%rip),%rsi        # 25be0 <png_write_image_16bit>
mov    %r13,%rdx
callq  b260 <png_safe_execute>
mov    %rbx,%rsi
mov    %rax,%rbx
movq   $0x0,0x38(%r13)
mov    %r15,%rdi
callq  5790 <png_free@plt>
test   %ebx,%ebx
jne    26be2 <png_image_write_main+0x532>
mov    -0x28(%rbp),%r15
mov    -0x8(%rbp),%rbx
xor    %eax,%eax
mov    -0x10(%rbp),%r12
mov    -0x18(%rbp),%r13
mov    -0x20(%rbp),%r14
leaveq 
retq   
mov    %rsi,%r8
jmpq   269cb <png_image_write_main+0x31b>
nopw   0x0(%rax,%rax,1)

0000000000026c70 <image_memory_write>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    0x108(%rdi),%rcx
mov    0x50(%rcx),%r8
mov    %r8,%rax
not    %rax
cmp    %rdx,%rax
jae    26c9a <image_memory_write+0x2a>
lea    0x90be(%rip),%rsi        # 2fd53 <fourbppswaptable+0x707>
callq  5470 <png_error@plt>
test   %rdx,%rdx
jne    26ca1 <image_memory_write+0x31>
leaveq 
retq   
lea    (%r8,%rdx,1),%rax
cmp    0x48(%rcx),%rax
ja     26cd3 <image_memory_write+0x63>
mov    %r8,%rdi
add    0x40(%rcx),%rdi
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rcx,%r14
mov    %rax,%r15
callq  54c0 <memcpy@plt>
mov    %r15,%rax
mov    %r14,%rcx
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
mov    %rax,0x50(%rcx)
leaveq 
retq   
nopl   0x0(%rax)

0000000000026ce0 <image_memory_flush>:
push   %rbp
mov    %rsp,%rbp
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)

0000000000026cf0 <png_image_write_memory>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x8(%rbp)
mov    (%rdi),%rax
mov    (%rax),%rax
mov    (%rax),%rax
mov    %rdi,%r15
mov    %rax,%rdi
lea    -0xa2(%rip),%rdx        # 26c70 <image_memory_write>
lea    -0x39(%rip),%rcx        # 26ce0 <image_memory_flush>
mov    %r15,%rsi
callq  5300 <png_set_write_fn@plt>
mov    %r15,%rdi
callq  266b0 <png_image_write_main>
mov    -0x8(%rbp),%r15
leaveq 
retq   
nop

0000000000026d30 <png_do_write_transformations>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
test   %rdi,%rdi
jne    26d47 <png_do_write_transformations+0x17>
leaveq 
retq   
mov    0x134(%rdi),%eax
and    $0x100000,%eax
test   %eax,%eax
jne    26d8e <png_do_write_transformations+0x5e>
mov    %r14,%rax
mov    %rsi,%r14
mov    %r15,%rcx
mov    %rdi,%r15
mov    0x134(%r15),%edx
and    $0x8000,%edx
test   %edx,%edx
je     26dc5 <png_do_write_transformations+0x95>
mov    0x228(%r15),%rcx
mov    0x130(%r15),%eax
and    $0x80,%eax
test   %eax,%eax
je     26dac <png_do_write_transformations+0x7c>
xor    %edx,%edx
jmp    26db1 <png_do_write_transformations+0x81>
mov    0x118(%rdi),%rax
test   %rax,%rax
jne    26f1c <png_do_write_transformations+0x1ec>
mov    %r14,%rax
mov    %rsi,%r14
mov    %r15,%rcx
mov    %rdi,%r15
jmp    26d62 <png_do_write_transformations+0x32>
mov    $0x1,%edx
lea    0x1(%rcx),%rsi
mov    %r14,%rdi
callq  23850 <png_do_strip_channel>
mov    -0x10(%rbp),%rcx
mov    -0x8(%rbp),%rax
mov    0x134(%r15),%edx
and    $0x10000,%edx
test   %edx,%edx
je     26df1 <png_do_write_transformations+0xc1>
mov    0x228(%r15),%rsi
add    $0x1,%rsi
mov    %r14,%rdi
callq  23a00 <png_do_packswap>
mov    -0x10(%rbp),%rcx
mov    -0x8(%rbp),%rax
mov    0x134(%r15),%edx
and    $0x4,%edx
test   %edx,%edx
je     26e22 <png_do_write_transformations+0xf2>
mov    0x228(%r15),%rsi
add    $0x1,%rsi
movzbl 0x268(%r15),%edx
mov    %r14,%rdi
callq  26f60 <png_do_pack>
mov    -0x10(%rbp),%rcx
mov    -0x8(%rbp),%rax
mov    0x134(%r15),%edx
and    $0x10,%edx
test   %edx,%edx
je     26e4b <png_do_write_transformations+0x11b>
mov    0x228(%r15),%rsi
add    $0x1,%rsi
mov    %r14,%rdi
callq  239c0 <png_do_swap>
mov    -0x10(%rbp),%rcx
mov    -0x8(%rbp),%rax
mov    0x134(%r15),%edx
and    $0x8,%edx
test   %edx,%edx
je     26e7b <png_do_write_transformations+0x14b>
mov    0x228(%r15),%rsi
add    $0x1,%rsi
lea    0x2dd(%r15),%rdx
mov    %r14,%rdi
callq  27140 <png_do_shift>
mov    -0x10(%rbp),%rcx
mov    -0x8(%rbp),%rax
mov    0x134(%r15),%edx
and    $0x20000,%edx
test   %edx,%edx
je     26ea7 <png_do_write_transformations+0x177>
mov    0x228(%r15),%rsi
add    $0x1,%rsi
mov    %r14,%rdi
callq  27420 <png_do_write_swap_alpha>
mov    -0x10(%rbp),%rcx
mov    -0x8(%rbp),%rax
mov    0x134(%r15),%edx
and    $0x80000,%edx
test   %edx,%edx
je     26ed3 <png_do_write_transformations+0x1a3>
mov    0x228(%r15),%rsi
add    $0x1,%rsi
mov    %r14,%rdi
callq  27510 <png_do_write_invert_alpha>
mov    -0x10(%rbp),%rcx
mov    -0x8(%rbp),%rax
mov    0x134(%r15),%edx
and    $0x1,%edx
test   %edx,%edx
je     26f06 <png_do_write_transformations+0x1d6>
mov    0x228(%r15),%rsi
add    $0x1,%rsi
mov    %r14,%rdi
mov    %r14,-0x8(%rbp)
mov    %rax,%r14
callq  23af0 <png_do_bgr>
mov    %r14,%rax
mov    -0x8(%rbp),%r14
mov    -0x10(%rbp),%rcx
mov    0x134(%r15),%edx
and    $0x20,%edx
test   %edx,%edx
jne    26f3c <png_do_write_transformations+0x20c>
mov    %rax,%r14
mov    %rcx,%r15
leaveq 
retq   
mov    0x228(%rdi),%rdx
add    $0x1,%rdx
mov    %rdi,%r15
mov    %rsi,%r14
callq  *%rax
mov    -0x10(%rbp),%rcx
mov    -0x8(%rbp),%rax
jmpq   26d62 <png_do_write_transformations+0x32>
mov    0x228(%r15),%rsi
add    $0x1,%rsi
mov    %r14,%rdi
mov    %rax,%r14
mov    %rcx,%r15
callq  23a60 <png_do_invert>
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

0000000000026f60 <png_do_pack>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
movzbl 0x11(%rdi),%eax
cmp    $0x8,%al
je     26f72 <png_do_pack+0x12>
leaveq 
retq   
movzbl 0x12(%rdi),%eax
cmp    $0x1,%al
je     26f7c <png_do_pack+0x1c>
leaveq 
retq   
xor    %r8d,%r8d
cmp    $0x1,%edx
jle    26f93 <png_do_pack+0x33>
cmp    $0x2,%edx
je     26fbe <png_do_pack+0x5e>
cmp    $0x4,%edx
je     26fdd <png_do_pack+0x7d>
mov    %rdx,%rax
jmp    26f9b <png_do_pack+0x3b>
cmp    $0x1,%edx
je     26ffc <png_do_pack+0x9c>
mov    %rdx,%rax
mov    %al,0x11(%rdi)
movzbl 0x12(%rdi),%ecx
imul   %cl
mov    %al,0x13(%rdi)
cmp    $0x7,%al
ja     2701b <png_do_pack+0xbb>
movzbl %al,%eax
mov    (%rdi),%ecx
imul   %rcx,%rax
add    $0x7,%rax
shr    $0x3,%rax
jmp    27028 <png_do_pack+0xc8>
mov    (%rdi),%r9d
mov    $0x6,%r10d
mov    %rdx,-0x18(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rsi,%r11
mov    %r8,%rax
mov    %rax,%r15
mov    %r10,%rcx
jmp    27042 <png_do_pack+0xe2>
mov    (%rdi),%r9d
mov    $0x4,%r10d
mov    %rdx,-0x18(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rsi,%r11
mov    %r8,%rax
mov    %rax,%r15
mov    %r10,%rcx
jmp    2706d <png_do_pack+0x10d>
mov    (%rdi),%r10d
mov    $0x80,%r11d
mov    %rdx,-0x18(%rbp)
mov    %r15,-0x8(%rbp)
mov    %rsi,%r9
mov    %r8,%rax
mov    %rax,%rdx
mov    %r11,%rcx
jmp    2708d <png_do_pack+0x12d>
movzbl %al,%eax
shr    $0x3,%rax
mov    (%rdi),%ecx
imul   %rcx,%rax
mov    %rax,0x8(%rdi)
leaveq 
retq   
mov    %al,(%rsi)
add    $0x1,%rsi
mov    %r8,%rax
mov    %r10,%rcx
add    $0x1,%r11
add    $0x1,%r15d
cmp    %r9d,%r15d
jb     270ab <png_do_pack+0x14b>
cmp    $0x6,%ecx
jne    270c6 <png_do_pack+0x166>
mov    -0x10(%rbp),%r15
mov    -0x18(%rbp),%rax
jmpq   26f9b <png_do_pack+0x3b>
mov    %al,(%rsi)
add    $0x1,%rsi
mov    %r8,%rax
mov    %r10,%rcx
add    $0x1,%r11
add    $0x1,%r15d
cmp    %r9d,%r15d
jb     270d5 <png_do_pack+0x175>
cmp    $0x4,%ecx
jne    270f0 <png_do_pack+0x190>
mov    -0x10(%rbp),%r15
mov    -0x18(%rbp),%rax
jmpq   26f9b <png_do_pack+0x3b>
shr    %ecx
add    $0x1,%r9
add    $0x1,%edx
cmp    %r10d,%edx
jb     270ff <png_do_pack+0x19f>
cmp    $0x80,%ecx
jne    27124 <png_do_pack+0x1c4>
mov    -0x8(%rbp),%r15
mov    -0x18(%rbp),%rax
jmpq   26f9b <png_do_pack+0x3b>
movzbl (%r11),%edx
and    $0x3,%edx
shl    %cl,%edx
or     %edx,%eax
test   %ecx,%ecx
je     2702e <png_do_pack+0xce>
add    $0xfffffffe,%ecx
jmpq   2703a <png_do_pack+0xda>
mov    %al,(%rsi)
mov    -0x10(%rbp),%r15
mov    -0x18(%rbp),%rax
jmpq   26f9b <png_do_pack+0x3b>
movzbl (%r11),%edx
and    $0xf,%edx
shl    %cl,%edx
or     %edx,%eax
test   %ecx,%ecx
je     27059 <png_do_pack+0xf9>
add    $0xfffffffc,%ecx
jmpq   27065 <png_do_pack+0x105>
mov    %al,(%rsi)
mov    -0x10(%rbp),%r15
mov    -0x18(%rbp),%rax
jmpq   26f9b <png_do_pack+0x3b>
movzbl (%r9),%r15d
test   %r15b,%r15b
je     2710a <png_do_pack+0x1aa>
or     %ecx,%eax
cmp    $0x1,%ecx
jg     27084 <png_do_pack+0x124>
mov    %al,(%rsi)
add    $0x1,%rsi
mov    %r8,%rax
mov    %r11,%rcx
jmpq   27086 <png_do_pack+0x126>
mov    %al,(%rsi)
mov    -0x8(%rbp),%r15
mov    -0x18(%rbp),%rax
jmpq   26f9b <png_do_pack+0x3b>
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

0000000000027140 <png_do_shift>:
push   %rbp
mov    %rsp,%rbp
sub    $0x40,%rsp
movzbl 0x10(%rdi),%eax
cmp    $0x3,%al
jne    27152 <png_do_shift+0x12>
leaveq 
retq   
mov    $0x4,%ecx
and    $0x2,%eax
test   %eax,%eax
jg     2717f <png_do_shift+0x3f>
movzbl 0x11(%rdi),%eax
movzbl 0x3(%rdx),%r8d
sub    %r8d,%eax
mov    %eax,-0x40(%rbp)
mov    %r8d,-0x30(%rbp)
mov    $0x2,%r8d
mov    $0x1,%r9d
jmp    271c5 <png_do_shift+0x85>
movzbl 0x11(%rdi),%eax
movzbl (%rdx),%r9d
mov    %rax,%r8
sub    %r9d,%r8d
mov    %r8d,-0x40(%rbp)
mov    %r9d,-0x30(%rbp)
movzbl 0x1(%rdx),%r9d
mov    %rax,%r8
sub    %r9d,%r8d
mov    %r8d,-0x3c(%rbp)
mov    %r9d,-0x2c(%rbp)
movzbl 0x2(%rdx),%r8d
sub    %r8d,%eax
mov    %eax,-0x38(%rbp)
mov    %r8d,-0x28(%rbp)
mov    %rcx,%r8
mov    $0xc,%ecx
mov    $0x3,%r9d
movzbl 0x10(%rdi),%eax
and    $0x4,%eax
test   %eax,%eax
jle    271e8 <png_do_shift+0xa8>
movzbl 0x11(%rdi),%eax
movzbl 0x4(%rdx),%r9d
sub    %r9d,%eax
mov    %eax,-0x40(%rbp,%rcx,1)
mov    %r9d,-0x30(%rbp,%rcx,1)
mov    %r8,%r9
xor    %r8d,%r8d
movzbl 0x11(%rdi),%ecx
cmp    $0x7,%cl
jbe    27210 <png_do_shift+0xd0>
cmp    $0x8,%cl
je     2723e <png_do_shift+0xfe>
mov    (%rdi),%edi
imul   %r9d,%edi
mov    %r13,-0x10(%rbp)
mov    %r14,-0x18(%rbp)
mov    %r15,-0x20(%rbp)
mov    %r8,%r10
jmp    2728b <png_do_shift+0x14b>
mov    0x8(%rdi),%rdi
movzbl 0x3(%rdx),%eax
cmp    $0x1,%al
je     272a2 <png_do_shift+0x162>
mov    $0xff,%edx
cmp    $0x4,%cl
je     272bd <png_do_shift+0x17d>
mov    %r14,-0x8(%rbp)
mov    %r15,-0x20(%rbp)
mov    %r8,%r9
jmpq   272fb <png_do_shift+0x1bb>
mov    (%rdi),%edi
imul   %r9d,%edi
mov    %r13,-0x10(%rbp)
mov    %r14,-0x18(%rbp)
mov    %r15,-0x20(%rbp)
mov    %r8,%r10
jmpq   27338 <png_do_shift+0x1f8>
mov    %r11,%r14
shl    %cl,%r14d
or     %r14d,%eax
sub    %r13d,%ecx
movslq -0x30(%rbp,%rdx,4),%r13
mov    %r13,%r14
neg    %r14d
cmp    %ecx,%r14d
jl     2734f <png_do_shift+0x20f>
mov    %rax,%rcx
shr    $0x8,%ecx
mov    %cl,(%rsi)
mov    %al,0x1(%rsi)
add    $0x1,%r10d
add    $0x2,%rsi
cmp    %edi,%r10d
jb     27370 <png_do_shift+0x230>
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
leaveq 
retq   
cmp    $0x2,%cl
jne    27220 <png_do_shift+0xe0>
mov    $0x55,%edx
mov    %r14,-0x8(%rbp)
mov    %r15,-0x20(%rbp)
mov    %r8,%r9
jmp    272fb <png_do_shift+0x1bb>
cmp    $0x3,%al
je     27395 <png_do_shift+0x255>
mov    %r14,-0x8(%rbp)
mov    %r15,-0x20(%rbp)
mov    %r8,%r9
jmp    272fb <png_do_shift+0x1bb>
mov    %r10,%r14
shl    %cl,%r14d
or     %r14d,%eax
sub    %r11d,%ecx
movslq -0x30(%rbp),%r11
mov    %r11,%r14
neg    %r14d
cmp    %ecx,%r14d
jl     273aa <png_do_shift+0x26a>
mov    %al,(%rsi)
add    $0x1,%r9
add    $0x1,%rsi
cmp    %rdi,%r9
jb     273d0 <png_do_shift+0x290>
mov    -0x20(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
mov    %r11,%r14
shl    %cl,%r14d
or     %r14d,%eax
sub    %r13d,%ecx
movslq -0x30(%rbp,%rdx,4),%r13
mov    %r13,%r14
neg    %r14d
cmp    %ecx,%r14d
jl     273e0 <png_do_shift+0x2a0>
mov    %al,(%rsi)
add    $0x1,%r10d
add    $0x1,%rsi
cmp    %edi,%r10d
jb     27401 <png_do_shift+0x2c1>
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
leaveq 
retq   
test   %ecx,%ecx
jg     27258 <png_do_shift+0x118>
mov    %rcx,%r15
mov    %r15,%rcx
neg    %ecx
mov    %r11,%r14
shr    %cl,%r14d
or     %r14d,%eax
mov    %r15,%rcx
jmpq   27261 <png_do_shift+0x121>
xor    %edx,%edx
mov    %r10,%rax
div    %r9d
mov    %edx,%edx
movslq -0x40(%rbp,%rdx,4),%rcx
movzbl 0x1(%rsi),%r11d
movzbl (%rsi),%eax
shl    $0x8,%eax
add    %eax,%r11d
mov    %r8,%rax
jmpq   27264 <png_do_shift+0x124>
mov    $0x11,%edx
mov    %r14,-0x8(%rbp)
mov    %r15,-0x20(%rbp)
mov    %r8,%r9
jmpq   272fb <png_do_shift+0x1bb>
test   %ecx,%ecx
jg     272d2 <png_do_shift+0x192>
mov    %rcx,%r15
mov    %r15,%rcx
neg    %ecx
mov    %r10,%r14
shr    %cl,%r14d
mov    %rdx,%rcx
and    %r14d,%ecx
or     %ecx,%eax
mov    %r15,%rcx
jmpq   272db <png_do_shift+0x19b>
movzbl (%rsi),%r10d
movslq -0x40(%rbp),%rcx
mov    %r8,%rax
jmpq   272de <png_do_shift+0x19e>
test   %ecx,%ecx
jg     2730e <png_do_shift+0x1ce>
mov    %rcx,%r15
mov    %r15,%rcx
neg    %ecx
mov    %r11,%r14
shr    %cl,%r14d
or     %r14d,%eax
mov    %r15,%rcx
jmpq   27317 <png_do_shift+0x1d7>
movzbl (%rsi),%r11d
xor    %edx,%edx
mov    %r10,%rax
div    %r9d
mov    %edx,%edx
movslq -0x40(%rbp,%rdx,4),%rcx
mov    %r8,%rax
jmpq   2731a <png_do_shift+0x1da>
nopl   0x0(%rax)

0000000000027420 <png_do_write_swap_alpha>:
push   %rbp
mov    %rsp,%rbp
xor    %eax,%eax
movzbl 0x10(%rdi),%ecx
cmp    $0x6,%cl
je     27436 <png_do_write_swap_alpha+0x16>
cmp    $0x4,%cl
je     27444 <png_do_write_swap_alpha+0x24>
leaveq 
retq   
movzbl 0x11(%rdi),%ecx
cmp    $0x8,%cl
je     27451 <png_do_write_swap_alpha+0x31>
mov    (%rdi),%r8d
jmp    27496 <png_do_write_swap_alpha+0x76>
movzbl 0x11(%rdi),%ecx
cmp    $0x8,%cl
je     2749d <png_do_write_swap_alpha+0x7d>
mov    (%rdi),%edx
jmp    274c5 <png_do_write_swap_alpha+0xa5>
mov    (%rdi),%edi
jmpq   274ec <png_do_write_swap_alpha+0xcc>
movzbl 0x2(%rsi),%edi
movzbl 0x3(%rsi),%edx
movzbl 0x4(%rsi),%ecx
mov    %cl,0x2(%rsi)
movzbl 0x5(%rsi),%ecx
mov    %cl,0x3(%rsi)
movzbl 0x6(%rsi),%ecx
mov    %cl,0x4(%rsi)
movzbl 0x7(%rsi),%ecx
mov    %cl,0x5(%rsi)
movzbl (%rsi),%ecx
mov    %dil,(%rsi)
mov    %cl,0x6(%rsi)
movzbl 0x1(%rsi),%ecx
mov    %dl,0x1(%rsi)
mov    %cl,0x7(%rsi)
add    $0x1,%eax
add    $0x8,%rsi
cmp    %r8d,%eax
jb     27458 <png_do_write_swap_alpha+0x38>
leaveq 
retq   
mov    (%rdi),%edi
jmp    27505 <png_do_write_swap_alpha+0xe5>
movzbl 0x2(%rsi),%ecx
movzbl 0x3(%rsi),%r8d
movzbl (%rsi),%edi
mov    %cl,(%rsi)
mov    %dil,0x2(%rsi)
movzbl 0x1(%rsi),%ecx
mov    %r8b,0x1(%rsi)
mov    %cl,0x3(%rsi)
add    $0x1,%eax
add    $0x4,%rsi
cmp    %edx,%eax
jb     274a1 <png_do_write_swap_alpha+0x81>
leaveq 
retq   
movzbl 0x1(%rsi),%edx
movzbl 0x2(%rsi),%ecx
mov    %cl,0x1(%rsi)
movzbl 0x3(%rsi),%ecx
mov    %cl,0x2(%rsi)
movzbl (%rsi),%ecx
mov    %dl,(%rsi)
mov    %cl,0x3(%rsi)
add    $0x1,%eax
add    $0x4,%rsi
cmp    %edi,%eax
jb     274cb <png_do_write_swap_alpha+0xab>
leaveq 
retq   
movzbl 0x1(%rsi),%edx
movzbl (%rsi),%ecx
mov    %dl,(%rsi)
mov    %cl,0x1(%rsi)
add    $0x1,%eax
add    $0x2,%rsi
cmp    %edi,%eax
jb     274f2 <png_do_write_swap_alpha+0xd2>
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

0000000000027510 <png_do_write_invert_alpha>:
push   %rbp
mov    %rsp,%rbp
xor    %eax,%eax
movzbl 0x10(%rdi),%ecx
cmp    $0x6,%cl
je     27526 <png_do_write_invert_alpha+0x16>
cmp    $0x4,%cl
je     27533 <png_do_write_invert_alpha+0x23>
leaveq 
retq   
movzbl 0x11(%rdi),%ecx
cmp    $0x8,%cl
je     27540 <png_do_write_invert_alpha+0x30>
mov    (%rdi),%edx
jmp    27561 <png_do_write_invert_alpha+0x51>
movzbl 0x11(%rdi),%ecx
cmp    $0x8,%cl
je     27567 <png_do_write_invert_alpha+0x57>
mov    (%rdi),%edx
jmp    27588 <png_do_write_invert_alpha+0x78>
mov    (%rdi),%edi
lea    0x3(%rsi),%rcx
jmp    2759c <png_do_write_invert_alpha+0x8c>
movzbl 0x6(%rsi),%ecx
not    %ecx
mov    %cl,0x6(%rsi)
movzbl 0x7(%rsi),%ecx
not    %ecx
mov    %cl,0x7(%rsi)
add    $0x1,%eax
add    $0x8,%rsi
cmp    %edx,%eax
jb     27548 <png_do_write_invert_alpha+0x38>
leaveq 
retq   
mov    (%rdi),%edi
lea    0x1(%rsi),%rcx
jmp    275b0 <png_do_write_invert_alpha+0xa0>
movzbl 0x2(%rsi),%ecx
not    %ecx
mov    %cl,0x2(%rsi)
movzbl 0x3(%rsi),%ecx
not    %ecx
mov    %cl,0x3(%rsi)
add    $0x1,%eax
add    $0x4,%rsi
cmp    %edx,%eax
jb     2756f <png_do_write_invert_alpha+0x5f>
leaveq 
retq   
movzbl (%rcx),%edx
not    %edx
mov    %dl,(%rcx)
add    $0x1,%eax
add    $0x4,%rcx
cmp    %edi,%eax
jb     2758e <png_do_write_invert_alpha+0x7e>
leaveq 
retq   
movzbl (%rcx),%edx
not    %edx
mov    %dl,(%rcx)
add    $0x1,%eax
add    $0x2,%rcx
cmp    %edi,%eax
jb     275a2 <png_do_write_invert_alpha+0x92>
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)

00000000000275c0 <png_write_sig>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x8(%rbp)
movabs $0xa1a0a0d474e5089,%rax
mov    %rax,-0x10(%rbp)
movl   $0x12,0x46c(%rdi)
movzbl 0x26d(%rdi),%ecx
mov    $0x8,%eax
sub    %ecx,%eax
movslq %eax,%rdx
lea    -0x10(%rbp,%rcx,1),%rsi
mov    %rdi,%r15
callq  23e50 <png_write_data>
movzbl 0x26d(%r15),%eax
cmp    $0x2,%al
jbe    27614 <png_write_sig+0x54>
mov    -0x8(%rbp),%r15
leaveq 
retq   
mov    0x12c(%r15),%eax
or     $0x1000,%eax
mov    %eax,0x12c(%r15)
mov    -0x8(%rbp),%r15
leaveq 
retq   
nopl   (%rax)

0000000000027630 <png_write_chunk>:
push   %rbp
mov    %rsp,%rbp
movzbl (%rsi),%r8d
shl    $0x18,%r8d
movzbl 0x1(%rsi),%eax
shl    $0x10,%eax
add    %eax,%r8d
movzbl 0x2(%rsi),%eax
shl    $0x8,%eax
add    %eax,%r8d
movzbl 0x3(%rsi),%eax
lea    (%r8,%rax,1),%esi
callq  29fe0 <png_write_complete_chunk>
leaveq 
retq   
nop

0000000000027660 <png_write_chunk_start>:
push   %rbp
mov    %rsp,%rbp
movzbl (%rsi),%ecx
shl    $0x18,%ecx
movzbl 0x1(%rsi),%eax
shl    $0x10,%eax
add    %eax,%ecx
movzbl 0x2(%rsi),%eax
shl    $0x8,%eax
add    %ecx,%eax
movzbl 0x3(%rsi),%ecx
lea    (%rax,%rcx,1),%esi
callq  29f50 <png_write_chunk_header>
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

0000000000027690 <png_write_chunk_data>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
test   %rdi,%rdi
jne    2769f <png_write_chunk_data+0xf>
leaveq 
retq   
test   %rsi,%rsi
jne    276a6 <png_write_chunk_data+0x16>
leaveq 
retq   
test   %rdx,%rdx
jne    276ad <png_write_chunk_data+0x1d>
leaveq 
retq   
mov    %rdi,%r8
mov    %rsi,%rax
mov    %rdx,%rcx
mov    %r13,-0x8(%rbp)
mov    %r14,-0x10(%rbp)
mov    %r15,-0x18(%rbp)
mov    %rdx,%r13
mov    %rcx,%rdx
mov    %rdi,%r14
mov    %r8,%rdi
mov    %rsi,%r15
mov    %rax,%rsi
callq  23e50 <png_write_data>
mov    %r13,%rdx
mov    %r15,%rsi
mov    %r14,%rdi
callq  6dc0 <png_calculate_crc>
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)

0000000000027700 <png_write_chunk_end>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
test   %rdi,%rdi
jne    2770f <png_write_chunk_end+0xf>
leaveq 
retq   
movl   $0x82,0x46c(%rdi)
lea    -0xc(%rbp),%rax
mov    0x24c(%rdi),%esi
mov    %r15,-0x8(%rbp)
mov    %rdi,%r15
mov    %rax,%rdi
callq  5500 <png_save_uint_32@plt>
mov    %r15,%rdi
mov    $0x4,%edx
lea    -0xc(%rbp),%rsi
callq  23e50 <png_write_data>
mov    -0x8(%rbp),%r15
leaveq 
retq   
nopl   0x0(%rax)

0000000000027750 <png_save_uint_32>:
push   %rbp
mov    %rsp,%rbp
mov    %rsi,%rax
shr    $0x18,%eax
mov    %al,(%rdi)
mov    %rsi,%rax
shr    $0x10,%eax
mov    %al,0x1(%rdi)
mov    %rsi,%rax
shr    $0x8,%eax
mov    %al,0x2(%rdi)
mov    %sil,0x3(%rdi)
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nop

0000000000027780 <png_save_uint_16>:
push   %rbp
mov    %rsp,%rbp
mov    %rsi,%rax
shr    $0x8,%eax
mov    %al,(%rdi)
mov    %sil,0x1(%rdi)
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   (%rax)

00000000000277a0 <png_free_buffer_list>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    (%rsi),%rax
test   %rax,%rax
jne    277b2 <png_free_buffer_list+0x12>
leaveq 
retq   
movq   $0x0,(%rsi)
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rax,%rsi
mov    %rdi,%r14
jmp    277cc <png_free_buffer_list+0x2c>
mov    %r15,%rsi
mov    (%rsi),%r15
mov    %r14,%rdi
callq  5790 <png_free@plt>
test   %r15,%r15
jne    277c9 <png_free_buffer_list+0x29>
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)

00000000000277f0 <png_write_IHDR>:
push   %rbp
mov    %rsp,%rbp
sub    $0x60,%rsp
cmp    $0x6,%r8d
ja     27825 <png_write_IHDR+0x35>
mov    $0x1,%eax
xor    %r11d,%r11d
lea    0x856f(%rip),%r10        # 2fd7c <fourbppswaptable+0x730>
mov    %r15,-0x40(%rbp)
movslq (%r10,%r8,4),%r15
add    %r15,%r10
jmpq   *%r10
cmp    $0x8,%ecx
jne    27892 <png_write_IHDR+0xa2>
mov    %r11,%r10
jmp    27895 <png_write_IHDR+0xa5>
lea    0x8664(%rip),%rsi        # 2fe90 <fourbppswaptable+0x844>
callq  5470 <png_error@plt>
lea    -0x1(%rcx),%r10d
cmp    $0xf,%r10d
ja     278b3 <png_write_IHDR+0xc3>
lea    0x8556(%rip),%r15        # 2fd98 <fourbppswaptable+0x74c>
movslq (%r15,%r10,4),%r10
add    %r15,%r10
jmpq   *%r10
movb   $0x1,0x26b(%rdi)
jmp    278d0 <png_write_IHDR+0xe0>
cmp    $0x8,%ecx
jne    278f5 <png_write_IHDR+0x105>
mov    %r11,%r10
jmpq   278f8 <png_write_IHDR+0x108>
cmp    $0x3,%ecx
jle    278bf <png_write_IHDR+0xcf>
cmp    $0x4,%ecx
je     278c9 <png_write_IHDR+0xd9>
cmp    $0x8,%ecx
je     278c9 <png_write_IHDR+0xd9>
lea    0x85a2(%rip),%rsi        # 2fe1e <fourbppswaptable+0x7d2>
callq  5470 <png_error@plt>
cmp    $0x8,%ecx
jne    27916 <png_write_IHDR+0x126>
mov    %r11,%r10
jmpq   27919 <png_write_IHDR+0x129>
mov    %rax,%r10
test   %r10d,%r10d
jg     27937 <png_write_IHDR+0x147>
mov    %r11,%r10
test   %r10d,%r10d
jg     27948 <png_write_IHDR+0x158>
movb   $0x4,0x26b(%rdi)
jmp    278d0 <png_write_IHDR+0xe0>
lea    0x851e(%rip),%rsi        # 2fdd8 <fourbppswaptable+0x78c>
callq  5470 <png_error@plt>
cmp    $0x1,%ecx
je     278c9 <png_write_IHDR+0xd9>
cmp    $0x2,%ecx
jne    27875 <png_write_IHDR+0x85>
movb   $0x1,0x26b(%rdi)
test   %r9d,%r9d
jne    27954 <png_write_IHDR+0x164>
mov    %r12,%r9
mov    %r8,%r12
mov    %r14,%r8
mov    %rsi,%r14
mov    %rbx,%r10
mov    %rcx,%rbx
mov    %r11,%r15
mov    %r13,%r11
mov    %rdx,%r13
jmpq   279a3 <png_write_IHDR+0x1b3>
mov    %rax,%r10
test   %r10d,%r10d
jg     279c0 <png_write_IHDR+0x1d0>
mov    %r11,%r10
test   %r10d,%r10d
jg     279d1 <png_write_IHDR+0x1e1>
movb   $0x3,0x26b(%rdi)
jmp    278d0 <png_write_IHDR+0xe0>
mov    %rax,%r10
test   %r10d,%r10d
jg     279dd <png_write_IHDR+0x1ed>
mov    %r11,%r10
test   %r10d,%r10d
jg     279ee <png_write_IHDR+0x1fe>
movb   $0x2,0x26b(%rdi)
jmp    278d0 <png_write_IHDR+0xe0>
cmp    $0x10,%ecx
jne    279fa <png_write_IHDR+0x20a>
mov    %r11,%r10
jmpq   278a1 <png_write_IHDR+0xb1>
lea    0x8520(%rip),%rsi        # 2fe6f <fourbppswaptable+0x823>
callq  5470 <png_error@plt>
lea    0x8558(%rip),%r9        # 2feb3 <fourbppswaptable+0x867>
mov    %rdi,%rax
mov    %rbx,-0x10(%rbp)
mov    %r12,-0x20(%rbp)
mov    %r13,-0x30(%rbp)
mov    %r14,-0x48(%rbp)
mov    %rcx,%rbx
mov    %r8,%r12
mov    %rdx,%r13
mov    %rsi,%r14
mov    %r9,%rsi
mov    %rdi,%r15
mov    %rax,%rdi
callq  5390 <png_warning@plt>
mov    %r15,%rdi
mov    -0x48(%rbp),%r8
mov    -0x30(%rbp),%r11
mov    -0x20(%rbp),%r9
mov    -0x10(%rbp),%r10
mov    $0x1,%eax
xor    %r15d,%r15d
movslq 0x10(%rbp),%rdx
mov    0x3d8(%rdi),%ecx
and    $0x4,%ecx
test   %ecx,%ecx
jne    27a02 <png_write_IHDR+0x212>
test   %edx,%edx
jne    27a28 <png_write_IHDR+0x238>
mov    %r15,%rcx
jmpq   27a6a <png_write_IHDR+0x27a>
cmp    $0x10,%ecx
jne    27acc <png_write_IHDR+0x2dc>
mov    %r11,%r10
jmpq   27904 <png_write_IHDR+0x114>
lea    0x8426(%rip),%rsi        # 2fdfe <fourbppswaptable+0x7b2>
callq  5470 <png_error@plt>
cmp    $0x10,%ecx
jne    27ad4 <png_write_IHDR+0x2e4>
mov    %r11,%r10
jmpq   27925 <png_write_IHDR+0x135>
lea    0x844e(%rip),%rsi        # 2fe43 <fourbppswaptable+0x7f7>
callq  5470 <png_error@plt>
mov    %rax,%r10
jmpq   278a1 <png_write_IHDR+0xb1>
mov    0x12c(%rdi),%ecx
and    $0x1000,%ecx
test   %ecx,%ecx
jne    279b4 <png_write_IHDR+0x1c4>
cmp    $0x2,%r12d
jne    27adc <png_write_IHDR+0x2ec>
cmp    $0x40,%edx
jne    279b4 <png_write_IHDR+0x1c4>
mov    $0x40,%ecx
jmp    27a6a <png_write_IHDR+0x27a>
lea    0x84a7(%rip),%rsi        # 2fed6 <fourbppswaptable+0x88a>
mov    %rdi,%rax
mov    %r10,-0x10(%rbp)
mov    %r9,-0x20(%rbp)
mov    %r11,-0x30(%rbp)
mov    %r8,-0x48(%rbp)
mov    %rdi,%r15
mov    %rax,%rdi
callq  5390 <png_warning@plt>
mov    %r15,%rdi
mov    -0x48(%rbp),%r8
mov    -0x30(%rbp),%r11
mov    -0x20(%rbp),%r9
mov    -0x10(%rbp),%r10
mov    $0x1,%eax
xor    %ecx,%ecx
mov    %rcx,%r15
movslq 0x18(%rbp),%rdx
test   %edx,%edx
jne    27aeb <png_write_IHDR+0x2fb>
mov    %bl,0x268(%rdi)
mov    %r12b,0x267(%rdi)
mov    %r15b,0x264(%rdi)
mov    %cl,0x3dc(%rdi)
movb   $0x0,0x418(%rdi)
mov    %r14d,0x1f8(%rdi)
mov    %r13d,0x1fc(%rdi)
movzbl 0x26b(%rdi),%esi
mov    %rbx,%rax
imul   %sil
mov    %al,0x26a(%rdi)
cmp    $0x7,%al
ja     27afc <png_write_IHDR+0x30c>
movzbl %al,%eax
mov    %r14d,%edx
imul   %rdx,%rax
add    $0x7,%rax
shr    $0x3,%rax
jmp    27b0a <png_write_IHDR+0x31a>
mov    %rax,%r10
jmpq   27904 <png_write_IHDR+0x114>
mov    %rax,%r10
jmpq   27925 <png_write_IHDR+0x135>
cmp    $0x6,%r12d
je     27a1c <png_write_IHDR+0x22c>
jmpq   279b4 <png_write_IHDR+0x1c4>
cmp    $0x1,%edx
jne    27baf <png_write_IHDR+0x3bf>
mov    %rax,%r15
jmpq   27a72 <png_write_IHDR+0x282>
movzbl %al,%eax
shr    $0x3,%rax
mov    %r14d,%edx
imul   %rdx,%rax
mov    %rax,0x208(%rdi)
mov    %r14d,0x204(%rdi)
mov    %bl,0x269(%rdi)
mov    %sil,0x26c(%rdi)
lea    -0x55(%rbp),%rax
mov    %r10,-0x8(%rbp)
mov    %r9,-0x18(%rbp)
mov    %r11,-0x28(%rbp)
mov    %r8,-0x38(%rbp)
mov    %rdi,-0x48(%rbp)
mov    %r14,%rsi
mov    %rcx,%r14
mov    %rax,%rdi
callq  5500 <png_save_uint_32@plt>
mov    %r13,%rsi
lea    -0x51(%rbp),%rdi
callq  5500 <png_save_uint_32@plt>
mov    %bl,-0x4d(%rbp)
mov    %r12b,-0x4c(%rbp)
movb   $0x0,-0x4b(%rbp)
mov    %r14b,-0x4a(%rbp)
mov    %r15b,-0x49(%rbp)
mov    $0x49484452,%esi
mov    $0xd,%ecx
mov    -0x48(%rbp),%rbx
mov    %rbx,%rdi
lea    -0x55(%rbp),%rdx
callq  29fe0 <png_write_complete_chunk>
movzbl 0x266(%rbx),%eax
test   %al,%al
je     27c00 <png_write_IHDR+0x410>
movl   $0x1,0x12c(%rbx)
mov    -0x38(%rbp),%r14
mov    -0x28(%rbp),%r13
mov    -0x18(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x40(%rbp),%r15
leaveq 
retq   
lea    0x833e(%rip),%rsi        # 2fef4 <fourbppswaptable+0x8a8>
mov    %rdi,%rax
mov    %r10,-0x8(%rbp)
mov    %r9,-0x18(%rbp)
mov    %r11,-0x28(%rbp)
mov    %r8,-0x38(%rbp)
mov    %r13,-0x48(%rbp)
mov    %rcx,%r13
mov    %rdi,%r15
mov    %rax,%rdi
callq  5390 <png_warning@plt>
mov    %r13,%rcx
mov    %r15,%rdi
mov    -0x48(%rbp),%r13
mov    -0x38(%rbp),%r8
mov    -0x28(%rbp),%r11
mov    -0x18(%rbp),%r9
mov    -0x8(%rbp),%r10
mov    $0x1,%r15d
jmpq   27a72 <png_write_IHDR+0x282>
movzbl 0x267(%rbx),%eax
cmp    $0x3,%al
jne    27c17 <png_write_IHDR+0x427>
movb   $0x8,0x266(%rbx)
jmpq   27b8f <png_write_IHDR+0x39f>
movzbl 0x268(%rbx),%eax
cmp    $0x7,%al
jbe    27c0b <png_write_IHDR+0x41b>
movb   $0xf8,0x266(%rbx)
jmpq   27b8f <png_write_IHDR+0x39f>
xchg   %ax,%ax

0000000000027c30 <png_write_PLTE>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
movzbl 0x267(%rdi),%eax
cmp    $0x3,%al
je     27c63 <png_write_PLTE+0x33>
mov    %r13,%rax
mov    %rsi,%r13
mov    %r14,%r8
mov    %rbx,%r14
mov    %rdi,%rbx
mov    %r15,%r9
mov    %r12,%r15
mov    %rdx,%r12
mov    $0x100,%r10d
jmp    27c8b <png_write_PLTE+0x5b>
mov    %r13,%rax
mov    %rsi,%r13
mov    %r14,%r8
mov    %rbx,%r14
mov    %rdi,%rbx
mov    %r15,%r9
mov    %r12,%r15
mov    %rdx,%r12
mov    $0x1,%r10d
movzbl 0x268(%rbx),%ecx
shl    %cl,%r10d
mov    0x3d8(%rbx),%ecx
and    $0x1,%ecx
test   %ecx,%ecx
je     27cf2 <png_write_PLTE+0xc2>
cmp    %r10d,%r12d
ja     27cf7 <png_write_PLTE+0xc7>
movzbl 0x267(%rbx),%ecx
and    $0x2,%ecx
test   %ecx,%ecx
je     27d33 <png_write_PLTE+0x103>
mov    %r12w,0x258(%rbx)
mov    $0x504c5445,%esi
lea    (%r12,%r12,2),%edx
mov    %rbx,%rdi
mov    %rax,-0x18(%rbp)
mov    %r8,-0x20(%rbp)
mov    %r9,-0x28(%rbp)
callq  29f50 <png_write_chunk_header>
lea    -0x2b(%rbp),%rcx
mov    $0x3,%edx
xor    %eax,%eax
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rax,%r14
mov    %rcx,%r15
jmpq   27d8f <png_write_PLTE+0x15f>
test   %r12d,%r12d
jne    27c98 <png_write_PLTE+0x68>
lea    0x8217(%rip),%rsi        # 2ff15 <fourbppswaptable+0x8c9>
movzbl 0x267(%rbx),%ecx
cmp    $0x3,%cl
je     27dc1 <png_write_PLTE+0x191>
mov    %rbx,%rdi
mov    %r8,%rbx
mov    %r9,%r12
mov    %rax,%r13
callq  5390 <png_warning@plt>
mov    %r14,%rax
mov    %rbx,%r14
mov    %rax,%rbx
mov    %r15,%rax
mov    %r12,%r15
mov    %rax,%r12
leaveq 
retq   
mov    %rbx,%rdi
mov    %r8,%rbx
mov    %r9,%r12
mov    %rax,%r13
lea    0x81f3(%rip),%rsi        # 2ff39 <fourbppswaptable+0x8ed>
callq  5390 <png_warning@plt>
mov    %r14,%rax
mov    %rbx,%r14
mov    %rax,%rbx
mov    %r15,%rax
mov    %r12,%r15
mov    %rax,%r12
leaveq 
retq   
movzbl 0x0(%r13),%eax
mov    %al,-0x2b(%rbp)
movzbl 0x1(%r13),%eax
mov    %al,-0x2a(%rbp)
movzbl 0x2(%r13),%eax
mov    %al,-0x29(%rbp)
mov    %rbx,%rdi
mov    %r15,%rsi
callq  5100 <png_write_chunk_data@plt>
add    $0x1,%r14d
add    $0x3,%r13
mov    $0x3,%edx
cmp    %r14d,%r12d
ja     27d5f <png_write_PLTE+0x12f>
mov    %rbx,%rdi
callq  5480 <png_write_chunk_end@plt>
mov    0x12c(%rbx),%eax
or     $0x2,%eax
mov    %eax,0x12c(%rbx)
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
leaveq 
retq   
mov    %rbx,%rdi
callq  5470 <png_error@plt>
nopl   0x0(%rax)

0000000000027dd0 <png_compress_IDAT>:
push   %rbp
mov    %rsp,%rbp
sub    $0x40,%rsp
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    $0x49444154,%r14d
mov    0x138(%rdi),%eax
cmp    $0x49444154,%eax
jne    27e34 <png_compress_IDAT+0x64>
mov    %rdx,%rbx
mov    %rdi,%r12
mov    %rcx,%r13
mov    %rsi,%r15
lea    0x140(%r12),%r14
mov    %r14,-0x30(%rbp)
mov    %r15,(%r14)
movl   $0x0,0x148(%r12)
mov    $0xffffffff,%eax
xor    %esi,%esi
mov    $0xfffffffe,%ecx
jmp    27e72 <png_compress_IDAT+0xa2>
mov    0x1b0(%rdi),%rbx
test   %rbx,%rbx
je     27f8f <png_compress_IDAT+0x1bf>
mov    %rcx,%r13
mov    %rsi,%r15
mov    %rbx,%rsi
mov    %rdx,%rbx
mov    %rdi,%r12
callq  277a0 <png_free_buffer_list>
jmpq   27fbc <png_compress_IDAT+0x1ec>
test   %rbx,%rbx
je     27fff <png_compress_IDAT+0x22f>
xor    %esi,%esi
mov    $0xffffffff,%eax
mov    $0xfffffffe,%ecx
cmp    %rcx,%rbx
ja     27e7a <png_compress_IDAT+0xaa>
mov    %rbx,%rax
mov    %eax,0x148(%r12)
mov    %eax,%r15d
cmp    %rbx,%r15
jne    27e8d <png_compress_IDAT+0xbd>
mov    %r13,%rsi
mov    %r14,%rdi
callq  5330 <deflate@plt>
sub    %r15,%rbx
mov    0x148(%r12),%ecx
movl   $0x0,0x148(%r12)
add    %rcx,%rbx
mov    0x160(%r12),%ecx
test   %ecx,%ecx
jne    2801b <png_compress_IDAT+0x24b>
mov    0x1b8(%r12),%r8d
mov    0x1b0(%r12),%r15
add    $0x8,%r15
mov    0x12c(%r12),%ecx
and    $0x4,%ecx
test   %ecx,%ecx
jne    27f1a <png_compress_IDAT+0x14a>
movzbl 0x418(%r12),%ecx
test   %cl,%cl
jne    27f1a <png_compress_IDAT+0x14a>
mov    %r12,%rdi
mov    %rbx,-0x38(%rbp)
mov    %rax,%rbx
mov    %r8,%r14
callq  2a050 <png_image_size>
mov    %rax,%rsi
mov    %r15,%rdi
callq  2a210 <optimize_cmf>
mov    %rbx,%rax
mov    %r14,%r8
mov    -0x30(%rbp),%r14
mov    -0x38(%rbp),%rbx
test   %r8d,%r8d
je     27f4a <png_compress_IDAT+0x17a>
mov    %r12,%rdi
mov    $0x49444154,%esi
mov    %r15,%rdx
mov    %r8,%rcx
mov    %rbx,-0x38(%rbp)
mov    %r8,%rbx
mov    %rax,%r14
callq  29fe0 <png_write_complete_chunk>
mov    %r14,%rax
mov    %rbx,%r8
mov    -0x30(%rbp),%r14
mov    -0x38(%rbp),%rbx
mov    0x12c(%r12),%ecx
or     $0x4,%ecx
test   %eax,%eax
mov    %ecx,0x12c(%r12)
mov    %r15,0x158(%r12)
mov    %r8d,0x160(%r12)
jne    2801b <png_compress_IDAT+0x24b>
test   %r13d,%r13d
je     2801b <png_compress_IDAT+0x24b>
xor    %esi,%esi
mov    $0xffffffff,%eax
mov    $0xfffffffe,%ecx
jmpq   27e72 <png_compress_IDAT+0xa2>
mov    0x1b8(%rdi),%eax
add    $0x8,%rax
mov    %rdx,%rbx
mov    %rcx,%r13
mov    %rsi,%r15
mov    %rax,%rsi
mov    %rdi,%r12
callq  5800 <png_malloc@plt>
mov    %rax,0x1b0(%r12)
movq   $0x0,(%rax)
mov    %r12,%rdi
callq  2a050 <png_image_size>
mov    %rax,%rdx
mov    %r14,%rsi
mov    %r12,%rdi
callq  2a2b0 <png_deflate_claim>
test   %eax,%eax
jne    28042 <png_compress_IDAT+0x272>
mov    0x1b0(%r12),%rax
add    $0x8,%rax
mov    %rax,0x158(%r12)
mov    0x1b8(%r12),%eax
mov    %eax,0x160(%r12)
jmpq   27e0b <png_compress_IDAT+0x3b>
cmp    $0x4,%r13d
je     28051 <png_compress_IDAT+0x281>
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
test   %eax,%eax
je     27e5d <png_compress_IDAT+0x8d>
cmp    $0x1,%eax
je     28060 <png_compress_IDAT+0x290>
mov    %rax,%rsi
mov    %r12,%rdi
callq  6920 <png_zstream_error>
mov    %r12,%rdi
mov    0x170(%rdi),%rsi
callq  5470 <png_error@plt>
mov    %r12,%rdi
mov    0x170(%rdi),%rsi
callq  5470 <png_error@plt>
mov    %r12,%rdi
lea    0x7f16(%rip),%rsi        # 2ff71 <fourbppswaptable+0x925>
callq  5470 <png_error@plt>
cmp    $0x4,%r13d
jne    28028 <png_compress_IDAT+0x258>
mov    0x1b8(%r12),%r13d
mov    0x160(%r12),%r14d
mov    0x1b0(%r12),%rbx
add    $0x8,%rbx
mov    0x12c(%r12),%eax
and    $0x4,%eax
test   %eax,%eax
je     280f9 <png_compress_IDAT+0x329>
cmp    %r13d,%r14d
je     280ac <png_compress_IDAT+0x2dc>
sub    %r14d,%r13d
mov    %r13d,%ecx
mov    %rbx,%rdx
mov    %r12,%rdi
mov    $0x49444154,%esi
callq  29fe0 <png_write_complete_chunk>
movl   $0x0,0x160(%r12)
movq   $0x0,0x158(%r12)
mov    0x12c(%r12),%eax
or     $0xc,%eax
mov    %eax,0x12c(%r12)
movl   $0x0,0x138(%r12)
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
movzbl 0x418(%r12),%eax
test   %al,%al
jne    28091 <png_compress_IDAT+0x2c1>
mov    %r12,%rdi
callq  2a050 <png_image_size>
mov    %rax,%rsi
mov    %rbx,%rdi
callq  2a210 <optimize_cmf>
jmpq   28091 <png_compress_IDAT+0x2c1>
xchg   %ax,%ax

0000000000028120 <png_write_IEND>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x8(%rbp)
mov    $0x49454e44,%esi
xor    %edx,%edx
mov    %rdx,%rcx
mov    %rdi,%r15
callq  29fe0 <png_write_complete_chunk>
mov    0x12c(%r15),%eax
or     $0x10,%eax
mov    %eax,0x12c(%r15)
mov    -0x8(%rbp),%r15
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)

0000000000028160 <png_write_gAMA_fixed>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x8(%rbp)
mov    %rdi,%r15
lea    -0xc(%rbp),%rdi
callq  5500 <png_save_uint_32@plt>
mov    %r15,%rdi
mov    $0x67414d41,%esi
mov    $0x4,%ecx
lea    -0xc(%rbp),%rdx
callq  29fe0 <png_write_complete_chunk>
mov    -0x8(%rbp),%r15
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nop

00000000000281a0 <png_write_sBIT>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
lea    0x7de5(%rip),%r10        # 2ff94 <fourbppswaptable+0x948>
mov    %rdx,%rax
and    $0x2,%eax
test   %eax,%eax
jg     281f0 <png_write_sBIT+0x50>
movzbl 0x3(%rsi),%ecx
test   %cl,%cl
je     2823a <png_write_sBIT+0x9a>
movzbl 0x269(%rdi),%eax
cmp    %al,%cl
ja     2823a <png_write_sBIT+0x9a>
mov    %cl,-0x4(%rbp)
mov    $0x1,%ecx
mov    $0x2,%eax
and    $0x4,%edx
test   %edx,%edx
jg     28244 <png_write_sBIT+0xa4>
mov    $0x73424954,%esi
lea    -0x4(%rbp),%rdx
callq  29fe0 <png_write_complete_chunk>
leaveq 
retq   
cmp    $0x3,%edx
jne    28266 <png_write_sBIT+0xc6>
mov    $0x8,%eax
movzbl (%rsi),%r9d
test   %r9b,%r9b
je     2826f <png_write_sBIT+0xcf>
cmp    %al,%r9b
ja     2826f <png_write_sBIT+0xcf>
movzbl 0x1(%rsi),%r8d
test   %r8b,%r8b
je     2826f <png_write_sBIT+0xcf>
cmp    %r8b,%al
jb     2826f <png_write_sBIT+0xcf>
movzbl 0x2(%rsi),%ecx
test   %cl,%cl
je     2826f <png_write_sBIT+0xcf>
cmp    %cl,%al
jb     2826f <png_write_sBIT+0xcf>
mov    %r9b,-0x4(%rbp)
mov    %r8b,-0x3(%rbp)
mov    %cl,-0x2(%rbp)
mov    $0x3,%ecx
mov    $0x4,%eax
jmp    281d9 <png_write_sBIT+0x39>
mov    %r10,%rsi
callq  5390 <png_warning@plt>
leaveq 
retq   
movzbl 0x4(%rsi),%esi
test   %sil,%sil
je     28279 <png_write_sBIT+0xd9>
movzbl 0x269(%rdi),%edx
cmp    %dl,%sil
ja     28279 <png_write_sBIT+0xd9>
mov    %sil,-0x4(%rbp,%rcx,1)
mov    %rax,%rcx
jmpq   281e0 <png_write_sBIT+0x40>
movzbl 0x269(%rdi),%eax
jmp    281fa <png_write_sBIT+0x5a>
mov    %r10,%rsi
callq  5390 <png_warning@plt>
leaveq 
retq   
mov    %r10,%rsi
callq  5390 <png_warning@plt>
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

0000000000028290 <png_write_cHRM_fixed>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rdi,%r14
mov    %rsi,%r15
lea    -0x30(%rbp),%rdi
movslq 0x18(%r15),%rsi
callq  5520 <png_save_int_32@plt>
lea    -0x2c(%rbp),%rdi
movslq 0x1c(%r15),%rsi
callq  5520 <png_save_int_32@plt>
lea    -0x28(%rbp),%rdi
movslq (%r15),%rsi
callq  5520 <png_save_int_32@plt>
lea    -0x24(%rbp),%rdi
movslq 0x4(%r15),%rsi
callq  5520 <png_save_int_32@plt>
lea    -0x20(%rbp),%rdi
movslq 0x8(%r15),%rsi
callq  5520 <png_save_int_32@plt>
lea    -0x1c(%rbp),%rdi
movslq 0xc(%r15),%rsi
callq  5520 <png_save_int_32@plt>
lea    -0x18(%rbp),%rdi
movslq 0x10(%r15),%rsi
callq  5520 <png_save_int_32@plt>
lea    -0x14(%rbp),%rdi
movslq 0x14(%r15),%rsi
callq  5520 <png_save_int_32@plt>
mov    %r14,%rdi
mov    $0x6348524d,%esi
mov    $0x20,%ecx
lea    -0x30(%rbp),%rdx
callq  29fe0 <png_write_complete_chunk>
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
nopl   (%rax)

0000000000028330 <png_write_sRGB>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
cmp    $0x3,%esi
jle    2836e <png_write_sRGB+0x3e>
lea    0x7c6d(%rip),%rcx        # 2ffb1 <fourbppswaptable+0x965>
mov    %rdi,%rax
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rsi,%r14
mov    %rcx,%rsi
mov    %rdi,%r15
mov    %rax,%rdi
callq  5390 <png_warning@plt>
mov    %r14,%rsi
mov    %r15,%rdi
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
mov    %sil,-0x11(%rbp)
mov    $0x73524742,%esi
lea    -0x11(%rbp),%rdx
mov    $0x1,%ecx
callq  29fe0 <png_write_complete_chunk>
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

0000000000028390 <png_write_eXIf>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %rsi,%r13
mov    $0x65584966,%esi
mov    %rdi,%rbx
mov    %rdx,%r12
callq  29f50 <png_write_chunk_header>
lea    -0x29(%rbp),%r14
mov    $0x1,%edx
xor    %r15d,%r15d
jmp    283ed <png_write_eXIf+0x5d>
movslq %r15d,%rax
movzbl 0x0(%r13,%rax,1),%eax
mov    %al,-0x29(%rbp)
mov    %rbx,%rdi
mov    %r14,%rsi
callq  5100 <png_write_chunk_data@plt>
add    $0x1,%r15d
mov    $0x1,%edx
cmp    %r12d,%r15d
jl     283cd <png_write_eXIf+0x3d>
mov    %rbx,%rdi
callq  5480 <png_write_chunk_end@plt>
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
leaveq 
retq   

0000000000028410 <png_write_iCCP>:
push   %rbp
mov    %rsp,%rbp
sub    $0x490,%rsp
test   %rdx,%rdx
je     28527 <png_write_iCCP+0x117>
movzbl (%rdx),%eax
shl    $0x18,%eax
movzbl 0x1(%rdx),%ecx
shl    $0x10,%ecx
add    %eax,%ecx
movzbl 0x2(%rdx),%eax
shl    $0x8,%eax
add    %eax,%ecx
movzbl 0x3(%rdx),%eax
add    %eax,%ecx
cmp    $0x83,%ecx
jbe    28533 <png_write_iCCP+0x123>
movzbl 0x8(%rdx),%eax
cmp    $0x3,%al
ja     2853f <png_write_iCCP+0x12f>
lea    -0x481(%rbp),%rax
mov    %rdi,%r8
mov    %r13,-0x8(%rbp)
mov    %r14,-0x10(%rbp)
mov    %r15,-0x18(%rbp)
mov    %rdi,%r13
mov    %r8,%rdi
mov    %rcx,%r14
mov    %rdx,%r15
mov    %rax,%rdx
callq  23280 <png_check_keyword>
test   %eax,%eax
je     28559 <png_write_iCCP+0x149>
lea    0x1(%rax),%ecx
mov    %ecx,%ecx
movb   $0x0,-0x481(%rbp,%rcx,1)
lea    -0x430(%rbp),%rcx
mov    %r14d,%edx
mov    %r15,%rsi
mov    %rcx,%r15
mov    %rax,%r14
mov    %r15,%rdi
callq  2a600 <png_text_compress_init>
mov    $0x69434350,%esi
add    $0x2,%r14d
mov    %r13,%rdi
mov    %rsi,%rax
mov    %r15,%rdx
mov    %rsi,%r15
mov    %rax,%rsi
mov    %r14,%rcx
callq  2a620 <png_text_compress>
test   %eax,%eax
jne    28568 <png_write_iCCP+0x158>
mov    %r15,%rsi
mov    %r14,%rdx
add    -0x420(%rbp),%edx
mov    %r13,%rdi
callq  29f50 <png_write_chunk_header>
mov    %r14d,%edx
mov    %r13,%rdi
lea    -0x481(%rbp),%rsi
callq  5100 <png_write_chunk_data@plt>
mov    %r13,%rdi
lea    -0x430(%rbp),%rsi
callq  2a8b0 <png_write_compressed_data_out>
mov    %r13,%rdi
callq  5480 <png_write_chunk_end@plt>
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
leaveq 
retq   
lea    0x7aab(%rip),%rsi        # 2ffd9 <fourbppswaptable+0x98d>
callq  5470 <png_error@plt>
lea    0x7ab9(%rip),%rsi        # 2fff3 <fourbppswaptable+0x9a7>
callq  5470 <png_error@plt>
mov    %rcx,%rax
and    $0x3,%eax
test   %eax,%eax
je     2845a <png_write_iCCP+0x4a>
lea    0x7ab5(%rip),%rsi        # 30009 <fourbppswaptable+0x9bd>
callq  5470 <png_error@plt>
mov    %r13,%rdi
lea    0x7ad7(%rip),%rsi        # 3003a <fourbppswaptable+0x9ee>
callq  5470 <png_error@plt>
mov    %r13,%rdi
mov    0x170(%rdi),%rsi
callq  5470 <png_error@plt>
nopw   0x0(%rax,%rax,1)

0000000000028580 <png_write_sPLT>:
push   %rbp
mov    %rsp,%rbp
sub    $0x90,%rsp
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
movzbl 0x8(%rsi),%eax
cmp    $0x8,%al
je     285af <png_write_sPLT+0x2f>
mov    $0xa,%r12d
jmp    285b5 <png_write_sPLT+0x35>
mov    $0x6,%r12d
mov    %rsi,%r13
mov    0x18(%r13),%r15d
mov    0x0(%r13),%rsi
lea    -0x82(%rbp),%r14
mov    %rdi,%rbx
mov    %r14,%rdx
callq  23280 <png_check_keyword>
test   %eax,%eax
je     28622 <png_write_sPLT+0xa2>
imul   %r12d,%r15d
lea    0x2(%rax,%r15,1),%edx
mov    %rax,%r15
mov    $0x73504c54,%esi
mov    %rbx,%rdi
callq  29f50 <png_write_chunk_header>
lea    0x1(%r15),%eax
mov    %eax,%edx
mov    %r14,%rsi
mov    %rbx,%rdi
callq  5100 <png_write_chunk_data@plt>
lea    0x8(%r13),%r14
mov    $0x1,%edx
mov    %rbx,%rdi
mov    %r14,%rsi
callq  5100 <png_write_chunk_data@plt>
mov    0x10(%r13),%r15
lea    -0x32(%rbp),%rax
lea    -0x2e(%rbp),%rdi
jmp    28675 <png_write_sPLT+0xf5>
mov    %rbx,%rdi
lea    0x7a24(%rip),%rsi        # 30050 <fourbppswaptable+0xa04>
callq  5470 <png_error@plt>
movzbl (%r15),%eax
mov    %al,-0x32(%rbp)
movzbl 0x2(%r15),%eax
mov    %al,-0x31(%rbp)
movzbl 0x4(%r15),%eax
mov    %al,-0x30(%rbp)
movzbl 0x6(%r15),%eax
mov    %al,-0x2f(%rbp)
movzwl 0x8(%r15),%esi
callq  57a0 <png_save_uint_16@plt>
mov    %rbx,%rdi
lea    -0x32(%rbp),%rsi
mov    %r12,%rdx
callq  5100 <png_write_chunk_data@plt>
add    $0xa,%r15
lea    -0x32(%rbp),%rax
lea    -0x2e(%rbp),%rdi
movslq 0x18(%r13),%rcx
lea    (%rcx,%rcx,4),%rcx
add    %rcx,%rcx
add    0x10(%r13),%rcx
cmp    %r15,%rcx
ja     286a7 <png_write_sPLT+0x127>
mov    %rbx,%rdi
callq  5480 <png_write_chunk_end@plt>
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
movzbl (%r14),%ecx
cmp    $0x8,%cl
je     28631 <png_write_sPLT+0xb1>
mov    %rax,%rdi
movzwl (%r15),%esi
callq  57a0 <png_save_uint_16@plt>
movzwl 0x2(%r15),%esi
lea    -0x30(%rbp),%rdi
callq  57a0 <png_save_uint_16@plt>
movzwl 0x4(%r15),%esi
lea    -0x2e(%rbp),%rdi
callq  57a0 <png_save_uint_16@plt>
movzwl 0x6(%r15),%esi
lea    -0x2c(%rbp),%rdi
callq  57a0 <png_save_uint_16@plt>
movzwl 0x8(%r15),%esi
lea    -0x2a(%rbp),%rdi
callq  57a0 <png_save_uint_16@plt>
jmpq   2865a <png_write_sPLT+0xda>
nopl   0x0(%rax)

0000000000028700 <png_write_tRNS>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    $0x74524e53,%r9d
cmp    $0x3,%r8d
je     2872d <png_write_tRNS+0x2d>
test   %r8d,%r8d
je     28754 <png_write_tRNS+0x54>
cmp    $0x2,%r8d
je     2879d <png_write_tRNS+0x9d>
lea    0x79ef(%rip),%rsi        # 30115 <fourbppswaptable+0xac9>
callq  b100 <png_app_warning>
leaveq 
retq   
test   %ecx,%ecx
jle    28809 <png_write_tRNS+0x109>
movzwl 0x258(%rdi),%eax
cmp    %eax,%ecx
jg     28809 <png_write_tRNS+0x109>
movslq %ecx,%rcx
mov    %rsi,%rdx
mov    %r9,%rsi
callq  29fe0 <png_write_complete_chunk>
leaveq 
retq   
mov    $0x1,%eax
movzbl 0x268(%rdi),%ecx
shl    %cl,%eax
movzwl 0x8(%rdx),%esi
cmp    %esi,%eax
jle    28817 <png_write_tRNS+0x117>
lea    -0x16(%rbp),%rax
mov    %r15,-0x10(%rbp)
mov    %rdi,%r15
mov    %rax,%rdi
callq  57a0 <png_save_uint_16@plt>
mov    %r15,%rdi
mov    $0x2,%ecx
lea    -0x16(%rbp),%rdx
mov    $0x74524e53,%esi
callq  29fe0 <png_write_complete_chunk>
mov    -0x10(%rbp),%r15
leaveq 
retq   
lea    -0x16(%rbp),%rax
movzwl 0x2(%rdx),%esi
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rdi,%r14
mov    %rax,%rdi
mov    %rdx,%r15
callq  57a0 <png_save_uint_16@plt>
lea    -0x14(%rbp),%rdi
movzwl 0x4(%r15),%esi
callq  57a0 <png_save_uint_16@plt>
lea    -0x12(%rbp),%rax
movzwl 0x6(%r15),%esi
mov    %rax,%r15
mov    %r15,%rdi
callq  57a0 <png_save_uint_16@plt>
movzbl 0x268(%r14),%eax
cmp    $0x8,%al
je     28825 <png_write_tRNS+0x125>
mov    %r14,%rdi
mov    $0x6,%ecx
mov    $0x74524e53,%esi
lea    -0x16(%rbp),%rdx
callq  29fe0 <png_write_complete_chunk>
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
lea    0x7856(%rip),%rsi        # 30066 <fourbppswaptable+0xa1a>
callq  b100 <png_app_warning>
leaveq 
retq   
lea    0x7877(%rip),%rsi        # 30095 <fourbppswaptable+0xa49>
callq  b100 <png_app_warning>
leaveq 
retq   
lea    -0x14(%rbp),%rax
movzbl (%rax),%eax
movzbl -0x16(%rbp),%ecx
or     %cl,%al
movzbl (%r15),%ecx
or     %cl,%al
test   %al,%al
je     287e9 <png_write_tRNS+0xe9>
mov    %r14,%rdi
lea    0x788f(%rip),%rsi        # 300d5 <fourbppswaptable+0xa89>
callq  b100 <png_app_warning>
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)

0000000000028860 <png_write_bKGD>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    $0x624b4744,%r8d
mov    $0x1,%eax
cmp    $0x3,%edx
je     288c3 <png_write_bKGD+0x63>
and    $0x2,%edx
test   %edx,%edx
jg     288fb <png_write_bKGD+0x9b>
movzbl 0x268(%rdi),%ecx
shl    %cl,%eax
movzwl 0x8(%rsi),%esi
cmp    %esi,%eax
jle    2896a <png_write_bKGD+0x10a>
lea    -0x16(%rbp),%rax
mov    %r15,-0x10(%rbp)
mov    %rdi,%r15
mov    %rax,%rdi
callq  57a0 <png_save_uint_16@plt>
mov    %r15,%rdi
mov    $0x2,%ecx
lea    -0x16(%rbp),%rdx
mov    $0x624b4744,%esi
callq  29fe0 <png_write_complete_chunk>
mov    -0x10(%rbp),%r15
leaveq 
retq   
movzwl 0x258(%rdi),%ecx
test   %cx,%cx
jne    28978 <png_write_bKGD+0x118>
mov    0x3d8(%rdi),%ecx
and    $0x1,%ecx
test   %ecx,%ecx
je     28978 <png_write_bKGD+0x118>
movzbl (%rsi),%ecx
mov    %cl,-0x16(%rbp)
mov    %rax,%rcx
mov    %r8,%rsi
lea    -0x16(%rbp),%rdx
callq  29fe0 <png_write_complete_chunk>
leaveq 
retq   
lea    -0x16(%rbp),%rax
movzwl 0x2(%rsi),%ecx
mov    %r15,-0x10(%rbp)
mov    %r14,-0x8(%rbp)
mov    %rdi,%r14
mov    %rax,%rdi
mov    %rsi,%r15
mov    %rcx,%rsi
callq  57a0 <png_save_uint_16@plt>
lea    -0x14(%rbp),%rdi
movzwl 0x4(%r15),%esi
callq  57a0 <png_save_uint_16@plt>
lea    -0x12(%rbp),%rax
movzwl 0x6(%r15),%esi
mov    %rax,%r15
mov    %r15,%rdi
callq  57a0 <png_save_uint_16@plt>
movzbl 0x268(%r14),%eax
cmp    $0x8,%al
je     28999 <png_write_bKGD+0x139>
mov    %r14,%rdi
mov    $0x6,%ecx
lea    -0x16(%rbp),%rdx
mov    $0x624b4744,%esi
callq  29fe0 <png_write_complete_chunk>
mov    -0x8(%rbp),%r14
mov    -0x10(%rbp),%r15
leaveq 
retq   
lea    0x782c(%rip),%rsi        # 3019d <fourbppswaptable+0xb51>
callq  5390 <png_warning@plt>
leaveq 
retq   
movzbl (%rsi),%edx
movzwl 0x258(%rdi),%ecx
cmp    %cx,%dx
jb     288e4 <png_write_bKGD+0x84>
lea    0x77aa(%rip),%rsi        # 3013c <fourbppswaptable+0xaf0>
callq  5390 <png_warning@plt>
leaveq 
retq   
lea    -0x14(%rbp),%rax
movzbl (%rax),%eax
movzbl -0x16(%rbp),%ecx
or     %cl,%al
movzbl (%r15),%ecx
or     %cl,%al
test   %al,%al
je     2894a <png_write_bKGD+0xea>
mov    %r14,%rdi
lea    0x77a3(%rip),%rsi        # 3015d <fourbppswaptable+0xb11>
callq  5390 <png_warning@plt>
mov    -0x8(%rbp),%r14
mov    -0x10(%rbp),%r15
leaveq 
retq   
nopl   0x0(%rax)

00000000000289d0 <png_write_hIST>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
movzwl 0x258(%rdi),%eax
cmp    %edx,%eax
jl     28a2d <png_write_hIST+0x5d>
mov    $0x68495354,%eax
lea    (%rdx,%rdx,1),%ecx
mov    %rdi,%r8
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rsi,%r13
mov    %rax,%rsi
mov    %rbx,%r14
mov    %rdi,%rbx
mov    %r8,%rdi
mov    %r12,%r15
mov    %rdx,%r12
mov    %rcx,%rdx
callq  29f50 <png_write_chunk_header>
lea    -0x2b(%rbp),%rcx
xor    %eax,%eax
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rax,%r14
mov    %rcx,%r15
jmp    28a60 <png_write_hIST+0x90>
lea    0x77a9(%rip),%rsi        # 301dd <fourbppswaptable+0xb91>
callq  5390 <png_warning@plt>
leaveq 
retq   
movslq %r14d,%rax
movzwl 0x0(%r13,%rax,2),%esi
mov    %r15,%rdi
callq  57a0 <png_save_uint_16@plt>
mov    %rbx,%rdi
mov    %r15,%rsi
mov    $0x2,%edx
callq  5100 <png_write_chunk_data@plt>
add    $0x1,%r14d
cmp    %r14d,%r12d
jg     28a3b <png_write_hIST+0x6b>
mov    %rbx,%rdi
callq  5480 <png_write_chunk_end@plt>
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

0000000000028a90 <png_write_tEXt>:
push   %rbp
mov    %rsp,%rbp
sub    $0x70,%rsp
mov    %r14,-0x18(%rbp)
mov    %r15,-0x20(%rbp)
mov    %r12,%r14
mov    %rbx,%r12
mov    %r13,%r15
mov    %rdx,%r13
lea    -0x70(%rbp),%rdx
mov    %rdi,%rbx
callq  23280 <png_check_keyword>
test   %eax,%eax
je     28b41 <png_write_tEXt+0xb1>
xor    %edx,%edx
test   %r13,%r13
jne    28b50 <png_write_tEXt+0xc0>
mov    $0x7ffffffe,%ecx
sub    %eax,%ecx
mov    %ecx,%ecx
cmp    %rdx,%rcx
jb     28b7b <png_write_tEXt+0xeb>
lea    0x1(%rax,%rdx,1),%ecx
mov    $0x74455874,%esi
mov    %rbx,%rdi
mov    %r15,-0x10(%rbp)
mov    %r14,-0x8(%rbp)
mov    %rdx,%r14
mov    %rcx,%rdx
mov    %rax,%r15
callq  29f50 <png_write_chunk_header>
lea    0x1(%r15),%eax
mov    %eax,%edx
mov    %rbx,%rdi
lea    -0x70(%rbp),%rsi
callq  5100 <png_write_chunk_data@plt>
test   %r14,%r14
je     28b24 <png_write_tEXt+0x94>
mov    %r14,%rdx
mov    %r13,%rsi
mov    %rbx,%rdi
callq  5100 <png_write_chunk_data@plt>
mov    %rbx,%rdi
callq  5480 <png_write_chunk_end@plt>
mov    %r12,%rbx
mov    -0x8(%rbp),%r12
mov    -0x10(%rbp),%r13
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
leaveq 
retq   
mov    %rbx,%rdi
lea    0x76c0(%rip),%rsi        # 3020b <fourbppswaptable+0xbbf>
callq  5470 <png_error@plt>
movsbq 0x0(%r13),%rcx
test   %cl,%cl
je     28acb <png_write_tEXt+0x3b>
mov    %r13,%rdi
mov    %r15,-0x10(%rbp)
mov    %rax,%r15
callq  5260 <strlen@plt>
mov    %rax,%rdx
mov    %r15,%rax
mov    -0x10(%rbp),%r15
jmpq   28acb <png_write_tEXt+0x3b>
mov    %rbx,%rdi
lea    0x769c(%rip),%rsi        # 30221 <fourbppswaptable+0xbd5>
callq  5470 <png_error@plt>
nopw   0x0(%rax,%rax,1)

0000000000028b90 <png_write_zTXt>:
push   %rbp
mov    %rsp,%rbp
sub    $0x490,%rsp
xor    %eax,%eax
cmp    $0xffffffff,%ecx
je     28c6f <png_write_zTXt+0xdf>
test   %ecx,%ecx
jne    28c79 <png_write_zTXt+0xe9>
lea    -0x481(%rbp),%rax
mov    %rdi,%rcx
mov    %r14,-0x10(%rbp)
mov    %r15,-0x18(%rbp)
mov    %rdi,%r14
mov    %rcx,%rdi
mov    %rdx,%r15
mov    %rax,%rdx
callq  23280 <png_check_keyword>
test   %eax,%eax
je     28c85 <png_write_zTXt+0xf5>
lea    0x1(%rax),%ecx
mov    %ecx,%ecx
movb   $0x0,-0x481(%rbp,%rcx,1)
test   %r15,%r15
jne    28c94 <png_write_zTXt+0x104>
xor    %edx,%edx
mov    %r15,%rsi
mov    %rax,%r15
lea    -0x430(%rbp),%rdi
callq  2a600 <png_text_compress_init>
mov    $0x7a545874,%esi
add    $0x2,%r15d
mov    %r14,%rdi
lea    -0x430(%rbp),%rdx
mov    %r15,%rcx
callq  2a620 <png_text_compress>
test   %eax,%eax
jne    28cb2 <png_write_zTXt+0x122>
mov    %r15,%rdx
add    -0x420(%rbp),%edx
mov    %r14,%rdi
mov    $0x7a545874,%esi
callq  29f50 <png_write_chunk_header>
mov    %r15d,%edx
mov    %r14,%rdi
lea    -0x481(%rbp),%rsi
callq  5100 <png_write_chunk_data@plt>
mov    %r14,%rdi
lea    -0x430(%rbp),%rsi
callq  2a8b0 <png_write_compressed_data_out>
mov    %r14,%rdi
callq  5480 <png_write_chunk_end@plt>
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
leaveq 
retq   
mov    %rax,%rcx
callq  28a90 <png_write_tEXt>
leaveq 
retq   
lea    0x75b5(%rip),%rsi        # 30235 <fourbppswaptable+0xbe9>
callq  5470 <png_error@plt>
mov    %r14,%rdi
lea    0x75c5(%rip),%rsi        # 30254 <fourbppswaptable+0xc08>
callq  5470 <png_error@plt>
mov    %r15,%rdi
mov    %r13,-0x8(%rbp)
mov    %rax,%r13
callq  5260 <strlen@plt>
mov    %rax,%rdx
mov    %r13,%rax
mov    -0x8(%rbp),%r13
jmpq   28bf1 <png_write_zTXt+0x61>
mov    %r14,%rdi
mov    0x170(%rdi),%rsi
callq  5470 <png_error@plt>
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   0x0(%rax)

0000000000028cd0 <png_write_iTXt>:
push   %rbp
mov    %rsp,%rbp
sub    $0x4d0,%rsp
mov    %rbx,-0x28(%rbp)
mov    %r12,-0x30(%rbp)
mov    %r13,-0x38(%rbp)
mov    %r14,-0x40(%rbp)
mov    %r15,-0x48(%rbp)
mov    %r9,%r12
mov    %r8,%r13
mov    %rsi,%r14
mov    %rdx,%rsi
mov    %rcx,%r15
lea    -0x4c2(%rbp),%rdx
mov    %rdi,%rbx
callq  23280 <png_check_keyword>
test   %eax,%eax
je     28d40 <png_write_iTXt+0x70>
xor    %ecx,%ecx
mov    %rcx,-0x58(%rbp)
mov    $0x1,%edx
mov    %rdx,-0x50(%rbp)
test   %r14d,%r14d
jle    28d4f <png_write_iTXt+0x7f>
cmp    $0x1,%r14d
je     28d6e <png_write_iTXt+0x9e>
cmp    $0x2,%r14d
je     28d5a <png_write_iTXt+0x8a>
mov    %rbx,%rdi
lea    0x7545(%rip),%rsi        # 30280 <fourbppswaptable+0xc34>
callq  5470 <png_error@plt>
mov    %rbx,%rdi
lea    0x7520(%rip),%rsi        # 3026a <fourbppswaptable+0xc1e>
callq  5470 <png_error@plt>
cmp    $0xffffffff,%r14d
je     28d6e <png_write_iTXt+0x9e>
test   %r14d,%r14d
jne    28d31 <png_write_iTXt+0x61>
lea    0x1(%rax),%r14d
mov    %r14d,%eax
movb   $0x1,-0x4c2(%rbp,%rax,1)
mov    %rdx,%rcx
jmp    28d7d <png_write_iTXt+0xad>
lea    0x1(%rax),%r14d
mov    %r14d,%eax
movb   $0x0,-0x4c2(%rbp,%rax,1)
lea    0x1(%r14),%eax
mov    %eax,%eax
movb   $0x0,-0x4c2(%rbp,%rax,1)
lea    0x7508(%rip),%rax        # 3029a <fourbppswaptable+0xc4e>
test   %r15,%r15
je     28d9c <png_write_iTXt+0xcc>
mov    %r15,%rdi
jmp    28d9f <png_write_iTXt+0xcf>
mov    %rax,%rdi
mov    %rcx,%r15
mov    %rdi,-0x18(%rbp)
callq  5260 <strlen@plt>
test   %r13,%r13
jne    28db7 <png_write_iTXt+0xe7>
lea    0x74e3(%rip),%r13        # 3029a <fourbppswaptable+0xc4e>
mov    %r13,%rdi
mov    %rax,%r13
mov    %rdi,-0x8(%rbp)
callq  5260 <strlen@plt>
test   %r12,%r12
jne    28dd2 <png_write_iTXt+0x102>
lea    0x74c8(%rip),%r12        # 3029a <fourbppswaptable+0xc4e>
mov    $0x7fffffff,%edi
mov    $0x7ffffffd,%ecx
sub    %r14d,%ecx
mov    %ecx,%ecx
lea    0x1(%r13),%rdx
mov    %rdx,-0x20(%rbp)
cmp    %rdx,%rcx
jae    28e52 <png_write_iTXt+0x182>
mov    %rdi,%rcx
lea    0x1(%rax),%rdx
mov    %rdx,-0x10(%rbp)
mov    %rcx,%rsi
xor    $0x7fffffff,%esi
mov    %esi,%esi
cmp    %rdx,%rsi
jae    28e59 <png_write_iTXt+0x189>
mov    %rdi,%r13
mov    %r12,%rdi
callq  5260 <strlen@plt>
mov    %rax,%rdx
lea    -0x470(%rbp),%rdi
mov    %r12,%rsi
callq  2a600 <png_text_compress_init>
mov    $0x69545874,%esi
test   %r15d,%r15d
jg     28e60 <png_write_iTXt+0x190>
mov    %r13,%rax
xor    $0x7fffffff,%eax
mov    %eax,%ecx
mov    -0x468(%rbp),%rax
cmp    %rax,%rcx
jb     28ee5 <png_write_iTXt+0x215>
mov    %eax,-0x460(%rbp)
jmp    28e82 <png_write_iTXt+0x1b2>
lea    0x2(%r14,%rdx,1),%ecx
jmp    28df1 <png_write_iTXt+0x121>
lea    0x1(%rcx,%rax,1),%r13d
jmp    28e0c <png_write_iTXt+0x13c>
mov    %rbx,%rdi
mov    %rsi,%r15
lea    -0x470(%rbp),%rdx
mov    %r13,%rcx
callq  2a620 <png_text_compress>
test   %eax,%eax
jne    28ef4 <png_write_iTXt+0x224>
mov    %r15,%rsi
pushq  -0x50(%rbp)
popq   -0x58(%rbp)
add    -0x460(%rbp),%r13d
mov    %r13,%rdx
mov    %rbx,%rdi
callq  29f50 <png_write_chunk_header>
lea    0x2(%r14),%eax
mov    %eax,%edx
mov    %rbx,%rdi
lea    -0x4c2(%rbp),%rsi
callq  5100 <png_write_chunk_data@plt>
mov    %rbx,%rdi
mov    -0x20(%rbp),%rdx
mov    -0x18(%rbp),%rsi
callq  5100 <png_write_chunk_data@plt>
mov    %rbx,%rdi
mov    -0x10(%rbp),%rdx
mov    -0x8(%rbp),%rsi
callq  5100 <png_write_chunk_data@plt>
mov    -0x58(%rbp),%rax
test   %rax,%rax
jne    28f03 <png_write_iTXt+0x233>
mov    %r12,%rsi
mov    -0x460(%rbp),%edx
mov    %rbx,%rdi
callq  5100 <png_write_chunk_data@plt>
jmp    28f12 <png_write_iTXt+0x242>
mov    %rbx,%rdi
lea    0x73ac(%rip),%rsi        # 3029b <fourbppswaptable+0xc4f>
callq  5470 <png_error@plt>
mov    %rbx,%rdi
mov    0x170(%rdi),%rsi
callq  5470 <png_error@plt>
mov    %rbx,%rdi
lea    -0x470(%rbp),%rsi
callq  2a8b0 <png_write_compressed_data_out>
mov    %rbx,%rdi
callq  5480 <png_write_chunk_end@plt>
mov    -0x48(%rbp),%r15
mov    -0x40(%rbp),%r14
mov    -0x38(%rbp),%r13
mov    -0x30(%rbp),%r12
mov    -0x28(%rbp),%rbx
leaveq 
retq   

0000000000028f30 <png_write_oFFs>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    %r13,-0x10(%rbp)
mov    %r14,-0x18(%rbp)
mov    %r15,-0x20(%rbp)
cmp    $0x1,%ecx
jg     28f54 <png_write_oFFs+0x24>
mov    %rdi,%r13
mov    %rcx,%r14
mov    %rdx,%r15
jmp    28f80 <png_write_oFFs+0x50>
lea    0x7361(%rip),%r8        # 302bc <fourbppswaptable+0xc70>
mov    %rdi,%rax
mov    %r12,-0x8(%rbp)
mov    %rsi,%r12
mov    %r8,%rsi
mov    %rdi,%r13
mov    %rax,%rdi
mov    %rcx,%r14
mov    %rdx,%r15
callq  5390 <png_warning@plt>
mov    %r12,%rsi
mov    -0x8(%rbp),%r12
lea    -0x29(%rbp),%rdi
callq  5520 <png_save_int_32@plt>
mov    %r15,%rsi
lea    -0x25(%rbp),%rdi
callq  5520 <png_save_int_32@plt>
mov    %r14b,-0x21(%rbp)
mov    %r13,%rdi
mov    $0x6f464673,%esi
mov    $0x9,%ecx
lea    -0x29(%rbp),%rdx
callq  29fe0 <png_write_complete_chunk>
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
leaveq 
retq   
nopl   (%rax)

0000000000028fc0 <png_write_pCAL>:
push   %rbp
mov    %rsp,%rbp
sub    $0xf0,%rsp
mov    %r9,-0x88(%rbp)
cmp    $0x3,%r8d
jg     2909b <png_write_pCAL+0xdb>
lea    -0xd8(%rbp),%rax
mov    %rdi,%r10
mov    %rbx,-0x60(%rbp)
mov    %r12,-0x68(%rbp)
mov    %r13,-0x70(%rbp)
mov    %r14,-0x78(%rbp)
mov    %r15,-0x80(%rbp)
mov    %rcx,%rbx
mov    %r9,%r12
mov    %rdx,%r13
mov    %rax,%rdx
mov    %rdi,%r14
mov    %r10,%rdi
mov    %r8,%r15
callq  23280 <png_check_keyword>
test   %eax,%eax
je     290a7 <png_write_pCAL+0xe7>
mov    0x10(%rbp),%rdi
mov    %rdi,-0x8(%rbp)
mov    %r15,-0x18(%rbp)
mov    %rax,%r15
callq  5260 <strlen@plt>
xor    %edx,%edx
mov    %rdx,-0x40(%rbp)
mov    $0x1,%ecx
mov    %rcx,-0x38(%rbp)
test   %r12d,%r12d
jne    29047 <png_write_pCAL+0x87>
mov    %rdx,%rcx
movslq %r12d,%rsi
shl    $0x3,%rsi
mov    %r14,%rdi
mov    %r14,-0x50(%rbp)
mov    %r13,-0x28(%rbp)
mov    %rbx,-0x20(%rbp)
mov    %rdx,%rbx
mov    %rcx,%r13
mov    %rax,%r14
callq  5800 <png_malloc@plt>
mov    0x18(%rbp),%rsi
mov    %rsi,-0x58(%rbp)
lea    0x0(%r13,%r14,1),%rcx
mov    %rcx,-0x10(%rbp)
lea    0x1(%r15),%edx
mov    %edx,%edx
mov    %rdx,-0x30(%rbp)
lea    0xa(%rcx,%rdx,1),%r15
lea    -0x1(%r12),%r14d
mov    %rbx,%r8
mov    %rax,%rbx
mov    %rsi,%r13
jmp    290d9 <png_write_pCAL+0x119>
lea    0x7240(%rip),%rsi        # 302e2 <fourbppswaptable+0xc96>
callq  5470 <png_error@plt>
mov    %r14,%rdi
lea    0x725b(%rip),%rsi        # 3030c <fourbppswaptable+0xcc0>
callq  5470 <png_error@plt>
pushq  -0x40(%rbp)
popq   -0x48(%rbp)
mov    -0x48(%rbp),%rcx
add    %rcx,%rax
mov    %rax,(%rbx,%r12,8)
add    %rax,%r15
lea    0x1(%r13),%r8d
mov    -0x58(%rbp),%r13
mov    -0x88(%rbp),%r12
cmp    %r8d,%r12d
jg     29162 <png_write_pCAL+0x1a2>
mov    %r15,%rdx
mov    $0x7043414c,%esi
mov    -0x50(%rbp),%r14
mov    %r14,%rdi
callq  29f50 <png_write_chunk_header>
mov    %r14,%rdi
mov    -0x30(%rbp),%rdx
lea    -0xd8(%rbp),%rsi
callq  5100 <png_write_chunk_data@plt>
lea    -0xe2(%rbp),%r15
mov    %r15,%rdi
mov    -0x28(%rbp),%rsi
callq  5520 <png_save_int_32@plt>
lea    -0xde(%rbp),%rdi
mov    -0x20(%rbp),%rsi
callq  5520 <png_save_int_32@plt>
mov    -0x18(%rbp),%rax
mov    %al,-0xda(%rbp)
mov    %r15,%rsi
mov    %r12b,-0xd9(%rbp)
mov    $0xa,%edx
mov    %r14,%rdi
callq  5100 <png_write_chunk_data@plt>
mov    %r14,%rdi
mov    -0x10(%rbp),%rdx
mov    -0x8(%rbp),%rsi
callq  5100 <png_write_chunk_data@plt>
xor    %r15d,%r15d
jmp    2919e <png_write_pCAL+0x1de>
movslq %r8d,%r12
mov    0x0(%r13,%r12,8),%rdi
mov    %r8,%r13
callq  5260 <strlen@plt>
cmp    %r14d,%r13d
je     290b6 <png_write_pCAL+0xf6>
pushq  -0x38(%rbp)
popq   -0x48(%rbp)
jmpq   290bc <png_write_pCAL+0xfc>
movslq %r15d,%rax
mov    0x0(%r13,%rax,8),%rsi
mov    (%rbx,%rax,8),%rdx
mov    %r14,%rdi
callq  5100 <png_write_chunk_data@plt>
add    $0x1,%r15d
cmp    %r12d,%r15d
jl     29186 <png_write_pCAL+0x1c6>
mov    %rbx,%rsi
mov    %r14,%rdi
callq  5790 <png_free@plt>
mov    %r14,%rdi
callq  5480 <png_write_chunk_end@plt>
mov    -0x80(%rbp),%r15
mov    -0x78(%rbp),%r14
mov    -0x70(%rbp),%r13
mov    -0x68(%rbp),%r12
mov    -0x60(%rbp),%rbx
leaveq 
retq   
nopl   0x0(%rax)

00000000000291d0 <png_write_pHYs>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    %r13,-0x10(%rbp)
mov    %r14,-0x18(%rbp)
mov    %r15,-0x20(%rbp)
cmp    $0x1,%ecx
jg     291f4 <png_write_pHYs+0x24>
mov    %rdi,%r13
mov    %rcx,%r14
mov    %rdx,%r15
jmp    29220 <png_write_pHYs+0x50>
lea    0x7127(%rip),%r8        # 30322 <fourbppswaptable+0xcd6>
mov    %rdi,%rax
mov    %r12,-0x8(%rbp)
mov    %rsi,%r12
mov    %r8,%rsi
mov    %rdi,%r13
mov    %rax,%rdi
mov    %rcx,%r14
mov    %rdx,%r15
callq  5390 <png_warning@plt>
mov    %r12,%rsi
mov    -0x8(%rbp),%r12
lea    -0x29(%rbp),%rdi
callq  5500 <png_save_uint_32@plt>
mov    %r15,%rsi
lea    -0x25(%rbp),%rdi
callq  5500 <png_save_uint_32@plt>
mov    %r14b,-0x21(%rbp)
mov    %r13,%rdi
mov    $0x70485973,%esi
mov    $0x9,%ecx
lea    -0x29(%rbp),%rdx
callq  29fe0 <png_write_complete_chunk>
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
leaveq 
retq   
nopl   (%rax)

0000000000029260 <png_write_tIME>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
movzbl 0x2(%rsi),%eax
cmp    $0xc,%al
ja     29300 <png_write_tIME+0xa0>
test   %al,%al
je     29300 <png_write_tIME+0xa0>
movzbl 0x3(%rsi),%eax
cmp    $0x1f,%al
ja     29300 <png_write_tIME+0xa0>
test   %al,%al
je     29300 <png_write_tIME+0xa0>
movzbl 0x4(%rsi),%eax
cmp    $0x17,%al
ja     29300 <png_write_tIME+0xa0>
movzbl 0x6(%rsi),%eax
cmp    $0x3c,%al
ja     29300 <png_write_tIME+0xa0>
lea    -0x17(%rbp),%rax
movzwl (%rsi),%ecx
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rsi,%r14
mov    %rcx,%rsi
mov    %rdi,%r15
mov    %rax,%rdi
callq  57a0 <png_save_uint_16@plt>
movzbl 0x2(%r14),%eax
mov    %al,-0x15(%rbp)
movzbl 0x3(%r14),%eax
mov    %al,-0x14(%rbp)
movzbl 0x4(%r14),%eax
mov    %al,-0x13(%rbp)
movzbl 0x5(%r14),%eax
mov    %al,-0x12(%rbp)
movzbl 0x6(%r14),%eax
mov    %al,-0x11(%rbp)
mov    %r15,%rdi
mov    $0x74494d45,%esi
mov    $0x7,%ecx
lea    -0x17(%rbp),%rdx
callq  29fe0 <png_write_complete_chunk>
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
lea    0x7041(%rip),%rsi        # 30348 <fourbppswaptable+0xcfc>
callq  5390 <png_warning@plt>
leaveq 
retq   
xchg   %ax,%ax

0000000000029310 <png_write_sCAL_s>:
push   %rbp
mov    %rsp,%rbp
sub    $0x70,%rsp
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rdi,%r12
mov    %rdx,%r13
mov    %rsi,%r14
mov    %rcx,%r15
mov    %r15,-0x8(%rbp)
mov    %r13,%rdi
callq  5260 <strlen@plt>
mov    %r15,%rdi
mov    %rax,%r15
callq  5260 <strlen@plt>
lea    0x2(%rax,%r15,1),%rcx
cmp    $0x40,%rcx
ja     293a7 <png_write_sCAL_s+0x97>
mov    %r14b,-0x68(%rbp)
mov    %r13,%rsi
mov    %rcx,%r13
mov    %rax,%r14
lea    -0x67(%rbp),%rdi
lea    0x1(%r15),%rdx
callq  54c0 <memcpy@plt>
lea    -0x66(%rbp,%r15,1),%rdi
mov    %r14,%rdx
mov    -0x8(%rbp),%rsi
callq  54c0 <memcpy@plt>
mov    %r13,%rcx
mov    %r12,%rdi
mov    $0x7343414c,%esi
lea    -0x68(%rbp),%rdx
callq  29fe0 <png_write_complete_chunk>
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
leaveq 
retq   
mov    %r12,%rdi
lea    0x6fbd(%rip),%rsi        # 3036e <fourbppswaptable+0xd22>
callq  5390 <png_warning@plt>
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

00000000000293d0 <png_write_finish_row>:
push   %rbp
mov    %rsp,%rbp
mov    0x214(%rdi),%eax
add    $0x1,%eax
mov    %eax,0x214(%rdi)
mov    0x200(%rdi),%ecx
cmp    %eax,%ecx
jbe    293ef <png_write_finish_row+0x1f>
leaveq 
retq   
xor    %esi,%esi
movzbl 0x264(%rdi),%eax
test   %al,%al
jne    2940b <png_write_finish_row+0x3b>
mov    $0x4,%ecx
mov    %rsi,%rdx
callq  27dd0 <png_compress_IDAT>
leaveq 
retq   
movl   $0x0,0x214(%rdi)
mov    0x134(%rdi),%eax
and    $0x2,%eax
test   %eax,%eax
jne    29443 <png_write_finish_row+0x73>
lea    0x6f70(%rip),%rcx        # 30399 <png_pass_inc.46>
lea    0x6f62(%rip),%rsi        # 30392 <png_pass_start.45>
lea    0x6f70(%rip),%r8        # 303a7 <png_pass_yinc.48>
lea    0x6f62(%rip),%r9        # 303a0 <png_pass_ystart.47>
jmpq   294dd <png_write_finish_row+0x10d>
movzbl 0x265(%rdi),%eax
add    $0x1,%eax
mov    %al,0x265(%rdi)
movzbl 0x265(%rdi),%eax
cmp    $0x6,%al
ja     293fc <png_write_finish_row+0x2c>
mov    0x220(%rdi),%r8
test   %r8,%r8
jne    294fc <png_write_finish_row+0x12c>
leaveq 
retq   
movzbl %al,%edx
movzbl (%rdx,%rcx,1),%r11d
mov    0x1f8(%rdi),%eax
lea    -0x1(%r11,%rax,1),%eax
movzbl (%rdx,%rsi,1),%edx
sub    %edx,%eax
xor    %r10d,%r10d
mov    %r10,%rdx
div    %r11d
mov    %eax,0x204(%rdi)
movzbl 0x265(%rdi),%edx
movzbl (%rdx,%r8,1),%r11d
mov    0x1fc(%rdi),%eax
lea    -0x1(%r11,%rax,1),%eax
movzbl (%rdx,%r9,1),%edx
sub    %edx,%eax
mov    %r10,%rdx
div    %r11d
mov    %eax,0x200(%rdi)
mov    0x134(%rdi),%edx
and    $0x2,%edx
test   %edx,%edx
jne    29529 <png_write_finish_row+0x159>
mov    0x204(%rdi),%edx
test   %edx,%edx
je     294dd <png_write_finish_row+0x10d>
test   %eax,%eax
jne    29530 <png_write_finish_row+0x160>
movzbl 0x265(%rdi),%eax
add    $0x1,%eax
mov    %al,0x265(%rdi)
cmp    $0x6,%al
jbe    29470 <png_write_finish_row+0xa0>
xor    %esi,%esi
jmpq   29453 <png_write_finish_row+0x83>
movzbl 0x269(%rdi),%eax
movzbl 0x26c(%rdi),%ecx
imul   %ecx,%eax
cmp    $0x7,%eax
jg     29537 <png_write_finish_row+0x167>
movslq %eax,%rax
mov    0x1f8(%rdi),%ecx
imul   %rcx,%rax
add    $0x7,%rax
shr    $0x3,%rax
jmp    29548 <png_write_finish_row+0x178>
xor    %esi,%esi
jmpq   29453 <png_write_finish_row+0x83>
xor    %esi,%esi
jmpq   29453 <png_write_finish_row+0x83>
movslq %eax,%rax
shr    $0x3,%rax
mov    0x1f8(%rdi),%ecx
imul   %rcx,%rax
lea    0x1(%rax),%rdx
mov    %r8,%rdi
callq  5350 <memset@plt>
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)

0000000000029560 <png_write_start_row>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %r14,-0x10(%rbp)
mov    %r15,-0x18(%rbp)
movzbl 0x269(%rdi),%ecx
movzbl 0x26c(%rdi),%eax
imul   %eax,%ecx
cmp    $0x7,%ecx
jg     2959d <png_write_start_row+0x3d>
movslq %ecx,%rax
mov    0x1f8(%rdi),%edx
imul   %rdx,%rax
add    $0x7,%rax
shr    $0x3,%rax
jmp    295ae <png_write_start_row+0x4e>
movslq %ecx,%rax
shr    $0x3,%rax
mov    0x1f8(%rdi),%edx
imul   %rdx,%rax
movzbl 0x26a(%rdi),%edx
mov    %dl,0x26f(%rdi)
mov    %cl,0x26e(%rdi)
lea    0x1(%rax),%r15
mov    %rdi,%r14
mov    %r15,%rsi
callq  5800 <png_malloc@plt>
mov    %rax,0x228(%r14)
movb   $0x0,(%rax)
movzbl 0x266(%r14),%eax
mov    0x1fc(%r14),%ecx
cmp    $0x1,%ecx
jne    295f0 <png_write_start_row+0x90>
and    $0x1f,%al
mov    0x1f8(%r14),%ecx
cmp    $0x1,%ecx
jne    295fe <png_write_start_row+0x9e>
and    $0x2f,%al
test   %al,%al
jne    29607 <png_write_start_row+0xa7>
mov    $0x8,%eax
mov    %al,0x266(%r14)
movzbl %al,%eax
mov    %rax,%rcx
and    $0xf0,%ecx
test   %ecx,%ecx
jg     2966b <png_write_start_row+0x10b>
and    $0xe0,%eax
test   %eax,%eax
jle    29639 <png_write_start_row+0xd9>
mov    %r15,%rsi
mov    %r14,%rdi
callq  5780 <png_calloc@plt>
mov    %rax,0x220(%r14)
movzbl 0x264(%r14),%eax
test   %al,%al
jne    296a3 <png_write_start_row+0x143>
mov    0x1fc(%r14),%eax
mov    %eax,0x200(%r14)
mov    0x1f8(%r14),%eax
mov    %eax,0x204(%r14)
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
leaveq 
retq   
mov    0x230(%r14),%rcx
test   %rcx,%rcx
jne    2961e <png_write_start_row+0xbe>
mov    %r14,%rdi
mov    %r15,%rsi
mov    %r13,-0x8(%rbp)
mov    %rax,%r13
callq  5800 <png_malloc@plt>
mov    %rax,0x230(%r14)
mov    $0x1,%ecx
mov    %r13,%rax
and    $0x10,%eax
test   %eax,%eax
jg     296d7 <png_write_start_row+0x177>
xor    %eax,%eax
jmp    296df <png_write_start_row+0x17f>
mov    0x134(%r14),%eax
and    $0x2,%eax
test   %eax,%eax
je     2971a <png_write_start_row+0x1ba>
mov    0x1fc(%r14),%eax
mov    %eax,0x200(%r14)
mov    0x1f8(%r14),%eax
mov    %eax,0x204(%r14)
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
leaveq 
retq   
mov    %rcx,%rax
mov    $0x2,%ecx
mov    %r13,%rdx
and    $0x20,%edx
test   %edx,%edx
jle    296ec <png_write_start_row+0x18c>
mov    %rcx,%rax
mov    %r13,%rcx
and    $0x40,%ecx
test   %ecx,%ecx
jle    296f9 <png_write_start_row+0x199>
add    $0x1,%eax
mov    %r13,%rcx
and    $0x80,%ecx
test   %ecx,%ecx
jle    29709 <png_write_start_row+0x1a9>
add    $0x1,%eax
cmp    $0x1,%eax
jg     2974c <png_write_start_row+0x1ec>
mov    %r13,%rax
mov    -0x8(%rbp),%r13
jmpq   2961e <png_write_start_row+0xbe>
mov    0x1fc(%r14),%eax
add    $0x7,%eax
shr    $0x3,%eax
mov    %eax,0x200(%r14)
mov    0x1f8(%r14),%eax
add    $0x7,%eax
shr    $0x3,%eax
mov    %eax,0x204(%r14)
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
leaveq 
retq   
mov    %r14,%rdi
mov    %r15,%rsi
callq  5800 <png_malloc@plt>
mov    %rax,0x238(%r14)
mov    %r13,%rax
mov    -0x8(%rbp),%r13
jmpq   2961e <png_write_start_row+0xbe>
nopw   0x0(%rax,%rax,1)

0000000000029770 <png_do_write_interlace>:
push   %rbp
mov    %rsp,%rbp
sub    $0x40,%rsp
cmp    $0x5,%edx
jle    2977f <png_do_write_interlace+0xf>
leaveq 
retq   
movslq %edx,%r9
lea    0x6c2c(%rip),%rax        # 303b5 <png_pass_inc.54>
lea    0x6c1e(%rip),%r8        # 303ae <png_pass_start.53>
xor    %r10d,%r10d
movzbl 0x13(%rdi),%ecx
cmp    $0x1,%cl
jbe    297de <png_do_write_interlace+0x6e>
cmp    $0x2,%cl
je     29828 <png_do_write_interlace+0xb8>
cmp    $0x4,%cl
jne    297e7 <png_do_write_interlace+0x77>
mov    (%rdi),%ecx
movzbl (%r9,%r8,1),%r11d
mov    $0x4,%edx
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %r11,%r13
mov    %rcx,%r14
mov    %rdx,%r15
mov    %rsi,%r12
mov    %r10,%r11
jmpq   29876 <png_do_write_interlace+0x106>
cmp    $0x1,%cl
je     2988e <png_do_write_interlace+0x11e>
mov    (%rdi),%r10d
movslq %edx,%rdx
movzbl (%rdx,%r8,1),%r8d
shr    $0x3,%ecx
movslq %ecx,%rcx
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %r9,-0x38(%rbp)
mov    %rdi,-0x30(%rbp)
mov    %r8,%rbx
mov    %rcx,%r12
mov    %rdx,%r13
mov    %r10,%r14
mov    %rsi,%r15
jmpq   298f8 <png_do_write_interlace+0x188>
mov    (%rdi),%edx
movzbl (%r9,%r8,1),%ecx
mov    $0x6,%r11d
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rcx,%r13
mov    %rdx,%r14
mov    %r11,%r15
mov    %rsi,%r12
mov    %r10,%r11
mov    %r15,%rdx
jmpq   2995a <png_do_write_interlace+0x1ea>
mov    %r11b,(%r12)
add    $0x1,%r12
mov    %r10,%r11
mov    %r15,%rdx
movzbl (%r9,%rax,1),%ecx
add    %ecx,%r13d
cmp    %r14d,%r13d
jb     2996e <png_do_write_interlace+0x1fe>
cmp    $0x4,%edx
je     2990c <png_do_write_interlace+0x19c>
mov    %r11b,(%r12)
jmp    2990c <png_do_write_interlace+0x19c>
mov    (%rdi),%ecx
movzbl (%r9,%r8,1),%r11d
mov    $0x7,%edx
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %r11,%r13
mov    %rcx,%r14
mov    %rdx,%r15
mov    %rsi,%r12
mov    %r10,%r11
jmpq   299b8 <png_do_write_interlace+0x248>
mov    %ebx,%ecx
imul   %r12,%rcx
add    %rsi,%rcx
cmp    %rcx,%r15
je     298ed <png_do_write_interlace+0x17d>
mov    %r15,%rdi
mov    %r12,%rdx
mov    %rsi,-0x40(%rbp)
mov    %rcx,%rsi
callq  54c0 <memcpy@plt>
lea    0x6acc(%rip),%rax        # 303b5 <png_pass_inc.54>
mov    -0x40(%rbp),%rsi
add    %r12,%r15
movzbl 0x0(%r13,%rax,1),%ecx
add    %ecx,%ebx
cmp    %r14d,%ebx
jb     298c2 <png_do_write_interlace+0x152>
lea    0x6aaa(%rip),%r8        # 303ae <png_pass_start.53>
mov    -0x30(%rbp),%rdi
mov    -0x38(%rbp),%r9
movzbl (%r9,%rax,1),%ecx
mov    (%rdi),%eax
lea    -0x1(%rcx,%rax,1),%eax
movzbl (%r9,%r8,1),%edx
sub    %edx,%eax
xor    %edx,%edx
div    %ecx
mov    %eax,(%rdi)
movzbl 0x13(%rdi),%ecx
cmp    $0x7,%cl
ja     299cf <png_do_write_interlace+0x25f>
mov    %eax,%eax
imul   %rax,%rcx
add    $0x7,%rcx
shr    $0x3,%rcx
jmpq   299d9 <png_do_write_interlace+0x269>
mov    %r11b,(%r12)
add    $0x1,%r12
mov    %r10,%r11
mov    %r15,%rdx
movzbl (%r9,%rax,1),%ecx
add    %ecx,%r13d
cmp    %r14d,%r13d
jb     299f3 <png_do_write_interlace+0x283>
cmp    $0x6,%edx
je     2990c <png_do_write_interlace+0x19c>
mov    %r11b,(%r12)
jmp    2990c <png_do_write_interlace+0x19c>
mov    %r13,%rcx
shr    %ecx
mov    %ecx,%ecx
movzbl (%rsi,%rcx,1),%ebx
mov    %r13,%rcx
and    $0x1,%ecx
add    $0xffffffff,%ecx
and    $0x4,%ecx
shr    %cl,%ebx
and    $0xf,%ebx
mov    %rdx,%rcx
shl    %cl,%ebx
or     %ebx,%r11d
test   %ecx,%ecx
je     29860 <png_do_write_interlace+0xf0>
lea    -0x4(%rcx),%edx
jmpq   2986e <png_do_write_interlace+0xfe>
mov    %r11b,(%r12)
add    $0x1,%r12
mov    %r10,%r11
mov    %r15,%rdx
movzbl (%r9,%rax,1),%ecx
add    %ecx,%r13d
cmp    %r14d,%r13d
jb     29a26 <png_do_write_interlace+0x2b6>
cmp    $0x7,%edx
je     2990c <png_do_write_interlace+0x19c>
mov    %r11b,(%r12)
jmpq   2990c <png_do_write_interlace+0x19c>
shr    $0x3,%rcx
mov    %eax,%eax
imul   %rax,%rcx
mov    %rcx,0x8(%rdi)
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
mov    %r13,%rcx
shr    $0x2,%ecx
mov    %ecx,%ecx
movzbl (%rsi,%rcx,1),%ebx
mov    %r13,%rcx
not    %ecx
and    $0x3,%ecx
add    %ecx,%ecx
shr    %cl,%ebx
and    $0x3,%ebx
mov    %rdx,%rcx
shl    %cl,%ebx
or     %ebx,%r11d
test   %ecx,%ecx
je     29944 <png_do_write_interlace+0x1d4>
lea    -0x2(%rcx),%edx
jmpq   29952 <png_do_write_interlace+0x1e2>
mov    %r13,%rcx
shr    $0x3,%ecx
mov    %ecx,%ecx
movzbl (%rsi,%rcx,1),%ebx
mov    %r13,%rcx
not    %ecx
and    $0x7,%ecx
shr    %cl,%ebx
and    $0x1,%ebx
mov    %rdx,%rcx
shl    %cl,%ebx
or     %ebx,%r11d
test   %ecx,%ecx
je     299a2 <png_do_write_interlace+0x232>
lea    -0x1(%rcx),%edx
jmpq   299b0 <png_do_write_interlace+0x240>
nopw   0x0(%rax,%rax,1)

0000000000029a60 <png_write_find_filter>:
push   %rbp
mov    %rsp,%rbp
sub    $0x40,%rsp
mov    %r15,-0x38(%rbp)
mov    %r14,-0x30(%rbp)
mov    %rsi,-0x10(%rbp)
mov    %rbx,-0x18(%rbp)
mov    %r12,-0x20(%rbp)
mov    %r13,-0x28(%rbp)
movzbl 0x13(%rsi),%r10d
movzbl 0x266(%rdi),%r9d
mov    0x228(%rdi),%r8
mov    $0xfffffffffffffeff,%rax
mov    0x8(%rsi),%rdx
movabs $0x1fffffffffffffe,%rcx
cmp    %rcx,%rdx
ja     29ad7 <png_write_find_filter+0x77>
mov    %r9,%rcx
and    $0x8,%ecx
test   %ecx,%ecx
je     29adf <png_write_find_filter+0x7f>
cmp    $0x8,%r9b
je     29adf <png_write_find_filter+0x7f>
lea    0x1(%r8),%rcx
xor    %eax,%eax
mov    $0x100,%r11d
mov    %r9,-0x40(%rbp)
mov    %r8,-0x8(%rbp)
mov    %rax,%r8
jmp    29b33 <png_write_find_filter+0xd3>
mov    %r9,%rcx
neg    %ecx
and    %ecx,%r9d
add    $0x7,%r10d
shr    $0x3,%r10d
cmp    $0x10,%r9d
je     29b42 <png_write_find_filter+0xe2>
mov    %r9,%rcx
and    $0x10,%ecx
test   %ecx,%ecx
jne    29bd9 <png_write_find_filter+0x179>
mov    %r12,%rcx
mov    %rdi,%r12
mov    %r15,%r11
mov    %r10,%r15
mov    %r14,%r10
mov    %r9,%r14
mov    %r13,%r9
mov    %rax,%r13
jmp    29b7c <png_write_find_filter+0x11c>
movzbl (%rcx),%r9d
cmp    $0x7f,%r9b
jbe    29b25 <png_write_find_filter+0xc5>
neg    %r9d
add    %r11d,%r9d
add    $0x1,%rcx
add    $0x1,%r8
mov    %r9d,%r9d
add    %r9,%rax
cmp    %r8,%rdx
ja     29b15 <png_write_find_filter+0xb5>
mov    -0x8(%rbp),%r8
mov    -0x40(%rbp),%r9
jmp    29adf <png_write_find_filter+0x7f>
mov    %rax,%r13
mov    %r9,%r14
mov    %r10,%r15
mov    %rdi,%r12
mov    %r15,%rsi
mov    %rdx,%rbx
callq  2aaa0 <png_setup_sub_row_only>
mov    0x230(%r12),%r8
mov    %rbx,%rdx
mov    -0x28(%rbp),%r9
mov    -0x20(%rbp),%rcx
mov    -0x18(%rbp),%rbx
mov    -0x10(%rbp),%rsi
mov    -0x30(%rbp),%r10
mov    -0x38(%rbp),%r11
cmp    $0x20,%r14d
je     29c33 <png_write_find_filter+0x1d3>
mov    %r14,%rax
and    $0x20,%eax
test   %eax,%eax
je     29c64 <png_write_find_filter+0x204>
mov    %r12,%rdi
mov    %rdx,%rsi
mov    %r13,%rax
mov    %rdx,-0x40(%rbp)
mov    %rax,%rdx
mov    %r8,%rbx
callq  2ab20 <png_setup_up_row>
cmp    %r13,%rax
jb     29cc4 <png_write_find_filter+0x264>
mov    %rbx,%r8
mov    -0x40(%rbp),%rdx
mov    -0x28(%rbp),%r9
mov    -0x20(%rbp),%rcx
mov    -0x18(%rbp),%rbx
mov    -0x10(%rbp),%rsi
mov    -0x30(%rbp),%r10
mov    -0x38(%rbp),%r11
jmpq   29c64 <png_write_find_filter+0x204>
mov    %rdi,%rbx
mov    %r10,%rsi
mov    %rdx,%r11
mov    %rax,%rcx
mov    %r10,-0x40(%rbp)
mov    %rdi,%r12
mov    %rbx,%rdi
mov    %r8,%rbx
mov    %rax,%r13
mov    %r9,%r14
mov    %rdx,%r15
mov    %r11,%rdx
callq  2a9d0 <png_setup_sub_row>
cmp    %r13,%rax
jb     29d01 <png_write_find_filter+0x2a1>
mov    %r15,%rdx
mov    %rbx,%r8
mov    -0x28(%rbp),%r9
mov    -0x20(%rbp),%rcx
mov    -0x18(%rbp),%rbx
mov    -0x10(%rbp),%rsi
mov    -0x40(%rbp),%r15
mov    -0x30(%rbp),%r10
mov    -0x38(%rbp),%r11
jmpq   29b7c <png_write_find_filter+0x11c>
mov    %rdx,%rbx
mov    %r12,%rdi
mov    %rbx,%rsi
callq  2abb0 <png_setup_up_row_only>
mov    0x230(%r12),%r8
mov    %rbx,%rdx
mov    -0x28(%rbp),%r9
mov    -0x20(%rbp),%rcx
mov    -0x18(%rbp),%rbx
mov    -0x10(%rbp),%rsi
mov    -0x30(%rbp),%r10
mov    -0x38(%rbp),%r11
cmp    $0x40,%r14d
je     29d41 <png_write_find_filter+0x2e1>
mov    %r14,%rax
and    $0x40,%eax
test   %eax,%eax
je     29d72 <png_write_find_filter+0x312>
mov    %r12,%rdi
mov    %r15,%rsi
mov    %rdx,%rax
mov    %r13,%rcx
mov    %rdx,-0x40(%rbp)
mov    %rax,%rdx
mov    %r8,%rbx
callq  2ac10 <png_setup_avg_row>
cmp    %r13,%rax
jb     29dc7 <png_write_find_filter+0x367>
mov    %rbx,%r8
mov    -0x40(%rbp),%rdx
mov    -0x28(%rbp),%r9
mov    -0x20(%rbp),%rcx
mov    -0x18(%rbp),%rbx
mov    -0x10(%rbp),%rsi
mov    -0x30(%rbp),%r10
mov    -0x38(%rbp),%r11
jmpq   29d72 <png_write_find_filter+0x312>
mov    0x230(%r12),%r8
mov    0x238(%r12),%rcx
test   %rcx,%rcx
jne    29e04 <png_write_find_filter+0x3a4>
mov    %rax,%r13
mov    -0x40(%rbp),%rdx
mov    -0x28(%rbp),%r9
mov    -0x20(%rbp),%rcx
mov    -0x18(%rbp),%rbx
mov    -0x10(%rbp),%rsi
mov    -0x30(%rbp),%r10
mov    -0x38(%rbp),%r11
jmpq   29c64 <png_write_find_filter+0x204>
mov    0x230(%r12),%r8
mov    0x238(%r12),%rcx
test   %rcx,%rcx
jne    29e38 <png_write_find_filter+0x3d8>
mov    %r15,%rdx
mov    %rax,%r13
mov    -0x28(%rbp),%r9
mov    -0x20(%rbp),%rcx
mov    -0x18(%rbp),%rbx
mov    -0x10(%rbp),%rsi
mov    -0x40(%rbp),%r15
mov    -0x30(%rbp),%r10
mov    -0x38(%rbp),%r11
jmpq   29b7c <png_write_find_filter+0x11c>
mov    %r12,%rdi
mov    %r15,%rsi
mov    %rdx,%rbx
callq  2ad20 <png_setup_avg_row_only>
mov    0x230(%r12),%r8
mov    %rbx,%rdx
mov    -0x28(%rbp),%r9
mov    -0x20(%rbp),%rcx
mov    -0x18(%rbp),%rbx
mov    -0x10(%rbp),%rsi
mov    -0x30(%rbp),%r10
mov    -0x38(%rbp),%r11
cmp    $0x80,%r14d
je     29e6f <png_write_find_filter+0x40f>
and    $0x80,%r14d
test   %r14d,%r14d
je     29e9c <png_write_find_filter+0x43c>
mov    %rsi,%r14
mov    %r15,%rsi
mov    %r8,%r15
mov    %r12,%rdi
mov    %r13,%rcx
callq  2adc0 <png_setup_paeth_row>
cmp    %r13,%rax
jb     29ebd <png_write_find_filter+0x45d>
mov    %r14,%rsi
mov    %r15,%r8
mov    -0x28(%rbp),%r9
mov    -0x20(%rbp),%rcx
mov    -0x30(%rbp),%r10
mov    -0x38(%rbp),%r11
jmpq   29e9c <png_write_find_filter+0x43c>
mov    0x230(%r12),%r8
mov    0x238(%r12),%rcx
test   %rcx,%rcx
jne    29ee7 <png_write_find_filter+0x487>
mov    %rax,%r13
mov    -0x40(%rbp),%rdx
mov    -0x28(%rbp),%r9
mov    -0x20(%rbp),%rcx
mov    -0x18(%rbp),%rbx
mov    -0x10(%rbp),%rsi
mov    -0x30(%rbp),%r10
mov    -0x38(%rbp),%r11
jmpq   29d72 <png_write_find_filter+0x312>
mov    %rcx,0x230(%r12)
mov    %r8,0x238(%r12)
mov    %rax,%r13
mov    -0x40(%rbp),%rdx
mov    -0x28(%rbp),%r9
mov    -0x20(%rbp),%rcx
mov    -0x18(%rbp),%rbx
mov    -0x10(%rbp),%rsi
mov    -0x30(%rbp),%r10
mov    -0x38(%rbp),%r11
jmpq   29c64 <png_write_find_filter+0x204>
mov    %rcx,0x230(%r12)
mov    %r8,0x238(%r12)
mov    %r15,%rdx
mov    %rax,%r13
mov    -0x28(%rbp),%r9
mov    -0x20(%rbp),%rcx
mov    -0x18(%rbp),%rbx
mov    -0x10(%rbp),%rsi
mov    -0x40(%rbp),%r15
mov    -0x30(%rbp),%r10
mov    -0x38(%rbp),%r11
jmpq   29b7c <png_write_find_filter+0x11c>
mov    %rsi,%r13
mov    %r15,%rsi
mov    %r9,%r15
mov    %rcx,%r14
mov    %r12,%rdi
callq  2af80 <png_setup_paeth_row_only>
mov    0x230(%r12),%r8
mov    %r14,%rcx
mov    %r13,%rsi
mov    %r15,%r9
mov    -0x30(%rbp),%r10
mov    -0x38(%rbp),%r11
mov    0x8(%rsi),%rdx
add    $0x1,%rdx
mov    %r8,%rsi
mov    %r12,%rdi
mov    %rcx,%r12
mov    %r9,%r13
mov    %r10,%r14
mov    %r11,%r15
callq  2a950 <png_write_filtered_row>
leaveq 
retq   
mov    0x230(%r12),%r8
mov    0x238(%r12),%rax
test   %rax,%rax
jne    29f1b <png_write_find_filter+0x4bb>
mov    %r14,%rsi
mov    -0x28(%rbp),%r9
mov    -0x20(%rbp),%rcx
mov    -0x30(%rbp),%r10
mov    -0x38(%rbp),%r11
jmp    29e9c <png_write_find_filter+0x43c>
mov    %rcx,0x230(%r12)
mov    %r8,0x238(%r12)
mov    %rax,%r13
mov    -0x40(%rbp),%rdx
mov    -0x28(%rbp),%r9
mov    -0x20(%rbp),%rcx
mov    -0x18(%rbp),%rbx
mov    -0x10(%rbp),%rsi
mov    -0x30(%rbp),%r10
mov    -0x38(%rbp),%r11
jmpq   29d72 <png_write_find_filter+0x312>
mov    %rax,0x230(%r12)
mov    %r8,0x238(%r12)
mov    %r14,%rsi
mov    -0x28(%rbp),%r9
mov    -0x20(%rbp),%rcx
mov    -0x30(%rbp),%r10
mov    -0x38(%rbp),%r11
jmpq   29e9c <png_write_find_filter+0x43c>
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

0000000000029f50 <png_write_chunk_header>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
test   %rdi,%rdi
jne    29f5f <png_write_chunk_header+0xf>
leaveq 
retq   
movl   $0x22,0x46c(%rdi)
lea    -0x18(%rbp),%rax
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rdi,%r14
mov    %rax,%rdi
mov    %rsi,%r15
mov    %rdx,%rsi
callq  5500 <png_save_uint_32@plt>
lea    -0x14(%rbp),%rdi
mov    %r15,%rsi
callq  5500 <png_save_uint_32@plt>
mov    $0x8,%edx
mov    %r14,%rdi
lea    -0x18(%rbp),%rsi
callq  23e50 <png_write_data>
mov    %r15d,0x218(%r14)
mov    %r14,%rdi
callq  6d90 <png_reset_crc>
mov    $0x4,%edx
mov    %r14,%rdi
lea    -0x14(%rbp),%rsi
callq  6dc0 <png_calculate_crc>
movl   $0x42,0x46c(%r14)
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

0000000000029fe0 <png_write_complete_chunk>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
test   %rdi,%rdi
jne    29fef <png_write_complete_chunk+0xf>
leaveq 
retq   
cmp    $0x7fffffff,%rcx
ja     2a042 <png_write_complete_chunk+0x62>
mov    %rdi,%rax
mov    %rcx,%r8
mov    %r13,-0x8(%rbp)
mov    %r14,-0x10(%rbp)
mov    %r15,-0x18(%rbp)
mov    %rdi,%r13
mov    %rax,%rdi
mov    %rcx,%r14
mov    %rdx,%r15
mov    %r8,%rdx
callq  29f50 <png_write_chunk_header>
mov    %r14,%rdx
mov    %r15,%rsi
mov    %r13,%rdi
callq  5100 <png_write_chunk_data@plt>
mov    %r13,%rdi
callq  5480 <png_write_chunk_end@plt>
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
leaveq 
retq   
lea    0x6373(%rip),%rsi        # 303bc <png_pass_inc.54+0x7>
callq  5470 <png_error@plt>
xchg   %ax,%ax

000000000002a050 <png_image_size>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    0x1fc(%rdi),%eax
mov    $0xffffffff,%ecx
mov    0x208(%rdi),%rdx
cmp    $0x7fff,%rdx
jbe    2a078 <png_image_size+0x28>
mov    %rcx,%rax
leaveq 
retq   
cmp    $0x7fff,%eax
jbe    2a084 <png_image_size+0x34>
mov    %rcx,%rax
leaveq 
retq   
movzbl 0x264(%rdi),%ecx
test   %cl,%cl
jne    2a099 <png_image_size+0x49>
lea    0x1(%rdx),%rcx
imul   %rcx,%rax
leaveq 
retq   
mov    0x1f8(%rdi),%r8d
movzbl 0x26a(%rdi),%edi
mov    %rdi,%r9
shr    $0x3,%r9
xor    %ecx,%ecx
mov    $0x1,%edx
mov    $0x3,%esi
mov    $0x7,%r10d
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rcx,%r11
mov    %rdx,%r14
mov    %r11,%rdx
mov    %rdx,%rbx
jmp    2a12a <png_image_size+0xda>
sub    %edx,%r12d
sar    %r12d
mov    $0x1,%r15d
shl    %cl,%r15d
add    $0xffffffff,%r15d
mov    %rdx,%rcx
sar    %ecx
neg    %ecx
add    %esi,%ecx
not    %edx
and    $0x1,%edx
shl    %cl,%edx
and    $0x7,%edx
sub    %edx,%r15d
lea    (%rax,%r15,1),%edx
mov    %r12,%rcx
shr    %cl,%edx
mov    %edx,%ecx
lea    0x1(%r14),%rdx
imul   %rdx,%rcx
add    %rcx,%r11
mov    %r13,%rdx
mov    $0x1,%r14d
cmp    $0x6,%edx
jle    2a148 <png_image_size+0xf8>
mov    %r11,%rax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
cmp    $0x1,%edx
jg     2a155 <png_image_size+0x105>
mov    %rsi,%rcx
mov    %rbx,%r12
jmp    2a15f <png_image_size+0x10f>
mov    %r10,%rcx
sub    %edx,%ecx
sar    %ecx
mov    %r14,%r12
test   %r12,%r12
jne    2a169 <png_image_size+0x119>
mov    %rsi,%r12
jmp    2a172 <png_image_size+0x122>
mov    %r10,%r12
sub    %edx,%r12d
sar    %r12d
shl    %cl,%r14d
lea    -0x1(%r14),%r15d
lea    0x1(%rdx),%r13d
mov    %r13,%rcx
sar    %ecx
neg    %ecx
add    %esi,%ecx
mov    %rdx,%r14
and    $0x1,%r14d
shl    %cl,%r14d
and    $0x7,%r14d
sub    %r14d,%r15d
lea    (%r15,%r8,1),%r14d
mov    %r12,%rcx
shr    %cl,%r14d
test   %r14d,%r14d
jne    2a1b4 <png_image_size+0x164>
mov    %r13,%rdx
mov    $0x1,%r14d
jmpq   2a12a <png_image_size+0xda>
cmp    $0x7,%dil
ja     2a1cb <png_image_size+0x17b>
mov    %r14d,%ecx
imul   %rdi,%rcx
lea    0x7(%rcx),%r14
shr    $0x3,%r14
jmp    2a1d5 <png_image_size+0x185>
mov    %r14d,%ecx
mov    %r9,%r14
imul   %rcx,%r14
cmp    $0x2,%edx
jg     2a1e8 <png_image_size+0x198>
mov    $0x8,%r12d
mov    %rsi,%rcx
mov    %rbx,%r15
jmp    2a1fb <png_image_size+0x1ab>
mov    $0x8,%r12d
mov    %r12,%rcx
sub    %edx,%ecx
sar    %ecx
mov    $0x1,%r15d
test   %r15,%r15
jne    2a0e2 <png_image_size+0x92>
mov    %rsi,%r12
jmpq   2a0e8 <png_image_size+0x98>
nopl   0x0(%rax)

000000000002a210 <optimize_cmf>:
push   %rbp
mov    %rsp,%rbp
cmp    $0x4000,%rsi
jbe    2a21f <optimize_cmf+0xf>
leaveq 
retq   
movzbl (%rdi),%edx
mov    %rdx,%rax
and    $0xf,%eax
cmp    $0x8,%eax
je     2a22f <optimize_cmf+0x1f>
leaveq 
retq   
mov    %rdx,%rax
and    $0xf0,%eax
cmp    $0x70,%eax
jbe    2a23e <optimize_cmf+0x2e>
leaveq 
retq   
mov    $0x1,%eax
shr    $0x4,%edx
lea    0x7(%rdx),%ecx
shl    %cl,%eax
mov    %eax,%ecx
cmp    %rcx,%rsi
jbe    2a25d <optimize_cmf+0x4d>
leaveq 
retq   
shr    %eax
mov    %eax,%ecx
cmp    %rsi,%rcx
jb     2a264 <optimize_cmf+0x54>
add    $0xffffffff,%edx
test   %edx,%edx
jne    2a254 <optimize_cmf+0x44>
shl    $0x4,%edx
lea    0x8(%rdx),%eax
mov    %al,(%rdi)
movzbl 0x1(%rdi),%ecx
and    $0xe0,%ecx
shl    $0x8,%eax
lea    (%rcx,%rax,1),%esi
lea    0x1(%rsi),%edx
mov    $0x42108421,%eax
mul    %edx
shr    $0x3,%edx
mov    %rdx,%rax
shl    $0x5,%eax
sub    %eax,%edx
add    %esi,%edx
mov    $0x1f,%eax
sub    %edx,%eax
add    %ecx,%eax
mov    %al,0x1(%rdi)
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   0x0(%rax)

000000000002a2b0 <png_deflate_claim>:
push   %rbp
mov    %rsp,%rbp
sub    $0x80,%rsp
mov    %r15,-0x30(%rbp)
mov    %r14,-0x28(%rbp)
mov    0x138(%rdi),%ecx
test   %ecx,%ecx
jne    2a3c3 <png_deflate_claim+0x113>
mov    %rdx,%r11
mov    %rdi,%r15
movslq 0x1bc(%r15),%r10
movslq 0x1c0(%r15),%rdx
movslq 0x1c4(%r15),%r14
movslq 0x1c8(%r15),%r8
xor    %r9d,%r9d
mov    $0x1,%eax
cmp    $0x49444154,%esi
je     2a46e <png_deflate_claim+0x1be>
movslq 0x1d0(%r15),%r10
movslq 0x1d4(%r15),%rdx
movslq 0x1d8(%r15),%r14
movslq 0x1dc(%r15),%r8
movslq 0x1e0(%r15),%r9
cmp    $0x4000,%r11
jbe    2a49a <png_deflate_claim+0x1ea>
lea    0x140(%r15),%rdi
mov    0x130(%r15),%eax
and    $0x2,%eax
test   %eax,%eax
je     2a4ed <png_deflate_claim+0x23d>
cmp    0x1e4(%r15),%r10d
jne    2a381 <png_deflate_claim+0xd1>
cmp    0x1e8(%r15),%edx
jne    2a381 <png_deflate_claim+0xd1>
cmp    0x1ec(%r15),%r14d
jne    2a381 <png_deflate_claim+0xd1>
cmp    0x1f0(%r15),%r8d
jne    2a381 <png_deflate_claim+0xd1>
cmp    0x1f4(%r15),%r9d
je     2a4ed <png_deflate_claim+0x23d>
mov    %rdi,%rax
mov    %rsi,-0x8(%rbp)
mov    %r8,-0x38(%rbp)
mov    %r9,-0x40(%rbp)
mov    %rbx,-0x10(%rbp)
mov    %r12,-0x18(%rbp)
mov    %r13,-0x20(%rbp)
mov    %r10,%rbx
mov    %rdx,%r12
mov    %rdi,%r13
mov    %rax,%rdi
callq  5670 <deflateEnd@plt>
test   %eax,%eax
jne    2a4ac <png_deflate_claim+0x1fc>
mov    %r12,%rdx
mov    %r13,%rdi
mov    %rbx,%r10
jmpq   2a4c4 <png_deflate_claim+0x214>
mov    %rsi,%rax
shr    $0x18,%eax
mov    %al,-0x80(%rbp)
mov    %rsi,%rax
shr    $0x10,%eax
mov    %al,-0x7f(%rbp)
mov    %rsi,%rax
shr    $0x8,%eax
mov    %al,-0x7e(%rbp)
mov    %sil,-0x7d(%rbp)
movb   $0x3a,-0x7c(%rbp)
movb   $0x20,-0x7b(%rbp)
mov    %rcx,%rax
shr    $0x18,%eax
mov    %al,-0x7a(%rbp)
mov    %rcx,%rax
shr    $0x10,%eax
mov    %al,-0x79(%rbp)
mov    %rcx,%rax
shr    $0x8,%eax
mov    %al,-0x78(%rbp)
mov    %cl,-0x77(%rbp)
lea    -0x80(%rbp),%rax
mov    $0x40,%r8d
mov    $0xa,%r9d
lea    0x5fb8(%rip),%rcx        # 303d7 <png_pass_inc.54+0x22>
mov    %rsi,-0x40(%rbp)
mov    %rdx,-0x38(%rbp)
mov    %r9,%rdx
mov    %r8,%rsi
mov    %rdi,%r15
mov    %rax,%rdi
callq  ad30 <png_safecat>
mov    %r15,%rdi
lea    -0x80(%rbp),%rsi
callq  5390 <png_warning@plt>
mov    0x138(%r15),%eax
cmp    $0x49444154,%eax
je     2a56d <png_deflate_claim+0x2bd>
movl   $0x0,0x138(%r15)
mov    -0x38(%rbp),%r11
mov    -0x40(%rbp),%rsi
jmpq   2a2d7 <png_deflate_claim+0x27>
mov    0x130(%r15),%eax
and    $0x1,%eax
test   %eax,%eax
jne    2a588 <png_deflate_claim+0x2d8>
movzbl 0x266(%r15),%eax
cmp    $0x8,%al
jne    2a599 <png_deflate_claim+0x2e9>
mov    $0x1,%eax
jmpq   2a32a <png_deflate_claim+0x7a>
lea    0x1f(%r14),%ecx
shl    %cl,%eax
lea    0x106(%r11),%rcx
jmpq   2a5ac <png_deflate_claim+0x2fc>
lea    0x5f42(%rip),%rsi        # 303f5 <png_pass_inc.54+0x40>
mov    %r15,%rdi
callq  5390 <png_warning@plt>
mov    %r12,%rdx
mov    %r13,%rdi
mov    %rbx,%r10
mov    0x130(%r15),%eax
and    $0xfffffffd,%eax
mov    %eax,0x130(%r15)
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
mov    -0x10(%rbp),%rbx
mov    -0x40(%rbp),%r9
mov    -0x38(%rbp),%r8
mov    -0x8(%rbp),%rsi
movq   $0x0,0x140(%r15)
movl   $0x0,0x148(%r15)
movq   $0x0,0x158(%r15)
movl   $0x0,0x160(%r15)
mov    0x130(%r15),%eax
and    $0x2,%eax
test   %eax,%eax
jne    2a5b8 <png_deflate_claim+0x308>
sub    $0x10,%rsp
lea    0x5edb(%rip),%rax        # 30411 <png_pass_inc.54+0x5c>
mov    %rax,(%rsp)
mov    %r14,%rcx
mov    %rsi,%r14
mov    %r10,%rsi
movl   $0x70,0x8(%rsp)
callq  53b0 <deflateInit2_@plt>
add    $0x10,%rsp
test   %eax,%eax
jne    2a5c0 <png_deflate_claim+0x310>
mov    0x130(%r15),%eax
or     $0x2,%eax
mov    %eax,0x130(%r15)
xor    %eax,%eax
jmp    2a5c0 <png_deflate_claim+0x310>
lea    0x5e72(%rip),%rax        # 303e6 <png_pass_inc.54+0x31>
mov    %rax,0x170(%r15)
mov    $0xfffffffffffffffe,%rax
mov    -0x30(%rbp),%r15
leaveq 
retq   
movslq 0x1cc(%r15),%r9
mov    $0x1,%eax
jmpq   2a32a <png_deflate_claim+0x7a>
mov    $0x1,%eax
mov    %rax,%r9
jmpq   2a32a <png_deflate_claim+0x7a>
shr    %eax
add    $0xffffffff,%r14d
mov    %eax,%edi
cmp    %rcx,%rdi
jae    2a5a6 <png_deflate_claim+0x2f6>
jmpq   2a337 <png_deflate_claim+0x87>
mov    %rsi,%r14
callq  52e0 <deflateReset@plt>
test   %eax,%eax
je     2a5df <png_deflate_claim+0x32f>
mov    %r15,%rdi
mov    %rax,%r15
mov    %r15,%rsi
callq  6920 <png_zstream_error>
mov    %r15,%rax
mov    -0x28(%rbp),%r14
mov    -0x30(%rbp),%r15
leaveq 
retq   
mov    %r14d,0x138(%r15)
mov    -0x28(%rbp),%r14
xor    %eax,%eax
mov    -0x30(%rbp),%r15
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   (%rax)

000000000002a600 <png_text_compress_init>:
push   %rbp
mov    %rsp,%rbp
mov    %rsi,(%rdi)
mov    %rdx,0x8(%rdi)
movl   $0x0,0x10(%rdi)
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nop

000000000002a620 <png_text_compress>:
push   %rbp
mov    %rsp,%rbp
sub    $0x50,%rsp
mov    %r15,-0x38(%rbp)
mov    %rdi,-0x50(%rbp)
mov    %rcx,-0x48(%rbp)
mov    %rdx,%r15
mov    0x8(%r15),%rdx
callq  2a2b0 <png_deflate_claim>
test   %eax,%eax
je     2a64a <png_text_compress+0x2a>
mov    -0x38(%rbp),%r15
leaveq 
retq   
mov    0x8(%r15),%r11
mov    (%r15),%rax
mov    -0x50(%rbp),%rdi
mov    %rax,0x140(%rdi)
movl   $0x0,0x148(%rdi)
lea    0x14(%r15),%rax
mov    %rax,-0x8(%rbp)
mov    %rax,0x158(%rdi)
movl   $0x400,0x160(%rdi)
xor    %esi,%esi
lea    0x140(%rdi),%r9
mov    %r9,-0x40(%rbp)
lea    0x1b0(%rdi),%r10
mov    $0xffffffff,%eax
mov    $0x4,%ecx
mov    $0x400,%edx
mov    $0xfffffffe,%r8d
mov    %r15,-0x10(%rbp)
mov    %rbx,-0x18(%rbp)
mov    %r12,-0x20(%rbp)
mov    %r13,-0x28(%rbp)
mov    %r14,-0x30(%rbp)
mov    %rdx,%rbx
mov    %r9,%r12
mov    %r10,%r13
mov    %r11,%r14
mov    %rdi,%r15
mov    -0x48(%rbp),%rdi
jmp    2a6e7 <png_text_compress+0xc7>
mov    $0xffffffff,%eax
mov    $0xfffffffe,%r8d
mov    $0x4,%ecx
xor    %esi,%esi
mov    -0x48(%rbp),%rdi
cmp    %r8,%r14
ja     2a6ef <png_text_compress+0xcf>
mov    %r14,%rax
mov    %eax,0x148(%r15)
mov    %eax,%eax
mov    %r14,%rdx
sub    %rax,%rdx
mov    0x160(%r15),%r8d
test   %r8d,%r8d
je     2a778 <png_text_compress+0x158>
cmp    %rax,%r14
jne    2a712 <png_text_compress+0xf2>
mov    %rcx,%rsi
mov    %rdx,%r14
mov    %r12,%rdi
callq  5330 <deflate@plt>
mov    0x148(%r15),%ecx
movl   $0x0,0x148(%r15)
add    %rcx,%r14
test   %eax,%eax
je     2a6d1 <png_text_compress+0xb1>
mov    %rax,%r12
xor    %esi,%esi
mov    -0x48(%rbp),%rdi
mov    0x160(%r15),%eax
movl   $0x0,0x160(%r15)
sub    %eax,%ebx
mov    -0x10(%rbp),%r13
mov    %ebx,0x10(%r13)
lea    (%rdi,%rbx,1),%eax
cmp    $0x7ffffffe,%eax
ja     2a7b1 <png_text_compress+0x191>
mov    %rsi,%rbx
mov    %r15,%rdi
mov    %r12,%rsi
callq  6920 <png_zstream_error>
mov    %rbx,%rsi
jmp    2a7c6 <png_text_compress+0x1a6>
lea    (%rbx,%rdi,1),%r8d
cmp    $0x7fffffff,%r8d
ja     2a7f0 <png_text_compress+0x1d0>
mov    0x0(%r13),%rdi
test   %rdi,%rdi
je     2a7ff <png_text_compress+0x1df>
mov    %rdi,%r13
lea    0x8(%r13),%rdi
mov    %rdi,0x158(%r15)
mov    0x1b8(%r15),%edi
mov    %edi,0x160(%r15)
add    %edi,%ebx
jmpq   2a70a <png_text_compress+0xea>
lea    0x5c60(%rip),%rax        # 30418 <png_pass_inc.54+0x63>
mov    %rax,0x170(%r15)
mov    $0xfffffffffffffffc,%r12
movl   $0x0,0x138(%r15)
cmp    $0x1,%r12d
je     2a849 <png_text_compress+0x229>
mov    %r12,%rax
mov    -0x30(%rbp),%r14
mov    -0x28(%rbp),%r13
mov    -0x20(%rbp),%r12
mov    -0x18(%rbp),%rbx
mov    -0x38(%rbp),%r15
leaveq 
retq   
mov    %rdx,%r14
mov    $0xfffffffffffffffc,%r12
jmpq   2a73f <png_text_compress+0x11f>
mov    0x1b8(%r15),%ecx
lea    0x8(%rcx),%rsi
mov    %r15,%rdi
mov    %rdx,-0x50(%rbp)
mov    %r13,%r12
mov    %rax,%r13
callq  c950 <png_malloc_base>
test   %rax,%rax
je     2a869 <png_text_compress+0x249>
movq   $0x0,(%rax)
mov    %rax,(%r12)
mov    %r13,%rcx
mov    %rax,%r13
mov    %rcx,%rax
mov    $0x4,%ecx
xor    %esi,%esi
mov    -0x50(%rbp),%rdx
mov    -0x40(%rbp),%r12
jmpq   2a791 <png_text_compress+0x171>
test   %r14,%r14
je     2a87f <png_text_compress+0x25f>
mov    $0x1,%eax
mov    -0x30(%rbp),%r14
mov    -0x28(%rbp),%r13
mov    -0x20(%rbp),%r12
mov    -0x18(%rbp),%rbx
mov    -0x38(%rbp),%r15
leaveq 
retq   
xor    %esi,%esi
mov    -0x50(%rbp),%r14
mov    $0xfffffffffffffffc,%r12
mov    -0x48(%rbp),%rdi
jmpq   2a73f <png_text_compress+0x11f>
mov    0x8(%r13),%rax
mov    %rsi,%r12
mov    %rax,%rsi
mov    -0x8(%rbp),%rdi
callq  2a210 <optimize_cmf>
mov    %r12,%rax
mov    -0x30(%rbp),%r14
mov    -0x28(%rbp),%r13
mov    -0x20(%rbp),%r12
mov    -0x18(%rbp),%rbx
mov    -0x38(%rbp),%r15
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

000000000002a8b0 <png_write_compressed_data_out>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %r12,-0x8(%rbp)
mov    %r13,-0x10(%rbp)
mov    %r14,-0x18(%rbp)
mov    %r15,-0x20(%rbp)
mov    0x10(%rsi),%r12d
mov    0x1b0(%rdi),%r14
add    $0x14,%rsi
mov    %rbx,%r13
mov    %rdi,%rbx
mov    $0x400,%eax
jmp    2a90f <png_write_compressed_data_out+0x5f>
mov    %r12,%r15
mov    %r15d,%edx
mov    %rbx,%rdi
callq  5100 <png_write_chunk_data@plt>
cmp    %r12d,%r15d
je     2a919 <png_write_compressed_data_out+0x69>
test   %r14,%r14
je     2a919 <png_write_compressed_data_out+0x69>
mov    0x1b8(%rbx),%eax
mov    (%r14),%rcx
sub    %r15d,%r12d
lea    0x8(%r14),%rsi
mov    %rcx,%r14
cmp    %r12d,%eax
ja     2a8e4 <png_write_compressed_data_out+0x34>
mov    %rax,%r15
jmp    2a8e7 <png_write_compressed_data_out+0x37>
cmp    %r12d,%r15d
jne    2a933 <png_write_compressed_data_out+0x83>
mov    %r13,%rbx
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
leaveq 
retq   
mov    %rbx,%rdi
lea    0x5af4(%rip),%rsi        # 30431 <png_pass_inc.54+0x7c>
callq  5470 <png_error@plt>
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   (%rax)

000000000002a950 <png_write_filtered_row>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x8(%rbp)
xor    %ecx,%ecx
mov    %rdi,%r15
callq  27dd0 <png_compress_IDAT>
mov    0x220(%r15),%rax
test   %rax,%rax
je     2a987 <png_write_filtered_row+0x37>
mov    0x228(%r15),%rcx
mov    %rcx,0x220(%r15)
mov    %rax,0x228(%r15)
mov    %r15,%rdi
callq  293d0 <png_write_finish_row>
mov    0x29c(%r15),%eax
add    $0x1,%eax
mov    %eax,0x29c(%r15)
mov    0x298(%r15),%ecx
test   %ecx,%ecx
jne    2a9b1 <png_write_filtered_row+0x61>
mov    -0x8(%rbp),%r15
leaveq 
retq   
cmp    %eax,%ecx
jbe    2a9bb <png_write_filtered_row+0x6b>
mov    -0x8(%rbp),%r15
leaveq 
retq   
mov    %r15,%rdi
callq  58c0 <png_write_flush@plt>
mov    -0x8(%rbp),%r15
leaveq 
retq   
nopl   0x0(%rax)

000000000002a9d0 <png_setup_sub_row>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %rcx,-0x10(%rbp)
mov    0x230(%rdi),%rax
movb   $0x1,(%rax)
mov    %esi,%r10d
mov    0x228(%rdi),%rcx
add    $0x1,%rcx
mov    0x230(%rdi),%rsi
add    $0x1,%rsi
mov    $0x100,%r11d
xor    %r8d,%r8d
mov    %r8,%rax
jmp    2aa32 <png_setup_sub_row+0x62>
movzbl (%rcx),%r9d
mov    %r9b,(%rsi)
cmp    $0x7f,%r9b
jbe    2aa20 <png_setup_sub_row+0x50>
neg    %r9d
add    %r11d,%r9d
mov    %r9d,%r9d
add    %r9,%rax
add    $0x1,%rcx
add    $0x1,%rsi
add    $0x1,%r8
cmp    %r10,%r8
jb     2aa0d <png_setup_sub_row+0x3d>
mov    0x228(%rdi),%rdi
add    $0x1,%rdi
mov    %r15,-0x8(%rbp)
mov    -0x10(%rbp),%r15
jmp    2aa85 <png_setup_sub_row+0xb5>
movzbl (%rcx),%r9d
movzbl (%rdi),%r10d
sub    %r10b,%r9b
movzbl %r9b,%r10d
mov    %r9b,(%rsi)
cmp    $0x7f,%r9b
jbe    2aa6a <png_setup_sub_row+0x9a>
neg    %r10d
add    %r11d,%r10d
mov    %r10d,%r9d
add    %r9,%rax
cmp    %r15,%rax
ja     2aa90 <png_setup_sub_row+0xc0>
add    $0x1,%rcx
add    $0x1,%rdi
add    $0x1,%rsi
add    $0x1,%r8
cmp    %rdx,%r8
jb     2aa4c <png_setup_sub_row+0x7c>
mov    -0x8(%rbp),%r15
leaveq 
retq   
mov    -0x8(%rbp),%r15
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)

000000000002aaa0 <png_setup_sub_row_only>:
push   %rbp
mov    %rsp,%rbp
mov    0x230(%rdi),%rax
movb   $0x1,(%rax)
mov    %esi,%r9d
mov    0x228(%rdi),%rax
add    $0x1,%rax
mov    0x230(%rdi),%rcx
add    $0x1,%rcx
xor    %esi,%esi
jmp    2aade <png_setup_sub_row_only+0x3e>
movzbl (%rax),%r8d
mov    %r8b,(%rcx)
add    $0x1,%rax
add    $0x1,%rcx
add    $0x1,%rsi
cmp    %r9,%rsi
jb     2aacb <png_setup_sub_row_only+0x2b>
mov    0x228(%rdi),%rdi
add    $0x1,%rdi
jmp    2ab0e <png_setup_sub_row_only+0x6e>
movzbl (%rax),%r8d
movzbl (%rdi),%r9d
sub    %r9b,%r8b
mov    %r8b,(%rcx)
add    $0x1,%rsi
add    $0x1,%rax
add    $0x1,%rdi
add    $0x1,%rcx
cmp    %rdx,%rsi
jb     2aaf0 <png_setup_sub_row_only+0x50>
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)

000000000002ab20 <png_setup_up_row>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x8(%rbp)
mov    0x230(%rdi),%rax
movb   $0x2,(%rax)
mov    0x228(%rdi),%rcx
add    $0x1,%rcx
mov    0x220(%rdi),%r8
add    $0x1,%r8
mov    0x230(%rdi),%rdi
add    $0x1,%rdi
xor    %r9d,%r9d
mov    $0x100,%r15d
mov    %r9,%rax
jmp    2ab9e <png_setup_up_row+0x7e>
movzbl (%rcx),%r10d
movzbl (%r8),%r11d
sub    %r11b,%r10b
movzbl %r10b,%r11d
mov    %r10b,(%rdi)
cmp    $0x7f,%r10b
jbe    2ab83 <png_setup_up_row+0x63>
neg    %r11d
add    %r15d,%r11d
mov    %r11d,%r10d
add    %r10,%rax
cmp    %rdx,%rax
ja     2aba9 <png_setup_up_row+0x89>
add    $0x1,%rcx
add    $0x1,%r8
add    $0x1,%rdi
add    $0x1,%r9
cmp    %rsi,%r9
jb     2ab65 <png_setup_up_row+0x45>
mov    -0x8(%rbp),%r15
leaveq 
retq   
mov    -0x8(%rbp),%r15
leaveq 
retq   
nop

000000000002abb0 <png_setup_up_row_only>:
push   %rbp
mov    %rsp,%rbp
mov    0x230(%rdi),%rax
movb   $0x2,(%rax)
mov    0x228(%rdi),%rax
add    $0x1,%rax
mov    0x220(%rdi),%rcx
add    $0x1,%rcx
mov    0x230(%rdi),%rdx
add    $0x1,%rdx
xor    %edi,%edi
jmp    2ac01 <png_setup_up_row_only+0x51>
movzbl (%rax),%r8d
movzbl (%rcx),%r9d
sub    %r9b,%r8b
mov    %r8b,(%rdx)
add    $0x1,%rdi
add    $0x1,%rax
add    $0x1,%rcx
add    $0x1,%rdx
cmp    %rsi,%rdi
jb     2abe3 <png_setup_up_row_only+0x33>
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

000000000002ac10 <png_setup_avg_row>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %rdi,-0x18(%rbp)
mov    %rdx,-0x10(%rbp)
mov    %rcx,-0x20(%rbp)
mov    0x230(%rdi),%rax
movb   $0x3,(%rax)
mov    0x228(%rdi),%rcx
add    $0x1,%rcx
mov    0x220(%rdi),%rdx
add    $0x1,%rdx
mov    0x230(%rdi),%rdi
add    $0x1,%rdi
mov    $0x100,%r11d
xor    %r8d,%r8d
mov    %r8,%rax
jmp    2ac94 <png_setup_avg_row+0x84>
movzbl (%rcx),%r9d
movzbl (%rdx),%r10d
shr    %r10d
sub    %r10b,%r9b
movzbl %r9b,%r10d
mov    %r9b,(%rdi)
cmp    $0x7f,%r9b
jbe    2ac7e <png_setup_avg_row+0x6e>
neg    %r10d
add    %r11d,%r10d
mov    %r10d,%r9d
add    %r9,%rax
add    $0x1,%rcx
add    $0x1,%rdx
add    $0x1,%rdi
add    $0x1,%r8d
cmp    %esi,%r8d
jb     2ac5d <png_setup_avg_row+0x4d>
mov    -0x18(%rbp),%rsi
mov    0x228(%rsi),%rsi
add    $0x1,%rsi
mov    %r14,-0x8(%rbp)
mov    %r15,-0x18(%rbp)
mov    -0x20(%rbp),%r15
mov    -0x10(%rbp),%r14
jmp    2ad01 <png_setup_avg_row+0xf1>
movzbl (%rsi),%r10d
movzbl (%rdx),%r9d
add    %r10d,%r9d
shr    %r9d
movzbl (%rcx),%r10d
sub    %r9b,%r10b
movzbl %r10b,%r9d
mov    %r10b,(%rdi)
cmp    $0x7f,%r10b
jbe    2ace2 <png_setup_avg_row+0xd2>
neg    %r9d
add    %r11d,%r9d
mov    %r9d,%r9d
add    %r9,%rax
cmp    %r15,%rax
ja     2ad13 <png_setup_avg_row+0x103>
add    $0x1,%rcx
add    $0x1,%rsi
add    $0x1,%rdx
add    $0x1,%rdi
add    $0x1,%r8d
mov    %r8d,%r9d
cmp    %r14,%r9
jb     2acba <png_setup_avg_row+0xaa>
mov    -0x18(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
mov    -0x18(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
nopl   (%rax)

000000000002ad20 <png_setup_avg_row_only>:
push   %rbp
mov    %rsp,%rbp
mov    0x230(%rdi),%rax
movb   $0x3,(%rax)
mov    0x228(%rdi),%rax
add    $0x1,%rax
mov    0x220(%rdi),%rcx
add    $0x1,%rcx
mov    0x230(%rdi),%r8
add    $0x1,%r8
xor    %r9d,%r9d
jmp    2ad75 <png_setup_avg_row_only+0x55>
movzbl (%rax),%r10d
movzbl (%rcx),%r11d
shr    %r11d
sub    %r11b,%r10b
mov    %r10b,(%r8)
add    $0x1,%rax
add    $0x1,%rcx
add    $0x1,%r8
add    $0x1,%r9d
cmp    %esi,%r9d
jb     2ad54 <png_setup_avg_row_only+0x34>
mov    0x228(%rdi),%rsi
add    $0x1,%rsi
jmp    2adb1 <png_setup_avg_row_only+0x91>
movzbl (%rsi),%r10d
movzbl (%rcx),%edi
add    %r10d,%edi
shr    %edi
movzbl (%rax),%r10d
sub    %dil,%r10b
mov    %r10b,(%r8)
add    $0x1,%r9d
add    $0x1,%rax
add    $0x1,%rsi
add    $0x1,%rcx
add    $0x1,%r8
mov    %r9d,%edi
cmp    %rdx,%rdi
jb     2ad87 <png_setup_avg_row_only+0x67>
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

000000000002adc0 <png_setup_paeth_row>:
push   %rbp
mov    %rsp,%rbp
sub    $0x50,%rsp
mov    %rdi,-0x40(%rbp)
mov    %rdx,-0x38(%rbp)
mov    %rcx,-0x48(%rbp)
mov    0x230(%rdi),%rax
movb   $0x4,(%rax)
mov    %esi,%r10d
mov    0x228(%rdi),%rcx
add    $0x1,%rcx
mov    0x220(%rdi),%rdx
add    $0x1,%rdx
mov    0x230(%rdi),%rsi
add    $0x1,%rsi
mov    $0x100,%r11d
xor    %r8d,%r8d
mov    %r8,%rax
jmp    2ae43 <png_setup_paeth_row+0x83>
movzbl (%rcx),%edi
movzbl (%rdx),%r9d
sub    %r9b,%dil
movzbl %dil,%r9d
mov    %dil,(%rsi)
cmp    $0x7f,%dil
jbe    2ae2d <png_setup_paeth_row+0x6d>
neg    %r9d
add    %r11d,%r9d
mov    %r9d,%edi
add    %rdi,%rax
add    $0x1,%rcx
add    $0x1,%rdx
add    $0x1,%rsi
add    $0x1,%r8
cmp    %r10,%r8
jb     2ae10 <png_setup_paeth_row+0x50>
mov    -0x40(%rbp),%r9
mov    0x220(%r9),%rdi
add    $0x1,%rdi
mov    0x228(%r9),%r9
add    $0x1,%r9
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    -0x48(%rbp),%r11
mov    -0x38(%rbp),%rbx
jmp    2aecf <png_setup_paeth_row+0x10f>
cmp    %ebx,%edi
jg     2ae87 <png_setup_paeth_row+0xc7>
mov    %r14,%r10
movzbl (%rcx),%edi
sub    %r10b,%dil
movzbl %dil,%ebx
mov    %dil,(%rsi)
cmp    $0x7f,%dil
ja     2aeea <png_setup_paeth_row+0x12a>
mov    %rbx,%rdi
mov    %edi,%edi
add    %rdi,%rax
cmp    %r11,%rax
ja     2aef3 <png_setup_paeth_row+0x133>
add    $0x1,%rcx
add    $0x1,%rdx
mov    -0x40(%rbp),%rdi
add    $0x1,%rdi
mov    -0x48(%rbp),%rbx
lea    0x1(%rbx),%r9
add    $0x1,%rsi
mov    -0x30(%rbp),%rbx
lea    0x1(%rbx),%r8
mov    -0x38(%rbp),%rbx
cmp    %rbx,%r8
jb     2af09 <png_setup_paeth_row+0x149>
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
mov    $0x100,%edi
sub    %ebx,%edi
jmp    2ae9d <png_setup_paeth_row+0xdd>
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
movzbl (%r9),%r15d
movzbl (%rdx),%r14d
movzbl (%rdi),%r10d
mov    %r10,%r12
sub    %r14d,%r12d
mov    %r14,%rbx
sub    %r10d,%ebx
test   %ebx,%ebx
js     2af2a <png_setup_paeth_row+0x16a>
mov    %rbx,%r13
jmp    2af2d <png_setup_paeth_row+0x16d>
mov    %r12,%r13
mov    %r8,-0x30(%rbp)
mov    %r10,%r8
sub    %r15d,%r8d
mov    %r9,-0x48(%rbp)
mov    %r15,%r9
sub    %r10d,%r9d
test   %r9d,%r9d
js     2af4f <png_setup_paeth_row+0x18f>
mov    %rdi,-0x40(%rbp)
mov    %r9,%rdi
jmp    2af56 <png_setup_paeth_row+0x196>
mov    %rdi,-0x40(%rbp)
mov    %r8,%rdi
add    %r9d,%ebx
test   %ebx,%ebx
jns    2af61 <png_setup_paeth_row+0x1a1>
lea    (%r8,%r12,1),%ebx
cmp    %r13d,%edi
jl     2ae80 <png_setup_paeth_row+0xc0>
cmp    %ebx,%r13d
jg     2ae80 <png_setup_paeth_row+0xc0>
mov    %r15,%r10
jmpq   2ae87 <png_setup_paeth_row+0xc7>
nopl   0x0(%rax,%rax,1)

000000000002af80 <png_setup_paeth_row_only>:
push   %rbp
mov    %rsp,%rbp
sub    $0x40,%rsp
mov    %rdx,-0x38(%rbp)
mov    0x230(%rdi),%rax
movb   $0x4,(%rax)
mov    %esi,%r10d
mov    0x228(%rdi),%rax
add    $0x1,%rax
mov    0x220(%rdi),%rcx
add    $0x1,%rcx
mov    0x230(%rdi),%rsi
add    $0x1,%rsi
xor    %r8d,%r8d
jmp    2afdd <png_setup_paeth_row_only+0x5d>
movzbl (%rax),%r9d
movzbl (%rcx),%r11d
sub    %r11b,%r9b
mov    %r9b,(%rsi)
add    $0x1,%rax
add    $0x1,%rcx
add    $0x1,%rsi
add    $0x1,%r8
cmp    %r10,%r8
jb     2afbf <png_setup_paeth_row_only+0x3f>
mov    0x220(%rdi),%r9
add    $0x1,%r9
mov    0x228(%rdi),%rdi
add    $0x1,%rdi
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
jmp    2b03c <png_setup_paeth_row_only+0xbc>
cmp    %edx,%edi
jg     2b015 <png_setup_paeth_row_only+0x95>
mov    %r12,%rbx
movzbl (%rax),%edx
sub    %bl,%dl
mov    %dl,(%rsi)
add    $0x1,%r8
add    $0x1,%rax
add    $0x1,%rcx
add    $0x1,%r9
mov    -0x30(%rbp),%rdx
lea    0x1(%rdx),%rdi
add    $0x1,%rsi
mov    -0x38(%rbp),%rdx
cmp    %rdx,%r8
jb     2b057 <png_setup_paeth_row_only+0xd7>
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
movzbl (%rdi),%r15d
movzbl (%rcx),%r12d
movzbl (%r9),%ebx
mov    %rbx,%r11
sub    %r12d,%r11d
mov    %r12,%r14
sub    %ebx,%r14d
test   %r14d,%r14d
js     2b079 <png_setup_paeth_row_only+0xf9>
mov    %r14,%r10
jmp    2b07c <png_setup_paeth_row_only+0xfc>
mov    %r11,%r10
mov    %rbx,%r13
sub    %r15d,%r13d
mov    %r15,%rdx
sub    %ebx,%edx
test   %edx,%edx
js     2b094 <png_setup_paeth_row_only+0x114>
mov    %rdi,-0x30(%rbp)
mov    %rdx,%rdi
jmp    2b09b <png_setup_paeth_row_only+0x11b>
mov    %rdi,-0x30(%rbp)
mov    %r13,%rdi
add    %r14d,%edx
test   %edx,%edx
jns    2b0a7 <png_setup_paeth_row_only+0x127>
lea    0x0(%r13,%r11,1),%edx
cmp    %r10d,%edi
jl     2b00e <png_setup_paeth_row_only+0x8e>
cmp    %edx,%r10d
jg     2b00e <png_setup_paeth_row_only+0x8e>
mov    %r15,%rbx
jmpq   2b015 <png_setup_paeth_row_only+0x95>

Disassembly of section .fini:

000000000002b0c4 <_fini>:
endbr64 
sub    $0x8,%rsp
add    $0x8,%rsp
retq   
