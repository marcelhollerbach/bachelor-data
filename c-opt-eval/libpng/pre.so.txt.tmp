
libpng/pre.so:     file format elf64-x86-64


Disassembly of section .init:

0000000000005000 <_init>:
endbr64 
sub    $0x8,%rsp
mov    0x2cfc9(%rip),%rax        # 31fd8 <__gmon_start__>
test   %rax,%rax
je     5016 <_init+0x16>
callq  *%rax
add    $0x8,%rsp
retq   

Disassembly of section .plt:

0000000000005020 <.plt>:
pushq  0x2cfe2(%rip)        # 32008 <_GLOBAL_OFFSET_TABLE_+0x8>
jmpq   *0x2cfe4(%rip)        # 32010 <_GLOBAL_OFFSET_TABLE_+0x10>
nopl   0x0(%rax)

0000000000005030 <png_get_y_offset_microns@plt>:
jmpq   *0x2cfe2(%rip)        # 32018 <png_get_y_offset_microns@@PNG16_0+0x26708>
pushq  $0x0
jmpq   5020 <.plt>

0000000000005040 <png_image_free@plt>:
jmpq   *0x2cfda(%rip)        # 32020 <png_image_free@@PNG16_0+0x2b7d0>
pushq  $0x1
jmpq   5020 <.plt>

0000000000005050 <png_set_benign_errors@plt>:
jmpq   *0x2cfd2(%rip)        # 32028 <png_set_benign_errors@@PNG16_0+0x11138>
pushq  $0x2
jmpq   5020 <.plt>

0000000000005060 <png_chunk_error@plt>:
jmpq   *0x2cfca(%rip)        # 32030 <png_chunk_error@@PNG16_0+0x275b0>
pushq  $0x3
jmpq   5020 <.plt>

0000000000005070 <free@plt>:
jmpq   *0x2cfc2(%rip)        # 32038 <free@GLIBC_2.2.5>
pushq  $0x4
jmpq   5020 <.plt>

0000000000005080 <png_read_update_info@plt>:
jmpq   *0x2cfba(%rip)        # 32040 <png_read_update_info@@PNG16_0+0x231f0>
pushq  $0x5
jmpq   5020 <.plt>

0000000000005090 <abort@plt>:
jmpq   *0x2cfb2(%rip)        # 32048 <abort@GLIBC_2.2.5>
pushq  $0x6
jmpq   5020 <.plt>

00000000000050a0 <__errno_location@plt>:
jmpq   *0x2cfaa(%rip)        # 32050 <__errno_location@GLIBC_2.2.5>
pushq  $0x7
jmpq   5020 <.plt>

00000000000050b0 <remove@plt>:
jmpq   *0x2cfa2(%rip)        # 32058 <remove@GLIBC_2.2.5>
pushq  $0x8
jmpq   5020 <.plt>

00000000000050c0 <png_get_rowbytes@plt>:
jmpq   *0x2cf9a(%rip)        # 32060 <png_get_rowbytes@@PNG16_0+0x26ae0>
pushq  $0x9
jmpq   5020 <.plt>

00000000000050d0 <png_set_swap_alpha@plt>:
jmpq   *0x2cf92(%rip)        # 32068 <png_set_swap_alpha@@PNG16_0+0xeb38>
pushq  $0xa
jmpq   5020 <.plt>

00000000000050e0 <png_set_sRGB@plt>:
jmpq   *0x2cf8a(%rip)        # 32070 <png_set_sRGB@@PNG16_0+0x10360>
pushq  $0xb
jmpq   5020 <.plt>

00000000000050f0 <png_create_write_struct@plt>:
jmpq   *0x2cf82(%rip)        # 32078 <png_create_write_struct@@PNG16_0+0xe1f8>
pushq  $0xc
jmpq   5020 <.plt>

0000000000005100 <png_write_chunk_data@plt>:
jmpq   *0x2cf7a(%rip)        # 32080 <png_write_chunk_data@@PNG16_0+0xaa10>
pushq  $0xd
jmpq   5020 <.plt>

0000000000005110 <png_set_bKGD@plt>:
jmpq   *0x2cf72(%rip)        # 32088 <png_set_bKGD@@PNG16_0+0x110e8>
pushq  $0xe
jmpq   5020 <.plt>

0000000000005120 <inflate@plt>:
jmpq   *0x2cf6a(%rip)        # 32090 <inflate>
pushq  $0xf
jmpq   5020 <.plt>

0000000000005130 <ferror@plt>:
jmpq   *0x2cf62(%rip)        # 32098 <ferror@GLIBC_2.2.5>
pushq  $0x10
jmpq   5020 <.plt>

0000000000005140 <png_write_sig@plt>:
jmpq   *0x2cf5a(%rip)        # 320a0 <png_write_sig@@PNG16_0+0xab00>
pushq  $0x11
jmpq   5020 <.plt>

0000000000005150 <png_malloc_warn@plt>:
jmpq   *0x2cf52(%rip)        # 320a8 <png_malloc_warn@@PNG16_0+0x25838>
pushq  $0x12
jmpq   5020 <.plt>

0000000000005160 <fread@plt>:
jmpq   *0x2cf4a(%rip)        # 320b0 <fread@GLIBC_2.2.5>
pushq  $0x13
jmpq   5020 <.plt>

0000000000005170 <png_read_end@plt>:
jmpq   *0x2cf42(%rip)        # 320b8 <png_read_end@@PNG16_0+0x229e8>
pushq  $0x14
jmpq   5020 <.plt>

0000000000005180 <inflateReset2@plt>:
jmpq   *0x2cf3a(%rip)        # 320c0 <inflateReset2@ZLIB_1.2.3.4>
pushq  $0x15
jmpq   5020 <.plt>

0000000000005190 <png_set_hIST@plt>:
jmpq   *0x2cf32(%rip)        # 320c8 <png_set_hIST@@PNG16_0+0x10b08>
pushq  $0x16
jmpq   5020 <.plt>

00000000000051a0 <atof@plt>:
jmpq   *0x2cf2a(%rip)        # 320d0 <atof@GLIBC_2.2.5>
pushq  $0x17
jmpq   5020 <.plt>

00000000000051b0 <png_set_pCAL@plt>:
jmpq   *0x2cf22(%rip)        # 320d8 <png_set_pCAL@@PNG16_0+0x108f8>
pushq  $0x18
jmpq   5020 <.plt>

00000000000051c0 <crc32@plt>:
jmpq   *0x2cf1a(%rip)        # 320e0 <crc32>
pushq  $0x19
jmpq   5020 <.plt>

00000000000051d0 <png_set_sBIT@plt>:
jmpq   *0x2cf12(%rip)        # 320e8 <png_set_sBIT@@PNG16_0+0x10418>
pushq  $0x1a
jmpq   5020 <.plt>

00000000000051e0 <png_set_swap@plt>:
jmpq   *0x2cf0a(%rip)        # 320f0 <png_set_swap@@PNG16_0+0xea80>
pushq  $0x1b
jmpq   5020 <.plt>

00000000000051f0 <png_convert_from_struct_tm@plt>:
jmpq   *0x2cf02(%rip)        # 320f8 <png_convert_from_struct_tm@@PNG16_0+0xdb88>
pushq  $0x1c
jmpq   5020 <.plt>

0000000000005200 <png_set_filler@plt>:
jmpq   *0x2cefa(%rip)        # 32100 <png_set_filler@@PNG16_0+0xeb90>
pushq  $0x1d
jmpq   5020 <.plt>

0000000000005210 <png_get_x_pixels_per_meter@plt>:
jmpq   *0x2cef2(%rip)        # 32108 <png_get_x_pixels_per_meter@@PNG16_0+0x269f8>
pushq  $0x1e
jmpq   5020 <.plt>

0000000000005220 <inflateValidate@plt>:
jmpq   *0x2ceea(%rip)        # 32110 <inflateValidate@ZLIB_1.2.9>
pushq  $0x1f
jmpq   5020 <.plt>

0000000000005230 <png_chunk_benign_error@plt>:
jmpq   *0x2cee2(%rip)        # 32118 <png_chunk_benign_error@@PNG16_0+0x27548>
pushq  $0x20
jmpq   5020 <.plt>

0000000000005240 <fclose@plt>:
jmpq   *0x2ceda(%rip)        # 32120 <fclose@GLIBC_2.2.5>
pushq  $0x21
jmpq   5020 <.plt>

0000000000005250 <png_set_cHRM_fixed@plt>:
jmpq   *0x2ced2(%rip)        # 32128 <png_set_cHRM_fixed@@PNG16_0+0x10e58>
pushq  $0x22
jmpq   5020 <.plt>

0000000000005260 <strlen@plt>:
jmpq   *0x2ceca(%rip)        # 32130 <strlen@GLIBC_2.2.5>
pushq  $0x23
jmpq   5020 <.plt>

0000000000005270 <png_set_shift@plt>:
jmpq   *0x2cec2(%rip)        # 32138 <png_set_shift@@PNG16_0+0xea38>
pushq  $0x24
jmpq   5020 <.plt>

0000000000005280 <png_create_info_struct@plt>:
jmpq   *0x2ceba(%rip)        # 32140 <png_create_info_struct@@PNG16_0+0x2c6b0>
pushq  $0x25
jmpq   5020 <.plt>

0000000000005290 <png_set_gAMA_fixed@plt>:
jmpq   *0x2ceb2(%rip)        # 32148 <png_set_gAMA_fixed@@PNG16_0+0x10bd8>
pushq  $0x26
jmpq   5020 <.plt>

00000000000052a0 <png_set_sPLT@plt>:
jmpq   *0x2ceaa(%rip)        # 32150 <png_set_sPLT@@PNG16_0+0x10180>
pushq  $0x27
jmpq   5020 <.plt>

00000000000052b0 <png_read_image@plt>:
jmpq   *0x2cea2(%rip)        # 32158 <png_read_image@@PNG16_0+0x22c08>
pushq  $0x28
jmpq   5020 <.plt>

00000000000052c0 <png_set_gamma_fixed@plt>:
jmpq   *0x2ce9a(%rip)        # 32160 <png_set_gamma_fixed@@PNG16_0+0x1c630>
pushq  $0x29
jmpq   5020 <.plt>

00000000000052d0 <modf@plt>:
jmpq   *0x2ce92(%rip)        # 32168 <modf@GLIBC_2.2.5>
pushq  $0x2a
jmpq   5020 <.plt>

00000000000052e0 <deflateReset@plt>:
jmpq   *0x2ce8a(%rip)        # 32170 <deflateReset>
pushq  $0x2b
jmpq   5020 <.plt>

00000000000052f0 <png_get_x_offset_microns@plt>:
jmpq   *0x2ce82(%rip)        # 32178 <png_get_x_offset_microns@@PNG16_0+0x268a8>
pushq  $0x2c
jmpq   5020 <.plt>

0000000000005300 <png_set_write_fn@plt>:
jmpq   *0x2ce7a(%rip)        # 32180 <png_set_write_fn@@PNG16_0+0xe440>
pushq  $0x2d
jmpq   5020 <.plt>

0000000000005310 <png_handle_as_unknown@plt>:
jmpq   *0x2ce72(%rip)        # 32188 <png_handle_as_unknown@@PNG16_0+0x2ba38>
pushq  $0x2e
jmpq   5020 <.plt>

0000000000005320 <png_set_background_fixed@plt>:
jmpq   *0x2ce6a(%rip)        # 32190 <png_set_background_fixed@@PNG16_0+0x1d2d0>
pushq  $0x2f
jmpq   5020 <.plt>

0000000000005330 <deflate@plt>:
jmpq   *0x2ce62(%rip)        # 32198 <deflate>
pushq  $0x30
jmpq   5020 <.plt>

0000000000005340 <png_write_info@plt>:
jmpq   *0x2ce5a(%rip)        # 321a0 <png_write_info@@PNG16_0+0xe020>
pushq  $0x31
jmpq   5020 <.plt>

0000000000005350 <memset@plt>:
jmpq   *0x2ce52(%rip)        # 321a8 <memset@GLIBC_2.2.5>
pushq  $0x32
jmpq   5020 <.plt>

0000000000005360 <pow@plt>:
jmpq   *0x2ce4a(%rip)        # 321b0 <pow@GLIBC_2.2.5>
pushq  $0x33
jmpq   5020 <.plt>

0000000000005370 <png_start_read_image@plt>:
jmpq   *0x2ce42(%rip)        # 321b8 <png_start_read_image@@PNG16_0+0x23398>
pushq  $0x34
jmpq   5020 <.plt>

0000000000005380 <png_write_row@plt>:
jmpq   *0x2ce3a(%rip)        # 321c0 <png_write_row@@PNG16_0+0xdb60>
pushq  $0x35
jmpq   5020 <.plt>

0000000000005390 <png_warning@plt>:
jmpq   *0x2ce32(%rip)        # 321c8 <png_warning@@PNG16_0+0x27708>
pushq  $0x36
jmpq   5020 <.plt>

00000000000053a0 <png_get_y_pixels_per_meter@plt>:
jmpq   *0x2ce2a(%rip)        # 321d0 <png_get_y_pixels_per_meter@@PNG16_0+0x26a80>
pushq  $0x37
jmpq   5020 <.plt>

00000000000053b0 <deflateInit2_@plt>:
jmpq   *0x2ce22(%rip)        # 321d8 <deflateInit2_>
pushq  $0x38
jmpq   5020 <.plt>

00000000000053c0 <png_write_end@plt>:
jmpq   *0x2ce1a(%rip)        # 321e0 <png_write_end@@PNG16_0+0xd700>
pushq  $0x39
jmpq   5020 <.plt>

00000000000053d0 <memcmp@plt>:
jmpq   *0x2ce12(%rip)        # 321e8 <memcmp@GLIBC_2.2.5>
pushq  $0x3a
jmpq   5020 <.plt>

00000000000053e0 <png_set_filter@plt>:
jmpq   *0x2ce0a(%rip)        # 321f0 <png_set_filter@@PNG16_0+0xd440>
pushq  $0x3b
jmpq   5020 <.plt>

00000000000053f0 <png_set_interlace_handling@plt>:
jmpq   *0x2ce02(%rip)        # 321f8 <png_set_interlace_handling@@PNG16_0+0xeac8>
pushq  $0x3c
jmpq   5020 <.plt>

0000000000005400 <png_write_chunk@plt>:
jmpq   *0x2cdfa(%rip)        # 32200 <png_write_chunk@@PNG16_0+0xabf0>
pushq  $0x3d
jmpq   5020 <.plt>

0000000000005410 <frexp@plt>:
jmpq   *0x2cdf2(%rip)        # 32208 <frexp@GLIBC_2.2.5>
pushq  $0x3e
jmpq   5020 <.plt>

0000000000005420 <_setjmp@plt>:
jmpq   *0x2cdea(%rip)        # 32210 <_setjmp@GLIBC_2.2.5>
pushq  $0x3f
jmpq   5020 <.plt>

0000000000005430 <png_set_eXIf_1@plt>:
jmpq   *0x2cde2(%rip)        # 32218 <png_set_eXIf_1@@PNG16_0+0x10df8>
pushq  $0x40
jmpq   5020 <.plt>

0000000000005440 <png_set_expand_gray_1_2_4_to_8@plt>:
jmpq   *0x2cdda(%rip)        # 32220 <png_set_expand_gray_1_2_4_to_8@@PNG16_0+0x1d9a0>
pushq  $0x41
jmpq   5020 <.plt>

0000000000005450 <png_write_info_before_PLTE@plt>:
jmpq   *0x2cdd2(%rip)        # 32228 <png_write_info_before_PLTE@@PNG16_0+0xe2c8>
pushq  $0x42
jmpq   5020 <.plt>

0000000000005460 <png_set_IHDR@plt>:
jmpq   *0x2cdca(%rip)        # 32230 <png_set_IHDR@@PNG16_0+0x10b90>
pushq  $0x43
jmpq   5020 <.plt>

0000000000005470 <png_error@plt>:
jmpq   *0x2cdc2(%rip)        # 32238 <png_error@@PNG16_0+0x277e8>
pushq  $0x44
jmpq   5020 <.plt>

0000000000005480 <png_write_chunk_end@plt>:
jmpq   *0x2cdba(%rip)        # 32240 <png_write_chunk_end@@PNG16_0+0xab60>
pushq  $0x45
jmpq   5020 <.plt>

0000000000005490 <fprintf@plt>:
jmpq   *0x2cdb2(%rip)        # 32248 <fprintf@GLIBC_2.2.5>
pushq  $0x46
jmpq   5020 <.plt>

00000000000054a0 <png_create_read_struct_2@plt>:
jmpq   *0x2cdaa(%rip)        # 32250 <png_create_read_struct_2@@PNG16_0+0x238e0>
pushq  $0x47
jmpq   5020 <.plt>

00000000000054b0 <png_destroy_read_struct@plt>:
jmpq   *0x2cda2(%rip)        # 32258 <png_destroy_read_struct@@PNG16_0+0x226d8>
pushq  $0x48
jmpq   5020 <.plt>

00000000000054c0 <memcpy@plt>:
jmpq   *0x2cd9a(%rip)        # 32260 <memcpy@GLIBC_2.14>
pushq  $0x49
jmpq   5020 <.plt>

00000000000054d0 <png_set_mem_fn@plt>:
jmpq   *0x2cd92(%rip)        # 32268 <png_set_mem_fn@@PNG16_0+0x25ac8>
pushq  $0x4a
jmpq   5020 <.plt>

00000000000054e0 <png_set_tIME@plt>:
jmpq   *0x2cd8a(%rip)        # 32270 <png_set_tIME@@PNG16_0+0x10050>
pushq  $0x4b
jmpq   5020 <.plt>

00000000000054f0 <png_set_tRNS@plt>:
jmpq   *0x2cd82(%rip)        # 32278 <png_set_tRNS@@PNG16_0+0xffd8>
pushq  $0x4c
jmpq   5020 <.plt>

0000000000005500 <png_save_uint_32@plt>:
jmpq   *0x2cd7a(%rip)        # 32280 <png_save_uint_32@@PNG16_0+0xab50>
pushq  $0x4d
jmpq   5020 <.plt>

0000000000005510 <inflateEnd@plt>:
jmpq   *0x2cd72(%rip)        # 32288 <inflateEnd>
pushq  $0x4e
jmpq   5020 <.plt>

0000000000005520 <png_save_int_32@plt>:
jmpq   *0x2cd6a(%rip)        # 32290 <png_save_int_32@@PNG16_0+0x2ba50>
pushq  $0x4f
jmpq   5020 <.plt>

0000000000005530 <png_set_PLTE@plt>:
jmpq   *0x2cd62(%rip)        # 32298 <png_set_PLTE@@PNG16_0+0x10718>
pushq  $0x50
jmpq   5020 <.plt>

0000000000005540 <png_get_channels@plt>:
jmpq   *0x2cd5a(%rip)        # 322a0 <png_get_channels@@PNG16_0+0x26ce0>
pushq  $0x51
jmpq   5020 <.plt>

0000000000005550 <adler32@plt>:
jmpq   *0x2cd52(%rip)        # 322a8 <adler32>
pushq  $0x52
jmpq   5020 <.plt>

0000000000005560 <png_set_read_fn@plt>:
jmpq   *0x2cd4a(%rip)        # 322b0 <png_set_read_fn@@PNG16_0+0x1db70>
pushq  $0x53
jmpq   5020 <.plt>

0000000000005570 <png_write_image@plt>:
jmpq   *0x2cd42(%rip)        # 322b8 <png_write_image@@PNG16_0+0xd878>
pushq  $0x54
jmpq   5020 <.plt>

0000000000005580 <png_set_packing@plt>:
jmpq   *0x2cd3a(%rip)        # 322c0 <png_set_packing@@PNG16_0+0xec20>
pushq  $0x55
jmpq   5020 <.plt>

0000000000005590 <png_benign_error@plt>:
jmpq   *0x2cd32(%rip)        # 322c8 <png_benign_error@@PNG16_0+0x27758>
pushq  $0x56
jmpq   5020 <.plt>

00000000000055a0 <png_destroy_info_struct@plt>:
jmpq   *0x2cd2a(%rip)        # 322d0 <png_destroy_info_struct@@PNG16_0+0x2c490>
pushq  $0x57
jmpq   5020 <.plt>

00000000000055b0 <png_set_rgb_to_gray_fixed@plt>:
jmpq   *0x2cd22(%rip)        # 322d8 <png_set_rgb_to_gray_fixed@@PNG16_0+0x1d898>
pushq  $0x58
jmpq   5020 <.plt>

00000000000055c0 <malloc@plt>:
jmpq   *0x2cd1a(%rip)        # 322e0 <malloc@GLIBC_2.2.5>
pushq  $0x59
jmpq   5020 <.plt>

00000000000055d0 <fflush@plt>:
jmpq   *0x2cd12(%rip)        # 322e8 <fflush@GLIBC_2.2.5>
pushq  $0x5a
jmpq   5020 <.plt>

00000000000055e0 <png_set_oFFs@plt>:
jmpq   *0x2cd0a(%rip)        # 322f0 <png_set_oFFs@@PNG16_0+0x10b50>
pushq  $0x5b
jmpq   5020 <.plt>

00000000000055f0 <png_get_header_ver@plt>:
jmpq   *0x2cd02(%rip)        # 322f8 <png_get_header_ver@@PNG16_0+0x2bae8>
pushq  $0x5c
jmpq   5020 <.plt>

0000000000005600 <png_read_row@plt>:
jmpq   *0x2ccfa(%rip)        # 32300 <png_read_row@@PNG16_0+0x23300>
pushq  $0x5d
jmpq   5020 <.plt>

0000000000005610 <png_set_pHYs@plt>:
jmpq   *0x2ccf2(%rip)        # 32308 <png_set_pHYs@@PNG16_0+0x107c8>
pushq  $0x5e
jmpq   5020 <.plt>

0000000000005620 <png_set_invert_alpha@plt>:
jmpq   *0x2ccea(%rip)        # 32310 <png_set_invert_alpha@@PNG16_0+0xedc0>
pushq  $0x5f
jmpq   5020 <.plt>

0000000000005630 <png_set_add_alpha@plt>:
jmpq   *0x2cce2(%rip)        # 32318 <png_set_add_alpha@@PNG16_0+0xecf8>
pushq  $0x60
jmpq   5020 <.plt>

0000000000005640 <png_set_alpha_mode_fixed@plt>:
jmpq   *0x2ccda(%rip)        # 32320 <png_set_alpha_mode_fixed@@PNG16_0+0x1d720>
pushq  $0x61
jmpq   5020 <.plt>

0000000000005650 <png_set_compression_level@plt>:
jmpq   *0x2ccd2(%rip)        # 32328 <png_set_compression_level@@PNG16_0+0xd2f8>
pushq  $0x62
jmpq   5020 <.plt>

0000000000005660 <png_set_sCAL_s@plt>:
jmpq   *0x2ccca(%rip)        # 32330 <png_set_sCAL_s@@PNG16_0+0xfd50>
pushq  $0x63
jmpq   5020 <.plt>

0000000000005670 <deflateEnd@plt>:
jmpq   *0x2ccc2(%rip)        # 32338 <deflateEnd>
pushq  $0x64
jmpq   5020 <.plt>

0000000000005680 <png_set_error_fn@plt>:
jmpq   *0x2ccba(%rip)        # 32340 <png_set_error_fn@@PNG16_0+0x27940>
pushq  $0x65
jmpq   5020 <.plt>

0000000000005690 <png_set_keep_unknown_chunks@plt>:
jmpq   *0x2ccb2(%rip)        # 32348 <png_set_keep_unknown_chunks@@PNG16_0+0xfb88>
pushq  $0x66
jmpq   5020 <.plt>

00000000000056a0 <png_chunk_warning@plt>:
jmpq   *0x2ccaa(%rip)        # 32350 <png_chunk_warning@@PNG16_0+0x27830>
pushq  $0x67
jmpq   5020 <.plt>

00000000000056b0 <png_set_expand@plt>:
jmpq   *0x2cca2(%rip)        # 32358 <png_set_expand@@PNG16_0+0x1db18>
pushq  $0x68
jmpq   5020 <.plt>

00000000000056c0 <png_create_write_struct_2@plt>:
jmpq   *0x2cc9a(%rip)        # 32360 <png_create_write_struct_2@@PNG16_0+0xe4c0>
pushq  $0x69
jmpq   5020 <.plt>

00000000000056d0 <png_set_strip_16@plt>:
jmpq   *0x2cc92(%rip)        # 32368 <png_set_strip_16@@PNG16_0+0x1d388>
pushq  $0x6a
jmpq   5020 <.plt>

00000000000056e0 <png_create_read_struct@plt>:
jmpq   *0x2cc8a(%rip)        # 32370 <png_create_read_struct@@PNG16_0+0x23a20>
pushq  $0x6b
jmpq   5020 <.plt>

00000000000056f0 <png_destroy_write_struct@plt>:
jmpq   *0x2cc82(%rip)        # 32378 <png_destroy_write_struct@@PNG16_0+0xd628>
pushq  $0x6c
jmpq   5020 <.plt>

0000000000005700 <png_free_default@plt>:
jmpq   *0x2cc7a(%rip)        # 32380 <png_free_default@@PNG16_0+0x25a60>
pushq  $0x6d
jmpq   5020 <.plt>

0000000000005710 <png_get_pixels_per_meter@plt>:
jmpq   *0x2cc72(%rip)        # 32388 <png_get_pixels_per_meter@@PNG16_0+0x26cc8>
pushq  $0x6e
jmpq   5020 <.plt>

0000000000005720 <png_free_data@plt>:
jmpq   *0x2cc6a(%rip)        # 32390 <png_free_data@@PNG16_0+0x2c490>
pushq  $0x6f
jmpq   5020 <.plt>

0000000000005730 <png_get_uint_31@plt>:
jmpq   *0x2cc62(%rip)        # 32398 <png_get_uint_31@@PNG16_0+0x17378>
pushq  $0x70
jmpq   5020 <.plt>

0000000000005740 <png_set_strip_alpha@plt>:
jmpq   *0x2cc5a(%rip)        # 323a0 <png_set_strip_alpha@@PNG16_0+0x1d580>
pushq  $0x71
jmpq   5020 <.plt>

0000000000005750 <png_set_unknown_chunks@plt>:
jmpq   *0x2cc52(%rip)        # 323a8 <png_set_unknown_chunks@@PNG16_0+0xf928>
pushq  $0x72
jmpq   5020 <.plt>

0000000000005760 <fopen@plt>:
jmpq   *0x2cc4a(%rip)        # 323b0 <fopen@GLIBC_2.2.5>
pushq  $0x73
jmpq   5020 <.plt>

0000000000005770 <inflateInit2_@plt>:
jmpq   *0x2cc42(%rip)        # 323b8 <inflateInit2_>
pushq  $0x74
jmpq   5020 <.plt>

0000000000005780 <png_calloc@plt>:
jmpq   *0x2cc3a(%rip)        # 323c0 <png_calloc@@PNG16_0+0x25b90>
pushq  $0x75
jmpq   5020 <.plt>

0000000000005790 <png_free@plt>:
jmpq   *0x2cc32(%rip)        # 323c8 <png_free@@PNG16_0+0x25b18>
pushq  $0x76
jmpq   5020 <.plt>

00000000000057a0 <png_save_uint_16@plt>:
jmpq   *0x2cc2a(%rip)        # 323d0 <png_save_uint_16@@PNG16_0+0xac70>
pushq  $0x77
jmpq   5020 <.plt>

00000000000057b0 <png_read_info@plt>:
jmpq   *0x2cc22(%rip)        # 323d8 <png_read_info@@PNG16_0+0x23a08>
pushq  $0x78
jmpq   5020 <.plt>

00000000000057c0 <gmtime@plt>:
jmpq   *0x2cc1a(%rip)        # 323e0 <gmtime@GLIBC_2.2.5>
pushq  $0x79
jmpq   5020 <.plt>

00000000000057d0 <png_sig_cmp@plt>:
jmpq   *0x2cc12(%rip)        # 323e8 <png_sig_cmp@@PNG16_0+0x2c9d8>
pushq  $0x7a
jmpq   5020 <.plt>

00000000000057e0 <floor@plt>:
jmpq   *0x2cc0a(%rip)        # 323f0 <floor@GLIBC_2.2.5>
pushq  $0x7b
jmpq   5020 <.plt>

00000000000057f0 <inflateReset@plt>:
jmpq   *0x2cc02(%rip)        # 323f8 <inflateReset>
pushq  $0x7c
jmpq   5020 <.plt>

0000000000005800 <png_malloc@plt>:
jmpq   *0x2cbfa(%rip)        # 32400 <png_malloc@@PNG16_0+0x25c10>
pushq  $0x7d
jmpq   5020 <.plt>

0000000000005810 <png_set_gray_to_rgb@plt>:
jmpq   *0x2cbf2(%rip)        # 32408 <png_set_gray_to_rgb@@PNG16_0+0x1da88>
pushq  $0x7e
jmpq   5020 <.plt>

0000000000005820 <png_set_packswap@plt>:
jmpq   *0x2cbea(%rip)        # 32410 <png_set_packswap@@PNG16_0+0xed40>
pushq  $0x7f
jmpq   5020 <.plt>

0000000000005830 <png_set_expand_16@plt>:
jmpq   *0x2cbe2(%rip)        # 32418 <png_set_expand_16@@PNG16_0+0x1dad8>
pushq  $0x80
jmpq   5020 <.plt>

0000000000005840 <fwrite@plt>:
jmpq   *0x2cbda(%rip)        # 32420 <fwrite@GLIBC_2.2.5>
pushq  $0x81
jmpq   5020 <.plt>

0000000000005850 <png_convert_to_rfc1123_buffer@plt>:
jmpq   *0x2cbd2(%rip)        # 32428 <png_convert_to_rfc1123_buffer@@PNG16_0+0x2c888>
pushq  $0x82
jmpq   5020 <.plt>

0000000000005860 <png_set_bgr@plt>:
jmpq   *0x2cbca(%rip)        # 32430 <png_set_bgr@@PNG16_0+0xef20>
pushq  $0x83
jmpq   5020 <.plt>

0000000000005870 <png_longjmp@plt>:
jmpq   *0x2cbc2(%rip)        # 32438 <png_longjmp@@PNG16_0+0x27a68>
pushq  $0x84
jmpq   5020 <.plt>

0000000000005880 <png_image_write_to_stdio@plt>:
jmpq   *0x2cbba(%rip)        # 32440 <png_image_write_to_stdio@@PNG16_0+0xce30>
pushq  $0x85
jmpq   5020 <.plt>

0000000000005890 <strerror@plt>:
jmpq   *0x2cbb2(%rip)        # 32448 <strerror@GLIBC_2.2.5>
pushq  $0x86
jmpq   5020 <.plt>

00000000000058a0 <png_set_cHRM_XYZ_fixed@plt>:
jmpq   *0x2cbaa(%rip)        # 32450 <png_set_cHRM_XYZ_fixed@@PNG16_0+0x110f0>
pushq  $0x87
jmpq   5020 <.plt>

00000000000058b0 <png_set_tRNS_to_alpha@plt>:
jmpq   *0x2cba2(%rip)        # 32458 <png_set_tRNS_to_alpha@@PNG16_0+0x1db58>
pushq  $0x88
jmpq   5020 <.plt>

00000000000058c0 <png_write_flush@plt>:
jmpq   *0x2cb9a(%rip)        # 32460 <png_write_flush@@PNG16_0+0xde60>
pushq  $0x89
jmpq   5020 <.plt>

00000000000058d0 <png_set_scale_16@plt>:
jmpq   *0x2cb92(%rip)        # 32468 <png_set_scale_16@@PNG16_0+0x1d4c8>
pushq  $0x8a
jmpq   5020 <.plt>

00000000000058e0 <png_set_invert_mono@plt>:
jmpq   *0x2cb8a(%rip)        # 32470 <png_set_invert_mono@@PNG16_0+0xed00>
pushq  $0x8b
jmpq   5020 <.plt>

Disassembly of section .plt.got:

00000000000058f0 <longjmp@plt>:
jmpq   *0x2c6ea(%rip)        # 31fe0 <longjmp@GLIBC_2.2.5>
xchg   %ax,%ax

Disassembly of section .text:

0000000000005900 <deregister_tm_clones>:
lea    0x2cb79(%rip),%rdi        # 32480 <__TMC_END__>
lea    0x2cb72(%rip),%rax        # 32480 <__TMC_END__>
cmp    %rdi,%rax
je     5928 <deregister_tm_clones+0x28>
mov    0x2c6b6(%rip),%rax        # 31fd0 <_ITM_deregisterTMCloneTable>
test   %rax,%rax
je     5928 <deregister_tm_clones+0x28>
jmpq   *%rax
nopl   0x0(%rax)
retq   
nopl   0x0(%rax)

0000000000005930 <register_tm_clones>:
lea    0x2cb49(%rip),%rdi        # 32480 <__TMC_END__>
lea    0x2cb42(%rip),%rsi        # 32480 <__TMC_END__>
sub    %rdi,%rsi
sar    $0x3,%rsi
mov    %rsi,%rax
shr    $0x3f,%rax
add    %rax,%rsi
sar    %rsi
je     5968 <register_tm_clones+0x38>
mov    0x2c68d(%rip),%rax        # 31fe8 <_ITM_registerTMCloneTable>
test   %rax,%rax
je     5968 <register_tm_clones+0x38>
jmpq   *%rax
nopw   0x0(%rax,%rax,1)
retq   
nopl   0x0(%rax)

0000000000005970 <__do_global_dtors_aux>:
endbr64 
cmpb   $0x0,0x2cb05(%rip)        # 32480 <__TMC_END__>
jne    59b0 <__do_global_dtors_aux+0x40>
push   %rbp
cmpq   $0x0,0x2c66a(%rip)        # 31ff0 <__cxa_finalize@GLIBC_2.2.5>
mov    %rsp,%rbp
je     5998 <__do_global_dtors_aux+0x28>
mov    0x2cae6(%rip),%rdi        # 32478 <__dso_handle>
callq  *0x2c658(%rip)        # 31ff0 <__cxa_finalize@GLIBC_2.2.5>
callq  5900 <deregister_tm_clones>
movb   $0x1,0x2cadc(%rip)        # 32480 <__TMC_END__>
pop    %rbp
retq   
nopw   %cs:0x0(%rax,%rax,1)
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   0x0(%rax)

00000000000059c0 <frame_dummy>:
endbr64 
jmpq   5930 <register_tm_clones>
nopl   0x0(%rax)

00000000000059d0 <png_access_version_number>:
push   %rbp
mov    %rsp,%rbp
mov    $0x298a,%eax
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

00000000000059e0 <png_set_sig_bytes>:
push   %rbp
mov    %rsp,%rbp
test   %rdi,%rdi
jne    59eb <png_set_sig_bytes+0xb>
leaveq 
retq   
test   %esi,%esi
jns    59f1 <png_set_sig_bytes+0x11>
xor    %esi,%esi
cmp    $0x8,%esi
ja     59ff <png_set_sig_bytes+0x1f>
mov    %sil,0x26d(%rdi)
leaveq 
retq   
lea    0x27092(%rip),%rsi        # 2ca98 <png_sRGB_checks+0xe0>
callq  5470 <png_error@plt>
nopl   0x0(%rax,%rax,1)

0000000000005a10 <png_sig_cmp>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
movabs $0xa1a0a0d474e5089,%rax
mov    %rax,-0x8(%rbp)
mov    $0xffffffffffffffff,%rax
mov    $0x8,%ecx
cmp    $0x8,%rdx
jbe    5a43 <png_sig_cmp+0x33>
mov    %rcx,%rdx
cmp    $0x7,%rsi
jbe    5a4a <png_sig_cmp+0x3a>
leaveq 
retq   
test   %rdx,%rdx
jne    5a3b <png_sig_cmp+0x2b>
leaveq 
retq   
lea    (%rsi,%rdx,1),%rax
cmp    $0x8,%rax
jbe    5a5a <png_sig_cmp+0x4a>
sub    %rsi,%rcx
mov    %rcx,%rdx
add    %rsi,%rdi
lea    -0x8(%rbp,%rsi,1),%rsi
callq  53d0 <memcmp@plt>
leaveq 
retq   
nopl   0x0(%rax)

0000000000005a70 <png_reset_zstream>:
push   %rbp
mov    %rsp,%rbp
test   %rdi,%rdi
jne    5a82 <png_reset_zstream+0x12>
mov    $0xfffffffffffffffe,%rax
leaveq 
retq   
add    $0x140,%rdi
callq  57f0 <inflateReset@plt>
leaveq 
retq   

0000000000005a90 <png_create_info_struct>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
xor    %eax,%eax
test   %rdi,%rdi
jne    5aa1 <png_create_info_struct+0x11>
leaveq 
retq   
mov    $0x168,%esi
callq  c940 <png_malloc_base>
test   %rax,%rax
jne    5ab4 <png_create_info_struct+0x24>
xor    %eax,%eax
leaveq 
retq   
mov    %rax,%rdi
mov    %rax,-0x8(%rbp)
mov    $0x168,%edx
xor    %esi,%esi
callq  5350 <memset@plt>
mov    -0x8(%rbp),%rax
leaveq 
retq   
nopl   (%rax)

0000000000005ad0 <png_info_init_3>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    (%rdi),%rax
test   %rax,%rax
jne    5ae2 <png_info_init_3+0x12>
leaveq 
retq   
xor    %ecx,%ecx
mov    $0x168,%edx
cmp    $0x167,%rsi
jbe    5aff <png_info_init_3+0x2f>
mov    %rcx,%rsi
mov    %rax,%rdi
callq  5350 <memset@plt>
leaveq 
retq   
movq   $0x0,(%rdi)
mov    %r15,-0x8(%rbp)
mov    %rdi,%r15
mov    %rax,%rdi
callq  5070 <free@plt>
xor    %edi,%edi
mov    $0x168,%esi
callq  c940 <png_malloc_base>
test   %rax,%rax
jne    5b2c <png_info_init_3+0x5c>
mov    -0x8(%rbp),%r15
leaveq 
retq   
mov    %rax,(%r15)
mov    %rax,%rdi
mov    $0x168,%edx
xor    %esi,%esi
mov    -0x8(%rbp),%r15
jmp    5af8 <png_info_init_3+0x28>
nop

0000000000005b40 <png_convert_to_rfc1123>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
xor    %eax,%eax
test   %rdi,%rdi
jne    5b51 <png_convert_to_rfc1123+0x11>
leaveq 
retq   
lea    0x38c(%rdi),%rax
mov    %rax,%rcx
mov    %r15,-0x10(%rbp)
mov    %rdi,-0x8(%rbp)
mov    %rcx,%rdi
mov    %rax,%r15
callq  5850 <png_convert_to_rfc1123_buffer@plt>
test   %eax,%eax
je     5b7b <png_convert_to_rfc1123+0x3b>
mov    %r15,%rax
mov    -0x10(%rbp),%r15
leaveq 
retq   
lea    0x26f37(%rip),%rsi        # 2cab9 <png_sRGB_checks+0x101>
mov    -0x8(%rbp),%rdi
callq  5390 <png_warning@plt>
xor    %eax,%eax
mov    -0x10(%rbp),%r15
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

0000000000005ba0 <png_convert_to_rfc1123_buffer>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
xor    %eax,%eax
test   %rdi,%rdi
jne    5bb1 <png_convert_to_rfc1123_buffer+0x11>
leaveq 
retq   
movzwl (%rsi),%ecx
cmp    $0x270f,%cx
jbe    5bbd <png_convert_to_rfc1123_buffer+0x1d>
leaveq 
retq   
movzbl 0x2(%rsi),%ecx
test   %cl,%cl
jne    5bc7 <png_convert_to_rfc1123_buffer+0x27>
leaveq 
retq   
cmp    $0xc,%cl
jbe    5bce <png_convert_to_rfc1123_buffer+0x2e>
leaveq 
retq   
movzbl 0x3(%rsi),%ecx
test   %cl,%cl
jne    5bd8 <png_convert_to_rfc1123_buffer+0x38>
leaveq 
retq   
cmp    $0x1f,%cl
jbe    5bdf <png_convert_to_rfc1123_buffer+0x3f>
leaveq 
retq   
movzbl 0x4(%rsi),%edx
cmp    $0x17,%dl
jbe    5bea <png_convert_to_rfc1123_buffer+0x4a>
leaveq 
retq   
movzbl 0x5(%rsi),%edx
cmp    $0x3b,%dl
jbe    5bf5 <png_convert_to_rfc1123_buffer+0x55>
leaveq 
retq   
movzbl 0x6(%rsi),%edx
cmp    $0x3c,%dl
jbe    5c00 <png_convert_to_rfc1123_buffer+0x60>
leaveq 
retq   
lea    -0x2d(%rbp),%r10
lea    -0x28(%rbp),%r11
mov    $0x1,%edx
mov    %r10,%r9
mov    %r11,%r8
mov    %r15,-0x28(%rbp)
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %rdi,%rbx
mov    %r9,%rdi
mov    %rax,%r12
mov    %r10,%r13
mov    %rsi,%r14
mov    %r8,%rsi
mov    %r11,%r15
callq  ad70 <png_format_number>
mov    %rax,%rcx
mov    %r12,%rdx
mov    $0x1d,%r12d
mov    %rbx,%rdi
mov    %r12,%rsi
callq  ad20 <png_safecat>
cmp    $0x1b,%rax
jbe    5c63 <png_convert_to_rfc1123_buffer+0xc3>
mov    %rax,%rdx
jmp    5c6b <png_convert_to_rfc1123_buffer+0xcb>
movb   $0x20,(%rbx,%rax,1)
lea    0x1(%rax),%rdx
lea    0x26e63(%rip),%rcx        # 2cad5 <short_months.6>
movzbl 0x2(%r14),%eax
add    $0xffffffff,%eax
movslq %eax,%rax
lea    (%rcx,%rax,4),%rcx
mov    %rbx,%rdi
mov    %r12,%rsi
callq  ad20 <png_safecat>
cmp    $0x1b,%rax
ja     5c9a <png_convert_to_rfc1123_buffer+0xfa>
movb   $0x20,(%rbx,%rax,1)
add    $0x1,%rax
mov    %r15,%rsi
mov    %rax,%r15
movzwl (%r14),%ecx
mov    %r13,%rdi
mov    $0x1,%edx
callq  ad70 <png_format_number>
mov    %rax,%rcx
mov    %r15,%rdx
mov    %rbx,%rdi
mov    %r12,%rsi
callq  ad20 <png_safecat>
cmp    $0x1b,%rax
jbe    5ccd <png_convert_to_rfc1123_buffer+0x12d>
mov    %rax,%r15
jmp    5cd5 <png_convert_to_rfc1123_buffer+0x135>
movb   $0x20,(%rbx,%rax,1)
lea    0x1(%rax),%r15
mov    $0x2,%edx
movzbl 0x4(%r14),%ecx
mov    %r13,%rdi
lea    -0x28(%rbp),%rsi
callq  ad70 <png_format_number>
mov    %rax,%rcx
mov    %r15,%rdx
mov    %rbx,%rdi
mov    %r12,%rsi
callq  ad20 <png_safecat>
cmp    $0x1b,%rax
jbe    5d07 <png_convert_to_rfc1123_buffer+0x167>
mov    %rax,%r15
jmp    5d0f <png_convert_to_rfc1123_buffer+0x16f>
movb   $0x3a,(%rbx,%rax,1)
lea    0x1(%rax),%r15
movzbl 0x5(%r14),%ecx
mov    %r13,%rdi
lea    -0x28(%rbp),%rsi
mov    $0x2,%edx
callq  ad70 <png_format_number>
mov    %rax,%rcx
mov    %r15,%rdx
mov    %rbx,%rdi
mov    %r12,%rsi
callq  ad20 <png_safecat>
cmp    $0x1b,%rax
jbe    5d41 <png_convert_to_rfc1123_buffer+0x1a1>
mov    %rax,%r15
jmp    5d49 <png_convert_to_rfc1123_buffer+0x1a9>
movb   $0x3a,(%rbx,%rax,1)
lea    0x1(%rax),%r15
movzbl 0x6(%r14),%ecx
mov    %r13,%rdi
mov    $0x2,%edx
lea    -0x28(%rbp),%rsi
callq  ad70 <png_format_number>
mov    %rax,%rcx
mov    %r15,%rdx
mov    %rbx,%rdi
mov    %r12,%rsi
callq  ad20 <png_safecat>
mov    %rax,%rdx
mov    %r12,%rsi
mov    %rbx,%rdi
lea    0x26d85(%rip),%rcx        # 2cb05 <short_months.6+0x30>
callq  ad20 <png_safecat>
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    $0x1,%eax
mov    -0x28(%rbp),%r15
leaveq 
retq   

0000000000005da0 <png_build_grayscale_palette>:
push   %rbp
mov    %rsp,%rbp
test   %rsi,%rsi
jne    5dab <png_build_grayscale_palette+0xb>
leaveq 
retq   
xor    %eax,%eax
cmp    $0x3,%edi
jle    5dc6 <png_build_grayscale_palette+0x26>
cmp    $0x4,%edi
jne    5dda <png_build_grayscale_palette+0x3a>
mov    $0x10,%edi
mov    $0x11,%edx
mov    %rax,%rcx
jmp    5e04 <png_build_grayscale_palette+0x64>
cmp    $0x1,%edi
jne    5e0a <png_build_grayscale_palette+0x6a>
mov    $0x2,%edi
mov    $0xff,%edx
mov    %rax,%rcx
jmp    5e04 <png_build_grayscale_palette+0x64>
cmp    $0x8,%edi
je     5e1a <png_build_grayscale_palette+0x7a>
mov    %rax,%rcx
mov    %rcx,%rdx
mov    %rdx,%rdi
jmp    5e04 <png_build_grayscale_palette+0x64>
movslq %ecx,%r8
lea    (%r8,%r8,2),%r8
mov    %al,(%rsi,%r8,1)
mov    %al,0x1(%rsi,%r8,1)
mov    %al,0x2(%rsi,%r8,1)
add    $0x1,%ecx
add    %edx,%eax
cmp    %ecx,%edi
jg     5dea <png_build_grayscale_palette+0x4a>
leaveq 
retq   
cmp    $0x2,%edi
je     5e29 <png_build_grayscale_palette+0x89>
mov    %rax,%rcx
mov    %rcx,%rdx
mov    %rdx,%rdi
jmp    5e04 <png_build_grayscale_palette+0x64>
mov    $0x100,%edi
mov    $0x1,%edx
mov    %rax,%rcx
jmp    5e04 <png_build_grayscale_palette+0x64>
mov    $0x4,%edi
mov    $0x55,%edx
mov    %rax,%rcx
jmp    5e04 <png_build_grayscale_palette+0x64>
nopl   0x0(%rax,%rax,1)

0000000000005e40 <png_destroy_info_struct>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
test   %rdi,%rdi
jne    5e4f <png_destroy_info_struct+0xf>
leaveq 
retq   
xor    %eax,%eax
test   %rsi,%rsi
je     5e59 <png_destroy_info_struct+0x19>
mov    (%rsi),%rax
test   %rax,%rax
jne    5e60 <png_destroy_info_struct+0x20>
leaveq 
retq   
movq   $0x0,(%rsi)
mov    $0xffff,%edx
mov    $0xffffffffffffffff,%rcx
mov    %rdi,%r8
mov    %rax,%rsi
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rdi,%r14
mov    %r8,%rdi
mov    %rax,%r15
callq  5720 <png_free_data@plt>
mov    $0x168,%edx
mov    %r15,%rdi
xor    %esi,%esi
callq  5350 <memset@plt>
mov    %r15,%rsi
mov    %r14,%rdi
callq  5790 <png_free@plt>
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

0000000000005ec0 <png_init_io>:
push   %rbp
mov    %rsp,%rbp
test   %rdi,%rdi
jne    5ecb <png_init_io+0xb>
leaveq 
retq   
mov    %rsi,0x108(%rdi)
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nop

0000000000005ee0 <png_get_io_ptr>:
push   %rbp
mov    %rsp,%rbp
test   %rdi,%rdi
jne    5eed <png_get_io_ptr+0xd>
xor    %eax,%eax
leaveq 
retq   
mov    0x108(%rdi),%rax
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)

0000000000005f00 <png_free_data>:
push   %rbp
mov    %rsp,%rbp
sub    $0x50,%rsp
mov    %r13,-0x20(%rbp)
mov    %r14,-0x28(%rbp)
mov    %r15,-0x30(%rbp)
test   %rdi,%rdi
jne    5f1b <png_free_data+0x1b>
leaveq 
retq   
test   %rsi,%rsi
jne    5f22 <png_free_data+0x22>
leaveq 
retq   
xor    %r9d,%r9d
mov    0xa0(%rsi),%r8
test   %r8,%r8
jne    60e8 <png_free_data+0x1e8>
mov    %r13,%rax
mov    %rbx,%r13
mov    %rsi,%rbx
mov    %r14,%r8
mov    %r9,%r14
mov    %r15,%r9
mov    %r12,%r15
mov    %rdi,%r12
mov    %rdx,%rsi
and    0x12c(%rbx),%esi
and    $0x2000,%esi
test   %esi,%esi
je     5fac <png_free_data+0xac>
mov    0x8(%rbx),%eax
and    $0xffffffef,%eax
mov    %eax,0x8(%rbx)
mov    0xb8(%rbx),%rsi
mov    %r12,%rdi
mov    %r15,-0x48(%rbp)
mov    %rcx,%r14
mov    %rdx,%r15
callq  5790 <png_free@plt>
movq   $0x0,0xb8(%rbx)
movw   $0x0,0x22(%rbx)
mov    %r14,%rcx
mov    %r15,%rdx
xor    %r14d,%r14d
mov    -0x30(%rbp),%r9
mov    -0x28(%rbp),%r8
mov    -0x20(%rbp),%rax
mov    -0x48(%rbp),%r15
mov    %rdx,%rsi
and    0x12c(%rbx),%esi
and    $0x100,%esi
test   %esi,%esi
je     6021 <png_free_data+0x121>
mov    0x150(%rbx),%rsi
mov    %r12,%rdi
mov    %r15,-0x48(%rbp)
mov    %rdx,%r14
mov    %rcx,%r15
callq  5790 <png_free@plt>
mov    0x158(%rbx),%rsi
mov    %r12,%rdi
callq  5790 <png_free@plt>
movq   $0x0,0x150(%rbx)
movq   $0x0,0x158(%rbx)
mov    0x8(%rbx),%eax
and    $0xffffbfff,%eax
mov    %eax,0x8(%rbx)
mov    %r15,%rcx
mov    %r14,%rdx
xor    %r14d,%r14d
mov    -0x30(%rbp),%r9
mov    -0x28(%rbp),%r8
mov    -0x20(%rbp),%rax
mov    -0x48(%rbp),%r15
mov    %rdx,%rsi
and    0x12c(%rbx),%esi
and    $0x80,%esi
test   %esi,%esi
jne    611b <png_free_data+0x21b>
mov    %rdx,%rsi
and    0x12c(%rbx),%esi
and    $0x10,%esi
test   %esi,%esi
je     60aa <png_free_data+0x1aa>
mov    0x80(%rbx),%rsi
mov    %r12,%rdi
mov    %r15,-0x48(%rbp)
mov    %rdx,%r14
mov    %rcx,%r15
callq  5790 <png_free@plt>
mov    0x88(%rbx),%rsi
mov    %r12,%rdi
callq  5790 <png_free@plt>
movq   $0x0,0x80(%rbx)
movq   $0x0,0x88(%rbx)
mov    0x8(%rbx),%eax
and    $0xffffefff,%eax
mov    %eax,0x8(%rbx)
mov    %r15,%rcx
mov    %r14,%rdx
xor    %r14d,%r14d
mov    -0x30(%rbp),%r9
mov    -0x28(%rbp),%r8
mov    -0x20(%rbp),%rax
mov    -0x48(%rbp),%r15
mov    0x140(%rbx),%rdi
test   %rdi,%rdi
je     6211 <png_free_data+0x311>
mov    %rdx,%rsi
and    0x12c(%rbx),%esi
and    $0x20,%esi
test   %esi,%esi
je     6211 <png_free_data+0x311>
cmp    $0xffffffff,%ecx
jne    6197 <png_free_data+0x297>
mov    %r15,-0x38(%rbp)
mov    %rdx,-0x48(%rbp)
mov    %rcx,-0x40(%rbp)
jmpq   6280 <png_free_data+0x380>
mov    %rdx,%rax
and    0x12c(%rsi),%eax
and    $0x4000,%eax
test   %eax,%eax
jne    62db <png_free_data+0x3db>
mov    %r13,%rax
mov    %rbx,%r13
mov    %rsi,%rbx
mov    %r14,%r8
mov    %r9,%r14
mov    %r15,%r9
mov    %r12,%r15
mov    %rdi,%r12
jmpq   5f4d <png_free_data+0x4d>
mov    0x108(%rbx),%rsi
mov    %r12,%rdi
mov    %r13,-0x18(%rbp)
mov    %r15,-0x48(%rbp)
mov    %rdx,%r13
mov    %rcx,%r15
callq  5790 <png_free@plt>
mov    0x118(%rbx),%rsi
mov    %r12,%rdi
callq  5790 <png_free@plt>
movq   $0x0,0x108(%rbx)
movq   $0x0,0x118(%rbx)
mov    0x120(%rbx),%rax
test   %rax,%rax
jne    631a <png_free_data+0x41a>
mov    %r15,%rcx
mov    %r13,%rdx
mov    0x8(%rbx),%eax
and    $0xfffffbff,%eax
mov    %eax,0x8(%rbx)
mov    -0x30(%rbp),%r9
mov    -0x28(%rbp),%r8
mov    -0x20(%rbp),%rax
mov    -0x48(%rbp),%r15
mov    -0x18(%rbp),%r13
jmpq   6038 <png_free_data+0x138>
movslq %ecx,%r14
shl    $0x5,%r14
mov    (%rdi,%r14,1),%rsi
mov    %r12,%rdi
mov    %r13,-0x10(%rbp)
mov    %r15,-0x48(%rbp)
mov    %rcx,%r13
mov    %rdx,%r15
callq  5790 <png_free@plt>
mov    0x140(%rbx),%rax
mov    0x10(%rax,%r14,1),%rsi
mov    %r14,%rax
mov    %r13,%r14
mov    %rax,%r13
mov    %r12,%rdi
callq  5790 <png_free@plt>
mov    0x140(%rbx),%rax
movq   $0x0,(%rax,%r13,1)
mov    0x140(%rbx),%rax
movq   $0x0,0x10(%rax,%r13,1)
mov    %r14,%rcx
mov    %r15,%rdx
xor    %r14d,%r14d
mov    -0x30(%rbp),%r9
mov    -0x28(%rbp),%r8
mov    -0x20(%rbp),%rax
mov    -0x48(%rbp),%r15
mov    -0x10(%rbp),%r13
mov    0x130(%rbx),%rdi
test   %rdi,%rdi
je     63a0 <png_free_data+0x4a0>
mov    %rdx,%rsi
and    0x12c(%rbx),%esi
and    $0x200,%esi
test   %esi,%esi
je     63a0 <png_free_data+0x4a0>
cmp    $0xffffffff,%ecx
jne    634e <png_free_data+0x44e>
mov    %rdx,-0x48(%rbp)
mov    %rcx,-0x38(%rbp)
jmpq   6546 <png_free_data+0x646>
mov    0x140(%rbx),%rax
movslq %r14d,%r15
shl    $0x5,%r15
mov    (%rax,%r15,1),%rsi
mov    %r12,%rdi
callq  5790 <png_free@plt>
mov    0x140(%rbx),%rax
mov    0x10(%rax,%r15,1),%rsi
mov    %r12,%rdi
callq  5790 <png_free@plt>
add    $0x1,%r14d
movslq 0x148(%rbx),%rax
cmp    %r14d,%eax
jg     624e <png_free_data+0x34e>
mov    0x140(%rbx),%rsi
mov    %r12,%rdi
callq  5790 <png_free@plt>
movq   $0x0,0x140(%rbx)
movl   $0x0,0x148(%rbx)
mov    0x8(%rbx),%eax
and    $0xffffdfff,%eax
mov    %eax,0x8(%rbx)
mov    -0x40(%rbp),%rcx
mov    -0x48(%rbp),%rdx
xor    %r14d,%r14d
mov    -0x30(%rbp),%r9
mov    -0x28(%rbp),%r8
mov    -0x20(%rbp),%rax
mov    -0x38(%rbp),%r15
jmpq   6211 <png_free_data+0x311>
cmp    $0xffffffff,%ecx
jne    6592 <png_free_data+0x692>
mov    %rdx,-0x48(%rbp)
mov    %rcx,-0x40(%rbp)
mov    %rbx,%r13
mov    %rsi,%rbx
mov    %r9,%r14
mov    %r12,%r15
mov    %rdi,%r12
jmpq   6621 <png_free_data+0x721>
mov    0x120(%rbx),%rax
movslq %r14d,%rcx
mov    (%rax,%rcx,8),%rsi
mov    %r12,%rdi
callq  5790 <png_free@plt>
add    $0x1,%r14d
movzbl 0x129(%rbx),%eax
cmp    %r14d,%eax
jg     6300 <png_free_data+0x400>
mov    0x120(%rbx),%rsi
mov    %r12,%rdi
callq  5790 <png_free@plt>
movq   $0x0,0x120(%rbx)
mov    %r15,%rcx
mov    %r13,%rdx
xor    %r14d,%r14d
jmpq   6173 <png_free_data+0x273>
movslq %ecx,%r14
shl    $0x5,%r14
mov    0x8(%rdi,%r14,1),%rsi
mov    %r12,%rdi
mov    %r13,-0x10(%rbp)
mov    %r15,-0x48(%rbp)
mov    %r14,%r13
mov    %rcx,%r14
mov    %rdx,%r15
callq  5790 <png_free@plt>
mov    0x130(%rbx),%rax
movq   $0x0,0x8(%rax,%r13,1)
mov    %r14,%rcx
mov    %r15,%rdx
xor    %r14d,%r14d
mov    -0x30(%rbp),%r9
mov    -0x28(%rbp),%r8
mov    -0x20(%rbp),%rax
mov    -0x48(%rbp),%r15
mov    -0x10(%rbp),%r13
mov    %rdx,%rsi
and    0x12c(%rbx),%esi
and    $0x8000,%esi
test   %esi,%esi
je     6447 <png_free_data+0x547>
mov    0xf8(%rbx),%rsi
test   %rsi,%rsi
je     63f9 <png_free_data+0x4f9>
mov    %r12,%rdi
mov    %r15,-0x48(%rbp)
mov    %rdx,%r14
mov    %rcx,%r15
callq  5790 <png_free@plt>
movq   $0x0,0xf8(%rbx)
mov    %r15,%rcx
mov    %r14,%rdx
xor    %r14d,%r14d
mov    -0x30(%rbp),%r9
mov    -0x28(%rbp),%r8
mov    -0x20(%rbp),%rax
mov    -0x48(%rbp),%r15
mov    0xf0(%rbx),%rsi
test   %rsi,%rsi
je     643b <png_free_data+0x53b>
mov    %r12,%rdi
mov    %r15,-0x48(%rbp)
mov    %rdx,%r14
mov    %rcx,%r15
callq  5790 <png_free@plt>
movq   $0x0,0xf0(%rbx)
mov    %r15,%rcx
mov    %r14,%rdx
xor    %r14d,%r14d
mov    -0x30(%rbp),%r9
mov    -0x28(%rbp),%r8
mov    -0x20(%rbp),%rax
mov    -0x48(%rbp),%r15
mov    0x8(%rbx),%esi
and    $0xfffeffff,%esi
mov    %esi,0x8(%rbx)
mov    %rdx,%rsi
and    0x12c(%rbx),%esi
and    $0x8,%esi
test   %esi,%esi
je     649d <png_free_data+0x59d>
mov    0x100(%rbx),%rsi
mov    %r12,%rdi
mov    %r15,-0x48(%rbp)
mov    %rcx,%r14
mov    %rdx,%r15
callq  5790 <png_free@plt>
movq   $0x0,0x100(%rbx)
mov    0x8(%rbx),%eax
and    $0xffffffbf,%eax
mov    %eax,0x8(%rbx)
mov    %r14,%rcx
mov    %r15,%rdx
xor    %r14d,%r14d
mov    -0x30(%rbp),%r9
mov    -0x28(%rbp),%r8
mov    -0x20(%rbp),%rax
mov    -0x48(%rbp),%r15
mov    %rdx,%rsi
and    0x12c(%rbx),%esi
and    $0x1000,%esi
test   %esi,%esi
je     64f6 <png_free_data+0x5f6>
mov    0x18(%rbx),%rsi
mov    %r12,%rdi
mov    %r12,-0x48(%rbp)
mov    %rdx,%r12
mov    %rcx,%r14
callq  5790 <png_free@plt>
movq   $0x0,0x18(%rbx)
mov    0x8(%rbx),%eax
and    $0xfffffff7,%eax
mov    %eax,0x8(%rbx)
movw   $0x0,0x20(%rbx)
mov    %r14,%rcx
mov    %r12,%rdx
mov    -0x48(%rbp),%r12
xor    %r14d,%r14d
mov    -0x30(%rbp),%r9
mov    -0x28(%rbp),%r8
mov    -0x20(%rbp),%rax
mov    %rdx,%rsi
and    0x12c(%rbx),%esi
and    $0x40,%esi
test   %esi,%esi
je     66d3 <png_free_data+0x7d3>
mov    0x160(%rbx),%rsi
test   %rsi,%rsi
je     66c7 <png_free_data+0x7c7>
mov    %rdx,-0x8(%rbp)
mov    %rcx,-0x48(%rbp)
jmpq   6691 <png_free_data+0x791>
mov    0x130(%rbx),%rcx
movslq %r14d,%rax
shl    $0x5,%rax
mov    0x8(%rcx,%rax,1),%rsi
mov    %r12,%rdi
callq  5790 <png_free@plt>
add    $0x1,%r14d
movslq 0x138(%rbx),%rax
cmp    %r14d,%eax
jg     6527 <png_free_data+0x627>
mov    0x130(%rbx),%rsi
mov    %r12,%rdi
callq  5790 <png_free@plt>
movq   $0x0,0x130(%rbx)
movl   $0x0,0x138(%rbx)
mov    -0x38(%rbp),%rcx
mov    -0x48(%rbp),%rdx
xor    %r14d,%r14d
mov    -0x30(%rbp),%r9
mov    -0x28(%rbp),%r8
mov    -0x20(%rbp),%rax
jmpq   63a0 <png_free_data+0x4a0>
movslq %ecx,%r9
lea    (%r9,%r9,2),%rax
shl    $0x4,%rax
lea    (%rax,%r9,8),%r13
mov    0x8(%r8,%r13,1),%r8
mov    %rdi,%rax
mov    %rbx,-0x18(%rbp)
mov    %r12,-0x48(%rbp)
mov    %rsi,%rbx
mov    %r8,%rsi
mov    %rdi,%r12
mov    %rax,%rdi
mov    %rcx,%r14
mov    %rdx,%r15
callq  5790 <png_free@plt>
mov    0xa0(%rbx),%rax
movq   $0x0,0x8(%rax,%r13,1)
mov    %r14,%rcx
mov    %r15,%rdx
xor    %r14d,%r14d
mov    -0x30(%rbp),%r9
mov    -0x28(%rbp),%r8
mov    -0x20(%rbp),%rax
mov    -0x48(%rbp),%r15
mov    -0x18(%rbp),%r13
jmpq   5f4d <png_free_data+0x4d>
movslq %r14d,%rcx
lea    (%rcx,%rcx,2),%rax
shl    $0x4,%rax
lea    (%rax,%rcx,8),%rax
mov    0xa0(%rbx),%rcx
mov    0x8(%rcx,%rax,1),%rsi
mov    %r12,%rdi
callq  5790 <png_free@plt>
add    $0x1,%r14d
movslq 0x94(%rbx),%rax
cmp    %r14d,%eax
jg     65fa <png_free_data+0x6fa>
mov    0xa0(%rbx),%rsi
mov    %r12,%rdi
callq  5790 <png_free@plt>
movq   $0x0,0xa0(%rbx)
movl   $0x0,0x94(%rbx)
movl   $0x0,0x98(%rbx)
mov    -0x40(%rbp),%rcx
mov    -0x48(%rbp),%rdx
xor    %r14d,%r14d
mov    -0x30(%rbp),%r9
mov    -0x28(%rbp),%r8
mov    -0x20(%rbp),%rax
jmpq   5f4d <png_free_data+0x4d>
mov    0x160(%rbx),%rax
mov    %r14d,%ecx
mov    (%rax,%rcx,8),%rsi
mov    %r12,%rdi
callq  5790 <png_free@plt>
add    $0x1,%r14d
mov    0x4(%rbx),%eax
cmp    %r14d,%eax
ja     6677 <png_free_data+0x777>
mov    %r12,%rdi
mov    0x160(%rbx),%rsi
callq  5790 <png_free@plt>
movq   $0x0,0x160(%rbx)
mov    -0x48(%rbp),%rcx
mov    -0x8(%rbp),%rdx
mov    -0x30(%rbp),%r9
mov    -0x28(%rbp),%r8
mov    -0x20(%rbp),%rax
mov    0x8(%rbx),%esi
and    $0xffff7fff,%esi
mov    %esi,0x8(%rbx)
cmp    $0xffffffff,%ecx
je     66de <png_free_data+0x7de>
and    $0xffffbddf,%edx
not    %edx
and    0x12c(%rbx),%edx
mov    %edx,0x12c(%rbx)
mov    %r13,%rbx
mov    %rax,%r13
mov    %r15,%r12
mov    %r9,%r15
mov    %r8,%r14
leaveq 
retq   
nopl   (%rax)

0000000000006700 <png_data_freer>:
push   %rbp
mov    %rsp,%rbp
test   %rdi,%rdi
jne    670b <png_data_freer+0xb>
leaveq 
retq   
test   %rsi,%rsi
jne    6712 <png_data_freer+0x12>
leaveq 
retq   
cmp    $0x1,%edx
je     6728 <png_data_freer+0x28>
cmp    $0x2,%edx
je     6736 <png_data_freer+0x36>
lea    0x263e9(%rip),%rsi        # 2cb0c <short_months.6+0x37>
callq  5470 <png_error@plt>
or     0x12c(%rsi),%ecx
mov    %ecx,0x12c(%rsi)
leaveq 
retq   
not    %ecx
and    0x12c(%rsi),%ecx
mov    %ecx,0x12c(%rsi)
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)

0000000000006750 <png_handle_as_unknown>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
xor    %eax,%eax
test   %rdi,%rdi
jne    6761 <png_handle_as_unknown+0x11>
leaveq 
retq   
test   %rsi,%rsi
jne    6768 <png_handle_as_unknown+0x18>
leaveq 
retq   
mov    0x3c4(%rdi),%ecx
test   %ecx,%ecx
jne    6774 <png_handle_as_unknown+0x24>
leaveq 
retq   
mov    $0x4,%edx
lea    (%rcx,%rcx,4),%eax
mov    %eax,%eax
mov    0x3c8(%rdi),%rcx
add    %rcx,%rax
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rsi,%rbx
mov    %rdx,%r12
mov    %rcx,%r13
mov    %rax,%r14
jmp    67b2 <png_handle_as_unknown+0x62>
cmp    %r13,%r15
jbe    67e3 <png_handle_as_unknown+0x93>
mov    %r15,%r14
lea    -0x5(%r14),%r15
mov    %rbx,%rdi
mov    %r15,%rsi
mov    %r12,%rdx
callq  53d0 <memcmp@plt>
test   %eax,%eax
jne    67aa <png_handle_as_unknown+0x5a>
movzbl -0x1(%r14),%eax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
xor    %eax,%eax
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

0000000000006800 <png_get_copyright>:
push   %rbp
mov    %rsp,%rbp
lea    0x2632b(%rip),%rax        # 2cb36 <short_months.6+0x61>
leaveq 
retq   
nopl   (%rax)

0000000000006810 <png_get_header_ver>:
push   %rbp
mov    %rsp,%rbp
lea    0x263e6(%rip),%rax        # 2cc01 <short_months.6+0x12c>
leaveq 
retq   
nopl   (%rax)

0000000000006820 <png_get_header_version>:
push   %rbp
mov    %rsp,%rbp
lea    0x263dd(%rip),%rax        # 2cc08 <short_months.6+0x133>
leaveq 
retq   
nopl   (%rax)

0000000000006830 <png_get_libpng_ver>:
push   %rbp
mov    %rsp,%rbp
callq  55f0 <png_get_header_ver@plt>
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

0000000000006840 <png_save_int_32>:
push   %rbp
mov    %rsp,%rbp
callq  5500 <png_save_uint_32@plt>
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

0000000000006850 <png_image_free>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
test   %rdi,%rdi
jne    685f <png_image_free+0xf>
leaveq 
retq   
mov    (%rdi),%rax
test   %rax,%rax
jne    6869 <png_image_free+0x19>
leaveq 
retq   
mov    0x10(%rax),%rax
test   %rax,%rax
je     6874 <png_image_free+0x24>
leaveq 
retq   
lea    0x3fa5(%rip),%rsi        # a820 <png_image_free_function>
mov    %rdi,%rdx
mov    %rdi,%rax
mov    %r15,-0x8(%rbp)
mov    %rdi,%r15
mov    %rax,%rdi
callq  b250 <png_safe_execute>
movq   $0x0,(%r15)
mov    -0x8(%rbp),%r15
leaveq 
retq   
nopl   (%rax)

00000000000068a0 <png_set_option>:
push   %rbp
mov    %rsp,%rbp
mov    $0x1,%eax
test   %rdi,%rdi
jne    68b0 <png_set_option+0x10>
leaveq 
retq   
test   %esi,%esi
jns    68b6 <png_set_option+0x16>
leaveq 
retq   
cmp    $0xb,%esi
jle    68bd <png_set_option+0x1d>
leaveq 
retq   
mov    %rsi,%rcx
and    $0x1,%ecx
test   %ecx,%ecx
je     68c9 <png_set_option+0x29>
leaveq 
retq   
mov    $0x3,%r8d
test   %edx,%edx
jne    68da <png_set_option+0x3a>
mov    $0x2,%edx
jmp    68dd <png_set_option+0x3d>
mov    %r8,%rdx
mov    %rsi,%rcx
shl    %cl,%r8d
mov    %r8,%rsi
not    %esi
mov    0x388(%rdi),%eax
and    %eax,%esi
shl    %cl,%edx
or     %edx,%esi
movzbl %sil,%edx
mov    %edx,0x388(%rdi)
and    %r8d,%eax
sar    %cl,%eax
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)

0000000000006910 <png_zstream_error>:
push   %rbp
mov    %rsp,%rbp
mov    0x170(%rdi),%rax
test   %rax,%rax
je     6922 <png_zstream_error+0x12>
leaveq 
retq   
lea    0x7(%rsi),%eax
cmp    $0x9,%eax
ja     694a <png_zstream_error+0x3a>
lea    0x256cf(%rip),%rcx        # 2c000 <_fini+0xf5c>
movslq (%rcx,%rax,4),%rax
add    %rcx,%rax
jmpq   *%rax
lea    0x263b1(%rip),%rax        # 2ccf2 <short_months.6+0x21d>
mov    %rax,0x170(%rdi)
leaveq 
retq   
lea    0x262e5(%rip),%rax        # 2cc36 <short_months.6+0x161>
mov    %rax,0x170(%rdi)
leaveq 
retq   
lea    0x262f1(%rip),%rax        # 2cc52 <short_months.6+0x17d>
mov    %rax,0x170(%rdi)
leaveq 
retq   
lea    0x262fd(%rip),%rax        # 2cc6e <short_months.6+0x199>
mov    %rax,0x170(%rdi)
leaveq 
retq   
lea    0x26303(%rip),%rax        # 2cc84 <short_months.6+0x1af>
mov    %rax,0x170(%rdi)
leaveq 
retq   
lea    0x26301(%rip),%rax        # 2cc92 <short_months.6+0x1bd>
mov    %rax,0x170(%rdi)
leaveq 
retq   
lea    0x26308(%rip),%rax        # 2cca9 <short_months.6+0x1d4>
mov    %rax,0x170(%rdi)
leaveq 
retq   
lea    0x2630a(%rip),%rax        # 2ccbb <short_months.6+0x1e6>
mov    %rax,0x170(%rdi)
leaveq 
retq   
lea    0x2630e(%rip),%rax        # 2cccf <short_months.6+0x1fa>
mov    %rax,0x170(%rdi)
leaveq 
retq   
lea    0x26308(%rip),%rax        # 2ccd9 <short_months.6+0x204>
mov    %rax,0x170(%rdi)
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

00000000000069e0 <png_fixed>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rsi,%r14
mov    %rdi,%r15
movsd  0x26a52(%rip),%xmm1        # 2d450 <short_months.6+0x97b>
mulsd  %xmm1,%xmm0
movsd  0x26a4e(%rip),%xmm1        # 2d458 <short_months.6+0x983>
addsd  %xmm1,%xmm0
callq  57e0 <floor@plt>
movsd  0x26a4d(%rip),%xmm1        # 2d468 <short_months.6+0x993>
ucomisd %xmm1,%xmm0
ja     6a3f <png_fixed+0x5f>
movsd  0x26a37(%rip),%xmm1        # 2d460 <short_months.6+0x98b>
ucomisd %xmm1,%xmm0
jp     6a31 <png_fixed+0x51>
jb     6a3f <png_fixed+0x5f>
cvttsd2si %xmm0,%eax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
mov    %r14,%rsi
mov    %r15,%rdi
callq  acb0 <png_fixed_error>
nopw   0x0(%rax,%rax,1)

0000000000006a50 <png_user_version_check>:
push   %rbp
mov    %rsp,%rbp
sub    $0x90,%rsp
xor    %edx,%edx
lea    0x2619d(%rip),%r11        # 2cc01 <short_months.6+0x12c>
test   %rsi,%rsi
je     6a75 <png_user_version_check+0x25>
mov    $0xffffffffffffffff,%r8
mov    %rdx,%rax
jmp    6ad0 <png_user_version_check+0x80>
mov    0x130(%rdi),%eax
or     $0x20000,%eax
mov    %eax,0x130(%rdi)
mov    0x130(%rdi),%eax
and    $0x20000,%eax
test   %eax,%eax
jne    6ae8 <png_user_version_check+0x98>
mov    $0x1,%eax
leaveq 
retq   
mov    0x130(%rdi),%r9d
or     $0x20000,%r9d
mov    %r9d,0x130(%rdi)
movsbq (%rsi,%r10,1),%rcx
cmp    $0x2e,%cl
jne    6abe <png_user_version_check+0x6e>
add    $0x1,%eax
cmp    $0x1,%eax
jg     6a86 <png_user_version_check+0x36>
test   %cl,%cl
je     6a86 <png_user_version_check+0x36>
movsbq (%r10,%r11,1),%rcx
test   %cl,%cl
je     6a86 <png_user_version_check+0x36>
add    $0x1,%r8d
movslq %r8d,%r10
movsbq (%r10,%r11,1),%r9
movsbq (%rsi,%r10,1),%rcx
cmp    %cl,%r9b
jne    6a9c <png_user_version_check+0x4c>
jmp    6ab1 <png_user_version_check+0x61>
lea    -0x90(%rbp),%r8
mov    $0x80,%eax
lea    0x2620e(%rip),%rcx        # 2cd09 <short_months.6+0x234>
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rdi,%r14
mov    %r8,%rdi
mov    %rsi,%r15
mov    %rax,%rsi
callq  ad20 <png_safecat>
mov    %r15,%rcx
mov    %rax,%rdx
lea    -0x90(%rbp),%r15
mov    %r15,%rdi
mov    $0x80,%esi
callq  ad20 <png_safecat>
mov    %rax,%rdx
lea    0x261f0(%rip),%rcx        # 2cd28 <short_months.6+0x253>
mov    %r15,%rdi
mov    $0x80,%esi
callq  ad20 <png_safecat>
mov    %rax,%rdx
mov    %r15,%rdi
lea    0x260af(%rip),%rcx        # 2cc01 <short_months.6+0x12c>
mov    $0x80,%esi
callq  ad20 <png_safecat>
mov    %r15,%rsi
mov    %r14,%rdi
callq  5390 <png_warning@plt>
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
xor    %eax,%eax
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

0000000000006b80 <png_create_png_struct>:
push   %rbp
mov    %rsp,%rbp
sub    $0x5e0,%rsp
mov    %rbx,-0x10(%rbp)
mov    %r12,-0x18(%rbp)
mov    %r13,-0x20(%rbp)
mov    %r14,-0x28(%rbp)
mov    %r15,-0x30(%rbp)
mov    %rdi,-0x8(%rbp)
mov    %r9,%rbx
mov    %rsi,%r12
mov    %rdx,%r13
mov    %rcx,%r14
mov    %r8,%r15
lea    -0x5e0(%rbp),%rdi
xor    %esi,%esi
mov    $0x4e8,%edx
callq  5350 <memset@plt>
mov    %rbx,%rdx
mov    %r15,%rsi
movl   $0xf4240,-0x1c4(%rbp)
movl   $0xf4240,-0x1c0(%rbp)
movl   $0x3e8,-0x1bc(%rbp)
movq   $0x7a1200,-0x1b8(%rbp)
mov    0x10(%rbp),%rcx
lea    -0x5e0(%rbp),%rbx
mov    %rbx,%rdi
callq  54d0 <png_set_mem_fn@plt>
mov    %r14,%rcx
mov    %r13,%rdx
mov    %r12,%rsi
mov    %rbx,%rdi
callq  5680 <png_set_error_fn@plt>
lea    -0xf8(%rbp),%r12
mov    %r12,%rdi
callq  5420 <_setjmp@plt>
test   %eax,%eax
je     6c43 <png_create_png_struct+0xc3>
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
mov    -0x10(%rbp),%rbx
xor    %eax,%eax
leaveq 
retq   
mov    %r12,-0x510(%rbp)
movq   $0x0,-0x508(%rbp)
mov    0x2b384(%rip),%rax        # 31fe0 <longjmp@GLIBC_2.2.5>
mov    %rax,-0x518(%rbp)
mov    %rbx,%rdi
mov    -0x8(%rbp),%rsi
callq  6a50 <png_user_version_check>
test   %eax,%eax
jne    6c8b <png_create_png_struct+0x10b>
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
mov    -0x10(%rbp),%rbx
xor    %eax,%eax
leaveq 
retq   
mov    %rbx,%rdi
mov    $0x4e8,%r12d
mov    %r12,%rsi
callq  5150 <png_malloc_warn@plt>
test   %rax,%rax
jne    6cb9 <png_create_png_struct+0x139>
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
mov    -0x10(%rbp),%rbx
xor    %eax,%eax
leaveq 
retq   
lea    0x70(%rip),%rcx        # 6d30 <png_zalloc>
mov    %rcx,-0x460(%rbp)
lea    0xa2(%rip),%rcx        # 6d70 <png_zfree>
mov    %rcx,-0x458(%rbp)
mov    %r12,%rdx
mov    %rax,%r12
mov    %rbx,%rsi
mov    %r12,-0x450(%rbp)
movq   $0x0,-0x510(%rbp)
movq   $0x0,-0x508(%rbp)
movq   $0x0,-0x518(%rbp)
mov    %r12,%rdi
callq  54c0 <memcpy@plt>
mov    %r12,%rax
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
mov    -0x10(%rbp),%rbx
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

0000000000006d30 <png_zalloc>:
push   %rbp
mov    %rsp,%rbp
xor    %eax,%eax
test   %rdi,%rdi
jne    6d3d <png_zalloc+0xd>
leaveq 
retq   
mov    %edx,%ecx
mov    $0xffffffffffffffff,%rax
xor    %edx,%edx
div    %rcx
mov    %esi,%edx
cmp    %rdx,%rax
jbe    6d60 <png_zalloc+0x30>
imul   %rdx,%rcx
mov    %rcx,%rsi
callq  5150 <png_malloc_warn@plt>
leaveq 
retq   
lea    0x25fd4(%rip),%rsi        # 2cd3b <short_months.6+0x266>
callq  5390 <png_warning@plt>
xor    %eax,%eax
leaveq 
retq   

0000000000006d70 <png_zfree>:
push   %rbp
mov    %rsp,%rbp
callq  5790 <png_free@plt>
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

0000000000006d80 <png_reset_crc>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x8(%rbp)
mov    %rdi,%r15
xor    %edi,%edi
mov    %rdi,%rsi
mov    %rdi,%rdx
callq  51c0 <crc32@plt>
mov    %eax,0x24c(%r15)
mov    -0x8(%rbp),%r15
leaveq 
retq   
nopl   0x0(%rax)

0000000000006db0 <png_calculate_crc>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
xor    %r8d,%r8d
mov    $0x1,%ecx
mov    0x218(%rdi),%eax
and    $0x20000000,%eax
test   %eax,%eax
jne    6de3 <png_calculate_crc+0x33>
mov    0x130(%rdi),%eax
and    $0x800,%eax
test   %eax,%eax
je     6df8 <png_calculate_crc+0x48>
mov    %r8,%rcx
jmp    6df8 <png_calculate_crc+0x48>
mov    0x130(%rdi),%eax
and    $0x300,%eax
cmp    $0x300,%eax
jne    6df8 <png_calculate_crc+0x48>
mov    %r8,%rcx
test   %ecx,%ecx
jg     6dfe <png_calculate_crc+0x4e>
leaveq 
retq   
test   %rdx,%rdx
jne    6e05 <png_calculate_crc+0x55>
leaveq 
retq   
mov    0x24c(%rdi),%eax
mov    $0xffffffff,%ecx
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rdx,%rbx
mov    %rsi,%r12
mov    %rdi,%r13
mov    %rcx,%r14
jmp    6e3b <png_calculate_crc+0x8b>
sub    %rcx,%rbx
mov    %r15d,%ecx
add    %rcx,%r12
test   %ebx,%ebx
je     6e44 <png_calculate_crc+0x94>
mov    %rbx,%r15
jmp    6e47 <png_calculate_crc+0x97>
mov    %r14,%r15
mov    %rax,%rdi
mov    %r12,%rsi
mov    %r15,%rdx
callq  51c0 <crc32@plt>
mov    %r15d,%ecx
cmp    %rbx,%rcx
jne    6e32 <png_calculate_crc+0x82>
mov    %eax,0x24c(%r13)
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

0000000000006e80 <png_chunk_unknown_handling>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %rsi,%rax
shr    $0x18,%eax
mov    %al,-0x5(%rbp)
mov    %rsi,%rax
shr    $0x10,%eax
mov    %al,-0x4(%rbp)
mov    %rsi,%rax
shr    $0x8,%eax
mov    %al,-0x3(%rbp)
mov    %sil,-0x2(%rbp)
movb   $0x0,-0x1(%rbp)
lea    -0x5(%rbp),%rsi
callq  5310 <png_handle_as_unknown@plt>
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)

0000000000006ec0 <png_colorspace_set_gamma>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    $0x1,%ecx
lea    0x25e8a(%rip),%rax        # 2cd5e <short_months.6+0x289>
cmp    $0xf,%edx
jg     6ef3 <png_colorspace_set_gamma+0x33>
movzwl 0x4a(%rsi),%edx
or     $0x8000,%dx
mov    %dx,0x4a(%rsi)
mov    %rcx,%rdx
mov    %rax,%rsi
callq  b130 <png_chunk_report>
leaveq 
retq   
cmp    $0x2540be40,%edx
jg     6ed9 <png_colorspace_set_gamma+0x19>
mov    0x12c(%rdi),%eax
and    $0x8000,%eax
test   %eax,%eax
jne    6f19 <png_colorspace_set_gamma+0x59>
movzwl 0x4a(%rsi),%eax
and    $0x8000,%eax
test   %eax,%eax
jle    6f2d <png_colorspace_set_gamma+0x6d>
leaveq 
retq   
movzwl 0x4a(%rsi),%eax
and    $0x8,%eax
test   %eax,%eax
jle    6f0a <png_colorspace_set_gamma+0x4a>
lea    0x25e4c(%rip),%rax        # 2cd77 <short_months.6+0x2a2>
jmp    6ed9 <png_colorspace_set_gamma+0x19>
mov    %rsi,%r8
mov    %rdx,%rax
mov    %r15,-0x10(%rbp)
mov    %rdx,-0x8(%rbp)
mov    %rax,%rdx
mov    %rsi,%r15
mov    %r8,%rsi
callq  9110 <png_colorspace_check_gamma>
test   %eax,%eax
jne    6f53 <png_colorspace_set_gamma+0x93>
mov    -0x10(%rbp),%r15
leaveq 
retq   
mov    -0x8(%rbp),%rax
mov    %eax,(%r15)
movzwl 0x4a(%r15),%eax
or     $0x9,%ax
mov    %ax,0x4a(%r15)
mov    -0x10(%rbp),%r15
leaveq 
retq   
xchg   %ax,%ax

0000000000006f70 <png_colorspace_sync_info>:
push   %rbp
mov    %rsp,%rbp
movzwl 0x7e(%rsi),%eax
mov    %rax,%rcx
and    $0x8000,%ecx
test   %ecx,%ecx
jg     6f9b <png_colorspace_sync_info+0x2b>
and    $0x80,%eax
test   %eax,%eax
jg     6fb9 <png_colorspace_sync_info+0x49>
mov    0x8(%rsi),%eax
and    $0xfffff7ff,%eax
mov    %eax,0x8(%rsi)
jmp    6fc4 <png_colorspace_sync_info+0x54>
mov    0x8(%rsi),%eax
and    $0xffffe7fa,%eax
mov    %eax,0x8(%rsi)
mov    $0x10,%edx
mov    $0xffffffffffffffff,%rcx
callq  5720 <png_free_data@plt>
leaveq 
retq   
mov    0x8(%rsi),%eax
or     $0x800,%eax
mov    %eax,0x8(%rsi)
movzwl 0x7e(%rsi),%eax
and    $0x2,%eax
test   %eax,%eax
jg     6fda <png_colorspace_sync_info+0x6a>
mov    0x8(%rsi),%eax
and    $0xfffffffb,%eax
mov    %eax,0x8(%rsi)
jmp    6fe3 <png_colorspace_sync_info+0x73>
mov    0x8(%rsi),%eax
or     $0x4,%eax
mov    %eax,0x8(%rsi)
movzwl 0x7e(%rsi),%eax
and    $0x1,%eax
test   %eax,%eax
jg     6ff9 <png_colorspace_sync_info+0x89>
mov    0x8(%rsi),%eax
and    $0xfffffffe,%eax
mov    %eax,0x8(%rsi)
leaveq 
retq   
mov    0x8(%rsi),%eax
or     $0x1,%eax
mov    %eax,0x8(%rsi)
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nop

0000000000007010 <png_colorspace_sync>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
test   %rsi,%rsi
jne    701f <png_colorspace_sync+0xf>
leaveq 
retq   
lea    0x34(%rsi),%rcx
lea    0x498(%rdi),%rax
mov    $0x4c,%edx
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rsi,%r14
mov    %rax,%rsi
mov    %rdi,%r15
mov    %rcx,%rdi
callq  54c0 <memcpy@plt>
mov    %r14,%rsi
mov    %r15,%rdi
callq  6f70 <png_colorspace_sync_info>
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
nopl   (%rax)

0000000000007060 <png_colorspace_set_chromaticities>:
push   %rbp
mov    %rsp,%rbp
sub    $0x50,%rsp
mov    %r12,-0x8(%rbp)
mov    %r13,-0x10(%rbp)
mov    %r14,-0x18(%rbp)
mov    %r15,-0x20(%rbp)
mov    %rdx,%r12
mov    %rsi,%r13
mov    %rcx,%r14
mov    %rdi,%r15
lea    -0x44(%rbp),%rdi
mov    %r12,%rsi
callq  9b20 <png_colorspace_check_xy>
test   %eax,%eax
je     70b6 <png_colorspace_set_chromaticities+0x56>
cmp    $0x1,%eax
je     70dd <png_colorspace_set_chromaticities+0x7d>
movzwl 0x4a(%r13),%eax
or     $0x8000,%ax
mov    %ax,0x4a(%r13)
mov    %r15,%rdi
lea    0x25ce7(%rip),%rsi        # 2cd98 <short_months.6+0x2c3>
callq  5470 <png_error@plt>
mov    %r12,%rdx
mov    %r13,%rsi
mov    %r15,%rdi
mov    %r14,%r8
lea    -0x44(%rbp),%rcx
callq  9bf0 <png_colorspace_set_xy_and_XYZ>
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
leaveq 
retq   
movzwl 0x4a(%r13),%eax
or     $0x8000,%ax
mov    %ax,0x4a(%r13)
mov    %r15,%rdi
lea    0x25c8c(%rip),%rsi        # 2cd81 <short_months.6+0x2ac>
callq  5590 <png_benign_error@plt>
xor    %eax,%eax
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
leaveq 
retq   
xchg   %ax,%ax

0000000000007110 <png_colorspace_set_endpoints>:
push   %rbp
mov    %rsp,%rbp
sub    $0x60,%rsp
mov    %r13,-0x8(%rbp)
mov    %r14,-0x10(%rbp)
mov    %r15,-0x18(%rbp)
mov    (%rdx),%rax
mov    %rax,-0x5c(%rbp)
mov    0x8(%rdx),%rax
mov    %rax,-0x54(%rbp)
mov    0x10(%rdx),%rax
mov    %rax,-0x4c(%rbp)
mov    0x18(%rdx),%rax
mov    %rax,-0x44(%rbp)
mov    0x20(%rdx),%eax
mov    %eax,-0x3c(%rbp)
mov    %rsi,%r13
mov    %rdi,%r14
mov    %rcx,%r15
lea    -0x38(%rbp),%rdi
lea    -0x5c(%rbp),%rsi
callq  9b70 <png_colorspace_check_XYZ>
test   %eax,%eax
je     7185 <png_colorspace_set_endpoints+0x75>
cmp    $0x1,%eax
je     71a9 <png_colorspace_set_endpoints+0x99>
movzwl 0x4a(%r13),%eax
or     $0x8000,%ax
mov    %ax,0x4a(%r13)
mov    %r14,%rdi
lea    0x25c18(%rip),%rsi        # 2cd98 <short_months.6+0x2c3>
callq  5470 <png_error@plt>
mov    %r13,%rsi
mov    %r14,%rdi
mov    %r15,%r8
lea    -0x5c(%rbp),%rcx
lea    -0x38(%rbp),%rdx
callq  9bf0 <png_colorspace_set_xy_and_XYZ>
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
leaveq 
retq   
movzwl 0x4a(%r13),%eax
or     $0x8000,%ax
mov    %ax,0x4a(%r13)
mov    %r14,%rdi
lea    0x25bfe(%rip),%rsi        # 2cdbf <short_months.6+0x2ea>
callq  5590 <png_benign_error@plt>
xor    %eax,%eax
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)

00000000000071e0 <png_colorspace_set_sRGB>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
xor    %eax,%eax
movzwl 0x4a(%rsi),%ecx
mov    %rcx,%r8
and    $0x8000,%r8d
test   %r8d,%r8d
jle    71ff <png_colorspace_set_sRGB+0x1f>
leaveq 
retq   
lea    0x25bcc(%rip),%r9        # 2cdd2 <short_months.6+0x2fd>
test   %edx,%edx
js     7306 <png_colorspace_set_sRGB+0x126>
cmp    $0x3,%edx
jg     7306 <png_colorspace_set_sRGB+0x126>
and    $0x4,%ecx
test   %ecx,%ecx
jg     731a <png_colorspace_set_sRGB+0x13a>
movzwl 0x4a(%rsi),%eax
mov    %rax,%rcx
and    $0x20,%ecx
test   %ecx,%ecx
jg     733a <png_colorspace_set_sRGB+0x15a>
mov    $0x2,%ecx
and    $0x2,%eax
test   %eax,%eax
jg     734a <png_colorspace_set_sRGB+0x16a>
mov    $0xb18f,%eax
mov    %rsi,%r8
mov    %r14,-0x10(%rbp)
mov    %r15,-0x18(%rbp)
mov    %rsi,%r14
mov    %r8,%rsi
mov    %rdx,%r15
mov    %rax,%rdx
callq  9110 <png_colorspace_check_gamma>
mov    %r15w,0x48(%r14)
movl   $0xb18f,(%r14)
movzwl 0x4a(%r14),%eax
or     $0xe7,%ax
mov    %ax,0x4a(%r14)
movabs $0x80e80000fa00,%rax
mov    %rax,0x4(%r14)
movabs $0xea6000007530,%rax
mov    %rax,0xc(%r14)
movabs $0x177000003a98,%rax
mov    %rax,0x14(%r14)
movabs $0x808400007a26,%rax
mov    %rax,0x1c(%r14)
movabs $0x53100000a117,%rax
mov    %rax,0x24(%r14)
movabs $0x8bae0000078d,%rax
mov    %rax,0x2c(%r14)
movabs $0x2e8f0001175d,%rax
mov    %rax,0x34(%r14)
movabs $0x1c3300004680,%rax
mov    %rax,0x3c(%r14)
movl   $0x1734d,0x44(%r14)
mov    $0x1,%eax
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
leaveq 
retq   
movslq %edx,%rcx
mov    %r9,%rdx
lea    0x25ac4(%rip),%r8        # 2cdd7 <short_months.6+0x302>
callq  9f00 <png_icc_profile_error>
leaveq 
retq   
movzwl 0x48(%rsi),%eax
cmp    %eax,%edx
je     7222 <png_colorspace_set_sRGB+0x42>
movslq %edx,%rcx
mov    %r9,%rdx
lea    0x25ac2(%rip),%r8        # 2cdf5 <short_months.6+0x320>
callq  9f00 <png_icc_profile_error>
leaveq 
retq   
lea    0x25ad3(%rip),%rsi        # 2ce14 <short_months.6+0x33f>
callq  5590 <png_benign_error@plt>
xor    %eax,%eax
leaveq 
retq   
lea    0x2563b(%rip),%r8        # 2c98c <sRGB_xy>
lea    0x4(%rsi),%rax
mov    $0x64,%ecx
mov    %r13,-0x8(%rbp)
mov    %r14,-0x10(%rbp)
mov    %r15,-0x18(%rbp)
mov    %rsi,%r13
mov    %rax,%rsi
mov    %rdx,%r14
mov    %rcx,%rdx
mov    %rdi,%r15
mov    %r8,%rdi
callq  9a10 <png_colorspace_endpoints_match>
test   %eax,%eax
je     73a0 <png_colorspace_set_sRGB+0x1c0>
mov    %r14,%rdx
mov    %r13,%rsi
mov    %r15,%rdi
mov    $0x2,%ecx
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
jmpq   7244 <png_colorspace_set_sRGB+0x64>
lea    0x25a90(%rip),%rsi        # 2ce37 <short_months.6+0x362>
mov    %r15,%rdi
mov    $0x2,%edx
callq  b130 <png_chunk_report>
mov    %r14,%rdx
mov    %r13,%rsi
mov    %r15,%rdi
mov    $0x2,%ecx
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
jmpq   7244 <png_colorspace_set_sRGB+0x64>
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

00000000000073e0 <png_colorspace_set_ICC>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
xor    %eax,%eax
movzwl 0x4a(%rsi),%r10d
and    $0x8000,%r10d
test   %r10d,%r10d
jle    73fd <png_colorspace_set_ICC+0x1d>
leaveq 
retq   
mov    %rdi,%r10
mov    %rsi,%r11
mov    %rdx,%rax
mov    %r9,-0x30(%rbp)
mov    %rcx,%r9
mov    %rdi,-0x8(%rbp)
mov    %rsi,-0x10(%rbp)
mov    %rdx,-0x18(%rbp)
mov    %rcx,-0x20(%rbp)
mov    %r8,-0x28(%rbp)
mov    %r9,%rcx
mov    %rax,%rdx
mov    %r11,%rsi
mov    %r10,%rdi
callq  a060 <icc_check_length>
test   %eax,%eax
jne    743a <png_colorspace_set_ICC+0x5a>
xor    %eax,%eax
leaveq 
retq   
mov    -0x8(%rbp),%rdi
mov    -0x10(%rbp),%rsi
mov    -0x18(%rbp),%rdx
mov    -0x20(%rbp),%rcx
mov    -0x28(%rbp),%r8
mov    -0x30(%rbp),%r9
callq  7520 <png_icc_check_header>
test   %eax,%eax
jne    745f <png_colorspace_set_ICC+0x7f>
xor    %eax,%eax
leaveq 
retq   
mov    -0x8(%rbp),%rdi
mov    -0x10(%rbp),%rsi
mov    -0x28(%rbp),%r8
mov    -0x20(%rbp),%rcx
mov    -0x18(%rbp),%rdx
callq  79c0 <png_icc_check_tag_table>
test   %eax,%eax
jne    7480 <png_colorspace_set_ICC+0xa0>
xor    %eax,%eax
leaveq 
retq   
mov    -0x28(%rbp),%rdx
mov    -0x10(%rbp),%rsi
mov    -0x8(%rbp),%rdi
xor    %ecx,%ecx
callq  7b30 <png_icc_set_sRGB>
mov    $0x1,%eax
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

00000000000074a0 <png_icc_check_length>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %r15,-0x18(%rbp)
mov    %rcx,-0x20(%rbp)
mov    %rsi,-0x8(%rbp)
mov    %rdx,-0x10(%rbp)
mov    %rdi,%r15
callq  a060 <icc_check_length>
test   %eax,%eax
jne    74cc <png_icc_check_length+0x2c>
xor    %eax,%eax
mov    -0x18(%rbp),%r15
leaveq 
retq   
mov    $0x1,%eax
mov    0x428(%r15),%rdx
test   %rdx,%rdx
jne    74e3 <png_icc_check_length+0x43>
mov    -0x18(%rbp),%r15
leaveq 
retq   
mov    -0x20(%rbp),%rcx
mov    %ecx,%ecx
cmp    %rcx,%rdx
jb     74f4 <png_icc_check_length+0x54>
mov    -0x18(%rbp),%r15
leaveq 
retq   
mov    %r15,%rdi
lea    0x25958(%rip),%r8        # 2ce56 <short_months.6+0x381>
mov    -0x10(%rbp),%rdx
mov    -0x8(%rbp),%rsi
callq  9f00 <png_icc_profile_error>
mov    -0x18(%rbp),%r15
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   0x0(%rax)

0000000000007520 <png_icc_check_header>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
movzbl (%r8),%eax
shl    $0x18,%eax
movzbl 0x1(%r8),%r10d
shl    $0x10,%r10d
add    %eax,%r10d
movzbl 0x2(%r8),%eax
shl    $0x8,%eax
add    %r10d,%eax
movzbl 0x3(%r8),%r10d
add    %r10d,%eax
cmp    %ecx,%eax
jne    7736 <png_icc_check_header+0x216>
movzbl 0x8(%r8),%eax
cmp    $0x3,%al
ja     7746 <png_icc_check_header+0x226>
movzbl 0x80(%r8),%eax
shl    $0x18,%eax
movzbl 0x81(%r8),%r10d
shl    $0x10,%r10d
add    %eax,%r10d
movzbl 0x82(%r8),%eax
shl    $0x8,%eax
add    %r10d,%eax
movzbl 0x83(%r8),%r10d
add    %eax,%r10d
cmp    $0x1555554a,%r10d
ja     7764 <png_icc_check_header+0x244>
lea    (%r10,%r10,2),%eax
lea    0x84(,%rax,4),%eax
cmp    %eax,%ecx
jb     7764 <png_icc_check_header+0x244>
movzbl 0x40(%r8),%eax
shl    $0x18,%eax
movzbl 0x41(%r8),%ecx
shl    $0x10,%ecx
add    %eax,%ecx
movzbl 0x42(%r8),%eax
shl    $0x8,%eax
add    %ecx,%eax
movzbl 0x43(%r8),%ecx
add    %eax,%ecx
cmp    $0xfffe,%ecx
ja     7775 <png_icc_check_header+0x255>
xor    %eax,%eax
cmp    $0x3,%ecx
jbe    7649 <png_icc_check_header+0x129>
mov    %ecx,%ecx
mov    %rdi,%r10
mov    %rdx,%r11
mov    %r9,-0x28(%rbp)
mov    %r12,-0x8(%rbp)
mov    %r13,-0x10(%rbp)
mov    %r14,-0x18(%rbp)
mov    %r15,-0x20(%rbp)
mov    %r8,%r12
mov    %rdi,%r13
mov    %r10,%rdi
mov    %rdx,%r14
mov    %r11,%rdx
mov    %rsi,%r15
mov    %rax,%rsi
lea    0x258a7(%rip),%r8        # 2cecb <short_months.6+0x3f6>
callq  9f00 <png_icc_profile_error>
mov    %r14,%rdx
mov    %r15,%rsi
mov    %r13,%rdi
mov    %r12,%r8
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
mov    -0x28(%rbp),%r9
movzbl 0x24(%r8),%eax
shl    $0x18,%eax
movzbl 0x25(%r8),%ecx
shl    $0x10,%ecx
add    %eax,%ecx
movzbl 0x26(%r8),%eax
shl    $0x8,%eax
add    %ecx,%eax
movzbl 0x27(%r8),%ecx
add    %ecx,%eax
cmp    $0x61637370,%eax
jne    7785 <png_icc_check_header+0x265>
lea    0x44(%r8),%rax
lea    0x2532a(%rip),%rcx        # 2c9ac <D50_nCIEXYZ>
mov    $0xc,%r10d
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rbx,-0x8(%rbp)
mov    %r8,%rbx
mov    %r9,%r12
mov    %rsi,%r13
mov    %rcx,%rsi
mov    %rdx,%r14
mov    %r10,%rdx
mov    %rdi,%r15
mov    %rax,%rdi
callq  53d0 <memcmp@plt>
test   %eax,%eax
je     76d4 <png_icc_check_header+0x1b4>
lea    0x25836(%rip),%r8        # 2cefa <short_months.6+0x425>
xor    %esi,%esi
mov    %rsi,%rcx
mov    %r15,%rdi
mov    %r14,%rdx
callq  9f00 <png_icc_profile_error>
movzbl 0x10(%rbx),%ecx
shl    $0x18,%ecx
movzbl 0x11(%rbx),%eax
shl    $0x10,%eax
add    %eax,%ecx
movzbl 0x12(%rbx),%eax
shl    $0x8,%eax
add    %eax,%ecx
movzbl 0x13(%rbx),%eax
add    %ecx,%eax
cmp    $0x47524159,%eax
je     7795 <png_icc_check_header+0x275>
cmp    $0x52474220,%eax
je     77f2 <png_icc_check_header+0x2d2>
mov    %eax,%ecx
mov    %r14,%rdx
mov    %r13,%rsi
mov    %r15,%rdi
lea    0x25852(%rip),%r8        # 2cf6d <short_months.6+0x498>
callq  9f00 <png_icc_profile_error>
mov    -0x8(%rbp),%rbx
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
leaveq 
retq   
mov    %eax,%ecx
lea    0x25732(%rip),%r8        # 2ce71 <short_months.6+0x39c>
callq  9f00 <png_icc_profile_error>
leaveq 
retq   
mov    %rcx,%rax
and    $0x3,%eax
test   %eax,%eax
je     7563 <png_icc_check_header+0x43>
mov    %ecx,%ecx
lea    0x25732(%rip),%r8        # 2ce8f <short_months.6+0x3ba>
callq  9f00 <png_icc_profile_error>
leaveq 
retq   
mov    %r10d,%ecx
lea    0x25730(%rip),%r8        # 2ce9e <short_months.6+0x3c9>
callq  9f00 <png_icc_profile_error>
leaveq 
retq   
mov    %ecx,%ecx
lea    0x25734(%rip),%r8        # 2ceb2 <short_months.6+0x3dd>
callq  9f00 <png_icc_profile_error>
leaveq 
retq   
mov    %eax,%ecx
lea    0x2575a(%rip),%r8        # 2cee8 <short_months.6+0x413>
callq  9f00 <png_icc_profile_error>
leaveq 
retq   
and    $0x2,%r12d
test   %r12d,%r12d
jg     782b <png_icc_check_header+0x30b>
movzbl 0xc(%rbx),%eax
shl    $0x18,%eax
movzbl 0xd(%rbx),%ecx
shl    $0x10,%ecx
add    %eax,%ecx
movzbl 0xe(%rbx),%eax
shl    $0x8,%eax
add    %ecx,%eax
movzbl 0xf(%rbx),%ecx
add    %ecx,%eax
cmp    $0x6e6d636b,%eax
jbe    785b <png_icc_check_header+0x33b>
cmp    $0x73636e71,%eax
jbe    7876 <png_icc_check_header+0x356>
cmp    $0x73636e72,%eax
je     78ab <png_icc_check_header+0x38b>
cmp    $0x73706163,%eax
je     78ab <png_icc_check_header+0x38b>
jmpq   7895 <png_icc_check_header+0x375>
and    $0x2,%r12d
test   %r12d,%r12d
jne    77a2 <png_icc_check_header+0x282>
mov    %r14,%rdx
mov    %r13,%rsi
mov    %r15,%rdi
mov    $0x52474220,%ecx
lea    0x25704(%rip),%r8        # 2cf14 <short_months.6+0x43f>
callq  9f00 <png_icc_profile_error>
mov    -0x8(%rbp),%rbx
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
leaveq 
retq   
mov    %r14,%rdx
mov    %r13,%rsi
mov    %r15,%rdi
mov    $0x47524159,%ecx
lea    0x25703(%rip),%r8        # 2cf43 <short_months.6+0x46e>
callq  9f00 <png_icc_profile_error>
mov    -0x8(%rbp),%rbx
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
leaveq 
retq   
cmp    $0x6c696e6a,%eax
jbe    788a <png_icc_check_header+0x36a>
cmp    $0x6c696e6b,%eax
je     78f1 <png_icc_check_header+0x3d1>
cmp    $0x6d6e7472,%eax
je     78ab <png_icc_check_header+0x38b>
jmp    7895 <png_icc_check_header+0x375>
cmp    $0x6e6d636c,%eax
je     7921 <png_icc_check_header+0x401>
cmp    $0x70727472,%eax
je     78ab <png_icc_check_header+0x38b>
jmp    7895 <png_icc_check_header+0x375>
cmp    $0x61627374,%eax
je     793f <png_icc_check_header+0x41f>
mov    %eax,%ecx
lea    0x25765(%rip),%r8        # 2d003 <short_months.6+0x52e>
mov    %r15,%rdi
mov    %r14,%rdx
xor    %esi,%esi
callq  9f00 <png_icc_profile_error>
mov    $0x1,%eax
movzbl 0x14(%rbx),%edx
shl    $0x18,%edx
movzbl 0x15(%rbx),%ecx
shl    $0x10,%ecx
add    %ecx,%edx
movzbl 0x16(%rbx),%ecx
shl    $0x8,%ecx
add    %edx,%ecx
movzbl 0x17(%rbx),%edx
add    %edx,%ecx
cmp    $0x4c616220,%ecx
jne    796f <png_icc_check_header+0x44f>
mov    -0x8(%rbp),%rbx
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
leaveq 
retq   
mov    %r14,%rdx
mov    %r13,%rsi
mov    %r15,%rdi
mov    $0x6c696e6b,%ecx
lea    0x256ad(%rip),%r8        # 2cfb3 <short_months.6+0x4de>
callq  9f00 <png_icc_profile_error>
mov    -0x8(%rbp),%rbx
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
leaveq 
retq   
mov    $0x6e6d636c,%ecx
lea    0x256ae(%rip),%r8        # 2cfdb <short_months.6+0x506>
mov    %r15,%rdi
mov    %r14,%rdx
xor    %esi,%esi
callq  9f00 <png_icc_profile_error>
jmpq   78ab <png_icc_check_header+0x38b>
mov    %r14,%rdx
mov    %r13,%rsi
mov    %r15,%rdi
mov    $0x61627374,%ecx
lea    0x25639(%rip),%r8        # 2cf8d <short_months.6+0x4b8>
callq  9f00 <png_icc_profile_error>
mov    -0x8(%rbp),%rbx
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
leaveq 
retq   
cmp    $0x58595a20,%ecx
jne    798d <png_icc_check_header+0x46d>
mov    -0x8(%rbp),%rbx
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
leaveq 
retq   
mov    %ecx,%ecx
mov    %r14,%rdx
mov    %r13,%rsi
mov    %r15,%rdi
lea    0x25683(%rip),%r8        # 2d022 <short_months.6+0x54d>
callq  9f00 <png_icc_profile_error>
mov    -0x8(%rbp),%rbx
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

00000000000079c0 <png_icc_check_tag_table>:
push   %rbp
mov    %rsp,%rbp
sub    $0x40,%rsp
mov    %rdx,-0x38(%rbp)
mov    %rsi,-0x8(%rbp)
mov    %rbx,-0x10(%rbp)
mov    %r12,-0x18(%rbp)
mov    %r13,-0x20(%rbp)
mov    %r14,-0x28(%rbp)
mov    %r15,-0x30(%rbp)
movzbl 0x80(%r8),%esi
shl    $0x18,%esi
movzbl 0x81(%r8),%eax
shl    $0x10,%eax
add    %eax,%esi
movzbl 0x82(%r8),%eax
shl    $0x8,%eax
add    %esi,%eax
movzbl 0x83(%r8),%esi
lea    (%rsi,%rax,1),%r13d
lea    0x84(%r8),%r12
mov    %rdi,%rbx
mov    %rcx,%r14
xor    %esi,%esi
mov    %rsi,%r15
jmpq   7adc <png_icc_check_tag_table+0x11c>
movzbl 0x8(%r12),%edi
movzbl 0x9(%r12),%r8d
movzbl 0xa(%r12),%r9d
movzbl 0xb(%r12),%r11d
movzbl (%r12),%eax
shl    $0x18,%eax
movzbl 0x1(%r12),%ecx
shl    $0x10,%ecx
add    %eax,%ecx
movzbl 0x2(%r12),%eax
shl    $0x8,%eax
add    %ecx,%eax
movzbl 0x3(%r12),%ecx
lea    (%rcx,%rax,1),%r10d
movzbl 0x4(%r12),%eax
shl    $0x18,%eax
movzbl 0x5(%r12),%ecx
shl    $0x10,%ecx
add    %eax,%ecx
movzbl 0x6(%r12),%eax
shl    $0x8,%eax
add    %eax,%ecx
movzbl 0x7(%r12),%eax
add    %ecx,%eax
cmp    %r14d,%eax
ja     7b00 <png_icc_check_tag_table+0x140>
mov    %r14,%rcx
sub    %eax,%ecx
shl    $0x18,%edi
shl    $0x10,%r8d
add    %r8d,%edi
shl    $0x8,%r9d
add    %r9d,%edi
add    %r11d,%edi
cmp    %edi,%ecx
jb     7b00 <png_icc_check_tag_table+0x140>
and    $0x3,%eax
test   %eax,%eax
je     7ad4 <png_icc_check_tag_table+0x114>
mov    %r10d,%ecx
mov    %rbx,%rdi
lea    0x25595(%rip),%r8        # 2d05e <short_months.6+0x589>
callq  9f00 <png_icc_profile_error>
xor    %esi,%esi
mov    -0x38(%rbp),%rdx
add    $0xc,%r12
add    $0x1,%r15d
cmp    %r13d,%r15d
jb     7a2c <png_icc_check_tag_table+0x6c>
mov    $0x1,%eax
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
mov    -0x10(%rbp),%rbx
leaveq 
retq   
mov    %r10d,%ecx
mov    %rbx,%rdi
lea    0x25531(%rip),%r8        # 2d03e <short_months.6+0x569>
mov    -0x8(%rbp),%rsi
callq  9f00 <png_icc_profile_error>
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
mov    -0x10(%rbp),%rbx
leaveq 
retq   
nopl   0x0(%rax)

0000000000007b30 <png_icc_set_sRGB>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %rdx,-0x18(%rbp)
mov    %rdi,-0x8(%rbp)
mov    %rsi,-0x10(%rbp)
mov    %rdx,%rsi
mov    %rcx,%rdx
callq  a090 <png_compare_ICC_profile_with_sRGB>
test   %eax,%eax
jne    7b55 <png_icc_set_sRGB+0x25>
leaveq 
retq   
mov    -0x18(%rbp),%rdx
movzbl 0x40(%rdx),%eax
shl    $0x18,%eax
movzbl 0x41(%rdx),%ecx
shl    $0x10,%ecx
add    %eax,%ecx
movzbl 0x42(%rdx),%eax
shl    $0x8,%eax
add    %ecx,%eax
movzbl 0x43(%rdx),%ecx
lea    (%rcx,%rax,1),%edx
mov    -0x10(%rbp),%rsi
mov    -0x8(%rbp),%rdi
callq  71e0 <png_colorspace_set_sRGB>
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

0000000000007b90 <png_colorspace_set_rgb_coefficients>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
movzbl 0x3d1(%rdi),%eax
test   %al,%al
je     7ba5 <png_colorspace_set_rgb_coefficients+0x15>
leaveq 
retq   
movzwl 0x4e2(%rdi),%eax
and    $0x2,%eax
test   %eax,%eax
jg     7bb5 <png_colorspace_set_rgb_coefficients+0x25>
leaveq 
retq   
movslq 0x4c0(%rdi),%rsi
mov    %esi,-0x24(%rbp)
movslq 0x4cc(%rdi),%rax
mov    %eax,-0x20(%rbp)
movslq 0x4d8(%rdi),%rcx
mov    %ecx,-0x1c(%rbp)
add    %esi,%eax
add    %ecx,%eax
test   %eax,%eax
jg     7be7 <png_colorspace_set_rgb_coefficients+0x57>
lea    0x254d0(%rip),%rsi        # 2d0b2 <short_months.6+0x5dd>
callq  5470 <png_error@plt>
test   %esi,%esi
js     7bdb <png_colorspace_set_rgb_coefficients+0x4b>
lea    -0x24(%rbp),%r9
mov    $0x8000,%r8d
mov    %r8,%rdx
mov    %rax,%rcx
mov    %r13,-0x8(%rbp)
mov    %r14,-0x10(%rbp)
mov    %r15,-0x18(%rbp)
mov    %rax,%r13
mov    %r8,%r14
mov    %rdi,%r15
mov    %r9,%rdi
callq  8970 <png_muldiv>
test   %eax,%eax
jne    7c21 <png_colorspace_set_rgb_coefficients+0x91>
mov    %r15,%rdi
jmp    7bdb <png_colorspace_set_rgb_coefficients+0x4b>
movslq -0x24(%rbp),%rax
test   %eax,%eax
jns    7c2e <png_colorspace_set_rgb_coefficients+0x9e>
mov    %r15,%rdi
jmp    7bdb <png_colorspace_set_rgb_coefficients+0x4b>
cmp    $0x8000,%eax
jle    7c3a <png_colorspace_set_rgb_coefficients+0xaa>
mov    %r15,%rdi
jmp    7bdb <png_colorspace_set_rgb_coefficients+0x4b>
movslq -0x20(%rbp),%rsi
test   %esi,%esi
jns    7c47 <png_colorspace_set_rgb_coefficients+0xb7>
mov    %r15,%rdi
jmp    7bdb <png_colorspace_set_rgb_coefficients+0x4b>
lea    -0x20(%rbp),%rdi
mov    %r14,%rdx
mov    %r13,%rcx
callq  8970 <png_muldiv>
test   %eax,%eax
jne    7c62 <png_colorspace_set_rgb_coefficients+0xd2>
mov    %r15,%rdi
jmpq   7bdb <png_colorspace_set_rgb_coefficients+0x4b>
movslq -0x20(%rbp),%rax
test   %eax,%eax
jns    7c72 <png_colorspace_set_rgb_coefficients+0xe2>
mov    %r15,%rdi
jmpq   7bdb <png_colorspace_set_rgb_coefficients+0x4b>
cmp    $0x8000,%eax
jle    7c81 <png_colorspace_set_rgb_coefficients+0xf1>
mov    %r15,%rdi
jmpq   7bdb <png_colorspace_set_rgb_coefficients+0x4b>
movslq -0x1c(%rbp),%rsi
test   %esi,%esi
jns    7c91 <png_colorspace_set_rgb_coefficients+0x101>
mov    %r15,%rdi
jmpq   7bdb <png_colorspace_set_rgb_coefficients+0x4b>
mov    %r13,%rcx
mov    %r14,%rdx
lea    -0x1c(%rbp),%rdi
callq  8970 <png_muldiv>
test   %eax,%eax
jne    7cac <png_colorspace_set_rgb_coefficients+0x11c>
mov    %r15,%rdi
jmpq   7bdb <png_colorspace_set_rgb_coefficients+0x4b>
movslq -0x1c(%rbp),%rdx
test   %edx,%edx
jns    7cbc <png_colorspace_set_rgb_coefficients+0x12c>
mov    %r15,%rdi
jmpq   7bdb <png_colorspace_set_rgb_coefficients+0x4b>
cmp    $0x8000,%edx
jle    7ccc <png_colorspace_set_rgb_coefficients+0x13c>
mov    %r15,%rdi
jmpq   7bdb <png_colorspace_set_rgb_coefficients+0x4b>
movslq -0x20(%rbp),%rsi
movslq -0x24(%rbp),%rcx
lea    (%rsi,%rcx,1),%eax
add    %edx,%eax
cmp    $0x8001,%eax
jle    7ce8 <png_colorspace_set_rgb_coefficients+0x158>
mov    %r15,%rdi
jmpq   7bdb <png_colorspace_set_rgb_coefficients+0x4b>
cmp    $0x8000,%eax
jle    7d2d <png_colorspace_set_rgb_coefficients+0x19d>
mov    $0xffffffffffffffff,%rax
test   %eax,%eax
jne    7d38 <png_colorspace_set_rgb_coefficients+0x1a8>
movslq -0x24(%rbp),%rdx
movslq -0x20(%rbp),%rcx
lea    (%rcx,%rdx,1),%eax
add    -0x1c(%rbp),%eax
cmp    $0x8000,%eax
jne    7d50 <png_colorspace_set_rgb_coefficients+0x1c0>
mov    %dx,0x3d2(%r15)
mov    %cx,0x3d4(%r15)
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
leaveq 
retq   
cmp    $0x7fff,%eax
jle    7d5f <png_colorspace_set_rgb_coefficients+0x1cf>
xor    %eax,%eax
jmp    7cf6 <png_colorspace_set_rgb_coefficients+0x166>
cmp    %ecx,%esi
jge    7d66 <png_colorspace_set_rgb_coefficients+0x1d6>
movslq -0x24(%rbp),%rdx
movslq -0x20(%rbp),%rcx
cmp    %edx,%ecx
jle    7d71 <png_colorspace_set_rgb_coefficients+0x1e1>
add    -0x1c(%rbp),%eax
mov    %eax,-0x1c(%rbp)
jmp    7cfa <png_colorspace_set_rgb_coefficients+0x16a>
mov    %r15,%rdi
lea    0x2532e(%rip),%rsi        # 2d088 <short_months.6+0x5b3>
callq  5470 <png_error@plt>
mov    $0x1,%eax
jmp    7cf6 <png_colorspace_set_rgb_coefficients+0x166>
cmp    %esi,%edx
jg     7d3c <png_colorspace_set_rgb_coefficients+0x1ac>
add    %esi,%eax
mov    %eax,-0x20(%rbp)
jmp    7cfa <png_colorspace_set_rgb_coefficients+0x16a>
cmp    -0x1c(%rbp),%edx
jl     7d48 <png_colorspace_set_rgb_coefficients+0x1b8>
add    %edx,%eax
mov    %eax,-0x24(%rbp)
jmpq   7cfa <png_colorspace_set_rgb_coefficients+0x16a>

0000000000007d80 <png_check_IHDR>:
push   %rbp
mov    %rsp,%rbp
sub    $0x40,%rsp
mov    %r9,-0x30(%rbp)
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %r8,-0x38(%rbp)
test   %esi,%esi
je     7db9 <png_check_IHDR+0x39>
mov    %rdi,%rbx
mov    %rcx,%r13
mov    %rdx,%r14
mov    %rsi,%r15
xor    %r12d,%r12d
jmp    7dd7 <png_check_IHDR+0x57>
mov    %rcx,%r13
mov    %rdx,%r14
mov    %rsi,%r15
lea    0x2530b(%rip),%rsi        # 2d0d4 <short_months.6+0x5ff>
mov    %rdi,%rbx
callq  5390 <png_warning@plt>
mov    $0x1,%r12d
cmp    $0x7fffffff,%r15d
jbe    7df5 <png_check_IHDR+0x75>
lea    0x25309(%rip),%rsi        # 2d0f0 <short_months.6+0x61b>
mov    %rbx,%rdi
callq  5390 <png_warning@plt>
mov    $0x1,%r12d
lea    0x7(%r15),%eax
and    $0xfffffff8,%eax
mov    %eax,%edi
movabs $0x1ffffffffffffff8,%rsi
callq  a340 <png_gt>
test   %eax,%eax
je     7e26 <png_check_IHDR+0xa6>
lea    0x252f4(%rip),%rsi        # 2d10c <short_months.6+0x637>
mov    %rbx,%rdi
callq  5390 <png_warning@plt>
mov    $0x1,%r12d
cmp    0x41c(%rbx),%r15d
jbe    7e44 <png_check_IHDR+0xc4>
lea    0x25305(%rip),%rsi        # 2d13b <short_months.6+0x666>
mov    %rbx,%rdi
callq  5390 <png_warning@plt>
mov    $0x1,%r12d
test   %r14d,%r14d
jne    7e5e <png_check_IHDR+0xde>
lea    0x25312(%rip),%rsi        # 2d162 <short_months.6+0x68d>
mov    %rbx,%rdi
callq  5390 <png_warning@plt>
mov    $0x1,%r12d
cmp    $0x7fffffff,%r14d
jbe    7e7c <png_check_IHDR+0xfc>
lea    0x25311(%rip),%rsi        # 2d17f <short_months.6+0x6aa>
mov    %rbx,%rdi
callq  5390 <png_warning@plt>
mov    $0x1,%r12d
cmp    0x420(%rbx),%r14d
jbe    7e9a <png_check_IHDR+0x11a>
lea    0x25310(%rip),%rsi        # 2d19c <short_months.6+0x6c7>
mov    %rbx,%rdi
callq  5390 <png_warning@plt>
mov    $0x1,%r12d
cmp    $0x1,%r13d
jne    7f81 <png_check_IHDR+0x201>
mov    -0x38(%rbp),%r14
test   %r14d,%r14d
js     7ebf <png_check_IHDR+0x13f>
cmp    $0x1,%r14d
je     7ebf <png_check_IHDR+0x13f>
cmp    $0x5,%r14d
je     7ebf <png_check_IHDR+0x13f>
cmp    $0x6,%r14d
jle    7ed4 <png_check_IHDR+0x154>
lea    0x25318(%rip),%rsi        # 2d1de <short_months.6+0x709>
mov    %rbx,%rdi
callq  5390 <png_warning@plt>
mov    $0x1,%r12d
cmp    $0x3,%r14d
je     7fc3 <png_check_IHDR+0x243>
cmp    $0x2,%r14d
je     7ef0 <png_check_IHDR+0x170>
cmp    $0x4,%r14d
je     7ef0 <png_check_IHDR+0x170>
cmp    $0x6,%r14d
jne    7f0b <png_check_IHDR+0x18b>
cmp    $0x7,%r13d
jg     7f0b <png_check_IHDR+0x18b>
lea    0x252fc(%rip),%rsi        # 2d1f9 <short_months.6+0x724>
mov    %rbx,%rdi
callq  5390 <png_warning@plt>
mov    $0x1,%r12d
mov    -0x30(%rbp),%rax
cmp    $0x1,%eax
jle    7f29 <png_check_IHDR+0x1a9>
lea    0x2530f(%rip),%rsi        # 2d22a <short_months.6+0x755>
mov    %rbx,%rdi
callq  5390 <png_warning@plt>
mov    $0x1,%r12d
movslq 0x10(%rbp),%rax
test   %eax,%eax
je     7f46 <png_check_IHDR+0x1c6>
lea    0x25313(%rip),%rsi        # 2d24b <short_months.6+0x776>
mov    %rbx,%rdi
callq  5390 <png_warning@plt>
mov    $0x1,%r12d
mov    0x12c(%rbx),%eax
and    $0x1000,%eax
test   %eax,%eax
jne    7fd2 <png_check_IHDR+0x252>
movslq 0x18(%rbp),%rcx
test   %ecx,%ecx
jne    7ff4 <png_check_IHDR+0x274>
cmp    $0x1,%r12d
je     8043 <png_check_IHDR+0x2c3>
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
cmp    $0x2,%r13d
je     7ea4 <png_check_IHDR+0x124>
cmp    $0x4,%r13d
je     7ea4 <png_check_IHDR+0x124>
cmp    $0x8,%r13d
je     7ea4 <png_check_IHDR+0x124>
cmp    $0x10,%r13d
je     7ea4 <png_check_IHDR+0x124>
lea    0x25214(%rip),%rsi        # 2d1c4 <short_months.6+0x6ef>
mov    %rbx,%rdi
callq  5390 <png_warning@plt>
mov    $0x1,%r12d
jmpq   7ea4 <png_check_IHDR+0x124>
cmp    $0x8,%r13d
jg     7ef6 <png_check_IHDR+0x176>
jmpq   7ede <png_check_IHDR+0x15e>
mov    0x3d8(%rbx),%eax
test   %eax,%eax
je     7f55 <png_check_IHDR+0x1d5>
lea    0x25287(%rip),%rsi        # 2d26e <short_months.6+0x799>
mov    %rbx,%rdi
callq  5390 <png_warning@plt>
jmpq   7f55 <png_check_IHDR+0x1d5>
mov    0x3d8(%rbx),%eax
and    $0x4,%eax
test   %eax,%eax
jne    8052 <png_check_IHDR+0x2d2>
lea    0x25297(%rip),%rsi        # 2d29f <short_months.6+0x7ca>
mov    %rbx,%rdi
callq  5390 <png_warning@plt>
mov    $0x1,%r12d
mov    0x12c(%rbx),%eax
and    $0x1000,%eax
test   %eax,%eax
je     7f61 <png_check_IHDR+0x1e1>
lea    0x2528d(%rip),%rsi        # 2d2bd <short_months.6+0x7e8>
mov    %rbx,%rdi
callq  5390 <png_warning@plt>
mov    $0x1,%r12d
jmpq   7f61 <png_check_IHDR+0x1e1>
mov    %rbx,%rdi
lea    0x2528e(%rip),%rsi        # 2d2db <short_months.6+0x806>
callq  5470 <png_error@plt>
cmp    $0x40,%ecx
jne    8001 <png_check_IHDR+0x281>
mov    0x12c(%rbx),%eax
and    $0x1000,%eax
test   %eax,%eax
jne    8001 <png_check_IHDR+0x281>
cmp    $0x2,%r14d
je     8016 <png_check_IHDR+0x296>
cmp    $0x6,%r14d
je     8016 <png_check_IHDR+0x296>
jmp    8001 <png_check_IHDR+0x281>
data16 nopw %cs:0x0(%rax,%rax,1)
nop

0000000000008080 <png_ascii_from_fp>:
push   %rbp
mov    %rsp,%rbp
sub    $0x80,%rsp
test   %ecx,%ecx
jne    8094 <png_ascii_from_fp+0x14>
mov    $0xf,%ecx
cmp    $0x10,%ecx
jbe    809e <png_ascii_from_fp+0x1e>
mov    $0x10,%ecx
lea    0x5(%rcx),%eax
mov    %eax,%eax
cmp    %rdx,%rax
jbe    80b4 <png_ascii_from_fp+0x34>
lea    0x2523e(%rip),%rsi        # 2d2ed <short_months.6+0x818>
callq  5470 <png_error@plt>
xorpd  %xmm1,%xmm1
ucomisd %xmm1,%xmm0
jp     80d7 <png_ascii_from_fp+0x57>
jae    80d7 <png_ascii_from_fp+0x57>
movsd  0x253c0(%rip),%xmm1        # 2d488 <short_months.6+0x9b3>
xorpd  %xmm1,%xmm0
movb   $0x2d,(%rsi)
add    $0x1,%rsi
add    $0xffffffffffffffff,%rdx
xor    %eax,%eax
movsd  0x253af(%rip),%xmm1        # 2d490 <short_months.6+0x9bb>
ucomisd %xmm1,%xmm0
jae    80f5 <png_ascii_from_fp+0x75>
test   %rax,%rax
jne    810c <png_ascii_from_fp+0x8c>
movb   $0x30,(%rsi)
movb   $0x0,0x1(%rsi)
leaveq 
retq   
movsd  0x25383(%rip),%xmm1        # 2d480 <short_months.6+0x9ab>
ucomisd %xmm1,%xmm0
jp     8105 <png_ascii_from_fp+0x85>
jbe    811d <png_ascii_from_fp+0x9d>
mov    $0x1,%eax
jmp    80e7 <png_ascii_from_fp+0x67>
movb   $0x69,(%rsi)
movb   $0x6e,0x1(%rsi)
movb   $0x66,0x2(%rsi)
movb   $0x0,0x3(%rsi)
leaveq 
retq   
lea    -0x78(%rbp),%r8
movapd %xmm0,%xmm1
mov    %r12,-0x18(%rbp)
mov    %r13,-0x20(%rbp)
mov    %r14,-0x28(%rbp)
mov    %r15,-0x30(%rbp)
mov    %rdi,-0x8(%rbp)
mov    %r8,%rdi
mov    %rsi,%r12
mov    %rax,%r13
mov    %rcx,%r14
mov    %rbx,%r15
mov    %rdx,%rbx
movdqu %xmm0,-0x60(%rbp)
movapd %xmm1,%xmm0
callq  5410 <frexp@plt>
movslq -0x78(%rbp),%rdx
mov    %rdx,%rcx
shl    $0x2,%ecx
lea    (%rdx,%rdx,8),%eax
lea    (%rcx,%rax,8),%eax
lea    (%rdx,%rax,1),%edi
sar    $0x8,%edi
mov    %edi,-0x78(%rbp)
callq  a360 <png_pow10>
movapd %xmm0,%xmm2
movsd  0x2530d(%rip),%xmm1        # 2d490 <short_months.6+0x9bb>
movdqu -0x60(%rbp),%xmm0
jmp    81a5 <png_ascii_from_fp+0x125>
movapd %xmm0,%xmm2
movslq -0x78(%rbp),%rax
add    $0x1,%eax
mov    %eax,-0x78(%rbp)
movsd  0x252f0(%rip),%xmm1        # 2d490 <short_months.6+0x9bb>
movdqu -0x60(%rbp),%xmm0
ucomisd %xmm1,%xmm2
jp     81ad <png_ascii_from_fp+0x12d>
jb     81b3 <png_ascii_from_fp+0x133>
ucomisd %xmm2,%xmm0
jbe    81de <png_ascii_from_fp+0x15e>
movslq -0x78(%rbp),%rdi
add    $0x1,%edi
movdqu %xmm2,-0x50(%rbp)
callq  a360 <png_pow10>
movsd  0x252b4(%rip),%xmm1        # 2d480 <short_months.6+0x9ab>
ucomisd %xmm1,%xmm0
jp     81d4 <png_ascii_from_fp+0x154>
jbe    818a <png_ascii_from_fp+0x10a>
movdqu -0x50(%rbp),%xmm2
movdqu -0x60(%rbp),%xmm0
movsd  0x2528a(%rip),%xmm1        # 2d470 <short_months.6+0x99b>
movsd  0x2528a(%rip),%xmm3        # 2d478 <short_months.6+0x9a3>
divsd  %xmm2,%xmm0
jmp    8202 <png_ascii_from_fp+0x182>
divsd  %xmm1,%xmm0
movslq -0x78(%rbp),%rax
add    $0x1,%eax
mov    %eax,-0x78(%rbp)
ucomisd %xmm3,%xmm0
jae    81f4 <png_ascii_from_fp+0x174>
movsd  0x25248(%rip),%xmm2        # 2d458 <short_months.6+0x983>
lea    -0x68(%rbp),%rdi
movslq -0x78(%rbp),%rcx
test   %ecx,%ecx
js     822b <png_ascii_from_fp+0x1ab>
mov    %r15,-0x10(%rbp)
mov    %r13,%rcx
mov    %rcx,%r15
jmpq   82e3 <png_ascii_from_fp+0x263>
cmp    $0xfffffffe,%ecx
jge    833c <png_ascii_from_fp+0x2bc>
mov    %r15,-0x10(%rbp)
mov    %r13,%rcx
mov    %rcx,%r15
jmpq   82e3 <png_ascii_from_fp+0x263>
cmp    $0xffffffff,%edx
je     8263 <png_ascii_from_fp+0x1e3>
test   %edx,%edx
jne    8259 <png_ascii_from_fp+0x1d9>
movb   $0x2e,(%r12)
add    $0x1,%r12
add    $0xffffffffffffffff,%rbx
movslq -0x78(%rbp),%rdx
add    $0xffffffff,%edx
mov    %edx,-0x78(%rbp)
movb   $0x30,(%r12)
add    $0x1,%r12
add    $0xffffffff,%eax
movslq -0x78(%rbp),%rdx
test   %eax,%eax
jne    8243 <png_ascii_from_fp+0x1c3>
cmp    $0xffffffff,%edx
je     8297 <png_ascii_from_fp+0x217>
test   %edx,%edx
jne    828d <png_ascii_from_fp+0x20d>
movb   $0x2e,(%r12)
add    $0x1,%r12
add    $0xffffffffffffffff,%rbx
movslq -0x78(%rbp),%rax
add    $0xffffffff,%eax
mov    %eax,-0x78(%rbp)
movsd  -0x68(%rbp),%xmm2
cvttsd2si %xmm2,%eax
add    $0x30,%eax
mov    %al,(%r12)
add    $0x1,%r12
sub    %ecx,%r15d
lea    0x1(%r15,%r13,1),%r13d
xor    %r15d,%r15d
mov    %r15,%rcx
lea    (%r14,%rcx,1),%edx
lea    (%r15,%r13,1),%eax
cmp    %eax,%edx
jbe    834e <png_ascii_from_fp+0x2ce>
movsd  0x251bf(%rip),%xmm2        # 2d490 <short_months.6+0x9bb>
ucomisd %xmm2,%xmm0
jbe    834e <png_ascii_from_fp+0x2ce>
lea    -0x68(%rbp),%rdi
movsd  0x25175(%rip),%xmm2        # 2d458 <short_months.6+0x983>
mulsd  %xmm1,%xmm0
lea    (%r14,%rcx,1),%edx
lea    0x1(%r15,%r13,1),%eax
cmp    %eax,%edx
ja     838d <png_ascii_from_fp+0x30d>
addsd  %xmm2,%xmm0
mov    %r14,-0x50(%rbp)
mov    %r15,%r14
mov    %rcx,%r15
movdqu %xmm1,-0x60(%rbp)
callq  57e0 <floor@plt>
movsd  %xmm0,-0x68(%rbp)
movsd  0x2517b(%rip),%xmm2        # 2d498 <short_months.6+0x9c3>
ucomisd %xmm2,%xmm0
ja     83c7 <png_ascii_from_fp+0x347>
mov    %r15,%rcx
mov    %r14,%r15
mov    -0x50(%rbp),%r14
movdqu -0x60(%rbp),%xmm1
xorpd  %xmm0,%xmm0
jmp    83aa <png_ascii_from_fp+0x32a>
neg    %ecx
movl   $0x0,-0x78(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rcx,%r15
jmp    82e3 <png_ascii_from_fp+0x263>
movslq -0x78(%rbp),%rax
cmp    $0xffffffff,%eax
jl     8360 <png_ascii_from_fp+0x2e0>
cmp    $0x2,%eax
jle    83e7 <png_ascii_from_fp+0x367>
movb   $0x45,(%r12)
mov    %r13d,%eax
sub    %rax,%rbx
lea    0x1(%r12),%rcx
mov    $0xcccccccd,%r8d
movslq -0x78(%rbp),%rdi
test   %edi,%edi
js     8410 <png_ascii_from_fp+0x390>
add    $0xffffffffffffffff,%rbx
xor    %esi,%esi
jmpq   8444 <png_ascii_from_fp+0x3c4>
mov    %r14,-0x60(%rbp)
mov    %rcx,%r14
movdqu %xmm1,-0x40(%rbp)
callq  52d0 <modf@plt>
mov    %r14,%rcx
mov    -0x60(%rbp),%r14
movdqu -0x40(%rbp),%xmm1
movsd  -0x68(%rbp),%xmm3
xorpd  %xmm2,%xmm2
ucomisd %xmm2,%xmm3
jp     83bf <png_ascii_from_fp+0x33f>
je     845c <png_ascii_from_fp+0x3dc>
mov    %r15,%rax
jmpq   826f <png_ascii_from_fp+0x1ef>
test   %r14d,%r14d
jne    8474 <png_ascii_from_fp+0x3f4>
mov    -0x50(%rbp),%r14
movdqu -0x60(%rbp),%xmm1
jmpq   84bf <png_ascii_from_fp+0x43f>
movb   $0x30,(%r12)
add    $0x1,%r12
movslq -0x78(%rbp),%rcx
lea    -0x1(%rcx),%eax
mov    %eax,-0x78(%rbp)
test   %ecx,%ecx
jg     83de <png_ascii_from_fp+0x35e>
movb   $0x0,(%r12)
mov    -0x10(%rbp),%rbx
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
leaveq 
retq   
movb   $0x2d,(%rcx)
mov    -0x78(%rbp),%edi
neg    %edi
lea    0x2(%r12),%rcx
add    $0xfffffffffffffffe,%rbx
xor    %esi,%esi
jmp    8444 <png_ascii_from_fp+0x3c4>
mov    %r8,%rax
mul    %edi
shr    $0x3,%edx
lea    (%rdx,%rdx,4),%eax
add    %eax,%eax
sub    %eax,%edi
add    $0x30,%edi
mov    %esi,%eax
mov    %dil,-0x72(%rbp,%rax,1)
add    $0x1,%esi
mov    %rdx,%rdi
test   %edi,%edi
jne    8425 <png_ascii_from_fp+0x3a5>
mov    %esi,%eax
cmp    %rax,%rbx
ja     84fb <png_ascii_from_fp+0x47b>
mov    -0x8(%rbp),%rdi
jmpq   80a8 <png_ascii_from_fp+0x28>
add    $0x1,%r15d
test   %r13d,%r13d
jne    82b9 <png_ascii_from_fp+0x239>
add    $0x1,%ecx
xor    %r13d,%r13d
jmpq   82b9 <png_ascii_from_fp+0x239>
movsd  0x24ffc(%rip),%xmm0        # 2d478 <short_months.6+0x9a3>
movsd  %xmm0,-0x68(%rbp)
lea    -0x1(%r14),%eax
test   %r13d,%r13d
je     8518 <png_ascii_from_fp+0x498>
mov    %r15,%rcx
mov    %rax,%r15
mov    -0x50(%rbp),%r14
movdqu -0x60(%rbp),%xmm1
xorpd  %xmm0,%xmm0
jmpq   83aa <png_ascii_from_fp+0x32a>
add    $0x1,%edx
mov    %edx,-0x78(%rbp)
mov    %rcx,%r12
add    $0xffffffd1,%eax
cvtsi2sd %eax,%xmm0
movsd  %xmm0,-0x68(%rbp)
add    $0xffffffff,%r13d
test   %r13d,%r13d
je     8534 <png_ascii_from_fp+0x4b4>
movsd  -0x68(%rbp),%xmm0
ucomisd %xmm2,%xmm0
jbe    8534 <png_ascii_from_fp+0x4b4>
lea    -0x1(%r12),%rcx
movsbq (%rcx),%rax
movslq -0x78(%rbp),%rdx
cmp    $0xffffffff,%edx
jne    84a6 <png_ascii_from_fp+0x426>
cmp    $0x2e,%al
je     854e <png_ascii_from_fp+0x4ce>
mov    %rcx,%r12
jmp    84af <png_ascii_from_fp+0x42f>
add    $0xffffffff,%esi
mov    %esi,%eax
movsbq -0x72(%rbp,%rax,1),%rax
mov    %al,(%rcx)
add    $0x1,%rcx
test   %esi,%esi
jne    84ea <png_ascii_from_fp+0x46a>
movb   $0x0,(%rcx)
mov    -0x10(%rbp),%rbx
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
leaveq 
retq   
lea    -0x1(%r15),%ecx
mov    %rax,%r15
xor    %r13d,%r13d
mov    -0x50(%rbp),%r14
movdqu -0x60(%rbp),%xmm1
xorpd  %xmm0,%xmm0
jmpq   83aa <png_ascii_from_fp+0x32a>
movsd  -0x68(%rbp),%xmm0
ucomisd %xmm2,%xmm0
ja     8567 <png_ascii_from_fp+0x4e7>
mov    %r15,%rcx
xor    %r15d,%r15d
xorpd  %xmm0,%xmm0
jmpq   83aa <png_ascii_from_fp+0x32a>
add    $0xfffffffffffffffe,%r12
movsbq (%r12),%rax
movl   $0x1,-0x78(%rbp)
add    $0x1,%rbx
jmpq   84af <png_ascii_from_fp+0x42f>
movslq -0x78(%rbp),%rax
cmp    $0xffffffff,%eax
je     8592 <png_ascii_from_fp+0x512>
add    $0x1,%eax
mov    %eax,-0x78(%rbp)
mov    %r15,%rcx
movsd  0x24ef7(%rip),%xmm0        # 2d478 <short_months.6+0x9a3>
movsd  %xmm0,-0x68(%rbp)
xor    %r15d,%r15d
xorpd  %xmm0,%xmm0
jmpq   83aa <png_ascii_from_fp+0x32a>
add    $0xffffffffffffffff,%r12
movsbq (%r12),%rax
cmp    $0x2e,%al
jne    8576 <png_ascii_from_fp+0x4f6>
movl   $0x1,-0x78(%rbp)
add    $0x1,%rbx
jmp    8576 <png_ascii_from_fp+0x4f6>
nopl   0x0(%rax)

00000000000085b0 <png_ascii_from_fixed>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
cmp    $0xc,%rdx
ja     85ca <png_ascii_from_fixed+0x1a>
lea    0x24d28(%rip),%rsi        # 2d2ed <short_months.6+0x818>
callq  5470 <png_error@plt>
test   %ecx,%ecx
jns    85d7 <png_ascii_from_fixed+0x27>
neg    %ecx
movb   $0x2d,(%rsi)
add    $0x1,%rsi
cmp    $0x80000000,%ecx
ja     85be <png_ascii_from_fixed+0xe>
mov    $0xcccccccd,%r9d
xor    %edi,%edi
mov    $0x10,%r8d
mov    %rsi,-0x8(%rbp)
mov    %r8,%rsi
jmp    8621 <png_ascii_from_fixed+0x71>
mov    %r9,%rax
mul    %ecx
shr    $0x3,%edx
lea    (%rdx,%rdx,4),%eax
lea    (%rax,%rax,1),%r11d
mov    %rcx,%rax
sub    %r11d,%eax
lea    0x30(%rax),%r10d
mov    %edi,%eax
mov    %r10b,-0x12(%rbp,%rax,1)
add    $0x1,%edi
cmp    $0x10,%esi
je     862f <png_ascii_from_fixed+0x7f>
mov    %rdx,%rcx
test   %ecx,%ecx
jne    85f6 <png_ascii_from_fixed+0x46>
test   %edi,%edi
je     863c <png_ascii_from_fixed+0x8c>
mov    -0x8(%rbp),%rax
jmp    865d <png_ascii_from_fixed+0xad>
cmp    %r11d,%ecx
jne    8675 <png_ascii_from_fixed+0xc5>
mov    %rdx,%rcx
mov    %r8,%rsi
jmp    8621 <png_ascii_from_fixed+0x71>
mov    -0x8(%rbp),%rax
movb   $0x30,(%rax)
add    $0x1,%rax
movb   $0x0,(%rax)
leaveq 
retq   
add    $0xffffffff,%edi
mov    %edi,%ecx
movsbq -0x12(%rbp,%rcx,1),%rcx
mov    %cl,(%rax)
add    $0x1,%rax
cmp    $0x5,%edi
ja     864c <png_ascii_from_fixed+0x9c>
cmp    $0x5,%esi
ja     8647 <png_ascii_from_fixed+0x97>
movb   $0x2e,(%rax)
add    $0x1,%rax
mov    $0x5,%ecx
jmp    8687 <png_ascii_from_fixed+0xd7>
mov    %rdx,%rcx
mov    %rdi,%rsi
jmp    8621 <png_ascii_from_fixed+0x71>
movb   $0x30,(%rax)
add    $0x1,%rax
add    $0xffffffff,%ecx
cmp    %ecx,%edi
jb     867d <png_ascii_from_fixed+0xcd>
jmp    869e <png_ascii_from_fixed+0xee>
add    $0xffffffff,%edi
mov    %edi,%ecx
movsbq -0x12(%rbp,%rcx,1),%rcx
mov    %cl,(%rax)
add    $0x1,%rax
cmp    %edi,%esi
jbe    868d <png_ascii_from_fixed+0xdd>
jmp    8647 <png_ascii_from_fixed+0x97>
data16 nopw %cs:0x0(%rax,%rax,1)
nop

00000000000086b0 <png_check_fp_number>:
push   %rbp
mov    %rsp,%rbp
sub    $0x70,%rsp
mov    %r15,-0x38(%rbp)
mov    %r14,-0x30(%rbp)
mov    %r13,-0x28(%rbp)
mov    %r12,-0x20(%rbp)
mov    %rbx,-0x18(%rbp)
mov    %rcx,-0x8(%rbp)
mov    %rdx,-0x10(%rbp)
mov    (%rcx),%rbx
movslq (%rdx),%rax
mov    $0x4,%r15d
mov    $0x10,%r14d
mov    $0x8,%r13d
mov    $0x20,%r11d
mov    $0x84,%r12d
mov    $0x108,%edx
mov    $0x5,%ecx
mov    $0x44,%r8d
mov    %r8,-0x68(%rbp)
mov    $0xc4,%r8d
mov    %r8,-0x60(%rbp)
mov    $0x50,%r8d
mov    %r8,-0x58(%rbp)
mov    $0x48,%r8d
mov    %r8,-0x50(%rbp)
mov    $0x148,%r8d
mov    %r8,-0x48(%rbp)
mov    $0x60,%r8d
mov    %r8,-0x40(%rbp)
jmp    875c <png_check_fp_number+0xac>
and    $0x1c0,%eax
lea    0x11(%rax),%ecx
mov    -0x70(%rbp),%rax
or     %ecx,%eax
add    $0x1,%rbx
mov    $0x5,%ecx
mov    $0x108,%edx
mov    %rax,%r10
and    $0x8,%r10d
cmp    %rsi,%rbx
jae    879b <png_check_fp_number+0xeb>
movsbq (%rdi,%rbx,1),%r8
add    $0xffffffd5,%r8d
cmp    $0x3a,%r8d
ja     879b <png_check_fp_number+0xeb>
lea    0x238aa(%rip),%r9        # 2c028 <_fini+0xf84>
movslq (%r9,%r8,4),%r8
add    %r9,%r8
jmpq   *%r8
mov    $0x21,%ecx
mov    %r11,%rdx
mov    %rdx,%r9
pushq  -0x40(%rbp)
popq   -0x70(%rbp)
jmp    87d8 <png_check_fp_number+0x128>
test   %r10d,%r10d
mov    -0x10(%rbp),%rcx
mov    %eax,(%rcx)
mov    -0x8(%rbp),%rax
mov    %rbx,(%rax)
jle    884c <png_check_fp_number+0x19c>
mov    $0x1,%eax
mov    -0x18(%rbp),%rbx
mov    -0x20(%rbp),%r12
mov    -0x28(%rbp),%r13
mov    -0x30(%rbp),%r14
mov    -0x38(%rbp),%r15
leaveq 
retq   
mov    %r15,%rdx
mov    %rdx,%r9
pushq  -0x68(%rbp)
popq   -0x70(%rbp)
mov    %rax,%r8
and    $0x3,%r8d
lea    -0x4(%r9,%r8,1),%r8d
cmp    $0x1d,%r8d
ja     879b <png_check_fp_number+0xeb>
lea    0x23923(%rip),%r9        # 2c114 <_fini+0x1070>
movslq (%r9,%r8,4),%r8
add    %r9,%r8
jmpq   *%r8
or     $0x48,%eax
jmpq   874e <png_check_fp_number+0x9e>
mov    $0x85,%ecx
mov    %r12,%rdx
mov    %r15,%r9
pushq  -0x60(%rbp)
popq   -0x70(%rbp)
jmp    87d8 <png_check_fp_number+0x128>
mov    $0x11,%ecx
mov    %r14,%rdx
mov    %rdx,%r9
pushq  -0x58(%rbp)
popq   -0x70(%rbp)
jmp    87d8 <png_check_fp_number+0x128>
mov    $0x9,%ecx
mov    %r13,%rdx
mov    %rdx,%r9
pushq  -0x50(%rbp)
popq   -0x70(%rbp)
jmp    87d8 <png_check_fp_number+0x128>
mov    $0x109,%ecx
mov    %r13,%r9
pushq  -0x48(%rbp)
popq   -0x70(%rbp)
jmp    87d8 <png_check_fp_number+0x128>
xor    %eax,%eax
mov    -0x18(%rbp),%rbx
mov    -0x20(%rbp),%r12
mov    -0x28(%rbp),%r13
mov    -0x30(%rbp),%r14
mov    -0x38(%rbp),%r15
leaveq 
retq   
mov    %rax,%rcx
and    $0x3c,%ecx
test   %ecx,%ecx
jg     879b <png_check_fp_number+0xeb>
or     %edx,%eax
jmpq   874e <png_check_fp_number+0x9e>
mov    %rax,%r8
and    $0x10,%r8d
test   %r8d,%r8d
jg     879b <png_check_fp_number+0xeb>
test   %r10d,%r10d
jg     88fd <png_check_fp_number+0x24d>
and    $0x1c0,%eax
or     %ecx,%eax
jmpq   874e <png_check_fp_number+0x9e>
mov    %rax,%rcx
and    $0x10,%ecx
test   %ecx,%ecx
jg     8740 <png_check_fp_number+0x90>
mov    %rax,%rcx
jmpq   8748 <png_check_fp_number+0x98>
test   %r10d,%r10d
je     879b <png_check_fp_number+0xeb>
and    $0x1c0,%eax
add    $0x2,%eax
jmpq   874e <png_check_fp_number+0x9e>
mov    -0x70(%rbp),%rcx
or     %ecx,%eax
jmpq   874e <png_check_fp_number+0x9e>
test   %r10d,%r10d
je     879b <png_check_fp_number+0xeb>
and    $0x1c0,%eax
add    $0x2,%eax
jmpq   874e <png_check_fp_number+0x9e>
mov    %rax,%rcx
and    $0x3c,%ecx
test   %ecx,%ecx
jg     879b <png_check_fp_number+0xeb>
or     $0x4,%eax
jmpq   874e <png_check_fp_number+0x9e>
or     %edx,%eax
jmpq   874e <png_check_fp_number+0x9e>
data16 nopw %cs:0x0(%rax,%rax,1)
nop

0000000000008910 <png_check_fp_string>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %rsi,-0x10(%rbp)
mov    %rdi,-0x8(%rbp)
movl   $0x0,-0x1c(%rbp)
movq   $0x0,-0x18(%rbp)
lea    -0x1c(%rbp),%rdx
lea    -0x18(%rbp),%rcx
callq  86b0 <png_check_fp_number>
test   %eax,%eax
jne    8944 <png_check_fp_string+0x34>
xor    %eax,%eax
leaveq 
retq   
mov    -0x18(%rbp),%rax
mov    -0x10(%rbp),%rcx
cmp    %rax,%rcx
je     8962 <png_check_fp_string+0x52>
mov    -0x8(%rbp),%rcx
movsbq (%rcx,%rax,1),%rax
test   %al,%al
je     8962 <png_check_fp_string+0x52>
xor    %eax,%eax
leaveq 
retq   
movslq -0x1c(%rbp),%rax
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

0000000000008970 <png_muldiv>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
xor    %eax,%eax
test   %ecx,%ecx
jne    8980 <png_muldiv+0x10>
leaveq 
retq   
mov    $0x1,%eax
test   %esi,%esi
je     89ca <png_muldiv+0x5a>
test   %edx,%edx
je     89ca <png_muldiv+0x5a>
cvtsi2sd %edx,%xmm0
cvtsi2sd %esi,%xmm1
mulsd  %xmm1,%xmm0
cvtsi2sd %ecx,%xmm1
divsd  %xmm1,%xmm0
movsd  0x24aaf(%rip),%xmm1        # 2d458 <short_months.6+0x983>
addsd  %xmm1,%xmm0
mov    %rdi,-0x8(%rbp)
callq  57e0 <floor@plt>
movsd  0x24aaa(%rip),%xmm1        # 2d468 <short_months.6+0x993>
ucomisd %xmm1,%xmm0
jp     89c6 <png_muldiv+0x56>
jbe    89d2 <png_muldiv+0x62>
xor    %eax,%eax
leaveq 
retq   
movl   $0x0,(%rdi)
leaveq 
retq   
movsd  0x24a86(%rip),%xmm1        # 2d460 <short_months.6+0x98b>
ucomisd %xmm1,%xmm0
jae    89e4 <png_muldiv+0x74>
xor    %eax,%eax
leaveq 
retq   
cvttsd2si %xmm0,%eax
mov    -0x8(%rbp),%rcx
mov    %eax,(%rcx)
mov    $0x1,%eax
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)

0000000000008a00 <png_muldiv_warn>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %rdi,-0x8(%rbp)
lea    -0xc(%rbp),%rdi
callq  8970 <png_muldiv>
test   %eax,%eax
jne    8a2d <png_muldiv_warn+0x2d>
lea    0x248ef(%rip),%rsi        # 2d30f <short_months.6+0x83a>
mov    -0x8(%rbp),%rdi
callq  5390 <png_warning@plt>
xor    %eax,%eax
leaveq 
retq   
movslq -0xc(%rbp),%rax
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

0000000000008a40 <png_reciprocal>:
push   %rbp
mov    %rsp,%rbp
movsd  0x24a54(%rip),%xmm0        # 2d4a0 <short_months.6+0x9cb>
cvtsi2sd %edi,%xmm1
divsd  %xmm1,%xmm0
movsd  0x249fc(%rip),%xmm1        # 2d458 <short_months.6+0x983>
addsd  %xmm1,%xmm0
callq  57e0 <floor@plt>
movsd  0x249fb(%rip),%xmm1        # 2d468 <short_months.6+0x993>
ucomisd %xmm1,%xmm0
jp     8a75 <png_reciprocal+0x35>
jbe    8a79 <png_reciprocal+0x39>
xor    %eax,%eax
leaveq 
retq   
movsd  0x249df(%rip),%xmm1        # 2d460 <short_months.6+0x98b>
ucomisd %xmm1,%xmm0
jae    8a8b <png_reciprocal+0x4b>
xor    %eax,%eax
leaveq 
retq   
cvttsd2si %xmm0,%eax
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   0x0(%rax)

0000000000008aa0 <png_reciprocal2>:
push   %rbp
mov    %rsp,%rbp
xor    %eax,%eax
test   %edi,%edi
jne    8aac <png_reciprocal2+0xc>
leaveq 
retq   
test   %esi,%esi
jne    8ab2 <png_reciprocal2+0x12>
leaveq 
retq   
movsd  0x249ee(%rip),%xmm0        # 2d4a8 <short_months.6+0x9d3>
cvtsi2sd %edi,%xmm1
divsd  %xmm1,%xmm0
cvtsi2sd %esi,%xmm1
divsd  %xmm1,%xmm0
movsd  0x24986(%rip),%xmm1        # 2d458 <short_months.6+0x983>
addsd  %xmm1,%xmm0
callq  57e0 <floor@plt>
movsd  0x24985(%rip),%xmm1        # 2d468 <short_months.6+0x993>
ucomisd %xmm1,%xmm0
jp     8aeb <png_reciprocal2+0x4b>
jbe    8aef <png_reciprocal2+0x4f>
xor    %eax,%eax
leaveq 
retq   
movsd  0x24969(%rip),%xmm1        # 2d460 <short_months.6+0x98b>
ucomisd %xmm1,%xmm0
jae    8b01 <png_reciprocal2+0x61>
xor    %eax,%eax
leaveq 
retq   
cvttsd2si %xmm0,%eax
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

0000000000008b10 <png_gamma_significant>:
push   %rbp
mov    %rsp,%rbp
mov    $0x1,%eax
cmp    $0x17317,%edi
jg     8b23 <png_gamma_significant+0x13>
leaveq 
retq   
cmp    $0x19a28,%edi
jle    8b2d <png_gamma_significant+0x1d>
leaveq 
retq   
xor    %eax,%eax
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   0x0(%rax)

0000000000008b40 <png_gamma_correct>:
push   %rbp
mov    %rsp,%rbp
movzbl 0x268(%rdi),%eax
cmp    $0x8,%al
je     8b5c <png_gamma_correct+0x1c>
mov    %rsi,%rdi
mov    %rdx,%rsi
callq  8b70 <png_gamma_16bit_correct>
leaveq 
retq   
mov    %rsi,%rdi
mov    %rdx,%rsi
callq  8be0 <png_gamma_8bit_correct>
movzbl %al,%eax
leaveq 
retq   
nopl   0x0(%rax)

0000000000008b70 <png_gamma_16bit_correct>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
test   %edi,%edi
jne    8b81 <png_gamma_16bit_correct+0x11>
mov    %rdi,%rax
leaveq 
retq   
cmp    $0xfffe,%edi
jbe    8b8e <png_gamma_16bit_correct+0x1e>
mov    %rdi,%rax
leaveq 
retq   
cvtsi2sd %edi,%xmm0
movsd  0x24916(%rip),%xmm1        # 2d4b0 <short_months.6+0x9db>
divsd  %xmm1,%xmm0
movdqu %xmm1,-0x10(%rbp)
cvtsi2sd %esi,%xmm1
movsd  0x24909(%rip),%xmm2        # 2d4b8 <short_months.6+0x9e3>
mulsd  %xmm2,%xmm1
callq  5360 <pow@plt>
movdqu -0x10(%rbp),%xmm1
mulsd  %xmm1,%xmm0
movsd  0x2488f(%rip),%xmm1        # 2d458 <short_months.6+0x983>
addsd  %xmm1,%xmm0
callq  57e0 <floor@plt>
cvttsd2si %xmm0,%rax
leaveq 
retq   
nopl   0x0(%rax)

0000000000008be0 <png_gamma_8bit_correct>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
test   %edi,%edi
jne    8bf1 <png_gamma_8bit_correct+0x11>
mov    %rdi,%rax
leaveq 
retq   
cmp    $0xfe,%edi
jbe    8bfe <png_gamma_8bit_correct+0x1e>
mov    %rdi,%rax
leaveq 
retq   
cvtsi2sd %edi,%xmm0
movsd  0x248b6(%rip),%xmm1        # 2d4c0 <short_months.6+0x9eb>
divsd  %xmm1,%xmm0
movdqu %xmm1,-0x10(%rbp)
cvtsi2sd %esi,%xmm1
movsd  0x24899(%rip),%xmm2        # 2d4b8 <short_months.6+0x9e3>
mulsd  %xmm2,%xmm1
callq  5360 <pow@plt>
movdqu -0x10(%rbp),%xmm1
mulsd  %xmm1,%xmm0
movsd  0x2481f(%rip),%xmm1        # 2d458 <short_months.6+0x983>
addsd  %xmm1,%xmm0
callq  57e0 <floor@plt>
cvttsd2si %xmm0,%rax
leaveq 
retq   
nopl   0x0(%rax)

0000000000008c50 <png_destroy_gamma_table>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %r15,-0x18(%rbp)
mov    %r13,%r15
mov    %r15,-0x8(%rbp)
mov    %r14,-0x10(%rbp)
mov    0x2a8(%rdi),%rsi
mov    %rdi,%r13
callq  5790 <png_free@plt>
movq   $0x0,0x2a8(%r13)
mov    $0x1,%edx
mov    $0x8,%ecx
xor    %esi,%esi
mov    0x2b0(%r13),%rax
test   %rax,%rax
jne    8cf5 <png_destroy_gamma_table+0xa5>
mov    0x2b8(%r13),%rsi
mov    %r13,%rdi
callq  5790 <png_free@plt>
movq   $0x0,0x2b8(%r13)
mov    0x2c0(%r13),%rsi
mov    %r13,%rdi
callq  5790 <png_free@plt>
movq   $0x0,0x2c0(%r13)
mov    0x2c8(%r13),%rax
test   %rax,%rax
je     8d4a <png_destroy_gamma_table+0xfa>
mov    0x2a0(%r13),%eax
mov    $0x8,%ecx
sub    %eax,%ecx
mov    $0x1,%r14d
shl    %cl,%r14d
xor    %r15d,%r15d
jmp    8d23 <png_destroy_gamma_table+0xd3>
mov    0x2a0(%r13),%eax
sub    %eax,%ecx
mov    %rsi,%r14
mov    %rdx,%r15
shl    %cl,%r15d
jmp    8d79 <png_destroy_gamma_table+0x129>
mov    0x2c8(%r13),%rcx
movslq %r15d,%rax
mov    (%rcx,%rax,8),%rsi
mov    %r13,%rdi
callq  5790 <png_free@plt>
add    $0x1,%r15d
cmp    %r14d,%r15d
jl     8d09 <png_destroy_gamma_table+0xb9>
mov    0x2c8(%r13),%rsi
mov    %r13,%rdi
callq  5790 <png_free@plt>
movq   $0x0,0x2c8(%r13)
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r15
mov    0x2d0(%r13),%rax
test   %rax,%rax
jne    8da5 <png_destroy_gamma_table+0x155>
mov    %r15,%r13
mov    -0x18(%rbp),%r15
leaveq 
retq   
mov    0x2b0(%r13),%rcx
movslq %r14d,%rax
mov    (%rcx,%rax,8),%rsi
mov    %r13,%rdi
callq  5790 <png_free@plt>
add    $0x1,%r14d
cmp    %r15d,%r14d
jl     8d5f <png_destroy_gamma_table+0x10f>
mov    0x2b0(%r13),%rsi
mov    %r13,%rdi
callq  5790 <png_free@plt>
movq   $0x0,0x2b0(%r13)
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r15
jmpq   8c99 <png_destroy_gamma_table+0x49>
mov    0x2a0(%r13),%eax
mov    $0x8,%ecx
sub    %eax,%ecx
mov    $0x1,%r14d
shl    %cl,%r14d
xor    %r15d,%r15d
jmp    8ddb <png_destroy_gamma_table+0x18b>
mov    0x2d0(%r13),%rcx
movslq %r15d,%rax
mov    (%rcx,%rax,8),%rsi
mov    %r13,%rdi
callq  5790 <png_free@plt>
add    $0x1,%r15d
cmp    %r14d,%r15d
jl     8dc1 <png_destroy_gamma_table+0x171>
mov    0x2d0(%r13),%rsi
mov    %r13,%rdi
callq  5790 <png_free@plt>
movq   $0x0,0x2d0(%r13)
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
mov    -0x18(%rbp),%r15
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

0000000000008e10 <png_build_gamma_table>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %r14,-0x10(%rbp)
mov    %r15,-0x18(%rbp)
lea    0x2a8(%rdi),%r15
mov    (%r15),%rax
test   %rax,%rax
jne    8e4c <png_build_gamma_table+0x3c>
mov    0x2b0(%rdi),%rax
test   %rax,%rax
jne    8e4c <png_build_gamma_table+0x3c>
mov    %rsi,%rcx
mov    %r15,%rsi
mov    %r14,%r15
mov    %r13,%r14
mov    %rdi,%r13
jmp    8e81 <png_build_gamma_table+0x71>
lea    0x244d9(%rip),%rax        # 2d32c <short_months.6+0x857>
mov    %rdi,%rcx
mov    %r13,-0x8(%rbp)
mov    %rdi,%r13
mov    %rcx,%rdi
mov    %rsi,%r14
mov    %rax,%rsi
callq  5390 <png_warning@plt>
mov    %r13,%rdi
callq  8c50 <png_destroy_gamma_table>
mov    %r14,%rcx
mov    %r15,%rsi
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
mov    $0x186a0,%eax
cmp    $0x8,%ecx
jle    8f21 <png_build_gamma_table+0x111>
movzbl 0x267(%r13),%ecx
and    $0x2,%ecx
test   %ecx,%ecx
jg     8f70 <png_build_gamma_table+0x160>
movzbl 0x2db(%r13),%edx
xor    %ecx,%ecx
test   %dl,%dl
jne    8f9f <png_build_gamma_table+0x18f>
mov    0x134(%r13),%edx
and    $0x4000400,%edx
test   %edx,%edx
jne    8fb4 <png_build_gamma_table+0x1a4>
cmp    $0x8,%cl
jbe    8ed3 <png_build_gamma_table+0xc3>
mov    $0x8,%ecx
test   %edx,%edx
movzbl %cl,%edx
mov    %rdx,-0x8(%rbp)
mov    %edx,0x2a0(%r13)
jne    8fc7 <png_build_gamma_table+0x1b7>
movslq 0x2a4(%r13),%rsi
test   %esi,%esi
jle    8f0a <png_build_gamma_table+0xfa>
mov    %rdx,%r15
movslq 0x498(%r13),%rdi
callq  8aa0 <png_reciprocal2>
mov    %r15,%rdx
mov    -0x10(%rbp),%r15
mov    %rax,%rcx
lea    0x2b0(%r13),%rsi
mov    %r13,%rdi
callq  a430 <png_build_16bit_table>
jmpq   8ffa <png_build_gamma_table+0x1ea>
movslq 0x2a4(%r13),%rcx
test   %ecx,%ecx
jle    8f45 <png_build_gamma_table+0x135>
mov    %rsi,%r15
mov    %rcx,%rsi
movslq 0x498(%r13),%rdi
callq  8aa0 <png_reciprocal2>
mov    %r15,%rsi
mov    -0x10(%rbp),%r15
mov    %rax,%rdx
mov    %r13,%rdi
callq  a780 <png_build_8bit_table>
mov    0x134(%r13),%eax
and    $0x600080,%eax
test   %eax,%eax
jne    9016 <png_build_gamma_table+0x206>
mov    %r14,%r13
mov    %r15,%r14
mov    -0x18(%rbp),%r15
leaveq 
retq   
movzbl 0x2d9(%r13),%edx
movzbl 0x2d8(%r13),%ecx
cmp    %cl,%dl
jbe    8f87 <png_build_gamma_table+0x177>
mov    %rdx,%rcx
movzbl 0x2da(%r13),%edx
cmp    %dl,%cl
jb     8eaa <png_build_gamma_table+0x9a>
mov    %rcx,%rdx
jmpq   8eaa <png_build_gamma_table+0x9a>
cmp    $0xf,%dl
ja     8eb4 <png_build_gamma_table+0xa4>
mov    $0x10,%ecx
sub    %dl,%cl
jmpq   8eb4 <png_build_gamma_table+0xa4>
cmp    $0x4,%cl
ja     8ec9 <png_build_gamma_table+0xb9>
mov    $0x5,%ecx
jmpq   8ec9 <png_build_gamma_table+0xb9>
movslq 0x2a4(%r13),%rsi
test   %esi,%esi
jle    8fe8 <png_build_gamma_table+0x1d8>
mov    %rdx,%r15
movslq 0x498(%r13),%rdi
callq  a3d0 <png_product2>
mov    %r15,%rdx
mov    -0x10(%rbp),%r15
mov    %rax,%rcx
lea    0x2b0(%r13),%rsi
mov    %r13,%rdi
callq  a610 <png_build_16to8_table>
mov    0x134(%r13),%eax
and    $0x600080,%eax
test   %eax,%eax
jne    9048 <png_build_gamma_table+0x238>
mov    %r14,%r13
mov    %r15,%r14
mov    -0x18(%rbp),%r15
leaveq 
retq   
movslq 0x498(%r13),%rdi
callq  8a40 <png_reciprocal>
mov    %rax,%rdx
lea    0x2c0(%r13),%rsi
mov    %r13,%rdi
callq  a780 <png_build_8bit_table>
movslq 0x2a4(%r13),%rdi
test   %edi,%edi
jg     9081 <png_build_gamma_table+0x271>
movslq 0x498(%r13),%rdx
jmp    9089 <png_build_gamma_table+0x279>
movslq 0x498(%r13),%rdi
callq  8a40 <png_reciprocal>
mov    %rax,%rcx
lea    0x2d0(%r13),%rsi
mov    %r13,%rdi
mov    -0x8(%rbp),%r15
mov    %r15,%rdx
callq  a430 <png_build_16bit_table>
movslq 0x2a4(%r13),%rdi
test   %edi,%edi
jg     90a4 <png_build_gamma_table+0x294>
movslq 0x498(%r13),%rcx
jmp    90ac <png_build_gamma_table+0x29c>
callq  8a40 <png_reciprocal>
mov    %rax,%rdx
mov    %r13,%rdi
lea    0x2b8(%rdi),%rsi
callq  a780 <png_build_8bit_table>
mov    %r14,%r13
mov    %r15,%r14
mov    -0x18(%rbp),%r15
leaveq 
retq   
callq  8a40 <png_reciprocal>
mov    %rax,%rcx
mov    %r15,%rdx
mov    %r13,%rdi
lea    0x2c8(%rdi),%rsi
callq  a430 <png_build_16bit_table>
mov    %r14,%r13
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

00000000000090d0 <png_image_error>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x8(%rbp)
mov    %rsi,%rcx
mov    %rdi,%r15
lea    0x24(%r15),%rdi
mov    $0x40,%esi
xor    %edx,%edx
callq  ad20 <png_safecat>
mov    0x20(%r15),%eax
or     $0x2,%eax
mov    %eax,0x20(%r15)
mov    %r15,%rdi
callq  5040 <png_image_free@plt>
xor    %eax,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
nopl   (%rax)

0000000000009110 <png_colorspace_check_gamma>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    $0x1,%eax
movzwl 0x4a(%rsi),%r8d
and    $0x1,%r8d
test   %r8d,%r8d
jg     912d <png_colorspace_check_gamma+0x1d>
leaveq 
retq   
lea    -0x1c(%rbp),%rax
movslq (%rsi),%r8
mov    $0x186a0,%r9d
mov    %r15,-0x18(%rbp)
mov    %rcx,-0x10(%rbp)
mov    %rdi,-0x8(%rbp)
mov    %rdx,%rcx
mov    %r9,%rdx
mov    %rax,%rdi
mov    %rsi,%r15
mov    %r8,%rsi
callq  8970 <png_muldiv>
test   %eax,%eax
je     9176 <png_colorspace_check_gamma+0x66>
movslq -0x1c(%rbp),%rdi
callq  8b10 <png_gamma_significant>
test   %eax,%eax
jne    9176 <png_colorspace_check_gamma+0x66>
mov    $0x1,%eax
mov    -0x18(%rbp),%r15
leaveq 
retq   
xor    %edx,%edx
movzwl 0x4a(%r15),%eax
and    $0x20,%eax
test   %eax,%eax
jle    91ae <png_colorspace_check_gamma+0x9e>
mov    -0x10(%rbp),%r15
lea    0x241b7(%rip),%rsi        # 2d346 <short_months.6+0x871>
mov    $0x2,%edx
mov    -0x8(%rbp),%rdi
callq  b130 <png_chunk_report>
cmp    $0x2,%r15d
jne    91d9 <png_colorspace_check_gamma+0xc9>
mov    $0x1,%eax
mov    -0x18(%rbp),%r15
leaveq 
retq   
mov    -0x10(%rbp),%r15
cmp    $0x2,%r15d
je     9188 <png_colorspace_check_gamma+0x78>
lea    0x241a7(%rip),%rsi        # 2d366 <short_months.6+0x891>
mov    -0x8(%rbp),%rdi
callq  b130 <png_chunk_report>
cmp    $0x1,%r15d
jne    91e1 <png_colorspace_check_gamma+0xd1>
mov    $0x1,%eax
mov    -0x18(%rbp),%r15
leaveq 
retq   
xor    %eax,%eax
mov    -0x18(%rbp),%r15
leaveq 
retq   
xor    %eax,%eax
mov    -0x18(%rbp),%r15
leaveq 
retq   
nopl   0x0(%rax)

00000000000091f0 <png_xy_from_XYZ>:
push   %rbp
mov    %rsp,%rbp
sub    $0x50,%rsp
mov    %rdi,-0x40(%rbp)
mov    %rsi,-0x50(%rbp)
movslq (%rsi),%rax
mov    %rax,%rcx
add    0x4(%rsi),%ecx
add    0x8(%rsi),%ecx
mov    %rax,%rsi
mov    %rcx,-0x48(%rbp)
mov    $0x186a0,%edx
callq  8970 <png_muldiv>
test   %eax,%eax
jne    9228 <png_xy_from_XYZ+0x38>
mov    $0x1,%eax
leaveq 
retq   
mov    -0x40(%rbp),%rax
lea    0x4(%rax),%rdi
mov    -0x50(%rbp),%rax
movslq 0x4(%rax),%rsi
mov    $0x186a0,%edx
mov    -0x48(%rbp),%rcx
mov    %r15,-0x8(%rbp)
mov    %rax,%r15
callq  8970 <png_muldiv>
test   %eax,%eax
jne    925c <png_xy_from_XYZ+0x6c>
mov    -0x8(%rbp),%r15
mov    $0x1,%eax
leaveq 
retq   
movslq (%r15),%rax
mov    %rax,-0x28(%rbp)
movslq 0x4(%r15),%rax
mov    %rax,-0x18(%rbp)
movslq 0xc(%r15),%rsi
mov    %rsi,%rcx
add    0x10(%r15),%ecx
add    0x14(%r15),%ecx
mov    %rcx,-0x38(%rbp)
mov    -0x40(%rbp),%r15
lea    0x8(%r15),%rdi
mov    $0x186a0,%edx
callq  8970 <png_muldiv>
test   %eax,%eax
jne    929f <png_xy_from_XYZ+0xaf>
mov    -0x8(%rbp),%r15
mov    $0x1,%eax
leaveq 
retq   
lea    0xc(%r15),%rdi
mov    -0x50(%rbp),%r15
movslq 0x10(%r15),%rsi
mov    $0x186a0,%edx
mov    -0x38(%rbp),%rcx
callq  8970 <png_muldiv>
test   %eax,%eax
jne    92c8 <png_xy_from_XYZ+0xd8>
mov    -0x8(%rbp),%r15
mov    $0x1,%eax
leaveq 
retq   
movslq 0xc(%r15),%rax
mov    %rax,-0x20(%rbp)
movslq 0x10(%r15),%rax
mov    %rax,-0x10(%rbp)
movslq 0x18(%r15),%rsi
mov    %rsi,%rcx
add    0x1c(%r15),%ecx
add    0x20(%r15),%ecx
mov    %rcx,-0x30(%rbp)
mov    -0x40(%rbp),%r15
lea    0x10(%r15),%rdi
mov    $0x186a0,%edx
callq  8970 <png_muldiv>
test   %eax,%eax
jne    930c <png_xy_from_XYZ+0x11c>
mov    -0x8(%rbp),%r15
mov    $0x1,%eax
leaveq 
retq   
lea    0x14(%r15),%rdi
mov    -0x50(%rbp),%r15
movslq 0x1c(%r15),%rsi
mov    $0x186a0,%edx
mov    -0x30(%rbp),%rcx
callq  8970 <png_muldiv>
test   %eax,%eax
jne    9335 <png_xy_from_XYZ+0x145>
mov    -0x8(%rbp),%r15
mov    $0x1,%eax
leaveq 
retq   
movslq 0x1c(%r15),%r8
mov    -0x20(%rbp),%rcx
mov    -0x28(%rbp),%rax
lea    (%rcx,%rax,1),%esi
add    0x18(%r15),%esi
mov    -0x38(%rbp),%rcx
mov    -0x48(%rbp),%rax
add    %ecx,%eax
mov    -0x30(%rbp),%rcx
add    %eax,%ecx
mov    %rcx,-0x50(%rbp)
mov    -0x40(%rbp),%rax
lea    0x18(%rax),%rdi
mov    %r8,%r15
mov    $0x186a0,%edx
callq  8970 <png_muldiv>
test   %eax,%eax
jne    9380 <png_xy_from_XYZ+0x190>
mov    -0x8(%rbp),%r15
mov    $0x1,%eax
leaveq 
retq   
mov    -0x10(%rbp),%rcx
mov    -0x18(%rbp),%rax
add    %ecx,%eax
lea    (%r15,%rax,1),%esi
mov    -0x40(%rbp),%rax
lea    0x1c(%rax),%rdi
mov    -0x50(%rbp),%rcx
mov    $0x186a0,%edx
callq  8970 <png_muldiv>
test   %eax,%eax
jne    93b3 <png_xy_from_XYZ+0x1c3>
mov    -0x8(%rbp),%r15
mov    $0x1,%eax
leaveq 
retq   
xor    %eax,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

00000000000093c0 <png_XYZ_from_xy>:
push   %rbp
mov    %rsp,%rbp
sub    $0x40,%rsp
mov    $0x1,%eax
movslq (%rsi),%r8
test   %r8d,%r8d
jns    93d7 <png_XYZ_from_xy+0x17>
leaveq 
retq   
cmp    $0x186a0,%r8d
jle    93e2 <png_XYZ_from_xy+0x22>
leaveq 
retq   
movslq 0x4(%rsi),%rdx
test   %edx,%edx
jns    93ec <png_XYZ_from_xy+0x2c>
leaveq 
retq   
mov    $0x186a0,%ecx
neg    %r8d
add    %ecx,%r8d
cmp    %r8d,%edx
jle    93fe <png_XYZ_from_xy+0x3e>
leaveq 
retq   
movslq 0x8(%rsi),%r8
test   %r8d,%r8d
jns    9409 <png_XYZ_from_xy+0x49>
leaveq 
retq   
cmp    $0x186a0,%r8d
jle    9414 <png_XYZ_from_xy+0x54>
leaveq 
retq   
movslq 0xc(%rsi),%r10
test   %r10d,%r10d
jns    941f <png_XYZ_from_xy+0x5f>
leaveq 
retq   
mov    %rcx,%r9
sub    %r8d,%r9d
cmp    %r9d,%r10d
jle    942c <png_XYZ_from_xy+0x6c>
leaveq 
retq   
movslq 0x10(%rsi),%r11
test   %r11d,%r11d
jns    9437 <png_XYZ_from_xy+0x77>
leaveq 
retq   
cmp    $0x186a0,%r11d
jle    9442 <png_XYZ_from_xy+0x82>
leaveq 
retq   
movslq 0x14(%rsi),%r10
test   %r10d,%r10d
jns    944d <png_XYZ_from_xy+0x8d>
leaveq 
retq   
mov    %rcx,%r9
sub    %r11d,%r9d
cmp    %r9d,%r10d
jle    945a <png_XYZ_from_xy+0x9a>
leaveq 
retq   
movslq 0x18(%rsi),%r9
test   %r9d,%r9d
jns    9465 <png_XYZ_from_xy+0xa5>
leaveq 
retq   
cmp    $0x186a0,%r9d
jle    9470 <png_XYZ_from_xy+0xb0>
leaveq 
retq   
mov    %rdi,-0x10(%rbp)
movslq 0x1c(%rsi),%rdi
cmp    $0x4,%edi
jg     947f <png_XYZ_from_xy+0xbf>
leaveq 
retq   
sub    %r9d,%ecx
cmp    %ecx,%edi
jle    9488 <png_XYZ_from_xy+0xc8>
leaveq 
retq   
sub    %r11d,%r8d
sub    %r10d,%edx
lea    -0x30(%rbp),%rdi
mov    $0x7,%ecx
mov    %rsi,-0x28(%rbp)
mov    %r8,%rsi
callq  8970 <png_muldiv>
test   %eax,%eax
jne    94ae <png_XYZ_from_xy+0xee>
mov    $0x2,%eax
leaveq 
retq   
mov    -0x28(%rbp),%rcx
movslq 0xc(%rcx),%rsi
movslq 0x14(%rcx),%rax
sub    %eax,%esi
movslq (%rcx),%rdx
movslq 0x10(%rcx),%rax
sub    %eax,%edx
lea    -0x2c(%rbp),%rdi
mov    $0x7,%ecx
callq  8970 <png_muldiv>
test   %eax,%eax
jne    94de <png_XYZ_from_xy+0x11e>
mov    $0x2,%eax
leaveq 
retq   
movslq -0x30(%rbp),%rax
mov    %rax,-0x18(%rbp)
movslq -0x2c(%rbp),%rax
mov    %rax,-0x20(%rbp)
mov    -0x28(%rbp),%rcx
movslq 0x8(%rcx),%rsi
movslq 0x10(%rcx),%rax
sub    %eax,%esi
movslq 0x1c(%rcx),%rdx
movslq 0x14(%rcx),%rax
sub    %eax,%edx
lea    -0x30(%rbp),%rdi
mov    $0x7,%ecx
callq  8970 <png_muldiv>
test   %eax,%eax
jne    951f <png_XYZ_from_xy+0x15f>
mov    $0x2,%eax
leaveq 
retq   
mov    -0x28(%rbp),%rcx
movslq 0xc(%rcx),%rsi
movslq 0x14(%rcx),%rax
sub    %eax,%esi
movslq 0x18(%rcx),%rdx
movslq 0x10(%rcx),%rax
sub    %eax,%edx
lea    -0x2c(%rbp),%rdi
mov    $0x7,%ecx
callq  8970 <png_muldiv>
test   %eax,%eax
jne    9550 <png_XYZ_from_xy+0x190>
mov    $0x2,%eax
leaveq 
retq   
mov    -0x20(%rbp),%rax
mov    -0x18(%rbp),%rdx
sub    %eax,%edx
mov    %rdx,-0x20(%rbp)
movslq -0x30(%rbp),%rcx
movslq -0x2c(%rbp),%rax
sub    %eax,%ecx
lea    -0x38(%rbp),%rdi
mov    -0x28(%rbp),%rax
movslq 0x1c(%rax),%rsi
mov    %r15,-0x18(%rbp)
mov    %rax,%r15
callq  8970 <png_muldiv>
test   %eax,%eax
jne    958f <png_XYZ_from_xy+0x1cf>
mov    -0x18(%rbp),%r15
mov    $0x1,%eax
leaveq 
retq   
movslq 0x1c(%r15),%rax
cmp    -0x38(%rbp),%eax
jl     95a3 <png_XYZ_from_xy+0x1e3>
mov    -0x18(%rbp),%r15
mov    $0x1,%eax
leaveq 
retq   
movslq 0x4(%r15),%rsi
movslq 0x14(%r15),%rax
sub    %eax,%esi
movslq 0x18(%r15),%rdx
movslq 0x10(%r15),%rax
sub    %eax,%edx
mov    $0x7,%ecx
lea    -0x30(%rbp),%rdi
callq  8970 <png_muldiv>
test   %eax,%eax
jne    95d4 <png_XYZ_from_xy+0x214>
mov    -0x18(%rbp),%r15
mov    $0x2,%eax
leaveq 
retq   
movslq (%r15),%rsi
movslq 0x10(%r15),%rax
sub    %eax,%esi
movslq 0x1c(%r15),%rdx
movslq 0x14(%r15),%rax
sub    %eax,%edx
lea    -0x2c(%rbp),%rdi
mov    $0x7,%ecx
callq  8970 <png_muldiv>
test   %eax,%eax
jne    9604 <png_XYZ_from_xy+0x244>
mov    -0x18(%rbp),%r15
mov    $0x2,%eax
leaveq 
retq   
movslq -0x30(%rbp),%rcx
movslq -0x2c(%rbp),%rax
sub    %eax,%ecx
lea    -0x34(%rbp),%rdi
movslq 0x1c(%r15),%rsi
mov    -0x20(%rbp),%rdx
callq  8970 <png_muldiv>
test   %eax,%eax
jne    962e <png_XYZ_from_xy+0x26e>
mov    -0x18(%rbp),%r15
mov    $0x1,%eax
leaveq 
retq   
movslq 0x1c(%r15),%rdi
cmp    -0x34(%rbp),%edi
jl     9642 <png_XYZ_from_xy+0x282>
mov    -0x18(%rbp),%r15
mov    $0x1,%eax
leaveq 
retq   
callq  8a40 <png_reciprocal>
mov    %rax,%r15
movslq -0x38(%rbp),%rdi
callq  8a40 <png_reciprocal>
movslq -0x34(%rbp),%rdi
mov    %r14,-0x8(%rbp)
mov    %rax,%r14
callq  8a40 <png_reciprocal>
add    %r14d,%eax
neg    %eax
add    %r15d,%eax
test   %eax,%eax
jg     967e <png_XYZ_from_xy+0x2be>
mov    -0x8(%rbp),%r14
mov    -0x18(%rbp),%r15
mov    $0x1,%eax
leaveq 
retq   
mov    -0x28(%rbp),%r14
movslq (%r14),%rsi
movslq -0x38(%rbp),%rcx
mov    -0x10(%rbp),%r15
mov    %r15,%rdi
mov    $0x186a0,%edx
mov    %rax,-0x28(%rbp)
callq  8970 <png_muldiv>
test   %eax,%eax
jne    96b1 <png_XYZ_from_xy+0x2f1>
mov    -0x8(%rbp),%r14
mov    -0x18(%rbp),%r15
mov    $0x1,%eax
leaveq 
retq   
lea    0x4(%r15),%rdi
movslq 0x4(%r14),%rsi
movslq -0x38(%rbp),%rcx
mov    $0x186a0,%edx
callq  8970 <png_muldiv>
test   %eax,%eax
jne    96da <png_XYZ_from_xy+0x31a>
mov    -0x8(%rbp),%r14
mov    -0x18(%rbp),%r15
mov    $0x1,%eax
leaveq 
retq   
movslq 0x4(%r14),%rax
add    (%r14),%eax
mov    $0x186a0,%edx
mov    %rdx,%rsi
sub    %eax,%esi
lea    0x8(%r15),%rdi
movslq -0x38(%rbp),%rcx
callq  8970 <png_muldiv>
test   %eax,%eax
jne    970b <png_XYZ_from_xy+0x34b>
mov    -0x8(%rbp),%r14
mov    -0x18(%rbp),%r15
mov    $0x1,%eax
leaveq 
retq   
lea    0xc(%r15),%rdi
movslq 0x8(%r14),%rsi
movslq -0x34(%rbp),%rcx
mov    $0x186a0,%edx
callq  8970 <png_muldiv>
test   %eax,%eax
jne    9734 <png_XYZ_from_xy+0x374>
mov    -0x8(%rbp),%r14
mov    -0x18(%rbp),%r15
mov    $0x1,%eax
leaveq 
retq   
lea    0x10(%r15),%rdi
movslq 0xc(%r14),%rsi
movslq -0x34(%rbp),%rcx
mov    $0x186a0,%edx
callq  8970 <png_muldiv>
test   %eax,%eax
jne    975d <png_XYZ_from_xy+0x39d>
mov    -0x8(%rbp),%r14
mov    -0x18(%rbp),%r15
mov    $0x1,%eax
leaveq 
retq   
movslq 0xc(%r14),%rax
add    0x8(%r14),%eax
mov    $0x186a0,%edx
mov    %rdx,%rsi
sub    %eax,%esi
lea    0x14(%r15),%rdi
movslq -0x34(%rbp),%rcx
callq  8970 <png_muldiv>
test   %eax,%eax
jne    978f <png_XYZ_from_xy+0x3cf>
mov    -0x8(%rbp),%r14
mov    -0x18(%rbp),%r15
mov    $0x1,%eax
leaveq 
retq   
lea    0x18(%r15),%rdi
movslq 0x10(%r14),%rsi
mov    -0x28(%rbp),%rdx
mov    $0x186a0,%ecx
callq  8970 <png_muldiv>
test   %eax,%eax
jne    97b8 <png_XYZ_from_xy+0x3f8>
mov    -0x8(%rbp),%r14
mov    -0x18(%rbp),%r15
mov    $0x1,%eax
leaveq 
retq   
lea    0x1c(%r15),%rdi
movslq 0x14(%r14),%rsi
mov    -0x28(%rbp),%rdx
mov    $0x186a0,%ecx
callq  8970 <png_muldiv>
test   %eax,%eax
jne    97e1 <png_XYZ_from_xy+0x421>
mov    -0x8(%rbp),%r14
mov    -0x18(%rbp),%r15
mov    $0x1,%eax
leaveq 
retq   
movslq 0x14(%r14),%rax
add    0x10(%r14),%eax
mov    $0x186a0,%ecx
mov    %rcx,%rsi
sub    %eax,%esi
lea    0x20(%r15),%rdi
mov    -0x28(%rbp),%rdx
callq  8970 <png_muldiv>
test   %eax,%eax
jne    9813 <png_XYZ_from_xy+0x453>
mov    -0x8(%rbp),%r14
mov    -0x18(%rbp),%r15
mov    $0x1,%eax
leaveq 
retq   
xor    %eax,%eax
mov    -0x8(%rbp),%r14
mov    -0x18(%rbp),%r15
leaveq 
retq   
nop

0000000000009820 <png_XYZ_normalize>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    $0x1,%eax
movslq 0x4(%rdi),%r10
test   %r10d,%r10d
jns    9838 <png_XYZ_normalize+0x18>
leaveq 
retq   
movslq 0x10(%rdi),%r9
test   %r9d,%r9d
jns    9843 <png_XYZ_normalize+0x23>
leaveq 
retq   
movslq 0x1c(%rdi),%r11
test   %r11d,%r11d
jns    984e <png_XYZ_normalize+0x2e>
leaveq 
retq   
movslq (%rdi),%rsi
test   %esi,%esi
jns    9857 <png_XYZ_normalize+0x37>
leaveq 
retq   
movslq 0xc(%rdi),%r8
test   %r8d,%r8d
jns    9862 <png_XYZ_normalize+0x42>
leaveq 
retq   
movslq 0x18(%rdi),%rdx
test   %edx,%edx
jns    986c <png_XYZ_normalize+0x4c>
leaveq 
retq   
movslq 0x8(%rdi),%rcx
test   %ecx,%ecx
jns    9876 <png_XYZ_normalize+0x56>
leaveq 
retq   
movslq 0x14(%rdi),%rcx
test   %ecx,%ecx
jns    9880 <png_XYZ_normalize+0x60>
leaveq 
retq   
movslq 0x20(%rdi),%rcx
test   %ecx,%ecx
jns    988a <png_XYZ_normalize+0x6a>
leaveq 
retq   
mov    %r10,%rcx
xor    $0x7fffffff,%ecx
cmp    %ecx,%r8d
jle    989a <png_XYZ_normalize+0x7a>
leaveq 
retq   
lea    (%r10,%r9,1),%r8d
mov    %r8,%rcx
xor    $0x7fffffff,%ecx
cmp    %ecx,%edx
jle    98ad <png_XYZ_normalize+0x8d>
leaveq 
retq   
xor    %eax,%eax
add    %r11d,%r8d
cmp    $0x186a0,%r8d
jne    98bd <png_XYZ_normalize+0x9d>
leaveq 
retq   
mov    $0x186a0,%edx
mov    %rdi,%rax
mov    %r8,%rcx
mov    %rdi,-0x10(%rbp)
mov    %r8,-0x8(%rbp)
mov    %rax,%rdi
callq  8970 <png_muldiv>
test   %eax,%eax
jne    98e3 <png_XYZ_normalize+0xc3>
mov    $0x1,%eax
leaveq 
retq   
mov    -0x10(%rbp),%rax
lea    0x4(%rax),%rdi
movslq 0x4(%rax),%rsi
mov    $0x186a0,%edx
mov    -0x8(%rbp),%rcx
callq  8970 <png_muldiv>
test   %eax,%eax
jne    9908 <png_XYZ_normalize+0xe8>
mov    $0x1,%eax
leaveq 
retq   
mov    -0x10(%rbp),%rax
lea    0x8(%rax),%rdi
movslq 0x8(%rax),%rsi
mov    $0x186a0,%edx
mov    -0x8(%rbp),%rcx
callq  8970 <png_muldiv>
test   %eax,%eax
jne    992d <png_XYZ_normalize+0x10d>
mov    $0x1,%eax
leaveq 
retq   
mov    -0x10(%rbp),%rax
lea    0xc(%rax),%rdi
movslq 0xc(%rax),%rsi
mov    $0x186a0,%edx
mov    -0x8(%rbp),%rcx
callq  8970 <png_muldiv>
test   %eax,%eax
jne    9952 <png_XYZ_normalize+0x132>
mov    $0x1,%eax
leaveq 
retq   
mov    -0x10(%rbp),%rax
lea    0x10(%rax),%rdi
movslq 0x10(%rax),%rsi
mov    $0x186a0,%edx
mov    -0x8(%rbp),%rcx
callq  8970 <png_muldiv>
test   %eax,%eax
jne    9977 <png_XYZ_normalize+0x157>
mov    $0x1,%eax
leaveq 
retq   
mov    -0x10(%rbp),%rax
lea    0x14(%rax),%rdi
movslq 0x14(%rax),%rsi
mov    $0x186a0,%edx
mov    -0x8(%rbp),%rcx
callq  8970 <png_muldiv>
test   %eax,%eax
jne    999c <png_XYZ_normalize+0x17c>
mov    $0x1,%eax
leaveq 
retq   
mov    -0x10(%rbp),%rax
lea    0x18(%rax),%rdi
movslq 0x18(%rax),%rsi
mov    $0x186a0,%edx
mov    -0x8(%rbp),%rcx
callq  8970 <png_muldiv>
test   %eax,%eax
jne    99c1 <png_XYZ_normalize+0x1a1>
mov    $0x1,%eax
leaveq 
retq   
mov    -0x10(%rbp),%rax
lea    0x1c(%rax),%rdi
movslq 0x1c(%rax),%rsi
mov    $0x186a0,%edx
mov    -0x8(%rbp),%rcx
callq  8970 <png_muldiv>
test   %eax,%eax
jne    99e6 <png_XYZ_normalize+0x1c6>
mov    $0x1,%eax
leaveq 
retq   
mov    -0x10(%rbp),%rax
lea    0x20(%rax),%rdi
movslq 0x20(%rax),%rsi
mov    $0x186a0,%edx
mov    -0x8(%rbp),%rcx
callq  8970 <png_muldiv>
test   %eax,%eax
jne    9a0b <png_XYZ_normalize+0x1eb>
mov    $0x1,%eax
leaveq 
retq   
xor    %eax,%eax
leaveq 
retq   
nop

0000000000009a10 <png_colorspace_endpoints_match>:
push   %rbp
mov    %rsp,%rbp
xor    %eax,%eax
movslq 0x18(%rsi),%r9
mov    %r9,%rcx
sub    %edx,%ecx
movslq 0x18(%rdi),%r8
cmp    %r8d,%ecx
jle    9a2a <png_colorspace_endpoints_match+0x1a>
leaveq 
retq   
lea    (%rdx,%r9,1),%ecx
cmp    %ecx,%r8d
jle    9a35 <png_colorspace_endpoints_match+0x25>
leaveq 
retq   
movslq 0x1c(%rsi),%r9
mov    %r9,%rcx
sub    %edx,%ecx
movslq 0x1c(%rdi),%r8
cmp    %r8d,%ecx
jle    9a49 <png_colorspace_endpoints_match+0x39>
leaveq 
retq   
lea    (%rdx,%r9,1),%ecx
cmp    %ecx,%r8d
jle    9a54 <png_colorspace_endpoints_match+0x44>
leaveq 
retq   
movslq (%rsi),%r9
mov    %r9,%rcx
sub    %edx,%ecx
movslq (%rdi),%r8
cmp    %r8d,%ecx
jle    9a66 <png_colorspace_endpoints_match+0x56>
leaveq 
retq   
lea    (%rdx,%r9,1),%ecx
cmp    %ecx,%r8d
jle    9a71 <png_colorspace_endpoints_match+0x61>
leaveq 
retq   
movslq 0x4(%rsi),%r9
mov    %r9,%rcx
sub    %edx,%ecx
movslq 0x4(%rdi),%r8
cmp    %r8d,%ecx
jle    9a85 <png_colorspace_endpoints_match+0x75>
leaveq 
retq   
lea    (%rdx,%r9,1),%ecx
cmp    %ecx,%r8d
jle    9a90 <png_colorspace_endpoints_match+0x80>
leaveq 
retq   
movslq 0x8(%rsi),%r9
mov    %r9,%rcx
sub    %edx,%ecx
movslq 0x8(%rdi),%r8
cmp    %r8d,%ecx
jle    9aa4 <png_colorspace_endpoints_match+0x94>
leaveq 
retq   
lea    (%rdx,%r9,1),%ecx
cmp    %ecx,%r8d
jle    9aaf <png_colorspace_endpoints_match+0x9f>
leaveq 
retq   
movslq 0xc(%rsi),%r9
mov    %r9,%rcx
sub    %edx,%ecx
movslq 0xc(%rdi),%r8
cmp    %r8d,%ecx
jle    9ac3 <png_colorspace_endpoints_match+0xb3>
leaveq 
retq   
lea    (%rdx,%r9,1),%ecx
cmp    %ecx,%r8d
jle    9ace <png_colorspace_endpoints_match+0xbe>
leaveq 
retq   
movslq 0x10(%rsi),%r8
mov    %r8,%rcx
sub    %edx,%ecx
movslq 0x10(%rdi),%r9
cmp    %r9d,%ecx
jle    9ae2 <png_colorspace_endpoints_match+0xd2>
leaveq 
retq   
lea    (%rdx,%r8,1),%ecx
cmp    %ecx,%r9d
jle    9aed <png_colorspace_endpoints_match+0xdd>
leaveq 
retq   
movslq 0x14(%rsi),%r8
mov    %r8,%rcx
sub    %edx,%ecx
movslq 0x14(%rdi),%rsi
cmp    %esi,%ecx
jle    9b00 <png_colorspace_endpoints_match+0xf0>
leaveq 
retq   
lea    (%rdx,%r8,1),%ecx
cmp    %ecx,%esi
jle    9b0a <png_colorspace_endpoints_match+0xfa>
leaveq 
retq   
mov    $0x1,%eax
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   0x0(%rax)

0000000000009b20 <png_colorspace_check_xy>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    %rdi,-0x10(%rbp)
mov    %rsi,-0x8(%rbp)
callq  93c0 <png_XYZ_from_xy>
test   %eax,%eax
je     9b3b <png_colorspace_check_xy+0x1b>
leaveq 
retq   
lea    -0x30(%rbp),%rdi
mov    -0x10(%rbp),%rsi
callq  91f0 <png_xy_from_XYZ>
test   %eax,%eax
je     9b4e <png_colorspace_check_xy+0x2e>
leaveq 
retq   
mov    $0x5,%edx
lea    -0x30(%rbp),%rsi
mov    -0x8(%rbp),%rdi
callq  9a10 <png_colorspace_endpoints_match>
test   %eax,%eax
je     9b68 <png_colorspace_check_xy+0x48>
xor    %eax,%eax
leaveq 
retq   
mov    $0x1,%eax
leaveq 
retq   
nop

0000000000009b70 <png_colorspace_check_XYZ>:
push   %rbp
mov    %rsp,%rbp
sub    $0x40,%rsp
mov    %rdi,-0x8(%rbp)
mov    %rsi,%rdi
mov    %rdi,-0x10(%rbp)
callq  9820 <png_XYZ_normalize>
test   %eax,%eax
je     9b8e <png_colorspace_check_XYZ+0x1e>
leaveq 
retq   
mov    -0x8(%rbp),%rdi
mov    -0x10(%rbp),%rax
mov    %rax,%rsi
mov    %r15,-0x10(%rbp)
mov    %rax,%r15
callq  91f0 <png_xy_from_XYZ>
test   %eax,%eax
je     9baf <png_colorspace_check_XYZ+0x3f>
mov    -0x10(%rbp),%r15
leaveq 
retq   
mov    (%r15),%rax
mov    %rax,-0x34(%rbp)
mov    0x8(%r15),%rax
mov    %rax,-0x2c(%rbp)
mov    0x10(%r15),%rax
mov    %rax,-0x24(%rbp)
mov    0x18(%r15),%rax
mov    %rax,-0x1c(%rbp)
mov    0x20(%r15),%eax
mov    %eax,-0x14(%rbp)
lea    -0x34(%rbp),%rdi
mov    -0x8(%rbp),%rsi
callq  9b20 <png_colorspace_check_xy>
mov    -0x10(%rbp),%r15
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

0000000000009bf0 <png_colorspace_set_xy_and_XYZ>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
xor    %eax,%eax
movzwl 0x4a(%rsi),%r10d
mov    %r10,%r9
and    $0x8000,%r9d
test   %r9d,%r9d
jle    9c10 <png_colorspace_set_xy_and_XYZ+0x20>
leaveq 
retq   
cmp    $0x1,%r8d
jle    9cb6 <png_colorspace_set_xy_and_XYZ+0xc6>
mov    %r14,%rax
mov    %rsi,%r14
mov    %rdx,%rdi
mov    (%rdi),%rdx
mov    %rdx,0x4(%r14)
mov    0x8(%rdi),%rdx
mov    %rdx,0xc(%r14)
mov    0x10(%rdi),%rdx
mov    %rdx,0x14(%r14)
mov    0x18(%rdi),%rdx
mov    %rdx,0x1c(%r14)
mov    (%rcx),%rdx
mov    %rdx,0x24(%r14)
mov    0x8(%rcx),%rdx
mov    %rdx,0x2c(%r14)
mov    0x10(%rcx),%rdx
mov    %rdx,0x34(%r14)
mov    0x18(%rcx),%rdx
mov    %rdx,0x3c(%r14)
movzwl 0x4a(%r14),%r8d
mov    %r8,%rdx
or     $0x2,%dx
mov    0x20(%rcx),%ecx
mov    %dx,0x4a(%r14)
mov    %ecx,0x44(%r14)
lea    0x22d0c(%rip),%rsi        # 2c98c <sRGB_xy>
mov    $0x3e8,%edx
mov    %rax,-0x28(%rbp)
mov    %r15,-0x30(%rbp)
mov    %r8,%r15
callq  9a10 <png_colorspace_endpoints_match>
test   %eax,%eax
jne    9cce <png_colorspace_set_xy_and_XYZ+0xde>
and    $0xffbd,%r15w
lea    0x2(%r15),%eax
mov    %ax,0x4a(%r14)
mov    $0x2,%eax
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
leaveq 
retq   
mov    %r10,%rax
and    $0x2,%eax
test   %eax,%eax
jg     9ce7 <png_colorspace_set_xy_and_XYZ+0xf7>
mov    %r14,%rax
mov    %rsi,%r14
mov    %rdx,%rdi
jmpq   9c23 <png_colorspace_set_xy_and_XYZ+0x33>
or     $0x42,%r15w
mov    %r15w,0x4a(%r14)
mov    $0x2,%eax
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
leaveq 
retq   
lea    0x4(%rsi),%rax
mov    $0x64,%r9d
mov    %rdx,%r11
mov    %r13,-0x10(%rbp)
mov    %r14,-0x18(%rbp)
mov    %r15,-0x20(%rbp)
mov    %rdx,-0x30(%rbp)
mov    %rdi,-0x8(%rbp)
mov    %rcx,-0x28(%rbp)
mov    %r9,%rdx
mov    %r11,%rdi
mov    %r10,%r13
mov    %rsi,%r14
mov    %rax,%rsi
mov    %r8,%r15
callq  9a10 <png_colorspace_endpoints_match>
test   %eax,%eax
je     9d45 <png_colorspace_set_xy_and_XYZ+0x155>
test   %r15d,%r15d
je     9d70 <png_colorspace_set_xy_and_XYZ+0x180>
mov    -0x28(%rbp),%rcx
mov    -0x30(%rbp),%rdi
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%rax
mov    -0x10(%rbp),%r13
jmpq   9c23 <png_colorspace_set_xy_and_XYZ+0x33>
or     $0x8000,%r13w
mov    %r13w,0x4a(%r14)
lea    0x2363a(%rip),%rsi        # 2d391 <short_months.6+0x8bc>
mov    -0x8(%rbp),%rdi
callq  5590 <png_benign_error@plt>
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
xor    %eax,%eax
leaveq 
retq   
mov    $0x1,%eax
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

0000000000009d90 <png_icc_tag_char>:
push   %rbp
mov    %rsp,%rbp
mov    $0x3f,%eax
movzbl %dil,%ecx
cmp    $0x1f,%ecx
ja     9da4 <png_icc_tag_char+0x14>
leaveq 
retq   
cmp    $0x7e,%ecx
jbe    9dab <png_icc_tag_char+0x1b>
leaveq 
retq   
mov    %rcx,%rax
leaveq 
retq   

0000000000009db0 <png_icc_tag_name>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %r14,-0x18(%rbp)
mov    %r15,-0x20(%rbp)
mov    %r13,-0x10(%rbp)
mov    %r12,-0x8(%rbp)
mov    %rbx,%r12
mov    %rsi,%rbx
mov    %rdi,%r13
mov    %rbx,%rdi
callq  9d90 <png_icc_tag_char>
mov    %rax,%r14
mov    %rbx,%rdi
shr    $0x8,%edi
callq  9d90 <png_icc_tag_char>
mov    %rax,%r15
mov    %rbx,%rdi
shr    $0x10,%edi
callq  9d90 <png_icc_tag_char>
movb   $0x27,0x0(%r13)
shr    $0x18,%ebx
mov    %rbx,%rdi
mov    %rax,%rbx
callq  9d90 <png_icc_tag_char>
mov    %al,0x1(%r13)
mov    %bl,0x2(%r13)
mov    %r15b,0x3(%r13)
mov    %r14b,0x4(%r13)
movb   $0x27,0x5(%r13)
mov    %r12,%rbx
mov    -0x8(%rbp),%r12
mov    -0x10(%rbp),%r13
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   (%rax)

0000000000009e40 <is_ICC_signature_char>:
push   %rbp
mov    %rsp,%rbp
mov    $0x1,%eax
cmp    $0x20,%rdi
jne    9e51 <is_ICC_signature_char+0x11>
leaveq 
retq   
cmp    $0x2f,%rdi
ja     9e6a <is_ICC_signature_char+0x2a>
cmp    $0x40,%rdi
ja     9e72 <is_ICC_signature_char+0x32>
xor    %ecx,%ecx
cmp    $0x60,%rdi
ja     9e7a <is_ICC_signature_char+0x3a>
mov    %rcx,%rax
leaveq 
retq   
cmp    $0x39,%rdi
ja     9e57 <is_ICC_signature_char+0x17>
leaveq 
retq   
cmp    $0x5a,%rdi
ja     9e5d <is_ICC_signature_char+0x1d>
leaveq 
retq   
cmp    $0x7a,%rdi
ja     9e82 <is_ICC_signature_char+0x42>
leaveq 
retq   
mov    %rcx,%rax
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

0000000000009e90 <is_ICC_signature>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %rdi,-0x8(%rbp)
shr    $0x18,%rdi
callq  9e40 <is_ICC_signature_char>
test   %eax,%eax
jne    9ead <is_ICC_signature+0x1d>
xor    %eax,%eax
leaveq 
retq   
mov    -0x8(%rbp),%rdi
and    $0xff0000,%rdi
shr    $0x10,%rdi
callq  9e40 <is_ICC_signature_char>
test   %eax,%eax
jne    9ec9 <is_ICC_signature+0x39>
xor    %eax,%eax
leaveq 
retq   
mov    -0x8(%rbp),%rdi
and    $0xff00,%rdi
shr    $0x8,%rdi
callq  9e40 <is_ICC_signature_char>
test   %eax,%eax
jne    9ee5 <is_ICC_signature+0x55>
xor    %eax,%eax
leaveq 
retq   
mov    -0x8(%rbp),%rax
movzbl %al,%edi
callq  9e40 <is_ICC_signature_char>
test   %eax,%eax
je     9efc <is_ICC_signature+0x6c>
mov    $0x1,%eax
leaveq 
retq   
xor    %eax,%eax
leaveq 
retq   

0000000000009f00 <png_icc_profile_error>:
push   %rbp
mov    %rsp,%rbp
sub    $0x110,%rsp
mov    %rbx,-0x10(%rbp)
mov    %r12,-0x18(%rbp)
mov    %r13,-0x20(%rbp)
mov    %r14,-0x28(%rbp)
mov    %r15,-0x30(%rbp)
mov    %rdi,-0x8(%rbp)
test   %rsi,%rsi
je     9f34 <png_icc_profile_error+0x34>
movzwl 0x4a(%rsi),%eax
or     $0x8000,%ax
mov    %ax,0x4a(%rsi)
mov    %r8,%rbx
mov    %rsi,%r12
mov    %rdx,%r13
mov    %rcx,%r14
lea    -0x10c(%rbp),%rdi
mov    $0xc4,%esi
xor    %edx,%edx
lea    0x23458(%rip),%rcx        # 2d3ad <short_months.6+0x8d8>
callq  ad20 <png_safecat>
mov    %rax,%r15
mov    %r14,%rdi
callq  9e90 <is_ICC_signature>
mov    %r13,%rcx
mov    %r15,%rdx
mov    %rax,%r15
lea    0x4f(%rdx),%rsi
lea    -0x10c(%rbp),%r13
mov    %r13,%rdi
callq  ad20 <png_safecat>
mov    %rax,%rdx
lea    0x2342c(%rip),%rcx        # 2d3b7 <short_months.6+0x8e2>
mov    %r13,%rdi
mov    $0xc4,%esi
callq  ad20 <png_safecat>
test   %r15d,%r15d
jne    9fe6 <png_icc_profile_error+0xe6>
mov    %r14,%rcx
mov    %rax,%r15
lea    -0x48(%rbp),%rdi
lea    -0x30(%rbp),%rsi
mov    $0x3,%edx
callq  ad70 <png_format_number>
mov    %rax,%rcx
mov    %r15,%rdx
mov    %r13,%rdi
mov    $0xc4,%r14d
mov    %r14,%rsi
callq  ad20 <png_safecat>
mov    %rax,%rdx
lea    0x233e5(%rip),%rcx        # 2d3bb <short_months.6+0x8e6>
mov    %r13,%rdi
mov    %r14,%rsi
callq  ad20 <png_safecat>
mov    %rax,%rdx
jmp    a014 <png_icc_profile_error+0x114>
mov    %r14,%rsi
mov    %rax,%r14
lea    -0x10c(%rbp,%r14,1),%r15
mov    %r15,%rdi
callq  9db0 <png_icc_tag_name>
movb   $0x3a,-0x106(%rbp,%r14,1)
movb   $0x20,0x7(%r15)
lea    0x8(%r14),%rdx
mov    $0xc4,%r14d
mov    %rbx,%rcx
mov    %r14,%rsi
mov    %r13,%rdi
callq  ad20 <png_safecat>
test   %r12,%r12
jne    a02e <png_icc_profile_error+0x12e>
mov    $0x1,%edx
jmp    a033 <png_icc_profile_error+0x133>
mov    $0x2,%edx
mov    %r13,%rsi
mov    -0x8(%rbp),%rdi
callq  b130 <png_chunk_report>
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
mov    -0x10(%rbp),%rbx
xor    %eax,%eax
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

000000000000a060 <icc_check_length>:
push   %rbp
mov    %rsp,%rbp
cmp    $0x83,%ecx
jbe    a073 <icc_check_length+0x13>
mov    $0x1,%eax
leaveq 
retq   
mov    %ecx,%ecx
lea    0x23343(%rip),%r8        # 2d3bf <short_months.6+0x8ea>
callq  9f00 <png_icc_profile_error>
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

000000000000a090 <png_compare_ICC_profile_with_sRGB>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
xor    %eax,%eax
mov    0x388(%rdi),%ecx
and    $0x30,%ecx
cmp    $0x30,%ecx
jne    a0aa <png_compare_ICC_profile_with_sRGB+0x1a>
leaveq 
retq   
lea    0x22907(%rip),%r11        # 2c9b8 <png_sRGB_checks>
mov    $0x10000,%ecx
mov    %rdx,-0x20(%rbp)
mov    %r14,-0x10(%rbp)
mov    %r15,-0x18(%rbp)
mov    %rax,%r8
mov    %r8,%r10
jmp    a104 <png_compare_ICC_profile_with_sRGB+0x74>
mov    %r10d,%r14d
shl    $0x5,%r14
mov    0xc(%r11,%r14,1),%r15d
movzbl 0x54(%rsi),%r9d
shl    $0x18,%r9d
movzbl 0x55(%rsi),%edx
shl    $0x10,%edx
add    %edx,%r9d
movzbl 0x56(%rsi),%edx
shl    $0x8,%edx
add    %r9d,%edx
movzbl 0x57(%rsi),%r9d
add    %r9d,%edx
cmp    %edx,%r15d
je     a114 <png_compare_ICC_profile_with_sRGB+0x84>
add    $0x1,%r10d
cmp    $0x6,%r10d
jbe    a0ca <png_compare_ICC_profile_with_sRGB+0x3a>
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
leaveq 
retq   
mov    0x10(%r11,%r14,1),%r15d
movzbl 0x58(%rsi),%edx
shl    $0x18,%edx
movzbl 0x59(%rsi),%r9d
shl    $0x10,%r9d
add    %edx,%r9d
movzbl 0x5a(%rsi),%edx
shl    $0x8,%edx
add    %r9d,%edx
movzbl 0x5b(%rsi),%r9d
add    %r9d,%edx
cmp    %edx,%r15d
jne    a100 <png_compare_ICC_profile_with_sRGB+0x70>
mov    0x14(%r11,%r14,1),%r15d
movzbl 0x5c(%rsi),%r9d
shl    $0x18,%r9d
movzbl 0x5d(%rsi),%edx
shl    $0x10,%edx
add    %edx,%r9d
movzbl 0x5e(%rsi),%edx
shl    $0x8,%edx
add    %r9d,%edx
movzbl 0x5f(%rsi),%r9d
add    %r9d,%edx
cmp    %edx,%r15d
jne    a100 <png_compare_ICC_profile_with_sRGB+0x70>
mov    0x18(%r11,%r14,1),%r15d
movzbl 0x60(%rsi),%r9d
shl    $0x18,%r9d
movzbl 0x61(%rsi),%edx
shl    $0x10,%edx
add    %edx,%r9d
movzbl 0x62(%rsi),%edx
shl    $0x8,%edx
add    %r9d,%edx
movzbl 0x63(%rsi),%r9d
add    %r9d,%edx
cmp    %edx,%r15d
jne    a100 <png_compare_ICC_profile_with_sRGB+0x70>
test   %r8d,%r8d
jne    a1e9 <png_compare_ICC_profile_with_sRGB+0x159>
movzbl (%rsi),%ecx
shl    $0x18,%ecx
movzbl 0x1(%rsi),%edx
shl    $0x10,%edx
add    %ecx,%edx
movzbl 0x2(%rsi),%ecx
shl    $0x8,%ecx
add    %edx,%ecx
movzbl 0x3(%rsi),%edx
lea    (%rdx,%rcx,1),%r8d
movzbl 0x40(%rsi),%edx
shl    $0x18,%edx
movzbl 0x41(%rsi),%ecx
shl    $0x10,%ecx
add    %ecx,%edx
movzbl 0x42(%rsi),%ecx
shl    $0x8,%ecx
add    %edx,%ecx
movzbl 0x43(%rsi),%edx
add    %edx,%ecx
mov    0x8(%r11,%r14,1),%edx
cmp    %r8d,%edx
jne    a100 <png_compare_ICC_profile_with_sRGB+0x70>
movzwl 0x1e(%r11,%r14,1),%r8d
cmp    %ecx,%r8d
je     a20a <png_compare_ICC_profile_with_sRGB+0x17a>
mov    %rdx,%r8
jmpq   a100 <png_compare_ICC_profile_with_sRGB+0x70>
mov    -0x20(%rbp),%rcx
test   %rcx,%rcx
je     a218 <png_compare_ICC_profile_with_sRGB+0x188>
mov    %rdi,%r15
jmp    a265 <png_compare_ICC_profile_with_sRGB+0x1d5>
mov    %rax,%r8
mov    %rax,%rcx
mov    %r12,-0x8(%rbp)
mov    %r13,-0x20(%rbp)
mov    %rdx,%r12
mov    %rcx,%rdx
mov    %rsi,%r13
mov    %r8,%rsi
mov    %rdi,%r15
mov    %rax,%rdi
callq  5550 <adler32@plt>
mov    %rax,%rdi
mov    %r13,%rsi
mov    %r12,%rdx
callq  5550 <adler32@plt>
mov    %rax,%rcx
mov    %r12,%rdx
mov    %r13,%rsi
xor    %eax,%eax
lea    0x2275b(%rip),%r11        # 2c9b8 <png_sRGB_checks>
mov    -0x20(%rbp),%r13
mov    -0x8(%rbp),%r12
mov    (%r14,%r11,1),%edi
cmp    %rcx,%rdi
je     a290 <png_compare_ICC_profile_with_sRGB+0x200>
mov    %r15,%rdi
mov    %rax,%r14
lea    0x23196(%rip),%rsi        # 2d411 <short_months.6+0x93c>
mov    %r14,%rdx
callq  b130 <png_chunk_report>
mov    %r14,%rax
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
leaveq 
retq   
mov    %rax,%rdi
mov    %rax,%rcx
mov    %r12,-0x8(%rbp)
mov    %r13,-0x20(%rbp)
mov    %rdx,%r12
mov    %rcx,%rdx
mov    %rsi,%r13
mov    %rdi,%rsi
mov    %rax,%rdi
callq  51c0 <crc32@plt>
mov    %r12,%rdx
mov    %r13,%rsi
mov    %rax,%rdi
callq  51c0 <crc32@plt>
lea    0x226f1(%rip),%r12        # 2c9b8 <png_sRGB_checks>
mov    0x4(%r12,%r14,1),%ecx
cmp    %rax,%rcx
je     a2dd <png_compare_ICC_profile_with_sRGB+0x24d>
xor    %eax,%eax
mov    -0x20(%rbp),%r13
mov    -0x8(%rbp),%r12
jmp    a26e <png_compare_ICC_profile_with_sRGB+0x1de>
movzbl 0x1d(%r12,%r14,1),%eax
test   %al,%al
jne    a304 <png_compare_ICC_profile_with_sRGB+0x274>
movzbl 0x1c(%r12,%r14,1),%eax
test   %al,%al
jne    a318 <png_compare_ICC_profile_with_sRGB+0x288>
mov    %r15,%rdi
lea    0x230eb(%rip),%rsi        # 2d3e6 <short_months.6+0x911>
xor    %edx,%edx
callq  b130 <png_chunk_report>
jmp    a318 <png_compare_ICC_profile_with_sRGB+0x288>
mov    %r15,%rdi
lea    0x230bb(%rip),%rsi        # 2d3c9 <short_months.6+0x8f4>
mov    $0x2,%edx
callq  b130 <png_chunk_report>
movzbl 0x1d(%r12,%r14,1),%eax
add    $0x1,%eax
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
mov    -0x20(%rbp),%r13
mov    -0x8(%rbp),%r12
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

000000000000a340 <png_gt>:
push   %rbp
mov    %rsp,%rbp
cmp    %rdi,%rsi
jae    a350 <png_gt+0x10>
mov    $0x1,%eax
leaveq 
retq   
xor    %eax,%eax
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nop

000000000000a360 <png_pow10>:
push   %rbp
mov    %rsp,%rbp
test   %edi,%edi
js     a384 <png_pow10+0x24>
xor    %eax,%eax
movsd  0x23106(%rip),%xmm2        # 2d478 <short_months.6+0x9a3>
test   %edi,%edi
jle    a392 <png_pow10+0x32>
movsd  0x230f2(%rip),%xmm1        # 2d470 <short_months.6+0x99b>
movapd %xmm2,%xmm0
jmp    a39c <png_pow10+0x3c>
cmp    $0xfffffecd,%edi
jge    a3b6 <png_pow10+0x56>
xorpd  %xmm0,%xmm0
leaveq 
retq   
movapd %xmm2,%xmm0
leaveq 
retq   
mulsd  %xmm1,%xmm1
mov    %rdi,%rcx
and    $0x1,%ecx
test   %ecx,%ecx
jle    a3aa <png_pow10+0x4a>
mulsd  %xmm1,%xmm0
sar    %edi
test   %edi,%edi
jg     a398 <png_pow10+0x38>
test   %eax,%eax
jg     a3bf <png_pow10+0x5f>
leaveq 
retq   
neg    %edi
mov    $0x1,%eax
jmp    a36a <png_pow10+0xa>
divsd  %xmm0,%xmm2
movapd %xmm2,%xmm0
leaveq 
retq   
nopl   0x0(%rax)

000000000000a3d0 <png_product2>:
push   %rbp
mov    %rsp,%rbp
cvtsi2sd %edi,%xmm1
movsd  0x230d8(%rip),%xmm0        # 2d4b8 <short_months.6+0x9e3>
mulsd  %xmm0,%xmm1
cvtsi2sd %esi,%xmm0
mulsd  %xmm1,%xmm0
movsd  0x23064(%rip),%xmm1        # 2d458 <short_months.6+0x983>
addsd  %xmm1,%xmm0
callq  57e0 <floor@plt>
movsd  0x23063(%rip),%xmm1        # 2d468 <short_months.6+0x993>
ucomisd %xmm1,%xmm0
jp     a40d <png_product2+0x3d>
jbe    a411 <png_product2+0x41>
xor    %eax,%eax
leaveq 
retq   
movsd  0x23047(%rip),%xmm1        # 2d460 <short_months.6+0x98b>
ucomisd %xmm1,%xmm0
jae    a423 <png_product2+0x53>
xor    %eax,%eax
leaveq 
retq   
cvttsd2si %xmm0,%eax
leaveq 
retq   
nopl   0x0(%rax)

000000000000a430 <png_build_16bit_table>:
push   %rbp
mov    %rsp,%rbp
sub    $0x80,%rsp
mov    %r12,-0x50(%rbp)
mov    %r13,-0x58(%rbp)
mov    %r14,-0x60(%rbp)
mov    %r15,-0x68(%rbp)
mov    %rdx,-0x70(%rbp)
mov    %rbx,-0x48(%rbp)
mov    %rsi,%rbx
mov    %rdi,%r12
mov    %rcx,%r13
mov    %rdx,%r14
mov    %r12,-0x40(%rbp)
mov    %r13,%rdi
callq  8b10 <png_gamma_significant>
mov    %rax,-0x78(%rbp)
mov    $0x10,%ecx
sub    %r14d,%ecx
mov    %r13,%rdx
mov    %rax,%r13
mov    $0x1,%r15d
mov    %r15,%rax
shl    %cl,%eax
add    $0xffffffff,%eax
mov    %rax,-0x30(%rbp)
cvtsi2sd %eax,%xmm1
movsd  0x22fdd(%rip),%xmm0        # 2d478 <short_months.6+0x9a3>
divsd  %xmm1,%xmm0
movdqu %xmm0,-0x10(%rbp)
cvtsi2sd %edx,%xmm0
movsd  0x23008(%rip),%xmm1        # 2d4b8 <short_months.6+0x9e3>
mulsd  %xmm1,%xmm0
movdqu %xmm0,-0x20(%rbp)
mov    $0xf,%ecx
sub    %r14d,%ecx
mov    %r15,%rax
shl    %cl,%eax
mov    %rax,-0x38(%rbp)
mov    $0x8,%ecx
sub    %r14d,%ecx
shl    %cl,%r15d
mov    %r15,-0x80(%rbp)
mov    %r15d,%esi
shl    $0x3,%rsi
mov    %rcx,%r14
mov    %r12,%rdi
callq  5780 <png_calloc@plt>
mov    %rax,-0x28(%rbp)
mov    %rax,(%rbx)
mov    %r14,%rcx
mov    %rax,%r14
mov    %r12,%rdi
mov    $0x200,%esi
xor    %ebx,%ebx
mov    -0x70(%rbp),%r12
jmp    a57f <png_build_16bit_table+0x14f>
mov    %r14,%rax
shl    %cl,%eax
add    %ebx,%eax
mov    %eax,%eax
cvtsi2sd %rax,%xmm0
mov    %rcx,%r15
mulsd  %xmm2,%xmm0
callq  5360 <pow@plt>
movsd  0x22f86(%rip),%xmm1        # 2d4b0 <short_months.6+0x9db>
mulsd  %xmm1,%xmm0
movsd  0x22f22(%rip),%xmm1        # 2d458 <short_months.6+0x983>
addsd  %xmm1,%xmm0
callq  57e0 <floor@plt>
cvttsd2si %xmm0,%rcx
mov    %r14d,%eax
mov    %cx,0x0(%r13,%rax,2)
add    $0x1,%r14d
mov    %r15,%rcx
movdqu -0x20(%rbp),%xmm1
movdqu -0x10(%rbp),%xmm2
cmp    $0xff,%r14d
jbe    a508 <png_build_16bit_table+0xd8>
mov    -0x28(%rbp),%r14
mov    -0x78(%rbp),%r13
add    $0x1,%ebx
mov    $0x200,%esi
mov    -0x40(%rbp),%rdi
mov    -0x80(%rbp),%r15
cmp    %r15d,%ebx
jb     a59a <png_build_16bit_table+0x16a>
mov    -0x48(%rbp),%rbx
mov    -0x68(%rbp),%r15
mov    -0x60(%rbp),%r14
mov    -0x58(%rbp),%r13
mov    -0x50(%rbp),%r12
leaveq 
retq   
mov    %rcx,%r15
callq  5800 <png_malloc@plt>
test   %r13d,%r13d
mov    %ebx,%ecx
mov    %rax,(%r14,%rcx,8)
je     a5c2 <png_build_16bit_table+0x192>
mov    %r15,%rcx
mov    %rax,%r13
xor    %r14d,%r14d
movdqu -0x20(%rbp),%xmm1
movdqu -0x10(%rbp),%xmm2
jmp    a55e <png_build_16bit_table+0x12e>
mov    %r15,%rcx
mov    %rax,%r15
xor    %esi,%esi
mov    -0x30(%rbp),%rdi
mov    -0x38(%rbp),%r8
jmp    a5fb <png_build_16bit_table+0x1cb>
mov    %rsi,%rax
shl    %cl,%eax
test   %r12d,%r12d
lea    (%rbx,%rax,1),%eax
je     a5f1 <png_build_16bit_table+0x1c1>
mov    %rax,%rdx
shl    $0x10,%edx
sub    %eax,%edx
lea    (%r8,%rdx,1),%eax
xor    %edx,%edx
div    %edi
mov    %esi,%edx
mov    %ax,(%r15,%rdx,2)
add    $0x1,%esi
cmp    $0xff,%esi
jbe    a5d4 <png_build_16bit_table+0x1a4>
jmpq   a56f <png_build_16bit_table+0x13f>
nopl   0x0(%rax,%rax,1)

000000000000a610 <png_build_16to8_table>:
push   %rbp
mov    %rsp,%rbp
sub    $0x40,%rsp
mov    %rcx,-0x30(%rbp)
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rdx,-0x40(%rbp)
mov    $0x8,%ecx
sub    %edx,%ecx
mov    %rsi,%rbx
mov    %rdi,%r13
mov    $0x1,%r12d
shl    %cl,%r12d
mov    %rcx,-0x38(%rbp)
mov    %r12d,%esi
shl    $0x3,%rsi
mov    %r13,%rdi
callq  5780 <png_calloc@plt>
mov    %rax,(%rbx)
mov    %rax,%rbx
mov    $0x200,%r15d
xor    %r14d,%r14d
jmp    a684 <png_build_16to8_table+0x74>
mov    %r13,%rdi
mov    %r15,%rsi
callq  5800 <png_malloc@plt>
mov    %r14d,%ecx
mov    %rax,(%rbx,%rcx,8)
add    $0x1,%r14d
cmp    %r12d,%r14d
jb     a66e <png_build_16to8_table+0x5e>
mov    $0xff,%r12d
mov    -0x40(%rbp),%rcx
shr    %cl,%r12d
mov    %rcx,%rax
mov    $0x10,%ecx
sub    %eax,%ecx
mov    $0x1,%eax
shl    %cl,%eax
lea    -0x1(%rax),%r14d
mov    -0x38(%rbp),%rcx
xor    %r13d,%r13d
mov    -0x30(%rbp),%rsi
mov    %r13,%rax
jmp    a6e5 <png_build_16to8_table+0xd5>
mov    %r13,%rdi
and    %r12d,%edi
mov    %edi,%edi
mov    (%rbx,%rdi,8),%rdi
mov    %r13,%r8
shr    %cl,%r8d
mov    %r8d,%r8d
mov    %dx,(%rdi,%r8,2)
add    $0x1,%r13d
cmp    %esi,%r13d
jb     a6bb <png_build_16to8_table+0xab>
add    $0x1,%eax
mov    -0x30(%rbp),%rsi
cmp    $0xfe,%eax
jbe    a6f5 <png_build_16to8_table+0xe5>
mov    $0x100,%eax
shl    %cl,%eax
jmp    a75a <png_build_16to8_table+0x14a>
mov    %rax,%rdx
shl    $0x8,%edx
add    %eax,%edx
mov    %rdx,-0x38(%rbp)
movzwl %dx,%edx
lea    0x80(%rdx),%edi
mov    %rax,-0x40(%rbp)
mov    %rcx,%r15
callq  8b70 <png_gamma_16bit_correct>
movzwl %ax,%eax
imul   %r14d,%eax
lea    0x8000(%rax),%edx
mov    %r15,%rcx
mov    $0x80008001,%eax
mul    %edx
shr    $0xf,%edx
lea    0x1(%rdx),%esi
mov    -0x40(%rbp),%rax
mov    -0x38(%rbp),%rdx
jmp    a6d9 <png_build_16to8_table+0xc9>
mov    %r12,%rdx
and    %r13d,%edx
mov    %edx,%edx
mov    (%rbx,%rdx,8),%rdx
mov    %r13,%rsi
shr    %cl,%esi
mov    %esi,%esi
movw   $0xffff,(%rdx,%rsi,2)
add    $0x1,%r13d
cmp    %r13d,%eax
ja     a73d <png_build_16to8_table+0x12d>
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)

000000000000a780 <png_build_8bit_table>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %r13,-0x8(%rbp)
mov    %r14,-0x10(%rbp)
mov    %r15,-0x18(%rbp)
mov    %rsi,%r13
mov    %rdx,%r14
mov    %rdi,%r15
mov    %r14,%rdi
callq  8b10 <png_gamma_significant>
mov    %r15,%rdi
mov    %rax,%r15
mov    $0x100,%esi
callq  5800 <png_malloc@plt>
mov    %rax,0x0(%r13)
xor    %r13d,%r13d
test   %r15d,%r15d
je     a7d1 <png_build_8bit_table+0x51>
mov    %rax,%r15
jmp    a7fe <png_build_8bit_table+0x7e>
mov    %r13d,%ecx
mov    %r13b,(%rax,%rcx,1)
add    $0x1,%r13d
cmp    $0xff,%r13d
jbe    a7c6 <png_build_8bit_table+0x46>
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
leaveq 
retq   
mov    %r13,%rdi
mov    %r14,%rsi
callq  8be0 <png_gamma_8bit_correct>
mov    %r13d,%ecx
mov    %al,(%r15,%rcx,1)
add    $0x1,%r13d
cmp    $0xff,%r13d
jbe    a7e8 <png_build_8bit_table+0x68>
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)

000000000000a820 <png_image_free_function>:
push   %rbp
mov    %rsp,%rbp
sub    $0x40,%rsp
xor    %eax,%eax
mov    (%rdi),%rsi
mov    (%rsi),%rdx
test   %rdx,%rdx
jne    a837 <png_image_free_function+0x17>
leaveq 
retq   
mov    0x28(%rsi),%eax
mov    %rax,%rcx
and    $0x2,%ecx
test   %ecx,%ecx
jg     a8a2 <png_image_free_function+0x82>
lea    -0x40(%rbp),%rcx
mov    (%rsi),%rax
mov    %rax,(%rcx)
mov    0x8(%rsi),%rax
mov    %rax,0x8(%rcx)
mov    0x10(%rsi),%rax
mov    %rax,0x10(%rcx)
mov    0x18(%rsi),%rax
mov    %rax,0x18(%rcx)
mov    0x20(%rsi),%rax
mov    %rax,0x20(%rcx)
mov    0x28(%rsi),%rax
mov    %rax,0x28(%rcx)
mov    %rcx,(%rdi)
mov    (%rcx),%rdi
callq  5790 <png_free@plt>
lea    -0x40(%rbp),%rdi
lea    0x8(%rdi),%rsi
movslq 0x28(%rdi),%rax
and    $0x1,%eax
test   %eax,%eax
jg     a8e8 <png_image_free_function+0xc8>
xor    %edx,%edx
callq  54b0 <png_destroy_read_struct@plt>
mov    $0x1,%eax
leaveq 
retq   
and    $0xfffffffd,%eax
mov    0x108(%rdx),%rcx
mov    %eax,0x28(%rsi)
test   %rcx,%rcx
je     a844 <png_image_free_function+0x24>
movq   $0x0,0x108(%rdx)
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rdi,%r14
mov    %rcx,%rdi
mov    %rsi,%r15
callq  5240 <fclose@plt>
mov    %r15,%rsi
mov    %r14,%rdi
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
jmpq   a844 <png_image_free_function+0x24>
callq  56f0 <png_destroy_write_struct@plt>
mov    $0x1,%eax
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

000000000000a900 <png_set_longjmp_fn>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
xor    %eax,%eax
test   %rdi,%rdi
jne    a911 <png_set_longjmp_fn+0x11>
leaveq 
retq   
mov    0xd0(%rdi),%rcx
test   %rcx,%rcx
je     a93e <png_set_longjmp_fn+0x3e>
mov    0xd8(%rdi),%rax
test   %rax,%rax
je     a986 <png_set_longjmp_fn+0x86>
cmp    %rax,%rdx
je     a999 <png_set_longjmp_fn+0x99>
lea    0x22bd6(%rip),%rsi        # 2d50b <png_digit+0x2f>
callq  5390 <png_warning@plt>
xor    %eax,%eax
leaveq 
retq   
movq   $0x0,0xd8(%rdi)
cmp    $0xc8,%rdx
jbe    a992 <png_set_longjmp_fn+0x92>
mov    %rdi,%rax
mov    %rdx,%rcx
mov    %r15,-0x18(%rbp)
mov    %rdx,-0x10(%rbp)
mov    %rsi,-0x8(%rbp)
mov    %rcx,%rsi
mov    %rdi,%r15
mov    %rax,%rdi
callq  5150 <png_malloc_warn@plt>
mov    %rax,0xd0(%r15)
test   %rax,%rax
jne    a9a9 <png_set_longjmp_fn+0xa9>
mov    -0x18(%rbp),%r15
xor    %eax,%eax
leaveq 
retq   
cmp    %rcx,%rdi
jne    a9c1 <png_set_longjmp_fn+0xc1>
mov    $0xc8,%eax
jmp    a929 <png_set_longjmp_fn+0x29>
mov    %rdi,0xd0(%rdi)
mov    %rsi,0xc8(%rdi)
mov    0xd0(%rdi),%rax
leaveq 
retq   
mov    -0x10(%rbp),%rax
mov    %rax,0xd8(%r15)
mov    %r15,%rdi
mov    -0x8(%rbp),%rsi
mov    -0x18(%rbp),%r15
jmp    a999 <png_set_longjmp_fn+0x99>
lea    0x22b24(%rip),%rsi        # 2d4ec <png_digit+0x10>
callq  5470 <png_error@plt>
nopl   (%rax)

000000000000a9d0 <png_longjmp>:
push   %rbp
mov    %rsp,%rbp
test   %rdi,%rdi
jne    a9de <png_longjmp+0xe>
callq  5090 <abort@plt>
mov    0xc8(%rdi),%rax
test   %rax,%rax
je     a9d9 <png_longjmp+0x9>
mov    0xd0(%rdi),%rdi
test   %rdi,%rdi
je     a9d9 <png_longjmp+0x9>
callq  *%rax
jmp    a9d9 <png_longjmp+0x9>
nopw   0x0(%rax,%rax,1)

000000000000aa00 <png_set_error_fn>:
push   %rbp
mov    %rsp,%rbp
test   %rdi,%rdi
jne    aa0b <png_set_error_fn+0xb>
leaveq 
retq   
mov    %rsi,0xf0(%rdi)
mov    %rdx,0xe0(%rdi)
mov    %rcx,0xe8(%rdi)
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   (%rax)

000000000000aa30 <png_get_error_ptr>:
push   %rbp
mov    %rsp,%rbp
test   %rdi,%rdi
jne    aa3d <png_get_error_ptr+0xd>
xor    %eax,%eax
leaveq 
retq   
mov    0xf0(%rdi),%rax
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)

000000000000aa50 <png_error>:
push   %rbp
mov    %rsp,%rbp
test   %rdi,%rdi
jne    aa5e <png_error+0xe>
callq  b310 <png_default_error>
mov    0xe0(%rdi),%rax
test   %rax,%rax
je     aa59 <png_error+0x9>
mov    %rdi,%r12
mov    %rsi,%rbx
callq  *%rax
mov    %rbx,%rsi
mov    %r12,%rdi
jmp    aa59 <png_error+0x9>
nopw   0x0(%rax,%rax,1)

000000000000aa80 <png_chunk_error>:
push   %rbp
mov    %rsp,%rbp
sub    $0xe0,%rsp
test   %rdi,%rdi
je     aab0 <png_chunk_error+0x30>
mov    %rsi,%rdx
lea    -0xd6(%rbp),%rbx
mov    %rdi,%r12
mov    %rbx,%rsi
callq  b3b0 <png_format_buffer>
mov    %rbx,%rsi
mov    %r12,%rdi
callq  5470 <png_error@plt>
xor    %edi,%edi
callq  5470 <png_error@plt>
nopw   0x0(%rax,%rax,1)

000000000000aac0 <png_warning>:
push   %rbp
mov    %rsp,%rbp
xor    %eax,%eax
test   %rdi,%rdi
jne    aae0 <png_warning+0x20>
mov    %rax,%rcx
movslq %eax,%rdx
test   %rcx,%rcx
jne    aaf3 <png_warning+0x33>
add    %rdx,%rsi
callq  b370 <png_default_warning>
leaveq 
retq   
mov    $0x1,%ecx
movsbq (%rsi),%rdx
cmp    $0x23,%dl
jne    aace <png_warning+0xe>
mov    %rcx,%rax
jmp    ab16 <png_warning+0x56>
mov    0xe8(%rdi),%rax
test   %rax,%rax
je     aad6 <png_warning+0x16>
add    %rdx,%rsi
callq  *%rax
leaveq 
retq   
movslq %eax,%rdx
movsbq (%rsi,%rdx,1),%rdx
cmp    $0x20,%dl
je     aace <png_warning+0xe>
add    $0x1,%eax
cmp    $0xe,%eax
jle    ab06 <png_warning+0x46>
jmp    aace <png_warning+0xe>
nopl   (%rax)

000000000000ab20 <png_chunk_warning>:
push   %rbp
mov    %rsp,%rbp
sub    $0xe0,%rsp
test   %rdi,%rdi
je     ab64 <png_chunk_warning+0x44>
lea    -0xde(%rbp),%rax
mov    %rdi,%rcx
mov    %r15,-0x8(%rbp)
mov    %rsi,%rdx
mov    %rax,%rsi
mov    %rdi,%r15
mov    %rcx,%rdi
callq  b3b0 <png_format_buffer>
mov    %r15,%rdi
lea    -0xde(%rbp),%rsi
callq  5390 <png_warning@plt>
mov    -0x8(%rbp),%r15
leaveq 
retq   
xor    %edi,%edi
callq  5390 <png_warning@plt>
leaveq 
retq   
nopl   (%rax)

000000000000ab70 <png_benign_error>:
push   %rbp
mov    %rsp,%rbp
mov    0x130(%rdi),%eax
and    $0x100000,%eax
test   %eax,%eax
jne    ab97 <png_benign_error+0x27>
mov    0x12c(%rdi),%eax
and    $0x8000,%eax
test   %eax,%eax
jne    abad <png_benign_error+0x3d>
callq  5470 <png_error@plt>
mov    0x12c(%rdi),%eax
and    $0x8000,%eax
test   %eax,%eax
jne    abbc <png_benign_error+0x4c>
callq  5390 <png_warning@plt>
leaveq 
retq   
mov    0x218(%rdi),%eax
test   %eax,%eax
je     ab92 <png_benign_error+0x22>
callq  5060 <png_chunk_error@plt>
mov    0x218(%rdi),%eax
test   %eax,%eax
je     aba6 <png_benign_error+0x36>
callq  56a0 <png_chunk_warning@plt>
leaveq 
retq   
nopl   (%rax)

000000000000abd0 <png_chunk_benign_error>:
push   %rbp
mov    %rsp,%rbp
mov    0x130(%rdi),%eax
and    $0x100000,%eax
test   %eax,%eax
jne    abe8 <png_chunk_benign_error+0x18>
callq  5060 <png_chunk_error@plt>
callq  56a0 <png_chunk_warning@plt>
leaveq 
retq   
nop

000000000000abf0 <png_free_jmpbuf>:
push   %rbp
mov    %rsp,%rbp
sub    $0xe0,%rsp
test   %rdi,%rdi
jne    ac02 <png_free_jmpbuf+0x12>
leaveq 
retq   
mov    0xd0(%rdi),%rcx
test   %rcx,%rcx
jne    ac31 <png_free_jmpbuf+0x41>
movq   $0x0,0xd8(%rdi)
movq   $0x0,0xd0(%rdi)
movq   $0x0,0xc8(%rdi)
leaveq 
retq   
mov    0xd8(%rdi),%rax
test   %rax,%rax
je     ac0e <png_free_jmpbuf+0x1e>
cmp    %rcx,%rdi
je     ac0e <png_free_jmpbuf+0x1e>
lea    -0xd8(%rbp),%rax
mov    %r15,-0x10(%rbp)
mov    %rcx,-0x8(%rbp)
mov    %rdi,%r15
mov    %rax,%rdi
callq  5420 <_setjmp@plt>
test   %eax,%eax
je     ac69 <png_free_jmpbuf+0x79>
mov    %r15,%rdi
mov    -0x10(%rbp),%r15
jmp    ac0e <png_free_jmpbuf+0x1e>
lea    -0xd8(%rbp),%rax
mov    %rax,0xd0(%r15)
movq   $0x0,0xd8(%r15)
mov    0x27357(%rip),%rax        # 31fe0 <longjmp@GLIBC_2.2.5>
mov    %rax,0xc8(%r15)
mov    %r15,%rdi
mov    -0x8(%rbp),%rsi
callq  5790 <png_free@plt>
mov    %r15,%rdi
mov    -0x10(%rbp),%r15
jmpq   ac0e <png_free_jmpbuf+0x1e>
nopl   0x0(%rax,%rax,1)

000000000000acb0 <png_fixed_error>:
push   %rbp
mov    %rsp,%rbp
sub    $0xe0,%rsp
mov    %rdi,%r12
mov    %rsi,%r13
lea    -0xdc(%rbp),%rbx
lea    0x2285d(%rip),%rsi        # 2d52c <png_digit+0x50>
mov    $0x18,%edx
mov    %rbx,%rdi
callq  54c0 <memcpy@plt>
xor    %eax,%eax
test   %r13,%r13
jne    ad0e <png_fixed_error+0x5e>
mov    %eax,%eax
movb   $0x0,-0xc4(%rbp,%rax,1)
mov    %rbx,%rsi
mov    %r12,%rdi
callq  5470 <png_error@plt>
mov    %eax,%edx
movsbq 0x0(%r13,%rdx,1),%rcx
test   %cl,%cl
je     ace3 <png_fixed_error+0x33>
mov    %cl,-0xc4(%rbp,%rdx,1)
add    $0x1,%eax
cmp    $0xc2,%eax
jbe    acf8 <png_fixed_error+0x48>
jmp    ace3 <png_fixed_error+0x33>
nopw   0x0(%rax,%rax,1)

000000000000ad20 <png_safecat>:
push   %rbp
mov    %rsp,%rbp
test   %rdi,%rdi
jne    ad2e <png_safecat+0xe>
mov    %rdx,%rax
leaveq 
retq   
cmp    %rsi,%rdx
jb     ad38 <png_safecat+0x18>
mov    %rdx,%rax
leaveq 
retq   
test   %rcx,%rcx
jne    ad46 <png_safecat+0x26>
mov    %rdx,%rax
movb   $0x0,(%rdi,%rax,1)
leaveq 
retq   
add    $0xffffffffffffffff,%rsi
mov    %rdx,%rax
jmp    ad5f <png_safecat+0x3f>
cmp    %rax,%rsi
jbe    ad40 <png_safecat+0x20>
mov    %dl,(%rdi,%rax,1)
add    $0x1,%rax
add    $0x1,%rcx
movsbq (%rcx),%rdx
test   %dl,%dl
jne    ad4f <png_safecat+0x2f>
jmp    ad40 <png_safecat+0x20>
nopl   0x0(%rax)

000000000000ad70 <png_format_number>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    %r15,-0x28(%rbp)
mov    %r14,-0x20(%rbp)
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
lea    -0x1(%rdx),%r11d
add    $0xffffffffffffffff,%rsi
movb   $0x0,(%rsi)
mov    %rdx,%r9
mov    $0xa,%ebx
lea    0x2279f(%rip),%r8        # 2d545 <digits.5>
mov    $0x1,%r12d
xor    %r10d,%r10d
mov    $0x5,%edx
mov    $0x2,%r14d
mov    %r10,%r13
mov    %r13,%r15
jmp    ade0 <png_format_number+0x70>
test   %rcx,%rcx
je     adfe <png_format_number+0x8e>
cmp    $0x4,%r11d
jbe    ae1c <png_format_number+0xac>
mov    %r10,%rcx
cmp    $0x5,%r9d
lea    0x1(%r15),%r15d
jne    ade0 <png_format_number+0x70>
cmp    $0x5,%r15d
je     ae36 <png_format_number+0xc6>
cmp    %rdi,%rsi
ja     adc2 <png_format_number+0x52>
mov    %rsi,%rax
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x20(%rbp),%r14
mov    -0x28(%rbp),%r15
leaveq 
retq   
cmp    %r15d,%r12d
jg     adc7 <png_format_number+0x57>
mov    %rsi,%rax
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x20(%rbp),%r14
mov    -0x28(%rbp),%r15
leaveq 
retq   
lea    0x226a5(%rip),%rdx        # 2d4c8 <short_months.6+0x9f3>
movslq (%rdx,%r11,4),%rax
add    %rdx,%rax
jmpq   *%rax
mov    $0x5,%edx
mov    %r10,%rcx
jmp    add0 <png_format_number+0x60>
cmp    %rdi,%rsi
ja     aed3 <png_format_number+0x163>
mov    %rdx,%r15
jmp    ade0 <png_format_number+0x70>
mov    %r14,%r12
mov    %rcx,%rax
and    $0xf,%rax
movsbq (%rax,%r8,1),%rax
add    $0xffffffffffffffff,%rsi
mov    %al,(%rsi)
shr    $0x4,%rcx
mov    $0x5,%edx
jmpq   add0 <png_format_number+0x60>
mov    %r14,%r12
xor    %r14d,%r14d
mov    %rcx,%rax
mov    %r14,%rdx
div    %rbx
movsbq (%rdx,%r8,1),%rax
add    $0xffffffffffffffff,%rsi
mov    %al,(%rsi)
mov    %rcx,%rax
mov    %r14,%rdx
div    %rbx
mov    %rax,%rcx
mov    $0x2,%r14d
mov    $0x5,%edx
jmpq   add0 <png_format_number+0x60>
test   %r13d,%r13d
jle    aee8 <png_format_number+0x178>
xor    %edx,%edx
mov    %rcx,%rax
div    %rbx
movsbq (%rdx,%r8,1),%rax
add    $0xffffffffffffffff,%rsi
mov    %al,(%rsi)
mov    $0x1,%r13d
mov    %rcx,%rax
xor    %edx,%edx
div    %rbx
mov    %rax,%rcx
mov    $0x5,%edx
mov    %rdx,%r12
jmpq   add0 <png_format_number+0x60>
test   %r13d,%r13d
jg     aefa <png_format_number+0x18a>
test   %rcx,%rcx
je     af09 <png_format_number+0x199>
mov    %rdx,%r15
mov    %r10,%r13
jmpq   ade0 <png_format_number+0x70>
xor    %edx,%edx
mov    %rcx,%rax
div    %rbx
test   %rdx,%rdx
jne    aea2 <png_format_number+0x132>
mov    %r10,%r13
jmp    aebb <png_format_number+0x14b>
add    $0xffffffffffffffff,%rsi
movb   $0x2e,(%rsi)
mov    %rdx,%r15
jmpq   ade0 <png_format_number+0x70>
add    $0xffffffffffffffff,%rsi
movb   $0x30,(%rsi)
mov    %rdx,%r15
mov    %r10,%rcx
mov    %rcx,%r13
jmpq   ade0 <png_format_number+0x70>
xchg   %ax,%ax

000000000000af20 <png_warning_parameter>:
push   %rbp
mov    %rsp,%rbp
test   %esi,%esi
jg     af2a <png_warning_parameter+0xa>
leaveq 
retq   
cmp    $0x8,%esi
jle    af31 <png_warning_parameter+0x11>
leaveq 
retq   
lea    -0x1(%rsi),%eax
movslq %eax,%rax
shl    $0x5,%rax
add    %rax,%rdi
mov    %rdx,%rcx
mov    $0x20,%esi
xor    %edx,%edx
callq  ad20 <png_safecat>
leaveq 
retq   
nop

000000000000af50 <png_warning_parameter_unsigned>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rdi,%r14
mov    %rsi,%r15
lea    -0x28(%rbp),%rdi
lea    -0x10(%rbp),%rsi
callq  ad70 <png_format_number>
mov    %rax,%rdx
mov    %r15,%rsi
mov    %r14,%rdi
callq  af20 <png_warning_parameter>
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

000000000000af90 <png_warning_parameter_signed>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    %r13,-0x8(%rbp)
mov    %r14,-0x10(%rbp)
mov    %r15,-0x18(%rbp)
movslq %ecx,%rax
test   %ecx,%ecx
js     afb3 <png_warning_parameter_signed+0x23>
mov    %rax,%rcx
xor    %r13d,%r13d
jmp    afbf <png_warning_parameter_signed+0x2f>
mov    %rax,%rcx
neg    %rcx
mov    $0x1,%r13d
mov    %rsi,%r14
mov    %rdi,%r15
lea    -0x30(%rbp),%rdi
lea    0x18(%rdi),%rsi
callq  ad70 <png_format_number>
test   %r13,%r13
jne    aff3 <png_warning_parameter_signed+0x63>
mov    %rax,%rdx
mov    %r14,%rsi
mov    %r15,%rdi
callq  af20 <png_warning_parameter>
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
leaveq 
retq   
lea    -0x30(%rbp),%rcx
cmp    %rax,%rcx
jb     b001 <png_warning_parameter_signed+0x71>
mov    %rax,%rdx
jmp    afda <png_warning_parameter_signed+0x4a>
lea    -0x1(%rax),%rdx
movb   $0x2d,(%rdx)
jmp    afda <png_warning_parameter_signed+0x4a>
nopw   0x0(%rax,%rax,1)

000000000000b010 <png_formatted_warning>:
push   %rbp
mov    %rsp,%rbp
sub    $0xd0,%rsp
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
xor    %r15d,%r15d
lea    0x22529(%rip),%r11        # 2d556 <valid_parameters.6>
mov    %r15,%rax
jmp    b052 <png_formatted_warning+0x42>
movsbq (%rdx),%rcx
test   %cl,%cl
je     b05a <png_formatted_warning+0x4a>
test   %rsi,%rsi
jne    b078 <png_formatted_warning+0x68>
movsbq (%rdx),%rcx
mov    %cl,-0xd0(%rbp,%rax,1)
add    $0x1,%rax
add    $0x1,%rdx
cmp    $0xbe,%rax
jbe    b032 <png_formatted_warning+0x22>
movb   $0x0,-0xd0(%rbp,%rax,1)
lea    -0xd0(%rbp),%rsi
callq  5390 <png_warning@plt>
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
cmp    $0x40,%cl
jne    b03f <png_formatted_warning+0x2f>
lea    0x1(%rdx),%r14
movsbq (%r14),%r10
test   %r10b,%r10b
je     b03f <png_formatted_warning+0x2f>
mov    %r15,%rcx
jmp    b097 <png_formatted_warning+0x87>
test   %r9b,%r9b
je     b0a4 <png_formatted_warning+0x94>
add    $0x1,%ecx
movslq %ecx,%r8
movsbq (%r8,%r11,1),%r9
cmp    %r10b,%r9b
jne    b08f <png_formatted_warning+0x7f>
cmp    $0x7,%ecx
jle    b0ae <png_formatted_warning+0x9e>
mov    %r14,%rdx
jmp    b03f <png_formatted_warning+0x2f>
shl    $0x5,%r8
lea    (%rsi,%r8,1),%rcx
lea    0x20(%rcx),%r9
jmp    b0da <png_formatted_warning+0xca>
movsbq (%rcx),%r8
test   %r8b,%r8b
je     b0e2 <png_formatted_warning+0xd2>
cmp    %r9,%rcx
jae    b0e2 <png_formatted_warning+0xd2>
mov    %r8b,-0xd0(%rbp,%rax,1)
add    $0x1,%rax
add    $0x1,%rcx
cmp    $0xbe,%rax
jbe    b0bc <png_formatted_warning+0xac>
add    $0x2,%rdx
jmpq   b052 <png_formatted_warning+0x42>
nopl   0x0(%rax,%rax,1)

000000000000b0f0 <png_app_warning>:
push   %rbp
mov    %rsp,%rbp
mov    0x130(%rdi),%eax
and    $0x200000,%eax
test   %eax,%eax
jne    b108 <png_app_warning+0x18>
callq  5470 <png_error@plt>
callq  5390 <png_warning@plt>
leaveq 
retq   
nop

000000000000b110 <png_app_error>:
push   %rbp
mov    %rsp,%rbp
mov    0x130(%rdi),%eax
and    $0x400000,%eax
test   %eax,%eax
jne    b128 <png_app_error+0x18>
callq  5470 <png_error@plt>
callq  5390 <png_warning@plt>
leaveq 
retq   
nop

000000000000b130 <png_chunk_report>:
push   %rbp
mov    %rsp,%rbp
mov    0x12c(%rdi),%eax
and    $0x8000,%eax
test   %eax,%eax
jne    b14e <png_chunk_report+0x1e>
test   %edx,%edx
jle    b15a <png_chunk_report+0x2a>
callq  b110 <png_app_error>
leaveq 
retq   
cmp    $0x1,%edx
jle    b161 <png_chunk_report+0x31>
callq  5230 <png_chunk_benign_error@plt>
leaveq 
retq   
callq  b0f0 <png_app_warning>
leaveq 
retq   
callq  56a0 <png_chunk_warning@plt>
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

000000000000b170 <png_safe_error>:
push   %rbp
mov    %rsp,%rbp
mov    0xf0(%rdi),%r15
test   %r15,%r15
jne    b185 <png_safe_error+0x15>
callq  5090 <abort@plt>
mov    %rsi,%r13
lea    0x24(%r15),%rbx
mov    $0x40,%r12d
xor    %r14d,%r14d
mov    %rbx,%rdi
mov    %r12,%rsi
mov    %r14,%rdx
mov    %r13,%rcx
callq  ad20 <png_safecat>
mov    0x20(%r15),%eax
or     $0x2,%eax
mov    %eax,0x20(%r15)
mov    (%r15),%rax
test   %rax,%rax
jne    b1e1 <png_safe_error+0x71>
mov    %r14,%rdx
lea    0x2239d(%rip),%rcx        # 2d560 <valid_parameters.6+0xa>
mov    %rbx,%rdi
mov    %r12,%rsi
callq  ad20 <png_safecat>
mov    %r13,%rcx
mov    %rax,%rdx
mov    %r12,%rsi
mov    %rbx,%rdi
callq  ad20 <png_safecat>
jmp    b180 <png_safe_error+0x10>
mov    0x10(%rax),%rdi
test   %rdi,%rdi
je     b1b9 <png_safe_error+0x49>
mov    $0x1,%esi
callq  58f0 <longjmp@plt>
data16 nopw %cs:0x0(%rax,%rax,1)
nop

000000000000b200 <png_safe_warning>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    0xf0(%rdi),%rcx
mov    0x20(%rcx),%eax
test   %eax,%eax
je     b218 <png_safe_warning+0x18>
leaveq 
retq   
lea    0x24(%rcx),%rdi
mov    $0x40,%eax
xor    %edx,%edx
mov    %r15,-0x8(%rbp)
mov    %rcx,%r15
mov    %rsi,%rcx
mov    %rax,%rsi
callq  ad20 <png_safecat>
mov    0x20(%r15),%eax
or     $0x1,%eax
mov    %eax,0x20(%r15)
mov    -0x8(%rbp),%r15
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)

000000000000b250 <png_safe_execute>:
push   %rbp
mov    %rsp,%rbp
sub    $0xf0,%rsp
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rdi,-0xf0(%rbp)
mov    -0xf0(%rbp),%rax
mov    (%rax),%rax
mov    0x10(%rax),%rax
mov    %rax,-0xe0(%rbp)
mov    %rsi,%r14
mov    %rdx,%r15
lea    -0xd8(%rbp),%rdi
callq  5420 <_setjmp@plt>
test   %eax,%eax
je     b299 <png_safe_execute+0x49>
xor    %eax,%eax
jmp    b29e <png_safe_execute+0x4e>
mov    $0x1,%eax
mov    %eax,-0xe4(%rbp)
movslq -0xe4(%rbp),%rax
test   %eax,%eax
je     b2d0 <png_safe_execute+0x80>
mov    -0xf0(%rbp),%rax
mov    (%rax),%rax
lea    -0xd8(%rbp),%rcx
mov    %rcx,0x10(%rax)
mov    %r15,%rdi
callq  *%r14
mov    %eax,-0xe4(%rbp)
mov    -0xf0(%rbp),%rax
mov    (%rax),%rax
mov    -0xe0(%rbp),%rcx
mov    %rcx,0x10(%rax)
movslq -0xe4(%rbp),%rax
test   %eax,%eax
jne    b2fc <png_safe_execute+0xac>
mov    -0xf0(%rbp),%rdi
callq  5040 <png_image_free@plt>
movslq -0xe4(%rbp),%rax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
nopl   (%rax)

000000000000b310 <png_default_error>:
push   %rbp
mov    %rsp,%rbp
test   %rsi,%rsi
jne    b322 <png_default_error+0x12>
lea    0x2225f(%rip),%rdx        # 2d57f <valid_parameters.6+0x29>
jmp    b325 <png_default_error+0x15>
mov    %rsi,%rdx
mov    %rdi,%rbx
xor    %r12d,%r12d
mov    0x26cc6(%rip),%r13        # 31ff8 <stderr@GLIBC_2.2.5>
mov    0x0(%r13),%rdi
lea    0x22231(%rip),%rsi        # 2d56e <valid_parameters.6+0x18>
mov    %r12,%rax
callq  5490 <fprintf@plt>
mov    0x0(%r13),%rdi
mov    %r12,%rax
lea    0x22236(%rip),%rsi        # 2d589 <valid_parameters.6+0x33>
callq  5490 <fprintf@plt>
mov    %rbx,%rdi
mov    $0x1,%esi
callq  5870 <png_longjmp@plt>
data16 nopw %cs:0x0(%rax,%rax,1)

000000000000b370 <png_default_warning>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x8(%rbp)
mov    %rsi,%rdx
xor    %eax,%eax
mov    0x26c70(%rip),%r15        # 31ff8 <stderr@GLIBC_2.2.5>
mov    (%r15),%rdi
lea    0x221f9(%rip),%rsi        # 2d58b <valid_parameters.6+0x35>
callq  5490 <fprintf@plt>
mov    (%r15),%rdi
lea    0x221e8(%rip),%rsi        # 2d589 <valid_parameters.6+0x33>
xor    %eax,%eax
callq  5490 <fprintf@plt>
mov    -0x8(%rbp),%r15
leaveq 
retq   
xchg   %ax,%ax

000000000000b3b0 <png_format_buffer>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %rdx,-0x18(%rbp)
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
movslq 0x218(%rdi),%r8
xor    %eax,%eax
lea    0x22108(%rip),%rdx        # 2d4dc <png_digit>
mov    $0x18,%ecx
mov    $0x1,%edi
mov    %rax,%r9
jmp    b430 <png_format_buffer+0x80>
movb   $0x5b,(%rsi,%r10,1)
mov    %r11,%r10
and    $0xf0,%r10d
shr    $0x4,%r10d
movslq %r10d,%r10
movsbq (%r10,%rdx,1),%r14
lea    0x1(%r9),%r10d
movslq %r10d,%r10
mov    %r14b,(%rsi,%r10,1)
and    $0xf,%r11d
movslq %r11d,%r10
movsbq (%r10,%rdx,1),%r11
lea    0x2(%r9),%r10d
movslq %r10d,%r10
mov    %r11b,(%rsi,%r10,1)
lea    0x3(%r9),%r10d
movslq %r10d,%r10
movb   $0x5d,(%rsi,%r10,1)
add    $0x4,%r9d
movslq %r9d,%r10
test   %ecx,%ecx
jns    b456 <png_format_buffer+0xa6>
mov    -0x18(%rbp),%r8
test   %r8,%r8
je     b47f <png_format_buffer+0xcf>
movb   $0x3a,(%rsi,%r10,1)
lea    0x1(%r9),%ecx
movslq %ecx,%rcx
movb   $0x20,(%rsi,%rcx,1)
lea    0x2(%r9),%ecx
jmp    b4a5 <png_format_buffer+0xf5>
mov    %r8,%r11
shr    %cl,%r11d
movzbl %r11b,%r15d
cmp    $0x40,%r15d
jg     b4bd <png_format_buffer+0x10d>
mov    %rdi,%r14
add    $0xfffffff8,%ecx
test   %r14d,%r14d
jg     b3e3 <png_format_buffer+0x33>
mov    %r15b,(%rsi,%r10,1)
add    $0x1,%r9d
jmp    b430 <png_format_buffer+0x80>
movb   $0x0,(%rsi,%r10,1)
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
movslq %eax,%rdi
movsbq (%r8,%rdi,1),%rdi
test   %dil,%dil
je     b4af <png_format_buffer+0xff>
mov    %dil,(%rdx,%rsi,1)
add    $0x1,%ecx
add    $0x1,%eax
movslq %ecx,%rdx
cmp    $0xc2,%eax
jle    b48e <png_format_buffer+0xde>
movb   $0x0,(%rdx,%rsi,1)
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
cmp    $0x7a,%r15d
jle    b4c8 <png_format_buffer+0x118>
mov    %rdi,%r14
jmp    b469 <png_format_buffer+0xb9>
cmp    $0x5a,%r15d
jg     b4d3 <png_format_buffer+0x123>
mov    %rax,%r14
jmp    b469 <png_format_buffer+0xb9>
cmp    $0x60,%r15d
jle    b4de <png_format_buffer+0x12e>
mov    %rax,%r14
jmp    b469 <png_format_buffer+0xb9>
mov    %rdi,%r14
jmp    b469 <png_format_buffer+0xb9>
nopw   %cs:0x0(%rax,%rax,1)
nopl   (%rax)

000000000000b4f0 <png_get_compression_buffer_size>:
push   %rbp
mov    %rsp,%rbp
test   %rdi,%rdi
jne    b4fd <png_get_compression_buffer_size+0xd>
xor    %eax,%eax
leaveq 
retq   
mov    0x12c(%rdi),%eax
and    $0x8000,%eax
test   %eax,%eax
jne    b514 <png_get_compression_buffer_size+0x24>
mov    0x1b8(%rdi),%eax
leaveq 
retq   
mov    0x468(%rdi),%eax
leaveq 
retq   
nopl   0x0(%rax)

000000000000b520 <png_get_rgb_to_gray_status>:
push   %rbp
mov    %rsp,%rbp
test   %rdi,%rdi
jne    b52d <png_get_rgb_to_gray_status+0xd>
xor    %eax,%eax
leaveq 
retq   
movzbl 0x3d0(%rdi),%eax
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)

000000000000b540 <png_get_user_chunk_ptr>:
push   %rbp
mov    %rsp,%rbp
test   %rdi,%rdi
jne    b54d <png_get_user_chunk_ptr+0xd>
xor    %eax,%eax
leaveq 
retq   
mov    0x3b0(%rdi),%rax
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)

000000000000b560 <png_get_valid>:
push   %rbp
mov    %rsp,%rbp
xor    %eax,%eax
test   %rdi,%rdi
jne    b56d <png_get_valid+0xd>
leaveq 
retq   
test   %rsi,%rsi
jne    b574 <png_get_valid+0x14>
leaveq 
retq   
mov    %rdx,%rax
and    0x8(%rsi),%eax
leaveq 
retq   
nopl   0x0(%rax)

000000000000b580 <png_get_rowbytes>:
push   %rbp
mov    %rsp,%rbp
xor    %eax,%eax
test   %rdi,%rdi
jne    b58d <png_get_rowbytes+0xd>
leaveq 
retq   
test   %rsi,%rsi
jne    b594 <png_get_rowbytes+0x14>
leaveq 
retq   
mov    0x10(%rsi),%rax
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

000000000000b5a0 <png_get_rows>:
push   %rbp
mov    %rsp,%rbp
xor    %eax,%eax
test   %rdi,%rdi
jne    b5ad <png_get_rows+0xd>
leaveq 
retq   
test   %rsi,%rsi
jne    b5b4 <png_get_rows+0x14>
leaveq 
retq   
mov    0x160(%rsi),%rax
leaveq 
retq   
nopl   (%rax)

000000000000b5c0 <png_get_channels>:
push   %rbp
mov    %rsp,%rbp
xor    %eax,%eax
test   %rdi,%rdi
jne    b5cd <png_get_channels+0xd>
leaveq 
retq   
test   %rsi,%rsi
jne    b5d4 <png_get_channels+0x14>
leaveq 
retq   
movzbl 0x29(%rsi),%eax
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

000000000000b5e0 <png_get_image_width>:
push   %rbp
mov    %rsp,%rbp
xor    %eax,%eax
test   %rdi,%rdi
jne    b5ed <png_get_image_width+0xd>
leaveq 
retq   
test   %rsi,%rsi
jne    b5f4 <png_get_image_width+0x14>
leaveq 
retq   
mov    (%rsi),%eax
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

000000000000b600 <png_get_image_height>:
push   %rbp
mov    %rsp,%rbp
xor    %eax,%eax
test   %rdi,%rdi
jne    b60d <png_get_image_height+0xd>
leaveq 
retq   
test   %rsi,%rsi
jne    b614 <png_get_image_height+0x14>
leaveq 
retq   
mov    0x4(%rsi),%eax
leaveq 
retq   
nopl   0x0(%rax)

000000000000b620 <png_get_bit_depth>:
push   %rbp
mov    %rsp,%rbp
xor    %eax,%eax
test   %rdi,%rdi
jne    b62d <png_get_bit_depth+0xd>
leaveq 
retq   
test   %rsi,%rsi
jne    b634 <png_get_bit_depth+0x14>
leaveq 
retq   
movzbl 0x24(%rsi),%eax
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

000000000000b640 <png_get_color_type>:
push   %rbp
mov    %rsp,%rbp
xor    %eax,%eax
test   %rdi,%rdi
jne    b64d <png_get_color_type+0xd>
leaveq 
retq   
test   %rsi,%rsi
jne    b654 <png_get_color_type+0x14>
leaveq 
retq   
movzbl 0x25(%rsi),%eax
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

000000000000b660 <png_get_filter_type>:
push   %rbp
mov    %rsp,%rbp
xor    %eax,%eax
test   %rdi,%rdi
jne    b66d <png_get_filter_type+0xd>
leaveq 
retq   
test   %rsi,%rsi
jne    b674 <png_get_filter_type+0x14>
leaveq 
retq   
movzbl 0x27(%rsi),%eax
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

000000000000b680 <png_get_interlace_type>:
push   %rbp
mov    %rsp,%rbp
xor    %eax,%eax
test   %rdi,%rdi
jne    b68d <png_get_interlace_type+0xd>
leaveq 
retq   
test   %rsi,%rsi
jne    b694 <png_get_interlace_type+0x14>
leaveq 
retq   
movzbl 0x28(%rsi),%eax
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

000000000000b6a0 <png_get_compression_type>:
push   %rbp
mov    %rsp,%rbp
xor    %eax,%eax
test   %rdi,%rdi
jne    b6ad <png_get_compression_type+0xd>
leaveq 
retq   
test   %rsi,%rsi
jne    b6b4 <png_get_compression_type+0x14>
leaveq 
retq   
movzbl 0x26(%rsi),%eax
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

000000000000b6c0 <png_get_pixels_per_meter>:
push   %rbp
mov    %rsp,%rbp
xor    %eax,%eax
test   %rdi,%rdi
jne    b6cd <png_get_pixels_per_meter+0xd>
leaveq 
retq   
test   %rsi,%rsi
jne    b6d4 <png_get_pixels_per_meter+0x14>
leaveq 
retq   
mov    0x8(%rsi),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
jne    b6e3 <png_get_pixels_per_meter+0x23>
leaveq 
retq   
movzbl 0xe8(%rsi),%ecx
cmp    $0x1,%cl
je     b6f1 <png_get_pixels_per_meter+0x31>
leaveq 
retq   
mov    0xe0(%rsi),%ecx
mov    0xe4(%rsi),%edx
cmp    %ecx,%edx
jne    b706 <png_get_pixels_per_meter+0x46>
mov    %rcx,%rax
leaveq 
retq   
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

000000000000b710 <png_get_x_pixels_per_meter>:
push   %rbp
mov    %rsp,%rbp
xor    %eax,%eax
test   %rdi,%rdi
jne    b71d <png_get_x_pixels_per_meter+0xd>
leaveq 
retq   
test   %rsi,%rsi
jne    b724 <png_get_x_pixels_per_meter+0x14>
leaveq 
retq   
mov    0x8(%rsi),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
jne    b733 <png_get_x_pixels_per_meter+0x23>
leaveq 
retq   
movzbl 0xe8(%rsi),%ecx
cmp    $0x1,%cl
je     b741 <png_get_x_pixels_per_meter+0x31>
leaveq 
retq   
mov    0xe0(%rsi),%eax
leaveq 
retq   
nopl   0x0(%rax)

000000000000b750 <png_get_y_pixels_per_meter>:
push   %rbp
mov    %rsp,%rbp
xor    %eax,%eax
test   %rdi,%rdi
jne    b75d <png_get_y_pixels_per_meter+0xd>
leaveq 
retq   
test   %rsi,%rsi
jne    b764 <png_get_y_pixels_per_meter+0x14>
leaveq 
retq   
mov    0x8(%rsi),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
jne    b773 <png_get_y_pixels_per_meter+0x23>
leaveq 
retq   
movzbl 0xe8(%rsi),%ecx
cmp    $0x1,%cl
je     b781 <png_get_y_pixels_per_meter+0x31>
leaveq 
retq   
mov    0xe4(%rsi),%eax
leaveq 
retq   
nopl   0x0(%rax)

000000000000b790 <png_get_pixel_aspect_ratio>:
push   %rbp
mov    %rsp,%rbp
xorpd  %xmm0,%xmm0
test   %rdi,%rdi
jne    b79f <png_get_pixel_aspect_ratio+0xf>
leaveq 
retq   
test   %rsi,%rsi
jne    b7a6 <png_get_pixel_aspect_ratio+0x16>
leaveq 
retq   
mov    0x8(%rsi),%eax
and    $0x80,%eax
test   %eax,%eax
jne    b7b4 <png_get_pixel_aspect_ratio+0x24>
leaveq 
retq   
mov    0xe0(%rsi),%eax
test   %eax,%eax
jne    b7c0 <png_get_pixel_aspect_ratio+0x30>
leaveq 
retq   
mov    0xe4(%rsi),%ecx
mov    %ecx,%ecx
cvtsi2ss %rcx,%xmm0
mov    %eax,%eax
cvtsi2ss %rax,%xmm1
divss  %xmm1,%xmm0
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

000000000000b7e0 <png_get_pixel_aspect_ratio_fixed>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
xor    %eax,%eax
test   %rdi,%rdi
jne    b7f1 <png_get_pixel_aspect_ratio_fixed+0x11>
leaveq 
retq   
test   %rsi,%rsi
jne    b7f8 <png_get_pixel_aspect_ratio_fixed+0x18>
leaveq 
retq   
mov    0x8(%rsi),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
jne    b807 <png_get_pixel_aspect_ratio_fixed+0x27>
leaveq 
retq   
mov    0xe0(%rsi),%ecx
test   %ecx,%ecx
jne    b813 <png_get_pixel_aspect_ratio_fixed+0x33>
leaveq 
retq   
mov    0xe4(%rsi),%esi
test   %esi,%esi
jne    b81f <png_get_pixel_aspect_ratio_fixed+0x3f>
leaveq 
retq   
cmp    $0x7fffffff,%ecx
jbe    b829 <png_get_pixel_aspect_ratio_fixed+0x49>
leaveq 
retq   
cmp    $0x7fffffff,%esi
jbe    b833 <png_get_pixel_aspect_ratio_fixed+0x53>
leaveq 
retq   
lea    -0x4(%rbp),%rdi
mov    $0x186a0,%edx
callq  8970 <png_muldiv>
test   %eax,%eax
jne    b849 <png_get_pixel_aspect_ratio_fixed+0x69>
xor    %eax,%eax
leaveq 
retq   
movslq -0x4(%rbp),%rax
leaveq 
retq   
nop

000000000000b850 <png_get_x_offset_pixels>:
push   %rbp
mov    %rsp,%rbp
xor    %eax,%eax
test   %rdi,%rdi
jne    b85d <png_get_x_offset_pixels+0xd>
leaveq 
retq   
test   %rsi,%rsi
jne    b864 <png_get_x_offset_pixels+0x14>
leaveq 
retq   
mov    0x8(%rsi),%ecx
and    $0x100,%ecx
test   %ecx,%ecx
jne    b873 <png_get_x_offset_pixels+0x23>
leaveq 
retq   
movzbl 0xdc(%rsi),%ecx
test   %cl,%cl
je     b880 <png_get_x_offset_pixels+0x30>
leaveq 
retq   
movslq 0xd4(%rsi),%rax
leaveq 
retq   
nopl   0x0(%rax)

000000000000b890 <png_get_y_offset_pixels>:
push   %rbp
mov    %rsp,%rbp
xor    %eax,%eax
test   %rdi,%rdi
jne    b89d <png_get_y_offset_pixels+0xd>
leaveq 
retq   
test   %rsi,%rsi
jne    b8a4 <png_get_y_offset_pixels+0x14>
leaveq 
retq   
mov    0x8(%rsi),%ecx
and    $0x100,%ecx
test   %ecx,%ecx
jne    b8b3 <png_get_y_offset_pixels+0x23>
leaveq 
retq   
movzbl 0xdc(%rsi),%ecx
test   %cl,%cl
je     b8c0 <png_get_y_offset_pixels+0x30>
leaveq 
retq   
movslq 0xd8(%rsi),%rax
leaveq 
retq   
nopl   0x0(%rax)

000000000000b8d0 <png_get_x_offset_microns>:
push   %rbp
mov    %rsp,%rbp
xor    %eax,%eax
test   %rdi,%rdi
jne    b8dd <png_get_x_offset_microns+0xd>
leaveq 
retq   
test   %rsi,%rsi
jne    b8e4 <png_get_x_offset_microns+0x14>
leaveq 
retq   
mov    0x8(%rsi),%ecx
and    $0x100,%ecx
test   %ecx,%ecx
jne    b8f3 <png_get_x_offset_microns+0x23>
leaveq 
retq   
movzbl 0xdc(%rsi),%ecx
cmp    $0x1,%cl
je     b901 <png_get_x_offset_microns+0x31>
leaveq 
retq   
movslq 0xd4(%rsi),%rax
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

000000000000b910 <png_get_y_offset_microns>:
push   %rbp
mov    %rsp,%rbp
xor    %eax,%eax
test   %rdi,%rdi
jne    b91d <png_get_y_offset_microns+0xd>
leaveq 
retq   
test   %rsi,%rsi
jne    b924 <png_get_y_offset_microns+0x14>
leaveq 
retq   
mov    0x8(%rsi),%ecx
and    $0x100,%ecx
test   %ecx,%ecx
jne    b933 <png_get_y_offset_microns+0x23>
leaveq 
retq   
movzbl 0xdc(%rsi),%ecx
cmp    $0x1,%cl
je     b941 <png_get_y_offset_microns+0x31>
leaveq 
retq   
movslq 0xd8(%rsi),%rax
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

000000000000b950 <png_get_signature>:
push   %rbp
mov    %rsp,%rbp
xor    %eax,%eax
test   %rdi,%rdi
jne    b95d <png_get_signature+0xd>
leaveq 
retq   
test   %rsi,%rsi
jne    b964 <png_get_signature+0x14>
leaveq 
retq   
lea    0x2c(%rsi),%rax
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

000000000000b970 <png_get_bKGD>:
push   %rbp
mov    %rsp,%rbp
xor    %eax,%eax
test   %rdi,%rdi
jne    b97d <png_get_bKGD+0xd>
leaveq 
retq   
test   %rsi,%rsi
jne    b984 <png_get_bKGD+0x14>
leaveq 
retq   
mov    0x8(%rsi),%ecx
and    $0x20,%ecx
test   %ecx,%ecx
jne    b990 <png_get_bKGD+0x20>
leaveq 
retq   
test   %rdx,%rdx
jne    b997 <png_get_bKGD+0x27>
leaveq 
retq   
lea    0xca(%rsi),%rax
mov    %rax,(%rdx)
mov    $0x20,%eax
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

000000000000b9b0 <png_get_cHRM>:
push   %rbp
mov    %rsp,%rbp
xor    %eax,%eax
test   %rdi,%rdi
jne    b9bd <png_get_cHRM+0xd>
leaveq 
retq   
test   %rsi,%rsi
jne    b9c4 <png_get_cHRM+0x14>
leaveq 
retq   
movzwl 0x7e(%rsi),%edi
and    $0x2,%edi
test   %edi,%edi
jg     b9d1 <png_get_cHRM+0x21>
leaveq 
retq   
movsd  0x21c0f(%rip),%xmm1        # 2d5e8 <valid_parameters.6+0x92>
test   %rdx,%rdx
je     b9ee <png_get_cHRM+0x3e>
movslq 0x50(%rsi),%rax
cvtsi2sd %eax,%xmm0
mulsd  %xmm1,%xmm0
movsd  %xmm0,(%rdx)
test   %rcx,%rcx
je     ba03 <png_get_cHRM+0x53>
movslq 0x54(%rsi),%rax
cvtsi2sd %eax,%xmm0
mulsd  %xmm1,%xmm0
movsd  %xmm0,(%rcx)
test   %r8,%r8
je     ba19 <png_get_cHRM+0x69>
movslq 0x38(%rsi),%rax
cvtsi2sd %eax,%xmm0
mulsd  %xmm1,%xmm0
movsd  %xmm0,(%r8)
test   %r9,%r9
je     ba2f <png_get_cHRM+0x7f>
movslq 0x3c(%rsi),%rax
cvtsi2sd %eax,%xmm0
mulsd  %xmm1,%xmm0
movsd  %xmm0,(%r9)
mov    0x10(%rbp),%rax
test   %rax,%rax
je     ba48 <png_get_cHRM+0x98>
movslq 0x40(%rsi),%rcx
cvtsi2sd %ecx,%xmm0
mulsd  %xmm1,%xmm0
movsd  %xmm0,(%rax)
mov    0x18(%rbp),%rax
test   %rax,%rax
je     ba61 <png_get_cHRM+0xb1>
movslq 0x44(%rsi),%rcx
cvtsi2sd %ecx,%xmm0
mulsd  %xmm1,%xmm0
movsd  %xmm0,(%rax)
mov    0x20(%rbp),%rax
test   %rax,%rax
je     ba7a <png_get_cHRM+0xca>
movslq 0x48(%rsi),%rcx
cvtsi2sd %ecx,%xmm0
mulsd  %xmm1,%xmm0
movsd  %xmm0,(%rax)
mov    $0x4,%eax
mov    0x28(%rbp),%rcx
test   %rcx,%rcx
jne    ba8a <png_get_cHRM+0xda>
leaveq 
retq   
movslq 0x4c(%rsi),%rdx
cvtsi2sd %edx,%xmm0
mulsd  %xmm1,%xmm0
movsd  %xmm0,(%rcx)
leaveq 
retq   
nopl   0x0(%rax)

000000000000baa0 <png_get_cHRM_XYZ>:
push   %rbp
mov    %rsp,%rbp
xor    %eax,%eax
test   %rdi,%rdi
jne    baad <png_get_cHRM_XYZ+0xd>
leaveq 
retq   
test   %rsi,%rsi
jne    bab4 <png_get_cHRM_XYZ+0x14>
leaveq 
retq   
movzwl 0x7e(%rsi),%edi
and    $0x2,%edi
test   %edi,%edi
jg     bac1 <png_get_cHRM_XYZ+0x21>
leaveq 
retq   
movsd  0x21b1f(%rip),%xmm1        # 2d5e8 <valid_parameters.6+0x92>
test   %rdx,%rdx
je     bade <png_get_cHRM_XYZ+0x3e>
movslq 0x58(%rsi),%rax
cvtsi2sd %eax,%xmm0
mulsd  %xmm1,%xmm0
movsd  %xmm0,(%rdx)
test   %rcx,%rcx
je     baf3 <png_get_cHRM_XYZ+0x53>
movslq 0x5c(%rsi),%rax
cvtsi2sd %eax,%xmm0
mulsd  %xmm1,%xmm0
movsd  %xmm0,(%rcx)
test   %r8,%r8
je     bb09 <png_get_cHRM_XYZ+0x69>
movslq 0x60(%rsi),%rax
cvtsi2sd %eax,%xmm0
mulsd  %xmm1,%xmm0
movsd  %xmm0,(%r8)
test   %r9,%r9
je     bb1f <png_get_cHRM_XYZ+0x7f>
movslq 0x64(%rsi),%rax
cvtsi2sd %eax,%xmm0
mulsd  %xmm1,%xmm0
movsd  %xmm0,(%r9)
mov    0x10(%rbp),%rax
test   %rax,%rax
je     bb38 <png_get_cHRM_XYZ+0x98>
movslq 0x68(%rsi),%rcx
cvtsi2sd %ecx,%xmm0
mulsd  %xmm1,%xmm0
movsd  %xmm0,(%rax)
mov    0x18(%rbp),%rax
test   %rax,%rax
je     bb51 <png_get_cHRM_XYZ+0xb1>
movslq 0x6c(%rsi),%rcx
cvtsi2sd %ecx,%xmm0
mulsd  %xmm1,%xmm0
movsd  %xmm0,(%rax)
mov    0x20(%rbp),%rax
test   %rax,%rax
je     bb6a <png_get_cHRM_XYZ+0xca>
movslq 0x70(%rsi),%rcx
cvtsi2sd %ecx,%xmm0
mulsd  %xmm1,%xmm0
movsd  %xmm0,(%rax)
mov    0x28(%rbp),%rax
test   %rax,%rax
je     bb83 <png_get_cHRM_XYZ+0xe3>
movslq 0x74(%rsi),%rcx
cvtsi2sd %ecx,%xmm0
mulsd  %xmm1,%xmm0
movsd  %xmm0,(%rax)
mov    $0x4,%eax
mov    0x30(%rbp),%rcx
test   %rcx,%rcx
jne    bb93 <png_get_cHRM_XYZ+0xf3>
leaveq 
retq   
movslq 0x78(%rsi),%rdx
cvtsi2sd %edx,%xmm0
mulsd  %xmm1,%xmm0
movsd  %xmm0,(%rcx)
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)

000000000000bbb0 <png_get_cHRM_fixed>:
push   %rbp
mov    %rsp,%rbp
xor    %eax,%eax
test   %rdi,%rdi
jne    bbbd <png_get_cHRM_fixed+0xd>
leaveq 
retq   
test   %rsi,%rsi
jne    bbc4 <png_get_cHRM_fixed+0x14>
leaveq 
retq   
movzwl 0x7e(%rsi),%edi
and    $0x2,%edi
test   %edi,%edi
jg     bbd1 <png_get_cHRM_fixed+0x21>
leaveq 
retq   
test   %rdx,%rdx
je     bbdc <png_get_cHRM_fixed+0x2c>
movslq 0x50(%rsi),%rax
mov    %eax,(%rdx)
test   %rcx,%rcx
je     bbe7 <png_get_cHRM_fixed+0x37>
movslq 0x54(%rsi),%rax
mov    %eax,(%rcx)
test   %r8,%r8
je     bbf3 <png_get_cHRM_fixed+0x43>
movslq 0x38(%rsi),%rax
mov    %eax,(%r8)
test   %r9,%r9
je     bbff <png_get_cHRM_fixed+0x4f>
movslq 0x3c(%rsi),%rax
mov    %eax,(%r9)
mov    0x10(%rbp),%rax
test   %rax,%rax
je     bc0e <png_get_cHRM_fixed+0x5e>
movslq 0x40(%rsi),%rcx
mov    %ecx,(%rax)
mov    0x18(%rbp),%rax
test   %rax,%rax
je     bc1d <png_get_cHRM_fixed+0x6d>
movslq 0x44(%rsi),%rcx
mov    %ecx,(%rax)
mov    0x20(%rbp),%rax
test   %rax,%rax
je     bc2c <png_get_cHRM_fixed+0x7c>
movslq 0x48(%rsi),%rcx
mov    %ecx,(%rax)
mov    $0x4,%eax
mov    0x28(%rbp),%rcx
test   %rcx,%rcx
jne    bc3c <png_get_cHRM_fixed+0x8c>
leaveq 
retq   
movslq 0x4c(%rsi),%rdx
mov    %edx,(%rcx)
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nop

000000000000bc50 <png_get_cHRM_XYZ_fixed>:
push   %rbp
mov    %rsp,%rbp
xor    %eax,%eax
test   %rdi,%rdi
jne    bc5d <png_get_cHRM_XYZ_fixed+0xd>
leaveq 
retq   
test   %rsi,%rsi
jne    bc64 <png_get_cHRM_XYZ_fixed+0x14>
leaveq 
retq   
movzwl 0x7e(%rsi),%edi
and    $0x2,%edi
test   %edi,%edi
jg     bc71 <png_get_cHRM_XYZ_fixed+0x21>
leaveq 
retq   
test   %rdx,%rdx
je     bc7c <png_get_cHRM_XYZ_fixed+0x2c>
movslq 0x58(%rsi),%rax
mov    %eax,(%rdx)
test   %rcx,%rcx
je     bc87 <png_get_cHRM_XYZ_fixed+0x37>
movslq 0x5c(%rsi),%rax
mov    %eax,(%rcx)
test   %r8,%r8
je     bc93 <png_get_cHRM_XYZ_fixed+0x43>
movslq 0x60(%rsi),%rax
mov    %eax,(%r8)
test   %r9,%r9
je     bc9f <png_get_cHRM_XYZ_fixed+0x4f>
movslq 0x64(%rsi),%rax
mov    %eax,(%r9)
mov    0x10(%rbp),%rax
test   %rax,%rax
je     bcae <png_get_cHRM_XYZ_fixed+0x5e>
movslq 0x68(%rsi),%rcx
mov    %ecx,(%rax)
mov    0x18(%rbp),%rax
test   %rax,%rax
je     bcbd <png_get_cHRM_XYZ_fixed+0x6d>
movslq 0x6c(%rsi),%rcx
mov    %ecx,(%rax)
mov    0x20(%rbp),%rax
test   %rax,%rax
je     bccc <png_get_cHRM_XYZ_fixed+0x7c>
movslq 0x70(%rsi),%rcx
mov    %ecx,(%rax)
mov    0x28(%rbp),%rax
test   %rax,%rax
je     bcdb <png_get_cHRM_XYZ_fixed+0x8b>
movslq 0x74(%rsi),%rcx
mov    %ecx,(%rax)
mov    $0x4,%eax
mov    0x30(%rbp),%rcx
test   %rcx,%rcx
jne    bceb <png_get_cHRM_XYZ_fixed+0x9b>
leaveq 
retq   
movslq 0x78(%rsi),%rdx
mov    %edx,(%rcx)
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

000000000000bd00 <png_get_eXIf>:
push   %rbp
mov    %rsp,%rbp
lea    0x21895(%rip),%rsi        # 2d5a0 <valid_parameters.6+0x4a>
callq  5390 <png_warning@plt>
xor    %eax,%eax
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nop

000000000000bd20 <png_get_eXIf_1>:
push   %rbp
mov    %rsp,%rbp
xor    %eax,%eax
test   %rdi,%rdi
jne    bd2d <png_get_eXIf_1+0xd>
leaveq 
retq   
test   %rsi,%rsi
jne    bd34 <png_get_eXIf_1+0x14>
leaveq 
retq   
mov    0x8(%rsi),%edi
and    $0x10000,%edi
test   %edi,%edi
jne    bd43 <png_get_eXIf_1+0x23>
leaveq 
retq   
test   %rcx,%rcx
jne    bd4a <png_get_eXIf_1+0x2a>
leaveq 
retq   
mov    0xec(%rsi),%eax
mov    %eax,(%rdx)
mov    0xf0(%rsi),%rax
mov    %rax,(%rcx)
mov    $0x10000,%eax
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

000000000000bd70 <png_get_gAMA>:
push   %rbp
mov    %rsp,%rbp
xor    %eax,%eax
test   %rdi,%rdi
jne    bd7d <png_get_gAMA+0xd>
leaveq 
retq   
test   %rsi,%rsi
jne    bd84 <png_get_gAMA+0x14>
leaveq 
retq   
movzwl 0x7e(%rsi),%ecx
and    $0x1,%ecx
test   %ecx,%ecx
jg     bd91 <png_get_gAMA+0x21>
leaveq 
retq   
test   %rdx,%rdx
jne    bd98 <png_get_gAMA+0x28>
leaveq 
retq   
movslq 0x34(%rsi),%rax
cvtsi2sd %eax,%xmm0
movsd  0x21840(%rip),%xmm1        # 2d5e8 <valid_parameters.6+0x92>
mulsd  %xmm1,%xmm0
movsd  %xmm0,(%rdx)
mov    $0x1,%eax
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

000000000000bdc0 <png_get_gAMA_fixed>:
push   %rbp
mov    %rsp,%rbp
xor    %eax,%eax
test   %rdi,%rdi
jne    bdcd <png_get_gAMA_fixed+0xd>
leaveq 
retq   
test   %rsi,%rsi
jne    bdd4 <png_get_gAMA_fixed+0x14>
leaveq 
retq   
movzwl 0x7e(%rsi),%ecx
and    $0x1,%ecx
test   %ecx,%ecx
jg     bde1 <png_get_gAMA_fixed+0x21>
leaveq 
retq   
test   %rdx,%rdx
jne    bde8 <png_get_gAMA_fixed+0x28>
leaveq 
retq   
movslq 0x34(%rsi),%rax
mov    %eax,(%rdx)
mov    $0x1,%eax
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)

000000000000be00 <png_get_hIST>:
push   %rbp
mov    %rsp,%rbp
xor    %eax,%eax
test   %rdi,%rdi
jne    be0d <png_get_hIST+0xd>
leaveq 
retq   
test   %rsi,%rsi
jne    be14 <png_get_hIST+0x14>
leaveq 
retq   
mov    0x8(%rsi),%ecx
and    $0x40,%ecx
test   %ecx,%ecx
jne    be20 <png_get_hIST+0x20>
leaveq 
retq   
test   %rdx,%rdx
jne    be27 <png_get_hIST+0x27>
leaveq 
retq   
mov    0x100(%rsi),%rax
mov    %rax,(%rdx)
mov    $0x40,%eax
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

000000000000be40 <png_get_IHDR>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
xor    %eax,%eax
test   %rdi,%rdi
jne    be51 <png_get_IHDR+0x11>
leaveq 
retq   
test   %rsi,%rsi
jne    be58 <png_get_IHDR+0x18>
leaveq 
retq   
test   %rdx,%rdx
je     be61 <png_get_IHDR+0x21>
mov    (%rsi),%eax
mov    %eax,(%rdx)
test   %rcx,%rcx
je     be6b <png_get_IHDR+0x2b>
mov    0x4(%rsi),%eax
mov    %eax,(%rcx)
test   %r8,%r8
je     be77 <png_get_IHDR+0x37>
movzbl 0x24(%rsi),%eax
mov    %eax,(%r8)
test   %r9,%r9
je     be83 <png_get_IHDR+0x43>
movzbl 0x25(%rsi),%eax
mov    %eax,(%r9)
mov    0x18(%rbp),%rax
test   %rax,%rax
je     be92 <png_get_IHDR+0x52>
movzbl 0x26(%rsi),%ecx
mov    %ecx,(%rax)
mov    0x20(%rbp),%rax
test   %rax,%rax
je     bea1 <png_get_IHDR+0x61>
movzbl 0x27(%rsi),%ecx
mov    %ecx,(%rax)
mov    0x10(%rbp),%rax
test   %rax,%rax
je     beb0 <png_get_IHDR+0x70>
movzbl 0x28(%rsi),%ecx
mov    %ecx,(%rax)
movzbl 0x26(%rsi),%r10d
movzbl 0x27(%rsi),%eax
mov    (%rsi),%r11d
mov    0x4(%rsi),%edx
movzbl 0x24(%rsi),%ecx
movzbl 0x25(%rsi),%r8d
movzbl 0x28(%rsi),%r9d
mov    %r10d,(%rsp)
mov    %eax,0x8(%rsp)
mov    %r11,%rsi
callq  7d80 <png_check_IHDR>
mov    $0x1,%eax
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nop

000000000000bef0 <png_get_oFFs>:
push   %rbp
mov    %rsp,%rbp
xor    %eax,%eax
test   %rdi,%rdi
jne    befd <png_get_oFFs+0xd>
leaveq 
retq   
test   %rsi,%rsi
jne    bf04 <png_get_oFFs+0x14>
leaveq 
retq   
mov    0x8(%rsi),%edi
and    $0x100,%edi
test   %edi,%edi
jne    bf13 <png_get_oFFs+0x23>
leaveq 
retq   
test   %rdx,%rdx
jne    bf1a <png_get_oFFs+0x2a>
leaveq 
retq   
test   %rcx,%rcx
jne    bf21 <png_get_oFFs+0x31>
leaveq 
retq   
test   %r8,%r8
jne    bf28 <png_get_oFFs+0x38>
leaveq 
retq   
movslq 0xd4(%rsi),%rax
mov    %eax,(%rdx)
movslq 0xd8(%rsi),%rax
mov    %eax,(%rcx)
movzbl 0xdc(%rsi),%eax
mov    %eax,(%r8)
mov    $0x100,%eax
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

000000000000bf50 <png_get_pCAL>:
push   %rbp
mov    %rsp,%rbp
xor    %eax,%eax
test   %rdi,%rdi
jne    bf5d <png_get_pCAL+0xd>
leaveq 
retq   
test   %rsi,%rsi
jne    bf64 <png_get_pCAL+0x14>
leaveq 
retq   
mov    0x8(%rsi),%edi
and    $0x400,%edi
test   %edi,%edi
jne    bf73 <png_get_pCAL+0x23>
leaveq 
retq   
test   %rdx,%rdx
jne    bf7a <png_get_pCAL+0x2a>
leaveq 
retq   
test   %rcx,%rcx
jne    bf81 <png_get_pCAL+0x31>
leaveq 
retq   
test   %r8,%r8
jne    bf88 <png_get_pCAL+0x38>
leaveq 
retq   
test   %r9,%r9
jne    bf8f <png_get_pCAL+0x3f>
leaveq 
retq   
mov    0x10(%rbp),%r11
test   %r11,%r11
jne    bf9a <png_get_pCAL+0x4a>
leaveq 
retq   
mov    0x18(%rbp),%rdi
test   %rdi,%rdi
jne    bfa5 <png_get_pCAL+0x55>
leaveq 
retq   
mov    0x20(%rbp),%r10
test   %r10,%r10
jne    bfb0 <png_get_pCAL+0x60>
leaveq 
retq   
mov    0x108(%rsi),%rax
mov    %rax,(%rdx)
movslq 0x110(%rsi),%rax
mov    %eax,(%rcx)
movslq 0x114(%rsi),%rax
mov    %eax,(%r8)
movzbl 0x128(%rsi),%eax
mov    %eax,(%r9)
movzbl 0x129(%rsi),%eax
mov    %eax,(%r11)
mov    0x118(%rsi),%rax
mov    %rax,(%rdi)
mov    0x120(%rsi),%rax
mov    %rax,(%r10)
mov    $0x400,%eax
leaveq 
retq   
nopl   0x0(%rax)

000000000000c000 <png_get_pHYs>:
push   %rbp
mov    %rsp,%rbp
xor    %eax,%eax
test   %rdi,%rdi
jne    c00d <png_get_pHYs+0xd>
leaveq 
retq   
test   %rsi,%rsi
jne    c014 <png_get_pHYs+0x14>
leaveq 
retq   
mov    0x8(%rsi),%edi
and    $0x80,%edi
test   %edi,%edi
jne    c023 <png_get_pHYs+0x23>
leaveq 
retq   
mov    $0x80,%edi
test   %rdx,%rdx
je     c038 <png_get_pHYs+0x38>
mov    0xe0(%rsi),%eax
mov    %eax,(%rdx)
mov    %rdi,%rax
test   %rcx,%rcx
je     c048 <png_get_pHYs+0x48>
mov    0xe4(%rsi),%eax
mov    %eax,(%rcx)
mov    %rdi,%rax
test   %r8,%r8
jne    c04f <png_get_pHYs+0x4f>
leaveq 
retq   
movzbl 0xe8(%rsi),%eax
mov    %eax,(%r8)
mov    %rdi,%rax
leaveq 
retq   
xchg   %ax,%ax

000000000000c060 <png_get_PLTE>:
push   %rbp
mov    %rsp,%rbp
xor    %eax,%eax
test   %rdi,%rdi
jne    c06d <png_get_PLTE+0xd>
leaveq 
retq   
test   %rsi,%rsi
jne    c074 <png_get_PLTE+0x14>
leaveq 
retq   
mov    0x8(%rsi),%edi
and    $0x8,%edi
test   %edi,%edi
jne    c080 <png_get_PLTE+0x20>
leaveq 
retq   
test   %rdx,%rdx
jne    c087 <png_get_PLTE+0x27>
leaveq 
retq   
mov    0x18(%rsi),%rax
mov    %rax,(%rdx)
movzwl 0x20(%rsi),%eax
mov    %eax,(%rcx)
mov    $0x8,%eax
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

000000000000c0a0 <png_get_sBIT>:
push   %rbp
mov    %rsp,%rbp
xor    %eax,%eax
test   %rdi,%rdi
jne    c0ad <png_get_sBIT+0xd>
leaveq 
retq   
test   %rsi,%rsi
jne    c0b4 <png_get_sBIT+0x14>
leaveq 
retq   
mov    0x8(%rsi),%ecx
and    $0x2,%ecx
test   %ecx,%ecx
jne    c0c0 <png_get_sBIT+0x20>
leaveq 
retq   
test   %rdx,%rdx
jne    c0c7 <png_get_sBIT+0x27>
leaveq 
retq   
lea    0xb0(%rsi),%rax
mov    %rax,(%rdx)
mov    $0x2,%eax
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

000000000000c0e0 <png_get_sRGB>:
push   %rbp
mov    %rsp,%rbp
xor    %eax,%eax
test   %rdi,%rdi
jne    c0ed <png_get_sRGB+0xd>
leaveq 
retq   
test   %rsi,%rsi
jne    c0f4 <png_get_sRGB+0x14>
leaveq 
retq   
mov    0x8(%rsi),%ecx
and    $0x800,%ecx
test   %ecx,%ecx
jne    c103 <png_get_sRGB+0x23>
leaveq 
retq   
test   %rdx,%rdx
jne    c10a <png_get_sRGB+0x2a>
leaveq 
retq   
movzwl 0x7c(%rsi),%eax
mov    %eax,(%rdx)
mov    $0x800,%eax
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

000000000000c120 <png_get_iCCP>:
push   %rbp
mov    %rsp,%rbp
xor    %eax,%eax
test   %rdi,%rdi
jne    c12d <png_get_iCCP+0xd>
leaveq 
retq   
test   %rsi,%rsi
jne    c134 <png_get_iCCP+0x14>
leaveq 
retq   
mov    0x8(%rsi),%edi
and    $0x1000,%edi
test   %edi,%edi
jne    c143 <png_get_iCCP+0x23>
leaveq 
retq   
test   %rdx,%rdx
jne    c14a <png_get_iCCP+0x2a>
leaveq 
retq   
test   %rcx,%rcx
jne    c151 <png_get_iCCP+0x31>
leaveq 
retq   
test   %r8,%r8
jne    c158 <png_get_iCCP+0x38>
leaveq 
retq   
test   %r9,%r9
jne    c15f <png_get_iCCP+0x3f>
leaveq 
retq   
mov    0x80(%rsi),%rax
mov    %rax,(%rdx)
mov    0x88(%rsi),%rax
mov    %rax,(%r8)
mov    0x88(%rsi),%rsi
movzbl (%rsi),%eax
shl    $0x18,%eax
movzbl 0x1(%rsi),%edx
shl    $0x10,%edx
add    %eax,%edx
movzbl 0x2(%rsi),%eax
shl    $0x8,%eax
add    %edx,%eax
movzbl 0x3(%rsi),%edx
add    %edx,%eax
mov    %eax,(%r9)
movl   $0x0,(%rcx)
mov    $0x1000,%eax
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

000000000000c1b0 <png_get_sPLT>:
push   %rbp
mov    %rsp,%rbp
xor    %eax,%eax
test   %rdi,%rdi
jne    c1bd <png_get_sPLT+0xd>
leaveq 
retq   
test   %rsi,%rsi
jne    c1c4 <png_get_sPLT+0x14>
leaveq 
retq   
test   %rdx,%rdx
jne    c1cb <png_get_sPLT+0x1b>
leaveq 
retq   
mov    0x140(%rsi),%rax
mov    %rax,(%rdx)
movslq 0x148(%rsi),%rax
leaveq 
retq   
xchg   %ax,%ax

000000000000c1e0 <png_get_text>:
push   %rbp
mov    %rsp,%rbp
test   %rdi,%rdi
jne    c1f2 <png_get_text+0x12>
xor    %eax,%eax
test   %rcx,%rcx
jne    c228 <png_get_text+0x48>
leaveq 
retq   
test   %rsi,%rsi
je     c1e9 <png_get_text+0x9>
movslq 0x94(%rsi),%rax
test   %eax,%eax
jle    c1e9 <png_get_text+0x9>
test   %rdx,%rdx
je     c211 <png_get_text+0x31>
mov    0xa0(%rsi),%rax
mov    %rax,(%rdx)
test   %rcx,%rcx
je     c21f <png_get_text+0x3f>
movslq 0x94(%rsi),%rax
mov    %eax,(%rcx)
movslq 0x94(%rsi),%rax
leaveq 
retq   
movl   $0x0,(%rcx)
leaveq 
retq   

000000000000c230 <png_get_tIME>:
push   %rbp
mov    %rsp,%rbp
xor    %eax,%eax
test   %rdi,%rdi
jne    c23d <png_get_tIME+0xd>
leaveq 
retq   
test   %rsi,%rsi
jne    c244 <png_get_tIME+0x14>
leaveq 
retq   
mov    0x8(%rsi),%ecx
and    $0x200,%ecx
test   %ecx,%ecx
jne    c253 <png_get_tIME+0x23>
leaveq 
retq   
test   %rdx,%rdx
jne    c25a <png_get_tIME+0x2a>
leaveq 
retq   
lea    0xa8(%rsi),%rax
mov    %rax,(%rdx)
mov    $0x200,%eax
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

000000000000c270 <png_get_tRNS>:
push   %rbp
mov    %rsp,%rbp
xor    %eax,%eax
test   %rdi,%rdi
jne    c27d <png_get_tRNS+0xd>
leaveq 
retq   
test   %rsi,%rsi
jne    c284 <png_get_tRNS+0x14>
leaveq 
retq   
mov    0x8(%rsi),%edi
and    $0x10,%edi
test   %edi,%edi
jne    c290 <png_get_tRNS+0x20>
leaveq 
retq   
mov    $0x10,%edi
movzbl 0x25(%rsi),%r9d
cmp    $0x3,%r9b
je     c2c0 <png_get_tRNS+0x50>
test   %r8,%r8
je     c2b2 <png_get_tRNS+0x42>
lea    0xc0(%rsi),%rax
mov    %rax,(%r8)
mov    %rdi,%rax
test   %rdx,%rdx
je     c2e1 <png_get_tRNS+0x71>
movq   $0x0,(%rdx)
jmp    c2e1 <png_get_tRNS+0x71>
test   %rdx,%rdx
je     c2d2 <png_get_tRNS+0x62>
mov    0xb8(%rsi),%rax
mov    %rax,(%rdx)
mov    %rdi,%rax
test   %r8,%r8
je     c2e1 <png_get_tRNS+0x71>
lea    0xc0(%rsi),%rdx
mov    %rdx,(%r8)
test   %rcx,%rcx
jne    c2e8 <png_get_tRNS+0x78>
leaveq 
retq   
movzwl 0x22(%rsi),%eax
mov    %eax,(%rcx)
mov    %rdi,%rax
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

000000000000c300 <png_get_sCAL>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
xor    %eax,%eax
test   %rdi,%rdi
jne    c311 <png_get_sCAL+0x11>
leaveq 
retq   
test   %rsi,%rsi
jne    c318 <png_get_sCAL+0x18>
leaveq 
retq   
mov    0x8(%rsi),%edi
and    $0x4000,%edi
test   %edi,%edi
jne    c327 <png_get_sCAL+0x27>
leaveq 
retq   
movzbl 0x14c(%rsi),%eax
mov    %eax,(%rdx)
mov    0x150(%rsi),%rdi
mov    %r13,-0x8(%rbp)
mov    %r14,-0x10(%rbp)
mov    %r15,-0x18(%rbp)
mov    %r8,%r13
mov    %rcx,%r14
mov    %rsi,%r15
callq  51a0 <atof@plt>
movsd  %xmm0,(%r14)
mov    0x158(%r15),%rdi
callq  51a0 <atof@plt>
movsd  %xmm0,0x0(%r13)
mov    $0x4000,%eax
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

000000000000c380 <png_get_sCAL_fixed>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
xor    %eax,%eax
test   %rdi,%rdi
jne    c391 <png_get_sCAL_fixed+0x11>
leaveq 
retq   
test   %rsi,%rsi
jne    c398 <png_get_sCAL_fixed+0x18>
leaveq 
retq   
mov    0x8(%rsi),%r9d
and    $0x4000,%r9d
test   %r9d,%r9d
jne    c3aa <png_get_sCAL_fixed+0x2a>
leaveq 
retq   
movzbl 0x14c(%rsi),%eax
mov    %eax,(%rdx)
mov    0x150(%rsi),%rax
mov    %r12,-0x8(%rbp)
mov    %r13,-0x10(%rbp)
mov    %r14,-0x18(%rbp)
mov    %r15,-0x20(%rbp)
mov    %rdi,%r12
mov    %rax,%rdi
mov    %r8,%r13
mov    %rcx,%r14
mov    %rsi,%r15
callq  51a0 <atof@plt>
lea    0x211ea(%rip),%rsi        # 2d5cf <valid_parameters.6+0x79>
mov    %r12,%rdi
callq  69e0 <png_fixed>
mov    %eax,(%r14)
mov    0x158(%r15),%rdi
callq  51a0 <atof@plt>
mov    %r12,%rdi
lea    0x211d4(%rip),%rsi        # 2d5da <valid_parameters.6+0x84>
callq  69e0 <png_fixed>
mov    %eax,0x0(%r13)
mov    $0x4000,%eax
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)

000000000000c430 <png_get_sCAL_s>:
push   %rbp
mov    %rsp,%rbp
xor    %eax,%eax
test   %rdi,%rdi
jne    c43d <png_get_sCAL_s+0xd>
leaveq 
retq   
test   %rsi,%rsi
jne    c444 <png_get_sCAL_s+0x14>
leaveq 
retq   
mov    0x8(%rsi),%edi
and    $0x4000,%edi
test   %edi,%edi
jne    c453 <png_get_sCAL_s+0x23>
leaveq 
retq   
movzbl 0x14c(%rsi),%eax
mov    %eax,(%rdx)
mov    0x150(%rsi),%rax
mov    %rax,(%rcx)
mov    0x158(%rsi),%rax
mov    %rax,(%r8)
mov    $0x4000,%eax
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

000000000000c480 <png_get_unknown_chunks>:
push   %rbp
mov    %rsp,%rbp
xor    %eax,%eax
test   %rdi,%rdi
jne    c48d <png_get_unknown_chunks+0xd>
leaveq 
retq   
test   %rsi,%rsi
jne    c494 <png_get_unknown_chunks+0x14>
leaveq 
retq   
test   %rdx,%rdx
jne    c49b <png_get_unknown_chunks+0x1b>
leaveq 
retq   
mov    0x130(%rsi),%rax
mov    %rax,(%rdx)
movslq 0x138(%rsi),%rax
leaveq 
retq   
xchg   %ax,%ax

000000000000c4b0 <png_get_user_width_max>:
push   %rbp
mov    %rsp,%rbp
test   %rdi,%rdi
jne    c4bd <png_get_user_width_max+0xd>
xor    %eax,%eax
leaveq 
retq   
mov    0x41c(%rdi),%eax
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)

000000000000c4d0 <png_get_user_height_max>:
push   %rbp
mov    %rsp,%rbp
test   %rdi,%rdi
jne    c4dd <png_get_user_height_max+0xd>
xor    %eax,%eax
leaveq 
retq   
mov    0x420(%rdi),%eax
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)

000000000000c4f0 <png_get_chunk_cache_max>:
push   %rbp
mov    %rsp,%rbp
test   %rdi,%rdi
jne    c4fd <png_get_chunk_cache_max+0xd>
xor    %eax,%eax
leaveq 
retq   
mov    0x424(%rdi),%eax
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)

000000000000c510 <png_get_chunk_malloc_max>:
push   %rbp
mov    %rsp,%rbp
test   %rdi,%rdi
jne    c51d <png_get_chunk_malloc_max+0xd>
xor    %eax,%eax
leaveq 
retq   
mov    0x428(%rdi),%rax
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)

000000000000c530 <png_get_pixels_per_inch>:
push   %rbp
mov    %rsp,%rbp
callq  5710 <png_get_pixels_per_meter@plt>
mov    %rax,%rdi
callq  c740 <ppi_from_ppm>
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

000000000000c550 <png_get_x_pixels_per_inch>:
push   %rbp
mov    %rsp,%rbp
callq  5210 <png_get_x_pixels_per_meter@plt>
mov    %rax,%rdi
callq  c740 <ppi_from_ppm>
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

000000000000c570 <png_get_y_pixels_per_inch>:
push   %rbp
mov    %rsp,%rbp
callq  53a0 <png_get_y_pixels_per_meter@plt>
mov    %rax,%rdi
callq  c740 <ppi_from_ppm>
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

000000000000c590 <png_get_x_offset_inches>:
push   %rbp
mov    %rsp,%rbp
callq  52f0 <png_get_x_offset_microns@plt>
cvtsi2sd %eax,%xmm0
movsd  0x2104b(%rip),%xmm1        # 2d5f0 <valid_parameters.6+0x9a>
mulsd  %xmm1,%xmm0
cvtsd2ss %xmm0,%xmm0
leaveq 
retq   
nop

000000000000c5b0 <png_get_x_offset_inches_fixed>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x8(%rbp)
mov    %rdi,%r15
callq  52f0 <png_get_x_offset_microns@plt>
mov    %rax,%rsi
mov    %r15,%rdi
callq  c780 <png_fixed_inches_from_microns>
mov    -0x8(%rbp),%r15
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)

000000000000c5e0 <png_get_y_offset_inches>:
push   %rbp
mov    %rsp,%rbp
callq  5030 <png_get_y_offset_microns@plt>
cvtsi2sd %eax,%xmm0
movsd  0x20ffb(%rip),%xmm1        # 2d5f0 <valid_parameters.6+0x9a>
mulsd  %xmm1,%xmm0
cvtsd2ss %xmm0,%xmm0
leaveq 
retq   
nop

000000000000c600 <png_get_y_offset_inches_fixed>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x8(%rbp)
mov    %rdi,%r15
callq  5030 <png_get_y_offset_microns@plt>
mov    %rax,%rsi
mov    %r15,%rdi
callq  c780 <png_fixed_inches_from_microns>
mov    -0x8(%rbp),%r15
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)

000000000000c630 <png_get_pHYs_dpi>:
push   %rbp
mov    %rsp,%rbp
xor    %eax,%eax
test   %rdi,%rdi
jne    c63d <png_get_pHYs_dpi+0xd>
leaveq 
retq   
test   %rsi,%rsi
jne    c644 <png_get_pHYs_dpi+0x14>
leaveq 
retq   
mov    0x8(%rsi),%edi
and    $0x80,%edi
test   %edi,%edi
jne    c653 <png_get_pHYs_dpi+0x23>
leaveq 
retq   
mov    $0x80,%edi
test   %rdx,%rdx
je     c668 <png_get_pHYs_dpi+0x38>
mov    0xe0(%rsi),%eax
mov    %eax,(%rdx)
mov    %rdi,%rax
test   %rcx,%rcx
je     c678 <png_get_pHYs_dpi+0x48>
mov    0xe4(%rsi),%eax
mov    %eax,(%rcx)
mov    %rdi,%rax
test   %r8,%r8
jne    c67f <png_get_pHYs_dpi+0x4f>
leaveq 
retq   
movzbl 0xe8(%rsi),%eax
mov    %eax,(%r8)
cmp    $0x1,%al
je     c692 <png_get_pHYs_dpi+0x62>
mov    %rdi,%rax
leaveq 
retq   
test   %rdx,%rdx
movsd  0x20f5b(%rip),%xmm1        # 2d5f8 <valid_parameters.6+0xa2>
movsd  0x20f5b(%rip),%xmm2        # 2d600 <valid_parameters.6+0xaa>
je     c6bf <png_get_pHYs_dpi+0x8f>
mov    (%rdx),%eax
mov    %eax,%eax
cvtsi2sd %rax,%xmm0
mulsd  %xmm1,%xmm0
addsd  %xmm2,%xmm0
cvttsd2si %xmm0,%rax
mov    %eax,(%rdx)
test   %rcx,%rcx
jne    c6c9 <png_get_pHYs_dpi+0x99>
mov    %rdi,%rax
leaveq 
retq   
mov    (%rcx),%eax
mov    %eax,%eax
cvtsi2sd %rax,%xmm0
mulsd  %xmm1,%xmm0
addsd  %xmm2,%xmm0
cvttsd2si %xmm0,%rax
mov    %eax,(%rcx)
mov    %rdi,%rax
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)

000000000000c6f0 <png_get_io_state>:
push   %rbp
mov    %rsp,%rbp
mov    0x46c(%rdi),%eax
leaveq 
retq   
nopl   0x0(%rax)

000000000000c700 <png_get_io_chunk_type>:
push   %rbp
mov    %rsp,%rbp
mov    0x218(%rdi),%eax
leaveq 
retq   
nopl   0x0(%rax)

000000000000c710 <png_get_palette_max>:
push   %rbp
mov    %rsp,%rbp
mov    $0xffffffffffffffff,%rax
test   %rdi,%rdi
jne    c722 <png_get_palette_max+0x12>
leaveq 
retq   
test   %rsi,%rsi
jne    c729 <png_get_palette_max+0x19>
leaveq 
retq   
movslq 0x25c(%rdi),%rax
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   (%rax)

000000000000c740 <ppi_from_ppm>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
xor    %eax,%eax
cmp    $0x7fffffff,%edi
jbe    c754 <ppi_from_ppm+0x14>
leaveq 
retq   
mov    %rdi,%rsi
lea    -0x4(%rbp),%rdi
mov    $0x7f,%edx
mov    $0x1388,%ecx
callq  8970 <png_muldiv>
test   %eax,%eax
jne    c772 <ppi_from_ppm+0x32>
xor    %eax,%eax
leaveq 
retq   
mov    -0x4(%rbp),%eax
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

000000000000c780 <png_fixed_inches_from_microns>:
push   %rbp
mov    %rsp,%rbp
mov    $0x1f4,%edx
mov    $0x7f,%ecx
callq  8a00 <png_muldiv_warn>
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)
nop

000000000000c7a0 <png_set_mem_fn>:
push   %rbp
mov    %rsp,%rbp
test   %rdi,%rdi
jne    c7ab <png_set_mem_fn+0xb>
leaveq 
retq   
mov    %rsi,0x3e0(%rdi)
mov    %rdx,0x3e8(%rdi)
mov    %rcx,0x3f0(%rdi)
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   (%rax)

000000000000c7d0 <png_get_mem_ptr>:
push   %rbp
mov    %rsp,%rbp
test   %rdi,%rdi
jne    c7dd <png_get_mem_ptr+0xd>
xor    %eax,%eax
leaveq 
retq   
mov    0x3e0(%rdi),%rax
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)

000000000000c7f0 <png_malloc>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
test   %rdi,%rdi
jne    c801 <png_malloc+0x11>
xor    %eax,%eax
leaveq 
retq   
mov    %rdi,%rax
mov    %rdi,-0x8(%rbp)
mov    %rax,%rdi
callq  c940 <png_malloc_base>
test   %rax,%rax
je     c817 <png_malloc+0x27>
leaveq 
retq   
lea    0x20dea(%rip),%rsi        # 2d608 <valid_parameters.6+0xb2>
mov    -0x8(%rbp),%rdi
callq  5470 <png_error@plt>
nopw   0x0(%rax,%rax,1)

000000000000c830 <png_calloc>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %rsi,-0x8(%rbp)
callq  5800 <png_malloc@plt>
test   %rax,%rax
jne    c848 <png_calloc+0x18>
leaveq 
retq   
xor    %esi,%esi
mov    %rax,%rdi
mov    %r15,-0x10(%rbp)
mov    %rax,%r15
mov    -0x8(%rbp),%rdx
callq  5350 <memset@plt>
mov    %r15,%rax
mov    -0x10(%rbp),%r15
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)

000000000000c870 <png_malloc_warn>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
xor    %eax,%eax
test   %rdi,%rdi
jne    c881 <png_malloc_warn+0x11>
leaveq 
retq   
mov    %rdi,%rax
mov    %rdi,-0x8(%rbp)
mov    %rax,%rdi
callq  c940 <png_malloc_base>
test   %rax,%rax
je     c897 <png_malloc_warn+0x27>
leaveq 
retq   
lea    0x20d6a(%rip),%rsi        # 2d608 <valid_parameters.6+0xb2>
mov    -0x8(%rbp),%rdi
callq  5390 <png_warning@plt>
xor    %eax,%eax
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

000000000000c8b0 <png_free>:
push   %rbp
mov    %rsp,%rbp
test   %rdi,%rdi
jne    c8bb <png_free+0xb>
leaveq 
retq   
test   %rsi,%rsi
jne    c8c2 <png_free+0x12>
leaveq 
retq   
mov    0x3f0(%rdi),%rax
test   %rax,%rax
jne    c8d5 <png_free+0x25>
callq  5700 <png_free_default@plt>
leaveq 
retq   
callq  *%rax
leaveq 
retq   
nopl   0x0(%rax)

000000000000c8e0 <png_malloc_default>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
xor    %eax,%eax
test   %rdi,%rdi
jne    c8f1 <png_malloc_default+0x11>
leaveq 
retq   
mov    %rdi,-0x8(%rbp)
mov    %rax,%rdi
callq  c940 <png_malloc_base>
test   %rax,%rax
je     c904 <png_malloc_default+0x24>
leaveq 
retq   
lea    0x20d0b(%rip),%rsi        # 2d616 <valid_parameters.6+0xc0>
mov    -0x8(%rbp),%rdi
callq  5470 <png_error@plt>
data16 nopw %cs:0x0(%rax,%rax,1)
nop

000000000000c920 <png_free_default>:
push   %rbp
mov    %rsp,%rbp
test   %rdi,%rdi
jne    c92b <png_free_default+0xb>
leaveq 
retq   
test   %rsi,%rsi
jne    c932 <png_free_default+0x12>
leaveq 
retq   
mov    %rsi,%rdi
callq  5070 <free@plt>
leaveq 
retq   
nopl   0x0(%rax)

000000000000c940 <png_malloc_base>:
push   %rbp
mov    %rsp,%rbp
test   %rsi,%rsi
jne    c94d <png_malloc_base+0xd>
xor    %eax,%eax
leaveq 
retq   
test   %rdi,%rdi
jne    c95c <png_malloc_base+0x1c>
mov    %rsi,%rdi
callq  55c0 <malloc@plt>
leaveq 
retq   
mov    0x3e8(%rdi),%rax
test   %rax,%rax
je     c952 <png_malloc_base+0x12>
callq  *%rax
leaveq 
retq   
nopl   0x0(%rax)

000000000000c970 <png_malloc_array>:
push   %rbp
mov    %rsp,%rbp
test   %esi,%esi
jle    c984 <png_malloc_array+0x14>
test   %rdx,%rdx
je     c984 <png_malloc_array+0x14>
callq  cad0 <png_malloc_array_checked>
leaveq 
retq   
lea    0x20c99(%rip),%rsi        # 2d624 <valid_parameters.6+0xce>
callq  5470 <png_error@plt>

000000000000c990 <png_realloc_array>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
test   %ecx,%ecx
jle    c9c1 <png_realloc_array+0x31>
test   %r8,%r8
je     c9c1 <png_realloc_array+0x31>
test   %edx,%edx
js     c9c1 <png_realloc_array+0x31>
test   %rsi,%rsi
je     c9bd <png_realloc_array+0x2d>
xor    %eax,%eax
mov    %rdx,%r9
xor    $0x7fffffff,%r9d
cmp    %r9d,%ecx
jle    c9cd <png_realloc_array+0x3d>
leaveq 
retq   
test   %edx,%edx
jle    c9aa <png_realloc_array+0x1a>
lea    0x20c78(%rip),%rsi        # 2d640 <valid_parameters.6+0xea>
callq  5470 <png_error@plt>
lea    (%rcx,%rdx,1),%r9d
mov    %r8,%rax
mov    %r15,-0x28(%rbp)
mov    %r8,-0x20(%rbp)
mov    %rcx,-0x8(%rbp)
mov    %rsi,-0x10(%rbp)
mov    %r9,%rsi
mov    %rdx,%r15
mov    %rax,%rdx
callq  cad0 <png_malloc_array_checked>
test   %rax,%rax
jne    c9ff <png_realloc_array+0x6f>
xor    %eax,%eax
mov    -0x28(%rbp),%r15
leaveq 
retq   
mov    %r15d,%ecx
mov    -0x20(%rbp),%rdx
imul   %rdx,%rcx
test   %r15d,%r15d
jg     ca14 <png_realloc_array+0x84>
mov    %rax,%r15
jmp    ca45 <png_realloc_array+0xb5>
mov    %rax,%rdi
mov    %rcx,%r8
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %rdx,%r13
mov    %r8,%rdx
mov    %rcx,%r14
mov    %rax,%r15
mov    -0x10(%rbp),%rsi
callq  54c0 <memcpy@plt>
mov    %r14,%rcx
mov    %r13,%rdx
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
lea    (%r15,%rcx,1),%rdi
mov    -0x8(%rbp),%rax
mov    %eax,%eax
imul   %rax,%rdx
xor    %esi,%esi
callq  5350 <memset@plt>
mov    %r15,%rax
mov    -0x28(%rbp),%r15
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

000000000000ca70 <png_destroy_png_struct>:
push   %rbp
mov    %rsp,%rbp
sub    $0x4f0,%rsp
test   %rdi,%rdi
jne    ca82 <png_destroy_png_struct+0x12>
leaveq 
retq   
lea    -0x4f0(%rbp),%rax
mov    $0x4e8,%edx
mov    %rdi,%rsi
mov    %r15,-0x8(%rbp)
mov    %rdi,%r15
mov    %rax,%rdi
callq  54c0 <memcpy@plt>
xor    %esi,%esi
mov    %r15,%rdi
mov    $0x4e8,%edx
callq  5350 <memset@plt>
mov    %r15,%rsi
lea    -0x4f0(%rbp),%rdi
mov    %rdi,%r15
callq  5790 <png_free@plt>
mov    %r15,%rdi
callq  abf0 <png_free_jmpbuf>
mov    -0x8(%rbp),%r15
leaveq 
retq   
nop

000000000000cad0 <png_malloc_array_checked>:
push   %rbp
mov    %rsp,%rbp
mov    %rsi,%r8
mov    %rdx,%rsi
xor    %ecx,%ecx
mov    $0xffffffffffffffff,%rax
mov    %rcx,%rdx
div    %rsi
movslq %r8d,%rdx
cmp    %rdx,%rax
jae    caf6 <png_malloc_array_checked+0x26>
mov    %rcx,%rax
leaveq 
retq   
imul   %rdx,%rsi
callq  c940 <png_malloc_base>
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)
nopl   0x0(%rax,%rax,1)

000000000000cb10 <png_set_progressive_read_fn>:
push   %rbp
mov    %rsp,%rbp
test   %rdi,%rdi
jne    cb1b <png_set_progressive_read_fn+0xb>
leaveq 
retq   
mov    %rdx,0x310(%rdi)
mov    %rcx,0x318(%rdi)
mov    %r8,0x320(%rdi)
lea    0x119(%rip),%rdx        # cc50 <png_push_fill_buffer>
callq  5560 <png_set_read_fn@plt>
leaveq 
retq   
xchg   %ax,%ax

000000000000cb40 <png_get_progressive_ptr>:
push   %rbp
mov    %rsp,%rbp
test   %rdi,%rdi
jne    cb4d <png_get_progressive_ptr+0xd>
xor    %eax,%eax
leaveq 
retq   
mov    0x108(%rdi),%rax
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)

000000000000cb60 <png_process_data>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
test   %rdi,%rdi
jne    cb6f <png_process_data+0xf>
leaveq 
retq   
test   %rsi,%rsi
jne    cb76 <png_process_data+0x16>
leaveq 
retq   
mov    %rdi,%rax
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rdi,%r14
mov    %rax,%rdi
mov    %rsi,%r15
mov    %rdx,%rsi
mov    %rcx,%rdx
callq  dae0 <png_push_restore_buffer>
jmp    cba2 <png_process_data+0x42>
mov    %r14,%rdi
mov    %r15,%rsi
callq  e770 <png_process_some_data>
mov    0x360(%r14),%rax
test   %rax,%rax
jne    cb97 <png_process_data+0x37>
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

000000000000cbc0 <png_process_data_pause>:
push   %rbp
mov    %rsp,%rbp
xor    %eax,%eax
test   %rdi,%rdi
jne    cbcd <png_process_data_pause+0xd>
leaveq 
retq   
test   %esi,%esi
jne    cbf1 <png_process_data_pause+0x31>
mov    0x360(%rdi),%rcx
movq   $0x0,0x360(%rdi)
mov    0x350(%rdi),%rdx
cmp    %rcx,%rdx
jb     cbfa <png_process_data_pause+0x3a>
leaveq 
retq   
callq  d920 <png_push_save_buffer>
xor    %eax,%eax
leaveq 
retq   
mov    %rcx,%rax
sub    %rdx,%rax
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   (%rax)

000000000000cc10 <png_process_data_skip>:
push   %rbp
mov    %rsp,%rbp
lea    0x20a5d(%rip),%rsi        # 2d678 <valid_parameters.6+0x122>
callq  b0f0 <png_app_warning>
xor    %eax,%eax
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nop

000000000000cc30 <png_progressive_combine_row>:
push   %rbp
mov    %rsp,%rbp
test   %rdi,%rdi
jne    cc3b <png_progressive_combine_row+0xb>
leaveq 
retq   
test   %rdx,%rdx
jne    cc42 <png_progressive_combine_row+0x12>
leaveq 
retq   
mov    $0x1,%edx
callq  1b430 <png_combine_row>
leaveq 
retq   
xchg   %ax,%ax

000000000000cc50 <png_push_fill_buffer>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
test   %rdi,%rdi
jne    cc5f <png_push_fill_buffer+0xf>
leaveq 
retq   
mov    0x350(%rdi),%rax
test   %rax,%rax
je     ccfe <png_push_fill_buffer+0xae>
cmp    %rdx,%rax
jbe    cc77 <png_push_fill_buffer+0x27>
mov    %rdx,%rax
mov    0x328(%rdi),%rcx
mov    %rsi,%r8
mov    %rax,%r9
mov    %r12,-0x8(%rbp)
mov    %r13,-0x10(%rbp)
mov    %r14,-0x18(%rbp)
mov    %r15,-0x20(%rbp)
mov    %rdx,%r12
mov    %r9,%rdx
mov    %rax,%r13
mov    %rsi,%r14
mov    %rcx,%rsi
mov    %rdi,%r15
mov    %r8,%rdi
callq  54c0 <memcpy@plt>
mov    0x360(%r15),%rax
sub    %r13,%rax
mov    %rax,0x360(%r15)
mov    0x350(%r15),%rax
sub    %r13,%rax
mov    %rax,0x350(%r15)
mov    %r13,%rax
add    0x328(%r15),%rax
mov    %rax,0x328(%r15)
mov    %r12,%rdx
sub    %r13,%rdx
lea    (%r14,%r13,1),%rsi
mov    %r15,%rdi
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
test   %rdx,%rdx
jne    cd05 <png_push_fill_buffer+0xb5>
leaveq 
retq   
mov    0x368(%rdi),%rax
test   %rax,%rax
jne    cd13 <png_push_fill_buffer+0xc3>
leaveq 
retq   
cmp    %rax,%rdx
jae    cd1b <png_push_fill_buffer+0xcb>
mov    %rdx,%rax
mov    0x338(%rdi),%rcx
mov    %rax,%rdx
mov    %r14,-0x18(%rbp)
mov    %r15,-0x20(%rbp)
mov    %rax,%r14
mov    %rdi,%r15
mov    %rsi,%rdi
mov    %rcx,%rsi
callq  54c0 <memcpy@plt>
mov    0x360(%r15),%rax
sub    %r14,%rax
mov    %rax,0x360(%r15)
mov    0x368(%r15),%rax
sub    %r14,%rax
mov    %rax,0x368(%r15)
add    0x338(%r15),%r14
mov    %r14,0x338(%r15)
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

000000000000cd80 <png_push_read_chunk>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    0x12c(%rdi),%eax
and    $0x100,%eax
test   %eax,%eax
je     cf26 <png_push_read_chunk+0x1a6>
mov    %r14,%rax
mov    %rsi,%r14
mov    %r15,%rcx
mov    %r13,%r15
mov    %rdi,%r13
mov    0x218(%r13),%r8d
cmp    $0x49444154,%r8d
je     d000 <png_push_read_chunk+0x280>
cmp    $0x49484452,%r8d
je     d0af <png_push_read_chunk+0x32f>
cmp    $0x49454e44,%r8d
je     d0fe <png_push_read_chunk+0x37e>
mov    %r13,%rdi
mov    %r8,%rsi
mov    %r15,-0x8(%rbp)
mov    %rax,-0x18(%rbp)
mov    %rcx,-0x28(%rbp)
mov    %r8,%r15
callq  6e80 <png_chunk_unknown_handling>
test   %eax,%eax
jne    d149 <png_push_read_chunk+0x3c9>
cmp    $0x504c5445,%r15d
je     d18d <png_push_read_chunk+0x40d>
cmp    $0x49444154,%r15d
je     d1c1 <png_push_read_chunk+0x441>
mov    0x218(%r13),%eax
cmp    $0x67414d41,%eax
je     d20d <png_push_read_chunk+0x48d>
cmp    $0x73424954,%eax
je     d241 <png_push_read_chunk+0x4c1>
cmp    $0x6348524d,%eax
je     d275 <png_push_read_chunk+0x4f5>
cmp    $0x73524742,%r15d
je     d2a9 <png_push_read_chunk+0x529>
cmp    $0x69434350,%eax
je     d2dd <png_push_read_chunk+0x55d>
cmp    $0x73504c54,%r15d
je     d311 <png_push_read_chunk+0x591>
cmp    $0x74524e53,%r15d
je     d345 <png_push_read_chunk+0x5c5>
cmp    $0x624b4744,%r15d
je     d379 <png_push_read_chunk+0x5f9>
cmp    $0x68495354,%r15d
je     d3ad <png_push_read_chunk+0x62d>
cmp    $0x70485973,%r15d
je     d3e1 <png_push_read_chunk+0x661>
cmp    $0x6f464673,%r15d
je     d415 <png_push_read_chunk+0x695>
cmp    $0x7043414c,%r15d
je     d449 <png_push_read_chunk+0x6c9>
cmp    $0x7343414c,%r15d
je     d47d <png_push_read_chunk+0x6fd>
cmp    $0x74494d45,%r15d
je     d4b1 <png_push_read_chunk+0x731>
cmp    $0x74455874,%r15d
je     d4e5 <png_push_read_chunk+0x765>
cmp    $0x7a545874,%r15d
je     d519 <png_push_read_chunk+0x799>
cmp    $0x69545874,%r15d
je     d54d <png_push_read_chunk+0x7cd>
mov    0x360(%r13),%rcx
mov    0x348(%r13),%edx
lea    0x4(%rdx),%eax
mov    %eax,%eax
cmp    %rax,%rcx
jb     d581 <png_push_read_chunk+0x801>
mov    %r14,%rsi
xor    %ecx,%ecx
mov    %r13,%rdi
callq  1fe00 <png_handle_unknown>
mov    -0x18(%rbp),%r14
mov    -0x8(%rbp),%r15
jmpq   d0e2 <png_push_read_chunk+0x362>
mov    0x360(%rdi),%rax
cmp    $0x7,%rax
jbe    d597 <png_push_read_chunk+0x817>
lea    -0x30(%rbp),%r9
mov    $0x4,%r8d
mov    %rdi,%rcx
mov    %r9,%rax
mov    %r8,%rdx
mov    %r12,-0x8(%rbp)
mov    %r13,-0x10(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %r8,%r12
mov    %rdi,%r13
mov    %rcx,%rdi
mov    %rsi,%r14
mov    %rax,%rsi
mov    %r9,%r15
callq  cc50 <png_push_fill_buffer>
mov    %r15,%rsi
mov    %r13,%rdi
callq  5730 <png_get_uint_31@plt>
mov    %eax,0x348(%r13)
mov    %r13,%rdi
callq  6d80 <png_reset_crc>
mov    %r12,%rdx
lea    -0x2c(%rbp),%rsi
mov    %r13,%rdi
callq  1b210 <png_crc_read>
movzbl -0x2c(%rbp),%eax
shl    $0x18,%eax
movzbl -0x2b(%rbp),%ecx
shl    $0x10,%ecx
add    %eax,%ecx
movzbl -0x2a(%rbp),%eax
shl    $0x8,%eax
add    %eax,%ecx
movzbl -0x29(%rbp),%eax
lea    (%rcx,%rax,1),%esi
mov    %esi,0x218(%r13)
mov    %r13,%rdi
callq  1fcc0 <png_check_chunk_name>
mov    0x348(%r13),%esi
mov    %r13,%rdi
callq  1fd00 <png_check_chunk_length>
mov    0x12c(%r13),%eax
or     $0x100,%eax
mov    %eax,0x12c(%r13)
mov    -0x28(%rbp),%rcx
mov    -0x20(%rbp),%rax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r12
jmpq   cdaa <png_push_read_chunk+0x2a>
mov    0x12c(%r13),%edx
mov    %rdx,%rsi
and    $0x8,%esi
test   %esi,%esi
je     d01e <png_push_read_chunk+0x29e>
or     $0x2000,%edx
mov    %edx,0x12c(%r13)
mov    0x12c(%r13),%edx
mov    %rdx,%rsi
and    $0x1,%esi
test   %esi,%esi
je     d59e <png_push_read_chunk+0x81e>
movzbl 0x267(%r13),%esi
cmp    $0x3,%sil
je     d5ad <png_push_read_chunk+0x82d>
movl   $0x2,0x370(%r13)
mov    %rdx,%rsi
and    $0x4,%esi
test   %esi,%esi
jne    d5ca <png_push_read_chunk+0x84a>
mov    0x12c(%r13),%edx
mov    %rdx,%rsi
or     $0x4,%esi
mov    %esi,0x12c(%r13)
and    $0x8,%edx
test   %edx,%edx
je     cdbe <png_push_read_chunk+0x3e>
lea    0x20670(%rip),%rsi        # 2d6f4 <valid_parameters.6+0x19e>
mov    %r13,%rdi
mov    %r15,-0x10(%rbp)
mov    %rax,-0x20(%rbp)
mov    %rcx,-0x28(%rbp)
mov    %r8,%r15
callq  5590 <png_benign_error@plt>
mov    %r15,%r8
mov    -0x28(%rbp),%rcx
mov    -0x20(%rbp),%rax
mov    -0x10(%rbp),%r15
jmpq   cdbe <png_push_read_chunk+0x3e>
mov    0x348(%r13),%edx
cmp    $0xd,%edx
jne    d5f2 <png_push_read_chunk+0x872>
mov    0x360(%r13),%rsi
cmp    $0x10,%rsi
jbe    d601 <png_push_read_chunk+0x881>
mov    %r13,%rdi
mov    %rcx,-0x28(%rbp)
mov    %r14,%rsi
mov    %rax,%r14
callq  1cae0 <png_handle_IHDR>
mov    0x12c(%r13),%eax
and    $0xfffffeff,%eax
mov    %eax,0x12c(%r13)
mov    %r15,%r13
mov    -0x28(%rbp),%r15
leaveq 
retq   
mov    0x360(%r13),%rdi
mov    0x348(%r13),%edx
lea    0x4(%rdx),%esi
mov    %esi,%esi
cmp    %rsi,%rdi
jb     d61a <png_push_read_chunk+0x89a>
mov    %r13,%rdi
mov    %r14,%rsi
mov    %rax,-0x18(%rbp)
mov    %rcx,-0x28(%rbp)
callq  1cf50 <png_handle_IEND>
mov    %r14,%rsi
movl   $0x6,0x370(%r13)
mov    %r13,%rdi
callq  e720 <png_push_have_end>
mov    -0x18(%rbp),%r14
jmp    d0e2 <png_push_read_chunk+0x362>
mov    0x360(%r13),%rsi
mov    0x348(%r13),%edx
lea    0x4(%rdx),%ecx
mov    %ecx,%ecx
cmp    %rcx,%rsi
jb     d633 <png_push_read_chunk+0x8b3>
mov    %rax,%rcx
mov    %r14,%rsi
mov    %r13,%rdi
callq  1fe00 <png_handle_unknown>
cmp    $0x504c5445,%r15d
je     d649 <png_push_read_chunk+0x8c9>
mov    -0x18(%rbp),%r14
mov    -0x8(%rbp),%r15
jmpq   d0e2 <png_push_read_chunk+0x362>
mov    0x360(%r13),%rcx
mov    0x348(%r13),%edx
lea    0x4(%rdx),%eax
mov    %eax,%eax
cmp    %rax,%rcx
jb     d667 <png_push_read_chunk+0x8e7>
mov    %r14,%rsi
mov    %r13,%rdi
callq  1cc70 <png_handle_PLTE>
mov    -0x18(%rbp),%r14
mov    -0x8(%rbp),%r15
jmpq   d0e2 <png_push_read_chunk+0x362>
mov    0x348(%r13),%eax
mov    %eax,0x248(%r13)
mov    %r14,%rsi
movl   $0x2,0x370(%r13)
mov    %r13,%rdi
callq  e700 <png_push_have_info>
movzbl 0x26a(%r13),%eax
cmp    $0x7,%al
ja     d67d <png_push_read_chunk+0x8fd>
mov    0x210(%r13),%ecx
imul   %rcx,%rax
add    $0x7,%rax
shr    $0x3,%rax
jmpq   d689 <png_push_read_chunk+0x909>
mov    0x360(%r13),%rcx
mov    0x348(%r13),%edx
lea    0x4(%rdx),%eax
mov    %eax,%eax
cmp    %rax,%rcx
jb     d6af <png_push_read_chunk+0x92f>
mov    %r14,%rsi
mov    %r13,%rdi
callq  1d690 <png_handle_gAMA>
mov    -0x18(%rbp),%r14
mov    -0x8(%rbp),%r15
jmpq   d0e2 <png_push_read_chunk+0x362>
mov    0x360(%r13),%rcx
mov    0x348(%r13),%edx
lea    0x4(%rdx),%eax
mov    %eax,%eax
cmp    %rax,%rcx
jb     d6c5 <png_push_read_chunk+0x945>
mov    %r14,%rsi
mov    %r13,%rdi
callq  1eae0 <png_handle_sBIT>
mov    -0x18(%rbp),%r14
mov    -0x8(%rbp),%r15
jmpq   d0e2 <png_push_read_chunk+0x362>
mov    0x360(%r13),%rcx
mov    0x348(%r13),%edx
lea    0x4(%rdx),%eax
mov    %eax,%eax
cmp    %rax,%rcx
jb     d6db <png_push_read_chunk+0x95b>
mov    %r14,%rsi
mov    %r13,%rdi
callq  1d230 <png_handle_cHRM>
mov    -0x18(%rbp),%r14
mov    -0x8(%rbp),%r15
jmpq   d0e2 <png_push_read_chunk+0x362>
mov    0x360(%r13),%rcx
mov    0x348(%r13),%edx
lea    0x4(%rdx),%eax
mov    %eax,%eax
cmp    %rax,%rcx
jb     d6f1 <png_push_read_chunk+0x971>
mov    %r14,%rsi
mov    %r13,%rdi
callq  1f320 <png_handle_sRGB>
mov    -0x18(%rbp),%r14
mov    -0x8(%rbp),%r15
jmpq   d0e2 <png_push_read_chunk+0x362>
mov    0x360(%r13),%rax
mov    0x348(%r13),%edx
lea    0x4(%rdx),%ecx
mov    %ecx,%ecx
cmp    %rcx,%rax
jb     d707 <png_push_read_chunk+0x987>
mov    %r14,%rsi
mov    %r13,%rdi
callq  1d920 <png_handle_iCCP>
mov    -0x18(%rbp),%r14
mov    -0x8(%rbp),%r15
jmpq   d0e2 <png_push_read_chunk+0x362>
mov    0x360(%r13),%rcx
mov    0x348(%r13),%edx
lea    0x4(%rdx),%eax
mov    %eax,%eax
cmp    %rax,%rcx
jb     d71d <png_push_read_chunk+0x99d>
mov    %r14,%rsi
mov    %r13,%rdi
callq  1f010 <png_handle_sPLT>
mov    -0x18(%rbp),%r14
mov    -0x8(%rbp),%r15
jmpq   d0e2 <png_push_read_chunk+0x362>
mov    0x360(%r13),%rcx
mov    0x348(%r13),%edx
lea    0x4(%rdx),%eax
mov    %eax,%eax
cmp    %rax,%rcx
jb     d733 <png_push_read_chunk+0x9b3>
mov    %r14,%rsi
mov    %r13,%rdi
callq  1f730 <png_handle_tRNS>
mov    -0x18(%rbp),%r14
mov    -0x8(%rbp),%r15
jmpq   d0e2 <png_push_read_chunk+0x362>
mov    0x360(%r13),%rcx
mov    0x348(%r13),%edx
lea    0x4(%rdx),%eax
mov    %eax,%eax
cmp    %rax,%rcx
jb     d749 <png_push_read_chunk+0x9c9>
mov    %r14,%rsi
mov    %r13,%rdi
callq  1cfd0 <png_handle_bKGD>
mov    -0x18(%rbp),%r14
mov    -0x8(%rbp),%r15
jmpq   d0e2 <png_push_read_chunk+0x362>
mov    0x360(%r13),%rcx
mov    0x348(%r13),%edx
lea    0x4(%rdx),%eax
mov    %eax,%eax
cmp    %rax,%rcx
jb     d75f <png_push_read_chunk+0x9df>
mov    %r14,%rsi
mov    %r13,%rdi
callq  1d780 <png_handle_hIST>
mov    -0x18(%rbp),%r14
mov    -0x8(%rbp),%r15
jmpq   d0e2 <png_push_read_chunk+0x362>
mov    0x360(%r13),%rax
mov    0x348(%r13),%edx
lea    0x4(%rdx),%ecx
mov    %ecx,%ecx
cmp    %rcx,%rax
jb     d775 <png_push_read_chunk+0x9f5>
mov    %r14,%rsi
mov    %r13,%rdi
callq  1e980 <png_handle_pHYs>
mov    -0x18(%rbp),%r14
mov    -0x8(%rbp),%r15
jmpq   d0e2 <png_push_read_chunk+0x362>
mov    0x360(%r13),%rcx
mov    0x348(%r13),%edx
lea    0x4(%rdx),%eax
mov    %eax,%eax
cmp    %rax,%rcx
jb     d78b <png_push_read_chunk+0xa0b>
mov    %r14,%rsi
mov    %r13,%rdi
callq  1e410 <png_handle_oFFs>
mov    -0x18(%rbp),%r14
mov    -0x8(%rbp),%r15
jmpq   d0e2 <png_push_read_chunk+0x362>
mov    0x360(%r13),%rcx
mov    0x348(%r13),%edx
lea    0x4(%rdx),%eax
mov    %eax,%eax
cmp    %rax,%rcx
jb     d7a1 <png_push_read_chunk+0xa21>
mov    %r14,%rsi
mov    %r13,%rdi
callq  1e5d0 <png_handle_pCAL>
mov    -0x18(%rbp),%r14
mov    -0x8(%rbp),%r15
jmpq   d0e2 <png_push_read_chunk+0x362>
mov    0x360(%r13),%rcx
mov    0x348(%r13),%edx
lea    0x4(%rdx),%eax
mov    %eax,%eax
cmp    %rax,%rcx
jb     d7b7 <png_push_read_chunk+0xa37>
mov    %r14,%rsi
mov    %r13,%rdi
callq  1ed00 <png_handle_sCAL>
mov    -0x18(%rbp),%r14
mov    -0x8(%rbp),%r15
jmpq   d0e2 <png_push_read_chunk+0x362>
mov    0x360(%r13),%rcx
mov    0x348(%r13),%edx
lea    0x4(%rdx),%eax
mov    %eax,%eax
cmp    %rax,%rcx
jb     d7cd <png_push_read_chunk+0xa4d>
mov    %r14,%rsi
mov    %r13,%rdi
callq  1f600 <png_handle_tIME>
mov    -0x18(%rbp),%r14
mov    -0x8(%rbp),%r15
jmpq   d0e2 <png_push_read_chunk+0x362>
mov    0x360(%r13),%rcx
mov    0x348(%r13),%edx
lea    0x4(%rdx),%eax
mov    %eax,%eax
cmp    %rax,%rcx
jb     d7e3 <png_push_read_chunk+0xa63>
mov    %r14,%rsi
mov    %r13,%rdi
callq  1f460 <png_handle_tEXt>
mov    -0x18(%rbp),%r14
mov    -0x8(%rbp),%r15
jmpq   d0e2 <png_push_read_chunk+0x362>
mov    0x360(%r13),%rcx
mov    0x348(%r13),%edx
lea    0x4(%rdx),%eax
mov    %eax,%eax
cmp    %rax,%rcx
jb     d7f9 <png_push_read_chunk+0xa79>
mov    %r14,%rsi
mov    %r13,%rdi
callq  1fa40 <png_handle_zTXt>
mov    -0x18(%rbp),%r14
mov    -0x8(%rbp),%r15
jmpq   d0e2 <png_push_read_chunk+0x362>
mov    0x360(%r13),%rcx
mov    0x348(%r13),%edx
lea    0x4(%rdx),%eax
mov    %eax,%eax
cmp    %rax,%rcx
jb     d80f <png_push_read_chunk+0xa8f>
mov    %r14,%rsi
mov    %r13,%rdi
callq  1e080 <png_handle_iTXt>
mov    -0x18(%rbp),%r14
mov    -0x8(%rbp),%r15
jmpq   d0e2 <png_push_read_chunk+0x362>
mov    %r13,%rdi
callq  d920 <png_push_save_buffer>
mov    -0x28(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x8(%rbp),%r13
leaveq 
retq   
callq  d920 <png_push_save_buffer>
leaveq 
retq   
mov    %r13,%rdi
lea    0x2011a(%rip),%rsi        # 2d6c2 <valid_parameters.6+0x16c>
callq  5470 <png_error@plt>
mov    %rdx,%rsi
and    $0x2,%esi
test   %esi,%esi
jne    d045 <png_push_read_chunk+0x2c5>
mov    %r13,%rdi
lea    0x20116(%rip),%rsi        # 2d6db <valid_parameters.6+0x185>
callq  5470 <png_error@plt>
and    $0x2000,%edx
test   %edx,%edx
jne    d05e <png_push_read_chunk+0x2de>
mov    0x348(%r13),%edx
test   %edx,%edx
jne    d05e <png_push_read_chunk+0x2de>
mov    %r15,%r13
mov    %rcx,%r15
mov    %rax,%r14
leaveq 
retq   
mov    %r13,%rdi
lea    0x2010d(%rip),%rsi        # 2d709 <valid_parameters.6+0x1b3>
callq  5470 <png_error@plt>
mov    %r13,%rdi
mov    %rcx,%r13
mov    %rax,%r14
callq  d920 <png_push_save_buffer>
mov    %r15,%rax
mov    %r13,%r15
mov    %rax,%r13
leaveq 
retq   
mov    %r13,%rdi
mov    %rcx,%r13
mov    %rax,%r14
callq  d920 <png_push_save_buffer>
mov    %r15,%rax
mov    %r13,%r15
mov    %rax,%r13
leaveq 
retq   
mov    %r13,%rdi
callq  d920 <png_push_save_buffer>
mov    -0x28(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x8(%rbp),%r13
leaveq 
retq   
mov    0x12c(%r13),%eax
or     $0x2,%eax
mov    %eax,0x12c(%r13)
mov    -0x18(%rbp),%r14
mov    -0x8(%rbp),%r15
jmpq   d0e2 <png_push_read_chunk+0x362>
mov    %r13,%rdi
callq  d920 <png_push_save_buffer>
mov    -0x28(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x8(%rbp),%r13
leaveq 
retq   
shr    $0x3,%rax
imul   0x210(%r13),%eax
add    $0x1,%eax
mov    %eax,0x160(%r13)
mov    0x228(%r13),%rax
mov    %rax,0x158(%r13)
mov    -0x28(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x8(%rbp),%r13
leaveq 
retq   
mov    %r13,%rdi
callq  d920 <png_push_save_buffer>
mov    -0x28(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x8(%rbp),%r13
leaveq 
retq   
mov    %r13,%rdi
callq  d920 <png_push_save_buffer>
mov    -0x28(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x8(%rbp),%r13
leaveq 
retq   
mov    %r13,%rdi
callq  d920 <png_push_save_buffer>
mov    -0x28(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x8(%rbp),%r13
leaveq 
retq   
mov    %r13,%rdi
callq  d920 <png_push_save_buffer>
mov    -0x28(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x8(%rbp),%r13
leaveq 
retq   
mov    %r13,%rdi
callq  d920 <png_push_save_buffer>
mov    -0x28(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x8(%rbp),%r13
leaveq 
retq   
mov    %r13,%rdi
callq  d920 <png_push_save_buffer>
mov    -0x28(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x8(%rbp),%r13
leaveq 
retq   
mov    %r13,%rdi
callq  d920 <png_push_save_buffer>
mov    -0x28(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x8(%rbp),%r13
leaveq 
retq   
mov    %r13,%rdi
callq  d920 <png_push_save_buffer>
mov    -0x28(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x8(%rbp),%r13
leaveq 
retq   
mov    %r13,%rdi
callq  d920 <png_push_save_buffer>
mov    -0x28(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x8(%rbp),%r13
leaveq 
retq   
mov    %r13,%rdi
callq  d920 <png_push_save_buffer>
mov    -0x28(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x8(%rbp),%r13
leaveq 
retq   
mov    %r13,%rdi
callq  d920 <png_push_save_buffer>
mov    -0x28(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x8(%rbp),%r13
leaveq 
retq   
mov    %r13,%rdi
callq  d920 <png_push_save_buffer>
mov    -0x28(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x8(%rbp),%r13
leaveq 
retq   
mov    %r13,%rdi
callq  d920 <png_push_save_buffer>
mov    -0x28(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x8(%rbp),%r13
leaveq 
retq   
mov    %r13,%rdi
callq  d920 <png_push_save_buffer>
mov    -0x28(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x8(%rbp),%r13
leaveq 
retq   
mov    %r13,%rdi
callq  d920 <png_push_save_buffer>
mov    -0x28(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x8(%rbp),%r13
leaveq 
retq   
mov    %r13,%rdi
callq  d920 <png_push_save_buffer>
mov    -0x28(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x8(%rbp),%r13
leaveq 
retq   
mov    %r13,%rdi
callq  d920 <png_push_save_buffer>
mov    -0x28(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x8(%rbp),%r13
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)

000000000000d830 <png_push_read_sig>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %r12,-0x8(%rbp)
mov    %r13,-0x10(%rbp)
mov    %r14,-0x18(%rbp)
mov    %r15,-0x20(%rbp)
movzbl 0x26d(%rdi),%r14d
mov    $0x8,%r12d
sub    %r14,%r12
mov    0x360(%rdi),%rax
cmp    %r12,%rax
jae    d868 <png_push_read_sig+0x38>
mov    %rax,%r12
mov    %rbx,%r13
mov    %rsi,%r15
lea    0x2c(%r15,%r14,1),%rsi
mov    %rdi,%rbx
mov    %r12,%rdx
callq  cc50 <png_push_fill_buffer>
movzbl 0x26d(%rbx),%eax
add    %r12d,%eax
mov    %al,0x26d(%rbx)
add    $0x2c,%r15
mov    %r15,%rdi
mov    %r14,%rsi
mov    %r12,%rdx
callq  57d0 <png_sig_cmp@plt>
test   %eax,%eax
jne    d8c4 <png_push_read_sig+0x94>
movzbl 0x26d(%rbx),%eax
cmp    $0x7,%al
ja     d8d9 <png_push_read_sig+0xa9>
mov    %r13,%rbx
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
leaveq 
retq   
cmp    $0x3,%r14b
jbe    d8f8 <png_push_read_sig+0xc8>
mov    %rbx,%rdi
lea    0x1fe58(%rip),%rsi        # 2d72c <valid_parameters.6+0x1d6>
callq  5470 <png_error@plt>
movl   $0x1,0x370(%rbx)
mov    %r13,%rbx
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
leaveq 
retq   
lea    -0x4(%r12),%rdx
mov    %r14,%rsi
mov    %r15,%rdi
callq  57d0 <png_sig_cmp@plt>
test   %eax,%eax
je     d8ca <png_push_read_sig+0x9a>
mov    %rbx,%rdi
lea    0x1fe07(%rip),%rsi        # 2d71d <valid_parameters.6+0x1c7>
callq  5470 <png_error@plt>
nopl   0x0(%rax,%rax,1)

000000000000d920 <png_push_save_buffer>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    0x350(%rdi),%rsi
test   %rsi,%rsi
jne    d9d8 <png_push_save_buffer+0xb8>
mov    0x368(%rdi),%rsi
mov    0x350(%rdi),%rdx
lea    (%rsi,%rdx,1),%rcx
mov    0x358(%rdi),%rax
cmp    %rcx,%rax
jb     d9f3 <png_push_save_buffer+0xd3>
mov    %r15,%rax
mov    %r14,%r15
mov    %r13,%r14
mov    %rdi,%r13
mov    0x368(%r13),%rdx
test   %rdx,%rdx
je     d9b4 <png_push_save_buffer+0x94>
mov    0x350(%r13),%rdi
add    0x330(%r13),%rdi
mov    0x338(%r13),%rsi
mov    %rax,-0x18(%rbp)
callq  54c0 <memcpy@plt>
mov    0x350(%r13),%rax
add    0x368(%r13),%rax
mov    %rax,0x350(%r13)
movq   $0x0,0x368(%r13)
mov    -0x18(%rbp),%rax
mov    0x330(%r13),%rcx
mov    %rcx,0x328(%r13)
movq   $0x0,0x360(%r13)
mov    %r14,%r13
mov    %r15,%r14
mov    %rax,%r15
leaveq 
retq   
mov    0x330(%rdi),%rcx
mov    0x328(%rdi),%rax
cmp    %rax,%rcx
je     d938 <png_push_save_buffer+0x18>
xor    %edx,%edx
jmp    da72 <png_push_save_buffer+0x152>
mov    $0xfffffffffffffeff,%rax
sub    %rsi,%rax
cmp    %rax,%rdx
ja     da7c <png_push_save_buffer+0x15c>
mov    0x330(%rdi),%rax
add    $0x100,%rcx
mov    %rdi,%rdx
mov    %rcx,%rsi
mov    %r13,-0x8(%rbp)
mov    %r14,-0x10(%rbp)
mov    %r15,-0x18(%rbp)
mov    %rdi,%r13
mov    %rdx,%rdi
mov    %rax,%r14
mov    %rcx,%r15
callq  5150 <png_malloc_warn@plt>
mov    %rax,0x330(%r13)
test   %rax,%rax
je     da88 <png_push_save_buffer+0x168>
test   %r14,%r14
jne    daa2 <png_push_save_buffer+0x182>
mov    0x350(%r13),%rax
test   %rax,%rax
je     dab4 <png_push_save_buffer+0x194>
mov    %r13,%rdi
lea    0x1fd3f(%rip),%rsi        # 2d799 <valid_parameters.6+0x243>
callq  5470 <png_error@plt>
movzbl (%rax),%r8d
mov    %r8b,(%rcx)
add    $0x1,%rax
add    $0x1,%rcx
add    $0x1,%rdx
cmp    %rdx,%rsi
ja     da5f <png_push_save_buffer+0x13f>
jmpq   d938 <png_push_save_buffer+0x18>
lea    0x1fcd0(%rip),%rsi        # 2d753 <valid_parameters.6+0x1fd>
callq  5470 <png_error@plt>
mov    %r14,%rsi
mov    %r13,%rdi
callq  5790 <png_free@plt>
mov    %r13,%rdi
lea    0x1fcd8(%rip),%rsi        # 2d775 <valid_parameters.6+0x21f>
callq  5470 <png_error@plt>
mov    %rax,%rdi
mov    0x350(%r13),%rdx
mov    %r14,%rsi
callq  54c0 <memcpy@plt>
mov    %r14,%rsi
mov    %r13,%rdi
callq  5790 <png_free@plt>
mov    %r15,0x358(%r13)
mov    -0x18(%rbp),%rax
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
jmpq   d966 <png_push_save_buffer+0x46>
nopw   0x0(%rax,%rax,1)

000000000000dae0 <png_push_restore_buffer>:
push   %rbp
mov    %rsp,%rbp
mov    %rsi,0x340(%rdi)
mov    %rdx,0x368(%rdi)
add    0x350(%rdi),%rdx
mov    %rdx,0x360(%rdi)
mov    %rsi,0x338(%rdi)
leaveq 
retq   
nopl   0x0(%rax)

000000000000db10 <png_push_read_IDAT>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    0x12c(%rdi),%eax
and    $0x100,%eax
test   %eax,%eax
je     db5f <png_push_read_IDAT+0x4f>
mov    %r15,%rax
mov    %rdi,%r15
mov    0x248(%r15),%edx
test   %edx,%edx
jne    dc13 <png_push_read_IDAT+0x103>
mov    0x248(%r15),%edx
test   %edx,%edx
jne    dca8 <png_push_read_IDAT+0x198>
mov    0x248(%r15),%ecx
test   %ecx,%ecx
je     dd3d <png_push_read_IDAT+0x22d>
mov    %rax,%r15
leaveq 
retq   
mov    0x360(%rdi),%rax
cmp    $0x7,%rax
jbe    dd7f <png_push_read_IDAT+0x26f>
lea    -0x18(%rbp),%rsi
mov    $0x4,%edx
mov    %rdi,%rax
mov    %r15,-0x10(%rbp)
mov    %rdi,%r15
mov    %rax,%rdi
callq  cc50 <png_push_fill_buffer>
mov    %r15,%rdi
lea    -0x18(%rbp),%rsi
callq  5730 <png_get_uint_31@plt>
mov    %eax,0x348(%r15)
mov    %r15,%rdi
callq  6d80 <png_reset_crc>
lea    -0x14(%rbp),%rsi
mov    %r15,%rdi
mov    $0x4,%edx
callq  1b210 <png_crc_read>
movzbl -0x14(%rbp),%eax
shl    $0x18,%eax
movzbl -0x13(%rbp),%ecx
shl    $0x10,%ecx
add    %eax,%ecx
movzbl -0x12(%rbp),%eax
shl    $0x8,%eax
add    %eax,%ecx
movzbl -0x11(%rbp),%eax
add    %eax,%ecx
mov    %ecx,0x218(%r15)
mov    0x12c(%r15),%eax
or     $0x100,%eax
mov    %eax,0x12c(%r15)
cmp    $0x49444154,%ecx
jne    dd86 <png_push_read_IDAT+0x276>
mov    0x348(%r15),%eax
mov    %eax,0x248(%r15)
mov    -0x10(%rbp),%rax
jmpq   db2d <png_push_read_IDAT+0x1d>
mov    0x350(%r15),%rcx
test   %rcx,%rcx
je     db3c <png_push_read_IDAT+0x2c>
cmp    %rdx,%rcx
jbe    dc2b <png_push_read_IDAT+0x11b>
mov    %rdx,%rcx
mov    0x328(%r15),%rsi
mov    %r15,%rdi
mov    %rcx,%rdx
mov    %rax,-0x10(%rbp)
mov    %r14,-0x8(%rbp)
mov    %rcx,%r14
callq  6db0 <png_calculate_crc>
mov    0x328(%r15),%rsi
mov    %r15,%rdi
mov    %r14,%rdx
callq  ddd0 <png_process_IDAT_data>
mov    0x248(%r15),%eax
sub    %r14d,%eax
mov    %eax,0x248(%r15)
mov    0x360(%r15),%rax
sub    %r14,%rax
mov    %rax,0x360(%r15)
mov    0x350(%r15),%rax
sub    %r14,%rax
mov    %rax,0x350(%r15)
add    0x328(%r15),%r14
mov    %r14,0x328(%r15)
mov    -0x8(%rbp),%r14
mov    -0x10(%rbp),%rax
jmpq   db3c <png_push_read_IDAT+0x2c>
mov    0x368(%r15),%rcx
test   %rcx,%rcx
je     db4b <png_push_read_IDAT+0x3b>
cmp    %rdx,%rcx
jbe    dcc0 <png_push_read_IDAT+0x1b0>
mov    %rdx,%rcx
mov    0x338(%r15),%rsi
mov    %r15,%rdi
mov    %rcx,%rdx
mov    %rax,-0x10(%rbp)
mov    %r14,-0x8(%rbp)
mov    %rcx,%r14
callq  6db0 <png_calculate_crc>
mov    0x338(%r15),%rsi
mov    %r15,%rdi
mov    %r14,%rdx
callq  ddd0 <png_process_IDAT_data>
mov    0x248(%r15),%eax
sub    %r14d,%eax
mov    %eax,0x248(%r15)
mov    0x360(%r15),%rax
sub    %r14,%rax
mov    %rax,0x360(%r15)
mov    0x368(%r15),%rax
sub    %r14,%rax
mov    %rax,0x368(%r15)
add    0x338(%r15),%r14
mov    %r14,0x338(%r15)
mov    -0x8(%rbp),%r14
mov    -0x10(%rbp),%rax
jmpq   db4b <png_push_read_IDAT+0x3b>
mov    0x360(%r15),%rcx
cmp    $0x3,%rcx
jbe    dda5 <png_push_read_IDAT+0x295>
xor    %esi,%esi
mov    %r15,%rdi
mov    %rax,-0x10(%rbp)
callq  1b270 <png_crc_finish>
mov    0x12c(%r15),%eax
and    $0xfffffef7,%eax
add    $0x8,%eax
mov    %eax,0x12c(%r15)
movl   $0x0,0x138(%r15)
mov    -0x10(%rbp),%r15
leaveq 
retq   
callq  d920 <png_push_save_buffer>
leaveq 
retq   
movl   $0x1,0x370(%r15)
mov    0x130(%r15),%eax
and    $0x8,%eax
test   %eax,%eax
je     ddb2 <png_push_read_IDAT+0x2a2>
mov    -0x10(%rbp),%r15
leaveq 
retq   
mov    %r15,%rdi
mov    %rax,%r15
callq  d920 <png_push_save_buffer>
leaveq 
retq   
mov    %r15,%rdi
lea    0x1f9ef(%rip),%rsi        # 2d7ab <valid_parameters.6+0x255>
callq  5470 <png_error@plt>
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   0x0(%rax)

000000000000ddd0 <png_process_IDAT_data>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
test   %rdx,%rdx
jne    dde9 <png_process_IDAT_data+0x19>
lea    0x1f9e2(%rip),%rsi        # 2d7c6 <valid_parameters.6+0x270>
callq  5470 <png_error@plt>
test   %rsi,%rsi
je     dddd <png_process_IDAT_data+0xd>
mov    %rsi,0x140(%rdi)
mov    %edx,0x148(%rdi)
mov    $0x2,%eax
mov    %r13,-0x8(%rbp)
mov    %r14,-0x10(%rbp)
mov    %r15,-0x18(%rbp)
mov    %r12,%r13
mov    %rbx,%r12
mov    %rdi,%rbx
mov    %rax,%r14
jmp    de73 <png_process_IDAT_data+0xa3>
shr    $0x3,%rax
imul   0x210(%rbx),%eax
add    $0x1,%eax
mov    %eax,0x160(%rbx)
mov    0x228(%rbx),%rax
mov    %rax,0x158(%rbx)
mov    %rbx,%rdi
mov    %r14,%rsi
callq  1ca80 <png_zlib_inflate>
test   %eax,%eax
jne    dec2 <png_process_IDAT_data+0xf2>
mov    0x228(%rbx),%rcx
cmp    0x158(%rbx),%rcx
jne    df16 <png_process_IDAT_data+0x146>
cmp    $0x1,%eax
jne    de73 <png_process_IDAT_data+0xa3>
mov    0x130(%rbx),%eax
or     $0x8,%eax
mov    %eax,0x130(%rbx)
mov    0x148(%rbx),%eax
test   %eax,%eax
je     df59 <png_process_IDAT_data+0x189>
mov    0x130(%rbx),%eax
and    $0x8,%eax
test   %eax,%eax
jne    df59 <png_process_IDAT_data+0x189>
mov    0x160(%rbx),%eax
test   %eax,%eax
jne    de3c <png_process_IDAT_data+0x6c>
movzbl 0x26a(%rbx),%eax
cmp    $0x7,%al
ja     de1a <png_process_IDAT_data+0x4a>
mov    0x210(%rbx),%ecx
imul   %rcx,%rax
add    $0x7,%rax
shr    $0x3,%rax
jmpq   de25 <png_process_IDAT_data+0x55>
cmp    $0x1,%eax
je     de4b <png_process_IDAT_data+0x7b>
mov    0x130(%rbx),%ecx
or     $0x8,%ecx
mov    %ecx,0x130(%rbx)
movl   $0x0,0x138(%rbx)
mov    0x200(%rbx),%ecx
cmp    0x214(%rbx),%ecx
jbe    df7b <png_process_IDAT_data+0x1ab>
movzbl 0x265(%rbx),%ecx
cmp    $0x6,%cl
ja     df7b <png_process_IDAT_data+0x1ab>
cmp    $0xfffffffd,%eax
je     df9e <png_process_IDAT_data+0x1ce>
mov    %rbx,%rdi
lea    0x1f915(%rip),%rsi        # 2d826 <valid_parameters.6+0x2d0>
callq  5470 <png_error@plt>
mov    0x200(%rbx),%ecx
cmp    0x214(%rbx),%ecx
jbe    dfc1 <png_process_IDAT_data+0x1f1>
movzbl 0x265(%rbx),%ecx
cmp    $0x6,%cl
ja     dfc1 <png_process_IDAT_data+0x1f1>
mov    0x160(%rbx),%ecx
test   %ecx,%ecx
jne    de5f <png_process_IDAT_data+0x8f>
mov    %rax,%r15
mov    %rbx,%rdi
callq  e020 <png_push_process_row>
mov    %r15,%rax
jmpq   de5f <png_process_IDAT_data+0x8f>
mov    0x148(%rbx),%eax
test   %eax,%eax
jne    dffd <png_process_IDAT_data+0x22d>
mov    %r12,%rbx
mov    %r13,%r12
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
leaveq 
retq   
mov    %rbx,%rdi
lea    0x1f85f(%rip),%rsi        # 2d7e4 <valid_parameters.6+0x28e>
callq  5390 <png_warning@plt>
mov    %r12,%rbx
mov    %r13,%r12
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
leaveq 
retq   
mov    %rbx,%rdi
lea    0x1f85e(%rip),%rsi        # 2d806 <valid_parameters.6+0x2b0>
callq  5590 <png_benign_error@plt>
mov    %r12,%rbx
mov    %r13,%r12
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
leaveq 
retq   
lea    0x1f87a(%rip),%rsi        # 2d842 <valid_parameters.6+0x2ec>
mov    %rbx,%rdi
callq  5390 <png_warning@plt>
mov    0x130(%rbx),%eax
or     $0x8,%eax
mov    %eax,0x130(%rbx)
movl   $0x0,0x138(%rbx)
mov    %r12,%rbx
mov    %r13,%r12
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
leaveq 
retq   
mov    %rbx,%rdi
lea    0x1f859(%rip),%rsi        # 2d860 <valid_parameters.6+0x30a>
callq  5390 <png_warning@plt>
mov    %r12,%rbx
mov    %r13,%r12
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
leaveq 
retq   

000000000000e020 <png_push_process_row>:
push   %rbp
mov    %rsp,%rbp
sub    $0x50,%rsp
mov    %r15,-0x38(%rbp)
mov    0x210(%rdi),%edx
mov    %edx,-0x50(%rbp)
movzbl 0x267(%rdi),%eax
mov    %al,-0x40(%rbp)
movzbl 0x268(%rdi),%eax
mov    %al,-0x3f(%rbp)
movzbl 0x26b(%rdi),%eax
mov    %al,-0x3e(%rbp)
movzbl 0x26a(%rdi),%ecx
cmp    $0x7,%cl
ja     e070 <png_push_process_row+0x50>
mov    %rcx,%rax
imul   %rdx,%rax
add    $0x7,%rax
shr    $0x3,%rax
jmp    e07b <png_push_process_row+0x5b>
mov    %rcx,%rax
shr    $0x3,%rax
imul   %rdx,%rax
mov    %cl,-0x3d(%rbp)
mov    %rax,-0x48(%rbp)
lea    -0x50(%rbp),%rsi
mov    0x228(%rdi),%rax
movzbl (%rax),%r8d
test   %r8b,%r8b
jne    e11c <png_push_process_row+0xfc>
mov    %r14,%r15
mov    %r13,%r14
mov    %rdi,%r13
mov    0x220(%r13),%rdi
mov    0x228(%r13),%rsi
mov    -0x48(%rbp),%rdx
add    $0x1,%rdx
callq  54c0 <memcpy@plt>
mov    0x134(%r13),%eax
test   %eax,%eax
je     e0d5 <png_push_process_row+0xb5>
mov    %r13,%rdi
lea    -0x50(%rbp),%rsi
callq  16030 <png_do_read_transformations>
movzbl 0x26f(%r13),%ecx
test   %cl,%cl
je     e132 <png_push_process_row+0x112>
movzbl -0x3d(%rbp),%eax
cmp    %al,%cl
jne    e15c <png_push_process_row+0x13c>
movzbl 0x264(%r13),%eax
test   %al,%al
jne    e16b <png_push_process_row+0x14b>
mov    0x228(%r13),%rsi
add    $0x1,%rsi
mov    %r13,%rdi
callq  e740 <png_push_have_row>
mov    %r13,%rdi
callq  e7c0 <png_read_push_finish_row>
mov    %r14,%r13
mov    %r15,%r14
mov    -0x38(%rbp),%r15
leaveq 
retq   
cmp    $0x4,%r8b
jbe    e1d2 <png_push_process_row+0x1b2>
lea    0x1f752(%rip),%rsi        # 2d87f <valid_parameters.6+0x329>
callq  5470 <png_error@plt>
movzbl -0x3d(%rbp),%eax
mov    %al,0x26f(%r13)
movzbl 0x26e(%r13),%ecx
movzbl -0x3d(%rbp),%eax
cmp    %al,%cl
jae    e0e9 <png_push_process_row+0xc9>
mov    %r13,%rdi
lea    0x1f742(%rip),%rsi        # 2d899 <valid_parameters.6+0x343>
callq  5470 <png_error@plt>
mov    %r13,%rdi
lea    0x1f74c(%rip),%rsi        # 2d8b2 <valid_parameters.6+0x35c>
callq  5470 <png_error@plt>
mov    0x134(%r13),%ecx
mov    %rcx,%rax
and    $0x2,%eax
test   %eax,%eax
je     e0f5 <png_push_process_row+0xd5>
movzbl 0x265(%r13),%edx
cmp    $0x5,%dl
ja     e1a1 <png_push_process_row+0x181>
mov    0x228(%r13),%rsi
add    $0x1,%rsi
lea    -0x50(%rbp),%rdi
callq  1bb20 <png_do_read_interlace>
xor    %edx,%edx
movzbl 0x265(%r13),%eax
cmp    $0x5,%al
ja     e1f4 <png_push_process_row+0x1d4>
lea    0x1f4aa(%rip),%rcx        # 2d660 <valid_parameters.6+0x10a>
movslq (%rcx,%rax,4),%rax
add    %rcx,%rax
jmpq   *%rax
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rdx,%r15
mov    %r15,%r14
jmpq   e2b5 <png_push_process_row+0x295>
lea    0x1(%rax),%rdx
mov    0x220(%rdi),%rcx
add    $0x1,%rcx
mov    %r14,%r15
mov    %r13,%r14
mov    %rdi,%r13
callq  1c050 <png_read_filter_row>
jmpq   e0a3 <png_push_process_row+0x83>
mov    0x228(%r13),%rsi
add    $0x1,%rsi
mov    %r13,%rdi
callq  e740 <png_push_have_row>
mov    %r13,%rdi
callq  e7c0 <png_read_push_finish_row>
movzbl 0x265(%r13),%eax
cmp    $0x6,%al
je     e2d3 <png_push_process_row+0x2b3>
mov    %r14,%r13
mov    %r15,%r14
mov    -0x38(%rbp),%r15
leaveq 
retq   
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rdx,%r15
mov    %r15,%r14
jmpq   e31c <png_push_process_row+0x2fc>
mov    %r14,-0x18(%rbp)
mov    %r15,-0x20(%rbp)
mov    %rdx,%r15
mov    %r15,%r14
jmpq   e369 <png_push_process_row+0x349>
mov    %r14,-0x18(%rbp)
mov    %r15,-0x20(%rbp)
mov    %rdx,%r15
mov    %r15,%r14
jmpq   e3a2 <png_push_process_row+0x382>
mov    %r14,-0x28(%rbp)
mov    %r15,-0x30(%rbp)
mov    %rdx,%r15
mov    %r15,%r14
jmpq   e3ef <png_push_process_row+0x3cf>
mov    %r14,-0x28(%rbp)
mov    %r15,-0x30(%rbp)
mov    %rdx,%r15
mov    %r15,%r14
jmpq   e428 <png_push_process_row+0x408>
movzbl 0x265(%r13),%eax
test   %al,%al
jne    e2bb <png_push_process_row+0x29b>
mov    0x228(%r13),%rsi
add    $0x1,%rsi
mov    %r13,%rdi
callq  e740 <png_push_have_row>
mov    %r13,%rdi
callq  e7c0 <png_read_push_finish_row>
add    $0x1,%r15d
cmp    $0x7,%r15d
jle    e28a <png_push_process_row+0x26a>
movzbl 0x265(%r13),%eax
cmp    $0x2,%al
jne    e44c <png_push_process_row+0x42c>
mov    %r14,%r15
jmpq   e497 <png_push_process_row+0x477>
mov    %r13,%rdi
xor    %esi,%esi
callq  e740 <png_push_have_row>
mov    %r13,%rdi
callq  e7c0 <png_read_push_finish_row>
mov    %r14,%r13
mov    %r15,%r14
mov    -0x38(%rbp),%r15
leaveq 
retq   
movzbl 0x265(%r13),%eax
cmp    $0x1,%al
jne    e322 <png_push_process_row+0x302>
mov    0x228(%r13),%rsi
add    $0x1,%rsi
mov    %r13,%rdi
callq  e740 <png_push_have_row>
mov    %r13,%rdi
callq  e7c0 <png_read_push_finish_row>
add    $0x1,%r15d
cmp    $0x7,%r15d
jle    e2f1 <png_push_process_row+0x2d1>
movzbl 0x265(%r13),%eax
cmp    $0x2,%al
jne    e49f <png_push_process_row+0x47f>
mov    %r14,%r15
jmpq   e4d4 <png_push_process_row+0x4b4>
movzbl 0x265(%r13),%eax
cmp    $0x2,%al
jne    e4e8 <png_push_process_row+0x4c8>
mov    0x228(%r13),%rsi
add    $0x1,%rsi
mov    %r13,%rdi
callq  e740 <png_push_have_row>
mov    %r13,%rdi
callq  e7c0 <png_read_push_finish_row>
add    $0x1,%r15d
cmp    $0x3,%r15d
jle    e33a <png_push_process_row+0x31a>
mov    %r14,%r15
jmpq   e510 <png_push_process_row+0x4f0>
movzbl 0x265(%r13),%eax
cmp    $0x3,%al
jne    e3a8 <png_push_process_row+0x388>
mov    0x228(%r13),%rsi
add    $0x1,%rsi
mov    %r13,%rdi
callq  e740 <png_push_have_row>
mov    %r13,%rdi
callq  e7c0 <png_read_push_finish_row>
add    $0x1,%r15d
cmp    $0x3,%r15d
jle    e377 <png_push_process_row+0x357>
movzbl 0x265(%r13),%eax
cmp    $0x4,%al
jne    e52e <png_push_process_row+0x50e>
mov    %r14,%r15
jmpq   e563 <png_push_process_row+0x543>
movzbl 0x265(%r13),%eax
cmp    $0x4,%al
jne    e577 <png_push_process_row+0x557>
mov    0x228(%r13),%rsi
add    $0x1,%rsi
mov    %r13,%rdi
callq  e740 <png_push_have_row>
mov    %r13,%rdi
callq  e7c0 <png_read_push_finish_row>
add    $0x1,%r15d
cmp    $0x1,%r15d
jle    e3c0 <png_push_process_row+0x3a0>
mov    %r14,%r15
jmpq   e59f <png_push_process_row+0x57f>
movzbl 0x265(%r13),%eax
cmp    $0x5,%al
jne    e42e <png_push_process_row+0x40e>
mov    0x228(%r13),%rsi
add    $0x1,%rsi
mov    %r13,%rdi
callq  e740 <png_push_have_row>
mov    %r13,%rdi
callq  e7c0 <png_read_push_finish_row>
add    $0x1,%r15d
cmp    $0x1,%r15d
jle    e3fd <png_push_process_row+0x3dd>
movzbl 0x265(%r13),%eax
cmp    $0x6,%al
je     e5c3 <png_push_process_row+0x5a3>
mov    -0x30(%rbp),%r14
mov    -0x28(%rbp),%r13
mov    -0x38(%rbp),%r15
leaveq 
retq   
movzbl 0x265(%r13),%eax
cmp    $0x4,%al
jne    e5e4 <png_push_process_row+0x5c4>
mov    0x1fc(%r13),%eax
cmp    $0x4,%eax
ja     e5e4 <png_push_process_row+0x5c4>
mov    %r14,%r15
jmpq   e625 <png_push_process_row+0x605>
movzbl 0x265(%r13),%eax
cmp    $0x2,%al
jne    e44c <png_push_process_row+0x42c>
mov    %r13,%rdi
mov    %r14,%rsi
callq  e740 <png_push_have_row>
mov    %r13,%rdi
callq  e7c0 <png_read_push_finish_row>
add    $0x1,%r15d
cmp    $0x3,%r15d
jle    e474 <png_push_process_row+0x454>
jmp    e44c <png_push_process_row+0x42c>
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
mov    -0x38(%rbp),%r15
leaveq 
retq   
movzbl 0x265(%r13),%eax
cmp    $0x2,%al
jne    e62d <png_push_process_row+0x60d>
mov    %r13,%rdi
mov    %r14,%rsi
callq  e740 <png_push_have_row>
mov    %r13,%rdi
callq  e7c0 <png_read_push_finish_row>
add    $0x1,%r15d
cmp    $0x3,%r15d
jle    e4ad <png_push_process_row+0x48d>
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
mov    -0x38(%rbp),%r15
leaveq 
retq   
mov    %r14,%r15
jmp    e510 <png_push_process_row+0x4f0>
movzbl 0x265(%r13),%eax
cmp    $0x2,%al
jne    e516 <png_push_process_row+0x4f6>
mov    %r13,%rdi
mov    %r14,%rsi
callq  e740 <png_push_have_row>
mov    %r13,%rdi
callq  e7c0 <png_read_push_finish_row>
add    $0x1,%r15d
cmp    $0x3,%r15d
jle    e4ed <png_push_process_row+0x4cd>
movzbl 0x265(%r13),%eax
cmp    $0x4,%al
jne    e63b <png_push_process_row+0x61b>
mov    %r14,%r15
jmpq   e66c <png_push_process_row+0x64c>
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x38(%rbp),%r15
leaveq 
retq   
movzbl 0x265(%r13),%eax
cmp    $0x4,%al
jne    e680 <png_push_process_row+0x660>
mov    %r13,%rdi
mov    %r14,%rsi
callq  e740 <png_push_have_row>
mov    %r13,%rdi
callq  e7c0 <png_read_push_finish_row>
add    $0x1,%r15d
cmp    $0x1,%r15d
jle    e53c <png_push_process_row+0x51c>
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x38(%rbp),%r15
leaveq 
retq   
mov    %r14,%r15
jmp    e59f <png_push_process_row+0x57f>
movzbl 0x265(%r13),%eax
cmp    $0x4,%al
jne    e5a5 <png_push_process_row+0x585>
mov    %r13,%rdi
mov    %r14,%rsi
callq  e740 <png_push_have_row>
mov    %r13,%rdi
callq  e7c0 <png_read_push_finish_row>
add    $0x1,%r15d
cmp    $0x1,%r15d
jle    e57c <png_push_process_row+0x55c>
movzbl 0x265(%r13),%eax
cmp    $0x6,%al
je     e68e <png_push_process_row+0x66e>
mov    -0x30(%rbp),%r14
mov    -0x28(%rbp),%r13
mov    -0x38(%rbp),%r15
leaveq 
retq   
mov    %r14,%rsi
mov    %r13,%rdi
callq  e740 <png_push_have_row>
mov    %r13,%rdi
callq  e7c0 <png_read_push_finish_row>
mov    -0x30(%rbp),%r14
mov    -0x28(%rbp),%r13
mov    -0x38(%rbp),%r15
leaveq 
retq   
movzbl 0x265(%r13),%eax
cmp    $0x6,%al
je     e6af <png_push_process_row+0x68f>
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
mov    -0x38(%rbp),%r15
leaveq 
retq   
movzbl 0x265(%r13),%eax
cmp    $0x4,%al
jne    e5e4 <png_push_process_row+0x5c4>
mov    %r13,%rdi
mov    %r14,%rsi
callq  e740 <png_push_have_row>
mov    %r13,%rdi
callq  e7c0 <png_read_push_finish_row>
add    $0x1,%r15d
cmp    $0x1,%r15d
jle    e602 <png_push_process_row+0x5e2>
jmp    e5e4 <png_push_process_row+0x5c4>
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
mov    -0x38(%rbp),%r15
leaveq 
retq   
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x38(%rbp),%r15
leaveq 
retq   
movzbl 0x265(%r13),%eax
cmp    $0x4,%al
jne    e6c9 <png_push_process_row+0x6a9>
mov    %r13,%rdi
mov    %r14,%rsi
callq  e740 <png_push_have_row>
mov    %r13,%rdi
callq  e7c0 <png_read_push_finish_row>
add    $0x1,%r15d
cmp    $0x1,%r15d
jle    e649 <png_push_process_row+0x629>
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x38(%rbp),%r15
leaveq 
retq   
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x38(%rbp),%r15
leaveq 
retq   
mov    %r14,%rsi
mov    %r13,%rdi
callq  e740 <png_push_have_row>
mov    %r13,%rdi
callq  e7c0 <png_read_push_finish_row>
mov    -0x30(%rbp),%r14
mov    -0x28(%rbp),%r13
mov    -0x38(%rbp),%r15
leaveq 
retq   
mov    0x1fc(%r13),%eax
cmp    $0x4,%eax
jbe    e6d7 <png_push_process_row+0x6b7>
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
mov    -0x38(%rbp),%r15
leaveq 
retq   
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x38(%rbp),%r15
leaveq 
retq   
mov    %r14,%rsi
mov    %r13,%rdi
callq  e740 <png_push_have_row>
mov    %r13,%rdi
callq  e7c0 <png_read_push_finish_row>
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
mov    -0x38(%rbp),%r15
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

000000000000e700 <png_push_have_info>:
push   %rbp
mov    %rsp,%rbp
mov    0x310(%rdi),%rax
test   %rax,%rax
jne    e712 <png_push_have_info+0x12>
leaveq 
retq   
callq  *%rax
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)

000000000000e720 <png_push_have_end>:
push   %rbp
mov    %rsp,%rbp
mov    0x320(%rdi),%rax
test   %rax,%rax
jne    e732 <png_push_have_end+0x12>
leaveq 
retq   
callq  *%rax
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)

000000000000e740 <png_push_have_row>:
push   %rbp
mov    %rsp,%rbp
mov    0x318(%rdi),%rax
test   %rax,%rax
jne    e752 <png_push_have_row+0x12>
leaveq 
retq   
mov    0x214(%rdi),%edx
movzbl 0x265(%rdi),%ecx
callq  *%rax
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

000000000000e770 <png_process_some_data>:
push   %rbp
mov    %rsp,%rbp
test   %rdi,%rdi
jne    e77b <png_process_some_data+0xb>
leaveq 
retq   
movslq 0x370(%rdi),%rax
test   %eax,%eax
jle    e797 <png_process_some_data+0x27>
cmp    $0x1,%eax
je     e7a8 <png_process_some_data+0x38>
cmp    $0x2,%eax
jne    e79b <png_process_some_data+0x2b>
callq  db10 <png_push_read_IDAT>
leaveq 
retq   
test   %eax,%eax
je     e7af <png_process_some_data+0x3f>
movq   $0x0,0x360(%rdi)
leaveq 
retq   
callq  cd80 <png_push_read_chunk>
leaveq 
retq   
callq  d830 <png_push_read_sig>
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)

000000000000e7c0 <png_read_push_finish_row>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    0x214(%rdi),%eax
add    $0x1,%eax
mov    %eax,0x214(%rdi)
mov    0x200(%rdi),%ecx
cmp    %eax,%ecx
jbe    e7e3 <png_read_push_finish_row+0x23>
leaveq 
retq   
movzbl 0x264(%rdi),%eax
test   %al,%al
jne    e7f0 <png_read_push_finish_row+0x30>
leaveq 
retq   
movl   $0x0,0x214(%rdi)
mov    0x220(%rdi),%rax
xor    %esi,%esi
mov    0x208(%rdi),%rdx
add    $0x1,%rdx
mov    %r15,-0x8(%rbp)
mov    %rdi,%r15
mov    %rax,%rdi
callq  5350 <memset@plt>
lea    0x1f0c5(%rip),%rcx        # 2d8e9 <png_pass_inc.22>
lea    0x1f0b7(%rip),%rdi        # 2d8e2 <png_pass_start.21>
lea    0x1f0c5(%rip),%rsi        # 2d8f7 <png_pass_yinc.24>
lea    0x1f0b7(%rip),%r8        # 2d8f0 <png_pass_ystart.23>
jmp    e8ab <png_read_push_finish_row+0xeb>
movzbl (%rdx,%rcx,1),%r9d
mov    0x1f8(%r15),%eax
lea    -0x1(%r9,%rax,1),%eax
movzbl (%rdx,%rdi,1),%edx
sub    %edx,%eax
xor    %edx,%edx
div    %r9d
mov    %eax,0x210(%r15)
mov    0x134(%r15),%eax
and    $0x2,%eax
test   %eax,%eax
jne    e8f3 <png_read_push_finish_row+0x133>
movzbl 0x265(%r15),%edx
movzbl (%rdx,%rsi,1),%r9d
mov    0x1fc(%r15),%eax
lea    -0x1(%r9,%rax,1),%eax
movzbl (%rdx,%r8,1),%edx
sub    %edx,%eax
xor    %edx,%edx
div    %r9d
mov    %eax,0x200(%r15)
mov    0x210(%r15),%edx
test   %edx,%edx
je     e8ab <png_read_push_finish_row+0xeb>
test   %eax,%eax
jne    e8f9 <png_read_push_finish_row+0x139>
movzbl 0x265(%r15),%edx
lea    0x1(%rdx),%eax
mov    %al,0x265(%r15)
test   %dl,%dl
je     e8ff <png_read_push_finish_row+0x13f>
movzbl 0x265(%r15),%eax
cmp    $0x3,%al
jne    e8d9 <png_read_push_finish_row+0x119>
mov    0x1f8(%r15),%eax
cmp    $0x2,%eax
jbe    e90b <png_read_push_finish_row+0x14b>
movzbl 0x265(%r15),%eax
cmp    $0x5,%al
jne    e91d <png_read_push_finish_row+0x15d>
mov    0x1f8(%r15),%eax
cmp    $0x1,%eax
jbe    e90b <png_read_push_finish_row+0x14b>
jmp    e91d <png_read_push_finish_row+0x15d>
mov    -0x8(%rbp),%r15
leaveq 
retq   
mov    -0x8(%rbp),%r15
leaveq 
retq   
mov    0x1f8(%r15),%eax
cmp    $0x4,%eax
ja     e8c1 <png_read_push_finish_row+0x101>
movzbl 0x265(%r15),%eax
add    $0x1,%eax
mov    %al,0x265(%r15)
movzbl 0x265(%r15),%eax
cmp    $0x7,%al
jbe    e935 <png_read_push_finish_row+0x175>
add    $0xff,%eax
mov    %al,0x265(%r15)
movzbl 0x265(%r15),%edx
cmp    $0x6,%dl
jbe    e83b <png_read_push_finish_row+0x7b>
mov    -0x8(%rbp),%r15
leaveq 
retq   
nopl   0x0(%rax)

000000000000e950 <png_create_read_struct>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
movq   $0x0,(%rsp)
xor    %r8d,%r8d
mov    %r8,%r9
callq  54a0 <png_create_read_struct_2@plt>
leaveq 
retq   
nopl   (%rax)

000000000000e970 <png_create_read_struct_2>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    0x10(%rbp),%rax
mov    %rax,(%rsp)
callq  6b80 <png_create_png_struct>
test   %rax,%rax
jne    e98c <png_create_read_struct_2+0x1c>
leaveq 
retq   
movl   $0x8000,0x12c(%rax)
movl   $0x2000,0x468(%rax)
mov    0x130(%rax),%ecx
or     $0x300000,%ecx
mov    %ecx,0x130(%rax)
xor    %esi,%esi
mov    %rsi,%rdx
mov    %rax,%rdi
mov    %r15,-0x8(%rbp)
mov    %rax,%r15
callq  5560 <png_set_read_fn@plt>
mov    %r15,%rax
mov    -0x8(%rbp),%r15
leaveq 
retq   
nop

000000000000e9d0 <png_read_info>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
test   %rdi,%rdi
jne    e9df <png_read_info+0xf>
leaveq 
retq   
test   %rsi,%rsi
jne    e9e6 <png_read_info+0x16>
leaveq 
retq   
mov    %rdi,%rax
mov    %rsi,%rcx
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rbx,%r14
mov    %rdi,%rbx
mov    %rax,%rdi
mov    %r12,%r15
mov    %rsi,%r12
mov    %rcx,%rsi
callq  1b060 <png_read_sig>
lea    0x1ef7c(%rip),%rax        # 2d98e <png_pass_yinc.24+0x97>
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %rax,%r14
jmp    ea31 <png_read_info+0x61>
mov    %rax,%rdx
mov    %rbx,%rdi
mov    %r12,%rsi
callq  1cae0 <png_handle_IHDR>
mov    %rbx,%rdi
callq  1b160 <png_read_chunk_header>
mov    0x218(%rbx),%r13d
cmp    $0x49444154,%r13d
je     ea67 <png_read_info+0x97>
mov    0x12c(%rbx),%ecx
mov    %rcx,%rdx
and    $0x4,%edx
test   %edx,%edx
je     eac7 <png_read_info+0xf7>
or     $0x2008,%ecx
mov    %ecx,0x12c(%rbx)
jmp    eac7 <png_read_info+0xf7>
mov    0x12c(%rbx),%ecx
mov    %rcx,%rdx
and    $0x1,%edx
test   %edx,%edx
jne    ea86 <png_read_info+0xb6>
mov    %rbx,%rdi
lea    0x1eedb(%rip),%rsi        # 2d95c <png_pass_yinc.24+0x65>
callq  5060 <png_chunk_error@plt>
movzbl 0x267(%rbx),%edx
cmp    $0x3,%dl
jne    eaa0 <png_read_info+0xd0>
mov    %rcx,%rdx
and    $0x2,%edx
test   %edx,%edx
je     ec10 <png_read_info+0x240>
and    $0x8,%ecx
test   %ecx,%ecx
je     eab8 <png_read_info+0xe8>
mov    %rax,%r15
mov    %rbx,%rdi
mov    %r14,%rsi
callq  5230 <png_chunk_benign_error@plt>
mov    %r15,%rax
mov    0x12c(%rbx),%ecx
or     $0x4,%ecx
mov    %ecx,0x12c(%rbx)
cmp    $0x49484452,%r13d
je     ea23 <png_read_info+0x53>
cmp    $0x49454e44,%r13d
je     ec1f <png_read_info+0x24f>
mov    %rax,%r15
mov    %rbx,%rdi
mov    %r13,%rsi
callq  6e80 <png_chunk_unknown_handling>
test   %eax,%eax
jne    ec32 <png_read_info+0x262>
cmp    $0x504c5445,%r13d
je     ec7d <png_read_info+0x2ad>
cmp    $0x49444154,%r13d
je     ec90 <png_read_info+0x2c0>
cmp    $0x624b4744,%r13d
je     ecad <png_read_info+0x2dd>
cmp    $0x6348524d,%r13d
je     ecc0 <png_read_info+0x2f0>
cmp    $0x65584966,%r13d
je     ecd3 <png_read_info+0x303>
cmp    $0x67414d41,%r13d
je     ece6 <png_read_info+0x316>
cmp    $0x68495354,%r13d
je     ecf9 <png_read_info+0x329>
cmp    $0x6f464673,%r13d
je     ed0c <png_read_info+0x33c>
cmp    $0x7043414c,%r13d
je     ed1f <png_read_info+0x34f>
cmp    $0x7343414c,%r13d
je     ed32 <png_read_info+0x362>
cmp    $0x70485973,%r13d
je     ed45 <png_read_info+0x375>
cmp    $0x73424954,%r13d
je     ed58 <png_read_info+0x388>
cmp    $0x73524742,%r13d
je     ed6b <png_read_info+0x39b>
cmp    $0x69434350,%r13d
je     ed7e <png_read_info+0x3ae>
cmp    $0x73504c54,%r13d
je     ed91 <png_read_info+0x3c1>
cmp    $0x74455874,%r13d
je     eda4 <png_read_info+0x3d4>
cmp    $0x74494d45,%r13d
je     edb7 <png_read_info+0x3e7>
cmp    $0x74524e53,%r13d
je     edca <png_read_info+0x3fa>
cmp    $0x7a545874,%r13d
je     eddd <png_read_info+0x40d>
cmp    $0x69545874,%r13d
je     edf0 <png_read_info+0x420>
mov    %r15,%rdx
mov    %rbx,%rdi
mov    %r12,%rsi
xor    %ecx,%ecx
callq  1fe00 <png_handle_unknown>
jmpq   ea31 <png_read_info+0x61>
mov    %rbx,%rdi
lea    0x1ed5b(%rip),%rsi        # 2d975 <png_pass_yinc.24+0x7e>
callq  5060 <png_chunk_error@plt>
mov    %rax,%rdx
mov    %rbx,%rdi
mov    %r12,%rsi
callq  1cf50 <png_handle_IEND>
jmpq   ea31 <png_read_info+0x61>
mov    %rax,%rcx
mov    %r15,%rdx
mov    %rbx,%rdi
mov    %r12,%rsi
callq  1fe00 <png_handle_unknown>
cmp    $0x504c5445,%r13d
je     ee03 <png_read_info+0x433>
cmp    $0x49444154,%r13d
jne    ea31 <png_read_info+0x61>
movl   $0x0,0x248(%rbx)
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
leaveq 
retq   
mov    %r15,%rdx
mov    %rbx,%rdi
mov    %r12,%rsi
callq  1cc70 <png_handle_PLTE>
jmpq   ea31 <png_read_info+0x61>
mov    %r15d,0x248(%rbx)
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
leaveq 
retq   
mov    %r15,%rdx
mov    %rbx,%rdi
mov    %r12,%rsi
callq  1cfd0 <png_handle_bKGD>
jmpq   ea31 <png_read_info+0x61>
mov    %r15,%rdx
mov    %rbx,%rdi
mov    %r12,%rsi
callq  1d230 <png_handle_cHRM>
jmpq   ea31 <png_read_info+0x61>
mov    %r15,%rdx
mov    %rbx,%rdi
mov    %r12,%rsi
callq  1d460 <png_handle_eXIf>
jmpq   ea31 <png_read_info+0x61>
mov    %r15,%rdx
mov    %rbx,%rdi
mov    %r12,%rsi
callq  1d690 <png_handle_gAMA>
jmpq   ea31 <png_read_info+0x61>
mov    %r15,%rdx
mov    %rbx,%rdi
mov    %r12,%rsi
callq  1d780 <png_handle_hIST>
jmpq   ea31 <png_read_info+0x61>
mov    %r15,%rdx
mov    %rbx,%rdi
mov    %r12,%rsi
callq  1e410 <png_handle_oFFs>
jmpq   ea31 <png_read_info+0x61>
mov    %r15,%rdx
mov    %rbx,%rdi
mov    %r12,%rsi
callq  1e5d0 <png_handle_pCAL>
jmpq   ea31 <png_read_info+0x61>
mov    %r15,%rdx
mov    %rbx,%rdi
mov    %r12,%rsi
callq  1ed00 <png_handle_sCAL>
jmpq   ea31 <png_read_info+0x61>
mov    %r15,%rdx
mov    %rbx,%rdi
mov    %r12,%rsi
callq  1e980 <png_handle_pHYs>
jmpq   ea31 <png_read_info+0x61>
mov    %r15,%rdx
mov    %rbx,%rdi
mov    %r12,%rsi
callq  1eae0 <png_handle_sBIT>
jmpq   ea31 <png_read_info+0x61>
mov    %r15,%rdx
mov    %rbx,%rdi
mov    %r12,%rsi
callq  1f320 <png_handle_sRGB>
jmpq   ea31 <png_read_info+0x61>
mov    %r15,%rdx
mov    %rbx,%rdi
mov    %r12,%rsi
callq  1d920 <png_handle_iCCP>
jmpq   ea31 <png_read_info+0x61>
mov    %r15,%rdx
mov    %rbx,%rdi
mov    %r12,%rsi
callq  1f010 <png_handle_sPLT>
jmpq   ea31 <png_read_info+0x61>
mov    %r15,%rdx
mov    %rbx,%rdi
mov    %r12,%rsi
callq  1f460 <png_handle_tEXt>
jmpq   ea31 <png_read_info+0x61>
mov    %r15,%rdx
mov    %rbx,%rdi
mov    %r12,%rsi
callq  1f600 <png_handle_tIME>
jmpq   ea31 <png_read_info+0x61>
mov    %r15,%rdx
mov    %rbx,%rdi
mov    %r12,%rsi
callq  1f730 <png_handle_tRNS>
jmpq   ea31 <png_read_info+0x61>
mov    %r15,%rdx
mov    %rbx,%rdi
mov    %r12,%rsi
callq  1fa40 <png_handle_zTXt>
jmpq   ea31 <png_read_info+0x61>
mov    %r15,%rdx
mov    %rbx,%rdi
mov    %r12,%rsi
callq  1e080 <png_handle_iTXt>
jmpq   ea31 <png_read_info+0x61>
mov    0x12c(%rbx),%eax
or     $0x2,%eax
mov    %eax,0x12c(%rbx)
jmpq   ea31 <png_read_info+0x61>
nopw   0x0(%rax,%rax,1)

000000000000ee20 <png_start_read_image>:
push   %rbp
mov    %rsp,%rbp
test   %rdi,%rdi
jne    ee2b <png_start_read_image+0xb>
leaveq 
retq   
mov    0x130(%rdi),%eax
and    $0x40,%eax
test   %eax,%eax
je     ee46 <png_start_read_image+0x26>
lea    0x1eb64(%rip),%rsi        # 2d9a3 <png_pass_yinc.24+0xac>
callq  b110 <png_app_error>
leaveq 
retq   
callq  1c5c0 <png_read_start_row>
leaveq 
retq   
nopl   (%rax)

000000000000ee50 <png_read_update_info>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
test   %rdi,%rdi
jne    ee5f <png_read_update_info+0xf>
leaveq 
retq   
mov    0x130(%rdi),%eax
and    $0x40,%eax
test   %eax,%eax
je     ee7a <png_read_update_info+0x2a>
lea    0x1eb6a(%rip),%rsi        # 2d9dd <png_pass_yinc.24+0xe6>
callq  b110 <png_app_error>
leaveq 
retq   
mov    %rdi,%rax
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rdi,%r14
mov    %rax,%rdi
mov    %rsi,%r15
callq  1c5c0 <png_read_start_row>
mov    %r15,%rsi
mov    %r14,%rdi
callq  15d10 <png_read_transform_info>
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

000000000000eeb0 <png_read_rows>:
push   %rbp
mov    %rsp,%rbp
sub    $0x50,%rsp
test   %rdi,%rdi
jne    eebf <png_read_rows+0xf>
leaveq 
retq   
xor    %r8d,%r8d
test   %rsi,%rsi
jne    eef4 <png_read_rows+0x44>
mov    %r8,%rax
test   %rax,%rax
je     ef25 <png_read_rows+0x75>
mov    %rbx,-0x28(%rbp)
mov    %r12,-0x30(%rbp)
mov    %r13,-0x38(%rbp)
mov    %r14,-0x40(%rbp)
mov    %r15,-0x48(%rbp)
mov    %rdi,%r12
mov    %rcx,%r13
mov    %rsi,%r14
mov    %r8,%r15
mov    %r15,%rbx
jmp    ef6c <png_read_rows+0xbc>
test   %rdx,%rdx
je     ef87 <png_read_rows+0xd7>
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x48(%rbp)
mov    %rdx,%rbx
mov    %r8,%r12
mov    %rdi,%r13
mov    %rcx,%r14
mov    %rsi,%r15
jmpq   efab <png_read_rows+0xfb>
test   %rdx,%rdx
je     efc6 <png_read_rows+0x116>
mov    %rbx,-0x28(%rbp)
mov    %r12,-0x30(%rbp)
mov    %r13,-0x38(%rbp)
mov    %r14,-0x40(%rbp)
mov    %r15,-0x48(%rbp)
mov    %rdx,%rbx
mov    %rdi,%r13
mov    %rcx,%r14
mov    %r8,%r15
mov    %r15,%r12
jmpq   efde <png_read_rows+0x12e>
mov    (%r14),%rsi
mov    %r12,%rdi
mov    %rbx,%rdx
callq  5600 <png_read_row@plt>
add    $0x1,%r15d
add    $0x8,%r14
cmp    %r15d,%r13d
ja     ef56 <png_read_rows+0xa6>
mov    -0x48(%rbp),%r15
mov    -0x40(%rbp),%r14
mov    -0x38(%rbp),%r13
mov    -0x30(%rbp),%r12
mov    -0x28(%rbp),%rbx
leaveq 
retq   
mov    $0x1,%eax
jmpq   eeca <png_read_rows+0x1a>
mov    (%r15),%rsi
mov    (%rbx),%rdx
mov    %r13,%rdi
callq  5600 <png_read_row@plt>
add    $0x1,%r12d
add    $0x8,%r15
add    $0x8,%rbx
cmp    %r14d,%r12d
jb     ef91 <png_read_rows+0xe1>
mov    -0x48(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
leaveq 
retq   
mov    (%rbx),%rdx
mov    %r13,%rdi
mov    %r12,%rsi
callq  5600 <png_read_row@plt>
add    $0x1,%r15d
add    $0x8,%rbx
cmp    %r15d,%r14d
ja     efc8 <png_read_rows+0x118>
mov    -0x48(%rbp),%r15
mov    -0x40(%rbp),%r14
mov    -0x38(%rbp),%r13
mov    -0x30(%rbp),%r12
mov    -0x28(%rbp),%rbx
leaveq 
retq   
nopl   0x0(%rax)

000000000000f000 <png_read_row>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
test   %rdi,%rdi
jne    f00f <png_read_row+0xf>
leaveq 
retq   
mov    0x130(%rdi),%eax
and    $0x40,%eax
test   %eax,%eax
je     f030 <png_read_row+0x30>
mov    %r15,%rcx
mov    %rsi,%r15
mov    %r13,%r8
mov    %rdi,%r13
mov    %r14,%r9
mov    %rdx,%r14
jmp    f05f <png_read_row+0x5f>
mov    %rdi,%rax
mov    %r15,-0x8(%rbp)
mov    %rdx,-0x10(%rbp)
mov    %rsi,-0x18(%rbp)
mov    %r13,%r15
mov    %rdi,%r13
mov    %rax,%rdi
callq  1c5c0 <png_read_start_row>
mov    %r15,%r8
mov    %r14,%r9
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%rcx
mov    0x210(%r13),%esi
mov    %esi,-0x30(%rbp)
movzbl 0x267(%r13),%eax
mov    %al,-0x20(%rbp)
movzbl 0x268(%r13),%eax
mov    %al,-0x1f(%rbp)
movzbl 0x26b(%r13),%eax
mov    %al,-0x1e(%rbp)
movzbl 0x26a(%r13),%edx
cmp    $0x7,%dl
ja     f0a8 <png_read_row+0xa8>
mov    %rdx,%rax
imul   %rsi,%rax
add    $0x7,%rax
shr    $0x3,%rax
jmp    f0b3 <png_read_row+0xb3>
mov    %rdx,%rax
shr    $0x3,%rax
imul   %rsi,%rax
mov    %dl,-0x1d(%rbp)
mov    %rax,-0x28(%rbp)
mov    $0x1,%edx
movzbl 0x264(%r13),%eax
test   %al,%al
jne    f1b1 <png_read_row+0x1b1>
mov    0x12c(%r13),%eax
and    $0x4,%eax
test   %eax,%eax
je     f238 <png_read_row+0x238>
mov    0x228(%r13),%rax
movb   $0xff,(%rax)
mov    0x228(%r13),%rsi
mov    -0x28(%rbp),%rdx
add    $0x1,%rdx
mov    %r13,%rdi
mov    %rcx,-0x18(%rbp)
mov    %r8,-0x8(%rbp)
mov    %r9,-0x10(%rbp)
callq  1c0f0 <png_read_IDAT_data>
lea    -0x30(%rbp),%rsi
mov    0x228(%r13),%rax
movzbl (%rax),%r8d
test   %r8b,%r8b
jne    f247 <png_read_row+0x247>
mov    0x220(%r13),%rdi
mov    0x228(%r13),%rsi
mov    -0x28(%rbp),%rdx
add    $0x1,%rdx
callq  54c0 <memcpy@plt>
mov    0x3d8(%r13),%eax
and    $0x4,%eax
test   %eax,%eax
je     f16f <png_read_row+0x16f>
movzbl 0x3dc(%r13),%eax
cmp    $0x40,%al
jne    f16f <png_read_row+0x16f>
mov    0x228(%r13),%rsi
add    $0x1,%rsi
lea    -0x30(%rbp),%rdi
callq  102e0 <png_do_read_intrapixel>
mov    0x134(%r13),%eax
test   %eax,%eax
je     f186 <png_read_row+0x186>
mov    %r13,%rdi
lea    -0x30(%rbp),%rsi
callq  16030 <png_do_read_transformations>
movzbl 0x26f(%r13),%ecx
test   %cl,%cl
je     f260 <png_read_row+0x260>
movzbl -0x1d(%rbp),%eax
cmp    %al,%cl
je     f28a <png_read_row+0x28a>
mov    %r13,%rdi
lea    0x1e8be(%rip),%rsi        # 2da6a <png_pass_yinc.24+0x173>
callq  5470 <png_error@plt>
mov    0x134(%r13),%eax
and    $0x2,%eax
test   %eax,%eax
je     f0cf <png_read_row+0xcf>
movzbl 0x265(%r13),%eax
cmp    $0x5,%al
ja     f300 <png_read_row+0x300>
lea    0x1e726(%rip),%rsi        # 2d900 <png_pass_yinc.24+0x9>
movslq (%rsi,%rax,4),%rax
add    %rsi,%rax
jmpq   *%rax
mov    0x214(%r13),%eax
and    $0x1,%eax
test   %eax,%eax
jne    f201 <png_read_row+0x201>
mov    0x1f8(%r13),%eax
cmp    $0x1,%eax
ja     f0cf <png_read_row+0xcf>
test   %r14,%r14
je     f225 <png_read_row+0x225>
mov    %r13,%rdi
mov    %rcx,-0x18(%rbp)
mov    %r14,%rsi
mov    %r8,%r14
mov    %r9,%r15
callq  1b430 <png_combine_row>
mov    %r14,%r8
mov    %r15,%r9
mov    -0x18(%rbp),%rcx
mov    %r13,%rdi
mov    %r8,%r13
mov    %r9,%r14
mov    %rcx,%r15
callq  1c4a0 <png_read_finish_row>
leaveq 
retq   
mov    %r13,%rdi
lea    0x1e7d5(%rip),%rsi        # 2da17 <png_pass_yinc.24+0x120>
callq  5470 <png_error@plt>
cmp    $0x4,%r8b
jbe    f4c0 <png_read_row+0x4c0>
mov    %r13,%rdi
lea    0x1e7dd(%rip),%rsi        # 2da38 <png_pass_yinc.24+0x141>
callq  5470 <png_error@plt>
movzbl -0x1d(%rbp),%eax
mov    %al,0x26f(%r13)
movzbl 0x26e(%r13),%ecx
movzbl -0x1d(%rbp),%eax
cmp    %al,%cl
jae    f28a <png_read_row+0x28a>
mov    %r13,%rdi
lea    0x1e7cd(%rip),%rsi        # 2da52 <png_pass_yinc.24+0x15b>
callq  5470 <png_error@plt>
movzbl 0x264(%r13),%eax
test   %al,%al
je     f4dc <png_read_row+0x4dc>
mov    0x134(%r13),%ecx
mov    %rcx,%rax
and    $0x2,%eax
test   %eax,%eax
je     f4dc <png_read_row+0x4dc>
movzbl 0x265(%r13),%edx
cmp    $0x5,%dl
ja     f2d0 <png_read_row+0x2d0>
mov    0x228(%r13),%rsi
add    $0x1,%rsi
lea    -0x30(%rbp),%rdi
callq  1bb20 <png_do_read_interlace>
test   %r14,%r14
je     f2e5 <png_read_row+0x2e5>
mov    %r14,%rsi
mov    %r13,%rdi
mov    $0x1,%edx
callq  1b430 <png_combine_row>
test   %r15,%r15
je     f509 <png_read_row+0x509>
mov    %r15,%rsi
xor    %edx,%edx
mov    %r13,%rdi
callq  1b430 <png_combine_row>
jmpq   f509 <png_read_row+0x509>
mov    0x214(%r13),%eax
and    $0x1,%eax
test   %eax,%eax
jne    f0cf <png_read_row+0xcf>
mov    %r13,%rdi
mov    %r8,%r13
mov    %r9,%r14
mov    %rcx,%r15
callq  1c4a0 <png_read_finish_row>
leaveq 
retq   
mov    0x214(%r13),%eax
and    $0x7,%eax
test   %eax,%eax
je     f0cf <png_read_row+0xcf>
test   %r14,%r14
je     f35b <png_read_row+0x35b>
mov    %r13,%rdi
mov    %rcx,-0x18(%rbp)
mov    %r14,%rsi
mov    %r9,%r14
mov    %r8,%r15
callq  1b430 <png_combine_row>
mov    %r15,%r8
mov    %r14,%r9
mov    -0x18(%rbp),%rcx
mov    %r13,%rdi
mov    %r8,%r13
mov    %r9,%r14
mov    %rcx,%r15
callq  1c4a0 <png_read_finish_row>
leaveq 
retq   
mov    0x214(%r13),%eax
and    $0x7,%eax
test   %eax,%eax
jne    f38c <png_read_row+0x38c>
mov    0x1f8(%r13),%eax
cmp    $0x4,%eax
ja     f0cf <png_read_row+0xcf>
test   %r14,%r14
je     f3b0 <png_read_row+0x3b0>
mov    %r13,%rdi
mov    %rcx,-0x18(%rbp)
mov    %r14,%rsi
mov    %r8,%r14
mov    %r9,%r15
callq  1b430 <png_combine_row>
mov    %r14,%r8
mov    %r15,%r9
mov    -0x18(%rbp),%rcx
mov    %r13,%rdi
mov    %r8,%r13
mov    %r9,%r14
mov    %rcx,%r15
callq  1c4a0 <png_read_finish_row>
leaveq 
retq   
mov    0x214(%r13),%eax
mov    %rax,%rsi
and    $0x7,%esi
cmp    $0x4,%esi
je     f0cf <png_read_row+0xcf>
test   %r14,%r14
je     f404 <png_read_row+0x404>
and    $0x4,%eax
test   %eax,%eax
je     f404 <png_read_row+0x404>
mov    %r13,%rdi
mov    %rcx,-0x18(%rbp)
mov    %r14,%rsi
mov    %r9,%r14
mov    %r8,%r15
callq  1b430 <png_combine_row>
mov    %r15,%r8
mov    %r14,%r9
mov    -0x18(%rbp),%rcx
mov    %r13,%rdi
mov    %r8,%r13
mov    %r9,%r14
mov    %rcx,%r15
callq  1c4a0 <png_read_finish_row>
leaveq 
retq   
mov    0x214(%r13),%eax
and    $0x3,%eax
test   %eax,%eax
jne    f435 <png_read_row+0x435>
mov    0x1f8(%r13),%eax
cmp    $0x2,%eax
ja     f0cf <png_read_row+0xcf>
test   %r14,%r14
je     f459 <png_read_row+0x459>
mov    %r13,%rdi
mov    %rcx,-0x18(%rbp)
mov    %r14,%rsi
mov    %r8,%r14
mov    %r9,%r15
callq  1b430 <png_combine_row>
mov    %r14,%r8
mov    %r15,%r9
mov    -0x18(%rbp),%rcx
mov    %r13,%rdi
mov    %r8,%r13
mov    %r9,%r14
mov    %rcx,%r15
callq  1c4a0 <png_read_finish_row>
leaveq 
retq   
mov    0x214(%r13),%eax
mov    %rax,%rsi
and    $0x3,%esi
cmp    $0x2,%esi
je     f0cf <png_read_row+0xcf>
test   %r14,%r14
je     f4ad <png_read_row+0x4ad>
and    $0x2,%eax
test   %eax,%eax
je     f4ad <png_read_row+0x4ad>
mov    %r13,%rdi
mov    %rcx,-0x18(%rbp)
mov    %r14,%rsi
mov    %r9,%r14
mov    %r8,%r15
callq  1b430 <png_combine_row>
mov    %r15,%r8
mov    %r14,%r9
mov    -0x18(%rbp),%rcx
mov    %r13,%rdi
mov    %r8,%r13
mov    %r9,%r14
mov    %rcx,%r15
callq  1c4a0 <png_read_finish_row>
leaveq 
retq   
lea    0x1(%rax),%rdx
mov    0x220(%r13),%rcx
add    $0x1,%rcx
mov    %r13,%rdi
callq  1c050 <png_read_filter_row>
jmpq   f126 <png_read_row+0x126>
mov    $0xffffffffffffffff,%rdx
test   %r15,%r15
je     f4f9 <png_read_row+0x4f9>
mov    %r15,%rsi
mov    %r13,%rdi
mov    %rdx,%r15
callq  1b430 <png_combine_row>
mov    %r15,%rdx
test   %r14,%r14
je     f509 <png_read_row+0x509>
mov    %r14,%rsi
mov    %r13,%rdi
callq  1b430 <png_combine_row>
mov    %r13,%rdi
callq  1c4a0 <png_read_finish_row>
mov    0x300(%r13),%rax
test   %rax,%rax
jne    f52b <png_read_row+0x52b>
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
mov    -0x18(%rbp),%r15
leaveq 
retq   
mov    %r13,%rdi
mov    0x214(%rdi),%esi
movzbl 0x265(%rdi),%edx
callq  *%rax
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
mov    -0x18(%rbp),%r15
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

000000000000f550 <png_read_image>:
push   %rbp
mov    %rsp,%rbp
sub    $0x40,%rsp
mov    %rsi,-0x8(%rbp)
test   %rdi,%rdi
jne    f563 <png_read_image+0x13>
leaveq 
retq   
mov    0x130(%rdi),%eax
and    $0x40,%eax
test   %eax,%eax
je     f5ac <png_read_image+0x5c>
movzbl 0x264(%rdi),%eax
test   %al,%al
jne    f607 <png_read_image+0xb7>
mov    %r14,%rax
mov    %r12,%r14
mov    %rdi,%r12
mov    %r15,%rcx
mov    %r13,%r15
mov    %rbx,%r13
mov    %rsi,%rbx
mov    %r12,%rdi
mov    %rax,-0x28(%rbp)
mov    %rcx,-0x30(%rbp)
callq  53f0 <png_set_interlace_handling@plt>
mov    %r15,%rcx
mov    %r14,%rdx
jmp    f5e7 <png_read_image+0x97>
mov    %rdi,%rax
mov    %r14,-0x28(%rbp)
mov    %r15,-0x30(%rbp)
mov    %r12,%r14
mov    %rdi,%r12
mov    %rax,%rdi
mov    %r13,%r15
mov    %rbx,%r13
mov    %rsi,%rbx
callq  53f0 <png_set_interlace_handling@plt>
mov    %r12,%rdi
mov    %r15,-0x40(%rbp)
mov    %rax,%r15
callq  5370 <png_start_read_image@plt>
mov    %r15,%rax
mov    %r14,%rdx
mov    -0x40(%rbp),%rcx
mov    %rax,-0x38(%rbp)
mov    0x1fc(%r12),%r15d
xor    %r14d,%r14d
mov    %rcx,-0x20(%rbp)
mov    %r13,-0x10(%rbp)
mov    %rdx,-0x18(%rbp)
mov    %r14,%rcx
jmp    f658 <png_read_image+0x108>
mov    0x134(%rdi),%eax
and    $0x2,%eax
test   %eax,%eax
je     f672 <png_read_image+0x122>
mov    %r14,%rax
mov    %r12,%r14
mov    %rdi,%r12
mov    %r15,%rcx
mov    %r13,%r15
mov    %rbx,%r13
mov    %rsi,%rbx
jmpq   f594 <png_read_image+0x44>
mov    (%rbx),%rsi
mov    %r12,%rdi
mov    %r14,%rdx
callq  5600 <png_read_row@plt>
add    $0x8,%rbx
add    $0x1,%r13d
cmp    %r15d,%r13d
jb     f62e <png_read_image+0xde>
mov    -0x40(%rbp),%rax
lea    0x1(%rax),%ecx
mov    -0x8(%rbp),%rbx
mov    -0x38(%rbp),%rax
cmp    %ecx,%eax
jg     f6bb <png_read_image+0x16b>
mov    -0x18(%rbp),%r12
mov    -0x10(%rbp),%rbx
mov    -0x20(%rbp),%r13
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
leaveq 
retq   
lea    0x1e420(%rip),%rax        # 2da99 <png_pass_yinc.24+0x1a2>
mov    %rdi,%rcx
mov    %r14,-0x38(%rbp)
mov    %r15,-0x40(%rbp)
mov    %r12,%r14
mov    %rdi,%r12
mov    %rcx,%rdi
mov    %r13,%r15
mov    %rbx,%r13
mov    %rsi,%rbx
mov    %rax,%rsi
callq  5390 <png_warning@plt>
mov    0x1fc(%r12),%eax
mov    %eax,0x200(%r12)
mov    -0x40(%rbp),%rcx
mov    -0x38(%rbp),%rax
jmpq   f594 <png_read_image+0x44>
mov    %rcx,-0x40(%rbp)
mov    %r14,%r13
jmp    f644 <png_read_image+0xf4>
data16 nopw %cs:0x0(%rax,%rax,1)
nop

000000000000f6d0 <png_read_end>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
test   %rdi,%rdi
jne    f6df <png_read_end+0xf>
leaveq 
retq   
mov    $0x49444154,%ecx
mov    %rdi,%rax
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %r13,%r14
mov    %rbx,%r13
mov    %rdi,%rbx
mov    %rax,%rdi
mov    %r12,%r15
mov    %rsi,%r12
mov    %rcx,%rsi
callq  6e80 <png_chunk_unknown_handling>
test   %eax,%eax
je     f712 <png_read_end+0x42>
mov    %r14,%rcx
jmp    f71d <png_read_end+0x4d>
mov    %rbx,%rdi
callq  1c3e0 <png_read_finish_IDAT>
mov    %r14,%rcx
lea    0x1e3df(%rip),%r14        # 2db03 <png_pass_yinc.24+0x20c>
movzbl 0x267(%rbx),%eax
cmp    $0x3,%al
je     f8b8 <png_read_end+0x1e8>
mov    %r13,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rcx,-0x18(%rbp)
mov    %rbx,%rdi
callq  1b160 <png_read_chunk_header>
mov    0x218(%rbx),%r15d
cmp    $0x49444154,%r15d
je     f769 <png_read_end+0x99>
mov    0x12c(%rbx),%ecx
or     $0x2000,%ecx
mov    %ecx,0x12c(%rbx)
cmp    $0x49454e44,%r15d
je     f8dc <png_read_end+0x20c>
cmp    $0x49484452,%r15d
je     f911 <png_read_end+0x241>
test   %r12,%r12
je     f921 <png_read_end+0x251>
mov    %rax,%r13
mov    %rbx,%rdi
mov    %r15,%rsi
callq  6e80 <png_chunk_unknown_handling>
test   %eax,%eax
jne    f92e <png_read_end+0x25e>
cmp    $0x49444154,%r15d
je     f966 <png_read_end+0x296>
cmp    $0x504c5445,%r15d
je     f9a6 <png_read_end+0x2d6>
cmp    $0x624b4744,%r15d
je     f9b9 <png_read_end+0x2e9>
cmp    $0x6348524d,%r15d
je     f9cc <png_read_end+0x2fc>
cmp    $0x65584966,%r15d
je     f9df <png_read_end+0x30f>
cmp    $0x67414d41,%r15d
je     f9f2 <png_read_end+0x322>
cmp    $0x68495354,%r15d
je     fa05 <png_read_end+0x335>
cmp    $0x6f464673,%r15d
je     fa18 <png_read_end+0x348>
cmp    $0x7043414c,%r15d
je     fa2b <png_read_end+0x35b>
cmp    $0x7343414c,%r15d
je     fa3e <png_read_end+0x36e>
cmp    $0x70485973,%r15d
je     fa51 <png_read_end+0x381>
cmp    $0x73424954,%r15d
je     fa64 <png_read_end+0x394>
cmp    $0x73524742,%r15d
je     fa77 <png_read_end+0x3a7>
cmp    $0x69434350,%r15d
je     fa8a <png_read_end+0x3ba>
cmp    $0x73504c54,%r15d
je     fa9d <png_read_end+0x3cd>
cmp    $0x74455874,%r15d
je     fab0 <png_read_end+0x3e0>
cmp    $0x74494d45,%r15d
je     fac3 <png_read_end+0x3f3>
cmp    $0x74524e53,%r15d
je     fad6 <png_read_end+0x406>
cmp    $0x7a545874,%r15d
je     fae9 <png_read_end+0x419>
cmp    $0x69545874,%r15d
je     fafc <png_read_end+0x42c>
mov    %r13,%rdx
mov    %rbx,%rdi
mov    %r12,%rsi
xor    %ecx,%ecx
callq  1fe00 <png_handle_unknown>
jmp    f8ea <png_read_end+0x21a>
movzwl 0x258(%rbx),%eax
cmp    0x25c(%rbx),%eax
jl     fb0f <png_read_end+0x43f>
mov    %r13,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rcx,-0x18(%rbp)
jmpq   f73f <png_read_end+0x6f>
mov    %rax,%rdx
mov    %rbx,%rdi
mov    %r12,%rsi
callq  1cf50 <png_handle_IEND>
mov    0x12c(%rbx),%eax
and    $0x10,%eax
test   %eax,%eax
je     f73f <png_read_end+0x6f>
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
leaveq 
retq   
mov    %rax,%rdx
mov    %rbx,%rdi
mov    %r12,%rsi
callq  1cae0 <png_handle_IHDR>
jmp    f8ea <png_read_end+0x21a>
mov    %rax,%rsi
mov    %rbx,%rdi
callq  1b270 <png_crc_finish>
jmp    f8ea <png_read_end+0x21a>
cmp    $0x49444154,%r15d
je     fb2f <png_read_end+0x45f>
mov    %rax,%rcx
mov    %r13,%rdx
mov    %rbx,%rdi
mov    %r12,%rsi
callq  1fe00 <png_handle_unknown>
cmp    $0x504c5445,%r15d
jne    f8ea <png_read_end+0x21a>
mov    0x12c(%rbx),%eax
or     $0x2,%eax
mov    %eax,0x12c(%rbx)
jmp    f8ea <png_read_end+0x21a>
test   %r13d,%r13d
je     f978 <png_read_end+0x2a8>
mov    0x130(%rbx),%eax
and    $0x8,%eax
test   %eax,%eax
je     f987 <png_read_end+0x2b7>
mov    0x12c(%rbx),%eax
and    $0x2000,%eax
test   %eax,%eax
je     f996 <png_read_end+0x2c6>
mov    %rbx,%rdi
lea    0x1e188(%rip),%rsi        # 2db19 <png_pass_yinc.24+0x222>
callq  5590 <png_benign_error@plt>
mov    %r13,%rsi
mov    %rbx,%rdi
callq  1b270 <png_crc_finish>
jmpq   f8ea <png_read_end+0x21a>
mov    %r13,%rdx
mov    %rbx,%rdi
mov    %r12,%rsi
callq  1cc70 <png_handle_PLTE>
jmpq   f8ea <png_read_end+0x21a>
mov    %r13,%rdx
mov    %rbx,%rdi
mov    %r12,%rsi
callq  1cfd0 <png_handle_bKGD>
jmpq   f8ea <png_read_end+0x21a>
mov    %r13,%rdx
mov    %rbx,%rdi
mov    %r12,%rsi
callq  1d230 <png_handle_cHRM>
jmpq   f8ea <png_read_end+0x21a>
mov    %r13,%rdx
mov    %rbx,%rdi
mov    %r12,%rsi
callq  1d460 <png_handle_eXIf>
jmpq   f8ea <png_read_end+0x21a>
mov    %r13,%rdx
mov    %rbx,%rdi
mov    %r12,%rsi
callq  1d690 <png_handle_gAMA>
jmpq   f8ea <png_read_end+0x21a>
mov    %r13,%rdx
mov    %rbx,%rdi
mov    %r12,%rsi
callq  1d780 <png_handle_hIST>
jmpq   f8ea <png_read_end+0x21a>
mov    %r13,%rdx
mov    %rbx,%rdi
mov    %r12,%rsi
callq  1e410 <png_handle_oFFs>
jmpq   f8ea <png_read_end+0x21a>
mov    %r13,%rdx
mov    %rbx,%rdi
mov    %r12,%rsi
callq  1e5d0 <png_handle_pCAL>
jmpq   f8ea <png_read_end+0x21a>
mov    %r13,%rdx
mov    %rbx,%rdi
mov    %r12,%rsi
callq  1ed00 <png_handle_sCAL>
jmpq   f8ea <png_read_end+0x21a>
mov    %r13,%rdx
mov    %rbx,%rdi
mov    %r12,%rsi
callq  1e980 <png_handle_pHYs>
jmpq   f8ea <png_read_end+0x21a>
mov    %r13,%rdx
mov    %rbx,%rdi
mov    %r12,%rsi
callq  1eae0 <png_handle_sBIT>
jmpq   f8ea <png_read_end+0x21a>
mov    %r13,%rdx
mov    %rbx,%rdi
mov    %r12,%rsi
callq  1f320 <png_handle_sRGB>
jmpq   f8ea <png_read_end+0x21a>
mov    %r13,%rdx
mov    %rbx,%rdi
mov    %r12,%rsi
callq  1d920 <png_handle_iCCP>
jmpq   f8ea <png_read_end+0x21a>
mov    %r13,%rdx
mov    %rbx,%rdi
mov    %r12,%rsi
callq  1f010 <png_handle_sPLT>
jmpq   f8ea <png_read_end+0x21a>
mov    %r13,%rdx
mov    %rbx,%rdi
mov    %r12,%rsi
callq  1f460 <png_handle_tEXt>
jmpq   f8ea <png_read_end+0x21a>
mov    %r13,%rdx
mov    %rbx,%rdi
mov    %r12,%rsi
callq  1f600 <png_handle_tIME>
jmpq   f8ea <png_read_end+0x21a>
mov    %r13,%rdx
mov    %rbx,%rdi
mov    %r12,%rsi
callq  1f730 <png_handle_tRNS>
jmpq   f8ea <png_read_end+0x21a>
mov    %r13,%rdx
mov    %rbx,%rdi
mov    %r12,%rsi
callq  1fa40 <png_handle_zTXt>
jmpq   f8ea <png_read_end+0x21a>
mov    %r13,%rdx
mov    %rbx,%rdi
mov    %r12,%rsi
callq  1e080 <png_handle_iTXt>
jmpq   f8ea <png_read_end+0x21a>
lea    0x1dfc4(%rip),%rsi        # 2dada <png_pass_yinc.24+0x1e3>
mov    %rbx,%rdi
mov    %r13,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rcx,-0x18(%rbp)
callq  5590 <png_benign_error@plt>
jmpq   f73f <png_read_end+0x6f>
test   %r13d,%r13d
je     fb5e <png_read_end+0x48e>
mov    0x130(%rbx),%ecx
and    $0x8,%ecx
test   %ecx,%ecx
jne    fb5e <png_read_end+0x48e>
mov    %r14,%rsi
mov    %rax,%r14
mov    %rbx,%rdi
callq  5590 <png_benign_error@plt>
mov    %r14,%rcx
lea    0x1dfaa(%rip),%r14        # 2db03 <png_pass_yinc.24+0x20c>
jmpq   f93e <png_read_end+0x26e>
mov    0x12c(%rbx),%ecx
and    $0x2000,%ecx
test   %ecx,%ecx
jne    fb41 <png_read_end+0x471>
mov    %rax,%rcx
jmpq   f93e <png_read_end+0x26e>
nopw   %cs:0x0(%rax,%rax,1)

000000000000fb80 <png_destroy_read_struct>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
test   %rdi,%rdi
jne    fb91 <png_destroy_read_struct+0x11>
xor    %eax,%eax
jmp    fb94 <png_destroy_read_struct+0x14>
mov    (%rdi),%rax
test   %rax,%rax
jne    fb9b <png_destroy_read_struct+0x1b>
leaveq 
retq   
mov    %rax,%rcx
mov    %r13,-0x8(%rbp)
mov    %r14,-0x10(%rbp)
mov    %r15,-0x18(%rbp)
mov    %r12,%r13
mov    %rbx,%r12
mov    %rax,%rbx
mov    %rdi,%r14
mov    %rcx,%rdi
mov    %rsi,%r15
mov    %rdx,%rsi
callq  55a0 <png_destroy_info_struct@plt>
mov    %r15,%rsi
mov    %rbx,%rdi
callq  55a0 <png_destroy_info_struct@plt>
movq   $0x0,(%r14)
mov    %rbx,%rdi
callq  103d0 <png_read_destroy>
mov    %rbx,%rdi
callq  ca70 <png_destroy_png_struct>
mov    %r12,%rbx
mov    %r13,%r12
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

000000000000fc00 <png_set_read_status_fn>:
push   %rbp
mov    %rsp,%rbp
test   %rdi,%rdi
jne    fc0b <png_set_read_status_fn+0xb>
leaveq 
retq   
mov    %rsi,0x300(%rdi)
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nop

000000000000fc20 <png_read_png>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
test   %rdi,%rdi
jne    fc2f <png_read_png+0xf>
leaveq 
retq   
test   %rsi,%rsi
jne    fc36 <png_read_png+0x16>
leaveq 
retq   
mov    %rdi,%rax
mov    %rsi,%rcx
mov    %r13,-0x10(%rbp)
mov    %r14,-0x18(%rbp)
mov    %r15,-0x20(%rbp)
mov    %rsi,%r13
mov    %rcx,%rsi
mov    %r12,%r14
mov    %rdi,%r12
mov    %rax,%rdi
mov    %rdx,%r15
callq  57b0 <png_read_info@plt>
mov    0x4(%r13),%eax
cmp    $0x1fffffff,%eax
ja     fde1 <png_read_png+0x1c1>
mov    %r15,%rax
and    $0x8000,%eax
test   %eax,%eax
jle    fc82 <png_read_png+0x62>
mov    %r12,%rdi
callq  58d0 <png_set_scale_16@plt>
mov    %r15,%rax
and    $0x1,%eax
test   %eax,%eax
jle    fc94 <png_read_png+0x74>
mov    %r12,%rdi
callq  56d0 <png_set_strip_16@plt>
mov    %r15,%rax
and    $0x2,%eax
test   %eax,%eax
jle    fca6 <png_read_png+0x86>
mov    %r12,%rdi
callq  5740 <png_set_strip_alpha@plt>
mov    %r15,%rax
and    $0x4,%eax
test   %eax,%eax
jle    fcb8 <png_read_png+0x98>
mov    %r12,%rdi
callq  5580 <png_set_packing@plt>
mov    %r15,%rax
and    $0x8,%eax
test   %eax,%eax
jle    fcca <png_read_png+0xaa>
mov    %r12,%rdi
callq  5820 <png_set_packswap@plt>
mov    %r15,%rax
and    $0x10,%eax
test   %eax,%eax
jle    fcdc <png_read_png+0xbc>
mov    %r12,%rdi
callq  56b0 <png_set_expand@plt>
mov    %r15,%rax
and    $0x20,%eax
test   %eax,%eax
jle    fcee <png_read_png+0xce>
mov    %r12,%rdi
callq  58e0 <png_set_invert_mono@plt>
mov    %r15,%rax
and    $0x40,%eax
test   %eax,%eax
jg     fdf0 <png_read_png+0x1d0>
mov    %r15,%rax
and    $0x80,%eax
test   %eax,%eax
jle    fd10 <png_read_png+0xf0>
mov    %r12,%rdi
callq  5860 <png_set_bgr@plt>
mov    %r15,%rax
and    $0x100,%eax
test   %eax,%eax
jle    fd24 <png_read_png+0x104>
mov    %r12,%rdi
callq  50d0 <png_set_swap_alpha@plt>
mov    %r15,%rax
and    $0x200,%eax
test   %eax,%eax
jle    fd38 <png_read_png+0x118>
mov    %r12,%rdi
callq  51e0 <png_set_swap@plt>
mov    %r15,%rax
and    $0x400,%eax
test   %eax,%eax
jle    fd4c <png_read_png+0x12c>
mov    %r12,%rdi
callq  5620 <png_set_invert_alpha@plt>
mov    %r15,%rax
and    $0x2000,%eax
test   %eax,%eax
jle    fd60 <png_read_png+0x140>
mov    %r12,%rdi
callq  5810 <png_set_gray_to_rgb@plt>
and    $0x4000,%r15d
test   %r15d,%r15d
jle    fd74 <png_read_png+0x154>
mov    %r12,%rdi
callq  5830 <png_set_expand_16@plt>
mov    %r12,%rdi
callq  53f0 <png_set_interlace_handling@plt>
mov    %r12,%rdi
mov    %r13,%rsi
callq  5080 <png_read_update_info@plt>
mov    $0x40,%edx
xor    %r15d,%r15d
mov    %r12,%rdi
mov    %r13,%rsi
mov    %r15,%rcx
callq  5720 <png_free_data@plt>
mov    0x160(%r13),%rax
test   %rax,%rax
je     fe13 <png_read_png+0x1f3>
mov    0x160(%r13),%rsi
mov    %r12,%rdi
callq  52b0 <png_read_image@plt>
mov    0x8(%r13),%eax
or     $0x8000,%eax
mov    %eax,0x8(%r13)
mov    %r13,%rsi
mov    %r12,%rdi
callq  5170 <png_read_end@plt>
mov    %r14,%r12
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
leaveq 
retq   
mov    %r12,%rdi
lea    0x1dd45(%rip),%rsi        # 2db30 <png_pass_yinc.24+0x239>
callq  5470 <png_error@plt>
mov    0x8(%r13),%eax
and    $0x2,%eax
test   %eax,%eax
je     fcfc <png_read_png+0xdc>
lea    0xb0(%r13),%rsi
mov    %r12,%rdi
callq  5270 <png_set_shift@plt>
jmpq   fcfc <png_read_png+0xdc>
mov    0x4(%r13),%esi
shl    $0x3,%rsi
mov    %r12,%rdi
callq  5800 <png_malloc@plt>
mov    %rax,0x160(%r13)
mov    %r15,%rax
jmp    fe43 <png_read_png+0x223>
mov    0x160(%r13),%rdx
mov    %eax,%ecx
movq   $0x0,(%rdx,%rcx,8)
add    $0x1,%eax
mov    0x4(%r13),%ecx
cmp    %eax,%ecx
ja     fe2f <png_read_png+0x20f>
mov    0x12c(%r13),%eax
or     $0x40,%eax
mov    %eax,0x12c(%r13)
mov    %r14,-0x8(%rbp)
jmp    fe80 <png_read_png+0x260>
mov    0x10(%r13),%rsi
mov    0x160(%r13),%r14
mov    %r12,%rdi
callq  5800 <png_malloc@plt>
mov    %r15d,%ecx
mov    %rax,(%r14,%rcx,8)
add    $0x1,%r15d
mov    0x4(%r13),%eax
cmp    %r15d,%eax
ja     fe62 <png_read_png+0x242>
mov    -0x8(%rbp),%r14
jmpq   fda9 <png_read_png+0x189>
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   (%rax)

000000000000fea0 <png_image_begin_read_from_file>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
xor    %eax,%eax
test   %rdi,%rdi
jne    feb9 <png_image_begin_read_from_file+0x19>
mov    %rax,%rcx
test   %rcx,%rcx
jne    fec8 <png_image_begin_read_from_file+0x28>
leaveq 
retq   
mov    0x8(%rdi),%ecx
cmp    $0x1,%ecx
je     fed6 <png_image_begin_read_from_file+0x36>
mov    $0x1,%ecx
jmp    feb2 <png_image_begin_read_from_file+0x12>
lea    0x1dcc6(%rip),%rsi        # 2db95 <png_pass_yinc.24+0x29e>
callq  90d0 <png_image_error>
leaveq 
retq   
test   %rsi,%rsi
jne    fee9 <png_image_begin_read_from_file+0x49>
lea    0x1dc82(%rip),%rsi        # 2db64 <png_pass_yinc.24+0x26d>
callq  90d0 <png_image_error>
leaveq 
retq   
lea    0x1dc71(%rip),%rax        # 2db61 <png_pass_yinc.24+0x26a>
mov    %r15,-0x10(%rbp)
mov    %rdi,%r15
mov    %rsi,%rdi
mov    %rax,%rsi
callq  5760 <fopen@plt>
test   %rax,%rax
jne    ff25 <png_image_begin_read_from_file+0x85>
callq  50a0 <__errno_location@plt>
movslq (%rax),%rdi
callq  5890 <strerror@plt>
mov    %rax,%rsi
mov    %r15,%rdi
callq  90d0 <png_image_error>
mov    -0x10(%rbp),%r15
leaveq 
retq   
mov    %r15,%rdi
mov    %r14,-0x8(%rbp)
mov    %rax,%r14
callq  10540 <png_image_read_init>
test   %eax,%eax
jne    ff4c <png_image_begin_read_from_file+0xac>
mov    %r14,%rdi
callq  5240 <fclose@plt>
mov    -0x8(%rbp),%r14
xor    %eax,%eax
mov    -0x10(%rbp),%r15
leaveq 
retq   
mov    (%r15),%rax
mov    (%rax),%rax
mov    %r14,0x108(%rax)
mov    (%r15),%rcx
mov    0x28(%rcx),%eax
or     $0x2,%eax
mov    %eax,0x28(%rcx)
mov    %r15,%rdi
lea    0x781(%rip),%rsi        # 106f0 <png_image_read_header>
mov    %rdi,%rdx
callq  b250 <png_safe_execute>
mov    -0x8(%rbp),%r14
mov    -0x10(%rbp),%r15
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   0x0(%rax)

000000000000ff90 <png_image_begin_read_from_stdio>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
xor    %eax,%eax
test   %rdi,%rdi
jne    ffa9 <png_image_begin_read_from_stdio+0x19>
mov    %rax,%rcx
test   %rcx,%rcx
jne    ffb8 <png_image_begin_read_from_stdio+0x28>
leaveq 
retq   
mov    0x8(%rdi),%ecx
cmp    $0x1,%ecx
je     ffc6 <png_image_begin_read_from_stdio+0x36>
mov    $0x1,%ecx
jmp    ffa2 <png_image_begin_read_from_stdio+0x12>
lea    0x1dc44(%rip),%rsi        # 2dc03 <png_pass_yinc.24+0x30c>
callq  90d0 <png_image_error>
leaveq 
retq   
test   %rsi,%rsi
jne    ffd9 <png_image_begin_read_from_stdio+0x49>
lea    0x1dbff(%rip),%rsi        # 2dbd1 <png_pass_yinc.24+0x2da>
callq  90d0 <png_image_error>
leaveq 
retq   
mov    %rdi,%rax
mov    %rdi,-0x10(%rbp)
mov    %rsi,-0x8(%rbp)
mov    %rax,%rdi
callq  10540 <png_image_read_init>
test   %eax,%eax
jne    fff4 <png_image_begin_read_from_stdio+0x64>
xor    %eax,%eax
leaveq 
retq   
mov    -0x10(%rbp),%rdi
mov    (%rdi),%rax
mov    (%rax),%rax
mov    -0x8(%rbp),%rcx
mov    %rcx,0x108(%rax)
lea    0x6e0(%rip),%rsi        # 106f0 <png_image_read_header>
mov    %rdi,%rdx
callq  b250 <png_safe_execute>
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

0000000000010020 <png_image_begin_read_from_memory>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
xor    %eax,%eax
test   %rdi,%rdi
jne    10039 <png_image_begin_read_from_memory+0x19>
mov    %rax,%rcx
test   %rcx,%rcx
jne    10048 <png_image_begin_read_from_memory+0x28>
leaveq 
retq   
mov    0x8(%rdi),%ecx
cmp    $0x1,%ecx
je     10056 <png_image_begin_read_from_memory+0x36>
mov    $0x1,%ecx
jmp    10032 <png_image_begin_read_from_memory+0x12>
lea    0x1dc24(%rip),%rsi        # 2dc73 <png_pass_yinc.24+0x37c>
callq  90d0 <png_image_error>
leaveq 
retq   
test   %rsi,%rsi
jne    10069 <png_image_begin_read_from_memory+0x49>
lea    0x1dbde(%rip),%rsi        # 2dc40 <png_pass_yinc.24+0x349>
callq  90d0 <png_image_error>
leaveq 
retq   
test   %rdx,%rdx
je     1005b <png_image_begin_read_from_memory+0x3b>
mov    %rdi,%rax
mov    %r15,-0x18(%rbp)
mov    %rsi,-0x10(%rbp)
mov    %rdx,-0x8(%rbp)
mov    %rdi,%r15
mov    %rax,%rdi
callq  10540 <png_image_read_init>
test   %eax,%eax
jne    10094 <png_image_begin_read_from_memory+0x74>
xor    %eax,%eax
mov    -0x18(%rbp),%r15
leaveq 
retq   
mov    (%r15),%rax
mov    -0x10(%rbp),%rcx
mov    %rcx,0x18(%rax)
mov    (%r15),%rcx
mov    -0x8(%rbp),%rax
mov    %rax,0x20(%rcx)
mov    (%r15),%rax
mov    (%rax),%rax
mov    %r15,0x108(%rax)
lea    0x712(%rip),%rcx        # 107d0 <png_image_memory_read>
mov    (%r15),%rax
mov    (%rax),%rax
mov    %rcx,0x100(%rax)
mov    %r15,%rdi
lea    0x61b(%rip),%rsi        # 106f0 <png_image_read_header>
mov    %rdi,%rdx
callq  b250 <png_safe_execute>
mov    -0x18(%rbp),%r15
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

00000000000100f0 <png_image_finish_read>:
push   %rbp
mov    %rsp,%rbp
sub    $0x80,%rsp
xor    %eax,%eax
test   %rdi,%rdi
jne    1010c <png_image_finish_read+0x1c>
mov    %rax,%r9
test   %r9,%r9
jne    10156 <png_image_finish_read+0x66>
leaveq 
retq   
mov    $0x1,%r9d
mov    0x8(%rdi),%r10d
cmp    $0x1,%r10d
jne    10105 <png_image_finish_read+0x15>
mov    0x14(%rdi),%eax
mov    %rax,%r10
and    $0x8,%r10d
test   %r10d,%r10d
jne    10132 <png_image_finish_read+0x42>
and    $0x3,%eax
lea    0x1(%rax),%r9d
mov    %rdx,%r10
mov    $0x7fffffff,%eax
xor    %edx,%edx
mov    0xc(%rdi),%r11d
div    %r9d
cmp    %r11d,%eax
jae    10164 <png_image_finish_read+0x74>
lea    0x1dbe0(%rip),%rsi        # 2dd2f <png_pass_yinc.24+0x438>
callq  90d0 <png_image_error>
leaveq 
retq   
lea    0x1dbfe(%rip),%rsi        # 2dd5b <png_pass_yinc.24+0x464>
callq  90d0 <png_image_error>
leaveq 
retq   
imul   0xc(%rdi),%r9d
test   %ecx,%ecx
jne    10170 <png_image_finish_read+0x80>
mov    %r9,%rcx
test   %ecx,%ecx
js     10179 <png_image_finish_read+0x89>
mov    %rcx,%r11
jmp    1017f <png_image_finish_read+0x8f>
mov    %rcx,%r11
neg    %r11d
mov    (%rdi),%rax
test   %rax,%rax
jne    10195 <png_image_finish_read+0xa5>
lea    0x1db79(%rip),%rsi        # 2dd07 <png_pass_yinc.24+0x410>
callq  90d0 <png_image_error>
leaveq 
retq   
test   %r10,%r10
je     10187 <png_image_finish_read+0x97>
cmp    %r11d,%r9d
ja     10187 <png_image_finish_read+0x97>
mov    0x10(%rdi),%r9d
mov    0x14(%rdi),%eax
mov    %rax,%rdx
and    $0x8,%edx
test   %edx,%edx
je     101dd <png_image_finish_read+0xed>
mov    $0x1,%eax
xor    %edx,%edx
mov    %rsi,-0x28(%rbp)
mov    %rax,%rsi
mov    $0xffffffff,%eax
div    %esi
xor    %edx,%edx
div    %r11d
cmp    %r9d,%eax
jae    101e8 <png_image_finish_read+0xf8>
lea    0x1db0a(%rip),%rsi        # 2dce0 <png_pass_yinc.24+0x3e9>
callq  90d0 <png_image_error>
leaveq 
retq   
and    $0x4,%eax
shr    $0x2,%eax
add    $0x1,%eax
jmp    101b5 <png_image_finish_read+0xc5>
mov    0x14(%rdi),%eax
and    $0x8,%eax
test   %eax,%eax
je     1020c <png_image_finish_read+0x11c>
mov    0x1c(%rdi),%eax
test   %eax,%eax
jne    10207 <png_image_finish_read+0x117>
lea    0x1dab1(%rip),%rsi        # 2dcb1 <png_pass_yinc.24+0x3ba>
callq  90d0 <png_image_error>
leaveq 
retq   
test   %r8,%r8
je     101f9 <png_image_finish_read+0x109>
lea    -0x78(%rbp),%rax
mov    $0x50,%edx
xor    %esi,%esi
mov    %r12,-0x8(%rbp)
mov    %r13,-0x10(%rbp)
mov    %r14,-0x18(%rbp)
mov    %r15,-0x20(%rbp)
mov    %rdi,%r12
mov    %rax,%rdi
mov    %rcx,%r13
mov    %r8,%r14
mov    %r10,%r15
callq  5350 <memset@plt>
mov    %r12,-0x78(%rbp)
mov    %r15,-0x70(%rbp)
mov    %r13d,-0x68(%rbp)
mov    %r14,-0x60(%rbp)
mov    -0x28(%rbp),%rax
mov    %rax,-0x58(%rbp)
movq   $0x0,-0x50(%rbp)
mov    0x14(%r12),%eax
and    $0x8,%eax
test   %eax,%eax
jne    1029a <png_image_finish_read+0x1aa>
lea    0x3db2(%rip),%rsi        # 14020 <png_image_read_direct>
mov    %r12,%rdi
lea    -0x78(%rbp),%rdx
callq  b250 <png_safe_execute>
mov    %rax,%r13
mov    %r12,%rdi
callq  5040 <png_image_free@plt>
mov    %r13,%rax
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
leaveq 
retq   
lea    0x12cf(%rip),%rsi        # 11570 <png_image_read_colormap>
mov    %r12,%rdi
lea    -0x78(%rbp),%r13
mov    %r13,%rdx
callq  b250 <png_safe_execute>
test   %eax,%eax
jne    102b9 <png_image_finish_read+0x1c9>
xor    %r13d,%r13d
jmp    1027d <png_image_finish_read+0x18d>
mov    %r13,%rdx
lea    0x2f1d(%rip),%rsi        # 131e0 <png_image_read_colormapped>
mov    %r12,%rdi
callq  b250 <png_safe_execute>
test   %eax,%eax
jne    102d4 <png_image_finish_read+0x1e4>
xor    %r13d,%r13d
jmp    1027d <png_image_finish_read+0x18d>
mov    $0x1,%r13d
jmp    1027d <png_image_finish_read+0x18d>
nopl   0x0(%rax)

00000000000102e0 <png_do_read_intrapixel>:
push   %rbp
mov    %rsp,%rbp
movzbl 0x10(%rdi),%ecx
mov    %rcx,%rax
and    $0x2,%eax
test   %eax,%eax
jg     102f4 <png_do_read_intrapixel+0x14>
leaveq 
retq   
mov    (%rdi),%r8d
xor    %eax,%eax
movzbl 0x11(%rdi),%edx
cmp    $0x8,%dl
je     10309 <png_do_read_intrapixel+0x29>
cmp    $0x10,%dl
je     10315 <png_do_read_intrapixel+0x35>
leaveq 
retq   
cmp    $0x2,%cl
jne    10324 <png_do_read_intrapixel+0x44>
mov    $0x3,%ecx
jmp    1034e <png_do_read_intrapixel+0x6e>
cmp    $0x2,%cl
jne    10355 <png_do_read_intrapixel+0x75>
mov    $0x6,%edx
jmpq   103b8 <png_do_read_intrapixel+0xd8>
cmp    $0x6,%cl
jne    103bf <png_do_read_intrapixel+0xdf>
mov    $0x4,%ecx
jmp    1034e <png_do_read_intrapixel+0x6e>
movzbl 0x1(%rsi),%edi
movzbl (%rsi),%edx
add    %edi,%edx
mov    %dl,(%rsi)
movzbl 0x2(%rsi),%edx
add    %edi,%edx
mov    %dl,0x2(%rsi)
add    $0x1,%eax
add    %rcx,%rsi
cmp    %r8d,%eax
jb     10334 <png_do_read_intrapixel+0x54>
leaveq 
retq   
cmp    $0x6,%cl
jne    103c1 <png_do_read_intrapixel+0xe1>
mov    $0x8,%edx
jmp    103b8 <png_do_read_intrapixel+0xd8>
movzbl 0x3(%rsi),%edi
movzbl 0x2(%rsi),%ecx
shl    $0x8,%ecx
lea    (%rdi,%rcx,1),%r9d
movzbl 0x1(%rsi),%edi
movzbl (%rsi),%ecx
shl    $0x8,%ecx
add    %edi,%ecx
lea    0x10000(%r9,%rcx,1),%edi
mov    %rdi,%rcx
shr    $0x8,%ecx
mov    %cl,(%rsi)
mov    %dil,0x1(%rsi)
movzbl 0x5(%rsi),%edi
movzbl 0x4(%rsi),%ecx
shl    $0x8,%ecx
add    %edi,%ecx
lea    0x10000(%r9,%rcx,1),%edi
mov    %rdi,%rcx
shr    $0x8,%ecx
mov    %cl,0x4(%rsi)
mov    %dil,0x5(%rsi)
add    $0x1,%eax
add    %rdx,%rsi
cmp    %eax,%r8d
ja     10361 <png_do_read_intrapixel+0x81>
leaveq 
retq   
leaveq 
retq   
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

00000000000103d0 <png_read_destroy>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x8(%rbp)
mov    %rdi,%r15
callq  8c50 <png_destroy_gamma_table>
mov    0x3f8(%r15),%rsi
mov    %r15,%rdi
callq  5790 <png_free@plt>
movq   $0x0,0x3f8(%r15)
mov    0x470(%r15),%rsi
mov    %r15,%rdi
callq  5790 <png_free@plt>
movq   $0x0,0x470(%r15)
mov    0x458(%r15),%rsi
mov    %r15,%rdi
callq  5790 <png_free@plt>
movq   $0x0,0x458(%r15)
mov    0x378(%r15),%rsi
mov    %r15,%rdi
callq  5790 <png_free@plt>
movq   $0x0,0x378(%r15)
mov    0x380(%r15),%rsi
mov    %r15,%rdi
callq  5790 <png_free@plt>
movq   $0x0,0x380(%r15)
mov    0x3ac(%r15),%eax
and    $0x1000,%eax
test   %eax,%eax
je     10490 <png_read_destroy+0xc0>
mov    0x250(%r15),%rsi
mov    %r15,%rdi
callq  6d70 <png_zfree>
movq   $0x0,0x250(%r15)
mov    0x3ac(%r15),%eax
mov    %rax,%rcx
and    $0xffffefff,%ecx
mov    %ecx,0x3ac(%r15)
and    $0x2000,%eax
test   %eax,%eax
je     104ca <png_read_destroy+0xfa>
mov    0x2e8(%r15),%rsi
mov    %r15,%rdi
callq  5790 <png_free@plt>
movq   $0x0,0x2e8(%r15)
mov    0x3ac(%r15),%eax
and    $0xffffdfff,%eax
mov    %eax,0x3ac(%r15)
lea    0x140(%r15),%rdi
callq  5510 <inflateEnd@plt>
mov    0x330(%r15),%rsi
mov    %r15,%rdi
callq  5790 <png_free@plt>
movq   $0x0,0x330(%r15)
mov    0x438(%r15),%rsi
mov    %r15,%rdi
callq  5790 <png_free@plt>
movq   $0x0,0x438(%r15)
mov    0x3c8(%r15),%rsi
mov    %r15,%rdi
callq  5790 <png_free@plt>
movq   $0x0,0x3c8(%r15)
mov    -0x8(%rbp),%r15
leaveq 
retq   
nopl   (%rax)

0000000000010540 <png_image_read_init>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    (%rdi),%rax
test   %rax,%rax
je     1055e <png_image_read_init+0x1e>
lea    0x1d85a(%rip),%rsi        # 2ddb1 <png_pass_yinc.24+0x4ba>
callq  90d0 <png_image_error>
leaveq 
retq   
lea    0x1d827(%rip),%rax        # 2dd8c <png_pass_yinc.24+0x495>
lea    -0x53fc(%rip),%rdx        # b170 <png_safe_error>
lea    -0x5373(%rip),%rcx        # b200 <png_safe_warning>
mov    %rdi,%rsi
mov    %r15,-0x10(%rbp)
mov    %rdi,%r15
mov    %rax,%rdi
callq  56e0 <png_create_read_struct@plt>
mov    %rax,-0x20(%rbp)
xor    %esi,%esi
mov    $0x68,%edx
mov    %r15,%rdi
callq  5350 <memset@plt>
movl   $0x1,0x8(%r15)
mov    -0x20(%rbp),%rdi
test   %rdi,%rdi
jne    105be <png_image_read_init+0x7e>
mov    %r15,%rdi
lea    0x1d7e0(%rip),%rsi        # 2dd93 <png_pass_yinc.24+0x49c>
callq  90d0 <png_image_error>
mov    -0x10(%rbp),%r15
leaveq 
retq   
callq  5280 <png_create_info_struct@plt>
mov    %rax,-0x18(%rbp)
test   %rax,%rax
jne    105dc <png_image_read_init+0x9c>
lea    -0x20(%rbp),%rdi
xor    %esi,%esi
mov    %rsi,%rdx
callq  54b0 <png_destroy_read_struct@plt>
jmp    105a9 <png_image_read_init+0x69>
mov    -0x20(%rbp),%rdi
mov    $0x30,%esi
callq  5150 <png_malloc_warn@plt>
test   %rax,%rax
jne    105fe <png_image_read_init+0xbe>
mov    -0x20(%rbp),%rdi
lea    -0x18(%rbp),%rsi
callq  55a0 <png_destroy_info_struct@plt>
jmp    105cc <png_image_read_init+0x8c>
mov    %rax,%rdi
mov    %r14,-0x8(%rbp)
mov    %rax,%r14
mov    $0x30,%edx
xor    %esi,%esi
callq  5350 <memset@plt>
mov    -0x20(%rbp),%rax
mov    %rax,(%r14)
mov    -0x18(%rbp),%rax
mov    %rax,0x8(%r14)
mov    0x28(%r14),%eax
and    $0xfffffffe,%eax
mov    %eax,0x28(%r14)
mov    %r14,(%r15)
mov    $0x1,%eax
mov    -0x8(%rbp),%r14
mov    -0x10(%rbp),%r15
leaveq 
retq   

0000000000010640 <png_image_format>:
push   %rbp
mov    %rsp,%rbp
movzbl 0x267(%rdi),%ecx
mov    %rcx,%rax
and    $0x2,%eax
test   %eax,%eax
jg     1065e <png_image_format+0x1e>
mov    $0x1,%eax
xor    %edx,%edx
jmp    10668 <png_image_format+0x28>
mov    $0x3,%eax
mov    $0x2,%edx
and    $0x4,%ecx
test   %ecx,%ecx
jle    1068e <png_image_format+0x4e>
movzbl 0x268(%rdi),%ecx
cmp    $0x10,%cl
jne    1067e <png_image_format+0x3e>
add    $0x4,%eax
movzbl 0x267(%rdi),%ecx
and    $0x1,%ecx
test   %ecx,%ecx
jg     1069f <png_image_format+0x5f>
leaveq 
retq   
movzwl 0x260(%rdi),%ecx
test   %cx,%cx
jne    1066f <png_image_format+0x2f>
mov    %rdx,%rax
jmp    1066f <png_image_format+0x2f>
add    $0x8,%eax
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nop

00000000000106b0 <png_gamma_not_sRGB>:
push   %rbp
mov    %rsp,%rbp
cmp    $0x1869f,%edi
jle    106c3 <png_gamma_not_sRGB+0x13>
mov    $0x1,%eax
leaveq 
retq   
test   %edi,%edi
jne    106cb <png_gamma_not_sRGB+0x1b>
xor    %eax,%eax
leaveq 
retq   
lea    (%rdi,%rdi,4),%eax
lea    0x2(%rdi,%rax,2),%ecx
mov    $0x66666667,%eax
imul   %ecx
mov    %rdx,%rax
sar    %eax
shr    $0x1f,%edx
lea    (%rax,%rdx,1),%edi
callq  8b10 <png_gamma_significant>
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

00000000000106f0 <png_image_read_header>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %r13,-0x8(%rbp)
mov    %r14,-0x10(%rbp)
mov    %r15,-0x18(%rbp)
mov    $0x1,%esi
mov    (%rdi),%rax
mov    (%rax),%r14
mov    0x8(%rax),%r15
mov    %rdi,%r13
mov    %r14,%rdi
callq  5050 <png_set_benign_errors@plt>
mov    %r15,%rsi
mov    %r14,%rdi
callq  57b0 <png_read_info@plt>
mov    0x1f8(%r14),%eax
mov    %eax,0xc(%r13)
mov    0x1fc(%r14),%eax
mov    %eax,0x10(%r13)
mov    %r14,%rdi
callq  10640 <png_image_format>
mov    %eax,0x14(%r13)
and    $0x2,%eax
test   %eax,%eax
jne    10771 <png_image_read_header+0x81>
mov    $0x100,%edx
movzbl 0x267(%r14),%eax
test   %al,%al
je     10790 <png_image_read_header+0xa0>
cmp    $0x3,%al
je     107bf <png_image_read_header+0xcf>
mov    $0x1,%eax
mov    %rdx,%rsi
jmp    107a2 <png_image_read_header+0xb2>
movzwl 0x4e2(%r14),%eax
and    $0x8042,%eax
cmp    $0x2,%eax
jne    10752 <png_image_read_header+0x62>
mov    0x18(%r13),%eax
or     $0x1,%eax
mov    %eax,0x18(%r13)
jmp    10752 <png_image_read_header+0x62>
movzbl 0x268(%r14),%ecx
mov    $0x1,%eax
mov    %rax,%rsi
shl    %cl,%esi
cmp    $0x100,%esi
ja     107ad <png_image_read_header+0xbd>
mov    %rsi,%rdx
mov    %edx,0x1c(%r13)
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
leaveq 
retq   
movzwl 0x258(%r14),%esi
mov    $0x1,%eax
jmp    107a2 <png_image_read_header+0xb2>
xchg   %ax,%ax

00000000000107d0 <png_image_memory_read>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
test   %rdi,%rdi
jne    107df <png_image_memory_read+0xf>
leaveq 
retq   
mov    0x108(%rdi),%rax
test   %rax,%rax
jne    107f7 <png_image_memory_read+0x27>
lea    0x1d5ff(%rip),%rsi        # 2ddf1 <png_pass_yinc.24+0x4fa>
callq  5470 <png_error@plt>
mov    (%rax),%rax
test   %rax,%rax
je     107eb <png_image_memory_read+0x1b>
mov    0x20(%rax),%r8
mov    0x18(%rax),%rcx
test   %rcx,%rcx
jne    10818 <png_image_memory_read+0x48>
lea    0x1d5c6(%rip),%rsi        # 2ddd9 <png_pass_yinc.24+0x4e2>
callq  5470 <png_error@plt>
cmp    %rdx,%r8
jb     1080c <png_image_memory_read+0x3c>
mov    %rcx,%rdi
mov    %rdx,%r9
mov    %r12,-0x8(%rbp)
mov    %r13,-0x10(%rbp)
mov    %r14,-0x18(%rbp)
mov    %r15,-0x20(%rbp)
mov    %r8,%r12
mov    %rax,%r13
mov    %rcx,%r14
mov    %rdx,%r15
mov    %r9,%rdx
mov    %rdi,%r8
mov    %rsi,%rdi
mov    %r8,%rsi
callq  54c0 <memcpy@plt>
lea    (%r14,%r15,1),%rax
mov    %rax,0x18(%r13)
sub    %r15,%r12
mov    %r12,0x20(%r13)
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   0x0(%rax)

0000000000010880 <png_image_skip_unused_chunks>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x8(%rbp)
mov    $0x1,%esi
xor    %edx,%edx
mov    $0xffffffffffffffff,%rcx
mov    %rdi,%r15
callq  5690 <png_set_keep_unknown_chunks@plt>
mov    %r15,%rdi
lea    0x1d559(%rip),%rdx        # 2de05 <chunks_to_process.34>
mov    $0x6,%ecx
xor    %esi,%esi
callq  5690 <png_set_keep_unknown_chunks@plt>
mov    -0x8(%rbp),%r15
leaveq 
retq   
xchg   %ax,%ax

00000000000108c0 <set_file_encoding>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    (%rdi),%rax
mov    (%rax),%rax
mov    (%rax),%rax
movslq 0x498(%rax),%r15
mov    %rdi,%r14
mov    %r15,%rdi
callq  8b10 <png_gamma_significant>
test   %eax,%eax
jne    10901 <set_file_encoding+0x41>
movl   $0x4,0x40(%r14)
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
mov    %r15,%rdi
callq  106b0 <png_gamma_not_sRGB>
test   %eax,%eax
jne    1091f <set_file_encoding+0x5f>
movl   $0x1,0x40(%r14)
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
mov    %r15,%rdi
movl   $0x3,0x40(%r14)
callq  8a40 <png_reciprocal>
mov    %eax,0x44(%r14)
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
nopl   (%rax)

0000000000010940 <decode_gamma>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
cmp    $0x3,%edx
jne    10951 <decode_gamma+0x11>
movslq 0x40(%rdi),%rdx
test   %edx,%edx
jne    10980 <decode_gamma+0x40>
mov    %rdi,%rax
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rsi,%r14
mov    %rdi,%r15
mov    %rax,%rdi
callq  108c0 <set_file_encoding>
mov    %r14,%rsi
mov    %r15,%rdi
movslq 0x40(%rdi),%rdx
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
cmp    $0x2,%edx
jle    109a4 <decode_gamma+0x64>
cmp    $0x3,%edx
je     109b3 <decode_gamma+0x73>
cmp    $0x4,%edx
je     109cc <decode_gamma+0x8c>
mov    (%rdi),%rax
mov    (%rax),%rax
mov    (%rax),%rdi
lea    0x1d484(%rip),%rsi        # 2de23 <chunks_to_process.34+0x1e>
callq  5470 <png_error@plt>
cmp    $0x1,%edx
je     109d6 <decode_gamma+0x96>
cmp    $0x2,%edx
jne    1098f <decode_gamma+0x4f>
mov    %rsi,%rax
leaveq 
retq   
mov    %rsi,%rax
shl    $0x8,%eax
add    %esi,%eax
movslq 0x44(%rdi),%rsi
mov    %rax,%rdi
callq  8b70 <png_gamma_16bit_correct>
movzwl %ax,%eax
leaveq 
retq   
mov    %rsi,%rax
shl    $0x8,%eax
add    %esi,%eax
leaveq 
retq   
lea    0x1b7af(%rip),%rcx        # 2c18c <png_sRGB_table>
mov    %esi,%eax
movzwl (%rcx,%rax,2),%eax
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)

00000000000109f0 <png_colormap_compose>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %r12,-0x8(%rbp)
mov    %r13,-0x10(%rbp)
mov    %r14,-0x18(%rbp)
mov    %r15,-0x20(%rbp)
mov    %rbx,%r12
mov    %rcx,%rbx
mov    %r9,%r13
mov    %r8,%r14
mov    %rdi,%r15
callq  10940 <decode_gamma>
mov    %r14,%rsi
mov    %rax,%r14
mov    %r15,%rdi
mov    %r13,%rdx
callq  10940 <decode_gamma>
mov    $0xff,%ecx
sub    %ebx,%ecx
imul   %eax,%ecx
imul   %r14d,%ebx
add    %ebx,%ecx
cmp    $0x2,%r13d
je     10a8c <png_colormap_compose+0x9c>
mov    %rcx,%rax
shr    $0xf,%eax
mov    %eax,%edx
lea    0x1bd3a(%rip),%rax        # 2c78c <png_sRGB_delta>
movzbl (%rdx,%rax,1),%eax
and    $0x7fff,%ecx
imul   %ecx,%eax
shr    $0xc,%eax
lea    0x1b923(%rip),%rcx        # 2c38c <png_sRGB_base>
movzwl (%rcx,%rdx,2),%ecx
add    %ecx,%eax
and    $0xff00,%eax
shr    $0x8,%eax
mov    %r12,%rbx
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
leaveq 
retq   
mov    %rcx,%rax
shl    $0x8,%eax
add    %ecx,%eax
mov    %rax,%rcx
shr    $0x10,%ecx
lea    0x8000(%rcx,%rax,1),%eax
shr    $0x10,%eax
mov    %r12,%rbx
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
leaveq 
retq   
nopl   0x0(%rax)

0000000000010ac0 <png_create_colormap_entry>:
push   %rbp
mov    %rsp,%rbp
sub    $0x80,%rsp
mov    %r15,-0x60(%rbp)
mov    %r14,-0x58(%rbp)
mov    $0x1,%r10d
mov    %r10,-0x20(%rbp)
mov    $0x2,%r15d
mov    %r15,-0x10(%rbp)
mov    (%rdi),%r11
mov    0x14(%r11),%eax
mov    %rax,%r14
and    $0x4,%r14d
test   %r14d,%r14d
jne    10afd <png_create_colormap_entry+0x3d>
mov    %r10,%r15
xor    %r14d,%r14d
mov    %r14,-0x28(%rbp)
and    $0x2,%eax
test   %eax,%eax
je     10b2d <png_create_colormap_entry+0x6d>
cmp    $0xff,%esi
ja     10b3a <png_create_colormap_entry+0x7a>
movslq 0x10(%rbp),%rax
cmp    $0x3,%eax
je     10b4c <png_create_colormap_entry+0x8c>
mov    %rbx,%r10
mov    %rcx,%rbx
mov    %r13,%rcx
mov    %r8,%r13
jmpq   10bbb <png_create_colormap_entry+0xfb>
cmp    %edx,%ecx
je     10c01 <png_create_colormap_entry+0x141>
mov    %r10,%r14
jmp    10b0b <png_create_colormap_entry+0x4b>
mov    (%r11),%rax
mov    (%rax),%rdi
lea    0x1d301(%rip),%rsi        # 2de48 <chunks_to_process.34+0x43>
callq  5470 <png_error@plt>
movslq 0x40(%rdi),%rax
test   %eax,%eax
je     10b62 <png_create_colormap_entry+0xa2>
mov    %rbx,%r10
mov    %rcx,%rbx
mov    %r13,%rcx
mov    %r8,%r13
jmp    10bb7 <png_create_colormap_entry+0xf7>
mov    %rdi,%rax
mov    %r9,-0x38(%rbp)
mov    %r15,-0x78(%rbp)
mov    %r11,-0x70(%rbp)
mov    %rsi,-0x40(%rbp)
mov    %rbx,-0x48(%rbp)
mov    %r12,-0x50(%rbp)
mov    %r13,-0x68(%rbp)
mov    %rcx,%rbx
mov    %rdx,%r12
mov    %r8,%r13
mov    %rdi,%r15
mov    %rax,%rdi
callq  108c0 <set_file_encoding>
mov    %r12,%rdx
mov    %r15,%rdi
mov    -0x68(%rbp),%rcx
mov    -0x50(%rbp),%r12
mov    -0x48(%rbp),%r10
mov    -0x40(%rbp),%rsi
mov    -0x70(%rbp),%r11
mov    -0x78(%rbp),%r15
mov    -0x38(%rbp),%r9
movslq 0x40(%rdi),%rax
lea    0x1b7ca(%rip),%r8        # 2c38c <png_sRGB_base>
mov    %rcx,-0x50(%rbp)
lea    0x1bbbf(%rip),%rcx        # 2c78c <png_sRGB_delta>
cmp    $0x3,%eax
je     10c12 <png_create_colormap_entry+0x152>
cmp    $0x4,%eax
je     10d51 <png_create_colormap_entry+0x291>
cmp    $0x1,%eax
jne    10dac <png_create_colormap_entry+0x2ec>
test   %r14d,%r14d
jg     10e65 <png_create_colormap_entry+0x3a5>
cmp    $0x2,%r15d
je     10e65 <png_create_colormap_entry+0x3a5>
mov    $0x1,%eax
jmpq   10dac <png_create_colormap_entry+0x2ec>
cmp    %r8d,%ecx
je     10b0b <png_create_colormap_entry+0x4b>
mov    %r10,%r14
jmpq   10b0b <png_create_colormap_entry+0x4b>
mov    %rdx,%rax
shl    $0x8,%eax
add    %eax,%edx
movslq 0x44(%rdi),%rax
mov    %r12,-0x48(%rbp)
mov    %rax,%r12
mov    %r9,-0x18(%rbp)
mov    %r11,-0x68(%rbp)
mov    %rsi,-0x30(%rbp)
mov    %r10,-0x40(%rbp)
mov    %rcx,-0x78(%rbp)
mov    %r8,-0x70(%rbp)
mov    %rdi,-0x38(%rbp)
mov    %r12,%rsi
mov    %rax,%r12
mov    %rdx,%rdi
callq  8b70 <png_gamma_16bit_correct>
mov    %rbx,%rcx
shl    $0x8,%ecx
lea    (%rbx,%rcx,1),%edi
mov    %rax,%rbx
mov    %r12,%rsi
callq  8b70 <png_gamma_16bit_correct>
movzwl %bx,%ecx
movzwl %ax,%ebx
mov    %r13,%rax
shl    $0x8,%eax
lea    0x0(%r13,%rax,1),%edi
mov    %r12,%rsi
mov    %rcx,%r12
callq  8b70 <png_gamma_16bit_correct>
movzwl %ax,%r13d
test   %r14d,%r14d
jg     10d7a <png_create_colormap_entry+0x2ba>
cmp    $0x2,%r15d
je     10d7a <png_create_colormap_entry+0x2ba>
mov    %r12,%rax
shl    $0x8,%eax
sub    %r12d,%eax
mov    %rax,%rcx
shr    $0xf,%ecx
mov    %ecx,%esi
mov    -0x78(%rbp),%rcx
movzbl (%rsi,%rcx,1),%edx
and    $0x7fff,%eax
imul   %eax,%edx
shr    $0xc,%edx
mov    -0x70(%rbp),%r8
movzwl (%r8,%rsi,2),%eax
add    %eax,%edx
and    $0xff00,%edx
shr    $0x8,%edx
mov    %rbx,%rax
shl    $0x8,%eax
sub    %ebx,%eax
mov    %rax,%rsi
shr    $0xf,%esi
mov    %esi,%edi
movzbl (%rdi,%rcx,1),%esi
and    $0x7fff,%eax
imul   %eax,%esi
shr    $0xc,%esi
movzwl (%r8,%rdi,2),%eax
lea    (%rsi,%rax,1),%ebx
and    $0xff00,%ebx
shr    $0x8,%ebx
mov    %r13,%rax
shl    $0x8,%eax
sub    %r13d,%eax
mov    %rax,%rsi
shr    $0xf,%esi
mov    %esi,%edi
movzbl (%rdi,%rcx,1),%esi
and    $0x7fff,%eax
imul   %eax,%esi
shr    $0xc,%esi
movzwl (%r8,%rdi,2),%eax
lea    (%rsi,%rax,1),%r13d
and    $0xff00,%r13d
shr    $0x8,%r13d
mov    -0x38(%rbp),%rdi
mov    $0x1,%eax
mov    -0x48(%rbp),%r12
mov    -0x40(%rbp),%r10
mov    -0x30(%rbp),%rsi
mov    -0x68(%rbp),%r11
mov    -0x18(%rbp),%r9
jmp    10dac <png_create_colormap_entry+0x2ec>
mov    %rdx,%rax
shl    $0x8,%eax
add    %eax,%edx
mov    %rbx,%rax
shl    $0x8,%eax
add    %eax,%ebx
mov    %r13,%rax
shl    $0x8,%eax
add    %eax,%r13d
mov    %r9,%rax
shl    $0x8,%eax
add    %eax,%r9d
mov    $0x2,%eax
jmp    10dac <png_create_colormap_entry+0x2ec>
mov    -0x18(%rbp),%rcx
mov    %rcx,%rax
shl    $0x8,%eax
lea    (%rcx,%rax,1),%r9d
mov    %r12,%rdx
mov    -0x38(%rbp),%rdi
mov    -0x70(%rbp),%r8
mov    -0x78(%rbp),%rcx
mov    -0x48(%rbp),%r12
mov    -0x40(%rbp),%r10
mov    -0x30(%rbp),%rsi
mov    -0x68(%rbp),%r11
mov    $0x2,%eax
cmp    $0x2,%eax
je     10e93 <png_create_colormap_entry+0x3d3>
cmp    %eax,%r15d
jne    10eb0 <png_create_colormap_entry+0x3f0>
mov    0x14(%r11),%r8d
mov    %r8,%rax
and    $0x20,%eax
test   %eax,%eax
jne    10ec2 <png_create_colormap_entry+0x402>
mov    $0x2,%ecx
pushq  -0x28(%rbp)
pushq  -0x10(%rbp)
pushq  -0x28(%rbp)
pushq  -0x20(%rbp)
popq   -0x78(%rbp)
popq   -0x30(%rbp)
popq   -0x18(%rbp)
popq   -0x8(%rbp)
mov    %r8,%rax
and    $0x10,%eax
test   %eax,%eax
jne    10e03 <png_create_colormap_entry+0x343>
pushq  -0x28(%rbp)
pushq  -0x10(%rbp)
popq   -0x28(%rbp)
popq   -0x10(%rbp)
cmp    $0x2,%r15d
je     10ef2 <png_create_colormap_entry+0x432>
and    $0x3,%r8d
lea    0x1(%r8),%ecx
imul   %ecx,%esi
mov    %esi,%eax
add    0x18(%rdi),%rax
cmp    $0x2,%ecx
jbe    10f63 <png_create_colormap_entry+0x4a3>
cmp    $0x3,%ecx
jne    10f86 <png_create_colormap_entry+0x4c6>
mov    -0x30(%rbp),%rcx
mov    -0x28(%rbp),%rsi
add    %ecx,%esi
movslq %esi,%rsi
mov    %r13b,(%rax,%rsi,1)
mov    -0x20(%rbp),%rsi
mov    %bl,(%rax,%rsi,1)
mov    -0x10(%rbp),%rsi
add    %esi,%ecx
movslq %ecx,%rcx
mov    %dl,(%rcx,%rax,1)
mov    %r10,%rbx
mov    -0x50(%rbp),%r13
mov    -0x58(%rbp),%r14
mov    -0x60(%rbp),%r15
leaveq 
retq   
lea    0x1b320(%rip),%rax        # 2c18c <png_sRGB_table>
mov    %edx,%edx
movzwl (%rax,%rdx,2),%edx
mov    %ebx,%ebx
movzwl (%rax,%rbx,2),%ebx
mov    %r13d,%r13d
movzwl (%rax,%r13,2),%r13d
mov    %r9,%rax
shl    $0x8,%eax
add    %eax,%r9d
mov    $0x2,%eax
jmpq   10dac <png_create_colormap_entry+0x2ec>
test   %r14d,%r14d
jg     10fa0 <png_create_colormap_entry+0x4e0>
cmp    $0x1,%r15d
je     1105b <png_create_colormap_entry+0x59b>
mov    $0x2,%eax
jmpq   10db5 <png_create_colormap_entry+0x2f5>
mov    (%r11),%rax
mov    (%rax),%rdi
lea    0x1cfa8(%rip),%rsi        # 2de65 <chunks_to_process.34+0x60>
callq  5470 <png_error@plt>
mov    %r8,%rax
and    $0x1,%eax
test   %eax,%eax
jne    11119 <png_create_colormap_entry+0x659>
mov    $0x2,%ecx
pushq  -0x28(%rbp)
pushq  -0x10(%rbp)
pushq  -0x28(%rbp)
pushq  -0x20(%rbp)
popq   -0x78(%rbp)
popq   -0x30(%rbp)
popq   -0x18(%rbp)
popq   -0x8(%rbp)
jmpq   10ded <png_create_colormap_entry+0x32d>
and    $0x3,%r8d
lea    0x1(%r8),%r14d
imul   %r14d,%esi
mov    %esi,%eax
lea    (%rax,%rax,1),%rsi
add    0x18(%rdi),%rsi
mov    $0x80008001,%r11d
cmp    $0x2,%r14d
jbe    11141 <png_create_colormap_entry+0x681>
cmp    $0x3,%r14d
jne    11165 <png_create_colormap_entry+0x6a5>
mov    -0x30(%rbp),%rdi
cmp    $0xfffe,%r9d
jbe    11180 <png_create_colormap_entry+0x6c0>
mov    -0x28(%rbp),%rax
add    %edi,%eax
movslq %eax,%rax
mov    %r13w,(%rsi,%rax,2)
mov    %bx,(%rsi,%rcx,1)
mov    -0x10(%rbp),%rax
add    %edi,%eax
movslq %eax,%rax
mov    %dx,(%rsi,%rax,2)
mov    %r10,%rbx
mov    -0x50(%rbp),%r13
mov    -0x58(%rbp),%r14
mov    -0x60(%rbp),%r15
leaveq 
retq   
test   %r8d,%r8d
je     1119f <png_create_colormap_entry+0x6df>
cmp    $0x2,%ecx
je     11197 <png_create_colormap_entry+0x6d7>
mov    %r10,%rbx
mov    -0x50(%rbp),%r13
mov    -0x58(%rbp),%r14
mov    -0x60(%rbp),%r15
leaveq 
retq   
cmp    $0x4,%ecx
je     111b7 <png_create_colormap_entry+0x6f7>
mov    %r10,%rbx
mov    -0x50(%rbp),%r13
mov    -0x58(%rbp),%r14
mov    -0x60(%rbp),%r15
leaveq 
retq   
lea    (%rdx,%rdx,2),%eax
shl    $0x3,%eax
lea    (%rax,%rdx,2),%eax
add    %edx,%eax
shl    $0x4,%eax
lea    (%rax,%rdx,2),%eax
add    %edx,%eax
shl    $0x4,%eax
lea    (%rax,%rdx,8),%r14d
lea    (%rbx,%rbx,2),%eax
shl    $0x6,%eax
lea    (%rbx,%rbx,8),%edx
sub    %edx,%eax
shl    $0x7,%eax
lea    (%rax,%rbx,8),%eax
lea    (%rax,%rbx,2),%eax
lea    (%r14,%rax,1),%ebx
lea    0x0(%r13,%r13,8),%eax
lea    0x0(%r13,%rax,4),%eax
shl    $0x6,%eax
lea    0x0(%r13,%r13,1),%edx
sub    %edx,%eax
add    %ebx,%eax
cmp    $0x2,%r15d
je     111cd <png_create_colormap_entry+0x70d>
add    $0x80,%eax
mov    %rax,%rdx
and    $0xffffff00,%edx
shr    $0x8,%eax
sub    %eax,%edx
add    $0x40,%edx
mov    %rdx,%rax
shr    $0x16,%eax
mov    %eax,%ebx
movzbl (%rbx,%rcx,1),%eax
and    $0x3fff80,%edx
shr    $0x7,%edx
imul   %edx,%eax
shr    $0xc,%eax
movzwl (%r8,%rbx,2),%ecx
lea    (%rax,%rcx,1),%r13d
and    $0xff00,%r13d
shr    $0x8,%r13d
mov    %r9,%rax
shl    $0x8,%eax
sub    %r9d,%eax
lea    0x807f(%rax),%r9d
shr    $0x10,%r9d
mov    $0x1,%eax
mov    %r13,%rdx
mov    %rdx,%rbx
jmpq   10db5 <png_create_colormap_entry+0x2f5>
mov    %rdx,%rax
shl    $0x8,%eax
neg    %edx
add    %eax,%edx
mov    %rdx,%rax
shr    $0xf,%eax
mov    %eax,%r14d
movzbl (%r14,%rcx,1),%eax
and    $0x7fff,%edx
imul   %edx,%eax
shr    $0xc,%eax
movzwl (%r8,%r14,2),%edx
add    %eax,%edx
and    $0xff00,%edx
shr    $0x8,%edx
mov    %rbx,%rax
shl    $0x8,%eax
neg    %ebx
add    %eax,%ebx
mov    %rbx,%rax
shr    $0xf,%eax
mov    %eax,%r14d
movzbl (%r14,%rcx,1),%eax
and    $0x7fff,%ebx
imul   %ebx,%eax
shr    $0xc,%eax
movzwl (%r8,%r14,2),%ebx
add    %eax,%ebx
and    $0xff00,%ebx
shr    $0x8,%ebx
mov    %r13,%rax
shl    $0x8,%eax
sub    %r13d,%eax
mov    %rax,%r13
shr    $0xf,%r13d
mov    %r13d,%r13d
movzbl 0x0(%r13,%rcx,1),%ecx
and    $0x7fff,%eax
imul   %eax,%ecx
shr    $0xc,%ecx
movzwl (%r8,%r13,2),%eax
lea    (%rcx,%rax,1),%r13d
and    $0xff00,%r13d
shr    $0x8,%r13d
mov    %r9,%rax
shl    $0x8,%eax
sub    %r9d,%eax
lea    0x807f(%rax),%r9d
shr    $0x10,%r9d
mov    $0x1,%eax
jmpq   10db5 <png_create_colormap_entry+0x2f5>
mov    $0x4,%ecx
pushq  -0x10(%rbp)
pushq  -0x28(%rbp)
pushq  -0x10(%rbp)
pushq  -0x20(%rbp)
pushq  -0x28(%rbp)
popq   -0x78(%rbp)
popq   -0x30(%rbp)
popq   -0x20(%rbp)
popq   -0x18(%rbp)
popq   -0x8(%rbp)
jmpq   10ded <png_create_colormap_entry+0x32d>
test   %r8d,%r8d
je     111f1 <png_create_colormap_entry+0x731>
cmp    $0x2,%r14d
je     111e8 <png_create_colormap_entry+0x728>
mov    %r10,%rbx
mov    -0x50(%rbp),%r13
mov    -0x58(%rbp),%r14
mov    -0x60(%rbp),%r15
leaveq 
retq   
cmp    $0x4,%r14d
je     11217 <png_create_colormap_entry+0x757>
mov    %r10,%rbx
mov    -0x50(%rbp),%r13
mov    -0x58(%rbp),%r14
mov    -0x60(%rbp),%r15
leaveq 
retq   
test   %r9d,%r9d
jne    11226 <png_create_colormap_entry+0x766>
xor    %r13d,%r13d
mov    %r13,%rdx
mov    %rdx,%rbx
jmpq   10f33 <png_create_colormap_entry+0x473>
mov    -0x78(%rbp),%rcx
mov    %r9b,(%rax,%rcx,1)
mov    -0x30(%rbp),%rcx
mov    %bl,(%rax,%rcx,1)
mov    %r10,%rbx
mov    -0x50(%rbp),%r13
mov    -0x58(%rbp),%r14
mov    -0x60(%rbp),%r15
leaveq 
retq   
mov    -0x30(%rbp),%rcx
test   %ecx,%ecx
jg     11274 <png_create_colormap_entry+0x7b4>
mov    $0x3,%esi
jmpq   11276 <png_create_colormap_entry+0x7b6>
lea    0x4000(%rax),%r13d
shr    $0xf,%r13d
mov    $0x2,%eax
mov    %r13,%rdx
mov    %rdx,%rbx
jmpq   10db5 <png_create_colormap_entry+0x2f5>
mov    -0x18(%rbp),%rax
mov    %r9w,(%rsi,%rax,1)
cmp    $0xfffe,%r9d
jbe    1127f <png_create_colormap_entry+0x7bf>
mov    -0x8(%rbp),%rax
mov    %bx,(%rsi,%rax,1)
mov    %r10,%rbx
mov    -0x50(%rbp),%r13
mov    -0x58(%rbp),%r14
mov    -0x60(%rbp),%r15
leaveq 
retq   
mov    -0x30(%rbp),%rdi
test   %edi,%edi
jg     1128b <png_create_colormap_entry+0x7cb>
mov    $0x6,%eax
jmp    1128d <png_create_colormap_entry+0x7cd>
mov    %r9,%rax
imul   %edx,%eax
lea    0x7fff(%rax),%edx
mov    %r11,%rax
mul    %edx
mov    %rdx,%r8
shr    $0xf,%r8d
mov    %r9,%rax
imul   %ebx,%eax
lea    0x7fff(%rax),%edx
mov    %r11,%rax
mul    %edx
mov    %rdx,%rbx
shr    $0xf,%ebx
imul   %r13d,%r9d
lea    0x7fff(%r9),%edx
mov    %r11,%rax
mul    %edx
mov    %rdx,%r13
shr    $0xf,%r13d
mov    %r8,%rdx
jmpq   10f33 <png_create_colormap_entry+0x473>
xor    %esi,%esi
mov    %r9b,(%rax,%rsi,1)
jmpq   10e34 <png_create_colormap_entry+0x374>
test   %r9d,%r9d
jne    11297 <png_create_colormap_entry+0x7d7>
xor    %ebx,%ebx
jmpq   111fe <png_create_colormap_entry+0x73e>
xor    %eax,%eax
mov    %r9w,(%rax,%rsi,1)
jmpq   10f26 <png_create_colormap_entry+0x466>
imul   %ebx,%r9d
lea    0x7fff(%r9),%ecx
mov    %r11,%rax
mul    %ecx
mov    %rdx,%rbx
shr    $0xf,%ebx
jmpq   111fe <png_create_colormap_entry+0x73e>
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   (%rax)

00000000000112c0 <make_gray_file_colormap>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %r13,-0x8(%rbp)
mov    %r14,-0x10(%rbp)
mov    %r15,-0x18(%rbp)
mov    %rdi,%r14
mov    $0xff,%r15d
xor    %r13d,%r13d
jmp    11304 <make_gray_file_colormap+0x44>
movl   $0x3,(%rsp)
mov    %r13,%rdx
mov    %r13,%rcx
mov    %r13,%r8
mov    %r14,%rdi
mov    %r13,%rsi
mov    %r15,%r9
callq  10ac0 <png_create_colormap_entry>
add    $0x1,%r13d
cmp    $0xff,%r13d
jbe    112e2 <make_gray_file_colormap+0x22>
mov    %r13,%rax
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
leaveq 
retq   
xchg   %ax,%ax

0000000000011320 <make_gray_colormap>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %r13,-0x8(%rbp)
mov    %r14,-0x10(%rbp)
mov    %r15,-0x18(%rbp)
mov    %rdi,%r14
mov    $0xff,%r15d
xor    %r13d,%r13d
jmp    11364 <make_gray_colormap+0x44>
movl   $0x1,(%rsp)
mov    %r13,%rdx
mov    %r13,%rcx
mov    %r13,%r8
mov    %r14,%rdi
mov    %r13,%rsi
mov    %r15,%r9
callq  10ac0 <png_create_colormap_entry>
add    $0x1,%r13d
cmp    $0xff,%r13d
jbe    11342 <make_gray_colormap+0x22>
mov    %r13,%rax
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
leaveq 
retq   
xchg   %ax,%ax

0000000000011380 <make_ga_colormap>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rbx,%r15
mov    %rdi,%rbx
mov    $0xff,%r14d
xor    %esi,%esi
mov    $0x46ed2901,%r13d
jmp    113e2 <make_ga_colormap+0x62>
sub    $0x10,%rsp
movl   $0x1,(%rsp)
mov    %rsi,%rax
shl    $0x8,%eax
lea    0x74(%rax),%ecx
mov    %r13,%rax
mul    %ecx
shr    $0x6,%edx
mov    %rdx,%rcx
mov    %rdx,%r8
mov    %rbx,%rdi
mov    %r14,%r9
callq  10ac0 <png_create_colormap_entry>
add    $0x10,%rsp
mov    %r12,%rsi
lea    0x1(%rsi),%r12d
cmp    $0xe6,%esi
jbe    113ae <make_ga_colormap+0x2e>
mov    %r14,%rdx
sub    $0x10,%rsp
movl   $0x1,(%rsp)
mov    %rdx,%rcx
mov    %rdx,%r8
mov    %rbx,%rdi
xor    %r13d,%r13d
mov    %r13,%r9
callq  10ac0 <png_create_colormap_entry>
add    $0x10,%rsp
mov    $0x1,%eax
mov    $0x33,%r14d
mov    %r15,-0x8(%rbp)
jmp    1146b <make_ga_colormap+0xeb>
sub    $0x10,%rsp
movl   $0x1,(%rsp)
mov    %r15,%rcx
mov    %r15,%r8
mov    %rbx,%rdi
mov    %r12,%rsi
mov    %r15,%rdx
mov    %r14,%r9
callq  10ac0 <png_create_colormap_entry>
add    $0x10,%rsp
add    $0x1,%r12d
add    $0x33,%r15d
add    $0x1,%r13d
cmp    $0x5,%r13d
jbe    11425 <make_ga_colormap+0xa5>
mov    -0x30(%rbp),%rax
add    $0x1,%eax
add    $0x33,%r14d
xor    %r13d,%r13d
cmp    $0x4,%eax
jbe    11489 <make_ga_colormap+0x109>
mov    %r12,%rax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
mov    %rax,-0x30(%rbp)
mov    %r13,%r15
jmp    11457 <make_ga_colormap+0xd7>
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   (%rax)

00000000000114a0 <make_rgb_colormap>:
push   %rbp
mov    %rsp,%rbp
sub    $0x40,%rsp
mov    %rbx,-0x10(%rbp)
mov    %r12,-0x18(%rbp)
mov    %r13,-0x20(%rbp)
mov    %r14,-0x28(%rbp)
mov    %r15,-0x30(%rbp)
mov    %rdi,%rbx
xor    %r13d,%r13d
mov    $0xff,%r9d
mov    %r13,%rax
mov    %rax,%r12
mov    %r12,%r14
jmp    11530 <make_rgb_colormap+0x90>
sub    $0x10,%rsp
movl   $0x1,(%rsp)
mov    %rbx,%rdi
mov    %r12,%rsi
mov    %r14,%rdx
mov    %r15,%r8
callq  10ac0 <png_create_colormap_entry>
add    $0x10,%rsp
add    $0x1,%r12d
add    $0x33,%r15d
add    $0x1,%r13d
mov    $0xff,%r9d
mov    -0x8(%rbp),%rcx
cmp    $0x5,%r13d
jbe    114d3 <make_rgb_colormap+0x33>
add    $0x33,%ecx
mov    -0x40(%rbp),%rax
add    $0x1,%eax
xor    %r13d,%r13d
mov    %rcx,-0x8(%rbp)
cmp    $0x5,%eax
jbe    1154e <make_rgb_colormap+0xae>
mov    -0x38(%rbp),%rax
add    $0x1,%eax
add    $0x33,%r14d
cmp    $0x5,%eax
jbe    11557 <make_rgb_colormap+0xb7>
mov    %r12,%rax
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
mov    -0x10(%rbp),%rbx
leaveq 
retq   
mov    %rax,-0x40(%rbp)
mov    %r13,%r15
jmp    11509 <make_rgb_colormap+0x69>
mov    %rax,-0x38(%rbp)
mov    %r13,%rax
mov    %rax,%rcx
jmp    1151c <make_rgb_colormap+0x7c>
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

0000000000011570 <png_image_read_colormap>:
push   %rbp
mov    %rsp,%rbp
sub    $0x130,%rsp
mov    (%rdi),%rdx
mov    (%rdx),%rax
mov    (%rax),%rsi
mov    $0x1,%r8d
mov    %r8,-0x100(%rbp)
mov    $0x2,%r10d
mov    0x14(%rdx),%eax
mov    %rax,%rcx
and    $0x4,%ecx
test   %ecx,%ecx
jne    115a7 <png_image_read_colormap+0x37>
mov    %r8,%r10
xor    %r9d,%r9d
mov    %r9,-0xb8(%rbp)
mov    $0xff,%r11d
mov    %r11,-0x88(%rbp)
mov    $0xffff,%r8d
mov    %r8,-0x80(%rbp)
movzbl 0x267(%rsi),%ecx
and    $0x4,%ecx
test   %ecx,%ecx
jg     115f8 <png_image_read_colormap+0x88>
movzwl 0x260(%rsi),%ecx
test   %cx,%cx
jne    115f8 <png_image_read_colormap+0x88>
cmp    $0x2,%r10d
je     1161c <png_image_read_colormap+0xac>
mov    %r14,-0x30(%rbp)
mov    %r15,-0x38(%rbp)
mov    %r11,%r8
mov    %r8,%r9
jmp    1162a <png_image_read_colormap+0xba>
mov    %rax,%rcx
and    $0x1,%ecx
test   %ecx,%ecx
jne    115e2 <png_image_read_colormap+0x72>
cmp    $0x2,%r10d
jne    116fc <png_image_read_colormap+0x18c>
mov    %r14,-0x30(%rbp)
mov    %r15,-0x38(%rbp)
mov    %r9,%r8
mov    %r8,%r11
jmp    1162a <png_image_read_colormap+0xba>
mov    %r14,-0x30(%rbp)
mov    %r15,-0x38(%rbp)
mov    %r8,%r9
mov    %r9,%r11
mov    %r9,-0xe0(%rbp)
mov    %r11,-0xd8(%rbp)
mov    %r8,-0xd0(%rbp)
movzwl 0x4e2(%rsi),%ecx
and    $0x1,%ecx
test   %ecx,%ecx
jne    1167c <png_image_read_colormap+0x10c>
mov    $0xb18f,%r14d
movzbl 0x268(%rsi),%ecx
cmp    $0x10,%cl
je     1172f <png_image_read_colormap+0x1bf>
movzwl 0x4e2(%rsi),%ecx
or     $0x1,%cx
mov    %cx,0x4e2(%rsi)
mov    %r14d,0x498(%rsi)
movzbl 0x267(%rsi),%r14d
cmp    $0x6,%r14b
ja     11748 <png_image_read_colormap+0x1d8>
lea    0x1acf7(%rip),%rcx        # 2c38c <png_sRGB_base>
lea    0x1b0f0(%rip),%r15        # 2c78c <png_sRGB_delta>
mov    %r13,-0x28(%rbp)
lea    0x1aae5(%rip),%r13        # 2c18c <png_sRGB_table>
mov    %r13,-0x90(%rbp)
mov    %r11d,%r13d
mov    %r13,-0x98(%rbp)
mov    $0x3,%r13d
mov    %r13,-0xb0(%rbp)
lea    0x1c24c(%rip),%r13        # 2d918 <png_pass_yinc.24+0x21>
movslq 0x0(%r13,%r14,4),%r13
mov    %r12,-0x20(%rbp)
lea    0x1c23c(%rip),%r12        # 2d918 <png_pass_yinc.24+0x21>
add    %r13,%r12
jmpq   *%r12
movzwl 0x260(%rsi),%r15d
test   %r15w,%r15w
jne    118c4 <png_image_read_colormap+0x354>
xor    %r14d,%r14d
jmpq   118cb <png_image_read_colormap+0x35b>
mov    0x20(%rdi),%r8
test   %r8,%r8
je     11945 <png_image_read_colormap+0x3d5>
movzbl 0x1(%r8),%r11d
mov    %rax,%rcx
and    $0x2,%ecx
test   %ecx,%ecx
jne    11954 <png_image_read_colormap+0x3e4>
mov    %r14,-0x30(%rbp)
mov    %r15,-0x38(%rbp)
mov    %r11,%r8
mov    %r8,%r9
jmpq   1162a <png_image_read_colormap+0xba>
mov    0x18(%rdx),%ecx
and    $0x4,%ecx
test   %ecx,%ecx
jne    11663 <png_image_read_colormap+0xf3>
mov    $0x186a0,%r14d
jmpq   11663 <png_image_read_colormap+0xf3>
mov    %rsi,%rdi
lea    0x1c8fb(%rip),%rsi        # 2e04d <chunks_to_process.34+0x248>
callq  5470 <png_error@plt>
movzbl 0x268(%rsi),%r12d
cmp    $0x8,%r12b
jbe    1196a <png_image_read_colormap+0x3fa>
mov    0x1c(%rdx),%r8d
cmp    $0xff,%r8d
jbe    119d5 <png_image_read_colormap+0x465>
mov    %rdi,%r8
mov    %rdi,-0x58(%rbp)
mov    %r15,-0x100(%rbp)
mov    %rcx,-0x78(%rbp)
mov    %rdx,-0x50(%rbp)
mov    %rbx,-0x8(%rbp)
mov    %r8,%rdi
mov    %rax,%rbx
mov    %r11,%r12
mov    %r9,%r13
mov    %rsi,%r14
mov    %r10,%r15
callq  11320 <make_gray_colormap>
movzwl 0x260(%r14),%ecx
test   %cx,%cx
jne    119e4 <png_image_read_colormap+0x474>
mov    %rax,%r13
mov    -0x8(%rbp),%r11
mov    -0x50(%rbp),%r15
mov    -0x58(%rbp),%rbx
mov    $0x100,%r10d
xor    %r12d,%r12d
mov    $0x1,%edx
mov    %rdx,%rsi
mov    %r12,%rax
mov    %rax,%rcx
jmpq   11a8b <png_image_read_colormap+0x51b>
mov    %rax,%r12
and    $0x1,%r12d
test   %r12d,%r12d
jne    11a4b <png_image_read_colormap+0x4db>
and    $0x2,%eax
test   %eax,%eax
je     11b02 <png_image_read_colormap+0x592>
cmp    %r9d,%r11d
jne    11810 <png_image_read_colormap+0x2a0>
cmp    %r9d,%r8d
je     11b02 <png_image_read_colormap+0x592>
mov    0x1c(%rdx),%eax
cmp    $0xff,%eax
jbe    11b4f <png_image_read_colormap+0x5df>
mov    $0x46ed2901,%r14d
mov    %r10,-0x100(%rbp)
mov    %rsi,-0x50(%rbp)
mov    %r15,-0x88(%rbp)
mov    %rcx,-0x80(%rbp)
mov    %rbx,-0x10(%rbp)
mov    %rdx,%rbx
mov    %rdi,%r15
xor    %esi,%esi
mov    $0xff,%r12d
jmpq   11b8a <png_image_read_colormap+0x61a>
mov    %rax,%r12
and    $0x2,%r12d
test   %r12d,%r12d
je     11c2a <png_image_read_colormap+0x6ba>
cmp    $0x6,%r14b
je     11d0d <png_image_read_colormap+0x79d>
movzwl 0x260(%rsi),%r12d
test   %r12w,%r12w
jne    11d0d <png_image_read_colormap+0x79d>
mov    0x1c(%rdx),%eax
cmp    $0xd7,%eax
jbe    11dac <png_image_read_colormap+0x83c>
mov    %rbx,%r13
mov    %rsi,%r14
mov    %rdx,%r15
mov    %rdi,%rbx
callq  114a0 <make_rgb_colormap>
mov    %rbx,-0x58(%rbp)
mov    %r13,%r11
mov    %rax,%r13
mov    $0x100,%r10d
mov    $0x3,%ecx
xor    %r12d,%r12d
mov    $0x1,%edx
mov    %rdx,%rsi
mov    %r12,%rax
jmpq   11a8b <png_image_read_colormap+0x51b>
mov    0x2e8(%rsi),%r14
mov    0x250(%rsi),%rcx
mov    %rcx,-0xf8(%rbp)
test   %r14,%r14
je     118f1 <png_image_read_colormap+0x381>
and    $0x1,%eax
test   %eax,%eax
jne    118f1 <png_image_read_colormap+0x381>
pushq  -0x100(%rbp)
popq   -0xb8(%rbp)
test   %r14,%r14
jne    118f9 <png_image_read_colormap+0x389>
xor    %r15d,%r15d
movzwl 0x258(%rsi),%r13d
cmp    $0x100,%r13w
jbe    1190f <png_image_read_colormap+0x39f>
mov    $0x100,%r13d
cmp    0x1c(%rdx),%r13d
ja     11dbb <png_image_read_colormap+0x84b>
mov    %rsi,-0xb0(%rbp)
mov    %rdx,-0x70(%rbp)
mov    %rbx,-0x88(%rbp)
mov    %rdi,%rbx
mov    -0xb8(%rbp),%rax
mov    $0x3,%esi
xor    %r12d,%r12d
mov    %r12,%rdx
jmpq   11e35 <png_image_read_colormap+0x8c5>
mov    %rsi,%rdi
lea    0x1c534(%rip),%rsi        # 2de83 <chunks_to_process.34+0x7e>
callq  5470 <png_error@plt>
movzbl (%r8),%r9d
movzbl 0x2(%r8),%r8d
mov    %r14,-0x30(%rbp)
mov    %r15,-0x38(%rbp)
jmpq   1162a <png_image_read_colormap+0xba>
mov    %r12,%rcx
mov    %rbx,%r14
mov    %rdi,%rbx
mov    $0x1,%r13d
shl    %cl,%r13d
cmp    0x1c(%rdx),%r13d
ja     11e7a <png_image_read_colormap+0x90a>
mov    %rax,%rdi
mov    %rdx,%r15
lea    -0x1(%r13),%ecx
xor    %edx,%edx
mov    $0xff,%r12d
mov    %r12,%rax
div    %ecx
movzwl 0x260(%rsi),%ecx
test   %cx,%cx
jne    11e89 <png_image_read_colormap+0x919>
mov    %rsi,-0x98(%rbp)
mov    %r15,-0x88(%rbp)
mov    %r14,-0x8(%rbp)
mov    %rax,%r14
mov    $0x100,%ecx
xor    %r12d,%r12d
mov    %r12,%rax
mov    %rax,%r15
jmpq   11f27 <png_image_read_colormap+0x9b7>
mov    %rsi,%rdi
lea    0x1c506(%rip),%rsi        # 2dee5 <chunks_to_process.34+0xe0>
callq  5470 <png_error@plt>
and    $0x1,%ebx
test   %ebx,%ebx
je     11f74 <png_image_read_colormap+0xa04>
mov    -0xd0(%rbp),%r8
pushq  -0xb8(%rbp)
popq   -0x88(%rbp)
mov    %r15d,(%rsp)
mov    %r12,%rcx
mov    %r13,%rdx
mov    %rax,%r13
mov    $0xfe,%r15d
mov    -0x58(%rbp),%rbx
mov    %rbx,%rdi
mov    %r15,%rsi
mov    -0x88(%rbp),%r9
callq  10ac0 <png_create_colormap_entry>
mov    %r15,%r10
mov    -0x8(%rbp),%r11
mov    -0x50(%rbp),%r15
xor    %r12d,%r12d
mov    $0x1,%edx
mov    $0x2,%ecx
mov    %rdx,%rax
mov    %rax,%rsi
jmp    11a8b <png_image_read_colormap+0x51b>
mov    0x1c(%rdx),%eax
cmp    $0xff,%eax
jbe    11f9c <png_image_read_colormap+0xa2c>
mov    %rbx,%r13
mov    %rsi,%r14
mov    %rdx,%r15
mov    %rdi,%rbx
callq  11380 <make_ga_colormap>
mov    %rbx,-0x58(%rbp)
mov    %r13,%r11
mov    %rax,%r13
mov    $0xe7,%r10d
xor    %r12d,%r12d
mov    $0x1,%edx
mov    %rdx,%rcx
mov    %rcx,%rsi
mov    %r12,%rax
test   %eax,%eax
jle    11ae1 <png_image_read_colormap+0x571>
movzwl 0x260(%r14),%eax
test   %ax,%ax
je     11ae1 <png_image_read_colormap+0x571>
movzbl 0x267(%r14),%eax
and    $0x4,%eax
test   %eax,%eax
jne    11ae1 <png_image_read_colormap+0x571>
mov    %r14,%rdi
mov    %r11,-0x8(%rbp)
mov    %r10,-0x100(%rbp)
mov    %rcx,%rbx
mov    %rsi,%r12
callq  58b0 <png_set_tRNS_to_alpha@plt>
mov    %rbx,%rcx
mov    %r12,%rsi
mov    -0x100(%rbp),%r10
mov    -0x8(%rbp),%r11
mov    -0x58(%rbp),%rbx
xor    %r12d,%r12d
mov    $0x1,%edx
cmp    $0x1,%esi
je     11fab <png_image_read_colormap+0xa3b>
cmp    $0x3,%esi
je     11fde <png_image_read_colormap+0xa6e>
mov    %r14,%rdi
lea    0x1c567(%rip),%rsi        # 2e064 <chunks_to_process.34+0x25f>
callq  5470 <png_error@plt>
mov    0x1c(%rdx),%eax
cmp    $0xff,%eax
jbe    12031 <png_image_read_colormap+0xac1>
mov    %rdi,%rax
mov    %rdi,-0x58(%rbp)
mov    %rdx,-0x100(%rbp)
mov    %rbx,-0x10(%rbp)
mov    %rax,%rdi
mov    %rcx,%rbx
mov    %r10,%r12
mov    %r11,%r13
mov    %rsi,%r14
callq  11320 <make_gray_colormap>
cmp    $0x2,%r12d
je     12040 <png_image_read_colormap+0xad0>
mov    %r13,%r12
mov    %rax,%r13
mov    -0x58(%rbp),%rbx
jmpq   1209d <png_image_read_colormap+0xb2d>
mov    %rsi,%rdi
lea    0x1c3fc(%rip),%rsi        # 2df55 <chunks_to_process.34+0x150>
callq  5470 <png_error@plt>
movl   $0x1,(%rsp)
mov    %rsi,%rax
shl    $0x8,%eax
lea    0x74(%rax),%ecx
mov    %r14,%rax
mul    %ecx
shr    $0x6,%edx
mov    %rdx,%rcx
mov    %rdx,%r8
mov    %r15,%rdi
mov    %r12,%r9
callq  10ac0 <png_create_colormap_entry>
mov    %r13,%rsi
lea    0x1(%rsi),%r13d
cmp    $0xe6,%esi
jbe    11b5e <png_image_read_colormap+0x5ee>
mov    -0x100(%rbp),%rax
cmp    $0x2,%eax
jne    11ba8 <png_image_read_colormap+0x638>
mov    $0xffff,%r12d
mov    %eax,(%rsp)
mov    %r15,%rdi
mov    %rsi,%r9
mov    -0xe0(%rbp),%r14
mov    %r14,%rdx
mov    -0xd8(%rbp),%r10
mov    %r10,%rcx
mov    %rbx,-0x48(%rbp)
mov    -0xd0(%rbp),%rbx
mov    %rbx,%r8
mov    %r15,-0x58(%rbp)
mov    %rsi,-0x40(%rbp)
mov    %r9,%rsi
mov    %r12,%r9
mov    %r10,%r12
mov    %rbx,%r15
mov    %rax,%rbx
callq  10ac0 <png_create_colormap_entry>
cmp    $0x1,%ebx
je     12107 <png_image_read_colormap+0xb97>
mov    %r15,%rax
mov    %r12,%r9
mov    %r14,%r10
mov    -0x80(%rbp),%rdi
mov    -0x88(%rbp),%rsi
mov    -0x58(%rbp),%rbx
mov    -0x90(%rbp),%r14
xor    %r12d,%r12d
mov    $0xff,%ecx
mov    $0x1,%r11d
jmpq   12258 <png_image_read_colormap+0xce8>
mov    $0xffffffffffffffff,%r12
mov    %r12,%r9
mov    %rsi,%r11
mov    $0x1,%r8d
mov    %r15,-0xe0(%rbp)
mov    %rcx,-0xd0(%rbp)
mov    %rbx,-0x18(%rbp)
mov    %r9,%rcx
mov    %rdi,%rbx
mov    %r11,%rdi
mov    %rax,%r13
mov    %rsi,%r14
mov    %r8,%rsi
mov    %rdx,%r15
mov    %r12,%rdx
mov    %r10,%r12
callq  55b0 <png_set_rgb_to_gray_fixed@plt>
movzbl 0x267(%r14),%eax
cmp    $0x6,%al
je     11c88 <png_image_read_colormap+0x718>
movzwl 0x260(%r14),%eax
test   %ax,%ax
je     11c95 <png_image_read_colormap+0x725>
and    $0x1,%r13d
test   %r13d,%r13d
jne    12285 <png_image_read_colormap+0xd15>
mov    0x1c(%r15),%eax
cmp    $0xff,%eax
jbe    122c3 <png_image_read_colormap+0xd53>
movzbl 0x267(%r14),%eax
cmp    $0x6,%al
jne    122d2 <png_image_read_colormap+0xd62>
movslq 0x498(%r14),%rdi
callq  106b0 <png_gamma_not_sRGB>
test   %eax,%eax
jne    122e8 <png_image_read_colormap+0xd78>
mov    %rbx,%rdi
callq  11320 <make_gray_colormap>
mov    %rax,%r13
movzbl 0x267(%r14),%eax
cmp    $0x6,%al
jne    12304 <png_image_read_colormap+0xd94>
mov    -0x100(%rbp),%r10
cmp    $0x3,%r10d
je     1233d <png_image_read_colormap+0xdcd>
cmp    $0x2,%r12d
je     12353 <png_image_read_colormap+0xde3>
mov    %r10,%r12
mov    -0xd8(%rbp),%rax
jmpq   1243e <png_image_read_colormap+0xece>
mov    $0x80,%r14d
mov    %rax,%r12
and    $0x1,%r12d
test   %r12d,%r12d
jne    1249e <png_image_read_colormap+0xf2e>
mov    0x1c(%rdx),%r12d
cmp    $0xf3,%r12d
jbe    12508 <png_image_read_colormap+0xf98>
mov    %rdi,%r12
mov    %rsi,-0xa8(%rbp)
mov    %rax,-0xc8(%rbp)
mov    %r15,-0x100(%rbp)
mov    %rcx,-0xf8(%rbp)
mov    %rdx,-0x68(%rbp)
mov    %rbx,-0x40(%rbp)
mov    %rdi,%rbx
mov    %r12,%rdi
mov    %r8,%r12
mov    %r10,%r13
mov    %r11,%r14
mov    %r9,%r15
callq  114a0 <make_rgb_colormap>
mov    %rax,%rsi
mov    %rsi,-0xc0(%rbp)
mov    %r13d,(%rsp)
mov    %rbx,%rdi
mov    %r15,%rdx
mov    %r14,%rcx
mov    %r12,%r8
xor    %r9d,%r9d
callq  10ac0 <png_create_colormap_entry>
cmp    $0x2,%r13d
je     12517 <png_image_read_colormap+0xfa7>
mov    %r14,%rax
mov    %rax,%rcx
mov    %r15,%rdx
jmpq   125b8 <png_image_read_colormap+0x1048>
mov    %rsi,%rdi
lea    0x1c255(%rip),%rsi        # 2e00b <chunks_to_process.34+0x206>
callq  5470 <png_error@plt>
mov    %rsi,%rdi
lea    0x1c265(%rip),%rsi        # 2e02a <chunks_to_process.34+0x225>
callq  5470 <png_error@plt>
movzbl (%r14,%rdi,1),%r9d
movl   $0x3,(%rsp)
mov    %rbx,%rdi
mov    %rdx,%rsi
mov    %r10,-0xf0(%rbp)
mov    %rbx,-0x100(%rbp)
mov    %r12,%rcx
mov    %rdx,%r12
mov    %r11,%rdx
mov    %rax,%rbx
callq  10ac0 <png_create_colormap_entry>
mov    %rbx,%rax
mov    -0x100(%rbp),%rbx
mov    -0xf0(%rbp),%r10
lea    0x1(%r12),%edx
mov    -0xf8(%rbp),%rcx
mov    -0xd0(%rbp),%r8
mov    -0xd8(%rbp),%r11
mov    -0xe0(%rbp),%r9
mov    $0x3,%esi
xor    %r12d,%r12d
cmp    %r13d,%edx
jb     126b3 <png_image_read_colormap+0x1143>
mov    -0xb0(%rbp),%r14
movzbl 0x268(%r14),%eax
cmp    $0x7,%al
jbe    12795 <png_image_read_colormap+0x1225>
mov    %rbx,-0x58(%rbp)
mov    -0x88(%rbp),%r11
mov    -0x70(%rbp),%r15
mov    $0x100,%r10d
mov    $0x1,%edx
mov    %r12,%rax
mov    %rax,%rcx
jmpq   11a8b <png_image_read_colormap+0x51b>
mov    %rsi,%rdi
lea    0x1c03e(%rip),%rsi        # 2dec2 <chunks_to_process.34+0xbd>
callq  5470 <png_error@plt>
movzwl 0x2f8(%rsi),%ecx
and    $0x1,%edi
test   %edi,%edi
je     127c8 <png_image_read_colormap+0x1258>
mov    %rsi,-0x98(%rbp)
mov    %r15,-0x88(%rbp)
mov    %r14,-0x8(%rbp)
mov    %rax,%r14
xor    %r12d,%r12d
mov    %r12,%rax
mov    %rax,%r15
jmp    11f27 <png_image_read_colormap+0x9b7>
movl   $0x3,(%rsp)
mov    %r15,%r11
mov    %r15,%r8
mov    %rbx,%rdi
mov    %rax,%rsi
mov    %r15,%rdx
mov    $0xff,%r9d
mov    %r10,-0xa8(%rbp)
mov    %rbx,-0xa0(%rbp)
mov    %rcx,-0x100(%rbp)
mov    %r11,%rcx
mov    %rax,%rbx
callq  10ac0 <png_create_colormap_entry>
lea    0x1(%rbx),%eax
add    %r14d,%r15d
mov    -0x100(%rbp),%rcx
mov    -0xa0(%rbp),%rbx
mov    -0xd0(%rbp),%r8
mov    -0xa8(%rbp),%r10
mov    -0xd8(%rbp),%r11
mov    -0xe0(%rbp),%r9
cmp    %r13d,%eax
jb     127f2 <png_image_read_colormap+0x1282>
mov    -0x98(%rbp),%r14
movzbl 0x268(%r14),%eax
cmp    $0x7,%al
jbe    12835 <png_image_read_colormap+0x12c5>
mov    %rbx,-0x58(%rbp)
mov    -0x8(%rbp),%r11
mov    -0x88(%rbp),%r15
mov    $0x100,%r10d
mov    $0x3,%esi
xor    %r12d,%r12d
mov    $0x1,%edx
mov    %r12,%rax
mov    %rax,%rcx
jmpq   11a8b <png_image_read_colormap+0x51b>
cmp    %r13d,%r12d
je     1286a <png_image_read_colormap+0x12fa>
mov    -0xd0(%rbp),%r8
cmp    $0x2,%r15d
jne    11a02 <png_image_read_colormap+0x492>
pushq  -0x80(%rbp)
popq   -0x88(%rbp)
jmpq   11a02 <png_image_read_colormap+0x492>
mov    %rsi,%rdi
lea    0x1bf63(%rip),%rsi        # 2df09 <chunks_to_process.34+0x104>
callq  5470 <png_error@plt>
mov    $0x35b60,%edx
mov    %r14,%rdi
mov    %r11,-0x100(%rbp)
mov    %r12,%rsi
mov    %rcx,%r12
mov    %r10,%rbx
callq  5640 <png_set_alpha_mode_fixed@plt>
mov    %r12,%rcx
mov    %rbx,%r10
mov    -0x100(%rbp),%r11
mov    -0x58(%rbp),%rbx
mov    $0x1,%edx
movzbl 0x268(%r14),%eax
cmp    $0x8,%al
jbe    12015 <png_image_read_colormap+0xaa5>
mov    %r14,%rdi
mov    %r11,-0x100(%rbp)
mov    %rcx,%rbx
mov    %r10,%r12
callq  58d0 <png_set_scale_16@plt>
mov    %rbx,%rcx
mov    %r12,%r10
mov    -0x100(%rbp),%r11
mov    -0x58(%rbp),%rbx
mov    $0x1,%edx
cmp    $0x100,%r13d
jbe    12893 <png_image_read_colormap+0x1323>
mov    %r14,%rdi
lea    0x1c059(%rip),%rsi        # 2e085 <chunks_to_process.34+0x280>
callq  5470 <png_error@plt>
mov    %rsi,%rdi
lea    0x1bef4(%rip),%rsi        # 2df2f <chunks_to_process.34+0x12a>
callq  5470 <png_error@plt>
mov    %r13,%rsi
shl    $0x8,%esi
sub    %r13d,%esi
mov    %rsi,%rcx
shr    $0xf,%ecx
mov    %ecx,%edx
movzbl (%rdx,%r15,1),%ecx
and    $0x7fff,%esi
imul   %esi,%ecx
shr    $0xc,%ecx
movzwl (%rbx,%rdx,2),%edx
movl   $0x2,(%rsp)
lea    (%rcx,%rdx,1),%r12d
and    $0xff00,%r12d
shr    $0x8,%r12d
mov    %r13,%rdx
mov    %rax,%r13
mov    %rdx,%rcx
mov    %rdx,%r8
mov    -0x58(%rbp),%rbx
mov    %rbx,%rdi
mov    %r12,%rsi
mov    $0xffff,%r9d
callq  10ac0 <png_create_colormap_entry>
movb   $0x0,-0x11e(%rbp)
mov    %r12w,-0x118(%rbp)
mov    %r12w,-0x11a(%rbp)
mov    %r12w,-0x11c(%rbp)
mov    %r12w,-0x116(%rbp)
lea    -0x11e(%rbp),%rsi
xor    %r12d,%r12d
mov    %r12,%r8
mov    %r14,%rdi
mov    $0x1,%r15d
mov    %r15,%rdx
mov    %r12,%rcx
callq  5320 <png_set_background_fixed@plt>
mov    %r15,%rsi
mov    -0x10(%rbp),%r11
mov    -0x100(%rbp),%r15
mov    $0x100,%r10d
mov    %rsi,%rdx
mov    %r12,%rax
mov    %rax,%rcx
jmpq   11a8b <png_image_read_colormap+0x51b>
mov    %r14d,%eax
mov    -0x90(%rbp),%r14
movzwl (%r14,%rax,2),%r10d
mov    -0x98(%rbp),%rax
movzwl (%r14,%rax,2),%r9d
mov    %r15d,%eax
movzwl (%r14,%rax,2),%eax
mov    -0x80(%rbp),%rdi
mov    -0x88(%rbp),%rsi
mov    -0x58(%rbp),%rbx
xor    %r12d,%r12d
mov    $0xff,%ecx
mov    $0x1,%r11d
jmpq   12258 <png_image_read_colormap+0xce8>
mov    %eax,%ecx
movzwl (%r14,%rcx,2),%r10d
imul   %r15d,%r10d
add    %r10d,%edx
mov    %rdx,%rcx
shr    $0xf,%ecx
mov    %ecx,%r11d
movzbl (%r11,%rsi,1),%ecx
and    $0x7fff,%edx
imul   %edx,%ecx
shr    $0xc,%ecx
movzwl (%rdi,%r11,2),%edx
add    %ecx,%edx
and    $0xff00,%edx
shr    $0x8,%edx
add    %r10d,%r9d
mov    %r9,%rcx
shr    $0xf,%ecx
mov    %ecx,%r11d
movzbl (%r11,%rsi,1),%ecx
and    $0x7fff,%r9d
imul   %r9d,%ecx
shr    $0xc,%ecx
movzwl (%rdi,%r11,2),%r9d
add    %r9d,%ecx
and    $0xff00,%ecx
shr    $0x8,%ecx
add    %r10d,%r8d
mov    %r8,%r9
shr    $0xf,%r9d
mov    %r9d,%r9d
movzbl (%r9,%rsi,1),%esi
and    $0x7fff,%r8d
imul   %r8d,%esi
shr    $0xc,%esi
movzwl (%rdi,%r9,2),%edi
movl   $0x1,(%rsp)
lea    (%rsi,%rdi,1),%r8d
and    $0xff00,%r8d
shr    $0x8,%r8d
mov    %rbx,%rdi
mov    %rax,%rbx
mov    %r13,%rsi
mov    $0xff,%r9d
callq  10ac0 <png_create_colormap_entry>
lea    0x33(%rbx),%eax
add    $0x1,%r13d
add    $0x1,%r12d
mov    -0x90(%rbp),%r8
mov    -0x70(%rbp),%r9
mov    -0x60(%rbp),%rdx
mov    -0x80(%rbp),%rdi
mov    -0x88(%rbp),%rsi
mov    -0x58(%rbp),%rbx
mov    $0xff,%ecx
cmp    $0x5,%r12d
jbe    1214c <png_image_read_colormap+0xbdc>
mov    -0x100(%rbp),%rax
lea    0x1(%rax),%r11d
mov    -0xd8(%rbp),%rax
mov    -0x68(%rbp),%r10
mov    -0x78(%rbp),%r9
xor    %r12d,%r12d
cmp    $0x4,%r11d
jbe    128b9 <png_image_read_colormap+0x1349>
mov    -0x40(%rbp),%r10
mov    -0x10(%rbp),%r11
mov    -0x48(%rbp),%r15
mov    -0x50(%rbp),%r14
mov    $0x1,%edx
mov    %rdx,%rcx
mov    %rcx,%rsi
mov    %r12,%rax
jmpq   11a8b <png_image_read_colormap+0x51b>
mov    0x1c(%r15),%eax
cmp    $0xff,%eax
jbe    12908 <png_image_read_colormap+0x1398>
mov    %rbx,%rdi
callq  11380 <make_ga_colormap>
mov    %rbx,-0x58(%rbp)
mov    %rax,%r13
mov    -0x18(%rbp),%r11
mov    $0xe7,%r10d
xor    %r12d,%r12d
mov    $0x1,%edx
mov    %rdx,%rax
mov    %rax,%rcx
mov    %rcx,%rsi
jmpq   11a8b <png_image_read_colormap+0x51b>
mov    %r14,%rdi
lea    0x1bccf(%rip),%rsi        # 2df9c <chunks_to_process.34+0x197>
callq  5470 <png_error@plt>
movzwl 0x260(%r14),%eax
test   %ax,%ax
jne    11cb4 <png_image_read_colormap+0x744>
jmpq   11cc8 <png_image_read_colormap+0x758>
mov    %rbx,%rdi
callq  112c0 <make_gray_file_colormap>
mov    %rax,%r13
pushq  -0xb0(%rbp)
popq   -0x100(%rbp)
jmpq   11cd3 <png_image_read_colormap+0x763>
movzwl 0x260(%r14),%eax
test   %ax,%ax
jne    11ce3 <png_image_read_colormap+0x773>
mov    %rbx,-0x58(%rbp)
mov    -0x100(%rbp),%rsi
mov    -0x18(%rbp),%r11
mov    $0x100,%r10d
xor    %r12d,%r12d
mov    $0x1,%edx
mov    %r12,%rax
mov    %rax,%rcx
jmpq   11a8b <png_image_read_colormap+0x51b>
cmp    $0x1,%r12d
je     123ce <png_image_read_colormap+0xe5e>
mov    -0xd8(%rbp),%rdi
jmpq   123e0 <png_image_read_colormap+0xe70>
mov    -0xd8(%rbp),%rdx
mov    %rdx,%rax
shl    $0x8,%eax
sub    %edx,%eax
mov    %rax,%rcx
shr    $0xf,%ecx
mov    %ecx,%esi
mov    -0xe0(%rbp),%rcx
movzbl (%rsi,%rcx,1),%ecx
and    $0x7fff,%eax
imul   %eax,%ecx
shr    $0xc,%ecx
mov    -0xd0(%rbp),%rax
movzwl (%rax,%rsi,2),%eax
movl   $0x2,(%rsp)
lea    (%rcx,%rax,1),%r12d
and    $0xff00,%r12d
shr    $0x8,%r12d
mov    %rdx,%rcx
mov    %rdx,%r8
mov    %rbx,%rdi
mov    %r12,%rsi
xor    %r9d,%r9d
mov    %rbx,-0x100(%rbp)
mov    %r12,%rbx
mov    %r10,%r12
callq  10ac0 <png_create_colormap_entry>
mov    %rbx,%rax
mov    -0x100(%rbp),%rbx
jmp    1243e <png_image_read_colormap+0xece>
mov    -0x98(%rbp),%rcx
mov    -0x90(%rbp),%rax
movzwl (%rax,%rcx,2),%edi
movslq 0x498(%r14),%rsi
mov    %r15,-0x100(%rbp)
mov    %r10,%r15
callq  8b70 <png_gamma_16bit_correct>
mov    %r12d,(%rsp)
movzwl %ax,%ecx
mov    %rcx,%rax
shl    $0x8,%eax
sub    %ecx,%eax
lea    0x807f(%rax),%r12d
shr    $0x10,%r12d
mov    %r15,%rax
mov    %r12,%r15
mov    %rax,%r12
mov    -0xd8(%rbp),%rdx
mov    %rdx,%rcx
mov    %rdx,%r8
mov    %rbx,%rdi
mov    %r15,%rsi
xor    %r9d,%r9d
callq  10ac0 <png_create_colormap_entry>
mov    %r15,%rax
mov    -0x100(%rbp),%r15
movb   $0x0,-0x114(%rbp)
mov    %ax,-0x10e(%rbp)
mov    %ax,-0x110(%rbp)
mov    %ax,-0x112(%rbp)
mov    %ax,-0x10c(%rbp)
lea    -0x114(%rbp),%rsi
xor    %ecx,%ecx
mov    %rcx,%r8
mov    %r14,%rdi
mov    $0x1,%edx
callq  5320 <png_set_background_fixed@plt>
mov    %rbx,-0x58(%rbp)
mov    %r12,%rsi
mov    -0x18(%rbp),%r11
mov    $0x100,%r10d
xor    %r12d,%r12d
mov    $0x1,%edx
mov    %rdx,%rax
mov    %r12,%rcx
jmpq   11a8b <png_image_read_colormap+0x51b>
mov    0x1c(%rdx),%eax
cmp    $0xf3,%eax
jbe    12917 <png_image_read_colormap+0x13a7>
mov    %rdx,%r12
mov    %rbx,%r13
mov    %rsi,%r15
mov    %rdi,%rbx
callq  114a0 <make_rgb_colormap>
mov    %rax,-0x48(%rbp)
movl   $0x1,(%rsp)
mov    $0xff,%edx
mov    %rdx,%rcx
mov    %rdx,%r8
mov    %rbx,%rdi
mov    %rax,%rsi
xor    %r10d,%r10d
mov    %r10,%r9
mov    %r12,-0x60(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r10,%r12
mov    %rax,%r13
callq  10ac0 <png_create_colormap_entry>
add    $0x1,%r13d
mov    %r15,-0x100(%rbp)
mov    %r14,%r9
mov    %r12,%r15
jmpq   12975 <png_image_read_colormap+0x1405>
mov    %rsi,%rdi
lea    0x1bad4(%rip),%rsi        # 2dfe6 <chunks_to_process.34+0x1e1>
callq  5470 <png_error@plt>
mov    %r12,%rax
shl    $0x8,%eax
sub    %r12d,%eax
mov    %rax,%rcx
shr    $0xf,%ecx
mov    %ecx,%edx
mov    -0x100(%rbp),%r9
movzbl (%rdx,%r9,1),%ecx
and    $0x7fff,%eax
imul   %eax,%ecx
shr    $0xc,%ecx
mov    -0xf8(%rbp),%rdi
movzwl (%rdi,%rdx,2),%eax
add    %eax,%ecx
and    $0xff00,%ecx
shr    $0x8,%ecx
mov    %r14,%rdx
shl    $0x8,%edx
sub    %r14d,%edx
mov    %rdx,%rax
shr    $0xf,%eax
mov    %eax,%esi
movzbl (%rsi,%r9,1),%eax
and    $0x7fff,%edx
imul   %edx,%eax
shr    $0xc,%eax
movzwl (%rdi,%rsi,2),%edx
add    %edx,%eax
and    $0xff00,%eax
shr    $0x8,%eax
mov    %r15,%rsi
shl    $0x8,%esi
sub    %r15d,%esi
mov    %rsi,%rdx
shr    $0xf,%edx
mov    %edx,%r8d
movzbl (%r8,%r9,1),%edx
and    $0x7fff,%esi
imul   %esi,%edx
shr    $0xc,%edx
movzwl (%rdi,%r8,2),%esi
add    %esi,%edx
and    $0xff00,%edx
shr    $0x8,%edx
mov    -0xc8(%rbp),%rdi
mov    %rdi,%rsi
and    $0x4,%esi
shr    $0x2,%esi
lea    0x1(%rsi),%r8d
and    $0x3,%edi
lea    0x1(%rdi),%esi
imul   %esi,%r8d
lea    0x82(%rax,%rax,4),%eax
shr    $0x8,%eax
lea    0x82(%rdx,%rdx,4),%edx
shr    $0x8,%edx
lea    (%rdx,%rdx,2),%edx
lea    (%rax,%rdx,2),%eax
lea    (%rax,%rax,2),%edx
lea    0x82(%rcx,%rcx,4),%eax
shr    $0x8,%eax
lea    (%rax,%rdx,2),%eax
movzbl %al,%eax
imul   %r8d,%eax
mov    %eax,%eax
mov    0x18(%rbx),%rcx
lea    (%rax,%rcx,1),%rsi
mov    -0xc0(%rbp),%r9
mov    %r8,%rax
imul   %r9d,%eax
mov    %eax,%eax
lea    (%rcx,%rax,1),%rdi
mov    %r8d,%edx
mov    %r13,-0x100(%rbp)
mov    %r9,%r13
callq  53d0 <memcmp@plt>
test   %eax,%eax
jne    129ae <png_image_read_colormap+0x143e>
movb   $0x0,-0x10a(%rbp)
mov    %r15w,-0x108(%rbp)
mov    %r14w,-0x106(%rbp)
mov    %r14w,-0x102(%rbp)
mov    %r12w,-0x104(%rbp)
lea    -0x10a(%rbp),%rsi
xor    %r12d,%r12d
mov    %r12,%r8
mov    -0xa8(%rbp),%r14
mov    %r14,%rdi
mov    $0x1,%r15d
mov    %r15,%rdx
mov    %r12,%rcx
callq  5320 <png_set_background_fixed@plt>
mov    %rbx,-0x58(%rbp)
mov    %r15,%rsi
mov    -0x40(%rbp),%r11
mov    -0x68(%rbp),%r15
mov    $0x100,%r10d
mov    $0x3,%ecx
mov    %rsi,%rdx
mov    %r12,%rax
jmpq   11a8b <png_image_read_colormap+0x51b>
test   %eax,%eax
mov    %edx,%edi
jle    129d5 <png_image_read_colormap+0x1465>
cmp    %r15d,%edx
jae    129d5 <png_image_read_colormap+0x1465>
movzbl (%r14,%rdi,1),%r12d
cmp    $0xfe,%r12b
ja     129d5 <png_image_read_colormap+0x1465>
test   %r12b,%r12b
je     129fe <png_image_read_colormap+0x148e>
mov    %r15,-0xf0(%rbp)
lea    (%rdi,%rdi,2),%r15
movzbl (%rcx,%r15,1),%esi
mov    %rbx,%r8
mov    %r13,-0xc0(%rbp)
mov    $0x3,%eax
mov    %rdx,-0x100(%rbp)
mov    %r10,%rdx
mov    %r10,-0xe8(%rbp)
mov    %rcx,%r13
mov    %r12,%rcx
mov    %rdi,%r12
mov    %r8,%rdi
mov    %r9,%r8
mov    %rdx,%r9
mov    %rax,%rdx
callq  109f0 <png_colormap_compose>
mov    %rax,-0xc8(%rbp)
movzbl 0x1(%r13,%r15,1),%esi
movzbl (%r14,%r12,1),%ecx
mov    %rbx,%rdi
mov    $0x3,%edx
mov    -0xd8(%rbp),%r8
mov    -0xe8(%rbp),%r9
callq  109f0 <png_colormap_compose>
movzbl 0x2(%r13,%r15,1),%esi
mov    %rax,%r13
movzbl (%r14,%r12,1),%ecx
mov    %rbx,%rdi
mov    $0x3,%edx
mov    -0xd0(%rbp),%r8
mov    -0xe8(%rbp),%r15
mov    %r15,%r9
callq  109f0 <png_colormap_compose>
cmp    $0x2,%r15d
je     12a46 <png_image_read_colormap+0x14d6>
movzbl (%r14,%r12,1),%r9d
jmpq   12a55 <png_image_read_colormap+0x14e5>
mov    %rsi,%r15
mov    %r14,%rdi
callq  5580 <png_set_packing@plt>
mov    %rbx,-0x58(%rbp)
mov    %r15,%rsi
mov    -0x88(%rbp),%r11
mov    -0x70(%rbp),%r15
mov    $0x100,%r10d
mov    $0x1,%edx
mov    %r12,%rax
mov    %rax,%rcx
jmpq   11a8b <png_image_read_colormap+0x51b>
cmp    $0x2,%r10d
je     12a95 <png_image_read_colormap+0x1525>
mov    %rsi,-0x98(%rbp)
mov    %r15,-0x88(%rbp)
mov    %r14,-0x8(%rbp)
mov    %rax,%r14
xor    %r15d,%r15d
mov    %r15,%rax
jmpq   11f27 <png_image_read_colormap+0x9b7>
cmp    %ecx,%eax
jne    11ebb <png_image_read_colormap+0x94b>
mov    %r10d,(%rsp)
mov    %rbx,%rdi
mov    %rax,%rsi
mov    %r12,%rdx
mov    %r10,-0xa8(%rbp)
mov    %rbx,-0xa0(%rbp)
mov    %rcx,-0x100(%rbp)
mov    %r11,%rcx
mov    %rax,%rbx
mov    %r9,%r11
mov    %rdx,%r9
mov    %r11,%rdx
callq  10ac0 <png_create_colormap_entry>
jmpq   11ef7 <png_image_read_colormap+0x987>
mov    %r14,%rdi
callq  5580 <png_set_packing@plt>
mov    %rbx,-0x58(%rbp)
mov    -0x8(%rbp),%r11
mov    -0x88(%rbp),%r15
mov    $0x100,%r10d
mov    $0x3,%esi
xor    %r12d,%r12d
mov    $0x1,%edx
mov    %r12,%rax
mov    %rax,%rcx
jmpq   11a8b <png_image_read_colormap+0x51b>
mov    -0xd0(%rbp),%r8
cmp    %r13d,%r8d
jne    11f84 <png_image_read_colormap+0xa14>
cmp    $0x2,%r15d
je     12abb <png_image_read_colormap+0x154b>
mov    %r13,%r12
mov    %rax,%r13
mov    -0x58(%rbp),%rbx
jmpq   12b22 <png_image_read_colormap+0x15b2>
cmp    0x1c(%r15),%r13d
ja     12022 <png_image_read_colormap+0xab2>
mov    %r13d,0x1c(%r15)
cmp    $0x4,%ecx
jbe    12b89 <png_image_read_colormap+0x1619>
mov    %r14,%rdi
lea    0x1b7f9(%rip),%rsi        # 2e0ad <chunks_to_process.34+0x2a8>
callq  5470 <png_error@plt>
mov    %r11,%rdx
shl    $0x4,%edx
add    %r11d,%edx
lea    (%rdx,%rdx,2),%r15d
mov    %rcx,%r8
sub    %r15d,%r8d
mov    %r8,%rdx
imul   %r10d,%edx
mov    %r9,-0x78(%rbp)
mov    %rdx,-0x60(%rbp)
imul   %r8d,%r9d
mov    %r9,-0x70(%rbp)
imul   %eax,%r8d
mov    %r8,-0x90(%rbp)
mov    %r11,-0x100(%rbp)
mov    %r10,-0x68(%rbp)
mov    %rax,-0xd8(%rbp)
mov    %r12,%rax
jmpq   12231 <png_image_read_colormap+0xcc1>
mov    %r14,%rdi
lea    0x1b667(%rip),%rsi        # 2df79 <chunks_to_process.34+0x174>
callq  5470 <png_error@plt>
mov    %rsi,%rdi
lea    0x1b6a0(%rip),%rsi        # 2dfc1 <chunks_to_process.34+0x1bc>
callq  5470 <png_error@plt>
movl   $0x1,(%rsp)
mov    %rbx,%rdi
mov    %r13,%rsi
mov    %r15,%rdx
mov    %r14,%rcx
mov    %r12,%r8
callq  10ac0 <png_create_colormap_entry>
add    %r12d,%r12d
or     $0x7f,%r12d
add    $0x1,%r13d
mov    $0x80,%r9d
cmp    $0xff,%r12d
jbe    12926 <png_image_read_colormap+0x13b6>
add    %r14d,%r14d
or     $0x7f,%r14d
xor    %r12d,%r12d
cmp    $0xff,%r14d
jbe    12952 <png_image_read_colormap+0x13e2>
add    %r15d,%r15d
or     $0x7f,%r15d
cmp    $0xff,%r15d
jbe    12bb5 <png_image_read_colormap+0x1645>
mov    %rbx,-0x58(%rbp)
mov    -0x48(%rbp),%r10
mov    $0x4,%ecx
mov    -0x18(%rbp),%r11
mov    -0x60(%rbp),%r15
mov    -0x100(%rbp),%r14
mov    $0x1,%edx
mov    %rdx,%rax
mov    %rax,%rsi
jmpq   11a8b <png_image_read_colormap+0x51b>
add    $0x1,%r13d
mov    %r14,%rcx
mov    %r15,%r8
mov    $0x80,%r10d
mov    -0x100(%rbp),%r15
xor    %r12d,%r12d
mov    $0x1,%edx
mov    %r12,%rax
jmpq   12c9c <png_image_read_colormap+0x172c>
lea    (%rdi,%rdi,2),%rsi
movzbl (%rcx,%rsi,1),%r11d
movzbl 0x1(%rcx,%rsi,1),%r12d
movzbl 0x2(%rcx,%rsi,1),%r8d
cmp    %r15d,%edx
jb     11dca <png_image_read_colormap+0x85a>
mov    $0xff,%r9d
jmpq   11dcf <png_image_read_colormap+0x85f>
mov    %r10d,(%rsp)
mov    %rbx,%rdi
mov    %rdx,%rsi
xor    %r12d,%r12d
mov    %r10,-0xe8(%rbp)
mov    %rbx,-0x100(%rbp)
mov    %r11,%rcx
mov    %rax,%rbx
mov    %r9,%r11
mov    %r12,%r9
mov    %rdx,%r12
mov    %r11,%rdx
callq  10ac0 <png_create_colormap_entry>
mov    %rbx,%rax
mov    -0x100(%rbp),%rbx
mov    -0xe8(%rbp),%r10
jmpq   11e0c <png_image_read_colormap+0x89c>
movzbl (%r14,%r12,1),%edx
mov    %rdx,%rcx
shl    $0x8,%ecx
lea    (%rdx,%rcx,1),%r9d
mov    %r13,%rcx
mov    %rax,%r8
mov    %r15d,(%rsp)
mov    %rbx,%rdi
mov    -0x100(%rbp),%r12
mov    %r12,%rsi
mov    -0xc8(%rbp),%rdx
callq  10ac0 <png_create_colormap_entry>
mov    %r15,%r10
mov    -0xc0(%rbp),%r13
mov    -0xf0(%rbp),%r15
mov    -0xb8(%rbp),%rax
jmpq   11e0c <png_image_read_colormap+0x89c>
mov    %rsi,-0x98(%rbp)
mov    %r15,-0x88(%rbp)
mov    %r14,-0x8(%rbp)
mov    %rax,%r14
xor    %r15d,%r15d
mov    $0xffff,%r12d
mov    %r15,%rax
jmpq   11f27 <png_image_read_colormap+0x9b7>
mov    %r13,%rcx
shl    $0x8,%ecx
sub    %r13d,%ecx
mov    %rcx,%rdx
shr    $0xf,%edx
mov    %edx,%esi
mov    -0x100(%rbp),%rdx
movzbl (%rsi,%rdx,1),%edx
and    $0x7fff,%ecx
imul   %ecx,%edx
shr    $0xc,%edx
mov    -0x78(%rbp),%rcx
movzwl (%rcx,%rsi,2),%ecx
movl   $0x2,(%rsp)
lea    (%rdx,%rcx,1),%r12d
and    $0xff00,%r12d
shr    $0x8,%r12d
mov    %r13,%rdx
mov    %rax,%r13
mov    %rdx,%rcx
mov    %rdx,%r8
mov    -0x58(%rbp),%rbx
mov    %rbx,%rdi
mov    %r12,%rsi
mov    $0xffff,%r9d
callq  10ac0 <png_create_colormap_entry>
movb   $0x0,-0x128(%rbp)
mov    %r12w,-0x122(%rbp)
mov    %r12w,-0x124(%rbp)
mov    %r12w,-0x126(%rbp)
mov    %r12w,-0x120(%rbp)
lea    -0x128(%rbp),%rsi
xor    %r12d,%r12d
mov    %r12,%r8
mov    %r14,%rdi
mov    $0x1,%r15d
mov    %r15,%rdx
mov    %r12,%rcx
callq  5320 <png_set_background_fixed@plt>
mov    %r15,%rsi
mov    -0x8(%rbp),%r11
mov    -0x50(%rbp),%r15
mov    $0x100,%r10d
mov    %rsi,%rdx
mov    %r12,%rax
mov    %rax,%rcx
jmpq   11a8b <png_image_read_colormap+0x51b>
lea    0x1ada4(%rip),%rsi        # 2d934 <png_pass_yinc.24+0x3d>
movslq (%rsi,%rcx,4),%rax
add    %rsi,%rax
jmpq   *%rax
cmp    $0xd8,%r10d
je     12d1b <png_image_read_colormap+0x17ab>
mov    %r14,%rdi
lea    0x1b524(%rip),%rsi        # 2e0d4 <chunks_to_process.34+0x2cf>
callq  5470 <png_error@plt>
mov    %r12,%r14
jmpq   12965 <png_image_read_colormap+0x13f5>
mov    %rbx,%rdi
mov    %r15,%r9
mov    %r13,-0xa0(%rbp)
mov    %rcx,%r12
mov    %r10,%rcx
mov    %rsi,%r13
mov    %rax,%rsi
callq  109f0 <png_colormap_compose>
mov    %rbx,%rdi
mov    %r13,%rsi
mov    $0x1,%edx
mov    $0x80,%ecx
mov    %r12,%r8
mov    %rax,%r12
mov    %r15,%r9
callq  109f0 <png_colormap_compose>
mov    %rax,%r13
mov    %rbx,%rdi
mov    %r14,%rsi
mov    $0x1,%edx
mov    $0x80,%ecx
mov    -0xd0(%rbp),%r8
mov    %r15,%r9
callq  109f0 <png_colormap_compose>
mov    %r13,%rcx
mov    %r12,%rdx
mov    %rax,%r8
mov    %r15d,(%rsp)
mov    %rbx,%rdi
mov    -0xa0(%rbp),%r13
mov    %r13,%rsi
xor    %r12d,%r12d
mov    %r12,%r9
callq  10ac0 <png_create_colormap_entry>
add    %r14d,%r14d
or     $0x7f,%r14d
add    $0x1,%r13d
mov    -0x100(%rbp),%rsi
mov    -0xb8(%rbp),%rax
mov    $0x80,%r10d
mov    -0xd8(%rbp),%rcx
mov    -0xe0(%rbp),%r8
mov    $0x1,%edx
cmp    $0xff,%r14d
jbe    12bbd <png_image_read_colormap+0x164d>
add    %esi,%esi
or     $0x7f,%esi
mov    %rsi,-0x100(%rbp)
cmp    $0xff,%esi
jbe    12d36 <png_image_read_colormap+0x17c6>
add    %eax,%eax
or     $0x7f,%eax
mov    %rax,-0xb8(%rbp)
cmp    $0xff,%eax
jbe    12d3e <png_image_read_colormap+0x17ce>
mov    %rbx,-0x58(%rbp)
mov    -0xc0(%rbp),%r10
mov    $0x4,%ecx
mov    -0x40(%rbp),%r11
mov    -0x68(%rbp),%r15
mov    -0xa8(%rbp),%r14
mov    %rdx,%rax
mov    %rax,%rsi
jmpq   11a8b <png_image_read_colormap+0x51b>
cmp    $0x100,%r10d
jne    12ba6 <png_image_read_colormap+0x1636>
jmp    12d1b <png_image_read_colormap+0x17ab>
cmp    $0xe7,%r10d
jne    12ba6 <png_image_read_colormap+0x1636>
jmp    12d1b <png_image_read_colormap+0x17ab>
cmp    %r10d,%r13d
jbe    12ba6 <png_image_read_colormap+0x1636>
cmp    $0xfe,%r10d
jne    12ba6 <png_image_read_colormap+0x1636>
jmp    12d1b <png_image_read_colormap+0x17ab>
cmp    $0x100,%r10d
jne    12ba6 <png_image_read_colormap+0x1636>
mov    %ecx,0x48(%rbx)
mov    %rdx,%rax
mov    %r11,%rbx
mov    -0x38(%rbp),%r15
mov    -0x30(%rbp),%r14
mov    -0x20(%rbp),%r12
mov    -0x28(%rbp),%r13
leaveq 
retq   
mov    %r12,%r14
jmpq   12c72 <png_image_read_colormap+0x1702>
mov    %r12,%rsi
jmpq   12c84 <png_image_read_colormap+0x1714>
nopw   %cs:0x0(%rax,%rax,1)

0000000000012d50 <png_image_read_and_map>:
push   %rbp
mov    %rsp,%rbp
sub    $0xa0,%rsp
mov    %rdi,-0x90(%rbp)
mov    $0x1,%eax
mov    $0x7,%r11d
mov    (%rdi),%r8
mov    (%r8),%rcx
mov    (%rcx),%rcx
mov    %rcx,-0x88(%rbp)
movzbl 0x264(%rcx),%edx
test   %dl,%dl
jne    12de8 <png_image_read_and_map+0x98>
mov    %rax,%r10
mov    %r10,-0x30(%rbp)
mov    0x10(%r8),%esi
mov    %rsi,-0x98(%rbp)
mov    0xc(%r8),%r9d
mov    %r9,-0x80(%rbp)
mov    0x30(%rdi),%rdx
mov    %rdx,-0x78(%rbp)
mov    0x38(%rdi),%r8
mov    %r15,-0x28(%rbp)
mov    %r8,-0x58(%rbp)
movslq 0x48(%rdi),%r15
mov    %r14,-0x20(%rbp)
mov    %r15,-0x68(%rbp)
xor    %r14d,%r14d
mov    %r13,-0x18(%rbp)
mov    %r12,-0x10(%rbp)
mov    %rbx,-0x8(%rbp)
mov    %r8,%rbx
mov    %rdx,%r12
mov    %rdi,%rdx
mov    %rcx,%rdi
mov    %r14,%r13
mov    %r10,%r14
mov    %r13,%r10
jmp    12e56 <png_image_read_and_map+0x106>
cmp    $0x1,%dl
jne    12e75 <png_image_read_and_map+0x125>
mov    %r11,%r10
jmp    12d8b <png_image_read_and_map+0x3b>
lea    (%rdi,%rdi,2),%ecx
lea    (%rdi,%rcx,2),%ecx
shl    $0x5,%ecx
lea    (%rcx,%rdi,8),%ecx
sub    %edi,%ecx
add    $0x80,%ecx
shr    $0x8,%ecx
mov    %cl,(%rax)
add    %r11,%rax
add    $0x2,%rdx
cmp    %rax,%r10
ja     12e84 <png_image_read_and_map+0x134>
mov    -0x50(%rbp),%r14
mov    -0x70(%rbp),%rax
add    %eax,%r13d
mov    -0x90(%rbp),%rdx
mov    -0x98(%rbp),%rsi
mov    -0x88(%rbp),%rdi
xor    %r10d,%r10d
cmp    %esi,%r13d
jb     12ea3 <png_image_read_and_map+0x153>
mov    -0x38(%rbp),%r13
mov    -0x30(%rbp),%r14
mov    $0x1,%eax
mov    $0x7,%r11d
cmp    %r13d,%r14d
jg     12ef0 <png_image_read_and_map+0x1a0>
mov    -0x8(%rbp),%rbx
mov    -0x10(%rbp),%r12
mov    -0x18(%rbp),%r13
mov    -0x20(%rbp),%r14
mov    -0x28(%rbp),%r15
leaveq 
retq   
mov    %rcx,%rdi
lea    0x1b27b(%rip),%rsi        # 2e0fa <chunks_to_process.34+0x2f5>
callq  5470 <png_error@plt>
movzbl (%rdx),%edi
movzbl 0x1(%rdx),%esi
cmp    $0xe5,%sil
ja     12df6 <png_image_read_and_map+0xa6>
cmp    $0x19,%sil
ja     12f16 <png_image_read_and_map+0x1c6>
mov    %r14,%rcx
jmpq   12e0d <png_image_read_and_map+0xbd>
mov    0x28(%rdx),%rsi
mov    %rsi,-0x40(%rbp)
xor    %edx,%edx
mov    %r8,-0x48(%rbp)
mov    %rax,-0x70(%rbp)
callq  5600 <png_read_row@plt>
mov    %r14d,%r11d
mov    %r13d,%eax
imul   %rbx,%rax
cmp    $0x2,%r15d
lea    (%rax,%r12,1),%rcx
mov    -0x48(%rbp),%r8
mov    %r8d,%eax
lea    (%rcx,%rax,1),%rax
mov    -0x80(%rbp),%r9
lea    (%rcx,%r9,1),%r10
jle    12f39 <png_image_read_and_map+0x1e9>
cmp    $0x3,%r15d
jne    12f56 <png_image_read_and_map+0x206>
mov    -0x40(%rbp),%rcx
jmpq   12fc5 <png_image_read_and_map+0x275>
lea    0x1(%r13),%r8d
movzbl 0x264(%rdi),%ecx
cmp    $0x1,%cl
je     12fcf <png_image_read_and_map+0x27f>
mov    %r8,-0x38(%rbp)
mov    %rax,%r14
mov    %r10,%r8
mov    %r8,%r13
jmpq   12e3e <png_image_read_and_map+0xee>
lea    0x82(%rdi,%rdi,4),%ecx
shr    $0x8,%ecx
lea    0x82(%rsi,%rsi,4),%esi
shr    $0x8,%esi
lea    (%rsi,%rsi,2),%esi
lea    0xe2(%rcx,%rsi,2),%ecx
jmpq   12e0d <png_image_read_and_map+0xbd>
cmp    $0x1,%r15d
jne    12fe3 <png_image_read_and_map+0x293>
mov    %r14,-0x50(%rbp)
mov    -0x40(%rbp),%rdx
mov    $0xe7,%r14d
jmpq   12e16 <png_image_read_and_map+0xc6>
cmp    $0x4,%r15d
jne    12e1f <png_image_read_and_map+0xcf>
mov    %r14,-0x50(%rbp)
mov    %r13,-0x60(%rbp)
mov    $0xd9,%edi
mov    -0x40(%rbp),%rdx
mov    $0xe2,%r8d
mov    $0xeb,%r14d
mov    $0xd8,%ebx
jmpq   13042 <png_image_read_and_map+0x2f2>
movzbl 0x1(%rcx),%edx
lea    0x82(%rdx,%rdx,4),%edx
shr    $0x8,%edx
movzbl (%rcx),%esi
lea    0x82(%rsi,%rsi,4),%esi
shr    $0x8,%esi
lea    (%rsi,%rsi,2),%esi
lea    (%rdx,%rsi,2),%edx
lea    (%rdx,%rdx,2),%esi
movzbl 0x2(%rcx),%edx
lea    0x82(%rdx,%rdx,4),%edx
shr    $0x8,%edx
lea    (%rdx,%rsi,2),%edx
mov    %dl,(%rax)
add    $0x3,%rcx
add    %r11,%rax
cmp    %rax,%r10
ja     12f87 <png_image_read_and_map+0x237>
jmpq   12e1f <png_image_read_and_map+0xcf>
cmp    $0x1,%r13d
jg     13064 <png_image_read_and_map+0x314>
mov    $0x3,%ecx
jmpq   1306f <png_image_read_and_map+0x31f>
cmp    $0x2,%r15d
jne    12e1f <png_image_read_and_map+0xcf>
mov    %r14,-0x60(%rbp)
mov    -0x40(%rbp),%rcx
mov    $0xff,%edi
mov    $0xfe,%esi
jmpq   13099 <png_image_read_and_map+0x349>
movzbl 0x1(%rdx),%ecx
lea    0x82(%rcx,%rcx,4),%ecx
shr    $0x8,%ecx
movzbl (%rdx),%esi
lea    0x82(%rsi,%rsi,4),%esi
shr    $0x8,%esi
lea    (%rsi,%rsi,2),%esi
lea    (%rcx,%rsi,2),%ecx
lea    (%rcx,%rcx,2),%esi
movzbl 0x2(%rdx),%ecx
lea    0x82(%rcx,%rcx,4),%ecx
shr    $0x8,%ecx
lea    (%rcx,%rsi,2),%ecx
mov    %cl,(%rax)
add    %r11,%rax
add    $0x4,%rdx
cmp    %r10,%rax
jb     130ab <png_image_read_and_map+0x35b>
mov    -0x68(%rbp),%r15
mov    -0x58(%rbp),%rbx
mov    -0x60(%rbp),%r13
mov    -0x50(%rbp),%r14
mov    -0x78(%rbp),%r12
mov    -0x48(%rbp),%r8
jmpq   12e1f <png_image_read_and_map+0xcf>
mov    %r11,%rcx
sub    %r13d,%ecx
sar    %ecx
mov    %rax,%r10
test   %r10,%r10
jne    130c5 <png_image_read_and_map+0x375>
mov    $0x3,%r11d
jmp    130cb <png_image_read_and_map+0x37b>
movzbl (%rcx),%edx
movzbl 0x1(%rcx),%r8d
test   %r8b,%r8b
jne    1311d <png_image_read_and_map+0x3cd>
mov    %rsi,%rdx
mov    %dl,(%rax)
add    %r11,%rax
add    $0x2,%rcx
cmp    %rax,%r10
ja     1307c <png_image_read_and_map+0x32c>
mov    -0x60(%rbp),%r14
mov    -0x48(%rbp),%r8
jmpq   12e1f <png_image_read_and_map+0xcf>
movzbl 0x3(%rdx),%ecx
cmp    $0xc3,%cl
ja     13004 <png_image_read_and_map+0x2b4>
cmp    $0x3f,%cl
ja     1312e <png_image_read_and_map+0x3de>
mov    %rbx,%rcx
jmpq   13039 <png_image_read_and_map+0x2e9>
sub    %r13d,%r11d
sar    %r11d
mov    %r8,%r10
shl    %cl,%eax
add    $0xffffffff,%eax
mov    %r10,%rcx
sar    %ecx
mov    $0x3,%r12d
neg    %ecx
add    %r12d,%ecx
mov    %r13,%r8
and    $0x1,%r8d
shl    %cl,%r8d
and    $0x7,%r8d
sub    %r8d,%eax
add    %r9d,%eax
mov    %r11,%rcx
mov    %r13,%r11
mov    %r10,%r13
shr    %cl,%eax
test   %eax,%eax
jne    13148 <png_image_read_and_map+0x3f8>
mov    -0x78(%rbp),%r12
mov    $0x1,%eax
xor    %r10d,%r10d
mov    $0x7,%r11d
jmpq   12e56 <png_image_read_and_map+0x106>
cmp    $0xfe,%dl
jne    13090 <png_image_read_and_map+0x340>
mov    %rdi,%rdx
jmpq   13090 <png_image_read_and_map+0x340>
movzbl (%rdx),%esi
mov    %rsi,%r13
and    $0x80,%r13d
test   %r13d,%r13d
jg     13158 <png_image_read_and_map+0x408>
mov    %rdi,%rcx
mov    %r8,%r12
jmp    1315e <png_image_read_and_map+0x40e>
cmp    $0x2,%r11d
jg     1318b <png_image_read_and_map+0x43b>
mov    %r13,%r10
mov    $0x8,%eax
jmp    1319b <png_image_read_and_map+0x44b>
mov    %r8,%rcx
mov    %r14,%r12
and    $0x40,%esi
test   %esi,%esi
jle    13168 <png_image_read_and_map+0x418>
mov    %r12,%rcx
test   %r13d,%r13d
jle    13170 <png_image_read_and_map+0x420>
add    $0x3,%ecx
test   %esi,%esi
jle    13177 <png_image_read_and_map+0x427>
add    $0x3,%ecx
test   %r13d,%r13d
jle    1317f <png_image_read_and_map+0x42f>
add    $0x1,%ecx
test   %esi,%esi
jle    13186 <png_image_read_and_map+0x436>
add    $0x1,%ecx
jmpq   13039 <png_image_read_and_map+0x2e9>
lea    -0x1(%r11),%ecx
sar    %ecx
mov    %r13,%r10
mov    $0x8,%eax
shr    %cl,%eax
mov    %r11,%rcx
sar    %ecx
sub    %ecx,%r12d
mov    %r11,%r13
not    %r13d
and    $0x1,%r13d
mov    %r12,%rcx
shl    %cl,%r13d
and    $0x7,%r13d
mov    $0x7,%ecx
sub    %r11d,%ecx
sar    %ecx
mov    $0x1,%r14d
shl    %cl,%r14d
mov    %r10,-0x38(%rbp)
mov    -0x78(%rbp),%r12
xor    %r10d,%r10d
jmpq   12e3e <png_image_read_and_map+0xee>
nopw   0x0(%rax,%rax,1)

00000000000131e0 <png_image_read_colormapped>:
push   %rbp
mov    %rsp,%rbp
sub    $0x40,%rsp
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rbx,-0x8(%rbp)
mov    (%rdi),%r14
mov    (%r14),%rax
mov    0x8(%rax),%r13
mov    (%rax),%rbx
mov    %rdi,%r12
mov    %rbx,%rdi
callq  10880 <png_image_skip_unused_chunks>
xor    %r15d,%r15d
movslq 0x48(%r12),%rax
test   %eax,%eax
jne    1322b <png_image_read_colormapped+0x4b>
mov    %rbx,%rdi
callq  53f0 <png_set_interlace_handling@plt>
mov    %rax,%r15
mov    %rbx,%rdi
mov    %r13,%rsi
callq  5080 <png_read_update_info@plt>
mov    0x48(%r12),%eax
cmp    $0x4,%eax
ja     1328e <png_image_read_colormapped+0xae>
lea    0x1a701(%rip),%rcx        # 2d948 <png_pass_yinc.24+0x51>
movslq (%rcx,%rax,4),%rax
add    %rcx,%rax
jmpq   *%rax
movzbl 0x25(%r13),%eax
cmp    $0x6,%al
jne    1328e <png_image_read_colormapped+0xae>
movzbl 0x24(%r13),%eax
cmp    $0x8,%al
jne    1328e <png_image_read_colormapped+0xae>
movslq 0x2a4(%rbx),%rax
cmp    $0x35b60,%eax
jne    1328e <png_image_read_colormapped+0xae>
mov    0x1c(%r14),%eax
cmp    $0xf4,%eax
je     13300 <png_image_read_colormapped+0x120>
jmp    1328e <png_image_read_colormapped+0xae>
movzbl 0x25(%r13),%eax
cmp    $0x3,%al
je     132f7 <png_image_read_colormapped+0x117>
test   %al,%al
je     132f7 <png_image_read_colormapped+0x117>
mov    %rbx,%rdi
lea    0x1ae79(%rip),%rsi        # 2e111 <chunks_to_process.34+0x30c>
callq  5470 <png_error@plt>
movzbl 0x25(%r13),%eax
cmp    $0x4,%al
jne    1328e <png_image_read_colormapped+0xae>
movzbl 0x24(%r13),%eax
cmp    $0x8,%al
jne    1328e <png_image_read_colormapped+0xae>
movslq 0x2a4(%rbx),%rax
cmp    $0x35b60,%eax
jne    1328e <png_image_read_colormapped+0xae>
mov    0x1c(%r14),%eax
cmp    $0x100,%eax
je     13300 <png_image_read_colormapped+0x120>
jmp    1328e <png_image_read_colormapped+0xae>
movzbl 0x25(%r13),%eax
cmp    $0x2,%al
jne    1328e <png_image_read_colormapped+0xae>
movzbl 0x24(%r13),%eax
cmp    $0x8,%al
jne    1328e <png_image_read_colormapped+0xae>
movslq 0x2a4(%rbx),%rax
cmp    $0x35b60,%eax
jne    1328e <png_image_read_colormapped+0xae>
mov    0x1c(%r14),%eax
cmp    $0xd8,%eax
je     13300 <png_image_read_colormapped+0x120>
jmp    1328e <png_image_read_colormapped+0xae>
movzbl 0x24(%r13),%eax
cmp    $0x8,%al
jne    1328e <png_image_read_colormapped+0xae>
mov    0x8(%r12),%rax
movslq 0x10(%r12),%rsi
test   %esi,%esi
jns    13324 <png_image_read_colormapped+0x144>
mov    %rsi,%rcx
neg    %rcx
mov    0x10(%r14),%edx
add    $0xffffffff,%edx
mov    %edx,%edx
imul   %rdx,%rcx
add    %rcx,%rax
mov    %rax,0x30(%r12)
mov    %rsi,0x38(%r12)
test   %r15d,%r15d
je     13344 <png_image_read_colormapped+0x164>
mov    %r12,%rax
mov    %rsi,%r12
mov    %r14,%rcx
xor    %r13d,%r13d
jmpq   133ca <png_image_read_colormapped+0x1ea>
mov    %r13,%rsi
mov    %rbx,%rdi
callq  50c0 <png_get_rowbytes@plt>
mov    %rax,%rsi
mov    %rbx,%rdi
callq  5800 <png_malloc@plt>
mov    %r14,%rdi
mov    %rax,%r13
mov    %r13,0x28(%r12)
lea    -0x61c(%rip),%rsi        # 12d50 <png_image_read_and_map>
mov    %r12,%rdx
callq  b250 <png_safe_execute>
movq   $0x0,0x28(%r12)
mov    %r13,%rsi
mov    %rax,%r13
mov    %rbx,%rdi
callq  5790 <png_free@plt>
mov    %r13,%rax
mov    -0x8(%rbp),%rbx
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
leaveq 
retq   
mov    %rbx,%rdi
mov    %r14,%rsi
mov    %r13,%rdx
callq  5600 <png_read_row@plt>
add    %r12,%r14
add    $0xffffffff,%r15d
test   %r15d,%r15d
jne    133a4 <png_image_read_colormapped+0x1c4>
mov    -0x38(%rbp),%rax
mov    -0x30(%rbp),%rcx
mov    -0x40(%rbp),%r15
lea    -0x1(%r15),%edx
test   %edx,%edx
jns    133ed <png_image_read_colormapped+0x20d>
mov    $0x1,%eax
mov    -0x8(%rbp),%rbx
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
leaveq 
retq   
mov    0x10(%rcx),%r15d
mov    0x30(%rax),%r14
mov    %rdx,-0x40(%rbp)
mov    %rcx,-0x30(%rbp)
mov    %rax,-0x38(%rbp)
jmp    133b9 <png_image_read_colormapped+0x1d9>
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

0000000000013410 <png_image_read_composite>:
push   %rbp
mov    %rsp,%rbp
sub    $0xe0,%rsp
mov    %rdi,-0xc8(%rbp)
mov    $0x1,%r10d
mov    %r10,-0x78(%rbp)
mov    $0x7,%r11d
mov    (%rdi),%rcx
mov    (%rcx),%rax
mov    (%rax),%r9
mov    %r9,-0x88(%rbp)
movzbl 0x264(%r9),%eax
test   %al,%al
jne    134e2 <png_image_read_composite+0xd2>
mov    %r10,%r11
mov    %r11,-0x48(%rbp)
mov    0x10(%rcx),%r8d
mov    %r8,-0xd8(%rbp)
mov    0xc(%rcx),%eax
mov    %rax,-0x90(%rbp)
mov    0x38(%rdi),%rsi
mov    %r15,-0x28(%rbp)
mov    %rsi,-0x68(%rbp)
lea    0x18d0b(%rip),%rdx        # 2c18c <png_sRGB_table>
mov    %r14,-0x20(%rbp)
mov    %rdx,-0x60(%rbp)
lea    0x18efc(%rip),%rdx        # 2c38c <png_sRGB_base>
mov    %r13,-0x18(%rbp)
mov    %rdx,-0x58(%rbp)
lea    0x192ed(%rip),%rdx        # 2c78c <png_sRGB_delta>
mov    %r12,-0x10(%rbp)
mov    %rdx,-0xb0(%rbp)
mov    %rbx,-0x8(%rbp)
xor    %edx,%edx
mov    $0x3,%ebx
mov    0x14(%rcx),%ecx
and    $0x2,%ecx
test   %ecx,%ecx
jne    134f9 <png_image_read_composite+0xe9>
mov    $0x2,%ecx
mov    %rcx,-0xd0(%rbp)
mov    %rsi,%rbx
mov    %rdi,%r12
mov    %r9,%rdi
mov    %rdx,%r9
mov    %r10,%rsi
mov    %rsi,%r13
jmpq   135ef <png_image_read_composite+0x1df>
cmp    $0x1,%al
je     13455 <png_image_read_composite+0x45>
mov    %r9,%rdi
lea    0x1ac06(%rip),%rsi        # 2e0fa <chunks_to_process.34+0x2f5>
callq  5470 <png_error@plt>
mov    $0x4,%ecx
mov    %rcx,-0xd0(%rbp)
mov    %rdi,%r12
mov    %r9,%rdi
mov    %r10,%r13
mov    %rbx,%r10
mov    %rsi,%rbx
mov    %rdx,%r9
mov    %r10,%rsi
jmpq   135ef <png_image_read_composite+0x1df>
cmp    $0xfe,%r11b
mov    %edx,%r8d
movzbl (%rbx,%r8,1),%eax
ja     13567 <png_image_read_composite+0x157>
movzbl (%r9,%r8,1),%esi
movzwl (%r14,%rsi,2),%edi
imul   %ecx,%edi
mov    %rax,%rsi
shl    $0x10,%esi
sub    %eax,%esi
add    %edi,%esi
mov    %rsi,%rax
shr    $0xf,%eax
mov    %eax,%edi
movzbl (%rdi,%r13,1),%eax
and    $0x7fff,%esi
imul   %esi,%eax
shr    $0xc,%eax
movzwl (%r12,%rdi,2),%esi
add    %esi,%eax
shr    $0x8,%eax
mov    %al,(%r9,%r8,1)
add    $0x1,%edx
cmp    %r10d,%edx
jb     1351f <png_image_read_composite+0x10f>
mov    -0x30(%rbp),%rax
mov    -0xa0(%rbp),%r8
mov    -0xb8(%rbp),%rsi
xor    %edx,%edx
mov    -0xd0(%rbp),%rdi
mov    $0xff,%ecx
add    %r8,%r9
add    %rdi,%rbx
cmp    %rax,%r9
jb     1361c <png_image_read_composite+0x20c>
mov    -0x70(%rbp),%rcx
mov    -0x80(%rbp),%rax
lea    (%rcx,%rax,1),%r13d
mov    -0xa8(%rbp),%r15
mov    -0xc8(%rbp),%r12
mov    -0x38(%rbp),%r14
mov    -0x68(%rbp),%rbx
mov    -0x98(%rbp),%rax
mov    -0x88(%rbp),%rdi
mov    -0xd8(%rbp),%r8
cmp    %r8d,%r13d
jb     13632 <png_image_read_composite+0x222>
mov    -0x90(%rbp),%rax
mov    -0x50(%rbp),%r9
mov    -0x48(%rbp),%r11
mov    $0x1,%r13d
mov    %rsi,-0xb8(%rbp)
mov    %r10,-0x40(%rbp)
cmp    %r9d,%r11d
jg     136bb <png_image_read_composite+0x2ab>
mov    %r13,%rax
mov    -0x8(%rbp),%rbx
mov    -0x10(%rbp),%r12
mov    -0x18(%rbp),%r13
mov    -0x20(%rbp),%r14
mov    -0x28(%rbp),%r15
leaveq 
retq   
movzbl (%rsi,%rbx,1),%r11d
test   %r11b,%r11b
je     13593 <png_image_read_composite+0x183>
sub    %r11d,%ecx
jmpq   1356e <png_image_read_composite+0x15e>
mov    0x28(%r12),%rsi
mov    %rsi,-0xc0(%rbp)
mov    %rax,-0x98(%rbp)
callq  5600 <png_read_row@plt>
mov    %r15d,%r8d
mov    %r8,-0xa0(%rbp)
mov    %r13d,%eax
imul   %rax,%rbx
mov    0x30(%r12),%rcx
lea    (%rcx,%r14,1),%rax
add    %rbx,%rax
mov    %rax,-0x30(%rbp)
lea    (%rbx,%rcx,1),%rdx
mov    -0x98(%rbp),%rcx
mov    %ecx,%ecx
lea    (%rdx,%rcx,1),%r9
mov    %r13,-0x70(%rbp)
mov    %r15,-0xa8(%rbp)
mov    -0xb0(%rbp),%r13
mov    -0x60(%rbp),%r14
mov    -0x40(%rbp),%r10
mov    -0xb8(%rbp),%rsi
mov    -0xc0(%rbp),%rbx
xor    %edx,%edx
mov    -0xd0(%rbp),%rdi
mov    -0x58(%rbp),%r12
mov    $0xff,%ecx
jmpq   13599 <png_image_read_composite+0x189>
mov    %r10,%rcx
imul   %eax,%ecx
mov    %ecx,%r14d
mov    %r14,-0x38(%rbp)
lea    0x1(%r9),%r15d
movzbl 0x264(%rdi),%ecx
cmp    $0x1,%cl
je     136f0 <png_image_read_composite+0x2e0>
mov    %r15,-0x50(%rbp)
mov    %rdx,%rax
mov    %rax,%r13
mov    %r10,%r15
pushq  -0x78(%rbp)
popq   -0x80(%rbp)
jmpq   135d5 <png_image_read_composite+0x1c5>
cmp    $0x1,%r9d
jg     13702 <png_image_read_composite+0x2f2>
mov    $0x7,%ebx
mov    $0x3,%ecx
jmp    13712 <png_image_read_composite+0x302>
mov    $0x7,%ebx
mov    %rbx,%rcx
sub    %r9d,%ecx
sar    %ecx
mov    %r13,%rdx
test   %rdx,%rdx
jne    1371e <png_image_read_composite+0x30e>
mov    $0x3,%ebx
jmp    13723 <png_image_read_composite+0x313>
sub    %r9d,%ebx
sar    %ebx
shl    %cl,%r13d
add    $0xffffffff,%r13d
mov    %r15,%rcx
sar    %ecx
mov    $0x3,%r14d
neg    %ecx
add    %r14d,%ecx
mov    %r9,%rdx
and    $0x1,%edx
shl    %cl,%edx
and    $0x7,%edx
sub    %edx,%r13d
add    %eax,%r13d
mov    %rbx,%rcx
shr    %cl,%r13d
test   %r13d,%r13d
jne    1376a <png_image_read_composite+0x35a>
mov    %r15,%r9
mov    -0x68(%rbp),%rbx
mov    $0x1,%r13d
xor    %edx,%edx
jmpq   135ef <png_image_read_composite+0x1df>
cmp    $0x2,%r9d
jg     13777 <png_image_read_composite+0x367>
mov    $0x8,%eax
jmp    13784 <png_image_read_composite+0x374>
lea    -0x1(%r9),%ecx
sar    %ecx
mov    $0x8,%eax
shr    %cl,%eax
mov    %rax,-0x80(%rbp)
mov    %r9,%rax
sar    %eax
sub    %eax,%r14d
mov    %r9,%r13
not    %r13d
and    $0x1,%r13d
mov    %r14,%rcx
shl    %cl,%r13d
and    $0x7,%r13d
mov    %r10,%rax
imul   %edx,%eax
mov    $0x7,%ecx
sub    %r9d,%ecx
sar    %ecx
mov    %r15,%rdx
mov    %r10,%r15
shl    %cl,%r15d
mov    %rdx,-0x50(%rbp)
mov    -0x38(%rbp),%r14
mov    -0x68(%rbp),%rbx
xor    %edx,%edx
jmpq   135d5 <png_image_read_composite+0x1c5>

00000000000137d0 <png_image_read_background>:
push   %rbp
mov    %rsp,%rbp
sub    $0xd0,%rsp
mov    %rdi,-0xc0(%rbp)
mov    (%rdi),%rcx
mov    (%rcx),%rax
mov    0x8(%rax),%rdx
mov    0x10(%rcx),%r8d
mov    0xc(%rcx),%r9d
mov    %r9,-0xd0(%rbp)
mov    (%rax),%r10
mov    %r10,-0xc8(%rbp)
mov    0x134(%r10),%eax
mov    %rax,%rsi
and    $0x600000,%esi
test   %esi,%esi
je     138bf <png_image_read_background+0xef>
and    $0x80,%eax
test   %eax,%eax
jne    138ce <png_image_read_background+0xfe>
mov    %r10,%rax
mov    %rdx,%rsi
mov    %r8,-0x58(%rbp)
mov    %rbx,-0x28(%rbp)
mov    %r12,-0x30(%rbp)
mov    %r13,-0x38(%rbp)
mov    %r14,-0x40(%rbp)
mov    %r15,-0x48(%rbp)
mov    %rdi,%rbx
mov    %rax,%rdi
mov    %r10,%r12
mov    %rcx,%r13
mov    %r9,%r14
mov    %rdx,%r15
callq  5540 <png_get_channels@plt>
cmp    $0x2,%al
jne    138dd <png_image_read_background+0x10d>
mov    0x14(%r13),%eax
mov    %rax,%rcx
and    $0x4,%ecx
test   %ecx,%ecx
je     138ec <png_image_read_background+0x11c>
mov    $0x1,%eax
mov    %rax,-0x68(%rbp)
mov    $0x7,%edi
movzbl 0x264(%r12),%ecx
test   %cl,%cl
jne    13906 <png_image_read_background+0x136>
mov    %rax,%r10
mov    %r10,-0x78(%rbp)
xor    %r8d,%r8d
mov    %r8,-0xb8(%rbp)
movzbl 0x24(%r15),%ecx
cmp    $0x8,%cl
je     13917 <png_image_read_background+0x147>
cmp    $0x10,%cl
je     1395a <png_image_read_background+0x18a>
mov    %r12,%rdi
lea    0x1a8da(%rip),%rsi        # 2e194 <chunks_to_process.34+0x38f>
callq  5470 <png_error@plt>
mov    %r10,%rdi
lea    0x1a872(%rip),%rsi        # 2e13b <chunks_to_process.34+0x336>
callq  5470 <png_error@plt>
mov    %r10,%rdi
lea    0x1a874(%rip),%rsi        # 2e14c <chunks_to_process.34+0x347>
callq  5470 <png_error@plt>
mov    %r12,%rdi
lea    0x1a878(%rip),%rsi        # 2e15f <chunks_to_process.34+0x35a>
callq  5470 <png_error@plt>
and    $0x1,%eax
test   %eax,%eax
je     13871 <png_image_read_background+0xa1>
mov    %r12,%rdi
lea    0x1a873(%rip),%rsi        # 2e174 <chunks_to_process.34+0x36f>
callq  5470 <png_error@plt>
cmp    $0x1,%cl
jne    13993 <png_image_read_background+0x1c3>
mov    %rdi,%r10
jmpq   1388f <png_image_read_background+0xbf>
mov    0x30(%rbx),%r9
mov    %r9,-0xa0(%rbp)
mov    0x38(%rbx),%r13
mov    %r13,-0x98(%rbp)
lea    0x18858(%rip),%rsi        # 2c18c <png_sRGB_table>
mov    %rsi,-0x70(%rbp)
lea    0x18a4d(%rip),%rcx        # 2c38c <png_sRGB_base>
mov    %rcx,-0x60(%rbp)
lea    0x18e42(%rip),%rcx        # 2c78c <png_sRGB_delta>
mov    %rcx,-0x80(%rbp)
mov    -0x58(%rbp),%rdx
mov    %r8,%r15
jmpq   13a57 <png_image_read_background+0x287>
mov    0x30(%rbx),%rcx
mov    %rcx,-0x90(%rbp)
mov    0x38(%rbx),%rdi
mov    $0x2,%r15d
mov    %r15,-0xc0(%rbp)
mov    0x14(%r13),%edx
mov    %rdx,%rsi
and    $0x1,%esi
test   %esi,%esi
jne    13a76 <png_image_read_background+0x2a6>
mov    %rax,%r15
mov    %r8,%r9
jmpq   13a79 <png_image_read_background+0x2a9>
mov    %r12,%rdi
lea    0x1a75d(%rip),%rsi        # 2e0fa <chunks_to_process.34+0x2f5>
callq  5470 <png_error@plt>
movzbl 0x1(%rcx),%r8d
test   %r8b,%r8b
je     139f4 <png_image_read_background+0x224>
movzbl (%rcx),%edx
cmp    $0xfe,%r8b
ja     139f2 <png_image_read_background+0x222>
mov    %r13,%rdi
sub    %r8d,%edi
movzbl (%rax),%ebx
movzwl (%rsi,%rbx,2),%ebx
imul   %ebx,%edi
movzwl (%rsi,%rdx,2),%edx
imul   %r8d,%edx
add    %edx,%edi
mov    %rdi,%rdx
shr    $0xf,%edx
mov    %edx,%ebx
movzbl (%rbx,%r9,1),%edx
and    $0x7fff,%edi
imul   %edi,%edx
shr    $0xc,%edx
movzwl (%r12,%rbx,2),%edi
add    %edi,%edx
shr    $0x8,%edx
mov    %dl,(%rax)
add    $0x2,%rcx
add    %r11,%rax
cmp    %r10,%rax
jb     139a2 <png_image_read_background+0x1d2>
mov    -0xb0(%rbp),%rcx
mov    -0xa8(%rbp),%rax
lea    (%rax,%rcx,1),%r15d
mov    -0x88(%rbp),%rcx
mov    -0x98(%rbp),%r13
mov    -0xa0(%rbp),%r9
mov    -0xc0(%rbp),%rbx
mov    -0xc8(%rbp),%r12
xor    %r8d,%r8d
mov    -0x58(%rbp),%rdx
cmp    %r15d,%edx
ja     13ad6 <png_image_read_background+0x306>
mov    -0x78(%rbp),%r10
mov    -0x20(%rbp),%r15
mov    $0x1,%eax
mov    $0x7,%edi
cmp    %r15d,%r10d
jg     13b31 <png_image_read_background+0x361>
mov    -0x48(%rbp),%r15
mov    -0x40(%rbp),%r14
mov    -0x38(%rbp),%r13
mov    -0x30(%rbp),%r12
mov    -0x28(%rbp),%rbx
leaveq 
retq   
mov    %rax,%r9
mov    %r9,-0x88(%rbp)
mov    %r15,-0xa8(%rbp)
mov    %rdi,%rsi
shr    $0x3f,%rsi
lea    (%rdi,%rsi,1),%r13
sar    %r13
mov    %r13,-0x98(%rbp)
mov    %r14,%rsi
imul   %r15d,%esi
mov    %esi,%esi
mov    %rsi,-0x50(%rbp)
test   %r9d,%r9d
jne    13b7e <png_image_read_background+0x3ae>
mov    -0x58(%rbp),%rdx
mov    %r8,%rdi
pushq  -0xc0(%rbp)
pushq  -0xb8(%rbp)
popq   -0xc0(%rbp)
popq   -0xb8(%rbp)
jmpq   13c35 <png_image_read_background+0x465>
mov    0x28(%rbx),%rsi
mov    %r8,%rdx
mov    %r12,%rdi
mov    %rcx,%r12
mov    %r9,%rbx
mov    %rsi,-0xb8(%rbp)
callq  5600 <png_read_row@plt>
mov    %r15d,%eax
imul   %rax,%r13
lea    0x0(%r13,%rbx,1),%rax
lea    (%rax,%r14,1),%r10
add    %r12,%rax
mov    %r15,-0xb0(%rbp)
mov    -0x60(%rbp),%r12
mov    -0x80(%rbp),%r9
mov    -0xb8(%rbp),%rcx
mov    $0xff,%r13d
mov    -0x90(%rbp),%r11
mov    -0x70(%rbp),%rsi
jmpq   139fb <png_image_read_background+0x22b>
lea    0x1(%r15),%r11d
movzbl 0x264(%r12),%ecx
cmp    $0x1,%cl
je     13c54 <png_image_read_background+0x484>
mov    %r8,%rdi
mov    %rdi,%r15
pushq  -0x68(%rbp)
popq   -0xa8(%rbp)
mov    %edi,%ecx
mov    %rcx,-0x88(%rbp)
mov    %eax,%eax
mov    %rax,-0x90(%rbp)
mov    0x20(%rbx),%rax
test   %rax,%rax
jne    13c68 <png_image_read_background+0x498>
mov    %r11,-0x20(%rbp)
jmpq   13a3c <png_image_read_background+0x26c>
and    $0x20,%edx
test   %edx,%edx
jne    13c81 <png_image_read_background+0x4b1>
mov    -0x58(%rbp),%rdx
mov    %r8,%rdi
pushq  -0xc0(%rbp)
pushq  -0xb8(%rbp)
popq   -0xc0(%rbp)
popq   -0xb8(%rbp)
jmpq   13c35 <png_image_read_background+0x465>
movzwl (%rcx),%edx
movzwl 0x2(%rcx),%r14d
test   %r14w,%r14w
jne    13c8a <png_image_read_background+0x4ba>
mov    %r8,%rdx
test   %r10d,%r10d
mov    %dx,(%rsi,%r12,1)
je     13bd1 <png_image_read_background+0x401>
mov    %r14w,(%rsi,%r13,1)
add    $0x4,%rcx
lea    (%rsi,%r9,2),%rsi
cmp    %rdi,%rsi
jb     13bad <png_image_read_background+0x3dd>
mov    -0x60(%rbp),%rcx
mov    -0x70(%rbp),%rax
lea    (%rcx,%rax,1),%r14d
mov    -0x98(%rbp),%r13
mov    -0xb0(%rbp),%r15
mov    -0x90(%rbp),%rcx
mov    -0xa0(%rbp),%rax
mov    -0xc8(%rbp),%r12
mov    -0x58(%rbp),%rdx
cmp    %r14d,%edx
ja     13cae <png_image_read_background+0x4de>
mov    -0xd0(%rbp),%r14
mov    -0xa8(%rbp),%r15
mov    -0x80(%rbp),%rdi
mov    -0x78(%rbp),%r10
mov    $0x1,%eax
cmp    %edi,%r10d
jg     13d1c <png_image_read_background+0x54c>
mov    -0x48(%rbp),%r15
mov    -0x40(%rbp),%r14
mov    -0x38(%rbp),%r13
mov    -0x30(%rbp),%r12
mov    -0x28(%rbp),%rbx
leaveq 
retq   
cmp    $0x1,%r15d
jg     13d48 <png_image_read_background+0x578>
mov    $0x3,%ecx
jmpq   13d53 <png_image_read_background+0x583>
movzbl 0x1(%rax),%eax
mov    %r11,-0x8(%rbp)
mov    %rax,-0x10(%rbp)
movzwl (%rsi,%rax,2),%eax
mov    %rax,-0x20(%rbp)
jmpq   13dc5 <png_image_read_background+0x5f5>
mov    -0x58(%rbp),%rdx
mov    %r8,%rdi
jmp    13c35 <png_image_read_background+0x465>
cmp    $0xfffe,%r14w
ja     13bc2 <png_image_read_background+0x3f2>
mov    %r14,%rax
imul   %edx,%eax
lea    0x7fff(%rax),%edx
mov    %r11,%rax
mul    %edx
shr    $0xf,%edx
jmpq   13bc2 <png_image_read_background+0x3f2>
mov    0x28(%rbx),%rsi
mov    %rax,-0xa0(%rbp)
mov    %r8,%rdx
mov    %r12,%rdi
mov    %rcx,%r12
callq  5600 <png_read_row@plt>
mov    0x28(%rbx),%rcx
mov    %r15d,%r9d
mov    %r14d,%eax
imul   %rax,%r13
lea    (%r12,%r13,2),%rdx
mov    -0x50(%rbp),%rax
lea    (%rdx,%rax,2),%rdi
mov    -0xa0(%rbp),%rax
mov    %eax,%eax
lea    (%rdx,%rax,2),%rsi
mov    %r14,-0x60(%rbp)
mov    %r15,-0xb0(%rbp)
mov    -0x88(%rbp),%r10
mov    $0x80008001,%r11d
mov    -0xc0(%rbp),%r12
xor    %r8d,%r8d
mov    -0xb8(%rbp),%r13
jmpq   13bd9 <png_image_read_background+0x409>
lea    0x1(%rdi),%r9d
movzbl 0x264(%r12),%esi
cmp    $0x1,%sil
je     13de5 <png_image_read_background+0x615>
mov    %r9,-0x80(%rbp)
mov    %r8,%rax
mov    %rax,%r14
pushq  -0x68(%rbp)
popq   -0x70(%rbp)
jmpq   13c11 <png_image_read_background+0x441>
mov    %rdi,%rcx
sub    %r15d,%ecx
sar    %ecx
mov    %rax,%r8
test   %r8,%r8
jne    13dfd <png_image_read_background+0x62d>
mov    $0x3,%r9d
jmpq   13e06 <png_image_read_background+0x636>
movzbl 0x1(%rax),%edi
test   %dil,%dil
jne    13e51 <png_image_read_background+0x681>
mov    %r9,%rdx
mov    %dl,(%rcx)
add    $0x2,%rax
add    %r10,%rcx
cmp    %rbx,%rcx
jb     13d67 <png_image_read_background+0x597>
mov    -0x18(%rbp),%rcx
mov    -0xa8(%rbp),%rax
lea    (%rcx,%rax,1),%r15d
mov    -0x88(%rbp),%rcx
mov    -0x98(%rbp),%r13
mov    -0xa0(%rbp),%r9
mov    -0xd0(%rbp),%r14
mov    -0xc0(%rbp),%rbx
mov    -0xc8(%rbp),%r12
xor    %r8d,%r8d
mov    -0x58(%rbp),%rdx
cmp    %edx,%r15d
jb     13e99 <png_image_read_background+0x6c9>
mov    -0x78(%rbp),%r10
mov    -0x8(%rbp),%r15
mov    $0x1,%eax
mov    $0x7,%edi
jmpq   13a57 <png_image_read_background+0x287>
cmp    $0x1,%edi
jg     13ef3 <png_image_read_background+0x723>
mov    $0x7,%esi
mov    $0x3,%ecx
jmpq   13f02 <png_image_read_background+0x732>
mov    %rdi,%r9
sub    %r15d,%r9d
sar    %r9d
shl    %cl,%eax
add    $0xffffffff,%eax
mov    %r11,%r8
sar    %r8d
mov    $0x3,%ecx
sub    %r8d,%ecx
mov    %r15,%r8
and    $0x1,%r8d
shl    %cl,%r8d
and    $0x7,%r8d
sub    %r8d,%eax
add    %r14d,%eax
mov    %r9,%rcx
shr    %cl,%eax
test   %eax,%eax
jne    13f0e <png_image_read_background+0x73e>
mov    %r11,%r15
mov    -0xa0(%rbp),%r9
mov    $0x1,%eax
xor    %r8d,%r8d
jmpq   13a57 <png_image_read_background+0x287>
movzbl (%rax),%edx
cmp    $0xfe,%dil
ja     13d77 <png_image_read_background+0x5a7>
movzwl (%rsi,%rdx,2),%edx
imul   %edi,%edx
neg    %edi
add    %r14d,%edi
imul   %r13d,%edi
add    %edx,%edi
mov    %rdi,%rdx
shr    $0xf,%edx
mov    %edx,%r8d
movzbl (%r8,%r12,1),%edx
and    $0x7fff,%edi
imul   %edi,%edx
shr    $0xc,%edx
movzwl (%r11,%r8,2),%edi
add    %edi,%edx
shr    $0x8,%edx
jmpq   13d77 <png_image_read_background+0x5a7>
mov    0x28(%rbx),%rsi
mov    %r8,%rdx
mov    %r12,%rdi
mov    %rcx,%r12
mov    %r9,%rbx
mov    %rsi,-0x50(%rbp)
callq  5600 <png_read_row@plt>
mov    %r15d,%eax
imul   %rax,%r13
lea    (%rbx,%r13,1),%rax
lea    (%r14,%rax,1),%rbx
lea    (%r12,%rax,1),%rcx
mov    %r15,-0x18(%rbp)
mov    -0x60(%rbp),%r11
mov    -0x80(%rbp),%r12
mov    $0xff,%r14d
mov    -0x20(%rbp),%r13
mov    -0x90(%rbp),%r10
mov    -0x70(%rbp),%rsi
mov    -0x10(%rbp),%r9
mov    -0x50(%rbp),%rax
jmpq   13d80 <png_image_read_background+0x5b0>
mov    $0x7,%esi
mov    %rsi,%rcx
sub    %edi,%ecx
sar    %ecx
mov    %rax,%r8
test   %r8,%r8
jne    13f1b <png_image_read_background+0x74b>
mov    $0x3,%esi
jmp    13f1f <png_image_read_background+0x74f>
cmp    $0x2,%r15d
jg     13f68 <png_image_read_background+0x798>
mov    $0x8,%eax
jmp    13f75 <png_image_read_background+0x7a5>
sub    %edi,%esi
sar    %esi
shl    %cl,%eax
lea    -0x1(%rax),%r11d
mov    %r9,%rax
sar    %eax
mov    $0x3,%r8d
mov    %r8,%rcx
sub    %eax,%ecx
mov    %rdi,%rax
and    $0x1,%eax
shl    %cl,%eax
and    $0x7,%eax
sub    %eax,%r11d
add    %r14d,%r11d
mov    %rsi,%rcx
shr    %cl,%r11d
test   %r11d,%r11d
jne    13fb7 <png_image_read_background+0x7e7>
mov    %r9,%rdi
mov    -0x90(%rbp),%rcx
mov    $0x1,%eax
xor    %r8d,%r8d
jmpq   13c35 <png_image_read_background+0x465>
lea    -0x1(%r15),%ecx
sar    %ecx
mov    $0x8,%eax
shr    %cl,%eax
mov    %rax,-0xa8(%rbp)
sub    %r15d,%edi
sar    %edi
mov    %rdi,%rcx
mov    $0x1,%eax
shl    %cl,%eax
mov    %r15,%rdi
sar    %edi
mov    $0x3,%ecx
sub    %edi,%ecx
not    %r15d
and    $0x1,%r15d
mov    %r8,%rdi
shl    %cl,%r15d
and    $0x7,%r15d
mov    -0xa0(%rbp),%r9
xor    %r8d,%r8d
jmpq   13b56 <png_image_read_background+0x386>
cmp    $0x2,%edi
jg     13fc3 <png_image_read_background+0x7f3>
mov    $0x8,%esi
jmp    13fcf <png_image_read_background+0x7ff>
lea    -0x1(%rdi),%ecx
sar    %ecx
mov    $0x8,%esi
shr    %cl,%esi
mov    %rsi,-0x70(%rbp)
mov    %rdi,%rcx
sar    %ecx
sub    %ecx,%r8d
mov    %rdi,%r14
not    %r14d
and    $0x1,%r14d
mov    %r8,%rcx
shl    %cl,%r14d
and    $0x7,%r14d
imul   %r15d,%eax
mov    $0x7,%ecx
sub    %edi,%ecx
sar    %ecx
shl    %cl,%r15d
mov    %r9,-0x80(%rbp)
mov    -0x90(%rbp),%rcx
xor    %r8d,%r8d
jmpq   13c11 <png_image_read_background+0x441>
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   (%rax)

0000000000014020 <png_image_read_direct>:
push   %rbp
mov    %rsp,%rbp
sub    $0x90,%rsp
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rdi,-0x48(%rbp)
mov    (%rdi),%r12
mov    %r12,-0x30(%rbp)
mov    (%r12),%rax
mov    (%rax),%rbx
mov    0x8(%rax),%rax
mov    %rax,-0x40(%rbp)
mov    $0x1,%ecx
mov    %rcx,-0x70(%rbp)
xor    %r13d,%r13d
mov    %r13,-0x78(%rbp)
mov    0x14(%r12),%r15d
mov    %r15,-0x50(%rbp)
mov    %r15,%rax
and    $0x4,%eax
test   %eax,%eax
je     1407f <png_image_read_direct+0x5f>
mov    %rcx,%r13
mov    %rdi,%r14
mov    %r13,-0x58(%rbp)
mov    %rbx,%rdi
callq  56b0 <png_set_expand@plt>
mov    $0xffffffffffffffff,%rax
mov    %rax,-0x68(%rbp)
mov    %rbx,%rdi
callq  10640 <png_image_format>
mov    %rax,%rcx
and    $0xfffffff7,%ecx
mov    %r15,%r8
xor    %ecx,%r8d
mov    %r8,%rcx
and    $0x2,%ecx
test   %ecx,%ecx
jne    140c8 <png_image_read_direct+0xa8>
mov    %rax,%r15
mov    %r12,%rax
mov    %r8,%r12
pushq  -0x78(%rbp)
popq   -0x80(%rbp)
jmp    14105 <png_image_read_direct+0xe5>
and    $0x2,%r15d
test   %r15d,%r15d
jne    140e3 <png_image_read_direct+0xc3>
mov    %rax,%rcx
and    $0x1,%ecx
test   %ecx,%ecx
jne    1414d <png_image_read_direct+0x12d>
pushq  -0x78(%rbp)
popq   -0x80(%rbp)
jmp    14153 <png_image_read_direct+0x133>
mov    %r12,%r14
mov    %r8,%r12
mov    %rax,%r15
mov    %rbx,%rdi
callq  5810 <png_set_gray_to_rgb@plt>
mov    %r14,%rax
pushq  -0x78(%rbp)
popq   -0x80(%rbp)
and    $0xfffffffd,%r12d
mov    -0x48(%rbp),%r14
mov    $0x186a0,%edx
mov    %rdx,-0x60(%rbp)
mov    %r15,%rcx
and    $0x4,%ecx
test   %ecx,%ecx
jne    14178 <png_image_read_direct+0x158>
mov    $0xffffffffffffffff,%rdx
mov    %rbx,%rdi
xor    %esi,%esi
callq  5640 <png_set_alpha_mode_fixed@plt>
test   %r13d,%r13d
jg     1418b <png_image_read_direct+0x16b>
pushq  -0x78(%rbp)
popq   -0x60(%rbp)
mov    $0x2,%eax
mov    %rax,-0x38(%rbp)
mov    %r12,%rcx
and    $0x40,%ecx
test   %ecx,%ecx
jne    141a3 <png_image_read_direct+0x183>
mov    -0x60(%rbp),%rsi
jmp    141aa <png_image_read_direct+0x18a>
pushq  -0x70(%rbp)
popq   -0x80(%rbp)
mov    %r12,%r14
mov    %r8,%r12
mov    %rax,%r15
mov    $0xffffffffffffffff,%rdx
mov    %rdx,%rcx
mov    %rbx,%rdi
mov    $0x1,%esi
callq  55b0 <png_set_rgb_to_gray_fixed@plt>
mov    %r14,%rax
jmp    140fd <png_image_read_direct+0xdd>
mov    0x18(%rax),%eax
and    $0x4,%eax
test   %eax,%eax
je     1411f <png_image_read_direct+0xff>
mov    $0xffffffffffffffff,%rdx
jmp    1411f <png_image_read_direct+0xff>
mov    %r15,%rax
and    $0x1,%eax
test   %eax,%eax
jne    141dc <png_image_read_direct+0x1bc>
pushq  -0x78(%rbp)
pushq  -0x60(%rbp)
popq   -0x68(%rbp)
popq   -0x60(%rbp)
jmp    14134 <png_image_read_direct+0x114>
and    $0xffffffbf,%r12d
mov    %rax,%rsi
mov    -0x80(%rbp),%r8
test   %r8d,%r8d
jg     141ed <png_image_read_direct+0x1cd>
mov    %r14,%rcx
xor    %r14d,%r14d
mov    %r12,%rdx
and    $0x4,%edx
test   %edx,%edx
je     14250 <png_image_read_direct+0x230>
test   %r13d,%r13d
jg     14231 <png_image_read_direct+0x211>
mov    %rsi,%r13
mov    %rbx,%rdi
callq  58d0 <png_set_scale_16@plt>
mov    %r13,%rsi
jmp    1423f <png_image_read_direct+0x21f>
pushq  -0x70(%rbp)
pushq  -0x60(%rbp)
popq   -0x68(%rbp)
popq   -0x60(%rbp)
jmpq   14134 <png_image_read_direct+0x114>
lea    -0x90(%rbp),%rdi
movslq 0x498(%rbx),%rdx
mov    -0x68(%rbp),%rax
mov    %r15,-0x80(%rbp)
mov    %r8,%r14
mov    %rsi,%r15
mov    %rax,%rsi
mov    $0x186a0,%ecx
callq  8970 <png_muldiv>
test   %eax,%eax
jne    14265 <png_image_read_direct+0x245>
mov    %r15,%rsi
cmp    $0x1,%esi
je     14291 <png_image_read_direct+0x271>
mov    $0x2,%eax
mov    -0x80(%rbp),%r15
mov    -0x48(%rbp),%rcx
jmp    141b9 <png_image_read_direct+0x199>
mov    %rsi,%r13
mov    %rbx,%rdi
callq  5830 <png_set_expand_16@plt>
mov    %r13,%rsi
and    $0xfffffffb,%r12d
mov    -0x58(%rbp),%r13
mov    $0x2,%eax
mov    -0x48(%rbp),%rcx
mov    %r12,%rdx
and    $0x1,%edx
test   %edx,%edx
jne    142a8 <png_image_read_direct+0x288>
mov    -0x50(%rbp),%r15
xor    %ecx,%ecx
jmpq   142f9 <png_image_read_direct+0x2d9>
movslq -0x90(%rbp),%rdi
callq  8b10 <png_gamma_significant>
test   %eax,%eax
jne    14323 <png_image_read_direct+0x303>
mov    %r15,%rsi
mov    $0x2,%eax
mov    -0x80(%rbp),%r15
mov    -0x48(%rbp),%rcx
xor    %r14d,%r14d
jmpq   141b9 <png_image_read_direct+0x199>
mov    $0x2,%eax
mov    -0x80(%rbp),%r15
mov    -0x48(%rbp),%rcx
xor    %esi,%esi
mov    %rax,%r14
jmpq   141b9 <png_image_read_direct+0x199>
and    $0x1,%r15d
test   %r15d,%r15d
jne    1432b <png_image_read_direct+0x30b>
test   %r13d,%r13d
jg     142bd <png_image_read_direct+0x29d>
mov    $0xff,%eax
jmp    142c2 <png_image_read_direct+0x2a2>
mov    $0xffff,%eax
mov    -0x50(%rbp),%r15
mov    %r15,%rcx
and    $0x20,%ecx
test   %ecx,%ecx
je     142da <png_image_read_direct+0x2ba>
and    $0xffffffdf,%r12d
pushq  -0x78(%rbp)
popq   -0x70(%rbp)
mov    %rsi,%r13
mov    %rax,%rsi
mov    %rbx,%rdi
mov    -0x70(%rbp),%rdx
callq  5630 <png_set_add_alpha@plt>
mov    %r13,%rsi
mov    -0x58(%rbp),%r13
xor    %ecx,%ecx
and    $0xfffffffe,%r12d
mov    %rcx,-0x50(%rbp)
mov    %rbx,%rdi
mov    -0x68(%rbp),%rdx
callq  5640 <png_set_alpha_mode_fixed@plt>
mov    %r12,%rax
and    $0x10,%eax
test   %eax,%eax
je     1434b <png_image_read_direct+0x32b>
mov    %r15,%rax
and    $0x2,%eax
test   %eax,%eax
jne    1433f <png_image_read_direct+0x31f>
and    $0xffffffef,%r15d
jmp    14347 <png_image_read_direct+0x327>
mov    %r15,%rsi
jmpq   1421d <png_image_read_direct+0x1fd>
test   %r14d,%r14d
jle    143bf <png_image_read_direct+0x39f>
mov    %rax,%r14
mov    -0x50(%rbp),%r15
xor    %ecx,%ecx
jmp    142f5 <png_image_read_direct+0x2d5>
mov    %rbx,%rdi
callq  5860 <png_set_bgr@plt>
and    $0xffffffef,%r12d
mov    %r12,%rax
and    $0x20,%eax
test   %eax,%eax
je     1436b <png_image_read_direct+0x34b>
mov    %r15,%rax
and    $0x1,%eax
test   %eax,%eax
jne    143e5 <png_image_read_direct+0x3c5>
and    $0xffffffdf,%r15d
and    $0xffffffdf,%r12d
test   %r13d,%r13d
jle    14378 <png_image_read_direct+0x358>
mov    %rbx,%rdi
callq  51e0 <png_set_swap@plt>
test   %r12d,%r12d
jne    143fc <png_image_read_direct+0x3dc>
mov    %rbx,%rdi
callq  10880 <png_image_skip_unused_chunks>
mov    -0x50(%rbp),%r12
test   %r12d,%r12d
je     1440b <png_image_read_direct+0x3eb>
xor    %eax,%eax
mov    %rax,-0x68(%rbp)
mov    %rbx,%rdi
mov    -0x40(%rbp),%r13
mov    %r13,%rsi
callq  5080 <png_read_update_info@plt>
movzbl 0x25(%r13),%ecx
mov    %rcx,%rax
and    $0x2,%eax
test   %eax,%eax
jg     1441c <png_image_read_direct+0x3fc>
mov    $0x1,%eax
pushq  -0x78(%rbp)
popq   -0x38(%rbp)
jmp    14421 <png_image_read_direct+0x401>
test   %r13d,%r13d
jg     1443e <png_image_read_direct+0x41e>
mov    0x20(%rcx),%rdx
test   %rdx,%rdx
jne    1445b <png_image_read_direct+0x43b>
mov    %rax,%rsi
mov    -0x50(%rbp),%r15
mov    $0x1,%ecx
xor    %r14d,%r14d
jmpq   142f5 <png_image_read_direct+0x2d5>
cmp    $0x2,%r14d
je     14367 <png_image_read_direct+0x347>
mov    %rbx,%rdi
callq  50d0 <png_set_swap_alpha@plt>
jmpq   14367 <png_image_read_direct+0x347>
mov    %rbx,%rdi
lea    0x19da3(%rip),%rsi        # 2e1a9 <chunks_to_process.34+0x3a4>
callq  5470 <png_error@plt>
cmp    $0x2,%r14d
jne    144cc <png_image_read_direct+0x4ac>
xor    %eax,%eax
jmpq   14390 <png_image_read_direct+0x370>
mov    $0x3,%eax
and    $0x4,%ecx
test   %ecx,%ecx
jg     144d9 <png_image_read_direct+0x4b9>
test   %r12d,%r12d
jg     14574 <png_image_read_direct+0x554>
mov    -0x38(%rbp),%rax
jmpq   144e6 <png_image_read_direct+0x4c6>
mov    %rsi,%r15
mov    %rbx,%rdi
callq  5740 <png_set_strip_alpha@plt>
mov    %r15,%rsi
mov    -0x50(%rbp),%r15
xor    %r14d,%r14d
mov    %r14,%rcx
jmpq   142f5 <png_image_read_direct+0x2d5>
movb   $0x0,-0x8a(%rbp)
mov    0x20(%rcx),%rax
movzbl (%rax),%eax
mov    %ax,-0x88(%rbp)
mov    0x20(%rcx),%rax
movzbl 0x1(%rax),%eax
mov    %ax,-0x86(%rbp)
mov    0x20(%rcx),%rax
movzbl 0x2(%rax),%eax
mov    %ax,-0x84(%rbp)
mov    0x20(%rcx),%rax
movzbl 0x1(%rax),%eax
mov    %ax,-0x82(%rbp)
mov    %rsi,%r15
lea    -0x8a(%rbp),%rsi
xor    %r14d,%r14d
mov    %r14,%r8
mov    %rbx,%rdi
mov    $0x1,%edx
mov    %r14,%rcx
callq  5320 <png_set_background_fixed@plt>
mov    %r15,%rsi
mov    -0x50(%rbp),%r15
mov    %r14,%rcx
jmpq   142f5 <png_image_read_direct+0x2d5>
mov    %rbx,%rdi
callq  53f0 <png_set_interlace_handling@plt>
jmpq   14390 <png_image_read_direct+0x370>
test   %r12d,%r12d
je     14583 <png_image_read_direct+0x563>
mov    -0x38(%rbp),%rax
mov    %r15,%rcx
and    $0x40,%ecx
test   %ecx,%ecx
je     144f3 <png_image_read_direct+0x4d3>
add    $0x40,%eax
movzbl 0x24(%r13),%ecx
cmp    $0x10,%cl
jne    14500 <png_image_read_direct+0x4e0>
add    $0x4,%eax
mov    0x134(%rbx),%ecx
mov    %rcx,%rdx
and    $0x1,%edx
test   %edx,%edx
je     14513 <png_image_read_direct+0x4f3>
add    $0x10,%eax
cmp    $0x2,%r14d
je     145a4 <png_image_read_direct+0x584>
mov    %rcx,%rdx
and    $0x20000,%edx
test   %edx,%edx
jne    14544 <png_image_read_direct+0x524>
and    $0x1000000,%ecx
test   %ecx,%ecx
je     1454d <png_image_read_direct+0x52d>
mov    0x130(%rbx),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
jne    1454d <png_image_read_direct+0x52d>
cmp    $0x2,%r14d
je     145ba <png_image_read_direct+0x59a>
or     $0x20,%eax
cmp    %eax,%r15d
jne    145c9 <png_image_read_direct+0x5a9>
mov    -0x58(%rbp),%rax
test   %eax,%eax
mov    -0x48(%rbp),%rax
mov    0x8(%rax),%rcx
movslq 0x10(%rax),%r15
jle    14569 <png_image_read_direct+0x549>
add    %r15,%r15
test   %r15,%r15
js     145d8 <png_image_read_direct+0x5b8>
mov    -0x30(%rbp),%rdi
jmp    145f1 <png_image_read_direct+0x5d1>
mov    %rbx,%rdi
lea    0x19c56(%rip),%rsi        # 2e1d4 <chunks_to_process.34+0x3cf>
callq  5470 <png_error@plt>
cmp    $0x2,%r14d
jne    144e6 <png_image_read_direct+0x4c6>
mov    %r15,%rcx
and    $0x1,%ecx
test   %ecx,%ecx
jne    144e6 <png_image_read_direct+0x4c6>
mov    -0x38(%rbp),%rax
jmpq   144e6 <png_image_read_direct+0x4c6>
mov    %r15,%rdx
and    $0x20,%edx
test   %edx,%edx
je     1451d <png_image_read_direct+0x4fd>
add    $0x20,%eax
jmpq   1451d <png_image_read_direct+0x4fd>
mov    %rbx,%rdi
lea    0x19c33(%rip),%rsi        # 2e1f7 <chunks_to_process.34+0x3f2>
callq  5470 <png_error@plt>
mov    %rbx,%rdi
lea    0x19c49(%rip),%rsi        # 2e21c <chunks_to_process.34+0x417>
callq  5470 <png_error@plt>
mov    %r15,%rdx
neg    %rdx
mov    -0x30(%rbp),%rdi
mov    0x10(%rdi),%esi
add    $0xffffffff,%esi
mov    %esi,%esi
imul   %rsi,%rdx
add    %rdx,%rcx
mov    %rcx,0x30(%rax)
mov    %r15,0x38(%rax)
test   %r12d,%r12d
jg     14610 <png_image_read_direct+0x5f0>
cmp    $0x2,%r14d
je     14676 <png_image_read_direct+0x656>
mov    -0x68(%rbp),%rcx
xor    %r12d,%r12d
jmpq   14702 <png_image_read_direct+0x6e2>
mov    %r13,%rsi
mov    %rdi,%r13
mov    %rax,%r12
mov    %rbx,%rdi
callq  50c0 <png_get_rowbytes@plt>
mov    %rax,%rsi
mov    %rbx,%rdi
callq  5800 <png_malloc@plt>
mov    %r13,%rdi
mov    %rax,%r13
mov    %r13,0x28(%r12)
lea    -0x122e(%rip),%rsi        # 13410 <png_image_read_composite>
mov    %r12,%rdx
callq  b250 <png_safe_execute>
movq   $0x0,0x28(%r12)
mov    %r13,%rsi
mov    %rbx,%rdi
mov    %rax,%r12
callq  5790 <png_free@plt>
mov    %r12,%rax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
mov    %r13,%rsi
mov    %rdi,%r13
mov    %rax,%r12
mov    %rbx,%rdi
callq  50c0 <png_get_rowbytes@plt>
mov    %rax,%rsi
mov    %rbx,%rdi
callq  5800 <png_malloc@plt>
mov    %r13,%rdi
mov    %rax,%r13
mov    %r13,0x28(%r12)
lea    -0xed4(%rip),%rsi        # 137d0 <png_image_read_background>
mov    %r12,%rdx
callq  b250 <png_safe_execute>
movq   $0x0,0x28(%r12)
mov    %r13,%rsi
mov    %rax,%r13
mov    %rbx,%rdi
callq  5790 <png_free@plt>
mov    %r13,%rax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
mov    %rbx,%rdi
mov    %r13,%rsi
mov    %r12,%rdx
callq  5600 <png_read_row@plt>
add    %r15,%r13
add    $0xffffffff,%r14d
test   %r14d,%r14d
jne    146dc <png_image_read_direct+0x6bc>
mov    -0x80(%rbp),%rcx
mov    -0x30(%rbp),%rdi
mov    -0x48(%rbp),%rax
add    $0xffffffff,%ecx
test   %ecx,%ecx
jns    14724 <png_image_read_direct+0x704>
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    $0x1,%eax
leaveq 
retq   
mov    0x10(%rdi),%r14d
mov    0x30(%rax),%r13
mov    %rcx,-0x80(%rbp)
jmp    146f1 <png_image_read_direct+0x6d1>
nopw   %cs:0x0(%rax,%rax,1)
nopl   0x0(%rax)

0000000000014740 <png_set_read_fn>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
test   %rdi,%rdi
jne    1474f <png_set_read_fn+0xf>
leaveq 
retq   
mov    %rsi,0x108(%rdi)
test   %rdx,%rdx
jne    1476b <png_set_read_fn+0x2b>
lea    0x5e(%rip),%rax        # 147c0 <png_default_read_data>
mov    %rax,0x100(%rdi)
jmp    14772 <png_set_read_fn+0x32>
mov    %rdx,0x100(%rdi)
mov    0xf8(%rdi),%rax
test   %rax,%rax
je     147a9 <png_set_read_fn+0x69>
movq   $0x0,0xf8(%rdi)
lea    0x19ab4(%rip),%rsi        # 2e244 <chunks_to_process.34+0x43f>
mov    %rdi,%rax
mov    %r15,-0x8(%rbp)
mov    %rdi,%r15
mov    %rax,%rdi
callq  5390 <png_warning@plt>
mov    %r15,%rdi
mov    -0x8(%rbp),%r15
movq   $0x0,0x290(%rdi)
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)

00000000000147c0 <png_default_read_data>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
test   %rdi,%rdi
jne    147cf <png_default_read_data+0xf>
leaveq 
retq   
mov    $0x1,%eax
mov    0x108(%rdi),%rcx
mov    %rdx,%r8
mov    %r15,-0x10(%rbp)
mov    %rdi,-0x8(%rbp)
mov    %rsi,%rdi
mov    %rax,%rsi
mov    %rdx,%r15
mov    %r8,%rdx
callq  5160 <fread@plt>
cmp    %r15,%rax
jne    14802 <png_default_read_data+0x42>
mov    -0x10(%rbp),%r15
leaveq 
retq   
lea    0x19a7f(%rip),%rsi        # 2e288 <chunks_to_process.34+0x483>
mov    -0x8(%rbp),%rdi
callq  5470 <png_error@plt>
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   (%rax)

0000000000014820 <png_read_data>:
push   %rbp
mov    %rsp,%rbp
mov    0x100(%rdi),%rax
test   %rax,%rax
jne    1483c <png_read_data+0x1c>
lea    0x19a5c(%rip),%rsi        # 2e293 <chunks_to_process.34+0x48e>
callq  5470 <png_error@plt>
callq  *%rax
leaveq 
retq   

0000000000014840 <png_set_expand>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x8(%rbp)
xor    %esi,%esi
mov    %rdi,%r15
callq  17780 <png_rtran_ok>
test   %eax,%eax
jne    14860 <png_set_expand+0x20>
mov    -0x8(%rbp),%r15
leaveq 
retq   
mov    0x134(%r15),%eax
or     $0x2001000,%eax
mov    %eax,0x134(%r15)
mov    -0x8(%rbp),%r15
leaveq 
retq   
nopl   0x0(%rax)

0000000000014880 <png_set_expand_gray_1_2_4_to_8>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x8(%rbp)
xor    %esi,%esi
mov    %rdi,%r15
callq  17780 <png_rtran_ok>
test   %eax,%eax
jne    148a0 <png_set_expand_gray_1_2_4_to_8+0x20>
mov    -0x8(%rbp),%r15
leaveq 
retq   
mov    0x134(%r15),%eax
or     $0x1000,%eax
mov    %eax,0x134(%r15)
mov    -0x8(%rbp),%r15
leaveq 
retq   
nopl   0x0(%rax)

00000000000148c0 <png_set_palette_to_rgb>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x8(%rbp)
xor    %esi,%esi
mov    %rdi,%r15
callq  17780 <png_rtran_ok>
test   %eax,%eax
jne    148e0 <png_set_palette_to_rgb+0x20>
mov    -0x8(%rbp),%r15
leaveq 
retq   
mov    0x134(%r15),%eax
or     $0x2001000,%eax
mov    %eax,0x134(%r15)
mov    -0x8(%rbp),%r15
leaveq 
retq   
nopl   0x0(%rax)

0000000000014900 <png_set_tRNS_to_alpha>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x8(%rbp)
xor    %esi,%esi
mov    %rdi,%r15
callq  17780 <png_rtran_ok>
test   %eax,%eax
jne    14920 <png_set_tRNS_to_alpha+0x20>
mov    -0x8(%rbp),%r15
leaveq 
retq   
mov    0x134(%r15),%eax
or     $0x2001000,%eax
mov    %eax,0x134(%r15)
mov    -0x8(%rbp),%r15
leaveq 
retq   
nopl   0x0(%rax)

0000000000014940 <png_set_expand_16>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x8(%rbp)
xor    %esi,%esi
mov    %rdi,%r15
callq  17780 <png_rtran_ok>
test   %eax,%eax
jne    14960 <png_set_expand_16+0x20>
mov    -0x8(%rbp),%r15
leaveq 
retq   
mov    0x134(%r15),%eax
or     $0x2001200,%eax
mov    %eax,0x134(%r15)
mov    -0x8(%rbp),%r15
leaveq 
retq   
nopl   0x0(%rax)

0000000000014980 <png_set_gray_to_rgb>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %rdi,-0x8(%rbp)
xor    %esi,%esi
callq  17780 <png_rtran_ok>
test   %eax,%eax
jne    14999 <png_set_gray_to_rgb+0x19>
leaveq 
retq   
mov    -0x8(%rbp),%rax
mov    %rax,%rdi
mov    %r15,-0x8(%rbp)
mov    %rax,%r15
callq  5440 <png_set_expand_gray_1_2_4_to_8@plt>
mov    0x134(%r15),%eax
or     $0x4000,%eax
mov    %eax,0x134(%r15)
mov    -0x8(%rbp),%r15
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)

00000000000149d0 <png_set_rgb_to_gray>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
movdqu %xmm1,-0x10(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %r13,-0x18(%rbp)
mov    %rsi,%r13
lea    0x198fd(%rip),%rsi        # 2e2f0 <chunks_to_process.34+0x4eb>
mov    %rdi,%r14
callq  69e0 <png_fixed>
mov    %rax,%r15
lea    0x19907(%rip),%rsi        # 2e30c <chunks_to_process.34+0x507>
mov    %r14,%rdi
movdqu -0x10(%rbp),%xmm0
callq  69e0 <png_fixed>
mov    %rax,%rcx
mov    %r15,%rdx
mov    %r13,%rsi
mov    %r14,%rdi
callq  55b0 <png_set_rgb_to_gray_fixed@plt>
mov    -0x18(%rbp),%r13
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   0x0(%rax)

0000000000014a40 <png_set_rgb_to_gray_fixed>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %rsi,-0x20(%rbp)
mov    %rdi,-0x18(%rbp)
mov    %rdx,-0x10(%rbp)
mov    %rcx,-0x8(%rbp)
mov    $0x1,%esi
callq  17780 <png_rtran_ok>
test   %eax,%eax
jne    14a68 <png_set_rgb_to_gray_fixed+0x28>
leaveq 
retq   
mov    -0x20(%rbp),%rax
cmp    $0x1,%eax
jle    14a92 <png_set_rgb_to_gray_fixed+0x52>
cmp    $0x2,%eax
je     14aa7 <png_set_rgb_to_gray_fixed+0x67>
cmp    $0x3,%eax
jne    14a97 <png_set_rgb_to_gray_fixed+0x57>
mov    -0x18(%rbp),%rcx
mov    0x134(%rcx),%eax
or     $0x200000,%eax
mov    %eax,0x134(%rcx)
jmp    14ad3 <png_set_rgb_to_gray_fixed+0x93>
cmp    $0x1,%eax
je     14abe <png_set_rgb_to_gray_fixed+0x7e>
lea    0x1988c(%rip),%rsi        # 2e32a <chunks_to_process.34+0x525>
mov    -0x18(%rbp),%rdi
callq  5470 <png_error@plt>
mov    -0x18(%rbp),%rcx
mov    0x134(%rcx),%eax
or     $0x400000,%eax
mov    %eax,0x134(%rcx)
jmp    14ad3 <png_set_rgb_to_gray_fixed+0x93>
mov    -0x18(%rbp),%rcx
mov    0x134(%rcx),%eax
or     $0x600000,%eax
mov    %eax,0x134(%rcx)
movzbl 0x267(%rcx),%eax
cmp    $0x3,%al
jne    14aef <png_set_rgb_to_gray_fixed+0xaf>
mov    0x134(%rcx),%eax
or     $0x1000,%eax
mov    %eax,0x134(%rcx)
mov    -0x10(%rbp),%rdx
test   %edx,%edx
jns    14b10 <png_set_rgb_to_gray_fixed+0xd0>
xor    %eax,%eax
mov    -0x8(%rbp),%rsi
test   %rax,%rax
jne    14b1f <png_set_rgb_to_gray_fixed+0xdf>
movzwl 0x3d2(%rcx),%eax
test   %ax,%ax
je     14b42 <png_set_rgb_to_gray_fixed+0x102>
leaveq 
retq   
mov    -0x8(%rbp),%rsi
test   %esi,%esi
jns    14b50 <png_set_rgb_to_gray_fixed+0x110>
mov    $0x1,%eax
jmp    14afd <png_set_rgb_to_gray_fixed+0xbd>
test   %esi,%esi
js     14b02 <png_set_rgb_to_gray_fixed+0xc2>
lea    0x19824(%rip),%rsi        # 2e34e <chunks_to_process.34+0x549>
mov    %rcx,%rdi
mov    %r15,-0x20(%rbp)
mov    %rcx,%r15
callq  b0f0 <png_app_warning>
mov    %r15,%rcx
mov    -0x20(%rbp),%r15
jmp    14b02 <png_set_rgb_to_gray_fixed+0xc2>
movzwl 0x3d4(%rcx),%eax
test   %ax,%ax
je     14b61 <png_set_rgb_to_gray_fixed+0x121>
leaveq 
retq   
lea    (%rdx,%rsi,1),%eax
cmp    $0x186a0,%eax
jle    14b75 <png_set_rgb_to_gray_fixed+0x135>
mov    $0x1,%eax
jmp    14afd <png_set_rgb_to_gray_fixed+0xbd>
movw   $0x1b38,0x3d2(%rcx)
movw   $0x5b8a,0x3d4(%rcx)
leaveq 
retq   
and    $0x1ffff,%edx
shl    $0xa,%edx
mov    $0xa7c5ac5,%edi
mov    %rdi,%rax
mul    %edx
shr    $0x7,%edx
mov    %dx,0x3d2(%rcx)
and    $0x1ffff,%esi
shl    $0xa,%esi
mov    %rdi,%rax
mul    %esi
shr    $0x7,%edx
mov    %dx,0x3d4(%rcx)
movb   $0x1,0x3d1(%rcx)
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

0000000000014bc0 <png_set_alpha_mode>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rsi,%r15
mov    %rdi,%r14
callq  17850 <convert_gamma_value>
mov    %rax,%rdx
mov    %r15,%rsi
mov    %r14,%rdi
callq  5640 <png_set_alpha_mode_fixed@plt>
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

0000000000014c00 <png_set_alpha_mode_fixed>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    %rdi,-0x20(%rbp)
mov    %rdx,-0x28(%rbp)
mov    %rsi,-0x18(%rbp)
xor    %esi,%esi
mov    %rsi,-0x10(%rbp)
callq  17780 <png_rtran_ok>
test   %eax,%eax
jne    14c25 <png_set_alpha_mode_fixed+0x25>
leaveq 
retq   
mov    $0x1,%edx
mov    %rdx,-0x8(%rbp)
mov    -0x20(%rbp),%rax
mov    %rax,%rdi
mov    %r15,-0x20(%rbp)
mov    %rax,%r15
mov    -0x28(%rbp),%rsi
callq  177f0 <translate_gamma_flags>
cmp    $0x3e7,%eax
jle    14c88 <png_set_alpha_mode_fixed+0x88>
cmp    $0x989680,%eax
jg     14c88 <png_set_alpha_mode_fixed+0x88>
mov    %rax,%rdi
mov    %r14,-0x28(%rbp)
mov    %rax,%r14
callq  8a40 <png_reciprocal>
mov    -0x18(%rbp),%rcx
cmp    $0x1,%ecx
jle    14c97 <png_set_alpha_mode_fixed+0x97>
cmp    $0x2,%ecx
je     14cdd <png_set_alpha_mode_fixed+0xdd>
cmp    $0x3,%ecx
je     14d0d <png_set_alpha_mode_fixed+0x10d>
mov    %r15,%rdi
lea    0x1971d(%rip),%rsi        # 2e3a0 <chunks_to_process.34+0x59b>
callq  5470 <png_error@plt>
mov    %r15,%rdi
lea    0x196eb(%rip),%rsi        # 2e37d <chunks_to_process.34+0x578>
callq  5470 <png_error@plt>
test   %ecx,%ecx
je     14d3d <png_set_alpha_mode_fixed+0x13d>
cmp    $0x1,%ecx
jne    14c79 <png_set_alpha_mode_fixed+0x79>
mov    0x134(%r15),%ecx
and    $0xff7fffff,%ecx
mov    %ecx,0x134(%r15)
mov    0x130(%r15),%ecx
and    $0xffffdfff,%ecx
mov    %ecx,0x130(%r15)
mov    $0x186a0,%r14d
pushq  -0x8(%rbp)
popq   -0x10(%rbp)
jmpq   14d65 <png_set_alpha_mode_fixed+0x165>
mov    0x134(%r15),%ecx
and    $0xff7fffff,%ecx
mov    %ecx,0x134(%r15)
mov    0x130(%r15),%ecx
or     $0x2000,%ecx
mov    %ecx,0x130(%r15)
pushq  -0x8(%rbp)
popq   -0x10(%rbp)
jmp    14d65 <png_set_alpha_mode_fixed+0x165>
mov    0x134(%r15),%ecx
or     $0x800000,%ecx
mov    %ecx,0x134(%r15)
mov    0x130(%r15),%ecx
and    $0xffffdfff,%ecx
mov    %ecx,0x130(%r15)
pushq  -0x8(%rbp)
popq   -0x10(%rbp)
jmp    14d65 <png_set_alpha_mode_fixed+0x165>
mov    0x134(%r15),%ecx
and    $0xff7fffff,%ecx
mov    %ecx,0x134(%r15)
mov    0x130(%r15),%ecx
and    $0xffffdfff,%ecx
mov    %ecx,0x130(%r15)
movslq 0x498(%r15),%rcx
test   %ecx,%ecx
jne    14d8b <png_set_alpha_mode_fixed+0x18b>
mov    %eax,0x498(%r15)
movzwl 0x4e2(%r15),%eax
or     $0x1,%ax
mov    %ax,0x4e2(%r15)
mov    %r14d,0x2a4(%r15)
mov    -0x10(%rbp),%rax
test   %eax,%eax
jg     14da4 <png_set_alpha_mode_fixed+0x1a4>
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r15
leaveq 
retq   
lea    0x27c(%r15),%rdi
mov    $0xa,%edx
xor    %esi,%esi
callq  5350 <memset@plt>
movslq 0x498(%r15),%rax
mov    %eax,0x278(%r15)
movb   $0x2,0x274(%r15)
mov    0x134(%r15),%eax
mov    %rax,%rcx
and    $0xfffffeff,%ecx
mov    %ecx,0x134(%r15)
mov    %rax,%rcx
and    $0x80,%ecx
test   %ecx,%ecx
jne    14e0c <png_set_alpha_mode_fixed+0x20c>
and    $0xfffffe7f,%eax
add    $0x80,%eax
mov    %eax,0x134(%r15)
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r15
leaveq 
retq   
mov    %r15,%rdi
lea    0x1959d(%rip),%rsi        # 2e3b3 <chunks_to_process.34+0x5ae>
callq  5470 <png_error@plt>
nopl   0x0(%rax,%rax,1)

0000000000014e20 <png_set_strip_alpha>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x8(%rbp)
xor    %esi,%esi
mov    %rdi,%r15
callq  17780 <png_rtran_ok>
test   %eax,%eax
jne    14e40 <png_set_strip_alpha+0x20>
mov    -0x8(%rbp),%r15
leaveq 
retq   
mov    0x134(%r15),%eax
or     $0x40000,%eax
mov    %eax,0x134(%r15)
mov    -0x8(%rbp),%r15
leaveq 
retq   
nopl   0x0(%rax)

0000000000014e60 <png_set_background>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %r12,-0x8(%rbp)
mov    %r13,-0x10(%rbp)
mov    %r14,-0x18(%rbp)
mov    %r15,-0x20(%rbp)
mov    %rdx,%r13
mov    %rsi,%r14
mov    %rcx,%r15
lea    0x1955e(%rip),%rsi        # 2e3e6 <chunks_to_process.34+0x5e1>
mov    %rdi,%r12
callq  69e0 <png_fixed>
mov    %r15,%rcx
mov    %r13,%rdx
mov    %r14,%rsi
mov    %r12,%rdi
mov    %rax,%r8
callq  5320 <png_set_background_fixed@plt>
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)

0000000000014ec0 <png_set_background_fixed>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    %rsi,-0x28(%rbp)
mov    %rdx,-0x20(%rbp)
mov    %rdi,-0x10(%rbp)
mov    %r8,-0x8(%rbp)
mov    %rcx,-0x18(%rbp)
xor    %esi,%esi
callq  17780 <png_rtran_ok>
test   %eax,%eax
jne    14ee9 <png_set_background_fixed+0x29>
leaveq 
retq   
mov    -0x28(%rbp),%rsi
test   %rsi,%rsi
jne    14ef4 <png_set_background_fixed+0x34>
leaveq 
retq   
mov    -0x20(%rbp),%rdx
test   %edx,%edx
je     14f6b <png_set_background_fixed+0xab>
mov    -0x10(%rbp),%rdi
mov    0x134(%rdi),%ecx
mov    %rcx,%rax
and    $0xff7bff7f,%eax
add    $0x40080,%eax
mov    %eax,0x134(%rdi)
mov    0x130(%rdi),%eax
and    $0xffffdfff,%eax
mov    %eax,0x130(%rdi)
mov    (%rsi),%rax
mov    %rax,0x27c(%rdi)
movzwl 0x8(%rsi),%eax
mov    -0x8(%rbp),%rsi
mov    %esi,0x278(%rdi)
mov    %dl,0x274(%rdi)
mov    %ax,0x284(%rdi)
mov    -0x18(%rbp),%rax
test   %eax,%eax
jne    14f7d <png_set_background_fixed+0xbd>
and    $0xff7bfe7f,%ecx
lea    0x40080(%rcx),%eax
mov    %eax,0x134(%rdi)
leaveq 
retq   
lea    0x19487(%rip),%rsi        # 2e3f9 <chunks_to_process.34+0x5f4>
mov    -0x10(%rbp),%rdi
callq  5390 <png_warning@plt>
leaveq 
retq   
and    $0xff7bfe7f,%ecx
lea    0x40180(%rcx),%eax
mov    %eax,0x134(%rdi)
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   0x0(%rax)

0000000000014fa0 <png_set_scale_16>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x8(%rbp)
xor    %esi,%esi
mov    %rdi,%r15
callq  17780 <png_rtran_ok>
test   %eax,%eax
jne    14fc0 <png_set_scale_16+0x20>
mov    -0x8(%rbp),%r15
leaveq 
retq   
mov    0x134(%r15),%eax
or     $0x4000000,%eax
mov    %eax,0x134(%r15)
mov    -0x8(%rbp),%r15
leaveq 
retq   
nopl   0x0(%rax)

0000000000014fe0 <png_set_strip_16>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x8(%rbp)
xor    %esi,%esi
mov    %rdi,%r15
callq  17780 <png_rtran_ok>
test   %eax,%eax
jne    15000 <png_set_strip_16+0x20>
mov    -0x8(%rbp),%r15
leaveq 
retq   
mov    0x134(%r15),%eax
or     $0x400,%eax
mov    %eax,0x134(%r15)
mov    -0x8(%rbp),%r15
leaveq 
retq   
nopl   0x0(%rax)

0000000000015020 <png_set_quantize>:
push   %rbp
mov    %rsp,%rbp
sub    $0xd0,%rsp
mov    %r15,-0x60(%rbp)
mov    %r9,-0xc8(%rbp)
mov    %rcx,-0xb8(%rbp)
mov    %rdx,-0xc0(%rbp)
mov    %r8,-0xb0(%rbp)
mov    %rsi,-0xa0(%rbp)
mov    %r14,%r15
mov    %r12,%r14
mov    %rdi,-0x68(%rbp)
xor    %esi,%esi
mov    %rdi,%r12
callq  17780 <png_rtran_ok>
test   %eax,%eax
jne    15076 <png_set_quantize+0x56>
mov    %r14,%r12
mov    %r15,%r14
mov    -0x60(%rbp),%r15
leaveq 
retq   
mov    0x134(%r12),%eax
or     $0x40,%eax
mov    %eax,0x134(%r12)
mov    -0xc8(%rbp),%rcx
test   %ecx,%ecx
je     150a6 <png_set_quantize+0x86>
mov    %r15,%rax
mov    %rbx,%rdx
mov    %r13,%r8
mov    -0xc0(%rbp),%r15
jmp    150fb <png_set_quantize+0xdb>
mov    -0xc0(%rbp),%rax
mov    %eax,%esi
mov    %r12,%rdi
mov    %r13,-0x80(%rbp)
mov    %r15,-0xa8(%rbp)
mov    %rcx,%r13
mov    %rax,%r15
callq  5800 <png_malloc@plt>
mov    %rax,0x380(%r12)
xor    %eax,%eax
jmp    150e5 <png_set_quantize+0xc5>
mov    0x380(%r12),%rdx
movslq %eax,%rcx
mov    %al,(%rdx,%rcx,1)
add    $0x1,%eax
cmp    %r15d,%eax
jl     150d4 <png_set_quantize+0xb4>
mov    %r13,%rcx
mov    %rbx,%rdx
mov    -0xa8(%rbp),%rax
mov    -0x80(%rbp),%r8
mov    -0xb8(%rbp),%r9
cmp    %r9d,%r15d
jg     15149 <png_set_quantize+0x129>
xor    %r13d,%r13d
mov    -0xa0(%rbp),%rbx
mov    %r15,-0x48(%rbp)
mov    0x250(%r12),%rsi
test   %rsi,%rsi
jne    1512a <png_set_quantize+0x10a>
mov    %rbx,0x250(%r12)
test   %ecx,%ecx
mov    %r15w,0x258(%r12)
jne    1519c <png_set_quantize+0x17c>
mov    %rdx,%rbx
mov    %r14,%r12
mov    %rax,%r14
mov    %r8,%r13
mov    -0x60(%rbp),%r15
leaveq 
retq   
mov    -0xb0(%rbp),%rbx
test   %rbx,%rbx
jne    151ed <png_set_quantize+0x1cd>
mov    %r15d,%ebx
mov    %r12,%rdi
mov    %rbx,%rsi
mov    %r8,-0x50(%rbp)
mov    %rax,-0x58(%rbp)
mov    %rdx,-0x40(%rbp)
mov    %r14,-0x48(%rbp)
mov    %r9,%r14
callq  5800 <png_malloc@plt>
mov    %rax,0x408(%r12)
mov    %rbx,%rsi
mov    %r12,%rdi
callq  5800 <png_malloc@plt>
mov    %rax,0x410(%r12)
xor    %eax,%eax
jmpq   15239 <png_set_quantize+0x219>
mov    $0x8000,%ecx
mov    %r12,%rdi
mov    %rcx,%rsi
mov    %r8,-0x18(%rbp)
mov    %rax,-0x20(%rbp)
mov    %rdx,-0x8(%rbp)
mov    %r14,-0x10(%rbp)
mov    %rcx,%r14
callq  5780 <png_calloc@plt>
mov    %rax,0x378(%r12)
mov    %r12,%rdi
mov    %r14,%rsi
callq  5800 <png_malloc@plt>
mov    %r14,%rdx
mov    %rax,%r14
mov    $0xff,%esi
mov    %r14,%rdi
callq  5350 <memset@plt>
mov    %r13,%r8
jmpq   152e0 <png_set_quantize+0x2c0>
mov    %r15d,%esi
mov    %r12,%rdi
mov    %r8,-0x70(%rbp)
mov    %rax,-0xb8(%rbp)
mov    %rdx,-0x58(%rbp)
mov    %r14,-0x68(%rbp)
mov    %r9,%r14
callq  5800 <png_malloc@plt>
mov    %rax,0x400(%r12)
xor    %eax,%eax
jmpq   1531b <png_set_quantize+0x2fb>
mov    0x408(%r12),%rcx
movslq %eax,%rdx
mov    %al,(%rcx,%rdx,1)
mov    0x410(%r12),%rcx
mov    %al,(%rcx,%rdx,1)
add    $0x1,%eax
cmp    %eax,%r15d
jg     1521d <png_set_quantize+0x1fd>
mov    $0x1808,%esi
mov    %r12,%rdi
callq  5780 <png_calloc@plt>
mov    %rax,%rbx
mov    %rbx,-0x80(%rbp)
mov    $0x60,%ecx
xor    %r13d,%r13d
mov    -0xa0(%rbp),%r8
mov    %r13,%rax
jmpq   15394 <png_set_quantize+0x374>
mov    %rax,%rsi
add    %r10d,%esi
add    %edx,%esi
mov    %rcx,%rdx
or     %ebx,%edx
movslq %edx,%rdi
movzbl (%rdi,%r14,1),%edx
cmp    %esi,%edx
jle    15292 <png_set_quantize+0x272>
mov    %sil,(%rdi,%r14,1)
mov    0x378(%r12),%rdx
mov    %r8b,(%rdi,%rdx,1)
add    $0x1,%ecx
cmp    $0x1f,%ecx
jle    15409 <png_set_quantize+0x3e9>
mov    -0xc8(%rbp),%rax
lea    0x1(%rax),%edi
mov    -0x40(%rbp),%rbx
mov    -0x38(%rbp),%rdx
mov    -0x30(%rbp),%rcx
cmp    $0x1f,%edi
jle    1541c <png_set_quantize+0x3fc>
mov    -0x50(%rbp),%rax
lea    0x1(%rax),%edi
mov    -0x28(%rbp),%rdx
cmp    $0x1f,%edi
jle    1542b <png_set_quantize+0x40b>
add    $0x1,%r8d
mov    -0x48(%rbp),%r15
mov    -0xa0(%rbp),%rbx
cmp    %r15d,%r8d
jl     1543a <png_set_quantize+0x41a>
mov    %r14,%rsi
mov    %r12,%rdi
callq  5790 <png_free@plt>
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x60(%rbp),%r15
leaveq 
retq   
mov    0x400(%r12),%rdx
movslq %eax,%rcx
mov    %al,(%rdx,%rcx,1)
add    $0x1,%eax
cmp    %eax,%r15d
jg     1530a <png_set_quantize+0x2ea>
mov    $0x1,%eax
lea    -0x1(%r15),%ecx
xor    %r13d,%r13d
jmpq   15472 <png_set_quantize+0x452>
mov    (%rsi),%r15
mov    %r15,-0xb0(%rbp)
mov    %r12,%rdi
callq  5790 <png_free@plt>
mov    %r15,%rsi
test   %rsi,%rsi
jne    15331 <png_set_quantize+0x311>
mov    -0x98(%rbp),%r15
mov    -0xb0(%rbp),%rax
movq   $0x0,(%rbx,%r14,8)
add    $0x1,%r13d
mov    %rax,-0xb0(%rbp)
cmp    $0x300,%r13d
jle    15483 <png_set_quantize+0x463>
mov    -0xa8(%rbp),%rcx
add    $0x60,%ecx
xor    %r13d,%r13d
mov    -0xa0(%rbp),%r8
mov    -0xb8(%rbp),%r14
mov    %rcx,-0xa8(%rbp)
cmp    %r15d,%r14d
jl     1549f <png_set_quantize+0x47f>
mov    %rbx,%rsi
mov    %r8,%rbx
mov    %r12,%rdi
callq  5790 <png_free@plt>
mov    0x410(%r12),%rsi
mov    %r12,%rdi
callq  5790 <png_free@plt>
mov    %r14,%r15
mov    0x408(%r12),%rsi
mov    %r12,%rdi
callq  5790 <png_free@plt>
movq   $0x0,0x410(%r12)
movq   $0x0,0x408(%r12)
mov    -0x48(%rbp),%r14
mov    -0x40(%rbp),%rdx
mov    -0x58(%rbp),%rax
mov    -0x50(%rbp),%r8
mov    -0xc8(%rbp),%rcx
jmpq   15111 <png_set_quantize+0xf1>
cmp    %r9d,%ecx
jg     154af <png_set_quantize+0x48f>
mov    %r9,%rdx
sub    %ecx,%edx
jmpq   154b5 <png_set_quantize+0x495>
cmp    %ecx,%edi
jg     154c5 <png_set_quantize+0x4a5>
sub    %edi,%ecx
jmpq   154c9 <png_set_quantize+0x4a9>
cmp    %edx,%edi
jg     154d9 <png_set_quantize+0x4b9>
sub    %edi,%edx
jmpq   154dd <png_set_quantize+0x4bd>
movslq %r8d,%rax
lea    (%rax,%rax,2),%rax
movzbl 0x1(%rbx,%rax,1),%ecx
shr    $0x3,%ecx
mov    %rcx,-0x30(%rbp)
movzbl (%rbx,%rax,1),%edx
shr    $0x3,%edx
mov    %rdx,-0x28(%rbp)
movzbl 0x2(%rbx,%rax,1),%r9d
shr    $0x3,%r9d
mov    %r13,%rdi
jmpq   152c8 <png_set_quantize+0x2a8>
add    $0xffffffff,%ecx
mov    $0x1,%eax
cmp    %ecx,%r14d
jg     1551e <png_set_quantize+0x4fe>
mov    %r13,%rdx
jmpq   1550d <png_set_quantize+0x4ed>
movslq %r13d,%r14
mov    (%rbx,%r14,8),%rsi
test   %rsi,%rsi
je     15359 <png_set_quantize+0x339>
mov    %r15,-0x98(%rbp)
jmpq   15346 <png_set_quantize+0x326>
lea    -0x1(%r15),%edx
mov    %rdx,-0x90(%rbp)
jmpq   1554b <png_set_quantize+0x52b>
mov    %rcx,%rdx
sub    %r9d,%edx
cmp    %eax,%edx
jl     15269 <png_set_quantize+0x249>
mov    %rdx,%rsi
jmpq   1526c <png_set_quantize+0x24c>
neg    %ecx
add    %edi,%ecx
cmp    %edx,%ecx
jl     1556f <png_set_quantize+0x54f>
mov    %rcx,%rax
jmpq   15572 <png_set_quantize+0x552>
neg    %edx
add    %edi,%edx
mov    %rdx,-0x38(%rbp)
mov    %rdi,%rbx
shl    $0xa,%ebx
mov    %rdi,-0x50(%rbp)
mov    %rbx,-0x40(%rbp)
mov    %r13,%rdi
jmpq   152b4 <png_set_quantize+0x294>
mov    %dil,(%r15,%r11,1)
mov    0x400(%r12),%rax
mov    %r10b,(%r8,%rax,1)
mov    %r9,%rdx
mov    %r13,%rax
cmp    %ecx,%edx
jl     1558d <png_set_quantize+0x56d>
test   %eax,%eax
jle    1546a <png_set_quantize+0x44a>
mov    $0x1,%eax
mov    -0xc8(%rbp),%r15
test   %r15d,%r15d
je     155c3 <png_set_quantize+0x5a3>
mov    -0xc0(%rbp),%rax
mov    %r13,%rcx
jmpq   155ed <png_set_quantize+0x5cd>
mov    -0x88(%rbp),%r13
mov    -0x90(%rbp),%rdx
cmp    %edx,%r13d
jge    15709 <png_set_quantize+0x6e9>
movslq %r13d,%rdx
lea    (%rdx,%rdx,2),%rdx
mov    %rdx,-0x78(%rbp)
lea    0x1(%r13),%r14d
mov    %r14,-0x88(%rbp)
jmpq   15663 <png_set_quantize+0x643>
mov    %rdx,%rax
mov    %rdi,%rsi
shl    $0x5,%esi
or     %esi,%ebx
lea    (%rcx,%rdx,1),%r10d
mov    %rdi,-0xc8(%rbp)
mov    %r13,%rcx
jmpq   15295 <png_set_quantize+0x275>
mov    0x400(%r12),%r15
lea    0x1(%rdx),%r9d
movslq %r9d,%r8
movzbl (%r8,%r15,1),%edi
movzwl (%rbx,%rdi,2),%esi
movslq %edx,%r11
movzbl (%r15,%r11,1),%r10d
movzwl (%rbx,%r10,2),%edx
cmp    %dx,%si
ja     154f7 <png_set_quantize+0x4d7>
mov    %r9,%rdx
jmpq   1550d <png_set_quantize+0x4ed>
mov    -0xc0(%rbp),%rcx
mov    %r13,%rdx
jmpq   15738 <png_set_quantize+0x718>
mov    0x400(%r12),%rdx
movslq %ecx,%rbx
movzbl (%rdx,%rbx,1),%edx
cmp    %edx,%r14d
jle    15753 <png_set_quantize+0x733>
add    $0x1,%ecx
cmp    %ecx,%r14d
jg     155d2 <png_set_quantize+0x5b2>
mov    -0xa0(%rbp),%rbx
mov    0x400(%r12),%rsi
mov    %r12,%rdi
callq  5790 <png_free@plt>
movq   $0x0,0x400(%r12)
mov    %r15,%rcx
mov    %r14,%r15
mov    -0x68(%rbp),%r14
mov    -0x58(%rbp),%rdx
mov    -0xb8(%rbp),%rax
mov    -0x70(%rbp),%r8
jmpq   15111 <png_set_quantize+0xf1>
movslq %r12d,%rdx
mov    (%rbx,%rdx,8),%rcx
mov    %rcx,(%rax)
mov    %r13b,0x8(%rax)
mov    %r14b,0x9(%rax)
mov    %rax,(%rbx,%rdx,8)
mov    -0x68(%rbp),%r12
mov    -0xa8(%rbp),%rcx
mov    -0x78(%rbp),%rdx
mov    -0xa0(%rbp),%r8
add    $0x1,%r14d
cmp    %r15d,%r14d
jge    156fe <png_set_quantize+0x6de>
movzbl (%r8,%rdx,1),%esi
movslq %r14d,%rdi
lea    (%rdi,%rdi,2),%rdi
movzbl (%r8,%rdi,1),%r9d
sub    %r9d,%esi
mov    %rsi,%r11
sar    $0x1f,%r11d
mov    %r11,%r9
xor    %esi,%r9d
movzbl 0x2(%r8,%rdx,1),%esi
movzbl 0x2(%r8,%rdi,1),%r10d
sub    %r10d,%esi
mov    %rsi,%r10
sar    $0x1f,%r10d
xor    %r10d,%esi
add    %esi,%r9d
movzbl 0x1(%r8,%rdx,1),%esi
movzbl 0x1(%r8,%rdi,1),%edi
sub    %edi,%esi
mov    %rsi,%rdi
sar    $0x1f,%edi
xor    %edi,%esi
add    %esi,%r9d
lea    (%r11,%rdi,1),%esi
add    %r10d,%esi
sub    %esi,%r9d
cmp    %ecx,%r9d
jg     1565f <png_set_quantize+0x63f>
mov    %r12,%rdi
mov    %r9,%r12
mov    $0x10,%esi
callq  5150 <png_malloc_warn@plt>
test   %rax,%rax
jne    15633 <png_set_quantize+0x613>
mov    -0x68(%rbp),%r12
mov    -0xa8(%rbp),%rcx
xor    %eax,%eax
mov    -0xa0(%rbp),%r8
test   %rax,%rax
jne    1553d <png_set_quantize+0x51d>
xor    %eax,%eax
test   %rax,%rax
jne    15793 <png_set_quantize+0x773>
xor    %eax,%eax
mov    %rax,%r13
jmpq   15365 <png_set_quantize+0x345>
mov    0x400(%r12),%rsi
movslq %edx,%r11
movzbl (%rsi,%r11,1),%esi
cmp    %esi,%r14d
jle    157b7 <png_set_quantize+0x797>
add    $0x1,%edx
cmp    %edx,%r14d
jg     1571c <png_set_quantize+0x6fc>
mov    -0xa0(%rbp),%rbx
mov    -0xc0(%rbp),%r15
mov    %r13,%r8
jmpq   1583d <png_set_quantize+0x81d>
add    $0xffffffff,%eax
movslq %eax,%rsi
mov    0x400(%r12),%rdx
movzbl (%rsi,%rdx,1),%edx
cmp    %edx,%r14d
jle    15753 <png_set_quantize+0x733>
lea    (%rsi,%rsi,2),%rdi
mov    -0xa0(%rbp),%r8
movzwl (%r8,%rdi,1),%edx
lea    (%rbx,%rbx,2),%rsi
mov    %dx,(%r8,%rsi,1)
movzbl 0x2(%r8,%rdi,1),%edx
mov    %dl,0x2(%r8,%rsi,1)
jmpq   155ea <png_set_quantize+0x5ca>
mov    %rax,-0x70(%rbp)
xor    %r13d,%r13d
mov    -0xc0(%rbp),%r14
mov    -0xb8(%rbp),%r11
mov    -0xc8(%rbp),%r10
mov    %r13,%rdx
jmpq   15865 <png_set_quantize+0x845>
add    $0xffffffff,%ecx
movslq %ecx,%r10
mov    0x400(%r12),%rsi
movzbl (%r10,%rsi,1),%esi
cmp    %esi,%r14d
jle    157b7 <png_set_quantize+0x797>
lea    (%r11,%r11,2),%rbx
mov    -0xa0(%rbp),%r15
movzwl (%r15,%rbx,1),%esi
lea    (%r10,%r10,2),%r9
movzwl (%r15,%r9,1),%r8d
mov    %si,(%r15,%r9,1)
movzbl 0x2(%r15,%rbx,1),%edi
movzbl 0x2(%r15,%r9,1),%esi
mov    %dil,0x2(%r15,%r9,1)
mov    %r8w,(%r15,%rbx,1)
mov    %sil,0x2(%r15,%rbx,1)
mov    0x380(%r12),%rsi
mov    %dl,(%r10,%rsi,1)
mov    0x380(%r12),%rsi
mov    %cl,(%rsi,%r11,1)
jmpq   15735 <png_set_quantize+0x715>
mov    0x380(%r12),%rcx
movslq %r8d,%rdi
movzbl (%rcx,%rdi,1),%ecx
cmp    %ecx,%r14d
jle    15872 <png_set_quantize+0x852>
add    $0x1,%r8d
cmp    %r8d,%r15d
jg     15825 <png_set_quantize+0x805>
mov    -0xc8(%rbp),%r15
jmpq   155f9 <png_set_quantize+0x5d9>
cmp    %r15d,%r11d
jge    158c9 <png_set_quantize+0x8a9>
mov    -0x78(%rbp),%rdx
mov    -0x80(%rbp),%rbx
mov    -0xa8(%rbp),%rcx
add    $0x1,%edx
cmp    %ecx,%edx
jle    158d6 <png_set_quantize+0x8b6>
mov    -0x70(%rbp),%rax
jmpq   15365 <png_set_quantize+0x345>
lea    (%rcx,%rcx,2),%r11
movzbl (%rbx,%r11,1),%ecx
movzbl (%rbx),%edx
sub    %edx,%ecx
mov    %rcx,%rdx
sar    $0x1f,%edx
xor    %edx,%ecx
sub    %edx,%ecx
movzbl 0x1(%rbx,%r11,1),%edx
movzbl 0x1(%rbx),%esi
sub    %esi,%edx
mov    %rdx,%rsi
sar    $0x1f,%esi
xor    %esi,%edx
sub    %esi,%edx
add    %ecx,%edx
movzbl 0x2(%rbx,%r11,1),%ecx
movzbl 0x2(%rbx),%esi
sub    %esi,%ecx
mov    %rcx,%rsi
sar    $0x1f,%esi
xor    %esi,%ecx
sub    %esi,%ecx
add    %edx,%ecx
mov    %rdi,-0xc0(%rbp)
mov    %r13,%rdx
jmpq   15956 <png_set_quantize+0x936>
mov    -0x80(%rbp),%rbx
mov    -0x70(%rbp),%rax
jmpq   15365 <png_set_quantize+0x345>
movslq %edx,%rax
mov    (%rbx,%rax,8),%rax
test   %rax,%rax
je     15862 <png_set_quantize+0x842>
mov    %rdx,-0x78(%rbp)
jmpq   15a41 <png_set_quantize+0xa21>
movzbl (%rbx,%r11,1),%esi
movslq %eax,%rdi
lea    (%rdi,%rdi,2),%r10
movzbl (%rbx,%r10,1),%edi
sub    %edi,%esi
mov    %rsi,%r9
sar    $0x1f,%r9d
mov    %r9,%rdi
xor    %esi,%edi
sub    %r9d,%edi
movzbl 0x1(%rbx,%r11,1),%esi
movzbl 0x1(%rbx,%r10,1),%r9d
sub    %r9d,%esi
mov    %rsi,%r9
sar    $0x1f,%r9d
xor    %r9d,%esi
sub    %r9d,%esi
add    %esi,%edi
movzbl 0x2(%rbx,%r11,1),%esi
movzbl 0x2(%rbx,%r10,1),%r9d
sub    %r9d,%esi
mov    %rsi,%r9
sar    $0x1f,%r9d
xor    %r9d,%esi
sub    %r9d,%esi
add    %edi,%esi
cmp    %esi,%ecx
jle    15953 <png_set_quantize+0x933>
mov    %rsi,%rcx
mov    %rax,%rdx
add    $0x1,%eax
cmp    %eax,%r14d
jg     158eb <png_set_quantize+0x8cb>
mov    0x380(%r12),%rax
mov    -0xc0(%rbp),%rcx
mov    %dl,(%rax,%rcx,1)
mov    $0x1,%eax
jmpq   15839 <png_set_quantize+0x819>
mov    0x408(%r12),%r9
movzbl 0x0(%r13,%r9,1),%esi
mov    0x380(%r12),%rdi
movslq %eax,%rcx
movzbl (%rdi,%rcx,1),%edx
cmp    %dl,%sil
jne    159a1 <png_set_quantize+0x981>
movzbl (%r9,%rbx,1),%edx
mov    %dl,(%rdi,%rcx,1)
add    0x380(%r12),%rcx
movzbl (%rcx),%edx
cmp    %r15d,%edx
jne    159c1 <png_set_quantize+0x9a1>
mov    0x408(%r12),%rdx
movzbl 0x0(%r13,%rdx,1),%edx
mov    %dl,(%rcx)
add    $0x1,%eax
cmp    %eax,%r14d
jg     15977 <png_set_quantize+0x957>
mov    -0x98(%rbp),%rax
mov    -0x88(%rbp),%rcx
mov    -0x90(%rbp),%rdx
mov    0x408(%r12),%rbx
movzbl 0x0(%r13,%rbx,1),%edi
mov    0x410(%r12),%rsi
movzbl (%rdx,%rsi,1),%esi
mov    %dil,(%rbx,%rsi,1)
mov    0x410(%r12),%rbx
movzbl (%rdx,%rbx,1),%edi
mov    0x408(%r12),%rsi
movzbl 0x0(%r13,%rsi,1),%esi
mov    %dil,(%rbx,%rsi,1)
mov    0x408(%r12),%rsi
mov    %r15b,0x0(%r13,%rsi,1)
mov    0x410(%r12),%rsi
mov    %cl,(%rdx,%rsi,1)
xor    %r13d,%r13d
cmp    %r15d,%r11d
jge    1584e <png_set_quantize+0x82e>
mov    (%rax),%rax
test   %rax,%rax
je     1584e <png_set_quantize+0x82e>
movzbl 0x8(%rax),%esi
mov    0x408(%r12),%rbx
movzbl (%rsi,%rbx,1),%ecx
cmp    %ecx,%r15d
jle    15a35 <png_set_quantize+0xa15>
movzbl 0x9(%rax),%ecx
movzbl (%rcx,%rbx,1),%edx
cmp    %edx,%r15d
jle    15a35 <png_set_quantize+0xa15>
mov    %r15,%rdx
and    $0x1,%edx
test   %edx,%edx
jle    15a7f <png_set_quantize+0xa5f>
mov    %rsi,%rdx
mov    %rcx,%rsi
mov    %rdx,%rcx
test   %r10d,%r10d
lea    -0x1(%r15),%r15d
movslq %r15d,%rdx
lea    (%rdx,%rdx,2),%r9
movzwl (%r8,%r9,1),%edi
movslq %ecx,%r13
movzbl (%rbx,%r13,1),%ebx
lea    (%rbx,%rbx,2),%rbx
mov    %di,(%r8,%rbx,1)
movzbl 0x2(%r8,%r9,1),%edi
mov    %dil,0x2(%r8,%rbx,1)
jne    159de <png_set_quantize+0x9be>
movslq %esi,%rbx
mov    %rdx,-0x90(%rbp)
mov    %rcx,-0x88(%rbp)
mov    %rax,-0x98(%rbp)
xor    %eax,%eax
jmpq   159c4 <png_set_quantize+0x9a4>
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

0000000000015ae0 <png_set_gamma>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
movdqu %xmm1,-0x10(%rbp)
mov    %r15,-0x20(%rbp)
mov    %r14,-0x18(%rbp)
mov    %rdi,%r14
callq  17850 <convert_gamma_value>
mov    %rax,%r15
mov    %r14,%rdi
movdqu -0x10(%rbp),%xmm0
callq  17850 <convert_gamma_value>
mov    %rax,%rdx
mov    %r15,%rsi
mov    %r14,%rdi
callq  52c0 <png_set_gamma_fixed@plt>
mov    -0x18(%rbp),%r14
mov    -0x20(%rbp),%r15
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)

0000000000015b30 <png_set_gamma_fixed>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %rdi,-0x10(%rbp)
mov    %rsi,-0x18(%rbp)
mov    %rdx,-0x8(%rbp)
xor    %esi,%esi
callq  17780 <png_rtran_ok>
test   %eax,%eax
jne    15b51 <png_set_gamma_fixed+0x21>
leaveq 
retq   
mov    $0x1,%edx
mov    -0x10(%rbp),%rax
mov    %rax,%rdi
mov    %r15,-0x10(%rbp)
mov    %rax,%r15
mov    -0x18(%rbp),%rsi
callq  177f0 <translate_gamma_flags>
mov    %r15,%rdi
mov    %r14,-0x18(%rbp)
mov    %rax,%r14
xor    %edx,%edx
mov    -0x8(%rbp),%rsi
callq  177f0 <translate_gamma_flags>
test   %eax,%eax
jle    15bb7 <png_set_gamma_fixed+0x87>
test   %r14d,%r14d
jle    15bc6 <png_set_gamma_fixed+0x96>
mov    %eax,0x498(%r15)
movzwl 0x4e2(%r15),%eax
or     $0x1,%ax
mov    %ax,0x4e2(%r15)
mov    %r14d,0x2a4(%r15)
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r15
leaveq 
retq   
mov    %r15,%rdi
lea    0x18869(%rip),%rsi        # 2e42a <chunks_to_process.34+0x625>
callq  5470 <png_error@plt>
mov    %r15,%rdi
lea    0x1887e(%rip),%rsi        # 2e44e <chunks_to_process.34+0x649>
callq  5470 <png_error@plt>
data16 nopw %cs:0x0(%rax,%rax,1)

0000000000015be0 <png_set_crc_action>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
test   %rdi,%rdi
jne    15bef <png_set_crc_action+0xf>
leaveq 
retq   
cmp    $0x3,%esi
jle    15c00 <png_set_crc_action+0x20>
cmp    $0x4,%esi
je     15c22 <png_set_crc_action+0x42>
cmp    $0x5,%esi
je     15c74 <png_set_crc_action+0x94>
jmp    15c63 <png_set_crc_action+0x83>
cmp    $0x2,%esi
je     15c35 <png_set_crc_action+0x55>
cmp    $0x3,%esi
jne    15c63 <png_set_crc_action+0x83>
mov    0x130(%rdi),%eax
and    $0xfffff3ff,%eax
add    $0x400,%eax
mov    %eax,0x130(%rdi)
jmp    15c74 <png_set_crc_action+0x94>
mov    0x130(%rdi),%eax
or     $0xc00,%eax
mov    %eax,0x130(%rdi)
jmp    15c74 <png_set_crc_action+0x94>
lea    0x18838(%rip),%rsi        # 2e474 <chunks_to_process.34+0x66f>
mov    %rdi,%rax
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rdi,%r14
mov    %rax,%rdi
mov    %rdx,%r15
callq  5390 <png_warning@plt>
mov    %r15,%rdx
mov    %r14,%rdi
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
mov    0x130(%rdi),%eax
and    $0xfffff3ff,%eax
mov    %eax,0x130(%rdi)
cmp    $0x3,%edx
jle    15c85 <png_set_crc_action+0xa5>
cmp    $0x4,%edx
je     15ca2 <png_set_crc_action+0xc2>
cmp    $0x5,%edx
jne    15c8f <png_set_crc_action+0xaf>
leaveq 
retq   
cmp    $0x1,%edx
je     15cb5 <png_set_crc_action+0xd5>
cmp    $0x3,%edx
je     15ccd <png_set_crc_action+0xed>
mov    0x130(%rdi),%eax
and    $0xfffffcff,%eax
mov    %eax,0x130(%rdi)
leaveq 
retq   
mov    0x130(%rdi),%eax
or     $0x300,%eax
mov    %eax,0x130(%rdi)
leaveq 
retq   
mov    0x130(%rdi),%eax
and    $0xfffffcff,%eax
add    $0x200,%eax
mov    %eax,0x130(%rdi)
leaveq 
retq   
mov    0x130(%rdi),%eax
and    $0xfffffcff,%eax
add    $0x100,%eax
mov    %eax,0x130(%rdi)
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)

0000000000015cf0 <png_set_read_user_transform_fn>:
push   %rbp
mov    %rsp,%rbp
mov    0x134(%rdi),%eax
or     $0x100000,%eax
mov    %eax,0x134(%rdi)
mov    %rsi,0x110(%rdi)
leaveq 
retq   
xchg   %ax,%ax

0000000000015d10 <png_read_transform_info>:
push   %rbp
mov    %rsp,%rbp
mov    0x134(%rdi),%eax
mov    %rax,%rcx
and    $0x1000,%ecx
test   %ecx,%ecx
jne    15df1 <png_read_transform_info+0xe1>
mov    0x134(%rdi),%eax
and    $0x80,%eax
test   %eax,%eax
je     15d56 <png_read_transform_info+0x46>
mov    0x27c(%rdi),%rax
mov    %rax,0xca(%rsi)
movzwl 0x284(%rdi),%eax
mov    %ax,0xd2(%rsi)
movslq 0x498(%rdi),%rax
mov    %eax,0x34(%rsi)
movzbl 0x24(%rsi),%eax
cmp    $0x10,%al
je     15e25 <png_read_transform_info+0x115>
mov    0x134(%rdi),%eax
and    $0x4000,%eax
test   %eax,%eax
je     15d84 <png_read_transform_info+0x74>
movzbl 0x25(%rsi),%eax
or     $0x2,%al
mov    %al,0x25(%rsi)
mov    0x134(%rdi),%eax
and    $0x600000,%eax
test   %eax,%eax
je     15d9c <png_read_transform_info+0x8c>
movzbl 0x25(%rsi),%eax
and    $0xfd,%al
mov    %al,0x25(%rsi)
mov    0x134(%rdi),%eax
and    $0x40,%eax
test   %eax,%eax
jne    15e54 <png_read_transform_info+0x144>
mov    0x134(%rdi),%eax
and    $0x200,%eax
test   %eax,%eax
jne    15e89 <png_read_transform_info+0x179>
mov    0x134(%rdi),%eax
and    $0x4,%eax
test   %eax,%eax
jne    15eaa <png_read_transform_info+0x19a>
movzbl 0x25(%rsi),%eax
cmp    $0x3,%al
je     15ebf <png_read_transform_info+0x1af>
and    $0x2,%eax
test   %eax,%eax
jg     15f43 <png_read_transform_info+0x233>
movb   $0x1,0x29(%rsi)
jmpq   15ec3 <png_read_transform_info+0x1b3>
movzbl 0x25(%rsi),%ecx
cmp    $0x3,%cl
je     15f4c <png_read_transform_info+0x23c>
movzwl 0x260(%rdi),%edx
test   %dx,%dx
jne    15f66 <png_read_transform_info+0x256>
movzbl 0x24(%rsi),%eax
cmp    $0x7,%al
ja     15e1a <png_read_transform_info+0x10a>
movb   $0x8,0x24(%rsi)
movw   $0x0,0x22(%rsi)
jmpq   15d2b <png_read_transform_info+0x1b>
mov    0x134(%rdi),%eax
and    $0x4000000,%eax
test   %eax,%eax
je     15e38 <png_read_transform_info+0x128>
movb   $0x8,0x24(%rsi)
mov    0x134(%rdi),%eax
and    $0x400,%eax
test   %eax,%eax
je     15d6c <png_read_transform_info+0x5c>
movb   $0x8,0x24(%rsi)
jmpq   15d6c <png_read_transform_info+0x5c>
movzbl 0x25(%rsi),%eax
cmp    $0x2,%al
je     15e64 <png_read_transform_info+0x154>
cmp    $0x6,%al
jne    15dad <png_read_transform_info+0x9d>
mov    0x378(%rdi),%rax
test   %rax,%rax
je     15dad <png_read_transform_info+0x9d>
movzbl 0x24(%rsi),%eax
cmp    $0x8,%al
jne    15dad <png_read_transform_info+0x9d>
movb   $0x3,0x25(%rsi)
jmpq   15dad <png_read_transform_info+0x9d>
movzbl 0x24(%rsi),%eax
cmp    $0x8,%al
jne    15dc0 <png_read_transform_info+0xb0>
movzbl 0x25(%rsi),%eax
cmp    $0x3,%al
je     15dc0 <png_read_transform_info+0xb0>
movb   $0x10,0x24(%rsi)
jmpq   15dc0 <png_read_transform_info+0xb0>
movzbl 0x24(%rsi),%eax
cmp    $0x7,%al
ja     15dd1 <png_read_transform_info+0xc1>
movb   $0x8,0x24(%rsi)
jmpq   15dd1 <png_read_transform_info+0xc1>
movb   $0x1,0x29(%rsi)
mov    0x134(%rdi),%eax
and    $0x40000,%eax
test   %eax,%eax
je     15ee1 <png_read_transform_info+0x1d1>
movzbl 0x25(%rsi),%eax
and    $0xfb,%al
mov    %al,0x25(%rsi)
movw   $0x0,0x22(%rsi)
movzbl 0x25(%rsi),%eax
and    $0x4,%eax
test   %eax,%eax
jle    15ef6 <png_read_transform_info+0x1e6>
movzbl 0x29(%rsi),%eax
add    $0x1,%eax
mov    %al,0x29(%rsi)
mov    0x134(%rdi),%eax
and    $0x8000,%eax
test   %eax,%eax
jne    15f7e <png_read_transform_info+0x26e>
mov    0x134(%rdi),%eax
and    $0x100000,%eax
test   %eax,%eax
jne    15fb7 <png_read_transform_info+0x2a7>
movzbl 0x24(%rsi),%ecx
movzbl 0x29(%rsi),%eax
imul   %cl
mov    %al,0x2a(%rsi)
cmp    $0x7,%al
ja     15fdc <png_read_transform_info+0x2cc>
movzbl %al,%eax
mov    (%rsi),%ecx
imul   %rcx,%rax
add    $0x7,%rax
shr    $0x3,%rax
jmpq   15fe9 <png_read_transform_info+0x2d9>
movb   $0x3,0x29(%rsi)
jmpq   15ec3 <png_read_transform_info+0x1b3>
movzwl 0x260(%rdi),%eax
test   %ax,%ax
jne    15ff6 <png_read_transform_info+0x2e6>
mov    $0x2,%eax
jmpq   15ffb <png_read_transform_info+0x2eb>
and    $0x2000000,%eax
test   %eax,%eax
je     15e0e <png_read_transform_info+0xfe>
or     $0x4,%cl
mov    %cl,0x25(%rsi)
jmpq   15e0e <png_read_transform_info+0xfe>
movzbl 0x25(%rsi),%ecx
cmp    $0x2,%cl
je     15f8f <png_read_transform_info+0x27f>
test   %cl,%cl
jne    15f05 <png_read_transform_info+0x1f5>
movzbl 0x29(%rsi),%eax
add    $0x1,%eax
mov    %al,0x29(%rsi)
mov    0x134(%rdi),%eax
and    $0x1000000,%eax
test   %eax,%eax
je     15f05 <png_read_transform_info+0x1f5>
or     $0x4,%cl
mov    %cl,0x25(%rsi)
jmpq   15f05 <png_read_transform_info+0x1f5>
movzbl 0x128(%rdi),%eax
test   %al,%al
je     15fc5 <png_read_transform_info+0x2b5>
mov    %al,0x24(%rsi)
movzbl 0x129(%rdi),%eax
test   %al,%al
je     15f18 <png_read_transform_info+0x208>
mov    %al,0x29(%rsi)
jmpq   15f18 <png_read_transform_info+0x208>
movzbl %al,%eax
shr    $0x3,%rax
mov    (%rsi),%ecx
imul   %rcx,%rax
mov    %rax,0x10(%rsi)
mov    %rax,0x240(%rdi)
leaveq 
retq   
mov    $0x6,%eax
movb   $0x8,0x24(%rsi)
movw   $0x0,0x22(%rsi)
mov    %al,0x25(%rsi)
mov    0x250(%rdi),%rax
test   %rax,%rax
jne    15d2b <png_read_transform_info+0x1b>
lea    0x1847e(%rip),%rsi        # 2e49d <chunks_to_process.34+0x698>
callq  5470 <png_error@plt>
data16 nopw %cs:0x0(%rax,%rax,1)
nop

0000000000016030 <png_do_read_transformations>:
push   %rbp
mov    %rsp,%rbp
sub    $0x40,%rsp
mov    %r14,-0x30(%rbp)
mov    %r15,-0x38(%rbp)
mov    0x228(%rdi),%r8
test   %r8,%r8
je     163b2 <png_do_read_transformations+0x382>
mov    0x130(%rdi),%eax
mov    %rax,%rcx
and    $0x4000,%ecx
test   %ecx,%ecx
jne    163be <png_do_read_transformations+0x38e>
xor    %edx,%edx
mov    0x134(%rdi),%eax
mov    %rax,%rcx
and    $0x1000,%ecx
test   %ecx,%ecx
jne    163d5 <png_do_read_transformations+0x3a5>
mov    %r14,%rcx
mov    %rsi,%r14
mov    %r15,%r8
mov    %r13,%r15
mov    %r12,%r13
mov    %rbx,%r12
mov    %rdi,%rbx
mov    0x134(%rbx),%eax
mov    %rax,%rsi
and    $0x40000,%esi
test   %esi,%esi
jne    16431 <png_do_read_transformations+0x401>
mov    0x134(%rbx),%eax
and    $0x600000,%eax
test   %eax,%eax
jne    16483 <png_do_read_transformations+0x453>
mov    0x134(%rbx),%eax
and    $0x4000,%eax
test   %eax,%eax
jne    164bf <png_do_read_transformations+0x48f>
mov    0x134(%rbx),%eax
and    $0x80,%eax
test   %eax,%eax
je     16110 <png_do_read_transformations+0xe0>
mov    0x228(%rbx),%rsi
add    $0x1,%rsi
mov    %r14,%rdi
mov    %rbx,%rax
mov    %r15,-0x10(%rbp)
mov    %rdx,%r15
mov    %rax,%rdx
callq  18b30 <png_do_compose>
mov    %r15,%rdx
mov    -0x38(%rbp),%r8
mov    -0x30(%rbp),%rcx
mov    -0x10(%rbp),%r15
mov    0x134(%rbx),%eax
mov    %rax,%rsi
and    $0x2000,%esi
test   %esi,%esi
jne    16500 <png_do_read_transformations+0x4d0>
mov    0x134(%rbx),%eax
mov    %rax,%rsi
and    $0x40000,%esi
test   %esi,%esi
jne    16561 <png_do_read_transformations+0x531>
mov    0x134(%rbx),%eax
and    $0x800000,%eax
test   %eax,%eax
jne    1659f <png_do_read_transformations+0x56f>
mov    0x134(%rbx),%eax
and    $0x4000000,%eax
test   %eax,%eax
je     1617b <png_do_read_transformations+0x14b>
mov    0x228(%rbx),%rsi
add    $0x1,%rsi
mov    %r14,%rdi
callq  17ec0 <png_do_scale_16_to_8>
mov    -0x38(%rbp),%r8
mov    -0x30(%rbp),%rcx
mov    0x134(%rbx),%eax
and    $0x400,%eax
test   %eax,%eax
je     161a5 <png_do_read_transformations+0x175>
mov    0x228(%rbx),%rsi
add    $0x1,%rsi
mov    %r14,%rdi
callq  17f30 <png_do_chop>
mov    -0x38(%rbp),%r8
mov    -0x30(%rbp),%rcx
mov    0x134(%rbx),%eax
and    $0x40,%eax
test   %eax,%eax
jne    165d2 <png_do_read_transformations+0x5a2>
mov    0x134(%rbx),%eax
and    $0x200,%eax
test   %eax,%eax
je     161e0 <png_do_read_transformations+0x1b0>
mov    0x228(%rbx),%rsi
add    $0x1,%rsi
mov    %r14,%rdi
callq  1add0 <png_do_expand_16>
mov    -0x38(%rbp),%r8
mov    -0x30(%rbp),%rcx
mov    0x134(%rbx),%eax
and    $0x4000,%eax
test   %eax,%eax
jne    1660d <png_do_read_transformations+0x5dd>
mov    0x134(%rbx),%eax
and    $0x20,%eax
test   %eax,%eax
je     1621b <png_do_read_transformations+0x1eb>
mov    0x228(%rbx),%rsi
add    $0x1,%rsi
mov    %r14,%rdi
callq  23a50 <png_do_invert>
mov    -0x38(%rbp),%r8
mov    -0x30(%rbp),%rcx
mov    0x134(%rbx),%eax
and    $0x80000,%eax
test   %eax,%eax
je     16245 <png_do_read_transformations+0x215>
mov    0x228(%rbx),%rsi
add    $0x1,%rsi
mov    %r14,%rdi
callq  18090 <png_do_read_invert_alpha>
mov    -0x38(%rbp),%r8
mov    -0x30(%rbp),%rcx
mov    0x134(%rbx),%eax
and    $0x8,%eax
test   %eax,%eax
je     16274 <png_do_read_transformations+0x244>
mov    0x228(%rbx),%rsi
add    $0x1,%rsi
lea    0x2dd(%rbx),%rdx
mov    %r14,%rdi
callq  17ce0 <png_do_unshift>
mov    -0x38(%rbp),%r8
mov    -0x30(%rbp),%rcx
mov    0x134(%rbx),%eax
and    $0x4,%eax
test   %eax,%eax
je     1629c <png_do_read_transformations+0x26c>
mov    0x228(%rbx),%rsi
add    $0x1,%rsi
mov    %r14,%rdi
callq  17ba0 <png_do_unpack>
mov    -0x38(%rbp),%r8
mov    -0x30(%rbp),%rcx
movzbl 0x10(%r14),%eax
cmp    $0x3,%al
je     16640 <png_do_read_transformations+0x610>
mov    0x134(%rbx),%eax
and    $0x1,%eax
test   %eax,%eax
je     162d1 <png_do_read_transformations+0x2a1>
mov    0x228(%rbx),%rsi
add    $0x1,%rsi
mov    %r14,%rdi
callq  23ae0 <png_do_bgr>
mov    -0x38(%rbp),%r8
mov    -0x30(%rbp),%rcx
mov    0x134(%rbx),%eax
and    $0x10000,%eax
test   %eax,%eax
je     162fb <png_do_read_transformations+0x2cb>
mov    0x228(%rbx),%rsi
add    $0x1,%rsi
mov    %r14,%rdi
callq  239f0 <png_do_packswap>
mov    -0x38(%rbp),%r8
mov    -0x30(%rbp),%rcx
mov    0x134(%rbx),%eax
and    $0x8000,%eax
test   %eax,%eax
je     16332 <png_do_read_transformations+0x302>
mov    0x228(%rbx),%rsi
add    $0x1,%rsi
movzwl 0x272(%rbx),%edx
mov    0x130(%rbx),%ecx
mov    %r14,%rdi
callq  18150 <png_do_read_filler>
mov    -0x38(%rbp),%r8
mov    -0x30(%rbp),%rcx
mov    0x134(%rbx),%eax
and    $0x20000,%eax
test   %eax,%eax
je     1635c <png_do_read_transformations+0x32c>
mov    0x228(%rbx),%rsi
add    $0x1,%rsi
mov    %r14,%rdi
callq  17f80 <png_do_read_swap_alpha>
mov    -0x38(%rbp),%r8
mov    -0x30(%rbp),%rcx
mov    0x134(%rbx),%eax
and    $0x10,%eax
test   %eax,%eax
je     1638e <png_do_read_transformations+0x35e>
mov    0x228(%rbx),%rsi
add    $0x1,%rsi
mov    %r14,%rdi
mov    %r14,-0x8(%rbp)
mov    %rcx,%r14
callq  239b0 <png_do_swap>
mov    %r14,%rcx
mov    -0x8(%rbp),%r14
mov    -0x38(%rbp),%r8
mov    0x134(%rbx),%eax
and    $0x100000,%eax
test   %eax,%eax
jne    16667 <png_do_read_transformations+0x637>
mov    %r12,%rbx
mov    %r13,%r12
mov    %r15,%r13
mov    %r8,%r15
mov    %rcx,%r14
leaveq 
retq   
lea    0x18105(%rip),%rsi        # 2e4be <chunks_to_process.34+0x6b9>
callq  5470 <png_error@plt>
and    $0x40,%eax
test   %eax,%eax
jne    16067 <png_do_read_transformations+0x37>
lea    0x180fe(%rip),%rsi        # 2e4ce <chunks_to_process.34+0x6c9>
callq  5470 <png_error@plt>
movzbl 0x10(%rsi),%ecx
cmp    $0x3,%cl
je     166db <png_do_read_transformations+0x6ab>
movzwl 0x260(%rdi),%ecx
test   %cx,%cx
jne    1672d <png_do_read_transformations+0x6fd>
add    $0x1,%r8
mov    %rsi,%rax
mov    %rdx,%rcx
mov    %r13,-0x28(%rbp)
mov    %r12,%r13
mov    %rbx,%r12
mov    %rdi,%rbx
mov    %rax,%rdi
mov    %rsi,%r14
mov    %r8,%rsi
mov    %rdx,%r15
mov    %rcx,%rdx
callq  1a870 <png_do_expand>
mov    %r15,%rdx
mov    -0x38(%rbp),%r8
mov    -0x30(%rbp),%rcx
mov    -0x28(%rbp),%r15
jmpq   16095 <png_do_read_transformations+0x65>
and    $0x80,%eax
test   %eax,%eax
jne    160ac <png_do_read_transformations+0x7c>
movzbl 0x10(%r14),%eax
cmp    $0x6,%al
je     1644f <png_do_read_transformations+0x41f>
cmp    $0x4,%al
jne    160ac <png_do_read_transformations+0x7c>
mov    0x228(%rbx),%rsi
add    $0x1,%rsi
mov    %r14,%rdi
mov    %rdx,%rax
mov    %r15,-0x20(%rbp)
mov    %rdx,%r15
mov    %rax,%rdx
callq  23840 <png_do_strip_channel>
mov    %r15,%rdx
mov    -0x38(%rbp),%r8
mov    -0x30(%rbp),%rcx
mov    -0x20(%rbp),%r15
jmpq   160ac <png_do_read_transformations+0x7c>
mov    0x228(%rbx),%rax
add    $0x1,%rax
mov    %rbx,%rdi
mov    %r14,%rsi
mov    %r15,-0x18(%rbp)
mov    %rdx,%r15
mov    %rax,%rdx
callq  18620 <png_do_rgb_to_gray>
test   %eax,%eax
jne    1677d <png_do_read_transformations+0x74d>
mov    %r15,%rdx
mov    -0x38(%rbp),%r8
mov    -0x30(%rbp),%rcx
mov    -0x18(%rbp),%r15
jmpq   160bf <png_do_read_transformations+0x8f>
mov    0x12c(%rbx),%eax
and    $0x800,%eax
test   %eax,%eax
jne    160d2 <png_do_read_transformations+0xa2>
mov    0x228(%rbx),%rsi
add    $0x1,%rsi
mov    %r14,%rdi
mov    %r15,-0x18(%rbp)
mov    %rdx,%r15
callq  18470 <png_do_gray_to_rgb>
mov    %r15,%rdx
mov    -0x38(%rbp),%r8
mov    -0x30(%rbp),%rcx
mov    -0x18(%rbp),%r15
jmpq   160d2 <png_do_read_transformations+0xa2>
mov    %rax,%rsi
and    $0x600000,%esi
test   %esi,%esi
jne    16127 <png_do_read_transformations+0xf7>
and    $0x80,%eax
test   %eax,%eax
jne    167a2 <png_do_read_transformations+0x772>
movzbl 0x267(%rbx),%eax
cmp    $0x3,%al
je     16127 <png_do_read_transformations+0xf7>
mov    0x228(%rbx),%rsi
add    $0x1,%rsi
mov    %r14,%rdi
mov    %rbx,%rax
mov    %r15,-0x10(%rbp)
mov    %rdx,%r15
mov    %rax,%rdx
callq  1a0b0 <png_do_gamma>
mov    %r15,%rdx
mov    -0x38(%rbp),%r8
mov    -0x30(%rbp),%rcx
mov    -0x10(%rbp),%r15
jmpq   16127 <png_do_read_transformations+0xf7>
and    $0x80,%eax
test   %eax,%eax
je     1613e <png_do_read_transformations+0x10e>
movzbl 0x10(%r14),%eax
cmp    $0x6,%al
je     1657f <png_do_read_transformations+0x54f>
cmp    $0x4,%al
jne    1613e <png_do_read_transformations+0x10e>
mov    0x228(%rbx),%rsi
add    $0x1,%rsi
mov    %r14,%rdi
callq  23840 <png_do_strip_channel>
mov    -0x38(%rbp),%r8
mov    -0x30(%rbp),%rcx
jmpq   1613e <png_do_read_transformations+0x10e>
movzbl 0x10(%r14),%eax
and    $0x4,%eax
test   %eax,%eax
jle    16151 <png_do_read_transformations+0x121>
mov    0x228(%rbx),%rsi
add    $0x1,%rsi
mov    %r14,%rdi
mov    %rbx,%rdx
callq  1a470 <png_do_encode_alpha>
mov    -0x38(%rbp),%r8
mov    -0x30(%rbp),%rcx
jmpq   16151 <png_do_read_transformations+0x121>
mov    0x228(%rbx),%rsi
add    $0x1,%rsi
mov    0x378(%rbx),%rdx
mov    0x380(%rbx),%rcx
mov    %r14,%rdi
callq  1ae30 <png_do_quantize>
mov    0x8(%r14),%rax
test   %rax,%rax
je     167c9 <png_do_read_transformations+0x799>
mov    -0x38(%rbp),%r8
mov    -0x30(%rbp),%rcx
jmpq   161b6 <png_do_read_transformations+0x186>
mov    0x12c(%rbx),%eax
and    $0x800,%eax
test   %eax,%eax
je     161f3 <png_do_read_transformations+0x1c3>
mov    0x228(%rbx),%rsi
add    $0x1,%rsi
mov    %r14,%rdi
callq  18470 <png_do_gray_to_rgb>
mov    -0x38(%rbp),%r8
mov    -0x30(%rbp),%rcx
jmpq   161f3 <png_do_read_transformations+0x1c3>
movslq 0x25c(%rbx),%rax
test   %eax,%eax
js     162a9 <png_do_read_transformations+0x279>
mov    %rbx,%rdi
mov    %r14,%rsi
callq  23bb0 <png_do_check_palette_indexes>
mov    -0x38(%rbp),%r8
mov    -0x30(%rbp),%rcx
jmpq   162a9 <png_do_read_transformations+0x279>
mov    0x110(%rbx),%rax
test   %rax,%rax
je     1668e <png_do_read_transformations+0x65e>
mov    0x228(%rbx),%rdx
add    $0x1,%rdx
mov    %rbx,%rdi
mov    %r14,%rsi
callq  *%rax
mov    -0x38(%rbp),%r8
mov    -0x30(%rbp),%rcx
movzbl 0x128(%rbx),%eax
test   %al,%al
je     1669d <png_do_read_transformations+0x66d>
mov    %al,0x11(%r14)
movzbl 0x129(%rbx),%eax
test   %al,%al
je     166ac <png_do_read_transformations+0x67c>
mov    %al,0x12(%r14)
movzbl 0x12(%r14),%edx
movzbl 0x11(%r14),%eax
imul   %dl
mov    %al,0x13(%r14)
cmp    $0x7,%al
ja     167d8 <png_do_read_transformations+0x7a8>
movzbl %al,%eax
mov    (%r14),%edx
imul   %rdx,%rax
add    $0x7,%rax
shr    $0x3,%rax
jmpq   167e6 <png_do_read_transformations+0x7b6>
lea    0x1(%r8),%rax
mov    0x250(%rdi),%r9
mov    0x2e8(%rdi),%rcx
movzwl 0x260(%rdi),%r8d
mov    %rsi,%r10
mov    %r13,-0x20(%rbp)
mov    %r12,%r13
mov    %rbx,%r12
mov    %rdi,%rbx
mov    %r10,%rdi
mov    %rsi,%r14
mov    %rax,%rsi
mov    %rdx,%r15
mov    %r9,%rdx
callq  1a550 <png_do_expand_palette>
mov    %r15,%rdx
mov    -0x38(%rbp),%r8
mov    -0x30(%rbp),%rcx
mov    -0x20(%rbp),%r15
jmpq   16095 <png_do_read_transformations+0x65>
and    $0x2000000,%eax
test   %eax,%eax
je     163f2 <png_do_read_transformations+0x3c2>
lea    0x1(%r8),%rcx
lea    0x2f0(%rdi),%r8
mov    %rsi,%rax
mov    %r13,-0x28(%rbp)
mov    %r12,%r13
mov    %rbx,%r12
mov    %rdi,%rbx
mov    %rax,%rdi
mov    %rsi,%r14
mov    %rcx,%rsi
mov    %rdx,%r15
mov    %r8,%rdx
callq  1a870 <png_do_expand>
mov    %r15,%rdx
mov    -0x38(%rbp),%r8
mov    -0x30(%rbp),%rcx
mov    -0x28(%rbp),%r15
jmpq   16095 <png_do_read_transformations+0x65>
movb   $0x1,0x3d0(%rbx)
lea    0x17d55(%rip),%rsi        # 2e4e0 <chunks_to_process.34+0x6db>
mov    0x134(%rbx),%eax
and    $0x600000,%eax
cmp    $0x400000,%eax
je     167fb <png_do_read_transformations+0x7cb>
mov    %r15,%rdx
jmp    1681a <png_do_read_transformations+0x7ea>
movzwl 0x260(%rbx),%eax
test   %ax,%ax
jne    16127 <png_do_read_transformations+0xf7>
movzbl 0x267(%rbx),%eax
and    $0x4,%eax
test   %eax,%eax
jg     16127 <png_do_read_transformations+0xf7>
jmpq   1651e <png_do_read_transformations+0x4ee>
mov    %rbx,%rdi
lea    0x17d34(%rip),%rsi        # 2e507 <chunks_to_process.34+0x702>
callq  5470 <png_error@plt>
movzbl %al,%eax
shr    $0x3,%rax
mov    (%r14),%edx
imul   %rdx,%rax
mov    %rax,0x8(%r14)
mov    %r12,%rbx
mov    %r13,%r12
mov    %r15,%r13
mov    %r8,%r15
mov    %rcx,%r14
leaveq 
retq   
mov    %rbx,%rdi
mov    %rsi,%rax
mov    %r13,-0x8(%rbp)
mov    %rsi,%r13
mov    %rax,%rsi
callq  5390 <png_warning@plt>
mov    %r15,%rdx
mov    %r13,%rsi
mov    -0x8(%rbp),%r13
mov    0x134(%rbx),%eax
and    $0x600000,%eax
cmp    $0x200000,%eax
je     1683d <png_do_read_transformations+0x80d>
mov    -0x38(%rbp),%r8
mov    -0x30(%rbp),%rcx
mov    -0x18(%rbp),%r15
jmpq   160bf <png_do_read_transformations+0x8f>
mov    %rbx,%rdi
callq  5470 <png_error@plt>
data16 nopw %cs:0x0(%rax,%rax,1)

0000000000016850 <png_init_read_transformations>:
push   %rbp
mov    %rsp,%rbp
sub    $0x60,%rsp
mov    %r15,-0x50(%rbp)
xor    %eax,%eax
movslq 0x498(%rdi),%rcx
test   %ecx,%ecx
jne    16899 <png_init_read_transformations+0x49>
movslq 0x2a4(%rdi),%rcx
test   %ecx,%ecx
jne    168ce <png_init_read_transformations+0x7e>
mov    %r14,%r15
mov    %r13,%r14
mov    %r12,%r13
mov    %rbx,%r12
mov    %rdi,%rbx
movl   $0x186a0,0x498(%rbx)
movl   $0x186a0,0x2a4(%rbx)
jmp    1690f <png_init_read_transformations+0xbf>
movslq 0x2a4(%rdi),%rsi
test   %esi,%esi
jne    168f8 <png_init_read_transformations+0xa8>
mov    %r14,-0x48(%rbp)
mov    %r13,%r14
mov    %r12,%r13
mov    %rbx,%r12
mov    %rdi,%rbx
mov    %rcx,%rdi
mov    %rax,%r15
callq  8a40 <png_reciprocal>
mov    %eax,0x2a4(%rbx)
mov    %r15,%rax
mov    -0x48(%rbp),%r15
jmp    1690f <png_init_read_transformations+0xbf>
mov    %r14,-0x48(%rbp)
mov    %r13,%r14
mov    %r12,%r13
mov    %rbx,%r12
mov    %rdi,%rbx
mov    %rcx,%rdi
mov    %rax,%r15
callq  8a40 <png_reciprocal>
mov    %eax,0x498(%rbx)
mov    %r15,%rax
mov    -0x48(%rbp),%r15
jmp    1690f <png_init_read_transformations+0xbf>
mov    %r14,%r15
mov    %r13,%r14
mov    %r12,%r13
mov    %rbx,%r12
mov    %rdi,%rbx
mov    %rcx,%rdi
callq  178d0 <png_gamma_threshold>
movzwl 0x4e2(%rbx),%ecx
or     $0x1,%cx
mov    %cx,0x4e2(%rbx)
test   %eax,%eax
jne    16932 <png_init_read_transformations+0xe2>
mov    0x134(%rbx),%eax
and    $0xffffdfff,%eax
jmp    1693d <png_init_read_transformations+0xed>
mov    0x134(%rbx),%eax
or     $0x2000,%eax
mov    %eax,0x134(%rbx)
mov    %rax,%rcx
and    $0x40000,%ecx
test   %ecx,%ecx
jne    16a0f <png_init_read_transformations+0x1bf>
movslq 0x2a4(%rbx),%rdi
callq  8b10 <png_gamma_significant>
test   %eax,%eax
jne    16986 <png_init_read_transformations+0x136>
mov    0x134(%rbx),%eax
and    $0xff7fffff,%eax
mov    %eax,0x134(%rbx)
mov    0x130(%rbx),%eax
and    $0xffffdfff,%eax
mov    %eax,0x130(%rbx)
mov    0x134(%rbx),%eax
and    $0x600000,%eax
test   %eax,%eax
je     1699d <png_init_read_transformations+0x14d>
mov    %rbx,%rdi
callq  7b90 <png_colorspace_set_rgb_coefficients>
mov    0x134(%rbx),%eax
mov    %rax,%rcx
and    $0x100,%ecx
test   %ecx,%ecx
jne    16a4a <png_init_read_transformations+0x1fa>
mov    %rax,%rcx
and    $0x80,%ecx
test   %ecx,%ecx
je     16a69 <png_init_read_transformations+0x219>
and    $0x4000,%eax
test   %eax,%eax
je     16a69 <png_init_read_transformations+0x219>
movzwl 0x27e(%rbx),%ecx
movzwl 0x280(%rbx),%eax
cmp    %cx,%ax
jne    16a69 <png_init_read_transformations+0x219>
movzwl 0x282(%rbx),%eax
cmp    %ax,%cx
jne    16a69 <png_init_read_transformations+0x219>
mov    0x12c(%rbx),%eax
or     $0x800,%eax
mov    %eax,0x12c(%rbx)
mov    %cx,0x284(%rbx)
jmp    16a69 <png_init_read_transformations+0x219>
mov    %rax,%rcx
and    $0x80,%ecx
test   %ecx,%ecx
jne    16954 <png_init_read_transformations+0x104>
and    $0xfd7ffeff,%eax
mov    %eax,0x134(%rbx)
mov    0x130(%rbx),%eax
and    $0xffffdfff,%eax
mov    %eax,0x130(%rbx)
movw   $0x0,0x260(%rbx)
jmpq   16954 <png_init_read_transformations+0x104>
movzbl 0x267(%rbx),%eax
and    $0x2,%eax
test   %eax,%eax
jne    16a69 <png_init_read_transformations+0x219>
mov    0x12c(%rbx),%eax
or     $0x800,%eax
mov    %eax,0x12c(%rbx)
movzbl 0x267(%rbx),%eax
cmp    $0x3,%al
je     16a7e <png_init_read_transformations+0x22e>
mov    %rbx,%rdi
callq  17a50 <png_init_rgb_transformations>
jmp    16a86 <png_init_read_transformations+0x236>
mov    %rbx,%rdi
callq  17910 <png_init_palette_transformations>
mov    0x134(%rbx),%eax
mov    %rax,%rcx
and    $0x200,%ecx
test   %ecx,%ecx
jne    16b7a <png_init_read_transformations+0x32a>
mov    0x134(%rbx),%eax
mov    %rax,%rcx
and    $0x4000400,%ecx
test   %ecx,%ecx
jne    16c24 <png_init_read_transformations+0x3d4>
mov    0x27c(%rbx),%rax
mov    %rax,0x286(%rbx)
movzwl 0x284(%rbx),%eax
mov    %ax,0x28e(%rbx)
mov    $0xff,%eax
mov    0x134(%rbx),%ecx
mov    %rcx,%rdx
and    $0x2000,%edx
test   %edx,%edx
jne    16cae <png_init_read_transformations+0x45e>
and    $0x600000,%ecx
test   %ecx,%ecx
jne    16d0a <png_init_read_transformations+0x4ba>
mov    0x134(%rbx),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
jne    16d34 <png_init_read_transformations+0x4e4>
mov    0x134(%rbx),%ecx
and    $0x800000,%ecx
test   %ecx,%ecx
jne    16d75 <png_init_read_transformations+0x525>
mov    0x134(%rbx),%ecx
and    $0x80,%ecx
test   %ecx,%ecx
je     16ce4 <png_init_read_transformations+0x494>
movzbl 0x267(%rbx),%ecx
cmp    $0x3,%cl
jne    16ce4 <png_init_read_transformations+0x494>
mov    0x250(%rbx),%r8
movzwl 0x260(%rbx),%r9d
movzbl 0x27e(%rbx),%ecx
mov    %cl,-0x53(%rbp)
movzbl 0x280(%rbx),%ecx
mov    %cl,-0x52(%rbp)
movzbl 0x282(%rbx),%ecx
mov    %cl,-0x51(%rbp)
xor    %ecx,%ecx
jmpq   16dac <png_init_read_transformations+0x55c>
mov    %rax,%rcx
and    $0x80,%ecx
test   %ecx,%ecx
je     16a9d <png_init_read_transformations+0x24d>
and    $0x100,%eax
test   %eax,%eax
jne    16a9d <png_init_read_transformations+0x24d>
movzbl 0x268(%rbx),%eax
cmp    $0x10,%al
je     16a9d <png_init_read_transformations+0x24d>
movzwl 0x27e(%rbx),%ecx
mov    %rcx,%rax
shl    $0x8,%eax
sub    %ecx,%eax
add    $0x807f,%eax
shr    $0x10,%eax
mov    %ax,0x27e(%rbx)
movzwl 0x280(%rbx),%ecx
mov    %rcx,%rax
shl    $0x8,%eax
sub    %ecx,%eax
add    $0x807f,%eax
shr    $0x10,%eax
mov    %ax,0x280(%rbx)
movzwl 0x282(%rbx),%ecx
mov    %rcx,%rax
shl    $0x8,%eax
sub    %ecx,%eax
add    $0x807f,%eax
shr    $0x10,%eax
mov    %ax,0x282(%rbx)
movzwl 0x284(%rbx),%ecx
mov    %rcx,%rax
shl    $0x8,%eax
sub    %ecx,%eax
add    $0x807f,%eax
shr    $0x10,%eax
mov    %ax,0x284(%rbx)
jmpq   16a9d <png_init_read_transformations+0x24d>
mov    %rax,%rcx
and    $0x80,%ecx
test   %ecx,%ecx
je     16ab4 <png_init_read_transformations+0x264>
and    $0x100,%eax
test   %eax,%eax
jne    16ab4 <png_init_read_transformations+0x264>
movzbl 0x268(%rbx),%eax
cmp    $0x10,%al
jne    16ab4 <png_init_read_transformations+0x264>
movzwl 0x27e(%rbx),%ecx
mov    %rcx,%rax
shl    $0x8,%eax
add    %ecx,%eax
mov    %ax,0x27e(%rbx)
movzwl 0x280(%rbx),%ecx
mov    %rcx,%rax
shl    $0x8,%eax
add    %ecx,%eax
mov    %ax,0x280(%rbx)
movzwl 0x282(%rbx),%ecx
mov    %rcx,%rax
shl    $0x8,%eax
add    %ecx,%eax
mov    %ax,0x282(%rbx)
movzwl 0x284(%rbx),%ecx
mov    %rcx,%rax
shl    $0x8,%eax
add    %ecx,%eax
mov    %ax,0x284(%rbx)
jmpq   16ab4 <png_init_read_transformations+0x264>
movzbl 0x268(%rbx),%esi
mov    %rbx,%rdi
callq  8e10 <png_build_gamma_table>
mov    0x134(%rbx),%eax
mov    %rax,%rcx
and    $0x80,%ecx
test   %ecx,%ecx
jne    16dcb <png_init_read_transformations+0x57b>
movzbl 0x267(%rbx),%ecx
cmp    $0x3,%cl
je     16df9 <png_init_read_transformations+0x5a9>
mov    0x134(%rbx),%eax
mov    %rax,%rcx
and    $0x8,%ecx
test   %ecx,%ecx
jne    16e28 <png_init_read_transformations+0x5d8>
mov    %r12,%rbx
mov    %r13,%r12
mov    %r14,%r13
mov    %r15,%r14
mov    -0x50(%rbp),%r15
leaveq 
retq   
movslq 0x498(%rbx),%rdi
callq  8b10 <png_gamma_significant>
test   %eax,%eax
jne    16cae <png_init_read_transformations+0x45e>
movslq 0x2a4(%rbx),%rdi
callq  8b10 <png_gamma_significant>
test   %eax,%eax
jne    16cae <png_init_read_transformations+0x45e>
mov    $0xff,%eax
jmpq   16afa <png_init_read_transformations+0x2aa>
movslq 0x498(%rbx),%rdi
callq  8b10 <png_gamma_significant>
test   %eax,%eax
jne    16cae <png_init_read_transformations+0x45e>
movslq 0x2a4(%rbx),%rdi
callq  8b10 <png_gamma_significant>
test   %eax,%eax
jne    16cae <png_init_read_transformations+0x45e>
movzbl 0x274(%rbx),%eax
cmp    $0x3,%al
je     16e4b <png_init_read_transformations+0x5fb>
mov    $0xff,%eax
jmpq   16b0e <png_init_read_transformations+0x2be>
movslq 0x2a4(%rbx),%rdi
callq  8b10 <png_gamma_significant>
test   %eax,%eax
jne    16cae <png_init_read_transformations+0x45e>
mov    $0xff,%eax
jmpq   16b22 <png_init_read_transformations+0x2d2>
movzwl -0x53(%rbp),%edx
lea    (%r10,%r10,2),%rsi
mov    %dx,(%r8,%rsi,1)
movzbl -0x51(%rbp),%edx
mov    %dl,0x2(%r8,%rsi,1)
add    $0x1,%ecx
cmp    %r9d,%ecx
jl     16e69 <png_init_read_transformations+0x619>
mov    0x134(%rbx),%eax
and    $0xffffff7f,%eax
mov    %eax,0x134(%rbx)
jmpq   16ce4 <png_init_read_transformations+0x494>
and    $0x600000,%eax
test   %eax,%eax
je     16de3 <png_init_read_transformations+0x593>
lea    0x17750(%rip),%rsi        # 2e52b <chunks_to_process.34+0x726>
mov    %rbx,%rdi
callq  5390 <png_warning@plt>
movzbl 0x267(%rbx),%eax
cmp    $0x3,%al
je     16f44 <png_init_read_transformations+0x6f4>
xor    %ecx,%ecx
jmpq   16f49 <png_init_read_transformations+0x6f9>
mov    %rax,%rcx
and    $0x1000,%ecx
test   %ecx,%ecx
je     16e13 <png_init_read_transformations+0x5c3>
and    $0x600000,%eax
test   %eax,%eax
jne    16ce4 <png_init_read_transformations+0x494>
mov    0x250(%rbx),%r8
movzwl 0x258(%rbx),%ecx
xor    %eax,%eax
jmpq   16ff4 <png_init_read_transformations+0x7a4>
mov    %rax,%rcx
and    $0x1000,%ecx
test   %ecx,%ecx
je     1700e <png_init_read_transformations+0x7be>
mov    %r12,%rbx
mov    %r13,%r12
mov    %r14,%r13
mov    %r15,%r14
mov    -0x50(%rbp),%r15
leaveq 
retq   
movslq 0x278(%rbx),%rdi
callq  8b10 <png_gamma_significant>
test   %eax,%eax
jne    16cae <png_init_read_transformations+0x45e>
mov    $0xff,%eax
jmpq   16b0e <png_init_read_transformations+0x2be>
mov    0x2e8(%rbx),%rdx
movslq %ecx,%r10
movzbl (%rdx,%r10,1),%edx
test   %dl,%dl
je     16d93 <png_init_read_transformations+0x543>
cmp    $0xfe,%dl
ja     16da9 <png_init_read_transformations+0x559>
mov    %rax,%rsi
sub    %dx,%si
movzbl -0x53(%rbp),%edi
imul   %di,%si
lea    (%r10,%r10,2),%r11
movzbl (%r8,%r11,1),%edi
imul   %di,%dx
lea    0x80(%rsi,%rdx,1),%edx
movzwl %dx,%esi
mov    %rsi,%rdx
shr    $0x8,%edx
add    %esi,%edx
shr    $0x8,%edx
mov    %dl,(%r8,%r11,1)
mov    0x2e8(%rbx),%rdx
movzbl (%rdx,%r10,1),%edi
movzbl 0x1(%r8,%r11,1),%edx
mov    %rdi,%rsi
imul   %dx,%si
mov    %rax,%rdx
sub    %di,%dx
movzbl -0x52(%rbp),%edi
imul   %di,%dx
lea    0x80(%rdx,%rsi,1),%edx
movzwl %dx,%edx
mov    %rdx,%rsi
shr    $0x8,%esi
add    %esi,%edx
shr    $0x8,%edx
mov    %dl,0x1(%r8,%r11,1)
mov    0x2e8(%rbx),%rdx
movzbl (%rdx,%r10,1),%edi
movzbl 0x2(%r8,%r11,1),%edx
mov    %rdi,%rsi
imul   %dx,%si
mov    %rax,%rdx
sub    %di,%dx
movzbl -0x51(%rbp),%edi
imul   %di,%dx
lea    0x80(%rdx,%rsi,1),%edx
movzwl %dx,%esi
mov    %rsi,%rdx
shr    $0x8,%edx
add    %esi,%edx
shr    $0x8,%edx
mov    %dl,0x2(%r8,%r11,1)
jmpq   16da9 <png_init_read_transformations+0x559>
mov    $0x1,%ecx
mov    $0x186a0,%eax
test   %ecx,%ecx
jg     17030 <png_init_read_transformations+0x7e0>
movzbl 0x274(%rbx),%ecx
cmp    $0x1,%cl
jbe    17072 <png_init_read_transformations+0x822>
cmp    $0x2,%cl
je     17086 <png_init_read_transformations+0x836>
cmp    $0x3,%cl
jne    17077 <png_init_read_transformations+0x827>
movslq 0x278(%rbx),%rdi
callq  8a40 <png_reciprocal>
movslq 0x278(%rbx),%rdi
movslq 0x2a4(%rbx),%rsi
mov    %r15,-0x40(%rbp)
mov    %rax,%r15
callq  8aa0 <png_reciprocal2>
mov    %r15,%rcx
mov    -0x40(%rbp),%r15
jmpq   170bc <png_init_read_transformations+0x86c>
movslq %eax,%rdx
lea    (%rdx,%rdx,2),%rdi
movzbl (%r8,%rdi,1),%esi
mov    0x2a8(%rbx),%rdx
movzbl (%rsi,%rdx,1),%edx
mov    %dl,(%r8,%rdi,1)
movzbl 0x1(%r8,%rdi,1),%esi
mov    0x2a8(%rbx),%rdx
movzbl (%rsi,%rdx,1),%edx
mov    %dl,0x1(%r8,%rdi,1)
movzbl 0x2(%r8,%rdi,1),%esi
mov    0x2a8(%rbx),%rdx
movzbl (%rsi,%rdx,1),%edx
mov    %dl,0x2(%r8,%rdi,1)
add    $0x1,%eax
cmp    %ecx,%eax
jl     16faa <png_init_read_transformations+0x75a>
mov    0x134(%rbx),%eax
and    $0xffffdfff,%eax
mov    %eax,0x134(%rbx)
jmpq   16ce4 <png_init_read_transformations+0x494>
movzbl 0x267(%rbx),%ecx
cmp    $0x3,%cl
je     170f8 <png_init_read_transformations+0x8a8>
mov    %r12,%rbx
mov    %r13,%r12
mov    %r14,%r13
mov    %r15,%r14
mov    -0x50(%rbp),%r15
leaveq 
retq   
mov    0x250(%rbx),%rdx
movzwl 0x258(%rbx),%r10d
movzbl 0x274(%rbx),%ecx
cmp    $0x2,%cl
je     17130 <png_init_read_transformations+0x8e0>
cmp    $0x1,%cl
jbe    1719f <png_init_read_transformations+0x94f>
cmp    $0x2,%cl
je     171b0 <png_init_read_transformations+0x960>
cmp    $0x3,%cl
je     171fb <png_init_read_transformations+0x9ab>
mov    %rax,%rcx
jmpq   1724d <png_init_read_transformations+0x9fd>
cmp    $0x1,%cl
je     170b5 <png_init_read_transformations+0x865>
mov    %rbx,%rdi
lea    0x174df(%rip),%rsi        # 2e560 <chunks_to_process.34+0x75b>
callq  5470 <png_error@plt>
movslq 0x498(%rbx),%rdi
callq  8a40 <png_reciprocal>
movslq 0x498(%rbx),%rdi
movslq 0x2a4(%rbx),%rsi
mov    %r15,-0x40(%rbp)
mov    %rax,%r15
callq  8aa0 <png_reciprocal2>
mov    %r15,%rcx
mov    -0x40(%rbp),%r15
jmp    170bc <png_init_read_transformations+0x86c>
movslq 0x2a4(%rbx),%rcx
mov    %rcx,%rdi
mov    %r15,-0x38(%rbp)
mov    %r14,-0x30(%rbp)
mov    %rax,%r14
mov    %rcx,%r15
callq  8b10 <png_gamma_significant>
mov    %r14,%rdi
mov    %r13,-0x20(%rbp)
mov    %rax,%r13
callq  8b10 <png_gamma_significant>
test   %r13d,%r13d
jne    1729c <png_init_read_transformations+0xa4c>
mov    %r13,%rcx
mov    %rax,%r13
mov    %rcx,%rax
jmpq   172c6 <png_init_read_transformations+0xa76>
movzwl 0x258(%rbx),%edx
and    $0xfffffff7,%eax
mov    %eax,0x134(%rbx)
mov    $0x8,%eax
movzbl 0x2d8(%rbx),%ecx
neg    %ecx
add    %eax,%ecx
test   %ecx,%ecx
jle    1735f <png_init_read_transformations+0xb0f>
cmp    $0x7,%ecx
jg     1735f <png_init_read_transformations+0xb0f>
xor    %esi,%esi
jmpq   1739d <png_init_read_transformations+0xb4d>
movzwl 0x27e(%rbx),%r11d
mov    0x2c0(%rbx),%rcx
movzbl (%r11,%rcx,1),%eax
movzwl 0x280(%rbx),%r9d
movzbl (%rcx,%r9,1),%r8d
movzwl 0x282(%rbx),%esi
movzbl (%rcx,%rsi,1),%edi
mov    0x2a8(%rbx),%rcx
movzbl (%r11,%rcx,1),%r11d
mov    %r11b,-0x56(%rbp)
movzbl (%r9,%rcx,1),%r9d
mov    %r9b,-0x55(%rbp)
movzbl (%rsi,%rcx,1),%ecx
mov    %cl,-0x54(%rbp)
mov    %r15,-0x30(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r13,-0x10(%rbp)
mov    %r12,-0x8(%rbp)
mov    %rdx,%r12
mov    %r10,%r13
mov    $0xff,%r9d
xor    %ecx,%ecx
jmpq   173ea <png_init_read_transformations+0xb9a>
cmp    $0x1,%cl
je     17246 <png_init_read_transformations+0x9f6>
mov    %rax,%rcx
jmpq   1724d <png_init_read_transformations+0x9fd>
movslq 0x498(%rbx),%rdi
mov    %r15,-0x30(%rbp)
mov    %r14,-0x28(%rbp)
mov    %rdx,%r14
mov    %r10,%r15
callq  8a40 <png_reciprocal>
movslq 0x498(%rbx),%rdi
movslq 0x2a4(%rbx),%rsi
mov    %r13,-0x18(%rbp)
mov    %rax,%r13
callq  8aa0 <png_reciprocal2>
mov    %r13,%rcx
mov    %r14,%rdx
mov    %r15,%r10
mov    -0x18(%rbp),%r13
mov    -0x28(%rbp),%r14
mov    -0x30(%rbp),%r15
jmp    1724d <png_init_read_transformations+0x9fd>
movslq 0x278(%rbx),%rdi
mov    %r15,-0x38(%rbp)
mov    %r14,-0x28(%rbp)
mov    %r10,%r14
mov    %rdx,%r15
callq  8a40 <png_reciprocal>
movslq 0x278(%rbx),%rdi
movslq 0x2a4(%rbx),%rsi
mov    %r13,-0x18(%rbp)
mov    %rax,%r13
callq  8aa0 <png_reciprocal2>
mov    %r13,%rcx
mov    %r15,%rdx
mov    %r14,%r10
mov    -0x18(%rbp),%r13
mov    -0x28(%rbp),%r14
mov    -0x38(%rbp),%r15
jmp    1724d <png_init_read_transformations+0x9fd>
movslq 0x2a4(%rbx),%rcx
mov    %rax,%rdi
mov    %r15,-0x30(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r13,-0x10(%rbp)
mov    %r12,-0x8(%rbp)
mov    %rdx,%r12
mov    %r10,%r13
mov    %rcx,%r14
mov    %rax,%r15
callq  8b10 <png_gamma_significant>
test   %eax,%eax
jne    17419 <png_init_read_transformations+0xbc9>
movzbl 0x27e(%rbx),%eax
mov    %al,-0x56(%rbp)
movzbl 0x280(%rbx),%eax
mov    %al,-0x55(%rbp)
movzbl 0x282(%rbx),%eax
mov    %al,-0x54(%rbp)
jmpq   1744f <png_init_read_transformations+0xbff>
movzwl 0x284(%rbx),%esi
mov    %rbx,%rdi
mov    %r15,%rdx
mov    %r12,-0x10(%rbp)
mov    %r13,%r12
mov    %rax,%r13
callq  8b40 <png_gamma_correct>
mov    %ax,0x28e(%rbx)
mov    %r12,%rax
mov    -0x10(%rbp),%r12
test   %r13d,%r13d
je     172f2 <png_init_read_transformations+0xaa2>
movzwl 0x284(%rbx),%esi
mov    %rbx,%rdi
mov    %r14,%rdx
mov    %r12,-0x8(%rbp)
mov    %rax,%r12
callq  8b40 <png_gamma_correct>
mov    %ax,0x284(%rbx)
mov    %r12,%rax
mov    -0x8(%rbp),%r12
movzwl 0x280(%rbx),%ecx
movzwl 0x27e(%rbx),%edx
cmp    %dx,%cx
jne    17482 <png_init_read_transformations+0xc32>
movzwl 0x282(%rbx),%ecx
cmp    %cx,%dx
jne    17482 <png_init_read_transformations+0xc32>
movzwl 0x284(%rbx),%ecx
cmp    %cx,%dx
jne    17482 <png_init_read_transformations+0xc32>
movzwl 0x28e(%rbx),%eax
mov    %ax,0x28c(%rbx)
mov    %ax,0x28a(%rbx)
mov    %ax,0x288(%rbx)
mov    %cx,0x282(%rbx)
mov    %cx,0x280(%rbx)
mov    %cx,0x27e(%rbx)
jmpq   17521 <png_init_read_transformations+0xcd1>
movzbl 0x2d9(%rbx),%ecx
neg    %ecx
add    %eax,%ecx
test   %ecx,%ecx
jle    17539 <png_init_read_transformations+0xce9>
cmp    $0x7,%ecx
jg     17539 <png_init_read_transformations+0xce9>
xor    %esi,%esi
jmpq   1757a <png_init_read_transformations+0xd2a>
movslq %esi,%rdi
lea    (%rdi,%rdi,2),%rdi
add    0x250(%rbx),%rdi
movzbl (%rdi),%r8d
shr    %cl,%r8d
mov    %r8b,(%rdi)
add    $0x1,%esi
cmp    %esi,%edx
jg     17382 <png_init_read_transformations+0xb32>
jmp    1735f <png_init_read_transformations+0xb0f>
lea    (%r15,%r15,2),%r10
movzbl (%r12,%r10,1),%esi
mov    0x2a8(%rbx),%rdx
movzbl (%rsi,%rdx,1),%edx
mov    %dl,(%r12,%r10,1)
movzbl 0x1(%r12,%r10,1),%esi
mov    0x2a8(%rbx),%rdx
movzbl (%rsi,%rdx,1),%edx
mov    %dl,0x1(%r12,%r10,1)
movzbl 0x2(%r12,%r10,1),%esi
mov    0x2a8(%rbx),%rdx
movzbl (%rsi,%rdx,1),%edx
mov    %dl,0x2(%r12,%r10,1)
add    $0x1,%ecx
cmp    %r13d,%ecx
jl     17580 <png_init_read_transformations+0xd30>
mov    0x134(%rbx),%eax
and    $0xffffdf7f,%eax
mov    %eax,0x134(%rbx)
mov    -0x8(%rbp),%r12
mov    -0x10(%rbp),%r13
mov    -0x20(%rbp),%r14
mov    -0x30(%rbp),%r15
jmpq   16ce4 <png_init_read_transformations+0x494>
movzwl 0x27e(%rbx),%edi
mov    %r15,%rsi
callq  8be0 <png_gamma_8bit_correct>
mov    %al,-0x56(%rbp)
movzwl 0x280(%rbx),%edi
mov    %r15,%rsi
callq  8be0 <png_gamma_8bit_correct>
mov    %al,-0x55(%rbp)
mov    %r15,%rsi
movzwl 0x282(%rbx),%edi
callq  8be0 <png_gamma_8bit_correct>
mov    %al,-0x54(%rbp)
mov    %r14,%rdi
callq  8b10 <png_gamma_significant>
test   %eax,%eax
jne    176bc <png_init_read_transformations+0xe6c>
movzbl 0x27e(%rbx),%eax
movzbl 0x280(%rbx),%r8d
movzbl 0x282(%rbx),%edi
mov    $0xff,%r9d
xor    %ecx,%ecx
jmpq   173ea <png_init_read_transformations+0xb9a>
test   %eax,%eax
je     174d1 <png_init_read_transformations+0xc81>
movzwl 0x27e(%rbx),%esi
mov    %rbx,%rdi
mov    %r15,%rdx
callq  8b40 <png_gamma_correct>
mov    %ax,0x288(%rbx)
movzwl 0x280(%rbx),%esi
mov    %rbx,%rdi
mov    %r15,%rdx
callq  8b40 <png_gamma_correct>
mov    %ax,0x28a(%rbx)
mov    %r15,%rdx
movzwl 0x282(%rbx),%esi
mov    %rbx,%rdi
callq  8b40 <png_gamma_correct>
mov    %ax,0x28c(%rbx)
test   %r13d,%r13d
je     17521 <png_init_read_transformations+0xcd1>
movzwl 0x27e(%rbx),%esi
mov    %rbx,%rdi
mov    %r14,%rdx
callq  8b40 <png_gamma_correct>
mov    %ax,0x27e(%rbx)
movzwl 0x280(%rbx),%esi
mov    %rbx,%rdi
mov    %r14,%rdx
callq  8b40 <png_gamma_correct>
mov    %ax,0x280(%rbx)
mov    %r14,%rdx
movzwl 0x282(%rbx),%esi
mov    %rbx,%rdi
callq  8b40 <png_gamma_correct>
mov    %ax,0x282(%rbx)
movb   $0x1,0x274(%rbx)
mov    -0x20(%rbp),%r13
mov    -0x30(%rbp),%r14
mov    -0x38(%rbp),%r15
jmpq   16ce4 <png_init_read_transformations+0x494>
movzbl 0x2da(%rbx),%ecx
sub    %ecx,%eax
test   %eax,%eax
jg     17705 <png_init_read_transformations+0xeb5>
mov    %r12,%rbx
mov    %r13,%r12
mov    %r14,%r13
mov    %r15,%r14
mov    -0x50(%rbp),%r15
leaveq 
retq   
mov    0x250(%rbx),%r8
movslq %esi,%rdi
lea    (%rdi,%rdi,2),%r9
movzbl 0x1(%r8,%r9,1),%edi
shr    %cl,%edi
mov    %dil,0x1(%r8,%r9,1)
add    $0x1,%esi
cmp    %esi,%edx
jg     1755c <png_init_read_transformations+0xd0c>
jmp    17539 <png_init_read_transformations+0xce9>
movslq %ecx,%r15
movzwl 0x260(%rbx),%edx
cmp    %edx,%ecx
jge    173a3 <png_init_read_transformations+0xb53>
mov    0x2e8(%rbx),%rdx
movzbl (%rdx,%r15,1),%edx
cmp    $0xfe,%dl
ja     173a3 <png_init_read_transformations+0xb53>
test   %dl,%dl
je     1771c <png_init_read_transformations+0xecc>
mov    %r9,%rsi
sub    %dx,%si
movzbl %al,%r10d
imul   %r10w,%si
lea    (%r15,%r15,2),%r14
movzbl (%r12,%r14,1),%r11d
mov    0x2c0(%rbx),%r10
movzbl (%r11,%r10,1),%r10d
imul   %r10w,%dx
lea    0x80(%rsi,%rdx,1),%edx
movzwl %dx,%esi
mov    %rsi,%rdx
shr    $0x8,%edx
add    %esi,%edx
shr    $0x8,%edx
movzbl %dl,%esi
mov    0x2b8(%rbx),%rdx
movzbl (%rsi,%rdx,1),%edx
mov    %dl,(%r12,%r14,1)
mov    0x2e8(%rbx),%rdx
movzbl (%rdx,%r15,1),%r10d
movzbl 0x1(%r12,%r14,1),%esi
mov    0x2c0(%rbx),%rdx
movzbl (%rsi,%rdx,1),%edx
mov    %r10,%rsi
imul   %dx,%si
mov    %r9,%rdx
sub    %r10w,%dx
movzbl %r8b,%r10d
imul   %r10w,%dx
lea    0x80(%rdx,%rsi,1),%edx
movzwl %dx,%esi
mov    %rsi,%rdx
shr    $0x8,%edx
add    %esi,%edx
shr    $0x8,%edx
movzbl %dl,%esi
mov    0x2b8(%rbx),%rdx
movzbl (%rsi,%rdx,1),%edx
mov    %dl,0x1(%r12,%r14,1)
mov    0x2e8(%rbx),%rdx
movzbl (%rdx,%r15,1),%r10d
movzbl 0x2(%r12,%r14,1),%esi
mov    0x2c0(%rbx),%rdx
movzbl (%rsi,%rdx,1),%edx
mov    %r10,%rsi
imul   %dx,%si
mov    %r9,%rdx
sub    %r10w,%dx
movzbl %dil,%r10d
imul   %r10w,%dx
lea    0x80(%rdx,%rsi,1),%edx
movzwl %dx,%esi
mov    %rsi,%rdx
shr    $0x8,%edx
add    %esi,%edx
shr    $0x8,%edx
movzbl %dl,%esi
mov    0x2b8(%rbx),%rdx
movzbl (%rsi,%rdx,1),%edx
mov    %dl,0x2(%r12,%r14,1)
jmpq   173e7 <png_init_read_transformations+0xb97>
movzwl 0x27e(%rbx),%edi
mov    %r14,%rsi
callq  8be0 <png_gamma_8bit_correct>
mov    %rax,%r15
movzwl 0x280(%rbx),%edi
mov    %r14,%rsi
callq  8be0 <png_gamma_8bit_correct>
mov    %r14,%rsi
mov    %rax,%r14
movzwl 0x282(%rbx),%edi
callq  8be0 <png_gamma_8bit_correct>
mov    %rax,%rdi
mov    %r15,%rax
mov    %r14,%r8
mov    $0xff,%r9d
xor    %ecx,%ecx
jmpq   173ea <png_init_read_transformations+0xb9a>
cmp    $0x7,%eax
jle    17737 <png_init_read_transformations+0xee7>
mov    %r12,%rbx
mov    %r13,%r12
mov    %r14,%r13
mov    %r15,%r14
mov    -0x50(%rbp),%r15
leaveq 
retq   
movzwl -0x56(%rbp),%edx
lea    (%r15,%r15,2),%rsi
mov    %dx,(%r12,%rsi,1)
movzbl -0x54(%rbp),%edx
mov    %dl,0x2(%r12,%rsi,1)
jmpq   173e7 <png_init_read_transformations+0xb97>
xor    %esi,%esi
jmp    1775f <png_init_read_transformations+0xf0f>
mov    0x250(%rbx),%r9
movslq %esi,%rcx
lea    (%rcx,%rcx,2),%r8
mov    %rax,%rcx
movzbl 0x2(%r9,%r8,1),%edi
shr    %cl,%edi
mov    %rcx,%rax
mov    %dil,0x2(%r9,%r8,1)
add    $0x1,%esi
cmp    %edx,%esi
jl     1773b <png_init_read_transformations+0xeeb>
mov    %r12,%rbx
mov    %r13,%r12
mov    %r14,%r13
mov    %r15,%r14
mov    -0x50(%rbp),%r15
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)

0000000000017780 <png_rtran_ok>:
push   %rbp
mov    %rsp,%rbp
xor    %eax,%eax
test   %rdi,%rdi
jne    1778d <png_rtran_ok+0xd>
leaveq 
retq   
mov    0x130(%rdi),%eax
and    $0x40,%eax
test   %eax,%eax
jne    177b6 <png_rtran_ok+0x36>
test   %esi,%esi
jne    177c6 <png_rtran_ok+0x46>
mov    0x130(%rdi),%eax
or     $0x4000,%eax
mov    %eax,0x130(%rdi)
mov    $0x1,%eax
leaveq 
retq   
lea    0x16dc1(%rip),%rsi        # 2e57e <chunks_to_process.34+0x779>
callq  b110 <png_app_error>
xor    %eax,%eax
leaveq 
retq   
mov    0x12c(%rdi),%eax
and    $0x1,%eax
test   %eax,%eax
jne    1779e <png_rtran_ok+0x1e>
lea    0x16ddf(%rip),%rsi        # 2e5b9 <chunks_to_process.34+0x7b4>
callq  b110 <png_app_error>
xor    %eax,%eax
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

00000000000177f0 <translate_gamma_flags>:
push   %rbp
mov    %rsp,%rbp
cmp    $0xffffffff,%esi
je     17813 <translate_gamma_flags+0x23>
cmp    $0xfffe7960,%esi
je     17813 <translate_gamma_flags+0x23>
cmp    $0xfffffffe,%esi
je     1782f <translate_gamma_flags+0x3f>
cmp    $0xffff3cb0,%esi
je     1782f <translate_gamma_flags+0x3f>
mov    %rsi,%rax
leaveq 
retq   
mov    0x130(%rdi),%eax
or     $0x1000,%eax
mov    %eax,0x130(%rdi)
test   %edx,%edx
je     1783a <translate_gamma_flags+0x4a>
mov    $0x35b60,%eax
leaveq 
retq   
test   %edx,%edx
je     17841 <translate_gamma_flags+0x51>
mov    $0x250ac,%eax
leaveq 
retq   
mov    $0xb18f,%eax
leaveq 
retq   
mov    $0x10175,%eax
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

0000000000017850 <convert_gamma_value>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x8(%rbp)
xorpd  %xmm1,%xmm1
ucomisd %xmm1,%xmm0
ja     178a2 <convert_gamma_value+0x52>
mov    %rdi,%r15
movsd  0x16da7(%rip),%xmm1        # 2e618 <chunks_to_process.34+0x813>
addsd  %xmm1,%xmm0
callq  57e0 <floor@plt>
movsd  0x16dae(%rip),%xmm1        # 2e630 <chunks_to_process.34+0x82b>
ucomisd %xmm1,%xmm0
ja     178c0 <convert_gamma_value+0x70>
movsd  0x16d90(%rip),%xmm1        # 2e620 <chunks_to_process.34+0x81b>
ucomisd %xmm1,%xmm0
jp     17898 <convert_gamma_value+0x48>
jb     178c0 <convert_gamma_value+0x70>
cvttsd2si %xmm0,%eax
mov    -0x8(%rbp),%r15
leaveq 
retq   
movsd  0x16d8e(%rip),%xmm1        # 2e638 <chunks_to_process.34+0x833>
ucomisd %xmm1,%xmm0
jp     17866 <convert_gamma_value+0x16>
jae    17866 <convert_gamma_value+0x16>
movsd  0x16d6e(%rip),%xmm1        # 2e628 <chunks_to_process.34+0x823>
mulsd  %xmm1,%xmm0
jmp    17866 <convert_gamma_value+0x16>
mov    %r15,%rdi
lea    0x16d1b(%rip),%rsi        # 2e5e5 <chunks_to_process.34+0x7e0>
callq  acb0 <png_fixed_error>
nop

00000000000178d0 <png_gamma_threshold>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %rsi,%rdx
mov    %rdi,%rsi
lea    -0x4(%rbp),%rdi
mov    $0x186a0,%ecx
callq  8970 <png_muldiv>
test   %eax,%eax
jne    178f7 <png_gamma_threshold+0x27>
mov    $0x1,%eax
leaveq 
retq   
movslq -0x4(%rbp),%rdi
callq  8b10 <png_gamma_significant>
test   %eax,%eax
je     1790b <png_gamma_threshold+0x3b>
mov    $0x1,%eax
leaveq 
retq   
xor    %eax,%eax
leaveq 
retq   
nop

0000000000017910 <png_init_palette_transformations>:
push   %rbp
mov    %rsp,%rbp
xor    %edx,%edx
movzwl 0x260(%rdi),%eax
test   %ax,%ax
jne    17940 <png_init_palette_transformations+0x30>
mov    %rdx,%rax
mov    %rax,%rsi
test   %esi,%esi
je     1794d <png_init_palette_transformations+0x3d>
mov    0x134(%rdi),%ecx
mov    %rcx,%rax
and    $0x100,%eax
test   %eax,%eax
jne    17986 <png_init_palette_transformations+0x76>
leaveq 
retq   
mov    $0x1,%esi
mov    %rdx,%rax
mov    %rax,%rcx
jmp    179ac <png_init_palette_transformations+0x9c>
mov    0x134(%rdi),%esi
mov    %rsi,%rcx
and    $0xff7fffff,%ecx
mov    %ecx,0x134(%rdi)
mov    0x130(%rdi),%ecx
and    $0xffffdfff,%ecx
mov    %ecx,0x130(%rdi)
test   %eax,%eax
jne    1792c <png_init_palette_transformations+0x1c>
and    $0xff7ffe7f,%esi
mov    %esi,0x134(%rdi)
jmp    1792c <png_init_palette_transformations+0x1c>
mov    %rcx,%rax
and    $0x1000,%eax
test   %eax,%eax
jne    179c1 <png_init_palette_transformations+0xb1>
leaveq 
retq   
mov    0x2e8(%rdi),%r8
movslq %ecx,%r9
movzbl (%r8,%r9,1),%r8d
cmp    $0xff,%r8b
jne    17a01 <png_init_palette_transformations+0xf1>
add    $0x1,%ecx
movzwl 0x260(%rdi),%r8d
cmp    %r8d,%ecx
jl     17994 <png_init_palette_transformations+0x84>
mov    %rdx,%rsi
jmpq   17928 <png_init_palette_transformations+0x18>
movzbl 0x27c(%rdi),%eax
lea    (%rax,%rax,2),%rax
add    0x250(%rdi),%rax
movzbl (%rax),%esi
mov    %si,0x27e(%rdi)
movzbl 0x1(%rax),%esi
mov    %si,0x280(%rdi)
movzbl 0x2(%rax),%eax
mov    %ax,0x282(%rdi)
mov    %rcx,%rax
and    $0x80000,%eax
test   %eax,%eax
jne    17a0b <png_init_palette_transformations+0xfb>
leaveq 
retq   
test   %r8b,%r8b
jne    17a17 <png_init_palette_transformations+0x107>
mov    %rsi,%rax
jmp    179a9 <png_init_palette_transformations+0x99>
and    $0x2000000,%ecx
test   %ecx,%ecx
je     17a1f <png_init_palette_transformations+0x10f>
leaveq 
retq   
mov    %rsi,%rax
jmpq   17928 <png_init_palette_transformations+0x18>
movzwl 0x260(%rdi),%esi
jmp    17a3c <png_init_palette_transformations+0x12c>
movslq %edx,%rax
add    0x2e8(%rdi),%rax
movzbl (%rax),%ecx
not    %ecx
mov    %cl,(%rax)
add    $0x1,%edx
cmp    %esi,%edx
jl     17a28 <png_init_palette_transformations+0x118>
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   (%rax)

0000000000017a50 <png_init_rgb_transformations>:
push   %rbp
mov    %rsp,%rbp
mov    $0x1,%edx
xor    %ecx,%ecx
movzbl 0x267(%rdi),%eax
and    $0x4,%eax
test   %eax,%eax
jg     17a6e <png_init_rgb_transformations+0x1e>
mov    %rcx,%rsi
jmp    17a71 <png_init_rgb_transformations+0x21>
mov    %rdx,%rsi
movzwl 0x260(%rdi),%eax
test   %ax,%ax
je     17a80 <png_init_rgb_transformations+0x30>
mov    %rdx,%rcx
test   %esi,%esi
je     17a98 <png_init_rgb_transformations+0x48>
mov    0x134(%rdi),%ecx
mov    %rcx,%rax
and    $0x100,%eax
test   %eax,%eax
jne    17acf <png_init_rgb_transformations+0x7f>
leaveq 
retq   
mov    0x134(%rdi),%edx
mov    %rdx,%rax
and    $0xff7fffff,%eax
mov    %eax,0x134(%rdi)
mov    0x130(%rdi),%eax
and    $0xffffdfff,%eax
mov    %eax,0x130(%rdi)
test   %ecx,%ecx
jne    17a84 <png_init_rgb_transformations+0x34>
and    $0xff7ffe7f,%edx
mov    %edx,0x134(%rdi)
jmp    17a84 <png_init_rgb_transformations+0x34>
mov    %rcx,%rax
and    $0x1000,%eax
test   %eax,%eax
jne    17add <png_init_rgb_transformations+0x8d>
leaveq 
retq   
movzbl 0x267(%rdi),%eax
and    $0x2,%eax
test   %eax,%eax
je     17aed <png_init_rgb_transformations+0x9d>
leaveq 
retq   
movzwl 0x284(%rdi),%edx
movzwl 0x2f8(%rdi),%eax
movzbl 0x268(%rdi),%esi
cmp    $0x1,%sil
jbe    17b26 <png_init_rgb_transformations+0xd6>
cmp    $0x2,%sil
je     17b65 <png_init_rgb_transformations+0x115>
cmp    $0x4,%sil
jne    17b44 <png_init_rgb_transformations+0xf4>
mov    %rax,%rsi
shl    $0x4,%esi
add    %esi,%eax
mov    %rdx,%rsi
shl    $0x4,%esi
add    %esi,%edx
jmp    17b44 <png_init_rgb_transformations+0xf4>
cmp    $0x1,%sil
jne    17b44 <png_init_rgb_transformations+0xf4>
mov    %rax,%rsi
shl    $0x8,%esi
sub    %ax,%si
mov    %rdx,%rax
shl    $0x8,%eax
sub    %dx,%ax
mov    %rax,%rdx
mov    %rsi,%rax
mov    %dx,0x282(%rdi)
mov    %dx,0x280(%rdi)
mov    %dx,0x27e(%rdi)
and    $0x2000000,%ecx
test   %ecx,%ecx
je     17b7d <png_init_rgb_transformations+0x12d>
leaveq 
retq   
mov    %rax,%rsi
shl    $0x4,%esi
add    %esi,%eax
lea    (%rax,%rax,4),%eax
mov    %rdx,%rsi
shl    $0x4,%esi
add    %esi,%edx
lea    (%rdx,%rdx,4),%edx
jmp    17b44 <png_init_rgb_transformations+0xf4>
mov    %ax,0x2f6(%rdi)
mov    %ax,0x2f4(%rdi)
mov    %ax,0x2f2(%rdi)
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nop

0000000000017ba0 <png_do_unpack>:
push   %rbp
mov    %rsp,%rbp
movzbl 0x11(%rdi),%ecx
cmp    $0x7,%cl
jbe    17baf <png_do_unpack+0xf>
leaveq 
retq   
mov    (%rdi),%eax
xor    %edx,%edx
cmp    $0x1,%cl
jbe    17bee <png_do_unpack+0x4e>
cmp    $0x2,%cl
je     17c15 <png_do_unpack+0x75>
cmp    $0x4,%cl
jne    17c3a <png_do_unpack+0x9a>
mov    $0xfffffffe,%ecx
sub    %eax,%ecx
and    $0x1,%ecx
neg    %ecx
and    $0x4,%ecx
lea    -0x1(%rax),%r8d
shr    %r8d
mov    %r8d,%r8d
add    %rsi,%r8
lea    -0x1(%rsi,%rax,1),%r10
mov    $0x4,%r9d
mov    %rdx,%r11
jmp    17c65 <png_do_unpack+0xc5>
cmp    $0x1,%cl
jne    17c3a <png_do_unpack+0x9a>
mov    $0xfffffff8,%ecx
sub    %eax,%ecx
and    $0x7,%ecx
lea    -0x1(%rax),%r8d
shr    $0x3,%r8d
mov    %r8d,%r8d
add    %rsi,%r8
lea    -0x1(%rsi,%rax,1),%r9
mov    %rdx,%r10
jmp    17c90 <png_do_unpack+0xf0>
lea    -0x1(%rax),%ecx
shr    $0x2,%ecx
mov    %ecx,%ecx
lea    (%rsi,%rcx,1),%r8
mov    $0xfffffffc,%ecx
sub    %eax,%ecx
and    $0x3,%ecx
add    %ecx,%ecx
lea    -0x1(%rsi,%rax,1),%r9
mov    %rdx,%r10
jmpq   17cbb <png_do_unpack+0x11b>
movb   $0x8,0x11(%rdi)
movzbl 0x12(%rdi),%edx
mov    %rdx,%rcx
shl    $0x3,%ecx
mov    %cl,0x13(%rdi)
imul   %edx,%eax
mov    %eax,%eax
mov    %rax,0x8(%rdi)
leaveq 
retq   
add    $0xffffffffffffffff,%r8
mov    %rdx,%rcx
add    $0xffffffffffffffff,%r10
add    $0x1,%r11d
cmp    %eax,%r11d
jae    17c3a <png_do_unpack+0x9a>
movzbl (%r8),%esi
shr    %cl,%esi
and    $0xf,%sil
mov    %sil,(%r10)
cmp    $0x4,%ecx
je     17c56 <png_do_unpack+0xb6>
mov    %r9,%rcx
jmp    17c5d <png_do_unpack+0xbd>
add    $0xffffffffffffffff,%r8
mov    %rdx,%rcx
add    $0xffffffffffffffff,%r9
add    $0x1,%r10d
cmp    %r10d,%eax
jbe    17c3a <png_do_unpack+0x9a>
movzbl (%r8),%esi
shr    %cl,%esi
and    $0x1,%sil
mov    %sil,(%r9)
cmp    $0x7,%ecx
je     17c81 <png_do_unpack+0xe1>
add    $0x1,%ecx
jmp    17c88 <png_do_unpack+0xe8>
add    $0xffffffffffffffff,%r8
mov    %rdx,%rcx
add    $0xffffffffffffffff,%r9
add    $0x1,%r10d
cmp    %r10d,%eax
jbe    17c3a <png_do_unpack+0x9a>
movzbl (%r8),%esi
shr    %cl,%esi
and    $0x3,%sil
mov    %sil,(%r9)
cmp    $0x6,%ecx
je     17cac <png_do_unpack+0x10c>
add    $0x2,%ecx
jmp    17cb3 <png_do_unpack+0x113>
nopl   0x0(%rax,%rax,1)

0000000000017ce0 <png_do_unshift>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
movzbl 0x10(%rdi),%eax
cmp    $0x3,%al
jne    17cf2 <png_do_unshift+0x12>
leaveq 
retq   
movzbl 0x11(%rdi),%r11d
mov    $0x4,%ecx
mov    $0x1,%r10d
mov    %rax,%r8
and    $0x2,%r8d
test   %r8d,%r8d
jg     17d28 <png_do_unshift+0x48>
movzbl 0x3(%rdx),%r8d
neg    %r8d
add    %r11d,%r8d
mov    %r8d,-0x18(%rbp)
mov    $0x2,%r9d
mov    %r10,%r8
jmp    17d62 <png_do_unshift+0x82>
movzbl (%rdx),%r8d
neg    %r8d
add    %r11d,%r8d
mov    %r8d,-0x18(%rbp)
movzbl 0x1(%rdx),%r8d
neg    %r8d
add    %r11d,%r8d
mov    %r8d,-0x14(%rbp)
movzbl 0x2(%rdx),%r8d
neg    %r8d
add    %r11d,%r8d
mov    %r8d,-0x10(%rbp)
mov    %rcx,%r9
mov    $0xc,%ecx
mov    $0x3,%r8d
mov    %rsi,-0x8(%rbp)
xor    %esi,%esi
and    $0x4,%eax
test   %eax,%eax
jg     17d77 <png_do_unshift+0x97>
mov    %rsi,%rax
mov    %rax,%rcx
jmp    17d9b <png_do_unshift+0xbb>
movzbl 0x4(%rdx),%eax
neg    %eax
add    %r11d,%eax
mov    %eax,-0x18(%rbp,%rcx,1)
mov    %r9,%r8
mov    %rsi,%rax
mov    %rax,%rcx
jmp    17d9b <png_do_unshift+0xbb>
movl   $0x0,-0x18(%rbp,%r9,4)
add    $0x1,%ecx
cmp    %ecx,%r8d
jg     17da6 <png_do_unshift+0xc6>
test   %eax,%eax
jne    17dbc <png_do_unshift+0xdc>
leaveq 
retq   
movslq %ecx,%r9
movslq -0x18(%rbp,%r9,4),%rdx
test   %edx,%edx
jle    17d8f <png_do_unshift+0xaf>
cmp    %r11d,%edx
jge    17d8f <png_do_unshift+0xaf>
mov    %r10,%rax
jmp    17d98 <png_do_unshift+0xb8>
cmp    $0x7,%r11b
jbe    17dd0 <png_do_unshift+0xf0>
cmp    $0x8,%r11b
je     17dde <png_do_unshift+0xfe>
cmp    $0x10,%r11b
je     17dee <png_do_unshift+0x10e>
leaveq 
retq   
cmp    $0x2,%r11b
je     17e01 <png_do_unshift+0x121>
cmp    $0x4,%r11b
je     17e11 <png_do_unshift+0x131>
leaveq 
retq   
mov    -0x8(%rbp),%rdx
mov    0x8(%rdi),%rdi
add    %rdx,%rdi
mov    %rsi,%rax
jmp    17e53 <png_do_unshift+0x173>
mov    -0x8(%rbp),%r9
mov    %r9,%rdx
add    0x8(%rdi),%rdx
mov    %rsi,%rax
jmpq   17e8e <png_do_unshift+0x1ae>
mov    -0x8(%rbp),%rcx
mov    %rcx,%rdx
add    0x8(%rdi),%rdx
jmpq   17ea2 <png_do_unshift+0x1c2>
mov    -0x8(%rbp),%rdx
mov    %rdx,%rsi
add    0x8(%rdi),%rsi
mov    -0x18(%rbp),%ecx
mov    $0xf,%eax
shr    %cl,%eax
mov    %rax,%rdi
shl    $0x4,%edi
add    %eax,%edi
jmpq   17eb6 <png_do_unshift+0x1d6>
movzbl (%rdx),%r9d
movslq %eax,%rcx
mov    -0x18(%rbp,%rcx,4),%ecx
add    $0x1,%eax
cmp    %eax,%r8d
jg     17e49 <png_do_unshift+0x169>
mov    %rsi,%rax
shr    %cl,%r9d
mov    %r9b,(%rdx)
add    $0x1,%rdx
cmp    %rdi,%rdx
jb     17e33 <png_do_unshift+0x153>
leaveq 
retq   
movzbl 0x1(%r9),%r10d
movzbl (%r9),%edi
movslq %eax,%rcx
mov    -0x18(%rbp,%rcx,4),%ecx
add    $0x1,%eax
cmp    %eax,%r8d
jg     17e75 <png_do_unshift+0x195>
mov    %rsi,%rax
shl    $0x8,%edi
add    %r10d,%edi
shr    %cl,%edi
mov    %rdi,%rcx
shr    $0x8,%ecx
mov    %cl,(%r9)
mov    %dil,0x1(%r9)
add    $0x2,%r9
cmp    %rdx,%r9
jb     17e5a <png_do_unshift+0x17a>
leaveq 
retq   
movzbl (%rcx),%eax
shr    %eax
and    $0x55,%al
mov    %al,(%rcx)
add    $0x1,%rcx
cmp    %rdx,%rcx
jb     17e95 <png_do_unshift+0x1b5>
leaveq 
retq   
movzbl (%rdx),%eax
shr    %cl,%eax
and    %edi,%eax
mov    %al,(%rdx)
add    $0x1,%rdx
cmp    %rsi,%rdx
jb     17ea9 <png_do_unshift+0x1c9>
leaveq 
retq   
nopl   (%rax)

0000000000017ec0 <png_do_scale_16_to_8>:
push   %rbp
mov    %rsp,%rbp
movzbl 0x11(%rdi),%eax
cmp    $0x10,%al
je     17ece <png_do_scale_16_to_8+0xe>
leaveq 
retq   
mov    %rsi,%rdx
add    0x8(%rdi),%rdx
mov    %rsi,%rax
jmp    17f0a <png_do_scale_16_to_8+0x4a>
movzbl 0x1(%rax),%r8d
movzbl (%rax),%r9d
mov    %r8,%rcx
sub    %r9d,%ecx
shl    $0x10,%ecx
neg    %r8d
add    %r9d,%r8d
lea    0x7fff80(%rcx,%r8,1),%ecx
sar    $0x18,%ecx
add    %r9d,%ecx
mov    %cl,(%rsi)
add    $0x2,%rax
add    $0x1,%rsi
cmp    %rdx,%rax
jb     17eda <png_do_scale_16_to_8+0x1a>
movb   $0x8,0x11(%rdi)
movzbl 0x12(%rdi),%eax
mov    %rax,%rcx
shl    $0x3,%ecx
mov    %cl,0x13(%rdi)
imul   (%rdi),%eax
mov    %eax,%eax
mov    %rax,0x8(%rdi)
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

0000000000017f30 <png_do_chop>:
push   %rbp
mov    %rsp,%rbp
movzbl 0x11(%rdi),%eax
cmp    $0x10,%al
je     17f3e <png_do_chop+0xe>
leaveq 
retq   
mov    %rsi,%rcx
add    0x8(%rdi),%rcx
mov    %rsi,%rax
jmp    17f57 <png_do_chop+0x27>
movzbl (%rax),%edx
mov    %dl,(%rsi)
add    $0x2,%rax
add    $0x1,%rsi
cmp    %rcx,%rax
jb     17f4a <png_do_chop+0x1a>
movb   $0x8,0x11(%rdi)
movzbl 0x12(%rdi),%eax
mov    %rax,%rcx
shl    $0x3,%ecx
mov    %cl,0x13(%rdi)
imul   (%rdi),%eax
mov    %eax,%eax
mov    %rax,0x8(%rdi)
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

0000000000017f80 <png_do_read_swap_alpha>:
push   %rbp
mov    %rsp,%rbp
mov    (%rdi),%r9d
xor    %eax,%eax
movzbl 0x10(%rdi),%ecx
cmp    $0x6,%cl
je     17f99 <png_do_read_swap_alpha+0x19>
cmp    $0x4,%cl
je     17fa8 <png_do_read_swap_alpha+0x28>
leaveq 
retq   
movzbl 0x11(%rdi),%ecx
cmp    $0x8,%cl
je     17fba <png_do_read_swap_alpha+0x3a>
add    0x8(%rdi),%rsi
jmp    18006 <png_do_read_swap_alpha+0x86>
movzbl 0x11(%rdi),%ecx
cmp    $0x8,%cl
je     1800d <png_do_read_swap_alpha+0x8d>
add    0x8(%rdi),%rsi
jmpq   1803a <png_do_read_swap_alpha+0xba>
add    0x8(%rdi),%rsi
jmpq   18066 <png_do_read_swap_alpha+0xe6>
movzbl -0x3(%rsi),%r8d
movzbl -0x4(%rsi),%edi
movzbl -0x5(%rsi),%ecx
mov    %cl,-0x3(%rsi)
movzbl -0x6(%rsi),%ecx
mov    %cl,-0x4(%rsi)
movzbl -0x7(%rsi),%ecx
mov    %cl,-0x5(%rsi)
lea    -0x8(%rsi),%rdx
movzbl (%rdx),%ecx
mov    %cl,-0x6(%rsi)
movzbl -0x1(%rsi),%ecx
mov    %r8b,-0x1(%rsi)
mov    %cl,-0x7(%rsi)
movzbl -0x2(%rsi),%ecx
mov    %dil,-0x2(%rsi)
mov    %cl,(%rdx)
add    $0x1,%eax
mov    %rdx,%rsi
cmp    %eax,%r9d
ja     17fc3 <png_do_read_swap_alpha+0x43>
leaveq 
retq   
add    0x8(%rdi),%rsi
jmp    18083 <png_do_read_swap_alpha+0x103>
movzbl -0x3(%rsi),%edx
lea    -0x4(%rsi),%rcx
movzbl (%rcx),%r8d
movzbl -0x1(%rsi),%edi
mov    %dl,-0x1(%rsi)
mov    %dil,-0x3(%rsi)
movzbl -0x2(%rsi),%edx
mov    %r8b,-0x2(%rsi)
mov    %dl,(%rcx)
add    $0x1,%eax
mov    %rcx,%rsi
cmp    %eax,%r9d
ja     18013 <png_do_read_swap_alpha+0x93>
leaveq 
retq   
movzbl -0x2(%rsi),%edi
movzbl -0x3(%rsi),%ecx
mov    %cl,-0x2(%rsi)
lea    -0x4(%rsi),%rdx
movzbl (%rdx),%ecx
mov    %cl,-0x3(%rsi)
movzbl -0x1(%rsi),%ecx
mov    %dil,-0x1(%rsi)
mov    %cl,(%rdx)
add    $0x1,%eax
mov    %rdx,%rsi
cmp    %r9d,%eax
jb     18041 <png_do_read_swap_alpha+0xc1>
leaveq 
retq   
lea    -0x2(%rsi),%rdi
movzbl (%rdi),%edx
movzbl -0x1(%rsi),%ecx
mov    %dl,-0x1(%rsi)
mov    %cl,(%rdi)
add    $0x1,%eax
mov    %rdi,%rsi
cmp    %eax,%r9d
ja     1806d <png_do_read_swap_alpha+0xed>
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

0000000000018090 <png_do_read_invert_alpha>:
push   %rbp
mov    %rsp,%rbp
mov    (%rdi),%r8d
xor    %eax,%eax
movzbl 0x10(%rdi),%ecx
cmp    $0x6,%cl
je     180a9 <png_do_read_invert_alpha+0x19>
cmp    $0x4,%cl
je     180b8 <png_do_read_invert_alpha+0x28>
leaveq 
retq   
movzbl 0x11(%rdi),%ecx
cmp    $0x8,%cl
je     180c7 <png_do_read_invert_alpha+0x37>
add    0x8(%rdi),%rsi
jmp    180eb <png_do_read_invert_alpha+0x5b>
movzbl 0x11(%rdi),%ecx
cmp    $0x8,%cl
je     180f2 <png_do_read_invert_alpha+0x62>
add    0x8(%rdi),%rsi
jmp    18116 <png_do_read_invert_alpha+0x86>
mov    0x8(%rdi),%rcx
lea    -0x1(%rcx,%rsi,1),%rcx
jmp    1812b <png_do_read_invert_alpha+0x9b>
movzbl -0x1(%rsi),%ecx
not    %ecx
mov    %cl,-0x1(%rsi)
movzbl -0x2(%rsi),%ecx
not    %ecx
mov    %cl,-0x2(%rsi)
add    $0x1,%eax
add    $0xfffffffffffffff8,%rsi
cmp    %eax,%r8d
ja     180d2 <png_do_read_invert_alpha+0x42>
leaveq 
retq   
mov    0x8(%rdi),%rcx
lea    -0x1(%rsi,%rcx,1),%rcx
jmp    18140 <png_do_read_invert_alpha+0xb0>
movzbl -0x1(%rsi),%ecx
not    %ecx
mov    %cl,-0x1(%rsi)
movzbl -0x2(%rsi),%ecx
not    %ecx
mov    %cl,-0x2(%rsi)
add    $0x1,%eax
add    $0xfffffffffffffffc,%rsi
cmp    %eax,%r8d
ja     180fd <png_do_read_invert_alpha+0x6d>
leaveq 
retq   
movzbl (%rcx),%edx
not    %edx
mov    %dl,(%rcx)
add    $0x1,%eax
add    $0xfffffffffffffffc,%rcx
cmp    %r8d,%eax
jb     1811d <png_do_read_invert_alpha+0x8d>
leaveq 
retq   
movzbl (%rcx),%edx
not    %edx
mov    %dl,(%rcx)
add    $0x1,%eax
add    $0xfffffffffffffffe,%rcx
cmp    %eax,%r8d
ja     18132 <png_do_read_invert_alpha+0xa2>
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

0000000000018150 <png_do_read_filler>:
push   %rbp
mov    %rsp,%rbp
mov    (%rdi),%r9d
mov    %rdx,%r11
shr    $0x8,%r11d
mov    $0x1,%r8d
xor    %eax,%eax
movzbl 0x10(%rdi),%r10d
test   %r10b,%r10b
je     18178 <png_do_read_filler+0x28>
cmp    $0x2,%r10b
je     1818b <png_do_read_filler+0x3b>
leaveq 
retq   
movzbl 0x11(%rdi),%r10d
cmp    $0x8,%r10b
je     1819e <png_do_read_filler+0x4e>
cmp    $0x10,%r10b
je     181b2 <png_do_read_filler+0x62>
leaveq 
retq   
movzbl 0x11(%rdi),%r10d
cmp    $0x8,%r10b
je     181cd <png_do_read_filler+0x7d>
cmp    $0x10,%r10b
je     181eb <png_do_read_filler+0x9b>
leaveq 
retq   
and    $0x80,%ecx
test   %ecx,%ecx
jne    1820a <png_do_read_filler+0xba>
lea    (%r9,%rsi,1),%rcx
lea    (%rsi,%r9,2),%rsi
jmp    1822c <png_do_read_filler+0xdc>
and    $0x80,%ecx
test   %ecx,%ecx
jne    18245 <png_do_read_filler+0xf5>
lea    (%rsi,%r9,2),%rcx
lea    (%rsi,%r9,4),%rsi
jmpq   18274 <png_do_read_filler+0x124>
and    $0x80,%ecx
test   %ecx,%ecx
jne    1828e <png_do_read_filler+0x13e>
lea    (%r9,%r9,2),%rcx
add    %rsi,%rcx
lea    (%r9,%rcx,1),%rsi
jmpq   182c5 <png_do_read_filler+0x175>
and    $0x80,%ecx
test   %ecx,%ecx
jne    182df <png_do_read_filler+0x18f>
lea    (%r9,%r9,2),%rcx
lea    (%rsi,%rcx,2),%rcx
lea    (%rcx,%r9,2),%rsi
jmpq   18336 <png_do_read_filler+0x1e6>
lea    (%rsi,%r9,2),%rax
lea    (%r9,%rsi,1),%rcx
jmpq   18365 <png_do_read_filler+0x215>
add    $0xffffffffffffffff,%rcx
movzbl (%rcx),%r8d
mov    %r8b,-0x1(%rsi)
add    $0xfffffffffffffffe,%rsi
mov    %dl,(%rsi)
add    $0x1,%eax
cmp    %eax,%r9d
ja     18217 <png_do_read_filler+0xc7>
movb   $0x2,0x12(%rdi)
movb   $0x10,0x13(%rdi)
lea    (%r9,%r9,1),%eax
mov    %eax,%eax
mov    %rax,0x8(%rdi)
leaveq 
retq   
lea    (%rsi,%r9,4),%rax
lea    (%rsi,%r9,2),%rcx
jmpq   183a2 <png_do_read_filler+0x252>
movzbl -0x1(%rcx),%r8d
mov    %r8b,-0x1(%rsi)
add    $0xfffffffffffffffe,%rcx
movzbl (%rcx),%r8d
mov    %r8b,-0x2(%rsi)
mov    %dl,-0x3(%rsi)
add    $0xfffffffffffffffc,%rsi
mov    %r11b,(%rsi)
add    $0x1,%eax
cmp    %eax,%r9d
ja     18252 <png_do_read_filler+0x102>
movb   $0x2,0x12(%rdi)
movb   $0x20,0x13(%rdi)
shl    $0x2,%r9d
mov    %r9d,%eax
mov    %rax,0x8(%rdi)
leaveq 
retq   
lea    (%r9,%r9,2),%rax
add    %rsi,%rax
lea    (%r9,%rax,1),%rcx
jmpq   183e8 <png_do_read_filler+0x298>
movzbl -0x1(%rcx),%r8d
mov    %r8b,-0x1(%rsi)
movzbl -0x2(%rcx),%r8d
mov    %r8b,-0x2(%rsi)
add    $0xfffffffffffffffd,%rcx
movzbl (%rcx),%r8d
mov    %r8b,-0x3(%rsi)
add    $0xfffffffffffffffc,%rsi
mov    %dl,(%rsi)
add    $0x1,%eax
cmp    %eax,%r9d
ja     1829e <png_do_read_filler+0x14e>
movb   $0x4,0x12(%rdi)
movb   $0x20,0x13(%rdi)
shl    $0x2,%r9d
mov    %r9d,%eax
mov    %rax,0x8(%rdi)
leaveq 
retq   
lea    (%r9,%r9,2),%rax
lea    (%rsi,%rax,2),%rax
lea    (%rax,%r9,2),%rcx
jmpq   18446 <png_do_read_filler+0x2f6>
movzbl -0x1(%rcx),%r8d
mov    %r8b,-0x1(%rsi)
movzbl -0x2(%rcx),%r8d
mov    %r8b,-0x2(%rsi)
movzbl -0x3(%rcx),%r8d
mov    %r8b,-0x3(%rsi)
movzbl -0x4(%rcx),%r8d
mov    %r8b,-0x4(%rsi)
movzbl -0x5(%rcx),%r8d
mov    %r8b,-0x5(%rsi)
add    $0xfffffffffffffffa,%rcx
movzbl (%rcx),%r8d
mov    %r8b,-0x6(%rsi)
mov    %dl,-0x7(%rsi)
add    $0xfffffffffffffff8,%rsi
mov    %r11b,(%rsi)
add    $0x1,%eax
cmp    %eax,%r9d
ja     182f0 <png_do_read_filler+0x1a0>
movb   $0x4,0x12(%rdi)
movb   $0x40,0x13(%rdi)
shl    $0x3,%r9d
mov    %r9d,%eax
mov    %rax,0x8(%rdi)
leaveq 
retq   
mov    %dl,-0x1(%rax)
add    $0xfffffffffffffffe,%rax
add    $0xffffffffffffffff,%rcx
movzbl (%rcx),%esi
mov    %sil,(%rax)
add    $0x1,%r8d
cmp    %r9d,%r8d
jb     18350 <png_do_read_filler+0x200>
mov    %dl,-0x1(%rax)
movb   $0x2,0x12(%rdi)
movb   $0x10,0x13(%rdi)
lea    (%r9,%r9,1),%eax
mov    %eax,%eax
mov    %rax,0x8(%rdi)
leaveq 
retq   
mov    %dl,-0x1(%rax)
mov    %r11b,-0x2(%rax)
movzbl -0x1(%rcx),%esi
mov    %sil,-0x3(%rax)
add    $0xfffffffffffffffc,%rax
add    $0xfffffffffffffffe,%rcx
movzbl (%rcx),%esi
mov    %sil,(%rax)
add    $0x1,%r8d
cmp    %r8d,%r9d
ja     18381 <png_do_read_filler+0x231>
mov    %dl,-0x1(%rax)
mov    %r11b,-0x2(%rax)
movb   $0x2,0x12(%rdi)
movb   $0x20,0x13(%rdi)
shl    $0x2,%r9d
mov    %r9d,%eax
mov    %rax,0x8(%rdi)
leaveq 
retq   
mov    %dl,-0x1(%rcx)
movzbl -0x1(%rax),%esi
mov    %sil,-0x2(%rcx)
movzbl -0x2(%rax),%esi
mov    %sil,-0x3(%rcx)
add    $0xfffffffffffffffc,%rcx
add    $0xfffffffffffffffd,%rax
movzbl (%rax),%esi
mov    %sil,(%rcx)
add    $0x1,%r8d
cmp    %r8d,%r9d
ja     183c3 <png_do_read_filler+0x273>
mov    %dl,-0x1(%rcx)
movb   $0x4,0x12(%rdi)
movb   $0x20,0x13(%rdi)
shl    $0x2,%r9d
mov    %r9d,%eax
mov    %rax,0x8(%rdi)
leaveq 
retq   
mov    %dl,-0x1(%rcx)
mov    %r11b,-0x2(%rcx)
movzbl -0x1(%rax),%esi
mov    %sil,-0x3(%rcx)
movzbl -0x2(%rax),%esi
mov    %sil,-0x4(%rcx)
movzbl -0x3(%rax),%esi
mov    %sil,-0x5(%rcx)
movzbl -0x4(%rax),%esi
mov    %sil,-0x6(%rcx)
movzbl -0x5(%rax),%esi
mov    %sil,-0x7(%rcx)
add    $0xfffffffffffffff8,%rcx
add    $0xfffffffffffffffa,%rax
movzbl (%rax),%esi
mov    %sil,(%rcx)
add    $0x1,%r8d
cmp    %r8d,%r9d
ja     18405 <png_do_read_filler+0x2b5>
mov    %dl,-0x1(%rcx)
mov    %r11b,-0x2(%rcx)
movb   $0x4,0x12(%rdi)
movb   $0x40,0x13(%rdi)
shl    $0x3,%r9d
mov    %r9d,%eax
mov    %rax,0x8(%rdi)
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

0000000000018470 <png_do_gray_to_rgb>:
push   %rbp
mov    %rsp,%rbp
mov    (%rdi),%r8d
movzbl 0x11(%rdi),%edx
cmp    $0x7,%dl
ja     18482 <png_do_gray_to_rgb+0x12>
leaveq 
retq   
movzbl 0x10(%rdi),%ecx
mov    %rcx,%rax
and    $0x2,%eax
test   %eax,%eax
je     18492 <png_do_gray_to_rgb+0x22>
leaveq 
retq   
xor    %eax,%eax
test   %cl,%cl
je     184ce <png_do_gray_to_rgb+0x5e>
cmp    $0x4,%cl
je     184e2 <png_do_gray_to_rgb+0x72>
movzbl 0x12(%rdi),%eax
lea    0x2(%rax),%ecx
mov    %cl,0x12(%rdi)
movzbl 0x10(%rdi),%eax
or     $0x2,%al
mov    %al,0x10(%rdi)
movzbl 0x11(%rdi),%eax
imul   %cl
mov    %al,0x13(%rdi)
cmp    $0x7,%al
ja     184f6 <png_do_gray_to_rgb+0x86>
movzbl %al,%eax
imul   %r8,%rax
add    $0x7,%rax
shr    $0x3,%rax
jmp    18501 <png_do_gray_to_rgb+0x91>
cmp    $0x8,%dl
je     18507 <png_do_gray_to_rgb+0x97>
lea    (%rsi,%r8,2),%rdx
lea    -0x1(%rdx),%rcx
lea    -0x1(%rdx,%r8,4),%rdx
jmp    18551 <png_do_gray_to_rgb+0xe1>
cmp    $0x8,%dl
je     1855b <png_do_gray_to_rgb+0xeb>
lea    -0x1(%rsi,%r8,4),%rcx
lea    -0x1(%rsi,%r8,8),%rdx
jmpq   185b3 <png_do_gray_to_rgb+0x143>
movzbl %al,%eax
shr    $0x3,%rax
imul   %r8,%rax
mov    %rax,0x8(%rdi)
leaveq 
retq   
lea    -0x1(%r8,%rsi,1),%rcx
lea    (%r8,%rsi,1),%rdx
lea    -0x1(%rdx,%r8,2),%rdx
jmpq   185dc <png_do_gray_to_rgb+0x16c>
movzbl (%rcx),%esi
mov    %sil,(%rdx)
movzbl -0x1(%rcx),%esi
mov    %sil,-0x1(%rdx)
movzbl (%rcx),%esi
mov    %sil,-0x2(%rdx)
movzbl -0x1(%rcx),%esi
mov    %sil,-0x3(%rdx)
movzbl (%rcx),%esi
mov    %sil,-0x4(%rdx)
movzbl -0x1(%rcx),%esi
mov    %sil,-0x5(%rdx)
add    $0xfffffffffffffffe,%rcx
add    $0xfffffffffffffffa,%rdx
add    $0x1,%eax
cmp    %eax,%r8d
ja     1851a <png_do_gray_to_rgb+0xaa>
jmpq   1849d <png_do_gray_to_rgb+0x2d>
lea    -0x1(%rsi,%r8,2),%rcx
lea    -0x1(%rsi,%r8,4),%rdx
jmpq   1860f <png_do_gray_to_rgb+0x19f>
movzbl (%rcx),%esi
mov    %sil,(%rdx)
movzbl -0x1(%rcx),%esi
mov    %sil,-0x1(%rdx)
movzbl -0x2(%rcx),%esi
mov    %sil,-0x2(%rdx)
movzbl -0x3(%rcx),%esi
mov    %sil,-0x3(%rdx)
movzbl -0x2(%rcx),%esi
mov    %sil,-0x4(%rdx)
movzbl -0x3(%rcx),%esi
mov    %sil,-0x5(%rdx)
movzbl -0x2(%rcx),%esi
mov    %sil,-0x6(%rdx)
movzbl -0x3(%rcx),%esi
mov    %sil,-0x7(%rdx)
add    $0xfffffffffffffffc,%rcx
add    $0xfffffffffffffff8,%rdx
add    $0x1,%eax
cmp    %r8d,%eax
jb     1856a <png_do_gray_to_rgb+0xfa>
jmpq   1849d <png_do_gray_to_rgb+0x2d>
movzbl (%rcx),%esi
mov    %sil,(%rdx)
movzbl (%rcx),%esi
mov    %sil,-0x1(%rdx)
movzbl (%rcx),%esi
mov    %sil,-0x2(%rdx)
add    $0xffffffffffffffff,%rcx
add    $0xfffffffffffffffd,%rdx
add    $0x1,%eax
cmp    %eax,%r8d
ja     185bd <png_do_gray_to_rgb+0x14d>
jmpq   1849d <png_do_gray_to_rgb+0x2d>
movzbl (%rcx),%esi
mov    %sil,(%rdx)
movzbl -0x1(%rcx),%esi
mov    %sil,-0x1(%rdx)
movzbl -0x1(%rcx),%esi
mov    %sil,-0x2(%rdx)
movzbl -0x1(%rcx),%esi
mov    %sil,-0x3(%rdx)
add    $0xfffffffffffffffe,%rcx
add    $0xfffffffffffffffc,%rdx
add    $0x1,%eax
cmp    %eax,%r8d
ja     185e6 <png_do_gray_to_rgb+0x176>
jmpq   1849d <png_do_gray_to_rgb+0x2d>
nopl   0x0(%rax)

0000000000018620 <png_do_rgb_to_gray>:
push   %rbp
mov    %rsp,%rbp
sub    $0x40,%rsp
xor    %eax,%eax
movzbl 0x10(%rsi),%r10d
mov    %r10,%rcx
and    $0x1,%ecx
test   %ecx,%ecx
je     1863b <png_do_rgb_to_gray+0x1b>
leaveq 
retq   
mov    %r10,%rcx
and    $0x2,%ecx
test   %ecx,%ecx
jg     18647 <png_do_rgb_to_gray+0x27>
leaveq 
retq   
mov    (%rsi),%r11d
movzwl 0x3d2(%rdi),%r9d
movzwl 0x3d4(%rdi),%r8d
mov    $0x1,%ecx
and    $0x4,%r10d
test   %r10d,%r10d
jg     1866d <png_do_rgb_to_gray+0x4d>
mov    %rax,%r10
jmp    18670 <png_do_rgb_to_gray+0x50>
mov    %rcx,%r10
mov    %r15,-0x28(%rbp)
lea    (%r8,%r9,1),%r15d
mov    %r14,-0x20(%rbp)
mov    $0x8000,%r14d
sub    %r15d,%r14d
movzbl 0x11(%rsi),%r15d
cmp    $0x8,%r15b
je     186b4 <png_do_rgb_to_gray+0x94>
mov    0x2d0(%rdi),%r15
test   %r15,%r15
jne    186db <png_do_rgb_to_gray+0xbb>
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %rsi,-0x38(%rbp)
mov    %rax,%rbx
mov    %rdx,%rsi
jmp    1871d <png_do_rgb_to_gray+0xfd>
mov    0x2b8(%rdi),%r15
test   %r15,%r15
jne    18765 <png_do_rgb_to_gray+0x145>
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %rax,%rbx
mov    %rdx,%r12
jmpq   1879b <png_do_rgb_to_gray+0x17b>
mov    0x2c8(%rdi),%r15
test   %r15,%r15
jne    187cc <png_do_rgb_to_gray+0x1ac>
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %rsi,-0x38(%rbp)
mov    %rax,%rbx
mov    %rdx,%rsi
jmp    1871d <png_do_rgb_to_gray+0xfd>
movzbl (%rdi),%edi
mov    %dil,(%r12)
movzbl 0x7(%rsi),%edi
mov    %dil,0x3(%rdx)
add    $0x8,%rsi
add    $0x4,%rdx
add    $0x1,%eax
cmp    %r11d,%eax
jb     187e7 <png_do_rgb_to_gray+0x1c7>
mov    -0x38(%rbp),%rsi
movzbl 0x12(%rsi),%eax
lea    0xfe(%rax),%ecx
mov    %cl,0x12(%rsi)
movzbl 0x10(%rsi),%eax
and    $0xfd,%al
mov    %al,0x10(%rsi)
movzbl 0x11(%rsi),%eax
imul   %cl
mov    %al,0x13(%rsi)
cmp    $0x7,%al
ja     18872 <png_do_rgb_to_gray+0x252>
movzbl %al,%eax
imul   %r11,%rax
add    $0x7,%rax
shr    $0x3,%rax
jmpq   1887d <png_do_rgb_to_gray+0x25d>
mov    0x2c0(%rdi),%r15
test   %r15,%r15
jne    1889a <png_do_rgb_to_gray+0x27a>
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %rax,%rbx
mov    %rdx,%r12
jmp    1879b <png_do_rgb_to_gray+0x17b>
movzbl (%rdx),%edx
mov    %dl,0x0(%r13)
add    $0x4,%r12
lea    0x1(%r13),%rdx
add    $0x1,%eax
cmp    %eax,%r11d
jbe    1872a <png_do_rgb_to_gray+0x10a>
movzbl 0x2(%r12),%r13d
movzbl 0x1(%r12),%r15d
movzbl (%r12),%edi
cmp    %dil,%r15b
jne    188b5 <png_do_rgb_to_gray+0x295>
cmp    %r13b,%dil
jne    188b5 <png_do_rgb_to_gray+0x295>
lea    0x1(%rdx),%r13
jmpq   188d5 <png_do_rgb_to_gray+0x2b5>
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %rsi,-0x30(%rbp)
mov    %rax,%rbx
mov    %rdx,%rsi
jmpq   1890b <png_do_rgb_to_gray+0x2eb>
movzbl 0x5(%rsi),%r12d
movzbl 0x4(%rsi),%edi
shl    $0x8,%edi
lea    (%r12,%rdi,1),%r15d
movzbl 0x3(%rsi),%r12d
movzbl 0x2(%rsi),%edi
shl    $0x8,%edi
lea    (%r12,%rdi,1),%r13d
movzbl 0x1(%rsi),%r12d
movzbl (%rsi),%edi
shl    $0x8,%edi
add    %r12d,%edi
cmp    %di,%r13w
je     18919 <png_do_rgb_to_gray+0x2f9>
mov    %rcx,%rbx
movzwl %r13w,%r12d
imul   %r8d,%r12d
movzwl %di,%edi
imul   %r9d,%edi
add    %edi,%r12d
movzwl %r15w,%edi
imul   %r14d,%edi
lea    0x4000(%rdi,%r12,1),%edi
shr    $0xf,%edi
movzwl %di,%r12d
shr    $0x8,%r12d
test   %r10d,%r10d
mov    %r12b,(%rdx)
mov    %dil,0x1(%rdx)
lea    0x6(%rsi),%rdi
lea    0x2(%rdx),%r12
jg     18703 <png_do_rgb_to_gray+0xe3>
mov    %r12,%rdx
mov    %rdi,%rsi
jmpq   1871a <png_do_rgb_to_gray+0xfa>
movzbl %al,%eax
shr    $0x3,%rax
imul   %r11,%rax
mov    %rax,0x8(%rsi)
mov    %rbx,%rax
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x20(%rbp),%r14
mov    -0x28(%rbp),%r15
leaveq 
retq   
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %rsi,-0x38(%rbp)
mov    %rax,%rbx
mov    %rdx,%rsi
jmpq   1893d <png_do_rgb_to_gray+0x31d>
mov    %r8,%rbx
imul   %r15d,%ebx
imul   %r9d,%edi
add    %edi,%ebx
mov    %r14,%rdi
imul   %r13d,%edi
add    %ebx,%edi
shr    $0xf,%edi
lea    0x1(%rdx),%r13
mov    %rcx,%rbx
test   %r10d,%r10d
mov    %dil,(%rdx)
lea    0x3(%r12),%rdx
jg     18789 <png_do_rgb_to_gray+0x169>
mov    %rdx,%r12
mov    %r13,%rdx
jmpq   18798 <png_do_rgb_to_gray+0x178>
movzbl (%r12),%r12d
mov    %r12b,(%rcx)
movzbl 0x7(%rsi),%ecx
mov    %cl,0x3(%rdx)
add    $0x8,%rsi
add    $0x4,%rdx
add    $0x1,%eax
cmp    %eax,%r11d
ja     1894b <png_do_rgb_to_gray+0x32b>
mov    -0x30(%rbp),%rsi
jmpq   1872a <png_do_rgb_to_gray+0x10a>
cmp    %di,%r15w
je     18822 <png_do_rgb_to_gray+0x202>
mov    %rcx,%rbx
jmpq   18822 <png_do_rgb_to_gray+0x202>
movzbl (%rdx),%edx
mov    %dl,0x0(%r13)
add    $0x4,%rsi
lea    0x1(%r13),%rdx
add    $0x1,%eax
cmp    %eax,%r11d
ja     189bc <png_do_rgb_to_gray+0x39c>
mov    -0x38(%rbp),%rsi
jmpq   1872a <png_do_rgb_to_gray+0x10a>
movzbl 0x5(%rsi),%r12d
movzbl 0x4(%rsi),%ecx
shl    $0x8,%ecx
add    %ecx,%r12d
movzbl 0x1(%rsi),%r13d
movzbl (%rsi),%ecx
shl    $0x8,%ecx
add    %ecx,%r13d
movzbl 0x3(%rsi),%ecx
movzbl 0x2(%rsi),%r15d
shl    $0x8,%r15d
add    %ecx,%r15d
cmp    %r13w,%r15w
jne    189f7 <png_do_rgb_to_gray+0x3d7>
cmp    %r12w,%r15w
jne    189f7 <png_do_rgb_to_gray+0x3d7>
mov    0x2b0(%rdi),%rcx
test   %rcx,%rcx
je     18a9e <png_do_rgb_to_gray+0x47e>
mov    %rcx,%r15
movzbl %r13b,%r12d
mov    0x2a0(%rdi),%ecx
shr    %cl,%r12d
movslq %r12d,%rcx
mov    (%r15,%rcx,8),%r12
shr    $0x8,%r13d
movslq %r13d,%rcx
movzwl (%r12,%rcx,2),%r12d
jmpq   18a9e <png_do_rgb_to_gray+0x47e>
movzbl 0x2(%rsi),%r15d
movzbl (%rsi),%r12d
movzbl 0x1(%rsi),%r13d
cmp    %r12b,%r13b
jne    18ac7 <png_do_rgb_to_gray+0x4a7>
cmp    %r15b,%r12b
jne    18ac7 <png_do_rgb_to_gray+0x4a7>
mov    0x2a8(%rdi),%r13
test   %r13,%r13
je     189ee <png_do_rgb_to_gray+0x3ce>
movzbl 0x0(%r13,%r12,1),%r12d
lea    0x1(%rdx),%r13
jmpq   18b0d <png_do_rgb_to_gray+0x4ed>
mov    0x2a0(%rdi),%ecx
movzbl %r15b,%ebx
shr    %cl,%ebx
movslq %ebx,%rbx
mov    %r11,-0x38(%rbp)
mov    0x2d0(%rdi),%r11
mov    (%r11,%rbx,8),%rbx
shr    $0x8,%r15d
movslq %r15d,%r15
movzwl (%rbx,%r15,2),%ebx
mov    %r8,%r15
imul   %ebx,%r15d
movzbl %r13b,%ebx
shr    %cl,%ebx
movslq %ebx,%rbx
mov    (%r11,%rbx,8),%rbx
shr    $0x8,%r13d
movslq %r13d,%r13
movzwl (%rbx,%r13,2),%ebx
imul   %r9d,%ebx
lea    (%r15,%rbx,1),%r13d
movzbl %r12b,%ebx
shr    %cl,%ebx
movslq %ebx,%rbx
mov    (%r11,%rbx,8),%r11
shr    $0x8,%r12d
movslq %r12d,%rbx
movzwl (%r11,%rbx,2),%ebx
imul   %r14d,%ebx
lea    0x4000(%rbx,%r13,1),%ebx
shr    $0xf,%ebx
movzwl %bx,%r11d
movzbl %r11b,%ebx
shr    %cl,%ebx
movslq %ebx,%rcx
mov    0x2c8(%rdi),%rbx
mov    (%rbx,%rcx,8),%rbx
shr    $0x8,%r11d
movslq %r11d,%rcx
movzwl (%rbx,%rcx,2),%r12d
mov    -0x38(%rbp),%r11
mov    $0x1,%ebx
movzwl %r12w,%ecx
shr    $0x8,%ecx
test   %r10d,%r10d
mov    %cl,(%rdx)
mov    %r12b,0x1(%rdx)
lea    0x6(%rsi),%r12
lea    0x2(%rdx),%rcx
jg     188f1 <png_do_rgb_to_gray+0x2d1>
mov    %rcx,%rdx
mov    %r12,%rsi
jmpq   18908 <png_do_rgb_to_gray+0x2e8>
mov    0x2c0(%rdi),%rbx
movzbl (%rbx,%r13,1),%r13d
imul   %r8d,%r13d
movzbl (%rbx,%r12,1),%r12d
imul   %r9d,%r12d
add    %r13d,%r12d
movzbl (%r15,%rbx,1),%ebx
imul   %r14d,%ebx
lea    0x4000(%rbx,%r12,1),%ebx
shr    $0xf,%ebx
mov    %ebx,%r12d
mov    0x2b8(%rdi),%rbx
movzbl (%r12,%rbx,1),%r12d
lea    0x1(%rdx),%r13
mov    %rcx,%rbx
test   %r10d,%r10d
mov    %r12b,(%rdx)
lea    0x3(%rsi),%rdx
jg     1892b <png_do_rgb_to_gray+0x30b>
mov    %rdx,%rsi
mov    %r13,%rdx
jmpq   1893a <png_do_rgb_to_gray+0x31a>
nopl   0x0(%rax,%rax,1)

0000000000018b30 <png_do_compose>:
push   %rbp
mov    %rsp,%rbp
sub    $0xb0,%rsp
mov    %rsi,-0xa8(%rbp)
mov    %rdx,-0xa0(%rbp)
mov    0x2a8(%rdx),%r8
mov    0x2b8(%rdx),%r11
mov    0x2c0(%rdx),%r10
mov    0x2b0(%rdx),%rsi
mov    0x2c8(%rdx),%r9
mov    0x2d0(%rdx),%rax
mov    %rax,-0xb0(%rbp)
mov    0x2a0(%rdx),%ecx
xor    %eax,%eax
mov    %rax,-0x98(%rbp)
mov    $0x1,%eax
mov    %rax,-0x90(%rbp)
mov    0x130(%rdx),%eax
and    $0x2000,%eax
test   %eax,%eax
je     18bb0 <png_do_compose+0x80>
pushq  -0x90(%rbp)
popq   -0x98(%rbp)
mov    (%rdi),%eax
movzbl 0x10(%rdi),%edx
cmp    $0x3,%dl
jbe    18bd3 <png_do_compose+0xa3>
mov    %rcx,-0x90(%rbp)
mov    $0xff,%ecx
cmp    $0x4,%dl
je     18bde <png_do_compose+0xae>
cmp    $0x6,%dl
je     18c0f <png_do_compose+0xdf>
leaveq 
retq   
test   %dl,%dl
je     18c47 <png_do_compose+0x117>
cmp    $0x2,%dl
je     18c59 <png_do_compose+0x129>
leaveq 
retq   
movzbl 0x11(%rdi),%edx
cmp    $0x8,%dl
je     18c8b <png_do_compose+0x15b>
test   %rsi,%rsi
jne    18ca9 <png_do_compose+0x179>
mov    $0xffff,%r9d
mov    -0xa0(%rbp),%r10
xor    %ecx,%ecx
mov    -0xa8(%rbp),%rdx
jmpq   18ceb <png_do_compose+0x1bb>
movzbl 0x11(%rdi),%edx
cmp    $0x8,%dl
je     18cf5 <png_do_compose+0x1c5>
test   %rsi,%rsi
jne    18d13 <png_do_compose+0x1e3>
mov    %r15,-0xb0(%rbp)
mov    $0xffff,%r9d
mov    -0xa0(%rbp),%r10
xor    %ecx,%ecx
mov    -0xa8(%rbp),%rdx
jmpq   18d92 <png_do_compose+0x262>
movzbl 0x11(%rdi),%edx
add    $0xffffffff,%edx
cmp    $0xf,%edx
jbe    18da3 <png_do_compose+0x273>
leaveq 
retq   
movzbl 0x11(%rdi),%edx
cmp    $0x8,%dl
je     18db5 <png_do_compose+0x285>
test   %rsi,%rsi
jne    18dd3 <png_do_compose+0x2a3>
mov    %r15,-0x98(%rbp)
mov    -0xa0(%rbp),%r10
xor    %ecx,%ecx
mov    -0xa8(%rbp),%rdx
jmpq   18ea2 <png_do_compose+0x372>
test   %r10,%r10
jne    18eb3 <png_do_compose+0x383>
mov    -0xa0(%rbp),%r9
xor    %edx,%edx
mov    -0xa8(%rbp),%rsi
jmpq   18ee0 <png_do_compose+0x3b0>
test   %r9,%r9
jne    18eea <png_do_compose+0x3ba>
mov    $0xffff,%r9d
mov    -0xa0(%rbp),%r10
xor    %ecx,%ecx
mov    -0xa8(%rbp),%rdx
jmp    18ceb <png_do_compose+0x1bb>
movzwl 0x284(%r10),%esi
shr    $0x8,%esi
mov    %sil,(%rdx)
movzbl 0x284(%r10),%esi
mov    %sil,0x1(%rdx)
add    $0x1,%ecx
add    $0x4,%rdx
cmp    %ecx,%eax
ja     18f15 <png_do_compose+0x3e5>
leaveq 
retq   
test   %r10,%r10
jne    18f86 <png_do_compose+0x456>
mov    -0xa0(%rbp),%r9
xor    %edx,%edx
mov    -0xa8(%rbp),%rsi
jmpq   18fcb <png_do_compose+0x49b>
test   %r9,%r9
jne    18fd5 <png_do_compose+0x4a5>
mov    %r15,-0xb0(%rbp)
mov    $0xffff,%r9d
mov    -0xa0(%rbp),%r10
xor    %ecx,%ecx
mov    -0xa8(%rbp),%rdx
jmp    18d92 <png_do_compose+0x262>
movzwl 0x27e(%r10),%esi
shr    $0x8,%esi
mov    %sil,(%rdx)
movzbl 0x27e(%r10),%esi
mov    %sil,0x1(%rdx)
movzwl 0x280(%r10),%esi
shr    $0x8,%esi
mov    %sil,0x2(%rdx)
movzbl 0x280(%r10),%esi
mov    %sil,0x3(%rdx)
movzwl 0x282(%r10),%esi
shr    $0x8,%esi
mov    %sil,0x4(%rdx)
movzbl 0x282(%r10),%esi
mov    %sil,0x5(%rdx)
add    $0x1,%ecx
add    $0x8,%rdx
cmp    %ecx,%eax
ja     19007 <png_do_compose+0x4d7>
mov    -0xb0(%rbp),%r15
leaveq 
retq   
lea    0x15506(%rip),%rdi        # 2e2b0 <chunks_to_process.34+0x4ab>
movslq (%rdi,%rdx,4),%rdx
add    %rdi,%rdx
jmpq   *%rdx
leaveq 
retq   
test   %r8,%r8
jne    191e4 <png_do_compose+0x6b4>
mov    -0xa0(%rbp),%rsi
xor    %ecx,%ecx
mov    -0xa8(%rbp),%rdx
jmpq   19255 <png_do_compose+0x725>
mov    %r15,-0x48(%rbp)
mov    %r13,-0x38(%rbp)
mov    %r14,-0x40(%rbp)
mov    -0xa0(%rbp),%r8
xor    %edx,%edx
mov    -0xa8(%rbp),%rdi
jmpq   192d8 <png_do_compose+0x7a8>
movzbl 0x2(%rdx),%edi
movzbl 0x3(%rdx),%r11d
movzbl 0x4(%rdx),%r8d
movzbl 0x5(%rdx),%r9d
movzbl 0x1(%rdx),%r15d
movzbl (%rdx),%esi
shl    $0x8,%esi
add    %esi,%r15d
movzwl 0x2f2(%r10),%esi
cmp    %si,%r15w
jne    18e9b <png_do_compose+0x36b>
shl    $0x8,%edi
add    %r11d,%edi
movzwl 0x2f4(%r10),%esi
cmp    %si,%di
jne    18e9b <png_do_compose+0x36b>
shl    $0x8,%r8d
lea    (%r9,%r8,1),%edi
movzwl 0x2f6(%r10),%esi
cmp    %si,%di
jne    18e9b <png_do_compose+0x36b>
movzwl 0x27e(%r10),%esi
shr    $0x8,%esi
mov    %sil,(%rdx)
movzbl 0x27e(%r10),%esi
mov    %sil,0x1(%rdx)
movzwl 0x280(%r10),%esi
shr    $0x8,%esi
mov    %sil,0x2(%rdx)
movzbl 0x280(%r10),%esi
mov    %sil,0x3(%rdx)
movzwl 0x282(%r10),%esi
shr    $0x8,%esi
mov    %sil,0x4(%rdx)
movzbl 0x282(%r10),%esi
mov    %sil,0x5(%rdx)
add    $0x1,%ecx
add    $0x6,%rdx
cmp    %ecx,%eax
ja     18df4 <png_do_compose+0x2c4>
mov    -0x98(%rbp),%r15
leaveq 
retq   
test   %r11,%r11
jne    192ee <png_do_compose+0x7be>
mov    -0xa0(%rbp),%r9
xor    %edx,%edx
mov    -0xa8(%rbp),%rsi
jmp    18ee0 <png_do_compose+0x3b0>
movzbl 0x284(%r9),%edi
mov    %dil,(%rsi)
add    $0x1,%edx
add    $0x2,%rsi
cmp    %edx,%eax
ja     1930c <png_do_compose+0x7dc>
leaveq 
retq   
mov    -0xb0(%rbp),%r8
test   %r8,%r8
jne    19360 <png_do_compose+0x830>
mov    $0xffff,%r9d
mov    -0xa0(%rbp),%r10
xor    %ecx,%ecx
mov    -0xa8(%rbp),%rdx
jmpq   18ceb <png_do_compose+0x1bb>
movzbl 0x3(%rdx),%edi
movzbl 0x2(%rdx),%esi
shl    $0x8,%esi
cmp    %si,%di
je     18cca <png_do_compose+0x19a>
add    %edi,%esi
cmp    $0xfffe,%si
ja     18ce4 <png_do_compose+0x1b4>
movzwl %si,%edi
mov    %r9,%r8
sub    %edi,%r8d
movzwl 0x284(%r10),%esi
imul   %esi,%r8d
movzbl 0x1(%rdx),%r11d
movzbl (%rdx),%esi
shl    $0x8,%esi
add    %r11d,%esi
movzwl %si,%esi
imul   %esi,%edi
add    %r8d,%edi
lea    0x8000(%rdi),%esi
shr    $0x10,%esi
lea    0x8000(%rsi,%rdi,1),%esi
shr    $0x10,%esi
movzwl %si,%edi
shr    $0x8,%edi
mov    %dil,(%rdx)
mov    %sil,0x1(%rdx)
jmpq   18ce4 <png_do_compose+0x1b4>
test   %r11,%r11
jne    1939d <png_do_compose+0x86d>
mov    -0xa0(%rbp),%r9
xor    %edx,%edx
mov    -0xa8(%rbp),%rsi
jmp    18fcb <png_do_compose+0x49b>
movzbl 0x27e(%r9),%edi
mov    %dil,(%rsi)
movzbl 0x280(%r9),%edi
mov    %dil,0x1(%rsi)
movzbl 0x282(%r9),%edi
mov    %dil,0x2(%rsi)
add    $0x1,%edx
add    $0x4,%rsi
cmp    %edx,%eax
ja     193bb <png_do_compose+0x88b>
leaveq 
retq   
mov    -0xb0(%rbp),%r10
test   %r10,%r10
jne    19476 <png_do_compose+0x946>
mov    %r15,-0xb0(%rbp)
mov    $0xffff,%r9d
mov    -0xa0(%rbp),%r10
xor    %ecx,%ecx
mov    -0xa8(%rbp),%rdx
jmpq   18d92 <png_do_compose+0x262>
movzbl 0x7(%rdx),%edi
movzbl 0x6(%rdx),%esi
shl    $0x8,%esi
cmp    %si,%di
je     18d3b <png_do_compose+0x20b>
add    %edi,%esi
cmp    $0xfffe,%si
ja     18d8b <png_do_compose+0x25b>
movzwl %si,%esi
mov    %r9,%r15
sub    %esi,%r15d
movzwl 0x27e(%r10),%edi
mov    %r15,%r11
imul   %edi,%r11d
movzbl 0x1(%rdx),%r8d
movzbl (%rdx),%edi
shl    $0x8,%edi
add    %r8d,%edi
movzwl %di,%edi
imul   %esi,%edi
lea    (%r11,%rdi,1),%r8d
lea    0x8000(%r8),%edi
shr    $0x10,%edi
lea    0x8000(%rdi,%r8,1),%edi
shr    $0x10,%edi
movzwl %di,%r8d
shr    $0x8,%r8d
mov    %r8b,(%rdx)
mov    %dil,0x1(%rdx)
movzwl 0x280(%r10),%edi
imul   %r15d,%edi
movzbl 0x3(%rdx),%r11d
movzbl 0x2(%rdx),%r8d
shl    $0x8,%r8d
add    %r11d,%r8d
movzwl %r8w,%r8d
imul   %esi,%r8d
add    %edi,%r8d
lea    0x8000(%r8),%edi
shr    $0x10,%edi
lea    0x8000(%rdi,%r8,1),%edi
shr    $0x10,%edi
movzwl %di,%r8d
shr    $0x8,%r8d
mov    %r8b,0x2(%rdx)
mov    %dil,0x3(%rdx)
movzwl 0x282(%r10),%edi
imul   %r15d,%edi
movzbl 0x5(%rdx),%r11d
movzbl 0x4(%rdx),%r8d
shl    $0x8,%r8d
add    %r11d,%r8d
movzwl %r8w,%r8d
imul   %r8d,%esi
add    %esi,%edi
lea    0x8000(%rdi),%esi
shr    $0x10,%esi
lea    0x8000(%rsi,%rdi,1),%esi
shr    $0x10,%esi
movzwl %si,%edi
shr    $0x8,%edi
mov    %dil,0x4(%rdx)
mov    %sil,0x5(%rdx)
jmpq   18d8b <png_do_compose+0x25b>
mov    $0x7f7f,%edi
mov    $0x7,%r8d
mov    %r15,-0x18(%rbp)
mov    %r14,-0x10(%rbp)
mov    -0xa0(%rbp),%r9
xor    %esi,%esi
mov    -0xa8(%rbp),%rdx
mov    %r8,%rcx
jmpq   194c6 <png_do_compose+0x996>
mov    $0x3f3f,%edx
mov    $0x6,%esi
test   %r8,%r8
jne    194d8 <png_do_compose+0x9a8>
mov    %r15,-0x28(%rbp)
mov    %r14,-0x20(%rbp)
mov    -0xa0(%rbp),%r9
xor    %r8d,%r8d
mov    -0xa8(%rbp),%rdi
mov    %rsi,%rcx
jmpq   19508 <png_do_compose+0x9d8>
mov    $0xf0f,%edx
mov    $0x4,%esi
test   %r8,%r8
jne    1951b <png_do_compose+0x9eb>
mov    %r15,-0x38(%rbp)
mov    %r14,-0x30(%rbp)
mov    -0xa0(%rbp),%r9
xor    %r8d,%r8d
mov    -0xa8(%rbp),%rdi
mov    %rsi,%rcx
jmpq   1954b <png_do_compose+0xa1b>
test   %r8,%r8
jne    1955e <png_do_compose+0xa2e>
mov    -0xa0(%rbp),%rdi
xor    %ecx,%ecx
mov    -0xa8(%rbp),%rdx
jmpq   19595 <png_do_compose+0xa65>
test   %rsi,%rsi
jne    1959b <png_do_compose+0xa6b>
mov    -0xa0(%rbp),%rdi
xor    %ecx,%ecx
mov    -0xa8(%rbp),%rdx
jmpq   195ee <png_do_compose+0xabe>
mov    -0xa0(%rbp),%rdi
xor    %ecx,%ecx
mov    -0xa8(%rbp),%rdx
jmpq   19620 <png_do_compose+0xaf0>
movzbl (%rdx),%r8d
movzwl 0x2f2(%rsi),%edi
cmp    %di,%r8w
jne    1924e <png_do_compose+0x71e>
movzbl 0x1(%rdx),%edi
movzwl 0x2f4(%rsi),%r8d
cmp    %r8w,%di
jne    1924e <png_do_compose+0x71e>
movzbl 0x2(%rdx),%r8d
movzwl 0x2f6(%rsi),%edi
cmp    %di,%r8w
jne    1924e <png_do_compose+0x71e>
movzbl 0x27e(%rsi),%edi
mov    %dil,(%rdx)
movzbl 0x280(%rsi),%edi
mov    %dil,0x1(%rdx)
movzbl 0x282(%rsi),%edi
mov    %dil,0x2(%rdx)
add    $0x1,%ecx
add    $0x3,%rdx
cmp    %ecx,%eax
ja     191f9 <png_do_compose+0x6c9>
leaveq 
retq   
movzbl 0x1(%rdi),%r9d
shr    %cl,%r9d
movslq %r9d,%r9
mov    (%rsi,%r9,8),%r10
movzbl (%rdi),%r9d
movzwl (%r10,%r9,2),%r10d
mov    %r10,%r9
shr    $0x8,%r9d
mov    %r9b,(%rdi)
mov    %r10b,0x1(%rdi)
movzbl 0x3(%rdi),%r9d
shr    %cl,%r9d
movslq %r9d,%r9
mov    (%rsi,%r9,8),%r10
movzbl 0x2(%rdi),%r9d
movzwl (%r10,%r9,2),%r10d
mov    %r10,%r9
shr    $0x8,%r9d
mov    %r9b,0x2(%rdi)
mov    %r10b,0x3(%rdi)
movzbl 0x5(%rdi),%r9d
shr    %cl,%r9d
movslq %r9d,%r9
mov    (%rsi,%r9,8),%r10
movzbl 0x4(%rdi),%r9d
movzwl (%r10,%r9,2),%r9d
mov    %r9,%r10
shr    $0x8,%r10d
mov    %r10b,0x4(%rdi)
mov    %r9b,0x5(%rdi)
add    $0x1,%edx
add    $0x6,%rdi
cmp    %edx,%eax
ja     1962a <png_do_compose+0xafa>
mov    -0x40(%rbp),%r14
mov    -0x38(%rbp),%r13
mov    -0x48(%rbp),%r15
leaveq 
retq   
test   %r8,%r8
jne    196e9 <png_do_compose+0xbb9>
mov    -0xa0(%rbp),%r9
xor    %edx,%edx
mov    -0xa8(%rbp),%rsi
jmpq   18ee0 <png_do_compose+0x3b0>
movzbl 0x1(%rsi),%edi
test   %dil,%dil
je     18ece <png_do_compose+0x39e>
cmp    $0xfe,%dil
ja     18ed9 <png_do_compose+0x3a9>
mov    %rcx,%r8
sub    %di,%r8w
movzwl 0x284(%r9),%r10d
imul   %r10w,%r8w
movzbl (%rsi),%r10d
imul   %r10w,%di
lea    0x80(%r8,%rdi,1),%edi
movzwl %di,%r8d
mov    %r8,%rdi
shr    $0x8,%edi
add    %r8d,%edi
shr    $0x8,%edi
mov    %dil,(%rsi)
jmpq   18ed9 <png_do_compose+0x3a9>
mov    %r15,-0x68(%rbp)
mov    %r13,-0x58(%rbp)
mov    %r14,-0x60(%rbp)
mov    %rbx,-0x48(%rbp)
mov    %r12,-0x50(%rbp)
mov    $0xffff,%r11d
mov    -0x90(%rbp),%rcx
mov    -0xa0(%rbp),%r10
mov    -0x98(%rbp),%rbx
xor    %edx,%edx
mov    -0xa8(%rbp),%rdi
jmpq   1973e <png_do_compose+0xc0e>
test   %r8,%r8
jne    1975c <png_do_compose+0xc2c>
mov    -0xa0(%rbp),%r9
xor    %edx,%edx
mov    -0xa8(%rbp),%rsi
jmpq   18fcb <png_do_compose+0x49b>
movzbl 0x3(%rsi),%r8d
test   %r8b,%r8b
je     18fa1 <png_do_compose+0x471>
cmp    $0xfe,%r8b
ja     18fc4 <png_do_compose+0x494>
mov    %rcx,%r11
sub    %r8w,%r11w
movzwl 0x27e(%r9),%edi
imul   %r11w,%di
movzbl (%rsi),%r10d
imul   %r8w,%r10w
lea    0x80(%rdi,%r10,1),%edi
movzwl %di,%r10d
mov    %r10,%rdi
shr    $0x8,%edi
add    %r10d,%edi
shr    $0x8,%edi
mov    %dil,(%rsi)
movzwl 0x280(%r9),%edi
imul   %r11w,%di
movzbl 0x1(%rsi),%r10d
imul   %r8w,%r10w
lea    0x80(%rdi,%r10,1),%edi
movzwl %di,%r10d
mov    %r10,%rdi
shr    $0x8,%edi
add    %r10d,%edi
shr    $0x8,%edi
mov    %dil,0x1(%rsi)
movzwl 0x282(%r9),%edi
imul   %r11w,%di
movzbl 0x2(%rsi),%r10d
imul   %r10w,%r8w
lea    0x80(%rdi,%r8,1),%edi
movzwl %di,%edi
mov    %rdi,%r8
shr    $0x8,%r8d
add    %r8d,%edi
shr    $0x8,%edi
mov    %dil,0x2(%rsi)
jmpq   18fc4 <png_do_compose+0x494>
mov    %r15,-0xb0(%rbp)
mov    %r13,-0x80(%rbp)
mov    %r14,-0x88(%rbp)
mov    %rbx,-0x70(%rbp)
mov    %r12,-0x78(%rbp)
mov    $0xffff,%edx
mov    -0x90(%rbp),%rcx
mov    -0xa0(%rbp),%rdi
mov    -0x98(%rbp),%r12
xor    %r8d,%r8d
mov    -0xa8(%rbp),%rbx
mov    %r8,%r11
jmpq   19816 <png_do_compose+0xce6>
add    $0x1,%rdx
mov    %r8,%rcx
add    $0x1,%esi
cmp    %eax,%esi
jb     1983b <png_do_compose+0xd0b>
mov    -0x10(%rbp),%r14
mov    -0x18(%rbp),%r15
leaveq 
retq   
mov    %r15,-0x18(%rbp)
mov    %r13,-0x8(%rbp)
mov    %r14,-0x10(%rbp)
mov    -0xa0(%rbp),%r10
xor    %r9d,%r9d
mov    -0xa8(%rbp),%rdi
mov    %rsi,%rcx
jmpq   19899 <png_do_compose+0xd69>
add    $0x1,%rdi
mov    %rsi,%rcx
add    $0x1,%r8d
cmp    %r8d,%eax
ja     198b0 <png_do_compose+0xd80>
mov    -0x20(%rbp),%r14
mov    -0x28(%rbp),%r15
leaveq 
retq   
mov    %r15,-0x30(%rbp)
mov    %r13,-0x20(%rbp)
mov    %r14,-0x28(%rbp)
mov    -0xa0(%rbp),%r10
xor    %r9d,%r9d
mov    -0xa8(%rbp),%rdi
mov    %rsi,%rcx
jmpq   1990e <png_do_compose+0xdde>
add    $0x1,%rdi
mov    %rsi,%rcx
add    $0x1,%r8d
cmp    %r8d,%eax
ja     19925 <png_do_compose+0xdf5>
mov    -0x30(%rbp),%r14
mov    -0x38(%rbp),%r15
leaveq 
retq   
mov    -0xa0(%rbp),%rdi
xor    %edx,%edx
mov    -0xa8(%rbp),%rcx
jmpq   19989 <png_do_compose+0xe59>
movzbl (%rdx),%r8d
movzwl 0x2f8(%rdi),%esi
cmp    %si,%r8w
jne    1958e <png_do_compose+0xa5e>
movzbl 0x284(%rdi),%esi
mov    %sil,(%rdx)
add    $0x1,%ecx
add    $0x1,%rdx
cmp    %ecx,%eax
ja     19573 <png_do_compose+0xa43>
leaveq 
retq   
mov    %r15,-0x40(%rbp)
mov    -0xa0(%rbp),%r8
xor    %edx,%edx
mov    -0xa8(%rbp),%rdi
jmpq   199b5 <png_do_compose+0xe85>
movzbl 0x1(%rdx),%r8d
movzbl (%rdx),%esi
shl    $0x8,%esi
add    %esi,%r8d
movzwl 0x2f8(%rdi),%esi
cmp    %si,%r8w
jne    195e7 <png_do_compose+0xab7>
movzwl 0x284(%rdi),%esi
shr    $0x8,%esi
mov    %sil,(%rdx)
movzbl 0x284(%rdi),%esi
mov    %sil,0x1(%rdx)
add    $0x1,%ecx
add    $0x2,%rdx
cmp    %ecx,%eax
ja     195b4 <png_do_compose+0xa84>
leaveq 
retq   
movzbl (%rdx),%esi
movzbl (%r8,%rsi,1),%esi
mov    %sil,(%rdx)
movzbl 0x1(%rdx),%esi
movzbl (%r8,%rsi,1),%esi
mov    %sil,0x1(%rdx)
movzbl 0x2(%rdx),%esi
movzbl (%r8,%rsi,1),%esi
mov    %sil,0x2(%rdx)
add    $0x1,%ecx
add    $0x3,%rdx
cmp    %ecx,%eax
ja     199c3 <png_do_compose+0xe93>
leaveq 
retq   
movzbl 0x2(%rdi),%r10d
movzbl 0x3(%rdi),%r14d
movzbl 0x4(%rdi),%r11d
movzbl 0x5(%rdi),%r13d
movzbl 0x1(%rdi),%r15d
movzbl (%rdi),%r9d
shl    $0x8,%r9d
add    %r9d,%r15d
movzwl 0x2f2(%r8),%r9d
cmp    %r9w,%r15w
jne    1925b <png_do_compose+0x72b>
shl    $0x8,%r10d
lea    (%r14,%r10,1),%r9d
movzwl 0x2f4(%r8),%r10d
cmp    %r10w,%r9w
jne    1925b <png_do_compose+0x72b>
shl    $0x8,%r11d
lea    0x0(%r13,%r11,1),%r10d
movzwl 0x2f6(%r8),%r9d
cmp    %r9w,%r10w
jne    1925b <png_do_compose+0x72b>
movzwl 0x27e(%r8),%r9d
shr    $0x8,%r9d
mov    %r9b,(%rdi)
movzbl 0x27e(%r8),%r9d
mov    %r9b,0x1(%rdi)
movzwl 0x280(%r8),%r9d
shr    $0x8,%r9d
mov    %r9b,0x2(%rdi)
movzbl 0x280(%r8),%r9d
mov    %r9b,0x3(%rdi)
movzwl 0x282(%r8),%r9d
shr    $0x8,%r9d
mov    %r9b,0x4(%rdi)
movzbl 0x282(%r8),%r9d
jmpq   192cd <png_do_compose+0x79d>
mov    %r15,-0x60(%rbp)
mov    %r13,-0x50(%rbp)
mov    %r14,-0x58(%rbp)
mov    -0xa0(%rbp),%r14
mov    -0x98(%rbp),%r13
xor    %esi,%esi
mov    -0xa8(%rbp),%rdi
jmpq   19a3a <png_do_compose+0xf0a>
movzbl 0x1(%rdi),%r12d
shr    %cl,%r12d
movslq %r12d,%r12
mov    (%rsi,%r12,8),%r12
movzbl (%rdi),%r13d
movzwl (%r12,%r13,2),%r12d
mov    %r12,%r13
shr    $0x8,%r13d
mov    %r13b,(%rdi)
mov    %r12b,0x1(%rdi)
add    $0x1,%edx
add    $0x4,%rdi
cmp    %edx,%eax
ja     19a50 <png_do_compose+0xf20>
mov    -0x50(%rbp),%r12
mov    -0x48(%rbp),%rbx
mov    -0x60(%rbp),%r14
mov    -0x58(%rbp),%r13
mov    -0x68(%rbp),%r15
leaveq 
retq   
mov    %r15,-0x88(%rbp)
mov    %r13,-0x78(%rbp)
mov    %r14,-0x80(%rbp)
mov    %rbx,-0x68(%rbp)
mov    %r12,-0x70(%rbp)
mov    -0xa0(%rbp),%r15
mov    -0x98(%rbp),%r14
mov    $0x1,%edx
xor    %r13d,%r13d
mov    -0xa8(%rbp),%rsi
mov    %r13,%rdi
jmpq   19b22 <png_do_compose+0xff2>
movzbl 0x1(%rbx),%r13d
shr    %cl,%r13d
movslq %r13d,%r13
mov    (%rsi,%r13,8),%r14
movzbl (%rbx),%r13d
movzwl (%r14,%r13,2),%r14d
mov    %r14,%r13
shr    $0x8,%r13d
mov    %r13b,(%rbx)
mov    %r14b,0x1(%rbx)
movzbl 0x3(%rbx),%r13d
shr    %cl,%r13d
movslq %r13d,%r13
mov    (%rsi,%r13,8),%r14
movzbl 0x2(%rbx),%r13d
movzwl (%r14,%r13,2),%r13d
mov    %r13,%r14
shr    $0x8,%r14d
mov    %r14b,0x2(%rbx)
mov    %r13b,0x3(%rbx)
movzbl 0x5(%rbx),%r13d
shr    %cl,%r13d
movslq %r13d,%r13
mov    (%rsi,%r13,8),%r14
movzbl 0x4(%rbx),%r13d
movzwl (%r14,%r13,2),%r14d
mov    %r14,%r13
shr    $0x8,%r13d
mov    %r13b,0x4(%rbx)
mov    %r14b,0x5(%rbx)
add    $0x1,%r11d
add    $0x8,%rbx
cmp    %r11d,%eax
ja     19b43 <png_do_compose+0x1013>
mov    -0x78(%rbp),%r12
mov    -0x70(%rbp),%rbx
mov    -0x88(%rbp),%r14
mov    -0x80(%rbp),%r13
mov    -0xb0(%rbp),%r15
leaveq 
retq   
movzbl (%rdx),%r10d
mov    %r10,%r11
shr    %cl,%r11d
and    $0x1,%r11w
movzwl 0x2f8(%r9),%r14d
cmp    %r14w,%r11w
jne    1987e <png_do_compose+0xd4e>
movzbl 0x284(%r9),%r11d
shl    %cl,%r11d
mov    %rcx,%r15
mov    %r8,%rcx
sub    %r15d,%ecx
mov    %rdi,%r14
shr    %cl,%r14d
and    %r14b,%r10b
or     %r10b,%r11b
mov    %r11b,(%rdx)
mov    %r15,%rcx
test   %ecx,%ecx
je     194bc <png_do_compose+0x98c>
add    $0xffffffff,%ecx
jmpq   194c3 <png_do_compose+0x993>
add    $0x1,%rdi
mov    %rsi,%rcx
add    $0x1,%r9d
cmp    %r9d,%eax
ja     19bcc <png_do_compose+0x109c>
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
mov    -0x18(%rbp),%r15
leaveq 
retq   
movzbl (%rdi),%r10d
mov    %r10,%r11
shr    %cl,%r11d
and    $0x3,%r11w
movzwl 0x2f8(%r9),%r14d
cmp    %r14w,%r11w
jne    198f3 <png_do_compose+0xdc3>
movzbl 0x284(%r9),%r11d
shl    %cl,%r11d
mov    %rcx,%r15
mov    %rsi,%rcx
sub    %r15d,%ecx
mov    %rdx,%r14
shr    %cl,%r14d
and    %r14b,%r10b
or     %r10b,%r11b
mov    %r11b,(%rdi)
mov    %r15,%rcx
test   %ecx,%ecx
je     194fd <png_do_compose+0x9cd>
add    $0xfffffffe,%ecx
jmpq   19504 <png_do_compose+0x9d4>
add    $0x1,%rdi
mov    %rsi,%rcx
add    $0x1,%r9d
cmp    %r9d,%eax
ja     19c2e <png_do_compose+0x10fe>
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r13
mov    -0x30(%rbp),%r15
leaveq 
retq   
movzbl (%rdi),%r10d
mov    %r10,%r11
shr    %cl,%r11d
and    $0xf,%r11w
movzwl 0x2f8(%r9),%r14d
cmp    %r14w,%r11w
jne    19968 <png_do_compose+0xe38>
movzbl 0x284(%r9),%r11d
shl    %cl,%r11d
mov    %rcx,%r15
mov    %rsi,%rcx
sub    %r15d,%ecx
mov    %rdx,%r14
shr    %cl,%r14d
and    %r14b,%r10b
or     %r10b,%r11b
mov    %r11b,(%rdi)
mov    %r15,%rcx
test   %ecx,%ecx
je     19540 <png_do_compose+0xa10>
add    $0xfffffffc,%ecx
jmpq   19547 <png_do_compose+0xa17>
movzbl 0x284(%rdi),%esi
mov    %sil,(%rcx)
add    $0x1,%edx
add    $0x1,%rcx
cmp    %edx,%eax
ja     19c8c <png_do_compose+0x115c>
leaveq 
retq   
movzwl 0x284(%r8),%r9d
shr    $0x8,%r9d
mov    %r9b,(%rdi)
movzbl 0x284(%r8),%r9d
mov    %r9b,0x1(%rdi)
add    $0x1,%edx
add    $0x2,%rdi
cmp    %edx,%eax
ja     19cab <png_do_compose+0x117b>
mov    -0x40(%rbp),%r15
leaveq 
retq   
movzbl (%rdx),%r9d
movzwl 0x2f2(%rdi),%esi
cmp    %si,%r9w
jne    195f4 <png_do_compose+0xac4>
movzbl 0x1(%rdx),%esi
movzwl 0x2f4(%rdi),%r9d
cmp    %r9w,%si
jne    195f4 <png_do_compose+0xac4>
movzbl 0x2(%rdx),%r9d
movzwl 0x2f6(%rdi),%esi
cmp    %si,%r9w
jne    195f4 <png_do_compose+0xac4>
movzbl 0x27e(%rdi),%esi
mov    %sil,(%rdx)
movzbl 0x280(%rdi),%esi
mov    %sil,0x1(%rdx)
movzbl 0x282(%rdi),%esi
mov    %sil,0x2(%rdx)
jmpq   19619 <png_do_compose+0xae9>
movzbl (%rdi),%edx
movzbl (%r8,%rdx,1),%edx
mov    %dl,(%rdi)
add    $0x1,%esi
add    $0x2,%rdi
cmp    %esi,%eax
ja     19cef <png_do_compose+0x11bf>
mov    -0x58(%rbp),%r14
mov    -0x50(%rbp),%r13
mov    -0x60(%rbp),%r15
leaveq 
retq   
movzbl 0x3(%rdi),%r14d
movzbl 0x2(%rdi),%r12d
shl    $0x8,%r12d
lea    (%r14,%r12,1),%r13d
cmp    $0xffff,%r13w
je     19711 <png_do_compose+0xbe1>
cmp    %r12w,%r14w
je     19d54 <png_do_compose+0x1224>
movzwl %r13w,%r14d
mov    %r11,%r13
sub    %r14d,%r13d
movzwl 0x28e(%r10),%r12d
imul   %r12d,%r13d
movzbl 0x1(%rdi),%r12d
shr    %cl,%r12d
movslq %r12d,%r12
mov    (%r8,%r12,8),%r15
movzbl (%rdi),%r12d
movzwl (%r15,%r12,2),%r12d
imul   %r12d,%r14d
add    %r14d,%r13d
lea    0x8000(%r13),%r12d
shr    $0x10,%r12d
lea    0x8000(%r12,%r13,1),%r12d
shr    $0x10,%r12d
test   %ebx,%ebx
jg     19ae5 <png_do_compose+0xfb5>
movzwl %r12w,%r13d
movzbl %r13b,%r12d
shr    %cl,%r12d
movslq %r12d,%r12
mov    (%r9,%r12,8),%r14
shr    $0x8,%r13d
movslq %r13d,%r12
movzwl (%r14,%r12,2),%r12d
movzwl %r12w,%r13d
shr    $0x8,%r13d
mov    %r13b,(%rdi)
mov    %r12b,0x1(%rdi)
jmpq   19737 <png_do_compose+0xc07>
movzbl (%rsi),%ebx
movzbl (%r8,%rbx,1),%ebx
mov    %bl,(%rsi)
movzbl 0x1(%rsi),%ebx
movzbl (%r8,%rbx,1),%ebx
mov    %bl,0x1(%rsi)
movzbl 0x2(%rsi),%ebx
movzbl (%r8,%rbx,1),%ebx
mov    %bl,0x2(%rsi)
add    $0x1,%edi
add    $0x4,%rsi
cmp    %edi,%eax
ja     19d74 <png_do_compose+0x1244>
mov    -0x70(%rbp),%r12
mov    -0x68(%rbp),%rbx
mov    -0x80(%rbp),%r14
mov    -0x78(%rbp),%r13
mov    -0x88(%rbp),%r15
leaveq 
retq   
movzbl 0x7(%rbx),%r15d
movzbl 0x6(%rbx),%r13d
shl    $0x8,%r13d
lea    (%r15,%r13,1),%r14d
cmp    $0xffff,%r14w
je     19798 <png_do_compose+0xc68>
cmp    %r13w,%r15w
je     19dd3 <png_do_compose+0x12a3>
movzwl %r14w,%r13d
sub    %r13d,%edx
movzwl 0x288(%rdi),%r14d
mov    %rdx,%r15
imul   %r14d,%r15d
movzbl 0x1(%rbx),%r14d
shr    %cl,%r14d
movslq %r14d,%r14
mov    (%r10,%r14,8),%r14
mov    %rsi,-0xa8(%rbp)
movzbl (%rbx),%esi
movzwl (%r14,%rsi,2),%esi
imul   %r13d,%esi
lea    (%r15,%rsi,1),%r14d
lea    0x8000(%r14),%esi
shr    $0x10,%esi
lea    0x8000(%rsi,%r14,1),%esi
shr    $0x10,%esi
test   %r12d,%r12d
je     19e2b <png_do_compose+0x12fb>
mov    %r8,%r12
jmpq   19e4d <png_do_compose+0x131d>
movzbl (%rdi),%r13d
mov    %r13,%r11
shr    %cl,%r11d
and    $0x3,%r11w
movzwl 0x2f8(%r10),%r14d
cmp    %r14w,%r11w
je     19ead <png_do_compose+0x137d>
mov    %r13,%r11
shr    %cl,%r11d
and    $0x3,%r11d
mov    %r11,%r14
shl    $0x4,%r14d
add    %r14d,%r11d
lea    (%r11,%r11,4),%r11d
mov    %r11d,%r11d
movzbl (%r11,%r8,1),%r11d
shr    $0x6,%r11d
shl    %cl,%r11d
mov    %rcx,%r14
mov    %rsi,%rcx
sub    %r14d,%ecx
mov    %rdx,%r15
shr    %cl,%r15d
and    %r15b,%r13b
or     %r13b,%r11b
jmpq   19ecd <png_do_compose+0x139d>
movzbl (%rdi),%r13d
mov    %r13,%r11
shr    %cl,%r11d
and    $0xf,%r11w
movzwl 0x2f8(%r10),%r14d
cmp    %r14w,%r11w
je     19ee2 <png_do_compose+0x13b2>
mov    %r13,%r11
shr    %cl,%r11d
and    $0xf,%r11d
mov    %r11,%r14
shl    $0x4,%r14d
add    %r14d,%r11d
mov    %r11d,%r11d
movzbl (%r8,%r11,1),%r11d
shr    $0x4,%r11d
shl    %cl,%r11d
mov    %rcx,%r14
mov    %rsi,%rcx
sub    %r14d,%ecx
mov    %rdx,%r15
shr    %cl,%r15d
and    %r15b,%r13b
or     %r13b,%r11b
jmpq   19f02 <png_do_compose+0x13d2>
movzbl (%rcx),%esi
movzwl 0x2f8(%rdi),%r9d
cmp    %r9w,%si
je     19978 <png_do_compose+0xe48>
movzbl (%r8,%rsi,1),%esi
jmpq   1997f <png_do_compose+0xe4f>
movzbl 0x1(%rdi),%r9d
movzbl (%rdi),%r10d
mov    %r10,%r11
shl    $0x8,%r11d
lea    (%r9,%r11,1),%r15d
movzwl 0x2f8(%r8),%r11d
cmp    %r11w,%r15w
je     19993 <png_do_compose+0xe63>
shr    %cl,%r9d
movslq %r9d,%r9
mov    (%rsi,%r9,8),%r9
movzwl (%r9,%r10,2),%r9d
mov    %r9,%r10
shr    $0x8,%r10d
mov    %r10b,(%rdi)
jmpq   199aa <png_do_compose+0xe7a>
movzbl 0x1(%rdi),%edx
cmp    $0xff,%dl
je     19a29 <png_do_compose+0xef9>
test   %dl,%dl
je     19f17 <png_do_compose+0x13e7>
mov    %rcx,%r9
sub    %dx,%r9w
movzwl 0x28e(%r14),%r15d
imul   %r15w,%r9w
movzbl (%rdi),%r15d
movzbl (%r10,%r15,1),%r15d
imul   %r15w,%dx
lea    0x80(%r9,%rdx,1),%edx
movzwl %dx,%r9d
mov    %r9,%rdx
shr    $0x8,%edx
add    %r9d,%edx
shr    $0x8,%edx
test   %r13d,%r13d
jne    19a31 <png_do_compose+0xf01>
movzbl %dl,%edx
movzbl (%r11,%rdx,1),%edx
jmpq   19a31 <png_do_compose+0xf01>
movzwl 0x284(%r10),%r12d
shr    $0x8,%r12d
mov    %r12b,(%rdi)
movzbl 0x284(%r10),%r12d
mov    %r12b,0x1(%rdi)
jmpq   19737 <png_do_compose+0xc07>
movzbl 0x3(%rsi),%r9d
cmp    $0xff,%r9b
je     19af9 <png_do_compose+0xfc9>
test   %r9b,%r9b
je     19f24 <png_do_compose+0x13f4>
sub    %r9w,%cx
movzwl 0x288(%r15),%ebx
imul   %cx,%bx
movzbl (%rsi),%r12d
movzbl (%r10,%r12,1),%r12d
imul   %r9w,%r12w
lea    0x80(%rbx,%r12,1),%ebx
movzwl %bx,%r12d
mov    %r12,%rbx
shr    $0x8,%ebx
add    %r12d,%ebx
shr    $0x8,%ebx
test   %r14d,%r14d
je     19f49 <png_do_compose+0x1419>
mov    %r13,%rdx
jmpq   19f51 <png_do_compose+0x1421>
movzwl 0x27e(%rdi),%r13d
shr    $0x8,%r13d
mov    %r13b,(%rbx)
movzbl 0x27e(%rdi),%r13d
mov    %r13b,0x1(%rbx)
movzwl 0x280(%rdi),%r13d
shr    $0x8,%r13d
mov    %r13b,0x2(%rbx)
movzbl 0x280(%rdi),%r13d
mov    %r13b,0x3(%rbx)
movzwl 0x282(%rdi),%r13d
shr    $0x8,%r13d
mov    %r13b,0x4(%rbx)
movzbl 0x282(%rdi),%r13d
mov    %r13b,0x5(%rbx)
jmpq   1980e <png_do_compose+0xcde>
movzwl %si,%esi
movzbl %sil,%r12d
shr    %cl,%r12d
movslq %r12d,%r12
mov    (%r9,%r12,8),%r12
shr    $0x8,%esi
movslq %esi,%rsi
movzwl (%r12,%rsi,2),%esi
mov    $0x1,%r12d
movzwl %si,%r14d
shr    $0x8,%r14d
mov    %r14b,(%rbx)
mov    %sil,0x1(%rbx)
movzwl 0x28a(%rdi),%esi
mov    %rdx,%r14
imul   %esi,%r14d
movzbl 0x3(%rbx),%esi
shr    %cl,%esi
movslq %esi,%rsi
mov    (%r10,%rsi,8),%r15
movzbl 0x2(%rbx),%esi
movzwl (%r15,%rsi,2),%esi
imul   %r13d,%esi
add    %esi,%r14d
lea    0x8000(%r14),%esi
shr    $0x10,%esi
lea    0x8000(%rsi,%r14,1),%esi
shr    $0x10,%esi
test   %r12,%r12
jne    19f97 <png_do_compose+0x1467>
mov    %r8,%r12
jmpq   19fba <png_do_compose+0x148a>
movzbl 0x284(%r10),%r11d
shl    %cl,%r11d
mov    %rcx,%r14
mov    %rsi,%rcx
sub    %r14d,%ecx
mov    %rdx,%r15
shr    %cl,%r15d
and    %r15b,%r13b
or     %r13b,%r11b
mov    %r11b,(%rdi)
test   %r14d,%r14d
je     1988e <png_do_compose+0xd5e>
lea    -0x2(%r14),%ecx
jmpq   19895 <png_do_compose+0xd65>
movzbl 0x284(%r10),%r11d
shl    %cl,%r11d
mov    %rcx,%r14
mov    %rsi,%rcx
sub    %r14d,%ecx
mov    %rdx,%r15
shr    %cl,%r15d
and    %r15b,%r13b
or     %r13b,%r11b
mov    %r11b,(%rdi)
test   %r14d,%r14d
je     19903 <png_do_compose+0xdd3>
lea    -0x4(%r14),%ecx
jmpq   1990a <png_do_compose+0xdda>
movzbl 0x284(%r14),%edx
jmpq   19a31 <png_do_compose+0xf01>
movzbl 0x27e(%r15),%ebx
mov    %bl,(%rsi)
movzbl 0x280(%r15),%ebx
mov    %bl,0x1(%rsi)
movzbl 0x282(%r15),%ebx
mov    %bl,0x2(%rsi)
jmpq   19b1b <png_do_compose+0xfeb>
movzbl %bl,%ebx
movzbl (%r11,%rbx,1),%ebx
mov    %bl,(%rsi)
movzwl 0x28a(%r15),%ebx
imul   %cx,%bx
movzbl 0x1(%rsi),%r12d
movzbl (%r10,%r12,1),%r12d
imul   %r9w,%r12w
lea    0x80(%rbx,%r12,1),%ebx
movzwl %bx,%r12d
mov    %r12,%rbx
shr    $0x8,%ebx
add    %r12d,%ebx
shr    $0x8,%ebx
test   %rdx,%rdx
jne    1a04b <png_do_compose+0x151b>
mov    %r13,%r12
jmpq   1a059 <png_do_compose+0x1529>
movzwl %si,%r12d
movzbl %r12b,%esi
shr    %cl,%esi
movslq %esi,%rsi
mov    (%r9,%rsi,8),%r14
shr    $0x8,%r12d
movslq %r12d,%rsi
movzwl (%r14,%rsi,2),%esi
mov    $0x1,%r12d
movzwl %si,%r14d
shr    $0x8,%r14d
mov    %r14b,0x2(%rbx)
mov    %sil,0x3(%rbx)
movzwl 0x28c(%rdi),%esi
imul   %esi,%edx
movzbl 0x5(%rbx),%esi
shr    %cl,%esi
movslq %esi,%rsi
mov    (%r10,%rsi,8),%rsi
movzbl 0x4(%rbx),%r14d
movzwl (%rsi,%r14,2),%esi
imul   %esi,%r13d
lea    (%rdx,%r13,1),%esi
lea    0x8000(%rsi),%edx
shr    $0x10,%edx
lea    0x8000(%rdx,%rsi,1),%edx
shr    $0x10,%edx
test   %r12,%r12
je     1a026 <png_do_compose+0x14f6>
movzwl %dx,%esi
movzbl %sil,%edx
shr    %cl,%edx
movslq %edx,%rdx
mov    (%r9,%rdx,8),%r12
shr    $0x8,%esi
movslq %esi,%rdx
movzwl (%r12,%rdx,2),%edx
movzwl %dx,%esi
shr    $0x8,%esi
mov    %sil,0x4(%rbx)
mov    %dl,0x5(%rbx)
mov    -0xa8(%rbp),%rsi
mov    $0xffff,%edx
mov    -0x98(%rbp),%r12
jmpq   1980e <png_do_compose+0xcde>
movzbl %bl,%edx
movzbl (%r11,%rdx,1),%ebx
mov    $0x1,%r12d
mov    %bl,0x1(%rsi)
movzwl 0x28c(%r15),%edx
imul   %cx,%dx
movzbl 0x2(%rsi),%ecx
movzbl (%r10,%rcx,1),%ecx
imul   %cx,%r9w
lea    0x80(%rdx,%r9,1),%ecx
movzwl %cx,%edx
mov    %rdx,%rcx
shr    $0x8,%ecx
add    %edx,%ecx
shr    $0x8,%ecx
test   %r12,%r12
je     1a099 <png_do_compose+0x1569>
movzbl %cl,%ecx
movzbl (%r11,%rcx,1),%ecx
mov    %cl,0x2(%rsi)
mov    $0xff,%ecx
mov    $0x1,%edx
jmpq   19b1b <png_do_compose+0xfeb>
nopl   0x0(%rax,%rax,1)

000000000001a0b0 <png_do_gamma>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    0x2a8(%rdx),%r9
mov    0x2b0(%rdx),%r8
mov    0x2a0(%rdx),%ecx
mov    (%rdi),%edx
movzbl 0x11(%rdi),%r10d
cmp    $0x8,%r10b
jbe    1a0e1 <png_do_gamma+0x31>
cmp    $0x10,%r10b
je     1a101 <png_do_gamma+0x51>
leaveq 
retq   
test   %r9,%r9
je     1a0d9 <png_do_gamma+0x29>
xor    %eax,%eax
movzbl 0x10(%rdi),%r11d
cmp    $0x3,%r11b
jbe    1a108 <png_do_gamma+0x58>
cmp    $0x4,%r11b
je     1a115 <png_do_gamma+0x65>
cmp    $0x6,%r11b
je     1a11d <png_do_gamma+0x6d>
leaveq 
retq   
test   %r8,%r8
jne    1a0e6 <png_do_gamma+0x36>
leaveq 
retq   
test   %r11b,%r11b
je     1a12c <png_do_gamma+0x7c>
cmp    $0x2,%r11b
je     1a14b <png_do_gamma+0x9b>
leaveq 
retq   
cmp    $0x8,%r10b
je     1a19a <png_do_gamma+0xea>
jmp    1a183 <png_do_gamma+0xd3>
cmp    $0x8,%r10b
je     1a240 <png_do_gamma+0x190>
jmpq   1a211 <png_do_gamma+0x161>
cmp    $0x2,%r10b
jne    1a30f <png_do_gamma+0x25f>
mov    %rdi,-0x20(%rbp)
mov    %rsi,-0x18(%rbp)
mov    %rcx,-0x10(%rbp)
mov    %r8,-0x8(%rbp)
jmpq   1a2f5 <png_do_gamma+0x245>
cmp    $0x8,%r10b
je     1a3d3 <png_do_gamma+0x323>
jmpq   1a3a4 <png_do_gamma+0x2f4>
movzbl 0x1(%rsi),%edi
shr    %cl,%edi
movslq %edi,%rdi
mov    (%r8,%rdi,8),%r9
movzbl (%rsi),%edi
movzwl (%r9,%rdi,2),%r9d
mov    %r9,%rdi
shr    $0x8,%edi
mov    %dil,(%rsi)
mov    %r9b,0x1(%rsi)
add    $0x1,%eax
add    $0x4,%rsi
cmp    %eax,%edx
ja     1a15a <png_do_gamma+0xaa>
leaveq 
retq   
movzbl (%rsi),%ecx
movzbl (%r9,%rcx,1),%ecx
mov    %cl,(%rsi)
add    $0x1,%eax
add    $0x2,%rsi
cmp    %eax,%edx
ja     1a189 <png_do_gamma+0xd9>
leaveq 
retq   
movzbl 0x1(%rsi),%edi
shr    %cl,%edi
movslq %edi,%rdi
mov    (%r8,%rdi,8),%r9
movzbl (%rsi),%edi
movzwl (%r9,%rdi,2),%r9d
mov    %r9,%rdi
shr    $0x8,%edi
mov    %dil,(%rsi)
mov    %r9b,0x1(%rsi)
movzbl 0x3(%rsi),%edi
shr    %cl,%edi
movslq %edi,%rdi
mov    (%r8,%rdi,8),%r9
movzbl 0x2(%rsi),%edi
movzwl (%r9,%rdi,2),%r9d
mov    %r9,%rdi
shr    $0x8,%edi
mov    %dil,0x2(%rsi)
mov    %r9b,0x3(%rsi)
movzbl 0x5(%rsi),%edi
shr    %cl,%edi
movslq %edi,%rdi
mov    (%r8,%rdi,8),%r9
movzbl 0x4(%rsi),%edi
movzwl (%r9,%rdi,2),%r9d
mov    %r9,%rdi
shr    $0x8,%edi
mov    %dil,0x4(%rsi)
mov    %r9b,0x5(%rsi)
add    $0x1,%eax
add    $0x8,%rsi
cmp    %eax,%edx
ja     1a1a0 <png_do_gamma+0xf0>
leaveq 
retq   
movzbl (%rsi),%ecx
movzbl (%r9,%rcx,1),%ecx
mov    %cl,(%rsi)
movzbl 0x1(%rsi),%ecx
movzbl (%r9,%rcx,1),%ecx
mov    %cl,0x1(%rsi)
movzbl 0x2(%rsi),%ecx
movzbl (%r9,%rcx,1),%ecx
mov    %cl,0x2(%rsi)
add    $0x1,%eax
add    $0x4,%rsi
cmp    %eax,%edx
ja     1a217 <png_do_gamma+0x167>
leaveq 
retq   
movzbl (%rsi),%edi
mov    %rdi,%rcx
and    $0xc0,%ecx
mov    %rcx,%r8
shr    $0x2,%r8d
add    %ecx,%r8d
shr    $0x4,%ecx
add    %ecx,%r8d
mov    %rdi,%rcx
shr    $0x6,%ecx
add    %r8d,%ecx
movslq %ecx,%rcx
movzbl (%r9,%rcx,1),%r8d
and    $0xc0,%r8d
mov    %rdi,%rcx
and    $0x30,%ecx
lea    (%rcx,%rcx,4),%r10d
mov    %rcx,%r11
shr    $0x2,%r11d
add    %r11d,%r10d
shr    $0x4,%ecx
add    %r10d,%ecx
movslq %ecx,%rcx
movzbl (%r9,%rcx,1),%ecx
and    $0xc0,%ecx
shr    $0x2,%ecx
add    %ecx,%r8d
mov    %rdi,%rcx
and    $0xc,%ecx
lea    (%rcx,%rcx,4),%r10d
lea    (%rcx,%r10,4),%r10d
shr    $0x2,%ecx
add    %r10d,%ecx
movslq %ecx,%rcx
movzbl (%r9,%rcx,1),%ecx
and    $0xc0,%ecx
shr    $0x4,%ecx
add    %ecx,%r8d
and    $0x3,%edi
mov    %rdi,%rcx
shl    $0x4,%ecx
add    %edi,%ecx
lea    (%rcx,%rcx,4),%ecx
movslq %ecx,%rcx
movzbl (%r9,%rcx,1),%ecx
shr    $0x6,%ecx
add    %r8d,%ecx
mov    %cl,(%rsi)
add    $0x1,%rsi
add    $0x4,%eax
cmp    %eax,%edx
ja     1a246 <png_do_gamma+0x196>
mov    -0x8(%rbp),%r8
mov    -0x10(%rbp),%rcx
mov    -0x18(%rbp),%rsi
xor    %eax,%eax
mov    -0x20(%rbp),%rdi
movzbl 0x11(%rdi),%edi
cmp    $0x4,%dil
je     1a41d <png_do_gamma+0x36d>
cmp    $0x8,%dil
je     1a434 <png_do_gamma+0x384>
cmp    $0x10,%dil
je     1a463 <png_do_gamma+0x3b3>
leaveq 
retq   
movzbl 0x1(%rsi),%edi
shr    %cl,%edi
movslq %edi,%rdi
mov    (%r8,%rdi,8),%r9
movzbl (%rsi),%edi
movzwl (%r9,%rdi,2),%r9d
mov    %r9,%rdi
shr    $0x8,%edi
mov    %dil,(%rsi)
mov    %r9b,0x1(%rsi)
movzbl 0x3(%rsi),%edi
shr    %cl,%edi
movslq %edi,%rdi
mov    (%r8,%rdi,8),%r9
movzbl 0x2(%rsi),%edi
movzwl (%r9,%rdi,2),%r9d
mov    %r9,%rdi
shr    $0x8,%edi
mov    %dil,0x2(%rsi)
mov    %r9b,0x3(%rsi)
movzbl 0x5(%rsi),%edi
shr    %cl,%edi
movslq %edi,%rdi
mov    (%r8,%rdi,8),%r9
movzbl 0x4(%rsi),%edi
movzwl (%r9,%rdi,2),%r9d
mov    %r9,%rdi
shr    $0x8,%edi
mov    %dil,0x4(%rsi)
mov    %r9b,0x5(%rsi)
add    $0x1,%eax
add    $0x6,%rsi
cmp    %eax,%edx
ja     1a333 <png_do_gamma+0x283>
leaveq 
retq   
movzbl (%rsi),%ecx
movzbl (%r9,%rcx,1),%ecx
mov    %cl,(%rsi)
movzbl 0x1(%rsi),%ecx
movzbl (%r9,%rcx,1),%ecx
mov    %cl,0x1(%rsi)
movzbl 0x2(%rsi),%ecx
movzbl (%r9,%rcx,1),%ecx
mov    %cl,0x2(%rsi)
add    $0x1,%eax
add    $0x3,%rsi
cmp    %edx,%eax
jb     1a3aa <png_do_gamma+0x2fa>
leaveq 
retq   
movzbl (%rsi),%ecx
mov    %rcx,%r8
and    $0xf,%r8d
mov    %r8,%rdi
shl    $0x4,%edi
add    %r8d,%edi
movslq %edi,%rdi
movzbl (%r9,%rdi,1),%edi
shr    $0x4,%edi
mov    %rcx,%r8
shr    $0x4,%r8d
and    $0xf0,%ecx
add    %r8d,%ecx
movslq %ecx,%rcx
movzbl (%r9,%rcx,1),%ecx
and    $0xf0,%cl
add    %edi,%ecx
mov    %cl,(%rsi)
add    $0x2,%eax
add    $0x1,%rsi
cmp    %eax,%edx
ja     1a3d9 <png_do_gamma+0x329>
leaveq 
retq   
movzbl (%rsi),%ecx
movzbl (%r9,%rcx,1),%ecx
mov    %cl,(%rsi)
add    $0x1,%eax
add    $0x1,%rsi
cmp    %eax,%edx
ja     1a423 <png_do_gamma+0x373>
leaveq 
retq   
movzbl 0x1(%rsi),%edi
shr    %cl,%edi
movslq %edi,%rdi
mov    (%r8,%rdi,8),%r9
movzbl (%rsi),%edi
movzwl (%r9,%rdi,2),%r9d
mov    %r9,%rdi
shr    $0x8,%edi
mov    %dil,(%rsi)
mov    %r9b,0x1(%rsi)
add    $0x1,%eax
add    $0x2,%rsi
cmp    %eax,%edx
ja     1a43a <png_do_gamma+0x38a>
leaveq 
retq   
nopl   0x0(%rax)

000000000001a470 <png_do_encode_alpha>:
push   %rbp
mov    %rsp,%rbp
mov    (%rdi),%eax
movzbl 0x10(%rdi),%r10d
mov    %r10,%rcx
and    $0x4,%ecx
test   %ecx,%ecx
jg     1a496 <png_do_encode_alpha+0x26>
mov    %rdx,%rdi
lea    0x14162(%rip),%rsi        # 2e5f1 <chunks_to_process.34+0x7ec>
callq  5390 <png_warning@plt>
leaveq 
retq   
mov    $0x4,%r8d
mov    $0x2,%r11d
movzbl 0x11(%rdi),%ecx
cmp    $0x8,%cl
je     1a4dd <png_do_encode_alpha+0x6d>
cmp    $0x10,%cl
jne    1a485 <png_do_encode_alpha+0x15>
mov    0x2a0(%rdx),%ecx
mov    0x2c8(%rdx),%r9
test   %r9,%r9
je     1a485 <png_do_encode_alpha+0x15>
and    $0x2,%r10d
test   %r10d,%r10d
jle    1a4d7 <png_do_encode_alpha+0x67>
mov    $0x6,%r11d
mov    $0x8,%r8d
lea    (%rsi,%r11,1),%rdx
jmp    1a520 <png_do_encode_alpha+0xb0>
mov    0x2b8(%rdx),%rdi
test   %rdi,%rdi
je     1a485 <png_do_encode_alpha+0x15>
and    $0x2,%r10d
test   %r10d,%r10d
jg     1a526 <png_do_encode_alpha+0xb6>
mov    $0x1,%ecx
jmp    1a52e <png_do_encode_alpha+0xbe>
movzbl 0x1(%rdx),%esi
shr    %cl,%esi
movslq %esi,%rsi
mov    (%r9,%rsi,8),%rsi
movzbl (%rdx),%edi
movzwl (%rsi,%rdi,2),%edi
mov    %rdi,%rsi
shr    $0x8,%esi
mov    %sil,(%rdx)
mov    %dil,0x1(%rdx)
add    $0xffffffff,%eax
add    %r8,%rdx
test   %eax,%eax
jne    1a4f9 <png_do_encode_alpha+0x89>
leaveq 
retq   
mov    %r8,%r11
mov    $0x3,%ecx
add    %rsi,%rcx
jmp    1a542 <png_do_encode_alpha+0xd2>
movzbl (%rcx),%edx
movzbl (%rdi,%rdx,1),%edx
mov    %dl,(%rcx)
add    $0xffffffff,%eax
add    %r11,%rcx
test   %eax,%eax
jne    1a533 <png_do_encode_alpha+0xc3>
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

000000000001a550 <png_do_expand_palette>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    (%rdi),%r9d
movzbl 0x10(%rdi),%eax
cmp    $0x3,%al
je     1a565 <png_do_expand_palette+0x15>
leaveq 
retq   
xor    %eax,%eax
movzbl 0x11(%rdi),%r10d
cmp    $0x7,%r10b
ja     1a5fa <png_do_expand_palette+0xaa>
cmp    $0x1,%r10b
jbe    1a60b <png_do_expand_palette+0xbb>
cmp    $0x2,%r10b
je     1a657 <png_do_expand_palette+0x107>
cmp    $0x4,%r10b
jne    1a5ee <png_do_expand_palette+0x9e>
mov    %r9,%r11
and    $0x1,%r11d
neg    %r11d
and    $0x4,%r11d
lea    -0x1(%r9),%r10d
shr    %r10d
mov    %r10d,%r10d
add    %rsi,%r10
mov    %rcx,-0x18(%rbp)
lea    -0x1(%rsi,%r9,1),%rcx
mov    %r8,-0x28(%rbp)
mov    %rsi,-0x20(%rbp)
mov    %rcx,%r8
mov    %r11,%rcx
mov    %rax,%r11
jmpq   1a6a7 <png_do_expand_palette+0x157>
add    $0xffffffffffffffff,%r10
mov    %rax,%rcx
add    $0xffffffffffffffff,%r11
add    $0x1,%r8d
cmp    %r8d,%r9d
ja     1a6bd <png_do_expand_palette+0x16d>
mov    -0x20(%rbp),%rsi
mov    -0x28(%rbp),%r8
mov    -0x10(%rbp),%rcx
movb   $0x8,0x11(%rdi)
movb   $0x8,0x13(%rdi)
mov    %r9,0x8(%rdi)
movzbl 0x11(%rdi),%r10d
cmp    $0x8,%r10b
je     1a6db <png_do_expand_palette+0x18b>
leaveq 
retq   
cmp    $0x1,%r10b
jne    1a5ee <png_do_expand_palette+0x9e>
mov    $0xfffffffffffffff8,%r10
sub    %r9d,%r10d
and    $0x7,%r10d
mov    $0x1,%r11d
mov    %rcx,-0x8(%rbp)
lea    -0x1(%rsi,%r9,1),%rcx
mov    %rdx,-0x10(%rbp)
lea    -0x1(%r9),%edx
shr    $0x3,%edx
mov    %edx,%edx
add    %rsi,%rdx
mov    %r8,-0x28(%rbp)
mov    %rsi,-0x18(%rbp)
mov    %r10,%rsi
mov    %rcx,%r10
mov    %rsi,%rcx
mov    %rax,%r8
jmpq   1a705 <png_do_expand_palette+0x1b5>
lea    -0x1(%r9),%r10d
shr    $0x2,%r10d
mov    %r10d,%r10d
add    %rsi,%r10
mov    $0xfffffffffffffffc,%r11
sub    %r9d,%r11d
and    $0x3,%r11d
add    %r11d,%r11d
mov    %rcx,-0x10(%rbp)
lea    -0x1(%rsi,%r9,1),%rcx
mov    %r8,-0x28(%rbp)
mov    %rsi,-0x20(%rbp)
mov    %r11,%rsi
mov    %rcx,%r11
mov    %rsi,%rcx
mov    %rax,%r8
jmpq   1a5d9 <png_do_expand_palette+0x89>
add    $0xffffffffffffffff,%r10
mov    %rax,%rcx
add    $0xffffffffffffffff,%r8
add    $0x1,%r11d
cmp    %r11d,%r9d
ja     1a723 <png_do_expand_palette+0x1d3>
mov    -0x20(%rbp),%rsi
mov    -0x28(%rbp),%r8
mov    -0x18(%rbp),%rcx
jmpq   1a5ee <png_do_expand_palette+0x9e>
movzbl (%r10),%esi
shr    %cl,%esi
and    $0x3,%sil
mov    %sil,(%r11)
cmp    $0x6,%ecx
je     1a5ca <png_do_expand_palette+0x7a>
add    $0x2,%ecx
jmpq   1a5d1 <png_do_expand_palette+0x81>
test   %r8d,%r8d
jg     1a741 <png_do_expand_palette+0x1f1>
lea    -0x1(%rsi,%r9,1),%rcx
lea    (%r9,%r9,2),%r10d
mov    %r10d,%r8d
lea    -0x1(%rsi,%r8,1),%rsi
jmpq   1a79d <png_do_expand_palette+0x24d>
add    $0xffffffffffffffff,%rdx
mov    %rax,%rcx
add    $0xffffffffffffffff,%r10
add    $0x1,%r8d
cmp    %r8d,%r9d
ja     1a7bb <png_do_expand_palette+0x26b>
mov    -0x18(%rbp),%rsi
mov    -0x28(%rbp),%r8
mov    -0x10(%rbp),%rdx
mov    -0x8(%rbp),%rcx
jmpq   1a5ee <png_do_expand_palette+0x9e>
movzbl (%r10),%esi
shr    %cl,%esi
and    $0xf,%sil
mov    %sil,(%r8)
cmp    $0x4,%ecx
je     1a698 <png_do_expand_palette+0x148>
add    $0x4,%ecx
jmpq   1a69f <png_do_expand_palette+0x14f>
lea    -0x1(%rsi,%r9,1),%r10
mov    $0xff,%r11d
lea    -0x1(%rsi,%r9,4),%rsi
mov    %r14,-0x8(%rbp)
mov    %r15,-0x28(%rbp)
jmpq   1a812 <png_do_expand_palette+0x2c2>
movzbl (%rcx),%r8d
lea    (%r8,%r8,2),%r8
movzbl 0x2(%rdx,%r8,1),%r8d
mov    %r8b,(%rsi)
movzbl (%rcx),%r8d
lea    (%r8,%r8,2),%r8
movzbl 0x1(%rdx,%r8,1),%r8d
mov    %r8b,-0x1(%rsi)
movzbl (%rcx),%r8d
lea    (%r8,%r8,2),%r8
movzbl (%rdx,%r8,1),%r8d
mov    %r8b,-0x2(%rsi)
add    $0x1,%eax
add    $0xffffffffffffffff,%rcx
add    $0xfffffffffffffffd,%rsi
cmp    %eax,%r9d
ja     1a75e <png_do_expand_palette+0x20e>
movb   $0x8,0x11(%rdi)
movb   $0x18,0x13(%rdi)
mov    %r10d,%eax
mov    %rax,0x8(%rdi)
movb   $0x2,0x10(%rdi)
movb   $0x3,0x12(%rdi)
leaveq 
retq   
movzbl (%rdx),%esi
shr    %cl,%esi
and    $0x1,%esi
test   %esi,%esi
jg     1a83c <png_do_expand_palette+0x2ec>
mov    %rax,%rsi
jmp    1a83f <png_do_expand_palette+0x2ef>
lea    -0x1(%rsi),%r14
mov    %r11,%r15
mov    %r15b,(%rsi)
movzbl (%r10),%esi
lea    (%rsi,%rsi,2),%rsi
movzbl 0x2(%rdx,%rsi,1),%esi
mov    %sil,(%r14)
movzbl (%r10),%esi
lea    (%rsi,%rsi,2),%rsi
movzbl 0x1(%rdx,%rsi,1),%esi
mov    %sil,-0x1(%r14)
movzbl (%r10),%esi
lea    (%rsi,%rsi,2),%rsi
movzbl (%rdx,%rsi,1),%esi
mov    %sil,-0x2(%r14)
add    $0x1,%eax
add    $0xffffffffffffffff,%r10
lea    -0x3(%r14),%rsi
cmp    %r9d,%eax
jb     1a853 <png_do_expand_palette+0x303>
movb   $0x8,0x11(%rdi)
movb   $0x20,0x13(%rdi)
shl    $0x2,%r9d
mov    %r9d,%eax
mov    %rax,0x8(%rdi)
movb   $0x6,0x10(%rdi)
movb   $0x4,0x12(%rdi)
mov    -0x28(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
mov    %r11,%rsi
mov    %sil,(%r10)
cmp    $0x7,%ecx
je     1a6f6 <png_do_expand_palette+0x1a6>
add    $0x1,%ecx
jmpq   1a6fd <png_do_expand_palette+0x1ad>
movzbl (%r10),%r14d
cmp    %r8d,%r14d
jge    1a7cc <png_do_expand_palette+0x27c>
movzbl (%r14,%rcx,1),%r15d
lea    -0x1(%rsi),%r14
jmpq   1a7d3 <png_do_expand_palette+0x283>
xchg   %ax,%ax

000000000001a870 <png_do_expand>:
push   %rbp
mov    %rsp,%rbp
sub    $0x40,%rsp
mov    (%rdi),%r8d
mov    $0xff,%r9d
xor    %eax,%eax
movzbl 0x10(%rdi),%ecx
test   %cl,%cl
je     1a892 <png_do_expand+0x22>
cmp    $0x2,%cl
je     1a89c <png_do_expand+0x2c>
leaveq 
retq   
test   %rdx,%rdx
jne    1a8a3 <png_do_expand+0x33>
mov    %rax,%r11
jmp    1a8a8 <png_do_expand+0x38>
test   %rdx,%rdx
jne    1a8bc <png_do_expand+0x4c>
leaveq 
retq   
movzwl 0x8(%rdx),%r11d
movzbl 0x11(%rdi),%ecx
cmp    $0x7,%cl
jbe    1a913 <png_do_expand+0xa3>
test   %rdx,%rdx
jne    1a96f <png_do_expand+0xff>
leaveq 
retq   
movzbl 0x11(%rdi),%ecx
cmp    $0x8,%cl
je     1a9a3 <png_do_expand+0x133>
cmp    $0x10,%cl
jne    1aa11 <png_do_expand+0x1a1>
movzwl 0x2(%rdx),%r10d
mov    %r10,%r9
shr    $0x8,%r9d
movzwl 0x4(%rdx),%ecx
mov    %rcx,%r11
shr    $0x8,%r11d
movzwl 0x6(%rdx),%edx
mov    %r15,-0x38(%rbp)
mov    %rdx,%r15
shr    $0x8,%r15d
mov    %r14,-0x30(%rbp)
mov    0x8(%rdi),%r14
lea    -0x1(%rsi,%r14,1),%r14
lea    -0x1(%rsi,%r8,8),%rsi
mov    %r13,-0x28(%rbp)
jmpq   1aa89 <png_do_expand+0x219>
cmp    $0x1,%cl
jbe    1aaa3 <png_do_expand+0x233>
cmp    $0x2,%cl
je     1aabd <png_do_expand+0x24d>
cmp    $0x4,%cl
jne    1aaac <png_do_expand+0x23c>
mov    $0xfffffffffffffffe,%rcx
sub    %r8d,%ecx
and    $0x1,%ecx
neg    %ecx
and    $0x4,%ecx
lea    -0x1(%r8),%r9d
shr    %r9d
mov    %r9d,%r9d
add    %rsi,%r9
lea    -0x1(%rsi,%r8,1),%r10
mov    %rsi,-0x10(%rbp)
mov    $0x4,%esi
mov    %r15,-0x20(%rbp)
mov    %r11,-0x18(%rbp)
mov    %rdx,-0x38(%rbp)
mov    %rax,%r11
jmpq   1ab01 <png_do_expand+0x291>
movzbl 0x11(%rdi),%ecx
cmp    $0x8,%cl
je     1ab32 <png_do_expand+0x2c2>
cmp    $0x10,%cl
jne    1ab71 <png_do_expand+0x301>
mov    %r11,%r9
shr    $0x8,%r9d
movzbl %r11b,%r10d
mov    0x8(%rdi),%rdx
lea    -0x1(%rsi,%rdx,1),%rcx
lea    -0x1(%rsi,%rdx,2),%rdx
jmpq   1abc2 <png_do_expand+0x352>
movzbl 0x2(%rdx),%r11d
movzbl 0x4(%rdx),%r10d
movzbl 0x6(%rdx),%edx
mov    0x8(%rdi),%rcx
lea    -0x1(%rsi,%rcx,1),%rcx
lea    -0x1(%rsi,%r8,4),%rsi
mov    %r15,-0x38(%rbp)
mov    %r14,-0x30(%rbp)
mov    %r13,-0x28(%rbp)
mov    %rax,%r13
jmp    1a9fc <png_do_expand+0x18c>
lea    -0x1(%rsi),%r14
mov    %r9,%r15
mov    %r15b,(%rsi)
movzbl (%rcx),%esi
mov    %sil,(%r14)
movzbl -0x1(%rcx),%esi
mov    %sil,-0x1(%r14)
movzbl -0x2(%rcx),%esi
mov    %sil,-0x2(%r14)
add    $0xfffffffffffffffd,%rcx
lea    -0x3(%r14),%rsi
add    $0x1,%r13d
cmp    %r13d,%r8d
ja     1abe5 <png_do_expand+0x375>
mov    -0x28(%rbp),%r13
mov    -0x30(%rbp),%r14
mov    -0x38(%rbp),%r15
movb   $0x6,0x10(%rdi)
movb   $0x4,0x12(%rdi)
movzbl 0x11(%rdi),%eax
shl    $0x2,%eax
mov    %al,0x13(%rdi)
cmp    $0x7,%al
ja     1ac1a <png_do_expand+0x3aa>
movzbl %al,%eax
imul   %r8,%rax
add    $0x7,%rax
shr    $0x3,%rax
jmpq   1ac25 <png_do_expand+0x3b5>
movb   $0xff,(%rsi)
movb   $0xff,-0x1(%rsi)
add    $0xfffffffffffffffe,%rsi
movzbl (%r14),%r13d
mov    %r13b,(%rsi)
movzbl -0x1(%r14),%r13d
mov    %r13b,-0x1(%rsi)
movzbl -0x2(%r14),%r13d
mov    %r13b,-0x2(%rsi)
movzbl -0x3(%r14),%r13d
mov    %r13b,-0x3(%rsi)
movzbl -0x4(%r14),%r13d
mov    %r13b,-0x4(%rsi)
movzbl -0x5(%r14),%r13d
mov    %r13b,-0x5(%rsi)
add    $0xfffffffffffffffa,%r14
add    $0xfffffffffffffffa,%rsi
add    $0x1,%eax
cmp    %eax,%r8d
ja     1ac2b <png_do_expand+0x3bb>
mov    -0x28(%rbp),%r13
mov    -0x30(%rbp),%r14
mov    -0x38(%rbp),%r15
jmpq   1aa11 <png_do_expand+0x1a1>
cmp    $0x1,%cl
je     1ac8e <png_do_expand+0x41e>
movb   $0x8,0x11(%rdi)
movb   $0x8,0x13(%rdi)
mov    %r8,0x8(%rdi)
jmpq   1a8b1 <png_do_expand+0x41>
lea    -0x1(%r8),%ecx
shr    $0x2,%ecx
mov    %ecx,%ecx
lea    (%rsi,%rcx,1),%r9
mov    $0xfffffffffffffffc,%rcx
sub    %r8d,%ecx
and    $0x3,%ecx
add    %ecx,%ecx
lea    -0x1(%rsi,%r8,1),%r10
mov    %rsi,-0x10(%rbp)
mov    %r11,-0x20(%rbp)
mov    %rdx,-0x38(%rbp)
mov    %rax,%rsi
jmpq   1acd0 <png_do_expand+0x460>
add    $0xffffffffffffffff,%r9
mov    %rax,%rcx
add    $0xffffffffffffffff,%r10
add    $0x1,%r11d
cmp    %r8d,%r11d
jb     1acff <png_do_expand+0x48f>
mov    -0x18(%rbp),%rcx
and    $0xf,%ecx
mov    %rcx,%rdx
shl    $0x4,%edx
lea    (%rcx,%rdx,1),%r11d
mov    -0x38(%rbp),%rdx
mov    -0x10(%rbp),%rsi
mov    $0xff,%r9d
mov    -0x20(%rbp),%r15
jmpq   1aaac <png_do_expand+0x23c>
movzbl %r11b,%r11d
lea    -0x1(%rsi,%r8,1),%rcx
lea    -0x1(%rsi,%r8,2),%rdx
mov    %r15,-0x38(%rbp)
mov    %rax,%r10
jmp    1ab64 <png_do_expand+0x2f4>
lea    -0x1(%rdx),%rsi
mov    %rax,%r15
mov    %r15b,(%rdx)
movzbl (%rcx),%edx
mov    %dl,(%rsi)
add    $0xffffffffffffffff,%rcx
lea    -0x1(%rsi),%rdx
add    $0x1,%r10d
cmp    %r10d,%r8d
ja     1ad26 <png_do_expand+0x4b6>
mov    -0x38(%rbp),%r15
movb   $0x4,0x10(%rdi)
movb   $0x2,0x12(%rdi)
movzbl 0x11(%rdi),%eax
add    %eax,%eax
mov    %al,0x13(%rdi)
cmp    $0x7,%al
ja     1ad3e <png_do_expand+0x4ce>
movzbl %al,%eax
imul   %r8,%rax
add    $0x7,%rax
shr    $0x3,%rax
jmpq   1ad49 <png_do_expand+0x4d9>
movb   $0xff,(%rdx)
movb   $0xff,-0x1(%rdx)
add    $0xfffffffffffffffe,%rdx
movzbl (%rcx),%esi
mov    %sil,(%rdx)
movzbl -0x1(%rcx),%esi
mov    %sil,-0x1(%rdx)
add    $0xfffffffffffffffe,%rcx
add    $0xfffffffffffffffe,%rdx
add    $0x1,%eax
cmp    %eax,%r8d
jbe    1ab71 <png_do_expand+0x301>
movzbl -0x1(%rcx),%esi
cmp    %r9d,%esi
jne    1ab9e <png_do_expand+0x32e>
movzbl (%rcx),%esi
cmp    %r10d,%esi
jne    1ab9e <png_do_expand+0x32e>
movb   $0x0,(%rdx)
movb   $0x0,-0x1(%rdx)
add    $0xfffffffffffffffe,%rdx
jmp    1aba9 <png_do_expand+0x339>
movzbl -0x2(%rcx),%r14d
cmp    %r14b,%r11b
jne    1a9d0 <png_do_expand+0x160>
movzbl -0x1(%rcx),%r14d
cmp    %r14b,%r10b
jne    1a9d0 <png_do_expand+0x160>
movzbl (%rcx),%r14d
cmp    %r14b,%dl
jne    1a9d0 <png_do_expand+0x160>
lea    -0x1(%rsi),%r14
mov    %rax,%r15
jmpq   1a9d7 <png_do_expand+0x167>
movzbl %al,%eax
shr    $0x3,%rax
imul   %r8,%rax
mov    %rax,0x8(%rdi)
leaveq 
retq   
movzbl -0x5(%r14),%r13d
cmp    %r9b,%r13b
jne    1aa3f <png_do_expand+0x1cf>
movzbl -0x4(%r14),%r13d
cmp    %r13b,%r10b
jne    1aa3f <png_do_expand+0x1cf>
movzbl -0x3(%r14),%r13d
cmp    %r11b,%r13b
jne    1aa3f <png_do_expand+0x1cf>
movzbl -0x2(%r14),%r13d
cmp    %r13b,%cl
jne    1aa3f <png_do_expand+0x1cf>
movzbl -0x1(%r14),%r13d
cmp    %r15b,%r13b
jne    1aa3f <png_do_expand+0x1cf>
movzbl (%r14),%r13d
cmp    %r13b,%dl
jne    1aa3f <png_do_expand+0x1cf>
movb   $0x0,(%rsi)
movb   $0x0,-0x1(%rsi)
add    $0xfffffffffffffffe,%rsi
jmpq   1aa4a <png_do_expand+0x1da>
mov    $0xfffffffffffffff8,%rcx
sub    %r8d,%ecx
and    $0x7,%ecx
lea    -0x1(%rsi,%r8,1),%r10
mov    %r15,-0x38(%rbp)
lea    -0x1(%r8),%r15d
shr    $0x3,%r15d
mov    %r15d,%r15d
add    %rsi,%r15
mov    %rsi,-0x8(%rbp)
mov    %r11,-0x18(%rbp)
mov    %rax,%r11
jmpq   1ad5e <png_do_expand+0x4ee>
add    $0xffffffffffffffff,%r9
mov    %rax,%rcx
add    $0xffffffffffffffff,%r10
add    $0x1,%esi
cmp    %esi,%r8d
ja     1ad7d <png_do_expand+0x50d>
mov    -0x20(%rbp),%rcx
and    $0x3,%ecx
mov    %rcx,%rdx
shl    $0x4,%edx
add    %edx,%ecx
lea    (%rcx,%rcx,4),%r11d
mov    -0x38(%rbp),%rdx
mov    -0x10(%rbp),%rsi
mov    $0xff,%r9d
jmpq   1aaac <png_do_expand+0x23c>
movzbl (%r9),%edx
shr    %cl,%edx
mov    %rdx,%r15
and    $0xf,%r15b
shl    $0x4,%edx
add    %r15d,%edx
mov    %dl,(%r10)
cmp    $0x4,%ecx
je     1aaf2 <png_do_expand+0x282>
mov    %rsi,%rcx
jmpq   1aaf9 <png_do_expand+0x289>
movzbl (%rcx),%esi
cmp    %r11d,%esi
je     1ab49 <png_do_expand+0x2d9>
lea    -0x1(%rdx),%rsi
mov    %r9,%r15
jmpq   1ab50 <png_do_expand+0x2e0>
movzbl %al,%eax
shr    $0x3,%rax
imul   %r8,%rax
mov    %rax,0x8(%rdi)
leaveq 
retq   
add    $0xffffffffffffffff,%r15
mov    %rax,%rcx
add    $0xffffffffffffffff,%r10
add    $0x1,%r11d
cmp    %r11d,%r8d
ja     1ada7 <png_do_expand+0x537>
mov    -0x18(%rbp),%rcx
and    $0x1,%ecx
neg    %ecx
movzbl %cl,%r11d
mov    -0x8(%rbp),%rsi
mov    -0x38(%rbp),%r15
jmpq   1aaac <png_do_expand+0x23c>
movzbl (%r9),%edx
shr    %cl,%edx
and    $0x3,%dl
mov    %rdx,%r11
shl    $0x4,%r11d
add    %r11d,%edx
lea    (%rdx,%rdx,4),%edx
mov    %dl,(%r10)
cmp    $0x6,%ecx
je     1acc2 <png_do_expand+0x452>
add    $0x2,%ecx
jmpq   1acc9 <png_do_expand+0x459>
movzbl (%r15),%esi
shr    %cl,%esi
and    $0x1,%esi
test   %esi,%esi
jg     1adb9 <png_do_expand+0x549>
mov    %rax,%rsi
jmp    1adbc <png_do_expand+0x54c>
mov    %r9,%rsi
mov    %sil,(%r10)
cmp    $0x7,%ecx
je     1ad4f <png_do_expand+0x4df>
add    $0x1,%ecx
jmp    1ad56 <png_do_expand+0x4e6>
nopl   0x0(%rax)

000000000001add0 <png_do_expand_16>:
push   %rbp
mov    %rsp,%rbp
movzbl 0x11(%rdi),%eax
cmp    $0x8,%al
je     1adde <png_do_expand_16+0xe>
leaveq 
retq   
movzbl 0x10(%rdi),%eax
cmp    $0x3,%al
jne    1ade8 <png_do_expand_16+0x18>
leaveq 
retq   
mov    0x8(%rdi),%rcx
lea    (%rcx,%rsi,1),%rax
lea    (%rsi,%rcx,2),%rcx
jmp    1ae06 <png_do_expand_16+0x36>
add    $0xffffffffffffffff,%rax
movzbl (%rax),%edx
mov    %dl,-0x1(%rcx)
add    $0xfffffffffffffffe,%rcx
mov    %dl,(%rcx)
cmp    %rcx,%rax
jb     1adf6 <png_do_expand_16+0x26>
mov    0x8(%rdi),%rax
add    %rax,%rax
mov    %rax,0x8(%rdi)
movb   $0x10,0x11(%rdi)
movzbl 0x12(%rdi),%eax
shl    $0x4,%eax
mov    %al,0x13(%rdi)
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)

000000000001ae30 <png_do_quantize>:
push   %rbp
mov    %rsp,%rbp
mov    (%rdi),%r10d
movzbl 0x11(%rdi),%eax
cmp    $0x8,%al
je     1ae41 <png_do_quantize+0x11>
leaveq 
retq   
xor    %eax,%eax
movzbl 0x10(%rdi),%r8d
cmp    $0x2,%r8b
je     1ae5c <png_do_quantize+0x2c>
cmp    $0x6,%r8b
je     1ae66 <png_do_quantize+0x36>
cmp    $0x3,%r8b
je     1ae73 <png_do_quantize+0x43>
leaveq 
retq   
test   %rdx,%rdx
je     1ae4e <png_do_quantize+0x1e>
mov    %rsi,%r8
jmp    1aeba <png_do_quantize+0x8a>
test   %rdx,%rdx
je     1ae54 <png_do_quantize+0x24>
mov    %rsi,%r8
jmpq   1af23 <png_do_quantize+0xf3>
test   %rcx,%rcx
jne    1af59 <png_do_quantize+0x129>
leaveq 
retq   
movzbl (%r8),%ecx
and    $0x1fffff8,%ecx
shl    $0x7,%ecx
movzbl 0x1(%r8),%r9d
and    $0x3ffffff8,%r9d
lea    (%rcx,%r9,4),%r9d
movzbl 0x2(%r8),%ecx
shr    $0x3,%ecx
add    %r9d,%ecx
movslq %ecx,%rcx
movzbl (%rdx,%rcx,1),%ecx
mov    %cl,(%rsi)
add    $0x1,%eax
add    $0x3,%r8
add    $0x1,%rsi
cmp    %r10d,%eax
jb     1ae7e <png_do_quantize+0x4e>
movb   $0x3,0x10(%rdi)
movb   $0x1,0x12(%rdi)
movzbl 0x11(%rdi),%eax
mov    %al,0x13(%rdi)
cmp    $0x7,%al
ja     1af60 <png_do_quantize+0x130>
imul   %r10,%rax
add    $0x7,%rax
shr    $0x3,%rax
jmpq   1af68 <png_do_quantize+0x138>
movzbl (%r8),%ecx
and    $0x1fffff8,%ecx
shl    $0x7,%ecx
movzbl 0x1(%r8),%r9d
and    $0x3ffffff8,%r9d
lea    (%rcx,%r9,4),%r9d
movzbl 0x2(%r8),%ecx
shr    $0x3,%ecx
add    %r9d,%ecx
movslq %ecx,%rcx
movzbl (%rdx,%rcx,1),%ecx
mov    %cl,(%rsi)
add    $0x1,%eax
add    $0x4,%r8
add    $0x1,%rsi
cmp    %eax,%r10d
ja     1aee7 <png_do_quantize+0xb7>
movb   $0x3,0x10(%rdi)
movb   $0x1,0x12(%rdi)
movzbl 0x11(%rdi),%eax
mov    %al,0x13(%rdi)
cmp    $0x7,%al
ja     1af6e <png_do_quantize+0x13e>
imul   %r10,%rax
add    $0x7,%rax
shr    $0x3,%rax
jmp    1af76 <png_do_quantize+0x146>
movzbl (%rsi),%edx
movzbl (%rcx,%rdx,1),%edx
mov    %dl,(%rsi)
add    $0x1,%eax
add    $0x1,%rsi
cmp    %eax,%r10d
ja     1af49 <png_do_quantize+0x119>
leaveq 
retq   
shr    $0x3,%rax
imul   %r10,%rax
mov    %rax,0x8(%rdi)
leaveq 
retq   
shr    $0x3,%rax
imul   %r10,%rax
mov    %rax,0x8(%rdi)
leaveq 
retq   
nopl   0x0(%rax)

000000000001af80 <png_get_uint_32>:
push   %rbp
mov    %rsp,%rbp
movzbl (%rdi),%eax
shl    $0x18,%eax
movzbl 0x1(%rdi),%ecx
shl    $0x10,%ecx
add    %eax,%ecx
movzbl 0x2(%rdi),%eax
shl    $0x8,%eax
add    %ecx,%eax
movzbl 0x3(%rdi),%ecx
add    %ecx,%eax
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nop

000000000001afb0 <png_get_uint_16>:
push   %rbp
mov    %rsp,%rbp
movzbl 0x1(%rdi),%ecx
movzbl (%rdi),%eax
shl    $0x8,%eax
add    %ecx,%eax
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   (%rax)

000000000001afd0 <png_get_int_32>:
push   %rbp
mov    %rsp,%rbp
movzbl (%rdi),%ecx
shl    $0x18,%ecx
movzbl 0x1(%rdi),%eax
shl    $0x10,%eax
add    %eax,%ecx
movzbl 0x2(%rdi),%eax
shl    $0x8,%eax
add    %eax,%ecx
movzbl 0x3(%rdi),%eax
add    %ecx,%eax
mov    %rax,%rcx
and    $0x80000000,%ecx
test   %ecx,%ecx
jne    1b001 <png_get_int_32+0x31>
leaveq 
retq   
neg    %eax
mov    %rax,%rcx
and    $0x80000000,%ecx
test   %ecx,%ecx
je     1b014 <png_get_int_32+0x44>
xor    %eax,%eax
leaveq 
retq   
neg    %eax
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

000000000001b020 <png_get_uint_31>:
push   %rbp
mov    %rsp,%rbp
movzbl (%rsi),%eax
shl    $0x18,%eax
movzbl 0x1(%rsi),%ecx
shl    $0x10,%ecx
add    %eax,%ecx
movzbl 0x2(%rsi),%eax
shl    $0x8,%eax
add    %eax,%ecx
movzbl 0x3(%rsi),%eax
add    %ecx,%eax
cmp    $0x7fffffff,%eax
ja     1b04b <png_get_uint_31+0x2b>
leaveq 
retq   
lea    0x135ee(%rip),%rsi        # 2e640 <chunks_to_process.34+0x83b>
callq  5470 <png_error@plt>
nopw   0x0(%rax,%rax,1)

000000000001b060 <png_read_sig>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
movzbl 0x26d(%rdi),%r8d
cmp    $0x7,%r8b
jbe    1b078 <png_read_sig+0x18>
leaveq 
retq   
movl   $0x11,0x46c(%rdi)
lea    0x2c(%rsi,%r8,1),%rax
mov    $0x8,%edx
sub    %r8,%rdx
mov    %rdi,%rcx
mov    %rdx,%r9
mov    %r12,-0x8(%rbp)
mov    %r13,-0x10(%rbp)
mov    %r14,-0x18(%rbp)
mov    %r15,-0x20(%rbp)
mov    %rdi,%r12
mov    %rcx,%rdi
mov    %r8,%r13
mov    %rsi,%r14
mov    %rax,%rsi
mov    %rdx,%r15
mov    %r9,%rdx
callq  14820 <png_read_data>
movb   $0x8,0x26d(%r12)
add    $0x2c,%r14
mov    %r15,%rdx
mov    %r14,%rdi
mov    %r13,%rsi
callq  57d0 <png_sig_cmp@plt>
test   %eax,%eax
jne    1b0f6 <png_read_sig+0x96>
cmp    $0x2,%r13b
jbe    1b10b <png_read_sig+0xab>
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
leaveq 
retq   
cmp    $0x3,%r13b
jbe    1b132 <png_read_sig+0xd2>
mov    %r12,%rdi
lea    0x1356b(%rip),%rsi        # 2e671 <chunks_to_process.34+0x86c>
callq  5470 <png_error@plt>
mov    0x12c(%r12),%eax
or     $0x1000,%eax
mov    %eax,0x12c(%r12)
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
leaveq 
retq   
mov    $0x4,%edx
sub    %r13,%rdx
mov    %r13,%rsi
mov    %r14,%rdi
callq  57d0 <png_sig_cmp@plt>
test   %eax,%eax
je     1b0fc <png_read_sig+0x9c>
mov    %r12,%rdi
lea    0x1350f(%rip),%rsi        # 2e662 <chunks_to_process.34+0x85d>
callq  5470 <png_error@plt>
nopl   0x0(%rax,%rax,1)

000000000001b160 <png_read_chunk_header>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %r15,-0x10(%rbp)
mov    %r14,-0x8(%rbp)
movl   $0x21,0x46c(%rdi)
lea    -0x18(%rbp),%rsi
mov    $0x8,%edx
mov    %rdi,%r14
callq  14820 <png_read_data>
mov    %r14,%rdi
lea    -0x18(%rbp),%rsi
callq  5730 <png_get_uint_31@plt>
movzbl -0x14(%rbp),%ecx
shl    $0x18,%ecx
movzbl -0x13(%rbp),%edx
shl    $0x10,%edx
add    %ecx,%edx
movzbl -0x12(%rbp),%ecx
shl    $0x8,%ecx
add    %ecx,%edx
movzbl -0x11(%rbp),%ecx
add    %edx,%ecx
mov    %ecx,0x218(%r14)
mov    %rax,%r15
mov    %r14,%rdi
callq  6d80 <png_reset_crc>
lea    -0x14(%rbp),%rsi
mov    $0x4,%edx
mov    %r14,%rdi
callq  6db0 <png_calculate_crc>
mov    0x218(%r14),%esi
mov    %r14,%rdi
callq  1fcc0 <png_check_chunk_name>
mov    %r14,%rdi
mov    %r15,%rsi
callq  1fd00 <png_check_chunk_length>
movl   $0x41,0x46c(%r14)
mov    %r15,%rax
mov    -0x8(%rbp),%r14
mov    -0x10(%rbp),%r15
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

000000000001b210 <png_crc_read>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
test   %rdi,%rdi
jne    1b21f <png_crc_read+0xf>
leaveq 
retq   
mov    %edx,%edx
mov    %rdi,%r8
mov    %rsi,%rcx
mov    %rdx,%rax
mov    %r13,-0x8(%rbp)
mov    %r14,-0x10(%rbp)
mov    %r15,-0x18(%rbp)
mov    %rdx,%r13
mov    %rax,%rdx
mov    %rsi,%r14
mov    %rcx,%rsi
mov    %rdi,%r15
mov    %r8,%rdi
callq  14820 <png_read_data>
mov    %r13,%rdx
mov    %r14,%rsi
mov    %r15,%rdi
callq  6db0 <png_calculate_crc>
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
leaveq 
retq   
nopl   0x0(%rax)

000000000001b270 <png_crc_finish>:
push   %rbp
mov    %rsp,%rbp
sub    $0x430,%rsp
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rsi,%rbx
mov    %rdi,%r12
lea    -0x428(%rbp),%r13
mov    $0x400,%r14d
jmp    1b2b8 <png_crc_finish+0x48>
mov    %rbx,%r15
mov    %r12,%rdi
mov    %r13,%rsi
mov    %r15,%rdx
callq  1b210 <png_crc_read>
sub    %r15d,%ebx
test   %ebx,%ebx
jne    1b2e3 <png_crc_finish+0x73>
xor    %ebx,%ebx
mov    %r12,%rdi
callq  1b370 <png_crc_error>
test   %eax,%eax
jne    1b2f0 <png_crc_finish+0x80>
mov    %rbx,%rax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
cmp    $0x3ff,%ebx
jbe    1b2a4 <png_crc_finish+0x34>
mov    %r14,%r15
jmp    1b2a7 <png_crc_finish+0x37>
mov    $0x1,%r13d
mov    0x218(%r12),%ecx
and    $0x20000000,%ecx
test   %ecx,%ecx
jne    1b31e <png_crc_finish+0xae>
mov    0x130(%r12),%eax
and    $0x400,%eax
test   %eax,%eax
je     1b332 <png_crc_finish+0xc2>
mov    %r13,%rbx
jmp    1b332 <png_crc_finish+0xc2>
mov    0x130(%r12),%eax
and    $0x200,%eax
test   %eax,%eax
jne    1b332 <png_crc_finish+0xc2>
mov    %r13,%rbx
lea    0x1335f(%rip),%rsi        # 2e698 <chunks_to_process.34+0x893>
test   %ebx,%ebx
jg     1b345 <png_crc_finish+0xd5>
mov    %r12,%rdi
callq  5060 <png_chunk_error@plt>
mov    %r12,%rdi
callq  56a0 <png_chunk_warning@plt>
mov    %r13,%rax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)

000000000001b370 <png_crc_error>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %r15,-0x10(%rbp)
mov    %rdi,-0x8(%rbp)
mov    $0x1,%ecx
xor    %r15d,%r15d
mov    0x218(%rdi),%eax
and    $0x20000000,%eax
test   %eax,%eax
jne    1b3ce <png_crc_error+0x5e>
mov    0x130(%rdi),%eax
and    $0x800,%eax
test   %eax,%eax
jne    1b3a9 <png_crc_error+0x39>
mov    %rcx,%r15
movl   $0x81,0x46c(%rdi)
lea    -0x14(%rbp),%rsi
mov    $0x4,%edx
callq  14820 <png_read_data>
test   %r15d,%r15d
jg     1b3e5 <png_crc_error+0x75>
xor    %eax,%eax
mov    -0x10(%rbp),%r15
leaveq 
retq   
mov    0x130(%rdi),%eax
and    $0x300,%eax
cmp    $0x300,%eax
je     1b3a9 <png_crc_error+0x39>
mov    %rcx,%r15
jmp    1b3a9 <png_crc_error+0x39>
movzbl -0x14(%rbp),%ecx
shl    $0x18,%ecx
movzbl -0x13(%rbp),%eax
shl    $0x10,%eax
add    %eax,%ecx
movzbl -0x12(%rbp),%eax
shl    $0x8,%eax
add    %ecx,%eax
movzbl -0x11(%rbp),%ecx
add    %ecx,%eax
mov    -0x8(%rbp),%rcx
mov    0x24c(%rcx),%ecx
cmp    %eax,%ecx
je     1b41d <png_crc_error+0xad>
mov    $0x1,%eax
mov    -0x10(%rbp),%r15
leaveq 
retq   
xor    %eax,%eax
mov    -0x10(%rbp),%r15
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)

000000000001b430 <png_combine_row>:
push   %rbp
mov    %rsp,%rbp
sub    $0x50,%rsp
movzbl 0x265(%rdi),%r10d
mov    0x228(%rdi),%r11
mov    0x1f8(%rdi),%r8d
movzbl 0x26f(%rdi),%r9d
test   %r9b,%r9b
je     1b4bd <png_combine_row+0x8d>
mov    0x240(%rdi),%rcx
test   %rcx,%rcx
jne    1b4c9 <png_combine_row+0x99>
test   %r8d,%r8d
je     1b4e7 <png_combine_row+0xb7>
xor    %eax,%eax
mov    %rax,-0x18(%rbp)
mov    %r8,%rax
imul   %r9,%rax
mov    %rax,%rcx
and    $0x7,%ecx
test   %ecx,%ecx
jne    1b4f3 <png_combine_row+0xc3>
mov    %r15,%rcx
xor    %r15d,%r15d
pushq  -0x18(%rbp)
popq   -0x20(%rbp)
mov    %r11,-0x30(%rbp)
add    $0x1,%r11
mov    %rcx,-0x48(%rbp)
movzbl 0x264(%rdi),%ecx
test   %cl,%cl
jne    1b50e <png_combine_row+0xde>
cmp    $0x7,%r9b
ja     1b563 <png_combine_row+0x133>
lea    0x7(%rax),%r8
shr    $0x3,%r8
jmpq   1b56b <png_combine_row+0x13b>
lea    0x131de(%rip),%rsi        # 2e6a2 <chunks_to_process.34+0x89d>
callq  5470 <png_error@plt>
cmp    $0x7,%r9b
ja     1b590 <png_combine_row+0x160>
mov    %r9,%rax
imul   %r8,%rax
add    $0x7,%rax
shr    $0x3,%rax
jmpq   1b59b <png_combine_row+0x16b>
lea    0x131f1(%rip),%rsi        # 2e6df <chunks_to_process.34+0x8da>
callq  5470 <png_error@plt>
cmp    $0x7,%r9b
ja     1b5b0 <png_combine_row+0x180>
mov    %r15,-0x48(%rbp)
lea    0x7(%rax),%r15
shr    $0x3,%r15
jmpq   1b5bf <png_combine_row+0x18f>
mov    0x134(%rdi),%ecx
and    $0x2,%ecx
test   %ecx,%ecx
je     1b4a6 <png_combine_row+0x76>
cmp    $0x5,%r10b
ja     1b4a6 <png_combine_row+0x76>
test   %edx,%edx
je     1b53c <png_combine_row+0x10c>
cmp    $0x1,%edx
jne    1b4a6 <png_combine_row+0x76>
mov    %r10,%rcx
and    $0x1,%ecx
test   %ecx,%ecx
je     1b4a6 <png_combine_row+0x76>
mov    $0x3,%ecx
lea    0x1(%r10),%eax
shr    %eax
sub    %eax,%ecx
mov    %r10,%rax
and    $0x1,%eax
shl    %cl,%eax
and    $0x7,%eax
cmp    %eax,%r8d
ja     1b609 <png_combine_row+0x1d9>
mov    -0x48(%rbp),%r15
leaveq 
retq   
shr    $0x3,%r9
imul   %r9,%r8
mov    %r8,%rdx
mov    %rsi,%rdi
mov    %r11,%rsi
callq  54c0 <memcpy@plt>
mov    -0x18(%rbp),%rax
mov    -0x20(%rbp),%rcx
test   %r15,%r15
jne    1b67e <png_combine_row+0x24e>
mov    -0x48(%rbp),%r15
leaveq 
retq   
mov    %r9,%rax
shr    $0x3,%rax
imul   %r8,%rax
cmp    %rax,%rcx
je     1b467 <png_combine_row+0x37>
lea    0x13110(%rip),%rsi        # 2e6bb <chunks_to_process.34+0x8b6>
callq  5470 <png_error@plt>
mov    %r15,-0x48(%rbp)
mov    %r9,%r15
shr    $0x3,%r15
imul   %r8,%r15
lea    -0x1(%r15,%rsi,1),%r15
mov    %r14,-0x40(%rbp)
movzbl (%r15),%r14d
mov    %r13,-0x38(%rbp)
mov    %r14,-0x18(%rbp)
mov    0x134(%rdi),%r13d
and    $0x10000,%r13d
test   %r13d,%r13d
jne    1b697 <png_combine_row+0x267>
mov    $0xff,%r13d
shr    %cl,%r13d
mov    %r13,-0x20(%rbp)
mov    -0x38(%rbp),%r13
mov    -0x40(%rbp),%r14
mov    -0x48(%rbp),%rcx
jmpq   1b48f <png_combine_row+0x5f>
cmp    $0x7,%r9b
jbe    1b6b5 <png_combine_row+0x285>
mov    %r9,%rcx
and    $0x7,%ecx
test   %ecx,%ecx
jne    1b734 <png_combine_row+0x304>
shr    $0x3,%r9d
mov    %r9d,%ecx
imul   %rcx,%r8
imul   %r9d,%eax
mov    %eax,%ecx
sub    %rcx,%r8
test   %edx,%edx
jne    1b740 <png_combine_row+0x310>
mov    %r9,%rdx
mov    $0x7,%ecx
sub    %r10d,%ecx
shr    %ecx
shl    %cl,%r9d
mov    %eax,%eax
mov    -0x30(%rbp),%rcx
lea    0x1(%rax,%rcx,1),%r15
add    %rsi,%rax
cmp    $0x1,%edx
jbe    1b762 <png_combine_row+0x332>
cmp    $0x2,%edx
je     1b76f <png_combine_row+0x33f>
cmp    $0x3,%edx
jne    1b777 <png_combine_row+0x347>
mov    %r9d,%ecx
jmpq   1b7a4 <png_combine_row+0x374>
mov    %rcx,%rdx
not    %edx
movzbl (%r15),%esi
and    %sil,%dl
and    %cl,%al
or     %al,%dl
mov    %dl,(%r15)
mov    -0x48(%rbp),%r15
leaveq 
retq   
mov    $0xff,%r13d
shl    %cl,%r13d
mov    %r13,-0x20(%rbp)
mov    -0x38(%rbp),%r13
mov    -0x40(%rbp),%r14
mov    -0x48(%rbp),%rcx
jmpq   1b48f <png_combine_row+0x5f>
mov    %rbx,%rcx
mov    %rdx,%rbx
mov    $0x8,%eax
xor    %edx,%edx
div    %r9d
mov    %eax,%edx
lea    0x130ba(%rip),%rax        # 2e788 <display_mask.9>
mov    %r14,-0x40(%rbp)
lea    0x1301f(%rip),%r14        # 2e6f8 <row_mask.8>
mov    %r13,-0x38(%rbp)
mov    $0xc,%r13d
mov    %r12,-0x30(%rbp)
mov    $0x18,%r12d
mov    %rcx,-0x28(%rbp)
mov    $0x30,%ecx
mov    0x134(%rdi),%edi
and    $0x10000,%edi
test   %edi,%edi
jne    1b7c5 <png_combine_row+0x395>
test   %ebx,%ebx
jne    1b7eb <png_combine_row+0x3bb>
cmp    $0x1,%r9b
jne    1b810 <png_combine_row+0x3e0>
xor    %ecx,%ecx
lea    (%rcx,%r10,4),%rax
mov    0x48(%rax,%r14,1),%edi
mov    -0x18(%rbp),%rax
mov    -0x20(%rbp),%rcx
jmpq   1b838 <png_combine_row+0x408>
lea    0x13095(%rip),%rsi        # 2e7d0 <display_mask.9+0x48>
callq  5470 <png_error@plt>
mov    $0x6,%ecx
sub    %r10d,%ecx
shr    %ecx
mov    %r9,%rdx
shl    %cl,%edx
mov    %edx,%ecx
cmp    %r8,%rcx
jbe    1b640 <png_combine_row+0x210>
mov    %r8,%rdx
jmpq   1b640 <png_combine_row+0x210>
cmp    $0x1,%edx
jne    1b777 <png_combine_row+0x347>
mov    %r9d,%ecx
jmpq   1b877 <png_combine_row+0x447>
mov    %r9d,%ecx
jmpq   1b89b <png_combine_row+0x46b>
mov    %r9d,%r10d
cmp    $0xf,%edx
jbe    1b8b4 <png_combine_row+0x484>
mov    %r14,-0x20(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r12,-0x10(%rbp)
mov    %rbx,-0x8(%rbp)
mov    %r10,%rbx
jmpq   1b8da <png_combine_row+0x4aa>
sub    %rcx,%r8
add    %rcx,%r15
add    %rcx,%rax
movzbl (%r15),%edx
mov    %dl,(%rax)
movzbl 0x1(%r15),%edx
mov    %dl,0x1(%rax)
movzbl 0x2(%r15),%edx
mov    %dl,0x2(%rax)
cmp    %r8,%rcx
jb     1b79b <png_combine_row+0x36b>
mov    -0x48(%rbp),%r15
leaveq 
retq   
test   %ebx,%ebx
jne    1b914 <png_combine_row+0x4e4>
cmp    $0x1,%r9b
jne    1b93b <png_combine_row+0x50b>
xor    %ecx,%ecx
lea    (%rcx,%r10,4),%rax
mov    (%rax,%r14,1),%edi
mov    -0x18(%rbp),%rax
mov    -0x20(%rbp),%rcx
jmp    1b838 <png_combine_row+0x408>
cmp    $0x1,%r9b
jne    1b94d <png_combine_row+0x51d>
xor    %r12d,%r12d
shr    %r10d
mov    %r10d,%ecx
lea    (%r12,%rcx,4),%rcx
mov    0x24(%rcx,%rax,1),%edi
mov    -0x18(%rbp),%rax
mov    -0x20(%rbp),%rcx
jmp    1b838 <png_combine_row+0x408>
cmp    $0x2,%r9b
jne    1b71e <png_combine_row+0x2ee>
mov    %r12,%rcx
jmpq   1b71e <png_combine_row+0x2ee>
sub    %rdx,%r8
add    $0x1,%r11
mov    %rdi,%rbx
shr    $0x8,%ebx
shl    $0x18,%edi
add    %ebx,%edi
add    $0x1,%rsi
movzbl %dil,%r9d
test   %r9d,%r9d
je     1b854 <png_combine_row+0x424>
cmp    $0xfe,%r9d
jbe    1b95f <png_combine_row+0x52f>
movzbl (%r11),%ebx
mov    %bl,(%rsi)
cmp    %r8,%rdx
jb     1b822 <png_combine_row+0x3f2>
mov    -0x28(%rbp),%rbx
mov    -0x30(%rbp),%r12
mov    -0x38(%rbp),%r13
mov    -0x40(%rbp),%r14
jmpq   1b581 <png_combine_row+0x151>
sub    %rcx,%r8
add    %rcx,%r15
add    %rcx,%rax
movzbl (%r15),%edx
mov    %dl,(%rax)
cmp    %r8,%rcx
jb     1b86e <png_combine_row+0x43e>
mov    -0x48(%rbp),%r15
leaveq 
retq   
add    %rcx,%r15
add    %rcx,%rax
sub    %rcx,%r8
cmp    $0x1,%r8
jbe    1b97a <png_combine_row+0x54a>
movzbl (%r15),%edx
mov    %dl,(%rax)
movzbl 0x1(%r15),%edx
mov    %dl,0x1(%rax)
cmp    %r8,%rcx
jb     1b888 <png_combine_row+0x458>
mov    -0x48(%rbp),%r15
leaveq 
retq   
movzwl %ax,%ecx
and    $0x1,%ecx
test   %ecx,%ecx
je     1b986 <png_combine_row+0x556>
mov    %r14,-0x20(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r12,-0x10(%rbp)
mov    %rbx,-0x8(%rbp)
mov    %r10,%rbx
jmp    1b8da <png_combine_row+0x4aa>
mov    %r8,%rdx
mov    %rdx,-0x28(%rbp)
mov    %edx,%r12d
mov    %r8,%r13
mov    %rax,%r14
mov    %r14,%rdi
mov    %r15,%rsi
mov    %r12,%rdx
callq  54c0 <memcpy@plt>
cmp    %r13,%rbx
jb     1b9a9 <png_combine_row+0x579>
mov    -0x8(%rbp),%rbx
mov    -0x10(%rbp),%r12
mov    -0x18(%rbp),%r13
mov    -0x20(%rbp),%r14
mov    -0x48(%rbp),%r15
leaveq 
retq   
cmp    $0x1,%r9b
jne    1b9c8 <png_combine_row+0x598>
xor    %r12d,%r12d
shr    %r10d
mov    %r10d,%ecx
lea    (%r12,%rcx,4),%rcx
mov    (%rcx,%rax,1),%edi
mov    -0x18(%rbp),%rax
mov    -0x20(%rbp),%rcx
jmpq   1b838 <png_combine_row+0x408>
cmp    $0x2,%r9b
jne    1b7d9 <png_combine_row+0x3a9>
mov    %r12,%rcx
jmpq   1b7d9 <png_combine_row+0x3a9>
cmp    $0x2,%r9b
jne    1b7f8 <png_combine_row+0x3c8>
mov    %r13,%r12
jmpq   1b7f8 <png_combine_row+0x3c8>
movzbl (%r11),%ebx
and    %r9b,%bl
not    %r9d
movzbl (%rsi),%r10d
and    %r10b,%r9b
or     %r9b,%bl
mov    %bl,(%rsi)
jmpq   1b854 <png_combine_row+0x424>
movzbl (%r15),%ecx
mov    %cl,(%rax)
mov    -0x48(%rbp),%r15
leaveq 
retq   
movzwl %r15w,%ecx
and    $0x1,%ecx
test   %ecx,%ecx
je     1b9da <png_combine_row+0x5aa>
mov    %r14,-0x20(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r12,-0x10(%rbp)
mov    %rbx,-0x8(%rbp)
mov    %r10,%rbx
jmpq   1b8da <png_combine_row+0x4aa>
lea    (%rbx,%r14,1),%rax
add    %rbx,%r15
mov    %r13,%r8
sub    %rbx,%r8
cmp    %r12,%r8
jb     1b8d7 <png_combine_row+0x4a7>
mov    -0x28(%rbp),%rdx
jmpq   1b8da <png_combine_row+0x4aa>
cmp    $0x2,%r9b
jne    1b921 <png_combine_row+0x4f1>
mov    %r13,%r12
jmpq   1b921 <png_combine_row+0x4f1>
mov    %edx,%esi
mov    %rsi,%rcx
and    $0x1,%rcx
test   %rcx,%rcx
je     1ba00 <png_combine_row+0x5d0>
mov    %r14,-0x20(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r12,-0x10(%rbp)
mov    %rbx,-0x8(%rbp)
mov    %r10,%rbx
jmpq   1b8da <png_combine_row+0x4aa>
mov    %r10,%rcx
and    $0x1,%rcx
test   %rcx,%rcx
je     1ba24 <png_combine_row+0x5f4>
mov    %r14,-0x20(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r12,-0x10(%rbp)
mov    %rbx,-0x8(%rbp)
mov    %r10,%rbx
jmpq   1b8da <png_combine_row+0x4aa>
mov    %rax,%rcx
and    $0x3,%ecx
test   %ecx,%ecx
je     1ba3d <png_combine_row+0x60d>
sub    %edx,%r9d
mov    %r9d,%edx
and    $0xfffffffffffffffe,%rdx
mov    %rsi,%rcx
jmp    1ba76 <png_combine_row+0x646>
mov    %r15,%rcx
and    $0x3,%ecx
test   %ecx,%ecx
jne    1ba2e <png_combine_row+0x5fe>
mov    %rsi,%rcx
and    $0x3,%rcx
test   %rcx,%rcx
jne    1ba2e <png_combine_row+0x5fe>
mov    %r10,%rcx
and    $0x3,%rcx
test   %rcx,%rcx
jne    1ba2e <png_combine_row+0x5fe>
sub    %edx,%r9d
mov    %r9d,%ecx
and    $0xfffffffffffffffc,%rcx
mov    %rsi,%rdx
jmp    1ba99 <png_combine_row+0x669>
add    $0x2,%r15
add    $0x2,%rax
movzwl (%r15),%edi
mov    %di,(%rax)
add    $0xfffffffffffffffe,%rcx
test   %rcx,%rcx
jne    1ba6e <png_combine_row+0x63e>
cmp    %r8,%r10
jb     1bab2 <png_combine_row+0x682>
mov    -0x48(%rbp),%r15
leaveq 
retq   
add    $0x4,%r15
add    $0x4,%rax
mov    (%r15),%edi
mov    %edi,(%rax)
add    $0xfffffffffffffffc,%rdx
test   %rdx,%rdx
jne    1ba91 <png_combine_row+0x661>
cmp    %r8,%r10
jb     1bac9 <png_combine_row+0x699>
mov    -0x48(%rbp),%r15
leaveq 
retq   
lea    0x2(%r15,%rdx,1),%r15
lea    0x2(%rax,%rdx,1),%rax
sub    %r10,%r8
cmp    %rsi,%r8
jb     1bae8 <png_combine_row+0x6b8>
mov    %rsi,%rcx
jmp    1ba76 <png_combine_row+0x646>
lea    0x4(%r15,%rcx,1),%r15
lea    0x4(%rax,%rcx,1),%rax
sub    %r10,%r8
cmp    %rsi,%r8
jb     1bb05 <png_combine_row+0x6d5>
mov    %rsi,%rdx
jmp    1ba99 <png_combine_row+0x669>
add    $0x1,%r15
add    $0x1,%rax
movzbl (%r15),%ecx
mov    %cl,(%rax)
add    $0xffffffffffffffff,%r8
test   %r8,%r8
jne    1bae0 <png_combine_row+0x6b0>
mov    -0x48(%rbp),%r15
leaveq 
retq   
add    $0x1,%r15
add    $0x1,%rax
movzbl (%r15),%ecx
mov    %cl,(%rax)
add    $0xffffffffffffffff,%r8
test   %r8,%r8
jne    1bafd <png_combine_row+0x6cd>
mov    -0x48(%rbp),%r15
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

000000000001bb20 <png_do_read_interlace>:
push   %rbp
mov    %rsp,%rbp
sub    $0x60,%rsp
test   %rsi,%rsi
jne    1bb2f <png_do_read_interlace+0xf>
leaveq 
retq   
test   %rdi,%rdi
jne    1bb36 <png_do_read_interlace+0x16>
leaveq 
retq   
lea    0x12cb7(%rip),%r8        # 2e7f4 <png_pass_inc.11>
movslq %edx,%rax
mov    (%r8,%rax,4),%r8d
mov    (%rdi),%edx
mov    %r8,%r11
imul   %edx,%r11d
mov    %r11,-0x8(%rbp)
xor    %eax,%eax
movzbl 0x13(%rdi),%r9d
cmp    $0x1,%r9b
jbe    1bbf0 <png_do_read_interlace+0xd0>
cmp    $0x2,%r9b
je     1bc43 <png_do_read_interlace+0x123>
cmp    $0x4,%r9b
jne    1bbfa <png_do_read_interlace+0xda>
mov    $0xf0f,%r9d
mov    $0x4,%r10d
mov    %r15,-0x30(%rbp)
lea    -0x1(%rdx),%r15d
shr    %r15d
mov    %r15d,%r15d
add    %rsi,%r15
mov    %r14,-0x28(%rbp)
lea    -0x1(%r11),%r14d
shr    %r14d
mov    %r14d,%r14d
add    %r14,%rsi
and    $0x10000,%ecx
test   %ecx,%ecx
jne    1bcb9 <png_do_read_interlace+0x199>
mov    $0xfffffffe,%ecx
mov    %rcx,%r14
sub    %edx,%r14d
and    $0x1,%r14d
neg    %r14d
and    $0x4,%r14d
sub    %r11d,%ecx
and    $0x1,%ecx
neg    %ecx
and    $0x4,%ecx
mov    %rbx,-0x10(%rbp)
mov    %r12,-0x18(%rbp)
mov    %r13,-0x20(%rbp)
mov    %rax,%r12
mov    %r12,%r13
mov    %r10,%rbx
mov    %rbx,%r11
jmpq   1bd07 <png_do_read_interlace+0x1e7>
cmp    $0x1,%r9b
je     1bd32 <png_do_read_interlace+0x212>
lea    -0x60(%rbp),%r10
shr    $0x3,%r9d
movslq %r9d,%r9
lea    -0x1(%rdx),%ecx
mov    %ecx,%ecx
imul   %r9,%rcx
add    %rsi,%rcx
lea    -0x1(%r11),%edx
mov    %edx,%edx
imul   %r9,%rdx
add    %rsi,%rdx
mov    %r15,-0x30(%rbp)
mov    %r14,-0x28(%rbp)
mov    %rbx,-0x10(%rbp)
mov    %r12,-0x18(%rbp)
mov    %r13,-0x20(%rbp)
mov    %rdx,%rbx
mov    %r10,%r12
mov    %r9,%r13
mov    %rax,%r9
jmpq   1bdda <png_do_read_interlace+0x2ba>
mov    $0x3f3f,%r9d
mov    $0x6,%r10d
mov    %r15,-0x30(%rbp)
lea    -0x1(%rdx),%r15d
shr    $0x2,%r15d
mov    %r15d,%r15d
add    %rsi,%r15
mov    %r14,-0x28(%rbp)
lea    -0x1(%r11),%r14d
shr    $0x2,%r14d
mov    %r14d,%r14d
add    %r14,%rsi
and    $0x10000,%ecx
test   %ecx,%ecx
jne    1be0d <png_do_read_interlace+0x2ed>
mov    $0xfffffffc,%ecx
neg    %edx
add    %ecx,%edx
and    $0x3,%edx
lea    (%rdx,%rdx,1),%r14d
sub    %r11d,%ecx
and    $0x3,%ecx
add    %ecx,%ecx
mov    $0x2,%r11d
mov    %rbx,-0x10(%rbp)
mov    %r12,-0x18(%rbp)
mov    %r13,-0x20(%rbp)
mov    %rax,%rbx
mov    %rbx,%r13
mov    %r10,%r12
jmpq   1be53 <png_do_read_interlace+0x333>
lea    0x1(%rdx),%r14d
and    $0x1,%r14d
neg    %r14d
and    $0x4,%r14d
lea    0x1(%r11),%ecx
and    $0x1,%ecx
neg    %ecx
and    $0x4,%ecx
mov    $0xfffffffffffffffc,%r11
mov    %rbx,-0x10(%rbp)
mov    %r12,-0x18(%rbp)
mov    %r13,-0x20(%rbp)
mov    %rax,%rbx
mov    %rbx,%r13
mov    %r10,%r12
jmp    1bd07 <png_do_read_interlace+0x1e7>
mov    -0x50(%rbp),%rax
lea    -0x1(%rax),%r15
mov    %r12,%r14
mov    -0x58(%rbp),%rax
lea    0x1(%rax),%r13d
xor    %eax,%eax
mov    (%rdi),%edx
cmp    %r13d,%edx
jbe    1be7a <png_do_read_interlace+0x35a>
xchg   %rcx,%r14
movzbl (%r15),%edx
shr    %cl,%edx
mov    %rcx,-0x48(%rbp)
and    $0xf,%dl
mov    %r15,-0x50(%rbp)
mov    %r13,-0x58(%rbp)
mov    %r14,%rcx
jmpq   1bea9 <png_do_read_interlace+0x389>
mov    $0x7f7f,%r9d
mov    $0x7,%r10d
mov    %r15,-0x30(%rbp)
lea    -0x1(%rdx),%r15d
shr    $0x3,%r15d
mov    %r15d,%r15d
add    %rsi,%r15
mov    %r14,-0x28(%rbp)
lea    -0x1(%r11),%r14d
shr    $0x3,%r14d
mov    %r14d,%r14d
add    %r14,%rsi
and    $0x10000,%ecx
test   %ecx,%ecx
jne    1becb <png_do_read_interlace+0x3ab>
mov    $0xfffffff8,%ecx
mov    %rcx,%r14
sub    %edx,%r14d
and    $0x7,%r14d
sub    %r11d,%ecx
and    $0x7,%ecx
mov    $0x1,%r11d
mov    %rbx,-0x10(%rbp)
mov    %r12,-0x18(%rbp)
mov    %r13,-0x20(%rbp)
mov    %rax,%r12
mov    %r12,%r13
mov    %r10,%rbx
jmpq   1bf0d <png_do_read_interlace+0x3ed>
mov    %r8,%r15
mov    %rbx,%rdi
mov    %r12,%rsi
mov    %r13,%rdx
callq  54c0 <memcpy@plt>
sub    %r13,%rbx
add    $0x1,%r14d
mov    %r15,%r8
cmp    %r14d,%r8d
jg     1bda5 <png_do_read_interlace+0x285>
mov    -0x50(%rbp),%rcx
sub    %r13,%rcx
mov    -0x58(%rbp),%rax
lea    0x1(%rax),%r9d
xor    %eax,%eax
mov    -0x48(%rbp),%rdi
mov    (%rdi),%edx
cmp    %r9d,%edx
jbe    1be7a <png_do_read_interlace+0x35a>
mov    %r12,%r10
mov    %rcx,%rsi
mov    %r13,%rdx
mov    %rcx,-0x50(%rbp)
mov    %r9,-0x58(%rbp)
mov    %rdi,-0x48(%rbp)
mov    %r10,%rdi
mov    %rax,%r14
mov    %r8,%r15
callq  54c0 <memcpy@plt>
mov    %r15,%r8
jmp    1bdc0 <png_do_read_interlace+0x2a0>
lea    0x3(%rdx),%ecx
and    $0x3,%ecx
lea    (%rcx,%rcx,1),%r14d
lea    0x3(%r11),%ecx
and    $0x3,%ecx
add    %ecx,%ecx
mov    $0xfffffffffffffffe,%r11
mov    %rbx,-0x10(%rbp)
mov    %r12,-0x18(%rbp)
mov    %r13,-0x20(%rbp)
mov    %rax,%r12
mov    %r12,%r13
mov    %r10,%rbx
jmp    1be53 <png_do_read_interlace+0x333>
mov    -0x40(%rbp),%rax
lea    -0x1(%rax),%r15
mov    %rbx,%r14
mov    -0x58(%rbp),%rax
lea    0x1(%rax),%r13d
xor    %eax,%eax
mov    (%rdi),%edx
cmp    %r13d,%edx
jbe    1be7a <png_do_read_interlace+0x35a>
xchg   %rcx,%r14
movzbl (%r15),%edx
shr    %cl,%edx
mov    %rcx,-0x38(%rbp)
and    $0x3,%dl
mov    %r15,-0x40(%rbp)
mov    %r13,-0x58(%rbp)
mov    %r14,%rcx
jmpq   1bf42 <png_do_read_interlace+0x422>
mov    -0x8(%rbp),%rcx
mov    %ecx,(%rdi)
movzbl 0x13(%rdi),%eax
cmp    $0x7,%al
ja     1bf65 <png_do_read_interlace+0x445>
mov    %ecx,%ecx
imul   %rcx,%rax
add    $0x7,%rax
shr    $0x3,%rax
jmpq   1bf6f <png_do_read_interlace+0x44f>
add    $0xffffffffffffffff,%rsi
mov    %r12,%rcx
add    $0x1,%eax
cmp    %eax,%r8d
jg     1bf89 <png_do_read_interlace+0x469>
mov    -0x48(%rbp),%rax
cmp    %eax,%ebx
je     1bcf2 <png_do_read_interlace+0x1d2>
lea    (%rax,%r11,1),%r14d
mov    -0x50(%rbp),%r15
jmpq   1bcfd <png_do_read_interlace+0x1dd>
lea    0x7(%rdx),%r14d
and    $0x7,%r14d
lea    0x7(%r11),%ecx
and    $0x7,%ecx
mov    $0xffffffffffffffff,%r11
mov    %rbx,-0x10(%rbp)
mov    %r12,-0x18(%rbp)
mov    %r13,-0x20(%rbp)
mov    %rax,%rbx
mov    %rbx,%r13
mov    %r10,%r12
jmp    1bf0d <png_do_read_interlace+0x3ed>
mov    -0x40(%rbp),%rax
lea    -0x1(%rax),%r15
mov    %r12,%r14
mov    -0x58(%rbp),%rax
lea    0x1(%rax),%r13d
xor    %eax,%eax
mov    (%rdi),%edx
cmp    %r13d,%edx
jbe    1be7a <png_do_read_interlace+0x35a>
xchg   %rcx,%r14
movzbl (%r15),%edx
shr    %cl,%edx
mov    %rcx,-0x38(%rbp)
and    $0x1,%dl
mov    %r15,-0x40(%rbp)
mov    %r13,-0x58(%rbp)
mov    %r14,%rcx
jmpq   1bfc6 <png_do_read_interlace+0x4a6>
add    $0xffffffffffffffff,%rsi
mov    %rbx,%rcx
add    $0x1,%eax
cmp    %eax,%r8d
jg     1bfe4 <png_do_read_interlace+0x4c4>
mov    -0x38(%rbp),%rax
cmp    %eax,%r12d
je     1be3e <png_do_read_interlace+0x31e>
lea    (%rax,%r11,1),%r14d
mov    -0x40(%rbp),%r15
jmpq   1be49 <png_do_read_interlace+0x329>
shr    $0x3,%rax
mov    %ecx,%ecx
imul   %rcx,%rax
mov    %rax,0x8(%rdi)
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
mov    -0x10(%rbp),%rbx
mov    -0x28(%rbp),%r14
mov    -0x30(%rbp),%r15
leaveq 
retq   
mov    %rdx,%r14
shl    %cl,%r14d
mov    %rcx,%r15
mov    %r10,%rcx
sub    %r15d,%ecx
mov    %r9,%r13
shr    %cl,%r13d
movzbl (%rsi),%ecx
and    %cl,%r13b
or     %r13b,%r14b
mov    %r14b,(%rsi)
cmp    %r15d,%ebx
je     1be9f <png_do_read_interlace+0x37f>
lea    (%r15,%r11,1),%ecx
jmpq   1bea6 <png_do_read_interlace+0x386>
add    $0xffffffffffffffff,%rsi
mov    %r12,%rcx
add    $0x1,%eax
cmp    %eax,%r8d
jg     1c017 <png_do_read_interlace+0x4f7>
mov    -0x38(%rbp),%rax
cmp    %eax,%ebx
je     1bef8 <png_do_read_interlace+0x3d8>
lea    (%rax,%r11,1),%r14d
mov    -0x40(%rbp),%r15
jmpq   1bf03 <png_do_read_interlace+0x3e3>
mov    %rdx,%r13
shl    %cl,%r13d
mov    %rcx,%r15
mov    %r10,%rcx
sub    %r15d,%ecx
mov    %r9,%r14
shr    %cl,%r14d
movzbl (%rsi),%ecx
and    %cl,%r14b
or     %r14b,%r13b
mov    %r13b,(%rsi)
cmp    %r15d,%r12d
je     1bf38 <png_do_read_interlace+0x418>
lea    (%r15,%r11,1),%ecx
jmpq   1bf3f <png_do_read_interlace+0x41f>
mov    %rdx,%r13
shl    %cl,%r13d
mov    %rcx,%r15
mov    %r10,%rcx
sub    %r15d,%ecx
mov    %r9,%r14
shr    %cl,%r14d
movzbl (%rsi),%ecx
and    %cl,%r14b
or     %r14b,%r13b
mov    %r13b,(%rsi)
cmp    %r15d,%ebx
je     1bfbc <png_do_read_interlace+0x49c>
lea    (%r15,%r11,1),%ecx
jmpq   1bfc3 <png_do_read_interlace+0x4a3>
nopw   0x0(%rax,%rax,1)

000000000001c050 <png_read_filter_row>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
test   %r8d,%r8d
jg     1c05f <png_read_filter_row+0xf>
leaveq 
retq   
cmp    $0x4,%r8d
jle    1c067 <png_read_filter_row+0x17>
leaveq 
retq   
mov    0x478(%rdi),%rax
test   %rax,%rax
je     1c081 <png_read_filter_row+0x31>
mov    %rdi,%rax
mov    %rsi,%rdi
mov    %rdx,%rsi
mov    %rcx,%rdx
jmp    1c0d2 <png_read_filter_row+0x82>
mov    %rdi,%rax
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rdi,%rbx
mov    %rax,%rdi
mov    %rdx,%r12
mov    %rcx,%r13
mov    %r8,%r14
mov    %rsi,%r15
callq  20dc0 <png_init_filter_functions>
mov    %rbx,%rax
mov    %r13,%rdx
mov    %r12,%rsi
mov    %r15,%rdi
mov    %r14,%r8
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
lea    -0x1(%r8),%ecx
movslq %ecx,%rcx
callq  *0x478(%rax,%rcx,8)
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   (%rax)

000000000001c0f0 <png_read_IDAT_data>:
push   %rbp
mov    %rsp,%rbp
sub    $0x430,%rsp
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rsi,0x158(%rdi)
movl   $0x0,0x160(%rdi)
xor    %ebx,%ebx
mov    $0x400,%r15d
lea    -0x430(%rbp),%r14
mov    $0xffffffff,%ecx
mov    $0x1,%eax
mov    $0xfffffffe,%r8d
test   %rsi,%rsi
je     1c14c <png_read_IDAT_data+0x5c>
mov    %rdi,%r12
mov    %rsi,%r13
jmp    1c17d <png_read_IDAT_data+0x8d>
mov    %rdi,%r12
mov    %rsi,%r13
mov    %rbx,%rdx
jmp    1c17d <png_read_IDAT_data+0x8d>
test   %eax,%eax
jne    1c1a9 <png_read_IDAT_data+0xb9>
test   %rdx,%rdx
je     1c262 <png_read_IDAT_data+0x172>
mov    $0x1,%eax
mov    $0xffffffff,%ecx
mov    $0xfffffffe,%r8d
lea    -0x430(%rbp),%r14
xor    %ebx,%ebx
mov    0x148(%r12),%esi
test   %esi,%esi
je     1c27d <png_read_IDAT_data+0x18d>
test   %r13,%r13
jne    1c286 <png_read_IDAT_data+0x196>
mov    %r14,0x158(%r12)
mov    %rbx,%rax
mov    %r15,%rcx
jmpq   1c293 <png_read_IDAT_data+0x1a3>
mov    %rax,%rsi
mov    %r12,%rdi
callq  6910 <png_zstream_error>
test   %r13,%r13
jne    1c2cc <png_read_IDAT_data+0x1dc>
mov    %r12,%rdi
mov    0x170(%rdi),%rsi
callq  5230 <png_chunk_benign_error@plt>
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
mov    0x160(%r12),%ecx
lea    (%rbx,%rcx,1),%rdx
movl   $0x0,0x160(%r12)
cmp    $0x1,%eax
jne    1c157 <png_read_IDAT_data+0x67>
movq   $0x0,0x158(%r12)
mov    0x12c(%r12),%eax
or     $0x8,%eax
mov    %eax,0x12c(%r12)
mov    0x130(%r12),%eax
or     $0x8,%eax
mov    %eax,0x130(%r12)
mov    0x148(%r12),%eax
test   %eax,%eax
jne    1c24d <png_read_IDAT_data+0x15d>
mov    0x248(%r12),%eax
test   %eax,%eax
je     1c262 <png_read_IDAT_data+0x172>
mov    %rdx,%rbx
lea    0x125cf(%rip),%rsi        # 2e826 <png_pass_inc.11+0x32>
mov    %r12,%rdi
callq  5230 <png_chunk_benign_error@plt>
mov    %rbx,%rdx
test   %rdx,%rdx
jne    1c2db <png_read_IDAT_data+0x1eb>
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
mov    %rdx,-0x30(%rbp)
jmpq   1c337 <png_read_IDAT_data+0x247>
cmp    %r8,%rdx
ja     1c28e <png_read_IDAT_data+0x19e>
mov    %rdx,%rcx
mov    %ecx,%esi
sub    %rsi,%rdx
mov    %ecx,0x160(%r12)
mov    %rbx,%rsi
mov    %rdx,%rbx
mov    %rax,%r14
mov    %r12,%rdi
callq  1ca80 <png_zlib_inflate>
test   %r14,%r14
jne    1c1e2 <png_read_IDAT_data+0xf2>
mov    0x160(%r12),%ecx
neg    %rcx
add    %r15,%rcx
lea    (%rcx,%rbx,1),%rdx
jmpq   1c1ee <png_read_IDAT_data+0xfe>
mov    %r12,%rdi
mov    0x170(%rdi),%rsi
callq  5060 <png_chunk_error@plt>
test   %r13,%r13
jne    1c3b6 <png_read_IDAT_data+0x2c6>
mov    %r12,%rdi
lea    0x1254e(%rip),%rsi        # 2e83c <png_pass_inc.11+0x48>
callq  5230 <png_chunk_benign_error@plt>
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
mov    %r12,%rdi
mov    %rbx,%rsi
callq  1b270 <png_crc_finish>
mov    %r12,%rdi
callq  1b160 <png_read_chunk_header>
mov    %eax,0x248(%r12)
mov    0x218(%r12),%eax
cmp    $0x49444154,%eax
jne    1c3c5 <png_read_IDAT_data+0x2d5>
mov    0x248(%r12),%eax
test   %eax,%eax
je     1c309 <png_read_IDAT_data+0x219>
mov    0x468(%r12),%r15d
cmp    %r15d,%eax
jae    1c353 <png_read_IDAT_data+0x263>
mov    %rax,%r15
mov    %rbx,%rdx
mov    %r15d,%esi
mov    %r12,%rdi
callq  200a0 <png_read_buffer>
mov    %rax,%rbx
mov    %r12,%rdi
mov    %rbx,%rsi
mov    %r15,%rdx
callq  1b210 <png_crc_read>
mov    0x248(%r12),%eax
sub    %r15d,%eax
mov    %eax,0x248(%r12)
mov    %rbx,0x140(%r12)
mov    %r15d,0x148(%r12)
mov    -0x30(%rbp),%rdx
mov    $0x1,%eax
mov    $0xffffffff,%ecx
mov    $0xfffffffe,%r8d
xor    %ebx,%ebx
mov    $0x400,%r15d
jmpq   1c18d <png_read_IDAT_data+0x9d>
mov    %r12,%rdi
lea    0x12450(%rip),%rsi        # 2e810 <png_pass_inc.11+0x1c>
callq  5470 <png_error@plt>
mov    %r12,%rdi
lea    0x12441(%rip),%rsi        # 2e810 <png_pass_inc.11+0x1c>
callq  5470 <png_error@plt>
data16 nopw %cs:0x0(%rax,%rax,1)
nop

000000000001c3e0 <png_read_finish_IDAT>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    0x130(%rdi),%eax
and    $0x8,%eax
test   %eax,%eax
je     1c404 <png_read_finish_IDAT+0x24>
mov    0x138(%rdi),%eax
cmp    $0x49444154,%eax
je     1c440 <png_read_finish_IDAT+0x60>
leaveq 
retq   
xor    %esi,%esi
mov    %rsi,%rdx
mov    %rdi,%rax
mov    %r15,-0x8(%rbp)
mov    %rdi,%r15
mov    %rax,%rdi
callq  1c0f0 <png_read_IDAT_data>
movq   $0x0,0x158(%r15)
mov    0x130(%r15),%eax
mov    %rax,%rcx
and    $0x8,%ecx
test   %ecx,%ecx
je     1c46c <png_read_finish_IDAT+0x8c>
mov    %r15,%rdi
mov    -0x8(%rbp),%r15
jmp    1c3f5 <png_read_finish_IDAT+0x15>
movq   $0x0,0x140(%rdi)
movl   $0x0,0x148(%rdi)
movl   $0x0,0x138(%rdi)
mov    0x248(%rdi),%esi
callq  1b270 <png_crc_finish>
leaveq 
retq   
mov    0x12c(%r15),%ecx
or     $0x8,%ecx
mov    %ecx,0x12c(%r15)
or     $0x8,%eax
mov    %eax,0x130(%r15)
mov    %r15,%rdi
mov    -0x8(%rbp),%r15
jmpq   1c3f5 <png_read_finish_IDAT+0x15>
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

000000000001c4a0 <png_read_finish_row>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    0x214(%rdi),%eax
add    $0x1,%eax
mov    %eax,0x214(%rdi)
mov    0x200(%rdi),%ecx
cmp    %eax,%ecx
jbe    1c4c3 <png_read_finish_row+0x23>
leaveq 
retq   
movzbl 0x264(%rdi),%eax
test   %al,%al
jne    1c4d5 <png_read_finish_row+0x35>
callq  1c3e0 <png_read_finish_IDAT>
leaveq 
retq   
movl   $0x0,0x214(%rdi)
mov    0x220(%rdi),%rax
xor    %esi,%esi
mov    0x208(%rdi),%rdx
add    $0x1,%rdx
mov    %r15,-0x8(%rbp)
mov    %rdi,%r15
mov    %rax,%rdi
callq  5350 <memset@plt>
mov    %r15,%rdi
lea    0x1234b(%rip),%rcx        # 2e857 <png_pass_inc.16>
lea    0x1233d(%rip),%rsi        # 2e850 <png_pass_start.15>
lea    0x1234b(%rip),%r8        # 2e865 <png_pass_yinc.18>
lea    0x1233d(%rip),%r9        # 2e85e <png_pass_ystart.17>
jmp    1c58b <png_read_finish_row+0xeb>
movzbl %al,%edx
movzbl (%rdx,%rcx,1),%r10d
mov    0x1f8(%rdi),%eax
lea    -0x1(%r10,%rax,1),%eax
movzbl (%rdx,%rsi,1),%edx
sub    %edx,%eax
xor    %edx,%edx
div    %r10d
mov    %eax,0x210(%rdi)
mov    0x134(%rdi),%eax
and    $0x2,%eax
test   %eax,%eax
jne    1c59f <png_read_finish_row+0xff>
movzbl 0x265(%rdi),%edx
movzbl (%rdx,%r8,1),%r10d
mov    0x1fc(%rdi),%eax
lea    -0x1(%r10,%rax,1),%eax
movzbl (%rdx,%r9,1),%edx
sub    %edx,%eax
xor    %edx,%edx
div    %r10d
mov    %eax,0x200(%rdi)
test   %eax,%eax
je     1c58b <png_read_finish_row+0xeb>
mov    0x210(%rdi),%eax
test   %eax,%eax
jne    1c59f <png_read_finish_row+0xff>
movzbl 0x265(%rdi),%eax
add    $0x1,%eax
mov    %al,0x265(%rdi)
cmp    $0x6,%al
jbe    1c523 <png_read_finish_row+0x83>
movzbl 0x265(%rdi),%eax
cmp    $0x6,%al
jbe    1c5b3 <png_read_finish_row+0x113>
mov    -0x8(%rbp),%r15
jmpq   1c4ce <png_read_finish_row+0x2e>
mov    -0x8(%rbp),%r15
leaveq 
retq   
nopl   0x0(%rax)

000000000001c5c0 <png_read_start_row>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x10(%rbp)
mov    %r14,%r15
mov    %r13,%r14
mov    %r12,%r13
mov    %rbx,%r12
mov    %rdi,%rbx
callq  16850 <png_init_read_transformations>
movzbl 0x264(%rbx),%eax
test   %al,%al
jne    1c605 <png_read_start_row+0x45>
mov    0x1fc(%rbx),%eax
mov    %eax,0x200(%rbx)
mov    0x1f8(%rbx),%eax
mov    %eax,0x210(%rbx)
jmp    1c665 <png_read_start_row+0xa5>
mov    0x134(%rbx),%eax
and    $0x2,%eax
test   %eax,%eax
je     1c620 <png_read_start_row+0x60>
mov    0x1fc(%rbx),%eax
mov    %eax,0x200(%rbx)
jmp    1c632 <png_read_start_row+0x72>
mov    0x1fc(%rbx),%eax
add    $0x7,%eax
shr    $0x3,%eax
mov    %eax,0x200(%rbx)
movzbl 0x265(%rbx),%esi
lea    0x12233(%rip),%rax        # 2e873 <png_pass_inc.20>
movzbl (%rsi,%rax,1),%ecx
mov    0x1f8(%rbx),%eax
lea    -0x1(%rcx,%rax,1),%eax
lea    0x12217(%rip),%rdx        # 2e86c <png_pass_start.19>
movzbl (%rsi,%rdx,1),%edx
sub    %edx,%eax
xor    %edx,%edx
div    %ecx
mov    %eax,0x210(%rbx)
movzbl 0x26a(%rbx),%edx
mov    $0x8,%edi
mov    0x134(%rbx),%eax
and    $0x4,%eax
test   %eax,%eax
jne    1c730 <png_read_start_row+0x170>
mov    $0x20,%ecx
mov    $0x18,%esi
mov    0x134(%rbx),%eax
and    $0x1000,%eax
test   %eax,%eax
jne    1c747 <png_read_start_row+0x187>
mov    0x134(%rbx),%eax
mov    %rax,%rdi
and    $0x200,%edi
test   %edi,%edi
jne    1c787 <png_read_start_row+0x1c7>
mov    $0x40,%r8d
mov    0x134(%rbx),%eax
and    $0x8000,%eax
test   %eax,%eax
jne    1c7a8 <png_read_start_row+0x1e8>
mov    0x134(%rbx),%eax
mov    %rax,%rdi
and    $0x4000,%edi
test   %edi,%edi
jne    1c7d4 <png_read_start_row+0x214>
mov    0x134(%rbx),%eax
and    $0x100000,%eax
test   %eax,%eax
jne    1c81b <png_read_start_row+0x25b>
mov    0x1f8(%rbx),%eax
add    $0x7,%eax
and    $0xfffffff8,%eax
mov    %eax,%eax
mov    %edx,%ecx
mov    %dl,0x26e(%rbx)
movb   $0x0,0x26f(%rbx)
cmp    $0x7,%edx
ja     1c83c <png_read_start_row+0x27c>
imul   %rcx,%rax
add    $0x7,%rax
shr    $0x3,%rax
jmpq   1c844 <png_read_start_row+0x284>
movzbl 0x268(%rbx),%eax
cmp    $0x7,%al
ja     1c682 <png_read_start_row+0xc2>
mov    %rdi,%rdx
jmpq   1c682 <png_read_start_row+0xc2>
movzbl 0x267(%rbx),%eax
cmp    $0x3,%al
je     1c8a2 <png_read_start_row+0x2e2>
test   %al,%al
je     1c8ba <png_read_start_row+0x2fa>
cmp    $0x2,%al
jne    1c69f <png_read_start_row+0xdf>
movzwl 0x260(%rbx),%eax
test   %ax,%ax
je     1c69f <png_read_start_row+0xdf>
shl    $0x2,%edx
mov    $0xaaaaaaab,%eax
mul    %edx
shr    %edx
jmpq   1c69f <png_read_start_row+0xdf>
mov    %rax,%rdi
and    $0x1000,%edi
test   %edi,%edi
jne    1c8da <png_read_start_row+0x31a>
and    $0xfffffdff,%eax
mov    %eax,0x134(%rbx)
jmpq   1c6b6 <png_read_start_row+0xf6>
movzbl 0x267(%rbx),%eax
test   %al,%al
je     1c8f0 <png_read_start_row+0x330>
cmp    $0x2,%al
je     1c7c3 <png_read_start_row+0x203>
cmp    $0x3,%al
jne    1c6cf <png_read_start_row+0x10f>
cmp    $0x20,%edx
jbe    1c901 <png_read_start_row+0x341>
mov    %r8,%rdx
jmpq   1c6cf <png_read_start_row+0x10f>
movzwl 0x260(%rbx),%edi
test   %di,%di
jne    1c909 <png_read_start_row+0x349>
and    $0x8000,%eax
test   %eax,%eax
jne    1c91a <png_read_start_row+0x35a>
movzbl 0x267(%rbx),%eax
cmp    $0x4,%al
je     1c91a <png_read_start_row+0x35a>
cmp    $0x8,%edx
jbe    1c92b <png_read_start_row+0x36b>
cmp    $0x6,%al
je     1c93b <png_read_start_row+0x37b>
mov    $0x30,%edx
jmpq   1c6e6 <png_read_start_row+0x126>
movzbl 0x129(%rbx),%eax
movzbl 0x128(%rbx),%ecx
imul   %ecx,%eax
cmp    %edx,%eax
jbe    1c6f9 <png_read_start_row+0x139>
mov    %rax,%rdx
jmpq   1c6f9 <png_read_start_row+0x139>
shr    $0x3,%rcx
imul   %rcx,%rax
lea    0x7(%rdx),%ecx
shr    $0x3,%ecx
mov    %ecx,%ecx
lea    0x31(%rcx,%rax,1),%rax
cmp    0x450(%rbx),%rax
jbe    1c9ab <png_read_start_row+0x3eb>
mov    0x3f8(%rbx),%rsi
mov    %rbx,%rdi
mov    %r15,-0x8(%rbp)
mov    %rax,%r15
callq  5790 <png_free@plt>
mov    0x470(%rbx),%rsi
mov    %rbx,%rdi
callq  5790 <png_free@plt>
movzbl 0x264(%rbx),%eax
test   %al,%al
jne    1c943 <png_read_start_row+0x383>
mov    %rbx,%rdi
mov    %r15,%rsi
callq  5800 <png_malloc@plt>
jmpq   1c94e <png_read_start_row+0x38e>
movzwl 0x260(%rbx),%eax
test   %ax,%ax
jne    1ca2a <png_read_start_row+0x46a>
mov    %rsi,%rdx
jmpq   1c69f <png_read_start_row+0xdf>
cmp    $0x7,%edx
jbe    1c8c2 <png_read_start_row+0x302>
mov    %rdx,%rdi
movzwl 0x260(%rbx),%eax
test   %ax,%ax
jne    1ca32 <png_read_start_row+0x472>
mov    %rdi,%rdx
jmpq   1c69f <png_read_start_row+0xdf>
movzbl 0x268(%rbx),%eax
cmp    $0xf,%al
ja     1c6b6 <png_read_start_row+0xf6>
add    %edx,%edx
jmpq   1c6b6 <png_read_start_row+0xf6>
cmp    $0x8,%edx
jbe    1ca3a <png_read_start_row+0x47a>
mov    %rcx,%rdx
jmpq   1c6cf <png_read_start_row+0x10f>
mov    %rcx,%rdx
jmpq   1c6cf <png_read_start_row+0x10f>
mov    %rax,%rdi
and    $0x1000,%edi
test   %edi,%edi
je     1c7e4 <png_read_start_row+0x224>
cmp    $0x10,%edx
jbe    1ca44 <png_read_start_row+0x484>
mov    %r8,%rdx
jmpq   1c6e6 <png_read_start_row+0x126>
cmp    $0x6,%al
je     1ca4c <png_read_start_row+0x48c>
mov    %rsi,%rdx
jmpq   1c6e6 <png_read_start_row+0x126>
mov    %r8,%rdx
jmpq   1c6e6 <png_read_start_row+0x126>
mov    %rbx,%rdi
mov    %r15,%rsi
callq  5780 <png_calloc@plt>
mov    %rax,0x3f8(%rbx)
mov    %rbx,%rdi
mov    %r15,%rsi
callq  5800 <png_malloc@plt>
mov    %rax,0x470(%rbx)
mov    0x3f8(%rbx),%rcx
add    $0x20,%rcx
mov    %rcx,%rdx
and    $0xf,%rdx
sub    %rdx,%rcx
add    $0xffffffffffffffff,%rcx
mov    %rcx,0x228(%rbx)
add    $0x20,%rax
mov    %rax,%rcx
and    $0xf,%rcx
sub    %rcx,%rax
add    $0xffffffffffffffff,%rax
mov    %rax,0x220(%rbx)
mov    %r15,0x450(%rbx)
mov    -0x8(%rbp),%r15
mov    0x208(%rbx),%rax
cmp    $0xfffffffffffffffe,%rax
ja     1ca54 <png_read_start_row+0x494>
mov    0x220(%rbx),%rdi
xor    %esi,%esi
lea    0x1(%rax),%rdx
callq  5350 <memset@plt>
mov    0x458(%rbx),%rsi
test   %rsi,%rsi
je     1c9f8 <png_read_start_row+0x438>
movq   $0x0,0x460(%rbx)
movq   $0x0,0x458(%rbx)
mov    %rbx,%rdi
callq  5790 <png_free@plt>
mov    $0x49444154,%esi
mov    %rbx,%rdi
callq  201b0 <png_inflate_claim>
test   %eax,%eax
jne    1ca63 <png_read_start_row+0x4a3>
mov    0x130(%rbx),%eax
or     $0x40,%eax
mov    %eax,0x130(%rbx)
mov    %r12,%rbx
mov    %r13,%r12
mov    %r14,%r13
mov    %r15,%r14
mov    -0x10(%rbp),%r15
leaveq 
retq   
mov    %rcx,%rdx
jmpq   1c69f <png_read_start_row+0xdf>
lea    (%rdi,%rdi,1),%edx
jmpq   1c69f <png_read_start_row+0xdf>
mov    $0x10,%edx
jmpq   1c6cf <png_read_start_row+0x10f>
mov    %rcx,%rdx
jmpq   1c6e6 <png_read_start_row+0x126>
mov    %rcx,%rdx
jmpq   1c6e6 <png_read_start_row+0x126>
mov    %rbx,%rdi
lea    0x11e1c(%rip),%rsi        # 2e87a <png_pass_inc.20+0x7>
callq  5470 <png_error@plt>
mov    %rbx,%rdi
mov    0x170(%rdi),%rsi
callq  5470 <png_error@plt>
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   (%rax)

000000000001ca80 <png_zlib_inflate>:
push   %rbp
mov    %rsp,%rbp
movzbl 0x270(%rdi),%eax
test   %al,%al
jne    1ca9d <png_zlib_inflate+0x1d>
add    $0x140,%rdi
callq  5120 <inflate@plt>
leaveq 
retq   
mov    0x148(%rdi),%eax
test   %eax,%eax
je     1ca8f <png_zlib_inflate+0xf>
mov    0x140(%rdi),%rax
movzbl (%rax),%eax
shr    $0x4,%eax
cmp    $0x7,%eax
jg     1cac2 <png_zlib_inflate+0x42>
movb   $0x0,0x270(%rdi)
jmp    1ca8f <png_zlib_inflate+0xf>
lea    0x11dde(%rip),%rax        # 2e8a7 <png_pass_inc.20+0x34>
mov    %rax,0x170(%rdi)
mov    $0xfffffffffffffffd,%rax
leaveq 
retq   
nopl   0x0(%rax)

000000000001cae0 <png_handle_IHDR>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    0x12c(%rdi),%eax
mov    %rax,%rcx
and    $0x1,%ecx
test   %ecx,%ecx
jne    1cbf3 <png_handle_IHDR+0x113>
cmp    $0xd,%edx
jne    1cbff <png_handle_IHDR+0x11f>
or     $0x1,%eax
mov    %eax,0x12c(%rdi)
lea    -0x25(%rbp),%rax
mov    $0xd,%edx
mov    %rdi,%rcx
mov    %rax,%r8
mov    %r13,-0x8(%rbp)
mov    %r14,-0x10(%rbp)
mov    %r15,-0x18(%rbp)
mov    %r12,%r13
mov    %rbx,%r12
mov    %rdi,%rbx
mov    %rcx,%rdi
mov    %rsi,%r14
mov    %r8,%rsi
mov    %rax,%r15
callq  1b210 <png_crc_read>
xor    %esi,%esi
mov    %rbx,%rdi
callq  1b270 <png_crc_finish>
mov    %r15,%rsi
mov    %rbx,%rdi
callq  5730 <png_get_uint_31@plt>
mov    %rax,%r15
lea    -0x21(%rbp),%rsi
mov    %rbx,%rdi
callq  5730 <png_get_uint_31@plt>
movzbl -0x1d(%rbp),%r8d
movzbl -0x19(%rbp),%r11d
movzbl -0x1c(%rbp),%r9d
movzbl -0x1a(%rbp),%edi
movzbl -0x1b(%rbp),%r10d
mov    %r15d,0x1f8(%rbx)
mov    %eax,0x1fc(%rbx)
mov    %r8b,0x268(%rbx)
mov    %r11b,0x264(%rbx)
mov    %r9b,0x267(%rbx)
mov    %dil,0x3dc(%rbx)
mov    %r10b,0x418(%rbx)
mov    $0x1,%esi
cmp    $0x3,%r9b
jbe    1cc0b <png_handle_IHDR+0x12b>
cmp    $0x4,%r9b
jne    1cc18 <png_handle_IHDR+0x138>
mov    $0x2,%esi
mov    %rax,%rcx
mov    %r8,%rax
imul   %sil
mov    %al,0x26a(%rbx)
mov    %sil,0x26b(%rbx)
cmp    $0x7,%al
ja     1cc25 <png_handle_IHDR+0x145>
movzbl %al,%eax
mov    %r15d,%edx
imul   %rdx,%rax
lea    0x7(%rax),%rdx
shr    $0x3,%rdx
jmp    1cc33 <png_handle_IHDR+0x153>
lea    0x11cca(%rip),%rsi        # 2e8c4 <png_pass_inc.20+0x51>
callq  5060 <png_chunk_error@plt>
lea    0x11ccb(%rip),%rsi        # 2e8d1 <png_pass_inc.20+0x5e>
callq  5060 <png_chunk_error@plt>
cmp    $0x2,%r9b
jne    1cbc5 <png_handle_IHDR+0xe5>
mov    $0x3,%esi
jmp    1cbc5 <png_handle_IHDR+0xe5>
cmp    $0x6,%r9b
jne    1cbc5 <png_handle_IHDR+0xe5>
mov    $0x4,%esi
jmp    1cbc5 <png_handle_IHDR+0xe5>
movzbl %al,%edx
shr    $0x3,%rdx
mov    %r15d,%eax
imul   %rax,%rdx
sub    $0x10,%rsp
mov    %rdx,0x208(%rbx)
mov    %r11d,(%rsp)
mov    %r10d,0x8(%rsp)
mov    %edi,0x10(%rsp)
mov    %r15,%rdx
mov    %r14,%rsi
mov    %rbx,%rdi
callq  5460 <png_set_IHDR@plt>
mov    %r12,%rbx
mov    %r13,%r12
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
leaveq 
retq   
nopl   (%rax)

000000000001cc70 <png_handle_PLTE>:
push   %rbp
mov    %rsp,%rbp
sub    $0x350,%rsp
mov    0x12c(%rdi),%eax
mov    %rax,%rcx
and    $0x1,%ecx
test   %ecx,%ecx
je     1ccfd <png_handle_PLTE+0x8d>
mov    %rax,%rcx
and    $0x2,%ecx
test   %ecx,%ecx
jne    1cd09 <png_handle_PLTE+0x99>
mov    %rax,%rcx
and    $0x4,%ecx
test   %ecx,%ecx
jne    1cd15 <png_handle_PLTE+0xa5>
or     $0x2,%eax
mov    %eax,0x12c(%rdi)
movzbl 0x267(%rdi),%eax
and    $0x2,%eax
test   %eax,%eax
je     1cd3f <png_handle_PLTE+0xcf>
cmp    $0x300,%edx
jbe    1cd69 <png_handle_PLTE+0xf9>
mov    %rdx,%rsi
mov    %r15,%r8
mov    %rdi,%rax
mov    %r8,-0x48(%rbp)
mov    %rdi,%r15
mov    %rax,%rdi
callq  1b270 <png_crc_finish>
lea    0x11bec(%rip),%rsi        # 2e8d1 <png_pass_inc.20+0x5e>
movzbl 0x267(%r15),%eax
cmp    $0x3,%al
jne    1cda3 <png_handle_PLTE+0x133>
mov    %r15,%rdi
callq  5060 <png_chunk_error@plt>
lea    0x11bd5(%rip),%rsi        # 2e8d9 <png_pass_inc.20+0x66>
callq  5060 <png_chunk_error@plt>
lea    0x11bd6(%rip),%rsi        # 2e8e6 <png_pass_inc.20+0x73>
callq  5060 <png_chunk_error@plt>
mov    %rdi,%rax
mov    %r15,-0x48(%rbp)
mov    %rdx,%rsi
mov    %rdi,%r15
mov    %rax,%rdi
callq  1b270 <png_crc_finish>
mov    %r15,%rdi
lea    0x11b90(%rip),%rsi        # 2e8c4 <png_pass_inc.20+0x51>
callq  5230 <png_chunk_benign_error@plt>
mov    -0x48(%rbp),%r15
leaveq 
retq   
mov    %rdi,%rax
mov    %r15,-0x48(%rbp)
mov    %rdx,%rsi
mov    %rdi,%r15
mov    %rax,%rdi
callq  1b270 <png_crc_finish>
mov    %r15,%rdi
lea    0x11b92(%rip),%rsi        # 2e8f0 <png_pass_inc.20+0x7d>
callq  5230 <png_chunk_benign_error@plt>
mov    -0x48(%rbp),%r15
leaveq 
retq   
mov    %r15,%r8
mov    %rsi,%r9
mov    %rdx,%rsi
mov    $0xaaaaaaab,%eax
mul    %esi
shr    %edx
lea    (%rdx,%rdx,2),%eax
cmp    %eax,%esi
jne    1cccc <png_handle_PLTE+0x5c>
mov    $0x1,%r15d
mov    %r15,-0x30(%rbp)
movzbl 0x267(%rdi),%eax
cmp    $0x3,%al
je     1cdb1 <png_handle_PLTE+0x141>
mov    $0x100,%r15d
jmp    1cdbb <png_handle_PLTE+0x14b>
mov    %r15,%rdi
callq  5230 <png_chunk_benign_error@plt>
mov    -0x48(%rbp),%r15
leaveq 
retq   
movzbl 0x268(%rdi),%ecx
shl    %cl,%r15d
mov    $0x55555556,%eax
imul   %esi
mov    %rdx,%rax
shr    $0x1f,%eax
add    %edx,%eax
cmp    %eax,%r15d
jl     1cdd2 <png_handle_PLTE+0x162>
mov    %rax,%r15
lea    -0x34b(%rbp),%rcx
lea    -0x4b(%rbp),%r10
mov    $0x3,%edx
xor    %eax,%eax
mov    %rsi,-0x48(%rbp)
mov    %r9,-0x40(%rbp)
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r8,-0x28(%rbp)
mov    %rcx,%rbx
mov    %rax,%r12
mov    %r10,%r13
mov    %r12,-0x38(%rbp)
jmp    1ce3e <png_handle_PLTE+0x1ce>
mov    %rdi,%r14
mov    %r13,%rsi
callq  1b210 <png_crc_read>
movzbl -0x4b(%rbp),%eax
mov    %al,(%rbx)
movzbl -0x4a(%rbp),%eax
mov    %al,0x1(%rbx)
movzbl -0x49(%rbp),%eax
mov    %al,0x2(%rbx)
add    $0x3,%rbx
add    $0x1,%r12d
mov    %r14,%rdi
mov    $0x3,%edx
cmp    %r12d,%r15d
jg     1ce0f <png_handle_PLTE+0x19f>
lea    (%r15,%r15,2),%eax
mov    -0x48(%rbp),%rsi
sub    %eax,%esi
mov    %rdi,%rbx
callq  1b270 <png_crc_finish>
mov    %r15,%rcx
mov    %rbx,%rdi
mov    -0x40(%rbp),%r12
mov    %r12,%rsi
lea    -0x34b(%rbp),%rdx
callq  5530 <png_set_PLTE@plt>
movzwl 0x260(%rbx),%eax
test   %ax,%ax
jne    1ce8b <png_handle_PLTE+0x21b>
test   %r12,%r12
je     1ceb0 <png_handle_PLTE+0x240>
mov    0x8(%r12),%eax
and    $0x10,%eax
test   %eax,%eax
je     1ceb0 <png_handle_PLTE+0x240>
test   %r12,%r12
movw   $0x0,0x260(%rbx)
je     1cea1 <png_handle_PLTE+0x231>
movw   $0x0,0x22(%r12)
lea    0x11a61(%rip),%rsi        # 2e909 <png_pass_inc.20+0x96>
mov    %rbx,%rdi
callq  5230 <png_chunk_benign_error@plt>
test   %r12,%r12
je     1cec7 <png_handle_PLTE+0x257>
mov    0x8(%r12),%eax
and    $0x40,%eax
test   %eax,%eax
jne    1cee6 <png_handle_PLTE+0x276>
pushq  -0x30(%rbp)
popq   -0x38(%rbp)
mov    -0x38(%rbp),%rax
test   %rax,%rax
jne    1cefd <png_handle_PLTE+0x28d>
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
lea    0x11a2f(%rip),%rsi        # 2e91c <png_pass_inc.20+0xa9>
mov    %rbx,%rdi
callq  5230 <png_chunk_benign_error@plt>
pushq  -0x30(%rbp)
popq   -0x38(%rbp)
jmp    1cec7 <png_handle_PLTE+0x257>
mov    0x8(%r12),%eax
and    $0x20,%eax
test   %eax,%eax
jne    1cf1f <png_handle_PLTE+0x2af>
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
mov    %rbx,%rdi
lea    0x11a06(%rip),%rsi        # 2e92f <png_pass_inc.20+0xbc>
callq  5230 <png_chunk_benign_error@plt>
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nop

000000000001cf50 <png_handle_IEND>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    0x12c(%rdi),%eax
mov    %rax,%rcx
and    $0x1,%ecx
test   %ecx,%ecx
je     1cf9f <png_handle_IEND+0x4f>
mov    %rax,%rcx
and    $0x4,%ecx
test   %ecx,%ecx
je     1cf9f <png_handle_IEND+0x4f>
or     $0x18,%eax
mov    %eax,0x12c(%rdi)
mov    %rdi,%rax
mov    %rdx,%rsi
mov    %r15,-0x10(%rbp)
mov    %rdi,-0x8(%rbp)
mov    %rax,%rdi
mov    %rdx,%r15
callq  1b270 <png_crc_finish>
test   %r15d,%r15d
jne    1cfab <png_handle_IEND+0x5b>
mov    -0x10(%rbp),%r15
leaveq 
retq   
lea    0x1191e(%rip),%rsi        # 2e8c4 <png_pass_inc.20+0x51>
callq  5060 <png_chunk_error@plt>
lea    0x1191f(%rip),%rsi        # 2e8d1 <png_pass_inc.20+0x5e>
mov    -0x8(%rbp),%rdi
callq  5230 <png_chunk_benign_error@plt>
mov    -0x10(%rbp),%r15
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   0x0(%rax)

000000000001cfd0 <png_handle_bKGD>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    0x12c(%rdi),%eax
mov    %rax,%rcx
and    $0x1,%ecx
test   %ecx,%ecx
je     1d05b <png_handle_bKGD+0x8b>
mov    %rax,%rcx
and    $0x4,%ecx
test   %ecx,%ecx
jne    1d06e <png_handle_bKGD+0x9e>
movzbl 0x267(%rdi),%ecx
cmp    $0x3,%cl
je     1d067 <png_handle_bKGD+0x97>
test   %rsi,%rsi
jne    1d098 <png_handle_bKGD+0xc8>
movzbl 0x267(%rdi),%eax
cmp    $0x3,%al
jne    1d0d0 <png_handle_bKGD+0x100>
mov    $0x1,%eax
cmp    %edx,%eax
jne    1d0e5 <png_handle_bKGD+0x115>
lea    -0x20(%rbp),%rdx
mov    %rdi,%rcx
mov    %r15,-0x8(%rbp)
mov    %rsi,-0x10(%rbp)
mov    %rdx,%rsi
mov    %rax,%rdx
mov    %rdi,%r15
mov    %rcx,%rdi
callq  1b210 <png_crc_read>
xor    %esi,%esi
mov    %r15,%rdi
callq  1b270 <png_crc_finish>
test   %eax,%eax
je     1d10f <png_handle_bKGD+0x13f>
mov    -0x8(%rbp),%r15
leaveq 
retq   
lea    0x11877(%rip),%rsi        # 2e8d9 <png_pass_inc.20+0x66>
callq  5060 <png_chunk_error@plt>
and    $0x2,%eax
test   %eax,%eax
jne    1cffe <png_handle_bKGD+0x2e>
mov    %rdi,%rax
mov    %r15,-0x10(%rbp)
mov    %rdx,%rsi
mov    %rdi,%r15
mov    %rax,%rdi
callq  1b270 <png_crc_finish>
mov    %r15,%rdi
lea    0x11837(%rip),%rsi        # 2e8c4 <png_pass_inc.20+0x51>
callq  5230 <png_chunk_benign_error@plt>
mov    -0x10(%rbp),%r15
leaveq 
retq   
mov    0x8(%rsi),%eax
and    $0x20,%eax
test   %eax,%eax
je     1d007 <png_handle_bKGD+0x37>
mov    %rdi,%rax
mov    %r15,-0x10(%rbp)
mov    %rdx,%rsi
mov    %rdi,%r15
mov    %rax,%rdi
callq  1b270 <png_crc_finish>
mov    %r15,%rdi
lea    0x11821(%rip),%rsi        # 2e8e6 <png_pass_inc.20+0x73>
callq  5230 <png_chunk_benign_error@plt>
mov    -0x10(%rbp),%r15
leaveq 
retq   
and    $0x2,%eax
test   %eax,%eax
jg     1d169 <png_handle_bKGD+0x199>
mov    $0x2,%eax
jmpq   1d01b <png_handle_bKGD+0x4b>
mov    %rdi,%rax
mov    %r15,-0x10(%rbp)
mov    %rdx,%rsi
mov    %rdi,%r15
mov    %rax,%rdi
callq  1b270 <png_crc_finish>
mov    %r15,%rdi
lea    0x117cd(%rip),%rsi        # 2e8d1 <png_pass_inc.20+0x5e>
callq  5230 <png_chunk_benign_error@plt>
mov    -0x10(%rbp),%r15
leaveq 
retq   
movzbl 0x267(%r15),%eax
cmp    $0x3,%al
je     1d173 <png_handle_bKGD+0x1a3>
and    $0x2,%eax
test   %eax,%eax
je     1d1ad <png_handle_bKGD+0x1dd>
movb   $0x0,-0x1a(%rbp)
movzbl -0x1f(%rbp),%ecx
movzbl -0x20(%rbp),%eax
shl    $0x8,%eax
add    %ecx,%eax
mov    %ax,-0x18(%rbp)
movzbl -0x1d(%rbp),%ecx
movzbl -0x1e(%rbp),%eax
shl    $0x8,%eax
add    %ecx,%eax
mov    %ax,-0x16(%rbp)
movzbl -0x1b(%rbp),%ecx
movzbl -0x1c(%rbp),%eax
shl    $0x8,%eax
add    %ecx,%eax
mov    %ax,-0x14(%rbp)
movw   $0x0,-0x12(%rbp)
mov    -0x10(%rbp),%rsi
jmp    1d19b <png_handle_bKGD+0x1cb>
mov    $0x6,%eax
jmpq   1d01b <png_handle_bKGD+0x4b>
mov    -0x10(%rbp),%rsi
test   %rsi,%rsi
movzbl -0x20(%rbp),%ecx
mov    %cl,-0x1a(%rbp)
jne    1d1d4 <png_handle_bKGD+0x204>
movw   $0x0,-0x14(%rbp)
movw   $0x0,-0x16(%rbp)
movw   $0x0,-0x18(%rbp)
movw   $0x0,-0x12(%rbp)
mov    %r15,%rdi
lea    -0x1a(%rbp),%rdx
callq  5110 <png_set_bKGD@plt>
mov    -0x8(%rbp),%r15
leaveq 
retq   
movb   $0x0,-0x1a(%rbp)
movzbl -0x1f(%rbp),%ecx
movzbl -0x20(%rbp),%eax
shl    $0x8,%eax
add    %ecx,%eax
mov    %ax,-0x12(%rbp)
mov    %ax,-0x14(%rbp)
mov    %ax,-0x16(%rbp)
mov    %ax,-0x18(%rbp)
mov    -0x10(%rbp),%rsi
jmp    1d19b <png_handle_bKGD+0x1cb>
movzwl 0x20(%rsi),%eax
test   %ax,%ax
je     1d183 <png_handle_bKGD+0x1b3>
cmp    %cx,%ax
jbe    1d21a <png_handle_bKGD+0x24a>
mov    0x250(%r15),%rax
lea    (%rcx,%rcx,2),%rcx
movzbl (%rax,%rcx,1),%eax
mov    %ax,-0x18(%rbp)
mov    0x250(%r15),%rax
movzbl 0x1(%rax,%rcx,1),%eax
mov    %ax,-0x16(%rbp)
mov    0x250(%r15),%rax
movzbl 0x2(%rax,%rcx,1),%eax
mov    %ax,-0x14(%rbp)
jmpq   1d195 <png_handle_bKGD+0x1c5>
mov    %r15,%rdi
lea    0x1171e(%rip),%rsi        # 2e942 <png_pass_inc.20+0xcf>
callq  5230 <png_chunk_benign_error@plt>
mov    -0x8(%rbp),%r15
leaveq 
retq   
nop

000000000001d230 <png_handle_cHRM>:
push   %rbp
mov    %rsp,%rbp
sub    $0x60,%rsp
mov    0x12c(%rdi),%eax
mov    %rax,%rcx
and    $0x1,%ecx
test   %ecx,%ecx
je     1d294 <png_handle_cHRM+0x64>
and    $0x6,%eax
test   %eax,%eax
jne    1d2a0 <png_handle_cHRM+0x70>
cmp    $0x20,%edx
jne    1d2ca <png_handle_cHRM+0x9a>
lea    -0x58(%rbp),%rax
mov    $0x20,%edx
mov    %rdi,%rcx
mov    %r15,-0x10(%rbp)
mov    %rsi,-0x8(%rbp)
mov    %rax,%rsi
mov    %rdi,%r15
mov    %rcx,%rdi
callq  1b210 <png_crc_read>
xor    %eax,%eax
mov    %r15,%rdi
mov    %rax,%rsi
mov    %r15,-0x18(%rbp)
mov    %rax,%r15
callq  1b270 <png_crc_finish>
test   %eax,%eax
je     1d2f4 <png_handle_cHRM+0xc4>
mov    -0x10(%rbp),%r15
leaveq 
retq   
lea    0x1163e(%rip),%rsi        # 2e8d9 <png_pass_inc.20+0x66>
callq  5060 <png_chunk_error@plt>
mov    %rdi,%rax
mov    %r15,-0x18(%rbp)
mov    %rdx,%rsi
mov    %rdi,%r15
mov    %rax,%rdi
callq  1b270 <png_crc_finish>
mov    %r15,%rdi
lea    0x11605(%rip),%rsi        # 2e8c4 <png_pass_inc.20+0x51>
callq  5230 <png_chunk_benign_error@plt>
mov    -0x18(%rbp),%r15
leaveq 
retq   
mov    %rdi,%rax
mov    %r15,-0x18(%rbp)
mov    %rdx,%rsi
mov    %rdi,%r15
mov    %rax,%rdi
callq  1b270 <png_crc_finish>
mov    %r15,%rdi
lea    0x115e8(%rip),%rsi        # 2e8d1 <png_pass_inc.20+0x5e>
callq  5230 <png_chunk_benign_error@plt>
mov    -0x18(%rbp),%r15
leaveq 
retq   
mov    %r15,%rdi
lea    -0x58(%rbp),%rsi
callq  20050 <png_get_fixed_point>
mov    %eax,-0x20(%rbp)
lea    -0x54(%rbp),%rsi
mov    %r15,%rdi
callq  20050 <png_get_fixed_point>
mov    %eax,-0x1c(%rbp)
lea    -0x50(%rbp),%rsi
mov    %r15,%rdi
callq  20050 <png_get_fixed_point>
mov    %eax,-0x38(%rbp)
lea    -0x4c(%rbp),%rsi
mov    %r15,%rdi
callq  20050 <png_get_fixed_point>
mov    %eax,-0x34(%rbp)
lea    -0x48(%rbp),%rsi
mov    %r15,%rdi
callq  20050 <png_get_fixed_point>
mov    %eax,-0x30(%rbp)
lea    -0x44(%rbp),%rsi
mov    %r15,%rdi
callq  20050 <png_get_fixed_point>
mov    %eax,-0x2c(%rbp)
lea    -0x40(%rbp),%rsi
mov    %r15,%rdi
callq  20050 <png_get_fixed_point>
mov    %eax,-0x28(%rbp)
mov    %r15,%rdi
lea    -0x3c(%rbp),%rsi
callq  20050 <png_get_fixed_point>
mov    %eax,-0x24(%rbp)
movslq -0x20(%rbp),%rcx
cmp    $0xffffffff,%ecx
je     1d3cf <png_handle_cHRM+0x19f>
movslq -0x1c(%rbp),%rcx
cmp    $0xffffffff,%ecx
je     1d3cf <png_handle_cHRM+0x19f>
movslq -0x38(%rbp),%rcx
cmp    $0xffffffff,%ecx
je     1d3cf <png_handle_cHRM+0x19f>
movslq -0x34(%rbp),%rcx
cmp    $0xffffffff,%ecx
je     1d3cf <png_handle_cHRM+0x19f>
movslq -0x30(%rbp),%rcx
cmp    $0xffffffff,%ecx
je     1d3cf <png_handle_cHRM+0x19f>
movslq -0x2c(%rbp),%rcx
cmp    $0xffffffff,%ecx
je     1d3cf <png_handle_cHRM+0x19f>
movslq -0x28(%rbp),%rcx
cmp    $0xffffffff,%ecx
je     1d3cf <png_handle_cHRM+0x19f>
cmp    $0xffffffff,%eax
je     1d3cf <png_handle_cHRM+0x19f>
mov    -0x18(%rbp),%r15
movzwl 0x4e2(%r15),%eax
mov    %rax,%rcx
and    $0x8000,%ecx
test   %ecx,%ecx
jle    1d3e5 <png_handle_cHRM+0x1b5>
mov    -0x10(%rbp),%r15
leaveq 
retq   
lea    0x1157a(%rip),%rsi        # 2e950 <png_pass_inc.20+0xdd>
mov    -0x18(%rbp),%rdi
callq  5230 <png_chunk_benign_error@plt>
mov    -0x10(%rbp),%r15
leaveq 
retq   
mov    %rax,%rcx
and    $0x10,%ecx
test   %ecx,%ecx
jg     1d425 <png_handle_cHRM+0x1f5>
or     $0x10,%ax
mov    %ax,0x4e2(%r15)
lea    0x498(%r15),%rsi
lea    -0x38(%rbp),%rdx
mov    $0x1,%ecx
mov    %r15,%rdi
callq  7060 <png_colorspace_set_chromaticities>
mov    %r15,%rdi
mov    -0x8(%rbp),%rsi
callq  7010 <png_colorspace_sync>
mov    -0x10(%rbp),%r15
leaveq 
retq   
or     $0x8000,%ax
mov    %ax,0x4e2(%r15)
mov    %r15,%rdi
mov    -0x8(%rbp),%rsi
callq  7010 <png_colorspace_sync>
mov    %r15,%rdi
lea    0x1149f(%rip),%rsi        # 2e8e6 <png_pass_inc.20+0x73>
callq  5230 <png_chunk_benign_error@plt>
mov    -0x10(%rbp),%r15
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   (%rax)

000000000001d460 <png_handle_eXIf>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    0x12c(%rdi),%eax
and    $0x1,%eax
test   %eax,%eax
je     1d4fe <png_handle_eXIf+0x9e>
cmp    $0x1,%edx
jbe    1d50a <png_handle_eXIf+0xaa>
test   %rsi,%rsi
je     1d534 <png_handle_eXIf+0xd4>
mov    0x8(%rsi),%eax
and    $0x10000,%eax
test   %eax,%eax
jne    1d534 <png_handle_eXIf+0xd4>
mov    0x12c(%rsi),%eax
or     $0x8000,%eax
mov    %eax,0x12c(%rsi)
mov    %edx,%ecx
mov    %rdi,%rax
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rdx,%r13
mov    %rsi,%r14
mov    %rcx,%rsi
mov    %rbx,%r15
mov    %rdi,%rbx
mov    %rax,%rdi
callq  5150 <png_malloc_warn@plt>
mov    %rax,0xf8(%r14)
test   %rax,%rax
je     1d55e <png_handle_eXIf+0xfe>
lea    -0x29(%rbp),%rax
mov    $0x1,%edx
xor    %ecx,%ecx
mov    %r15,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %rcx,%r12
mov    %rax,%r15
jmpq   1d5b4 <png_handle_eXIf+0x154>
lea    0x113d4(%rip),%rsi        # 2e8d9 <png_pass_inc.20+0x66>
callq  5060 <png_chunk_error@plt>
mov    %rdi,%rax
mov    %r15,-0x28(%rbp)
mov    %rdx,%rsi
mov    %rdi,%r15
mov    %rax,%rdi
callq  1b270 <png_crc_finish>
mov    %r15,%rdi
lea    0x11436(%rip),%rsi        # 2e95f <png_pass_inc.20+0xec>
callq  5230 <png_chunk_benign_error@plt>
mov    -0x28(%rbp),%r15
leaveq 
retq   
mov    %rdi,%rax
mov    %r15,-0x28(%rbp)
mov    %rdx,%rsi
mov    %rdi,%r15
mov    %rax,%rdi
callq  1b270 <png_crc_finish>
mov    %r15,%rdi
lea    0x11393(%rip),%rsi        # 2e8e6 <png_pass_inc.20+0x73>
callq  5230 <png_chunk_benign_error@plt>
mov    -0x28(%rbp),%r15
leaveq 
retq   
mov    %r13,%rsi
mov    %rbx,%rdi
callq  1b270 <png_crc_finish>
mov    %rbx,%rdi
lea    0x113f6(%rip),%rsi        # 2e969 <png_pass_inc.20+0xf6>
callq  5230 <png_chunk_benign_error@plt>
mov    %r15,%rbx
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
leaveq 
retq   
mov    %rbx,%rdi
mov    %r15,%rsi
callq  1b210 <png_crc_read>
movzbl -0x29(%rbp),%edx
mov    0xf8(%r14),%rcx
mov    %r12d,%eax
mov    %dl,(%rcx,%rax,1)
cmp    $0x1,%r12d
je     1d5dd <png_handle_eXIf+0x17d>
add    $0x1,%r12d
mov    $0x1,%edx
cmp    %r12d,%r13d
ja     1d589 <png_handle_eXIf+0x129>
mov    %rbx,%rdi
xor    %esi,%esi
callq  1b270 <png_crc_finish>
test   %eax,%eax
je     1d643 <png_handle_eXIf+0x1e3>
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
leaveq 
retq   
movzbl -0x29(%rbp),%ecx
cmp    $0x4d,%cl
je     1d5ab <png_handle_eXIf+0x14b>
cmp    $0x49,%cl
je     1d5ab <png_handle_eXIf+0x14b>
mov    0xf8(%r14),%rax
movzbl (%rax),%eax
cmp    %al,%cl
je     1d5ab <png_handle_eXIf+0x14b>
mov    %r13,%rsi
mov    %rbx,%rdi
callq  1b270 <png_crc_finish>
lea    0x1136c(%rip),%rsi        # 2e977 <png_pass_inc.20+0x104>
mov    %rbx,%rdi
callq  5230 <png_chunk_benign_error@plt>
mov    %rbx,%rdi
mov    0xf8(%r14),%rsi
callq  5790 <png_free@plt>
movq   $0x0,0xf8(%r14)
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
leaveq 
retq   
mov    %r13,%rdx
mov    0xf8(%r14),%rcx
mov    %rbx,%rdi
mov    %r14,%rsi
callq  5430 <png_set_eXIf_1@plt>
mov    %rbx,%rdi
mov    0xf8(%r14),%rsi
callq  5790 <png_free@plt>
movq   $0x0,0xf8(%r14)
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

000000000001d690 <png_handle_gAMA>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    0x12c(%rdi),%eax
mov    %rax,%rcx
and    $0x1,%ecx
test   %ecx,%ecx
je     1d6ea <png_handle_gAMA+0x5a>
and    $0x6,%eax
test   %eax,%eax
jne    1d6f6 <png_handle_gAMA+0x66>
cmp    $0x4,%edx
jne    1d720 <png_handle_gAMA+0x90>
lea    -0x14(%rbp),%rax
mov    $0x4,%edx
mov    %rdi,%rcx
mov    %r15,-0x10(%rbp)
mov    %rsi,-0x8(%rbp)
mov    %rax,%rsi
mov    %rdi,%r15
mov    %rcx,%rdi
callq  1b210 <png_crc_read>
xor    %esi,%esi
mov    %r15,%rdi
callq  1b270 <png_crc_finish>
test   %eax,%eax
je     1d74a <png_handle_gAMA+0xba>
mov    -0x10(%rbp),%r15
leaveq 
retq   
lea    0x111e8(%rip),%rsi        # 2e8d9 <png_pass_inc.20+0x66>
callq  5060 <png_chunk_error@plt>
mov    %rdi,%rax
mov    %r15,-0x10(%rbp)
mov    %rdx,%rsi
mov    %rdi,%r15
mov    %rax,%rdi
callq  1b270 <png_crc_finish>
mov    %r15,%rdi
lea    0x111af(%rip),%rsi        # 2e8c4 <png_pass_inc.20+0x51>
callq  5230 <png_chunk_benign_error@plt>
mov    -0x10(%rbp),%r15
leaveq 
retq   
mov    %rdi,%rax
mov    %r15,-0x10(%rbp)
mov    %rdx,%rsi
mov    %rdi,%r15
mov    %rax,%rdi
callq  1b270 <png_crc_finish>
mov    %r15,%rdi
lea    0x11192(%rip),%rsi        # 2e8d1 <png_pass_inc.20+0x5e>
callq  5230 <png_chunk_benign_error@plt>
mov    -0x10(%rbp),%r15
leaveq 
retq   
xor    %edi,%edi
lea    -0x14(%rbp),%rsi
callq  20050 <png_get_fixed_point>
mov    %rax,%rdx
lea    0x498(%r15),%rsi
mov    %r15,%rdi
callq  6ec0 <png_colorspace_set_gamma>
mov    %r15,%rdi
mov    -0x8(%rbp),%rsi
callq  7010 <png_colorspace_sync>
mov    -0x10(%rbp),%r15
leaveq 
retq   
nopl   0x0(%rax)

000000000001d780 <png_handle_hIST>:
push   %rbp
mov    %rsp,%rbp
sub    $0x240,%rsp
mov    0x12c(%rdi),%eax
mov    %rax,%rcx
and    $0x1,%ecx
test   %ecx,%ecx
je     1d80a <png_handle_hIST+0x8a>
mov    %rax,%rcx
and    $0x4,%ecx
test   %ecx,%ecx
jne    1d816 <png_handle_hIST+0x96>
and    $0x2,%eax
test   %eax,%eax
je     1d816 <png_handle_hIST+0x96>
test   %rsi,%rsi
jne    1d840 <png_handle_hIST+0xc0>
mov    %rdx,%rcx
shr    %ecx
movzwl 0x258(%rdi),%eax
cmp    %ecx,%eax
jne    1d878 <png_handle_hIST+0xf8>
cmp    $0x100,%ecx
ja     1d878 <png_handle_hIST+0xf8>
xor    %r8d,%r8d
lea    -0x32(%rbp),%rdx
mov    $0x2,%eax
mov    %r15,-0x30(%rbp)
mov    %rsi,-0x8(%rbp)
mov    %rbx,-0x10(%rbp)
mov    %r12,-0x18(%rbp)
mov    %r13,-0x20(%rbp)
mov    %r14,-0x28(%rbp)
mov    %r8,%rbx
mov    %rcx,%r12
mov    %rax,%r13
mov    %rdx,%r14
jmpq   1d8cd <png_handle_hIST+0x14d>
lea    0x110c8(%rip),%rsi        # 2e8d9 <png_pass_inc.20+0x66>
callq  5060 <png_chunk_error@plt>
mov    %rdi,%rax
mov    %r15,-0x30(%rbp)
mov    %rdx,%rsi
mov    %rdi,%r15
mov    %rax,%rdi
callq  1b270 <png_crc_finish>
mov    %r15,%rdi
lea    0x1108f(%rip),%rsi        # 2e8c4 <png_pass_inc.20+0x51>
callq  5230 <png_chunk_benign_error@plt>
mov    -0x30(%rbp),%r15
leaveq 
retq   
mov    0x8(%rsi),%eax
and    $0x40,%eax
test   %eax,%eax
je     1d7b5 <png_handle_hIST+0x35>
mov    %rdi,%rax
mov    %r15,-0x30(%rbp)
mov    %rdx,%rsi
mov    %rdi,%r15
mov    %rax,%rdi
callq  1b270 <png_crc_finish>
mov    %r15,%rdi
lea    0x11079(%rip),%rsi        # 2e8e6 <png_pass_inc.20+0x73>
callq  5230 <png_chunk_benign_error@plt>
mov    -0x30(%rbp),%r15
leaveq 
retq   
mov    %rdi,%rax
mov    %r15,-0x30(%rbp)
mov    %rdx,%rsi
mov    %rdi,%r15
mov    %rax,%rdi
callq  1b270 <png_crc_finish>
mov    %r15,%rdi
lea    0x1103a(%rip),%rsi        # 2e8d1 <png_pass_inc.20+0x5e>
callq  5230 <png_chunk_benign_error@plt>
mov    -0x30(%rbp),%r15
leaveq 
retq   
mov    %rdi,%r15
mov    %r14,%rsi
mov    %r13,%rdx
callq  1b210 <png_crc_read>
movzbl -0x31(%rbp),%ecx
movzbl -0x32(%rbp),%eax
shl    $0x8,%eax
add    %eax,%ecx
mov    %ebx,%eax
mov    %cx,-0x232(%rbp,%rax,2)
add    $0x1,%ebx
mov    %r15,%rdi
cmp    %r12d,%ebx
jb     1d8a2 <png_handle_hIST+0x122>
mov    %rdi,%rbx
xor    %esi,%esi
callq  1b270 <png_crc_finish>
test   %eax,%eax
je     1d8f6 <png_handle_hIST+0x176>
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
mov    -0x10(%rbp),%rbx
mov    -0x30(%rbp),%r15
leaveq 
retq   
mov    %rbx,%rdi
lea    -0x232(%rbp),%rdx
mov    -0x8(%rbp),%rsi
callq  5190 <png_set_hIST@plt>
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
mov    -0x10(%rbp),%rbx
mov    -0x30(%rbp),%r15
leaveq 
retq   
nop

000000000001d920 <png_handle_iCCP>:
push   %rbp
mov    %rsp,%rbp
sub    $0x550,%rsp
mov    %edx,-0x54c(%rbp)
mov    0x12c(%rdi),%eax
mov    %rax,%rcx
and    $0x1,%ecx
test   %ecx,%ecx
je     1da0a <png_handle_iCCP+0xea>
and    $0x6,%eax
test   %eax,%eax
jne    1da16 <png_handle_iCCP+0xf6>
mov    -0x54c(%rbp),%eax
cmp    $0xd,%eax
jbe    1da43 <png_handle_iCCP+0x123>
movzwl 0x4e2(%rdi),%ecx
mov    %rcx,%rdx
and    $0x8000,%edx
test   %edx,%edx
jg     1da6d <png_handle_iCCP+0x14d>
xor    %r8d,%r8d
mov    %r8,-0x38(%rbp)
and    $0x4,%ecx
test   %ecx,%ecx
je     1da77 <png_handle_iCCP+0x157>
lea    0x110c3(%rip),%rcx        # 2ea53 <png_pass_inc.20+0x1e0>
test   %r8d,%r8d
jne    1d9d3 <png_handle_iCCP+0xb3>
mov    -0x54c(%rbp),%edx
mov    %rdi,%rax
mov    %r14,-0x60(%rbp)
mov    %r15,-0x68(%rbp)
mov    %r13,-0x58(%rbp)
mov    %rdi,%r13
mov    %rax,%rdi
mov    %rcx,%r14
mov    %rsi,%r15
mov    %rdx,%rsi
callq  1b270 <png_crc_finish>
mov    %r14,%rcx
mov    %r15,%rsi
mov    %r13,%rdi
mov    -0x58(%rbp),%r13
mov    -0x68(%rbp),%r15
mov    -0x60(%rbp),%r14
movzwl 0x4e2(%rdi),%eax
or     $0x8000,%ax
mov    %ax,0x4e2(%rdi)
mov    %rdi,%rax
mov    %r15,-0x68(%rbp)
mov    %rdi,-0x50(%rbp)
mov    %rax,%rdi
mov    %rcx,%r15
callq  7010 <png_colorspace_sync>
test   %r15,%r15
jne    1dac3 <png_handle_iCCP+0x1a3>
mov    -0x68(%rbp),%r15
leaveq 
retq   
lea    0x10ec8(%rip),%rsi        # 2e8d9 <png_pass_inc.20+0x66>
callq  5060 <png_chunk_error@plt>
mov    -0x54c(%rbp),%esi
mov    %rdi,%rax
mov    %r15,-0x68(%rbp)
mov    %rdi,%r15
mov    %rax,%rdi
callq  1b270 <png_crc_finish>
mov    %r15,%rdi
lea    0x10e8c(%rip),%rsi        # 2e8c4 <png_pass_inc.20+0x51>
callq  5230 <png_chunk_benign_error@plt>
mov    -0x68(%rbp),%r15
leaveq 
retq   
mov    %rdi,%rcx
mov    %r15,-0x68(%rbp)
mov    %rax,%rsi
mov    %rdi,%r15
mov    %rcx,%rdi
callq  1b270 <png_crc_finish>
mov    %r15,%rdi
lea    0x10efd(%rip),%rsi        # 2e95f <png_pass_inc.20+0xec>
callq  5230 <png_chunk_benign_error@plt>
mov    -0x68(%rbp),%r15
leaveq 
retq   
mov    %rax,%rsi
callq  1b270 <png_crc_finish>
leaveq 
retq   
cmp    $0x50,%eax
jbe    1da81 <png_handle_iCCP+0x161>
mov    $0x51,%eax
lea    -0x545(%rbp),%rcx
mov    %rdi,%r8
mov    %rax,%rdx
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rsi,-0x48(%rbp)
mov    %rcx,%rsi
mov    %rax,%r14
mov    %rdi,%r15
mov    %r8,%rdi
callq  1b210 <png_crc_read>
mov    -0x54c(%rbp),%esi
sub    %r14d,%esi
mov    %esi,-0x54c(%rbp)
cmp    $0xa,%esi
jbe    1dad5 <png_handle_iCCP+0x1b5>
xor    %eax,%eax
jmp    1db0d <png_handle_iCCP+0x1ed>
mov    %r15,%rsi
mov    -0x50(%rbp),%rdi
callq  5230 <png_chunk_benign_error@plt>
mov    -0x68(%rbp),%r15
leaveq 
retq   
mov    %r15,%rdi
callq  1b270 <png_crc_finish>
mov    %r15,%rdi
lea    0x10e78(%rip),%rsi        # 2e95f <png_pass_inc.20+0xec>
callq  5230 <png_chunk_benign_error@plt>
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
leaveq 
retq   
cmp    %eax,%r14d
jbe    1db12 <png_handle_iCCP+0x1f2>
mov    %eax,%ecx
movsbq -0x545(%rbp,%rcx,1),%rcx
test   %cl,%cl
je     1db12 <png_handle_iCCP+0x1f2>
add    $0x1,%eax
cmp    $0x4f,%eax
jbe    1daf6 <png_handle_iCCP+0x1d6>
lea    0x10f2e(%rip),%rcx        # 2ea47 <png_pass_inc.20+0x1d4>
test   %eax,%eax
jne    1db34 <png_handle_iCCP+0x214>
mov    %r15,%rdi
mov    -0x48(%rbp),%rsi
xor    %r8d,%r8d
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
jmpq   1d990 <png_handle_iCCP+0x70>
cmp    $0x4f,%eax
jbe    1db50 <png_handle_iCCP+0x230>
mov    %r15,%rdi
mov    -0x48(%rbp),%rsi
xor    %r8d,%r8d
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
jmpq   1d990 <png_handle_iCCP+0x70>
lea    0x10ed9(%rip),%rcx        # 2ea30 <png_pass_inc.20+0x1bd>
lea    0x1(%rax),%r8d
cmp    %r8d,%r14d
ja     1db77 <png_handle_iCCP+0x257>
mov    %r15,%rdi
mov    -0x48(%rbp),%rsi
xor    %r8d,%r8d
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
jmpq   1d990 <png_handle_iCCP+0x70>
mov    %r8d,%edx
movsbq -0x545(%rbp,%rdx,1),%rdx
test   %dl,%dl
je     1db9e <png_handle_iCCP+0x27e>
mov    %r15,%rdi
mov    -0x48(%rbp),%rsi
xor    %r8d,%r8d
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
jmpq   1d990 <png_handle_iCCP+0x70>
mov    $0x69434350,%esi
mov    %r15,%rdi
mov    %r13,-0x18(%rbp)
mov    %r8,-0x40(%rbp)
mov    %rax,%r13
callq  201b0 <png_inflate_claim>
test   %eax,%eax
je     1dbdc <png_handle_iCCP+0x2bc>
mov    %r15,%rdi
mov    0x170(%rdi),%rcx
mov    -0x18(%rbp),%r13
mov    -0x48(%rbp),%rsi
xor    %r8d,%r8d
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
jmpq   1d990 <png_handle_iCCP+0x70>
lea    -0x4f4(%rbp),%rdi
lea    0x10dac(%rip),%rsi        # 2e996 <png_pass_inc.20+0x123>
mov    $0x84,%edx
callq  54c0 <memcpy@plt>
movq   $0x84,-0x70(%rbp)
lea    0x2(%r13),%ecx
mov    %ecx,%eax
lea    -0x545(%rbp,%rax,1),%rax
mov    %rax,0x140(%r15)
sub    %ecx,%r14d
mov    %r14d,0x148(%r15)
sub    $0x10,%rsp
movl   $0x0,(%rsp)
lea    -0x470(%rbp),%rsi
mov    $0x400,%edx
lea    -0x54c(%rbp),%rcx
lea    -0x70(%rbp),%r9
mov    %r15,%rdi
lea    -0x4f4(%rbp),%r8
callq  207e0 <png_inflate_read>
add    $0x10,%rsp
mov    -0x70(%rbp),%rax
test   %rax,%rax
je     1dc85 <png_handle_iCCP+0x365>
mov    %r15,%rdi
mov    0x170(%rdi),%rcx
mov    -0x48(%rbp),%rsi
xor    %r8d,%r8d
movl   $0x0,0x138(%rdi)
mov    -0x18(%rbp),%r13
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
jmpq   1d990 <png_handle_iCCP+0x70>
movzbl -0x4f4(%rbp),%eax
shl    $0x18,%eax
movzbl -0x4f3(%rbp),%ecx
shl    $0x10,%ecx
add    %eax,%ecx
movzbl -0x4f2(%rbp),%eax
shl    $0x8,%eax
add    %ecx,%eax
movzbl -0x4f1(%rbp),%ecx
lea    (%rcx,%rax,1),%r13d
lea    0x498(%r15),%r14
mov    %r15,%rdi
mov    %r14,%rsi
lea    -0x545(%rbp),%rdx
mov    %r13,%rcx
callq  74a0 <png_icc_check_length>
test   %eax,%eax
jne    1dce1 <png_handle_iCCP+0x3c1>
mov    %r15,%rdi
mov    -0x48(%rbp),%rsi
xor    %r8d,%r8d
mov    %r8,%rcx
jmp    1dc6a <png_handle_iCCP+0x34a>
movzbl 0x267(%r15),%r9d
mov    %r15,%rdi
mov    %r14,%rsi
lea    -0x545(%rbp),%rdx
mov    %r13,%rcx
lea    -0x4f4(%rbp),%r8
callq  7520 <png_icc_check_header>
test   %eax,%eax
jne    1dd1b <png_handle_iCCP+0x3fb>
mov    %r15,%rdi
mov    -0x48(%rbp),%rsi
xor    %r8d,%r8d
mov    %r8,%rcx
jmpq   1dc6a <png_handle_iCCP+0x34a>
movzbl -0x471(%rbp),%r10d
movzbl -0x474(%rbp),%ecx
movzbl -0x473(%rbp),%r9d
movzbl -0x472(%rbp),%r8d
lea    0x10c28(%rip),%rax        # 2e969 <png_pass_inc.20+0xf6>
mov    %rax,-0x30(%rbp)
mov    %r13d,%esi
mov    %rsi,-0x50(%rbp)
mov    $0x2,%edx
mov    %r15,%rdi
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r14,-0x58(%rbp)
mov    %r13,-0x60(%rbp)
mov    %r10,%rbx
mov    %rcx,%r12
mov    %r8,%r13
mov    %r9,%r14
callq  200a0 <png_read_buffer>
test   %rax,%rax
jne    1dd98 <png_handle_iCCP+0x478>
mov    %r15,%rdi
lea    0x10be5(%rip),%rcx        # 2e969 <png_pass_inc.20+0xf6>
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x48(%rbp),%rsi
xor    %r8d,%r8d
jmpq   1dc6a <png_handle_iCCP+0x34a>
mov    %rax,%rdi
mov    %r15,-0x68(%rbp)
mov    %rbx,%r15
mov    %rax,%rbx
mov    $0x84,%edx
lea    -0x4f4(%rbp),%rsi
callq  54c0 <memcpy@plt>
sub    $0x10,%rsp
shl    $0x18,%r12d
shl    $0x10,%r14d
lea    (%r12,%r14,1),%eax
shl    $0x8,%r13d
add    %r13d,%eax
add    %r15d,%eax
lea    (%rax,%rax,2),%r14d
shl    $0x2,%r14d
mov    %r14d,%r15d
mov    %r15,-0x70(%rbp)
movl   $0x0,(%rsp)
lea    0x84(%rbx),%r8
mov    -0x68(%rbp),%r13
mov    %r13,%rdi
lea    -0x470(%rbp),%rsi
mov    $0x400,%edx
lea    -0x54c(%rbp),%rcx
lea    -0x70(%rbp),%r9
callq  207e0 <png_inflate_read>
add    $0x10,%rsp
mov    -0x70(%rbp),%rax
test   %rax,%rax
je     1de3b <png_handle_iCCP+0x51b>
mov    %r13,%rdi
mov    0x170(%rdi),%rcx
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x48(%rbp),%rsi
xor    %r8d,%r8d
jmpq   1dc6a <png_handle_iCCP+0x34a>
mov    %r13,%rdi
mov    -0x58(%rbp),%r12
mov    %r12,%rsi
lea    -0x545(%rbp),%rdx
mov    -0x60(%rbp),%rcx
mov    %rbx,%r8
callq  79c0 <png_icc_check_tag_table>
test   %eax,%eax
jne    1de76 <png_handle_iCCP+0x556>
mov    %r13,%rdi
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x48(%rbp),%rsi
xor    %r8d,%r8d
mov    %r8,%rcx
jmpq   1dc6a <png_handle_iCCP+0x34a>
sub    $0x10,%rsp
mov    -0x50(%rbp),%rax
add    $0xffffffffffffff7c,%rax
sub    %r15,%rax
mov    %rax,-0x70(%rbp)
movl   $0x1,(%rsp)
mov    %r14d,%eax
lea    0x84(%rbx,%rax,1),%r8
mov    %r13,%rdi
lea    -0x470(%rbp),%rsi
lea    -0x70(%rbp),%r9
lea    -0x54c(%rbp),%rcx
mov    $0x400,%edx
callq  207e0 <png_inflate_read>
add    $0x10,%rsp
lea    0x10b53(%rip),%rcx        # 2ea1a <png_pass_inc.20+0x1a7>
mov    -0x54c(%rbp),%eax
test   %eax,%eax
je     1deed <png_handle_iCCP+0x5cd>
mov    0x130(%r13),%eax
and    $0x100000,%eax
test   %eax,%eax
jne    1deed <png_handle_iCCP+0x5cd>
mov    %r13,%rdi
mov    -0x48(%rbp),%rsi
xor    %r8d,%r8d
jmp    1df03 <png_handle_iCCP+0x5e3>
mov    -0x70(%rbp),%rax
test   %rax,%rax
je     1df19 <png_handle_iCCP+0x5f9>
mov    %r13,%rdi
mov    -0x48(%rbp),%rsi
xor    %r8d,%r8d
mov    %r8,%rcx
test   %rcx,%rcx
je     1dfae <png_handle_iCCP+0x68e>
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
jmpq   1dc6a <png_handle_iCCP+0x34a>
mov    -0x54c(%rbp),%eax
test   %eax,%eax
je     1df2e <png_handle_iCCP+0x60e>
mov    %rcx,%rsi
mov    %r13,%rdi
callq  56a0 <png_chunk_warning@plt>
mov    -0x54c(%rbp),%esi
mov    %r13,%rdi
callq  1b270 <png_crc_finish>
mov    %r12,%rsi
mov    0x1a0(%r13),%rcx
mov    %r13,%rdi
mov    %rbx,%rdx
callq  7b30 <png_icc_set_sRGB>
mov    $0x1,%r8d
mov    -0x48(%rbp),%rsi
test   %rsi,%rsi
jne    1dfc2 <png_handle_iCCP+0x6a2>
mov    %r13,%rdi
xor    %eax,%eax
test   %rax,%rax
je     1df81 <png_handle_iCCP+0x661>
mov    %r8,%rbx
mov    %rdi,%r12
mov    %rsi,%r13
callq  7010 <png_colorspace_sync>
mov    %r13,%rsi
mov    %r12,%rdi
mov    %rbx,%r8
mov    -0x38(%rbp),%rcx
test   %rcx,%rcx
jne    1df03 <png_handle_iCCP+0x5e3>
movl   $0x0,0x138(%rdi)
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x18(%rbp),%r13
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
leaveq 
retq   
mov    0x170(%rdi),%rcx
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
jmpq   1dc6a <png_handle_iCCP+0x34a>
mov    %r8,%r15
mov    $0x10,%edx
mov    %r13,%rdi
mov    %rsi,%r14
xor    %ecx,%ecx
callq  5720 <png_free_data@plt>
mov    -0x40(%rbp),%rax
mov    %eax,%r12d
mov    %r13,%rdi
mov    %r12,%rsi
callq  c940 <png_malloc_base>
mov    %rax,0x80(%r14)
test   %rax,%rax
jne    1e020 <png_handle_iCCP+0x700>
movzwl 0x4e2(%r13),%eax
or     $0x8000,%ax
mov    %ax,0x4e2(%r13)
mov    %r14,%rsi
mov    %r13,%rdi
mov    %r15,%r8
mov    %r8,%rax
pushq  -0x30(%rbp)
popq   -0x38(%rbp)
jmpq   1df65 <png_handle_iCCP+0x645>
mov    %r12,%rdx
mov    %rax,%rdi
lea    -0x545(%rbp),%rsi
callq  54c0 <memcpy@plt>
mov    -0x60(%rbp),%rax
mov    %eax,0x90(%r14)
mov    %rbx,0x88(%r14)
movq   $0x0,0x458(%r13)
mov    0x12c(%r14),%eax
or     $0x10,%eax
mov    %eax,0x12c(%r14)
mov    0x8(%r14),%eax
or     $0x1000,%eax
mov    %eax,0x8(%r14)
mov    %r14,%rsi
mov    %r13,%rdi
mov    %r15,%r8
mov    %r8,%rax
jmpq   1df65 <png_handle_iCCP+0x645>
xchg   %ax,%ax

000000000001e080 <png_handle_iTXt>:
push   %rbp
mov    %rsp,%rbp
sub    $0x80,%rsp
mov    0x424(%rdi),%eax
test   %eax,%eax
jne    1e130 <png_handle_iTXt+0xb0>
mov    0x12c(%rdi),%eax
mov    %rax,%rcx
and    $0x1,%ecx
test   %ecx,%ecx
je     1e175 <png_handle_iTXt+0xf5>
mov    %rax,%rcx
and    $0x4,%ecx
test   %ecx,%ecx
je     1e0c0 <png_handle_iTXt+0x40>
or     $0x8,%eax
mov    %eax,0x12c(%rdi)
lea    0x1(%rdx),%eax
mov    %eax,%ecx
mov    $0x1,%eax
mov    %rdi,%r8
mov    %r14,-0x18(%rbp)
mov    %r15,-0x20(%rbp)
mov    %rsi,-0x28(%rbp)
mov    %rcx,%rsi
mov    %rdx,%r14
mov    %rax,%rdx
mov    %rdi,%r15
mov    %r8,%rdi
callq  200a0 <png_read_buffer>
test   %rax,%rax
je     1e181 <png_handle_iTXt+0x101>
mov    %r15,%rdi
mov    %rax,%rsi
mov    %r14,%rdx
mov    %rax,-0x38(%rbp)
callq  1b210 <png_crc_read>
xor    %eax,%eax
mov    %r15,%rdi
mov    %rax,%rsi
mov    %r15,-0x30(%rbp)
mov    %rax,%r15
callq  1b270 <png_crc_finish>
test   %eax,%eax
jne    1e1a5 <png_handle_iTXt+0x125>
mov    -0x38(%rbp),%r10
mov    %r15,%rax
jmpq   1e1bd <png_handle_iTXt+0x13d>
cmp    $0x1,%eax
je     1e1e1 <png_handle_iTXt+0x161>
add    $0xffffffff,%eax
mov    %eax,0x424(%rdi)
cmp    $0x1,%eax
jne    1e099 <png_handle_iTXt+0x19>
mov    %rdi,%rax
mov    %r15,-0x38(%rbp)
mov    %rdx,%rsi
mov    %rdi,%r15
mov    %rax,%rdi
callq  1b270 <png_crc_finish>
mov    %r15,%rdi
lea    0x108fb(%rip),%rsi        # 2ea65 <png_pass_inc.20+0x1f2>
callq  5230 <png_chunk_benign_error@plt>
mov    -0x38(%rbp),%r15
leaveq 
retq   
lea    0x1075d(%rip),%rsi        # 2e8d9 <png_pass_inc.20+0x66>
callq  5060 <png_chunk_error@plt>
mov    %r14,%rsi
mov    %r15,%rdi
callq  1b270 <png_crc_finish>
mov    %r15,%rdi
lea    0x107d3(%rip),%rsi        # 2e969 <png_pass_inc.20+0xf6>
callq  5230 <png_chunk_benign_error@plt>
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
leaveq 
retq   
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
leaveq 
retq   
mov    %eax,%ecx
movzbl (%r10,%rcx,1),%ecx
test   %cl,%cl
je     1e1c2 <png_handle_iTXt+0x142>
add    $0x1,%eax
cmp    %eax,%r14d
ja     1e1af <png_handle_iTXt+0x12f>
lea    0x1087e(%rip),%rsi        # 2ea47 <png_pass_inc.20+0x1d4>
cmp    $0x4f,%eax
jbe    1e1eb <png_handle_iTXt+0x16b>
mov    -0x30(%rbp),%rdi
test   %rsi,%rsi
jne    1e1f5 <png_handle_iTXt+0x175>
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
leaveq 
retq   
mov    %rdx,%rsi
callq  1b270 <png_crc_finish>
leaveq 
retq   
test   %eax,%eax
jne    1e204 <png_handle_iTXt+0x184>
mov    -0x30(%rbp),%rdi
jmp    1e1d2 <png_handle_iTXt+0x152>
callq  5230 <png_chunk_benign_error@plt>
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
leaveq 
retq   
lea    0x10872(%rip),%rsi        # 2ea7d <png_pass_inc.20+0x20a>
lea    0x5(%rax),%ecx
cmp    %ecx,%r14d
jae    1e219 <png_handle_iTXt+0x199>
mov    -0x30(%rbp),%rdi
jmp    1e1d2 <png_handle_iTXt+0x152>
lea    0x1(%rax),%ecx
mov    %ecx,%edi
movzbl (%r10,%rdi,1),%ecx
test   %cl,%cl
je     1e23c <png_handle_iTXt+0x1bc>
lea    0x1086d(%rip),%rdx        # 2ea9b <png_pass_inc.20+0x228>
cmp    $0x1,%cl
je     1e24a <png_handle_iTXt+0x1ca>
mov    %rdx,%rsi
mov    -0x30(%rbp),%rdi
jmp    1e1d2 <png_handle_iTXt+0x152>
movzbl (%r10,%rdi,1),%ecx
test   %cl,%cl
jne    1e264 <png_handle_iTXt+0x1e4>
mov    %r15,%r9
jmp    1e26a <png_handle_iTXt+0x1ea>
lea    0x2(%rax),%ecx
mov    %ecx,%ecx
movzbl (%r10,%rcx,1),%ecx
test   %cl,%cl
je     1e23c <png_handle_iTXt+0x1bc>
mov    %rdx,%rsi
mov    -0x30(%rbp),%rdi
jmpq   1e1d2 <png_handle_iTXt+0x152>
mov    $0x1,%r9d
movq   $0x0,-0x78(%rbp)
lea    0x3(%rax),%r8d
mov    %r8,%rax
jmp    1e289 <png_handle_iTXt+0x209>
mov    %eax,%eax
movzbl (%r10,%rax,1),%eax
test   %al,%al
je     1e297 <png_handle_iTXt+0x217>
mov    %r11,%rax
lea    0x1(%rax),%r11d
cmp    %eax,%r14d
ja     1e27b <png_handle_iTXt+0x1fb>
mov    %r11,%rcx
jmp    1e2aa <png_handle_iTXt+0x22a>
mov    %r11,%rcx
jmp    1e2aa <png_handle_iTXt+0x22a>
mov    %ecx,%ecx
movzbl (%r10,%rcx,1),%ecx
test   %cl,%cl
je     1e2b2 <png_handle_iTXt+0x232>
mov    %rax,%rcx
lea    0x1(%rcx),%eax
cmp    %ecx,%r14d
ja     1e29c <png_handle_iTXt+0x21c>
test   %r9d,%r9d
jne    1e2cf <png_handle_iTXt+0x24f>
cmp    %eax,%r14d
jb     1e2cf <png_handle_iTXt+0x24f>
sub    %eax,%r14d
mov    %r14d,%ecx
mov    %rcx,-0x78(%rbp)
mov    -0x30(%rbp),%rdi
mov    %r15,%rsi
jmp    1e2d8 <png_handle_iTXt+0x258>
test   %r9d,%r9d
jg     1e2fb <png_handle_iTXt+0x27b>
mov    -0x30(%rbp),%rdi
test   %rsi,%rsi
jne    1e1d2 <png_handle_iTXt+0x152>
mov    %eax,%edx
mov    %rdx,%rax
add    -0x78(%rbp),%rax
test   %r9d,%r9d
movb   $0x0,(%r10,%rax,1)
je     1e306 <png_handle_iTXt+0x286>
mov    $0x2,%eax
jmp    1e30b <png_handle_iTXt+0x28b>
cmp    %eax,%r14d
ja     1e362 <png_handle_iTXt+0x2e2>
mov    -0x30(%rbp),%rdi
jmp    1e2d8 <png_handle_iTXt+0x258>
mov    $0x1,%eax
mov    %r10,-0x68(%rbp)
mov    %r8d,%ecx
add    %r10,%rcx
mov    %rcx,-0x48(%rbp)
mov    %r11d,%ecx
add    %r10,%rcx
mov    %rcx,-0x40(%rbp)
lea    (%rdx,%r10,1),%rcx
mov    %rcx,-0x60(%rbp)
movq   $0x0,-0x58(%rbp)
mov    -0x78(%rbp),%rcx
mov    %rcx,-0x50(%rbp)
mov    %eax,-0x70(%rbp)
lea    -0x70(%rbp),%rdx
mov    %rdi,%r14
mov    -0x28(%rbp),%rsi
mov    $0x1,%ecx
callq  22de0 <png_set_text_2>
test   %eax,%eax
jne    1e3d5 <png_handle_iTXt+0x355>
mov    %r15,%rsi
mov    %r14,%rdi
jmpq   1e1d2 <png_handle_iTXt+0x152>
movq   $0xffffffffffffffff,-0x78(%rbp)
lea    -0x78(%rbp),%rcx
mov    -0x30(%rbp),%rsi
mov    %rsi,%rdi
mov    %rax,%rdx
mov    $0x1,%r15d
mov    %r12,-0x8(%rbp)
mov    %r13,-0x10(%rbp)
mov    %r8,-0x30(%rbp)
mov    %r11,-0x38(%rbp)
mov    %r15,%r8
mov    %rax,%r15
mov    %r10,%r12
mov    %rsi,%r13
mov    %r14,%rsi
mov    %r9,%r14
callq  20500 <png_decompress_chunk>
cmp    $0x1,%eax
je     1e3e4 <png_handle_iTXt+0x364>
mov    %r15,%rax
mov    %r13,%rdi
mov    %r14,%r9
mov    %r12,%r10
mov    0x170(%rdi),%rsi
mov    -0x38(%rbp),%r11
mov    -0x30(%rbp),%r8
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
xor    %r15d,%r15d
jmpq   1e2d8 <png_handle_iTXt+0x258>
mov    %r14,%rdi
lea    0x106a8(%rip),%rsi        # 2ea87 <png_pass_inc.20+0x214>
jmpq   1e1d2 <png_handle_iTXt+0x152>
mov    %r15,%rax
mov    %r13,%rdi
mov    %r14,%r9
mov    0x458(%rdi),%r10
mov    -0x38(%rbp),%r11
mov    -0x30(%rbp),%r8
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
xor    %r15d,%r15d
mov    %r15,%rsi
jmpq   1e2d8 <png_handle_iTXt+0x258>
nop

000000000001e410 <png_handle_oFFs>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    0x12c(%rdi),%eax
mov    %rax,%rcx
and    $0x1,%ecx
test   %ecx,%ecx
je     1e477 <png_handle_oFFs+0x67>
and    $0x4,%eax
test   %eax,%eax
jne    1e483 <png_handle_oFFs+0x73>
test   %rsi,%rsi
jne    1e4ad <png_handle_oFFs+0x9d>
cmp    $0x9,%edx
jne    1e4e7 <png_handle_oFFs+0xd7>
lea    -0x19(%rbp),%rax
mov    $0x9,%edx
mov    %rdi,%rcx
mov    %r15,-0x10(%rbp)
mov    %rsi,-0x8(%rbp)
mov    %rax,%rsi
mov    %rdi,%r15
mov    %rcx,%rdi
callq  1b210 <png_crc_read>
xor    %esi,%esi
mov    %r15,%rdi
callq  1b270 <png_crc_finish>
test   %eax,%eax
je     1e511 <png_handle_oFFs+0x101>
mov    -0x10(%rbp),%r15
leaveq 
retq   
lea    0x1045b(%rip),%rsi        # 2e8d9 <png_pass_inc.20+0x66>
callq  5060 <png_chunk_error@plt>
mov    %rdi,%rax
mov    %r15,-0x10(%rbp)
mov    %rdx,%rsi
mov    %rdi,%r15
mov    %rax,%rdi
callq  1b270 <png_crc_finish>
mov    %r15,%rdi
lea    0x10422(%rip),%rsi        # 2e8c4 <png_pass_inc.20+0x51>
callq  5230 <png_chunk_benign_error@plt>
mov    -0x10(%rbp),%r15
leaveq 
retq   
mov    0x8(%rsi),%eax
and    $0x100,%eax
test   %eax,%eax
je     1e434 <png_handle_oFFs+0x24>
mov    %rdi,%rax
mov    %r15,-0x10(%rbp)
mov    %rdx,%rsi
mov    %rdi,%r15
mov    %rax,%rdi
callq  1b270 <png_crc_finish>
mov    %r15,%rdi
lea    0x1040a(%rip),%rsi        # 2e8e6 <png_pass_inc.20+0x73>
callq  5230 <png_chunk_benign_error@plt>
mov    -0x10(%rbp),%r15
leaveq 
retq   
mov    %rdi,%rax
mov    %r15,-0x10(%rbp)
mov    %rdx,%rsi
mov    %rdi,%r15
mov    %rax,%rdi
callq  1b270 <png_crc_finish>
mov    %r15,%rdi
lea    0x103cb(%rip),%rsi        # 2e8d1 <png_pass_inc.20+0x5e>
callq  5230 <png_chunk_benign_error@plt>
mov    -0x10(%rbp),%r15
leaveq 
retq   
movzbl -0x19(%rbp),%eax
mov    %rax,%rcx
and    $0x80,%ecx
test   %ecx,%ecx
jg     1e540 <png_handle_oFFs+0x130>
shl    $0x18,%eax
movzbl -0x18(%rbp),%ecx
shl    $0x10,%ecx
add    %eax,%ecx
movzbl -0x17(%rbp),%eax
shl    $0x8,%eax
add    %ecx,%eax
movzbl -0x16(%rbp),%ecx
lea    (%rcx,%rax,1),%edx
jmp    1e566 <png_handle_oFFs+0x156>
shl    $0x18,%eax
movzbl -0x18(%rbp),%ecx
shl    $0x10,%ecx
add    %eax,%ecx
movzbl -0x17(%rbp),%eax
shl    $0x8,%eax
add    %ecx,%eax
movzbl -0x16(%rbp),%ecx
lea    (%rcx,%rax,1),%edx
neg    %edx
and    $0x7fffffff,%edx
neg    %edx
movzbl -0x15(%rbp),%eax
mov    %rax,%rcx
and    $0x80,%ecx
test   %ecx,%ecx
jg     1e594 <png_handle_oFFs+0x184>
shl    $0x18,%eax
movzbl -0x14(%rbp),%ecx
shl    $0x10,%ecx
add    %eax,%ecx
movzbl -0x13(%rbp),%eax
shl    $0x8,%eax
add    %ecx,%eax
movzbl -0x12(%rbp),%ecx
add    %eax,%ecx
jmp    1e5b9 <png_handle_oFFs+0x1a9>
shl    $0x18,%eax
movzbl -0x14(%rbp),%ecx
shl    $0x10,%ecx
add    %eax,%ecx
movzbl -0x13(%rbp),%eax
shl    $0x8,%eax
add    %ecx,%eax
movzbl -0x12(%rbp),%ecx
add    %eax,%ecx
neg    %ecx
and    $0x7fffffff,%ecx
neg    %ecx
mov    %r15,%rdi
movzbl -0x11(%rbp),%r8d
mov    -0x8(%rbp),%rsi
callq  55e0 <png_set_oFFs@plt>
mov    -0x10(%rbp),%r15
leaveq 
retq   

000000000001e5d0 <png_handle_pCAL>:
push   %rbp
mov    %rsp,%rbp
sub    $0x50,%rsp
mov    0x12c(%rdi),%eax
mov    %rax,%rcx
and    $0x1,%ecx
test   %ecx,%ecx
je     1e65c <png_handle_pCAL+0x8c>
and    $0x4,%eax
test   %eax,%eax
jne    1e668 <png_handle_pCAL+0x98>
test   %rsi,%rsi
jne    1e692 <png_handle_pCAL+0xc2>
lea    0x1(%rdx),%eax
mov    %eax,%eax
mov    $0x2,%ecx
mov    %rdi,%r8
mov    %r15,-0x40(%rbp)
mov    %r14,-0x38(%rbp)
mov    %rsi,-0x8(%rbp)
mov    %rax,%rsi
mov    %rdx,%r14
mov    %rcx,%rdx
mov    %rdi,%r15
mov    %r8,%rdi
callq  200a0 <png_read_buffer>
test   %rax,%rax
je     1e6cc <png_handle_pCAL+0xfc>
mov    %r15,%rdi
mov    %rax,%rsi
mov    %r14,%rdx
mov    %rax,-0x50(%rbp)
callq  1b210 <png_crc_read>
xor    %esi,%esi
mov    %r15,%rdi
callq  1b270 <png_crc_finish>
test   %eax,%eax
je     1e6f0 <png_handle_pCAL+0x120>
mov    -0x38(%rbp),%r14
mov    -0x40(%rbp),%r15
leaveq 
retq   
lea    0x10276(%rip),%rsi        # 2e8d9 <png_pass_inc.20+0x66>
callq  5060 <png_chunk_error@plt>
mov    %rdi,%rax
mov    %r15,-0x50(%rbp)
mov    %rdx,%rsi
mov    %rdi,%r15
mov    %rax,%rdi
callq  1b270 <png_crc_finish>
mov    %r15,%rdi
lea    0x1023d(%rip),%rsi        # 2e8c4 <png_pass_inc.20+0x51>
callq  5230 <png_chunk_benign_error@plt>
mov    -0x50(%rbp),%r15
leaveq 
retq   
mov    0x8(%rsi),%eax
and    $0x400,%eax
test   %eax,%eax
je     1e5f8 <png_handle_pCAL+0x28>
mov    %rdi,%rax
mov    %r15,-0x50(%rbp)
mov    %rdx,%rsi
mov    %rdi,%r15
mov    %rax,%rdi
callq  1b270 <png_crc_finish>
mov    %r15,%rdi
lea    0x10225(%rip),%rsi        # 2e8e6 <png_pass_inc.20+0x73>
callq  5230 <png_chunk_benign_error@plt>
mov    -0x50(%rbp),%r15
leaveq 
retq   
mov    %r14,%rsi
mov    %r15,%rdi
callq  1b270 <png_crc_finish>
mov    %r15,%rdi
lea    0x10288(%rip),%rsi        # 2e969 <png_pass_inc.20+0xf6>
callq  5230 <png_chunk_benign_error@plt>
mov    -0x38(%rbp),%r14
mov    -0x40(%rbp),%r15
leaveq 
retq   
mov    %r14d,%ecx
mov    -0x50(%rbp),%rax
lea    (%rax,%rcx,1),%r8
movb   $0x0,(%r8)
jmp    1e705 <png_handle_pCAL+0x135>
add    $0x1,%rax
movzbl (%rax),%ecx
test   %cl,%cl
jne    1e701 <png_handle_pCAL+0x131>
mov    %r8,%rcx
sub    %rax,%rcx
cmp    $0xc,%rcx
jle    1e746 <png_handle_pCAL+0x176>
movzbl 0x1(%rax),%ecx
mov    %rcx,%rdx
and    $0x80,%edx
test   %edx,%edx
jg     1e75f <png_handle_pCAL+0x18f>
shl    $0x18,%ecx
movzbl 0x2(%rax),%edx
shl    $0x10,%edx
add    %ecx,%edx
movzbl 0x3(%rax),%ecx
shl    $0x8,%ecx
add    %edx,%ecx
movzbl 0x4(%rax),%edx
add    %edx,%ecx
jmp    1e784 <png_handle_pCAL+0x1b4>
mov    %r15,%rdi
lea    0x10181(%rip),%rsi        # 2e8d1 <png_pass_inc.20+0x5e>
callq  5230 <png_chunk_benign_error@plt>
mov    -0x38(%rbp),%r14
mov    -0x40(%rbp),%r15
leaveq 
retq   
shl    $0x18,%ecx
movzbl 0x2(%rax),%edx
shl    $0x10,%edx
add    %ecx,%edx
movzbl 0x3(%rax),%ecx
shl    $0x8,%ecx
add    %edx,%ecx
movzbl 0x4(%rax),%edx
add    %edx,%ecx
neg    %ecx
and    $0x7fffffff,%ecx
neg    %ecx
movzbl 0x5(%rax),%edx
mov    %rdx,%rsi
and    $0x80,%esi
test   %esi,%esi
jg     1e7b2 <png_handle_pCAL+0x1e2>
shl    $0x18,%edx
movzbl 0x6(%rax),%esi
shl    $0x10,%esi
add    %edx,%esi
movzbl 0x7(%rax),%edx
shl    $0x8,%edx
add    %esi,%edx
movzbl 0x8(%rax),%esi
add    %esi,%edx
jmp    1e7d7 <png_handle_pCAL+0x207>
shl    $0x18,%edx
movzbl 0x6(%rax),%esi
shl    $0x10,%esi
add    %edx,%esi
movzbl 0x7(%rax),%edx
shl    $0x8,%edx
add    %esi,%edx
movzbl 0x8(%rax),%esi
add    %esi,%edx
neg    %edx
and    $0x7fffffff,%edx
neg    %edx
movzbl 0xa(%rax),%r14d
movzbl 0x9(%rax),%r9d
test   %r9b,%r9b
jne    1e805 <png_handle_pCAL+0x235>
cmp    $0x2,%r14b
je     1e805 <png_handle_pCAL+0x235>
mov    %r15,%rdi
lea    0x102ba(%rip),%rsi        # 2eab0 <png_pass_inc.20+0x23d>
callq  5230 <png_chunk_benign_error@plt>
mov    -0x38(%rbp),%r14
mov    -0x40(%rbp),%r15
leaveq 
retq   
cmp    $0x1,%r9b
jne    1e811 <png_handle_pCAL+0x241>
cmp    $0x3,%r14b
jne    1e7ec <png_handle_pCAL+0x21c>
cmp    $0x2,%r9b
jne    1e81d <png_handle_pCAL+0x24d>
cmp    $0x3,%r14b
jne    1e7ec <png_handle_pCAL+0x21c>
cmp    $0x3,%r9b
jne    1e829 <png_handle_pCAL+0x259>
cmp    $0x4,%r14b
jne    1e7ec <png_handle_pCAL+0x21c>
add    $0xb,%rax
cmp    $0x3,%r9b
ja     1e844 <png_handle_pCAL+0x274>
mov    %r13,-0x30(%rbp)
mov    %r8,-0x48(%rbp)
mov    %r9,-0x20(%rbp)
mov    %rax,%r13
jmp    1e87b <png_handle_pCAL+0x2ab>
lea    0x1027d(%rip),%rsi        # 2eac8 <png_pass_inc.20+0x255>
mov    %r15,%rdi
mov    %r13,-0x30(%rbp)
mov    %r8,-0x48(%rbp)
mov    %rcx,-0x18(%rbp)
mov    %rdx,-0x28(%rbp)
mov    %r9,-0x20(%rbp)
mov    %rax,%r13
callq  5230 <png_chunk_benign_error@plt>
mov    -0x28(%rbp),%rdx
mov    -0x18(%rbp),%rcx
mov    %r13,%rax
jmp    1e87b <png_handle_pCAL+0x2ab>
add    $0x1,%r13
movzbl 0x0(%r13),%esi
test   %sil,%sil
jne    1e877 <png_handle_pCAL+0x2a7>
mov    %r14,%rsi
shl    $0x3,%rsi
mov    %r15,%rdi
mov    %rcx,-0x10(%rbp)
mov    %rdx,-0x18(%rbp)
mov    %rax,-0x28(%rbp)
callq  5150 <png_malloc_warn@plt>
test   %rax,%rax
je     1e8b5 <png_handle_pCAL+0x2e5>
mov    -0x18(%rbp),%r8
mov    -0x10(%rbp),%rcx
mov    -0x48(%rbp),%rdi
xor    %edx,%edx
jmp    1e8da <png_handle_pCAL+0x30a>
mov    %r15,%rdi
lea    0x100aa(%rip),%rsi        # 2e969 <png_pass_inc.20+0xf6>
callq  5230 <png_chunk_benign_error@plt>
mov    -0x30(%rbp),%r13
mov    -0x38(%rbp),%r14
mov    -0x40(%rbp),%r15
leaveq 
retq   
cmp    %r13,%rdi
jb     1e929 <png_handle_pCAL+0x359>
add    $0x1,%edx
cmp    %edx,%r14d
jg     1e951 <png_handle_pCAL+0x381>
sub    $0x20,%rsp
mov    %r14d,(%rsp)
mov    -0x28(%rbp),%rdx
mov    %rdx,0x8(%rsp)
mov    %rax,%r13
mov    %r13,0x10(%rsp)
mov    %r15,%rdi
mov    -0x20(%rbp),%r9
mov    -0x50(%rbp),%rdx
mov    -0x8(%rbp),%rsi
callq  51b0 <png_set_pCAL@plt>
mov    %r13,%rsi
mov    %r15,%rdi
add    $0x20,%rsp
callq  5790 <png_free@plt>
mov    -0x30(%rbp),%r13
mov    -0x38(%rbp),%r14
mov    -0x40(%rbp),%r15
leaveq 
retq   
mov    %rax,%rsi
mov    %r15,%rdi
callq  5790 <png_free@plt>
mov    %r15,%rdi
lea    0x101a5(%rip),%rsi        # 2eae3 <png_pass_inc.20+0x270>
callq  5230 <png_chunk_benign_error@plt>
mov    -0x30(%rbp),%r13
mov    -0x38(%rbp),%r14
mov    -0x40(%rbp),%r15
leaveq 
retq   
add    $0x1,%r13
movslq %edx,%rsi
mov    %r13,(%rax,%rsi,8)
jmp    1e970 <png_handle_pCAL+0x3a0>
movzbl 0x0(%r13),%esi
test   %sil,%sil
je     1e8d2 <png_handle_pCAL+0x302>
add    $0x1,%r13
cmp    %r13,%rdi
jae    1e95e <png_handle_pCAL+0x38e>
jmpq   1e8d2 <png_handle_pCAL+0x302>
nopw   0x0(%rax,%rax,1)

000000000001e980 <png_handle_pHYs>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    0x12c(%rdi),%eax
mov    %rax,%rcx
and    $0x1,%ecx
test   %ecx,%ecx
je     1e9e7 <png_handle_pHYs+0x67>
and    $0x4,%eax
test   %eax,%eax
jne    1e9f3 <png_handle_pHYs+0x73>
test   %rsi,%rsi
jne    1ea1d <png_handle_pHYs+0x9d>
cmp    $0x9,%edx
jne    1ea57 <png_handle_pHYs+0xd7>
lea    -0x19(%rbp),%rcx
mov    $0x9,%edx
mov    %rdi,%rax
mov    %r15,-0x10(%rbp)
mov    %rsi,-0x8(%rbp)
mov    %rcx,%rsi
mov    %rdi,%r15
mov    %rax,%rdi
callq  1b210 <png_crc_read>
xor    %esi,%esi
mov    %r15,%rdi
callq  1b270 <png_crc_finish>
test   %eax,%eax
je     1ea81 <png_handle_pHYs+0x101>
mov    -0x10(%rbp),%r15
leaveq 
retq   
lea    0xfeeb(%rip),%rsi        # 2e8d9 <png_pass_inc.20+0x66>
callq  5060 <png_chunk_error@plt>
mov    %rdi,%rax
mov    %r15,-0x10(%rbp)
mov    %rdx,%rsi
mov    %rdi,%r15
mov    %rax,%rdi
callq  1b270 <png_crc_finish>
mov    %r15,%rdi
lea    0xfeb2(%rip),%rsi        # 2e8c4 <png_pass_inc.20+0x51>
callq  5230 <png_chunk_benign_error@plt>
mov    -0x10(%rbp),%r15
leaveq 
retq   
mov    0x8(%rsi),%eax
and    $0x80,%eax
test   %eax,%eax
je     1e9a4 <png_handle_pHYs+0x24>
mov    %rdi,%rax
mov    %r15,-0x10(%rbp)
mov    %rdx,%rsi
mov    %rdi,%r15
mov    %rax,%rdi
callq  1b270 <png_crc_finish>
mov    %r15,%rdi
lea    0xfe9a(%rip),%rsi        # 2e8e6 <png_pass_inc.20+0x73>
callq  5230 <png_chunk_benign_error@plt>
mov    -0x10(%rbp),%r15
leaveq 
retq   
mov    %rdi,%rax
mov    %r15,-0x10(%rbp)
mov    %rdx,%rsi
mov    %rdi,%r15
mov    %rax,%rdi
callq  1b270 <png_crc_finish>
mov    %r15,%rdi
lea    0xfe5b(%rip),%rsi        # 2e8d1 <png_pass_inc.20+0x5e>
callq  5230 <png_chunk_benign_error@plt>
mov    -0x10(%rbp),%r15
leaveq 
retq   
movzbl -0x19(%rbp),%ecx
shl    $0x18,%ecx
movzbl -0x18(%rbp),%eax
shl    $0x10,%eax
add    %eax,%ecx
movzbl -0x17(%rbp),%eax
shl    $0x8,%eax
add    %ecx,%eax
movzbl -0x16(%rbp),%ecx
lea    (%rcx,%rax,1),%edx
movzbl -0x15(%rbp),%eax
shl    $0x18,%eax
movzbl -0x14(%rbp),%ecx
shl    $0x10,%ecx
add    %eax,%ecx
movzbl -0x13(%rbp),%eax
shl    $0x8,%eax
add    %ecx,%eax
movzbl -0x12(%rbp),%ecx
add    %eax,%ecx
mov    %r15,%rdi
movzbl -0x11(%rbp),%r8d
mov    -0x8(%rbp),%rsi
callq  5610 <png_set_pHYs@plt>
mov    -0x10(%rbp),%r15
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

000000000001eae0 <png_handle_sBIT>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    0x12c(%rdi),%eax
mov    %rax,%rcx
and    $0x1,%ecx
test   %ecx,%ecx
je     1eb9e <png_handle_sBIT+0xbe>
and    $0x6,%eax
test   %eax,%eax
jne    1ebaa <png_handle_sBIT+0xca>
test   %rsi,%rsi
jne    1ebd4 <png_handle_sBIT+0xf4>
movzbl 0x267(%rdi),%eax
cmp    $0x3,%al
jne    1ec0c <png_handle_sBIT+0x12c>
mov    $0x8,%eax
mov    $0x3,%ecx
lea    0xfda1(%rip),%r8        # 2e8d1 <png_pass_inc.20+0x5e>
cmp    %edx,%ecx
jne    1ec1f <png_handle_sBIT+0x13f>
cmp    $0x4,%edx
ja     1ec1f <png_handle_sBIT+0x13f>
mov    %al,-0x29(%rbp)
mov    %al,-0x2a(%rbp)
mov    %al,-0x2b(%rbp)
mov    %al,-0x2c(%rbp)
lea    -0x2c(%rbp),%r8
mov    %rdi,%r9
mov    %rcx,%rdx
mov    %r15,-0x10(%rbp)
mov    %rcx,-0x28(%rbp)
mov    %rax,-0x20(%rbp)
mov    %rsi,-0x8(%rbp)
mov    %r8,%rsi
mov    %rdi,%r15
mov    %r9,%rdi
callq  1b210 <png_crc_read>
xor    %eax,%eax
mov    %r15,%rdi
mov    %rax,%rsi
mov    %r15,-0x18(%rbp)
mov    %rax,%r15
callq  1b270 <png_crc_finish>
test   %eax,%eax
jne    1ec50 <png_handle_sBIT+0x170>
mov    -0x20(%rbp),%rcx
mov    -0x28(%rbp),%rdx
jmpq   1ec6a <png_handle_sBIT+0x18a>
lea    0xfd34(%rip),%rsi        # 2e8d9 <png_pass_inc.20+0x66>
callq  5060 <png_chunk_error@plt>
mov    %rdi,%rax
mov    %r15,-0x28(%rbp)
mov    %rdx,%rsi
mov    %rdi,%r15
mov    %rax,%rdi
callq  1b270 <png_crc_finish>
mov    %r15,%rdi
lea    0xfcfb(%rip),%rsi        # 2e8c4 <png_pass_inc.20+0x51>
callq  5230 <png_chunk_benign_error@plt>
mov    -0x28(%rbp),%r15
leaveq 
retq   
mov    0x8(%rsi),%eax
and    $0x2,%eax
test   %eax,%eax
je     1eb10 <png_handle_sBIT+0x30>
mov    %rdi,%rax
mov    %r15,-0x28(%rbp)
mov    %rdx,%rsi
mov    %rdi,%r15
mov    %rax,%rdi
callq  1b270 <png_crc_finish>
mov    %r15,%rdi
lea    0xfce5(%rip),%rsi        # 2e8e6 <png_pass_inc.20+0x73>
callq  5230 <png_chunk_benign_error@plt>
mov    -0x28(%rbp),%r15
leaveq 
retq   
movzbl 0x26b(%rdi),%ecx
movzbl 0x268(%rdi),%eax
jmpq   1eb29 <png_handle_sBIT+0x49>
mov    %rdi,%rax
mov    %r15,-0x28(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r8,%rsi
mov    %rdx,%r14
mov    %rdi,%r15
mov    %rax,%rdi
callq  5230 <png_chunk_benign_error@plt>
mov    %r14,%rsi
mov    %r15,%rdi
callq  1b270 <png_crc_finish>
mov    -0x20(%rbp),%r14
mov    -0x28(%rbp),%r15
leaveq 
retq   
mov    -0x10(%rbp),%r15
leaveq 
retq   
mov    %r15d,%eax
movzbl -0x2c(%rbp,%rax,1),%eax
test   %al,%al
je     1ecac <png_handle_sBIT+0x1cc>
cmp    %al,%cl
jb     1ecac <png_handle_sBIT+0x1cc>
add    $0x1,%r15d
cmp    %r15d,%edx
ja     1ec56 <png_handle_sBIT+0x176>
mov    -0x18(%rbp),%rdi
lea    0x2d8(%rdi),%rdx
movzbl 0x267(%rdi),%eax
and    $0x2,%eax
test   %eax,%eax
jg     1ecc2 <png_handle_sBIT+0x1e2>
movzbl -0x2c(%rbp),%eax
mov    %al,0x2db(%rdi)
mov    %al,(%rdx)
mov    %al,0x2d9(%rdi)
mov    %al,0x2da(%rdi)
movzbl -0x2b(%rbp),%eax
mov    %al,0x2dc(%rdi)
jmp    1ece6 <png_handle_sBIT+0x206>
mov    -0x18(%rbp),%rdi
lea    0xfc1a(%rip),%rsi        # 2e8d1 <png_pass_inc.20+0x5e>
callq  5230 <png_chunk_benign_error@plt>
mov    -0x10(%rbp),%r15
leaveq 
retq   
movzbl -0x2c(%rbp),%eax
mov    %al,(%rdx)
movzbl -0x2b(%rbp),%eax
mov    %al,0x2d9(%rdi)
movzbl -0x2a(%rbp),%eax
mov    %al,0x2da(%rdi)
movzbl -0x29(%rbp),%eax
mov    %al,0x2dc(%rdi)
mov    -0x8(%rbp),%rsi
callq  51d0 <png_set_sBIT@plt>
mov    -0x10(%rbp),%r15
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)

000000000001ed00 <png_handle_sCAL>:
push   %rbp
mov    %rsp,%rbp
sub    $0x50,%rsp
mov    0x12c(%rdi),%eax
mov    %rax,%rcx
and    $0x1,%ecx
test   %ecx,%ecx
je     1edb2 <png_handle_sCAL+0xb2>
and    $0x4,%eax
test   %eax,%eax
jne    1edbe <png_handle_sCAL+0xbe>
test   %rsi,%rsi
jne    1ede8 <png_handle_sCAL+0xe8>
cmp    $0x3,%edx
jbe    1ee22 <png_handle_sCAL+0x122>
lea    0x1(%rdx),%eax
mov    %eax,%r8d
mov    $0x2,%eax
mov    %rdi,%rcx
mov    %r15,-0x28(%rbp)
mov    %r14,-0x20(%rbp)
mov    %rsi,-0x8(%rbp)
mov    %r8,%rsi
mov    %rdx,%r14
mov    %rax,%rdx
mov    %rdi,%r15
mov    %rcx,%rdi
callq  200a0 <png_read_buffer>
test   %rax,%rax
je     1ee4c <png_handle_sCAL+0x14c>
mov    %r15,%rdi
mov    %rax,%rsi
mov    %r14,%rdx
mov    %r13,-0x18(%rbp)
mov    %rax,%r13
callq  1b210 <png_crc_read>
mov    %r14d,%eax
movb   $0x0,0x0(%r13,%rax,1)
xor    %esi,%esi
mov    %rsi,-0x38(%rbp)
mov    %r15,%rdi
callq  1b270 <png_crc_finish>
test   %eax,%eax
je     1ee70 <png_handle_sCAL+0x170>
mov    -0x18(%rbp),%r13
mov    -0x20(%rbp),%r14
mov    -0x28(%rbp),%r15
leaveq 
retq   
lea    0xfb20(%rip),%rsi        # 2e8d9 <png_pass_inc.20+0x66>
callq  5060 <png_chunk_error@plt>
mov    %rdi,%rax
mov    %r15,-0x38(%rbp)
mov    %rdx,%rsi
mov    %rdi,%r15
mov    %rax,%rdi
callq  1b270 <png_crc_finish>
mov    %r15,%rdi
lea    0xfae7(%rip),%rsi        # 2e8c4 <png_pass_inc.20+0x51>
callq  5230 <png_chunk_benign_error@plt>
mov    -0x38(%rbp),%r15
leaveq 
retq   
mov    0x8(%rsi),%eax
and    $0x4000,%eax
test   %eax,%eax
je     1ed30 <png_handle_sCAL+0x30>
mov    %rdi,%rax
mov    %r15,-0x38(%rbp)
mov    %rdx,%rsi
mov    %rdi,%r15
mov    %rax,%rdi
callq  1b270 <png_crc_finish>
mov    %r15,%rdi
lea    0xfacf(%rip),%rsi        # 2e8e6 <png_pass_inc.20+0x73>
callq  5230 <png_chunk_benign_error@plt>
mov    -0x38(%rbp),%r15
leaveq 
retq   
mov    %rdi,%rax
mov    %r15,-0x38(%rbp)
mov    %rdx,%rsi
mov    %rdi,%r15
mov    %rax,%rdi
callq  1b270 <png_crc_finish>
mov    %r15,%rdi
lea    0xfa90(%rip),%rsi        # 2e8d1 <png_pass_inc.20+0x5e>
callq  5230 <png_chunk_benign_error@plt>
mov    -0x38(%rbp),%r15
leaveq 
retq   
lea    0xfb16(%rip),%rsi        # 2e969 <png_pass_inc.20+0xf6>
mov    %r15,%rdi
callq  5230 <png_chunk_benign_error@plt>
mov    %r14,%rsi
mov    %r15,%rdi
callq  1b270 <png_crc_finish>
mov    -0x20(%rbp),%r14
mov    -0x28(%rbp),%r15
leaveq 
retq   
movzbl 0x0(%r13),%eax
cmp    $0x1,%al
jne    1ef6e <png_handle_sCAL+0x26e>
movq   $0x1,-0x48(%rbp)
movl   $0x0,-0x3c(%rbp)
mov    %r14d,%r14d
lea    -0x3c(%rbp),%rdx
lea    -0x48(%rbp),%rcx
mov    %r13,%rdi
mov    %r14,%rsi
callq  86b0 <png_check_fp_number>
test   %eax,%eax
je     1ef93 <png_handle_sCAL+0x293>
mov    -0x48(%rbp),%rdx
cmp    %rdx,%r14
jbe    1ef93 <png_handle_sCAL+0x293>
lea    0x1(%rdx),%rax
mov    %rax,-0x48(%rbp)
movzbl 0x0(%r13,%rdx,1),%eax
test   %al,%al
jne    1ef93 <png_handle_sCAL+0x293>
mov    $0x1,%ecx
mov    %rcx,-0x30(%rbp)
movslq -0x3c(%rbp),%rax
and    $0x188,%eax
cmp    $0x108,%eax
je     1eee8 <png_handle_sCAL+0x1e8>
xor    %ecx,%ecx
test   %ecx,%ecx
je     1efb0 <png_handle_sCAL+0x2b0>
movl   $0x0,-0x3c(%rbp)
mov    %r13,%rdi
mov    %r14,%rsi
mov    %rdx,-0x10(%rbp)
lea    -0x48(%rbp),%rcx
lea    -0x3c(%rbp),%rdx
callq  86b0 <png_check_fp_number>
test   %eax,%eax
je     1efcd <png_handle_sCAL+0x2cd>
cmp    -0x48(%rbp),%r14
jne    1efcd <png_handle_sCAL+0x2cd>
movslq -0x3c(%rbp),%rax
and    $0x188,%eax
cmp    $0x108,%eax
jne    1ef36 <png_handle_sCAL+0x236>
pushq  -0x30(%rbp)
popq   -0x38(%rbp)
mov    -0x38(%rbp),%rax
test   %eax,%eax
je     1efea <png_handle_sCAL+0x2ea>
mov    -0x10(%rbp),%rax
lea    0x1(%r13,%rax,1),%r8
movzbl 0x0(%r13),%edx
lea    0x1(%r13),%rcx
mov    %r15,%rdi
mov    -0x8(%rbp),%rsi
callq  5660 <png_set_sCAL_s@plt>
mov    -0x18(%rbp),%r13
mov    -0x20(%rbp),%r14
mov    -0x28(%rbp),%r15
leaveq 
retq   
cmp    $0x2,%al
je     1ee7d <png_handle_sCAL+0x17d>
mov    %r15,%rdi
lea    0xfb70(%rip),%rsi        # 2eaf0 <png_pass_inc.20+0x27d>
callq  5230 <png_chunk_benign_error@plt>
mov    -0x18(%rbp),%r13
mov    -0x20(%rbp),%r14
mov    -0x28(%rbp),%r15
leaveq 
retq   
mov    %r15,%rdi
lea    0xfb60(%rip),%rsi        # 2eafd <png_pass_inc.20+0x28a>
callq  5230 <png_chunk_benign_error@plt>
mov    -0x18(%rbp),%r13
mov    -0x20(%rbp),%r14
mov    -0x28(%rbp),%r15
leaveq 
retq   
mov    %r15,%rdi
lea    0xfb54(%rip),%rsi        # 2eb0e <png_pass_inc.20+0x29b>
callq  5230 <png_chunk_benign_error@plt>
mov    -0x18(%rbp),%r13
mov    -0x20(%rbp),%r14
mov    -0x28(%rbp),%r15
leaveq 
retq   
mov    %r15,%rdi
lea    0xfb4a(%rip),%rsi        # 2eb21 <png_pass_inc.20+0x2ae>
callq  5230 <png_chunk_benign_error@plt>
mov    -0x18(%rbp),%r13
mov    -0x20(%rbp),%r14
mov    -0x28(%rbp),%r15
leaveq 
retq   
mov    %r15,%rdi
lea    0xfb3f(%rip),%rsi        # 2eb33 <png_pass_inc.20+0x2c0>
callq  5230 <png_chunk_benign_error@plt>
mov    -0x18(%rbp),%r13
mov    -0x20(%rbp),%r14
mov    -0x28(%rbp),%r15
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

000000000001f010 <png_handle_sPLT>:
push   %rbp
mov    %rsp,%rbp
sub    $0x40,%rsp
mov    0x424(%rdi),%eax
test   %eax,%eax
jne    1f0aa <png_handle_sPLT+0x9a>
mov    0x12c(%rdi),%eax
mov    %rax,%rcx
and    $0x1,%ecx
test   %ecx,%ecx
je     1f0fa <png_handle_sPLT+0xea>
and    $0x4,%eax
test   %eax,%eax
jne    1f106 <png_handle_sPLT+0xf6>
lea    0x1(%rdx),%eax
mov    %eax,%ecx
mov    $0x2,%r8d
mov    %rdi,%rax
mov    %r14,-0x10(%rbp)
mov    %r15,-0x18(%rbp)
mov    %rsi,-0x8(%rbp)
mov    %rcx,%rsi
mov    %rdx,%r14
mov    %r8,%rdx
mov    %rdi,%r15
mov    %rax,%rdi
callq  200a0 <png_read_buffer>
test   %rax,%rax
je     1f130 <png_handle_sPLT+0x120>
mov    %r15,%rdi
mov    %rax,%rsi
mov    %r14,%rdx
mov    %rax,-0x20(%rbp)
callq  1b210 <png_crc_read>
xor    %esi,%esi
mov    %r15,%rdi
callq  1b270 <png_crc_finish>
test   %eax,%eax
je     1f154 <png_handle_sPLT+0x144>
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
leaveq 
retq   
cmp    $0x1,%eax
je     1f164 <png_handle_sPLT+0x154>
add    $0xffffffff,%eax
mov    %eax,0x424(%rdi)
cmp    $0x1,%eax
jne    1f026 <png_handle_sPLT+0x16>
lea    0xfa7b(%rip),%rsi        # 2eb47 <png_pass_inc.20+0x2d4>
mov    %rdi,%rax
mov    %r14,-0x18(%rbp)
mov    %r15,-0x20(%rbp)
mov    %rdx,%r14
mov    %rdi,%r15
mov    %rax,%rdi
callq  5390 <png_warning@plt>
mov    %r14,%rsi
mov    %r15,%rdi
callq  1b270 <png_crc_finish>
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
leaveq 
retq   
lea    0xf7d8(%rip),%rsi        # 2e8d9 <png_pass_inc.20+0x66>
callq  5060 <png_chunk_error@plt>
mov    %rdi,%rax
mov    %r15,-0x20(%rbp)
mov    %rdx,%rsi
mov    %rdi,%r15
mov    %rax,%rdi
callq  1b270 <png_crc_finish>
mov    %r15,%rdi
lea    0xf79f(%rip),%rsi        # 2e8c4 <png_pass_inc.20+0x51>
callq  5230 <png_chunk_benign_error@plt>
mov    -0x20(%rbp),%r15
leaveq 
retq   
mov    %r14,%rsi
mov    %r15,%rdi
callq  1b270 <png_crc_finish>
mov    %r15,%rdi
lea    0xf824(%rip),%rsi        # 2e969 <png_pass_inc.20+0xf6>
callq  5230 <png_chunk_benign_error@plt>
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
leaveq 
retq   
mov    %r14d,%eax
mov    -0x20(%rbp),%rdi
movb   $0x0,(%rdi,%rax,1)
mov    %rdi,%rdx
jmp    1f171 <png_handle_sPLT+0x161>
mov    %rdx,%rsi
callq  1b270 <png_crc_finish>
leaveq 
retq   
mov    %rcx,%rdx
lea    0x1(%rdx),%rcx
movzbl (%rdx),%eax
test   %al,%al
jne    1f16e <png_handle_sPLT+0x15e>
cmp    $0x1,%r14d
jbe    1f19e <png_handle_sPLT+0x18e>
lea    -0x2(%r14),%eax
mov    %eax,%eax
add    %rdi,%rax
cmp    %rax,%rcx
ja     1f19e <png_handle_sPLT+0x18e>
movzbl (%rcx),%eax
cmp    $0x8,%al
je     1f1b7 <png_handle_sPLT+0x1a7>
mov    $0xa,%ecx
jmp    1f1bc <png_handle_sPLT+0x1ac>
mov    %r15,%rdi
lea    0xf9c0(%rip),%rsi        # 2eb68 <png_pass_inc.20+0x2f5>
callq  5390 <png_warning@plt>
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
leaveq 
retq   
mov    $0x6,%ecx
mov    %al,-0x38(%rbp)
lea    0x2(%rdx),%rsi
mov    %rsi,%rax
sub    %rdi,%rax
sub    %eax,%r14d
xor    %edx,%edx
mov    %r14,%rax
div    %ecx
test   %edx,%edx
jne    1f204 <png_handle_sPLT+0x1f4>
mov    %r14,%rax
mov    %rsi,%r14
xor    %edx,%edx
div    %ecx
mov    %eax,-0x28(%rbp)
movslq %eax,%rax
lea    (%rax,%rax,4),%rax
lea    (%rax,%rax,1),%rsi
mov    %r15,%rdi
callq  5150 <png_malloc_warn@plt>
mov    %rax,-0x30(%rbp)
test   %rax,%rax
je     1f21d <png_handle_sPLT+0x20d>
xor    %eax,%eax
jmp    1f273 <png_handle_sPLT+0x263>
mov    %r15,%rdi
lea    0xf96f(%rip),%rsi        # 2eb7d <png_pass_inc.20+0x30a>
callq  5390 <png_warning@plt>
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
leaveq 
retq   
mov    %r15,%rdi
lea    0xf970(%rip),%rsi        # 2eb97 <png_pass_inc.20+0x324>
callq  5390 <png_warning@plt>
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
leaveq 
retq   
movzbl (%r14),%ecx
mov    %cx,(%rsi)
movzbl 0x1(%r14),%ecx
mov    %cx,0x2(%rsi)
movzbl 0x2(%r14),%ecx
mov    %cx,0x4(%rsi)
movzbl 0x3(%r14),%ecx
mov    %cx,0x6(%rsi)
lea    0x4(%r14),%rcx
movzbl 0x1(%rcx),%edi
movzbl (%rcx),%edx
shl    $0x8,%edx
add    %edi,%edx
mov    %dx,0x8(%rsi)
add    $0x1,%eax
lea    0x2(%rcx),%r14
movslq -0x28(%rbp),%rcx
cmp    %eax,%ecx
jg     1f2ae <png_handle_sPLT+0x29e>
mov    -0x20(%rbp),%rax
mov    %rax,-0x40(%rbp)
lea    -0x40(%rbp),%rdx
mov    $0x1,%ecx
mov    %r15,%rdi
mov    -0x8(%rbp),%rsi
callq  52a0 <png_set_sPLT@plt>
mov    %r15,%rdi
mov    -0x30(%rbp),%rsi
callq  5790 <png_free@plt>
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
leaveq 
retq   
movslq %eax,%rcx
lea    (%rcx,%rcx,4),%rcx
lea    (%rcx,%rcx,1),%rsi
add    -0x30(%rbp),%rsi
movzbl -0x38(%rbp),%ecx
cmp    $0x8,%cl
je     1f236 <png_handle_sPLT+0x226>
movzbl 0x1(%r14),%edx
movzbl (%r14),%ecx
shl    $0x8,%ecx
add    %edx,%ecx
mov    %cx,(%rsi)
movzbl 0x3(%r14),%edx
movzbl 0x2(%r14),%ecx
shl    $0x8,%ecx
add    %edx,%ecx
mov    %cx,0x2(%rsi)
movzbl 0x5(%r14),%edx
movzbl 0x4(%r14),%ecx
shl    $0x8,%ecx
add    %edx,%ecx
mov    %cx,0x4(%rsi)
movzbl 0x7(%r14),%edx
movzbl 0x6(%r14),%ecx
shl    $0x8,%ecx
add    %edx,%ecx
mov    %cx,0x6(%rsi)
lea    0x8(%r14),%rcx
jmpq   1f25c <png_handle_sPLT+0x24c>
nopl   (%rax)

000000000001f320 <png_handle_sRGB>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    0x12c(%rdi),%eax
mov    %rax,%rcx
and    $0x1,%ecx
test   %ecx,%ecx
je     1f37a <png_handle_sRGB+0x5a>
and    $0x6,%eax
test   %eax,%eax
jne    1f386 <png_handle_sRGB+0x66>
cmp    $0x1,%edx
jne    1f3b0 <png_handle_sRGB+0x90>
lea    -0x11(%rbp),%rcx
mov    $0x1,%edx
mov    %rdi,%rax
mov    %r15,-0x10(%rbp)
mov    %rsi,-0x8(%rbp)
mov    %rcx,%rsi
mov    %rdi,%r15
mov    %rax,%rdi
callq  1b210 <png_crc_read>
xor    %esi,%esi
mov    %r15,%rdi
callq  1b270 <png_crc_finish>
test   %eax,%eax
je     1f3da <png_handle_sRGB+0xba>
mov    -0x10(%rbp),%r15
leaveq 
retq   
lea    0xf558(%rip),%rsi        # 2e8d9 <png_pass_inc.20+0x66>
callq  5060 <png_chunk_error@plt>
mov    %rdi,%rax
mov    %r15,-0x10(%rbp)
mov    %rdx,%rsi
mov    %rdi,%r15
mov    %rax,%rdi
callq  1b270 <png_crc_finish>
mov    %r15,%rdi
lea    0xf51f(%rip),%rsi        # 2e8c4 <png_pass_inc.20+0x51>
callq  5230 <png_chunk_benign_error@plt>
mov    -0x10(%rbp),%r15
leaveq 
retq   
mov    %rdi,%rax
mov    %r15,-0x10(%rbp)
mov    %rdx,%rsi
mov    %rdi,%r15
mov    %rax,%rdi
callq  1b270 <png_crc_finish>
mov    %r15,%rdi
lea    0xf502(%rip),%rsi        # 2e8d1 <png_pass_inc.20+0x5e>
callq  5230 <png_chunk_benign_error@plt>
mov    -0x10(%rbp),%r15
leaveq 
retq   
movzwl 0x4e2(%r15),%eax
mov    %rax,%rcx
and    $0x8000,%ecx
test   %ecx,%ecx
jle    1f3f5 <png_handle_sRGB+0xd5>
mov    -0x10(%rbp),%r15
leaveq 
retq   
mov    %rax,%rcx
and    $0x4,%ecx
test   %ecx,%ecx
jg     1f424 <png_handle_sRGB+0x104>
lea    0x498(%r15),%rsi
movzbl -0x11(%rbp),%edx
mov    %r15,%rdi
callq  71e0 <png_colorspace_set_sRGB>
mov    %r15,%rdi
mov    -0x8(%rbp),%rsi
callq  7010 <png_colorspace_sync>
mov    -0x10(%rbp),%r15
leaveq 
retq   
or     $0x8000,%ax
mov    %ax,0x4e2(%r15)
mov    %r15,%rdi
mov    -0x8(%rbp),%rsi
callq  7010 <png_colorspace_sync>
mov    %r15,%rdi
lea    0xf60d(%rip),%rsi        # 2ea53 <png_pass_inc.20+0x1e0>
callq  5230 <png_chunk_benign_error@plt>
mov    -0x10(%rbp),%r15
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   0x0(%rax)

000000000001f460 <png_handle_tEXt>:
push   %rbp
mov    %rsp,%rbp
sub    $0x60,%rsp
mov    0x424(%rdi),%eax
test   %eax,%eax
je     1f4b3 <png_handle_tEXt+0x53>
cmp    $0x1,%eax
je     1f533 <png_handle_tEXt+0xd3>
add    $0xffffffff,%eax
mov    %eax,0x424(%rdi)
cmp    $0x1,%eax
jne    1f4b3 <png_handle_tEXt+0x53>
mov    %rdi,%rax
mov    %r15,-0x20(%rbp)
mov    %rdx,%rsi
mov    %rdi,%r15
mov    %rax,%rdi
callq  1b270 <png_crc_finish>
mov    %r15,%rdi
lea    0xf5bd(%rip),%rsi        # 2ea65 <png_pass_inc.20+0x1f2>
callq  5230 <png_chunk_benign_error@plt>
mov    -0x20(%rbp),%r15
leaveq 
retq   
mov    0x12c(%rdi),%eax
mov    %rax,%rcx
and    $0x1,%ecx
test   %ecx,%ecx
je     1f53d <png_handle_tEXt+0xdd>
mov    %rax,%rcx
and    $0x4,%ecx
test   %ecx,%ecx
je     1f4d6 <png_handle_tEXt+0x76>
or     $0x8,%eax
mov    %eax,0x12c(%rdi)
lea    0x1(%rdx),%eax
mov    %eax,%r8d
mov    $0x1,%eax
mov    %rdi,%rcx
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rsi,-0x18(%rbp)
mov    %r8,%rsi
mov    %rdx,%r14
mov    %rax,%rdx
mov    %rdi,%r15
mov    %rcx,%rdi
callq  200a0 <png_read_buffer>
test   %rax,%rax
je     1f549 <png_handle_tEXt+0xe9>
mov    %r15,%rdi
mov    %rax,%rsi
mov    %r14,%rdx
mov    %rax,-0x20(%rbp)
callq  1b210 <png_crc_read>
xor    %esi,%esi
mov    %r15,%rdi
callq  1b270 <png_crc_finish>
test   %eax,%eax
je     1f562 <png_handle_tEXt+0x102>
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
mov    %rdx,%rsi
callq  1b270 <png_crc_finish>
leaveq 
retq   
lea    0xf395(%rip),%rsi        # 2e8d9 <png_pass_inc.20+0x66>
callq  5060 <png_chunk_error@plt>
mov    %r15,%rdi
lea    0xf416(%rip),%rsi        # 2e969 <png_pass_inc.20+0xf6>
callq  5230 <png_chunk_benign_error@plt>
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
mov    %r14d,%eax
mov    -0x20(%rbp),%rdx
lea    (%rdx,%rax,1),%rcx
movb   $0x0,(%rcx)
mov    %rdx,%rdi
jmp    1f579 <png_handle_tEXt+0x119>
add    $0x1,%rdi
movsbq (%rdi),%rax
test   %al,%al
jne    1f575 <png_handle_tEXt+0x115>
cmp    %rcx,%rdi
je     1f58a <png_handle_tEXt+0x12a>
add    $0x1,%rdi
movl   $0xffffffff,-0x58(%rbp)
mov    %rdx,-0x50(%rbp)
movq   $0x0,-0x30(%rbp)
movq   $0x0,-0x28(%rbp)
movq   $0x0,-0x38(%rbp)
mov    %rdi,-0x48(%rbp)
callq  5260 <strlen@plt>
mov    %rax,-0x40(%rbp)
lea    -0x58(%rbp),%rdx
mov    %r15,%rdi
mov    $0x1,%ecx
mov    -0x18(%rbp),%rsi
callq  22de0 <png_set_text_2>
test   %eax,%eax
jne    1f5dd <png_handle_tEXt+0x17d>
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
mov    %r15,%rdi
lea    0xf5d4(%rip),%rsi        # 2ebbb <png_pass_inc.20+0x348>
callq  5390 <png_warning@plt>
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)

000000000001f600 <png_handle_tIME>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    0x12c(%rdi),%eax
and    $0x1,%eax
test   %eax,%eax
je     1f66e <png_handle_tIME+0x6e>
test   %rsi,%rsi
jne    1f67a <png_handle_tIME+0x7a>
mov    0x12c(%rdi),%eax
mov    %rax,%rcx
and    $0x4,%ecx
test   %ecx,%ecx
je     1f633 <png_handle_tIME+0x33>
or     $0x8,%eax
mov    %eax,0x12c(%rdi)
cmp    $0x7,%edx
jne    1f6b0 <png_handle_tIME+0xb0>
lea    -0x1f(%rbp),%rax
mov    $0x7,%edx
mov    %rdi,%rcx
mov    %r15,-0x10(%rbp)
mov    %rsi,-0x8(%rbp)
mov    %rax,%rsi
mov    %rdi,%r15
mov    %rcx,%rdi
callq  1b210 <png_crc_read>
xor    %esi,%esi
mov    %r15,%rdi
callq  1b270 <png_crc_finish>
test   %eax,%eax
je     1f6da <png_handle_tIME+0xda>
mov    -0x10(%rbp),%r15
leaveq 
retq   
lea    0xf264(%rip),%rsi        # 2e8d9 <png_pass_inc.20+0x66>
callq  5060 <png_chunk_error@plt>
mov    0x8(%rsi),%eax
and    $0x200,%eax
test   %eax,%eax
je     1f61a <png_handle_tIME+0x1a>
mov    %rdi,%rax
mov    %r15,-0x10(%rbp)
mov    %rdx,%rsi
mov    %rdi,%r15
mov    %rax,%rdi
callq  1b270 <png_crc_finish>
mov    %r15,%rdi
lea    0xf241(%rip),%rsi        # 2e8e6 <png_pass_inc.20+0x73>
callq  5230 <png_chunk_benign_error@plt>
mov    -0x10(%rbp),%r15
leaveq 
retq   
mov    %rdi,%rax
mov    %r15,-0x10(%rbp)
mov    %rdx,%rsi
mov    %rdi,%r15
mov    %rax,%rdi
callq  1b270 <png_crc_finish>
mov    %r15,%rdi
lea    0xf202(%rip),%rsi        # 2e8d1 <png_pass_inc.20+0x5e>
callq  5230 <png_chunk_benign_error@plt>
mov    -0x10(%rbp),%r15
leaveq 
retq   
movzbl -0x19(%rbp),%eax
mov    %al,-0x12(%rbp)
movzbl -0x1a(%rbp),%eax
mov    %al,-0x13(%rbp)
movzbl -0x1b(%rbp),%eax
mov    %al,-0x14(%rbp)
movzbl -0x1c(%rbp),%eax
mov    %al,-0x15(%rbp)
movzbl -0x1d(%rbp),%eax
mov    %al,-0x16(%rbp)
movzbl -0x1e(%rbp),%ecx
movzbl -0x1f(%rbp),%eax
shl    $0x8,%eax
add    %ecx,%eax
mov    %ax,-0x18(%rbp)
mov    %r15,%rdi
lea    -0x18(%rbp),%rdx
mov    -0x8(%rbp),%rsi
callq  54e0 <png_set_tIME@plt>
mov    -0x10(%rbp),%r15
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nop

000000000001f730 <png_handle_tRNS>:
push   %rbp
mov    %rsp,%rbp
sub    $0x120,%rsp
mov    0x12c(%rdi),%eax
mov    %rax,%rcx
and    $0x1,%ecx
test   %ecx,%ecx
je     1f7a0 <png_handle_tRNS+0x70>
and    $0x4,%eax
test   %eax,%eax
jne    1f7ac <png_handle_tRNS+0x7c>
test   %rsi,%rsi
jne    1f7d6 <png_handle_tRNS+0xa6>
movzbl 0x267(%rdi),%eax
test   %al,%al
je     1f80e <png_handle_tRNS+0xde>
cmp    $0x2,%al
je     1f891 <png_handle_tRNS+0x161>
cmp    $0x3,%al
je     1f90a <png_handle_tRNS+0x1da>
mov    %rdi,%rax
mov    %r15,-0x18(%rbp)
mov    %rdx,%rsi
mov    %rdi,%r15
mov    %rax,%rdi
callq  1b270 <png_crc_finish>
mov    %r15,%rdi
lea    0xf450(%rip),%rsi        # 2ebe5 <png_pass_inc.20+0x372>
callq  5230 <png_chunk_benign_error@plt>
mov    -0x18(%rbp),%r15
leaveq 
retq   
lea    0xf132(%rip),%rsi        # 2e8d9 <png_pass_inc.20+0x66>
callq  5060 <png_chunk_error@plt>
mov    %rdi,%rax
mov    %r15,-0x18(%rbp)
mov    %rdx,%rsi
mov    %rdi,%r15
mov    %rax,%rdi
callq  1b270 <png_crc_finish>
mov    %r15,%rdi
lea    0xf0f9(%rip),%rsi        # 2e8c4 <png_pass_inc.20+0x51>
callq  5230 <png_chunk_benign_error@plt>
mov    -0x18(%rbp),%r15
leaveq 
retq   
mov    0x8(%rsi),%eax
and    $0x10,%eax
test   %eax,%eax
je     1f757 <png_handle_tRNS+0x27>
mov    %rdi,%rax
mov    %r15,-0x18(%rbp)
mov    %rdx,%rsi
mov    %rdi,%r15
mov    %rax,%rdi
callq  1b270 <png_crc_finish>
mov    %r15,%rdi
lea    0xf0e3(%rip),%rsi        # 2e8e6 <png_pass_inc.20+0x73>
callq  5230 <png_chunk_benign_error@plt>
mov    -0x18(%rbp),%r15
leaveq 
retq   
cmp    $0x2,%edx
jne    1f97c <png_handle_tRNS+0x24c>
lea    -0x20(%rbp),%rax
mov    $0x2,%edx
mov    %rdi,%rcx
mov    %r15,-0x18(%rbp)
mov    %rsi,-0x8(%rbp)
mov    %rax,%rsi
mov    %rdi,%r15
mov    %rcx,%rdi
callq  1b210 <png_crc_read>
movw   $0x1,0x260(%r15)
movzbl -0x1f(%rbp),%ecx
movzbl -0x20(%rbp),%eax
shl    $0x8,%eax
add    %ecx,%eax
mov    %ax,0x2f8(%r15)
xor    %esi,%esi
mov    %r15,%rdi
callq  1b270 <png_crc_finish>
test   %eax,%eax
jne    1f9a6 <png_handle_tRNS+0x276>
mov    %r15,%rdi
lea    -0x120(%rbp),%rdx
movzwl 0x260(%rdi),%ecx
lea    0x2f0(%rdi),%r8
mov    -0x8(%rbp),%rsi
callq  54f0 <png_set_tRNS@plt>
mov    -0x18(%rbp),%r15
leaveq 
retq   
cmp    $0x6,%edx
jne    1f9b6 <png_handle_tRNS+0x286>
lea    -0x1e(%rbp),%rax
mov    $0x6,%edx
mov    %rdi,%rcx
mov    %r15,-0x18(%rbp)
mov    %rsi,-0x8(%rbp)
mov    %rax,%rsi
mov    %rdi,%r15
mov    %rcx,%rdi
callq  1b210 <png_crc_read>
movw   $0x1,0x260(%r15)
movzbl -0x1d(%rbp),%ecx
movzbl -0x1e(%rbp),%eax
shl    $0x8,%eax
add    %ecx,%eax
mov    %ax,0x2f2(%r15)
movzbl -0x1b(%rbp),%ecx
movzbl -0x1c(%rbp),%eax
shl    $0x8,%eax
add    %ecx,%eax
mov    %ax,0x2f4(%r15)
movzbl -0x19(%rbp),%ecx
movzbl -0x1a(%rbp),%eax
shl    $0x8,%eax
add    %ecx,%eax
mov    %ax,0x2f6(%r15)
jmpq   1f858 <png_handle_tRNS+0x128>
mov    0x12c(%rdi),%eax
and    $0x2,%eax
test   %eax,%eax
je     1f9e0 <png_handle_tRNS+0x2b0>
movzwl 0x258(%rdi),%eax
cmp    %eax,%edx
ja     1fa0a <png_handle_tRNS+0x2da>
cmp    $0x100,%edx
ja     1fa0a <png_handle_tRNS+0x2da>
test   %edx,%edx
je     1fa0a <png_handle_tRNS+0x2da>
lea    -0x120(%rbp),%rax
mov    %rdi,%rcx
mov    %rdx,%r8
mov    %r15,-0x18(%rbp)
mov    %r14,-0x10(%rbp)
mov    %rsi,-0x8(%rbp)
mov    %rax,%rsi
mov    %rdx,%r14
mov    %r8,%rdx
mov    %rdi,%r15
mov    %rcx,%rdi
callq  1b210 <png_crc_read>
mov    %r14w,0x260(%r15)
mov    -0x10(%rbp),%r14
jmpq   1f858 <png_handle_tRNS+0x128>
mov    %rdi,%rax
mov    %r15,-0x18(%rbp)
mov    %rdx,%rsi
mov    %rdi,%r15
mov    %rax,%rdi
callq  1b270 <png_crc_finish>
mov    %r15,%rdi
lea    0xef36(%rip),%rsi        # 2e8d1 <png_pass_inc.20+0x5e>
callq  5230 <png_chunk_benign_error@plt>
mov    -0x18(%rbp),%r15
leaveq 
retq   
movw   $0x0,0x260(%r15)
mov    -0x18(%rbp),%r15
leaveq 
retq   
mov    %rdi,%rax
mov    %r15,-0x18(%rbp)
mov    %rdx,%rsi
mov    %rdi,%r15
mov    %rax,%rdi
callq  1b270 <png_crc_finish>
mov    %r15,%rdi
lea    0xeefc(%rip),%rsi        # 2e8d1 <png_pass_inc.20+0x5e>
callq  5230 <png_chunk_benign_error@plt>
mov    -0x18(%rbp),%r15
leaveq 
retq   
mov    %rdi,%rax
mov    %r15,-0x18(%rbp)
mov    %rdx,%rsi
mov    %rdi,%r15
mov    %rax,%rdi
callq  1b270 <png_crc_finish>
mov    %r15,%rdi
lea    0xeec5(%rip),%rsi        # 2e8c4 <png_pass_inc.20+0x51>
callq  5230 <png_chunk_benign_error@plt>
mov    -0x18(%rbp),%r15
leaveq 
retq   
mov    %rdi,%rax
mov    %r15,-0x18(%rbp)
mov    %rdx,%rsi
mov    %rdi,%r15
mov    %rax,%rdi
callq  1b270 <png_crc_finish>
mov    %r15,%rdi
lea    0xeea8(%rip),%rsi        # 2e8d1 <png_pass_inc.20+0x5e>
callq  5230 <png_chunk_benign_error@plt>
mov    -0x18(%rbp),%r15
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nop

000000000001fa40 <png_handle_zTXt>:
push   %rbp
mov    %rsp,%rbp
sub    $0x70,%rsp
mov    0x424(%rdi),%eax
test   %eax,%eax
jne    1fae4 <png_handle_zTXt+0xa4>
mov    0x12c(%rdi),%eax
mov    %rax,%rcx
and    $0x1,%ecx
test   %ecx,%ecx
je     1fb29 <png_handle_zTXt+0xe9>
mov    %rax,%rcx
and    $0x4,%ecx
test   %ecx,%ecx
je     1fa7d <png_handle_zTXt+0x3d>
or     $0x8,%eax
mov    %eax,0x12c(%rdi)
mov    %edx,%eax
mov    $0x2,%r8d
mov    %rdi,%rcx
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rsi,-0x18(%rbp)
mov    %rax,%rsi
mov    %rdx,%r14
mov    %r8,%rdx
mov    %rdi,%r15
mov    %rcx,%rdi
callq  200a0 <png_read_buffer>
test   %rax,%rax
je     1fb35 <png_handle_zTXt+0xf5>
mov    %r15,%rdi
mov    %rax,%rsi
mov    %r14,%rdx
mov    %rax,-0x28(%rbp)
callq  1b210 <png_crc_read>
xor    %eax,%eax
mov    %r15,%rdi
mov    %rax,%rsi
mov    %r15,-0x20(%rbp)
mov    %rax,%r15
callq  1b270 <png_crc_finish>
test   %eax,%eax
jne    1fb59 <png_handle_zTXt+0x119>
mov    -0x28(%rbp),%rax
jmpq   1fb70 <png_handle_zTXt+0x130>
cmp    $0x1,%eax
je     1fb98 <png_handle_zTXt+0x158>
add    $0xffffffff,%eax
mov    %eax,0x424(%rdi)
cmp    $0x1,%eax
jne    1fa56 <png_handle_zTXt+0x16>
mov    %rdi,%rax
mov    %r15,-0x28(%rbp)
mov    %rdx,%rsi
mov    %rdi,%r15
mov    %rax,%rdi
callq  1b270 <png_crc_finish>
mov    %r15,%rdi
lea    0xef47(%rip),%rsi        # 2ea65 <png_pass_inc.20+0x1f2>
callq  5230 <png_chunk_benign_error@plt>
mov    -0x28(%rbp),%r15
leaveq 
retq   
lea    0xeda9(%rip),%rsi        # 2e8d9 <png_pass_inc.20+0x66>
callq  5060 <png_chunk_error@plt>
mov    %r14,%rsi
mov    %r15,%rdi
callq  1b270 <png_crc_finish>
mov    %r15,%rdi
lea    0xee1f(%rip),%rsi        # 2e969 <png_pass_inc.20+0xf6>
callq  5230 <png_chunk_benign_error@plt>
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
movzbl (%rax,%r9,1),%ecx
test   %cl,%cl
je     1fb78 <png_handle_zTXt+0x138>
add    $0x1,%r15d
mov    %r15d,%r9d
cmp    %r15d,%r14d
ja     1fb63 <png_handle_zTXt+0x123>
lea    0xeec8(%rip),%rsi        # 2ea47 <png_pass_inc.20+0x1d4>
cmp    $0x4f,%r15d
jbe    1fba2 <png_handle_zTXt+0x162>
mov    -0x20(%rbp),%rdi
test   %rsi,%rsi
jne    1fbad <png_handle_zTXt+0x16d>
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
mov    %rdx,%rsi
callq  1b270 <png_crc_finish>
leaveq 
retq   
test   %r15d,%r15d
jne    1fbbc <png_handle_zTXt+0x17c>
mov    -0x20(%rbp),%rdi
jmp    1fb89 <png_handle_zTXt+0x149>
callq  5230 <png_chunk_benign_error@plt>
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
lea    0x3(%r15),%ecx
cmp    %ecx,%r14d
jae    1fbd2 <png_handle_zTXt+0x192>
lea    0xeeb1(%rip),%rsi        # 2ea7d <png_pass_inc.20+0x20a>
mov    -0x20(%rbp),%rdi
jmp    1fb89 <png_handle_zTXt+0x149>
lea    0x1(%r15),%ecx
mov    %ecx,%ecx
movzbl (%rax,%rcx,1),%eax
test   %al,%al
je     1fbed <png_handle_zTXt+0x1ad>
lea    0xf019(%rip),%rsi        # 2ec00 <png_pass_inc.20+0x38d>
mov    -0x20(%rbp),%rdi
jmp    1fb89 <png_handle_zTXt+0x149>
movq   $0xffffffffffffffff,-0x68(%rbp)
lea    0x2(%r15),%eax
lea    -0x68(%rbp),%rcx
mov    $0x1,%r8d
mov    -0x20(%rbp),%r15
mov    %r15,%rdi
mov    %rax,%rdx
mov    %r9,-0x28(%rbp)
mov    %r14,%rsi
mov    %rax,%r14
callq  20500 <png_decompress_chunk>
cmp    $0x1,%eax
je     1fc30 <png_handle_zTXt+0x1f0>
mov    %r15,%rdi
mov    0x170(%rdi),%rsi
jmpq   1fb89 <png_handle_zTXt+0x149>
mov    0x458(%r15),%rcx
test   %rcx,%rcx
jne    1fc4b <png_handle_zTXt+0x20b>
mov    %r15,%rdi
lea    0xefd3(%rip),%rsi        # 2ec19 <png_pass_inc.20+0x3a6>
jmpq   1fb89 <png_handle_zTXt+0x149>
mov    %r14d,%eax
add    -0x68(%rbp),%rax
movb   $0x0,(%rcx,%rax,1)
movl   $0x0,-0x60(%rbp)
mov    %rcx,-0x58(%rbp)
mov    -0x28(%rbp),%rax
lea    0x2(%rcx,%rax,1),%rax
mov    %rax,-0x50(%rbp)
mov    -0x68(%rbp),%rax
mov    %rax,-0x48(%rbp)
movq   $0x0,-0x40(%rbp)
movq   $0x0,-0x38(%rbp)
movq   $0x0,-0x30(%rbp)
lea    -0x60(%rbp),%rdx
mov    %r15,%rdi
mov    $0x1,%ecx
mov    -0x18(%rbp),%rsi
callq  22de0 <png_set_text_2>
test   %eax,%eax
jne    1fcb1 <png_handle_zTXt+0x271>
mov    %r15,%rdi
xor    %esi,%esi
jmpq   1fb89 <png_handle_zTXt+0x149>
mov    %r15,%rdi
lea    0xedcc(%rip),%rsi        # 2ea87 <png_pass_inc.20+0x214>
jmpq   1fb89 <png_handle_zTXt+0x149>

000000000001fcc0 <png_check_chunk_name>:
push   %rbp
mov    %rsp,%rbp
mov    $0x1,%eax
jmp    1fce9 <png_check_chunk_name+0x29>
movzbl %sil,%ecx
cmp    $0x40,%ecx
jle    1fcf0 <png_check_chunk_name+0x30>
cmp    $0x7a,%ecx
jg     1fcf0 <png_check_chunk_name+0x30>
cmp    $0x5a,%ecx
jle    1fce3 <png_check_chunk_name+0x23>
cmp    $0x60,%ecx
jle    1fcf0 <png_check_chunk_name+0x30>
shr    $0x8,%esi
add    $0x1,%eax
cmp    $0x4,%eax
jle    1fccb <png_check_chunk_name+0xb>
leaveq 
retq   
lea    0xef42(%rip),%rsi        # 2ec39 <png_pass_inc.20+0x3c6>
callq  5060 <png_chunk_error@plt>
nopl   0x0(%rax)

000000000001fd00 <png_check_chunk_length>:
push   %rbp
mov    %rsp,%rbp
mov    $0x7fffffff,%r9d
mov    0x428(%rdi),%rcx
test   %rcx,%rcx
jne    1fd2f <png_check_chunk_length+0x2f>
mov    %r9,%rcx
mov    0x218(%rdi),%eax
cmp    $0x49444154,%eax
je     1fd3d <png_check_chunk_length+0x3d>
mov    %esi,%eax
cmp    %rax,%rcx
jb     1fd5d <png_check_chunk_length+0x5d>
leaveq 
retq   
cmp    $0x7ffffffe,%rcx
jbe    1fd19 <png_check_chunk_length+0x19>
mov    %r9,%rcx
jmp    1fd19 <png_check_chunk_length+0x19>
mov    0x1f8(%rdi),%r10d
movzbl 0x26b(%rdi),%edx
movzbl 0x268(%rdi),%eax
cmp    $0x8,%al
ja     1fd69 <png_check_chunk_length+0x69>
mov    $0x1,%eax
jmp    1fd6e <png_check_chunk_length+0x6e>
lea    0xeee8(%rip),%rsi        # 2ec4c <png_pass_inc.20+0x3d9>
callq  5060 <png_chunk_error@plt>
mov    $0x2,%eax
movzbl 0x264(%rdi),%r8d
test   %r8b,%r8b
jne    1fd80 <png_check_chunk_length+0x80>
xor    %r8d,%r8d
jmp    1fd86 <png_check_chunk_length+0x86>
mov    $0x6,%r8d
imul   %r10d,%edx
imul   %edx,%eax
lea    0x1(%r8,%rax,1),%r11d
mov    %r11d,%r8d
mov    $0xffffffff,%eax
xor    %edx,%edx
mov    0x1fc(%rdi),%r10d
div    %r8
cmp    %r10,%rax
jae    1fdea <png_check_chunk_length+0xea>
mov    %r9,%r10
cmp    $0x7f36,%r11d
jbe    1fdbd <png_check_chunk_length+0xbd>
mov    $0x7f36,%r8d
xor    %edx,%edx
mov    %r10,%rax
div    %r8
lea    (%rax,%rax,4),%rax
lea    0xb(%r10,%rax,1),%rax
cmp    $0x7ffffffe,%rax
ja     1fdd9 <png_check_chunk_length+0xd9>
mov    %rax,%r9
cmp    %r9,%rcx
jae    1fd26 <png_check_chunk_length+0x26>
mov    %r9,%rcx
jmpq   1fd26 <png_check_chunk_length+0x26>
mov    0x1fc(%rdi),%eax
mov    %r8,%r10
imul   %rax,%r10
jmp    1fdae <png_check_chunk_length+0xae>
nopl   0x0(%rax)

000000000001fe00 <png_handle_unknown>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rsi,-0x28(%rbp)
mov    $0x1,%eax
mov    %rax,-0x20(%rbp)
xor    %eax,%eax
mov    %rax,-0x18(%rbp)
mov    0x3b8(%rdi),%rax
test   %rax,%rax
jne    1fe38 <png_handle_unknown+0x38>
test   %ecx,%ecx
je     1fe6b <png_handle_unknown+0x6b>
mov    %rcx,%r15
jmp    1fe72 <png_handle_unknown+0x72>
mov    %rdx,%rsi
mov    %rcx,%r15
mov    %rdi,%r14
callq  209c0 <png_cache_unknown_chunk>
test   %eax,%eax
jne    1fe99 <png_handle_unknown+0x99>
mov    $0x1,%r15d
pushq  -0x18(%rbp)
popq   -0x20(%rbp)
cmp    $0x3,%r15d
je     1fec2 <png_handle_unknown+0xc2>
cmp    $0x2,%r15d
je     1fedc <png_handle_unknown+0xdc>
mov    -0x20(%rbp),%r15
jmpq   1ff1c <png_handle_unknown+0x11c>
movslq 0x3c0(%rdi),%r15
cmp    $0x3,%r15d
je     1ff61 <png_handle_unknown+0x161>
cmp    $0x2,%r15d
je     1ff4e <png_handle_unknown+0x14e>
mov    %rdx,%rsi
mov    %rdi,%r14
callq  1b270 <png_crc_finish>
pushq  -0x18(%rbp)
popq   -0x20(%rbp)
jmp    1fe56 <png_handle_unknown+0x56>
lea    0x430(%r14),%rsi
mov    %r14,%rdi
callq  *0x3b8(%r14)
test   %eax,%eax
js     1ff7b <png_handle_unknown+0x17b>
test   %eax,%eax
je     1ff8a <png_handle_unknown+0x18a>
mov    $0x1,%r15d
jmp    1fe56 <png_handle_unknown+0x56>
mov    0x424(%r14),%eax
test   %eax,%eax
je     1fef2 <png_handle_unknown+0xf2>
cmp    $0x1,%eax
jne    1ff9b <png_handle_unknown+0x19b>
mov    -0x20(%rbp),%r15
jmp    1ff1c <png_handle_unknown+0x11c>
mov    0x218(%r14),%eax
and    $0x20000000,%eax
test   %eax,%eax
jne    1fec2 <png_handle_unknown+0xc2>
mov    -0x20(%rbp),%r15
jmp    1ff1c <png_handle_unknown+0x11c>
test   %eax,%eax
je     1ff00 <png_handle_unknown+0x100>
add    $0xffffffff,%eax
mov    %eax,0x424(%r14)
lea    0x430(%r14),%rdx
mov    %r14,%rdi
mov    $0x1,%r15d
mov    %r15,%rcx
mov    -0x28(%rbp),%rsi
callq  5750 <png_set_unknown_chunks@plt>
mov    0x438(%r14),%rsi
test   %rsi,%rsi
je     1ff30 <png_handle_unknown+0x130>
mov    %r14,%rdi
callq  5790 <png_free@plt>
movq   $0x0,0x438(%r14)
test   %r15d,%r15d
je     1ffc7 <png_handle_unknown+0x1c7>
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
mov    0x218(%rdi),%eax
and    $0x20000000,%eax
test   %eax,%eax
je     1fe86 <png_handle_unknown+0x86>
mov    %rdx,%rsi
mov    %rdi,%r14
callq  209c0 <png_cache_unknown_chunk>
test   %eax,%eax
je     1ffe1 <png_handle_unknown+0x1e1>
pushq  -0x18(%rbp)
popq   -0x20(%rbp)
jmpq   1fe56 <png_handle_unknown+0x56>
mov    %r14,%rdi
lea    0xecdf(%rip),%rsi        # 2ec64 <png_pass_inc.20+0x3f1>
callq  5060 <png_chunk_error@plt>
cmp    $0x1,%r15d
jle    1fff2 <png_handle_unknown+0x1f2>
pushq  -0x18(%rbp)
popq   -0x20(%rbp)
jmpq   1fe56 <png_handle_unknown+0x56>
cmp    $0x2,%eax
jne    1fef6 <png_handle_unknown+0xf6>
movl   $0x1,0x424(%r14)
lea    0xeaaf(%rip),%rsi        # 2ea65 <png_pass_inc.20+0x1f2>
mov    %r14,%rdi
callq  5230 <png_chunk_benign_error@plt>
mov    -0x20(%rbp),%r15
jmpq   1ff1c <png_handle_unknown+0x11c>
mov    0x218(%r14),%eax
and    $0x20000000,%eax
test   %eax,%eax
je     2000f <png_handle_unknown+0x20f>
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
mov    $0x1,%r15d
pushq  -0x18(%rbp)
popq   -0x20(%rbp)
jmpq   1fe56 <png_handle_unknown+0x56>
mov    $0x2,%r15d
movslq 0x3c0(%r14),%rax
cmp    $0x1,%eax
jle    2001e <png_handle_unknown+0x21e>
pushq  -0x18(%rbp)
popq   -0x20(%rbp)
jmpq   1fe56 <png_handle_unknown+0x56>
mov    %r14,%rdi
lea    0xecc1(%rip),%rsi        # 2ecda <png_pass_inc.20+0x467>
callq  5060 <png_chunk_error@plt>
lea    0xec53(%rip),%rsi        # 2ec78 <png_pass_inc.20+0x405>
mov    %r14,%rdi
callq  56a0 <png_chunk_warning@plt>
lea    0xec5a(%rip),%rsi        # 2ec8e <png_pass_inc.20+0x41b>
mov    %r14,%rdi
callq  b0f0 <png_app_warning>
pushq  -0x18(%rbp)
popq   -0x20(%rbp)
jmpq   1fe56 <png_handle_unknown+0x56>
nopw   0x0(%rax,%rax,1)

0000000000020050 <png_get_fixed_point>:
push   %rbp
mov    %rsp,%rbp
movzbl (%rsi),%eax
shl    $0x18,%eax
movzbl 0x1(%rsi),%ecx
shl    $0x10,%ecx
add    %eax,%ecx
movzbl 0x2(%rsi),%eax
shl    $0x8,%eax
add    %ecx,%eax
movzbl 0x3(%rsi),%ecx
add    %ecx,%eax
cmp    $0x7fffffff,%eax
ja     2007b <png_get_fixed_point+0x2b>
leaveq 
retq   
mov    $0xffffffffffffffff,%rax
test   %rdi,%rdi
jne    20089 <png_get_fixed_point+0x39>
leaveq 
retq   
lea    0xec63(%rip),%rsi        # 2ecf3 <png_pass_inc.20+0x480>
callq  5390 <png_warning@plt>
mov    $0xffffffffffffffff,%rax
leaveq 
retq   
xchg   %ax,%ax

00000000000200a0 <png_read_buffer>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
xor    %eax,%eax
mov    0x458(%rdi),%rcx
test   %rcx,%rcx
jne    200bd <png_read_buffer+0x1d>
test   %rax,%rax
je     200ce <png_read_buffer+0x2e>
leaveq 
retq   
mov    0x460(%rdi),%rax
cmp    %rsi,%rax
jb     20108 <png_read_buffer+0x68>
mov    %rcx,%rax
jmp    200b6 <png_read_buffer+0x16>
mov    %rdi,%rcx
mov    %rsi,%rax
mov    %rdi,-0x8(%rbp)
mov    %r14,-0x10(%rbp)
mov    %r15,-0x18(%rbp)
mov    %rcx,%rdi
mov    %rsi,%r14
mov    %rax,%rsi
mov    %rdx,%r15
callq  c940 <png_malloc_base>
test   %rax,%rax
jne    2014b <png_read_buffer+0xab>
cmp    $0x1,%r15d
jle    2017a <png_read_buffer+0xda>
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
xor    %eax,%eax
leaveq 
retq   
movq   $0x0,0x458(%rdi)
movq   $0x0,0x460(%rdi)
mov    %rdi,%rax
mov    %rdi,-0x10(%rbp)
mov    %rsi,-0x18(%rbp)
mov    %rdx,-0x8(%rbp)
mov    %rcx,%rsi
mov    %rax,%rdi
callq  5790 <png_free@plt>
xor    %eax,%eax
mov    -0x8(%rbp),%rdx
mov    -0x18(%rbp),%rsi
mov    -0x10(%rbp),%rdi
jmpq   200b6 <png_read_buffer+0x16>
mov    %rax,%r15
mov    %r15,%rdi
mov    %r14,%rdx
xor    %esi,%esi
callq  5350 <memset@plt>
mov    -0x8(%rbp),%rax
mov    %r15,0x458(%rax)
mov    %r14,0x460(%rax)
mov    %r15,%rax
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
leaveq 
retq   
lea    0xeb97(%rip),%rsi        # 2ed18 <png_pass_inc.20+0x4a5>
test   %r15d,%r15d
jne    2018f <png_read_buffer+0xef>
mov    -0x8(%rbp),%rdi
callq  5060 <png_chunk_error@plt>
mov    -0x8(%rbp),%rdi
callq  56a0 <png_chunk_warning@plt>
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
xor    %eax,%eax
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nop

00000000000201b0 <png_inflate_claim>:
push   %rbp
mov    %rsp,%rbp
sub    $0x60,%rsp
mov    %r14,-0x10(%rbp)
mov    %r15,-0x18(%rbp)
mov    %r13,-0x8(%rbp)
mov    0x138(%rdi),%ecx
test   %ecx,%ecx
jne    201d6 <png_inflate_claim+0x26>
mov    %rdi,%r13
mov    %rsi,%r14
jmp    2022b <png_inflate_claim+0x7b>
mov    %rcx,%rax
shr    $0x18,%eax
mov    %al,-0x58(%rbp)
mov    %rcx,%rax
shr    $0x10,%eax
mov    %al,-0x57(%rbp)
mov    %rcx,%rax
shr    $0x8,%eax
mov    %al,-0x56(%rbp)
mov    %cl,-0x55(%rbp)
mov    %rdi,%r13
mov    %rsi,%r14
lea    -0x58(%rbp),%rdi
mov    $0x40,%esi
mov    $0x4,%edx
lea    0xeb2b(%rip),%rcx        # 2ed3a <png_pass_inc.20+0x4c7>
callq  ad20 <png_safecat>
mov    %r13,%rdi
lea    -0x58(%rbp),%rsi
callq  56a0 <png_chunk_warning@plt>
movl   $0x0,0x138(%r13)
xor    %esi,%esi
mov    0x388(%r13),%eax
and    $0xc,%eax
cmp    $0xc,%eax
je     20246 <png_inflate_claim+0x96>
movb   $0x1,0x270(%r13)
jmp    20253 <png_inflate_claim+0xa3>
movb   $0x0,0x270(%r13)
mov    $0xf,%esi
lea    0x140(%r13),%r15
movq   $0x0,(%r15)
movl   $0x0,0x148(%r13)
movq   $0x0,0x158(%r13)
movl   $0x0,0x160(%r13)
mov    0x130(%r13),%eax
and    $0x2,%eax
test   %eax,%eax
jne    202bd <png_inflate_claim+0x10d>
lea    0xeab2(%rip),%rdx        # 2ed49 <png_pass_inc.20+0x4d6>
mov    $0x70,%ecx
mov    %r15,%rdi
callq  5770 <inflateInit2_@plt>
test   %eax,%eax
jne    202c5 <png_inflate_claim+0x115>
mov    0x130(%r13),%eax
or     $0x2,%eax
mov    %eax,0x130(%r13)
xor    %eax,%eax
jmp    202c5 <png_inflate_claim+0x115>
mov    %r15,%rdi
callq  5180 <inflateReset2@plt>
mov    0x388(%r13),%ecx
and    $0x300,%ecx
cmp    $0x300,%ecx
jne    202e4 <png_inflate_claim+0x134>
mov    %r15,%rdi
xor    %esi,%esi
callq  5220 <inflateValidate@plt>
test   %eax,%eax
je     20307 <png_inflate_claim+0x157>
mov    %r13,%rdi
mov    %rax,%r13
mov    %r13,%rsi
callq  6910 <png_zstream_error>
mov    %r13,%rax
mov    -0x8(%rbp),%r13
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
leaveq 
retq   
mov    %r14d,0x138(%r13)
mov    -0x8(%rbp),%r13
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
leaveq 
retq   
nopl   0x0(%rax)

0000000000020320 <png_inflate>:
push   %rbp
mov    %rsp,%rbp
sub    $0x440,%rsp
mov    0x138(%rdi),%eax
cmp    %esi,%eax
je     2034c <png_inflate+0x2c>
lea    0xea14(%rip),%rax        # 2ed50 <png_pass_inc.20+0x4dd>
mov    %rax,0x170(%rdi)
mov    $0xfffffffffffffffe,%rax
leaveq 
retq   
mov    0x10(%rbp),%rax
mov    %rax,-0x10(%rbp)
mov    (%rax),%r11
mov    (%r8),%r10d
mov    %rcx,0x140(%rdi)
movl   $0x0,0x148(%rdi)
movl   $0x0,0x160(%rdi)
lea    -0x438(%rbp),%rcx
xor    %esi,%esi
mov    %r15,-0x38(%rbp)
mov    $0x4,%r15d
mov    %r14,-0x30(%rbp)
mov    $0x2,%r14d
mov    %r13,-0x28(%rbp)
mov    $0xffffffff,%eax
mov    %r12,-0x20(%rbp)
mov    $0x400,%r12d
test   %r9,%r9
jne    203cf <png_inflate+0xaf>
mov    %r8,-0x8(%rbp)
mov    %rbx,-0x18(%rbp)
mov    %r10,%rbx
mov    %rcx,%r10
mov    %r12,%rcx
mov    %r11,%r12
mov    %r15,%r11
mov    %rdx,%r15
mov    %r14,%rdx
mov    %r9,%r14
mov    %rdi,%r13
jmp    20419 <png_inflate+0xf9>
mov    %r9,0x158(%rdi)
mov    %r8,-0x8(%rbp)
mov    %rbx,-0x18(%rbp)
mov    %r10,%rbx
mov    %rcx,%r10
mov    %r12,%rcx
mov    %r11,%r12
mov    %r15,%r11
mov    %rdx,%r15
mov    %r14,%rdx
mov    %r9,%r14
mov    %rdi,%r13
jmp    20419 <png_inflate+0xf9>
mov    $0x2,%edx
mov    $0x4,%r11d
xor    %esi,%esi
mov    $0x400,%ecx
lea    -0x438(%rbp),%r10
mov    $0xffffffff,%eax
add    0x148(%r13),%ebx
cmp    $0xfffffffe,%ebx
jbe    2042a <png_inflate+0x10a>
mov    %rax,%r8
jmp    2042d <png_inflate+0x10d>
mov    %rbx,%r8
test   %r14,%r14
mov    0x160(%r13),%edi
mov    %r8d,0x148(%r13)
jne    2044a <png_inflate+0x12a>
mov    %r10,0x158(%r13)
mov    %rcx,%rax
add    %rdi,%r12
cmp    %r12,%rax
jbe    20455 <png_inflate+0x135>
mov    %r12,%rax
mov    %eax,0x160(%r13)
mov    %eax,%eax
cmp    %rax,%r12
jne    2046f <png_inflate+0x14f>
test   %r15d,%r15d
jne    204f1 <png_inflate+0x1d1>
mov    %rdx,%rsi
sub    %r8d,%ebx
sub    %rax,%r12
mov    %r13,%rdi
callq  1ca80 <png_zlib_inflate>
test   %eax,%eax
je     203fb <png_inflate+0xdb>
test   %r14,%r14
jne    20495 <png_inflate+0x175>
movq   $0x0,0x158(%r13)
mov    0x148(%r13),%esi
mov    0x160(%r13),%ecx
lea    (%r12,%rcx,1),%rdx
test   %rdx,%rdx
je     204b9 <png_inflate+0x199>
mov    -0x10(%rbp),%rdi
mov    (%rdi),%rcx
sub    %rdx,%rcx
mov    %rcx,(%rdi)
lea    (%rbx,%rsi,1),%edx
test   %edx,%edx
je     204ca <png_inflate+0x1aa>
mov    -0x8(%rbp),%rsi
mov    (%rsi),%ecx
sub    %edx,%ecx
mov    %ecx,(%rsi)
mov    %r13,%rdi
mov    %rax,%r15
mov    %r15,%rsi
callq  6910 <png_zstream_error>
mov    %r15,%rax
mov    -0x18(%rbp),%rbx
mov    -0x20(%rbp),%r12
mov    -0x28(%rbp),%r13
mov    -0x30(%rbp),%r14
mov    -0x38(%rbp),%r15
leaveq 
retq   
mov    %r11,%rsi
jmpq   2046f <png_inflate+0x14f>
nopl   0x0(%rax)

0000000000020500 <png_decompress_chunk>:
push   %rbp
mov    %rsp,%rbp
sub    $0x60,%rsp
mov    $0xffffffffffffffff,%rax
mov    0x428(%rdi),%r9
test   %r9,%r9
jne    20557 <png_decompress_chunk+0x57>
mov    $0x1,%r9d
mov    %r9,-0x20(%rbp)
xor    %r10d,%r10d
mov    %r10,-0x28(%rbp)
test   %r8d,%r8d
je     20534 <png_decompress_chunk+0x34>
mov    %r9,%r10
mov    $0xfffffffffffffffc,%r11
add    %edx,%r10d
mov    %r10d,%r10d
cmp    %rax,%r10
jbe    20562 <png_decompress_chunk+0x62>
mov    %r11,%rsi
callq  6910 <png_zstream_error>
mov    $0xfffffffffffffffc,%rax
leaveq 
retq   
cmp    $0xfffffffffffffffe,%r9
ja     2051b <png_decompress_chunk+0x1b>
mov    %r9,%rax
jmp    2051b <png_decompress_chunk+0x1b>
test   %r8d,%r8d
jne    2056a <png_decompress_chunk+0x6a>
xor    %r9d,%r9d
add    %edx,%r9d
mov    %r9d,%r9d
sub    %r9,%rax
mov    (%rcx),%r9
cmp    %rax,%r9
jbe    2057e <png_decompress_chunk+0x7e>
mov    %rax,(%rcx)
mov    0x218(%rdi),%eax
mov    %rdi,%r9
mov    %r14,-0x48(%rbp)
mov    %r15,-0x50(%rbp)
mov    %rdi,-0x40(%rbp)
mov    %rcx,-0x38(%rbp)
mov    %r8,-0x30(%rbp)
mov    %r9,%rdi
mov    %rsi,%r14
mov    %rax,%rsi
mov    %rdx,%r15
callq  201b0 <png_inflate_claim>
test   %eax,%eax
je     205c6 <png_decompress_chunk+0xc6>
cmp    $0x1,%eax
jne    2061f <png_decompress_chunk+0x11f>
mov    $0xfffffffffffffff9,%rax
mov    -0x50(%rbp),%r15
mov    -0x48(%rbp),%r14
leaveq 
retq   
sub    %r15d,%r14d
mov    %r14,-0x8(%rbp)
mov    %r14d,-0x54(%rbp)
mov    %r15d,%ecx
mov    %rcx,-0x18(%rbp)
mov    -0x40(%rbp),%r14
add    0x458(%r14),%rcx
mov    0x218(%r14),%esi
mov    -0x38(%rbp),%rax
mov    %rax,(%rsp)
lea    -0x54(%rbp),%r8
mov    %r14,%rdi
mov    $0x1,%edx
xor    %r9d,%r9d
mov    %r15,-0x40(%rbp)
mov    %rax,%r15
callq  20320 <png_inflate>
cmp    $0x1,%eax
je     20629 <png_decompress_chunk+0x129>
test   %eax,%eax
jne    2064d <png_decompress_chunk+0x14d>
mov    $0xfffffffffffffff9,%rax
jmp    2064d <png_decompress_chunk+0x14d>
mov    -0x50(%rbp),%r15
mov    -0x48(%rbp),%r14
leaveq 
retq   
lea    0x140(%r14),%rdi
callq  57f0 <inflateReset@plt>
test   %eax,%eax
je     20662 <png_decompress_chunk+0x162>
mov    %r14,%rdi
mov    $0x1,%esi
callq  6910 <png_zstream_error>
mov    $0xfffffffffffffff9,%rax
movl   $0x0,0x138(%r14)
mov    -0x50(%rbp),%r15
mov    -0x48(%rbp),%r14
leaveq 
retq   
mov    -0x30(%rbp),%rax
test   %eax,%eax
mov    (%r15),%rax
mov    %rax,-0x10(%rbp)
je     20677 <png_decompress_chunk+0x177>
pushq  -0x20(%rbp)
popq   -0x28(%rbp)
mov    -0x40(%rbp),%rcx
mov    %ecx,%ecx
mov    %rcx,-0x20(%rbp)
add    %rcx,%rax
mov    -0x28(%rbp),%rcx
lea    (%rcx,%rax,1),%r15
mov    %r14,%rdi
mov    %r15,%rsi
callq  c940 <png_malloc_base>
test   %rax,%rax
jne    206b3 <png_decompress_chunk+0x1b3>
mov    %r14,%rdi
mov    $0xfffffffffffffffc,%r15
mov    %r15,%rsi
callq  6910 <png_zstream_error>
mov    %r15,%rax
jmp    2064d <png_decompress_chunk+0x14d>
mov    %rax,%rdi
mov    %r15,%rdx
mov    %r15,-0x28(%rbp)
mov    %rax,%r15
xor    %esi,%esi
callq  5350 <memset@plt>
mov    -0x18(%rbp),%rax
mov    %rax,%rcx
add    0x458(%r14),%rcx
lea    (%rax,%r15,1),%r9
mov    0x218(%r14),%esi
mov    -0x38(%rbp),%rax
mov    %rax,(%rsp)
mov    %r14,%rdi
mov    $0x1,%edx
mov    %r13,-0x38(%rbp)
mov    %rax,%r13
lea    -0x54(%rbp),%r8
callq  20320 <png_inflate>
cmp    $0x1,%eax
je     20712 <png_decompress_chunk+0x212>
test   %eax,%eax
jne    20758 <png_decompress_chunk+0x258>
mov    $0xfffffffffffffff9,%rax
jmp    20758 <png_decompress_chunk+0x258>
mov    0x0(%r13),%rax
mov    -0x10(%rbp),%rcx
cmp    %rax,%rcx
je     20778 <png_decompress_chunk+0x278>
mov    $0xfffffffffffffff9,%rax
jmp    20758 <png_decompress_chunk+0x258>
mov    %r15,%r13
mov    0x458(%r14),%rsi
mov    %r13,%rdi
callq  54c0 <memcpy@plt>
mov    0x458(%r14),%r15
mov    %r13,0x458(%r14)
mov    -0x28(%rbp),%rax
mov    %rax,0x460(%r14)
mov    $0x1,%eax
mov    %r15,%rsi
mov    %rax,%r15
mov    %r14,%rdi
callq  5790 <png_free@plt>
cmp    $0x1,%r15d
je     20786 <png_decompress_chunk+0x286>
mov    %r15,%rax
mov    -0x38(%rbp),%r13
jmpq   2064d <png_decompress_chunk+0x14d>
mov    -0x30(%rbp),%rcx
test   %ecx,%ecx
jne    2079d <png_decompress_chunk+0x29d>
mov    -0x20(%rbp),%rdx
jmp    207a9 <png_decompress_chunk+0x2a9>
mov    -0x8(%rbp),%rax
cmp    -0x54(%rbp),%eax
jne    207ba <png_decompress_chunk+0x2ba>
mov    -0x38(%rbp),%r13
mov    $0x1,%eax
jmpq   2064d <png_decompress_chunk+0x14d>
mov    -0x20(%rbp),%rdx
add    %rdx,%rax
movb   $0x0,(%r15,%rax,1)
mov    -0x40(%rbp),%rax
test   %eax,%eax
jne    20728 <png_decompress_chunk+0x228>
mov    %r15,%r13
jmp    2073a <png_decompress_chunk+0x23a>
lea    0xe259(%rip),%rsi        # 2ea1a <png_pass_inc.20+0x1a7>
mov    %r14,%rdi
callq  5230 <png_chunk_benign_error@plt>
mov    -0x38(%rbp),%r13
mov    $0x1,%eax
jmpq   2064d <png_decompress_chunk+0x14d>
nopw   0x0(%rax,%rax,1)

00000000000207e0 <png_inflate_read>:
push   %rbp
mov    %rsp,%rbp
sub    $0x40,%rsp
mov    %rsi,-0x38(%rbp)
mov    0x218(%rdi),%eax
cmp    0x138(%rdi),%eax
je     20811 <png_inflate_read+0x31>
lea    0xe54f(%rip),%rax        # 2ed50 <png_pass_inc.20+0x4dd>
mov    %rax,0x170(%rdi)
mov    $0xfffffffffffffffe,%rax
leaveq 
retq   
mov    %r8,0x158(%rdi)
movl   $0x0,0x160(%rdi)
movslq 0x10(%rbp),%r10
mov    %r10,-0x30(%rbp)
xor    %eax,%eax
mov    $0x4,%r8d
mov    $0x2,%r11d
mov    %r15,-0x28(%rbp)
mov    $0xffffffff,%r15d
mov    %r14,-0x20(%rbp)
mov    $0xfffffffe,%r14d
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %rdx,%rbx
mov    %rdi,%r12
mov    %r9,%r13
mov    %r15,%rdx
mov    %r10,%r15
mov    %r14,%r10
mov    %rcx,%r14
mov    %rsi,%rcx
mov    %rax,%rsi
mov    %rdx,%rax
jmpq   20939 <png_inflate_read+0x159>
mov    (%r14),%edx
cmp    %ebx,%edx
jae    20885 <png_inflate_read+0xa5>
mov    %rdx,%rbx
sub    %ebx,%edx
mov    %edx,(%r14)
test   %ebx,%ebx
je     208bf <png_inflate_read+0xdf>
mov    %rcx,%r15
mov    %r12,%rdi
mov    %r15,%rsi
mov    %rbx,%rdx
callq  1b210 <png_crc_read>
mov    %r15,%rcx
mov    $0x2,%r11d
mov    $0x4,%r8d
xor    %esi,%esi
mov    $0xffffffff,%eax
mov    $0xfffffffe,%r10d
mov    -0x30(%rbp),%r15
mov    %rcx,0x140(%r12)
mov    %ebx,0x148(%r12)
mov    0x160(%r12),%ecx
test   %ecx,%ecx
jne    208f8 <png_inflate_read+0x118>
mov    0x0(%r13),%rcx
cmp    %r10,%rcx
ja     208e7 <png_inflate_read+0x107>
mov    %rcx,%rax
mov    %eax,%edx
sub    %rdx,%rcx
mov    %rcx,0x0(%r13)
mov    %eax,0x160(%r12)
mov    (%r14),%eax
test   %eax,%eax
jne    20907 <png_inflate_read+0x127>
test   %r15d,%r15d
jne    2094b <png_inflate_read+0x16b>
mov    %r11,%rsi
mov    %r12,%rdi
callq  1ca80 <png_zlib_inflate>
test   %eax,%eax
jne    20950 <png_inflate_read+0x170>
mov    0x0(%r13),%rcx
test   %rcx,%rcx
je     20991 <png_inflate_read+0x1b1>
mov    -0x38(%rbp),%rcx
mov    $0x2,%r11d
mov    $0x4,%r8d
xor    %esi,%esi
mov    $0xffffffff,%eax
mov    $0xfffffffe,%r10d
mov    0x148(%r12),%edx
test   %edx,%edx
je     2087b <png_inflate_read+0x9b>
jmp    208cf <png_inflate_read+0xef>
mov    %r8,%rsi
jmp    20907 <png_inflate_read+0x127>
mov    0x160(%r12),%ecx
add    0x0(%r13),%rcx
mov    %rcx,0x0(%r13)
mov    %r12,%rdi
mov    %rax,%r15
movl   $0x0,0x160(%rdi)
mov    %r15,%rsi
callq  6910 <png_zstream_error>
mov    %r15,%rax
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x20(%rbp),%r14
mov    -0x28(%rbp),%r15
leaveq 
retq   
mov    0x160(%r12),%ecx
test   %ecx,%ecx
je     20950 <png_inflate_read+0x170>
mov    -0x38(%rbp),%rcx
mov    $0x2,%r11d
mov    $0x4,%r8d
xor    %esi,%esi
mov    $0xffffffff,%eax
mov    $0xfffffffe,%r10d
jmpq   20939 <png_inflate_read+0x159>
nop

00000000000209c0 <png_cache_unknown_chunk>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x10(%rbp)
mov    0x438(%rdi),%rax
test   %rax,%rax
jne    209e0 <png_cache_unknown_chunk+0x20>
mov    %r15,%rcx
mov    %rdi,%r15
jmp    20a0e <png_cache_unknown_chunk+0x4e>
mov    %rdi,%rcx
mov    %r14,-0x8(%rbp)
mov    %rsi,%r14
mov    %rax,%rsi
mov    %rdi,%r15
mov    %rcx,%rdi
callq  5790 <png_free@plt>
movq   $0x0,0x438(%r15)
mov    %r14,%rsi
mov    -0x10(%rbp),%rcx
mov    -0x8(%rbp),%r14
mov    $0xffffffffffffffff,%rax
mov    0x428(%r15),%rdx
test   %rdx,%rdx
jne    20a4a <png_cache_unknown_chunk+0x8a>
mov    %esi,%edx
cmp    %rdx,%rax
jae    20a55 <png_cache_unknown_chunk+0x95>
xor    %eax,%eax
mov    0x438(%r15),%rdx
test   %rdx,%rdx
je     20ad5 <png_cache_unknown_chunk+0x115>
test   %esi,%esi
jne    20afc <png_cache_unknown_chunk+0x13c>
mov    %rax,%rsi
jmpq   20b13 <png_cache_unknown_chunk+0x153>
cmp    $0xfffffffffffffffe,%rdx
ja     20a21 <png_cache_unknown_chunk+0x61>
mov    %rdx,%rax
jmp    20a21 <png_cache_unknown_chunk+0x61>
mov    0x218(%r15),%eax
mov    %rax,%rdi
shr    $0x18,%edi
mov    %dil,0x430(%r15)
mov    %rax,%rdi
shr    $0x10,%edi
mov    %dil,0x431(%r15)
mov    %rax,%rdi
shr    $0x8,%edi
mov    %dil,0x432(%r15)
mov    %al,0x433(%r15)
movb   $0x0,0x434(%r15)
mov    %rdx,0x440(%r15)
movzbl 0x12c(%r15),%eax
mov    %al,0x448(%r15)
test   %esi,%esi
je     20b25 <png_cache_unknown_chunk+0x165>
mov    %r15,%rdi
mov    %r14,-0x8(%rbp)
mov    %rsi,%r14
mov    %rdx,%rsi
callq  5150 <png_malloc_warn@plt>
mov    %rax,0x438(%r15)
mov    %r14,%rsi
mov    -0x10(%rbp),%rcx
mov    -0x8(%rbp),%r14
jmpq   20a28 <png_cache_unknown_chunk+0x68>
test   %esi,%esi
je     20a3a <png_cache_unknown_chunk+0x7a>
mov    %r15,%rdi
callq  1b270 <png_crc_finish>
mov    %r15,%rdi
lea    0xe273(%rip),%rsi        # 2ed62 <png_pass_inc.20+0x4ef>
callq  5230 <png_chunk_benign_error@plt>
xor    %eax,%eax
mov    -0x10(%rbp),%r15
leaveq 
retq   
mov    %rsi,%rax
mov    %rdx,%rsi
mov    %rax,%rdx
mov    %r15,%rdi
callq  1b210 <png_crc_read>
xor    %esi,%esi
mov    -0x10(%rbp),%rcx
mov    %r15,%rdi
mov    %rcx,%r15
callq  1b270 <png_crc_finish>
mov    $0x1,%eax
leaveq 
retq   
movq   $0x0,0x438(%r15)
jmpq   20a28 <png_cache_unknown_chunk+0x68>
data16 nopw %cs:0x0(%rax,%rax,1)

0000000000020b40 <png_read_filter_row_sub>:
push   %rbp
mov    %rsp,%rbp
mov    0x8(%rdi),%rdx
movzbl 0x13(%rdi),%eax
add    $0x7,%eax
shr    $0x3,%eax
mov    %eax,%r8d
lea    (%r8,%rsi,1),%rax
mov    %r8,%rcx
jmp    20b77 <png_read_filter_row_sub+0x37>
mov    %rax,%rsi
sub    %r8,%rsi
movzbl (%rsi),%esi
movzbl (%rax),%edi
add    %edi,%esi
mov    %sil,(%rax)
add    $0x1,%rcx
add    $0x1,%rax
cmp    %rdx,%rcx
jb     20b5e <png_read_filter_row_sub+0x1e>
leaveq 
retq   
xchg   %ax,%ax

0000000000020b80 <png_read_filter_row_up>:
push   %rbp
mov    %rsp,%rbp
mov    0x8(%rdi),%r8
xor    %eax,%eax
jmp    20ba2 <png_read_filter_row_up+0x22>
movzbl (%rdx),%ecx
movzbl (%rsi),%edi
add    %edi,%ecx
mov    %cl,(%rsi)
add    $0x1,%rax
add    $0x1,%rdx
add    $0x1,%rsi
cmp    %r8,%rax
jb     20b8c <png_read_filter_row_up+0xc>
leaveq 
retq   
nopl   0x0(%rax)

0000000000020bb0 <png_read_filter_row_avg>:
push   %rbp
mov    %rsp,%rbp
mov    0x8(%rdi),%r8
movzbl 0x13(%rdi),%eax
lea    0x7(%rax),%r9d
shr    $0x3,%r9d
mov    %r9d,%r11d
xor    %eax,%eax
mov    %rax,%rdi
jmp    20be8 <png_read_filter_row_avg+0x38>
movzbl (%rdx),%ecx
shr    %ecx
movzbl (%rsi),%r10d
add    %r10d,%ecx
mov    %cl,(%rsi)
add    $0x1,%rdx
add    $0x1,%rsi
add    $0x1,%rdi
cmp    %r11,%rdi
jb     20bce <png_read_filter_row_avg+0x1e>
sub    %r11,%r8
mov    %r9d,%r9d
jmp    20c18 <png_read_filter_row_avg+0x68>
mov    %rsi,%rcx
sub    %r9,%rcx
movzbl (%rcx),%edi
movzbl (%rdx),%ecx
add    %edi,%ecx
shr    %ecx
movzbl (%rsi),%edi
add    %edi,%ecx
mov    %cl,(%rsi)
add    $0x1,%rax
add    $0x1,%rsi
add    $0x1,%rdx
cmp    %r8,%rax
jb     20bf5 <png_read_filter_row_avg+0x45>
leaveq 
retq   
nop

0000000000020c20 <png_read_filter_row_paeth_1byte_pixel>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %r13,-0x8(%rbp)
mov    %r14,-0x10(%rbp)
mov    %r15,-0x18(%rbp)
mov    %rsi,%r15
add    0x8(%rdi),%r15
movzbl (%rsi),%eax
movzbl (%rdx),%r9d
lea    (%rax,%r9,1),%edi
mov    %dil,(%rsi)
lea    0x1(%rsi),%rax
lea    0x1(%rdx),%rcx
jmp    20c88 <png_read_filter_row_paeth_1byte_pixel+0x68>
mov    %rdi,%r14
add    %r10d,%esi
test   %esi,%esi
jns    20c61 <png_read_filter_row_paeth_1byte_pixel+0x41>
lea    (%rdi,%r11,1),%esi
cmp    %r8d,%r14d
jge    20c6c <png_read_filter_row_paeth_1byte_pixel+0x4c>
mov    %r14,%r8
mov    %r13,%rdx
cmp    %esi,%r8d
jle    20c74 <png_read_filter_row_paeth_1byte_pixel+0x54>
mov    %r9,%rdx
movzbl (%rax),%esi
lea    (%rdx,%rsi,1),%edi
mov    %dil,(%rax)
add    $0x1,%rax
add    $0x1,%rcx
mov    %r13,%r9
cmp    %r15,%rax
jb     20c9b <png_read_filter_row_paeth_1byte_pixel+0x7b>
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
leaveq 
retq   
movzbl (%rcx),%r13d
mov    %r9,%r11
sub    %r13d,%r11d
mov    %r13,%r10
sub    %r9d,%r10d
test   %r10d,%r10d
js     20cb5 <png_read_filter_row_paeth_1byte_pixel+0x95>
mov    %r10,%r8
jmp    20cb8 <png_read_filter_row_paeth_1byte_pixel+0x98>
mov    %r11,%r8
movzbl %dil,%edx
mov    %r9,%rdi
sub    %edx,%edi
mov    %rdx,%rsi
sub    %r9d,%esi
test   %esi,%esi
js     20c53 <png_read_filter_row_paeth_1byte_pixel+0x33>
mov    %rsi,%r14
jmp    20c56 <png_read_filter_row_paeth_1byte_pixel+0x36>

0000000000020cd0 <png_read_filter_row_paeth_multibyte_pixel>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
movzbl 0x13(%rdi),%eax
add    $0x7,%eax
shr    $0x3,%eax
mov    %eax,%r9d
lea    (%r9,%rsi,1),%rcx
jmp    20cff <png_read_filter_row_paeth_multibyte_pixel+0x2f>
movzbl (%rdx),%r8d
movzbl (%rsi),%eax
add    %r8d,%eax
mov    %al,(%rsi)
add    $0x1,%rdx
add    $0x1,%rsi
cmp    %rcx,%rsi
jb     20ceb <png_read_filter_row_paeth_multibyte_pixel+0x1b>
mov    0x8(%rdi),%rax
sub    %r9,%rax
lea    (%rcx,%rax,1),%r8
mov    %r12,-0x8(%rbp)
mov    %r13,-0x10(%rbp)
mov    %r14,-0x18(%rbp)
mov    %r15,-0x20(%rbp)
jmp    20d50 <png_read_filter_row_paeth_multibyte_pixel+0x80>
mov    %r11,%r14
add    %r10d,%ecx
test   %ecx,%ecx
jns    20d2f <png_read_filter_row_paeth_multibyte_pixel+0x5f>
lea    (%r11,%r12,1),%ecx
cmp    %edi,%r14d
jge    20d3a <png_read_filter_row_paeth_multibyte_pixel+0x6a>
mov    %r13,%rax
mov    %r14,%rdi
cmp    %ecx,%edi
jle    20d41 <png_read_filter_row_paeth_multibyte_pixel+0x71>
mov    %r15,%rax
movzbl (%rsi),%ecx
add    %ecx,%eax
mov    %al,(%rsi)
add    $0x1,%rsi
add    $0x1,%rdx
cmp    %r8,%rsi
jb     20d67 <png_read_filter_row_paeth_multibyte_pixel+0x97>
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
leaveq 
retq   
mov    %rsi,%rax
sub    %r9,%rax
movzbl (%rax),%eax
mov    %rdx,%rcx
sub    %r9,%rcx
movzbl (%rcx),%r15d
movzbl (%rdx),%r13d
mov    %r15,%r12
sub    %r13d,%r12d
mov    %r13,%r10
sub    %r15d,%r10d
test   %r10d,%r10d
js     20d94 <png_read_filter_row_paeth_multibyte_pixel+0xc4>
mov    %r10,%rdi
jmp    20d97 <png_read_filter_row_paeth_multibyte_pixel+0xc7>
mov    %r12,%rdi
mov    %r15,%r11
sub    %eax,%r11d
mov    %rax,%rcx
sub    %r15d,%ecx
test   %ecx,%ecx
js     20d21 <png_read_filter_row_paeth_multibyte_pixel+0x51>
mov    %rcx,%r14
jmpq   20d24 <png_read_filter_row_paeth_multibyte_pixel+0x54>
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

0000000000020dc0 <png_init_filter_functions>:
push   %rbp
mov    %rsp,%rbp
lea    -0x28b(%rip),%rax        # 20b40 <png_read_filter_row_sub>
mov    %rax,0x478(%rdi)
lea    -0x259(%rip),%rax        # 20b80 <png_read_filter_row_up>
mov    %rax,0x480(%rdi)
lea    -0x237(%rip),%rax        # 20bb0 <png_read_filter_row_avg>
mov    %rax,0x488(%rdi)
movzbl 0x26a(%rdi),%eax
add    $0x7,%eax
and    $0xfffffff8,%eax
cmp    $0x8,%eax
je     20e10 <png_init_filter_functions+0x50>
lea    -0x137(%rip),%rax        # 20cd0 <png_read_filter_row_paeth_multibyte_pixel>
mov    %rax,0x490(%rdi)
leaveq 
retq   
lea    -0x1f7(%rip),%rax        # 20c20 <png_read_filter_row_paeth_1byte_pixel>
mov    %rax,0x490(%rdi)
leaveq 
retq   

0000000000020e20 <png_set_compression_buffer_size>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
test   %rdi,%rdi
jne    20e2f <png_set_compression_buffer_size+0xf>
leaveq 
retq   
test   %rsi,%rsi
je     20e69 <png_set_compression_buffer_size+0x49>
cmp    $0x7fffffff,%rsi
ja     20e69 <png_set_compression_buffer_size+0x49>
mov    0x12c(%rdi),%eax
and    $0x8000,%eax
test   %eax,%eax
jne    20e75 <png_set_compression_buffer_size+0x55>
mov    0x138(%rdi),%eax
test   %eax,%eax
jne    20e7d <png_set_compression_buffer_size+0x5d>
cmp    $0x5,%rsi
jbe    20e8b <png_set_compression_buffer_size+0x6b>
mov    0x1b8(%rdi),%eax
cmp    %rax,%rsi
jne    20e99 <png_set_compression_buffer_size+0x79>
leaveq 
retq   
lea    0xdf16(%rip),%rsi        # 2ed86 <png_pass_inc.20+0x513>
callq  5470 <png_error@plt>
mov    %esi,0x468(%rdi)
leaveq 
retq   
lea    0xdf22(%rip),%rsi        # 2eda6 <png_pass_inc.20+0x533>
callq  5390 <png_warning@plt>
leaveq 
retq   
lea    0xdf53(%rip),%rsi        # 2ede5 <png_pass_inc.20+0x572>
callq  5390 <png_warning@plt>
leaveq 
retq   
lea    0x1b0(%rdi),%rax
mov    %rdi,%rcx
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rsi,%r14
mov    %rax,%rsi
mov    %rdi,%r15
mov    %rcx,%rdi
callq  27780 <png_free_buffer_list>
mov    %r14d,0x1b8(%r15)
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
nopl   (%rax)

0000000000020ed0 <png_set_read_user_chunk_fn>:
push   %rbp
mov    %rsp,%rbp
test   %rdi,%rdi
jne    20edb <png_set_read_user_chunk_fn+0xb>
leaveq 
retq   
mov    %rdx,0x3b8(%rdi)
mov    %rsi,0x3b0(%rdi)
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

0000000000020ef0 <png_set_benign_errors>:
push   %rbp
mov    %rsp,%rbp
test   %esi,%esi
jne    20f0b <png_set_benign_errors+0x1b>
mov    0x130(%rdi),%eax
and    $0xff8fffff,%eax
mov    %eax,0x130(%rdi)
leaveq 
retq   
mov    0x130(%rdi),%eax
or     $0x700000,%eax
mov    %eax,0x130(%rdi)
leaveq 
retq   
xchg   %ax,%ax

0000000000020f20 <png_set_rows>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
test   %rdi,%rdi
jne    20f2f <png_set_rows+0xf>
leaveq 
retq   
test   %rsi,%rsi
jne    20f36 <png_set_rows+0x16>
leaveq 
retq   
mov    0x160(%rsi),%rax
test   %rax,%rax
jne    20f50 <png_set_rows+0x30>
mov    %rdx,0x160(%rsi)
test   %rdx,%rdx
jne    20f88 <png_set_rows+0x68>
leaveq 
retq   
cmp    %rdx,%rax
je     20f42 <png_set_rows+0x22>
mov    $0x40,%eax
xor    %ecx,%ecx
mov    %rsi,%r8
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rdx,%r14
mov    %rax,%rdx
mov    %rsi,%r15
mov    %r8,%rsi
callq  5720 <png_free_data@plt>
mov    %r14,%rdx
mov    %r15,%rsi
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
jmp    20f42 <png_set_rows+0x22>
mov    0x8(%rsi),%eax
or     $0x8000,%eax
mov    %eax,0x8(%rsi)
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)

0000000000020fa0 <png_set_bKGD>:
push   %rbp
mov    %rsp,%rbp
test   %rdi,%rdi
jne    20fab <png_set_bKGD+0xb>
leaveq 
retq   
test   %rsi,%rsi
jne    20fb2 <png_set_bKGD+0x12>
leaveq 
retq   
test   %rdx,%rdx
jne    20fb9 <png_set_bKGD+0x19>
leaveq 
retq   
mov    (%rdx),%rax
mov    %rax,0xca(%rsi)
mov    0x8(%rsi),%eax
or     $0x20,%eax
movzwl 0x8(%rdx),%ecx
mov    %eax,0x8(%rsi)
mov    %cx,0xd2(%rsi)
leaveq 
retq   
nopl   0x0(%rax)

0000000000020fe0 <png_set_cHRM>:
push   %rbp
mov    %rsp,%rbp
sub    $0xb0,%rsp
movdqu %xmm1,-0x80(%rbp)
movdqu %xmm2,-0x70(%rbp)
movdqu %xmm3,-0x60(%rbp)
movdqu %xmm4,-0x50(%rbp)
movdqu %xmm5,-0x40(%rbp)
movdqu %xmm6,-0x30(%rbp)
movdqu %xmm7,-0x20(%rbp)
mov    %r14,-0xa0(%rbp)
mov    %r15,-0xa8(%rbp)
mov    %r13,-0x98(%rbp)
mov    %r12,-0x90(%rbp)
mov    %rbx,-0x88(%rbp)
mov    %rsi,%r12
lea    0xdddc(%rip),%rsi        # 2ee17 <png_pass_inc.20+0x5a4>
mov    %rdi,%rbx
callq  69e0 <png_fixed>
mov    %rax,-0x8(%rbp)
lea    0xddd6(%rip),%rsi        # 2ee24 <png_pass_inc.20+0x5b1>
mov    %rbx,%rdi
movdqu -0x80(%rbp),%xmm0
callq  69e0 <png_fixed>
mov    %rax,-0x10(%rbp)
lea    0xddcb(%rip),%rsi        # 2ee31 <png_pass_inc.20+0x5be>
mov    %rbx,%rdi
movdqu -0x70(%rbp),%xmm0
callq  69e0 <png_fixed>
mov    %rax,-0x70(%rbp)
lea    0xddbe(%rip),%rsi        # 2ee3c <png_pass_inc.20+0x5c9>
mov    %rbx,%rdi
movdqu -0x60(%rbp),%xmm0
callq  69e0 <png_fixed>
mov    %rax,-0x80(%rbp)
lea    0xddb1(%rip),%rsi        # 2ee47 <png_pass_inc.20+0x5d4>
mov    %rbx,%rdi
movdqu -0x50(%rbp),%xmm0
callq  69e0 <png_fixed>
mov    %rax,%r13
lea    0xdda7(%rip),%rsi        # 2ee54 <png_pass_inc.20+0x5e1>
mov    %rbx,%rdi
movdqu -0x40(%rbp),%xmm0
callq  69e0 <png_fixed>
mov    %rax,%r14
lea    0xdd9d(%rip),%rsi        # 2ee61 <png_pass_inc.20+0x5ee>
mov    %rbx,%rdi
movdqu -0x30(%rbp),%xmm0
callq  69e0 <png_fixed>
mov    %rax,%r15
lea    0xdd92(%rip),%rsi        # 2ee6d <png_pass_inc.20+0x5fa>
mov    %rbx,%rdi
movdqu -0x20(%rbp),%xmm0
callq  69e0 <png_fixed>
sub    $0x20,%rsp
mov    %r13d,(%rsp)
mov    %r14d,0x8(%rsp)
mov    %r15d,0x10(%rsp)
mov    %eax,0x18(%rsp)
mov    %r12,%rsi
mov    %rbx,%rdi
mov    -0x8(%rbp),%rdx
mov    -0x10(%rbp),%rcx
mov    -0x70(%rbp),%r8
mov    -0x80(%rbp),%r9
callq  5250 <png_set_cHRM_fixed@plt>
mov    -0x88(%rbp),%rbx
mov    -0x90(%rbp),%r12
mov    -0x98(%rbp),%r13
mov    -0xa8(%rbp),%r15
mov    -0xa0(%rbp),%r14
leaveq 
retq   
xchg   %ax,%ax

0000000000021140 <png_set_cHRM_XYZ>:
push   %rbp
mov    %rsp,%rbp
sub    $0xc0,%rsp
movdqu %xmm1,-0x90(%rbp)
movdqu %xmm2,-0x80(%rbp)
movdqu %xmm3,-0x70(%rbp)
movdqu %xmm4,-0x60(%rbp)
movdqu %xmm5,-0x50(%rbp)
movdqu %xmm6,-0x40(%rbp)
movdqu %xmm7,-0x30(%rbp)
mov    %r14,-0xb0(%rbp)
mov    %r15,-0xb8(%rbp)
mov    %r13,-0xa8(%rbp)
mov    %r12,-0xa0(%rbp)
mov    %rbx,-0x98(%rbp)
mov    %rsi,-0x8(%rbp)
lea    0xdc92(%rip),%rsi        # 2ee31 <png_pass_inc.20+0x5be>
mov    %rdi,%rbx
callq  69e0 <png_fixed>
mov    %rax,-0x10(%rbp)
lea    0xdc8a(%rip),%rsi        # 2ee3c <png_pass_inc.20+0x5c9>
mov    %rbx,%rdi
movdqu -0x90(%rbp),%xmm0
callq  69e0 <png_fixed>
mov    %rax,-0x18(%rbp)
lea    0xdcac(%rip),%rsi        # 2ee79 <png_pass_inc.20+0x606>
mov    %rbx,%rdi
movdqu -0x80(%rbp),%xmm0
callq  69e0 <png_fixed>
mov    %rax,-0x80(%rbp)
lea    0xdc62(%rip),%rsi        # 2ee47 <png_pass_inc.20+0x5d4>
mov    %rbx,%rdi
movdqu -0x70(%rbp),%xmm0
callq  69e0 <png_fixed>
mov    %rax,-0x90(%rbp)
lea    0xdc54(%rip),%rsi        # 2ee54 <png_pass_inc.20+0x5e1>
mov    %rbx,%rdi
movdqu -0x60(%rbp),%xmm0
callq  69e0 <png_fixed>
mov    %rax,%r12
lea    0xdc6d(%rip),%rsi        # 2ee84 <png_pass_inc.20+0x611>
mov    %rbx,%rdi
movdqu -0x50(%rbp),%xmm0
callq  69e0 <png_fixed>
mov    %rax,%r13
lea    0xdc33(%rip),%rsi        # 2ee61 <png_pass_inc.20+0x5ee>
mov    %rbx,%rdi
movdqu -0x40(%rbp),%xmm0
callq  69e0 <png_fixed>
mov    %rax,%r14
lea    0xdc28(%rip),%rsi        # 2ee6d <png_pass_inc.20+0x5fa>
mov    %rbx,%rdi
movdqu -0x30(%rbp),%xmm0
callq  69e0 <png_fixed>
mov    %rax,%r15
movsd  0x10(%rbp),%xmm0
lea    0xdc30(%rip),%rsi        # 2ee91 <png_pass_inc.20+0x61e>
mov    %rbx,%rdi
callq  69e0 <png_fixed>
sub    $0x20,%rsp
mov    %r12d,(%rsp)
mov    %r13d,0x8(%rsp)
mov    %r14d,0x10(%rsp)
mov    %r15d,0x18(%rsp)
mov    %eax,0x20(%rsp)
mov    %rbx,%rdi
mov    -0x8(%rbp),%rsi
mov    -0x10(%rbp),%rdx
mov    -0x18(%rbp),%rcx
mov    -0x80(%rbp),%r8
mov    -0x90(%rbp),%r9
callq  58a0 <png_set_cHRM_XYZ_fixed@plt>
mov    -0x98(%rbp),%rbx
mov    -0xa0(%rbp),%r12
mov    -0xa8(%rbp),%r13
mov    -0xb8(%rbp),%r15
mov    -0xb0(%rbp),%r14
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

00000000000212d0 <png_set_cHRM_fixed>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
test   %rdi,%rdi
jne    212df <png_set_cHRM_fixed+0xf>
leaveq 
retq   
test   %rsi,%rsi
jne    212e6 <png_set_cHRM_fixed+0x16>
leaveq 
retq   
mov    %r8d,-0x30(%rbp)
mov    %r9d,-0x2c(%rbp)
movslq 0x10(%rbp),%rax
mov    %eax,-0x28(%rbp)
movslq 0x18(%rbp),%rax
mov    %eax,-0x24(%rbp)
movslq 0x20(%rbp),%rax
mov    %eax,-0x20(%rbp)
movslq 0x28(%rbp),%rax
mov    %eax,-0x1c(%rbp)
mov    %edx,-0x18(%rbp)
mov    %ecx,-0x14(%rbp)
lea    0x34(%rsi),%rax
lea    -0x30(%rbp),%rdx
mov    $0x2,%ecx
mov    %rdi,%r8
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rsi,%r14
mov    %rax,%rsi
mov    %rdi,%r15
mov    %r8,%rdi
callq  7060 <png_colorspace_set_chromaticities>
test   %eax,%eax
je     2134b <png_set_cHRM_fixed+0x7b>
movzwl 0x7e(%r14),%eax
or     $0x10,%ax
mov    %ax,0x7e(%r14)
mov    %r14,%rsi
mov    %r15,%rdi
callq  6f70 <png_colorspace_sync_info>
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   

0000000000021360 <png_set_cHRM_XYZ_fixed>:
push   %rbp
mov    %rsp,%rbp
sub    $0x40,%rsp
test   %rdi,%rdi
jne    2136f <png_set_cHRM_XYZ_fixed+0xf>
leaveq 
retq   
test   %rsi,%rsi
jne    21376 <png_set_cHRM_XYZ_fixed+0x16>
leaveq 
retq   
mov    %edx,-0x34(%rbp)
mov    %ecx,-0x30(%rbp)
mov    %r8d,-0x2c(%rbp)
mov    %r9d,-0x28(%rbp)
movslq 0x10(%rbp),%rax
mov    %eax,-0x24(%rbp)
movslq 0x18(%rbp),%rax
mov    %eax,-0x20(%rbp)
movslq 0x20(%rbp),%rax
mov    %eax,-0x1c(%rbp)
movslq 0x28(%rbp),%rax
mov    %eax,-0x18(%rbp)
movslq 0x30(%rbp),%rax
mov    %eax,-0x14(%rbp)
lea    0x34(%rsi),%rax
lea    -0x34(%rbp),%rdx
mov    $0x2,%ecx
mov    %rdi,%r8
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rsi,%r14
mov    %rax,%rsi
mov    %rdi,%r15
mov    %r8,%rdi
callq  7110 <png_colorspace_set_endpoints>
test   %eax,%eax
je     213e2 <png_set_cHRM_XYZ_fixed+0x82>
movzwl 0x7e(%r14),%eax
or     $0x10,%ax
mov    %ax,0x7e(%r14)
mov    %r14,%rsi
mov    %r15,%rdi
callq  6f70 <png_colorspace_sync_info>
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

0000000000021400 <png_set_eXIf>:
push   %rbp
mov    %rsp,%rbp
lea    0xda92(%rip),%rsi        # 2ee9d <png_pass_inc.20+0x62a>
callq  5390 <png_warning@plt>
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   (%rax)

0000000000021420 <png_set_eXIf_1>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
test   %rdi,%rdi
jne    2142f <png_set_eXIf_1+0xf>
leaveq 
retq   
test   %rsi,%rsi
jne    21436 <png_set_eXIf_1+0x16>
leaveq 
retq   
mov    0xf0(%rsi),%rax
test   %rax,%rax
je     2148d <png_set_eXIf_1+0x6d>
mov    %rdi,%r8
mov    %r13,-0x8(%rbp)
mov    %r14,-0x10(%rbp)
mov    %r15,-0x18(%rbp)
mov    %rcx,-0x20(%rbp)
mov    %rdx,%r13
mov    %rdi,%r14
mov    %r8,%rdi
mov    %rsi,%r15
mov    %rax,%rsi
callq  5790 <png_free@plt>
mov    %r13,%rdx
mov    %r15,%rsi
mov    %r14,%rdi
movq   $0x0,0xf0(%rsi)
mov    -0x20(%rbp),%rcx
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
mov    %edx,0xec(%rsi)
movslq %edx,%rax
mov    %rdi,%rdx
mov    %r14,-0x10(%rbp)
mov    %r15,-0x18(%rbp)
mov    %rcx,-0x20(%rbp)
mov    %rsi,%r14
mov    %rax,%rsi
mov    %rdi,%r15
mov    %rdx,%rdi
callq  5150 <png_malloc_warn@plt>
mov    %rax,0xf0(%r14)
test   %rax,%rax
je     214dd <png_set_eXIf_1+0xbd>
mov    0x12c(%r14),%eax
or     $0x8000,%eax
mov    %eax,0x12c(%r14)
xor    %eax,%eax
mov    -0x20(%rbp),%rsi
jmp    2150a <png_set_eXIf_1+0xea>
mov    %r15,%rdi
lea    0xd9e5(%rip),%rsi        # 2eecc <png_pass_inc.20+0x659>
callq  5390 <png_warning@plt>
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
leaveq 
retq   
movslq %eax,%rdx
movzbl (%rsi,%rdx,1),%ecx
mov    0xf0(%r14),%rdi
mov    %cl,(%rdi,%rdx,1)
add    $0x1,%eax
movslq 0xec(%r14),%rcx
cmp    %eax,%ecx
jg     214f6 <png_set_eXIf_1+0xd6>
mov    0x8(%r14),%eax
or     $0x10000,%eax
mov    %eax,0x8(%r14)
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
leaveq 
retq   
nopl   0x0(%rax)

0000000000021530 <png_set_gAMA>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rsi,%r14
lea    0xd9aa(%rip),%rsi        # 2eef4 <png_pass_inc.20+0x681>
mov    %rdi,%r15
callq  69e0 <png_fixed>
mov    %rax,%rdx
mov    %r14,%rsi
mov    %r15,%rdi
callq  5290 <png_set_gAMA_fixed@plt>
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

0000000000021570 <png_set_gAMA_fixed>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
test   %rdi,%rdi
jne    2157f <png_set_gAMA_fixed+0xf>
leaveq 
retq   
test   %rsi,%rsi
jne    21586 <png_set_gAMA_fixed+0x16>
leaveq 
retq   
lea    0x34(%rsi),%rax
mov    %rdi,%rcx
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rsi,%r14
mov    %rax,%rsi
mov    %rdi,%r15
mov    %rcx,%rdi
callq  6ec0 <png_colorspace_set_gamma>
mov    %r14,%rsi
mov    %r15,%rdi
callq  6f70 <png_colorspace_sync_info>
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

00000000000215c0 <png_set_hIST>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
test   %rdi,%rdi
jne    215cf <png_set_hIST+0xf>
leaveq 
retq   
test   %rsi,%rsi
jne    215d6 <png_set_hIST+0x16>
leaveq 
retq   
movzwl 0x20(%rsi),%eax
test   %ax,%ax
je     21645 <png_set_hIST+0x85>
cmp    $0x100,%ax
ja     21645 <png_set_hIST+0x85>
mov    $0x8,%r9d
xor    %ecx,%ecx
mov    %rdi,%rax
mov    %rsi,%r8
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rdx,-0x18(%rbp)
mov    %r9,%rdx
mov    %rsi,%r14
mov    %r8,%rsi
mov    %rdi,%r15
mov    %rax,%rdi
callq  5720 <png_free_data@plt>
mov    $0x200,%esi
mov    %r15,%rdi
callq  5150 <png_malloc_warn@plt>
mov    %rax,0x100(%r14)
test   %rax,%rax
je     21653 <png_set_hIST+0x93>
mov    0x12c(%r14),%eax
or     $0x8,%eax
mov    %eax,0x12c(%r14)
xor    %eax,%eax
mov    -0x18(%rbp),%rdi
jmp    21681 <png_set_hIST+0xc1>
lea    0xd8b5(%rip),%rsi        # 2ef01 <png_pass_inc.20+0x68e>
callq  5390 <png_warning@plt>
leaveq 
retq   
mov    %r15,%rdi
lea    0xd8d2(%rip),%rsi        # 2ef2f <png_pass_inc.20+0x6bc>
callq  5390 <png_warning@plt>
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
movslq %eax,%rsi
movzwl (%rdi,%rsi,2),%edx
mov    0x100(%r14),%rcx
mov    %dx,(%rcx,%rsi,2)
add    $0x1,%eax
movzwl 0x20(%r14),%ecx
cmp    %eax,%ecx
jg     2166c <png_set_hIST+0xac>
mov    0x8(%r14),%eax
or     $0x40,%eax
mov    %eax,0x8(%r14)
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
nop

00000000000216a0 <png_set_IHDR>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
test   %rdi,%rdi
jne    216af <png_set_IHDR+0xf>
leaveq 
retq   
test   %rsi,%rsi
jne    216b6 <png_set_IHDR+0x16>
leaveq 
retq   
mov    %edx,(%rsi)
mov    %ecx,0x4(%rsi)
mov    %r8b,0x24(%rsi)
mov    %r9b,0x25(%rsi)
movslq 0x18(%rbp),%rax
mov    %al,0x26(%rsi)
movslq 0x20(%rbp),%r11
mov    %r11b,0x27(%rsi)
movslq 0x10(%rbp),%r10
mov    %r10b,0x28(%rsi)
movzbl %al,%eax
mov    %eax,(%rsp)
movzbl %r11b,%eax
mov    %eax,0x8(%rsp)
movzbl %r8b,%r11d
movzbl %r9b,%r8d
movzbl %r10b,%r9d
mov    %rdx,%rax
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rsi,%r14
mov    %rax,%rsi
mov    %rdx,%r15
mov    %rcx,%rdx
mov    %r11,%rcx
callq  7d80 <png_check_IHDR>
add    $0x10,%rsp
movzbl 0x25(%r14),%eax
cmp    $0x3,%al
je     2172e <png_set_IHDR+0x8e>
and    $0x2,%eax
test   %eax,%eax
jg     21773 <png_set_IHDR+0xd3>
movb   $0x1,0x29(%r14)
jmp    21733 <png_set_IHDR+0x93>
movb   $0x1,0x29(%r14)
movzbl 0x25(%r14),%eax
and    $0x4,%eax
test   %eax,%eax
jle    2174b <png_set_IHDR+0xab>
movzbl 0x29(%r14),%eax
add    $0x1,%eax
mov    %al,0x29(%r14)
movzbl 0x24(%r14),%ecx
movzbl 0x29(%r14),%eax
imul   %cl
mov    %al,0x2a(%r14)
cmp    $0x7,%al
ja     2177a <png_set_IHDR+0xda>
movzbl %al,%eax
mov    %r15d,%ecx
imul   %rcx,%rax
add    $0x7,%rax
shr    $0x3,%rax
jmp    21788 <png_set_IHDR+0xe8>
movb   $0x3,0x29(%r14)
jmp    21733 <png_set_IHDR+0x93>
movzbl %al,%eax
shr    $0x3,%rax
mov    %r15d,%ecx
imul   %rcx,%rax
mov    %rax,0x10(%r14)
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)

00000000000217a0 <png_set_oFFs>:
push   %rbp
mov    %rsp,%rbp
test   %rdi,%rdi
jne    217ab <png_set_oFFs+0xb>
leaveq 
retq   
test   %rsi,%rsi
jne    217b2 <png_set_oFFs+0x12>
leaveq 
retq   
mov    %edx,0xd4(%rsi)
mov    %ecx,0xd8(%rsi)
mov    %r8b,0xdc(%rsi)
mov    0x8(%rsi),%eax
or     $0x100,%eax
mov    %eax,0x8(%rsi)
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   (%rax)

00000000000217e0 <png_set_pCAL>:
push   %rbp
mov    %rsp,%rbp
sub    $0x70,%rsp
test   %rdi,%rdi
jne    217ef <png_set_pCAL+0xf>
leaveq 
retq   
test   %rsi,%rsi
jne    217f6 <png_set_pCAL+0x16>
leaveq 
retq   
test   %rdx,%rdx
jne    217fd <png_set_pCAL+0x1d>
leaveq 
retq   
mov    0x18(%rbp),%r10
test   %r10,%r10
jne    21808 <png_set_pCAL+0x28>
leaveq 
retq   
mov    0x20(%rbp),%rax
movslq 0x10(%rbp),%r11
test   %r11d,%r11d
jle    2181c <png_set_pCAL+0x3c>
test   %rax,%rax
jne    2181c <png_set_pCAL+0x3c>
leaveq 
retq   
mov    %r10,-0x28(%rbp)
mov    %rdx,%r10
mov    %r13,-0x10(%rbp)
mov    %r14,-0x18(%rbp)
mov    %r15,-0x20(%rbp)
mov    %rax,-0x68(%rbp)
mov    %rsi,-0x50(%rbp)
mov    %rdx,-0x48(%rbp)
mov    %rcx,-0x30(%rbp)
mov    %r8,-0x38(%rbp)
mov    %r11,%r13
mov    %r9,%r14
mov    %rdi,%r15
mov    %r10,%rdi
callq  5260 <strlen@plt>
mov    $0x1,%edx
test   %r14d,%r14d
js     2188d <png_set_pCAL+0xad>
cmp    $0x3,%r14d
jg     2188d <png_set_pCAL+0xad>
test   %r13d,%r13d
js     218aa <png_set_pCAL+0xca>
cmp    $0xff,%r13d
jg     218aa <png_set_pCAL+0xca>
xor    %ecx,%ecx
mov    %r15,-0x58(%rbp)
mov    %r12,-0x8(%rbp)
mov    %rax,-0x60(%rbp)
mov    %r14,-0x40(%rbp)
mov    %rcx,%r12
mov    -0x68(%rbp),%r14
jmp    218f6 <png_set_pCAL+0x116>
mov    %r15,%rdi
lea    0xd6c0(%rip),%rsi        # 2ef57 <png_pass_inc.20+0x6e4>
callq  b130 <png_chunk_report>
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
leaveq 
retq   
mov    %r15,%rdi
lea    0xd6be(%rip),%rsi        # 2ef72 <png_pass_inc.20+0x6ff>
callq  b130 <png_chunk_report>
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
leaveq 
retq   
movslq %r12d,%rax
mov    (%r14,%rax,8),%r15
test   %r15,%r15
je     219e5 <png_set_pCAL+0x205>
mov    %r15,%rdi
callq  5260 <strlen@plt>
mov    %rax,%rsi
mov    %r15,%rdi
callq  8910 <png_check_fp_string>
test   %eax,%eax
je     219e5 <png_set_pCAL+0x205>
add    $0x1,%r12d
cmp    %r12d,%r13d
jg     218c7 <png_set_pCAL+0xe7>
mov    -0x60(%rbp),%rax
lea    0x1(%rax),%r15
mov    -0x58(%rbp),%r12
mov    %r12,%rdi
mov    %r15,%rsi
callq  5150 <png_malloc_warn@plt>
mov    -0x50(%rbp),%r14
mov    %rax,0x108(%r14)
test   %rax,%rax
je     21a0c <png_set_pCAL+0x22c>
mov    %r15,%rdx
mov    %rax,%rdi
mov    -0x48(%rbp),%rsi
callq  54c0 <memcpy@plt>
mov    -0x30(%rbp),%rax
mov    %eax,0x110(%r14)
mov    -0x38(%rbp),%rax
mov    %eax,0x114(%r14)
mov    -0x40(%rbp),%rax
mov    %al,0x128(%r14)
mov    %r13b,0x129(%r14)
mov    -0x28(%rbp),%r15
mov    %r15,%rdi
callq  5260 <strlen@plt>
lea    0x1(%rax),%rdx
mov    %r12,%rdi
mov    %rdx,%rsi
mov    %r13,-0x60(%rbp)
mov    %rdx,%r13
callq  5150 <png_malloc_warn@plt>
mov    %rax,0x118(%r14)
test   %rax,%rax
je     21a32 <png_set_pCAL+0x252>
mov    %r13,%rdx
mov    %r15,%rsi
mov    %rax,%rdi
callq  54c0 <memcpy@plt>
mov    -0x60(%rbp),%r15
lea    0x1(%r15),%eax
mov    %eax,%r13d
shl    $0x3,%r13
mov    %r12,%rdi
mov    %r13,%rsi
callq  5150 <png_malloc_warn@plt>
mov    %rax,0x120(%r14)
test   %rax,%rax
je     21a53 <png_set_pCAL+0x273>
mov    %r13,%rdx
mov    %rax,%rdi
xor    %r13d,%r13d
mov    %r13,%rsi
callq  5350 <memset@plt>
mov    %rbx,-0x50(%rbp)
mov    -0x68(%rbp),%rbx
jmpq   21ad0 <png_set_pCAL+0x2f0>
lea    0xd5a3(%rip),%rsi        # 2ef8f <png_pass_inc.20+0x71c>
mov    $0x1,%edx
mov    -0x58(%rbp),%rdi
callq  b130 <png_chunk_report>
mov    -0x8(%rbp),%r12
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
leaveq 
retq   
mov    %r12,%rdi
lea    0xd59b(%rip),%rsi        # 2efb1 <png_pass_inc.20+0x73e>
mov    $0x1,%edx
callq  b130 <png_chunk_report>
mov    -0x8(%rbp),%r12
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
leaveq 
retq   
mov    %r12,%rdi
lea    0xd59a(%rip),%rsi        # 2efd6 <png_pass_inc.20+0x763>
callq  5390 <png_warning@plt>
mov    -0x8(%rbp),%r12
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
leaveq 
retq   
mov    %r12,%rdi
lea    0xd59c(%rip),%rsi        # 2eff9 <png_pass_inc.20+0x786>
callq  5390 <png_warning@plt>
mov    -0x8(%rbp),%r12
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
leaveq 
retq   
movslq %r13d,%r15
mov    (%rbx,%r15,8),%rdi
callq  5260 <strlen@plt>
lea    0x1(%rax),%rdx
mov    0x120(%r14),%rax
mov    %rdx,%rsi
mov    %r13,-0x68(%rbp)
mov    %r12,%rdi
mov    %rax,%r12
mov    %rdx,%r13
callq  5150 <png_malloc_warn@plt>
mov    %rax,(%r12,%r15,8)
mov    0x120(%r14),%rax
mov    (%rax,%r15,8),%rdi
test   %rdi,%rdi
je     21b0b <png_set_pCAL+0x32b>
mov    (%rbx,%r15,8),%rsi
mov    %r13,%rdx
callq  54c0 <memcpy@plt>
mov    -0x68(%rbp),%rax
lea    0x1(%rax),%r13d
mov    -0x60(%rbp),%r15
mov    -0x58(%rbp),%r12
cmp    %r13d,%r15d
jg     21a74 <png_set_pCAL+0x294>
mov    0x8(%r14),%eax
or     $0x400,%eax
mov    %eax,0x8(%r14)
mov    0x12c(%r14),%eax
or     $0x80,%eax
mov    %eax,0x12c(%r14)
mov    -0x50(%rbp),%rbx
mov    -0x8(%rbp),%r12
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
leaveq 
retq   
lea    0xd50b(%rip),%rsi        # 2f01d <png_pass_inc.20+0x7aa>
mov    -0x58(%rbp),%rdi
callq  5390 <png_warning@plt>
mov    -0x50(%rbp),%rbx
mov    -0x8(%rbp),%r12
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   0x0(%rax)

0000000000021b40 <png_set_pHYs>:
push   %rbp
mov    %rsp,%rbp
test   %rdi,%rdi
jne    21b4b <png_set_pHYs+0xb>
leaveq 
retq   
test   %rsi,%rsi
jne    21b52 <png_set_pHYs+0x12>
leaveq 
retq   
mov    %edx,0xe0(%rsi)
mov    %ecx,0xe4(%rsi)
mov    %r8b,0xe8(%rsi)
mov    0x8(%rsi),%eax
or     $0x80,%eax
mov    %eax,0x8(%rsi)
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   (%rax)

0000000000021b80 <png_set_PLTE>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
test   %rdi,%rdi
jne    21b8f <png_set_PLTE+0xf>
leaveq 
retq   
test   %rsi,%rsi
jne    21b96 <png_set_PLTE+0x16>
leaveq 
retq   
movzbl 0x25(%rsi),%eax
cmp    $0x3,%al
je     21ba5 <png_set_PLTE+0x25>
mov    $0x100,%eax
jmp    21bb6 <png_set_PLTE+0x36>
mov    %rcx,%r8
mov    $0x1,%eax
movzbl 0x24(%rsi),%ecx
shl    %cl,%eax
mov    %r8,%rcx
test   %ecx,%ecx
js     21c87 <png_set_PLTE+0x107>
cmp    %eax,%ecx
jg     21c87 <png_set_PLTE+0x107>
test   %ecx,%ecx
jg     21ca0 <png_set_PLTE+0x120>
test   %ecx,%ecx
je     21cb5 <png_set_PLTE+0x135>
mov    $0x1000,%eax
xor    %r10d,%r10d
mov    %rdi,%r9
mov    %rsi,%r8
mov    %r12,-0x8(%rbp)
mov    %r13,-0x10(%rbp)
mov    %r14,-0x18(%rbp)
mov    %r15,-0x20(%rbp)
mov    %rdi,%r12
mov    %r9,%rdi
mov    %rsi,%r13
mov    %r8,%rsi
mov    %rcx,%r14
mov    %r10,%rcx
mov    %rdx,%r15
mov    %rax,%rdx
callq  5720 <png_free_data@plt>
mov    $0x300,%esi
mov    %r12,%rdi
callq  5780 <png_calloc@plt>
test   %r14d,%r14d
mov    %rax,0x250(%r12)
jle    21c3d <png_set_PLTE+0xbd>
mov    %r14d,%ecx
lea    (%rcx,%rcx,2),%rdx
mov    %r15,%rsi
mov    %rax,%rdi
callq  54c0 <memcpy@plt>
mov    0x250(%r12),%rax
mov    %rax,0x18(%r13)
mov    %r14w,0x258(%r12)
mov    %r14w,0x20(%r13)
mov    0x12c(%r13),%eax
or     $0x1000,%eax
mov    %eax,0x12c(%r13)
mov    0x8(%r13),%eax
or     $0x8,%eax
mov    %eax,0x8(%r13)
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
leaveq 
retq   
lea    0xd3b6(%rip),%rcx        # 2f044 <png_pass_inc.20+0x7d1>
movzbl 0x25(%rsi),%eax
cmp    $0x3,%al
je     21cc7 <png_set_PLTE+0x147>
mov    %rcx,%rsi
callq  5390 <png_warning@plt>
leaveq 
retq   
test   %rdx,%rdx
jne    21bce <png_set_PLTE+0x4e>
lea    0xd3ab(%rip),%rsi        # 2f05b <png_pass_inc.20+0x7e8>
callq  5470 <png_error@plt>
mov    0x3d8(%rdi),%eax
and    $0x1,%eax
test   %eax,%eax
je     21ca9 <png_set_PLTE+0x129>
jmpq   21bd6 <png_set_PLTE+0x56>
mov    %rcx,%rsi
callq  5470 <png_error@plt>
nop

0000000000021cd0 <png_set_sBIT>:
push   %rbp
mov    %rsp,%rbp
test   %rdi,%rdi
jne    21cdb <png_set_sBIT+0xb>
leaveq 
retq   
test   %rsi,%rsi
jne    21ce2 <png_set_sBIT+0x12>
leaveq 
retq   
test   %rdx,%rdx
jne    21ce9 <png_set_sBIT+0x19>
leaveq 
retq   
mov    (%rdx),%eax
mov    %eax,0xb0(%rsi)
mov    0x8(%rsi),%eax
or     $0x2,%eax
movzbl 0x4(%rdx),%ecx
mov    %eax,0x8(%rsi)
mov    %cl,0xb4(%rsi)
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)

0000000000021d10 <png_set_sRGB>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
test   %rdi,%rdi
jne    21d1f <png_set_sRGB+0xf>
leaveq 
retq   
test   %rsi,%rsi
jne    21d26 <png_set_sRGB+0x16>
leaveq 
retq   
lea    0x34(%rsi),%rax
mov    %rdi,%rcx
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rsi,%r14
mov    %rax,%rsi
mov    %rdi,%r15
mov    %rcx,%rdi
callq  71e0 <png_colorspace_set_sRGB>
mov    %r14,%rsi
mov    %r15,%rdi
callq  6f70 <png_colorspace_sync_info>
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

0000000000021d60 <png_set_sRGB_gAMA_and_cHRM>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
test   %rdi,%rdi
jne    21d6f <png_set_sRGB_gAMA_and_cHRM+0xf>
leaveq 
retq   
test   %rsi,%rsi
jne    21d76 <png_set_sRGB_gAMA_and_cHRM+0x16>
leaveq 
retq   
lea    0x34(%rsi),%rax
mov    %rdi,%rcx
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rdi,%r14
mov    %rcx,%rdi
mov    %rsi,%r15
mov    %rax,%rsi
callq  71e0 <png_colorspace_set_sRGB>
test   %eax,%eax
je     21da8 <png_set_sRGB_gAMA_and_cHRM+0x48>
movzwl 0x7e(%r15),%eax
or     $0x18,%ax
mov    %ax,0x7e(%r15)
mov    %r15,%rsi
mov    %r14,%rdi
callq  6f70 <png_colorspace_sync_info>
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
nopl   (%rax)

0000000000021dc0 <png_set_iCCP>:
push   %rbp
mov    %rsp,%rbp
sub    $0x40,%rsp
test   %rdi,%rdi
jne    21dcf <png_set_iCCP+0xf>
leaveq 
retq   
test   %rsi,%rsi
jne    21dd6 <png_set_iCCP+0x16>
leaveq 
retq   
test   %rdx,%rdx
jne    21ddd <png_set_iCCP+0x1d>
leaveq 
retq   
test   %r8,%r8
jne    21de4 <png_set_iCCP+0x24>
leaveq 
retq   
test   %ecx,%ecx
jne    21ded <png_set_iCCP+0x2d>
mov    %r9,%rcx
jmp    21e48 <png_set_iCCP+0x88>
lea    0xd277(%rip),%rcx        # 2f06b <png_pass_inc.20+0x7f8>
mov    %rdi,%rax
mov    %rbx,-0x18(%rbp)
mov    %r12,-0x20(%rbp)
mov    %r13,-0x28(%rbp)
mov    %r14,-0x30(%rbp)
mov    %r15,-0x38(%rbp)
mov    %r8,%rbx
mov    %rdx,%r12
mov    %rsi,%r13
mov    %rcx,%rsi
mov    %rdi,%r14
mov    %rax,%rdi
mov    %r9,%r15
callq  b110 <png_app_error>
mov    %r15,%rcx
mov    %r12,%rdx
mov    %r13,%rsi
mov    %r14,%rdi
mov    %rbx,%r8
mov    -0x38(%rbp),%r15
mov    -0x30(%rbp),%r14
mov    -0x28(%rbp),%r13
mov    -0x20(%rbp),%r12
mov    -0x18(%rbp),%rbx
lea    0x34(%rsi),%rax
movzbl 0x25(%rsi),%r9d
mov    %rdi,%r10
mov    %rdx,%r11
mov    %rcx,-0x28(%rbp)
mov    %r8,-0x10(%rbp)
mov    %r14,-0x18(%rbp)
mov    %r15,-0x20(%rbp)
mov    %rdx,-0x38(%rbp)
mov    %r11,%rdx
mov    %rsi,%r14
mov    %rax,%rsi
mov    %rdi,%r15
mov    %r10,%rdi
callq  73e0 <png_colorspace_set_ICC>
mov    %r15,%rdi
mov    %r14,%rsi
mov    %r15,-0x30(%rbp)
mov    %rax,%r15
callq  6f70 <png_colorspace_sync_info>
test   %r15d,%r15d
jne    21ea0 <png_set_iCCP+0xe0>
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
leaveq 
retq   
movzwl 0x7e(%r14),%eax
or     $0x18,%ax
mov    %ax,0x7e(%r14)
mov    -0x38(%rbp),%r15
mov    %r15,%rdi
callq  5260 <strlen@plt>
lea    0x1(%rax),%rcx
mov    -0x30(%rbp),%rax
mov    %rax,%rdi
mov    %rcx,%rsi
mov    %r13,-0x38(%rbp)
mov    %r14,-0x8(%rbp)
mov    %rax,%r13
mov    %rcx,%r14
callq  5150 <png_malloc_warn@plt>
test   %rax,%rax
je     21f7d <png_set_iCCP+0x1bd>
mov    %r14,%rdx
mov    %rax,%r14
mov    %r15,%rsi
mov    %r14,%rdi
callq  54c0 <memcpy@plt>
mov    -0x28(%rbp),%rax
mov    %eax,%r15d
mov    %r13,%rdi
mov    %r15,%rsi
callq  5150 <png_malloc_warn@plt>
test   %rax,%rax
je     21f9a <png_set_iCCP+0x1da>
mov    %r15,%rdx
mov    %rax,%r15
mov    %r15,%rdi
mov    -0x10(%rbp),%rsi
callq  54c0 <memcpy@plt>
mov    %r13,%rdi
mov    $0x10,%edx
xor    %ecx,%ecx
mov    -0x8(%rbp),%r13
mov    %r13,%rsi
callq  5720 <png_free_data@plt>
mov    -0x28(%rbp),%rax
mov    %eax,0x90(%r13)
mov    %r14,0x80(%r13)
mov    %r15,0x88(%r13)
mov    0x12c(%r13),%eax
or     $0x10,%eax
mov    %eax,0x12c(%r13)
mov    0x8(%r13),%eax
or     $0x1000,%eax
mov    %eax,0x8(%r13)
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x38(%rbp),%r13
leaveq 
retq   
mov    %r13,%rdi
lea    0xd104(%rip),%rsi        # 2f08b <png_pass_inc.20+0x818>
callq  5590 <png_benign_error@plt>
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x38(%rbp),%r13
leaveq 
retq   
mov    %r14,%rsi
mov    %r13,%rdi
callq  5790 <png_free@plt>
mov    %r13,%rdi
lea    0xd106(%rip),%rsi        # 2f0b5 <png_pass_inc.20+0x842>
callq  5590 <png_benign_error@plt>
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x38(%rbp),%r13
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   (%rax)

0000000000021fd0 <png_set_sPLT>:
push   %rbp
mov    %rsp,%rbp
sub    $0x40,%rsp
test   %rdi,%rdi
jne    21fdf <png_set_sPLT+0xf>
leaveq 
retq   
test   %rsi,%rsi
jne    21fe6 <png_set_sPLT+0x16>
leaveq 
retq   
test   %ecx,%ecx
jg     21fec <png_set_sPLT+0x1c>
leaveq 
retq   
test   %rdx,%rdx
jne    21ff3 <png_set_sPLT+0x23>
leaveq 
retq   
mov    0x140(%rsi),%r11
movslq 0x148(%rsi),%r9
mov    $0x20,%r8d
mov    %rdi,%rax
mov    %rcx,%r10
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rcx,-0x38(%rbp)
mov    %rdx,-0x30(%rbp)
mov    %r10,%rcx
mov    %r9,%rdx
mov    %rdi,%r14
mov    %rax,%rdi
mov    %rsi,%r15
mov    %r11,%rsi
callq  c990 <png_realloc_array>
test   %rax,%rax
je     2208e <png_set_sPLT+0xbe>
mov    0x140(%r15),%rsi
mov    %r14,%rdi
mov    %r13,-0x18(%rbp)
mov    %rax,%r13
callq  5790 <png_free@plt>
mov    %r13,0x140(%r15)
mov    0x12c(%r15),%ecx
or     $0x20,%ecx
mov    %ecx,0x12c(%r15)
lea    0xd088(%rip),%rsi        # 2f0f6 <png_pass_inc.20+0x883>
movslq 0x148(%r15),%rcx
shl    $0x5,%rcx
add    %rcx,%r13
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    -0x30(%rbp),%rbx
mov    -0x38(%rbp),%r12
jmp    220b3 <png_set_sPLT+0xe3>
mov    %r14,%rdi
lea    0xd049(%rip),%rsi        # 2f0e1 <png_pass_inc.20+0x86e>
mov    $0x1,%edx
callq  b130 <png_chunk_report>
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
leaveq 
retq   
lea    0xd043(%rip),%rsi        # 2f0f6 <png_pass_inc.20+0x883>
mov    (%rbx),%rdi
test   %rdi,%rdi
jne    220ec <png_set_sPLT+0x11c>
mov    %r14,%rdi
callq  b110 <png_app_error>
add    $0xffffffff,%r12d
test   %r12d,%r12d
jne    220ac <png_set_sPLT+0xdc>
xor    %eax,%eax
test   %eax,%eax
jg     2219f <png_set_sPLT+0x1cf>
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x18(%rbp),%r13
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
leaveq 
retq   
mov    0x10(%rbx),%rax
test   %rax,%rax
je     220bb <png_set_sPLT+0xeb>
movzbl 0x8(%rbx),%eax
mov    %al,0x8(%r13)
callq  5260 <strlen@plt>
lea    0x1(%rax),%rdx
mov    %r14,%rdi
mov    %rdx,%rsi
mov    %r12,-0x38(%rbp)
mov    %rdx,%r12
callq  c940 <png_malloc_base>
mov    %rax,0x0(%r13)
test   %rax,%rax
je     221c9 <png_set_sPLT+0x1f9>
mov    %r12,%rdx
mov    %rax,%rdi
mov    (%rbx),%rsi
callq  54c0 <memcpy@plt>
movslq 0x18(%rbx),%rsi
mov    %r14,%rdi
mov    $0xa,%edx
callq  c970 <png_malloc_array>
mov    %rax,0x10(%r13)
test   %rax,%rax
je     221d2 <png_set_sPLT+0x202>
movslq 0x18(%rbx),%rcx
mov    %ecx,0x18(%r13)
mov    0x10(%rbx),%rsi
mov    0x18(%rbx),%ecx
lea    (%rcx,%rcx,4),%rcx
lea    (%rcx,%rcx,1),%rdx
mov    %rax,%rdi
callq  54c0 <memcpy@plt>
mov    0x8(%r15),%eax
or     $0x2000,%eax
mov    %eax,0x8(%r15)
movslq 0x148(%r15),%rax
add    $0x1,%eax
mov    %eax,0x148(%r15)
add    $0x20,%rbx
add    $0x20,%r13
mov    -0x38(%rbp),%r12
jmpq   220c3 <png_set_sPLT+0xf3>
mov    %r14,%rdi
lea    0xcf68(%rip),%rsi        # 2f111 <png_pass_inc.20+0x89e>
mov    $0x1,%edx
callq  b130 <png_chunk_report>
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x18(%rbp),%r13
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
leaveq 
retq   
mov    -0x38(%rbp),%rax
jmpq   220ce <png_set_sPLT+0xfe>
mov    0x0(%r13),%rsi
mov    %r14,%rdi
callq  5790 <png_free@plt>
movq   $0x0,0x0(%r13)
mov    -0x38(%rbp),%rax
jmpq   220ce <png_set_sPLT+0xfe>
nop

00000000000221f0 <png_set_text>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %rdi,-0x8(%rbp)
callq  22de0 <png_set_text_2>
test   %eax,%eax
jne    22207 <png_set_text+0x17>
leaveq 
retq   
lea    0xcf16(%rip),%rsi        # 2f124 <png_pass_inc.20+0x8b1>
mov    -0x8(%rbp),%rdi
callq  5470 <png_error@plt>
nopw   0x0(%rax,%rax,1)

0000000000022220 <png_set_tIME>:
push   %rbp
mov    %rsp,%rbp
test   %rdi,%rdi
jne    2222b <png_set_tIME+0xb>
leaveq 
retq   
test   %rsi,%rsi
jne    22232 <png_set_tIME+0x12>
leaveq 
retq   
test   %rdx,%rdx
jne    22239 <png_set_tIME+0x19>
leaveq 
retq   
mov    0x12c(%rdi),%eax
and    $0x200,%eax
test   %eax,%eax
je     2224a <png_set_tIME+0x2a>
leaveq 
retq   
movzbl 0x2(%rdx),%eax
test   %al,%al
je     22291 <png_set_tIME+0x71>
cmp    $0xc,%al
ja     22291 <png_set_tIME+0x71>
movzbl 0x3(%rdx),%eax
test   %al,%al
je     22291 <png_set_tIME+0x71>
cmp    $0x1f,%al
ja     22291 <png_set_tIME+0x71>
movzbl 0x4(%rdx),%eax
cmp    $0x17,%al
ja     22291 <png_set_tIME+0x71>
movzbl 0x5(%rdx),%eax
cmp    $0x3b,%al
ja     22291 <png_set_tIME+0x71>
movzbl 0x6(%rdx),%eax
cmp    $0x3c,%al
ja     22291 <png_set_tIME+0x71>
mov    0x8(%rsi),%eax
or     $0x200,%eax
mov    (%rdx),%rcx
mov    %eax,0x8(%rsi)
mov    %rcx,0xa8(%rsi)
leaveq 
retq   
lea    0xceae(%rip),%rsi        # 2f146 <png_pass_inc.20+0x8d3>
callq  5390 <png_warning@plt>
leaveq 
retq   
nop

00000000000222a0 <png_set_tRNS>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
test   %rdi,%rdi
jne    222af <png_set_tRNS+0xf>
leaveq 
retq   
test   %rsi,%rsi
jne    222b6 <png_set_tRNS+0x16>
leaveq 
retq   
test   %rdx,%rdx
je     2232a <png_set_tRNS+0x8a>
mov    $0x2000,%r10d
xor    %r11d,%r11d
mov    %rdi,%r9
mov    %rsi,%rax
mov    %r12,-0x8(%rbp)
mov    %r13,-0x10(%rbp)
mov    %r14,-0x18(%rbp)
mov    %r15,-0x20(%rbp)
mov    %rdx,-0x28(%rbp)
mov    %r10,%rdx
mov    %rsi,%r12
mov    %rax,%rsi
mov    %rcx,%r13
mov    %r11,%rcx
mov    %r8,%r14
mov    %rdi,%r15
mov    %r9,%rdi
callq  5720 <png_free_data@plt>
test   %r13d,%r13d
jg     22339 <png_set_tRNS+0x99>
mov    %r13,%rcx
mov    %r12,%rsi
mov    %r15,%rdi
mov    %r14,%r8
mov    0xb8(%rsi),%rax
mov    %rax,0x2e8(%rdi)
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
test   %r8,%r8
jne    22350 <png_set_tRNS+0xb0>
mov    %cx,0x22(%rsi)
test   %ecx,%ecx
jne    2237d <png_set_tRNS+0xdd>
leaveq 
retq   
cmp    $0x100,%r13d
jle    22399 <png_set_tRNS+0xf9>
mov    %r13,%rcx
mov    %r12,%rsi
mov    %r15,%rdi
mov    %r14,%r8
jmp    2230c <png_set_tRNS+0x6c>
mov    $0x1,%eax
movzbl 0x24(%rsi),%edx
cmp    $0xf,%dl
jbe    223ce <png_set_tRNS+0x12e>
mov    (%r8),%rdx
mov    %rdx,0xc0(%rsi)
movzwl 0x8(%r8),%edx
mov    %dx,0xc8(%rsi)
test   %ecx,%ecx
jne    2232f <png_set_tRNS+0x8f>
mov    %rax,%rcx
jmp    2232f <png_set_tRNS+0x8f>
mov    0x8(%rsi),%eax
or     $0x10,%eax
mov    %eax,0x8(%rsi)
mov    0x12c(%rsi),%eax
or     $0x2000,%eax
mov    %eax,0x12c(%rsi)
leaveq 
retq   
mov    $0x100,%esi
mov    %r15,%rdi
callq  5800 <png_malloc@plt>
mov    %rax,%rdi
mov    %rdi,0xb8(%r12)
movslq %r13d,%rdx
mov    -0x28(%rbp),%rsi
callq  54c0 <memcpy@plt>
mov    %r13,%rcx
mov    %r12,%rsi
mov    %r15,%rdi
mov    %r14,%r8
jmpq   2230c <png_set_tRNS+0x6c>
mov    %rcx,%r9
mov    %rdx,%rcx
mov    %rax,%rdx
shl    %cl,%edx
add    $0xffffffff,%edx
movzbl 0x25(%rsi),%ecx
test   %cl,%cl
je     223f5 <png_set_tRNS+0x155>
movzbl 0x25(%rsi),%ecx
cmp    $0x2,%cl
je     22441 <png_set_tRNS+0x1a1>
mov    %r9,%rcx
jmpq   2235e <png_set_tRNS+0xbe>
movzwl 0x8(%r8),%ecx
cmp    %edx,%ecx
jle    223e4 <png_set_tRNS+0x144>
lea    0xcd5d(%rip),%rax        # 2f162 <png_pass_inc.20+0x8ef>
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %r9,%r13
mov    %rsi,%r14
mov    %rax,%rsi
mov    %r8,%r15
callq  5390 <png_warning@plt>
mov    %r13,%rcx
mov    %r14,%rsi
mov    %r15,%r8
mov    $0x1,%eax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
jmpq   2235e <png_set_tRNS+0xbe>
movzwl 0x2(%r8),%ecx
cmp    %ecx,%edx
jl     223fe <png_set_tRNS+0x15e>
movzwl 0x4(%r8),%ecx
cmp    %ecx,%edx
jl     223fe <png_set_tRNS+0x15e>
movzwl 0x6(%r8),%ecx
cmp    %ecx,%edx
jl     223fe <png_set_tRNS+0x15e>
mov    %r9,%rcx
jmpq   2235e <png_set_tRNS+0xbe>
data16 nopw %cs:0x0(%rax,%rax,1)
nop

0000000000022470 <png_set_sCAL>:
push   %rbp
mov    %rsp,%rbp
sub    $0x50,%rsp
xorpd  %xmm2,%xmm2
ucomisd %xmm2,%xmm0
jp     22488 <png_set_sCAL+0x18>
jbe    2250d <png_set_sCAL+0x9d>
ucomisd %xmm2,%xmm1
jp     22494 <png_set_sCAL+0x24>
jbe    2251b <png_set_sCAL+0xab>
lea    -0x4c(%rbp),%rax
mov    $0x12,%r8d
mov    $0x5,%ecx
mov    %rdi,%r9
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rsi,%r13
mov    %rax,%rsi
mov    %rdx,%r14
mov    %r8,%rdx
mov    %rdi,%r15
mov    %r9,%rdi
movdqu %xmm1,-0x10(%rbp)
callq  8080 <png_ascii_from_fp>
lea    -0x3a(%rbp),%rsi
mov    %r15,%rdi
mov    $0x5,%ecx
mov    $0x12,%edx
movdqu -0x10(%rbp),%xmm0
callq  8080 <png_ascii_from_fp>
mov    %r14,%rdx
mov    %r13,%rsi
mov    %r15,%rdi
lea    -0x3a(%rbp),%r8
lea    -0x4c(%rbp),%rcx
callq  5660 <png_set_sCAL_s@plt>
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
leaveq 
retq   
lea    0xcc80(%rip),%rsi        # 2f194 <png_pass_inc.20+0x921>
callq  5390 <png_warning@plt>
leaveq 
retq   
lea    0xcc8d(%rip),%rsi        # 2f1af <png_pass_inc.20+0x93c>
callq  5390 <png_warning@plt>
leaveq 
retq   
nopl   0x0(%rax)

0000000000022530 <png_set_sCAL_fixed>:
push   %rbp
mov    %rsp,%rbp
sub    $0x50,%rsp
test   %ecx,%ecx
jle    225ba <png_set_sCAL_fixed+0x8a>
test   %r8d,%r8d
jle    225c8 <png_set_sCAL_fixed+0x98>
lea    -0x44(%rbp),%rax
mov    $0x12,%r9d
mov    %rdi,%r10
mov    %r12,-0x8(%rbp)
mov    %r13,-0x10(%rbp)
mov    %r14,-0x18(%rbp)
mov    %r15,-0x20(%rbp)
mov    %rdx,%r12
mov    %r9,%rdx
mov    %rsi,%r13
mov    %rax,%rsi
mov    %rdi,%r14
mov    %r10,%rdi
mov    %r8,%r15
callq  85b0 <png_ascii_from_fixed>
mov    %r15,%rcx
lea    -0x32(%rbp),%r15
mov    %r14,%rdi
mov    %r15,%rsi
mov    $0x12,%edx
callq  85b0 <png_ascii_from_fixed>
mov    %r12,%rdx
mov    %r13,%rsi
mov    %r14,%rdi
mov    %r15,%r8
lea    -0x44(%rbp),%rcx
callq  5660 <png_set_sCAL_s@plt>
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
leaveq 
retq   
lea    0xcbd3(%rip),%rsi        # 2f194 <png_pass_inc.20+0x921>
callq  5390 <png_warning@plt>
leaveq 
retq   
lea    0xcbe0(%rip),%rsi        # 2f1af <png_pass_inc.20+0x93c>
callq  5390 <png_warning@plt>
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)

00000000000225e0 <png_set_sCAL_s>:
push   %rbp
mov    %rsp,%rbp
sub    $0x40,%rsp
test   %rdi,%rdi
jne    225ef <png_set_sCAL_s+0xf>
leaveq 
retq   
test   %rsi,%rsi
jne    225f6 <png_set_sCAL_s+0x16>
leaveq 
retq   
cmp    $0x1,%edx
jne    22642 <png_set_sCAL_s+0x62>
test   %rcx,%rcx
je     22636 <png_set_sCAL_s+0x56>
mov    %rcx,%rax
mov    %rbx,-0x10(%rbp)
mov    %r12,-0x18(%rbp)
mov    %r13,-0x20(%rbp)
mov    %r14,-0x28(%rbp)
mov    %r15,-0x30(%rbp)
mov    %rsi,%rbx
mov    %rdx,%r12
mov    %r8,%r13
mov    %rdi,%r14
mov    %rax,%rdi
mov    %rcx,%r15
callq  5260 <strlen@plt>
test   %rax,%rax
jne    22653 <png_set_sCAL_s+0x73>
mov    %r14,%rdi
lea    0xcba0(%rip),%rsi        # 2f1dd <png_pass_inc.20+0x96a>
callq  5470 <png_error@plt>
cmp    $0x2,%edx
je     225fb <png_set_sCAL_s+0x1b>
lea    0xcb7d(%rip),%rsi        # 2f1cb <png_pass_inc.20+0x958>
callq  5470 <png_error@plt>
movsbq (%r15),%rcx
cmp    $0x2d,%cl
jne    22661 <png_set_sCAL_s+0x81>
mov    %r14,%rdi
jmp    22636 <png_set_sCAL_s+0x56>
mov    %r15,%rdi
mov    %rax,%rsi
mov    %r15,-0x38(%rbp)
mov    %rax,%r15
callq  8910 <png_check_fp_string>
test   %eax,%eax
jne    2267c <png_set_sCAL_s+0x9c>
mov    %r14,%rdi
jmp    22636 <png_set_sCAL_s+0x56>
test   %r13,%r13
je     22752 <png_set_sCAL_s+0x172>
mov    %r13,%rdi
callq  5260 <strlen@plt>
test   %rax,%rax
je     22752 <png_set_sCAL_s+0x172>
movsbq 0x0(%r13),%rcx
cmp    $0x2d,%cl
je     22752 <png_set_sCAL_s+0x172>
mov    %r13,%rdi
mov    %rax,%rsi
mov    %r13,-0x8(%rbp)
mov    %rax,%r13
callq  8910 <png_check_fp_string>
test   %eax,%eax
je     22752 <png_set_sCAL_s+0x172>
mov    %r12b,0x14c(%rbx)
add    $0x1,%r15
mov    %r14,%rdi
mov    %r15,%rsi
callq  5150 <png_malloc_warn@plt>
mov    %rax,0x150(%rbx)
lea    0xcb22(%rip),%r12        # 2f204 <png_pass_inc.20+0x991>
test   %rax,%rax
je     22761 <png_set_sCAL_s+0x181>
mov    %r15,%rdx
mov    %rax,%rdi
mov    -0x38(%rbp),%rsi
callq  54c0 <memcpy@plt>
add    $0x1,%r13
mov    %r14,%rdi
mov    %r13,%rsi
callq  5150 <png_malloc_warn@plt>
mov    %rax,0x158(%rbx)
test   %rax,%rax
je     22782 <png_set_sCAL_s+0x1a2>
mov    %r13,%rdx
mov    %rax,%rdi
mov    -0x8(%rbp),%rsi
callq  54c0 <memcpy@plt>
mov    0x8(%rbx),%eax
or     $0x4000,%eax
mov    %eax,0x8(%rbx)
mov    0x12c(%rbx),%eax
or     $0x100,%eax
mov    %eax,0x12c(%rbx)
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
mov    -0x10(%rbp),%rbx
leaveq 
retq   
mov    %r14,%rdi
lea    0xca94(%rip),%rsi        # 2f1f0 <png_pass_inc.20+0x97d>
callq  5470 <png_error@plt>
mov    %r12,%rsi
mov    %r14,%rdi
callq  5390 <png_warning@plt>
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
mov    -0x10(%rbp),%rbx
leaveq 
retq   
mov    0x150(%rbx),%rsi
mov    %r14,%rdi
callq  5790 <png_free@plt>
movq   $0x0,0x150(%rbx)
mov    %r12,%rsi
mov    %r14,%rdi
callq  5390 <png_warning@plt>
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
mov    -0x10(%rbp),%rbx
leaveq 
retq   
nopl   (%rax)

00000000000227c0 <png_set_keep_unknown_chunks>:
push   %rbp
mov    %rsp,%rbp
sub    $0x40,%rsp
test   %rdi,%rdi
jne    227cf <png_set_keep_unknown_chunks+0xf>
leaveq 
retq   
test   %esi,%esi
js     227f3 <png_set_keep_unknown_chunks+0x33>
cmp    $0x3,%esi
jg     227f3 <png_set_keep_unknown_chunks+0x33>
test   %ecx,%ecx
jle    22801 <png_set_keep_unknown_chunks+0x41>
test   %ecx,%ecx
js     2280d <png_set_keep_unknown_chunks+0x4d>
test   %rdx,%rdx
jne    22819 <png_set_keep_unknown_chunks+0x59>
lea    0xcacb(%rip),%rsi        # 2f2b7 <chunks_to_ignore.46+0x5a>
callq  b110 <png_app_error>
leaveq 
retq   
lea    0xca39(%rip),%rsi        # 2f233 <png_pass_inc.20+0x9c0>
callq  b110 <png_app_error>
leaveq 
retq   
mov    %esi,0x3c0(%rdi)
test   %ecx,%ecx
jne    227dc <png_set_keep_unknown_chunks+0x1c>
leaveq 
retq   
mov    $0x12,%ecx
lea    0xca44(%rip),%rdx        # 2f25d <chunks_to_ignore.46>
mov    0x3c4(%rdi),%eax
xor    %r8d,%r8d
mov    0x3c8(%rdi),%r9
test   %r9,%r9
jne    22831 <png_set_keep_unknown_chunks+0x71>
mov    %r8,%rax
lea    (%rax,%rcx,1),%r9d
cmp    $0x33333333,%r9d
ja     2284e <png_set_keep_unknown_chunks+0x8e>
test   %esi,%esi
jne    2285c <png_set_keep_unknown_chunks+0x9c>
test   %eax,%eax
jne    228b8 <png_set_keep_unknown_chunks+0xf8>
mov    %r8,%r9
jmpq   22904 <png_set_keep_unknown_chunks+0x144>
lea    0xca8d(%rip),%rsi        # 2f2e2 <chunks_to_ignore.46+0x85>
callq  b110 <png_app_error>
leaveq 
retq   
lea    (%r9,%r9,4),%r8d
mov    %r8d,%r8d
mov    %rdi,%r9
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rdx,-0x30(%rbp)
mov    %rsi,-0x38(%rbp)
mov    %r8,%rsi
mov    %rdi,%r13
mov    %r9,%rdi
mov    %rax,%r14
mov    %rcx,%r15
callq  5800 <png_malloc@plt>
test   %r14d,%r14d
jne    228c1 <png_set_keep_unknown_chunks+0x101>
mov    %r15,%rcx
mov    %r13,%rdi
mov    %rax,%r9
mov    %r14,%rax
xor    %r8d,%r8d
mov    -0x38(%rbp),%rsi
mov    -0x30(%rbp),%rdx
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
jmp    22904 <png_set_keep_unknown_chunks+0x144>
mov    0x3c8(%rdi),%r9
jmp    22904 <png_set_keep_unknown_chunks+0x144>
mov    0x3c8(%r13),%rsi
lea    (%r14,%r14,4),%ecx
mov    %ecx,%edx
mov    %rax,%rdi
mov    %r12,-0x10(%rbp)
mov    %rax,%r12
callq  54c0 <memcpy@plt>
mov    %r14,%rax
mov    %r15,%rcx
mov    %r13,%rdi
mov    %r12,%r9
mov    -0x10(%rbp),%r12
xor    %r8d,%r8d
mov    -0x38(%rbp),%rsi
mov    -0x30(%rbp),%rdx
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
test   %r9,%r9
jne    22921 <png_set_keep_unknown_chunks+0x161>
mov    %r8,%rax
mov    %r8d,0x3c4(%rdi)
mov    0x3c8(%rdi),%rsi
cmp    %rsi,%rax
jne    22947 <png_set_keep_unknown_chunks+0x187>
leaveq 
retq   
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %r12,-0x10(%rbp)
mov    %rdi,-0x30(%rbp)
mov    %rbx,-0x8(%rbp)
mov    %r9,%rbx
mov    %rcx,%r12
mov    %rdx,%r13
mov    %r8,%r14
jmp    229a5 <png_set_keep_unknown_chunks+0x1e5>
test   %rsi,%rsi
je     22973 <png_set_keep_unknown_chunks+0x1b3>
mov    %rdi,%rcx
mov    %r14,-0x8(%rbp)
mov    %r15,-0x38(%rbp)
mov    %rdi,%r14
mov    %rcx,%rdi
mov    %rax,%r15
callq  5790 <png_free@plt>
mov    %r15,%rax
mov    %r14,%rdi
mov    -0x38(%rbp),%r15
mov    -0x8(%rbp),%r14
mov    %rax,0x3c8(%rdi)
leaveq 
retq   
mov    %r14d,%ecx
lea    0x0(%r13,%rcx,1),%rdx
mov    %rbx,%rdi
mov    %rsi,%rcx
mov    %rsi,-0x38(%rbp)
mov    %rax,%rsi
mov    %r8,%r15
callq  23440 <add_one_chunk>
add    $0x5,%r14d
lea    0x1(%r15),%r8d
mov    -0x38(%rbp),%rsi
cmp    %r8d,%r12d
ja     2297c <png_set_keep_unknown_chunks+0x1bc>
mov    $0x5,%edx
mov    %rbx,-0x38(%rbp)
xor    %r12d,%r12d
mov    %rbx,%r13
mov    %r12,%r8
jmp    229f8 <png_set_keep_unknown_chunks+0x238>
movzbl 0x4(%r13),%ecx
test   %cl,%cl
je     229f0 <png_set_keep_unknown_chunks+0x230>
cmp    %rbx,%r13
je     229e8 <png_set_keep_unknown_chunks+0x228>
mov    %r8,%r14
mov    %rax,%r15
mov    %rbx,%rdi
mov    %r13,%rsi
callq  54c0 <memcpy@plt>
mov    %r15,%rax
mov    %r14,%r8
mov    $0x5,%edx
add    $0x1,%r8d
add    $0x5,%rbx
add    $0x5,%r13
add    $0x1,%r12d
cmp    %eax,%r12d
jb     229be <png_set_keep_unknown_chunks+0x1fe>
test   %r8d,%r8d
je     22a23 <png_set_keep_unknown_chunks+0x263>
mov    -0x8(%rbp),%rbx
mov    -0x30(%rbp),%rdi
mov    -0x38(%rbp),%rax
mov    -0x10(%rbp),%r12
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
jmpq   2290c <png_set_keep_unknown_chunks+0x14c>
mov    -0x30(%rbp),%rdi
mov    -0x38(%rbp),%rsi
cmp    0x3c8(%rdi),%rsi
jne    22a53 <png_set_keep_unknown_chunks+0x293>
mov    -0x8(%rbp),%rbx
mov    -0x10(%rbp),%r12
xor    %r8d,%r8d
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    %r8,%rax
jmpq   2290c <png_set_keep_unknown_chunks+0x14c>
mov    %rdi,%r15
callq  5790 <png_free@plt>
mov    %r15,%rdi
mov    -0x8(%rbp),%rbx
mov    -0x10(%rbp),%r12
xor    %r8d,%r8d
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    %r8,%rax
jmpq   2290c <png_set_keep_unknown_chunks+0x14c>
nopl   (%rax)

0000000000022a80 <png_set_unknown_chunks>:
push   %rbp
mov    %rsp,%rbp
sub    $0x40,%rsp
test   %rdi,%rdi
jne    22a8f <png_set_unknown_chunks+0xf>
leaveq 
retq   
test   %rsi,%rsi
jne    22a96 <png_set_unknown_chunks+0x16>
leaveq 
retq   
test   %ecx,%ecx
jg     22a9c <png_set_unknown_chunks+0x1c>
leaveq 
retq   
test   %rdx,%rdx
jne    22aa3 <png_set_unknown_chunks+0x23>
leaveq 
retq   
mov    0x130(%rsi),%r11
movslq 0x138(%rsi),%r9
mov    $0x20,%r8d
mov    %rdi,%r10
mov    %rcx,%rax
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rcx,-0x38(%rbp)
mov    %rdx,-0x30(%rbp)
mov    %rax,%rcx
mov    %r9,%rdx
mov    %r12,%r14
mov    %rsi,%r12
mov    %r11,%rsi
mov    %rbx,%r15
mov    %rdi,%rbx
mov    %r10,%rdi
callq  c990 <png_realloc_array>
test   %rax,%rax
je     22b4c <png_set_unknown_chunks+0xcc>
mov    0x130(%r12),%rsi
mov    %rbx,%rdi
mov    %r13,-0x18(%rbp)
mov    %r14,%r13
mov    %rax,%r14
callq  5790 <png_free@plt>
mov    %r14,0x130(%r12)
mov    0x12c(%r12),%eax
or     $0x200,%eax
mov    %eax,0x12c(%r12)
mov    $0x5,%edx
movslq 0x138(%r12),%rcx
shl    $0x5,%rcx
add    %rcx,%r14
mov    %r15,-0x8(%rbp)
mov    %r13,-0x10(%rbp)
mov    -0x30(%rbp),%r15
mov    -0x38(%rbp),%r13
jmp    22ba4 <png_set_unknown_chunks+0x124>
mov    %rbx,%rdi
mov    %r14,%r12
lea    0xc7b6(%rip),%rsi        # 2f30f <chunks_to_ignore.46+0xb2>
mov    $0x1,%edx
callq  b130 <png_chunk_report>
mov    %r15,%rbx
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
leaveq 
retq   
movq   $0x0,0x8(%r14)
movq   $0x0,0x10(%r14)
movslq 0x138(%r12),%rax
add    $0x1,%eax
mov    %eax,0x138(%r12)
add    $0x20,%r14
add    $0xffffffff,%r13d
add    $0x20,%r15
mov    $0x5,%edx
test   %r13d,%r13d
jg     22bbf <png_set_unknown_chunks+0x13f>
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x18(%rbp),%r13
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
leaveq 
retq   
mov    %r14,%rdi
mov    %r15,%rsi
callq  54c0 <memcpy@plt>
movb   $0x0,0x4(%r14)
movzbl 0x18(%r15),%esi
mov    %rbx,%rdi
callq  233c0 <check_location>
mov    %al,0x18(%r14)
mov    0x10(%r15),%rsi
test   %rsi,%rsi
je     22b70 <png_set_unknown_chunks+0xf0>
mov    %rbx,%rdi
callq  c940 <png_malloc_base>
mov    %rax,0x8(%r14)
test   %rax,%rax
je     22c17 <png_set_unknown_chunks+0x197>
mov    %rax,%rdi
mov    0x8(%r15),%rsi
mov    0x10(%r15),%rdx
callq  54c0 <memcpy@plt>
mov    0x10(%r15),%rax
mov    %rax,0x10(%r14)
jmpq   22b80 <png_set_unknown_chunks+0x100>
mov    %rbx,%rdi
lea    0xc706(%rip),%rsi        # 2f327 <chunks_to_ignore.46+0xca>
mov    $0x1,%edx
callq  b130 <png_chunk_report>
jmpq   22b97 <png_set_unknown_chunks+0x117>

0000000000022c30 <png_set_unknown_chunk_location>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
test   %rdi,%rdi
jne    22c3f <png_set_unknown_chunk_location+0xf>
leaveq 
retq   
test   %rsi,%rsi
jne    22c46 <png_set_unknown_chunk_location+0x16>
leaveq 
retq   
test   %edx,%edx
jns    22c4c <png_set_unknown_chunk_location+0x1c>
leaveq 
retq   
cmp    0x138(%rsi),%edx
jl     22c56 <png_set_unknown_chunk_location+0x26>
leaveq 
retq   
mov    %rcx,%rax
and    $0xb,%eax
test   %eax,%eax
je     22c96 <png_set_unknown_chunk_location+0x66>
mov    %rsi,%rax
mov    %rcx,%rsi
mov    0x130(%rax),%rax
mov    %r14,-0x18(%rbp)
mov    %r15,-0x20(%rbp)
mov    %rax,%r14
mov    %rdx,%r15
callq  233c0 <check_location>
movslq %r15d,%rcx
shl    $0x5,%rcx
mov    %al,0x18(%r14,%rcx,1)
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
leaveq 
retq   
lea    0xc6a7(%rip),%rax        # 2f344 <chunks_to_ignore.46+0xe7>
mov    %rdi,%r8
mov    %r12,-0x8(%rbp)
mov    %r13,-0x10(%rbp)
mov    %r14,-0x18(%rbp)
mov    %r15,-0x20(%rbp)
mov    %rcx,%r12
mov    %rsi,%r13
mov    %rax,%rsi
mov    %rdi,%r14
mov    %r8,%rdi
mov    %rdx,%r15
callq  b110 <png_app_error>
and    $0x4,%r12d
test   %r12d,%r12d
jne    22cf3 <png_set_unknown_chunk_location+0xc3>
mov    %r13,%rax
mov    %r15,%rdx
mov    %r14,%rdi
mov    $0x1,%esi
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
jmpq   22c66 <png_set_unknown_chunk_location+0x36>
mov    %r13,%rax
mov    %r15,%rdx
mov    %r14,%rdi
mov    $0x8,%esi
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
jmpq   22c66 <png_set_unknown_chunk_location+0x36>
nopw   %cs:0x0(%rax,%rax,1)

0000000000022d20 <png_set_invalid>:
push   %rbp
mov    %rsp,%rbp
test   %rdi,%rdi
jne    22d2b <png_set_invalid+0xb>
leaveq 
retq   
test   %rsi,%rsi
jne    22d32 <png_set_invalid+0x12>
leaveq 
retq   
not    %edx
and    0x8(%rsi),%edx
mov    %edx,0x8(%rsi)
leaveq 
retq   
nopl   0x0(%rax)

0000000000022d40 <png_permit_mng_features>:
push   %rbp
mov    %rsp,%rbp
test   %rdi,%rdi
jne    22d4d <png_permit_mng_features+0xd>
xor    %eax,%eax
leaveq 
retq   
mov    %rsi,%rax
and    $0x5,%eax
mov    %eax,0x3d8(%rdi)
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

0000000000022d60 <png_set_user_limits>:
push   %rbp
mov    %rsp,%rbp
test   %rdi,%rdi
jne    22d6b <png_set_user_limits+0xb>
leaveq 
retq   
mov    %esi,0x41c(%rdi)
mov    %edx,0x420(%rdi)
leaveq 
retq   
nopl   0x0(%rax)

0000000000022d80 <png_set_chunk_cache_max>:
push   %rbp
mov    %rsp,%rbp
test   %rdi,%rdi
jne    22d8b <png_set_chunk_cache_max+0xb>
leaveq 
retq   
mov    %esi,0x424(%rdi)
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

0000000000022da0 <png_set_chunk_malloc_max>:
push   %rbp
mov    %rsp,%rbp
test   %rdi,%rdi
jne    22dab <png_set_chunk_malloc_max+0xb>
leaveq 
retq   
mov    %rsi,0x428(%rdi)
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nop

0000000000022dc0 <png_set_check_for_invalid_index>:
push   %rbp
mov    %rsp,%rbp
test   %esi,%esi
jg     22dd4 <png_set_check_for_invalid_index+0x14>
movl   $0xffffffff,0x25c(%rdi)
leaveq 
retq   
movl   $0x0,0x25c(%rdi)
leaveq 
retq   

0000000000022de0 <png_set_text_2>:
push   %rbp
mov    %rsp,%rbp
sub    $0x60,%rsp
xor    %eax,%eax
test   %rdi,%rdi
jne    22df1 <png_set_text_2+0x11>
leaveq 
retq   
test   %rsi,%rsi
jne    22df8 <png_set_text_2+0x18>
leaveq 
retq   
test   %ecx,%ecx
jg     22dfe <png_set_text_2+0x1e>
leaveq 
retq   
test   %rdx,%rdx
jne    22e05 <png_set_text_2+0x25>
leaveq 
retq   
mov    $0x1,%r10d
lea    0xc566(%rip),%r9        # 2f378 <chunks_to_ignore.46+0x11b>
movslq 0x94(%rsi),%r11
movslq 0x98(%rsi),%r8
sub    %r11d,%r8d
cmp    %r8d,%ecx
jg     22e53 <png_set_text_2+0x73>
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %rdx,%rbx
mov    %r10,%rdx
mov    %rsi,%r12
mov    %r9,%rsi
mov    %rdi,%r13
mov    %rcx,%r14
mov    %rax,%r15
jmp    22e9c <png_set_text_2+0xbc>
mov    %r11,%r8
xor    $0x7fffffff,%r8d
cmp    %r8d,%ecx
jle    22ebb <png_set_text_2+0xdb>
mov    %rbx,%r8
mov    %rdx,%rbx
mov    %r10,%rdx
mov    %r12,%r10
mov    %rsi,%r12
mov    %r11,%r9
mov    %r14,%rsi
mov    %rcx,%r14
mov    %rsi,%rcx
jmpq   22f3f <png_set_text_2+0x15f>
mov    %r13,%rdi
callq  b130 <png_chunk_report>
mov    $0x1,%edx
lea    0xc4e2(%rip),%rsi        # 2f378 <chunks_to_ignore.46+0x11b>
add    $0x1,%r15d
xor    %eax,%eax
cmp    %r15d,%r14d
jg     22fb8 <png_set_text_2+0x1d8>
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
leaveq 
retq   
lea    (%rcx,%r11,1),%eax
cmp    $0x7ffffff6,%eax
jle    22ecd <png_set_text_2+0xed>
mov    $0x7fffffff,%eax
jmp    22ed3 <png_set_text_2+0xf3>
add    $0x8,%eax
and    $0xfffffff8,%eax
mov    %rax,%r10
sub    %r11d,%r10d
mov    0xa0(%rsi),%r8
mov    %rdi,%r9
mov    %rdx,-0x58(%rbp)
mov    %r13,-0x38(%rbp)
mov    %r14,-0x40(%rbp)
mov    %r15,-0x50(%rbp)
mov    %rcx,-0x60(%rbp)
mov    %r10,%rcx
mov    %r11,%rdx
mov    %rax,%r13
mov    %r12,%r14
mov    %rsi,%r12
mov    %r8,%rsi
mov    %rdi,%r15
mov    %r9,%rdi
mov    $0x38,%r8d
callq  c990 <png_realloc_array>
mov    %r15,%rdi
mov    %rbx,%r8
mov    %r13,%r9
mov    %r14,%r10
mov    -0x60(%rbp),%r14
mov    -0x50(%rbp),%r15
mov    -0x40(%rbp),%rcx
mov    -0x38(%rbp),%r13
mov    -0x58(%rbp),%rbx
mov    $0x1,%edx
test   %rax,%rax
je     23066 <png_set_text_2+0x286>
mov    %r15,-0x28(%rbp)
mov    0xa0(%r12),%rsi
mov    %rcx,-0x20(%rbp)
mov    %rdi,%rcx
mov    %r13,-0x18(%rbp)
mov    %rdi,-0x60(%rbp)
mov    %r8,-0x8(%rbp)
mov    %r10,-0x10(%rbp)
mov    %rcx,%rdi
mov    %r9,%r13
mov    %rax,%r15
callq  5790 <png_free@plt>
mov    %r15,0xa0(%r12)
mov    0x12c(%r12),%eax
or     $0x4000,%eax
mov    %eax,0x12c(%r12)
mov    %r13d,0x98(%r12)
mov    -0x60(%rbp),%r13
mov    $0x1,%edx
xor    %eax,%eax
lea    0xc3c8(%rip),%rsi        # 2f378 <chunks_to_ignore.46+0x11b>
mov    %rax,%r15
jmpq   22e9c <png_set_text_2+0xbc>
mov    0xa0(%r12),%r8
movslq 0x94(%r12),%r9
movslq %r15d,%rcx
lea    (%rcx,%rcx,2),%rax
shl    $0x4,%rax
lea    (%rax,%rcx,8),%rax
mov    0x8(%rbx,%rax,1),%rdi
test   %rdi,%rdi
je     22e96 <png_set_text_2+0xb6>
movslq (%rbx,%rax,1),%rcx
cmp    $0xffffffff,%ecx
jl     22e82 <png_set_text_2+0xa2>
cmp    $0x2,%ecx
jg     22e82 <png_set_text_2+0xa2>
mov    %r14,-0x58(%rbp)
mov    %r13,-0x38(%rbp)
mov    %r12,-0x50(%rbp)
mov    %r15,-0x60(%rbp)
mov    %rax,%r12
mov    %r8,%r13
mov    %rcx,%r14
mov    %r9,%r15
callq  5260 <strlen@plt>
test   %r14d,%r14d
jg     23082 <png_set_text_2+0x2a2>
mov    %r15,%rcx
mov    %rax,%r15
mov    %rcx,%rax
xor    %r14d,%r14d
mov    %r14,%rcx
mov    %rcx,-0x40(%rbp)
mov    0x10(%rbx,%r12,1),%rdi
test   %rdi,%rdi
je     230a1 <png_set_text_2+0x2c1>
movsbq (%rdi),%rdx
test   %dl,%dl
je     230a1 <png_set_text_2+0x2c1>
mov    %r14,-0x48(%rbp)
mov    %rax,%r14
callq  5260 <strlen@plt>
movslq (%rbx,%r12,1),%rdi
mov    %rax,%rsi
mov    %r14,%rax
mov    -0x40(%rbp),%rcx
mov    -0x48(%rbp),%r14
jmp    230bb <png_set_text_2+0x2db>
mov    %r8,%rbx
mov    %r10,%r12
mov    %rcx,%r14
lea    0xc2ed(%rip),%rsi        # 2f363 <chunks_to_ignore.46+0x106>
callq  b130 <png_chunk_report>
mov    $0x1,%eax
leaveq 
retq   
mov    0x28(%rbx,%r12,1),%rdi
test   %rdi,%rdi
jne    2312f <png_set_text_2+0x34f>
mov    %r15,%rcx
mov    %rax,%r15
mov    %rcx,%rax
xor    %r14d,%r14d
jmpq   23143 <png_set_text_2+0x363>
movslq (%rbx,%r12,1),%rdx
test   %edx,%edx
jg     230b4 <png_set_text_2+0x2d4>
xor    %esi,%esi
mov    $0xffffffffffffffff,%rdi
jmp    230bb <png_set_text_2+0x2db>
mov    $0x1,%edi
xor    %esi,%esi
mov    %rsi,-0x30(%rbp)
lea    (%rax,%rax,2),%rdx
shl    $0x4,%rdx
lea    (%rdx,%rax,8),%rax
add    %rax,%r13
mov    %edi,0x0(%r13)
lea    (%rsi,%r15,1),%rax
add    %r14,%rax
lea    0x4(%rcx,%rax,1),%rsi
mov    -0x38(%rbp),%rdi
callq  c940 <png_malloc_base>
mov    %rax,0x8(%r13)
test   %rax,%rax
je     23158 <png_set_text_2+0x378>
mov    %rax,%rdi
mov    0x8(%rbx,%r12,1),%rsi
mov    %r15,%rdx
callq  54c0 <memcpy@plt>
mov    0x8(%r13),%rax
movb   $0x0,(%rax,%r15,1)
movslq (%rbx,%r12,1),%rax
test   %eax,%eax
jg     23189 <png_set_text_2+0x3a9>
movq   $0x0,0x28(%r13)
movq   $0x0,0x30(%r13)
mov    0x8(%r13),%rax
lea    0x1(%rax,%r15,1),%rdi
jmpq   231dc <png_set_text_2+0x3fc>
mov    %r15,%r14
mov    %rax,%r15
callq  5260 <strlen@plt>
mov    %r14,%rcx
mov    %rax,%r14
mov    %rcx,%rax
mov    0x30(%rbx,%r12,1),%rdi
test   %rdi,%rdi
jne    23215 <png_set_text_2+0x435>
xor    %ecx,%ecx
jmpq   23030 <png_set_text_2+0x250>
lea    0xc23f(%rip),%rsi        # 2f39e <chunks_to_ignore.46+0x141>
mov    $0x1,%ebx
mov    %rbx,%rdx
mov    -0x38(%rbp),%rdi
callq  b130 <png_chunk_report>
mov    %rbx,%rax
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
leaveq 
retq   
mov    0x8(%r13),%rax
lea    0x1(%rax,%r15,1),%rdi
mov    %rdi,0x28(%r13)
mov    0x28(%rbx,%r12,1),%rsi
mov    %r14,%rdx
callq  54c0 <memcpy@plt>
mov    0x28(%r13),%rax
movb   $0x0,(%rax,%r14,1)
mov    0x28(%r13),%rax
lea    0x1(%rax,%r14,1),%rdi
mov    %rdi,0x30(%r13)
mov    0x30(%rbx,%r12,1),%rsi
mov    -0x40(%rbp),%r14
mov    %r14,%rdx
callq  54c0 <memcpy@plt>
mov    0x30(%r13),%rax
movb   $0x0,(%rax,%r14,1)
mov    0x30(%r13),%rax
lea    0x1(%rax,%r14,1),%rdi
mov    %rdi,0x10(%r13)
mov    -0x30(%rbp),%r14
test   %r14,%r14
je     231f6 <png_set_text_2+0x416>
mov    0x10(%rbx,%r12,1),%rsi
mov    %r14,%rdx
callq  54c0 <memcpy@plt>
mov    0x10(%r13),%rax
movb   $0x0,(%rax,%r14,1)
movslq 0x0(%r13),%rax
test   %eax,%eax
jg     23230 <png_set_text_2+0x450>
mov    %r14,0x18(%r13)
movq   $0x0,0x20(%r13)
jmp    2323c <png_set_text_2+0x45c>
mov    %r15,-0x48(%rbp)
mov    %rax,%r15
callq  5260 <strlen@plt>
mov    %rax,%rcx
mov    %r15,%rax
mov    -0x48(%rbp),%r15
jmpq   23030 <png_set_text_2+0x250>
movq   $0x0,0x18(%r13)
mov    %r14,0x20(%r13)
mov    -0x50(%rbp),%r12
movslq 0x94(%r12),%rax
add    $0x1,%eax
mov    %eax,0x94(%r12)
mov    -0x60(%rbp),%r15
mov    -0x38(%rbp),%r13
mov    -0x58(%rbp),%r14
mov    $0x1,%edx
lea    0xc10d(%rip),%rsi        # 2f378 <chunks_to_ignore.46+0x11b>
jmpq   22e96 <png_set_text_2+0xb6>

0000000000023270 <png_check_keyword>:
push   %rbp
mov    %rsp,%rbp
sub    $0x120,%rsp
xor    %r9d,%r9d
test   %rsi,%rsi
je     23298 <png_check_keyword+0x28>
mov    $0x1,%r11d
mov    %rsi,-0x8(%rbp)
mov    %r9,%rax
mov    %rax,%rcx
mov    %r11,%r10
jmp    232c2 <png_check_keyword+0x52>
movb   $0x0,(%rdx)
mov    %r9,%rax
leaveq 
retq   
cmp    $0x4e,%eax
ja     232cb <png_check_keyword+0x5b>
add    $0x1,%rsi
cmp    $0x20,%r8b
ja     232de <png_check_keyword+0x6e>
cmp    $0xa0,%r8b
jbe    232e6 <png_check_keyword+0x76>
mov    %r8b,(%rdx)
add    $0x1,%rdx
add    $0x1,%eax
mov    %r9,%r10
movsbq (%rsi),%r8
test   %r8b,%r8b
jne    232a0 <png_check_keyword+0x30>
test   %eax,%eax
jne    232f5 <png_check_keyword+0x85>
mov    %r9,%rax
movb   $0x0,(%rdx)
test   %eax,%eax
jne    2330c <png_check_keyword+0x9c>
mov    %r9,%rax
leaveq 
retq   
cmp    $0x7e,%r8b
jbe    232b5 <png_check_keyword+0x45>
jmp    232af <png_check_keyword+0x3f>
test   %r10d,%r10d
je     2331a <png_check_keyword+0xaa>
test   %ecx,%ecx
jne    232c2 <png_check_keyword+0x52>
movzbl %r8b,%ecx
jmp    232c2 <png_check_keyword+0x52>
test   %r10d,%r10d
jle    232d2 <png_check_keyword+0x62>
add    $0xffffffffffffffff,%rdx
add    $0xffffffff,%eax
test   %ecx,%ecx
jne    232d2 <png_check_keyword+0x62>
mov    $0x20,%ecx
jmp    232d2 <png_check_keyword+0x62>
movsbq (%rsi),%rdx
test   %dl,%dl
jne    2332f <png_check_keyword+0xbf>
test   %ecx,%ecx
jg     23345 <png_check_keyword+0xd5>
leaveq 
retq   
movb   $0x20,(%rdx)
add    $0x1,%rdx
add    $0x1,%eax
cmp    $0x20,%r8b
jne    233a9 <png_check_keyword+0x139>
mov    %r11,%r10
jmp    232c2 <png_check_keyword+0x52>
lea    0xc082(%rip),%rsi        # 2f3b8 <chunks_to_ignore.46+0x15b>
mov    %rax,-0x20(%rbp)
callq  5390 <png_warning@plt>
mov    -0x20(%rbp),%rax
leaveq 
retq   
lea    -0x120(%rbp),%r8
mov    %r14,-0x18(%rbp)
mov    %r15,-0x20(%rbp)
mov    %rax,-0x10(%rbp)
mov    %r11,%rsi
mov    %rdi,%r14
mov    %r8,%rdi
mov    %rcx,%r15
mov    -0x8(%rbp),%rdx
callq  af20 <png_warning_parameter>
mov    %r15,%rcx
mov    $0x2,%esi
mov    $0x4,%edx
lea    -0x120(%rbp),%r15
mov    %r15,%rdi
callq  af90 <png_warning_parameter_signed>
mov    %r15,%rsi
mov    %r14,%rdi
lea    0xc034(%rip),%rdx        # 2f3ca <chunks_to_ignore.46+0x16d>
callq  b010 <png_formatted_warning>
mov    -0x10(%rbp),%rax
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
leaveq 
retq   
movzbl %r8b,%ecx
mov    %r11,%r10
jmpq   232c2 <png_check_keyword+0x52>
data16 nopw %cs:0x0(%rax,%rax,1)

00000000000233c0 <check_location>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
and    $0xb,%esi
test   %esi,%esi
je     233df <check_location+0x1f>
test   %esi,%esi
jne    233f7 <check_location+0x37>
lea    0xc047(%rip),%rsi        # 2f421 <chunks_to_ignore.46+0x1c4>
callq  5470 <png_error@plt>
mov    0x12c(%rdi),%eax
and    $0x8000,%eax
test   %eax,%eax
je     23407 <check_location+0x47>
xor    %esi,%esi
jmp    233cf <check_location+0xf>
lea    -0x1(%rsi),%eax
and    %eax,%esi
mov    %rsi,%rax
neg    %eax
and    %esi,%eax
cmp    %esi,%eax
jne    233f2 <check_location+0x32>
mov    %rsi,%rax
leaveq 
retq   
lea    0xbfdf(%rip),%rsi        # 2f3ed <chunks_to_ignore.46+0x190>
mov    %rdi,%rax
mov    %r15,-0x8(%rbp)
mov    %rdi,%r15
mov    %rax,%rdi
callq  b0f0 <png_app_warning>
movzbl 0x12c(%r15),%eax
and    $0xb,%al
movzbl %al,%esi
mov    %r15,%rdi
mov    -0x8(%rbp),%r15
jmp    233cf <check_location+0xf>
nopw   %cs:0x0(%rax,%rax,1)

0000000000023440 <add_one_chunk>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    %rcx,-0x30(%rbp)
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rsi,%rbx
mov    %rdi,%r12
mov    %rdx,%r13
mov    $0x4,%r14d
xor    %r15d,%r15d
jmp    2348e <add_one_chunk+0x4e>
mov    %r12,%rdi
mov    %r13,%rsi
mov    %r14,%rdx
callq  53d0 <memcmp@plt>
test   %eax,%eax
je     234b5 <add_one_chunk+0x75>
add    $0x5,%r12
add    $0x1,%r15d
cmp    %ebx,%r15d
jb     23474 <add_one_chunk+0x34>
mov    -0x30(%rbp),%r15
test   %r15d,%r15d
jne    234d7 <add_one_chunk+0x97>
mov    %rbx,%rax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
mov    -0x30(%rbp),%rax
mov    %al,0x4(%r12)
mov    %rbx,%rax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
mov    %r14,%rdx
mov    %r13,%rsi
mov    %r12,%rdi
callq  54c0 <memcpy@plt>
mov    %r15b,0x4(%r12)
lea    0x1(%rbx),%eax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)
nopl   (%rax)

0000000000023510 <png_set_bgr>:
push   %rbp
mov    %rsp,%rbp
test   %rdi,%rdi
jne    2351b <png_set_bgr+0xb>
leaveq 
retq   
mov    0x134(%rdi),%eax
or     $0x1,%eax
mov    %eax,0x134(%rdi)
leaveq 
retq   
nopl   0x0(%rax)

0000000000023530 <png_set_swap_alpha>:
push   %rbp
mov    %rsp,%rbp
test   %rdi,%rdi
jne    2353b <png_set_swap_alpha+0xb>
leaveq 
retq   
mov    0x134(%rdi),%eax
or     $0x20000,%eax
mov    %eax,0x134(%rdi)
leaveq 
retq   
xchg   %ax,%ax

0000000000023550 <png_set_invert_alpha>:
push   %rbp
mov    %rsp,%rbp
test   %rdi,%rdi
jne    2355b <png_set_invert_alpha+0xb>
leaveq 
retq   
mov    0x134(%rdi),%eax
or     $0x80000,%eax
mov    %eax,0x134(%rdi)
leaveq 
retq   
xchg   %ax,%ax

0000000000023570 <png_set_filler>:
push   %rbp
mov    %rsp,%rbp
test   %rdi,%rdi
jne    2357b <png_set_filler+0xb>
leaveq 
retq   
mov    0x12c(%rdi),%eax
and    $0x8000,%eax
test   %eax,%eax
jne    235a7 <png_set_filler+0x37>
movzbl 0x267(%rdi),%eax
test   %al,%al
je     235d7 <png_set_filler+0x67>
cmp    $0x2,%al
je     235f0 <png_set_filler+0x80>
lea    0xc1e4(%rip),%rsi        # 2f784 <fourbppswaptable+0x138>
callq  b110 <png_app_error>
leaveq 
retq   
mov    %si,0x272(%rdi)
mov    0x134(%rdi),%eax
or     $0x8000,%eax
mov    %eax,0x134(%rdi)
cmp    $0x1,%edx
je     235f9 <png_set_filler+0x89>
mov    0x130(%rdi),%eax
and    $0xffffff7f,%eax
mov    %eax,0x130(%rdi)
leaveq 
retq   
movzbl 0x268(%rdi),%eax
cmp    $0x7,%al
ja     2360c <png_set_filler+0x9c>
lea    0xc163(%rip),%rsi        # 2f74c <fourbppswaptable+0x100>
callq  b110 <png_app_error>
leaveq 
retq   
movb   $0x4,0x26c(%rdi)
jmp    235ae <png_set_filler+0x3e>
mov    0x130(%rdi),%eax
or     $0x80,%eax
mov    %eax,0x130(%rdi)
leaveq 
retq   
movb   $0x2,0x26c(%rdi)
jmp    235ae <png_set_filler+0x3e>
data16 nopw %cs:0x0(%rax,%rax,1)

0000000000023620 <png_set_add_alpha>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
test   %rdi,%rdi
jne    2362f <png_set_add_alpha+0xf>
leaveq 
retq   
mov    %rdi,%rax
mov    %r15,-0x8(%rbp)
mov    %rdi,%r15
mov    %rax,%rdi
callq  5200 <png_set_filler@plt>
mov    0x134(%r15),%eax
mov    %rax,%rcx
and    $0x8000,%ecx
test   %ecx,%ecx
jne    2365b <png_set_add_alpha+0x3b>
mov    -0x8(%rbp),%r15
leaveq 
retq   
or     $0x1000000,%eax
mov    %eax,0x134(%r15)
mov    -0x8(%rbp),%r15
leaveq 
retq   
nopl   (%rax)

0000000000023670 <png_set_swap>:
push   %rbp
mov    %rsp,%rbp
test   %rdi,%rdi
jne    2367b <png_set_swap+0xb>
leaveq 
retq   
movzbl 0x268(%rdi),%eax
cmp    $0x10,%al
je     23688 <png_set_swap+0x18>
leaveq 
retq   
mov    0x134(%rdi),%eax
or     $0x10,%eax
mov    %eax,0x134(%rdi)
leaveq 
retq   
nopl   0x0(%rax)

00000000000236a0 <png_set_packing>:
push   %rbp
mov    %rsp,%rbp
test   %rdi,%rdi
jne    236ab <png_set_packing+0xb>
leaveq 
retq   
movzbl 0x268(%rdi),%eax
cmp    $0x7,%al
jbe    236b8 <png_set_packing+0x18>
leaveq 
retq   
mov    0x134(%rdi),%eax
or     $0x4,%eax
mov    %eax,0x134(%rdi)
movb   $0x8,0x269(%rdi)
leaveq 
retq   

00000000000236d0 <png_set_packswap>:
push   %rbp
mov    %rsp,%rbp
test   %rdi,%rdi
jne    236db <png_set_packswap+0xb>
leaveq 
retq   
movzbl 0x268(%rdi),%eax
cmp    $0x7,%al
jbe    236e8 <png_set_packswap+0x18>
leaveq 
retq   
mov    0x134(%rdi),%eax
or     $0x10000,%eax
mov    %eax,0x134(%rdi)
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

0000000000023700 <png_set_shift>:
push   %rbp
mov    %rsp,%rbp
test   %rdi,%rdi
jne    2370b <png_set_shift+0xb>
leaveq 
retq   
mov    0x134(%rdi),%eax
or     $0x8,%eax
mov    %eax,0x134(%rdi)
mov    (%rsi),%eax
mov    %eax,0x2dd(%rdi)
movzbl 0x4(%rsi),%eax
mov    %al,0x2e1(%rdi)
leaveq 
retq   
xchg   %ax,%ax

0000000000023730 <png_set_interlace_handling>:
push   %rbp
mov    %rsp,%rbp
mov    $0x1,%eax
test   %rdi,%rdi
jne    23740 <png_set_interlace_handling+0x10>
leaveq 
retq   
movzbl 0x264(%rdi),%ecx
test   %cl,%cl
jne    2374d <png_set_interlace_handling+0x1d>
leaveq 
retq   
mov    0x134(%rdi),%eax
or     $0x2,%eax
mov    %eax,0x134(%rdi)
mov    $0x7,%eax
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

0000000000023770 <png_set_invert_mono>:
push   %rbp
mov    %rsp,%rbp
test   %rdi,%rdi
jne    2377b <png_set_invert_mono+0xb>
leaveq 
retq   
mov    0x134(%rdi),%eax
or     $0x20,%eax
mov    %eax,0x134(%rdi)
leaveq 
retq   
nopl   0x0(%rax)

0000000000023790 <png_set_user_transform_info>:
push   %rbp
mov    %rsp,%rbp
test   %rdi,%rdi
jne    2379b <png_set_user_transform_info+0xb>
leaveq 
retq   
mov    0x12c(%rdi),%eax
and    $0x8000,%eax
test   %eax,%eax
jne    237bf <png_set_user_transform_info+0x2f>
mov    %rsi,0x120(%rdi)
mov    %dl,0x128(%rdi)
mov    %cl,0x129(%rdi)
leaveq 
retq   
mov    0x130(%rdi),%eax
and    $0x40,%eax
test   %eax,%eax
je     237aa <png_set_user_transform_info+0x1a>
lea    0xbfda(%rip),%rsi        # 2f7ad <fourbppswaptable+0x161>
callq  b110 <png_app_error>
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

00000000000237e0 <png_get_user_transform_ptr>:
push   %rbp
mov    %rsp,%rbp
test   %rdi,%rdi
jne    237ed <png_get_user_transform_ptr+0xd>
xor    %eax,%eax
leaveq 
retq   
mov    0x120(%rdi),%rax
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)

0000000000023800 <png_get_current_row_number>:
push   %rbp
mov    %rsp,%rbp
test   %rdi,%rdi
jne    23810 <png_get_current_row_number+0x10>
mov    $0xffffffff,%eax
leaveq 
retq   
mov    0x214(%rdi),%eax
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

0000000000023820 <png_get_current_pass_number>:
push   %rbp
mov    %rsp,%rbp
test   %rdi,%rdi
jne    23830 <png_get_current_pass_number+0x10>
mov    $0x8,%eax
leaveq 
retq   
movzbl 0x265(%rdi),%eax
leaveq 
retq   
nopl   0x0(%rax)

0000000000023840 <png_do_strip_channel>:
push   %rbp
mov    %rsp,%rbp
mov    %rsi,%r8
add    0x8(%rdi),%r8
movzbl 0x12(%rdi),%eax
cmp    $0x2,%al
je     23859 <png_do_strip_channel+0x19>
cmp    $0x4,%al
je     23867 <png_do_strip_channel+0x27>
leaveq 
retq   
movzbl 0x11(%rdi),%eax
cmp    $0x8,%al
je     23875 <png_do_strip_channel+0x35>
cmp    $0x10,%al
je     23883 <png_do_strip_channel+0x43>
leaveq 
retq   
movzbl 0x11(%rdi),%eax
cmp    $0x8,%al
je     23894 <png_do_strip_channel+0x54>
cmp    $0x10,%al
je     238a9 <png_do_strip_channel+0x69>
leaveq 
retq   
test   %edx,%edx
jne    238be <png_do_strip_channel+0x7e>
lea    0x2(%rsi),%rcx
lea    0x1(%rsi),%rax
jmp    238d4 <png_do_strip_channel+0x94>
test   %edx,%edx
jne    238f7 <png_do_strip_channel+0xb7>
lea    0x4(%rsi),%rcx
lea    0x2(%rsi),%rax
jmpq   23914 <png_do_strip_channel+0xd4>
test   %edx,%edx
jne    2391f <png_do_strip_channel+0xdf>
lea    0x4(%rsi),%rcx
lea    0x3(%rsi),%rax
jmpq   23943 <png_do_strip_channel+0x103>
test   %edx,%edx
jne    2395f <png_do_strip_channel+0x11f>
lea    0x8(%rsi),%rcx
lea    0x6(%rsi),%rax
jmpq   23998 <png_do_strip_channel+0x158>
lea    0x1(%rsi),%rcx
mov    %rsi,%rax
jmp    238d4 <png_do_strip_channel+0x94>
movzbl (%rcx),%edx
mov    %dl,(%rax)
add    $0x2,%rcx
add    $0x1,%rax
cmp    %rcx,%r8
ja     238c7 <png_do_strip_channel+0x87>
movb   $0x8,0x13(%rdi)
movb   $0x1,0x12(%rdi)
movzbl 0x10(%rdi),%ecx
cmp    $0x4,%cl
jne    238ee <png_do_strip_channel+0xae>
movb   $0x0,0x10(%rdi)
sub    %rsi,%rax
mov    %rax,0x8(%rdi)
leaveq 
retq   
lea    0x2(%rsi),%rcx
mov    %rsi,%rax
jmp    23914 <png_do_strip_channel+0xd4>
movzbl (%rcx),%edx
mov    %dl,(%rax)
movzbl 0x1(%rcx),%edx
mov    %dl,0x1(%rax)
add    $0x4,%rcx
add    $0x2,%rax
cmp    %rcx,%r8
ja     23900 <png_do_strip_channel+0xc0>
movb   $0x10,0x13(%rdi)
jmp    238dd <png_do_strip_channel+0x9d>
lea    0x1(%rsi),%rcx
mov    %rsi,%rax
jmp    23943 <png_do_strip_channel+0x103>
movzbl (%rcx),%edx
mov    %dl,(%rax)
movzbl 0x1(%rcx),%edx
mov    %dl,0x1(%rax)
movzbl 0x2(%rcx),%edx
mov    %dl,0x2(%rax)
add    $0x4,%rcx
add    $0x3,%rax
cmp    %rcx,%r8
ja     23928 <png_do_strip_channel+0xe8>
movb   $0x18,0x13(%rdi)
movb   $0x3,0x12(%rdi)
movzbl 0x10(%rdi),%ecx
cmp    $0x6,%cl
jne    238ee <png_do_strip_channel+0xae>
movb   $0x2,0x10(%rdi)
jmp    238ee <png_do_strip_channel+0xae>
lea    0x2(%rsi),%rcx
mov    %rsi,%rax
jmp    23998 <png_do_strip_channel+0x158>
movzbl (%rcx),%edx
mov    %dl,(%rax)
movzbl 0x1(%rcx),%edx
mov    %dl,0x1(%rax)
movzbl 0x2(%rcx),%edx
mov    %dl,0x2(%rax)
movzbl 0x3(%rcx),%edx
mov    %dl,0x3(%rax)
movzbl 0x4(%rcx),%edx
mov    %dl,0x4(%rax)
movzbl 0x5(%rcx),%edx
mov    %dl,0x5(%rax)
add    $0x8,%rcx
add    $0x6,%rax
cmp    %r8,%rcx
jb     23968 <png_do_strip_channel+0x128>
movb   $0x30,0x13(%rdi)
jmp    2394c <png_do_strip_channel+0x10c>
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

00000000000239b0 <png_do_swap>:
push   %rbp
mov    %rsp,%rbp
movzbl 0x11(%rdi),%eax
cmp    $0x10,%al
je     239be <png_do_swap+0xe>
leaveq 
retq   
movzbl 0x12(%rdi),%ecx
imul   (%rdi),%ecx
xor    %eax,%eax
jmp    239dd <png_do_swap+0x2d>
movzbl 0x1(%rsi),%edx
movzbl (%rsi),%edi
mov    %dl,(%rsi)
mov    %dil,0x1(%rsi)
add    $0x1,%eax
add    $0x2,%rsi
cmp    %ecx,%eax
jb     239c9 <png_do_swap+0x19>
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

00000000000239f0 <png_do_packswap>:
push   %rbp
mov    %rsp,%rbp
movzbl 0x11(%rdi),%eax
cmp    $0x7,%al
jbe    239fe <png_do_packswap+0xe>
leaveq 
retq   
mov    %rsi,%rdx
add    0x8(%rdi),%rdx
cmp    $0x1,%al
jne    23a12 <png_do_packswap+0x22>
lea    0xba3c(%rip),%rax        # 2f44c <onebppswaptable>
jmp    23a2c <png_do_packswap+0x3c>
cmp    $0x2,%al
jne    23a33 <png_do_packswap+0x43>
lea    0xbb2f(%rip),%rax        # 2f54c <twobppswaptable>
jmp    23a2c <png_do_packswap+0x3c>
movzbl (%rsi),%ecx
movzbl (%rax,%rcx,1),%ecx
mov    %cl,(%rsi)
add    $0x1,%rsi
cmp    %rdx,%rsi
jb     23a1f <png_do_packswap+0x2f>
leaveq 
retq   
cmp    $0x4,%al
jne    23a40 <png_do_packswap+0x50>
lea    0xbc0e(%rip),%rax        # 2f64c <fourbppswaptable>
jmp    23a2c <png_do_packswap+0x3c>
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   (%rax)

0000000000023a50 <png_do_invert>:
push   %rbp
mov    %rsp,%rbp
xor    %eax,%eax
movzbl 0x10(%rdi),%ecx
test   %cl,%cl
je     23a6e <png_do_invert+0x1e>
cmp    $0x4,%cl
je     23a74 <png_do_invert+0x24>
movzbl 0x10(%rdi),%ecx
cmp    $0x4,%cl
je     23a83 <png_do_invert+0x33>
leaveq 
retq   
mov    0x8(%rdi),%rdx
jmp    23a9d <png_do_invert+0x4d>
movzbl 0x11(%rdi),%ecx
cmp    $0x8,%cl
jne    23a63 <png_do_invert+0x13>
mov    0x8(%rdi),%rdx
jmp    23ab3 <png_do_invert+0x63>
movzbl 0x11(%rdi),%ecx
cmp    $0x10,%cl
je     23aba <png_do_invert+0x6a>
leaveq 
retq   
movzbl (%rsi),%ecx
not    %ecx
mov    %cl,(%rsi)
add    $0x1,%rax
add    $0x1,%rsi
cmp    %rdx,%rax
jb     23a8e <png_do_invert+0x3e>
leaveq 
retq   
movzbl (%rsi),%ecx
not    %ecx
mov    %cl,(%rsi)
add    $0x2,%rax
add    $0x2,%rsi
cmp    %rdx,%rax
jb     23aa4 <png_do_invert+0x54>
leaveq 
retq   
mov    0x8(%rdi),%rdx
jmp    23ad8 <png_do_invert+0x88>
movzbl (%rsi),%ecx
not    %ecx
mov    %cl,(%rsi)
movzbl 0x1(%rsi),%ecx
not    %ecx
mov    %cl,0x1(%rsi)
add    $0x4,%rax
add    $0x4,%rsi
cmp    %rdx,%rax
jb     23ac0 <png_do_invert+0x70>
leaveq 
retq   
nop

0000000000023ae0 <png_do_bgr>:
push   %rbp
mov    %rsp,%rbp
movzbl 0x10(%rdi),%ecx
mov    %rcx,%rax
and    $0x2,%eax
test   %eax,%eax
jg     23af4 <png_do_bgr+0x14>
leaveq 
retq   
mov    (%rdi),%r8d
xor    %eax,%eax
movzbl 0x11(%rdi),%edx
cmp    $0x8,%dl
je     23b09 <png_do_bgr+0x29>
cmp    $0x10,%dl
je     23b15 <png_do_bgr+0x35>
leaveq 
retq   
cmp    $0x2,%cl
je     23b34 <png_do_bgr+0x54>
cmp    $0x6,%cl
je     23b4e <png_do_bgr+0x6e>
leaveq 
retq   
cmp    $0x2,%cl
je     23b76 <png_do_bgr+0x96>
cmp    $0x6,%cl
je     23b9e <png_do_bgr+0xbe>
leaveq 
retq   
movzbl 0x2(%rsi),%edx
movzbl (%rsi),%ecx
mov    %dl,(%rsi)
mov    %cl,0x2(%rsi)
add    $0x1,%eax
add    $0x3,%rsi
cmp    %r8d,%eax
jb     23b21 <png_do_bgr+0x41>
leaveq 
retq   
movzbl 0x2(%rsi),%edx
movzbl (%rsi),%ecx
mov    %dl,(%rsi)
mov    %cl,0x2(%rsi)
add    $0x1,%eax
add    $0x4,%rsi
cmp    %eax,%r8d
ja     23b3b <png_do_bgr+0x5b>
leaveq 
retq   
movzbl 0x4(%rsi),%edx
movzbl (%rsi),%ecx
mov    %dl,(%rsi)
mov    %cl,0x4(%rsi)
movzbl 0x5(%rsi),%ecx
movzbl 0x1(%rsi),%edx
mov    %cl,0x1(%rsi)
mov    %dl,0x5(%rsi)
add    $0x1,%eax
add    $0x6,%rsi
cmp    %eax,%r8d
ja     23b55 <png_do_bgr+0x75>
leaveq 
retq   
movzbl 0x4(%rsi),%edx
movzbl (%rsi),%ecx
mov    %dl,(%rsi)
mov    %cl,0x4(%rsi)
movzbl 0x5(%rsi),%edx
movzbl 0x1(%rsi),%ecx
mov    %dl,0x1(%rsi)
mov    %cl,0x5(%rsi)
add    $0x1,%eax
add    $0x8,%rsi
cmp    %eax,%r8d
ja     23b7d <png_do_bgr+0x9d>
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)

0000000000023bb0 <png_do_check_palette_indexes>:
push   %rbp
mov    %rsp,%rbp
mov    $0x1,%eax
movzbl 0x11(%rsi),%ecx
shl    %cl,%eax
movzwl 0x258(%rdi),%ecx
cmp    %ecx,%eax
jg     23bcc <png_do_check_palette_indexes+0x1c>
leaveq 
retq   
test   %cx,%cx
jne    23bd3 <png_do_check_palette_indexes+0x23>
leaveq 
retq   
movzbl 0x13(%rsi),%eax
mov    (%rsi),%ecx
and    $0x7,%ecx
imul   %ecx,%eax
and    $0x7,%eax
mov    $0x8,%ecx
sub    %eax,%ecx
and    $0x7,%ecx
mov    0x8(%rsi),%rdx
mov    0x228(%rdi),%rax
lea    -0x1(%rdx,%rax,1),%rax
xor    %edx,%edx
movzbl 0x11(%rsi),%esi
cmp    $0x3,%sil
jbe    23c16 <png_do_check_palette_indexes+0x66>
cmp    $0x4,%sil
je     23c63 <png_do_check_palette_indexes+0xb3>
cmp    $0x8,%sil
je     23c89 <png_do_check_palette_indexes+0xd9>
leaveq 
retq   
cmp    $0x1,%sil
je     23cb1 <png_do_check_palette_indexes+0x101>
cmp    $0x2,%sil
je     23d30 <png_do_check_palette_indexes+0x180>
leaveq 
retq   
movzbl (%rax),%esi
shr    %cl,%esi
and    $0xf,%esi
movslq 0x25c(%rdi),%r8
cmp    %esi,%r8d
jge    23c46 <png_do_check_palette_indexes+0x96>
mov    %esi,0x25c(%rdi)
movzbl (%rax),%esi
shr    %cl,%esi
shr    $0x4,%esi
cmp    0x25c(%rdi),%esi
jle    23c5c <png_do_check_palette_indexes+0xac>
mov    %esi,0x25c(%rdi)
add    $0xffffffffffffffff,%rax
mov    %rdx,%rcx
mov    0x228(%rdi),%rsi
cmp    %rax,%rsi
jb     23c2c <png_do_check_palette_indexes+0x7c>
leaveq 
retq   
movzbl (%rax),%ecx
movslq 0x25c(%rdi),%rdx
cmp    %ecx,%edx
jge    23c85 <png_do_check_palette_indexes+0xd5>
mov    %ecx,0x25c(%rdi)
add    $0xffffffffffffffff,%rax
mov    0x228(%rdi),%rcx
cmp    %rax,%rcx
jb     23c71 <png_do_check_palette_indexes+0xc1>
leaveq 
retq   
movzbl (%rax),%esi
shr    %cl,%esi
test   %esi,%esi
jle    23caa <png_do_check_palette_indexes+0xfa>
movl   $0x1,0x25c(%rdi)
add    $0xffffffffffffffff,%rax
mov    %rdx,%rcx
mov    0x228(%rdi),%rsi
cmp    %rax,%rsi
jb     23c97 <png_do_check_palette_indexes+0xe7>
leaveq 
retq   
movzbl (%rax),%esi
shr    %cl,%esi
and    $0x3,%esi
movslq 0x25c(%rdi),%r8
cmp    %esi,%r8d
jge    23cd9 <png_do_check_palette_indexes+0x129>
mov    %esi,0x25c(%rdi)
movzbl (%rax),%esi
shr    %cl,%esi
and    $0xc,%esi
shr    $0x2,%esi
movslq 0x25c(%rdi),%r8
cmp    %esi,%r8d
jge    23cf6 <png_do_check_palette_indexes+0x146>
mov    %esi,0x25c(%rdi)
movzbl (%rax),%esi
shr    %cl,%esi
and    $0x30,%esi
shr    $0x4,%esi
movslq 0x25c(%rdi),%r8
cmp    %esi,%r8d
jge    23d13 <png_do_check_palette_indexes+0x163>
mov    %esi,0x25c(%rdi)
movzbl (%rax),%esi
shr    %cl,%esi
shr    $0x6,%esi
cmp    0x25c(%rdi),%esi
jle    23d29 <png_do_check_palette_indexes+0x179>
mov    %esi,0x25c(%rdi)
add    $0xffffffffffffffff,%rax
mov    %rdx,%rcx
mov    0x228(%rdi),%rsi
cmp    %rax,%rsi
jb     23cbf <png_do_check_palette_indexes+0x10f>
leaveq 
retq   
xchg   %ax,%ax

0000000000023d40 <png_set_write_fn>:
push   %rbp
mov    %rsp,%rbp
test   %rdi,%rdi
jne    23d4b <png_set_write_fn+0xb>
leaveq 
retq   
mov    %rsi,0x108(%rdi)
test   %rdx,%rdx
jne    23d67 <png_set_write_fn+0x27>
lea    0x62(%rip),%rax        # 23dc0 <png_default_write_data>
mov    %rax,0xf8(%rdi)
jmp    23d6e <png_set_write_fn+0x2e>
mov    %rdx,0xf8(%rdi)
test   %rcx,%rcx
jne    23d83 <png_set_write_fn+0x43>
lea    0xa6(%rip),%rax        # 23e20 <png_default_flush>
mov    %rax,0x290(%rdi)
jmp    23d8a <png_set_write_fn+0x4a>
mov    %rcx,0x290(%rdi)
mov    0x100(%rdi),%rax
test   %rax,%rax
jne    23d98 <png_set_write_fn+0x58>
leaveq 
retq   
movq   $0x0,0x100(%rdi)
lea    0xba42(%rip),%rsi        # 2f7ec <fourbppswaptable+0x1a0>
callq  5390 <png_warning@plt>
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   0x0(%rax)

0000000000023dc0 <png_default_write_data>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
test   %rdi,%rdi
jne    23dcf <png_default_write_data+0xf>
leaveq 
retq   
mov    $0x1,%eax
mov    0x108(%rdi),%rcx
mov    %rdx,%r8
mov    %r15,-0x10(%rbp)
mov    %rdi,-0x8(%rbp)
mov    %rsi,%rdi
mov    %rax,%rsi
mov    %rdx,%r15
mov    %r8,%rdx
callq  5840 <fwrite@plt>
cmp    %r15,%rax
jne    23e02 <png_default_write_data+0x42>
mov    -0x10(%rbp),%r15
leaveq 
retq   
lea    0xba27(%rip),%rsi        # 2f830 <fourbppswaptable+0x1e4>
mov    -0x8(%rbp),%rdi
callq  5470 <png_error@plt>
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   (%rax)

0000000000023e20 <png_default_flush>:
push   %rbp
mov    %rsp,%rbp
test   %rdi,%rdi
jne    23e2b <png_default_flush+0xb>
leaveq 
retq   
mov    0x108(%rdi),%rdi
callq  55d0 <fflush@plt>
leaveq 
retq   
nopl   0x0(%rax)

0000000000023e40 <png_write_data>:
push   %rbp
mov    %rsp,%rbp
mov    0xf8(%rdi),%rax
test   %rax,%rax
jne    23e5c <png_write_data+0x1c>
lea    0xb9e5(%rip),%rsi        # 2f83c <fourbppswaptable+0x1f0>
callq  5470 <png_error@plt>
callq  *%rax
leaveq 
retq   

0000000000023e60 <png_flush>:
push   %rbp
mov    %rsp,%rbp
mov    0x290(%rdi),%rax
test   %rax,%rax
jne    23e72 <png_flush+0x12>
leaveq 
retq   
callq  *%rax
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)

0000000000023e80 <png_create_write_struct>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
movq   $0x0,(%rsp)
xor    %r8d,%r8d
mov    %r8,%r9
callq  56c0 <png_create_write_struct_2@plt>
leaveq 
retq   
nopl   (%rax)

0000000000023ea0 <png_create_write_struct_2>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    0x10(%rbp),%rax
mov    %rax,(%rsp)
callq  6b80 <png_create_png_struct>
test   %rax,%rax
jne    23ebc <png_create_write_struct_2+0x1c>
leaveq 
retq   
movl   $0x2000,0x1b8(%rax)
movl   $0x1,0x1cc(%rax)
movl   $0xffffffff,0x1bc(%rax)
movl   $0x8,0x1c8(%rax)
movl   $0xf,0x1c4(%rax)
movl   $0x8,0x1c0(%rax)
movl   $0x0,0x1e0(%rax)
movl   $0xffffffff,0x1d0(%rax)
movl   $0x8,0x1dc(%rax)
movl   $0xf,0x1d8(%rax)
movl   $0x8,0x1d4(%rax)
mov    0x130(%rax),%ecx
or     $0x200000,%ecx
mov    %ecx,0x130(%rax)
xor    %esi,%esi
mov    %rsi,%rdx
mov    %rsi,%rcx
mov    %rax,%rdi
mov    %r15,-0x8(%rbp)
mov    %rax,%r15
callq  5300 <png_set_write_fn@plt>
mov    %r15,%rax
mov    -0x8(%rbp),%r15
leaveq 
retq   
nopl   0x0(%rax)

0000000000023f60 <png_write_info_before_PLTE>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
test   %rdi,%rdi
jne    23f6f <png_write_info_before_PLTE+0xf>
leaveq 
retq   
test   %rsi,%rsi
jne    23f76 <png_write_info_before_PLTE+0x16>
leaveq 
retq   
mov    0x12c(%rdi),%eax
and    $0x400,%eax
test   %eax,%eax
je     23f87 <png_write_info_before_PLTE+0x27>
leaveq 
retq   
mov    %rdi,%rax
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rdi,%r14
mov    %rax,%rdi
mov    %rsi,%r15
callq  5140 <png_write_sig@plt>
mov    0x12c(%r14),%eax
and    $0x1000,%eax
test   %eax,%eax
jne    24087 <png_write_info_before_PLTE+0x127>
sub    $0x10,%rsp
movzbl 0x27(%r15),%edi
movzbl 0x28(%r15),%eax
mov    (%r15),%esi
mov    0x4(%r15),%edx
movzbl 0x24(%r15),%ecx
movzbl 0x25(%r15),%r8d
movzbl 0x26(%r15),%r9d
mov    %edi,(%rsp)
mov    %eax,0x8(%rsp)
mov    %r14,%rdi
callq  277d0 <png_write_IHDR>
add    $0x10,%rsp
movzwl 0x7e(%r15),%eax
mov    %rax,%rcx
and    $0x8000,%ecx
test   %ecx,%ecx
je     240b5 <png_write_info_before_PLTE+0x155>
movzwl 0x7e(%r15),%eax
and    $0x8000,%eax
test   %eax,%eax
je     240e0 <png_write_info_before_PLTE+0x180>
movzwl 0x7e(%r15),%eax
and    $0x8000,%eax
test   %eax,%eax
je     24128 <png_write_info_before_PLTE+0x1c8>
mov    0x8(%r15),%eax
and    $0x2,%eax
test   %eax,%eax
je     24044 <png_write_info_before_PLTE+0xe4>
lea    0xb0(%r15),%rsi
movzbl 0x25(%r15),%edx
mov    %r14,%rdi
callq  28180 <png_write_sBIT>
movzwl 0x7e(%r15),%eax
mov    %rax,%rcx
and    $0x8000,%ecx
test   %ecx,%ecx
je     2414b <png_write_info_before_PLTE+0x1eb>
mov    %r15,%rsi
mov    $0x1,%edx
mov    %r14,%rdi
callq  25860 <write_unknown_chunks>
mov    0x12c(%r14),%eax
or     $0x400,%eax
mov    %eax,0x12c(%r14)
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
mov    0x3d8(%r14),%eax
test   %eax,%eax
je     23fb4 <png_write_info_before_PLTE+0x54>
lea    0xb7f7(%rip),%rsi        # 2f894 <fourbppswaptable+0x248>
mov    %r14,%rdi
callq  5390 <png_warning@plt>
movl   $0x0,0x3d8(%r14)
jmpq   23fb4 <png_write_info_before_PLTE+0x54>
and    $0x8,%eax
test   %eax,%eax
jle    24001 <png_write_info_before_PLTE+0xa1>
mov    0x8(%r15),%eax
and    $0x1,%eax
test   %eax,%eax
je     24001 <png_write_info_before_PLTE+0xa1>
movslq 0x34(%r15),%rsi
mov    %r14,%rdi
callq  28140 <png_write_gAMA_fixed>
jmpq   24001 <png_write_info_before_PLTE+0xa1>
mov    0x8(%r15),%eax
mov    %rax,%rcx
and    $0x1000,%ecx
test   %ecx,%ecx
je     24013 <png_write_info_before_PLTE+0xb3>
and    $0x800,%eax
test   %eax,%eax
je     2410d <png_write_info_before_PLTE+0x1ad>
lea    0xb7c0(%rip),%rsi        # 2f8c5 <fourbppswaptable+0x279>
mov    %r14,%rdi
callq  b0f0 <png_app_warning>
mov    0x80(%r15),%rsi
mov    0x88(%r15),%rdx
mov    %r14,%rdi
callq  283f0 <png_write_iCCP>
jmpq   24025 <png_write_info_before_PLTE+0xc5>
mov    0x8(%r15),%eax
and    $0x800,%eax
test   %eax,%eax
je     24025 <png_write_info_before_PLTE+0xc5>
movzwl 0x7c(%r15),%esi
mov    %r14,%rdi
callq  28310 <png_write_sRGB>
jmpq   24025 <png_write_info_before_PLTE+0xc5>
and    $0x10,%eax
test   %eax,%eax
jle    2405a <png_write_info_before_PLTE+0xfa>
mov    0x8(%r15),%eax
and    $0x4,%eax
test   %eax,%eax
je     2405a <png_write_info_before_PLTE+0xfa>
lea    0x38(%r15),%rsi
mov    %r14,%rdi
callq  28270 <png_write_cHRM_fixed>
jmpq   2405a <png_write_info_before_PLTE+0xfa>
nopw   %cs:0x0(%rax,%rax,1)

0000000000024180 <png_write_info>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    %r13,-0x18(%rbp)
test   %rdi,%rdi
jne    24193 <png_write_info+0x13>
leaveq 
retq   
test   %rsi,%rsi
jne    2419a <png_write_info+0x1a>
leaveq 
retq   
mov    %rdi,%rax
mov    %rsi,%rcx
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %r12,%r14
mov    %rsi,%r12
mov    %rcx,%rsi
mov    %rbx,%r15
mov    %rdi,%rbx
mov    %rax,%rdi
callq  5450 <png_write_info_before_PLTE@plt>
mov    0x8(%r12),%eax
and    $0x8,%eax
test   %eax,%eax
jne    241e4 <png_write_info+0x64>
movzbl 0x25(%r12),%eax
cmp    $0x3,%al
jne    241f7 <png_write_info+0x77>
mov    %rbx,%rdi
lea    0xb714(%rip),%rsi        # 2f8f3 <fourbppswaptable+0x2a7>
callq  5470 <png_error@plt>
mov    0x18(%r12),%rsi
movzwl 0x20(%r12),%edx
mov    %rbx,%rdi
callq  27c10 <png_write_PLTE>
xor    %r13d,%r13d
mov    0x8(%r12),%eax
and    $0x10,%eax
test   %eax,%eax
je     2423d <png_write_info+0xbd>
mov    0x134(%rbx),%eax
and    $0x80000,%eax
test   %eax,%eax
jne    243df <png_write_info+0x25f>
mov    0xb8(%r12),%rsi
lea    0xc0(%r12),%rdx
movzwl 0x22(%r12),%ecx
movzbl 0x25(%r12),%r8d
mov    %rbx,%rdi
callq  286e0 <png_write_tRNS>
mov    0x8(%r12),%eax
and    $0x20,%eax
test   %eax,%eax
je     2425f <png_write_info+0xdf>
lea    0xca(%r12),%rsi
movzbl 0x25(%r12),%edx
mov    %rbx,%rdi
callq  28840 <png_write_bKGD>
mov    0x8(%r12),%eax
and    $0x10000,%eax
test   %eax,%eax
je     24285 <png_write_info+0x105>
mov    0xf0(%r12),%rsi
movslq 0xec(%r12),%rdx
mov    %rbx,%rdi
callq  28370 <png_write_eXIf>
mov    0x8(%r12),%eax
and    $0x40,%eax
test   %eax,%eax
je     242a7 <png_write_info+0x127>
mov    0x100(%r12),%rsi
movzwl 0x20(%r12),%edx
mov    %rbx,%rdi
callq  289b0 <png_write_hIST>
mov    0x8(%r12),%eax
and    $0x100,%eax
test   %eax,%eax
je     242d6 <png_write_info+0x156>
movslq 0xd4(%r12),%rsi
movslq 0xd8(%r12),%rdx
movzbl 0xdc(%r12),%ecx
mov    %rbx,%rdi
callq  28f10 <png_write_oFFs>
mov    0x8(%r12),%eax
and    $0x400,%eax
test   %eax,%eax
je     24337 <png_write_info+0x1b7>
sub    $0x10,%rsp
mov    0x118(%r12),%rdi
mov    0x120(%r12),%rax
mov    0x108(%r12),%rsi
movslq 0x110(%r12),%rdx
movslq 0x114(%r12),%rcx
movzbl 0x128(%r12),%r8d
movzbl 0x129(%r12),%r9d
mov    %rdi,(%rsp)
mov    %rax,0x8(%rsp)
mov    %rbx,%rdi
callq  28fa0 <png_write_pCAL>
add    $0x10,%rsp
mov    0x8(%r12),%eax
and    $0x4000,%eax
test   %eax,%eax
je     24366 <png_write_info+0x1e6>
movzbl 0x14c(%r12),%esi
mov    0x150(%r12),%rdx
mov    0x158(%r12),%rcx
mov    %rbx,%rdi
callq  292f0 <png_write_sCAL_s>
mov    0x8(%r12),%eax
and    $0x80,%eax
test   %eax,%eax
je     24395 <png_write_info+0x215>
mov    0xe0(%r12),%esi
mov    0xe4(%r12),%edx
movzbl 0xe8(%r12),%ecx
mov    %rbx,%rdi
callq  291b0 <png_write_pHYs>
mov    0x8(%r12),%eax
and    $0x200,%eax
test   %eax,%eax
je     243c4 <png_write_info+0x244>
lea    0xa8(%r12),%rsi
mov    %rbx,%rdi
callq  29240 <png_write_tIME>
mov    0x12c(%rbx),%eax
or     $0x200,%eax
mov    %eax,0x12c(%rbx)
mov    0x8(%r12),%eax
and    $0x2000,%eax
test   %eax,%eax
jne    24426 <png_write_info+0x2a6>
mov    %r15,-0x8(%rbp)
mov    %r14,-0x10(%rbp)
mov    %r13,%r14
jmp    2444e <png_write_info+0x2ce>
movzbl 0x25(%r12),%eax
cmp    $0x3,%al
jne    24219 <png_write_info+0x99>
movzwl 0x22(%r12),%esi
cmp    $0x100,%si
jbe    24481 <png_write_info+0x301>
mov    $0x100,%esi
mov    %r13,%rcx
jmpq   2449b <png_write_info+0x31b>
movslq %r13d,%rsi
shl    $0x5,%rsi
add    0x140(%r12),%rsi
mov    %rbx,%rdi
callq  28560 <png_write_sPLT>
add    $0x1,%r13d
movslq 0x148(%r12),%rax
cmp    %r13d,%eax
jg     2440b <png_write_info+0x28b>
mov    %r15,-0x8(%rbp)
mov    %r14,-0x10(%rbp)
xor    %r13d,%r13d
mov    %r13,%r14
jmp    2444e <png_write_info+0x2ce>
movl   $0xfffffffd,(%r15)
add    $0x1,%r14d
movslq 0x94(%r12),%rax
cmp    %r14d,%eax
jg     244a4 <png_write_info+0x324>
mov    %r12,%rsi
mov    %rbx,%rdi
mov    $0x2,%edx
callq  25860 <write_unknown_chunks>
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x18(%rbp),%r13
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
leaveq 
retq   
mov    %r13,%rcx
jmp    2449b <png_write_info+0x31b>
movslq %ecx,%rax
add    0xb8(%r12),%rax
movzbl (%rax),%edx
not    %edx
mov    %dl,(%rax)
add    $0x1,%ecx
cmp    %ecx,%esi
jg     24486 <png_write_info+0x306>
jmpq   24219 <png_write_info+0x99>
movslq %r14d,%rcx
lea    (%rcx,%rcx,2),%rax
shl    $0x4,%rax
lea    (%rax,%rcx,8),%r15
mov    0xa0(%r12),%rax
movslq (%rax,%r15,1),%rsi
test   %esi,%esi
jg     244fa <png_write_info+0x37a>
test   %esi,%esi
je     24536 <png_write_info+0x3b6>
cmp    $0xffffffff,%esi
jne    2444a <png_write_info+0x2ca>
mov    0x8(%rax,%r15,1),%rsi
mov    0x10(%rax,%r15,1),%rdx
mov    %rbx,%rdi
mov    %r13,%rcx
callq  28a70 <png_write_tEXt>
mov    0xa0(%r12),%rax
movl   $0xfffffffd,(%rax,%r15,1)
jmpq   2444a <png_write_info+0x2ca>
mov    0x8(%rax,%r15,1),%rdx
mov    0x28(%rax,%r15,1),%rcx
mov    0x30(%rax,%r15,1),%r8
mov    0x10(%rax,%r15,1),%r9
mov    %rbx,%rdi
callq  28cb0 <png_write_iTXt>
add    0xa0(%r12),%r15
movslq (%r15),%rax
cmp    $0xffffffff,%eax
je     24443 <png_write_info+0x2c3>
movl   $0xfffffffe,(%r15)
jmpq   2444a <png_write_info+0x2ca>
mov    0x8(%rax,%r15,1),%rsi
mov    0x10(%rax,%r15,1),%rdx
movslq (%rax,%r15,1),%rcx
mov    %rbx,%rdi
callq  28b70 <png_write_zTXt>
mov    0xa0(%r12),%rax
movl   $0xfffffffe,(%rax,%r15,1)
jmpq   2444a <png_write_info+0x2ca>
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   0x0(%rax)

0000000000024570 <png_convert_from_struct_tm>:
push   %rbp
mov    %rsp,%rbp
movzwl 0x14(%rsi),%eax
add    $0x76c,%eax
mov    %ax,(%rdi)
movzbl 0x10(%rsi),%eax
add    $0x1,%eax
mov    %al,0x2(%rdi)
movzbl 0xc(%rsi),%eax
mov    %al,0x3(%rdi)
movzbl 0x8(%rsi),%eax
mov    %al,0x4(%rdi)
movzbl 0x4(%rsi),%eax
mov    %al,0x5(%rdi)
movzbl (%rsi),%eax
mov    %al,0x6(%rdi)
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

00000000000245b0 <png_convert_from_time_t>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x8(%rbp)
mov    %rsi,-0x10(%rbp)
mov    %rdi,%r15
lea    -0x10(%rbp),%rdi
callq  57c0 <gmtime@plt>
mov    %rax,%rsi
mov    %r15,%rdi
callq  51f0 <png_convert_from_struct_tm@plt>
mov    -0x8(%rbp),%r15
leaveq 
retq   
nopl   (%rax)

00000000000245e0 <png_set_flush>:
push   %rbp
mov    %rsp,%rbp
test   %rdi,%rdi
jne    245eb <png_set_flush+0xb>
leaveq 
retq   
test   %esi,%esi
jns    245f1 <png_set_flush+0x11>
xor    %esi,%esi
mov    %esi,0x298(%rdi)
leaveq 
retq   
nopl   0x0(%rax)

0000000000024600 <png_write_flush>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
test   %rdi,%rdi
jne    2460f <png_write_flush+0xf>
leaveq 
retq   
mov    0x200(%rdi),%eax
cmp    0x214(%rdi),%eax
ja     2461f <png_write_flush+0x1f>
leaveq 
retq   
xor    %esi,%esi
mov    $0x2,%ecx
mov    %rsi,%rdx
mov    %rdi,%rax
mov    %r15,-0x8(%rbp)
mov    %rdi,%r15
mov    %rax,%rdi
callq  27db0 <png_compress_IDAT>
mov    %r15,%rdi
movl   $0x0,0x29c(%rdi)
callq  23e60 <png_flush>
mov    -0x8(%rbp),%r15
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

0000000000024660 <png_write_row>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
test   %rdi,%rdi
jne    2466f <png_write_row+0xf>
leaveq 
retq   
mov    0x214(%rdi),%eax
test   %eax,%eax
je     246cb <png_write_row+0x6b>
mov    %r15,%rcx
mov    %rdi,%r15
movzbl 0x264(%r15),%eax
test   %al,%al
jne    246e2 <png_write_row+0x82>
movzbl 0x267(%r15),%eax
mov    %al,-0x18(%rbp)
mov    0x204(%r15),%edi
mov    %edi,-0x28(%rbp)
movzbl 0x26c(%r15),%eax
mov    %al,-0x16(%rbp)
movzbl 0x269(%r15),%r8d
imul   %r8b
cmp    $0x7,%al
ja     2472b <png_write_row+0xcb>
movzbl %al,%edx
imul   %rdi,%rdx
add    $0x7,%rdx
shr    $0x3,%rdx
jmp    24736 <png_write_row+0xd6>
movzbl 0x265(%rdi),%eax
test   %al,%al
je     247e0 <png_write_row+0x180>
mov    %r15,%rcx
mov    %rdi,%r15
jmp    2467f <png_write_row+0x1f>
mov    0x134(%r15),%eax
and    $0x2,%eax
test   %eax,%eax
je     2468b <png_write_row+0x2b>
movzbl 0x265(%r15),%eax
cmp    $0x6,%al
ja     2468b <png_write_row+0x2b>
lea    0xb155(%rip),%rdx        # 2f858 <fourbppswaptable+0x20c>
movslq (%rdx,%rax,4),%rax
add    %rdx,%rax
jmpq   *%rax
mov    0x214(%r15),%eax
and    $0x1,%eax
test   %eax,%eax
jne    2468b <png_write_row+0x2b>
mov    %r15,%rdi
mov    %rcx,%r15
callq  293b0 <png_write_finish_row>
leaveq 
retq   
movzbl %al,%edx
shr    $0x3,%rdx
imul   %rdi,%rdx
mov    %r8b,-0x17(%rbp)
mov    %al,-0x15(%rbp)
mov    %rdx,-0x20(%rbp)
mov    0x228(%r15),%rdi
add    $0x1,%rdi
mov    %rcx,-0x10(%rbp)
callq  54c0 <memcpy@plt>
lea    -0x28(%rbp),%rsi
movzbl 0x264(%r15),%eax
test   %al,%al
jne    248f6 <png_write_row+0x296>
mov    0x134(%r15),%eax
test   %eax,%eax
je     24780 <png_write_row+0x120>
mov    %r15,%rdi
callq  26d10 <png_do_write_transformations>
lea    -0x28(%rbp),%rsi
movzbl 0x26a(%r15),%eax
movzbl -0x15(%rbp),%ecx
cmp    %cl,%al
jne    24943 <png_write_row+0x2e3>
movzbl 0x26f(%r15),%eax
cmp    %al,%cl
jne    24943 <png_write_row+0x2e3>
mov    0x3d8(%r15),%eax
and    $0x4,%eax
test   %eax,%eax
jne    24952 <png_write_row+0x2f2>
movzbl -0x18(%rbp),%eax
cmp    $0x3,%al
je     24981 <png_write_row+0x321>
mov    %r15,%rdi
callq  29a40 <png_write_find_filter>
mov    0x308(%r15),%rax
test   %rax,%rax
jne    249a1 <png_write_row+0x341>
mov    -0x10(%rbp),%r15
leaveq 
retq   
mov    0x12c(%rdi),%eax
and    $0x400,%eax
test   %eax,%eax
je     249b9 <png_write_row+0x359>
mov    %rdi,%rax
mov    %r15,-0x8(%rbp)
mov    %rsi,-0x10(%rbp)
mov    %rdi,%r15
mov    %rax,%rdi
callq  29540 <png_write_start_row>
mov    -0x10(%rbp),%rsi
mov    -0x8(%rbp),%rcx
jmpq   2467f <png_write_row+0x1f>
mov    0x214(%r15),%eax
and    $0x7,%eax
test   %eax,%eax
je     2468b <png_write_row+0x2b>
mov    %r15,%rdi
mov    %rcx,%r15
callq  293b0 <png_write_finish_row>
leaveq 
retq   
mov    0x214(%r15),%eax
and    $0x7,%eax
test   %eax,%eax
jne    24853 <png_write_row+0x1f3>
mov    0x1f8(%r15),%eax
cmp    $0x4,%eax
ja     2468b <png_write_row+0x2b>
mov    %r15,%rdi
mov    %rcx,%r15
callq  293b0 <png_write_finish_row>
leaveq 
retq   
mov    0x214(%r15),%eax
and    $0x7,%eax
cmp    $0x4,%eax
je     2468b <png_write_row+0x2b>
mov    %r15,%rdi
mov    %rcx,%r15
callq  293b0 <png_write_finish_row>
leaveq 
retq   
mov    0x214(%r15),%eax
and    $0x3,%eax
test   %eax,%eax
jne    2489e <png_write_row+0x23e>
mov    0x1f8(%r15),%eax
cmp    $0x2,%eax
ja     2468b <png_write_row+0x2b>
mov    %r15,%rdi
mov    %rcx,%r15
callq  293b0 <png_write_finish_row>
leaveq 
retq   
mov    0x214(%r15),%eax
and    $0x3,%eax
cmp    $0x2,%eax
je     2468b <png_write_row+0x2b>
mov    %r15,%rdi
mov    %rcx,%r15
callq  293b0 <png_write_finish_row>
leaveq 
retq   
mov    0x214(%r15),%eax
and    $0x1,%eax
test   %eax,%eax
jne    248e9 <png_write_row+0x289>
mov    0x1f8(%r15),%eax
cmp    $0x1,%eax
ja     2468b <png_write_row+0x2b>
mov    %r15,%rdi
mov    %rcx,%r15
callq  293b0 <png_write_finish_row>
leaveq 
retq   
movzbl 0x265(%r15),%edx
cmp    $0x5,%dl
ja     24769 <png_write_row+0x109>
mov    0x134(%r15),%eax
and    $0x2,%eax
test   %eax,%eax
je     24769 <png_write_row+0x109>
mov    0x228(%r15),%rax
add    $0x1,%rax
mov    %rsi,%rdi
mov    %rax,%rsi
callq  29750 <png_do_write_interlace>
mov    -0x28(%rbp),%eax
test   %eax,%eax
je     249c5 <png_write_row+0x365>
lea    -0x28(%rbp),%rsi
jmpq   24769 <png_write_row+0x109>
mov    %r15,%rdi
lea    0xb006(%rip),%rsi        # 2f953 <fourbppswaptable+0x307>
callq  5470 <png_error@plt>
movzbl 0x3dc(%r15),%eax
cmp    $0x40,%al
jne    247b6 <png_write_row+0x156>
mov    0x228(%r15),%rax
add    $0x1,%rax
mov    %rsi,%rdi
mov    %rax,%rsi
callq  25940 <png_do_write_intrapixel>
lea    -0x28(%rbp),%rsi
jmpq   247b6 <png_write_row+0x156>
movslq 0x25c(%r15),%rax
test   %eax,%eax
js     247c2 <png_write_row+0x162>
mov    %r15,%rdi
callq  23bb0 <png_do_check_palette_indexes>
lea    -0x28(%rbp),%rsi
jmpq   247c2 <png_write_row+0x162>
mov    %r15,%rdi
mov    0x214(%rdi),%esi
movzbl 0x265(%rdi),%edx
callq  *%rax
mov    -0x10(%rbp),%r15
leaveq 
retq   
lea    0xaf5e(%rip),%rsi        # 2f91e <fourbppswaptable+0x2d2>
callq  5470 <png_error@plt>
mov    %r15,%rdi
callq  293b0 <png_write_finish_row>
mov    -0x10(%rbp),%r15
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

00000000000249e0 <png_write_rows>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
test   %rdi,%rdi
je     24a0d <png_write_rows+0x2d>
xor    %eax,%eax
mov    %r12,-0x8(%rbp)
mov    %r13,-0x10(%rbp)
mov    %r14,-0x18(%rbp)
mov    %r15,-0x20(%rbp)
mov    %rax,%r12
mov    %rsi,%r13
mov    %rdi,%r14
mov    %rdx,%r15
jmp    24a23 <png_write_rows+0x43>
leaveq 
retq   
mov    0x0(%r13),%rsi
mov    %r14,%rdi
callq  5380 <png_write_row@plt>
add    $0x1,%r12d
add    $0x8,%r13
cmp    %r15d,%r12d
jb     24a0f <png_write_rows+0x2f>
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

0000000000024a40 <png_write_image>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    %rsi,-0x30(%rbp)
test   %rdi,%rdi
jne    24a53 <png_write_image+0x13>
leaveq 
retq   
mov    %rdi,%rax
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rbx,%r14
mov    %rsi,%rbx
mov    %r12,%r15
mov    %rdi,%r12
mov    %rax,%rdi
callq  53f0 <png_set_interlace_handling@plt>
xor    %ecx,%ecx
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %rcx,%r14
mov    %rax,%r15
mov    %r14,%r13
jmp    24ab6 <png_write_image+0x76>
mov    (%rbx),%rsi
mov    %r12,%rdi
callq  5380 <png_write_row@plt>
add    $0x8,%rbx
add    $0x1,%r14d
mov    0x1fc(%r12),%eax
cmp    %r14d,%eax
ja     24a8b <png_write_image+0x4b>
add    $0x1,%r13d
mov    -0x30(%rbp),%rbx
xor    %r14d,%r14d
cmp    %r15d,%r13d
jl     24a9e <png_write_image+0x5e>
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   0x0(%rax)

0000000000024ae0 <png_write_end>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
test   %rdi,%rdi
jne    24aef <png_write_end+0xf>
leaveq 
retq   
mov    0x12c(%rdi),%eax
and    $0x4,%eax
test   %eax,%eax
je     24b22 <png_write_end+0x42>
movzwl 0x258(%rdi),%eax
cmp    0x25c(%rdi),%eax
jl     24b2e <png_write_end+0x4e>
mov    %r15,%rax
mov    %r12,%r15
mov    %rsi,%r12
mov    %r14,%rdx
mov    %rbx,%r14
mov    %rdi,%rbx
mov    %r13,%r8
jmp    24b62 <png_write_end+0x82>
lea    0xae4f(%rip),%rsi        # 2f978 <fourbppswaptable+0x32c>
callq  5470 <png_error@plt>
lea    0xae5e(%rip),%rcx        # 2f993 <fourbppswaptable+0x347>
mov    %rdi,%rax
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rbx,%r14
mov    %rdi,%rbx
mov    %rax,%rdi
mov    %r12,%r15
mov    %rsi,%r12
mov    %rcx,%rsi
callq  5590 <png_benign_error@plt>
mov    %r13,%r8
mov    -0x28(%rbp),%rax
mov    -0x20(%rbp),%rdx
test   %r12,%r12
jne    24b9b <png_write_end+0xbb>
mov    %r8,%r12
mov    %rdx,%r13
mov    0x12c(%rbx),%ecx
or     $0x8,%ecx
mov    %ecx,0x12c(%rbx)
mov    %rbx,%rdi
mov    %rax,%rbx
callq  28100 <png_write_IEND>
mov    %r14,%rax
mov    %r13,%r14
mov    %r12,%r13
mov    %r15,%r12
mov    %rbx,%r15
mov    %rax,%rbx
leaveq 
retq   
xor    %r13d,%r13d
mov    0x8(%r12),%ecx
and    $0x200,%ecx
test   %ecx,%ecx
jne    24bc6 <png_write_end+0xe6>
mov    %rdx,-0x20(%rbp)
mov    %rax,-0x28(%rbp)
mov    %r8,-0x18(%rbp)
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %r13,%r14
jmp    24bfe <png_write_end+0x11e>
mov    0x12c(%rbx),%ecx
and    $0x200,%ecx
test   %ecx,%ecx
je     24c5a <png_write_end+0x17a>
mov    %rdx,-0x20(%rbp)
mov    %rax,-0x28(%rbp)
mov    %r8,-0x18(%rbp)
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %r13,%r14
jmp    24bfe <png_write_end+0x11e>
movl   $0xfffffffd,(%r15)
add    $0x1,%r14d
movslq 0x94(%r12),%rax
cmp    %r14d,%eax
jg     24c86 <png_write_end+0x1a6>
mov    0x8(%r12),%eax
and    $0x10000,%eax
test   %eax,%eax
je     24c31 <png_write_end+0x151>
mov    0xf0(%r12),%rsi
movslq 0xec(%r12),%rdx
mov    %rbx,%rdi
callq  28370 <png_write_eXIf>
mov    %r12,%rsi
mov    $0x8,%edx
mov    %rbx,%rdi
callq  25860 <write_unknown_chunks>
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
mov    -0x18(%rbp),%r12
mov    -0x28(%rbp),%rax
mov    -0x20(%rbp),%r13
jmpq   24b6d <png_write_end+0x8d>
lea    0xa8(%r12),%rsi
mov    %rbx,%rdi
mov    %rdx,-0x20(%rbp)
mov    %rax,-0x28(%rbp)
mov    %r8,-0x18(%rbp)
callq  29240 <png_write_tIME>
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %r13,%r14
jmpq   24bfe <png_write_end+0x11e>
movslq %r14d,%rcx
lea    (%rcx,%rcx,2),%rax
shl    $0x4,%rax
lea    (%rax,%rcx,8),%r15
mov    0xa0(%r12),%rax
movslq (%rax,%r15,1),%rsi
test   %esi,%esi
jg     24cdc <png_write_end+0x1fc>
test   %esi,%esi
jns    24d18 <png_write_end+0x238>
cmp    $0xffffffff,%esi
jne    24bfa <png_write_end+0x11a>
mov    0x8(%rax,%r15,1),%rsi
mov    0x10(%rax,%r15,1),%rdx
mov    %rbx,%rdi
mov    %r13,%rcx
callq  28a70 <png_write_tEXt>
mov    0xa0(%r12),%rax
movl   $0xfffffffd,(%rax,%r15,1)
jmpq   24bfa <png_write_end+0x11a>
mov    0x8(%rax,%r15,1),%rdx
mov    0x28(%rax,%r15,1),%rcx
mov    0x30(%rax,%r15,1),%r8
mov    0x10(%rax,%r15,1),%r9
mov    %rbx,%rdi
callq  28cb0 <png_write_iTXt>
add    0xa0(%r12),%r15
movslq (%r15),%rax
cmp    $0xffffffff,%eax
je     24bf3 <png_write_end+0x113>
movl   $0xfffffffe,(%r15)
jmpq   24bfa <png_write_end+0x11a>
mov    0x8(%rax,%r15,1),%rsi
mov    0x10(%rax,%r15,1),%rdx
movslq (%rax,%r15,1),%rcx
mov    %rbx,%rdi
callq  28b70 <png_write_zTXt>
mov    0xa0(%r12),%rax
movl   $0xfffffffe,(%rax,%r15,1)
jmpq   24bfa <png_write_end+0x11a>
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

0000000000024d50 <png_destroy_write_struct>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
test   %rdi,%rdi
jne    24d5f <png_destroy_write_struct+0xf>
leaveq 
retq   
mov    (%rdi),%rcx
test   %rcx,%rcx
jne    24d69 <png_destroy_write_struct+0x19>
leaveq 
retq   
mov    %rcx,%rax
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rcx,%r14
mov    %rdi,%r15
mov    %rax,%rdi
callq  55a0 <png_destroy_info_struct@plt>
movq   $0x0,(%r15)
mov    %r14,%rdi
callq  25a30 <png_write_destroy>
mov    %r14,%rdi
callq  ca70 <png_destroy_png_struct>
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

0000000000024db0 <png_set_filter>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
test   %rdi,%rdi
jne    24dbf <png_set_filter+0xf>
leaveq 
retq   
xor    %eax,%eax
mov    0x3d8(%rdi),%ecx
and    $0x4,%ecx
test   %ecx,%ecx
jne    24dde <png_set_filter+0x2e>
test   %esi,%esi
je     24de8 <png_set_filter+0x38>
lea    0xac3d(%rip),%rsi        # 2fa16 <fourbppswaptable+0x3ca>
callq  5470 <png_error@plt>
cmp    $0x40,%esi
jne    24dce <png_set_filter+0x1e>
mov    %rax,%rsi
jmp    24dce <png_set_filter+0x1e>
movzbl %dl,%ecx
cmp    $0x7,%ecx
ja     24e09 <png_set_filter+0x59>
lea    0xaa7d(%rip),%rsi        # 2f874 <fourbppswaptable+0x228>
movslq (%rsi,%rcx,4),%rcx
add    %rsi,%rcx
jmpq   *%rcx
movb   $0x80,0x266(%rdi)
jmp    24e0f <png_set_filter+0x5f>
mov    %dl,0x266(%rdi)
mov    0x228(%rdi),%rcx
test   %rcx,%rcx
je     25008 <png_set_filter+0x258>
mov    0x1fc(%rdi),%ecx
cmp    $0x1,%ecx
jne    24e30 <png_set_filter+0x80>
and    $0xffffff1f,%edx
mov    0x1f8(%rdi),%ecx
cmp    $0x1,%ecx
jne    24e41 <png_set_filter+0x91>
and    $0xffffff2f,%edx
mov    %rdx,%rcx
and    $0xe0,%ecx
test   %ecx,%ecx
jle    24e90 <png_set_filter+0xe0>
mov    0x220(%rdi),%rcx
test   %rcx,%rcx
jne    24e90 <png_set_filter+0xe0>
lea    0xab7c(%rip),%rsi        # 2f9dd <fourbppswaptable+0x391>
mov    %rdi,%rax
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rdx,%r14
mov    %rdi,%r15
mov    %rax,%rdi
callq  b0f0 <png_app_warning>
mov    %r14,%rdx
and    $0xffffff1f,%edx
mov    %r15,%rdi
xor    %eax,%eax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    $0x1,%ecx
mov    %rdx,%rsi
and    $0x10,%esi
test   %esi,%esi
jle    24ea7 <png_set_filter+0xf7>
mov    %rcx,%rax
mov    $0x2,%ecx
mov    %rdx,%rsi
and    $0x20,%esi
test   %esi,%esi
jle    24eb4 <png_set_filter+0x104>
mov    %rcx,%rax
mov    %rdx,%rcx
and    $0x40,%ecx
test   %ecx,%ecx
jle    24ec1 <png_set_filter+0x111>
add    $0x1,%eax
mov    %rdx,%rcx
and    $0x80,%ecx
test   %ecx,%ecx
jle    24ed1 <png_set_filter+0x121>
add    $0x1,%eax
movzbl 0x269(%rdi),%ecx
movzbl 0x26c(%rdi),%esi
imul   %esi,%ecx
cmp    $0x7,%ecx
jg     24f5e <png_set_filter+0x1ae>
movslq %ecx,%rcx
mov    0x1f8(%rdi),%esi
imul   %rsi,%rcx
add    $0x7,%rcx
shr    $0x3,%rcx
jmp    24f6f <png_set_filter+0x1bf>
lea    0xaab8(%rip),%rsi        # 2f9bd <fourbppswaptable+0x371>
mov    %rdi,%rax
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rdi,%r14
mov    %rax,%rdi
mov    %rdx,%r15
callq  b110 <png_app_error>
mov    %r15,%rdx
mov    %r14,%rdi
xor    %eax,%eax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
movb   $0x8,0x266(%rdi)
jmpq   24e0f <png_set_filter+0x5f>
movb   $0x10,0x266(%rdi)
jmpq   24e0f <png_set_filter+0x5f>
movb   $0x20,0x266(%rdi)
jmpq   24e0f <png_set_filter+0x5f>
movb   $0x40,0x266(%rdi)
jmpq   24e0f <png_set_filter+0x5f>
movslq %ecx,%rcx
shr    $0x3,%rcx
mov    0x1f8(%rdi),%esi
imul   %rsi,%rcx
lea    0x1(%rcx),%rsi
mov    0x230(%rdi),%rcx
test   %rcx,%rcx
jne    24fc9 <png_set_filter+0x219>
mov    %rdi,%r8
mov    %rsi,%rcx
mov    %r14,-0x18(%rbp)
mov    %r15,-0x28(%rbp)
mov    %r13,-0x10(%rbp)
mov    %rsi,-0x8(%rbp)
mov    %rcx,%rsi
mov    %rdx,%r13
mov    %rax,%r14
mov    %rdi,%r15
mov    %r8,%rdi
callq  5800 <png_malloc@plt>
mov    %rax,0x230(%r15)
mov    %r14,%rax
mov    %r13,%rdx
mov    %r15,%rdi
mov    -0x8(%rbp),%rsi
mov    -0x10(%rbp),%r13
mov    -0x28(%rbp),%r15
mov    -0x18(%rbp),%r14
cmp    $0x1,%eax
jle    25008 <png_set_filter+0x258>
mov    0x238(%rdi),%rax
test   %rax,%rax
jne    25008 <png_set_filter+0x258>
mov    %rdi,%rax
mov    %r14,-0x18(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rdi,%r14
mov    %rax,%rdi
mov    %rdx,%r15
callq  5800 <png_malloc@plt>
mov    %rax,0x238(%r14)
mov    %r15,%rdx
mov    %r14,%rdi
mov    -0x28(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    %dl,0x266(%rdi)
leaveq 
retq   

0000000000025010 <png_set_filter_heuristics>:
push   %rbp
mov    %rsp,%rbp
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)

0000000000025020 <png_set_filter_heuristics_fixed>:
push   %rbp
mov    %rsp,%rbp
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)

0000000000025030 <png_set_compression_level>:
push   %rbp
mov    %rsp,%rbp
test   %rdi,%rdi
jne    2503b <png_set_compression_level+0xb>
leaveq 
retq   
mov    %esi,0x1bc(%rdi)
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

0000000000025050 <png_set_compression_mem_level>:
push   %rbp
mov    %rsp,%rbp
test   %rdi,%rdi
jne    2505b <png_set_compression_mem_level+0xb>
leaveq 
retq   
mov    %esi,0x1c8(%rdi)
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

0000000000025070 <png_set_compression_strategy>:
push   %rbp
mov    %rsp,%rbp
test   %rdi,%rdi
jne    2507b <png_set_compression_strategy+0xb>
leaveq 
retq   
mov    0x130(%rdi),%eax
or     $0x1,%eax
mov    %eax,0x130(%rdi)
mov    %esi,0x1cc(%rdi)
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   (%rax)

00000000000250a0 <png_set_compression_window_bits>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
test   %rdi,%rdi
jne    250af <png_set_compression_window_bits+0xf>
leaveq 
retq   
cmp    $0xf,%esi
jg     250e0 <png_set_compression_window_bits+0x40>
cmp    $0x7,%esi
jg     25105 <png_set_compression_window_bits+0x65>
lea    0xa9a4(%rip),%rsi        # 2fa64 <fourbppswaptable+0x418>
mov    %rdi,%rax
mov    %r15,-0x8(%rbp)
mov    %rdi,%r15
mov    %rax,%rdi
callq  5390 <png_warning@plt>
mov    %r15,%rdi
mov    $0x8,%esi
mov    -0x8(%rbp),%r15
jmp    25105 <png_set_compression_window_bits+0x65>
lea    0xa94c(%rip),%rsi        # 2fa33 <fourbppswaptable+0x3e7>
mov    %rdi,%rax
mov    %r15,-0x8(%rbp)
mov    %rdi,%r15
mov    %rax,%rdi
callq  5390 <png_warning@plt>
mov    %r15,%rdi
mov    $0xf,%esi
mov    -0x8(%rbp),%r15
mov    %esi,0x1c4(%rdi)
leaveq 
retq   
nopl   (%rax)

0000000000025110 <png_set_compression_method>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
test   %rdi,%rdi
jne    2511f <png_set_compression_method+0xf>
leaveq 
retq   
cmp    $0x8,%esi
je     25155 <png_set_compression_method+0x45>
lea    0xa96a(%rip),%rcx        # 2fa95 <fourbppswaptable+0x449>
mov    %rdi,%rax
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rsi,%r14
mov    %rcx,%rsi
mov    %rdi,%r15
mov    %rax,%rdi
callq  5390 <png_warning@plt>
mov    %r14,%rsi
mov    %r15,%rdi
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
mov    %esi,0x1c0(%rdi)
leaveq 
retq   
nopl   (%rax)

0000000000025160 <png_set_text_compression_level>:
push   %rbp
mov    %rsp,%rbp
test   %rdi,%rdi
jne    2516b <png_set_text_compression_level+0xb>
leaveq 
retq   
mov    %esi,0x1d0(%rdi)
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

0000000000025180 <png_set_text_compression_mem_level>:
push   %rbp
mov    %rsp,%rbp
test   %rdi,%rdi
jne    2518b <png_set_text_compression_mem_level+0xb>
leaveq 
retq   
mov    %esi,0x1dc(%rdi)
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

00000000000251a0 <png_set_text_compression_strategy>:
push   %rbp
mov    %rsp,%rbp
test   %rdi,%rdi
jne    251ab <png_set_text_compression_strategy+0xb>
leaveq 
retq   
mov    %esi,0x1e0(%rdi)
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

00000000000251c0 <png_set_text_compression_window_bits>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
test   %rdi,%rdi
jne    251cf <png_set_text_compression_window_bits+0xf>
leaveq 
retq   
cmp    $0xf,%esi
jg     25200 <png_set_text_compression_window_bits+0x40>
cmp    $0x7,%esi
jg     25225 <png_set_text_compression_window_bits+0x65>
lea    0xa884(%rip),%rsi        # 2fa64 <fourbppswaptable+0x418>
mov    %rdi,%rax
mov    %r15,-0x8(%rbp)
mov    %rdi,%r15
mov    %rax,%rdi
callq  5390 <png_warning@plt>
mov    %r15,%rdi
mov    $0x8,%esi
mov    -0x8(%rbp),%r15
jmp    25225 <png_set_text_compression_window_bits+0x65>
lea    0xa82c(%rip),%rsi        # 2fa33 <fourbppswaptable+0x3e7>
mov    %rdi,%rax
mov    %r15,-0x8(%rbp)
mov    %rdi,%r15
mov    %rax,%rdi
callq  5390 <png_warning@plt>
mov    %r15,%rdi
mov    $0xf,%esi
mov    -0x8(%rbp),%r15
mov    %esi,0x1d8(%rdi)
leaveq 
retq   
nopl   (%rax)

0000000000025230 <png_set_text_compression_method>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
test   %rdi,%rdi
jne    2523f <png_set_text_compression_method+0xf>
leaveq 
retq   
cmp    $0x8,%esi
je     25275 <png_set_text_compression_method+0x45>
lea    0xa84a(%rip),%rcx        # 2fa95 <fourbppswaptable+0x449>
mov    %rdi,%rax
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rsi,%r14
mov    %rcx,%rsi
mov    %rdi,%r15
mov    %rax,%rdi
callq  5390 <png_warning@plt>
mov    %r14,%rsi
mov    %r15,%rdi
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
mov    %esi,0x1d4(%rdi)
leaveq 
retq   
nopl   (%rax)

0000000000025280 <png_set_write_status_fn>:
push   %rbp
mov    %rsp,%rbp
test   %rdi,%rdi
jne    2528b <png_set_write_status_fn+0xb>
leaveq 
retq   
mov    %rsi,0x308(%rdi)
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nop

00000000000252a0 <png_set_write_user_transform_fn>:
push   %rbp
mov    %rsp,%rbp
test   %rdi,%rdi
jne    252ab <png_set_write_user_transform_fn+0xb>
leaveq 
retq   
mov    0x134(%rdi),%eax
or     $0x100000,%eax
mov    %eax,0x134(%rdi)
mov    %rsi,0x118(%rdi)
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)

00000000000252d0 <png_write_png>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
test   %rdi,%rdi
jne    252df <png_write_png+0xf>
leaveq 
retq   
test   %rsi,%rsi
jne    252e6 <png_write_png+0x16>
leaveq 
retq   
mov    0x8(%rsi),%eax
and    $0x8000,%eax
test   %eax,%eax
je     253e8 <png_write_png+0x118>
mov    %rdi,%rax
mov    %rsi,%rcx
mov    %r13,-0x8(%rbp)
mov    %r14,-0x10(%rbp)
mov    %r15,-0x18(%rbp)
mov    %rdi,%r13
mov    %rax,%rdi
mov    %rsi,%r14
mov    %rcx,%rsi
mov    %rdx,%r15
callq  5340 <png_write_info@plt>
mov    %r15,%rax
and    $0x20,%eax
test   %eax,%eax
jle    2532e <png_write_png+0x5e>
mov    %r13,%rdi
callq  58e0 <png_set_invert_mono@plt>
mov    %r15,%rax
and    $0x40,%eax
test   %eax,%eax
jg     253f6 <png_write_png+0x126>
mov    %r15,%rax
and    $0x4,%eax
test   %eax,%eax
jle    2534e <png_write_png+0x7e>
mov    %r13,%rdi
callq  5580 <png_set_packing@plt>
mov    %r15,%rax
and    $0x100,%eax
test   %eax,%eax
jle    25362 <png_write_png+0x92>
mov    %r13,%rdi
callq  50d0 <png_set_swap_alpha@plt>
mov    %r15,%rax
and    $0x1800,%eax
test   %eax,%eax
jg     25419 <png_write_png+0x149>
mov    %r15,%rax
and    $0x80,%eax
test   %eax,%eax
jle    25386 <png_write_png+0xb6>
mov    %r13,%rdi
callq  5860 <png_set_bgr@plt>
mov    %r15,%rax
and    $0x200,%eax
test   %eax,%eax
jle    2539a <png_write_png+0xca>
mov    %r13,%rdi
callq  51e0 <png_set_swap@plt>
mov    %r15,%rax
and    $0x8,%eax
test   %eax,%eax
jle    253ac <png_write_png+0xdc>
mov    %r13,%rdi
callq  5820 <png_set_packswap@plt>
and    $0x400,%r15d
test   %r15d,%r15d
jle    253c0 <png_write_png+0xf0>
mov    %r13,%rdi
callq  5620 <png_set_invert_alpha@plt>
mov    0x160(%r14),%rsi
mov    %r13,%rdi
callq  5570 <png_write_image@plt>
mov    %r14,%rsi
mov    %r13,%rdi
callq  53c0 <png_write_end@plt>
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
leaveq 
retq   
lea    0xa6d4(%rip),%rsi        # 2fac3 <fourbppswaptable+0x477>
callq  b110 <png_app_error>
leaveq 
retq   
mov    0x8(%r14),%eax
and    $0x2,%eax
test   %eax,%eax
je     2533c <png_write_png+0x6c>
lea    0xb0(%r14),%rsi
mov    %r13,%rdi
callq  5270 <png_set_shift@plt>
jmpq   2533c <png_write_png+0x6c>
xor    %esi,%esi
mov    %r15,%rax
and    $0x1000,%eax
test   %eax,%eax
jg     25447 <png_write_png+0x177>
mov    %r15,%rax
and    $0x800,%eax
test   %eax,%eax
jle    25372 <png_write_png+0xa2>
mov    %rsi,%rdx
mov    %r13,%rdi
callq  5200 <png_set_filler@plt>
jmpq   25372 <png_write_png+0xa2>
mov    %r15,%rax
and    $0x800,%eax
test   %eax,%eax
jle    25464 <png_write_png+0x194>
lea    0xa68e(%rip),%rsi        # 2fae8 <fourbppswaptable+0x49c>
mov    %r13,%rdi
callq  b110 <png_app_error>
xor    %esi,%esi
mov    $0x1,%edx
mov    %r13,%rdi
callq  5200 <png_set_filler@plt>
jmpq   25372 <png_write_png+0xa2>
nopw   %cs:0x0(%rax,%rax,1)

0000000000025480 <png_image_write_to_file>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
xor    %eax,%eax
test   %rdi,%rdi
jne    25499 <png_image_write_to_file+0x19>
mov    %rax,%r10
test   %r10,%r10
jne    254bc <png_image_write_to_file+0x3c>
leaveq 
retq   
mov    $0x1,%r10d
mov    0x8(%rdi),%r11d
cmp    $0x1,%r11d
jne    25492 <png_image_write_to_file+0x12>
test   %rsi,%rsi
jne    254ca <png_image_write_to_file+0x4a>
lea    0xa66d(%rip),%rsi        # 2fb22 <fourbppswaptable+0x4d6>
callq  90d0 <png_image_error>
leaveq 
retq   
lea    0xa689(%rip),%rsi        # 2fb4c <fourbppswaptable+0x500>
callq  90d0 <png_image_error>
leaveq 
retq   
test   %rcx,%rcx
je     254ae <png_image_write_to_file+0x2e>
lea    0xa649(%rip),%rax        # 2fb1f <fourbppswaptable+0x4d3>
mov    %rsi,%r10
mov    %rbx,-0x10(%rbp)
mov    %r12,-0x18(%rbp)
mov    %r13,-0x20(%rbp)
mov    %r14,-0x28(%rbp)
mov    %r15,-0x30(%rbp)
mov    %rsi,-0x8(%rbp)
mov    %rax,%rsi
mov    %rdi,%rbx
mov    %r10,%rdi
mov    %rdx,%r12
mov    %rcx,%r13
mov    %r9,%r14
mov    %r8,%r15
callq  5760 <fopen@plt>
test   %rax,%rax
jne    2553e <png_image_write_to_file+0xbe>
callq  50a0 <__errno_location@plt>
movslq (%rax),%rdi
callq  5890 <strerror@plt>
mov    %rax,%rsi
mov    %rbx,%rdi
callq  90d0 <png_image_error>
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
mov    -0x10(%rbp),%rbx
leaveq 
retq   
mov    %r13,%rcx
mov    %r12,%rdx
mov    %rax,%r12
mov    %r15,%r8
mov    %r14,%r9
mov    %rbx,%rdi
mov    %r12,%rsi
callq  5880 <png_image_write_to_stdio@plt>
test   %eax,%eax
jne    25585 <png_image_write_to_file+0x105>
mov    %r12,%rdi
callq  5240 <fclose@plt>
mov    -0x8(%rbp),%rdi
callq  50b0 <remove@plt>
xor    %eax,%eax
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
mov    -0x10(%rbp),%rbx
leaveq 
retq   
mov    %r12,%rdi
callq  55d0 <fflush@plt>
test   %eax,%eax
je     255d3 <png_image_write_to_file+0x153>
callq  50a0 <__errno_location@plt>
movslq (%rax),%r13
mov    %r12,%rdi
callq  5240 <fclose@plt>
mov    -0x8(%rbp),%rdi
callq  50b0 <remove@plt>
mov    %r13,%rdi
callq  5890 <strerror@plt>
mov    %rax,%rsi
mov    %rbx,%rdi
callq  90d0 <png_image_error>
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
mov    -0x10(%rbp),%rbx
leaveq 
retq   
mov    %r12,%rdi
callq  5130 <ferror@plt>
test   %eax,%eax
jne    25591 <png_image_write_to_file+0x111>
mov    %r12,%rdi
callq  5240 <fclose@plt>
test   %eax,%eax
jne    25606 <png_image_write_to_file+0x186>
mov    -0x30(%rbp),%r15
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
mov    -0x10(%rbp),%rbx
mov    $0x1,%eax
leaveq 
retq   
callq  50a0 <__errno_location@plt>
movslq (%rax),%r13
jmp    255a1 <png_image_write_to_file+0x121>

0000000000025610 <png_image_write_to_stdio>:
push   %rbp
mov    %rsp,%rbp
sub    $0x90,%rsp
xor    %eax,%eax
test   %rdi,%rdi
jne    2562c <png_image_write_to_stdio+0x1c>
mov    %rax,%rcx
test   %rcx,%rcx
jne    2563d <png_image_write_to_stdio+0x2d>
leaveq 
retq   
mov    0x8(%rdi),%r10d
cmp    $0x1,%r10d
je     2564b <png_image_write_to_stdio+0x3b>
mov    $0x1,%ecx
jmp    25625 <png_image_write_to_stdio+0x15>
lea    0xa568(%rip),%rsi        # 2fbac <fourbppswaptable+0x560>
callq  90d0 <png_image_error>
leaveq 
retq   
test   %rsi,%rsi
jne    2565e <png_image_write_to_stdio+0x4e>
lea    0xa52a(%rip),%rsi        # 2fb81 <fourbppswaptable+0x535>
callq  90d0 <png_image_error>
leaveq 
retq   
test   %rcx,%rcx
je     25650 <png_image_write_to_stdio+0x40>
mov    %rdi,%rax
mov    %rdi,-0x30(%rbp)
mov    %rsi,-0x28(%rbp)
mov    %rcx,-0x8(%rbp)
mov    %r8,-0x10(%rbp)
mov    %r9,-0x18(%rbp)
mov    %rdx,-0x20(%rbp)
mov    %rax,%rdi
callq  25b00 <png_image_write_init>
test   %eax,%eax
jne    2568e <png_image_write_to_stdio+0x7e>
xor    %eax,%eax
leaveq 
retq   
mov    -0x30(%rbp),%r8
mov    (%r8),%rax
mov    (%rax),%rax
mov    -0x28(%rbp),%rcx
mov    %rcx,0x108(%rax)
lea    -0x88(%rbp),%rdi
mov    $0x58,%edx
mov    %r15,-0x30(%rbp)
mov    %r8,%r15
xor    %esi,%esi
callq  5350 <memset@plt>
mov    %r15,-0x88(%rbp)
mov    -0x8(%rbp),%rax
mov    %rax,-0x80(%rbp)
mov    -0x10(%rbp),%rax
mov    %eax,-0x78(%rbp)
mov    -0x18(%rbp),%rax
mov    %rax,-0x70(%rbp)
mov    -0x20(%rbp),%rax
mov    %eax,-0x68(%rbp)
lea    0xfa7(%rip),%rsi        # 26690 <png_image_write_main>
mov    %r15,%rdi
lea    -0x88(%rbp),%rdx
callq  b250 <png_safe_execute>
mov    %r15,%rdi
mov    %rax,%r15
callq  5040 <png_image_free@plt>
mov    %r15,%rax
mov    -0x30(%rbp),%r15
leaveq 
retq   
nopl   0x0(%rax)

0000000000025710 <png_image_write_to_memory>:
push   %rbp
mov    %rsp,%rbp
sub    $0x90,%rsp
xor    %eax,%eax
test   %rdi,%rdi
jne    2572c <png_image_write_to_memory+0x1c>
mov    %rax,%rcx
test   %rcx,%rcx
jne    2573d <png_image_write_to_memory+0x2d>
leaveq 
retq   
mov    0x8(%rdi),%r10d
cmp    $0x1,%r10d
je     2574b <png_image_write_to_memory+0x3b>
mov    $0x1,%ecx
jmp    25725 <png_image_write_to_memory+0x15>
lea    0xa4ca(%rip),%rsi        # 2fc0e <fourbppswaptable+0x5c2>
callq  90d0 <png_image_error>
leaveq 
retq   
test   %rdx,%rdx
jne    2575e <png_image_write_to_memory+0x4e>
lea    0xa48b(%rip),%rsi        # 2fbe2 <fourbppswaptable+0x596>
callq  90d0 <png_image_error>
leaveq 
retq   
test   %r8,%r8
je     25750 <png_image_write_to_memory+0x40>
test   %rsi,%rsi
jne    2576f <png_image_write_to_memory+0x5f>
movq   $0x0,(%rdx)
mov    %rdi,%rax
mov    %rdi,-0x10(%rbp)
mov    %r8,-0x18(%rbp)
mov    %r9,-0x20(%rbp)
mov    %rcx,-0x28(%rbp)
mov    %rsi,-0x30(%rbp)
mov    %rdx,-0x8(%rbp)
mov    %rax,%rdi
callq  25b00 <png_image_write_init>
test   %eax,%eax
jne    2579a <png_image_write_to_memory+0x8a>
xor    %eax,%eax
leaveq 
retq   
lea    -0x88(%rbp),%rdi
mov    $0x58,%edx
xor    %esi,%esi
callq  5350 <memset@plt>
mov    -0x10(%rbp),%rax
mov    %rax,-0x88(%rbp)
mov    -0x18(%rbp),%rcx
mov    %rcx,-0x80(%rbp)
mov    -0x20(%rbp),%rcx
mov    %ecx,-0x78(%rbp)
mov    0x10(%rbp),%rcx
mov    %rcx,-0x70(%rbp)
mov    -0x28(%rbp),%rcx
mov    %ecx,-0x68(%rbp)
mov    -0x30(%rbp),%rcx
mov    %rcx,-0x48(%rbp)
mov    -0x8(%rbp),%rcx
mov    (%rcx),%rcx
mov    %rcx,-0x40(%rbp)
movq   $0x0,-0x38(%rbp)
lea    0x14d8(%rip),%rsi        # 26cd0 <png_image_write_memory>
mov    %rax,%rdi
mov    %r15,-0x28(%rbp)
mov    %rax,%r15
lea    -0x88(%rbp),%rdx
callq  b250 <png_safe_execute>
mov    %r15,%rdi
mov    %rax,%r15
callq  5040 <png_image_free@plt>
test   %r15d,%r15d
jne    25826 <png_image_write_to_memory+0x116>
mov    -0x28(%rbp),%r15
xor    %eax,%eax
leaveq 
retq   
mov    -0x30(%rbp),%rax
test   %rax,%rax
jne    25843 <png_image_write_to_memory+0x133>
mov    %r15,%rax
mov    -0x8(%rbp),%rcx
mov    -0x38(%rbp),%rdx
mov    %rdx,(%rcx)
mov    -0x28(%rbp),%r15
leaveq 
retq   
mov    -0x8(%rbp),%rcx
mov    (%rcx),%rax
cmp    -0x38(%rbp),%rax
jb     25855 <png_image_write_to_memory+0x145>
mov    %r15,%rax
jmp    25836 <png_image_write_to_memory+0x126>
xor    %eax,%eax
jmp    25836 <png_image_write_to_memory+0x126>
nopl   0x0(%rax)

0000000000025860 <write_unknown_chunks>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
movslq 0x138(%rsi),%rax
test   %eax,%eax
jne    25875 <write_unknown_chunks+0x15>
leaveq 
retq   
mov    0x130(%rsi),%rax
lea    0xa3c2(%rip),%rcx        # 2fc45 <fourbppswaptable+0x5f9>
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rax,%rbx
mov    %rsi,%r12
mov    %rdi,%r13
mov    %rcx,%r14
mov    %rdx,%r15
jmp    2590e <write_unknown_chunks+0xae>
movzbl 0x18(%rbx),%eax
and    %r15d,%eax
test   %eax,%eax
je     2590a <write_unknown_chunks+0xaa>
mov    %r13,%rdi
mov    %rbx,%rsi
callq  5310 <png_handle_as_unknown@plt>
cmp    $0x1,%eax
je     2590a <write_unknown_chunks+0xaa>
movzbl 0x3(%rbx),%ecx
and    $0x20,%ecx
test   %ecx,%ecx
jg     258e3 <write_unknown_chunks+0x83>
cmp    $0x3,%eax
je     258e3 <write_unknown_chunks+0x83>
test   %eax,%eax
jne    2590a <write_unknown_chunks+0xaa>
movslq 0x3c0(%r13),%rax
cmp    $0x3,%eax
jne    2590a <write_unknown_chunks+0xaa>
mov    0x10(%rbx),%rax
test   %rax,%rax
jne    258f7 <write_unknown_chunks+0x97>
mov    %r13,%rdi
mov    %r14,%rsi
callq  5390 <png_warning@plt>
mov    0x8(%rbx),%rdx
mov    0x10(%rbx),%rcx
mov    %r13,%rdi
mov    %rbx,%rsi
callq  5400 <png_write_chunk@plt>
add    $0x20,%rbx
movslq 0x138(%r12),%rax
shl    $0x5,%rax
add    0x130(%r12),%rax
cmp    %rbx,%rax
ja     258a8 <write_unknown_chunks+0x48>
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
nopl   (%rax)

0000000000025940 <png_do_write_intrapixel>:
push   %rbp
mov    %rsp,%rbp
movzbl 0x10(%rdi),%edx
mov    %rdx,%rax
and    $0x2,%eax
test   %eax,%eax
jg     25954 <png_do_write_intrapixel+0x14>
leaveq 
retq   
mov    (%rdi),%r9d
xor    %eax,%eax
movzbl 0x11(%rdi),%ecx
cmp    $0x8,%cl
je     25969 <png_do_write_intrapixel+0x29>
cmp    $0x10,%cl
je     25975 <png_do_write_intrapixel+0x35>
leaveq 
retq   
cmp    $0x2,%dl
jne    25984 <png_do_write_intrapixel+0x44>
mov    $0x3,%edx
jmp    259b0 <png_do_write_intrapixel+0x70>
cmp    $0x2,%dl
jne    259b7 <png_do_write_intrapixel+0x77>
mov    $0x6,%edi
jmpq   25a18 <png_do_write_intrapixel+0xd8>
cmp    $0x6,%dl
jne    25a1f <png_do_write_intrapixel+0xdf>
mov    $0x4,%edx
jmp    259b0 <png_do_write_intrapixel+0x70>
movzbl (%rsi),%ecx
movzbl 0x1(%rsi),%edi
sub    %dil,%cl
mov    %cl,(%rsi)
movzbl 0x2(%rsi),%ecx
sub    %dil,%cl
mov    %cl,0x2(%rsi)
add    $0x1,%eax
add    %rdx,%rsi
cmp    %r9d,%eax
jb     25994 <png_do_write_intrapixel+0x54>
leaveq 
retq   
cmp    $0x6,%dl
jne    25a21 <png_do_write_intrapixel+0xe1>
mov    $0x8,%edi
jmp    25a18 <png_do_write_intrapixel+0xd8>
movzbl 0x1(%rsi),%edx
movzbl (%rsi),%ecx
shl    $0x8,%ecx
add    %edx,%ecx
movzbl 0x3(%rsi),%r8d
movzbl 0x2(%rsi),%edx
shl    $0x8,%edx
add    %edx,%r8d
sub    %r8d,%ecx
mov    %ecx,%ecx
movzwl %cx,%ecx
mov    %rcx,%rdx
shr    $0x8,%edx
mov    %dl,(%rsi)
mov    %cl,0x1(%rsi)
movzbl 0x5(%rsi),%edx
movzbl 0x4(%rsi),%ecx
shl    $0x8,%ecx
add    %edx,%ecx
sub    %r8d,%ecx
mov    %ecx,%ecx
movzwl %cx,%edx
mov    %rdx,%rcx
shr    $0x8,%ecx
mov    %cl,0x4(%rsi)
mov    %dl,0x5(%rsi)
add    $0x1,%eax
add    %rdi,%rsi
cmp    %eax,%r9d
ja     259c3 <png_do_write_intrapixel+0x83>
leaveq 
retq   
leaveq 
retq   
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

0000000000025a30 <png_write_destroy>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x8(%rbp)
mov    0x130(%rdi),%eax
and    $0x2,%eax
test   %eax,%eax
jne    25a4e <png_write_destroy+0x1e>
mov    %rdi,%r15
jmp    25a5d <png_write_destroy+0x2d>
mov    %rdi,%r15
lea    0x140(%r15),%rdi
callq  5670 <deflateEnd@plt>
lea    0x1b0(%r15),%rsi
mov    %r15,%rdi
callq  27780 <png_free_buffer_list>
mov    0x228(%r15),%rsi
mov    %r15,%rdi
callq  5790 <png_free@plt>
movq   $0x0,0x228(%r15)
mov    0x220(%r15),%rsi
mov    %r15,%rdi
callq  5790 <png_free@plt>
mov    0x230(%r15),%rsi
mov    %r15,%rdi
callq  5790 <png_free@plt>
mov    0x238(%r15),%rsi
mov    %r15,%rdi
callq  5790 <png_free@plt>
movq   $0x0,0x220(%r15)
movq   $0x0,0x230(%r15)
movq   $0x0,0x238(%r15)
mov    0x3c8(%r15),%rsi
mov    %r15,%rdi
callq  5790 <png_free@plt>
movq   $0x0,0x3c8(%r15)
mov    -0x8(%rbp),%r15
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nop

0000000000025b00 <png_image_write_init>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %r15,-0x10(%rbp)
mov    %rdi,%r15
lea    0xa151(%rip),%rdi        # 2fc67 <fourbppswaptable+0x61b>
lea    -0x1a9ad(%rip),%rdx        # b170 <png_safe_error>
lea    -0x1a924(%rip),%rcx        # b200 <png_safe_warning>
mov    %r15,%rsi
callq  50f0 <png_create_write_struct@plt>
mov    %rax,-0x20(%rbp)
test   %rax,%rax
jne    25b4a <png_image_write_init+0x4a>
mov    %r15,%rdi
lea    0xa12f(%rip),%rsi        # 2fc6e <fourbppswaptable+0x622>
callq  90d0 <png_image_error>
mov    -0x10(%rbp),%r15
leaveq 
retq   
mov    %rax,%rdi
callq  5280 <png_create_info_struct@plt>
mov    %rax,-0x18(%rbp)
xor    %esi,%esi
test   %rax,%rax
jne    25b68 <png_image_write_init+0x68>
lea    -0x20(%rbp),%rdi
callq  56f0 <png_destroy_write_struct@plt>
jmp    25b35 <png_image_write_init+0x35>
mov    -0x20(%rbp),%rdi
mov    $0x30,%esi
callq  5150 <png_malloc_warn@plt>
test   %rax,%rax
jne    25b8c <png_image_write_init+0x8c>
mov    -0x20(%rbp),%rdi
lea    -0x18(%rbp),%rsi
callq  55a0 <png_destroy_info_struct@plt>
xor    %esi,%esi
jmp    25b5d <png_image_write_init+0x5d>
mov    %rax,%rdi
mov    %r14,-0x8(%rbp)
mov    %rax,%r14
xor    %esi,%esi
mov    $0x30,%edx
callq  5350 <memset@plt>
mov    -0x20(%rbp),%rax
mov    %rax,(%r14)
mov    -0x18(%rbp),%rax
mov    %rax,0x8(%r14)
mov    0x28(%r14),%eax
or     $0x1,%eax
mov    %eax,0x28(%r14)
mov    %r14,(%r15)
mov    $0x1,%eax
mov    -0x8(%rbp),%r14
mov    -0x10(%rbp),%r15
leaveq 
retq   
xchg   %ax,%ax

0000000000025bd0 <png_write_image_16bit>:
push   %rbp
mov    %rsp,%rbp
sub    $0x50,%rsp
mov    %rdi,-0x38(%rbp)
mov    (%rdi),%r9
mov    (%r9),%rax
mov    (%rax),%r11
mov    %r11,-0x30(%rbp)
mov    0x28(%rdi),%rsi
mov    0x38(%rdi),%rcx
mov    $0x1,%edx
mov    0x14(%r9),%r8d
mov    %r8,%rax
and    $0x2,%eax
test   %eax,%eax
jne    25c0b <png_write_image_16bit+0x3b>
mov    $0x2,%eax
jmp    25c15 <png_write_image_16bit+0x45>
mov    $0x4,%eax
mov    $0x3,%edx
mov    %rdx,-0x48(%rbp)
mov    0x10(%r9),%r10d
mov    %r8,%rdi
and    $0x1,%edi
test   %edi,%edi
jne    25c36 <png_write_image_16bit+0x66>
mov    %r11,%rdi
lea    0xa05d(%rip),%rsi        # 2fc8e <fourbppswaptable+0x642>
callq  5470 <png_error@plt>
and    $0x20,%r8d
test   %r8d,%r8d
jne    25c44 <png_write_image_16bit+0x74>
mov    %rdx,%rdi
jmp    25c53 <png_write_image_16bit+0x83>
mov    $0xffffffffffffffff,%rdi
add    $0x2,%rcx
add    $0x2,%rsi
mov    %rcx,-0x40(%rbp)
movslq %edi,%rdi
imul   0xc(%r9),%eax
mov    %eax,%eax
lea    (%rcx,%rax,2),%rax
mov    $0xffff,%r8d
xor    %r9d,%r9d
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rdx,%rbx
mov    %r10,%r12
mov    %rdi,%r13
mov    %r11,%rdi
mov    %rax,%r14
mov    -0x38(%rbp),%r15
jmp    25cf5 <png_write_image_16bit+0x125>
add    $0x2,%rcx
add    $0x2,%rsi
movzwl (%rsi),%edx
cmp    %dx,%r10w
ja     25d15 <png_write_image_16bit+0x145>
mov    %r8,%rdx
mov    %dx,(%rcx)
add    $0xffffffff,%ebx
test   %ebx,%ebx
jg     25c97 <png_write_image_16bit+0xc7>
add    $0x4,%rsi
add    $0x4,%rcx
mov    -0x48(%rbp),%rbx
cmp    %r14,%rcx
jb     25d1f <png_write_image_16bit+0x14f>
mov    0x38(%r15),%rsi
callq  5380 <png_write_row@plt>
add    $0xffffffff,%r12d
movzwl 0x30(%r15),%eax
and    $0xfffffffffffffffe,%rax
mov    -0x38(%rbp),%rcx
lea    (%rcx,%rax,1),%rsi
mov    -0x40(%rbp),%rcx
mov    -0x30(%rbp),%rdi
mov    $0xffff,%r8d
xor    %r9d,%r9d
test   %r12d,%r12d
jne    25d37 <png_write_image_16bit+0x167>
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    $0x1,%eax
leaveq 
retq   
test   %dx,%dx
jne    25d3d <png_write_image_16bit+0x16d>
mov    %r9,%rdx
jmp    25cab <png_write_image_16bit+0xdb>
movzwl (%rsi,%r13,2),%r10d
mov    %r10w,(%rcx,%r13,2)
test   %r10w,%r10w
jne    25d59 <png_write_image_16bit+0x189>
mov    %r9,%rax
jmpq   25c9f <png_write_image_16bit+0xcf>
mov    %rsi,-0x38(%rbp)
jmp    25cc1 <png_write_image_16bit+0xf1>
cmp    $0xfffe,%r10w
ja     25cab <png_write_image_16bit+0xdb>
imul   %eax,%edx
add    $0x4000,%edx
shr    $0xf,%edx
jmpq   25cab <png_write_image_16bit+0xdb>
cmp    $0xfffe,%r10w
jbe    25d68 <png_write_image_16bit+0x198>
mov    %r9,%rax
jmpq   25c9f <png_write_image_16bit+0xcf>
mov    %r10,%rax
shr    %eax
add    $0x7fff8000,%eax
cltd   
idiv   %r10d
jmpq   25c9f <png_write_image_16bit+0xcf>
nopl   0x0(%rax,%rax,1)

0000000000025d80 <png_unpremultiply>:
push   %rbp
mov    %rsp,%rbp
mov    $0xff,%eax
cmp    %edi,%esi
ja     25d8f <png_unpremultiply+0xf>
leaveq 
retq   
cmp    $0x7f,%esi
ja     25d96 <png_unpremultiply+0x16>
leaveq 
retq   
test   %edi,%edi
jne    25d9e <png_unpremultiply+0x1e>
xor    %eax,%eax
leaveq 
retq   
cmp    $0xff7e,%esi
jbe    25db0 <png_unpremultiply+0x30>
mov    %rdi,%rax
shl    $0x8,%eax
sub    %edi,%eax
jmp    25db9 <png_unpremultiply+0x39>
imul   %edx,%edi
lea    0x40(%rdi),%eax
shr    $0x7,%eax
mov    %rax,%rcx
shr    $0xf,%ecx
mov    %ecx,%edx
lea    0x69c4(%rip),%rcx        # 2c78c <png_sRGB_delta>
movzbl (%rdx,%rcx,1),%ecx
and    $0x7fff,%eax
imul   %eax,%ecx
shr    $0xc,%ecx
lea    0x65ae(%rip),%rax        # 2c38c <png_sRGB_base>
movzwl (%rax,%rdx,2),%eax
add    %ecx,%eax
shr    $0x8,%eax
leaveq 
retq   
nopl   0x0(%rax)

0000000000025df0 <png_write_image_8bit>:
push   %rbp
mov    %rsp,%rbp
sub    $0x70,%rsp
mov    %rbx,-0x48(%rbp)
mov    %r12,-0x50(%rbp)
mov    %r13,-0x58(%rbp)
mov    %r14,-0x60(%rbp)
mov    %r15,-0x68(%rbp)
mov    %rdi,-0x28(%rbp)
mov    (%rdi),%rdx
mov    (%rdx),%rax
mov    (%rax),%rsi
mov    %rsi,-0x30(%rbp)
mov    0x28(%rdi),%r12
mov    0x38(%rdi),%rbx
mov    0x10(%rdx),%r8d
mov    $0x1,%r13d
mov    0x14(%rdx),%eax
mov    %rax,%rcx
and    $0x2,%ecx
test   %ecx,%ecx
jne    25e43 <png_write_image_8bit+0x53>
mov    $0x2,%ecx
jmp    25e4e <png_write_image_8bit+0x5e>
mov    $0x4,%ecx
mov    $0x3,%r13d
mov    %r13,-0x40(%rbp)
mov    %rax,%rdi
and    $0x1,%edi
test   %edi,%edi
jne    25e87 <png_write_image_8bit+0x97>
lea    0x6929(%rip),%r10        # 2c78c <png_sRGB_delta>
mov    %r10,-0x40(%rbp)
lea    0x651e(%rip),%r9        # 2c38c <png_sRGB_base>
mov    %r9,-0x38(%rbp)
imul   0xc(%rdx),%r13d
mov    %r13d,%eax
lea    (%rbx,%rax,1),%r13
mov    %rsi,%rdi
mov    -0x28(%rbp),%r14
jmp    25eff <png_write_image_8bit+0x10f>
and    $0x20,%eax
test   %eax,%eax
jne    25f1f <png_write_image_8bit+0x12f>
mov    %r13,%rax
jmpq   25f2e <png_write_image_8bit+0x13e>
movzwl (%rdx),%eax
mov    %rax,%rcx
shl    $0x8,%ecx
sub    %eax,%ecx
mov    %rcx,%rax
shr    $0xf,%eax
mov    %eax,%r11d
movzbl (%r11,%r10,1),%eax
and    $0x7fff,%ecx
imul   %ecx,%eax
shr    $0xc,%eax
movzwl (%r9,%r11,2),%ecx
add    %ecx,%eax
shr    $0x8,%eax
mov    %al,(%rsi)
add    $0x2,%rdx
add    $0x1,%rsi
cmp    %r13,%rsi
jb     25e9a <png_write_image_8bit+0xaa>
mov    %r8,%r15
mov    %rbx,%rsi
callq  5380 <png_write_row@plt>
lea    -0x1(%r15),%r8d
movzwl 0x30(%r14),%eax
and    $0xfffffffffffffffe,%rax
add    %rax,%r12
mov    -0x30(%rbp),%rdi
mov    -0x38(%rbp),%r9
mov    -0x40(%rbp),%r10
test   %r8d,%r8d
jne    25f4f <png_write_image_8bit+0x15f>
mov    -0x68(%rbp),%r15
mov    -0x60(%rbp),%r14
mov    -0x58(%rbp),%r13
mov    -0x50(%rbp),%r12
mov    -0x48(%rbp),%rbx
mov    $0x1,%eax
leaveq 
retq   
mov    $0xffffffffffffffff,%rax
add    $0x1,%rbx
add    $0x2,%r12
mov    %rbx,-0x20(%rbp)
movslq %eax,%rax
mov    %rax,-0x18(%rbp)
imul   0xc(%rdx),%ecx
mov    %ecx,%ecx
lea    (%rbx,%rcx,1),%r15
mov    %r15,-0x38(%rbp)
xor    %r14d,%r14d
jmpq   25fd1 <png_write_image_8bit+0x1e1>
mov    %rbx,%rsi
mov    %r12,%rdx
jmpq   25ed3 <png_write_image_8bit+0xe3>
add    $0x2,%r12
add    $0x1,%rbx
movzwl (%r12),%edi
mov    %r15,%rsi
mov    %r14,%rdx
callq  25d80 <png_unpremultiply>
mov    %al,(%rbx)
add    $0xffffffff,%r13d
test   %r13d,%r13d
jg     25f5a <png_write_image_8bit+0x16a>
add    $0x4,%r12
add    $0x2,%rbx
xor    %r14d,%r14d
mov    -0x40(%rbp),%r13
mov    -0x18(%rbp),%rax
mov    -0x38(%rbp),%r15
cmp    %r15,%rbx
jb     25ff1 <png_write_image_8bit+0x201>
mov    %rax,%r12
mov    -0x28(%rbp),%rbx
mov    0x38(%rbx),%rsi
mov    -0x30(%rbp),%rdi
callq  5380 <png_write_row@plt>
mov    -0x10(%rbp),%rax
lea    -0x1(%rax),%r8d
movzwl 0x30(%rbx),%eax
and    $0xfffffffffffffffe,%rax
mov    -0x8(%rbp),%rcx
add    %rcx,%rax
mov    %r12,%rcx
mov    %rax,%r12
mov    %rcx,%rax
mov    -0x20(%rbp),%rbx
test   %r8d,%r8d
jne    26032 <png_write_image_8bit+0x242>
mov    -0x68(%rbp),%r15
mov    -0x60(%rbp),%r14
mov    -0x58(%rbp),%r13
mov    -0x50(%rbp),%r12
mov    -0x48(%rbp),%rbx
mov    $0x1,%eax
leaveq 
retq   
movzwl (%r12,%rax,2),%r15d
mov    %r15,%rcx
shl    $0x8,%ecx
sub    %r15d,%ecx
add    $0x807f,%ecx
shr    $0x10,%ecx
mov    %cl,(%rbx,%rax,1)
test   %cl,%cl
je     25f62 <png_write_image_8bit+0x172>
cmp    $0xfe,%cl
ja     25f62 <png_write_image_8bit+0x172>
mov    %r15,%rax
shr    %eax
add    $0x7f7f8080,%eax
cltd   
idiv   %r15d
mov    %rax,%r14
jmpq   25f62 <png_write_image_8bit+0x172>
mov    %r8,-0x10(%rbp)
mov    %r12,-0x8(%rbp)
jmpq   25f94 <png_write_image_8bit+0x1a4>
nop

0000000000026040 <png_image_set_PLTE>:
push   %rbp
mov    %rsp,%rbp
sub    $0x4d0,%rsp
mov    %r15,-0x30(%rbp)
mov    %rbx,-0x10(%rbp)
mov    %r12,-0x18(%rbp)
mov    %r13,-0x20(%rbp)
mov    %r14,-0x28(%rbp)
mov    0x18(%rdi),%rax
mov    %rax,-0xc0(%rbp)
mov    $0x100,%edx
mov    (%rdi),%rsi
mov    %rsi,-0x8(%rbp)
mov    0x1c(%rsi),%r12d
cmp    $0x100,%r12d
jbe    26086 <png_image_set_PLTE+0x46>
mov    %rdx,%r12
xor    %r14d,%r14d
mov    %r14,-0xa0(%rbp)
mov    $0x1,%eax
mov    $0x4,%ecx
mov    $0x2,%ebx
mov    0x14(%rsi),%r15d
mov    %r15,%rsi
and    $0x20,%esi
test   %esi,%esi
jne    260e5 <png_image_set_PLTE+0xa5>
mov    %rax,%r8
mov    %rbx,%rdi
mov    %r14,%rsi
mov    %rsi,%r13
mov    %rdi,-0x68(%rbp)
mov    %r8,-0x90(%rbp)
mov    %rax,-0x80(%rbp)
mov    %rsi,-0x70(%rbp)
mov    %r13,-0xb8(%rbp)
mov    %r15,%rax
and    $0x10,%eax
test   %eax,%eax
jne    26101 <png_image_set_PLTE+0xc1>
mov    %rcx,%rax
mov    %r14,%rcx
jmp    2610d <png_image_set_PLTE+0xcd>
mov    %r15,%rsi
and    $0x1,%esi
test   %esi,%esi
jne    261c7 <png_image_set_PLTE+0x187>
mov    %rax,%r8
mov    %rbx,%rdi
mov    %r14,%rsi
mov    %rsi,%r13
jmp    260b9 <png_image_set_PLTE+0x79>
mov    %r14,%rax
mov    %rbx,%r14
mov    %rax,%rbx
mov    %rbx,%rax
mov    %rcx,-0x48(%rbp)
mov    %rax,-0x50(%rbp)
lea    -0x1d0(%rbp),%rdi
mov    $0xff,%esi
callq  5350 <memset@plt>
lea    -0x4d0(%rbp),%rdi
mov    $0x300,%edx
xor    %esi,%esi
callq  5350 <memset@plt>
lea    0x624c(%rip),%rax        # 2c38c <png_sRGB_base>
mov    %rax,-0x60(%rbp)
lea    0x6641(%rip),%rax        # 2c78c <png_sRGB_delta>
mov    %rax,-0x58(%rbp)
lea    0x0(%r13,%r14,1),%eax
movslq %eax,%rax
mov    %rax,-0x78(%rbp)
lea    0x0(%r13,%rbx,1),%eax
movslq %eax,%rsi
mov    %rsi,-0x88(%rbp)
mov    %r15,%r8
and    $0x3,%r8d
mov    %r8,-0xc8(%rbp)
lea    0x1(%r8),%r14d
mov    %r14,-0x40(%rbp)
mov    %r15,%rcx
and    $0x4,%ecx
mov    %rcx,-0xd0(%rbp)
mov    %r14,%r11
and    $0x1,%r11d
mov    %r11,-0xb0(%rbp)
mov    $0x3,%eax
mov    %rax,-0x98(%rbp)
xor    %ebx,%ebx
mov    -0x80(%rbp),%rdx
mov    -0x90(%rbp),%rdi
mov    -0x50(%rbp),%r10
mov    -0xc0(%rbp),%r15
mov    %rbx,%rax
mov    %rax,%r9
jmp    26242 <png_image_set_PLTE+0x202>
mov    %rax,%r13
mov    %rcx,%rdi
mov    %rbx,%rax
mov    %rax,%rsi
mov    %r14,%r8
jmpq   260b9 <png_image_set_PLTE+0x79>
pushq  -0xa0(%rbp)
popq   -0xa8(%rbp)
mov    -0xa8(%rbp),%rdi
movzbl (%rax,%rdi,1),%edi
mov    %dil,-0x1d0(%rbp,%rcx,1)
cmp    $0xfe,%dil
ja     26203 <png_image_set_PLTE+0x1c3>
mov    %r9,%rbx
movzbl (%rax,%rsi,1),%edi
lea    (%rcx,%rcx,2),%rcx
mov    %dil,-0x4ce(%rbp,%rcx,1)
movzbl (%rax,%rdx,1),%edi
mov    %dil,-0x4cf(%rbp,%rcx,1)
mov    -0x78(%rbp),%rdi
movzbl (%rax,%rdi,1),%eax
mov    %al,-0x4d0(%rbp,%rcx,1)
mov    %r9,%rax
mov    -0xd0(%rbp),%rcx
xor    %r9d,%r9d
mov    -0x90(%rbp),%rdi
cmp    %r12d,%eax
jl     262a1 <png_image_set_PLTE+0x261>
mov    -0x8(%rbp),%r14
mov    (%r14),%rax
mov    (%rax),%rdi
mov    0x8(%rax),%rsi
mov    %r9,%r13
mov    %r12,%rcx
lea    -0x4d0(%rbp),%rdx
callq  5530 <png_set_PLTE@plt>
test   %ebx,%ebx
jle    26287 <png_image_set_PLTE+0x247>
mov    (%r14),%rax
mov    (%rax),%rdi
mov    0x8(%rax),%rsi
mov    %rbx,%rcx
mov    %r13,%r8
lea    -0x1d0(%rbp),%rdx
callq  54f0 <png_set_tRNS@plt>
mov    %r12d,0x1c(%r14)
mov    -0x28(%rbp),%r14
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
mov    -0x10(%rbp),%rbx
mov    -0x30(%rbp),%r15
leaveq 
retq   
test   %ecx,%ecx
movslq %eax,%rcx
lea    0x1(%rax),%r9d
jne    262e6 <png_image_set_PLTE+0x2a6>
imul   %r14d,%eax
cmp    $0x2,%r14d
mov    %eax,%eax
lea    (%rax,%r15,1),%rax
jbe    263b9 <png_image_set_PLTE+0x379>
cmp    $0x3,%r14d
je     26203 <png_image_set_PLTE+0x1c3>
cmp    $0x4,%r14d
je     263de <png_image_set_PLTE+0x39e>
mov    %r9,%rax
mov    -0xd0(%rbp),%rcx
xor    %r9d,%r9d
jmpq   26242 <png_image_set_PLTE+0x202>
imul   %r14d,%eax
test   %r11d,%r11d
mov    %eax,%eax
lea    (%r15,%rax,2),%rax
jne    263f8 <png_image_set_PLTE+0x3b8>
test   %r13d,%r13d
jle    26301 <png_image_set_PLTE+0x2c1>
xor    %r8d,%r8d
mov    %r8d,%edx
movzwl (%rax,%rdx,2),%r13d
mov    %r13,%rdx
shl    $0x8,%edx
sub    %r13d,%edx
lea    0x807f(%rdx),%edi
shr    $0x10,%edi
test   %dil,%dil
jne    2646c <png_image_set_PLTE+0x42c>
xor    %r15d,%r15d
cmp    $0xfe,%dil
mov    %dil,-0x1d0(%rbp,%rcx,1)
ja     26338 <png_image_set_PLTE+0x2f8>
mov    %r9,%rbx
cmp    $0x2,%r14d
ja     2647e <png_image_set_PLTE+0x43e>
mov    -0x70(%rbp),%rdx
movzwl (%rax,%rdx,1),%edi
mov    %r15,%rdx
mov    %r9,%r15
mov    %r13,%rsi
mov    %rcx,%r13
callq  25d80 <png_unpremultiply>
lea    0x0(%r13,%r13,2),%rcx
mov    %al,-0x4cf(%rbp,%rcx,1)
mov    %al,-0x4d0(%rbp,%rcx,1)
mov    %al,-0x4ce(%rbp,%rcx,1)
mov    %r15,%rax
mov    -0x88(%rbp),%rsi
mov    -0xb0(%rbp),%r11
mov    -0xc8(%rbp),%r8
mov    -0xb8(%rbp),%r13
mov    -0xd0(%rbp),%rcx
xor    %r9d,%r9d
mov    -0x80(%rbp),%rdx
mov    -0x90(%rbp),%rdi
mov    -0x50(%rbp),%r10
mov    -0xc0(%rbp),%r15
jmpq   26242 <png_image_set_PLTE+0x202>
test   %r8d,%r8d
je     26547 <png_image_set_PLTE+0x507>
cmp    $0x2,%r14d
je     2652f <png_image_set_PLTE+0x4ef>
mov    %r9,%rax
mov    -0xd0(%rbp),%rcx
xor    %r9d,%r9d
jmpq   26242 <png_image_set_PLTE+0x202>
test   %r13d,%r13d
jg     261db <png_image_set_PLTE+0x19b>
pushq  -0x98(%rbp)
popq   -0xa8(%rbp)
jmpq   261e7 <png_image_set_PLTE+0x1a7>
cmp    $0x2,%r14d
ja     26577 <png_image_set_PLTE+0x537>
movzwl (%rax),%edx
mov    %rdx,%rax
shl    $0x8,%eax
sub    %edx,%eax
mov    %rax,%rdx
shr    $0xf,%edx
movslq %edx,%rdi
mov    -0x58(%rbp),%rdx
movzbl (%rdi,%rdx,1),%edx
and    $0x7fff,%eax
imul   %eax,%edx
shr    $0xc,%edx
mov    -0x60(%rbp),%rax
movzwl (%rax,%rdi,2),%eax
add    %edx,%eax
shr    $0x8,%eax
lea    (%rcx,%rcx,2),%rcx
mov    %al,-0x4cf(%rbp,%rcx,1)
mov    %al,-0x4d0(%rbp,%rcx,1)
mov    %al,-0x4ce(%rbp,%rcx,1)
mov    %r9,%rax
mov    -0xd0(%rbp),%rcx
xor    %r9d,%r9d
mov    -0x80(%rbp),%rdx
mov    -0x90(%rbp),%rdi
jmpq   26242 <png_image_set_PLTE+0x202>
cmp    $0xfe,%dil
jbe    2665f <png_image_set_PLTE+0x61f>
xor    %r15d,%r15d
jmpq   26327 <png_image_set_PLTE+0x2e7>
movzwl (%rax,%rsi,2),%edi
mov    %r13,%rsi
mov    %r15,%rdx
mov    %rbx,-0x38(%rbp)
mov    %r9,-0xa8(%rbp)
mov    %rcx,%rbx
mov    %rax,%r14
callq  25d80 <png_unpremultiply>
lea    (%rbx,%rbx,2),%rbx
mov    %al,-0x4ce(%rbp,%rbx,1)
mov    -0x68(%rbp),%rax
movzwl (%r14,%rax,1),%edi
mov    %r13,%rsi
mov    %r15,%rdx
callq  25d80 <png_unpremultiply>
mov    %al,-0x4cf(%rbp,%rbx,1)
mov    -0x78(%rbp),%rax
movzwl (%r14,%rax,2),%edi
mov    %r15,%rdx
mov    %r13,%rsi
callq  25d80 <png_unpremultiply>
mov    %al,-0x4d0(%rbp,%rbx,1)
mov    -0x40(%rbp),%r14
mov    -0xa8(%rbp),%rax
mov    -0x38(%rbp),%rbx
mov    -0x88(%rbp),%rsi
mov    -0xb0(%rbp),%r11
mov    -0xc8(%rbp),%r8
mov    -0xb8(%rbp),%r13
mov    -0xd0(%rbp),%rcx
xor    %r9d,%r9d
mov    -0x80(%rbp),%rdx
mov    -0x90(%rbp),%rdi
mov    -0x50(%rbp),%r10
mov    -0xc0(%rbp),%r15
jmpq   26242 <png_image_set_PLTE+0x202>
movzbl (%rdi,%rax,1),%edx
mov    %dl,-0x1d0(%rbp,%rcx,1)
cmp    $0xfe,%dl
jbe    2667f <png_image_set_PLTE+0x63f>
mov    -0x80(%rbp),%rdx
movzbl (%rax,%r13,1),%eax
lea    (%rcx,%rcx,2),%rcx
mov    %al,-0x4cf(%rbp,%rcx,1)
mov    %al,-0x4d0(%rbp,%rcx,1)
mov    %al,-0x4ce(%rbp,%rcx,1)
mov    %r9,%rax
mov    -0xd0(%rbp),%rcx
xor    %r9d,%r9d
jmpq   26242 <png_image_set_PLTE+0x202>
movzwl (%rax,%r10,1),%esi
mov    %rsi,%rdx
shl    $0x8,%edx
sub    %esi,%edx
mov    %rdx,%rsi
shr    $0xf,%esi
movslq %esi,%rdi
mov    -0x58(%rbp),%r10
movzbl (%rdi,%r10,1),%esi
and    $0x7fff,%edx
imul   %edx,%esi
shr    $0xc,%esi
mov    -0x60(%rbp),%r13
movzwl 0x0(%r13,%rdi,2),%edx
add    %esi,%edx
shr    $0x8,%edx
lea    (%rcx,%rcx,2),%rdi
mov    %dl,-0x4ce(%rbp,%rdi,1)
movzwl 0x2(%rax),%ecx
mov    %rcx,%rdx
shl    $0x8,%edx
sub    %ecx,%edx
mov    %rdx,%rcx
shr    $0xf,%ecx
movslq %ecx,%rsi
movzbl (%rsi,%r10,1),%ecx
and    $0x7fff,%edx
imul   %edx,%ecx
shr    $0xc,%ecx
movzwl 0x0(%r13,%rsi,2),%edx
add    %edx,%ecx
shr    $0x8,%ecx
mov    %cl,-0x4cf(%rbp,%rdi,1)
mov    -0x48(%rbp),%rcx
movzwl (%rax,%rcx,1),%eax
mov    %rax,%rcx
shl    $0x8,%ecx
sub    %eax,%ecx
mov    %rcx,%rax
shr    $0xf,%eax
movslq %eax,%rdx
movzbl (%rdx,%r10,1),%eax
and    $0x7fff,%ecx
imul   %ecx,%eax
shr    $0xc,%eax
movzwl 0x0(%r13,%rdx,2),%ecx
add    %ecx,%eax
shr    $0x8,%eax
mov    %al,-0x4d0(%rbp,%rdi,1)
mov    %r9,%rax
mov    -0x88(%rbp),%rsi
mov    -0xb8(%rbp),%r13
mov    -0xd0(%rbp),%rcx
xor    %r9d,%r9d
mov    -0x80(%rbp),%rdx
mov    -0x90(%rbp),%rdi
mov    -0x50(%rbp),%r10
jmpq   26242 <png_image_set_PLTE+0x202>
mov    %r13,%rdx
shr    %edx
add    $0x7f7f8080,%edx
mov    %rax,%r8
mov    %rdx,%rax
cltd   
idiv   %r13d
mov    %rax,%r15
mov    %r8,%rax
jmpq   26327 <png_image_set_PLTE+0x2e7>
mov    -0x80(%rbp),%rdx
mov    %r9,%rbx
jmpq   26547 <png_image_set_PLTE+0x507>
nopl   0x0(%rax,%rax,1)

0000000000026690 <png_image_write_main>:
push   %rbp
mov    %rsp,%rbp
sub    $0x70,%rsp
mov    %r14,-0x20(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r12,-0x10(%rbp)
mov    %rbx,-0x8(%rbp)
mov    %r15,-0x28(%rbp)
mov    (%rdi),%r12
mov    (%r12),%rcx
mov    (%rcx),%rax
mov    %rax,-0x60(%rbp)
mov    0x8(%rcx),%rcx
mov    %rcx,-0x68(%rbp)
xor    %esi,%esi
mov    %rsi,-0x58(%rbp)
mov    $0x1,%r14d
mov    %r14,-0x50(%rbp)
mov    0x14(%r12),%ebx
mov    %rbx,%r15
and    $0x8,%r15d
test   %r15d,%r15d
jle    26744 <png_image_write_main+0xb4>
mov    %rsi,%rdx
mov    %r14,%rcx
mov    %rdx,-0x40(%rbp)
test   %rcx,%rcx
je     26756 <png_image_write_main+0xc6>
mov    %rsi,%rcx
mov    %rcx,-0x30(%rbp)
test   %edx,%edx
jg     26765 <png_image_write_main+0xd5>
mov    %rsi,%r14
mov    %rdi,%r13
mov    %rax,%rdi
callq  5050 <png_set_benign_errors@plt>
mov    0x14(%r12),%eax
mov    %rax,%rcx
and    $0x8,%ecx
test   %ecx,%ecx
je     26772 <png_image_write_main+0xe2>
mov    $0x1,%ecx
mov    $0x7fffffff,%eax
xor    %edx,%edx
mov    0xc(%r12),%esi
div    %ecx
cmp    %esi,%eax
jae    2677a <png_image_write_main+0xea>
mov    (%r12),%rax
mov    (%rax),%rdi
lea    0x95a9(%rip),%rsi        # 2fce8 <fourbppswaptable+0x69c>
callq  5470 <png_error@plt>
mov    %rbx,%rcx
and    $0x4,%ecx
test   %ecx,%ecx
jne    267ad <png_image_write_main+0x11d>
mov    %rsi,%rcx
mov    %rcx,%rdx
jmp    266e9 <png_image_write_main+0x59>
mov    %rbx,%rcx
and    $0x1,%ecx
test   %ecx,%ecx
jne    267b8 <png_image_write_main+0x128>
mov    %rsi,%rcx
jmp    266f5 <png_image_write_main+0x65>
movslq 0x20(%rdi),%rcx
test   %ecx,%ecx
je     26700 <png_image_write_main+0x70>
mov    %rsi,%r14
jmp    26700 <png_image_write_main+0x70>
and    $0x3,%eax
lea    0x1(%rax),%ecx
jmp    2671f <png_image_write_main+0x8f>
imul   0xc(%r12),%ecx
movslq 0x10(%r13),%rax
test   %eax,%eax
jne    2678c <png_image_write_main+0xfc>
mov    %ecx,0x10(%r13)
movslq 0x10(%r13),%rax
test   %eax,%eax
jns    26796 <png_image_write_main+0x106>
neg    %eax
cmp    %eax,%ecx
jbe    267c0 <png_image_write_main+0x130>
mov    (%r12),%rax
mov    (%rax),%rdi
lea    0x9522(%rip),%rsi        # 2fcca <fourbppswaptable+0x67e>
callq  5470 <png_error@plt>
mov    %rsi,%rcx
mov    %r14,%rdx
jmpq   266e9 <png_image_write_main+0x59>
mov    %r14,%rcx
jmpq   266f5 <png_image_write_main+0x65>
mov    $0xffffffff,%eax
xor    %edx,%edx
mov    0x10(%r12),%esi
div    %ecx
cmp    %esi,%eax
jb     2689a <png_image_write_main+0x20a>
mov    $0x3,%r9d
mov    $0x8,%r8d
mov    $0x4,%eax
mov    $0x2,%esi
test   %r15d,%r15d
jne    268ad <png_image_write_main+0x21d>
mov    0xc(%r12),%edx
mov    0x10(%r12),%ecx
test   %r14d,%r14d
jle    2680a <png_image_write_main+0x17a>
mov    $0x10,%r8d
mov    %rbx,%rdi
and    $0x2,%edi
test   %edi,%edi
jne    26816 <png_image_write_main+0x186>
xor    %esi,%esi
mov    %rbx,%rdi
and    $0x1,%edi
test   %edi,%edi
jne    26822 <png_image_write_main+0x192>
xor    %eax,%eax
sub    $0x10,%rsp
movl   $0x0,(%rsp)
movl   $0x0,0x8(%rsp)
movl   $0x0,0x10(%rsp)
lea    (%rax,%rsi,1),%r9d
mov    -0x60(%rbp),%rax
mov    %rax,%rdi
mov    -0x68(%rbp),%r10
mov    %r10,%rsi
mov    %r15,-0x48(%rbp)
mov    %r13,-0x38(%rbp)
mov    %r10,%r13
mov    %rax,%r15
callq  5460 <png_set_IHDR@plt>
add    $0x10,%rsp
mov    %r13,%rcx
mov    -0x38(%rbp),%r13
test   %r14d,%r14d
jg     268cd <png_image_write_main+0x23d>
mov    0x18(%r12),%eax
and    $0x1,%eax
test   %eax,%eax
je     268f8 <png_image_write_main+0x268>
mov    $0xb18f,%edx
mov    %r15,%rdi
mov    %rcx,%rsi
mov    %r14,-0x38(%rbp)
mov    %rcx,%r14
callq  5290 <png_set_gAMA_fixed@plt>
jmpq   2695c <png_image_write_main+0x2cc>
mov    (%r12),%rax
mov    (%rax),%rdi
lea    0x940b(%rip),%rsi        # 2fcb3 <fourbppswaptable+0x667>
callq  5470 <png_error@plt>
mov    0x18(%r13),%rcx
test   %rcx,%rcx
jne    2698b <png_image_write_main+0x2fb>
mov    (%r12),%rax
mov    (%rax),%rdi
lea    0x943b(%rip),%rsi        # 2fd03 <fourbppswaptable+0x6b7>
callq  5470 <png_error@plt>
mov    $0x186a0,%edx
mov    %r15,%rdi
mov    %rcx,%rsi
mov    %r14,-0x38(%rbp)
mov    %rcx,%r14
callq  5290 <png_set_gAMA_fixed@plt>
mov    0x18(%r12),%eax
and    $0x1,%eax
test   %eax,%eax
je     2690e <png_image_write_main+0x27e>
pushq  -0x50(%rbp)
popq   -0x58(%rbp)
jmp    2695c <png_image_write_main+0x2cc>
mov    %r15,%rdi
mov    %rcx,%rsi
xor    %edx,%edx
mov    %r14,-0x38(%rbp)
mov    %rcx,%r14
callq  50e0 <png_set_sRGB@plt>
jmp    2695c <png_image_write_main+0x2cc>
sub    $0x20,%rsp
movl   $0x7530,(%rsp)
movl   $0xea60,0x8(%rsp)
movl   $0x3a98,0x10(%rsp)
movl   $0x1770,0x18(%rsp)
mov    $0x7a26,%edx
mov    $0x8084,%ecx
mov    $0xfa00,%r8d
mov    $0x80e8,%r9d
mov    %r15,%rdi
mov    %r14,%rsi
callq  5250 <png_set_cHRM_fixed@plt>
add    $0x20,%rsp
pushq  -0x50(%rbp)
popq   -0x58(%rbp)
mov    %r15,%rdi
mov    %r14,%rsi
callq  5340 <png_write_info@plt>
mov    -0x58(%rbp),%rax
test   %rax,%rax
je     26978 <png_image_write_main+0x2e8>
mov    %r15,%rdi
callq  51e0 <png_set_swap@plt>
mov    %rbx,%rax
and    $0x10,%eax
test   %eax,%eax
jne    269ff <png_image_write_main+0x36f>
mov    -0x48(%rbp),%rax
jmpq   26a0e <png_image_write_main+0x37e>
mov    0x1c(%r12),%edi
test   %edi,%edi
je     268ba <png_image_write_main+0x22a>
mov    0xc(%r12),%edx
mov    0x10(%r12),%ecx
cmp    $0x10,%edi
jbe    26ac6 <png_image_write_main+0x436>
sub    $0x10,%rsp
movl   $0x0,(%rsp)
movl   $0x0,0x8(%rsp)
movl   $0x0,0x10(%rsp)
mov    -0x60(%rbp),%rax
mov    %rax,%rdi
mov    -0x68(%rbp),%r10
mov    %r10,%rsi
mov    %r15,-0x48(%rbp)
mov    %rbx,-0x60(%rbp)
mov    %r10,%rbx
mov    %rax,%r15
callq  5460 <png_set_IHDR@plt>
add    $0x10,%rsp
mov    %r13,%rdi
callq  26040 <png_image_set_PLTE>
mov    %rbx,%rcx
mov    -0x60(%rbp),%rbx
jmpq   2686d <png_image_write_main+0x1dd>
mov    -0x48(%rbp),%rax
test   %eax,%eax
je     26ad7 <png_image_write_main+0x447>
and    $0xffffffef,%ebx
mov    %rbx,%rcx
and    $0x20,%ecx
test   %ecx,%ecx
je     26a23 <png_image_write_main+0x393>
test   %eax,%eax
je     26afc <png_image_write_main+0x46c>
and    $0xffffffdf,%ebx
test   %eax,%eax
jg     26b21 <png_image_write_main+0x491>
and    $0xfffffff0,%ebx
test   %ebx,%ebx
jne    26b46 <png_image_write_main+0x4b6>
mov    -0x40(%rbp),%rbx
test   %ebx,%ebx
mov    0x8(%r13),%rdx
movslq 0x10(%r13),%rcx
jle    26a49 <png_image_write_main+0x3b9>
add    %rcx,%rcx
test   %rcx,%rcx
jns    26a65 <png_image_write_main+0x3d5>
mov    %rcx,%rsi
neg    %rsi
mov    0x10(%r12),%edi
add    $0xffffffff,%edi
mov    %edi,%edi
imul   %rdi,%rsi
add    %rsi,%rdx
mov    %rdx,0x28(%r13)
mov    %rcx,0x30(%r13)
mov    0x18(%r12),%ecx
and    $0x2,%ecx
test   %ecx,%ecx
je     26aa1 <png_image_write_main+0x411>
xor    %esi,%esi
mov    %rsi,%rdx
mov    %r15,%rdi
mov    %r12,-0x68(%rbp)
mov    %rax,%r12
callq  53e0 <png_set_filter@plt>
mov    %r15,%rdi
mov    $0x3,%esi
callq  5650 <png_set_compression_level@plt>
mov    %r12,%rax
mov    -0x68(%rbp),%r12
test   %ebx,%ebx
jg     26b55 <png_image_write_main+0x4c5>
test   %eax,%eax
je     26ba0 <png_image_write_main+0x510>
mov    0x28(%r13),%rax
mov    0x30(%r13),%r13
mov    0x10(%r12),%ebx
mov    %rax,%r12
jmpq   26bbe <png_image_write_main+0x52e>
cmp    $0x4,%edi
jbe    26be8 <png_image_write_main+0x558>
mov    %rax,%r8
jmpq   269ab <png_image_write_main+0x31b>
mov    %rbx,%rcx
and    $0x2,%ecx
test   %ecx,%ecx
je     26a0b <png_image_write_main+0x37b>
mov    %rax,%r14
mov    %r15,%rdi
callq  5860 <png_set_bgr@plt>
mov    %r14,%rax
mov    -0x68(%rbp),%r14
jmpq   26a0b <png_image_write_main+0x37b>
mov    %rbx,%rcx
and    $0x1,%ecx
test   %ecx,%ecx
je     26a20 <png_image_write_main+0x390>
mov    %rax,%r14
mov    %r15,%rdi
callq  50d0 <png_set_swap_alpha@plt>
mov    %r14,%rax
mov    -0x68(%rbp),%r14
jmpq   26a20 <png_image_write_main+0x390>
mov    0x1c(%r12),%ecx
cmp    $0x10,%ecx
ja     26a2b <png_image_write_main+0x39b>
mov    %rax,%r14
mov    %r15,%rdi
callq  5580 <png_set_packing@plt>
mov    %r14,%rax
mov    -0x68(%rbp),%r14
jmpq   26a2b <png_image_write_main+0x39b>
mov    %r15,%rdi
lea    0x91d7(%rip),%rsi        # 2fd27 <fourbppswaptable+0x6db>
callq  5470 <png_error@plt>
mov    -0x30(%rbp),%rcx
test   %ecx,%ecx
jle    26aa9 <png_image_write_main+0x419>
mov    %r15,%rdi
mov    %r14,%rsi
callq  50c0 <png_get_rowbytes@plt>
mov    %rax,%rsi
mov    %r15,%rdi
callq  5800 <png_malloc@plt>
mov    -0x38(%rbp),%rcx
test   %ecx,%ecx
mov    %rax,0x38(%r13)
jg     26bf8 <png_image_write_main+0x568>
mov    %r12,%rdi
mov    %rax,%rbx
lea    -0xda0(%rip),%rsi        # 25df0 <png_write_image_8bit>
mov    %r13,%rdx
callq  b250 <png_safe_execute>
mov    %rbx,%rsi
mov    %rax,%rbx
jmp    26c13 <png_image_write_main+0x583>
movslq 0x20(%r13),%rax
test   %eax,%eax
jne    26b61 <png_image_write_main+0x4d1>
jmpq   26ab1 <png_image_write_main+0x421>
mov    %r15,%rdi
mov    %r12,%rsi
callq  5380 <png_write_row@plt>
add    %r13,%r12
add    $0xffffffff,%ebx
test   %ebx,%ebx
jne    26bad <png_image_write_main+0x51d>
mov    %r14,%rsi
mov    %r15,%rdi
callq  53c0 <png_write_end@plt>
mov    -0x28(%rbp),%r15
mov    -0x8(%rbp),%rbx
mov    $0x1,%eax
mov    -0x10(%rbp),%r12
mov    -0x18(%rbp),%r13
mov    -0x20(%rbp),%r14
leaveq 
retq   
cmp    $0x2,%edi
ja     26c3f <png_image_write_main+0x5af>
mov    $0x1,%r8d
jmpq   269ab <png_image_write_main+0x31b>
mov    %r12,%rdi
mov    %rax,%rbx
lea    -0x1035(%rip),%rsi        # 25bd0 <png_write_image_16bit>
mov    %r13,%rdx
callq  b250 <png_safe_execute>
mov    %rbx,%rsi
mov    %rax,%rbx
movq   $0x0,0x38(%r13)
mov    %r15,%rdi
callq  5790 <png_free@plt>
test   %ebx,%ebx
jne    26bc2 <png_image_write_main+0x532>
mov    -0x28(%rbp),%r15
mov    -0x8(%rbp),%rbx
xor    %eax,%eax
mov    -0x10(%rbp),%r12
mov    -0x18(%rbp),%r13
mov    -0x20(%rbp),%r14
leaveq 
retq   
mov    %rsi,%r8
jmpq   269ab <png_image_write_main+0x31b>
nopw   0x0(%rax,%rax,1)

0000000000026c50 <image_memory_write>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    0x108(%rdi),%rcx
mov    0x50(%rcx),%r8
mov    %r8,%rax
not    %rax
cmp    %rdx,%rax
jae    26c7a <image_memory_write+0x2a>
lea    0x90de(%rip),%rsi        # 2fd53 <fourbppswaptable+0x707>
callq  5470 <png_error@plt>
test   %rdx,%rdx
jne    26c81 <image_memory_write+0x31>
leaveq 
retq   
lea    (%r8,%rdx,1),%rax
cmp    0x48(%rcx),%rax
ja     26cb3 <image_memory_write+0x63>
mov    %r8,%rdi
add    0x40(%rcx),%rdi
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rcx,%r14
mov    %rax,%r15
callq  54c0 <memcpy@plt>
mov    %r15,%rax
mov    %r14,%rcx
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
mov    %rax,0x50(%rcx)
leaveq 
retq   
nopl   0x0(%rax)

0000000000026cc0 <image_memory_flush>:
push   %rbp
mov    %rsp,%rbp
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)

0000000000026cd0 <png_image_write_memory>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x8(%rbp)
mov    (%rdi),%rax
mov    (%rax),%rax
mov    (%rax),%rax
mov    %rdi,%r15
mov    %rax,%rdi
lea    -0xa2(%rip),%rdx        # 26c50 <image_memory_write>
lea    -0x39(%rip),%rcx        # 26cc0 <image_memory_flush>
mov    %r15,%rsi
callq  5300 <png_set_write_fn@plt>
mov    %r15,%rdi
callq  26690 <png_image_write_main>
mov    -0x8(%rbp),%r15
leaveq 
retq   
nop

0000000000026d10 <png_do_write_transformations>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
test   %rdi,%rdi
jne    26d27 <png_do_write_transformations+0x17>
leaveq 
retq   
mov    0x134(%rdi),%eax
and    $0x100000,%eax
test   %eax,%eax
jne    26d6e <png_do_write_transformations+0x5e>
mov    %r14,%rax
mov    %rsi,%r14
mov    %r15,%rcx
mov    %rdi,%r15
mov    0x134(%r15),%edx
and    $0x8000,%edx
test   %edx,%edx
je     26da5 <png_do_write_transformations+0x95>
mov    0x228(%r15),%rcx
mov    0x130(%r15),%eax
and    $0x80,%eax
test   %eax,%eax
je     26d8c <png_do_write_transformations+0x7c>
xor    %edx,%edx
jmp    26d91 <png_do_write_transformations+0x81>
mov    0x118(%rdi),%rax
test   %rax,%rax
jne    26efc <png_do_write_transformations+0x1ec>
mov    %r14,%rax
mov    %rsi,%r14
mov    %r15,%rcx
mov    %rdi,%r15
jmp    26d42 <png_do_write_transformations+0x32>
mov    $0x1,%edx
lea    0x1(%rcx),%rsi
mov    %r14,%rdi
callq  23840 <png_do_strip_channel>
mov    -0x10(%rbp),%rcx
mov    -0x8(%rbp),%rax
mov    0x134(%r15),%edx
and    $0x10000,%edx
test   %edx,%edx
je     26dd1 <png_do_write_transformations+0xc1>
mov    0x228(%r15),%rsi
add    $0x1,%rsi
mov    %r14,%rdi
callq  239f0 <png_do_packswap>
mov    -0x10(%rbp),%rcx
mov    -0x8(%rbp),%rax
mov    0x134(%r15),%edx
and    $0x4,%edx
test   %edx,%edx
je     26e02 <png_do_write_transformations+0xf2>
mov    0x228(%r15),%rsi
add    $0x1,%rsi
movzbl 0x268(%r15),%edx
mov    %r14,%rdi
callq  26f40 <png_do_pack>
mov    -0x10(%rbp),%rcx
mov    -0x8(%rbp),%rax
mov    0x134(%r15),%edx
and    $0x10,%edx
test   %edx,%edx
je     26e2b <png_do_write_transformations+0x11b>
mov    0x228(%r15),%rsi
add    $0x1,%rsi
mov    %r14,%rdi
callq  239b0 <png_do_swap>
mov    -0x10(%rbp),%rcx
mov    -0x8(%rbp),%rax
mov    0x134(%r15),%edx
and    $0x8,%edx
test   %edx,%edx
je     26e5b <png_do_write_transformations+0x14b>
mov    0x228(%r15),%rsi
add    $0x1,%rsi
lea    0x2dd(%r15),%rdx
mov    %r14,%rdi
callq  27120 <png_do_shift>
mov    -0x10(%rbp),%rcx
mov    -0x8(%rbp),%rax
mov    0x134(%r15),%edx
and    $0x20000,%edx
test   %edx,%edx
je     26e87 <png_do_write_transformations+0x177>
mov    0x228(%r15),%rsi
add    $0x1,%rsi
mov    %r14,%rdi
callq  27400 <png_do_write_swap_alpha>
mov    -0x10(%rbp),%rcx
mov    -0x8(%rbp),%rax
mov    0x134(%r15),%edx
and    $0x80000,%edx
test   %edx,%edx
je     26eb3 <png_do_write_transformations+0x1a3>
mov    0x228(%r15),%rsi
add    $0x1,%rsi
mov    %r14,%rdi
callq  274f0 <png_do_write_invert_alpha>
mov    -0x10(%rbp),%rcx
mov    -0x8(%rbp),%rax
mov    0x134(%r15),%edx
and    $0x1,%edx
test   %edx,%edx
je     26ee6 <png_do_write_transformations+0x1d6>
mov    0x228(%r15),%rsi
add    $0x1,%rsi
mov    %r14,%rdi
mov    %r14,-0x8(%rbp)
mov    %rax,%r14
callq  23ae0 <png_do_bgr>
mov    %r14,%rax
mov    -0x8(%rbp),%r14
mov    -0x10(%rbp),%rcx
mov    0x134(%r15),%edx
and    $0x20,%edx
test   %edx,%edx
jne    26f1c <png_do_write_transformations+0x20c>
mov    %rax,%r14
mov    %rcx,%r15
leaveq 
retq   
mov    0x228(%rdi),%rdx
add    $0x1,%rdx
mov    %rdi,%r15
mov    %rsi,%r14
callq  *%rax
mov    -0x10(%rbp),%rcx
mov    -0x8(%rbp),%rax
jmpq   26d42 <png_do_write_transformations+0x32>
mov    0x228(%r15),%rsi
add    $0x1,%rsi
mov    %r14,%rdi
mov    %rax,%r14
mov    %rcx,%r15
callq  23a50 <png_do_invert>
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

0000000000026f40 <png_do_pack>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
movzbl 0x11(%rdi),%eax
cmp    $0x8,%al
je     26f52 <png_do_pack+0x12>
leaveq 
retq   
movzbl 0x12(%rdi),%eax
cmp    $0x1,%al
je     26f5c <png_do_pack+0x1c>
leaveq 
retq   
xor    %r8d,%r8d
cmp    $0x1,%edx
jle    26f73 <png_do_pack+0x33>
cmp    $0x2,%edx
je     26f9e <png_do_pack+0x5e>
cmp    $0x4,%edx
je     26fbd <png_do_pack+0x7d>
mov    %rdx,%rax
jmp    26f7b <png_do_pack+0x3b>
cmp    $0x1,%edx
je     26fdc <png_do_pack+0x9c>
mov    %rdx,%rax
mov    %al,0x11(%rdi)
movzbl 0x12(%rdi),%ecx
imul   %cl
mov    %al,0x13(%rdi)
cmp    $0x7,%al
ja     26ffb <png_do_pack+0xbb>
movzbl %al,%eax
mov    (%rdi),%ecx
imul   %rcx,%rax
add    $0x7,%rax
shr    $0x3,%rax
jmp    27008 <png_do_pack+0xc8>
mov    (%rdi),%r9d
mov    $0x6,%r10d
mov    %rdx,-0x18(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rsi,%r11
mov    %r8,%rax
mov    %rax,%r15
mov    %r10,%rcx
jmp    27022 <png_do_pack+0xe2>
mov    (%rdi),%r9d
mov    $0x4,%r10d
mov    %rdx,-0x18(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rsi,%r11
mov    %r8,%rax
mov    %rax,%r15
mov    %r10,%rcx
jmp    2704d <png_do_pack+0x10d>
mov    (%rdi),%r10d
mov    $0x80,%r11d
mov    %rdx,-0x18(%rbp)
mov    %r15,-0x8(%rbp)
mov    %rsi,%r9
mov    %r8,%rax
mov    %rax,%rdx
mov    %r11,%rcx
jmp    2706d <png_do_pack+0x12d>
movzbl %al,%eax
shr    $0x3,%rax
mov    (%rdi),%ecx
imul   %rcx,%rax
mov    %rax,0x8(%rdi)
leaveq 
retq   
mov    %al,(%rsi)
add    $0x1,%rsi
mov    %r8,%rax
mov    %r10,%rcx
add    $0x1,%r11
add    $0x1,%r15d
cmp    %r9d,%r15d
jb     2708b <png_do_pack+0x14b>
cmp    $0x6,%ecx
jne    270a6 <png_do_pack+0x166>
mov    -0x10(%rbp),%r15
mov    -0x18(%rbp),%rax
jmpq   26f7b <png_do_pack+0x3b>
mov    %al,(%rsi)
add    $0x1,%rsi
mov    %r8,%rax
mov    %r10,%rcx
add    $0x1,%r11
add    $0x1,%r15d
cmp    %r9d,%r15d
jb     270b5 <png_do_pack+0x175>
cmp    $0x4,%ecx
jne    270d0 <png_do_pack+0x190>
mov    -0x10(%rbp),%r15
mov    -0x18(%rbp),%rax
jmpq   26f7b <png_do_pack+0x3b>
shr    %ecx
add    $0x1,%r9
add    $0x1,%edx
cmp    %r10d,%edx
jb     270df <png_do_pack+0x19f>
cmp    $0x80,%ecx
jne    27104 <png_do_pack+0x1c4>
mov    -0x8(%rbp),%r15
mov    -0x18(%rbp),%rax
jmpq   26f7b <png_do_pack+0x3b>
movzbl (%r11),%edx
and    $0x3,%edx
shl    %cl,%edx
or     %edx,%eax
test   %ecx,%ecx
je     2700e <png_do_pack+0xce>
add    $0xfffffffe,%ecx
jmpq   2701a <png_do_pack+0xda>
mov    %al,(%rsi)
mov    -0x10(%rbp),%r15
mov    -0x18(%rbp),%rax
jmpq   26f7b <png_do_pack+0x3b>
movzbl (%r11),%edx
and    $0xf,%edx
shl    %cl,%edx
or     %edx,%eax
test   %ecx,%ecx
je     27039 <png_do_pack+0xf9>
add    $0xfffffffc,%ecx
jmpq   27045 <png_do_pack+0x105>
mov    %al,(%rsi)
mov    -0x10(%rbp),%r15
mov    -0x18(%rbp),%rax
jmpq   26f7b <png_do_pack+0x3b>
movzbl (%r9),%r15d
test   %r15b,%r15b
je     270ea <png_do_pack+0x1aa>
or     %ecx,%eax
cmp    $0x1,%ecx
jg     27064 <png_do_pack+0x124>
mov    %al,(%rsi)
add    $0x1,%rsi
mov    %r8,%rax
mov    %r11,%rcx
jmpq   27066 <png_do_pack+0x126>
mov    %al,(%rsi)
mov    -0x8(%rbp),%r15
mov    -0x18(%rbp),%rax
jmpq   26f7b <png_do_pack+0x3b>
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

0000000000027120 <png_do_shift>:
push   %rbp
mov    %rsp,%rbp
sub    $0x40,%rsp
movzbl 0x10(%rdi),%eax
cmp    $0x3,%al
jne    27132 <png_do_shift+0x12>
leaveq 
retq   
mov    $0x4,%ecx
and    $0x2,%eax
test   %eax,%eax
jg     2715f <png_do_shift+0x3f>
movzbl 0x11(%rdi),%eax
movzbl 0x3(%rdx),%r8d
sub    %r8d,%eax
mov    %eax,-0x40(%rbp)
mov    %r8d,-0x30(%rbp)
mov    $0x2,%r8d
mov    $0x1,%r9d
jmp    271a5 <png_do_shift+0x85>
movzbl 0x11(%rdi),%eax
movzbl (%rdx),%r9d
mov    %rax,%r8
sub    %r9d,%r8d
mov    %r8d,-0x40(%rbp)
mov    %r9d,-0x30(%rbp)
movzbl 0x1(%rdx),%r9d
mov    %rax,%r8
sub    %r9d,%r8d
mov    %r8d,-0x3c(%rbp)
mov    %r9d,-0x2c(%rbp)
movzbl 0x2(%rdx),%r8d
sub    %r8d,%eax
mov    %eax,-0x38(%rbp)
mov    %r8d,-0x28(%rbp)
mov    %rcx,%r8
mov    $0xc,%ecx
mov    $0x3,%r9d
movzbl 0x10(%rdi),%eax
and    $0x4,%eax
test   %eax,%eax
jle    271c8 <png_do_shift+0xa8>
movzbl 0x11(%rdi),%eax
movzbl 0x4(%rdx),%r9d
sub    %r9d,%eax
mov    %eax,-0x40(%rbp,%rcx,1)
mov    %r9d,-0x30(%rbp,%rcx,1)
mov    %r8,%r9
xor    %r8d,%r8d
movzbl 0x11(%rdi),%ecx
cmp    $0x7,%cl
jbe    271f0 <png_do_shift+0xd0>
cmp    $0x8,%cl
je     2721e <png_do_shift+0xfe>
mov    (%rdi),%edi
imul   %r9d,%edi
mov    %r13,-0x10(%rbp)
mov    %r14,-0x18(%rbp)
mov    %r15,-0x20(%rbp)
mov    %r8,%r10
jmp    2726b <png_do_shift+0x14b>
mov    0x8(%rdi),%rdi
movzbl 0x3(%rdx),%eax
cmp    $0x1,%al
je     27282 <png_do_shift+0x162>
mov    $0xff,%edx
cmp    $0x4,%cl
je     2729d <png_do_shift+0x17d>
mov    %r14,-0x8(%rbp)
mov    %r15,-0x20(%rbp)
mov    %r8,%r9
jmpq   272db <png_do_shift+0x1bb>
mov    (%rdi),%edi
imul   %r9d,%edi
mov    %r13,-0x10(%rbp)
mov    %r14,-0x18(%rbp)
mov    %r15,-0x20(%rbp)
mov    %r8,%r10
jmpq   27318 <png_do_shift+0x1f8>
mov    %r11,%r14
shl    %cl,%r14d
or     %r14d,%eax
sub    %r13d,%ecx
movslq -0x30(%rbp,%rdx,4),%r13
mov    %r13,%r14
neg    %r14d
cmp    %ecx,%r14d
jl     2732f <png_do_shift+0x20f>
mov    %rax,%rcx
shr    $0x8,%ecx
mov    %cl,(%rsi)
mov    %al,0x1(%rsi)
add    $0x1,%r10d
add    $0x2,%rsi
cmp    %edi,%r10d
jb     27350 <png_do_shift+0x230>
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
leaveq 
retq   
cmp    $0x2,%cl
jne    27200 <png_do_shift+0xe0>
mov    $0x55,%edx
mov    %r14,-0x8(%rbp)
mov    %r15,-0x20(%rbp)
mov    %r8,%r9
jmp    272db <png_do_shift+0x1bb>
cmp    $0x3,%al
je     27375 <png_do_shift+0x255>
mov    %r14,-0x8(%rbp)
mov    %r15,-0x20(%rbp)
mov    %r8,%r9
jmp    272db <png_do_shift+0x1bb>
mov    %r10,%r14
shl    %cl,%r14d
or     %r14d,%eax
sub    %r11d,%ecx
movslq -0x30(%rbp),%r11
mov    %r11,%r14
neg    %r14d
cmp    %ecx,%r14d
jl     2738a <png_do_shift+0x26a>
mov    %al,(%rsi)
add    $0x1,%r9
add    $0x1,%rsi
cmp    %rdi,%r9
jb     273b0 <png_do_shift+0x290>
mov    -0x20(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
mov    %r11,%r14
shl    %cl,%r14d
or     %r14d,%eax
sub    %r13d,%ecx
movslq -0x30(%rbp,%rdx,4),%r13
mov    %r13,%r14
neg    %r14d
cmp    %ecx,%r14d
jl     273c0 <png_do_shift+0x2a0>
mov    %al,(%rsi)
add    $0x1,%r10d
add    $0x1,%rsi
cmp    %edi,%r10d
jb     273e1 <png_do_shift+0x2c1>
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
leaveq 
retq   
test   %ecx,%ecx
jg     27238 <png_do_shift+0x118>
mov    %rcx,%r15
mov    %r15,%rcx
neg    %ecx
mov    %r11,%r14
shr    %cl,%r14d
or     %r14d,%eax
mov    %r15,%rcx
jmpq   27241 <png_do_shift+0x121>
xor    %edx,%edx
mov    %r10,%rax
div    %r9d
mov    %edx,%edx
movslq -0x40(%rbp,%rdx,4),%rcx
movzbl 0x1(%rsi),%r11d
movzbl (%rsi),%eax
shl    $0x8,%eax
add    %eax,%r11d
mov    %r8,%rax
jmpq   27244 <png_do_shift+0x124>
mov    $0x11,%edx
mov    %r14,-0x8(%rbp)
mov    %r15,-0x20(%rbp)
mov    %r8,%r9
jmpq   272db <png_do_shift+0x1bb>
test   %ecx,%ecx
jg     272b2 <png_do_shift+0x192>
mov    %rcx,%r15
mov    %r15,%rcx
neg    %ecx
mov    %r10,%r14
shr    %cl,%r14d
mov    %rdx,%rcx
and    %r14d,%ecx
or     %ecx,%eax
mov    %r15,%rcx
jmpq   272bb <png_do_shift+0x19b>
movzbl (%rsi),%r10d
movslq -0x40(%rbp),%rcx
mov    %r8,%rax
jmpq   272be <png_do_shift+0x19e>
test   %ecx,%ecx
jg     272ee <png_do_shift+0x1ce>
mov    %rcx,%r15
mov    %r15,%rcx
neg    %ecx
mov    %r11,%r14
shr    %cl,%r14d
or     %r14d,%eax
mov    %r15,%rcx
jmpq   272f7 <png_do_shift+0x1d7>
movzbl (%rsi),%r11d
xor    %edx,%edx
mov    %r10,%rax
div    %r9d
mov    %edx,%edx
movslq -0x40(%rbp,%rdx,4),%rcx
mov    %r8,%rax
jmpq   272fa <png_do_shift+0x1da>
nopl   0x0(%rax)

0000000000027400 <png_do_write_swap_alpha>:
push   %rbp
mov    %rsp,%rbp
xor    %eax,%eax
movzbl 0x10(%rdi),%ecx
cmp    $0x6,%cl
je     27416 <png_do_write_swap_alpha+0x16>
cmp    $0x4,%cl
je     27424 <png_do_write_swap_alpha+0x24>
leaveq 
retq   
movzbl 0x11(%rdi),%ecx
cmp    $0x8,%cl
je     27431 <png_do_write_swap_alpha+0x31>
mov    (%rdi),%r8d
jmp    27476 <png_do_write_swap_alpha+0x76>
movzbl 0x11(%rdi),%ecx
cmp    $0x8,%cl
je     2747d <png_do_write_swap_alpha+0x7d>
mov    (%rdi),%edx
jmp    274a5 <png_do_write_swap_alpha+0xa5>
mov    (%rdi),%edi
jmpq   274cc <png_do_write_swap_alpha+0xcc>
movzbl 0x2(%rsi),%edi
movzbl 0x3(%rsi),%edx
movzbl 0x4(%rsi),%ecx
mov    %cl,0x2(%rsi)
movzbl 0x5(%rsi),%ecx
mov    %cl,0x3(%rsi)
movzbl 0x6(%rsi),%ecx
mov    %cl,0x4(%rsi)
movzbl 0x7(%rsi),%ecx
mov    %cl,0x5(%rsi)
movzbl (%rsi),%ecx
mov    %dil,(%rsi)
mov    %cl,0x6(%rsi)
movzbl 0x1(%rsi),%ecx
mov    %dl,0x1(%rsi)
mov    %cl,0x7(%rsi)
add    $0x1,%eax
add    $0x8,%rsi
cmp    %r8d,%eax
jb     27438 <png_do_write_swap_alpha+0x38>
leaveq 
retq   
mov    (%rdi),%edi
jmp    274e5 <png_do_write_swap_alpha+0xe5>
movzbl 0x2(%rsi),%ecx
movzbl 0x3(%rsi),%r8d
movzbl (%rsi),%edi
mov    %cl,(%rsi)
mov    %dil,0x2(%rsi)
movzbl 0x1(%rsi),%ecx
mov    %r8b,0x1(%rsi)
mov    %cl,0x3(%rsi)
add    $0x1,%eax
add    $0x4,%rsi
cmp    %edx,%eax
jb     27481 <png_do_write_swap_alpha+0x81>
leaveq 
retq   
movzbl 0x1(%rsi),%edx
movzbl 0x2(%rsi),%ecx
mov    %cl,0x1(%rsi)
movzbl 0x3(%rsi),%ecx
mov    %cl,0x2(%rsi)
movzbl (%rsi),%ecx
mov    %dl,(%rsi)
mov    %cl,0x3(%rsi)
add    $0x1,%eax
add    $0x4,%rsi
cmp    %edi,%eax
jb     274ab <png_do_write_swap_alpha+0xab>
leaveq 
retq   
movzbl 0x1(%rsi),%edx
movzbl (%rsi),%ecx
mov    %dl,(%rsi)
mov    %cl,0x1(%rsi)
add    $0x1,%eax
add    $0x2,%rsi
cmp    %edi,%eax
jb     274d2 <png_do_write_swap_alpha+0xd2>
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

00000000000274f0 <png_do_write_invert_alpha>:
push   %rbp
mov    %rsp,%rbp
xor    %eax,%eax
movzbl 0x10(%rdi),%ecx
cmp    $0x6,%cl
je     27506 <png_do_write_invert_alpha+0x16>
cmp    $0x4,%cl
je     27513 <png_do_write_invert_alpha+0x23>
leaveq 
retq   
movzbl 0x11(%rdi),%ecx
cmp    $0x8,%cl
je     27520 <png_do_write_invert_alpha+0x30>
mov    (%rdi),%edx
jmp    27541 <png_do_write_invert_alpha+0x51>
movzbl 0x11(%rdi),%ecx
cmp    $0x8,%cl
je     27547 <png_do_write_invert_alpha+0x57>
mov    (%rdi),%edx
jmp    27568 <png_do_write_invert_alpha+0x78>
mov    (%rdi),%edi
lea    0x3(%rsi),%rcx
jmp    2757c <png_do_write_invert_alpha+0x8c>
movzbl 0x6(%rsi),%ecx
not    %ecx
mov    %cl,0x6(%rsi)
movzbl 0x7(%rsi),%ecx
not    %ecx
mov    %cl,0x7(%rsi)
add    $0x1,%eax
add    $0x8,%rsi
cmp    %edx,%eax
jb     27528 <png_do_write_invert_alpha+0x38>
leaveq 
retq   
mov    (%rdi),%edi
lea    0x1(%rsi),%rcx
jmp    27590 <png_do_write_invert_alpha+0xa0>
movzbl 0x2(%rsi),%ecx
not    %ecx
mov    %cl,0x2(%rsi)
movzbl 0x3(%rsi),%ecx
not    %ecx
mov    %cl,0x3(%rsi)
add    $0x1,%eax
add    $0x4,%rsi
cmp    %edx,%eax
jb     2754f <png_do_write_invert_alpha+0x5f>
leaveq 
retq   
movzbl (%rcx),%edx
not    %edx
mov    %dl,(%rcx)
add    $0x1,%eax
add    $0x4,%rcx
cmp    %edi,%eax
jb     2756e <png_do_write_invert_alpha+0x7e>
leaveq 
retq   
movzbl (%rcx),%edx
not    %edx
mov    %dl,(%rcx)
add    $0x1,%eax
add    $0x2,%rcx
cmp    %edi,%eax
jb     27582 <png_do_write_invert_alpha+0x92>
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)

00000000000275a0 <png_write_sig>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x8(%rbp)
movabs $0xa1a0a0d474e5089,%rax
mov    %rax,-0x10(%rbp)
movl   $0x12,0x46c(%rdi)
movzbl 0x26d(%rdi),%ecx
mov    $0x8,%eax
sub    %ecx,%eax
movslq %eax,%rdx
lea    -0x10(%rbp,%rcx,1),%rsi
mov    %rdi,%r15
callq  23e40 <png_write_data>
movzbl 0x26d(%r15),%eax
cmp    $0x2,%al
jbe    275f4 <png_write_sig+0x54>
mov    -0x8(%rbp),%r15
leaveq 
retq   
mov    0x12c(%r15),%eax
or     $0x1000,%eax
mov    %eax,0x12c(%r15)
mov    -0x8(%rbp),%r15
leaveq 
retq   
nopl   (%rax)

0000000000027610 <png_write_chunk>:
push   %rbp
mov    %rsp,%rbp
movzbl (%rsi),%r8d
shl    $0x18,%r8d
movzbl 0x1(%rsi),%eax
shl    $0x10,%eax
add    %eax,%r8d
movzbl 0x2(%rsi),%eax
shl    $0x8,%eax
add    %eax,%r8d
movzbl 0x3(%rsi),%eax
lea    (%r8,%rax,1),%esi
callq  29fc0 <png_write_complete_chunk>
leaveq 
retq   
nop

0000000000027640 <png_write_chunk_start>:
push   %rbp
mov    %rsp,%rbp
movzbl (%rsi),%ecx
shl    $0x18,%ecx
movzbl 0x1(%rsi),%eax
shl    $0x10,%eax
add    %eax,%ecx
movzbl 0x2(%rsi),%eax
shl    $0x8,%eax
add    %ecx,%eax
movzbl 0x3(%rsi),%ecx
lea    (%rax,%rcx,1),%esi
callq  29f30 <png_write_chunk_header>
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

0000000000027670 <png_write_chunk_data>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
test   %rdi,%rdi
jne    2767f <png_write_chunk_data+0xf>
leaveq 
retq   
test   %rsi,%rsi
jne    27686 <png_write_chunk_data+0x16>
leaveq 
retq   
test   %rdx,%rdx
jne    2768d <png_write_chunk_data+0x1d>
leaveq 
retq   
mov    %rdi,%r8
mov    %rsi,%rax
mov    %rdx,%rcx
mov    %r13,-0x8(%rbp)
mov    %r14,-0x10(%rbp)
mov    %r15,-0x18(%rbp)
mov    %rdx,%r13
mov    %rcx,%rdx
mov    %rdi,%r14
mov    %r8,%rdi
mov    %rsi,%r15
mov    %rax,%rsi
callq  23e40 <png_write_data>
mov    %r13,%rdx
mov    %r15,%rsi
mov    %r14,%rdi
callq  6db0 <png_calculate_crc>
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)

00000000000276e0 <png_write_chunk_end>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
test   %rdi,%rdi
jne    276ef <png_write_chunk_end+0xf>
leaveq 
retq   
movl   $0x82,0x46c(%rdi)
lea    -0xc(%rbp),%rax
mov    0x24c(%rdi),%esi
mov    %r15,-0x8(%rbp)
mov    %rdi,%r15
mov    %rax,%rdi
callq  5500 <png_save_uint_32@plt>
mov    %r15,%rdi
mov    $0x4,%edx
lea    -0xc(%rbp),%rsi
callq  23e40 <png_write_data>
mov    -0x8(%rbp),%r15
leaveq 
retq   
nopl   0x0(%rax)

0000000000027730 <png_save_uint_32>:
push   %rbp
mov    %rsp,%rbp
mov    %rsi,%rax
shr    $0x18,%eax
mov    %al,(%rdi)
mov    %rsi,%rax
shr    $0x10,%eax
mov    %al,0x1(%rdi)
mov    %rsi,%rax
shr    $0x8,%eax
mov    %al,0x2(%rdi)
mov    %sil,0x3(%rdi)
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nop

0000000000027760 <png_save_uint_16>:
push   %rbp
mov    %rsp,%rbp
mov    %rsi,%rax
shr    $0x8,%eax
mov    %al,(%rdi)
mov    %sil,0x1(%rdi)
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   (%rax)

0000000000027780 <png_free_buffer_list>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    (%rsi),%rax
test   %rax,%rax
jne    27792 <png_free_buffer_list+0x12>
leaveq 
retq   
movq   $0x0,(%rsi)
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rax,%rsi
mov    %rdi,%r14
jmp    277ac <png_free_buffer_list+0x2c>
mov    %r15,%rsi
mov    (%rsi),%r15
mov    %r14,%rdi
callq  5790 <png_free@plt>
test   %r15,%r15
jne    277a9 <png_free_buffer_list+0x29>
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)

00000000000277d0 <png_write_IHDR>:
push   %rbp
mov    %rsp,%rbp
sub    $0x60,%rsp
cmp    $0x6,%r8d
ja     27805 <png_write_IHDR+0x35>
mov    $0x1,%eax
xor    %r11d,%r11d
lea    0x858f(%rip),%r10        # 2fd7c <fourbppswaptable+0x730>
mov    %r15,-0x40(%rbp)
movslq (%r10,%r8,4),%r15
add    %r15,%r10
jmpq   *%r10
cmp    $0x8,%ecx
jne    27872 <png_write_IHDR+0xa2>
mov    %r11,%r10
jmp    27875 <png_write_IHDR+0xa5>
lea    0x8684(%rip),%rsi        # 2fe90 <fourbppswaptable+0x844>
callq  5470 <png_error@plt>
lea    -0x1(%rcx),%r10d
cmp    $0xf,%r10d
ja     27893 <png_write_IHDR+0xc3>
lea    0x8576(%rip),%r15        # 2fd98 <fourbppswaptable+0x74c>
movslq (%r15,%r10,4),%r10
add    %r15,%r10
jmpq   *%r10
movb   $0x1,0x26b(%rdi)
jmp    278b0 <png_write_IHDR+0xe0>
cmp    $0x8,%ecx
jne    278d5 <png_write_IHDR+0x105>
mov    %r11,%r10
jmpq   278d8 <png_write_IHDR+0x108>
cmp    $0x3,%ecx
jle    2789f <png_write_IHDR+0xcf>
cmp    $0x4,%ecx
je     278a9 <png_write_IHDR+0xd9>
cmp    $0x8,%ecx
je     278a9 <png_write_IHDR+0xd9>
lea    0x85c2(%rip),%rsi        # 2fe1e <fourbppswaptable+0x7d2>
callq  5470 <png_error@plt>
cmp    $0x8,%ecx
jne    278f6 <png_write_IHDR+0x126>
mov    %r11,%r10
jmpq   278f9 <png_write_IHDR+0x129>
mov    %rax,%r10
test   %r10d,%r10d
jg     27917 <png_write_IHDR+0x147>
mov    %r11,%r10
test   %r10d,%r10d
jg     27928 <png_write_IHDR+0x158>
movb   $0x4,0x26b(%rdi)
jmp    278b0 <png_write_IHDR+0xe0>
lea    0x853e(%rip),%rsi        # 2fdd8 <fourbppswaptable+0x78c>
callq  5470 <png_error@plt>
cmp    $0x1,%ecx
je     278a9 <png_write_IHDR+0xd9>
cmp    $0x2,%ecx
jne    27855 <png_write_IHDR+0x85>
movb   $0x1,0x26b(%rdi)
test   %r9d,%r9d
jne    27934 <png_write_IHDR+0x164>
mov    %r12,%r9
mov    %r8,%r12
mov    %r14,%r8
mov    %rsi,%r14
mov    %rbx,%r10
mov    %rcx,%rbx
mov    %r11,%r15
mov    %r13,%r11
mov    %rdx,%r13
jmpq   27983 <png_write_IHDR+0x1b3>
mov    %rax,%r10
test   %r10d,%r10d
jg     279a0 <png_write_IHDR+0x1d0>
mov    %r11,%r10
test   %r10d,%r10d
jg     279b1 <png_write_IHDR+0x1e1>
movb   $0x3,0x26b(%rdi)
jmp    278b0 <png_write_IHDR+0xe0>
mov    %rax,%r10
test   %r10d,%r10d
jg     279bd <png_write_IHDR+0x1ed>
mov    %r11,%r10
test   %r10d,%r10d
jg     279ce <png_write_IHDR+0x1fe>
movb   $0x2,0x26b(%rdi)
jmp    278b0 <png_write_IHDR+0xe0>
cmp    $0x10,%ecx
jne    279da <png_write_IHDR+0x20a>
mov    %r11,%r10
jmpq   27881 <png_write_IHDR+0xb1>
lea    0x8540(%rip),%rsi        # 2fe6f <fourbppswaptable+0x823>
callq  5470 <png_error@plt>
lea    0x8578(%rip),%r9        # 2feb3 <fourbppswaptable+0x867>
mov    %rdi,%rax
mov    %rbx,-0x10(%rbp)
mov    %r12,-0x20(%rbp)
mov    %r13,-0x30(%rbp)
mov    %r14,-0x48(%rbp)
mov    %rcx,%rbx
mov    %r8,%r12
mov    %rdx,%r13
mov    %rsi,%r14
mov    %r9,%rsi
mov    %rdi,%r15
mov    %rax,%rdi
callq  5390 <png_warning@plt>
mov    %r15,%rdi
mov    -0x48(%rbp),%r8
mov    -0x30(%rbp),%r11
mov    -0x20(%rbp),%r9
mov    -0x10(%rbp),%r10
mov    $0x1,%eax
xor    %r15d,%r15d
movslq 0x10(%rbp),%rdx
mov    0x3d8(%rdi),%ecx
and    $0x4,%ecx
test   %ecx,%ecx
jne    279e2 <png_write_IHDR+0x212>
test   %edx,%edx
jne    27a08 <png_write_IHDR+0x238>
mov    %r15,%rcx
jmpq   27a4a <png_write_IHDR+0x27a>
cmp    $0x10,%ecx
jne    27aac <png_write_IHDR+0x2dc>
mov    %r11,%r10
jmpq   278e4 <png_write_IHDR+0x114>
lea    0x8446(%rip),%rsi        # 2fdfe <fourbppswaptable+0x7b2>
callq  5470 <png_error@plt>
cmp    $0x10,%ecx
jne    27ab4 <png_write_IHDR+0x2e4>
mov    %r11,%r10
jmpq   27905 <png_write_IHDR+0x135>
lea    0x846e(%rip),%rsi        # 2fe43 <fourbppswaptable+0x7f7>
callq  5470 <png_error@plt>
mov    %rax,%r10
jmpq   27881 <png_write_IHDR+0xb1>
mov    0x12c(%rdi),%ecx
and    $0x1000,%ecx
test   %ecx,%ecx
jne    27994 <png_write_IHDR+0x1c4>
cmp    $0x2,%r12d
jne    27abc <png_write_IHDR+0x2ec>
cmp    $0x40,%edx
jne    27994 <png_write_IHDR+0x1c4>
mov    $0x40,%ecx
jmp    27a4a <png_write_IHDR+0x27a>
lea    0x84c7(%rip),%rsi        # 2fed6 <fourbppswaptable+0x88a>
mov    %rdi,%rax
mov    %r10,-0x10(%rbp)
mov    %r9,-0x20(%rbp)
mov    %r11,-0x30(%rbp)
mov    %r8,-0x48(%rbp)
mov    %rdi,%r15
mov    %rax,%rdi
callq  5390 <png_warning@plt>
mov    %r15,%rdi
mov    -0x48(%rbp),%r8
mov    -0x30(%rbp),%r11
mov    -0x20(%rbp),%r9
mov    -0x10(%rbp),%r10
mov    $0x1,%eax
xor    %ecx,%ecx
mov    %rcx,%r15
movslq 0x18(%rbp),%rdx
test   %edx,%edx
jne    27acb <png_write_IHDR+0x2fb>
mov    %bl,0x268(%rdi)
mov    %r12b,0x267(%rdi)
mov    %r15b,0x264(%rdi)
mov    %cl,0x3dc(%rdi)
movb   $0x0,0x418(%rdi)
mov    %r14d,0x1f8(%rdi)
mov    %r13d,0x1fc(%rdi)
movzbl 0x26b(%rdi),%esi
mov    %rbx,%rax
imul   %sil
mov    %al,0x26a(%rdi)
cmp    $0x7,%al
ja     27adc <png_write_IHDR+0x30c>
movzbl %al,%eax
mov    %r14d,%edx
imul   %rdx,%rax
add    $0x7,%rax
shr    $0x3,%rax
jmp    27aea <png_write_IHDR+0x31a>
mov    %rax,%r10
jmpq   278e4 <png_write_IHDR+0x114>
mov    %rax,%r10
jmpq   27905 <png_write_IHDR+0x135>
cmp    $0x6,%r12d
je     279fc <png_write_IHDR+0x22c>
jmpq   27994 <png_write_IHDR+0x1c4>
cmp    $0x1,%edx
jne    27b8f <png_write_IHDR+0x3bf>
mov    %rax,%r15
jmpq   27a52 <png_write_IHDR+0x282>
movzbl %al,%eax
shr    $0x3,%rax
mov    %r14d,%edx
imul   %rdx,%rax
mov    %rax,0x208(%rdi)
mov    %r14d,0x204(%rdi)
mov    %bl,0x269(%rdi)
mov    %sil,0x26c(%rdi)
lea    -0x55(%rbp),%rax
mov    %r10,-0x8(%rbp)
mov    %r9,-0x18(%rbp)
mov    %r11,-0x28(%rbp)
mov    %r8,-0x38(%rbp)
mov    %rdi,-0x48(%rbp)
mov    %r14,%rsi
mov    %rcx,%r14
mov    %rax,%rdi
callq  5500 <png_save_uint_32@plt>
mov    %r13,%rsi
lea    -0x51(%rbp),%rdi
callq  5500 <png_save_uint_32@plt>
mov    %bl,-0x4d(%rbp)
mov    %r12b,-0x4c(%rbp)
movb   $0x0,-0x4b(%rbp)
mov    %r14b,-0x4a(%rbp)
mov    %r15b,-0x49(%rbp)
mov    $0x49484452,%esi
mov    $0xd,%ecx
mov    -0x48(%rbp),%rbx
mov    %rbx,%rdi
lea    -0x55(%rbp),%rdx
callq  29fc0 <png_write_complete_chunk>
movzbl 0x266(%rbx),%eax
test   %al,%al
je     27be0 <png_write_IHDR+0x410>
movl   $0x1,0x12c(%rbx)
mov    -0x38(%rbp),%r14
mov    -0x28(%rbp),%r13
mov    -0x18(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x40(%rbp),%r15
leaveq 
retq   
lea    0x835e(%rip),%rsi        # 2fef4 <fourbppswaptable+0x8a8>
mov    %rdi,%rax
mov    %r10,-0x8(%rbp)
mov    %r9,-0x18(%rbp)
mov    %r11,-0x28(%rbp)
mov    %r8,-0x38(%rbp)
mov    %r13,-0x48(%rbp)
mov    %rdi,%r13
mov    %rax,%rdi
mov    %rcx,%r15
callq  5390 <png_warning@plt>
mov    %r15,%rcx
mov    %r13,%rdi
mov    -0x48(%rbp),%r13
mov    -0x38(%rbp),%r8
mov    -0x28(%rbp),%r11
mov    -0x18(%rbp),%r9
mov    -0x8(%rbp),%r10
mov    $0x1,%r15d
jmpq   27a52 <png_write_IHDR+0x282>
movzbl 0x267(%rbx),%eax
cmp    $0x3,%al
jne    27bf7 <png_write_IHDR+0x427>
movb   $0x8,0x266(%rbx)
jmpq   27b6f <png_write_IHDR+0x39f>
movzbl 0x268(%rbx),%eax
cmp    $0x7,%al
jbe    27beb <png_write_IHDR+0x41b>
movb   $0xf8,0x266(%rbx)
jmpq   27b6f <png_write_IHDR+0x39f>
xchg   %ax,%ax

0000000000027c10 <png_write_PLTE>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
movzbl 0x267(%rdi),%eax
cmp    $0x3,%al
je     27c43 <png_write_PLTE+0x33>
mov    %r13,%rax
mov    %rsi,%r13
mov    %r14,%r8
mov    %rbx,%r14
mov    %rdi,%rbx
mov    %r15,%r9
mov    %r12,%r15
mov    %rdx,%r12
mov    $0x100,%r10d
jmp    27c6b <png_write_PLTE+0x5b>
mov    %r13,%rax
mov    %rsi,%r13
mov    %r14,%r8
mov    %rbx,%r14
mov    %rdi,%rbx
mov    %r15,%r9
mov    %r12,%r15
mov    %rdx,%r12
mov    $0x1,%r10d
movzbl 0x268(%rbx),%ecx
shl    %cl,%r10d
mov    0x3d8(%rbx),%ecx
and    $0x1,%ecx
test   %ecx,%ecx
je     27cd2 <png_write_PLTE+0xc2>
cmp    %r10d,%r12d
ja     27cd7 <png_write_PLTE+0xc7>
movzbl 0x267(%rbx),%ecx
and    $0x2,%ecx
test   %ecx,%ecx
je     27d13 <png_write_PLTE+0x103>
mov    %r12w,0x258(%rbx)
mov    $0x504c5445,%esi
lea    (%r12,%r12,2),%edx
mov    %rbx,%rdi
mov    %rax,-0x18(%rbp)
mov    %r8,-0x20(%rbp)
mov    %r9,-0x28(%rbp)
callq  29f30 <png_write_chunk_header>
lea    -0x2b(%rbp),%rcx
mov    $0x3,%edx
xor    %eax,%eax
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rax,%r14
mov    %rcx,%r15
jmpq   27d6f <png_write_PLTE+0x15f>
test   %r12d,%r12d
jne    27c78 <png_write_PLTE+0x68>
lea    0x8237(%rip),%rsi        # 2ff15 <fourbppswaptable+0x8c9>
movzbl 0x267(%rbx),%ecx
cmp    $0x3,%cl
je     27da1 <png_write_PLTE+0x191>
mov    %rbx,%rdi
mov    %r8,%rbx
mov    %r9,%r12
mov    %rax,%r13
callq  5390 <png_warning@plt>
mov    %r14,%rax
mov    %rbx,%r14
mov    %rax,%rbx
mov    %r15,%rax
mov    %r12,%r15
mov    %rax,%r12
leaveq 
retq   
mov    %rbx,%rdi
mov    %r8,%rbx
mov    %r9,%r12
mov    %rax,%r13
lea    0x8213(%rip),%rsi        # 2ff39 <fourbppswaptable+0x8ed>
callq  5390 <png_warning@plt>
mov    %r14,%rax
mov    %rbx,%r14
mov    %rax,%rbx
mov    %r15,%rax
mov    %r12,%r15
mov    %rax,%r12
leaveq 
retq   
movzbl 0x0(%r13),%eax
mov    %al,-0x2b(%rbp)
movzbl 0x1(%r13),%eax
mov    %al,-0x2a(%rbp)
movzbl 0x2(%r13),%eax
mov    %al,-0x29(%rbp)
mov    %rbx,%rdi
mov    %r15,%rsi
callq  5100 <png_write_chunk_data@plt>
add    $0x1,%r14d
add    $0x3,%r13
mov    $0x3,%edx
cmp    %r14d,%r12d
ja     27d3f <png_write_PLTE+0x12f>
mov    %rbx,%rdi
callq  5480 <png_write_chunk_end@plt>
mov    0x12c(%rbx),%eax
or     $0x2,%eax
mov    %eax,0x12c(%rbx)
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
leaveq 
retq   
mov    %rbx,%rdi
callq  5470 <png_error@plt>
nopl   0x0(%rax)

0000000000027db0 <png_compress_IDAT>:
push   %rbp
mov    %rsp,%rbp
sub    $0x40,%rsp
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    $0x49444154,%r14d
mov    0x138(%rdi),%eax
cmp    $0x49444154,%eax
jne    27e14 <png_compress_IDAT+0x64>
mov    %rdx,%rbx
mov    %rdi,%r12
mov    %rcx,%r13
mov    %rsi,%r15
lea    0x140(%r12),%r14
mov    %r14,-0x30(%rbp)
mov    %r15,(%r14)
movl   $0x0,0x148(%r12)
mov    $0xffffffff,%eax
xor    %esi,%esi
mov    $0xfffffffe,%ecx
jmp    27e52 <png_compress_IDAT+0xa2>
mov    0x1b0(%rdi),%rbx
test   %rbx,%rbx
je     27f6f <png_compress_IDAT+0x1bf>
mov    %rcx,%r13
mov    %rsi,%r15
mov    %rbx,%rsi
mov    %rdx,%rbx
mov    %rdi,%r12
callq  27780 <png_free_buffer_list>
jmpq   27f9c <png_compress_IDAT+0x1ec>
test   %rbx,%rbx
je     27fdf <png_compress_IDAT+0x22f>
xor    %esi,%esi
mov    $0xffffffff,%eax
mov    $0xfffffffe,%ecx
cmp    %rcx,%rbx
ja     27e5a <png_compress_IDAT+0xaa>
mov    %rbx,%rax
mov    %eax,0x148(%r12)
mov    %eax,%r15d
cmp    %rbx,%r15
jne    27e6d <png_compress_IDAT+0xbd>
mov    %r13,%rsi
mov    %r14,%rdi
callq  5330 <deflate@plt>
sub    %r15,%rbx
mov    0x148(%r12),%ecx
movl   $0x0,0x148(%r12)
add    %rcx,%rbx
mov    0x160(%r12),%ecx
test   %ecx,%ecx
jne    27ffb <png_compress_IDAT+0x24b>
mov    0x1b8(%r12),%r8d
mov    0x1b0(%r12),%r15
add    $0x8,%r15
mov    0x12c(%r12),%ecx
and    $0x4,%ecx
test   %ecx,%ecx
jne    27efa <png_compress_IDAT+0x14a>
movzbl 0x418(%r12),%ecx
test   %cl,%cl
jne    27efa <png_compress_IDAT+0x14a>
mov    %r12,%rdi
mov    %rbx,-0x38(%rbp)
mov    %rax,%rbx
mov    %r8,%r14
callq  2a030 <png_image_size>
mov    %rax,%rsi
mov    %r15,%rdi
callq  2a1f0 <optimize_cmf>
mov    %rbx,%rax
mov    %r14,%r8
mov    -0x30(%rbp),%r14
mov    -0x38(%rbp),%rbx
test   %r8d,%r8d
je     27f2a <png_compress_IDAT+0x17a>
mov    %r12,%rdi
mov    $0x49444154,%esi
mov    %r15,%rdx
mov    %r8,%rcx
mov    %rbx,-0x38(%rbp)
mov    %r8,%rbx
mov    %rax,%r14
callq  29fc0 <png_write_complete_chunk>
mov    %r14,%rax
mov    %rbx,%r8
mov    -0x30(%rbp),%r14
mov    -0x38(%rbp),%rbx
mov    0x12c(%r12),%ecx
or     $0x4,%ecx
test   %eax,%eax
mov    %ecx,0x12c(%r12)
mov    %r15,0x158(%r12)
mov    %r8d,0x160(%r12)
jne    27ffb <png_compress_IDAT+0x24b>
test   %r13d,%r13d
je     27ffb <png_compress_IDAT+0x24b>
xor    %esi,%esi
mov    $0xffffffff,%eax
mov    $0xfffffffe,%ecx
jmpq   27e52 <png_compress_IDAT+0xa2>
mov    0x1b8(%rdi),%eax
add    $0x8,%rax
mov    %rdx,%rbx
mov    %rcx,%r13
mov    %rsi,%r15
mov    %rax,%rsi
mov    %rdi,%r12
callq  5800 <png_malloc@plt>
mov    %rax,0x1b0(%r12)
movq   $0x0,(%rax)
mov    %r12,%rdi
callq  2a030 <png_image_size>
mov    %rax,%rdx
mov    %r14,%rsi
mov    %r12,%rdi
callq  2a290 <png_deflate_claim>
test   %eax,%eax
jne    28022 <png_compress_IDAT+0x272>
mov    0x1b0(%r12),%rax
add    $0x8,%rax
mov    %rax,0x158(%r12)
mov    0x1b8(%r12),%eax
mov    %eax,0x160(%r12)
jmpq   27deb <png_compress_IDAT+0x3b>
cmp    $0x4,%r13d
je     28031 <png_compress_IDAT+0x281>
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
test   %eax,%eax
je     27e3d <png_compress_IDAT+0x8d>
cmp    $0x1,%eax
je     28040 <png_compress_IDAT+0x290>
mov    %rax,%rsi
mov    %r12,%rdi
callq  6910 <png_zstream_error>
mov    %r12,%rdi
mov    0x170(%rdi),%rsi
callq  5470 <png_error@plt>
mov    %r12,%rdi
mov    0x170(%rdi),%rsi
callq  5470 <png_error@plt>
mov    %r12,%rdi
lea    0x7f36(%rip),%rsi        # 2ff71 <fourbppswaptable+0x925>
callq  5470 <png_error@plt>
cmp    $0x4,%r13d
jne    28008 <png_compress_IDAT+0x258>
mov    0x1b8(%r12),%r13d
mov    0x160(%r12),%r14d
mov    0x1b0(%r12),%rbx
add    $0x8,%rbx
mov    0x12c(%r12),%eax
and    $0x4,%eax
test   %eax,%eax
je     280d9 <png_compress_IDAT+0x329>
cmp    %r13d,%r14d
je     2808c <png_compress_IDAT+0x2dc>
sub    %r14d,%r13d
mov    %r13d,%ecx
mov    %rbx,%rdx
mov    %r12,%rdi
mov    $0x49444154,%esi
callq  29fc0 <png_write_complete_chunk>
movl   $0x0,0x160(%r12)
movq   $0x0,0x158(%r12)
mov    0x12c(%r12),%eax
or     $0xc,%eax
mov    %eax,0x12c(%r12)
movl   $0x0,0x138(%r12)
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
movzbl 0x418(%r12),%eax
test   %al,%al
jne    28071 <png_compress_IDAT+0x2c1>
mov    %r12,%rdi
callq  2a030 <png_image_size>
mov    %rax,%rsi
mov    %rbx,%rdi
callq  2a1f0 <optimize_cmf>
jmpq   28071 <png_compress_IDAT+0x2c1>
xchg   %ax,%ax

0000000000028100 <png_write_IEND>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x8(%rbp)
mov    $0x49454e44,%esi
xor    %edx,%edx
mov    %rdx,%rcx
mov    %rdi,%r15
callq  29fc0 <png_write_complete_chunk>
mov    0x12c(%r15),%eax
or     $0x10,%eax
mov    %eax,0x12c(%r15)
mov    -0x8(%rbp),%r15
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)

0000000000028140 <png_write_gAMA_fixed>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x8(%rbp)
mov    %rdi,%r15
lea    -0xc(%rbp),%rdi
callq  5500 <png_save_uint_32@plt>
mov    %r15,%rdi
mov    $0x67414d41,%esi
mov    $0x4,%ecx
lea    -0xc(%rbp),%rdx
callq  29fc0 <png_write_complete_chunk>
mov    -0x8(%rbp),%r15
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nop

0000000000028180 <png_write_sBIT>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
lea    0x7e05(%rip),%r10        # 2ff94 <fourbppswaptable+0x948>
mov    %rdx,%rax
and    $0x2,%eax
test   %eax,%eax
jg     281d0 <png_write_sBIT+0x50>
movzbl 0x3(%rsi),%ecx
test   %cl,%cl
je     2821a <png_write_sBIT+0x9a>
movzbl 0x269(%rdi),%eax
cmp    %al,%cl
ja     2821a <png_write_sBIT+0x9a>
mov    %cl,-0x4(%rbp)
mov    $0x1,%ecx
mov    $0x2,%eax
and    $0x4,%edx
test   %edx,%edx
jg     28224 <png_write_sBIT+0xa4>
mov    $0x73424954,%esi
lea    -0x4(%rbp),%rdx
callq  29fc0 <png_write_complete_chunk>
leaveq 
retq   
cmp    $0x3,%edx
jne    28246 <png_write_sBIT+0xc6>
mov    $0x8,%eax
movzbl (%rsi),%r9d
test   %r9b,%r9b
je     2824f <png_write_sBIT+0xcf>
cmp    %al,%r9b
ja     2824f <png_write_sBIT+0xcf>
movzbl 0x1(%rsi),%r8d
test   %r8b,%r8b
je     2824f <png_write_sBIT+0xcf>
cmp    %r8b,%al
jb     2824f <png_write_sBIT+0xcf>
movzbl 0x2(%rsi),%ecx
test   %cl,%cl
je     2824f <png_write_sBIT+0xcf>
cmp    %cl,%al
jb     2824f <png_write_sBIT+0xcf>
mov    %r9b,-0x4(%rbp)
mov    %r8b,-0x3(%rbp)
mov    %cl,-0x2(%rbp)
mov    $0x3,%ecx
mov    $0x4,%eax
jmp    281b9 <png_write_sBIT+0x39>
mov    %r10,%rsi
callq  5390 <png_warning@plt>
leaveq 
retq   
movzbl 0x4(%rsi),%esi
test   %sil,%sil
je     28259 <png_write_sBIT+0xd9>
movzbl 0x269(%rdi),%edx
cmp    %dl,%sil
ja     28259 <png_write_sBIT+0xd9>
mov    %sil,-0x4(%rbp,%rcx,1)
mov    %rax,%rcx
jmpq   281c0 <png_write_sBIT+0x40>
movzbl 0x269(%rdi),%eax
jmp    281da <png_write_sBIT+0x5a>
mov    %r10,%rsi
callq  5390 <png_warning@plt>
leaveq 
retq   
mov    %r10,%rsi
callq  5390 <png_warning@plt>
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

0000000000028270 <png_write_cHRM_fixed>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rdi,%r14
mov    %rsi,%r15
lea    -0x30(%rbp),%rdi
movslq 0x18(%r15),%rsi
callq  5520 <png_save_int_32@plt>
lea    -0x2c(%rbp),%rdi
movslq 0x1c(%r15),%rsi
callq  5520 <png_save_int_32@plt>
lea    -0x28(%rbp),%rdi
movslq (%r15),%rsi
callq  5520 <png_save_int_32@plt>
lea    -0x24(%rbp),%rdi
movslq 0x4(%r15),%rsi
callq  5520 <png_save_int_32@plt>
lea    -0x20(%rbp),%rdi
movslq 0x8(%r15),%rsi
callq  5520 <png_save_int_32@plt>
lea    -0x1c(%rbp),%rdi
movslq 0xc(%r15),%rsi
callq  5520 <png_save_int_32@plt>
lea    -0x18(%rbp),%rdi
movslq 0x10(%r15),%rsi
callq  5520 <png_save_int_32@plt>
lea    -0x14(%rbp),%rdi
movslq 0x14(%r15),%rsi
callq  5520 <png_save_int_32@plt>
mov    %r14,%rdi
mov    $0x6348524d,%esi
mov    $0x20,%ecx
lea    -0x30(%rbp),%rdx
callq  29fc0 <png_write_complete_chunk>
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
nopl   (%rax)

0000000000028310 <png_write_sRGB>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
cmp    $0x3,%esi
jle    2834e <png_write_sRGB+0x3e>
lea    0x7c8d(%rip),%rcx        # 2ffb1 <fourbppswaptable+0x965>
mov    %rdi,%rax
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rsi,%r14
mov    %rcx,%rsi
mov    %rdi,%r15
mov    %rax,%rdi
callq  5390 <png_warning@plt>
mov    %r14,%rsi
mov    %r15,%rdi
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
mov    %sil,-0x11(%rbp)
mov    $0x73524742,%esi
lea    -0x11(%rbp),%rdx
mov    $0x1,%ecx
callq  29fc0 <png_write_complete_chunk>
leaveq 
retq   
nopw   0x0(%rax,%rax,1)

0000000000028370 <png_write_eXIf>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %rsi,%r13
mov    $0x65584966,%esi
mov    %rdi,%rbx
mov    %rdx,%r12
callq  29f30 <png_write_chunk_header>
lea    -0x29(%rbp),%r14
mov    $0x1,%edx
xor    %r15d,%r15d
jmp    283cd <png_write_eXIf+0x5d>
movslq %r15d,%rax
movzbl 0x0(%r13,%rax,1),%eax
mov    %al,-0x29(%rbp)
mov    %rbx,%rdi
mov    %r14,%rsi
callq  5100 <png_write_chunk_data@plt>
add    $0x1,%r15d
mov    $0x1,%edx
cmp    %r12d,%r15d
jl     283ad <png_write_eXIf+0x3d>
mov    %rbx,%rdi
callq  5480 <png_write_chunk_end@plt>
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
leaveq 
retq   

00000000000283f0 <png_write_iCCP>:
push   %rbp
mov    %rsp,%rbp
sub    $0x490,%rsp
test   %rdx,%rdx
je     28507 <png_write_iCCP+0x117>
movzbl (%rdx),%eax
shl    $0x18,%eax
movzbl 0x1(%rdx),%ecx
shl    $0x10,%ecx
add    %eax,%ecx
movzbl 0x2(%rdx),%eax
shl    $0x8,%eax
add    %eax,%ecx
movzbl 0x3(%rdx),%eax
add    %eax,%ecx
cmp    $0x83,%ecx
jbe    28513 <png_write_iCCP+0x123>
movzbl 0x8(%rdx),%eax
cmp    $0x3,%al
ja     2851f <png_write_iCCP+0x12f>
lea    -0x481(%rbp),%rax
mov    %rdi,%r8
mov    %r13,-0x8(%rbp)
mov    %r14,-0x10(%rbp)
mov    %r15,-0x18(%rbp)
mov    %rdi,%r13
mov    %r8,%rdi
mov    %rcx,%r14
mov    %rdx,%r15
mov    %rax,%rdx
callq  23270 <png_check_keyword>
test   %eax,%eax
je     28539 <png_write_iCCP+0x149>
lea    0x1(%rax),%ecx
mov    %ecx,%ecx
movb   $0x0,-0x481(%rbp,%rcx,1)
lea    -0x430(%rbp),%rcx
mov    %r14d,%edx
mov    %r15,%rsi
mov    %rcx,%r15
mov    %rax,%r14
mov    %r15,%rdi
callq  2a5e0 <png_text_compress_init>
mov    $0x69434350,%esi
add    $0x2,%r14d
mov    %r13,%rdi
mov    %rsi,%rax
mov    %r15,%rdx
mov    %rsi,%r15
mov    %rax,%rsi
mov    %r14,%rcx
callq  2a600 <png_text_compress>
test   %eax,%eax
jne    28548 <png_write_iCCP+0x158>
mov    %r15,%rsi
mov    %r14,%rdx
add    -0x420(%rbp),%edx
mov    %r13,%rdi
callq  29f30 <png_write_chunk_header>
mov    %r14d,%edx
mov    %r13,%rdi
lea    -0x481(%rbp),%rsi
callq  5100 <png_write_chunk_data@plt>
mov    %r13,%rdi
lea    -0x430(%rbp),%rsi
callq  2a890 <png_write_compressed_data_out>
mov    %r13,%rdi
callq  5480 <png_write_chunk_end@plt>
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
leaveq 
retq   
lea    0x7acb(%rip),%rsi        # 2ffd9 <fourbppswaptable+0x98d>
callq  5470 <png_error@plt>
lea    0x7ad9(%rip),%rsi        # 2fff3 <fourbppswaptable+0x9a7>
callq  5470 <png_error@plt>
mov    %rcx,%rax
and    $0x3,%eax
test   %eax,%eax
je     2843a <png_write_iCCP+0x4a>
lea    0x7ad5(%rip),%rsi        # 30009 <fourbppswaptable+0x9bd>
callq  5470 <png_error@plt>
mov    %r13,%rdi
lea    0x7af7(%rip),%rsi        # 3003a <fourbppswaptable+0x9ee>
callq  5470 <png_error@plt>
mov    %r13,%rdi
mov    0x170(%rdi),%rsi
callq  5470 <png_error@plt>
nopw   0x0(%rax,%rax,1)

0000000000028560 <png_write_sPLT>:
push   %rbp
mov    %rsp,%rbp
sub    $0x90,%rsp
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
movzbl 0x8(%rsi),%eax
cmp    $0x8,%al
je     2858f <png_write_sPLT+0x2f>
mov    $0xa,%r12d
jmp    28595 <png_write_sPLT+0x35>
mov    $0x6,%r12d
mov    %rsi,%r13
mov    0x18(%r13),%r15d
mov    0x0(%r13),%rsi
lea    -0x82(%rbp),%r14
mov    %rdi,%rbx
mov    %r14,%rdx
callq  23270 <png_check_keyword>
test   %eax,%eax
je     28602 <png_write_sPLT+0xa2>
imul   %r12d,%r15d
lea    0x2(%rax,%r15,1),%edx
mov    %rax,%r15
mov    $0x73504c54,%esi
mov    %rbx,%rdi
callq  29f30 <png_write_chunk_header>
lea    0x1(%r15),%eax
mov    %eax,%edx
mov    %r14,%rsi
mov    %rbx,%rdi
callq  5100 <png_write_chunk_data@plt>
lea    0x8(%r13),%r14
mov    $0x1,%edx
mov    %rbx,%rdi
mov    %r14,%rsi
callq  5100 <png_write_chunk_data@plt>
mov    0x10(%r13),%r15
lea    -0x32(%rbp),%rax
lea    -0x2e(%rbp),%rdi
jmp    28655 <png_write_sPLT+0xf5>
mov    %rbx,%rdi
lea    0x7a44(%rip),%rsi        # 30050 <fourbppswaptable+0xa04>
callq  5470 <png_error@plt>
movzbl (%r15),%eax
mov    %al,-0x32(%rbp)
movzbl 0x2(%r15),%eax
mov    %al,-0x31(%rbp)
movzbl 0x4(%r15),%eax
mov    %al,-0x30(%rbp)
movzbl 0x6(%r15),%eax
mov    %al,-0x2f(%rbp)
movzwl 0x8(%r15),%esi
callq  57a0 <png_save_uint_16@plt>
mov    %rbx,%rdi
lea    -0x32(%rbp),%rsi
mov    %r12,%rdx
callq  5100 <png_write_chunk_data@plt>
add    $0xa,%r15
lea    -0x32(%rbp),%rax
lea    -0x2e(%rbp),%rdi
movslq 0x18(%r13),%rcx
lea    (%rcx,%rcx,4),%rcx
add    %rcx,%rcx
add    0x10(%r13),%rcx
cmp    %r15,%rcx
ja     28687 <png_write_sPLT+0x127>
mov    %rbx,%rdi
callq  5480 <png_write_chunk_end@plt>
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
movzbl (%r14),%ecx
cmp    $0x8,%cl
je     28611 <png_write_sPLT+0xb1>
mov    %rax,%rdi
movzwl (%r15),%esi
callq  57a0 <png_save_uint_16@plt>
movzwl 0x2(%r15),%esi
lea    -0x30(%rbp),%rdi
callq  57a0 <png_save_uint_16@plt>
movzwl 0x4(%r15),%esi
lea    -0x2e(%rbp),%rdi
callq  57a0 <png_save_uint_16@plt>
movzwl 0x6(%r15),%esi
lea    -0x2c(%rbp),%rdi
callq  57a0 <png_save_uint_16@plt>
movzwl 0x8(%r15),%esi
lea    -0x2a(%rbp),%rdi
callq  57a0 <png_save_uint_16@plt>
jmpq   2863a <png_write_sPLT+0xda>
nopl   0x0(%rax)

00000000000286e0 <png_write_tRNS>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    $0x74524e53,%r9d
cmp    $0x3,%r8d
je     2870d <png_write_tRNS+0x2d>
test   %r8d,%r8d
je     28734 <png_write_tRNS+0x54>
cmp    $0x2,%r8d
je     2877d <png_write_tRNS+0x9d>
lea    0x7a0f(%rip),%rsi        # 30115 <fourbppswaptable+0xac9>
callq  b0f0 <png_app_warning>
leaveq 
retq   
test   %ecx,%ecx
jle    287e9 <png_write_tRNS+0x109>
movzwl 0x258(%rdi),%eax
cmp    %eax,%ecx
jg     287e9 <png_write_tRNS+0x109>
movslq %ecx,%rcx
mov    %rsi,%rdx
mov    %r9,%rsi
callq  29fc0 <png_write_complete_chunk>
leaveq 
retq   
mov    $0x1,%eax
movzbl 0x268(%rdi),%ecx
shl    %cl,%eax
movzwl 0x8(%rdx),%esi
cmp    %esi,%eax
jle    287f7 <png_write_tRNS+0x117>
lea    -0x16(%rbp),%rax
mov    %r15,-0x10(%rbp)
mov    %rdi,%r15
mov    %rax,%rdi
callq  57a0 <png_save_uint_16@plt>
mov    %r15,%rdi
mov    $0x2,%ecx
lea    -0x16(%rbp),%rdx
mov    $0x74524e53,%esi
callq  29fc0 <png_write_complete_chunk>
mov    -0x10(%rbp),%r15
leaveq 
retq   
lea    -0x16(%rbp),%rax
movzwl 0x2(%rdx),%esi
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rdi,%r14
mov    %rax,%rdi
mov    %rdx,%r15
callq  57a0 <png_save_uint_16@plt>
lea    -0x14(%rbp),%rdi
movzwl 0x4(%r15),%esi
callq  57a0 <png_save_uint_16@plt>
lea    -0x12(%rbp),%rax
movzwl 0x6(%r15),%esi
mov    %rax,%r15
mov    %r15,%rdi
callq  57a0 <png_save_uint_16@plt>
movzbl 0x268(%r14),%eax
cmp    $0x8,%al
je     28805 <png_write_tRNS+0x125>
mov    %r14,%rdi
mov    $0x6,%ecx
mov    $0x74524e53,%esi
lea    -0x16(%rbp),%rdx
callq  29fc0 <png_write_complete_chunk>
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
lea    0x7876(%rip),%rsi        # 30066 <fourbppswaptable+0xa1a>
callq  b0f0 <png_app_warning>
leaveq 
retq   
lea    0x7897(%rip),%rsi        # 30095 <fourbppswaptable+0xa49>
callq  b0f0 <png_app_warning>
leaveq 
retq   
lea    -0x14(%rbp),%rax
movzbl (%rax),%eax
movzbl -0x16(%rbp),%ecx
or     %cl,%al
movzbl (%r15),%ecx
or     %cl,%al
test   %al,%al
je     287c9 <png_write_tRNS+0xe9>
mov    %r14,%rdi
lea    0x78af(%rip),%rsi        # 300d5 <fourbppswaptable+0xa89>
callq  b0f0 <png_app_warning>
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)

0000000000028840 <png_write_bKGD>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    $0x624b4744,%r8d
mov    $0x1,%eax
cmp    $0x3,%edx
je     288a3 <png_write_bKGD+0x63>
and    $0x2,%edx
test   %edx,%edx
jg     288db <png_write_bKGD+0x9b>
movzbl 0x268(%rdi),%ecx
shl    %cl,%eax
movzwl 0x8(%rsi),%esi
cmp    %esi,%eax
jle    2894a <png_write_bKGD+0x10a>
lea    -0x16(%rbp),%rax
mov    %r15,-0x10(%rbp)
mov    %rdi,%r15
mov    %rax,%rdi
callq  57a0 <png_save_uint_16@plt>
mov    %r15,%rdi
mov    $0x2,%ecx
lea    -0x16(%rbp),%rdx
mov    $0x624b4744,%esi
callq  29fc0 <png_write_complete_chunk>
mov    -0x10(%rbp),%r15
leaveq 
retq   
movzwl 0x258(%rdi),%ecx
test   %cx,%cx
jne    28958 <png_write_bKGD+0x118>
mov    0x3d8(%rdi),%ecx
and    $0x1,%ecx
test   %ecx,%ecx
je     28958 <png_write_bKGD+0x118>
movzbl (%rsi),%ecx
mov    %cl,-0x16(%rbp)
mov    %rax,%rcx
mov    %r8,%rsi
lea    -0x16(%rbp),%rdx
callq  29fc0 <png_write_complete_chunk>
leaveq 
retq   
lea    -0x16(%rbp),%rax
movzwl 0x2(%rsi),%ecx
mov    %r15,-0x10(%rbp)
mov    %r14,-0x8(%rbp)
mov    %rdi,%r14
mov    %rax,%rdi
mov    %rsi,%r15
mov    %rcx,%rsi
callq  57a0 <png_save_uint_16@plt>
lea    -0x14(%rbp),%rdi
movzwl 0x4(%r15),%esi
callq  57a0 <png_save_uint_16@plt>
lea    -0x12(%rbp),%rax
movzwl 0x6(%r15),%esi
mov    %rax,%r15
mov    %r15,%rdi
callq  57a0 <png_save_uint_16@plt>
movzbl 0x268(%r14),%eax
cmp    $0x8,%al
je     28979 <png_write_bKGD+0x139>
mov    %r14,%rdi
mov    $0x6,%ecx
lea    -0x16(%rbp),%rdx
mov    $0x624b4744,%esi
callq  29fc0 <png_write_complete_chunk>
mov    -0x8(%rbp),%r14
mov    -0x10(%rbp),%r15
leaveq 
retq   
lea    0x784c(%rip),%rsi        # 3019d <fourbppswaptable+0xb51>
callq  5390 <png_warning@plt>
leaveq 
retq   
movzbl (%rsi),%edx
movzwl 0x258(%rdi),%ecx
cmp    %cx,%dx
jb     288c4 <png_write_bKGD+0x84>
lea    0x77ca(%rip),%rsi        # 3013c <fourbppswaptable+0xaf0>
callq  5390 <png_warning@plt>
leaveq 
retq   
lea    -0x14(%rbp),%rax
movzbl (%rax),%eax
movzbl -0x16(%rbp),%ecx
or     %cl,%al
movzbl (%r15),%ecx
or     %cl,%al
test   %al,%al
je     2892a <png_write_bKGD+0xea>
mov    %r14,%rdi
lea    0x77c3(%rip),%rsi        # 3015d <fourbppswaptable+0xb11>
callq  5390 <png_warning@plt>
mov    -0x8(%rbp),%r14
mov    -0x10(%rbp),%r15
leaveq 
retq   
nopl   0x0(%rax)

00000000000289b0 <png_write_hIST>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
movzwl 0x258(%rdi),%eax
cmp    %edx,%eax
jl     28a0d <png_write_hIST+0x5d>
mov    $0x68495354,%eax
lea    (%rdx,%rdx,1),%ecx
mov    %rdi,%r8
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rsi,%r13
mov    %rax,%rsi
mov    %rbx,%r14
mov    %rdi,%rbx
mov    %r8,%rdi
mov    %r12,%r15
mov    %rdx,%r12
mov    %rcx,%rdx
callq  29f30 <png_write_chunk_header>
lea    -0x2b(%rbp),%rcx
xor    %eax,%eax
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rax,%r14
mov    %rcx,%r15
jmp    28a40 <png_write_hIST+0x90>
lea    0x77c9(%rip),%rsi        # 301dd <fourbppswaptable+0xb91>
callq  5390 <png_warning@plt>
leaveq 
retq   
movslq %r14d,%rax
movzwl 0x0(%r13,%rax,2),%esi
mov    %r15,%rdi
callq  57a0 <png_save_uint_16@plt>
mov    %rbx,%rdi
mov    %r15,%rsi
mov    $0x2,%edx
callq  5100 <png_write_chunk_data@plt>
add    $0x1,%r14d
cmp    %r14d,%r12d
jg     28a1b <png_write_hIST+0x6b>
mov    %rbx,%rdi
callq  5480 <png_write_chunk_end@plt>
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

0000000000028a70 <png_write_tEXt>:
push   %rbp
mov    %rsp,%rbp
sub    $0x70,%rsp
mov    %r14,-0x18(%rbp)
mov    %r15,-0x20(%rbp)
mov    %r12,%r14
mov    %rbx,%r12
mov    %r13,%r15
mov    %rdx,%r13
lea    -0x70(%rbp),%rdx
mov    %rdi,%rbx
callq  23270 <png_check_keyword>
test   %eax,%eax
je     28b21 <png_write_tEXt+0xb1>
xor    %edx,%edx
test   %r13,%r13
jne    28b30 <png_write_tEXt+0xc0>
mov    $0x7ffffffe,%ecx
sub    %eax,%ecx
mov    %ecx,%ecx
cmp    %rdx,%rcx
jb     28b5b <png_write_tEXt+0xeb>
lea    0x1(%rax,%rdx,1),%ecx
mov    $0x74455874,%esi
mov    %rbx,%rdi
mov    %r15,-0x10(%rbp)
mov    %r14,-0x8(%rbp)
mov    %rdx,%r14
mov    %rcx,%rdx
mov    %rax,%r15
callq  29f30 <png_write_chunk_header>
lea    0x1(%r15),%eax
mov    %eax,%edx
mov    %rbx,%rdi
lea    -0x70(%rbp),%rsi
callq  5100 <png_write_chunk_data@plt>
test   %r14,%r14
je     28b04 <png_write_tEXt+0x94>
mov    %r14,%rdx
mov    %r13,%rsi
mov    %rbx,%rdi
callq  5100 <png_write_chunk_data@plt>
mov    %rbx,%rdi
callq  5480 <png_write_chunk_end@plt>
mov    %r12,%rbx
mov    -0x8(%rbp),%r12
mov    -0x10(%rbp),%r13
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
leaveq 
retq   
mov    %rbx,%rdi
lea    0x76e0(%rip),%rsi        # 3020b <fourbppswaptable+0xbbf>
callq  5470 <png_error@plt>
movsbq 0x0(%r13),%rcx
test   %cl,%cl
je     28aab <png_write_tEXt+0x3b>
mov    %r13,%rdi
mov    %r15,-0x10(%rbp)
mov    %rax,%r15
callq  5260 <strlen@plt>
mov    %rax,%rdx
mov    %r15,%rax
mov    -0x10(%rbp),%r15
jmpq   28aab <png_write_tEXt+0x3b>
mov    %rbx,%rdi
lea    0x76bc(%rip),%rsi        # 30221 <fourbppswaptable+0xbd5>
callq  5470 <png_error@plt>
nopw   0x0(%rax,%rax,1)

0000000000028b70 <png_write_zTXt>:
push   %rbp
mov    %rsp,%rbp
sub    $0x490,%rsp
xor    %eax,%eax
cmp    $0xffffffff,%ecx
je     28c4f <png_write_zTXt+0xdf>
test   %ecx,%ecx
jne    28c59 <png_write_zTXt+0xe9>
lea    -0x481(%rbp),%rax
mov    %rdi,%rcx
mov    %r14,-0x10(%rbp)
mov    %r15,-0x18(%rbp)
mov    %rdi,%r14
mov    %rcx,%rdi
mov    %rdx,%r15
mov    %rax,%rdx
callq  23270 <png_check_keyword>
test   %eax,%eax
je     28c65 <png_write_zTXt+0xf5>
lea    0x1(%rax),%ecx
mov    %ecx,%ecx
movb   $0x0,-0x481(%rbp,%rcx,1)
test   %r15,%r15
jne    28c74 <png_write_zTXt+0x104>
xor    %edx,%edx
mov    %r15,%rsi
mov    %rax,%r15
lea    -0x430(%rbp),%rdi
callq  2a5e0 <png_text_compress_init>
mov    $0x7a545874,%esi
add    $0x2,%r15d
mov    %r14,%rdi
lea    -0x430(%rbp),%rdx
mov    %r15,%rcx
callq  2a600 <png_text_compress>
test   %eax,%eax
jne    28c92 <png_write_zTXt+0x122>
mov    %r15,%rdx
add    -0x420(%rbp),%edx
mov    %r14,%rdi
mov    $0x7a545874,%esi
callq  29f30 <png_write_chunk_header>
mov    %r15d,%edx
mov    %r14,%rdi
lea    -0x481(%rbp),%rsi
callq  5100 <png_write_chunk_data@plt>
mov    %r14,%rdi
lea    -0x430(%rbp),%rsi
callq  2a890 <png_write_compressed_data_out>
mov    %r14,%rdi
callq  5480 <png_write_chunk_end@plt>
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
leaveq 
retq   
mov    %rax,%rcx
callq  28a70 <png_write_tEXt>
leaveq 
retq   
lea    0x75d5(%rip),%rsi        # 30235 <fourbppswaptable+0xbe9>
callq  5470 <png_error@plt>
mov    %r14,%rdi
lea    0x75e5(%rip),%rsi        # 30254 <fourbppswaptable+0xc08>
callq  5470 <png_error@plt>
mov    %r15,%rdi
mov    %r13,-0x8(%rbp)
mov    %rax,%r13
callq  5260 <strlen@plt>
mov    %rax,%rdx
mov    %r13,%rax
mov    -0x8(%rbp),%r13
jmpq   28bd1 <png_write_zTXt+0x61>
mov    %r14,%rdi
mov    0x170(%rdi),%rsi
callq  5470 <png_error@plt>
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   0x0(%rax)

0000000000028cb0 <png_write_iTXt>:
push   %rbp
mov    %rsp,%rbp
sub    $0x4d0,%rsp
mov    %rbx,-0x28(%rbp)
mov    %r12,-0x30(%rbp)
mov    %r13,-0x38(%rbp)
mov    %r14,-0x40(%rbp)
mov    %r15,-0x48(%rbp)
mov    %r9,%r12
mov    %r8,%r13
mov    %rsi,%r14
mov    %rdx,%rsi
mov    %rcx,%r15
lea    -0x4c2(%rbp),%rdx
mov    %rdi,%rbx
callq  23270 <png_check_keyword>
test   %eax,%eax
je     28d20 <png_write_iTXt+0x70>
xor    %ecx,%ecx
mov    %rcx,-0x58(%rbp)
mov    $0x1,%edx
mov    %rdx,-0x50(%rbp)
test   %r14d,%r14d
jle    28d2f <png_write_iTXt+0x7f>
cmp    $0x1,%r14d
je     28d4e <png_write_iTXt+0x9e>
cmp    $0x2,%r14d
je     28d3a <png_write_iTXt+0x8a>
mov    %rbx,%rdi
lea    0x7565(%rip),%rsi        # 30280 <fourbppswaptable+0xc34>
callq  5470 <png_error@plt>
mov    %rbx,%rdi
lea    0x7540(%rip),%rsi        # 3026a <fourbppswaptable+0xc1e>
callq  5470 <png_error@plt>
cmp    $0xffffffff,%r14d
je     28d4e <png_write_iTXt+0x9e>
test   %r14d,%r14d
jne    28d11 <png_write_iTXt+0x61>
lea    0x1(%rax),%r14d
mov    %r14d,%eax
movb   $0x1,-0x4c2(%rbp,%rax,1)
mov    %rdx,%rcx
jmp    28d5d <png_write_iTXt+0xad>
lea    0x1(%rax),%r14d
mov    %r14d,%eax
movb   $0x0,-0x4c2(%rbp,%rax,1)
lea    0x1(%r14),%eax
mov    %eax,%eax
movb   $0x0,-0x4c2(%rbp,%rax,1)
lea    0x7528(%rip),%rax        # 3029a <fourbppswaptable+0xc4e>
test   %r15,%r15
je     28d7c <png_write_iTXt+0xcc>
mov    %r15,%rdi
jmp    28d7f <png_write_iTXt+0xcf>
mov    %rax,%rdi
mov    %rcx,%r15
mov    %rdi,-0x18(%rbp)
callq  5260 <strlen@plt>
test   %r13,%r13
jne    28d97 <png_write_iTXt+0xe7>
lea    0x7503(%rip),%r13        # 3029a <fourbppswaptable+0xc4e>
mov    %r13,%rdi
mov    %rax,%r13
mov    %rdi,-0x8(%rbp)
callq  5260 <strlen@plt>
test   %r12,%r12
jne    28db2 <png_write_iTXt+0x102>
lea    0x74e8(%rip),%r12        # 3029a <fourbppswaptable+0xc4e>
mov    $0x7fffffff,%edi
mov    $0x7ffffffd,%ecx
sub    %r14d,%ecx
mov    %ecx,%ecx
lea    0x1(%r13),%rdx
mov    %rdx,-0x20(%rbp)
cmp    %rdx,%rcx
jae    28e32 <png_write_iTXt+0x182>
mov    %rdi,%rcx
lea    0x1(%rax),%rdx
mov    %rdx,-0x10(%rbp)
mov    %rcx,%rsi
xor    $0x7fffffff,%esi
mov    %esi,%esi
cmp    %rdx,%rsi
jae    28e39 <png_write_iTXt+0x189>
mov    %rdi,%r13
mov    %r12,%rdi
callq  5260 <strlen@plt>
mov    %rax,%rdx
lea    -0x470(%rbp),%rdi
mov    %r12,%rsi
callq  2a5e0 <png_text_compress_init>
mov    $0x69545874,%esi
test   %r15d,%r15d
jg     28e40 <png_write_iTXt+0x190>
mov    %r13,%rax
xor    $0x7fffffff,%eax
mov    %eax,%ecx
mov    -0x468(%rbp),%rax
cmp    %rax,%rcx
jb     28ec5 <png_write_iTXt+0x215>
mov    %eax,-0x460(%rbp)
jmp    28e62 <png_write_iTXt+0x1b2>
lea    0x2(%r14,%rdx,1),%ecx
jmp    28dd1 <png_write_iTXt+0x121>
lea    0x1(%rcx,%rax,1),%r13d
jmp    28dec <png_write_iTXt+0x13c>
mov    %rbx,%rdi
mov    %rsi,%r15
lea    -0x470(%rbp),%rdx
mov    %r13,%rcx
callq  2a600 <png_text_compress>
test   %eax,%eax
jne    28ed4 <png_write_iTXt+0x224>
mov    %r15,%rsi
pushq  -0x50(%rbp)
popq   -0x58(%rbp)
add    -0x460(%rbp),%r13d
mov    %r13,%rdx
mov    %rbx,%rdi
callq  29f30 <png_write_chunk_header>
lea    0x2(%r14),%eax
mov    %eax,%edx
mov    %rbx,%rdi
lea    -0x4c2(%rbp),%rsi
callq  5100 <png_write_chunk_data@plt>
mov    %rbx,%rdi
mov    -0x20(%rbp),%rdx
mov    -0x18(%rbp),%rsi
callq  5100 <png_write_chunk_data@plt>
mov    %rbx,%rdi
mov    -0x10(%rbp),%rdx
mov    -0x8(%rbp),%rsi
callq  5100 <png_write_chunk_data@plt>
mov    -0x58(%rbp),%rax
test   %rax,%rax
jne    28ee3 <png_write_iTXt+0x233>
mov    %r12,%rsi
mov    -0x460(%rbp),%edx
mov    %rbx,%rdi
callq  5100 <png_write_chunk_data@plt>
jmp    28ef2 <png_write_iTXt+0x242>
mov    %rbx,%rdi
lea    0x73cc(%rip),%rsi        # 3029b <fourbppswaptable+0xc4f>
callq  5470 <png_error@plt>
mov    %rbx,%rdi
mov    0x170(%rdi),%rsi
callq  5470 <png_error@plt>
mov    %rbx,%rdi
lea    -0x470(%rbp),%rsi
callq  2a890 <png_write_compressed_data_out>
mov    %rbx,%rdi
callq  5480 <png_write_chunk_end@plt>
mov    -0x48(%rbp),%r15
mov    -0x40(%rbp),%r14
mov    -0x38(%rbp),%r13
mov    -0x30(%rbp),%r12
mov    -0x28(%rbp),%rbx
leaveq 
retq   

0000000000028f10 <png_write_oFFs>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    %r13,-0x10(%rbp)
mov    %r14,-0x18(%rbp)
mov    %r15,-0x20(%rbp)
cmp    $0x1,%ecx
jg     28f34 <png_write_oFFs+0x24>
mov    %rdi,%r13
mov    %rcx,%r14
mov    %rdx,%r15
jmp    28f60 <png_write_oFFs+0x50>
lea    0x7381(%rip),%r8        # 302bc <fourbppswaptable+0xc70>
mov    %rdi,%rax
mov    %r12,-0x8(%rbp)
mov    %rsi,%r12
mov    %r8,%rsi
mov    %rdi,%r13
mov    %rax,%rdi
mov    %rcx,%r14
mov    %rdx,%r15
callq  5390 <png_warning@plt>
mov    %r12,%rsi
mov    -0x8(%rbp),%r12
lea    -0x29(%rbp),%rdi
callq  5520 <png_save_int_32@plt>
mov    %r15,%rsi
lea    -0x25(%rbp),%rdi
callq  5520 <png_save_int_32@plt>
mov    %r14b,-0x21(%rbp)
mov    %r13,%rdi
mov    $0x6f464673,%esi
mov    $0x9,%ecx
lea    -0x29(%rbp),%rdx
callq  29fc0 <png_write_complete_chunk>
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
leaveq 
retq   
nopl   (%rax)

0000000000028fa0 <png_write_pCAL>:
push   %rbp
mov    %rsp,%rbp
sub    $0xf0,%rsp
mov    %r9,-0x88(%rbp)
cmp    $0x3,%r8d
jg     2907b <png_write_pCAL+0xdb>
lea    -0xd8(%rbp),%rax
mov    %rdi,%r10
mov    %rbx,-0x60(%rbp)
mov    %r12,-0x68(%rbp)
mov    %r13,-0x70(%rbp)
mov    %r14,-0x78(%rbp)
mov    %r15,-0x80(%rbp)
mov    %rcx,%rbx
mov    %r9,%r12
mov    %rdx,%r13
mov    %rax,%rdx
mov    %rdi,%r14
mov    %r10,%rdi
mov    %r8,%r15
callq  23270 <png_check_keyword>
test   %eax,%eax
je     29087 <png_write_pCAL+0xe7>
mov    0x10(%rbp),%rdi
mov    %rdi,-0x8(%rbp)
mov    %r15,-0x18(%rbp)
mov    %rax,%r15
callq  5260 <strlen@plt>
xor    %edx,%edx
mov    %rdx,-0x40(%rbp)
mov    $0x1,%ecx
mov    %rcx,-0x38(%rbp)
test   %r12d,%r12d
jne    29027 <png_write_pCAL+0x87>
mov    %rdx,%rcx
movslq %r12d,%rsi
shl    $0x3,%rsi
mov    %r14,%rdi
mov    %r14,-0x50(%rbp)
mov    %r13,-0x28(%rbp)
mov    %rbx,-0x20(%rbp)
mov    %rdx,%rbx
mov    %rcx,%r13
mov    %rax,%r14
callq  5800 <png_malloc@plt>
mov    0x18(%rbp),%rsi
mov    %rsi,-0x58(%rbp)
lea    0x0(%r13,%r14,1),%rcx
mov    %rcx,-0x10(%rbp)
lea    0x1(%r15),%edx
mov    %edx,%edx
mov    %rdx,-0x30(%rbp)
lea    0xa(%rcx,%rdx,1),%r15
lea    -0x1(%r12),%r14d
mov    %rbx,%r8
mov    %rax,%rbx
mov    %rsi,%r13
jmp    290b9 <png_write_pCAL+0x119>
lea    0x7260(%rip),%rsi        # 302e2 <fourbppswaptable+0xc96>
callq  5470 <png_error@plt>
mov    %r14,%rdi
lea    0x727b(%rip),%rsi        # 3030c <fourbppswaptable+0xcc0>
callq  5470 <png_error@plt>
pushq  -0x40(%rbp)
popq   -0x48(%rbp)
mov    -0x48(%rbp),%rcx
add    %rcx,%rax
mov    %rax,(%rbx,%r12,8)
add    %rax,%r15
lea    0x1(%r13),%r8d
mov    -0x58(%rbp),%r13
mov    -0x88(%rbp),%r12
cmp    %r8d,%r12d
jg     29142 <png_write_pCAL+0x1a2>
mov    %r15,%rdx
mov    $0x7043414c,%esi
mov    -0x50(%rbp),%r14
mov    %r14,%rdi
callq  29f30 <png_write_chunk_header>
mov    %r14,%rdi
mov    -0x30(%rbp),%rdx
lea    -0xd8(%rbp),%rsi
callq  5100 <png_write_chunk_data@plt>
lea    -0xe2(%rbp),%r15
mov    %r15,%rdi
mov    -0x28(%rbp),%rsi
callq  5520 <png_save_int_32@plt>
lea    -0xde(%rbp),%rdi
mov    -0x20(%rbp),%rsi
callq  5520 <png_save_int_32@plt>
mov    -0x18(%rbp),%rax
mov    %al,-0xda(%rbp)
mov    %r15,%rsi
mov    %r12b,-0xd9(%rbp)
mov    $0xa,%edx
mov    %r14,%rdi
callq  5100 <png_write_chunk_data@plt>
mov    %r14,%rdi
mov    -0x10(%rbp),%rdx
mov    -0x8(%rbp),%rsi
callq  5100 <png_write_chunk_data@plt>
xor    %r15d,%r15d
jmp    2917e <png_write_pCAL+0x1de>
movslq %r8d,%r12
mov    0x0(%r13,%r12,8),%rdi
mov    %r8,%r13
callq  5260 <strlen@plt>
cmp    %r14d,%r13d
je     29096 <png_write_pCAL+0xf6>
pushq  -0x38(%rbp)
popq   -0x48(%rbp)
jmpq   2909c <png_write_pCAL+0xfc>
movslq %r15d,%rax
mov    0x0(%r13,%rax,8),%rsi
mov    (%rbx,%rax,8),%rdx
mov    %r14,%rdi
callq  5100 <png_write_chunk_data@plt>
add    $0x1,%r15d
cmp    %r12d,%r15d
jl     29166 <png_write_pCAL+0x1c6>
mov    %rbx,%rsi
mov    %r14,%rdi
callq  5790 <png_free@plt>
mov    %r14,%rdi
callq  5480 <png_write_chunk_end@plt>
mov    -0x80(%rbp),%r15
mov    -0x78(%rbp),%r14
mov    -0x70(%rbp),%r13
mov    -0x68(%rbp),%r12
mov    -0x60(%rbp),%rbx
leaveq 
retq   
nopl   0x0(%rax)

00000000000291b0 <png_write_pHYs>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    %r13,-0x10(%rbp)
mov    %r14,-0x18(%rbp)
mov    %r15,-0x20(%rbp)
cmp    $0x1,%ecx
jg     291d4 <png_write_pHYs+0x24>
mov    %rdi,%r13
mov    %rcx,%r14
mov    %rdx,%r15
jmp    29200 <png_write_pHYs+0x50>
lea    0x7147(%rip),%r8        # 30322 <fourbppswaptable+0xcd6>
mov    %rdi,%rax
mov    %r12,-0x8(%rbp)
mov    %rsi,%r12
mov    %r8,%rsi
mov    %rdi,%r13
mov    %rax,%rdi
mov    %rcx,%r14
mov    %rdx,%r15
callq  5390 <png_warning@plt>
mov    %r12,%rsi
mov    -0x8(%rbp),%r12
lea    -0x29(%rbp),%rdi
callq  5500 <png_save_uint_32@plt>
mov    %r15,%rsi
lea    -0x25(%rbp),%rdi
callq  5500 <png_save_uint_32@plt>
mov    %r14b,-0x21(%rbp)
mov    %r13,%rdi
mov    $0x70485973,%esi
mov    $0x9,%ecx
lea    -0x29(%rbp),%rdx
callq  29fc0 <png_write_complete_chunk>
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
leaveq 
retq   
nopl   (%rax)

0000000000029240 <png_write_tIME>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
movzbl 0x2(%rsi),%eax
cmp    $0xc,%al
ja     292e0 <png_write_tIME+0xa0>
test   %al,%al
je     292e0 <png_write_tIME+0xa0>
movzbl 0x3(%rsi),%eax
cmp    $0x1f,%al
ja     292e0 <png_write_tIME+0xa0>
test   %al,%al
je     292e0 <png_write_tIME+0xa0>
movzbl 0x4(%rsi),%eax
cmp    $0x17,%al
ja     292e0 <png_write_tIME+0xa0>
movzbl 0x6(%rsi),%eax
cmp    $0x3c,%al
ja     292e0 <png_write_tIME+0xa0>
lea    -0x17(%rbp),%rax
movzwl (%rsi),%ecx
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rsi,%r14
mov    %rcx,%rsi
mov    %rdi,%r15
mov    %rax,%rdi
callq  57a0 <png_save_uint_16@plt>
movzbl 0x2(%r14),%eax
mov    %al,-0x15(%rbp)
movzbl 0x3(%r14),%eax
mov    %al,-0x14(%rbp)
movzbl 0x4(%r14),%eax
mov    %al,-0x13(%rbp)
movzbl 0x5(%r14),%eax
mov    %al,-0x12(%rbp)
movzbl 0x6(%r14),%eax
mov    %al,-0x11(%rbp)
mov    %r15,%rdi
mov    $0x74494d45,%esi
mov    $0x7,%ecx
lea    -0x17(%rbp),%rdx
callq  29fc0 <png_write_complete_chunk>
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
lea    0x7061(%rip),%rsi        # 30348 <fourbppswaptable+0xcfc>
callq  5390 <png_warning@plt>
leaveq 
retq   
xchg   %ax,%ax

00000000000292f0 <png_write_sCAL_s>:
push   %rbp
mov    %rsp,%rbp
sub    $0x70,%rsp
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rdi,%r12
mov    %rdx,%r13
mov    %rsi,%r14
mov    %rcx,%r15
mov    %r15,-0x8(%rbp)
mov    %r13,%rdi
callq  5260 <strlen@plt>
mov    %r15,%rdi
mov    %rax,%r15
callq  5260 <strlen@plt>
lea    0x2(%rax,%r15,1),%rcx
cmp    $0x40,%rcx
ja     29387 <png_write_sCAL_s+0x97>
mov    %r14b,-0x68(%rbp)
mov    %r13,%rsi
mov    %rcx,%r13
mov    %rax,%r14
lea    -0x67(%rbp),%rdi
lea    0x1(%r15),%rdx
callq  54c0 <memcpy@plt>
lea    -0x66(%rbp,%r15,1),%rdi
mov    %r14,%rdx
mov    -0x8(%rbp),%rsi
callq  54c0 <memcpy@plt>
mov    %r13,%rcx
mov    %r12,%rdi
mov    $0x7343414c,%esi
lea    -0x68(%rbp),%rdx
callq  29fc0 <png_write_complete_chunk>
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
leaveq 
retq   
mov    %r12,%rdi
lea    0x6fdd(%rip),%rsi        # 3036e <fourbppswaptable+0xd22>
callq  5390 <png_warning@plt>
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

00000000000293b0 <png_write_finish_row>:
push   %rbp
mov    %rsp,%rbp
mov    0x214(%rdi),%eax
add    $0x1,%eax
mov    %eax,0x214(%rdi)
mov    0x200(%rdi),%ecx
cmp    %eax,%ecx
jbe    293cf <png_write_finish_row+0x1f>
leaveq 
retq   
xor    %esi,%esi
movzbl 0x264(%rdi),%eax
test   %al,%al
jne    293eb <png_write_finish_row+0x3b>
mov    $0x4,%ecx
mov    %rsi,%rdx
callq  27db0 <png_compress_IDAT>
leaveq 
retq   
movl   $0x0,0x214(%rdi)
mov    0x134(%rdi),%eax
and    $0x2,%eax
test   %eax,%eax
jne    29423 <png_write_finish_row+0x73>
lea    0x6f90(%rip),%rcx        # 30399 <png_pass_inc.46>
lea    0x6f82(%rip),%rsi        # 30392 <png_pass_start.45>
lea    0x6f90(%rip),%r8        # 303a7 <png_pass_yinc.48>
lea    0x6f82(%rip),%r9        # 303a0 <png_pass_ystart.47>
jmpq   294bd <png_write_finish_row+0x10d>
movzbl 0x265(%rdi),%eax
add    $0x1,%eax
mov    %al,0x265(%rdi)
movzbl 0x265(%rdi),%eax
cmp    $0x6,%al
ja     293dc <png_write_finish_row+0x2c>
mov    0x220(%rdi),%r8
test   %r8,%r8
jne    294dc <png_write_finish_row+0x12c>
leaveq 
retq   
movzbl %al,%edx
movzbl (%rdx,%rcx,1),%r11d
mov    0x1f8(%rdi),%eax
lea    -0x1(%r11,%rax,1),%eax
movzbl (%rdx,%rsi,1),%edx
sub    %edx,%eax
xor    %r10d,%r10d
mov    %r10,%rdx
div    %r11d
mov    %eax,0x204(%rdi)
movzbl 0x265(%rdi),%edx
movzbl (%rdx,%r8,1),%r11d
mov    0x1fc(%rdi),%eax
lea    -0x1(%r11,%rax,1),%eax
movzbl (%rdx,%r9,1),%edx
sub    %edx,%eax
mov    %r10,%rdx
div    %r11d
mov    %eax,0x200(%rdi)
mov    0x134(%rdi),%edx
and    $0x2,%edx
test   %edx,%edx
jne    29509 <png_write_finish_row+0x159>
mov    0x204(%rdi),%edx
test   %edx,%edx
je     294bd <png_write_finish_row+0x10d>
test   %eax,%eax
jne    29510 <png_write_finish_row+0x160>
movzbl 0x265(%rdi),%eax
add    $0x1,%eax
mov    %al,0x265(%rdi)
cmp    $0x6,%al
jbe    29450 <png_write_finish_row+0xa0>
xor    %esi,%esi
jmpq   29433 <png_write_finish_row+0x83>
movzbl 0x269(%rdi),%eax
movzbl 0x26c(%rdi),%ecx
imul   %ecx,%eax
cmp    $0x7,%eax
jg     29517 <png_write_finish_row+0x167>
movslq %eax,%rax
mov    0x1f8(%rdi),%ecx
imul   %rcx,%rax
add    $0x7,%rax
shr    $0x3,%rax
jmp    29528 <png_write_finish_row+0x178>
xor    %esi,%esi
jmpq   29433 <png_write_finish_row+0x83>
xor    %esi,%esi
jmpq   29433 <png_write_finish_row+0x83>
movslq %eax,%rax
shr    $0x3,%rax
mov    0x1f8(%rdi),%ecx
imul   %rcx,%rax
lea    0x1(%rax),%rdx
mov    %r8,%rdi
callq  5350 <memset@plt>
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)

0000000000029540 <png_write_start_row>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %r14,-0x10(%rbp)
mov    %r15,-0x18(%rbp)
movzbl 0x269(%rdi),%ecx
movzbl 0x26c(%rdi),%eax
imul   %eax,%ecx
cmp    $0x7,%ecx
jg     2957d <png_write_start_row+0x3d>
movslq %ecx,%rax
mov    0x1f8(%rdi),%edx
imul   %rdx,%rax
add    $0x7,%rax
shr    $0x3,%rax
jmp    2958e <png_write_start_row+0x4e>
movslq %ecx,%rax
shr    $0x3,%rax
mov    0x1f8(%rdi),%edx
imul   %rdx,%rax
movzbl 0x26a(%rdi),%edx
mov    %dl,0x26f(%rdi)
mov    %cl,0x26e(%rdi)
lea    0x1(%rax),%r15
mov    %rdi,%r14
mov    %r15,%rsi
callq  5800 <png_malloc@plt>
mov    %rax,0x228(%r14)
movb   $0x0,(%rax)
movzbl 0x266(%r14),%eax
mov    0x1fc(%r14),%ecx
cmp    $0x1,%ecx
jne    295d0 <png_write_start_row+0x90>
and    $0x1f,%al
mov    0x1f8(%r14),%ecx
cmp    $0x1,%ecx
jne    295de <png_write_start_row+0x9e>
and    $0x2f,%al
test   %al,%al
jne    295e7 <png_write_start_row+0xa7>
mov    $0x8,%eax
mov    %al,0x266(%r14)
movzbl %al,%eax
mov    %rax,%rcx
and    $0xf0,%ecx
test   %ecx,%ecx
jg     2964b <png_write_start_row+0x10b>
and    $0xe0,%eax
test   %eax,%eax
jle    29619 <png_write_start_row+0xd9>
mov    %r15,%rsi
mov    %r14,%rdi
callq  5780 <png_calloc@plt>
mov    %rax,0x220(%r14)
movzbl 0x264(%r14),%eax
test   %al,%al
jne    29683 <png_write_start_row+0x143>
mov    0x1fc(%r14),%eax
mov    %eax,0x200(%r14)
mov    0x1f8(%r14),%eax
mov    %eax,0x204(%r14)
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
leaveq 
retq   
mov    0x230(%r14),%rcx
test   %rcx,%rcx
jne    295fe <png_write_start_row+0xbe>
mov    %r14,%rdi
mov    %r15,%rsi
mov    %r13,-0x8(%rbp)
mov    %rax,%r13
callq  5800 <png_malloc@plt>
mov    %rax,0x230(%r14)
mov    $0x1,%ecx
mov    %r13,%rax
and    $0x10,%eax
test   %eax,%eax
jg     296b7 <png_write_start_row+0x177>
xor    %eax,%eax
jmp    296bf <png_write_start_row+0x17f>
mov    0x134(%r14),%eax
and    $0x2,%eax
test   %eax,%eax
je     296fa <png_write_start_row+0x1ba>
mov    0x1fc(%r14),%eax
mov    %eax,0x200(%r14)
mov    0x1f8(%r14),%eax
mov    %eax,0x204(%r14)
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
leaveq 
retq   
mov    %rcx,%rax
mov    $0x2,%ecx
mov    %r13,%rdx
and    $0x20,%edx
test   %edx,%edx
jle    296cc <png_write_start_row+0x18c>
mov    %rcx,%rax
mov    %r13,%rcx
and    $0x40,%ecx
test   %ecx,%ecx
jle    296d9 <png_write_start_row+0x199>
add    $0x1,%eax
mov    %r13,%rcx
and    $0x80,%ecx
test   %ecx,%ecx
jle    296e9 <png_write_start_row+0x1a9>
add    $0x1,%eax
cmp    $0x1,%eax
jg     2972c <png_write_start_row+0x1ec>
mov    %r13,%rax
mov    -0x8(%rbp),%r13
jmpq   295fe <png_write_start_row+0xbe>
mov    0x1fc(%r14),%eax
add    $0x7,%eax
shr    $0x3,%eax
mov    %eax,0x200(%r14)
mov    0x1f8(%r14),%eax
add    $0x7,%eax
shr    $0x3,%eax
mov    %eax,0x204(%r14)
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
leaveq 
retq   
mov    %r14,%rdi
mov    %r15,%rsi
callq  5800 <png_malloc@plt>
mov    %rax,0x238(%r14)
mov    %r13,%rax
mov    -0x8(%rbp),%r13
jmpq   295fe <png_write_start_row+0xbe>
nopw   0x0(%rax,%rax,1)

0000000000029750 <png_do_write_interlace>:
push   %rbp
mov    %rsp,%rbp
sub    $0x40,%rsp
cmp    $0x5,%edx
jle    2975f <png_do_write_interlace+0xf>
leaveq 
retq   
movslq %edx,%r9
lea    0x6c4c(%rip),%rax        # 303b5 <png_pass_inc.54>
lea    0x6c3e(%rip),%r8        # 303ae <png_pass_start.53>
xor    %r10d,%r10d
movzbl 0x13(%rdi),%ecx
cmp    $0x1,%cl
jbe    297be <png_do_write_interlace+0x6e>
cmp    $0x2,%cl
je     29808 <png_do_write_interlace+0xb8>
cmp    $0x4,%cl
jne    297c7 <png_do_write_interlace+0x77>
mov    (%rdi),%ecx
movzbl (%r9,%r8,1),%r11d
mov    $0x4,%edx
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %r11,%r13
mov    %rcx,%r14
mov    %rdx,%r15
mov    %rsi,%r12
mov    %r10,%r11
jmpq   29856 <png_do_write_interlace+0x106>
cmp    $0x1,%cl
je     2986e <png_do_write_interlace+0x11e>
mov    (%rdi),%r10d
movslq %edx,%rdx
movzbl (%rdx,%r8,1),%r8d
shr    $0x3,%ecx
movslq %ecx,%rcx
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %r9,-0x38(%rbp)
mov    %rdi,-0x30(%rbp)
mov    %r8,%rbx
mov    %rcx,%r12
mov    %rdx,%r13
mov    %r10,%r14
mov    %rsi,%r15
jmpq   298d8 <png_do_write_interlace+0x188>
mov    (%rdi),%edx
movzbl (%r9,%r8,1),%ecx
mov    $0x6,%r11d
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rcx,%r13
mov    %rdx,%r14
mov    %r11,%r15
mov    %rsi,%r12
mov    %r10,%r11
mov    %r15,%rdx
jmpq   2993a <png_do_write_interlace+0x1ea>
mov    %r11b,(%r12)
add    $0x1,%r12
mov    %r10,%r11
mov    %r15,%rdx
movzbl (%r9,%rax,1),%ecx
add    %ecx,%r13d
cmp    %r14d,%r13d
jb     2994e <png_do_write_interlace+0x1fe>
cmp    $0x4,%edx
je     298ec <png_do_write_interlace+0x19c>
mov    %r11b,(%r12)
jmp    298ec <png_do_write_interlace+0x19c>
mov    (%rdi),%ecx
movzbl (%r9,%r8,1),%r11d
mov    $0x7,%edx
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %r11,%r13
mov    %rcx,%r14
mov    %rdx,%r15
mov    %rsi,%r12
mov    %r10,%r11
jmpq   29998 <png_do_write_interlace+0x248>
mov    %ebx,%ecx
imul   %r12,%rcx
add    %rsi,%rcx
cmp    %rcx,%r15
je     298cd <png_do_write_interlace+0x17d>
mov    %r15,%rdi
mov    %r12,%rdx
mov    %rsi,-0x40(%rbp)
mov    %rcx,%rsi
callq  54c0 <memcpy@plt>
lea    0x6aec(%rip),%rax        # 303b5 <png_pass_inc.54>
mov    -0x40(%rbp),%rsi
add    %r12,%r15
movzbl 0x0(%r13,%rax,1),%ecx
add    %ecx,%ebx
cmp    %r14d,%ebx
jb     298a2 <png_do_write_interlace+0x152>
lea    0x6aca(%rip),%r8        # 303ae <png_pass_start.53>
mov    -0x30(%rbp),%rdi
mov    -0x38(%rbp),%r9
movzbl (%r9,%rax,1),%ecx
mov    (%rdi),%eax
lea    -0x1(%rcx,%rax,1),%eax
movzbl (%r9,%r8,1),%edx
sub    %edx,%eax
xor    %edx,%edx
div    %ecx
mov    %eax,(%rdi)
movzbl 0x13(%rdi),%ecx
cmp    $0x7,%cl
ja     299af <png_do_write_interlace+0x25f>
mov    %eax,%eax
imul   %rax,%rcx
add    $0x7,%rcx
shr    $0x3,%rcx
jmpq   299b9 <png_do_write_interlace+0x269>
mov    %r11b,(%r12)
add    $0x1,%r12
mov    %r10,%r11
mov    %r15,%rdx
movzbl (%r9,%rax,1),%ecx
add    %ecx,%r13d
cmp    %r14d,%r13d
jb     299d3 <png_do_write_interlace+0x283>
cmp    $0x6,%edx
je     298ec <png_do_write_interlace+0x19c>
mov    %r11b,(%r12)
jmp    298ec <png_do_write_interlace+0x19c>
mov    %r13,%rcx
shr    %ecx
mov    %ecx,%ecx
movzbl (%rsi,%rcx,1),%ebx
mov    %r13,%rcx
and    $0x1,%ecx
add    $0xffffffff,%ecx
and    $0x4,%ecx
shr    %cl,%ebx
and    $0xf,%ebx
mov    %rdx,%rcx
shl    %cl,%ebx
or     %ebx,%r11d
test   %ecx,%ecx
je     29840 <png_do_write_interlace+0xf0>
lea    -0x4(%rcx),%edx
jmpq   2984e <png_do_write_interlace+0xfe>
mov    %r11b,(%r12)
add    $0x1,%r12
mov    %r10,%r11
mov    %r15,%rdx
movzbl (%r9,%rax,1),%ecx
add    %ecx,%r13d
cmp    %r14d,%r13d
jb     29a06 <png_do_write_interlace+0x2b6>
cmp    $0x7,%edx
je     298ec <png_do_write_interlace+0x19c>
mov    %r11b,(%r12)
jmpq   298ec <png_do_write_interlace+0x19c>
shr    $0x3,%rcx
mov    %eax,%eax
imul   %rax,%rcx
mov    %rcx,0x8(%rdi)
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
mov    %r13,%rcx
shr    $0x2,%ecx
mov    %ecx,%ecx
movzbl (%rsi,%rcx,1),%ebx
mov    %r13,%rcx
not    %ecx
and    $0x3,%ecx
add    %ecx,%ecx
shr    %cl,%ebx
and    $0x3,%ebx
mov    %rdx,%rcx
shl    %cl,%ebx
or     %ebx,%r11d
test   %ecx,%ecx
je     29924 <png_do_write_interlace+0x1d4>
lea    -0x2(%rcx),%edx
jmpq   29932 <png_do_write_interlace+0x1e2>
mov    %r13,%rcx
shr    $0x3,%ecx
mov    %ecx,%ecx
movzbl (%rsi,%rcx,1),%ebx
mov    %r13,%rcx
not    %ecx
and    $0x7,%ecx
shr    %cl,%ebx
and    $0x1,%ebx
mov    %rdx,%rcx
shl    %cl,%ebx
or     %ebx,%r11d
test   %ecx,%ecx
je     29982 <png_do_write_interlace+0x232>
lea    -0x1(%rcx),%edx
jmpq   29990 <png_do_write_interlace+0x240>
nopw   0x0(%rax,%rax,1)

0000000000029a40 <png_write_find_filter>:
push   %rbp
mov    %rsp,%rbp
sub    $0x40,%rsp
mov    %r15,-0x38(%rbp)
mov    %r14,-0x30(%rbp)
mov    %rsi,-0x10(%rbp)
mov    %rbx,-0x18(%rbp)
mov    %r12,-0x20(%rbp)
mov    %r13,-0x28(%rbp)
movzbl 0x13(%rsi),%r10d
movzbl 0x266(%rdi),%r9d
mov    0x228(%rdi),%r8
mov    $0xfffffffffffffeff,%rax
mov    0x8(%rsi),%rdx
movabs $0x1fffffffffffffe,%rcx
cmp    %rcx,%rdx
ja     29ab7 <png_write_find_filter+0x77>
mov    %r9,%rcx
and    $0x8,%ecx
test   %ecx,%ecx
je     29abf <png_write_find_filter+0x7f>
cmp    $0x8,%r9b
je     29abf <png_write_find_filter+0x7f>
lea    0x1(%r8),%rcx
xor    %eax,%eax
mov    $0x100,%r11d
mov    %r9,-0x40(%rbp)
mov    %r8,-0x8(%rbp)
mov    %rax,%r8
jmp    29b13 <png_write_find_filter+0xd3>
mov    %r9,%rcx
neg    %ecx
and    %ecx,%r9d
add    $0x7,%r10d
shr    $0x3,%r10d
cmp    $0x10,%r9d
je     29b22 <png_write_find_filter+0xe2>
mov    %r9,%rcx
and    $0x10,%ecx
test   %ecx,%ecx
jne    29bb9 <png_write_find_filter+0x179>
mov    %r12,%rcx
mov    %rdi,%r12
mov    %r15,%r11
mov    %r10,%r15
mov    %r14,%r10
mov    %r9,%r14
mov    %r13,%r9
mov    %rax,%r13
jmp    29b5c <png_write_find_filter+0x11c>
movzbl (%rcx),%r9d
cmp    $0x7f,%r9b
jbe    29b05 <png_write_find_filter+0xc5>
neg    %r9d
add    %r11d,%r9d
add    $0x1,%rcx
add    $0x1,%r8
mov    %r9d,%r9d
add    %r9,%rax
cmp    %r8,%rdx
ja     29af5 <png_write_find_filter+0xb5>
mov    -0x8(%rbp),%r8
mov    -0x40(%rbp),%r9
jmp    29abf <png_write_find_filter+0x7f>
mov    %rax,%r13
mov    %r9,%r14
mov    %r10,%r15
mov    %rdi,%r12
mov    %r15,%rsi
mov    %rdx,%rbx
callq  2aa80 <png_setup_sub_row_only>
mov    0x230(%r12),%r8
mov    %rbx,%rdx
mov    -0x28(%rbp),%r9
mov    -0x20(%rbp),%rcx
mov    -0x18(%rbp),%rbx
mov    -0x10(%rbp),%rsi
mov    -0x30(%rbp),%r10
mov    -0x38(%rbp),%r11
cmp    $0x20,%r14d
je     29c13 <png_write_find_filter+0x1d3>
mov    %r14,%rax
and    $0x20,%eax
test   %eax,%eax
je     29c44 <png_write_find_filter+0x204>
mov    %r12,%rdi
mov    %rdx,%rsi
mov    %r13,%rax
mov    %rdx,-0x40(%rbp)
mov    %rax,%rdx
mov    %r8,%rbx
callq  2ab00 <png_setup_up_row>
cmp    %r13,%rax
jb     29ca4 <png_write_find_filter+0x264>
mov    %rbx,%r8
mov    -0x40(%rbp),%rdx
mov    -0x28(%rbp),%r9
mov    -0x20(%rbp),%rcx
mov    -0x18(%rbp),%rbx
mov    -0x10(%rbp),%rsi
mov    -0x30(%rbp),%r10
mov    -0x38(%rbp),%r11
jmpq   29c44 <png_write_find_filter+0x204>
mov    %rdi,%rbx
mov    %r10,%rsi
mov    %rdx,%r11
mov    %rax,%rcx
mov    %r10,-0x40(%rbp)
mov    %rdi,%r12
mov    %rbx,%rdi
mov    %r8,%rbx
mov    %rax,%r13
mov    %r9,%r14
mov    %rdx,%r15
mov    %r11,%rdx
callq  2a9b0 <png_setup_sub_row>
cmp    %r13,%rax
jb     29ce1 <png_write_find_filter+0x2a1>
mov    %r15,%rdx
mov    %rbx,%r8
mov    -0x28(%rbp),%r9
mov    -0x20(%rbp),%rcx
mov    -0x18(%rbp),%rbx
mov    -0x10(%rbp),%rsi
mov    -0x40(%rbp),%r15
mov    -0x30(%rbp),%r10
mov    -0x38(%rbp),%r11
jmpq   29b5c <png_write_find_filter+0x11c>
mov    %rdx,%rbx
mov    %r12,%rdi
mov    %rbx,%rsi
callq  2ab90 <png_setup_up_row_only>
mov    0x230(%r12),%r8
mov    %rbx,%rdx
mov    -0x28(%rbp),%r9
mov    -0x20(%rbp),%rcx
mov    -0x18(%rbp),%rbx
mov    -0x10(%rbp),%rsi
mov    -0x30(%rbp),%r10
mov    -0x38(%rbp),%r11
cmp    $0x40,%r14d
je     29d21 <png_write_find_filter+0x2e1>
mov    %r14,%rax
and    $0x40,%eax
test   %eax,%eax
je     29d52 <png_write_find_filter+0x312>
mov    %r12,%rdi
mov    %r15,%rsi
mov    %rdx,%rax
mov    %r13,%rcx
mov    %rdx,-0x40(%rbp)
mov    %rax,%rdx
mov    %r8,%rbx
callq  2abf0 <png_setup_avg_row>
cmp    %r13,%rax
jb     29da7 <png_write_find_filter+0x367>
mov    %rbx,%r8
mov    -0x40(%rbp),%rdx
mov    -0x28(%rbp),%r9
mov    -0x20(%rbp),%rcx
mov    -0x18(%rbp),%rbx
mov    -0x10(%rbp),%rsi
mov    -0x30(%rbp),%r10
mov    -0x38(%rbp),%r11
jmpq   29d52 <png_write_find_filter+0x312>
mov    0x230(%r12),%r8
mov    0x238(%r12),%rcx
test   %rcx,%rcx
jne    29de4 <png_write_find_filter+0x3a4>
mov    %rax,%r13
mov    -0x40(%rbp),%rdx
mov    -0x28(%rbp),%r9
mov    -0x20(%rbp),%rcx
mov    -0x18(%rbp),%rbx
mov    -0x10(%rbp),%rsi
mov    -0x30(%rbp),%r10
mov    -0x38(%rbp),%r11
jmpq   29c44 <png_write_find_filter+0x204>
mov    0x230(%r12),%r8
mov    0x238(%r12),%rcx
test   %rcx,%rcx
jne    29e18 <png_write_find_filter+0x3d8>
mov    %r15,%rdx
mov    %rax,%r13
mov    -0x28(%rbp),%r9
mov    -0x20(%rbp),%rcx
mov    -0x18(%rbp),%rbx
mov    -0x10(%rbp),%rsi
mov    -0x40(%rbp),%r15
mov    -0x30(%rbp),%r10
mov    -0x38(%rbp),%r11
jmpq   29b5c <png_write_find_filter+0x11c>
mov    %r12,%rdi
mov    %r15,%rsi
mov    %rdx,%rbx
callq  2ad00 <png_setup_avg_row_only>
mov    0x230(%r12),%r8
mov    %rbx,%rdx
mov    -0x28(%rbp),%r9
mov    -0x20(%rbp),%rcx
mov    -0x18(%rbp),%rbx
mov    -0x10(%rbp),%rsi
mov    -0x30(%rbp),%r10
mov    -0x38(%rbp),%r11
cmp    $0x80,%r14d
je     29e4f <png_write_find_filter+0x40f>
and    $0x80,%r14d
test   %r14d,%r14d
je     29e7c <png_write_find_filter+0x43c>
mov    %rsi,%r14
mov    %r15,%rsi
mov    %r8,%r15
mov    %r12,%rdi
mov    %r13,%rcx
callq  2ada0 <png_setup_paeth_row>
cmp    %r13,%rax
jb     29e9d <png_write_find_filter+0x45d>
mov    %r14,%rsi
mov    %r15,%r8
mov    -0x28(%rbp),%r9
mov    -0x20(%rbp),%rcx
mov    -0x30(%rbp),%r10
mov    -0x38(%rbp),%r11
jmpq   29e7c <png_write_find_filter+0x43c>
mov    0x230(%r12),%r8
mov    0x238(%r12),%rcx
test   %rcx,%rcx
jne    29ec7 <png_write_find_filter+0x487>
mov    %rax,%r13
mov    -0x40(%rbp),%rdx
mov    -0x28(%rbp),%r9
mov    -0x20(%rbp),%rcx
mov    -0x18(%rbp),%rbx
mov    -0x10(%rbp),%rsi
mov    -0x30(%rbp),%r10
mov    -0x38(%rbp),%r11
jmpq   29d52 <png_write_find_filter+0x312>
mov    %rcx,0x230(%r12)
mov    %r8,0x238(%r12)
mov    %rax,%r13
mov    -0x40(%rbp),%rdx
mov    -0x28(%rbp),%r9
mov    -0x20(%rbp),%rcx
mov    -0x18(%rbp),%rbx
mov    -0x10(%rbp),%rsi
mov    -0x30(%rbp),%r10
mov    -0x38(%rbp),%r11
jmpq   29c44 <png_write_find_filter+0x204>
mov    %rcx,0x230(%r12)
mov    %r8,0x238(%r12)
mov    %r15,%rdx
mov    %rax,%r13
mov    -0x28(%rbp),%r9
mov    -0x20(%rbp),%rcx
mov    -0x18(%rbp),%rbx
mov    -0x10(%rbp),%rsi
mov    -0x40(%rbp),%r15
mov    -0x30(%rbp),%r10
mov    -0x38(%rbp),%r11
jmpq   29b5c <png_write_find_filter+0x11c>
mov    %rsi,%r13
mov    %r15,%rsi
mov    %r9,%r15
mov    %rcx,%r14
mov    %r12,%rdi
callq  2af60 <png_setup_paeth_row_only>
mov    0x230(%r12),%r8
mov    %r14,%rcx
mov    %r13,%rsi
mov    %r15,%r9
mov    -0x30(%rbp),%r10
mov    -0x38(%rbp),%r11
mov    0x8(%rsi),%rdx
add    $0x1,%rdx
mov    %r8,%rsi
mov    %r12,%rdi
mov    %rcx,%r12
mov    %r9,%r13
mov    %r10,%r14
mov    %r11,%r15
callq  2a930 <png_write_filtered_row>
leaveq 
retq   
mov    0x230(%r12),%r8
mov    0x238(%r12),%rax
test   %rax,%rax
jne    29efb <png_write_find_filter+0x4bb>
mov    %r14,%rsi
mov    -0x28(%rbp),%r9
mov    -0x20(%rbp),%rcx
mov    -0x30(%rbp),%r10
mov    -0x38(%rbp),%r11
jmp    29e7c <png_write_find_filter+0x43c>
mov    %rcx,0x230(%r12)
mov    %r8,0x238(%r12)
mov    %rax,%r13
mov    -0x40(%rbp),%rdx
mov    -0x28(%rbp),%r9
mov    -0x20(%rbp),%rcx
mov    -0x18(%rbp),%rbx
mov    -0x10(%rbp),%rsi
mov    -0x30(%rbp),%r10
mov    -0x38(%rbp),%r11
jmpq   29d52 <png_write_find_filter+0x312>
mov    %rax,0x230(%r12)
mov    %r8,0x238(%r12)
mov    %r14,%rsi
mov    -0x28(%rbp),%r9
mov    -0x20(%rbp),%rcx
mov    -0x30(%rbp),%r10
mov    -0x38(%rbp),%r11
jmpq   29e7c <png_write_find_filter+0x43c>
data16 nopw %cs:0x0(%rax,%rax,1)
xchg   %ax,%ax

0000000000029f30 <png_write_chunk_header>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
test   %rdi,%rdi
jne    29f3f <png_write_chunk_header+0xf>
leaveq 
retq   
movl   $0x22,0x46c(%rdi)
lea    -0x18(%rbp),%rax
mov    %r14,-0x8(%rbp)
mov    %r15,-0x10(%rbp)
mov    %rdi,%r14
mov    %rax,%rdi
mov    %rsi,%r15
mov    %rdx,%rsi
callq  5500 <png_save_uint_32@plt>
lea    -0x14(%rbp),%rdi
mov    %r15,%rsi
callq  5500 <png_save_uint_32@plt>
mov    $0x8,%edx
mov    %r14,%rdi
lea    -0x18(%rbp),%rsi
callq  23e40 <png_write_data>
mov    %r15d,0x218(%r14)
mov    %r14,%rdi
callq  6d80 <png_reset_crc>
mov    $0x4,%edx
mov    %r14,%rdi
lea    -0x14(%rbp),%rsi
callq  6db0 <png_calculate_crc>
movl   $0x42,0x46c(%r14)
mov    -0x10(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

0000000000029fc0 <png_write_complete_chunk>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
test   %rdi,%rdi
jne    29fcf <png_write_complete_chunk+0xf>
leaveq 
retq   
cmp    $0x7fffffff,%rcx
ja     2a022 <png_write_complete_chunk+0x62>
mov    %rdi,%rax
mov    %rcx,%r8
mov    %r13,-0x8(%rbp)
mov    %r14,-0x10(%rbp)
mov    %r15,-0x18(%rbp)
mov    %rdi,%r13
mov    %rax,%rdi
mov    %rcx,%r14
mov    %rdx,%r15
mov    %r8,%rdx
callq  29f30 <png_write_chunk_header>
mov    %r14,%rdx
mov    %r15,%rsi
mov    %r13,%rdi
callq  5100 <png_write_chunk_data@plt>
mov    %r13,%rdi
callq  5480 <png_write_chunk_end@plt>
mov    -0x18(%rbp),%r15
mov    -0x10(%rbp),%r14
mov    -0x8(%rbp),%r13
leaveq 
retq   
lea    0x6393(%rip),%rsi        # 303bc <png_pass_inc.54+0x7>
callq  5470 <png_error@plt>
xchg   %ax,%ax

000000000002a030 <png_image_size>:
push   %rbp
mov    %rsp,%rbp
sub    $0x30,%rsp
mov    0x1fc(%rdi),%eax
mov    $0xffffffff,%ecx
mov    0x208(%rdi),%rdx
cmp    $0x7fff,%rdx
jbe    2a058 <png_image_size+0x28>
mov    %rcx,%rax
leaveq 
retq   
cmp    $0x7fff,%eax
jbe    2a064 <png_image_size+0x34>
mov    %rcx,%rax
leaveq 
retq   
movzbl 0x264(%rdi),%ecx
test   %cl,%cl
jne    2a079 <png_image_size+0x49>
lea    0x1(%rdx),%rcx
imul   %rcx,%rax
leaveq 
retq   
mov    0x1f8(%rdi),%r8d
movzbl 0x26a(%rdi),%edi
mov    %rdi,%r9
shr    $0x3,%r9
xor    %ecx,%ecx
mov    $0x1,%edx
mov    $0x3,%esi
mov    $0x7,%r10d
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    %rcx,%r11
mov    %rdx,%r14
mov    %r11,%rdx
mov    %rdx,%rbx
jmp    2a10a <png_image_size+0xda>
sub    %edx,%r12d
sar    %r12d
mov    $0x1,%r15d
shl    %cl,%r15d
add    $0xffffffff,%r15d
mov    %rdx,%rcx
sar    %ecx
neg    %ecx
add    %esi,%ecx
not    %edx
and    $0x1,%edx
shl    %cl,%edx
and    $0x7,%edx
sub    %edx,%r15d
lea    (%rax,%r15,1),%edx
mov    %r12,%rcx
shr    %cl,%edx
mov    %edx,%ecx
lea    0x1(%r14),%rdx
imul   %rdx,%rcx
add    %rcx,%r11
mov    %r13,%rdx
mov    $0x1,%r14d
cmp    $0x6,%edx
jle    2a128 <png_image_size+0xf8>
mov    %r11,%rax
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
cmp    $0x1,%edx
jg     2a135 <png_image_size+0x105>
mov    %rsi,%rcx
mov    %rbx,%r12
jmp    2a13f <png_image_size+0x10f>
mov    %r10,%rcx
sub    %edx,%ecx
sar    %ecx
mov    %r14,%r12
test   %r12,%r12
jne    2a149 <png_image_size+0x119>
mov    %rsi,%r12
jmp    2a152 <png_image_size+0x122>
mov    %r10,%r12
sub    %edx,%r12d
sar    %r12d
shl    %cl,%r14d
lea    -0x1(%r14),%r15d
lea    0x1(%rdx),%r13d
mov    %r13,%rcx
sar    %ecx
neg    %ecx
add    %esi,%ecx
mov    %rdx,%r14
and    $0x1,%r14d
shl    %cl,%r14d
and    $0x7,%r14d
sub    %r14d,%r15d
lea    (%r15,%r8,1),%r14d
mov    %r12,%rcx
shr    %cl,%r14d
test   %r14d,%r14d
jne    2a194 <png_image_size+0x164>
mov    %r13,%rdx
mov    $0x1,%r14d
jmpq   2a10a <png_image_size+0xda>
cmp    $0x7,%dil
ja     2a1ab <png_image_size+0x17b>
mov    %r14d,%ecx
imul   %rdi,%rcx
lea    0x7(%rcx),%r14
shr    $0x3,%r14
jmp    2a1b5 <png_image_size+0x185>
mov    %r14d,%ecx
mov    %r9,%r14
imul   %rcx,%r14
cmp    $0x2,%edx
jg     2a1c8 <png_image_size+0x198>
mov    $0x8,%r12d
mov    %rsi,%rcx
mov    %rbx,%r15
jmp    2a1db <png_image_size+0x1ab>
mov    $0x8,%r12d
mov    %r12,%rcx
sub    %edx,%ecx
sar    %ecx
mov    $0x1,%r15d
test   %r15,%r15
jne    2a0c2 <png_image_size+0x92>
mov    %rsi,%r12
jmpq   2a0c8 <png_image_size+0x98>
nopl   0x0(%rax)

000000000002a1f0 <optimize_cmf>:
push   %rbp
mov    %rsp,%rbp
cmp    $0x4000,%rsi
jbe    2a1ff <optimize_cmf+0xf>
leaveq 
retq   
movzbl (%rdi),%edx
mov    %rdx,%rax
and    $0xf,%eax
cmp    $0x8,%eax
je     2a20f <optimize_cmf+0x1f>
leaveq 
retq   
mov    %rdx,%rax
and    $0xf0,%eax
cmp    $0x70,%eax
jbe    2a21e <optimize_cmf+0x2e>
leaveq 
retq   
mov    $0x1,%eax
shr    $0x4,%edx
lea    0x7(%rdx),%ecx
shl    %cl,%eax
mov    %eax,%ecx
cmp    %rcx,%rsi
jbe    2a23d <optimize_cmf+0x4d>
leaveq 
retq   
shr    %eax
mov    %eax,%ecx
cmp    %rsi,%rcx
jb     2a244 <optimize_cmf+0x54>
add    $0xffffffff,%edx
test   %edx,%edx
jne    2a234 <optimize_cmf+0x44>
shl    $0x4,%edx
lea    0x8(%rdx),%eax
mov    %al,(%rdi)
movzbl 0x1(%rdi),%ecx
and    $0xe0,%ecx
shl    $0x8,%eax
lea    (%rcx,%rax,1),%esi
lea    0x1(%rsi),%edx
mov    $0x42108421,%eax
mul    %edx
shr    $0x3,%edx
mov    %rdx,%rax
shl    $0x5,%eax
sub    %eax,%edx
add    %esi,%edx
mov    $0x1f,%eax
sub    %edx,%eax
add    %ecx,%eax
mov    %al,0x1(%rdi)
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   0x0(%rax)

000000000002a290 <png_deflate_claim>:
push   %rbp
mov    %rsp,%rbp
sub    $0x80,%rsp
mov    %r15,-0x30(%rbp)
mov    %r14,-0x28(%rbp)
mov    0x138(%rdi),%ecx
test   %ecx,%ecx
jne    2a3a3 <png_deflate_claim+0x113>
mov    %rdx,%r11
mov    %rdi,%r15
movslq 0x1bc(%r15),%r10
movslq 0x1c0(%r15),%rdx
movslq 0x1c4(%r15),%r14
movslq 0x1c8(%r15),%r8
xor    %r9d,%r9d
mov    $0x1,%eax
cmp    $0x49444154,%esi
je     2a44e <png_deflate_claim+0x1be>
movslq 0x1d0(%r15),%r10
movslq 0x1d4(%r15),%rdx
movslq 0x1d8(%r15),%r14
movslq 0x1dc(%r15),%r8
movslq 0x1e0(%r15),%r9
cmp    $0x4000,%r11
jbe    2a47a <png_deflate_claim+0x1ea>
lea    0x140(%r15),%rdi
mov    0x130(%r15),%eax
and    $0x2,%eax
test   %eax,%eax
je     2a4cd <png_deflate_claim+0x23d>
cmp    0x1e4(%r15),%r10d
jne    2a361 <png_deflate_claim+0xd1>
cmp    0x1e8(%r15),%edx
jne    2a361 <png_deflate_claim+0xd1>
cmp    0x1ec(%r15),%r14d
jne    2a361 <png_deflate_claim+0xd1>
cmp    0x1f0(%r15),%r8d
jne    2a361 <png_deflate_claim+0xd1>
cmp    0x1f4(%r15),%r9d
je     2a4cd <png_deflate_claim+0x23d>
mov    %rdi,%rax
mov    %rsi,-0x8(%rbp)
mov    %r8,-0x38(%rbp)
mov    %r9,-0x40(%rbp)
mov    %rbx,-0x10(%rbp)
mov    %r12,-0x18(%rbp)
mov    %r13,-0x20(%rbp)
mov    %rdx,%rbx
mov    %r10,%r12
mov    %rdi,%r13
mov    %rax,%rdi
callq  5670 <deflateEnd@plt>
test   %eax,%eax
jne    2a48c <png_deflate_claim+0x1fc>
mov    %rbx,%rdx
mov    %r13,%rdi
mov    %r12,%r10
jmpq   2a4a4 <png_deflate_claim+0x214>
mov    %rsi,%rax
shr    $0x18,%eax
mov    %al,-0x80(%rbp)
mov    %rsi,%rax
shr    $0x10,%eax
mov    %al,-0x7f(%rbp)
mov    %rsi,%rax
shr    $0x8,%eax
mov    %al,-0x7e(%rbp)
mov    %sil,-0x7d(%rbp)
movb   $0x3a,-0x7c(%rbp)
movb   $0x20,-0x7b(%rbp)
mov    %rcx,%rax
shr    $0x18,%eax
mov    %al,-0x7a(%rbp)
mov    %rcx,%rax
shr    $0x10,%eax
mov    %al,-0x79(%rbp)
mov    %rcx,%rax
shr    $0x8,%eax
mov    %al,-0x78(%rbp)
mov    %cl,-0x77(%rbp)
lea    -0x80(%rbp),%rax
mov    $0x40,%r8d
mov    $0xa,%r9d
lea    0x5fd8(%rip),%rcx        # 303d7 <png_pass_inc.54+0x22>
mov    %rsi,-0x40(%rbp)
mov    %rdx,-0x38(%rbp)
mov    %r9,%rdx
mov    %r8,%rsi
mov    %rdi,%r15
mov    %rax,%rdi
callq  ad20 <png_safecat>
mov    %r15,%rdi
lea    -0x80(%rbp),%rsi
callq  5390 <png_warning@plt>
mov    0x138(%r15),%eax
cmp    $0x49444154,%eax
je     2a54d <png_deflate_claim+0x2bd>
movl   $0x0,0x138(%r15)
mov    -0x38(%rbp),%r11
mov    -0x40(%rbp),%rsi
jmpq   2a2b7 <png_deflate_claim+0x27>
mov    0x130(%r15),%eax
and    $0x1,%eax
test   %eax,%eax
jne    2a568 <png_deflate_claim+0x2d8>
movzbl 0x266(%r15),%eax
cmp    $0x8,%al
jne    2a579 <png_deflate_claim+0x2e9>
mov    $0x1,%eax
jmpq   2a30a <png_deflate_claim+0x7a>
lea    0x1f(%r14),%ecx
shl    %cl,%eax
lea    0x106(%r11),%rcx
jmpq   2a58c <png_deflate_claim+0x2fc>
lea    0x5f62(%rip),%rsi        # 303f5 <png_pass_inc.54+0x40>
mov    %r15,%rdi
callq  5390 <png_warning@plt>
mov    %rbx,%rdx
mov    %r13,%rdi
mov    %r12,%r10
mov    0x130(%r15),%eax
and    $0xfffffffd,%eax
mov    %eax,0x130(%r15)
mov    -0x20(%rbp),%r13
mov    -0x18(%rbp),%r12
mov    -0x10(%rbp),%rbx
mov    -0x40(%rbp),%r9
mov    -0x38(%rbp),%r8
mov    -0x8(%rbp),%rsi
movq   $0x0,0x140(%r15)
movl   $0x0,0x148(%r15)
movq   $0x0,0x158(%r15)
movl   $0x0,0x160(%r15)
mov    0x130(%r15),%eax
and    $0x2,%eax
test   %eax,%eax
jne    2a598 <png_deflate_claim+0x308>
sub    $0x10,%rsp
lea    0x5efb(%rip),%rax        # 30411 <png_pass_inc.54+0x5c>
mov    %rax,(%rsp)
mov    %r14,%rcx
mov    %rsi,%r14
mov    %r10,%rsi
movl   $0x70,0x8(%rsp)
callq  53b0 <deflateInit2_@plt>
add    $0x10,%rsp
test   %eax,%eax
jne    2a5a0 <png_deflate_claim+0x310>
mov    0x130(%r15),%eax
or     $0x2,%eax
mov    %eax,0x130(%r15)
xor    %eax,%eax
jmp    2a5a0 <png_deflate_claim+0x310>
lea    0x5e92(%rip),%rax        # 303e6 <png_pass_inc.54+0x31>
mov    %rax,0x170(%r15)
mov    $0xfffffffffffffffe,%rax
mov    -0x30(%rbp),%r15
leaveq 
retq   
movslq 0x1cc(%r15),%r9
mov    $0x1,%eax
jmpq   2a30a <png_deflate_claim+0x7a>
mov    $0x1,%eax
mov    %rax,%r9
jmpq   2a30a <png_deflate_claim+0x7a>
shr    %eax
add    $0xffffffff,%r14d
mov    %eax,%edi
cmp    %rcx,%rdi
jae    2a586 <png_deflate_claim+0x2f6>
jmpq   2a317 <png_deflate_claim+0x87>
mov    %rsi,%r14
callq  52e0 <deflateReset@plt>
test   %eax,%eax
je     2a5bf <png_deflate_claim+0x32f>
mov    %r15,%rdi
mov    %rax,%r15
mov    %r15,%rsi
callq  6910 <png_zstream_error>
mov    %r15,%rax
mov    -0x28(%rbp),%r14
mov    -0x30(%rbp),%r15
leaveq 
retq   
mov    %r14d,0x138(%r15)
mov    -0x28(%rbp),%r14
xor    %eax,%eax
mov    -0x30(%rbp),%r15
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   (%rax)

000000000002a5e0 <png_text_compress_init>:
push   %rbp
mov    %rsp,%rbp
mov    %rsi,(%rdi)
mov    %rdx,0x8(%rdi)
movl   $0x0,0x10(%rdi)
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)
nop

000000000002a600 <png_text_compress>:
push   %rbp
mov    %rsp,%rbp
sub    $0x50,%rsp
mov    %r15,-0x38(%rbp)
mov    %rdi,-0x50(%rbp)
mov    %rcx,-0x48(%rbp)
mov    %rdx,%r15
mov    0x8(%r15),%rdx
callq  2a290 <png_deflate_claim>
test   %eax,%eax
je     2a62a <png_text_compress+0x2a>
mov    -0x38(%rbp),%r15
leaveq 
retq   
mov    0x8(%r15),%r11
mov    (%r15),%rax
mov    -0x50(%rbp),%rdi
mov    %rax,0x140(%rdi)
movl   $0x0,0x148(%rdi)
lea    0x14(%r15),%rax
mov    %rax,-0x8(%rbp)
mov    %rax,0x158(%rdi)
movl   $0x400,0x160(%rdi)
xor    %esi,%esi
lea    0x140(%rdi),%r9
mov    %r9,-0x40(%rbp)
lea    0x1b0(%rdi),%r10
mov    $0xffffffff,%eax
mov    $0x4,%ecx
mov    $0x400,%edx
mov    $0xfffffffe,%r8d
mov    %r15,-0x10(%rbp)
mov    %rbx,-0x18(%rbp)
mov    %r12,-0x20(%rbp)
mov    %r13,-0x28(%rbp)
mov    %r14,-0x30(%rbp)
mov    %rdx,%rbx
mov    %r9,%r12
mov    %r10,%r13
mov    %r11,%r14
mov    %rdi,%r15
mov    -0x48(%rbp),%rdi
jmp    2a6c7 <png_text_compress+0xc7>
mov    $0xffffffff,%eax
mov    $0xfffffffe,%r8d
mov    $0x4,%ecx
xor    %esi,%esi
mov    -0x48(%rbp),%rdi
cmp    %r8,%r14
ja     2a6cf <png_text_compress+0xcf>
mov    %r14,%rax
mov    %eax,0x148(%r15)
mov    %eax,%eax
mov    %r14,%rdx
sub    %rax,%rdx
mov    0x160(%r15),%r8d
test   %r8d,%r8d
je     2a758 <png_text_compress+0x158>
cmp    %rax,%r14
jne    2a6f2 <png_text_compress+0xf2>
mov    %rcx,%rsi
mov    %rdx,%r14
mov    %r12,%rdi
callq  5330 <deflate@plt>
mov    0x148(%r15),%ecx
movl   $0x0,0x148(%r15)
add    %rcx,%r14
test   %eax,%eax
je     2a6b1 <png_text_compress+0xb1>
mov    %rax,%r12
xor    %esi,%esi
mov    -0x48(%rbp),%rdi
mov    0x160(%r15),%eax
movl   $0x0,0x160(%r15)
sub    %eax,%ebx
mov    -0x10(%rbp),%r13
mov    %ebx,0x10(%r13)
lea    (%rdi,%rbx,1),%eax
cmp    $0x7ffffffe,%eax
ja     2a791 <png_text_compress+0x191>
mov    %rsi,%rbx
mov    %r15,%rdi
mov    %r12,%rsi
callq  6910 <png_zstream_error>
mov    %rbx,%rsi
jmp    2a7a6 <png_text_compress+0x1a6>
lea    (%rbx,%rdi,1),%r8d
cmp    $0x7fffffff,%r8d
ja     2a7d0 <png_text_compress+0x1d0>
mov    0x0(%r13),%rdi
test   %rdi,%rdi
je     2a7df <png_text_compress+0x1df>
mov    %rdi,%r13
lea    0x8(%r13),%rdi
mov    %rdi,0x158(%r15)
mov    0x1b8(%r15),%edi
mov    %edi,0x160(%r15)
add    %edi,%ebx
jmpq   2a6ea <png_text_compress+0xea>
lea    0x5c80(%rip),%rax        # 30418 <png_pass_inc.54+0x63>
mov    %rax,0x170(%r15)
mov    $0xfffffffffffffffc,%r12
movl   $0x0,0x138(%r15)
cmp    $0x1,%r12d
je     2a829 <png_text_compress+0x229>
mov    %r12,%rax
mov    -0x30(%rbp),%r14
mov    -0x28(%rbp),%r13
mov    -0x20(%rbp),%r12
mov    -0x18(%rbp),%rbx
mov    -0x38(%rbp),%r15
leaveq 
retq   
mov    %rdx,%r14
mov    $0xfffffffffffffffc,%r12
jmpq   2a71f <png_text_compress+0x11f>
mov    0x1b8(%r15),%ecx
lea    0x8(%rcx),%rsi
mov    %r15,%rdi
mov    %rdx,-0x50(%rbp)
mov    %r13,%r12
mov    %rax,%r13
callq  c940 <png_malloc_base>
test   %rax,%rax
je     2a849 <png_text_compress+0x249>
movq   $0x0,(%rax)
mov    %rax,(%r12)
mov    %r13,%rcx
mov    %rax,%r13
mov    %rcx,%rax
mov    $0x4,%ecx
xor    %esi,%esi
mov    -0x50(%rbp),%rdx
mov    -0x40(%rbp),%r12
jmpq   2a771 <png_text_compress+0x171>
test   %r14,%r14
je     2a85f <png_text_compress+0x25f>
mov    $0x1,%eax
mov    -0x30(%rbp),%r14
mov    -0x28(%rbp),%r13
mov    -0x20(%rbp),%r12
mov    -0x18(%rbp),%rbx
mov    -0x38(%rbp),%r15
leaveq 
retq   
xor    %esi,%esi
mov    -0x50(%rbp),%r14
mov    $0xfffffffffffffffc,%r12
mov    -0x48(%rbp),%rdi
jmpq   2a71f <png_text_compress+0x11f>
mov    0x8(%r13),%rax
mov    %rsi,%r12
mov    %rax,%rsi
mov    -0x8(%rbp),%rdi
callq  2a1f0 <optimize_cmf>
mov    %r12,%rax
mov    -0x30(%rbp),%r14
mov    -0x28(%rbp),%r13
mov    -0x20(%rbp),%r12
mov    -0x18(%rbp),%rbx
mov    -0x38(%rbp),%r15
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

000000000002a890 <png_write_compressed_data_out>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %r12,-0x8(%rbp)
mov    %r13,-0x10(%rbp)
mov    %r14,-0x18(%rbp)
mov    %r15,-0x20(%rbp)
mov    0x10(%rsi),%r12d
mov    0x1b0(%rdi),%r14
add    $0x14,%rsi
mov    %rbx,%r13
mov    %rdi,%rbx
mov    $0x400,%eax
jmp    2a8ef <png_write_compressed_data_out+0x5f>
mov    %r12,%r15
mov    %r15d,%edx
mov    %rbx,%rdi
callq  5100 <png_write_chunk_data@plt>
cmp    %r12d,%r15d
je     2a8f9 <png_write_compressed_data_out+0x69>
test   %r14,%r14
je     2a8f9 <png_write_compressed_data_out+0x69>
mov    0x1b8(%rbx),%eax
mov    (%r14),%rcx
sub    %r15d,%r12d
lea    0x8(%r14),%rsi
mov    %rcx,%r14
cmp    %r12d,%eax
ja     2a8c4 <png_write_compressed_data_out+0x34>
mov    %rax,%r15
jmp    2a8c7 <png_write_compressed_data_out+0x37>
cmp    %r12d,%r15d
jne    2a913 <png_write_compressed_data_out+0x83>
mov    %r13,%rbx
mov    -0x20(%rbp),%r15
mov    -0x18(%rbp),%r14
mov    -0x10(%rbp),%r13
mov    -0x8(%rbp),%r12
leaveq 
retq   
mov    %rbx,%rdi
lea    0x5b14(%rip),%rsi        # 30431 <png_pass_inc.54+0x7c>
callq  5470 <png_error@plt>
data16 nopw %cs:0x0(%rax,%rax,1)
nopl   (%rax)

000000000002a930 <png_write_filtered_row>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x8(%rbp)
xor    %ecx,%ecx
mov    %rdi,%r15
callq  27db0 <png_compress_IDAT>
mov    0x220(%r15),%rax
test   %rax,%rax
je     2a967 <png_write_filtered_row+0x37>
mov    0x228(%r15),%rcx
mov    %rcx,0x220(%r15)
mov    %rax,0x228(%r15)
mov    %r15,%rdi
callq  293b0 <png_write_finish_row>
mov    0x29c(%r15),%eax
add    $0x1,%eax
mov    %eax,0x29c(%r15)
mov    0x298(%r15),%ecx
test   %ecx,%ecx
jne    2a991 <png_write_filtered_row+0x61>
mov    -0x8(%rbp),%r15
leaveq 
retq   
cmp    %eax,%ecx
jbe    2a99b <png_write_filtered_row+0x6b>
mov    -0x8(%rbp),%r15
leaveq 
retq   
mov    %r15,%rdi
callq  58c0 <png_write_flush@plt>
mov    -0x8(%rbp),%r15
leaveq 
retq   
nopl   0x0(%rax)

000000000002a9b0 <png_setup_sub_row>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %rcx,-0x10(%rbp)
mov    0x230(%rdi),%rax
movb   $0x1,(%rax)
mov    %esi,%r10d
mov    0x228(%rdi),%rcx
add    $0x1,%rcx
mov    0x230(%rdi),%rsi
add    $0x1,%rsi
mov    $0x100,%r11d
xor    %r8d,%r8d
mov    %r8,%rax
jmp    2aa12 <png_setup_sub_row+0x62>
movzbl (%rcx),%r9d
mov    %r9b,(%rsi)
cmp    $0x7f,%r9b
jbe    2aa00 <png_setup_sub_row+0x50>
neg    %r9d
add    %r11d,%r9d
mov    %r9d,%r9d
add    %r9,%rax
add    $0x1,%rcx
add    $0x1,%rsi
add    $0x1,%r8
cmp    %r10,%r8
jb     2a9ed <png_setup_sub_row+0x3d>
mov    0x228(%rdi),%rdi
add    $0x1,%rdi
mov    %r15,-0x8(%rbp)
mov    -0x10(%rbp),%r15
jmp    2aa65 <png_setup_sub_row+0xb5>
movzbl (%rcx),%r9d
movzbl (%rdi),%r10d
sub    %r10b,%r9b
movzbl %r9b,%r10d
mov    %r9b,(%rsi)
cmp    $0x7f,%r9b
jbe    2aa4a <png_setup_sub_row+0x9a>
neg    %r10d
add    %r11d,%r10d
mov    %r10d,%r9d
add    %r9,%rax
cmp    %r15,%rax
ja     2aa70 <png_setup_sub_row+0xc0>
add    $0x1,%rcx
add    $0x1,%rdi
add    $0x1,%rsi
add    $0x1,%r8
cmp    %rdx,%r8
jb     2aa2c <png_setup_sub_row+0x7c>
mov    -0x8(%rbp),%r15
leaveq 
retq   
mov    -0x8(%rbp),%r15
leaveq 
retq   
nopw   %cs:0x0(%rax,%rax,1)

000000000002aa80 <png_setup_sub_row_only>:
push   %rbp
mov    %rsp,%rbp
mov    0x230(%rdi),%rax
movb   $0x1,(%rax)
mov    %esi,%r9d
mov    0x228(%rdi),%rax
add    $0x1,%rax
mov    0x230(%rdi),%rcx
add    $0x1,%rcx
xor    %esi,%esi
jmp    2aabe <png_setup_sub_row_only+0x3e>
movzbl (%rax),%r8d
mov    %r8b,(%rcx)
add    $0x1,%rax
add    $0x1,%rcx
add    $0x1,%rsi
cmp    %r9,%rsi
jb     2aaab <png_setup_sub_row_only+0x2b>
mov    0x228(%rdi),%rdi
add    $0x1,%rdi
jmp    2aaee <png_setup_sub_row_only+0x6e>
movzbl (%rax),%r8d
movzbl (%rdi),%r9d
sub    %r9b,%r8b
mov    %r8b,(%rcx)
add    $0x1,%rsi
add    $0x1,%rax
add    $0x1,%rdi
add    $0x1,%rcx
cmp    %rdx,%rsi
jb     2aad0 <png_setup_sub_row_only+0x50>
leaveq 
retq   
data16 nopw %cs:0x0(%rax,%rax,1)

000000000002ab00 <png_setup_up_row>:
push   %rbp
mov    %rsp,%rbp
sub    $0x10,%rsp
mov    %r15,-0x8(%rbp)
mov    0x230(%rdi),%rax
movb   $0x2,(%rax)
mov    0x228(%rdi),%rcx
add    $0x1,%rcx
mov    0x220(%rdi),%r8
add    $0x1,%r8
mov    0x230(%rdi),%rdi
add    $0x1,%rdi
xor    %r9d,%r9d
mov    $0x100,%r15d
mov    %r9,%rax
jmp    2ab7e <png_setup_up_row+0x7e>
movzbl (%rcx),%r10d
movzbl (%r8),%r11d
sub    %r11b,%r10b
movzbl %r10b,%r11d
mov    %r10b,(%rdi)
cmp    $0x7f,%r10b
jbe    2ab63 <png_setup_up_row+0x63>
neg    %r11d
add    %r15d,%r11d
mov    %r11d,%r10d
add    %r10,%rax
cmp    %rdx,%rax
ja     2ab89 <png_setup_up_row+0x89>
add    $0x1,%rcx
add    $0x1,%r8
add    $0x1,%rdi
add    $0x1,%r9
cmp    %rsi,%r9
jb     2ab45 <png_setup_up_row+0x45>
mov    -0x8(%rbp),%r15
leaveq 
retq   
mov    -0x8(%rbp),%r15
leaveq 
retq   
nop

000000000002ab90 <png_setup_up_row_only>:
push   %rbp
mov    %rsp,%rbp
mov    0x230(%rdi),%rax
movb   $0x2,(%rax)
mov    0x228(%rdi),%rax
add    $0x1,%rax
mov    0x220(%rdi),%rcx
add    $0x1,%rcx
mov    0x230(%rdi),%rdx
add    $0x1,%rdx
xor    %edi,%edi
jmp    2abe1 <png_setup_up_row_only+0x51>
movzbl (%rax),%r8d
movzbl (%rcx),%r9d
sub    %r9b,%r8b
mov    %r8b,(%rdx)
add    $0x1,%rdi
add    $0x1,%rax
add    $0x1,%rcx
add    $0x1,%rdx
cmp    %rsi,%rdi
jb     2abc3 <png_setup_up_row_only+0x33>
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

000000000002abf0 <png_setup_avg_row>:
push   %rbp
mov    %rsp,%rbp
sub    $0x20,%rsp
mov    %rdi,-0x18(%rbp)
mov    %rdx,-0x10(%rbp)
mov    %rcx,-0x20(%rbp)
mov    0x230(%rdi),%rax
movb   $0x3,(%rax)
mov    0x228(%rdi),%rcx
add    $0x1,%rcx
mov    0x220(%rdi),%rdx
add    $0x1,%rdx
mov    0x230(%rdi),%rdi
add    $0x1,%rdi
mov    $0x100,%r11d
xor    %r8d,%r8d
mov    %r8,%rax
jmp    2ac74 <png_setup_avg_row+0x84>
movzbl (%rcx),%r9d
movzbl (%rdx),%r10d
shr    %r10d
sub    %r10b,%r9b
movzbl %r9b,%r10d
mov    %r9b,(%rdi)
cmp    $0x7f,%r9b
jbe    2ac5e <png_setup_avg_row+0x6e>
neg    %r10d
add    %r11d,%r10d
mov    %r10d,%r9d
add    %r9,%rax
add    $0x1,%rcx
add    $0x1,%rdx
add    $0x1,%rdi
add    $0x1,%r8d
cmp    %esi,%r8d
jb     2ac3d <png_setup_avg_row+0x4d>
mov    -0x18(%rbp),%rsi
mov    0x228(%rsi),%rsi
add    $0x1,%rsi
mov    %r14,-0x8(%rbp)
mov    %r15,-0x18(%rbp)
mov    -0x20(%rbp),%r15
mov    -0x10(%rbp),%r14
jmp    2ace1 <png_setup_avg_row+0xf1>
movzbl (%rsi),%r10d
movzbl (%rdx),%r9d
add    %r10d,%r9d
shr    %r9d
movzbl (%rcx),%r10d
sub    %r9b,%r10b
movzbl %r10b,%r9d
mov    %r10b,(%rdi)
cmp    $0x7f,%r10b
jbe    2acc2 <png_setup_avg_row+0xd2>
neg    %r9d
add    %r11d,%r9d
mov    %r9d,%r9d
add    %r9,%rax
cmp    %r15,%rax
ja     2acf3 <png_setup_avg_row+0x103>
add    $0x1,%rcx
add    $0x1,%rsi
add    $0x1,%rdx
add    $0x1,%rdi
add    $0x1,%r8d
mov    %r8d,%r9d
cmp    %r14,%r9
jb     2ac9a <png_setup_avg_row+0xaa>
mov    -0x18(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
mov    -0x18(%rbp),%r15
mov    -0x8(%rbp),%r14
leaveq 
retq   
nopl   (%rax)

000000000002ad00 <png_setup_avg_row_only>:
push   %rbp
mov    %rsp,%rbp
mov    0x230(%rdi),%rax
movb   $0x3,(%rax)
mov    0x228(%rdi),%rax
add    $0x1,%rax
mov    0x220(%rdi),%rcx
add    $0x1,%rcx
mov    0x230(%rdi),%r8
add    $0x1,%r8
xor    %r9d,%r9d
jmp    2ad55 <png_setup_avg_row_only+0x55>
movzbl (%rax),%r10d
movzbl (%rcx),%r11d
shr    %r11d
sub    %r11b,%r10b
mov    %r10b,(%r8)
add    $0x1,%rax
add    $0x1,%rcx
add    $0x1,%r8
add    $0x1,%r9d
cmp    %esi,%r9d
jb     2ad34 <png_setup_avg_row_only+0x34>
mov    0x228(%rdi),%rsi
add    $0x1,%rsi
jmp    2ad91 <png_setup_avg_row_only+0x91>
movzbl (%rsi),%r10d
movzbl (%rcx),%edi
add    %r10d,%edi
shr    %edi
movzbl (%rax),%r10d
sub    %dil,%r10b
mov    %r10b,(%r8)
add    $0x1,%r9d
add    $0x1,%rax
add    $0x1,%rsi
add    $0x1,%rcx
add    $0x1,%r8
mov    %r9d,%edi
cmp    %rdx,%rdi
jb     2ad67 <png_setup_avg_row_only+0x67>
leaveq 
retq   
nopl   0x0(%rax,%rax,1)

000000000002ada0 <png_setup_paeth_row>:
push   %rbp
mov    %rsp,%rbp
sub    $0x50,%rsp
mov    %rdi,-0x40(%rbp)
mov    %rdx,-0x38(%rbp)
mov    %rcx,-0x48(%rbp)
mov    0x230(%rdi),%rax
movb   $0x4,(%rax)
mov    %esi,%r10d
mov    0x228(%rdi),%rcx
add    $0x1,%rcx
mov    0x220(%rdi),%rdx
add    $0x1,%rdx
mov    0x230(%rdi),%rsi
add    $0x1,%rsi
mov    $0x100,%r11d
xor    %r8d,%r8d
mov    %r8,%rax
jmp    2ae23 <png_setup_paeth_row+0x83>
movzbl (%rcx),%edi
movzbl (%rdx),%r9d
sub    %r9b,%dil
movzbl %dil,%r9d
mov    %dil,(%rsi)
cmp    $0x7f,%dil
jbe    2ae0d <png_setup_paeth_row+0x6d>
neg    %r9d
add    %r11d,%r9d
mov    %r9d,%edi
add    %rdi,%rax
add    $0x1,%rcx
add    $0x1,%rdx
add    $0x1,%rsi
add    $0x1,%r8
cmp    %r10,%r8
jb     2adf0 <png_setup_paeth_row+0x50>
mov    -0x40(%rbp),%r9
mov    0x220(%r9),%rdi
add    $0x1,%rdi
mov    0x228(%r9),%r9
add    $0x1,%r9
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
mov    -0x48(%rbp),%r11
mov    -0x38(%rbp),%rbx
jmp    2aeaf <png_setup_paeth_row+0x10f>
cmp    %ebx,%edi
jg     2ae67 <png_setup_paeth_row+0xc7>
mov    %r14,%r10
movzbl (%rcx),%edi
sub    %r10b,%dil
movzbl %dil,%ebx
mov    %dil,(%rsi)
cmp    $0x7f,%dil
ja     2aeca <png_setup_paeth_row+0x12a>
mov    %rbx,%rdi
mov    %edi,%edi
add    %rdi,%rax
cmp    %r11,%rax
ja     2aed3 <png_setup_paeth_row+0x133>
add    $0x1,%rcx
add    $0x1,%rdx
mov    -0x40(%rbp),%rdi
add    $0x1,%rdi
mov    -0x48(%rbp),%rbx
lea    0x1(%rbx),%r9
add    $0x1,%rsi
mov    -0x30(%rbp),%rbx
lea    0x1(%rbx),%r8
mov    -0x38(%rbp),%rbx
cmp    %rbx,%r8
jb     2aee9 <png_setup_paeth_row+0x149>
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
mov    $0x100,%edi
sub    %ebx,%edi
jmp    2ae7d <png_setup_paeth_row+0xdd>
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
movzbl (%r9),%r15d
movzbl (%rdx),%r14d
movzbl (%rdi),%r10d
mov    %r10,%r12
sub    %r14d,%r12d
mov    %r14,%rbx
sub    %r10d,%ebx
test   %ebx,%ebx
js     2af0a <png_setup_paeth_row+0x16a>
mov    %rbx,%r13
jmp    2af0d <png_setup_paeth_row+0x16d>
mov    %r12,%r13
mov    %r8,-0x30(%rbp)
mov    %r10,%r8
sub    %r15d,%r8d
mov    %r9,-0x48(%rbp)
mov    %r15,%r9
sub    %r10d,%r9d
test   %r9d,%r9d
js     2af2f <png_setup_paeth_row+0x18f>
mov    %rdi,-0x40(%rbp)
mov    %r9,%rdi
jmp    2af36 <png_setup_paeth_row+0x196>
mov    %rdi,-0x40(%rbp)
mov    %r8,%rdi
add    %r9d,%ebx
test   %ebx,%ebx
jns    2af41 <png_setup_paeth_row+0x1a1>
lea    (%r8,%r12,1),%ebx
cmp    %r13d,%edi
jl     2ae60 <png_setup_paeth_row+0xc0>
cmp    %ebx,%r13d
jg     2ae60 <png_setup_paeth_row+0xc0>
mov    %r15,%r10
jmpq   2ae67 <png_setup_paeth_row+0xc7>
nopl   0x0(%rax,%rax,1)

000000000002af60 <png_setup_paeth_row_only>:
push   %rbp
mov    %rsp,%rbp
sub    $0x40,%rsp
mov    %rdx,-0x38(%rbp)
mov    0x230(%rdi),%rax
movb   $0x4,(%rax)
mov    %esi,%r10d
mov    0x228(%rdi),%rax
add    $0x1,%rax
mov    0x220(%rdi),%rcx
add    $0x1,%rcx
mov    0x230(%rdi),%rsi
add    $0x1,%rsi
xor    %r8d,%r8d
jmp    2afbd <png_setup_paeth_row_only+0x5d>
movzbl (%rax),%r9d
movzbl (%rcx),%r11d
sub    %r11b,%r9b
mov    %r9b,(%rsi)
add    $0x1,%rax
add    $0x1,%rcx
add    $0x1,%rsi
add    $0x1,%r8
cmp    %r10,%r8
jb     2af9f <png_setup_paeth_row_only+0x3f>
mov    0x220(%rdi),%r9
add    $0x1,%r9
mov    0x228(%rdi),%rdi
add    $0x1,%rdi
mov    %rbx,-0x8(%rbp)
mov    %r12,-0x10(%rbp)
mov    %r13,-0x18(%rbp)
mov    %r14,-0x20(%rbp)
mov    %r15,-0x28(%rbp)
jmp    2b01c <png_setup_paeth_row_only+0xbc>
cmp    %edx,%edi
jg     2aff5 <png_setup_paeth_row_only+0x95>
mov    %r12,%rbx
movzbl (%rax),%edx
sub    %bl,%dl
mov    %dl,(%rsi)
add    $0x1,%r8
add    $0x1,%rax
add    $0x1,%rcx
add    $0x1,%r9
mov    -0x30(%rbp),%rdx
lea    0x1(%rdx),%rdi
add    $0x1,%rsi
mov    -0x38(%rbp),%rdx
cmp    %rdx,%r8
jb     2b037 <png_setup_paeth_row_only+0xd7>
mov    -0x28(%rbp),%r15
mov    -0x20(%rbp),%r14
mov    -0x18(%rbp),%r13
mov    -0x10(%rbp),%r12
mov    -0x8(%rbp),%rbx
leaveq 
retq   
movzbl (%rdi),%r15d
movzbl (%rcx),%r12d
movzbl (%r9),%ebx
mov    %rbx,%r11
sub    %r12d,%r11d
mov    %r12,%r14
sub    %ebx,%r14d
test   %r14d,%r14d
js     2b059 <png_setup_paeth_row_only+0xf9>
mov    %r14,%r10
jmp    2b05c <png_setup_paeth_row_only+0xfc>
mov    %r11,%r10
mov    %rbx,%r13
sub    %r15d,%r13d
mov    %r15,%rdx
sub    %ebx,%edx
test   %edx,%edx
js     2b074 <png_setup_paeth_row_only+0x114>
mov    %rdi,-0x30(%rbp)
mov    %rdx,%rdi
jmp    2b07b <png_setup_paeth_row_only+0x11b>
mov    %rdi,-0x30(%rbp)
mov    %r13,%rdi
add    %r14d,%edx
test   %edx,%edx
jns    2b087 <png_setup_paeth_row_only+0x127>
lea    0x0(%r13,%r11,1),%edx
cmp    %r10d,%edi
jl     2afee <png_setup_paeth_row_only+0x8e>
cmp    %edx,%r10d
jg     2afee <png_setup_paeth_row_only+0x8e>
mov    %r15,%rbx
jmpq   2aff5 <png_setup_paeth_row_only+0x95>

Disassembly of section .fini:

000000000002b0a4 <_fini>:
endbr64 
sub    $0x8,%rsp
add    $0x8,%rsp
retq   
